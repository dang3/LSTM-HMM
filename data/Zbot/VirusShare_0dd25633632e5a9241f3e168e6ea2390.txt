call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
lcall
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
stos
pushl
shlb
pop
add
call
add
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
incl
je
add
dec
and
add
and
add
and
add
and
add
add
add
add
mov
and
add
and
add
and
add
and
add
add
adc
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
xor
add
push
and
add
add
and
add
add
mov
add
and
add
add
add
and
add
add
pop
and
add
add
add
add
mov
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
add
and
add
xchg
add
mov
and
add
add
add
add
mov
and
add
and
add
and
add
and
add
add
adc
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
xor
add
push
and
add
add
and
add
add
mov
add
and
add
add
add
and
add
add
pop
and
add
add
add
add
mov
add
add
add
add
imul
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
xchg
add
je
imul
je
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
inc
imul
popa
outsb
arpl
dec
outsl
add
aam
inc
gs
jb
jbe
push
jns
gs
add
dec
jo
outsb
dec
jne
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
dec
add
insb
outsb
inc
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
popa
jo
gs
jb
jns
enter
jae
gs
popa
insb
jne
add
add
popa
jo
jb
add
push
push
je
imul
inc
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
cmp
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
insb
outsl
jb
xor
jae
push
push
popa
je
add
jns
inc
gs
push
jns
push
imul
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
addb
jae
push
arpl
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
imul
gs
add
xchg
dec
jo
outsb
push
push
popa
je
add
gs
push
gs
dec
gs
imul
gs
imul
gs
add
add
je
push
outsl
outsl
insb
add
aaa
add
ja
push
fs
push
dec
inc
dec
inc
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
lcall
jle
add
jp
lods
lods
lods
add
test
push
mov
mov
mov
les
int3
int3
into
rcl
in
rcl
shl
rcl
iret
hlt
int
int3
hlt
leave
leave
repz
leave
out
mov
mov
mov
lods
lods
lea
cltd
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
lret
rcl
cld
xlat
fdivr
fdivr
xlat
fcomp
aam
ror
iret
dec
int
aam
aam
rcl
sar
ret
std
mov
mov
scas
iret
movsb
mov
xchg
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
lods
sbb
mov
jnp
mov
sar
lret
lret
leave
dec
iret
sar
aam
xlat
xlat
fdivr
xlat
xlat
call
aam
dec
int
dec
int
call
aam
into
int
inc
mov
mov
ljmp
test
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
into
int3
call
rcl
call
fcom
call
xlat
call
aam
dec
int3
int
lret
lret
into
int
inc
mov
mov
mov
cmpsb
test
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
fs
ds
sbb
sbb
or
sbb
xor
ss
cmp
cmp
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
rcl
call
aam
call
aam
dec
rcl
dec
leave
enter
inc
ret
mov
mov
ljmp
movsb
movsb
popf
sahf
popf
cwtl
xchg
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jge
jg
jg
jb
jo
bound
mov
cmp
cmp
inc
inc
inc
mov
outsl
outsb
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
dec
lret
leave
leave
inc
ret
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
cltd
lcall
cmp
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsb
outsl
outsb
add
pop
or
pusha
mov
incb
jl
jl
jnp
jo
outsb
out
addr16
jne
jae
jge
jle
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
test
sahf
popf
sahf
decl
xchg
incl
xchg
xchg
mov
mov
xchg
mov
jp
jp
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
mov
addb
decb
xchg
jge
jge
jno
jno
jne
je
jle
jge
test
xchg
addr16
cmp
and
jle
cmp
movsl
movsb
movsb
shrb
lods
lods
sti
stos
lods
lods
lods
stos
lods
test
movsb
mov
xchg
xchg
xchg
decl
jle
js
jns
jl
jns
mov
xchg
movsb
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
prefetch
inc
inc
inc
dec
imul
xchg
leave
cltd
lcall
fwait
cltd
lcall
mov
mov
mov
lea
cltd
jmp
lods
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
lods
test
add
pop
adc
test
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
popf
popf
pushf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
nop
xchg
in
xchg
push
jne
cmovp
or
sub
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
xchg
lcall
cmpsb
test
lods
test
pushl
cmpsl
scas
mov
xchg
test
std
ret
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
cwtl
fwait
decl
mov
call
xchg
xchg
xchg
xchg
pushf
pushf
sahf
movsb
movsl
mov
movsl
mov
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
je
jp
jge
addl
int
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsb
mov
mov
mov
lods
lods
lods
mov
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
xchg
call
xchg
xchg
call
cwtl
xchg
cltd
cltd
lcall
sahf
mov
std
movsb
movsb
mov
out
xchg
xchg
nop
nop
xchg
les
cltd
lcall
mov
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jl
mov
jp
mov
je
mov
outsl
ljmp
pcmpgtd
lods
or
or
mov
jle
mov
mov
lods
pushf
movsl
movsb
movsb
and
add
add
pop
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
sahf
lcall
sahf
sahf
call
xchg
cwtl
call
xchg
xchg
call
xchg
fwait
cld
cwtl
cwtl
sahf
stc
sahf
lcall
pushf
mov
xchg
insb
xchg
xchg
pop
jle
xchg
dec
js
cltd
cmp
fwait
sub
pushf
pop
imul
movsl
push
ljmp
ljmp
pcmpgtd
lods
adc
scas
adc
mov
push
mov
push
mov
insb
mov
lcall
lods
lods
scas
scas
movsb
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
les
popf
call
pushf
sahf
jmp
movsl
movsb
jmp
mov
xchg
decl
mov
decl
js
cltd
jb
lcall
call
sub
decl
pop
call
add
push
lcall
pop
pop
ljmp
sbb
mov
outsl
pushl
jo
mov
and
and
shll
inc
inc
test
ret
xchg
scas
mov
scas
scas
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
scas
mov
shll
lcall
movsl
mov
jmp
stos
test
cmpsb
test
lcall
orb
inc
outsl
decl
sub
mov
popa
decl
or
incl
push
incl
add
nop
add
xchg
add
lcall
jmp
and
mov
jne
mov
sub
shrl
ret
sub
les
dec
cs
das
jg
leave
inc
mov
lea
cld
scas
mov
lret
movsl
dec
mov
mov
add
add
add
stos
mov
push
adc
test
mov
lahf
fwait
lahf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
xchg
incl
or
push
incl
add
test
push
incl
push
decl
add
xchg
add
fwait
add
sahf
add
add
lods
adc
mov
ss
aaa
cmp
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
lcall
scas
lods
lods
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
addps
mov
push
incl
add
mov
push
decl
push
call
add
mov
add
stos
add
jno
les
xchg
lret
inc
dec
inc
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fimull
fmull
fsts
call
xchg
std
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
lcall
adc
jp
movsb
lahf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
sbb
pop
pusha
decl
adc
pop
push
decl
pop
call
add
mov
add
test
add
ja
int
call
push
cwtl
call
push
cltd
fistl
fstl
fists
jmp
push
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
test
sahf
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jns
sahf
cltd
sahf
jmp
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
xchg
and
xchg
pop
call
or
decl
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
fwait
fisubs
fisubs
in
test
in
cmpsl
jmp
data16
ljmp
call
xchg
mov
cmpsl
cmpsb
mov
sahf
lahf
add
inc
aas
adc
jp
xchg
lcall
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
jo,pn
lcall
lcall
or
xchg
add
cltd
add
mov
add
lods
add
mov
pushl
adc
roll
fsubl
jmp
jo
jmp
jno
call
jb
jmp
scas
in
jne
in
je
out
jbe
out
je
jmp
mov
mov
cmpsb
cmpsb
lcall
mov
add
add
add
jg
ds
outsb
js
lea
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
lods
lcall
outsb
jmp
cmp
mov
sbb
call
add
mov
add
stos
add
mov
popa
pushl
add
leave
sbb
fsts
jmp
ja
call
jle
in
xorl
push
test
push
cmpl
mov
mov
stos
test
pushf
pushf
popf
daa
sahf
mov
sahf
add
add
add
pusha
add
ss
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
pushl
outsb
mov
cltd
cmp
inc
jge
movsb
inc
jge
movsl
ss
fwait
sbb
add
pushf
add
add
stos
add
scas
add
mov
data16
mov
add
shlb
cmp
movsb
call
mov
push
mov
push
pop
push
nop
push
xchg
push
xchg
push
mov
out
pop
clc
stos
lods
stos
mov
pushf
popf
xor
popf
popf
add
add
add
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
pushl
mov
mov
inc
ret
inc
ret
inc
mov
jl
lcall
dec
cmp
mov
adc
cltd
add
mov
add
lods
add
mov
fs
mov
add
enter
fdivs
mov
out
xchg
push
cltd
push
cltd
push
lcall
negl
lret
lahf
int3
cli
popf
int
sti
cltd
lret
push
xchg
ret
jmp
mov
inc
mov
shlb
nop
add
add
add
xor
or
cmp
push
dec
dec
jecxz
pusha
popa
call
mov
mov
mov
sar
ret
ret
inc
leave
enter
sar
mov
ljmp
dec
xchg
mov
pop
pop
lcall
add
lods
add
mov
mov
add
enter
rorl
je
filds
out
mov
push
cmpsb
int3
push
movsb
int3
clc
cmpsb
int
cld
test
cld
cmpsl
sar
cli
test
sar
stos
iret
cmpsl
iret
push
sahf
jmp
mov
dec
enter
mov
into
sahf
mov
xchg
add
lcall
xor
add
sub
or
inc
bound
push
xlat
jae
jno
mov
rol
rol
mov
ret
inc
enter
ret
pushl
push
test
scas
push
mov
lods
dec
test
sahf
sbb
pop
jmp
add
mov
arpl
mov
add
int3
add
fadds
jae
ficoms
push
lahf
lret
lods
aam
cld
scas
aad
sti
mov
cli
mov
mov
std
mov
mov
mov
mov
mov
push
movsl
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
vpsubusb
fcom
jmp
fcomp
test
into
int
lret
lret
lret
dec
lret
leave
dec
leave
leave
inc
leave
enter
scas
jmp
push
mov
lods
jg,pt
mov
add
stos
add
mov
fs
mov
add
iret
add
fadds
jb
fiadds
jae
call
jb
cld
lods
sar
cld
mov
mov
fcos
std
mov
xlat
cld
mov
fdivr
std
rcr
std
mov
int
out
enter
into
mov
lahf
mov
or
add
add
xor
add
add
pop
or
enter
jecxz
call
out
test
jecxz
leave
fsubp
fucom
fcmovu
fcomi
xlat
fcmovu
cli
fcomp
std
int
iret
mov
push
test
stos
sub
mov
add
mov
arpl
mov
add
lret
call
add
fildl
ja
in
jbe
out
xor
cli
mov
inc
inc
loopne
std
loopne
inc
loopne
std
fdivrp
std
inc
fdivrp
dec
std
lret
cld
mov
leave
call
lret
mov
mov
xchg
adc
add
add
incl
incb
std
std
incl
repnz
or
in
in
pop
in
out
in
sub
in
in
dec
jmp
call
jmp
aad
fstp
jmp
mov
xchg
cmpsb
cmp
mov
add
ljmp
add
add
lds
imul
add
fadds
jb
fiadds
jbe
ljmp
sti
mov
loop
std
int3
jecxz
dec
out
std
int3
in
dec
jecxz
dec
jecxz
dec
loop
dec
loop
dec
loop
std
shl
std
shl
cli
out
mov
inc
ret
test
cmpsl
mov
xchg
cwtl
add
add
add
incl
std
std
incb
idiv
testl
icebp
repz
push
out
icebp
lock
out
icebp
lock
out
in
pop
loopne
loopne
mov
xchg
sti
mov
push
pop
jmp
add
mov
data16
mov
add
roll
jno
fiaddl
jbe
in
jp
in
adc
cmc
pop
test
cli
mov
std
shl
shl
shr
shl
shl
std
aam
std
out
fsub
fldl2t
std
iret
loop
hlt
ret
in
fcos
lret
repz
xchg
xchg
and
cwtl
xchg
add
std
cld
add
std
clc
add
sti
cli
add
div
or
shlb
mov
jb
negb
add
add
lods
add
mov
add
lret
call
add
fildl
jbe
call
sbb
cli
loopne
std
fsubr
std
fldl2e
fucompp
fucomp
std
fucomp
fucomi
fsubrp
jmp
in
std
fsubrp
cld
shl
push
ret
aam
out
rcl
sar
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
mov
cwtl
repnz
jmp
add
mov
add
into
add
add
fiadds
jne
call
sub
shl
std
fucomip
fucomi
fucomi
call
call
std
aam
cli
shl
sti
shl
clc
iret
fdivrp
clc
int
push
ret
aad
out
mov
xlat
xlat
sti
mov
mov
cltd
fwait
cltd
cmp
fwait
lcall
add
add
fcom
add
mov
sahf
jmp
sub
mov
add
mov
arpl
mov
add
roll
jo
xlat
add
loopne
jp
jmp
xor
cld
leave
loope
cli
lret
sti
stc
mov
sar
repz
iret
push
mov
into
ljmp
call
ret
sar
call
fsub
cmc
loopne
mov
mov
xchg
add
add
add
int
add
mov
cmpsl
loopne
xor
pusha
ljmp
add
mov
add
into
or
rorb
jmp
sbb
jmp
scas
lret
mov
out
enter
ret
cld
fbstp
mov
leave
ljmp
iret
rcl
shl
xlat
fcmovb
out
loopne
jmp
out
lock
out
popf
ljmp
push
lods
lods
lods
adc
cmpsb
test
add
rolb
ret
mov
lahf
stos
aam
dec
cmp
test
insb
scas
and
jns
mov
inc
xchg
ret
stc
lret
test
mov
out
mov
rcl
mov
lret
rcl
int3
mov
iret
shlb
xlat
aam
jg
jb
loopne
gs
in
call
out
jmp
icebp
cmc
hlt
sub
cmc
cmc
and
lock
fcmovnu
or
mov
int3
add
add
add
mov
rolb
mov
stos
xchg
test
sbbl
sarb
test
mov
pushf
lret
mov
leave
int
iret
into
shlb
ror
push
iret
rcl
dec
aad
xlat
inc
aam
aad
aad
xlat
daa
xlat
fstp
sbb
adc
in
push
loopne
jecxz
call
icebp
out
add
cli
testl
std
std
incb
std
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
rcll
lds
enter
int3
leave
daa
lret
ror
and
rcrl
iret
aam
adc
aam
or
xlat
aad
rcr
xlat
add
fcmovnu
add
loopne
add
jecxz
add
jmp
add
fcom
add
std
add
mov
add
ret
ret
les
rol
sub
mov
mov
push
rol
or
enter
leave
add
into
lret
add
aam
add
aam
rcl
aam
aam
aad
aam
add
xlat
loope
aad
add
loopne
add
add
in
add
repnz
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
ret
mov
mov
mov
test
test
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
sarb
aam
iret
shr
rcl
aad
aam
sar
ror
into
cli
int3
int3
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
jg
inc
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
iret
aad
call
aad
call
iret
sar
int
int
int3
lret
int3
inc
mov
mov
icebp
cltd
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
je
jae
fs
dec
dec
inc
cmp
sub
sub
ss
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
int3
int3
inc
mov
rol
pushl
test
sahf
cwtl
xchg
xchg
jmp
jno
xchg
push
pop
pop
dec
add
add
add
add
add
add
jg
jg
jp
jnp
test
jns
imul
movsb
push
push
push
stos
push
insb
insl
push
pop
pop
cmp
cmp
pop
outsl
outsl
jno
mov
scas
pop
mov
mov
mov
mov
mov
rol
vshufpd
mov
mov
mov
ljmp
fwait
pushf
call
xchg
fwait
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
cwtl
cwtl
fcoml
addb
jnp
jl
js
js
jp
jns
jns
jnp
je
jb
push
push
push
cmp
jae
pushf
pushf
pushf
mov
lods
scas
rep
lods
scas
sti
lods
scas
lods
std
test
cmpsl
std
pushf
sahf
popf
call
test
call
mov
lods
jmp
lods
scas
leave
movsb
cmpsb
cmpsb
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsl
outsb
pop
mov
lahf
lcall
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsl
orl
lcall
lea
xchg
xchg
xchg
lcall
movsb
cmpsl
mov
mov
mov
scas
mov
xlat
cmpsl
mov
addl
add
add
popa
pusha
pusha
or
lods
mov
cmpsl
mov
mov
mov
nop
call
lahf
sahf
sti
lahf
mov
lcall
push
push
jo
push
pop
outsl
insb
outsb
outsb
xchg
subl
mov
lcall
fwait
pushl
jo
mov
push
mov
mov
mov
out
lods
stos
insl
test
add
add
add
add
pusha
or
mov
in
mov
xchg
call
cwtl
xchg
lcall
cwtl
cltd
lcall
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
cmp
dec
jnp
movsb
inc
jns
lods
aaa
js
mov
je
scas
pop
insl
pushl
sbb
mov
mov
mov
scas
scas
jle
movsb
movsb
push
pop
popa
popa
or
mov
in
movsl
test
lcall
mov
mov
decl
addl
cld
xchg
pop
cmp
dec
js
cmp
xchg
sub
xchg
sbb
xchg
punpcklwd
sahf
push
pusha
jmp
sbb
mov
insl
pushl
sbb
je
mov
stos
mov
scas
scas
scas
xchg
lahf
sahf
sahf
adc
add
add
pusha
pusha
pusha
or
stos
mov
stos
mov
mov
ljmp
test
lcall
pop
jnp
mov
imul
sub
decl
adc
or
mov
push
call
add
or
and
mov
sub
jg
xor
lret
dec
pop
cwtl
inc
test
mov
test
test
pusha
pusha
pop
or
movsb
test
test
movsl
jmp
scas
scas
pushl
mov
jmp
jb
mov
pop
decl
or
xchg
push
decl
add
xchg
add
sahf
add
add
mov
outsb
inc
aaa
cmp
inc
mov
iret
inc
call
inc
nop
call
inc
xchg
fimull
call
bound
stc
mov
mov
mov
incl
add
add
popa
pusha
pop
or
sahf
mov
ljmp
mov
mov
mov
mov
movsb
test
decl
sbb
lea
pop
decl
add
add
sahf
add
cmpsl
add
scas
add
mov
dec
xchg
call
push
lcall
pop
lahf
jmp
pop
mov
jmp
outsb
cmpsb
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jle
jl
pushf
xchg
cwtl
jecxz
mov
mov
mov
mov
mov
mov
mov
lahf
gs
xchg
sub
imul
and
xchg
push
pop
call
add
add
scas
add
mov
xor
jmp
insl
test
out
lods
call
jb
in
jb
jmp
test
mov
inc
cmpl
add
dec
pop
insl
outsl
imul
xchg
cltd
lcall
mov
mov
sar
mov
xchg
lcall
cmp
popf
sub
cwtl
or
pushf
add
mov
add
mov
fs
or
xlat
inc
xchg
jmp
jns
jmp
mov
push
xchg
push
xchg
fisubl
mov
push
cltd
lcall
sub
push
push
push
dec
pop
gs
xchg
mov
mov
mov
mov
inc
mov
popf
jmp
inc
jg
mov
push
pop
jmp
add
mov
arpl
mov
adc
jmp
pop
mov
push
xchg
xchg
push
cwtl
enter
enter
leave
push
cwtl
jmp
lods
inc
mov
stos
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
xchg
test
movsl
push
mov
lods
dec
cmp
and
add
test
add
add
lret
fsubs
cmp
jnp
push
movsb
lret
push
test
cli
stos
sar
cli
stos
iret
cld
stos
sar
cld
lods
sar
sti
cmpsl
int
out
inc
mov
stos
jne
popf
popf
or
add
add
dec
dec
push
aaa
je
jb
stos
stos
test
out
int
cmc
lret
sti
lret
std
leave
leave
mov
mov
stos
bound
jmp
add
mov
gs
add
iret
add
fildl
xchg
clc
xchg
sti
mov
cld
mov
fdivr
std
mov
xlat
mov
sar
jmp
ret
scas
lods
lods
mov
add
add
add
add
or
rcl
dec
jecxz
loopne
fistps
fcmovnu
fcom
out
mov
gs
test
jb
cmpsb
pop
popa
ljmp
add
lret
call
add
or
dec
mov
sti
std
loop
inc
dec
loopne
dec
fdivrp
dec
loopne
sti
fdivr
out
mov
lret
divb
pushf
popf
sbb
add
add
std
incb
std
incl
ljmp
in
in
in
xor
loop
loop
les
mov
mov
add
mov
fs
add
into
add
faddl
jne
call
outsb
mov
cld
ret
fdivrp
std
shl
call
in
call
in
aam
call
out
std
fsubr
aam
push
xlat
fcmove
sar
mov
mov
add
std
incl
std
incb
cld
std
cld
pop
aam
push
mov
pop
xchg
sahf
or
ljmp
add
add
rolb
jno
loopne
ja
in
and
std
shl
fsubr
fldl2e
cld
cld
fld1
sti
fsub
cld
xlat
call
push
jmp
iret
aad
mov
popf
lahf
das
add
add
int3
int
or
fs
mov
add
mov
add
add
loope
jns
out
xor
cli
lret
loop
clc
lret
fdivrp
test
icebp
rcl
out
ret
out
aad
in
aad
in
aam
in
fucomp
leave
test
stos
das
std
incb
aad
aad
mov
je
or
mov
imul
pop
jno
lret
and
sub
sti
ficoms
in
mov
out
in
lret
mov
loope
mov
lret
leave
faddp
sarb
in
ficompl
in
call
rorl
mov
add
lods
lods
stos
add
xchg
mov
ljmp
xchg
fidivrl
andb
int3
mov
les
aam
lret
insl
aad
iret
pop
aam
rorl
xlat
fdivrs
loopne
in
fsubl
jecxz
repnz
jmp
or
std
incb
incb
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
xor
mov
aam
mov
rcl
or
loope
or
into
into
add
incb
incl
lcall
shufps
or
into
int3
into
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
mov
ret
sarl
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
std
rcl
sar
iret
iret
iret
std
mov
stc
mov
mov
sarl
gs
pop
sbb
add
add
add
add
add
add
add
add
jb
jae
push
inc
inc
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
into
int3
call
aad
dec
into
iret
inc
mov
ljmp
lahf
mov
mov
add
add
add
add
jne
je
test
aad
outsb
outsb
ret
bound
outsb
outsl
insl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jb
and
add
pop
add
add
jb
jb
popf
xchg
pushf
mov
test
mov
xchg
test
addl
dec
dec
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
movsb
cmpsl
cmpsl
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
pushf
sahf
cmc
cwtl
cwtl
cwtl
in
addb
imul
jle
lea
xchg
testl
mov
mov
jb
mov
lods
lods
push
stos
stos
stos
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
lcall
xchg
cltd
lcall
mov
loope
jne
out
xchg
arpl
std
pushf
inc
jbe
movsl
aaa
je
scas
sub
outsl
pushl
cmp
sahf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
sahf
sahf
lahf
jmp
movsl
movsl
call
imul
nop
inc
je
lea
imul
sbb
call
or
mov
sbb
jae
mov
sub
les
xchg
rcrl
subl
jae
push
mov
movsl
test
pushl
scas
mov
mov
sub
adc
xchg
push
incl
add
xchg
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
aam
call
push
xchg
dec
lcall
mov
add
add
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
movsl
call
pop
decl
or
xchg
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsw
call
fwait
mov
mov
test
pop
add
add
popa
arpl
mov
fwait
cld
mov
scas
mov
mov
scas
lcall
jo
cwtl
and
xchg
pop
pop
jmp
add
mov
xor
jmp
jl
out
jle
push
jg
fstps
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
bound
lcall
add
pusha
pushl
insb
fimull
in
mov
push
xchg
clc
cwtl
leave
clc
xchg
enter
inc
mov
movsl
sub
aas
aas
inc
adc
push
xchg
mov
mov
inc
inc
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
aam
ja
jmp
scas
clc
cmpsl
into
stc
lods
sar
sti
scas
sar
cld
lods
sar
cld
scas
iret
ljmp
fldenv
incb
xor
xor
inc
scas
mov
mov
aam
mov
aam
fnop
aam
out
leave
leave
leave
cli
mov
mov
jmp
arpl
les
imul
out
test
clc
nop
ret
std
mov
fdivr
cld
ret
cld
rcr
cld
ret
icebp
mov
shl
cmpsl
test
add
add
add
in
or
out
jmp
outsb
fcomp
mov
add
mov
add
add
out
cmp
dec
in
dec
in
call
in
shl
call
in
test
call
enter
lods
scas
popa
addb
add
incb
std
std
incb
int3
int3
shrl
sahf
sbb
lods
add
mov
add
jecxz
jp
cmc
push
movsl
std
loop
aad
aam
shl
sti
shl
stc
shl
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
fs
mov
or
fistps
cmp
out
mov
aam
ljmp
jmp
out
rcl
jmp
scas
push
lcall
add
pushf
lods
xchg
and
push
mov
ret
int3
lret
mov
mov
lret
adc
int3
outsl
xlat
int3
into
pop
fst
xlat
dec
jecxz
loopne
out
call
sbb
mov
mov
cmp
movsb
lods
arpl
lods
mov
les
les
ret
sbb
bswap
into
into
or
push
incl
addb
add
add
add
rolb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
and
mov
mov
xchg
inc
lahf
arpl
pop
loope
xchg
xchg
push
dec
or
outsb
adc
jg
iret
add
clc
in
cmp
jnp
inc
fimull
test
inc
fbld
inc
and
daa
push
cltd
cltd
incl
cmp
cmp
jl
enter
sar
and
push
in
pop
inc
sahf
xchg
arpl
push
xchg
add
adc
push
mov
inc
mov
xrelease
sub
aam
push
cmp
jmp
repnz
shll
pushf
test
cltd
in
cmp
dec
ljmp
pop
test
push
lcall
pop
test
xor
imul
aad
shufps
push
ret
and
push
dec
int3
mov
xchg
jl
hlt
jp
mov
stos
gs
dec
lret
icebp
cmp
addl
sbb
pop
xchg
arpl
mov
pop
aad
arpl
push
les
cmp
push
lods
dec
lods
adc
lock
out
push
mov
pop
push
adc
sub
or
pushf
and
dec
mov
sbb
inc
jge
pushf
dec
aad
test
les
mov
test
add
add
fwait
leave
aas
ret
jb
in
push
roll
int3
sub
jo
adc
push
loopne
mov
outsb
cwtl
cmp
fstp
inc
and
imul
into
movsb
sub
lahf
aad
arpl
inc
popa
lret
inc
mov
and
repnz
lret
enter
inc
xchg
sub
fld
dec
jl
sbb
push
mov
cmp
sub
push
jle
inc
cmp
add
pop
int
insb
aas
out
jg
mov
mov
xor
sbb
jb
mov
or
cmp
fisubl
sbb
mov
rolb
jle
in
jnp
lahf
pop
aam
add
fstl
push
into
nop
sbb
das
xchg
popf
mov
lcall
lods
jmp
xor
pushf
cmp
pop
push
jmp
cmp
dec
sti
jmp
js
xor
cmpsb
cmp
mov
mov
jno
inc
in
inc
mov
outsl
cmp
notl
pop
jb
mov
push
aaa
or
fimull
jmp
in
mov
mov
sbb
pop
scas
insb
pushf
pop
das
cmp
cmp
or
shr
sarl
mov
leave
sahf
sbb
outsb
xor
test
test
sbb
shufps
push
sbbl
push
stos
loope
mov
daa
add
enter
rolb
dec
nop
pop
notb
fcomi
cmp
mov
adc
xchg
aas
rcrb
jns
mov
movsl
addb
mov
push
xchg
shll
lret
mov
add
pop
or
or
aas
cltd
stos
push
xchg
mov
inc
push
and
sti
lods
and
and
gs
sub
sub
xchg
jmp
clc
jbe
popf
subb
mov
jno
pop
sub
mov
arpl
cli
cli
sub
or
imul
es
lahf
pusha
out
push
rol
mov
xchg
and
push
mov
mov
xlat
jecxz
pf2iw
jae
icebp
jo
fbstp
cmp
xor
mov
jbe
pop
aas
repz
xchg
push
sub
hlt
pop
jo
orb
lods
ret
jo
adc
in
lock
ror
cs
push
add
cmp
mov
push
jmp
xor
cmpsl
inc
pop
dec
or
cmp
jmp
add
ljmp
dec
or
les
pop
int
movsl
pop
ds
pushf
mov
imul
jo
imul
pop
dec
or
fisubrl
aas
adc
and
add
imul
mov
jo
pop
add
popa
stos
xor
rcrb
idivb
xchg
out
pop
mov
scas
mov
push
std
and
pop
ret
xchg
cmp
mov
out
push
shll
test
ss
sbb
into
or
mov
mov
out
call
or
leave
test
das
push
sbb
jns
mov
push
cmpsl
fs
dec
mov
jbe
scas
out
fcoms
push
sbb
into
outsb
shlb
lds
rclb
outsb
push
xor
popf
pop
jmp
stos
insb
hlt
push
dec
in
scas
sbb
test
sbb
test
or
jno
push
cmp
push
int3
cld
mov
adc
push
jno
jo
mov
mov
pop
add
daa
add
outsl
repz
and
push
push
dec
mov
inc
adc
xlat
arpl
mov
mov
cld
cmp
inc
int3
ds
jae
or
sub
test
arpl
call
add
push
aam
and
stc
sbb
lds
out
sub
cs
shl
daa
inc
cmp
xor
sbb
fstpl
sbb
inc
orb
repnz
test
fnstsw
iret
into
jns
outsb
dec
or
and
xor
movsl
xor
jo
daa
mov
pop
out
ja
fidivrs
in
in
loopne
out
push
ds
inc
sbb
notb
aad
aad
movsb
xlat
aas
xlat
mov
cmp
xchg
ret
xadd
jnp
repnz
sbb
mov
jo
enter
fscale
lcall
xchg
ret
pop
jle
ss
xchg
call
sbbb
adc
ret
jmp
mov
repnz
pop
adc
inc
jl
xor
gs
xchg
sarb
ljmp
push
cmp
pop
fidivl
mov
clc
jecxz
sub
aas
add
scas
xor
xor
data16
data16
jns
imul
imul
pop
lret
sti
jnp
jp
mov
movsl
gs
mov
pop
and
shll
xchg
sub
push
mov
outsb
or
arpl
inc
jae
test
orl
mov
jl
aas
in
or
aaa
out
daa
mov
mov
fdivl
lcall
mov
sbb
push
insl
test
lahf
imul
push
mov
loopne
jb
dec
xor
jge
stc
nop
gs
dec
in
xchg
scas
mov
insb
add
fnstenv
and
push
ljmp
jno
scas
ljmp
add
in
jo
lods
inc
push
xchg
add
mov
addr16
mov
fnstcw
int
repnz
fwait
sti
jmp
cmp
call
or
lahf
mull
sbb
inc
jle
jns
mov
lahf
pop
jns
test
mov
xchg
js
xchg
and
daa
or
adc
push
jp
jmp
xor
insl
sub
push
jge
pop
cmp
xor
stos
dec
dec
xchg
cmp
xchg
repnz
pop
repnz
jns,pt
jo
cmp
xchg
xchg
xchg
cs
mov
mov
push
or
cmp
pop
xchg
sub
mov
mov
xsha1
cmpsb
push
add
sub
xchg
stos
push
movsl
imul
das
daa
xchg
pop
push
dec
loope
jp
cmp
mov
ret
pop
push
xchg
push
inc
movsb
cmp
add
int3
push
mov
in
loopne
inc
sub
int3
pop
fstl
push
sbb
in
insb
fnstenv
imul
mov
cmc
mov
lods
aas
sbb
ds
loop
cmp
popf
xor
add
xor
rorb
push
not
addr16
or
jp
mov
or
push
out
sub
scas
inc
jg
imul
dec
ror
gs
mov
out
xchg
fnstenv
sbb
lret
or
fnstcw
and
adc
xor
pop
xor
cmpsl
mov
les
lods
mov
mov
fs
shr
mov
xchg
xchg
cld
and
cld
push
or
jg
and
dec
mov
push
jmp
movsl
mov
sub
sub
leave
xor
lahf
fs
cmp
adc
or
jl
subb
in
je
js
xor
sub
test
scas
inc
mov
fidivl
and
les
cli
add
mov
popf
imul
xchg
out
xchg
es
cwtl
sub
iret
sub
cmc
mov
ret
ret
pop
div
pop
pop
cmc
push
xchg
xor
leave
jno
push
jo
lret
dec
loopne
cmp
popa
push
pop
mov
or
jnp
test
stos
sbb
jb
and
add
add
pop
out
mov
loopne
and
orl
mov
pusha
loop
popf
add
xor
pop
cwtl
push
jmp
and
mov
popf
ret
push
out
mov
mov
arpl
mov
pop
push
cmp
insl
bound
push
push
mov
mov
aam
outsb
enter
lea
dec
mov
jbe
and
out
inc
mov
nop
pusha
push
testl
pop
jmp
add
lret
dec
fisttps
fidivs
lods
xchg
sub
and
xchg
xchg
dec
fbstp
push
stos
inc
je
adc
jo
pop
repz
imul
mov
cli
xchg
jo
stos
inc
lods
xchg
pop
icebp
add
inc
jp
dec
fists
inc
fsubl
jmp
dec
loop
lock
scas
mov
push
pusha
xchg
ret
movsl
repnz
scas
adc
mov
dec
or
push
sub
lods
dec
aaa
sbb
adc
lahf
ss
fstl
xchg
mov
push
outsb
add
je
add
push
and
sub
mov
pop
repnz
dec
es
sahf
lds
inc
fistl
xsha1
cmpsb
mov
cmp
jo
test
xchg
repnz
mov
xor
pop
stos
pop
not
inc
jp
xor
push
mov
pop
dec
loop
xlat
outsb
push
daa
sub
push
js
arpl
sub
adc
pop
lds
mov
add
jno
sub
inc
dec
loope
inc
jecxz
jns
mov
dec
adc
and
aaa
into
pop
jecxz
mov
insl
mov
pop
pop
rep
and
jne
mov
inc
sub
pop
inc
cmp
cmp
xchg
sub
pop
imul
lds
outsb
fidivl
roll
repnz
mov
or
mov
popf
mov
pop
test
cmp
lods
test
lret
mov
fisubs
popf
hlt
icebp
cs
cwtl
das
xlat
add
mov
inc
fldcw
inc
int3
arpl
sub
add
sub
fdivl
dec
push
lods
aas
mov
movsl
jecxz
pop
notb
sub
jb
cmc
arpl
xchg
test
idivb
adcb
pop
adc
sub
cmp
sbb
xchg
sub
cmp
lods
mov
xchg
mov
fisttps
mov
inc
icebp
leave
pusha
jecxz
push
push
add
push
out
xchg
cmp
or
cmp
les
mov
shrb
dec
mov
dec
ja
icebp
mov
aaa
push
jne
push
addr16
ss
mov
mov
enter
sbb
fisttps
scas
stc
pop
gs
je
or
push
push
montmul
cmpsb
inc
mov
sub
xor
sub
cmc
js
cmc
imul
xor
xchg
sbb
decl
scas
mov
testl
data16
xor
mov
or
movsb
pop
test
fldl2t
jp
pop
insb
mov
iret
mov
push
cmp
andb
rcll
push
in
and
sbbb
inc
cwtl
das
ss
sub
dec
push
testb
and
jg
jl
fwait
insl
pop
or
add
cmp
mov
lret
pop
and
inc
adc
aaa
cmp
imul
aad
push
mov
aam
lret
idivb
insl
lcall
ljmp
sbb
cmp
aad
mov
or
lock
inc
sti
xchg
cmp
xchg
sub
or
insb
xor
pop
inc
push
movsl
jge
aas
outsl
push
sbb
jp
lds
hlt
and
fs
test
pusha
ret
mov
aad
jne
push
mov
push
lods
inc
sbbb
dec
xor
pop
imul
stc
dec
sbb
and
stc
xchg
cmpsb
cmp
sbb
push
lods
stos
xchg
lcall
jbe
lahf
xchg
ffreep
pop
shll
scas
inc
jo
stos
inc
in
adc
jbe
pop
or
loope
lret
sub
fs
jnp
outsb
xchg
mov
lds
pop
sahf
inc
ljmp
push
push
pop
jp
push
in
data16
mov
stc
jecxz
jge
sbb
pop
lea
mov
test
mov
xor
cmpsl
mov
push
jbe
andb
push
xor
addl
push
push
xchg
sub
mov
cld
and
mov
ss
scas
repnz
in
je
pop
inc
pop
sahf
xor
scas
inc
in
xchg
sub
mov
push
ret
jnp
sbb
pusha
testl
and
add
and
cmc
mov
or
cmp
cltd
xor
pop
jmp
push
loopne
sti
xchg
pop
xchg
gs
lret
mov
popf
adc
jl
das
push
call
pop
jecxz
add
cmp
cmp
xchg
aam
add
mov
push
cmpsl
jbe,pt
outsl
push
jbe
fidivs
xchg
decb
notl
lods
fwait
xor
add
fsubrs
push
jmp
jmp
push
jle
ja
jbe
dec
push
mov
sti
push
lods
inc
mov
xor
aad
scas
push
ljmp
mov
sub
jecxz
loop
sub
and
xchg
mov
bnd
les
mov
pop
jmp
or
jp
dec
stc
nop
outsb
ret
hlt
pop
scas
icebp
adc
jo
test
jae
and
mov
test
shrb
dec
adc
jge
dec
loope
sahf
mov
mov
inc
cld
xchg
dec
mov
sub
push
out
xor
stos
push
push
adc
cmp
outsb
pop
push
lods
push
mov
pop
xor
mov
lock
mov
jmp
fs
cmp
mov
inc
dec
push
in
push
popa
push
jmp
inc
jp
mov
cmp
adc
xor
mov
mov
push
fbld
lods
imul
push
ret
push
cmp
mov
inc
in
test
or
sub
jmp
mov
or
jp
add
shll
dec
and
sarl
rol
xchg
mov
cmpsl
ds
mov
jg
hlt
cmpsl
sbb
divb
hlt
mov
push
in
jnp
push
out
adc
and
adcl
xor
clc
add
leave
xchg
sbb
test
lret
ds
jne,pn
jl
sbbb
popf
out
iret
jp
aaa
push
lock
lds
adcl
adc
mov
fwait
cmp
scas
inc
or
and
jp
dec
fistpll
fdivrl
out
xor
out
cwtl
and
mov
sub
push
and
loopne
sbb
mov
jno
xchg
scas
cs
xor
test
leave
ror
scas
or
testl
into
into
sub
mov
je
gs
jle
mov
xchg
movsl
pusha
lret
cmp
push
add
cltd
enter
bound
xchg
mov
or
enter
dec
bound
mov
inc
movsb
js
xchg
push
popf
xchg
sub
jne
aam
or
inc
mov
xor
xchg
call
and
mov
add
dec
jb
sub
and
dec
dec
in
inc
scas
in
cmp
xchg
les
sti
fimull
in
shll
enter
clc
and
cmpsl
ja,pt
testl
int3
xchg
jno
sub
cli
xchg
sbb
daa
jge
xor
jecxz
stc
xor
fists
pop
fmuls
mov
test
nop
and
mov
movl
jbe
mov
sbb
adc
lea
push
cmp
fmull
push
popf
imul
pushf
xchg
and
imul
push
in
mov
pop
ljmp
bound
push
les
cmpsb
cmc
jbe
push
mov
in
dec
lcall
pop
jnp
addr16
cli
divl
pop
mov
mov
ds
adc
add
enter
xchg
mov
out
push
jmp
or
mov
add
add
push
mov
dec
rcrb
movsl
mov
cmp
orb
or
popf
add
or
in
shrl
jbe
jbe
mov
mov
out
xchg
sub
push
sbbl
loop
bound
xlat
popf
xor
and
sbb
mov
arpl
mov
inc
push
pop
xchg
sub
test
pop
insl
xchg
lods
inc
and
mov
cmpsb
es
mov
mov
lret
sti
dec
das
popf
sbb
mov
mov
and
jns
sbb
lret
add
rcrl
shrl
repnz
dec
pushf
rclb
pusha
negl
out
out
repnz
xor
lcall
rclb
ja
pop
inc
mov
add
or
add
shlb
dec
xchg
sub
in
pop
push
dec
pushf
negb
sub
imul
pushf
jg
pop
jo
fbstp
fmuls
lret
out
test
lret
push
call
cmp
adc
cwtl
jnp
stos
xor
insl
add
push
xor
inc
xchg
mov
jmp
fwait
xor
dec
pop
mov
dec
adc
mov
xor
sbb
imul
roll
xor
and
popa
les
lock
testb
ficompl
jns
daa
ss
mov
fidivl
add
mov
int3
ja
ss
repz
mov
jp
pop
or
jmp
pusha
rcrb
pop
and
stc
nop
mov
arpl
jbe
fdivl
sahf
jle
rolb
cmp
adc
sbb
xchg
or
add
cmp
mov
ja
cltd
outsb
lea
mov
andb
fidivs
cld
and
cmp
adc
fwait
movsl
cmp
cs
xor
fwait
or
jo
insl
aam
inc
mov
sbb
stos
pop
pop
inc
loope
test
jl
sub
sbb
pop
out
add
div
sub
mov
mov
or
test
scas
inc
cmpsl
call
mov
jns
sub
fisttpll
mov
and
aaa
into
cltd
xchg
leave
idiv
cmp
out
aaa
clc
fs
add
jno
js
pushf
push
mov
xchg
ljmp
ljmp
inc
xor
movsl
or
mov
adcl
push
pop
jge
scas
inc
cmp
pusha
cld
xchg
and
jge
and
shrb
leave
pop
movsb
lret
xchg
nop
daa
leave
in
or
mov
fstps
mov
cmp
inc
fsubr
pop
mov
push
ds
mov
insb
and
repz
inc
ficomps
mov
call
mov
ret
ficomps
dec
in
mov
or
out
mov
mov
fstpl
scas
ficoml
call
sub
outsl
push
testl
mov
mov
cmc
mov
xor
mov
xor
mov
fistpll
adc
cmp
mov
daa
mov
push
and
xorb
xor
push
cmp
loop
xchg
inc
fsubs
jae
lods
dec
inc
xor
pop
outsl
push
in
aas
jl
flds
adc
ds
push
jmp
imul
pop
xlat
push
jmp
jle
or
fsubrl
xchg
test
dec
sub
jle
das
jno
cmp
sub
test
pusha
dec
inc
fdivrl
mov
lret
fnsave
sub
pop
jae
pop
dec
jle
or
out
test
mov
int3
arpl
stc
nop
scas
jnp
sub
add
dec
inc
and
xchg
test
adc
sahf
mov
xchg
dec
icebp
scas
inc
push
lret
mov
cld
xchg
or
addr16
pop
in
mov
mov
jne
outsb
dec
jecxz
sti
xchg
shrb
jmp
icebp
fnsave
jb
jno
cltd
xor
add
mov
sbbb
mov
rclb
mov
cmp
pop
rclb
stc
nop
push
mov
cmp
je
adc
adc
jbe
pop
add
and
int3
pusha
neg
stc
iret
data16
jmp
mov
in
mov
loopne
push
mov
add
jb
out
jecxz
enter
rcrl
scas
in
cld
shrb
or
shlb
scas
push
mov
lock
das
sbb
imul
or
jae
or
cmpsb
cmp
test
gs
fs
out
stc
shrl
xchg
push
jmp
add
stos
inc
xor
push
out
int3
and
shlb
dec
adc
rol
dec
mov
shrl
rcr
jo
mov
xlat
outsb
push
add
shll
xchg
sub
xlat
cwtl
daa
in
pop
sbb
lahf
ss
enter
jl
out
daa
mov
test
hlt
jl
loope
add
xchg
or
stos
mov
roll
xchg
cmp
and
jne
inc
xlat
xor
outsb
add
mul
mov
orl
jno
insb
or
negb
adc
or
fdivr
pusha
div
mov
pop
icebp
stos
xor
sbb
test
mov
cmc
push
lret
push
fnsave
xchg
inc
mov
jne
mov
enter
test
jo
sub
mov
test
and
xchg
push
out
mov
xor
fstps
inc
or
clc
shl
xchg
xlat
mov
clc
stc
insb
shlb
xchg
push
das
jg
jl
inc
fiadds
int3
arpl
arpl
leave
cmp
pop
inc
fcompl
cld
xchg
add
sbbl
xchg
xchg
add
lds
sbb
cmp
sub
imul
fmulp
mov
sub
or
lds
push
xchg
out
out
pop
mov
popa
out
adcb
pop
xchg
jns
scas
inc
test
pop
out
jae
dec
loopne
int
adc
pop
inc
mov
shl
pusha
mul
push
cmp
inc
sub
arpl
mov
inc
cltd
xchg
ja
pop
test
or
das
nop
mov
movsb
test
pop
scas
mov
jb
xlat
sbb
in
fsubrs
mov
rolb
cmp
gs
lods
push
xchg
vmwrite
pusha
popa
gs
xchg
orl
loope
jnp
or
xchg
pop
jle
leave
and
xchg
sub
clc
call
cmp
sub
rolb
xor
mov
adc
jnp
adc
xor
call
or
iret
jge
repnz
lock
stc
aam
inc
movsl
sbb
sub
sahf
mov
mov
call
insb
jno
fsubr
pop
jmp
and
xor
rolb
and
lods
shrb
add
mov
sbb
rcll
sbb
cwtl
loope
sub
rclb
pop
fdivl
pop
fiaddl
ja
push
xor
jno
pop
mov
repnz
leave
sbb
sub
in
mov
pop
clc
aam
rcll
jecxz
aam
sahf
xor
jmp
test
faddl
fcom
imul
stos
jno
xchg
push
imul
jle
out
push
fs
sbbb
mov
cwtl
jg
idivb
mov
lcall
xor
or
sbb
mov
add
movsb
add
enter
es
in
loopne
mov
movsl
iret
sbb
loope
testl
or
repnz
mov
in
in
mov
ds
sub
int
mov
out
xor
or
or
clc
mov
add
cmpsl
lods
mov
divb
call
fistps
push
popf
outsl
gs
lcall
sbb
cld
rolb
sbb
adc
shr
test
and
jge
iret
outsl
push
jmp
sub
push
jmp
jl
jo
dec
popf
or
lock
xchg
adcl
push
pop
push
mov
repnz
ljmp
xor
dec
je
and
pop
cmp
mov
add
dec
mov
out
ret
dec
mov
clc
scas
pop
in
mov
repz
pop
sahf
jb
mov
adc
jb
fwait
dec
adc
xchg
inc
jo
or
jmp
imul
or
and
popa
test
jae
out
sub
jnp
arpl
jp
mov
fwait
out
xchg
xchg
push
movsb
bound
ja
test
fwait
aam
in
inc
movsb
sbb
xlat
repnz
outsl
push
xchg
sub
inc
or
cs
test
inc
fisubrl
xchg
jo
and
enter
inc
imul
mov
jnp
and
sahf
cmp
or
cmc
in
andl
jmp
test
push
mov
in
pop
mov
mov
out
jp
movl
xor
aaa
lret
lahf
xchg
popf
and
or
ja
out
mov
comiss
xchg
jge
mov
adc
out
jmp
jo
jecxz
xchg
adc
movsb
imul
push
les
mov
jp
hlt
scas
inc
mov
fnstenv
pusha
enter
cwtl
jmp
syscall
add
repz
xchg
fisubl
adc
cmp
dec
dec
and
bound
mov
lret
mov
cwtl
shrl
jo
cmc
cmp
xchg
or
or
and
mov
fsubrs
inc
mov
movsl
or
sub
mov
pop
scas
mov
cmpsl
sub
mov
cltd
mov
fidivl
adc
sub
dec
popa
pop
repz
jl
outsb
inc
scas
insb
push
aaa
popf
or
in
test
lds
aad
sbbl
dec
adc
dec
cs
xchg
sahf
ds
es
add
scas
sbb
outsl
popf
sbb
test
je
jcxz,pn
pusha
mov
mov
mov
imul
mov
icebp
incb
shlb
rcr
mov
jle
enter
lods
roll
popf
pop
test
cmpl
in
xchg
jnp
mov
lcall
and
iret
xor
push
sbb
out
jae
mov
pop
xchg
fcom
dec
loopne
mov
xchg
mov
ret
out
cmc
push
aam
loope
push
mov
dec
add
fstpl
or
dec
sub
pusha
nop
pop
test
testl
xor
addr16
inc
mov
popa
sbb
cmp
xchg
pop
pop
mov
sub
jne
dec
into
adcb
ljmp
adc
test
mov
addl
pop
lods
pop
xchg
shll
sub
mov
data16
lret
inc
inc
xor
cs
rcrl
je
daa
jg
pop
lock
popf
rolb
adc
popl
inc
fucomp
data16
outsb
rcrb
insb
dec
int
in
aas
mov
sbb
xchg
repnz
loope
mov
mov
xor
mov
sbb
lods
push
bound
test
xlat
jae
or
cmp
pop
pop
jl
fisubl
insl
addr16
test
mov
jo
mov
jo
in
into
movsb
jb
orl
int3
shrl
lods
std
add
cmp
and
sub
movsl
shl
xrelease
das
mov
popa
stos
inc
and
inc
and
lret
fmul
lret
cmp
lcall
pop
mov
jp
sahf
or
or
ja
jl
sub
dec
std
lret
sbb
mov
das
fwait
sbb
and
jb
sub
dec
xor
aas
pop
scas
dec
pop
jno
xor
sub
loop
mov
fnstenv
dec
xor
cli
cmpsb
pop
fdivl
in
xor
movsl
pop
or
adc
je
leave
or
repnz
push
out
cmp
or
xor
push
mov
push
sub
inc
fldl2e
sbb
insb
and
in
or
pop
fsubrs
pop
mulb
xchg
sub
mov
jne
or
jno
mov
dec
loop
mov
aam
addr16
push
cli
into
push
inc
jmp
ja
jns
xlat
push
inc
bound
jne
push
jp
cs
dec
jae
pop
xchg
out
push
jno
xchg
inc
scas
sub
shlb
dec
or
jge
test
leave
pusha
cmp
mov
cmc
jnp
stos
pop
lret
out
cmp
cmc
mov
mov
mov
lret
test
push
mov
jns
add
ja
cmp
shlb
arpl
dec
add
outsb
adc
data16
fdivrl
xchg
xor
fs
push
cmp
sti
jmp
cmp
pop
sub
fs
cmp
or
dec
out
adc
outsb
add
push
adcb
call
ljmp
bound
lahf
shlb
push
jge
out
in
fnstenv
outsb
pop
repz
xchg
fwait
mov
push
mov
testl
iret
sbb
insl
inc
pop
mov
je
xor
addr16
dec
test
adc
push
aam
jae
inc
nop
cmp
dec
mov
push
in
pop
fidivl
andl
sbb
jb
shlb
flds
jge
dec
les
imul
aaa
sub
and
rcrb
pop
cmp
push
scas
mov
push
scas
dec
sbb
jle
bound
aad
mov
inc
mov
mov
mov
and
lret
and
ss
push
push
and
dec
xchg
and
pop
or
sbb
dec
xorb
stos
movb
cmpsb
scas
ret
sub
pop
daa
mov
test
adc
test
fisttpll
mov
inc
cs
lods
pop
addr16
daa
mov
into
les
sbb
movl
pop
mov
xchg
inc
jo
jb
pushf
aas
fistl
mov
mov
rol
pop
push
std
xchg
push
iret
scas
je
mov
unpcklps
sahf
add
popf
inc
push
lcall
inc
shl
adc
cmp
fs
add
add
jp
aam
out
xchg
nop
and
jo
fmul
loop
cmp
pusha
mov
fwait
in
xchg
xchg
pop
movsb
std
insb
fs
popf
loopne
sbb
xchg
pushf
add
bound
xchg
insb
std
xchg
sahf
xchg
jnp
mov
jl
lods
iret
mov
arpl
test
mov
daa
push
sbb
scas
xor
test
pop
fxch
cmp
sub
addr16
cmp
xor
or
push
push
push
in
adc
popa
pop
int
sub
jmp
xchg
sbbl
adc
pop
mov
jo
dec
js
imul
inc
insl
in
imul
push
scas
fidivs
je
or
sub
insb
ja
call
jns
add
sahf
andl
push
jns
adc
push
xchg
ds
aaa
push
popf
push
pushf
or
jbe
in
out
or
push
pop
mov
jns
jecxz
pop
sbb
sbb
outsl
mov
sub
lret
stc
push
repnz
cmpsb
clc
sub
lods
push
fldt
ret
xor
sub
mov
and
mov
sbb
dec
stos
mov
mov
and
in
pop
std
inc
push
lret
mov
mov
out
or
inc
shrl
jb
pop
popf
mov
inc
loopne
in
in
fbstp
fistl
mov
cmpsl
add
fsts
rolb
dec
add
mov
fnstsw
add
hlt
xlat
adc
lods
jle
cmp
sub
jp
movsb
mov
into
cmp
sbb
push
add
push
movsl
adc
jo
mov
adc
imul
testb
es
and
mov
rcrb
cltd
int3
inc
fscale
xorl
insb
insl
hlt
mov
sbb
mov
xor
or
lock
xchg
and
enter
inc
or
insb
xchg
out
repnz
lahf
insl
sar
dec
mov
cmp
aas
add
das
inc
push
dec
fimuls
mov
inc
or
fnstsw
je
mov
jp
clc
outsl
inc
push
popf
jne
inc
mov
cmp
push
mov
das
and
cmp
mov
pusha
loope
inc
out
dec
in
add
mov
cld
xchg
xor
ret
mov
fs
cmp
hlt
test
jge
daa
out
sub
lcall
fldl
testb
push
add
out
pop
pop
cwtl
xchg
dec
fcoms
dec
inc
cmpsl
lcall
jb
fcoms
mov
mull
fnstsw
cmpsl
int3
mov
and
inc
push
pop
xchg
ds
push
les
dec
jne
cli
cmpsb
imul
imul
xlat
xor
fdivs
adc
cltd
nop
jge
xlat
and
xchg
dec
into
jo
lret
sub
mov
sub
add
jge
cmpl
xor
pop
xor
adc
adc
xor
inc
subl
js
jmp
cmpsl
jle
cmp
add
jl
bound
call
je
ret
mov
xchg
ds
sahf
push
lods
into
sahf
cwtl
mov
lcall
mov
push
gs
xor
pop
test
stos
dec
xor
sub
add
loope
das
jle
xorb
jns
mov
bound
jb
sub
push
push
repz
mov
xlat
jl
in
shrb
outsl
fisttps
fidivrl
cmpsl
adc
xor
pop
rcrl
lcall
scas
repnz
adc
or
cmc
cmp
imul
mov
jne
sub
xor
inc
dec
lret
bound
push
ljmp
xor
add
add
clc
popa
sbb
and
and
inc
in
xchg
sahf
adc
mov
mov
xlat
jne
das
mov
out
jmp
test
mov
fnclex
jo
cwtl
sbb
mul
jp
hlt
scas
shll
or
sbb
mov
bound
cwtl
xchg
jg
mov
mov
push
rcll
inc
fcompl
jns
push
mov
add
fildll
mov
lea
adc
mov
xlat
fucom
test
inc
mov
ret
mov
push
cmp
pushf
in
xchg
add
cs
sti
xchg
les
push
mov
xchg
jp
jne
leave
stos
inc
xlat
call
and
dec
iret
pop
mov
inc
cmp
dec
or
or
ljmp
out
les
cmc
mov
mov
or
mov
dec
sbb
arpl
xor
movb
call
mov
add
inc
insl
jl
pop
imul
xor
mov
xlat
mov
lds
pusha
iret
xchg
addr16
and
pop
push
fcmovnbe
jo
test
lret
daa
mov
out
cmp
mov
xor
or
or
mov
mov
add
mov
xor
lods
mov
sti
fidivl
fcomip
mov
icebp
cmc
mov
xchg
mov
sbb
loope
fs
or
push
jne
cmpsb
cmp
jbe
insb
fldl
ds
add
sub
popl
rolb
mov
out
dec
loopne
or
ljmp
inc
cmpsl
xlat
lahf
sar
lret
cmp
test
dec
cmpb
iret
jge
sbb
out
push
mov
ret
mov
add
inc
popf
jmp
popa
stos
xor
gs
shrb
add
flds
mov
hlt
ljmp
loopne
and
loopne
cld
fsubs
dec
xchg
shll
movsl
mov
jne
sahf
lcall
adc
cmp
mov
inc
lea
gs
mov
xchg
dec
push
mov
jns
aas
jae
cmp
int3
push
jmp
sbb
adc
xchg
mov
or
scas
pop
loopne
enter
jns
clc
jns
adc
sub
pop
lock
mov
xor
ja
das
arpl
dec
xchg
leave
imul
lds
testb
das
push
mov
dec
fcomip
movsb
andb
pop
push
call
push
mov
sarl
mov
and
loop
or
add
scas
inc
lods
cmp
xchg
push
xlat
lret
jbe
lret
inc
push
xchg
sub
cmc
loope
rol
fcomps
or
aad
test
aad
jne
mov
mov
fcomi
ja
cld
and
and
out
push
dec
push
jmp
popf
dec
pop
xchg
inc
ljmp
pop
lds
jb
les
add
pop
stos
addr16
dec
lods
lods
adc
xchg
pushf
fdivl
or
fs
dec
bound
rol
jae
les
adc
imulb
mov
adc
fstl
sbb
xor
cld
ljmp
into
mov
or
cltd
adc
gs
loop
xchg
aaa
inc
sub
sbb
fcoml
inc
in
enter
mov
addr16
frstor
aad
mov
jns
filds
mov
jne
cmpl
fucomip
dec
pushf
cld
add
mov
or
cmp
in
mov
pop
popf
mov
insl
fmull
out
les
sub
cld
lock
pop
push
and
xor
jno
dec
jnp
loopne
int
sbb
mov
and
and
dec
sbb
cld
bound
xor
jle
es
ljmp
fs
jae
roll
scas
test
mov
inc
sub
aad
cs
adcb
mov
aaa
orl
push
aaa
int
insl
je
dec
dec
loopne
sbb
in
jmp
scas
push
fldl
repnz
add
cmp
sbb
aas
mov
pop
sub
jbe
sti
in
loopne
jmp
ret
jmp
mov
jnp
aas
lods
jno
and
inc
jge
inc
fcoms
cmpb
loopne
xorb
in
jge
xchg
scas
push
arpl
aas
rcrb
adc
dec
mov
sbb
scas
add
loopne
mov
dec
je
fdivp
rorl
cwtl
mov
les
push
cld
sar
mov
adc
das
loope
imul
sub
xor
sbb
jns
lret
insl
leave
push
jle
call
pop
pop
jns
cmp
dec
int
cmp
add
mov
push
test
int
mov
cmp
cmc
xchg
mov
jmp
out
rcrb
adc
test
push
lret
call
out
shll
cmp
repnz
pavgw
push
ljmp
jg
adc
cmp
mov
add
add
push
popf
mov
sub
adc
cwtl
or
cwtl
add
push
cmp
mov
inc
fsubr
mov
data16
addl
ss
je
mov
jge
test
jecxz
push
jbe
ficoml
adc
jno
or
add
movsl
call
pusha
shrl
fidivl
sub
xadd
data16
sbb
mov
jle
mov
jnp
xor
jp
dec
jae
sbb
insl
mov
push
mov
pop
pop
fnstcw
subb
daa
dec
loop
pop
addr16
pop
pop
pop
shrb
jne
imul
xchg
repz
add
and
cmc
fwait
cmp
lods
sbb
movsl
jmp
aad
mov
mov
inc
mov
rorb
imul
mov
pushl
mov
loop
sub
dec
pop
or
cmpsl
pop
outsb
notb
mov
adc
inc
es
cmpsl
fcomip
rcrb
pop
add
ja
cmp
aaa
xor
pop
pop
dec
test
jp
out
cli
idivl
je
mov
mov
sti
mov
js
mov
xchg
dec
adc
cmp
inc
arpl
lods
and
sbb
cmp
cmp
bound
arpl
loop
dec
push
mov
mov
mov
sahf
cmp
mov
outsb
jno,pt
or
xchg
cmp
adc
repnz
xor
xchg
push
lcall
cmp
xchg
jl
jns
dec
aaa
pop
test
pop
hlt
xor
mov
mov
dec
loop
adc
adc
jae
mov
repnz
lods
jmp
mov
or
add
jno
mov
aas
sub
mov
lock
in
and
aad
fisttpl
rcll
aad
nop
daa
mov
sbb
xor
cli
in
in
add
ja
inc
imul
mov
loopne
ret
adc
loope
inc
pop
xor
loope
test
xchg
fsubrs
movsb
cmp
mov
jle
pop
mov
cmp
jl
loopne
add
xchg
xchg
add
xor
pop
jmp
jnp
loopne
push
dec
jbe
xor
xchg
fisubs
in
xchg
mov
mov
and
jge
stc
inc
jg
jb
es
mov
fadd
clc
test
adc
xorb
cli
jo
sub
push
repnz
jae
enter
dec
fldl
adc
pop
mov
enter
push
mov
mov
aas
push
aam
xchg
out
repnz
stc
sbb
aam
mov
ja
add
nop
in
dec
shll
icebp
adc
cmp
testb
sub
les
lea
inc
sbb
or
or
adc
or
addr16
jb
sub
jp
and
mov
dec
adc
enter
inc
or
addr16
mov
cld
push
xor
jmp
ja
movq
xor
sarl
std
lcall
rcll
mov
sub
pop
pop
cwtl
or
adc
lcall
ljmp
or
jb
push
test
in
std
pushf
xor
push
out
mov
out
neg
inc
jno
dec
loopne
sbb
repnz
arpl
pop
mov
add
dec
loope
adc
push
and
test
xor
lcall
mov
shll
cmp
ljmp
data16
test
xor
mov
xchg
loop
shr
ja
jp
cmp
lcall
std
push
push
out
pop
mov
std
arpl
push
popf
dec
testl
shlb
rcr
outsl
adc
cwtl
stos
icebp
sub
std
rclb
insb
call
jmp
ljmp
ds
enter
jmp
or
sub
pop
pop
add
cmp
or
mov
into
lcall
mov
push
outsl
jnp
scas
andb
or
xor
ja
jns
push
mov
ds
adc
jbe
dec
stos
pop
fbld
in
add
ss
sbb
js
test
loopne
stc
cmpsb
and
fcomps
call
das
addr16
xchg
sub
push
lret
ljmp
mov
fnstsw
inc
adc
xor
lcall
jne
mov
xor
jae
pusha
int
movsl
xchg
lock
ljmp
pop
out
push
push
repnz
imul
in
cltd
imul
stos
icebp
adc
push
out
and
push
inc
bnd
aas
fs
or
or
sub
push
mov
and
add
lret
sti
push
inc
cmpsl
ss
gs
popa
fidivs
ret
or
pop
inc
and
int3
stos
fildl
push
jne
jno
sbb
pop
add
lods
sahf
sahf
imul
repnz
sbb
pop
xor
inc
push
inc
in
push
cli
or
insb
jl
fsubr
push
int
add
cmp
inc
notl
daa
aad
sub
daa
push
jle
cwtl
cwtl
jnp
leave
mov
fdivl
mov
jge
repz
std
jo
jge
cltd
dec
push
setno
sbb
sbbb
push
cltd
adc
pushf
ja
je
jg
fidivl
pop
xchg
setno
outsb
jl
test
and
rcll
pop
out
fs
jnp
push
and
in
pusha
mov
xlat
repz
imul
aaa
mov
jne
lahf
xor
or
loopne
jno
inc
pop
mov
test
push
dec
xchg
sbb
jl
dec
add
sbb
xor
jno
jle
mov
cltd
mov
mov
sub
mov
mov
and
dec
roll
jmp
mov
fsubs
dec
pop
stos
mov
sub
mov
add
movsb
adc
andb
test
sbb
mov
roll
jg
pop
test
xchg
dec
sbb
sub
and
push
adc
nop
arpl
mov
rcl
inc
stos
jp
or
cmc
dec
fdivrl
xchg
mov
lret
insl
cs
sbb
clc
xchg
cmpsb
adc
fs
push
cmp
inc
sub
shll
dec
ja
mov
fildll
mov
lock
xchg
push
cmp
jne
call
inc
push
test
popf
fstpt
xchg
cmp
sbb
lods
and
mov
jns
sarl
or
xor
das
movsb
mov
xchg
push
cmp
shrb
jns
outsl
mov
inc
inc
lcall
inc
hlt
mov
mov
cmp
cmpsl
cmp
cmpl
fs
in
pop
mov
push
push
ret
movsl
push
call
inc
push
cli
xchg
xchg
imul
pusha
adc
push
adcl
sahf
inc
cmp
and
jecxz
jmp
and
dec
ret
add
xor
bound
out
sahf
cmovns
jl
testb
push
push
or
outsl
stos
in
mov
shrl
sbb
and
add
test
push
jmp
mov
jmp
repz
fisubs
push
rcrl
mov
push
ljmp
jmp
pop
inc
bound
push
cwtl
mov
sbb
push
jae
arpl
rolb
jne
hlt
sbb
icebp
movsl
and
dec
jl
fwait
out
push
lods
cmp
popf
xor
andb
jae
or
imul
clc
mov
or
lea
push
nop
scas
fisttps
mov
cmp
sbb
inc
nop
add
xor
cmp
pop
pop
insl
jnp
xchg
outsl
test
inc
push
in
jb
adc
repz
xchg
xor
loopne
mov
sbb
gs
loopne
jmp
addr16
and
movsb
lahf
sub
js
pop
cmc
xchg
mov
cmp
cli
call
loop
xchg
inc
sbb
push
aam
add
movsl
mov
js
subl
cwtl
inc
mov
pop
sbb
mov
ja
mov
les
xchg
lret
mov
sbb
outsb
jl
cmp
shrb
cmp
mov
movsb
les
lret
pop
sahf
sti
xor
mov
gs
lods
mov
inc
sub
push
decb
and
in
mov
ret
or
mov
dec
sub
hlt
cmpsl
dec
arpl
adc
sub
loop
add
mov
test
int3
das
inc
clc
outsl
mov
insl
jno
lahf
lds
std
mov
xchg
cs
scas
mov
leave
mov
ss
in
inc
mov
out
test
callw
mov
dec
push
aad
test
imul
sbb
cmp
pop
repz
jl
push
scas
and
daa
push
pop
pop
outsl
scas
inc
or
or
out
shlb
sub
push
sahf
xor
jnp
mov
push
inc
mov
sbb
insb
inc
push
leave
je
out
push
xor
adc
imull
aam
call
movsb
pushl
jge
in
push
call
push
aas
cmp
ss
dec
jns
es
and
or
jmp
fstpl
fldenv
sub
inc
shl
jb
adc
pop
inc
jnp
xchg
js
test
popf
cltd
cmp
stc
sar
out
cmp
lock
sub
sar
add
push
jbe
int3
leave
test
fs
sub
adc
mov
divb
hlt
mov
xor
dec
cmp
or
dec
jp
mov
pop
inc
imul
fdivl
fwait
mov
mov
xchg
jmp
aaa
dec
lods
push
push
jp
loop
or
mov
aad
and
movsb
xchg
push
daa
inc
aad
pop
pop
in
jg
sub
stc
pop
in
test
add
bound
enter
jno
in
shrl
sbb
repnz
outsl
frstor
push
sbb
negb
inc
mov
xlat
outsb
and
jb
cmpsb
xchg
cmp
mov
andb
sbb
repnz
ds
lret
xchg
scas
rcrl
or
mov
cli
ljmp
lock
test
lcall
jns
pop
insb
xor
test
cmp
stos
jge
xchg
adc
pop
inc
fiaddl
bound
stc
and
outsl
pop
mov
mov
push
insl
fcmove
fimuls
dec
xchg
xchg
add
or
js
test
pop
pop
dec
jp
add
mov
int
xchg
mov
or
stc
addl
data16
push
gs
ljmp
jp
clc
sbb
xchg
enter
popf
add
mov
cmpsl
xor
adc
cwtl
out
and
dec
and
sub
inc
mov
xchg
sahf
inc
ret
xchg
clc
pop
jae
or
lods
adc
adc
je
fwait
mov
or
sub
xchg
stos
mov
and
jp
and
or
mov
aaa
mov
fnstenv
mov
stc
jo
pop
sub
xchg
sub
sub
inc
outsb
sarl
arpl
cltd
rcrb
xorl
jmp
in
mov
shrb
push
out
aaa
pop
out
mov
cmp
push
add
sub
ja
cmpsl
popa
lds
cmp
leave
pusha
gs
in
xchg
mov
aam
or
aas
testl
add
cltd
das
mov
ret
mov
cmc
mov
xor
mov
movsl
cmp
notl
lods
lock
and
push
insb
or
push
sti
mov
push
jae
jle
xor
pop
xor
hlt
insl
pop
xor
inc
sub
inc
in
loopne
and
leave
sub
cmp
cli
mov
mov
push
scas
dec
adc
stos
mov
dec
pushf
das
mov
movzwl
call
mov
inc
jo
adcb
xchg
shr
into
sub
out
pusha
fldt
sbb
mov
sub
cmp
xchg
ds
andb
out
xchg
inc
sub
or
lret
mov
jmp
mull
scas
inc
pop
push
push
loope
lcall
push
sub
adc
inc
dec
dec
fistpll
ja
dec
data16
push
test
jl
scas
dec
cmp
and
push
mov
sub
dec
lods
in
subl
jle
xchg
shll
ljmp
vmread
dec
pop
add
push
in
pusha
mov
je
out
jbe
cmp
mov
je
pop
and
scas
mov
lea
test
mov
aad
jge
push
insl
fcmovnu
loop
adc
hlt
mov
scas
dec
and
adc
in
xchg
pop
dec
cli
jle
hlt
scas
sbb
ret
dec
jno
repz
cmp
jne
insl
out
sub
xor
xchg
pop
push
mov
or
pop
sub
sbb
or
test
out
test
adc
rclb
xchg
mov
or
fstps
call
or
pinsrw
adc
aaa
addr16
xor
fsubs
rcrb
inc
decl
inc
or
xchg
jmp
fsubrl
jo
outsl
inc
roll
test
xchg
xchg
out
mov
sti
stos
inc
scas
pop
xchg
add
ret
jle
xchg
sub
xor
jns
aaa
std
or
lds
cmpsl
je
xchg
sbb
orb
push
out
push
push
insb
xor
hlt
push
pop
push
pop
cmp
jl
pop
lahf
push
sbb
dec
jae
xor
ljmp
and
cmpsl
add
jns
cmp
imul
movsb
ds
xchg
lds
sti
aaa
cmp
sub
insb
mov
mov
add
cmpsl
clc
fcomip
cmp
inc
jl
mov
outsb
dec
lods
mov
ja
sub
adc
push
xchg
pop
cmp
jle
cmc
inc
ret
push
mov
mov
bound
inc
pop
inc
test
pop
pop
push
sbb
enter
push
ja
js
jnp
js
rcrb
mov
out
adc
pushf
dec
repnz
xchg
ss
fsubrp
insl
test
daa
test
add
rep
dec
cltd
push
pop
pop
ljmp
push
insl
rcll
lret
das
pop
or
sub
jge
cmp
lods
add
sub
popa
and
out
and
push
es
or
xlat
and
inc
or
daa
mov
jb
insb
scas
iret
pop
notl
fcomi
cmpsb
lock
rcrl
out
les
lahf
inc
mov
mov
roll
lods
xor
aam
aad
sti
cwtl
je
stc
mov
lds
adc
cs
test
and
and
xchg
dec
dec
pop
in
mov
outsb
das
push
xchg
cmpsb
push
outsb
das
out
jg
and
std
dec
addl
cwtl
insb
into
jo
mov
sbb
sbb
mov
xor
movsl
negb
sbb
test
add
aas
mov
loop
add
in
into
jne
jp
xor
jo
data16
sbb
inc
popf
imulb
lahf
or
mov
push
stc
push
outsl
xchg
test
fsubs
xor
aaa
addr16
jnp
cmp
jae
enter
mov
sahf
push
stc
sbb
in
xor
or
sbb
mov
sbb
scas
xchg
adc
inc
imul
add
nop
mov
lret
push
sub
add
mov
in
rolb
sub
lea
movsb
scas
int3
pop
out
js
pop
pushf
in
mov
pop
xchg
and
call
test
mov
lcall
mov
pop
push
jmp
test
mov
dec
arpl
scas
xchg
sub
jg
and
mov
test
lahf
fbld
xchg
inc
mov
push
mov
pop
mov
add
cmp
add
bound
cmpsb
jno
pop
cmpsl
add
ja
push
aam
cmpsb
push
popa
xor
ret
jnp
rorb
les
idivl
rclb
jns
ljmp
dec
scas
and
mov
test
pop
lods
xchg
sbb
scas
cltd
sbb
cmpsb
ret
lds
inc
lret
mov
cmp
jmp
iret
popa
clc
repz
movsl
xor
and
adc
sub
jle
mov
jno
sbb
iret
hlt
jae
mov
loopne
lods
inc
mov
mov
dec
dec
inc
add
dec
mov
lea
adc
mov
sub
lahf
xlat
cmp
push
shlb
jo
xchg
cld
mov
cmp
das
insl
pushf
add
mov
les
mov
ret
adc
pop
or
pop
xor
lret
sti
sbb
dec
mov
in
cmp
insb
lods
in
mov
sar
push
pushf
mov
inc
sar
xchg
add
add
stos
dec
loop
ja
in
and
in
dec
sbb
pop
dec
loopne
inc
mov
lock
ja
inc
mov
mov
push
daa
lret
jbe
frstor
mov
aam
andb
or
inc
inc
aas
sub
dec
lcall
xchg
pop
daa
pop
cs
xchg
call
lds
sbb
pop
out
out
pushf
add
jne
addr16
jbe
mov
mov
test
jne
mov
xor
inc
pop
nop
cmp
and
mov
pop
out
cmp
xchg
out
scas
sub
nop
push
rcrl
ret
push
add
mov
movsb
test
push
inc
les
shl
lea
fs
pushf
xchg
call
mov
aaa
iret
and
push
push
out
std
call
lds
add
jne
dec
cmp
xchg
mov
leave
nop
js
lret
adc
leave
pusha
sbb
sub
pop
ds
jno
mov
out
sub
mov
dec
add
dec
es
mov
out
shlb
cmc
xor
test
test
aaa
popf
stos
inc
sub
fs
das
movsl
add
mov
jbe
repnz
cltd
leave
pop
jne
lret
icebp
dec
cltd
jae
adc
push
push
pop
pop
cmpsl
ds
montmul
cmpsb
lods
fucomi
push
out
xor
sti
push
insb
adc
or
clc
pusha
and
jne
leave
pop
pop
mov
int3
mov
cld
push
xor
cmp
jg
je
xor
popf
ficoml
push
sub
out
push
sub
pop
ss
sbb
lods
mov
inc
mov
test
sub
lret
or
xor
push
inc
ja
incb
jne
jmp
out
push
jmp
aam
jo
gs
aad
dec
mov
push
inc
imul
adc
lds
xor
mov
xchg
push
mov
insl
mov
dec
pop
inc
mov
inc
in
push
outsl
outsl
es
mov
push
outsb
aas
lcall
call
fbstp
adc
nop
test
mov
aad
in
lahf
cmc
sar
sub
negl
hlt
mov
jo
nop
push
fs
adc
test
push
mov
clc
jle
sub
clc
xor
dec
sbb
add
jecxz
out
adc
xchg
mov
je
mov
mov
adc
addr16
sbbb
xchg
das
rcll
and
pop
push
jle
add
dec
aas
test
repz
pop
xor
pop
aas
push
mov
cltd
std
mov
and
lods
in
mov
std
subb
lcall
sbb
ss
or
loopne
xchg
cmpsl
xchg
inc
push
inc
cli
out
pushf
sub
xlat
sbb
ds
adc
lahf
dec
loope
or
cmp
jmp
mov
ds
and
test
jle
mov
repz
xor
cmp
call
cmp
gs
out
mov
and
xorl
leave
or
push
or
stc
movsb
sub
shrb
ret
jl
dec
scas
test
roll
lods
je
cmc
mov
sbb
fisttpl
test
mov
adc
int3
jg
mov
or
in
and
cmp
cmpsb
push
xlat
addl
arpl
inc
bound
or
push
cmp
insl
fldl
adc
inc
sti
jle
mov
mov
arpl
cmpsl
ljmp
popf
ss
dec
jo
incb
scas
sub
fcomp
cmc
pop
push
pop
cmc
mov
fnstcw
xor
out
sub
cs
xor
push
lds
fnstcw
cmp
leave
pusha
add
push
call
cmpsl
xor
xchg
insl
and
sbb
jbe
mov
loope
xchg
scas
mov
mov
mov
or
mov
jg
daa
mov
push
hlt
adc
lds
out
popa
out
imul
push
inc
push
mov
test
in
testl
loopne
sbb
mov
mov
int3
mov
push
les
cld
xchg
fcom
insl
push
in
add
mov
ret
rol
xor
sbbl
xchg
mov
inc
add
jg
mov
sbbl
arpl
jae
int
jae
aaa
sbbl
dec
rcrl
jle
outsl
js
test
jae
xor
push
cmpsb
xchg
fwait
cmp
cmpsb
cmp
dec
mov
sbb
pop
xor
nop
add
mov
fsts
or
dec
and
je
mov
push
sahf
stos
push
xchg
enter
cmpsl
aad
fcompl
cwtl
add
test
pop
pop
jne
dec
int3
sub
add
int
jg
adc
sbb
xchg
les
jb
insw
dec
out
cmpsb
xchg
cmpsb
stc
dec
ss
les
out
or
sub
aam
pusha
xor
sub
insb
mov
push
mov
add
sbb
sbb
lret
push
andl
sti
push
jmp
imul
adcl
sbb
loop
lds
fwait
cmp
cmp
xchg
mov
push
stc
ret
das
adc
cmc
jnp
daa
jae
cmc
xchg
xchg
and
sub
mov
daa
test
mov
mov
push
mov
nop
pop
mov
mov
rcrb
inc
cltd
mov
loope
mov
stos
mov
into
push
sbb
scas
inc
mov
inc
int3
andnps
xorb
and
sub
inc
outsl
mov
xchg
pop
cs
or
pop
insl
ds
sub
xchg
daa
clc
jb
sbb
mov
and
addr16
sbb
test
dec
mov
fists
inc
into
push
add
test
xchg
push
pop
mov
gs
enter
xlat
loopne
mov
xchg
jns
push
add
jg
push
push
mov
mov
pop
push
and
lret
jo
test
ds
int3
and
jbe
adc
mov
mov
jnp
pop
lret
shl
sub
add
mov
out
sub
sbb
mov
xor
bound
sahf
push
bound
pushw
outsb
jmp
push
push
cli
popf
pop
inc
sub
push
pop
stos
push
jne
pop
adc
sbb
iret
mov
ret
repz
sbb
les
push
aaa
adc
push
mov
xchg
dec
add
jg
sti
pop
adc
cli
xchg
inc
fdiv
mov
sbb
dec
mov
adc
mov
xor
js
icebp
insb
jp
push
fwait
je
mov
xchg
js
lods
roll
repz
in
cmpsl
arpl
xor
pop
or
sbb
lcall
mov
sub
push
outsb
cld
iret
fisubs
xor
add
les
xchg
dec
lcall
mov
stc
popf
xchg
setnp
aas
xor
jg
popf
hlt
imul
xlat
ljmp
dec
pop
pop
xlat
jnp
cltd
xchg
fmuls
inc
test
cmp
stos
inc
popf
out
dec
cmc
repnz
in
sub
hlt
sbb
scas
cmp
xchg
test
es
notb
and
cmpsb
ds
dec
inc
dec
lds
jmp
sub
cld
cwtl
mov
mov
outsb
push
and
or
adc
jmp
add
push
mov
jno
mov
fdivrp
cmpl
je
jne
rcrl
push
adc
xchg
outsl
xlat
push
shlb
sbb
cmpsl
mov
pushf
inc
mov
xor
clc
sub
sub
mov
push
add
adc
push
loope
sti
dec
jmp
pop
ds
sbb
rorl
outsb
mov
mov
mov
cmp
fistpl
je
sti
pop
iret
push
mov
scas
and
scas
mov
movhps
outsb
and
adc
sbb
push
cmp
sub
shll
rcrb
scas
and
je
inc
cmp
clc
test
push
cli
xchg
pop
or
fucom
pop
push
cmp
and
pop
jge
arpl
mov
faddl
push
dec
sar
or
in
cmp
cmp
daa
ljmp
sahf
cmp
int
jmp
aad
loopne
repnz
jmp
stc
push
retw
xor
jb
sub
adc
or
push
sbb
test
jle
or
mov
out
pop
loop
cmp
xor
cmc
mov
mov
aam
mov
push
outsl
push
out
addr16
dec
call
sub
dec
mov
mov
loope
scas
adc
ja
icebp
loop
inc
xchg
xchg
mov
push
lahf
inc
mov
cmpsl
lcall
mov
in
cmpl
xchg
xchg
mov
fistpll
sub
repnz
or
xchg
xlat
sub
add
pop
arpl
sbb
adc
push
mov
mov
mov
push
addb
jge
pop
jg
pop
cmp
xlat
imul
aaa
mov
fnsave
loop
fstps
mov
pop
dec
aaa
inc
insb
pusha
clc
and
stos
pop
ret
cmc
fdivs
dec
pop
movsb
out
pusha
sub
lock
push
ja
pop
dec
nop
push
jns
xchg
sbb
sahf
clc
adc
addl
orb
sub
cmp
jecxz
push
in
add
xchg
ds
ss
fwait
jne
cmpsl
sbb
jg
cs
xchg
imul
mov
jg
test
outsl
jnp
adc
pop
xor
adc
lea
and
and
shrb
into
gs
sub
sti
sbb
xor
adc
movsl
clc
and
pop
lcall
inc
cmpl
push
in
mov
push
out
jg
xor
ljmp
sbb
push
insl
mov
ret
adcl
and
dec
fldl
mov
inc
daa
shrb
mov
adc
js
in
testb
xor
dec
jl
fdivrs
jo
enter
cmp
xor
mov
or
es
or
mov
add
in
daa
in
adc
or
pushf
mov
xor
test
mov
test
lret
jecxz
cmp
ret
loopne
or
sub
jno
inc
pop
mov
and
out
test
lcall
mov
ret
shrl
mov
stos
jo
hlt
mov
adc
or
or
stos
jmp
push
pop
or
bound
clc
add
xchg
cmp
mov
mov
lret
or
fsubrs
mov
lds
addr16
pop
or
scas
outsb
shrb
insb
xor
shrb
add
mov
mov
gs
push
pop
inc
push
and
fisubrl
cld
pop
imulb
movsl
mov
jl
inc
out
xchg
out
test
lret
lods
movsb
mov
ret
inc
xchg
add
cmpsl
int
cmp
mov
jno
pop
add
notl
fs
sbb
xor
inc
adc
mov
js
cld
jae
lds
leave
pop
mov
dec
inc
mov
cmp
popl
inc
jmp
popa
sbb
arpl
push
stc
jge
push
and
inc
cmp
add
lods
cmp
inc
cmpsl
cltd
push
hlt
scas
enter
enter
dec
shlb
xchg
xchg
inc
cltd
mov
loopne
mov
popa
add
mov
sbb
push
and
cmpsl
push
inc
sbb
ja
jle
fs
xchg
inc
sbb
jecxz
or
and
push
lock
xchg
movsb
imul
mov
cld
cwtl
mov
xor
or
mov
loop
gs
xchg
dec
negb
and
cmpb
adc
fisubrs
jbe
sbb
inc
imul
jae
stos
and
sbb
cmp
inc
push
mov
add
pop
dec
out
mov
je
idivb
push
imul
fcoms
sahf
push
cmp
cmp
mov
sbb
dec
sbb
sub
inc
ds
js
jle
cwtl
outsl
rcr
xchg
adcl
inc
jle
cmp
pop
int
lea
aad
inc
pop
xor
sub
jge
gs
icebp
sbb
pop
inc
daa
push
xchg
sub
sub
pop
fimull
cmp
adc
leave
and
pop
dec
pop
mov
out
test
jb
mov
add
dec
sub
xchg
out
pop
jg
cmp
dec
pop
xor
cmp
mov
loope
or
jl
ljmp
popf
stc
xor
lea
test
lods
and
repnz
push
add
mov
nop
push
mov
and
sub
loop
hlt
rorl
fsub
dec
xchg
mov
fildll
push
and
out
fistpll
lods
inc
cmpl
into
push
into
in
data16
clc
xor
add
adc
inc
jbe
mov
inc
rclb
mov
fcoml
pushf
sub
dec
pop
imul
inc
adc
mov
rclb
add
leave
mov
fcoms
lods
lods
adc
fimuls
je
push
push
jb
dec
inc
clc
pop
loopne
or
add
mov
int
mov
sbb
dec
sbb
into
pop
bound
pop
sbb
aaa
iret
aam
xor
dec
pop
rcl
loope
in
stc
cmp
sub
call
leave
lahf
cmpb
sbb
lret
sbb
cltd
xor
cs
and
cs
pop
add
fildll
and
pop
add
push
push
dec
push
aam
pusha
lea
lea
xchg
bound
sbb
sbb
pop
or
mov
jmp
ja
test
out
pop
fcoml
dec
or
mov
push
push
cs
fsubr
pusha
stos
adc
inc
adc
xchg
xchg
dec
xlat
lock
or
cltd
arpl
xchg
fidivrs
in
xor
xchg
push
shll
sub
xor
fistl
jne
xor
fxsave
test
inc
out
sub
cmp
pop
pop
cmp
adc
dec
pop
and
lods
fsubl
jb
repnz
fisubs
add
mov
shlb
inc
cmpsl
inc
mov
xor
sub
or
les
popa
imul
sub
popa
pop
xchg
movsl
jno
xlat
mov
add
jecxz
pop
cmp
pop
sbb
inc
sub
xor
stc
sub
push
cltd
popa
mov
push
mov
inc
cmp
jo
fisttps
add
adc
je
inc
leave
pushl
data16
jecxz
cs
adc
out
and
dec
xchg
arpl
ret
xchg
sub
outsl
aad
jecxz
xchg
test
mov
sbbl
xor
cmpsb
xchg
addr16
cld
xchg
cmp
lret
push
mov
jne
std
inc
adc
lcall
fnstsw
adc
es
shrb
popa
test
jl
into
ss
les
stc
cmpb
lds
adc
pop
inc
push
mov
pop
xchg
xor
sbb
je
mov
shlb
or
xchg
inc
cmpsb
lock
into
add
les
mov
or
push
scas
lods
add
movsl
jp
loop
jae
test
movsl
cmp
xlat
push
xor
lock
imul
aaa
fidivl
dec
inc
jmp
xor
xor
push
inc
pop
lock
adc
add
or
test
outsb
repnz
mov
arpl
out
xchg
loop
ret
adc
sub
in
fdivrp
push
xchg
push
mov
movsb
sti
jne
adc
xorb
pop
cmp
mov
dec
and
sub
sub
mov
mov
pop
and
inc
in
rcrb
out
outsl
push
lahf
cmpxchg
mov
movsl
lods
xlat
pop
mov
pop
lock
scas
push
out
loop
cwtl
mov
xchg
xor
in
push
push
add
mov
add
in
repnz
insb
rorb
cmp
std
push
lods
outsb
and
sub
cmp
std
insl
and
xor
mov
fstpl
out
test
adcl
int
insl
jg
mov
mov
shll
cmp
add
ss
lock
and
mov
adc
or
mov
leave
fiadds
ret
aas
je
fwait
popa
sbb
xchg
add
pushf
inc
sbb
sarw
insb
jle
adc
mov
xchg
dec
pop
xlat
call
xchg
push
pop
dec
sahf
cmc
cld
cmp
and
dec
shrb
adc
xor
sahf
mov
insb
adc
or
push
rcrb
push
xchg
aad
mov
cmc
loop
inc
addr16
add
inc
mov
jecxz
adc
les
sbb
jnp
mov
sarl
jl
daa
mov
dec
js
fld
insl
cmpsl
push
mov
loop
xor
loope
sub
dec
pop
and
ret
pop
jle
shrl
cmpl
rorl
enter
inc
and
push
jmp
cmpsb
fdivl
push
leave
popa
cli
iret
or
stc
imul
pop
in
cmp
sbb
insl
push
push
push
lcall
stc
or
pop
jl
iret
imul
andb
lret
or
lock
into
mov
dec
sahf
mov
fmulp
hlt
dec
idivl
jp
je
xor
fstpl
mov
adcb
shll
mov
enter
or
sbb
sbb
icebp
push
xchg
cmp
adc
fmull
mov
fdivl
int3
sub
sbb
xchg
sub
sbb
jbe
popa
ds
and
outsl
push
sbb
and
xor
aam
mov
gs
popf
jo
mov
leave
movsl
inc
idiv
mov
pop
sbb
test
movsb
sbb
in
cmp
js
pop
je
dec
pop
pop
cwtl
pop
fstl
test
mov
or
add
in
xorb
idivb
fistl
addb
sbb
add
jbe
pop
filds
mov
aam
ljmp
gs
scas
sub
cwtl
push
rolb
mov
mov
pushf
inc
cmp
jns
loop
sbb
mov
jnp
shlb
in
xor
and
sub
ds
or
xchg
cmpsl
daa
sub
xchg
jae
pop
aas
loop
dec
inc
fistpl
mov
repz
mulb
jns
push
mov
lret
jmp
adc
sahf
sbb
jb
mov
push
mov
mov
outsl
inc
cld
out
ficoms
jne
enter
pop
and
lahf
xor
xor
or
negb
mov
rol
mov
jl
mov
lods
out
mov
add
cwtl
in
or
das
mov
repnz
adc
mov
or
imul
mov
push
lea
movsb
and
mov
pop
inc
cmpsw
lret
xchg
sbb
outsb
jp
cmp
rcr
and
add
cwtl
xchg
mov
push
mov
call
or
cmp
xor
jo
xchg
adc
xor
ret
shlb
dec
out
mov
outsl
loop
insl
mov
andb
sub
outsb
mov
lahf
mov
loope
fmull
js
and
test
enter
mov
jl
mov
dec
hlt
push
pop
cwtl
sbb
mov
je
cmp
mov
and
xchg
mov
sub
sub
ds
into
adc
sahf
out
negb
or
ret
enter
loop
jne
inc
cmp
mov
das
mov
int3
cmpsb
cmp
or
inc
push
jp
les
push
scas
fwait
ret
pop
jbe
inc
fcom
push
bound
inc
scas
adc
leave
jae
xor
push
xchg
xchg
cli
in
push
out
stos
ja
mov
pusha
and
xchg
daa
js
xor
push
fidivl
ret
jmp
xchg
notb
xor
test
inc
xor
pop
xchg
popa
push
scas
sbb
dec
adc
sbbb
movsl
ja
fwait
repnz
push
pop
jge
lahf
mov
cmc
adc
in
mov
fisubl
insb
pop
mov
xchg
adc
repz
es
aas
movsb
fsubs
sub
je
test
int
gs
cs
popa
mov
rolb
xchg
cwtl
aas
jo
pushf
mov
mov
movsb
movsb
inc
fstl
fsubrp
xor
cmp
pop
ljmp
pop
push
in
add
stos
cli
sbb
lret
pop
xchg
jle
mov
iret
xor
add
mov
push
push
out
xchg
push
ljmp
jb
push
call
push
iret
add
mul
out
mov
imul
jns
or
cli
xchg
repnz
dec
cmp
xor
popa
aaa
mov
cmp
test
sbb
mov
dec
mov
lock
std
sub
hlt
push
jbe
adc
mov
std
jecxz
cmp
mov
into
movl
cli
lret
jne
cmpsl
gs
movsb
mov
jge
dec
pop
sbb
mov
je
cs
mov
inc
les
mov
jne
lods
sub
xchg
jg
test
testl
scas
push
movsb
mov
fs
xchg
movsb
addl
sbb
mov
push
cmp
or
dec
dec
push
outsb
lret
pop
jecxz
lea
and
mov
or
dec
cltd
and
jns
add
pminsw
nop
and
inc
jmp
mov
cld
push
sbb
sub
imul
popf
add
hlt
mov
outsb
sbbl
mov
call
les
dec
ffree
jmp
aam
in
fucom
fstl
xor
push
cmp
test
lret
mov
mov
sbb
jb
in
stos
cli
mov
setno
test
xor
cmc
mov
in
xchg
pop
cmc
sub
mov
xchg
insb
daa
jl
call
or
daa
mov
mov
stc
push
cwtl
aad
jns
outsb
cmp
push
ljmp
ljmp
sahf
sti
cmp
aaa
int3
add
jle
cwtl
jnp
fbstp
or
adc
addr16
dec
scas
mov
leave
xlat
sarl
je
mov
lock
sub
dec
aam
shl
test
loopne
xor
add
mov
jle
shrl
test
jge
pusha
mov
lods
jae
in
and
arpl
subb
leave
push
cld
data16
jmp
dec
push
loope
stos
pop
in
out
push
adcl
sub
mov
stc
das
and
push
push
jo
jmp
or
popf
inc
xchg
mov
stc
arpl
sbb
cmp
sbb
iret
xor
dec
in
sti
or
add
or
cld
push
mov
incb
sub
sarb
pusha
shll
dec
std
sub
nop
pop
xor
in
adcl
xor
pop
adcb
stos
sbb
xor
in
pop
mov
icebp
in
test
push
imul
je
pop
jbe
xchg
mov
mov
into
das
mov
mov
icebp
pop
decl
mov
aam
fiadds
sbb
stos
mov
cli
and
add
popf
js
mov
pop
xchg
popf
cmp
sub
push
aam
aad
cld
jmp
scas
les
inc
test
push
mov
or
gs
dec
test
addl
arpl
jge
adc
adc
outsb
cld
inc
push
mov
ljmp
jae
test
and
in
movsl
es
push
inc
ljmp
dec
les
pop
pop
sub
js
mov
out
adc
imul
sar
lcall
jecxz
pop
std
pop
mov
in
jnp
cmp
xchg
mov
push
je
jp
data16
test
jnp
in
push
mov
jbe
or
xchg
scas
aas
sub
pop
gs
cmc
push
nop
sbb
cmp
ficomps
add
jnp
xor
xchg
dec
mov
push
shl
mov
shrl
sbb
dec
insl
fdiv
push
hlt
fwait
adc
repz
in
setle
sbb
xchg
rcll
es
push
je
out
sahf
xor
xchg
in
ret
stos
mov
aam
sbb
pop
dec
mov
mov
mov
imul
pop
xor
push
mov
jnp
ret
mov
mov
sub
xor
xchg
cmp
pusha
mov
aaa
decb
jb
xchg
addl
frstor
jp
and
fwait
mov
and
insb
sbb
stos
inc
push
and
xor
stc
push
cmpsb
sub
add
add
sub
cld
movsb
les
sbb
fdivrl
dec
rclb
imul
pop
test
enter
inc
mov
out
cmp
xchg
inc
insl
jne
ret
je
mov
push
test
sub
aad
cmp
sti
sbb
adc
mov
cmpsb
cmp
push
pusha
cmp
inc
fistpll
mov
int3
push
jp
mov
lret
jo
sub
aam
test
orb
or
add
fucomip
cmpsb
lock
xchg
xor
jmp
cmp
mov
mov
into
xlat
adc
push
pop
pop
jmp
push
js
push
add
fdivp
cmp
sub
push
cmpsl
ret
xchg
xlat
outsl
or
ss
jmp
sti
sbb
push
xor
insb
jecxz
xchg
push
nop
jno
aam
scas
subb
jbe
sub
jg
pop
push
rcrb
mov
add
daa
jnp
pop
mov
outsl
out
mov
cld
dec
dec
and
sbb
loopne
mov
lcall
enter
dec
out
push
pop
je
pop
sub
xchg
dec
fidivl
cmc
push
lock
jecxz
xor
jmp
fstl
lcall
and
sub
mov
ds
std
mov
mov
fcompl
por
imul
push
mov
fsts
push
mov
mov
or
dec
popf
or
adc
loop
aad
push
fldt
adcl
xchg
sbb
lock
xchg
imul
popf
mov
loope
jmp
mov
adc
push
iret
lods
xor
push
je
loope
cmp
push
sbbl
push
pop
aad
ret
int
dec
jg
pop
mov
dec
cmc
pop
repz
push
pop
mov
ret
das
shlb
in
das
fsubrl
lds
mov
mov
out
jo
addb
fidivrl
pop
popa
cld
pop
push
mov
stos
shl
xchg
sub
jecxz
mov
fsincos
inc
rorl
pusha
mov
cmpsb
jnp
cld
lcall
jne
ret
sbb
or
fsubrl
fldenv
or
pop
mov
leave
jge
xor
jmp
push
repnz
jmp
or
ret
inc
mov
int3
pop
lret
or
stc
dec
push
lea
arpl
std
jmp
ret
push
mov
ljmp
testb
aam
repnz
inc
sar
or
je
addr16
ret
out
test
adc
lret
xor
jp
scas
add
test
ret
xchg
fsubs
cmpsl
dec
cmpsb
xchg
bound
loopne
sub
mov
fsubrl
mov
pop
nop
sub
je
jb
outsb
sahf
sub
add
or
inc
ja
dec
pop
cmpsb
xchg
orb
cmpsb
subl
jp
pop
les
jecxz
inc
jecxz
repz
mov
cmc
popa
pop
mov
iret
pop
xchg
imul
lock
jnp
cmp
jecxz
or
dec
nop
jnp
xchg
push
pop
cmp
stos
out
jle
outsb
inc
loop
mov
push
pop
inc
fildl
loopne
dec
fcom
je
pop
jae
test
mov
xorl
imul
mov
xchg
call
fmuls
sub
leave
adc
sti
sbb
inc
push
rcr
push
ss
fisubrl
gs
and
packsswb
or
cmpsl
in
push
and
popa
xor
cmp
push
call
fidivl
and
aam
out
mov
lods
add
xor
mov
push
nop
daa
mov
mov
adc
int3
jbe
jb
or
ljmp
xor
push
popa
imull
enter
and
mov
jns
data16
es
lock
push
repnz
or
in
push
movsl
xor
cmp
mov
lcall
xor
cmp
push
clc
inc
mov
fmulp
cmp
test
mov
xchg
not
jbe
cld
mov
or
bound
push
jae
stc
jle
xchg
cmc
mov
imul
adc
or
xorb
stc
scas
vaddsd
in
pop
pushf
xor
push
bswap
push
push
fnsave
mov
out
add
scas
jbe
incb
mov
dec
scas
pop
out
xchg
aas
loopne
xor
and
xchg
mov
outsb
mov
add
pop
xor
in
stos
adc
enter
xchg
lock
shl
jns
mov
repnz
xchg
and
jb
aas
add
mov
addr16
fbstp
sarb
shr
into
fdivl
adc
cmp
outsl
push
filds
mov
xlat
repz
idivl
fwait
lock
movsb
fiaddl
mov
lea
testl
divb
jo
addr16
dec
fstpl
out
scas
mov
sub
jmp
pushf
shlb
inc
fcoms
sub
xchg
dec
pop
aaa
jmp
xor
into
test
fbstp
leave
nop
xlat
push
mov
gs
jecxz
lods
scas
xor
mov
leave
pop
out
outsl
add
pop
fs
and
shlb
loop
int
sbb
pop
jne
push
push
into
push
mov
loope
sub
roll
jge
int3
xchg
push
outsl
and
dec
test
lret
xchg
dec
xor
cmpsb
or
and
lods
stos
cs
pop
int3
xor
sub
add
inc
jle
das
jmp
loope
mov
scas
sbb
test
or
outsb
insl
add
rorl
mov
into
cs
dec
inc
or
enter
mov
das
cmp
xchg
xchg
repz
cld
push
jae
bound
inc
shrb
adc
pop
test
sub
dec
fnstcw
jbe
jo
pop
es
pop
ds
mov
adc
adc
inc
add
xchg
sub
out
dec
inc
jmp
cmp
fld
js
js
push
ds
negl
lods
mov
mov
ja
imul
mov
push
cltd
cwtl
sub
stos
dec
add
or
xchg
call
cmp
xor
cli
cmpsl
mov
cmc
sti
mov
dec
mov
adc
test
repz
cmpsl
pop
fisubrs
out
xchg
stos
fcoml
push
and
shl
bound
imul
scas
enterw
jo
in
xchg
mov
mov
outsl
call
and
psrlq
rorb
testb
lahf
inc
adc
es
in
jne
mov
mov
sti
mov
es
mov
int
pop
aas
loop
in
inc
fdivrs
pop
ret
dec
mov
ljmp
jb
cmp
lret
mov
jmp
xchg
sbb
sbb
adc
fisttps
adc
jae
xchg
mov
imul
fiadds
push
cmp
insl
and
inc
pop
dec
or
mov
stos
loop
mov
mov
sub
fwait
cld
sbb
in
sbb
insl
inc
inc
inc
push
mov
lea
adc
sbb
xor
dec
jno
fists
mov
cmp
cmpsb
xchg
jg
lods
xchg
jp
loopne
cmp
inc
pusha
divl
lea
fs
rorb
sbb
or
test
jge
xchg
xchg
adc
cs
imul
cmc
or
mov
test
sbb
add
add
pop
shlb
ret
sbb
aas
or
movl
and
shrl
xchg
sbb
icebp
mov
stos
imul
mov
push
je
imul
add
hlt
jle
pop
mov
lea
fisttpll
cmpsl
jno
xlat
test
aad
mov
mov
fcmovb
dec
or
cmp
mov
shl
add
xchg
pop
ror
cmpsl
imul
xchg
pop
pop
inc
addr16
fbld
ds
xor
repnz
pop
sub
pop
jns
add
xorl
ljmp
mov
cmp
xorb
pop
fsubr
push
mov
fsts
sbb
jb
cmp
shrb
mov
pop
insl
sbb
fstpt
push
mov
pop
sbb
cmp
push
push
dec
outsl
mov
pop
test
mov
inc
jbe
test
dec
push
out
mov
add
test
out
xor
lcall
xchg
sub
fnstenv
outsl
ret
cld
mov
adc
cltd
cmpsb
sahf
xor
sbb
dec
adc
push
mov
pop
popf
xor
inc
push
iret
inc
mov
inc
cltd
mov
inc
mov
push
fs
mov
jo
sti
fstpl
test
push
fiaddl
or
lods
dec
dec
mov
sahf
jg
xchg
rolb
mov
push
mov
int
cwtl
das
lods
or
push
add
lret
js
add
push
inc
and
fdivrl
scas
inc
das
repz
std
iret
aaa
ret
aas
pusha
iret
jne
lcall
and
fucomp
popa
stos
out
adc
xor
jbe
push
sbb
mov
xor
dec
imul
add
movsb
sub
mov
xor
scas
adc
outsl
add
ss
xor
popf
call
ljmp
mov
jne
inc
std
and
push
clc
mov
insl
or
arpl
ljmp
sub
bound
addb
mov
mov
scas
xchg
pop
fbstp
or
dec
testb
jge
sbb
movups
mov
lahf
ss
push
sbb
mov
pop
daa
or
cltd
jns
icebp
jns
in
lds
jbe
mov
ds
add
cld
outsb
iret
loopne
jae
xchg
sub
mov
and
pop
repnz
stc
adc
retw
icebp
fisttpl
imul
sbb
mov
jecxz
fmuls
addr16
add
adc
mov
jp
in
inc
xchg
mov
pop
ficoms
xchg
addr16
fdivl
pop
ror
cli
adc
jg
cmp
cmp
rcrb
or
jno
sub
cmp
dec
jecxz
cmc
sbb
out
push
fisubrs
xchg
shll
and
int3
xor
jo
mov
xchg
shrl
pusha
sbb
in
leave
pusha
bound
adc
pop
call
jge
jmp
imul
cmp
push
push
xor
lds
jl
pop
pop
test
cmpsb
mov
pop
repz
aad
movsb
pop
pop
sub
adc
jne
sbb
xchg
loope
xchg
add
sbbl
popf
daa
adc
pop
mov
test
mov
ds
mov
test
shlb
mov
loopne
es
in
mov
fcoms
inc
out
stc
pop
movsl
das
pop
cmpsl
lcall
add
popa
cld
sbb
sbb
and
push
rclb
dec
pop
cmp
loopne
xchg
pushf
movsl
dec
cmp
cmp
sbb
outsl
dec
stc
and
mov
nop
sub
and
mov
fnstenv
arpl
test
mov
jne
repz
ds
add
addr16
in
mov
cmp
mov
ficompl
stos
mov
push
mov
dec
popf
xor
jbe
shrb
rcr
sub
lahf
mov
stos
and
add
jp
pushf
aas
adc
cmp
cmpsl
aam
pop
lock
fistpl
cmc
xlat
pop
dec
cmp
sahf
xor
push
jo
mov
scas
pop
jnp
ljmp
pop
sub
mov
test
int
fbld
pushf
lock
ljmp
or
cmpsl
mov
xchg
push
pop
rclb
inc
stos
imul
sbb
shlb
inc
xor
cmc
dec
inc
stc
cmp
jmp
sub
stc
jnp
push
push
or
xor
mov
hlt
jg
mov
jge
xchg
lea
addr16
or
cld
pop
add
outsb
sahf
or
aas
mov
dec
push
push
add
jno
mov
stos
pop
repz
push
int3
and
fucomp
cwtl
test
inc
push
mov
push
stos
loop
inc
fcmovbe
mov
lret
cmp
jnp,pn
fdivl
mov
std
scas
inc
out
out
arpl
xchg
and
mov
out
mov
and
push
outsb
xchg
out
push
jp
out
dec
cmp
add
sbb
mov
push
fidivl
loope
sti
repz
push
dec
leavew
pop
inc
and
jg
movsl
outsb
sub
aam
dec
stos
mov
mov
sub
cmc
cmp
cmc
push
push
dec
shll
jbe
mov
loope
inc
mov
out
mov
sbb
sub
xchg
sub
dec
xor
lret
or
test
jecxz
into
in
fldcw
push
sar
je
fsubl
dec
outsb
jnp
push
subb
or
mov
pop
push
nop
push
bound
lret
mov
aad
xchg
jne
leave
cmpsb
pop
mov
cltd
aas
push
inc
jno
cwtl
outsl
and
push
lret
notb
cmpl
loop
jle
lret
add
mov
jp
subb
push
push
add
add
inc
push
lds
mov
stc
mov
push
int3
mov
xchg
adc
xor
test
mov
mov
cmc
pop
push
push
fnstsw
push
insl
testb
xchg
insl
je
xchg
inc
in
test
xchg
mov
mov
cwtl
push
mov
dec
jl
adc
ss
divl
enter
enter
push
mov
or
data16
push
mov
in
sbb
inc
push
inc
mov
pop
dec
into
jno
inc
mov
shll
dec
rcrl
lea
mov
je
pop
inc
add
scas
in
push
push
push
adc
out
inc
add
xchg
xor
ret
pushl
cmp
in
jmp
lret
and
mov
loope
lret
addr16
cmpb
pop
out
fmuls
sub
dec
push
mov
outsl
into
in
fstpt
je
mov
jne
loope
test
fimull
shll
mov
lret
mov
bound
dec
push
sbb
iret
popa
js
in
mov
stos
pop
mov
es
jl
loop
or
jo
add
mov
jae
xor
mov
test
jbe
add
jno
push
addb
jge
xorl
or
inc
imul
add
into
or
jb
or
xchg
cmp
pop
sahf
clc
adc
lea
add
cld
xchg
icebp
test
pop
mov
aaa
dec
outsb
dec
movsb
cmp
daa
push
mov
xor
jo
out
ficoml
repnz
clc
sti
loop
fmul
mov
mov
mov
add
je
mov
xchg
jge
cli
popa
or
fwait
jbe
vfmsub231pd
push
in
or
into
cmp
frstor
xorl
rcrl
mov
add
in
pop
out
pop
fucomip
imul
into
fsts
and
adc
fsubl
cltd
xor
mov
pop
insb
xor
addb
in
out
insb
jo
insl
loopne
sbb
test
jecxz
pop
cwtl
sub
push
fxch
repnz
arpl
out
push
mov
fisttps
jns
mov
mov
into
pop
mov
out
xor
dec
pop
idivl
push
iret
pop
xchg
xor
xorb
or
sbb
jae
mov
and
adc
inc
or
xlat
imul
mov
not
xor
dec
sbb
popf
lods
mov
rolb
push
and
imul
cmp
into
add
cmp
test
sbb
add
add
push
rcll
movsb
mov
jns
inc
fidivrl
outsb
in
lahf
mov
jne
fdivrl
add
pop
mov
or
lret
jae
jg
mov
jecxz
out
push
or
xchg
sbb
inc
or
cmp
int
dec
loopne
dec
or
cmc
mov
outsb
loope
mov
dec
shll
leave
pusha
pop
lods
lock
insb
fwait
xor
sti
sbb
xchg
cld
sbb
cmp
js
or
cmpl
popa
out
adc
jmp
mov
sahf
inc
fcmovne
add
cmp
dec
in
imul
int
scas
in
add
cmpsl
xor
lods
push
scas
push
push
lret
adc
cwtl
dec
jne
xor
orl
jge
mov
cmc
adc
xor
sbb
movsb
mov
push
push
push
jge
xor
adcl
sbb
sub
inc
sub
xor
inc
ss
sti
mov
mov
inc
in
scas
leave
sbb
and
inc
jle
cli
mov
jno
pop
jne
dec
addb
add
jg
jp
loope
ljmp
jno
jle
outsb
mov
test
lret
ja
xchg
or
fildl
xor
adc
mov
xor
es
pop
out
dec
in
sbb
scas
sbb
sar
mov
pusha
jp
cli
test
inc
out
pop
ret
inc
sbb
dec
arpl
mov
ret
pop
cmpsb
xor
gs
add
xchg
cltd
sub
lods
jle
mov
std
xchg
add
xorl
aad
stc
dec
pop
sub
fucomp
jmp
pop
ret
xchg
cmpl
imul
das
adc
fstpl
fs
mov
mov
mov
out
nop
in
cmp
movsl
aad
mov
push
mov
mov
imull
loop
call
jae
xchg
mov
movsl
nop
flds
cld
outsl
pop
adc
hlt
sub
xor
insb
jo
dec
int
mov
jecxz
or
jae
cmp
or
push
popf
mov
add
dec
cmp
cld
and
and
aas
cmp
adc
nop
cmp
cmc
mov
adc
mov
cmpsb
jbe
fcoms
push
jl
xchg
cmp
inc
sbbl
sbb
xor
outsl
lock
aam
jecxz
cmp
push
dec
movsb
ja
in
add
add
jne
push
ror
int3
sub
mov
sbb
dec
mov
into
mov
cmpsl
jle
fs
cmpsb
xlat
add
dec
in
out
test
lahf
mov
jg
and
sbb
pop
inc
testb
fidivrl
pop
mov
push
in
xchg
mov
sbb
sub
es
sahf
lock
test
push
lret
andl
xor
or
jle
fsubs
push
or
ret
xchg
and
xchg
mov
test
dec
mov
aad
aaa
sarb
inc
push
lea
xor
add
mov
popa
pop
in
shrl
push
call
test
in
mov
dec
sbb
jmp
mov
leave
popa
imul
movsl
jg
mov
repnz
jecxz
fnsave
enter
inc
cli
push
sti
mov
or
xchg
xor
int
mov
or
icebp
repnz
aad
pusha
sbb
scas
std
xchg
addr16
sub
xchg
sub
mov
loope
inc
push
inc
jo
stc
mov
mov
cmpsl
mov
sub
fwait
pop
dec
iret
lret
aas
mov
movsb
popa
and
fsubrs
sub
jns
lods
lods
mov
dec
jb
sbb
imul
pop
mov
jns
mov
cmp
sahf
xchg
fidivs
cmp
add
sub
stos
cmp
jmp
add
fildl
lock
nop
xor
mov
inc
into
or
lcall
lods
push
test
add
mov
ret
xchg
or
jg
cld
xchg
sbb
fiadds
aaa
outsb
popf
push
adc
inc
xor
insl
das
cmp
add
push
in
pop
rolb
ds
out
push
inc
and
cmc
inc
and
push
jge
inc
push
test
dec
enter
mov
push
sahf
gs
popf
aad
jecxz
cs
add
jecxz
mov
mov
mov
fnsave
into
leave
lods
jno
dec
mov
push
ds
mov
dec
mov
mov
jecxz
cmp
into
leave
ljmp
fdivl
scas
inc
xor
push
cmp
shrb
and
mul
das
lret
shlb
pushf
xchg
inc
mov
cmp
fistpl
pop
imul
sbb
mov
lods
mov
sub
push
pop
rorb
mov
sbb
mov
xchg
hlt
and
mov
inc
stos
leave
mov
fdivl
test
inc
fstpt
xor
add
stos
push
and
test
adc
pop
cwtl
punpckhdq
subl
mov
jo
clc
adc
jne
mov
sbb
jno
movsl
lea
or
xor
je
push
leave
inc
sbb
fmull
inc
dec
sbb
adc
icebp
and
in
jo
in
mov
xor
push
push
cmpsl
jb
leave
xor
es
mov
mov
sub
xor
bound
sub
lock
xchg
test
bound
cmc
cmp
addr16
out
aaa
dec
push
sbb
mov
sub
jmp
es
stc
mov
out
lock
lods
mov
addr16
mov
xor
jo
aas
add
xchg
inc
int
mov
and
movsb
cmp
xchg
cmp
cmp
pop
cmp
jmp
mov
ds
fs
xchg
repz
or
lret
dec
fidivs
fildl
sar
lods
mov
fdivrl
repnz
push
imul
mov
fisubl
mov
mov
popa
add
out
repnz
push
out
cmp
mov
push
lock
push
in
xchg
push
xchg
add
nop
in
xor
popf
pop
insb
jle
mov
pop
aad
mov
lods
repz
mov
lods
pop
iret
fisttpl
stc
mov
fwait
aaa
mov
xlat
leave
test
cmp
stos
inc
add
push
loopne
test
inc
fdivr
mov
or
int
mov
insl
pop
in
push
push
pushf
ljmp
sahf
inc
lods
inc
xlat
insb
sub
ss
out
inc
mov
int
mov
es
jno
pop
rcll
xchg
xchg
or
test
add
int
ja
jecxz
fnstenv
dec
push
mov
jmp
dec
inc
popa
loope
aaa
imul
xor
and
xchg
mov
outsl
outsl
lcall
pop
lea
mov
sub
inc
pop
stos
fimull
xchg
xor
pusha
jne
aad
jae,pn
inc
xor
sti
cmpsl
sub
inc
sub
lock
xchg
icebp
push
adc
sub
sbb
pusha
push
adc
gs
es
dec
int
pop
push
sub
pop
pop
lret
shrl
in
std
jae
mov
xor
int3
add
sbb
int3
sbb
dec
pop
push
out
push
dec
cmp
lcall
std
cltd
mov
push
jns
xchg
sub
inc
xchg
sub
sub
sbb
add
add
push
push
divb
cmp
mov
adc
sub
xor
ret
sub
dec
pop
in
mov
insl
loop
repnz
js
cli
pop
push
je
scas
fcmovne
aam
mov
jle
adc
adc
sbb
mov
jae
scas
icebp
push
push
int3
es
scas
jne
cmpsl
iret
movsl
mov
sub
adc
jae
cwtl
adc
adc
leave
xchg
jno
das
outsl
cmp
lcall
and
push
inc
sti
xchg
xchg
daa
mov
sbb
sbb
popf
inc
test
cld
pop
add
jg
punpckldq
inc
adc
sahf
jno
inc
imul
pusha
push
cmp
ljmp
pop
adcb
shrl
leave
pusha
mov
jo
or
xchg
dec
popf
imul
mov
xor
idivb
jo
hlt
push
dec
pop
pop
lahf
arpl
aam
loop
loope
cld
xchg
ds
mov
pop
aad
fiaddl
jns
dec
or
movsb
mov
fldt
sbb
inc
push
pushf
das
cli
xchg
dec
mov
jne
sbb
fwait
and
sub
lahf
into
int
repnz
ret
inc
das
and
xchg
mov
xor
xor
pop
jbe
mov
jns
add
scas
inc
je
shlb
xchg
repnz
pop
xlat
or
clc
inc
or
jae
mov
pop
pop
push
jae
inc
pushf
insl
add
xor
outsb
mov
into
dec
loopne
xchg
out
hlt
pop
cmp
decb
mov
and
pushf
inc
and
or
dec
imul
pop
cmp
and
lcall
out
xchg
or
mov
pusha
fs
in
dec
mov
dec
fistpl
cmpsb
dec
jnp
data16
jmp
and
rcll
inc
popf
lret
sub
ss
push
scas
out
dec
insl
push
cmpsl
cmp
in
or
sbb
sbb
pop
push
and
test
or
fstpl
add
hlt
lret
and
lcall
dec
movsb
mov
dec
dec
jns
push
scas
sub
nop
fdiv
or
ret
std
adc
mov
jae
mov
cs
jge
pusha
xchg
test
aad
js
xor
sti
wrmsr
mov
mov
jmp
inc
test
cmpsb
jo
fcomps
push
sbbl
add
jecxz
je
out
sbb
idivb
jg
fcmovnu
in
mov
jl
movsb
or
xchg
pmulhuw
or
insb
ljmp
addb
fwait
xchg
mov
fisubs
loope
and
rclb
inc
pop
dec
push
lea
aam
or
mov
and
pop
loopne
movsb
adc
or
inc
clc
jecxz
shll
cwtl
mov
push
dec
jbe
and
lret
and
imull
aam
shrl
negl
push
add
mov
mov
hlt
sbb
jmp
adc
and
push
mov
jle
mov
js
mov
jmp
pop
out
xchg
mov
repz
xchg
mov
jb
bound
jmp
std
inc
loop
aaa
jb
cmp
mov
jmp
movsl
lock
xor
xchg
imul
sub
orb
pop
fmull
in
and
outsl
lods
adc
aad
inc
notb
xchg
test
add
mov
adcb
push
add
fdiv
cmp
sub
pop
mov
mov
mov
lcall
shr
frstor
subl
stc
or
or
movd
out
es
arpl
out
jnp
cld
scas
insl
loopne
xchg
xchg
push
insl
pop
insl
mov
mov
adc
sti
bound
gs
push
sub
test
and
cmpps
dec
push
jp
pop
adc
das
arpl
out
cmpsb
loop
pop
sbbb
out
je
popf
call
popf
mov
mov
in
out
dec
out
in
and
mov
mov
adc
jecxz
xor
dec
xchg
rcl
or
sub
pop
jmp
dec
dec
or
clc
mov
lds
rcr
mov
sbb
popa
mov
sub
leave
jne
andl
xchg
or
ja
enter
adc
das
addr16
cmp
pop
std
lcall
cltd
decb
testb
mov
adc
pop
cwtl
aas
push
jecxz
jle
dec
pop
jb
mov
sub
ds
mov
mov
jne
in
adc
pop
xlat
pop
fimuls
jb
xor
jmp
leave
lods
iret
lods
sub
inc
xor
add
outsl
mov
mov
cmp
jb
js
in
jl
icebp
cmp
outsb
mov
mov
push
xor
and
cmp
xor
jge,pt
add
in
push
and
push
daa
jae
mov
mov
lret
or
daa
movsl
imul
push
or
inc
push
xchg
cltd
mov
lret
ds
ja
loope
mov
mov
pop
sbb
jmp
xchg
std
push
call
sbbb
pop
repnz
fisttpll
aas
pop
jmp
inc
out
insl
and
sbb
adc
xor
xor
sub
aam
jecxz
cmp
push
shll
test
cld
mov
in
push
mov
bound
loopne
adc
cmc
idivb
sub
je
xor
push
xchg
sbb
popf
test
sbb
repnz
and
test
jb
inc
pop
or
out
in
push
mulb
dec
bound
mov
sub
push
mov
addl
popa
xchg
cltd
or
inc
push
sub
mov
sarl
or
int3
les
sbb
fdivrl
jg
dec
loopne
or
and
shl
mov
addr16
mov
or
cli
pop
inc
sbb
sbb
test
sbb
jl
and
and
jecxz
outsb
dec
sub
ret
or
and
xchg
in
scas
xchg
xor
subb
repz
sub
out
fstl
lea
daa
les
sub
dec
sahf
repz
popa
sarl
sub
mov
mov
out
dec
in
push
div
cmp
push
jo
jb
pop
int3
or
div
or
xchg
idivl
fmul
cltd
push
dec
loope
add
push
and
vpshuflw
stos
rcrl
jae
dec
outsb
sub
mov
pop
cmc
add
ss
dec
sbb
fdiv
rorl
jmp
pop
aam
xlat
out
andb
mov
rcrb
add
stc
nop
and
mov
mov
movsb
repnz
cwtl
jge
pshufw
cli
in
lods
mov
push
js
xchg
fnstenv
mov
pop
mov
dec
into
mov
xchg
pop
repz
les
lahf
pop
in
or
mov
cld
ds
out
sbb
cmp
hlt
stos
cmpsl
test
adc
aaa
fxtract
imul
or
pop
sarl
outsb
ret
mov
dec
jb
xchg
cmp
stos
addl
mov
xchg
cltd
std
dec
dec
dec
dec
adc
sub
dec
fidivs
popf
loope
popf
scas
cmpsb
mov
mov
pop
cmp
mov
lea
xlat
aas
loop
stos
adc
fld
mov
xchg
enter
dec
pop
dec
scas
pop
cmp
xchg
dec
and
outsb
xorb
mov
std
insl
mov
sub
push
outsl
mov
adc
jo
or
xchg
add
add
movsl
sbb
push
iretw
ss
into
jne
fdivrs
adc
cmp
xor
dec
jle
xor
push
jbe
mov
push
mov
pop
insl
adc
mov
and
jb
xchg
adc
dec
fldcw
jmp
dec
ret
repz
cmpsl
cmp
pop
in
packssdw
jae
insl
idivb
mov
in
inc
divl
xchg
lret
out
jo
push
lahf
mov
test
lods
jbe
push
lgs
lods
decl
lea
xchg
nop
cmp
pop
pop
pop
xor
pop
sub
loope
insb
adc
fs
hlt
jo
stos
adcl
dec
int3
in
mov
fwait
cmp
les
call
push
or
xchg
pop
push
lret
aad
jmp
pop
ret
sbb
adc
add
enter
lret
jmp
fcompl
out
inc
pop
jg
mov
dec
mov
roll
outsb
pop
push
jb
adc
adc
faddl
mov
fists
mov
add
pop
jmp
and
push
fbstp
jne
push
cli
popa
pusha
icebp
shlb
push
mov
cmp
scas
inc
push
xor
mov
xchg
mov
ja
push
pop
xchg
loope
xchg
incl
test
cltd
movsl
repz
push
ds
push
cli
lcall
scas
add
ja
xor
je
je
jnp
les
outsb
dec
data16
push
out
sbb
xchg
lock
dec
repz
ja
mov
pop
dec
and
movsb
cmp
mov
push
inc
jne
push
in
ljmp
mov
cltd
pop
fiadds
sti
xor
mov
outsl
push
inc
push
jo
dec
push
les
enter
lods
cmp
jnp
dec
lods
aad
pop
pop
xchg
mov
dec
fiadds
data16
cmp
divl
popf
mov
rorl
and
sarb
fistpl
aas
js
push
push
push
fdivs
int
stos
mov
iret
fstps
sbb
hlt
cmp
not
icebp
pusha
and
leave
mov
sti
xchg
xor
cwtl
dec
cmp
or
pop
cmp
adc
sbb
or
arpl
repnz
mov
pop
test
adc
scas
mov
xor
rcr
mov
xchg
cli
lret
clc
jae
sub
loope
xchg
dec
xchg
sub
push
mov
pop
in
mov
xlat
sub
mov
pop
dec
mov
lret
lds
push
fcmovne
mov
sub
fisubl
invd
push
jb
cmpsl
lods
or
fmulp
xchg
add
jl
jmp
aas
mov
jl
mov
enter
inc
ljmp
addr16
dec
push
idivl
inc
call
xchg
insl
mov
fimull
sbb
add
cmp
fstpl
outsb
lds
cmp
xchg
insb
add
or
fiaddl
mov
pop
sbb
mov
loopne
addr16
cmpsb
fwait
fs
iret
mov
mov
inc
fcoml
sub
jne
mov
and
lahf
pop
adc
mov
push
dec
loopne
xchg
add
ja
xchg
push
mov
cld
inc
pop
jmp
inc
ljmp
jns
mov
enter
imul
imul
insb
mov
and
cwtl
pop
iret
loop
in
insb
xchg
push
icebp
out
out
std
repz
xchg
test
add
dec
mov
bound
cmpsl
sbb
sbb
inc
outsb
jl
outsl
rorl
mull
xchg
cmp
adc
inc
cltd
lock
int3
mov
jp
sti
pop
mov
pop
lock
imulb
cmp
jge
pop
mov
cmp
xchg
lds
stc
inc
lret
sub
das
mov
mov
mov
jbe
and
sub
out
mov
dec
mov
shrl
jo
int
mov
mov
pusha
xchg
jmp
adc
cmp
aaa
jmp
fucomip
xor
fistl
or
and
shrb
lock
sub
sarl
pusha
mov
repnz
sarb
xchg
jg
sub
or
jmp
sbb
stc
or
dec
lods
push
ds
mov
es
sub
clc
inc
fidivs
outsb
pop
dec
pop
push
sbb
insb
jns
cmp
imul
mov
outsl
in
jge
ret
sub
mov
adc
nop
fsts
loop
mov
aaa
adc
movsb
scas
adc
repnz
jns
pop
inc
mov
icebp
ljmp
push
sbb
cmpsb
mov
int
mov
mov
xchg
fldenv
mov
jo
jg
inc
mov
sub
das
fwait
sti
shlb
out
aaa
andb
shll
sbb
jle
mov
mov
mov
cmpsb
mov
rorl
mov
sub
pop
or
mov
push
jl
push
mov
insl
sbb
cmp
dec
sahf
loopne
rcrb
or
sbb
xor
inc
jbe
loop
add
xchg
test
lcall
dec
jmp
fstpt
lea
xlat
jae
dec
in
call
fistps
inc
sahf
cmp
or
dec
jno
inc
pop
jo
popa
test
cmp
lock
inc
in
aam
cld
inc
movsb
mov
lret
sbb
sbb
dec
xor
ljmp
jge
hlt
in
out
push
sbb
in
mov
js
repz
pop
push
test
jns
fdiv
das
aam
aaa
pop
loopne
dec
out
adc
insl
or
insl
add
dec
call
pushl
dec
dec
push
fwait
or
aad
mov
cli
jbe
inc
movsl
movsb
cmp
cld
repz
and
inc
pop
fs
adc
or
je
test
cmp
adc
cli
pop
addr16
shll
lret
and
rcrl
jmp
int3
mov
pop
ja
rcrl
mov
jnp
sub
dec
jmp
jp
add
aad
mov
dec
cmpsl
push
jmp
add
adc
push
xchg
data16
stos
iret
sti
popa
clc
sub
rclb
cwtl
testl
sar
sbb
xor
xor
cmp
add
and
push
push
jno
lock
das
xchg
or
jecxz
test
iret
add
xor
hlt
push
stos
dec
sar
sahf
mov
xor
pop
adc
mov
nop
sbb
pop
negb
dec
sahf
add
lock
idivb
or
pop
add
xor
adc
fucomp
jns
sbb
cmp
aaa
clc
push
pop
test
lds
in
xchg
cltd
lret
hlt
mov
mov
inc
ficoml
push
mov
mov
pop
enter
mov
pop
addr16
dec
pop
cmp
jo
rcrb
mov
jmp
dec
pop
call
cwtl
movsb
cmpsl
shrb
lds
mov
pop
dec
inc
pop
shlb
sahf
mov
dec
daa
cmp
scas
out
mov
sbb
xor
dec
jne
add
test
fcompp
out
or
xor
and
push
insl
int3
mov
enter
in
cli
adc
scas
inc
mov
push
int3
mov
mov
adc
imul
sbb
inc
mov
hlt
or
inc
push
xchg
mov
mov
ljmp
pop
and
sbb
jp
mov
ficompl
sub
stc
and
btr
fs
cs
int
adc
push
mov
cmp
add
pushf
add
into
xchg
mov
adc
lods
stos
pop
and
loop
inc
and
out
movsl
hlt
in
mov
out
out
mov
push
std
out
add
insl
int
cmp
mov
ret
daa
mov
std
call
push
fdiv
sti
test
add
idiv
xchg
sub
inc
loop
cmpsl
js
add
addr16
orl
add
in
pop
fdivl
mov
mov
gs
call
fidivrl
dec
jecxz
xchg
adc
pushf
cmp
mov
nop
sbb
clc
add
jb
int
in
push
add
fstpl
mov
mov
pop
hlt
arpl
lret
outsl
gs
add
lea
bound
js
hlt
mov
std
mov
mov
stc
jns
mov
sbb
aas
dec
dec
mov
mov
push
adc
add
repnz
add
cltd
pop
and
and
sub
aas
decl
or
cmpsl
leave
popa
pop
lock
mov
outsl
pop
xor
add
pop
lcall
cmp
sub
and
aam
jbe
js
xchg
lock
dec
mov
insb
out
les
andl
mov
insl
shll
jmp
test
sbb
aas
add
fisttpl
repz
push
lea
or
push
jb
sbb
ds
repnz
pop
push
and
stos
jmp
lods
out
iret
push
jb
mul
mov
into
in
ja
jmp
or
add
push
aas
push
dec
xchg
addr16
jp
xchg
and
es
cmc
xchg
icebp
cmp
xchg
mov
fstl
mov
fcompl
jp
loop
xor
cld
mov
push
push
mov
ja
jl
adc
test
jp
pop
xor
in
xor
mov
inc
jmp
mov
enter
mov
leave
pusha
mov
pop
xchg
roll
ja
imul
cwtl
xor
out
test
dec
or
sbb
pop
popf
popa
jl
dec
jne
movsb
xchg
sub
push
fadd
rolb
xchg
js
dec
loop
cltd
iret
orb
add
sbb
outsl
dec
das
subl
rol
push
xchg
xor
aam
pop
jle
dec
pop
enter
adc
mov
xor
popf
xor
test
xor
xor
cmp
ja
outsb
enter
lahf
jge
add
xor
inc
ja
add
ja
add
scas
addb
iret
adcb
xor
lea
push
addl
mov
mov
cmpsb
sbb
shrl
cltd
cmp
and
addr16
inc
sub
xchg
dec
fsubrl
sub
adc
dec
fnop
lret
iret
cmp
in
outsl
mov
les
jp
sbb
cmp
inc
or
mov
mov
mov
mov
jmp
and
xchg
sti
push
push
in
inc
sbb
mov
fbld
xor
aad
ss
jns
push
mov
mov
mov
pop
sub
inc
xlat
les
jnp
sbb
orb
pop
mov
in
stos
popf
mov
adc
stos
inc
mov
imull
mov
and
ljmp
push
inc
jne
push
cmp
mov
xorb
popl
and
cmpsl
out
cld
lock
mov
jnp
js
fs
nop
xor
sbbl
xchg
mov
xlat
sub
mov
xor
pop
cmc
jg
int
pushf
mov
push
faddp
pop
fsubrl
and
mov
shrl
pusha
mov
std
push
gs
mov
sbb
stos
aas
dec
jne
mov
and
int
xor
out
cmp
push
cltd
sahf
das
jae
insl
in
in
std
sbb
aam
pop
adc
mov
popa
js
adc
mov
mov
and
mov
mov
push
ret
je
enter
or
pop
mov
pushf
mov
sbb
gs
les
scas
call
xorl
jne
aam
cli
xchg
sbb
cltd
or
sbb
leave
popf
ret
in
mov
or
push
and
sub
popf
xor
pusha
jo
aaa
push
out
dec
inc
fsubrl
inc
arpl
aaa
dec
loopne
pop
mov
lret
jecxz
mov
sbb
dec
push
cs
out
stc
jmp
out
cmp
inc
add
cld
test
xor
and
mov
cwtl
mov
add
test
jnp
ret
push
xchg
cmp
push
lcall
mov
pop
ret
frstor
jecxz
sbb
push
ret
mov
in
push
push
in
ljmp
dec
xchg
popa
sub
and
push
cmp
sarl
mov
pop
scas
jb
sbb
sub
ds
lahf
repz
xor
subl
movsb
adc
daa
lock
call
cmp
in
sarb
dec
and
pop
out
and
cmp
clc
dec
jecxz
add
add
cmp
pop
sahf
pop
jl
mov
pop
fldenv
jnp
fsubrl
leave
lret
dec
xlat
mov
js
mov
lahf
push
push
sbb
mov
jle
aam
cmp
pop
xor
xor
stos
into
mov
and
stos
and
ss
adc
mov
pop
mov
adc
adc
fs
pop
jmp
mov
aas
adc
mov
mov
mov
js
xchg
fstl
ret
arpl
inc
xchg
mov
and
add
std
inc
out
mov
nopl
repz
xchg
mulb
pop
or
iret
cmp
xlat
mov
pop
pop
dec
ja
stos
or
faddl
push
aas
jne
fdivrl
push
mov
lock
ds
rcr
jmp
imul
sbb
push
mov
into
rcl
xor
loop
adc
lret
jns
aam
jp
lods
or
lock
push
rdpmc
add
xchg
pop
cwtl
or
subl
pop
push
ret
sti
fisttpll
jg
pop
test
fstpl
sbb
mov
addr16
jbe
fldenv
and
jns
jb
fs
popf
imul
adc
icebp
sub
loop
and
ja
mov
add
inc
out
sahf
mov
rol
pop
sbb
mov
movsb
insb
pop
mov
fidivrs
mov
loope
fcmovnbe
das
mov
ja
add
rcr
adc
and
mov
fmul
fists
jb
test
clc
adc
cmpsl
pop
cmp
inc
in
outsb
inc
cmc
in
clc
es
xor
push
fists
sbb
test
or
push
nop
mov
out
pop
cmp
mov
or
dec
xchg
push
fldl
popa
frstor
mov
sbb
loope
cmp
movsl
ret
pop
pushl
pop
jnp
dec
hlt
int
mov
or
shrl
movsb
ret
mov
clc
loop
fidivl
adc
sub
inc
in
push
adc
jae
xor
jb
mov
xor
push
pop
dec
arpl
out
scas
orl
cmp
xchg
insl
dec
rolw
int3
xor
xchg
mov
xchg
or
test
rcr
cmp
and
push
jae
repz
add
daa
mov
push
pop
push
add
and
mov
mov
mov
stos
aad
push
mov
and
adc
aas
sbb
loop
xchg
mov
adc
cmp
fwait
push
push
mov
and
fidivs
lods
push
orb
push
inc
test
sti
push
or
fildl
inc
push
sub
rcl
ljmp
pushf
mov
and
xor
and
fbstp
jbe
int3
push
add
fldl2t
ljmp
push
cmc
shll
or
enter
lds
xchg
sub
pop
imul
insl
ret
fistps
cmp
mov
dec
adc
aam
outsb
out
cld
inc
cmpsl
repnz
pop
arpl
sbb
rorl
pop
and
push
movsb
sub
xchg
cmc
jl
ljmp
add
inc
pop
jae
adc
ss
mov
xor
dec
jmp
and
mov
or
mov
push
inc
insl
push
std
aam
jnp
pop
pop
cmpsb
leave
out
push
sbb
mov
adc
ss
push
dec
xchg
lds
cmpsl
dec
iret
mov
jb
and
cmp
int3
mov
nop
ss
sbb
pop
dec
xchg
cmp
imul
pop
shll
call
sti
inc
xor
arpl
xchg
out
jecxz
scas
call
pop
cs
mov
test
ljmp
out
test
xchg
or
dec
adc
xchg
js
jmp
pop
xchg
mov
cmc
xchg
sbb
jmp
or
mov
hlt
lahf
push
loop
cmp
sub
leave
sbb
push
dec
cmp
les
adc
jp
jb
rcll
and
sahf
xor
cmp
movsb
into
arpl
mov
xchg
and
ljmp
lret
sbb
movb
sub
outsl
pop
jo
xchg
ss
addr16
sub
add
adc
jg
add
loopne
rcll
mov
fimull
popa
lea
jmp
shll
lahf
ss
das
fldl
pop
enter
mov
sub
insb
adc
adc
and
fs
pop
out
out
stos
fcompl
jp
push
xor
es
mull
insl
push
xor
ret
cmc
jmp
cmp
lods
ss
arpl
popf
push
push
test
mov
fbld
fs
das
addr16
mov
cmp
push
and
imul
int
adc
in
xchg
jae
dec
mov
cmp
dec
fwait
push
jno
in
sub
bound
call
mov
decb
aad
xchg
push
leave
cmp
dec
push
and
dec
nop
pop
mov
pop
pop
repnz
push
nop
clc
push
sarl
int
cltd
push
outsb
or
lahf
jae
inc
push
ljmp
lds
pop
adc
icebp
lea
add
fwait
aas
jp
add
fisttpll
add
inc
xchg
xchg
lock
pop
mov
hlt
jp
and
daa
fdivr
push
inc
std
adcb
push
sub
sbbb
adcb
fsubrp
sbb
ljmp
mov
out
lret
push
pop
dec
push
in
nop
daa
and
xor
jne
flds
xlat
xor
or
scas
jns
jl
inc
pop
pop
in
pop
pushf
xchg
in
dec
stos
cmp
jae
imul
dec
test
push
sar
fucomi
fcmovne
or
xchg
data16
data16
std
xor
pusha
out
sub
mov
push
dec
add
rcrb
lods
adc
jecxz
dec
cmpsl
jge,pt
in
pusha
push
and
fisubl
stos
inc
orb
xlat
inc
push
fistl
rcl
adc
test
fidivl
scas
mov
loopne
and
test
sbb
adc
enter
call
add
jge
add
jmp
pop
jp
mov
jae
dec
mov
xor
mov
shl
jmp
loopne
into
les
cs
icebp
fnstenv
pop
dec
test
repnz
sub
push
pop
ficoml
mov
mov
push
test
orl
aad
mov
mov
dec
push
mov
fnstsw
fidivl
ret
fsts
dec
xchg
pop
add
int
adcb
bound
fcomp
sub
ret
sub
sbb
lcall
cwtl
adc
loope
inc
cmp
mov
cs
xor
mov
pop
or
sbb
adc
mov
jne
lods
imul
mov
jg
pop
jmp
cmp
xchg
movsb
mov
inc
mov
sar
jp
fimuls
call
jns
xor
cmpb
mov
adc
test
inc
mov
push
lcall
jl
mov
adc
sbb
popf
imul
adc
sub
gs
sbb
and
mov
cld
lcall
rorl
orb
addl
add
pushf
mov
arpl
test
and
das
clc
pusha
jne
fstps
mov
pop
inc
fsts
or
dec
in
and
imul
push
jns
and
jae
inc
jo
add
and
and
jmp
nop
jecxz
push
sahf
and
dec
dec
cmp
sahf
cmc
sub
movsl
cmp
mov
sub
roll
add
sar
mov
punpckhdq
pushf
xor
arpl
cld
inc
pusha
inc
fbld
incb
mov
aad
loop
rcrb
cmp
popa
cwtl
out
or
mov
out
cmp
jmp
cmovne
cmp
cmp
push
xchg
sub
js
jg
or
pop
and
leave
push
push
pop
out
add
fldcw
cltd
push
push
cmc
sete
and
iret
into
enter
dec
fcmovb
mov
jp
adc
push
stos
or
les
mov
sub
hlt
iret
scas
dec
dec
sbb
and
cmp
test
lods
xchg
cs
fsubl
fsubrl
jp
jb
fsubrs
sbb
outsb
movsb
pop
icebp
add
push
mov
or
jno
mov
add
mov
sbb
and
adc
adc
outsl
shrl
pop
xchg
push
add
fldt
lret
out
inc
jb
sub
data16
mov
sbb
jle
ret
lds
add
stos
inc
aad
jmp
popa
int3
jmp
in
mov
es
leave
adc
arpl
xchg
ret
mov
dec
repnz
aam
decb
loop
insl
movb
fisubrs
fs
pop
adc
repnz
outsb
popa
outsb
test
push
add
mov
dec
jecxz
adcb
mov
in
insb
in
adc
push
or
jp
adc
mov
or
mov
or
aas
adc
dec
rorb
or
sbbl
adc
aad
and
shr
test
fimull
add
mov
pop
stc
fs
dec
inc
sbb
dec
gs
ss
cli
orl
pushf
lds
xchg
int
mov
fistpll
inc
inc
enter
dec
jl
push
jb
fmull
push
fucomi
ja
jb
xor
fnstenv
mov
add
aad
xchg
jno
add
clc
xchg
pop
jnp
gs
sahf
bound
test
push
rorb
je
sub
dec
mov
jb,pt
push
scas
push
add
mov
pushf
and
or
cmp
mov
and
aaa
xor
inc
xchg
push
std
outsb
sub
sub
lods
jecxz
aad
iret
mov
mov
ret
rcll
xor
scas
rolb
daa
je
mov
add
fadds
shrb
sub
imul
sub
push
push
repz
mov
push
in
add
xchg
ja
add
pushf
lahf
scas
xor
loopne
fwait
mov
xor
inc
sbb
nop
ds
cli
cltd
sub
cmpsb
adc
insb
ja
test
inc
rcrb
scas
sbb
mov
sbb
and
jp
mov
or
incl
xchg
dec
scas
xchg
sub
mov
jp
cli
push
jo
sahf
in
mov
je
sub
lahf
movsl
addb
cmc
jns
cmp
scas
ret
mov
ljmp
sarb
pop
xor
mov
fisubs
mov
outsl
shlb
imulb
cwtl
das
mov
xchg
mov
icebp
mov
add
or
mov
jo
jle
lahf
in
iret
xor
mov
xor
mov
xor
fnstenv
inc
adc
shll
or
dec
dec
in
or
ds
mov
mov
fnstsw
addr16
push
mov
push
fdiv
mov
push
out
mov
test
lods
push
jno
test
jne
fstl
int
cmpsl
xor
pop
cmp
stos
push
lret
inc
in
gs
sbb
orl
pop
mov
jno
cld
outsl
aam
adc
cmpsl
in
dec
cmpsb
sbb
jge
push
test
jae
push
xor
mov
sbb
push
pop
mov
movsl
mov
test
int3
fstpl
ret
arpl
jg
or
cmpsl
aas
test
sbb
jecxz
dec
fwait
add
cmpsl
pushf
leave
add
ljmp
mov
bound
add
es
or
out
mov
fsubp
imulb
mov
or
divl
imulb
jnp
xor
pop
inc
sub
and
push
fisttpl
cmp
mov
jo
mov
out
dec
fs
decl
mov
push
out
cmp
fdivl
mov
fldt
inc
xchg
mov
leave
into
fnstcw
ret
outsb
daa
sahf
andl
lret
adc
int
jp
les
jmp
add
pop
mov
fwait
or
jl
xor
mov
loopne
sahf
hlt
mov
shrb
jge
and
jg
scas
out
xchg
fistpl
xchg
fcompl
xor
mov
jmp
pop
shlb
loop
sub
fwait
adc
cmovno
push
xchg
jbe
jae
js
or
pop
lea
mov
adc
sub
mov
ss
in
xor
push
push
jbe
inc
int
inc
gs
push
lock
sbb
je
dec
jecxz
xchg
nop
push
les
cmc
nop
shrl
sar
dec
test
sbb
mov
jecxz
cmp
pop
ret
lcall
clc
push
and
fldt
into
int3
das
ja
or
jae
xchg
dec
push
sbb
jo
test
and
cli
int
xchg
adc
add
insl
inc
lds
aaa
rclb
loopnew
leave
pushf
shlb
pop
or
mov
loope
cmpsl
dec
adcb
mov
es
push
test
movsb
pop
test
mov
push
data16
gs
out
xor
loop
sbb
bound
gs
enter
or
mov
insb
popf
orl
int3
insb
inc
data16
mov
mov
imul
and
add
pop
cmpsl
pop
mov
sub
aaa
push
aam
mov
sbb
cmp
rol
out
aad
in
xchg
pop
enter
out
fs
mov
pop
jl
inc
dec
loope,pt
outsb
jp
dec
sahf
xorb
movsb
and
jge
gs
sub
xchg
loop
xlat
adc
es
ret
insb
mov
out
frstor
push
and
mov
cld
aad
pop
movsl
test
cs
sub
ror
stc
inc
int3
mov
inc
push
and
pop
add
repnz
insl
inc
mov
pop
mov
dec
cmp
xchg
insl
mov
add
lret
xchg
mov
shr
arpl
xchg
push
mov
iret
mov
adc
or
mov
insb
push
call
adc
cmp
dec
mov
cmp
lock
sbb
or
fdivl
add
pushaw
stos
and
dec
je
jecxz
movsb
cmp
push
call
scas
rcrl
call
mov
repnz
pop
pop
jle
or
addr16
loopne
addr16
int
dec
filds
out
fcmovne
adc
rcl
adc
or
in
lods
jg
jo
bound
sbb
xor
pop
nop
repnz
nop
hlt
push
mov
push
clc
ror
jl
ljmp
xchg
pop
or
cmp
mov
fsubrp
pop
aad
dec
pop
cld
xor
je
shll
negb
mov
pop
sub
ret
ret
or
inc
or
fdivrl
lea
loopne
pop
pop
sub
adc
or
mov
ret
add
imul
fucom
jae
pop
movsb
movsb
dec
popa
fldl
mov
fdivrl
jb
jbe
jmp
int
ljmp
int3
xchg
daa
add
mov
and
pop
in
lods
dec
mov
lods
ret
sarl
dec
fsubr
insb
push
jmp
outsb
rcrl
in
ret
popf
and
and
pop
stos
mov
mov
int
outsb
stos
rol
loope
enter
mov
cld
movsb
nop
mov
in
imul
sbb
loopne
mov
movsl
cmp
arpl
mov
or
pop
xor
mov
cmpsb
mov
pop
loop
outsb
add
push
insl
repnz
inc
mov
mov
inc
fsubrs
inc
fidivrl
xchg
and
cmp
js
cmpsl
ds
cmp
rclb
mov
mov
ror
pushf
out
subb
popa
push
add
data16
roll
popaw
std
out
das
roll
push
orb
or
or
orl
and
pop
xchg
jno
in
inc
stos
mov
lret
jo
sbb
mov
call
cmp
fmull
test
or
testl
ss
cmp
mov
push
adc
movsb
push
imul
rclb
dec
mov
push
mov
imul
and
out
std
and
adcl
mov
in
adc
push
pop
push
xor
mov
out
popa
lret
insl
fdivrl
sarb
test
or
and
icebp
inc
cmp
jl
dec
out
mov
xor
lcall
push
stc
into
outsb
ret
enter
shlb
mov
adc
cwtl
add
pop
test
repz
pop
sbb
lods
lock
popf
int
push
sbb
dec
ja
jnp
xor
inc
dec
into
ret
mov
pop
addr16
scas
in
roll
inc
xlat
adc
pop
pushf
xchg
cmp
add
fs
ret
xchg
dec
loop
loopne
bound
stos
int
push
enter
sub
stos
in
mov
out
push
gs
outsb
and
addr16
mov
into
stc
xchg
mov
insl
loop
out
xchg
insb
add
fcomps
data16
test
pop
es
sbb
or
cmp
sbb
mov
sub
repz
les
push
cmc
xchg
dec
outsb
push
jo
pop
movsb
push
mov
int
sub
imul
int3
mov
loopne
lock
inc
test
sub
pop
shrb
imul
mov
mov
and
cmc
stos
mov
lods
jns
jg
into
out
testb
sub
adc
fwait
cs
test
add
stos
add
or
ja
pop
addr16
jmp
pop
stos
int
sarb
mov
dec
loope
push
fwait
out
sbb
lds
cmp
pop
hlt
adc
cwtl
insl
mov
arpl
pushf
mov
mov
adc
mov
shll
sbbl
decl
inc
sbb
mov
loopne
sbb
imul
add
push
sarl
pop
sbb
je
mov
bound
stos
mov
test
test
pmulhuw
fwait
adcl
enter
clc
jge
es
xchg
icebp
xor
adc
adcl
xor
test
and
stos
or
repz
add
aam
cmp
mov
and
cs
test
iret
aaa
into
hlt
add
inc
mov
shr
cld
add
add
sbb
leave
lcall
in
push
jg
or
in
mov
xchg
push
adc
outsl
jge
mov
nop
xor
ljmp
mov
popa
stc
insl
out
jno
loopne
cwtl
inc
les
lahf
cmc
arpl
lock
int3
es
bound
ljmp
mov
shlb
inc
add
pop
pusha
cli
dec
test
enter
push
mov
lea
dec
fcomi
aam
pop
repnz
pop
jl
pop
je
int
out
pop
jne
push
lret
xchg
fbstp
add
cli
mov
stc
cmp
mov
lret
push
mov
jge
gs
jne
in
cmp
aaa
dec
iret
mov
repnz
push
xchg
test
or
fidivrs
pop
jns
jne
jns
setnp
xchg
mov
inc
mov
inc
xor
inc
sbb
outsb
movsl
cmp
aam
mov
pop
mov
int
imul
out
test
mov
lret
int
pop
sub
jns
fwait
lods
in
sub
push
inc
and
add
push
push
jno
outsl
pusha
ja
and
int
mov
adc
shrb
inc
jl
fisubl
icebp
cmp
inc
shrl
and
shlb
push
dec
cmpsb
push
lea
xchg
push
in
dec
je
inc
bound
inc
push
cmp
sub
push
push
cmp
ljmp
shlb
push
and
fbstp
sar
es
jle
stos
sahf
dec
mov
out
xchg
jno
pop
in
xor
mov
enter
push
ret
fistpll
jno
jecxz
push
inc
hlt
adcl
aam
in
adc
das
shll
insb
jle
mov
xchg
inc
fstpt
push
mov
inc
push
mov
sub
cmp
sub
jae
inc
cmp
stos
jmp
xchg
inc
les
fwait
mov
and
gs
mov
and
cmp
jae
sbb
stos
dec
stos
adc
mov
mov
ljmp
xor
rcll
inc
xchg
lds
xor
cmc
mov
add
cs
xor
xor
fstpl
add
sahf
ss
addr16
jge
inc
jge
out
rcrl
inc
stos
data16
xchg
mov
cmpsl
xchg
add
push
push
test
push
out
sahf
scas
mov
fnsave
dec
inc
and
mov
mov
add
sub
jmp
popf
pop
fdivs
cmp
lret
mov
xchg
sub
mov
jbe
xor
add
adc
sbbb
mov
ror
fiadds
cmp
fcoml
dec
loope
loopne
xor
mov
add
cltd
iret
cltd
sbb
ret
insb
mov
sub
mov
mov
pop
sahf
mov
outsb
and
add
fildl
and
xor
push
mov
and
bound
push
std
pop
test
mov
push
lods
push
add
pop
loop
lods
sti
sub
mov
lods
xor
es
stc
xor
mov
ficompl
int
and
data16
in
mov
xor
adc
cmpsb
test
in
cmp
roll
jg
clc
add
out
mov
mov
mov
daa
adc
push
es
roll
lods
repz
xor
dec
int3
add
mov
sub
jne
cmpsl
ds
mov
sar
lds
mov
add
out
fsubrs
fs
xchg
jp
pop
add
push
les
pop
insl
or
rclb
mov
sbb
lock
or
xor
test
rcrb
sbb
pop
int3
push
mov
mov
mov
pop
xchg
sub
cli
mov
fcoml
xchg
mov
mov
fstl
loop
sbbb
shl
rcrl
in
sbb
mov
and
mov
adc
sub
mov
daa
or
test
or
adc
xchg
sub
and
movsb
cmp
xchg
mov
xchg
ss
mov
xchg
cmc
test
and
push
cwtl
inc
test
mov
loop
sub
lret
std
jo
mov
decl
dec
add
mov
bound
movsl
in
mov
sub
jno
rorl
adc
adc
out
sub
das
cmp
hlt
cmp
mov
xlat
arpl
scas
inc
adc
jmp
jecxz
call
mov
repnz
aas
ss
call
icebp
pushf
mov
je
mov
dec
mov
pop
xchg
fucomi
jb
aas
xchg
jb
ss
int
push
lds
xchg
mov
add
pusha
inc
sbb
es
jl
mov
call
adc
rclb
sub
enter
add
orl
pop
sahf
xchg
mov
les
loope
or
dec
imul
mov
lods
dec
arpl
dec
into
cmp
out
lds
jge
jo
movsb
push
push
add
push
out
jbe
mov
adc
test
inc
rcr
imul
je
xor
dec
in
jecxz
jbe
sbb
jae
mov
fidivrl
std
adc
ret
shl
mov
inc
lds
pusha
call
xor
inc
cs
int
ss
mov
pop
cmc
int
bound
shrb
cli
frstor
cmp
loopne
adc
sub
inc
dec
pusha
push
inc
icebp
dec
jns
daa
ljmp
outsl
rcrl
in
xchg
or
adc
xchg
ss
xor
ret
pop
inc
pop
xchg
jns
pop
test
loope
xchg
imul
push
cs
icebp
pusha
or
push
ss
push
sbbl
scas
inc
push
or
fscale
shlb
cltd
xchg
mov
cmp
mov
cmp
adc
fidivrl
fimull
mov
push
lods
sub
jp
sub
lods
pop
stc
jge
mov
scas
and
fstl
insl
loopne
stc
test
push
xchg
pop
and
mov
dec
ret
outsl
loop
xlat
int3
jg
dec
push
or
out
push
xor
cli
push
outsb
inc
arpl
movsl
pop
fstps
test
fcoms
loope
test
adc
adc
add
jnp
mov
sti
xor
popf
cld
and
pusha
add
negb
cmp
xor
xlat
pop
out
std
rorb
enter
push
pushf
jno
xchg
stos
fldenv
in
add
xchg
cmp
mov
aaa
inc
cmp
mov
fldt
inc
pop
popa
add
pop
sub
pop
adc
and
and
dec
cmc
inc
scas
sub
fucom
test
fwait
inc
inc
nop
fisttpll
enter
ljmp
jae
push
push
clc
dec
pop
es
push
out
xor
mov
jo
push
inc
pop
push
mov
or
cs
jb
dec
mov
mov
jns
or
rorb
mov
cmpsb
xchg
mov
repz
pop
xchg
inc
rol
lahf
xor
mov
fldl
scas
xor
enter
loopne
jmp
push
out
sbb
aas
lcall
xchg
ss
dec
aad
push
outsl
fsubl
xchg
jl
cmp
scas
cmp
jb
adc
inc
or
and
or
orb
out
sub
xchg
jmp
pop
popl
stos
cld
std
xchg
mov
or
or
in
jo
out
adc
fmulp
bound
sbb
gs
xchg
mov
sbbl
pop
out
cmp
leave
popf
mov
rol
sahf
mov
imul
cmp
push
inc
imul
or
inc
sub
dec
xchg
add
dec
xor
mov
hlt
dec
in
jnp
cmp
out
imul
lds
mov
mov
cmp
rorb
and
mov
dec
jle
insl
sub
out
pop
cmpsb
out
inc
fdiv
inc
fnstsw
lahf
test
push
les
cmp
jo
jns
add
jbe
inc
out
mov
sbb
scas
mov
jne
cmpsl
dec
xor
movsb
adcb
sahf
or
adc
out
daa
data16
cmp
cmc
movsl
jns
test
cmpsl
loope
adc
cmp
adc
sub
stos
cmp
mov
push
iret
xor
and
adc
jl
cwtl
das
jmp
lea
sub
aam
cmp
xlat
pop
add
iret
mov
shl
ds
sbb
add
push
mov
ss
shrl
scas
in
sub
aaa
rcrb
aas
wrmsr
testl
out
outsb
adc
xor
gs
inc
gs
loop
es
jbe
inc
je
xor
lahf
xchg
addr16
test
insb
xchg
out
jns
adc
jbe
enter
orb
jne
sbb
xchg
sub
movsb
dec
rcll
aaa
or
or
mov
and
ror
jnp
push
inc
pushf
dec
loope
outsb
mov
bnd
mov
mov
add
aaa
movsl
push
inc
popf
fnsave
repz
cmpsl
out
loope
cmpsb
sub
aad
out
pop
daa
data16
dec
loope
inc
into
push
cwtl
shl
rcll
jmp
and
add
gs
shrb
sbb
jns
mov
das
push
xchg
sub
js
mov
xchg
cmp
add
addr16
fdivs
mov
or
repz
inc
mov
stos
mov
pop
in
mov
iret
pop
aas
aad
insb
repnz
loope
mov
jns
jp
les
sbb
and
cmp
mov
or
mov
add
xor
inc
pusha
leave
mov
les
adc
pop
and
imul
outsb
sbb
xchg
add
xchg
and
xchg
mov
inc
sbb
daa
cmp
adc
dec
dec
call
in
testl
es
jnp
andl
sbb
movsb
jp
ret
lret
mov
inc
decb
gs
test
insl
cli
and
mov
pop
inc
xlat
mov
push
je
pop
cmc
push
xchg
hlt
mov
lea
aad
lods
push
icebp
push
dec
adc
mov
fldt
data16
cli
sub
shrb
cmp
pusha
test
inc
out
push
adc
sub
popl
mov
jl
rsqrtps
push
jle
xchg
scas
xor
std
sahf
xor
jge
rcrl
outsl
adc
insl
or
xor
decl
mov
lds
cmp
pop
es
jne
mov
pop
movsl
mov
xchg
add
push
jo
xchg
pop
sub
jo
jae
aas
fstpl
sbbl
call
lcall
fnstsw
dec
test
fsubs
pop
loope
inc
lcall
orl
mov
inc
sub
push
or
les
dec
shll
outsb
add
lahf
sti
stc
addl
sub
in
dec
jecxz
pop
sub
mov
inc
mov
in
mov
sbb
jae
arpl
xorb
mov
xor
inc
ror
popa
or
out
jne
call
rol
push
cmpsl
xor
push
fucomip
mov
mov
push
mov
mov
fsubl
add
xor
mov
clc
or
sti
push
jge
jl
push
sahf
fsubs
sub
add
lea
push
push
adc
mov
pushf
xor
int
insl
sub
mov
andl
xor
xor
outsl
sub
push
add
test
ljmp
fnsave
lret
or
push
lods
faddl
cmpsb
imul
cltd
mov
inc
cmc
shr
lods
xchg
ds
pop
jmp
adc
pop
stos
jl
pop
and
mov
jmp
or
dec
push
out
pop
sbb
fucomip
push
mov
out
xchg
xor
in
repnz
orb
jnp
cmc
push
xchg
test
push
mov
xchg
sbb
sbb
push
je
or
js
gs
adc
cmp
mov
mov
mov
sub
mov
sub
cmc
stc
stos
push
cmp
dec
in
dec
or
jle
lods
pop
imul
jmp
or
pop
mov
cltd
mov
inc
mov
pop
scas
adc
pop
ret
mov
and
inc
jl
jmp
sbb
pop
popa
jno
sahf
and
and
cmp
aad
mov
jno
adc
lock
rcrb
adc
insb
pop
or
push
add
xorb
imul
pop
shrl
mov
xchg
mov
les
pop
addr16
call
dec
aad
xlat
shlb
add
sbb
lock
movsl
fmull
mov
ds
int
hlt
cmp
xchg
mov
xor
add
sbb
ret
sub
sbb
mov
xchg
lret
dec
lods
add
jp
push
and
fs
push
lcall
inc
lods
jmp
ljmp
inc
insl
cmp
fucomip
mov
xchg
movsl
sub
shlb
popa
mov
mov
out
sahf
fbld
shlb
push
xlat
push
out
cli
inc
jae
mov
mov
ds
outsl
call
fisttpll
push
dec
push
scas
xchg
pop
pop
in
jno
xor
or
subb
xchg
test
cmc
adc
movd
add
mov
mov
cli
xchg
xchg
sub
lahf
xor
fisubl
sbb
jg,pt
xchg
jnp
push
outsb
or
ficoml
popa
jmp
adc
cmpsb
lock
or
mov
jmp
push
es
aaa
mov
xor
fidivs
repnz
dec
mov
xchg
iret
jae
push
pop
mov
mov
icebp
ret
hlt
xchg
cmpsl
jmp
mov
jnp
scas
es
pop
loop
cmp
mov
xor
lret
in
mov
xor
adc
andb
cmp
fists
cmp
jns
inc
jl
dec
and
pushf
push
in
xchg
push
test
push
icebp
dec
xlat
stos
xor
movsl
stos
movsb
loopne
jne
sbb
push
std
lcall
cmp
icebp
dec
mov
mov
shl
test
into
or
pop
jno
jne
or
fs
sbb
testl
sbb
add
fists
dec
outsb
and
imull
xchg
xor
xor
pop
mov
ds
popf
sub
aaa
ljmp
mov
cltd
aam
dec
shlb
push
cltd
mov
enter
rorb
add
push
inc
cmp
push
int3
arpl
and
sbb
subl
sahf
dec
mov
popa
bound
xchg
sti
rclb
inc
mov
fstpt
adc
mov
ds
pop
imul
pop
sbbb
fsubrs
push
pop
ror
jge
rcrb
mov
rclb
mov
cmp
clc
cmc
jecxz
pop
in
stc
test
mul
dec
gs
xor
push
movsl
jecxz
clc
mov
mov
rolb
xchg
lcall
jns
adc
int3
out
xchg
push
lods
pop
cltd
sub
cli
notl
addl
imul
in
jmp
sbb
or
adc
pop
jge
sbb
repnz
sub
pop
lock
iret
rcr
cmp
idivb
dec
add
add
stos
push
mull
test
sti
cmc
adc
lock
xchg
into
loop
aas
fisttpl
cmp
loopne
sbb
shrl
jno
dec
aas
adc
adc
adc
mov
dec
and
dec
cmpsb
shrl
fidivs
je
jnp
fwait
push
insb
repz
sahf
lods
adc
jp
addr16
jg
pop
cmp
testl
dec
nop
xchg
pop
je
fcoml
leave
inc
insl
push
add
mov
imul
mov
mov
out
inc
cmp
jmp
bound
movsb
push
dec
mov
fcomi
sbb
mov
mov
and
test
cmpsl
and
add
loopne
icebp
push
nop
push
loope
scas
push
testb
dec
add
mov
sub
mov
sarl
mov
mov
and
xchg
or
xchg
fcomi
scas
inc
fcmovnb
movsl
dec
push
rcll
cmp
jge
shll
movl
clc
and
adc
fmuls
xor
dec
mov
jae
mov
daa
sbb
scas
and
and
pushf
mov
mov
mov
xor
xlat
mov
ret
das
ror
sub
cmp
out
loopne
mov
mov
in
lret
cmp
sub
mov
cmp
pop
jl
rcrl
push
fcmovbe
notl
jp
test
and
fcoms
xchg
push
ljmp
jb
mov
test
push
clc
pop
jmp
std
loopne
and
and
cli
push
mov
daa
cmpb
stos
or
ds
loope
xchg
dec
rcrb
leave
loope
jle
gs
push
mov
cmp
fldenv
xlat
mov
ret
data16
ds
lahf
adc
daa
arpl
xchg
sahf
mov
or
xor
cmp
shrb
mov
and
and
push
jmp
mov
pop
call
inc
cmp
mov
push
add
inc
mov
push
shr
xor
xor
popa
inc
and
lds
popf
jno
cmpsb
sbb
imul
aam
leave
mov
daa
aaa
mov
pop
hlt
cli
pop
cmp
fldt
or
mov
pop
subb
dec
pop
in
jns
xchg
add
jbe
enter
cmpsb
push
fsubrs
push
lods
into
cs
leave
fwait
adc
mov
xchg
push
push
jl
das
inc
or
jbe
or
ss
mov
mov
pop
cmp
popf
gs
fbstp
mov
call
mov
jmp
or
inc
adc
lret
push
push
idivb
arpl
sbb
xchg
mov
jne
mov
adc
inc
pop
divb
sbb
mov
xlat
mov
insb
fs
cwtl
jno
add
aas
add
test
scas
and
adc
fldl
add
mov
sub
lods
adc
xor
inc
das
roll
clc
icebp
jl
and
repz
lcall
jecxz
arpl
dec
call
fwait
lods
add
and
push
sub
adc
ret
xchg
iret
fcmovnb
clc
aad
lock
pop
imul
mov
test
mov
out
inc
lds
or
enter
loop
std
cltd
das
or
std
push
dec
adc
out
push
hlt
xchg
in
fsub
pop
and
add
or
enter
scas
ljmp
add
ss
sbb
fs
inc
mov
shrb
jns
pop
sahf
inc
cmpsl
push
nop
fldcw
adc
mov
gs
mov
add
or
cmp
pop
mov
arpl
scas
out
xchg
clc
mov
outsb
xchg
push
out
cld
dec
mov
mov
cmova
js
pop
adc
dec
jg
out
xor
flds
ja
stos
jle
imul
mov
in
sbb
outsb
lahf
mov
cmpsl
mov
adc
mov
mov
aaa
in
xor
pop
pop
cmp
mov
dec
icebp
sbb
aam
mov
push
test
adc
and
adc
shlb
popa
adc
mov
xlat
mov
pop
lahf
div
xchg
rcrl
out
mov
push
test
das
cwtl
push
repnz
inc
pop
push
adc
mov
pop
divb
inc
mov
sub
decl
icebp
dec
lods
inc
int
or
fldz
lret
pop
lock
pop
inc
hlt
and
orps
pop
dec
cmp
dec
pushf
out
add
test
sub
or
xor
in
out
dec
fldl
xlat
push
xor
subb
or
es
int3
xlat
add
xor
mov
cs
fwait
pop
push
stos
in
stos
pop
jecxz
jae
lcall
mov
nop
call
fists
jge
xchg
dec
cmp
inc
push
jae
pop
cmpsb
and
cmpl
sub
stos
dec
mov
jne
loopne
lahf
lcall
cmp
push
xor
scas
xchg
ret
rcrl
rcrl
jne
imul
sbb
imul
out
jge
add
add
and
xor
lock
shrl
and
inc
cmp
add
das
jo
je
dec
jp
dec
pusha
xlat
cmp
jl
adc
mov
das
pushf
sub
cwtl
xor
dec
aam
inc
sbb
xor
inc
sahf
inc
jbe
dec
pushf
push
jo
insl
into
mov
aam
mov
test
push
fucom
iret
jp
icebp
and
add
inc
negb
sbb
icebp
xchg
lock
dec
ret
jecxz
daa
jle
add
and
je
jae
mov
call
mov
dec
mov
jge
mov
jns
push
xchg
int
add
pop
stos
mov
imull
arpl
pushf
ret
pop
sbb
or
cmpb
xchg
mov
sub
or
dec
sub
xor
ret
pop
or
repz
popf
fistl
fidivrs
push
gs
mul
hlt
mov
fld
sahf
adc
pop
enter
cld
xchg
mov
cld
push
iret
xchg
xchg
push
xchg
gs
fists
jg
jg
enter
push
inc
xchg
xlat
push
insl
mov
add
jno
addr16
adc
test
xchg
push
dec
mov
mov
stos
ds
pop
lock
sub
xlat
ja
or
insl
in
cmp
or
leave
dec
inc
and
ljmp
push
and
xor
pushf
leave
jmp
cli
mov
cmp
xchg
stos
inc
les
push
inc
and
popa
clc
rcrl
dec
imul
jecxz
shlb
sbb
inc
inc
cli
inc
je
mov
enter
sahf
inc
mov
lret
btl
les
lret
adc
divb
sti
jno
mov
mov
mov
insb
push
cmp
pop
xchg
cmpsb
cmp
shl
or
es
mov
rorl
lret
add
and
mov
mov
data16
cmc
js
andl
call
or
test
fcomps
xlat
add
scas
and
ljmp
push
add
push
mov
aas
jl
test
inc
out
scas
das
je
cmp
aam
in
cmp
mov
mov
push
and
jnp
dec
testb
cmp
mov
cld
fwait
push
mov
std
cmc
andl
repnz
fsubrs
push
adc
adc
jmp
sbbb
test
jns
fucomip
adc
imul
cmovo
push
into
xchg
pop
xchg
int3
push
adc
xchg
xlat
pop
mov
shrl
mov
bound
roll
cld
mov
es
and
xchg
cmp
jmp
inc
stos
inc
fiadds
adc
out
adc
jne
jne
mov
rcll
sbb
pop
adc
or
sbb
aam
aad
jl
mov
xor
push
mov
test
inc
lods
sbb
jbe
out
imulb
mov
hlt
leave
mov
aad
push
mov
jne
jmp
jnp
imul
adc
add
xchg
mov
das
xchg
adc
cld
xchg
xorb
out
jge
movsl
stc
mov
fs
pop
xor
add
clc
cmp
nop
cmp
leave
fildll
cmpsl
ds
mov
sub
or
cmpsl
aad
andb
arpl
mov
pusha
push
sbb
test
ret
shr
fwait
pop
mov
jbe
shl
pop
cmp
or
out
shlb
xchg
sbb
inc
out
pop
ja
cmp
pop
vfrczpd
and
lods
or
mov
ret
sub
hlt
pop
jg
lock
pop
enter
mov
mov
in
stos
cmp
rolw
rorl
inc
stos
adc
jg
ja
cld
push
xor
xor
int3
js
aaa
outsb
data16
dec
add
imul
xchg
sub
stos
or
xlat
mov
rcrl
xor
cltd
sbb
jl
in
inc
loope
jno
xchg
sub
icebp
insb
iret
ret
fbld
xchg
imul
pop
cmc
jg
test
fidivrl
cld
pop
add
mov
xlat
and
mov
adc
xchg
xchg
shlb
add
stc
and
lahf
push
xor
loopne
and
mov
sbb
fwait
scas
add
adc
ss
inc
sub
outsl
add
pop
sbb
pop
mov
divl
xchg
sub
js
out
test
bound
and
out
push
jae
addl
jle
int3
sub
aad
add
sahf
pop
dec
or
and
imul
nopl
cs
outsl
ds
dec
neg
dec
pop
adc
jne
clc
sub
jecxz
or
adc
dec
or
call
movsb
ja
jns
cwtl
stos
inc
mov
inc
into
add
pop
or
adc
or
mov
xchg
or
fnstsw
jg
xchg
mov
rolb
add
push
or
and
jle
test
std
loope
mov
scas
out
loopne
mov
xchg
mov
jl
cmp
push
jecxz
jmp
scas
lock
adc
roll
and
push
or
js
outsb
scas
lods
add
pop
outsb
adc
jp,pt
mov
mov
dec
arpl
and
sub
sti
sub
insb
repz
add
jecxz
pop
pushf
inc
enter
into
dec
pop
jne
shlb
pop
add
ret
xchg
out
iret
scas
sbb
pop
dec
iret
pop
lock
popa
orl
dec
cltd
mov
jmp
push
xor
push
mov
add
mov
mov
int
iret
sbb
pop
jle
mov
sbb
cmc
pop
xor
aaa
add
or
jbe
mov
fwait
hlt
leave
pop
sti
push
out
mov
clc
ror
pop
arpl
dec
fs
mov
jle
push
lods
cmpsl
lahf
stos
mov
aam
jg
cmp
pop
inc
in
mov
loope
arpl
dec
jecxz
arpl
xchg
inc
gs
imul
ljmp
movsl
jle
in
stos
out
pop
ds
cmpsl
xchg
dec
add
push
in
aad
pop
nop
int3
pop
and
popf
fs
imul
insb
adc
mov
xchg
stos
cmc
sarb
push
rcll
or
mov
push
daa
pop
inc
fidivl
cmp
mov
push
out
xlat
popf
push
mov
dec
xchg
dec
sbbl
jmp
jns
push
mov
inc
add
sub
pop
mov
xchg
test
add
xchg
xchg
jmp
adc
stc
lea
jo
cli
fbstp
out
sub
dec
xor
pushf
lcall
mov
adc
pop
mov
ljmp
out
pop
and
hlt
mov
lods
or
push
push
roll
clc
stc
in
and
mov
insb
jecxz
push
out
jae
inc
testl
dec
pushf
pop
mov
sahf
mov
pushf
jbe
aam
clc
xchg
hlt
cmp
ds
jmp
add
repz
adc
aas
pop
cmpsl
das
test
mul
orl
xchg
inc
mov
pop
arpl
xor
and
inc
cmp
sti
xor
pop
jae
ds
in
bound
adc
shl
sub
lds
cmpsb
fbld
cmp
add
inc
fs
test
test
inc
inc
push
out
scas
sub
mov
pushf
shrl
daa
inc
dec
jge,pt
push
mov
push
pop
fidivl
mov
inc
cmp
xchg
mov
enter
fmul
dec
out
mov
fstpt
push
std
inc
pop
fists
cwtl
dec
push
xor
dec
mov
sub
mov
add
cmp
mov
sub
xchg
add
out
std
cmp
push
inc
adc
das
pop
icebp
insb
jne
testl
pop
push
orl
jnp
iret
dec
clc
aas
mov
sahf
cmp
mov
push
xchg
out
push
adc
and
pushl
jno
nop
xchg
push
sahf
mov
dec
and
icebp
inc
dec
mov
clc
into
test
cli
add
cmp
mul
xchg
jmp
jns
cmp
movsl
sbb
adcl
jns
adc
cld
std
dec
imul
xchg
pop
lret
divl
mov
jmp
addl
jmp
or
mov
sub
inc
les
push
dec
mov
jg
or
sti
bound
mov
jae
jns
xor
push
push
push
stc
mov
inc
cmp
pop
jecxz
mov
cmc
sbb
cmp
push
in
lock
pop
notb
or
pop
out
test
xor
and
push
xor
das
dec
fisubl
mov
mov
int
jbe
ret
pusha
cmp
jg
inc
cmp
jecxz
les
aad
dec
in
mov
pusha
mov
test
testl
sbb
insb
xor
ffree
mov
add
pop
cltd
xor
cmp
aam
adc
mov
stos
fmul
xchg
add
xchg
xor
mov
push
xor
sbb
in
clc
or
mov
lcall
pop
jp
jge
test
or
mov
mov
jmp
stc
pop
js
pop
ja
int
push
pushf
adc
sub
cmp
sahf
lods
outsl
pop
outsb
jl
movsl
jmp
ds
mov
movsl
ljmp
dec
inc
push
sub
push
test
stos
xor
cmpb
ljmp
jle
xchg
and
pop
les
jge
xor
sbb
mov
arpl
sub
lods
fbld
inc
jmp
sub
pop
repnz
cmp
add
cmpsb
add
test
pop
movsb
aaa
pop
mov
pavgw
out
cmp
aad
mov
xor
pusha
into
dec
les
ret
sarl
jnp
lods
xchg
mov
fisubrl
lcall
dec
sub
xor
andl
ljmp
dec
jnp
push
test
and
cmpsb
jge
add
jp
sbb
test
sarl
sarb
popl
fnstcw
dec
mov
pop
adc
cmp
jns
aam
jmp
xchg
movsb
ds
jle
ss
inc
out
aam
rorb
imul
sub
inc
sbb
pop
inc
inc
dec
lret
and
push
add
sbbb
xchg
inc
xor
mov
shrb
lret
jo
fwait
mov
lods
lea
rcrb
inc
mov
andps
pop
xchg
dec
add
fdivrl
int3
pop
mov
out
adcl
xor
lahf
stos
lods
je
scas
test
test
in
lret
inc
in
xlat
push
call
movsl
outsl
mov
sbbb
push
test
dec
in
mov
xor
lock
insl
ds
sub
mov
sti
cmp
pushf
into
mov
iret
push
push
insl
test
xor
push
xor
cmp
mov
xor
adc
in
push
test
popa
jl
lea
dec
enter
xchg
in
xchg
sub
je
stos
cmpl
testl
popf
ss
pop
jb
sbb
les
cmp
out
sub
cmp
adc
fucomi
fidivs
jno
bound
mov
leave
xor
push
mov
and
mov
push
scas
pop
add
jns
lock
idivb
aam
dec
stos
pop
cmpsb
adc
imul
jmp
push
or
sarb
lcall
mov
xchg
mov
mov
sub
rolb
push
rep
addr16
inc
pop
mov
mov
sbb
lret
cmpsb
pop
ds
aad
popa
pop
psrlq
push
int
push
add
mov
ficompl
aad
and
adc
mov
pop
push
sbb
xor
imul
mov
imulb
js
xchg
jae
mov
lahf
sub
popf
lahf
xor
je
xor
sbb
push
lret
imul
mov
pop
in
mov
shlb
lret
addr16
sbb
negl
add
enter
je
and
rdpmc
push
mov
in
shll
or
mov
inc
cmpsl
xor
in
adc
mov
pop
cld
cmp
inc
fdivrs
mov
shll
inc
pop
mov
imul
add
jns
dec
scas
imul
push
daa
daa
push
jmp
pop
arpl
lods
dec
fldl
dec
pop
iret
xchg
push
in
scas
andb
inc
and
leave
leave
xor
out
out
sub
jmp
dec
lea
bound
push
popf
pop
push
outsl
xor
idivl
enter
jp
lret
jg
xchg
sub
push
cwtl
mov
arpl
xchg
out
incb
push
js
inc
cmp
out
insl
and
or
push
ljmp
push
jno
xchg
xchg
test
cmp
push
enter
xor
jge
lahf
push
cwtl
out
inc
out
lret
lcall
inc
mov
out
jmp
xor
pushl
xor
xor
mulb
lcall
and
mov
ljmp
and
pop
push
mov
sbb
out
cmp
sti
aaa
icebp
dec
out
adc
and
cmpsl
shrl
push
pop
sbb
inc
inc
scas
insl
push
sub
test
leave
and
cmp
iret
hlt
mov
mov
pop
out
fidivl
inc
mov
out
movsb
sahf
and
jmp
xchg
les
insl
fucomp
les
test
aam
sbb
cmp
sub
daa
cli
or
into
fsubl
dec
mov
ja
xchg
in
push
fimull
loop
push
lcall
inc
mov
jo
push
inc
pop
shll
and
jnp
inc
mov
insl
fcompl
stos
lds
jne
push
push
mov
xchg
dec
or
aad
outsl
push
lock
xor
xchg
mov
mov
jne
sarb
fildl
sbb
jno
pop
jecxz
movsl
std
lahf
sbb
mov
mov
xor
xlat
push
icebp
or
sbb
loopne
and
push
aad
dec
jo
mov
jmp
jo
imul
xchg
xchg
jecxz
and
and
outsb
hlt
addr16
mov
push
hlt
int3
imul
fistpll
repnz
or
mov
pop
push
adc
cs
arpl
into
xchg
pushf
stos
les
aaa
adc
mov
mov
add
push
pushf
mov
call
sbb
add
cmp
fdiv
arpl
mov
sahf
sti
test
xlat
jne
push
push
inc
scas
mov
arpl
arpl
inc
mov
je
or
push
pop
inc
inc
xchg
les
mov
pop
and
xchg
and
js
cmp
les
and
mov
dec
pop
pop
add
into
inc
popa
addl
xor
test
mov
push
mov
xchg
lock
dec
cli
push
adc
sti
pop
movsl
sub
sub
inc
pop
loope
or
adc
aaa
into
fidivl
sub
and
insb
aas
pop
inc
sbb
rorb
addl
ret
loopne
sarb
dec
loope
xchg
ljmp
mov
dec
and
lret
inc
int3
js
adc
insl
xorb
cmpsb
mov
jg
mov
bound
xchg
loope
clc
dec
mov
push
ss
in
and
mov
push
imul
int
mov
jnp
push
sub
xor
cwtl
mov
fs
ret
outsl
out
xchg
movsl
idivl
mov
mov
shrl
xlat
pop
fistps
fbstp
insl
xchg
cmpsl
jnp
in
enter
cmp
cmp
decb
mov
cmp
fists
jne
xchg
cs
xor
cld
test
cmp
stos
shlb
lcall
cwtl
adc
mov
and
in
nop
mov
stc
dec
sub
call
iret
push
je
lret
fmuls
fs
mov
cmp
daa
pop
jno
sub
or
pop
jb
mov
and
mov
or
insl
clc
lea
das
inc
dec
popl
add
scas
call
mov
jae
jle
notl
leave
pusha
iret
orb
cmp
jb
jae
orl
mov
scas
cmc
push
fwait
cmp
movsb
std
and
movsl
lds
jge
popa
aas
pop
mov
je
int
inc
out
push
inc
sahf
adc
or
mov
sarl
adcb
cmp
lds
fwait
xor
mov
xor
xchg
mov
popa
add
push
jl
aad
clc
pushf
repz
cmp
xor
sti
js
lret
push
inc
dec
mov
mov
add
dec
fsub
je
callw
fildl
in
jns
dec
test
push
push
notb
dec
iret
jecxz
imul
inc
cmc
mov
enter
xor
arpl
xor
add
in
adc
out
inc
into
ss
ret
test
mov
xchg
sbb
mov
fsub
mov
aad
mov
adc
pop
test
and
lock
das
or
add
xchg
push
dec
cmp
adc
lods
movsl
stc
and
leave
loopne
rcll
xchg
sub
test
aas
dec
sub
jmp
pop
mov
mov
xor
enter
insb
daa
shl
pop
cmp
fucom
pop
rorb
sub
mov
fsubrs
das
icebp
pop
dec
aas
lock
addl
add
xchg
xor
adc
loop
cmp
jg
ficompl
pop
dec
daa
sbb
xor
xchg
jmp
int
test
jl
push
sub
jns
jae
leave
mov
cld
adc
adc
adc
mov
jle
sub
jbe
mov
dec
sbb
xlat
lea
sub
dec
pop
inc
hlt
mov
cltd
pop
mov
and
mov
add
fwait
lcall
in
int3
fcoml
lret
inc
mov
popa
cmpsl
xor
int3
inc
pop
mov
dec
xor
cmp
mov
arpl
pop
xor
xlat
cmp
sbb
cmpsb
dec
enter
or
push
aas
scas
add
push
hlt
lds
popf
mov
fs
xchg
jl
loop
cmp
je
imul
xchg
mov
jmp
fidivrl
adc
jb
in
daa
pop
and
in
pop
sbb
jno
xlat
mov
mov
arpl
mov
sbb
insl
lcall
rolb
rclb
sbbl
mov
stos
data16
or
aaa
jno
in
xchg
scas
addr16
xor
or
push
test
xor
sub
pop
xchg
repnz
int
inc
ret
sbb
inc
test
push
sub
add
stos
data16
in
out
fiadds
pushf
pop
movsl
aas
sbbb
or
cmpsb
push
mov
sahf
sbb
xchg
inc
jge
popa
mov
cltd
lds
test
or
loopne
xchg
mov
mov
dec
pop
les
in
and
ljmp
cmc
lcall
dec
test
or
or
xchg
mov
imul
cmp
xchg
hlt
dec
hlt
lea
outsb
test
stc
and
push
mov
cld
push
jge
xchg
scas
call
mov
test
inc
and
sbb
cld
andl
mov
aas
dec
bound
mov
call
insb
insb
outsl
adc
pop
add
mov
leave
xor
sbb
and
in
incb
mov
jnp
fbld
std
mov
stos
ljmp
inc
adc
pop
icebp
push
push
or
pushf
leave
xlat
xchg
and
fimull
loope
fisubrl
pop
jns
arpl
in
jo
sub
repnz
int3
and
xor
int3
aaa
stos
push
cli
mov
sarl
jne
xor
fwait
xor
movsl
aas
mov
test
pop
pop
jno
test
cmc
lret
add
mov
sbb
mov
mov
fildll
jbe
sbb
ret
jp
cmp
dec
mov
jl
jno
movsb
movsb
icebp
pop
arpl
jns
inc
decb
push
adc
lods
push
push
test
adc
xchg
push
cs
and
pop
imul
int3
pop
std
in
mov
adc
aam
or
and
fcmovne
cltd
stc
mov
mov
push
sub
mov
popf
push
lahf
andb
push
adc
inc
xchg
out
jge
or
ror
les
daa
sbb
mov
inc
push
fxch
fnstsw
jmp
sub
dec
fs
add
rcrb
or
or
aad
sub
push
sub
lea
fcoml
jbe
mov
pop
xchg
add
sbb
adcl
cmp
stos
push
fwait
adc
out
movsl
inc
ljmp
cld
xlat
xchg
cmp
shll
in
and
push
loopne
pusha
into
scas
jne
or
repz
sub
mov
jmp
shrb
pop
mov
or
xchg
mov
mov
insb
xor
mov
mov
outsb
adc
aas
iret
xor
cld
stc
pop
xchg
and
pop
push
fmulp
dec
cs
mov
cwtl
mov
cmp
and
stos
sub
jo
push
enter
mov
adc
ret
xor
mov
jb
rclb
xchg
push
jp
shrd
lds
and
push
dec
jl
xor
sbb
and
sbb
pop
leave
ja
arpl
roll
xchg
jp
fadds
mov
and
cmp
and
imul
testl
adc
add
ficompl
and
jmp
jo
jp
jmp
std
jnp
ds
in
pushf
cwtl
xchg
insl
bound
inc
sub
add
pop
mov
cld
xchg
das
or
add
mov
jae
mov
dec
cs
lods
jo
sbb
jne
cmpsb
lock
pop
jge
jecxz
add
aam
subl
iret
push
add
sub
mov
fnsave
xor
in
out
pop
fs
xor
arpl
jnp
xor
or
lcall
fisubl
adc
and
push
and
xor
in
out
add
add
sub
xor
pop
and
stos
dec
push
mov
out
push
in
test
mov
mov
test
aas
push
xor
xor
jne
popa
pop
mov
add
dec
movsb
xchg
rorb
pop
add
mov
fildll
dec
mov
lcall
cmpsl
mov
mov
insb
sbb
xor
aaa
outsb
lahf
test
xchg
adc
test
xor
and
into
pop
sbb
add
push
lods
sti
repz
into
fdivs
aaa
ret
xor
jecxz
cmp
sbb
rorl
mov
jnp
sbb
pop
jge
cli
mov
or
push
mov
mov
push
pop
sub
mov
mov
imul
sbb
into
push
push
stos
push
test
mov
push
mov
mov
mov
push
lret
sahf
out
clc
adc
das
hlt
icebp
xor
out
iret
sbb
push
jo
add
movsb
adc
pop
dec
mov
movsb
xchg
test
cmpsb
mov
dec
xor
mov
sarl
incl
xchg
pop
mov
sti
pop
pop
data16
addr16
testl
cmpl
mov
mov
pop
mov
iret
and
cmp
pop
idivb
enter
add
test
pop
data16
ret
dec
loope
loopne
xlat
loope
push
mov
sahf
scas
and
cmp
fnstcw
sub
mov
cmp
mov
andl
scas
cmp
push
and
mov
jns
dec
iret
int3
mov
jne
loope
adc
ja
xchg
lods
mov
pop
push
lock
mov
sub
imull
push
movsl
pushf
dec
mov
pop
jge
stos
jmp
mov
fsts
xor
xorl
data16
dec
xchg
or
pop
xor
add
push
repnz
xlat
repz
mov
ret
lret
lods
shlb
pop
in
in
addr16
cli
jno
mov
fs
stc
aad
adc
cmp
pop
ret
cmc
stos
jecxz
push
mov
daa
aad
movsb
add
add
pop
addb
andl
pop
mov
xlat
cmp
dec
sub
mov
adc
mov
mov
js
lds
dec
mov
hlt
push
jmp
ja
orb
icebp
mov
jmp
ret
inc
xor
push
and
stc
out
ja
into
stc
fnstsw
ret
rcrl
sub
jns
jmp
cs
outsb
push
mov
mov
push
in
pushf
mov
xchg
jg
push
sbb
pop
push
sahf
daa
lcall
adc
push
ret
fstps
shlb
imul
mov
sti
movsb
test
mov
jge
pop
in
and
mov
es
sti
mov
lret
sbb
inc
hlt
jo
push
mov
fnsave
leave
push
lahf
xchg
or
stos
sbb
pusha
jns
cmp
or
add
es
out
sti
loop
ficoml
popa
les
xchg
cmpsl
mov
les
pop
popf
or
loop
jmp
or
hlt
mov
pop
andb
pop
or
enter
mov
mov
cmpsb
jle
fmull
test
dec
pop
repz
adc
sahf
sbb
inc
dec
inc
lcall
cmp
add
loope
hlt
push
xchg
inc
cmp
sbb
push
dec
mov
sti
je
mov
inc
lahf
aad
popl
ror
mov
xchg
xchg
fisttps
mov
outsb
add
testb
xchg
fnstsw
cmc
sub
sub
xor
xchg
fiadds
movsb
dec
cmp
imul
xlat
mov
jp
dec
test
insl
adc
rol
push
test
nop
sub
call
fisttpl
add
shrl
rolb
ljmp
push
dec
in
hlt
mov
xor
outsb
es
pop
setne
mov
dec
enter
aad
fisubs
inc
hlt
pop
loopne
cmp
inc
insb
js
mov
jnp
jge
cmp
or
test
rorb
hlt
ret
and
shrl
jmp
mov
aas
mov
push
fdivrs
fidivrl
lods
xchg
xchg
stc
test
sub
pop
out
mov
hlt
push
mov
fsubl
in
sub
fucomip
xchg
scas
pop
scas
push
leave
sub
and
adc
cmc
push
andb
mov
sub
pop
hlt
aas
lret
clc
and
sarb
in
cmp
stos
stos
jne
cmp
std
movsl
sahf
leave
rolb
addl
fsubrl
mov
ljmp
inc
lret
test
call
mov
inc
popa
mov
push
inc
xlat
xchg
xchg
and
setle
push
push
mov
and
mov
loop
mov
xor
or
loope
mov
sub
jns
inc
and
dec
dec
inc
xor
or
mov
mov
cmp
dec
popa
mov
dec
cltd
shrl
in
subl
mov
rclb
inc
cmpsl
out
in
xchg
incl
add
mov
outsl
inc
js
dec
mov
rcrl
sub
jnp
jne
inc
sbb
loop
sti
mov
popa
test
movsl
adc
imul
mov
insl
in
sub
call
pop
dec
mov
loop
mov
xchg
mov
adc
mov
in
pop
cmp
mov
rorb
sub
popa
and
es
loope
mov
cmpsb
std
pop
fcomps
push
inc
adc
mov
arpl
push
sbb
lds
xor
in
mov
mov
xor
mov
push
ja
jnp
cmpsb
cmp
push
aas
loop
ja
pop
push
insl
test
add
and
cmp
das
mov
in
jmp
les
daa
dec
cmpsb
mov
in
hlt
daa
arpl
xor
push
cmp
adc
xchg
je
jp
mov
rorl
stos
inc
fs
sub
xor
addl
dec
jecxz
jb
mov
inc
call
pop
adc
int3
fidivs
mov
jb
das
dec
sub
add
dec
cmp
jmp
or
dec
dec
jbe
repnz
or
dec
loop
dec
adc
andb
addr16
cli
push
lods
sub
xchg
xchg
jns
jmp
or
daa
mov
ja
jns
sbb
pusha
adc
sarb
scas
repz
addl
inc
into
mov
lret
and
dec
js
in
cltd
aam
cwtl
loop
jmp
pop
xchg
mov
aam
xchg
dec
and
pop
insb
das
ret
add
ret
ret
pop
jns
cltd
jne
dec
out
scas
jmp
dec
jnp
lcall
out
out
inc
lds
lcall
lods
and
jmp
lret
sub
add
xor
cltd
mov
std
jnp
and
sbb
add
clc
inc
ret
hlt
sub
pop
or
and
cli
test
roll
push
call
sbb
pop
or
aam
lcall
mov
stc
mov
lcall
aam
out
xchg
xor
sbb
fwait
push
pop
movsb
xor
sub
imul
outsl
jge
mov
adc
push
jno
arpl
add
fsubrp
aad
fdivrl
inc
jno
xor
lock
pmaxub
and
cmc
ljmp
cmc
cmpsb
rcrl
cld
pop
imulb
jge
clc
outsl
shrb
pop
mov
insb
imul
jbe
mov
cmc
dec
cmpsb
popa
and
push
flds
jl
mov
add
das
shll
sbbl
add
push
movsl
inc
cld
push
mov
pop
push
outsb
lret
cs
push
sub
jae
sub
movsl
push
xchg
push
lock
xorl
pop
ret
rcrl
push
psrad
cmc
mov
dec
sbb
pusha
dec
push
jge
in
imull
jne
lods
mov
jae
mov
sub
pop
adc
and
imul
nop
inc
mov
std
jge
mov
insb
pop
out
mov
insb
mov
inc
fucomp
ret
sti
pop
add
testl
shr
pop
mov
push
pop
jo
adc
mov
cmp
aad
push
mov
mov
rol
cmpsb
in
jmp
and
ret
sbb
sbb
adcb
mov
sbb
dec
xor
addr16
out
js
cmp
xorl
pop
jnp
xor
imul
adcb
pop
mov
popa
aad
repz
inc
sarb
xor
mov
repz
movsb
cmp
nop
adc
test
js
fildl
test
cld
ds
pop
cs
in
push
mov
iret
adc
scas
jo
dec
loope
adc
xchg
lods
in
icebp
or
mov
xlat
and
sub
mov
addr16
and
jno
push
rclb
sub
shr
jecxz
jle
clc
or
mov
fnstcw
fiadds
ljmp
sti
cmp
enter
sbbl
jo
add
les
push
test
adc
add
in
push
mov
movsl
mov
in
mov
int
stc
jmp
xlat
cltd
cmc
lea
in
push
xchg
push
mov
fmul
inc
and
inc
cmpsb
repz
mov
fwait
xlat
sub
mov
sbb
fidivrl
add
sarl
add
movsl
hlt
pop
int
push
fidivl
mov
in
push
inc
fcoml
ljmp
lret
fidivl
lea
or
jp
lahf
mov
inc
es
inc
popa
test
push
add
mov
cmc
push
stos
mov
mov
ljmp
jno
pop
jno
inc
mov
clc
push
cmp
outsb
sbb
push
nop
xor
fdivl
sub
iret
mov
lret
lahf
jmp
mov
cs
inc
mov
gs
add
push
nop
outsb
and
fisttpl
jne
cmpsb
cmpsb
sub
adc
test
mov
dec
jmp
rorl
lods
lods
mov
adc
dec
inc
or
sub
jecxz
xchg
inc
pop
cmp
sahf
lds
inc
dec
dec
mov
jns
cmp
mov
or
pop
mov
in
iret
inc
push
gs
arpl
dec
cmp
decb
sti
mov
popa
int
xor
xor
int
jnp
call
and
xchg
aas
dec
sbb
cmpsb
xor
push
rcrb
and
js
cmpsl
icebp
fnstcw
xor
pop
out
add
xor
test
inc
mov
mov
in
sbb
in
xchg
cmp
fdivs
and
sbb
dec
sbb
or
push
xchg
lcall
cmp
inc
clc
push
jns
sarb
sbb
sbb
mov
lahf
push
mov
lock
sbb
mov
mov
xor
in
add
dec
add
int
addr16
xchg
rcll
aas
loopne
icebp
mov
and
les
xchg
mov
sub
jo
daa
outsl
mov
dec
test
insb
or
mov
or
dec
frstor
jle
outsl
mov
imull
into
add
inc
rcr
and
jae
shll
nop
and
pop
fidivl
and
jmp
sarl
in
dec
mov
mov
sarl
xchg
xchg
fstpt
icebp
jns
and
pop
out
test
mov
sti
or
into
sbb
stc
xor
push
stos
std
rolb
sub
push
out
andl
fstpt
add
xchg
stos
dec
inc
xchg
jns
mov
test
ret
xchg
xor
stos
arpl
cmpb
lcall
loope
sub
lods
adc
test
mov
jle
mov
cmc
aam
inc
mov
mov
sbb
lret
mov
leave
adc
mov
jg
push
stos
mov
aaa
jg
mov
aas
iret
jno
mov
in
mov
ret
xchg
hlt
into
dec
sar
pop
and
cmpb
inc
test
xchg
lods
mov
jne
outsl
lahf
stc
mov
jno
push
and
pop
push
xchg
loop
or
popa
notb
data16
inc
pop
sub
hlt
or
pop
xchg
stc
jle
and
mov
jnp
icebp
cltd
or
fwait
imul
xchg
ss
mov
call
inc
dec
repnz
mov
add
inc
clc
sbb
sahf
std
cltd
fmulp
lahf
add
xor
xchg
sub
sbbl
into
cmpsb
movsb
cmc
mov
rclb
iret
pop
repz
sahf
add
mov
xchg
sub
maxps
pop
or
pop
mov
loop
ljmp
sbb
lret
xchg
jp
mov
push
pop
insb
jb
dec
repnz
xchg
push
sbb
cltd
popf
xchg
jecxz
scas
data16
bound
mov
mov
pop
addr16
shrb
pop
mov
pop
roll
mov
cmp
pop
aad
fldl
rolb
push
call
sub
movsl
mov
mov
add
mov
and
mov
jg
scas
push
push
rcrb
pop
cwtl
xor
xchg
pop
dec
test
mov
aas
xor
mov
pop
xchg
inc
stos
js
mov
hlt
cwtl
inc
shrb
clc
stos
add
in
imul
xchg
les
adc
mov
xchg
mov
ret
pop
les
jnp
daa
xor
call
pop
ds
daa
jp
in
fstps
adc
les
xor
xlat
cltd
inc
jp
in
bound
or
lds
jae
jl
pop
cmpsl
push
lahf
in
out
dec
pop
pop
lea
imul
imulb
jns
cmc
pop
jno
jecxz
ret
sub
mov
lcall
xchg
xor
lret
fs
pop
addr16
pop
mov
pop
rcrb
ret
out
call
and
or
mov
push
popf
scas
mov
lods
push
sarl
cmc
push
inc
jecxz
xchg
pop
xlat
in
cmc
cmp
mov
pop
dec
lahf
leave
xchg
jnp
lds
mov
jg
jne
jmp
cltd
xchg
pop
mov
arpl
cmp
xchg
jecxz
fiaddl
aam
push
cmp
rclb
dec
hlt
push
xor
lahf
cli
out
fldenv
mov
mov
fsubrs
or
jmp
sbb
dec
push
outsl
jae
mov
lds
mov
xchg
loope
adc
shll
lcall
jl
jle
lea
push
mov
lock
push
xchg
push
movsb
push
push
call
add
cmp
test
sub
ds
xor
lods
aam
or
xor
push
inc
pop
dec
std
jp
popf
pusha
sub
and
gs
mov
mov
mov
jge
nop
daa
arpl
scas
inc
jmp
push
ljmp
jno
push
leave
insl
loopne
into
inc
lods
into
faddl
mov
and
mov
out
lods
pop
addr16
fnstenv
add
push
in
test
pop
lret
daa
inc
push
and
scas
das
or
pop
adc
jae
jmp
clc
sbb
dec
pop
xchg
sub
data16
movsb
mov
test
sub
leave
xor
jnp
push
cmp
popf
cmp
test
dec
dec
push
xor
leave
or
aad
popa
jo,pn
push
data16
xlat
repnz
add
jae
cltd
movsb
rcr
jae
int
cmp
mov
mov
nop
ljmp
sbb
addr16
aas
bnd
add
sarl
out
out
subb
mov
push
xlat
addb
ja
das
call
sbb
xor
roll
popa
loope
and
pop
mov
dec
lret
lret
cs
xchg
ljmp
es
xor
out
xor
sti
lea
scas
jl
cltd
push
mov
aaa
push
or
cmp
jp
lea
pop
and
pop
aas
push
js
inc
test
clc
sub
inc
jno
pop
in
insb
push
sub
fdivs
push
inc
sub
aas
dec
mov
mov
fldenv
jbe
jnp
push
dec
or
inc
pop
loopne
xchg
in
sbb
and
inc
sbb
dec
cs
out
lea
dec
cltd
iret
mov
cli
adc
push
inc
pushf
js
into
andl
mov
inc
dec
mov
stos
cmp
aaa
fs
xchg
lock
leave
mov
pop
dec
inc
xlat
outsl
jne
pushf
cli
cltd
je
xor
mov
inc
rcrl
push
mov
or
rolb
in
test
mov
jo
or
push
call
insl
pop
xor
xchg
xchg
xchg
lcall
mov
test
dec
int3
adc
cmp
xchg
stos
loop
pop
out
adc
xchg
mov
jae
xchg
aas
ja
cmp
sub
mov
insl
add
inc
mov
das
cwtl
and
ja
in
mov
cmp
push
loopne
mov
mov
out
cmp
jecxz
push
cli
in
xchg
and
and
xor
pop
xchg
dec
inc
cld
and
popa
add
lahf
xchg
lcall
add
frstor
adc
xchg
pop
mov
inc
inc
arpl
ljmp
idivb
pop
sub
movsb
and
xor
or
loope
mov
add
add
es
jl
sub
insb
sahf
and
jbe
or
into
outsb
sbb
or
daa
inc
and
cmpsb
imul
in
movb
xorb
montmul
cmpsb
inc
aaa
mov
adc
daa
pop
mov
jle
dec
pop
sbb
add
inc
pop
movsb
bnd
or
mov
mov
fldenv
int3
pop
mov
shll
iret
xchg
or
xchg
and
push
mov
fstps
push
in
cmpl
add
jb
pop
sub
mov
xor
push
lods
in
fwait
aam
pop
mov
mov
loopne
dec
ds
jp
sti
or
xchg
leave
iret
jne
cmpsl
cmpl
mov
sbb
lcall
mov
inc
faddl
adc
mov
mov
add
jg
mov
mov
fldcw
orb
enter
push
sbb
jbe
cmp
aas
int3
out
ljmp
push
iret
in
jae
dec
lret
mov
pop
xchg
jle
loop
mov
daa
pop
add
out
cmc
push
push
inc
xchg
mov
jecxz
pop
js
mov
sub
push
sar
dec
inc
adc
lods
cmp
shrl
and
hlt
mov
mov
in
test
ss
cwtl
hlt
adc
adc
cmp
mov
inc
out
shrb
ficoml
icebp
push
push
mov
push
inc
dec
arpl
hlt
test
dec
in
mov
jl
fwait
sbb
mov
mov
mov
and
mov
cmp
xor
sub
lahf
int
mov
lret
iret
fidivl
or
cmp
inc
scas
loope
pop
popa
pop
ds
cmpb
mov
mov
cwtl
xor
repnz
inc
pop
inc
mov
push
sbb
jmp
decb
jno
scas
aam
outsb
add
out
or
cmp
sub
adc
cmp
es
sub
dec
push
test
jmp
adc
jbe
xor
mov
sbb
inc
pop
fsubs
jne
inc
sbb
in
sahf
push
cmp
inc
dec
gs
inc
mov
fsubrs
dec
popa
jp
and
cmp
pop
mov
loopne
lret
cmc
jl
das
dec
adc
sbb
imul
jo
mov
enter
cmpsl
ret
pusha
sub
mov
dec
and
je
and
fildl
add
xor
bound
push
mov
cltd
aad
cmp
out
adc
hlt
push
lods
orb
sub
testl
sbb
push
loope
sub
push
dec
cmp
ds
shrb
lea
xor
push
pop
sub
popf
shll
add
test
inc
leave
popa
mov
pop
sbb
pop
jne
loop
pop
dec
loope
ja
adc
int3
mov
ja
fbstp
mov
xor
scas
jmp
std
mov
inc
lahf
pop
cmp
ljmp
into
mov
and
jae
sar
jno
js
ljmp
pop
ret
cmp
aad
sbb
mov
clc
fwait
jb
movsb
stc
aad
mov
aaa
jecxz
or
push
subl
out
mov
pcmpeqw
push
sub
jae
push
mov
insl
decb
adc
ret
subb
nop
mov
jns
ret
lret
mov
es
rorb
lret
pusha
cmpb
jae
and
mov
bound
xchg
ja
fadd
pop
int3
mov
test
test
out
pop
sub
or
insl
test
sbb
cltd
repnz
out
mov
add
sub
inc
test
icebp
fisubl
clc
cld
or
mov
push
cmc
adc
mov
popf
aam
out
jo
mov
in
outsl
and
lock
ficoms
test
lea
test
ret
lds
incb
movsb
das
mov
mov
inc
fdiv
cli
mov
mov
push
fiaddl
outsl
pushf
and
push
dec
in
js
mov
pop
pop
sbbl
lods
stos
hlt
cs
pusha
add
lods
repz
je
mov
dec
xor
fnstenv
sub
mov
leave
xchg
test
xchg
in
xchg
sbb
add
cmp
fcompl
adc
gs
mov
fildll
pop
or
dec
inc
hlt
mov
mov
inc
pop
mov
fwait
lret
jno
push
es
mov
xchg
shlb
push
sahf
loop
dec
lret
mov
cmpsb
push
movsb
sbb
neg
xor
mov
into
mov
push
ret
roll
mov
popf
or
fldenv
xchg
adc
pop
out
mov
stc
push
add
daa
fstpt
and
inc
ficompl
fldl
mov
js
or
lock
or
andb
xchg
jmp
adc
sahf
test
movsb
dec
push
or
pushf
jbe
adc
sbb
mov
jge
pop
xor
mov
lcall
aas
dec
iret
js,pn
add
shlb
dec
aad
xorb
mov
and
arpl
les
xchg
test
xchg
test
xchg
mov
fidivrs
les
xchg
sub
arpl
dec
dec
enter
popf
dec
push
dec
mov
sbb
dec
test
jg
pop
andb
push
mov
mov
jae
pop
repnz
push
es
dec
inc
inc
sbb
adc
fstp
inc
inc
xor
decb
lea
cmpsl
div
movsb
xlat
aam
data16
hlt
pop
icebp
and
sti
js
imul
or
xor
lret
mov
jge
mov
cmp
rolb
lret
idivb
add
les
or
jbe
stc
popf
push
and
mov
pmaddwd
add
in
lahf
xchg
xor
jl
sahf
lods
sbb
js
or
cmp
lcall
das
sbb
ret
testl
roll
xor
dec
inc
inc
insb
inc
aas
sub
sti
pop
jmp
push
nop
aaa
fnstcw
push
sti
cld
or
std
xchg
popf
mov
out
lds
loop
aas
test
lret
sbb
outsb
adc
ss
movsb
mov
push
push
mov
or
es
and
mov
ret
in
jecxz
flds
addb
xchg
xchg
lds
and
pop
inc
loopne
sub
das
idiv
leave
sub
mov
dec
mov
xchg
push
addl
out
and
int3
lods
or
jbe
xor
daa
pop
ja
or
sub
call
in
mov
cmp
pop
push
dec
fimuls
cld
jns
out
sbb
cmc
mov
js
bound
xchg
jo
inc
xchg
addr16
sub
push
xor
push
fnstsw
push
mov
dec
jge
shll
scas
arpl
add
push
mov
lret
sti
mov
sub
fnsave
dec
pop
loop
aas
lea
sbb
adc
add
mov
cmp
pushf
xchg
push
ljmp
jmp
arpl
adc
pop
dec
inc
enter
adc
pop
dec
in
mov
jle
mov
add
add
aas
cmp
scas
and
cmp
pop
clc
or
scas
and
xlat
jg
pop
out
loopne
shll
push
sti
repnz
mov
mov
popf
push
and
cmpsl
inc
mov
cmpsb
mov
call
inc
loopne
add
mov
pop
push
repz
or
push
dec
fidivl
inc
pushl
pusha
ss
inc
enter
ror
psubd
mov
sarl
inc
loop
mov
add
lea
sub
mov
test
imulb
in
repz
mov
icebp
ja
mov
inc
or
nopl
and
pop
dec
jg
pop
inc
cmp
sbb
ret
aam
mov
xchg
cmp
dec
dec
orl
out
add
mov
sub
loopne
dec
dec
rcrl
add
push
fmuls
aas
pop
js
ret
int
cmp
loope
pop
add
fisttpl
ds
and
add
cmp
test
jmp
lods
lahf
sbb
mov
xchg
jb
sbb
out
push
mov
and
loop
inc
mov
jnp
adc
cmp
pop
call
std
fidivs
aaa
mov
jecxz
xchg
add
loope
xchg
add
leave
mov
cmp
shrb
test
add
or
pop
cmp
mov
or
hlt
sti
movsb
loope
mov
int3
cmp
jns
jno
in
adc
ljmp
jge
push
dec
mov
xchg
or
push
jne
cwtl
stos
nop
mov
xor
dec
test
aas
bound
or
shll
dec
rcrl
cs
fwait
out
dec
popf
jmp
loopne
aaa
out
mov
xchg
call
inc
add
or
jge
xchg
jle
sbb
and
jmp
pop
and
inc
lcall
mov
in
mov
loope
adc
dec
in
xlat
imul
out
mov
outsb
iret
jp
test
pop
das
mov
jp
inc
std
or
and
push
pop
jecxz
add
push
or
cmp
andb
mov
mov
mov
test
jmp
test
or
cmpsl
inc
mov
jmp
lds
inc
xlat
fldl
inc
add
sbbb
or
sarl
push
or
sub
sub
sbb
add
mov
call
push
push
ljmp
in
mov
mov
cwtl
xor
lret
mov
cmp
aad
cld
add
sahf
jno
push
ret
xchg
or
fdivl
out
xchg
fnsave
jne
jne
daa
arpl
icebp
jge
lret
adc
mov
jo
movsl
jl
iret
xchg
mov
test
pop
outsb
or
fnstcw
mov
mov
and
sbb
pop
arpl
les
icebp
jle
and
cli
pop
adc
scas
mov
fnstcw
es
je
adc
aaa
xchg
neg
mov
xor
enter
inc
fcmove
enter
in
popa
pop
aaa
inc
mov
pop
mov
popf
out
cwtl
xlat
outsb
nop
or
mov
cmc
sbb
pop
push
jge
ret
inc
in
pop
call
js
repz
in
fucomip
or
lcall
push
loopne
xor
fidivl
mov
sbb
addr16
sahf
xchg
dec
fiadds
jmp
loop
mov
push
test
lock
inc
data16
jno
ja
dec
cltd
xchg
cmc
maskmovq
notl
shrl
xor
je
cmp
outsl
sbb
mov
cmpsb
adc
mov
dec
jbe
or
mov
xor
test
roll
cmovl
pop
cmc
aam
pop
pop
imul
or
movsb
repnz
xchg
sub
push
sub
xor
cmpsb
cmpsl
cmc
mov
pop
imul
add
addr16
outsb
addr16
inc
rcrl
ficomps
xchg
and
sub
adc
in
inc
xor
sbb
add
and
cmp
mov
loope
adc
addl
fsubrl
pop
fisttpll
movsl
inc
lahf
cmp
cltd
jb
push
xchg
out
jnp
jmp
adc
push
xchg
mov
sbb
pushf
imul
xchg
incl
pop
hlt
int
push
in
out
jnp
and
or
xor
lock
shrb
or
and
fcomi
outsb
lret
std
ret
movsb
push
js
out
loop
testb
mov
scas
jle
adc
int3
enter
mov
in
scas
and
xchg
adc
cmp
pop
je
cltd
pop
xor
aaa
int
jmp
pop
mov
push
sarl
jecxz
aad
cltd
sub
push
aas
call
cwtl
mov
sub
mov
fldl
call
test
lds
xchg
enter
mov
nop
xchg
mov
mov
aad
adc
repz
dec
ds
aas
sbb
and
data16
sahf
mov
dec
lea
cld
cs
mov
shlb
pop
sbb
fnstcw
int3
cmp
cli
addr16
or
push
mov
adc
push
xchg
jb
sbb
pop
in
iret
inc
add
inc
xor
mov
jbe
imul
mov
je
ljmp
das
mov
and
sbb
xchg
push
and
sbb
dec
push
int3
jle
pusha
jo
xchg
xchg
pop
les
xchg
sub
insb
mov
mov
testl
add
mov
sbb
push
imul
mov
pop
inc
lods
test
lods
jg
out
inc
inc
mov
push
xor
jg
jb
sbb
loope
inc
in
mov
fisubrl
fidivl
test
imulb
sub
nop
pop
add
xchg
arpl
xchg
xchg
dec
loop
mov
in
test
scas
fcmovu
lock
vucomisd
push
jge
inc
push
adc
int3
push
bound
and
fcomp
lds
push
cmpsl
dec
pop
push
enter
mov
dec
in
lahf
hlt
xor
cltd
test
loop
int3
data16
shr
repz
aam
gs
std
popa
dec
insl
add
xchg
pushf
sub
in
sbb
jne
jp
out
jle
lock
mov
shr
inc
das
mov
push
imul
or
mov
ja
dec
mov
mov
mov
pushf
dec
loop
or
mov
imul
es
mov
jmp
or
xchg
int
aad
aas
mov
fisubrs
call
stc
pop
popf
or
or
sub
pop
pop
xchg
sub
xchg
sub
shll
aad
dec
mov
mov
mov
xchg
adc
jl
jnp
in
out
add
outsb
and
mov
fdivrs
push
add
lods
adc
sub
push
xchg
mov
aas
push
addl
add
popf
mov
adc
push
and
test
sbb
movups
orb
sub
popa
inc
loope
sahf
daa
or
mov
in
mov
call
mov
imul
scas
push
in
aas
imul
adc
cltd
cmpsb
notb
in
adc
pop
movsb
out
xchg
xchg
xchg
xchg
ja
mov
xor
ficompl
inc
test
lods
cmp
adc
addr16
mov
adc
orb
cmp
das
pop
ret
xor
shl
sbb
ret
adc
test
sbb
jno
inc
adc
repnz
popa
cmovne
jno
std
cmp
cmp
push
push
dec
xchg
or
adc
xor
mov
sbb
mov
addb
rcll
pop
hlt
jns
pop
or
push
add
sahf
xchg
lock
or
clc
nop
arpl
push
mov
inc
cs
mov
cmp
mov
gs
imul
sub
fstl
add
in
xor
pop
jbe
mov
out
lods
data16
iret
adc
loopne
push
popa
inc
dec
push
fiadds
adc
flds
dec
fwait
push
push
xchg
jmp
push
inc
lods
ret
dec
lods
cmp
adc
ds
jge
mov
in
mov
ss
shl
pop
icebp
inc
cmp
lahf
popa
push
xlat
adc
fsubl
fs
shrl
push
and
addr16
js
mov
sbb
aaa
into
jl
sbb
fsub
aaa
pop
push
fsubr
cli
icebp
push
mov
pop
cmp
xchg
dec
add
mov
test
add
jnp
and
and
rcl
loopne
sti
xchg
xor
xor
fnsave
pop
dec
ljmp
bound
push
pop
cs
das
mov
mov
dec
loop
es
dec
dec
mov
sub
lods
mov
test
mov
dec
pop
mov
pop
hlt
mov
lcall
cmp
in
dec
inc
fisttpl
sahf
cmc
add
adc
or
dec
mov
push
lcall
cmpsl
imul
sbb
scas
xor
jle
jbe
or
out
bound
add
sub
movsl
pop
inc
bound
dec
stos
fcom
fstl
repz
fiaddl
cmp
pop
and
stos
mov
xchg
stc
mov
sbb
jb
cmp
xor
test
mov
cmp
lock
aad
xor
fimull
or
add
mov
cmp
inc
fs
and
jbe
inc
inc
sub
pop
xchg
das
mov
mov
mov
and
mov
and
mov
mov
mov
push
push
addb
lret
adc
rclb
mov
cltd
and
sub
std
adcl
pop
mov
fbld
cmp
adc
push
and
xchg
jp
rclb
iret
in
sbb
out
dec
lret
jmp
jns
inc
arpl
jb
sarl
push
loopne
pop
add
mov
push
jmp
push
xchg
push
inc
imul
pop
and
jg
icebp
sahf
or
jne
mov
pop
push
clc
mov
sub
xor
push
push
sbb
lahf
jge
and
imul
or
jl
push
sar
sbb
cltd
gs
add
dec
xchg
xchg
scas
cld
out
xchg
adc
cmp
adc
mov
push
sbb
insb
pop
jge
or
fs
lock
sub
sub
xlat
inc
insb
add
lcall
jmp
push
push
addb
jle
lahf
jne
ds
xor
push
or
adc
shrb
pop
cmp
fisubs
xor
push
aaa
fcmovu
sbb
xchg
mov
imul
push
iret
mov
jae
in
popa
or
xchg
push
or
push
insl
shll
sti
fs
test
cli
push
ds
pop
out
push
push
incb
fisttpl
pop
insl
sub
lcall
jno
in
stos
and
cmp
inc
imul
pop
push
add
lret
mov
in
xor
stos
loope
fisubrs
push
ficoms
dec
ret
int
jae
popa
sar
push
unpcklps
aaa
sbbl
lret
sbb
stc
jmp
jae
xchg
pop
jb
inc
jge
jns
jb
and
ss
dec
mov
sbb
lock
mov
les
movb
fwait
bound
inc
pop
mov
bound
and
adc
xor
sbb
mov
pop
or
sub
lods
xchg
ret
push
mov
fistps
popf
mov
gs
stc
into
fs
mov
mov
fnstsw
andnps
and
push
jl
call
add
pop
sbb
mov
cmc
jns
sbb
push
push
cmp
mov
fcmovnb
cmpb
push
cmc
jno
xor
sbb
xor
mov
cmpsb
mov
enter
fs
call
pop
outsl
mov
pop
ja
adc
inc
jnp
sti
pop
push
xor
adc
shlb
and
test
scas
ds
sub
les
fmuls
mov
cmpsb
push
aad
sahf
jl
or
inc
mov
scas
gs
cmp
and
outsl
loop
cmp
inc
inc
scas
inc
mov
testb
andl
sub
setge
inc
sbb
scas
loop
jno
sti
mov
dec
and
pop
in
jg
fldln2
jg
insl
sub
iret
jge
jne
loope
faddl
mov
lds
in
cmp
mov
cwtl
mov
mov
das
or
adc
out
mov
cmp
stc
and
cmp
push
adc
dec
push
mov
sub
out
fisubs
jbe
sub
ret
push
shrb
xorb
add
stos
dec
in
mov
scas
and
leavew
cmp
iret
insb
ljmp
scas
int
repz
push
pop
stc
push
out
xor
mov
loopne
mov
adc
xor
mov
and
mov
mov
int
sbb
fs
pop
imul
in
jp
pop
inc
xchg
mov
pop
sub
cld
jb
sub
hlt
adc
mov
mov
sub
jecxz
ret
or
pop
call
lea
aaa
pop
inc
and
inc
leave
dec
mov
dec
fbstp
fistps
dec
imul
jecxz
aas
push
mov
push
push
or
aad
sub
cmp
and
jg
insb
adc
sbb
pop
mov
leave
das
fstl
add
inc
ret
fwait
inc
fsubs
jmp
or
dec
lods
cmp
ljmp
inc
fsts
int3
in
imul
push
pop
ss
or
leave
jae
and
es
outsl
jnp
ret
sbb
add
aad
arpl
jnp
jo
cmp
pop
mov
sub
pause
loop
clc
pop
movb
add
cltd
and
jmp
cmc
lods
mov
add
push
jnp
add
lds
inc
push
sbb
in
mov
stos
adc
cmc
xchg
fistpl
out
iret
cld
push
jg
ss
aas
push
xchg
sub
lods
int3
xor
cs
or
sub
insb
mov
adc
pop
sub
lret
popf
dec
jbe
cmp
jne
loopne
fstps
stc
cmp
push
stc
je
or
arpl
dec
lret
mov
repnz
adc
cmpl
xchg
push
outsb
pop
icebp
lahf
xor
mov
xor
jmp
or
adc
push
mov
xchg
or
mov
iret
jno
pop
popa
clc
dec
jl
sbb
imul
inc
mov
push
cwtl
pop
push
sbb
outsb
inc
fistpll
leave
jmp
ljmp
mov
jmp
push
sbb
jb
in
pushf
lcall
mov
sub
mov
loop
inc
pop
cwtl
xchg
and
pop
jmp
sub
or
jge
das
aas
addl
out
and
aas
cs
outsb
xchg
cmpsl
shl
dec
in
dec
into
mov
mov
add
add
and
fiadds
jne
scas
divl
aad
push
outsb
xor
sahf
xor
or
scas
mov
shlb
sbb
sub
stc
push
xor
mov
push
mov
rcr
call
pop
das
push
mov
cmpsl
cmp
xchg
repnz
push
sub
xchg
xor
arpl
pop
outsb
repnz
push
cmovne
mov
in
insl
xchg
movsb
push
xor
cmpsb
in
cltd
hlt
addr16
mov
outsl
or
cwtl
pop
adc
iret
or
adc
inc
xor
mov
inc
and
push
xlat
add
aam
sbb
xor
xor
out
push
pop
push
idivw
pop
jns
cltd
jle
lret
arpl
push
je
fnstenv
stos
or
aad
sub
loop
jmp
sub
mov
test
jge
dec
cmpsb
cmp
test
repnz
or
lea
mov
mov
repnz
or
cmp
hlt
arpl
or
std
stos
mov
aad
xchg
push
dec
nop
pop
cmp
aam
gs
fists
roll
popf
mov
or
sti
popf
lret
dec
dec
gs
xchg
mov
pop
in
inc
xlat
adc
mov
enter
inc
aam
adc
or
or
repz
mov
add
test
shrb
jnp
mov
insw
mov
sbb
pop
cmpsl
iret
in
lds
sbb
mov
les
rorb
and
mov
or
pop
jbe
aam
push
sbb
push
cs
xor
das
arpl
add
sti
adc
scas
movsl
hlt
mov
test
pop
cmpsl
ret
jnp
pxor
sub
pop
inc
push
scas
fnstenv
lods
or
int3
dec
xchg
es
pop
mov
push
leave
popf
fidivs
ljmp
mov
push
outsl
mov
sub
insl
arpl
popf
sahf
shr
xor
lods
arpl
repnz
loope
outsl
xchg
pop
jns
sub
jle
xchg
sub
mov
in
call
jle
scas
pop
fdivr
xchg
or
dec
lcall
stos
call
xchg
enter
push
fsts
xor
jmp
push
adc
cmpb
fwait
movsl
inc
or
stos
es
sbb
inc
jno
dec
rolb
xchg
scas
je
mov
je
in
adcb
adc
pop
mov
mov
adc
insb
popa
jne
les
xchg
out
add
jle
and
insl
jp
enter
jo
hlt
cli
shl
sbb
aas
loope
out
dec
jmp
or
insl
int
iret
sahf
inc
out
hlt
sub
addr16
cs
adc
dec
mov
sub
shrl
dec
rcrl
dec
mov
sti
jo
sbb
into
jg
int
out
fucom
cld
push
lret
mov
dec
xchg
mov
dec
loopne
mov
cs
push
hlt
ret
jo
push
xchg
sbb
or
in
rorb
fistpll
or
mov
sbb
movsb
xchg
xchg
loop
test
dec
pop
iret
xchg
dec
push
into
shlb
scas
insb
test
xlat
or
iret
inc
xor
lcall
inc
sbb
aas
sbb
ja
pop
jns
dec
aam
jae
lods
pop
popf
lods
out
aaa
lcall
mov
mov
mov
insl
mov
fnstsw
mov
ret
push
mov
mov
dec
lcall
add
adcb
out
and
icebp
testl
push
cmpsl
pop
bound
stos
popf
and
sbb
scas
cmpl
hlt
mov
jge
and
popf
or
cwtl
mov
push
in
mov
mov
mov
shlb
lea
ffreep
and
adcb
out
xchg
push
std
aas
jae
xchg
sub
and
sub
fnstsw
pop
cld
adc
mov
or
test
rcr
xor
sbb
bound
clc
int
popa
mov
sarl
cmc
lret
lahf
cmp
int3
inc
test
sub
cli
mov
mov
sbb
int
cmp
in
push
pop
inc
xchg
adc
push
jo
xor
insl
xor
out
mov
or
cmpsb
std
xor
seto
jl
mov
jbe
mov
xor
fbstp
in
aam
cmpsl
std
jo
std
adc
mov
loopne
cli
xlat
dec
mov
mov
mov
sarl
flds
push
lahf
addr16
test
mov
sub
js
inc
sbb
mov
into
push
mov
insb
fmulp
jb
scas
bnd
out
cmp
pushf
lahf
pop
push
pop
popf
mov
lock
in
sbb
pop
xchg
and
call
push
out
out
fwait
sbb
dec
dec
repz
fldenv
mov
les
mov
mov
mov
jmp
xor
cwtl
pop
repz
negb
and
sarb
push
mov
ja
inc
and
pop
mov
pop
loop
dec
xchg
mov
xor
mov
or
push
daa
inc
mov
mov
dec
jmp
je
outsb
ljmp
rolb
and
add
mov
push
test
xchg
push
jg
fnstenv
in
cs
sarb
or
ja
and
ret
pop
adc
xchg
nop
lods
ss
xchg
ret
aaa
call
xchg
push
nop
ljmp
cmp
lods
pop
cli
addl
add
call
jns
mov
dec
mov
insl
loope
stos
frstor
push
insl
jge
inc
push
cltd
mov
inc
dec
cmpsl
add
mov
fistps
cmpsb
pop
add
lea
dec
loopne
xchg
sti
pop
cmpsb
out
mov
fs
fstpl
pop
push
xorl
pusha
lock
and
orb
pop
inc
and
fdivl
arpl
and
pop
adcl
das
and
jmp
push
sbbb
repnz
and
dec
mov
int
xor
ja
cmpsl
imul
jbe
out
stos
xor
mov
fbstp
sub
lock
movsb
cmp
shrl
testb
sbb
int3
addr16
inc
push
push
jb
pop
cmp
push
cmp
call
sarb
cmp
jle
mov
lret
je
mov
adc
enter
sbb
int3
arpl
jns
in
ljmp
incl
dec
adc
or
jnp
push
aas
dec
pop
jge
mov
testb
jmp
xor
inc
daa
cmp
xor
decl
adc
pop
lahf
push
xor
xchg
or
sub
xchg
pop
or
xor
movsl
sahf
pop
mov
jns
psrad
cmp
mov
stos
and
adc
sti
xchg
jo
mov
mov
lret
cmpsb
lock
xchg
hlt
xchg
xor
pop
jmp
add
mov
int3
fisttpl
fwait
lock
and
jl
cli
xchg
popa
adc
insl
or
in
pop
adc
or
in
cmp
test
daa
cmc
fwait
clc
shlb
jle
loopne
test
lcall
dec
aaa
xchg
stc
mov
xor
mov
inc
data16
xlat
popl
aad
push
movsl
pop
loopne
push
mov
sub
daa
stos
push
frstor
lea
stos
and
ficoml
mov
cmc
inc
push
jb
sarl
icebp
cmp
jmp
adc
jae
icebp
push
cmc
mov
cli
mov
fmull
lds
mov
mov
and
shl
push
inc
mov
ja
jae
ret
ds
jp
mov
sub
push
and
arpl
aaa
addr16
xchg
mov
mov
testl
ret
xchg
test
dec
sbb
jne
mov
enter
push
jmp
pusha
add
add
daa
and
xchg
rcll
popa
adc
pop
ror
int3
or
inc
and
leave
xchg
inc
dec
mov
xchg
dec
fildll
mov
movsl
repnz
adc
movsb
push
push
ljmp
and
lods
mov
push
lds
fmuls
iret
fldt
jnp
scas
xor
push
lcall
jp
or
cmp
xor
dec
aad
and
cmp
pop
pop
jg
insl
nop
mov
add
push
incl
imul
mov
adc
lods
sub
sub
out
xchg
fstpl
repnz
sar
cs
pop
fmull
or
dec
nop
dec
out
xchg
pushf
or
insb
sub
cmpsb
jge
das
push
addl
inc
xlat
cwtl
sub
cmpsl
movsb
jae
jns
pop
stos
xchg
or
mov
pop
sub
or
sarl
les
ficoms
in
push
shlb
jl
jmp
orb
jg
xor
fidivs
outsb
mov
pop
rorl
notl
xor
popf
xor
mov
test
adc
shll
adc
rclb
out
inc
repz
cmp
dec
mov
fwait
pop
jle
out
xchg
xor
sbb
movsl
ret
lock
and
aad
fstpl
cld
mov
xchg
out
popa
dec
mov
movsb
cmp
xchg
push
test
pushf
ret
lcall
jbe
adc
test
push
xor
testl
jl
adc
lods
add
int
arpl
jmp
cmp
adc
mov
jmp
cs
jmp
push
in
push
add
add
pop
test
xlat
dec
icebp
mov
sub
jo
adc
int3
inc
xchg
sbb
sbb
mov
jns
mov
imul
add
mov
fucom
push
cli
push
std
or
push
sub
iret
loope
add
cmp
and
adc
loopne
cmp
sub
ret
repz
je
js
out
test
mov
mov
sbb
push
mov
xchg
mov
es
add
repz
cmp
xchg
pop
aad
pop
and
into
insb
dec
mov
or
inc
mov
sbb
out
push
negb
shlb
cmp
iret
je
in
pop
pop
ret
int3
test
adc
dec
dec
inc
fistpll
xor
inc
cld
fbstp
push
mov
dec
js
add
fcomip
shlb
jb
out
push
and
lods
lds
lret
fcoms
sub
dec
test
adcb
jecxz
ja
sub
jnp
mov
cmp
ficoml
pusha
cmpsl
or
push
ret
fisubrs
jb
or
or
std
repz
jge
xchg
pusha
pop
leave
adc
sub
mov
xchg
or
mov
je
lahf
and
orb
cmp
jmp
cmp
testb
les
push
push
inc
sub
rcll
push
in
inc
xlat
addr16
xor
divl
lret
adc
iret
lret
push
call
jecxz
call
dec
cltd
add
sar
dec
mov
pop
dec
fbld
cmp
mov
into
mov
jns
std
cmp
adc
xor
lret
sahf
xor
push
dec
mov
pop
inc
pusha
mov
popf
xor
imull
dec
lret
icebp
ja
adc
xor
mov
pop
pop
sti
xchg
dec
jo
mov
faddl
hlt
xchg
xchg
ror
pop
fdivrs
stos
inc
pop
hlt
addr16
dec
scas
mov
jbe
mov
cmp
push
mov
pop
jnp
aad
pushf
out
dec
mov
jg
dec
sbb
popa
into
imul
sahf
mov
jg
jns
sbb
adc
dec
out
push
jae
add
hlt
cmp
outsb
jmp
jl
cmp
adc
negb
xchg
test
inc
xchg
push
fiadds
leave
mov
mov
pusha
push
adc
fcmovb
lods
jge
inc
mov
mov
push
int
xor
xchg
push
sahf
fwait
or
cmpsb
sub
jle
lock
enter
shll
push
jmp
pop
xlat
push
in
or
pop
aas
loope
fildl
sub
mov
push
cwtl
pusha
xor
fnstcw
cld
ja
mov
or
orl
loopne
fwait
or
xor
insb
in
mov
cld
xchg
sub
pop
mov
fidivs
xor
adc
fnstsw
mov
call
xor
lret
fistl
or
or
iret
adcl
cmp
pop
icebp
sarl
inc
lret
mov
repz
call
mov
shll
aam
dec
test
outsb
shll
les
sub
lea
push
js
pop
mov
iretw
dec
int
xor
std
or
push
mov
or
notl
inc
dec
mov
les
pop
mov
xchg
pop
filds
sbb
sub
es
scas
mov
cmpsb
mov
rolb
in
or
pop
inc
in
and
call
mov
imul
mov
pusha
stos
inc
es
or
clc
seta
jle
insl
adc
and
mov
sbb
inc
popa
les
aam
incl
bound
sbb
out
xchg
stos
or
loopne
test
mov
pop
mov
imul
in
sti
mov
stos
or
lahf
mul
dec
inc
sbb
scas
ret
icebp
nop
pop
ja
or
mov
or
adc
sub
test
or
and
jns
and
cmc
inc
dec
leave
aad
xsave
mov
lret
xchg
jo
out
adc
dec
mov
jns
cltd
je
fcmovbe
je
filds
fdivrl
js
jb
in
xchg
icebp
ret
lds
adc
testb
add
inc
cld
push
inc
xor
imul
outsb
addr16
dec
sbb
add
inc
xor
jae
fists
clc
shlb
fiadds
jbe
cmpsb
lock
aam
jne
daa
inc
xor
imul
adc
add
shll
adc
cmp
adc
in
imul
sub
pop
test
mov
out
in
jnp
sub
add
mov
rol
movsl
insl
cmpsl
mov
clc
inc
pop
xor
cmp
mov
cld
xchg
int
xchg
enter
mov
mov
or
cmp
xchg
mov
bound
out
dec
lahf
fistpl
aad
inc
xor
ficoms
test
mov
cwtl
outsb
test
cmp
pusha
xchg
fdivs
mov
add
push
mov
mov
dec
push
pop
and
xchg
xchg
dec
pop
stos
xchg
mov
mov
pop
dec
stc
sbb
mov
mov
pushf
sub
pop
pop
inc
mov
jns
inc
add
out
jno
jno
cmp
cmp
in
dec
xchg
or
out
xchg
stc
aas
lods
test
sbb
out
jnp
stos
adc
bound
icebp
hlt
lret
movsl
int
inc
cmp
dec
mov
adc
and
inc
ret
sub
loope
mov
das
jno,pt
repz
je
xchg
out
inc
fisttps
push
loope
in
fwait
mov
stos
xchg
pop
xchg
out
mov
repz
bound
jle
push
repnz
cmp
imul
aam
mov
mov
popa
and
lcall
arpl
and
adc
mov
fistpl
rclb
scas
shr
pusha
ljmp
mov
call
mov
ljmp
cwtl
pop
nop
push
inc
sub
enter
xlat
out
adc
mov
imul
xor
mov
add
mov
and
inc
outsb
mov
add
inc
call
inc
push
ljmp
cmp
sahf
insb
jo
movsl
cld
or
jbe
pop
sub
adc
add
mov
adc
cmp
mov
push
mov
pop
mov
xchg
in
std
xchg
mov
xor
es
xlat
lret
bound
push
in
aas
or
fbstp
inc
cmp
popf
xor
rolb
jo
mov
mov
pop
and
add
cltd
insb
adc
iret
fistl
mov
xlat
xchg
in
in
test
xchg
cmp
lahf
in
jo
jne
xchg
mov
pop
negb
or
scas
sahf
pop
or
xchg
sbb
dec
ss
xchg
adc
iret
mov
inc
sbb
int
sbb
sbb
cmp
mov
jno
jb
and
pop
mov
xchg
stos
cmp
xchg
jb
ret
jb
pop
mov
repnz
nop
or
ss
lds
xchg
dec
in
cmp
inc
jecxz
cmp
test
dec
dec
mov
dec
push
lods
outsl
mov
and
fmuls
mov
das
repnz
jge
dec
idivl
sarl
mov
shr
out
jecxz
nop
mov
sbbl
loope
rcrl
insb
testl
addb
mov
mov
cmp
arpl
ss
mov
adc
adc
dec
call
dec
adc
cmpb
scas
int
js
mov
cld
ss
jecxz
dec
push
pop
aaa
xor
xor
int3
incb
xchg
add
push
pop
out
dec
push
sbb
xrelease
pop
sahf
out
push
test
iret
xchg
pop
cmp
and
adc
mov
pop
outsb
or
adc
pusha
xor
add
fldenv
out
cmp
shll
int3
pop
mov
das
sahf
xchg
pop
popf
pusha
xchg
insl
rorb
jnp
jl
sub
repz
or
lods
lods
mov
inc
mov
adc
xchg
mov
mov
dec
sbb
jge
aaa
lret
xchg
dec
lahf
jp
lods
adc
mov
je
scas
scas
jb
inc
cltd
or
dec
loop
in
mov
pop
nop
pop
xor
xchg
xor
mov
lds
andb
mov
dec
mov
push
dec
pop
mov
cmpsl
xchg
sub
dec
pusha
dec
and
ljmpw
outsl
adc
aam
lea
cmc
mov
jecxz
in
outsl
sub
stc
fcoms
fs
xchg
insl
daa
outsl
outsl
push
inc
xchg
or
imul
xchg
daa
xsha256
cmpsb
push
fidivrs
pop
insl
mov
aad
mov
or
push
jns
xor
inc
fs
outsb
sbb
mov
packsswb
pop
das
pop
out
mov
mov
xchg
jnp
in
and
test
enter
sti
lods
loope
pop
adc
movsl
cmp
xchg
mov
push
cmpsl
and
loopne
sar
fwait
inc
and
ja
data16
add
mov
push
sbbl
mov
stos
xchg
sub
fwait
mov
push
scas
clc
inc
fisubrs
xchg
push
in
lgs
add
je
jo
inc
fistl
fbld
xor
imul
and
push
aad
lahf
pushf
bound
test
stc
nop
pop
and
sbb
or
cltd
and
pop
ljmp
inc
inc
push
inc
mov
lret
mov
cmp
sbbb
leave
and
fsubrl
sub
sbb
repnz
mov
sbb
fldenv
addr16
push
adc
add
dec
movsl
fisubrs
add
shl
imul
mov
xchg
jne
xorb
sub
dec
loopne
loop
jg
jge
xor
sub
rcrl
loope
icebp
pop
out
ds
scas
dec
test
std
imul
xor
xchg
sub
adc
scas
adc
mov
cmp
enter
jb
push
movsb
fwait
push
popf
mov
mov
pop
negl
ljmp
jno
jne
dec
bound
push
aam
xchg
push
stos
sarl
imul
stos
inc
add
jl
test
rorb
push
dec
dec
sub
ja
dec
adc
xchg
jg
int
dec
pop
and
mov
test
inc
fidivl
dec
in
push
popa
out
pop
pop
jmp
mov
test
lods
and
adc
push
mov
mov
push
rcrb
add
xor
mov
jae
addr16
out
pop
pushf
add
imul
sahf
loopne
inc
mov
mov
scas
xchg
cltd
cmc
dec
lods
jne
ljmp
int3
js
inc
pushf
pop
cs
incl
aaa
cld
push
test
jle
lahf
jne
add
shrl
daa
pop
les
into
sbbb
mov
xchg
icebp
jle
nop
push
lcall
cmp
dec
hlt
mov
js
fbld
in
xor
shrl
push
xor
arpl
xchg
int3
shl
repnz
jp
add
neg
lods
sbb
sub
das
out
xor
lock
jl
je
and
popf
push
cmp
pop
adc
rcl
mov
mov
mov
clc
daa
ret
xchg
sahf
jno
je
fnstenv
mov
out
jns
cmpb
adc
cmp
daa
mov
sub
jnp
mov
xchg
mov
inc
push
sub
and
frstor
test
gs
sub
xor
jne
loopne
xor
push
jb
aad
inc
arpl
aas
push
sbb
outsb
lea
mov
aam
iret
orl
iret
push
pop
mov
sub
cltd
nop
fimuls
sbb
or
aas
mov
or
addr16
push
or
mov
mov
mov
inc
mov
out
cmp
ret
sub
mov
xorb
adc
in
push
out
mov
andb
xchg
bound
loopne
sahf
cmpl
jo
jge
push
xchg
jnp
repz
xchg
stos
aad
loop
mov
mov
out
dec
scas
pop
or
sar
fiadds
lods
enter
xchg
mov
push
jnp
popf
and
sub
pop
inc
or
lods
rclb
mov
push
xor
sbb
insl
call
xchg
pop
sub
aaa
lret
out
mov
movsl
fists
cmp
popf
movsb
ds
frstor
or
iret
arpl
fdivrs
pop
mov
rclb
cmp
fiadds
pop
in
shlb
sbb
mov
push
or
jg
lea
aad
cmpb
lea
mov
fcompl
adc
js
mov
imul
cld
xchg
xchg
xchg
or
or
aad
movsb
pop
insl
cltd
mov
mov
pop
sbb
push
mov
test
lahf
cltd
dec
mov
scas
xchg
sub
rorb
scas
daa
das
mov
jl
andl
push
sub
push
pop
or
iret
lcall
add
mov
scas
jp
test
push
outsl
negl
mov
adc
fldcw
fisttpll
sbb
jecxz
push
xor
cmp
push
jne
leave
test
push
into
orl
cli
add
test
shll
push
mov
cltd
out
mov
mov
int3
xor
mulb
jb
cmp
popf
cmpsb
mov
scas
mov
test
cmpsb
jle
pop
inc
das
cmp
sbb
hlt
inc
jns
cmp
cmp
mov
pop
and
stc
lds
call
push
addl
dec
in
out
jbe
xor
pop
std
fisubs
pusha
cltd
pop
cmp
rclb
imul
fidivrl
push
adc
sbb
ds
mov
out
incl
xchg
je
repnz
xchg
div
ja
stos
scas
inc
sbb
rol
mov
adc
or
xchg
sub
scas
mov
mov
notb
xchg
sub
and
sbb
mov
out
xchg
add
xor
adcl
ds
iret
jecxz
pop
sbb
cmp
xchg
adc
lea
dec
push
and
sti
push
pop
cmpl
movsl
and
or
xchg
xchg
push
add
fisttpll
imul
sbb
adc
or
pop
dec
inc
xchg
dec
movsb
ret
dec
fwait
pop
adc
sbb
xchg
sbb
mov
call
popa
or
fwait
ds
pushf
bound
and
sub
pusha
fucomi
mov
out
int
mov
mov
shl
out
add
pop
jge
mov
out
jo
in
subb
notb
mov
movb
inc
aas
push
shlb
pusha
pop
in
push
fldt
loope
ss
mov
fstpl
dec
js
mov
imul
add
enter
pusha
or
dec
dec
sub
repz
rclb
leave
inc
and
xchg
shrl
mov
in
and
or
fbstp
push
out
pop
and
out
mov
scas
jp
das
push
push
add
mov
fdivl
push
addr16
out
mov
jo
mov
ret
cmpsb
aaa
ss
lock
js
loopne
cmp
mov
sti
xor
and
incl
sbb
mov
loope
push
stc
insb
mov
mov
jne
mov
movsl
inc
xlat
jne
adc
clc
mov
leave
jbe
lock
ljmp
dec
in
repnz
mov
ljmp
xor
aaa
pop
jo
rclb
aam
mov
mov
ret
push
push
cmc
clc
mov
mov
push
gs
push
jb
in
mov
inc
cld
mov
sarl
shl
hlt
mov
stos
inc
mov
decb
not
mov
xchg
xchg
dec
in
inc
icebp
or
ror
xchg
xchg
fstp
jmp
mov
dec
pop
imul
xor
add
mov
test
adc
xchg
and
in
in
dec
aad
sub
icebp
mov
adc
push
jmp
dec
xchg
pusha
ss
outsb
jo
mov
stos
mov
or
ret
add
cltd
xor
mov
repz
xchg
xchg
loope
mov
lods
sbb
imul
push
or
lods
pop
xlat
or
pushf
mov
inc
push
scas
pop
add
sub
xchg
hlt
push
and
clc
mov
inc
xor
pop
out
fidivs
adc
mov
push
push
jmp
cmp
jg
sbb
or
lock
loop
jg
jmp
pusha
ljmp
mov
jae
push
dec
add
ja
repz
jnp
rolb
inc
iret
data16
lods
and
mov
push
ja
popf
jo
add
subl
sbb
add
sbb
stos
movsb
xchg
call
and
mov
xorl
mov
cwtl
pop
ja
xchg
push
lods
push
mov
sti
test
xor
repz
push
lock
inc
lret
push
cli
xor
push
inc
scas
mov
cs
push
cmpsb
ret
iret
fnstenv
cmpsb
adc
pop
push
xor
rcl
inc
daa
test
outsb
dec
mov
mov
dec
fists
call
jns
repnz
xor
mov
xor
adc
and
ror
xor
mov
ret
jnp
in
sbb
push
sub
inc
sub
rorl
pop
lret
or
push
addr16
stos
push
scas
mov
sti
gs
mov
and
pop
es
mov
mov
cmp
cmpb
lahf
daa
popw
cli
xlat
ret
es
add
and
jo
movsb
xchg
xor
sbb
mov
iret
dec
mov
clc
adc
xor
les
and
das
jne
insb
ret
hlt
dec
cmpsb
jns
mov
mov
jg
sarl
sbb
sub
xor
inc
bound
lea
rcr
cld
stos
outsl
rclb
jo
xor
cs
xchg
pop
les
push
pop
adc
mov
xchg
or
lods
mov
xchg
mov
and
das
sti
stc
jg
sub
aas
push
xor
xchg
imul
pop
sbb
repnz
ja
out
test
je
cmp
cmp
pop
sarb
lea
lds
scas
dec
or
mul
jp
pushf
aas
cld
xlat
add
cmpsl
stos
test
fdivl
add
movsb
push
insl
add
pop
adc
pop
mov
int
mov
bound
jg
or
cmpsb
and
jno
jae
in
daa
push
test
xor
add
xlat
jmp
and
hlt
pusha
jns
xor
lret
or
and
sahf
push
ror
jbe
add
inc
sti
lock
in
mov
ss
cwtl
push
cwtl
call
mov
mov
lods
jno
xchg
sub
stc
mov
add
lods
scas
lods
sub
daa
adc
aam
add
jno
loop
xor
push
xchg
movl
shll
aad
cmp
pop
mov
ss
inc
hlt
pop
jne
aaa
lret
es
push
dec
xor
js
dec
test
mov
into
or
jp
test
and
add
aas
sbb
adc
cmp
std
imul
in
pop
mov
call
cmp
adcl
ss
adc
ljmp
mov
pop
pop
cmp
test
add
inc
lods
mov
je
inc
dec
mov
lret
jae
push
imul
cli
sub
jp
mov
pop
test
jbe
pop
out
dec
push
std
xchg
outsb
cmp
ds
sbb
loopne
lds
add
cmp
in
xor
bound
xchg
pop
mov
divl
or
aam
cmp
sub
fdivs
mov
sbb
movswl
mov
ficomps
repnz
jns
and
jge
addr16
test
add
push
mov
rcr
and
test
inc
fcomps
test
mov
cmp
xor
xchg
adc
push
push
cmp
xchg
test
sarb
xchg
ss
int
mov
aas
rorb
adc
inc
scas
lock
stos
movd
dec
pop
cmp
and
or
cwtl
movsb
pop
mov
jle
and
bound
jb
fbstp
and
rol
mov
fwait
shlb
scas
scas
fsts
outsl
rolb
mov
in
jbe
mov
adcl
dec
inc
inc
inc
mov
pop
cmp
loope
out
mov
jl
stos
call
inc
xlat
sbb
inc
xlat
rcrb
mov
enter
imul
fists
cmpl
xchg
jo
in
pop
mov
push
adc
nop
sahf
js
dec
pop
popf
or
pop
and
adc
mov
mov
push
bound
out
scas
mov
clc
adc
add
xor
aam
nop
and
jle
jmp
or
imul
add
adc
aam
lcall
and
dec
add
std
mov
out
pop
inc
add
dec
ja
cmp
inc
cltd
gs
lock
add
jl
and
xchg
jmp
xor
fucomip
or
adc
mov
pop
je
xor
mov
inc
rcll
push
data16
fmull
inc
xor
push
push
xchg
xchg
imulb
sbb
sub
das
push
sub
scas
cmp
xchg
arpl
push
fstpt
lods
shl
jb
dec
cmp
in
pop
shrl
adc
in
sub
lock
lret
xor
fwait
ret
call
cld
aaa
into
sub
push
lods
mov
icebp
aaa
hlt
shlb
cmpsl
fnstcw
or
push
fwait
aaa
cmc
xchg
adcl
push
jg
add
into
cli
xchg
add
mov
inc
add
mov
popa
lcall
lock
add
lods
pop
ret
mov
pop
lods
xor
negb
pop
xor
les
add
jecxz
outsb
dec
fidivs
jge
or
imulb
or
je
aas
xor
push
cwtl
incb
sbb
and
mov
imul
icebp
xchg
mov
aad
push
adc
stos
adc
mov
and
stc
stos
jne
das
daa
mov
jb
paddb
dec
mov
mov
mov
dec
push
dec
fistps
sub
pusha
jnp
push
popa
clc
test
cld
lcall
in
sbbl
dec
cmp
mov
mov
stos
bound
arpl
lret
cmpsl
xchg
push
bswap
int3
notb
daa
ds
and
imul
or
adc
xlat
mov
das
cmp
and
sub
inc
fs
xor
add
fs
movsb
jnp
test
or
mov
xchg
and
fcmovnu
and
int3
arpl
jnp
and
dec
insb
aad
mov
bound
xlat
xchg
nop
inc
mov
out
lds
notl
inc
push
xor
xor
out
enter
movsl
push
add
setg
pop
loope
pop
xchg
lea
add
dec
aaa
sub
js
sbb
aad
and
pop
or
push
pop
inc
mov
fsubrp
enter
mov
bound
inc
jmp
and
push
push
inc
xlat
outsb
sub
in
stos
dec
cmc
iret
repz
mov
sub
in
sti
ret
in
add
add
fwait
pushf
enter
nop
daa
adc
push
push
and
into
push
pop
or
outsl
rcrb
jns
outsl
out
pop
sbb
mov
push
mov
pop
jne
push
pop
dec
inc
call
test
dec
add
push
push
gs
leave
cwtl
pop
pop
or
xor
ja
out
rorb
repz
add
add
mov
inc
subb
stos
lds
inc
roll
mov
pop
mov
lea
cmpsb
scas
loop
test
cltd
aad
pop
cmp
sbb
xchg
sub
ljmp
push
lcall
cwtl
nop
sub
int
pushf
and
mov
jge
loope
popa
aam
mov
loopnew
addl
xor
aas
cli
in
add
dec
adc
push
movsb
and
pop
pop
sbb
fstpl
ss
pop
xchg
aas
ret
pop
inc
pop
adc
ss
jge
lock
push
jge
je
inc
fimull
xchg
js
dec
sbb
jb
rcl
jg
dec
adc
nop
popf
scas
mov
and
js
jmp
inc
stos
inc
push
push
cli
ljmp
pop
mov
add
mov
push
aaa
push
mov
jae
int3
inc
lods
jns
cmp
ret
lcall
push
jnp
cld
lahf
imul
jne
fstp
sbb
orl
xor
jmp
nop
mov
mov
xor
gs
leave
in
mov
inc
out
xchg
cmpl
fs
pushf
enter
mov
mov
movsb
je
test
cwtl
pop
jp
pop
sub
repnz
xchg
and
cmpsb
dec
iret
in
pop
pop
mov
inc
fstl
cmp
aas
mov
pop
cwtl
ljmp
push
lcall
outsb
jae
mov
or
aaa
jmp
movsl
push
push
or
out
clc
fs
jbe
ret
lds
add
enter
frstor
scas
pop
ja
or
scas
mov
fldcw
lock
sti
dec
ljmp
cmp
xchg
imul
jb
clc
or
js
pop
and
lret
cmp
cmp
in
addr16
mul
cmp
rcl
das
aas
cmp
outsl
iret
dec
adc
imul
jmp
std
jo
mov
lea
inc
and
hlt
dec
test
sbb
ss
ret
fisttps
dec
aaa
pop
jecxz
das
adc
pop
jp
insl
mov
push
sbb
inc
mov
lea
sbb
fmulp
cmpb
add
push
and
jae
jns
sbb
leave
mov
sub
and
sbb
arpl
cmp
ret
rol
sbbl
pop
out
insl
loope
dec
iret
jmp
jge
sbb
iret
out
test
hlt
xlat
and
mov
push
sarb
sub
ret
sbbl
popf
lock
inc
pop
add
jnp
pop
mov
aad
pop
out
test
dec
ljmp
stc
test
imul
bnd
lret
or
mov
sbb
xchg
add
xchg
and
popf
mov
cmpsl
jecxz
xor
inc
ljmp
mov
adc
cld
jmp
pusha
xchg
imul
xor
ret
pop
icebp
bound
aam
js
pop
xor
jb
xchg
xor
cmp
ss
ret
shll
stos
inc
ss
cmp
lret
scas
jno
ja
sbbl
out
xlat
outsb
and
enter
or
sbb
repz
cmp
mov
dec
lock
lds
push
out
es
ljmp
fstpt
jb
sub
mov
xor
dec
out
scas
int3
aam
mov
fadds
imul
push
int3
mov
imul
add
cmp
shl
xchg
mov
nop
inc
pusha
ret
loopne
dec
cmp
add
pusha
fcomip
scas
mov
cmpsl
iret
lret
jno
repz
jp
inc
sub
lea
cmp
mov
push
dec
outsb
jl
mov
push
sbb
xor
mov
cmc
ds
jmp
push
mov
sbb
stc
pushf
out
mov
adc
test
cld
fsubl
or
cmpsl
mov
fdivs
add
lahf
mov
nop
push
add
iret
sub
cld
mov
test
pop
push
test
pusha
sub
pop
jmp
jp
pop
dec
inc
adc
and
lret
xchg
fucomip
cld
clc
fnstenv
pusha
or
mov
pop
sarb
int3
fidivrs
push
jno
adc
mov
and
pop
and
and
bound
pop
adc
inc
dec
pushf
xor
aaa
xchg
push
loopne
es
cmc
les
fldt
or
jno
pop
repz
mov
add
fidivs
ret
fld
cwtl
adc
outsb
sti
push
insb
adc
xchg
pop
sub
or
mov
xchg
dec
cs
mov
movsb
mov
enter
aam
sbbl
arpl
sbb
sbb
push
imul
push
jb
cmp
iret
stos
imul
jbe
sbb
out
incb
cltd
insl
pop
adc
mov
add
nop
sbb
sbb
ljmp
pop
xchg
test
iret
inc
push
jbe
fldl
and
push
xchg
idiv
lcall
pop
or
mov
mov
sarb
inc
imul
and
cmpsb
cmp
cmp
cmp
ds
push
div
scas
cmp
xchg
push
mov
aam
mov
jo
stos
jge
sub
sub
pop
mov
rorl
bound
adc
xchg
repnz
sti
adc
xor
cmc
movsb
cld
add
cmp
dec
pop
shll
aad
lret
push
es
sbb
sub
push
rclb
adc
orl
and
mov
or
mov
cltd
adc
cmp
fnstsw
sub
mov
cld
mov
push
jg
les
enter
or
xchg
push
mov
dec
incb
add
cmpsb
sti
fwait
and
fadd
jl
jbe
adc
mov
dec
mov
cmp
jg
mov
and
les
jb
jne
in
xor
movsl
cmp
mov
or
scas
pushf
out
pop
add
jge
add
mov
movsb
cmpsb
cmp
ds
dec
cmp
xlat
popa
clc
pop
xchg
pusha
rol
fsubrs
movsl
xchg
inc
stos
sbb
sub
or
data16
xor
fwait
aas
hlt
movsl
jns
sarl
xchg
mov
insl
jecxz
push
jle
rcrl
dec
lcall
bound
aad
cmp
subb
aaa
mov
push
pop
divl
mov
xchg
push
mov
cld
dec
cld
or
xor
and
push
push
imul
movsb
mov
data16
xchg
lock
cmc
ja
add
pop
popa
insl
add
mov
xchg
mov
mov
icebp
cmp
out
inc
aad
scas
ds
xor
sbb
adc
aam
inc
sarb
jecxz
sahf
sbb
cmc
insl
arpl
adc
push
xor
xchg
stc
ret
jp
fs
popa
loopne
push
cmpb
sahf
mov
mov
test
xchg
xchg
test
gs
ds
ror
fucom
sub
xor
and
cmp
test
mov
jp
inc
fistl
lods
pop
icebp
jmp
xor
shufps
adc
or
lcall
pop
ss
mov
lret
lcall
adc
mov
imul
psllq
mov
mov
leave
lods
and
outsb
push
and
mov
lret
lock
pop
repnz
sub
dec
jo
cwtl
icebp
insb
add
aaa
add
fwait
test
adc
adc
pop
je
or
add
mov
mov
enter
or
xor
pop
add
mov
jns
adc
mov
sbb
into
jl
fcmove
mov
cmpb
mov
pop
nop
pop
jbe
mov
test
xor
test
mov
mov
fwait
out
lods
rolb
and
pop
hlt
mov
pop
adc
xor
mov
pop
fistpl
or
fistpll
push
dec
int
push
js
add
adc
jno
push
push
mov
push
je
or
call
es
cmp
cmp
dec
fdivp
sub
add
add
cmp
inc
call
loop
movsl
cmp
inc
test
cmp
add
lahf
fwait
cmp
mov
loopne
cli
daa
lcall
aas
sub
inc
mov
inc
std
sub
in
inc
mov
add
cmpsb
pop
pushf
push
sti
inc
sub
cmc
aad
insl
jmp
cmc
lret
fdivr
and
mov
push
loop
inc
loopne
iret
loop
aam
aaa
push
jp
fcmovb
ja
lret
cltd
test
pop
and
mov
and
push
cltd
and
data16
jno
in
sbb
test
shl
stos
inc
jne
jns
in
mov
outsl
loopne
xchg
cmpl
rcrb
pop
fmuls
pop
inc
inc
add
pop
xor
xchg
or
fistpll
mov
pusha
aam
push
call
xor
xlat
sti
pusha
fs
sbb
aaa
jbe
cmpsb
call
or
pop
subl
xor
or
add
pop
add
aad
fldl
mov
imul
orl
inc
fdiv
dec
iret
ss
into
fsubrs
shl
jbe
mov
testb
shrl
cs
cmc
mov
dec
enter
add
sub
mov
lds
mov
jno
mov
adc
ljmp
add
orl
outsb
addl
sbb
dec
hlt
inc
cltd
mov
adc
push
call
pop
icebp
and
or
das
xor
inc
pop
and
divb
stos
inc
scas
pushf
sbb
sub
pop
or
push
in
mov
mov
stos
push
push
and
mov
loop
fdivrs
call
sbbl
out
jne
repnz
or
or
inc
clc
shlb
insb
xorb
std
pop
lea
flds
mov
scas
int3
push
out
std
rclb
es
lods
mov
xchg
push
mov
testl
sahf
adc
outsb
inc
mov
sbb
popf
cld
add
sti
push
sub
add
lcall
data16
pusha
mov
mov
xor
and
aas
mov
lret
jns
or
std
icebp
daa
jne
push
mov
loopne
and
xchg
mov
adcb
mov
rcll
stc
lcall
jg
push
fistl
lret
repz
iret
mov
test
int
and
adc
aaa
fnsave
push
setns
cmp
sbb
aaa
int
push
je
fdivrp
push
push
and
je
pop
into
mov
fidivrl
shrb
fwait
xor
lcall
fldl
mov
ljmp
push
test
popa
mov
pop
adc
lret
imul
inc
imul
xchg
dec
sbb
insb
add
aad
push
test
cmpsl
cmp
mov
jns
test
or
pop
xchg
gs
aam
cmp
fidivs
jle
fs
lock
xchg
add
fucomi
dec
mov
adc
push
cwtl
das
inc
push
stos
xchg
push
insl
je
pop
ret
cmpsb
imul
mov
mov
jecxz
loop
stos
mov
adcl
out
cs
lea
adc
or
mov
call
lods
inc
dec
jp
std
push
sbb
js
xlat
sub
dec
repnz
xor
in
fisttps
pop
scas
das
pop
jmp
adc
inc
add
fcomp
hlt
or
pop
lahf
mov
xchg
test
cli
outsl
push
push
jno
int3
loope
cmp
xchg
mov
leave
jecxz
mov
add
jns
pop
ja
test
ror
fsubs
out
mul
xchg
pop
icebp
movl
popa
push
inc
popa
clc
jae
sub
rcrb
sahf
nop
dec
stos
adc
mov
test
test
dec
cmp
push
sahf
punpcklbw
adc
std
adc
mov
outsl
or
fildl
movsb
popa
and
mov
pop
adc
jge
push
push
cmc
xchg
or
adcl
jle
adc
sbb
xor
js
lock
js
xor
arpl
insl
add
push
inc
mov
xor
inc
sub
mov
and
rcl
negb
jb
mov
adc
push
into
popf
das
mov
mov
in
lds
pop
lock
jl
shrb
cld
loop
fcomip
pop
enter
roll
or
jmp
jmp
cmp
mov
jae
addb
dec
mov
mov
scas
mov
dec
in
test
loop
mov
imul
push
jg
int
std
dec
or
movsl
pop
push
mov
ss
mov
xor
xchg
dec
pop
sub
cmc
adc
scas
fucomi
cli
bound
and
stc
xor
std
notb
pushf
lods
mov
test
xchg
add
pop
pop
inc
cs
pushf
adc
mov
and
stc
sbb
xchg
outsb
or
test
popf
push
call
movsl
repnz
pop
movb
inc
sub
mov
inc
xor
stos
in
cmp
mov
adc
addl
or
aas
adc
jecxz
popf
xchg
or
and
xor
faddp
shr
push
push
movsl
xchg
xor
dec
jno
or
stos
imul
les
loopne
mov
jno
movsb
out
mov
sub
jae
data16
sbb
popa
add
rcrb
or
push
push
out
cmp
rcrl
mov
dec
jecxz
lea
mov
push
rcrb
or
push
inc
jns
into
mov
mov
xchg
mov
mov
add
das
pop
lcall
or
mov
dec
call
dec
mov
xlat
mov
cmp
pusha
dec
pop
adc
mov
insl
movsb
cmp
push
or
or
addr16
add
cmc
push
fwait
out
mov
pop
cmp
imul
insb
pop
mov
popf
push
shrl
test
mov
mov
pop
jae
push
or
mov
fsubrs
or
int
test
jo
jo
call
pop
outsl
out
push
adc
loopne
mov
jae
and
and
sbbl
push
mulps
dec
push
jmp
ret
fnsave
sub
and
cmp
outsl
outsl
push
outsb
std
sti
fwait
xor
mov
test
cmpsl
and
dec
jmp
rcrb
inc
fiaddl
push
cmp
das
mov
inc
push
mov
leave
xchg
orb
push
in
sbb
mov
test
push
imul
lds
ljmp
push
mov
enter
shl
jmp
movsl
int3
or
inc
mov
or
xlat
push
push
es
add
xchg
xor
loopne
out
popf
cmpsl
neg
lods
sub
rcrl
addr16
or
jle
mov
hlt
adc
decl
jg
rcr
daa
lahf
cwtl
push
nop
mov
and
sub
add
mov
psubd
mov
and
xor
clc
adcl
or
adc
inc
sbb
push
cmpl
mov
scas
cld
into
cld
cmpsl
xlat
sub
sub
movsl
pushf
mov
movl
out
cmp
mov
add
loope
mov
dec
dec
stc
inc
fmuls
cmpb
ret
lds
xorl
pop
ljmp
jbe
cmp
sbb
mov
xchg
fidivrl
pop
fcompl
fcoms
xchg
pusha
rcrl
push
in
aas
ljmp
sub
cmp
xlat
jno
loop
xor
mov
inc
cmc
mov
sub
xor
add
es
outsl
fs
adc
outsl
clc
insl
stc
bound
add
rcrb
ja
xor
cmpsb
and
test
cmp
mov
mov
pop
sahf
fimull
and
neg
xor
adc
popa
xor
cwtl
push
out
rorl
dec
and
mov
pusha
sbb
daa
mov
jno
ret
adc
inc
dec
jb
jle
or
dec
lea
add
int3
sub
inc
outsb
movsl
mov
icebp
or
insl
add
push
xor
lea
adc
cmpsb
mov
loope
inc
add
lahf
sub
mov
fdivrl
pop
mov
pop
out
or
out
xchg
jb
or
push
cmp
cli
insl
inc
xchg
adc
ljmp
xor
and
lcall
shlb
out
mov
dec
xlat
pop
cmc
mov
fucomip
push
out
fs
and
cwtl
or
data16
adc
jmp
addr16
mov
iret
mov
shlb
cmp
aas
jl
repnz
or
xchg
adc
lea
push
inc
sub
nop
addr16
popf
mov
jne
lret
test
mov
dec
pushf
dec
cmp
jno
das
xchg
sub
into
test
nop
cmpsl
rcll
call
into
sti
jp
cmp
xchg
add
adc
or
popf
mov
int3
out
imul
inc
sti
fbld
adc
in
inc
in
mov
xor
xchg
pusha
push
xchg
mov
outsb
jl
jns
push
stos
add
popf
pop
sbb
addr16
add
sub
xchg
pop
addr16
or
outsl
repnz
ds
inc
mov
aaa
push
sub
mov
outsb
notb
stos
pop
testb
cmp
mov
or
adcl
movsl
fnstcw
jae
add
jl
andl
jns
insb
hlt
imul
nopl
into
rolb
lods
or
ja
inc
push
mov
arpl
fcompl
fs
push
jg
icebp
pop
shl
adc
cmp
mov
push
cmpsb
pop
adc
and
cmpsb
xor
cmp
or
mov
mov
mov
mov
fs
pop
jl
lret
jb
push
mov
push
or
lret
movups
cmpsl
aaa
dec
push
cli
nop
mov
xchg
shll
mov
imul
mov
jns
cmpsl
cmp
cli
sbbl
int3
in
push
xor
push
push
jmp
adc
xor
fwait
stc
dec
mov
insl
popl
cld
fwait
pushf
mov
xchg
lahf
stos
divl
stc
pop
pop
mov
lret
icebp
les
mov
sti
jge
and
dec
ljmp
mov
pop
popa
mov
mov
sub
jo
out
in
jo
mov
or
and
dec
rolb
mov
out
std
xchg
shl
and
push
jns
rcrl
pop
add
leave
and
push
inc
jmp
mov
and
ja
cmpsl
sbb
adc
push
shll
pop
jae
ja
jne
sbb
dec
dec
inc
cld
fcoml
mov
clc
cmp
test
lea
inc
fildll
fistl
pop
test
loop
adc
jo
mov
adc
sub
sbb
mov
js
mov
stc
jmp
sub
xor
jb
inc
scas
inc
push
cmp
jle
leave
int
sbb
imul
int
xchg
inc
lea
lcall
sbb
xchg
mov
test
jo
imul
jbe
adc
pushf
cmpsl
add
pop
cmp
jmp
or
mov
add
pusha
roll
mov
adc
mov
fcmove
mov
jno
jle
push
insb
add
xchg
mov
dec
mov
push
jne
push
lcall
out
mov
add
cmc
pop
xchg
jmp
sub
dec
stos
xor
inc
shll
pop
inc
sbb
aaa
loope
jmp
mov
and
pusha
loope
sbb
call
cmpsl
jl
push
ds
jo
jbe
outsb
and
and
and
imul
mov
mov
outsl
push
fdivrs
cmpsl
xchg
lods
inc
adc
mov
mov
mov
scas
inc
dec
adc
je
lahf
xor
inc
bound
mov
mov
ljmp
in
mov
sub
cli
add
clc
push
filds
pop
mov
bnd
jmp
int
pushf
pop
ljmp
insb
jbe
les
pop
gs
mov
test
lea
stc
and
fcompl
lea
stos
jmp
loop
loopne
je
daa
sub
push
sahf
mov
and
push
push
cltd
pop
and
adc
and
daa
in
jne
dec
cmpsl
and
addr16
popa
es
fwait
out
and
jno
pop
xchg
mov
inc
pushf
aaa
push
mov
stc
sub
jg
ret
and
xorl
jp
ja
out
in
xchg
rclb
leave
and
icebp
pop
push
jae
lods
fistl
or
loop
adc
add
icebp
repnz
adc
jb
push
xchg
push
scas
adc
stos
call
cmp
jno
lret
sahf
clc
int3
mov
push
lret
jmp
xlat
and
xchg
imul
push
movlps
sahf
out
xor
sbb
push
jg
out
popa
insl
fsubrs
add
movsl
into
push
insb
add
repnz
movsb
xor
mov
fs
bound
js
cmp
shrb
push
leave
repnz
inc
loop
jo
or
fildl
mov
scas
loop
int3
jne
sbb
mov
ja
inc
les
rorl
mov
mov
mov
jle
cmpsb
pop
mov
aas
into
loope
ret
out
fdivl
mov
pop
adc
cli
add
rdpmc
push
inc
push
push
sbb
stos
dec
nop
andb
outsb
push
mov
and
aam
aaa
pop
push
mov
xor
sub
daa
dec
mov
les
pusha
mull
inc
add
in
mov
into
push
aam
jmp
inc
es
or
shrb
sub
sti
dec
adc
subb
sub
out
push
icebp
test
sbb
dec
arpl
outsl
xor
andl
icebp
inc
mov
js
xchg
in
xchg
lret
pop
mov
pop
jmp
rol
popf
je
push
xor
jp
scas
sub
cld
xchg
jg
inc
push
jmp
cmpsb
mov
xor
hlt
cmp
in
push
fdivs
dec
or
les
ror
pop
sub
inc
addr16
ljmp
sahf
xor
cmpsl
jno
mov
mov
cs
jnp
sbb
rcrl
or
jbe
cld
adc
inc
mov
fisubs
jne
sbb
dec
call
lcall
cwtl
jmp
xchg
cli
dec
jno
sbb
lret
fcomps
lahf
jl
mov
mov
jg
add
and
jecxz
stos
imul
adc
add
lahf
jmp
add
and
popf
dec
scas
jns
ds
and
sub
lea
sbb
inc
dec
push
inc
std
xor
mov
nop
icebp
mov
shl
jnp
call
xor
sahf
ss
fnstcw
bound
test
mov
test
fildl
insl
inc
cmp
iret
test
push
dec
scas
imul
pop
and
mov
push
jmp
sarl
lret
out
inc
cmp
pop
mov
xchg
mov
testb
cmp
lea
int3
pop
jbe
nop
pushf
movsl
inc
sbb
sti
repz
mov
mov
push
adc
xor
cli
movsl
xchg
inc
into
sahf
jle
xchg
pop
out
dec
mov
ret
leave
daa
ljmp
insb
jl
push
jle
les
jg
clc
xorl
mov
dec
cmpsl
inc
ret
xchg
sub
ja
dec
sub
daa
lock
out
add
es
xchg
sub
imul
push
pop
add
mov
andb
pop
pop
mov
ljmp
pop
fisubl
lret
mov
xor
or
jmp
popa
in
adc
test
das
bnd
and
push
mov
adc
jg
jns
xor
mov
imul
jns
into
push
pand
xor
adc
cmp
ds
gs
mulb
add
nop
lret
lea
mov
fwait
xchg
je
fcomi
fists
mov
or
push
fnstcw
cld
je
mov
out
int
jbe
gs
aaa
inc
filds
add
mov
into
add
push
mov
add
filds
sub
mov
adc
pop
cmpsl
lods
popa
jmp
aaa
sbb
orb
xchg
scas
cmp
lods
dec
es
cli
mov
mov
stc
mov
cltd
push
cmc
mov
cmpb
jno
subb
adc
push
pop
adc
stos
aam
cs
inc
jae
xchg
dec
rcrl
insb
fistl
test
xor
push
dec
mov
or
push
pop
push
lds
pop
mov
xlat
xor
andb
mov
inc
pop
test
in
xchg
in
or
test
mov
dec
je
das
dec
popf
or
lds
mov
int3
stc
cmp
push
mov
les
sub
sar
or
fdivs
jg
adc
inc
flds
xor
pusha
pushl
xchg
xchg
std
push
addl
les
inc
sbb
rorl
cmp
lods
xor
jbe
vmovntps
sub
ss
and
inc
push
push
orl
pop
jp
xor
fs
mov
mov
push
sbb
mov
cmp
push
push
pop
mov
std
testl
sub
loope
inc
fistl
clc
inc
cmp
xchg
mov
dec
mov
in
shll
push
rcrl
mov
jnp
jbe
xchg
ljmp
rcll
out
icebp
les
js
vmread
mov
fistl
lret
je
inc
testb
xchg
xchg
mov
sbb
addb
data16
cs
mov
jl
dec
fstps
les
push
jle
cmc
mov
fidivrl
jno
insb
cmpsl
mov
xor
insb
sub
push
cmp
adcb
xor
inc
fimuls
mov
dec
mov
sahf
lods
pop
jo
roll
mov
cli
daa
inc
lods
ja
push
inc
lods
mov
and
xchg
fwait
rcrb
test
lea
jns
mov
in
sub
push
repnz
sbb
in
ret
sub
hlt
push
lcall
stc
cmp
jae
ljmp
fmull
mov
sbb
rorl
xor
inc
dec
shlb
push
cs
rclb
shll
cmpsl
jle
pop
scas
fisubs
cmp
das
out
sti
jbe
test
push
xor
cmp
ljmp
jbe
lahf
add
mov
jmp
cltd
lds
or
cmp
adc
cwtl
pop
mov
sbb
je
out
jnp
and
pop
xlat
call
scas
push
push
ss
lea
push
data16
int
mov
in
xor
test
js
add
inc
xor
push
fcmovne
sahf
mov
mov
sbb
adc
iret
int3
pop
addl
stos
int
xchg
and
ss
xchg
sub
dec
lods
xor
xchg
in
outsb
mov
mov
js
or
cmc
movsb
repz
sub
or
sbb
xor
push
mov
push
push
pop
rcrb
add
or
orb
mov
mov
xchg
fnsave
mov
pop
fcomps
cmp
fnstsw
dec
dec
adc
call
shll
sub
ret
sub
cmp
sahf
mov
sub
lods
lret
out
ror
dec
xchg
mov
and
lcall
sub
pop
inc
pop
mov
lods
add
cld
cmp
sti
xor
or
xor
and
push
jne
imul
jno
sbb
xchg
insl
icebp
fsubr
enter
les
and
inc
sbbb
in
inc
push
aad
lret
call
fisubrs
push
mov
pusha
test
jae
daa
lods
je
pushl
pop
sbb
jb
enter
scas
andb
xor
cmp
push
xor
lods
gs
dec
hlt
stos
xchg
ficoml
lods
insb
sbb
xchg
mov
jmp
push
sub
movsb
ret
pop
flds
test
insl
repz
mov
mov
ss
sbb
jb
aas
xchg
dec
addb
push
movsl
leave
out
cltd
push
mov
add
cmp
mov
into
scas
or
stos
sub
pop
push
dec
data16
lods
scas
sbbl
pop
or
mov
inc
maxps
scas
adc
lock
push
xor
int3
popf
jecxz
mov
lods
dec
mov
fpatan
xor
sub
repnz
rcrl
pushf
sahf
lods
int
les
mov
mov
daa
lret
mov
loope
sub
adc
pop
popf
xor
in
std
jo
inc
lods
faddl
and
subb
popa
push
fbstp
iret
sahf
mov
xchg
out
xchg
pop
or
subb
nop
daa
mov
cli
cmp
pushf
and
imull
je
xchg
dec
pop
jle
add
sarl
std
pushf
mov
test
jle
nop
cmpxchg
xchg
in
add
ret
sarl
aaa
inc
pop
out
dec
sub
xchg
jne
push
lcall
mov
push
push
out
jbe
imul
xor
in
and
add
fcomps
sub
aaa
addr16
movsb
sbb
scas
mov
dec
ds
adcl
sbb
mov
ja
mov
lahf
jo
test
outsb
adc
aaa
xchg
jge
add
mov
mov
xor
or
pop
dec
xchg
xor
push
pop
in
sbbl
or
cmp
mov
xchg
cmp
pop
pop
test
push
sahf
cmpsl
movsl
fbld
cld
les
push
test
rorl
or
jnp
cmp
or
and
adc
xchg
lret
mov
insb
mov
jno
cmc
rcrb
jl
cmc
jle
aam
popf
insb
rcrb
fsubs
inc
jb
inc
dec
test
mov
cmp
or
pop
ja
lret
rorl
mov
hlt
push
mov
dec
push
push
jno
sbb
pop
push
lea
adc
out
lahf
or
sub
mov
in
test
in
std
pop
xlat
xlat
xor
test
mov
or
in
outsb
sbb
mov
dec
xor
dec
cmp
mov
es
or
jle
inc
pusha
xor
cmpl
jb
fsubs
or
xor
ret
pop
push
fwait
and
xor
shr
adc
cmc
mov
popa
in
inc
sub
xchg
js
mov
xor
sbb
addr16
nop
daa
daa
insb
aad
pop
mov
div
cwtl
mov
adc
loop
push
stos
sub
mov
jmp
push
lods
mov
jbe
mov
mov
fnclex
add
fiaddl
bound
or
fincstp
push
out
lea
leave
pusha
xchg
leave
sahf
data16
out
cmp
out
fwait
xchg
or
outsl
divb
push
cwtl
test
fwait
sbbl
ret
cmpsl
loope
push
rcr
stos
lret
mov
sbbl
jecxz
xor
loope
mov
mov
imul
shrl
nop
les
fistpll
addr16
sub
test
cmc
xchg
imul
sbb
mov
hlt
sahf
push
ljmp
cmpsb
scas
loopne
pop
testb
lcall
fmuls
sub
sub
ret
cmp
cwtl
test
shl
loopne
mov
fsin
cwtl
mov
adcb
fwait
mov
inc
jb
or
push
inc
adcb
in
add
cmp
cltd
outsb
mov
xor
repnz
inc
ret
divl
mov
iret
mov
jmp
xor
jecxz
sti
jbe
mov
or
mov
mov
in
aad
lcall
pop
fisubrl
out
popa
cld
bound
add
sbb
push
outsl
inc
or
xor
stc
lcall
jo
fcmove
dec
fs
andb
and
adcb
sub
adc
bound
mov
fidivs
sub
andl
sbb
cmpsb
jae
or
test
mov
mov
add
cmp
or
jp
enter
and
dec
dec
pop
mov
mov
xchg
in
fldl
or
into
int
cmp
je
cld
pop
sub
push
mov
scas
es
dec
lods
sbb
in
mov
sbb
into
les
lret
es
xor
pop
mov
push
mov
and
jb
test
mov
or
testl
push
inc
data16
mov
inc
loop
jp
push
and
or
repnz
call
push
nop
outsb
push
aas
loope
subl
jo
or
int
out
jmp
orb
idiv
cmpb
or
xorb
pusha
mulb
leave
loopne
es
dec
pop
ficompl
repz
jns
pop
jecxz
es
push
pop
stc
pop
mov
xorb
mov
bound
js
xchg
stos
test
mov
jmp
mov
out
push
jp
push
push
jmp
cmpsb
inc
jae
dec
xchg
or
dec
shrl
mov
data16
cmp
sbb
mov
mov
mov
pop
pop
mov
movq
mov
add
adc
aas
push
dec
xchg
into
mov
push
mov
jno
sub
jnp
mov
ja
nop
xchg
fsubrs
mov
aaa
sarb
shrl
in
xchg
sbbl
pop
pop
sbb
jge
pop
and
lds
add
ss
bound
xchg
mov
mov
daa
cmpsl
aad
add
ret
leave
mov
repnz
sub
lcall
cmp
call
push
push
arpl
sbb
lea
daa
movsl
cmp
mov
mov
ret
ret
cmp
aas
shrb
fdivp
xchg
addr16
pop
mov
dec
adc
cmp
mov
mov
int
in
xchg
push
nop
push
xchg
fmuls
pop
cmp
jo
inc
flds
fldenv
cltd
test
fiadds
xchg
das
test
in
leave
or
adc
out
pop
out
mov
pusha
jp
sarl
push
inc
inc
jnp
dec
dec
pop
xchg
or
rclb
or
add
jns
or
mov
jne
pop
lcall
fists
incl
fldl
jbe
stos
inc
adc
fld1
std
xchg
mov
mov
xor
mov
decb
shrb
inc
cld
out
push
in
stos
cltd
shrl
inc
int3
jae
js
xchg
jl
imul
mov
xor
and
shlb
jb
xchg
mov
and
cmpsb
mov
dec
addr16
inc
mov
ja
and
stc
outsl
lods
jg
sbb
jb
dec
loop
hlt
add
sub
add
mov
leave
push
inc
pop
test
inc
jbe
cmp
sub
pushf
jo
test
and
imul
fucomp
jo
les
icebp
sbb
push
rcll
je
cld
xor
sbb
nop
and
pop
lret
outsb
jl
je
mov
mov
jbe
fsubrs
fdiv
pop
or
int
das
xlat
clc
aam
pop
pop
sub
xor
and
xchg
mov
push
jns
aam
jno
adc
lods
inc
cmpsl
sub
subb
sbb
rol
push
xchg
ficoms
mov
cmp
adc
sbb
mov
icebp
or
hlt
push
std
andb
pop
and
mov
mov
stos
fisubrl
rcll
fmull
lds
or
mov
sub
popf
inc
or
jle
int
sub
cmp
call
addr16
fs
lods
arpl
mov
daa
sub
pop
xchg
lock
xchg
mov
cmp
loop
push
subb
xchg
imul
mov
popa
lods
pop
ja
and
xchg
movd
mov
push
jmp
cmp
dec
ret
pop
push
rorl
scas
int
movsb
ljmp
adc
add
mov
insb
stos
dec
test
sub
shrb
add
inc
inc
cld
push
add
ds
push
push
inc
fs
rcrl
jmp
mov
in
into
jbe
mov
cs
inc
mov
dec
xchg
and
pop
outsl
mov
xchg
imul
lock
les
adc
cs
repz
inc
shl
xor
jle
mov
add
inc
dec
loop
mov
lock
push
mov
pop
jg
jno
pop
jge
or
mov
arpl
cmpsl
mov
hlt
pop
imul
xor
mov
mov
push
xor
sbb
ret
push
inc
pop
xchg
xchg
dec
ds
xchg
mov
lods
dec
outsl
mov
and
outsl
jno
push
cli
mov
loopne
xchg
dec
mov
lds
push
loope
aam
enter
xchg
push
pop
jbe
mov
and
divb
cmp
and
xlat
int3
loopne
jp
mov
inc
xchg
bound
mov
outsb
ds
push
sub
fwait
mov
enter
push
popa
mov
aam
cmp
std
mov
xchg
std
pushf
adc
pushf
pop
dec
jg
xchg
and
or
sub
cld
xchg
xor
push
sbb
push
mov
push
xor
push
movsb
push
clc
mov
sbb
arpl
fnsave
int3
jge
xchg
inc
rcl
jl
imul
mov
mov
mov
mov
lods
pop
add
jns
and
inc
stc
ret
push
mov
sti
daa
push
push
sub
mov
add
cmpsl
js
cmp
stos
mov
fdivr
mulb
pop
sti
adc
inc
sub
mov
outsb
lds
dec
scas
xchg
loop
jecxz
fs
sub
lea
or
sbb
pushf
cmpsl
hlt
fbld
cmc
ljmp
cmp
xchg
cmc
test
frstor
les
shrb
add
insb
leave
int
mov
lods
jmp
and
out
pop
pop
cwtl
or
scas
cmp
xchg
add
push
xor
inc
repnz
fists
scas
add
push
jnp
pop
aaa
ret
sbb
xor
pop
cli
movsl
push
mov
jb
es
fstpt
sbbb
insb
stos
in
insb
add
rorb
sarl
fldcw
out
mov
cli
lds
mov
rcl
jge
stos
inc
and
push
xchg
out
dec
mov
dec
mov
ret
inc
mov
popa
enter
out
sub
or
jno
or
mov
incl
in
xchg
pop
xor
pop
inc
insb
movsl
ljmp
cmc
or
lods
inc
jae
pop
and
shlb
outsl
pusha
ret
xor
sbb
fsubr
dec
mov
pop
dec
jge
fstpt
or
call
mov
cwtl
fs
push
in
orl
dec
push
mov
aas
mov
dec
dec
outsl
sub
aam
into
pop
inc
pop
gs
xchg
jns
int
out
jbe
imul
jp
mov
neg
je
dec
mov
and
push
in
add
shlb
mov
cmp
idivb
shl
hlt
inc
dec
aam
loopne
pusha
sbb
aaa
sub
adc
sub
rcrb
dec
lcall
lret
fnstsw
out
jge
std
cltd
icebp
pop
fiadds
fld
in
test
cld
lods
jmp
stos
in
jb
push
dec
aaa
repz
test
xchg
fdivrs
dec
or
push
jle
aas
xor
dec
add
xor
nop
insb
sbb
orb
xor
ja
sbb
xchg
add
lods
adc
adc
jns
cmp
lods
pop
test
xlat
push
das
testb
or
xor
nop
fbstp
aaa
out
xchg
sahf
cld
xchg
xchg
repz
ds
out
push
outsl
sub
fldt
stos
or
adc
mov
test
lahf
mov
push
dec
mov
ret
aad
fldt
mov
ss
lock
in
dec
cltd
sub
nop
into
loope
and
push
repnz
cmp
out
in
xor
lcall
aaa
pop
xor
push
pop
pcmpeqb
into
mov
lahf
push
sbb
xor
jno
insb
in
mov
push
inc
lret
push
dec
nop
std
add
sbb
adc
dec
sbb
dec
and
jo
or
lea
mov
or
pushf
or
jmp
sbb
or
in
pushf
fiadds
xchg
data16
je
sbb
aam
jae
pop
mov
nop
leave
jp
data16
push
cmpb
add
xor
jno
pop
cmp
xchg
mov
add
int3
adc
add
fimuls
mov
xor
adc
aaa
xchg
sub
inc
leave
xor
xchg
mov
jno
popf
ficompl
lahf
jge
pop
fcomps
fs
fbld
lea
push
xor
add
push
repnz
pop
aas
dec
xor
xor
std
movsl
add
inc
jnp
dec
lods
outsb
daa
xlat
ret
mov
lods
jmp
mov
sub
je
add
or
movsb
inc
enter
pop
scas
push
inc
int3
add
test
push
inc
repz
jg
push
push
insl
inc
add
dec
es
out
push
xchg
cmp
dec
xor
mov
mov
icebp
adc
jnp
push
shlb
mov
mov
xorl
aam
rcll
pusha
pop
movsb
out
gs
jg
stos
stos
inc
fwait
lahf
inc
in
cmp
fsubl
movsl
pop
repnz
test
icebp
cmp
inc
pop
outsb
jmp
arpl
rcrb
nop
ror
inc
data16
add
jge
test
into
mov
fcmovnu
xor
incl
dec
ja
pop
xor
movsb
int3
pusha
adc
push
ljmp
jmp
xchg
xlat
pop
inc
lock
stos
inc
adc
mov
jmp
push
sub
lret
adc
add
jb
push
addb
jo
xor
sbb
out
aaa
pop
pop
out
in
hlt
mov
out
mov
popf
adc
push
xor
test
ss
popa
in
cmpsl
arpl
sbb
mov
and
xchg
xor
xchg
lcall
enter
hlt
std
addb
test
mov
xchg
ljmp
insb
sub
xchg
sub
jb
test
imul
scas
or
int3
rcrl
scas
jb
jp
dec
outsl
inc
shll
xor
fs
add
push
pop
gs
xchg
lds
subb
rclb
aas
or
jno
cmp
sbb
and
and
repz
or
inc
das
shl
xorb
mov
dec
mov
mov
das
jecxz
insb
sbb
ljmp
lods
lods
add
jae
adc
fwait
lods
arpl
fidivrs
xchg
mov
cmp
test
mov
cmpsb
cld
aas
and
xor
aas
adc
addr16
bound
mov
and
sub
sub
cmc
mov
add
pop
out
popa
movsl
aaa
fcmove
sub
into
loopne
outsl
in
flds
sbb
adc
sbb
nop
je
inc
cmc
shrb
rorl
repnz
pop
xchg
fidivl
sub
push
jecxz
in
addr16
lret
subb
rcrl
or
jmp
jo
sub
imul
into
mov
sahf
lret
mov
cmp
xlat
test
and
repz
into
gs
stos
and
or
ds
addr16
mov
sub
jle
pop
scas
adc
adc
or
sbb
icebp
adc
popf
jg
cmpsl
jg
fwait
mov
sbb
jnp
and
or
es
pop
jae
jp
imul
mov
mov
jbe
sbb
shr
xor
fucomp
roll
push
clc
imul
mov
or
mov
pop
push
xchg
sbb
push
xlat
popa
or
sub
loope
xor
mov
add
add
and
inc
popa
stos
and
sbb
scas
mov
mov
stos
data16
ret
js
arpl
cltd
xchg
test
jg
lret
xlat
add
mov
leave
inc
shl
jns
call
add
add
cs
cmp
mov
scas
and
stos
sbb
adc
imul
test
fs
loopne
inc
sbb
addr16
into
pop
pop
je
cmp
je
imul
jp
gs
jg
jle
dec
sub
lret
movsb
add
lcall
sahf
out
insl
lss
push
push
pushf
mov
sbb
mov
dec
or
push
mov
jg
imul
lds
sbb
adc
pushf
inc
pop
in
push
lret
xchg
dec
rorb
xlat
test
mov
leave
call
or
and
mov
andb
push
movsb
testb
cmpl
popf
sbb
enter
loop
aam
or
adc
inc
cmpsb
or
adc
in
aam
push
repnz
mov
dec
sub
insl
mov
fmul
and
inc
mov
sti
es
sbb
xchg
popa
pop
cmpsl
or
and
mov
lret
adc
pop
adc
xchg
pop
popf
add
push
daa
cmp
mov
popf
popf
xchg
sahf
fwait
movsb
pop
dec
xor
xchg
pushw
pop
into
cli
add
push
sbb
pop
loop
xchg
pop
les
jnp
outsb
xor
lds
sahf
testb
push
pop
fwait
lcall
sbb
rcrb
ja
les
cmp
popf
jne
xor
sbb
out
push
shlb
addr16
or
out
lds
xchg
mov
imul
push
add
xor
lea
stos
jne
or
lret
pop
xor
and
rcll
or
call
mov
xchg
inc
mov
inc
out
gs
ja
adc
cmp
pushf
aas
mov
test
or
test
dec
push
mov
ds
xor
std
mov
jno
cmp
lea
outsb
rclb
aam
push
mov
dec
mov
aad
sbb
add
cmpsl
ret
or
loopne
dec
push
movsl
cmpb
lcall
pusha
xchg
popa
bound
xchg
sub
mov
mov
fwait
dec
mov
xchg
xchg
mov
aaa
pop
test
lods
andl
or
xchg
cld
andb
or
fwait
add
jg
add
arpl
sub
mov
je
xchg
sbb
pop
inc
fldl
jp
jmp
fs
loopne
inc
and
sub
cmpsb
popf
dec
bound
jg
adc
sub
mov
sbb
movsb
or
pop
inc
out
mov
pushf
scas
dec
imul
loope
xchg
sbb
xchg
dec
cmpsb
cmp
scas
lds
add
les
or
mov
or
or
mov
jmp
xchg
inc
mov
mov
and
add
fisttps
lea
ljmp
in
int3
pop
repz
pop
fcoms
ss
in
jmp
arpl
rcrl
xor
stos
pop
inc
jmp
incl
and
into
out
test
xor
sbb
mov
add
mov
jp
cmp
fsubrs
pop
mov
xor
in
in
aad
sahf
xchg
rorb
leave
and
push
cmp
jb
popa
andl
cmpsl
push
in
cmp
adc
cmc
sbb
loope
out
ja
insb
jbe
ret
xchg
xchg
aad
dec
sahf
cld
xchg
mov
notb
mov
mov
jb
or
push
xor
stc
and
test
mov
or
aam
lret
cmp
cld
std
ret
pop
shrb
fcompl
push
mov
mov
jle
pop
popf
xor
sbb
add
or
and
test
pop
aaa
cmpsl
mov
in
mov
jle
and
lret
add
outsb
nop
push
pop
aaa
xchg
loop
jo
aas
out
popa
lods
jp
xchg
add
add
ror
mov
lods
stc
mov
dec
daa
push
pop
test
stos
xor
int3
loopne
cmp
out
ret
mov
cmp
push
andb
sbb
cmp
test
ljmp
shlb
cmp
bound
lea
or
inc
xor
push
push
jae
sbb
cmp
or
push
pop
pop
and
or
notb
or
stos
mov
icebp
adc
pop
dec
and
jle
fadd
cmpsl
and
adc
mov
mov
sub
cmp
cmp
into
call
xlat
lock
fnstenv
mov
dec
scas
jl
mov
sub
jbe
rcrb
lret
loop
into
scas
pop
fsubrp
out
sub
rol
dec
clc
repz
mov
push
jno
add
inc
sbb
add
cmp
inc
in
scas
ret
jmp
scas
jecxz
sub
cmp
mov
lahf
add
adc
mov
mov
leave
pusha
inc
jge
mov
inc
popa
stos
mov
aaa
ret
mov
out
xchg
cmp
pop
pop
push
stos
test
lret
rcrl
add
cs
push
jnp
inc
pop
pushw
sbbb
pop
outsb
in
mov
ja
mov
jo
test
fwait
push
bound
mov
data16
push
sub
cmp
jno
jl
aas
adc
or
jb
dec
pushfw
scas
xchg
mov
push
movsl
loop
dec
pop
mov
jmp
jae
imul
subl
gs
add
imul
sbb
out
aad
mov
add
testb
mov
mov
andl
xchg
inc
inc
repnz
adc
push
cmp
jecxz
dec
lcall
fs
add
jae
lret
nop
cmpsl
push
push
mov
pop
cmpsb
jg
fs
pop
push
xchg
ret
jle
stc
push
lods
mov
mov
mov
adc
mov
js
sbbl
dec
lcall
pop
in
adcb
cmpsb
cmp
into
sub
outsb
lcall
push
adc
push
xor
cs
or
sbb
adc
sub
xchg
mov
outsb
test
dec
xchg
sbb
or
iret
data16
ja
call
jge
lret
xchg
jg
aaa
inc
pop
clc
pusha
mov
push
std
inc
daa
test
insb
cs
push
fcompp
movsl
loope
cltd
lcall
pop
fsubrl
mov
les
or
dec
scas
mov
jmp
mov
aad
push
push
shl
xchg
hlt
shr
and
lea
pop
pop
mov
inc
subb
inc
gs
into
insb
xor
jp
test
int3
ja
incb
mov
int3
mul
fldcw
negl
add
sub
stos
jecxz
or
add
mov
jno
and
mov
ss
jae
xor
ds
lret
jb
hlt
mov
adc
dec
push
push
adc
inc
lods
mov
scas
pop
cmp
inc
jle
sbb
dec
mov
pop
sub
loopne
push
push
push
loop
scas
repnz
dec
pop
mov
mov
cmp
or
int
or
push
scas
in
and
call
inc
xchg
sub
push
sbb
cmp
icebp
jmp
cmp
add
pop
adc
cmp
outsl
add
sbb
out
mov
or
dec
aas
outsb
sbbb
lahf
xor
cmc
jl
daa
pusha
sub
push
xchg
mov
dec
adc
lea
fmuls
mov
xchg
and
rcll
leave
sub
into
pusha
test
inc
dec
or
jmp
jns
xchg
out
mov
aas
addl
add
imull
xor
jne
out
xchg
xor
sub
fwait
jne
jl,pn
jno
sub
xor
scas
data16
jo
or
stos
jns
cmpsl
or
adc
push
cmc
in
stos
jg
mov
lcall
adc
pop
rorl
push
fs
sarb
mov
push
out
cmp
add
movsb
popl
and
adc
mov
mov
sub
push
xor
inc
arpl
jl
gs
adc
clc
cmp
mov
outsb
insl
adc
pop
adcl
aad
xchg
jo
ret
xchg
sub
cmpsl
or
dec
negl
and
sbb
outsb
movsb
repz
wbinvd
add
ja
out
xchg
dec
dec
and
movsb
cmp
jge
inc
sub
dec
pop
ret
push
jmp
popa
lcall
or
call
mov
and
add
xchg
pop
cmpsb
test
repnz
pop
and
and
and
addr16
xchg
sub
rcll
sub
sub
in
gs
jb
aam
xor
jge
popf
adcl
pop
sbb
int3
leave
jae
std
mov
les
ret
or
mov
aas
loopne
mov
or
loope
sub
hlt
mov
mov
inc
jne
jnp
jge
or
movsl
shr
gs
inc
cltd
mov
add
int
cs
cmp
les
mov
xchg
inc
inc
ret
mov
push
daa
sbb
call
test
call
xor
and
imul
mov
jno
sbb
in
and
je
enter
sub
mov
ret
and
sahf
dec
leave
mov
inc
or
xor
icebp
sbb
or
or
adcb
arpl
iret
xchg
ss
stos
mov
les
sbb
inc
lods
dec
push
out
pop
out
cmpsb
mov
aam
dec
xchg
pop
shrl
movsl
faddp
pop
mov
xor
pop
jle
cs
movsb
and
mov
push
iret
jle
add
pushf
test
pushf
adc
mov
das
inc
jae
jp
and
inc
cmp
loopne
insl
jge
add
test
adc
test
scas
inc
sbb
int
mov
fcomi
je
les
pop
adc
mov
popf
or
in
or
cmpsb
fcomps
xor
dec
ret
push
loopne
cmp
icebp
push
nop
mov
aam
lret
popf
shl
adc
dec
jg
sti
push
jae
xchg
dec
push
sub
popf
call
sub
sbb
lahf
jmp
cmc
cmp
or
adc
cmp
xchg
dec
daa
test
sbb
pop
jae
ja
push
popa
in
pop
stc
int3
dec
sti
cmpsb
sti
jle
jecxz
cmp
negl
xchg
sahf
jns
cmp
int3
jp
adcl
fnstcw
push
nop
shrl
nop
rcl
mov
pop
dec
jl
dec
divb
stos
fnstenv
pop
add
xchg
lock
clc
push
cltd
pop
pop
jae
les
cmp
stos
push
jno
inc
inc
in
popf
js
adc
jae
loop
int
daa
test
je
lods
outsl
adc
xor
lds
sbb
hlt
dec
sbb
andl
adc
pop
scas
dec
cli
push
jg
ret
jl
and
lods
add
mov
lret
sbb
adc
into
inc
sbb
dec
es
jno
icebp
cli
mov
pop
cmpsb
shll
out
sbb
mov
xchg
mov
xor
fldcw
ljmp
inc
fisttpll
roll
pusha
dec
xchg
sub
scas
ds
mov
test
sbb
push
jge
mov
std
sarl
mov
fsubl
jns
mov
repz
mov
negb
mov
mov
decl
mov
stc
and
or
repnz
fwait
xor
fldl
mov
loop
in
push
dec
pop
mov
mov
and
ljmp
icebp
jno
es
fnstcw
pop
push
inc
data16
push
mov
sub
in
data16
ss
test
rorb
xlat
data16
push
xchg
lcall
in
add
mov
pop
fsubrp
or
stc
nop
pop
cs
in
jne
pop
xor
rolb
pop
push
jne
push
cmpsl
pop
jbe
int
fucomp
lret
or
adc
aad
in
mov
cmc
jo
cmpsl
nop
cmp
rorl
jns
lea
sbb
out
or
add
lds
mov
push
in
push
pop
adc
fadd
lcall
cwtl
or
add
aad
mov
adc
adc
out
xchg
push
mov
and
neg
int
fldcw
adcl
iret
xchg
mov
push
fidivrs
addl
and
or
push
lea
aas
std
lods
mov
adc
shlb
out
bound
into
imul
mov
xchg
divl
dec
scas
mov
mov
dec
cmc
push
mov
mov
lahf
push
pushf
clc
add
push
mov
xchg
sub
repz
and
dec
arpl
movsb
sub
sbbb
cmp
enter
repz
jle
mov
push
pop
outsl
push
in
dec
sbb
rcrb
imul
pop
cmp
imul
lock
and
xchg
pop
push
lds
outsb
loope
inc
jecxz
xor
dec
mov
pop
loopne
jge
cmc
push
fnstsw
cmpsl
xchg
sub
push
test
dec
shrb
mov
repz
jl
push
insl
sub
adc
adc
xor
jecxz
shl
out
fsubrl
mov
mov
dec
jecxz
repnz
iret
fimuls
cld
push
cs
sbb
call
loop
mov
cli
mov
cmp
mov
pop
add
inc
fstl
pop
adc
xchg
loope
aad
mov
int3
imul
popl
cmpl
cs
daa
lcall
popa
js
pop
xor
add
adc
adc
dec
iret
insb
mov
sub
test
xor
and
cmc
push
inc
push
pop
ja
lgs
mov
cmpsb
xchg
lods
mov
popa
fdivl
je
sub
xor
lret
xchg
sahf
loopne
jb
inc
lds
movl
or
cld
adc
test
daa
or
js
xchg
int
xor
aas
push
shlb
mov
popa
push
push
mov
loop
dec
mov
sysret
jg
mov
and
out
adc
add
inc
dec
jmp
jl
pop
lock
aam
in
and
jne
adc
mov
test
inc
ljmp
inc
mov
mov
jmp
push
ljmp
jb
mov
add
xchg
add
rep
and
imul
bound
lods
inc
imull
dec
lcall
scas
cmp
sub
push
leave
ret
fisubrl
icebp
adc
push
xor
xor
scas
dec
fs
std
iret
ss
mov
xlat
cmc
es
subb
cmp
sarl
adc
mov
and
sub
sahf
xchg
mov
mov
sbb
dec
jo
and
dec
in
mov
sbb
fadd
jnp
mov
inc
adc
int3
mov
sbb
ret
outsl
daa
jns
outsb
out
sbbl
out
jp
jo
or
lret
fmulp
push
xor
sbb
xchg
xor
filds
pop
int
aad
inc
ret
jne
out
inc
adcb
xor
inc
mov
fisubs
movsl
call
add
sub
in
outsl
shr
and
enter
fnstcw
mov
jno
sbb
js
push
mov
out
dec
dec
mov
insb
out
lcall
add
cmp
out
xchg
pop
movsb
in
sbb
jns
push
mov
jle
cmp
ja
adcl
jle
insb
out
push
cmpsb
stos
rclb
shlb
testb
push
aas
mov
cmpsb
div
insb
movsb
push
les
xrelease
push
ljmp
jae
insb
mov
mov
push
ja
orl
dec
outsl
inc
dec
dec
adc
enter
cmp
int
decb
mov
mov
sub
push
loop
sbb
addr16
cmp
or
enter
ret
adc
mov
gs
aam
ja
aas
cmpsl
and
mov
mov
jle
push
iret
movl
and
mov
xchg
xor
jns
mov
xchg
mov
jne
sub
sub
add
push
jnp
aam
pop
sbb
subb
or
int3
or
dec
add
sub
mov
dec
scas
adc
daa
outsl
mov
pop
mov
mov
mov
add
add
push
sbb
jne
mov
jnp
aas
pop
mov
jp
dec
inc
cltd
js
cwtl
dec
notb
xchg
into
mov
mov
xchg
xor
cmp
pop
push
sub
sti
xchg
addps
jo
or
jns
add
inc
adc
jl
in
inc
loop
pushf
fucomip
add
mov
sbb
stos
add
outsl
test
insl
adc
push
insb
dec
and
and
add
nop
addb
xchg
lcall
mov
add
leave
adc
mov
in
fcoml
cmp
out
frstors
push
inc
inc
add
sahf
inc
jb
cmpsb
jecxz
call
fsubr
jge
icebp
daa
lcall
in
ret
int3
arpl
testb
mov
ljmp
push
dec
arpl
test
shr
call
inc
test
dec
je
fwait
xchg
adc
dec
out
cmp
cltd
mov
mov
rcl
push
jns
pop
push
je
movsb
pop
add
mov
aas
push
fucomp
inc
dec
and
jp
outsl
ds
cmp
xchg
gs
aam
jae
pop
shrl
cli
inc
popa
repnz
xlat
pop
pushf
or
shlb
fnsave
adc
mov
or
push
jb
dec
sbb
aaa
loop
imul
xor
pop
jp
push
pop
mov
adc
aas
ljmp
and
mov
mov
stc
fdivrs
loopne
xchg
mov
adcl
inc
xchg
out
cld
jge
stos
mov
push
fisubrl
or
out
push
sti
push
clc
xor
dec
dec
push
inc
sub
scas
xchg
aam
fimull
in
cmp
cmpsl
fcoml
ss
imul
and
adc
in
mov
sbb
loopne
push
hlt
add
mov
loop
and
icebp
or
jp
and
mov
add
pop
or
sbb
mov
repz
inc
fwait
repz
jg
xchg
or
repz
mov
jb
std
sub
sub
or
test
int
addr16
pop
inc
lock
adc
cmpsl
lret
dec
sub
or
data16
sahf
lea
mov
or
nop
inc
mov
icebp
int
add
aad
test
xchg
adc
clc
sub
or
xchg
sub
push
jp
sahf
push
sti
adc
and
pop
push
xor
cmp
call
pop
sub
add
sbb
in
mov
pop
push
rcrb
push
fnstcw
pop
mov
push
cmp
scas
xlat
cmp
inc
jecxz
scas
sahf
inc
clc
ljmp
ds
daa
out
je
stc
mov
sub
dec
cli
negb
fsubl
xorl
stc
or
jge
mov
popa
iret
sbb
xor
pop
vpsrlq
lds
and
scas
sub
jns
leave
inc
sub
push
pop
push
push
cmpps
das
adc
jo
in
cmpsb
xchg
pop
cs
repnz
jo
xor
push
jp
and
lret
mov
mov
movsl
loope
add
adc
out
xchg
fsts
and
pop
fsubrl
sub
fwait
pop
icebp
movsl
shl
notb
jecxz
popf
push
pushf
test
dec
arpl
xchg
iret
mov
fldt
repnz
sti
inc
xlat
cs
adc
or
mov
add
mov
xchg
push
pop
or
popf
mov
xchg
into
repnz
jle
or
repnz
jle
pop
out
dec
lahf
arpl
mov
scas
js
sahf
movsl
sti
ret
xchg
into
jb
dec
push
fdivrl
scas
adc
pop
inc
shrb
pop
or
cmc
paddsb
mov
push
push
fists
dec
scas
fstl
jo
inc
dec
dec
bound
mov
inc
inc
dec
lea
inc
adc
add
mov
lret
mov
fistpll
in
leave
xor
out
and
rolb
push
test
jns
adc
lret
dec
mov
cli
mov
out
rcrl
jl
mov
or
loop
loopne
xor
fucomi
cli
or
fcompl
cld
je
pop
xchg
pop
lret
cmp
pop
cmp
pop
cmp
add
xchg
cmp
mov
or
fisubrl
mov
pop
jg
cld
rorl
xchg
add
add
divl
loope
cmp
cmp
mov
addl
das
push
stos
cmp
dec
pop
in
insl
and
std
xor
xor
adc
sbb
adc
xchg
shl
loope
xlat
icebp
cld
adc
mov
sti
movsb
lds
mov
sub
mov
sub
jb
mov
lods
inc
mov
lret
or
lret
orb
lahf
adc
addr16
popa
mov
inc
aam
cmpsl
out
std
sbb
mov
jge
mov
jge
scas
push
mov
pop
in
xchg
and
lret
add
iret
gs
mov
push
jbe
or
imul
int
dec
filds
mov
loope
data16
cltd
add
jo
loop
and
ljmp
add
push
mov
ljmp
outsb
sbb
ljmp
mov
test
mov
pop
push
sub
or
cmp
shrb
adc
push
dec
xchg
xor
int3
jne
loop
fwait
popa
in
dec
sbb
or
jo
adc
mov
shll
pop
pop
jbe
inc
cld
sub
mov
push
fsubr
xor
into
cmp
repnz
push
shll
ret
hlt
xchg
pop
adc
lahf
jbe
pop
sub
xchg
xlat
aam
ljmp
inc
inc
repz
repnz
int3
mov
inc
fsubs
or
adc
add
psllq
xor
scas
and
xor
push
and
jp
stos
mov
rorb
and
sbb
mov
test
cmpsl
mov
rcr
jmp
pop
imull
cmp
sub
push
imul
inc
ja
xor
loope
mov
and
rcrl
mov
inc
inc
sub
and
sar
inc
push
test
xor
sbb
rcll
outsl
push
push
call
lea
jle
ja
das
stos
jl
in
pop
dec
ret
data16
repz
mov
mov
fidivl
hlt
dec
outsl
aam
sub
pop
sub
clc
pop
jge
rcrb
xor
mov
mov
test
push
cwtl
dec
clc
cld
inc
inc
lods
xchg
les
stos
testl
push
aad
icebp
mov
xchg
sbb
push
leave
enter
jl
dec
jmp
aam
out
test
cmp
mov
ret
xor
xchg
xchg
adc
aam
and
mov
xchg
jb
out
fcomps
adc
push
mov
or
repnz
ror
loop
fdivr
xor
stos
push
xor
adc
out
mov
lahf
mov
adc
shl
sub
aas
mov
mov
cmpsb
inc
sbb
dec
out
rcrb
dec
insl
cld
push
aas
xchg
in
pop
leave
xor
push
dec
pop
mov
adc
jecxz
push
jae
pop
jb
xchg
and
pop
cmp
cmp
jmp
cmp
push
dec
xchg
sub
das
pop
jl
int3
xchg
pop
dec
dec
mov
push
pushf
cmc
adc
int
push
xchg
loop
push
cmpsb
popf
pop
sub
inc
or
push
inc
imul
addr16
fldcw
pop
dec
lea
fisubs
inc
pop
fisttps
gs
les
inc
call
jne
int3
mov
out
or
in
aas
pop
adc
pop
adc
mov
cmp
aam
lcall
and
or
test
ficomps
or
insb
jl
add
pop
or
jns
xchg
in
movsl
inc
xchg
sbb
jae
aad
mov
ror
movsb
pop
mov
imul
sbb
push
stc
stc
adc
cli
sbb
sbb
das
jo
lret
aaa
push
adc
xchg
in
xchg
jp
cmp
inc
sbb
aaa
js
insl
ljmp
mov
xchg
or
fistpll
inc
addl
xchg
enter
popa
int3
inc
call
loop
xchg
popl
mov
xor
jnp
mov
and
fbld
adc
adc
adc
mov
out
or
xor
repz
xchg
xchg
pop
call
sub
outsl
push
std
dec
out
jle
pop
mov
fsubrl
and
mov
pop
mov
repz
mov
rol
push
inc
jae
dec
sub
les
xchg
and
das
int3
fcomip
xchg
idivb
xchg
cmpsb
bound
cltd
mov
lcall
lods
push
dec
lahf
leave
jb
mov
aam
sbb
mov
repnz
inc
repnz
js
fwait
sbb
movhlps
jle
scas
push
pop
and
jl
jecxz
adc
dec
jns
pop
push
inc
daa
sbb
fisubs
popf
call
cmp
sbb
dec
adc
xchg
loop
mov
aaa
test
pop
push
mov
jae
sbb
popf
bound
fdivrl
sbb
subl
andps
mov
ljmp
idivb
je
in
int
xor
cmp
mov
repz
loope
jns
in
scas
fs
jns
mov
sarb
adc
and
cmp
pop
hlt
sbb
inc
hlt
out
mov
rclb
aas
outsb
jmp
cmpsl
xor
mov
push
sub
jle
jp
jle
pop
sub
mov
fstl
dec
fists
adcb
inc
data16
cwtl
movsl
sub
mov
xchg
out
icebp
xor
adc
xor
cwtl
dec
add
stc
shrb
xor
fs
ret
xor
jecxz
pop
flds
or
sbb
sahf
mov
aas
ret
jp
dec
lcall
clc
aaa
cmp
jg
int
gs
lret
data16
mov
out
dec
lods
adc
and
aaa
and
inc
push
testb
inc
pop
xchg
mov
out
inc
push
mov
mov
mov
add
mov
fchs
mov
add
push
inc
xor
push
fldl
mov
push
in
mov
fucomip
ss
xchg
mov
into
fcoml
inc
adc
push
pop
decl
sbb
inc
gs
xchg
test
jne
js
and
adc
or
dec
mov
pop
dec
lcall
and
bound
push
mull
pushl
popf
pusha
nop
mov
call
dec
iret
shlb
xor
jb
cmc
push
and
pop
inc
out
xor
mov
mov
and
pop
test
loopne
pop
ljmp
inc
enter
cmpsb
adc
push
pop
das
sahf
pop
xchg
xchg
jl
out
sbb
mov
lahf
add
mov
mov
cs
pop
lock
mov
jle
shrl
push
stos
pusha
jle
popf
cmp
pop
jno
pop
into
addl
sahf
and
jmp
mov
dec
sbb
inc
lods
les
sbb
les
imulb
out
popa
xor
movsb
ss
popf
pop
pop
daa
pop
lret
outsl
jp
sarl
sbb
daa
push
mov
nop
cmc
push
inc
inc
cmc
sbb
in
or
bound
ret
mov
add
and
lods
push
daa
sbbb
mov
push
adc
gs
repz
fisttpll
mov
imul
jmp
or
clc
and
ds
sbb
int3
push
jmp
dec
das
mov
cmc
sbb
fisubs
mov
mov
es
popf
or
mov
push
ljmp
imul
call
inc
aaa
outsl
jnp
fdivl
push
mov
adc
ss
add
repz
outsl
add
ss
fimull
stos
aaa
push
sbb
push
pop
test
xor
sub
js
dec
jle
in
cmp
add
das
inc
jae
je
jnp
or
or
mov
xor
outsl
push
inc
dec
add
inc
sbb
pop
pop
mov
inc
ja
inc
jbe
mov
stos
ficoml
jne
icebp
dec
mov
loope
addr16
push
fwait
movsl
jl
push
pop
add
xor
mov
inc
inc
and
fbstp
sub
xorl
or
or
sub
jg
or
mov
scas
testl
aaa
inc
inc
cmp
inc
fisttpll
call
adc
lret
sbb
clc
pushf
repz
out
ljmp
dec
loopne
ljmp
icebp
inc
iret
cmp
das
mov
mov
popa
repz
mov
cmpsb
hlt
aaa
dec
shrb
xchg
sub
or
push
jl
xchg
xor
paddb
mov
and
arpl
add
xchg
pop
mov
or
sbbb
ret
jnp
das
aam
adc
in
sbb
inc
xchg
jnp
sahf
and
ljmp
xchg
loope
adc
divl
loopne
jmp
jge
adc
cwtl
imul
cwtl
and
mov
pop
jle
mov
dec
outsb
sub
sbbb
adc
imul
pop
jno
int3
into
enter
lods
loopne
adc
aaa
repz
adc
pop
mov
push
lea
into
pop
adc
pop
popa
lds
adc
aaa
mov
xchg
mov
ficompl
pop
cld
pop
sub
sub
mov
fs
or
mov
xor
das
loope
pusha
mov
or
pop
cmpsl
out
std
mov
repz
imul
mov
push
jbe
cmpsl
mov
loopne
xchg
fwait
pop
sub
xchg
sbb
das
push
popa
jle
pop
lcall
test
inc
es
dec
xlat
lret
pop
sbb
roll
mov
mov
inc
rorb
aam
xlat
pop
in
mov
rolb
out
subl
or
adc
in
and
bound
imul
aam
jp
mov
mov
dec
or
mov
outsl
rcll
fbstp
cli
dec
in
out
test
jecxz
or
push
sbb
jge
dec
and
or
and
mov
lret
mov
movsl
and
or
cli
sbb
lea
data16
inc
out
cmp
adc
icebp
adc
scas
out
adc
rcl
mov
stc
fnstenv
hlt
imul
sub
insl
pmulhw
stc
dec
sbb
scas
dec
outsb
lret
call
and
jb
jnp
fwait
mov
shlb
sahf
lcall
fst
out
add
xor
xchg
adc
push
jno
pop
scas
push
cmp
test
ret
mov
hlt
or
cmp
imul
gs
ficompl
or
xchg
div
stos
dec
pop
leave
sbb
popa
orb
dec
and
dec
out
repnz
sbb
stos
test
jge
fsubrp
loopne
int3
sti
dec
in
pop
rorl
inc
lock
inc
les
cmp
ret
movsb
xchg
pop
fbstp
xlat
push
jmp
in
mov
or
cltd
or
dec
xor
mov
nop
int
inc
push
repnz
mov
xchg
sub
or
sub
sbb
mov
insb
fwait
dec
mov
in
pop
push
imul
lahf
fsubr
sub
inc
mov
push
sub
xchg
cmpsb
ljmp
ja
lds
xor
xor
clc
and
vpcmpeqd
mov
nop
sti
dec
jnp
rorb
xchg
push
sub
popa
pop
adc
dec
jp
aad
xchg
mov
out
jp
xorl
cmp
lods
mov
shll
pop
xchg
pop
push
loope
pop
loop
pop
repz
push
je
jns
call
and
jns
fwait
xor
xchg
mov
imul
test
and
dec
out
and
pop
fstps
ds
mov
mull
leave
cli
loopne
aaa
ljmp
fs
jbe
mov
rolb
push
jecxz
out
push
add
popf
mov
or
sub
mov
and
xchg
in
adc
cmp
xchg
push
shrl
test
loope
xlat
sbb
or
out
fwait
cli
cmp
sahf
xor
icebp
add
rcll
mov
rorl
rolb
mov
lea
lret
cs
fmul
mov
mov
and
dec
loope
sub
repnz
fcmovnu
scas
add
dec
xor
popa
xchg
popa
sub
iret
movl
outsb
pop
ret
fcomip
adc
cmpsb
jae
out
movsb
fdivrl
add
inc
scas
gs
stos
lods
test
outsb
or
lcall
jl
mov
fcomip
mov
jle
xchg
data16
aas
int
dec
mov
jns
lahf
sub
dec
push
lret
mull
and
sbb
lret
rorl
push
xor
add
push
cmpsl
js
push
fbstp
adc
sti
jb
mov
test
xchg
push
mov
jmp
dec
add
mov
dec
and
inc
int
xchg
adc
int3
push
and
push
push
jnp
xchg
xor
mov
lock
sti
add
sbbb
jl
pop
dec
lahf
cli
push
inc
imul
mov
rclb
push
outsl
test
scas
jb
xor
add
sbb
mov
cmp
movsl
xchg
push
mov
cmp
fsubrp
inc
pop
jl
aas
and
mov
xor
cmpl
sub
push
mov
jo
loopne,pt
insl
cld
scas
scas
jnp
xor
das
push
pop
fdivl
push
std
pushf
inc
test
adc
mov
loop
subb
sbb
pop
iret
cwtl
out
inc
inc
hlt
mov
scas
cs
pusha
pushf
inc
adc
inc
cwtl
lods
mov
xchg
or
sarb
xlat
mov
pop
jno
xor
inc
cld
ja
pop
mov
stos
imul
das
shlb
sbb
imul
jl
lds
push
push
jns
jno
sub
sbbl
push
and
test
dec
lock
mov
xor
sahf
mov
sub
mov
or
sub
pushf
lock
jnp
notb
sarb
sti
notb
stos
smsw
mov
push
xlat
inc
stc
fdivr
and
lret
cwtl
imul
das
adc
stc
sub
nop
mov
in
lret
clc
clc
jno
in
jns
shl
inc
push
mov
dec
loopne
lret
inc
sarb
push
jg
pop
xchg
lock
add
xchg
add
popa
mov
pop
test
lret
rcl
or
stos
out
stos
sub
fmull
jbe
adc
lret
adc
adc
xchg
push
adc
and
push
shl
inc
mov
loop
xlat
cli
jle
js
mov
jl
inc
std
sahf
mov
dec
out
cmp
negb
fistpll
rcl
xor
jb
arpl
pop
stos
adc
pop
fnstsw
cmp
mov
rclb
pop
mov
mov
and
push
mov
aad
jmp
add
call
iret
push
rcrl
and
cmp
rolb
mov
push
push
sbb
adc
mov
adc
lret
or
jg
repnz
scas
cmp
pop
mov
or
in
out
adc
andb
rcll
fbstp
mov
or
inc
or
neg
sbb
push
leave
push
or
test
stc
leave
push
sbb
jge
stc
sub
sub
sbb
inc
cld
jnp
lahf
and
sub
cmpsl
jp
mov
std
mov
bound
lea
and
ret
shlb
repnz
das
scas
cwtl
daa
mov
inc
xchg
mov
sti
xor
test
test
xchg
mov
mov
cmc
lret
jmp
movsb
addr16
dec
mov
sbb
scas
arpl
in
push
popf
cmp
mov
mov
mov
rclb
dec
jmp
mov
insb
cmp
loopne
ror
fistl
imul
pushf
inc
imul
lock
leave
pusha
cmpl
mov
call
and
add
pop
test
loope
lret
add
stos
sbb
cmpl
mov
into
sub
add
mov
or
cmp
dec
stc
and
leave
xchg
xchg
aad
enter
and
push
pop
lret
lcall
lcall
stos
test
movl
rcrl
mov
idivb
movsl
add
pop
add
mov
dec
mov
mov
cltd
xor
repz
addl
and
push
dec
jmp
jg
sub
xchg
mov
addr16
add
movsb
js
push
rol
push
jl
int3
mov
mov
imul
outsl
ss
ret
outsl
xor
popf
mov
xchg
clc
jl
mov
repnz
pop
mov
push
lahf
test
or
shll
inc
jb
je
mov
adc
xchg
lret
out
jg
cwtl
insl
leave
inc
pop
push
add
jnp
clc
lock
sbbb
clc
add
mov
cmp
test
pop
cmc
popf
lds
fwait
inc
rorb
test
add
or
jmp
test
dec
shll
jmp
mov
test
xor
fldcw
or
popa
clc
push
in
add
outsl
loop
xchg
pop
adc
arpl
data16
cli
ljmp
cld
and
movsl
sub
sub
bound
mov
das
inc
mov
adc
pop
sbb
cmp
in
sub
inc
mov
js
scas
shll
and
mov
pop
ret
jbe
mov
mov
dec
movsb
mov
mov
cmp
gs
ret
inc
fs
in
inc
fcos
or
dec
rolb
insl
je
insl
and
shll
xor
xchg
or
adc
icebp
mov
repnz
aad
test
pop
andl
mov
dec
mov
jns
imul
decb
xor
repz
cmc
loopne
adc
sbb
fs
adc
push
jbe
jae
jne
fwait
inc
or
inc
fdivrs
stc
dec
adcl
sbb
sarl
dec
das
lods
scas
jb
lock
aaa
das
and
test
sbb
sbb
fcmovb
push
sbb
jns
cli
cmp
stc
adc
or
mov
sbbb
or
mov
and
fwait
or
ja
jns
scas
andb
add
mov
mov
jge
lock
aad
pop
or
scas
out
adc
push
out
cmc
iret
sahf
mov
iret
das
xor
and
lods
test
cmp
xchg
sbb
ja
push
pop
pop
imul
mov
mov
out
adc
cmp
outsb
push
ret
ret
orb
jae
movsb
adc
clc
cmp
pop
push
dec
pop
dec
xchg
inc
movsl
out
push
push
pusha
mov
mov
ja
es
andb
mov
pop
xor
xchg
gs
orl
jbe
sub
enter
sub
lret
outsb
out
bound
cmp
cmc
lods
xchg
add
cmp
or
repz
add
adc
mov
fbstp
shll
test
jmp
mov
test
movsb
test
data16
call
dec
lds
adc
or
mov
outsl
fstl
lock
push
nop
xor
leave
ss
imul
ljmp
sbb
inc
cmp
into
arpl
es
xchg
rolb
divl
shr
xor
fistps
gs
cmp
sahf
jbe
jecxz
repz
push
call
jo
outsl
jbe
adc
adc
jno
xor
in
mov
outsb
mov
jbe
dec
test
adc
push
mov
outsl
jge
adc
daa
cmp
jecxz
les
sbb
stos
out
mov
cli
bound
ror
ds
push
in
insl
test
dec
mov
mov
or
pop
mov
pop
leave
adc
lret
sub
ret
push
lea
mov
shlb
jbe
lock
dec
or
cmp
das
cmp
mov
leave
insb
mov
daa
xchg
cmp
add
fcmovu
gs
or
jae
pushw
aam
js
cld
cmc
adc
mov
add
ficoms
inc
dec
and
xchg
fwait
xor
test
dec
repz
insb
pusha
stc
xchg
lcall
jno
nop
push
xchg
xchg
mov
jb
test
xor
shl
je
clc
mov
cmp
push
jmp
jl
insl
setae
lds
sahf
out
dec
clc
mull
fidivrs
cmp
sbb
push
in
xchg
outsb
popf
xor
imul
fnsetpm(287
xor
sti
nop
stos
mov
adc
aaa
into
push
or
jge
fsubs
xchg
inc
fisttpll
cmc
inc
inc
test
jno
and
outsl
xchg
mov
je
pop
leave
push
mov
test
clc
sarl
ret
jg
popf
xchg
pop
out
add
pop
fcoms
repnz
jmp
shr
push
gs
xor
xchg
pushf
mov
les
pop
mov
jbe
scas
inc
les
leave
popa
out
int3
ficomps
pop
sbb
lds
push
cmpsl
xchg
mov
shlb
sbb
mov
mov
iret
roll
popl
lcall
clc
push
jns
xchg
incl
mov
mov
test
les
sub
lret
xor
fucom
test
cmp
mov
pop
out
sbb
and
sub
out
fstps
stos
mov
mov
insl
jle
fnstenv
mov
clc
outsb
lahf
push
jne
cmpsl
jg
in
sar
adc
enter
adc
loope
push
imul
pop
sahf
mov
cld
xchg
fsubs
pusha
add
call
bound
adc
mov
xor
push
shll
mov
and
pop
data16
dec
out
fnstcw
jb
mov
ljmp
notl
mov
lds
mov
mov
lahf
jg
xchg
stos
mov
xor
or
mov
sti
pop
into
in
imul
or
lret
and
pop
dec
xor
loopne
jmp
out
add
cmpl
mov
and
pop
mov
xchg
out
xchg
xchg
jo
in
loope
push
jmp
loop
in
icebp
adc
jne
loopne
jns
xor
pushf
repz
mov
into
mov
pop
fsub
mov
insb
out
mov
repz
pop
lock
rcrl
fisttpl
dec
cltd
insl
std
push
lahf
stc
inc
pop
sub
jb
xor
ficompl
and
test
dec
addl
cmc
popf
cmp
std
pop
sub
cmp
xor
lret
fs
xor
hlt
mov
pusha
mov
or
mov
pop
loopne
scas
dec
int3
xor
arpl
mov
jns
mov
loop
rcrl
repnz
gs
sarb
je
mov
mov
or
mov
xchg
test
lcall
loope
adc
movsb
push
adc
leave
dec
lds
ud2
xchg
lahf
negl
jg
pushf
mov
loopne
and
push
sahf
insl
aad
jge
dec
lcall
mov
mov
cmp
mov
push
mov
or
pop
jnp
add
add
push
in
jle
mov
icebp
cmp
adc
int
push
adc
jbe
mov
scas
cmpsb
mov
sbb
out
lds
icebp
xchg
push
pop
cmp
dec
push
std
rcl
pop
pop
mov
dec
jo
or
xchg
lea
adc
pop
cmp
lock
loop
cmp
cmp
jle
dec
mov
dec
fcom
lret
mov
outsl
add
cmp
clc
daa
insl
call
out
popf
fs
movsb
cmp
mov
out
call
mov
iret
lahf
insb
pop
adc
out
xor
pop
fwait
add
sbb
popf
or
bound
je
and
add
leave
ja
push
iret
cltd
pop
lret
bound
xchg
cmp
mov
pop
jno
outsl
int3
mov
pop
jg
mov
xchg
sub
roll
imul
fldl
lret
mov
ljmp
mov
aaa
push
jmp
sub
adc
add
push
xor
mov
stc
xlat
scas
lods
sbb
outsb
pop
lret
iret
and
jp
jg
data16
stos
inc
or
mov
ljmp
jno
pop
push
shl
mov
shl
imul
cmpsb
sbb
mov
pop
lahf
in
dec
enter
bound
addr16
ja
ret
and
iret
shr
add
xlat
push
pop
xchg
pusha
xor
sbb
ss
fildll
negl
and
sbb
dec
xor
popl
enter
lods
pusha
std
pushf
inc
fnsave
cmp
xlat
sub
sub
jns
cld
or
inc
pop
xchg
pop
mov
mov
and
xor
adc
pop
and
or
sub
push
push
sti
inc
aaa
dec
rcrb
jmp
pop
call
pop
lea
xchg
outsb
mov
xchg
fs
mov
push
sar
pop
rcrl
mov
in
negl
scas
push
mov
cs
popa
clc
nop
inc
jno
xchg
sbb
out
jecxz
jnp
repnz
push
adc
xorb
fsubl
movsl
xchg
adc
pop
sbb
lea
or
fs
nop
mov
sub
cs
jns
jae
cmp
and
mov
mov
ret
hlt
aad
jo
cmp
testl
dec
and
jle
sub
outsb
pop
sbb
test
testl
sub
sub
or
sti
inc
lahf
and
sbb
lea
stc
lods
inc
test
lret
cmp
sbb
std
rclb
test
sub
movsl
push
stos
mov
dec
rcl
cld
mov
jbe
mov
stos
lahf
imul
push
fs
pop
into
mov
mov
lret
lods
cld
push
test
jo
cmpsl
scas
lret
inc
or
lcall
loopne
sbb
ret
in
ret
sub
push
call
add
add
nop
xor
pop
sub
sbb
lods
push
divb
xchg
jbe
adc
jb
repnz
sub
rorb
mov
mov
dec
pop
push
scas
or
imul
inc
pop
nop
loope
dec
lret
fs
mov
mov
rcll
in
das
jns
sub
adc
jne
lods
push
jo
pop
hlt
fwait
out
vunpcklps
insl
sbb
xchg
add
lahf
je
inc
xor
inc
in
cmp
sbb
ret
push
stc
or
mov
push
dec
sub
lret
data16
adc
das
inc
push
iret
add
repnz
insb
cmp
ljmp
mov
repz
and
dec
dec
leave
lret
lret
xor
sub
das
fstpt
dec
sahf
add
sbb
mov
nop
testw
sti
int
lret
int3
sbb
inc
cmp
sbb
pop
into
push
mov
sarb
or
movsb
sbb
fdivrl
cli
cmp
push
sahf
roll
jnp
pop
push
in
mov
adcb
pop
lcall
xlat
clc
sahf
frstor
mulb
push
sub
push
outsb
sub
loope
daa
or
dec
cld
ret
mov
gs
lods
fildl
xchg
jecxz
dec
mov
out
inc
mov
ret
mov
popf
jo
and
mov
sbb
orb
cltd
pop
repz
push
sub
lods
xchg
pop
sub
dec
mov
sbb
jg
and
mov
jo
int
int3
xchg
xor
or
jmp
adc
cmp
out
xchg
sbb
pop
fisttps
ret
bound
shll
xchg
js
rol
ljmp
push
mov
inc
pop
int3
and
das
lock
xor
test
lods
cmp
and
out
dec
shlb
add
test
fidivrs
push
jne
cmp
sub
sub
daa
subb
mov
arpl
shrl
sbb
dec
xchg
sbbl
std
fistl
or
stos
pop
loope,pn
mov
adcb
pusha
jg
sbbl
aad
inc
mov
insb
sub
jne
data16
lock
push
pop
mov
stc
dec
cmp
insb
sub
lret
mov
push
sub
ret
sarb
arpl
or
push
or
les
mov
dec
sub
decb
push
popf
cld
xchg
pop
das
xchg
add
inc
push
js
inc
pop
fadds
repnz
inc
sarl
into
mov
fildl
fwait
std
inc
push
daa
dec
dec
pop
les
int3
outsb
mov
adcb
push
fwait
test
dec
jbe
jbe
add
neg
imul
movsb
and
test
and
dec
jbe
loop
movb
aaa
rcr
rcrb
ficoml
cmpsl
jmp
push
inc
and
repnz
imul
cli
jl
sub
or
inc
mov
cmp
and
mov
mov
jno
test
insl
test
inc
mov
repnz
jnp
je
movsl
xchg
mov
ljmp
add
pop
ret
sub
repz
sbb
ds
aaa
pop
test
sarl
arpl
or
out
xchg
mov
js
insb
pop
fsubp
mov
fwait
adc
cmp
mov
xor
icebp
jo
push
inc
andl
dec
fs
fadds
add
shll
dec
loop
jecxz
popl
lahf
sbb
hlt
mov
movsb
xor
inc
xor
fistl
ljmp
mov
inc
fistl
jae
or
or
jo
dec
sub
adc
mov
adc
mov
fbstp
enter
aas
mov
ficomps
adcb
cld
xchg
sub
call
fdivr
mov
mov
and
sahf
and
shlb
shll
inc
insl
in
fldcw
or
orl
cmpsb
testb
adc
sub
pop
orl
push
inc
bound
bound
repnz
cwtl
mov
into
enter
and
mov
mov
and
pop
movsl
aaa
mov
jo,pt
push
in
pushf
adc
jbe
mov
adc
fistpl
adc
rcrl
xchg
outsb
pusha
jp
cmp
or
mov
jnp
in
out
cwtl
push
ret
xor
mov
jge
aad
xor
movsb
mov
xor
nop
jle
jno
mov
in
dec
mov
subb
sub
fldcw
push
push
test
xor
lahf
jl
stos
dec
sub
lock
aad
and
fucomip
jle
jecxz
sbb
xchg
mov
jb
out
fisubrs
mov
inc
mov
fs
mov
dec
xlat
push
dec
ljmp
inc
sub
inc
lcall
xchg
mov
jns
dec
xchg
sbb
xor
push
xchg
sbb
popf
enter
clc
movsl
popf
xor
jmp
mov
mov
push
add
mov
sahf
out
add
lds
inc
push
jle
stos
in
in
mov
xor
xchg
sbb
or
addb
fldcw
lahf
ss
sub
fistl
dec
inc
xchg
mov
cld
cmp
mov
sub
sbb
xchg
orl
pop
test
xor
cmp
div
xchg
fs
inc
arpl
and
aas
sbb
repnz
adc
pop
fwait
stos
add
jbe
or
jne
jns
repz
stos
inc
adc
idiv
nop
sbb
sbbb
xor
adc
or
test
sbb
add
lahf
mov
lods
push
mov
push
cmp
sub
push
cmp
leave
div
ja
arpl
pop
lea
lods
sti
mov
cmpsl
jns
mov
sub
xor
dec
gs
xlat
or
cmpsl
or
inc
cmp
lds
lods
mov
pop
data16
inc
adc
and
out
cli
sbb
dec
shrl
adc
cmp
imul
cmpsb
imul
jle
push
xor
pop
int3
mov
xor
adc
sub
xchg
outsl
dec
xor
jl
and
add
bound
pop
xchg
sbb
fwait
sti
dec
mov
adc
test
lcall
je
hlt
mov
jno
scas
mov
lcall
scas
rcrl
mov
mov
mov
das
ret
xchg
push
in
testb
call
add
jnp
xorl
mov
or
dec
mov
inc
cld
ficomps
or
jl
fisubl
loop
loope
dec
or
out
out
fisttpl
cmpsb
enter
dec
push
pop
jno
add
xchg
and
jle
iret
pop
pop
shr
and
dec
push
aas
inc
dec
cmc
dec
clc
ffreep
scas
jo
sbb
cmp
or
xchg
popa
sbb
push
xor
inc
cwtl
pusha
sbb
mov
xchg
pop
or
or
mov
rclb
adc
sahf
std
xchg
or
cmp
mov
test
push
mov
enter
push
jmp
mov
inc
fwait
xchg
sub
popa
lods
inc
mov
insb
lret
lret
sub
cltd
or
into
dec
xchg
imul
lcall
mov
jmp
cmp
push
push
mov
sti
out
rorl
xchg
sub
jl
inc
scas
cmc
cwtl
lods
fdivr
lret
push
jo
insb
jle
fcomps
jmp
sub
add
xchg
test
jle
rol
mov
inc
aaa
lock
sub
inc
in
jnp
cld
out
cs
xor
dec
xlat
xor
out
push
and
lea
outsl
jnp
jl
cmc
mov
jg
dec
scas
push
out
cli
xchg
sbb
int
pop
xor
aaa
lods
or
jmp
hlt
mov
popa
into
sbb
test
add
fadds
adc
xor
mov
sbb
das
xor
fmulp
movsb
cmp
ds
add
dec
daa
jle
cmp
jo
ljmp
mov
pop
sbbl
nop
cmc
mov
or
mov
aam
mov
arpl
in
pusha
and
push
insl
fisubrs
int3
cmp
lret
add
sbb
pop
cmpsl
imul
cmp
movsl
lds
aas
pop
out
sbb
lret
sub
and
iret
sbb
int
rcrl
maskmovq
negl
stos
aad
push
and
ss
lock
sub
fwait
stos
mov
push
jg
jmp
lret
clc
pushf
push
pop
xchg
call
rorl
imul
ss
cmpsb
lret
aas
jge
out
cmp
lock
mov
or
imul
test
inc
dec
cs
cmp
xor
bound
inc
push
aas
push
adc
xor
xor
outsl
pop
insb
sbbl
scas
es
and
and
ds
clts
cmpsl
dec
fdivrs
xchg
add
stc
xchg
scas
rol
add
cmp
pop
add
insl
fcomps
outsl
loope
repz
cmp
fbstp
adcl
mov
pop
jecxz
add
test
std
leave
sub
fistpl
mov
mov
hlt
mov
sbb
xchg
push
cltd
push
out
sti
aaa
pop
sub
cmpsl
add
and
mov
adc
pop
dec
sar
mov
xchg
repnz
jno
xor
insb
jbe
fistl
bound
insb
jmp
sahf
cmp
add
jbe
mov
enter
xchg
insb
dec
mov
mov
xchg
jp
arpl
js
add
mov
nop
push
popa
pop
movsb
push
data16
cli
lods
inc
adc
ret
xor
movsl
xchg
adc
adc
sub
shll
out
test
push
adc
fcomp
push
rolb
js
jp
jle
adc
add
inc
xor
dec
outsb
ficompl
cmp
pop
lret
pushf
add
lcall
inc
gs
fstpt
add
pop
mov
pushf
xchg
std
mov
inc
out
loope
inc
fincstp
enter
mov
sbb
adc
sub
bound
aaa
test
adc
je
inc
ja
jb
cld
push
aaa
inc
jne
cmp
push
pop
xchg
xchg
pop
sbb
lds
into
imul
and
enter
imul
mov
mov
test
psadbw
jmp
adc
fmuls
or
shlb
loop
mov
mov
minps
jge
jne
jecxz
rorb
inc
and
push
bound
ja
add
sub
out
popa
push
int3
jg
add
mov
loop
out
inc
enter
ja
mov
lock
xchg
test
fidivl
lcall
test
ret
xchg
jns
mov
mov
je
adc
mov
push
push
jnp
sub
and
xor
sub
hlt
dec
arpl
xchg
gs
cmp
xchg
loopne
mov
jmp
pop
xor
pop
jbe
or
xor
std
or
in
adc
adc
add
mov
mov
jle
pop
stos
ds
fsubl
test
xor
sbb
outsb
js
inc
or
pop
adcl
pop
es
xor
inc
std
mov
repz
jb
inc
cmpsl
jp
cltd
jecxz
sbb
inc
or
add
mov
jp
test
cmp
in
adcl
arpl
pop
pop
push
jo
inc
fdiv
or
mov
lcall
pop
or
and
daa
sahf
pop
sahf
xor
test
push
outsb
cmpsb
cmp
iret
fwait
cld
ds
dec
mov
ficomps
xor
fnsave
xor
pop
or
pusha
int3
adc
xor
mov
das
enter
inc
push
mov
add
adc
ss
out
push
push
dec
or
enter
cltd
xor
aam
mov
cs
popa
pop
pop
movb
dec
dec
xor
imul
pop
leave
sbb
inc
cmc
shll
insb
mulb
xchg
sub
xchg
ljmp
xchg
xor
pop
mov
dec
mov
leave
cld
xor
decb
and
in
lods
dec
add
or
shlb
aaa
into
jge
test
into
int3
fadd
mov
dec
jo
pop
xlat
std
mov
imul
movsb
int3
jo
js
jge
mov
stos
xchg
adc
ja
pop
cmp
sbb
add
pop
cld
lcall
fstpl
push
out
and
cmpsb
aaa
iret
pop
or
test
sarl
out
shl
out
iret
dec
add
lahf
jp
enter
xor
dec
lds
adc
dec
mov
out
shrl
sahf
and
subb
mov
inc
fists
lret
pop
inc
xlat
dec
sahf
and
iret
popf
cmp
fistpll
scas
sub
mov
mov
pop
shrb
dec
push
sbb
jecxz
in
aad
mov
lds
je
daa
xor
mov
fsubl
test
pop
hlt
jno
sub
dec
xchg
pop
mov
xlat
xchg
scas
sub
insl
dec
hlt
fildl
ret
or
hlt
and
mov
lock
or
into
icebp
sub
faddl
jb
mov
fistpl
and
inc
test
stos
xor
sar
mov
lret
test
mov
shll
jbe
rolb
mov
push
shll
filds
pop
adc
stos
mov
xor
ljmp
inc
pop
movsl
stos
out
push
push
enter
outsl
std
jo
mov
jecxz
aaa
popf
xchg
cmove
jg
ja
dec
cs
mov
les
in
daa
fcmovu
divb
sub
aad
sub
scas
cmpl
xchg
scas
dec
xchg
sub
dec
and
xchg
pop
add
popf
jecxz
lock
fidivrl
adc
cltd
and
ret
enter
xor
subl
insl
enter
loop
sbb
fadds
cmpsb
daa
test
push
sbb
gs
cmp
mov
and
mov
enter
idivb
mov
testl
cltd
sub
aaa
inc
mov
jg
push
mov
jg
lods
fsubrp
xchg
shlb
xchg
pop
loop
in
int
sub
stos
lds
int
push
dec
testl
loope
out
ja
aad
add
sbb
stos
sub
aas
lock
jmp
add
scas
je
shlb
sahf
int
or
xchg
arpl
cmp
cmp
sarb
imul
int3
xchg
mov
test
mov
pop
call
or
push
int
shll
in
test
cmpsb
or
dec
aad
test
xor
bound
sbb
popa
lods
hlt
push
xchg
inc
xor
xchg
xlat
push
dec
imul
and
loopne
sbb
cwtl
jg
mov
pop
mov
call
gs
push
call
xchg
lcall
fbld
cmpsl
xchg
xchg
sub
push
pop
mov
movsl
ret
xor
sbb
or
cmpl
adc
scas
clc
pushf
xor
sarb
outsb
dec
ret
outsb
fadds
aam
enter
loopne
cli
push
cmp
mov
imul
add
push
add
push
xchg
cwtl
mov
es
jp
mov
fdivl
into
push
dec
mov
jne
lret
xchg
lods
jae
mov
rorl
ljmp
mov
mov
ret
popf
xor
xor
fdivl
fldenv
sub
mov
jb
inc
xchg
test
jno
mov
jno
xor
scas
ret
imul
lahf
push
fsubr
call
movsl
mov
fldcw
pop
test
xchg
dec
ret
inc
lods
inc
js
cwtl
pop
pop
adc
cld
sbb
fnstcw
out
push
mov
or
xchg
dec
xchg
sbb
mov
mov
rol
add
dec
inc
push
rclb
cmp
jecxz
mov
mov
pop
cmp
jbe
mov
xlat
leave
arpl
aam
sbb
scas
neg
jmp
cld
popf
xor
inc
out
inc
sti
btc
adc
les
pop
adc
into
mov
mov
mov
cmp
mov
jge
cli
fdivrs
inc
aaa
into
punpckhdq
cmp
mov
xchg
jae
mov
add
out
dec
in
loope
pop
push
xor
and
in
sbb
stos
cmp
mov
aas
out
pop
mov
cld
stc
mov
jmp
and
sub
jne
inc
jecxz
pop
dec
push
pop
icebp
adc
sbb
aad
movsb
mov
mov
pusha
loopne
xchg
lea
int
xlat
adc
arpl
jo
out
sub
push
stos
inc
and
imul
pop
jmp
xchg
xor
pop
test
mov
xor
push
pushf
sub
into
ja
mov
and
add
xor
sarb
mov
push
test
fisttpl
mov
jnp
sub
into
lock
aad
inc
ffreep
jno
cli
xchg
xlat
shrl
push
inc
push
std
jecxz
xor
aas
aad
cmp
and
mov
repz
mov
cmp
aas
mov
out
inc
sbb
jne
sub
ljmp
jno
or
mov
cmpsl
lods
ljmp
pushf
inc
pusha
xor
outsl
mov
into
mov
or
push
imulb
aam
jmp
pop
mov
arpl
xchg
or
addr16
shlb
push
add
sbb
and
nop
jmp
or
cmp
aaa
mov
sbb
or
add
xor
js
adcl
jnp
loopne
movsl
insb
add
repnz
stc
js
inc
cs
mov
les
add
mov
add
inc
pushf
pop
adc
test
xchg
sbb
rcrb
fisttps
in
push
push
gs
xchg
ja
outsl
pop
shr
add
jle
cmp
mov
shr
pop
icebp
fcoml
or
out
outsb
jg
ret
mov
mov
arpl
dec
aas
add
jae
stc
jp
sbb
dec
lock
dec
loop
lret
jbe
imul
cmp
mov
push
dec
cmp
idiv
stos
dec
xor
mov
rcll
pop
into
dec
jmp
dec
mov
cmpsb
or
ss
ret
add
jb
sarb
in
std
sbb
cwtl
add
ret
xor
push
mov
and
mov
in
mov
xchg
mov
add
es
lea
fiadds
jmp
adc
or
data16
in
pusha
push
sbb
shll
test
mov
and
jb
incl
mov
insb
jge
sahf
mov
iret
sbb
xor
data16
idivl
xor
xchg
push
aas
mov
rolb
fistl
ja
and
cld
daa
jg
mov
or
outsb
mov
xchg
inc
sub
js
lahf
xchg
or
add
cmpsb
pop
lea
or
in
or
cmp
imul
in
test
popa
cmp
sbb
testb
inc
hlt
pushf
loope
pop
movsbl
les
cld
icebp
addr16
lea
test
dec
bound
add
les
int3
int
cmpsb
repz
fwait
jbe
adc
stos
fnstenv
dec
cs
in
addr16
jg
xor
lret
and
mov
mov
shlb
aas
inc
outsb
dec
pop
and
and
cmpsb
cmp
xchg
cmp
add
lret
cmp
inc
jnp
cmpsb
nop
call
cs
jmp
adc
dec
iret
jbe
stc
xchg
adc
js
lcall
xchg
adc
and
ret
dec
into
sbb
dec
cmpsl
movsb
aas
xchg
out
mov
sub
cmp
inc
inc
fdivl
cli
jne
pop
xlat
movsb
push
aad
int3
dec
push
jmp
dec
test
dec
out
shlb
mov
jno
xor
dec
les
movsl
inc
pop
jae
mov
jl
sub
or
push
push
ss
cmp
test
jge
mov
add
jmp
adc
mov
ret
jo
add
adc
dec
out
dec
pushf
mov
iret
push
je
dec
sbb
jl
insl
scas
aaa
mov
inc
cmp
jge
pushw
cmpsb
imul
mov
sub
xor
int3
xchg
cli
mov
mov
int3
imul
lods
push
jno
mov
aas
adc
jo
sub
iret
insl
ds
movsl
ret
mov
push
sub
xchg
dec
daa
pop
in
movsb
adc
fcmovb
aam
dec
pop
jb
arpl
mov
jae
mov
adc
dec
psubb
push
insb
dec
daa
aas
test
xor
mulb
aad
ds
popa
neg
mov
xor
xor
or
jge
aad
sbb
pop
call
fidivs
add
pop
pop
fst
push
pop
bound
pop
clc
add
sub
pop
mov
orb
popf
lds
sbb
jbe
dec
ljmp
rolb
pop
aam
fs
sub
es
jl
icebp
adc
xor
out
int
mov
loop
ja
pop
popf
push
fisttpll
push
leave
mov
addr16
fidivrs
push
cs
pusha
pop
push
jno
sub
clc
jnp
mov
push
xor
xlat
aaa
notl
xchg
cltd
aas
and
xchg
xor
jne
push
push
push
sti
mov
ss
cmp
mov
jp
dec
call
jle
outsl
outsb
xor
pushf
in
push
lret
xchg
scas
jecxz
or
cmp
pop
inc
fidivl
inc
psubusb
shlb
jnp
push
insl
test
call
xor
xor
mov
ret
mov
sbb
leave
int3
sub
pop
dec
clc
mov
and
rol
fsts
ret
cli
or
pushf
orl
sub
xor
mov
cltd
xor
or
mov
ljmp
push
cli
jge
movsl
xor
rcrb
adc
test
aad
mov
mov
inc
out
cmp
or
hlt
or
inc
popa
clc
ja
roll
aam
sahf
rclb
std
stos
orl
jbe
out
iret
ret
in
sub
std
sar
shr
imul
in
xchg
mov
loop
stos
jo
fimuls
shlb
fs
push
ljmp
jno
mov
or
jmp
mov
adc
cltd
sub
out
mov
sub
or
sub
jns
xchg
xchg
int3
pop
push
mov
icebp
cmp
hlt
mov
das
mov
das
cmp
push
aam
roll
sub
repz
inc
fimull
dec
in
mov
dec
pop
ror
inc
lea
cli
jno
mov
arpl
pop
test
cmpsb
jb
inc
shl
adc
push
enter
cmp
cmp
add
pop
scas
sub
sbbl
mov
mov
inc
fucomi
push
sub
cmpsb
daa
mov
xor
push
push
jle
and
jo
into
gs
mov
jp
fiaddl
sub
xchg
scas
out
xor
pop
je
ret
push
lock
xchg
xchg
sub
cs
mov
sbb
xchg
imul
fldl
cli
and
test
mov
lods
add
in
sbb
pop
flds
mov
pop
ds
sub
jmp
scas
jae
iret
push
dec
in
sub
xchg
test
daa
ljmp
fwait
mov
jbe
js
adc
xchg
roll
imul
cmc
lcall
and
shl
loop
lds
xlat
jae
sbb
lods
jbe
jno
mov
ljmp
out
data16
lcall
mov
insb
dec
adcl
pop
hlt
push
outsl
pop
cmpsb
and
cmpl
xor
xor
lcall
push
movsb
inc
cmp
sub
das
inc
dec
ret
popa
aaa
dec
in
push
add
je
mov
testl
and
pop
cmp
jno
mov
jae
or
mov
fnstcw
int3
lods
cmp
dec
shrb
sbb
mov
mov
aad
xchg
pop
shlb
popf
xor
mov
mov
push
xchg
stos
mov
add
jle
xor
jl
push
jecxz
or
stc
nop
dec
pop
popa
push
imul
mov
dec
and
xor
scas
or
leave
cmp
inc
fcoms
pop
jnp
iret
sbb
dec
les
xchg
pushf
mov
cs
cmp
cs
insb
push
in
push
push
cmp
dec
popw
sbb
or
cmp
jbe
pop
cmpl
pop
dec
jno
orl
jp
popf
popa
add
int
shufps
add
int3
adc
shll
cs
std
dec
jle
cmp
mov
sbb
jg
cmovne
adc
cltd
xor
mov
jg
push
sub
inc
adc
dec
aad
jle
sbb
and
das
jp
int3
mov
int3
orl
shl
imul
pushf
push
cltd
std
es
cmp
mov
sbb
add
xchg
stos
push
fcmovb
fldl
sbb
mov
push
in
dec
push
or
sbb
mov
sub
xchg
inc
lcall
xor
jmp
movsl
mov
mov
adc
xor
ljmp
aad
andb
mov
sbb
xorb
cmp
aam
insb
loopne
fsubp
or
iret
or
popa
sarb
cmp
inc
dec
in
iret
mov
fistpll
jl
jmp
or
or
dec
pop
inc
stc
lea
iret
xchg
lods
pop
ret
dec
jb
aad
push
aad
dec
and
push
mov
or
mov
aad
jg
mov
rolb
dec
add
sbb
mov
pop
adc
in
jns
sub
sub
jns
or
sbb
daa
jnp
repz
ret
jp
sbb
lds
jle
mov
mov
shl
repz
cmpsb
xor
loope
pop
add
sbbl
inc
jae
sti
je
mov
jp
adc
push
sarb
fmull
sub
xor
jno
movsl
cmp
xor
fbstp
jmp
mov
or
jl
sahf
adc
into
xor
adc
in
or
sbb
addl
ret
rcrl
dec
cmp
in
dec
icebp
fiadds
js
inc
mov
loopne
mov
and
lcall
xchg
jb
call
pop
jo
out
cmp
loop
daa
pop
outsb
inc
xchg
enter
adc
roll
fwait
inc
cmpsb
cli
jne
and
xor
jl
cmpsl
test
xchg
add
js
or
das
pop
or
mov
lret
and
pop
jp
sbb
cmp
mov
jno
fisubl
dec
mov
add
nop
roll
inc
ja
out
and
movsl
icebp
lds
dec
imul
movsl
jo
fs
lahf
dec
lds
dec
scas
ljmp
in
frstor
xchg
pusha
mov
pop
mov
test
dec
lahf
pop
dec
jle
outsb
or
xor
mov
jno
xchg
jnp
xchg
fdivs
dec
lret
sahf
jno
add
insl
xchg
sbb
or
mov
mov
imul
cmpsl
jg
les
cmpsb
js
addr16
mul
inc
fwait
lock
lds
sbb
pop
xchg
inc
popa
fmuls
arpl
sub
inc
sub
xchg
sbb
sub
jge
sub
aad
ds
cmpsb
push
and
fcmove
fldt
xchg
push
push
pushf
xor
xor
jnp
cmp
pushf
mov
shr
dec
ret
inc
in
xchg
xor
shrl
cltd
movsl
jmp
inc
fs
push
cwtl
js
les
jp
stos
jp
loop
and
jae
sbb
jnp
sbb
fwait
ljmp
mov
adc
rcrl
or
pop
xchg
and
pop
adc
lea
or
loop
jp
cltd
ds
xchg
iret
shlb
dec
loop
data16
cwtl
imul
insl
ret
hlt
cmpsl
aas
sbb
scas
inc
inc
or
xor
push
pop
lods
and
mov
les
rclb
sub
test
mov
push
and
adc
int
mov
aaa
lds
lcall
cmpsl
sbb
sbb
lahf
pop
mov
xor
jp
mov
mov
ja
shlb
je
cwtl
fidivrs
dec
xor
les
push
xchg
outsl
xchg
inc
mov
out
mov
push
fidivs
lea
sbb
push
popa
inc
loopne
mov
pop
xchg
pop
je
dec
cmp
pop
jns
dec
xor
fs
outsl
sub
mov
inc
shrb
ja
sbb
sbb
sub
jo
mov
mov
cmp
inc
mov
pop
lock
push
mov
mov
or
add
dec
ds
sti
je
pop
mov
and
cmpsb
cmp
sahf
stos
les
cmc
mov
jl
jno
shrl
mov
pop
mov
lds
sbb
enter
lret
fcoml
mov
data16
mov
and
test
mov
cmp
xchg
or
lock
imul
xor
push
push
cwtl
clc
imul
popa
push
jge
xlat
ljmp
mov
outsb
repnz
mov
mov
gs
enter
or
pop
dec
out
mov
loopne
mov
inc
shrb
divb
cmp
or
fimull
outsl
popf
jns
sub
mov
push
and
sbb
dec
into
in
cmp
push
icebp
lcall
test
lods
imul
xchg
xlat
xchg
mov
notl
outsb
push
imul
cmpsl
sub
cmpsl
mov
jge
dec
add
xchg
adc
cs
pop
dec
dec
pop
jle
adc
inc
push
cs
push
mov
stc
push
mov
shll
repz
leave
xlat
cs
clc
ljmp
out
testl
daa
loopne
ret
js
test
xor
pop
dec
push
test
cmpsb
std
test
adc
sarl
loopne
sub
scas
add
sub
pop
xchg
inc
push
fwait
sub
les
push
jle
enter
icebp
xchg
mov
xchg
xchg
pop
inc
inc
inc
mov
sahf
mov
mov
lcall
push
arpl
adc
sbb
popa
inc
cmovbe
mov
mov
xchg
add
subl
fcoms
cmp
cld
pop
imulb
push
jne
lds
cld
jecxz
jl
pop
movsb
pop
lea
gs
cmpsb
or
test
mov
sti
jae
xchg
mov
push
push
test
loop
stos
jnp
popf
scas
inc
pushf
jno
xchg
sbb
mov
ror
inc
fdivr
mov
fs
fisubrl
pop
adc
push
add
mov
cmpsl
jecxz
loop
sbb
dec
pop
mov
into
loope
push
jmp
sub
sqrtps
pop
push
lock
das
mov
into
xchg
mov
ja
push
insl
and
outsb
dec
mov
push
adc
mull
scas
inc
push
idivb
sub
je
sub
test
inc
lcall
inc
fmull
loopne
jge
xor
in
cwtl
cs
add
pop
inc
stos
cmc
test
scas
mov
in
pop
lret
jmp
movsb
push
xor
fwait
out
add
adc
jo
fnstsw
xor
sub
rolb
cmpsl
pop
mov
sbbl
nop
jl
mov
inc
sbb
dec
inc
pop
adc
aad
cli
push
dec
rcl
mov
xor
push
sbb
ret
sbb
sti
pop
insl
cmp
jno
test
out
sahf
pop
mov
lock
incb
cmpsb
test
jmp
xor
and
mov
movsl
rorb
sub
mov
mov
cmp
leave
mov
sbb
or
hlt
mov
sub
arpl
ret
rolb
cmpsl
pop
addr16
adc
mov
add
adcl
test
mov
jae
add
mov
arpl
inc
mov
iret
mov
rcll
sub
sub
rclb
jg
cmp
dec
repz
and
and
cmp
ret
mov
push
lretw
mov
in
outsl
sar
repnz
push
stos
push
aam
in
pop
push
loope
and
ficoml
mov
jmp
push
pop
and
stos
or
rcll
call
cmpsl
jp
dec
push
fs
xor
mov
xchg
dec
and
nop
aam
mov
mov
xor
lret
bound
or
jo
movsb
jne
pop
sbb
fisttpl
and
or
inc
and
js
test
or
cmpb
dec
mov
sub
inc
lods
movsl
ret
push
test
rcrb
sbb
and
movsl
sti
cmp
mov
outsl
mov
mov
push
repz
add
adc
sti
test
mov
cltd
sub
mov
aaa
popf
movsb
jnp
and
ja
repz
fdivrp
clc
pop
add
in
es
xchg
pop
out
les
pop
adc
jne
mov
je
cmpsl
xchg
call
int3
out
gs
movsl
int3
or
pusha
jle
jmp
aaa
loope
dec
adc
push
jbe
add
loop
mov
bound
mov
add
or
or
pop
push
movsb
mov
pop
jo
dec
daa
mov
sti
ret
xchg
sub
test
and
or
xchg
movb
call
lahf
xor
repnz
mov
aad
jne
ljmp
cmp
js
push
clc
push
outsb
mov
loope
cmp
fnsave
mov
dec
pop
mov
sbbl
icebp
lcall
loopne
daa
hlt
lea
add
xchg
and
cmp
cmp
lcall
mov
inc
sub
pop
mov
or
mov
xor
les
adc
mov
sbb
out
scas
stc
nop
mov
pop
es
inc
mov
out
inc
cmpsl
in
out
cli
add
subb
xor
push
add
and
ljmp
xchg
scas
xchg
movsb
in
gs
sar
jae
cltd
clc
imul
xchg
mov
mov
pop
repnz
mov
cmp
push
xlat
sti
inc
push
outsb
jo
jae
mov
in
ficoml
push
out
add
dec
xchg
lea
mov
push
jmp
pop
sub
pusha
fldt
icebp
xchg
rol
pop
add
xor
clc
xor
sahf
cmp
xor
adc
test
push
mov
dec
movsb
sahf
adc
xchg
jnp
scas
movsl
sbb
xchg
jns
adc
pop
mov
lcall
sahf
in
jno
rcr
add
dec
push
pop
imul
repnz
mov
loopne
lret
aad
pop
scas
jne
push
mov
into
sbb
aas
decl
std
ret
xchg
push
leave
clc
popa
clc
scas
adc
jg
add
or
and
or
push
cmp
scas
cmp
aaa
into
in
cmp
mov
inc
push
fucomip
pop
push
sahf
inc
andl
mov
ror
jno
clc
ficoml
inc
testb
add
or
cs
lcall
adc
repnz
jecxz
shlb
aam
add
lds
bnd
loope
pop
sbbl
ret
sbb
sbb
pushf
mov
inc
mov
insb
and
xchg
jae
fildll
ret
jne
jmp
pop
mov
push
or
test
pop
ret
movsl
sub
dec
add
outsl
jg
inc
call
ret
nop
xor
insb
adc
mov
xchg
popa
sahf
xchg
pop
pop
sbb
or
push
ds
aaa
push
lds
add
call
sub
mov
add
pusha
cmp
dec
popa
or
mov
xor
aaa
roll
lods
xor
xchg
out
jl
push
mov
movb
call
mov
xor
push
insl
lods
out
pop
hlt
xor
loop
fdivrl
xchg
jge
dec
mov
loope
mov
mov
mov
adcb
mov
adc
sub
xor
mov
jae
inc
ljmp
jno
fdivp
movsl
xor
testb
dec
in
mov
push
shr
cmp
sbb
aas
mov
fidivrs
jns
fisubl
enter
pop
outsb
or
push
sub
aam
push
xorb
sbb
mov
sub
cmp
sub
scas
and
adc
sahf
sbb
test
sub
sub
push
inc
ret
jae
or
jne
sub
push
neg
xchg
aam
jp
test
or
in
sbb
mov
sbb
lcall
xor
inc
jg
popa
das
outsl
data16
cmpsb
xchg
test
adc
mov
cmp
pop
mov
lret
bound
jmp
mov
outsb
pop
ds
or
sahf
cmp
mov
pop
loopne
push
inc
shrl
daa
cmc
push
cmpsb
mov
inc
push
dec
loope
test
push
and
pop
cmp
gs
mov
adc
lods
xchg
push
repz
push
les
add
mov
xchg
dec
popa
lods
jb
mov
xchg
aad
out
pop
jo
cmp
outsl
xchg
jle
mov
fistps
loope
and
into
sub
mov
cwtl
push
add
test
out
mov
jle
mov
clc
fdivs
mov
or
lcall
adc
mov
adc
arpl
pushf
iret
mov
cmpsb
lock
fidivl
or
sahf
inc
in
in
aam
daa
fs
add
das
cmp
and
xor
sub
lods
mov
loopne
ja
add
pop
mov
mov
call
jne
mov
and
mov
fs
sbb
inc
notl
inc
cmp
inc
std
dec
dec
xor
pop
sbb
movsb
int
fsubl
push
adc
orb
pop
sub
mov
sbb
daa
jo
mov
push
loope
andl
cmpsb
cmp
rolb
jmp
pop
lret
data16
inc
mov
push
call
mov
repz
rcll
les
out
scas
pop
jno
mov
or
in
or
push
scas
xchg
push
fwait
jmp
gs
int
mov
or
jecxz
test
pop
hlt
mov
mov
popa
xchg
insl
push
push
and
pop
and
sar
movsl
outsb
in
mov
mov
pop
or
pop
sub
or
hlt
rcr
push
mov
cwtl
mov
add
scas
imul
enter
sahf
adc
js
ds
jnp
mov
clc
nop
cmp
fisubl
sti
lret
push
adc
inc
jbe
lock
inc
lds
sub
dec
add
jbe
mov
rcl
inc
push
pusha
dec
cmp
inc
xchg
fbstp
cmpsl
out
xchg
mov
add
dec
out
out
jb
test
sbb
testl
faddl
scas
xchg
test
pop
stc
lds
sub
cmp
add
jo
rorb
jle
mov
loope
lret
pop
push
adc
rorl
mov
std
xchg
jae
lods
rorl
xchg
mov
mov
jp
add
fisubl
pop
jno
in
das
fmull
xchg
incl
xor
stc
jge
xor
sbb
dec
dec
mov
inc
pop
cwtl
xchg
addr16
cltd
mov
fidivs
pop
dec
sbb
adc
cmp
insl
roll
mov
loope
add
cltd
nop
inc
fsubr
inc
mov
pop
mov
inc
push
scas
mov
adc
fdivs
stos
pop
shlb
popa
sub
jae
pop
rol
repnz
inc
call
jge
push
scas
jns
sbb
lods
addr16
js
cmp
rcrl
mov
add
push
movsl
clc
in
lret
idiv
das
gs
lahf
lods
or
dec
push
xor
add
les
pop
ljmp
jecxz
or
mov
movsl
icebp
mov
push
or
insl
cmp
push
adc
mov
les
roll
out
push
mov
xor
cmpsl
out
cltd
mov
xchg
add
loop
add
mov
loope
push
xor
fbld
addl
lret
or
pop
jmp
sub
hlt
pop
or
mov
idiv
and
adc
lods
adc
pop
inc
test
outsl
mov
push
xchg
mov
mov
pusha
addr16
adc
push
repz
jg
push
int
ss
jno
jnp
xchg
jb
addb
sbb
adc
sbb
hlt
js
shrl
jae
imul
mov
adcl
cs
add
iret
gs
icebp
push
pop
lods
shr
inc
cmp
insb
insb
inc
int
dec
imul
ret
ds
mov
lahf
add
and
int
inc
popa
add
loopne
pop
xor
dec
mov
ficomps
cmp
jg
std
mov
push
pop
test
leave
lret
sub
scas
jno
call
call
mov
jmp
aaa
lea
gs
jmp
jmp
sbb
xor
stc
jmp
call
cli
and
xor
lcall
jo
jne
push
xchg
lods
test
repz
push
and
jb
pop
sub
repz
cmp
mov
lret
xor
aam
test
lods
sahf
dec
mov
mov
test
dec
jecxz
enter
jne
jns
and
imul
cli
jne
cmp
movd
mov
push
fisttpll
mov
call
jge
mov
mov
fnsave
xchg
xchg
pop
shrb
xchg
inc
fs
mov
aaa
call
in
or
xchg
fisubrl
adc
lods
subb
lea
cmp
andl
sti
xlat
stos
test
cmc
and
fnstsw
sbb
mov
mov
dec
mov
and
xchg
xor
lahf
not
cltd
inc
div
seto
dec
loopne
mov
sti
push
sub
insb
add
out
into
gs
fldl
sub
or
xchg
stos
xchg
cs
data16
repz
xor
sahf
shll
movsb
xchg
dec
fimuls
cmp
ficoml
and
xorb
test
outsl
cmpsl
dec
push
fs
testb
or
inc
and
fiaddl
xchg
inc
push
fwait
add
pop
out
adc
gs
xor
dec
leave
jne
push
cs
repz
jp
fucomip
push
cs
inc
aaa
lahf
sti
sub
pop
add
ret
fnstsw
or
adc
mov
orl
add
sbb
scas
adc
cmp
imul
mov
add
lods
xchg
in
pushf
enter
xor
js
imul
std
add
mov
stos
cld
push
pushf
dec
call
push
shrb
dec
and
mov
jb
sarb
xor
sahf
push
or
test
and
repnz
push
imulb
mov
das
sti
or
mov
js
mulb
mov
push
push
mov
dec
out
aam
xchg
ret
imul
fs
ss
inc
scas
xchg
mov
xor
movsl
roll
jle
dec
sub
jg
test
ret
adc
jl
ljmp
or
popf
pop
cmp
lds
pop
pop
lock
cli
xchg
or
xchg
and
subl
fstps
push
fs
xchg
mov
std
out
pop
imulb
push
scas
inc
test
int3
leave
mov
cmpb
insl
pop
out
bound
lods
leave
inc
and
mov
adc
in
int3
arpl
pusha
lods
ljmp
in
mov
sbbb
mov
pop
fisubrl
daa
rcrb
cli
inc
popf
sti
cwtl
cmpsb
push
pop
fsubp
mov
add
popf
push
test
push
sub
test
or
cmp
clc
inc
mov
insl
in
pop
test
frstor
cli
lret
test
and
xchg
es
psrlq
or
inc
fs
dec
or
lret
adc
mov
rcll
int
inc
hlt
pop
out
jbe
aaa
mov
inc
fs
int3
fisttpll
sub
sub
dec
xor
icebp
dec
mov
add
ds
sbb
mov
das
addr16
ja
loopne
call
enter
dec
jecxz
pushf
fcmovne
popa
aad
fsubr
jecxz
call
popf
cltd
mov
in
std
stos
inc
sti
dec
and
push
outsl
cs
mov
pushf
bound
xor
gs
lret
arpl
into
inc
jmp
sub
pop
pop
insb
add
push
adc
jbe
push
fcmovnb
inc
mov
jl
out
inc
out
std
add
xor
sbb
mov
sub
ret
shrb
fistl
ret
cmc
dec
sbb
fld
jnp
pop
or
jno
fwait
xor
pop
mov
repnz
lret
add
enter
mov
push
mov
sbb
test
mov
jns
popa
and
mov
dec
movsl
mov
out
sarl
sarl
adc
dec
jge
enter
shr
dec
or
arpl
or
mov
addr16
mov
in
js
popf
cmpsl
call
push
push
xor
test
lret
or
popa
adc
inc
pop
adc
mov
xchg
mov
test
or
arpl
movsl
mov
loopne
lret
mov
lock
or
cmc
int
cmpsl
cld
and
lods
leave
dec
dec
push
push
lock
popf
shlb
aad
mov
fisubrl
mov
cmp
mov
pop
mov
into
loop
add
dec
popa
testb
mov
and
scas
mov
lock
pop
pop
xchg
or
sbbb
sbb
aaa
pushl
leave
pusha
aam
dec
mov
cmc
or
pop
mov
mov
iret
dec
sub
xor
push
xchg
lock
mov
ret
xchg
push
jb
jo
lea
or
imul
daa
mov
cmp
aad
sub
jne
jbe
fmul
int
jp
jle
add
mov
aas
movd
jge
test
add
aaa
and
xchg
and
shrb
cmp
add
bswap
push
and
jmp
sub
xchg
pop
test
cli
movsl
jle
hlt
sbb
sbb
jb
add
xor
orl
fdivrl
pop
pop
lock
ja
ret
test
daa
lret
push
ds
jge
bound
adc
js
icebp
xchg
jecxz
push
adc
cmpsb
les
and
or
sbb
xchg
hlt
ret
jnp
cmpsl
add
pop
or
mov
out
into
jmp
inc
loope
add
adc
or
mov
lea
mov
sbb
sub
lret
mov
mov
iret
xor
iret
mov
mov
into
out
lahf
negl
lods
xor
adc
or
and
push
sub
sahf
sub
sub
enter
xor
mov
inc
orl
xor
cli
loop
mov
mov
mov
push
push
loopne
mov
rcl
cwtl
aad
push
outsb
mov
push
cmpsb
and
pop
loopne
push
and
test
add
lea
fldl
fistl
mov
push
inc
enter
out
xchg
js
xor
xchg
mov
xchg
out
bound
push
call
sub
dec
lret
lret
ljmp
push
mov
push
scas
test
pusha
mov
movsl
or
outsb
jno
cmp
in
test
sub
ficoml
loop
sub
dec
mov
jbe
dec
out
add
movsb
fwait
sti
mov
loopne
fcompl
out
decb
cmp
xchg
xor
mulb
aaa
nop
ss
pop
popf
inc
push
push
sti
xor
jl
xchg
out
sbbb
mov
add
xchg
sbb
jecxz
andb
stos
jge
xor
dec
fbstp
cwtl
pop
nopl
dec
or
sti
lock
jecxz
pusha
sarl
pop
mov
mov
out
sbb
mov
popf
ljmp
cmpsl
dec
push
pop
idiv
sbb
jle
adc
push
call
imul
xchg
ds
icebp
dec
xchg
sbb
sahf
mov
xor
add
pop
adc
sbb
sbb
pop
mov
jl
pop
sub
stos
sar
stc
popf
pop
lret
add
lods
daa
jno
xor
adcl
cmpsb
xchg
sub
mov
mov
pushf
mov
pop
jecxz
push
mov
jbe
int
ret
or
out
xchg
insb
mov
repz
arpl
test
mov
mov
ja
ret
mov
dec
xchg
and
adc
cmp
test
imul
sub
mov
lock
loop
ja
cvtps2pi
pop
orl
push
mov
test
es
xchg
sbb
jae
movsb
cmp
xchg
adcl
or
pop
xor
xchg
and
aaa
ljmp
pop
out
mov
xchg
bound
and
jg
out
in
dec
jnp
jl
insb
movsb
or
loop
ss
ja
subl
push
rcrl
or
scas
jae
sbb
stos
mov
dec
outsl
dec
shll
adc
repnz
cmpsl
fidivrl
add
leave
fldcw
scas
in
ror
push
cwtl
mov
sub
js
and
pop
push
cmp
xchg
xchg
jae
sarb
xlat
out
adc
inc
movlps
sub
dec
xchg
fs
rolb
jno
lock
inc
xchg
daa
std
inc
outsl
aam
rcr
pop
xchg
cmp
sub
push
mov
gs
imul
lods
stos
mov
insl
jno
in
stos
sub
cli
cmp
movsl
stos
push
pop
sbbl
mov
jbe
js
out
pusha
push
cld
xchg
inc
gs
lret
bound
mov
mov
cmp
fisubl
dec
push
sub
pop
xchg
add
sbb
mov
fwait
add
adc
sbb
insl
sbb
jno
lret
add
mov
mov
cmp
and
pop
push
mov
push
sbb
cltd
lock
out
sahf
das
ret
iret
adc
adc
in
sahf
mov
inc
test
pop
cmpsb
lret
mov
fldenv
mov
aad
xchg
sub
xchg
sbb
dec
cmp
stc
pop
mov
test
dec
or
sub
nop
sub
shlb
lods
jbe
or
jae
and
xchg
insb
fistps
sbb
ret
dec
xchg
and
sub
lret
push
loope
sti
idivb
leave
pusha
fcoml
out
mov
add
inc
sub
xchg
cmp
add
add
mov
ficoml
dec
leave
push
movsl
or
imul
xchg
incb
ret
adc
imul
lods
xor
push
fcoml
and
js
inc
std
jno
fbstp
sbb
cmp
jbe
push
lahf
inc
dec
inc
stc
mov
inc
scas
adc
cwtl
inc
stos
subb
mov
popf
in
outsb
inc
test
ds
out
jnp
xchg
jne
fdivrs
sti
lods
xchg
fcmovnu
sbb
mov
mov
arpl
lcall
stc
dec
pop
bound
movsl
ja
dec
pusha
xlat
and
dec
stos
xor
sub
cmp
es
lods
push
addb
xchg
pushf
jecxz
aam
mov
out
movsl
dec
cmp
fwait
repnz
push
test
dec
iret
sbb
fs
add
lahf
cs
ret
rcll
lods
mov
movsb
jecxz
xchg
repnz
clc
sti
pop
dec
and
add
or
mov
jge
test
pusha
mov
add
inc
jmp
aaa
aas
or
sbb
test
mov
cmc
in
shl
dec
or
adc
leave
in
dec
dec
inc
push
pop
mov
fistpll
addr16
sbb
lds
int3
mov
sbb
mov
and
sbb
fisttpl
sti
ss
lods
pop
cmp
je
imul
sbb
and
jne
fimuls
js
dec
es
scas
data16
pop
mov
aaa
xor
adc
xchg
imul
jno
and
dec
addr16
push
adc
iret
and
adc
xor
jge
sbbb
pop
fsubl
sbb
sub
jns
hlt
xchg
aas
adc
fs
mov
lahf
fwait
jo
lds
adc
dec
testl
aam
dec
dec
stc
push
test
mov
repnz
fnstenv
jae
adc
ret
ret
or
or
out
inc
inc
push
lods
lea
jbe
outsb
mov
cmc
lock
insl
pop
adc
add
pop
hlt
dec
je
mov
inc
aam
aad
cmp
jge
lea
lret
adc
sbb
movsb
jge
dec
je
test
add
sbb
push
lods
jl
fs
pop
mov
xchg
insl
jp
and
mov
hlt
dec
sub
test
pushf
aam
out
in
out
lds
mov
lds
jecxz
add
sarl
lods
cmp
xor
mov
repz
insl
repz
and
xchg
hlt
dec
mov
aam
mov
loopne
dec
push
mov
aad
jo
xor
xor
jge
inc
dec
icebp
adcb
or
push
jmp
push
xor
inc
and
mov
fmull
subl
jge
inc
lahf
lea
xchg
inc
call
cs
pusha
mov
lret
aam
pushf
sbb
js
jno
mov
pop
or
dec
pop
clc
push
dec
sub
add
dec
sbb
fwait
nop
stc
push
in
js
and
pop
mov
jnp
xchg
lea
cmp
push
mov
repnz
jo
jno
jb
rorb
loopne
mov
into
fdivs
and
mov
jb
cmpsl
sbb
mov
stc
push
jbe
js
jns
fnstenv
test
mov
pop
pusha
cmp
ja
push
jmp
fs
jno
cwtl
jb
out
stc
push
pop
leave
dec
mov
imul
push
xchg
pop
adc
adc
outsb
ret
or
adc
push
out
sbb
adc
cld
dec
mov
push
test
sbb
add
mov
mov
mov
in
aad
out
or
xchg
fwait
lods
xchg
popf
push
mov
inc
sti
mov
jg
pushf
mov
mov
jae
cmp
cmpsl
lahf
push
dec
sub
shrb
leave
xchg
cmpsl
sbb
push
or
adc
call
mov
shl
xor
pushf
adc
cmc
or
xorb
mov
sahf
or
stos
and
pop
xchg
jns
fisubrl
push
push
mov
shlb
inc
fcoml
jo
insb
repz
xor
lds
fistps
adc
les
jae
dec
lcall
mov
imul
movsb
xchg
inc
mov
aaa
les
jo
pop
leave
xor
mov
pop
out
inc
fldt
xor
mov
rorl
xchg
push
in
sub
out
cld
ss
push
xor
fwait
test
test
jne
mov
adcl
test
arpl
ds
jne
xor
pop
cmpsb
sbb
sbb
cmp
jb
push
movsb
adc
popf
es
ss
adc
xlat
sub
and
movsl
mov
mov
lahf
fwait
xor
add
mov
mov
push
and
xorb
sub
sub
mov
sbb
shrb
fsubs
and
adc
dec
mov
loop
hlt
adc
scas
movsb
sarl
pop
dec
dec
or
in
mov
xlat
daa
mov
ffree
inc
out
pop
cmp
push
ljmp
jno
iret
add
mov
fldenv
popa
dec
jl
pop
in
mov
test
popa
cmp
pushf
cmpb
imul
lds
out
cmp
pushf
in
or
inc
sub
mov
and
jle
outsb
or
push
imulb
aas
mov
leave
mov
sahf
arpl
mov
mov
mov
iret
ret
cmpsl
cld
pop
sti
fidivrs
jl
cmp
call
push
mov
lds
mov
insl
add
in
in
jge
sbb
in
dec
pop
adc
add
pop
xchg
and
sarl
or
pusha
movb
xor
aaa
mov
xor
testb
rorb
cmpsb
pushf
mov
loop,pt
cs
mov
add
push
mov
xlat
mov
mov
mov
and
cmp
xchg
inc
sub
leave
popa
dec
leave
pusha
mov
adc
dec
dec
clc
jecxz
push
ss
and
add
adc
inc
mov
push
lahf
mov
rcr
icebp
adcl
mov
ficompl
adc
rclb
cltd
out
ljmp
dec
mov
shl
pop
stos
aad
adc
bound
mov
push
out
mull
pop
mov
jmp
adcb
sub
cmpl
add
ss
push
loop
pop
cld
outsl
sbb
xchg
scas
nop
lods
mov
hlt
mov
js
jecxz
push
pop
inc
sbb
push
sub
push
push
add
pop
pushf
nop
data16
push
xchg
mov
adc
xchg
inc
sbb
cmc
dec
addr16
cld
out
sbb
pop
cmp
insl
xchg
sbb
fisttpl
std
jo
cmpsl
or
fdivs
sub
lods
lods
and
inc
lds
popf
mov
and
cmc
inc
push
pop
scas
shlb
gs
xchg
mov
insb
add
mov
lcall
or
jmp
xchg
icebp
or
mov
fidivrs
mov
add
push
shlb
repnz
scas
gs
movsl
push
sub
negb
rol
pop
and
jmp
jbe
ds
in
sbb
pop
mov
inc
lret
pop
xor
inc
push
sar
mov
fadds
popa
xchg
repz
mov
fucomp
inc
mov
lds
rorl
and
cmp
mov
dec
jecxz
scas
push
pop
push
je
add
dec
mov
pop
sub
call
test
mov
add
xchg
and
ja
shrl
jge
mov
outsb
scas
mov
xor
jl
vcvtsd2ss
sti
push
adc
iret
loope
fnstsw
pop
sub
shl
xor
cmp
and
mov
push
jns
popf
stos
notb
bound
cmp
or
push
and
lds
add
int3
lea
pop
int3
dec
movsb
inc
push
inc
mov
rclb
and
stos
lea
lods
mov
push
xor
rorb
xor
sbb
lret
xchg
add
mov
arpl
pop
mov
jo
das
push
and
and
enter
xchg
adc
cmpb
mov
dec
pop
jae
out
call
xchg
push
push
inc
loope
aaa
sbb
in
add
shll
rcrb
add
sub
nop
inc
pusha
dec
in
push
xor
sahf
dec
inc
mov
es
mov
sub
mov
sti
mov
dec
push
popf
jnp
and
leave
popf
cli
jno
xchg
dec
push
sbb
push
mov
inc
fsub
add
sub
cmp
out
mov
notb
or
adc
mov
cmp
fcomp
inc
fisttpl
sbb
pop
fimull
pop
mov
aas
stos
into
push
fsub
jg
push
sbb
in
jnp
insl
sub
jns
xchg
popl
insl
mov
fsubrl
jp
ss
repnz
inc
lcall
adc
cmpsb
xorl
inc
sub
mov
mov
lds
adc
shlb
outsb
adcb
jae
loope
sarl
jns
jle
ljmp
and
and
shrl
shrl
imul
xchg
pop
jno
lods
mov
dec
xor
push
xor
andl
pop
lods
test
xchg
sub
add
xor
shl
daa
fcmove
fs
int3
pandn
addb
or
test
push
cld
and
push
sbb
cmp
xchg
cmp
adc
ss
xchg
cwtl
stos
push
inc
test
out
push
mull
adc
adc
push
loop
or
adc
aaa
mov
cli
repz
shll
inc
arpl
fstps
inc
push
sti
push
enter
mov
flds
test
pop
mov
push
xchg
sub
loopne
in
mov
inc
leave
inc
insb
daa
lcall
inc
gs
cmpl
jg
arpl
rcrl
jecxz
lcall
shrl
fdivrl
push
mov
pop
xchg
pop
cmp
push
movsl
push
xchg
push
scas
dec
jne
lahf
bound
jno
shrb
inc
sbb
mov
popf
icebp
inc
adc
fcmovnu
decb
scas
test
mov
aaa
into
mov
testl
je
fwait
xor
sbb
in
fldenv
out
cmp
in
in
adc
jecxz
je
pop
add
pop
xchg
hlt
sbb
jno
adcb
cmp
scas
clc
pop
add
into
mov
stc
in
cltd
push
fsin
sbbb
add
test
or
sbb
mov
pop
arpl
ljmp
test
adc
adc
jo
out
cmp
gs
out
xchg
mov
push
out
xchg
mov
inc
mov
pop
out
cld
xor
nop
mov
stc
shl
lret
rcrb
lods
test
jns
rol
pop
jecxz
out
mov
icebp
inc
pop
lds
lahf
addb
jle
mov
and
sti
xor
and
sub
inc
in
dec
enter
call
jge
cmpl
mov
add
in
adc
dec
dec
or
jle
and
push
add
and
popf
ficoml
cmp
into
cltd
scas
pusha
add
push
adc
adc
daa
repnz
sahf
jae
in
fists
sub
popa
mov
mov
ret
shrl
lds
xchg
dec
out
pop
inc
fldcw
test
aad
out
fistpl
cmc
xor
mov
and
sub
sbb
cmpsb
ja
cld
jecxz
sbb
cmc
loope
or
call
aaa
jb
je
popa
push
xlat
jp
pop
es
cmpsb
or
pop
dec
and
lret
mov
pop
xchg
mov
mov
mov
cmp
sti
cmpsl
inc
push
loope
ljmp
outsl
shll
inc
mov
data16
loopne
iretw
dec
cmp
insb
aaa
aam
pop
imul
hlt
push
adc
pop
dec
daa
mov
xchg
out
pop
adc
or
imul
and
jp
mov
jecxz
mov
shl
xchg
mov
ret
shlb
jl
dec
xchg
in
add
or
leave
dec
sbb
out
adc
inc
mov
mov
and
inc
rcrb
in
mov
iret
cs
sti
aam
inc
inc
ret
mov
pop
xor
iret
sub
insl
test
xchg
ret
xor
push
test
out
lods
mov
aad
jmp
mov
scas
jo
push
or
fdivs
or
popf
xchg
inc
sbb
inc
insb
mov
hlt
test
sbb
inc
xlat
cltd
push
or
and
popa
or
jb
dec
mov
mov
in
icebp
bnd
mov
lahf
cmpb
test
lahf
nop
xchg
fistl
adc
add
adc
xchg
popa
jp
mov
jmp
push
out
pop
dec
lret
arpl
hlt
mov
lods
or
xor
ret
mov
hlt
cld
sub
fcmovne
test
push
xchg
and
in
or
push
outsb
mov
leave
jl
fisubrs
popf
push
ljmp
jno
or
sub
gs
fnsave
mov
jl
jmp
and
shr
mov
js
pop
sub
loop
mov
jno
out
add
jmp
mov
pop
pcmpgtw
mov
cmp
loope
adc
movsl
jl
add
mov
jb
mov
in
push
sub
adc
mov
push
into
xchg
xchg
inc
push
mov
push
je
fcmove
loopne
xor
xchg
sub
jecxz
iret
dec
sub
xchg
cmpsl
adcb
jo
dec
push
lods
sub
ljmp
loopne
adc
in
xor
inc
pop
pop
mov
cmp
outsl
xchg
in
pop
call
imul
aas
xor
dec
dec
lret
xlat
fsubr
or
jmp
jno
addl
push
or
xor
adc
stc
mov
push
test
mov
int3
xor
call
pop
idiv
cmp
aaa
sti
mov
idiv
ss
mov
imul
mov
add
push
lret
aas
mov
jo
mov
enter
mov
jbe
in
push
jo
push
scas
inc
testb
cli
leave
int3
mov
rcrb
and
ds
add
adc
daa
sahf
inc
dec
mov
lea
popa
xchg
in
andl
mov
out
xchg
inc
inc
fstpt
in
cli
pop
push
fdivl
or
std
sti
out
popf
xchg
jl
fwait
mov
das
stc
jl
inc
stos
mov
clc
add
sub
cmpsl
xchg
jp
xorl
jb
inc
int
pop
adc
sub
pop
jo
inc
mov
rol
in
negb
mov
cmc
xchg
aad
push
lcall
dec
pop
stc
nop
lahf
dec
loope
inc
loope
mov
pop
dec
lods
inc
adc
jmp
call
imul
sbb
lcall
pop
movsb
push
sbb
je
mov
inc
cld
push
test
add
xor
fwait
test
int3
adc
push
sbb
mov
sbb
ret
lea
pop
hlt
mov
rcrl
cmp
sub
ss
mov
push
ljmp
das
pop
mov
scas
xor
lods
cmp
into
fwait
add
addl
gs
sbb
cltd
xor
dec
out
cmp
mov
lret
jge
and
pop
push
ljmp
lock
cmpsb
or
sub
pop
test
jge
cmpb
push
mov
sub
cli
mov
cmpsb
outsb
in
pop
test
mov
mov
mov
mov
jb
ret
fstps
push
pop
cmpb
int
mov
xor
sbb
data16
loop
cmp
lock
test
jae
lret
inc
and
mov
in
jno
cmp
xor
pop
outsw
stos
sub
push
loop
pop
sub
mov
adc
pushf
cwtl
add
ljmp
call
test
sti
inc
and
xor
xorl
lods
or
pop
jl
test
inc
aam
mov
pusha
into
subb
pop
fildl
fidivs
sbb
scas
test
jl
inc
nop
dec
xor
xlat
rclb
daa
mov
adc
pop
pop
xor
call
cmp
pop
mov
xor
lcall
add
gs
in
imul
dec
js
mov
data16
ljmp
sub
jecxz
and
lret
lret
outsl
sbb
fnsave
icebp
mov
popa
pop
cmp
movsl
cmp
mov
push
push
loop
dec
rol
ret
mov
ds
pop
cmc
sahf
adc
add
mov
mov
gs
push
test
dec
sahf
fists
sbb
inc
or
sbb
dec
mov
xchg
into
nop
gs
icebp
sub
xchg
aaa
movsb
jnp
pop
or
ds
mov
int
sbb
stos
push
loope
sub
test
in
cmpsl
xchg
inc
sbb
fdivs
xor
insl
adc
decb
insl
mov
cmp
cltd
cmp
loope
icebp
cmp
sbb
in
push
mov
or
xlat
stos
push
icebp
mov
out
mov
loopne
cmp
cmpsl
inc
mov
add
inc
int3
fdivl
sbb
pop
xchg
sub
fcom
andl
adc
fstpt
adc
or
lock
and
adc
dec
out
and
repnz
xlat
int3
pop
ret
mov
inc
mov
outsl
adc
call
sbb
das
pop
jl
fsubl
sub
jg
push
hlt
divl
dec
icebp
shrl
add
pop
stc
into
or
lods
or
mov
mov
xchg
sbb
mov
icebp
jns
xor
das
test
inc
ficoml
or
jo
das
fwait
test
std
jge
cmp
push
xor
pushf
sbb
push
xchg
fiadds
lcall
idivl
in
mov
adc
cmp
xchg
push
fnstsw
loopne
or
scas
mov
fsubl
jge
test
mov
dec
mov
add
gs
movsl
cmp
cmpsb
adc
xchg
inc
shrl
test
xchg
add
add
lock
loop
jecxz
popa
ret
into
pop
jp
mov
push
inc
xlat
stc
add
nop
mov
mov
push
ljmp
sub
loope
add
scas
in
mov
mov
ja
or
push
inc
loop
aaa
lahf
mov
lock
fstpl
lds
mov
and
jle
in
cld
or
xchg
xor
adc
mov
jge
mov
jge
mov
shl
sub
push
out
push
jge
sub
ret
pop
push
test
adc
subl
cmpsl
stc
icebp
dec
sbb
enter
sub
addr16
and
mov
mov
mov
popa
inc
lods
iret
or
sbb
gs
out
lret
loopne
sbb
stc
pop
repnz
imul
ss
jmp
jle
xchg
and
jle
or
sub
out
test
mov
ficompl
ss
gs
jg
xor
cmc
push
push
sbbl
pop
sti
jecxz
jecxz
iret
fimull
lods
test
gs
mov
lahf
add
mov
imul
or
leave
pusha
sarl
jae
insb
mov
cltd
cld
xor
mov
push
cs
pushf
and
fucomip
push
std
mov
jno
addr16
jg
xchg
jl
push
test
sbb
fwait
inc
out
sahf
xchg
out
test
and
sub
sub
mov
arpl
mov
in
mov
or
push
in
ficomps
out
je
or
sbb
and
xchg
mov
inc
mov
mov
xor
or
adc
jmp
sahf
xchg
popf
sub
mov
xor
adc
jg
jecxz
popa
mov
pop
cmp
cmp
movsl
push
popf
cmp
mov
adc
decl
push
push
jne
mov
xchg
scas
xchg
test
and
lea
mov
jne
insb
mov
shr
es
pop
pop
or
cmp
aam
fidivs
adc
mov
inc
jno
mov
push
lds
aam
in
xchg
mov
ret
or
pop
neg
ficomps
sbb
outsb
insb
adc
cwtl
mov
xlat
outsb
pop
sbb
xchg
dec
mov
dec
movsb
push
adc
popl
test
push
pop
js
int3
test
mov
fldt
mov
leave
xor
gs
pusha
mov
bound
jecxz
aam
cmovbe
jae
add
mov
mov
fistpl
stos
data16
mov
mov
mov
xor
sub
insb
xchg
lret
sbb
rcll
cwtl
hlt
inc
fldenv
mov
pusha
gs
dec
ds
push
rol
loopne
fmuls
jb
imul
pop
xchg
add
or
cltd
xchg
movsb
test
jp
inc
xchg
push
mov
xorb
xor
cld
gs
add
std
inc
or
outsl
repnz
jne
call
add
xchg
add
sbb
adc
rcll
jbe
cmp
pop
mov
push
xor
pop
int3
das
fadds
rcrl
dec
hlt
sarb
mov
push
iret
push
in
out
mov
push
cmpsl
sbb
mov
lock
rcr
jns
aam
hlt
jmp
mov
mov
pop
push
cmp
xor
popa
sti
cmp
pushf
adc
mov
pop
subl
or
ds
mov
out
pop
lahf
stos
stos
cli
xor
dec
pop
push
ss
inc
jbe
mov
cmpps
pop
in
or
sub
aas
ljmp
lcall
in
dec
scas
sub
pop
popa
add
xchg
jge
popf
sub
and
xchg
fcoms
xchg
mov
pop
jmp
inc
xrelease
cmp
shr
lret
xchg
dec
loop
in
repz
cli
lods
stos
mov
pop
inc
dec
loop
mov
mov
subps
aam
mov
sub
shrl
sti
dec
leave
xlat
mov
fildll
in
mov
test
or
xchg
popl
call
push
daa
pop
push
dec
sahf
sysenter
fldcw
xor
pop
pop
loopne
daa
inc
push
add
mov
cwtl
xchg
inc
mov
js
aaa
fiadds
push
jmp
push
adc
mov
mov
fildl
push
mov
lds
inc
mov
xchg
pop
inc
mov
icebp
sbb
lret
out
lret
sbb
adc
mov
jmp
ljmp
ja
adc
ljmp
pop
adc
stos
movsl
mov
xchg
insb
insl
dec
daa
cli
xchg
jbe
pop
iret
fisubs
xchg
pop
xor
shll
cmpsl
or
inc
fmul
push
out
sahf
ret
ja
cmp
pop
jb
stos
out
in
push
jbe
mov
sbb
test
sbb
push
ret
incl
add
shll
sub
in
dec
ss
push
test
cld
dec
or
sti
pop
xchg
jns
and
or
addr16
push
popa
icebp
sbbl
mov
movsb
aas
loop
stos
jbe
aam
inc
xchg
push
sbb
or
xor
inc
les
xchg
mov
add
data16
lahf
hlt
jbe
aam
push
repnz
decb
stc
fucomi
xor
push
xchg
mov
adc
loopne
dec
pop
pop
sub
mov
sub
jecxz
cwtl
add
push
in
sahf
jmp
pop
sub
sub
jl
sbb
popf
ret
stc
fwait
pop
cld
mov
inc
lea
imul
repz
sub
add
sbb
and
popa
sub
addb
cmp
jne
clc
push
jmp
mov
in
push
or
bound
jge
sahf
push
pop
inc
data16
fs
xchg
cmp
and
add
jns
loopne
jle
sub
mov
xchg
mov
lds
sub
jb
hlt
mov
or
mov
lods
test
sub
arpl
movsb
or
or
xorb
in
sbb
jb
mov
cmp
sahf
repz
fucomp
jl
outsb
adc
add
stos
dec
sbb
test
add
inc
push
xor
jae
sahf
adc
icebp
sbb
cmp
or
in
stos
cs
aad
adc
fbld
mov
out
popf
xor
mov
xorl
ss
jb
mov
cld
mov
aaa
push
push
mov
popf
xor
mov
inc
clc
sub
pop
jg
push
mov
or
xchg
add
outsb
faddl
jg
out
mov
inc
jnp
cmp
testl
lds
out
push
aaa
movsl
int3
sub
ds
adc
lcall
cmpb
mov
xor
and
and
push
fwait
and
in
add
gs
jno
test
test
in
mov
xchg
loopne
mov
cmp
and
xchg
xchg
mov
fwait
outsl
inc
adcb
mov
pop
xor
rcl
std
xchg
in
stos
repnz
stos
ljmp
or
sub
enter
imul
mov
or
adc
xchg
insb
pop
dec
sub
mov
loop
int3
sbb
add
into
cmp
loope
std
inc
stos
aam
adc
icebp
sti
push
push
mov
jmp
pop
sub
fucom
jge
fs
adc
in
and
xor
call
aas
xchg
mov
jecxz
sbb
push
sub
aaa
xchg
cli
push
jb
mov
aam
sub
dec
daa
jns
xlat
and
xorl
or
cli
add
int
push
sub
ret
xor
jmp
inc
popf
daa
mov
push
aaa
fsub
ja
in
adc
jbe
and
sbb
xchg
popl
fnstsw
mov
test
popf
or
sub
icebp
incb
add
sbb
or
mov
mov
mov
add
fdivs
jecxz
inc
mov
cmp
sbb
ret
filds
shlb
ret
xorb
rcrb
sbb
icebp
test
and
mov
pop
daa
mov
cli
daa
jmp
cltd
or
jg,pn
pop
sbb
test
xchg
hlt
mov
jl
inc
inc
xor
negl
mov
push
xchg
fldenv
test
xor
xor
rcrb
xchg
push
jl
pusha
xorl
push
arpl
jns
lds
popa
pop
ja
cmpsl
pop
xchg
sub
and
out
stc
clc
dec
stc
enter
xor
stos
ljmp
jecxz
jle
adc
cmc
mov
lods
lret
xchg
pop
adc
push
int3
mov
xchg
insb
sbb
dec
mov
cs
jns
inc
testl
stos
pop
hlt
lret
adc
push
stos
mov
popf
push
icebp
mov
xor
fadds
mov
aas
push
mov
sahf
push
xor
pop
pop
push
add
aad
push
nop
push
and
movsl
mov
or
js
test
xchg
outsb
jp
or
jg
push
mov
lock
jmp
mov
lea
inc
cmp
mov
cmp
leave
or
das
lcall
stc
movsl
mov
test
int3
pop
push
dec
cmp
in
in
popw
xchg
dec
and
pop
xchg
pop
rcrl
jp
mov
nop
dec
shrl
mov
push
movsl
fidivl
mov
xor
addb
lods
data16
loopne
jno
jo
lret
jbe
les
mov
jae
incl
jmp
sub
cmp
subl
jbe
lds
cmc
xchg
in
inc
and
das
sbb
sbb
movsb
stc
mov
hlt
mov
test
push
lods
and
adc
mov
sbb
cmp
arpl
or
adc
les
loopne
jmp
xor
pop
pop
add
js
push
cmp
ficompl
xchg
rolb
xor
mov
repz
lods
sbb
jns
dec
and
pop
dec
pusha
pop
cmpsb
xor
add
or
rorb
imul
aam
lahf
mov
ja
or
sahf
jo
and
adc
movl
fisubl
mov
add
lea
insl
shrl
push
adc
cmp
xchg
ss
cwtl
gs
ret
mov
ja
out
test
ss
test
pop
xor
adc
shlb
mov
scas
mov
je
mov
xor
sub
jg
push
lea
rcrl
popa
jmp
sbb
cmpsl
sbb
mov
into
and
aad
not
or
pop
aam
sbb
ja
xchg
cs
imul
inc
int3
loop
divb
xlat
ds
xor
xor
mov
pushf
loop
roll
nop
aam
pushf
out
mov
ss
fdivr
push
push
sbb
insl
pop
push
jle
jge
mov
es
dec
push
enterw
mov
cmc
xchg
pop
aam
jnp
sub
pop
or
movsl
sbb
pop
sub
pop
cmc
jl
data16
fnsave
dec
fldt
loop
push
imul
add
jmp
pop
loope
inc
ljmp
xchg
sub
ret
fs
pushf
jecxz
fcoms
loop
in
fmull
inc
int
mov
mov
cmc
sbb
xlat
mov
fdivp
push
cmpsl
clc
xorl
lea
adc
mov
mov
adc
dec
mov
orl
pop
pop
or
in
xor
dec
fisttps
mov
pop
sub
mov
inc
aas
dec
jns
jnp
xor
xchg
fcmovne
scas
mov
mov
arpl
and
aam
mov
add
insl
cmp
gs
fsubr
cld
push
outsl
cmpsb
lock
jae
add
inc
mov
sti
lea
lods
mov
aad
push
mov
cmc
and
lock
sbb
mov
or
cmp
mov
bnd
add
cmp
clc
add
dec
ljmp
cmp
cmc
cli
sarl
adc
push
sahf
mov
adc
sarb
ss
scas
xchg
mov
repz
pop
imul
loopne
cmpsb
sbb
divl
das
sub
sub
mov
and
outsb
jp
adc
int
jecxz
js
xlat
call
pop
sar
les
test
mov
or
insb
and
nop
loopne
jge,pn
add
xor
fcompl
mov
or
gs
sub
inc
sti
call
test
mov
adc
imulb
je
lds
in
dec
xchg
sub
inc
ret
add
pop
idiv
fidivs
cltd
jp
push
out
jg
jmp
inc
xchg
dec
cmp
in
sub
xchg
sub
lods
xchg
mov
dec
dec
loope
lret
out
fsubrp
pop
int3
jns
mov
jg
sub
imul
or
push
mov
dec
pop
pop
fwait
popa
mov
or
push
in
and
flds
jae
in
pushaw
or
fst
insb
iret
add
xor
bound
cmp
sbb
scas
test
sbb
pusha
jnp
pop
repnz
jns
jnp
jb
xor
push
nop
daa
push
push
mov
ficoms
push
movsl
jecxz
sahf
mov
rcll
jne
jmp
push
xchg
cmp
adc
cmpsl
clc
out
push
or
fnstenv
inc
sub
xor
pop
lea
dec
dec
pop
enter
aad
cwtl
mov
stc
cmpsl
lds
push
fcmovne
icebp
fucomip
stos
out
and
iret
mov
xlat
and
cmp
scas
subb
xchg
sub
xor
mov
jl
jecxz
lret
adc
sbb
popa
fmull
addr16
xlat
leave
jns
loop
or
mov
imul
sahf
mov
cli
lcall
sbb
jne
push
inc
lahf
dec
mov
lcall
lret
lods
inc
jne
xchg
add
nop
cmc
mov
fdivrl
jl
dec
aam
dec
lods
add
sbb
sarb
jo
jecxz
testl
arpl
dec
cmp
or
js
sbb
enter
ja
push
xlat
dec
popa
or
pop
cli
push
sahf
sub
jg
jae
subb
mov
pop
pop
int
sbb
and
adc
shl
in
stc
nop
push
sbb
les
call
jl
push
out
imul
cmp
adcb
jns
mov
sbb
xorb
ret
push
sbbl
adc
pop
push
lahf
lret
inc
test
dec
mov
insb
mov
xchg
inc
data16
cli
or
in
jae
fnstsw
sbb
or
inc
mov
jmp
xchg
aam
aad
jno
pop
es
mov
mov
mov
and
leave
mov
rcrb
or
mov
fs
fnstenv
mov
jo
jnp
aas
inc
leave
pusha
ret
xchg
dec
scas
xlat
push
outsb
pop
fistpl
je
les
sub
sbb
ror
je
rcl
dec
enter
movsb
loope
lods
or
push
xor
push
test
or
push
movsb
xor
mov
sub
cmp
adc
in
or
sbb
pop
fmuls
push
js
popa
lods
arpl
xor
add
mov
or
xor
insb
sub
scas
dec
jecxz
jno
sti
adcl
xorl
enter
addl
pop
pushf
repz
jge
rol
inc
addr16
jbe
ret
sub
adc
lods
imul
jbe
mov
cltd
pop
repz
pop
movsl
lret
xchg
lods
push
hlt
mov
cmp
in
xor
aam
subb
xchg
daa
jmp
addl
jno
jge
test
sbb
inc
dec
xor
jne
in
mov
int
test
cmp
popf
cltd
sar
out
fcmovu
and
pop
jmp
jle
xor
stos
cmp
dec
in
je
aas
push
lock
cmpsl
repnz
addr16
enter
mov
mov
orb
xor
data16
mov
jg
push
jo
adc
inc
frstor
mov
sbb
lret
in
int3
push
pop
ret
pop
jne
jg
or
frstor
dec
aaa
pop
xor
testb
nop
sar
push
push
mov
clc
dec
leave
jbe
sbb
and
int3
push
rol
jo
into
xchg
mov
mov
cltd
into
fisttpl
je
xor
mov
push
jns
pop
or
fcoml
cmp
push
mov
fidivrl
mov
fdivrl
dec
push
and
pop
shrb
add
pop
or
mov
or
jp
and
fdivl
mov
stos
mov
sub
fadds
in
popa
sub
andb
mov
addr16
mov
arpl
in
sbb
sub
sbb
hlt
add
ds
and
or
push
sti
stos
xor
adcb
sub
sti
out
call
ret
aas
and
jo
cmp
xchg
inc
push
add
pop
ss
cmp
mov
out
push
push
xchg
int3
out
xchg
pop
mov
ljmp
std
jns
cmpsl
pop
sbb
bound
or
cmpsl
xor
dec
mov
lcall
adc
loop
fcoms
xchg
inc
inc
add
les
sbb
pop
andb
pop
stos
mov
xchg
movsb
mov
push
loop
movsb
or
mov
das
frstor
mov
loop
mov
xchg
gs
jne
test
dec
inc
sbb
leave
cltd
inc
mov
clc
ds
sub
shl
out
adc
xchg
add
arpl
lock
inc
sbb
fsubrp
or
xor
scas
add
test
sbb
push
or
push
push
xchg
out
lcall
loopne
push
dec
dec
fldl
nop
lods
and
dec
cmpsl
ja
sti
mov
cmc
mov
scas
call
sub
leave
inc
fmuls
mov
clc
adc
inc
repz
xor
mov
mov
shl
rclb
add
sub
lahf
paddw
mov
lea
add
jnp
icebp
xchg
dec
jb
cmpsl
ljmp
add
lock
adc
or
xchg
inc
inc
jecxz
mov
jns
and
fidivrl
das
lret
jns
cmp
fwait
scas
push
or
mov
cmp
mov
sarl
xchg
sbb
or
adc
sbbl
pop
dec
push
fidivl
stos
cmp
std
push
es
out
mov
pop
dec
lea
lcall
cmp
dec
shll
out
out
and
ds
pop
imul
or
inc
pop
pop
out
shl
pop
cmc
push
cmp
jl
mov
jle
jp
dec
jecxz
adc
insb
dec
pop
out
sub
adc
mov
enter
mov
jne
xchg
mov
sbb
xor
pop
jmp
call
and
xchg
lods
mov
sbb
hlt
adc
mov
sbb
popf
mov
sbb
js
add
xchg
xchg
xchg
sbbb
mov
out
cli
arpl
mov
cmpsb
aaa
aas
add
add
in
stc
dec
add
jl
dec
out
push
popf
sbb
mov
movsl
pop
in
inc
adc
mov
rol
lods
out
mov
inc
iret
aas
imul
jecxz
jmp
pop
mov
pop
lret
in
repnz
push
sub
test
dec
pop
das
leave
and
jo
xor
push
adc
stos
sbb
enter
sahf
cltd
gs
mov
iret
data16
cmc
adc
push
mov
xor
ljmp
scas
or
push
inc
xor
shld
jle
xchg
mov
or
test
push
sbb
mov
xlat
adc
or
je
es
xchg
prefetchw
xchg
mov
pop
and
or
adcl
loopne
lret
sahf
mov
mov
subl
lods
aam
lods
ljmp
pushf
mov
adc
test
sbb
add
rorb
out
in
test
push
enter
repnz
push
push
ss
xchg
ss
popa
clc
in
xchg
mov
das
xchg
lods
sbb
pop
shll
pop
mov
or
lahf
addl
and
call
lea
lock
les
push
push
lock
gs
xor
and
and
pusha
push
or
fiadds
bound
adc
sti
xchg
es
insb
adc
cmp
mov
outsb
mov
pusha
test
mov
sarb
inc
lods
pop
mov
ljmp
sbb
lods
int3
lret
shrb
rorl
jl
jns
das
aas
adc
out
jge
sub
mov
push
push
sub
dec
movsl
enter
ss
inc
inc
xchg
sbb
xor
pushf
pusha
cmpsl
enter
dec
mov
ret
cmp
xchg
loopne
fsub
pusha
call
dec
and
xchg
push
add
popa
xor
in
fcomps
call
xchg
push
sahf
out
test
aaa
mov
int
or
cs
rorl
daa
cmp
pop
mov
cli
cmc
hlt
sub
jl
nop
jmp
and
inc
int
aaa
jno
or
bound
imul
fwait
push
fdivrs
addr16
in
stc
popf
or
or
inc
sbb
pop
xor
movsl
cld
or
xor
stc
ffree
out
inc
dec
imulb
ss
enter
shl
scas
cmc
mov
xchg
jmp
loop
add
imul
mov
mov
cltd
sub
dec
mov
and
shlb
lea
jb
xchg
xor
test
stc
inc
mulb
push
fwait
mov
pop
outsl
ret
fdiv
and
dec
mov
jge
ss
and
push
or
or
movl
push
out
ds
or
and
pop
sub
jl
pop
xor
inc
ret
pop
and
ds
pop
pop
lret
imul
lock
pop
and
outsl
movlps
push
shlb
shr
insl
xor
mov
fldcw
std
add
jg
pop
std
sar
inc
mov
addr16
in
push
lea
mov
out
sub
enter
mov
xchg
rsm
mov
mov
cmp
int
lret
jae
sbb
rcrb
stc
nop
sub
push
cmp
mov
out
mov
imul
push
mov
ja
pushf
xor
xorl
mov
mov
loope
ret
push
mov
mov
pop
in
cmpsb
gs
mov
daa
adc
inc
push
add
xchg
fidivs
adc
jae
fs
fldl
pop
add
and
pop
xor
mov
repz
sub
repnz
hlt
imul
push
cmp
pop
repnz
arpl
enter
fldlg2
push
adc
fidivrl
mov
sub
jbe
mov
gs
xchg
pop
das
pop
add
add
into
mov
loope
or
and
xchg
mov
jo
insl
imul
sbb
imul
pop
xor
cld
negl
mov
sub
sarb
mov
mov
fwait
push
and
jecxz
jnp
add
xor
mov
outsl
lods
cmpsb
push
pop
mov
or
orl
pop
fisttpl
ret
popf
xor
outsl
std
xor
sti
inc
test
adc
sbb
movsl
popa
mov
fiadds
or
fistl
or
stos
mov
gs
jno
inc
dec
ret
xor
mov
inc
or
gs
pop
pop
in
lret
loopne
mov
jae
push
ret
adc
pop
mov
mov
cmp
inc
stos
addl
cs
in
rorb
mov
fldt
mov
out
mov
imul
or
cmc
mov
or
mov
sbb
rcrl
pop
popf
jno
jno
sub
dec
add
das
mov
mov
and
shll
ror
push
and
jle
and
mov
push
jg
lea
mov
sbb
cmp
push
mov
sahf
sahf
ret
cmp
ds
sti
in
push
loopne
sbb
movsl
xor
pop
pop
xor
scas
inc
pop
je
subl
inc
jp
xchg
push
movsl
jg
sbb
pop
adc
inc
sbb
cli
inc
fisubrs
in
dec
gs
pop
and
sbb
mov
add
xor
xchg
scas
mov
push
stos
mov
fdivl
subb
rorb
sub
fists
leave
adc
sbbb
dec
lds
xlat
rcll
inc
iret
sub
sahf
xor
cmp
inc
mov
std
push
inc
stos
cmpsb
cmp
or
jmp
ret
cltd
fwait
or
and
xor
push
add
aaa
push
outsb
and
cmp
mov
push
add
aaa
movsb
or
sub
imul
fldt
or
xor
in
clc
mov
mov
add
mov
xlat
outsb
add
pop
xchg
shll
mov
jae
and
pop
loop
xchg
sub
add
jp
xchg
scas
call
cmp
pusha
aaa
paddq
gs
lret
rclb
decb
pusha
test
xchg
movsbl
ljmp
nop
and
jmp
lds
repz
scas
in
pop
sub
xchg
cmpsb
arpl
outsb
jecxz
insb
imul
xchg
insb
js
leave
sbb
add
pop
popf
pop
aam
push
jmp
pushf
dec
inc
rorl
xor
les
idivb
xchg
ret
outsb
jns
sbb
xor
enter
lret
lret
xchg
xchg
fidivrs
mov
jo
lcall
hlt
frstor
jnp
xor
fs
inc
mov
mov
push
sub
sbb
xchg
mov
push
jno
andb
popa
adc
cmp
mov
jnp
adc
xchg
cmp
leave
fxch
or
outsb
data16
adc
or
xchg
out
xor
negb
push
fildll
inc
mov
notl
notl
in
stos
mov
inc
sub
inc
mov
mov
je
jb
shll
dec
push
sbb
ret
daa
lcall
adc
or
xor
movsb
add
sub
and
into
fsts
aas
push
sti
adc
pop
and
lret
dec
loop,pt
pop
data16
adc
lds
mov
mov
daa
dec
mov
mov
jecxz
xchg
add
leave
jno
ss
lahf
jne
lret
imul
popf
pop
cmp
leave
ljmp
ja
jge
ja
pop
repnz
adc
in
sub
push
mov
or
and
jne
adc
jl
add
int3
dec
xlat
and
pop
cmp
and
pop
push
fisubs
stos
dec
sub
jbe
lods
xchg
push
ljmp
mov
dec
and
std
mov
scas
fisubrl
fsubrs
scas
push
and
inc
dec
xchg
mov
sub
inc
aam
jg
or
movsl
pushf
mov
jecxz
pop
push
int
insb
scas
into
ja
into
aam
cmpsb
das
movsb
cs
pop
xchg
mov
stos
outsb
xor
clc
aaa
pop
jg
and
cmp
sub
and
fidivrs
pop
push
iret
cmpsb
pop
je
inc
idivb
dec
dec
loopne
dec
sarb
test
fisubrl
scas
xor
mov
push
xchg
add
pop
inc
or
push
aaa
lcall
sbb
mov
div
in
adc
fwait
cmp
xor
cmp
jns
dec
dec
dec
ljmp
push
mov
int3
stc
test
fnstsw
or
sub
xchg
mov
loopne
cwtl
mov
mov
sbb
push
jno
pop
in
ret
test
fnstenv
cmpsl
sub
lahf
jne
mov
stos
mov
fdivl
push
in
adc
pop
inc
cli
jl
cmp
mov
dec
loopne
and
adc
aam
call
hlt
movsl
idivb
into
adc
adc
or
data16
pop
sub
imul
xchg
adc
xchg
inc
jecxz
inc
movsb
repnz
pop
movsb
stc
mov
mov
add
jnp
shrb
pusha
hlt
push
cltd
out
jmp
dec
daa
jo
push
test
fdivs
add
fadds
add
pop
dec
fidivrs
xlat
mov
sub
cmpsw
subl
rorb
push
mov
arpl
ret
mov
mov
mov
adc
mov
sbb
sub
imulb
add
lret
call
cld
fs
sub
out
test
and
mov
bound
das
popa
scas
nop
mov
fidivl
ds
insb
and
sbb
fsubl
stos
jne
push
pop
movsl
cmpl
ja
aam
push
gs
cmc
inc
or
mov
cmc
sti
xchg
ja
xchg
fiadds
add
dec
out
push
sbb
push
imul
popf
xor
dec
addr16
daa
call
push
out
pop
jecxz
iret
iret
fstpt
sbb
mov
mov
in
dec
add
cmpsb
imul
rclb
adc
addr16
aaa
cmp
cs
xor
jg
and
nopl
adc
xchg
mov
das
stos
push
cmc
jne
add
mov
add
orb
or
shlb
pop
sub
sar
dec
mov
enter
mov
insb
scas
push
push
pop
dec
push
push
xor
test
out
sahf
and
call
mov
cmpsb
xchg
dec
divb
and
cmp
filds
lods
sub
inc
cmpl
mov
jmp
cmp
push
lea
jo
sub
fnstenv
sti
test
xlat
out
add
sbbl
pop
sbb
xchg
cmp
mov
push
ljmp
mov
cli
bound
and
shrb
pushf
mov
das
mov
and
rcl
mov
push
sahf
xor
inc
sahf
inc
mov
pop
ja
ret
shll
jb
pusha
xor
cmp
shlb
movsl
aad
xchg
push
icebp
aas
cmp
push
test
mov
pop
and
adc
lcall
jo
mov
dec
es
aad
cli
out
fiadds
lea
dec
mov
lret
sub
dec
fists
fistpl
icebp
loope
pop
lods
pusha
lock
xor
add
xor
mov
cmp
sub
or
test
xor
or
daa
cmp
add
inc
dec
dec
out
sbb
pop
iret
aas
dec
and
in
test
imul
push
or
iret
or
pop
test
dec
jl
push
xlat
dec
lret
ret
scas
add
pop
cmp
notb
dec
ret
out
fsubr
mov
cmpsb
mov
sub
or
mov
dec
jecxz
sahf
mov
dec
mov
addr16
pop
sbb
jbe
fsubr
push
dec
arpl
ljmp
cmp
ds
xchg
pop
loop
mov
mov
repnz
in
aam
mov
arpl
into
and
into
imul
mov
dec
popa
xor
push
jne
mov
adc
xchg
pop
jmp
and
lret
pusha
fcmove
lods
aam
inc
pop
adc
dec
fdivrp
mov
adc
add
xor
cmpb
pop
jp
test
pop
jmp
mov
mov
repnz
sbb
stc
jl
lds
and
or
shl
imul
adc
scas
inc
lods
push
dec
adc
jbe
xchg
sbb
or
notb
pop
jns
or
ljmp
sbb
cmp
test
orb
xchg
pop
inc
or
mov
jne
outsb
or
xchg
jnp
xchg
push
xor
lods
cltd
or
mov
xchg
mov
lret
imul
jl
ret
and
popa
loop
mov
mov
add
jbe
je
jnp
icebp
inc
inc
inc
mov
into
fisubs
fsubrs
dec
scas
popa
or
jp
cmpsb
sub
loopne
mov
aad
and
add
sbb
lret
adc
xor
nop
xchg
jae
stos
gs
int
fs
and
jmp
inc
mov
push
cltd
fbstp
ret
add
xchg
xor
stos
cli
push
push
xor
mov
icebp
inc
ds
and
mov
push
addr16
lods
cmp
or
cmp
fwait
lcall
out
dec
inc
and
mov
out
lret
addr16
mov
add
mov
mov
sbb
pop
jbe
fdivrs
imulb
data16
nop
jge
mov
xchg
mov
sbb
push
and
subl
std
gs
lock
inc
add
shrb
loopne
das
push
inc
aas
cmp
std
arpl
add
adc
xchg
mull
into
pop
ret
mov
cmp
aad
pop
mov
add
sbb
xchg
bound
add
pushl
xlat
lcall
pushf
mov
xor
add
xor
fldl
mov
fnsave
jmp
scas
cmp
cmp
out
cmp
enter
stos
lret
xor
shrb
push
sub
xor
jge
rcrl
and
mov
mov
mov
sub
pop
adcb
mov
xchg
xlat
sub
or
or
shl
sbb
icebp
and
pop
mov
movsb
icebp
sbb
test
mov
dec
xor
mov
addr16
jne
data16
adc
cmp
jo
lret
inc
jecxz
push
icebp
lret
dec
pop
gs
bound
outsb
dec
add
push
je
xchg
jne
mov
sub
flds
clc
ret
inc
shl
sbb
inc
lock
jg
lret
fs
loope
mov
lock
lods
push
jae
gs
xor
inc
scas
popf
push
je
jmp
adc
add
negl
imul
cmpsl
add
rcrl
mov
and
push
popf
jns
add
mov
clc
xchg
hlt
loopne
sti
inc
pop
cmp
cmc
lea
jbe
xor
add
cmp
pop
in
inc
into
push
or
xchg
jp
jmp
cmp
lcall
xor
jmp
repz
mov
shlb
loop
xchg
jge
and
das
sbb
mov
rorl
pop
push
negb
push
fisubs
insb
nop
gs
and
sub
std
push
out
or
sub
xor
push
jo
mov
pop
imul
aam
pop
cmp
cmp
pop
inc
jmp
fisubs
in
cmp
mov
loop
out
sub
jle
loop
adc
popa
adc
int3
push
jbe
pop
data16
fwait
insb
jne
cmp
sbb
xor
iret
leave
push
scas
xor
mov
scas
push
jne
or
sbb
test
inc
aas
xor
jne
cli
pop
push
mov
add
jg
and
fidivrs
lock
and
mov
enter
sbb
pop
mov
scas
sbb
adc
cmp
popa
or
nop
ds
pusha
xorb
and
addr16
push
push
stos
jmp
dec
or
and
dec
mov
push
mov
adc
xor
jnp
ret
insl
mov
adc
mov
leave
sbb
out
loop
cmc
mov
mov
rcll
insl
sbb
and
cmpsb
inc
fisttpl
into
fmull
iret
daa
ljmp
and
jmp
or
imul
das
or
outsl
add
aaa
dec
add
loopne
sbb
add
daa
xor
scas
and
jae
aad
mov
or
popf
stos
or
jb
repz
mov
outsl
scas
xchg
popf
adc
movsl
sub
inc
xchg
push
aaa
mov
or
mov
imulb
cmpsl
xlat
insl
adc
lds
imul
cmp
add
xor
lods
xor
xchg
sbb
inc
fnstenv
cmp
mov
sub
inc
lret
test
cmpb
ror
push
pop
out
jbe
jae
push
cmp
pop
mov
packsswb
mov
mov
aad
enter
push
repz
xchg
aad
cmp
push
mov
cmc
adc
xor
int
add
jnp
adc
cmpl
sbb
fs
cmp
enter
pop
repnz
adc
cld
outsl
push
ficoml
test
movsl
imul
lds
mov
movsl
ja
xchg
sub
repz
dec
out
popf
hlt
pop
stc
je
sub
or
jmp
cmp
jge
xchg
dec
mov
in
push
sub
out
in
mov
xchg
negb
dec
repz
fs
movsl
add
es
pop
out
jo
jge
lahf
mov
sub
pop
fistl
lods
jmp
dec
cltd
popf
mov
imul
mov
aas
loop
pop
test
mov
sbb
cmp
ret
sub
and
aad
sbb
addr16
push
test
mov
jmp
imul
fbstp
or
push
lods
or
add
pop
and
test
in
scas
or
pop
mov
add
or
cwtl
or
out
jmp
push
shl
andl
pop
sar
push
test
negb
cmpsl
sti
rol
lea
xchg
jp
jp
mov
dec
stos
and
int3
movsl
test
inc
push
cmovns
push
pushf
or
fdivs
dec
cmp
push
jg
cmp
jle
mov
in
mov
adc
movsb
loope
pusha
jmp
cmp
push
shll
dec
loopne
lds
pop
fwait
repnz
sbb
xchg
out
and
cmpsl
les
arpl
pop
mov
cmp
xchg
pusha
jge
cmp
jno
pop
popf
aaa
jbe
mov
scas
push
fcmovne
pop
mov
loop
test
test
dec
mov
out
add
or
add
xor
fisttps
stc
orl
mov
xor
xlat
fiadds
dec
arpl
in
push
push
xchg
aas
mov
addr16
imul
add
add
mov
xchg
fbld
mov
inc
xchg
data16
add
loop
lods
sbb
je
pusha
adc
test
dec
inc
into
sbb
jne
mov
ljmp
mov
data16
icebp
mov
mov
daa
outsl
mov
or
sbb
add
repnz
int3
cld
jb
test
cmp
xchg
pop
dec
ret
popl
sarb
ret
das
pusha
in
cmp
xchg
aas
pop
aaa
cmp
dec
mov
or
cmp
incb
das
fcmovb
pop
shlb
imul
cmp
hlt
sti
aam
sub
push
ja
outsb
push
dec
outsb
repz
sbb
cltd
mov
inc
lret
mov
sbb
push
in
pop
imul
sub
sbb
stos
jo
adc
gs
adc
es
jnp
jae
pop
xchg
stos
xor
bswap
sub
add
std
leave
mov
jno
lods
test
int3
rorb
aas
das
dec
adc
mov
inc
ja
or
popa
add
ret
loop
add
push
jno
jmp
arpl
shll
pop
push
push
sub
mov
sbb
and
add
sbb
mov
cmp
test
jae
enter
in
jl
mov
stos
rcrb
ja
add
pop
xchg
fdivl
mov
dec
push
push
loopne
pop
adc
movswl
adc
cmp
inc
pop
shrl
pop
repz
push
cs
push
movsl
jle
out
ljmp
adc
in
push
test
mov
cmp
or
jge
in
popf
cmpsl
pop
push
int
std
or
fcomp
rorl
cmp
aad
inc
push
dec
stos
jne
out
xor
out
ret
cmp
mov
insl
out
or
xor
movsl
sarl
cmpsl
cmp
int3
hlt
cli
sti
push
inc
mov
and
loope
int
lahf
stos
mov
insl
sbb
insl
roll
pop
pusha
stos
aad
lret
jg
ret
mov
and
inc
mov
shlb
xor
mov
and
inc
jb
in
cmpsb
add
mov
xor
sahf
cli
xchg
rclb
sbb
js
lret
push
push
jge
cmp
mov
mov
xor
repnz
dec
outsl
add
and
mov
test
gs
add
xchg
xchg
in
mov
mov
xor
ret
punpckhbw
lods
inc
mov
push
int3
adcb
mov
hlt
adc
in
rol
pop
add
outsb
jl
cmp
mov
pushf
mov
cmp
imul
mov
shll
imul
andl
test
scas
sbb
cmp
cs
mov
push
lock
fbstp
jnp,pn
fdivrl
push
sbb
and
push
call
je
cmpsb
ds
adc
scas
lds
daa
inc
push
lcall
mov
add
out
cmpl
insb
rcll
jecxz
or
shll
fnstcw
mov
out
or
mov
jg
jle
adc
xor
gs
dec
adc
sub
jne
sti
inc
xchg
aas
outsb
mov
mov
add
and
sub
pop
adc
jbe
stc
add
xchg
rclb
cmpsl
ret
inc
fsubrp
mov
in
leave
xor
scas
dec
aas
dec
fbstp
and
shl
sub
or
test
out
out
inc
sbb
into
gs
cmp
test
sbb
fldt
in
pusha
jo
test
out
mov
jp
pop
repnz
add
mov
mov
mov
mov
inc
data16
lret
or
and
jmp
test
add
inc
push
ficomps
into
dec
sahf
aas
pop
jo
cmp
insb
outsb
notl
inc
stos
jmp
imul
adc
imul
mov
in
imul
popa
fwait
xor
mov
lods
popa
test
and
xchg
ss
je
es
rcl
lahf
sbb
rcrl
pop
hlt
pop
enter
inc
jnp
mov
dec
mov
out
adcl
in
lahf
lea
fidivrl
out
insl
sti
jg
inc
lea
cmp
fs
cmc
dec
subb
in
mov
scas
inc
fistl
dec
mov
mov
imul
mov
cld
out
or
jo
sbbl
scas
sub
outsl
das
inc
xchg
inc
add
into
in
addr16
cwtl
push
xor
cmp
mov
in
aad
jno
in
lcall
mov
or
mov
inc
lods
stos
add
das
sbb
push
xor
xor
adc
lret
mov
js
mov
aas
dec
imul
inc
lret
stos
cmp
cwtl
mov
roll
out
xor
lods
test
movsl
repz
aas
pop
iret
pusha
dec
pop
pop
push
shrl
out
mov
inc
jecxz
inc
lods
pop
ss
pop
fistl
in
lods
pop
and
aas
or
in
mov
lahf
cmp
push
pop
or
nop
icebp
xlat
test
ds
sbb
mov
outsb
pop
movsl
cmp
xchg
out
iret
mov
push
sbb
mov
fistpll
loope
xchg
sahf
jno,pt
mov
movsl
cmpsb
dec
jg
push
imul
pop
xor
pop
enter
mov
push
push
mov
xchg
out
lods
dec
lock
fwait
scas
ficoml
addr16
movsb
xchg
or
inc
and
jb
hlt
cmp
add
pop
mov
les
or
mov
sbb
inc
cltd
add
lret
and
in
pushf
mov
cmpsl
out
xchg
or
pushf
inc
imul
aad
mov
test
dec
bound
loop
sbb
outsl
cmp
jmp
mov
xor
pushf
insl
dec
mov
stos
dec
dec
sbb
mov
dec
jl
mov
push
movsb
in
xchg
inc
jl
int3
mov
pushf
add
scas
jae
sbb
mov
cmpsl
adc
xor
rol
jl
int3
rorl
push
mov
outsb
push
mov
and
and
test
pop
scas
repnz
ja
mov
and
sbbl
ror
mov
cmp
hlt
insl
add
mov
sbb
sbbl
out
and
push
lds
into
jge
add
ret
sahf
and
dec
and
pusha
les
cmp
xchg
inc
fwait
popa
lret
stc
arpl
sarl
sub
push
sub
sbbl
or
mov
lock
in
test
jb
pop
divl
es
mov
jmp
or
ret
mov
and
adc
jbe
in
mov
js
dec
adc
add
daa
or
pop
cmp
out
js
shrl
fisubrl
or
dec
loope
mov
push
hlt
mov
pop
call
or
mov
les
data16
mov
lds
mov
imul
xchg
pop
sub
pop
dec
xchg
std
std
enter
and
xor
ss
mov
or
xor
insb
andb
dec
pushf
out
cltd
dec
pop
sarb
mov
sub
imul
ds
fnstenv
sbb
mov
push
out
jge
rcll
scas
jno
pop
in
int3
and
lods
lds
mov
gs
iret
dec
push
in
cmpb
mov
jb
addr16
scas
and
mov
std
sub
div
mov
adc
ds
adc
fnstcw
pushf
sub
cld
add
negl
outsl
adc
pop
popf
mov
ret
and
les
int
xor
add
test
insb
sbb
mov
or
cmp
testl
aas
push
adcb
jmp
or
fnstcw
ss
ja
inc
push
or
lods
xchg
adc
xchg
sbb
gs
add
xor
sbb
lret
sub
pop
in
pop
fdivrp
cs
cmp
in
xchg
xor
cld
xor
xchg
jl
cmp
das
sub
cld
mov
adc
imul
popf
stos
mov
adc
cmp
jbe
insl
pop
push
sub
addr16
jne
mov
dec
jecxz
adc
rorb
pop
faddl
push
repz
pop
ret
inc
outsb
lds
sarl
dec
jmp
or
inc
or
rorl
mov
mov
data16
ds
dec
mov
and
add
aad
pop
xchg
adc
or
movsl
xor
sbbl
inc
adc
aam
cltd
aaa
cmp
in
mov
mov
mov
dec
xchg
lds
out
imul
cmp
push
leave
je
pop
jae
cwtl
insl
test
add
rolw
insb
jle
jb
push
sub
adc
mov
testb
xchg
push
mov
or
aas
pusha
ficomps
filds
inc
xor
repnz
cmp
add
inc
shrb
mov
adc
je
mov
aam
shl
ret
sbb
aaa
pop
sub
mov
or
lcall
leave
sub
cmp
cmp
push
pop
xrelease
cwtl
cmp
add
mov
xor
mov
in
push
dec
push
xchg
cs
jo
call
inc
dec
imul
fs
rclb
xchg
mov
xor
xorb
ficoms
out
popa
push
mov
test
mov
xlat
mov
or
sub
lret
jae
xchg
sub
mov
mov
loope
enter
pusha
mov
jno
push
push
outsl
popa
xchg
scas
push
cmp
xchg
jp
int
popf
mov
das
in
arpl
js
mov
nop
cltd
and
sub
outsl
ret
pop
or
cmp
dec
pop
mov
cmpsl
fistps
add
mov
lret
lret
xlat
sub
pop
and
inc
mov
mov
ss
mov
push
and
dec
lods
dec
inc
fstps
or
lds
pop
push
inc
adc
mov
jecxz
pop
mov
pop
mov
push
and
movsb
jns
fildll
ljmp
cmpps
test
data16
jae
test
add
or
fists
xor
gs
loope
mov
push
addb
push
in
xor
ret
popa
ss
push
push
iret
mov
int3
cmc
mov
cmpsl
inc
pushf
andb
cs
mov
pop
sti
repz
push
or
ret
cmp
arpl
pop
mov
sub
in
in
push
push
jp
mov
adc
push
insl
push
addr16
out
lcall
mov
push
in
jnp
lret
mov
add
mov
dec
in
pop
stos
add
shlb
in
pop
rolb
imul
out
push
dec
xlat
cld
mov
jns
out
mov
into
loope
out
mov
test
rcrb
sbb
cmp
xlat
outsb
mov
dec
add
cmc
adc
push
int3
pop
dec
mov
shr
pop
idiv
or
in
mov
dec
iret
iret
pop
sub
xor
push
lods
mov
hlt
in
inc
lret
dec
lock
mov
add
push
loop
std
adc
ds
fidivs
adc
repz
ja
mov
ds
adcl
fcoml
push
lret
lods
inc
icebp
mov
jno
stos
dec
sub
pop
xchg
sub
sub
adc
sbb
ret
inc
fisubl
or
ss
or
jo
out
daa
adc
pop
jp
adc
jbe
out
arpl
mov
mov
in
movsb
es
push
pusha
es
fildll
push
or
out
push
cmp
cld
cmp
push
fisubrl
push
push
shll
out
push
push
test
cs
pop
add
jmp
xor
push
fidivrs
mov
pop
dec
dec
jle
pop
xlat
jg
int3
test
xchg
inc
jno
decl
jns
insl
jae
xor
mov
ss
pushf
inc
push
lods
push
mov
subl
cmpsb
lock
add
shll
hlt
mov
cmp
mov
add
setp
cmpsb
mov
je
dec
aam
lds
lock
popf
adc
xor
jae
cmp
jno
mov
lds
jle
fmuls
sbb
xor
cmp
jle
fstpt
jnp
mov
mov
lock
jge
stos
push
jge
arpl
push
sub
or
lods
dec
mov
lret
iret
test
xor
or
dec
mov
ret
cmp
jbe
mov
outsl
fwait
sti
rorl
in
adc
sbb
push
jecxz
cmc
sbb
inc
fcoms
int3
int
loop
mov
arpl
push
add
pop
xchg
mov
out
xor
mov
ljmp
pushf
mov
jge
push
test
pop
mov
lods
push
sub
jnp
dec
jmp
pop
ret
or
movsl
mov
into
and
cmp
data16
imul
add
mov
xor
mov
iret
mov
cs
mov
mov
pusha
adc
or
fstpl
gs
pushf
jb
or
mov
inc
lcall
xor
call
and
mov
cltd
xor
mov
mov
inc
cmp
or
fwait
setne
inc
fsubs
loop
mov
add
fnstenv
ret
xchg
cwtl
mov
pop
pop
or
cld
pop
push
mov
testb
pop
jae
pop
divb
shlb
arpl
lods
movsl
test
sub
test
lock
jp
xchg
sub
insb
mov
repz
dec
sub
mov
mov
jno
lret
rcrb
mov
ror
xor
inc
xchg
fldcw
mov
es
cmp
fmul
cmp
in
mov
adc
lcall
push
sub
ja
and
mov
mov
jge
sub
je
adc
xchg
cs
movsb
jecxz
lahf
push
call
jge
ja,pt
stos
cs
push
outsb
xor
testl
out
and
movl
dec
test
lret
jmp
push
or
and
sub
lock
jmp
pop
lds
add
outsl
mov
sbb
sbb
mov
shr
inc
sti
cmpsb
lock
sub
leave
in
mov
sub
adc
cmp
hlt
dec
dec
mov
outsb
ret
arpl
and
or
js
aas
xchg
mul
sbb
jl
and
or
int
mov
addb
mov
pop
cwtl
pop
std
xchg
xchg
cmpsb
les
mov
or
lret
data16
movsb
push
mov
pop
xorb
mov
jns
ret
dec
call
into
mov
xchg
outsl
pushf
popa
dec
mov
out
jns
hlt
or
jle
mov
pop
dec
out
jmp
push
pop
in
xchg
push
incl
and
insw
sahf
bound
jle
mov
ficompl
icebp
fwait
mov
loop
and
mov
insb
mov
mov
jge,pn
sbb
push
insl
loop
push
and
xchg
loopne
movsb
sub
into
movsl
xchg
sbb
sub
jno
pop
xchg
adc
lret
push
imul
push
add
movsb
xchg
cmp
jg
lods
fidivs
call
push
jns
testl
pop
sub
test
aaa
pusha
call
mov
cmpsl
push
std
test
lods
imul
mov
notb
add
inc
fldcw
das
dec
pop
popa
sbb
push
jle
jecxz
sub
in
pop
pop
inc
mov
jge
pushf
into
push
or
mov
pop
push
sbb
mov
dec
int
incb
push
pop
sti
sbb
rorb
adc
jns
fimull
jnp
mov
movsl
ret
sub
fwait
stos
fs
add
mov
dec
mov
jge
addr16
pop
mov
sub
xor
loop
and
or
jg
inc
cld
push
pop
and
ljmp
ja
xor
pop
bound
pop
push
sub
xchg
cmp
sub
popf
bound
arpl
mov
dec
inc
daa
cmp
imul
xor
cmp
jnp
inc
inc
push
add
movsl
and
lock
mov
loope
or
fnstcw
iret
sub
pusha
pusha
notl
incb
xchg
xor
adc
sub
icebp
dec
xchg
inc
dec
pop
dec
pop
lock
fisttpl
cmc
mov
pop
ljmp
mov
movsb
mov
dec
inc
add
jmp
adc
int
push
pushl
popf
stos
mov
arpl
and
out
inc
xchg
inc
cwtl
mov
push
cmp
sbb
push
and
sbb
mov
outsl
xor
mov
add
mov
mov
sub
out
inc
out
out
inc
in
add
les
sub
sbb
out
add
call
test
add
loopne
mov
cmp
in
aas
cltd
mov
pop
xcrypt-cfb
cmpsl
mov
mov
sar
push
mov
es
mov
dec
lret
call
divl
lock
sahf
ljmp
jge
aas
flds
jmp
outsl
ficoms
xchg
lods
sub
jl
mov
lods
scas
jge
enter
mov
xchg
sub
repnz
imul
shr
cmp
xchg
adc
dec
sbb
addr16
xor
cmp
cwtl
add
mov
mov
xchg
pop
or
shlb
imul
dec
add
xor
outsl
ja
mov
mov
mov
lds
pusha
jp
pop
pop
out
jg
movsl
ret
pop
jmp
cmpsb
xchg
mov
lret
scas
aam
fcomp
mov
sbb
out
jbe
in
pop
sbb
fstps
pop
sarb
push
lcall
or
sbbb
mov
fs
in
pop
ret
cmc
adcb
xchg
cmp
addb
mov
fisttpll
ds
outsl
fcomp
xchg
jne
sbb
sbb
pop
mov
pushf
sub
sub
es
sbb
jmp
call
mov
shlb
add
out
xor
adc
pop
pop
cmc
sbb
repz
mov
insb
roll
shl
fbld
addl
call
dec
xor
lahf
fwait
sbbb
xchg
out
sbb
ljmp
push
jmp
or
cmp
fcomps
int3
scas
mov
and
and
mov
ret
lahf
div
push
pop
mov
or
call
cmp
sub
or
xchg
rcl
jl
movl
add
pop
jb
sbb
mov
loopne
iret
lock
mov
dec
js
shr
or
aaa
cmp
fsts
pop
shll
in
in
mov
fs
es
mov
dec
sti
sahf
cmpb
int
dec
jle
repnz
sub
rcrl
and
pop
mov
cmpsl
and
add
lods
dec
pop
sahf
pop
ss
ds
adc
mov
mov
ret
iret
fcmovnbe
dec
enter
xchg
in
adc
insl
testb
es
xchg
pop
dec
in
add
test
mov
int3
loope
push
test
gs
enter
mov
aad
sbb
mov
std
je
cs
xchg
dec
and
xchg
dec
mov
push
fdivs
push
mov
test
addb
pushf
leave
andl
adc
and
xor
fwait
movsb
xchg
mov
adc
es
add
repz
xor
jnp
popa
fiadds
xchg
fsubs
cmpsb
sbb
jo
xlat
sub
es
or
adc
cli
sub
cmp
int
pop
jns
pop
popl
jle
sub
add
jae
mov
imulb
mov
jp
jmp
fwait
rcrb
sbb
xchg
pop
and
mov
ret
mov
mov
adc
inc
repnz
pop
cmp
lret
sub
pop
xchg
call
shll
jb
cltd
mov
jp
mov
inc
cmp
mov
adc
pop
inc
mov
negb
add
fidivrs
pop
xor
jmp
ret
pop
aaa
fsts
into
fucom
jo
movsb
adc
pop
incl
ljmp
mov
xor
xor
xor
mov
loope
inc
push
popf
jbe
in
int
iret
popf
loop
scas
inc
jbe
fcomip
adc
lcall
repnz
fwait
sti
cmpsb
div
daa
aad
pop
adc
push
fs
scas
xchg
jge
nop
sbb
dec
dec
loopne
fisttpll
mov
daa
mov
add
cmp
arpl
movsb
pop
dec
lret
mov
es
sub
test
leave
int
iret
test
push
dec
mov
subb
shrl
or
push
test
mov
lea
cmp
jns
popf
dec
sbb
popf
fwait
dec
fs
andl
mov
cmp
or
loope
dec
cmp
dec
nop
and
mov
jmp
loope
mov
fcoml
jbe
mov
sub
filds
movsl
data16
shrl
pop
xchg
call
adc
xor
mov
mov
fld
xor
ficoms
xor
je
jbe
js
inc
xchg
dec
add
lock
das
push
mov
push
mov
fsubrl
sbb
xchg
mov
mov
sub
jbe
ds
sub
cmp
shlb
nop
outsl
xchg
pop
jno
and
das
cmpsb
bound
sahf
jge
outsl
insl
mov
mov
mov
inc
je
hlt
jo
insb
daa
mov
mov
jne
cmp
inc
outsb
mov
inc
stc
inc
loop
xchg
lahf
mov
in
cltd
je
adc
cmp
push
push
add
jecxz
inc
push
push
daa
je
in
push
mov
outsl
call
jge
inc
loop
mov
call
push
insl
and
addr16
lret
xchg
add
mov
jne
mov
mov
rol
push
ret
pop
into
enter
mov
insb
inc
out
xchg
fistpll
sbb
into
gs
jne
xor
mov
jl
push
ret
bound
negl
call
test
cmp
loopne
rcl
fildll
leave
or
cwtl
jbe
test
sbb
lcall
adc
insb
jnp
imul
cmp
mov
push
aaa
aas
cmp
aas
mov
jbe
das
lds
cmc
call
pop
sbb
mov
dec
inc
mov
and
repnz
inc
ja
xorl
nop
mov
mov
add
arpl
in
fstpl
cmc
mov
ret
mov
das
in
stc
jmp
es
xor
push
ss
gs
cmp
or
or
imul
mov
sbb
outsl
ja
cltd
jne
xchg
xor
push
ja
jmp
xchg
xor
and
mov
data16
das
mov
gs
dec
in
pop
push
fists
inc
push
subb
mov
popf
add
and
mov
adc
scas
scas
xor
xor
inc
and
lds
push
sbb
ffree
xor
incb
jecxz
jp
lret
sub
loop
push
sub
sahf
cmpsl
adc
pop
mov
repnz
inc
xchg
mov
leave
dec
xchg
push
mov
aad
in
mov
out
mov
jle
out
sub
add
and
jge
nop
cld
stc
je
ds
pop
in
out
stc
mov
mov
in
xor
pop
jne
adc
fstpl
std
adc
movsl
mov
mov
fsubr
inc
pop
lahf
push
xchg
xchg
into
mov
bound
push
lret
pop
add
dec
sub
cmp
aas
pop
sahf
or
lahf
mov
sbb
loop
mov
lods
push
les
jnp
xchg
mov
shl
shl
lock
or
cmc
inc
push
cmp
push
pop
repnz
mov
push
fisttpll
enter
mov
jge
ret
push
push
roll
xor
mov
fcompl
xor
jmp
or
dec
sbb
add
fidivs
outsl
dec
loop
jle
inc
mov
lods
dec
add
es
flds
jns
inc
es
add
xchg
shlb
jge
out
call
or
push
pusha
cli
or
sbb
sub
imul
mov
mov
shl
sbb
bound
movsl
aad
lock
mov
test
fs
scas
shrl
sar
xchg
xlat
stos
inc
sbb
sub
and
cmp
inc
cs
cmpsl
mov
and
mov
std
xlat
test
push
push
dec
cmpsb
mov
cmp
mov
sbb
push
pop
pop
call
mov
jle
push
mov
insb
int3
xor
xchg
sub
mov
jl
sub
dec
mov
out
mov
xchg
inc
xchg
cmpsl
je
bndstx
dec
cs
stc
or
sub
sub
imul
inc
scas
pop
test
and
xchg
insl
fdivl
xor
pop
mov
mov
dec
ds
enter
or
shrl
or
pop
and
das
add
stos
xor
pop
inc
lcall
push
xor
xchg
sub
mov
jnp
xor
sbb
inc
xchg
mov
imul
cmp
mov
xchg
or
xor
push
add
add
sub
nop
cwtl
aas
push
inc
cmp
or
jnp
inc
fsts
jl
xlat
ss
lods
dec
shrb
arpl
and
test
sbbb
loop
loopne
test
lock
push
outsl
js
add
fcomps
jae
mov
in
test
xchg
xor
push
out
inc
std
clc
mov
mov
sbb
enter
lods
and
aam
ljmp
fistps
push
push
rep
sbbb
sbb
jno
xor
les
clc
lods
sbb
jecxz
jmp
ss
lret
daa
mov
aas
int
dec
ljmp
push
stc
jae
jecxz
mov
lret
mov
mov
jo
pop
mov
aaa
jbe
pop
adc
loop
xchg
orl
mov
ss
ja
mov
ss
add
hlt
sub
sbb
jmp
in
lahf
int3
and
ljmp
sbb
and
jbe,pt
push
das
pop
adcb
pop
popa
arpl
jae
add
mov
jp
pop
out
sub
mov
jmp
out
addl
xchg
mov
jge
inc
add
cltd
test
loop
jae
call
sahf
gs
cld
mov
mov
mov
or
lds
inc
pop
pop
test
popf
mov
cltd
sub
and
mov
data16
inc
cwtl
xor
sub
sarl
ds
fists
test
aad
test
sub
cmc
sub
xor
push
mov
xchg
adc
mov
push
arpl
fucomp
xor
adc
push
xor
dec
shrl
in
pusha
jmp
ret
pop
daa
adc
test
mov
pop
xor
xchg
or
cmpl
jmp
fcomps
icebp
fisubrl
add
adc
xchg
in
sahf
push
jb
xor
shrb
test
sahf
push
sub
out
insl
jp
ret
test
lods
shl
inc
mov
add
add
test
add
adc
cmp
cld
shrl
xchg
adc
adc
jno
lret
dec
jge
push
xchg
mov
xchg
xor
mov
xchg
movsl
cmp
notb
mov
xchg
mov
ret
inc
gs
push
mov
in
push
out
in
orl
or
dec
sbb
cli
ds
jbe
mov
push
ljmp
sarb
xchg
add
sbb
xor
in
cmp
inc
je
stos
pop
jno
mov
push
inc
adc
ss
jge
sbb
cs
dec
repnz
xchg
xor
scas
jnp
and
jb
jae
pop
repnz
stc
js
sbb
or
dec
jecxz
pop
dec
mov
dec
out
xchg
fs
testl
clc
iret
xor
in
dec
fs
test
mov
pop
insb
or
mov
shll
addr16
pop
fldcw
sbb
imul
movsb
inc
mov
subb
mov
xor
push
out
push
fldcw
outsb
fwait
mov
adc
xchg
in
lret
loopne
jg
icebp
cmp
sub
xchg
sahf
mov
pop
cwtl
push
call
jnp
inc
fstpt
push
adc
sub
scas
out
dec
testl
inc
mov
and
ds
mov
repnz
test
sub
mov
dec
push
mov
cmp
or
pop
inc
sbb
hlt
and
dec
adc
decl
aas
hlt
iret
dec
jecxz
and
push
or
movl
and
mov
lock
xchg
sahf
or
mov
cmpsl
cmp
popa
out
sub
sub
jns
and
mov
add
insl
mov
jle
iret
cld
xor
mov
ficompl
jo
push
jns
jl
aas
adc
je
cmc
push
inc
sub
adc
fucomp
loopne
pop
jp
fsubr
idivl
mov
cltd
mov
shll
push
mov
inc
mov
inc
or
jno
divl
data16
xor
push
imul
cmpsb
xchg
sub
stc
cmpsl
call
jge
in
mov
xor
sbb
adc
xor
sbb
xchg
sti
rolb
mov
cmp
add
pop
fistps
xor
das
jnp
xor
daa
addr16
int
sbb
aam
pop
lea
mov
pop
outsb
xor
sbb
jns
mov
cltd
lret
data16
adc
push
je
imulb
pop
cld
dec
add
cvttps2pi
sbb
jl
or
or
imul
test
cmp
and
cmp
filds
and
push
jae
lret
mov
out
fcoms
jnp
ret
repz
popf
sub
xor
pop
or
int
pop
lahf
or
push
and
stos
cmp
in
cmpsb
cmc
xchg
js
mov
out
insl
rep
and
and
repz
sub
inc
out
out
ds
insl
pop
dec
ds
and
lods
cmp
cmp
ds
xor
daa
jne
sarl
rcl
lret
dec
les
jae
mov
int
call
adc
or
sbb
push
cld
stos
inc
cltd
cltd
cmpsl
sub
and
jge
adc
adc
subl
dec
pop
movsb
fsubrs
popa
jge
add
dec
pop
shlb
xchg
jmp
mov
into
dec
jno
and
pop
je
rclb
stos
test
xor
adc
mov
mov
add
rcrb
sub
movsl
cmp
or
ss
sub
pop
xor
repz
cs
faddl
ss
in
and
cmp
mov
mov
shll
stc
bound
inc
xchg
rcrl
push
sbb
lea
inc
insb
push
cmc
push
insl
std
sub
shll
in
rolb
setne
dec
pop
jle
push
lods
sub
push
int
mov
inc
lods
ljmp
fdivr
mov
daa
jne
jo
pavgb
jo
jge
adc
add
pop
bound
daa
pop
adc
add
andl
sub
ss
sub
and
pop
xchg
add
in
mov
xchg
repnz
orb
fnstsw
pop
fs
pop
xchg
jno
lods
pop
sub
add
dec
sub
jl
push
enter
mov
adcl
dec
inc
sub
cltd
or
lods
push
fwait
pop
mov
pusha
dec
loop
mov
jl
mov
add
ljmp
lods
mov
push
in
push
jnp
sbb
and
inc
mov
das
pavgw
pop
add
xchg
fnstenv
fisubrs
popf
or
es
sbb
sub
add
das
stos
orl
cmp
lods
stc
inc
outsl
jle
lret
in
dec
inc
sbb
ds
test
sahf
int
dec
push
jnp
inc
inc
or
inc
movsl
push
pop
jae
loopne
mov
xor
andb
or
into
inc
fsubr
jle
pop
inc
sbb
out
mov
out
adc
dec
xchg
mov
insb
xor
xchg
nop
push
mov
in
movsl
xchg
inc
adc
mov
popf
push
or
xor
in
cmc
mov
sti
sbbl
mov
mov
push
jmp
mov
popf
fs
aam
data16
clc
dec
jmp
mov
les
int3
pop
lahf
ficoms
cmp
and
jg
mov
test
pusha
repz
lea
arpl
scas
mov
push
sarl
adc
out
cmp
xchg
xor
stos
xchg
cmpsl
stos
xor
push
gs
push
jns
mov
call
addr16
mov
mov
ret
das
jo
mov
jb
sub
rol
gs
jb
clc
xchg
adc
mov
insl
xchg
stos
mov
jne
idiv
inc
sub
pop
pop
dec
mov
inc
inc
xor
cwtl
sub
mov
leave
fdivs
mov
stos
out
cmpsw
xchg
inc
mov
pop
in
or
push
lahf
sub
gs
lret
add
cmp
mov
out
push
sbb
cs
in
xchg
sbb
sub
sub
sub
ret
jae
mov
data16
fcoml
test
push
inc
sub
jb
dec
rclb
xlat
mov
push
or
daa
push
jne
xor
int3
jns
mov
daa
enter
sub
jmp
mov
dec
leave
test
loopne
xchg
sbb
mov
mov
push
call
mov
rorb
cmpsb
or
or
cmpsb
add
dec
ficompl
negl
std
ljmp
or
push
iret
flds
xchg
out
and
popa
call
clc
mov
cmp
aad
mov
fwait
out
sbb
xchg
testl
sti
push
ret
loope
and
cs
ss
repnz
lea
pop
adc
cmp
push
fnsave
xor
movsb
std
push
mov
test
pop
lods
pop
and
out
outsb
sub
inc
mov
into
push
mov
xor
and
js
mov
mov
push
jp
adc
lds
shrb
ret
lcall
xchg
or
push
jne
and
outsl
add
mov
jno
jecxz
das
mov
cmp
mov
xchg
sub
loope
cmp
sbb
add
aad
lea
fstp
test
ja
cmp
dec
mov
loop
or
jae
sub
dec
add
mov
xor
xor
inc
push
gs
test
inc
jle
xchg
mov
sub
push
mov
rcr
testl
pop
into
hlt
sarl
and
test
cmp
push
icebp
ret
sarl
xchg
popa
add
repnz
enter
das
push
dec
aad
xchg
orl
cmp
sbb
std
sbb
jl
lahf
push
aaa
mov
loope
and
cs
iret
ljmp
aad
mov
adc
xor
dec
mov
inc
push
xchg
fidivrs
imul
mov
or
popf
xor
xlat
mov
or
xor
push
sbb
push
ret
flds
add
cmp
jp
lods
push
inc
jmp
dec
cmp
stos
gs
push
fwait
lea
xchg
or
jno
xchg
sti
push
dec
in
arpl
jecxz
dec
lret
fbstp
inc
fucomi
mov
hlt
icebp
dec
in
mov
xchg
icebp
test
sbb
loopne
sbbb
or
test
aaa
clc
sub
mov
push
cli
jns
int
sub
jge
mov
lock
or
mov
popa
ja
nop
or
and
sub
jecxz
add
lock
cltd
push
cmp
fwait
xor
shlb
pusha
inc
pop
mov
add
and
enter
scas
xor
pop
jmp
sub
and
jnp
ljmp
mov
xchg
and
inc
call
adc
cmc
inc
pop
bound
xchg
push
inc
pop
push
add
or
iret
test
jmp
inc
lret
inc
or
mov
or
lcall
out
push
mov
mov
loope
rorb
and
cwtl
das
cli
xor
ja
mov
or
and
xchg
mov
mov
push
jb
pop
std
mov
aad
test
sub
out
adc
pop
loope
push
push
sub
jb
add
xchg
cmp
mov
inc
cmp
adc
xor
push
in
gs
movhps
xor
xchg
push
push
push
inc
jno
jg
js
arpl
test
cmp
jo
adc
add
adc
movsl
addr16
inc
idivb
filds
aam
and
or
xor
and
dec
in
xchg
pushf
pusha
lds
adc
mov
jns
sahf
fisubs
in
shll
mov
loopne
lds
js
sbb
fistps
ficomps
mov
jae
test
mov
mov
jmp
inc
lcall
fistps
push
lahf
cltd
ja
ret
sbb
outsb
ja
cmp
daa
sbb
rcrb
cld
jne
mov
pop
add
cmp
cli
xchg
ficomps
sbb
daa
cltd
cli
aad
and
sti
je
xor
jmp
cmp
mov
sbb
or
jnp
push
xchg
xchg
mov
fwait
in
sub
adc
pop
jne
bound
and
enter
hlt
adc
mov
decb
mov
or
push
rclb
icebp
lahf
inc
ret
arpl
sbb
pop
call
push
and
sahf
push
in
call
mov
adc
addr16
pushf
push
in
mov
jno
xchg
sub
scas
xlat
mov
arpl
gs
inc
pop
test
icebp
mov
leave
push
lods
roll
inc
int
ret
or
push
insb
and
jno
js
jbe
out
xor
fbld
dec
cwtl
out
std
and
into
push
pop
repnz
and
cmp
inc
add
hlt
xchg
add
add
lret
mov
add
xchg
xchg
imul
sub
inc
jno
or
sti
addb
sub
inc
dec
movsb
cld
cld
shlb
mov
fwait
push
adc
sub
sti
xor
fstl
or
jns
xor
push
mov
movsb
add
in
cmp
mov
adc
cwtl
pop
ds
ret
mov
inc
jle
xlat
fcoml
scas
pop
push
ds
push
lods
xor
loopne
stc
imul
pop
scas
xchg
sbb
das
mov
dec
xlat
sub
mul
dec
std
pop
scas
and
or
dec
cmp
pop
lock
mov
lahf
ss
or
mov
popa
pop
cmp
leave
sbb
and
add
notl
cmp
sbb
mov
mov
mov
xchg
rcl
aas
push
clc
test
xor
or
or
and
in
addl
adc
into
repz
out
push
in
daa
mov
jge
push
and
or
lds
pop
xchg
xchg
xchg
fwait
es
repz
pop
sub
bound
fdivs
jle
lret
scas
mov
inc
push
shl
outsl
adc
test
jmp
add
fdivr
sub
xchg
jns
push
add
ljmp
dec
test
lea
clc
addb
in
movsb
test
insl
or
adc
mov
stc
fistpl
mov
ljmp
dec
cmpsl
push
lcall
or
lcall
or
popl
fsubrl
fstpt
fsubs
xchg
sbb
xchg
es
mov
jo
jns
orl
out
addl
outsl
addb
xchg
pop
jg
push
jge
mov
cmp
xor
mov
xchg
add
pop
jp
shlb
iret
xchg
dec
jp
loop
cmp
add
xor
repnz
dec
xchg
xor
sub
push
inc
inc
jle
pushfw
outsl
add
je
int3
test
cmp
sub
sbb
mov
das
jno
insl
idivl
fidivl
daa
inc
dec
dec
jb
inc
or
mov
push
mov
xor
cmp
lds
aam
inc
movsl
cmpsb
cmp
xor
aaa
fstps
dec
adc
test
ljmp
repz
addr16
sti
clc
or
sbbb
sbb
cmp
les
or
lret
lock
push
cmp
ja
pop
fcoms
xor
scas
inc
cmp
addr16
fsubrs
jae
cli
adc
popa
mov
lahf
outsl
push
pop
jle
sbb
clc
fisttps
jge
insb
push
mov
dec
in
jo
dec
aaa
or
cmp
in
jo
repz
xchg
popl
orl
cs
das
dec
call
std
ljmpw
ja
mov
push
push
and
inc
imul
mov
in
mov
lahf
aad
movsl
xor
xchg
pop
shl
push
add
mov
lods
dec
dec
xchg
je
mull
repz
xchg
sub
scas
adc
mov
xlat
sub
sbb
scas
fs
pop
cs
das
subl
sbb
push
aaa
jmp
pop
lret
out
sub
aam
sub
ja
sub
mov
out
stos
dec
push
and
xchg
xlat
shrl
clc
jbe
mov
xor
std
xchg
imul
ss
sarl
addr16
in
adc
loope
jne
mov
fistps
push
cmp
dec
and
test
adc
sbb
xchg
adc
adc
nop
push
xchg
jb
xchg
movsb
mov
sbb
lds
mov
mov
loop
xchg
mov
enter
mov
sbb
fdivs
xchg
sub
pop
cmc
pop
xchg
jo
dec
stos
dec
mov
aas
mov
lahf
cmp
pop
sahf
cmc
add
dec
dec
lock
mov
fildll
fisubrs
jns
outsb
subl
lods
push
sbb
adc
mov
mov
gs
xchg
loope
mov
jno
cs
push
xor
lsl
lea
push
or
push
add
jae
cmp
jmp
outsb
call
adc
dec
mov
out
sub
jecxz
shrb
leave
test
cmc
daa
mov
aad
jge
out
xchg
add
pop
xchg
fs
loop
and
imul
hlt
sbb
int
mov
push
jbe
sarb
fildl
xor
jmp
or
pop
or
push
mov
xchg
or
pop
mov
call
faddl
inc
fwait
lahf
notl
adc
mov
xchg
sbb
popf
jae
cmpsb
adcl
and
push
jne
mov
call
in
es
inc
inc
call
pop
sbb
out
rdrand
mov
cli
inc
insl
test
add
leave
nop
mov
pop
cmp
out
or
hlt
push
sbb
pop
xor
mov
das
lds
leave
mov
popa
mov
sub
push
stos
mov
lods
mov
int3
dec
subl
push
sub
ret
cmp
subl
pusha
lds
cs
mov
pop
fnstenv
jle
sub
xor
sti
sub
adc
mov
mov
sbb
js,pn
icebp
mov
iret
pop
add
lock
lods
dec
pushf
mov
sbb
ja
jmp
mov
jns
and
popl
in
cmpsl
mov
shlb
int3
pusha
add
cmp
inc
dec
dec
inc
inc
fnsave
mov
cmpl
lea
sbb
cmp
fidivl
push
jo
int3
call
push
fidivl
push
popf
flds
movsl
cmp
or
repz
jecxz
shlb
and
lcall
aad
lret
mov
pop
nop
clc
add
rorl
or
xchg
add
sbb
aad
xchg
pop
repz
cltd
mov
sbb
and
adc
outsl
out
mov
nop
xor
dec
in
dec
mov
jmp
jecxz
rcll
loop
cs
cli
stc
jmp
out
and
fsubl
or
pushf
jb
inc
popa
mov
fs
jo
add
mov
dec
and
push
sub
mov
inc
cld
mov
notb
loope
rcll
mov
adc
add
mov
xlat
mov
sbb
ret
test
pop
dec
mov
mov
call
or
push
out
shlb
pop
fucomp
cmp
insl
add
aad
test
lods
jmp
fnstcw
mov
push
iret
movsl
icebp
xchg
sbb
fdivl
pop
ljmp
push
xor
stos
xchg
insl
icebp
loopne
and
mov
lock
fdivrs
ret
in
iret
fcom
lock
and
sbb
pop
mov
cmp
sub
jecxz
mov
std
sub
xchg
dec
pop
jl
aaa
cli
fdivrs
insb
rorl
and
fnstcw
xor
mov
lahf
push
mov
lock
mov
dec
lock
jo
xor
pop
jg
push
insl
or
mov
push
and
les
inc
int
xchg
sbb
notb
mov
cmpsl
fstl
push
sbb
adc
testb
roll
add
push
mov
add
popa
in
lahf
ss
dec
mov
cmp
scas
test
cli
sub
adc
xor
call
fildll
loop
push
sub
lods
mov
sub
stos
sub
sub
addb
lds
pushf
mov
sbbb
push
mov
fiadds
and
jg
xorl
mov
inc
fsubrs
adc
out
insl
jle
jle
sub
repnz
ss
mov
sbb
mov
fdivrl
mov
repz
jnp
jnp
push
movsl
stos
xchg
repz
sub
cmp
sub
daa
mov
dec
mov
inc
cmp
push
lods
int
xchg
add
daa
inc
sti
aas
outsb
pop
in
scas
call
xor
out
and
sbb
mov
into
push
insl
adc
mov
add
mov
mov
jge
push
stos
stos
dec
test
cmp
push
dec
outsb
xor
flds
cwtl
shrl
push
inc
pop
mov
loope
js
loop
mov
loopne
and
test
add
popf
add
push
stos
mov
fisubl
mov
push
divl
test
addr16
cld
xor
fisubrl
xchg
dec
push
in
loopne
sbb
lcall
shll
and
scas
inc
outsb
xchg
fdivr
popf
lret
bound
jmp
imul
ja
pop
xor
in
daa
int3
jne
rorb
xchg
cmc
daa
int
pop
cmp
inc
nop
adc
inc
mov
arpl
mov
addl
lea
movsb
lret
es
dec
rolb
lods
aam
pop
dec
scas
cmc
xor
imul
xchg
add
out
xor
and
xlat
jmp
out
dec
pop
icebp
push
jge
xchg
xorl
lea
push
jge
or
push
clc
in
popf
mov
mov
test
imul
cmp
mov
das
pusha
inc
daa
jbe
std
pop
xchg
scas
cmpl
outsb
das
mov
aas
and
push
pusha
les
scas
xchg
sti
out
mov
dec
add
dec
jns
jl
cmpsl
repnz
cwtl
cs
hlt
iret
pop
add
push
sbb
shrb
xchg
jge
hlt
popf
pop
cmp
push
xchg
loopne
and
rcll
inc
flds
addl
mov
or
mov
cmp
insb
aas
faddl
outsb
aam
shl
daa
fisttpll
js
test
mov
imul
and
jg
aad
jecxz
pop
cmp
push
xor
cmc
popl
push
mov
fldenv
inc
lret
sub
dec
and
sub
loope
cmpb
push
cltd
pop
pusha
pop
out
jle
push
pushf
daa
pop
js
dec
lret
mov
push
insl
and
adc
lret
out
in
mov
or
gs
mov
orl
movsl
sbb
mov
mov
movsb
out
pop
icebp
in
sbb
push
sar
mov
loope
dec
xchg
dec
loopne
mov
dec
call
out
mov
aad
fsubl
in
sub
aam
mov
dec
nop
icebp
cs
popf
fcmovne
cmp
xchg
xorl
mov
mov
mov
dec
xor
int
outsl
scas
push
imul
cmp
fwait
in
notb
push
sub
cld
addr16
mov
in
test
mov
pusha
dec
sbb
sub
xchg
or
cmp
dec
cmpsb
sub
repz
fsts
stc
nop
inc
ljmp
xchg
dec
jno
cmp
outsl
orb
jl
sbb
add
cmp
mov
ljmp
jb
pop
hlt
test
daa
mov
mov
or
mov
pop
ss
xchg
ret
testl
test
fisttps
stc
jne
mov
outsb
pop
pop
fmul
pop
xchg
pop
xadd
mov
pushf
addr16
jnp
jns
push
cld
xchg
dec
adc
repz
xchg
dec
mov
pop
dec
les
or
out
cmpsl
rolb
scas
xchg
ret
sti
test
cld
jb
das
lds
clc
mov
jecxz
mov
xchg
mov
cmp
cmp
dec
jns
fnstenv
shrb
xlat
and
dec
shl
mov
fwait
jo
push
test
int
das
cmp
cmp
mov
mov
inc
mov
fwait
adc
sbb
jo
into
jo
mov
push
xor
adc
orl
out
push
sub
inc
lea
lods
dec
insb
push
outsl
insb
imul
clc
test
dec
sar
lods
arpl
xchg
xchg
pop
cmc
push
mov
jns
add
int
inc
pop
mov
outsb
sbb
pop
xlat
cs
nop
popa
lret
test
mov
lcall
xor
or
fstpt
fcoml
mov
js
mov
orl
clc
pop
xchg
or
outsl
daa
lahf
bound
add
jae
jno
mov
gs
jo
aaa
outsl
adc
loopne
mov
inc
repz
xchg
push
lock
mov
inc
lods
sbb
or
sbb
stos
dec
scas
mov
sbb
pushf
orb
jo
sbb
cmpsb
dec
pop
add
xorl
cld
xchg
fsts
test
dec
xchg
xor
lret
inc
and
shrl
inc
sbb
aas
leave
popa
gs
cmp
out
or
and
cmc
sub
xchg
movb
lret
lock
xchg
in
jae
lcall
sbb
scas
bnd
cmp
jno
cmp
inc
bound
popf
jmp
or
call
into
movzwl
outsl
jmp
movsb
testb
cmp
fwait
imul
repz
or
and
imul
mov
sbb
hlt
pusha
ds
daa
mov
scas
lcall
mov
jecxz
call
xor
nop
xchg
dec
and
ficompl
scas
and
pusha
mov
rol
pop
lahf
in
je
mov
out
dec
pause
lea
mov
ret
int3
data16
xlat
push
jp
or
repnz
xor
mov
pop
xchg
movsb
xor
xchg
inc
gs
cmp
pop
and
pushf
test
push
rcrb
inc
cltd
xchg
out
jno
mov
mov
pop
cltd
mov
inc
jo
iret
fwait
push
and
add
inc
lods
push
adc
aas
outsb
subl
sbb
shll
ret
hlt
cmp
fwait
pop
iret
imul
push
push
push
jmp
lahf
test
or
sub
push
sbb
pop
sub
push
lret
popa
daa
jb
inc
sbb
or
xchg
in
xchg
mov
add
lods
jmp
sarb
popf
stc
hlt
bound
xchg
push
lea
imull
adc
mov
adc
sbbl
scas
mov
xor
arpl
xchg
push
enter
sbb
push
or
inc
inc
test
add
xor
xchg
mov
out
movsb
pop
int
pop
scas
insb
int3
ret
insl
sbb
clc
and
test
in
out
mov
xor
dec
cmp
lea
push
jno
mov
rcr
movsl
aad
mov
adc
movsb
call
xor
ret
sub
enter
dec
ret
in
and
aam
add
cmc
nop
daa
fnstsw
adc
jnp
inc
lods
adc
rolb
idivl
fldt
fwait
xor
mov
mov
lret
xchg
mov
mov
lea
jg
push
jbe
mov
je
dec
add
push
les
dec
jnp
and
shrb
sarl
pop
xchg
imul
mov
jbe
test
stos
movsb
kmovb
fidivl
or
out
cmp
sub
cltd
in
leave
adc
das
out
pop
push
cmp
frndint
sub
sub
push
jle
lcall
mov
fs
pop
pop
test
sub
sub
push
or
xchg
xor
cmp
add
mov
arpl
pushf
jns
and
cmpsl
dec
add
dec
cmc
or
cs
fcomip
inc
sbb
inc
push
mov
in
or
in
lahf
mov
repz
int3
clc
into
adc
gs
leave
or
clc
lea
aaa
stc
mov
dec
cli
test
std
jl
or
mov
mov
or
xchg
push
lods
outsl
mov
or
stos
shl
dec
cmp
inc
xchg
xchg
xor
repz
popa
rol
dec
shrb
mov
sub
pop
inc
mov
add
dec
les
mov
jg
ds
mov
sti
repz
ja
test
sbb
and
and
jmp
push
ljmp
jno
push
sti
jb
mov
dec
roll
jmp
fdivl
out
rolb
test
ficoms
repnz
into
subb
shll
lods
and
pop
inc
and
leave
inc
fst
and
es
push
mov
jg
popa
test
dec
jmp
cmpsl
test
and
ljmp
and
xchg
sub
push
sub
aaa
xor
jae
mov
das
out
mov
sub
ds
xchg
inc
negb
in
mov
xchg
sub
fld1
jb
fucompp
ss
cmp
sahf
push
aam
xor
inc
and
pop
mov
bound
pop
add
add
mov
pop
sbb
sbb
pop
int3
insb
popa
scas
ja
not
outsb
lcall
dec
push
pop
test
jp
es
loopne
int
and
push
ret
cmpb
cmp
outsl
shrl
ret
jnp
push
sbb
xlat
pop
cmpsb
lea
xor
adc
sub
lret
push
pop
loop
inc
xchg
jmp
imul
movsb
cmp
leave
hlt
jl
pop
pusha
movsb
cmp
add
adc
mov
sub
adc
icebp
add
decb
add
adc
sub
loopne
dec
adc
sarb
shll
xor
jge
test
xchg
xchg
jp
decb
popa
mov
add
and
pop
mov
jbe
inc
pop
xor
jle
mov
dec
inc
pop
xor
xor
fcoms
daa
or
outsb
in
push
pop
data16
dec
push
int3
jns
push
mov
fistpll
dec
push
dec
sbb
jae
dec
addb
out
aas
sbb
inc
popf
movsl
clc
sub
rolb
insb
mov
lds
push
test
bsr
sbb
arpl
faddl
lods
sub
and
add
popl
add
neg
outsl
imul
jb
cld
fwait
mov
xchg
mov
popf
xchg
call
lcall
lret
mov
cmp
lahf
or
sbb
les
adc
data16
dec
mov
xchg
lock
sub
mov
xchg
adc
cld
xor
fyl2x
lds
inc
pop
ds
nop
daa
lea
cmp
ja
test
je
push
dec
test
push
fadds
lods
push
fbstp
jb
inc
lret
inc
sbb
sub
add
shlb
mov
or
or
lods
push
dec
fsub
mov
or
xlat
mov
xchg
add
push
ja
pop
or
fcomps
iret
jo
add
hlt
mov
xchg
pop
sbb
adc
jge
push
adc
xchg
pop
lret
pop
cltd
gs
pop
testb
cmp
scas
and
sub
xor
pop
and
test
lahf
inc
inc
adc
sub
or
fmuls
jnp
sbb
jne
imul
adc
in
xor
js
out
scas
inc
fidivrs
outsb
fwait
sub
jle
sbb
push
pop
rorl
popf
push
inc
test
mov
mov
loop
dec
pusha
inc
leave
xor
out
pop
and
pop
xor
call
and
push
lds
pushf
ficoms
mov
push
sahf
sbb
push
popf
inc
xor
insl
rcrb
mov
in
fildl
lahf
int
mov
je
arpl
stc
lock
lret
adc
test
movups
inc
lea
xor
push
mov
mov
js
fldl
ret
out
int
and
cmp
fstl
or
jmp
rcl
pop
jmp
mov
lods
sub
leave
or
push
push
outsl
loop
movsl
jg
add
out
jle
push
in
dec
jnp
dec
mov
cmpsl
stos
xchg
fsts
dec
and
xchg
and
cmp
and
repz
test
dec
addr16
pop
xchg
scas
loopne
enter
ss
or
mov
jns
jg
roll
mov
out
jo
push
andl
enter
arpl
repz
data16
mov
dec
cwtl
dec
and
icebp
rorb
cltd
ja
mov
fcomps
shl
push
repnz
ret
and
test
push
adc
or
stos
jmp
add
jmp
cmp
cmc
push
clc
adc
iret
mov
sub
ja
xchg
sub
mov
mov
jmp
lock
mov
ret
jmp
insb
enter
xchg
scas
outsb
ret
mov
test
icebp
inc
sub
add
dec
sub
add
mov
and
leave
nop
push
imul
add
pop
in
and
fsubl
lods
dec
inc
pop
adc
cmp
test
test
jb
leave
orb
mov
adc
mov
nop
lods
inc
roll
xor
adc
out
xlat
mov
loop
push
or
ds
outsl
inc
mov
pop
cmc
cltd
or
movsb
push
dec
gs
cmp
popa
sub
mov
out
iret
es
pop
lahf
test
push
stc
nop
push
sbb
mov
push
jg
xchg
ds
xchg
in
nop
adc
out
leave
cmp
cmp
imul
inc
sbb
shrb
dec
push
int3
arpl
cltd
xor
dec
pusha
lock
sbb
inc
sbb
mov
pop
or
mov
cmp
mov
and
xchg
sub
sahf
cs
mov
sub
loope
push
xor
loopne
test
popf
js
scas
xchg
mov
hlt
rclb
xchg
dec
jne
and
cmp
inc
rcl
js
ret
sbb
jge
and
cltd
pop
pop
push
clc
sub
ja
imul
filds
jne
mov
sbb
push
icebp
or
jg
cld
sub
pop
sbb
jmp
pop
lret
lcall
outsb
mov
ret
lds
daa
sti
xlat
pop
or
test
nop
pushf
xchg
sub
mov
out
lods
sub
stos
sub
scas
cmp
js
jge
out
test
rorb
mov
arpl
divl
leave
xchg
mov
ret
push
js
mov
dec
repz
subl
push
dec
mov
rcrl
fs
sub
repz
xchg
stos
int3
lods
xorb
scas
int
add
mov
inc
fucomi
xor
xchg
loopne
in
inc
popa
push
push
jp
mov
or
test
inc
inc
sbb
mov
jne
ficomps
mov
cld
push
enter
cld
scas
mov
movsl
in
cmp
ret
mov
test
pop
pop
dec
enter
out
fists
xchg
insb
jp
pusha
stos
outsl
and
mov
add
loop
in
sbb
mov
xor
cmpsl
aaa
push
aas
pop
sub
out
sub
mov
jl
movsl
mov
int
loopne
ret
mov
mov
cltd
xchg
idivl
cmp
outsb
sbb
dec
add
jb
jg
pop
mov
or
pop
movsl
test
jo
jge
cmp
dec
sbb
jns
adc
sti
fwait
testb
or
adcw
push
ja
xchg
add
jle
adc
aam
xchg
rorb
xor
xchg
push
movsl
mov
fimull
dec
icebp
pop
xchg
mov
cmp
push
dec
stos
jns
pop
out
and
pop
fisttpll
iret
xor
sarb
ja
mov
xor
inc
inc
lods
aam
negb
pushf
or
mov
jmp
dec
mov
push
cmp
jnp
aad
inc
push
test
jmp
ror
outsl
daa
lods
lret
pushf
insl
sub
and
popa
push
xor
jg
cmp
mov
dec
das
aad
push
sub
dec
xchg
adc
cmp
scas
testb
sahf
sbb
jae
mov
cli
cmp
sub
mov
jns
or
add
xor
ss
rclb
mov
pushf
mov
push
sub
idivl
imul
sbb
xchg
std
cmp
pop
sahf
xchg
in
pop
leave
popf
mov
mov
mov
xor
mov
ljmp
cmp
mov
cmpsl
sub
add
dec
roll
pop
fiadds
and
and
test
inc
or
andb
mov
pushf
pop
test
pop
orl
loopne
or
sub
pop
pop
mov
adc
cmp
lods
fidivs
sub
cmc
push
jg
out
pop
adc
lea
nop
jnp
sub
push
xchg
xlat
outsb
cmc
scas
leave
push
mov
xchg
push
mov
fdivrp
aam
fcmovne
pop
cmpb
jbe
mov
fucom
lahf
xorl
rorb
jg
js
and
cmp
mov
fdiv
mov
cmpsb
fldl
call
xor
push
addr16
pop
sti
dec
vpcomud
lret
cmp
imul
shlb
xchg
jge
out
pop
aaa
push
sub
inc
pop
jmp
pop
add
imul
fcoml
cs
fiaddl
cwtl
push
int3
pop
scas
jl
pop
in
popf
xor
push
movsl
je
outsb
xor
or
inc
mov
xor
orl
adc
sub
hlt
cltd
jb
push
call
outsl
fidivrl
pop
dec
cli
pop
arpl
sbb
popf
cld
cmp
cwtl
and
or
jnp
pop
cmp
outsl
inc
pop
xchg
lahf
push
imul
sub
shl
int
and
jno
negb
inc
jl
and
mov
jmp
push
sub
scas
mov
roll
lods
jne
push
inc
jle
sti
imul
pop
add
je
lods
xchg
cmp
or
add
pop
ds
xchg
xor
mov
nop
jo
fwait
xchg
jns
adc
xor
adc
xchg
inc
ffree
and
push
dec
outsl
xchg
push
je
jle
loopne
into
adc
pop
dec
sahf
add
inc
or
in
push
inc
push
fisubrs
xor
lret
sahf
jg
dec
in
aaa
fiaddl
xchg
lds
cmp
popf
lret
es
adc
ret
mov
iret
dec
add
cmpsl
add
addr16
lds
pushf
gs
mov
cmp
and
ficoms
mov
lcall
std
mov
int
jle
lods
popf
stc
and
jne
jae
scas
xchg
int3
gs
cmp
seta
addl
stos
add
mov
inc
cmc
mov
mov
adc
inc
inc
test
fs
es
or
imulb
ret
jge
pop
cli
jecxz
ds
pop
jo
push
in
daa
jp
cs
fnstcw
or
inc
mov
nop
jno
fwait
mov
sbb
dec
stc
cld
fabs
push
sbb
xchg
pop
jae
test
adc
xchg
cltd
sbb
cmp
mov
or
fiaddl
sbb
aas
cmp
inc
stos
sarl
cmp
jl
mov
shll
lds
and
sbb
or
xchg
out
jae
sub
ja
ret
adc
insb
mov
pop
mov
mov
or
xchg
pop
pop
lcall
mov
aaa
or
jecxz
inc
sub
mov
incl
lods
mov
fisubs
fs
pop
jg
push
movsl
xchg
mov
cmp
repz
push
add
mov
notl
push
clc
sbb
sub
sahf
mov
outsl
repz
dec
push
aam
jmp
and
xor
ljmp
jne
cmp
jp
push
or
jno
in
mov
push
ja
sahf
mov
and
push
addb
inc
int
aaa
or
jmp
pusha
xchg
cmp
out
jp
inc
mov
cltd
sahf
js
dec
jno
jae
in
jae
adc
daa
lret
sub
jp
arpl
loop
stc
jp
inc
jno
roll
ret
rep
out
push
sbb
adc
and
inc
pop
xor
jbe
and
aaa
xchg
mov
mov
add
gs
mov
mov
scas
mov
mov
adc
push
add
xor
out
mov
icebp
rcl
sub
cltd
xor
test
decb
mov
mov
lahf
rcll
jae
test
lods
pop
addr16
iret
sbb
inc
or
leave
push
popl
jne
sub
mov
sub
int
int
push
xor
repnz
xchg
jecxz
or
cmpsl
lods
adc
xlat
mov
add
jge
or
stos
dec
sub
sub
fstpt
rol
jmp
hlt
movsl
cmp
aam
fs
fucom
inc
mov
insl
push
ljmp
lock
fldl
jecxz
pop
jmp
js
mov
outsl
xchg
and
aad
mov
shl
cmp
push
jg,pn
outsb
sti
lcall
cmpsl
mov
cld
in
cs
insl
iret
in
addr16
push
push
aas
leave
sub
pop
mov
andl
loope
dec
loop
arpl
jp
pop
imul
sbb
add
ds
icebp
sbb
inc
xchg
shll
xchg
pop
add
int3
ds
test
xchg
cmpsl
psraw
out
enter
mov
mov
es
test
inc
mov
mov
jb
add
sub
stc
push
fstl
notl
dec
rorl
out
cmc
hlt
iret
dec
scas
sub
or
loope
push
pushf
ja
out
pusha
mov
in
bnd
aas
outsb
notb
icebp
dec
popf
adc
out
lret
test
fucomip
jle
sbb
mov
pop
adc
loop
out
jae
inc
imul
pusha
out
xchg
adc
pushf
sub
jg
outsl
fmuls
int3
pop
std
sbb
inc
loopne
or
mov
shlb
popa
int
dec
add
hlt
lahf
cwtl
clc
adc
insl
sub
jle
mov
adc
dec
inc
fnstenv
mov
mov
inc
add
insl
jno
enter
insl
cmpsl
add
sub
inc
xchg
sub
dec
adc
bound
shrl
movsl
hlt
sbb
icebp
adc
mov
xchg
mov
iret
ds
jge
xchg
mov
lds
inc
int3
adc
add
iret
push
inc
jo
je
push
scas
add
ja
stos
cs
es
inc
xor
mov
aad
int
cmc
cmp
push
out
mov
add
test
cmp
ss
dec
add
fdivl
inc
das
scas
js
out
mov
js
dec
jnp
sub
mov
or
cmp
clc
inc
ljmp
rcrl
push
push
fbstp
dec
leave
shr
cli
cs
mov
insb
insb
je
xchg
in
popa
test
rolb
adc
mov
mov
call
push
push
es
sti
jnp
mov
dec
dec
dec
out
jbe
push
inc
sbb
lret
test
push
jae
mov
push
jbe
mov
lret
xchg
cmp
mov
stos
ljmp
mov
stos
inc
xchg
outsl
lret
jb
or
mov
mov
bound
or
arpl
mov
mov
fstl
xor
cmpsb
mov
aad
push
testl
sbb
mov
adc
push
in
adc
gs
add
push
cltd
je
push
dec
dec
in
pop
fdiv
adc
enter
stos
push
add
scas
jns
and
pop
pop
fsubrs
xchg
sub
loope
add
jo
fs
sbb
in
shlb
cli
fstps
leave
push
sbb
and
jb
inc
ss
mov
dec
fdivrl
out
jmp
sti
add
mov
lea
pop
repnz
cmpsl
lods
inc
add
rcl
pop
nop
xor
mov
add
inc
cmpsb
stos
es
roll
hlt
in
fwait
and
inc
xor
xor
adc
mov
sub
mov
fldt
insb
imul
mov
pop
lret
sbb
mov
shlb
jg
insl
xchg
add
add
adc
xchg
add
jmp
mov
sbb
fsubrs
or
lcall
sub
subl
dec
jno
mulb
and
pop
push
or
lcall
in
xor
daa
incb
test
or
popf
lods
xchg
and
xor
push
daa
movsl
das
movsb
push
lea
pop
repz
sbb
jmp
fsubr
popf
sbb
dec
mov
ds
in
incb
insl
xchg
xchg
jbe
sbb
add
das
xorl
sbb
stc
mov
std
ja
push
sahf
test
mov
pop
repz
daa
lcall
popa
and
cltd
fsubs
cwtl
push
mov
out
testb
test
mov
cmp
cmc
dec
pop
mov
adc
fnstenv
repz
push
cmpsb
outsb
repz
ficoms
xor
out
and
mov
insw
cmp
shl
pop
icebp
mov
pop
and
or
jecxz
adc
jle
xor
sbb
fsubs
cmp
jae
push
inc
cmp
sti
inc
fsubrl
sbb
jb
idivb
mov
cwtl
imul
mov
in
in
push
out
popa
xor
xchg
push
daa
inc
xchg
or
cmpl
loope
sbb
sbbl
mov
ret
mov
iret
enter
ret
aad
call
xor
shl
fldcw
sbb
mov
fwait
jne
or
and
inc
sub
inc
fnstcw
jecxz
mov
in
mov
push
outsl
dec
and
dec
lcall
and
mov
mov
sbb
mov
scas
inc
or
lret
pop
mov
notb
fdivrs
dec
pushf
mov
repnz
in
lods
mov
xor
ja
imul
int3
inc
mov
popa
into
sub
jne
push
outsl
test
andb
adc
dec
ds
mov
sub
cld
daa
mov
dec
sbb
scas
aaa
jp
in
mov
mov
inc
xchg
and
cli
stc
je
test
pop
fwait
sub
sub
xlat
test
repnz
adc
nop
sub
cltd
pop
out
test
mov
or
cmc
mov
mov
fisubrs
dec
add
sub
xchg
pop
cmp
inc
out
cmp
jl
dec
mov
out
xlat
cmpsl
leave
in
sub
push
cs
push
mov
xchg
add
repnz
leave
pop
jle
or
scas
loope,pt
mov
sub
out
loopne
jmp
and
push
mov
sub
nop
lds
add
test
dec
movsb
xorl
push
lret
into
andl
out
xor
mov
xor
out
cmp
add
xor
pop
bound
pop
andl
and
cmp
push
jns
push
sbb
mov
jno
push
outsb
fisubs
les
pop
sarb
outsl
andl
hlt
pop
adc
pop
cmp
jle
push
or
sbb
inc
shll
jo
or
std
push
jecxz
push
cs
fmull
mov
jge
sbbb
fwait
decb
sub
pop
adc
outsl
or
mov
mov
pop
add
lret
imul
xchg
jge
dec
mov
sub
mov
clc
mov
sub
mov
test
dec
push
xor
in
dec
icebp
add
hlt
jnp
aaa
adc
xchg
xchg
sbb
xor
xchg
mov
scas
xor
mov
imul
sub
popf
xchg
shrb
mov
cmp
xor
negb
inc
dec
fsts
repz
sub
sub
push
dec
std
mov
mov
dec
mov
sbb
iret
push
or
sub
ret
adc
push
ds
adc
arpl
es
dec
in
sub
popa
cli
lcall
movsl
mov
xor
cmp
jle
dec
out
fwait
inc
fimuls
adc
les
cmp
ret
inc
push
xchg
popa
int
ja
ja
fnstsw
int
not
xchg
push
and
xchg
sub
or
hlt
inc
fdivl
mov
mov
sahf
es
inc
mov
sbb
adc
jb
mov
xchg
sub
hlt
addr16
ror
fstpt
lods
mov
mov
fcoml
testb
pop
mov
pushf
jle
iret
fstl
ss
or
mov
sbb
push
in
das
in
shll
pop
repz
movsb
jp
addr16
pop
orl
cs
push
pop
enter
in
mov
ds
popa
ret
sbb
test
int3
or
sbb
mov
dec
add
je
adc
lock
jno
fwait
outsb
loope
int3
lock
or
cmp
addr16
roll
push
shrl
or
fsts
xor
aas
mov
fdivr
lods
inc
pop
or
bound
out
fdivrl
pop
sub
cmc
mov
xor
xchg
push
loop
dec
pop
outsb
mov
cmc
fwait
lret
mov
adc
iret
data16
cmp
sub
dec
nop
sub
repz
xchg
in
outsl
lods
pop
xchg
sub
push
mov
cmc
push
lods
out
inc
shrb
rcrb
xchg
xchg
inc
fldl2t
jge
test
jmp
dec
xchg
cmpsl
mov
xor
jecxz
cmp
roll
test
cmpb
insb
mov
sbb
call
int
cld
ret
fistps
and
fsubrl
ficoml
push
outsl
adc
ss
and
xchg
and
or
addr16
orl
or
xchg
pop
lret
jecxz
xchg
inc
rol
inc
stos
test
rolb
jno
iret
pop
or
ja
sub
jno
aas
rorb
pushf
lods
adc
lods
adc
cld
shr
jl
mov
inc
cmp
shrb
daa
mov
sar
sub
sub
les
pusha
xor
into
dec
jnp
xchg
or
stos
push
add
add
pushf
mov
jbe
cs
lahf
sub
or
scas
push
push
adc
in
push
pop
das
mov
sbb
imul
xchg
mov
jl
mov
fbstp
sbbl
fwait
mov
jle
test
leave
incl
lods
fstps
pop
xor
dec
sti
jbe
mov
in
dec
push
xor
push
push
lds
sti
stc
je
mov
cmp
hlt
push
cmpsl
arpl
xchg
into
scas
lods
mov
pop
jg
fldl
out
popa
inc
ficoml
test
int3
fdiv
mov
push
aaa
add
mov
pop
jbe
jae
and
jns
aam
and
dec
cmp
test
rcl
insb
mov
aad
sub
sbb
mov
cmp
ss
and
mov
push
out
cld
xchg
aaa
mov
shr
or
dec
adc
cltd
fiaddl
ret
enter
iret
popaw
cmc
or
aas
insl
jnp
cwtl
xchg
insb
inc
fwait
lea
iret
daa
test
lret
fucomip
stc
add
test
sub
leave
insb
push
ja
push
inc
sbbb
jb
pop
scas
outsb
out
andb
mov
and
outsl
shlb
lahf
addr16
aam
mov
or
xchg
clc
scas
cmpsb
fbld
pop
ret
ret
ret
stos
in
cmp
out
cli
wbinvd
jge
cmp
fwait
cld
mov
or
jl
insb
add
mov
fildl
aaa
mov
push
push
jo
scas
sahf
movsl
pop
mov
fnstsw
fdivrs
or
outsl
push
pop
pop
xchg
add
cmp
mov
dec
fs
dec
xchg
xor
dec
pop
jo
dec
or
repz
sbbb
xchg
pop
stos
scas
js
inc
mov
imul
or
fs
lods
mov
mov
clc
shlb
dec
xlat
jp
cs
stos
pushf
xor
jl
or
sbb
cld
sub
dec
cmp
nop
clc
inc
lods
ror
lods
xchg
mov
test
loop
cmpsb
cltd
sub
sub
mov
outsl
adc
ds
pop
in
cwtl
das
pop
mov
mov
mov
jle
cmp
pop
cmp
cmp
int3
dec
xor
jb
xlat
fwait
ret
repnz
out
push
mov
and
pop
aas
aam
shll
repnz
sub
lods
mov
dec
jecxz
pop
sub
add
sub
lahf
fcoml
and
inc
das
imul
addr16
inc
lret
fsubr
jmp
lret
inc
les
mov
pop
add
leave
jno
shll
fiaddl
icebp
into
jg
outsb
push
test
iret
ffreep
leave
lea
lock
aaa
movsl
xchg
add
mov
inc
lods
lock
jl
sbb
dec
pop
bound
adc
pop
out
sub
leave
pusha
imul
clc
xchg
out
jb
xor
or
jl
pop
mov
pop
scas
or
mov
dec
loopne
jbe
sahf
push
mov
aam
cltd
pusha
and
repz
aas
js
mov
fs
adc
add
xor
insl
lea
loopne
push
jmp
sub
jo
xlat
hlt
hlt
pop
adc
shll
and
push
lods
adc
cld
xchg
das
cmp
adc
bound
jo
pusha
inc
ret
cli
rep
cmp
jns
fwait
or
outsl
mov
dec
and
push
lods
dec
adc
jmp
lea
push
inc
fildl
lcall
xor
dec
mov
data16
adc
sub
arpl
loop
insl
test
sub
push
sbb
or
xchg
sub
pop
popa
mov
xchg
mov
shrb
nop
cmc
test
sbb
cs
push
movsb
cmp
ds
mov
insb
mov
fwait
jecxz
pop
xor
push
imul
mov
pop
lret
jle
push
icebp
add
mov
sbbb
rcll
stos
rorl
push
add
xor
jae
mov
lds
out
lock
dec
cmc
xchg
test
mov
loopne
pop
adc
ror
rcl
jo
mov
insl
movsl
sbb
daa
sbb
mov
in
xchg
cwtl
dec
scas
xchg
sbb
jno
ljmp
call
loope
aad
dec
mov
icebp
mov
push
adc
and
mov
cwtl
xchg
push
sbb
mov
fnstsw
sbb
pop
stos
mov
aas
jp
rcll
outsl
push
fdivl
sub
enter
movsb
push
push
rcll
popa
xchg
dec
popf
sbb
dec
mov
call
arpl
add
adc
bound
mov
repz
or
insl
pop
and
bound
pop
ret
jle
inc
pusha
in
cmp
lcall
jg
ds
in
mov
sbb
popa
push
sub
inc
lea
shrb
jge
aam
in
pop
fwait
repnz
or
out
sub
push
cltd
hlt
nop
xchg
push
pop
add
lds
stos
inc
loope
test
aaa
out
or
addl
jp
jo
mov
aam
jl
push
iret
outsb
ja
mov
dec
pop
add
scas
nop
sbb
jbe
aaa
int3
mov
fwait
test
pop
ret
or
rcl
repz
cmp
insl
sub
je
cwtl
adc
sti
int3
adc
or
adc
scas
push
in
sbb
pop
lods
xor
shll
cmp
inc
popa
ljmp
mov
in
add
gs
push
fwait
adc
jmp
aaa
or
int
cmc
pop
sub
das
mov
cmp
popf
mov
imul
test
popa
fisttps
aam
out
mov
adc
and
mov
cmp
je
rcl
jmp
mov
popa
inc
popf
sbb
outsl
inc
enterw
mov
fidivl
cmpsl
push
nop
jnp
adc
lds
jl
scas
xor
cmp
adc
fnstcw
adc
jns
pusha
cmp
daa
mov
fdivp
lret
jbe
jbe
sbb
leave
jbe
sub
xchg
repnz
stos
lds
push
insl
rorl
stos
xchg
fstp
fstpt
xchg
lret
cmp
pop
jmp
inc
pop
cmp
xchg
cld
fwait
dec
pop
ljmp
pushf
mov
xor
pushf
stc
and
cmp
inc
adc
dec
call
cmp
cli
fldl
push
loopne
add
clc
mov
sub
mov
shr
iret
pop
jo
fnsave
ret
and
dec
jmp
aaa
testl
ljmp
jne
sub
mov
lcall
ja
cmp
popa
and
xchg
mov
cwtl
and
and
daa
outsl
je
aaa
inc
mov
push
popf
sbb
fxch
dec
mov
inc
jge
xchg
sti
test
push
in
rorl
dec
repnz
and
mov
mov
xlat
lods
shll
pop
aad
xor
jne
icebp
adcl
mov
insb
or
lahf
sbb
or
mov
lea
shll
mov
mov
dec
push
insl
shrb
xchg
push
inc
aam
sbb
fidivl
lret
xchg
adc
adc
scas
sarl
mov
jno
imul
pop
rcrl
stos
dec
jl
and
mov
out
arpl
pop
jecxz
jnp
fwait
into
mov
pcmpgtw
mov
rorb
pusha
xor
js
je
in
imul
cmp
pop
or
jle
notb
jo
test
jns
icebp
push
cmp
div
cmpsb
cmp
xor
jne
push
add
push
nop
sbb
jne
incb
divl
xchg
push
data16
nop
daa
cmp
iret
dec
push
add
cmp
out
clc
pop
ret
hlt
push
aad
ret
mov
pop
fwait
jle
int
out
stc
scas
pop
js
or
inc
dec
out
stos
scas
lret
cld
push
dec
ds
outsl
daa
push
pop
inc
cli
mov
pop
add
and
mov
bound
xor
push
and
cwtl
add
cltd
mov
in
cld
fisttps
movsl
adc
scas
jo
sub
mov
into
leave
punpcklwd
or
incb
mov
xor
jg
xor
or
rolb
push
jl
dec
xchg
pop
add
xor
scas
cmp
in
mov
add
dec
arpl
and
and
insl
in
add
xchg
cld
xchg
and
adc
insl
pop
outsl
les
icebp
pop
ss
cmp
loope
dec
adc
pusha
jb
inc
ds
xor
or
inc
mov
mov
les
adc
and
enter
pop
dec
or
stos
cmp
out
mov
daa
jo
clc
aam
push
push
insb
rcll
imul
std
dec
dec
int3
arpl
call
mov
bound
js
imul
out
xchg
mov
or
cmpl
pop
push
mov
mov
clc
and
pop
leave
xor
push
test
icebp
jmp
dec
or
ljmp
add
lock
lret
and
push
cmp
mov
push
sbb
push
enter
pop
inc
ss
or
loope
jecxz
pushf
hlt
push
jp
out
add
imul
loope
loop
jmp
es
xor
fcomps
add
jo
in
out
popf
push
mull
aaa
mov
movsb
ficompl
out
test
scas
sub
xchg
push
out
adc
xor
insl
pop
call
cmp
and
enter
lahf
xor
scas
jne
int
popw
adcb
jb
lods
mov
dec
xchg
lcall
xchg
jo
popa
insb
int
bound
int3
jmp
mov
repnz
in
jg
push
inc
shl
cmpsb
daa
sbb
enter
inc
loope
xchg
adc
lret
add
arpl
insl
std
dec
sbb
int
dec
aam
lods
loop
sbb
jl
les
dec
xchg
call
test
adc
ja
shll
std
orb
inc
sub
sbb
sub
or
jno
xor
fists
out
pop
mov
bound
dec
xchg
stos
pop
xor
lods
nop
mov
lahf
imul
lret
sub
mov
xor
imul
xchg
jecxz
hlt
lahf
mov
stos
out
fstpl
inc
lods
inc
push
call
lret
inc
inc
inc
in
sub
stos
and
push
ja
inc
push
in
test
adc
loop
mov
adc
adc
test
repz
mov
nop
dec
cli
dec
mov
imul
inc
fnstsw
fwait
dec
ret
pop
jle
out
test
cmp
jmp
xorl
movsb
or
pop
shlb
inc
cmp
cmp
mov
xor
mov
sub
push
fisubrs
adc
inc
int
sub
mov
std
loope
cmpsb
cmp
test
pop
in
jnp
cli
push
negl
cmp
mov
out
push
cmp
sub
aaa
push
test
mov
inc
vunpcklpd
stos
addb
nop
insb
mov
dec
jg
mov
and
insl
jl
test
sbbl
inc
cmpl
aam
call
aaa
stos
lods
mov
pop
ret
cli
pop
dec
sahf
cmc
dec
mov
nop
fwait
andl
daa
test
cmp
scas
cli
test
inc
mov
pop
adc
pop
dec
loopne
fnstsw
int3
and
xor
jmp
dec
xchg
jne
xchg
arpl
push
jne
mov
mov
jg
in
test
xorl
sub
cmc
push
xor
or
jbe
and
stos
fildll
mov
sub
lret
jmp
pusha
pop
inc
push
dec
les
cmp
ja
shr
dec
sbb
dec
push
ljmp
loope
mov
inc
pushl
sarl
lahf
push
punpckhdq
push
mov
lods
sbbb
addr16
or
jp
addr16
push
stc
inc
fsubs
jp
leave
pop
pop
xor
push
mov
sub
dec
int
jl
add
push
dec
cmp
cmp
push
add
jae
jp
gs
mov
in
jne
mov
pop
sbb
and
pop
lcall
dec
fistpl
push
and
dec
clc
sbb
push
pop
or
add
repnz
stos
pusha
not
aaa
jno
cmp
jo
push
lock
pop
imul
fidivrl
lcall
push
lods
or
cmpsl
jp
lds
mov
das
lea
mov
pop
cli
xchg
jne
push
inc
mov
hlt
xchg
cli
mov
test
pop
out
mov
push
hlt
pop
outsb
popa
mov
cmpsb
cmp
vmptrld
jg
fists
jo
mov
xor
push
xchg
jl
xchg
sti
fnstcw
xlat
outsb
in
cltd
xchg
cs
fisttps
or
aam
sbb
les
enter
or
mov
in
test
icebp
mov
lret
jl
xchg
sub
push
jno
mov
pop
mov
sti
sub
sub
incl
push
lods
cmp
jp
sbb
jmp
mov
inc
rcll
cpuid
or
test
push
lock
mov
mov
es
cwtl
flds
add
test
and
sbb
orb
test
adc
adc
nop
and
jno
push
test
ss
clc
cmpsb
mov
pop
cld
stc
or
mov
jp
mov
push
stos
cmp
pop
enter
xchg
test
jbe
push
mov
mov
pop
fldl
mov
in
hlt
sub
popa
fucomi
addb
pop
les
inc
inc
push
push
mov
xchg
push
fidivrl
push
lods
inc
rcrl
das
or
int3
mov
lock
rcl
add
mov
loop
sbb
mov
rolb
push
out
xchg
sbb
std
adc
cs
sbb
fdivrl
dec
jge
ficoml
shrl
popa
ja
arpl
xlat
addb
pop
push
push
jge
divl
cmp
adc
imul
outsb
xorl
jb
stos
push
dec
mov
jl
xor
sub
or
fidivs
into
pop
pop
addb
xlat
inc
jbe
jno
push
cltd
or
cs
negl
add
lods
clc
sub
cmpsl
inc
inc
or
and
push
pop
adc
repnz
shl
out
pop
pusha
nop
cmpsl
cmp
and
or
xor
mov
loopne
push
push
cmp
out
jb
mov
icebp
iret
in
jb
stc
lods
mov
xchg
shr
iretw
xchg
scas
insl
lods
push
out
push
jb
jecxz
sbb
push
lret
jp
push
mov
jbe
dec
loop
ds
xlat
push
stc
hlt
pop
test
inc
int
fsubr
pop
lock
icebp
and
sbb
pop
mov
add
es
add
fwait
mov
lds
mov
in
jne
dec
push
xchg
jb
repnz
shrb
std
fs
stc
jg
mov
or
add
lcall
aas
js
xor
and
jle
addr16
jge
test
lods
ret
and
cmp
pop
inc
pop
push
mov
dec
push
addr16
test
xor
arpl
cmp
rorb
sub
pop
xchg
xor
jp
jne
aas
jns
jno
outsb
jl
xchg
and
lcall
sbb
mov
mov
cwtl
cmpsl
lds
mov
gs
sub
mov
ja
mov
dec
or
xor
or
ret
into
daa
pop
mov
adc
sahf
or
xorb
or
push
cwtl
fcomps
aam
jns
mov
mov
dec
mov
test
out
cmp
push
sub
mov
or
sub
adc
fadds
push
jne
dec
mov
shlb
xchg
adc
cmpsl
push
jmp
stos
push
add
fldt
adcb
clc
loop
insl
sub
roll
in
push
mov
xor
xchg
push
in
call
mov
ljmp
frstor
je
jge
es
mov
stos
shrb
test
xlat
ljmp
sub
aad
std
add
push
jnp
sub
inc
xchg
loopne
fsubr
jbe
sbb
imul
xorl
adc
sbb
insl
fildl
jne
inc
xlat
push
adc
je
pop
dec
popf
jno
call
jns
hlt
mov
scas
cs
xchg
movsl
adc
or
bound
xchg
dec
push
sahf
aad
pop
es
sub
add
aad
imul
mov
xchg
stos
pop
fisubl
pop
hlt
or
ds
lock
popa
push
loope
jp
dec
jmp
push
and
out
dec
bound
push
mov
stc
xchg
cmp
fs
test
std
lahf
test
cmp
sbb
sub
push
mov
push
mov
outsb
mov
loopne
ficoml
jmp
mov
imul
into
jno
fcompl
xchg
or
adc
data16
lret
movsl
inc
xor
mov
out
sbb
mov
movsl
sub
loop
jno
cmp
in
andl
int3
pop
out
xor
push
jp
cmp
xor
mov
andb
push
dec
mov
std
lods
scas
adc
push
mov
les
shrb
push
push
aad
cld
shl
push
dec
shr
leave
nop
dec
mov
push
ficoms
jge
inc
lea
cmp
dec
test
insb
adc
lds
fnstsw
pop
fxch
jne
sub
movsl
mov
mov
and
leave
outsl
test
lret
mov
sub
mov
setle
dec
arpl
lods
and
test
lret
jnp
repz
dec
xor
nop
jbe
xchg
sbb
jecxz
scas
sbb
xchg
gs
loop
popa
inc
ret
dec
jns
mov
outsl
rcrb
out
push
ljmp
jb
fidivl
push
jb
xor
inc
rorb
and
sbb
mov
sub
lock
and
jmp
sbb
imul
sbb
cmp
bound
dec
push
out
int
lret
ds
outsb
sbb
pop
jp
lock
xchg
outsb
cmpsb
loopne
movsl
dec
inc
in
lods
imulb
mov
mov
mov
pop
pop
pop
sbbl
add
sbb
mov
mov
mov
cmc
into
hlt
jmp
and
shll
or
out
cmp
jmp
fsts
push
or
testb
jge
mov
sbb
rcrb
jb
xchg
adc
jecxz
push
sub
mov
lea
test
fs
rcl
sub
and
jl
mov
mov
das
jnp
sti
inc
dec
push
adc
pop
leave
lea
in
daa
cmp
sbb
jnp
jp
pop
or
test
mov
pop
inc
and
push
movsl
cmp
ss
sub
mov
mov
mov
pop
data16
mov
test
push
sub
jl
subb
out
lcall
jno
cmp
mov
std
popf
fcoms
mov
sbb
sbb
push
out
adc
pop
shll
sbb
mov
pusha
adcl
mov
test
xchg
out
test
jno
cmp
and
stos
mov
lahf
ss
ljmp
je
sub
hlt
mov
in
mov
push
add
jmp
push
ljmp
jno
mov
pop
subl
and
dec
test
jg
das
inc
xchg
inc
fistpl
pminub
add
jae
hlt
jl
iret
dec
lea
mov
jbe
mov
rcll
jle
fsubr
adc
or
mov
pop
icebp
mov
mov
test
mov
jo
push
jb
inc
and
pop
outsl
insl
jno
dec
aaa
imul
jne
push
adc
lahf
jmp
loopne
ja
sar
orb
cltd
xor
loope
mov
inc
daa
loop
xor
ja
in
scas
adc
sub
lahf
ss
outsb
jb
mov
push
mov
lret
daa
xchg
aas
aaa
jnp
cmpsb
popf
shll
idivl
mov
jl
shlb
sub
pop
push
icebp
lods
inc
inc
addr16
pop
out
push
imul
es
je
jo
jo
test
push
mov
jbe
push
cmp
sub
mov
jbe
mov
jns
pop
dec
and
add
pusha
xchg
add
jnp
mov
inc
xchg
inc
out
mov
test
bound
rcl
popl
add
shr
data16
xchg
cmc
push
je
sub
adc
inc
push
mov
popa
push
aas
sar
pop
mov
inc
sahf
in
jns
arpl
ffreep
rorl
ret
xor
inc
mov
jmp
out
mov
pop
sub
loopne
lcall
leave
or
push
push
out
jne
mov
jmp
fstpl
mov
cs
and
js
jmp
in
xchg
mov
shr
movsb
fwait
cmpsb
cmp
pop
mov
push
stos
stc
jb
xor
xchg
std
cmc
clc
cmovbe
jge
jno
push
jp
or
mov
nop
jg
push
mov
dec
pop
stos
or
mov
pop
arpl
mov
fcoml
mov
in
imul
roll
arpl
jno
xchg
inc
mov
into
icebp
sbbb
mov
aam
pop
fcoms
cmp
fadd
aaa
jae
adc
fs
aad
adc
mov
mov
pushf
jno
sahf
sbbl
cld
xchg
xor
mov
and
stos
shr
adc
icebp
or
andb
adc
pop
outsl
clc
ja
repnz
int3
andb
fnstsw
shrb
mov
jnp
ja
int
dec
cltd
and
scas
lods
shr
jnp
xor
mov
fucomip
cmp
xor
andb
in
fsubrs
scas
sub
sbb
testl
dec
in
adc
insl
outsl
negl
mov
cmp
dec
pop
hlt
or
lds
push
sbb
shl
add
mov
cmp
dec
mov
xchg
and
rcl
sub
rol
push
sarb
ret
mov
fsubs
add
cli
je
pavgw
movsl
clc
mov
xchg
out
xor
in
sbb
mov
fstl
mov
jl
mov
add
loope
test
ljmp
scas
and
aaa
cmp
pop
shlb
sub
pop
push
push
mov
and
mov
jmp
cld
sti
xchg
inc
fcmovb
les
add
adc
mov
cmpsb
cmp
lahf
mov
iret
loop
ret
outsl
mov
inc
jecxz
mov
cltd
shr
out
outsb
pushl
jle
loopne
sahf
xor
or
push
mov
xchg
adc
and
aaa
xor
mov
test
std
and
add
cwtl
xchg
mov
push
cltd
mov
test
xor
fisubs
shrb
or
jge
push
pop
cwtl
mov
gs
xchg
adc
push
add
dec
andb
push
outsl
dec
and
dec
cmpsb
pop
aaa
fisubrs
pushf
cmp
or
ss
je
rcll
mov
xchg
mov
mov
cltd
push
mov
iret
pop
jb
xchg
jmp
scas
sub
xor
push
jnp
xlat
out
js
insl
test
xor
xchg
into
inc
insl
loopne
out
cmp
popf
aad
mov
mov
arpl
xchg
ret
cmpsl
xor
mov
mov
xor
test
fmull
mov
xchg
sub
decb
cmpsb
pusha
shr
mov
rcrb
fadds
sbb
call
in
pop
mov
xchg
outsl
rorb
jmp
cli
and
mov
dec
add
mov
shrl
push
push
rcll
cmp
aaa
jg
cli
and
push
xchg
add
adcl
jecxz
and
pusha
pop
or
jbe
adcb
jp
lret
inc
out
hlt
out
fisubrl
adc
sub
call
xchg
psubb
sbb
loope
clc
sahf
inc
fcmovb
pop
and
xchg
pop
mov
sub
fistps
ss
pushf
mov
add
data16
xlat
mov
adc
shll
imul
or
insb
xor
pop
stos
add
xor
insl
insl
lods
leave
int
mov
shl
xchg
add
inc
scas
inc
xor
enter
jae
mov
pop
mov
test
push
cld
loopne
lods
cmpsl
sbb
int
sub
xchg
aam
and
dec
mov
adc
test
movsb
out
call
shrl
aad
jb
repnz
xor
repnz
inc
lret
repz
mov
lds
pop
pusha
mull
out
popa
stc
jg
sarl
pop
fmull
cmpsl
mov
js
push
mov
cmp
push
or
popf
sub
dec
pop
sub
arpl
xchg
or
push
cmp
add
popa
cmp
add
cmc
adc
aaa
cmp
incb
cld
sub
pop
dec
nop
decl
fnstsw
push
mov
imul
push
loop
sub
in
dec
push
and
andl
in
mov
je
es
cld
pusha
and
sub
insb
pop
xor
push
bound
movsl
inc
test
jle
pop
push
pop
loop
mov
dec
add
into
lcall
cmpl
fistl
sub
leave
stc
mov
mov
in
adc
insb
das
pop
mov
loop
jmp
dec
pop
test
cltd
std
insl
enter
sub
int3
cmp
ret
push
repz
jae
outsl
cmp
add
jbe
pop
cwtl
sub
repz
mov
push
push
dec
and
jne
jnp
rol
mov
mov
and
lock
imul
rcll
push
add
lret
and
jmp
xorb
nop
setns
sbb
push
sbb
decl
or
pop
pop
shr
in
sti
adc
adc
and
cli
xchg
jge
mov
xor
pop
sub
lea
sbb
jge
sub
les
cmpsl
add
arpl
mov
int3
sbb
int
dec
jg
pushf
push
xchg
int3
jecxz
and
dec
pop
mov
idivl
movsl
inc
mov
and
cwtl
cmp
stos
xchg
imul
jbe
inc
and
inc
iret
mov
jno
insl
stc
sub
cltd
into
inc
lahf
cli
cmp
jne
out
mov
mov
js
push
lret
sub
shrb
jp
mov
inc
add
aas
fisttpll
push
push
movl
mov
push
insl
sub
into
xchg
out
dec
and
pop
xchg
mov
mulb
pop
dec
jp
cmpsl
xchg
jae
enter
mov
pause
filds
adc
icebp
jge
push
mov
movsb
push
and
adc
push
cltd
daa
add
mov
and
icebp
push
mov
jo
dec
push
cmpl
and
jecxz
jae
dec
mov
inc
jnp
stos
daa
lret
rol
jl
fdivl
pop
inc
jle
lock
loope
rcrl
shlb
dec
cmp
subb
xchg
sub
lret
push
and
and
btc
pushf
dec
cltd
inc
ret
cli
push
jnp
adc
fstl
adc
push
daa
inc
cmp
jb
lock
cmp
adc
mov
outsb
rcrl
sbb
mov
sub
loope
cmc
pop
test
icebp
ljmp
jmp
fsts
cld
push
dec
jbe
add
xchg
not
iret
sahf
clc
sahf
xchg
sbb
adc
stos
in
cltd
mov
mov
das
stc
jnp
je
loopne
es
fwait
and
xchg
in
pusha
mov
subb
les
sub
pop
xor
adc
fnstenv
testl
in
jbe
or
sbb
inc
repz
inc
cmp
lcall
inc
push
aas
cmpl
leave
cli
push
and
push
pop
dec
bound
sbb
sbb
push
in
lds
dec
push
lock
or
push
dec
ja
adc
ss
and
test
test
mov
add
push
cmp
stos
cld
pop
shrl
adcb
mov
outsb
xlat
push
mov
scas
xlat
or
ret
insb
mov
loope
mov
add
flds
js
rolb
jns
mov
push
mov
negb
mov
adc
sbb
push
xchg
xor
out
xchg
cmp
bound
fcoml
xor
cwtl
sub
pop
or
xchg
mov
nop
in
inc
pop
dec
or
xor
adc
dec
jmp
add
mov
push
cltd
xor
mov
cld
or
test
xchg
cmpsl
sub
popf
aad
roll
mov
inc
jmp
stc
dec
in
adc
cmp
dec
xlat
mov
aam
push
or
pop
loope
mov
and
iret
jp
addl
mov
clc
pop
ror
pop
add
jge
pop
arpl
mov
aam
std
pop
xor
dec
mov
cmp
fs
imul
jbe
push
mov
test
int3
aaa
jae
push
sti
movsb
cmp
icebp
inc
push
cmp
xor
mov
int3
lahf
mov
adc
push
and
push
jns
dec
push
jno
hlt
add
inc
mov
mov
push
sti
hlt
sbb
rclb
pop
rolb
scas
scas
lods
aad
ret
repz
movsb
push
adc
mov
xor
inc
xlat
pop
mov
cltd
iret
bound
out
ss
adc
lock
cmp
stos
xchg
pop
lahf
aam
push
or
xchg
pop
dec
and
push
dec
jp,pt
jmp
stc
int3
push
nop
in
fidivl
jno
xchg
xor
lahf
mov
dec
inc
in
mov
shr
xor
cmc
pop
mov
cwtl
das
mov
inc
fcomip
adc
lret
push
test
xor
pop
cmc
in
popf
insb
fwait
sbb
and
xchg
xor
dec
cld
jl
sbb
mov
std
lock
lret
adc
or
sbb
and
shr
in
nop
cmpsb
lock
pop
add
scas
pop
sarb
xchg
sub
daa
pop
aaa
movsl
sahf
sub
out
stos
xor
sub
sub
and
dec
dec
dec
dec
icebp
cmp
mov
ljmp
ret
cmp
mov
inc
push
xor
movsb
or
cmpsb
es
lods
and
or
cmp
in
je
ds
mov
inc
outsl
imul
dec
inc
fidivrs
stos
sub
stos
mov
mov
or
pop
push
aam
sahf
add
imul
jg
pop
dec
xchg
lahf
push
adcb
xchg
mov
lcall
sub
cwtl
jbe
ss
cltd
xor
test
iret
mov
push
call
aad
push
inc
xor
mov
mov
inc
inc
ss
mov
jecxz
jp
jno
and
ds
mov
mov
or
xor
arpl
hlt
mov
push
sub
mov
stos
rol
movsl
imul
xor
adc
insb
adc
outsl
jecxz
sbb
mov
cli
ret
and
and
jle
leave
mov
and
pop
push
mov
int
mov
rcl
jo
out
adc
sbbl
cmp
xor
into
out
xchg
les
xor
sub
iret
mov
mov
and
cli
sti
push
cmp
clc
dec
out
outsl
mov
fwait
addl
mov
mov
ja
out
jae
in
test
fadd
pop
adc
xchg
out
xchg
fmull
ljmp
test
shll
mov
ds
inc
stos
pop
adc
inc
gs
int3
fnstsw
lea
call
int
xchg
xchg
and
sahf
and
jmp
push
mov
push
cmp
orb
mov
clc
and
lods
or
and
jl
xchg
adc
ss
jl
jns
and
xchg
stc
or
push
mov
adc
or
cwtl
mov
lahf
notl
mov
aaa
dec
jecxz
insb
sub
xor
daa
inc
push
fisubrl
ljmp
adc
in
pop
mov
sub
ljmp
mov
mov
js
xchg
or
jb
sbb
lret
repz
sbb
outsb
aas
xor
sbb
fucomip
popa
andb
out
lods
insb
inc
pop
mov
lods
sub
out
inc
tzmsk
sbb
data16
repz
lret
bound
xor
pushl
pop
jecxz
aam
add
fsubrp
lods
pop
dec
or
out
lret
jl
rcrb
mov
sbb
mov
insb
mov
mov
or
insb
jl
pusha
aaa
rcrl
repz
pop
sti
leave
imul
xchg
loopne
mov
and
push
popf
and
lcall
cmc
rorl
jl
mov
repnz
xchg
out
sbb
adc
xor
pop
cmp
in
sub
sbb
dec
mov
pop
lods
push
jg
jmp
xchg
minps
jno
pop
jecxz
sbb
inc
popf
dec
mov
push
adc
flds
xchg
pushf
jle
faddl
mov
mov
and
test
out
or
incl
cmpsb
mov
xor
shrb
mov
imulb
pop
scas
cmp
mulb
imul
insl
mov
testb
add
and
inc
arpl
xlat
lods
adcl
pop
jmp
scas
mov
push
xlat
mov
xor
xchg
xor
ret
cmc
push
test
inc
jg
loop
bound
je
ljmp
add
dec
mov
lret
mov
mov
je
stos
nop
push
mov
adcb
pop
fs
es
mov
in
or
sub
push
mov
cld
mov
outsl
dec
cmp
cmpl
lods
repz
jb
imul
push
push
add
inc
icebp
inc
inc
push
icebp
daa
js
pop
sub
pop
sbb
in
fidivs
or
add
test
jge
mov
push
add
lcall
push
add
loope
lcall
out
lcall
and
and
aam
subb
fisubrs
jb
mov
es
les
icebp
push
pop
cmpsl
notl
stos
inc
sbb
xor
dec
and
jae
sbb
dec
lods
inc
loope
loope
push
mov
inc
lock
stc
xchg
xor
ja
into
mov
sbbl
or
hlt
mov
xchg
adc
dec
adc
insb
int
push
lods
or
or
xchg
jno
out
ss
sti
dec
testb
jg
inc
xor
cld
gs
popf
cmpb
dec
push
xor
push
jno
cld
xchg
cld
xchg
lods
int3
test
cld
sbb
sub
adc
icebp
cld
push
jg
ficompl
add
dec
loopne
xchg
push
rorb
inc
and
sti
add
bnd
push
mov
mov
mov
in
shrl
loop
mov
shrb
xor
outsl
out
lods
aaa
iret
sub
push
and
rcrb
cmp
jns
negl
sub
mov
mov
inc
mov
fwait
sti
push
mov
cltd
std
push
mov
mov
jbe
push
add
mov
and
popa
lea
aad
mov
fdivrl
xchg
mov
movsl
inc
insb
push
hlt
lret
push
add
enter
sub
stos
inc
movb
das
add
leave
or
add
push
ds
test
or
pop
enter
xchg
ljmp
ret
or
test
jmp
popa
push
ror
jo
sahf
aas
cmp
add
mov
pop
outsl
stos
rdtsc
lahf
lock
pop
cmpsl
cmpl
icebp
inc
lock
popa
mov
arpl
test
daa
addr16
or
mov
dec
jns
add
popa
dec
dec
iret
cmp
cmp
add
fstpl
push
out
pushf
clc
cmp
sub
inc
mov
test
fisubs
jnp
mov
out
shll
insb
add
jns
mov
add
pop
loope
in
mov
push
mov
push
and
mov
or
adc
pop
push
scas
mov
mov
or
mov
scas
pop
push
shrb
dec
xchg
push
xor
cmpl
and
ret
icebp
sbb
ss
loope
pop
cltd
mov
xchg
in
mov
jb
xchg
adc
dec
into
pusha
sub
push
shr
lcall
mov
aam
or
iret
xorb
fsub
inc
pop
xchg
xchg
out
sub
mov
iret
push
cwtl
push
imul
mov
imul
lock
sbb
movb
pop
mov
jne
adc
shll
test
std
sbb
jo
arpl
mov
cmpsb
cmp
sti
jl
jg
xor
je
mov
mov
sub
pushf
xor
lret
mov
imul
int3
lahf
rcrb
dec
push
cmp
inc
loopne
mov
leave
inc
rclb
outsb
add
fsts
scas
int3
inc
cld
xchg
ss
ret
out
and
enter
inc
mov
xor
loopne
call
xor
sub
jecxz
add
jae
clc
pop
test
fwait
sbb
addr16
adc
cwtl
or
repnz
outsl
pop
icebp
pop
push
into
gs
stc
enter
pop
push
sbbl
ja
or
pop
inc
insb
add
or
fbld
sbb
out
in
filds
test
and
xchg
out
dec
jecxz
mov
cmpsl
sti
dec
add
lahf
ljmp
stc
push
pop
cmc
inc
xor
mov
jbe
push
das
mov
push
jne
pop
out
and
pop
push
lret
outsl
hlt
pop
repnz
xor
dec
scas
into
sarb
lea
callw
iret
addr16
les
cmp
insb
add
mov
mov
insl
aas
clc
cmpsl
dec
jmp
xchg
inc
jae
rcrb
mov
sbb
xchg
or
xchg
out
sbb
into
mov
test
jle
sub
inc
test
outsl
les
sarb
mov
xchg
or
jp
and
cmpsl
lahf
fnstsw
adc
jecxz
dec
test
ljmp
pop
mov
push
clc
xorl
psrlw
jo
pop
pop
call
push
mov
jnp
push
insb
xor
push
mov
sub
add
lahf
cld
mov
pop
in
mov
jnp
mov
call
cmpsl
cmp
push
jmp
adc
mov
add
xor
xchg
inc
add
test
dec
int3
movsl
repz
hlt
xor
stc
or
mov
loope
add
jns
mov
out
fistpll
rorb
add
cmp
cmp
lret
cmp
and
icebp
or
and
sub
or
jbe
inc
jmp
jns
nop
push
sbb
and
sub
jbe
cmp
fwait
out
xchg
sub
imul
mov
je
and
cmp
gs
jae
mov
mov
jnp
sub
cmpsl
sub
leave
sbb
scas
inc
orb
arpl
call
test
cmp
clc
shl
rcrl
ljmp
out
and
cmp
jo
and
in
leave
mov
jae
cmp
and
sub
inc
mov
or
lds
rcrb
dec
dec
ret
pop
insl
hlt
fmul
inc
push
add
lcall
loope
test
cmp
mov
loopne
lahf
data16
repnz
mov
pop
mov
xor
xchg
cmp
cmpsb
and
mov
or
cmpsb
jge
xchg
outsl
lret
push
dec
mov
loopne
cmpb
mov
dec
jle
je
ss
test
ret
imul
inc
out
dec
adc
je
push
mov
mov
push
or
xchg
adc
sbb
imul
inc
xchg
xor
ljmp
cmp
shrb
fwait
cmpsl
andb
adc
push
sub
sbb
shlb
dec
xchg
mov
fisubrl
or
pushf
xor
lret
push
stos
fnsave
push
test
shr
mull
lahf
orb
sbb
adc
test
fiaddl
mov
in
or
xor
pop
xchg
ds
hlt
pusha
lods
in
inc
jae
jbe
jnp
fnstsw
xchg
js
aam
inc
pop
xchg
push
mov
jl
sub
and
dec
adc
daa
inc
inc
xchg
lods
popa
out
nop
inc
repz
xchg
inc
clc
mov
cmp
push
cmp
in
int
out
xor
iret
xor
push
mov
mov
jp
sub
xlat
push
clc
sub
movsl
inc
int
inc
xlat
pusha
das
int3
and
and
dec
mov
mov
ret
jge
call
cmc
gs
cs
enter
test
sbb
shrb
adc
xor
int
jne
pusha
xor
int
movlhps
inc
popa
sbb
pop
addr16
mov
jns
loope,pt
sbb
outsl
daa
pushf
stc
xor
mov
inc
pop
repnz
push
leave
popf
mov
pop
lret
out
push
loope
out
push
sbb
stos
scas
push
lods
or
jne
loope
adcl
push
out
in
cwtl
xchg
and
xchg
pop
fwait
mov
icebp
daa
sub
mulb
lcall
lock
mov
mov
lods
loop
inc
test
movsb
push
sub
push
xchg
xor
insl
or
out
mov
ss
adc
inc
subb
fwait
ret
stos
add
mov
std
imul
scas
jno
pusha
jg
pop
mov
inc
jecxz
lock
ret
jns
add
mov
out
mov
and
movsb
pop
mov
std
pop
es
sbb
clc
movb
cwtl
movsb
fmul
sub
cmpsl
test
lods
push
adc
dec
push
dec
lret
xlat
dec
jbe
out
push
sub
leave
repnz
iret
and
pop
push
imul
push
pop
adc
jb
test
ret
les
sub
push
ljmp
cmp
add
hlt
insl
mov
movsl
mov
push
shl
insl
mov
gs
call
popa
push
cmp
insl
mov
popa
aad
pop
mov
or
sub
sub
insb
jns
xchg
imul
pop
loopne
xchg
adc
xchg
mov
pop
aaa
adc
movsb
hlt
rcl
adc
or
pop
in
dec
aas
push
mov
jle
cmp
or
out
fbstp
xchg
sbb
xor
sub
fsubrl
std
gs
in
movsl
mov
adc
jp
inc
sbb
sub
xchg
mov
scas
add
mov
out
lods
mov
sub
pop
flds
insl
mov
les
mov
arpl
adc
inc
xchg
and
adc
mov
pop
push
sbb
icebp
inc
mov
rcrb
lret
divps
clc
xlat
sub
pop
mov
mov
cmp
cmp
ds
sub
sbb
nop
xchg
mov
ss
pop
cmc
mov
jo
inc
int
std
jo
push
cltd
std
xchg
stos
repz
rcll
pushf
pop
nop
shrl
cwtl
ss
dec
inc
mov
je
or
jbe
pop
jl
jle
inc
sbb
jnp
mov
loope
xchg
jnp
xchg
pushf
push
push
jae
enter
scas
mov
lds
mov
bound
cmp
cmp
fs
std
and
subb
or
pop
shlb
into
mov
in
into
mov
testb
jno
cmc
pop
dec
sub
mov
lods
int
movsl
ja
int
mov
mov
xchg
lea
mov
xchg
pop
repz
daa
mov
push
testl
dec
clc
mov
cld
xlat
jl
and
fisttpl
fwait
mov
mov
movb
shlb
fstl
or
mov
xchg
push
insl
insl
leave
jmp
mov
push
dec
leave
mov
sub
lahf
fisubs
jns
or
stos
ret
jp
pop
in
mov
xchg
adc
leave
lods
popa
inc
push
xchg
or
in
push
cmp
pushf
inc
xchg
pop
int
shrl
mov
icebp
push
es
inc
insb
inc
fistpl
mov
cwtl
jl
cli
jae
pop
ss
xchg
xorl
xor
inc
repz
out
out
jno
mov
lods
push
daa
cmp
lods
xchg
pop
mov
xchg
and
jnp
or
stc
push
sub
inc
sbb
cmpsl
push
out
loopne
cmp
stos
iret
neg
mov
sbb
ds
aas
aas
enter
insl
lea
dec
jns
stos
push
loope
fwait
mov
inc
aam
daa
ljmp
outsb
loope
cmp
push
push
jge
adc
sub
mov
mov
enter
xchg
dec
ret
jbe
xor
sub
ret
pop
pop
popf
scas
inc
insl
mov
das
jo
int3
xchg
adc
lock
sahf
adc
sub
xchg
mov
insl
jo
lahf
int3
cmp
fstpl
in
sbb
push
test
ficoml
inc
xchg
pop
cmp
ficoms
mov
add
or
imul
mov
dec
mov
adc
lahf
int3
sub
pop
lcall
arpl
add
dec
test
xchg
leave
test
shrb
out
jge
adc
xchg
jge
aad
hlt
inc
push
in
jl
addr16
outsb
popf
push
movsl
sub
jl
or
or
inc
mov
int3
arpl
mov
jle
xor
add
pushf
cmp
lret
jb
and
push
adc
arpl
out
loopne
and
into
in
int3
cmpsb
xchg
xchg
xor
and
sarb
sbb
lea
repz
scas
push
bound
int
mov
xchg
xchg
xchg
xor
inc
out
jb
cmp
sbb
lret
xor
mov
fs
mov
jg
mov
jg
shr
pop
in
adc
pop
cmp
inc
mov
imul
push
ja
pushl
fwait
or
out
cmp
mov
mov
into
mov
fbld
cmp
add
pop
out
push
mov
pop
dec
xor
pop
sbb
ret
jp
inc
dec
lock
rcll
jnp
js
cld
dec
cmp
adc
or
into
mov
std
lahf
fcoml
dec
and
sbb
sub
jnp
add
mov
jno
push
test
mov
adc
jmp
cmpsl
in
pop
andb
mov
movsb
fidivs
xchg
aad
pusha
or
aas
push
lahf
cmp
roll
mov
pop
mov
add
les
loopne
es
push
push
lea
xchg
sbb
add
xlat
scas
mov
xor
pop
outsb
ljmp
mov
sbb
or
xor
test
in
xchg
das
rorb
call
shrl
enter
shrl
mov
std
and
dec
jecxz
dec
leave
pop
movsl
repnz
cli
fsubrs
mov
out
ds
or
jl
sbb
ds
xchg
add
cmp
adc
sub
lahf
add
pop
mov
cmp
ret
push
fidivl
in
jmp
mov
inc
call
cmc
leave
data16
fistpl
aam
pop
and
pop
jns
ficoml
scas
ss
mov
rcrb
mov
pop
mov
mov
and
jne
cltd
xor
pop
and
out
mov
and
nop
mov
gs
vmptrst
mov
rclb
ja
testl
das
xchg
clc
or
rcrl
andl
jle
mov
popa
out
test
pushw
orb
mov
and
jp
push
in
jb
xor
in
mov
nop
mov
sbb
jbe
jge
or
std
push
push
push
adc
xor
xchg
sub
insb
cmpsb
xchg
jp
sub
mov
pop
jns
jl
imul
out
ss
pop
mov
test
mov
sti
cltd
xor
mov
xchg
aaa
dec
ror
mov
lahf
notl
mov
pop
jae
das
cltd
lahf
sbb
pop
jp
mov
dec
sbb
jl
clc
fcompl
dec
or
and
mov
dec
cmp
xor
test
lods
xor
clc
insl
stos
xchg
notb
adc
add
dec
mov
aam
cmpsb
mov
sbb
cmp
pop
js
add
xor
decl
mull
sbb
push
mov
xlat
push
stos
cmc
aam
rcrb
dec
mov
or
xchg
xchg
dec
in
sbb
xchg
lret
jno
mov
dec
push
aaa
stos
and
push
pop
and
mov
mov
out
scas
sbb
pop
jb
cli
negl
push
sbb
adc
push
sbb
ss
jo
sbb
fsubr
sbb
lods
jmp
fmuls
jecxz
sbb
push
jg
pop
jno
mov
cmp
gs
sbb
aas
dec
sbb
dec
push
lods
call
dec
mov
jb
mov
stos
mov
pop
jge
inc
and
scas
aam
fldenv
gs
mov
cs
dec
fstps
inc
lcall
cwtl
push
les
adc
sbb
xor
gs
push
fstpt
mov
mov
jge
inc
rcll
lds
jb
cmp
movsb
pop
loop
jb
push
sahf
es
js
mov
inc
dec
movsb
std
inc
push
inc
xor
popf
stc
rcll
jae
push
pop
daa
jo
cmp
and
sub
vzeroupper
iret
sub
add
xor
arpl
leave
je
dec
jp
insl
lods
js
mov
or
test
pushf
fnsave
std
and
in
jmp
xorb
jae
in
mov
pop
mov
lea
or
fwait
repz
movsb
sbb
in
testl
cmpsl
mov
negl
inc
sub
int3
cltd
jmp
jae
dec
push
or
xor
jmp
mov
das
test
cmc
int3
punpckhbw
push
aas
test
and
add
lods
sbb
dec
ja
lahf
inc
sbb
mov
push
ret
push
cwtl
xor
adcl
mov
dec
gs
fsub
and
dec
dec
mov
repnz
pop
xchg
cs
insb
test
inc
add
je
std
xor
xchg
push
inc
lcall
and
stos
sub
hlt
mov
or
rorl
enter
pop
mov
loopne
jmp
ds
mov
mov
insb
adc
lea
mov
adc
xor
pop
aas
fists
mov
repnz
sti
shll
mov
xchg
les
sarb
out
cmp
stos
scas
push
subl
push
mov
aam
adc
pop
enter
pop
negb
fwait
add
cmpb
rolb
sub
loopne
lock
cmp
cmp
stc
sub
das
mov
jo
and
sbb
jns
mov
or
pop
es
pop
pop
dec
stos
xchg
insl
negl
cli
add
cmpsb
mov
fwait
bound
stos
mov
xor
push
aam
dec
shrl
dec
aam
adc
cmp
ret
xchg
mov
ficomps
sbb
cmp
and
addr16
loopne
sbbb
add
data16
fnstcw
pop
imul
jp
sbb
stos
clc
aad
xor
fstpt
jne
xor
push
je
subb
sbb
movsl
shrl
or
stc
scas
push
cmp
js
ret
mov
out
fstpt
adc
xor
or
dec
in
hlt
ljmp
sub
cmp
or
stos
lods
sbbb
or
cs
dec
dec
jmp
push
sub
inc
sbb
cmc
mov
cli
aad
or
sub
loope
ret
dec
loopne
xor
out
jne
dec
jmp
adc
gs
or
add
je
mov
pop
push
mov
mov
in
and
and
test
xor
dec
in
mov
xchg
inc
ficomps
push
xor
mov
xor
or
jbe
inc
fcomps
outsl
inc
ds
add
rcrl
lock
xor
mov
add
mov
jbe
inc
push
mov
inc
bound
arpl
sub
xchg
test
cmp
das
jmp
xor
or
dec
dec
mov
imul
jno
adc
out
mov
push
fadd
sub
jbe
cmp
loopne
in
test
loop
lea
shlb
stos
cmp
mov
push
leave
into
outsl
ljmp
sub
pop
pop
pop
cmp
push
cmp
adc
sub
popf
shl
mov
mov
pop
loop
out
add
popf
xchg
mov
push
mov
fucomip
call
mov
enter
lods
xchg
int3
fnstenv
aam
inc
or
adc
jmp
add
je
and
out
repnz
arpl
mov
and
inc
jnp
add
jno
push
ss
cli
jg
mov
jmp
cmpl
enter
in
cs
xchg
int
or
adc
jl
nop
lods
adc
jb
iret
incb
lock
negb
mov
jns
leave
in
stos
mov
jne
test
sbb
mov
push
and
mov
or
pop
cwtl
adc
sbb
imul
pop
push
pop
gs
lret
jg
sub
jge
insl
cmp
push
cwtl
ja
imul
fistpl
cmp
sti
jnp
or
push
mov
insl
rcrb
aad
or
sub
aaa
lea
mov
fsts
xor
or
addr16
jb
fucom
jnp
cmpsl
fnstsw
pusha
in
add
dec
jne
shlb
mov
icebp
lds
cmp
and
add
xor
cs
aas
mov
lret
lock
inc
xor
addr16
fwait
loopne
idivb
push
xor
cmp
sbb
dec
mov
nop
loop
shll
repz
out
pushf
xchg
insb
sbb
cmpsl
sti
xor
insb
jae
sahf
rorb
negb
test
into
enter
mov
sahf
mov
sarl
enter
repnz
xchg
dec
inc
popf
into
and
or
dec
pop
lcall
out
pop
push
inc
and
or
inc
mov
pop
mov
cwtl
pop
cmp
insl
jbe
dec
mov
sbb
push
ret
mov
dec
arpl
rclb
loopne
sbb
rcll
or
sbb
adc
repnz
hlt
cmp
popf
lea
fmuls
pop
loop
jge
or
adc
and
test
jge
insb
pop
ds
out
or
lods
cmp
pop
icebp
or
cmpsb
adc
xlat
test
xchg
lods
pop
push
add
cwtl
arpl
sbb
push
jns
hlt
aaa
mov
mov
outsl
jnp
insl
mov
repnz
add
xor
inc
inc
cmp
je
mov
and
outsb
fwait
outsb
fnsave
mov
mov
adc
rorb
push
xchg
arpl
mov
mov
and
mov
pop
loope
sbb
jl
iret
mov
insb
xor
sahf
stos
push
fidivs
push
fildll
cmp
or
inc
push
lds
loope
movl
insb
sub
ret
pusha
mov
jbe
ficoms
cmp
xchg
movsb
lock
test
mov
add
push
dec
jecxz
lret
sti
gs
xchg
mov
sub
cmp
or
lods
cmp
pop
xchg
in
ret
inc
mov
loope
add
xchg
mov
sub
or
test
into
and
int
lods
outsl
test
sbb
pushf
pop
mov
jmp
call
shll
push
inc
inc
inc
push
mov
rcll
mov
test
and
mov
in
movups
xchg
add
sub
sbbl
pop
ret
and
push
je
les
fwait
dec
gs
jg
sti
fisubrl
mov
pop
rol
aaa
popf
sub
out
sub
and
dec
nop
jmp
dec
pusha
inc
xor
in
lret
jae
mov
adc
sub
add
test
mov
fwait
cltd
std
imul
jecxz
stc
loope
pop
icebp
das
mov
pop
pusha
mov
mov
xchg
pusha
inc
sbb
in
loope
jle
shrb
popa
stos
jmp
ficoml
xor
add
ret
lcall
dec
pop
xor
push
pushf
insb
mov
push
xchg
out
cmpsl
into
fnstcw
mov
lods
out
outsl
pop
cmpsb
in
es
repz
and
insb
les
jns
ss
les
sbb
out
adc
mov
hlt
and
push
jnp
cmp
mov
rcr
je
negb
inc
sub
jle
push
call
stos
out
push
mov
mov
mov
loop
jmp
adc
jno
out
push
and
mov
and
push
addb
outsb
jbe
adc
push
std
add
shrl
adc
mov
aam
and
lret
or
imul
or
jb
add
mov
mov
pop
out
cmp
fistl
imul
pop
mov
aad
dec
in
out
nop
xchg
push
inc
pop
mov
notl
xchg
lock
lahf
lret
xlat
cwtl
stos
mov
pop
mov
test
mov
dec
push
mov
mov
adc
cmp
pop
testb
cmpl
mov
xchg
cmp
scas
subl
push
push
icebp
mov
inc
xchg
push
ficoml
testb
jo
into
mov
cmp
pop
xchg
pop
push
test
test
xchg
insl
setg
fidivs
adc
fadds
fwait
and
cltd
popf
outsb
pop
mov
cs
test
das
push
fidivrl
flds
add
pop
inc
fsubrl
call
in
add
shl
push
xchg
jp
push
cmp
jo
bound
or
negb
inc
cmp
les
push
jne
fidivs
cmp
js
les
cmp
clc
dec
fidivrs
in
test
sub
and
pushf
and
add
or
xor
xchg
fisubrl
outsb
push
pusha
fwait
jbe
lods
push
mov
es
sbb
cmp
pop
lret
dec
cmp
push
test
adc
add
pop
mov
das
lods
stc
rclb
stos
lcall
pop
mov
mov
and
dec
fcmovne
and
or
push
mov
sub
fwait
adc
cmp
loop
mov
pop
in
jl
es
pop
insb
add
sbbl
lods
or
push
adc
cli
dec
and
rorl
jecxz
cmc
mov
cmpsl
xor
mov
mov
mov
mov
shll
div
mov
lods
enter
sbb
pop
xor
enter
pop
int3
arpl
shll
jmp
mov
mov
xor
imul
mov
in
lods
ret
inc
push
fisubrl
icebp
rcrb
cs
cmp
mov
js
test
ss
add
decl
addb
xor
cld
lods
push
movsb
out
jae
mov
adc
mov
lods
pushf
add
xchg
lds
mov
pop
pop
xchg
ljmp
int
or
jl
cs
cwtl
mov
xchg
lcall
push
mov
mov
push
inc
mov
adc
fs
mov
sbb
and
aam
aaa
pusha
pop
xor
repnz
bound
pop
add
sub
stos
mov
and
sub
mov
adc
aam
hlt
mov
xchg
std
mov
push
jnp
push
movsb
bound
fxch
addl
mov
and
mov
arpl
push
unpcklps
call
mov
dec
adc
std
jnp
add
xor
or
lret
cmp
mov
rcrb
and
xchg
lahf
pop
jno
mov
hlt
cmp
jg
aam
daa
lcall
or
dec
xchg
orl
aad
dec
mov
dec
push
and
mov
ja
inc
mov
add
mov
push
cli
mov
xor
pop
je
mov
fisubs
mov
or
mov
aaa
dec
fidivl
push
cli
sub
and
out
lret
lcall
or
xor
adc
jbe
jns
ret
push
data16
or
sbb
sahf
cmp
lcall
jns
pop
ret
push
mov
sub
jae
mov
or
ror
es
pop
aam
mov
mov
idiv
xchg
push
pop
dec
ret
push
je
push
popf
pushf
mov
jae
subl
cmp
jecxz
lods
push
pusha
jle
push
sub
mov
out
push
cmovl
add
icebp
pushf
mov
pushf
cs
outsb
notb
inc
mov
xchg
stos
call
jnp
sahf
out
dec
inc
lea
imul
pop
loopne
in
pop
dec
xor
insl
cvtdq2ps
ss
imul
rdpmc
jo
data16
je
sub
out
in
jbe
xchg
sub
sbb
adc
push
lea
xor
push
and
xchg
and
and
inc
jp
loope
out
out
xchg
mov
enter
ret
push
cmp
xor
or
mov
add
iret
add
stc
pop
cwtl
in
push
into
jle
aas
lods
lcall
jbe
mov
cltd
dec
mov
scas
xor
or
push
out
push
xchg
imul
mov
mov
dec
mov
mov
es
mov
sub
jecxz
mov
cmp
xchg
dec
sbb
push
ret
mov
jb
push
and
sub
xchg
sbb
mov
icebp
cmp
or
es
inc
xor
seto
dec
mov
mov
setg
call
test
lahf
xor
and
mov
mov
test
repnz
popf
hlt
mov
cmp
in
stc
pop
scas
sti
or
cmpb
jo
jp
push
mov
push
dec
jecxz
aaa
mov
add
mov
xor
test
scas
inc
dec
cmpsb
pop
les
inc
jmp
sbb
push
push
mov
and
fidivrs
aad
in
gs
cwtl
das
sbb
or
or
divps
jmp
dec
les
adc
ret
lcall
sub
adc
mov
push
push
movsb
out
or
dec
ds
pop
fsubr
sti
or
dec
pop
push
dec
ds
mov
int
mov
sbb
in
aam
mov
shll
fsubs
sbb
in
cwtl
jecxz
inc
jne
lcall
jne
pop
pop
test
mov
loopne
pop
push
cs
test
outsb
les
xchg
inc
aad
mov
dec
in
bound
in
cmp
stc
adc
push
lahf
inc
jae
loopne
push
sub
bnd
dec
mov
or
imulb
push
in
add
es
mov
sarb
ds
fcmovbe
sub
incl
inc
jns
mov
aaa
sub
pop
aad
cmp
or
or
cmp
pushf
scas
add
nop
and
in
mov
mov
add
testb
in
and
inc
pop
adc
nop
mov
mov
pushf
sbb
rclb
mov
mov
mov
push
mov
jno
jp
inc
inc
mov
jge
sbb
sti
divl
xchg
das
sub
dec
inc
lcall
and
out
inc
ja
jp
aam
pop
xor
mov
xchg
jg
or
jo
out
insb
lret
and
jecxz
or
add
pop
jbe
or
rcrb
xor
das
data16
shlb
sub
mov
add
js
cs
mov
jo
repnz
popl
add
sbbl
pushl
hlt
mov
data16
cwtl
inc
repz
dec
out
pop
inc
mov
mov
push
mov
movsl
test
push
lahf
rcr
outsl
subl
xlat
or
xor
push
xor
rolb
pusha
mov
dec
mov
or
inc
mov
mov
jno
ret
lcall
lea
in
add
enter
test
clc
pusha
inc
fidivl
cmp
dec
lods
push
pop
and
inc
imul
cwtl
cmpsb
incl
jl
dec
sahf
ss
add
popa
clc
mov
jno
adc
xor
fadds
cld
pop
pop
mov
out
bound
push
popf
hlt
jle
inc
fdivrl
movsl
cmp
add
iret
sahf
push
mov
push
addb
jnp
out
jb
jbe
popf
hlt
test
pop
std
int
fmuls
cwtl
cmpsb
les
mov
mov
pop
pop
aaa
push
cmp
mulb
movsl
adc
jae
lahf
mov
xchg
imul
push
or
lea
sbb
pop
jo
pusha
decb
xor
or
adcb
cmpsb
inc
or
ja
push
call
cmpsb
hlt
ljmp
adc
shr
dec
std
sub
sbb
movl
jmp
mov
arpl
lock
test
rcrb
or
test
pop
pop
std
and
fdecstp
aad
push
in
fdiv
add
pop
adc
in
nop
inc
adc
mov
xchg
and
fyl2x
mov
adc
std
mov
jecxz
clc
jae
mov
sbb
add
mov
push
test
test
pop
or
mov
push
and
imul
and
jl
ret
dec
mov
pop
int
fsubrl
jmp
add
pop
sbbl
push
je
insb
test
xchg
rolb
stc
sub
lods
mov
dec
jne
les
xchg
cmp
enter
dec
jmp
sbbl
sbb
iret
popa
mov
popf
lods
aad
popa
pop
into
cwtl
xor
in
sbb
ds
mov
dec
cmpsb
push
inc
loopne
mov
mov
or
cmp
scas
pop
and
clc
dec
jge
add
xor
iret
and
and
xchg
popf
mov
adc
testb
cmp
or
jns
ljmp
stos
cltd
and
dec
test
mov
int
jge
leave
scas
xorb
addb
ja
insb
cli
mov
in
sbb
stc
out
add
popf
stc
into
stos
inc
fisttps
out
adcb
shl
add
rorb
cmp
jae
sub
cli
jno
mov
xchg
call
cs
outsl
jnp
dec
ja
stc
xor
jmp
adc
pop
or
mov
xor
jne
xchg
push
pop
cli
test
jp
repnz
gs
lahf
or
sarb
in
repz
dec
adc
adc
insl
pop
jo
sbb
fdivs
push
aam
pop
push
pop
mov
movsb
in
in
mov
push
stc
in
cmp
push
cmpsb
shrl
cmp
push
ret
mov
push
gs
xor
mov
inc
lahf
mov
js
xor
sbb
scas
jae
jnp
jp
lods
mov
mov
push
lds
mov
pop
imul
push
insl
lock
cs
mov
loope
cmp
popa
mov
lcall
jne
ljmp
stc
call
test
loopne
test
lods
mov
psubsb
add
pop
mov
inc
sub
push
cwtl
fld1
jle
xchg
jg
jge
mov
fpatan
dec
mov
ss
mov
shl
mov
cmc
dec
cltd
cmpl
inc
jbe
jbe
sub
push
push
into
lea
loope
loopne
xor
cltd
inc
fst
add
xor
jae
add
movsl
cmpb
mov
jns
pop
incb
clc
xchg
add
test
out
inc
sub
mov
pop
ss
addr16
push
filds
shl
mov
scas
adc
xor
xchg
scas
dec
push
popf
aam
pop
jge
cmc
and
es
fnstsw
test
jp
stos
mov
insb
or
pop
mov
push
ficoms
fiaddl
or
sub
ja
lret
int3
sub
xor
pop
imul
les
outsl
inc
cltd
adc
out
sahf
jae
add
inc
or
bound
jp
pushf
lcall
insb
add
mov
or
add
aam
test
inc
fcoms
jns
mov
aam
addl
ss
cmpsb
cmp
sbb
cld
or
mov
sub
imul
les
inc
mov
mov
mov
cmp
rcr
iret
pop
xor
in
add
mov
fcoms
test
mov
xchg
decl
outsl
cwtl
mov
rclb
jmp
xor
imul
push
int
pusha
js
sbb
int3
fstps
sbb
stos
or
xchg
aaa
and
xchg
jb
or
jo
add
aaa
bswap
ss
xor
mov
pop
outsl
inc
mov
pop
add
cmpsl
scas
mov
cs
repnz
pop
push
push
push
xchg
fdivr
xchg
sub
stos
scas
popf
out
stos
inc
out
iret
push
push
inc
xchg
lock
xchg
lcall
mov
jmp
imul
and
push
and
mov
lret
fcompl
popa
ret
sar
je
insl
mov
inc
js
repz
or
sti
pop
push
call
es
int
or
push
xor
fxch
push
pop
xor
scas
shll
xor
jne
pop
dec
repz
iret
popa
clc
add
xchg
and
jmp
mov
xchg
sub
cltd
in
add
ret
sub
dec
cmp
mov
div
in
pop
rcrl
xchg
outsl
pusha
xor
inc
test
cltd
mov
push
cld
or
adc
fwait
clc
jb
cmp
sbb
and
push
sub
push
nop
sbb
inc
loop
xorb
aaa
mov
test
mov
xor
hlt
inc
fsubl
sbb
subb
sbb
inc
fnstcw
sbb
fwait
pusha
pop
push
mov
mov
adc
cltd
sbb
jns
bound
mov
mov
inc
sbb
add
and
std
xchg
xor
insl
sub
or
xor
jecxz
hlt
mov
mov
push
addr16
call
push
push
ljmp
out
xor
xor
test
in
cmp
lock
adc
adc
mov
leave
clc
sti
pusha
push
jo
push
sub
xchg
fs
push
mov
xchg
js
fisubrs
adc
inc
clc
or
xchg
call
xor
mov
xchg
push
cmp
aam
xchg
outsb
mov
subl
pop
das
pop
xor
das
outsl
aas
cmp
iret
pushf
sbb
ret
mov
js
cmp
sub
out
cmpsl
insb
mov
dec
lds
fists
add
jo
lods
xchg
sub
mov
cmp
push
xorl
mov
sbb
mov
mov
fnstcw
adc
fidivrl
dec
cmp
jns
sbb
xchg
push
mov
stc
pop
sbbl
popa
aam
test
hlt
mov
lret
mov
jmp
mov
sub
out
jecxz
push
in
mov
xor
mov
dec
in
pop
popf
xor
push
xchg
dec
test
mov
push
inc
xchg
leave
jecxz
fidivs
push
add
inc
mov
mov
lcall
lcall
xor
mov
jecxz
mov
push
push
outsb
add
mov
movsl
in
jae
push
cli
xchg
repz
jg
repz
pop
pop
or
jb
out
pop
adc
stc
nop
push
xor
xor
insb
add
sti
clc
out
mov
clc
dec
std
adc
pop
nop
daa
xchg
sbb
outsl
pusha
frndint
push
das
data16
mov
xchg
mov
test
xor
es
lock
sbb
jge
push
sub
mov
inc
and
fstps
in
or
xchg
sub
repnz
mov
xchg
pushf
sub
jno
adc
cmp
fsubl
mov
mov
fcmovnbe
repnz
inc
pop
test
cwtl
addr16
mov
jmp
out
test
mov
outsb
aad
mov
lret
imul
mov
mov
stc
imul
ffree
fildl
push
ds
push
movsl
cmp
xchg
loopne
adc
pop
inc
insb
pop
and
out
les
jl
jge
movsb
and
inc
mov
xor
das
add
inc
movl
in
mov
add
and
xchg
movsb
inc
add
sub
std
lret
push
outsb
or
push
and
les
jp
aas
and
xchg
mov
xor
jbe
xor
inc
mov
mov
fistl
sub
or
jge
push
jg
xorl
add
test
enter
aaa
jne
push
das
sbb
jg
pop
push
call
pop
lods
testl
mov
sbb
mul
cld
dec
scas
aam
jl
mov
jp
loope
add
mov
add
xor
push
std
shll
inc
pushf
pop
mov
and
in
xor
mov
jp
pop
cs
jg
mov
aam
pop
sbb
dec
push
sbbb
jnp
outsb
addr16
lea
pop
mov
dec
daa
and
pop
jnp
inc
daa
rorb
dec
int3
arpl
sbb
jb
cmp
sub
fmuls
dec
push
mov
dec
pop
cmpsb
mov
jbe
movl
out
xor
int3
push
jbe
and
and
mov
call
test
ljmp
xor
in
in
jno
mov
icebp
push
inc
push
loopne
lahf
push
jge
pusha
bound
inc
push
jecxz
je
and
inc
insb
xor
cmpsl
lods
lcall
mov
loopne
icebp
cltd
push
xor
xchg
pop
sub
jp
daa
or
push
jecxz
test
pop
in
cmpsb
push
push
popf
mov
iret
test
fnstcw
je
dec
pusha
iret
dec
shlb
lock
out
das
dec
popf
mov
ljmp
xor
out
xchg
mov
pop
test
shll
xor
ret
outsb
inc
stc
inc
mov
sub
mov
pop
xor
inc
pushf
xor
test
mov
movsl
adc
andb
fiadds
cmpsb
pop
pusha
xor
cmp
stc
decb
sub
mov
jne
iret
and
ss
es
ds
sbb
pop
jle
add
and
cmp
inc
and
xchg
dec
and
mov
scas
inc
jo
jae
enter
fwait
mov
in
or
cmpl
movsb
mov
scas
sbbb
dec
push
int3
mov
dec
sar
in
xlat
mov
arpl
jecxz
mov
stos
sbb
jbe
jmp
xchg
mov
inc
pop
and
loope
jmp
mov
mull
enter
cmp
mov
inc
aad
js
inc
push
ret
cltd
repz
in
std
sbb
adc
and
push
push
jno
je
jb
aaa
or
adc
stc
cmpsl
or
cwtl
das
hlt
sub
cli
push
cmp
enter
rep
mov
xlat
cmp
das
outsl
jns
mov
mov
mov
dec
rcrb
dec
fs
test
lret
sbb
scas
pop
out
out
icebp
insb
in
fists
jg,pt
out
mov
push
jle
call
test
and
retw
outsb
push
in
dec
pushf
xor
xchg
out
adc
and
andb
mov
xor
je
xor
popa
in
repz
sbbl
mov
inc
test
cmpsl
mov
ret
xchg
insl
and
push
shlb
inc
push
ja
std
aam
popf
lret
bound
jp
add
lahf
sub
mov
into
mov
cmp
inc
pop
in
out
fwait
lahf
das
inc
jle
imul
pop
mov
and
push
std
loopne
add
mov
dec
fldl
pop
xor
cmp
repnz
sub
xchg
stos
inc
leave
mov
cmpsl
das
lock
sub
dec
push
bnd
divl
repz
cmp
test
out
pop
inc
xchg
in
jmp
xor
jo
or
sub
aam
in
cmp
divl
fprem
inc
sbb
xor
imul
in
fcompp
push
pop
aad
push
mov
mov
cmp
hlt
ljmp
enter
filds
xchg
cmc
inc
mov
mov
enter
clc
sbb
cmp
jl
js
jge
mov
mov
mov
push
pushf
and
lret
fidivrl
xor
adcb
gs
pop
out
xchg
jo
jge
pop
je
inc
pop
stos
mov
aaa
pop
aam
xor
movsb
insl
push
leave
fwait
repz
rclb
mov
cltd
test
ret
sbb
xor
repnz
es
cli
mov
cli
mov
imul
sarl
icebp
mul
call
jae
insl
add
dec
xchg
mov
mov
adc
add
xor
adc
jle
movsb
lret
in
popf
rcll
imul
ret
out
negl
adc
pop
sub
sti
pop
les
and
int3
cmp
pop
into
je
shlb
adc
mov
idivb
out
mov
adcb
cs
mov
stc
xchg
dec
jns
repz
mov
aaa
sar
sbb
or
mov
jns
shlb
adc
inc
mov
mov
adc
and
lcall
push
sahf
xor
pop
xchg
xor
add
mov
jg
cltd
jnp
mov
arpl
xchg
lock
hlt
gs
xor
add
mov
call
addr16
adc
adc
pushf
hlt
jp
lahf
cmc
lcall
movsl
test
mov
push
mov
push
mov
sub
dec
and
mov
pop
in
mov
addb
test
out
pop
nop
call
sub
adc
fsubrs
lods
push
sub
jle
shlb
ljmp
xor
sbb
xor
cltd
jo
pop
mov
mov
sbb
stos
lock
push
xor
test
fdivrl
scas
xlat
int3
cltd
jo
adc
cmp
mull
popa
scas
out
and
loope
mov
push
outsl
test
adc
dec
in
cmp
pop
test
cli
cmp
and
add
sbb
cmp
push
sbb
adc
push
add
repz
sub
lcall
mov
cltd
push
xor
std
pusha
popa
jnp
xchg
mov
stos
movsl
or
je
xor
jecxz
ds
mov
rcrl
push
repnz
lret
mov
add
sub
imull
sbb
jae
out
iret
aas
sub
push
in
dec
jno
fcmove
fwait
sbb
int3
adc
int
es
arpl
push
into
lret
xor
lcall
adc
mov
dec
jp
int
rol
enter
andb
push
testb
adc
aam
xchg
adc
mov
inc
push
std
mov
jg
out
dec
cmp
cwtl
dec
call
dec
arpl
xchg
and
and
xchg
in
popa
add
dec
outsl
mov
add
mov
inc
adc
adc
fsub
dec
aas
mov
repnz
xchg
mov
push
jno
in
push
pushf
pop
iret
add
jle
sahf
pusha
mov
mov
inc
push
jecxz
and
inc
sbb
fidivl
inc
and
movb
imul
fstpt
scas
ret
sub
sbb
mov
ret
loope
adc
lods
push
or
popf
outsl
push
mov
lods
inc
ror
xchg
mov
pusha
div
test
aas
push
jg
iret
pop
adc
push
aas
push
dec
and
sub
icebp
adc
dec
pop
call
pop
out
fcomps
adcl
xor
pop
adc
fmull
or
xor
jae
and
cwtl
sti
sbb
addr16
rcrb
arpl
push
xlat
pop
or
xor
inc
jle
push
sti
jnp
int
mov
mov
imul
mov
loope
lret
xor
push
ja
push
pop
ljmp
add
mov
mov
adc
mov
out
cs
cwtl
inc
mov
adc
cld
into
dec
out
xchg
jmp
sbb
test
jg
pop
sbbb
sub
cmpsl
fsubr
xchg
inc
int3
xchg
es
push
test
sbb
and
pop
cmp
or
cs
dec
fldt
test
cmp
jno
gs
sbb
or
sub
std
pop
sub
push
push
add
push
jnp
cmpsl
aad
shl
loopne
std
and
inc
mov
scas
scas
add
fcomi
dec
xlat
mov
inc
dec
cwtl
imul
pop
stos
lods
xchg
sub
pop
loope
pop
hlt
lcall
outsl
ljmp
mov
jg
xchg
dec
dec
in
cld
insl
or
mov
cmp
jecxz
mov
push
fdivrs
mov
fldt
rclb
mov
rolb
aaa
mov
push
xor
add
frstor
test
mov
or
cmpsb
test
mov
cli
in
xchg
xchg
lock
mov
pop
mov
in
sub
adc
cmpsb
cltd
xchg
pop
mov
fs
popl
mov
shlb
loopne
pushf
mov
jo
dec
sarl
insl
imul
dec
cwtl
pop
mov
addr16
mov
jg
addr16
mov
notl
flds
jl
pop
push
mov
adc
push
fdiv
push
out
mov
jb
xchg
add
jns
in
dec
cmpsl
out
cmp
push
xchg
add
jb
out
xor
mov
push
sahf
dec
test
es
outsl
inc
inc
rol
dec
int
lret
ja
aad
xchg
stos
mov
lds
mov
lret
js
iret
js
fiaddl
roll
pop
xor
push
popa
fcmovu
jmp
jae
xchg
jp
xor
outsl
push
out
mov
arpl
mov
jo
test
xchg
das
test
lea
mov
sub
loope
les
adc
aas
inc
adc
scas
lds
rcrb
xchg
mov
and
xor
cwtl
and
cltd
and
inc
fsubrl
lock
std
es
aaa
cli
pop
jecxz
inc
mov
inc
popl
dec
jb
enter
xchg
mov
pop
in
aam
pusha
mull
movsl
notl
sbb
arpl
push
out
arpl
jge
dec
fistps
outsb
std
cltd
xchg
daa
mov
jnp
pop
and
je
jl
jmp
test
adc
sbb
push
or
mov
cmp
iret
outsb
ret
test
sbb
in
lea
mov
push
pop
into
repz
repz
pop
adc
cltd
add
mov
pop
mov
pusha
lea
pushf
call
xor
jg
pop
sbb
aas
in
scas
pop
jne
mov
fwait
push
push
test
cmp
pop
or
jns
mov
cmp
scas
and
fdivrl
lret
push
test
jl
sbb
dec
fidivrs
and
aad
fsubrs
xchg
arpl
jne
sub
ja
mov
mov
mov
dec
adc
xor
pusha
and
call
adc
and
pop
les
mov
sbb
pop
loopne
js
or
sub
out
stc
clc
repz
aad
inc
pop
outsl
movsl
push
jbe
cmp
lock
ret
bnd
aas
outsb
pop
fldcw
je
dec
inc
fldl2t
mov
xchg
insl
adc
mov
je
es
pop
fwait
cli
out
cmp
pop
cmc
mov
sbb
repnz
out
ret
lret
loope
cltd
stos
outsl
mov
dec
or
cmp
shrl
xchg
jno
cmpsb
mov
xchg
mov
pop
stos
jp
mov
add
push
dec
pop
mov
les
or
or
jp
mov
sbb
ret
push
fidivrl
jns
mov
out
dec
pop
push
or
enter
mov
or
or
xor
sbb
mov
lret
push
push
cwtl
cmp
sub
icebp
push
dec
dec
jno
nop
rcl
dec
and
mov
testb
clc
dec
lcall
lahf
mov
aad
in
push
stc
inc
cmp
push
mov
int3
xchg
xor
test
stos
adc
sbb
cmpsl
cmc
push
add
jbe
sbb
test
ja
push
shll
mov
lods
bnd
mov
mov
imull
jb
adc
int3
cltd
out
pop
push
mov
cmp
push
insl
orb
jl
mov
mov
mov
mov
dec
dec
inc
jbe
orb
out
fcomps
fsts
roll
enter
fisubs
cld
es
sbbl
inc
or
sahf
mov
lret
in
push
movsb
xchg
mov
fiaddl
pusha
aas
cmp
or
dec
sbbb
add
mov
adc
das
jne
push
and
mov
sbb
dec
test
jno
jae
sub
fwait
jne
push
in
push
popf
xor
jg
jnp
adc
inc
sbb
das
iret
data16
mov
out
dec
add
into
pop
xchg
adc
jecxz
test
mov
fnstcw
add
pushf
lahf
and
cli
xor
movsb
push
test
push
mov
enter
jb
cmp
mov
lods
out
test
or
sbb
pushf
daa
jnp
or
sbb
ds
pop
pop
out
xchg
inc
mov
or
pop
fidivrs
popf
push
in
icebp
adc
lods
xor
popf
adc
int
mov
test
mov
in
and
pop
out
xor
call
or
inc
pop
imul
sbb
mov
mov
dec
jecxz
jge
pop
enter
stos
scas
sbb
clc
mov
test
mov
xor
icebp
push
mov
mov
fidivrs
xchg
dec
inc
int3
int3
push
and
adc
cmp
data16
dec
rolb
mov
ljmp
nop
roll
lret
adc
les
jne
sub
inc
aam
sbb
pop
cmpsl
ja
mov
push
jo
pusha
or
jle
inc
mov
jns
leave
pusha
cltd
push
jmp
ror
push
inc
adc
xchg
shll
popf
stc
sbb
lea
dec
lods
mov
lret
ret
negl
in
push
push
jo
push
outsl
repz
mov
ret
mov
outsl
adc
fsubr
imul
pop
xlat
test
xchg
sub
xlat
mov
fucom
imull
add
loopne
lods
adc
stc
nop
fcomi
scas
jb
ja
mov
mov
mov
dec
mov
xor
test
int
sbb
es
test
inc
cli
push
std
xchg
icebp
cmpsl
and
pop
jno
imul
push
or
decl
loope
pusha
lea
aas
cmp
sar
leave
pop
lock
adc
in
inc
xchg
lods
cmp
mov
mov
or
push
sbbl
pusha
lods
lock
ret
inc
cmpsb
lret
push
loopne
insb
adc
push
and
pop
mov
shl
xor
cmp
rcrl
lock
lahf
in
rorl
and
mov
inc
fistpll
pop
fidivrl
stos
dec
mov
mov
push
dec
lcall
std
push
jo
pop
sbb
arpl
push
xor
decl
push
stos
pop
lods
cmp
mov
out
jae
cld
or
jae
and
das
addr16
or
mov
xchg
xchg
and
movsl
xor
out
test
sub
addl
lea
divl
in
or
nop
fistpl
sub
add
sti
push
pushl
cmpsb
int3
popf
xor
aad
mov
or
lea
in
pushf
xor
inc
mov
add
ret
mov
xchg
jb
aas
sub
jge
shll
lret
sti
cmp
adc
or
pushf
scas
in
shl
in
jno
sub
or
or
dec
fbstp
imul
mov
pop
imul
insb
idivb
jae
sub
mov
and
lods
ljmp
mov
sahf
mov
fisubs
pop
adc
and
jbe
add
jecxz
adc
into
push
movsl
dec
mov
je
add
mov
out
lods
std
push
shrl
sbb
scas
pop
loopne
add
imul
pusha
out
js
pop
in
cmp
in
test
push
testl
sub
mov
xchg
loop
lods
sub
iret
movsb
sti
jnp
mov
mov
scas
dec
lahf
push
lret
addb
mov
test
mov
cmp
mov
punpckhdq
cwtl
mov
mov
ja
add
jb
mov
daa
mov
xor
bound
js
ret
push
sbb
jae
stos
repz
aad
fiadds
movsb
mov
es
lahf
fs
call
aad
aaa
test
sbb
adc
lock
repz
add
out
test
lcall
or
inc
cmp
sbbb
or
push
call
jl
inc
aas
icebp
movsl
std
xchg
xlat
adc
imul
cs
nop
movsl
ret
mov
pop
test
rcrb
push
insl
jge
nop
sub
xchg
ja
outsl
push
clc
xchg
xor
stc
fists
adc
scas
mov
xchg
les
adc
sti
pop
outsb
int3
stos
dec
cmpsl
push
inc
add
fstpt
arpl
jae
hlt
int
es
add
dec
jmp
sbb
sbb
push
cmp
mov
or
xor
lods
mov
daa
jl
xlat
out
or
add
cmpl
xchg
mov
jne
cmp
icebp
push
call
in
xor
push
xchg
mov
or
or
es
inc
mov
cmp
jecxz,pn
mov
adc
int
fldenv
outsb
sub
lock
pop
mov
les
test
out
jmp
cmovs
or
sti
and
aas
push
cwtl
and
ss
adc
das
jle
flds
stc
sub
xor
sahf
cld
sub
fisttpll
loop
xchg
lock
xorl
shl
adc
sub
dec
ficoml
ds
lods
int
lock
jmp
arpl
jmp
sbb
mov
cmp
xor
adc
rcrb
in
inc
rclb
jg
popa
mov
roll
or
push
sub
adc
sbb
xor
xor
pop
fsubs
mov
xor
xlat
mov
sub
inc
fldcw
dec
pusha
testl
pop
movsl
fisttps
or
xor
sub
and
cwtl
push
jmp
fimull
mov
es
mov
ljmp
ss
aam
cmp
sbb
sub
out
in
inc
cld
mov
and
nop
mov
movsb
inc
insl
add
jmp
jecxz
in
call
icebp
ret
pop
pop
cld
push
rol
xchg
lcall
loop
stos
pushf
sbb
dec
sub
sbb
idivb
mov
mov
jno
outsb
xorb
stc
in
and
rorb
mov
mov
ss
mov
out
cmpsl
cs
jecxz
orb
adc
mov
mov
adc
out
js,pt
and
and
xchg
stc
sbb
imul
pop
sub
xlat
and
mov
lcall
mov
inc
std
std
jle
pop
mov
pop
jge
aas
cmp
jo
jl
pop
es
push
fwait
popa
xor
cltd
adc
jecxz
sbb
pop
xorb
arpl
sbb
pop
lahf
not
adc
sub
sbb
mov
xchg
insb
iret
mov
mov
ret
pop
in
xor
mov
js
sub
hlt
ljmp
rolb
xor
daa
jge
and
loopne
mov
dec
or
jge
out
out
sub
cmp
mov
mov
fisubrl
in
push
int
dec
mov
push
add
sbb
lcall
dec
push
outsb
fsubs
gs
in
loopne
xlat
outsb
mov
xchg
insb
jbe
pop
test
cli
xor
fwait
incl
into
dec
pop
cwtl
pop
xor
xor
and
inc
nop
arpl
adc
dec
insl
sbb
cmpsl
repnz
mov
pop
je
sbbb
iret
sbb
xor
push
movsb
sahf
sbb
pop
mov
shrb
rol
jb
imul
outsb
cmp
push
inc
inc
cli
ss
sbb
cmpsl
xchg
or
push
lcall
push
inc
in
cmpl
iret
mov
adc
mov
sub
dec
pop
lahf
cmpb
inc
in
inc
js
js
push
jmp
icebp
scas
xchg
push
mov
or
jo
cmp
lods
add
addb
sbb
xchg
lcall
dec
pop
loopne
push
push
ret
insl
cwtl
jp
adc
bound
sbbl
call
movsb
cmp
jbe
mull
add
xchg
call
xchg
jle
in
insl
add
rcl
fisubs
mov
mov
bound
pusha
or
cmc
mov
push
in
in
adc
push
enter
xor
mov
aam
jbe
mov
es
mov
sub
jns
fimuls
mov
mov
push
mov
iret
and
sbb
jbe
bound
cmp
mov
jg
cmp
cltd
std
and
cmp
test
dec
add
rolb
push
cmp
dec
add
jb
aas
xor
fdivs
xor
loope
xchg
jns
test
leave
sbb
cmp
jne
fsubrs
es
arpl
push
enter
mov
insb
mov
cmc
sbb
ret
sub
sbb
aaa
adc
dec
lcall
dec
outsb
jo
jg
sbb
fcoms
arpl
pop
mov
dec
push
jle
push
pop
rcrb
loopne
sbb
adc
ds
in
mov
shlb
ret
jmp
mov
push
mov
inc
gs
push
ds
mov
enter
adc
jecxz
mov
out
dec
mov
sbb
in
mov
daa
loope
movsl
clc
lret
add
bound
roll
jo
jae
aad
mov
fistl
jle
movsb
sub
xchg
xchg
sub
test
or
inc
pop
pop
mov
dec
cmpsl
sbb
cmp
loopne
sarl
cmp
out
mov
stc
add
cmp
icebp
xor
int3
mov
inc
stos
mov
push
pop
hlt
inc
icebp
add
js
cs
pop
lret
test
dec
int
jae
add
push
subl
xor
or
and
lea
mov
adc
adc
mov
lods
sahf
lds
in
sahf
lcall
and
sti
mov
ss
in
nop
test
dec
sbb
mov
data16
dec
shl
mov
and
inc
fstps
xor
xchg
jmp
fldt
add
fistpll
pushf
mov
jne
mov
cmpsb
cmp
fs
hlt
mov
stc
jecxz
mov
lods
mov
xlat
fwait
mov
negl
mov
repnz
mov
call
push
loop
fmull
mov
pop
cmp
dec
bound
sub
movsl
negb
mov
shll
nop
pop
imul
daa
lcall
push
add
sub
push
add
jae
sbbb
mov
iret
push
or
pop
out
lret
adc
dec
lock
imul
adc
cmp
clc
push
jp
mov
daa
jg
pop
mov
sbb
dec
shrb
out
jmp
mov
cltd
push
out
xlat
xchg
out
push
or
std
gs
mov
into
int
inc
ret
pop
adc
sbb
push
testb
mov
push
imul
xor
inc
das
mov
xchg
in
push
push
push
aas
vpsllw
mov
mov
sub
mov
sub
loope
nop
push
cwtl
pop
icebp
idivl
xchg
and
imul
sbb
jle
pushf
jns
scas
sub
xchg
fcom
dec
popa
dec
loop
mov
xchg
dec
or
out
xchg
sub
lock
and
cld
loope
fbld
rolb
lds
fists
xchg
push
es
addl
add
sub
jae,pt
xchg
dec
dec
sbb
ficoml
out
sub
mov
pop
jle
jecxz,pt
inc
push
cmp
pusha
add
insl
test
jae
mov
pop
xor
jg
and
popf
lods
scas
jno
xor
xor
xlat
jne
jp
lahf
and
pop
or
scas
cli
inc
push
fs
dec
call
cld
cmc
xchg
data16
jle
lods
outsl
cmp
mov
aam
xor
cwtl
mov
inc
imul
inc
push
movsl
jnp
pushf
xchg
add
push
mov
jns
sbbl
stos
imul
scas
out
pop
push
mov
test
push
adc
sarl
rcll
or
scas
pop
push
decl
fucomi
and
imul
imul
bound
push
cmp
and
sbbb
mov
push
lret
shlb
arpl
das
push
cltd
dec
push
sahf
inc
mov
sbb
lods
cld
mov
pop
sub
sbb
fidivl
push
cwtl
das
insl
paddq
mov
aaa
test
mov
adcl
mov
sub
fildl
lds
push
fldenv
repz
in
mov
lds
push
insb
push
inc
arpl
outsl
addr16
scas
xchg
add
in
push
lock
mov
push
push
add
inc
mov
gs
rcr
sub
scas
iret
subl
mov
das
xchg
lods
stc
dec
icebp
jbe
inc
adc
xor
pop
out
mov
lods
mov
mov
pop
repnz
add
cmp
in
test
add
push
jmp
pop
jne
aad
jb
ss
inc
sti
push
imul
fs
dec
dec
mov
repnz
rcr
and
push
cs
test
xor
data16
pop
push
arpl
das
jmp
outsl
jnp
lock
jmp
clc
push
mov
outsl
pushf
out
int3
and
or
mov
ja
scas
sub
pop
adc
sub
adc
inc
push
addr16
je
push
inc
lahf
call
inc
and
pushf
jmp
dec
mov
push
sub
into
push
and
jge
xchg
in
and
int3
cli
std
xor
mov
out
mov
inc
pop
jle
jnp
dec
push
je
sbb
ja
popa
mov
data16
adc
fiaddl
jnp
in
mov
jmp
dec
aad
and
mov
mov
adc
pop
cmc
mov
xchg
jle
jo
sbb
repnz
cmp
cmc
sbb
jmp
movsb
xor
xchg
mov
in
adc
inc
jns
hlt
pop
jmp
inc
sbb
add
xchg
xor
shrl
push
je
pop
mov
frstor
push
push
in
push
xchg
inc
lret
jg
jg
test
mov
std
and
add
xlat
popf
push
dec
jp
jo
mov
or
imul
ljmp
pushf
pop
cmp
inc
test
imul
and
gs
sub
mov
xchg
sbb
aam
or
inc
cmp
movsl
sbb
loopne
bound
cmc
shrb
imul
inc
int3
fistpll
repz
jmp
inc
loope
jae
and
in
sub
push
test
or
loope
mov
scas
fwait
ljmp
jmp
mov
lock
push
jge
clc
insb
scas
jmp
andl
imul
sbb
addr16
leave
pusha
push
out
pop
stos
xchg
daa
out
loopne
push
lods
and
or
push
cwtl
lods
outsl
push
xor
xchg
test
mov
inc
xor
shlb
outsb
add
pop
negl
aam
aaa
aad
cli
inc
fstpt
ljmp
sarb
shlb
push
das
pop
ds
and
repnz
pop
xor
inc
inc
xor
mov
aaa
testl
xchg
outsb
mov
push
mov
dec
sbb
in
adc
jne
jnp
imull
inc
push
outsb
iret
int3
xlat
movsl
push
xor
aas
pop
cmc
xchg
fisttpl
xchg
pop
jge
sbb
or
push
sbb
pushf
dec
sti
movsb
inc
jb
mov
es
test
push
jp
or
cmp
loope
sub
shll
inc
or
gs
dec
xchg
stc
cmp
push
add
fwait
shll
pop
in
jle
fisubrs
js
cmp
dec
dec
sbb
scas
orl
or
mov
sbb
shll
inc
pop
jno
pop
fcmovu
xchg
loopne
aas
mov
inc
dec
add
insl
loopne
mov
cmp
inc
jmp
js
xchg
fildl
sarb
pop
jb
jnp
ret
les
sbb
icebp
jae
bound
das
dec
add
js
leave
subb
lret
mov
cmp
cmp
mov
adc
or
aas
loop
dec
fnstsw
ret
movsl
rcrl
dec
jnp
loope
dec
xor
test
js
xorb
cli
mov
and
dec
iret
mov
mov
aad
out
dec
pop
fsts
movsb
dec
gs
addr16
sbb
cmp
insl
in
mov
mov
cmp
test
in
mov
cmp
add
aaa
push
add
jmp
mov
sahf
mov
and
icebp
ds
fcmovu
mov
fs
sbb
out
test
add
sub
ss
or
arpl
enter
nop
insl
lds
lea
mov
movl
movsb
mov
imul
adc
push
loop
mov
bound
gs
sub
pop
inc
pop
ret
jmp
aaa
push
sahf
mov
in
std
andb
dec
push
push
pop
cmp
xor
pusha
ss
arpl
pop
jg
out
push
inc
xor
out
jle
mov
imul
in
xchg
pop
icebp
bound
sub
hlt
lods
mov
inc
push
dec
loope
jno
dec
lret
sub
adc
aas
fidivs
push
add
cs
ss
mov
inc
out
mov
pop
nop
jnp
leave
inc
xchg
ljmp
lea
pop
cli
test
decl
lock
imul
loopne
jge
xchg
and
stos
sub
push
das
adc
sbb
mov
fistpll
es
mov
mov
mov
pop
out
sbb
icebp
cld
add
nop
mov
ds
rcll
push
cs
shll
pushf
mov
insl
sbb
popa
ljmp
stos
loopne
popa
es
or
xor
cmpsl
mov
mov
pop
lods
ljmp
rcr
pop
aas
push
xlat
or
mov
add
or
out
pop
mov
inc
xchg
add
mov
addl
lock
test
out
mov
lods
mov
xchg
xchg
adcl
fdivr
outsb
sub
faddp
inc
loope
and
xor
popf
aaa
xor
in
ja
jge
sbb
or
bound
je
aad
popa
push
sbb
inc
ret
outsl
fiadds
rcl
or
xor
cmpsl
xchg
in
cmpsb
movsb
incl
jmp
mov
sub
push
inc
in
in
aaa
dec
push
jo
jmp
mov
lret
adcl
in
xchg
jbe
mov
bound
not
je
fidivrl
pop
mov
vcomisd
clc
sahf
out
dec
dec
mov
mov
imul
pushf
lds
xchg
rcrl
cmp
push
test
adc
lahf
pop
xor
dec
or
fldenv
pushf
inc
call
les
sahf
filds
inc
arpl
lahf
lea
fwait
xchg
push
lods
add
xor
lods
in
clc
jecxz
out
inc
jno
push
mov
in
sbb
add
or
jo
dec
mov
sub
push
xchg
aad
mov
js
inc
fimull
movsl
popl
xchg
pop
xor
in
aad
in
xchg
jb
jp
mov
pop
mov
cwtl
fs
sub
or
xlat
les
clc
pop
sbb
mov
ret
pusha
jp
popa
dec
sahf
sbb
enter
add
push
xor
xchg
fnstsw
xor
mov
sbbl
stc
lods
loopew
cwtl
into
test
mov
jae
icebp
in
dec
dec
mov
loop
out
loop
push
xchg
test
pop
push
int3
and
xchg
mov
scas
mov
or
inc
movsl
mov
mov
daa
in
es
imul
lahf
xor
cmp
pop
dec
pop
shl
sbb
pushl
fs
aaa
cmpsb
sbbb
in
filds
dec
mov
mov
jg
push
jne
lret
sbb
lcall
dec
loop
orb
sub
leave
push
add
cmp
fcmovne
lock
sbb
mov
dec
testb
and
xchg
test
xor
add
mov
push
push
xchg
stc
rorb
shlb
sub
push
test
mov
dec
inc
inc
pop
decb
es
les
sarb
outsb
sbb
jno
sub
jns
jns
mov
dec
xor
call
cli
shlb
push
or
int
sbb
cs
sub
jmp
push
sub
add
mov
pop
je
dec
xor
inc
fisttpll
in
stos
xor
xchg
rcll
sahf
push
hlt
sbb
inc
push
ljmp
jno
cwtl
mov
xchg
insb
jg
sbb
sub
enter
jb
pop
in
mov
xor
stc
dec
testb
lods
inc
adc
lret
sub
xchg
xchg
into
lahf
mov
adc
mov
sahf
and
or
jb
inc
imul
movsb
ja
and
jo
ja
mov
pushf
pop
iret
adc
push
call
or
repz
lods
inc
ja
popa
ss
mov
push
cs
loope
aam
in
push
leave
dec
fsubs
std
xor
aam
test
dec
mov
rcrb
sbb
iret
and
xchg
dec
pop
cli
out
addr16
cs
lods
fcoms
pop
cmp
hlt
jp
and
sbb
inc
std
leave
jle
loop
push
test
cmp
shlb
fnstsw
iret
jae
cmc
mov
sti
and
scas
or
cmp
mov
fmull
or
mov
cmp
cmp
out
add
scas
mov
or
push
popa
popa
in
std
xchg
ss
pxor
das
rcrl
jg
test
in
cli
cmp
out
mov
push
push
std
jno
cli
dec
cwtl
in
shlb
mov
xchg
xlat
sub
jno
movsb
or
or
test
popf
jg
jno
sbb
jp
jns
sbb
dec
jo
rcrl
cmp
push
add
cmpsb
sti
fs
movsb
addl
roll
xorl
ss
jb
or
subl
loopne
push
addr16
scas
add
shlb
mov
in
mov
dec
jecxz
arpl
js
out
bound
mov
testb
lock
lods
in
das
dec
imul
cmp
and
xchg
xchg
mov
aas
xlat
mov
mov
lock
push
fistpl
dec
pop
mov
scas
pop
mov
sbb
jp
mov
push
loopne
js
dec
dec
pop
inc
mov
lcall
pop
aad
popf
mov
fdivl
xor
out
test
dec
stos
outsb
js
dec
add
adcl
daa
pop
mov
and
jp
dec
pop
push
imul
adc
fidivs
mov
fwait
mov
test
dec
js
pop
leave
cltd
jns
lea
out
cmp
push
into
movsl
int3
inc
adcb
repnz
ret
and
popf
add
stos
and
or
fisttpl
stos
nop
xchg
fstpt
sbb
aad
aaa
into
div
clc
roll
add
gs
sub
aad
lcall
lret
add
stc
adc
dec
arpl
daa
pop
xor
and
push
dec
lret
hlt
lret
imul
stos
int3
gs
daa
arpl
aad
jae
mov
orl
sbb
sbb
jb,pn
enter
data16
dec
shr
inc
in
mov
pusha
mov
inc
jle
outsb
sbb
push
leave
test
pop
push
popa
mov
adc
inc
lret
in
insb
popf
lods
xchg
cli
mov
mov
mov
push
jge
fcmovbe
push
pop
xor
setp
sbb
pop
mov
outsb
mov
popa
push
ret
push
in
cmc
pop
enter
jae
cli
bswap
and
cli
lds
insl
push
add
call
adc
push
fstl
sbb
xchg
les
add
push
call
xorl
enter
push
shlb
and
jl
cli
fs
push
mov
mov
mov
cld
pop
jo
inc
dec
jge
sbb
insl
mov
ret
pop
pop
out
pop
imul
pop
fstpl
mov
mov
ds
pop
jns
add
not
pop
mov
or
jp
sub
jl
jl
inc
xchg
mov
test
arpl
push
gs
xchg
aaa
push
mov
mov
icebp
aaa
ret
out
mov
and
or
xor
lcall
lahf
outsb
sub
jecxz
inc
mov
in
mov
pop
roll
lret
fmuls
push
and
popf
sub
sbb
clc
inc
cmp
push
mov
dec
pop
mov
js
lahf
rol
jmp
pop
in
mov
mov
add
sub
loopne
outsb
and
add
mov
sahf
pushf
xor
mov
shll
mov
iret
cmp
loopne
ja
or
jb
push
shr
lcall
repnz
clc
into
imul
adc
insl
test
push
mov
lock
std
test
aas
mull
shlb
stc
pop
mov
popf
sub
add
das
sub
add
pushf
jmp
and
rcrb
add
jnp
lods
scas
jae
fisubs
gs
call
adc
sbb
pop
adc
outsb
inc
mov
testl
out
mov
add
xor
push
lds
mov
mov
fnstcw
push
push
jp
ss
dec
lods
fstpt
add
pop
cs
outsl
xor
pop
mov
dec
sub
sbb
cmp
mov
out
xchg
jl
fnsave
sub
mov
ljmp
jno
mov
sub
cmp
fwait
divb
stc
cli
fisttpl
shlb
dec
dec
pop
repz
daa
cmc
scas
jno
inc
insl
mov
push
adc
ss
enter
mov
shrb
test
mov
sti
rclb
lods
xor
lea
outsl
add
adcb
push
pusha
lods
stos
mov
aas
xor
call
inc
cwtl
mov
jae
pop
int
xchg
cmc
mov
sub
xor
jcxz
test
jne
xor
loopne
adcb
jp
fs
mov
adc
icebp
add
adcl
and
fldcw
sbbl
add
rcrb
inc
sbb
int3
mov
ja
adc
fnstcw
scas
inc
sub
filds
mov
ja
scas
sub
popf
cmp
pop
add
push
mov
pop
addl
lea
and
fdivrs
inc
pop
xor
jno
data16
je
hlt
mov
movl
mov
sarb
ret
mov
data16
push
lret
mov
loopne
cs
js
cmp
fbstp
inc
fs
je
jge
push
cltd
adc
loope
and
xor
gs
mov
inc
sub
enter
sbb
out
mov
sbb
in
subl
pop
sbb
inc
xchg
mov
pusha
in
int3
push
test
out
cmc
fwait
jecxz
int3
popl
fstpl
lods
xchg
loop
iret
cmpsb
notb
dec
or
pop
in
stos
leave
jmp
insl
mov
xchg
sbb
pop
cmc
mov
lret
ficoml
push
fiaddl
add
mov
push
stos
popl
lcall
inc
mov
jecxz
add
ds
outsl
mov
test
ja
mov
lahf
testl
mov
cmp
dec
jmp
test
xor
cmp
cltd
iret
outsb
andb
ret
xor
ret
das
in
fidivl
dec
insl
sub
xor
cwtl
sti
push
adc
mov
mov
ds
pop
bound
popa
clc
hlt
add
mov
shrb
xchg
jnp
orl
repnz
add
adc
fcoms
ss
lret
fidivs
lods
cmp
in
adc
lret
lods
test
stos
push
aam
outsl
les
push
pop
add
sbb
rcrl
add
inc
fistpll
pop
outsb
std
popl
scas
lea
adc
fsubl
and
sbb
outsb
pop
adc
and
or
test
arpl
cmpsl
out
cmp
or
cli
xor
out
xchg
pop
insl
ret
cmpsb
cmp
sub
stos
sbb
pop
dec
int3
or
or
xchg
stos
or
pushf
sahf
icebp
mov
mov
or
jne
bound
mov
adc
jge
and
mov
add
lds
test
cwtl
addr16
ficompl
sub
fs
loope
lods
adc
fisttps
jne
inc
adc
cltd
andl
stos
fsubl
mov
cmpsl
mov
cmp
incb
popa
les
fwait
push
aaa
or
mov
loope
lcall
xchg
in
rcll
and
out
rorb
mov
xor
sarb
jl
testl
lcall
mov
inc
or
sub
ficomps
fisttpll
adc
adc
push
frstor
clc
js
sub
outsb
popf
mov
pushf
mov
lcall
test
rcrb
mov
xlat
repz
adc
shll
dec
push
fdivrs
fwait
or
jl
mov
push
sbb
push
stos
xchg
arpl
or
pop
mov
fsts
cmp
push
clc
jbe
xchg
add
stos
jbe
cmpsb
adc
pusha
clc
fnstenv
lret
addr16
push
mov
cwtl
out
popa
push
or
sti
mov
fcoml
lock
out
cmpsl
ret
pop
mov
pop
dec
push
mov
cli
jns
sub
mov
clc
xor
cmp
inc
pop
jecxz
mov
mov
dec
pop
jno
pop
ds
lcall
movsl
insb
mov
jl
enter
dec
cmpsb
and
push
in
into
gs
nop
sbb
xchg
out
push
hlt
mov
jnp
loope
xlat
add
add
sub
cwtl
sbb
add
icebp
mov
xchg
mov
cmp
imul
shlb
push
outsl
xchg
push
pop
cmpsb
or
dec
frstor
adc
negl
repnz
imul
lcall
in
ret
mov
adc
sbb
cmc
sbb
rcrb
mov
cmp
lcall
mov
sbb
pop
dec
mov
sbb
mov
dec
out
les
cwtl
shlb
inc
jne
mov
leave
mov
cmc
imul
push
nopl
jecxz
and
shrb
inc
aam
dec
sbb
or
cmp
aam
pusha
fbld
lea
ret
xchg
jnp
dec
push
shrl
mov
outsl
adc
dec
pop
mov
ret
aas
xchg
push
and
inc
mov
inc
push
dec
int
jg
jmp
pop
lods
dec
cmp
sub
lock
test
or
sub
push
out
fadd
mov
ljmp
add
push
call
cmp
shl
adc
fldl
pop
das
cmp
ficomps
dec
fucomp
loope
call
sbb
arpl
movsl
dec
mov
ds
push
lds
scas
fsubrl
ret
adc
push
xor
push
inc
or
mov
sbb
pop
mov
shrl
adc
ret
dec
adc
jecxz
rol
call
mov
mov
sub
movsb
aas
mov
mov
lods
xchg
daa
mov
lods
stos
mov
cmp
andb
imul
mov
inc
lret
ret
out
pop
je
mov
in
and
xchg
xor
xchg
rol
out
arpl
mov
loop
scas
adc
dec
jo,pt
clc
ror
jnp
sub
lea
or
jmp
int3
xchg
aaa
imul
pop
stos
mov
adc
lods
pop
dec
popf
stos
jbe
cwtl
jb
mov
jne
jg
pop
int
ret
add
push
jbe
mov
cmpsl
mov
lods
adc
jne
sbb
lea
pop
sub
popf
loope
shl
push
mov
pop
jno
shrb
adc
cmp
jae
add
icebp
lods
mov
pop
jnp
mov
cld
shrl
sbb
and
ja
mov
sti
adc
sahf
xchg
add
aaa
mov
cmp
fnstenv
sub
fsubrl
ljmp
pop
inc
sbb
pushf
cmp
adc
push
loop
push
shlb
fistpl
out
in
xor
dec
ret
divb
fcoms
loop
inc
push
stos
fisubs
fsubrl
jns
xor
sub
mov
fdivrs
fsubl
ficoml
pop
cmp
decl
rorl
cmp
lods
clc
movsl
addr16
sahf
stc
cmp
lret
int3
daa
repnz
andb
or
cmp
sub
sub
pop
jp
out
dec
decb
jae
pop
lock
and
mov
xchg
pop
jo
cmpsb
dec
mov
lds
inc
outsl
into
imul
mov
adc
shr
jg
inc
cltd
std
in
fcomps
sub
mov
mov
shl
mov
dec
leave
in
adc
mov
sub
mov
arpl
int
js
cmp
lcall
mov
or
add
adc
or
jo
sbb
mov
cmp
sub
jecxz
cltd
js
rolb
mov
push
int3
cmp
sbb
scas
int3
lock
push
xor
and
adc
cmpsl
sbbb
sbb
mov
pop
xor
adc
insl
sub
mov
scas
or
test
dec
in
dec
xchg
xlat
in
aaa
mov
sarb
int3
pop
xor
aas
mov
push
bound
imul
inc
inc
jns
push
int
cmp
mov
pushf
ficompl
or
cmpsl
fs
xchg
adc
or
sbbb
daa
push
outsl
pop
or
nop
and
in
repz
outsb
jecxz
cli
adc
mov
inc
push
push
andb
pop
jg
aas
add
jo
in
xchg
jnp
dec
imull
fidivrl
stos
inc
jno
xor
rcl
dec
lods
push
leave
psrlq
pop
jp
pop
orl
fstpt
and
pop
sub
sbbl
jno
aad
mov
add
push
jne
add
into
lods
inc
cld
push
lock
lcall
push
popf
sbbb
sbb
mov
mov
jne
ds
mov
dec
mov
pop
dec
mov
addr16
pop
outsl
in
roll
cmc
push
lret
adc
mov
push
pop
mov
push
push
push
aad
imul
dec
sbb
clc
jg
push
lds
and
jge
scas
adcl
stc
xchg
sub
xchg
jle
mov
xorb
cs
loop
gs
data16
rolb
dec
arpl
call
inc
xchg
lds
lods
ss
inc
icebp
xchg
lods
xchg
push
push
nop
fldenv
and
ret
arpl
loop
test
xchg
jecxz
int3
sbb
daa
mov
sub
adc
inc
sbb
mov
popa
iret
dec
adc
leave
dec
and
pop
lods
jmp
out
lcall
pop
lock
mov
repnz
sarb
pop
decb
push
loopne
mov
cmp
xchg
insb
aad
popf
push
fsts
aad
arpl
repnz
and
aas
xchg
cwtl
loop
push
cltd
test
repz
xchg
lcall
and
out
mov
cmp
pop
pop
dec
in
stc
nop
ror
sbb
pop
test
lea
daa
dec
sbb
jge
push
push
cmc
and
fnstcw
add
cmp
outsl
adcb
push
shrl
add
mov
push
shrb
cld
add
cs
lock
ret
gs
cmp
push
adc
lret
mov
pop
mov
fsubp
jnp
fcompl
mov
rclb
mov
jle
aad
cwtl
stos
mov
sub
jae
daa
jno
les
inc
dec
fsubl
fldenv
cmp
aad
rorl
and
pop
inc
out
sub
or
aaa
js
pop
push
ds
pop
mov
cmp
mov
movb
and
and
cld
mov
sbbb
mov
pop
shl
and
enter
data16
bound
andb
outsl
push
mov
xchg
add
jecxz
mov
stos
dec
push
pop
lods
idivb
das
lea
pop
cwtl
sbbl
mov
ret
sub
push
lods
add
mov
dec
xor
hlt
lret
sbb
imul
ljmp
das
addr16
jno
mov
cmp
xor
int3
aaa
push
incb
insl
cmp
je
xor
add
sbb
jmp
cld
repz
cmpsb
cmp
jne
enter
rcrl
add
sub
in
push
jecxz
jmp
mov
sahf
lods
or
mov
mov
test
andl
incl
sbb
addr16
add
std
test
push
rclb
mov
cmc
jg
and
inc
aad
rcrl
adc
push
aas
jecxz
in
xlat
mov
movsl
and
fstps
inc
stos
ret
pop
out
jo
dec
inc
sub
push
jp
addr16
push
mov
sbb
aas
or
cwtl
inc
cmp
pop
cmp
fnsave
push
sbb
pop
adc
sub
out
or
cmpsl
inc
aam
or
pusha
inc
negb
mov
decl
jo
push
adc
mov
adc
pop
call
aad
repnz
test
push
cmpsb
push
mov
rorb
hlt
sarl
iret
pop
cmc
loopne
jo
ja
and
fmul
es
aas
js
push
push
push
inc
cmc
jecxz
in
loopne
add
xor
or
dec
cwtl
repnz
dec
xchg
dec
lods
jo
dec
cmpsb
out
stos
jmp
push
into
cltd
add
or
insl
xchg
dec
bound
add
mov
sbb
lret
mov
xor
pop
and
and
repnz
sbb
push
jae
jge
push
mov
dec
fldenv
dec
xchg
arpl
jmp
or
sti
sbb
add
cs
clc
cmp
mov
pushf
repnz
pusha
mov
lret
pop
enter
int3
cmpsl
add
fildll
push
xchg
cmp
sub
in
adc
cmc
mov
cmp
stos
shlb
xchg
cltd
ljmp
inc
scas
jge
stos
mov
roll
add
adc
fadds
data16
xchg
insb
out
sbb
lods
popf
outsl
daa
xchg
jne
daa
mov
clc
outsb
mov
pop
dec
push
xchg
mov
mov
aas
outsl
mov
pushf
sbb
add
nop
insb
mov
push
je
add
sbbb
test
icebp
add
loop
loop
in
mov
int
sub
push
mov
lea
xor
mov
fildl
dec
aaa
dec
shrl
sbb
sbb
jno
jbe
mov
jge
push
ret
scas
jge
es
xchg
mov
push
imul
or
dec
daa
cmpsb
inc
bound
mov
out
outsl
cmp
lret
in
dec
pop
lcall
subb
fnstsw
pop
in
out
push
xlat
lods
ljmp
mov
rorl
sti
jg
insl
or
aad
in
dec
dec
mov
mov
lea
in
icebp
or
xor
pushf
icebp
push
adc
push
xchg
pop
mov
jp
cmp
out
inc
and
jp
popa
lret
dec
and
stc
enter
pop
xor
push
lods
std
or
int
ja
mov
push
and
sub
bound
clc
pop
xor
or
cmpsl
addl
xchg
push
test
pop
cmp
sbb
fadds
lret
xor
mov
sbb
test
xor
sahf
jg
adc
cld
pop
xchg
divb
jo
sbb
negb
loop
sbb
jl
popa
faddp
inc
xchg
cs
and
sti
adc
mov
test
mov
ret
icebp
jo
push
xor
out
fcmove
es
or
or
cmp
imulb
mov
inc
sbb
cmp
push
fdivrp
adc
jns
out
mov
notl
push
daa
mov
push
dec
mov
andb
scas
inc
dec
sbb
shl
in
xlat
shll
incb
inc
pop
popf
je
inc
loope
and
imul
fidivrl
xor
lcall
test
and
test
data16
xchg
jb
pop
sub
cmp
data16
rol
mov
mov
lods
or
enter
cmp
call
dec
fidivl
hlt
xor
mov
test
jmp
test
push
mov
adc
mov
and
mov
and
push
pushf
jno
pop
aaa
jbe
mov
push
imul
xor
pushf
les
mov
fwait
push
jne
jo
pushf
push
lcall
mov
cmpsb
imul
repz
testl
enter
cmp
aaa
dec
pushf
cmpsb
inc
pusha
or
push
into
test
cld
stos
mov
jns
pushf
scas
adc
adc
test
into
ss
xchg
test
mov
jbe
or
ret
sub
loop
out
sbb
cwtl
mov
or
aas
jnp
fidivs
je
sti
sbb
adc
out
jns
out
sub
daa
or
jnp
add
fimuls
cs
arpl
mov
rcrb
ret
in
dec
adc
addb
pop
fwait
sbb
dec
push
push
mov
inc
cmp
jae
push
cmp
push
jbe
sub
cmpsl
ret
pop
mov
pop
adc
adc
xor
sub
push
sub
int3
fldcw
jg
test
jle
jle
xchg
xlat
sbb
xchg
jne
inc
stos
add
adc
ret
shl
adc
das
enter
stos
fnsave
xchg
arpl
mov
mov
add
or
loopne
sub
in
idiv
dec
scas
ljmp
xor
mov
shlb
cmp
jge
shll
pop
lahf
sbb
mov
push
call
int
inc
pop
fcmovnu
fsubr
add
xor
push
jmp
les
mov
es
adc
fistpll
inc
dec
test
xchg
mov
ret
sbb
loopne
aaa
xchg
iret
pop
testb
dec
movsl
stos
and
push
int3
js
push
fcompl
inc
test
push
shlb
out
ljmp
sub
std
enter
mov
je
and
es
ret
xchg
inc
xchg
mov
cli
mov
out
add
pmuludq
fbstp
scas
mov
mov
push
aam
adc
sub
das
mov
adc
sub
jne
xchg
testb
call
or
aas
mov
sarl
dec
lock
js
icebp
add
pushf
adc
jg
add
popf
popa
or
movsl
cmp
es
test
dec
pop
xor
js
mov
add
sti
pop
rorl
daa
xchg
mov
mov
jns
mov
subl
xchg
aam
mov
mov
cmc
mov
mov
mov
cmp
pushf
pop
mov
out
fsubrl
mov
adc
repz
mov
movsl
lret
and
sarb
scas
ret
jl
sub
push
insl
sub
fstl
mov
add
cwtl
dec
loopne
pop
mov
movsl
out
adc
push
or
fwait
sbb
call
je
push
fs
push
pushf
out
dec
data16
inc
sahf
mov
dec
sti
sar
or
into
mov
push
mov
gs
push
xchg
test
mov
mov
xlat
loop
or
fidivrl
push
loopne
dec
xchg
sub
data16
mov
xor
scas
ss
jecxz
push
cmp
jecxz
inc
cwtl
stos
and
sub
add
inc
xorb
jle
aas
push
inc
lods
lcall
mov
xlat
jmp
call
mov
sarl
mov
movsb
repnz
pop
pop
adc
ret
fwait
cli
push
and
loope
jecxz
or
pop
sbb
fwait
movsl
add
jne
push
mov
adc
jle
gs
sahf
jb
xchg
add
xchg
adcb
dec
add
loop
insl
sbb
lea
pop
sub
dec
ds
repz
repz
mov
mov
loopne
or
das
xor
ja
push
adcb
xchg
mov
push
push
arpl
out
or
sahf
xor
jmp
in
inc
or
vcvttpd2dqx
mov
push
arpl
jbe
jne
sub
in
pop
icebp
push
inc
out
mov
sub
scas
dec
test
neg
clc
adc
sbb
push
sbb
lret
popa
in
push
lahf
add
pushf
out
push
fdiv
out
xchg
cmp
dec
sbb
ret
mov
repz
or
dec
jb
cmp
mov
cmp
jmp
insl
lcall
inc
push
fsubrs
enter
pop
shrb
xor
lea
sarb
xor
mov
loopne
adc
push
lds
adc
fdivp
xlat
dec
lods
jbe
clc
js
and
hlt
mov
lret
mov
out
cmpsb
les
sub
rcrl
dec
fnstsw
cltd
jne
adc
inc
xchg
popl
sub
add
icebp
sub
mov
shrb
js
insl
iret
aas
aad
or
rcl
jo
jecxz
mov
xorb
sub
inc
roll
xchg
cli
jbe
addr16
sbb
xor
scas
je
pop
jp
lds
xor
xchg
sub
les
cs
jo
jp
cmc
jge
fwait
rcr
inc
dec
mov
cmp
dec
or
cmp
pop
push
pop
loopne
incb
adcl
outsl
add
lods
and
mov
xor
dec
fadds
inc
call
pop
inc
in
pop
call
pop
pop
push
cmp
sub
mov
mov
ja
inc
imul
sub
inc
sti
xchg
jb
xor
aaa
adc
mov
pop
sbb
pop
dec
inc
or
cld
push
push
sub
iret
fstps
mov
js
push
lods
imul
sub
push
in
int3
xor
std
ljmp
into
xlat
pop
outsb
dec
push
inc
dec
xchg
sbbl
jle
arpl
cld
push
mov
outsl
push
shlb
add
imul
fimuls
arpl
fimuls
shlb
sub
jne
push
jge
aas
xchg
cld
xchg
lret
fwait
xor
pop
push
insb
push
pop
out
push
inc
xor
cmp
dec
fidivrs
fstl
adc
cmpl
push
lods
mov
or
xor
out
xor
imul
lret
dec
push
xchg
xchg
cmc
jne
dec
pushf
loop
into
outsl
pop
scas
mov
dec
xor
and
cmc
pop
repnz
adc
inc
xor
xchg
pop
lea
adcl
mov
pop
ljmp
push
dec
shll
xor
add
push
mov
pushf
out
jb
jo
and
inc
xchg
rcrl
lods
jmp
aad
aas
data16
dec
mov
xchg
rcrl
mov
fbstp
jnp
cmp
mov
pushf
sub
dec
push
lret
in
outsb
dec
loopne
outsl
out
mov
pop
test
testb
mov
xor
fists
popf
gs
out
int3
ret
sti
movsl
or
sbb
mov
arpl
xchg
sbb
dec
and
jb
and
scas
or
stc
nop
bound
sahf
jbe
lcall
jp
lret
call
imul
push
xor
mov
imul
inc
adc
push
jne
push
mov
dec
pop
jns
movsl
aaa
push
xchg
popf
add
add
push
xor
test
and
jg
in
repnz
jo
fisubrs
imulb
iret
jmp
cmpsb
movsl
jecxz
test
shll
and
dec
fcomi
add
daa
les
mov
pop
mov
into
loopne
cwtl
xor
nop
psubb
ljmp
jb
pop
sub
arpl
cmc
add
cmp
jne
pop
fsubr
sub
fs
mov
inc
and
fcoms
pusha
in
adc
test
mov
and
scas
test
jne
xor
adc
add
cmpsl
test
cltd
lods
out
dec
dec
inc
test
cmp
inc
inc
js
and
mov
and
pushf
jge
sarl
in
loope
sub
jge
ret
aam
adc
sub
mov
popa
neg
scas
movsb
xchg
sub
mov
and
xchg
cmp
popf
dec
xor
fstl
pop
cli
mov
add
add
es
push
lods
fdivr
jo
xor
cwtl
xchg
sub
cld
rcr
adc
movsb
fldenv
xchg
add
jbe
sbb
pop
adcl
aas
fisubrl
xchg
xchg
mov
js
into
mov
push
fstpt
and
lret
gs
clc
mov
mov
mov
rol
xchg
data16
and
out
cmpsl
dec
push
inc
in
jmp
sbb
push
ljmp
popa
mov
and
lods
jmp
sub
popf
or
clc
adc
negl
mov
pop
shl
movsb
pop
shll
xchg
lcall
mov
xor
jo
test
outsl
pop
jbe
push
stos
cmp
sub
fisttpll
pop
lret
ja
add
cmp
fstpt
xchg
xchg
lret
mov
lcall
repnz
adc
cvtps2pi
mov
jb
clc
add
lods
hlt
or
add
adc
dec
cmc
jns
cmp
cmp
or
imul
nop
push
inc
mov
xchg
mov
adc
xchg
imul
lods
sub
add
xor
cmp
mov
popf
pop
mov
mov
mov
dec
dec
sahf
stc
xlat
shll
cmp
outsb
jmp
in
and
jge
movsl
add
xor
xor
shlb
cltd
dec
adc
sbb
jno
adc
inc
repnz
loopne
or
adc
dec
aam
xchg
add
pop
outsl
shll
mov
sbb
pop
loop
ret
fnsave
lahf
repnz
subb
cltd
incb
insb
sub
fmull
and
and
fdivrs
addr16
mov
gs
sbb
fucomp
in
test
or
mov
inc
sti
addr16
sahf
mov
xchg
lods
ja
pop
cmp
test
cmp
add
mov
dec
pop
mov
out
imul
dec
mov
cli
sbb
or
cmp
sub
outsb
or
int3
outsl
lods
insb
cmp
sarl
inc
loope
test
icebp
sbb
data16
insb
mov
movsb
jnp
lret
adc
dec
pop
or
mov
add
es
dec
cli
or
popf
lods
adc
je
adc
and
sub
addl
arpl
repz
push
rcrl
aad
testb
cmp
mov
std
test
in
mov
aas
lret
in
das
push
xlat
outsb
cmp
adc
into
sub
push
pop
pop
and
gs
sub
inc
mov
xchg
adc
sbb
and
pop
push
push
in
testl
repz
icebp
scas
sub
mov
inc
arpl
cli
xchg
mov
sbb
sti
call
fadds
cmp
call
hlt
mov
clc
cmp
outsl
sub
mov
es
pop
dec
sbb
scas
jno
jae
shr
xchg
daa
mov
xchg
mov
push
sub
test
sbb
mov
jge
mov
psadbw
push
mov
push
cs
cmp
jl
xchg
jnp
dec
cmp
xchg
hlt
inc
push
mov
or
adc
sbb
cmp
mov
outsb
scas
jl
or
lret
push
or
mov
mov
dec
inc
int
xor
dec
in
ljmp
stos
cwtl
mov
dec
adc
xchg
add
pop
shr
cmp
or
imul
cmp
outsl
adc
lock
xchg
adc
loop
cmp
jae
xchg
dec
faddl
jns
add
and
mov
push
hlt
push
aaa
orb
cmp
loop
aaa
fadds
push
adc
call
jle
xchg
mov
rcll
outsl
push
adc
ds
sbb
or
xchg
ret
sub
into
cld
jg
mov
push
and
aam
jns
xor
add
popa
mov
mov
dec
lods
inc
add
js
movsb
fcmovne
cltd
hlt
lea
fildl
push
xor
stc
nop
pop
push
sbb
test
lret
xor
in
notl
jmp
sbb
pop
lcall
das
mov
sub
roll
push
notb
xchg
sub
cmp
xlat
in
inc
push
cmpl
push
fstpl
cmpsl
outsl
daa
stos
jge
add
aad
mov
xchg
xchg
mov
mov
lock
shrb
mov
mov
push
xor
nopl
mov
loopne
or
mov
pop
gs
nop
dec
in
jo
pop
mov
pop
push
call
ds
inc
dec
xor
gs
and
jmp
lret
orl
jns
push
in
jno
clc
out
xchg
jae
dec
shrb
shl
negl
aam
lret
adc
or
ret
repz
mov
repnz
or
in
scas
adc
sbb
push
pusha
cmp
jo
nop
jg
cltd
daa
fidivs
or
cs
ror
popa
sub
sbb
inc
mov
fbstp
push
lcall
xor
jae
cmp
push
push
daa
lret
cld
popa
inc
fsubrs
push
push
xchg
jp
jl
adc
mov
pop
xor
testb
jae
popf
gs
sbb
xchg
mov
and
addl
mov
mov
insl
jmp
or
ja
in
cld
adc
mov
sbb
addr16
jmp
pcmpgtw
in
addr16
jmp
mov
movsb
dec
fmuls
test
jns
mov
push
mov
adc
mov
cmpl
lcall
xor
cltd
jp
xchg
leave
mov
fstl
inc
cmpl
lods
arpl
jp
addr16
sbb
ja
or
add
icebp
test
cmp
mov
xor
mov
xchg
jmp
dec
and
jecxz
ds
ja
or
sbb
push
xchg
pop
adc
andl
fistpl
or
insl
fildll
mov
mov
jne
cld
inc
sbb
loop
xchg
cmp
sub
gs
push
jo
adcl
dec
mov
daa
sub
fs
push
lahf
inc
movsl
icebp
xchg
into
and
lock
sbb
inc
imul
addr16
dec
pop
pop
cs
mov
imul
imul
inc
insb
in
xchg
push
adc
jmp
jg
xor
rclb
sub
enter
mov
mov
mov
push
je
adc
jl
inc
mov
add
dec
sbb
sub
out
lods
sbb
jne
push
xor
mov
aad
sbb
xor
in
xchg
sbb
mov
cmp
or
sbb
iret
into
js
mov
or
out
rcrl
mov
stos
lcall
push
outsb
int
push
js
xor
or
nop
add
add
repnz
push
cli
int
andl
test
test
xchg
jmp
sbb
inc
cli
test
inc
in
lahf
fidivs
pop
cmp
imul
test
mov
xor
fbstp
adc
shll
jle
pop
push
xchg
clc
or
sbb
adc
fstpl
and
mov
and
sbb
xor
sub
lcall
shrb
mov
jmp
add
mov
cmp
inc
icebp
jae,pn
sbb
and
stos
in
pop
bound
cmp
movsl
fcmovne
fisubrl
dec
jecxz
andl
and
fildl
xor
bound
incl
mov
cmp
mov
ret
shl
lods
inc
adc
imul
dec
cmp
stos
sub
push
adc
out
push
sbb
mov
jmp
mov
testb
cltd
aaa
sbb
add
adc
sbb
addr16
xchg
pop
rorl
sbb
mov
aam
jle
cmp
jno
mov
or
mov
sahf
scas
out
pop
xor
jmp
fcmovnb
rorl
and
in
pop
push
subl
iretw
negb
adc
jae
xorl
test
xchg
push
mov
cmp
leave
pop
inc
push
inc
out
ljmp
icebp
mulb
or
jbe
xchg
ss
mov
testb
shll
jle
lret
roll
cmp
movsb
xor
pop
and
ljmp
out
dec
sbb
mov
xor
fsubl
or
popa
cmp
addr16
loop
cltd
cmpsl
ja
cli
cmp
xchg
and
fisttpl
imulb
aaa
dec
data16
in
mov
mov
shrl
cmp
iret
jnp
mov
jge
insb
loop
pop
mov
dec
xchg
lret
lret
xchg
mov
xor
movsb
lds
cmp
ret
movsb
mov
push
sti
adc
cmpsb
pop
scas
jg
pop
pop
pop
sbb
fsubrp
stc
jmp
clc
movsl
push
inc
int
inc
inc
incb
inc
push
or
adc
pop
lret
out
bound
push
movsl
daa
sbb
inc
add
ds
push
mov
xchg
scas
dec
inc
xor
jl
xor
sbb
loopne
dec
repnz
dec
nop
dec
fiaddl
data16
and
add
aaa
ss
mov
repnz
lock
pop
adc
aaa
shlb
push
stos
dec
pop
and
lea
pop
xchg
dec
fbstp
xchg
jmp
cmp
inc
cmpsl
rorb
jle
mov
dec
fsubl
repnz
insb
sbb
xchg
rcrl
xchg
mov
push
mov
dec
aas
outsb
dec
in
mov
fbstp
dec
inc
call
popf
ds
daa
icebp
adc
cld
test
sbb
out
pop
data16
pop
mov
pusha
and
dec
icebp
dec
mov
mov
aad
rcrl
cltd
lods
jbe
and
mov
xor
fnstcw
or
lea
sarl
and
pop
mov
jno
inc
mov
cmpsb
sbb
mov
add
push
sbb
in
mov
fs
inc
push
fsubrl
mov
shrl
lcall
lcall
leave
data16
push
shrb
fwait
mov
pop
push
inc
add
jns
mov
or
push
jae
xor
push
outsb
xor
push
xchg
xchg
pop
fidivs
in
repz
sahf
cmp
mull
xchg
xchg
pop
xor
enter
test
imul
inc
ret
repnz
lea
int
mov
push
pop
dec
xchg
mov
sbb
pop
roll
inc
push
js
xchg
mov
push
push
in
jmp
cmp
andb
pusha
and
fucomp
xchg
adc
stos
mov
xchg
sti
push
dec
sbb
loope
scas
mov
mov
xor
add
cmp
or
xchg
lret
xchg
mov
cmc
sub
or
mov
or
lods
mov
pop
movsl
js
inc
jae
jnp
push
ret
pushf
pop
movsl
sahf
lods
and
inc
cwtl
out
std
in
mov
inc
pop
into
cmpsb
enter
xchg
sbb
jmp
jmp
arpl
sbb
mov
repz
aas
rclb
out
xor
jae
jb
push
popl
jg
insb
inc
daa
push
andb
pushf
je
dec
in
mov
push
and
fidivrl
out
inc
insl
jmp
adcb
mov
mov
in
sahf
gs
adc
pop
jl
ds
movsb
aaa
into
jecxz
sub
push
pop
xchg
rclb
fists
cwtl
sbb
push
cmp
rcl
outsb
sbb
sbb
pushf
cld
adc
sahf
push
cwtl
stos
mov
in
mov
hlt
push
dec
stc
imul
pop
sbb
stos
jmp
test
jb
jge
or
aaa
xchg
mov
das
divb
sub
or
clc
addr16
aad
mov
loope
mov
bound
icebp
dec
dec
aaa
mov
push
lcall
adc
ja
push
mov
insl
data16
jl
sbbl
fcoms
rcrb
fwait
jo
adc
jecxz
pop
insb
pop
dec
int
shll
mov
pop
mov
push
sub
xchg
mov
xchg
jmp
or
stc
mov
lea
call
or
adcl
cmp
leave
xor
push
mov
inc
xchg
push
cmp
adcb
pop
sti
fwait
dec
rcrb
movsl
mov
or
jl
jg
fistps
jb
into
cmp
jno
out
shr
and
xchg
test
mov
out
mov
fisttpll
cmpsl
xor
ss
adc
push
inc
outsb
push
iret
push
dec
cltd
cmpsl
mov
rcl
dec
clc
push
and
sti
mov
xchg
cwtl
and
adc
cmpsl
lret
in
gs
das
pop
out
xchg
cmp
mov
cmp
fidivrl
jg
or
mov
dec
jmp
jnp
out
mov
mov
sbb
cmp
mov
lea
hlt
mov
pushf
or
push
cwtl
push
mov
push
in
xor
aas
push
xchg
push
je
pop
clc
arpl
sub
sub
sub
xchg
iret
dec
aam
stos
add
or
push
test
daa
jle
push
imul
and
xchg
jl
or
jg
adc
cmpsb
clc
mov
push
mov
adc
or
inc
or
dec
mov
andb
xchg
imul
dec
jl
mov
imul
dec
sub
xchg
jne
data16
jns
dec
es
mov
pop
inc
fistl
sti
inc
sahf
in
stc
xor
gs
add
adc
push
divl
jmp
rclb
lods
push
out
jo
shrl
inc
js
shrb
ret
lcall
shlb
jo
push
jbe
jae
sub
mov
sub
mov
sbb
sub
pop
mov
sub
dec
scas
mov
jecxz
lds
ss
jmp
xchg
push
xchg
popf
sbb
push
dec
mov
xor
addr16
pop
xchg
bound
xlat
addr16
das
inc
inc
fistps
xchg
mov
js
mov
mov
lods
pop
xchg
pop
or
jle
xor
jl
push
stos
jl
push
mov
jg
mov
addl
stos
pusha
and
pop
sbb
dec
pop
mov
pop
push
cmp
jle
mov
or
pop
sbb
lea
test
sub
push
idiv
mov
pop
and
or
add
push
push
loopne
jno
mov
inc
sbb
loope
daa
test
mov
lea
mov
gs
fstps
push
push
test
or
dec
mov
pop
cmp
add
cmp
scas
dec
lret
je
pop
outsb
sub
xor
pop
pop
and
js
mov
ja
pop
fwait
add
jae
stos
and
lds
pop
pop
jae
xor
mov
jl
xchg
jno
inc
xor
lods
cmp
push
xlat
xor
pop
xor
lret
and
sbb
inc
dec
pushf
jle
push
or
mov
xchg
sub
outsb
mov
mov
pusha
add
push
cmp
xchg
call
dec
das
jg
or
jo
mov
nop
push
jg
stc
popa
push
push
sub
push
fdivs
or
in
mov
xor
sti
popf
cmpsl
ret
or
or
pop
xchg
inc
xchg
loopne
arpl
push
cmpsl
cmp
lods
daa
mov
cmp
lock
pop
in
andb
cmp
scas
mov
sbbb
das
pop
insl
mov
push
xchg
and
jg
gs
aas
adc
mov
cmpsl
ds
mov
sbb
test
mov
xchg
pop
xor
push
add
aad
test
cwtl
daa
xchg
fs
fsubl
dec
pop
repnz
in
push
ret
mov
lcall
ret
movsb
pusha
in
jae
xor
imul
or
mov
pusha
mov
addr16
aaa
stos
adc
jo
popf
mov
inc
in
add
clc
or
jno
gs
sti
mov
mov
les
aas
les
mov
jp
mov
loopne
rolb
movsl
xor
pop
cmp
lcall
push
xor
lea
inc
shr
push
mov
outsl
jne
lods
jp
xchg
imulb
repz
mov
adc
mov
out
mov
fnsave
aaa
dec
in
jl
imul
sub
or
dec
loopne
jl
inc
cmpsb
mov
test
sub
lret
pusha
jp
notl
mov
or
mov
leave
cmp
jno
add
jno
inc
in
stos
sbb
xor
shll
adc
push
fistps
int3
dec
add
cmp
dec
mov
sbb
into
dec
xchg
cmp
pusha
xchg
call
mull
repnz
out
loope
notl
pop
outsb
outsl
xchg
jp
pop
pop
ss
xchg
jle
das
mov
es
cmpsl
pop
pop
dec
mov
push
out
add
xor
fnstenv
addr16
sub
int
test
inc
xchg
lds
movsl
push
insl
js
out
lock
sbb
xor
imul
pop
into
stc
nop
cmp
fdivl
rclb
pslld
push
movsl
and
and
dec
pop
mov
in
cmp
push
mov
imul
popa
rorb
clc
loop
call
jg
mov
jne
andb
fs
dec
mov
mov
sbb
cmp
and
mov
popf
ja
pop
add
pop
jmp
shrb
insl
es
mov
jns
jl
sbb
faddl
xchg
or
and
sub
pop
or
je
out
cmp
cmpsb
int
xchg
pop
sub
cs
adc
sub
push
mov
ljmp
add
aad
or
jp
push
iret
mov
jle
insb
jg
mov
jae
xorb
jne
scas
xchg
sub
inc
nop
sub
rclb
sub
add
cmp
ret
inc
fldenv
ja
xor
fcomps
into
fsubrl
push
loope
ret
add
fidivrs
arpl
jnp
pop
in
jo
jae
mov
fbstp
jmp
fstl
cmp
adc
and
shlb
std
mov
pop
fmul
xor
nop
sub
cli
std
sub
sbb
sbb
mov
das
cmp
in
mov
and
cli
dec
pop
sub
mov
into
xchg
out
pop
fmul
gs
pop
add
ret
cwtl
in
sti
leave
in
cmc
push
cli
xchg
adc
cltd
movsb
imul
ret
cld
sbb
imul
into
clc
xchg
jle
mov
mov
add
mov
inc
mov
and
lds
push
test
mov
jnp
popa
aas
insl
lcall
sar
and
jecxz
sti
cltd
fs
adc
sbb
add
int3
inc
lcall
lods
inc
mov
ss
ja
jge
xchg
scas
fucomi
push
cmpb
aas
cwtl
xor
mov
push
jecxz
fsubp
mov
push
mov
xlat
jmp
jle
in
sub
fdivl
aaa
rcrb
add
mov
pop
test
adc
je
arpl
or
fcoms
sbb
nop
mov
insb
les
aas
loop
push
in
arpl
dec
pop
push
xor
sub
pushf
jae
add
fisttps
inc
mov
mov
inc
aad
je
aaa
into
fdivl
push
mov
rclb
movlps
ljmp
div
push
cmp
gs
sub
xchg
xchg
setns
stos
cmp
and
xchg
dec
xchg
jnp
or
push
mov
dec
sbb
pushf
dec
xchg
lds
bound
push
cmc
add
jle
jns
ret
ret
pop
int
std
pop
cltd
pop
mov
jecxz
mov
inc
in
int3
sbb
inc
xor
std
push
sbb
fnstenv
xchg
jns
ret
int
or
dec
or
sub
cli
push
mov
or
adc
sub
in
rcr
repnz
mov
sbb
nop
out
mov
daa
push
popa
clc
enter
ss
xchg
sub
sub
jp
ret
or
lret
std
push
mov
adc
jb
mov
nop
negl
and
out
std
pushf
xor
bound
imul
bound
popf
repz
mov
inc
sub
inc
cwtl
jmp
add
dec
xor
push
dec
loopne
xchg
sub
subl
mov
ljmp
loopne
cmp
add
dec
cmp
fstpl
stos
int3
out
insl
cmpsb
arpl
dec
outsl
mov
mov
test
dec
adc
jb
push
adc
xchg
push
cli
push
add
sbb
rorb
xchg
hlt
clc
jae
imul
push
or
dec
inc
xchg
outsl
dec
adc
or
addr16
ljmp
adc
mov
adc
in
sbb
lds
mov
add
sbb
adc
add
call
pop
sbb
jp
inc
pop
xchg
adc
xchg
dec
lcall
incl
mov
sbb
or
data16
lock
cli
or
push
and
xchg
mov
shlb
rcrl
divb
iret
fcomi
lods
cmpsl
push
mov
stos
cltd
fimuls
ja
repz
adc
ja
ret
cmp
scas
sub
ss
inc
adc
pop
pop
xchg
pusha
ss
adc
in
cmp
mov
mov
ja
or
hlt
mov
mov
sub
push
cmc
mov
pop
pop
lret
pop
push
leave
jns
mov
inc
inc
sub
icebp
pop
call
jge
outsb
add
outsl
lahf
mov
sub
xor
adc
lret
inc
syscall
sub
in
fstl
stos
rclb
enter
lock
es
jo
dec
stos
add
push
in
mov
std
pop
icebp
enter
js
popa
negb
mov
testl
jl
sub
mov
pusha
push
sahf
into
mov
inc
cmpsl
mov
pop
arpl
mov
ljmp
sti
inc
push
push
push
in
dec
jecxz
rorb
sub
call
orb
push
out
sub
lret
xlat
mov
pop
jo
xor
mov
addl
popa
aas
push
rcrl
fnsave
repnz
loop
sub
and
test
mov
push
push
sbb
sbb
push
xor
nopl
adc
mov
pop
mov
add
sbb
dec
pcmpgtb
test
rorl
xor
cmp
popf
loope
xor
loopne
mov
lods
fisttpl
jecxz
add
jb
adc
decl
out
sub
pop
sbb
fistpll
ljmp
dec
lret
popf
add
jmp
inc
mov
ja
sub
push
or
lods
cmp
nop
movsl
gs
scas
inc
es
rcr
out
or
pop
scas
imul
ss
lahf
fdiv
push
xchg
sub
shlb
jle
push
cmpsl
sbbb
adc
das
or
or
or
scas
mov
arpl
ret
insb
jecxz
daa
push
sbb
outsb
sbb
shll
dec
int3
arpl
fidivrs
clc
loopne
xor
scas
cmp
inc
sbb
outsb
call
ja
and
add
xchg
ljmp
mov
dec
insl
in
inc
fildl
inc
fisubrs
clc
pop
xchg
mov
xchg
jmp
sarb
leave
and
or
loope
fs
icebp
push
in
inc
rolb
pop
cmpsl
insb
cmc
js
loopne
add
fistpl
aad
lahf
test
nop
mov
movsl
es
dec
andl
popf
insl
add
mov
and
pop
out
popf
out
jle
mov
add
jmp
mov
xor
jmp
add
sub
stc
xchg
cld
or
cmp
sbb
adc
push
popa
js
pop
push
pop
and
and
or
popf
push
mov
pop
push
in
or
aam
add
shll
rcrb
mov
fdivl
pop
lea
lret
cltd
sbb
sub
int
or
fildll
fimuls
icebp
cltd
std
incl
insl
les
sar
popf
clc
xchg
push
jno
test
rcrl
cmp
outsl
pop
cmpsl
notb
sub
fldcw
jb
jbe
pushf
lock
cmp
push
adc
cmp
mov
sub
or
scas
insb
inc
into
mov
das
cmp
outsb
push
in
pop
cmp
ja
aaa
sbbl
imul
xchg
pop
loopne
in
fisubl
xchg
addr16
jb
xor
sub
and
inc
lock
pop
fistpll
jo
xchg
call
repnz
clc
sbb
mov
dec
add
xchg
dec
adc
mov
mov
enter
mov
jae
push
or
aas
or
js
adc
add
fsubrp
mov
pop
icebp
and
push
dec
in
imul
and
aaa
fwait
push
dec
in
pusha
loop
adc
ss
inc
rclb
test
xor
not
lret
pop
mov
sahf
lock
loopne
xchg
jg
xchg
mov
repz
sbb
jo
call
and
pusha
push
ret
inc
shrb
lahf
lret
xchg
adc
sbb
xchg
js
mov
push
outsb
and
inc
dec
repz
sub
lcall
adc
mull
jbe
pop
xor
test
jge
int3
in
scas
sub
cli
and
daa
scas
js
ret
dec
test
shrb
lds
mov
bound
aas
inc
lods
in
cmp
std
nop
adc
lret
xor
pop
rcrl
inc
jecxz
xor
test
rol
sub
add
push
shrb
cmc
add
jo
or
in
pop
and
fisubs
out
sti
push
pop
or
push
mov
sbb
pusha
jo
dec
and
iret
mov
std
hlt
adc
inc
or
cmp
sbb
in
shrb
test
int3
fwait
inc
jmp
jbe
xor
push
mov
cs
sub
rol
cmp
xor
je
loope
fdivrs
push
stos
mov
in
test
jmp
rol
jns
cmp
pop
scas
jns
shlb
or
cli
add
mov
dec
jne
xchg
sbb
pop
out
in
ss
cmp
pop
add
push
int3
lods
mov
scas
andb
fisubl
push
in
cmp
mov
xchg
sub
das
inc
sahf
and
aaa
pop
or
sti
cld
pushf
lock
enter
outsb
push
inc
sbb
ds
dec
out
inc
and
lea
ds
shll
fs
or
popf
lods
enter
add
aas
loopne
sub
jl
xor
pop
dec
in
out
movsl
ret
inc
or
xchg
or
fwait
movsbl
out
adc
jge
xchg
clc
lret
lock
xor
sub
sbbb
add
decb
icebp
insl
stc
test
outsl
xor
clc
cmc
jo
mov
mov
out
int3
or
cmp
sub
dec
mov
pop
xor
sub
movsb
pop
enter
cmp
or
sbb
sub
fistl
loopne
aad
and
mov
jp
dec
lds
lss
icebp
mov
adc
fs
fsubl
mov
add
mov
out
rcrb
repz
or
cmp
push
lods
int3
or
rcl
loopne
fsubrl
pop
cmp
sub
inc
lcall
cmp
mov
test
pop
outsl
adc
sub
sub
xor
push
xchg
mov
out
jns
jg
dec
push
sub
inc
add
shrl
sti
push
mov
fstp
jb
xor
adc
mov
pop
addr16
in
rcl
jnp
inc
lods
rcl
jne
mov
add
jmp
in
xchg
aas
data16
out
call
leave
cmp
or
or
enter
and
dec
shl
out
cmpsl
aas
mov
push
cmp
popa
and
mov
inc
call
sbb
lds
arpl
add
ret
dec
repz
divb
daa
adc
sub
cmp
loope
daa
cmpsl
inc
adc
push
dec
in
or
aas
incb
scas
je
ret
adc
int
and
or
push
in
mov
jp
inc
xlat
jae
or
mov
sub
xchg
inc
ja
add
outsb
add
mov
or
push
fs
jae
cmpsl
test
pop
dec
jo
mov
inc
enter
push
or
or
ds
inc
push
pop
imul
mov
scas
dec
dec
in
mov
jle
insb
add
scas
push
inc
xchg
or
aam
xchg
ljmp
xor
or
cli
data16
ror
fucomip
ret
xchg
sub
xchg
sub
mov
cld
push
lea
movsb
aam
inc
incb
sbb
cmp
je
adc
out
lods
lahf
xor
in
mov
push
jecxz
insb
ret
mov
mov
vmread
fdivs
jp
test
push
nop
sub
loop
ljmp
mov
mov
lods
mov
ret
dec
and
pusha
andb
mov
stc
fdivs
unpckhps
xor
fnstenv
out
pop
hlt
xchg
inc
xchg
stos
scas
cmc
call
and
iret
xor
repnz
mov
shll
add
mov
mov
in
push
pop
xchg
lock
out
js
cmp
inc
dec
inc
dec
push
das
into
inc
loop
ror
movsl
shrb
pop
lods
sub
mov
inc
shlb
push
lds
es
cmp
lahf
jbe
mov
scas
mov
test
mov
xchg
jo
adc
filds
add
mov
enter
jae
sbb
jne
ss
inc
rcll
cli
lcall
lcall
out
outsb
pop
xor
ret
call
dec
pusha
cmc
push
loopne
nop
lds
inc
fldcw
cmp
inc
addr16
in
loopne
int
xor
push
sub
scas
cmp
int3
xchg
jmp
in
xor
je
imul
xchg
jbe
mov
mov
and
pop
insl
push
jmp
jo
pop
jae
subl
xchg
mov
ja
fucomp
pushf
xor
jns
mov
jmp
stc
out
jecxz
mov
pop
lds
lods
or
aam
montmul
cmpsb
xchg
leave
fs
lods
inc
jns
repnz
shlb
das
push
mov
and
pop
ds
mov
stos
repnz
jge
pushf
mov
iret
icebp
adc
inc
incb
aaa
jecxz
jb
inc
xchg
int3
dec
cmpsb
cmp
xchg
mov
jl
xchg
add
in
mov
mov
cmc
xchg
dec
or
shll
xchg
or
loope
jg
push
imul
rclb
addl
adc
rcll
push
xlat
xchg
add
or
jne
leave
xor
inc
add
les
inc
or
nop
xchg
mov
pop
cmp
sbb
je
lcall
cmp
adc
clc
lret
sbb
rclb
jno
rorl
lea
mov
pop
les
pop
jae
in
aas
cwtl
test
sarl
mov
dec
subl
arpl
sub
inc
leave
and
icebp
mov
leave
jnp
push
sti
in
in
jno
popl
pop
das
jg
aad
outsb
jg
movsb
fs
aad
outsb
add
sub
xchg
ds
sub
inc
jecxz
dec
les
leave
pop
mov
in
pushf
xor
cmp
xor
xchg
or
jae
jns
mov
pop
push
pop
iret
adcb
add
add
rep
sub
sub
aam
pop
repz
push
popa
sub
add
fildll
lahf
cmpb
rcrl
decl
cmc
inc
add
push
rcr
aam
mov
push
and
ss
jae
inc
xor
push
mov
or
mov
adc
cmpsl
xchg
mov
pop
fnsave
xchg
sub
orb
dec
inc
mov
cmp
out
fsubr
jmp
and
lahf
xor
adc
loope
or
jae
popa
shl
loopne
idiv
mov
rcrb
jae
push
lcall
lcall
test
mov
sub
push
mov
shl
test
dec
nop
xchg
test
dec
lods
mov
add
cmp
xchg
mov
stos
shlb
cmp
clc
pusha
lret
call
aaa
dec
lea
cmp
jae
pop
add
sbb
movsb
lahf
repnz
or
and
inc
bound
push
outsb
lods
das
ret
lret
cld
in
push
in
xchg
rcl
jecxz
arpl
jbe
psubsw
mov
movsb
inc
xchg
dec
inc
and
out
jo
stos
lea
adc
pop
call
jge
repz
dec
int3
ljmp
mov
imul
pusha
aad
out
mov
pop
adc
jg
fprem
or
mov
fsubrs
fbstp
mov
in
xor
aas
je
mov
jge
out
out
jg
in
xchg
pop
jnp
and
jmp
pop
dec
inc
roll
jo
aam
mov
mov
pop
adc
and
pushf
setne
movsb
into
in
cmpsb
cmp
fdivrl
les
xchg
inc
int3
or
jns
mov
int
gs
adc
ja
xchg
sub
stos
mov
mov
fwait
adc
in
jmp
decl
mov
mov
push
jl
movsl
je
sbb
jg
push
pushf
xchg
lock
mov
cmp
sub
and
pushf
xchg
inc
mov
mov
pop
lods
rep
mov
cli
pop
jb
sub
xchg
in
pop
xor
scas
jp
push
adc
adc
xchg
sub
aad
lea
jge
lods
movsb
cmp
inc
inc
pop
mov
int
cmp
inc
nop
pop
push
mov
lret
shrb
ja
clc
das
out
mov
je
jbe
mov
popf
fwait
jo
dec
xchg
push
loop
outsl
bound
int3
inc
mov
jp
sbb
sbb
popa
push
imul
ljmp
popa
pop
mov
in
sub
fidivrs
mov
or
popa
fisubl
sbb
xchg
ja
dec
xchg
mov
cmpsl
stc
popa
sub
push
jnp
xchg
add
lods
and
lds
jmp
adc
lret
insl
jb
les
sti
lods
cwtl
pop
mov
push
add
inc
cmp
es
jmp
leave
sbb
xrstors
iret
push
mov
mov
push
jno
fcomps
cmpsb
ret
jns
imul
mov
jmp
mov
lods
in
cmpltps
stos
mov
push
dec
into
gs
movsl
nop
pop
jge
inc
scas
jge
cwtl
sub
lea
inc
inc
je
jne
mov
mov
inc
rolb
test
add
inc
iret
xchg
add
adc
daa
shll
out
push
jnp
or
test
dec
xor
mov
jnp
pop
movsl
push
into
int3
add
scas
pop
icebp
idiv
pop
ret
mov
push
inc
mov
xor
test
notl
sub
and
cmc
std
jecxz
cs
add
inc
jb
sahf
xor
aaa
cmpl
stos
sub
out
xor
arpl
iret
inc
clc
sarb
xchg
push
sub
push
shlb
lahf
ljmp
std
pop
les
xchg
lods
or
lods
and
hlt
gs
adc
add
jne
jge
jp
mov
pop
cwtl
stos
mov
cmpsb
inc
sub
call
and
rcr
jb
lods
aas
mull
stc
nop
jnp
mov
pushf
orl
xor
into
xchg
mov
enter
sub
xchg
add
fsubrp
mov
sub
popa
enter
sahf
push
cmpl
dec
jo
es
inc
dec
lret
xor
ret
push
adc
cld
das
and
aas
mov
push
loop
into
gs
pop
icebp
sbb
call
pop
mov
test
je
push
sahf
pop
or
into
inc
out
ret
in
xchg
pop
cmc
mov
xchg
lods
adc
fstl
out
jle
ja
shll
add
leave
xor
push
sbb
xchg
leave
fnop
jo
add
xor
mov
mov
int
pusha
cmp
sbb
xchg
pop
test
inc
cmp
mov
lahf
and
fsubl
inc
jo
push
imul
in
orl
push
mov
cmp
test
test
mov
adc
mov
icebp
addb
nop
add
mull
es
jno,pt
xchg
jmp
jae
out
sub
xor
jb
das
pop
push
mov
sbb
push
push
mov
inc
mulb
push
cmp
push
popf
loopne
jecxz
outsl
sub
rcll
in
mov
hlt
pop
scas
sub
xor
push
or
xchg
loopne
lea
pop
add
jl
fsubl
jb
cmp
sahf
jmp
clc
or
mov
aam
add
lahf
ss
lret
mov
or
loope
ja
xchg
cltd
arpl
xchg
sbb
and
into
ja
insb
jle
dec
int
push
rclb
arpl
fwait
pandn
cmp
pop
mov
xchg
lea
and
push
ljmp
testb
mov
push
test
xchg
mov
gs
sbb
xchg
cwtl
icebp
cld
icebp
or
iret
cwtl
test
mov
js
cmp
xchg
adc
jg
loop
stos
mov
lds
mov
mov
or
xchg
stc
popa
addl
jne
jle
int3
ljmp
clc
cmp
pop
jg
nop
loopne
dec
and
test
inc
sahf
jle
dec
rcrb
icebp
psubusw
pop
xor
dec
ret
and
nop
out
mov
fwait
mov
data16
dec
test
xor
mov
mov
jns
cmp
dec
in
adc
pop
sub
dec
das
mov
fwait
pusha
pusha
sbb
push
push
mov
mov
push
cli
out
imul
push
add
inc
cmp
push
stos
xor
sti
pop
push
outsl
rcrl
add
sub
cs
and
lods
test
mov
ror
cmp
cmp
adc
jae
cmp
inc
inc
push
jo
cs
mov
inc
fldenv
ss
inc
movsl
dec
mov
sub
mov
dec
test
aad
je
add
add
jne
ja
dec
xor
mov
enter
mov
mov
and
popa
cwtl
repz
and
call
push
xor
push
cwtl
dec
xchg
pop
popa
scas
cmp
stc
push
mov
aam
adc
inc
push
adc
mov
addl
fists
lods
inc
mov
fmulp
popa
adc
iret
ja
call
pop
js
xchg
fs
sbb
mov
mov
push
adc
jae
das
jb
sbb
sbb
mov
xlat
ss
mov
jle
cld
cltd
and
js
rclb
in
jge
push
gs
lods
xor
fwait
pop
or
sbb
cmp
into
scas
icebp
sub
and
push
scas
jbe
ds
xor
xchg
pop
dec
lods
mov
cmp
sbb
pop
adc
shlb
pop
xchg
sbb
dec
outsb
adc
adcb
cwtl
inc
pop
aad
dec
sbbl
push
mov
add
fimull
icebp
je
int
rcll
outsb
stc
dec
inc
xchg
subb
push
mov
pop
scas
stos
inc
xchg
sub
pop
scas
push
adc
or
divl
in
shl
jp
pop
gs
inc
loope
inc
arpl
pushf
fnop
das
cmpb
and
les
outsb
test
jne
imul
faddp
shl
or
cmp
mov
lds
mov
xor
cmc
addr16
out
sbb
dec
dec
outsl
cmp
xlat
dec
fs
aaa
jb
out
lock
or
inc
sbb
pushf
mov
mov
fisubrs
and
cltd
addr16
aas
clc
dec
out
test
stc
dec
lret
and
pop
mov
dec
fwait
ret
mov
xchg
subl
push
lods
add
outsb
push
dec
mov
aad
aad
adc
imul
and
les
shr
sbb
xor
mov
jns
in
or
dec
push
fs
add
jle
out
xchg
aaa
fistpl
adc
lcall
xchg
xor
fdivrs
push
fcmovbe
jb
repz
pushf
mov
ss
push
sahf
sahf
sub
cmp
sub
das
loope
addr16
adc
lret
cwtl
cmp
push
jmp
cmc
push
into
bound
xor
push
nop
nop
cmpsl
inc
mov
ret
ljmpw
mov
adc
int
icebp
rol
repz
insb
add
sbb
jmp
popa
stc
les
xchg
mov
add
xor
dec
fnstenv
sbb
js
lea
or
or
pop
xchg
dec
aad
or
inc
cmp
push
lods
jmp
cmpsl
subb
repnz
sbbl
scas
filds
adc
dec
jo
test
orb
dec
into
lods
lods
out
ja
popf
jl
clc
es
inc
out
or
lock
cmpsb
jmp
mov
add
scas
and
repnz
cs
cwtl
xchg
pop
shrb
jbe
xor
imul
sub
lret
popa
je
daa
mov
dec
into
ret
loop
inc
dec
add
xor
mov
inc
aaa
xchg
iret
hlt
push
cmp
add
imul
out
stos
xor
iret
push
push
xchg
fsts
inc
xchg
mov
dec
dec
inc
mov
ret
outsb
cmpsb
daa
pop
cmpsl
ror
cmp
aaa
out
lea
movsb
lea
cmp
pop
lods
aam
mov
jns
mov
mov
dec
fisubrl
xor
pop
and
and
sti
ljmp
dec
mov
jge
icebp
jp
mov
push
std
fwait
xchg
loope
or
jmp
mov
fwait
or
int
push
lock
mov
lret
push
mov
jle
es
xchg
dec
fadd
adc
and
jecxz
mov
addr16
rcl
bound
dec
out
lock
xorl
xchg
or
dec
and
mov
pop
fmul
femms
pop
notb
scas
push
mov
les
xor
in
inc
jae
mov
pop
shll
inc
jb
je
sbb
pusha
xor
push
test
mov
mov
adc
inc
xchg
xchg
sub
insb
add
mov
ss
xlat
cpuid
mov
inc
in
sbb
cmp
data16
dec
mov
sub
xchg
pop
sbb
cmc
nop
negl
mov
clc
jge
sub
ja
hlt
dec
std
fmull
or
or
psubb
pop
test
jg
sbb
pushf
test
int
inc
pop
cmp
mov
jns
mov
insl
mov
pushf
icebp
pop
inc
data16
jle
pop
mov
sti
dec
xchg
jno
dec
push
cmp
pushf
xor
pop
scas
or
movsl
jg
in
mov
push
clc
or
out
cmp
push
pop
or
imul
push
jbe
arpl
icebp
xor
ds
push
pusha
subb
jmp
ror
loopne
push
imul
cmpsl
rcrl
mov
pop
in
pop
icebp
clc
mov
test
ret
or
pop
dec
inc
mov
adc
dec
nop
out
push
fs
enter
decb
and
sbb
mov
bound
sbb
inc
mov
mov
fsubrl
imul
divl
lock
adc
inc
dec
dec
pop
cmp
pop
cmpsb
lock
cltd
cli
xchg
stos
decb
and
sbb
std
sbb
jae
mov
jne
push
push
out
mov
ljmp
jo
mov
repnz
adc
sub
adc
cmp
dec
jg
pop
mov
inc
mov
loope
inc
popa
stos
ficomps
sti
mov
mov
inc
add
movsl
aam
ret
addr16
xchg
enter
inc
fdivl
insb
jmp
inc
dec
mov
sbb
xchg
adc
cltd
push
jbe
out
jle
gs
sbb
lret
xor
jmp
movsb
inc
mov
fldcw
out
cs
adc
ljmp
xor
popa
dec
mov
ret
scas
pop
add
dec
outsl
adc
hlt
push
xchg
xchg
lds
push
cli
addr16
cltd
sbb
jbe
movsl
mov
or
arpl
dec
jmp
xchg
mov
or
sub
add
int3
and
test
mov
daa
imul
or
pop
jl
popa
push
jb
mov
imulb
lods
xchg
mov
dec
movsl
mov
dec
sub
jnp
adc
push
sahf
dec
or
xor
xchg
ljmp
xchg
or
dec
in
pushl
in
pop
scas
mov
repnz
dec
loope
sbb
jno
mov
jns
push
and
adcb
adc
or
cli
fadd
call
shll
pop
or
ljmp
sbb
call
cmpsb
xor
cmp
add
pusha
ljmp
cmp
and
lods
in
cwtl
mov
dec
mov
repnz
xchg
add
or
and
sub
push
or
test
and
dec
mov
ret
shr
xor
dec
scas
inc
sbbl
and
roll
sbb
stc
icebp
fbstp
push
idivl
cmp
repz
push
ret
sbb
adc
mov
push
addr16
pop
pop
cmp
xchg
cmpsl
repz
or
pop
mov
sbb
clc
pop
pop
jp
xor
dec
sbb
add
xor
pop
and
in
pusha
pushl
cltd
std
inc
inc
inc
mov
and
cmp
addb
mov
jle
mulb
push
aad
add
mov
dec
movsb
aaa
clc
jae
pop
negl
inc
dec
lahf
pop
in
enter
mov
pushf
fcomp
inc
mov
popa
clc
shlb
jle
lods
out
ret
in
ss
cwtl
les
in
fdivrs
cmp
dec
and
xchg
dec
adc
inc
and
inc
sbb
sbb
jmp
repz
mov
push
rorb
hlt
push
outsl
pushf
adc
cs
out
xlat
outsb
aam
rclb
xchg
mov
lcall
adc
or
pop
sub
out
dec
inc
xlat
xorl
pop
in
leave
pop
mov
mov
jae
sbb
pop
call
test
ljmp
xor
mov
pushw
cmp
cwtl
das
repz
cltd
loopne
mov
push
xchg
test
movsb
pop
sub
jb
jns
sahf
xor
xchg
mov
push
mov
push
jne
hlt
iret
arpl
mov
movsb
imul
sub
push
int3
pop
les
mov
jg
stos
mov
sti
or
and
mov
int
jecxz
inc
cmp
sub
xor
dec
push
sub
rcrl
lock
cmp
adc
cmp
data16
inc
mov
subb
in
daa
push
jge
push
fdivrs
inc
adc
or
dec
adc
mov
ljmp
and
dec
cmp
cmpsb
sbb
sbb
cmc
mov
cmp
pop
or
lods
movsl
jg
xchg
outsl
bound
xrelease
ret
mov
hlt
cmp
mov
lods
dec
push
adc
push
sbbl
cs
jbe
push
repnz
scas
icebp
in
pushf
pop
lahf
lds
mov
cmpb
sbb
adc
in
dec
mov
pop
lods
out
inc
fisttpll
ret
in
inc
xchg
pop
inc
cmp
leave
popa
test
addr16
adc
out
mov
jmp
cmp
shl
movsl
inc
cmp
cld
inc
jl
fistps
add
mov
adc
imul
lret
in
in
sbb
push
roll
sti
or
push
aam
mov
lods
cmp
ljmp
lds
ljmp
outsl
inc
cli
pop
imul
push
fsubr
push
es
shlb
movsl
push
repnz
int3
arpl
xchg
pop
inc
imul
or
push
inc
stos
mov
xchg
jmp
mov
daa
js
sub
or
in
cmp
mov
cmpsb
ds
jl
xchg
adc
mov
test
aas
xchg
jns
jmp
cli
lret
dec
jb
ljmp
ss
mov
xor
jle
mov
mov
jg
dec
bound
stc
dec
orb
xlat
jb
add
sbbl
lock
shl
adc
jp
jp
cmp
jns
mov
inc
jne
js
lret
mov
dec
pop
mov
fwait
push
js
fwait
aaa
cmp
test
and
lret
xchg
in
add
cmp
aad
call
paddb
es
sub
or
add
xchg
insb
nop
addr16
inc
dec
pop
out
pop
mov
in
sub
mov
inc
pop
aam
fs
lea
pop
and
in
xorb
mov
and
data16
push
aam
sbb
xor
arpl
jp
jp
xchg
mov
xlat
inc
std
aad
fdivl
shl
mov
ja
inc
add
xchg
call
fcmovnbe
push
or
mov
push
mov
enter
adc
xor
test
push
ficoms
mov
mov
xchg
scas
not
inc
push
mov
andb
push
push
mov
cmc
incb
inc
push
enter
mov
add
or
leave
jo
mov
andb
notl
inc
adcl
test
leave
shrb
pusha
ds
mov
jge
xchg
popa
addl
or
and
add
in
inc
push
rcll
mov
loopne
mov
fdivrs
mov
sub
pop
nop
dec
mov
inc
rcrl
push
or
jb
dec
and
sbb
lods
sbb
in
and
bound
sbb
xchg
scas
xor
mov
xor
cmp
adc
sbb
out
mov
scas
outsl
aas
push
lcall
mov
arpl
stc
inc
ds
dec
cmp
and
test
loop
outsl
push
jmp
frstor
xchg
movsl
xor
xor
mov
mov
cmpsl
sub
cmp
adc
cli
push
cwtl
inc
arpl
in
sub
add
xor
mov
and
pop
pushf
lcall
fnstcw
cwtl
test
mov
les
jg
sub
bnd
sbb
sbb
ds
add
push
andb
adc
mov
mov
add
cltd
das
mov
dec
xchg
dec
pop
divl
mov
cwtl
push
inc
cwtl
sbb
bound
pop
mov
fildl
pop
or
cmc
adc
or
jp
jp
mov
loop
mov
mov
or
xlat
cmp
inc
pop
sub
aas
lret
pop
icebp
mov
fnstsw
fcmove
fnsave
pop
push
adc
lods
push
pop
sti
daa
cmp
fstpl
add
dec
fidivl
imul
jnp
ljmp
fmull
addr16
fistpl
daa
hlt
ljmp
sbb
js
fnstcw
pop
xchg
leave
pusha
iret
mov
jb
push
jmp
cli
pushf
jle
stc
mov
inc
ljmp
or
popf
add
push
mov
fsubrs
dec
xchg
cs
push
popa
clc
inc
sti
movsb
cmp
std
mov
movb
lea
mov
rcrl
out
leave
test
test
icebp
mov
adc
push
mov
aam
cmpsb
jge
jp
and
dec
in
push
mov
in
push
adc
test
pop
addl
inc
addr16
aaa
mov
adc
shrb
mov
sbb
add
adc
mov
adc
insl
stc
pop
sub
sub
pusha
or
pop
sub
inc
hlt
push
cli
inc
mov
pop
adc
dec
repz
loopne
loop
cmp
adc
lea
pop
loopne
cmp
inc
xchg
imul
aaa
dec
sub
rcrl
icebp
movsl
or
loop
std
out
das
pop
push
nop
repz
mov
cmp
stc
pop
out
jle
adc
rcrl
out
loope
out
pop
addr16
ds
scas
mov
pop
sub
out
adc
ss
mov
cmp
cmpsb
push
push
xor
mov
mov
and
add
dec
rcrb
insb
push
out
mov
xchg
fiadds
subb
fisttpll
mov
dec
jmp
lea
inc
out
lods
mov
xlat
sbb
inc
pop
shl
cmp
inc
daa
inc
inc
mov
lods
or
scas
add
loopne
iret
pop
jp
xchg
call
inc
fucomip
fiaddl
push
clc
repz
push
jnp
mov
push
dec
and
mov
sahf
es
pop
and
stos
jg
fistps
push
pop
andb
frstor
fnstenv
jp
xor
lcall
pop
xchg
mov
iret
data16
adc
mov
fsubrs
mov
mov
lods
fs
aad
imull
popa
jno
push
jg
jp
aam
mov
repnz
lds
inc
or
ret
mov
push
jo
jg
sbb
mov
test
and
leave
dec
in
sbb
and
inc
mov
movsl
cmpsl
push
mov
insl
jmp
incl
lret
and
adc
cld
sub
mov
cltd
pop
jg
sub
lcall
mov
mov
push
dec
pushf
out
std
adc
shrl
pop
in
lret
cmp
jo
inc
fisttpll
mov
jle
loopne
sub
insl
jb
pop
in
scas
fcompl
and
notl
test
and
addr16
insl
jmp
pop
mov
insb
jg
stos
push
cmp
jg
pusha
and
mov
mov
push
push
mov
movsb
aas
dec
fisubrl
or
cmpsl
insl
sub
xor
pop
das
js
sbb
push
das
push
mov
add
inc
xor
and
movsb
insl
dec
ja
pop
adc
popa
lds
lret
jno
and
jecxz
push
mov
cmp
ja
xlat
int
push
pusha
or
into
jl
pop
inc
in
ja
mov
jno
jae
insb
popf
jp
lods
or
call
pop
pop
push
lret
push
xchg
cli
dec
adc
xchg
or
or
fistpl
and
cmc
cli
dec
addr16
push
fidivrl
dec
cmp
and
and
stos
inc
mov
or
js
sub
lret
stc
imull
imul
cmpsl
repz
data16
aad
pop
outsb
adc
lcall
enter
stos
cmp
packsswb
jp
xor
rcrl
stc
jecxz
pop
cmp
add
or
and
xchg
aam
and
negl
stos
call
sti
mov
les
add
mov
push
les
mov
out
in
in
xchg
in
insl
dec
xchg
test
xlat
insl
hlt
dec
jb
or
leave
pop
rol
rclb
stos
orb
int3
sub
test
cmp
dec
jo
orb
push
out
adc
bswap
clc
xchg
jle
inc
xlat
lea
fs
jae
xlat
pop
xor
adc
mov
dec
loop
lret
inc
cvtpi2ps
imul
jbe
inc
leave
push
push
outsb
xorb
sub
and
pop
repnz
in
inc
pop
pop
insl
cmp
push
adcl
movsb
inc
and
cmp
imul
out
nop
repz
in
xchg
mov
stc
sub
xlat
sahf
leave
xchg
sub
jge
xor
mov
out
cmc
xchg
xchg
push
push
movsb
mov
add
pushf
xchg
xchg
aaa
lret
xor
adc
mov
mov
sub
sarl
negb
loop
cld
fmul
add
in
cld
jb
addl
cmp
inc
mov
iret
mov
push
xor
in
sub
nop
daa
dec
pop
add
mov
xor
ret
cmpsb
inc
nop
dec
lea
fcomp
jl
gs
xchg
push
jae
mov
mov
mov
shl
insb
rol
bound
xchg
test
out
push
pop
insb
jnp
mov
scas
mov
jp
sbb
mov
lret
cwtl
les
and
cvtps2pd
mov
cmp
add
test
mov
inc
fwait
pop
sub
fsubrl
movsl
or
cmc
js
nop
jge
pop
js
cmp
pop
pop
pop
push
aad
fldt
pop
loope
cli
icebp
add
les
add
mov
inc
cmp
ljmp
jb
ss
jmp
sahf
adc
lret
cmp
sbbl
or
mov
lret
xor
pop
aas
push
outsl
mov
jns
out
inc
fistpl
lods
loopne
data16
faddl
test
pop
jae
movb
sbb
jb
push
mov
addr16
or
imul
jmp
push
fsubl
xor
cmp
add
es
or
iret
shll
xchg
sahf
rcr
mov
mov
fs
jb
loop
bound
iret
pop
dec
repnz
adcb
sbb
jmp
add
loopne
iret
xor
aam
push
pop
repnz
imul
std
sbb
and
cmp
mov
pop
or
sub
hlt
fnsave
into
mov
fsts
add
sub
sbb
jbe
add
dec
pop
and
fisubl
sub
ret
cltd
sub
cmc
dec
adc
pop
icebp
out
notl
adc
mov
cmp
loopne
mov
scas
call
cmc
fisttps
icebp
roll
mov
cmpsl
lret
xchg
leave
push
fistl
mov
lods
stos
adcl
in
js
inc
mov
dec
lret
mov
inc
jns
inc
pop
and
and
mov
inc
mov
push
imul
popf
ja
cmpsl
jo
pop
rcrb
scas
negw
sub
repz
popa
cld
push
cmp
xchg
xchg
sbb
ret
inc
movsl
pop
dec
fwait
sti
lds
lds
dec
push
jge
cmp
or
outsb
mov
jge
adc
and
adc
sar
mov
pop
lock
mov
adc
xor
jg
or
lcall
pushf
jle
pop
ja
xor
xor
mov
xchg
xor
cmp
out
rcrl
inc
push
lds
dec
movsb
inc
xchg
sahf
mov
std
lea
cmpsb
divb
jecxz
popf
pop
bound
jno
dec
iret
cmpsl
into
das
add
cmp
iret
decl
inc
push
ret
mov
stos
les
cmpsl
sbb
jle
shll
fnstsw
adc
sub
pop
lea
insl
push
ds
cmpsl
sub
hlt
lahf
mov
out
pop
sahf
sub
sbb
jb
outsl
dec
mov
mov
out
mov
add
mov
scas
sbb
shrl
xlat
dec
and
call
scas
jbe
xlat
and
testb
xchg
sub
xor
imul
iret
pop
push
pop
arpl
or
rorl
aad
jg
arpl
jge
jns
in
cmp
xor
xchg
sub
mov
xchg
inc
mov
loopne
lds
push
dec
movaps
sub
cmpsl
xchg
sbb
mov
repz
insb
push
push
pop
inc
xchg
mov
mov
mov
mov
inc
cmpsl
aaa
ds
ja
iret
push
in
in
fcmovnu
jo
scas
in
test
stos
or
push
mov
dec
out
pop
insb
add
add
mov
aaa
jmp
or
icebp
jg
ja
sbb
push
mov
repz
and
adc
adc
scas
ret
repz
cld
popf
gs
in
mov
cmc
jl
push
cmp
adc
fldl
dec
pushf
insb
shlb
add
mov
mov
dec
cmp
pop
lods
int3
mov
fdivr
or
mov
sahf
popf
xlat
mov
stos
mov
mov
outsb
imul
adc
sahf
inc
scas
daa
push
loopne
and
pop
cwtl
push
nop
mov
mov
test
incb
pop
dec
leave
cwtl
sub
and
outsl
js
mov
xor
adc
jo
xchg
loopne
sub
mov
mov
fsubrl
fdivs
push
pop
lds
div
pop
mov
pushf
cld
push
push
mov
movsb
add
xor
movsb
lods
cmp
ja
lods
clc
mov
xchg
mov
in
jl
pop
clc
xor
and
ret
sub
inc
mov
not
sbb
les
or
or
xor
adc
decb
sub
out
cmc
mov
stos
insb
mov
cmp
adc
rorb
setno
loop
jg
stos
mov
jo
mov
leave
mov
adc
ret
push
xor
pop
mov
fdivl
scas
fucomp
dec
pop
cmpsl
ds
popa
fnstenv
rorb
imul
push
test
in
decb
or
imul
xchg
test
mov
imul
add
push
cmc
fwait
and
push
clc
movsb
xchg
cli
test
mov
pushf
inc
sub
lods
mov
stos
xor
inc
mov
into
and
ja
in
jle
sbb
xor
ljmp
cltd
lahf
and
mov
pop
out
sub
sbb
and
xor
sub
loope
inc
sub
xor
int3
out
xor
mov
fsubrs
adc
cmp
lret
mov
fcoml
mov
add
hlt
scas
push
repnz
push
scas
push
nop
jne
scas
xchg
or
push
dec
lds
jg
and
mov
xchg
mov
shrl
mov
fsts
mov
xlat
inc
mov
pop
iret
xchg
mov
mov
dec
loopne
rcrl
sub
sbb
mov
in
cmp
sti
clc
hlt
add
lahf
adc
cmp
ret
cmpsb
jg
cs
lea
mov
push
jge
stc
loop
dec
adc
shr
ret
cmp
cmc
fsubr
adc
adc
mov
jge
mov
sbb
push
xor
sbb
push
fisubs
scas
sahf
jmp
push
push
jae
xchg
cmp
in
fs
push
in
dec
dec
insb
idivl
adc
add
sub
rcr
and
or
cmp
push
std
xchg
xchg
cwtl
adc
stos
push
lret
jnp
pop
sub
fldt
lret
jne
lcall
jae
cltd
inc
lods
rclb
xchg
sbb
mov
pop
bound
sbb
cltd
divl
cmp
movsb
leave
pusha
mov
jb
or
jo
xchg
dec
in
popa
subb
faddl
in
jmp
dec
lock
out
and
jle
push
lcall
frstor
pop
pushf
mov
cwtl
mov
gs
stos
or
jp
outsb
fsub
mov
or
mov
cmp
data16
cmp
test
jl
test
mov
add
decb
sbb
xchg
cs
push
mov
out
cmc
and
adc
sub
aas
daa
lret
mov
pop
mov
adc
sti
jnp
pop
popf
imul
sbb
jg
leave
sub
imul
imul
ja
adc
mov
mov
inc
rcll
mov
mov
sarb
xchg
dec
push
lret
push
shl
xor
loop
std
xchg
pop
js
nop
or
add
cmp
in
adc
gs
push
inc
add
fs
fsubrp
cli
sti
inc
jbe
andl
pop
sub
scas
or
fldenv
sbb
add
cmp
rclb
std
inc
icebp
sahf
pop
jnp
cld
xchg
popf
cmpsb
push
mov
push
mov
mov
fidivl
mov
jle
mov
add
pop
out
cmc
jle
lcall
sbb
lea
pop
imulb
aam
jge
dec
in
rcrb
pop
insb
fmull
or
les
pop
sub
mov
addr16
inc
push
fs
jnp
sbb
in
push
sub
insl
add
dec
jo
out
mov
xor
stos
cmp
mov
rclb
sub
sarl
imul
test
xchg
outsl
pushf
add
dec
nop
sbb
dec
imul
cltd
sub
xlat
insl
call
dec
and
mov
shl
sahf
mov
pop
and
addr16
jo
cli
stc
outsb
cmc
lret
push
sbb
jne
out
pop
sahf
pop
mov
cld
sbb
or
out
xor
xor
sub
out
fstpt
adc
movsl
enter
and
xor
fildll
push
aaa
xchg
lods
sbb
les
adc
or
xor
addr16
orb
jmp
mov
jae
lods
sbb
pop
pushf
and
sbb
stos
out
test
mov
addr16
aam
gs
xor
or
sbb
lock
push
adc
add
add
outsl
fdivl
push
sub
dec
movb
scas
mov
xchg
lods
loop
clc
daa
inc
icebp
jle
sar
cmp
add
cmc
or
xor
mov
cltd
add
lock
stos
cmp
scas
inc
int3
hlt
fidivrl
and
xlat
pusha
dec
mov
outsl
das
xor
subb
cmc
dec
or
mov
xchg
mov
sub
or
stos
in
lods
mov
push
xor
inc
dec
mov
dec
jmp
inc
sub
imul
sub
sbb
pop
notb
test
movsb
cmp
rcr
arpl
mov
dec
adc
ljmp
sbb
aad
cwtl
rorl
cmp
sub
adc
idivb
and
fwait
icebp
rol
cmp
pop
mov
add
pop
scas
add
jle
out
mov
popf
data16
mov
dec
cwtl
in
ror
mov
sbbl
xorl
aas
ret
ret
sub
pop
adc
mov
in
aas
inc
and
popa
or
mov
outsb
pushf
ja
into
cwtl
jo
sbb
and
adcb
mov
sahf
mov
lock
and
fsubs
jo
mov
xor
hlt
pop
js
fs
repz
inc
or
je
jns
in
adc
frstor
in
xchg
stc
inc
cmpsl
movsb
sub
jmp
fwait
loope
xchg
aas
notl
inc
movsl
scas
mov
js
jge
adc
inc
jmp
push
ficoml
pop
push
ds
dec
outsl
inc
out
jecxz
in
and
xchg
das
cmc
add
fwait
xor
xor
mov
adcb
nop
pop
mov
fildl
push
int
outsb
add
cmc
mov
mov
shll
clc
pusha
imull
shrl
jge
jg
repnz
jp
pop
arpl
jns
repnz
lock
dec
push
pop
fistpll
push
fimuls
mov
out
mov
xlat
xchg
aad
fisubl
std
loope
cmpsb
lret
cld
imul
rcrb
cmpsb
dec
xchg
andl
mov
mov
sbb
mov
loope
xor
daa
or
mov
mov
nop
xor
icebp
out
sti
sahf
xor
push
outsl
sbb
dec
lcall
dec
push
mov
lahf
outsb
adc
xor
fdivrl
mov
stos
lods
and
mov
repnz
gs
mov
clc
jb
mov
dec
mov
mov
mov
std
fildl
adc
daa
lea
jmp
sahf
xchg
sub
data16
cmp
nop
sub
mov
push
xor
je
scas
fldenv
sub
inc
mov
jbe
xchg
mov
das
xor
add
lcall
dec
inc
hlt
repnz
pop
jp
lcall
xor
fistpl
mov
test
mov
add
mov
shlb
add
pop
jl
lods
push
mov
mov
pop
jg
rclb
test
fcmovne
fidivs
push
mov
scas
xchg
jne
mov
jns
mov
or
sarl
jecxz
xchg
push
loope
adc
js
xor
jns
push
xchg
iret
lret
mov
daa
cmp
test
mov
xor
jbe
xchg
cmp
rcrl
add
adc
imul
mov
jne
stos
out
je
sub
xchg
mov
lods
xlat
outsb
in
fldenv
dec
cld
andb
aad
jnp
mov
push
in
dec
mov
fwait
out
mov
cmc
loope
aaa
call
test
xor
jecxz
stc
loopne
and
xchg
mov
add
jbe
push
push
cmp
jmp
jl
or
mov
dec
or
jmp
mov
push
jge
dec
cmpsb
push
test
mov
shrl
add
mov
and
mov
lret
cmovnp
pop
and
xchg
jl
inc
loopne
aas
adc
adc
jle
test
pushf
out
out
mov
xchg
push
cmpxchg
sub
aas
aaa
add
inc
jnp
or
iret
movl
scas
sub
filds
cmp
mov
add
inc
mov
outsl
inc
imul
enter
sub
jae
sbb
push
push
mov
jp
sub
jb
lret
jbe
mov
stos
inc
sbb
mov
mov
inc
push
roll
cltd
les
mov
ss
out
sub
push
push
jmp
add
jb
pop
lds
cmp
into
xor
push
sub
sbb
outsb
pop
scas
mov
cmp
ja
push
ret
les
shlb
clc
pop
in
dec
inc
mov
jnp
rcrb
push
add
sub
or
mov
inc
xchg
cmpsl
daa
mov
fnsave
lahf
mov
add
xchg
in
ret
out
jp
sbb
mov
mov
test
cli
pop
es
mov
dec
in
pop
push
insl
int
imul
out
daa
and
testb
mov
xor
dec
push
fucom
pop
mov
aas
mov
push
loopne
test
fsubl
fadd
repnz
xor
mov
xchg
leave
clc
aad
mov
das
or
popa
int3
jg
js
rcll
adc
aaa
sbb
fwait
lcall
stos
cli
add
jge
xor
mov
jle
hlt
imull
jbe
sbb
dec
out
pop
popa
push
ljmp
jno
jae
push
xor
mov
pop
mov
fbstp
pop
adc
mov
xchg
add
orb
inc
test
push
dec
pop
jae
pop
fdivr
pushf
xchg
pop
push
sub
push
jg
aas
popf
dec
pushf
sub
jge
sbb
loop
sub
in
in
add
sub
push
scas
xlat
mov
push
rcrb
in
into
int
loopne
push
push
inc
fnstcw
jbe
test
add
xorb
xchg
inc
fwait
lcall
in
mulb
insb
cmp
push
or
push
popa
lods
cmp
mov
pop
jecxz
call
xor
popa
mov
push
addb
xchg
sbb
inc
jecxz
mov
push
in
scas
inc
xor
xlat
jae
rorb
scas
sub
dec
dec
jb
mov
nop
fs
repnz
push
mov
aam
orb
dec
ret
mov
and
sbb
adc
dec
cmp
movsl
lods
bound
mov
mov
test
or
push
pop
fs
mov
ret
pop
dec
pop
icebp
int3
sbb
sbb
xchg
dec
hlt
cmc
das
popa
mov
mov
xlat
test
ret
cli
test
in
outsb
pop
imul
inc
jecxz
out
sbb
xchg
icebp
outsl
sbbb
sbb
popa
addr16
mov
aam
adc
jmp
ds
xchg
cs
aas
push
mov
rcrl
xor
xor
inc
mov
repnz
push
in
jg
xlat
roll
push
je
cmc
push
pop
lock
cmpsl
divb
lahf
adc
movsl
into
xor
in
jns
cmp
mov
outsl
repz
add
in
jle
ret
stos
aaa
add
outsb
jle
cli
test
cltd
jno
lret
sbb
fstl
rcrb
mov
or
rorl
gs
or
lds
pop
jbe
sbbl
rol
pop
imul
mov
push
push
mov
shl
adc
rol
test
rdtsc
inc
sarl
fcoml
inc
mov
sbbl
ror
mov
fists
sub
dec
pop
sub
or
pop
sahf
repz
xchg
pushf
xchg
dec
ja
movsl
lods
xor
sub
push
es
jnp
inc
fucomi
xchg
xchg
stos
mov
inc
jb
push
leave
pop
movsb
andb
arpl
into
arpl
fsubrs
push
xchg
sub
pop
add
fidivrs
lods
push
jo
dec
xchg
jmp
xlat
sbb
lret
fyl2xp1
imul
mov
sbb
call
inc
cmp
push
mov
fcmove
leave
leave
jle
lock
mov
les
xchg
in
hlt
push
or
xor
push
aad
dec
nop
jb
imul
sub
pop
jl
cmpsl
jno
jno
xor
or
xor
dec
sbb
or
mov
dec
lahf
jno
jae
jl
insl
jo
push
add
add
repz
pop
push
push
add
push
jg
lock
jns
xor
sarb
inc
faddp
cmp
outsl
loop
pop
aad
ret
mov
jg
fnsave
repnz
ret
mov
adc
push
leave
mul
jge
fsts
fisttpll
lods
clc
mov
mov
and
insb
push
test
mov
jnp
mov
jne
movsb
add
xor
inc
push
push
faddl
out
mov
out
nop
std
in
dec
call
sbbl
sub
les
pop
int3
push
es
addb
test
xchg
sub
dec
add
lcall
xchg
gs
cmpl
push
push
stc
jl
dec
push
pop
mov
mov
mov
cmp
push
fdivr
stos
push
loope
fsubrs
push
popw
fnstenv
pop
mov
sti
mov
in
sub
inc
push
sbb
inc
mov
cwtl
sub
subl
xchg
pop
mov
mov
mov
fnsave
test
in
lahf
pop
icebp
mov
rcrl
ja
insb
sbb
xorl
dec
fsubrl
test
lock
add
les
sarb
cli
adc
mov
lods
jbe
ja
xchg
sub
lock
cmpsb
cmp
cwtl
inc
jae
scas
roll
mov
test
cmp
daa
insl
mull
subb
imul
push
jbe
push
div
push
lret
or
inc
aaa
jbe
xor
cmp
xor
xchg
push
call
arpl
jo
and
dec
jne
int
nopl
cmp
push
add
out
or
xchg
clc
mov
inc
xor
jne
inc
subb
call
mov
loope
adc
inc
or
mov
mov
push
fldcw
int
lock
xchg
push
imul
addr16
movsb
xchg
gs
loop
xchg
mov
out
enter
int3
inc
pop
loopne
movl
cmpsb
loopne
cmp
cmp
outsb
dec
pop
loopne
or
das
jecxz
cmp
into
leave
pushf
cmp
test
and
fsubs
daa
int
ret
ror
mov
imul
jbe
pop
test
cmp
out
push
and
aas
mulps
aad
jmp
sbb
imul
mov
jo
adc
pusha
aad
pop
lea
mov
inc
scas
fnstcw
jns
leave
jg
loope
cmc
dec
and
mov
mov
sub
fmuls
lea
mov
lahf
and
sbb
sahf
or
pop
xorl
push
lcall
mov
test
aas
sahf
add
orl
inc
leave
loope
mov
out
inc
or
cmp
jmp
inc
mov
adc
xchg
push
sti
xchg
ss
cltd
jle
lock
cmc
lods
cmp
stos
clc
inc
or
or
add
imul
or
lock
inc
nop
popf
stc
rol
sub
pop
imul
insb
or
or
std
or
aad
data16
cmpsb
lds
gs
movsb
lea
cltd
jge
and
and
inc
push
adc
jl
sbb
rcll
mov
sarb
jne
adc
mov
cltd
xor
repz
xor
mov
push
mov
vpandn
test
lock
movsl
pop
fidivs
loopne
push
add
push
and
aaa
add
adc
sar
je
fnsave
in
rolb
or
mov
push
aad
sbb
add
dec
and
int3
add
xor
sub
xchg
int
cmpsl
pop
aam
xlat
lcall
ret
jge
mov
jmp
push
stos
or
adc
nop
xchg
or
js
dec
and
pop
das
or
mov
cmp
dec
pop
sub
inc
sahf
lods
inc
jge
lahf
ret
movsb
fdivrl
icebp
lods
inc
popa
shlb
stos
shrl
xchg
xor
sbb
ljmp
ret
imul
fnstsw
je
pop
fbstp
mov
pop
insb
cmpsb
aad
roll
lods
sub
and
or
sub
mov
insl
xchg
jge
hlt
mov
in
pop
jge
mov
jecxz
jne
push
mov
out
dec
in
push
cli
mov
or
lahf
xor
std
nop
sub
in
inc
or
sbb
cmp
outsl
jnp
movsb
cld
mov
bnd
sub
dec
or
pop
xlat
add
pop
adc
jbe
cmp
and
add
and
xchg
sub
push
data16
je
lods
xchg
fwait
pushf
mov
jecxz
mov
push
xchg
mov
pop
mov
mov
sub
aad
mov
pop
cmp
dec
sbb
jge
lea
push
sub
bound
mov
cmp
movsl
es
mov
loopne
fiaddl
movsl
pop
mov
mov
testl
sub
jge
xchg
jmp
add
jp
dec
mov
or
cmp
jbe,pt
fsubrl
pop
sub
inc
adc
mov
cmpsb
jne
int
lock
dec
push
out
fildll
push
aad
push
orb
icebp
or
jecxz
fsubrl
inc
fs
sbb
das
pop
cltd
cltd
xor
or
lock
sbbb
adc
or
push
xchg
pop
sub
pop
dec
movsb
in
inc
sbb
aam
adc
add
mov
fnstenv
fcoms
ficomps
mov
cltd
xor
pusha
dec
mov
add
add
inc
fs
lock
pop
xchg
mov
and
and
push
and
sahf
push
daa
sti
inc
ret
and
outsl
or
and
or
xchg
in
pop
test
mov
std
dec
push
repnz
inc
sbb
adc
push
add
aad
out
xchg
jbe
xchg
xchg
xor
mov
ret
mov
shrb
add
xor
mov
lret
inc
and
test
cld
adc
out
insl
mov
jns
cmp
cld
adc
scas
cwtl
rcrl
insb
inc
out
mov
shlb
iret
pop
repnz
xor
mov
fwait
xor
inc
and
pop
fbld
jnp
cld
push
loopne
daa
inc
mov
loope
or
lret
test
xor
in
inc
inc
pop
into
iret
ret
inc
xor
pop
outsl
sbb
lea
xchg
cmc
adc
stos
push
add
inc
pop
lock
mov
xor
pop
add
push
inc
hlt
xchg
xchg
in
jg
mov
jle
dec
cmp
jge
fxch
ficomps
ds
mov
popa
stc
shll
es
push
int3
jae
ret
movsl
sar
add
xor
imul
push
jp
pop
dec
jbe
enter
xchg
sub
int
xlat
dec
fsubrl
cld
les
xchg
mov
mov
pop
ret
aas
mov
or
ja
inc
sub
and
test
stc
jmp
sub
xchg
lahf
dec
or
out
adc
jmp
xor
push
call
mov
ss
stos
stos
in
test
jae
xlat
repnz
inc
adc
sub
in
int3
mov
mov
mov
popf
sbb
dec
pop
jle
cld
push
jo
mov
and
xchg
push
sub
add
or
mov
mov
jl
pop
mov
dec
dec
sbb
clc
cwtl
mul
mov
in
not
cmpsb
ret
adc
stos
sub
jl
adc
fdivl
jp
jge
cs
subb
dec
stos
and
pop
push
add
mov
mov
or
sbb
je
arpl
xchg
xchg
repnz
in
inc
sbb
inc
xchg
cmp
ret
popa
in
adcl
adc
push
mov
xchg
fildl
xchg
or
sbb
xchg
shrb
arpl
xchg
xchg
cmp
xchg
mov
imul
cmp
mov
shrb
in
xchg
add
sbb
mov
mov
push
or
xchg
daa
mov
repnz
cmp
repnz
andb
xlat
and
xchg
pop
push
sub
dec
add
cltd
add
sbb
decl
lods
sbbb
frstor
fwait
push
add
mov
lods
aaa
xchg
pop
shll
dec
push
sub
rclb
gs
mov
or
cli
or
cmpsl
cmp
dec
pop
sbb
fs
jp
shlb
stc
fisubl
test
shrb
jno
sahf
jl
scas
insb
outsl
jnp
inc
lods
jg
sub
loop
xchg
pop
cmp
mov
push
pop
push
movsl
outsl
adc
or
xor
int3
arpl
aam
lea
out
fisubrl
xchg
aam
adc
push
xchg
mov
pop
movsb
cmc
scas
mov
xor
xchg
subb
sub
pop
clc
inc
dec
shll
in
jl
inc
faddl
add
push
mov
mov
mov
popa
push
ljmp
inc
repz
add
bound
sti
xor
xor
push
push
test
pushf
clc
mov
insb
mov
or
xor
imul
push
push
stos
jno
push
jmp
cld
iret
jo
jp
fistpll
imul
mov
sbb
fwait
es
dec
mov
cltd
call
lcall
in
fsubrl
and
call
std
and
pusha
testl
xchg
or
lret
add
push
or
add
repnz
inc
mov
bound
mov
jmp
cmp
je
mov
sbb
aaa
arpl
inc
mov
repz
bound
outsl
push
sub
test
xor
test
popf
jle
jg
gs
sbb
icebp
js
fstl
mov
shll
inc
std
mov
sub
sbb
pop
repz
rcrl
sub
pop
mov
mov
sub
push
outsb
mov
mov
xor
push
cmp
cmc
inc
pop
sub
subb
dec
in
pop
xlat
testb
lret
sub
cld
inc
push
push
lahf
stc
aad
aaa
add
test
lods
jnp
dec
shll
ret
mov
aaa
jnp
pop
stos
xchg
je
inc
leave
mov
rcrl
stos
mov
lock
sub
or
pop
xor
sbb
xchg
mov
mov
js
jmp
push
out
adc
mov
sub
mov
out
xchg
xor
gs
sbb
push
or
mov
push
cmp
fs
mov
sub
arpl
jmp
out
push
pop
push
mov
in
jg
xchg
push
outsb
adc
cs
and
mul
cmpsb
ss
jne
dec
sub
sbb
stos
mov
xchg
pop
in
push
fcoms
shll
dec
ds
pop
negb
sbb
or
loopne
cmpsl
jecxz
in
insb
dec
dec
jle
cmp
daa
jo
sbb
inc
dec
scas
and
and
mov
cmpsb
outsl
xchg
xor
mov
pop
out
rorb
adc
mov
hlt
push
xchg
inc
mov
or
sub
lahf
loopne
jmp
ret
popa
mov
ljmp
pop
jmp
add
add
rcl
pop
int3
mov
or
rorl
subb
cmpsb
arpl
dec
mov
aad
ss
addr16
scas
pop
mov
fsts
inc
mov
cli
shlb
cli
xor
pop
adc
pop
xchg
pcmpgtd
xchg
mov
lods
cmc
inc
shll
mov
les
movsb
int
imul
fwait
pop
push
inc
jg
mov
rcrb
or
xor
cli
xorl
scas
in
fcoms
mov
rolb
pop
sahf
enter
lret
gs
sub
fisubrl
cmp
xor
mov
and
pop
push
push
pop
cmp
jmp
mov
jb
movsb
dec
mov
push
ds
cmp
adc
inc
popf
jecxz
dec
in
mov
insb
mov
push
dec
dec
test
lock
lret
dec
stos
xchg
sub
out
scas
sbb
filds
les
fstpt
jb
mov
enter
mov
jg
fisubl
movsb
mov
adc
aam
rcrl
stos
pop
mov
test
mov
std
push
xor
cmp
add
lock
ret
and
sub
sub
jno
add
jb
push
lods
inc
push
adc
mov
ja
dec
pop
pop
movsl
insl
sbb
or
and
push
cmp
sub
adc
dec
pop
insl
mov
jge
push
dec
mov
jb
fs
aas
stos
pushf
sar
and
enter
cmp
pop
xchg
arpl
adc
loope
fidivrl
fcmovnu
push
push
push
xor
movsb
cli
jno
mov
mov
test
sbb
mov
fs
inc
ficompl
push
or
mov
xchg
or
inc
lcall
inc
movsl
lret
sbb
bound
sbb
filds
scas
bound
push
mov
lcall
adc
leave
or
push
popa
arpl
sbb
and
mov
mov
icebp
mov
loop
and
popa
cli
fsubrl
sub
out
movsl
cmp
mov
add
jbe
lock
popa
or
mov
rclb
in
xor
mov
adc
insb
daa
and
fcmovnu
scas
mov
sub
aaa
cmpb
mov
mov
stc
idivb
mov
xor
inc
mov
sar
into
inc
scas
jbe
xchg
test
and
enter
out
pop
in
inc
notb
scas
scas
loope
icebp
outsl
outsl
rcll
movl
inc
sbb
jmp
xorb
call
enter
daa
aam
mov
pop
pop
test
mov
sbb
pop
adc
cmp
cmp
lret
cmc
subl
pop
mov
push
and
jo
cmpsb
inc
inc
xlat
out
inc
int3
and
ds
daa
pop
push
inc
dec
iret
js
jl
push
test
jbe
popf
xchg
or
fdivrl
pop
test
incb
cmpsb
jecxz
xchg
xchg
int
mov
sbb
xor
and
cmc
nop
pop
repz
sahf
rolb
dec
sub
adc
sbbl
out
xorb
jbe
xchg
das
aad
sub
insl
cmpsb
orb
sbb
add
imul
cli
dec
insl
mov
and
out
inc
inc
popa
dec
jae
sbb
out
movsl
fs
fdivrs
jns
stc
sbbb
cmpl
xor
mov
pushf
dec
inc
movsl
hlt
sbb
lret
inc
stos
fldlg2
ret
sbb
popf
dec
int
or
push
lea
insl
andb
adc
push
or
xchg
and
fisubrl
jno
cld
ret
mov
pop
jmp
orb
dec
mov
lret
mov
mov
or
fmuls
cmp
inc
adc
ret
jg
jp
or
add
inc
fdivr
mov
cmp
add
ficomps
nop
or
imul
mov
pop
movsb
cmp
mov
loopne
in
fisubrs
lahf
lods
sub
push
jo
sbb
leavew
push
ds
jo
push
ljmp
rolb
pusha
imull
inc
jle
call
xchg
out
arpl
cmpsl
cld
push
std
xchg
xor
ss
lret
or
orl
sub
test
jecxz
outsl
lcall
repnz
je
adc
inc
inc
cltd
and
in
xchg
pop
push
jnp
insb
insl
adc
jp
outsb
stos
jge
js
add
imul
faddl
dec
loopne
lods
mov
xor
and
adc
mov
push
sub
dec
fnsave
pop
rol
adc
arpl
call
iret
lods
cmp
pop
insl
int
jp,pn
adc
push
mov
cmpsb
cmp
sahf
cmp
int
sbb
dec
add
in
lock
cmp
insl
add
add
mov
popa
sub
or
cmp
idivl
sub
push
aaa
dec
fistpl
push
popl
or
pop
jecxz
inc
adc
inc
lret
adc
push
xchg
je
dec
pop
jp
lahf
push
push
adc
xor
or
out
mov
xchg
addl
sbb
lret
fs
xchg
cwtl
mov
xchg
push
xchg
push
negl
and
sbb
mov
cltd
mov
push
movsl
and
or
push
out
fiadds
xchg
jbe
jne
pop
xchg
idivl
push
scas
jne
mov
push
pushf
ror
add
jge
push
and
sbb
xor
push
loopne
xchg
lcall
sti
imul
jg
dec
mov
push
dec
loop
add
xchg
add
or
lcall
in
xor
in
push
pop
test
ja
mov
std
jle
mov
or
or
jae
sub
mov
jle
mov
add
inc
xlat
xchg
faddl
inc
cmp
fbstp
sbb
daa
pop
outsb
adc
push
xor
or
cmp
lret
icebp
sti
jae
dec
dec
shrl
dec
xchg
sbb
mov
daa
decb
jae
mov
inc
push
nop
test
popl
stc
fwait
mov
jmp
xchg
testl
pop
jb
sub
rcr
fwait
jg
xchg
cmpb
cmp
adc
aaa
push
mov
arpl
ljmp
pushf
scas
sub
fisubrl
sub
fstp
add
in
push
je
movsb
mov
lret
cmp
test
dec
adc
lcall
xor
pushf
fs
stc
loopne
std
or
mov
xchg
add
and
pop
ds
mov
add
adc
pop
mov
std
cs
adc
popa
inc
sar
jp
fimuls
lcall
sbb
out
sbb
or
ja
and
adc
mov
dec
xlat
mov
xchg
xor
ret
flds
notl
mov
and
pop
pop
mov
mov
lock
fistpl
mov
lcall
jle
cmp
mov
jg
inc
pushf
add
mov
rorl
or
push
inc
adc
sbb
fisubrl
inc
test
mov
xchg
lcall
xchg
in
test
int
repnz
dec
cwtl
lods
add
push
sbb
jecxz
shll
repnz
pushf
outsb
dec
mov
dec
push
inc
fadds
mov
rcrb
test
lods
xchg
push
cmc
pop
add
mov
movsb
les
or
lea
addl
push
and
outsl
or
ljmp
jg
testl
cmp
lret
and
pusha
imul
in
cmp
xchg
inc
dec
inc
dec
in
mov
xchg
outsb
mov
ret
cmc
fdivrp
inc
mov
sahf
push
insl
xchg
rcll
pop
movsb
xor
jnp
fcmovnu
out
mov
xchg
pop
movsb
xchg
icebp
outsb
sarb
in
or
dec
fcom
mov
das
mov
push
cli
pop
sub
shrl
mov
in
iret
les
cmp
in
lret
call
in
dec
mov
test
repz
adc
push
jne
loope
mov
xor
mov
mov
mov
xchg
andb
cli
ds
repnz
stos
dec
mov
and
shrl
mov
leave
xchg
outsl
pop
pop
cmp
pop
inc
cld
push
mov
dec
mov
jne
aad
fmull
hlt
jge
dec
xchg
mov
in
adc
lret
inc
sbb
cmp
add
xchg
jle
cli
mov
lea
fists
std
ds
jg
leave
mov
ja
mov
mov
mov
scas
inc
fsts
or
push
dec
mov
les
clc
inc
std
push
fcompp
loopne
inc
push
aas
in
or
lahf
add
and
out
cmp
mov
loop
test
fs
in
mov
mov
imul
adc
or
adcl
je
mov
dec
jae
xchg
mov
fs
int
nop
je
lods
data16
test
pop
xchg
jmp
mov
clc
pop
xchg
lcall
rcll
fcmovnu
sub
adc
pop
fldcw
cli
popa
cmpl
dec
jnp
test
js
xor
aad
cmp
jp
dec
rolb
pushf
js
xchg
and
push
xor
fs
xorl
rcrl
cmp
leave
out
shll
imul
in
inc
mov
mov
jle
sarb
mov
aas
inc
jbe
out
inc
lcall
shlb
movsb
mov
and
push
push
int3
ds
andl
scas
cs
js
call
stos
andl
popf
dec
xor
popf
add
in
loop
inc
sti
mov
jno,pt
lock
js
sub
cmp
or
aas
lds
leave
mov
xchg
outsb
push
xchg
enter
js
push
mov
shl
imul
je
nop
sub
pop
pusha
sub
lds
popf
pop
dec
mov
cmp
scas
xchg
pop
cs
aaa
jbe
sahf
xchg
add
push
or
stos
ja
stos
mov
stos
test
and
loop
jo
fcomps
mov
shr
daa
outsl
hlt
aaa
pop
ds
pop
mov
pop
pop
or
aad
jb
mov
jo
sub
rcr
or
xor
xchg
es
sbb
push
cmpsb
lods
out
mov
xor
in
or
nop
and
push
insb
inc
pop
mov
or
es
jno
inc
cli
mov
aaa
mov
and
shll
cs
lea
jp
mov
and
cltd
push
mov
imul
lret
pop
insl
lcall
into
cld
xchg
push
dec
std
xor
cmpsb
pushf
sbb
mov
cmp
aad
shll
cmp
mov
orl
repnz
mov
stos
mov
jge
pop
loopne
xor
cmpl
out
sbb
loopne
jg
xor
mov
aam
fcomps
in
sbb
pop
fildll
es
les
pop
mulb
imul
les
jmp
sarb
or
stos
popa
stos
jmp
push
stos
dec
mov
adc
fsubl
mov
mov
dec
mov
out
jns
or
cwtl
inc
addb
es
int
add
lods
pusha
and
mov
aam
inc
mov
add
inc
pusha
pop
imul
cmp
cmp
xor
add
cmp
jae
shl
imul
fidivl
jmp
push
adc
push
inc
adc
ss
gs
dec
jne
jle
andb
or
lret
mov
leave
ret
pop
cmpsl
hlt
mov
ja
test
adc
jae
pop
test
xchg
sub
mov
ret
lods
add
test
sub
mov
testb
pop
repnz
jno
mov
addb
sbb
xorl
jns
js
insl
inc
add
leave
mov
and
sbb
pop
sbb
pop
push
mov
arpl
andl
jo
xor
ret
cmp
fcomps
ljmp
push
fcmovb
or
push
test
adc
and
movsb
jecxz
and
lret
in
call
sub
dec
outsl
mov
leave
push
out
push
adc
lock
pop
sbb
cmp
mov
lahf
cmp
repnz
mov
adc
adc
xor
xchg
cmp
mov
sub
fdivl
sbb
add
orb
pusha
adc
jns
mov
adc
cltd
out
inc
cmp
pusha
scas
ljmp
mov
adc
pushf
xlat
lret
mov
jae
pop
mov
pop
out
cwtl
xor
insb
in
std
sbb
mov
sbb
add
clc
push
mov
mov
lock
xor
sub
enter
popa
xor
mov
xchg
test
push
inc
imul
xchg
add
insb
lods
out
mov
sbb
or
and
fcoms
insl
push
add
out
call
sbb
and
cmp
xchg
xor
decl
mov
mov
sub
inc
flds
fs
mov
arpl
push
in
sbb
fnstcw
sub
cli
or
stc
dec
loopne
push
leave
push
loopne
ljmp
int3
or
bound
lcall
cld
mov
adc
xor
cmc
adc
push
inc
lock
adc
lds
xchg
insb
outsb
sbb
shlb
mov
out
adc
repnz
aas
mov
mov
outsl
in
loope
dec
mov
mov
pop
stos
fmul
or
fists
push
jecxz
or
push
pushf
and
adc
or
in
mov
jg
bound
cmp
inc
cld
jg
or
out
jmp
cli
in
les
leave
fnstcw
or
cs
mov
cwtl
int3
add
mov
sbb
xlat
mov
fcmovb
scas
ror
fldl
lods
daa
lcall
or
xor
outsb
mov
aaa
and
mov
aaa
xchg
push
dec
ljmp
outsl
pop
pop
adc
push
pop
out
xchg
jns
xor
adc
push
into
gs
xor
jae
and
push
js
aad
fnstcw
test
in
push
popf
lret
mov
mov
xlat
xchg
mov
push
jge
dec
sub
int
dec
push
out
cmp
mov
stc
fmuls
add
fistpll
xor
push
enter
mov
xchg
jle
mov
push
loope
fistpll
enter
ret
and
rep
mov
dec
and
imul
mov
test
mov
mov
or
bound
sub
std
push
movb
push
xchg
inc
fadd
test
cli
rol
push
xchg
push
js
dec
or
cmc
adc
jno
mov
lcall
daa
pop
inc
repz
jge
scas
push
xchg
sahf
pushf
xor
movsb
leave
pusha
sarb
loop
popa
dec
daa
push
addb
xorb
or
ss
sub
adc
lahf
les
sub
mov
pop
aas
in
test
push
or
mov
popa
and
dec
in
std
mov
push
or
js
enter
inc
sbb
jae
ljmp
mov
mov
xor
xor
outsl
cmp
sbb
push
inc
xchg
push
mov
cli
mov
iret
sub
and
out
sbb
sbb
lods
mov
in
add
dec
push
cmc
and
repz
xchg
pop
adcb
cmp
pusha
push
loop
inc
sbb
jo
in
mov
roll
mov
mov
inc
and
jge
out
jbe
xor
or
dec
in
popa
add
loope
sbb
mov
mov
add
mov
pop
and
loope
scas
aas
movsl
xor
mov
mulb
mov
fcmovnu
push
jo
inc
daa
xor
mov
lcall
push
cs
jno
js,pn
fnstsw
adc
call
lahf
sub
jbe
sub
mov
cmp
or
lcall
inc
in
push
popf
xor
pop
repnz
movsl
jl
dec
rorl
and
adc
xchg
outsl
icebp
clc
push
dec
mov
arpl
in
rcrl
lret
sub
push
jp
mov
adc
inc
push
and
aas
dec
push
push
out
iret
xchg
test
arpl
fcomip
rorl
push
mov
fidivs
aam
add
pop
dec
icebp
lods
push
icebp
xor
pop
pop
out
mov
sbb
mov
sub
nop
and
pop
inc
lods
andl
daa
adc
jnp
repz
mov
andl
scas
push
or
xchg
das
xor
sbb
sti
sbb
xchg
cltd
cmp
ficompl
pop
mov
adc
push
fistpll
xchg
cwtl
mov
pop
mov
rcrb
xchg
gs
xchg
lcall
fcoms
pop
and
jl
pop
adc
mov
aaa
add
push
popf
pusha
xchg
xchg
xchg
call
cmpsl
in
mov
gs
or
rclb
fidivs
stos
je
fdivrl
cld
xchg
sub
xchg
sub
mov
pop
xchg
outsl
incl
mov
lds
push
fcoml
mov
and
and
aad
cli
inc
sub
in
rcrl
inc
mov
jg
dec
insb
adc
cmp
lock
fs
loope
mov
mov
cmp
daa
jnp
adc
adcb
ds
aad
arpl
pop
loope
push
sbb
es
mov
mov
cld
xchg
cmp
mov
cmp
jp
fldz
addr16
xchg
mov
push
mov
xlat
mov
mov
xchg
or
dec
push
in
aas
shld
test
inc
xorb
test
decl
mov
fcmovnu
sbb
sti
xchg
insl
scas
lret
ret
aas
sbb
rcrl
lcall
loope
dec
std
mov
jg
sbb
pop
ja
jnp
in
push
out
out
mov
loope
mov
out
pop
movsl
add
imulb
inc
or
lret
cmp
lcall
jmp
sub
xor
sub
lcall
in
test
test
ja
xor
stos
adc
sbb
adc
shlb
mov
cmpsb
inc
cli
jecxz
in
inc
pop
mov
push
add
aad
mov
inc
xlat
out
fdiv
mov
movsl
stc
mov
ljmp
ret
and
les
mov
fsubs
movsb
call
out
inc
sahf
xor
and
fld
stos
mov
ss
inc
xor
xor
stos
inc
call
or
int
and
cmp
sub
pop
out
rcl
ret
jo
mov
shrl
dec
sub
jl
lock
and
out
shrl
xchg
aas
inc
xlat
outsb
xor
pushf
xor
mov
sbb
sub
pop
pop
clc
sub
mov
mov
sbb
movsb
pop
mov
shrl
mov
mov
aaa
aas
jecxz
scas
and
rclb
mov
aas
jge
push
popf
push
ret
mov
push
mov
rcr
mov
cmp
pushf
xor
cld
pusha
divl
pop
outsb
add
subl
xchg
shr
mov
dec
insb
add
adc
iret
mov
in
add
xor
adc
xchg
lds
mov
lret
lods
std
xchg
loopne
or
icebp
adc
inc
cmp
gs
fs
xchg
mov
cmpl
stc
pushl
jnp
and
cltd
sti
into
lahf
add
pop
lock
ja
lea
stos
xchg
xchg
test
test
dec
and
mov
leave
push
cmp
cmp
and
sbb
cmp
mov
std
xchg
mov
mov
fstpl
sbb
outsl
push
jo
mov
cmpsb
les
icebp
mov
jno
and
inc
xor
add
mov
sub
dec
mov
orl
pop
scas
aam
add
jle
movsl
cmp
lahf
and
jmp
sbb
popf
push
lock
mov
enter
mov
sarl
dec
fisttps
test
shrb
rcrl
xchg
sub
or
dec
jl
hlt
mov
cmp
lret
mov
sbb
inc
xlat
hlt
cmp
pop
testb
sub
fcmovnb
pop
or
mov
inc
xchg
pop
ficompl
mov
pop
mov
inc
lea
or
std
adc
inc
xchg
ljmp
push
jo
mov
xor
inc
xchg
enter
sbbl
mov
movsb
cmp
mov
fildll
push
push
popf
mov
les
insb
cvtps2pd
mov
mov
mov
fsubrp
orl
push
cmp
inc
xchg
xchg
sub
maxps
pop
mov
inc
xchg
les
loopne
sbb
ljmp
bound
pop
jns
sub
mov
test
lret
add
ljmp
push
inc
and
test
lret
jmp
lret
and
pop
jo
and
mov
in
push
adc
mov
insl
fsubs
aas
hlt
and
add
movsl
cmp
pushf
xor
es
xor
xchg
sub
add
popa
add
movsl
cmp
adc
inc
lds
mov
shrb
movb
add
inc
movb
not
push
jmp
and
mov
dec
int
mov
or
sahf
xor
out
shlb
xor
sub
sub
pop
mov
lods
inc
cld
cmp
mov
xor
pop
rclb
hlt
iret
push
out
and
test
sub
enter
iret
xor
std
sub
jle
sub
rcrl
jae
sti
iret
xchg
sub
outsl
popa
shl
jle
mov
mov
adc
mov
loopne
rcll
sbbb
add
stos
xor
clc
fs
nop
daa
jmp
inc
sbb
je
enter
fsubrs
imull
and
rep
add
enter
daa
popa
push
movsl
xchg
icebp
mov
and
push
in
mov
out
test
arpl
mov
xchg
cmpsl
sub
movsl
xchg
cli
xchg
das
mov
jne
clc
and
xchg
cmc
or
vcvtss2sd
es
pop
icebp
mov
xor
daa
fwait
cmp
leave
imulb
daa
pop
stc
testl
jmp
jbe
loopne
das
test
adcb
dec
out
jle
in
test
in
repnz
add
xor
add
sbb
pop
out
insl
or
mov
rclb
leave
pusha
and
or
and
out
sub
in
jl
lahf
sub
testl
adc
mov
out
sarl
repz
dec
out
xchg
sub
pop
sarb
hlt
aam
scas
or
dec
loop
mov
cmp
sub
or
sbb
adc
push
mov
push
jmp
lods
xor
jae
fs
scas
xchg
into
sti
lods
inc
xor
xchg
sub
push
mov
test
rclb
repnz
mov
jne
clc
loop
loope,pn
mov
dec
inc
xlat
xorb
dec
imul
out
add
cmovs
inc
movsb
insb
add
fstl
and
adc
call
sub
jae
or
adc
inc
mov
cld
xchg
or
sub
outsl
push
dec
mov
sbb
jle
fdivl
mov
xor
add
xor
cltd
sbb
lret
lret
sti
push
push
jmp
push
lcall
add
xchg
lea
inc
xlat
ret
iret
add
std
pop
push
out
push
and
shrb
ret
push
nop
push
adc
in
test
push
aas
out
test
jecxz
push
mov
int
add
pop
cmc
sbb
dec
mov
testb
adc
stos
inc
ret
test
repnz
jbe
sub
shll
je
cmp
ds
xor
xchg
sub
mov
cmpl
xor
or
push
out
add
jno
jge
mov
test
jbe
add
test
push
decb
lahf
sub
pop
test
int3
push
movsl
stc
mov
popf
xor
cld
adcb
insb
mov
mov
jmp
cmpsb
mov
ds
pop
and
inc
shl
ja
mov
out
int
stc
adc
out
xchg
nop
ds
imul
mov
fstl
punpcklbw
popa
pop
mov
lock
int3
cli
xchg
cli
pop
mov
jecxz
dec
lods
cltd
mov
insl
xchg
xor
adc
adcl
ja
movsb
testb
testl
jnp
pop
icebp
inc
pushf
push
lods
leave
data16
xchg
xchg
out
stc
sbb
cli
xchg
jbe
das
cmp
cmc
mov
stos
mov
cltd
jne
adc
pop
into
gs
and
mov
or
scas
gs
xchg
bound
xchg
mov
add
imul
pop
out
in
sarl
movsb
push
sbb
mov
mov
fiaddl
jbe
shll
in
mov
mov
adc
inc
and
xchg
cs
pop
into
push
insl
xor
xchg
insb
add
cltd
imul
hlt
enter
xor
pop
lods
fiadds
aas
loop
sbb
or
push
jmp
dec
shrb
cmp
and
fidivrs
add
push
xchg
fnsave
sgdtl
stos
pusha
push
out
pop
sub
ja
int
pop
xor
fisttpl
sub
sub
insl
insb
arpl
inc
cs
xchg
mov
jne
test
xchg
dec
ret
fwait
xchg
or
lcall
jp
dec
sarl
push
mov
mov
inc
loop
popa
jge
lcall
sbbb
out
xor
rcrb
dec
insb
sti
cs
xchg
shrb
pop
rorl
ds
jp
rclb
add
es
push
jae
push
mov
outsl
push
js
stos
popa
sahf
inc
rorb
jp
gs
inc
fcoml
cli
mov
adc
mov
and
dec
jne
jae
push
cmp
popl
mov
dec
sub
pushf
insl
aam
dec
push
pop
rcrb
sbb
fcoms
add
mov
mov
xchg
mov
push
or
mov
xor
out
and
and
jmp
cmpsb
xor
repz
imul
lds
roll
and
daa
xor
nop
mov
cmp
xchg
sub
arpl
shlb
loope
rol
add
leave
push
jg
fwait
leave
in
xchg
inc
mov
lea
sub
lock
test
mov
out
mov
mov
fstp
lahf
jae
fsts
or
lret
int3
lret
loope
adcb
leave
into
cmp
mul
jns
pop
push
mov
mov
clc
or
out
sub
lea
jae
or
jecxz,pt
cmpsl
jb
jmp
lods
sub
das
inc
into
jb
lret
xchg
push
test
xor
bound
sbb
or
imul
faddp
fimull
xlat
dec
mov
sbb
dec
cmpsb
faddl
cmp
cmpsb
lahf
xchg
daa
inc
jmp
xchg
insb
shll
and
push
jle
sub
sahf
fs
xchg
dec
out
mov
sub
mov
xchg
sub
lods
sub
or
and
jg
test
sbbb
outsb
push
cwtl
subl
push
adc
and
push
jne
in
inc
sub
mov
mov
imulb
sub
jns
mov
in
mov
xchg
add
test
outsb
sahf
roll
lcall
xchg
mov
mov
jns
xchg
cwtl
das
in
xchg
rcr
jb
ffreep
push
loopne
aam
ret
hlt
clc
addr16
pop
jmp
mov
and
in
pop
addl
xchg
sbb
push
mov
popf
das
stos
push
test
ret
adc
stos
mov
xchg
sub
xchg
pop
syscall
repz
mov
ljmp
sbb
popa
movb
push
jmp
loopne
xor
adc
push
scas
xchg
push
or
mov
data16
and
xchg
jns
jns
lock
xor
fsubs
lods
pop
movsb
sub
cmpsl
outsl
jecxz
addr16
scas
cmpsl
test
xor
mov
xor
inc
fs
stc
popa
sub
aas
jae
mov
pop
sahf
movsl
mull
loope
mov
in
shlb
xlat
scas
mov
movb
fcmovne
lcall
sbb
popf
dec
sbb
mov
in
cltd
jecxz
popa
stos
lahf
or
rcrb
adc
aad
out
xor
add
mov
jb
lret
fadds
push
int
push
adc
imul
lcall
jnp
mov
dec
cmp
shll
in
sbb
mov
hlt
repz
int3
movsl
daa
mov
and
xchg
mov
jbe
fs
cmc
jae
andb
lea
test
jg
insb
mov
and
inc
sahf
inc
gs
shlb
mov
xor
js
addb
and
cmpsl
xchg
insl
pop
ss
mov
js
out
stc
data16
sub
xlat
imul
add
lock
testb
jno
cmp
sub
and
adc
push
xchg
fldl
out
jno
fdivrl
aas
int3
mov
xchg
xor
fisttpl
jbe
mov
lret
ret
mov
loope
smsw
les
pop
gs
cmpl
mov
clc
xchg
shrl
lahf
call
movsl
jp
inc
mov
mov
outsb
mov
lret
mulb
jecxz
push
mov
flds
ja
decl
mov
cmp
in
cmp
je
push
in
xor
xchg
loope
or
aaa
fcmovnbe
das
out
sbb
ss
pusha
lock
adc
mov
jmp
add
dec
mov
aaa
repnz
sub
inc
jbe
push
jecxz
cmp
mov
mov
push
shrb
xchg
mov
stos
jae
sti
jmp
imul
cltd
inc
int
addr16
rcrb
in
pop
repnz
mov
repz
xchg
adc
sub
or
xchg
pop
cmpsl
in
outsb
ror
jecxz
mov
syscall
push
lods
test
xchg
js
jg
push
inc
mov
mov
dec
mov
aam
popf
jmp
fdivs
out
jecxz
inc
stos
inc
mov
push
outsl
pop
mulb
les
shlb
sarl
mov
fistl
divl
iret
popf
test
es
xchg
lea
adc
addr16
sub
push
mov
mov
dec
mov
jecxz
push
mov
shll
cwtl
inc
xlat
test
pop
gs
adc
push
js
and
pusha
ret
cmp
test
into
or
cmp
aam
fwait
sub
adcb
push
mov
insl
adcl
cmp
sarl
mov
adc
je
pushf
xchg
inc
daa
aam
movsl
inc
addr16
pop
ljmp
popa
xchg
sbb
push
jmp
jp
inc
mov
out
inc
xchg
stos
lods
pop
idiv
out
insb
mov
pushf
mov
sub
jge
push
int3
or
aas
adc
mov
and
dec
inc
js
jbe
inc
mov
insl
je
fnsave
sub
push
jb
cmp
fs
mov
cmpsl
sub
addr16
cmp
jo
or
push
mov
dec
mov
fwait
mov
xchg
nop
out
push
cmpsl
sub
dec
in
and
xchg
into
cmpb
fbstp
call
mov
sti
rcrl
rclb
jg
cmpb
inc
mov
fstpl
stos
lods
xchg
mov
icebp
test
and
fistpll
popf
mov
cmp
scas
fs
shl
inc
stos
aad
icebp
loope
dec
loopne
add
imulb
out
or
mov
sub
pop
iret
add
ds
xchg
cmc
and
or
insb
popa
addr16
add
jle
jne
push
lea
scas
outsl
outsb
pushf
cmp
pop
and
imul
js
and
out
xor
adc
xchg
push
lcall
jge
mov
ret
loope
dec
shrb
sub
das
inc
ds
jl
push
pusha
xchg
lret
push
push
sub
sub
sti
enter
movsl
adc
fildll
ljmp
ljmp
push
push
xor
mov
lcall
fs
pop
leave
test
mov
jb
or
ljmp
scas
popa
fstpl
xchg
mov
mov
popf
shlb
push
mov
jbe
mov
out
dec
mov
xchg
scas
dec
rcll
shrl
xchg
call
les
ja
mov
mov
in
int
or
xor
mov
sbb
js
add
xor
lea
testb
aaa
cmpsl
cmp
add
std
nop
shlb
ret
mov
hlt
or
cs
jp
cmp
xor
fmulp
subb
rclb
out
xor
cmp
fbld
mov
mov
out
or
jge
or
pop
ret
dec
dec
movsl
repnz
and
cmp
or
notl
xor
mov
cmp
test
add
movsb
push
push
mov
shlb
out
sarl
add
mov
mov
cmp
or
in
loope
xchg
inc
mov
fisubrs
rcrb
cwtl
xor
cmp
add
mov
fmuls
popl
fistl
mov
cltd
cltd
cmp
sub
mov
cmpsl
jmp
mov
imul
je
fistps
dec
out
inc
loopne
push
insb
sub
push
pop
add
mov
adc
or
and
in
lret
push
in
jg
or
pop
add
ljmp
lock
mov
cmc
mov
clc
xor
jae
les
dec
shrb
aaa
lock
mov
or
addl
int3
fs
vpsrad
pop
lods
cld
das
adc
insl
inc
xchg
repnz
push
arpl
dec
mov
into
push
push
test
mov
pop
adc
xchg
pop
push
out
adc
fadds
adc
cmpsl
push
sub
in
popf
mov
or
popf
xchg
push
add
jo
dec
mov
push
xchg
sbb
jo
pop
lea
sbb
add
mov
push
xchg
adc
ss
test
pop
cmp
scas
data16
rcrl
cltd
xchg
in
repz
enter
leave
repnz
mov
dec
mov
sbb
pop
out
push
cmp
out
mov
cs
pusha
dec
jp
pop
xor
cld
jae
jge
dec
and
fistps
lret
jae
std
push
mov
dec
sbb
xchg
jl
out
enter
cltd
das
lcall
sbb
pushl
clc
dec
cli
xchg
bound
mov
mov
ficoml
push
rclb
adc
xchg
mov
inc
mov
push
push
arpl
or
mov
or
insl
in
inc
sub
mov
push
push
adc
xor
push
pop
pop
add
nop
and
mov
test
lret
ficomps
lock
out
jecxz
sbb
cmp
sarl
mov
and
fdivl
jns
adc
fistpll
stc
pop
mov
ficoml
aaa
aad
lea
je
or
pop
dec
movsl
hlt
sub
popa
ret
jno
pop
mov
ret
int
loope
int
jmp
jecxz
pop
or
fcoms
cli
sbb
pop
inc
lds
popf
ret
inc
mov
xor
iret
pop
ret
arpl
add
call
cmpsb
repnz
pop
jg
mov
mov
push
sbb
scas
cmp
icebp
mov
pop
fstl
push
mov
lea
fdivrs
mov
jge
sub
nop
das
jb
cwtl
or
mov
sbbl
adc
rorl
push
sub
pushf
push
lahf
test
pop
sti
push
test
pop
jge
insl
mov
rcrl
dec
loop
out
pop
push
int3
jo
or
shlb
aad
aad
mov
movsl
sub
or
outsl
and
cmp
pop
cmc
pop
jo
sub
jge
xchg
cmp
fsubrl
nop
imul
je
push
add
inc
lds
sub
sbb
jbe
pop
push
add
mov
mov
roll
xchg
lea
aaa
cmc
std
js
mov
or
jp
adc
cmpsb
dec
aas
adc
push
mov
je
pop
shlb
inc
int3
xor
aad
jecxz
dec
cmpsl
sbb
pusha
jmp
or
fldenvs
jb
cld
dec
sarb
outsl
test
sarl
and
jle
lods
inc
lock
xchg
pop
sbb
lahf
mov
mov
mov
sub
popa
cli
lods
push
jg
xchg
jmp
add
or
sbb
add
and
jbe
dec
in
or
jge
push
or
mov
pop
inc
sbb
push
stos
pop
xchg
mov
lea
cmp
icebp
cmpsb
ds
mov
add
lret
lret
mov
xor
stos
cmc
xor
mov
into
push
push
or
ss
xorl
pop
and
mov
xlat
bound
xchg
inc
xchg
xchg
arpl
jne
iret
cmp
add
adc
or
cmp
lret
fwait
in
sbb
sbb
data16
lds
loope
sti
and
mov
scas
add
dec
inc
js
jmp
cmp
fisttpll
insl
jnp
push
xchg
std
pop
cltd
mov
aas
inc
or
imul
xor
fwait
mov
out
push
jp
mov
leave
xor
mov
dec
jns
push
pop
inc
lods
inc
jno
bound
xchg
jo
push
mov
ret
sbb
pop
or
test
lea
xor
imul
mov
fistl
sbb
xchg
xor
adc
loopne
add
es
mov
repnz
mov
shlb
movl
and
mov
rcrb
pavgw
pop
ror
mov
sbbb
sub
lds
popl
ljmp
ds
out
dec
jecxz
lret
out
aas
and
cmpb
mov
movsb
lcall
idivl
enter
or
shr
lret
rep
popf
loope
scas
inc
cmpps
das
out
xor
aam
add
dec
negb
cltd
inc
icebp
pop
mov
push
push
cmpsl
dec
in
clc
outsb
cs
jnp
leave
imul
inc
mov
pop
and
pop
iret
pusha
mov
mov
sub
test
pushl
ljmp
and
push
mov
sti
mov
mov
mov
decl
sti
pop
xor
adc
cmp
pop
mov
add
addr16
mov
push
and
inc
test
xchg
sub
push
int
xchg
xor
stos
imul
pop
rorb
adc
jle
out
pop
out
test
lea
fisttpl
pop
jge
gs
in
daa
arpl
pop
sub
cmp
call
xor
adc
ljmp
lret
jnp
xor
les
mov
aam
jp
push
sahf
call
or
loop
mov
insl
push
sbb
mov
cmp
adc
push
das
sbb
repnz
popa
loop
out
mov
loopne
mov
lock
iret
ret
mov
test
cmp
or
fs
cld
mov
unpcklps
cmpsl
shlb
enter
rclb
in
sarl
xchg
mov
and
aad
std
scas
popa
addr16
iret
xchg
sahf
xor
mov
sub
dec
lea
or
data16
xchg
scas
inc
mov
jno
jg
push
inc
insl
add
aas
lods
lods
pop
iret
inc
popf
in
push
mov
test
lret
rol
inc
int
loopne
add
fsubrl
ret
add
add
mov
hlt
sub
adc
push
jge
push
jo
lods
outsl
cmp
mov
mov
mov
or
lret
add
aam
div
mov
or
cmpsb
dec
dec
aad
in
sub
cli
out
es
mov
jmp
inc
icebp
jns
int3
gs
sub
pop
sbb
dec
pusha
nop
inc
fsubrl
dec
jae
imul
dec
movsb
and
mov
in
dec
rorb
stos
push
int
fiaddl
add
sbb
out
and
fwait
sub
int3
shr
out
nop
jnp
ret
mov
addr16
dec
ficoms
les
cmp
je
daa
test
push
jno
dec
shl
test
jecxz
incb
cmc
daa
and
jge
push
rolb
add
add
xchg
push
dec
push
mov
push
push
clc
xor
rolb
fidivs
inc
stos
pop
pop
cltd
xchg
xchg
pop
cmc
ret
pop
and
sub
lods
lock
pusha
mov
push
mov
jo
push
jno
xchg
inc
inc
pop
shll
jecxz
xor
xchg
xchg
xor
fucom
dec
sbb
test
jp
movd
xor
out
icebp
ss
mov
cmpsb
adc
fsubs
jg
orl
cmp
rorl
pop
lock
loop,pn
cltd
cmpsb
pusha
pushl
or
lods
mov
push
push
inc
cld
xor
jne
xor
inc
xchg
add
and
es
popa
xlat
dec
aas
adc
mov
insl
push
mov
push
pop
push
pushf
mov
cltd
xor
stos
gs
mov
shlb
jg
jo
adc
nop
test
cmp
xchg
dec
ja
xchg
push
sub
pop
stos
mov
lock
int3
mov
and
pushf
nop
fstps
dec
dec
into
jp
add
cmp
and
inc
pop
adc
jg
push
sbbl
jmp
insl
lret
or
pop
rolb
jecxz
xchg
rcr
in
jmp
add
aad
aas
and
cli
cmpl
lds
out
repnz
pop
stc
mov
lock
ret
and
rcrb
add
mov
jmp
iret
mov
std
sub
cmp
rorl
out
filds
test
scas
jg
das
enter
scas
test
mov
outsb
add
std
push
jae
aad
shrb
dec
shll
in
jp
ss
insl
cwtl
adc
gs
jb
jnp
jb
cmp
mov
and
cwtl
in
cmp
mov
fistl
cli
mov
js
ficompl
fbld
or
in
and
or
idiv
push
rcrl
pushf
loop
inc
enter
sahf
ficomps
adc
mov
cld
js
lock
in
es
mov
adc
push
xchg
test
out
mov
dec
push
sbb
xorl
fs
mov
sub
int3
cmp
or
inc
mov
in
in
xchg
mov
fstpl
adc
scas
push
cld
call
pushf
neg
fnsave
orl
scas
fcompl
rol
sti
cli
and
fsubs
or
shr
and
mov
fldl
aam
mov
mov
cli
fwait
xchg
int
push
out
loopne
adc
add
sub
or
cmp
rcll
in
shl
stc
sub
pop
inc
movsb
adc
push
aaa
fisttpl
dec
ret
rol
enter
out
call
or
test
pop
ljmp
jecxz
or
lods
xor
imul
jbe
ret
xor
popa
xor
sbb
mov
dec
jecxz
push
pop
and
xor
js
xchg
jbe
or
stos
jae
icebp
inc
stc
cmp
loope
js
imul
pop
sahf
jae
in
push
sbb
sbb
hlt
xor
push
repnz
push
xchg
lods
sub
and
inc
aad
scas
jb
int3
or
push
fldcw
pop
inc
shll
invlpg
leave
imul
nop
popa
adc
inc
push
stc
inc
dec
sbb
jp
push
jmp
stc
cmp
sbb
xchg
popa
call
or
xchg
xor
imul
mov
dec
shll
les
call
mov
sbb
cld
das
xchg
jl
mov
xor
and
fs
icebp
mov
add
xor
adc
push
fadds
aas
xchg
test
mov
fstl
cmpb
pushf
xor
sub
mov
call
mov
lret
je
aad
mov
cld
pop
sti
out
xor
or
sub
sahf
sbb
mov
jge
mov
lsl
dec
sbb
jb
lcall
mov
iret
adc
cmpsl
lret
xor
pop
lret
xor
stos
and
inc
mov
pop
mov
pop
push
push
in
dec
dec
movsb
push
imul
push
pop
push
in
cmp
cld
cmp
cld
cmp
xor
mov
test
inc
fisttpll
fs
ficomps
jnp
dec
incl
xor
ret
hlt
movsl
mov
insl
inc
clc
fdivl
imul
xchg
jge
adc
iret
push
xor
aas
lock
popa
dec
out
inc
push
jmp
mov
add
xchg
jb
movb
and
out
daa
sbb
inc
mov
scas
inc
insb
lods
enter
cmp
inc
jg
sbb
xchg
rorl
sbb
pop
test
stos
fcom
imul
or
popf
fldl
cmpsl
lock
inc
xorl
push
je
popa
std
insl
stos
inc
lahf
push
jmp
sub
push
movsl
adc
or
arpl
jo
rorb
in
int3
arpl
adc
inc
inc
stos
inc
jb
jl
cltd
xchg
dec
dec
sahf
xchg
mov
mov
aas
or
fdivl
sub
pop
data16
xchg
cwtl
jge
movsl
mov
sbb
add
loope
std
xchg
sub
ds
dec
sub
shlb
ja
and
js
scas
inc
lret
cltd
sub
sbb
xchg
sahf
push
sbb
icebp
pusha
cmp
test
inc
xlat
mov
fcompl
mulb
adc
mov
pop
dec
cmpsl
fdiv
test
repz
gs
mov
inc
and
dec
adc
jge
inc
jg
push
lods
outsb
ret
sbb
and
push
ficomps
xchg
adc
mov
dec
inc
std
push
leave
stos
shl
xor
sbb
sbb
sub
inc
inc
scas
test
mov
pop
mov
push
loope
aam
dec
jle
in
mov
push
cmp
clc
xchg
outsl
dec
or
idiv
pushf
movsb
imul
push
test
sbb
mov
pop
test
lods
pop
jns
push
mov
les
push
adc
ds
out
dec
fwait
rcl
cwtl
out
add
and
daa
adc
dec
sub
adc
cli
leave
rol
fiadds
xor
and
fistl
xchg
mov
mov
push
cmc
test
stos
mov
cwtl
subl
pop
sbb
cltd
push
aad
mov
jp
fisttpll
and
hlt
inc
dec
loopne
lcall
adc
jecxz
sub
int3
push
test
cwtl
gs
cld
mov
and
outsl
lds
push
or
cltd
adc
fidivrs
push
jmp
dec
sbb
push
xor
data16
test
mov
and
push
test
mov
call
fimuls
or
and
out
push
mov
ss
dec
mov
pushf
or
mov
sbb
and
data16
xchg
xor
sbb
out
pop
cwtl
add
push
lods
xlat
xor
pop
sarl
and
pop
jg
and
add
imul
mov
xor
fs
jne
fs
insl
and
cmc
arpl
pop
dec
gs
repnz
push
mov
xchg
pop
pop
repz
sub
xor
mov
jp
or
inc
imulb
jo
out
inc
pop
ficoml
cli
sbb
dec
nop
sbb
aam
mov
mov
loope
movsl
xlat
outsb
xlat
jecxz
mov
enter
fs
ficoml
cld
xchg
dec
dec
shrl
out
sbbb
pop
decb
lock
in
adc
pop
xorb
sbb
dec
sub
iret
push
in
sub
pop
push
int3
cmpsl
ds
pop
imul
stc
bnd
in
and
or
xor
sbb
stos
inc
or
push
nop
and
pop
bound
sbb
scas
lods
sub
test
andl
clc
and
mov
jg
jno,pn
in
stos
xor
popa
int3
add
mov
and
mov
mov
cli
cltd
cmpsl
xor
sbb
lret
out
inc
lahf
ss
mov
xchg
dec
xor
pop
loop
jbe
dec
add
rcll
push
and
mov
shll
push
add
arpl
mov
imul
and
ds
fstp
dec
or
xor
push
lret
lea
shll
adc
outsb
cmc
test
mov
and
jmp
and
lret
and
ss
int
mov
push
lahf
cmp
daa
add
cmp
add
rcrl
ret
dec
xor
dec
andl
repnz
sbb
cmp
push
scas
ret
dec
jle
xchg
aad
jl
xor
ret
gs
lret
pop
das
cmp
cmp
adc
les
nopl
sarl
dec
and
dec
inc
lcall
mov
xlat
lea
dec
leave
loopne
xor
sbb
jle
dec
stos
das
xchg
and
imul
mov
or
add
push
lock
dec
mov
popa
jmp
mov
shll
loopne
dec
dec
cs
push
fwait
aam
mov
scas
fiaddl
adcl
in
jo
insb
negl
stc
mov
xchg
gs
dec
sub
jle
lahf
daa
stos
test
or
outsb
out
jo
inc
jnp
lea
mov
push
test
push
cmp
out
addr16
adc
cld
sbb
mov
mov
test
movsb
sub
lahf
mov
fsubrs
cmp
idivl
sbb
rcll
dec
xchg
cmp
das
jo
movsb
das
hlt
pop
jne
inc
or
sbb
mov
adc
mov
cmp
je
js
rorb
iret
adc
sbb
mov
inc
mov
fwait
adcl
sahf
cmp
loope
enter
lahf
ds
push
mov
mov
mov
sti
pop
scas
scas
cmpsb
xor
in
aad
add
cmc
push
mov
or
mov
push
xchg
inc
xor
cmp
ljmp
andb
pop
frstor
scas
dec
pop
or
mov
cmpsb
xchg
inc
test
adc
hlt
dec
or
call
lods
cs
push
add
xor
adc
cmp
dec
ljmp
or
fildll
shll
xchg
inc
rorb
out
dec
or
out
inc
add
lods
sub
gs
jmp
lds
mov
sub
out
fimuls
lods
notb
scas
lods
imul
imul
xor
push
push
push
add
ljmp
iret
fnsave
mulb
add
mov
nop
mov
cmp
fs
mov
rcr
sub
incl
xchg
aas
sub
pushf
cmp
aaa
dec
push
push
dec
mov
cmp
sarl
fldcw
sahf
cmp
int
popa
pop
repz
ss
xor
add
jecxz
ret
push
jbe
xor
push
add
sub
cmp
and
xchg
inc
xor
int
fsubrl
outsb
out
aad
je
repnz
sub
adc
sbb
test
jg
cmp
push
add
and
movsb
xor
das
pop
negl
inc
adc
sub
mov
movsl
loope
xor
xor
cs
negb
push
adc
xchg
shrl
add
add
sti
bound
cmp
flds
or
std
or
jp
call
and
pop
push
push
cmp
cwtl
aas
lcall
data16
xchg
inc
xor
sub
push
les
inc
adc
dec
mov
jl
jbe
pop
fs
jb
adcl
xchg
inc
pop
mulb
test
xchg
mov
mov
xor
shlb
xchg
inc
fnstsw
popa
fildl
push
rcrb
inc
adc
mov
jnp
je
outsb
sub
push
mov
repz
lds
push
int
adc
bound
ret
loopne
pop
add
xlat
jle
jno
rcrl
shll
dec
gs
sub
jge
sarb
outsb
iret
xchg
xchg
hlt
add
sbb
or
sbb
outsl
cmc
cmpsl
dec
imul
mov
mov
jns
dec
adc
or
sbb
and
and
xor
test
add
loope
aas
movsb
lcall
pushf
pop
dec
pusha
jmp
cmp
addr16
js
orb
pop
les
jae
std
and
adc
imul
scas
inc
or
mov
leave
jp
jg
pushf
push
cmpsl
sarb
sub
aas
push
sti
movsb
test
ss
push
aaa
orl
jo
sbb
push
loope
push
cmp
xor
les
data16
push
sbb
enter
inc
test
nop
rcr
xorb
popa
in
sub
cmp
dec
sarb
in
lcall
test
or
add
stc
fs
dec
daa
stos
jl
adc
jns
js
shll
mov
adc
imul
mov
and
lods
dec
adc
clc
mov
sbb
cld
mov
or
jmp
mov
cmp
daa
mov
mov
mov
mov
lods
xor
jns
sub
jo
orb
xchg
cmp
sub
mov
testb
test
cltd
leave
sub
into
cld
pop
in
imul
dec
imulb
xlat
dec
mov
xchg
sbb
mov
or
pusha
orb
sub
ljmp
xchg
sub
stos
mov
dec
cmp
enter
jns
and
popf
ds
push
imul
cmpsl
hlt
mov
xchg
and
lds
inc
adc
inc
jns
cmp
and
jb
lock
test
pop
lcall
mov
ss
cmp
mov
insb
out
add
pop
mov
adc
cwtl
cmp
movsb
das
loop
sbb
adc
scas
cmp
popf
sub
fnstcw
in
and
cli
pop
lret
ds
add
pop
jns
loopne
sub
push
movsb
xor
cmpl
or
insb
lcall
inc
call
clc
mov
fnsave
roll
sbb
into
gs
mov
mov
gs
pop
inc
jbe
cmp
nop
aaa
adc
aas
cmpsb
je
cmp
fsubl
mov
shlb
add
fnstenv
or
shlb
xor
cmp
sub
lret
movsl
cmp
cmp
pop
inc
jmp
pusha
in
cmp
push
clc
sub
pop
je
push
mov
movsb
loopne
cmp
pop
mov
dec
or
jns
sbb
adc
cmp
aad
hlt
add
adc
pop
aaa
sahf
test
mov
popf
inc
jmp
fildl
mov
mov
ret
pushf
inc
jno
nop
cmp
cmp
sub
mov
mov
xorb
loope
xor
mov
mov
cltd
rcr
jle
lds
out
daa
mov
test
adc
push
aaa
xlat
pop
int
daa
sbb
xor
push
shll
mov
int
sub
ljmp
test
push
xor
daa
and
mov
fiadds
cmp
mov
cli
es
out
mov
ss
test
pop
push
shlb
test
shlb
or
xlat
js
pop
xchg
cmp
sub
adc
cmc
pop
add
dec
rorb
mov
dec
adc
jp
dec
or
outsb
and
add
pop
aam
ret
mov
xor
cmp
stos
xchg
sub
cmp
jns
mov
enter
mov
mov
shll
pop
pop
push
ret
test
scas
mov
push
mov
pop
mov
data16
dec
or
scas
sub
mov
dec
push
mov
pusha
cmc
aad
in
imul
aaa
repnz
add
and
mov
imul
push
ljmp
imul
or
das
jb
movsl
into
arpl
adc
into
hlt
pop
outsl
cli
into
xchg
test
push
xlat
popa
in
add
cmp
or
mov
push
fildl
mov
imul
pop
or
scas
bound
imul
ret
push
push
push
shr
jle
ljmp
and
aas
mov
repnz
addr16
data16
das
pop
jge
mov
lret
sub
mov
mov
aam
ret
or
add
into
mov
xchg
inc
mov
mov
dec
cmp
xor
ret
ss
and
cmp
insl
rcrb
scas
add
xchg
sub
and
adc
aas
ss
dec
das
sarb
sahf
aam
popa
add
xor
adc
push
sub
cmpl
std
add
cmpsb
cltd
pop
std
pop
mov
fdivrs
aam
jg
dec
fnstcw
dec
int3
lea
and
divb
fyl2x
outsl
and
repnz
mov
ljmp
jns
and
rcrb
pop
push
pop
popf
xchg
arpl
or
or
sahf
inc
pushf
dec
adc
and
xor
ret
divl
popa
sub
sub
adc
jmp
lret
cmp
int
xchg
and
subl
test
and
xor
fildl
adc
xchg
push
adc
mov
movsb
cmp
cli
repnz
popf
ret
shlb
js
or
push
rclb
dec
decb
aaa
mov
int3
jno
add
jmp
sub
int3
daa
shrb
add
push
ljmp
fs
fwait
xchg
cmp
arpl
xchg
mov
mov
jge
std
fdivrl
fistl
cli
inc
and
test
sub
lds
adc
dec
pop
sahf
jle
shlb
lahf
mov
adc
inc
push
mov
add
push
pop
imull
mov
rcrb
lds
fwait
sbb
roll
xor
mov
pop
pop
push
imul
xchg
adc
or
movsb
js
and
dec
testl
pop
ret
dec
cmpl
iret
rol
insl
adc
addr16
dec
int3
mov
sub
repz
jmp
leave
imul
sub
jae
jmp
clc
rolb
test
jae
pop
ror
mov
inc
push
add
or
jbe
fs
mov
stos
xor
aam
dec
jge
arpl
jo
xchg
push
and
mov
adc
sarl
xchg
add
sar
push
movsl
sub
icebp
cld
pop
inc
dec
imul
cwtl
cs
lret
jb
push
and
ds
cmp
movsl
dec
sbb
addb
inc
ficoml
pop
in
pop
out
dec
idiv
push
rcrb
stos
sub
push
fwait
cmp
adc
lcall
add
inc
pop
ret
lcall
mov
cmpsl
sbb
push
loop
jae
nop
mov
fbstp
push
mov
pop
jbe
sub
cmpsb
cmpsb
das
pop
in
mov
ljmp
fs
add
das
adc
in
xor
adcl
in
inc
dec
jmp
jp
clc
mov
imul
notl
dec
inc
test
cltd
sub
fcomp
xor
or
xlat
jns
pop
cld
pusha
ret
arpl
rclb
or
lret
sub
sbb
mov
lcall
lret
push
mov
arpl
sbb
sub
push
bound
xchg
test
mov
sbb
cmpsl
jbe
inc
aas
cmpsb
rclb
andb
sbb
xchg
lret
pusha
ljmp
out
je
ror
xchg
dec
or
xor
sarb
and
xchg
pop
add
rclb
xchg
cld
sbb
pop
bnd
sbb
sar
push
enter
fsubrl
xchg
notl
into
repnz
aam
mov
cmp
ja
and
push
add
xchg
xor
cmpsb
loope
mov
push
mov
add
mov
pop
sbb
mov
int
mov
lret
pop
pop
mov
outsb
xor
inc
adc
fbstp
lret
and
xchg
outsb
jmp
movsb
sbb
fdivrs
dec
sub
outsl
out
and
or
pop
jno
mov
mov
or
xor
ljmp
dec
cmp
das
cwtl
inc
pusha
shrb
mov
jbe
xchg
test
cltd
pushf
roll
pop
lret
fimull
imul
jp
ljmp
ds
movsl
daa
sub
imul
adc
cmp
sbb
or
shrb
add
pop
add
pop
cmp
daa
out
pop
repnz
loope
fwait
in
cwtl
cmp
pop
cli
inc
imul
cs
lock
cmpb
in
imul
lock
gs
icebp
jg
jbe
in
and
push
push
push
pushf
push
pop
lret
xchg
cmp
jle
or
fsubrl
mov
call
dec
gs
ss
or
rorb
fsubrs
xor
and
jbe
and
push
add
xor
outsl
cld
pop
push
jecxz
xchg
movsl
dec
push
push
mov
aam
aad
out
test
mov
cmpsl
inc
push
cmp
or
adc
rclb
mov
call
nop
fisubs
mov
adc
in
mov
xor
xchg
push
aam
ficoml
les
stos
jmp
sti
iret
xchg
out
add
ficoms
and
xchg
test
push
incl
add
rcr
ja
cmpsb
add
adc
dec
pop
jg
into
gs
in
push
cwtl
dec
adc
xorl
test
sbb
xor
fs
and
xor
ret
adc
mov
pop
mov
mov
cmpsl
sub
cmpsl
add
mov
xor
add
mov
xor
fisubrl
sub
ss
cwtl
add
xor
fcmovnbe
jne
jge
pop
stc
fsubl
adc
aam
add
pop
and
inc
or
or
pop
add
mov
add
sub
es
mov
xchg
mov
dec
push
jge
outsl
icebp
xchg
push
mov
test
rcrb
pop
stc
dec
adc
dec
js
jno
dec
pop
xchg
push
shrb
mov
xchg
mov
in
dec
lods
movsl
xor
jae
sbbb
sub
sbb
push
and
cmp
push
test
ds
mov
stc
cld
int
cmpsl
jmp
push
les
repnz
fs
orl
das
scas
stos
je
pop
inc
mov
dec
push
xchg
das
fwait
cmp
int
inc
icebp
xor
imul
sub
fbstp
xor
adc
mov
movsb
lock
jle
inc
adc
rorl
push
je
roll
mov
frstor
pusha
cmc
or
lret
mov
mov
stc
mov
cmpsb
sub
mov
pop
add
pop
cmp
mulb
xor
jb
scas
xor
bound
insb
and
lret
loope
out
dec
idiv
pop
mov
or
push
pop
enter
mov
jp
jecxz
dec
outsb
gs
movsl
push
add
pop
mov
push
push
xchg
pop
mov
ret
push
inc
fimuls
push
std
xor
aaa
cltd
ret
out
ret
and
xor
fistpl
int3
inc
or
fnsave
xchg
lcall
sbb
push
movl
xchg
pushl
lea
int3
ljmp
ljmp
jnp
hlt
fbld
sbb
ret
adc
xor
mov
iret
std
add
inc
pop
pop
mov
sub
lock
mov
bound
repnz
xor
cmpsb
sub
pop
mov
scas
xor
mov
fildl
jmp
repnz
or
ret
cmc
data16
or
mov
movsb
or
scas
cmp
lock
mov
xor
push
push
jno
mov
jns
and
xor
cmp
xor
aad
jmp
cld
xor
push
jns
or
ds
mov
sbbl
inc
repnz
pop
iret
jmp
adc
pop
xchg
inc
stc
icebp
std
pop
out
in
fs
mov
mov
mov
sbb
lcall
daa
ja
aas
test
in
sub
into
xchg
mov
mov
daa
push
out
jmp
test
popf
arpl
scas
ss
mov
jae
sub
call
sbb
stc
bound
stos
jmp
ljmp
push
xchg
cmp
cmpb
add
mov
xor
xchg
inc
ljmp
or
xchg
arpl
rep
jno
cli
adcl
xor
leave
xlat
and
cld
add
orl
mov
insb
dec
test
xchg
adc
mov
inc
arpl
dec
icebp
mov
fwait
adc
shll
lea
sti
dec
adc
adc
popf
in
addb
addr16
add
jae
xchg
scas
adc
ss
fwait
inc
xor
and
push
dec
mov
sahf
repz
add
sbb
mov
ret
lea
inc
or
fimull
pop
pop
xor
mov
pushf
inc
js
gs
mov
hlt
jp
std
pop
add
popa
fnstcw
inc
mov
xchg
movsb
adc
sti
rcrb
push
add
les
fisttps
adc
sub
push
icebp
ss
lock
negl
mov
push
inc
adc
jbe
push
inc
out
inc
adc
mov
into
fs
das
xchg
out
fiaddl
scas
adc
mov
cmpl
cli
mov
stos
sbb
inc
stos
popa
jmp
jle
lret
imul
fldenv
push
jp
iret
mov
out
xchg
xchg
js
cmpsl
add
inc
cwtl
or
fcom
pop
stc
add
loope
jg
jns
mov
inc
xchg
iret
xchg
add
sarl
push
add
iret
mov
incl
ja
xor
jmp
lds
sbb
add
jmp
out
cmpsl
push
mov
dec
aam
adc
mov
push
sti
jecxz
cmpsl
inc
idivb
data16
mov
shll
xor
xchg
aaa
in
jno
ret
add
push
mov
add
mov
push
mov
mov
arpl
scas
xor
mov
lret
std
popa
xor
rolb
mov
xor
cmp
scas
sarl
addb
sarl
xchg
mov
pop
xor
jno
lea
mov
xor
add
out
inc
std
popa
aam
sahf
cmp
sahf
push
loopne
cltd
sub
xor
pop
mull
mov
xchg
inc
mov
mov
mov
push
fnstcw
jae
scas
jmp
inc
adc
hlt
jmp
or
mov
xchg
lock
xor
std
pop
sub
test
xchg
lods
aad
ret
or
fwait
xor
mov
inc
pop
out
cmp
pop
adc
mov
in
sti
xor
aam
ljmp
lds
jl
jle
mov
jne
adc
inc
arpl
pop
add
and
jb
sub
scas
xchg
inc
ds
lods
sub
mov
xorl
aam
fisubl
sbb
arpl
adc
lds
dec
pop
xchg
les
scas
ret
lahf
cmp
insb
jne
pusha
hlt
daa
push
gs
pop
ja
test
mov
enter
cmp
lods
mov
jmp
mov
add
and
dec
adc
test
daa
pop
mov
push
cltd
dec
fistpll
iret
add
xor
addb
je
gs
mov
scas
sub
mov
pop
add
jne
dec
cmpsl
sub
xchg
test
jno
sub
in
adc
aaa
fldl
outsl
xor
rorb
jle
lahf
jns
or
mov
movsb
push
ja
cmp
and
sub
jbe
add
das
mov
dec
mov
mov
or
fisttpl
rcrl
cmp
sarl
add
out
subl
cld
add
popa
jle
sbb
jbe
cs
dec
das
and
popa
cmp
jl
jne
loope
fwait
loop
mov
xorb
jmp
push
xor
adc
ja
stc
movsl
sub
popa
lock
arpl
jnp
pushf
cs
mov
push
cmp
mov
aaa
repz
int
mov
sbb
iret
repnz
and
notb
push
mov
movsb
movsl
xor
aad
mov
sbb
adc
xchg
imul
pop
or
orl
jbe
inc
int3
push
popf
inc
pop
push
mov
dec
test
sbb
sub
aas
psrlq
mov
or
int3
xchg
setbe
mov
pop
cmpsb
push
sti
pushf
mov
dec
add
cmp
mov
fsubrs
push
lods
adc
insb
cltd
mov
insl
icebp
lods
mov
jg
sarb
imul
pop
cmpsl
sub
and
mov
add
sarl
or
push
outsl
call
push
es
aam
cmp
cmp
fimuls
bswap
push
pop
pop
sarb
lea
sbb
mov
mov
out
repnz
ja
pop
inc
push
shlb
lods
inc
mov
pop
out
xor
cwtl
inc
xor
mov
jl,pt
int
stc
push
nop
sbb
nop
sub
xlat
cmpsl
inc
mov
mov
jo,pt
out
cmp
outsb
inc
imul
jb
mov
cmp
inc
adc
mov
inc
adc
sub
or
into
dec
loopne
mov
orl
mov
in
jae
push
mov
push
pop
inc
jl
pop
mov
cmp
lods
mov
div
pop
jne
push
rclb
sar
inc
fildl
cmp
jp
or
mov
mov
aaa
das
or
fs
lods
push
std
xor
cmpsl
test
movsb
in
std
pop
out
std
mov
and
sbb
std
mov
push
jns
ret
mov
pushf
cmp
roll
sbb
inc
mov
insl
shr
imul
cld
popf
repnz
addl
inc
stos
shlb
cwtl
mov
jl
push
lods
ss
mov
xchg
push
jne
fisubrs
cmp
xlat
sbb
and
inc
pop
stc
pop
clc
out
jb
aam
shrl
stos
decl
dec
pop
lock
inc
popa
in
dec
or
jle
stos
insl
xchg
mov
insl
ljmp
fidivrs
sbb
call
jae
and
faddl
inc
cltd
push
sti
cmp
les
les
xor
nop
into
pop
out
lds
repnz
xchg
aaa
cli
call
push
sarb
inc
pop
mov
andb
rcr
lea
or
mov
mov
adc
mov
push
lods
cmpsb
mov
fisttps
jp
loop
mov
push
test
aaa
cwtl
sub
cmp
lahf
rolb
filds
jmp
mov
ja
push
adc
cld
js
xor
out
mov
add
std
pop
pop
ret
xlat
sbb
bound
les
lret
adcb
insb
call
or
popa
repz
or
and
pusha
push
pop
xlat
jle
iret
mov
mov
dec
pop
mov
fidivrl
or
test
dec
loopne
jle
ljmp
fildl
fmull
into
xchg
imul
dec
adc
cmpsb
ja
popf
dec
cmp
mov
mov
mov
pop
notl
adcl
push
pop
clc
cmp
aam
test
mov
ss
xlat
outsl
call
or
cmp
outsl
repnz
sub
xchg
jb
movsb
popa
shll
popa
cmpsl
sbb
arpl
mov
inc
adc
into
or
subl
mov
mov
pop
cli
xor
rcll
inc
enter
fidivrl
adc
pusha
xor
pop
ret
push
sub
ret
add
dec
or
in
fldenv
pop
in
xchg
inc
repz
cmp
inc
sub
loope
insb
out
in
addr16
inc
adc
add
cmp
rcll
and
or
jp
aad
sub
enter
inc
mov
jb
fwait
inc
and
fnstcw
ss
filds
mov
fld
push
leave
repz
mov
call
push
ret
das
scas
sbb
xlat
xchg
and
lret
xlat
test
pop
nop
inc
jbe
sbb
sbb
pusha
icebp
nop
inc
sub
xchg
sbb
cmpl
cwtl
lock
pop
testl
cli
pop
mov
push
add
cmp
out
inc
pop
clc
imul
mov
push
imul
lds
push
mov
inc
fs
clc
or
lret
mov
pop
cli
lahf
hlt
test
ret
clc
xchg
xor
sub
adcb
jg
push
cmp
gs
mov
scas
mov
outsb
outsl
cmc
sbb
dec
add
push
mov
or
in
je
es
stc
sub
sub
fldl
iret
jno
enter
xchg
rolb
cmp
xorl
pop
sbb
sbb
push
cmpsl
push
cld
dec
cmp
jl
mov
sahf
xchg
outsl
push
std
xor
dec
adc
and
pushf
inc
ret
jne
stos
adcl
orb
mov
aam
test
add
pop
push
nop
push
cld
bound
jbe
loop
xchg
inc
inc
sti
pusha
out
in
mov
std
sub
fwait
adc
mov
movsb
xor
inc
xchg
fdivrl
popf
imul
mov
inc
adc
enter
notb
inc
adc
jecxz
out
fdivrs
lcall
push
sbb
pop
repz
pop
jne
push
cmp
or
xchg
cmp
or
das
xchg
inc
jg
mov
pusha
addr16
bnd
mov
arpl
cmp
daa
or
jmp
cmc
popa
cmc
out
hlt
nop
cli
scas
inc
sub
jnp
hlt
dec
mov
adc
jmp
aaa
repnz
mov
xchg
push
dec
cmpsl
sub
push
dec
nop
sbb
aam
shll
or
stos
mov
mov
sbb
jp
or
or
mov
pusha
repnz
xchg
adc
jbe
enter
cs
mov
adcb
sahf
sub
add
shl
frstor
mov
push
xor
xor
addr16
pusha
and
jns
push
jno
lcall
pop
and
cmpsb
xor
arpl
out
scas
jns
sbb
sbb
jmp
hlt
pop
xlat
clc
push
add
or
pop
cwtl
icebp
fdivl
lds
in
mov
pop
mov
cmpsl
or
in
xor
push
in
jns
push
jns
ja
out
imul
cmpsl
mov
and
pop
movsl
mov
dec
fdivrl
pop
arpl
adc
sti
inc
inc
nop
cmp
xchg
inc
or
jbe
test
aaa
pop
leave
icebp
inc
fiaddl
jge
mov
sub
pop
clc
insb
icebp
pusha
mov
sbb
lret
cmp
lods
fs
scas
loope
xchg
loope
ljmp
inc
lock
testl
adc
push
ljmp
fadds
push
lods
fs
cmpb
inc
js
mov
push
clc
dec
loope
adc
inc
adc
fstp
js
enter
sbb
mov
nop
inc
add
pop
stc
rcrb
mov
inc
xchg
sub
ret
popa
paddq
mov
push
add
outsl
pop
or
push
scas
or
sbb
cmp
jge
sbb
or
pusha
test
push
leave
mov
and
shlb
clc
outsl
push
test
jbe
mov
inc
es
or
lcall
xchg
daa
push
add
movsb
sub
lods
mov
lret
mov
mov
xchg
inc
mov
mov
jge
ljmp
push
testl
fdivrs
lods
sub
stos
cmp
push
lret
insl
ljmp
pop
stc
xchg
and
icebp
data16
mov
jbe
ret
bnd
xchg
movsl
adc
or
push
call
xlat
in
pop
imulb
cmp
xor
jge
add
loop
push
push
aam
pop
push
aam
fidivrs
add
push
bound
lock
xor
test
xor
jae
push
pop
and
lods
dec
xor
mov
pop
xchg
bswap
adc
xchg
dec
sbb
jo
inc
frstor
mov
stos
jecxz
hlt
pop
lcall
jb
bound
rolb
adc
lcall
mov
imul
iret
adc
movb
out
popf
inc
push
clc
dec
adc
dec
ret
adc
lahf
sub
dec
adc
pop
lods
mov
mov
mov
inc
or
insl
or
scas
pop
xchg
mov
jmp
sbb
mov
jns
jbe
jl
loope
push
mov
mov
stc
aaa
pop
cld
popa
stc
and
xchg
and
xor
inc
xor
jns
xchg
cld
in
shlb
xor
push
mov
mov
scas
dec
adc
and
jp
cmp
jle
movsw
sub
loope
loopne
dec
repz
aas
mov
sarb
mov
lods
gs
dec
mov
andl
les
inc
add
nop
or
shll
mov
and
pushf
dec
inc
xlat
jnp
xchg
out
pushf
pop
cmc
int
sbb
adc
arpl
rclb
pop
lock
mov
out
insl
sbb
sub
insb
scas
mov
loopne
adc
xor
xor
adc
mov
test
cmpsb
flds
sub
and
dec
dec
loop
sub
add
jge
pop
scas
xacquire
and
in
add
cmp
and
cltd
push
cltd
ret
pop
lret
jbe
mov
in
loope
push
leave
ds
aas
call
dec
xchg
sbb
adc
rcrl
addr16
dec
inc
mov
mov
fistl
mov
cs
pusha
push
adc
mov
xor
xchg
aam
xchg
mov
out
daa
or
add
stos
pop
mov
mov
dec
loopne
stos
stos
inc
fstpl
enter
xchg
add
cmp
movsb
add
aad
ret
pop
dec
mulb
mov
pushf
dec
inc
xlat
jns
call
lret
adc
mov
in
jl
push
arpl
xchg
aas
lcall
xchg
mov
adc
in
insl
pop
pop
xchg
lea
hlt
mov
mov
loopne
adc
xor
xor
push
push
repnz
test
cmpsl
flds
lds
aad
and
dec
dec
jecxz
sub
add
jnp
pop
lods
repnz
and
in
add
cmp
push
cltd
les
je
mov
in
loop
push
ds
aas
add
dec
xchg
push
mov
imul
jecxz
rcll
cltd
xor
xor
mov
ud1
insl
xchg
ficoml
mov
sub
adc
mov
xor
shl
xchg
es
movsl
push
add
xor
push
mov
mov
dec
loope
test
imul
jo,pn
push
mov
ret
movsl
cmp
mov
les
hlt
and
pushf
inc
inc
xlat
ja
add
leave
nopl
sbb
cmp
xor
pop
repnz
mov
adc
jecxz
insl
adc
ss
mov
mov
fisttps
aad
xor
xor
or
repz
cmpsl
adc
mov
das
sub
mov
add
es
pop
sahf
imul
jns
pop
stos
icebp
mov
and
in
incl
jbe
add
leave
jb
mov
sbb
aas
idivb
pop
cmc
dec
pop
mov
imul
mov
pop
repnz
adc
fcoms
mov
sub
stos
cmp
push
pop
xor
shl
mov
scas
push
out
and
cmpsb
push
add
xor
les
enter
cmpsl
stos
inc
fstps
push
dec
cli
leave
pusha
sub
mov
mov
shll
rcll
mov
lcall
cwtl
in
xchg
pop
test
and
sbb
aad
cmp
repz
mov
adc
loope
outsb
adc
xor
stos
mov
fldl
aad
xor
xor
or
mov
adc
mov
das
sub
mov
add
dec
in
and
imul
js
pop
stos
out
mov
and
in
incb
je,pt
add
push
xchg
lds
and
sbb
inc
xlat
cmc
cmp
cwtl
insb
push
pop
testb
mov
push
cmp
xor
xor
bound
mov
adc
xchg
or
mov
pop
or
push
pop
xor
mov
icebp
mov
scas
push
call
push
add
xor
movsl
push
mov
mull
push
dec
stc
lret
insb
mov
sahf
dec
call
cmp
rclb
lds
and
and
jp
inc
inc
fnstenv
cwtl
ljmp
mov
out
adc
cmp
loope
mov
adc
fsubrs
push
cltd
xor
test
adc
mov
aad
fnstenv
leave
or
mov
mov
outsb
add
rorl
jns
stos
inc
push
lcall
test
lret
out
std
inc
cmpsl
jb,pt
add
pop
lds
mov
sbb
inc
fdiv
cmp
cwtl
push
pusha
testl
jle
cltd
fnstsw
xor
das
pop
repnz
push
mov
adc
aam
cs
mov
mov
daa
mov
pop
or
lods
cmp
push
pop
xor
mov
icebp
mov
lods
push
jmp
push
jo
xor
lds
dec
jecxz
movsb
lods
inc
pop
imul
test
and
mov
push
popf
into
adc
pop
inc
out
and
and
jnp
inc
inc
fnstenv
add
les
and
pop
pop
aas
mov
pushf
xor
pop
hlt
loopne
mov
adc
outsl
adc
xor
test
dec
fiaddl
insl
sub
dec
hlt
mov
mov
outsb
add
and
inc
dec
in
and
add
jne
pop
cmpsl
in
mov
push
leave
out
sti
aas
test
jno
add
pop
les
mov
pop
roll
cmp
cltd
imul
and
xchg
fdivrl
aad
mov
pop
repz
or
push
cmpb
pop
fnstenv
rcrl
mov
es
pop
push
push
lods
aaa
jns
imul
repnz
stos
push
jmp
push
cld
jo
jb,pn
mov
les
cmc
mov
insb
add
lret
push
and
test
out
fwait
push
popf
int3
adc
pop
inc
in
and
push
fs
xchg
aas
inc
fnstenv
add
ret
mov
adc
ss
xor
pop
cmc
fisttps
jge
xor
fsubrs
push
fwait
xor
cmpsl
mov
stos
mov
xlat
outsb
sub
xor
push
dec
cmc
mov
mov
outsb
add
and
mov
incl
out
and
add
jae
pusha
movsl
ljmp
stc
cmp
push
popf
dec
nop
pop
ret
mov
adc
add
inc
mov
mov
xchg
fidivrl
or
pop
hlt
pop
or
mov
fidivl
rcrl
jecxz
mov
push
add
scas
xor
push
xor
mov
test
ljmp
jno
sub
xor
mov
ret
repz
insl
add
repz
bound
inc
jmp
inc
in
cltd
pop
sahf
lret
pop
inc
jmp
mov
xchg
cmp
add
out
popa
clc
rolb
mov
adc
fmuls
lods
pop
neg
xchg
adc
fcmovnu
jo
push
fwait
xor
mov
lods
mov
xlat
outsb
sub
xor
add
es
call
sarb
push
stos
icebp
xor
and
lea
inc
dec
out
pop
lods
inc
push
xchg
insl
add
jb
popa
movsb
call
call
inc
insl
sbb
sahf
dec
mov
pop
shrb
pushf
loope
jl
mov
add
inc
xchg
mov
xchg
fdivrs
or
pop
hlt
pop
or
adc
iret
cltd
xor
mov
nop
loop
mov
push
add
scas
xor
aad
cmpsl
push
ss
enter
cmpsl
push
jmp
sbb
test
sub
lahf
dec
nop
daa
jle
dec
in
lahf
scas
inc
rcll
insl
add
repnz
arpl
mov
cwtl
inc
ljmp
cwtl
or
ds
xchg
cmp
fldt
add
in
stc
mov
loopne
pop
adc
fmuls
stos
pop
neg
xchg
cs
jno
push
fwait
xor
mov
push
lods
mov
xlat
outsb
sub
xor
add
cmc
mov
jmp
into
ja
pop
test
lret
mov
jb
lods
inc
push
xchg
insl
add
jno
bound
idivl
test
lahf
dec
mov
pop
mov
jl
mov
add
inc
test
mov
xchg
aas
pop
mov
ss
pop
hlt
pop
or
adc
cltd
xor
scas
cli
xchg
loopne
mov
mov
jae
insl
movsl
push
aaa
into
test
hlt
mov
movsl
push
in
sbb
stos
dec
divl
sub
popf
dec
xchg
sub
out
popf
scas
inc
iret
adc
inc
lock
and
xchg
inc
jmp
jne
stos
inc
jmp
or
pusha
cmp
daa
mov
nop
cmp
imul
cli
mov
fiadds
flds
test
neg
test
adc
or
xor
mov
pop
scas
scas
hlt
fsubrs
shll
lea
push
ljmp
jno
cmpsl
in
xor
push
leave
es
aas
push
out
sbb
inc
dec
xchg
outsb
add
mov
ret
ljmp
push
or
mov
fucom
jge
mov
add
popa
or
and
xchg
aam
xlat
add
es
cmc
push
push
mov
adc
lret
lcall
push
mov
mov
jb
outsb
movsb
push
aaa
into
add
mov
mov
adc
dec
cmc
jae
daa
imul
pushf
dec
xchg
sub
push
out
fwait
scas
inc
int
outsl
push
inc
out
int
and
and
inc
jmp
jae
stos
inc
call
or
popa
cmp
daa
mov
cmp
imul
and
sbb
push
inc
fiaddl
cmpsl
popa
clc
fadds
jg
sub
dec
popf
xor
sub
nop
pop
mov
pop
scas
lods
repz
iret
xor
mov
push
ljmp
jno
movsl
in
xor
sbb
ds
call
dec
nop
outsl
push
ret
arpl
shr
rep
inc
push
mov
pusha
mov
fsub
jle
mov
add
sti
cmp
and
roll
add
mov
notb
mov
adc
push
fnsave
fwait
xor
stos
sti
xchg
fcompl
sbb
mov
testb
pop
adc
or
inc
xchg
sub
push
call
lret
push
jo
inc
in
int
push
bound
xorb
inc
out
or
cmp
daa
mov
mov
inc
fsubl
pop
sahf
loopne
arpl
mov
fiaddl
fildl
cmpsb
stc
xlat
cmpb
sub
dec
sahf
xor
pop
lahf
mov
scas
stos
repnz
int
int3
incb
ja
push
jmp
cwtl
push
lods
leave
jno
or
lds
jmp
dec
mov
shrb
popf
loope
and
icebp
xor
inc
data16
mov
mov
jg
mov
fucomp
sub
gs
cmp
mov
roll
add
pusha
notl
push
xor
jle
cmpsl
push
fidivs
enter
test
xchg
ficompl
mov
mov
outsl
fnstenv
dec
cmp
jle
testl
inc
icebp
je
and
lret
cltd
inc
xchg
sub
push
jmp
leave
or
or
ljmp
xchg
cmp
lods
inc
in
or
cmp
sub
mov
frstor
or
mov
es
or
fildl
movsb
stc
aad
mov
pop
sub
fdivl
dec
sahf
xor
pop
popf
mov
scas
stos
lock
int3
ss
inc
clc
jne
push
in
dec
xchg
push
lods
jo
or
les
jmp
dec
mov
mov
fisttps
xor
lods
inc
adc
mov
mov
sub
xchg
fsubr
jg
mov
fsubp
sub
popf
pop
or
cmp
mov
mov
inc
flds
scas
mov
notl
rcrl
jle
movsl
push
fbstp
pushf
xor
cmpsl
std
xchg
fstps
mov
mov
insl
fnstenv
dec
cmp
jge
testl
inc
lock
and
lret
xchg
inc
xchg
sub
push
jmp
enter
cmp
iret
sbb
es
cmp
test
lods
inc
jecxz
or
ss
rclb
ljmp
stos
or
mov
es
or
fildl
mov
mov
pop
es
je
dec
sahf
xor
push
fwait
mov
mov
out
fidivl
lret
aaa
into
cld
inc
clc
jae
push
in
dec
xchg
push
lods
lds
or
ret
xchg
sub
cmp
imul
jo
mov
fisttpll
test
xor
inc
or
mov
sub
xchg
call
sub
popf
pop
pop
addr16
cmp
mov
mov
inc
fsin
lods
mov
clc
push
inc
pop
xor
push
movsb
push
fbstp
lds
xchg
xlat
sbb
sub
sahf
dec
cmp
jnp
clc
icebp
pushf
push
out
int
pop
scas
inc
out
jne
and
int3
xchg
inc
xchg
sub
push
ljmp
jb
cmp
iret
sbb
daa
cmp
test
inc
loop
or
xor
push
jmp
mov
inc
fisubs
or
mov
daa
mov
or
faddl
mov
mov
sbb
inc
lahf
ss
sti
xchg
push
lcall
cmpsl
in
leave
aaa
into
cli
inc
stc
nop
jb
push
in
dec
xchg
pop
scas
les
or
rcll
push
mov
mov
fmull
test
das
lods
inc
popa
push
or
aas
or
mov
sub
xchg
aad
addb
dec
sub
sahf
pop
add
and
sbb
int3
inc
stos
mov
stc
dec
std
rcrl
adcb
push
fbstp
les
xchg
aad
mov
mov
imul
popf
dec
cmp
jns
stc
nop
lock
inc
in
jne
push
fs
aas
xchg
sub
push
jmp
xchg
mov
les
jae
cmp
iret
popw
pop
xchg
sub
scas
scas
inc
loope
or
xor
sub
push
push
in
orl
or
mov
sub
push
dec
inc
fnstsw
mov
sti
sarl
push
lods
repnz
into
fnsave
mov
xchg
push
cltd
mov
mov
in
fdivl
aaa
into
clc
aas
cli
xchg
jno
push
in
dec
xchg
sbb
popf
in
int
mov
push
jmp
adc
or
fistl
test
cs
inc
pusha
or
mov
mov
sub
aam
addl
daa
or
xor
es
xchg
inc
test
cmp
sbb
rcrl
sbbl
add
ss
mov
mov
mov
push
jae
inc
cmp
ja
cli
xchg
out
cwtl
push
out
leave
adc
mov
ljmp
xchg
cmp
push
in
out
mov
ret
or
jecxz
adc
sub
scas
mov
loopne
or
xor
sub
or
in
test
test
mov
mov
sub
sub
sbbl
dec
inc
fidivrs
mov
cld
sarb
push
stos
icebp
sbbl
int3
fnsave
mov
xchg
push
xchg
mov
mov
ljmp
idivb
push
out
dec
nop
sbb
fwait
loop
into
adc
push
in
adc
or
fsts
test
sub
inc
pop
or
fs
sub
shr
addb
loopne
and
push
mov
test
inc
fdivr
cmpsb
movsb
cmp
sbb
stc
ret
outsb
sbbb
dec
loopne
jle
mov
xchg
rcll
push
inc
repnz
and
je
inc
cmp
jne
sti
xchg
in
xchg
pop
out
push
sbb
sbb
iret
xchg
cmp
in
mov
rolb
adc
sub
lods
mov
fiadds
iret
xor
sub
or
test
cmpsb
or
scas
clc
sub
sub
test
add
fidivrs
cmp
gs
into
ja
push
test
lret
fidivs
inc
mov
xchg
push
xchg
mov
mov
call
cmp
cmc
cmp
xchg
insl
push
pop
out
inc
mov
mov
push
aaa
into
adc
in
arpl
mov
inc
test
mov
shrl
xlat
xchg
sub
mov
xchg
sub
movsl
cmp
fs
pop
sub
mov
jmp
add
or
xor
mov
test
inc
fdivr
cmpsb
movsl
cmp
sbb
stc
ret
pop
sub
sahf
dec
loope
jle
mov
xchg
rcll
mov
mov
fnsaves
cmp
jne
sti
bound
push
jo
rcll
rolb
dec
mov
std
ljmp
mov
sub
lahf
push
hlt
xchg
dec
inc
xchg
jno
inc
fsubs
dec
dec
gs
in
loop
and
loope
pop
sub
adc
add
icebp
and
lods
out
pushf
ds
jno
test
outsb
test
push
pop
cmc
jae
arpl
mov
mov
pop
xchg
mov
lret
mov
insl
mov
sub
sbb
pop
mov
sub
ds
lea
cmp
jae
xchg
loop
int
xchg
cmc
shll
sub
mov
outsl
mov
mov
cltd
adc
test
sbb
sub
mov
pop
mov
outsl
and
loope
mov
jns
sbb
stos
and
int
iret
imul
jmp
push
adc
repz
cmpsb
mov
push
push
std
clc
enter
inc
mov
cmc
imul
adc
mov
xor
push
std
scas
insl
out
mov
mov
mov
mov
adc
outsb
jp
sub
lcall
cmpsb
movsl
ja
jp
int
cmp
add
cwtl
push
cmpsb
nop
ficoms
scas
jo
insb
sbb
mov
repz
pop
xchg
lcall
nop
push
ja
stos
mov
adc
dec
stos
sahf
sub
enter
mov
add
mov
out
fcompl
stos
xlat
and
ja
push
loope
and
cmp
imul
sbb
ljmp
adc
push
lock
in
fiaddl
push
dec
sbb
jle
jl
xor
mov
pushf
add
das
jp
and
fdivr
arpl
and
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
mov
lds
test
into
call
xor
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
test
inc
mov
pop
sub
xchg
mov
inc
xor
std
push
fwait
daa
dec
sar
in
and
popa
out
pop
or
jns
add
adc
aas
push
stos
fisttps
into
push
jnp
jmp
inc
scas
das
insw
testl
cmp
loop
test
cmp
nop
adc
mov
out
repnz
fld
movsl
sbb
mov
dec
out
sbb
add
mov
popa
lods
push
pop
in
xor
imul
loop
add
add
or
sbb
cmp
inc
mov
test
out
movsb
nop
lods
sub
mov
ds
adc
xor
xor
out
cld
cltd
dec
and
fbstp
push
test
nop
mov
and
jecxz
pushf
out
add
test
pop
inc
ror
sahf
inc
std
cmp
cld
lahf
jge
cmpsl
lods
dec
and
mov
pop
inc
pop
jg
sti
mov
xor
jecxz
and
sbb
repz
pop
sub
addr16
pusha
jp
int
xchg
ljmp
push
repz
lahf
mov
lahf
pusha
stc
out
sbb
xchg
addr16
mov
sbb
aaa
dec
jns
sub
movsb
fdivrs
sub
fmuls
lahf
insl
mov
push
push
and
mov
add
popa
sub
xor
mov
mov
jbe
out
sbb
divl
xchg
cmpsl
inc
or
xchg
xchg
iret
add
outsb
mov
sub
divl
shll
pop
test
idivl
mov
mov
mov
mov
fistpll
or
pop
ds
mov
push
sbb
jge
popa
movsb
daa
and
mov
jp
imul
or
add
jecxz
xchg
into
out
aad
lcall
int3
loope
xor
adc
and
dec
sub
fistpl
mov
scas
push
adcb
