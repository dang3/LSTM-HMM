push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
push
push
push
xchg
adc
push
adc
jo
adc
je
push
xlat
mov
mov
adc
jo
mov
push
push
lea
mov
xor
pop
xor
adc
or
pop
push
and
sbb
mov
lods
dec
jge
fldl
xchg
jge
fstpl
pop
stos
pop
mov
je
push
push
push
push
push
xchg
push
push
inc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
adc
je
push
xlat
mov
push
dec
adc
jo
inc
pop
push
push
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
add
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
push
push
push
push
xchg
push
adc
adc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
mov
adc
jo
cwtl
dec
push
push
lea
mov
xor
pop
xor
adc
or
test
and
lods
fstl
movsb
filds
movsb
fldl
mov
sub
push
fists
mov
mov
filds
movsb
jge
fldl
test
pop
mov
add
test
mov
leave
ret
push
mov
mov
call
nop
nop
call
xchg
push
adc
adc
push
push
cmc
js
adc
mov
push
fstl
movsb
xchg
push
jo
je
push
mov
fstl
jo
xchg
adc
inc
je
push
int3
mov
jo
sbb
fists
mov
fists
movsb
fstl
jo
int3
mov
jo
push
dec
push
push
fists
movsb
fstl
mov
rcll
fstl
jo
xchg
push
jo
add
push
mov
call
test
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jae
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
inc
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
in
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
and
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xlat
sub
and
push
push
push
push
push
add
js
fnstenv
jo
mov
adc
xor
adc
sub
movsb
filds
mov
aad
jmp
mov
test
pop
fists
pop
cmp
push
jge
fstpl
pop
stos
pop
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
xor
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
insb
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
cmp
add
jo
xor
and
jo
insb
adc
pop
push
push
xlat
mov
push
shrb
fstl
mov
fst
sub
jo
iret
insb
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
cli
insb
adc
add
jo
pop
test
and
stos
stos
xchg
adc
jmp
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
test
add
jo
test
cmp
stos
stos
xchg
adc
mov
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
roll
stos
stos
stos
fstl
mov
fst
xor
stos
stos
xchg
adc
stos
insb
adc
add
jo
sub
or
jo
pop
insl
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
xor
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
in
sbb
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
insl
adc
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
insl
adc
int
adc
adc
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
or
rcll
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
rcl
mov
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
notb
incb
dec
mov
mov
jb
sbb
in
gs
shrb
popa
xor
mov
add
in
and
scas
int
adc
insb
mov
and
adc
rcrl
mov
mov
ss
push
mov
xchg
repz
xchg
shl
imul
sar
imul
sar
cmp
sbb
sbb
xor
leave
jge
xchg
aad
push
mov
xorl
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
inc
ss
iret
mov
rcll
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
hlt
cmpsl
sti
sbb
sub
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
add
loop
mov
jle
push
call
loop
jge
xchg
aad
push
mov
dec
loop
sub
mov
shl
fstpl
push
in
cwtl
and
add
fisubl
push
xchg
loop
jge
xchg
aad
push
mov
out
orb
jns
push
sub
xor
xchg
sbb
mov
fcmovnb
mov
cmc
out
leave
jge
xchg
aad
push
or
xchg
int
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
dec
nop
mov
xchg
pop
pop
rorl
xor
rcl
cmp
pop
mov
push
mov
ja
mov
in
int3
mov
scas
cmpsb
imulb
mov
sub
push
and
jb
mov
inc
shlb
rcrb
enter
jl
js
and
fwait
adc
std
je
fs
cwtl
jnp
ja
mov
and
sbb
or
loopne
sub
adc
out
outsb
xchg
setns
cmpsb
je
cmc
aam
xor
adc
push
and
adc
mov
mov
xor
mov
sbb
mov
out
mov
test
push
cs
daa
insl
and
inc
jno
cmp
inc
fildl
push
frstor
pop
lcall
xor
cvttps2pi
push
lock
mov
cs
xchg
cs
jecxz
ljmp
push
cmc
xor
int3
dec
pusha
inc
push
lods
out
jmp
fld
jg
andl
xor
inc
fbstp
sbb
xchg
sbb
xchg
sub
adc
ret
test
rorb
and
and
cmpsb
add
daa
idivl
xor
fnstsw
mov
mov
push
cmp
add
int
pushf
jb
mov
inc
cmp
push
jmp
movsl
dec
xor
xor
lods
mov
sti
icebp
or
dec
pop
mov
xchg
mov
mov
cmpsb
pop
pop
scas
jae
pop
mov
dec
cld
mov
jns
test
xlat
xchg
in
dec
inc
xchg
mov
rcrl
mov
ror
xor
or
jb
push
xchg
push
into
add
xor
xor
popa
mov
pop
addr16
adc
pushf
cmp
pop
jle
jns
cs
scas
sub
imulb
mov
jg
test
pop
and
repz
sub
xchg
and
xchg
fisubrs
dec
ss
in
fs
sub
arpl
in
repz
xor
jecxz
jb
jmp
xor
cmp
aaa
dec
xchg
cmp
push
and
xchg
inc
mov
or
int3
mov
dec
call
sub
aad
icebp
inc
js
repnz
add
sarb
out
add
push
sti
jle
inc
sbb
and
pop
fbld
shld
popf
push
mov
sbb
hlt
scas
fisttpl
pop
dec
push
sbbb
mov
addr16
inc
dec
arpl
sbb
add
in
cmp
add
and
push
mov
add
push
push
scas
dec
or
sbb
inc
repz
add
xchg
lds
movsb
adc
jl
int
enter
or
rcll
push
in
sbb
ds
lds
pop
push
jnp
xor
mov
adc
loope
lret
push
insl
inc
out
xchg
add
xor
mov
add
sub
cltd
mov
faddl
push
ds
mov
lcall
les
pop
push
pop
jae
and
icebp
das
xor
mov
rcll
sbb
arpl
dec
pop
data16
xchg
aam
das
xchg
jne
pop
sub
sub
call
mov
clc
aaa
or
sbb
mov
repnz
dec
nop
push
push
out
js
push
mov
mov
mov
inc
add
stos
mov
sub
andb
push
dec
enter
cmp
xchg
in
jb
lods
ja
insb
outsl
insb
add
repz
mov
or
xor
lcall
add
test
shll
mov
in
pop
es
repz
dec
jge
aam
xorl
das
sub
fsts
cmc
ljmp
gs
adc
call
imul
into
stos
sti
push
adc
sbb
shr
jne
jmp
cld
push
xchg
popf
lret
daa
std
mov
hlt
fwait
mov
inc
mov
mov
leave
sbb
ficoms
adc
jno
sub
jne
and
pop
mov
inc
jle
cltd
xchg
ret
jae
pop
add
mov
int
sti
mov
imul
inc
xchg
arpl
fs
mov
hlt
and
lea
into
cltd
push
ficompl
adc
xlat
push
jge
ss
and
jmp
sar
outsb
mov
mov
mov
das
xchg
int
and
adc
adc
jo
add
mov
mov
popa
xlat
add
sub
ret
and
jb
adc
fisubrs
pop
faddl
pop
push
xchg
test
cmp
and
pushf
dec
loop
add
addb
xchg
in
xchg
sub
or
jno
out
adcb
inc
outsl
repnz
fwait
inc
adc
subb
inc
jno
or
adc
sub
shll
xorl
test
roll
test
mov
sahf
jae
loopne
mov
inc
into
stc
push
mov
sub
add
mov
jp
loop
insb
sub
bound
in
xchg
sbb
mov
rorl
cmp
shrb
sub
outsl
out
cmp
shl
int3
mov
and
jp
enter
lret
adc
push
lcall
cmp
imul
push
xchg
pop
sti
lods
mov
and
clc
subl
scas
mov
jge
push
insb
jg
adc
and
pop
inc
add
and
test
test
insb
icebp
test
push
mov
cwtl
jb
notl
mov
lea
cmpsl
inc
xchg
adc
call
in
fcmovbe
sahf
cmp
add
dec
inc
fucomip
pop
and
xor
nopl
mov
adc
sub
jo
mov
pop
imul
inc
mov
jno
loop
jge
xchg
aad
push
adc
add
xorb
imul
inc
pushf
inc
sbbb
scas
mov
sub
daa
xchg
lock
add
loopne
xor
pusha
addl
lods
pop
mov
lock
leave
adc
icebp
cmp
mov
jbe
lock
dec
dec
mov
fucomip
jmp
jp
ljmp
dec
mov
fucomip
jmp
pop
mov
mov
dec
scas
xor
xor
in
jecxz
inc
inc
xor
pause
rolb
popa
add
dec
addr16
xchg
cs
xchg
fdivrl
dec
repnz
lahf
dec
mov
shl
outsl
fcompl
pushf
stos
adc
push
adc
jl
pop
cmp
aas
dec
sti
gs
jbe
mov
lds
cmp
jl
sti
stos
addr16
enter
idivl
jne
sub
mov
pop
mov
pop
insl
outsl
pop
lods
repz
clc
cmp
addr16
loop
idiv
je
mov
pop
xor
sbb
mov
or
sbb
inc
clc
hlt
bnd
jl
mov
add
jo
adc
mov
push
dec
jecxz
adc
frstor
pop
mov
cs
pop
sbb
mov
sbbl
pop
pop
sbb
mov
mov
or
hlt
test
jbe
or
pop
push
popa
sbb
or
lcall
mov
fcoml
outsl
lock
das
jo
loopne
fdivrs
pusha
in
sbb
lahf
out
scas
push
or
xchg
sarb
out
shll
jno
mov
adc
xchg
pusha
fdiv
xor
inc
adc
jmp
or
mov
leave
push
mov
mov
hlt
bnd
jl
mov
fdivrs
lret
add
daa
pop
stos
adc
imul
out
out
or
hlt
bnd
jl
mov
xorb
pop
sub
mov
mov
daa
jmp
mov
adc
lods
stos
fwait
aam
bnd
push
jg
jge
pusha
in
xor
or
cli
ret
rorl
sbb
jns
insb
fcmovb
je
sarb
mov
xchg
fldcw
push
iret
jo
sarb
mov
out
stos
ret
lds
inc
adc
mov
sbb
leave
push
mov
pushf
das
mov
mov
jo
dec
aas
idiv
pop
mov
test
cmp
inc
cmpsl
popf
cltd
ja
pop
lods
jno
std
rol
arpl
xchg
add
jle
call
sarb
mov
loop
jge
xchg
aad
push
negb
pop
stc
or
adc
jecxz
repz
mov
arpl
mov
mov
nop
push
std
loopne
or
sbb
les
jmp
adc
clc
add
in
movb
xchg
xchg
xorb
pop
popf
xchg
push
sbb
int
xchg
cmpsl
out
imul
cli
mov
data16
ret
xchg
sub
pop
xor
mov
cmc
loop
jge
xchg
aad
push
cld
mov
je
insl
idivl
ret
adc
xchg
push
leave
and
lds
pusha
jle
xchg
lea
int3
rcrl
pop
add
push
pop
push
cmp
add
icebp
dec
sbb
out
or
fcmovne
sbb
lods
cs
mov
cwtl
rol
scas
in
push
inc
push
or
mov
sbb
fstpl
mov
xchg
inc
xor
in
stos
ret
out
mov
fldt
in
loope
pop
fistps
mov
hlt
int
inc
or
xchg
dec
push
push
cltd
fsubrl
loope
adc
loop
adc
jns
or
test
aam
pop
jp
pop
and
pop
mov
push
inc
push
sbb
aas
adc
xor
sbb
out
mov
ret
xchg
sub
add
cmp
push
outsb
cmpsl
and
jmp
call
sub
rclb
push
dec
cs
not
negl
cld
test
jne
pop
jle
ret
cmpsb
push
inc
inc
shl
lret
inc
ret
imul
aad
std
popf
test
jnp
int
jbe
mov
fidivs
mov
shlb
add
nop
mov
fcmovnu
pop
jmp
stos
mov
push
test
es
les
sbb
aaa
adc
push
dec
jecxz
mov
push
movsb
test
int3
outsb
mov
xor
pop
sahf
popf
leave
repz
insl
and
mov
ret
dec
push
call
inc
push
xchg
mov
std
inc
fcoml
jns
icebp
adc
pop
sarl
dec
into
lods
pop
xor
jecxz
stos
pop
cs
fcomp
and
je
addr16
sub
repz
xor
xchg
mov
cmpsl
and
push
insb
dec
imul
inc
adc
iret
mov
dec
or
neg
xchg
cmp
into
popa
mov
xor
insb
mov
mov
sbb
andb
repz
jo
jbe
push
in
pop
adc
adc
out
fucomi
addb
push
xor
inc
inc
rcll
inc
js
xchg
xor
push
jbe,pt
in
movsl
jne
shl
pop
add
idivl
sbb
test
jmp
mov
imul
cmp
aam
pop
loop
cmp
jno
leave
test
lahf
dec
lea
cmpsb
dec
notb
test
test
fcomi
jl
stos
fcom
add
add
scas
push
lods
in
pop
js
xlat
or
shll
mov
adc
add
stc
in
addb
adc
rcl
sbb
pop
mov
lret
cmp
insb
pop
addb
push
outsb
sbbl
popa
push
mov
push
push
push
ffreep
hlt
adc
xor
out
jecxz
rcrb
lods
add
adc
rolb
xchg
cmp
sbb
aas
xor
cli
inc
push
or
mov
xorps
pushf
fld
pop
lahf
adc
out
fcmovne
and
pshufw
addl
mov
lea
xlat
aad
cmp
xchg
and
pop
das
add
gs
or
fsubrs
pop
rcr
test
lcall
mov
cmp
jbe
and
jnp
sub
or
test
sbb
popf
scas
sub
mov
int3
push
inc
dec
cmp
xchg
jmp
in
ljmp
inc
aaa
sub
in
aaa
in
std
fpatan
mov
pop
rcrl
fistl
or
ljmp
and
or
loope
mov
add
mov
cmp
outsl
jp
or
pop
insb
in
pop
mov
cld
mov
je
insl
idivl
ret
adc
xchg
push
leave
and
cmp
mov
jge
lea
int3
rcrl
jno
rcrb
pop
push
cmp
shlb
lret
add
fucomi
or
ja
or
cmpsb
mov
scas
in
push
rorb
mov
fs
fstpl
gs
daa
aad
xchg
inc
xor
flds
arpl
mov
fldt
in
loope
pop
fistps
mov
hlt
int
inc
or
xchg
dec
in
rolb
mov
mov
and
jecxz
shlb
adc
dec
mov
loopne
push
inc
push
sbb
aas
adc
ljmp
add
cmp
xchg
sub
std
pop
xor
push
outsb
cmpsl
jo
call
js
pop
sti
ficompl
mov
mov
stc
dec
jle
not
negl
cld
test
jne
pop
jle
ret
cmpsb
push
inc
inc
rclb
jbe
iret
cmpsb
int
out
aaa
imul
cmp
mov
int
jbe
mov
fisubrs
ficoms
add
nop
mov
out
int3
outsl
int
test
es
les
pusha
add
add
push
dec
jecxz
mov
pop
xchg
loopne
xor
mov
xor
jb
xor
repz
mov
add
out
ret
dec
push
call
inc
push
xchg
mov
out
repz
jns
icebp
adc
pop
sarl
aam
clc
pop
xor
jecxz
stos
pop
movb
cmc
addr16
sub
repz
xor
js
out
test
stos
pop
push
mov
insb
dec
in
adc
pushf
iret
mov
dec
or
loop,pn
inc
xchg
ror
popa
mov
xor
lcall
cli
sbb
andb
repz
jo
jbe
push
in
pop
adc
insl
inc
xor
dec
test
inc
push
int
fs
jbe,pt
in
movsl
jne
cmp
aam
loope
jns
adc
mov
xchg
stos
mov
lods
adc
test
jmp
mov
sub
push
inc
cmp
aam
pop
and
mov
test
add
js
dec
lea
sub
fcoms
test
test
fcomi
jl
stos
fcom
test
xchg
mov
in
pop
js
xlat
or
mov
faddp
pop
push
sub
into
adc
into
iret
jg
idiv
fsin
addb
adc
roll
shrl
sub
rclb
addb
pusha
out
push
cmpsb
jmp
popa
push
into
inc
mov
push
jmp
hlt
adc
pop
imul
cwtl
jecxz
rcrb
lods
add
adc
rolb
xchg
cmp
test
jecxz
mov
push
jl
pop
daa
inc
cli
inc
push
or
sahf
lods
or
insb
mov
loop
xorps
pushf
fnstcw
mov
mov
and
cmpps
divb
into
mov
enter
mov
das
add
gs
dec
xorb
test
lcall
pushf
pop
push
xchg
std
inc
jecxz
popa
je
jnp
sub
or
test
sbb
dec
fs
iret
xor
inc
push
inc
dec
cmp
loopne
inc
xchg
pop
jge
into
sub
inc
aaa
fsubl
repz
insl
repz
pop
rcll
xchg
imul
lock
aas
mov
lahf
movsl
test
mov
add
push
mov
mov
cmp
mov
jg
mov
jecxz
sarl
or
dec
test
or
pop
and
or
loopne
pushf
sbb
cmp
fwait
sar
xor
fsts
icebp
adc
pop
adcb
cwtl
xchg
add
clc
sahf
jmp
in
inc
inc
cmp
test
push
sub
sbb
mov
fwait
imul
add
jbe
cmc
jbe
pop
ret
or
add
scas
jae
lahf
js
lods
rorl
mov
adc
adc
mov
xchg
aad
or
in
insl
lds
pop
pop
push
jmp
call
mov
icebp
lds
cmp
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
add
pop
sub
test
add
pop
sub
test
scas
stos
adc
fcoml
pop
int3
fcoml
mov
cli
xorl
test
pop
inc
mov
negb
mov
inc
inc
or
push
jns
inc
inc
or
push
jns
sbb
movsl
jb
out
xchg
lea
cwtl
aas
push
xchg
in
ja
or
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
add
pop
sub
test
scas
stos
adc
fcoml
mov
test
pop
inc
mov
inc
inc
or
push
jns
lahf
push
sub
test
xchg
loopne
mov
lock
in
or
mov
fisubs
mov
and
scas
pop
adc
inc
ret
test
imul
cld
dec
pop
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
and
xchg
cmp
xchg
and
inc
xchg
mov
sbb
test
fs
repz
push
or
out
sub
lods
xchg
fwait
loop
inc
jb
fildl
stc
addr16
lock
das
mov
jno
inc
cmp
out
push
jp
mov
cmovp
fldt
xlat
fsubrl
sub
jae
ror
mov
jmp
ret
xor
out
push
mov
lock
movsb
fdivl
push
imul
mov
sbb
adc
cld
sub
pop
add
or
pop
mov
iret
negb
sub
and
dec
and
jnp
and
jne
pop
fcomps
mov
adc
les
pop
or
sbb
stc
imul
sub
fistps
lahf
lea
out
and
clc
mov
imul
std
jb
jmp
iret
adc
push
ret
fidivl
mov
push
mov
fldcw
and
mov
outsb
cmp
loopne
leave
cmp
cwtl
xchg
pop
int3
pop
ds
xor
cmpsl
ljmp
fbld
xchg
fwait
stos
rcr
cld
cmpsl
pop
mov
inc
clc
flds
in
cmp
mov
cmp
aad
xchg
scas
mov
cmp
and
mov
repnz
push
sbb
xchg
mov
xchg
or
or
or
mov
inc
es
or
cmp
jmp
in
inc
dec
or
jl
decb
xchg
repnz
imul
lret
pop
mov
jne
ds
xchg
mov
rclb
outsb
dec
push
pop
repnz
aas
sbb
adc
cmc
dec
shlb
lea
rcl
pop
or
cmp
lock
mov
jl
pushf
out
jnp
fadds
es
sahf
xchg
js
fwait
sbb
mov
mov
frstor
out
xor
and
cli
push
fptan
outsb
sbb
mov
lcall
xchg
mov
mov
ret
push
cmp
adc
xor
dec
lahf
sub
add
cmp
sbb
pop
gs
mov
orl
out
mov
mov
mov
cmp
push
mov
test
nop
ss
adc
call
rcll
pop
mull
jns
cld
push
mov
sub
pop
mov
sarb
mov
mov
outsb
xor
loope
push
sbb
xchg
cmc
es
ljmp
push
leave
fcoms
mov
and
xor
mov
lret
mov
lcall
stos
inc
clc
push
or
lret
dec
in
mov
mov
or
push
adcl
fsubrs
mov
enter
jle
add
or
jno
stos
and
xchg
inc
sbb
jb
and
fimull
mov
mov
insw
adc
xor
lods
std
insl
push
test
cmp
inc
loop
sub
push
and
ja
jno
aam
aad
in
push
rcrb
mov
loop
push
into
stc
or
roll
in
cmpsb
and
rcrl
gs
xchg
xor
xor
cmc
mov
dec
sarb
jle
adc
shl
sbb
lcall
cld
xchg
sub
es
jnp
xchg
jo
mov
sbb
and
je
sbb
jle
cmp
fidivl
andb
lds
js
lret
pop
lahf
lret
cmp
mov
lret
or
push
jl
push
jmp
sub
cli
daa
jns
sbb
lds
sub
mov
aam
rorb
stc
shll
aas
idivb
jge
jbe
into
test
add
add
dec
push
push
or
popa
jle
fisubrl
lods
mov
in
cltd
mov
adcb
test
and
jp
outsl
repz
ja
inc
aam
fildl
push
test
inc
fxch
cmp
adc
xbegin
dec
icebp
outsb
xor
xlat
pop
dec
jnp
cmp
mov
xor
mov
or
aad
std
fidivs
or
push
xchg
dec
stos
lret
andl
xor
arpl
cmp
adc
xchg
shll
data16
and
push
pop
orb
fisubs
mov
jae
adc
pmulhuw
sub
adc
pmulhuw
cmp
lods
shrl
lcall
in
iret
lcall
iret
lcall
iret
lcall
iret
lcall
out
and
scas
inc
inc
popf
icebp
out
and
scas
inc
inc
popf
icebp
out
and
scas
inc
inc
popf
icebp
out
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
sbb
adc
pop
popa
lods
push
insl
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
or
std
mov
icebp
push
leave
mov
push
aad
inc
or
pop
ret
ja
or
adc
aam
pop
pop
jb
jbe
aam
pop
pop
jb
jbe
add
rolb
rolb
rolb
cmp
mov
inc
stos
js
inc
ss
inc
stos
js
inc
ss
inc
stos
js
inc
mov
jmp
pop
mov
jmp
pop
mov
jmp
pop
mov
jmp
pop
mov
jmp
pop
mov
jmp
pop
mov
jmp
pop
mov
jmp
pop
cmpsl
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
xchg
pop
scas
mov
aas
jo
sbb
xor
cmp
jmp
adc
jne
mov
sbb
sbb
mov
enter
xchg
dec
dec
gs
pusha
loope
push
gs
nop
xchg
mov
mov
sahf
jo
call
les
rcl
cmp
les
pop
into
loope
sbb
into
loope
sbb
mov
aad
mov
push
aad
inc
or
cld
inc
or
pop
ret
ja
or
adc
pop
ret
ja
or
adc
aam
pop
pop
jb
jbe
aam
pop
pop
jb
jbe
aam
pop
pop
jb
jbe
aam
pop
pop
jb
jbe
add
rolb
rolb
rolb
cmp
mov
inc
stos
js
inc
ss
inc
stos
js
inc
mov
mov
in
int
enter
dec
jae
outsl
dec
xchg
cmp
xchg
sub
jl
xor
xchg
mov
subl
add
aad
scas
pushl
imull
lret
sub
or
jb
push
pop
xchg
test
inc
lds
xchg
popa
sub
bound
mov
scas
fs
sub
xor
test
xor
cltd
mov
push
roll
cmp
movsl
adcb
loop
jge
xchg
aad
push
int
enter
dec
jae
outsl
dec
xchg
cmp
xchg
adc
hlt
out
mov
adc
jecxz
lock
add
popf
hlt
jnp
sbb
cmpsb
in
pusha
mov
mov
xchg
aas
aas
loop
jno
daa
in
lods
push
cmp
mov
cmp
into
bound
int
stos
jmp
dec
lret
jl
or
test
push
cltd
arpl
xor
cmp
movsb
fsubr
mov
or
xchg
xor
in
mov
add
stos
cld
and
mov
jp
stc
fwait
add
pop
push
cmpsb
add
cmp
mov
xor
push
sub
cwtl
mov
dec
sub
sub
add
add
repz
ret
inc
fcompl
sarl
mov
movb
call
outsb
stos
add
pop
rclb
and
fwait
xchg
mov
push
xor
fsts
iret
insb
rorl
stos
nop
push
jbe
rclb
js
dec
lret
and
out
fdivr
add
insb
cmp
mov
loop
fwait
mov
popa
scas
daa
xchg
push
outsl
fs
int
push
sub
jp
sub
xchg
jbe
mov
fisttpll
adcb
mov
adc
pop
fildl
hlt
call
jo
and
cli
or
js
pushf
pop
add
mov
int
xor
push
stc
mov
add
loop
add
fsubrs
lods
insb
add
xor
mov
or
mov
inc
or
cmpsl
imul
fadds
jp
int
mov
into
push
xchg
pop
push
mov
fdivr
xchg
leave
mov
push
cld
clc
fs
les
add
jno
cmp
mov
jmp
pop
test
lea
dec
mov
aaa
stc
jge
bound
adc
push
roll
pop
mov
leave
rolb
lock
dec
jp
jne
and
adcb
or
jnp
testl
jl
inc
fistpl
das
inc
dec
xchg
xorl
inc
mov
or
xor
lock
and
mov
fisttps
jo
sub
stos
jmp
sub
rorl
stc
push
dec
push
incb
inc
mov
inc
mov
xor
and
mov
jno
js
fmul
loope
out
fmull
ret
nop
cmovno
roll
jns
inc
dec
popa
enter
or
adc
sub
push
popf
jns
mov
cltd
outsl
movsb
lock
inc
aaa
push
sbb
es
sbb
xlat
scas
jb
mov
adc
mov
cwtl
adc
xchg
fucomip
mov
and
mov
dec
mov
jge
ja
pop
push
push
lcall
cmp
ds
mov
pushf
jle
add
mov
jno
scas
xchg
movb
add
jmp
or
pop
push
andb
mov
fcmovne
pop
fwait
rcrb
sub
xorb
mov
scas
repz
arpl
push
loop
fstp
adc
lret
inc
out
sbb
cwtl
add
idivl
inc
mov
push
shll
pusha
cmpsl
adc
add
aad
mov
loop
int
sub
mov
push
dec
movb
sbb
xchg
inc
cmp
bound
inc
add
dec
mov
add
pop
adc
push
mov
aad
adc
pusha
inc
aas
lret
out
cmp
mov
repz
out
adcb
std
fiadds
aad
or
xchg
lret
imull
in
in
sbb
cmpsb
test
push
std
in
lret
jno
stos
je
in
cmp
mov
mov
orb
es
rol
ret
cwtl
fcompl
sbb
in
test
lods
and
push
int3
jl
fmulp
cmp
ret
ret
push
fcompp
mov
dec
push
out
mov
push
and
shlb
repz
cld
mov
jbe
bound
std
ljmp
xchg
pushf
decl
inc
bound
push
or
es
add
mov
loopne
fists
sti
clc
xchg
test
xchg
sti
fsubrs
psrlw
cmc
fistpll
adc
pop
in
sub
and
mov
xchg
ja
xor
jo
out
add
fnstcw
xchg
sbb
mov
mov
jne
or
fiaddl
jnp
lods
rcrb
pop
aam
xchg
data16
push
test
bswap
repz
pop
ret
mov
testl
std
or
xor
adc
cli
ljmp
pop
cli
xchg
in
iret
fsubp
dec
mov
mov
clc
inc
aaa
inc
cmp
stc
loop
xchg
adc
jne
sub
loop
pop
cld
add
into
jge
adc
fwait
insb
push
aad
sti
mov
stos
sbb
xorl
movsl
add
inc
or
shll
rcl
mov
dec
pop
mov
into
push
negb
mov
inc
sbb
push
outsb
sahf
inc
sbbb
pop
cmp
lea
pop
or
dec
scas
ficomps
push
inc
mov
jnp
imul
mov
adc
sti
or
sub
fisubrs
dec
outsl
lahf
or
xor
dec
inc
mov
dec
push
outsb
rcl
loope
adc
orb
popa
xor
pop
aad
or
or
enter
sbb
cs
pusha
insl
outsl
popa
in
jo
jmp
xchg
les
inc
ss
mov
test
mov
sbb
sub
mov
add
cmpl
xor
fwait
xor
xchg
jb
in
int3
xchg
shll
sbb
sbb
sub
outsl
xor
and
push
loop
imul
cmp
mov
sub
dec
xor
gs
int3
or
xchg
aad
sti
addl
ret
push
stos
insl
stos
mov
adc
fwait
stos
pop
dec
inc
loopne
mov
xor
hlt
inc
adc
cli
or
repnz
out
sbb
cmpsb
fwait
and
inc
subl
sub
out
pop
rcl
add
and
dec
xlat
xchg
pop
jge
neg
cmove
adc
int3
pusha
dec
or
mov
xchg
aam
and
sbb
cmp
in
sarl
mov
mov
mov
xchg
jno
mov
mov
loopne
fcmovnu
popf
movsb
push
add
icebp
hlt
sub
jo
dec
and
stos
in
pop
push
int3
cmpsl
out
fs
xor
push
out
xorb
cmp
adc
mov
add
jno
mov
jbe
data16
mov
pop
mov
mov
daa
sbb
out
pcmpeqd
and
mov
outsb
jge
data16
lcall
loope
push
das
scas
and
imul
sahf
pop
add
push
xor
add
pop
shll
out
mov
lds
cmp
neg
inc
jle
adc
inc
jne
stc
mov
out
fnstcw
fdivp
and
add
pusha
pop
loop
sub
adc
enter
xlat
lods
out
sahf
xchg
mov
xlat
xchg
leave
cld
sbb
in
fwait
outsb
daa
nop
add
or
jns
filds
repz
jo
adc
push
jecxz
fidivs
lea
mov
mov
stc
pop
jle
push
inc
lahf
adc
mov
jl
xor
fldl
sbb
mov
push
mov
incb
xchg
and
sbb
scas
add
iret
out
xchg
adc
mov
fildll
pushw
inc
rol
sahf
popf
call
loopne
insl
sbb
mov
push
cmp
xchg
jle
nop
jg
leave
clc
and
test
jns
arpl
push
lret
cmp
popa
add
mov
jmp
cld
test
push
push
jnp
sbbl
in
movsb
mov
add
push
das
sub
out
popa
loope
dec
and
movsb
pop
and
push
stc
mov
cmp
xor
push
fcomp
pop
xchg
push
sti
jbe
cs
das
xlat
push
push
add
pushf
cmp
fcomip
inc
add
pop
mov
jbe
dec
mov
xorb
iret
adc
das
adcl
jg
xchg
adc
xchg
dec
xor
add
mulb
test
jae
xchg
jo
push
mov
mov
enter
or
test
insl
push
pop
es
iret
aaa
cwtl
mov
mov
pop
out
inc
inc
ss
fidivrs
push
sub
mov
pop
out
das
test
push
inc
into
loope
ljmp
xor
cmp
popa
and
pop
add
sbb
lods
cmpsl
jb
mov
addr16
xor
lods
adc
ret
sahf
out
test
movsl
imul
xor
outsb
dec
out
inc
icebp
aam
cld
lret
or
mov
fisubl
lgs
inc
cmpsb
xor
iret
repnz
sbb
adc
js
cmp
sarl
andb
and
ss
and
pop
push
xorb
pop
cmp
nop
sub
mov
in
mov
add
imul
out
out
sub
or
out
lret
jno
xorb
ss
xlat
es
xlat
neg
js
pop
popa
cmp
outsb
mov
lret
sbb
pop
pushf
push
stc
xor
mov
jecxz
incb
fistps
dec
loopne
pop
cmp
addb
sbb
xchg
repnz
pop
mov
push
aam
movsb
adc
movsl
jle
aaa
inc
fidivs
push
cmp
cmpl
repz
xchg
clc
sbb
das
hlt
pushf
push
rclb
insl
rolb
adc
inc
into
mov
cmp
mov
fnstcw
cmpsl
scas
mov
mov
add
xchg
inc
dec
js
ds
pop
stos
leave
lcall
out
add
jl
enter
mov
mov
mov
loop
push
pop
jge
loope
orb
shlb
sub
dec
cmp
pop
jb
cltd
push
sbb
pop
xchg
xchg
inc
push
insb
leave
popa
cmp
and
dec
insl
mov
mov
stos
test
js
outsl
repnz
into
icebp
popa
cmp
daa
push
xchg
adc
jns
pop
sbb
or
sti
push
iret
push
sub
lock
fs
xor
dec
xor
push
push
cld
fs
mov
and
les
test
inc
add
jle
push
flds
loopne
sub
jae
sub
decl
cmp
bound
stos
sub
mov
gs
mov
fisttpl
cmp
xor
pushf
or
lret
loop
cmc
xchg
adc
jl
out
jnp
pop
addr16
jb
imul
cmc
insb
ja
aaa
mov
and
fdivr
sub
mov
sub
and
mov
insl
dec
jns
ja
cmpsb
jne
cmc
test
loope
shlb
data16
data16
and
push
fs
subl
adc
andb
push
lea
scas
mov
xor
scas
sahf
jmp
add
out
ja
adcb
mov
mov
jbe
push
loope
fsub
mov
cmpsl
mov
or
xchg
arpl
cmc
lret
cmp
lahf
jge
bound
data16
loopne
mov
adc
adc
out
mov
dec
cmp
mov
mov
mov
cld
popa
mov
adc
xchg
mov
cmp
cmp
test
inc
mov
jg
push
imul
fs
das
adc
or
mov
jge
cmp
dec
adc
mov
repnz
fs
cltd
mov
mov
sbb
lds
pop
ret
jnp
fisubrs
push
dec
mov
out
jo
pop
pushf
icebp
aas
cmp
imul
cltd
dec
sbb
xchg
adc
cmp
movsb
add
pop
clc
mov
jne
lock
stos
sub
movsl
and
add
cmp
pop
pop
cmp
xchg
je
outsl
lcall
xorb
jae
adc
clc
xcrypt-ctr
cmpsl
sbb
mov
push
ret
aaa
stos
test
add
je
mov
jge
add
push
mov
sbb
inc
mov
dec
push
cli
push
addr16
xchg
pop
mov
jo
mov
add
in
mov
mov
jb
std
stos
into
roll
sbb
into
adc
mov
inc
jns
sbb
sbb
lods
daa
in
sub
add
ror
jge
cmp
sahf
fimull
mov
inc
mov
mov
mov
adc
or
jecxz
dec
jle
gs
imul
adc
jmp
xor
ljmp
sbb
xchg
insb
xchg
mov
mov
jno
mov
pop
or
cltd
popf
aas
mov
in
idivl
jecxz
cld
call
mov
gs
add
flds
outsl
rolb
icebp
and
outsl
mov
or
mov
leave
jp
jne
jle
and
xchg
sub
adc
lods
test
sbb
dec
stc
nop
inc
xor
out
jns
insl
inc
data16
icebp
sub
and
lret
mov
sbb
sbb
fnstenv
jns
dec
pushf
loop
add
xchg
in
lods
dec
lret
push
mov
push
sbb
lock
push
and
enter
loopne
das
daa
fndisi(8087
adc
or
xchg
jns
mov
lods
pop
out
icebp
pushf
add
or
xchg
lods
mov
es
jnp
repnz
test
popf
jmp
movsb
mov
mov
xchg
pushf
dec
pop
jnp
insl
pop
test
push
test
inc
jmp
pop
test
lock
cwtl
clc
aam
mov
lret
sbb
cli
add
int3
mov
mov
nop
fstp
sbb
or
movsl
ja
xor
fdivp
pop
imulb
fnstsw
pop
loope
and
fsub
lret
stc
jl
scas
or
jae
pop
mov
pop
xchg
rcll
sub
stos
test
push
dec
mov
mov
ds
into
cld
mov
frstor
or
ret
xchg
orl
xor
pop
dec
rolb
nop
rol
repz
in
inc
dec
in
push
sahf
mov
dec
inc
subl
mov
xchg
decb
add
sbb
push
dec
movsb
fisubl
jnp
jbe
test
insb
and
adc
pop
test
sub
push
je
jo
mov
cld
adc
cmp
clc
xlat
jnp
mov
hlt
call
add
test
and
cmp
stos
notl
dec
pop
into
cmp
sbb
lock
add
xor
pop
arpl
scas
insb
push
xlat
push
or
jb
xor
movsb
insb
sbb
push
mov
mov
in
sbb
sbb
ds
inc
pop
jne
cmp
mov
mov
xorb
mov
xchg
loop
int3
cltd
pop
adc
sub
sti
mov
in
mov
shlb
jl
jg
xor
xchg
sub
jns
lret
fsts
add
iret
mov
and
or
stos
pand
sub
lods
mov
in
orb
je
push
or
not
pop
stos
jle
leave
and
xchg
push
icebp
adc
out
adc
xor
notl
dec
mulb
ror
mov
mov
inc
push
ss
fwait
loope
shll
xchg
shll
test
xchg
cs
jl
pop
shl
shlb
xchg
test
jle
mov
pop
add
shll
clc
addb
mov
in
pop
clc
mov
sub
and
fnstsw
shr
sbb
lds
rcl
cmc
mov
das
dec
cmpl
sub
mov
mov
call
push
dec
jecxz
xor
mov
pop
mov
call
jge
mov
xlat
push
and
clc
fidivrl
xor
push
out
ss
or
cwtl
cltd
cld
xor
push
jne
dec
fisubrs
lret
push
jl
or
xchg
lock
repz
sbb
test
push
ret
cwtl
mov
xchg
jmp
xor
dec
outsb
aas
adc
cld
pusha
xchg
int
fsubs
jnp
lcall
sub
inc
sub
mov
out
jp
xor
mov
movsb
or
ds
lods
fsubrl
pushl
fcoml
mov
addr16
jnp
cwtl
scas
pop
out
sub
or
jecxz
xchg
inc
pop
cmp
or
jbe
dec
xchg
mov
pop
pop
add
in
xor
push
xor
cs
mov
maskmovq
idivl
xlat
pop
hlt
xor
jno
out
in
sarl
mov
ud2
mov
lods
cmp
shll
and
dec
sub
mov
push
cmp
xchg
out
jns
stos
mov
pop
sub
or
push
push
in
frstor
movswl
sti
outsb
mov
xchg
icebp
int3
jbe
cwtl
mov
pusha
daa
xchg
push
rcrb
jmp
push
sbb
add
mov
xor
pop
sub
mov
psubsb
int
add
call
fwait
add
and
lock
aaa
imul
fnstcw
push
push
aad
cmp
test
fstp
or
popf
xor
pop
jecxz
push
cli
shll
loopne
sti
sub
js
cmp
in
adc
test
ja
ljmp
or
in
jp
rcl
push
cmp
mov
mov
into
shrl
push
es
jbe
mov
push
loope
jae
jnp
push
jns
sti
adc
xor
push
in
jge
lock
adc
xchg
add
push
dec
icebp
das
adc
mov
and
sahf
rcrl
cwtl
push
adc
in
inc
lret
pop
repnz
or
push
jmp
sub
lock
sbb
xchg
xor
jo
cmpsb
andb
xorb
ficompl
test
add
push
sbb
mov
push
mov
mov
xor
fcompl
push
push
test
and
jne
ss
jle
shll
push
jl
andl
unpckhps
dec
stos
push
inc
outsb
mov
cmc
ds
int
mov
sub
jo
lret
cmp
into
jb
mov
cli
xchg
mov
loope
push
pop
inc
movsb
test
xchg
out
and
shr
push
lea
dec
mov
pop
push
sbb
out
pop
hlt
inc
pop
aas
sub
scas
pushf
add
iret
loope
popf
cmp
sbb
push
sar
cmp
inc
test
test
cmp
daa
das
jns
pop
icebp
xchg
outsb
loopne
stc
addr16
shlb
cmp
cmpsb
shll
jbe
rcrb
addb
test
lret
outsl
pop
adcb
sub
pop
jl
pop
aaa
les
dec
fsts
and
sbb
pop
ss
inc
jne
call
xorb
mov
and
jle
dec
pop
lret
cld
inc
fisttpl
push
lret
ss
imul
pop
leave
fsubrp
push
jmp
push
fsub
mov
cli
jp
movsb
mov
jns
into
mov
iret
mov
mov
daa
jg
lcall
push
and
nop
fs
in
sbb
movsl
mov
sbb
or
adc
sbb
sarb
xor
xchg
daa
adc
or
xchg
adc
mov
push
jmp
fdivl
out
lret
pop
cmpsl
cs
add
jb
ss
xor
loope
icebp
adc
fadd
mov
lea
outsl
jecxz
repz
int
pop
cltd
icebp
pushf
mov
xchg
cwtl
pop
aas
mov
pop
fdivs
push
adc
arpl
insl
pop
vunpckhpd
or
cmp
jo
outsb
or
out
cmp
daa
test
nop
push
mov
aam
xchg
adc
int3
arpl
and
fs
xor
jp
mov
add
inc
mov
push
pop
cmpsl
loopne
int
insl
in
or
adc
clc
push
mov
loope
ja
popf
fsubr
push
pop
lods
mov
dec
mov
test
dec
lea
mov
loopne
or
pop
dec
in
out
cmpsl
aad
and
pop
mov
lds
xor
adc
daa
sahf
cmp
sub
jnp
cmc
mov
iret
adc
cltd
rcll
inc
outsl
jecxz
loope
inc
mov
mov
cmc
fldenv
or
sahf
frstor
pop
inc
pop
mov
fmuls
cli
cmp
xchg
cltd
jle
mov
stos
shll
insl
adc
xor
icebp
loope
cs
mov
fistpl
repz
aaa
or
push
jb
and
xchg
push
movsb
rcr
imul
je
jbe
ljmp
xchg
add
jge
mov
test
pop
pop
sub
test
inc
sti
push
inc
jb
negl
or
or
jge
das
call
or
lea
add
cmc
push
adc
adc
dec
xor
sub
popa
xor
xchg
cld
or
push
ds
arpl
aad
push
mov
sub
in
mov
mov
fdivr
mov
fwait
mov
sbb
test
popa
fldenv
or
jno
pushf
out
add
cmpsb
push
movsb
cwtl
subl
nop
xchg
aas
icebp
mov
mov
pusha
sbb
xchg
out
push
xchg
cmp
shrl
push
mov
testl
pop
mov
adc
gs
fwait
and
cld
or
out
add
mov
pop
and
inc
adc
cmpl
jmp
cli
push
lret
sahf
aas
mov
xchg
dec
mov
test
and
mov
and
mov
add
pusha
rcll
mov
dec
mov
or
outsb
insl
les
sbb
nop
stc
daa
adc
pop
and
or
out
xor
push
ja
stos
fcompl
jge
sbbl
insb
shlb
aas
movsb
xchg
sbb
pop
cmp
int3
dec
cmpb
inc
in
iret
adcb
pop
cmp
lcall
out
aam
into
mov
xor
outsb
xchg
and
lods
das
popf
pusha
lret
into
fs
cmpsb
mov
xor
xchg
push
mov
pop
pop
inc
mov
test
je
repz
aas
loopne
roll
addr16
bound
sahf
jns
jne
bound
fcoml
aam
outsb
adc
jle
cmp
sbb
jns
dec
push
lret
push
xchg
es
mov
out
pop
in
sbb
push
and
xor
push
adc
aam
out
push
or
in
test
xchg
popf
xchg
push
pop
adcl
cs
movsl
bound
outsb
pusha
fimull
arpl
mov
jns
out
or
dec
lods
cmp
xor
pushf
jb
shlb
cmpsb
ret
enter
imull
cs
pop
shlb
pop
lret
lahf
or
lods
xchg
pop
fs
cmp
mov
sbb
sub
mov
xor
dec
lahf
js
rorb
push
clc
pop
sbb
mov
fmul
lods
add
popf
mov
cmp
sbb
es
and
inc
pop
mov
fnstenv
and
push
push
sub
ficompl
dec
pop
or
add
xlat
cli
ss
cmp
shlb
insb
pop
xor
mov
fisttps
pop
pause
out
adc
pop
leave
ljmp
scas
fcoml
xor
mov
outsb
test
out
fbstp
xchg
cmp
jns
popa
mov
or
sub
mov
push
add
aad
mov
or
into
nop
pop
and
test
clc
es
pop
mov
clc
jle
adc
add
dec
pop
mov
daa
push
ds
mov
mov
xchg
and
xchg
mov
loop
sarl
pop
add
xchg
inc
test
mov
and
bound
repz
aaa
dec
loope
out
leave
lds
push
mov
inc
jno
fistl
shl
jl
test
mov
loop
xchg
lcall
sub
call
push
xchg
add
xchg
repz
popf
andb
aaa
push
ljmp
pusha
or
call
shrl
push
push
sub
mov
ret
and
xchg
mov
insb
sahf
fsts
mov
inc
outsb
cmp
push
push
fisubrs
dec
cld
nop
mov
movsb
dec
mov
dec
jno
fbld
mov
jl
test
sbb
xchg
lock
js
jns
into
aam
loopne
movsb
out
es
call
jne
enter
adc
hlt
jae
jnp
stc
inc
and
cmp
add
sahf
stos
pop
js
mov
mov
fs
out
or
adc
out
and
mov
shlb
push
testb
shll
jno
mov
int
pop
jae
xchg
fisubrl
cmp
dec
sbbl
fsubl
cmp
repz
xor
sarl
into
in
xchg
into
xchg
scas
inc
add
add
rcrl
idivb
test
xchg
fildl
jns
nop
pushf
jae
enter
xchg
mov
mov
cltd
ret
jg
pop
fldenv
cmp
aam
inc
push
lds
fistps
mov
lcall
mov
pop
bound
aad
insl
mov
sbb
pop
add
stos
bound
shr
addr16
lahf
mov
stos
sbb
fwait
inc
push
mov
nop
pop
or
jnp
ret
in
in
xchg
push
mov
cltd
inc
sub
negl
mov
add
out
out
jmp
sarb
mov
inc
aas
int3
arpl
push
iret
jg
xchg
es
mov
lods
mov
mov
mov
js
push
lahf
imul
mov
lock
test
mov
inc
jo
cmp
scas
push
mov
int
loopne
sahf
mov
jl
lods
inc
pop
out
das
mov
sbb
push
call
jae
divl
nop
fstps
fs
aaa
je
in
insb
mov
movsl
ja
push
xchg
dec
mov
pop
sbbl
and
int
pop
or
movsl
inc
jno
add
in
push
push
call
cwtl
xlat
leave
idivl
xchg
pop
iret
mov
nop
insb
xchg
cmp
adc
xchg
xchg
jno
lods
hlt
divl
xchg
jnp
shlb
out
stos
jns
je
leave
jae
and
lcall
ret
cmpsl
xor
add
or
loope
xor
aas
fadd
push
and
xor
fistpll
jle
jp
mov
sub
lods
lret
dec
lock
stc
decb
mov
call
ret
mov
add
int
jmp
pop
lret
roll
push
cwtl
int3
pop
lea
adc
cmpb
jmp
mov
and
dec
dec
imul
xor
sbb
rcll
pop
push
adc
nop
adc
gs
mov
jg
or
jg
scas
inc
dec
and
push
push
fsubrl
daa
dec
ljmp
xchg
sahf
jbe
and
mov
dec
pusha
mov
cwtl
lret
stos
add
xchg
in
stos
cmp
adc
repz
jb
or
stos
fs
cwtl
popa
pop
mov
jo
popf
clc
dec
movsl
cmp
push
shlb
mov
in
daa
scas
pushl
shrl
pop
jp
mov
lds
outsl
roll
out
testb
cmp
cmp
xor
mov
dec
or
mov
jecxz
jns
jbe
pop
adc
adc
jecxz
mov
adc
sbb
or
repnz
pop
dec
sub
adc
mov
in
bnd
adc
mov
loope
mov
jns
sub
sbb
xor
fnstcw
mov
mov
sub
into
fdivs
scas
subl
sarb
xchg
aas
inc
add
andb
sbb
or
fistpll
xchg
pop
or
xor
pop
mov
lock
sub
into
shlb
adc
pop
pop
repz
mov
and
dec
xor
aas
mov
clc
mov
lock
out
cmc
push
addr16
ss
aam
ficoml
nop
test
jg
movsb
mov
in
fidivl
cmp
les
lock
roll
cltd
xor
adc
repz
rcll
daa
dec
sbb
xor
loopne
jb
jb
pop
outsl
lahf
mov
or
jmp
or
push
loope
lcall
bswap
jno
push
fiaddl
das
sbb
movsl
inc
mov
adc
test
aam
xlat
out
xor
lcall
std
mov
addr16
inc
push
in
xor
push
pop
in
pusha
mov
or
push
ret
and
xor
imul
call
rcll
jno
xor
loopne
xchg
es
jbe
sub
icebp
xor
xor
and
stos
sbb
fisttpl
popf
cmp
dec
ficompl
sbb
push
leave
pop
mov
jb
imul
mov
stos
sub
pop
sbb
sbb
ret
repnz
pop
movsb
ljmp
jle
fisttps
loope
stc
frstor
or
cwtl
andb
pop
cmc
jg
int3
xor
mov
add
xlat
cmp
mov
cld
mov
shr
pop
outsb
in
test
adcl
cld
repnz
mov
jmp
movsb
mov
jno
xor
imul
in
mov
jo
push
mov
addr16
std
inc
nop
mov
cmpsb
mov
xor
cmp
in
push
push
out
lcall
and
and
xchg
jle
popl
aad
cmp
jb
and
mov
inc
not
and
rolb
shll
xchg
cmpb
adc
push
mov
xchg
shl
aam
out
jo
sub
lea
mov
pushf
mov
add
push
pop
xlat
cltd
pop
sbb
inc
pop
insb
movsb
or
das
test
in
aam
gs
in
flds
ss
pop
pop
add
mov
and
mov
mov
cmp
adc
sahf
repnz
pop
add
mov
stos
andl
sbb
cmc
sub
insl
je
rcrl
sub
pop
cmp
pop
mov
mov
fsubl
and
movsl
cmp
popa
orl
or
hlt
xor
dec
loop
call
lds
jmp
add
adc
aad
std
cmp
fldl
or
pop
and
ret
negb
and
lods
pop
decb
pop
lret
cmp
cmp
dec
shrb
mov
and
cli
insl
sti
cmp
inc
das
xchg
mov
iret
xor
ret
jnp
jmp
insb
sti
cmp
movsl
adc
adc
cmp
sbb
popf
scas
int3
aad
and
inc
sti
cs
cvtdq2ps
lock
dec
sub
test
int
std
in
cli
jp
gs
inc
ror
xor
or
xchg
add
jb
jmp
lret
mov
fxch
jmp
mulb
cmp
sarl
dec
cwtl
xchg
xchg
mov
cmpb
xor
rclb
insb
movsb
insl
lds
shll
fildll
xchg
stos
mov
mov
mov
cltd
movsl
pushf
jecxz
jne
cmc
int3
jmp
xchg
cmp
test
pushf
in
insb
fnstcw
cmp
and
std
jecxz
mov
and
inc
push
out
and
jne
jns
inc
inc
or
or
lret
mov
lea
jge
nop
and
pop
shrb
bound
inc
mov
xor
outsl
mov
mov
mov
fst
filds
mov
mov
in
xchg
dec
push
xor
cmp
test
inc
std
arpl
stos
movsb
jl
cmp
xor
ficoml
sub
mov
pop
push
cltd
clc
repnz
cmpsb
std
shr
xchg
add
je
aad
lds
aad
cmp
mul
aam
mov
cmp
cld
cli
add
pop
push
and
sub
dec
push
push
pusha
imul
shlb
fisubrl
das
mov
mov
jbe
and
std
fs
mov
adc
sub
data16
mov
sub
xor
add
sbb
arpl
in
cmove
inc
and
scas
mov
rclb
clc
push
mov
mov
cmp
fistl
and
ja
and
inc
jb
or
dec
std
dec
push
loopne
testl
es
xchg
sub
shl
push
push
jmp
fcoml
ret
jge
xchg
pop
stc
into
lock
jnp
in
les
mov
lock
lret
push
leave
aas
jno
xchg
pop
mov
in
mov
sbb
aas
pop
data16
xchg
sub
icebp
imul
lods
inc
mov
outsl
add
add
pop
or
insb
jne
hlt
movsb
jbe
dec
movsl
or
xlat
gs
gs
aaa
ss
push
pop
pushfw
cmp
or
push
fnsave
and
stc
sarb
or
pop
cmpl
call
jle
mov
test
cld
inc
dec
mov
daa
xor
mov
push
xlat
loopne
loopne
imul
or
mov
lcall
in
cld
pop
repnz
push
fnstsw
xchg
mov
repnz
lret
outsb
sub
push
arpl
clc
pop
jnp
pushf
mov
jle
lea
out
data16
stos
fisubrs
jl
push
roll
jmp
in
mov
mov
ljmp
mov
cmp
cli
sbb
test
jnp
mov
pusha
popl
pop
and
cld
push
in
fs
insb
clc
dec
jmp
js
rorb
pop
stos
adc
mov
dec
or
test
repz
sbb
mov
sbb
cmc
in
xor
icebp
ja
inc
xchg
mov
inc
jle
pop
and
imul
dec
xchg
xchg
aad
sti
scas
mov
outsb
sub
js
leave
pop
mov
jno
in
adc
dec
sub
outsb
lods
int3
fdivrs
in
mov
cltd
xor
mov
aaa
and
push
cmp
and
cmp
mov
jne
pop
movsl
movsl
inc
mov
dec
jno
push
out
inc
stos
push
fwait
icebp
mov
imul
mov
xchg
sub
test
and
mov
and
int3
in
xchg
sti
push
mov
jbe
daa
mov
or
gs
push
dec
stos
cmp
pop
cmpsb
popf
mov
jg
fdivs
cmpsb
sbb
fwait
ss
jge
jae
insb
dec
insb
stos
test
and
frstor
lahf
inc
sahf
push
add
mov
xchg
loope
sub
lret
fisttpll
add
inc
or
loop
push
call
fimuls
outsb
jnp
aas
lcall
in
cmpsl
mov
mov
push
jle
mov
es
adc
lods
outsb
xchg
fisubrs
mov
pusha
and
sti
movsb
pop
add
inc
and
std
add
addb
lods
adc
lods
pushf
cmp
jg
int
xor
lds
xchg
xchg
add
les
lret
pop
sbb
and
and
mov
addb
jb
lock
lret
sahf
xlat
lock
shlb
cmp
fildl
stos
js
arpl
aam
cmp
cmpb
into
jnp
enter
inc
hlt
shl
daa
imul
nop
int
es
sbb
or
adc
xor
xchg
arpl
sub
addl
inc
subl
outsl
cmc
fcomps
mov
in
lea
cltd
stos
rcrb
mov
add
rcll
xor
xchg
pop
mov
clc
pop
pop
data16
enter
jno
pop
cwtl
pop
out
sub
dec
jae
push
dec
pop
lcall
xchg
bound
gs
sbb
icebp
lds
or
inc
sti
mov
out
mov
push
cltd
les
jbe
xor
sbb
push
sbb
or
dec
pop
mov
fiaddl
xchg
push
xchg
outsb
jecxz
aaa
daa
test
mov
sbb
push
jl
xchg
cmc
push
and
lret
out
enter
lahf
jnp
repnz
cld
test
aaa
insl
call
inc
xchg
loopne
and
sbb
mov
and
or
ss
adc
push
test
enter
mov
inc
int3
dec
or
fwait
ljmp
xlat
cwtl
dec
js
ffree
testb
inc
inc
cmp
push
cmp
inc
sbb
cmp
shlb
adc
xchg
aaa
in
mov
sbb
repnz
mov
lret
xlat
inc
jo
inc
testb
xchg
mov
adc
or
mov
pop
sbb
roll
jle
fsubrl
stos
mov
push
lcall
mov
icebp
push
mov
ss
and
addr16
enter
repz
sub
cmp
out
stos
and
push
xchg
sbb
les
push
mov
mov
mov
in
iret
aad
inc
push
push
pop
or
jb
ss
lret
push
inc
lcall
jg
adc
in
xchg
les
cli
push
push
mov
jp
mov
in
cmp
mov
jne
dec
jne
cltd
jne
xchg
loope
notl
push
insb
inc
xor
imulb
mulb
sbb
fistpl
ja
cmp
mov
mov
sub
xchg
popf
add
out
int
xchg
jb
leave
rcrb
xchg
mov
pusha
inc
cmp
and
cltd
pop
add
push
ss
and
jno
ja
push
dec
stos
imul
sbbl
jno
cwtl
inc
stc
dec
pushf
idiv
mov
loope
jns
adc
shl
sti
incl
xchg
cli
bound
and
sbb
addr16
and
ret
sti
call
jle
push
dec
fs
xor
mov
decb
outsb
stos
fnstsw
pop
xor
and
jg
sbb
adcb
dec
cli
mov
mov
mov
sbb
sbb
cmp
jg
test
daa
shlb
xor
cmpb
cmpsl
fstps
add
adcl
int3
fdivl
adc
test
jg
xchg
xchg
leave
jbe
jb
and
cli
cmpsl
shrb
ret
cmc
jo
pop
loopne
mov
push
test
fidivl
cmpsb
lea
and
mov
xlat
lret
dec
fiadds
xchg
jbe
sti
loope
out
les
aas
mov
and
das
xchg
mov
mov
inc
test
xchg
fidivl
testb
icebp
and
roll
int3
enter
scas
mov
lods
and
inc
mov
mov
mov
or
add
cmp
jmp
inc
mov
loop
std
sub
sbb
sahf
xor
and
pop
dec
lock
pop
pop
pop
mov
mull
rorl
inc
add
sub
jbe
and
movsl
mov
stos
jge
repnz
or
mov
sub
push
jns
mov
sub
fs
mov
adc
pop
or
cli
mov
xor
dec
mov
and
adc
and
sub
or
cwtl
hlt
xlat
xor
sti
mov
aaa
lcall
fs
jo
loop
xor
mov
fimuls
das
cmp
ficoms
repz
jg
cmp
movsl
adc
in
mov
sahf
adc
pinsrw
mov
inc
adc
cmp
cmp
pop
loop
cli
push
lods
jne
xchg
cmp
or
dec
mov
repnz
in
test
or
aam
test
rcr
hlt
out
adc
push
bswap
call
inc
mov
jae
sub
push
js
mov
inc
cmp
xlat
in
sub
jno
push
sbbb
sub
lcall
sub
jl
cmpsb
mov
aas
subl
or
insl
shll
jl
mov
jmp
lds
mov
fwait
dec
jecxz
idivl
sti
mov
fbstp
sub
add
test
pop
sbb
add
es
arpl
clc
loope
pop
cmp
xlat
push
rclb
pop
sbb
dec
andl
xor
movsl
out
out
push
scas
and
push
xor
test
lods
mov
aad
pop
cmc
dec
xor
mov
cmp
lods
cwtl
push
daa
and
enter
jae
push
and
cmpsl
es
push
std
fs
orb
jl
es
mov
lea
jno
cmpsb
cs
insl
pop
sbb
andb
pop
sbb
sub
or
bound
dec
jne
shrb
loope
ret
adc
cli
cs
add
lret
mov
daa
hlt
loope
fsts
and
xchg
bound
scas
xlat
xor
lds
imul
xchg
push
xchg
stc
dec
inc
and
xchg
in
mov
lahf
aad
mov
int3
cli
lret
mov
pop
cli
inc
pop
scas
and
or
jnp
sbb
mov
xor
jg
or
sub
jo
dec
adc
xor
lret
sub
dec
mov
jbe
push
add
mov
adcb
xor
xchg
mov
fucom
mov
loope
clc
scas
push
je
in
stc
fbstp
mov
addr16
int3
in
inc
pop
mov
pop
outsb
and
ficompl
mov
jmp
jle
mov
fildl
mov
pop
mov
add
out
and
jmp
aaa
cmp
mov
xchg
sbbb
jg
xchg
inc
rorb
cmp
mov
jno
sbb
sub
inc
hlt
and
or
sub
mov
adc
xchg
push
repnz
movsb
sarl
xchg
pop
xor
aad
inc
lock
fisubl
cmc
std
inc
cmpsb
stos
pop
int
ret
dec
adc
push
stos
imull
sbb
in
cmp
ficomps
jmp
jmp
or
imul
dec
xor
aas
jecxz
in
shll
and
lods
inc
and
fisubrs
ds
mov
cmpsl
fnstcw
aaa
dec
jp
dec
ljmp
movsl
mov
or
das
fucom
xchg
in
rol
rcrb
into
roll
mov
jg
xchg
icebp
cmp
nop
add
sub
xor
fidivrl
sub
leave
fldenv
add
shlb
loop
clc
flds
sbb
cmp
xor
xor
int
or
xchg
sub
jno
mov
mov
jne
xchg
and
mov
rorb
sub
sbb
in
int
test
movsb
adc
adc
sub
pop
pop
outsb
jle
rdmsr
xlat
mov
dec
cmp
pop
movsl
stc
mov
not
add
loope
push
in
add
jae
jge
outsl
xor
mov
fnsave
cmp
dec
cltd
shrb
or
jnp
pop
inc
sub
imul
repnz
lock
add
xor
push
sub
push
mov
cmp
mov
and
clc
dec
aas
xor
scas
cwtl
stos
xor
les
and
dec
scas
inc
loopne
push
pop
adc
sub
ds
sahf
pop
mov
mov
divb
sarl
and
inc
cltd
xchg
jb
add
pop
ss
lods
xchg
sbb
add
iret
sbb
jae
cmp
lahf
lock
rep
test
sbb
mov
ss
nop
adc
or
and
mov
xchg
jbe
ds
pop
sub
shl
pop
mov
sub
daa
inc
ljmp
call
popf
and
xor
adc
scas
mulb
clc
in
loope
push
scas
rorl
adc
scas
daa
in
imul
cmpsl
and
add
std
push
lahf
mov
lret
xlat
aas
sub
arpl
andb
testb
out
push
andl
test
insl
adc
les
xchg
or
dec
xchg
jecxz
cmp
jge
sbb
inc
lods
popa
sbb
dec
adc
int3
out
sub
aad
jo
pusha
aas
sbb
or
sub
sub
movb
in
pop
clc
mov
rcll
jno
insb
cli
push
or
push
push
ljmp
pop
adc
mov
pop
test
movb
sbb
jge
push
pop
rorb
sbb
and
mov
js
push
fstpt
mov
and
mov
inc
pop
mov
test
jnp
jecxz
inc
add
test
and
add
cmp
or
lcall
xchg
pop
int
out
movl
cld
jbe
in
sbb
or
scas
mov
mov
and
sub
push
or
mov
xchg
cmpsb
je
out
shll
addl
xor
push
inc
mov
into
inc
mov
bound
cmp
fwait
add
and
and
mov
adc
mov
fldpi
cld
repz
arpl
es
jb
stc
mov
leave
jae
mov
inc
in
mov
dec
pop
cs
sbb
lods
jae
dec
cmpl
inc
jecxz
xchg
fimull
test
xchg
jge
or
push
std
aaa
lret
inc
jl
dec
mov
pop
inc
pop
xchg
pop
or
jecxz
mov
and
xchg
rcr
or
loop
inc
push
cmp
xchg
cmp
add
pop
lahf
dec
test
loope
fistl
push
mov
dec
pop
fistps
repz
sahf
and
mov
add
and
imul
jl
cmc
dec
xchg
addl
sti
inc
fcoml
iret
lock
subl
mov
dec
dec
push
and
or
mov
dec
out
in
add
out
cmp
xor
xchg
push
repnz
and
cmp
push
hlt
xor
data16
sub
pop
xor
loop
int
lods
imul
jmp
mov
ja
dec
fs
stos
lock
adc
add
fistps
shll
lods
push
mov
repnz
ret
dec
cmp
xor
mov
lcall
dec
push
stos
dec
pop
push
jmp
aad
add
mov
lea
std
sbb
test
jmp
jbe
movsl
sbb
cmp
fnstsw
enter
jge
xchg
mov
add
mov
sub
addr16
mov
insl
add
inc
decl
mov
in
push
and
mov
arpl
or
sahf
xchg
mov
mov
fdivrs
rcll
jns
cltd
adc
out
jle
mov
sub
mov
icebp
jecxz
test
fwait
je
decl
repnz
or
rorl
lea
dec
daa
push
mov
scas
add
int
aas
sub
cli
inc
mov
mov
in
xor
movsl
pop
pop
jb
jno
add
movsl
mov
sahf
jo
adc
adc
fcompl
mov
and
loop
pop
jmp
adcb
xor
jmp
xchg
and
cmp
and
andl
jmp
mov
iret
mov
movsl
loope
in
mov
insl
hlt
mov
pop
cli
push
inc
sub
push
add
xchg
out
xchg
rorb
add
lds
adc
adc
push
fisubrl
sbb
and
enter
std
lods
rorl
jle
mov
sahf
ret
pop
pop
and
outsl
test
push
cmp
adc
sub
das
insl
pop
and
sahf
mov
loopne
add
push
andb
js
jnp
mov
iret
add
mov
mov
into
inc
iret
sahf
leave
mov
sbb
cli
and
stc
jge
movsb
xor
gs
fimuls
das
sbb
lret
nop
imul
jno
hlt
push
lock
push
rclb
xchg
xchg
movsb
jle
es
xor
rcr
mov
mov
outsb
pop
pop
mov
push
push
xor
adc
js
sarl
add
fbstp
pop
adcb
mov
mov
sub
enter
shrl
shrb
cmpsl
sarl
rcr
inc
xchg
jb
adcl
rcrl
call
shlb
or
das
pop
cmp
movsl
insl
fbld
jo
sub
and
sub
jg
rclb
out
jmp
stos
xor
or
cmp
into
das
testl
cmp
outsl
mov
rep
or
xchg
outsl
cmp
pop
mov
fiadds
inc
sub
jmp
leave
jge
xchg
aad
push
nopl
push
repz
stos
cmp
out
test
mov
push
in
sub
outsl
dec
sub
cltd
int
xchg
push
ffreep
cmp
adc
mov
test
mov
and
mov
mov
jg
lea
iret
cmp
jmp
xchg
aaa
lret
adc
scas
cmp
arpl
mov
shlb
fildll
mov
add
sti
xchg
enter
jl
loopne
arpl
mov
mov
mov
push
insl
outsb
cmpsb
int3
jg
cwtl
test
lods
jno
test
jecxz
mov
mov
test
xor
shrb
in
sub
iret
sbb
mov
xchg
bound
in
pop
aam
dec
xchg
imul
sti
cwtl
and
cmpsl
push
test
adc
push
sbb
push
ds
stos
pop
xchg
xorb
lcall
les
or
testl
clc
xchg
mov
stc
mov
out
lahf
lret
dec
xchg
fiaddl
cli
insb
xchg
aaa
sahf
notl
push
dec
add
jp
popf
ret
push
push
inc
adc
insl
cmp
inc
outsb
cmp
push
mov
popa
dec
mov
or
cmc
daa
ljmp
inc
and
cwtl
sarb
stos
test
inc
imul
test
fcomp
inc
cltd
insb
movsb
mov
pushf
push
scas
pop
and
in
mov
pop
and
sub
lret
lcall
es
push
add
xor
les
adc
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
dec
jb
mov
gs
push
popf
sub
xchg
mov
filds
fwait
cli
mov
add
mov
jle
rcr
outsl
es
xor
or
mov
scas
cs
frstor
fldt
mov
fildll
pop
xor
or
mov
scas
cmpsl
popa
cltd
dec
dec
repz
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
and
sbb
shlb
sub
shlb
sub
shlb
sub
shlb
sub
shlb
sub
sbbl
xor
cmp
jmp
or
sub
out
mov
sbb
xor
and
sbb
shlb
sub
shlb
sub
out
mov
sbb
xor
and
sbb
shlb
sub
shlb
sub
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
add
lcall
and
mov
out
lahf
xchg
mov
stc
mov
out
lahf
xor
leave
add
push
out
lahf
xchg
mov
stc
mov
out
lahf
xchg
mov
stc
mov
out
lahf
xchg
mov
stc
mov
out
lahf
xchg
mov
stc
mov
out
lahf
xchg
mov
stc
mov
out
lahf
xchg
mov
stc
mov
out
lahf
xor
leave
add
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
das
mov
sbb
insl
and
pop
sub
pop
fcom
adc
fstpt
xor
clc
add
mov
adc
mov
jo
scas
outsl
inc
in
jl
loope
and
sti
push
gs
cli
orl
popa
push
sahf
mov
idivl
lret
and
xchg
sbb
mov
add
mov
aad
fcompl
cld
jl
pop
add
mov
jno
adc
cs
outsb
divl
outsb
in
orl
lcall
out
jle
jo
sbb
mov
ja
popf
dec
jno
pop
xchg
cmc
or
dec
xlat
pop
lock
xorb
pop
stos
xor
loope
scas
rolb
xorl
int3
jge
ljmp
and
inc
nop
lods
xor
pop
outsl
inc
add
out
pop
enter
in
sub
and
loopne
add
ss
insl
inc
inc
pop
or
and
cmp
ljmp
xor
mov
mov
sbb
jb
dec
xchg
mov
jns
push
mov
or
cltd
ficompl
je
fmull
or
icebp
sub
or
jge
je
fmull
push
or
add
add
das
jae
sbb
xor
cmp
jmp
xchg
push
jle
pop
inc
or
gs
pusha
std
aad
aam
out
movsb
test
adc
mov
pop
xchg
aad
in
mov
filds
cmpsb
sub
imull
or
loopne
fildll
pop
xor
or
mov
scas
xchg
jne
pop
addr16
xchg
andl
fildll
pop
xor
or
mov
scas
jo
add
pop
loop
jmp
xor
mov
adc
mov
xor
lea
and
adc
push
xchg
cmp
test
cmpb
pop
enter
lods
pop
push
pop
std
clc
ljmp
push
shlb
sub
scas
inc
and
test
addl
daa
pop
daa
out
dec
jns
or
mov
out
pop
adc
mov
arpl
push
cmp
jno
sbb
xor
cmp
jmp
xchg
push
jle
pop
inc
or
gs
pusha
std
aad
aam
out
movsb
test
adc
mov
pop
xchg
aad
in
mov
filds
cmpsb
sub
imull
or
loopne
fildll
pop
xor
or
mov
scas
xchg
jne
pop
addr16
xchg
addl
pop
pop
test
aam
jbe
or
daa
mov
movsl
fninit
lret
jnp
rdmsr
js
mov
adc
mov
xor
lea
and
adc
push
xchg
cmp
test
cmpb
pop
enter
lods
pop
push
pop
std
clc
ljmp
push
shlb
sub
scas
inc
and
test
addl
daa
pop
daa
out
dec
jns
or
mov
out
pop
adc
mov
arpl
push
cmp
jno
sbb
ret
cmp
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
popf
shlb
pop
mov
dec
fnstsw
mov
fdivrl
insl
lods
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
popf
shlb
pop
mov
dec
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
ret
mov
rcll
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
cmp
test
rcll
leave
jge
xchg
aad
push
popf
shlb
pop
mov
dec
pop
sbb
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
int
push
adc
or
aam
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
mov
in
xchg
cmp
or
mov
scas
aam
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
and
mov
mov
icebp
adc
pop
aam
jl
loopne
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
mov
cli
js
pop
std
popa
xchg
jl
cmp
jge
xchg
aad
push
leave
jge
xchg
aad
push
adc
xchg
add
sub
out
lods
ds
xchg
aad
push
leave
jge
xchg
aad
push
push
sub
lods
inc
mov
insb
inc
cs
xchg
mov
jmp
pop
movsb
push
or
pop
daa
repz
shlb
xchg
mov
xchg
mov
mov
and
shlb
xchg
mov
xchg
mov
cwtl
xorl
rcll
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
sbb
pop
cmpsb
inc
icebp
and
mov
push
test
push
and
dec
aaa
mov
adc
iret
pop
sbb
or
xchg
mov
pop
shlb
jne
fdiv
loopne
lea
clc
mov
push
fistl
add
ret
out
or
xlat
cmp
shlb
inc
scas
fldl
loope
mov
xor
notb
sbb
mov
xor
fdivrs
pop
mov
js
mov
test
push
cwtl
ret
icebp
mov
js
lret
or
in
fadd
mov
dec
popf
gs
sbb
xor
setns
ds
pusha
adc
mov
out
ss
mov
adc
jo
xor
mov
push
xchg
jb
int3
sub
lret
in
stos
dec
add
mov
mov
adc
scas
fcompl
call
xchg
fistpl
and
enter
mov
pop
and
bound
sub
in
lock
cmp
ds
inc
pushl
pop
out
lds
jmp
das
jns
mov
ja
cmp
outsl
dec
pop
popf
xchg
loopne
shlb
jno
push
mov
lahf
call
mov
xchg
imul
cltd
fdivl
pop
push
adc
ds
sbb
or
adc
arpl
xor
aad
adc
or
icebp
xchg
or
inc
push
rcll
mov
mov
adc
mov
hlt
nop
out
or
cwtl
testb
adc
push
cmc
lret
lods
icebp
push
int3
push
int
mov
xor
scas
pop
ret
and
sub
fs
out
cli
ss
in
pop
mov
push
subl
cwtl
fcompl
outsl
cld
mov
aam
lods
cltd
es
push
dec
lea
fwait
inc
push
pushf
lret
in
cmpl
fidivrl
psrlw
sub
subl
pushf
jns
sahf
ljmp
jp
cli
jne
ror
das
xchg
repnz
test
int3
pop
aas
movsb
mov
inc
ror
imul
pop
clc
xchg
test
shl
clc
movsl
lcall
mov
insl
jle
jb
push
sub
mov
or
aam
jg
pop
imul
aaa
ret
sbb
in
sub
andb
lahf
pusha
mov
dec
fldcw
shrl
arpl
ja
jo
mov
cmp
mov
ljmp
jg
out
imul
and
mov
das
ds
add
dec
push
sub
and
xchg
add
push
std
adc
leave
ficompl
or
leave
or
or
mov
push
in
pushf
mov
roll
shlb
ja
cmc
repz
outsl
inc
xlat
inc
lcall
bnd
sbb
ret
inc
and
rcl
sbb
jnp
pop
aaa
orb
test
lret
das
rcl
jmp
inc
xchg
lahf
xchg
enter
aam
sahf
pop
in
pop
shr
ds
lahf
push
jno
or
cwtl
dec
dec
lret
mov
or
leave
xchg
rcr
or
lret
loope
mov
mov
xchg
mov
cli
sbbl
aad
popa
in
sti
fwait
out
xchg
fidivs
jle
sbb
jle
pop
arpl
push
inc
in
dec
fcompl
jge
cli
repz
rcpps
cwtl
out
or
loop
xor
sub
lock
movsb
xchg
jo
xchg
movb
imul
xor
ret
incb
jmp
adc
cmp
cmp
fwait
add
imul
ret
jge
jmp
test
addr16
adc
mov
cmp
mov
and
mov
aam
dec
inc
xchg
jae
push
stc
into
mov
gs
dec
fwait
xchg
push
sub
aaa
dec
pop
mov
outsb
dec
xor
adc
cmovbe
push
iret
mov
add
pop
adc
mov
jbe
jae
ss
fldenv
adc
adc
xor
push
jne
pop
mov
jle
shrb
jno
add
mov
lods
add
xchg
and
mov
cmp
imul
sub
jg
call
cwtl
rorl
inc
mov
pop
sbb
push
rcrl
xchg
leave
clc
mov
cmp
ficoml
xor
xchg
xchg
iret
cmp
cmpl
call
clc
pop
xor
in
fcmovne
xchg
loop
jb
fdivrs
fs
mov
in
mov
push
enter
xchg
hlt
xor
hlt
imull
cmpsl
in
push
sbb
adc
stos
out
push
out
hlt
jge
rorb
insb
roll
es
xor
xchg
mov
jle
mov
mov
out
dec
cwtl
xor
sbb
push
dec
ficoml
into
cld
or
sbb
pcmpgtb
jecxz
jl
fwait
sbb
scas
fwait
mov
imul
mov
ret
cmp
pop
sti
jecxz
decl
nop
pusha
aaa
movsb
inc
cmpsb
push
add
outsb
cmc
cmp
in
fsubs
leave
imul
cwtl
sbbb
and
sbb
mov
xorb
cwtl
xchg
subl
mov
mulb
mov
pop
add
cltd
jmp
add
sti
loopne
mov
negl
cld
xchg
xchg
ja
lcall
icebp
daa
sub
push
decb
std
push
mov
sbb
scas
push
xchg
or
insb
scas
inc
je
std
jle
hlt
or
stc
adc
add
dec
ret
mov
push
lods
lret
mov
scas
pop
cmpsb
xchg
mov
and
cs
jae
mov
int3
iret
mov
mov
rorl
cwtl
jnp,pt
xor
fs
push
pop
xchg
dec
ret
sahf
repnz
pop
add
movsb
es
dec
mov
fdivrl
clc
xchg
lds
xor
loopne
jno
in
pushf
mov
es
xor
push
push
xchg
movsl
in
jns
mov
iret
roll
add
scas
mov
sti
add
loopne
lock
icebp
lret
shl
repz
mov
rcll
lods
mov
call
in
pop
pop
jg
roll
fisttpl
gs
adc
dec
cmp
test
jne
jmp
dec
loopne
adc
dec
cmp
test
cld
push
ja
arpl
cmp
pusha
pop
cs
xchg
dec
push
fbstp
pusha
movsb
sbb
movsl
shll
loop
lds
pop
into
xchg
outsb
gs
mov
jl
repz
pop
lret
mov
and
push
add
mov
loop
ret
imul
movsl
aaa
and
inc
in
pusha
cmp
inc
add
mov
insl
std
shlb
jmp
movsl
outsb
repnz
and
sub
je
push
jmp
data16
push
lret
sub
xchg
sbb
shrb
shl
push
ja
and
pop
xchg
in
out
cli
daa
out
add
lds
pinsrw
ja
std
jg
enter
dec
in
jo
jae
ss
jle
lret
fstps
sbb
sbb
jb
dec
mov
daa
mov
rorb
xor
mov
mov
cmp
push
and
or
xchg
or
push
rcl
pop
cmp
insl
push
in
and
dec
xchg
testl
cld
dec
call
pop
or
push
outsl
outsb
or
testl
pop
das
jmp
adc
and
fidivs
mov
lahf
es
das
push
or
and
imul
je
pushf
popa
ljmp
sub
push
ljmp
cmpl
jns
imull
dec
in
gs
sbb
xor
adc
push
outsb
mov
xchg
mov
add
cmp
pop
mov
cltd
jno
xchg
bound
int
movsl
jnp
push
rorb
and
scas
sbb
push
nop
out
cmpsl
fucomp
or
cli
xchg
push
ja
xlat
cmp
inc
xchg
adc
xchg
xor
or
push
push
out
lcall
xor
or
xor
sub
push
dec
fsubp
leave
jge
xchg
aad
push
sub
fstl
xchg
divb
cmpb
lret
bound
adc
subl
cmp
push
loopne
jle
push
xchg
sbb
or
pop
dec
int
test
mov
and
xchg
adc
xchg
outsb
add
jmp
push
dec
xor
fcmovbe
ja
lret
pop
jmp
jmp
dec
into
addb
push
pushl
outsb
pop
mov
adc
pop
rcll
cmpsb
jne
mov
mov
inc
rcll
cmpsb
jne
or
sub
lds
mulb
mov
fs
insl
in
cld
cmc
imull
adc
xchg
ljmp
pop
ret
pop
ret
addr16
adc
sahf
repnz
pop
add
mov
or
add
fiaddl
dec
jb
lods
cmp
mov
xchg
imul
push
cmp
or
fsubrs
daa
fidivl
daa
push
test
popf
cmp
popa
gs
shll
loopne
push
lock
rol
add
std
lods
sub
xchg
subb
ja
shll
loopne
push
lock
rol
add
std
dec
call
dec
sbb
pop
pop
cmp
jnp
pusha
test
divb
in
call
or
sub
sub
jnp
jae
xor
jbe
mov
or
mov
sub
cs
test
xchg
filds
xchg
mov
loop
out
repz
data16
sub
popf
sub
andb
cmp
into
les
ffree
clc
fucom
jl
imul
push
cmpsl
fidivs
popa
jne
push
arpl
iret
lcall
popf
loopne
sub
lahf
test
mov
insb
leave
xchg
imul
outsb
dec
ljmp
fs
push
enter
std
mov
dec
add
loop
jge
xchg
aad
push
rclb
in
sbb
xchg
lds
push
mov
inc
cli
fisubl
adc
mov
pop
outsb
jmp
fdivrl
ret
sub
dec
in
mov
mov
xor
sbb
inc
lock
push
arpl
xchg
je
fwait
push
lods
sbb
xor
mov
int
cmc
stc
mov
into
stc
or
sub
fcomip
push
pop
jmp
sub
cmp
lods
or
mov
pop
ficoml
cmp
int
ss
xor
jp
cmpsl
das
jmp
je
sub
dec
jns
xchg
aas
stc
std
jp
scas
xchg
in
add
sbbl
aam
push
and
pushf
push
shrl
xor
fisubrs
sbb
sub
pop
or
lods
stos
sbb
push
sub
jne
jo
test
xor
les
incb
or
cwtl
dec
repnz
inc
cmp
and
push
or
and
sub
sub
bt
jmp
or
xchg
sub
mov
add
fwait
inc
or
in
mov
jae
ja
cld
jb
pop
sub
sbb
lcall
cwtl
pop
mov
scas
mov
jecxz
imul
repnz
jl
mov
or
hlt
mov
and
cmp
mov
push
pop
xor
jp
inc
inc
clc
mov
mov
dec
push
mov
lret
pushf
lock
int3
rorl
push
xchg
ljmp
dec
in
xor
scas
cmp
jle
push
ficoml
add
lcall
in
add
lret
jp
adcl
inc
in
jns
pushf
inc
push
adcb
pushl
insl
sub
lahf
sbb
and
bound
mov
xchg
insl
int
loop
int3
jecxz
dec
sub
sbb
hlt
and
outsb
push
add
sub
inc
xchg
data16
and
arpl
mov
cmp
push
pop
dec
mov
aas
push
sti
jno
loopne
mov
ja
adc
in
cmp
iret
nop
mov
xor
or
push
push
out
lcall
xor
or
insb
inc
fisttpl
mov
and
in
sbbl
jmp
aam
mov
sbb
mov
xchg
push
popa
xor
fisubrl
das
xchg
mov
lods
mov
mov
pop
shl
ljmp
add
adc
pop
scas
int
nop
or
mov
addr16
jae
xor
dec
xchg
xchg
jb
push
in
mov
aad
mov
inc
inc
icebp
push
loopne
or
jnp
jbe
mov
in
jbe
roll
jecxz
adc
mov
in
fnstenv
add
test
mov
shrl
icebp
pop
mov
repz
add
inc
add
cwtl
dec
or
pop
fildll
xchg
xchg
cmc
xchg
iret
push
sub
jns
shlb
lea
mov
adc
sbb
or
and
js
jge
ficompl
or
mov
aad
sub
push
jmp
test
es
add
mov
push
leave
lcall
in
dec
cli
loope
adc
lods
ja
out
xchg
push
mov
pop
das
push
cmpsl
dec
mov
and
cmc
std
lods
or
dec
pop
mov
mov
add
mov
mulb
xchg
scas
jecxz
scas
mov
loop
or
sub
outsb
xchg
mov
int
iret
lahf
sbb
xchg
cld
pop
lret
cmp
inc
stos
insl
adc
popf
ja
dec
inc
aas
sbb
stc
aaa
push
jl
icebp
inc
lods
xor
sub
out
dec
std
mov
sbb
das
add
xor
pop
sub
mov
or
lea
lret
push
adc
movsl
pusha
cli
pop
and
sbb
jle
xchg
mov
mov
dec
xor
push
pop
mov
or
loopne
adc
xchg
ljmp
movb
pop
aam
ret
fnstsw
or
xor
movsb
insb
in
test
stc
xor
call
pop
or
repnz
dec
adc
divl
test
mov
jp
adc
push
mov
sbb
out
mov
jae
pop
in
mov
jo
subl
jb
pop
xchg
xor
xchg
in
adc
inc
pop
jno
loope
insl
jne
push
and
xchg
sbb
cs
pop
lret
push
ljmp
insl
sub
xchg
inc
adc
pusha
pop
dec
imul
lcall
dec
inc
push
xlat
adc
dec
fcomps
lret
mov
int3
stc
shll
and
pop
insl
test
add
stos
clc
ss
jg
mov
sub
inc
adc
push
sub
mov
xchg
sbb
sahf
push
adc
ds
adc
push
xchg
or
mov
adc
sbb
imul
scas
mov
cmp
push
sarl
mov
insl
stos
daa
push
inc
pop
mov
lock
stc
sbb
call
xchg
movsl
cmp
cli
xchg
xor
add
enter
xchg
scas
or
scas
mov
iret
ds
movsb
xchg
or
cmp
aas
sti
add
lds
int3
adc
add
mov
aas
or
xlat
xchg
mov
into
in
and
imul
xor
mov
mov
in
daa
in
and
sti
movsl
lock
bound
xchg
int
fcom
pop
addr16
jae
inc
or
popf
mov
stos
stc
xchg
rcrl
mov
sub
sarl
and
fsubl
jb
jmp
dec
jle
shlb
pop
in
test
sbb
out
xor
and
fisttps
insl
out
dec
and
stc
rolb
fldenv
std
les
aam
lods
cmc
mov
dec
push
cltd
sub
je
mov
and
and
lods
xchg
hlt
adc
mov
daa
mov
inc
mov
icebp
and
inc
xor
fimull
inc
xchg
cmpl
sahf
add
push
js
pop
sti
or
cmpb
bound
pusha
subl
fistpll
inc
mov
movsl
jnp
mov
in
adc
fcomps
xor
and
mov
sarb
mov
sub
mov
mov
jecxz
push
or
xor
mov
cmp
stos
repnz
inc
xchg
fucomip
adc
divb
mov
jmp
and
cld
sub
push
cld
and
inc
iret
dec
sbb
mov
das
sti
xor
ret
sbb
mov
xchg
rolb
rorb
das
imul
mov
pop
xor
pushf
es
stos
sahf
outsb
out
movsl
iret
adc
rorb
lret
lea
out
das
jae
fwait
sub
iret
faddl
push
jbe
mov
cmpl
and
or
js
in
mov
xor
stos
push
nop
insb
add
mov
jo
cmp
ss
cmp
test
jmp
lret
rcrl
add
pop
push
mov
into
mov
xchg
clc
push
or
popa
daa
xlat
bnd
scas
dec
clc
pop
pop
xor
cli
ss
outsl
sub
sub
shlb
pop
nop
lock
cmp
xlat
ret
push
ds
test
mov
pushf
xchg
nop
inc
xchg
inc
test
add
add
lock
in
xor
out
mov
stos
test
repnz
das
mov
scas
out
lods
dec
test
popl
test
repz
or
nop
mov
fiadds
add
sub
stos
jbe
lcall
loop
add
pop
aaa
mov
lret
iret
xchg
push
inc
mov
add
mov
add
je
mov
outsb
iret
cmp
mov
cmpb
dec
nop
xor
insb
sti
lcall
jle
jecxz
cmp
cmp
add
test
push
rcrb
fistl
push
in
ja
lretw
and
pop
aas
shll
jno
adc
addr16
jno
xor
inc
lahf
fdivs
mov
or
jo
pushf
imul
pop
adc
pop
rcrl
stos
inc
clc
daa
popa
cwtl
in
sahf
sub
ss
scas
push
add
xlat
jg
aaa
inc
jo
jb
add
lds
inc
adc
movsl
in
mov
cmp
loopne
sbb
in
addr16
sub
jno
les
xor
aas
and
xor
and
mov
divb
aas
sbb
dec
jmp
or
mov
fs
in
adc
mov
insb
mov
mov
rolb
add
iret
iret
sub
dec
out
insl
in
outsb
rcrl
pop
cmp
cmp
sub
xchg
jnp
jo
pop
in
daa
cmc
cmc
addr16
imul
out
clc
xor
in
pop
cmpl
mov
push
dec
and
xchg
nop
xchg
inc
xchg
sub
pushf
insb
sti
mov
mov
int3
xchg
outsl
xor
mov
cmp
pusha
dec
cld
sbb
mov
adc
jno
or
out
dec
pushl
or
test
add
int
pop
loope
push
leave
mov
xchg
incl
or
ja
pop
out
add
stc
cmp
xchg
fbld
in
ret
mov
pop
push
xor
scas
repz
xchg
fbstp
push
pop
loop
or
inc
loopne
inc
pop
lahf
or
imul
dec
xor
aam
loop
xor
xor
and
add
push
mov
sbb
cwtl
ds
xchg
adc
lock
enter
fld
jns
fcos
jns
jno
imul
out
mov
in
inc
dec
aaa
mov
or
popf
and
arpl
bound
ljmp
mov
jne
jb
mov
stos
sahf
ljmp
xchg
js
pop
in
lret
cmp
inc
jb
shll
xor
stos
mov
shlb
aas
lods
jo
loop
mov
lcall
mov
and
pop
dec
pop
push
inc
sbb
in
sti
push
mov
out
or
mov
repz
xchg
rcll
dec
jecxz
inc
shlb
aas
mov
cltd
imul
xor
and
aad
or
dec
adc
jae
jo
imul
xchg
stc
sarl
sub
lea
dec
jmp
gs
pop
push
and
xchg
iret
mov
mov
pop
imul
push
frstor
ret
lsl
test
dec
cmp
jg
xor
push
add
pushf
mov
movsb
fsubp
pop
cli
gs
aad
cmp
jb
test
pop
adc
pop
ja
jg
js
sbb
add
sub
cli
mov
cmp
push
movsb
repz
test
push
fstp
decb
lahf
adc
imul
mov
mov
jle
repz
adcl
pop
test
cmp
sub
andl
pusha
add
subl
stc
xor
dec
insl
push
push
mov
dec
popa
jbe
adc
jge
shl
xorb
inc
cmp
dec
and
je
jo
mov
mov
fcmovu
iret
out
add
mov
adc
pop
mov
je
xchg
es
mov
jp
dec
out
lock
push
xlat
imul
xor
lret
sbb
cmp
push
shlb
cmp
clc
rolb
out
std
test
mov
sbb
pop
jne
adc
sbb
jp
jo
and
stc
iret
lods
jecxz
mov
push
loopne
js
fists
std
les
daa
push
mov
int3
aam
add
dec
sbb
sbbl
adc
mov
cmpb
jnp
mov
pop
addr16
or
rorb
fld
test
out
jg
add
stos
in
mov
cld
pop
mov
stos
pop
lahf
scas
add
rorl
fwait
pop
ds
jp
test
leave
sti
test
fwait
mov
mov
aaa
pop
out
lds
pop
arpl
jecxz
xchg
nop
imul
sbb
mov
xor
push
xor
popa
adc
insb
jb
add
aaa
inc
frstor
and
xor
push
push
and
push
ljmp
sub
or
movsl
jl
pop
rolb
test
sahf
jns
mov
pop
lahf
cmpsl
mov
inc
aam
mov
cli
mov
in
lea
stos
jge
mov
in
mov
fidivl
cmp
fwait
mov
add
inc
popf
lcall
adc
addr16
sbb
cmpsl
iret
cmp
rclb
pop
outsb
jp
jg
push
out
call
pop
mov
xor
dec
pop
cmp
push
sub
mov
lods
ret
fcmovbe
aas
jl
push
pop
insl
arpl
mov
sti
add
orl
je
scas
jl
sahf
jl
mov
or
loope
mov
push
ficoml
inc
mov
out
add
jmp
push
stos
outsb
out
fdivrl
sahf
and
js
icebp
push
movsl
lods
mov
scas
adc
out
pop
test
aam
sbb
cmpsb
jg
xchg
jmp
repz
dec
sbb
loopne
clc
ret
sbbb
out
mov
movsl
es
dec
fwait
mov
stos
aad
sbb
pop
ret
dec
rcrb
aad
push
stc
js
add
cmp
xchg
data16
inc
stos
push
lahf
jns
iret
add
cmpsb
insb
sbb
and
dec
arpl
pusha
sahf
outsl
jmp
shll
inc
test
xchg
pop
or
rclb
xlat
sahf
sub
scas
std
inc
aaa
mov
flds
roll
jmp
push
xchg
dec
push
add
push
xchg
inc
out
push
xchg
mov
jo
xchg
repnz
mov
xchg
cmp
popf
test
fisttpll
loop
out
sarb
mov
lahf
add
mov
out
movsl
pop
fs
or
decl
in
or
cld
in
dec
imul
vsqrtps
out
push
les
push
mov
iret
insl
sub
cmp
jmp
pushf
fildl
inc
jbe
sbb
and
orps
gs
xor
sub
les
and
push
jno
or
outsb
jmp
adc
loop
mov
or
push
rol
ret
sbb
scas
mov
in
jp
push
mov
mov
sbbl
sub
xchg
js
pop
jb
fndisi(8087
stos
adcb
and
cmp
mov
cmp
dec
or
jbe
lods
jge
test
pop
shll
sbb
adc
stos
nop
mov
adc
out
or
inc
shrb
mov
xchg
icebp
jmp
das
les
popa
mov
pop
lds
and
xchg
cmp
sbb
loop
mov
pushf
into
into
pusha
icebp
aas
dec
cltd
xor
or
daa
outsl
sti
dec
xor
mulb
std
mov
mov
int3
or
subb
cmp
std
int
fistl
adc
sub
jbe
fsubl
adc
rcrl
add
in
lock
repnz
pop
inc
mov
pushf
std
xchg
sti
shrl
loope
outsl
add
loop
mov
ret
loopne
movsl
test
xor
xchg
mov
jno
flds
int
mov
in
sahf
and
nop
xchg
fwait
lret
ret
or
out
mov
outsl
add
mov
stos
pushf
cmpsl
andb
jp
xor
in
mov
cli
xor
repnz
add
jmp
sbb
cmp
stos
xor
mov
das
mov
cvtps2pd
jne
outsl
rolb
sub
bound
jl
subl
inc
movsl
stc
push
adc
stos
test
sbb
rorl
adc
mov
mov
aam
adc
inc
push
cmp
inc
cltd
daa
dec
xor
sub
jle
or
add
pop
cmp
sbb
cld
cmp
or
in
dec
std
sub
test
inc
icebp
lcall
mov
sub
push
push
fwait
or
jae
mov
pop
push
push
pop
fidivs
push
cmp
jbe
insb
out
xchg
push
dec
nop/reserved
xor
js
xchg
inc
dec
mov
mov
je
sbb
dec
pop
mov
jecxz
sbb
movsl
ljmp
mov
je
leave
int
mov
ss
fildll
scas
jnp
cmc
das
lea
dec
xor
cmp
inc
cmc
out
mov
mov
pushf
push
add
lods
rorb
or
add
in
out
adc
pop
mov
push
aam
xlat
mov
push
adc
add
add
std
xchg
xor
fucomp
and
xchg
pop
push
and
push
mov
adc
scas
pop
mov
stos
push
dec
jmp
push
adc
jecxz
xchg
int3
fistpl
scas
fidivrl
sbb
jne
aad
test
xor
mov
fldcw
out
mov
in
jl
cmp
pop
mov
insb
jae
xchg
icebp
mov
fldenv
xor
xchg
sub
fs
in
adc
lret
and
rcll
cmpsl
xchg
rcrl
mov
shl
sbb
out
sub
sbbb
in
icebp
add
insl
repnz
adc
or
push
mov
sub
or
mov
aad
add
jb
ja
jns
jmp
popa
dec
nop
push
lahf
dec
lahf
cmp
jge
bnd
push
leave
orl
pop
lods
mov
mov
xchg
int3
pop
jmp
je
mov
or
hlt
lds
jo
lock
add
popa
or
jnp
call
leave
lods
das
js
aas
sub
insb
pop
inc
sub
xchg
sub
loopne
outsl
das
ds
mov
cmp
out
mov
jno
insl
cmpsb
enter
test
loope
addr16
lds
sbb
aad
test
cs
ret
and
fisttps
and
or
test
push
fadds
mov
fmull
jmp
inc
pop
sub
xchg
into
and
fnsave
or
andb
int
shr
dec
sbb
imul
lds
cmp
dec
insl
lock
clc
nop
push
outsb
into
mov
push
push
or
scas
pop
add
ja
clc
dec
mul
pop
rclb
push
popf
arpl
mov
push
push
adc
sub
mov
add
je
loopne
push
jmp
sahf
enter
in
cs
mov
js
into
scas
imul
or
mov
lcall
xchg
lahf
mov
test
sub
ror
push
leave
pop
lret
insb
test
dec
sub
jo
outsb
flds
inc
popa
pop
int3
jb
test
pusha
aam
int3
mov
mov
stos
mov
icebp
mov
mov
stos
inc
fiaddl
call
pop
bndldx
jns
adc
idiv
in
sub
cmp
or
mov
inc
add
cmp
cmc
xchg
sbbb
or
arpl
sbb
push
out
pop
jnp
repnz
std
xchg
sbb
loop
jge
xchg
aad
push
sub
jae
jbe
cmpsl
shll
jo
loope
sti
jne
adcl
mov
repnz
pop
test
aam
jbe
or
daa
mov
bswap
sti
int3
add
cmp
lahf
bound
aas
dec
xchg
imul
pop
aaa
or
push
push
outsb
fadd
add
mov
mov
in
lret
mov
sbb
xchg
mov
std
les
xchg
pop
in
inc
in
inc
push
xor
pop
and
mov
in
adc
cmp
pop
sahf
mov
insl
sbb
int
mov
push
and
loop
movsl
sub
cld
sbb
and
leave
xor
xchg
ret
ret
sub
dec
push
repz
into
in
cmpsl
fcmovnu
fsubrs
dec
lahf
test
inc
xchg
fisubl
sbb
or
aam
cmp
shll
stos
insb
dec
jb
es
fucomi
je
xor
stos
ror
int
cwtl
cmpl
and
dec
testl
push
pmaxub
dec
adc
lret
aam
ja
pusha
xor
push
out
push
lods
test
xchg
sub
jo
shll
sbb
cmp
pop
rorl
and
jecxz
mov
pop
leave
or
sub
mov
inc
or
fdivl
les
pushf
push
sahf
roll
jle
mov
mov
dec
push
repz
repnz
inc
sahf
mov
jecxz
stos
adc
scas
hlt
or
adc
mov
sbb
and
cwtl
cs
leave
push
sub
inc
cmp
cmp
push
dec
adc
and
mov
pop
dec
dec
enter
stc
and
ret
sub
leave
jge
xchg
aad
push
mov
xor
and
cmpl
or
inc
xchg
daa
mov
push
mov
ret
cmp
out
jecxz
cmp
inc
shrb
insl
or
mov
push
test
cmp
lods
cmp
shrb
cwtl
mov
and
shll
dec
jbe
std
xchg
ljmp
adc
cld
enter
push
aaa
pusha
jmp
cli
xlat
xor
dec
into
sub
pop
mov
pop
pusha
incl
stos
sbb
into
ds
or
sbb
outsb
mov
mov
int3
into
add
xchg
lret
or
scas
cwtl
dec
inc
push
arpl
jl
rcll
arpl
inc
xchg
out
loop
or
or
xor
inc
in
std
mov
jo
mov
aam
fs
pop
dec
push
push
cmc
cmp
dec
leave
addr16
leave
ja
jae
adc
inc
mov
cmpsb
xorb
sub
mov
out
adc
push
aam
ss
in
cltd
mov
dec
add
pop
fwait
sub
cmp
ss
fists
fidivl
dec
subb
or
lds
mov
jo
in
dec
xchg
jbe
add
loopne
xchg
insl
mov
daa
gs
pop
mov
movsb
pop
mov
cmp
jl
fidivrs
sub
pop
mov
addr16
in
lcall
lret
mov
or
lret
pop
add
mov
mov
fstps
push
fnsave
cmpsb
movsb
pop
jle
lock
sub
and
xor
push
enter
pop
mov
mov
mov
push
push
push
and
sub
sbb
add
jnp
int
dec
lcall
mov
lcall
sbb
or
fists
xchg
dec
add
repnz
jns
mov
leave
in
leave
inc
add
out
hlt
test
dec
pop
xlat
pop
inc
scas
int3
ret
sub
lret
es
mov
inc
jge
xchg
nop
or
mov
fidivs
imul
gs
xor
ss
pusha
jae
sub
mov
sub
or
cmp
enter
pop
cmp
xor
xor
cli
inc
jmp
or
fsubl
scas
pop
mov
mov
and
or
out
fs
loopne
fnsave
notb
pushf
mov
sti
dec
inc
jp
mov
pop
push
adc
jp
inc
push
dec
jp
loopne
test
sbb
add
dec
int3
sbb
push
adc
mov
inc
subl
movsb
movsl
push
cmpsb
xor
push
ja
inc
stos
inc
movsl
jecxz
sub
mov
sub
lods
inc
lret
xor
xor
ja
push
jbe
xchg
fmuls
pop
adc
cmp
loop
mov
cmc
sbb
or
call
out
in
loope
and
lods
mov
cmc
andl
in
push
test
xor
mov
mov
roll
jle
insb
je
fadd
xchg
js
dec
dec
push
loop
inc
mov
xchg
sbb
mov
test
int
rclb
dec
push
sub
jl
adcb
push
push
mov
fdivrl
popf
mov
cld
jne
sbb
fcomp
xor
dec
xor
dec
int3
inc
insl
mov
push
mov
sbb
push
popf
cld
ret
cmp
imul
cmp
mov
loop
jmp
or
mov
movb
jo
iret
ret
pop
push
loop
ss
pushf
jae
cwtl
movsl
out
shlb
fcmove
lods
xchg
cmp
iret
sbb
push
fimuls
jecxz
int
sub
out
aam
push
push
inc
pop
cmp
sti
loop
mov
int3
sbb
inc
add
popf
ljmp
aad
into
inc
scas
push
popf
xchg
lret
pop
lret
and
popa
inc
push
test
jb
sbb
mov
dec
dec
mov
imul
sbb
xor
inc
adc
cmpsl
or
lock
add
mov
xchg
or
mov
dec
dec
cmp
aas
ljmp
movsb
repz
nop
mov
sub
sbb
sbb
stc
xchg
mov
in
aam
push
jnp
inc
mov
sbb
jnp
outsl
lcall
js
jl
dec
push
lahf
mov
jp
out
cwtl
adc
sub
jo
cmpps
or
movsl
mov
roll
fsts
mov
inc
movq
arpl
or
ret
sub
es
les
incl
aam
shll
inc
in
stos
inc
xor
xorb
push
dec
scas
call
xor
ljmp
std
aaa
sub
xchg
cmp
inc
sbb
imul
xor
out
lret
pop
fisubs
xchg
push
mov
jl
rol
dec
pop
inc
clc
test
xor
xchg
fildll
ss
push
jmp
push
cmp
gs
jne
jne
das
add
push
fadd
adc
lods
out
jo
or
inc
je
push
pop
xor
add
aam
or
jg
and
mov
mov
lcall
sbb
cmp
in
test
jb
iret
imul
dec
adc
push
fistpl
sub
iret
fnstsw
mov
cmp
dec
jne
daa
inc
xchg
jl
mov
ljmp
in
gs
and
repnz
sbb
imul
and
das
repnz
add
push
xor
lcall
inc
sti
nop
movsl
addr16
pop
push
lret
data16
pop
dec
inc
mov
xor
ficomps
test
movsb
je
pushl
inc
cld
jne
fcomps
pop
mov
or
xor
rcrl
inc
jno
icebp
int3
test
dec
fisttpl
out
fadds
mov
inc
cmpsl
or
into
cmp
sub
xchg
sub
faddl
nop
adc
outsb
xor
mov
cmpsb
adc
shlb
pusha
cmp
push
mov
xor
and
iret
insl
and
enter
push
xchg
arpl
sbb
icebp
sbb
mov
dec
js
pop
negb
cmc
dec
adc
pop
cwtl
movsl
call
cmp
and
fsubs
mov
push
dec
fucomp
pop
fidivrs
push
xchg
or
rorl
or
rcll
sub
jbe
xor
mov
mov
xchg
movsl
pushl
mov
mov
xchg
mov
in
fists
jns
sub
mov
in
push
ficoms
inc
xor
mov
mov
jne
icebp
call
fs
out
std
js
adc
sub
pop
loope
test
mov
xchg
fnstenv
xor
mov
loopne
cwtl
cmpsb
sub
add
bound
cltd
scas
in
and
xor
adc
out
add
inc
xchg
dec
cwtl
pop
adc
aaa
add
nop
enter
clc
pop
in
push
inc
xlat
mov
or
fstpt
sub
shl
pop
addl
insl
inc
cmpsb
fs
sahf
ror
test
in
cli
in
testb
push
inc
test
sbb
ret
inc
inc
sub
mov
cmp
inc
test
leave
xchg
dec
jbe
cmp
jl
in
imul
inc
mov
mov
repnz
push
in
mov
sub
aad
cli
hlt
dec
leave
out
test
icebp
ja
sub
fsubrl
in
push
je
loope
mov
inc
push
mov
sub
jmp
subb
or
or
sub
and
in
sbbb
xor
mov
pop
fidivl
lfs
xor
mov
cwtl
je
cwtl
mov
sub
lods
in
pop
rclb
leave
pop
inc
mov
sub
test
stc
into
dec
imul
sub
sbb
sbb
mov
sti
cmp
pop
cmpb
add
xor
or
js
mov
push
jbe
cltd
add
addl
add
push
sbb
xchg
cmp
sub
dec
lret
std
jno
subl
popf
movsl
ret
insl
arpl
or
std
arpl
mov
lds
stos
xor
lahf
popa
cli
inc
cwtl
add
or
and
jne
shll
outsb
pushf
mov
and
loop
addl
jle
cmp
pusha
dec
inc
bound
mov
or
cmp
loop
dec
std
movsb
push
nop
pop
dec
cs
cwtl
pop
enter
call
clc
std
cltd
jno
pop
xchg
push
imul
sbbl
push
loop
jns
inc
adcl
mov
jmp
xchg
adc
popf
popf
ds
or
loopne
int3
inc
add
pushf
out
mov
xchg
mov
sbb
into
std
xor
xchg
repnz
lcall
int
dec
mov
adc
or
fiaddl
ret
shl
xchg
push
mov
sbb
pop
xchg
daa
mov
cltd
mov
ret
jno
mov
jne
add
fstpl
jns
dec
dec
mov
into
jnp
xchg
mov
cld
add
push
fwait
jle
mov
adc
push
cwtl
add
and
push
push
bound
jg
or
adc
lret
sbb
push
pop
mov
jo
pop
cmp
movsb
test
test
and
xor
in
xchg
fistpll
stc
sub
add
fsubl
aad
xchg
movsb
cmp
lret
in
push
dec
mov
xchg
push
out
call
in
in
sbb
fsub
bound
xchg
ret
jne
dec
jg
add
xor
dec
imul
inc
mov
test
ds
enter
pop
jae
sbb
pop
aam
popf
jmp
out
inc
add
sbb
pushf
cwtl
inc
nop
xor
pop
dec
jl
jmp
int3
xor
in
jbe
shlb
popf
and
mov
cs
add
mov
ss
jle
push
lahf
lcall
ja,pt
and
decl
mov
call
mov
fidivl
jge
shl
push
lods
jnp
adc
mov
and
rcrl
popf
xor
shrb
daa
and
icebp
cmc
mov
sbb
out
clc
or
lods
into
jmp
push
push
scas
push
andl
scas
aaa
push
rol
cmp
fiadds
add
ja
mov
les
out
cmpsb
inc
xor
sub
movsb
inc
or
sbb
mov
pop
xchg
jecxz
sbb
dec
repz
in
jns
mov
imul
repz
add
cmc
pop
mov
sahf
cld
popf
add
and
or
xlat
outsb
popa
mov
popf
adc
iret
adc
ss
lret
push
and
mov
lods
xorl
fbld
xchg
ret
sbb
stc
add
xchg
daa
push
mov
sbb
inc
leave
mov
int3
fucomi
sub
daa
adcb
sbb
sub
std
xor
clc
gs
push
push
and
mov
repnz
icebp
arpl
xchg
out
push
mov
adc
fnsave
aas
sarl
aad
gs
and
push
jp
push
xor
jg
ret
mov
adc
cltd
pop
test
enter
sarl
por
ds
mov
shll
or
dec
leave
xor
sub
xchg
jae
iret
test
inc
inc
cmp
test
orb
mov
testl
lds
pop
cmp
cli
stc
fs
out
xor
push
mov
push
dec
call
and
and
adc
sub
int3
ss
outsl
out
push
push
mov
xlat
jo
fisttpll
movb
cmp
lock
rorb
hlt
xchg
and
pusha
ja
daa
call
add
imul
loope
scas
dec
je
xor
mov
adc
pop
mov
push
decb
sahf
int3
inc
arpl
inc
add
lea
in
shlb
mov
stos
aaa
in
push
faddl
dec
mov
mov
popa
xor
mov
or
xor
inc
jns
cwtl
jne
mov
push
pop
out
arpl
and
das
out
dec
jno
xchg
ror
cmpsl
gs
pushf
test
xchg
or
std
aas
clc
daa
int
dec
cltd
sti
mov
aad
add
jl
mov
stos
ret
and
push
out
test
hlt
int3
xor
aas
jo
mov
and
and
mov
in
leave
out
insb
sahf
sub
pop
dec
pushf
repz
rorb
hlt
scas
push
aaa
movsb
inc
ret
rolb
mov
test
ficoml
add
cmp
jns
insl
mov
or
aad
rolb
pop
aam
jp
fisttpll
sbb
pop
mov
aaa
in
mov
out
sbb
enter
test
xchg
pop
iret
iret
in
push
cmpsb
mov
add
lock
popl
mov
sub
jb
push
mov
lahf
stos
jo
sti
lock
cmpsl
mov
xchg
and
cmp
and
sub
mov
daa
jb
and
mov
sub
dec
sahf
cmp
mov
mov
scas
movsl
lcall
sti
pop
jbe
xchg
test
cmp
lods
dec
sub
pusha
mov
fcoms
into
xchg
lret
out
int
push
popa
xor
xchg
hlt
cmpsl
sub
sbb
jp
imull
sbb
xor
sub
cmp
dec
mov
xchg
and
sbb
and
mulb
das
mov
mov
mov
xor
sarl
jb
clc
insb
mov
sub
and
or
inc
mov
xor
fnsave
ds
and
es
daa
mov
int
dec
cwtl
jle
push
jbe
mov
xlat
mov
test
imul
add
sbb
int3
sbb
dec
repz
aas
ret
sub
mull
mov
loop
sub
add
cmp
fbstp
push
inc
dec
sub
icebp
jmp
movsb
out
add
sti
jmp
movsb
push
xchg
or
xchg
and
dec
xchg
mov
sub
pushf
dec
mov
dec
cltd
pop
inc
jecxz
cmp
in
push
and
mov
or
mov
insl
pop
enter
sub
lds
adc
jb
ljmp
jae
fwait
adc
test
mov
loop
leave
mov
push
enter
insb
inc
pop
cmovb
int
pop
sub
dec
fisttpll
or
loope
ret
ss
jmp
nop
bndstx
int
hlt
stos
in
fldenv
and
sub
mov
and
lahf
les
mov
scas
jg
dec
out
jne
push
sub
hlt
sti
cmpl
rorb
mov
dec
push
pop
cld
fistps
jo
dec
xchg
sti
clc
dec
xchg
and
mull
sub
dec
sbb
arpl
mov
in
xchg
insb
mov
gs
mov
imul
loopne
jbe
push
enter
mov
and
adcb
nop
repz
pop
sti
pop
sub
mov
dec
lret
insb
mov
imul
lods
pop
push
push
arpl
cmc
pushf
lods
sub
mov
imul
sub
and
ds
or
xor
lret
ja
out
push
fldl
xor
push
fwait
mov
and
fdivr
imul
push
adc
stos
gs
inc
ds
incl
jne
lods
stos
mov
lcall
adc
pop
jae
hlt
jbe
outsl
pop
mov
mov
pop
pop
mov
sbb
stos
mov
mov
imul
test
xchg
xor
dec
scas
pusha
lods
call
lret
push
push
and
scas
addb
lock
adc
dec
or
adc
out
cmp
push
hlt
mov
add
adc
ret
cltd
sbb
scas
movsb
outsl
adc
xchg
push
adc
cmp
xor
pop
mov
jl
fstpl
rolb
sbb
ja
jl
out
shr
sub
or
pop
cs
add
sbb
and
cld
mov
jp
loope
push
loope
hlt
dec
xchg
cmc
pop
lret
ret
imul
push
test
mov
inc
xchg
stos
mov
sbb
pop
dec
add
inc
sarl
add
and
sbb
mov
mov
mov
cld
push
test
xchg
xor
jns
outsb
lea
mov
jle
pop
mov
lods
and
fs
sub
jp
lret
in
cmp
jge
mov
cmp
ret
pop
loopne
jno
add
pop
out
pop
mov
lods
aad
xchg
push
mov
hlt
lods
call
mov
lods
jmp
aas
adc
lods
fcompl
fucomp
jecxz
mov
sbb
xchg
aam
xchg
dec
pushf
push
rcr
pop
push
add
cli
push
pop
sbb
in
jbe
sub
arpl
int3
xor
mov
fidivl
pop
loopne
test
jbe
cltd
dec
cmpsl
mov
mov
scas
inc
lret
mov
clc
insb
cmp
out
stc
xor
dec
repz
outsl
fsts
jbe
push
sbb
out
fildll
cmp
xchg
fsubrs
addr16
imul
push
data16
rcl
in
cmp
ret
mov
lds
push
xor
add
dec
xor
in
sub
cli
dec
mov
pop
ja
out
adc
push
fcomi
mov
repnz
ss
mov
mov
adc
mov
inc
shlb
sub
jp
or
jp
fcomi
out
leave
dec
out
addr16
out
int3
or
add
aas
mov
push
or
in
jo,pn
mov
dec
push
add
pop
dec
stos
push
vmovsldup
subb
frstor
nop
stos
and
aas
sbbl
inc
mov
sbb
jmp
push
xor
push
pop
pop
test
shl
in
mov
pop
scas
repz
popf
or
popa
xchg
fisubs
add
pop
daa
sti
sbb
es
adc
testb
stos
push
hlt
pop
hlt
ret
sbb
dec
lods
xor
xlat
push
cmp
movsb
sbb
jg
fstpt
ficompl
js
fbld
inc
sub
push
lret
sbb
or
in
and
dec
push
arpl
mov
lock
sub
lea
faddl
sarb
imul
mov
add
or
jb
xchg
fdivrl
xor
iret
call
xlat
inc
outsl
sarl
jne
pop
js
sub
jbe
inc
ljmp
jno
mov
push
es
test
jle
jmp
out
loop
bound
pop
daa
mov
mov
mov
sti
adc
xchg
loop
and
adc
adc
popl
push
push
ja
loope
aad
pop
xchg
cmp
mov
subb
dec
hlt
rolb
ja
dec
fistl
adc
sahf
divl
adc
jo
jb
lds
arpl
in
out
mov
and
jb
imul
repnz
loopne
xor
mov
xor
aad
rorb
and
dec
push
or
xor
sub
aam
nop
bound
jbe
mov
repnz
mov
fxch
test
mov
xor
daa
push
and
mov
icebp
mov
js
and
in
xchg
bound
lcall
test
xchg
xchg
inc
addr16
out
incb
sbb
cwtl
out
cmc
sub
xchg
jo
add
mov
cmp
lds
stc
leavew
test
sub
dec
mov
xchg
sbb
pop
les
lret
xor
mov
cmc
xor
int
ret
cltd
jg
jl
int
nop
push
shr
dec
mov
xchg
orb
ret
scas
pop
sub
rcll
mov
jnp
mov
scas
adc
dec
lret
or
pop
and
pop
leave
fidivrl
push
cmp
xlat
or
icebp
rorl
icebp
fs
inc
jae
cld
sub
lds
adc
popl
pusha
jb
pop
sub
cmp
iret
icebp
pop
dec
imul
and
dec
sub
int3
mov
sbb
mov
xchg
daa
mov
inc
mov
lea
jp
mov
adc
arpl
push
addb
cld
sub
fldcw
jb
cli
fxch
divb
lret
jb
mov
jmp
adc
pmulhuw
cmc
mov
mov
scas
nop
jp
jmp
push
pop
je
add
pop
jbe
and
pop
pop
dec
clc
or
cmp
sub
mov
aad
loop
mov
clc
add
in
sbb
pop
fsubs
sub
pop
sti
mov
jne
inc
push
and
mov
into
push
out
dec
stc
push
aaa
adc
fistps
out
pop
aam
call
gs
push
sub
jns
mov
sbb
insl
rcr
push
gs
jmp
test
roll
add
and
xchg
es
fisttpl
cltd
fucomi
mov
dec
xor
mov
sub
call
push
mov
int
jl
lea
cmp
push
push
hlt
pushf
push
inc
rcll
push
adc
ds
shlb
mov
int3
push
faddp
cld
xor
fistpll
enter
addr16
mov
mov
movl
pop
pop
jmp
addr16
lea
divb
in
jecxz
fstpt
out
cmp
cld
push
mov
xchg
bound
cs
mov
add
adc
ss
psubw
mov
mov
and
incl
pop
bound
mov
shll
pop
dec
dec
ficoms
add
in
cli
repnz
and
xchg
add
fldenv
repnz
cmc
mov
idivl
push
outsl
pop
in
sub
push
cmp
ret
cmp
idivb
pushf
jp
add
jo
shll
cmc
popf
or
mov
fmul
cmp
xchg
lock
xchg
xlat
add
pop
test
incb
xchg
gs
test
rcrb
jb
mov
cwtl
xor
outsb
push
xchg
repz
cmpb
data16
sbbl
sub
repnz
sub
mov
jle
out
scas
mov
lcall
pop
fisubrl
adc
sbb
xor
push
dec
cli
mov
test
out
cmp
cld
or
jnp
sbb
mov
or
addr16
outsl
cmpsb
iret
lds
xor
sbb
pop
cs
pop
shlb
inc
xchg
lcall
rolb
popa
in
ds
lret
incl
push
sbb
sbbl
fcomi
sbb
lret
test
push
cli
mov
xchg
cmp
push
push
push
repz
lock
aad
pop
test
mov
daa
dec
xor
cwtl
std
mov
arpl
sub
sub
enter
dec
fstl
xchg
push
dec
fdivrl
sbb
test
sbb
dec
cmpsl
dec
sti
xchg
enter
or
les
mov
cltd
hlt
sbb
mov
fisttps
push
jge
cmp
xchg
rcrb
pop
xchg
andl
jg
mov
pop
lret
pushf
loop
decb
std
xchg
lcall
iret
mov
xchg
ljmp
out
gs
jmp
mov
lods
fst
sub
sub
cmp
push
shll
cmp
and
adc
ret
cld
fidivl
push
and
outsb
repnz
mov
mulb
lods
test
repnz
pop
sbb
xchg
cli
es
dec
cmp
jo
mov
cld
lahf
push
mov
sarb
mov
sbb
flds
enter
repz
or
xchg
mov
lock
mov
adc
fadd
xchg
pinsrw
sub
int3
xchg
or
cmp
lds
inc
xchg
mov
pusha
shl
add
jnp
pop
clc
adc
ret
pop
sub
test
lret
cmp
cli
out
call
movsb
and
aaa
movsb
sbb
stos
cmp
pusha
out
lea
or
pop
adc
jb
scas
bnd
in
lock
sahf
loope
inc
pop
add
mov
sahf
push
inc
sbb
mov
push
sub
fidivs
dec
js
xorl
and
subb
scas
mov
js
xchg
fwait
adc
scas
sub
cltd
stos
ljmp
add
in
je
ret
mov
pop
xchg
aam
and
scas
rorb
mov
cwtl
lcall
flds
out
sub
pop
push
aam
xorb
mov
mov
scas
mov
xor
and
into
push
add
shrb
in
sti
es
sub
repnz
adc
aad
add
test
jbe
and
repz
mov
sub
cmp
and
aas
lods
jecxz
test
rcrl
mov
lods
inc
je
cmp
xchg
push
sbb
mov
rcrl
stos
je
pop
push
fadd
lock
jg
and
and
nop
fisubs
lods
cmp
dec
sbb
pop
jle
stos
orb
orl
addb
insb
jae
stos
dec
pop
lds
popf
jecxz
pop
push
popfw
pop
inc
xchg
in
push
xchg
ret
jmp
mov
lret
cmp
fwait
xlat
dec
cmp
movsl
pop
and
add
bound
ss
inc
push
cltd
sarb
sbb
cltd
jle
sahf
and
shlb
cmpsb
mov
addr16
mov
xchg
cld
fadds
mov
or
pushf
js
push
inc
add
push
cmc
insb
popl
in
enter
mov
and
lahf
mov
sti
dec
jno
fldcw
hlt
xchg
ljmp
test
inc
stos
and
cwtl
lock
push
cmp
mulb
xor
add
pop
mov
pop
addr16
xchg
sub
dec
jns
pop
mov
jmp
jge
push
xchg
lea
mov
popa
jp
ficoms
xor
sti
or
mov
out
daa
aam
pushw
push
sub
or
mov
xorl
adc
enter
popa
mov
pop
cmpsb
cmc
cs
fistpl
loopne
or
scas
rep
jp
xchg
out
iret
xchg
sub
add
push
loop
repnz
sbb
jb
cwtl
cli
das
xchg
hlt
das
mov
imul
hlt
push
mov
inc
mov
sarl
jnp
xor
out
jp
stc
jnp
stos
loope
inc
push
dec
sbb
lods
xchg
xlat
incl
sbb
scas
test
out
test
mov
mov
push
enter
or
test
add
fstpl
js
dec
aam
jns
orb
out
sbb
loopne
js
xchg
pop
jnp
push
xchg
push
in
sbb
adc
xchg
and
xor
sub
fs
and
mov
pop
jno
mov
aas
or
jmp
arpl
and
sub
filds
sbb
dec
jecxz
daa
adc
les
fsubl
mov
xchg
sbbl
imul
add
subb
xor
scas
psubq
xor
scas
or
test
out
xchg
jge
out
sub
push
mull
mov
das
xor
xlat
subl
pop
jp
lcall
pop
jmp
in
push
xchg
xor
mov
adc
ljmp
sub
mov
mov
mov
sub
ja
push
mov
repz
pushf
ret
aad
inc
xchg
mov
xchg
dec
mov
ljmp
arpl
shrl
xor
faddl
int3
loop
pusha
imul
xchg
scas
pusha
xchg
xor
cmc
lods
cmp
loop
in
cmpsb
dec
sbb
add
fbstp
test
test
les
push
testl
and
jge
mov
dec
mov
mov
pop
enter
sti
sahf
and
sub
and
rcrl
outsb
xchg
push
shll
frstor
add
adc
lock
lods
cwtl
sarb
xchg
jb
in
orb
sub
push
out
call
sarb
add
xor
cmp
adc
mov
cld
jmp
in
test
call
out
xchg
xchg
pop
insl
mov
addl
leave
inc
iret
mov
fnstcw
pop
jecxz
stos
test
or
jecxz
daa
pop
mov
jb
mov
and
mov
call
sub
sbbl
call
push
mov
mull
ja
lea
mov
push
cli
cli
stos
adc
mov
insl
adc
fcoms
daa
jmp
or
pop
test
mov
stc
int3
loope
ficoms
les
popf
sarb
sbb
adc
pushf
mov
jmp
lds
lcall
ret
lods
mov
testb
dec
lods
das
add
insl
xor
or
fsubl
fadds
lret
das
xchg
jmp
xchg
push
clc
jnp
push
testb
sbb
shrb
lret
mov
mov
test
cmp
imul
addl
inc
cld
aas
call
stos
lods
movsb
push
imul
icebp
rclb
loop
in
stos
xor
movsl
pop
call
xor
pop
lds
jbe
pop
xor
xchg
cmp
inc
cmp
jns,pt
rep
sub
popa
les
daa
push
inc
les
repnz
cmpsl
mov
sbb
xchg
es
xchg
es
pop
insl
push
sub
jns
scas
jns
pusha
insb
push
xlat
pop
sarl
or
int
enter
outsl
sbb
pop
adc
adc
in
and
pushf
stos
inc
pop
pop
pop
lcall
mov
xor
sub
and
std
lods
sub
pop
rdmsr
sahf
and
loopne
pop
xchg
mov
xchg
mov
adc
sti
cmpsl
pop
iret
ja
pop
xchg
lahf
sbbb
in
or
push
pop
cs
xor
xor
out
sub
and
hlt
dec
sub
mov
xor
mov
xorl
mov
sbb
xchg
mov
push
sahf
adc
mov
jnp
lahf
push
fiaddl
movsl
into
adc
aam
xchg
insb
push
xchg
test
test
inc
add
movsb
lods
outsb
lahf
xor
idivb
push
dec
and
dec
or
and
arpl
movsl
mov
daa
lea
push
and
add
sbb
sub
dec
es
inc
movsl
mov
jno
xchg
xor
dec
push
push
dec
mov
sbb
rolb
test
ficoms
xchg
ret
sbb
dec
cmp
loopne
lahf
pop
inc
push
push
fisubrl
jmp
sub
lret
mov
cmp
loope
flds
movl
add
repz
and
std
nop
inc
fnstenv
push
jb
mov
je
stos
cmp
sahf
push
inc
push
idivb
push
loopne
push
cwtl
filds
aad
push
or
test
mov
loop
fsubs
enter
sbb
cmp
mov
and
xchg
fcom
or
sub
es
xor
pop
jns
inc
inc
mov
xchg
push
es
lret
stc
cltd
jns
sti
dec
aaa
adc
jbe
pop
in
test
push
cs
insb
in
mov
mov
mov
sub
insb
out
and
repnz
dec
mov
stos
mov
sbbl
sarb
mov
xor
dec
popa
or
xchg
jbe
adc
add
mov
lods
cli
arpl
fisubl
xor
inc
mov
push
das
sbb
aad
add
adc
test
into
sbb
pusha
insb
mov
add
mov
pop
rolb
in
inc
aaa
push
test
pop
lods
shr
aam
fcom
cmc
sub
push
into
cmc
inc
stos
lods
mov
xchg
loope
out
int
imul
imul
mov
sbbl
inc
lock
or
imul
push
cmovnp
mov
mov
dec
icebp
dec
and
cmp
jnp
and
or
test
push
add
lods
into
lods
inc
and
cmp
xor
aaa
xor
pop
xchg
aas
cmc
push
hlt
imul
adc
ljmp
mov
ret
js
sub
pop
loope
ret
xlat
fiadds
fdivs
cmp
scas
test
cmp
setno
hlt
mov
insl
negb
popl
dec
mov
es
inc
repnz
xchg
mov
loop
loope
lcall
fdivs
jl
test
add
mov
xor
jp
add
and
inc
dec
ret
data16
movsl
and
ja
ret
push
pushl
aam
aam
push
dec
in
mov
dec
cwtl
and
sbb
xor
imul
mov
je
setle
add
mov
xchg
rol
mov
js
ficomps
mov
inc
roll
sbb
push
mov
in
jne
enter
fld
jl
shrl
or
mov
mov
xchg
xchg
aad
mov
mov
nop
jno
aaa
ret
xchg
inc
enter
aaa
and
sub
test
jnp
add
scas
jg
lret
xlat
data16
popf
int3
outsb
testb
mov
sahf
pusha
push
jno
cmp
mov
xor
mov
dec
rclb
mov
xor
shll
adc
cmp
cmp
faddp
loop
dec
cli
aad
inc
pop
sahf
in
stos
jbe
mov
cli
mov
aaa
call
dec
addr16
jl
dec
and
add
or
sbb
jae
fidivrs
sub
sarb
cmp
test
mov
mov
fadds
jno
int
sbb
mov
enter
cmp
stos
jb
nop
cmp
scas
loop
pop
push
push
dec
nop
push
inc
out
pop
add
or
enter
push
loope
dec
movsl
xchg
adc
outsb
push
negb
mov
imul
push
adc
in
pusha
insl
fwait
mov
add
xor
ds
popf
mov
test
add
fs
cmp
into
sub
jnp
shrb
pop
mov
rorb
cmp
lahf
adc
mov
sub
aad
stos
lret
or
xchg
mov
push
mov
adc
xor
outsl
push
outsl
and
aaa
and
sub
push
mov
mov
sbb
hlt
les
das
addr16
movsb
frstor
mov
dec
xchg
leave
pop
pop
pushaw
cmpsl
movsl
mov
sub
push
mov
dec
add
in
outsl
push
stos
mov
mov
dec
sub
flds
leave
sub
jl
jne
cmc
scas
adc
outsl
hlt
mov
or
and
roll
cmc
sbb
fisubl
mov
or
js
add
ret
inc
jae
pop
add
lds
test
and
nop
rcll
in
cmp
scas
sbb
xor
test
cmp
and
jle
jp
and
clc
add
lret
push
test
cmp
addr16
or
arpl
cld
pusha
and
popf
aad
mov
mov
jge
and
xor
testl
push
in
xchg
lcall
outsb
jmp
push
je
pop
ficomps
gs
mov
in
xchg
adc
dec
inc
mov
cwtl
jmp
cmpsb
and
inc
add
xor
cmp
dec
cmp
adc
jge
xor
mov
fldl2t
cmp
in
ret
cmc
imul
scas
ret
mov
dec
push
jge
jo
sahf
leave
push
test
xorb
iret
cmpl
push
sahf
pop
rcl
jmp
add
data16
xchg
mov
adc
outsl
and
jmp
push
xchg
in
mov
fstps
lods
jmp
popa
adc
xor
lock
jo
pop
movsl
mov
test
cld
lahf
mov
daa
inc
adc
mov
pop
mov
movups
imul
push
les
nop
mov
inc
insb
xchg
les
push
hlt
xor
imull
cmp
adc
mov
fistpl
xchg
xor
fistpll
aaa
nop
fisttps
mov
adc
fcom
aas
inc
xlat
push
dec
movsb
inc
jb
dec
jo
inc
shrb
div
sbb
mov
sahf
xchg
lods
leave
mov
mov
sbb
lcall
jbe
daa
mov
jo
fdivl
inc
pop
lret
fmull
ficomps
je
inc
mov
addr16
mov
sub
mov
ret
or
sarb
mov
and
jnp
nop
sarb
mov
jmp
sti
and
andb
jb
sbb
inc
subl
mov
cmp
xor
xor
inc
and
lods
mov
das
movsl
stc
enter
subl
push
adc
in
mov
lret
push
test
fstps
push
ljmp
xchg
mov
add
scas
hlt
mov
ds
mov
stc
mov
ret
pop
push
jmp
lds
inc
mov
xchg
mov
jo
inc
popf
push
jbe
jecxz
cltd
xor
adc
fisubrl
lds
rcl
int3
adc
fdivr
jmp
mov
leave
arpl
ret
pop
andb
jp
cld
out
cmp
push
fisttps
push
pushf
mov
xor
cwtl
jp
vpsllw
jnp
sub
xchg
in
mov
push
and
pusha
icebp
test
xchg
add
pop
mov
nop
sbb
lahf
cmp
or
or
push
mov
cmc
loopne
or
imul
or
outsb
jle
lock
pushf
aaa
scas
and
add
and
cmp
cmp
sub
push
and
dec
stos
sbb
cmpsl
sbb
inc
loopne
ss
stc
in
stc
dec
mov
lret
pslld
pop
insl
pop
rolb
shrl
mov
push
repz
cs
cli
adc
addr16
xor
arpl
dec
pop
push
mov
fstl
push
lcall
and
test
shll
rcl
mov
daa
add
or
shufps
mov
sub
push
sub
push
or
push
sub
gs
scas
cmp
dec
xchg
out
movsb
iret
mov
fwait
inc
out
jle
test
ds
or
mov
movsb
shlb
mov
xorb
cmpl
sbb
in
das
fdivl
xor
lcall
pop
andb
jg
jae
lea
mov
cld
dec
stos
rorl
test
enter
fildl
aaa
ret
xor
nop
cmc
mov
out
rcrb
push
or
mov
lock
jb
or
push
sub
sub
sahf
jbe
jle
sbb
push
ljmp
sbb
jnp
out
stos
inc
stc
ja
pop
scas
mov
and
mov
mov
arpl
fmul
cmp
and
cmp
shlb
and
mov
loop
mov
imul
pop
inc
pusha
jecxz
clc
jae
lock
jle
push
cmp
pop
pop
sarl
jb
inc
dec
cmp
pop
mov
movd
inc
or
cmpsl
pop
mov
clc
push
add
jb
addr16
lods
mov
dec
xchg
push
sahf
mov
fnstsw
stc
xchg
jl
pop
jmp
bound
mov
add
sbb
mov
dec
sub
add
fwait
ud0
clc
ret
fbstp
out
pop
cmp
mov
rclb
adc
icebp
pop
sub
pop
mov
in
pop
lds
jmp
insb
sahf
sub
and
push
loope
pop
jmp
sub
test
and
cmc
cmp
pop
dec
bound
fsubr
adc
js
xchg
je
ret
push
ret
add
push
fsubrl
shrb
sbb
inc
jne
push
dec
jl
les
int
mov
ret
jg
adc
pop
cld
lahf
lds
sbb
add
fldcw
stc
notb
and
imul
inc
fadds
daa
jae
adc
push
mov
xor
gs
sub
das
pop
mov
mov
push
out
dec
mov
dec
sub
sbb
movsl
jno
imul
popf
sub
std
sub
scas
aas
loopne
or
sub
out
shrl
lods
jecxz
jl
adc
inc
in
arpl
xor
psadbw
ficompl
mov
push
dec
inc
das
jp
mov
fcompl
mov
imul
add
movb
add
sub
fcompl
sub
faddl
push
inc
xchg
jmp
and
adc
orb
xchg
cmp
in
sub
adc
imul
xchg
jge
adc
mov
adc
jmp
cld
jge
and
loope
jno
sar
lds
add
lods
sbb
or
mov
push
mov
mov
dec
pop
xchg
inc
adc
nop
xor
mov
and
test
lods
and
imul
mov
dec
inc
out
in
lret
dec
inc
out
sbb
or
mov
lods
pushf
or
or
add
or
mov
lock
cmovs
dec
push
inc
lds
sbb
mov
lret
or
inc
cmp
cmc
push
lds
jns,pn
pop
andl
mov
mov
iret
jo
cmp
add
jmp
xchg
pop
pop
sub
mov
das
sbb
or
pushf
push
xchg
dec
in
in
xor
xchg
jae
jmp
add
bound
mov
push
out
iret
sub
cmp
fucomp
fwait
shll
fwait
cld
out
lret
add
jbe
out
or
gs
test
mov
pop
adc
test
mov
ja
shlb
stc
sub
mov
insb
fs
repz
mov
mov
lahf
test
rorb
inc
enter
dec
movsb
ja
sti
sub
jle
sub
shlb
lea
stos
or
incb
mov
mov
push
int3
sub
inc
add
inc
add
push
mov
bound
popa
out
cli
popl
sahf
loope
out
mov
lock
xor
int
clc
ja,pt
data16
inc
mov
pop
dec
out
cmp
pop
pop
repz
in
inc
dec
rcrl
pop
push
into
fisubrs
adc
scas
xchg
in
ret
jge
push
mov
sub
inc
stos
lock
movb
in
enter
test
push
dec
fdivrl
or
mul
pop
mov
shrl
ljmp
xchg
adc
test
out
lea
mov
aaa
push
and
loop
xchg
clc
mov
push
inc
or
mov
mov
bound
sahf
mov
push
repz
mov
loope
out
mov
lock
xor
int
clc
imul
clc
mov
dec
out
jg
scas
mov
icebp
fsubr
sub
or
lret
cld
fucom
shrl
repz
mov
lcall
lret
scas
mov
stos
add
mov
push
mov
mov
int
push
ss
repnz
dec
ds
fistps
sbb
push
shl
dec
xor
pop
insb
and
mov
xchg
pop
in
add
xorb
mov
and
mull
sbb
xchg
jmp
adc
cmp
adc
sbb
adc
das
orl
pop
sub
mov
jo
cwtl
sbb
iret
fsubp
add
xchg
lods
dec
or
inc
cmpl
lahf
das
xchg
and
imul
dec
repnz
xor
adc
arpl
cmpsl
jl
mov
jnp
sub
clc
push
xor
push
rcrl
mov
cwtl
shrb
cltd
and
cs
lahf
pop
sub
cmp
mov
fcoms
std
arpl
data16
imul
nop
mov
sahf
pushf
sub
xor
pop
sub
lret
xlat
stc
sub
mov
cmpl
lock
push
jmp
xchg
ss
inc
imul
xor
popf
jecxz
bound
fisubl
cmpsb
aas
arpl
pop
ds
decb
xchg
sti
mov
jge
sub
jnp
lret
push
inc
xor
std
addr16
aam
outsb
xor
outsl
mov
push
jecxz,pt
pop
loop
cmpsb
adcb
es
cmpsb
sbb
repz
insb
sbb
rorl
mov
loope
fldcw
xchg
dec
lods
push
xchg
sbb
notrack
xchg
sti
lea
inc
loope
mov
inc
mov
dec
insb
mov
leave
dec
add
mov
or
cmp
xchg
cmpsl
jge
xchg
in
sbb
ficoms
loop
test
inc
pop
sub
lret
idivb
addr16
outsb
adc
test
xchg
out
xor
outsb
dec
and
leave
or
dec
xor
pop
push
sub
in
or
out
ret
mov
int3
fists
xor
sub
hlt
mov
push
pop
adc
push
movsl
int
and
ds
xor
pop
pop
lcall
in
test
lods
or
testl
push
add
jmp
icebp
xchg
xchg
cmpsb
mov
xchg
xchg
mov
cli
pusha
fs
xor
cld
test
popa
in
jmp
cltd
shlb
ret
sbb
movsl
dec
push
cmp
dec
ret
ror
pop
and
mov
stos
jecxz
cmp
gs
jge
mov
rclb
add
xchg
popa
mov
xchg
sub
call
dec
ret
jge
lahf
jnp
fldl
fcmovu
in
xchg
inc
pop
mov
mov
xchg
nop
adc
in
and
test
sub
stos
sub
pop
jne
loop
lahf
xchg
or
xchg
adc
mov
xor
pop
cmp
out
leave
fimuls
sub
shll
cmp
jle
rol
and
lock
ret
inc
aad
adc
jne
add
jg
nop
pop
push
fcmovne
or
push
enter
loop
sbb
movsb
out
xor
mov
sahf
inc
and
daa
mov
dec
lahf
or
jb
addr16
lods
mov
fwait
mov
hlt
test
push
sbb
mov
jmp
movsb
in
add
add
add
jmp
xchg
add
mov
popf
sub
xchg
add
push
cmp
add
dec
mov
frstor
push
push
outsb
not
fadds
rcll
addr16
jo
aam
xor
xor
mov
scas
aam
and
iret
add
push
push
mov
add
and
movb
jle
xor
pop
xchg
mov
push
imul
aad
and
xlat
or
aam
mov
idivl
lahf
fistpl
jp
jnp
push
ja
test
loopne
and
xor
add
mov
xchg
shll
stos
pop
les
inc
xor
cltd
push
mov
les
mov
and
or
push
sub
jl
aaa
outsl
dec
dec
jge
jmp
dec
shr
stos
arpl
loopne
inc
xor
ficoms
adcl
sub
adc
xlat
push
stos
inc
xor
icebp
insl
or
test
scas
aas
lcall
or
or
fsubrl
call
movups
jmp
data16
xchg
ficompl
xor
test
das
rorl
inc
lods
int3
repnz
sbb
mov
mov
js
lds
incb
sub
jae
popa
stos
shrb
cmpb
and
out
mov
aad
rcr
cmp
imul
das
push
mov
out
or
iret
dec
js
sbb
mov
dec
sub
arpl
or
bound
cmpsb
jmp
fistps
pop
out
test
popf
push
adc
or
or
aad
daa
sahf
in
test
xor
adc
jmp
repz
mov
inc
lods
filds
add
int
inc
adc
mov
pop
and
ficomps
jnp
jbe
mov
xchg
stos
and
mov
ja
push
or
faddl
adc
popa
xor
push
lret
or
adc
push
and
cmp
mov
lcall
ds
mov
ret
mov
icebp
and
movsl
sub
add
shrl
and
shll
cmpsb
xor
std
aaa
movsb
outsb
sbb
push
mov
cwtl
mov
clc
imul
movzbl
stos
mov
sahf
cwtl
mov
into
sub
push
mov
xor
and
shrl
inc
mov
loop
and
xor
or
rcrl
cmp
push
gs
int
add
psadbw
ror
mov
jl
les
mov
inc
xchg
hlt
popa
fwait
push
inc
fs
jae
xor
xor
xchg
out
mov
call
movsb
int3
cmp
xor
xchg
lea
or
cmc
xor
xorl
push
inc
mov
insb
mov
xlat
js
fdivrl
xor
mov
mov
mov
push
call
fsubrp
xchg
pop
and
adc
xor
jl
push
and
loopne
mov
adc
mov
mov
sub
push
ljmp
or
imul
mov
add
push
test
lods
inc
js
inc
outsb
adc
imul
add
shll
aas
sbb
or
gs
nop
xchg
enter
es
or
jo
out
out
and
inc
arpl
cmp
in
adc
push
sahf
popf
popf
sti
xchg
sti
in
lock
cmp
int
addr16
add
inc
xorl
mov
cwtl
xchg
cmc
sahf
insb
or
cwtl
shrb
inc
shrb
xchg
add
inc
push
fisttps
cmpsl
mov
and
mov
xor
adc
mov
shrb
or
enter
adc
pushf
rolb
xor
addr16
out
push
dec
cmpb
or
ss
mov
push
sub
jno
ljmp
push
sti
xorb
sub
xchg
lods
js
cltd
mov
scas
dec
push
das
push
sahf
aaa
dec
lods
std
dec
add
mov
xchg
fnstenv
inc
not
xor
imul
cmpsl
test
btc
pop
or
pop
or
jle
mov
xchg
dec
xlat
fdivs
out
cwtl
gs
xor
jecxz
ret
xchg
adc
mov
lea
mov
nop
sub
hlt
adc
adc
xchg
cli
mov
sbb
and
or
sbb
fdivrl
inc
je
push
pop
shll
and
jmp
addr16
inc
dec
test
aaa
and
pop
jb
xchg
subl
outsl
push
pushf
js
arpl
mov
icebp
dec
cmp
loope
aas
loopne
or
push
sub
or
or
rcrb
iret
fldl
or
sub
shrb
sub
jne
loope
repnz
lods
cmpsl
and
mull
repz
pop
pop
leave
add
pop
and
cltd
clc
ret
repz
pop
mov
adc
xor
aad
inc
rcll
out
push
mov
cmp
ficoms
adc
in
bswap
sub
xchg
cmpsb
lahf
and
fildll
mov
jbe
insl
dec
dec
bound
pop
into
movsl
out
cmc
or
cld
lcall
lret
cmpsl
push
test
imul
sbb
and
les
in
cs
loopne
js
inc
imul
pop
dec
cld
adc
pop
imul
scas
cmp
mov
xchg
dec
dec
stos
lret
push
mov
xlat
in
into
lock
mov
es
shlb
sub
arpl
inc
int
push
test
repnz
das
push
pop
ss
or
add
sub
ret
dec
adc
push
aad
in
push
cmpsb
sar
mov
adc
push
mov
mov
stos
dec
popa
rorb
ss
add
inc
inc
jmp
adc
pop
pop
popa
stc
outsl
nop
inc
repz
mov
sub
aaa
mov
fistpll
shlb
icebp
push
mov
in
push
or
rcll
int3
je
out
sub
fistpl
loope
stos
data16
jne
pop
imul
repnz
pusha
out
xchg
xchg
push
mov
dec
or
cltd
pop
dec
hlt
xlat
insl
lret
data16
fldenv
test
scas
jp
push
mov
jmp
push
fmull
cmpsl
xchg
add
stc
sub
mov
outsl
sbb
lret
jle
mov
sub
das
pusha
insb
mov
aad
gs
mov
cmp
jl
xor
pop
lret
mov
lock
cmp
dec
cltd
cwtl
sbb
and
in
add
jb
push
jecxz
jmp
push
scas
movsl
xor
ret
test
ret
pushf
or
mov
dec
sbb
test
lcall
ret
jmp
mov
xchg
aad
vandnpd
cli
data16
stc
dec
pop
cmp
sbb
xor
mov
dec
add
mov
sub
mov
adc
cmp
imul
cmp
sbb
mov
and
pushf
lods
mov
dec
mov
bndldx
cs
pop
fs
lahf
dec
add
std
aam
inc
sub
shl
or
mov
daa
sub
fdivrl
cli
popa
sub
mov
leave
and
iret
pusha
sub
and
xor
xor
or
repz
pop
push
nop
push
fdivrs
cmc
aaa
inc
sbb
ljmp
int
and
enter
mov
icebp
icebp
sub
inc
fstpt
mov
adc
mov
scas
inc
mov
scas
fisttps
xor
insl
repnz
lcall
push
cmpsl
dec
cld
and
out
in
mov
in
std
lret
call
out
test
popa
movsb
cmc
sub
push
pop
or
test
pop
hlt
pop
insb
lods
jp
adc
add
stc
cmp
sbb
adc
shl
cltd
xchg
test
pop
mov
test
jnp
inc
inc
aam
add
inc
pop
insb
aas
sub
insb
xchg
mov
cmp
pop
fisubl
and
jp
jecxz
or
loop
push
aaa
arpl
stos
imul
lcall
roll
fs
andl
sub
je
jae
cmc
lods
xor
push
or
push
fwait
pusha
movsb
jnp
xorb
xchg
sbb
cmpb
sub
pop
idivl
xchg
xchg
popa
inc
push
rol
mov
mov
cmpsl
mov
gs
stos
lods
cmp
lret
ret
sbb
fcomip
js
popf
push
mov
imul
fs
insb
cmp
jge
push
mov
hlt
push
insb
shr
adc
mov
mov
jmp
fcoml
popa
dec
xchg
out
cmp
sub
mov
loope
mov
pop
ds
cmp
jp
xlat
inc
loopne
xchg
push
mov
cld
pop
adc
xchg
adc
xchg
cmp
or
push
lcall
push
mov
mov
pop
stc
loopne
roll
xchg
add
cmpsb
test
jge
cmp
scas
mov
ja
cmp
pop
mov
adc
or
xchg
cmp
enter
sbb
lods
xor
and
mov
jl
test
mov
adc
rcrl
add
jbe
sti
xchg
cmp
int3
fcomps
or
add
lods
shlb
dec
xchg
js
test
shll
adc
or
imull
dec
push
icebp
and
cli
adcb
rcrb
xor
dec
adc
mov
and
aad
jo
enter
cmp
insb
push
ret
cmp
or
cmp
lcall
popa
push
add
fld
mov
sbb
mov
xor
paddsw
cmp
in
fidivs
lret
bnd
lcall
stos
lea
vphaddwd
popf
xorl
fwait
sub
fnstenv
int3
sti
xlat
mov
jmp
xchg
sub
fiaddl
cmp
push
outsl
and
lock
mov
insb
into
repz
js
cltd
and
sub
inc
cli
dec
pop
pop
cmpsb
push
imulb
aad
scas
sub
and
icebp
shll
in
lcall
out
dec
into
outsb
ret
testl
lods
lret
not
jne
cmp
jo
fsubrs
mov
aaa
inc
mov
pop
jmp
mov
fnstcw
clc
mov
adc
lret
leave
das
add
push
into
fwait
mov
dec
xor
adc
test
mov
xor
cmpsb
mov
or
mov
js
lock
repz
or
ret
mov
or
xor
gs
cwtl
idivl
ljmp
lock
xchg
xchg
sbb
lret
cvtpi2ps
in
or
xchg
aas
sbb
loop
mov
mov
jb
jns
xlat
rcl
add
je
int3
in
iret
sahf
in
pop
pop
adc
mov
add
sub
xchg
and
push
fs
rcrb
imul
sbb
enter
jle
pop
mov
pop
les
mov
and
inc
rcr
cli
sar
and
nop
dec
scas
out
mov
daa
sub
in
push
nop
or
das
int3
sarb
dec
orl
ucomiss
lahf
ret
fbld
xchg
cmpsb
into
jo
adc
cmp
pop
cld
dec
cmpsb
shrb
mov
int3
adc
xchg
bound
sbb
sarb
ja
hlt
adc
rcl
js
push
xchg
arpl
loop
std
or
sub
xchg
mov
xchg
push
push
and
std
inc
jmp
inc
adc
mov
inc
pop
fs
fstpl
shll
mov
xlat
adc
ss
movsb
dec
xor
jb
xchg
ror
xor
mov
ret
ret
nop
sbb
stc
es
in
dec
jge
pop
dec
insb
inc
and
loop
mul
jp
fnstenv
popa
call
xchg
lret
fs
outsb
lret
xor
xor
xchg
sbb
fst
mov
rcl
jp
leave
xchg
dec
mov
and
daa
es
add
setns
pop
in
lea
test
mov
sbb
popf
sahf
int
and
cmpsb
cmpsl
pop
add
or
fisubrs
iret
adc
jecxz
sub
jne
loope
fnsave
pusha
xor
and
roll
mul
cmpsl
pop
jbe
push
mov
subl
xor
jnp
stc
or
fs
lods
xchg
and
cmc
scas
jl
ret
mov
cs
jmp
dec
cmpsl
add
insl
nop
outsb
or
cltd
sub
pop
les
into
inc
mov
enter
fistl
adc
inc
dec
jecxz
jg
or
inc
dec
ljmp
cmpsb
push
loopne
adc
xor
int
jmp
pusha
mov
outsl
ljmp
mov
add
mov
inc
mov
fs
hlt
adcl
lds
xchg
repz
cmp
notl
jle
fwait
sti
pushf
fcompl
add
call
push
hlt
xchg
cmp
cmp
pop
xchg
push
sbb
jecxz
xor
and
loop
enter
pop
inc
mov
loop
ljmp
shrl
cwtl
lcall
call
or
rcrl
xchg
push
test
pop
pop
daa
imul
lret
adc
xor
out
sar
outsb
cmc
and
stos
icebp
aam
movsb
xchg
fs
mov
daa
dec
xor
outsb
pop
lods
push
or
fxch
jge
icebp
xorb
mov
pop
mov
inc
or
cmpsl
fstl
mov
xchg
popa
lock
sub
and
gs
sahf
push
push
and
xchg
jg
leave
or
aad
jns
fwait
push
and
push
mov
jns
sbb
adc
out
dec
xchg
stos
decl
cmc
xchg
call
lods
mov
mov
cli
jge
mov
popf
pop
jmp
push
scas
cmpsl
aam
out
dec
xchg
dec
pushf
mov
stc
int
cmp
pop
ret
add
sbb
out
xor
shlb
in
sub
icebp
pop
lret
cmp
jns
add
push
add
sub
xchg
inc
mov
inc
lea
add
push
pop
out
or
addr16
in
inc
iret
jo
das
icebp
dec
lret
movb
and
leave
jmp
and
dec
call
jmp
add
cmpsl
fidivs
fcmove
lock
addr16
jg
xor
adc
sbb
mov
and
sub
adc
icebp
and
fisubrs
and
or
xor
repnz
fwait
xchg
sbb
fdivrs
adc
mov
xor
outsl
lret
leave
fidivrs
stos
cmp
push
sub
in
fst
ret
sub
push
sub
adc
insl
loop
and
call
add
js
pop
xor
rorl
outsl
in
xlat
in
imul
xor
rcrl
xchg
xchg
out
lods
cmpsl
xchg
std
jae
mov
jmp
addr16
mov
mov
ljmp
popf
int3
in
fmull
data16
jae
mov
xor
rclb
insl
cs
jp
pop
inc
lahf
cmp
outsb
lods
jns
pop
inc
lea
sarl
pop
shl
pop
outsb
push
es
jae
adc
inc
adc
jnp
push
sbb
test
xchg
fbstp
xor
test
rorb
dec
lea
lods
in
cmpsb
adc
and
out
inc
mov
sbb
sahf
test
repz
pushf
push
mov
aaa
sub
pop
scas
push
lahf
cli
enter
stos
adc
into
in
test
aas
fcoms
xor
cmpsl
add
push
mov
add
sub
lds
xchg
cwtl
fldt
jb
loope
cmp
sub
mov
push
popw
loop
mov
insb
test
xchg
in
jge
shlb
ja
addr16
negb
sub
mov
arpl
jl
sahf
adc
sti
jnp
insl
sub
pushf
mov
jae
int
repnz
mov
dec
loope
mov
jl
xor
sub
int
aam
fstps
mov
pusha
fisttpll
out
dec
out
push
jnp
fnstcw
inc
push
pop
cmp
add
pop
add
jg
dec
sub
test
sub
adc
add
sub
mov
sbb
push
paddw
loop
enter
pop
test
int3
dec
scas
push
out
add
das
push
or
pop
lcall
int3
push
imul
in
repnz
lock
movl
push
nop
into
xor
sub
dec
fcomps
aam
lods
cmp
lea
mov
sub
add
xchg
push
lock
jp
sub
sbb
aad
int3
adc
jmp
xor
mov
sbb
shlb
pop
lret
cmpsb
sub
cmpsl
xchg
daa
push
dec
rcrl
pop
mov
jl
bound
les
les
add
mov
cmp
and
sbb
aad
aad
and
dec
add
mov
push
insl
push
jns
xor
ljmp
jecxz
sbb
jae
ss
in
out
cmp
sub
mov
movsl
out
xchg
icebp
out
sub
mov
pop
lods
cmpsb
sub
test
or
cmp
dec
cmp
add
adc
ss
inc
add
out
mov
cmpsb
rorb
nop
lock
lret
and
call
fistpl
jo
mov
mov
add
push
mov
jmp
push
jns
push
mulb
andb
std
movsl
xor
js
lret
adc
clc
inc
test
push
lcall
adc
dec
in
or
mov
mov
icebp
stos
ds
xchg
lret
push
movaps
mov
test
int3
sti
repnz
shlb
push
xchg
pop
test
push
sbb
xchg
shl
fbstp
adc
fwait
xor
pop
fs
ja
mov
inc
scas
mov
pop
repz
stos
iret
push
rcll
fdivrs
sub
outsb
lea
stc
or
loopne
adc
pusha
movsl
jb
stos
mov
xor
mov
rorl
mov
adc
mov
in
stos
xchg
das
cmpb
and
clc
pop
mov
push
lods
add
fisubrs
mov
pop
movsb
imul
aaa
mov
jb
xor
aad
jl
push
imul
sbb
notb
push
fs
and
push
es
inc
pop
sub
xchg
repz
test
push
mov
js
shrl
dec
mov
mov
pop
mov
jo
dec
xchg
lods
mov
jle
cmp
push
dec
pushf
lret
and
or
xor
rolb
repz
push
ds
rorl
popa
adcb
cmp
add
shl
in
jg
add
and
push
movsb
outsb
enter
fs
das
std
test
cmp
jmp
mov
enter
hlt
lcall
sub
xlat
loop
mov
lcall
rcrl
sub
daa
pop
notl
int
and
sub
addl
scas
adc
mov
mov
jge
adc
xor
mull
inc
push
inc
jnp
xor
fcmovnbe
push
pop
cld
cli
ss
push
mov
adcl
xor
inc
enter
setp
and
add
push
adc
or
adc
stc
mov
icebp
mov
cwtl
xchg
jns
xor
ds
mov
add
mov
and
nop
test
inc
mov
mov
adc
xchg
ljmp
inc
pusha
fstpt
bound
mov
dec
adc
jmp
cmp
aaa
pop
cwtl
lods
out
xor
xor
sub
cld
push
mov
jmp
mov
mov
cmc
ret
aas
call
cli
pop
mov
mov
add
arpl
leave
loopne
movsb
jns
jae
mov
fistl
ficomps
popa
sub
inc
cmp
xchg
fwait
es
push
iret
int
sbb
stos
cmp
movsb
mov
jp
insb
and
inc
ljmp
or
scas
inc
loope
les
mov
xchg
leave
and
out
fimuls
repz
and
fstl
imul
push
lods
push
faddl
or
jbe
xchg
sbb
xchg
jmp
out
xchg
stc
sub
fs
and
sub
nop
test
dec
dec
gs
pusha
cmp
xchg
mov
pop
cmpsl
test
cmpsb
movl
scas
scas
add
xchg
inc
cld
cwtl
lods
imul
lds
testb
cmp
xlat
test
loop
dec
sbb
in
prefetch
add
dec
add
pusha
inc
cmp
int
dec
sbb
mov
pop
int3
imul
mov
xor
pop
push
adc
jno
add
sub
pop
xor
dec
jnp
mov
int3
xchg
mov
pop
add
xchg
sub
ret
cmp
popf
mov
and
into
or
cmpsb
xor
ja
es
int
sarl
inc
inc
xchg
int
cli
cs
dec
jl
ljmp
cmp
xor
negb
jecxz
jp
lahf
jno
cmpsb
shr
movsb
push
je
adc
repz
jl
dec
sub
dec
sub
mov
sub
jmp
add
int3
xchg
cmpsl
ret
sbb
test
pushf
enter
sti
rcll
enter
dec
frstor
mov
stos
sbb
pop
mov
ffreep
movsl
xor
vpaddw
stos
lret
les
push
popa
jl
pop
and
push
mov
fidivl
adc
test
jo
es
jbe
lods
push
loopne
mov
sti
cli
jmp
cli
cmp
mov
mov
lcall
mov
pushf
cmpb
lret
xchg
add
mov
fsubrp
lcall
jae
pop
pop
xchg
dec
xor
xchg
mov
fbstp
test
das
loop
lahf
les
xor
jbe
cmc
clc
adcb
ficompl
sahf
aaa
scas
les
adc
jg
movsb
fistps
gs
sti
add
lret
clc
push
xor
jae
hlt
out
int
jg
gs
int3
dec
je
roll
cmpsb
lods
adc
lea
in
and
ret
xchg
shlb
rsqrtps
loopne
movsb
nop
loopne
cmp
and
add
mov
pusha
cmp
mov
inc
arpl
insl
shlb
cld
nop
fbld
sub
int3
mov
cmp
movsb
sbb
fcompl
lds
jns
xchg
test
dec
in
pushf
cltd
inc
cmp
mov
push
scas
or
and
xor
aad
insb
enter
inc
or
push
push
xchg
dec
push
test
imul
aas
pop
dec
and
faddl
dec
xor
and
fmulp
xor
ljmp
mov
pop
and
mov
push
and
sbb
aas
xchg
loopne
icebp
lods
imul
call
aad
sbb
imul
addr16
rcrl
rcrb
push
int
ret
fwait
out
mov
orl
enter
xchg
push
xor
divb
mov
lds
xchg
mov
pop
adc
loopne
jns
sbb
mov
mov
pop
cmp
leave
dec
daa
je
push
or
cld
out
jge
in
fdivs
repz
add
pop
ds
mov
add
jp
pop
pop
adcb
cltd
shl
popa
and
cmp
jmp
arpl
jp
sbb
dec
fs
ljmp
cli
shrl
fmul
adc
in
sub
test
mov
xchg
jle
jne
notl
movsb
jmp
push
cmpb
jnp
arpl
dec
or
data16
aaa
iret
push
xchg
mov
inc
inc
adc
cltd
sub
js
movsl
call
setns
in
dec
out
call
repz
or
iret
int
bound
pop
stos
jg
js
cld
shll
or
stos
xor
stos
pop
cmp
cmc
int3
mov
mov
jno
popa
push
sbb
and
xor
stc
sub
testl
xchg
fcoms
out
add
or
sbb
jle
push
push
mov
jnp
push
fdivrl
mov
lahf
bound
repz
leave
test
loop
mov
fs
aas
xlat
aaa
xchg
insl
or
cs
arpl
jecxz
or
xor
cli
popa
sub
mov
xchg
lock
pushf
mov
loopne
mov
shlb
mov
lea
dec
mov
dec
inc
sbb
mov
int3
sbb
cmp
outsl
pop
pop
xchg
call
fistps
and
xlat
je
ja
lods
push
in
loope
xor
ret
dec
and
in
lods
mov
in
ss
fnstcw
cld
fisttpl
mov
out
je
sarl
roll
push
adc
test
iret
pop
mov
sbb
sub
pop
lret
mov
adc
pop
ds
cmp
dec
push
and
daa
fld
and
pop
push
aad
xor
shrb
int3
insb
adc
add
and
cmp
mov
fs
pop
call
movsb
jns
cltd
sbb
cltd
mov
movsb
stos
aas
out
inc
push
and
lret
dec
les
cmp
into
xor
add
lock
jl
mov
pop
hlt
push
push
cmp
call
jge
adc
fs
insb
aam
jns
fisubl
ss
xchg
mov
cmp
xchg
pop
lods
adc
xor
xchg
adc
outsl
add
cld
imul
lret
cmpsl
ss
mov
dec
stc
mov
mov
arpl
inc
pusha
jle
pop
dec
or
xchg
sbb
shl
cmc
dec
cmp
dec
insl
xchg
adc
sbb
dec
sbb
loope
cmp
daa
and
in
test
add
and
and
mov
enter
negl
bound
cmpsl
jmp
cwtl
mov
imul
or
inc
arpl
sub
jge
push
shlb
push
lcall
sub
cmp
rorb
pop
testl
mov
fcoms
lret
xor
cmp
shr
outsl
sbb
adc
or
xchg
aas
lock
cltd
fildl
mov
xchg
adc
inc
test
lods
sub
sub
mov
rolb
aas
cld
dec
jae
lcall
aas
insb
ret
push
add
cmp
mov
notl
sbb
mov
jl
adcl
outsb
adc
jnp
push
out
and
data16
pop
jecxz
push
pop
shl
mov
jb
add
adc
aad
fbstp
ret
push
adc
mov
loopne
jb
fnstenv
xchg
pop
imul
dec
enter
mov
data16
pop
lret
imul
out
xorl
popa
push
push
jae
inc
ret
push
push
lea
mov
cmp
lahf
mov
pop
jnp
and
xchg
jmp
add
jbe
roll
repz
mov
pop
cmp
jbe
mov
insl
in
pop
mov
ficoms
lret
scas
adc
dec
stos
cmp
and
mov
iret
lock
ret
jae
out
insb
ljmp
adc
testb
orl
and
sub
dec
aas
sbb
test
and
mov
popa
js
cmp
fsubrl
ficoms
test
mov
pop
add
ljmp
fdivs
push
or
sub
jp
xchg
test
sub
jmp
xor
xor
push
test
jmp
loopne
xor
mov
imul
push
push
insb
aad
push
testl
cld
mulb
stc
dec
in
int3
movb
add
mov
addb
adc
movsl
outsb
sti
dec
lock
push
mov
imul
lods
adc
mov
sbb
push
jns
hlt
sub
jp
mov
jge
sbb
or
lret
test
mov
xchg
mov
jg
lods
aas
int
cmc
test
loope
test
jne
mov
imul
push
mov
cmp
or
sarl
add
inc
paddb
mov
mov
jge
gs
or
sarl
sub
mov
jo
adc
pusha
dec
dec
mov
inc
jg
mov
sbb
out
fcomps
xchg
cs
pop
mov
xchg
cld
xchg
xor
popf
mov
xchg
push
sbb
mov
push
in
cmpsb
test
inc
inc
or
xchg
outsb
mov
hlt
stos
pusha
pop
stos
or
or
mov
inc
sahf
xchg
fdivs
iret
jecxz
add
bound
repz
push
adc
pop
clc
sub
sti
lahf
addr16
xor
jge
in
repnz
out
outsb
fstps
jmp
jb
push
imul
xchg
adc
aaa
push
jp
cs
arpl
int3
icebp
loopne
idivl
out
add
sti
dec
mov
lret
jmp
imul
popa
xchg
pop
lret
into
lea
jmp
lock
rep
fistpll
pop
sbb
lretw
mov
sub
out
ret
loope
adc
mov
out
jnp
pop
cld
fiadds
test
cmp
dec
xchg
adc
fisttpl
popl
xchg
enter
pop
sub
or
and
aam
jnp
pop
cld
fiadds
jnp
xlat
xchg
add
mov
push
or
dec
lret
adc
xor
cli
jne
mov
push
test
add
adc
je
or
enter
pop
aad
push
lahf
repz
jno
pop
add
addr16
out
sbb
sbb
adc
iret
in
sub
mov
aad
cld
cmp
and
push
daa
sbb
sbb
pop
mov
loope
xor
icebp
inc
fsubp
xchg
push
cltd
cmp
push
rol
shl
cmpsl
in
les
leave
imul
and
add
jo
or
fmuls
fnstcw
dec
xor
push
adc
adc
ret
dec
mov
push
cli
xchg
inc
sbb
push
adc
inc
xor
aas
aam
out
mov
rclb
inc
dec
push
mov
mov
mov
aaa
pushf
cmpsb
mov
lahf
sub
js
es
jae
jns
inc
addb
adc
sub
gs
jno
jl
cs
loope
or
xchg
je
fldenv
and
loopne
out
aad
movlps
push
jg
in
loopne
pop
inc
adc
dec
adc
mov
inc
cmpsb
mov
dec
dec
sbb
or
imull
out
xlat
andl
add
inc
pop
add
or
xor
or
xor
dec
sub
stos
fcoml
jp
insl
xor
aad
lret
dec
ret
test
push
mov
mov
fadds
sub
and
subb
jne
pop
jmp
jno
mov
mov
cli
popa
cltd
iret
movsb
xchg
push
jb
in
mov
xchg
dec
out
dec
orl
vmovss
imul
popa
mov
sub
lahf
sbb
repz
xchg
je
imul
int3
cmpsl
or
stc
insl
test
push
scas
loope
sbb
add
pop
lods
ss
or
ja
inc
gs
dec
push
sbb
fadds
leave
or
je
sbb
jecxz
out
add
in
mov
lock
idiv
dec
ret
and
add
or
jne
stos
and
push
add
cmpl
testb
out
push
mov
mov
int
je
adc
out
inc
iret
popf
xor
mov
cmc
push
push
jmp
pop
cld
dec
pusha
mov
push
and
xchg
sub
cmp
adc
lea
repz
aas
sbb
ljmp
and
push
scas
cwtl
iret
ss
mov
xchg
fmul
movl
mov
mov
imul
mov
ds
js
adc
adc
sub
sar
adc
inc
sbb
aaa
or
and
xor
scas
push
cmp
or
cli
cwtl
dec
rorl
ficoml
xorb
shll
pop
mov
lds
mov
clc
dec
js
repz
mov
mov
push
xchg
mov
push
insl
test
cli
out
aad
nop
jl
or
push
lret
aam
mov
dec
mov
sub
mov
data16
mov
push
imul
mov
jl
sub
inc
jb
out
sti
mov
or
mov
inc
add
mov
inc
pop
pop
rorl
mov
flds
or
out
ret
sbb
mov
lcall
push
or
xor
sbb
loop
push
add
call
xor
mov
ljmp
adc
fidivl
pop
push
cmp
scas
and
shl
testb
int3
jl
mov
mov
shlb
insb
pop
mov
shl
cmp
jmp
inc
mov
fyl2xp1
lahf
xchg
push
xchg
xchg
inc
or
or
outsl
push
sbb
add
or
sbb
xchg
sub
std
lret
inc
or
outsl
sbb
aam
mov
mov
fucomi
lods
loope
adc
sub
xchg
xor
mov
rcl
cmp
jp
mov
ljmp
rclb
lods
fildll
jns
cmp
push
mov
je
jbe
push
push
mov
std
pushf
xchg
xchg
leave
das
xor
insl
cmp
daa
inc
cli
iret
lret
call
in
mov
shlb
add
or
subl
jecxz
xor
mov
ror
push
scas
push
add
ds
sub
mov
popa
lret
adc
cmp
jg
and
lret
cmpsl
movups
adc
js
cmc
les
xchg
stos
out
inc
push
cmp
jbe
scas
sahf
cmp
notl
repz
cmp
mov
pop
and
fwait
mov
or
pop
cld
lcall
xchg
or
ret
mov
int3
repnz
cmp
cmp
push
insl
stos
arpl
or
mov
or
ja
push
xor
or
inc
fmull
jno
jne
sub
cmp
pop
mov
mov
in
push
scas
sub
sbb
popa
scas
fdivrl
aam
popf
les
pusha
sub
inc
mov
mul
push
dec
add
fnsave
xchg
data16
addr16
loope
addr16
push
push
push
xchg
jle
xor
pop
xchg
fstl
jns
sub
inc
shll
jp
out
cmc
cli
pop
outsl
push
mov
lret
popf
cmp
repnz
outsl
push
call
pop
pop
in
cmp
fisubl
xor
inc
sub
and
push
push
flds
add
add
sbb
inc
mov
pop
fadds
outsb
int
xchg
mov
clc
out
lcall
out
jl
fdiv
shrb
add
lcall
test
push
les
sbb
leave
clc
out
je
xchg
test
mov
fstl
fimuls
ret
addr16
inc
inc
mov
sarl
clc
cmp
push
mov
test
cmc
shlb
push
loop
xor
and
mov
push
pop
cmp
das
data16
ret
imull
lret
jmp
mov
and
jb
stc
add
fidivrl
dec
jns
mov
cmp
mov
fimull
imul
sar
cmp
cmpsl
adc
mov
into
popf
loop
dec
out
adc
or
enter
repnz
outsl
jno
sub
call
fldenv
mov
xchg
pop
lds
dec
mov
jp
mov
psubusb
jecxz
jne
imul
pop
xor
xor
mov
dec
fisttpll
decl
mov
add
repz
adc
push
sbb
pop
push
mov
cld
jg
jns
push
inc
test
mov
mov
in
test
mov
mov
sub
or
adc
mov
das
push
inc
lea
out
add
push
pop
xchg
xor
cmp
mov
lods
pop
or
pop
push
test
scas
je
inc
insb
mov
iret
mov
mov
cmp
iret
inc
push
and
stos
aas
mov
mov
pop
fsts
push
mov
sbb
pop
mov
adc
mov
cmp
mov
mov
mov
icebp
push
mov
xor
cmp
mov
in
cmpsb
sbb
mov
pop
cmpsl
lret
out
scas
and
sub
push
aaa
mov
or
pop
out
sub
pop
xor
stc
pop
jg
xchg
and
cmp
push
vorpd
hlt
sbb
lahf
jecxz
xor
cld
in
adc
insl
in
add
mov
add
bound
lea
and
pop
mov
pop
pop
or
or
imul
cmc
gs
xor
stos
sahf
lea
mov
pusha
fnsave
dec
mov
rolb
xchg
push
xor
add
add
jne
adc
xor
pusha
jle
jge
leave
int3
jne
jno
pop
jno
sub
cmp
popa
cmp
jmp
fiaddl
mov
inc
loopne
adc
xor
adc
les
adc
lcall
inc
cmc
fidivrl
int3
add
inc
jp
lahf
cld
push
in
xor
cmp
pop
mov
xchg
imul
cmpsb
xchg
and
sub
jmp
pop
shlb
mov
ljmp
aam
push
sub
cmc
aas
xor
inc
lods
push
adc
sub
sub
aad
pop
cs
cmc
orl
cld
frstor
out
enter
testl
jmp
cltd
push
out
adc
pop
scas
inc
imul
and
inc
and
mov
aad
jo
mov
mov
loop
pop
xchg
fcoms
ss
popf
xchg
aaa
dec
push
cwtl
out
sub
jmp
daa
and
int
cs
int3
cmp
data16
jle
in
in
lret
or
xlat
lcall
mov
mov
pop
mov
push
cli
mov
rcrb
jle
adc
inc
dec
and
gs
jns
push
mulb
mov
sbb
hlt
mov
jge
inc
mov
push
xchg
shlb
xchg
add
imul
icebp
sub
pop
ss
pop
jb
sti
sub
push
ja
pushl
or
popa
insl
push
in
pop
mov
out
into
cmp
jo
sti
movsl
push
jbe
ds
mov
and
sub
rorb
loope
jmp
fwait
mov
dec
xor
jge
pushf
mov
inc
and
push
cli
jns
mov
in
je
jae
sub
shl
dec
adc
sarb
pop
cltd
pop
pop
jnp
add
or
sbb
aam
sub
mov
adc
gs
cmp
push
add
dec
jnp
push
iret
add
adc
mov
mov
repnz
mov
pop
inc
push
add
jno
sub
push
test
mov
mov
xchg
cmp
mov
loopne
cmp
das
push
jle
outsl
int
shl
xchg
ficoms
and
mov
rorl
or
hlt
and
add
ror
pop
lret
cltd
dec
pop
and
mov
mov
insl
sub
daa
push
dec
andl
and
xchg
inc
arpl
jnp
and
addb
fdivs
push
adc
test
mov
outsb
out
dec
adc
and
fnstenv
xor
mov
or
mov
push
movb
jbe
mov
test
lret
fbld
outsb
lret
in
cmp
and
mov
divb
jns
inc
sub
mov
pop
pop
xchg
test
and
dec
push
shlb
int
arpl
ret
mov
pop
aas
inc
xchg
sub
and
pop
jb
data16
pop
push
les
outsb
cmpsl
cmpsb
mov
dec
and
cs
jmp
xor
scas
bound
jne
ss
or
insl
mov
lcall
sbb
mov
arpl
lock
ret
mov
inc
insl
cmp
jmp
out
and
andl
jg
nop
rcrl
movsb
aam
mov
push
inc
mov
jl
pop
out
inc
out
and
icebp
daa
push
sub
and
jge
and
or
dec
lods
clc
add
out
dec
and
iret
aaa
jne,pt
pop
adc
int
add
lcall
in
push
mov
jl
pop
xchg
xor
adc
pop
fisttps
push
in
add
mov
inc
or
jo
mov
aam
dec
dec
shl
pop
hlt
and
mov
xor
pop
out
subl
lcall
push
add
sbb
add
inc
mov
and
push
fisubl
xor
mov
mov
mov
xchg
iret
test
xchg
popf
fildll
jno
dec
insb
jmp
shrl
jno
mov
push
xlat
lock
data16
call
dec
ss
mov
stos
fwait
pop
aaa
jns
push
adc
xchg
sbb
push
jns
xor
mov
xchg
std
nop
in
and
out
in
and
testl
cltd
adc
mov
dec
repz
jmp
sahf
adc
out
and
xlat
adc
shll
dec
sbb
lock
jge
mov
scas
cmp
inc
ror
sarb
clc
xchg
in
jmp
mov
in
repz
daa
xchg
or
and
mov
mov
shrl
mov
jo
mov
pop
dec
inc
or
lcall
jge
fwait
push
sbb
cwtl
jle
xchg
push
rep
sbb
adc
mov
jo
pop
aas
cmp
fucomi
stc
icebp
pop
je
add
sbb
cld
clc
mov
in
pop
bound
push
arpl
mov
aam
cmp
pop
push
fsubp
add
or
fidivrs
mov
xor
sub
inc
scas
jp
or
xchg
mov
mov
lock
mov
in
adcb
gs
mov
out
jle
lea
inc
xlat
cmpsb
aaa
xchg
cmp
add
xchg
mov
xlat
std
mov
xor
jecxz
sarb
mov
mov
xchg
xor
test
stos
jno
les
fsubl
test
dec
aaa
insb
pop
cmp
mov
xor
cmp
test
mov
inc
pusha
dec
or
inc
adcl
cltd
jmp
xchg
xorl
mov
repnz
cmpsl
ds
fldenv
repnz
int3
popa
bnd
stos
jo
cmovae
pop
mov
neg
leave
testl
sub
dec
jp
mov
and
popf
sub
pop
fisubrl
imul
and
stos
es
xor
fstpl
mov
scas
adc
aad
xor
and
es
fdiv
xor
lahf
insl
aas
push
es
push
movsl
popa
sub
insb
add
call
cmp
nop
imul
cmp
outsl
jg
push
stos
rcrl
and
cmpsb
and
stos
add
sbb
cld
mov
test
loopne
adc
and
mov
cmpsb
pop
push
and
mov
rcrb
push
xor
mov
loopne
mov
adc
xor
in
push
mov
inc
into
cmpsl
mov
clc
lret
cltd
stc
std
aas
xor
jno
inc
push
xchg
xor
dec
mov
insl
xorb
test
addr16
lcall
insb
ja
outsl
mov
clc
cmc
jg
rorl
mov
mov
xor
es
inc
jae
adc
push
xor
sbb
jb
jmp
divl
ror
inc
sahf
mov
jne
movsl
cmovae
fistpll
icebp
cmp
sub
lods
jecxz
pop
add
push
dec
adc
adc
jle
in
loop
imul
lods
mov
or
loop
stos
aaa
movsl
pushf
sub
pushf
test
pop
pusha
mov
cs
push
push
addr16
hlt
loopne
ss
ja
jbe
popa
popf
xorb
aam
cwtl
test
stos
sub
outsl
mov
inc
nop
or
inc
cltd
and
lods
stos
push
lds
add
mov
orb
dec
mov
fsubl
adc
cmc
sub
jo
mov
push
adcb
sahf
dec
sarb
xorl
rcrb
or
and
push
push
lea
jmp
cli
or
inc
pop
cli
inc
mov
ljmp
testl
icebp
pop
cmc
frstor
cmpsb
xor
xor
push
pop
rcr
mov
cltd
jo
nop
daa
dec
xchg
sub
mov
in
ljmp
insb
jl
sti
aad
jne
iret
xchg
int3
pop
out
sbb
insb
hlt
hlt
leave
jnp
xchg
xchg
outsb
aad
jmp
jno
pop
mov
jp
add
jnp
mov
fistl
dec
movsb
or
push
rol
mov
imul
pushl
loop
ja
jnp
lret
or
cltd
popf
pop
mov
ja
scas
pop
sti
jg
das
daa
sbb
mull
xor
testb
push
test
loop
aas
jl
mov
into
outsb
pop
xor
jmp
iret
push
and
ficoml
test
sub
and
xlat
mov
sti
fchs
aas
pushf
push
fsubrl
dec
jno
fdivr
nop
mov
xor
loope
cmc
popa
sbb
je
push
clc
adc
pop
inc
es
mov
push
out
cmp
clc
fwait
setae
jns
dec
lret
arpl
dec
imul
inc
mov
push
imulb
shll
gs
add
xchg
mov
push
hlt
int
enter
rcrl
daa
outsl
or
lahf
sub
outsb
ficomps
daa
push
jg
fldl
dec
cmp
mov
mov
adc
cmp
into
xor
inc
fs
xchg
xlat
mov
mov
dec
inc
outsb
pop
sbb
sbb
xlat
pop
gs
mov
jb
call
mov
outsb
out
pop
lahf
dec
stos
movsb
call
and
dec
mov
sbbb
leave
pop
outsl
test
pop
popf
or
mov
mov
pop
xchg
sub
cmp
xchg
jb
adc
cwtl
mov
pop
mov
dec
mov
dec
jns
xor
mov
insl
ret
mov
js
pusha
push
lret
mov
ret
addb
fcomi
outsl
sbb
rolb
imul
pop
mov
xchg
pusha
mov
xlat
stc
clc
jae
cmp
mov
add
adc
fcoms
inc
and
inc
xor
xchg
mov
sahf
filds
inc
pop
mov
or
sbb
cwtl
scas
push
and
imul
adc
adc
jo
xchg
mov
sbb
pop
std
pop
data16
inc
insb
xchg
xchg
aaa
ljmp
clc
insl
fimull
pop
xchg
into
xchg
sti
pop
mov
mov
in
repz
fists
dec
and
mov
sub
pop
xor
cwtl
insb
xchg
repnz
stos
scas
jb
or
jg
jp
xor
cmp
cmp
dec
push
xchg
add
or
add
push
push
sbb
add
jle
push
imul
nop
ljmp
sbb
pusha
adcl
sbb
sbb
aad
dec
or
inc
and
cmp
test
mov
pop
jno
imul
cmp
jbe
add
adc
jns
inc
sub
aad
movsb
popa
jnp
mov
and
and
xchg
xchg
jmp
inc
and
lea
clc
fidivrs
xor
aam
jecxz
imul
cltd
fisubrs
mov
add
stos
lock
rolb
aad
and
leave
insl
sbb
pop
les
xlat
xor
push
fisubl
std
rcrl
mov
daa
cs
jle
mov
jo
leave
add
repz
shl
idivl
inc
cwtl
mov
push
push
test
int
jg
pop
subl
lock
or
push
sbb
ret
das
cmpsb
pop
dec
dec
fcomp
sbb
js
pushf
add
stos
pop
aaa
lds
push
ds
inc
adcb
lcall
mov
in
mov
orb
xchg
test
xchg
ss
test
jno
sbb
iret
cmpsb
dec
adc
mov
push
inc
mov
mov
xchg
jmp
push
sqrtps
sahf
mov
mov
adc
std
or
mov
and
fadds
insl
dec
push
sahf
scas
mov
mov
je
cli
push
xor
push
scas
sbb
mov
xlat
pusha
push
jl
movsl
decl
dec
dec
loope
mov
jnp
bound
mov
jb
mov
sbb
dec
sahf
shll
dec
test
and
fneni(8087
jp
in
daa
js
call
dec
sahf
sbbb
add
iret
or
mov
movsb
mov
and
mov
shlb
repz
pop
add
stos
cwtl
dec
sbb
push
pusha
adc
int
ret
mov
jmp
adc
inc
sbb
or
mov
xor
inc
insb
or
sub
mov
xor
jb
cmp
pop
push
cwtl
jle
jne
inc
jno
cwtl
dec
sbb
push
xchg
cmp
sahf
sub
dec
mov
lock
sbb
sbb
insb
sub
and
inc
add
repnz
fucomip
or
pop
test
xor
imul
arpl
mov
sti
add
aam
adc
insl
xchg
fwait
mov
gs
stos
movsb
popa
cmp
pop
jmp
lret
aas
push
push
ret
fs
mov
lahf
mov
mov
std
inc
push
inc
insl
cmp
das
sub
fsts
xor
inc
mov
sbb
adc
cwtl
inc
xchg
cmpsb
jne
aad
cmc
dec
sub
lods
jge
jle
add
outsl
jg
mov
inc
aad
int
roll
cmp
push
loop
dec
mov
mov
leave
daa
test
fsubrp
lea
add
mov
and
add
push
adc
in
xchg
mov
stc
cmpsl
and
loopne
test
sub
mov
push
stos
and
pop
sub
gs
mov
cs
cmp
add
cmpsl
in
xchg
enter
das
pop
sbb
sbb
xchg
loopne
pop
push
jb
xor
add
dec
xchg
stos
sub
mov
mov
lods
or
push
jp
and
sub
pop
lock
fldt
jno
or
leave
pop
mov
mov
push
pop
xor
pop
jecxz
mov
pop
jmp
sbb
test
in
jbe
ja
adc
scas
cli
fs
dec
lock
int3
stos
jo
sti
lock
cmpsl
mov
jns
scas
xchg
movswl
mov
mov
xor
dec
stos
jo
sti
lock
cmpsl
mov
jo
aad
aad
pop
jns
cmc
cld
mov
into
fnsave
xchg
icebp
insl
or
jnp
sti
jmp
adcl
inc
dec
ja
lds
sub
add
inc
lds
ss
mov
inc
cmc
add
movsb
ja
pop
fdivrp
pusha
mov
cld
out
inc
mov
popf
jmp
int
adc
sbb
ss
and
ss
pop
lret
insb
outsl
or
or
and
xor
mov
shlb
pop
out
mov
scas
cmp
adc
pushf
enter
mov
leave
daa
fldt
fwait
mov
pop
dec
inc
es
test
mov
push
sbb
call
dec
pop
test
js
mov
repnz
dec
sub
sub
sti
or
out
mov
mov
int3
inc
test
push
fbstp
shll
sub
out
repnz
ss
repnz
gs
cs
adc
in
jno
mov
adc
add
mov
cwtl
xchg
and
lret
and
push
in
add
inc
or
lods
test
xchg
imull
sub
stos
jmp
xor
xchg
inc
arpl
sub
cld
inc
xor
ret
out
nop
and
mov
mov
out
jl
aas
les
xor
test
sub
mov
pop
bound
aad
cmp
clc
andb
or
cmp
pop
mov
xor
inc
mov
xor
or
dec
lahf
push
sbb
mov
lods
or
into
gs
sub
pop
stc
idiv
mov
mov
scas
pop
mull
cmp
push
ret
cmp
aas
push
xchg
clc
repz
mov
jne
pop
outsb
cs
fimull
int3
add
mov
leave
aaa
lds
ds
in
xchg
jp
mov
jns
mov
xchg
into
xchg
test
cmp
xchg
mov
mov
add
fdivrp
mov
mov
lcall
inc
scas
sahf
es
test
mov
mov
test
bound
dec
repz
pop
or
dec
ret
xor
decl
xchg
xchg
sahf
dec
jne,pt
sarl
dec
out
mov
jo
test
int3
rorb
ljmp
inc
scas
imul
push
and
out
in
out
xchg
ret
jp
push
dec
ret
ja
and
das
sub
cmpsb
cmp
iret
cmc
push
push
fmull
gs
or
or
sub
fcoms
mov
mov
fsubl
dec
and
out
stos
push
xchg
mov
jle
push
andl
popf
lock
and
inc
and
rol
cli
fcoms
push
push
fs
adc
cmpsb
jo
or
jp
jne
lret
mov
gs
cld
inc
xchg
aad
jl
cld
cli
stos
inc
inc
lods
shll
sub
shlb
mov
sbbb
xor
lea
mov
and
jg
imul
shl
scas
movsl
mov
pop
and
cli
xchg
rolb
xor
das
inc
sahf
sbb
stc
xor
popf
lret
mov
push
out
int
jecxz
cmp
dec
ret
fsubs
cmp
mov
mov
or
insl
or
divl
outsl
cmp
inc
fisubrs
add
pop
mov
push
xchg
push
jge
repz
insb
cmp
xor
lea
xlat
incb
xor
test
and
mov
or
mov
aam
dec
hlt
push
sbb
sbb
adc
xor
and
rorl
test
cmpsl
into
sbb
pushf
mov
pop
xchg
cltd
xchg
rorb
lock
cmc
cld
rol
movsb
arpl
sbb
fldenv
mov
fwait
movsl
aaa
ret
mov
call
sub
out
add
pop
into
push
adc
sbb
incb
cmp
imul
cmpsb
push
add
cmp
cs
js
aaa
mov
sub
out
or
cmpl
ficompl
into
mov
sub
lods
mov
sub
popf
lea
push
inc
sub
sub
movsl
jne
in
add
push
out
jne
jecxz
inc
dec
mov
in
mov
cmc
aam
js
pop
ret
out
clc
sbb
pop
fs
stos
jnp
cmpb
mov
jne
test
negb
mov
rclb
ja
jae
cmp
fwait
lahf
jmp
add
loop
xchg
xchg
fdivrs
subb
jbe
inc
out
jno
jmp
mov
dec
add
xor
xor
sahf
outsb
flds
sub
cmp
adc
cmpsb
jo
or
fistps
push
fcoml
orl
inc
inc
in
lods
adc
ljmp
aas
stos
jns
mov
cmp
roll
enter
and
xchg
das
out
dec
fs
cmp
scas
push
pop
jge
iret
fdivr
xor
inc
cltd
xor
cmp
out
int3
nop
jae
lds
cwtl
and
add
push
mov
or
xchg
ljmp
xor
js
lods
sahf
add
mov
pop
scas
fstl
popa
mov
movsl
int3
filds
mov
call
arpl
jmp
add
sub
cmp
repnz
mov
leave
ret
adc
out
lcall
outsb
addr16
cmp
std
test
mov
mov
mov
xor
cmp
mov
lea
sub
call
sub
subl
lods
shlb
pop
lret
outsl
lcall
ds
ljmp
mov
adc
movsb
cmpsb
mov
jge
lock
in
jno
out
cmpb
js
mov
xchg
sbb
xlat
pop
cli
pop
in
in
into
jl
sbb
bound
xchg
jecxz
mov
outsl
add
xorb
sahf
loope
xlat
mov
jle
popa
shlb
insl
imul
cmc
sub
cld
sub
or
sbb
jle
jp
cmp
ljmp
leave
xor
mov
inc
jge
fnstenv
jmp
lds
bnd
sbb
in
jge
dec
sbb
test
lcall
add
mov
stos
adc
test
lcall
daa
cmp
push
divl
mulps
sub
stos
xchg
push
stos
cmp
pop
addr16
jp
sub
jae
pop
xor
cs
ret
mov
push
in
jae
leave
dec
add
cmp
ret
lahf
cmp
adc
dec
jne
inc
sub
or
add
aas
mov
mov
pop
aaa
pop
push
inc
add
mov
js
adc
dec
inc
outsl
int3
pusha
sub
aad
cmc
lds
sub
add
test
inc
jp,pn
mov
in
inc
outsb
ret
inc
adc
and
xchg
notb
xchg
hlt
push
mov
xor
ret
xchg
cld
xor
xchg
or
aas
xchg
sbb
xor
fwait
cltd
filds
pop
popa
insl
enter
xchg
adc
scas
rcr
insb
out
leave
aaa
test
xor
inc
test
lret
imul
xchg
jne
orb
gs
fidivs
jnp
mov
into
sbb
mov
js
jne
int3
insl
fsubr
insb
or
jnp
xor
mov
pusha
jmp
pop
inc
nop
stos
fcmovnbe
xor
xchg
leave
cmp
push
push
insl
in
push
cmpb
push
adc
test
pop
xor
pop
movsb
xchg
shlb
xchg
in
push
cmp
imulb
xchg
sbb
int3
subb
jnp
lods
idivb
popa
mov
testl
rcrb
hlt
lret
notb
mov
in
or
mov
mov
mov
lods
pop
adc
push
push
sub
jp
pop
inc
ljmp
fwait
xchg
xor
dec
mov
int3
dec
jb
push
fs
lods
jge
lods
mov
adc
cmc
fistpl
mov
dec
andl
push
mov
lret
in
sub
dec
jmp
jo
pop
pop
add
lret
leave
in
cli
ficompl
lcall
sub
pop
mov
dec
sbb
test
lcall
cmp
clc
inc
cmp
dec
dec
lock
cmp
xchg
les
lcall
rcrb
xor
stos
jp
xlat
jle
mov
jno
jno
and
xchg
jmp
mov
cmp
jno
push
inc
or
mov
sub
ds
xchg
push
xor
mov
ret
loopne
pop
mov
mov
cli
leave
mov
and
or
push
jle
fldenv
ja
xchg
dec
push
sbb
add
jns
adc
jnp
push
inc
test
xchg
lods
hlt
lret
xchg
stc
mov
sub
sbb
insl
push
lret
xchg
test
loop
fiaddl
aad
push
xor
xchg
jge
js
dec
movsl
push
push
fdivp
jp
into
arpl
jle
dec
movsb
jmp
bound
popa
mov
adc
cmpsl
mov
sbb
xchg
cmp
iret
in
int
popf
fwait
ljmp
mov
jg
xchg
mov
pop
aas
cli
jno
xchg
jge
cmpl
add
sbb
loope
dec
jge
repnz
arpl
aas
and
outsb
cmpsl
xlat
stos
sbbb
mov
cmp
mov
or
std
ss
adc
test
ror
mov
xchg
sub
icebp
push
test
and
mov
add
aad
fistl
sbb
mov
push
push
push
sub
ss
mov
into
gs
incl
negl
adc
fs
jecxz
cmpsb
testl
push
int3
mov
adc
jmp
add
pop
mov
pop
inc
test
mov
les
and
sbbl
loope
or
sub
test
adc
std
pop
cwtl
xor
mov
pop
inc
testl
aad
iret
fs
dec
and
mov
inc
cmp
sub
cwtl
ss
pop
mov
and
jo
xchg
and
and
ret
movsb
hlt
imul
and
fcompl
add
mov
mov
cmp
add
push
sbb
filds
rcr
out
in
mov
cmc
dec
and
sub
and
stos
xchg
sub
add
add
scas
xor
popf
mov
push
popf
mov
add
cmc
jmp
jmp
orb
stos
scas
cmpsl
fldenv
add
cmp
jmp
lcall
ss
inc
fwait
andb
shll
xchg
loope
daa
lahf
mov
mov
fldl
jmp
gs
lret
jns
cs
sarb
subb
jge
rol
jmp
aaa
jl
xchg
cmp
stos
mov
lods
clc
mov
shrb
push
xor
cmpsl
out
push
lret
js
aam
jg
mov
xor
or
xchg
loopne
test
dec
negl
and
sbb
pop
or
mov
pop
adc
xchg
push
inc
icebp
aad
add
cmp
lcall
pop
push
je
mov
popa
outsb
xlat
sbb
jl
sbb
mov
clc
and
cli
inc
lret
add
push
mov
sbb
adc
addr16
pusha
and
and
in
rclb
sbb
push
cli
sbbl
data16
push
jg
cs
mov
push
inc
test
aaa
jl
xchg
cmp
mov
ljmp
mov
jge
shrb
or
jl
out
mov
inc
jno
shlb
aaa
nop
jbe
int
lret
push
sti
shll
ret
dec
fidivl
ja
cmp
xchg
nop
dec
movsb
fisttps
cmpsb
imull
movsl
add
je
jmp
das
inc
mov
sbb
pop
test
jbe
fucomi
lret
std
pop
adc
js
repz
xor
cmp
movsb
push
scas
popa
daa
insl
cmp
sub
leave
mov
mov
add
fwait
adc
adc
inc
dec
dec
sub
es
push
psubusb
mov
cmp
and
inc
aam
mov
mov
add
xor
scas
ds
scas
gs
push
xchg
mov
movsb
js
movsb
daa
imul
inc
inc
shrb
jmp
xchg
out
adc
cmp
aaa
or
lret
icebp
test
leave
jle
push
rep
pop
mov
clc
aam
xchg
cmp
push
mov
fcmovbe
pop
jae
lds
dec
xchg
and
sub
or
stos
sub
jl
aad
sbb
pop
addl
mov
push
or
sub
popf
rcrb
inc
cmovb
xor
pop
test
in
fs
dec
inc
xchg
in
cmc
cltd
mov
xor
xlat
pop
adc
pop
mov
scas
sbb
aam
loop
xchg
les
jne
pop
pop
pop
jg
sub
jmp
dec
push
cwtl
ljmp
sub
and
sbb
dec
test
jle
in
arpl
cmp
and
in
lods
mov
sbb
sub
rol
insb
sti
enter
loopne
pop
xor
dec
add
or
outsl
in
xchg
ret
xchg
pop
push
sbb
movsl
sbb
in
jne
mulb
out
push
stos
xchg
inc
dec
cmp
cld
scas
shll
call
cs
dec
popf
shll
addl
cmp
xlat
jnp
adc
or
cmc
out
lea
scas
xor
or
fwait
imul
sbbl
jge
std
adc
mov
jmp
adc
inc
and
or
inc
jbe
xchg
call
clc
push
cmpb
addr16
out
movsl
push
pop
sahf
dec
mov
enter
mov
mov
add
sbb
sbb
test
mul
lret
aad
inc
les
jne
mov
sub
test
bound
dec
fists
xchg
addr16
mov
cli
mov
aaa
fists
rorl
xlat
rcl
les
inc
lods
add
jg
sub
lret
hlt
ret
lea
jle
mov
ja
jle
lock
and
push
mov
enter
fucom
push
and
in
sti
pop
inc
jo
and
jne
xchg
and
or
aaa
movb
stos
sbb
sbb
mov
xchg
out
iret
lods
mov
and
xchg
scas
mov
leave
in
add
push
pop
and
in
aad
clc
scas
and
jae
outsl
xor
outsb
mov
mov
add
mov
divl
xor
repnz
aas
sbb
lds
mov
cwtl
mov
xor
ffreep
mov
adc
push
adc
test
test
sbb
in
imul
in
and
ljmp
inc
mov
test
cmc
fisttps
pop
aad
aaa
stos
jno
push
push
jnp
add
push
scas
push
jle
inc
popa
shrl
sub
or
and
in
push
stos
sub
es
pushf
jne
push
sub
insb
addr16
mov
adc
inc
fisttpl
push
push
xor
xchg
sbbl
lahf
sbb
xchg
aaa
lret
loop
dec
fsubrl
mov
fildl
mov
jle
popa
shlb
insl
imul
cmc
ljmp
std
mov
dec
mov
aad
sub
mov
mov
mov
or
fimull
cmc
push
fdivr
fdivrl
call
je
hlt
and
and
adc
ja
xchg
adc
nop
xor
scas
jno
adc
push
mov
xor
das
pop
sub
movsl
leave
shlb
mov
test
or
enter
inc
movsl
inc
mov
push
xchg
mov
rcrl
jnp
inc
mov
push
arpl
fwait
jge
cmp
icebp
jmp
add
js
and
add
loope
aam
and
mov
or
mov
je
dec
insl
sbb
inc
mov
or
push
sub
outsb
mov
fldpi
lods
clc
mov
xor
popf
jmp
push
dec
inc
rclb
shrl
or
fs
inc
jo
mov
add
movsb
or
or
js
xchg
gs
scas
andb
scas
jbe
popl
sahf
cmpl
dec
int3
pusha
pop
mov
mov
mov
pop
mov
out
jae
mov
cmp
sbb
add
jo
push
js
stc
int
adc
or
jl
repnz
inc
dec
pop
or
out
fwait
push
movsb
outsl
push
andb
scas
fadd
cltd
shrl
jo
sbb
and
adc
xor
ret
sbb
out
push
xsavec
pop
call
dec
stos
xor
inc
fbstp
ret
sahf
add
cltd
mov
gs
pop
repnz
xchg
jg
jle
xchg
out
lods
scas
in
xchg
jae
sub
adc
pushf
lcall
mov
mov
xchg
xor
clc
ljmp
cmp
push
hlt
repnz
aam
ja
adc
xor
scas
pushf
mov
int3
or
out
mov
mov
fbstp
data16
ds
gs
lods
jg
inc
sti
mov
stos
inc
xchg
add
xor
mov
lahf
pop
call
dec
jmp
pop
movsl
push
sub
stos
push
andl
cmc
jle
adc
mov
push
or
and
loope
flds
xor
dec
daa
lahf
rclb
enter
cmc
jb
js
stc
int
adc
pop
push
push
in
mov
popa
jg
jbe
jo
inc
adc
sbb
pop
lahf
stc
push
gs
loop
cmpsl
es
cmp
xlat
fists
nop
pop
mov
mov
jo
gs
test
sbb
rolb
push
imulb
mov
pushf
adc
push
sbb
faddl
jb
dec
xchg
xor
stc
idivb
icebp
incb
rclb
scas
mov
pop
cmp
xor
pop
and
inc
in
xchg
xor
jne
mov
xchg
push
cmp
mov
mov
push
adc
test
cltd
out
xor
aaa
inc
shlb
popa
cmp
ss
ss
pop
arpl
xor
out
jmp
mov
mov
pop
inc
adc
mov
ljmp
insl
add
push
xor
fiaddl
xchg
cmp
ds
inc
popa
adc
iret
cmp
mov
mov
insb
jae
int
lret
sbb
xor
addl
push
jle
shrb
lods
push
fwait
cli
enter
push
rcrb
negb
mov
fmull
mov
lret
mov
hlt
inc
jbe
jo
push
push
pop
cs
pop
icebp
fst
and
fcmovne
inc
movsb
adc
cmp
dec
jmp
test
mov
mov
dec
mov
mov
inc
adc
push
aaa
push
jno
out
mov
dec
stc
cmpsb
fldcw
aas
mov
out
lods
pusha
jge
mov
xor
lods
mov
ret
sbb
aaa
jp
test
or
sbb
mov
fsub
mov
mov
lahf
sub
test
mov
insl
cmp
push
mov
mov
fsubr
xor
dec
inc
icebp
in
pop
mov
lret
sub
pop
popa
xor
mov
xlat
cmp
roll
inc
lret
or
mov
subl
jb
xor
test
es
xchg
sub
bound
push
push
jae
loope
mov
clc
add
and
adcb
je
inc
stos
rorl
mov
mov
fmull
or
push
inc
mov
push
push
dec
nop
push
inc
out
inc
jns
sarb
push
out
mov
bound
jbe
add
adc
cmc
jle
xor
xor
mov
je
push
in
mov
mov
test
add
push
jno
add
shrl
cmc
mov
jnp
sbb
dec
loopne
repz
push
pop
jb
je
adc
ret
cs
lret
push
cld
pop
add
and
mov
push
adc
mov
sub
es
xchg
add
icebp
sahf
outsb
xchg
mov
jns
cmpsb
fildl
mov
push
testl
stos
and
je
jne
sbb
loop
ret
pop
out
mov
cli
popa
sub
mov
addl
outsb
jne
jnp
and
shlb
lcall
into
jecxz
fldt
mov
int
test
hlt
das
in
mov
clc
lods
pop
dec
arpl
addr16
scas
xchg
inc
pop
int3
fbstp
int3
adc
sub
adc
lods
sub
int
movsb
roll
pop
jg
mov
rcl
into
cmp
cmp
mov
test
sbb
insb
out
xor
lock
xlat
sub
and
pop
or
add
pop
dec
scas
popa
lods
mov
arpl
loopne
mov
addr16
mov
and
fidivrl
das
test
sub
or
mov
pop
ficomps
push
test
or
inc
pop
popf
int
jmp
out
mov
mov
mov
xchg
xor
or
out
addr16
jae
loope
inc
test
fsts
xchg
mov
fdivs
loop
cmp
insb
lock
clc
mov
inc
cmp
or
sub
cli
lea
mov
in
maxps
inc
push
incb
jns
movsl
je
fldt
xchg
test
loopne
jno
cmpsl
inc
jbe
pop
lcall
or
mov
mov
pop
mov
sub
inc
mov
inc
jmp
test
mov
loope
ret
aas
lret
adc
fwait
inc
push
push
jle
mov
stos
push
popf
inc
in
dec
sub
out
mov
jp
rcl
pop
mov
and
test
stc
sbb
lret
out
dec
leave
jo
insl
push
int
jecxz
pop
jb
lahf
dec
movb
cmp
jl
add
aam
stc
sbb
cmpb
sbb
data16
inc
jmp
jbe
xchg
xchg
cltd
les
xlat
adc
mov
clc
aad
popf
sbb
mov
xchg
add
mov
mov
cmpsb
and
mov
add
leave
outsb
xchg
std
testb
inc
pop
sahf
dec
mov
sbb
ljmpw
lahf
insl
pop
lret
xchg
inc
movsl
sub
lock
push
push
and
int
hlt
push
adc
pop
adc
xlat
xchg
add
lret
sti
subl
jbe
jp
bound
pushf
xchg
xlat
jnp
dec
ljmp
sbb
bound
outsb
int
or
mov
imulb
adcb
or
into
arpl
add
dec
js
mov
cmp
pop
dec
and
ret
mov
cs
test
push
scas
inc
fs
push
mov
push
mov
rcl
mov
fstl
lret
arpl
pop
lret
cmp
cwtl
mov
sub
pusha
pop
or
lahf
pop
mov
fisubrs
clc
lahf
sbb
inc
inc
push
inc
push
and
sbb
or
dec
xchg
sbb
fs
and
inc
stos
inc
push
push
dec
enter
das
inc
nop
or
or
sbb
std
sbb
popf
pop
incl
lds
in
xchg
jle
rcrb
xor
xchg
inc
ret
fs
fsubrs
imul
adc
loop
pushf
imul
sub
out
insl
jge
enter
xchg
fdiv
cmpsl
push
div
es
xchg
jne
add
pushf
pushf
ficompl
inc
dec
cmp
out
lcall
fnstenv
lods
ficomps
and
pop
push
push
lock
xchg
pop
sub
scas
roll
mov
addr16
fwait
imul
or
inc
fcmovne
fwait
jb
pusha
jns
dec
ror
jecxz
sub
jecxz
ret
or
gs
idivl
fcomip
or
lret
cmpl
sub
in
add
pxor
arpl
lds
xor
movsl
mov
push
popa
lods
dec
testb
dec
fcoms
outsl
pop
cmp
gs
push
mov
push
fiadds
push
int3
mov
fcmovb
sub
dec
mov
mov
mov
aaa
pop
lock
pop
fnstenv
sub
ljmp
dec
cmp
mov
cmp
inc
nop
pop
pop
push
jnp
mov
icebp
cs
cld
orl
adc
dec
xchg
jns
lahf
adc
pop
add
loop
mov
in
sahf
mov
adc
adc
adc
push
js
push
test
outsl
fsubl
inc
popa
push
mov
xlat
pushf
add
mov
cmp
and
lea
enter
fcmovne
xchg
hlt
push
mov
push
push
mov
sub
mov
loop
aaa
pop
jnp
inc
adc
or
push
mov
aam
call
add
orl
jge
fdivp
mov
inc
daa
psubsb
das
scas
nop
adc
out
inc
push
mov
pop
inc
pop
jae
jae
jbe
inc
dec
and
in
sti
pop
das
out
std
add
push
push
fisttps
and
pushf
popa
scas
cwtl
cmpsl
xchg
xor
dec
movsl
mov
xor
in
cmp
cwtl
rolb
mov
arpl
in
xor
push
test
xchg
and
mov
jp
cmp
arpl
int
xchg
call
adc
out
xor
shll
stos
mov
inc
test
jmp
inc
in
add
fimull
iret
stos
or
insl
lea
cmp
add
xchg
shll
push
dec
push
pop
das
shrb
lods
cwtl
add
daa
xchg
add
cld
in
add
sbb
push
int3
out
pop
sysenter
mov
cmp
adc
push
icebp
bound
mov
lret
ret
jnp
mov
pushf
or
es
out
xor
stos
fstpl
nop
xor
inc
mov
dec
push
out
addb
sub
sbb
sbb
pop
mov
push
arpl
xchg
jl
daa
lret
add
and
into
in
imul
xchg
fcmovbe
mov
pop
push
mov
pop
test
jnp
sbb
mov
push
imul
aas
mov
fsubl
ret
imul
cmp
test
out
mov
jo
arpl
ret
bound
je
stos
aam
or
sti
icebp
into
cld
xlat
and
mov
ljmp
xchg
test
mov
fisttps
add
mov
or
ret
aaa
sbb
xchg
dec
cwtl
int
add
les
sub
adc
mov
loope
leave
jg
cmp
scas
rolb
sbb
fidivl
pop
cli
xchg
inc
movsb
jb
mov
pop
test
icebp
in
sahf
pop
fwait
xor
xchg
cmc
cwtl
xor
dec
mov
stc
push
leave
sub
out
mov
push
cmc
fdivs
jl
cmp
push
mov
in
pop
sbb
lret
sti
xchg
dec
mov
outsb
mov
cltd
out
movsb
rcr
scas
xor
data16
xchg
addr16
jnp
out
data16
lcall
shll
das
and
data16
push
xor
inc
fcoms
pop
movsl
mov
adc
ret
pusha
dec
bound
cmp
pop
jbe
ja
and
popf
push
sbb
dec
addl
jns
inc
andl
pop
push
lds
stos
int3
xor
imul
rcr
mov
mov
aad
dec
jo
ret
es
stc
or
or
push
pop
in
test
mov
fsub
mov
xchg
mov
xor
sbb
push
lcall
xchg
aaa
pop
push
xlat
pushf
add
mov
cmp
xor
and
enter
dec
pop
mov
pushf
ja
pushf
pop
cmp
lock
dec
sahf
mov
inc
or
cmovns
jo
fidivrs
mov
stc
fwait
popa
cltd
fdivrs
jmp
mov
adc
or
jg
in
xlat
ficomps
cmpsb
sub
enter
sbb
pop
xchg
xchg
enter
das
pop
sbb
jns
mov
cld
jmp
loopne
stc
test
xlat
or
lcall
sahf
cmpsb
jp
and
sahf
mov
jno
cwtl
inc
push
jmp
in
mov
addr16
mov
xor
mov
mov
mov
mov
xchg
cmp
mov
or
push
nop
jae
ss
xchg
nop
daa
or
daa
in
ljmp
dec
push
imul
pop
mov
movsb
sahf
push
cmp
sbb
and
aas
push
push
nop
aam
out
clc
or
fs
daa
leave
jl
das
push
scas
sbb
mov
mov
lcall
xchg
out
dec
xchg
call
add
cs
and
dec
lock
dec
xchg
sub
jnp
negl
jbe
test
push
nop
cmc
dec
mov
mov
sub
push
out
test
jmp
enter
js
ret
notb
jbe
sub
loop
jo
out
andb
imul
mov
out
out
fisttpl
das
lahf
xor
add
mov
negl
push
mov
xlat
scas
push
test
adc
dec
sub
and
test
and
xor
mov
push
pusha
add
test
and
jne
faddl
xlat
add
pop
and
lret
or
push
nop
mov
pop
mov
aad
mov
push
lds
cltd
ss
js
out
rol
shr
lea
add
outsl
shrl
sbb
push
xor
aas
gs
pusha
sbb
into
stos
aas
or
pop
adc
xor
into
cs
rcll
mov
popa
inc
xor
notl
pop
inc
ljmp
inc
test
test
jns
jg
stos
mov
punpcklwd
call
scas
push
es
sahf
xor
pop
rcl
xlat
push
fcmovb
pushf
mov
lods
jle
fildl
mov
test
xor
lds
daa
inc
repz
mov
cmp
cs
inc
push
mov
xor
sub
pop
push
jno
pusha
jae
fstl
add
xchg
inc
xchg
or
inc
imull
aas
sub
or
jmp
mov
lret
xor
inc
movsl
testb
push
inc
mov
cld
fs
mov
sbb
mov
in
xlat
enter
adc
mov
cwtl
sbb
bound
movsl
push
push
push
mov
push
lcall
inc
jb
and
xchg
aaa
insl
mov
mov
mov
adc
xor
sti
jmp
scas
and
inc
pop
add
incl
lea
or
clc
sbb
enter
mov
imul
ja
loop
push
dec
mov
out
sbb
sarl
shlb
in
into
bound
and
xlat
mov
movsb
popa
test
int
mov
imul
xchg
lods
leave
nop
jno
out
sahf
insl
aam
jge
int3
cmpsl
inc
sahf
jae
push
into
jnp
mov
xorl
out
pop
sbb
and
je
ds
jns
jo
movsb
aas
pop
les
pop
cld
add
xchg
pop
push
mov
dec
loopne
sbb
movl
pop
pop
imul
jge
xor
test
cs
repz
into
in
imul
sub
jge
inc
je
adc
das
pop
sbb
out
mov
fidivrl
push
fists
ja
and
scas
scas
pop
cmpb
test
arpl
push
sbb
stos
cli
adc
gs
mov
dec
out
inc
sbb
lret
ljmp
cmp
test
ss
push
shlb
leave
adc
xor
pop
data16
pop
mov
jp
jb
inc
mov
mov
mov
xchg
push
mov
call
out
jbe
sarl
jns
or
cmp
aas
add
lahf
fists
ljmp
cmp
sarb
sub
imul
sub
xor
stos
xchg
loope
mov
movsb
dec
mov
mov
ja
pop
test
repz
xlat
lahf
push
shrl
mov
adc
imul
out
jge
jb
int3
pop
dec
lea
ds
aas
or
fisttpll
add
adc
mov
vminps
sub
dec
push
xorl
aas
jl
dec
rorl
jns
gs
aaa
mov
mov
iret
xor
jns
hlt
sub
inc
cmp
movsl
stos
mov
pop
or
xor
cld
cmp
iret
mov
aam
addr16
lock
rcl
mov
sbb
lock
cs
lea
movsl
mov
mov
xor
icebp
xchg
mov
jl
pop
popf
xor
pushf
adc
in
mov
arpl
inc
and
shll
pop
xor
mov
in
sbb
add
es
fildll
inc
adc
aad
rcrl
les
cmp
jo
sbb
jae
jp
imul
pushf
aaa
push
xchg
jle
jbe
leave
dec
fs
jno
push
and
insl
mov
inc
or
mov
xor
pop
add
and
sub
fwait
and
fnop
sarl
rcll
dec
in
and
in
repz
mov
pushf
push
push
stc
dec
es
in
adc
sbb
mov
arpl
loopne
dec
fstpt
loope
out
or
ljmp
cwtl
iret
mov
test
xor
cmpsl
pop
test
pusha
jp
adc
pop
jl
scas
sbb
mov
mov
mov
loop
test
pop
lret
adc
push
pop
imul
sub
insl
addr16
xchg
push
xor
push
rclb
pop
pop
mov
pop
fsubr
popf
push
out
stc
mov
sub
cld
mov
adcb
pop
rolb
mov
nop
inc
jge
sub
out
mov
xchg
movsb
or
jle
add
bound
or
sub
aas
in
pusha
sbb
push
mov
push
add
dec
bound
sub
dec
and
popf
out
in
pusha
xchg
scas
mov
in
repz
sti
pop
add
mov
xchg
sub
ja
popa
in
gs
cmp
test
xchg
shlb
mov
fldenv
sarb
dec
lea
test
mov
pushf
ja
lret
mov
xor
outsl
xlat
pop
cmp
ds
push
adc
mov
lahf
cmp
js
ja
inc
mov
mov
cwtl
aad
clc
inc
jbe
push
mov
pop
push
cli
xchg
jp
and
xchg
mov
rcrl
jmp
inc
movsl
or
dec
repnz
jnp
pop
push
jns
or
sub
and
and
rcrl
lock
jl
loopne
push
inc
sub
mov
ljmp
cmpsb
faddl
jle
fnstcw
outsl
outsl
lret
insl
in
and
xchg
je
adc
xchg
mov
add
and
jnp
pop
xor
test
mov
inc
cltd
pop
mov
inc
push
pop
mov
add
je
in
push
dec
repnz
pop
mov
lcall
xchg
add
or
loope
mov
lret
outsb
adc
insl
imulb
pop
fistpll
dec
cmpsb
or
cmpsl
lds
inc
cmpsb
inc
xlat
mov
dec
sbb
gs
stos
loope
popa
push
jl
int3
inc
jb
andl
pusha
cmp
pusha
sub
aas
loope
sbb
sub
loopne
bswap
mov
insb
int3
lods
loope
or
xchg
jp
bound
jnp
pop
mov
fcoml
addl
mov
call
sti
push
push
sbb
testb
cwtl
xor
mov
hlt
in
xchg
enter
aaa
push
leave
out
outsb
movsb
pop
xchg
jge
push
imul
jg
or
stos
lret
mov
out
cli
cmp
fwait
int
xchg
popf
mov
outsb
rcrl
insb
add
pop
loop
sub
mov
sbb
mov
rclb
mov
sub
stc
xor
and
jmp
das
mov
popf
in
adc
adc
cmc
scas
jp
aas
push
stos
incb
and
push
cmp
int3
xchg
mov
or
jns
push
int
lds
fnstenv
push
add
inc
and
sub
ds
lea
into
cmpsb
mov
xor
sbb
push
jge
adc
pusha
ljmp
ljmp
push
mov
sub
les
add
pusha
sar
push
xchg
das
int
and
loop
push
out
repnz
nop
jmp
jbe
stc
jge
daa
push
xor
push
xchg
jmp
mov
sahf
cmc
pop
and
cmpsb
testb
cld
xor
int3
and
shrb
aas
in
and
rcrb
sub
lret
scas
mov
in
sti
lcall
or
lods
jg
jbe
push
mov
mov
inc
cmp
xor
adc
mov
mov
or
or
test
fwait
mulb
pop
sub
mov
cmpsb
and
aam
ja
xor
orb
jecxz
scas
dec
pop
jp
fidivs
leave
cmp
gs
out
mov
xchg
fcomps
fsub
out
rorl
leave
fisttpl
mov
outsb
xor
cmp
ss
pop
sub
add
in
jae
mov
ss
pop
fisubrs
enter
mov
add
mov
push
add
das
scas
scas
sbb
or
loope
xor
and
add
mov
loop
xor
stc
pop
rcr
aas
sub
test
sbb
pop
mov
pop
popf
sub
aas
inc
fdivl
pusha
arpl
aam
sbb
pop
aam
or
or
or
sahf
daa
sub
pop
inc
lods
mov
lret
pop
push
ljmp
mov
xchg
add
push
insb
push
idiv
out
dec
lds
inc
lods
lea
mov
in
out
dec
das
je
idivb
add
insb
into
test
dec
jmp
aaa
ljmp
xor
jg
pusha
push
test
dec
add
add
and
adcb
lret
je
sbb
sub
xchg
mov
mov
xor
sub
subl
ss
js
dec
enter
mov
jnp
test
popf
aad
aam
mov
roll
pusha
add
movsl
loop
rolb
cli
shr
movsb
aad
jg
repnz
aam
jne
add
and
sub
mov
in
mov
push
addr16
out
sub
flds
pop
sbb
xchg
cmp
pop
mov
push
push
iret
insb
jo
pop
out
dec
jecxz
push
aaa
fmull
fmulp
faddl
fsubrp
loopne
push
mov
inc
push
out
ss
fstp
mov
mov
out
and
popf
test
xchg
jo
add
out
lcall
in
sub
icebp
mov
mov
pop
and
push
test
cvtps2pi
mov
cwtl
sub
out
fists
repz
mov
and
es
data16
shrb
shll
dec
dec
rorb
pop
cld
lahf
rorl
cld
in
in
dec
out
adc
test
and
xorl
js
pop
sbb
xor
adc
stc
or
xchg
dec
push
je
fimuls
imul
lret
dec
add
sub
adc
mov
inc
jne
out
push
inc
sti
xchg
inc
jae
mov
outsb
sub
subb
repz
lods
pop
shl
cmp
arpl
adc
xor
jo
pop
or
inc
push
xchg
fs
and
test
dec
cmpsl
push
push
sbb
movsb
lahf
adc
popf
sbb
jne
push
push
pushf
call
inc
inc
mov
cmp
pusha
js
int
dec
mov
rorb
inc
mov
movsl
mov
pop
jno
ret
inc
lahf
pusha
jb
pop
add
push
sub
call
js
jl
mov
fwait
push
jge
insb
movsl
das
cmpsb
cmp
mov
int3
push
repz
xchg
pop
lds
rolb
ja
cmc
popa
push
and
lcall
popf
test
leave
add
movsb
push
mov
cmc
xchg
pop
aam
bound
fprem1
cmp
loopne
lds
push
sbbb
lock
and
or
cwtl
and
xor
adc
mov
scas
daa
enter
xchg
xchg
fnsave
mov
and
aaa
jns
sub
dec
sti
adc
jo
xchg
mov
cmpsl
mov
mov
out
sbb
in
rorl
pop
cmpsb
cmp
adc
jne
aaa
push
es
ljmp
sub
jbe
xchg
pop
lods
popf
out
push
lcall
test
xchg
cmp
js
ja
mull
xlat
test
sti
jle
in
adc
mov
leave
push
jb
mov
inc
movsb
push
daa
mov
inc
std
icebp
mov
aas
xchg
xor
jo
mov
dec
cmp
adc
jle
push
lea
out
sub
lods
divl
mov
clc
inc
je
xchg
call
inc
in
dec
sbb
loop
out
jl
hlt
dec
sub
pop
aam
or
clc
add
outsb
inc
test
cmpsb
ret
pop
fcom
fs
aam
out
push
testb
jne
add
shr
adc
cmp
push
lds
cmp
pop
cwtl
jge
adc
mov
push
addb
mov
adc
cmp
leave
jge
scas
cld
test
bnd
inc
mov
xor
jb
adc
fcomps
mov
xor
int
push
fbld
sub
mov
in
inc
and
xor
cli
aam
scas
push
fmull
ret
inc
push
arpl
xchg
sub
jp
push
lret
inc
andb
adc
hlt
sub
ds
mov
xchg
imul
pop
jnp
dec
push
jns
dec
sahf
jge
pop
jmp
in
adc
push
mov
and
inc
sub
movsl
and
fistpl
shrl
gs
clc
mov
loopne
sti
insl
inc
mov
mov
insl
add
bound
aad
push
and
fcompl
lcall
jne
std
adc
out
fstp
in
testl
in
iret
repz
aas
fisubs
jl
sti
into
push
adc
cmp
jns
div
xor
mov
in
mov
std
jmp
das
mov
scas
and
fists
stc
out
stos
dec
sub
xor
imul
pushf
mov
jecxz
push
xor
cmp
incb
insb
aad
outsl
mov
inc
mov
sti
jno
push
jp
movsb
cmp
adc
mov
push
xor
sahf
popf
popf
xor
les
sub
iret
test
jb
cmp
fwait
add
pop
cli
and
ljmp
mov
arpl
jg
mov
repnz
push
jne
ds
jae
js
faddl
nop
imull
mov
xor
rorb
and
dec
cli
arpl
stos
and
push
ss
fistpll
jmp
test
xor
in
xor
dec
jg
pop
sub
jmp
dec
mov
int
addr16
xchg
add
xchg
or
ret
dec
cmp
outsb
ret
add
pop
adc
jge
sbb
xchg
mov
dec
or
lret
shrb
stc
aaa
inc
jge
cmc
push
jg
xchg
cmp
int
adc
idivl
fwait
jp
roll
inc
mov
stos
orl
mov
cmp
gs
popa
cmp
add
pop
or
mov
bound
scas
push
scas
test
and
xchg
mov
sahf
stc
cmp
mov
imul
pop
gs
cmp
push
jg
int3
in
cmp
stos
xor
addb
and
pop
add
ja
add
mov
xor
cmp
xor
add
js
cmpsb
push
cmp
push
pop
add
lock
push
mov
shlw
testb
push
mov
jae
and
enter
or
add
test
out
dec
xor
nop
out
test
lea
loopne
xor
jb
jg
jmp
repz
test
jmp
mov
notb
mov
int
dec
add
or
orb
test
or
and
fiaddl
fbstp
push
inc
in
xor
outsb
mov
testb
add
jecxz
sbb
int
push
mov
or
pop
ja
fidivrs
or
dec
cmp
sub
into
and
rol
sarl
dec
stc
jecxz
push
sbb
mov
icebp
mov
lret
push
in
pop
orb
cmp
fmull
outsb
or
dec
cmp
xchg
loope
sbb
ror
pop
incl
dec
jp
xchg
cmp
add
cmpsl
lods
and
cmp
cmpsl
nop
xor
mov
enter
gs
daa
imul
pop
nop
mov
leave
mov
imul
inc
xor
xchg
xor
inc
mov
das
cmpsb
aad
icebp
test
fwait
sub
mov
or
cmpsb
jl
movsl
loope
insl
fcomi
leave
lea
cmp
cld
adcl
lahf
push
sbb
sub
or
fcmove
xchg
push
inc
addb
fildl
ljmp
in
pop
pop
and
mov
cvtdq2ps
mov
jb
mov
aad
aas
pop
fs
sbb
sub
mov
mov
jmp
mov
and
sub
out
jb
sbb
out
loopne
pop
cmp
xchg
in
push
dec
stos
ds
mov
fcmovnu
mov
lcall
lret
jnp
sub
shlb
sbb
imul
loope
jnp
dec
cs
xchg
cltd
pop
sti
shrb
jo
adc
cmp
inc
inc
lds
clc
dec
call
jl
push
cs
js
cli
xchg
and
aam
popf
pop
mov
test
sbb
mov
inc
sbb
sub
cmpsl
adc
and
sahf
pop
call
mov
fs
pusha
push
inc
push
rolb
popf
insb
lea
stos
and
cltd
xor
xor
das
ret
sbb
addb
jbe,pt
jecxz
aas
out
adc
shrl
add
push
int
inc
mov
push
fnstcw
and
pusha
jnp
push
and
in
push
rcl
fwait
sub
lea
data16
push
push
dec
filds
xor
inc
popf
in
call
rcrl
xchg
leave
mov
push
jb
mov
pushf
add
aaa
mov
cwtl
imul
loop
jg
lcall
sbb
jmp
xor
sarb
aaa
shlb
gs
cmp
pusha
and
cmc
cmpsb
adc
or
mov
xchg
clc
sub
dec
adc
xchg
pop
bound
push
insb
pop
or
xor
push
movsb
inc
cwtl
sub
stc
sub
orl
and
sbb
out
push
js
xor
add
or
dec
or
and
add
mulb
inc
xor
pusha
pop
dec
loop
iret
lret
xchg
and
add
inc
inc
fisubl
xchg
push
stos
dec
in
jecxz
mov
or
dec
mov
int3
jne
daa
dec
ret
push
notb
cltd
arpl
dec
sti
or
rcr
fldl
insl
fnsave
fwait
inc
add
sti
inc
pop
gs
fcoml
mov
scas
xor
push
imul
mov
and
imul
add
int
into
lcall
jne
lods
add
inc
gs
adc
cmp
push
ret
rorb
cmp
pop
xor
in
shll
sub
lahf
sbb
pop
pop
xchg
jo
aad
mov
xchg
insl
clc
and
cmp
addr16
or
push
xor
test
or
sbb
inc
mov
inc
mov
in
faddp
sarb
out
push
bound
push
xchg
bound
ret
xchg
mov
bts
sub
push
xchg
xchg
xchg
int
shll
cmp
add
leave
cmp
aaa
test
or
imul
xor
loop
clc
xchg
cli
ljmp
shll
pushf
int3
jbe
and
mov
stos
mov
mov
sub
mov
sub
sti
mov
gs
xchg
mov
jo
push
popa
jns
mov
push
fs
pop
sub
cli
dec
sahf
test
fsubrl
mov
jmp
ror
scas
mov
stc
aaa
fdivrs
jbe
cli
icebp
fidivs
push
push
sbb
xchg
mov
stos
pop
jmp
sbbl
xchg
inc
out
shl
push
sub
jl
fstpt
lret
pop
mov
stos
pop
jmp
sbbl
gs
mov
mov
int
sub
imul
pop
mov
or
sub
sub
jge
inc
stc
xchg
dec
dec
sbb
cmc
add
jnp
pusha
repz
xorl
sbb
mov
dec
jnp
xchg
or
test
bound
pop
test
or
fadds
mov
test
ja
aaa
and
mov
xchg
jbe
test
xchg
outsb
imul
xchg
push
lret
enter
cmp
std
movsb
lock
inc
mov
cli
mov
fisubrl
sahf
sbb
movsb
mov
adc
or
popa
adc
push
dec
xchg
add
fwait
pop
pop
push
sbbb
add
dec
arpl
rcll
js
add
mov
lods
cwtl
and
sub
mov
movsb
lods
jae
mov
gs
cs
mov
sti
insl
ljmp
jmp
jae
mov
pop
mov
mov
xlat
pop
arpl
cmc
mov
fdivrl
cld
or
in
and
jno
roll
jg
jne
iret
bound
rcll
filds
loope
jge
sbb
mov
mov
push
sbb
lods
andl
push
paddusw
test
je
pushf
mov
cmc
int3
adc
gs
jo
adc
lods
fbstp
xor
into
xor
frstor
or
sbb
pop
ret
nop
push
aam
call
lds
adc
push
faddl
jae
iret
cli
popa
out
pop
into
adc
lret
es
xchg
jb
push
fwait
lret
inc
lret
mov
lret
or
bound
inc
lahf
lcall
cmpsb
pushf
mov
push
and
or
fdivrl
imul
add
xchg
or
jg
cmpsb
add
xchg
cmpsb
test
fnsave
enter
add
xor
mov
inc
je
pushl
pop
out
std
movsb
mov
lcall
mov
jno
movsb
adcb
lock
sti
jge
xor
loopne
sti
sub
movsl
cmp
adc
ficoms
loopne
push
inc
sub
xor
jmp
dec
dec
cwtl
lahf
pop
pop
xchg
add
sub
cwtl
bound
push
pop
pop
mov
xor
and
out
inc
lahf
test
pop
test
mov
out
clc
mov
in
js
cltd
ljmp
rolb
rcr
or
fwait
and
call
gs
out
stos
sub
inc
xchg
xchg
cmp
inc
sub
mov
lods
mov
or
jecxz
inc
mov
pop
loopne
fs
mov
fidivs
cwtl
into
mov
mov
lret
pop
repz
aad
ja
xchg
sub
jbe
xor
scas
inc
lds
adc
cmp
imul
pop
test
ss
jg
in
xchg
dec
lods
pop
push
or
cmp
pop
mov
mov
dec
push
roll
sub
ret
stos
cltd
loop
cmp
popf
or
mov
push
mov
dec
icebp
sub
pop
orb
sbb
addr16
in
mov
cmc
adcb
pop
aam
lock
popf
loopne
int
test
loop
push
adc
inc
aam
mov
mov
adc
mov
mov
mov
orl
dec
outsl
and
cmp
into
sub
or
clc
pop
mov
das
popa
inc
dec
xor
add
pop
fsubl
call
xchg
loop
push
scas
add
pusha
xchg
out
adc
repz
icebp
sti
lret
pop
lock
pop
outsb
xchg
sub
mov
popa
jne
jb
or
push
out
or
jae
ret
mov
jle
ret
cmpsb
cmp
fbld
data16
std
xor
mov
sub
cs
dec
jb
xchg
shlb
jecxz
aaa
and
orb
int3
jmp
inc
mov
jmp
clc
mov
and
in
mov
or
loop
inc
jb
mov
das
fwait
push
pop
inc
lret
ss
cmp
int3
cmp
ret
mov
push
push
mov
inc
mov
ja
aad
lods
or
xchg
jecxz
sbb
or
mov
xchg
and
add
cltd
jnp
std
stos
arpl
loopne
aam
pushf
add
xchg
or
into
loope
mov
sbb
xor
leave
cli
xor
lret
outsl
les
xor
fnsave
cmpsb
and
jle
and
int3
cmp
bound
pushf
pop
rep
imul
pop
in
push
xchg
ljmp
rorl
fcompl
and
pop
lods
mov
mov
fcmovb
cwtl
mov
lods
dec
xor
mov
cli
hlt
mov
xchg
sub
jge
mov
adcl
aaa
pop
cmc
xchg
cmp
dec
fcoms
mov
mov
mov
rorl
adcl
pop
cwtl
aas
cmp
and
adc
jl
ds
movsb
mov
scas
and
xlat
or
dec
packuswb
mov
iret
leave
push
inc
adc
fstl
hlt
jb
pop
jb
fwait
icebp
imul
and
push
stos
pop
push
aas
sbb
js
mov
cmp
icebp
and
repz
jecxz
inc
gs
jno
aas
adc
or
push
scas
jp
stos
push
pop
push
fsubrs
ret
add
xchg
sub
sahf
inc
cmpsl
lret
es
jb
xchg
and
add
movsb
add
call
out
jmp
into
push
mov
add
sub
mov
cmp
inc
push
cmp
jge
pop
add
clc
dec
mov
stc
cmp
cmp
stos
ret
mov
inc
xor
xchg
sbb
push
cmp
push
sbb
or
ss
sti
or
mov
stc
add
ret
inc
es
cmpsl
xchg
iret
sub
or
cwtl
inc
stos
mov
into
pusha
and
xchg
cltd
sbb
ficompl
cmp
insb
test
mov
cltd
sbb
call
jmp
or
insb
pushf
push
int3
sub
scas
out
and
lods
ret
stos
push
mov
sub
int3
lret
int3
dec
out
pop
mov
mov
cmpsl
jmp
ss
lretw
std
sub
ficompl
sub
aam
mov
js
xor
mov
xchg
xchg
ja
fsubrp
stos
mov
push
push
int
mov
movsl
fcoms
mov
lock
push
icebp
xorl
sub
add
xchg
push
and
bound
cld
pop
cmp
push
pop
sbb
jb
movsl
xchg
mov
lods
sbb
aas
and
mov
or
lods
xchg
xor
call
std
push
xchg
xchg
sarl
push
pushf
sahf
jmp
jmp
cli
push
adc
lcall
icebp
aam
pop
push
xor
dec
jbe
mov
mov
mov
rorb
lcall
push
fists
out
popf
xor
cmp
mov
sub
mov
jne
adcl
add
mov
xor
repnz
test
arpl
fadds
cld
ljmp
mov
cmp
in
mov
ds
jo
lcall
add
notl
adc
xor
stos
repnz
rcrl
or
cmp
leave
stos
out
popa
xor
sbb
sub
ss
dec
mov
fdivl
add
bound
push
dec
ds
jnp
je
xor
adc
icebp
aad
push
dec
jmp
xchg
mov
and
loop
mov
mov
aaa
iret
int3
cmc
mov
xor
dec
rolb
xor
mov
xchg
pop
pop
xchg
movsb
addr16
cltd
aad
sbb
adc
test
pop
mov
sub
call
inc
and
inc
mov
addb
add
bound
add
stc
ds
repz
dec
push
inc
enter
adc
push
xchg
xchg
mov
fdivrs
or
test
iret
scas
into
sbb
adc
sbbl
lcall
cmp
scas
es
lds
fcoml
mov
gs
aas
out
out
inc
add
fisttpll
ja
xchg
push
mov
xchg
mov
jbe
dec
int3
pop
scas
sub
fdivrs
mov
jae
enter
push
dec
imull
xor
add
sub
inc
sahf
int
stos
sar
sub
mov
and
jo
mov
subb
rcrl
and
ljmp
adc
scas
xchg
fcomip
xchg
cmpsb
pusha
jecxz
push
or
mov
lea
pop
cwtl
pop
test
sbb
outsb
add
ja
das
push
push
mov
test
fs
fs
mov
fdivs
xchg
cltd
xor
add
popa
aam
aad
jp
cmp
aaa
pop
fisubrs
fiaddl
push
loop
outsl
or
mov
push
xchg
cli
pop
xchg
dec
xor
clc
or
pop
sbb
adc
pop
pushf
lret
ds
dec
xor
popf
add
lods
pop
es
bound
cwtl
mov
xor
jge
in
pop
ja
push
imul
outsl
loope
push
mov
mov
mov
mov
push
jb
std
dec
sub
push
es
imul
les
int3
cmp
mov
pop
xor
cwtl
or
int
and
movsl
scas
mov
inc
sub
test
or
dec
imul
int3
pop
pop
push
outsl
insl
push
xor
add
iret
in
push
pop
xlat
mov
cmp
out
mov
mov
les
cmpsb
cmpsl
dec
test
loopne
lds
shll
out
xor
ds
stos
jae
mov
call
test
or
lret
out
lcall
mov
or
pop
push
cs
mov
nop
push
out
mov
xor
movsl
popa
jne
inc
ret
test
sub
ret
ja
cmc
mov
push
inc
std
mov
ds
lods
jp
sbb
and
push
push
jae
into
out
ret
inc
jg
daa
add
enter
sti
pop
mov
jp
arpl
js
loopne
loop
test
cwtl
shrl
jns
or
call
lret
jns
cwtl
jo
dec
cli
mov
aaa
les
iret
leave
jle
lcall
ret
test
mov
sub
stos
push
sub
xor
push
adc
xor
and
xor
imul
stos
mov
fldt
fs
ljmp
or
je
loopne
sub
sti
mov
or
push
or
aam
out
es
or
fistpl
mov
adc
out
fidivrl
push
enter
enter
mov
mov
pop
sub
cmpsb
in
sbb
js
cmpsl
and
aam
mov
mov
fimull
pop
mov
mov
xor
adc
leave
fldcw
push
adc
aaa
pusha
fpatan
pushf
xor
insl
add
jnp
push
pop
xchg
push
cmp
lods
mov
mov
sub
mov
hlt
arpl
push
pop
dec
dec
push
adc
xchg
adc
imul
das
pop
jle
aam
fs
jnp
stos
jns
ret
iret
mov
sbb
outsl
imul
push
mov
nop
xor
ds
add
lahf
cltd
lret
lcall
iret
push
mov
jmp
xchg
fdivrs
push
push
stos
mov
cmpsl
add
arpl
imul
test
or
fiadds
adcb
adcl
dec
outsb
pop
mov
pop
cmpsb
xchg
mov
push
scas
xor
int
stc
xchg
cs
cmpsl
jl
sbbb
sub
push
addr16
sub
push
dec
inc
daa
clc
jns
push
mov
dec
mov
or
mov
pop
push
imul
jmp
popf
arpl
roll
js
jno
xor
pop
imul
je
cmp
push
lods
add
ds
xchg
fdivrs
xchg
mov
lahf
ja
add
adc
sub
xchg
lea
std
sahf
inc
cmc
int3
mov
dec
loopw
and
push
daa
sti
in
cli
or
cld
imul
scas
or
movsl
cmp
and
test
xor
scas
add
push
es
xor
test
add
jp
or
popa
push
fcoms
out
pop
lds
popa
pop
mov
imul
cld
cmpsl
xor
sbb
out
push
add
pop
cmp
mov
mov
jb
adc
or
adc
mov
daa
repnz
in
pop
cld
shrl
and
and
fcompl
mov
mov
decl
cmp
imul
lds
mov
dec
mov
mov
jbe
je
je
adc
das
cltd
scas
mov
jmp
cmp
enter
jge
cmp
cmpsl
aaa
xchg
je
xor
rcll
xor
cmpsb
sbb
xchg
mov
mov
xor
jmp
lock
fstl
adc
mov
inc
cmp
ret
in
sub
imul
cs
xor
pop
mov
scas
cmpsb
popf
xorl
pop
add
sub
add
mov
and
ljmp
push
test
cmp
dec
jge
mov
xchg
mov
xchg
jge
ss
adc
daa
rcr
imul
cmc
dec
fdivl
push
or
stc
ret
popa
inc
scas
pop
push
popa
in
and
sbb
out
or
aas
and
inc
add
xor
test
add
aas
lret
push
addps
aad
imul
jnp
repz
and
mov
mov
mov
cmpsb
xchg
adc
imul
out
jecxz
adc
cli
aad
jne
movb
imul
test
psraw
js
jg
inc
jns
push
int3
and
lret
into
push
fbld
in
cmp
lods
mov
xorl
mov
leave
mov
lods
js
mov
push
dec
sbb
and
push
dec
cmp
adc
mov
or
fsubr
stos
nop
mov
push
and
fcompl
mov
xorb
dec
das
cld
push
lret
lds
cmp
pop
daa
cmp
mov
push
imul
jb
int
adcb
pop
lds
stc
mov
push
cmpl
cltd
leave
mov
outsb
bound
out
sbb
out
or
out
addr16
cwtl
or
dec
add
inc
jns
mov
popf
adc
mov
mov
sub
ror
xchg
adc
aad
mov
pushl
mov
movsb
mov
and
out
rorl
adc
leave
lahf
mov
cmp
sbb
imul
cs
daa
cli
push
je
and
into
jge
sub
cmp
pop
dec
mov
dec
mov
xchg
iret
outsl
sub
push
cwtl
rcrl
mov
call
xchg
out
fisubs
nop
xchg
out
mov
aaa
mov
addr16
pusha
std
pop
pop
adc
or
push
jne
lods
stos
mov
enter
sub
ljmp
cmp
add
iret
outsl
lcall
push
out
in
or
mov
mov
inc
mov
sti
and
mov
sbb
pop
or
inc
adc
std
cld
rolb
sbb
call
push
popf
test
lods
xchg
stc
cmp
mov
aaa
mov
push
imul
outsl
adcl
dec
xor
jp
sbb
sub
cwtl
push
lods
lods
dec
fistpl
imul
in
inc
dec
in
and
push
push
lcall
jecxz
sarb
jns
mov
jg
outsb
int
scas
fcoml
imul
dec
inc
push
sub
and
lret
test
or
jbe
push
adc
push
std
bndstx
aas
xchg
aam
push
hlt
test
es
pop
test
int
xor
xor
in
xor
in
pop
insb
lods
sub
fistl
int3
icebp
adc
les
push
push
push
xchg
les
lret
lahf
pop
test
fsubrp
cltd
lahf
test
ficoml
cwtl
mov
out
adc
scas
ret
test
mov
lods
divb
cwtl
inc
mov
fmull
icebp
nop
popf
mov
pop
lods
lcall
dec
ret
push
sbb
fcmove
rorl
out
mov
xchg
aad
fwait
lock
xchg
lret
out
cmp
adc
imul
pop
jns
mov
inc
push
leave
or
in
and
mov
loopne
fdivrl
hlt
dec
loop
bts
fidivrs
jle
jno
ja
jmp
mov
dec
adc
mov
sub
add
jle
xchg
faddl
pushf
add
dec
mov
mov
pusha
push
in
adc
sbb
stc
shrl
daa
imul
das
mov
aaa
enter
and
leave
cltd
sbb
xor
out
je
in
pop
pop
filds
mov
out
mov
dec
adc
into
jae
insl
cmpsl
setge
push
pusha
jmp
cld
inc
decb
test
mov
ja
or
mov
fimull
shlb
push
xor
icebp
in
or
hlt
push
mov
jp
shr
sub
lods
and
jg
lretw
xor
jmp
mov
mov
xor
loop
popf
movsb
int
fcompl
insl
nop
and
imul
pop
aad
inc
mov
lock
es
inc
jecxz
cltd
push
popa
shl
xchg
test
lcall
js
out
inc
jecxz
cmp
jge
dec
mov
jmp
sub
mov
das
gs
xchg
add
xchg
mov
scas
sub
shrd
add
imull
adc
jne
pop
test
xor
push
jp
hlt
xchg
xlat
nop
imul
push
inc
pop
adc
mov
mov
jmp
frstor
scas
call
ja
jo
hlt
xor
pop
pop
sbb
dec
enter
pop
adc
push
mov
mov
dec
lcall
aaa
xchg
jns
sbb
rcrl
pop
imul
imul
jge
mov
and
inc
push
jmp
stc
or
cmp
fstpt
push
cmp
mov
sbb
jmp
inc
xchg
jo
shl
pop
mov
pop
pop
mov
fdecstp
popa
sar
outsl
add
pop
loopne
dec
call
or
in
dec
xor
push
xchg
dec
dec
test
mov
mov
xlat
call
leave
popa
push
sub
adc
ss
daa
push
dec
mov
dec
inc
mov
add
aad
inc
sub
sbb
sub
pop
and
fwait
pop
inc
imul
xor
fdivl
in
loopne
pop
lds
testb
mov
inc
stos
jmp
std
ret
cmp
jmp
push
or
enter
lret
push
sub
pop
jns
adc
add
inc
out
jp
shl
pop
popa
test
jge,pt
aad
not
aad
pop
xchg
mov
cwtl
lret
in
je
jl
cmpb
pop
dec
sub
add
pop
in
in
mov
stc
gs
in
cmp
ja
jge
in
xor
and
jbe
adc
cmp
mov
sub
mov
inc
xchg
add
cmc
cmpsb
lock
pop
cltd
iret
loopne
xor
mov
and
and
lcall
shll
dec
add
in
aam
lods
gs
icebp
adc
mov
out
add
movsl
insl
pop
add
jg
jle
inc
cmp
movsl
call
aam
jne
and
add
sub
dec
loop
push
mov
inc
sub
and
fcmovne
test
lds
sub
xchg
mov
mov
mov
lcall
out
lahf
mov
and
movsl
aas
sti
shl
fistl
adcl
mov
aad
xor
jmp
pushf
ljmp
dec
fwait
mov
dec
jecxz
jnp
outsl
cwtl
imul
add
and
arpl
rcrl
push
loopne
ret
mov
repnz
shl
fmuls
orl
out
test
and
mov
je
lret
sub
mov
sbb
or
shr
fs
scas
dec
sub
hlt
dec
imul
push
lds
mov
das
or
sbb
xchg
add
xchg
mov
or
cmc
mov
ljmp
loop
and
ret
jmp
negb
icebp
pop
mov
cmpsl
cld
ljmp
enter
inc
mov
push
xor
sbb
fdivrp
mov
ffree
add
push
push
pop
repnz
loop
gs
xchg
xchg
mov
ss
fmull
lcall
shl
jns
lods
iret
pop
andl
sbb
repz
mov
es
mov
aas
stc
pop
add
mov
mov
sbb
push
and
push
push
jb
push
inc
push
push
push
loopne
inc
mov
push
je
push
and
ret
sub
sbbl
jmp
push
sarb
je
movsl
xchg
push
inc
insb
jl
mov
jg
xorl
lahf
pop
xchg
push
xchg
sub
jl
and
mov
insb
push
or
nop
imull
xchg
mov
add
stos
call
sub
movsl
inc
mov
inc
cmpsb
or
sarl
or
pop
add
pop
mov
rcl
inc
dec
push
xlat
orl
sahf
in
push
ret
daa
mov
lret
adc
rcll
xchg
xor
cmpl
push
cld
xlat
push
cmpsl
push
fnstcw
xor
loopne
fildl
push
inc
mov
into
test
stos
add
jnp
hlt
mov
dec
cltd
add
mov
xchg
jle
addl
sub
daa
imul
pusha
test
aam
or
sbb
cmp
test
cmc
lock
ja
jnp
dec
mov
push
sbb
pop
sbb
mov
cmp
lock
movsl
nop
mov
movsb
test
sbb
scas
push
sub
jmp
stc
add
mov
fdivs
push
push
sbb
bound
ret
in
mov
cmpsl
test
add
xchg
js
mov
mull
dec
rcr
jbe
jecxz
jb
in
or
popf
insb
outsl
stc
add
push
je
mov
outsb
shr
and
or
mov
mov
nop
push
data16
loopne
in
popa
imul
cmpsb
jno
mov
pop
in
ret
push
xchg
push
in
ljmp
mov
mov
cli
dec
push
mov
imul
call
adc
or
sub
popf
or
xchg
pop
pop
ret
cmp
rcrb
jl
inc
jg
js
mov
push
lods
cmp
subl
add
scas
cli
inc
jns
aam
cmp
lds
mov
in
cmp
mov
push
out
fimull
jmp
dec
inc
in
xchg
aaa
jb
lods
mov
outsl
adc
xchg
pusha
dec
mov
enter
jne
lret
lock
xchg
mov
or
dec
es
mov
push
mov
push
arpl
cwtl
push
std
in
xor
mov
mov
out
jmp
add
scas
and
shl
lds
sti
dec
push
push
fidivrs
decb
inc
and
test
and
js
fcomi
repnz
leave
xor
aaa
xchg
jle
pop
testb
xor
xchg
xchg
popa
or
mov
pop
adc
into
ret
jbe
movsb
pop
cmpsb
cwtl
pop
cmpsl
test
sub
out
cmpsl
adc
repnz
and
cwtl
xor
mov
xchg
sub
and
jnp
pop
xor
ss
sub
dec
cmpsl
scas
xchg
pop
sub
orl
inc
gs
inc
pop
xchg
adc
pop
mov
fbld
push
aaa
or
mov
push
movsb
dec
jne
negb
mov
shl
push
inc
xlat
lods
cltd
pushf
and
push
movsb
pop
adc
sub
push
test
insb
inc
cld
aas
scas
cmpsl
and
ret
leave
inc
mov
and
mov
test
xchg
out
push
ret
xchg
xchg
xchg
or
enter
lret
xchg
cmp
cmpsb
fsts
fldcw
xchg
pop
push
bound
fs
jno
outsb
xor
jl
cmp
cmp
dec
popa
roll
mov
add
cmc
dec
dec
dec
jbe
mov
cmc
dec
xchg
repnz
mov
jbe
leave
outsl
roll
xchg
pop
push
cmp
xchg
push
jmp
mov
fmuls
cmp
pop
fsubp
pop
pusha
iret
and
adc
dec
mov
add
cmpsl
pop
cmp
jbe
ss
aas
push
mov
out
rcrb
mov
adc
add
fcoml
movsl
sbb
jge
xor
xor
lods
loopne
sarl
jbe
pop
pop
xchg
test
sub
cltd
push
sub
mov
aas
xor
scas
xchg
iret
cmp
pop
xchg
adc
bound
mov
push
std
pop
fdivrp
inc
xorl
pop
popa
mov
xchg
sub
push
inc
jae
out
dec
adc
lret
in
in
dec
add
fisubs
fs
stc
insb
loopne
mov
adc
test
mov
add
sbb
data16
pop
test
push
mov
jbe
insb
mov
fsubs
xor
out
mov
push
cmp
xor
mov
push
mov
cmpsl
xchg
adc
jbe,pt
adc
je
mov
shr
repz
ja
adc
lds
popa
jecxz
inc
push
fstl
push
test
cli
push
cmp
mov
out
leave
cld
xchg
sub
mov
and
sbb
cmpsl
mov
pop
shrl
mov
xor
inc
outsl
sub
ds
movsb
pop
sbb
dec
cmp
out
xchg
in
jo
mov
fsubl
outsb
mov
xor
iret
push
xor
mov
push
scas
inc
add
in
or
fs
gs
stos
test
jb
push
dec
cmp
xor
outsb
mov
roll
sbb
addr16
sti
dec
jmp
cmpsl
daa
lahf
mov
ja
aad
fidivrs
inc
lahf
or
outsb
lock
sbb
negl
xadd
test
rcrb
mov
sbb
xchg
xchg
mov
mov
xchg
movsb
in
sub
popa
test
mov
jne
lret
dec
mov
and
clc
mov
inc
fdivl
mov
leave
int3
pushf
or
inc
mov
jp
out
inc
add
leave
cwtl
lahf
or
cmp
imul
ds
cmp
fistl
arpl
or
mov
add
dec
lahf
flds
cwtl
lahf
xor
repnz
sahf
test
aaa
mov
jg
cmp
pop
fdivrl
call
xchg
icebp
cmpsb
ja
push
rcl
dec
loop
push
mov
jnp
jl
xchg
adc
lock
push
lds
movsl
pushf
cmp
es
add
xorl
mov
jecxz
les
out
addr16
push
in
addl
or
pop
add
vmovlps
lahf
ja
inc
dec
jno
mov
cld
daa
sbb
movsb
jecxz
mov
adc
push
push
mov
mov
xor
test
repnz
pushf
add
and
cmpsb
lods
movb
out
adc
xchg
clc
out
ret
cmp
in
dec
sbb
stos
data16
push
adc
nop
int3
test
push
out
in
sbb
dec
push
rcrb
inc
in
add
cs
mov
repz
rol
icebp
outsb
mov
mov
test
push
sbb
es
fwait
in
subl
popa
into
out
fimuls
push
pop
adc
movsb
movsb
cmp
mov
pusha
gs
shlb
cmpsb
jbe
jmp
cmp
icebp
fdivl
sub
push
adcl
or
pop
sarl
adc
in
movntps
sbb
dec
int3
adc
subb
xchg
pop
xchg
or
outsl
xchg
xor
test
pop
pop
outsb
in
jne
arpl
push
sbb
push
adcl
ret
fwait
adc
xchg
pop
jmp
push
inc
outsb
xchg
fiadds
or
inc
idivl
mov
or
push
and
sbb
xor
addr16
and
xor
mov
jp
jae
mov
and
xor
dec
sti
test
pushf
data16
and
mov
sub
rorb
xlat
mov
outsl
pop
scas
dec
and
adc
int3
pop
inc
mov
fcmovb
adc
pop
in
dec
mov
xlat
cmp
je
jo
cmpsl
or
in
loope
fidivl
imul
out
xchg
fmull
int3
je
dec
cmpsb
out
out
jne
pop
fstl
orl
lock
xchg
push
sub
xchg
cs
push
cmp
mov
rdtsc
mov
or
mov
imul
cs
dec
insl
imul
push
pop
stc
test
daa
and
mov
jo
cs
mov
or
sarb
test
xchg
dec
sub
cltd
adc
lods
xor
sub
dec
sub
mov
cmp
insb
or
mov
in
fisubs
cmp
push
divb
scas
roll
jne
lea
jno
mov
mov
rorl
out
dec
xchg
rcll
cwtl
cld
fs
mov
fcoml
dec
sbb
or
loopne
stos
test
out
mov
aaa
pushf
lret
push
setb
popf
aad
lds
test
scas
cmpsl
dec
mov
sbb
inc
or
inc
inc
lods
sbb
adc
fcoml
ds
pop
cmpl
or
in
xchg
test
mov
inc
rcll
idiv
inc
cmp
pop
mov
lahf
sub
xchg
mov
xor
scas
filds
sub
adc
xor
adc
xchg
cmc
xor
lods
sbb
cld
call
jmp
sbbb
lcall
mov
rcl
adc
jmp
fiaddl
xor
fsubrs
add
out
imul
push
stc
add
inc
fs
sahf
test
cmp
and
cli
pop
decb
daa
or
mov
testl
scas
inc
dec
or
fadds
cli
or
push
lret
and
pusha
arpl
xor
push
push
mov
sub
aam
sbb
sbb
pop
xchg
shll
stos
cmp
add
xchg
mov
in
mov
fcoms
jg
pop
test
dec
xor
movb
lea
jno
mov
jge
lock
in
xor
ljmp
leave
mov
roll
fwait
push
and
or
pusha
adc
pop
sbb
test
pop
pusha
sbb
adc
mov
xor
stc
jnp
stos
pop
sub
jmp
fstps
xchg
jge,pt
mov
aas
in
or
xor
stos
mov
pop
mov
inc
lcall
adc
je
dec
mov
xchg
dec
push
addr16
mov
xor
lret
movsl
mov
and
int3
cld
movsb
sub
cmp
mov
sarl
or
cltd
mov
adc
addl
push
and
mov
inc
xor
and
jb
iret
mov
mov
cmp
sub
xor
stos
mov
jecxz
sub
mov
jle
aad
dec
orl
xchg
push
fstpt
mov
stos
cmp
sbb
cmp
mov
push
lods
insb
sbb
xlat
sbb
dec
push
mov
pusha
sub
rcl
xchg
mov
fwait
push
cmc
lock
fadds
filds
xor
and
xor
mov
inc
sbb
add
rolb
daa
lahf
sub
push
dec
in
xchg
push
jmp
in
fs
or
imulb
or
add
out
jmp
sbb
and
ljmp
insl
repz
jp
in
cmp
add
or
xchg
push
dec
jns
mov
or
sub
mov
mov
test
add
push
sbb
sub
xor
xchg
arpl
imul
sbb
int
and
insl
aaa
popf
jns
sbb
addr16
insl
xchg
mov
xor
sub
aam
cmp
gs
lods
sub
pop
jb
cli
js
mov
and
movb
rcll
es
dec
fs
jp
scas
mov
lret
in
or
cli
push
and
lahf
jbe
cltd
sub
mov
jmp
and
ss
xchg
ja
inc
test
pop
pop
mov
data16
cmp
stos
adc
in
stos
notb
dec
lcall
sub
push
push
lock
sub
add
push
popf
xorb
outsl
jl
pop
mov
out
add
rcr
in
mov
jo
inc
fnstcw
test
call
hlt
cmp
jbe
mov
fcmovbe
xor
arpl
mov
lea
xor
push
mov
or
push
inc
push
push
mov
lret
pop
mov
xorl
xchg
mov
pop
int3
cltd
fwait
addb
lds
sub
mov
jl
push
repz
xor
int3
test
add
lcall
jno
das
lret
ja
jo
test
push
jae
out
stos
cli
enter
ljmp
lds
out
jb
xor
lods
popa
jg
and
sub
loop
cmpsb
aam
aad
push
in
add
shlb
sbb
xchg
jp
scas
sbbb
pop
stos
and
sub
ja,pt
nop
mov
push
pop
mov
mov
cmp
adc
mov
mov
jp
rcr
movsb
leave
test
int3
imul
ljmp
sahf
daa
cmp
negb
test
sbbl
rcl
sbb
mov
popa
push
rcrl
pusha
sub
dec
fisubl
or
jp
and
jbe
pop
outsl
sub
lods
cld
cmpsb
inc
mov
push
cmpsl
jns
fildl
ja
cmp
cmp
dec
or
pop
imul
ja
jecxz
push
push
aas
lahf
pop
stc
xchg
mov
pop
nop
addl
add
pop
xor
divl
insb
or
or
ds
and
xor
push
mov
icebp
mov
test
mov
dec
dec
js
xchg
cld
nopl
mov
jg
cmpsb
fsubrl
repz
push
das
pop
dec
add
cld
lcall
fisubl
xorl
ds
leave
mov
push
out
xchg
test
pop
pop
pop
pushf
cmp
data16
lcall
mov
ret
outsl
pop
mov
pop
ror
adc
das
jmp
data16
stos
aaa
pop
enter
aaa
or
sub
jne
mov
xchg
in
pop
cmp
outsl
ret
mov
mov
add
orb
aaa
pusha
cmp
dec
popf
imul
adc
pop
imul
imul
mov
sub
in
je
add
enter
mulb
outsl
shlb
jge
jecxz
or
stos
sbb
cmp
test
out
stos
mov
lret
ret
push
imul
inc
add
jg
cmpb
pop
jle
sbb
int
enter
mov
add
aam
pop
lods
dec
lods
outsb
dec
addr16
aas
stc
dec
push
sub
jp
insl
adc
filds
dec
scas
mov
inc
int
stos
scas
mov
add
xchg
cld
lock
call
mov
adc
pop
add
cmp
scas
adc
cmp
add
push
jo
cmpsl
cmc
pop
and
push
jns
loope
sbb
push
les
push
leave
and
pop
xor
aam
stos
add
sub
je
add
cmp
sbb
mov
adc
push
adc
push
lods
push
clc
adc
lea
pop
out
in
push
test
jge
inc
and
pop
dec
xor
icebp
xchg
jp
sub
jp
and
fwait
add
ja
fisttpl
es
cs
mov
mov
pop
cmp
xor
cmp
pop
dec
and
sti
pop
mov
mov
pop
mov
int3
cmc
inc
data16
mov
or
les
inc
roll
fldcw
std
loope
xchg
mov
or
shll
vunpckhps
add
icebp
push
mov
fidivs
cmpsb
cmp
dec
test
adc
cmp
or
sbb
cwtl
hlt
mov
lret
cwtl
push
hlt
or
and
push
std
loopne
sub
das
mov
add
test
add
mov
jb
dec
inc
and
mov
ds
inc
jo
and
outsl
push
inc
jecxz
jmp
movl
sahf
push
leave
cmp
inc
scas
call
pop
sarb
fidivs
xor
pop
mov
pop
add
inc
cwtl
scas
test
add
aad
gs
adc
ret
test
mov
dec
or
xchg
aaa
xchg
adc
push
insb
js
cmp
and
loopne
into
add
sahf
fcoml
cmp
das
push
lds
xor
jge
cltd
mov
mov
pop
test
dec
or
call
cs
jecxz
mov
stc
cwtl
add
out
std
nop
add
sub
mov
add
push
stos
ret
mov
das
or
out
addr16
pop
mov
fisubs
mov
cmp
bound
jbe
test
and
mov
and
stos
xor
cmp
adc
mov
add
ljmp
jne
loop
cmp
and
js
out
outsl
aad
cli
idivb
mov
dec
add
loope
add
sbb
mov
lahf
jns
popf
dec
shll
lods
ss
clc
add
ds
push
xlat
mov
arpl
lcall
aad
add
cmp
sbb
lock
push
xchg
lcall
fistl
fnstsw
insl
paddsb
js
loop
pop
lret
cmp
cmp
clc
mov
cmp
adc
sub
sub
out
outsb
add
push
xchg
xchg
orb
lcall
shr
mov
fisubs
xchg
push
mov
ljmp
int3
mov
and
sbb
mov
and
xlat
xchg
jae
xchg
test
loopne
movswl
cltd
dec
cmp
xor
out
mov
lea
dec
add
fnstcw
hlt
or
sbbb
xchg
mov
les
lea
ret
sbb
cmpsl
adc
add
daa
roll
cmp
xorb
xchg
xchg
je
in
repz
or
sbb
insl
jmpw
and
jnp
sub
sbb
repz
in
xchg
repnz
loope
ja
lret
pop
mov
inc
adc
ljmp
lods
push
fidivrl
and
lahf
icebp
icebp
xchg
imulb
aad
ret
cmp
jecxz
jno
or
sub
xchg
outsl
nop
out
shrb
mov
pushw
push
inc
inc
inc
insb
lret
xchg
test
add
mov
or
inc
insl
in
jns
es
call
gs
es
pop
repz
inc
jnp
nop
dec
xchg
inc
fsubs
push
pushl
lea
pop
lret
pop
repz
cmc
out
adc
mov
mov
pop
xchg
add
pop
int
call
inc
loope
int3
sbb
add
push
outsb
sub
scas
cmp
inc
mov
xchg
icebp
leave
add
inc
add
mov
dec
or
or
and
or
lea
rcrl
push
clc
sahf
shl
out
arpl
cmc
negl
data16
cld
stos
cli
and
mov
aad
fidivl
mov
iret
and
fsubl
orb
sbb
xor
insl
lahf
mov
inc
xchg
or
xchg
pop
aad
in
repnz
mov
and
daa
neg
inc
stc
pop
ror
sbb
aad
int
xchg
jmp
sbbl
cmp
xchg
inc
sti
mov
ret
dec
aas
push
lcall
sbb
pop
int3
popa
mov
jbe
rcrl
push
clc
sahf
rorl
ds
inc
loop
ret
fnstsw
aam
in
pusha
clc
add
fsubl
sahf
pushf
mov
cmp
sbb
mov
pushf
inc
stos
sub
imul
js
sub
imull
mov
jno
mov
popa
push
xlat
fcmovnu
in
mov
movsl
sub
inc
fldcw
imulb
cmp
insb
cmp
movsb
xor
test
fnsave
les
mov
test
jmp
jmp
and
xor
jl
aaa
or
rorl
repnz
sbb
stos
add
rcrl
popf
and
xor
jl
test
out
jmp
push
push
jae
cmp
jb
pushf
mov
nop
into
fcompl
sbb
scas
and
nop
or
loopne
sbb
ljmp
test
jmp
fs
ret
mov
dec
xchg
mov
mov
xlat
lods
in
imul
and
ror
jecxz
cltd
add
rolb
mul
rcll
rcll
mov
lcall
jns
out
cmp
es
int3
loopne
clc
sub
mov
and
js
clc
xorb
hlt
push
and
shr
sub
adc
xchg
cmp
and
movsl
mov
and
out
scas
dec
je
lods
mulb
cli
xor
ja
dec
adc
adc
xchg
and
pop
xchg
outsb
jp
int3
mov
dec
jecxz
mov
push
cld
mov
fnstsw
cmp
sub
pop
fs
cmpsl
push
das
mov
sub
inc
leave
or
jg
push
add
inc
sbb
inc
inc
fwait
mov
call
loope
into
or
sti
adc
cmp
cmp
or
shll
subl
add
mov
xchg
mov
xor
pop
adc
adc
int
aam
pop
xchg
fidivs
dec
frstor
pop
mov
xor
dec
sti
mov
in
fs
or
roll
aaa
pop
xor
aaa
sbb
mov
mov
mov
orl
lds
mov
jmp
push
pop
pop
lods
xorb
sarl
gs
or
add
dec
add
inc
sbb
xchg
arpl
hlt
cltd
fwait
leave
repz
add
mov
in
adc
push
scas
lods
dec
faddl
fcmovne
pusha
aam
push
cltd
push
cli
push
scas
dec
cld
xor
fldt
add
fisubs
xchg
testb
out
jp
jne
iret
mov
in
loopne
mov
bound
or
loope
mov
pop
das
aad
jbe
stos
xchg
pop
push
call
outsl
icebp
movsb
pop
rcl
adc
xchg
leave
imul
jp
jle
mov
enter
mov
xchg
jmp
dec
outsl
or
dec
pop
or
rorl
aam
nop
mov
int3
or
lds
clc
pop
push
stos
pop
stos
and
mov
rcl
adc
inc
fistl
sbb
and
mulb
je
cmp
fs
or
cmp
fists
pop
ror
xor
push
sbb
inc
test
mov
cmp
shl
fnstenv
and
loop
out
or
or
add
sbb
stos
test
jns
mov
push
popa
iret
arpl
ds
imul
cmc
ret
or
sub
int
xor
xor
cmp
and
push
cs
xor
stos
xchg
loope
xchg
ljmp
xchg
icebp
in
das
add
aaa
xchg
mov
fisubrs
int
ss
cmp
ret
adc
cmpsb
sbb
fcmovnbe
testl
das
xor
xor
inc
push
into
fidivs
adc
xlat
incb
ja
in
fbstp
adcb
inc
les
test
jp
mov
rcrb
sub
cmp
push
das
cmpsl
frstor
les
pop
add
push
xchg
dec
daa
nop
xor
rorb
add
inc
lahf
jb
lods
enter
inc
xchg
jne
mov
jne
mov
inc
ret
lods
andb
push
je
in
hlt
xor
push
int
js
mov
incb
fsubl
jle
shlb
pop
lret
ja
dec
out
and
mov
js
mov
rcrb
sub
mov
aaa
jae
cmp
mov
cmp
add
fstl
enter
cld
and
dec
sbb
ja
push
test
daa
adc
xchg
or
std
fsubl
insl
inc
cmpsb
fildl
add
adc
push
adc
jg
fiaddl
cwtl
jae
fstl
xchg
outsl
or
push
nop
dec
cmp
pop
shll
movb
cmp
in
cwtl
cmp
dec
jp,pn
sub
lahf
jge
jmp
test
jns
stos
scas
mov
jno
or
dec
pop
mov
dec
fdivr
addr16
xchg
hlt
push
sahf
rcr
cwtl
js
lahf
add
xor
movhps
dec
in
sbb
push
lret
inc
or
xchg
or
and
pop
iret
xor
pop
fiaddl
jg
jl
mov
pshufw
add
dec
push
sbb
sar
sub
push
mov
xchg
inc
std
dec
idivb
pushf
xor
mov
push
shll
icebp
clc
stos
adc
orb
mov
lods
dec
inc
adc
lcall
pushf
dec
in
jbe
fisubl
mov
cmp
call
jle
int3
mov
pop
cld
and
ss
icebp
pop
mov
cltd
scas
or
rcll
push
sbbb
sbb
scas
gs
fs
shlb
sbb
aad
insl
cmp
fidivs
addr16
repz
addr16
bound
cmp
cmp
pop
ljmp
sbb
loope
data16
repz
es
mov
lret
je
cli
scas
mov
and
add
cmp
loopne
jne
mov
or
out
xor
cmp
push
mov
inc
mov
es
or
jnp,pt
jae
pop
nop
adc
xchg
inc
cmp
idivb
leave
ret
int
adc
je
call
sbbl
jbe
add
mov
add
call
sub
xlat
adc
mov
cmp
mov
bound
push
push
cs
inc
and
or
jno
pop
cmp
fiaddl
sar
lods
inc
lcall
in
sbb
mov
das
je
mov
ja
es
adc
je
mov
mov
sbb
or
jnp
data16
ds
jo
je
xor
ret
and
aas
call
lea
test
loopne
mov
sub
lock
xchg
lods
loopne
lea
xchg
pop
lea
mov
mov
cmp
inc
sub
fidivrs
push
mov
push
fildl
xchg
test
popf
lcall
es
loopne
adc
cmp
fnsave
lcall
sti
out
inc
fsubrs
fwait
dec
xchg
insl
inc
inc
jo
ret
in
test
jns
add
mov
scas
xor
xchg
lock
std
jno
adc
jecxz
lahf
add
jnp
fimull
test
sbb
fisttps
test
arpl
hlt
loop
jge
dec
jbe
mov
xchg
sbb
fisttpll
cmp
cmpsb
sub
mov
inc
cli
xchg
xchg
jecxz
adc
xor
inc
jne
ficoms
adc
sarl
sbb
xchg
jae
lret
xchg
aad
mov
les
xor
repz
out
xchg
sbb
push
scas
iret
dec
fidivl
pop
popa
jecxz
jp
idivb
mov
dec
hlt
movntps
mov
test
pop
push
sub
xor
mov
jbe
inc
dec
rcll
shrb
jmp
fnstcw
cmp
movsl
pop
mov
mov
xor
inc
sbb
clc
jecxz
mov
inc
rorb
add
mov
adc
movsl
adc
fwait
jle
lret
jns
sbb
aas
sbb
push
jnp
pop
ret
sahf
loope
jnp
pop
dec
sbb
pop
int
out
mov
xchg
arpl
mov
inc
mov
scas
fistpl
sbb
pop
xchg
fcomi
repz
or
insb
sub
push
movsl
jns
pop
sbb
iret
push
pop
cmp
or
mov
sbb
jle
adc
test
pop
or
xchg
gs
test
pop
gs
inc
sub
stos
jns
stc
out
xchg
lret
and
in
adc
aas
je
outsb
adc
dec
cmpsb
cmp
test
int
outsb
incb
jge
mov
sub
rorb
adc
mov
adc
lods
mov
incb
dec
and
int
test
dec
cmpsl
xor
xchg
xor
ljmp
pop
lock
and
push
add
mov
test
popf
xchg
xor
fcomip
and
push
push
inc
and
xchg
iret
sahf
je
pushf
loopne
xchg
lahf
mov
mov
fbld
mov
loopne
std
adc
mov
dec
push
lahf
call
mov
jo
jmp
and
cmc
cmp
nop
pop
xor
cmp
and
loopne
icebp
lcall
push
and
mov
xchg
jp
sub
inc
or
mov
dec
dec
jb
push
lods
dec
mov
xor
adc
sbb
mov
lds
dec
dec
sahf
int
sti
mov
jmp
flds
enter
sub
sbb
bound
ja
out
cmp
mov
jne
stos
dec
into
ret
mov
lret
or
pop
aas
and
xor
sbb
daa
enter
addps
filds
jecxz
xor
xor
inc
push
add
lds
push
mov
mov
push
sub
cmpsb
inc
jl
dec
mov
xchg
out
pop
in
inc
push
cmp
mov
lods
add
adc
hlt
mov
push
jmp
in
gs
sub
es
mov
cmp
pop
into
repnz
popa
cvtdq2ps
xchg
js
add
je
pusha
xor
mov
mov
mov
insb
mov
add
pop
mov
xor
pusha
pop
out
mov
rclb
inc
js
cmp
nop
pop
inc
repnz
fwait
sbbb
bound
lahf
scas
in
ljmp
clc
clc
popa
leave
jmp
cmp
push
insl
fistps
jge
xchg
into
stos
sub
lods
outsl
push
mov
xchg
jecxz
icebp
jbe
inc
xchg
xor
mov
or
imul
mov
filds
loopne
sub
rorb
test
push
lock
pop
sub
mov
or
fstps
sub
dec
dec
out
pop
and
cltd
pop
pop
lret
mov
push
xlat
or
pop
xlat
dec
push
inc
mov
mov
xchg
jbe
adc
cmc
leave
ja
push
pop
sbb
dec
nopl
add
popf
pusha
push
std
ja
pop
pop
std
addb
lret
iret
in
xor
xor
dec
mov
mov
in
sbb
int
push
jns
clc
enter
cli
jnp
add
push
cmc
pushf
push
xor
in
mov
xor
xchg
js
in
imul
or
in
inc
lea
cmp
push
add
sub
inc
mov
loop
xor
push
repnz
or
daa
repnz
adc
push
push
mov
sub
inc
mov
xchg
lods
iret
test
cmp
lods
mov
out
aaa
push
in
imul
lock
sub
adcb
add
jo
rorl
mov
dec
pop
lcall
out
mov
es
and
dec
xchg
ljmp
scas
cmp
dec
pop
add
mov
fistl
jp
xorl
dec
arpl
scas
adc
mov
cs
sub
movsl
adc
shrl
std
xchg
xor
xlat
push
sahf
mov
push
xchg
xchg
sbb
in
inc
xor
ret
in
das
shrb
hlt
andl
mov
inc
push
pop
inc
jne
push
gs
ljmp
xlat
pop
mov
mov
cmpsb
jge
call
inc
mov
shlb
add
stos
jno
lret
into
scas
pop
jp
push
movsb
push
or
adc
push
test
mov
test
inc
jbe
and
mov
add
jae
loope
arpl
cwtl
dec
mov
push
jp
enter
mov
push
sub
data16
sub
add
sti
adc
arpl
cli
scas
push
jmp
out
dec
leave
xchg
ret
sbb
inc
push
pusha
outsl
sbb
mov
js
test
cli
or
jmp
sbb
shll
sbb
aaa
jno
push
and
das
jne
shrl
sarl
jnp
test
ret
not
and
pop
jo
in
sbbl
mov
mov
stos
mov
scas
ret
adc
test
mov
sub
sub
das
ljmp
jne
inc
pushf
mov
out
cmp
movsl
xor
rol
ljmp
adc
test
enter
mov
lods
jno
cmp
push
ret
jmp
push
outsb
mov
cmp
push
mov
shl
add
shrl
je
pop
mov
and
mov
mov
fs
test
jno
fmull
mulb
popa
je
fstl
cmpb
sbb
push
jl
inc
aas
fcoml
and
jbe
pop
or
divb
out
leave
pusha
mov
in
inc
adc
xor
in
cmp
xor
pop
xor
or
fs
cltd
frstor
xchg
lock
cs
repnz
data16
lods
pop
jl
rcrb
fisubl
ret
test
add
lret
jp
push
or
sub
icebp
and
cmp
mov
das
ljmp
or
es
mov
xlat
ret
xor
repnz
push
and
stos
mov
mov
push
inc
jne
movsb
repnz
mov
sub
or
jne
mov
lea
js
cmp
mov
and
pop
jo
cmp
sbb
jb
and
icebp
sbb
xor
push
icebp
sti
xor
lea
push
mov
inc
pop
add
fstl
fistl
jo
push
push
cwtl
and
mov
iret
xchg
mov
into
add
clc
out
dec
push
push
cmpsl
lret
push
xchg
outsb
lea
xchg
test
mov
hlt
aaa
adc
sub
mov
popa
ret
cmp
outsl
outsl
sub
jnp
push
pop
xchg
ljmp
loopne
bound
or
and
push
sbb
mov
popa
sbb
inc
imul
xor
les
shrd
lcall
imul
mov
sub
add
dec
xchg
jmp
inc
sub
and
ja
int3
pop
fcoml
in
push
jl
aam
mov
popa
sbb
fdivp
sub
stos
int3
dec
mov
push
ljmp
mov
imul
and
sbb
mov
sar
in
mov
push
clc
dec
mov
pop
leave
insb
xchg
lods
sti
pop
leave
or
fstl
incl
push
cli
pop
sbb
xchg
lret
fs
popa
fadds
lret
inc
addr16
psubw
imul
incb
cwtl
lds
ret
push
data16
jo
daa
ja
dec
fsubrp
dec
imul
clc
out
jns
sub
pop
loope
out
mov
and
out
jns
cli
iret
packuswb
js
xor
rclb
or
add
testb
xor
and
add
lds
pop
and
adc
and
mov
pusha
cmp
out
je
fisubrl
push
pop
in
push
jnp
sti
cli
dec
pop
test
jo
das
movb
pop
orb
or
xlat
mov
loope
cld
pop
popf
clc
pop
xor
mov
mov
ret
dec
push
ss
xor
pop
out
mov
addl
test
popa
repnz
dec
in
cmc
add
mov
inc
push
inc
aaa
sar
aas
xor
inc
cmp
pop
cs
push
mov
push
sub
and
or
dec
imul
jns
shlb
xor
mov
test
cmpsb
sahf
xchg
push
cmp
or
in
movsl
adc
bound
or
daa
and
cs
mov
push
push
xlat
loopne
jne
xor
sbb
enter
std
insl
pop
lret
adc
aas
pop
les
pop
or
ret
mov
fimuls
jne
xor
or
pop
lahf
ret
fistpll
mov
cwtl
jmp
mov
xor
pop
and
sub
out
and
cmp
cli
mov
aaa
pop
fdivs
clc
adc
mov
push
push
jb
xchg
inc
dec
jo
rorl
cmpsb
leave
pop
in
add
cltd
jno
jns
jo
repnz
in
xchg
std
or
incb
or
ficomps
mov
test
ljmp
cli
fistpl
push
cmpb
fwait
es
jno
std
or
mov
xor
adc
test
aam
popf
ds
adc
ret
shrl
inc
outsl
out
daa
dec
sbb
test
lcall
int3
mov
out
cmp
fistpll
fidivs
add
lahf
fstl
stos
rcrb
in
jb
jl
jmp
ja
inc
jae
in
or
call
jne
push
lock
clc
inc
ja
and
mov
sti
push
mov
test
fmuls
filds
aas
pop
mov
pop
das
inc
movsb
in
mov
pushf
lock
push
sub
mov
movsl
xchg
sbb
jo
sub
insb
rcrl
cmp
mov
mov
pop
or
cmc
push
mov
shl
pop
and
cmpsl
mov
ficoml
inc
int
lret
cmp
dec
sbb
push
aam
fsubrl
jg
mov
or
out
sahf
jae
mov
stc
dec
or
lods
adc
adc
jp
sub
dec
push
and
mov
push
int3
aad
dec
ret
mov
pop
xor
xchg
adc
xlat
insl
inc
jnp,pn
inc
cmp
aam
adc
test
push
sub
jg
or
mov
mov
cmp
inc
cmp
dec
fsubs
outsb
mov
call
ret
sub
out
es
adc
adc
imul
insl
sub
packsswb
push
jecxz
ror
pop
pop
jbe
and
dec
adcl
lds
mov
shrb
popf
fdivrp
lret
or
push
add
mov
std
outsb
out
ja
ss
sbb
xchg
add
pop
jmp
sub
popf
fdivrp
lret
lahf
enter
dec
inc
and
ret
add
push
fisttps
sub
push
push
hlt
and
inc
pop
loopne
into
pop
jg
add
xor
jb
int3
jnp
jl
pop
push
loopne
jbe
dec
xor
cmp
fwait
or
es
adc
jmp
and
jl
jb
dec
jge
mov
in
mov
dec
or
mov
xchg
popa
push
mov
mov
mov
fsubl
mov
imul
ss
aas
bound
push
jns
mull
push
mov
rorb
add
add
rcr
cmp
out
test
mov
xor
pop
jne
inc
rcl
pop
insb
lea
mov
and
pop
mov
andb
dec
pop
mov
pop
pusha
mov
in
lds
inc
jge
jmp
dec
fldenv
mov
jmp
or
sub
mov
dec
insb
rcr
shlb
roll
mov
rcl
rcrb
dec
xor
insl
fdivrs
test
arpl
mov
cmp
sbb
cmp
gs
sbb
bound
xor
lds
test
cli
stc
rolb
jle
and
mov
inc
adc
or
push
pop
mov
bound
xchg
mov
movsb
lds
and
fidivs
sti
xor
push
and
imul
mov
adc
adc
sbb
mov
lcall
nop
cmp
test
lcall
jp
xor
sbb
dec
sbb
cmp
in
and
push
jne
call
insl
call
inc
and
insl
mov
mov
ljmp
xor
faddl
pop
sub
pop
adc
mov
mov
mov
cmp
lret
inc
lret
in
clc
and
adcl
inc
lcall
insb
stc
out
dec
mov
mov
ret
lahf
mov
nop
cmp
mov
inc
int
cmc
adc
lock
xchg
xchg
aaa
jl
pop
out
cmpsl
jmp
jmp
ret
jnp
xchg
ljmp
pop
pop
in
add
jp
and
in
jecxz
sub
jae
mov
mov
mov
mov
add
jle
aaa
popa
mov
push
jmp
icebp
les
sbb
fisubrl
mov
ret
insl
iret
loop
loop
mov
je
test
cmc
or
cli
sub
in
or
add
ja
push
sahf
sti
shrl
out
aas
and
pushf
push
add
rcl
out
push
mov
ljmp
clc
out
jbe
mov
daa
inc
pop
adc
add
mov
enter
jmp
iret
jmp
sbb
adc
lret
aam
push
dec
outsb
ja
fcmovnbe
inc
aas
cld
mov
lods
mov
mov
adc
mov
nop
in
sbb
mov
test
pop
outsl
and
jge
cltd
pop
xorl
popa
dec
lahf
adc
loope
repnz
lock
add
cmpsl
test
push
dec
mov
dec
mov
sti
imul
fs
fst
jge
outsl
cmp
outsb
enter
push
adc
adc
mov
rcr
orb
sti
pop
push
jge
sbb
imul
pop
xchg
leave
sub
dec
dec
pop
stos
lcall
loop
jg
lret
mov
xor
cmp
jnp
imul
sbb
js
jo
rorl
outsb
mov
xchg
adc
or
repnz
jl
sahf
xchg
and
xchg
insb
out
adc
rcrb
or
push
dec
lock
sbb
pop
inc
mov
aaa
mov
and
push
pandn
sbb
imul
sub
xchg
pop
cmp
sbb
cmpsb
mov
pop
adc
and
jl
movsl
mov
flds
xchg
fnsave
test
int3
jge
je
jecxz
daa
int3
inc
decl
subl
scas
and
icebp
jle
enter
lcall
sahf
xor
aaa
mov
cmp
je
in
cld
clc
push
iret
cmp
cmpb
add
dec
mov
out
or
cmp
pusha
pushf
andb
outsl
xchg
and
out
mov
int
out
inc
loop
push
add
pop
mov
dec
int
mov
stos
outsb
fsubrl
test
les
arpl
je
ss
cld
xor
out
scas
call
dec
xor
jecxz
sti
ljmp
cltd
loopne
ror
insb
push
es
rolb
fisttps
movsl
sarb
or
iret
sub
mov
stc
cli
les
inc
xchg
lods
mov
jnp
mov
in
pushf
fbld
outsb
mov
addr16
cmpsl
adc
xchg
in
pushf
push
mov
int3
imul
adc
das
sbb
outsl
mov
push
fdivrs
jmp
fldt
xchg
aaa
int3
int3
mov
mov
in
fldl
testl
dec
jb
adc
dec
adc
adc
ss
out
fdivl
sti
or
xchg
cld
jg
jno
jns
jno
inc
aam
jecxz
and
lods
dec
mov
orb
pushf
test
pop
movsb
jl
stc
insb
xchg
int3
sahf
inc
frstor
lds
stos
nop
push
xchg
adc
fisubrs
movsl
add
mov
or
fwait
lods
jmp
jg
and
pop
test
subl
or
mov
loopne
dec
push
stos
lds
jp
xor
or
aas
mov
pop
dec
sub
push
xchg
out
mov
or
add
outsl
std
into
adc
clc
ret
push
pusha
imul
sbb
les
xor
leave
mov
jnp
cmp
and
aam
xchg
mov
dec
lcall
xchg
shr
mov
xchg
mov
pop
outsb
btc
fstps
ret
fsubl
in
add
push
add
out
lods
fldenv
mov
mov
xor
leave
pop
push
fwait
pop
ret
xor
jno
mov
orl
mov
ficoml
movsl
cwtl
fistps
out
out
notl
push
mov
lcall
jno
xor
sbb
xor
icebp
std
scas
imul
out
sub
aaa
popa
mov
rcl
lods
daa
sahf
xor
push
test
nop
mov
iret
sar
in
xchg
loop
dec
jl
pop
std
add
cmpsl
pushl
pop
aam
push
mov
das
testb
lret
jp
jns
cmpsl
sub
test
push
mov
enter
cmc
stc
and
and
jmp
adc
icebp
pop
mov
shl
add
inc
cmc
adc
fsubrs
jnp
test
mov
lock
repz
xor
sbb
stos
mov
xor
into
jg
lahf
jmp
and
and
push
lds
ret
pop
shlb
stos
imul
stc
xchg
and
xchg
adc
mov
mov
addl
out
movsl
in
icebp
mov
sbb
push
int
aam
sbb
in
fwait
movsl
mov
push
mov
daa
sar
hlt
and
jecxz,pn
and
sbb
dec
mov
icebp
jg
dec
inc
hlt
and
cld
mov
lods
cmpsb
in
arpl
inc
or
insb
cwtl
gs
push
clc
sarl
aam
mov
jae
bound
ss
mov
addr16
cltd
pop
mov
jle
mov
pushf
xchg
adcb
fucom
mov
std
subl
and
lahf
lods
mov
jle
mov
xchg
lret
jecxz
push
push
and
dec
call
add
push
or
mov
inc
pop
push
test
fsubs
cmp
push
add
push
xchg
add
outsl
push
test
fwait
gs
adc
adc
icebp
add
dec
pop
sub
mov
push
mov
test
or
aad
cmp
test
in
or
dec
and
sti
dec
xchg
xchg
fstpt
pusha
cmpsl
adc
aaa
sub
mov
sbb
inc
push
and
ss
mov
pop
test
mov
in
rol
xchg
fldcw
fwait
add
lret
xlat
and
jnp
bnd
cld
add
adc
divb
sub
pop
adc
pop
pusha
imul
imul
inc
cmpb
cmp
popf
iret
mov
mov
fcomp
mov
mov
mov
dec
shll
mov
sbbl
mull
inc
js
inc
sbb
int3
pop
or
scas
int3
xor
mov
shl
dec
cmp
sbb
mov
stos
sub
mov
test
jo
cli
jnp
mov
pop
jge
movsb
push
xor
xlat
ja
mov
ret
imul
jnp
jmp
subl
loop
add
popf
cmc
out
fucomip
jl
pusha
xor
loopne
jns
aas
ljmp
sbbb
lcall
leave
mov
pop
ljmp
xor
clc
ja
xchg
push
movsb
cltd
imul
add
sti
add
out
dec
stc
cld
cli
push
or
cli
cmp
cld
mov
in
loopne
inc
loope
mov
add
dec
mov
sub
lods
fmull
stos
cmp
sub
es
pop
mov
pushf
push
movsl
push
lea
xor
mov
jbe
in
pop
data16
mov
cmp
cli
push
mov
cltd
pop
int3
jnp
cmp
push
xchg
jmp
mov
cmp
insl
push
popa
dec
loop
cmpsl
call
jnp
add
test
test
jae
lods
nop
ss
lock
stos
adc
sbb
xchg
aaa
xor
test
test
add
push
mov
jmp
jnp
rolb
mov
cmp
aad
test
clc
push
jbe
push
ret
clc
mov
mov
dec
inc
mov
int
inc
hlt
cmp
pop
fwait
sbb
das
pusha
daa
and
test
clc
push
jbe
push
jge
mov
dec
mov
fnstsw
in
sbb
sbb
lods
cli
iret
push
pop
in
je
mov
icebp
mov
jl
xchg
pop
das
cltd
inc
fs
loopne
scas
sbb
xor
sub
sub
insl
psubsb
gs
shll
adc
xchg
xchg
xchg
cmp
loop
aaa
js
leave
daa
add
add
test
mov
xor
sbb
sahf
xchg
aaa
mov
xchg
fadds
sbb
icebp
jg
pop
xor
pop
sti
pop
xor
adc
mov
mov
adc
in
sub
xor
pop
sarl
and
dec
shl
je
and
mov
cs
and
push
sti
mov
faddl
sub
dec
and
ret
fucom
int
mov
sub
jo
inc
push
dec
fs
cld
dec
push
adc
adc
mov
and
imul
push
jle
loope
xor
mov
fiadds
js
adc
insb
and
sub
insl
sbb
jg
imul
push
repnz
loopne
sub
arpl
cmp
test
mov
std
mov
bts
adc
test
aad
mov
push
call
sub
insb
ret
iret
cmpsb
push
jge
push
sbb
loop
nop
or
movsl
push
cmp
popa
mov
add
xchg
sbb
lcall
mov
cmp
arpl
jae
cpuid
filds
sbb
jo
mov
or
movsl
cmp
movsb
jns
push
iret
sarl
std
and
fsub
sub
jo
xchg
mov
sbb
pop
push
shrb
and
jnp
jle
sbb
das
and
leave
out
cmp
fs
mov
xchg
and
repnz
ret
test
lods
xor
inc
xor
mov
lea
xchg
add
xchg
testb
and
sbb
in
sbb
push
or
mov
mov
lahf
je
cmp
xor
push
jne
neg
mov
lret
jb
imul
xchg
ss
mov
push
jp
and
inc
loopne
mov
sbb
fisubrs
inc
ljmp
push
pop
in
pop
incl
mov
xchg
pop
pop
sub
xchg
jo
aas
xor
lods
icebp
imul
sbb
aam
int3
mov
or
imul
push
pop
adc
xchg
jmp
repz
mov
lahf
loop
mov
out
jbe
sub
cmp
aam
xchg
jbe
jo
ret
jecxz
lds
mov
jno
xor
push
pop
xchg
mov
sbb
fisubrl
jge
cmp
fcmovb
xor
sbb
pushf
repz
je
pop
ljmp
shll
test
cmpsl
add
mov
ret
sub
aaa
fnstsw
sbb
shr
jge
icebp
and
shr
imul
jae
movsb
clc
fidivrs
push
data16
jns
icebp
ds
shrl
icebp
test
push
sbb
pop
cwtl
lret
cmp
iret
sbb
or
xchg
clc
mov
push
hlt
fstps
xchg
cmp
or
sahf
mov
adc
push
mov
fsubrl
hlt
in
cmp
movsb
mov
jb
jo
mov
daa
or
rol
and
mov
push
jmp
aas
push
js
xchg
pop
fwait
jb
fcoms
cmpsb
sahf
icebp
push
sbb
rorb
scas
and
mov
jg
lcall
mov
cmp
pop
in
into
mov
inc
es
cmp
mov
pop
test
test
sub
fs
push
clc
jmp
stos
fcmovb
ss
xlat
push
sbb
pushf
cmp
xchg
mov
xchg
leave
push
inc
dec
and
xchg
lret
cld
in
xlat
leave
adc
xor
not
pushf
cmpsl
mov
push
jecxz
inc
or
mov
push
testb
ds
add
clc
in
xor
mov
testl
cmpsl
mov
push
or
fisubrl
mov
xor
push
sbb
out
add
jmp
loop
sub
jg
int3
xor
ret
mov
inc
mov
fmuls
push
repnz
cli
mov
cld
sub
sub
xor
xchg
es
mov
and
xchg
aam
jne
sub
in
cmc
sub
arpl
sbb
xchg
or
repnz
out
std
adc
fmul
mov
cmp
in
mov
add
cmp
cmp
dec
dec
sbb
sub
and
xlat
add
xchg
jle
fwait
jge
call
movsb
out
inc
mov
push
unpcklps
aam
stos
inc
dec
inc
sbb
test
or
mov
adc
sarb
xchg
dec
push
cmc
xor
adcl
andb
into
andb
xor
pop
mov
gs
fcompl
popa
fldenv
stos
pop
aas
mov
adc
lock
sbb
mov
cli
test
ss
cmp
insb
insb
call
imul
arpl
push
cmp
iret
add
adc
test
dec
push
inc
mulb
in
incb
sub
adc
and
mov
jo
push
mov
jb
mov
or
fabs
lret
stc
jmp
xor
mov
js
in
les
push
gs
mul
nop
mov
or
lods
adc
add
sub
push
xor
orb
es
xchg
shr
mov
jecxz
not
scas
ja
mov
clc
fidivrs
push
data16
jns
icebp
ds
shrl
icebp
test
push
sbb
pop
cwtl
lret
das
or
flds
in
jae
add
cmp
das
xor
mov
pusha
sti
test
push
jo
ret
lret
lods
pop
cmp
and
pusha
pop
push
dec
add
mov
jbe
in
ljmp
loopne
fisubs
lret
mov
dec
mov
in
xchg
ret
scas
sbb
xchg
jecxz
jno
divb
in
cmp
mov
inc
in
imul
cltd
jbe
nop
mov
cli
fbstp
xor
test
lahf
add
fdivr
dec
aad
jne
mov
lds
rclb
lret
shrl
dec
push
lcall
and
pop
paddusb
mov
lret
fsubrl
xor
into
mov
adc
movsb
xchg
jecxz
fs
sbb
jge
cwtl
adc
movsb
cmpsb
jnp
sbb
shl
jmp
jge
pop
sub
pushf
dec
mov
mov
adc
dec
scas
arpl
sub
std
movsl
sub
sub
cmp
and
mov
mov
je
add
aas
add
clc
mov
scas
out
push
lds
push
lds
push
lds
testb
shl
cmp
in
xor
push
sbb
mov
testb
shl
cmp
testb
shl
cmp
add
push
xchg
mov
sbb
aaa
shrb
aas
pop
xchg
daa
xchg
cmp
outsl
jp
cs
sub
mov
int
pop
push
adc
and
pop
gs
rcll
cwtl
dec
push
inc
repnz
nop
gs
push
jp
test
mov
jns
adc
das
mov
cmc
and
fcomi
dec
fbld
incb
adc
rcrb
enter
es
dec
mov
ds
vsubpd
lock
mov
pop
fmuls
mov
sarb
clc
xchg
cli
pop
imul
mov
sbb
pop
pop
xor
iret
mov
adc
das
jb
jo
push
gs
sbb
dec
sbb
scas
ret
mov
jl
fstpl
mov
leave
ss
pop
push
xor
insl
test
imul
sub
test
adc
lods
fists
pop
addb
xlat
and
out
mov
fwait
das
sbb
jb
add
test
push
mov
or
enter
fistpl
in
xor
and
sub
scas
ret
xchg
movsb
or
adc
call
xorb
mov
xor
gs
data16
int3
adc
bound
cmpsl
js
in
pop
aad
test
pop
cmp
add
add
xorb
dec
cmp
ret
dec
adc
in
mov
outsl
mov
mov
fucom
push
jnp
out
fidivrs
cmc
lds
out
pop
push
scas
mov
ficomps
insb
popa
jne
adc
mov
ret
xlat
pop
inc
sub
pop
dec
in
jecxz
cmp
in
xchg
pop
repnz
aad
movsl
mov
or
add
push
xor
sub
mov
jb
lret
or
jl
and
into
jmp
pop
or
cs
iret
xchg
push
lods
sar
mov
push
mov
mov
xchg
enter
lock
dec
or
loope
pusha
xlat
iret
adc
and
cmpsl
out
shr
mov
fldcw
pop
push
stos
je
mov
pop
shll
xchg
sub
xor
cmp
cld
xchg
icebp
rorl
jmp
push
sub
xchg
mulb
es
pop
mov
and
subl
gs
sub
pop
mov
sar
das
cltd
sahf
imull
sub
mov
mov
gs
repnz
int3
cmc
sub
lcall
add
mov
mov
movsb
add
pop
into
cmp
cld
jbe
mov
or
push
add
movsl
mov
outsb
jl
popf
cli
inc
or
and
data16
shlb
fsubrl
cmpsl
ret
adc
das
imul
jmp
and
xchg
addr16
jns
test
jbe
test
jmp
sub
lret
scas
mov
sbb
popa
stos
dec
or
mov
mov
sbb
lock
mov
stos
xor
adc
mov
stc
xor
push
mov
into
nop
movsb
push
movsb
imul
mov
lret
xchg
dec
xor
gs
xchg
dec
mov
pop
ds
insl
push
aad
jns
mov
hlt
cmc
mov
dec
xor
xlat
cmpsl
push
rorl
dec
aad
popf
imul
jbe
fildll
js
enter
xchg
dec
sbb
leave
and
jno
adc
sbb
cmpb
jge
mov
jns
cmpl
dec
mov
pop
es
test
inc
fstpt
pop
mov
push
mov
push
pop
loopne
push
movsl
mov
mov
mov
mov
push
es
and
sbb
push
aad
mov
mov
sub
dec
push
enter
fadds
pop
lret
pop
adc
aam
inc
es
out
inc
xor
cltd
sbb
clc
inc
push
sbb
and
stos
dec
and
xor
fsubr
mov
inc
mov
fdivl
inc
scas
in
cmp
xchg
xchg
and
add
nop
and
jle
inc
dec
cmpsb
mov
cltd
or
mov
or
fistpl
loopne
insb
pusha
mov
sbb
xchg
and
icebp
repz
ds
xchg
jns
fcompl
add
in
into
shufps
loopne
lret
gs
inc
stc
xchg
movsl
mov
je
dec
add
sbb
stos
or
xchg
mov
test
mov
mov
mov
stc
and
cwtl
dec
fisubl
int3
dec
add
mov
fbstp
sub
mov
cmp
xchg
xchg
add
scas
adc
js
cmp
sub
jge
push
push
cmp
lock
sub
out
cmp
loop
std
std
lahf
dec
jl
adc
outsl
div
inc
movsb
hlt
push
or
outsb
xor
lods
mov
sub
push
add
into
sbb
dec
bound
mov
leave
xchg
push
push
dec
imul
sub
in
and
fs
adc
mov
nop
xor
in
and
lock
mov
arpl
out
jb
in
addr16
cmp
ljmp
fmuls
inc
cmp
sub
xchg
jmp
sbb
pushf
xchg
fisubl
inc
outsl
aam
jne
sar
mov
jo
cmp
sbb
sub
sahf
sub
mov
ljmp
xlat
hlt
out
ss
imul
pop
mov
add
addr16
push
xor
add
mov
cld
mov
icebp
dec
mov
fnstsw
cwtl
jb
ret
and
out
popa
fisttpl
pop
leave
mov
movsl
imulb
iret
jmp
fldenv
mov
fs
inc
lret
xor
adc
and
mov
or
jle
push
jnp
in
daa
inc
cmpsb
jo
ret
repnz
jg
adc
or
cs
jae
loop
lret
jg
push
push
fists
lock
das
and
es
cs
and
ljmp
mov
imul
pop
test
mov
adc
lret
cltd
cwtl
mov
outsb
lahf
test
cld
outsb
xchg
xor
push
fcmovne
jns
imul
cli
xchg
sbb
mov
sub
daa
mov
and
push
and
test
fdivl
gs
fwait
addb
iret
shrl
shl
add
out
cmc
lahf
test
pop
vcmpss
sahf
mov
loop
cmp
pop
add
cmc
push
add
adc
aad
iret
pop
faddl
mov
stc
mov
arpl
and
push
pop
das
push
stos
adc
test
jo
rcl
xchg
xlat
mov
mov
jbe
inc
mov
mov
push
pop
mov
inc
je
iret
js
ljmp
lret
or
rcrb
jp
enter
mov
mov
jae
ljmp
test
push
cmp
lcall
out
jns
lret
into
cmpsl
push
je
add
lods
inc
push
cld
mov
imul
in
adcb
jle
outsl
pop
cmp
xor
mov
mov
iret
pop
std
clc
adc
inc
dec
fadd
mov
movsb
inc
and
jg
mov
ljmp
jl
adc
sbb
rcr
fistpll
in
jge
push
sub
sbb
mov
mov
mov
into
sbb
je
cmpsb
ds
rorb
pop
xchg
cmpsl
mov
dec
lods
push
cltd
and
mov
ret
xchg
inc
xor
or
lock
push
adc
jno
std
jp
mov
xor
adc
into
insl
call
cwtl
adc
rorl
out
sub
imul
or
lds
jmp
xchg
loope
push
add
dec
aas
pop
cmpsb
add
jo
jae
jmp
bound
xor
dec
mov
jecxz
sbb
add
xor
adc
fsubrl
and
imul
lcall
das
cmp
push
in
syscall
mov
pushf
roll
cltd
or
test
insl
cwtl
lret
mov
mov
incb
sbb
int
xchg
add
mull
push
dec
pop
aaa
pushf
mov
and
pop
or
inc
or
lret
scas
add
dec
fnstsw
cmp
in
ficompl
jecxz
mov
cwtl
pop
pop
test
lahf
dec
push
jp
subl
dec
movsb
clc
push
xor
jecxz
mov
xchg
cmc
cmp
ljmp
pop
xchg
sub
inc
inc
add
incb
ret
xchg
shlb
psubd
fs
sbb
adc
jne
fildl
in
dec
mov
psubsw
sti
xchg
cs
lea
cli
call
scas
ss
cmp
aaa
loope
adc
imul
mov
repz
popa
pop
insb
and
adc
arpl
or
es
pop
lret
dec
outsb
pop
and
xor
fidivrl
mov
push
mov
mov
add
outsb
addb
adc
in
movsl
add
sbb
test
cmp
mov
mov
call
xrelease
mov
mov
mov
lods
jg
sbb
sbb
sub
out
pop
cmpl
pop
icebp
sarb
xor
xor
cmc
hlt
jne
mov
inc
stos
mov
jbe
lods
or
adc
jmp
jb
divb
jge
add
and
insb
pop
mov
xchg
dec
inc
add
cmp
add
mov
add
pop
mov
sbb
enter
sbb
out
outsl
jle
mov
aad
inc
xlat
sbb
scas
sahf
sub
fists
push
sbb
cmc
dec
xor
xor
gs
adc
lret
aad
inc
xchg
jb
mov
loop
aam
into
sbb
dec
push
loop
or
fdivrl
cmp
shrb
or
outsb
xchg
jmp
jg
rclb
xlat
pop
out
xor
lcall
jb
xchg
inc
icebp
pop
xchg
fisttpl
lods
testb
lock
leave
ret
jb
out
push
int
fidivrl
test
and
dec
mov
jl
jo
cmpl
mov
out
xchg
pop
ja
mov
or
jnp
cmp
out
push
les
dec
adc
icebp
test
mov
icebp
jge
inc
xchg
les
adc
test
jo
pop
cs
cmc
orl
inc
cmp
inc
bound
int
cli
negb
push
xor
les
inc
inc
push
and
int3
ret
enter
sub
das
mov
push
add
xor
nop
sbb
daa
jp
jge
leave
mov
push
xchg
ret
cmpsb
aas
jno
arpl
out
out
xor
xor
sbb
dec
movsb
pop
loopne
fs
insb
sti
push
or
cmp
int
push
mov
sahf
or
int3
test
mov
frstor
mov
jbe
enter
sub
repnz
sbb
jb
pop
push
loop
sahf
dec
sub
and
shll
fbstp
push
jbe
loopne
lret
enter
rcrl
daa
xchg
test
or
adc
addr16
arpl
mov
int3
jnp
movsl
mov
movsb
sahf
mov
ss
pop
sbb
cmpsb
jae
lds
addr16
and
cmpsb
div
fucomip
xchg
stos
xchg
dec
out
fisubrl
dec
repz
push
int
lds
ja
or
mov
popa
pushf
imul
jge
repnz
imul
loope
ljmp
in
movsl
add
cld
scas
int3
jge
jne
push
and
sti
das
pop
sbb
mov
sub
into
push
mov
call
jp
xchg
lret
add
push
adc
xor
leave
es
les
je
and
bound
jmp
dec
icebp
and
sbb
cmp
arpl
mov
xor
pop
testb
aad
cmp
jle
add
shl
push
pop
dec
lods
test
lock
push
lods
xchg
mov
or
test
or
mov
xchg
in
sahf
stos
call
scas
mov
cmp
xchg
jno
inc
lret
in
mov
jl
or
jecxz
ja
inc
mov
aam
dec
and
adc
lock
dec
into
out
loopne
enter
rcr
cmpsl
cwtl
sahf
pop
sub
adc
icebp
mov
inc
pop
lods
xchg
pop
cmp
in
in
jns
xchg
loopne
outsl
lea
imulb
repnz
or
mov
cmp
stos
out
add
insb
push
fcmovu
pop
mov
cmp
cmp
leave
pop
dec
or
sbb
pushf
pop
mov
les
jnp
pop
push
lcall
add
shll
stos
adc
and
jge
sub
dec
mov
enter
les
xor
aad
xor
adc
ja
jae
lds
adc
sub
bound
cs
lds
cs
adc
xor
jg
jae
scas
pop
popf
mov
lcall
or
or
add
lcall
push
mov
jbe
mov
pop
jp
adc
jge
pop
repz
jbe
mov
dec
sti
insb
jo
cwtl
daa
insb
xchg
je
lret
or
adc
jle
pop
jmp
movsb
decl
hlt
movsb
vmovhlps
cltd
movsl
cmp
ret
enter
enter
dec
jp
icebp
mov
adc
mov
xlat
jns
pop
paddq
out
jns
push
scas
jmp
adc
movsb
mov
add
cmp
mov
int
int
gs
lcall
xchg
or
and
inc
mov
push
filds
mov
in
loop
lds
adc
sbb
popf
or
sub
outsl
jbe
push
cli
decl
mov
dec
mov
cmpsl
mov
or
int
inc
shl
movsb
mov
cli
jno
adc
fwait
orb
xor
sub
cld
pop
jbe
adc
xor
xor
sbb
add
inc
sbb
test
cmpsb
mov
xorb
mov
insl
icebp
mov
xor
mov
dec
xchg
aas
fstpl
inc
cmc
xchg
pop
xor
mov
mov
mov
call
insl
add
mov
and
out
dec
lcall
jl
mov
aas
mov
popl
pop
iret
xchg
sbb
sbb
or
mov
sub
sub
aad
rcll
xchg
nop
mov
dec
xor
mov
jl
pop
sub
outsb
sub
inc
mov
out
cmp
mov
jmp
mov
and
xlat
mov
pop
out
lret
scas
mov
outsl
or
push
stos
cmp
xchg
popa
ror
xor
stos
loope
nop
std
adc
xchg
dec
sbb
in
fisttpl
test
add
pop
adc
cmp
mov
cld
mov
push
loop
jb
icebp
lret
add
and
or
out
cs
mov
push
mov
out
loopne
sbb
add
cwtl
inc
iret
aam
lret
sbb
in
push
sbb
test
xchg
out
pop
or
add
aam
outsb
push
shl
lret
and
in
inc
xchg
bound
rorb
cmp
xchg
scas
fidivl
adc
pusha
pop
pop
adc
loopne
push
or
mov
popa
int
mov
pop
fisubrs
push
cmpsl
jae
xor
xchg
push
shrl
sbb
adc
push
popa
push
out
xchg
cwtl
dec
or
sub
mov
adc
js
jae
pop
cmpsb
aas
mov
pop
push
popf
lods
inc
sub
in
stos
fisubrs
mov
or
daa
push
lret
sbb
and
xchg
bound
rolb
sahf
inc
push
pop
test
leave
xorb
popa
jge
xchg
mov
push
iret
push
sahf
shll
out
or
rolb
mov
jp
pop
and
push
lahf
sub
push
sub
daa
sbbl
aas
pop
sbb
push
add
lods
dec
xchg
test
js
and
jnp
test
jnp
aas
cmpsl
sbb
fwait
mov
xchg
inc
dec
sbbl
and
aad
imul
pop
aas
inc
dec
xchg
imul
imul
sub
mov
pop
inc
arpl
shlb
push
sub
and
movsl
pop
jbe
or
pop
imul
pop
addr16
in
xor
lds
push
dec
cmpsl
xchg
ret
pop
add
int3
les
fs
fistps
jle
xchg
inc
cmpsl
xor
and
xchg
dec
cmpsb
stos
int3
es
dec
push
mov
fiadds
xor
outsb
outsl
xor
jb
push
mov
dec
xchg
dec
gs
xor
loopne
mov
test
std
les
gs
jns
push
mulb
scas
outsb
pop
and
into
andl
test
testl
push
call
in
jge
mov
dec
stc
push
les
stos
cld
lds
in
xchg
push
mov
pop
mov
push
loop
xchg
mov
xchg
jo
into
inc
mov
pop
push
cmpsl
mov
in
stos
add
subb
jo
rorb
int3
lock
ds
and
xor
inc
inc
cmpsb
dec
pop
shlb
hlt
jl
imul
out
das
cli
imul
xor
popa
cmp
or
sub
dec
sub
mov
cld
les
popa
roll
xchg
jns,pt
idiv
xchg
jb
or
cmpsl
das
xchg
sti
aas
xor
inc
cmp
xor
lods
sbb
sub
not
pop
adc
lods
inc
js
jp
inc
jne
or
mov
cmpsb
test
xchg
mov
sub
inc
mov
pop
cmc
je
xchg
inc
xor
add
xor
cli
jbe
fdivs
ljmp
or
cmp
pop
mov
push
cld
aaa
fmull
mov
int3
push
hlt
adc
movsb
out
inc
lods
jb
add
xor
mov
mov
fidivrl
pop
sbb
add
scas
pop
xchg
bnd
adc
aam
cmpsl
lods
ljmp
outsl
dec
sbb
mov
add
nop
dec
push
imul
push
xor
insb
pop
jp
popa
xor
clc
fsubs
test
stos
out
push
das
aam
subl
pop
shlb
add
and
sahf
pop
xor
testb
lods
or
cli
outsl
scas
xor
sbb
pop
das
and
out
fs
mov
xchg
movsl
shll
mov
mov
cmp
mov
sbb
adc
push
push
nop
cltd
sbb
push
cltd
out
dec
sub
loope
nop
sahf
jns
inc
lods
jno
mov
and
lret
aad
sbb
shr
push
or
fwait
sbb
cld
cmp
call
xchg
aaa
hlt
jg
and
mov
xchg
sub
jne
and
xor
popa
adc
or
dec
lods
aam
nop
ret
imul
std
and
mov
fisubs
ds
daa
mov
adcl
cltd
inc
cmp
mov
pop
js
filds
push
adc
test
xchg
mov
adc
lret
push
out
pop
adc
loopne
xlat
inc
pop
mov
adc
jae
ret
fidivrs
int3
lds
aam
xor
lods
xchg
fcmovu
call
add
xchg
call
jno
mov
popf
push
pop
nop
and
dec
fstps
inc
mov
cmc
je
xchg
inc
xor
in
and
lods
pop
lcall
les
add
popl
xchg
or
ret
rclb
dec
sbb
or
pushf
jbe
test
mov
popf
push
insb
adc
aad
mov
testl
cmp
mov
leave
js
push
xchg
mov
jecxz
cmp
lds
mov
push
lods
in
jmp
cmp
push
sbb
test
lret
sti
dec
cmp
loope
mov
add
outsb
lcall
das
adc
mov
jl
aad
or
in
ljmp
sbb
sub
sbb
adc
test
jo
and
in
aam
mov
cmc
fwait
orl
fldpi
lock
inc
stos
xchg
sub
lcall
xor
fcmovne
imul
iret
add
loopne
inc
loope
push
shlb
aas
pop
dec
inc
mov
push
out
xchg
and
call
sbbb
sbb
xchg
popl
aaa
cwtl
cmpsl
sub
cltd
dec
mov
inc
test
sbb
jo
xchg
mov
int
cmp
jecxz
ja,pn
lret
mov
aad
int
xchg
aaa
mov
xor
cmpsl
add
lret
push
jg
sub
mov
cmp
jecxz
ja,pn
cmp
subl
cmpsl
in
clc
pop
pop
inc
adcb
pop
fidivrs
shlb
insb
in
mov
xchg
in
xor
cmp
pop
sub
cmp
pop
mov
sub
roll
jo
sbb
push
dec
xchg
enter
push
je
in
test
loope
rcr
sbb
jnp
pop
inc
fnstcw
sarb
sbb
outsb
ss
jle
or
xchg
cld
clc
push
adc
std
fsubr
jno
add
push
sbb
fdivrs
or
pop
add
inc
jp
and
icebp
sub
cmp
cltd
incb
fldenv
dec
sbb
mov
pop
out
scas
mov
bound
ds
mov
adc
je
mov
cmc
dec
cmpsb
stos
xor
daa
push
jns
xchg
les
sub
hlt
add
loope
out
xchg
jmp
or
inc
inc
in
test
in
dec
and
sub
jle
cmp
mov
jno
xchg
cmp
or
cmp
scas
lods
or
mov
int3
cmp
jb,pn
aas
jno
int3
cld
fsts
or
stos
mov
ljmp
and
push
pushf
lret
xlat
jecxz
mov
div
stc
lret
ret
movsb
pop
adc
dec
fildll
mov
xchg
das
dec
mov
jg
loopne
gs
aas
jle
lods
dec
push
xchg
jge
pop
and
into
int
inc
sub
jbe
sbb
mov
fdivrl
and
lods
iret
pop
dec
pop
addb
rorl
xor
inc
cmp
lods
or
roll
push
stos
dec
mov
xchg
rcll
sbb
mov
inc
push
pop
roll
mov
or
mov
call
repz
movsb
iret
sub
sub
dec
lods
test
push
xor
sbb
cmp
ret
sub
xor
push
aas
mov
ja
data16
push
hlt
loop
push
jl
sarb
cmpsl
xor
mov
jnp
push
add
outsl
enter
sahf
mov
in
jle
das
or
adc
js
inc
lds
dec
pop
idivb
and
add
mull
pop
mov
adc
add
in
mov
mov
inc
jbe
xor
or
xlat
mov
pop
shll
in
pop
clc
imul
pushf
mov
cmpsb
movsl
mov
jecxz
out
xchg
outsl
xor
sub
dec
mov
es
pop
pop
hlt
ret
cmp
push
jle
scas
subl
mov
dec
arpl
aad
jmp
jbe
jae
ljmp
daa
pop
push
xor
bound
pop
push
mov
shlb
sbb
les
dec
test
pop
pop
add
in
test
mov
int3
insb
nop
pop
shr
mov
push
sbb
fisttpl
nop
js
or
cmp
imul
out
or
test
cmp
cmp
arpl
dec
xor
dec
mov
push
rcll
lahf
add
sbb
jmp
cmp
scas
nop
arpl
jo
cmc
sub
scas
ret
sub
xchg
in
sar
fcomp
push
jns
adc
sbb
outsb
idivb
mov
mov
mov
jo
xchg
jmp
jbe
or
lahf
sbb
sub
xchg
fdiv
jmp
cmp
mov
jl
push
outsb
lds
mov
pop
leave
clc
pop
adc
subl
push
xlat
and
or
or
out
or
ret
jecxz
mov
mov
push
push
dec
cmp
cmp
cltd
js
jns
test
jge
sti
mov
pop
shr
pop
xor
adc
push
pusha
push
arpl
out
fistpl
xor
jge
outsb
mov
add
inc
imul
outsl
fists
jle
cltd
xor
scas
into
jae
mov
cmp
loope
bound
cmp
mov
rorl
sbb
or
push
inc
cs
bound
iret
lcall
push
sahf
gs
dec
test
or
sbb
mov
fisttpl
lods
mov
sbb
pop
cltd
loope
dec
xchg
adc
push
dec
and
mov
fdivrl
mov
inc
stos
mov
add
lods
add
lret
sbb
out
fwait
in
adcl
repnz
dec
push
pop
pop
fistpll
repz
in
or
mov
mov
dec
repz
shrl
and
jnp
jno
adc
fwait
je
mov
outsb
pop
dec
hlt
fsubs
outsb
xlat
aad
repnz
cmp
addb
mov
push
adc
or
sahf
pop
jle
mov
cmp
sub
pop
sub
xchg
fisubrl
pshufw
and
shrl
adc
adc
mov
pop
xchg
stos
pop
mov
jl
push
pop
stc
out
cmp
pop
lcall
cmp
pop
ret
outsb
int3
ds
loopne
push
insb
sub
push
nop
iret
mov
popf
fcmovnu
aad
fmuls
jl
adc
movl
hlt
mov
repnz
mov
ss
mov
out
test
neg
xchg
sbb
mov
inc
cmc
jne
sti
mov
repz
pop
xchg
clc
loope
push
xchg
aas
cli
push
pop
out
mov
loope
jge
xor
xchg
adc
scas
jp
fwait
pusha
or
pop
xor
xchg
jp
in
pushf
sbb
sub
aaa
jbe
js
out
jmp
and
es
popa
and
leave
adc
in
pop
mov
jge
xchg
ljmp
mov
sbb
mov
arpl
xlat
sbb
into
mov
xor
xor
out
inc
les
lock
popa
sub
sub
or
in
negb
loope
fcmovbe
dec
fstpt
dec
lods
jge
subb
mov
xor
out
nop
aam
adc
mov
pushl
cmc
ss
xchg
icebp
adc
aad
fdivs
cmp
cmpsl
mov
adc
xchg
sub
dec
ja
xor
inc
xchg
and
mov
inc
mov
sub
or
xchg
jb
adc
mov
pop
ret
scas
mov
ds
in
es
pop
jge
test
dec
stos
pop
inc
call
fdivrl
fdivr
mov
rolb
scas
and
enter
xchg
les
and
mov
fs
xor
mov
mulb
clc
push
outsl
sbb
sbb
ja
repz
adc
mov
sar
es
repz
loope
gs
push
pop
and
xchg
cmp
pop
sti
gs
mov
stos
adc
cmp
aas
fcmovnb
in
mov
fcomps
movsb
stos
jo
mov
xor
push
lods
ret
ss
jnp
sub
inc
jae
mov
sbb
ljmp
and
lahf
mov
test
jg
jp
mov
outsl
and
inc
js
cmp
mov
mov
jns
jecxz
adc
pop
out
inc
ss
mov
leave
fistpll
int
gs
add
adc
ds
aaa
mov
jne
mov
push
imul
or
aad
adc
out
lcall
adc
mov
idiv
outsb
mov
push
and
movsl
dec
stos
inc
add
loop
xchg
and
xchg
xchg
fsubs
dec
dec
insb
leave
xor
and
push
lret
stos
mov
loop
bound
inc
mov
je
xor
push
mov
adc
lock
arpl
cwtl
in
fisubrs
lcall
push
pop
pop
or
popa
dec
xchg
xchg
adc
adc
sbb
and
mov
mov
sbbb
jmp
jb
jo
and
cmp
movsb
popa
mov
xchg
sub
and
lods
jbe
in
sub
jae
imul
repz
add
int
push
es
pusha
mov
mov
mov
xchg
pushl
fistpl
push
dec
push
fdivs
pop
push
xchg
stos
in
insb
cli
sub
loopne
push
or
mov
cmc
mov
push
mov
dec
mov
jae
outsl
data16
xor
out
call
popf
mov
popf
mov
aaa
jg
mov
lahf
push
inc
in
pop
cmp
adcb
cmc
ret
fidivrs
jg
test
mov
push
movsb
insl
or
xchg
sbbb
pop
mov
xlat
dec
sbb
loopne
sub
xchg
sti
dec
mov
jecxz
and
xchg
or
stc
fiadds
jl
dec
add
pop
pop
lret
xor
xchg
or
sub
cmp
out
cmp
rorb
xchg
cmp
lock
mov
mov
push
cmp
pushf
bound
das
mov
adc
sbb
or
mov
mov
jo
dec
xchg
enter
add
xchg
sbb
inc
rcr
add
bswap
adc
nop
fst
adc
jmp
xchg
sub
pop
xchg
xchg
lcall
mov
hlt
in
sbb
sbb
pop
subl
shlb
lods
dec
xchg
shlb
das
test
mov
js
icebp
fs
or
in
xor
fildll
das
pusha
xchg
rcll
icebp
push
dec
subl
cs
or
cmc
insl
adc
inc
and
push
xlat
adc
insb
cmp
inc
arpl
inc
pop
mov
aad
cmp
pop
adc
inc
xchg
ret
push
adcl
xchg
lea
dec
leave
test
xchg
addr16
int3
mov
outsl
dec
jns
fucomi
push
mov
or
stc
cmpsb
stos
mov
dec
cmp
inc
dec
or
pop
aam
loope
jnp
xlat
mov
in
or
push
andb
icebp
pop
fdiv
jb
mov
js
daa
mov
popa
xor
push
andl
mov
gs
fwait
xorb
ja
and
pop
adc
lods
pop
push
dec
cmp
xor
push
arpl
in
xorb
push
adc
inc
and
jno
push
nop
add
xchg
xchg
inc
sub
aad
dec
inc
jmp
push
lock
inc
dec
inc
mov
fnstcw
pusha
fildl
sub
or
push
int
xchg
jb
jbe
mov
add
pushf
push
jo
out
add
fcoms
std
adc
stos
lret
in
sahf
cmp
mov
fs
shll
fldt
movsb
cmpsb
jmp
shl
dec
sub
cmc
mov
ficoms
fisubl
cltd
shl
ss
cld
xchg
ljmp
popa
testl
mov
adc
cmp
jl
arpl
aas
push
arpl
iret
fs
jb
jns
jno
pushf
jp
jp
sbbl
mov
sub
push
in
xchg
loopne
insl
pop
les
mov
cmpsb
insl
hlt
and
jecxz
movsb
xchg
mov
fsubs
or
cmp
pop
xlat
push
add
sbb
call
out
rcrb
xor
push
ds
gs
in
jp
fimuls
hlt
sbb
pusha
sahf
mov
jg
jo
mov
call
adcb
sub
loop
pop
mov
mov
clc
out
aam
adcb
or
aam
movsl
mov
sbb
bound
fidivrl
cld
xchg
cmp
or
ret
or
pop
mov
or
xchg
mov
jae
jg
lods
outsl
and
or
push
adc
ret
add
pop
inc
test
mov
das
fistpl
nop
sbb
ds
or
pop
fs
rcl
lock
scas
adc
call
jp
mov
loop
js
fimuls
mov
sub
jmp
mov
cmp
fsubl
in
sub
pushf
sbb
cmp
sbb
ficomps
mov
popa
int
push
mov
clc
cmp
cmp
addr16
add
rol
aad
mov
add
out
xor
mov
pusha
jg
lods
mov
cmp
movsl
push
sub
loopne
and
es
aaa
lock
dec
cmp
push
dec
shll
jne
add
dec
into
dec
ds
fistpl
push
jno
ljmp
mov
clc
sub
iret
mov
adc
push
mov
push
aas
dec
iret
cmc
out
arpl
out
enter
mov
mulb
dec
cmp
andb
mov
lret
and
imul
daa
imull
loopne
je
jge
xchg
hlt
sub
cmp
inc
push
imul
std
dec
fldcw
sbb
push
inc
push
or
push
ja
xchg
mov
in
sub
repz
orl
adc
inc
xchg
inc
ret
and
cmc
in
inc
ss
stc
adc
mov
into
aam
mov
lahf
mov
ret
cmc
inc
scas
test
icebp
int
xor
push
rcl
test
push
push
jnp
roll
cltd
xchg
dec
rcll
jno
repz
scas
sbb
bound
rorb
ja
cmp
pop
lret
fidivs
mov
add
sub
xor
adc
push
mov
push
pop
mov
aaa
fyl2x
cmp
jo
xchg
imul
repnz
popf
movsl
jl
addl
adc
data16
hlt
jno
int
mov
aaa
cmpl
cmc
xor
popa
sbb
jo
pop
mov
mov
mov
xor
ds
or
andb
pop
adc
cwtl
lahf
add
loope
xchg
push
lcall
cmp
xchg
add
pop
xchg
mov
cmp
addr16
mov
fsubrp
mov
push
ret
push
sbb
and
ret
out
xchg
jp
dec
jnp
pop
sti
or
mov
roll
jl
ror
fwait
out
adc
jmp
mov
or
xor
push
out
filds
pusha
cmpb
inc
sub
mov
daa
jg
popf
gs
cmp
divb
xchg
out
incb
aad
xchg
jp
iret
mov
mov
and
push
cmp
enter
rolb
mov
lahf
pop
add
sti
fs
insl
ljmp
sarb
adc
mov
mov
lret
or
pop
mov
inc
sbbb
add
aas
cmpsl
aam
xorb
sahf
loop
xchg
mov
hlt
neg
push
jecxz
scas
adc
adc
jnp
dec
movnti
inc
cli
pop
and
push
ds
popf
xor
std
xor
aas
jecxz
push
outsl
test
subb
lea
jns
fcmovb
pop
pop
lret
mov
jnp
jmp
stos
mov
subb
sub
andl
mov
lods
test
dec
xchg
sbb
out
push
aad
and
push
push
shrl
stc
xchg
add
xchg
gs
mov
aad
mov
in
inc
sub
andl
inc
cmpsl
xlat
xor
dec
mov
lock
and
inc
js
stc
mov
out
aam
jecxz
jne
jg
lods
xchg
xor
insl
fwait
leave
stos
cmpsb
scas
adc
imul
je
xor
inc
mov
mov
faddl
xor
xchg
push
sbb
repz
iret
rcrl
pop
jae
in
jg
das
and
out
mov
sbb
cmp
mov
jge
mov
add
add
cmp
cwtl
mov
dec
lds
push
xchg
pop
int
nopl
cli
jge
in
fistps
push
popa
sbb
aam
sbb
repz
imul
inc
mov
push
cmp
cmp
mov
dec
or
jg
insb
or
push
sub
aas
mov
mov
cli
pop
cltd
fimull
out
cmpsl
fildl
push
mov
pushf
mov
mov
xchg
sahf
sub
aaa
movsb
outsl
xchg
clc
adc
xchg
inc
sub
and
and
mov
shll
mov
sbb
pop
rol
in
out
jbe
add
lea
add
nop
aaa
xchg
xor
push
inc
or
imul
xor
mov
jle
popa
xor
testl
lods
mov
mov
loopne
pop
sub
fcomi
mov
or
mov
dec
and
adc
insb
movsl
inc
gs
out
mov
inc
mov
inc
and
cmp
lahf
iret
hlt
sub
lock
mov
int3
out
add
cli
fdivl
xor
sti
sub
xor
dec
gs
push
jp
out
push
xchg
xchg
jmp
push
sbb
xchg
cld
xor
mov
lret
pop
repz
js
dec
sidtl
pushf
jnp
dec
sub
cmp
and
xchg
shl
xchg
jg
pop
lcall
gs
enter
mov
movsl
hlt
pop
andl
or
pushf
push
pop
mov
mov
xchg
mov
sbb
xor
add
cmpl
mov
mov
sbb
sub
test
inc
out
push
mov
or
mov
popf
and
cmpsb
xchg
dec
jp
xchg
pop
jo
rorl
mov
sbb
fcoms
mov
scas
sar
call
repnz
outsb
or
testb
je
fimuls
mov
adc
repnz
je
or
xchg
pop
cs
movsl
jns
sub
add
adc
sub
cmovae
mov
movsb
mov
or
jmp
mov
jbe
adc
aam
mov
mov
ds
in
fsubrs
test
push
insb
add
mov
mov
mov
daa
mov
sub
aam
or
sbb
shlb
or
es
jle
inc
dec
pop
mov
and
and
mov
xorb
das
daa
fidivl
cli
pop
cmpsb
pushf
add
xor
cwtl
dec
mov
jb
pushf
mov
ret
pop
adc
aaa
dec
xchg
mov
add
in
jae
les
mov
xchg
mov
fisttpl
stc
enter
mov
adc
scas
mov
adc
sub
push
lds
xchg
cmpsl
arpl
jp
xor
mov
jae
inc
shll
inc
std
test
fcoms
bnd
shrb
int
or
cltd
data16
pop
pop
and
inc
or
pop
imul
dec
pushf
sub
adc
mov
mov
push
jecxz
push
out
sub
lret
pop
mov
cli
lds
xlat
cltd
fcmovb
mov
cmc
push
test
pop
dec
mov
js
pop
inc
jne
sub
inc
out
and
xchg
aam
inc
pusha
dec
mov
outsl
pop
pmaxub
scas
out
imull
cs
loope
and
test
cmpsl
test
hlt
ret
int
pop
push
add
push
scas
xchg
or
sbb
sbb
loope
pop
or
xor
fdiv
in
fbstp
ja
dec
adcb
dec
scas
jbe
fnstcw
adc
jo
movsb
xor
mov
pop
pushf
movsl
insb
pop
cmp
int
dec
sub
xadd
cmp
out
mov
adc
cli
rcl
add
ret
lock
push
lds
hlt
jb
mov
js
pushf
push
imul
mov
dec
xor
adc
mov
aad
out
adc
scas
stos
push
rcr
dec
loop
lret
mov
sbbb
lahf
dec
es
pop
sarl
mov
mov
mov
mov
mov
jg
push
sub
test
mov
loope
mov
cmp
mov
stos
fisttpl
sbb
fsqrt
add
adc
inc
lret
shll
fucomip
push
inc
bound
arpl
out
adc
addb
out
mov
sbb
cmp
fsubr
mov
push
dec
pop
leave
enter
arpl
sub
scas
xor
fldenv
xor
mov
and
add
int
cmc
pop
sub
mov
aad
js
loop
fistl
stc
mov
adc
aas
gs
inc
mov
scas
fwait
ror
stos
mov
mov
lcall
mov
rol
or
push
test
int
pop
clc
fsubs
xor
sub
bound
sarb
adc
mov
xor
pusha
loopne
jg
inc
adc
stc
stc
pop
xchg
add
push
push
dec
xlat
ja
mov
insb
push
push
sbb
fwait
jg
inc
je
shlb
xor
add
cmp
lods
mov
cltd
mov
or
add
sbb
sbb
add
push
xchg
mov
mov
or
fs
pop
xchg
dec
outsb
jle
decb
cmc
pop
cltd
pop
stos
push
lea
int
nop
cwtl
test
inc
sub
sub
int3
ret
rclb
sub
mov
sti
fmuls
pop
xchg
sub
add
cmp
ret
xchg
ret
and
stos
add
cltd
stos
adc
daa
ret
jns
rorl
mov
imul
jnp
push
fstpt
test
xor
arpl
imul
mov
xchg
cwtl
popf
movsl
loopne
es
sahf
fnsave
or
jmp
sub
in
popf
sahf
data16
xchg
into
jae
add
ror
jne
mov
iret
mov
fiaddl
scas
add
hlt
adc
add
jbe
aam
mov
pop
xchg
cmp
xchg
out
mov
shll
imul
push
sahf
mov
mov
sahf
xor
xchg
dec
pop
xor
outsb
mov
js
or
leave
ja
cmp
ret
xor
or
xchg
or
iret
aam
scas
ss
xor
xor
pop
jecxz
out
lods
sahf
arpl
faddl
rcr
stc
or
scas
test
and
cmp
add
mov
and
mov
jne
pop
mov
add
popa
gs
sbb
iret
xor
imul
or
dec
aad
add
xchg
iret
popf
xchg
cmp
imul
js
ljmp
roll
cmpsb
dec
cmpsl
out
stos
cmp
outsl
xor
add
stos
bnd
les
hlt
aad
imull
lds
arpl
jp
push
adc
sub
xor
adc
stc
sub
aaa
scas
sbb
repz
divl
or
adc
insl
fidivrs
movsb
adc
out
or
jl
stos
mov
cmpxchg
test
insb
pop
push
push
push
mov
xchg
mov
adc
inc
stos
or
push
cmp
adc
sub
mov
fst
add
lret
cltd
jmp
mov
lcall
data16
in
fs
ficomps
cmp
movsl
insb
jg
aaa
adc
mov
out
xor
dec
pop
jne
and
cmp
adc
das
add
cmp
cmp
nop
jae
in
cltd
leave
dec
inc
dec
jle
data16
popa
loopne
push
jne
sub
jmp
lret
push
fs
mov
jge
sahf
pop
imul
push
pop
push
add
in
fisubrs
mov
xchg
rolb
cmp
lret
mov
sub
in
xor
cli
divl
jbe
popf
out
adc
xchg
dec
repz
mov
dec
insb
mov
mov
push
push
mov
xor
sahf
sub
adc
int3
xchg
shll
xor
dec
iret
cld
push
aad
sti
pop
mov
daa
ret
test
movsl
loopne
enter
movsl
push
pop
and
mov
xor
cmpsl
dec
adc
movsl
cli
cwtl
jae
and
pushf
sbb
dec
clc
leave
stc
add
pop
in
in
enter
roll
xchg
push
or
mov
and
iret
into
pushf
movsb
ds
test
cmp
or
inc
pop
jns
pusha
push
sub
sarb
test
cmp
add
mov
pop
lds
lods
dec
insb
and
mov
mov
cmp
insb
popa
jp
mov
jmp
pop
iret
push
enter
aam
xor
cltd
cltd
out
je
xor
fisubrl
pop
pop
push
daa
pop
mov
ficomps
addr16
fldcw
and
sbb
push
data16
es
scas
addr16
add
pop
mov
dec
xchg
pop
push
lret
xchg
leave
inc
pop
push
ljmp
adc
aad
hlt
stos
jae
xchg
aam
jns
int3
leave
lcall
dec
jecxz
sub
orl
mov
mov
add
int
lock
outsb
and
pop
xchg
sbb
mov
sbb
add
call
rclb
jnp
inc
mov
or
push
pop
xchg
push
sbb
and
or
sub
add
ss
jmp
mov
sbb
mov
xor
es
and
imul
out
xor
clc
mov
les
dec
addr16
int
sbb
xchg
xchg
int3
aaa
cli
inc
out
stos
mov
xchg
inc
inc
aaa
add
loopne
and
add
into
pushf
aad
sub
adc
into
sub
mov
rorl
das
shl
xor
in
dec
andl
outsb
je
adc
cmc
or
test
aaa
ljmp
push
popa
lret
hlt
stos
adc
rdpmc
mov
push
int
mov
je
fdiv
push
pop
xchg
nop
add
jp
mov
int3
pusha
cwtl
imul
pop
loope
orb
cmp
in
dec
jne
add
int
jg
insl
into
push
aam
adc
sub
mov
xorl
out
int
or
mov
daa
imul
bound
cmp
sbb
push
cmp
ja
stos
in
jae
add
ret
sbb
or
mov
testl
push
jp
adc
jl
inc
push
arpl
adc
mov
outsl
cmp
jbe
cmp
dec
rcrl
jbe
and
add
jne
lcall
jmp
out
loopne
xor
xlat
enter
subb
stc
sbb
adc
pop
aas
mov
mov
xchg
jl
mov
pop
rcll
sbb
sysenter
insb
psubd
ja
ja
in
sub
aas
cmp
sbb
adc
test
icebp
push
lcall
jo
jne
stos
inc
push
out
sahf
enter
dec
xchg
mov
aad
les
into
pop
cmp
inc
outsl
xchg
adcl
mov
rsm
jns
movaps
imull
rclb
jne,pt
leave
dec
jmp
jno
sub
sets
pushf
outsl
or
and
pop
dec
insb
ret
divl
int
in
lahf
fdivl
rclb
xor
jbe
dec
aad
sub
lods
rcll
sub
ret
push
cmpsl
gs
pop
mov
add
add
mov
pop
pusha
loopne
aaa
push
push
mov
cmp
lret
aas
sahf
stos
int3
cmp
dec
and
mov
xor
push
out
test
and
stc
orb
sbb
sub
test
xor
out
mov
cmpsl
flds
imul
or
out
mov
cs
xchg
enter
push
jl
aaa
fnstcw
insl
loop
sub
push
jo
sbb
cmc
cs
cwtl
mov
fs
push
test
dec
mov
test
movsl
push
es
inc
pop
pop
cmpsl
cwtl
sbb
inc
stos
add
jmp
pop
loope
in
mov
test
cmp
in
mov
movsl
mov
push
incb
popf
es
sub
adc
or
xchg
pop
iret
dec
test
in
cld
mov
loop
sbb
icebp
ljmp
jmp
aaa
ja
xor
gs
cmp
stos
imul
xchg
xchg
mov
sub
add
pusha
popa
jb
ret
jbe
fcoml
pop
push
inc
push
push
mov
test
xor
lret
bndstx
push
shll
pop
fdivs
loopne
jl
fucomi
mov
push
jbe
mov
pop
lds
or
and
inc
shll
inc
mov
mov
sbb
xchg
push
mov
lock
and
push
dec
mov
ret
addr16
xchg
jecxz
stc
daa
mov
test
addr16
in
ljmp
ds
data16
jo
adc
push
or
push
adc
inc
test
or
dec
mov
rclb
sbb
or
mov
repnz
push
dec
xchg
test
pop
add
cmpsb
or
popf
mov
fcompl
add
mov
xlat
sbb
loop
mov
into
arpl
or
bound
mov
sub
fimuls
ja
sbb
push
and
cmpsb
and
mov
cmp
in
loop
inc
push
fcomps
adc
jo
pusha
fstl
in
movsb
mov
filds
push
pop
pop
addr16
push
in
jo
sub
and
sbb
xchg
or
pop
add
xor
faddp
ljmp
rcrl
sub
mov
test
leave
aam
push
ret
addr16
das
push
sub
mov
cmp
pop
daa
inc
out
cmc
mov
das
insb
decb
inc
lock
sub
or
xlat
rcr
cli
scas
xor
push
mov
sub
mov
mov
mov
xlat
pop
xor
adc
cmpsl
call
cwtl
cltd
stos
push
lods
std
movsl
mov
clc
lea
sub
push
test
jne
inc
or
inc
inc
fildl
jne
hlt
adc
loope
push
hlt
in
xchg
mov
cmpsl
loope
add
test
mov
icebp
daa
push
sub
and
ja
jno
pop
sub
xchg
adc
mov
mov
jbe
adc
push
and
sbb
inc
aam
push
out
subb
adc
call
fnstcw
scas
lock
sub
jbe
sbb
shlb
ss
shll
cli
xor
popf
adc
pop
arpl
inc
imul
push
cmp
inc
jp
dec
push
push
adc
in
jl
jno
xor
sub
mov
int
inc
andl
int
inc
jle
and
add
xor
scas
mov
dec
add
daa
adc
scas
pushf
in
cwtl
xor
mov
mov
mov
push
mul
rcll
or
shlb
pop
inc
aad
lret
jbe
das
pop
fadds
cmpsb
test
rorl
xchg
push
imul
adc
or
sbb
jo
xchg
cmpsb
adc
movsb
mov
push
xchg
pop
aam
jnp
adc
and
ds
gs
nop
dec
push
out
and
int
icebp
lcall
fsubrs
std
pop
mov
and
pop
cltd
addb
add
stos
or
in
das
mov
or
dec
cltd
xchg
mov
test
loopne
push
xchg
jns
cmp
jl
jne
push
cmp
pop
sub
rcrb
jne
inc
mov
adc
js
minps
es
or
pop
adc
arpl
icebp
std
movsl
pop
cmp
movsb
rcrl
jb
scas
dec
fsubl
xchg
mov
inc
test
xchg
and
inc
add
dec
fwait
iret
jp
dec
insl
popf
popa
and
jg
aas
mov
mov
lds
jle
sbb
fdivs
test
out
inc
adc
inc
pop
adc
das
idiv
xchg
cmp
jge
jns
movsb
inc
in
lds
xchg
fwait
xor
jne
hlt
repz
shll
jo
xor
xchg
mov
jae
imul
cs
inc
cmp
js
jmp
dec
sub
or
cmp
repnz
sbb
aad
test
mov
xchg
sbb
out
test
arpl
int
add
mov
sbb
std
pop
test
loop
jle
das
xchg
fisubl
aad
inc
mov
pop
pop
jbe
and
fs
shrl
loope
push
cmp
jecxz
out
dec
dec
xchg
fsts
cmpsl
repnz
cwtl
or
fsubrs
test
push
and
lret
fidivs
lods
sub
inc
cltd
mov
mov
add
mov
inc
jae
dec
or
popf
cmp
fidivs
xchg
push
fldenv
fwait
leave
sbb
inc
andl
testb
in
inc
lret
mov
das
xchg
call
mov
sub
and
into
cmp
lea
sub
mov
xor
mov
and
js
cwtl
fnstsw
lret
add
xor
jbe
mov
addr16
cmpl
cmp
fs
test
sub
in
testl
add
mov
pop
inc
xchg
pop
imul
xchg
fstps
ja
dec
stc
inc
sbb
cmc
or
aaa
mov
out
int
mov
out
out
mov
test
std
jp
xchg
stos
add
mov
push
lds
arpl
leave
aam
pop
or
jb
pop
mov
fs
mov
mov
iret
lcall
shlb
inc
fdivrl
out
mov
hlt
xchg
fdivl
push
xchg
sbb
push
fnsave
cmp
xchg
loopne
pop
das
fiaddl
xlat
icebp
fimuls
pusha
cmpsb
push
adc
xchg
das
jecxz
out
fimull
inc
sub
mov
and
stos
jnp
pop
roll
xchg
and
sbb
pop
and
fs
mov
pushf
pop
ret
stos
inc
mov
call
test
and
ljmp
jle
out
push
push
stc
movsl
cwtl
xchg
sub
push
adc
out
mov
jbe
cmp
icebp
xchg
xchg
std
dec
sub
jle
ljmp
mov
jmp
jb
mov
insl
cli
sbb
mov
dec
mov
or
out
loope
pop
push
orb
in
push
lods
fwait
dec
movsb
rclb
push
pop
idiv
imul
subb
scas
mov
ror
cmp
setb
fld
stos
data16
push
aaa
sub
mov
jne
fwait
and
add
jmp
xchg
mov
das
sysenter
pop
out
out
ficomps
push
mov
ss
inc
sub
adc
add
xchg
mov
rcrl
sbb
add
sub
sbb
mov
sbb
jmp
loop
and
mov
shll
bound
mov
sub
inc
inc
dec
mov
imul
fcmovnb
lretw
sub
fidivs
lcall
fists
push
pusha
fistpl
xchg
es
shrl
xchg
jbe
mov
sub
push
int3
inc
dec
cmp
jl
cmpsl
je
xchg
scas
sbb
adc
fbld
insb
rcr
out
fildll
cmp
xchg
mov
adc
push
jp
enter
or
ljmp
aad
shlb
or
rcrw
clc
addb
cmp
sub
xor
stos
scas
gs
enter
into
push
scas
or
mov
add
popf
fsubrl
or
imul
pop
xchg
xchg
pushf
cmp
icebp
push
jecxz
lods
xor
mov
sbb
cltd
add
sub
aam
into
push
xor
xchg
add
and
lods
xchg
mov
mov
in
pop
addr16
pushf
mov
sub
das
insb
vpcmov
mov
in
add
jo
call
xchg
or
pop
aad
mov
shrb
or
dec
jmp
or
in
std
mov
xor
xor
push
pop
rcr
jno
adc
fwait
lock
ret
jae
and
xchg
fdivl
push
fdivl
sub
mov
xor
mov
dec
mov
imul
push
les
notl
fmul
jg
ss
pushf
mov
and
pop
stos
cmp
out
movsb
adc
mov
push
jg
ds
mov
xchg
pop
insl
fldenv
mov
cmp
xor
dec
inc
sbb
cmp
push
lock
loopne
punpckhbw
mov
hlt
sbb
inc
js
lods
cmpsb
cmp
adc
xchg
cld
add
fisttps
iret
or
push
into
inc
xchg
pop
jg
addr16
mov
idivb
cli
insb
push
popa
mov
in
repz
inc
cli
push
and
cmpsb
jo
loop
inc
adc
sti
lret
decb
pop
pop
test
inc
cmp
mov
cmp
jo
dec
add
test
idiv
fwait
and
mov
outsl
mov
and
cltd
jo
imul
inc
into
and
adc
clc
cmp
sbb
jno
stc
mov
sbb
aas
adc
rcll
sbb
gs
es
bound
loopne
lds
clc
cmpb
pop
je
cmpl
and
inc
rorl
aas
xor
inc
cmp
mov
in
jo
stc
pusha
shrl
popf
andb
lahf
popf
jo
push
lds
stos
push
xchg
fadds
cwtl
sbb
test
xor
movsl
push
pushl
es
cmp
test
ljmp
loopne
mov
jno
sub
push
cmpsb
bound
and
mov
pushf
pusha
cmp
mov
xchg
cmpsb
icebp
mov
xlat
jg
jg
cmpsb
and
sub
push
sbbb
sbb
enter
and
pop
xchg
insl
ljmp
daa
sbb
adc
push
fists
leave
jle
add
xor
rolb
mov
xor
enter
mov
mov
cmp
shrb
insl
outsl
dec
xor
xchg
inc
fildll
sub
adc
lea
lods
pop
and
mov
aad
pusha
mov
dec
mov
pop
pop
les
imul
jmp
bound
adc
xlat
xchg
cmp
dec
add
inc
movsl
sbb
jns
mov
and
xor
les
sahf
jp
scas
dec
inc
dec
xchg
xor
dec
push
aam
aam
ja
pop
lret
cmp
pop
es
movsb
mov
ja
jg
fcoms
lea
push
cltd
fdivl
and
mov
adc
out
je
jnp
mov
call
pop
mov
pop
push
into
in
int3
cmpsb
pop
in
push
add
cmp
jns
sahf
pop
pop
dec
inc
dec
sbb
cld
shl
stos
movsb
and
pop
pop
insb
imul
cmpsl
jecxz
sub
pushf
scas
fistl
rcr
cmp
xlat
push
stos
out
dec
inc
xchg
arpl
iret
mov
mov
movsl
repz
cwtl
jne
dec
xorl
and
dec
push
xchg
mov
push
les
into
pop
sbb
leave
scas
repz
xor
mov
dec
pop
les
mov
cmp
mov
mov
stc
cld
ret
ss
and
adc
addr16
jecxz
mov
in
pop
cmp
dec
subb
or
jo
mov
jb
jp
scas
mov
sbb
jge
imul
pop
inc
cmp
or
add
ja
rclb
notb
icebp
sub
push
or
lock
cmp
je
and
ds
mov
out
sub
fwait
jmp
out
push
adc
lods
cltd
lret
mov
inc
cmp
push
dec
aas
push
adcl
dec
in
lahf
mov
jbe
inc
xor
add
cmp
imul
clc
sbb
dec
clc
mov
popf
push
push
adc
outsb
nop
adc
in
adc
jl
dec
lahf
xchg
ljmp
pop
jbe
movsb
enter
outsb
inc
jae
les
fs
sbb
dec
daa
adc
and
mov
mov
jmp
loopne
pushf
inc
lds
ficoms
xlat
adc
jge
mov
cwtl
fiadds
mov
inc
repnz
out
movsl
push
pusha
and
pop
out
or
stos
mov
fildl
mov
stos
push
inc
sahf
dec
repz
aam
or
push
dec
jmp
xchg
mov
int3
xchg
daa
xor
and
add
rcrl
adc
sarb
dec
ret
cs
idivl
adc
mov
pop
arpl
push
lcall
jb
inc
xchg
std
ljmp
repnz
push
xchg
xlat
fdivr
idivb
sub
push
inc
clc
dec
ljmp
sub
inc
inc
push
xchg
sub
ljmp
fs
and
push
xor
xor
push
daa
mov
in
lds
scas
mov
mov
sbb
popa
mov
pushl
sbb
push
test
or
jno
xor
sbb
test
pop
shrl
pop
out
ret
cmp
pop
push
ss
mov
mov
mov
pop
sub
repnz
push
jecxz
mov
loopne
mov
ja
xchg
pop
subb
pusha
imul
loope
dec
mov
jno
cmp
outsb
pop
lea
mov
pop
adc
xor
aas
dec
and
dec
negb
fcmove
inc
insb
add
test
adc
mov
lret
mov
jb
mov
xchg
lods
popa
inc
mov
and
neg
pop
clc
addr16
cwtl
push
idivl
stc
mov
xor
dec
movsb
xor
fcmovnb
sub
lret
cld
dec
mov
out
xor
xchg
cli
movzbl
cs
loope
rcll
outsb
mov
xor
add
lret
loope
push
or
cwtl
hlt
aaa
xchg
push
pop
mov
es
push
rcll
lods
xchg
aas
lods
aad
inc
xor
or
push
mov
or
mov
aad
pop
aam
jae
je
xchg
repz
pushf
or
push
fists
xlat
adc
pop
pop
call
clc
pushf
xorl
jecxz
mov
and
cmpsb
inc
sbb
arpl
add
adc
push
imul
sub
les
sub
sti
add
and
and
fildl
test
lret
rolb
xor
lsl
rcl
xchg
dec
sub
sub
hlt
jnp
push
push
insl
jns
xchg
pop
jb
mov
in
test
lcall
mov
pop
dec
ja
cmp
jb
orb
ljmp
or
inc
fwait
pop
mov
je
lock
ljmp
push
and
test
popa
jb
loop
stos
jp
mov
cwtl
rcrb
add
in
xchg
and
sbb
dec
add
cmp
call
and
jno
fs
jmp
fdiv
cmp
jg
stos
stos
aaa
div
mov
dec
xchg
xor
cltd
mov
mov
clc
xchg
cmp
pusha
hlt
aaa
inc
xchg
mov
mov
mov
mov
lcall
jns
faddp
push
aaa
adc
fistps
pop
movsl
shlb
shrl
inc
and
xor
push
add
js
aad
pop
and
xor
imul
das
and
adc
roll
inc
jnp
test
rolb
iret
mov
cmp
cld
insl
leave
adc
daa
jbe
inc
mov
adc
sarl
cs
aaa
iret
jge
cwtl
scas
loop
test
enter
mov
sahf
das
sub
incl
pop
dec
popf
or
jle
cs
test
imul
js
jne
aaa
mov
cmp
or
dec
and
xchg
minps
or
mov
sub
enter
cld
mov
add
adc
repnz
add
insl
ret
jmp
scas
or
stos
repz
and
push
sub
ljmp
gs
adcl
leave
xor
rcr
fs
je
sti
fcmovnu
cmpsl
inc
rolb
and
jmp
mov
inc
mov
xchg
push
fwait
in
pop
or
sbb
mov
pop
jne
addr16
adc
cltd
jo
stos
jae
cmp
jl
ss
ds
sub
add
or
inc
jge
lds
mov
icebp
push
xor
push
aad
loopnew
loop
out
cmp
outsb
fdivrs
out
lea
mov
sarb
xchg
out
pop
mov
rcll
add
push
testl
idiv
adc
pop
test
dec
inc
stos
jl
sub
cmp
mov
pop
jae
clc
call
in
xchg
mov
adc
aaa
repz
jle
daa
fcomps
adc
adc
cmp
cmpsl
sbb
scas
js
pushf
enter
mov
fidivl
jnp
pop
cmpsl
cwtl
cld
ror
addr16
mov
je
nop
lods
enter
and
xor
jg
mov
leave
das
sbb
stc
cmc
adc
xchg
aas
decl
pop
lcall
fs
mov
jmp
pop
add
mov
dec
mov
movsl
push
rorl
lret
fildll
or
push
push
mov
xor
cmp
mov
xlat
and
insb
in
test
or
pop
addr16
lea
fildll
pop
pushf
fildll
or
push
fs
aaa
or
cmp
stos
inc
fs
cs
int3
movsl
lock
ss
movsb
add
jge
loope
js
dec
adc
ds
push
pusha
dec
sub
sahf
or
insl
data16
cmpsb
pop
cld
das
roll
xor
stc
stos
repnz
cld
add
dec
hlt
lret
and
mov
shl
mov
xor
imul
lret
ss
imul
or
adc
in
sub
fldt
adc
inc
mov
xor
inc
outsb
or
pop
jmp
dec
cmp
arpl
cli
sahf
mov
je
cmp
das
aaa
or
test
add
bswap
jmp
mov
sub
jmp
insb
mov
xchg
stos
sub
pop
jmp
in
leave
adc
sahf
jns
add
jle
mov
xchg
ljmp
mov
push
in
jno
pusha
sahf
jecxz
outsl
xor
and
xchg
jns
xor
xor
fs
jb
jl
pop
ret
aaa
adc
inc
inc
mov
adc
dec
push
jo
jmp
add
mov
ss
sahf
mov
push
jne
jmp
pushf
fwait
mov
stc
mov
add
inc
push
in
push
sbb
mov
push
fadds
add
inc
rclb
sub
cli
in
loope
dec
xor
inc
xorl
lea
xchg
jl
ret
shlb
aaa
negb
jl
xchg
or
xor
enter
dec
xchg
movsb
sbb
shll
loopne
sbb
mov
test
add
or
je,pn
add
out
xchg
xor
push
sbb
jns
jp
adc
pop
dec
pop
and
fmuls
loope
imul
mov
idivb
subb
out
outsl
push
pushf
insl
loopne
mov
arpl
mov
add
xchg
cmc
jno
sub
idivb
inc
outsl
xor
adc
mov
dec
mov
sarl
xchg
xor
inc
enter
std
pop
je
push
push
loop
jl
and
ja
shl
fldenv
and
pop
jl
enter
mov
stc
xor
lods
push
outsl
stos
jg
clc
push
cmc
fwait
mov
mov
xchg
jo
lret
call
shll
cmp
outsl
cmpsl
sub
inc
add
arpl
clc
push
rcr
sar
sub
xchg
or
adc
push
fwait
repz
in
xchg
adc
and
pop
or
or
divb
movsb
jnp
or
inc
das
cmp
mov
cltd
rcl
push
push
insl
incl
add
ja
push
jno
hlt
shrl
leave
pop
je
adc
dec
leave
popa
mov
mov
stc
loopne
mov
repnz
or
ljmp
dec
xor
loop
and
mov
pop
mov
adc
lock
or
xchg
jle
scas
xchg
arpl
sub
push
bound
mov
xchg
lock
push
jmp
adc
js
js
jmp
scas
outsl
out
xchg
jae
add
pop
shrb
mov
add
push
es
cmp
pop
popa
daa
scas
lea
insl
push
addr16
sti
inc
mov
mov
shrb
inc
loopne
sub
sub
in
shrb
mov
add
push
es
cmp
or
mov
jnp
fs
jl
sahf
lds
fwait
push
rcll
push
mov
cmp
clc
push
in
movsl
in
push
rorb
cmpl
in
loopne
cmp
adcl
iret
xor
cld
cmp
aam
xchg
pusha
repnz
sbb
add
dec
xchg
inc
fistl
push
in
mov
shll
cmp
xchg
pop
xchg
cmp
jnp
push
aad
lods
in
and
adc
push
mov
lcall
aas
mov
movsb
inc
lea
imul
outsb
aad
shlb
enter
in
outsb
cltd
or
js
ljmp
inc
cmp
add
jnp
repz
scas
hlt
fidivl
shll
mov
rcrl
bound
inc
scas
rorb
dec
mov
mov
mov
add
jecxz
push
cmp
add
fisubrs
xchg
loop
scas
test
shlb
fisttpl
imul
xorb
cwtl
cmp
add
in
jl
hlt
adc
mov
sub
add
xor
rol
mov
test
inc
cmc
jl
dec
jle
and
adcl
mov
adc
xchg
cli
push
clc
or
mov
nop
xchg
sbb
ljmp
push
inc
arpl
inc
mov
xchg
push
loopne
insb
mov
test
push
data16
movsb
add
pop
int
pop
mov
xor
cmpsl
dec
mov
inc
push
ret
push
adc
mov
test
jbe
aad
cmp
push
inc
mov
aaa
mov
xor
xor
fsubp
jge
jg
movsb
movsl
loop
ss
dec
sub
mov
outsb
sbb
pop
mov
mov
push
aaa
aad
ljmp
repnz
mov
mov
push
push
nop
lahf
ficoml
jae
lret
inc
aas
xchg
mov
gs
loope
mov
sbb
imul
mov
dec
pushf
pushf
push
and
push
and
or
jb
sbbb
sbbl
outsb
push
jp
jno
xor
popf
ss
stos
add
and
dec
out
jbe
push
pop
lock
jg
clc
outsb
lock
or
push
lods
imulb
fmuls
call
movsb
adc
and
xlat
jns
sbb
push
pop
aaa
aas
cmp
push
dec
leave
out
mov
sub
inc
add
push
aam
push
andl
push
fmulp
mov
mov
adc
in
jl
addr16
xchg
mov
push
lea
popa
cmp
and
xor
push
adc
ja
sub
mov
pop
lock
in
jmp
ret
add
cmp
addr16
fldenv
out
mov
xlat
xchg
xchg
pushf
subl
loop
mov
adc
loopne
enter
ds
fmull
mov
cmp
les
dec
cmp
dec
or
pop
sbb
stc
sbb
repz
adc
int
mov
push
mov
jnp
adc
xor
enter
mov
push
dec
cld
fwait
push
divl
stos
jbe
les
mov
test
scas
cmp
push
xor
js
mov
jp
inc
and
inc
sbb
sarb
adc
cmc
std
mov
xchg
adc
movsb
addr16
pop
mov
bound
ret
fisttpl
popf
imul
lods
jge
fwait
and
std
pop
hlt
xor
subb
daa
pop
rcrb
lcall
mov
jae
iret
testl
sub
pop
je
mov
xor
or
ret
sti
mov
inc
adc
adc
lds
push
xor
pop
sar
pop
cmpsb
loope
or
sub
pop
and
pusha
loop
in
pop
insl
push
xchg
lea
mov
xchg
sti
add
inc
stc
fwait
stos
mov
mov
inc
icebp
outsb
rclb
jnp
pushf
cld
fs
fcmovb
mov
and
push
mov
add
gs
add
mov
add
xchg
push
das
call
mov
adc
push
out
or
xor
pop
xchg
mov
cmp
fldl
orl
rcrb
inc
pop
mov
imul
sti
add
in
dec
test
mov
mov
pop
xor
sbb
ret
xchg
inc
xor
mov
jge
dec
adc
adc
arpl
cwtl
mov
ret
fwait
jne
out
inc
fld
out
stos
iret
dec
push
inc
pop
jle
fadds
scas
mov
arpl
test
pop
adcb
ret
fwait
int3
mov
adc
into
xor
rorb
daa
outsl
imull
sbb
sahf
pop
inc
xlat
imul
sti
jge
cmp
dec
fidivrs
adc
fimuls
rorl
sbbb
lods
faddp
xchg
hlt
mov
push
xchg
dec
mov
outsb
mov
or
decb
pop
rcrb
mulb
mov
pop
aaa
push
fnstsw
xor
sub
arpl
or
into
gs
pop
push
orb
dec
into
cli
sub
sbb
mov
xlat
mov
adc
xorb
xor
push
pop
rcr
cli
mov
imul
xchg
lock
or
jns
cmc
mov
loopne
fisttps
mov
test
and
and
pushf
or
aam
mov
lods
inc
add
adc
lock
pop
loopne
les
sub
dec
ss
lret
mov
add
xchg
repz
in
jo
std
or
or
pop
int
pop
inc
or
inc
aas
fistpl
push
dec
mov
jbe
xor
mov
dec
dec
and
cmp
inc
cmp
cmp
ss
mov
insl
xchg
jne
test
add
dec
xchg
xor
push
push
push
jne
fimull
push
fisubl
outsl
and
cmp
in
pop
in
insl
mov
mov
dec
or
mov
adc
hlt
xchg
ds
dec
test
adc
pop
incl
fsubrs
mov
jp
sahf
adc
adc
ss
fisubrs
stos
loop
je
aaa
mov
xchg
push
xchg
pop
sti
sbb
xchg
and
cmp
ror
mov
gs
or
sub
das
inc
add
mov
inc
pop
mov
std
lock
and
scas
daa
repnz
push
loop
mov
push
jge
negb
idiv
idivb
push
icebp
pop
mov
jg
out
insb
lea
add
mov
dec
repnz
or
mov
data16
out
ljmp
ss
sbb
in
mov
cmp
sbb
stos
add
jo
lea
insl
outsb
and
jbe
add
mov
jecxz
jb
insl
in
xor
pmaxsw
in
sti
testb
sub
push
jecxz
call
lods
subl
gs
popa
test
push
push
ljmp
jl
xor
push
pop
rcr
cs
fildll
lds
inc
sbb
jno
lods
scas
xchg
jae
repz
mov
sub
xor
dec
sub
adc
int3
aas
push
mov
popf
sub
sub
sub
add
lret
fsts
adc
addr16
ljmp
setl
negl
inc
and
mov
popa
sarb
xor
push
pop
rcr
cmpl
ror
jbe
and
scas
call
push
mov
movsl
xor
or
push
iret
rcl
arpl
push
lock
mov
mov
mov
push
or
out
jnp
int
insl
jae
or
sub
fnstcw
std
pop
cmpsb
adc
lcall
enter
sbb
jb
mov
mov
ss
ficomps
loope
outsb
xchg
or
aaa
scas
xchg
push
push
addb
cmp
inc
fcomi
icebp
psrad
sub
xchg
fdivrs
mov
lds
mov
or
insl
or
or
mov
lret
cmp
cs
push
mov
xor
xchg
int3
call
imul
outsb
pop
sbb
pop
shlb
stc
std
insl
dec
add
sbb
mov
mov
das
addr16
cmpsl
lods
ret
pushf
sarb
pop
fs
inc
into
cmpsl
repnz
pushf
incb
ret
shll
in
out
cwtl
ss
test
adc
and
inc
mov
pop
lahf
cmp
cmp
adcb
xor
pop
lock
in
jecxz
push
lods
add
scas
imull
imul
jg
sbb
mov
adc
adc
cwtl
dec
bound
jmp
push
xchg
push
sub
jo
fwait
or
std
jl
pop
scas
and
xchg
aas
idivl
movsb
sbb
mov
shrb
aad
mov
jmp
jmp
sbb
dec
ljmp
mov
push
dec
jo
jae
mov
std
and
out
xchg
data16
test
xchg
clc
mov
out
push
xchg
shrl
testl
mov
sub
push
popa
call
sub
adc
popa
add
inc
divl
out
movsl
jge
in
lock
insb
sbbb
test
push
sbb
push
push
sub
push
dec
sbb
outsl
sti
dec
jns
adc
jmp
jae
cli
xchg
movnti
xor
fisttps
push
jp
sahf
test
cmp
fisubs
cmpsb
mov
dec
sbb
scas
aas
repz
mov
mov
pusha
push
or
pop
push
in
aad
insb
test
mov
leave
sbb
fisubrs
aad
bound
and
xchg
clc
mov
ljmp
sbb
push
out
dec
loop
repz
sub
pushf
mov
gs
mov
sti
sbb
and
add
aad
adc
push
push
add
sbb
nop
insl
push
sbb
cld
push
data16
enter
cmc
sub
push
cmp
in
xchg
dec
dec
addb
out
int3
fs
mov
push
jns
jle
iret
mov
mov
dec
mov
push
call
xor
iret
mov
arpl
pop
inc
fdiv
enter
fldl
fistl
add
sub
inc
stos
adc
sub
jecxz
adc
call
pop
test
ss
cwtl
test
push
inc
pop
bound
sub
shlb
cmp
insb
pop
imulb
jl
int
push
insl
push
insl
cs
jecxz
or
out
ja
out
rclb
addr16
and
adc
in
pop
add
arpl
cmpb
add
sbb
xchg
lds
fidivrs
mov
cmp
test
mov
xchg
ud0
xorb
lods
add
xor
aas
add
pop
cld
sub
mov
clc
jmp
pop
dec
rcrl
sub
icebp
or
mov
push
push
dec
nop
push
inc
out
vandps
aas
popa
mov
pop
mov
hlt
fwait
mov
imulb
add
das
outsl
dec
push
fidivs
dec
scas
fisubl
out
scas
sbb
insb
test
iret
test
pop
repz
inc
add
mov
dec
mov
test
lds
add
lods
lcall
mov
cltd
mov
aam
and
xor
or
ja
xor
in
out
dec
add
and
sub
pop
push
sub
xchg
stos
xor
cmp
sahf
fmul
sahf
lods
jp
dec
sbb
sarl
shl
cs
ja
cmp
mov
mov
sbb
push
xchg
mov
mov
ds
pop
icebp
in
mov
call
jnp
popa
pop
pop
icebp
xlat
out
scas
mov
mov
fidivrs
icebp
push
xchg
jmp
mov
pop
jbe
xor
mov
insl
leave
fistps
imul
inc
loop
mov
nop
xchg
sub
mov
mov
mov
jnp
pop
ud2
loop
insl
shrl
lcall
inc
dec
push
mov
repnz
fdivr
push
insb
lahf
popf
inc
fdivrl
xchg
iret
sub
pushf
sbb
sbb
add
out
jb
and
mov
pushf
into
or
and
out
xchg
roll
dec
inc
pop
test
sub
mov
jo
test
cmp
xchg
lahf
inc
jl
fstl
add
lahf
cmp
inc
fnstsw
adc
sbb
sub
adc
jb
jb
cwtl
iret
in
lret
pop
push
jo
dec
jb
xor
orl
aaa
movsb
add
dec
mov
and
mov
cmpsb
add
push
xlat
jo
daa
dec
sbb
test
lcall
mov
sbb
sbbb
add
pop
sar
cmp
push
jp
or
popf
shll
sahf
xor
and
loope
jle
iret
int
jae
xchg
scas
add
mov
out
cs
shlb
inc
pop
popa
lock
insl
pop
jns
adcb
add
scas
sbb
xor
out
lock
inc
loopne
mov
daa
cli
call
mov
push
and
xchg
dec
nop
fdivrl
pusha
adc
mov
shlb
push
xor
int3
adc
bnd
add
fdivl
cmp
add
int
aaa
jb
sar
cmp
neg
mov
dec
pop
loopne
add
push
push
add
call
pop
sbb
push
iret
sub
test
cmp
std
in
mov
mov
dec
pop
mov
xchg
dec
int3
xchg
push
inc
lret
nop
inc
cmp
xchg
xchg
push
ret
stos
jae
pop
insb
mov
mov
mov
pop
push
jo
test
jmp
in
icebp
daa
ret
jmp
mov
and
lds
mov
and
icebp
mov
sbb
test
pop
lahf
and
push
outsb
push
add
mov
icebp
push
sarl
les
std
clc
add
imul
add
add
or
sbb
aaa
arpl
aas
mov
movsb
and
out
sbb
sbb
test
fiaddl
lds
push
lock
jae
stc
or
dec
fsts
jge
nop
fs
xor
mov
push
movsl
mov
aaa
outsb
test
pop
cld
xchg
cs
dec
lods
and
icebp
cs
test
fs
jg
fdivrs
jl
dec
sub
lahf
es
pop
out
inc
adc
cs
fadd
or
mov
or
xchg
subl
iret
lock
lcall
rorb
cs
test
cmp
jno
sbb
lcall
ds
xchg
nop
mov
inc
movsb
dec
data16
mov
lods
dec
push
jle
fucomi
inc
adc
and
xor
cmc
rorl
cmp
or
sbb
mov
in
cmpsb
inc
mov
adc
mov
fsubrl
lods
inc
mov
pop
test
scas
dec
cmp
and
stos
arpl
dec
mov
sub
mov
sbbb
nop
into
aas
ja
bound
sub
pop
inc
mov
mull
repnz
jb
shll
mov
mov
add
sbb
push
mov
xor
mov
and
xchg
orl
repz
inc
ss
sbb
sbbl
and
inc
addb
mov
iret
or
sti
mov
push
fistpll
cmp
movsl
pushf
add
jae
in
push
or
sbb
jge
gs
nop
clc
das
addr16
out
and
and
xchg
push
test
push
popf
cmp
aam
mov
out
int3
loop
fcmovnb
mov
pop
mov
in
dec
sysenter
in
mov
out
repnz
dec
push
mov
or
int3
pushf
mov
xchg
loop
xchg
fmull
out
stos
cltd
and
push
fisubl
xor
pop
push
mov
movsl
insl
neg
sbb
adc
fsubrl
mov
test
sbb
pusha
push
jmp
leave
icebp
mov
les
and
xor
test
dec
adc
pop
fld
addl
shlb
andl
fiadds
lret
pusha
push
repnz
out
mov
in
sub
repz
xchg
push
and
fdivr
push
rep
inc
ljmp
aad
mov
iret
pop
mov
adc
sti
cld
icebp
dec
inc
dec
in
es
inc
lods
stos
xor
in
adc
pop
mov
in
notb
repnz
out
mov
dec
pop
sahf
cmc
popf
push
ljmp
aad
popa
cld
mov
ljmp
mov
or
push
adc
push
mov
inc
xor
ss
in
sub
jns
lret
jmp
mov
xor
popf
lods
add
lahf
sbb
xchg
stc
test
push
xchg
jge
in
inc
sub
aaa
cmpsb
inc
or
pop
std
jle
aas
cs
mov
iret
pop
adc
fs
mov
xor
out
andl
jnp
mov
wrmsr
and
add
adc
insl
sub
repnz
aaa
jae
push
test
sub
shlb
sbb
sbb
add
xchg
outsl
fistps
pop
cmp
jno
or
ficomps
cmc
popa
sbb
mov
mov
cmp
xor
cmpsl
pop
dec
inc
cmp
lcall
int3
jle
xchg
fwait
adc
shll
add
aad
inc
xorl
xor
les
adc
sub
mov
daa
movsb
dec
ret
stos
js
cmp
psrad
nop
jp
gs
xchg
adc
xor
mov
or
lret
loopne
push
jne
sbb
out
and
dec
push
mov
jmp
cli
push
lds
aam
inc
mov
adc
pop
inc
jmp
inc
cltd
pop
imul
iret
mov
fmuls
adc
cmp
cmp
imul
inc
push
pop
mov
mov
or
xor
loopne
mov
mov
loope
push
push
divl
pop
jbe
and
xor
push
jmp
insl
jb
fiaddl
lret
mov
test
inc
daa
test
sbb
mull
or
mov
and
push
mov
cwtl
dec
xchg
pop
mov
xchg
leave
fs
jo
cmc
fs
jns
icebp
fcompl
xchg
out
repnz
and
dec
test
movsb
inc
jae
add
xor
adc
popa
pop
fyl2x
fstpt
cmp
shll
pop
mov
adc
mov
adc
push
mov
pop
push
lea
cmc
popa
jae
cmp
push
imul
popf
stos
xor
and
cli
adc
pop
sbb
sub
push
sub
test
enter
or
testl
adc
test
shrl
push
push
mov
negl
popa
aas
out
or
out
inc
pop
add
fidivrs
mov
fisttpl
xchg
push
fidivrs
xor
jp
push
mov
dec
and
mov
pop
xchg
push
ret
movsl
mov
ret
lea
popa
xchg
adc
jp
xor
mul
in
cmp
sbb
jle
sub
fcompl
mov
into
sbb
pop
pop
xlat
in
mov
push
sbb
call
fwait
xchg
dec
cmp
and
dec
jge
stc
out
mov
mov
test
lea
jg
pushw
add
inc
das
push
adc
mov
xor
xchg
mov
out
inc
push
pop
iret
shl
fstp
popa
adc
mov
push
inc
ja,pt
ja
fistl
test
test
push
xlat
lods
je
xchg
and
mov
push
out
lahf
and
xor
dec
jne
or
push
xchg
xchg
movb
clc
pop
or
std
sbb
inc
or
sub
xchg
mov
xchg
fndisi(8087
js
rolb
sbb
getsec
add
xor
push
mov
xor
pushf
cmp
add
loop
ret
mov
lcall
sbb
cmp
add
sub
pop
jmp
dec
stos
xor
xor
test
pop
jecxz
xchg
mov
sub
mov
dec
pop
push
lcall
xchg
mov
xor
outsl
lcall
movsl
inc
outsb
ret
jmp
pop
cld
pop
stos
xchg
push
lea
and
inc
enter
movsl
add
xor
mov
push
daa
dec
or
rclb
mov
inc
ret
fst
daa
in
jmp
mov
mov
mov
in
hlt
pop
cs
cmp
imul
stos
inc
add
aam
out
push
mov
in
imul
je
or
dec
dec
iret
movsb
das
loop
lcall
xchg
mov
lret
sbbl
xchg
hlt
dec
les
cmp
push
cmpsl
js
fisubrl
out
mov
and
xor
jbe
jnp
mov
sub
nop
mov
adc
sysexit
push
mov
push
jno
loope
fs
jne
jno
mov
or
pusha
mov
clc
andl
sub
pop
push
adc
sbb
push
jge
mov
push
movsl
cmc
pop
adc
mov
loopne
stos
pusha
cmpsl
xchg
lret
es
xchg
adc
xchg
arpl
rcll
mov
pusha
dec
cmp
pop
cmc
xchg
fs
push
jo
popa
jnp
jge
mov
or
repnz
push
das
cld
loop
aam
inc
sub
lods
jnp
fadds
push
cmp
les
imul
into
lcall
inc
pop
dec
movsb
inc
adc
pop
dec
mov
pop
and
xor
fistps
js
jns
xchg
xor
inc
or
push
jp
stos
xor
push
ror
and
ret
ret
sbb
sbb
sub
icebp
or
int3
out
add
mov
rorl
imul
xor
lahf
xbegin
popa
call
cmp
cmp
lods
pop
xor
mov
das
xor
mov
mov
adc
pop
les
cld
sbb
sbb
push
movsb
int3
mov
repz
inc
shlb
mov
les
dec
cmp
cmp
aad
or
inc
jl
sbb
sub
sub
test
fisubs
inc
mov
lea
fwait
sbb
dec
shlb
adc
int3
pusha
mov
rcr
adc
push
test
lret
stos
xor
pop
call
lahf
xor
rcrl
sub
clc
fs
fnstcw
in
or
repnz
lods
lods
cltd
mov
mov
fnstcw
bound
jle
aas
popa
out
or
push
cmp
icebp
enter
sbb
subl
shrl
ljmp
sar
lds
in
adc
ss
push
mov
jmp
call
je
test
xor
jl
and
jmp
fwait
std
mov
pop
cmpsb
mov
add
push
lods
add
dec
cmc
sbb
pop
inc
pop
jnp
push
or
cmpsb
ss
jl
jnp
movsb
icebp
aas
mov
xchg
scas
movsl
push
fidivs
mov
shlb
or
out
aam
or
test
push
cmp
lcall
imulb
jl
adc
aad
imul
call
imul
fbstp
cli
push
cmp
mov
iret
mov
shrl
clc
push
sbb
dec
jnp
divl
cmp
cli
lcall
mov
cmp
icebp
loop
imul
inc
out
or
pop
push
loop
pushf
pop
mov
sahf
int
aam
das
loop
call
push
mov
pop
cli
daa
ljmp
xchg
aas
and
scas
mov
fsts
lds
push
fs
mov
test
cld
jmp
push
subl
fsub
xchg
ret
imul
push
repz
cltd
inc
test
in
movsb
out
jecxz
dec
mov
int3
shrb
dec
pop
std
aam
mov
push
ljmp
repz
cmp
pop
insl
inc
cmp
into
andl
lods
aaa
mov
and
inc
or
xchg
mov
lds
or
filds
cmpb
mov
inc
fisubs
jle
imul
mov
jno
adc
fwait
repnz
addr16
push
xor
jbe
mov
call
jnp
fnstenv
inc
not
and
push
adc
xchg
and
pop
push
inc
adc
fwait
in
or
pop
xchg
je
dec
adcl
pusha
mov
stos
dec
xor
adc
jnp
lea
mov
out
mov
jp
or
testb
mov
adc
cld
ss
xor
mov
add
mov
inc
call
sbb
cmpsb
mov
leave
shlb
lea
adc
xor
mov
cmpsl
add
dec
mov
clc
mov
call
sub
jnp
sub
adcl
stc
jno,pt
fstpt
outsb
dec
and
cmp
lcall
imul
loopne
push
push
imul
add
bound
pushf
and
cmp
int3
pop
ja
insl
jmp
shl
mov
add
dec
adc
xor
add
sub
add
sub
ljmp
js
jns
outsl
mov
jbe
add
fsubp
dec
out
cli
mov
stc
cmpb
sub
xlat
xchg
cltd
pop
iret
test
or
movntq
test
dec
push
lods
pop
cwtl
dec
bound
roll
rcl
aaa
addb
push
xor
repnz
int
sbb
cwtl
xchg
jne
jb
out
and
mov
dec
ret
fprem
add
and
adcb
setle
loop
dec
rorb
sub
imul
or
jle
test
psrad
push
cmp
mov
mov
shlb
insl
jbe
sti
inc
cmc
dec
xorl
xchg
push
mov
repz
pusha
cmp
mov
xchg
mov
stos
push
movsl
dec
inc
ds
sbb
adc
add
cmpsl
pusha
cmpsl
jnp
push
fnstsw
shll
add
mov
in
pop
jb
cmp
hlt
mov
sub
pop
ja
scas
aaa
imul
test
aam
sbb
sbb
push
es
adc
aad
arpl
add
push
push
fimull
dec
sbb
sarb
inc
in
fldt
mov
mov
scas
daa
jo
dec
and
adc
cmp
out
stos
gs
push
fldl
dec
jmp
sub
pop
std
xor
scas
adc
rcrl
xorb
cmp
sti
hlt
dec
pop
and
insb
adc
xlat
cmp
in
mov
cld
add
push
mov
cwtl
mov
out
or
nop
dec
xlat
sub
fbstp
adc
mov
pop
data16
push
pop
pop
mov
pop
add
outsl
jmp
cmpl
das
call
movsl
push
or
mov
xorb
xchg
mov
lsl
insb
inc
mov
lret
and
mov
mov
in
jle
aaa
mov
sub
sbb
push
mov
push
imul
and
jge
clc
mov
jo
inc
inc
in
xchg
sahf
jge
push
jl
mov
sbbb
push
xor
fdivs
es
data16
dec
aam
mov
repnz
enter
mov
ja
adc
add
outsb
or
dec
dec
ficoml
inc
inc
mov
and
push
and
push
mov
pop
sbb
sbb
dec
and
cmpsb
aam
mov
pop
mov
adc
xor
xchg
push
addb
mov
lds
sti
ficomps
popa
test
rorb
fisubrl
aas
sbb
push
mov
rcl
aam
adc
cltd
ja
jle
out
cmp
xchg
notb
add
roll
mov
nop
pop
sub
lods
sbb
push
mov
add
inc
sahf
ljmp
jp
call
dec
les
xchg
repnz
fisttps
daa
daa
push
mull
inc
sub
jg
subl
cmp
push
sub
push
adc
sbb
into
adc
sub
jecxz
in
mov
rorb
jae
mov
pop
mov
enter
ljmp
data16
repz
push
mov
hlt
mov
inc
xchg
scas
adc
ss
je
mov
fldenv
dec
dec
in
jp
sub
frndint
add
cld
fistps
jne
xlat
fdivrs
pop
sub
xchg
xchg
nop
ds
jns
js
or
or
mov
into
jl
inc
mov
add
andb
arpl
jle
clc
jbe
fwait
jp
roll
xor
add
cld
push
sub
in
sbb
psrlw
sub
test
mov
cli
lcall
sub
shlb
inc
ds
ret
ds
push
pop
push
out
lcall
mov
das
xchg
js
cld
repnz
sbb
mov
push
push
int3
aad
rdtsc
and
dec
pop
jo
test
aam
adc
push
loope
dec
loop
gs
jle
repnz
mov
rclb
repz
cmp
mov
xor
lds
add
mov
out
cwtl
pop
mov
jns
sub
pop
addl
mov
test
in
pop
dec
and
movsl
cmp
xchg
adc
xor
or
popa
insl
xchg
cld
sub
pushf
xor
fsts
imul
pop
jle
in
mov
test
sub
stos
addr16
lret
jo
paddq
cmp
xchg
sar
inc
mov
push
jg
popa
pop
dec
imulb
mov
lods
mov
jl
xorb
mov
int3
mov
jl
cmp
popa
jns
dec
mov
add
dec
pop
jge
pop
je
hlt
stos
out
shlb
pop
fistps
pop
in
out
test
jno
and
roll
inc
or
js
or
sbb
mov
into
filds
mov
aad
inc
xor
ret
cmpsl
dec
test
movsb
lret
and
pop
mov
rorb
push
gs
inc
dec
pushf
xlat
mov
adc
lea
clc
cmp
jns
sbb
pop
jge
imul
notb
out
das
or
call
dec
fs
push
in
cmp
cmp
jns
mov
cmp
into
pop
mov
lcall
or
push
and
pop
cmp
cmp
scas
push
xor
movsb
mov
or
aaa
push
int
mov
xor
pop
push
xor
fwait
pop
imul
ror
insl
cld
push
imul
lea
xchg
add
in
gs
jecxz
cmp
orb
out
in
or
adc
mov
fwait
notb
mov
mov
loopne
inc
mov
mov
aam
mov
les
pop
test
bound
in
mov
and
in
js
jl
scas
mov
sahf
jecxz
ljmp
test
adc
jl
or
iret
loopne
mov
div
push
or
jo
push
mov
inc
inc
push
sub
mov
fsubrs
or
mov
addr16
int3
out
gs
sub
frstor
in
out
mov
cmp
mov
iret
lods
push
push
int3
push
dec
aam
push
das
lods
loop
sbb
lahf
jp
or
inc
dec
loopne
dec
mov
stos
xor
jns
xor
adc
sub
test
and
stos
mov
pop
push
aas
xor
inc
cmp
pop
pop
lahf
popa
mov
cmp
dec
xchg
lcall
out
movsb
sbb
in
cltd
inc
cmp
cmp
in
jb
pop
imul
and
pop
negl
add
or
pop
stos
adc
sarb
jge
daa
ljmp
call
add
xchg
push
pop
les
loopne
rolb
pop
loopne
sbb
out
add
push
or
mov
xchg
mov
jnp
in
inc
gs
xor
and
test
push
lret
xlat
dec
sub
cmp
xchg
and
or
pop
ret
ljmp
cmp
fbld
movsb
xorb
daa
cmpsb
pushf
icebp
iret
insl
les
fildl
js
movsl
xor
fisubrl
sbb
fdivs
subl
mov
stos
dec
dec
or
mov
inc
pop
fmuls
inc
les
mov
cli
in
sahf
jecxz
js
in
insb
cmp
cld
fld
scas
fidivs
pop
incb
mov
hlt
ljmp
leave
stos
out
xor
xchg
push
mov
and
xor
sub
lahf
outsb
out
jle
lea
xor
out
xchg
jecxz
push
in
adc
subb
or
xlat
scas
xorb
sub
cmc
je
xchg
inc
xor
mov
ret
push
lret
add
daa
lahf
fdiv
les
rcrl
in
fisubrl
mov
rcrb
mov
dec
int
cmp
testl
add
ret
lods
push
and
cld
mov
sub
lahf
pop
in
popa
das
mov
push
jnp
insb
sub
push
out
pop
jnp
or
jbe
aad
cmp
stos
out
aad
ficompl
enter
xor
pop
enter
in
rcrl
imul
test
fnsave
inc
addl
fwait
std
fidivrs
test
aad
lock
out
mov
xor
pop
andl
aam
in
mov
add
test
push
xchg
ret
xor
outsl
int
xor
fcomp
add
pop
jns
cmp
out
fistpll
flds
xor
daa
stos
and
out
movsl
and
or
insb
add
mov
sbb
jl
cmp
mov
push
and
jmp
lea
mov
xlat
imul
or
mov
pop
in
adc
ret
jb
out
movswl
sub
mov
outsl
xorl
aam
shl
cmp
and
sbb
fwait
aas
xchg
pop
insb
add
cmp
add
rorl
xchg
mov
pop
jge
cmpb
add
or
aad
xor
mov
sub
into
in
cmp
mul
mov
je
xlat
jg
clc
push
jns
cmp
and
mov
lret
dec
in
push
mov
insb
xchg
dec
sbb
loopew
mov
ret
add
arpl
pop
jecxz
mov
xor
popf
test
xchg
testb
aaa
mov
andl
dec
in
push
mov
or
sbb
stos
pop
loopew
mov
ret
add
arpl
scas
movsb
xor
outsb
popf
test
xchg
testb
imul
lret
dec
popa
test
mov
cmp
xchg
shll
ja
hlt
lea
add
push
push
or
mov
mov
mov
inc
andl
jmp
fs
adc
add
xor
insb
push
cmp
xor
push
leave
mov
xor
mov
push
fs
sbbl
idivl
push
pop
out
xchg
mov
pop
pop
cmp
mov
jg
mov
pop
movsb
fmuls
sub
adc
xor
pop
pop
inc
jmp
stc
out
shr
repz
je
adc
mov
out
dec
mov
cmp
jbe
in
fsubl
insl
imul
adc
xchg
insl
pop
inc
loopne
call
cmp
mov
sahf
enter
push
lcall
cs
ret
imul
icebp
mov
inc
sbb
xchg
inc
lret
push
add
lods
jb
in
ret
lock
jg
repz
shll
mov
add
adc
inc
sub
aad
or
clc
arpl
pop
shlb
adc
mov
pop
push
lret
jne
shl
cltd
mov
add
xor
mov
into
inc
lcall
imul
sub
mov
fs
int
add
cmpl
push
mov
or
cmp
enter
mov
ret
cmp
or
inc
loopne
subb
rorb
popf
icebp
mul
cmp
mov
fwait
pop
imul
mov
dec
push
test
mov
mov
xchg
pusha
cmpsl
out
aad
lock
push
stos
pusha
pop
and
cmp
lods
inc
into
mov
lods
mulb
push
scas
cltd
xor
jp
dec
nop
iret
dec
pop
loopne
mov
idivb
sub
inc
xor
pop
daa
loope
loopne
sub
cmpsb
add
push
mov
mov
or
icebp
cmpl
xor
sbb
inc
jmp
cmp
dec
pusha
sub
and
mov
mov
lock
test
cmp
adc
and
ret
lea
je
mov
shll
add
call
jns
add
iret
fwait
dec
dec
mov
in
add
call
adc
cmc
inc
and
les
cld
pushf
lret
shrl
aad
or
bound
fnstcw
adc
inc
imul
loope
mov
insb
xchg
fldl
sub
xchg
jns
jmp
sub
pop
mov
adc
xor
test
xor
shl
sti
xchg
dec
cmp
or
mov
push
mov
jo
roll
add
jno
mov
xchg
jbe
in
lret
xchg
add
outsl
add
in
cs
dec
ret
cld
xlat
imul
movsb
and
xor
stos
lock
pop
push
and
and
mov
xor
push
and
inc
mov
sub
lret
jo
mov
fs
xor
mov
loop
in
pop
cltd
popa
dec
test
insb
iret
xchg
mov
jg
sub
add
add
jl
hlt
pop
push
adc
xor
pop
shll
mov
into
scas
cmp
ss
cld
push
movsb
mov
pop
insl
xchg
inc
test
xor
test
jmp
xchg
out
push
rcll
pop
call
push
xchg
add
shl
add
mov
mov
add
or
dec
test
call
jg
sub
xor
add
nop
xor
inc
jno
popf
jl
or
dec
pop
clc
out
or
les
mov
adc
call
pavgb
xchg
xchg
ffree
cmp
push
insb
mov
add
xor
icebp
mov
mov
xor
shlb
or
repz
dec
ret
add
es
xor
nop
cmp
push
and
stc
lahf
cs
jmp
loopne
enter
push
push
shl
pushf
fldl
out
and
pop
jae
ljmp
sub
js
mov
inc
mov
aad
out
leave
scas
jmp
xchg
sub
lods
mov
je
lret
std
out
sbb
mov
push
mov
repnz
add
lret
repz
sbb
mov
and
adc
jnp
push
scas
fldenv
dec
js
in
lds
push
js
cli
mov
ficoms
fwait
jmp
pop
stos
dec
pop
test
cmp
xor
mov
jbe
or
xor
push
out
mov
sbb
out
adc
inc
push
popa
push
pop
jecxz
mov
stc
sub
jecxz
xchg
out
hlt
xchg
pushf
and
sbb
mov
push
mov
out
jb
inc
jns
jl
js
or
xchg
lods
dec
push
jl
sarb
das
dec
sub
in
mov
cmpsb
pop
add
push
dec
push
fs
xchg
test
push
decb
dec
and
mov
cwtl
pop
int3
movsb
cmpsb
cld
mov
and
call
mov
add
dec
mov
push
sub
repnz
sahf
and
dec
je
subb
hlt
pusha
adc
hlt
out
cmpsl
xor
testl
aad
loope
mov
fs
sbb
lods
sbb
in
xor
cwtl
andl
fwait
js
std
enter
ljmp
les
fisttps
mov
imul
push
inc
adc
test
in
divl
test
or
lret
ljmp
and
jp
add
out
jmp
add
and
adc
adc
loop
cmp
test
mov
mov
cmp
sub
lahf
cwtl
fldl
popf
mov
jno
xchg
cmp
rcrl
mov
dec
decb
push
add
fistpll
pop
pop
cmp
shl
and
dec
shr
call
sub
inc
outsl
repz
orb
mov
adc
mov
inc
mov
in
sbb
das
and
cwtl
out
ret
stc
sbb
iret
xor
push
hlt
jbe
dec
pop
test
pop
sub
out
mov
in
aad
test
out
xor
push
rclb
loopne
sub
out
adc
cwtl
xchg
cmp
adc
sub
dec
test
outsl
pushf
and
insl
inc
loopne
inc
mov
jmp
out
out
cmpsb
or
loopne
mov
or
in
stc
daa
cli
stc
sbb
cmp
mov
push
loopne
mov
add
xor
shl
mov
jb
stc
movsl
cmp
jbe
stos
pop
les
xor
sahf
shrl
int3
or
and
aam
das
inc
les
dec
sub
dec
inc
sub
sbb
out
loopne
pop
jns
push
bound
pop
lds
fcomp
cltd
lret
dec
adcl
pop
add
fcomp
neg
xchg
sub
pop
adc
ss
insb
dec
fadd
inc
rorl
jns
pusha
mov
je
inc
jmp
in
push
push
sub
imul
es
xor
inc
arpl
cmp
mov
add
jmp
clc
in
sbb
xchg
and
pop
xchg
pop
insb
or
call
push
cltd
lret
pop
test
into
in
pusha
aaa
add
jbe
loopne
adc
jl
call
enter
shll
adc
push
enter
sub
jp
add
aad
js
inc
enter
mov
icebp
daa
sar
cmc
cld
xorb
cmp
xchg
inc
sub
cltd
cmp
xchg
faddl
stos
cmp
cltd
mov
pop
mov
ds
imul
pop
push
mov
dec
cmpsl
inc
mov
lcall
or
jecxz
shl
arpl
cwtl
aas
insl
arpl
jae
dec
xchg
mov
jge
mov
inc
imul
sete
jmp
negb
out
xchg
mov
and
bswap
in
cmp
mov
and
xchg
push
in
ss
out
iret
dec
cs
mov
mov
sub
dec
pop
ret
jb
jnp
jecxz
in
pop
popl
sbb
ds
xchg
cwtl
mov
adc
sbbb
jecxz
popa
stos
clc
sti
lret
inc
push
adc
or
insl
adc
stos
xchg
dec
std
dec
rorl
lahf
mov
jmp
xor
adc
inc
cmp
call
sbb
hlt
pcmpgtb
or
rcll
icebp
inc
inc
leave
aam
in
xor
or
movsl
dec
push
push
lock
sub
and
rcll
cmp
mov
cmp
iret
aam
daa
jmp
push
mov
loopne
sbb
test
mov
lret
xchg
mov
or
mov
adc
fcmovnbe
repz
ljmp
adc
add
lahf
sbb
xchg
stc
test
fld
mov
and
mov
push
addb
cmc
arpl
cwtl
inc
cmpsl
jle
sub
inc
ficompl
lds
mov
pop
jecxz
pop
nop
cmp
sub
adc
cmc
or
dec
shrl
ss
mov
mov
push
and
sahf
test
mov
mov
cmc
push
push
out
aam
xchg
aaa
adc
rorb
push
cmp
adc
cmpsl
dec
pushf
dec
cwtl
xchg
int3
cmp
sbb
inc
testl
inc
jle
mov
mov
in
lods
cltd
in
insb
enter
xchg
in
sub
stos
push
add
and
pusha
push
pusha
pushf
push
sbbl
bound
ret
stos
mov
pop
pop
popf
enter
repz
imul
inc
fldt
mov
es
inc
cs
dec
int3
xchg
sbb
add
cli
sub
xchg
jmp
push
xchg
mov
push
xor
int3
mov
cmpsb
inc
fwait
inc
stc
mov
pushl
test
pop
or
outsb
rcll
mov
test
aad
mov
or
sbb
sahf
pop
in
push
mov
pusha
insb
jg
jae
repz
lret
or
loopne
xchg
scas
stos
xchg
mov
ffree
push
xorb
sub
xchg
sbb
adc
sub
lea
sub
mov
jne
rclb
into
les
mov
push
fldenv
not
sub
sahf
loope
lds
inc
cmpsl
adc
fisubrl
int
xchg
dec
rol
aam
push
sub
lods
push
jmp
lods
jbe
inc
pop
sub
lret
out
dec
cs
js
xor
jg
xchg
pop
xchg
fidivs
xor
sub
int
fnstsw
pop
mov
fs
mov
mov
lea
hlt
aaa
xchg
into
xor
pmulhuw
xchg
in
lock
das
into
pop
mov
lds
das
and
and
ret
outsb
xchg
cld
std
and
xor
sahf
rorb
xchg
xchg
int3
out
pop
std
push
cmp
jl
push
jmp
lahf
mov
push
dec
bound
lcall
jnp
int3
xor
cmp
jge
pushf
mov
inc
outsl
out
lcall
push
inc
outsb
xor
or
mov
subl
and
push
push
mov
sub
adc
adc
inc
and
out
fadd
pop
loope
dec
test
cltd
imul
out
jecxz
lahf
shrl
aaa
fildl
inc
or
mov
mov
arpl
mov
lds
scas
dec
sub
mov
mov
ret
jmp
xchg
mov
add
sub
popf
lods
lods
loopne
jg
mov
push
push
sbb
lret
and
add
cltd
adcl
push
and
fsubs
cwtl
sbb
adc
daa
sahf
jne
cmp
cmp
imulb
jb
add
nop
bound
add
iret
dec
stc
lcall
sbb
lahf
cld
sahf
push
fcmovnb
mov
nop
in
cs
xlat
add
lds
adc
shlb
jnp
mov
das
addr16
js
sti
inc
mov
jo
jle
sbb
jnp
and
in
mov
inc
xor
pop
sbb
mov
adc
rorb
inc
imul
pop
lret
push
mov
sti
test
call
sbb
mov
int
mov
addl
sub
aad
jecxz
cmpsb
cmpsl
push
rcr
fbstp
pop
mov
cwtl
push
fiadds
ds
outsl
dec
xchg
sub
cmpsb
mov
add
fldt
jns
and
aam
inc
adc
mov
or
sbb
cmp
out
shlb
add
mov
stos
push
inc
sbbl
subl
hlt
mov
testb
mov
ror
ljmp
jae
pop
xchg
rorl
adc
and
loopne
or
insb
movsl
add
mov
sbb
cld
ja
es
mov
and
add
xchg
int
or
outsl
mov
push
popa
out
and
lods
xchg
testl
or
inc
push
pop
lcall
lahf
xor
push
lret
mov
push
movsl
stos
jns
fistl
and
push
ds
sbbl
xlat
jp
and
sub
out
mov
fldcw
mov
xor
xor
bound
mov
push
sbb
cmpsb
push
mov
insb
inc
test
mov
adc
pop
cmp
popa
inc
in
test
jns
iret
sbb
xchg
push
xchg
mov
or
pop
push
loope
cld
jbe
pop
xchg
dec
dec
sarb
and
xchg
pushf
mov
dec
mov
je
mov
testl
addr16
scas
mov
inc
jns
pop
lock
push
push
cmp
push
cmpsl
loopne
out
sub
or
xor
lods
xor
adc
mov
out
outsl
pop
and
fnsave
and
lods
daa
cld
mov
cmpsb
sbb
out
pop
add
jge
mov
pop
fisubrs
jae
cmp
xchg
xchg
lret
fwait
icebp
imul
rcrl
pop
inc
push
push
cld
je
xor
fsubrs
bound
cmp
jne
clc
mov
mov
mov
inc
push
pop
mov
sbb
lret
jno
lahf
cli
mov
hlt
std
aad
data16
pop
in
pushf
daa
mov
ficoms
cmp
push
es
lods
insb
mov
cmp
adc
pcmpeqd
addr16
in
out
inc
fmuls
ja
adc
imul
fs
mul
add
paddusb
in
adc
imul
and
mov
sbb
aam
fcoms
enter
mov
inc
pop
xor
and
sahf
aaa
mov
imul
shll
and
inc
jmp
out
aam
lds
lret
jg
mov
ret
cmp
cmp
cmp
gs
not
fldpi
lods
clc
mov
jno
jmp
addl
outsb
or
pusha
sub
push
xor
jge
test
jmp
mov
inc
xchg
sub
sub
sub
dec
adc
jg
in
mov
in
or
push
mov
mov
lcall
aas
adc
cmp
int3
mov
fcoml
fcomps
adc
sbb
aaa
es
push
lcall
mov
and
cld
shlb
test
push
jecxz
stc
shlb
dec
in
mov
lahf
push
cld
dec
add
mov
in
ds
jbe
repnz
stc
adc
mov
lds
cmp
ds
cs
lahf
dec
push
scas
ss
cmc
scas
pop
out
loopne
stc
psubq
out
dec
jae
cmp
inc
sub
insl
movl
test
mov
lea
stos
jae
mov
or
std
jge
jb
imul
and
sub
mov
jmp
dec
add
xchg
xchg
adc
stc
in
sub
shll
add
adc
nop
jecxz
add
cmp
or
inc
loopne
test
jb
jb
test
insl
mov
jbe
adc
dec
dec
neg
adc
notb
xor
imull
or
decb
mov
fdivrs
jmp
vmread
lea
fbld
dec
jge
push
sti
cmpsl
xor
fs
or
test
jg
rcl
xor
jno
movsb
je
dec
test
daa
insl
mov
xor
lahf
ficoms
daa
inc
pop
adcb
cld
sahf
add
les
int3
daa
in
adcl
hlt
mov
enter
movsb
and
add
pop
lds
ljmp
pop
dec
dec
std
fidivs
mov
sub
sahf
stc
lret
es
pop
add
adc
sbb
pop
pop
add
outsl
mov
repz
xchg
inc
jge
sub
inc
icebp
imul
sti
stc
sub
fsts
pop
mov
sub
mov
cs
int
js
js
loop
sbb
dec
mov
pusha
repz
cmp
ljmp
int
std
pop
cmpsl
decb
inc
xor
dec
pop
rcrb
mov
fistps
call
push
adc
sbb
pop
mov
push
mov
xor
loopne
add
sub
cmp
mov
fcomp
repnz
int3
pushf
int3
push
inc
and
ficoml
fdivl
gs
cmp
cmp
rolb
cmp
jns
out
out
repnz
and
mulb
stc
into
in
dec
dec
idivb
fiadds
or
pop
enter
fidivl
mov
lds
sarb
cmpsl
xor
pop
pop
rol
xlat
jmp
pop
aas
cmp
lret
add
ficompl
mov
push
push
dec
test
mov
push
xor
mov
addr16
and
jnp
outsb
sahf
lds
adc
pop
jbe
mov
int3
lock
mov
push
scas
jns
inc
xor
inc
cli
fstl
fisttps
rcr
adc
je
cmp
fwait
xchg
out
or
push
adc
test
shll
in
add
sbb
aam
sbb
sbb
push
sar
gs
idivl
loope
xchg
outsb
push
add
jmp
cmp
jle
sbb
pop
jg
ret
scas
dec
jmp
mov
sub
mov
xor
in
and
mov
mov
mov
ficoms
or
adc
or
loopne
adc
sysenter
xchg
xchg
sbb
cld
push
in
loope
in
hlt
jbe
jg
xor
dec
mov
xchg
mov
lcall
ss
int3
jo,pt
daa
xchg
enter
repnz
aas
and
mov
rolb
jge
and
lea
jnp
adc
popf
decb
inc
movsl
clc
clc
mov
xor
jp
xchg
lcall
pusha
or
bswap
scas
cli
ss
movsb
popa
sbb
shlb
lahf
orl
ds
out
iret
les
cmp
cli
jnp
mov
inc
nop
aas
int
xchg
ljmp
xchg
in
les
cwtl
mov
sbb
cld
jge
adc
mov
or
inc
les
lods
adc
shll
daa
xchg
jmp
leave
cmpsl
dec
cmp
in
mov
rclb
jnp
pop
jae
je
loop
xchg
psrld
aam
testl
dec
sbb
lret
out
mov
insb
clc
iret
push
mov
lods
test
mov
sbb
adc
jb
cld
or
ficoms
out
int3
cmpsb
pusha
lods
jmp
out
and
loope
cmp
mov
and
sti
packuswb
sbb
sbb
jge
pop
je
push
cmc
mov
pop
sbb
into
std
mov
xchg
repz
out
xchg
push
enter
jmp
stc
mov
add
or
outsb
rcll
mov
cmp
cmp
mov
test
jmp
pop
cmp
dec
repnz
push
jb
xor
mov
test
push
push
xor
inc
outsl
test
adc
push
lret
cmpsb
push
cli
mov
or
ds
pop
js
jmp
push
scas
sahf
das
push
inc
adc
xchg
test
lahf
cmpsb
inc
mov
or
repnz
mov
mov
call
in
in
cmp
fiadds
xor
dec
enter
int
imul
bound
aam
fimull
jo
jmp
cs
push
aas
push
xchg
es
lret
test
dec
cwtl
aas
cmc
sub
rorb
cmpsl
cmp
ja
xchg
aaa
sahf
loope
leave
test
mov
push
test
ds
int3
mov
test
or
mov
mov
xor
test
outsb
adc
ljmp
shrb
jecxz
inc
and
test
cld
and
int3
sub
std
test
or
xchg
in
dec
shrl
xchg
rolb
arpl
pop
mov
leave
test
cmp
ja
cmc
jnp
lret
outsb
xlat
mov
ret
adc
stc
push
cmp
mov
add
cmc
test
inc
cmp
out
jbe
mov
lods
test
stc
adcl
arpl
lods
fldcw
xor
stos
lahf
mov
dec
push
add
jnp
outsb
and
cmp
pop
cli
gs
fldt
jl
arpl
scas
iret
jne
or
adc
repnz
add
pop
adc
jne
stos
push
mov
lret
mov
jae
stc
xchg
loope
daa
pop
stos
mov
lahf
loop
push
lea
sbb
inc
dec
gs
fnsave
cmp
ja
shlb
test
std
ljmp
sub
into
adc
push
sub
es
xor
and
stc
xor
stos
xor
sub
sarl
lds
and
out
xor
scas
lods
outsb
cld
pushf
mov
rorb
mov
in
ret
jae
mov
xchg
ffree
int
jb
jmp
sub
into
fucomp
mov
daa
clc
mov
outsb
push
pop
push
les
lods
push
sbbb
inc
mov
mov
jmp
mov
ljmp
lds
out
or
lret
push
mov
cwtl
and
add
shl
push
xor
js
data16
in
arpl
sub
adc
ja
ljmp
mov
leave
xlat
pushf
xchg
push
pop
or
mov
loop
arpl
push
mov
or
jecxz
insl
and
jb
adc
dec
adc
sub
int3
fdivs
fdivrs
sbb
in
imul
sbb
mov
in
ja
push
aam
int
or
fdivl
xchg
add
out
leave
inc
dec
mov
dec
insb
mov
cmp
dec
push
test
mov
inc
pop
imul
push
testb
dec
ja
repz
add
push
mov
cmpsl
jae
int
fs
dec
mov
pop
sbb
pop
adc
sbb
ljmp
out
or
push
sub
int
out
iret
pushf
jp
dec
mov
gs
in
inc
iret
lahf
icebp
test
and
pop
movsb
lds
mov
jmp
pushf
iret
add
sub
ffreep
add
adc
mov
xlat
int3
jbe
into
int
adc
cs
mov
mov
fs
and
sbb
inc
cmp
in
push
fstl
xchg
cmp
test
lods
inc
dec
adc
cwtl
sbb
subl
jo
into
mov
and
mov
into
adc
jp
cli
jg
flds
add
add
jecxz
nop
insb
cmp
adc
adc
xchg
or
jb
out
in
sbb
pop
jbe
sarb
xlat
and
enter
out
mov
fistl
xor
mov
or
cmp
cwtl
clc
or
ret
jle
aad
scas
mov
lcall
outsb
mov
movsl
out
je
cld
push
dec
data16
push
inc
add
int
mov
jo
cmp
inc
enter
pop
mov
inc
iret
je
out
pop
cld
push
dec
shrb
mov
lea
aam
jecxz
jno
jecxz
sub
rorl
xor
fisttpll
jg
je
mov
test
sub
imul
push
cltd
mov
mov
insl
jae
lods
pop
in
push
xchg
pop
push
mov
shll
inc
popa
or
and
divl
jb
icebp
dec
mov
jbe
rcr
add
loope
into
dec
push
or
sbb
mov
sarl
dec
sarb
xchg
cmp
push
inc
test
vorps
jecxz
mov
jmp
dec
or
stos
in
ja
jecxz
orb
es
ljmp
das
xchg
out
xor
sbb
inc
adc
lds
sbb
jp
sub
sbbb
outsb
loope
lods
popf
mov
jge
sbb
adc
xchg
mov
ret
add
dec
cmp
lcall
mov
xchg
imul
ret
pop
call
push
imul
insb
cmc
call
sub
mov
mov
ret
lock
add
add
enter
add
lret
dec
es
push
outsl
lret
push
stos
inc
and
test
adc
lcall
xchg
pop
mov
inc
test
xchg
sahf
add
add
es
jle
sahf
push
dec
xchg
xor
notb
lds
ja
ljmp
pop
loopne
xchg
add
outsl
jmp
ds
xchg
mov
xchg
mov
add
mov
mov
stos
push
pop
lahf
repz
enter
lret
adc
xchg
test
sbb
pop
or
aad
cmp
or
insl
in
mov
leave
lds
in
add
mov
mov
push
jno
add
das
push
pop
push
les
popa
adc
mov
jle
pop
xchg
pop
aas
out
sub
xchg
inc
out
rclb
xor
mov
scas
sbb
jge
jns
xchg
mov
add
push
roll
inc
loope
mov
mov
stos
rorl
xchg
adcb
insb
adc
sub
std
push
sub
pop
lret
roll
or
cmpsl
jle
stos
mov
sbb
mov
arpl
fnsave
jge
ds
into
loope
repz
ret
cltd
pop
addb
sbb
sub
test
push
mov
data16
inc
mov
jnp
mov
xorl
cs
daa
pop
jmp
fstpl
call
scas
fisttpl
cltd
lret
lds
in
fnstenv
loop
pushf
sbb
pushf
and
repz
mov
jecxz
add
add
fwait
add
pop
bound
pop
ret
cltd
pop
mov
dec
fldt
cmp
test
push
mov
mov
aam
adc
mov
test
insb
inc
out
ret
iret
lods
jecxz
jbe
dec
lret
cmpsb
or
add
pop
scas
mov
out
outsl
bound
in
cmp
dec
pop
dec
rcll
xor
push
pop
lcall
mov
cmp
je
imul
jp
pop
mov
xchg
pop
or
fwait
ret
lcall
dec
dec
iret
les
mov
xor
lret
dec
jb
sahf
or
pop
std
jge
pushf
xor
test
ret
cmp
ljmp
sbb
sbb
add
fcomps
mov
or
mov
pop
int
adc
xor
mov
xor
pop
xor
sub
sub
daa
cmpsb
pop
cmpsb
popf
jle
pop
cmp
xchg
aam
mov
mov
scas
xor
jmp
call
jmp
leave
dec
sti
dec
jnp
inc
test
ret
jmp
in
adc
jl
sub
sub
sub
call
xlat
cmp
lret
push
jp,pt
push
sbb
and
jae
fcomps
pop
jmp
sbb
xor
div
xchg
insb
insl
sbb
sub
and
decl
mov
mov
jns
out
and
gs
jmp
push
jo
test
pushf
nop
repz
cmp
sub
setp
or
fisttps
in
cmpsb
dec
mov
dec
cmp
mov
lock
pop
mov
mov
sub
sbb
jns
pushf
dec
fiaddl
cmc
mov
jns
mov
lahf
jbe
push
loopne
inc
sahf
dec
cmp
cld
pop
cli
fisttpll
cli
insb
mov
push
pop
adc
xchg
divb
dec
rcrl
or
rcrl
aaa
bound
xor
int3
cmc
mov
test
pop
fldt
vsqrtss
jnp
add
xor
test
jle
adc
jle
out
sbb
pop
mov
std
xor
jb
mov
dec
xchg
xorl
movsl
stc
data16
cmpsl
mov
fdivrl
xchg
out
dec
fnstsw
lcall
push
jge
icebp
cmc
repz
dec
push
hlt
pop
jnp
add
mov
test
inc
in
std
out
adc
ds
push
mov
ficoms
into
aam
xchg
stos
adc
or
pop
cmp
insb
shr
das
pop
add
dec
xor
xchg
test
mov
popa
xchg
andl
add
fwait
push
fiadds
pop
xchg
cmp
in
adc
iret
ror
nop
xor
jns
dec
xor
or
pushw
cmp
roll
pusha
cmpsb
jae
iret
cs
in
xor
push
sub
pusha
nop
xorl
imul
sub
pop
lret
sbb
lds
test
mov
cld
lock
jle
mov
push
sbb
scas
mov
fs
mov
cltd
xor
pop
shl
lret
and
mov
add
jb
inc
ret
in
movsl
clc
xchg
out
inc
sti
mov
scas
sub
push
lret
or
insb
pop
fbld
lcall
in
pop
inc
mov
aam
out
jl
sbb
mov
sub
adc
aas
ss
jns
aas
cmp
sub
mov
in
rolb
jns
and
push
popa
cmp
lret
mov
int3
push
mov
inc
mov
cmp
rcrl
mov
notl
stos
sub
dec
leave
ret
xchg
nop
fiadds
orb
mov
popf
adc
adc
outsl
pop
and
jbe
sbb
sti
mov
jge
or
ret
push
jne
dec
push
adc
inc
dec
push
fldcw
insl
nop
stc
lods
xchg
repz
mov
adcb
jbe
pop
mov
lds
cltd
aaa
fcmove
cmpsl
and
loop
mov
test
xchg
pop
ljmp
dec
dec
enter
out
loop
cmc
mov
mov
shrb
cmp
mov
addl
jbe
mov
ljmp
je
sbb
out
aam
pusha
mov
addr16
push
sbb
pushf
test
addr16
add
adc
lret
insl
mov
or
dec
xor
dec
jmp
in
into
jne
xor
cmp
gs
aam
adc
es
rcrl
dec
push
cmp
cld
pop
add
or
xorl
shl
stc
push
pop
call
iret
hlt
ds
imulb
icebp
xor
cmp
out
cld
jle
inc
rcl
dec
xchg
lea
cmp
test
lret
or
pop
mov
xchg
xor
and
sub
out
jecxz
ss
push
ret
int
jo
pop
call
outsb
jno
test
xchg
inc
negb
sbb
ds
ficomps
cmp
sub
stc
pushl
mov
mov
aas
push
adc
bound
mov
xchg
jl
jno
les
dec
aam
add
test
ret
aam
test
sbb
jnp
xchg
or
push
test
imul
xlat
dec
xchg
aaa
mov
test
call
mov
fiaddl
scas
xor
adc
cmc
pop
pop
fs
jbe
adc
lods
das
lock
jno
cwtl
fildll
call
fs
pop
shrl
das
dec
sbb
xor
lret
gs
and
sbb
cmpsl
into
divl
incb
push
data16
cmp
lahf
jne
arpl
iret
xor
pop
icebp
mov
cmp
mov
jne
xor
das
lret
and
outsl
clc
loope
and
test
xchg
ror
test
fmuls
fisubl
call
mov
dec
out
lds
aam
jl
pusha
rorl
fbld
or
in
int
int
cmp
mov
jo
push
data16
loop
sbb
mov
into
push
push
cmp
mov
or
cmp
xchg
addr16
mov
popa
arpl
push
adc
xchg
pop
aam
push
pop
dec
cmpl
test
xchg
xchg
adc
adc
out
sbb
sahf
cmp
repz
flds
or
mov
xchg
jl
jno
les
das
mov
push
mov
sub
xchg
pop
scas
mov
mov
push
into
test
pop
cwtl
pop
pop
xlat
popf
ds
xor
mov
jns
stos
mov
test
mov
pop
or
dec
cmpsl
aas
cmpsb
mov
mov
cltd
out
or
mov
or
clc
sub
mov
sti
lret
fs
cltd
insb
stc
ds
push
cli
fxch
sub
ret
cmp
iret
push
jno
push
mov
loopne
mov
lods
xlat
ja
outsl
cmc
enter
divl
push
out
pop
bsf
pop
pop
push
jge
shll
je
ss
sbb
mov
lahf
push
sub
insl
jns
push
sbb
inc
in
inc
jmp
insl
scas
imul
sub
cmp
mov
xchg
mov
clc
cs
insb
adc
cmp
sub
mov
and
ret
xchg
enter
fstpl
enter
in
aas
cli
xchg
imul
std
ret
popa
sbb
cmpsb
outsl
sub
lea
mov
dec
data16
aam
pop
and
dec
pop
out
or
nop
sbb
and
orb
jbe
fnstsw
repz
sub
sarb
sub
push
addr16
lcall
fidivrs
faddp
cli
sub
mov
dec
pop
jbe
insl
lds
add
mov
test
cmpsb
mov
popa
jbe
test
pop
inc
sub
inc
xchg
add
cmc
mov
setg
ja
and
mov
pop
add
cmp
icebp
fiaddl
dec
xchg
mov
sub
out
xor
outsl
gs
sub
repnz
mov
sub
add
jno
arpl
inc
fldl
fisttpll
enter
inc
sbb
loope
out
stos
pop
sbb
mov
or
and
dec
inc
cmp
xchg
in
es
mov
mov
into
imul
mov
inc
scas
dec
jge
push
aam
dec
loopne
and
push
rep
mov
push
mov
sbb
aad
lea
pushw
jg
sub
push
push
lcall
sbb
lret
sub
xlat
xor
negb
sub
push
cmp
dec
ret
mov
push
push
sbb
xor
int
sarl
push
out
je
mov
pop
mov
sbb
fldenv
pushf
aaa
and
repz
or
push
sbb
lds
push
testb
cwtl
adc
fsubrl
inc
lock
ja
xchg
push
pop
outsl
sub
sub
stos
cmp
sub
arpl
fisttpl
jl
in
testb
jno
mov
lret
mov
mov
adc
jl
test
pop
push
and
aaa
in
aam
test
into
in
scas
subl
stos
data16
insl
gs
stc
jge
sub
je
aaa
icebp
or
xchg
lcall
pop
push
push
jg,pt
leave
ficoml
out
cwtl
shlb
incl
mov
testb
insb
stc
fsub
xchg
mov
add
push
sub
je
aad
jl
in
scas
and
adc
sbb
xor
jp
jbe
js
cmc
popf
jmp
lea
lods
imul
pusha
adc
sub
in
cmp
in
mov
pop
cltd
sbb
iret
push
bound
out
jmp
lret
dec
cmp
js
adc
movsb
pop
lods
data16
xlat
mov
lea
stos
dec
mov
lods
xchg
fildl
jae
xchg
push
sub
mov
test
push
cmp
add
fsubp
insl
push
push
jge
adc
pop
push
pop
inc
les
mov
xor
int
cwtl
or
shl
pop
test
cmp
loopne
xor
mov
pop
pop
pop
mov
jns
mov
fwait
jl
bound
mov
dec
mov
arpl
shrb
pop
jl
call
push
out
sub
dec
adc
xchg
fdivl
sbb
test
sbb
jo
insl
adc
jns
jo
andl
outsl
pop
dec
je
rcl
les
inc
cmpsb
pop
pop
sbb
test
fs
mov
and
lret
js
rcrl
push
insb
xor
call
mov
pop
mov
sahf
negb
aas
lds
jns
out
pop
insl
iret
inc
dec
ss
test
sub
xor
ficompl
leave
jecxz
test
int3
pop
mov
enter
and
add
add
cwtl
aaa
lcall
fs
add
jbe
sub
ret
fbld
std
or
pop
adc
fnstcw
fildll
mov
sub
loopne
cmp
fadds
idiv
fistpl
shr
orb
xor
mov
dec
cli
lahf
jnp
jl
orl
push
fwait
cmc
jnp
in
mov
inc
push
mov
mov
dec
jle
inc
orb
cmc
jae
in
fbld
repz
and
cwtl
and
sti
push
jne
inc
pop
js
pop
loop
xor
mov
cld
hlt
clc
aas
sub
outsl
mov
push
inc
mov
pop
adc
stos
push
push
or
jmp
popf
ret
out
jmp
jnp
add
jne
mov
push
or
push
inc
or
movsl
pop
movsl
and
cmp
jl
dec
call
imul
mov
out
adc
insb
test
lods
dec
sbb
pop
inc
cwtl
addl
add
sarb
adc
cmp
add
jle
stc
imul
jo
out
loopne
ficompl
adcl
push
dec
out
hlt
adc
push
fisubrl
xor
jle
xchg
add
sbb
ss
mov
inc
add
mov
and
sub
jne
lods
shlb
sub
sub
imul
sub
pop
pusha
or
and
xchg
daa
mov
xchg
inc
pop
mov
mov
bnd
ret
sub
or
jp
mov
out
jecxz
jae
arpl
daa
call
xor
cmpsb
push
mov
cmp
push
mov
inc
popf
dec
loope
loop
dec
pop
repz
mov
or
adc
cmp
pop
mov
mov
xor
andb
jo
lods
fadds
ret
lret
scas
pop
jge
leave
adc
push
ljmp
or
aas
xchg
into
std
inc
movsb
sti
arpl
jp
jl
fmulp
fs
fcmovnb
stos
mov
movsl
jb
ss
jp
cmp
and
jae
out
pop
sbb
scas
push
ret
push
cmpsl
mov
in
repnz
xchg
int3
sub
insb
sbb
jb
fisttpl
fistpl
jbe
inc
add
loope
nop
adc
xchg
or
xor
mov
jp
jecxz
adc
js
xchg
sub
jp
pop
sub
xchg
jno
ret
imul
sub
mov
dec
pusha
aaa
fld1
test
fs
enter
sub
andb
fsts
enter
fmuls
popf
cmp
insb
push
pop
dec
jns
adc
xor
cwtl
xchg
jnp
pusha
in
mov
dec
adc
sub
sbb
cmpsb
and
outsb
cmp
mov
push
pop
xor
jmp
dec
add
imul
lock
bnd
orb
sub
lds
cltd
std
sub
xor
inc
icebp
adc
dec
adc
dec
sarb
test
push
sbb
popf
repnz
out
and
cmp
in
pop
in
inc
jb
pop
cli
loopne
jmp
sub
push
pop
jle
dec
and
imul
mov
mov
shrb
xchg
push
iret
int3
or
je
mov
jb
jecxz
lods
out
xor
xchg
pop
pop
out
dec
inc
cmp
mov
loop
pop
inc
mov
sub
shr
jb
int
je
shl
int
push
or
roll
push
and
jno
sub
daa
lahf
test
movsl
jl
scas
dec
xchg
addr16
inc
mov
lock
js
pop
sub
call
and
pop
or
in
pop
cltd
loope
and
push
popa
jecxz
add
mov
testb
xor
bound
popa
out
mov
jb
xchg
rclb
out
pushf
or
cmp
aaa
add
xchg
push
cmp
ret
adcb
fimuls
rorl
and
cmp
aam
pop
cs
imull
xor
stos
adc
sub
mov
sarl
scas
push
movsb
int
pop
pushf
mov
aad
dec
mov
outsb
rorl
or
shlb
not
test
mov
xorl
ret
mov
push
xlat
sub
pop
cmpsl
cmc
mov
mov
adc
jnp
cmp
iret
pop
push
cmp
mov
mov
es
push
dec
mull
fidivs
loopne
icebp
cltd
in
repnz
xchg
popf
adc
pushf
mov
or
pop
adcb
rclb
lods
mov
out
pop
sahf
push
adc
iret
cltd
or
sbb
mov
xlat
xor
cmp
adc
imul
mov
inc
push
cmpsb
outsl
rorb
jae
das
aaa
loope
out
mov
mov
ss
test
xor
sub
les
hlt
dec
enter
inc
dec
fisubs
mov
shll
clc
mov
sarl
xchg
cmp
adc
incb
sarl
cwtl
mov
jmp
iret
xchg
pop
or
sub
out
not
jmp
sbb
lahf
mov
das
ljmp
sbb
mov
out
push
adc
mov
mov
enter
enter
in
cwtl
sbb
jmp
lock
ud0
lds
nop
repz
testb
dec
es
add
pop
pop
cmp
mov
scas
push
or
cmp
dec
pushf
or
pop
mov
pop
mov
mov
arpl
mov
notb
mov
jb
pop
or
mov
inc
sbb
dec
or
shlb
mov
adc
out
daa
sub
ret
in
and
data16
xorl
pushl
imul
xor
aad
das
nop
add
icebp
sub
cmp
cmc
adc
les
nop
lds
push
addr16
add
push
dec
mov
jne
dec
add
out
aas
xchg
cmp
mov
sub
repz
push
sub
ja
inc
pop
pusha
xor
jmp
rcrb
imul
jmp
adcl
push
mov
nop
dec
daa
xchg
push
jecxz
mov
adc
fisubs
fstpl
sahf
or
pop
sbb
popf
sar
and
jno
lea
or
aas
xchg
xchg
rcr
fwait
jl
adc
and
ret
mov
ret
dec
push
imul
fs
andb
lret
movups
arpl
mov
cmpsl
inc
inc
sub
ret
jg
std
fmul
pop
jl
sub
mov
test
pop
xchg
inc
int3
mov
fdivl
add
jmp
and
pop
leave
repz
jge
call
outsl
jb
xchg
in
pop
leave
icebp
pop
adc
sbb
mov
loopne
mov
cli
or
lret
pop
dec
ret
jecxz
add
lcall
aad
inc
mov
sbb
adc
push
cmc
xor
jp
sub
cltd
out
fcomp
cmp
arpl
sbb
jle
cmpsl
fcoms
in
outsl
add
stos
pop
mov
push
fsubrs
pop
cmp
les
leave
fs
lret
in
push
pushf
rorb
pop
adc
ja
jg
mov
jge
mov
nop
mov
in
xchg
cwtl
hlt
lods
ret
pushf
and
pop
loop
lahf
xlat
insl
mov
loope
xor
cmp
sub
xchg
xchg
push
repz
cmp
ficoml
rcrb
adc
cwtl
sbb
fcomip
sbb
sub
add
popa
sub
iret
add
sub
cmp
jo
movsl
or
es
lcall
and
out
mov
sub
test
add
sbb
aas
cmp
out
fldl2e
dec
lock
xchg
mov
xchg
pop
setl
dec
inc
add
shrl
dec
repnz
insl
lods
push
push
mov
orl
rcr
cmp
enter
test
stos
xor
adc
dec
fstpt
rorb
or
and
mov
jno
into
rcrl
shr
sub
add
mov
jecxz
mov
and
enter
push
adc
jg
out
dec
sbb
sbb
imul
sbb
ljmp
xchg
inc
stos
jno
loop
repz
inc
mov
lea
fwait
dec
push
push
leave
xchg
adc
into
push
jp
push
fistps
std
jmp
jno
movsb
adc
inc
repz
inc
fimull
popf
fs
iret
mov
push
cmpsb
es
push
cmc
jl
xchg
addr16
dec
das
adc
push
push
into
push
imul
movsb
mov
sti
xchg
mov
ljmp
pop
xchg
push
sbb
aas
loopne
mov
rcl
out
xchg
jmp
aaa
push
int3
movsb
jbe
test
mov
aad
outsb
test
cmp
or
cs
clc
or
or
lods
test
shlb
jmp
mov
bound
rcl
sti
dec
mov
int3
adc
rcl
jmp
and
inc
mov
push
sub
jns
popa
add
inc
push
lock
xor
leave
mov
xor
sbb
adc
cli
int3
add
push
orb
lock
pop
mov
out
dec
decb
mov
push
outsl
cs
lods
mov
or
mov
add
mov
outsb
shlb
add
push
inc
xor
or
frstpm(287
das
loopne
xor
out
outsb
gs
mov
sbb
pusha
imul
xchg
mov
repnz
mov
push
jl
js
xchg
sbb
xchg
xor
jno
xchg
or
and
mov
xor
cmpsl
repnz
cld
and
in
repz
pop
sbb
pop
jb
and
jae
dec
add
movl
push
ret
enter
rclb
int3
xchg
into
push
xchg
pop
ret
mov
mov
mov
out
push
sbb
test
and
lahf
inc
into
or
cs
mov
rcrb
push
bound
lret
mov
mov
inc
xchg
outsb
sahf
mov
pop
mov
leave
sbb
sbb
shll
sbb
test
sarb
sbb
loope
mov
or
daa
sbb
cmp
xlat
jns
lret
pusha
lods
js
push
lcall
push
and
sub
in
cltd
mov
rcrl
icebp
mov
loop
out
cmp
movups
scas
lods
sub
lock
and
fisttpll
pop
adc
lret
stc
dec
fcompl
and
push
adc
movb
add
cwtl
sti
ss
xchg
inc
loop
iret
les
sahf
mov
dec
and
test
xchg
adc
loopne
xchg
fldenv
push
dec
mov
sbb
push
push
int3
addr16
xchg
push
sbb
adc
out
lret
idiv
lret
fsubrl
push
mov
pop
pop
call
mov
rol
or
dec
pop
sti
xchg
push
dec
ja
jge
int
js
jecxz
rcrb
mov
jl
cmpsl
pop
fisubrs
fildl
jg
inc
scas
mov
inc
test
sub
lods
dec
mov
dec
add
int
cmp
pop
std
mov
pusha
in
call
int3
pop
mov
or
rcl
and
mov
xor
xor
out
or
js
jp
xor
push
adc
rcrb
popa
push
lds
data16
jb
out
jge
sti
add
add
or
sub
inc
outsb
inc
cmp
test
mov
lock
repz
in
frstor
mov
sar
xor
xchg
test
repnz
loop
enter
and
out
fsubl
data16
cwtl
daa
fisubrl
or
push
adc
lods
loopne
cwtl
adc
xor
and
ss
mov
out
fsubl
xchg
int3
fwait
cltd
mov
out
mov
xchg
add
lods
loopne
cwtl
adc
out
inc
fcompl
mov
out
fsubl
pushw
int3
xchg
fwait
shlb
roll
ljmp
imul
jne
cltd
sbb
mov
in
lods
push
pusha
fistpl
jmp
jne
add
mov
scas
test
mov
testl
lds
xchg
push
lds
shlb
pusha
stc
ljmp
inc
ljmp
jge
pop
jmp
xorb
insl
shrl
shlb
pop
clc
cmp
pop
arpl
pushf
lock
mov
lods
scas
repz
in
push
and
jmp
addr16
pop
sbb
adc
mov
fisttpl
jne
pop
pop
dec
in
mov
lcall
popa
leave
xchg
dec
stos
jno
ss
inc
and
test
cmp
mov
fisttpl
rorl
cwtl
and
cmp
scas
mov
jle
and
insb
or
stos
icebp
sub
faddp
push
lods
xor
ja
and
dec
movsl
or
sub
mov
sbb
addl
insl
jmp
das
gs
sti
orl
shrl
sub
inc
push
push
inc
insb
jecxz
mov
flds
rcl
dec
xchg
or
iret
jg
loopne
aaa
cmpsl
ds
ljmp
xchg
push
js
and
inc
int
jbe
stc
cs
push
mov
dec
and
nop
adc
and
pop
ljmp
or
push
jae
add
repz
dec
pushf
dec
pop
sbbb
ja
insl
jb
std
inc
mov
sub
das
mov
rcrb
or
sahf
mov
in
out
mov
or
inc
sbb
pop
jo
mov
int3
movsl
push
or
mov
mov
and
in
jle
mov
push
add
in
mov
pmulhuw
mov
in
jle
mov
dec
imul
pop
repz
push
ds
fmuls
std
fwait
imul
mov
sub
gs
mov
jge
jne
fists
shl
inc
loopne
cmp
iret
pop
lcall
rorb
pop
into
cmp
hlt
jb
sub
enter
push
xor
cli
mov
aaa
cltd
add
mov
mov
cmp
aam
sbb
or
shl
inc
loopne
cmp
je
jnp
aaa
rcll
fsubl
xor
lahf
xchg
arpl
lcall
ret
cmc
imul
cmp
mov
xchg
ljmp
sbb
inc
out
aam
repz
pop
xchg
sub
dec
sub
fmul
xor
inc
mov
enter
xor
mov
jne
icebp
adc
aaa
aaa
jae
stos
scas
jmp
pop
loopne
mov
scas
pushf
sti
dec
cli
testb
inc
and
in
push
cmpsl
cmp
fmull
jle
inc
cmp
or
cmp
pop
xor
xor
ds
int3
lret
push
fsub
mov
dec
ljmp
es
jmp
int
fisubrs
push
cmp
inc
adc
lock
or
loopne
dec
cmp
lret
ljmp
out
add
xchg
pop
fcomps
mov
out
sbb
ffreep
mov
imul
add
or
test
int
xor
push
or
lock
rcll
mov
add
repz
push
jnp
cmpsl
inc
stos
imul
jge
mov
jnp
jmp
dec
xchg
hlt
jle,pn
js
add
lahf
out
inc
jnp
add
add
mov
adc
call
or
push
inc
sahf
aam
jo
mov
pop
test
inc
mov
fnstenv
lret
ja
mov
pop
fldenv
add
sub
daa
xor
cli
add
mov
cmp
mov
dec
inc
inc
push
jge
insb
cs
rorl
sbb
rclb
xchg
ret
addl
mov
jnp
mov
mov
push
pop
jl
cmpsl
int3
inc
je
mov
inc
es
mov
in
push
icebp
jb
icebp
fiaddl
ja
adc
xchg
cld
ret
sub
int3
stos
pop
inc
adc
aam
mov
mov
loopne
pop
addb
mov
sti
lret
add
fnstcw
or
sbb
mov
inc
mov
jmp
lcall
xchg
mull
add
add
push
and
scas
xor
fisubrl
shrb
imul
sahf
push
mov
in
mov
arpl
pop
cli
lahf
nop
fisttpl
fstl
out
mov
fldenv
adc
inc
cmpsb
xchg
mov
lds
loope
jnp
loop
mov
call
insb
dec
fucom
rorl
cmp
sub
or
and
imul
loop
xchg
jle
in
lds
decl
sub
and
ret
sbb
adc
add
inc
pop
cwtl
pop
mov
mov
stc
sub
xorl
mov
cmp
mov
push
movsl
hlt
mov
cmp
fstps
fstpl
mov
jp
jne
ja
rcl
mov
adc
pop
push
dec
out
cmpb
outsl
inc
jp
cmp
enter
pop
or
sub
or
cli
sahf
mov
outsl
mov
ja
movsl
xor
aam
mov
popa
sbb
push
adc
or
pop
cs
mov
je
les
ret
les
mov
icebp
popa
adc
xchg
adc
sub
xor
outsl
inc
add
push
mov
mov
cmp
ljmp
jns
shrb
ss
jns
push
xchg
pop
inc
and
mov
sbb
xchg
jp
xchg
mov
cld
push
cli
je
shl
int
push
mov
sarl
testl
mov
insb
sti
sahf
push
xchg
js
or
jmp
out
adc
pop
lods
lcall
or
dec
push
out
jns
lcall
fwait
roll
ja
cli
iret
mov
ja
pop
jge
and
push
mov
sbb
outsl
test
xor
test
aam
sub
dec
pop
jge
and
push
mov
sbb
or
andl
cmp
data16
fs
ss
mov
xchg
int
pop
xor
daa
adc
mov
ljmp
xor
xchg
xor
pop
in
repz
mov
in
cmp
xchg
or
lret
pop
adc
jle
or
test
mov
loope
cmc
mov
outsb
jl
sub
jno
mov
scas
loope
in
loop
std
xchg
testl
in
test
int3
aaa
out
aad
mov
mov
jne
outsb
or
ds
into
sti
dec
ficompl
jo
cmp
pop
fcmovbe
insl
fiaddl
loop
sbb
xchg
jg
xor
test
xor
xchg
and
push
inc
cmp
add
jp
jae
into
push
shrb
pop
rcrb
pop
popf
sbb
xchg
into
jo
xor
cltd
aaa
inc
shlb
popa
cmp
adc
sbb
push
mov
fcoml
mov
cmp
das
leave
out
dec
sub
inc
push
add
or
in
add
jecxz
add
mov
xor
imul
insb
ljmp
dec
push
mov
mov
sarb
fs
stos
rol
sub
and
jb
push
pop
cmpsb
loop
ds
cmp
shlb
xchg
cmp
sahf
dec
inc
push
bound
push
ret
ret
aas
xlat
pop
mov
pushf
push
stc
add
dec
pop
sbb
jmp
lods
cltd
cmp
xor
cmp
cli
xor
hlt
pop
push
mov
mov
inc
jne
bnd
clc
mov
mov
icebp
sub
cmp
fwait
jle
xor
ret
movsl
or
out
scas
xor
int3
stc
push
inc
pushf
or
sub
aam
and
xchg
clc
xchg
ret
mov
pop
inc
push
mov
std
cwtl
inc
daa
ret
push
out
cli
pop
mov
push
data16
lea
lock
cmp
push
or
add
loopne
clc
cmp
mov
push
sbb
in
lods
test
enter
mov
inc
jae
shr
std
sbb
jmp
jo
enter
out
pop
into
xchg
xorb
pop
xor
inc
jo
dec
mul
jecxz
insb
sbb
mov
xor
mov
insl
stc
rorl
and
movsb
inc
test
adc
adc
mov
xchg
pop
pop
cmpsb
xchg
jbe
ret
test
ljmpw
adc
dec
pop
lods
pop
cmp
mov
mov
cmpsb
test
loopne
sub
jecxz
xlat
in
sbb
push
or
adc
xlat
inc
hlt
int3
aas
cmp
sbb
and
out
je
out
lds
repz
or
rorb
incl
loop
and
out
mul
and
in
jno
imul
push
in
inc
aam
adc
nop
sub
cmp
loope
outsl
pop
jmp
sub
dec
insl
push
imulb
cmp
push
jo
insb
mov
sub
add
mov
test
iret
call
pop
adc
and
mov
cmp
inc
xchg
xchg
stc
outsb
out
pop
movsl
add
pushf
jae
repnz
xor
push
je
pop
loopne
in
loop
xchg
cmpb
loopne
cli
adc
jns
rcl
std
cwtl
mov
cmp
sbbb
dec
scas
cwtl
addr16
sub
adc
rol
pushf
push
mov
ret
adc
rorl
dec
test
jp
push
push
pop
aaa
divb
push
mov
fldl
repz
pop
jle
mov
xor
out
inc
pop
fdivrl
mov
xchg
cltd
mov
sub
test
test
fmull
push
push
stos
xor
leave
xor
pop
in
jg
rclb
lock
ja
xchg
sub
xor
out
push
fistpl
mov
not
addr16
and
inc
and
in
xchg
xor
out
add
mov
add
sub
repz
mov
call
and
mov
mov
pop
push
imul
push
cmp
into
jo
xor
arpl
and
and
lret
xor
movsl
xor
stos
inc
xor
fcompl
dec
fiaddl
fidivl
stos
inc
mov
call
sbb
pushl
xchg
sbb
and
pop
push
ret
mov
insl
cmp
loop
daa
loopne
xchg
aam
mov
jns
cmpsl
push
xchg
mov
or
jne
jl
lea
jo
push
xor
mov
add
sub
int3
cmp
inc
jp
shll
lret
or
cwtl
out
cmp
imull
add
outsl
adc
insl
and
add
push
mov
in
push
push
mov
imul
mov
push
fistpl
in
inc
mov
pop
cltd
or
insb
outsl
in
aas
nop
mov
pop
push
jns
dec
out
jae
push
or
dec
dec
push
adc
push
mov
xchg
rcrl
loope
rorl
inc
imul
fs
sbb
push
push
fdivrs
insb
vpslld
incl
ja
loopne
lea
adc
dec
pushf
in
sub
pusha
and
fcmove
lcall
iret
add
jmp
sub
add
pop
push
and
jecxz
arpl
mov
std
jl
pop
xchg
mov
cltd
stos
cmp
loopne
aad
jno
sbb
sarl
lcall
lea
cltd
leave
movsl
aam
in
jnp
or
adc
ror
outsb
push
xchg
or
jne
xor
inc
sti
push
rcll
mov
out
inc
imul
adc
std
dec
dec
jne
xchg
adc
cmp
jns
pop
out
fildll
pop
add
je
cmpsl
xchg
stos
ret
dec
mov
cmp
clc
or
mov
cmp
or
push
shl
or
gs
jle
sub
loop
andb
mov
dec
pushf
clc
xor
shl
aaa
bound
dec
lods
inc
sbb
pop
mov
jb
int3
xchg
test
imul
mov
out
fs
sub
das
jg
dec
stos
push
or
lods
shrb
cmpsl
jbe
out
xchg
pop
cmpsl
jp
mov
pusha
enter
jo
mov
sbb
sub
xor
aam
dec
je
push
jae
jmp
aas
inc
sbb
cmp
daa
lods
andb
in
xchg
and
push
dec
enter
aas
fldt
fsubrl
ja
mov
fsubl
dec
pop
lock
xchg
cltd
fisubrl
and
push
out
std
mov
movsl
add
pop
adcb
jb
loop
cltd
lock
or
int
xchg
in
pusha
dec
aad
mov
inc
test
mov
in
es
rcrb
aad
add
popa
out
mov
aas
xchg
inc
cmp
xor
shrl
clc
shlb
loope
mov
arpl
and
stos
inc
xchg
pop
imul
repz
out
loope
adc
and
dec
fsts
add
out
push
sub
ljmp
pushf
imul
xchg
loopne
mov
sbb
nop
pop
jl
bnd
int3
sbb
into
xchg
imul
testb
inc
mov
xlat
push
loopne
pop
and
push
cmp
pop
xchg
pop
movb
pop
xor
add
push
ja
mov
hlt
adc
sbb
push
shlb
stos
push
or
mov
mov
lret
out
ja
push
notl
daa
and
mov
or
inc
push
cmc
mov
movsl
xchg
popf
push
sub
fcomps
adc
mov
mov
sbb
dec
xor
mov
imul
adc
push
mov
jae
pop
fbld
lcall
push
sub
jmp
cli
popa
cwtl
sbb
pop
xchg
imul
call
sub
push
lock
out
mov
mov
repnz
inc
xchg
sbb
add
repz
and
out
fidivs
mov
mov
pop
push
sub
push
lea
aas
sahf
ja
push
push
push
jg
pusha
icebp
test
loope
ljmp
jge
jge
add
mov
imul
popf
in
pushf
push
ljmp
xchg
and
out
jmp
or
hlt
out
push
add
repz
sahf
ljmp
mov
adc
xchg
into
orl
pop
imul
sbb
or
pop
pop
fistps
or
clc
mov
gs
push
and
xchg
pop
bound
sbb
into
iret
pop
insl
pop
mov
test
push
int
iret
scas
mov
lds
je
pop
fsubs
inc
fdivl
test
or
push
cld
scas
test
jecxz
fwait
dec
aas
pop
push
xor
int
add
loope
mov
adc
push
rolb
add
outsl
jle
dec
loopne
aad
lock
sbb
mov
adc
push
lret
aaa
inc
outsb
dec
mov
outsl
inc
fs
cwtl
negb
mov
mov
mov
xchg
jmp
cmp
lret
add
and
daa
lcall
push
or
stc
loopne
cmp
stos
xchg
out
dec
les
push
mov
out
and
mov
adc
mov
adc
movsl
ljmp
js
in
imul
jb
mov
cwtl
mov
fsubs
mov
outsl
enter
loopne
cmpsb
loope
gs
sub
push
mov
lret
xchg
mulb
adc
xchg
adc
jns
sub
sbb
sbb
or
push
inc
pop
jle
inc
shl
and
push
add
xchg
clc
xlat
xor
scas
jno
mov
aaa
mov
clc
hlt
call
add
mov
mov
mov
sub
adc
jmp
jp
mov
sbb
iret
pop
xchg
stc
in
inc
shll
andl
pop
mov
aas
mov
shlb
loop
leave
dec
jecxz
loopne
sbb
pop
test
mov
mov
int
sbb
jle
cmp
or
cmpb
sbb
cmpsb
mov
scas
sub
jns
arpl
cltd
sub
pop
repz
clc
pop
push
push
mov
ja
call
in
dec
mov
and
cmpsl
inc
xchg
outsl
ds
cmpsb
sahf
in
push
jae
enter
cli
dec
jg
inc
div
push
in
pop
jb
xor
cmpsb
loopne
mov
cmp
hlt
lret
and
mov
cmpsl
jo
icebp
test
cmp
cmc
in
xor
adc
into
mov
es
inc
iret
xchg
arpl
add
loopne
lds
or
xor
gs
cmp
pusha
jmp
negb
pop
mov
insl
xchg
sbb
inc
cs
daa
sub
test
imul
mov
jb
push
sub
jge
fs
and
mov
test
inc
outsb
fwait
inc
lahf
adc
sbb
pop
addr16
stc
adc
add
inc
movsb
fldenv
enter
adc
add
out
je
add
push
inc
mov
movsb
pushf
in
pop
cwtl
push
in
mov
jb
rcl
fisubrs
dec
pop
test
xchg
stos
out
push
mov
out
stos
xchg
test
js
add
test
or
push
cld
scas
test
jecxz
fwait
dec
aas
pop
xchg
divl
test
fucom
xchg
cmp
mov
dec
inc
pop
shrl
push
add
in
out
xlat
xchg
or
mov
data16
add
std
or
xor
mov
movsl
or
inc
xchg
dec
inc
add
lods
push
pcmpeqb
sbb
mov
bound
xor
out
ret
cmc
fldenv
lcall
jge
mov
xor
xchg
out
pop
pushf
cmpsl
in
nop
cmpsl
out
int3
pop
mov
cmc
jnp
cmp
push
pop
pop
pop
gs
ret
mov
aam
fwait
pusha
pop
out
xor
lock
aaa
adc
mov
addb
mov
sub
cmpb
mul
pop
pop
pop
pop
loopne
dec
jmp
fistl
enter
stos
fists
adc
fdivp
jb
adc
roll
outsl
adc
inc
jne
pushw
sbbl
into
pop
push
lock
scas
xchg
daa
sbb
lea
xchg
hlt
sub
mov
ja
notl
loop
mov
cmp
push
fsubl
push
cmpsb
iret
cli
mov
rorb
clc
xchg
pop
outsb
fsubl
cltd
test
and
sub
cwtl
sub
mov
jno
and
aas
inc
lcallw
cmpsl
or
mov
sub
stos
out
int3
add
sbb
pop
sbb
ret
mov
movsl
cmp
pop
cmp
pop
sbb
sub
mov
hlt
push
hlt
or
mov
mov
lret
xlat
mov
xor
add
aam
xor
inc
ret
push
gs
sub
add
movsl
add
cmpsb
pusha
inc
push
push
sub
xchg
and
bound
dec
xlat
testl
mov
dec
sub
scas
pusha
leave
or
ss
sbb
dec
cmc
push
ret
ficomps
sbb
sbb
add
and
mov
ss
adc
dec
je
xlat
jl
mov
push
xchg
mov
out
cltd
inc
jne
lret
popa
xor
scas
and
dec
and
imul
push
filds
jge
scas
fdivs
cmp
xlat
mov
xchg
mov
data16
or
xchg
xor
jae
js
adc
pushf
out
add
movsl
in
in
or
mov
dec
jl
xchg
iret
popa
cwtl
mov
inc
enter
cmp
adc
dec
push
xor
and
push
cltd
loope
aad
loopne
xchg
mov
mov
test
mov
push
sbb
xor
jl
dec
push
orl
mov
xor
ds
in
jmp
dec
repnz
scas
mov
sbb
and
lock
mov
out
popa
dec
aam
mov
daa
adc
lds
into
fdivrs
std
sub
mov
sub
in
lret
jecxz
movsb
xchg
jecxz
std
dec
loopne
or
sahf
loop
dec
pop
repz
push
sbb
imul
jp
aas
cmc
popa
inc
and
xor
mov
sbb
push
test
adc
sbb
pusha
popf
imull
xchg
aad
push
cmp
popa
cmp
add
cmpsb
nop
addr16
jge
movsl
sbbb
mov
in
addr16
lds
cltd
fs
jecxz
inc
jo
xchg
xchg
mov
or
push
paddsw
pushw
lahf
in
and
mov
stos
rcrb
push
repnz
clc
and
fnstsw
mov
jp
jmp
push
int
pop
adc
fdivrs
lea
and
int
ja
and
stos
inc
fwait
setnp
pop
sbb
push
mov
test
jbe
xchg
push
movsb
xor
jp
mov
call
jp
cmp
sub
in
push
data16
stos
xor
dec
mov
out
dec
mov
xchg
arpl
das
out
add
or
push
fnstsw
and
vaddpd
xchg
insl
cmp
cmp
cs
out
mov
cmp
cmp
mov
xor
addl
dec
sahf
xor
mov
mov
inc
adc
ja
pop
leave
lcall
rolb
test
into
adc
scas
push
xor
mull
jo
mov
imul
icebp
addr16
dec
sub
aaa
fxch
mov
lret
ljmp
repz
adc
out
fnstcw
inc
xchg
sbb
jno
insl
add
xor
add
push
test
mov
pop
test
xchg
fisttpll
cmp
gs
sbb
xor
add
ja
cltd
out
sbb
scas
imul
xchg
cmc
dec
push
fs
inc
shlb
jle
add
imul
xchg
mov
dec
fisttpll
cmp
mov
gs
shrb
cmp
js
lret
arpl
pop
push
xchg
cmp
push
jno
mov
nop
dec
repz
movsb
hlt
xchg
cmp
and
push
push
mov
push
repnz
insb
scas
sahf
sbb
push
push
dec
jno
jno
fwait
lahf
pusha
jmp
aad
ljmp
mov
dec
pushf
inc
in
fwait
adc
fstps
cmc
mov
aam
orb
psubsw
xchg
into
in
push
fstpt
and
xor
xlat
out
jo
dec
nop
fsubl
inc
inc
mov
mov
ficoml
push
pop
popf
scas
inc
xchg
mov
and
fwait
mov
ss
push
dec
sub
mov
add
stos
hlt
jb
loop
cltd
in
or
mov
add
sbbb
mov
fsubrp
jge
jne
jbe
mov
mov
and
shll
std
mov
mov
dec
mov
dec
popa
cmpl
xchg
lret
mov
loop
push
andb
movq
xor
jo
mov
jmp
ret
inc
push
push
shll
jne
imulb
inc
or
xchg
lret
sub
cmpl
rcrb
mov
je
cmp
out
nop
jae
and
sub
out
bound
jmp
das
mov
insl
inc
dec
add
lret
shll
mov
sbb
cmpsb
push
sbb
push
xor
jle
call
out
dec
in
pushf
push
adc
adc
jecxz
shrb
and
jle
repnz
loop
jo
add
mov
inc
aaa
stc
les
mov
popa
xchg
clc
mov
scas
inc
sub
and
aad
outsl
call
scas
addr16
cmpsl
mov
je
jne
push
mov
lcall
cmp
mov
aaa
stos
cld
lods
inc
fisubs
popa
scas
fcmovbe
cmc
cmp
ss
ds
loopne
outsl
mov
add
cmp
lds
sar
and
loopne
mov
pop
icebp
gs
dec
pop
or
addr16
stos
pop
adc
xor
add
jbe
adc
rol
into
xchg
loope
jbe
mov
push
mov
lea
pop
mov
cmpsl
cmp
lods
imul
in
mov
cmpsl
popf
lret
adc
loope
repnz
notl
jae
mov
xor
ret
jmp
sub
sbb
gs
outsb
insb
leave
or
dec
sbb
mov
cld
hlt
loopne
dec
stc
daa
and
in
inc
mov
rorl
or
mul
addr16
pop
imull
in
cwtl
lahf
dec
nop
iret
xchg
movsb
enter
xor
ljmp
lahf
fistps
push
inc
lods
and
sub
hlt
lret
les
sahf
push
lods
pop
repnz
rclb
hlt
or
mov
ret
jmp
mov
jns
gs
xor
fs
std
aam
mov
popa
sbb
test
jmp
out
test
ds
jge
adc
or
push
mov
push
inc
scas
cmp
ss
push
xchg
or
out
repz
mov
sarb
ds
xor
dec
ss
xor
clc
scas
int3
push
jecxz
rcr
mov
mov
test
jge
popf
jns
stc
and
push
inc
xor
adc
sbb
das
nop
test
jne
shll
mov
jle
ret
xor
xchg
scas
sbb
ret
or
xchg
mov
and
sub
pushaw
cmp
fnstcw
rol
in
inc
outsl
push
xchg
pop
xchg
lds
fnsave
jae
rcll
loope
sbb
pop
lock
test
outsl
xor
mov
add
mov
push
clc
fisubl
in
pop
int3
pop
mov
mov
mov
or
fwait
je
arpl
test
pop
cs
mov
xor
rclb
out
cmp
pop
push
loopne
leave
in
inc
aaa
inc
pop
pop
jle
bound
pop
imul
enter
jo
inc
imul
jns
in
push
test
add
lds
ret
clc
mov
in
insb
pop
fmul
dec
repz
lock
inc
xchg
or
loope
mov
sbb
and
dec
mov
pop
cltd
andb
aaa
xlat
xor
pop
jle
loope
rcrl
xor
scas
mov
add
mov
mov
mov
sbb
mov
repz
and
repnz
jge
rcl
xor
setge
movsl
pop
add
mov
pop
hlt
mov
movsb
mov
int3
fsubr
sub
jno
cmp
test
sbb
cwtl
popf
cs
mov
sarb
imull
jecxz
addr16
jle
fnstsw
mov
inc
pop
ret
shll
jecxz
push
push
popf
test
lods
mov
fyl2xp1
imul
callw
mov
insb
movsb
fincstp
aam
push
cli
lods
ljmp
mov
dec
push
es
ret
mov
mov
xchg
cmpsl
test
fmull
hlt
inc
push
cmp
dec
enter
add
in
xchg
sbb
pop
pop
add
stc
movsb
movsl
in
xor
mov
pop
xchg
adc
repz
in
xchg
pop
cmp
dec
pusha
stc
push
dec
movsl
scas
iret
push
add
insl
jp
jl
stc
xchg
mov
cmp
orl
xor
jle
push
mov
pop
test
xchg
jmp
mov
jmp
jbe
sbbb
ds
out
lret
cmpsb
inc
ret
outsl
scas
cmpsl
test
sahf
sti
sbb
pushf
loopne
test
pop
mov
push
mov
sbb
popa
cmp
xor
add
fstpl
mov
jns
mov
jb
in
mov
cmpsl
es
pop
sbb
addr16
xor
mov
add
lcallw
mov
pop
xchg
xlat
popf
sub
test
lahf
sbb
mov
cld
hlt
loopne
imul
fcmovbe
std
roll
inc
jns
mov
cmpsb
icebp
into
sub
or
xchg
mov
stos
pop
scas
mov
inc
mov
imul
lock
psubw
ja
setp
sub
data16
dec
dec
and
pushf
fsubr
cmp
xchg
push
out
dec
xor
popf
xchg
pushf
std
push
cld
fadds
mov
mov
stos
movl
imul
incb
push
aaa
mov
xchg
popa
adc
cmpsb
mov
fwait
lods
xor
dec
xchg
pop
imul
adc
std
inc
and
xchg
call
iret
push
aam
nop
mov
xchg
jge
add
dec
std
pop
jge
das
sub
adc
enter
cmp
adcl
mov
ret
adc
aaa
out
lahf
shll
addl
sbbl
sbb
orl
or
scas
mov
add
pop
arpl
in
dec
jbe
mov
clc
rcrb
and
push
pushf
mov
dec
cltd
arpl
adc
pop
test
sub
lret
fimuls
mov
mov
inc
shrb
daa
imul
imul
cmp
ret
clc
and
mov
inc
mov
cmp
addb
jl
mov
neg
gs
insb
jno
pop
xor
dec
aaa
mov
bound
jno
jnp
fwait
mov
pop
hlt
mov
push
ss
enter
jae
cmp
mov
sub
add
cmpsb
push
add
enter
or
push
cli
mov
mov
add
sub
jmp
repz
jge
pop
pop
repz
adc
stos
mov
arpl
insb
test
jmp
push
and
sbb
and
ret
loope
sbb
mov
sahf
push
cli
dec
xor
sarb
mov
jg
xor
jnp
loop
push
xchg
mov
mov
out
cmpl
xchg
xor
mov
lcall
adc
push
ret
stos
dec
movsb
mov
push
dec
into
mov
popa
imul
cli
fdivs
popa
lahf
dec
mov
mov
fdivs
push
dec
dec
stos
aad
xchg
dec
pushf
push
pop
ror
out
xchg
lcall
xchg
and
shll
loope
xor
lret
dec
sbb
popa
add
out
les
scas
pop
ficoml
adc
xor
cmp
fwait
sub
je
push
inc
nop
outsl
push
mov
rcll
xchg
mov
dec
jle
in
les
jno
dec
ljmp
cwtl
iret
in
es
daa
dec
cmp
push
add
jmp
xchg
cmp
cmpl
lock
sbb
outsl
inc
xor
adc
jecxz
lds
hlt
cmpsl
insl
xlat
adcl
mov
xorl
gs
add
mov
sub
or
out
mov
mov
int
jmp
imul
push
push
and
popa
jge
push
mov
inc
int3
jecxz
ss
lea
xor
jecxz
fs
add
mov
lds
aaa
jp
cmp
mov
ds
mov
in
aam
mov
xchg
cld
jg
add
push
or
dec
and
inc
jge
xor
jb
jo
jno
sub
mov
aas
movl
push
jmp
mov
sbb
jp
in
push
shl
mov
dec
gs
mov
xchg
xchg
jb
adc
and
xchg
bound
xchg
and
sbb
jno
mov
out
out
lcall
pop
fistl
add
insl
mov
lcall
test
out
xchg
stc
mov
aam
cmp
sbb
push
mov
jge
outsb
cmpsb
jmp
incl
cmp
pusha
cmp
jno
and
xor
out
inc
pop
dec
cmpsl
cmp
aad
push
ljmp
dec
insb
mov
mov
out
jnp
inc
inc
imul
out
insb
add
bnd
mov
mov
xlat
mov
int
pop
ret
int
pop
pop
icebp
mov
es
inc
inc
mov
pop
stos
ret
mov
push
stc
push
lret
call
cs
add
aas
mov
mov
cmp
gs
push
and
jno
lcall
pushl
sbb
testb
and
movsl
bound
sub
repnz
and
jbe
jo
xchg
insb
inc
dec
daa
push
lret
xor
cmpsl
mov
xchg
sub
xchg
jecxz
int
clc
mov
insb
jns
mov
cmpsb
dec
cmp
lock
cmp
outsb
adc
jne
loop
pushl
inc
sbb
jne
push
xchg
sub
arpl
jb
mov
imul
stos
out
stc
rcll
fidivrs
or
mov
or
mov
dec
sub
and
pushl
cmc
js
add
push
out
inc
mov
inc
push
push
push
jg
fbstp
icebp
sti
jp
pop
test
push
pop
fcmove
adc
pop
push
or
icebp
xchg
stos
in
adc
lcall
mov
mov
mov
out
pop
jge
push
fidivrs
mov
into
jae
fdivrs
pop
bound
and
repnz
jne
scas
test
lret
insl
jecxz
roll
lret
faddl
lahf
lret
inc
or
movsl
or
fstpl
jnp
mov
scas
pop
xchg
in
mov
push
lahf
sti
sub
sbb
sub
lods
pop
or
or
sti
cmpsl
dec
lods
add
lods
sub
int3
cmp
int3
cmpsb
mov
and
popa
aam
pop
xorb
aas
cmc
dec
or
push
jno
sub
pop
dec
es
fcoml
or
adc
or
aam
lods
pop
out
roll
pop
hlt
jo
mov
adc
lods
push
jno
cmc
or
repz
xchg
fdivr
push
inc
cli
ficomps
add
push
fdivs
pop
inc
sahf
inc
add
sub
je
xchg
pop
imul
gs
and
push
fisubs
mov
or
outsl
pop
push
xchg
arpl
lods
fisttpl
insl
and
shr
jp
push
push
xor
sbb
push
mov
inc
cwtl
imul
rclb
pop
mov
mov
scas
outsl
fiadds
mov
or
jnp
mov
stc
stos
mov
hlt
and
cmp
mov
mov
lods
cmpsb
enter
sub
sbb
push
js
push
mov
push
sub
push
cmp
imul
std
cwtl
mov
sahf
and
cmp
pop
push
xlat
test
pop
xor
inc
aaa
add
ss
testb
add
sti
cmp
and
pop
sub
or
stos
xor
orl
sub
icebp
dec
cmp
cltd
cmp
test
subb
out
dec
mov
xor
jne
ror
es
dec
mov
fdivrl
pop
mov
dec
in
xorb
lods
lods
pushf
pop
adc
dec
in
push
outsl
inc
sbb
xchg
mov
and
enter
insb
inc
daa
rcr
shlb
cmpsb
pop
push
aas
lahf
fidivs
ljmp
fildll
mov
dec
xchg
lods
mov
fisubs
xchg
pop
dec
mov
pop
pop
jae
push
lea
lret
push
mov
rcl
lret
mov
fnstcw
push
cs
sub
adc
frstor
or
das
sbb
arpl
dec
aam
sbb
mov
lgs
mov
aam
inc
xchg
jle
fwait
inc
pop
jb
lcall
je
imul
lret
les
int
iret
ss
xchg
pinsrw
std
xchg
sub
into
mov
pop
mov
sbb
jg
jge
fisubs
mov
lea
es
and
hlt
aas
adc
hlt
cmp
jb
inc
and
mov
mov
mov
mov
cmpsb
orl
sub
int
or
xor
and
dec
call
test
in
jl
iret
dec
dec
jg
mov
adc
pop
leave
jecxz
sbb
into
pop
jge
mov
add
and
cs
mov
adc
sbb
fisttpl
and
mov
pop
outsb
and
popa
mov
dec
jae
xchg
call
cmpsl
jl
add
nop
enter
inc
addb
pop
mov
add
in
dec
fisubrs
mov
push
arpl
push
adc
icebp
hlt
ss
sbb
inc
sbb
cli
push
add
aam
or
add
scas
jle
jne
lods
push
ja
cmp
mov
xor
mov
xchg
sti
fcoml
and
fadd
push
jecxz
and
out
dec
jmp
sbb
sub
jb
fwait
call
fs
out
cmp
dec
pop
dec
ja
subb
arpl
and
ds
xor
test
xchg
cmc
mov
xchg
outsb
and
push
loope
outsl
mov
bound
sub
xchg
jb
sbb
das
jbe
xor
mov
in
and
mov
adc
jecxz
adc
sbb
push
test
xchg
push
fmul
push
sub
and
mov
fisttpl
mov
ficomps
cli
aad
sub
xchg
cmp
ret
test
cmpsl
mov
scas
add
push
lret
movsb
pop
push
lcall
adc
and
stc
and
push
add
repnz
cltd
lahf
sub
andb
incb
sbb
cmp
popa
inc
xchg
adc
loopne
adc
roll
into
push
stc
sbb
jmp
negl
pop
and
mov
mov
mov
pop
xchg
fldcw
out
lods
cld
push
loope
int3
mov
mov
add
mov
dec
lods
cltd
mov
add
sbb
and
out
xchg
add
jmp
adc
daa
lahf
test
rorb
inc
enter
mov
or
jb
push
jp
pop
test
repz
or
out
rsm
call
lea
clts
inc
int3
fisttps
jmp
aas
sbb
testb
xlat
cltd
decb
jg
popf
dec
xchg
data16
cmpb
xchg
jnp
inc
pop
add
inc
adc
mov
sbb
dec
pop
or
ljmp
sub
jmp
mov
xor
cwtl
test
cld
xor
lea
aad
mov
test
cld
or
dec
insb
ret
das
mov
and
xorl
in
adc
movsb
je
repz
sub
fldt
ja
sarl
mov
add
and
jecxz
push
fldcw
out
iret
repz
push
dec
rcr
fisubs
cmp
jmp
cmp
or
ljmp
addr16
lcall
daa
inc
mov
jno
rcrl
fbstp
adc
add
lret
cmc
call
fisubrl
dec
leave
sbb
jle
mov
adc
push
imul
pop
inc
push
gs
test
pop
jno
shlb
push
orl
iret
mov
add
das
inc
or
inc
out
cs
inc
push
cltd
inc
stos
push
xchg
add
xchg
mov
clc
cmp
pop
flds
ficomps
loop
xlat
imul
add
adc
lds
outsb
sbb
jmp
push
jmp
and
jns
sbb
push
mov
out
mov
pop
lock
and
rorb
jmp
mov
aaa
jne
fwait
jb
in
notb
lds
fs
jo
xchg
fwait
addr16
adc
mov
sti
enter
jns
testl
icebp
test
les
stos
out
icebp
jbe
jmp
pop
xchg
push
into
and
jp
clc
sarb
dec
mov
call
icebp
pop
or
lcall
std
je
cmp
xchg
add
iret
mov
add
push
pop
xchg
and
mov
jecxz
cli
stos
add
mov
push
mov
xor
int3
repz
sarb
pop
and
jp
adc
les
jnp
js
mov
and
loope
push
fwait
push
mov
shr
insl
jno
hlt
int
add
es
dec
inc
dec
test
in
lods
das
xor
ljmp
loopne
nop
in
or
fwait
sub
mov
int
imul
out
jo
xchg
mov
push
inc
sub
mov
pop
xor
bound
mov
pop
int
xor
aaa
push
add
xchg
les
and
pop
repz
test
jno
jecxz
xchg
cmpsl
fmuls
pop
out
test
mov
fs
cmp
pop
in
ffreep
jb
push
mov
mov
sahf
inc
shll
les
decl
cmp
sbb
pusha
cltd
out
cld
add
jge
aas
inc
shll
mov
in
xor
and
adc
inc
push
cwtl
mov
insl
xchg
aad
sbb
jnp
sub
mov
imul
sarb
dec
dec
dec
das
xchg
mov
jno
jnp
pop
inc
inc
adc
and
dec
lcall
rcll
jge
adc
repz
push
cmc
ljmp
mov
push
push
sbb
mov
iret
sbb
mov
repz
mov
jmp
nop
inc
mov
sbb
add
mov
dec
sbb
xorb
pop
dec
or
mov
fistpll
xchg
loop
cld
sub
nop
gs
jle
jns
and
jne
addl
in
int3
lahf
sahf
pop
add
shlb
add
and
push
scas
mov
or
sub
sahf
mov
jp
sub
cwtl
js
clc
jg
sbb
popf
fistps
adc
xorl
arpl
das
insl
nop
stos
in
orb
push
lods
adc
mov
xlat
xor
into
dec
adc
mov
sbb
shll
insb
mov
ret
jbe
cmp
or
sahf
jmp
xor
test
arpl
clc
or
jo
movsl
cmp
mov
pop
repz
repz
pop
mov
pop
arpl
and
push
lds
dec
test
push
sub
inc
lods
mov
jle
pop
or
lods
rol
hlt
dec
rdpmc
mov
in
in
jmp
xchg
mov
aad
in
sbb
aaa
int3
pop
mov
arpl
das
insl
nop
stos
in
xorb
adc
xchg
mov
xlat
xor
fsubp
lret
cli
in
sbb
shll
xchg
daa
aas
mov
repnz
mov
lahf
sub
push
xchg
adcb
push
and
push
sbb
mov
jnp
push
stos
jbe
fstpt
cmpsl
fdivr
fbld
cmp
lahf
mov
or
xchg
sti
xorb
xor
xchg
enter
fimull
lcall
stos
roll
imulb
push
enterw
jmp
pop
jg
ljmp
ljmp
push
mov
fidivrl
pop
or
popf
stos
sub
pop
rclb
mov
adc
mov
jnp
hlt
ret
xor
mov
js
jmp
out
repz
fistps
loopne
loope
push
in
mov
data16
sti
inc
xor
push
push
repz
testb
sub
stc
in
movsb
xor
jae
dec
stos
divb
hlt
or
push
fsubrs
xchg
jo
scas
dec
shl
push
pop
jns
fcmovnbe
mov
push
jl
cwtl
mov
ss
push
scas
lret
in
dec
out
mov
pop
sbb
cld
and
lret
or
fstpl
jl
mov
in
sbb
aaa
das
push
cmpsl
xor
inc
dec
sbb
xchg
shl
xlat
mov
fstpt
inc
ret
sub
test
ret
cld
lea
pop
cmp
daa
flds
sbb
into
std
or
mov
repz
dec
iret
cmpb
xchg
loop
xlat
call
mov
pop
pop
or
mov
outsl
divb
mov
xorl
movsb
mov
stc
fxch
imul
mov
aaa
mov
sbb
jo
cmp
jle
psllq
nop
and
xor
jne
dec
imul
xchg
popl
dec
cmp
lock
adc
dec
inc
mov
xchg
outsl
jl
push
adc
push
mov
fwait
mov
js
inc
mov
call
icebp
movsl
pop
or
or
sbb
jg
sub
pusha
ss
xchg
insl
sbb
sti
inc
inc
cmp
mov
sbb
shrl
mov
inc
or
dec
es
push
jno
add
orl
lret
repnz
gs
ljmp
mov
dec
clc
xlat
dec
fadd
mov
jp
pop
fmulp
or
fcom
sub
fcmovu
ljmp
mov
jo
add
lret
sub
jbe
jno
stos
cli
lods
mov
scas
or
sti
mov
shl
sbb
pop
nop
inc
movsb
dec
push
lds
or
rcrl
sub
xchg
jle
pop
dec
sbb
inc
shr
imul
add
pop
in
andl
adc
jnp
dec
xchg
addl
cs
sbb
shlb
popf
aad
fmulp
je
cmp
das
aaa
push
or
test
pop
pushf
push
in
mov
enter
gs
inc
push
pop
push
enter
daa
dec
lds
xor
fcomps
add
lcall
mov
mov
cmp
xor
fcmovne
inc
adcb
out
sbb
jne
mov
repz
pop
aad
xchg
adc
mov
jl
mov
push
xor
icebp
cmp
sbb
jle
push
fstpl
cmpsl
add
inc
sarb
insl
sub
shlb
mov
xorb
pop
mov
xchg
pop
int
pop
ss
cs
push
mov
jl
and
stc
jne
aam
mov
dec
or
aad
xor
je
mov
xor
pop
xor
inc
stc
cmp
sbb
pop
test
mov
sbb
jae
or
repz
int
and
loope
cwtl
sub
movsl
popf
xchg
jns
lcall
enter
rcrl
daa
inc
cmp
ret
mov
adc
les
xchg
leave
push
adc
sahf
bound
jle
outsl
pop
push
rcr
jo
xlat
insb
dec
inc
ret
in
mov
add
test
cmc
mov
int3
cmp
xchg
add
inc
imul
and
lods
cmp
jae
add
nop
or
inc
jle
das
add
jb
push
cmpsb
mov
inc
popf
roll
fisttpll
frstor
push
push
inc
push
lods
sub
inc
sbb
iret
imul
pushf
mov
je
cmp
out
lahf
aaa
inc
bound
icebp
inc
into
loopne
jae
addr16
fwait
mov
mov
roll
dec
addr16
leave
inc
lods
jle
stc
int
mov
imul
pop
stos
xor
pop
or
and
mov
lret
add
repnz
xchg
jge
jl
pop
mov
push
sub
repz
stos
fildl
push
es
or
mov
iret
insb
imul
or
xchg
rcrb
sbb
test
jge
addr16
call
insl
sti
and
mov
mov
mov
push
adc
bound
and
negb
sub
lahf
dec
push
pop
xorl
xchg
in
fcmovb
pop
pop
in
mov
adc
mov
in
mov
lods
or
leave
rorl
and
not
mov
loopne
push
in
adc
push
shlb
in
mov
popa
vandps
push
mov
mov
xor
mov
js
dec
cmpsl
nop
xor
ret
je
mov
push
popa
mov
adc
mov
lods
mov
mov
loope
test
fbld
jno
stos
jno
mov
jae
pusha
jmp
sbb
insb
or
pop
rcl
pop
cmp
rolb
push
xor
mov
mov
xchg
shrb
aam
dec
push
shlb
addr16
sbb
push
sub
fs
add
mull
and
loopne
dec
arpl
scas
jl
add
mov
in
sub
or
sbb
sbb
xchg
dec
stc
fs
or
das
sar
movsl
fmull
xor
in
aam
lds
adc
int
mov
pop
and
out
test
dec
sahf
in
xor
mov
es
mov
inc
addr16
pop
push
xor
leave
mov
cmp
rorb
mov
sbb
aas
adc
nop
pushf
push
push
ss
and
pop
inc
xchg
xor
mov
fwait
xor
loop
loope
cltd
cmpsb
mov
fwait
mov
adc
fidivs
pop
add
mov
cmp
loopne
dec
pop
pop
or
sbb
dec
mov
movsb
sar
iret
aaa
arpl
test
pop
jno
ljmp
xchg
push
jb
xor
int
mov
push
xchg
pop
shrl
lcall
mov
xchg
rcrb
dec
sahf
mov
xchg
mov
mov
std
fidivrl
fs
sub
xchg
daa
push
stos
xchg
outsl
aad
mov
cmp
mov
scas
mov
lret
jnp
pop
icebp
out
aaa
mov
sahf
push
adc
jg
inc
enter
push
divb
dec
into
xchg
add
popf
inc
push
pop
cmp
cli
mov
push
test
loope
jg
cmp
xchg
cmp
nop
sub
mov
test
push
sub
mov
std
test
inc
ret
adc
or
test
mov
jecxz
cmp
sub
aaa
push
lcall
push
mov
jmp
subl
sbb
and
push
stos
pop
ljmp
aam
xchg
xchg
inc
rcrb
pop
dec
rcl
xchg
sbb
pushf
in
inc
add
mov
push
add
shlb
sbb
scas
pushfw
aaa
es
jnp
imul
and
mov
js
or
push
pop
lods
lods
cld
mov
ror
in
push
rcrl
bound
call
out
imul
das
cmp
lods
jne
push
fisubrl
mov
test
aaa
mov
cmpsb
pop
insb
popa
mov
push
es
inc
fsts
or
mov
icebp
repnz
call
repnz
cld
insl
or
jne
mov
inc
inc
adc
cmp
push
push
xchg
data16
push
cmp
dec
std
notl
push
push
addr16
mov
jno
ds
cmp
dec
jbe
imul
ja
mov
sahf
cwtl
shlb
mov
push
ljmp
stos
cmc
sbb
mov
add
inc
xchg
mov
test
lret
push
fneni(8087
das
lahf
dec
test
imul
mov
test
jae
mov
iret
out
xor
push
cmp
inc
cmp
xchg
push
pop
add
shlb
loop
cs
mov
jbe
arpl
aad
inc
dec
test
cmp
push
frstor
arpl
scas
add
jp
lods
mov
in
pop
in
pusha
jecxz
xchg
sbb
pop
sti
xlat
or
mov
sub
rol
cmp
call
lret
mov
js
dec
mov
push
push
xor
and
cmp
clc
pop
xor
loopne
roll
int3
adc
inc
dec
adc
jbe
adc
jmp
inc
rcr
cli
shll
test
mov
add
xchg
dec
xchg
add
out
cmp
xchg
add
mov
leave
pop
sub
pop
stc
in
out
add
cmp
fcompl
out
clc
clc
mov
das
xchg
mov
dec
xor
sub
scas
inc
rep
shl
shufps
sbb
mov
jl
xchg
lcall
out
ja
cwtl
mov
xchg
pop
xchg
add
pop
out
dec
xor
push
jo
mov
imul
dec
lret
sub
out
jecxz
aad
jmp
insb
dec
inc
in
jae
insl
pushf
ss
test
mov
xchg
lahf
std
or
push
test
ret
sbb
testb
push
jne
pushf
shl
pop
adc
imul
sub
and
cmc
out
adc
mov
xor
shlb
rorl
cld
mov
loopne
xor
int3
mov
xrelease
dec
fistl
ficoms
testb
mov
test
fs
ljmp
not
push
push
mov
outsl
or
jl
adc
dec
xor
jne
bound
adc
pop
jmp
cmp
push
xor
shlb
inc
push
std
inc
push
adc
aaa
or
test
pop
mov
imul
adc
mov
jl
shrl
mov
call
ds
push
cmp
movsl
sbb
xor
shrb
cs
je
and
dec
or
xor
enter
dec
push
data16
push
out
xchg
fisttpl
out
add
ss
mov
jecxz
cmp
pop
aas
iret
or
cmp
cs
lock
loop
xchg
sbb
mov
nop
or
or
dec
imul
push
cmp
stos
call
in
mov
popf
jecxz
sub
sbb
xorl
shrl
jp
insb
in
fiadds
add
popf
test
and
or
jg
repz
testb
and
push
pop
jnp
sarl
and
int
inc
jb
adc
mov
xchg
pop
iret
hlt
stos
pop
shll
in
addb
stos
imul
fldcw
test
sbb
pop
aaa
xor
or
lret
lcall
sub
fwait
mov
les
jae
fs
cmp
lahf
sbb
jbe
xchg
cmp
dec
loop
or
in
inc
cmp
push
xor
sub
pop
cmp
xchg
movsb
xchg
hlt
shrb
dec
insl
mov
jnp
out
icebp
mov
repz
jne,pn
cmp
mov
test
dec
ficomps
xchg
cltd
push
loope
mov
mov
inc
push
lcall
outsb
flds
dec
mov
rcrb
repz
imul
fistpll
pop
push
xchg
cmp
imul
jne
or
push
std
xchg
mov
mov
mov
adc
jns
pusha
insl
xchg
push
repnz
rorl
xchg
mov
push
in
ficoml
sub
add
pushf
jl
or
scas
xchg
mov
dec
mov
jl
mov
inc
call
mov
push
jg
sbb
cmpsl
les
out
push
aam
xchg
ss
ficoml
cld
xchg
cwtl
mov
cmpsb
mov
mov
push
jl
loopne
pop
or
ret
inc
jnp
sub
movsl
insb
sbb
add
imul
add
fwait
rorb
fistps
mov
push
mov
cmc
shrl
rolb
jno
cltd
mov
sahf
cmp
sub
cltd
lea
ficompl
test
rorb
inc
enter
push
pushl
and
ss
lahf
dec
fmuls
jle
stos
sub
lock
mov
cmp
ds
repnz
mov
lods
movl
pop
push
testl
iret
cs
mov
outsl
and
lods
stc
cmpb
sub
ss
dec
lahf
lret
mov
pop
iret
test
or
sub
cmp
cmp
pop
mov
dec
and
push
shlb
mov
fimuls
fsts
fnstsw
fdivs
xor
mov
xchg
jb
jmp
pop
pop
and
mov
inc
enter
jbe
mov
inc
cmp
js
pop
and
fs
adc
jecxz
cs
add
mov
or
dec
fisttpll
mov
aaa
das
jnp
push
jae
movsb
and
cmp
push
push
data16
xchg
test
orb
insl
call
movsb
bound
mov
dec
sub
sbb
add
int
pop
andb
push
repnz
mov
lods
stc
mov
xor
or
sbb
pop
sbb
mov
mov
cs
sbb
dec
push
mov
fmul
cld
insb
sete
xchg
pop
loop
int
mov
mov
cld
lahf
sti
iret
and
jbe
ljmp
pop
popf
leave
out
pushf
push
mov
pop
mov
jle
sub
out
jns
stc
push
lret
lods
dec
fxch
xor
mov
jg
xor
cld
jge
lret
cmp
dec
mov
inc
push
mov
in
cltd
insl
or
pop
and
scas
mov
negb
push
xchg
push
mov
mov
test
loope
mov
loope
arpl
sub
sbb
sub
gs
push
repnz
mov
lods
movl
hlt
js
mov
mov
cs
mov
lds
sahf
es
cmpb
sub
ss
adc
mov
imul
icebp
sub
cmp
shr
addr16
pop
cmova
xor
adc
fimull
shlb
push
mov
sub
daa
dec
jecxz
lret
aam
je
fxch
push
call
inc
push
or
sub
clc
xor
add
add
mov
mov
xor
xor
sbb
inc
addb
shlb
rcrl
jl
scas
xlat
ljmp
push
mov
push
insl
mov
adc
lret
into
pop
out
jmp
cltd
push
notl
imul
mov
inc
shr
jns
mov
cmp
or
fisubl
xor
loop
or
incb
outsl
xchg
adc
dec
cmpsb
outsl
push
inc
lock
jmp
or
jne
leave
loopne
jb
xchg
icebp
ljmp
mov
cmc
dec
xchg
cmp
sahf
std
aaa
rorl
mov
ljmp
sbb
add
mov
es
cmp
rcll
sub
pop
and
mov
cmp
add
and
cmp
xchg
inc
mov
movsb
adc
mov
jmp
dec
mov
and
ret
mov
xlat
aam
sub
ror
sub
in
rorb
repz
into
dec
outsl
in
lods
cmp
movsb
push
inc
jns
mov
orl
push
push
mov
xor
adcl
cwtd
bnd
mov
stos
lcall
scas
shr
fcmovnbe
and
push
int3
cmpsl
sub
stos
pop
push
out
ss
fwait
push
test
pop
or
pop
aaa
dec
cltd
in
and
lahf
sub
xor
jae
xchg
repnz
popf
mov
adc
ja
pop
cmp
push
pop
test
dec
iret
lock
call
cmc
mov
and
mov
test
fwait
cmp
dec
ret
js
xchg
hlt
dec
and
je
pop
and
jno
repz
pop
lock
pushl
dec
jle
inc
xchg
jbe
loope
aaa
or
and
jl
ljmp
mov
inc
sbb
jle
into
scas
fs
fwait
cmpb
sarb
mov
sub
into
cmp
in
mov
pcmpeqb
andb
lods
in
mov
xchg
xchg
mov
hlt
icebp
movsl
jae
mov
xor
adc
call
jecxz
adc
sbb
adc
shlb
jne
pop
adc
cmpsb
mov
cld
call
push
xor
pop
mov
rol
rorl
mov
scas
ds
and
test
jle
inc
fucomi
mov
popw
std
jne
xor
addl
insl
or
mov
adc
xchg
mov
and
cld
and
sub
and
mov
pop
adc
pop
dec
aas
jne
ret
ret
fidivrs
rcrl
sub
popa
mov
mov
inc
nop
je
popf
mov
popf
adc
idivl
imul
dec
stc
lea
xor
ficoms
lcall
xchg
mov
lcall
les
mov
cmp
add
sbb
in
add
repnz
fidivl
cmp
sahf
dec
mov
xor
les
jae
stos
int
adc
cmp
pop
outsl
test
outsb
add
mov
lret
mov
inc
out
mov
mov
xor
outsl
dec
add
outsb
cmp
mov
loope
shlb
aam
aam
test
pop
add
sti
mov
int
jns
jo
push
movsl
test
std
stos
pushf
sbb
stos
arpl
fsubrl
jb
cld
sbb
leave
js
scas
orl
mov
or
scas
enter
movsb
add
in
sbb
fimull
daa
mov
xor
int3
pop
mov
xor
mov
dec
out
daa
cmp
push
sub
lret
cmpsl
add
jl
mov
jp
xchg
push
out
push
push
mov
pushf
cli
xor
inc
adc
xchg
rorl
ds
dec
xchg
popl
loope
ljmp
or
add
imul
dec
sub
decl
clc
adc
adc
shlb
add
jl
mov
cmc
adc
push
pop
mov
in
cltd
sbb
push
sub
mov
cmp
dec
loop
sbb
pop
cmc
xor
fidivs
jmp
cmp
ret
inc
pop
push
adc
mov
jne
and
cld
dec
fists
and
sub
cmp
or
sbb
mov
nop
adc
push
movsl
inc
adc
faddl
push
aaa
adc
lcall
pop
data16
mov
sbb
out
out
mov
mov
mov
shlb
pop
xchg
xor
mov
movsl
xor
rcll
in
lret
push
fsubp
insb
push
lea
push
cmp
das
clc
cltd
add
jae
int
pusha
divl
push
lods
xchg
mov
dec
pop
lahf
lds
test
pop
mov
cmp
pusha
mov
mov
hlt
mov
mov
scas
xchg
jl
push
inc
sub
inc
mov
pop
adc
mov
jl
cmp
cmp
test
lcall
imul
cmp
sarl
cli
inc
addl
or
jecxz
cmp
leave
nop
imul
mov
imul
push
adc
js
rorl
stos
mov
lods
jle
dec
mov
xchg
and
cs
xchg
lahf
dec
pop
enter
pusha
add
hlt
imul
push
fldenv
or
dec
pop
hlt
or
sahf
xchg
icebp
ret
pop
or
mov
xchg
rcrl
pop
jle
sbb
pop
mov
mov
push
adc
mov
adc
inc
push
inc
adc
cli
jg
pushf
jae
and
iret
je
and
mov
adc
adc
push
sbb
adc
jl
xor
insl
popl
pusha
xchg
sbb
mov
or
cmp
movsb
fidivs
mov
out
sbb
gs
jbe
pop
outsl
loope
pop
push
dec
push
shlb
mov
sahf
add
xor
mov
dec
jecxz
sub
outsl
cmp
sbb
repz
add
arpl
dec
xchg
insb
jne
aaa
dec
adc
cmp
dec
test
xor
aam
lret
mov
loope
jl
mov
cmc
jns
adc
icebp
das
aas
movsb
outsl
sbb
jmp
mov
xor
hlt
rorl
pop
sub
cmp
jo
stc
adc
inc
jbe
or
je
loope
xor
loop
ficomps
push
add
ret
sbbl
mov
test
nop
insb
jae
js
or
pusha
into
push
add
cwtl
xor
fs
mov
sub
inc
xchg
jns
hlt
sub
jg
adc
xor
aad
fistps
xchg
and
inc
imul
jae
je
xchg
adc
test
imull
fsubs
and
mov
lahf
pop
add
stc
dec
lret
jae
mov
push
inc
xor
xchg
sbb
adc
dec
inc
xchg
dec
push
pop
repnz
sahf
sbb
icebp
shl
xchg
es
cmp
aam
fwait
xor
push
jno,pt
aaa
in
iret
inc
rcrl
fldln2
or
jnp,pt
rorl
das
insb
and
lret
test
cld
stos
cli
and
jns
inc
cmpl
rcll
push
mov
mov
mov
inc
mov
loope
iret
xchg
outsl
movsl
xchg
in
fdivr
lods
inc
pop
out
lret
sub
mov
fdivs
sub
imul
insb
lock
adc
stc
in
daa
imul
loope
out
inc
xlat
inc
filds
pop
cs
xchg
fs
popa
adc
xchg
push
adc
sub
jmp
lret
movsl
adc
dec
scas
popf
jb
push
sub
push
or
jno
adc
fwait
jo
inc
xchg
shlb
push
gs
pop
cltd
ja
mov
and
dec
and
rcll
pop
jge
inc
psrld
addr16
xchg
iret
movsl
and
push
sbb
jg
adc
in
sbb
cwtl
int
lret
cmp
push
cltd
sub
xchg
xor
popf
cltd
and
xchg
pop
shrb
xchg
repnz
lods
sub
and
lods
jg
mov
and
dec
repnz
mov
xchg
or
fwait
jmp
int3
jecxz
ljmp
mov
lahf
out
jecxz
adc
fdivl
stos
push
mov
xchg
mov
inc
lds
daa
cltd
push
jns
pop
add
daa
adc
es
mov
mov
xchg
cmp
in
sub
in
or
and
stos
icebp
std
dec
mov
jl
xor
mov
and
or
fabs
sub
fildll
movsl
rclb
push
dec
cmpl
jb
mov
push
aam
jae
and
push
rorl
xor
and
mov
andb
dec
pop
add
mov
or
les
lret
daa
mov
test
jmp
jnp
repnz
push
push
test
ret
lods
push
cmc
sub
stc
out
cmp
sub
mov
jb
dec
lahf
mov
mov
and
in
movaps
rol
je,pn
dec
adc
xor
xor
push
mov
fsub
push
fs
ljmp
ss
movsb
in
sub
sbb
xor
es
mov
movsl
mov
rorb
jle
insb
mov
insl
not
faddl
jb
add
mov
pop
xor
push
rclb
push
std
lcall
stos
aas
je
pop
sbb
mov
fldl
push
mov
ja
dec
inc
in
mov
cmp
in
mov
daa
inc
pop
push
popa
or
sti
mov
push
dec
push
out
enter
sahf
jg
cmp
sub
cmpsb
xor
leave
lods
cmc
and
xchg
or
stc
in
cwtl
inc
imul
push
nop
pusha
pop
mov
sahf
mov
and
sbb
movsb
repnz
neg
pop
inc
adcb
pop
cmp
sbb
lea
lea
mov
aad
gs
mov
or
cmp
sahf
hlt
cmp
jg
adc
or
xor
dec
pop
inc
and
addb
ds
andb
cmpsb
mov
or
adc
sar
or
data16
std
pop
addr16
lods
mov
nop
pop
fldenv
imul
icebp
cltd
dec
mov
add
nop
pop
fldenv
imul
add
adc
sbb
sub
lea
sahf
ret
pusha
lea
leave
inc
mov
in
decl
sbb
xor
cltd
bound
mov
jecxz
stc
sti
fmuls
stc
cltd
and
test
imul
mov
outsl
imul
pop
push
je
je
fstpl
les
rcrl
inc
inc
pop
mov
aam
pop
push
push
push
add
daa
cmp
test
fmulp
test
sbb
add
test
or
icebp
popl
subl
faddl
mov
jp
cmp
cmpsl
jo
stc
loope
mov
push
or
jge
rorb
add
test
mov
or
mov
iret
add
std
out
bound
push
pop
adc
mov
xchg
mov
cs
pop
sbb
adcb
push
rcl
cmp
ficoml
pop
mov
insb
cmpsb
mov
mov
movsl
pop
cmp
xor
adc
mov
mov
das
inc
mov
mov
cmp
sub
cmpsw
lds
imul
push
roll
sti
xchg
inc
xchg
mov
je
mov
inc
sbb
mov
pop
movsl
mov
fstpl
cvtdq2ps
xor
push
jg
add
test
notb
scas
rolb
dec
inc
scas
sub
std
repnz
lret
or
inc
enter
lret
sub
or
pop
xchg
jl
jae
pop
sbb
mov
imul
and
inc
xchg
push
ja
mov
addr16
mov
dec
std
repz
clc
jmp
rorb
call
pusha
xor
add
daa
jb
sbb
mov
xchg
jg
push
dec
and
xchg
in
icebp
pop
pusha
and
aas
inc
stos
mov
mov
aaa
lret
sbb
out
fwait
in
push
xchg
bound
xor
inc
pop
cmp
repz
in
or
mov
dec
in
les
push
sub
popa
dec
jle
push
stc
sbbl
insl
mov
mov
in
mov
outsl
sub
rol
cwtl
stos
fmull
pop
negl
cld
scas
test
mov
mov
lahf
xor
mov
pusha
jnp
and
insl
push
sub
movsl
sti
sbb
inc
sub
inc
push
pop
dec
or
into
sarl
or
sti
lods
icebp
pusha
out
into
xchg
jns
sbb
sarb
jo
and
sahf
dec
xchg
fstpl
shl
testb
push
in
jle
popf
in
add
imul
stc
imul
leave
sahf
insb
sahf
loope
fadds
addr16
jnp
lcall
mov
jns
cltd
pop
shll
sbb
sub
push
push
pop
cmp
popa
push
outsl
sti
pop
mov
mov
jmp
outsb
jnp
mov
ss
in
js
aad
mov
inc
xor
jg
dec
sbb
movsl
adc
sbb
arpl
xchg
pop
les
jp
mov
idiv
test
add
repz
imul
mov
jne
and
sub
adc
add
and
fcomp
int3
jecxz
jge
or
fcoms
ljmp
cmpsl
fwait
sbb
sahf
xchg
inc
test
push
add
pop
adc
jno
jnp
mov
inc
popf
and
xchg
pop
mov
cmc
xor
and
popf
jmp
xchg
scas
adc
push
daa
pop
sti
sub
add
adc
repz
lahf
xchg
pop
dec
cld
aaa
and
nop
xor
xchg
mov
clc
ljmp
jge
rcl
aad
cmp
jge
push
ret
decl
fs
mov
pop
orl
jmp
xor
mov
mov
out
fsubl
mov
cmp
into
or
je
inc
xchg
cmp
mov
ds
test
or
lock
fisttpll
jmp
movsl
mov
add
push
pop
data16
loopne
fistpl
outsl
jge
test
dec
mov
lret
test
jmp
fwait
push
jnp
int3
xor
into
mov
icebp
jle
or
enter
dec
outsl
or
xor
push
adcl
insl
lock
sbb
push
add
xor
sbb
out
sub
dec
mov
add
and
je
sbb
mov
sbbb
jl
and
je
ss
insb
mov
sub
sbb
test
ljmp
sub
push
xor
rorl
sarb
mov
pop
xor
inc
hlt
notb
xchg
jle
stc
push
js
shll
fcomps
ret
fistps
mov
or
push
int3
sti
cmp
mov
cmp
lcall
jbe
je
mov
push
cmpsb
insb
and
mov
mul
mov
adc
scas
xchg
pop
movsb
pop
dec
push
fmull
sub
pop
jg
in
and
sarl
mov
push
ds
mov
idivl
dec
enter
lret
or
xorl
test
dec
les
fmuls
imul
cmpsl
iret
mov
fwait
xchg
pop
cld
nop
roll
xchg
shr
xchg
mov
jo
push
stos
xor
fs
adc
mov
push
mov
mov
leave
xchg
aad
insl
mov
stc
add
lock
daa
fistpll
mov
lahf
sti
in
dec
ss
jle
js
mov
lahf
mov
leave
test
icebp
dec
sti
dec
dec
jecxz
dec
push
mov
dec
add
in
mov
mov
add
lcall
sub
sub
shlb
ljmp
les
jmp
dec
xor
sub
mov
ljmp
mov
and
sub
add
leave
mov
push
and
adc
lods
mov
adc
imul
mov
mov
mov
lahf
mov
pop
xchg
les
add
ret
cmp
xor
mov
push
xchg
cmp
outsb
sarl
pop
or
add
mov
das
imulb
pusha
outsl
mov
test
fwait
mulb
mov
lock
pop
pusha
pop
in
pop
and
dec
das
aas
push
xchg
sub
jmp
mov
sbb
mov
sub
pushf
lea
lock
push
loop
subl
sub
jmp
and
mov
xor
sbb
add
fwait
test
jmp
xchg
xchg
pop
mov
rorb
int
stos
jecxz
cmpsb
dec
popf
in
fstl
fdivrl
faddp
shll
pop
cltd
out
mov
jno
arpl
ror
imul
mov
push
sub
in
test
jae
xor
jb
imul
out
xlat
push
les
jp
int3
neg
nop
inc
out
mov
dec
repz
idiv
gs
fwait
lcall
push
pop
sub
imul
js
jle
jae
lds
and
dec
fcmovb
cmp
jge
push
bound
ljmp
cmpsl
les
negb
sti
push
mov
push
push
in
in
mov
popa
mov
call
sub
fcomi
ret
jbe
shlb
mov
stos
push
inc
imul
fadds
ja
jge
mov
sti
iret
test
das
xchg
mov
jo
xor
out
sti
ds
pop
test
jp
mov
push
mov
mov
stos
or
movsl
xor
adc
sub
or
xchg
fisttps
addb
ds
andl
stos
mov
add
cli
out
or
sub
int
add
fs
push
mov
scas
xchg
fisubrs
or
pop
es
mov
lock
xorl
cmp
mov
sub
inc
int3
adc
rcrb
cld
sahf
andl
stc
outsl
xor
inc
std
cld
std
dec
insb
xor
xchg
sub
je
jo
int3
test
std
lea
xchg
loop
jmp
and
shrb
nop
ja
push
frstor
sbb
sbb
jp
fists
jmp
xor
cmpb
mov
divl
adc
lds
xchg
add
add
xchg
cmp
loope
xchg
test
idivl
xchg
xchg
mov
push
xor
push
cmp
inc
lock
mov
and
idivl
pop
xchg
aaa
jecxz
dec
arpl
mov
popa
cmp
lock
test
out
sub
and
aaa
xchg
mulb
dec
mov
cmp
es
and
cmp
xchg
cmp
imulb
sbb
mov
in
ljmp
dec
dec
fcmovu
ja
cmp
and
mov
lret
idivl
sub
sub
sbb
addr16
cmpsb
aam
mov
test
lret
test
scas
mov
or
bound
mov
loop
xchg
mov
cwtl
outsl
insb
sbb
adc
dec
sub
push
add
sarl
add
or
or
enter
xor
rcr
mov
jae
stc
xchg
icebp
cmc
jo
pushf
dec
jb
cs
test
or
cmp
stos
or
ds
or
cltd
negl
fists
daa
ret
jb
xchg
ret
loopne
or
dec
pop
mov
rol
clc
cmp
lods
lods
dec
add
int
xchg
or
popf
outsl
cwtl
cmp
test
lea
repz
getsec
mov
je
inc
shll
or
push
nop
movsb
mulps
rol
jb
lret
enter
fnstsw
dec
push
iret
out
xchg
sarb
mov
push
ds
jbe
jb
pusha
xchg
xchg
mov
xchg
mulb
mov
lock
pop
pusha
jne
pop
mov
and
mov
out
nop
aas
cli
adc
ds
or
xchg
in
jecxz
add
mov
lock
pop
sub
mov
hlt
or
cmp
stc
rcrb
inc
gs
stos
data16
out
xchg
push
adc
mov
insl
scas
push
pop
push
not
rcll
fnstcw
adc
mov
mov
sbb
scas
rclb
jecxz
aad
cs
jp
sbb
xor
and
mov
cmpsl
fnsave
mov
loop
mov
aam
mov
sbb
xlat
test
dec
cmp
adc
andl
push
mov
xor
adc
fidivrl
cmp
test
inc
xchg
push
add
jae
push
arpl
or
xchg
cmp
pop
cmpsb
xchg
add
xor
andl
adc
cmp
push
test
push
dec
inc
adc
enter
loop
sbb
xlat
xchg
push
cmp
sub
inc
jbe
adc
mov
fsubrs
mov
cmp
lods
cmp
ds
hlt
add
sbb
icebp
xor
xlat
mov
into
pop
mov
and
nop
insb
adc
jecxz
mov
or
push
nop
call
cmpl
sti
cmp
mov
mov
test
adc
pop
popf
in
inc
sub
add
je
push
jp
add
ret
out
jo
movsl
push
adc
test
pop
xlat
xor
out
clc
mov
add
push
insb
push
pop
pop
mov
into
mov
dec
ret
and
dec
mov
ss
cltd
add
inc
es
popa
cmp
push
add
js
cmpsl
jge
sahf
push
mov
pop
test
push
divb
lret
aad
test
repz
nop
lret
xchg
hlt
mov
pop
jo
orb
out
aad
add
inc
je
sub
cmpsl
insl
cmp
pop
mov
shll
xchg
or
sbb
mov
rcll
mov
pop
push
inc
cli
or
test
mov
jg
push
lods
ljmp
aaa
inc
sbb
mov
hlt
adc
inc
out
push
subb
xor
jae,pt
imul
stos
lds
mov
add
cmp
push
mov
push
imull
fidivrs
pop
rol
pop
fsts
pop
push
cltd
sahf
xor
xchg
mov
push
or
adc
mov
bound
shlb
inc
xchg
cmp
cld
adc
push
repz
imul
jl
loope
sbb
aad
sub
or
adc
dec
stc
enter
cltd
cmp
cwtl
mov
xlat
fmuls
ljmp
aas
test
gs
mov
dec
lock
stc
push
out
mov
pop
pop
dec
sbb
mov
lret
cli
inc
ja
shll
int3
rcrl
jne
pop
push
dec
xchg
xchg
dec
ds
outsl
fwait
cld
mov
push
out
xchg
push
jb
bound
cwtl
out
loope
lods
pop
fnstenv
rol
dec
xor
mov
jns
adc
lret
inc
cmp
xchg
inc
push
fsubrl
into
clc
lock
icebp
subl
inc
jmp
sub
cmp
imul
sub
cmp
push
push
pushf
fmuls
dec
shrl
dec
lds
xchg
ds
mov
arpl
fnsave
clc
adc
adcl
outsb
imulb
std
les
dec
dec
jge
aas
les
push
das
inc
scas
sar
lock
rcl
inc
sbb
dec
dec
out
push
insl
mov
push
add
sub
adc
imul
pop
shlb
nop
dec
fldt
sti
js
notb
or
pop
test
cld
addl
shlb
pop
in
bound
xchg
xchg
pop
rorl
imul
xchg
std
add
mov
aam
cmp
mov
icebp
data16
repnz
out
test
sub
aas
add
in
push
xchg
loop
jbe
mov
jns
xchg
jnp
push
ficoml
leave
push
add
inc
sbb
adc
jno
imul
ret
xchg
lret
ret
outsl
inc
xchg
inc
or
mov
inc
push
xor
rcrl
xchg
mov
cwtl
daa
cwtl
out
adc
push
icebp
ret
into
aam
inc
out
cmpsl
sbb
adc
mov
mov
movsb
add
push
jecxz
push
jo
cmp
out
movsl
inc
sbb
nop
push
orl
clc
push
aam
pop
adc
pop
sbb
fiaddl
shlb
daa
je
ds
data16
repnz
sbb
add
pop
push
insb
mov
jecxz
out
sub
xchg
testl
push
mov
xor
out
fwait
cmp
sahf
test
xor
xchg
pop
add
hlt
inc
clc
mov
cmp
imul
sbb
push
rolb
ds
mov
ret
call
aaa
loope
stos
mov
or
sub
addr16
sbb
sbb
mov
movsb
pop
add
mov
iret
ds
sti
inc
adc
mov
lea
std
cmc
or
mov
in
xchg
movsb
flds
push
adc
int3
mov
fisubrl
rcrb
add
sbb
lret
push
sub
stc
notb
arpl
xchg
mov
or
stos
and
push
push
sub
or
xchg
in
sbb
dec
sub
cmp
mov
add
lea
pop
out
movsb
jae
cltd
jle
lcall
jbe
jecxz
addb
test
pop
or
leave
sub
sbb
std
out
cmc
pop
push
les
sub
push
mov
daa
popa
adcl
add
loop
in
loope
push
test
push
xchg
adc
mov
jp
sbb
enter
jbe
shr
push
cmp
repz
idiv
adc
jb
jp
ss
mov
mov
mov
xor
xlat
hlt
xchg
sbb
arpl
jno
push
or
add
je
imul
aaa
ja
daa
pop
stos
add
jno
xor
push
cmp
jecxz
xor
sbb
lds
movsb
push
or
jg
cmp
fists
mov
mov
shll
add
cmp
ljmp
aam
dec
add
jne
ljmp
lock
popf
pop
das
mov
add
xchg
inc
lahf
int3
imul
addr16
fisubs
jmp
mov
sub
push
adc
call
inc
jl
cmpsb
out
or
and
dec
lock
sbb
mov
jns
mov
jl
jmp
ret
aam
jmp
les
sbb
pushw
xor
or
ror
add
aad
mov
inc
mov
xchg
mov
sbb
xchg
int3
xchg
mov
ret
test
aam
sbb
arpl
xchg
sub
arpl
add
mov
xchg
jne
adc
sub
lahf
push
out
sub
adc
mov
enter
into
sahf
ds
or
scas
jns
clc
loope
cmpsb
mov
inc
sahf
mov
pop
or
mov
lods
jge
ret
sub
or
jp
sub
or
jb
fisttps
adc
or
mov
xorb
dec
sarb
mov
adc
mov
and
shll
add
push
out
sbb
mov
stos
mov
ret
std
jbe
sub
neg
xchg
std
or
sti
stos
stos
pop
and
clc
sbb
shl
ja
outsb
inc
pop
pop
mov
ret
push
mov
mov
push
fimull
mov
andl
cmp
pop
xchg
and
xor
popa
xchg
sub
mov
or
mov
inc
aam
ljmp
mov
jmp
mov
adc
push
pop
test
mov
sti
lret
testb
pop
mov
or
lock
mov
rorb
jg
scas
dec
ficomps
mov
lds
xchg
jp
into
ja
adc
push
loopne
mov
fdivs
ss
jecxz
mov
push
jmp
add
fstpt
pop
sbb
repz
aad
cmc
scas
outsl
subb
inc
sub
shrb
enter
jmp
or
lret
lock
or
or
daa
movsl
xchg
inc
bnd
dec
fistps
iret
and
mov
gs
add
stos
in
loope
stos
xor
jle
inc
inc
movsb
data16
out
cmp
add
inc
es
xchg
mov
push
xchg
pop
sbb
loopne
adc
sub
mov
aas
cltd
xchg
push
mov
jg
test
scas
sbb
in
adc
mov
sbb
scas
add
insb
dec
sbb
ror
mov
and
sub
xor
imul
pop
sbb
cmp
cmpsb
cld
loopne
cli
orb
ds
push
adc
add
pop
push
inc
adc
push
hlt
sarb
out
lods
xchg
imul
fnstenv
xor
add
mov
out
fistpl
jne
test
cmp
cli
xchg
jns
aam
jo
loop
inc
repz
in
adc
jecxz
stos
cmpsb
test
xchg
cmp
jp
or
mov
sub
push
jnp
lahf
aas
ja
int3
push
mov
sbb
nop
stos
or
scas
shlb
insl
fdivrs
movsb
mov
pop
lods
push
push
xchg
dec
cmp
or
push
out
or
cmc
loope
movsb
adc
ret
outsb
fnstsw
enter
push
and
pop
sbb
adc
sbb
sbb
push
jl
mov
mov
jl
xchg
jg
sarl
mov
pmullw
into
mov
aaa
jnp
push
sub
testb
sahf
pop
pop
call
inc
sbb
add
inc
xor
xor
in
imul
fucom
repnz
add
pop
mov
arpl
ss
lods
add
dec
test
mov
jns
imul
xchg
fldl
push
ss
pop
and
popf
mov
sub
sbb
mov
shll
lret
repnz
enter
jl
adc
push
cmpsl
out
lods
movsl
loop
mov
inc
out
dec
push
jg
cmp
jo
push
aam
or
push
xor
pop
jae
mov
xor
mov
daa
int
jg
out
aad
mov
pop
cmp
enter
cwtl
push
out
pop
loop
loopne
fnstcw
mov
cmp
insb
pusha
cld
add
add
lods
incb
popf
add
int
xchg
das
loop
dec
iret
cld
movsb
sbb
pop
data16
xchg
bnd
sbb
in
jge
cmpsb
lea
fisubl
dec
sbb
push
aam
adcb
inc
ret
dec
pop
mov
cmp
js
push
outsl
stc
push
cmpsb
inc
lret
stos
sti
cmpb
aas
ljmp
dec
adc
adc
ror
mov
or
outsl
or
stos
pushf
or
xor
shrl
lcall
jns
xchg
push
popa
std
and
mov
repnz
in
loope
mov
std
into
dec
rolb
icebp
rcrl
test
test
adc
jecxz
xor
cmp
call
rcl
addb
faddp
ret
and
jl
in
jg
or
int3
push
dec
and
mov
das
push
stc
lcall
inc
xchg
add
push
ret
imul
sbbl
fnstcw
lahf
add
insb
aaa
mov
push
dec
lods
or
outsb
out
pop
mov
shrb
jp
shl
fisttpll
pop
leave
movsl
mov
and
mov
jbe
aas
shll
pop
stc
cmpsb
sbb
ja
or
leave
test
ljmp
enter
jg
cs
fisubrs
lcall
xor
sub
xchg
addr16
jle
lahf
divl
xor
ror
shlw
fidivrs
mov
mov
andl
popl
inc
addr16
cmp
jp
cmp
pop
add
pop
jmp
xchg
inc
clc
sbb
ds
subb
xor
es
sbb
lret
add
int3
sub
inc
dec
js
and
enter
pop
push
bound
fdivl
in
fisubl
mov
pop
fisttpl
fstl
div
inc
xor
mov
mov
push
mov
addr16
adc
pop
jge
out
sbb
loop
adc
push
mov
std
push
mov
sbb
ja
mov
or
add
push
add
xor
div
lcall
adc
lods
std
jle
insb
shr
cs
insl
addb
dec
movsb
andb
sbb
inc
outsb
sarb
andl
inc
pushf
adc
jmp
mov
sbb
fs
aaa
mov
arpl
mov
add
test
pop
or
jo
push
sub
loope
cmpsb
clc
and
xchg
getsec
addr16
mov
fwait
mov
or
sub
bound
xchg
xchg
enter
repnz
pop
xchg
push
stos
jmp
inc
push
sub
mov
push
push
fildl
mov
adc
lea
inc
or
sbb
outsl
in
sbb
sbb
xor
sbb
inc
sub
mov
out
test
pop
or
xor
fisubl
pop
pop
mov
sub
sub
jns
jo
and
pop
or
loopne
pop
out
dec
mov
add
jg
mov
jecxz
adc
inc
outsl
in
add
into
arpl
xor
and
adc
sbb
add
xor
sub
loope
or
sbb
cwtl
or
or
orb
daa
xchg
js
insl
mov
jmp
mov
and
outsb
jecxz
idivl
xchg
enter
lahf
daa
ljmp
xor
mov
addr16
nop
inc
jb
adc
sub
int3
add
sbb
or
mov
pop
data16
sub
fiaddl
pop
pop
cmp
mov
andps
scas
or
cmp
std
fcmove
or
nop
xor
push
push
jnp
jmp
aad
mov
adc
ret
cmp
inc
sub
jg
push
fldl
cmp
xor
lods
shrb
out
gs
ret
mov
test
mov
mov
mov
mov
lret
push
xor
adc
sub
popa
add
scas
out
sbb
mov
cmpsl
inc
dec
mov
test
mov
lods
adc
je
mov
and
lods
or
sub
jne
mov
pop
xchg
push
cmp
sbb
fldl
bnd
fdiv
ret
add
data16
icebp
xchg
jmp
repnz
cmp
je
cmp
adcl
push
push
lods
fidivl
cmp
dec
pop
jne
jno
testb
push
lock
mov
mov
lea
aam
sub
mov
push
sbb
stos
movq
sbb
push
aam
mov
adc
int3
fsubs
adc
push
add
cli
push
andnps
in
mov
sbb
test
adc
push
or
ss
frstor
and
addl
out
imul
fstl
adc
mov
sub
xchg
sbb
xchg
xchg
cmp
aas
dec
test
mov
out
dec
rorb
push
fstpt
adc
pop
outsb
xchg
pop
push
bound
pop
push
outsb
jne
cmpsl
jae
cmc
dec
xchg
mov
imul
xorl
push
insb
mov
dec
dec
xchg
inc
or
xchg
cmp
sub
lea
mov
pop
jecxz
or
jbe
jno
sahf
pop
inc
mov
aad
in
div
jns
adc
fs
lds
pusha
jno
lahf
mov
jo
lahf
or
xor
sbb
dec
sbb
in
xchg
jl
fmul
cmp
mov
pop
movsb
addr16
jmp
mov
push
mov
es
mov
movsl
hlt
mov
xchg
dec
icebp
ficoml
call
loop
pop
pop
pusha
sub
push
lahf
sarl
lret
movsb
ret
xchg
daa
aad
xchg
push
repnz
xchg
into
lds
or
mov
inc
mov
ror
adcl
mov
gs
shrl
andb
imul
sbb
jl
pop
loope
mov
push
stos
popa
jae
fdivl
in
stos
sbb
xor
int3
jmp
mov
adc
mull
into
mov
ror
aaa
jnp
lcall
cli
ret
mov
pop
std
and
and
mov
jae
lods
test
test
sub
mov
xchg
sbb
jno
jle
cmc
popf
push
mov
xor
mov
ds
xor
imul
fdivs
adc
repz
loop
jae
imul
loope
icebp
dec
fstl
xor
mov
xchg
mov
data16
lea
iret
mov
in
inc
xor
push
xchg
fimuls
in
mov
xchg
jmp
mov
inc
pushf
outsl
xchg
jb
push
scas
sub
pushf
fisubrl
jb
xlat
out
or
jbe
push
out
icebp
mov
mov
or
arpl
sbb
into
testl
lret
add
ja
jecxz
and
cmp
lret
mov
lods
rcl
les
aam
mov
dec
push
pop
push
roll
and
sbb
push
jecxz
jp
in
jecxz
mov
movl
mov
push
pop
lahf
xchg
xor
mov
incb
mov
xor
xchg
push
jae
inc
mov
pop
jbe
mov
cli
xchg
clc
cmp
push
sbb
jno
movsb
lods
add
xchg
rcll
leave
nop
pop
icebp
sarb
fistps
in
jne
xor
jmp
fists
cmp
pop
call
gs
addr16
sbb
stos
out
pushf
aas
add
std
sub
ss
sub
or
adc
sbb
repz
xchg
pusha
cmp
lock
out
jecxz
add
scas
push
add
rol
dec
jecxz
mov
and
movsb
cmc
xor
fwait
in
test
dec
dec
movsb
movsb
dec
filds
mov
loope
add
dec
sub
pushf
mov
pop
fildl
popw
mov
repz
jle
inc
hlt
pushf
popf
cmp
nop
enter
add
jnp
push
sub
mov
hlt
xor
fwait
out
out
add
push
inc
test
cmp
mov
pop
shlb
scas
lds
dec
push
sbbb
ficoml
imul
lods
call
sub
iret
movsl
scas
pop
out
mov
sbb
rorl
lea
inc
hlt
arpl
arpl
jmp
or
sti
mov
mov
pushf
imul
fcoms
popa
and
dec
mov
jg
add
xor
pop
adc
jbe
add
jl
arpl
enter
sbb
popa
call
mov
mov
nop
outsb
push
sub
out
jb
mov
xor
insb
adc
sub
dec
dec
adc
jns
in
or
aad
jne
mov
js
hlt
icebp
mov
lret
lods
or
or
mov
sbb
mov
pop
xchg
xchg
and
insl
jno
js
mov
cmc
je
jns
dec
pop
dec
hlt
les
adc
add
imul
mov
in
pop
dec
dec
fld
dec
dec
push
pop
js
xor
movl
imul
mov
cmp
or
imul
lcall
push
jno
mulb
xchg
push
cs
sbb
jmp
push
and
clc
jb
icebp
dec
jl
push
stc
jg
in
jo
xor
inc
push
mov
orb
mov
popf
push
dec
popf
push
dec
jo
push
adc
cmp
pop
lahf
leave
loope
xor
mov
pushf
into
mov
cld
cltd
cwtl
ficompl
mov
dec
movb
xchg
or
bound
mov
lahf
jmp
fnstenv
jne
mov
js
mov
adc
mov
cmp
outsb
stos
sti
cmp
fcoml
scas
or
inc
mov
notl
mov
inc
mov
add
out
stos
push
jl
inc
out
int3
cwtl
xor
cmpsl
mov
jmp
hlt
adc
jnp,pn
mov
xor
lret
xchg
mov
int
pop
sub
leave
nop
pop
icebp
sarb
push
add
std
rorb
xlat
pop
fs
push
ficoms
push
lea
hlt
mov
popf
test
les
and
add
test
or
dec
mov
mov
push
jmp
test
or
iret
xchg
insl
and
dec
sbb
aas
adcb
dec
rcl
add
cmp
jecxz
scas
mov
fbstp
mov
sti
mov
jb
in
mov
mov
out
dec
dec
incl
pop
mov
lods
arpl
xchg
nop
mov
jne
pop
xchg
out
loop
pop
pop
push
jmp
jae
xchg
or
mov
test
fadds
pusha
mov
inc
pusha
mov
mov
scas
call
or
dec
orl
cmp
push
adcl
mov
inc
mov
stos
ss
add
mov
lahf
in
dec
dec
adc
jns
in
ret
mov
jmp
mov
in
loope
inc
mov
mov
icebp
mov
mov
jnp
lahf
into
leave
nop
pop
icebp
sarb
xor
lret
inc
les
out
mov
push
cmp
sar
inc
and
test
test
push
pop
inc
roll
movsb
mov
jne
rcll
jns
pusha
dec
mov
stos
or
sbb
push
push
dec
cmp
push
ja,pt
sbb
inc
mov
inc
ficomps
sbb
repnz
or
iret
test
jo
roll
aam
jl
pop
cmpsl
or
inc
pop
mov
les
pop
rorl
faddl
popa
stos
dec
pop
mov
dec
xor
stos
data16
jge
or
pusha
mov
mov
idivl
in
or
cmp
ficoms
aam
sti
aas
push
pop
push
pop
lahf
cmp
stos
out
cwtl
adc
loop
jg
int3
adc
or
mov
icebp
lcall
dec
or
push
inc
jne
insl
push
sti
ret
repnz
lret
mov
test
enter
mov
aaa
negl
addr16
loop
lret
mov
sub
enter
jno
clc
testb
popf
xchg
lods
cmp
stos
cmp
mov
jl
mov
bound
movl
je
loope
in
and
xchg
jg
push
fisttpl
mov
jecxz
mov
pop
lods
push
mov
cwtl
dec
loope
pop
mov
sbb
lea
mov
mov
jns
out
fistpl
call
gs
repz
mov
pusha
or
or
mov
int
and
push
aas
out
xor
out
jl
pop
cmpsl
or
jl
add
in
loopne
jno
mov
dec
ret
jns
inc
jge
insb
pop
in
fwait
aaa
insb
inc
mov
xchg
jmp
rcrl
mov
loopne
and
xchg
fldenv
fidivl
xor
mov
xorb
test
xchg
sti
sub
jo
dec
adc
mov
imul
mov
add
ret
daa
dec
mov
jecxz
das
adc
push
lds
xor
out
mov
xchg
nop
adc
push
jmp
sub
lret
mov
and
and
out
sbb
out
jl
pop
cmpsl
or
adc
dec
imul
mov
jns
sbbb
imul
fidivrs
scas
lahf
test
rorb
inc
enter
add
mov
and
mov
xor
jne
push
mov
and
jl
addr16
sbb
jnp
bound
fcmove
lods
sub
pop
mov
cltd
sysret
lock
xchg
push
jmp
xor
mov
sub
mov
in
lret
cltd
mov
mov
movsb
je
add
jno
cmp
cltd
fs
push
in
and
and
out
cld
jb
sub
lods
test
push
push
jno
mov
push
out
cmpsl
adc
push
cmp
jo
sub
inc
hlt
fisubs
or
test
adc
insl
shll
cmpb
jne
push
mov
sbb
xchg
xchg
int3
jl
iret
push
clc
xor
popf
leave
jne
mov
or
push
pushf
dec
loop
movsl
sub
fisubrs
mov
xchg
push
adc
unpcklps
push
xlat
push
pushf
cwtl
xlat
xorl
call
jne
inc
sub
pop
cwtl
out
aas
rcll
jmp
jno
icebp
mov
scas
mov
rcl
mov
or
shrb
push
pop
xor
mov
fs
push
stc
push
into
xor
or
jmp
jl
addr16
out
in
dec
inc
stos
call
cmp
loope
push
jmp
xlat
and
or
out
jle
add
cmpsl
jne
inc
sub
xor
pop
mov
imul
pop
dec
repnz
jae
out
outsb
sub
lea
cs
mov
mov
mov
and
jbe
jb
or
and
out
flds
lods
mov
adcb
subb
mov
cmp
out
mov
inc
and
lahf
sub
shl
div
shlb
int
cmc
enter
stos
xorb
jbe
xchg
lea
pop
je
lds
inc
pop
rolb
ret
enter
inc
mov
push
cmp
mov
out
inc
add
mov
shlb
rolb
andl
xlat
push
popf
aad
dec
dec
or
dec
mov
and
fsts
addr16
mov
mov
jg
into
push
sahf
clc
imul
pusha
cltd
cmpsb
outsb
ret
lcallw
add
lret
out
mov
dec
test
mov
dec
shrl
aas
mov
subl
sarl
lods
out
imul
fcomps
nop
test
adcb
int
jb
nop
mov
xor
pop
dec
or
rclb
dec
dec
xor
mov
gs
mov
in
adc
popf
xchg
pop
push
mov
push
rorl
push
push
movsb
out
hlt
in
mov
inc
cwtl
or
dec
test
mov
mov
push
in
scas
dec
xlat
mov
es
xor
mov
fisubs
xor
out
flds
aam
popa
jp
xchg
ret
hlt
mov
les
xor
cltd
sbb
adc
sbb
in
fdivrs
adc
cmpsl
loop
mov
mov
cmc
push
mov
ss
mov
cmpsb
fistl
stos
mov
dec
aad
nop
sarl
call
fcomps
lret
movsl
lea
mov
into
lea
ret
cld
jp
pop
mov
icebp
aam
xor
inc
xchg
mov
jl
cmc
push
push
cmc
test
sbb
mov
pop
mov
shll
push
daa
pop
test
and
sahf
lret
push
sbb
hlt
outsl
push
mov
sub
inc
dec
pop
jns
cmpsb
lahf
jl
arpl
xchg
daa
fdivrs
imul
out
xor
ret
mov
call
pop
call
incb
mov
imul
negl
orl
ret
lock
nop
stos
mov
sbb
fcoms
sarl
call
hlt
call
push
xchg
mov
inc
in
js
lret
orb
std
arpl
rcr
movsl
sub
push
or
pop
lds
pop
jecxz
in
bound
jge
test
cli
pop
xchg
call
pop
add
or
sbb
and
pop
out
xchg
jl
or
enter
jmp
jae
or
inc
mov
sub
dec
pop
andb
or
orl
mov
les
int
mov
scas
xor
or
xchg
out
ficoms
mov
decb
adc
and
xchg
mov
lods
cmp
cmp
mov
stc
in
sbb
jg
push
mov
and
fdivrp
sbb
addl
mov
int3
insl
mov
call
lahf
insb
fidivrl
mov
lock
mov
ror
enter
or
jbe
test
repz
push
mov
pop
inc
xchg
jp
jmp
sub
mov
rorl
sub
cmpsl
nop
adc
push
xor
mov
add
jmp
mov
rcll
jb
aas
jb
sarl
repnz
mov
lahf
clc
cmpsb
jp
lret
add
lods
je
cmpl
mov
fcmove
ret
and
or
insb
outsb
jecxz
mov
mov
pop
ds
sbb
test
dec
ret
out
es
sbb
and
ret
repz
popa
inc
add
js
jle
loop
shrb
sbbl
mov
popf
push
jg
lret
stos
xchg
push
xchg
lds
mov
jge
add
dec
mov
movsb
xchg
and
mov
icebp
hlt
jno
dec
push
cs
push
out
notb
ret
pop
jnp
cwtl
xchg
mov
es
cmp
mov
push
add
stos
xor
xor
arpl
loope
xor
pop
pop
stc
mov
add
stos
push
test
jno
xor
popf
jl
into
jnp
xchg
xchg
jle
xor
out
pop
pop
jo
rolb
inc
fdivl
daa
mov
add
sbb
mov
pop
sar
fsubl
shll
mov
and
scas
xor
xchg
mov
lret
add
inc
inc
push
cmp
dec
repnz
cmp
clc
xor
ljmp
or
and
cld
or
sub
fnstsw
out
mov
xchg
dec
mov
mov
add
cltd
inc
and
adc
arpl
ss
mov
imul
lds
mov
dec
mov
xchg
icebp
pop
fisttps
xchg
xchg
je
fistpll
add
xchg
mov
pop
xor
leave
fisubrs
rorl
scas
cmpsb
sbb
inc
mov
test
out
inc
iret
das
and
or
sti
pop
out
cmp
sbb
fcoms
sbb
mov
mov
dec
imul
inc
xchg
jo
mov
inc
mov
iret
mov
cmp
dec
shrl
divb
adc
jo
and
js
repnz
test
xchg
pop
xchg
testb
aam
pop
pop
push
dec
jg
and
inc
inc
mov
pop
mov
jne
jnp
outsb
mov
jge
xor
mov
sbb
fildll
jae
mov
cmp
sbb
dec
pop
addr16
xchg
jmp
adc
mov
mov
add
aam
mov
mov
or
push
xchg
pop
in
and
mov
in
pop
sbb
incb
xchg
or
ds
sbb
pop
lods
push
xchg
add
popf
push
in
out
inc
std
daa
lret
or
mov
stc
mov
adcl
daa
std
adc
pop
xchg
and
xor
or
ds
into
add
jge
or
idivb
int3
mov
push
cmp
bound
or
mov
mov
fbstp
push
movsl
out
call
mov
js
rolb
adc
mov
sarb
xchg
push
adc
and
in
pop
inc
sti
lea
sub
repz
fcoms
fcom
out
dec
lds
cltd
notl
rcr
imul
sti
mov
loope
in
sahf
aaa
les
cli
rolb
push
jmp
shll
ret
fimuls
leave
cmp
sbb
sub
sub
cmpsb
sbb
scas
stos
mov
pusha
xchg
pop
cmpsb
and
sarb
mov
xchg
jp
xchg
cs
mov
into
js
popf
inc
int
lea
lcall
leave
stc
jl
scas
dec
arpl
bound
out
jnp
push
mov
adc
pop
pop
lock
daa
push
loope
jg
hlt
mov
push
dec
lods
out
loope
pop
aas
insb
sti
xor
xchg
pusha
sbb
sbb
sahf
jle
xor
fcomp
jge
loopne
push
lahf
or
popf
xchg
inc
stos
or
lret
test
push
mov
mov
out
jecxz
inc
push
fdivl
cwtl
adc
outsl
lods
and
mov
xchg
je
add
aam
xchg
push
jne
or
dec
sbb
pop
cs
or
push
inc
mov
jp
aad
xchg
xor
lret
dec
add
in
dec
xor
sub
ja
xor
inc
cmp
out
dec
cmc
shlb
mov
in
inc
mov
adc
pop
adc
and
arpl
mov
add
inc
outsl
cmp
push
jl
fbld
jae,pt
pop
fistpl
pop
jmp
mov
sub
maxps
dec
pop
xchg
mov
mov
cmpb
inc
push
xor
jnp
pusha
clc
xorl
mov
fsubrp
bound
jbe
pop
pop
iret
pop
lahf
test
rorb
inc
enter
mov
cs
dec
xor
push
and
cmp
or
and
pop
sbb
stos
fldenv
jo
push
xlat
inc
push
or
mov
test
push
out
xorl
adc
mov
daa
mov
dec
into
cmpsb
add
xor
in
push
pop
cmp
mov
adc
mov
jle
inc
jne
test
pop
jg
movsb
insl
lods
inc
push
rcrl
sbb
pop
outsl
xor
or
popa
dec
xlat
or
pop
shlb
push
mov
mov
add
sub
add
aas
mov
jmp
inc
inc
shl
push
rcl
jb
xor
mov
sub
test
pop
ret
xorb
mov
frstor
jbe
adc
int3
mov
je
sub
inc
dec
pop
jns
ret
jae
inc
popa
js
mov
js
stos
movb
jecxz
adc
xchg
adc
scas
in
xchg
adcl
xor
mov
add
int
outsb
cltd
mov
add
mov
adc
cmp
hlt
jae
jnp
gs
jecxz
in
inc
mov
lcall
mov
or
xlat
mov
add
pop
xchg
leave
sbb
lock
push
cmp
enter
aam
imul
cmp
ror
inc
int
add
push
mov
mov
push
mov
test
jp
popf
cmpsb
xchg
scas
xchg
push
mov
push
xor
mov
inc
or
mov
shll
xor
movsl
jae
pop
and
imul
sahf
bound
lcall
jb
outsl
mov
bnd
lods
popf
cld
inc
andb
add
imul
imul
jbe
je
xor
mov
and
lcall
and
testb
inc
sbb
lcall
jb
outsl
mov
pop
out
sub
outsl
lea
push
stc
jg
pusha
xchg
mov
int3
xchg
mov
mov
and
in
std
push
xor
and
xor
lahf
jne
movsb
pop
lret
adc
fstl
jg
int
push
add
adc
out
cmp
int3
test
andl
mov
add
mov
or
mov
pop
lret
pop
push
push
daa
adc
in
cltd
imul
jmp
xchg
lret
pop
push
xchg
imul
jecxz
es
adc
push
addl
loop
out
in
hlt
ds
or
repz
lcall
movl
inc
sub
ja
fs
insl
fbld
jae,pt
pop
fistpl
fs
fisubs
mov
test
mov
mov
fiaddl
aad
add
mov
inc
mov
push
xor
xchg
pop
fsubrp
bound
jbe
pop
pop
iret
pop
lahf
test
rorb
inc
enter
stos
jnp
std
fldln2
or
sub
xchg
out
test
aad
pop
aad
cmp
sti
pop
rcrl
inc
pop
aas
inc
push
pushf
repz
mov
cli
inc
scas
pusha
or
add
mov
hlt
lcall
movsb
out
inc
cmp
push
lods
popa
out
xchg
movsb
mull
popa
rcr
push
add
sbb
xchg
arpl
pop
mov
push
adc
or
jo
bound
scas
stc
xchg
mov
push
jp
loopne
inc
rcr
shr
mov
scas
pop
fcmovnu
fnstsw
add
mov
in
inc
push
cmp
mov
aam
mov
into
xor
jnp
stc
dec
insl
cmp
pop
ja
iret
lods
push
out
add
sub
sub
sarl
stos
sub
pop
out
mov
push
cmpsb
xchg
aad
popf
mov
push
test
mov
mov
inc
mov
mov
or
jbe
imul
xor
add
sbb
sub
push
jns
mov
xlat
dec
xchg
and
call
sub
dec
jno
add
cmp
pop
cmp
push
xchg
iret
aam
rorl
ljmp
mov
lods
and
scas
scas
push
xor
outsb
sbb
lods
mov
cld
shrb
in
dec
call
ljmp
decb
push
icebp
mov
in
rcll
cmpl
fstpt
push
sarb
enter
call
cmpb
mov
pop
call
cmc
ds
sahf
sbb
fnsave
inc
fistps
enter
adc
iret
mov
jae
icebp
dec
aaa
add
test
mov
sub
arpl
stos
lcall
shl
les
adc
cli
leave
int3
into
jno
sub
inc
loopne
in
or
fisubrs
sbb
pop
lcall
jmp
movsl
aaa
xchg
dec
mov
fldenv
or
std
jle
arpl
jb
adc
jge
in
adc
fstpl
test
mov
push
hlt
outsl
push
cmpb
lcall
jmp
movsl
aaa
xchg
dec
mov
or
sub
enter
push
mov
std
lods
icebp
rorl
or
push
shll
mov
jl
call
push
dec
jno
inc
or
rcll
add
daa
cwtl
shl
cmp
and
lods
std
repnz
jmp
ret
jle
sbb
jge
adc
dec
lods
dec
xor
es
clc
mov
fcoml
cmp
fisttps
push
hlt
outsl
push
cmpb
xor
test
sbb
add
movsb
subl
inc
add
lcall
mov
scas
cmc
dec
and
out
pop
mov
cltd
lea
or
inc
lahf
xchg
cmpsb
adc
xor
cmp
jb
pusha
dec
imul
js
mov
pop
mov
sarl
sub
push
fsubs
and
mov
xchg
scas
lret
sbb
repnz
xlat
add
add
push
push
outsl
into
push
sub
sbb
ljmp
dec
and
out
pop
mov
cmpsb
xchg
negl
cmp
xchg
cmpsb
adc
cmp
mov
xchg
inc
ss
sarb
mov
pop
mov
pop
call
sub
push
pop
sbb
xor
loop
imul
inc
cmp
or
stos
cld
adc
and
jl
call
pushf
mov
call
cltd
or
mov
jae
push
xor
in
outsb
and
stc
shll
mov
jmp
jbe
inc
inc
push
pop
in
jns
push
outsl
mov
call
outsl
or
loopne
add
out
out
mov
js
mov
gs
pop
mov
dec
lods
nop
icebp
jge
and
in
popa
mov
lock
pop
pop
cmpsb
or
cmp
jle
xor
cli
test
in
jmp
and
or
cmc
int3
gs
xchg
addb
mov
cmpsl
outsl
and
mov
testb
add
push
icebp
or
stos
mov
jb
xor
sbb
mov
push
jnp
out
xchg
loopne
shlb
inc
push
xchg
inc
sahf
insb
outsl
lahf
lock
push
xchg
dec
bound
dec
xchg
xchg
movsb
and
jns
add
dec
cs
addr16
int3
push
xchg
arpl
stc
in
pop
shrl
insb
mov
or
mov
in
push
sbb
cltd
dec
xchg
or
jne
shlb
jns
push
mov
sub
mov
sbb
jle
xor
push
out
es
dec
xor
and
pop
mov
push
mov
mov
fiadds
mov
pop
scas
out
sbb
dec
in
mov
dec
mov
insl
or
cmc
mov
pop
call
pop
test
and
insl
xor
lods
mov
dec
out
outsb
ficompl
mov
jno
jnp
sub
or
gs
nop
jne
outsl
jmp
jle
mov
imul
lcall
push
mov
pop
jmp
push
addr16
xor
outsb
loop
or
in
mov
cmp
pop
out
push
insl
sbb
test
negl
cmpb
pop
xor
mov
mov
inc
mov
mov
fadds
mov
imul
in
mov
roll
dec
les
outsl
add
out
add
mov
cmp
mov
sub
aaa
lds
and
add
mov
ds
cs
mov
mov
sbb
sub
adc
jg
lds
cmp
out
mov
dec
shll
roll
int3
xchg
xchg
dec
addr16
mov
mov
pop
mov
adc
icebp
pop
push
shr
faddl
pop
imul
xor
int
mov
push
pop
mov
idivl
sbb
mov
sub
aad
out
mov
push
jo
mov
add
mov
daa
sbb
shrb
jp
cmc
jb
idivl
mov
push
sub
add
icebp
xlat
std
jle
mov
aaa
jg
fwait
data16
mov
shlb
xchg
inc
and
sub
pop
adc
in
add
dec
mov
pop
mov
xor
das
xchg
pop
and
outsl
test
jb
jne
sbb
xchg
push
push
insl
mov
rclb
jb
inc
mov
pop
xchg
lcall
mov
push
imul
dec
add
sbb
and
cmp
dec
sub
fwait
cmp
push
faddl
popa
stos
dec
mov
fidivl
mov
adc
cwtl
out
int3
or
xchg
inc
xor
mov
inc
cmpsb
cmp
mov
jmp
fdivrs
sub
leave
cmp
jns
lds
push
push
out
data16
lods
mov
imul
call
or
dec
lods
imul
mov
mov
clc
fists
xor
out
jl
pop
cmpsl
or
xchg
mov
es
mov
lds
shll
adc
cli
aaa
and
out
cltd
cli
and
ds
repnz
inc
and
cld
fidivrl
cs
or
lea
sahf
test
jmp
leave
bound
dec
adc
mov
xchg
adc
mov
add
sbb
pop
imul
inc
ss
in
jecxz
jmp
out
adc
mov
xor
inc
ret
inc
hlt
sarl
xchg
roll
notb
dec
push
xchg
mov
adc
aaa
out
pop
or
stos
pop
test
xchg
inc
pop
add
out
push
xchg
cmpsb
mov
mov
add
xchg
adc
lea
in
movaps
or
cmp
out
ljmp
sub
lahf
or
sahf
mov
lret
mov
mov
sar
jb
inc
fwait
imul
cmpsb
rclb
in
test
sub
in
mov
mov
sub
rcrl
mov
xchg
ljmp
push
cmpb
popf
lods
mov
sahf
fwait
dec
xchg
adc
mov
loop
fisttpl
int
mov
add
jae
insl
cmova
inc
lret
inc
cmpsl
andb
jle
sbb
mov
fdivr
cmpb
push
popa
lods
repnz
dec
leave
cmp
jns
lds
xor
add
sub
and
mov
popa
mov
cmp
pop
mov
and
jp
movsb
fidivrl
cld
mov
pushl
xor
into
push
inc
pop
fistpl
sarl
or
sub
jns
lds
push
push
out
data16
lods
mov
imul
call
or
dec
orl
mov
out
xchg
and
add
das
xchg
mov
loop
mov
jg
xchg
xchg
push
nop
repnz
add
xchg
iret
mov
stos
fcoms
and
pop
rcr
xchg
bound
inc
xchg
mov
shll
fmull
out
push
aam
sbb
pop
ds
cmpsb
adc
and
shll
hlt
subl
push
shlb
into
mov
or
pop
push
cmp
ret
add
pop
idivb
cmp
test
sub
in
mov
sahf
dec
rcr
pop
mov
es
push
xor
bound
push
and
mov
xor
push
fimull
imul
scas
pop
jns
add
mov
cltd
test
lret
cs
cltd
mov
cmp
int
sbb
xrelease
pop
add
arpl
dec
dec
je
out
mov
dec
stc
cmp
push
test
out
and
inc
push
outsl
pushf
in
outsl
sti
mov
mov
test
test
cmc
or
mov
aam
and
sbb
stos
pop
movsl
inc
or
cmp
mov
test
jl
mov
mov
mov
inc
out
xlat
jo
cwtl
sbb
mov
pusha
pop
jmp
rolb
add
sbb
ljmp
lock
add
lret
sbb
push
fs
enter
and
scas
hlt
push
mov
iret
sbb
jns
or
sub
jns
lds
push
push
out
data16
lods
mov
imul
call
or
dec
pop
lret
in
dec
jg
inc
pop
imul
gs
xor
test
cmp
mov
or
jl
mov
fdivs
mov
es
mov
inc
or
syscall
or
stos
vfmsub213sd
xchg
ret
add
xlat
xchg
mov
cs
pop
hlt
inc
dec
in
movsl
cmpsl
lods
mov
mov
nop
fistpl
data16
jmp
cmpsb
dec
cwtl
cmp
lret
sbb
dec
daa
adc
out
out
add
addr16
icebp
sub
lret
push
cmp
mov
mov
fists
dec
and
lods
fistpll
and
and
or
inc
push
insb
std
sbb
mov
add
mov
les
cli
and
add
inc
jne
pop
scas
mov
addr16
mov
movsb
imul
adc
insl
push
in
fidivl
xchg
cmp
pop
xor
stos
mov
test
xchg
push
xchg
cmp
movsl
mov
xor
ret
sbb
daa
data16
xchg
and
inc
sbb
fdiv
rol
inc
ljmp
cmp
push
aad
je
mov
vcvtss2sd
mov
repz
inc
mov
test
xor
rcrl
sti
ss
in
sbb
sarl
das
lods
fwait
pminsw
loopne
sti
outsl
mov
push
ds
insl
dec
dec
adc
adc
push
hlt
xchg
lret
enter
das
inc
arpl
mov
cmp
sarb
insb
push
scas
clc
fsts
fcmovbe
insl
fwait
out
sbb
dec
psubusb
inc
andb
adc
add
pop
cmp
pop
stc
inc
ljmp
dec
ss
jle
cmp
push
je
and
xchg
cmp
insb
ret
in
insl
add
shl
ret
cmpsb
jno
or
add
aam
jmp
aas
mov
lret
push
jno
rolb
cmpsb
xchg
xor
pop
outsl
or
push
sub
jnp
cmp
pop
mov
js
cmp
ret
inc
push
repz
shll
mov
shrl
jl
out
cmp
in
pop
mov
inc
push
xorl
leave
int3
push
cmpsl
adc
cmp
jae
fidivrs
lods
outsb
dec
mov
xor
fs
cmp
mov
pop
mov
sub
out
mull
popf
addr16
adc
xor
sti
pop
mov
inc
cmp
mov
jp
divps
pop
leave
fstpt
sbb
lods
or
or
xor
scas
shll
hlt
data16
dec
stos
lret
dec
or
sbb
fdivrl
mov
add
ss
clc
push
jg
or
out
ljmp
ret
sub
cs
jne
mov
orl
sbb
mov
push
cmpsl
push
faddl
pop
cmpsb
mov
or
adc
pop
mov
lcall
int
subb
pop
xor
fiadds
pop
jge
js
xor
sub
cmpsb
cltd
mov
out
push
and
mov
mov
cmp
es
mov
or
sbb
fidivrs
scas
lahf
test
rorb
inc
enter
pop
pusha
jb
inc
add
mov
xor
jb
clc
inc
lds
or
xlat
arpl
or
je
xchg
dec
inc
xor
loope
movsl
imul
jne
rorl
xchg
inc
jo
jg
pusha
xchg
mov
int3
xchg
mov
mov
and
in
fwait
ljmp
out
aam
mov
mov
push
sbb
cltd
dec
xchg
or
jne
shlb
jns
lcall
lahf
fstps
mov
insl
call
imul
push
sbb
xor
xchg
outsb
or
mov
stos
mov
std
xchg
icebp
lods
sti
enter
add
jmp
adc
jmp
cmpsb
adc
cmpsb
into
clc
add
mov
jp
insl
mov
enter
fsubl
mov
sbb
xchg
loope
xchg
ret
leave
mov
mov
mov
fdivl
ret
mov
shrl
jl
out
cmp
in
pop
mov
inc
popf
cld
arpl
xchg
cmp
in
imul
lds
cltd
mov
hlt
mov
mov
negb
in
int3
mov
shll
out
jge
icebp
xor
and
inc
aad
mov
loop
int3
ffreep
aam
and
sbb
lret
inc
xchg
cli
movsl
mov
mov
mov
jge
push
addb
movl
gs
ss
mov
ds
js
xor
push
int
push
cmp
shr
add
mov
inc
cmpsb
sbbl
loope
cwtl
jne
sahf
loop
cmp
mov
sub
call
lea
push
pop
int3
sub
add
or
mov
mov
jns
ret
sbb
sbb
xor
inc
add
jecxz
adc
cmp
imul
jl
dec
mov
sti
xor
repz
data16
push
cli
add
scas
push
fiadds
lahf
xor
mov
sbb
leave
shll
das
mov
ja
std
imul
call
adc
sbb
fwait
jno
repnz
fwait
jg
mov
jp
add
sub
jmp
and
adc
loope
inc
ss
xor
outsl
sub
or
fwait
or
pop
push
imul
sahf
jne
pop
sub
out
push
into
adc
xchg
enter
push
add
sbb
push
es
adc
loopne
fwait
orl
popf
or
sub
ret
cli
and
cs
hlt
pop
pop
pop
pop
jno
out
jno
or
pop
add
adc
mov
or
inc
jne
mov
insb
inc
ret
pop
xchg
or
push
mov
lock
sbb
pop
icebp
jl
jnp
adc
stc
aaa
sub
fiadds
jmp
insl
pushf
xlat
loope
popa
addr16
inc
pop
ja
jb
jle
out
imul
in
aas
inc
sahf
pushf
jl
adcl
push
xchg
inc
push
in
push
out
test
lods
adc
sub
jecxz
pop
inc
gs
adc
ret
gs
test
add
jle
sbb
rolb
stos
jbe
mov
insl
fcompl
shr
inc
orb
sahf
ret
cmc
das
js
test
xchg
push
stos
repz
push
inc
out
and
imul
hlt
or
shrl
pop
cltd
or
popa
arpl
ja
xor
jno
add
cs
stos
mov
inc
mov
lods
sbb
repnz
sti
sub
sbb
push
mov
mov
jg
lods
and
push
loope
hlt
out
das
pop
sub
outsb
scas
ret
xchg
xchg
push
and
mov
sub
sub
mov
inc
sub
ret
pop
add
decb
add
negb
data16
ss
jbe
adc
add
mov
sbb
mov
sbb
sbb
push
sahf
mov
addb
xchg
lock
mov
loopne
sbb
or
cld
cmp
addl
in
adc
sti
int3
inc
shlb
mov
rcl
jns
jno,pn
repnz
or
dec
jle
mov
cmp
shll
inc
jl
push
push
jnp
aas
jmp
xchg
lahf
push
pop
lahf
subb
rorl
cltd
push
xor
lret
add
pop
insl
pop
xor
ret
fs
pusha
dec
cmpsl
add
adc
mov
xlat
xchg
mov
rcll
mov
mov
pop
jmp
fwait
and
push
ret
aaa
ret
jge
sbb
in
js
pop
jns
fcom
aad
cwtl
sbb
outsl
jnp
add
arpl
insb
cmp
xchg
popf
icebp
jl
leave
mov
push
mov
push
xchg
mov
repz
xor
jmp
aas
push
enter
addr16
mov
cmc
test
or
faddp
out
lcall
clc
mov
jmp
sbb
push
pop
lods
adc
ror
addr16
sti
adc
lcall
loop
push
fdiv
xchg
movsl
clc
push
cli
pushf
and
lods
into
repz
mov
pop
test
cmc
inc
insl
dec
pop
cld
iret
mov
fisttps
push
xchg
scas
rorl
push
xor
dec
sub
sub
mov
outsl
out
fldenv
into
notb
dec
xchg
push
ret
std
xor
fistps
push
jge
outsl
push
mov
adcb
add
pop
or
dec
and
xor
js
repz
and
les
xchg
mov
dec
xchg
push
ja
inc
in
pop
fstpl
or
add
out
movsb
mov
mov
icebp
out
push
sbb
jmp
pop
and
add
sub
jl
popa
inc
sub
stos
mov
dec
or
pusha
mov
loop
int3
xor
negl
rolb
sbb
pop
mov
push
cli
aam
lcall
add
mov
iret
push
jmp
out
jae
adc
jno
push
xor
jo
dec
mov
fbld
jb
in
das
pop
jnp
fsubrl
je
xor
push
sbb
xorb
mov
sarb
mov
in
xor
mov
in
pushf
push
or
mov
jl
dec
xchg
out
mov
mov
push
sarb
mov
mov
mov
das
inc
inc
leave
aam
pop
ljmp
shrl
jle
pop
movl
and
cmp
ret
std
orl
jnp
pop
ficomps
xchg
xor
mov
stos
ss
mov
cmp
cmpsb
outsl
xchg
jne
pop
pop
xor
scas
mov
cmpsb
xor
xor
adc
ds
push
roll
ficomps
dec
ja
ret
xchg
in
aad
jge
jns
ficoml
imul
fnstcw
int3
push
add
cmc
lds
mov
cltd
or
daa
xchg
sbb
mov
lret
mov
sahf
in
cwtl
add
cmp
bnd
cli
jecxz
fisubrl
daa
stos
push
jae
mov
cmp
sbb
cld
cmp
mov
mov
inc
pusha
or
sbb
rolb
push
mov
daa
xchg
ljmp
shlb
sahf
jae
int3
mov
mov
out
sub
test
call
sbb
ja
fdiv
lds
mov
mov
scas
jnp
out
xor
rorl
dec
repnz
push
cmp
imul
cvtdq2ps
inc
jmp
imull
stos
stc
aam
lods
sub
outsb
repnz
cmp
insb
lahf
inc
jno
sub
sbb
and
leave
mov
xor
jns
std
add
cld
push
mov
mov
je
rorl
sbb
push
icebp
push
pusha
and
add
push
add
push
add
repnz
add
test
jae
lret
xlat
push
movsl
out
mov
sti
adc
fwait
xor
test
or
out
or
pop
mov
test
mov
adc
cmp
lods
sub
sub
ret
ds
cmpsb
mov
mov
pop
sub
mov
cwtl
pop
dec
pushf
or
inc
or
mov
push
mov
xor
or
mov
xchg
ds
and
iret
push
sti
in
mov
fsubs
add
loope
movsb
addr16
jg
adc
sahf
fistps
hlt
popa
jo
lds
mov
add
lock
jl
loopne
fldt
ds
out
adc
lret
add
scas
xchg
add
mov
sbb
iret
ja
add
sub
inc
jne
cmp
lret
mov
sub
mov
js
les
ret
and
and
das
mov
arpl
jg
mull
ss
pop
sub
scas
repnz
repz
and
fisttpll
test
xchg
pop
xor
cld
fstpt
mov
cltd
stc
jmp
jmp
cmp
call
push
mov
fistpll
push
or
mov
mov
ds
out
jecxz
dec
adc
js
sub
clc
xor
rcll
rcrb
inc
pop
fdivp
pop
jb
jnp
icebp
pop
icebp
pop
lret
shrb
shl
stos
les
mov
mov
push
pop
pop
test
sub
aam
std
mov
mov
mov
jg
stos
aaa
dec
jae
sbb
scas
popa
ret
sub
ficompl
test
adc
insl
imul
push
xor
bound
or
mov
pop
mov
clc
mov
gs
insb
loop
jl
xchg
inc
lret
ret
add
and
sub
daa
xchg
xchg
clc
fs
sub
mov
ret
shrl
sbbb
adc
sbb
or
mov
aas
cmc
movsb
inc
out
stos
lret
rolb
lds
bound
cmp
inc
scas
icebp
adc
lret
sbb
jnp
dec
mov
or
pop
mov
sbb
movsl
lahf
or
sub
stos
cwtl
outsb
inc
and
jnp
push
dec
or
aad
mov
cli
cmp
cmp
pop
sub
xchg
les
stc
xor
cli
dec
jb
sub
jmp
mov
cmp
push
mov
stos
sbb
test
add
fwait
push
hlt
test
cmp
cmp
cmpb
xchg
andl
fildl
sbb
jle
ret
scas
in
testl
jne
fwait
or
jg
mov
lods
cli
pusha
jmp
xchg
mov
push
push
es
or
push
add
aam
mov
adc
xlat
fiaddl
xor
sbbb
push
jmp
sbb
sbb
jnp
fldcw
pop
out
cmp
fs
jnp
ss
push
push
jns
sbb
xchg
xchg
mov
movsb
dec
jmp
push
pusha
adc
pop
mov
int3
test
cmpsl
xchg
sbb
jns
ficoms
cmc
sbb
inc
pop
enter
xor
or
jl
stos
lret
adc
lods
xchg
mov
cli
sbb
insb
movsb
icebp
insb
add
daa
icebp
lahf
shll
mov
inc
adc
add
enter
clc
mov
jae
lds
insl
and
mov
sbb
test
cmp
lret
or
loope
sbb
mov
xchg
outsb
adc
add
inc
icebp
cltd
xchg
mov
ljmp
adc
call
leave
pop
or
test
scas
push
loopne
outsb
adcl
sbb
push
je
sbb
ds
imulb
add
lods
in
xchg
sti
push
mov
adc
scas
ret
stos
int3
jecxz
pop
push
fisttps
aas
in
sub
sbb
mov
sti
mov
ljmp
test
andb
adc
popf
mov
out
pusha
dec
sub
mov
adc
cwtl
cmc
pop
popf
xchg
mov
cmp
or
arpl
sbb
pop
repz
in
or
add
mov
adc
lret
dec
dec
inc
and
pop
stc
addr16
aam
inc
rcrb
scas
pop
xchg
add
dec
das
ds
paddw
test
push
lret
out
jle
sub
lcall
mov
mov
filds
ss
lret
aaa
jge
adc
push
bnd
loopne
lods
pop
mov
lds
sub
mov
sbb
inc
mov
or
stos
fnstsw
sub
sub
xlat
mov
mov
mov
or
hlt
orb
cmpb
mov
xor
pop
bswap
adc
ljmp
pop
jne
hlt
mov
popa
push
mov
aas
xlat
fidivrs
hlt
insl
mov
or
xchg
outsb
aaa
inc
rcl
sub
jae
cmc
xchg
jae
cmpsl
xlat
mov
into
adc
cmpsb
jbe
lcall
adc
addr16
jecxz
inc
add
dec
mov
inc
aas
sahf
xchg
pop
push
in
xchg
add
cmpl
stc
movsl
ja
frstor
es
push
jle
pop
adc
push
sub
out
add
adc
mov
jno
push
mov
ror
popf
nop
pushf
icebp
sbb
lods
pop
fsub
jecxz
fistpl
fisubrs
in
ljmp
inc
ja
aaa
cs
ds
icebp
das
fs
sbb
jo
out
add
dec
in
xorl
mov
mov
inc
daa
dec
scas
pop
movsb
aam
mov
pop
mov
sbb
insb
mov
xchg
mov
aaa
pop
aad
jne
xchg
mov
cmp
stos
clc
add
ss
ljmp
je
popf
loope
sbb
sbb
fs
bound
jl
mov
dec
pushf
or
imul
addr16
mov
or
je
lock
test
mov
jl
mov
add
push
or
add
ds
add
xchg
mov
and
sarb
jg
in
mov
jg
data16
sarb
in
mov
push
xchg
or
or
out
ds
in
or
push
jbe
movsl
lret
jb
pop
cmpsl
int3
js
lds
push
aas
mov
sarl
std
jb
xchg
test
ja
and
insb
push
in
xor
dec
mov
inc
cmp
movsl
js
test
and
jo
adc
cld
loope
pop
xchg
or
mov
and
aaa
mov
out
fstps
or
sub
js
mov
mov
sbb
fildll
movl
jns
fidivrl
mov
push
fwait
shll
adc
lods
cmp
push
sbb
insb
dec
adc
shrb
mov
or
add
add
xchg
jle
add
mov
pop
sbb
imul
out
fsubrs
mov
dec
rolb
fcmovne
lcall
push
jae
xchg
mov
or
xchg
jae
aad
into
or
adc
insb
arpl
addb
mov
pusha
ret
cmp
inc
sub
push
ret
into
xchg
mov
ret
add
inc
jmp
sub
pushf
push
pop
outsb
scas
xlat
cli
sbb
dec
arpl
push
inc
pop
push
outsl
xor
fbld
lcall
jbe
push
or
push
dec
xchg
pushf
fs
adc
adc
xchg
or
call
pop
shlb
push
in
ret
sub
addl
or
mov
loopne
loope
xor
scas
scas
call
mov
sub
std
mov
sub
fsubrs
xor
stos
inc
cmp
jns
dec
rorl
push
popa
aas
movsl
cmp
dec
push
xor
shlb
addr16
sbb
jmp
test
clc
mov
jmp
mov
cwtl
ds
jecxz
mov
mov
adc
lret
icebp
fstpl
call
jae
sub
outsb
adc
mov
icebp
jbe
add
inc
ret
iret
push
add
stos
mov
aam
xchg
rdmsr
sbb
icebp
jmp
pop
sbb
mov
add
lods
mov
and
ja
mov
or
pop
and
mov
jle
enter
es
and
imul
lahf
push
xor
lea
cmp
pop
push
lret
pop
push
cwtl
hlt
cmp
cmpsb
fsubrl
arpl
push
inc
out
in
add
and
loopne
je
sub
aaa
xchg
mov
inc
popa
mov
lahf
push
leave
stc
stos
in
mov
inc
shrl
ret
stos
cmp
fcmove
aam
xor
lods
fs
pop
pusha
push
nop
and
outsl
outsl
mov
loopne
jo
mov
movsb
cli
jp
out
mov
xlat
adc
jb
lcall
popf
rorl
sbb
xchg
icebp
leave
ret
jnp
faddl
lahf
and
inc
adc
je
out
jg
adc
lea
dec
ljmp
push
fists
push
scas
shll
sub
fldenv
cmp
inc
sbb
inc
and
lock
adc
xor
mov
push
sbb
stos
arpl
jns
push
or
jl
pop
xlat
cwtl
aad
adc
div
pop
cld
pop
stos
arpl
es
mov
out
jecxz
stc
and
push
mov
ss
add
xchg
add
mov
mov
pop
rclb
stos
roll
cld
loope
push
cmp
add
cmpsl
fcoms
in
fwait
xchg
jp
add
lahf
sbb
xchg
stc
test
mov
mov
xor
ret
inc
inc
test
and
pop
cwtl
push
test
dec
jg
push
adc
xchg
sbbl
jae
aas
fiaddl
sub
lcall
add
movsb
xor
shlb
incb
or
repz
call
pushf
or
xor
shl
push
pop
jno
out
lea
out
and
in
popf
jo
inc
jno
sbb
mov
std
cmpsl
in
das
or
jo
push
clc
jno
sub
or
pushf
mov
mov
or
pushf
daa
shlb
notb
xor
pop
cli
and
fistpll
jne
push
jp
int
xchg
imul
jo
push
lcall
push
inc
xor
jg
mov
aaa
mov
push
or
pop
jno
mov
cli
shlb
mov
mov
lcall
test
adc
xlat
mov
mov
ror
push
sbb
pop
lcall
fisubrs
xchg
je
mov
mov
cmp
push
sub
push
loopne
jmp
pop
xlat
repnz
mov
call
add
ret
push
push
jl
adc
lea
cmp
jge
in
sarl
sub
add
jg
ljmp
test
cmp
stc
or
or
pop
cmpsl
sbbl
dec
sbb
stos
scas
aam
inc
ret
dec
adc
jl
jne
loop
jnp
sbb
mov
or
mov
push
jecxz
subl
pop
filds
cmp
jne
into
dec
jge
pop
fisttps
stos
sti
das
or
cwtl
outsl
mov
mov
dec
fcoml
push
pop
sbb
pop
mov
lods
stos
mov
in
mov
fidivs
psubq
loop
loop
imul
es
add
ficomps
xor
cli
xchg
cmp
sub
mov
adc
int
or
sbb
in
mov
dec
xor
lahf
cmpl
scas
push
sarb
push
adc
jmp
call
aas
cmp
or
xor
clc
push
iret
pop
mov
jecxz
adc
push
mov
clc
dec
push
adc
xor
mov
push
dec
push
into
lea
jns
lods
cli
push
mov
dec
aad
cli
mov
mull
add
test
jg
push
xchg
jp
pop
inc
pop
cmpsb
jle
xchg
inc
mov
mov
aaa
in
or
jmp
cmp
inc
inc
iret
jecxz
in
test
or
jno
into
mov
push
mov
cli
loop
inc
pop
cmc
cmp
mov
fnstenv
mov
mov
pop
repz
dec
jge
call
xor
cmp
cmpsb
pop
xor
push
jae
lret
xchg
pop
mov
ljmp
inc
ja
pop
filds
jl
cmpsb
test
pop
pop
and
mov
scas
inc
mov
int
ss
xor
inc
imul
inc
mov
pop
sarb
sub
arpl
inc
cmp
lret
adc
xor
lea
jne
mov
aam
imul
pop
enter
clc
cmp
mov
push
dec
jl
pop
mov
jae
repnz
aad
iret
aam
sbb
fcompl
jp
inc
lods
icebp
add
jae
and
push
push
jns
inc
out
push
jnp
or
or
adc
push
fld
loope
cltd
ret
sbb
ja
shll
add
inc
sbb
pop
lock
sar
jp
mov
mov
cmpl
cmp
cmp
add
xchg
xchg
sbb
sub
and
pop
jns
push
outsl
out
js
dec
xchg
push
fbld
imul
xrelease
arpl
je
xchg
hlt
jecxz
adc
cmp
aad
and
inc
and
jecxz
cmp
xchg
into
jecxz
pop
sbb
and
lea
sub
push
push
push
mov
ja
dec
test
je
push
hlt
movsb
adc
push
repnz
mov
xchg
sbb
adc
lcall
cs
das
push
xor
mov
outsb
lds
xchg
pushf
sbb
and
stc
in
aam
jno
dec
clc
stos
xchg
adc
scas
std
cli
faddl
sub
sub
rorb
shrl
daa
push
add
push
dec
jmp
in
js
push
mov
maskmovq
idivl
sub
add
mov
mov
outsb
dec
mov
adc
cmc
mov
in
jns
loope
or
mov
lcall
insb
rclb
lret
mov
push
pop
in
fistps
push
fwait
push
cli
mov
or
dec
incl
mov
jb
sub
xor
mov
mov
lock
pop
stos
loopne
inc
mov
out
lea
mov
loope
dec
or
flds
gs
in
out
dec
and
call
lock
mov
into
loope
lea
inc
xor
inc
rcl
int3
or
es
adc
inc
mov
daa
pop
pop
pop
jmp
sbb
bnd
shrb
or
pop
add
xchg
jmp
cwtl
fisubrl
shr
or
and
xor
xchg
pop
xlat
testl
lods
inc
push
ficoml
pop
fists
mov
xor
jl
push
ret
aam
cmp
or
push
adc
sbbb
cmp
sbb
hlt
fs
mov
out
iret
mov
dec
jge
jg
add
adc
jle
inc
stc
fsubrs
movsl
xchg
sti
insb
pop
pop
int
inc
sbb
mov
or
xchg
shll
repnz
mov
adc
jg
subb
add
stos
ljmp
sbb
push
sbb
fistpll
in
pop
ljmp
bound
mov
sbb
rcr
pop
jno
or
xlat
cmpsb
inc
in
jno
ss
cmp
push
insl
mov
add
jbe
test
jnp
adc
fidivs
ret
out
mov
das
jmp
das
or
rorb
in
pop
pushf
repz
cltd
fbld
inc
iret
gs
int3
lret
subl
nop
or
pushf
gs
xor
adcl
loopne
lcall
xlat
in
inc
mov
pushf
sbb
das
sbb
mov
jns
enter
aad
insl
push
ret
ret
aas
xlat
pop
scas
jne
daa
push
dec
lea
stos
dec
adc
gs
mov
mov
je
out
dec
fwait
or
push
paddw
push
adc
andl
les
push
sub
shll
xor
add
inc
lock
ficomps
aaa
xor
in
icebp
jnp
cs
push
xchg
jle
jge
mov
push
mov
push
in
pushf
xchg
cmp
out
xchg
xorb
stos
xchg
loope
je
faddp
test
int
jecxz
out
xor
jno
imul
mov
adc
jo
stc
lea
mov
inc
fcoms
stos
popf
les
adc
das
mov
jns
sti
cltd
dec
aam
sarl
inc
inc
cmp
nop
insb
inc
mov
inc
jg
sahf
inc
push
gs
ljmp
loopne
xchg
or
mov
adc
mov
sbb
push
jmp
mov
fildll
pop
pop
jae
or
test
xchg
xchg
jae
inc
xlat
inc
mov
pusha
decl
sbb
mov
cmp
add
rclb
std
imul
nop
adc
xor
cmpsl
jl
ret
pop
ret
add
pop
xchg
mov
dec
push
push
aam
xor
adc
mov
xor
out
jbe
xchg
sub
scas
out
add
cli
shll
lods
lret
inc
addl
cmpsb
sub
xor
sti
jge
xchg
hlt
sub
xor
mov
hlt
cwtl
dec
fmull
lret
insl
mov
jecxz
in
int3
in
push
xor
mov
fcmovne
sub
mov
dec
pop
mov
fiadds
inc
dec
roll
ja
in
cmp
insl
loope
or
adc
imul
loope
pop
sbb
movsb
cmp
std
scas
inc
sub
and
or
hlt
int
and
dec
dec
sbb
mov
sahf
mov
test
cld
jnp
push
inc
cmp
xlat
cld
jo
sub
push
loop
testl
bound
add
sbb
ficoms
push
mov
add
push
jg
lock
cmp
sti
stc
and
dec
pusha
aad
mov
and
popf
push
push
mov
sub
test
mov
cmp
inc
popf
jae
mov
popa
adc
push
test
sbb
out
sbb
js
dec
push
inc
loope
pop
stc
test
icebp
stc
jmp
fmuls
pop
lods
iret
mov
dec
aaa
or
cmp
lds
popf
insl
mov
add
addr16
mov
arpl
fwait
dec
push
sbb
push
fcomps
aas
xlat
inc
aam
inc
lods
rcll
adcb
mov
mov
lcall
xor
sbb
ficomps
jle
fcoms
mov
loop
sahf
fsubs
andl
cmp
pop
or
dec
lock
fisttps
dec
bound
add
cmp
adc
adc
add
ret
addb
push
mov
in
xor
outsl
mov
cmp
mov
inc
lods
dec
and
rcrb
jns
pop
scas
repz
pop
fistl
cmp
sbb
jbe
ja
jns
dec
imul
cld
push
jns
imul
jge
popa
test
pop
adc
add
fcomps
and
movsb
jmp
push
xchg
or
xchg
aam
jmp
clc
mov
sub
insl
cwtl
cmpsl
cmp
mov
push
idivl
das
xor
xor
xor
jo
jge
pop
or
xchg
fcomp
mov
lahf
push
sbb
mov
imul
popf
das
add
and
add
mov
add
mov
repz
dec
nop
xlat
xorb
and
movsb
sub
lds
sbb
gs
popa
xor
test
movsl
mov
daa
je
mov
jl
rcll
repz
jmp
xchg
jno
jmp
sub
mov
cli
jle
xor
js
push
dec
add
insb
cmp
fyl2xp1
mov
push
cs
es
clc
fisubl
mov
mov
inc
mov
inc
fwait
gs
in
mov
int3
adc
into
sahf
sbb
jg
jmp
sbb
loopne
daa
inc
mov
xchg
mov
clc
or
test
dec
test
rcll
mov
cli
jp
movsl
pop
leave
leave
rep
into
or
xchg
adc
je
imul
andb
btc
popl
lds
cmpsl
cmp
in
stos
sbb
lahf
adc
xchg
push
imul
or
imul
loop
mov
xacquire
pop
les
jle
cmpsl
daa
loopne
pop
or
fcomps
imul
fxch
clc
adc
pop
lea
adc
leave
ret
shrb
cmpb
sbb
and
call
lods
push
jecxz
fistl
cmpsl
rcrb
xchg
mov
movsb
mov
mov
icebp
cli
cmc
and
std
lods
sub
push
cli
inc
stos
mov
dec
popf
fldenv
sub
push
leave
fsubs
cmc
into
pop
ret
xchg
sti
in
sarb
mov
pop
add
or
push
in
stos
cs
roll
adc
or
xor
and
mov
mov
lret
icebp
pop
pusha
pop
sbb
fisubl
lahf
mov
gs
pop
lods
jno
mov
jne
xchg
xchg
sbb
out
dec
shl
xchg
xchg
icebp
imull
dec
je
sub
ret
xchg
popa
push
xor
outsb
xchg
dec
and
lds
frstor
outsl
mov
insl
sbb
mov
repz
mov
pop
mov
sahf
out
into
pop
mov
cli
or
sub
mov
arpl
pop
dec
sbb
mov
cmp
mov
ss
sarl
movb
ret
sahf
jp
jns
es
pop
push
pusha
cmp
pop
out
sarb
imul
push
and
roll
and
or
daa
push
pop
popf
inc
and
inc
push
cmpsb
imul
xchg
aas
mov
xchg
int3
or
or
cli
and
adc
inc
stc
cmp
pop
lds
lahf
inc
xor
jnp
subb
sub
into
add
shlb
xchg
nop
dec
in
push
cmc
hlt
or
aam
enter
dec
insb
dec
fld
shll
sahf
daa
push
movsb
mulb
popf
cltd
dec
into
mov
fildll
or
or
shlb
xchg
int3
inc
push
imul
out
addb
movsl
sbb
mov
fs
jge
push
sbb
dec
aad
cli
mov
int3
lret
dec
sbb
xchg
sub
jb
xchg
pop
sub
cmpsb
xchg
lcall
ficomps
jo
ja
mov
je
dec
addr16
mov
cmp
aas
scas
and
call
mov
cmp
and
pop
mov
and
out
sbb
test
js
xchg
add
mov
xchg
adc
cmpsb
not
cmp
jne
inc
or
cmp
lods
ret
mov
nop
ret
in
inc
out
jecxz
xchg
in
mov
ret
ret
mov
les
pop
push
mov
xchg
jge
mov
mov
movsb
loop
cmp
sti
mov
push
push
out
popa
dec
jb
mov
int
fldcw
jns
pushw
jg
or
fldcw
out
outsl
nop
cmp
mov
notb
sub
mov
sub
pop
lahf
clc
jns
stos
out
push
mov
inc
push
cmp
and
mov
cmp
popf
jns
imul
inc
fstl
lock
push
pop
lds
xor
icebp
or
mov
iret
icebp
jmp
cmpsl
in
cwtl
pop
pop
stos
xchg
ds
jae
pop
mov
fcomps
dec
sarb
dec
ret
pop
xorb
and
push
jg
fmull
into
cmpsb
pop
push
xchg
cwtl
cmc
fwait
andb
cld
dec
repnz
mov
movsb
ds
cmp
pop
lret
mov
push
loopne
mov
cmp
std
scas
cmp
mov
dec
sub
push
out
pusha
outsl
pop
mov
pop
mov
jmp
outsl
sub
xchg
into
push
and
hlt
jb
pop
and
out
fcompl
sub
push
loopne
outsb
adcb
das
xchg
aas
dec
or
mov
fdivrl
cmc
clc
loopne
enter
adc
insb
clc
scas
cmpsb
xchg
dec
rcll
mov
ds
ret
dec
inc
enter
fsubrl
gs
daa
xchg
icebp
cmpsw
scas
cmc
mov
push
sbb
jne
xchg
insl
dec
dec
aaa
icebp
into
in
adc
add
push
stos
and
sub
adc
int3
cmp
scas
inc
push
daa
daa
mov
sub
cli
call
fstpl
fsts
and
bound
cwtl
movsl
inc
cltd
sbb
sub
inc
leave
int
or
movsb
xchg
jae
sbb
arpl
xor
pop
adc
in
aad
ljmp
rolb
shrl
shrl
out
xchg
cli
and
cltd
lds
jg
scas
pop
fwait
pop
loopne
push
shll
lcall
mov
out
inc
adc
loopne
pop
iret
arpl
add
imull
lds
xor
dec
orb
xchg
push
fwait
mov
mov
xchg
sub
imul
das
in
xor
cmc
in
js
xor
pop
addl
mov
sub
push
xor
add
jge
testl
xchg
pop
in
and
cmp
pushf
mov
fdiv
loope
sub
stos
and
jl
out
xchg
jmp
adc
jns
mov
ljmp
nop
scas
shlb
outsb
out
mov
or
mov
push
mov
mov
inc
sub
ja
inc
in
jp
aad
sbb
outsb
stc
movsl
sbb
bound
adcl
cld
imul
out
or
sub
mov
mov
jg
push
mov
mov
fisttpl
cmp
aas
cmpsb
test
mov
jle
in
and
jp
xlat
mov
dec
lds
mov
scas
popf
push
push
pop
test
lret
aas
int3
sub
mov
dec
filds
pop
or
loop
jp
test
shll
mov
push
fbstp
pop
pop
int
dec
es
adc
push
lcall
iret
cmp
pop
ljmp
adc
cmp
fiadds
mov
popa
sar
outsl
add
sbb
adc
mov
sbb
outsl
dec
pop
xlat
sub
cmc
mov
mov
pop
xchg
jbe
adc
jae
jl
inc
out
test
jecxz
cs
sti
mov
sbb
pushf
testl
add
sbb
lcall
adc
fsubl
aaa
mov
and
ja
mov
mov
jmp
adc
ljmp
scas
mov
repz
mov
test
or
or
jae
lock
xchg
xchg
sub
in
dec
jg
xor
inc
jecxz
add
jp
sbb
icebp
jl
xchg
lcall
mov
xchg
jo
add
rcll
xchg
cmpsl
adc
lock
mov
push
pop
rcr
sub
ss
push
cmpsl
jne
sbb
or
jg
mov
mov
imul
int3
adc
adc
rcrl
daa
hlt
aam
mov
call
mov
push
mov
mov
jne
adcl
sub
sub
add
inc
int3
fnsave
pop
pop
scas
out
dec
pushf
jne
xchg
add
xchg
mov
aad
push
inc
jecxz
adc
inc
lods
cwtl
xor
inc
add
pop
push
push
scas
ret
or
push
jns
adc
sbb
in
popa
pushf
insl
mov
inc
pop
mov
and
cmp
call
sbb
jg
mov
dec
js
lcall
lret
call
xchg
fisubs
xchg
rcrl
aad
stos
sbb
cld
mov
sbb
sbb
divb
movsb
aad
insb
insb
mov
sahf
pop
xorl
jg
mov
das
addr16
shlb
mov
or
jmp
repz
push
push
test
icebp
jnp
aam
sbb
aas
xchg
icebp
inc
popf
and
add
inc
adc
pop
inc
pusha
into
jp
shrb
jmp
cmpsl
jae
loop,pn
ljmp
movl
push
loopne
ja
push
mov
add
sbb
xlat
popa
dec
clc
addr16
jno
sarl
outsb
in
es
or
lea
inc
out
dec
jl
test
jmp
cmp
mov
add
popa
in
push
mov
imul
xlat
sbb
ljmp
insl
dec
pop
sub
dec
adc
push
or
mov
lcall
test
xchg
and
roll
dec
pop
out
lock
lret
or
xchg
jns
xchg
fisubs
popf
mov
test
inc
mov
jo
sub
push
inc
sub
in
cmp
fcomp
sub
addr16
fs
cltd
dec
mov
xor
cmpsb
lea
out
test
mov
lret
sbb
or
int
lcall
jb
sti
add
mov
xchg
cmp
cmp
pop
test
jp
and
ret
and
clc
pop
pop
mov
mov
loopne
in
xorl
outsb
mov
daa
aad
fdivl
mov
jae
jbe
ror
std
addr16
test
cmc
mov
sub
mov
or
subl
mov
pop
jae
dec
scas
add
pop
jmp
leave
pop
imul
xchg
push
inc
cmp
xor
sub
sti
mov
fisubs
fidivl
mov
pop
sbb
mov
mov
mov
pop
das
inc
adc
outsb
movsl
test
leave
shlb
push
out
iret
hlt
and
xor
push
mov
xor
lods
cli
mov
orl
pop
ljmp
pushf
pop
and
jmp
adc
pop
aad
sub
jno
pop
imul
or
mov
scas
movsl
repnz
xchg
scas
jecxz
push
xor
arpl
repz
arpl
or
mov
fidivs
lcall
mov
sahf
jge
jbe
out
push
popl
sbb
pop
mov
mov
jl
mov
inc
js
data16
jmp
leave
decl
mov
dec
add
sahf
movsb
dec
data16
push
cmp
xchg
movsb
dec
jbe
xlat
psubq
mov
hlt
aaa
pop
push
jmp
or
insb
xchg
or
mov
pop
xor
movsb
scas
in
fcmove
lods
loope
aaa
sub
xor
andb
test
pushf
mov
cwtl
mov
jl
mov
ficoml
daa
pop
inc
bound
notl
ljmpw
movsl
add
and
inc
add
daa
stos
imul
in
inc
out
aas
jbe
cs
fisttps
js
test
pop
pop
add
push
das
xor
fwait
inc
fst
pop
inc
xor
mov
cli
cmp
jmp
adc
testl
mov
mov
aad
pop
adc
lods
add
xchg
data16
ds
jo
xor
mov
notl
out
or
mov
jne
in
cltd
rcrl
cmpsb
lcall
inc
std
loope
testb
ss
dec
pop
pop
test
pop
test
xchg
rcr
ds
mov
inc
inc
sbb
sbb
mov
ret
inc
pop
or
pop
int3
jnp
ficomps
inc
mov
mov
iret
xadd
idivb
ds
pop
dec
adc
cmp
push
mov
dec
movsl
inc
cmpsl
movsb
and
push
ss
pusha
cmp
xor
ljmp
cs
dec
lret
sbb
hlt
scas
inc
mov
sub
test
subb
sbb
sub
pop
js
iret
sahf
repz
cmc
ljmp
aaa
inc
sub
and
mov
pop
iret
sbb
jmp
sub
mov
aad
ret
cmpsl
imul
sbb
mov
add
jg
int
pop
mov
mov
push
stc
repz
loop
pop
ss
scas
arpl
push
out
sbb
dec
subl
add
jg
in
pop
mull
mov
inc
mov
inc
mov
push
xchg
nop
int
mov
mov
and
xor
xorb
pop
push
int3
mov
xchg
lock
and
sbb
push
les
repnz
adc
das
xor
mov
lcall
aad
scas
cltd
rol
inc
xchg
lock
scas
mov
xchg
cmp
lods
inc
jle
inc
loop
mov
repz
addl
mov
hlt
mov
rcr
aad
push
sub
jae
xor
int
int
sbb
pop
jnp
fldcw
aam
ss
jmp
imul
cmpsb
sub
or
fdivr
icebp
ljmp
jne
mov
dec
or
movsb
xor
push
pop
rcr
sub
insl
iret
rcr
sbb
fmuls
or
hlt
inc
xchg
pop
xchg
and
test
mov
subl
cmp
mov
sbb
aaa
push
pop
ror
imul
xor
mov
pop
mov
pop
into
inc
stos
outsb
clc
mov
in
shll
jns
lahf
loop
xor
and
lock
jmp
lock
nop
into
add
out
xchg
dec
jae
mov
roll
bound
in
das
jne
into
jo
iret
mov
push
pop
jle
xchg
mov
cmpsl
ja
out
push
movsl
push
sbb
cli
lea
jge
adc
repnz
repnz
movaps
mov
testb
jl
aas
pop
or
sti
lea
and
xchg
cs
adc
adc
sub
fwait
or
or
xchg
sahf
xchg
mov
fwait
nop
xor
mov
addb
hlt
cltd
sbb
add
bound
mov
cmp
adc
pop
dec
pushf
dec
call
mov
mov
sub
pop
outsb
aad
in
sbb
mov
and
mov
mov
adc
pop
movsb
fs
lds
aam
inc
out
push
and
push
xlat
sbb
hlt
and
sub
xor
cmp
ljmp
pop
xlat
xor
sub
adc
push
pop
jno
cltd
sbb
fiadds
lea
or
jle
and
mov
xchg
or
insb
pop
mov
mov
or
mov
dec
mov
inc
xchg
aad
fbld
jge
jne
adc
pop
sar
xchg
sbb
pop
lock
repz
cltd
xchg
es
or
lods
nop
xor
ret
push
ja
or
test
lret
dec
mov
rolb
lds
jo
adc
aam
mov
fwait
mov
cmpsb
aad
mov
xchg
add
ljmp
pop
sub
dec
test
cmpsl
xchg
adc
ja
inc
repz
pop
push
das
push
es
cmp
iret
add
xchg
repnz
cmc
xor
sub
mov
jmp
jno
pop
popa
test
shl
call
fwait
mov
mov
jb
xor
fistpll
cmp
or
js
and
xor
int3
int
hlt
shrb
iret
shll
les
push
aam
jge
cs
pushf
xor
or
in
ds
xchg
xchg
pop
je
fidivrl
lret
and
xor
fsubr
mov
mov
stos
mov
popa
inc
xor
ljmp
mov
jle
imul
stos
cs
and
mov
push
or
outsl
add
xlat
cltd
pop
imul
mov
sbb
xor
call
lret
cmc
sub
xor
push
nop
int3
cld
fs
sti
jbe
enter
aad
add
jbe
lock
insb
or
ret
scas
jge
icebp
jl
and
dec
ds
sbb
lcall
cwtl
clc
push
add
lret
push
pand
outsb
out
inc
mov
jnp
sbb
xor
jo
or
add
sbb
xchg
fidivrs
jmp
adc
mov
jg
dec
dec
lret
mov
gs
jno
popf
mov
sahf
jnp
pop
adc
fstps
or
les
je
iret
insl
outsb
cmpsl
or
cwtl
das
mov
into
adc
rol
sub
rorl
fldl
jnp
popa
call
xchg
inc
cli
jle
cltd
call
cmp
scas
inc
xchg
in
in
cmp
pop
xor
out
sahf
dec
inc
ss
mov
jae
pop
xchg
sub
dec
mov
pushf
mov
or
mov
into
sahf
imul
aam
notb
int3
mov
mov
imul
lcall
mov
sub
in
into
lret
arpl
lea
and
negl
into
push
mov
push
cmpsl
ss
mov
mov
pop
inc
sub
xor
mov
into
je
mov
mov
in
jnp
push
cli
dec
in
ds
push
push
test
pushf
insl
das
aaa
pop
std
shrb
cmpb
xchg
stos
dec
mulb
repnz
cltd
repz
adc
dec
push
jno
push
mov
mov
mov
in
mov
sub
lea
mov
iret
push
inc
fcoms
dec
push
xchg
aaa
das
loope
gs
jecxz
cmp
andl
mov
xor
cmp
cmpb
pop
shl
int3
int3
adc
sbb
sti
loopne
je
add
out
adc
push
into
movsb
sbb
xchg
sub
adcl
adc
pushf
pop
bound
xchg
imul
xchg
inc
fisttpl
jg
fstpl
enter
sub
cmp
sub
repz
fnsave
aam
fs
mov
sbb
xlat
mov
cmpsl
xor
std
add
cmp
movsb
sbb
jbe
movsl
mov
jne
mov
out
jmp
lcall
roll
int3
xor
xchg
fbld
mov
stos
ljmp
cmp
loopne
loop
addr16
repnz
add
mov
pop
dec
jmp
mov
jo
es
jne
lods
stos
mov
cmpsb
jle
xor
lahf
fimull
xor
xchg
stc
sub
dec
loope
xchg
out
loop
sbbl
push
clc
je
pusha
inc
rorb
sbb
fsubs
mov
leave
push
or
aaa
ret
in
data16
ss
xchg
or
ret
mov
push
cmp
jge
test
sbb
out
xchg
push
dec
cmpsl
int3
fs
adc
dec
fisttpl
fcoml
mov
dec
xor
mov
inc
push
sub
xor
mov
das
add
imul
push
inc
push
aam
xor
pop
jb
xor
aad
cmpsb
xchg
mov
sub
inc
out
movsl
or
push
and
test
test
add
sbb
fucomp
jne
mov
xchg
mov
nop
push
xchg
js
jne
rorb
dec
in
xchg
jb
in
pop
add
adc
xlat
outsl
xorb
dec
repz
in
sub
mov
xchg
jg
ljmp
das
xor
fists
lret
xchg
lret
divb
out
stos
jb
push
dec
cltd
cmc
mov
inc
add
dec
sbb
mov
iret
pop
fsin
jo
and
cmp
mov
inc
pop
push
rolb
or
popl
cmpsb
fdivs
movsl
popf
cmp
pop
imul
push
nop
fsubrl
cmpsl
push
cvtps2pd
add
lcall
loopne
xchg
and
or
stc
push
adc
or
cmp
repz
aaa
pop
imul
dec
je
mov
mov
pusha
inc
mov
xor
dec
adcl
jl
dec
jecxz
pop
mov
out
and
and
pushf
lods
test
cmpsl
les
cmpsl
sbb
pop
ljmp
adc
dec
loop
pop
dec
mov
int3
or
stc
pop
or
sub
outsl
jg
pop
insl
mov
in
insl
pop
pop
adc
push
and
repz
arpl
fs
fwait
gs
xchg
aas
out
jmp
cmp
int3
pop
cwtd
jle
xor
subl
dec
pop
nop
ret
loope
mov
jl
inc
jae
cld
mov
mov
pusha
push
adc
gs
insl
mov
nop
sbb
fwait
push
insl
push
dec
into
icebp
hlt
addr16
sub
test
leave
dec
xor
cs
idivl
xchg
cmpb
lds
jo
dec
xor
out
jae
aas
sbb
stc
mov
test
pop
mov
xchg
imul
push
jnp
inc
xchg
xor
ds
aas
jbe
adc
xchg
mov
test
xchg
popf
mov
scas
inc
outsl
enter
sahf
xor
jge
lock
je
cld
call
sub
jle
js
xchg
fistpll
imul
mov
inc
stc
not
pushf
sbb
mov
mov
cmpsl
iret
imul
lcall
in
or
sub
sub
xor
xchg
ret
scas
sub
aaa
jbe
mov
cmpsb
sbbb
fbstp
aam
dec
movsb
out
push
pop
lret
insb
outsl
mov
xchg
inc
aam
outsb
mov
dec
data16
into
loopne
into
add
sahf
fdivl
or
gs
lcall
xchg
out
push
rclb
pop
cmp
jns
dec
rorl
adcl
ret
icebp
pop
imul
into
or
imul
push
dec
out
push
push
cmc
fwait
subl
mov
or
mov
adc
imul
pop
jo
lea
add
aad
sub
mov
idivb
shlb
mov
lea
add
xchg
iret
cmp
adc
xchg
ds
xorl
xor
sub
rcll
jae
test
sbb
cmp
js
addr16
in
in
clc
rorb
push
mov
xor
ret
sub
push
xor
in
jns
popa
xchg
fwait
inc
pop
lods
int
fstpt
inc
mov
pop
insl
fnstenv
loope
into
inc
leave
sbb
sub
cltd
and
sub
push
dec
sub
ss
cmpsl
cmp
and
push
jmp
andb
fs
out
xchg
nop
loopne
add
inc
stc
or
push
sub
int
arpl
lcall
call
int
stc
mov
mov
dec
gs
xchg
ret
lahf
dec
repz
stc
insl
and
rol
dec
pushw
mov
insb
out
pop
in
xchg
dec
mov
ror
xchg
and
leave
mov
fwait
into
je
iret
lds
adcb
mov
stos
scas
cmpsl
sbb
or
pop
fiaddl
stc
repz
xchg
fwait
and
fstps
sar
mov
cld
jge
or
push
enter
call
scas
inc
cmp
and
pop
pop
movsl
in
bound
cli
sbbb
ja
inc
cmp
aam
dec
mov
imul
dec
xlat
cmp
inc
pop
ss
decb
sahf
cmp
fistpl
xchg
into
outsb
popf
and
movsl
cwtl
and
fisttps
sbbb
push
icebp
cwtl
mov
aas
xchg
bound
sahf
xchg
aaa
repz
fldcw
mov
mov
inc
fsincos
dec
mov
cltd
in
rorb
aam
mov
cmp
or
in
cmc
mov
aad
sbb
push
ljmp
adc
repnz
adc
cmp
jb,pn
push
aaa
dec
call
lahf
mov
gs
outsl
dec
cmp
ret
push
or
lods
lods
dec
adc
test
mov
ret
inc
dec
xchg
or
pop
sbb
xchg
test
bound
push
lock
outsl
and
xor
rolb
pmaddwd
xchg
mov
leave
ffree
int3
adc
cmp
xchg
push
in
push
cmp
les
xchg
jg
push
xlat
adc
or
xchg
sbb
adc
xchg
test
addl
adc
fwait
movsb
and
xor
in
scas
and
jne
push
mov
push
cmp
lods
push
mov
imul
out
jl
mov
inc
jns
sub
dec
or
stos
lea
js
inc
add
lea
cmp
and
loopne
into
add
sahf
fsubrl
push
fcoms
outsl
nop
sahf
int
adc
movsb
scas
out
fnsave
shlb
imul
int
movsb
outsb
push
addr16
cmp
sbb
sbb
pop
in
pusha
pop
frndint
out
xor
jno
inc
and
ret
addb
mov
push
add
out
addr16
push
rcr
cli
mov
push
sbb
inc
enter
imul
clc
sub
pusha
adc
and
xor
or
bound
daa
dec
daa
push
ret
inc
daa
cmpsb
or
imul
and
dec
push
cmc
lods
movsb
roll
ret
insl
pop
stos
mov
push
int3
insl
inc
push
popf
ljmp
or
les
out
push
inc
std
push
test
pop
test
lock
xor
dec
fwait
ljmp
mov
jo
gs
and
push
or
push
bound
ds
xorl
or
dec
inc
xor
mov
add
jbe
mov
pop
cwtl
xchg
sub
sub
cmpsb
pop
push
mov
lods
insl
dec
mov
out
std
and
fildll
jl
sbb
jo
mov
fnstsw
fistps
mov
dec
sub
scas
int3
test
filds
mov
in
mov
dec
es
dec
xor
mov
imul
cmp
in
and
jp
aam
outsl
das
push
ret
adc
and
lds
lds
push
jae
sbb
nop
ds
inc
fnsave
adc
add
adc
add
insl
out
or
cmp
sub
mov
adc
jne
sbb
and
xor
pop
mov
xlat
xchg
cmc
cmp
jne
xlat
mov
add
mov
bound
stos
xorl
pop
rcrb
scas
push
push
insb
xchg
lods
enter
push
int3
dec
xchg
or
loopne
adc
sbb
add
push
sub
repz
fs
aaa
mov
out
xchg
pop
leave
stc
add
dec
nop
stc
sbb
push
ret
sbb
xor
lods
insl
adc
aam
jg
pcmpgtd
add
int
xchg
ret
frstor
cmpsl
nop
mov
in
xlat
add
jbe
or
out
add
push
ss
jl
push
lahf
sahf
mov
je
nop
cmpsl
icebp
out
dec
lcall
addl
popa
push
cmpsb
adc
mov
or
out
jecxz
or
or
cwtl
mov
and
jae
mov
sbb
fimuls
mov
sbb
aad
xchg
insb
sub
test
mov
cmp
repz
leave
jo
js
mov
clc
xchg
mov
dec
lret
or
xchg
lock
mov
xchg
hlt
cmp
push
jge,pn
adc
inc
out
sti
mov
jbe
xor
and
pop
xor
enter
nop
add
and
inc
imul
icebp
pushf
inc
xchg
call
and
xchg
pop
xchg
in
or
aad
daa
push
pop
sub
das
jmp
loop
mov
jmp
push
inc
das
ret
and
jl
aad
clc
into
push
sti
push
pop
add
aas
mov
mov
loope
ja
cmp
or
into
push
sti
push
pop
add
cmc
push
bound
outsb
in
cli
pop
pop
pop
mov
jecxz
call
sub
nop
jg
into
sti
test
cmc
daa
pop
dec
scas
or
jg
jg
ss
and
xor
in
jp
sub
mov
js
add
and
lret
in
in
shlb
dec
cmp
popf
repz
inc
sbb
adc
rcrb
jae
ja
xchg
xor
push
push
push
fdivrs
emms
sarl
ret
fwait
subb
rclb
outsl
add
pop
cmp
jno
fstl
leave
xchg
add
sub
jne
ja
mov
mov
mov
xor
adc
mov
popf
xchg
push
and
cld
test
movb
popf
fbld
cmp
fcoms
xchg
pop
addb
sub
inc
mov
sbb
shlb
inc
xchg
mov
lret
dec
xlat
lret
loopne
jo
aad
sub
mov
jae
cmpsl
cltd
jg
es
pop
or
pop
or
nop
stos
imul
iret
jnp
sbb
cmpsb
fmuls
sub
and
mov
idivb
mov
sbb
xchg
dec
sbb
inc
lods
add
in
fisttps
leave
je
imul
enter
repz
loop
xchg
cmp
dec
push
mov
cmp
mov
push
jle
xchg
pop
call
stc
cmp
jbe
mov
popf
jbe
mov
stc
xchg
sub
sbb
cmp
stos
or
mov
mov
dec
pop
hlt
jmp
lret
sahf
in
mov
xchg
hlt
and
mov
sbb
lods
add
icebp
jg
pushf
test
repnz
ss
xlat
dec
cld
scas
pop
outsl
shl
ficomps
outsb
push
rolb
sar
dec
push
jne
sarb
fs
add
sbb
imul
jb
push
into
mov
ss
xchg
mov
mov
js
mov
sbb
mov
jne
pop
sbb
xchg
sbb
dec
mov
mov
mov
lods
cmp
test
dec
mov
cmp
adc
sbb
dec
dec
push
inc
std
popf
adc
out
push
ret
scas
lock
mov
ja
push
shlb
jbe
outsl
xchg
dec
cmp
nop
sbb
iret
scas
cmpsb
push
fsubs
or
call
cmpsb
cltd
cwtl
in
dec
sub
adc
cltd
fwait
add
dec
pop
sbb
inc
adc
sarb
pop
les
and
je
mov
or
pop
ror
pop
setg
push
pop
push
stos
and
ficoms
or
cmpsl
aam
popf
mov
pop
sbb
jg
outsl
cvttps2pi
jb
stos
cmp
pop
mov
sbb
xor
pop
push
xchg
dec
sti
and
out
adc
mov
dec
jecxz
in
mov
in
imul
jns
scas
xchg
dec
dec
xchg
pop
xchg
sub
mov
mov
out
gs
xor
pusha
push
fisubrs
inc
loopne
push
insb
popa
jecxz
addl
loopne
push
incb
jno
shrl
cwtl
dec
cmp
inc
dec
push
icebp
aam
sub
fdiv
rcr
cld
xor
cwtl
call
dec
push
cmpsb
jmp
repnz
lahf
dec
and
std
leave
xor
mov
xchg
push
mov
add
jle
arpl
out
je
ja
add
cs
xchg
cmpsl
jl
rcll
push
xchg
push
push
xorl
or
and
lcall
xor
and
dec
in
mov
push
rcrb
imul
insb
mov
push
mov
les
enter
lcall
test
and
ret
gs
or
lahf
jl
mov
test
sub
inc
sub
std
nop
popf
sbb
repz
xor
add
adc
push
and
negl
sbb
negl
lcall
jno
lret
dec
je
gs
ret
sarl
cmp
or
pop
cmp
push
dec
inc
inc
fdivl
test
jle
mov
jno
adc
sub
or
or
xor
insb
icebp
arpl
shrb
mov
mov
fistpll
test
dec
les
lods
lods
daa
or
inc
mov
push
jae
inc
cmpsb
mov
jne
ja
mov
cs
cli
xchg
rep
pop
sub
orl
sub
dec
cltd
add
in
mov
jae
int3
dec
mov
mov
pop
pop
add
fistpl
jl
pop
and
das
es
and
mov
mov
js
jecxz
sbb
insb
push
aam
mov
adc
pop
mov
mov
data16
aas
and
in
cmp
mov
xchg
insb
cmp
mov
mov
jg
pusha
loop
or
jl
push
mov
adc
push
sti
rcrl
in
pop
cmpsb
adc
pop
test
icebp
icebp
mov
add
sbb
cltd
inc
mov
mov
cwtl
in
dec
sub
adc
cltd
fwait
add
dec
pop
adc
aad
adc
mov
mov
ret
and
cld
shll
aaa
lock
test
sub
adc
mov
push
jo
add
push
enter
scas
insl
popf
shr
sbb
sti
cmp
insb
iret
lea
imul
mov
fistpll
cmpxchg
jg
ret
outsb
mov
add
addr16
mov
or
fcomps
jnp
fwait
jno
xchg
popf
lds
pop
jno
in
push
rcrb
ljmp
inc
inc
inc
into
leave
dec
push
mov
mov
dec
lea
pop
insb
mov
repnz
sub
jp
icebp
mov
jle
pop
aam
sub
mov
aaa
stos
ret
sarb
leave
jo
lret
jp
push
sbb
stos
out
xor
ret
push
cmp
adc
and
call
fnstcw
ret
fcomi
or
and
dec
lret
and
hlt
push
pop
push
pop
andb
lret
dec
fcomps
mov
dec
sub
dec
sub
aam
sub
fdiv
rcr
cld
xor
cwtl
call
dec
push
cmpsb
jmp
repnz
lahf
dec
and
std
leave
xor
mov
xchg
push
mov
add
jle
arpl
lods
cmp
adc
aam
rorl
push
stos
mov
and
out
sbb
cmp
mov
out
sbbl
icebp
jecxz
pop
hlt
xchg
xor
not
add
addr16
loop
in
or
mov
and
insb
cmp
or
in
inc
jle
imul
adc
mov
mov
adc
pop
pop
mov
lret
inc
int3
movsl
adc
insl
add
sbb
faddl
push
enter
sub
sub
lret
lods
call
add
pusha
subl
or
js
push
sbb
jns
dec
dec
outsb
stc
xchg
aas
stc
xchg
sub
popa
call
cmp
adc
xor
xchg
adc
pop
rorl
pop
mov
jmp
add
decl
xor
cmpsl
jle
sbb
popf
in
repz
call
pop
sbb
push
into
inc
adc
mov
bound
dec
loopne
ret
fdivrs
outsl
clc
cmc
mov
pushf
cmp
inc
cwtl
insl
fwait
dec
sbb
xchg
mov
mov
enter
fisubs
cmp
packuswb
lcall
jne
jbe
xor
aaa
jae
adc
lea
sub
sub
leave
mov
push
cmp
roll
bound
mov
jae
ret
lea
push
rclb
and
clc
call
mov
push
xchg
xor
sbb
mov
cmpsl
xchg
sbb
inc
das
loopne
push
pop
xor
xchg
xor
daa
jmp
dec
dec
out
loop
mov
push
les
sbb
loope
repnz
inc
jb
fldcw
add
and
repz
cmp
lret
cmpsb
pop
push
dec
lret
lahf
mov
jle
js
fcmovnb
daa
adc
inc
pop
cmpsb
cmp
cmp
mov
mov
xchg
aas
stc
xchg
sub
xchg
outsb
jns
xor
loop
push
sbb
fwait
jnp
mov
icebp
jecxz
sti
inc
in
shll
inc
mov
adc
or
insl
dec
frstor
sub
repnz
popa
mov
cmp
roll
xchg
jge
push
add
push
setl
rep
insl
js
lret
mov
add
mov
cmpsb
cltd
cwtl
in
dec
adc
fldt
xor
mov
dec
inc
push
cmp
sub
data16
mov
xor
pushf
push
popf
dec
push
pop
fsubs
mov
pop
sub
inc
jp
mov
or
mov
lret
cmpsb
insb
iret
loopne
lock
sahf
sti
gs
push
test
mov
lods
mov
inc
lret
out
sbbl
aad
sbb
lds
inc
mov
aas
jae
mov
ficoms
xchg
fidivl
lods
dec
and
jle
fdiv
lret
xor
popa
js
inc
cmp
std
jl
and
testb
sahf
scas
out
sbb
scas
inc
das
push
dec
jb
aad
out
cmp
jg
push
adcb
mov
and
mov
dec
cli
cs
or
addl
mov
mov
daa
sti
out
fidivrs
pop
mov
xor
imul
adc
cli
sub
mov
push
sbbl
lret
addr16
add
pop
scas
scas
mov
jle
mov
daa
sti
out
inc
xchg
cmp
xchg
push
xchg
fldcw
test
out
minps
mov
pop
mov
gs
adc
ds
dec
int3
sbb
lret
rcrl
sbb
enter
int
mov
fildll
call
push
cmp
gs
adc
inc
cmc
pop
mov
stos
or
jbe
mov
mov
stos
pop
nop
jb
sbb
jge
ds
push
test
inc
fs
mov
push
loop
daa
and
cmpsl
dec
jg
xor
push
in
outsl
repz
mov
jb
push
pop
enter
lods
add
shl
stc
sub
leave
cmp
dec
inc
mov
in
mov
xchg
adc
outsb
out
jle
xor
and
fwait
mov
loopne
fwait
cltd
sti
xchg
xor
inc
outsb
test
pop
jge
out
push
mov
dec
stc
fst
mov
pop
aaa
sarb
push
int
sbb
and
lds
aas
out
movsl
adc
in
loope
push
jle
test
jge
add
xchg
mov
mov
jmp
lret
das
sbb
cmp
pop
xchg
dec
push
mov
adc
cmp
sub
int
jno
xchg
push
cmp
in
hlt
scas
jne
ds
mov
sub
add
and
ja
out
je
ret
iret
mov
testb
adc
sti
call
add
fs
inc
jno
shll
data16
jae
es
mov
mov
mov
or
jnp
shl
and
add
or
sub
mov
inc
arpl
xchg
fwait
in
outsl
mov
lods
movsl
and
push
or
mov
push
test
xlat
mov
xchg
or
shll
push
or
mov
xchg
hlt
in
fdivrl
in
jl
call
leave
cmp
icebp
into
addr16
or
pop
andl
mov
dec
dec
inc
add
jmp
je
shrl
mov
arpl
jmp
cmp
bound
cmp
pop
rcrb
rorl
sub
addr16
jo
fstps
or
push
cs
push
xlat
lods
and
daa
pop
xchg
sbb
imull
push
pop
inc
shll
and
cld
je
cmpl
test
cmp
mov
dec
shl
in
and
rcrb
loop
pop
xchg
cmp
push
add
inc
xchg
das
push
sbb
jp
fwait
mov
or
cmpsl
cs
mov
aad
push
xorb
dec
cmp
mov
xchg
cmp
push
lahf
mov
cwtl
mov
sbb
dec
sahf
inc
push
pusha
mov
sti
fpatan
mov
ds
fisubrs
adc
repz
lds
add
pop
iret
sub
repz
and
xchg
push
scas
sub
pop
push
fldt
dec
aad
mov
xor
shlb
cmpsb
in
sahf
int3
lret
pusha
jge
mov
js
ss
in
sub
and
xchg
hlt
in
js
xor
mov
mov
sahf
add
fidivl
loopne
mov
leave
sbb
inc
cmp
cwtl
lods
xor
repnz
movsb
les
cmp
xor
or
mov
ficoms
rcrl
fucom
push
or
iret
bound
cmp
adc
scas
push
sbb
push
mov
sub
sub
xchg
and
add
fwait
jnp
clc
sub
cmp
mov
cmp
popa
or
je
and
lret
push
insl
shlb
dec
rcll
popf
lahf
push
or
imul
cmc
lcall
dec
push
dec
lock
push
mov
adc
rorb
and
add
mov
bound
mov
ret
imulb
xlat
inc
mov
jmp
test
xor
push
das
sahf
cmp
cmp
or
xor
xor
cltd
jns
inc
xlat
dec
shll
es
sti
or
inc
mov
jb
mov
xor
xor
mov
jb
cmpsb
jp
mov
idivl
fwait
inc
mov
lcall
les
outsb
pop
dec
outsl
data16
sti
in
test
cmp
mov
cli
sbb
jg
inc
pop
fwait
mov
pop
lahf
add
lods
ret
xchg
movsb
dec
xchg
test
and
rdpmc
jle
jp
add
mov
sub
in
xchg
fsubrs
pop
sub
dec
mov
shll
ja
sahf
xchg
sbb
bound
movsb
les
cmp
repnz
jl
xchg
push
jb
lods
lods
cmp
xor
mov
lcall
xor
pop
shlb
mov
sub
jnp
rolb
test
cmp
std
out
cmp
popl
cmp
daa
jb
cmp
mov
jecxz
sub
lcall
mov
js
push
and
add
je
push
sbb
filds
aam
mov
fimull
adc
mov
push
outsb
jb
loope
pop
mov
popa
bound
outsl
pushf
cld
sub
mov
xor
rclb
xor
pop
and
mov
inc
add
std
dec
ret
or
mov
sub
popf
mov
mov
ss
decl
or
sbb
stc
pop
aaa
mov
mov
cwtl
mov
push
les
jo
mov
dec
daa
push
add
mov
rclb
sub
pop
dec
xchg
xor
xor
pushf
sbb
ss
mov
cmpsb
repnz
lods
pop
xchg
sar
jmp
jmp
or
xchg
lret
inc
cli
inc
or
mov
repnz
add
cmp
add
adc
push
repnz
push
sub
mov
mov
add
imul
adc
push
insb
or
iret
cmp
lods
push
push
scas
je
jge
test
popf
pop
inc
hlt
jno
movsl
shll
test
and
push
push
aas
lahf
adc
not
inc
sbb
bound
adc
dec
dec
push
ss
dec
pop
jns,pt
movsl
lods
scas
add
dec
jmp
and
push
sbb
push
ss
jne
cmpps
lea
adc
mov
inc
xor
push
jae
xchg
fdivrl
adc
push
repnz
push
sub
cmp
vunpcklpd
pop
sub
pop
mov
jno
arpl
or
iret
cmp
lods
push
push
scas
je
jge
test
popf
pop
inc
hlt
jno
movsl
shll
test
and
sbb
push
cli
adc
adc
inc
sbb
bound
adc
dec
dec
push
sbb
or
jns
movsl
lods
scas
add
cwtl
inc
in
dec
sar
mov
mov
mov
push
movsl
int3
push
out
orb
dec
xchg
out
rcrb
mov
ja
push
mov
dec
and
sub
mov
lds
xchg
insb
add
or
andb
mov
outsb
mov
pushf
mov
mov
sub
fnsave
dec
arpl
repnz
mov
rclb
push
xor
insl
hlt
push
rcr
fwait
dec
jg
int
sub
adc
enter
cmp
xor
ss
cmpsl
xor
fisttpll
iret
sub
addr16
jo
fstps
or
push
test
mov
mov
mov
mov
mov
shll
test
add
and
xchg
mov
mov
cli
xchg
fadds
hlt
repz
xor
lret
std
mov
rorb
xor
jmp
mov
mov
repnz
lods
jle
sbb
xchg
sub
or
pusha
xchg
adc
mov
ficomps
dec
pop
mov
adc
jg
scas
push
shl
xor
and
cmp
cs
in
js
jbe
callw
sbb
mov
dec
and
sub
mov
aad
aam
jmp
jl
push
mov
mov
sbb
cltd
xchg
mov
mov
dec
je
mov
imul
and
outsb
mov
lds
mov
adc
pop
or
push
mov
adc
inc
fstl
imul
inc
insl
mov
orb
ret
into
adc
and
or
test
pop
adc
push
push
mov
xor
sahf
dec
mov
divb
mov
mov
pop
loopne
je
or
dec
loop
sub
addr16
jo
fstps
or
push
test
mov
popw
cmp
loop
xorl
stc
outsl
ficoms
rcrl
adc
shrb
dec
sub
push
pop
xchg
sbb
ror
inc
xor
stos
inc
sub
jl
sbb
aas
sbb
mov
push
jbe
push
add
xlat
add
cs
jnp
dec
sbb
fidivs
cltd
jg
inc
mov
xchg
add
sar
adc
xchg
dec
xchg
movsl
jno
cmpsl
inc
dec
hlt
outsl
mov
add
push
mov
adc
nop
pop
push
push
idivl
dec
mov
dec
and
sub
mov
fisttpl
dec
lret
mull
insb
test
inc
jo
jecxz
stos
out
rorl
inc
dec
jmp
notl
int3
lret
mov
push
fmull
and
sbb
xchg
andl
jecxz
leave
xor
rorl
jge
dec
xchg
mov
mov
xor
loopne
ds
xor
stos
jns
inc
iret
jnp
std
ljmp
ljmp
ret
outsb
pop
dec
outsl
data16
sti
in
inc
fidivs
push
sarb
add
mov
ss
stc
sbb
sarb
mov
cmp
fcmovbe
ficoml
dec
xor
data16
mov
jb
hlt
or
mov
mov
inc
lods
es
js
cmc
mov
xchg
mov
push
fucomip
ficomps
cmpsb
insb
aad
popa
and
leave
jns
addl
insb
in
bound
jnp
xor
sub
outsl
daa
loop
mov
popf
and
push
pop
pop
and
jmp
cmp
xchg
jo
movsl
gs
shll
or
sub
jecxz
pop
outsb
xchg
ret
mov
pop
mov
push
enter
xlat
iret
jnp
jle
sub
dec
sbb
es
inc
xor
lock
mov
mov
ljmp
adc
sub
add
out
out
loope
clc
fwait
jg
test
push
xor
fstl
mov
imul
pop
jp
cltd
jg
pusha
jmp
mov
sbb
mov
inc
cmp
and
or
insl
sub
and
add
lret
ljmp
movb
mov
dec
fdivrs
mov
scas
push
aam
mov
adc
daa
sbb
lods
fs
pop
into
mov
popa
xchg
pop
dec
cmpl
and
shlb
push
sub
pop
imul
mov
sarl
xor
or
add
dec
test
mov
pop
mov
stos
mov
popf
sbb
push
jbe
mov
sub
pop
mov
adc
or
bound
hlt
int3
add
sbb
loopne
int
pop
pop
arpl
jle
aaa
cmc
add
in
lret
test
xchg
imull
scas
fucomp
nop
mov
dec
ret
outsb
cmpsl
ds
out
mov
pop
jp
dec
mov
jmp
xchg
pop
xlat
and
push
and
and
sub
mov
popf
mov
int3
loope
adc
sbb
push
sbb
fimull
xor
xchg
cmc
or
mov
hlt
test
stos
fwait
push
jmp
add
fcompl
int3
cmp
xchg
aaa
sub
and
ja
fwait
cltd
mov
pop
xchg
rolb
divb
dec
rorl
pop
jbe
aas
add
pop
into
leave
jns
addl
fs
pushf
mov
mov
rorb
and
mov
adc
jle
sbb
cwtl
jae
and
jge
jmp
mov
sti
cs
iret
push
leave
insb
in
fnstcw
jp
js
stos
push
cmp
xchg
test
sub
pusha
or
and
pushf
jmp
adc
fmull
xorb
sbb
ja
sbb
mov
dec
arpl
lcall
cli
dec
movsl
and
xchg
rolb
int
adc
sub
sub
add
push
or
fistps
mov
enter
in
cmc
sbb
call
xchg
test
fabs
push
icebp
sub
paddq
and
into
xor
xor
jecxz
mov
leave
jle
add
les
cmc
mov
ret
mov
aam
jl
fldl
inc
lods
push
movsb
scas
or
xchg
jl
cwtl
dec
in
repz
ror
adc
xor
fmull
jl
sub
stos
lods
cmpsl
lret
je
fwait
lods
mov
dec
and
pop
push
sub
jl
adc
inc
aaa
lea
or
lcall
jno
jg
xchg
scas
mov
movsb
cmp
dec
xlat
dec
sti
arpl
sub
sbb
jb
movsb
and
mov
cmp
jb
pop
daa
test
adc
fildl
std
out
in
xorb
jnp
call
data16
adc
or
push
pop
push
subl
xor
push
testl
lods
ror
test
mov
ja
sbb
lret
or
lods
cld
fs
lods
test
xor
test
push
jmp
stc
inc
stos
das
dec
popf
cmp
inc
cmpsl
addl
aaa
xchg
pop
push
scas
les
mov
imul
stos
adc
outsl
dec
mov
stos
in
mov
jge
inc
pushf
test
xor
jp
mov
push
jle
push
xchg
aaa
jmp
nop
mov
jbe
cmpsl
fmuls
divl
sbb
jnp
mov
mov
mov
sti
cltd
sub
xor
fistpll
fistl
arpl
lock
into
aad
aas
push
add
add
lods
or
addr16
xchg
dec
xor
mov
hlt
inc
jmp
rcrb
push
out
mov
sbb
ds
jb
int3
pusha
clc
push
and
push
pop
jl
popf
mov
movsl
mov
dec
and
sub
mov
lea
mov
movsl
js
dec
inc
pop
pop
je
out
shrl
mov
inc
cmp
pop
xchg
sub
data16
sbb
xchg
add
mov
popf
testl
or
scas
mov
movsb
mov
pop
adc
jge
add
ret
jnp
repz
and
lods
xchg
jp
xor
mov
inc
cmpsl
inc
inc
mov
jno
jg
xchg
scas
mov
movsb
arpl
and
push
hlt
lret
sbb
stos
adc
sbb
jb
pop
daa
test
adc
fildl
std
out
in
xorb
jnp
call
data16
adc
or
push
pop
adc
dec
popf
mov
mov
pop
fwait
dec
mov
pop
mov
add
sbb
mov
lods
test
xor
test
push
jmp
stc
inc
stos
das
dec
popf
cmp
inc
cmpsl
addl
aaa
xchg
pop
push
scas
les
mov
mov
or
shrl
xchg
stos
in
mov
jge
inc
pushf
test
xor
out
mov
and
lcall
aaa
jmp
nop
mov
jbe
push
subl
cmp
addr16
xchg
dec
pop
pop
push
das
xor
ficoms
cmp
cmpsl
and
je
cltd
cmp
adc
mov
int
mov
xor
rorb
xlat
nop
jb
jne
adc
pop
or
popf
xor
in
repz
andb
jle
xchg
push
mov
push
mov
sbb
sbb
imul
popf
dec
or
cltd
sbb
and
sub
push
xchg
inc
and
cmp
ficoms
imul
mov
jbe
cmp
inc
jo
loope
mov
mov
cs
ret
push
mov
sbb
cmp
and
cmpsl
mov
icebp
push
rcrb
adc
ret
cmp
sahf
mov
fmuls
adc
inc
xor
pop
ret
cltd
jae
insb
mov
push
mov
mov
js
dec
and
test
cmp
and
bound
jo
lcall
sbb
add
pushf
add
ds
pop
imul
imul
push
xchg
inc
lret
mov
or
jns
pop
stos
std
xor
sbb
push
enter
andb
jns
test
push
fistl
push
mov
dec
and
sub
mov
add
xchg
cmp
mov
and
mov
and
sbb
popf
mov
out
shlb
lret
out
mov
push
pop
and
xchg
jo
jl
add
push
jbe
loope
fmuls
xorb
or
mov
jnp
xchg
data16
xchg
mov
pop
mov
add
out
les
adc
push
int3
ds
scas
inc
fmulp
scas
mov
push
sbb
push
outsb
push
lods
pop
jle
out
fdivl
cmp
or
dec
inc
mov
inc
and
cmpsb
cmpl
lret
add
or
xchg
shrl
cmp
xor
xor
iret
sub
addr16
jo
fstps
or
push
test
mov
in
mov
clc
mov
lea
pop
ss
ljmp
mov
pop
sub
push
jnp
jb
inc
cmpsb
sub
xchg
es
xlat
scas
mov
cmp
ret
stos
mov
jp
cmp
jle
sti
xor
test
sbb
pusha
mov
ss
call
pop
inc
cmp
cwtl
cld
sub
jno
pop
inc
dec
xorl
sbb
stc
mov
sub
fists
and
jno
jns
adc
mov
stos
ss
dec
sub
loope
stc
cmpsl
inc
in
out
repz
and
ror
dec
mov
jg
addr16
loopne
aad
divb
cmpsl
dec
jp
sbb
mov
pop
lahf
push
mov
jmp
or
push
mov
ret
pop
ljmp
and
push
adc
pop
mov
or
cs
fsubrp
movsb
sahf
nop
not
movsl
in
xor
sub
sti
inc
sbb
notl
pop
mov
and
mov
and
jo
mov
int
cli
lret
mov
mov
daa
jb
adc
nop
and
dec
cmp
jmp
sub
insb
rep
add
xchg
mov
mov
mov
jmp
mov
jmp
add
outsb
pusha
bound
int
cld
xchg
clc
mov
sub
mov
test
dec
addb
clc
jns
pusha
mov
rorl
add
jb
cmc
jecxz
and
movl
mov
imul
add
adc
mov
adc
mov
dec
das
inc
aaa
lret
xor
mov
ret
mov
xchg
scas
aam
cli
insl
add
xchg
jmp
icebp
imul
xchg
jmp
xchg
add
fdiv
aam
fs
add
pop
lret
or
add
repz
scas
xor
les
adc
mov
repnz
cwtl
in
dec
in
jne
stos
xorl
or
cmc
sub
pop
inc
jl
pop
les
out
add
xchg
ret
frstor
xchg
pop
xchg
pop
in
call
mov
inc
ret
cmp
cmp
into
inc
movsb
jno
dec
jbe
mov
mov
addb
pop
sub
xor
and
fnstsw
add
pop
adc
fcoms
mov
cmc
add
sti
call
add
xor
jbe
mov
cmc
in
mov
scas
mov
subb
xor
jne
shlb
int
arpl
adc
cltd
loop
inc
sub
sbb
sbb
popf
daa
stos
push
movsb
ds
xor
dec
xchg
push
jnp
iret
and
ds
subb
or
push
and
cmp
adc
sub
cmp
test
mov
mov
shlb
int
arpl
adc
cltd
loop
inc
sub
dec
sahf
lcall
pop
jb
das
pop
iret
xchg
lcall
sahf
sbb
mov
mov
cmp
xor
aaa
push
out
mov
rol
pusha
cmp
aam
xchg
mov
xchg
jecxz
pop
sarb
sub
mov
fs
iret
push
jecxz
cmp
push
dec
xchg
xchg
decl
jle
jl
icebp
adc
imul
jns
mov
bound
mov
fildll
inc
xchg
cmp
jns
iret
notl
jecxz
or
cmpsl
test
flds
mov
cltd
cmp
sbb
std
das
jns
jbe
push
out
jne
and
out
ljmp
mov
mov
inc
mov
inc
adc
ss
xchg
jb
pushf
push
rcrl
in
lret
js
pop
sbb
cwtl
inc
add
inc
adc
fstps
add
push
ja
cmp
idivb
dec
mov
insb
lcall
outsb
insb
dec
scas
pop
adc
subb
das
fildl
cmp
mov
adc
jne
rcr
int3
insl
icebp
movsb
xchg
adc
xor
in
push
adc
in
add
sbb
daa
aaa
int
xchg
popf
testb
mov
icebp
mov
inc
jno
mov
out
std
mov
pop
lea
shlb
cmpsb
jecxz
mov
gs
cmp
lods
cmp
cmpsb
cltd
cwtl
in
dec
pushf
jnp
test
insb
or
in
mov
cltd
aam
stos
and
fabs
mov
aas
decl
jae
clc
jns
xor
inc
xchg
xchg
add
shll
pop
lahf
xchg
aaa
or
sbb
pop
shlb
aas
mov
jmp
xor
jo
push
adc
add
enter
daa
aaa
jg
jnp
xchg
enter
repz
xor
cmc
std
jae
sarb
or
mov
test
mov
dec
dec
leave
push
aad
push
dec
sti
lcall
or
inc
cmp
lahf
mov
out
test
leave
ss
mov
sbb
lds
mov
into
xlat
ret
jl
cli
outsb
jl
and
xchg
dec
mov
test
dec
outsb
adc
cmpsb
out
and
loop
xor
hlt
jp
mov
stos
js
pextrw
out
inc
jae
cmp
push
add
cmp
jg
in
and
ret
repnz
fwait
adc
cmpsb
add
cmc
les
pop
push
jno
push
pop
dec
outsb
pop
test
mov
out
out
sti
pop
pop
sub
dec
add
aaa
push
daa
lahf
imul
out
or
aad
jnp
sbb
push
fmull
lock
adc
inc
loop
loopne
add
rclb
and
ja
and
push
dec
cmc
inc
std
mov
arpl
cld
pushf
lret
repz
xor
push
pop
out
imul
mov
insl
push
or
mov
jp
out
jnp
test
mov
push
sub
cmp
mov
aaa
sub
dec
fabs
mov
aas
decl
jae
clc
jns
xor
or
jle
inc
mov
adc
jo
xor
lcall
sbbb
in
dec
adc
leave
dec
inc
sub
bound
rclb
push
mov
lcall
outsb
push
cwtl
or
ficompl
cli
or
xor
cmp
mov
and
mov
add
popf
bound
jae
mov
sub
lret
lahf
mov
fisttpll
or
outsl
add
and
xor
xor
fimuls
jbe
loope
pop
pop
test
movsl
pop
sub
pop
call
out
and
loop
xor
hlt
jp
mov
stos
js
pextrw
out
inc
jae
cmp
push
add
cmp
jg
in
and
jae
popl
add
cmc
les
pop
push
jno
push
pop
dec
outsb
pop
test
mov
out
out
sti
pop
pop
sub
dec
add
aaa
push
daa
lahf
imul
out
or
sub
cmp
jecxz
xor
fnclex
sbb
lock
adc
inc
loop
loopne
add
rclb
and
ja
and
push
dec
cmc
inc
std
mov
arpl
cmp
sahf
ds
gs
fcoml
incb
mov
or
mov
cmp
test
gs
xchg
push
fsubl
movsb
xlat
jns
adc
add
outsl
sbb
orb
sbbl
nop
push
addr16
fucom
dec
pushf
mov
loop
mov
pop
mov
les
loop
push
repnz
fwait
insl
dec
aas
in
fimuls
fldpi
push
fadd
test
test
movb
test
mov
cmpsb
insb
mov
xchg
mov
out
arpl
outsb
repnz
push
inc
mov
mov
popa
setbe
or
fcomps
jp
cmpsb
pusha
xor
push
jbe
stos
cmp
xchg
jo
fcom
loope
sub
cwtl
int3
stos
cmp
push
sub
fiaddl
mov
sub
lea
add
inc
pop
pop
cmp
xchg
call
add
jle
test
mov
cmp
inc
jmp
icebp
mov
cs
xchg
roll
idiv
xor
movsl
or
mov
sahf
and
int
mov
cs
mov
fwait
jg
mov
imul
add
mov
lcall
mov
enter
aas
mov
aam
push
std
shl
mov
pavgb
je
and
cmpsb
cltd
cwtl
in
dec
leave
icebp
lahf
xchg
dec
mov
mov
cs
push
pusha
or
test
lahf
dec
cwtl
add
ds
mov
adc
dec
shufps
cli
test
xchg
pusha
or
mov
push
adc
pop
add
push
mov
sbb
jle
lock
jo
cli
sbb
inc
fsubrs
adc
dec
and
dec
int
int3
inc
mov
and
or
fcomi
add
add
mov
jnp
inc
mov
and
pushl
mov
loopne
mov
or
jnp
inc
mov
and
dec
hlt
ds
testb
sub
jnp
inc
mov
and
pop
cmp
data16
into
iret
sub
das
das
dec
ds
int
int3
inc
mov
and
pusha
popa
xchg
push
rcll
int3
inc
or
gs
hlt
outsl
and
call
sub
mov
adc
rolb
mov
add
movsb
in
xchg
xchg
lret
cwtl
cmc
scas
xchg
adc
shlb
sub
mov
cmp
sahf
je
mov
push
fidivrl
jl
fucomp
and
pop
adc
je
pop
sub
pop
mov
das
xor
push
or
loope
pushl
xor
mov
das
xor
push
or
xor
out
adc
sar
sbbb
das
xor
push
or
adc
cmp
pmaxub
dec
in
loope
pop
jb
dec
das
xor
push
or
fcomps
int
loope
clc
xor
aad
rcr
cwtl
gs
dec
das
xor
push
or
sbb
stc
mov
fists
fidivs
sbb
mov
das
xor
push
or
stc
jns
aam
push
in
idiv
xor
in
dec
das
xor
push
or
mov
lcall
rcrl
dec
xor
lods
ja
add
push
subl
dec
imulb
ret
aas
and
cmpsb
xchg
scas
pop
pop
dec
pop
push
jecxz
fmulp
movsl
adc
cmp
pop
call
lods
js
fsubs
mov
hlt
dec
mov
daa
icebp
dec
add
jno
inc
xchg
jp
daa
cwtl
and
push
cmpsb
aad
stos
push
notl
adc
adc
stc
lods
mov
adc
jge
and
push
jg
lods
xor
fcoml
adc
fcoml
jb
jae
fwait
mov
lock
inc
sub
mov
outsl
pushf
jo
dec
dec
arpl
or
and
ss
xchg
bound
stc
stc
mov
adc
sti
enter
jg
je
out
add
jo
jnp
push
sub
cmp
push
xchg
mov
data16
and
loope
add
call
mov
dec
loop
lock
inc
scas
nop
mov
cltd
lret
sub
add
dec
pop
and
cmpsb
es
imul
scas
push
mov
add
fadds
sahf
pushf
dec
xchg
inc
xor
push
aam
dec
scas
push
ss
jle
daa
xor
sti
jb
ljmp
xor
stos
cmp
dec
pop
cltd
or
sub
aam
pop
pop
and
adc
cmp
pop
jne
xchg
imul
nop
add
cmc
mov
scas
jnp
adc
inc
pop
jnp
pop
and
xchg
mov
clc
in
inc
ficoms
mov
dec
pop
outsb
lods
arpl
out
fldcw
push
js
nop
add
pop
xchg
data16
mov
push
fsin
xor
aam
mov
jecxz
pop
jmp
mov
add
in
cld
ja
mov
mov
pop
mov
cmc
lret
inc
nop
dec
pushf
xchg
jmp
ret
push
dec
cmp
mov
pop
xor
js
xchg
insb
stos
jno
aad
mov
dec
clc
cmc
xor
int3
out
add
fbstp
pop
test
in
lock
pop
add
arpl
sub
pop
and
sbb
cmpsl
cld
inc
jb
scas
xchg
push
call
inc
mov
int3
add
cmc
fwait
ss
sub
jle
lea
cmp
in
xchg
or
xor
or
enter
leave
push
or
xor
push
dec
shl
cld
xchg
test
cwtl
addr16
pop
adc
push
xchg
xor
and
pop
iret
les
mov
or
xor
mov
cwtl
mov
xchg
f2xm1
mov
jle
jae
cmpl
out
dec
jp
dec
int
adc
in
jne
stos
xorl
cmpsb
mov
jo
hlt
and
jle
dec
sarb
rcl
int
fistpl
imul
mov
jg
arpl
test
dec
loop
in
test
pusha
cmp
adc
inc
fildl
xorb
repnz
push
sti
scas
test
lcall
clc
arpl
pop
dec
fs
repnz
cltd
mov
sub
cwtl
in
dec
in
jne
stos
xorl
cmpsb
mov
popf
push
not
mov
mov
cltd
add
mov
ja
jmp
fisttps
test
f2xm1
mov
mov
dec
pop
out
sub
pop
jne
insb
mov
dec
add
dec
nop
stc
mov
aas
jecxz
js
movsb
in
repnz
icebp
or
sub
jbe
fistpl
inc
pop
pop
ss
and
cli
das
clc
mov
ljmp
roll
in
and
sahf
adc
scas
pop
sub
aad
out
sub
or
pop
std
jg
mov
sub
cwtl
in
dec
cmc
pop
shlb
fidivs
and
mov
mov
inc
xor
aam
enter
and
push
aaa
add
pop
adc
sti
stc
add
xor
fwait
mov
outsl
sqrtps
shl
jge
data16
adc
shrl
pop
mov
icebp
aaa
xor
pop
dec
or
sub
sub
ret
aam
push
in
mulb
xchg
xchg
cmc
sahf
adc
and
shrl
pop
icebp
pop
mov
imul
mov
inc
dec
movsb
out
cmpsb
xchg
sbb
cmp
icebp
aaa
xor
int3
inc
xchg
js
cmpsl
cmp
repz
jae
mov
mov
mov
mov
lods
xor
addr16
rol
loope
repnz
test
out
mov
push
insl
outsl
pusha
push
int
xor
xchg
dec
fidivrs
inc
rclb
psadbw
icebp
aaa
xor
lahf
mov
inc
int3
mov
dec
push
xchg
sysenter
test
daa
into
out
call
jno
jecxz
roll
scas
jne
xor
sbb
in
imul
movsb
push
test
cmp
or
sbb
jae
das
aaa
mov
stos
mov
fs
gs
pop
mov
call
dec
hlt
inc
fwait
or
cmp
in
sbb
push
mov
cmp
inc
xor
lahf
sahf
pop
jbe
into
in
push
mov
dec
fldt
add
int
mov
and
sub
push
sbb
add
inc
dec
dec
icebp
push
imul
ret
jns
jne
in
dec
mov
jl
push
mov
ds
jne
movsl
push
inc
lods
cwtl
fcoml
push
leave
inc
pop
push
fs
dec
push
and
fsubr
adc
cmpl
cmpsb
mov
cmp
pop
jg
mov
es
jl
icebp
cs
insb
adc
sar
jle
push
test
or
call
xchg
jns
xchg
sub
add
jge
cmc
jae
xchg
in
ficomps
or
and
incb
push
ja
in
std
imul
xchg
mov
lds
cmpl
jne
ret
es
cwtl
sub
mov
lcall
int
cli
hlt
int3
xchg
loopne
orb
push
xor
jmp
xchg
jnp
mov
dec
xlat
cmp
push
imul
js
xchg
popf
lret
aad
jecxz
inc
std
sbb
pop
xor
ds
es
or
push
inc
mov
pusha
mov
imul
xchg
mov
pushf
add
addr16
mov
leave
lahf
pushf
mov
out
setl
cld
loope
pop
repnz
xchg
imul
mov
xchg
xor
pop
rorb
cli
das
or
das
pop
sub
mov
lock
jbe
dec
bound
mov
inc
into
loop
jae
push
das
add
cs
cwtl
jae
cmpsl
add
loop
dec
push
imulb
push
fcoml
xlat
aaa
insb
and
lret
mov
ret
pop
pop
sub
movsb
int3
daa
ss
adc
mov
mov
push
xor
aaa
addr16
xchg
flds
inc
inc
nop
aam
pop
rolb
out
jmp
lods
inc
and
leave
test
xor
mov
adc
pop
addb
test
mov
inc
clc
movsb
xchg
xor
cmp
lahf
test
cmpsb
rcrl
inc
repnz
sub
cmc
shll
outsb
or
push
mov
push
lods
movsb
js
or
dec
sbb
pop
andb
xor
stos
push
jg
or
mov
out
mov
fidivrl
ret
dec
arpl
mov
xor
adc
das
dec
xchg
roll
mov
hlt
out
hlt
lret
xchg
bound
ds
setg
dec
in
pusha
cmpsl
jbe
mov
inc
aad
je
xchg
dec
insb
cmpsb
lds
add
adc
mov
inc
pop
faddl
les
mov
out
jo
xchg
xor
nop
adc
loopne
dec
push
shlb
pop
cltd
xchg
push
mov
ss
int
daa
imul
xor
and
mov
sub
inc
sub
pusha
movsl
jmp
int
outsb
pop
xchg
call
adc
jle
dec
lret
inc
cltd
loopne
inc
add
push
pop
imul
ds
lahf
adc
stos
push
mov
jge
dec
out
movsl
sub
add
pop
out
imul
les
xor
rorb
xchg
jecxz
push
pop
xor
xchg
jo
mov
mov
xchg
fucomi
cmpsb
dec
repz
cmc
ss
mov
ret
xor
and
or
stos
cld
sti
mov
mov
fwait
inc
dec
movsb
insl
std
add
mov
popf
jmp
xchg
ds
jae
shrl
dec
pop
sahf
clc
test
mov
and
cltd
xchg
dec
sub
sbb
lods
test
je
scas
dec
push
jno
out
lret
jle
or
scas
out
sub
jnp
cmpsl
fldt
js
mov
in
ret
pop
or
and
push
xchg
jo
dec
fisttpl
sti
out
in
xor
test
sub
stos
push
xor
sbb
mov
xor
push
les
inc
pop
adc
jle
xlat
sbb
cmp
or
imul
cmp
pop
or
push
orb
fdivs
and
jmp
push
and
fsubr
adc
cwtl
xlat
cmpsb
scas
xchg
mull
cltd
lds
into
fmul
jnp
inc
mov
and
pop
pop
push
inc
frstor
inc
dec
lcall
dec
movsb
das
test
xor
push
or
adc
cmp
push
scas
or
dec
push
adc
fnstenv
mov
jmp
outsb
push
orb
fdivs
sub
mov
pushf
loop
jle
jnp
inc
mov
and
pop
pop
push
inc
push
mov
test
stc
mov
lcall
gs
or
inc
sub
cmp
aad
lods
inc
jmp
cmpsl
popf
add
jno
sahf
cmp
insl
popf
lea
inc
pop
lahf
mov
call
scas
push
popf
rcll
dec
les
add
mov
jmp
jo
push
in
mov
and
out
dec
rorl
andl
jnp
inc
mov
and
mov
or
pop
mov
add
addr16
mov
shl
dec
mov
bound
xchg
push
out
push
and
shll
pop
cmovl
lahf
cmpsl
sub
fisubs
ds
rorl
mov
notl
outsl
psrlq
cmp
cmc
enter
push
divb
jo
lds
push
and
fsubr
adc
cwtl
xlat
cmpsb
scas
xchg
mov
jge
adc
dec
xor
clc
ds
jne
int
int3
inc
mov
and
xor
ficoms
push
mov
pop
hlt
push
mov
dec
das
xor
push
or
mov
out
cld
leave
repz
inc
std
test
jecxz
or
sarb
cmp
cmp
inc
fucomp
or
fcmovbe
fstpt
dec
rorl
and
inc
loop
call
addb
test
lcall
je
add
ds
stc
inc
mov
pop
push
call
add
int
sub
pop
dec
pop
int3
fwait
add
fsubr
repz
shll
fwait
adc
std
popf
inc
popa
add
das
xor
push
or
lea
mov
jmp
xchg
mov
nop
mov
adc
rorb
or
mov
imul
lods
mov
xchg
xchg
imul
and
lods
dec
shll
imul
mov
jmp
out
call
dec
push
push
dec
dec
ds
mov
pusha
lahf
xchg
loop
js
xor
mov
cmp
xor
mov
insl
and
lret
std
mov
and
pop
inc
push
jae
sbb
xchg
stos
sub
sarb
cmp
arpl
shll
loop
popf
mov
ds
mov
cmpsb
mov
mov
sbb
xor
xor
popa
jns
xchg
imul
jbe
push
insb
clc
addb
adc
std
push
inc
leave
stos
mov
gs
mov
xor
fisubs
mov
scas
or
lods
adc
stos
inc
xor
and
lret
gs
push
pop
adc
jle
je
fsts
inc
lods
mov
jo
outsl
fisttpl
add
in
addr16
and
mov
mov
add
imul
imul
inc
inc
push
jl
push
lea
js
sbb
repz
addb
cwtl
in
dec
in
jne
stos
xorl
cmpsb
mov
out
test
lock
jne
dec
add
jge
mov
xchg
inc
sbb
push
pop
out
imul
ret
lods
mov
xchg
jmp
addb
pop
sub
xor
and
mov
in
push
mov
lea
daa
mov
inc
pop
sarb
push
jecxz
jecxz
mov
or
cmp
dec
ficoml
adc
aam
pop
sbb
rorb
mov
shll
fs
sub
dec
lods
cmc
cs
or
push
scas
into
mov
int3
xlat
adc
fwait
xor
pop
mov
push
ss
adc
xchg
xlat
notb
or
inc
xchg
push
jae
or
loopne
dec
ljmp
subl
xchg
push
pop
cmc
cmp
leave
dec
mov
cwtl
sbb
dec
daa
jne
dec
test
lcall
scas
jmp
xor
das
shl
and
pop
jle
in
xor
mov
pop
leave
pop
not
jp
jo
add
int3
push
inc
adc
sub
mov
cmp
gs
inc
cmp
mov
fwait
mov
xor
enter
jmp
and
stos
adcb
stos
test
enter
js
and
push
mov
imul
shlb
outsl
and
mov
dec
jb
shl
aas
pop
and
mov
out
lahf
add
je
adc
jecxz
or
inc
cli
mov
add
push
in
lock
push
hlt
mov
cld
sar
push
in
cli
jecxz
pusha
push
mov
adc
fwait
jnp
rorb
pusha
jmp
loope
outsl
repz
int3
adc
adcb
push
lcall
fs
mov
insl
pop
stos
and
xchg
adc
imul
adc
push
iret
cmp
mov
lret
icebp
or
xchg
jle
flds
ds
xor
adc
fistl
add
lret
sub
arpl
jge
sbb
addl
arpl
jb
idivb
dec
xchg
test
lret
push
add
xchg
mov
loope
cmpb
enter
mov
jle
flds
test
jae
sub
cltd
fwait
adc
push
cs
aam
cmp
stc
adc
mov
or
pop
jns
je
xchg
jno
aam
xor
cltd
cwtl
in
dec
pop
add
fcmovnbe
mov
jle
out
jmp
out
pop
pop
sbb
add
test
or
jp
inc
dec
push
jno
mov
stos
sbb
push
jle
push
dec
inc
loopne
stos
cmp
popa
cli
sub
out
aaa
sbb
xlat
add
xchg
leave
mov
mov
ror
mov
icebp
sbb
inc
aas
or
das
add
xorl
mov
xor
and
cwtl
in
ret
adc
ret
int
es
mov
out
mov
sbb
or
push
in
cmc
imul
dec
xchg
testl
cmpsb
cltd
cwtl
in
dec
jbe
fmuls
xor
push
push
fisubrs
xchg
jp
into
pcmpgtw
push
testb
sbb
lds
mov
js
xchg
lret
scas
sbb
xchg
hlt
lock
inc
clc
and
mov
fnstenv
lcall
addb
xlat
push
das
js
gs
cmpsl
mov
cwtl
in
dec
xchg
push
aam
daa
test
jo
enter
jno
aad
xor
cmp
stc
add
dec
push
push
push
xlat
jo
mov
cmp
mov
dec
jecxz
std
cmp
dec
add
or
shll
pushl
cmpsb
cltd
cwtl
in
dec
xchg
push
aam
daa
test
jo
enter
jno
aad
xor
cmp
stc
add
dec
add
push
lahf
gs
cmp
outsb
cli
xchg
mov
mov
dec
jecxz
std
cmp
dec
add
or
shll
pushl
cmpsb
cltd
cwtl
in
dec
iret
jge
pop
ret
jnp
xorl
pop
add
je
movb
sub
jo
pushf
push
mov
mov
jle
inc
mov
mov
fwait
loopne
sti
jb
inc
mov
push
or
mov
icebp
scas
stc
dec
push
arpl
les
movsb
nopl
mov
fistl
cmp
cmpsb
cltd
cwtl
in
dec
dec
jge
xchg
fidivs
sbb
pop
sub
cmp
push
in
or
int3
push
ror
mov
jnp
int3
cmp
es
aam
xchg
arpl
imul
mov
cli
or
adc
cs
jne
shll
jg
adc
cli
sbb
xor
jbe
in
mov
out
iret
pop
mov
je
out
push
ja
pop
mov
fcmove
lret
loopne
ja
scas
lcall
inc
adc
mov
push
and
lods
cmp
cmpsb
cltd
cwtl
in
dec
icebp
mov
mov
pop
scas
pop
sub
xchg
bound
outsb
stos
inc
repnz
hlt
pop
cltd
shll
mov
nop
mov
pop
push
inc
push
or
jbe
out
popa
adc
inc
xchg
cmp
xchg
push
bound
cmpsb
cltd
cwtl
in
dec
pop
lods
xlat
gs
fwait
enter
cld
dec
and
mov
aaa
inc
cmp
push
jl
jecxz
outsl
xor
movsb
mov
lods
mov
mulb
and
lret
xchg
jmp
gs
lahf
mov
aaa
inc
cmp
push
cmpsb
popa
mov
jmp
int3
dec
xchg
arpl
adc
fwait
aaa
add
xor
sub
adc
nop
out
push
add
cmc
xchg
cwtl
in
dec
and
in
push
dec
adc
push
mov
in
imulb
sub
fbstp
loop
sbb
roll
sub
lea
ret
leave
daa
mov
xchg
pop
in
inc
push
nop
int3
adc
insb
jbe
cmc
mov
fcompl
mov
cltd
or
imull
jecxz
cmp
pop
pop
ljmp
push
cltd
outsb
xchg
cmpl
aam
push
and
mov
xchg
jo
hlt
mov
inc
shl
jecxz
mov
lret
xlat
arpl
xchg
push
stc
lahf
xchg
mov
mov
ret
inc
jp
mov
arpl
lcall
fistl
cmp
cmpsb
cltd
cwtl
in
dec
das
or
pop
inc
xor
sbb
insb
adc
insl
cld
and
mov
mov
enter
pushf
xchg
inc
and
adc
pop
mov
push
jg
jns
dec
jb
hlt
add
std
cmp
movsb
sbb
adc
imul
aam
sarl
cs
pop
fsubr
jnp
cmc
dec
pop
icebp
cmovbe
arpl
lods
ljmp
xchg
movsl
adc
and
sarl
jmp
repnz
add
fmull
std
popa
push
jns
ret
inc
xor
mov
mov
xchg
test
mov
pushf
mov
test
ss
into
or
adc
jns
ficoms
mov
inc
mov
push
aad
push
fisttpl
pop
jmp
mov
mov
sbb
ss
jge
push
xchg
icebp
cmp
mov
insl
push
adc
fadds
test
lock
clc
repnz
das
scas
and
mov
sub
push
mov
xchg
loope
mov
lods
push
imul
xchg
inc
imul
aas
mov
cmp
push
popa
mov
loope
sub
xor
lods
mov
mov
xchg
sub
mov
adc
xor
sub
adc
mov
jmp
fidivrs
into
cmc
inc
push
call
stos
aaa
inc
pop
pop
sbb
out
inc
cmp
in
or
xchg
dec
xchg
cmp
int
inc
gs
ficoms
dec
test
lahf
call
cmpsl
ja
enter
mov
dec
jle
sahf
imul
lahf
xlat
mov
push
mov
out
cli
sub
dec
cmp
mov
xchg
fistl
pop
fidivl
cmpsb
cmpsl
lds
cltd
cwtl
in
dec
adc
pop
jae
hlt
jbe
inc
je
call
cmc
dec
scas
das
add
mov
lods
out
or
aas
cli
lcall
andl
in
test
loopne
mov
sahf
int3
dec
push
fidivrl
in
lret
sbb
jmp
pop
xor
stos
cs
int
dec
push
ljmp
lds
pop
fwait
cmp
scas
sub
mov
daa
cs
xor
xchg
mov
nop
xor
insl
mov
xchg
cmp
push
pushf
enter
lea
imul
bound
xchg
icebp
and
in
ret
andl
xor
cmp
lds
lea
jg
mov
pop
xlat
bound
adc
or
aas
push
fnstcw
cmpsb
cltd
cwtl
in
dec
push
sbb
outsb
aam
and
jae
xor
xchg
enter
and
je
mov
sub
cmpsb
or
xchg
mov
test
icebp
mov
jle
aam
dec
push
dec
out
fnstsw
icebp
xchg
jo
in
push
mov
aad
subb
in
stos
sbb
pop
stc
jbe
pop
mov
jbe
scas
repz
out
out
bound
mov
leave
or
mov
mov
lahf
rcrb
outsb
sub
rorl
mov
mov
push
inc
sub
sub
add
mov
and
inc
mov
les
mov
jnp
into
loope
jle
popa
ret
aas
pop
mov
mov
or
gs
jo
fildll
bound
into
fsubr
ret
or
jb
adc
frstpm(287
sub
or
push
stos
cld
js
not
data16
dec
or
xchg
xor
mov
mov
or
jle
out
jg
bound
ss
or
sub
enter
mov
jecxz
int
test
scas
bound
ret
stos
stc
mov
jl
in
je
gs
cmp
ret
insl
push
data16
cmc
jle
xchg
jne
push
mov
lret
jnp
or
sbb
add
or
sti
cmpsl
movsb
and
sbb
xchg
xor
js
ja
cmp
push
xchg
mov
or
aad
popa
add
push
int3
hlt
lcall
aam
lret
mov
adcb
popf
cmc
gs
push
mov
fldenv
adc
in
push
addr16
cmc
push
xchg
cmp
ljmp
mov
add
stos
mov
sahf
inc
add
jne
push
mov
lret
jnp
or
sbb
add
or
sti
cmpsl
movsb
and
sbb
xchg
xor
js
ja
cmp
push
xchg
mov
or
aad
popa
add
push
int3
hlt
lcall
scas
jae
ds
or
and
mov
mov
aaa
xor
rcr
push
call
jae
mov
mov
mov
lret
jnp
or
sbb
add
or
sti
cmpsl
movsb
insl
mov
xchg
lods
xlat
lahf
rcll
cmp
sbb
aam
adc
xchg
mov
into
cmp
enter
data16
lcall
dec
dec
cmc
push
jb
mov
and
mov
scas
push
nop
jbe
pop
mov
cmp
in
imul
lock
xchg
push
add
and
mov
imul
fiadds
push
xchg
in
dec
movsl
xor
repnz
sub
push
inc
in
pop
pop
das
jnp
mov
or
fisttpll
or
lret
cmpsb
sbb
aad
sub
dec
adc
mov
enter
and
sbb
xlat
scas
fwait
stos
pusha
xchg
stos
arpl
movsb
or
leave
pop
nop
lea
jnp
movsl
push
rorl
pop
jno
pop
dec
fistpll
adcb
popf
cmc
gs
push
mov
fldenv
cmc
or
xchg
insb
and
add
or
mov
push
inc
scas
pop
loop
and
rcl
adc
fstl
aas
xor
sub
test
mov
push
lods
xchg
enter
jmp
loop
pop
inc
mov
cmc
fs
mov
bound
sub
cmp
mov
sub
xchg
jg
ret
add
test
int
in
mov
or
add
gs
push
and
and
popf
sti
cmc
inc
cmc
mov
nop
inc
lods
ja
inc
into
movsl
out
cmpb
imul
add
insl
fildll
xor
mov
inc
sahf
cmp
test
mov
popa
xor
fisubs
inc
cmpsl
leave
andl
idiv
pop
rorb
fimuls
cwtl
ja
inc
scas
jbe
popf
sub
lods
jo
test
out
es
xchg
fsubs
push
inc
in
andl
mov
in
cmpl
and
mov
mov
aaa
xor
shrl
push
inc
test
cmp
mov
lret
jnp
or
sbb
add
or
sti
cmpsl
movsb
insl
mov
xchg
lods
xlat
lahf
rcll
cmp
sbb
aam
adc
xchg
mov
and
mov
int3
lcall
data16
lret
xchg
push
jno
sub
or
dec
cld
mov
push
xchg
addb
cltd
int
xchg
dec
data16
daa
push
sub
adc
mov
nop
movsl
xchg
mov
fiadds
jno
scas
mov
lods
sub
loopne
rcll
and
add
jno
mov
add
ret
stc
rcll
jne
adc
movsb
gs
mov
icebp
gs
rsqrtps
outsb
mov
ret
sbb
xorb
push
xchg
scas
or
add
push
mov
movsl
jle
xor
push
xchg
inc
push
add
gs
xchg
push
stc
pop
pusha
lcall
pop
in
or
cmp
dec
add
dec
mov
inc
gs
popa
pop
call
jb
js
mov
stos
mov
push
xor
mov
test
jno
push
push
xchg
scas
or
add
push
mov
movsl
jle
xor
push
xchg
inc
push
add
gs
xchg
push
stc
pop
pusha
lcall
pop
in
or
cmp
dec
add
dec
mov
inc
gs
popa
pop
call
jb
js
mov
orb
clc
dec
loope
stc
inc
sub
cmpsb
rcrl
or
ret
insb
shl
dec
or
int3
imul
jmp
out
xchg
in
xor
pop
xor
lods
repnz
mov
inc
pop
lods
xchg
jle
push
push
cwtl
and
pop
jns
stos
int
leave
adc
jecxz
bound
add
mov
fnsave
mov
in
jg
mov
xchg
push
ja
adc
mov
fidivl
hlt
nop
sarb
dec
stos
xor
xchg
xor
sbb
into
outsl
adc
mov
sub
fidivrl
push
mov
inc
push
js
or
out
mov
pop
xchg
jns
dec
jbe
cmp
test
jo
and
shrl
fwait
adc
popa
xchg
jg
imul
inc
bound
jge
jne
mov
repnz
cwtl
fwait
pop
dec
jecxz
dec
mov
popa
sub
stos
vdivpd
lahf
xchg
cltd
mov
mov
ret
xchg
in
pop
fldl
daa
arpl
sahf
add
lret
adc
dec
xchg
movsb
inc
cmpsl
xorps
stos
nop
and
out
push
dec
xor
lods
cmp
fnstsw
les
mov
mov
sub
into
mov
cmp
xchg
inc
iret
pop
dec
fistpl
pop
testl
cmp
mov
or
inc
cmc
sbb
sbb
loope
mov
insl
jl
adc
xchg
testl
sbb
int
fwait
aam
clc
lahf
add
pop
insl
ljmp
cwtl
insl
push
insb
xchg
in
outsb
push
lret
repz
sbb
add
in
sbb
jnp
lret
pop
pop
leave
sub
into
loopne
and
cmp
pop
lods
loopne
mov
fs
pop
and
and
cmp
mov
icebp
push
call
jmp
in
push
bound
mov
rcr
mov
jmp
jne
push
cli
ljmp
gs
or
lods
mov
adc
outsb
xor
lahf
add
pop
insl
ljmp
cwtl
insl
push
insb
xchg
in
outsb
push
lret
repz
sbb
add
in
sbb
jnp
lret
pop
pop
leave
sub
into
loopne
and
sbb
sub
gs
jns
cs
add
adc
lcall
sbb
es
pop
push
repnz
pop
push
cmpsb
add
dec
cmp
pop
loop
es
or
xchg
sbb
out
popa
mov
or
jnp
aam
insl
lock
cwtl
insl
push
insb
xchg
in
outsb
push
lret
repz
sbb
add
in
sbb
jnp
lret
pop
pop
leave
aas
push
or
dec
adc
adc
push
xchg
xchg
adc
pop
nop
lea
or
cmp
into
outsb
aas
fldcw
out
dec
outsl
push
mov
gs
xlat
fldenv
std
ljmp
call
cmp
xor
bnd
lock
mov
test
xor
mul
inc
jns
sahf
pop
int3
and
cmp
cltd
jmp
xchg
dec
dec
arpl
sbb
hlt
push
mov
sub
mov
mov
jmp
cmc
in
negl
push
mov
repz
sti
outsb
adc
sbb
das
jmp
mov
cmp
inc
jmp
ror
and
adc
cmp
clc
lock
adc
sbbl
fcmovbe
sub
lcall
or
cmpsl
add
cld
repnz
aaa
mov
jecxz
aas
mov
in
ret
mov
push
mov
sbb
lock
incl
or
adc
dec
mov
aam
jae
mov
dec
stos
testl
sbb
pop
into
fnsave
pop
movsb
mov
fisubl
repz
dec
cmp
lds
fcmovnbe
adc
push
jle
jnp
dec
lods
jecxz
test
nop
lea
jnp
movsl
push
rorl
repz
sub
dec
cmpsb
add
push
stc
dec
clc
jecxz
and
gs
or
or
sbb
jno
xchg
mov
cld
and
pop
inc
mov
sti
xchg
jge
push
mull
xchg
jne
je
fbstp
mov
sbb
bound
insl
xchg
enter
add
dec
or
bndstx
sarb
xchg
in
lea
nop
lahf
fwait
push
js
inc
cmp
add
out
cmp
and
mov
jns
movsl
sar
scas
pushf
mov
inc
or
pop
insb
les
movsl
mov
sbb
dec
mov
pop
sub
xchg
jns
shll
scas
in
pop
inc
pop
or
and
or
call
cmpsb
cltd
cwtl
in
dec
mov
jecxz
jecxz
gs
out
push
cli
stc
stc
mov
cwtl
mov
popl
addr16
jle
mov
sarl
popa
test
aaa
test
pop
pop
sbb
int
int
lods
xor
aaa
jne
dec
lret
dec
mov
into
add
arpl
jmp
fdivs
inc
cltd
lahf
rcl
xchg
jl
les
add
lock
out
jecxz
lods
jne
cmp
cmpsb
cltd
cwtl
in
dec
lahf
lcall
test
push
dec
add
mov
mov
in
push
jp
test
sbb
icebp
inc
std
insb
call
and
push
ftst
adc
in
dec
push
add
fcmovnbe
hlt
fldenv
jo
mov
sub
add
sbb
es
jmp
or
in
fsts
repnz
mov
add
mov
cmpsb
cltd
cwtl
in
dec
lahf
lcall
push
jae
repnz
ret
or
mov
fucomp
adc
ret
inc
loop
xchg
fucom
out
outsb
cmpsb
sbb
mov
out
jmp
dec
or
adc
or
scas
xor
js
cmpsb
cltd
cwtl
in
dec
aaa
push
jb
sbb
stos
into
or
sub
push
push
fmul
push
dec
inc
gs
dec
dec
cmpsw
inc
in
decl
cltd
rclb
rcr
mov
cltd
rclb
mov
jb
push
xchg
jbe
mov
mov
dec
push
fs
add
xor
cwtl
sub
andl
mov
je
pop
iret
lret
inc
jge
into
je
add
cli
out
sbbl
xor
xchg
ds
mov
jnp
bnd
add
insb
inc
or
into
push
or
or
in
jp
jmp
or
xchg
in
loop
xchg
mov
mov
stos
lods
addb
xor
pcmpeqb
or
fisttpl
lahf
aas
ds
jo
and
stc
rcll
xchg
mov
ljmp
lret
push
outsl
das
pop
movsl
adc
lods
std
pop
in
popa
scas
nop
imul
sahf
lea
push
mov
jne
pop
pop
jg
orb
push
mov
shrb
dec
sbb
jle
test
aam
daa
fs
out
push
inc
arpl
into
jp
loope
push
scas
mov
test
pushf
jmp
cmp
test
and
or
push
mov
movsl
movsl
inc
sarl
mov
fcomps
pop
xchg
push
int3
mov
mov
cli
or
movsb
or
lods
or
adc
iret
inc
insl
add
mov
dec
adc
add
or
loope
test
out
adc
sbb
dec
cltd
push
mov
repz
jbe
push
imul
aam
jns
ljmp
pop
or
hlt
or
mov
shl
lahf
stos
imul
push
or
push
aam
jnp
stc
int3
loope
xor
daa
movsb
pop
jno
jns
out
mov
std
loope
add
fnsave
les
inc
fisubrl
add
sub
push
das
ret
data16
push
xchg
sahf
pop
mov
lea
push
adc
out
jo
add
xor
and
adc
jmp
scas
push
push
push
sbb
imul
inc
fwait
xchg
adc
cmp
push
lock
into
movl
sub
test
orl
out
je,pn
xor
xor
pop
nop
les
cmp
adc
xchg
jb
shll
jecxz
or
nop
xchg
mov
add
lods
cmpb
fdivr
cmpsb
pop
and
je
bound
cmpsb
cltd
cwtl
in
dec
std
or
ret
repnz
subl
arpl
and
aam
mov
mov
orb
pop
mov
test
pusha
aaa
data16
popl
adcb
stos
ret
out
and
xor
cltd
pop
sub
mov
fcoms
mov
xchg
jecxz
mov
push
mov
mov
and
aad
lds
sarl
pop
inc
movl
dec
cltd
mov
movsb
loopne
pop
and
mov
cltd
sbbb
adc
fwait
roll
mov
aad
cmp
sub
mov
mov
push
and
shrl
pop
xchg
xor
and
addr16
fcoml
pop
mov
xor
or
add
jnp
and
jb
inc
dec
das
fimull
int3
sub
cs
aad
cmp
mov
out
mov
imul
daa
adc
and
cmpsl
pop
pushf
mov
mov
jl
jns
mov
stos
or
pop
sbb
out
adc
adc
sub
adc
fsubl
pop
cmpsl
pop
daa
pop
in
sub
adc
fcomp
jle
aad
sub
movsb
xchg
mov
push
aam
mov
jl
or
out
xlat
aas
dec
mov
lds
cmpsb
cltd
cwtl
in
dec
xchg
pop
or
dec
fsubrs
fdivs
fisttpll
inc
aas
mov
mov
fdivs
dec
jnp
or
adc
add
dec
fidivrs
xchg
test
es
inc
jp
fcompl
cli
sub
outsl
lock
dec
and
daa
add
add
pop
cmp
jmp
jae
xchg
inc
add
hlt
pop
mov
push
scas
mov
cmc
add
inc
js
and
add
add
insb
inc
roll
rcll
outsb
xor
add
cmpsb
ss
ja
iret
popf
cmc
or
fs
jo
pop
out
jb
xor
and
fwait
cs
and
repz
stc
cmp
cwtl
mov
cmc
mov
dec
fwait
sbb
sbb
jno
mov
jns
pushf
cmpsl
nop
mov
loop
mov
aad
or
in
adc
and
pusha
xchg
fnsave
jnp
mov
jo
pop
imul
lahf
push
mov
push
pop
imull
insl
add
jbe
les
sbb
jbe
shlb
nop
idivb
or
lods
inc
popf
repz
adc
cltd
dec
add
imul
push
cmc
inc
xchg
or
test
jl
mov
sbb
pop
mov
jnp
jae
fsubrs
mov
shlb
insl
adc
cltd
pop
js
adc
and
lds
movsl
ja
ret
cmp
mov
sbb
mul
mull
xor
cmp
mov
or
cmp
dec
add
dec
mov
inc
gs
popa
pop
call
pop
mov
loop
and
pop
out
mov
mov
mov
lcall
pop
insl
imul
mov
or
mov
pop
call
aaa
fcoml
and
cmp
jg
mov
cmc
xchg
pop
popa
clc
mov
dec
adc
jae
mov
fs
aaa
bound
dec
stc
lock
jg
sbbl
cli
sbb
daa
fstps
rcrb
out
dec
fcos
mov
add
call
cmpsl
push
xchg
iret
les
loope
insb
pusha
lahf
outsl
dec
xchg
mov
push
lret
mov
imul
mov
imul
add
loope
inc
dec
stc
lock
jl
fidivrs
sbb
xchg
inc
imul
or
adc
push
cmp
jnp
mov
cltd
mov
ret
nop
clc
pop
pop
adc
xchg
cmp
fcmovnu
xchg
xor
mov
sbb
cwtl
push
notl
and
mov
and
aaa
inc
lods
xor
pop
jb
dec
dec
mov
repnz
pop
xchg
and
mov
dec
lea
adc
pop
xor
lods
movsl
push
xor
add
gs
aas
aaa
mov
rcr
sub
lahf
sub
aaa
hlt
out
jecxz
ljmp
and
mov
sbb
mov
test
mov
lds
jnp
stos
mov
sti
jae
fmuls
into
nop
or
int3
mov
out
je
jecxz
cmp
mov
fcmovnbe
sbb
mov
jge
xorb
dec
das
mov
sbb
mov
sub
xchg
jb
in
in
mov
mov
je
lods
jno
inc
cmp
mov
cli
int
cwtl
xchg
notl
in
aaa
inc
lods
xor
pop
jb
dec
dec
mov
repnz
pop
xchg
and
mov
dec
lea
adc
pop
xor
lods
movsl
push
xor
add
gs
aas
aaa
mov
rcr
sub
lahf
sub
aaa
hlt
out
jecxz
ljmp
and
mov
sbb
mov
test
mov
lds
jnp
stos
mov
sti
jae
fmuls
into
nop
or
or
mov
lea
inc
push
dec
jp
sub
das
sub
movsb
inc
lea
mov
push
ljmp
test
cltd
inc
jno
loop
jb
push
push
ficoms
pop
dec
cmp
dec
loopne
pop
test
cmp
pop
aam
adcl
shll
xchg
shr
cmpsb
inc
add
dec
push
add
jne
cmovne
inc
movsb
data16
dec
add
or
xor
cld
lock
and
ja
adc
sbb
incl
mov
push
inc
lods
fsts
ljmp
jge
sub
gs
loop
sti
call
cmc
mov
mov
je
push
push
in
pop
jns
cmp
mov
push
mov
mov
and
rol
fs
push
mov
xor
outsb
inc
enter
nop
sbb
mov
mov
test
iret
pop
xchg
xchg
and
clc
shll
leave
sbb
jbe
mov
divb
mov
data16
mulb
push
dec
xlat
jp
jo
scas
mov
xchg
data16
mov
jbe
push
pop
lret
inc
das
pop
mov
push
cmc
push
push
fsubrs
cmc
jnp
cmp
scas
mov
sub
cmp
and
mov
cmp
adc
mov
jo
cwtl
scas
dec
cmc
dec
test
clc
dec
int3
cmpl
das
sti
inc
or
mov
jle
adc
mulb
push
icebp
test
popf
lea
xor
or
loop
cmpsl
hlt
addr16
xor
adc
and
mov
rcrl
lods
bound
sub
sub
or
outsb
shlb
fdivrs
int3
or
add
stos
push
rcrb
mov
or
in
addr16
hlt
in
insl
dec
mov
aad
call
cmpsb
push
cld
daa
test
dec
inc
cmp
icebp
jecxz
fsubs
fs
xchg
cmc
mov
mov
je
push
push
in
pop
jns
cmp
mov
push
mov
mov
aaa
sbb
shlb
repnz
push
mov
xor
outsb
inc
enter
nop
sbb
mov
mov
test
iret
pop
xchg
xchg
ds
dec
xchg
jp
pop
sarl
jnp
ss
imul
add
mov
xchg
push
lret
mov
jge
sub
pop
and
xor
or
pop
add
fsubr
mov
jns
std
imul
lret
xchg
inc
pop
fcmovbe
int3
mov
push
stos
and
in
or
lea
mov
fisubrl
lods
mov
mov
xchg
outsb
in
and
testl
mov
xchg
rorl
dec
ret
insb
test
jae
xor
push
sti
test
mov
lods
mov
sti
pop
out
mov
add
inc
mov
add
mov
lds
int
ret
fldt
scas
clc
inc
jbe
cmp
sbb
xchg
ds
mov
stc
jmp
shrl
push
xor
aas
popf
dec
dec
push
je
and
andb
push
subl
leave
addr16
enter
mov
imul
pop
jns
push
and
sub
test
jne
pusha
jg
aaa
sbbb
adc
cmp
push
dec
push
xlat
mov
popf
jp
dec
loopne
and
xchg
xor
mov
push
fwait
mov
andb
hlt
mov
int
add
fcmovnb
fs
xchg
or
cwtl
jo
inc
lea
jl
sub
pop
mov
mov
push
orl
add
fcom
push
repnz
inc
clc
sub
test
and
jp
jno
mov
pop
ds
shll
nop
je
fmul
adc
and
xchg
cmp
es
sbb
sbb
lea
and
or
and
mov
aam
adc
stos
jo
pop
mov
inc
dec
xor
addr16
in
cmp
adc
dec
dec
pop
inc
in
call
stos
mov
lret
je
and
rcl
lea
mov
mov
push
cmp
test
lahf
sti
lret
into
sbb
xchg
out
clc
cmp
cmp
ja
mov
lock
lret
push
cs
push
lods
mov
add
rclb
iret
add
int
enter
dec
pop
jae
xchg
adc
in
dec
in
and
aad
push
movsl
ud2
dec
jp
push
inc
fnstsw
aam
lcall
xlat
addr16
je
notb
jo
out
jl
cmp
pop
cltd
in
xchg
mov
cltd
aam
push
pop
cmpsb
mov
test
dec
fcompl
dec
pop
and
or
shlb
popa
xorl
sahf
shlb
punpckldq
jbe
es
fiadds
inc
repz
call
pop
mov
iret
cmc
or
ret
das
push
cmpsl
inc
mov
mov
outsl
rorb
cmp
adc
xchg
rcl
es
rolb
fists
mov
sti
mov
push
ja
jb
jnp
mul
xchg
call
and
fists
int3
sahf
jae
rorl
in
test
xchg
dec
or
cmpsl
cmpsl
or
cmp
xchg
fcomp
xorb
nop
add
pop
xchg
add
dec
xchg
push
jnp
stos
sub
push
js
jno
sub
std
inc
adc
xchg
jmp
hlt
leave
adc
std
pop
orb
mov
mov
aaa
or
push
or
fnstenv
leave
push
adc
mov
inc
dec
sub
in
dec
xchg
push
das
adc
ror
int
jbe
lods
daa
sbb
ret
repnz
or
lds
clc
pop
movsl
inc
add
mov
test
scas
jecxz
dec
loop
repnz
jmp
fdivs
push
push
push
gs
in
in
ja
lret
mov
jns
and
or
testl
loop
dec
bound
fisttps
mov
scas
rolb
sbb
sti
mov
and
insl
mov
cwtl
inc
mov
sbb
call
sbb
mov
rorl
cs
lods
mov
test
cs
sbb
inc
movsb
fbld
push
cwtl
push
mov
pop
mov
xorb
iret
imul
mov
xchg
insb
es
sbb
fnsave
test
push
add
sbb
add
mov
flds
mov
push
fnsave
dec
shl
add
add
stos
popf
mov
xchg
or
dec
insb
idivl
pop
rolb
pop
loop
insb
mov
add
cmp
daa
out
inc
jbe
and
or
jle
sub
jno
or
roll
jbe
shrl
aaa
pop
xchg
aad
arpl
jp
mov
dec
xchg
inc
rcrb
mov
jns
push
imul
into
les
or
mov
add
jge
xchg
xlat
or
lods
pop
test
popa
pop
adc
and
jg
insb
mov
add
add
add
nop
mov
lods
push
sbb
cmc
push
sbb
mov
add
mov
mov
sbb
aad
cmp
testb
mov
mov
dec
cmp
outsb
stos
data16
mov
and
mov
mulb
insl
std
jp
or
adc
cmp
fcmovnbe
adc
pop
mov
js
push
fcomp
add
gs
insl
icebp
and
and
test
out
insl
mov
movsl
out
in
ds
rorb
fs
mov
inc
ficoms
and
push
cs
add
jno
mov
cmp
cmp
loopne
iret
lret
sbb
arpl
lret
outsl
arpl
inc
push
xchg
sbb
std
inc
xchg
pop
mov
jg
enter
stc
cltd
les
icebp
ja
loop
nop
rclb
xchg
ret
push
mov
mov
gs
mov
adc
aas
fisubs
mov
add
insl
and
pop
cli
rcrb
out
dec
js
sbb
sarb
jg
lahf
cmp
fcompl
push
push
xchg
push
lea
mov
mov
ret
pop
pusha
mov
jns
cs
jle
pop
jmp
sarb
loop,pt
mov
clc
fldcw
and
lock
daa
lahf
xchg
movsb
call
addb
add
pushf
mov
push
push
xchg
push
lea
cwtl
mov
aad
add
jmp
adc
add
cmpsl
mov
dec
inc
jae
movsb
popa
adc
mov
jl
pop
addr16
mov
mov
int3
mov
mov
outsb
and
loop
push
pushf
push
int3
jmp
pusha
dec
cld
sub
lret
dec
mov
pop
icebp
push
sub
mov
ret
enter
xor
jne
clc
push
mov
lret
mov
loop
les
adc
in
icebp
inc
dec
loopne
lods
jne
mov
cmpsb
xchg
loope
push
jmp
not
mov
sbb
popf
inc
fucomp
fisttps
sahf
or
clc
sub
jge
jl
rcrb
icebp
repnz
aaa
in
jg
and
movsl
ljmp
xchg
mov
adcb
sbb
and
xor
das
das
movntq
mov
xchg
jmp
enter
in
mov
fdivrl
sbb
xchg
pop
xchg
pop
stos
inc
lea
scas
dec
lea
inc
dec
cmp
lock
xchg
jmp
enter
sbb
mov
mov
mov
push
lret
mov
ds
pop
adc
adc
icebp
pop
ficoml
mov
push
scas
adcl
punpcklwd
int3
jne
jge
div
sub
adc
outsb
adc
leave
fs
pop
pop
div
sub
adc
outsb
push
jbe
dec
ret
ja
call
mov
js
sub
clc
xchg
xchg
pop
pop
xchg
xor
cmpsl
aad
lock
add
jle
xchg
test
add
adc
iret
cmp
pop
das
mov
fdivrs
scas
push
roll
pop
adc
jge,pn
sub
mov
or
std
jg
push
push
in
jmp
pop
popf
stos
movd
pop
adc
enter
aam
mov
lret
sub
add
cmpsl
sbb
sti
pop
lock
sarb
push
pushf
push
andb
xchg
imul
xor
out
popf
int
sbb
pusha
inc
pop
rcrl
ja
leave
ss
les
push
inc
mov
cwtl
in
dec
loope
addr16
fs
adc
cmp
rcrl
aaa
mov
sbb
xchg
cld
insl
es
popa
pusha
cmc
loopne
add
lret
lret
aaa
out
mov
ja
sbb
lret
movsl
or
adc
cmpsb
js
fnstenv
and
scas
lock
sbb
mov
xor
sub
ret
movsb
loope
or
mov
or
inc
sbb
push
jbe
jb
in
dec
idivl
sub
add
xchg
loop
xor
xor
mov
cmp
test
das
ds
sbbb
mov
aaa
js
jbe
pop
jns
lods
bound
insl
sti
fcoms
dec
jne
mov
xorb
fiaddl
pop
cmp
insb
ret
std
inc
push
into
xchg
xor
pop
subl
xchg
roll
lock
js
adc
jl
test
jne
in
fcoml
stos
lahf
fdivs
rolb
mov
stos
js
movsb
loope
mov
push
xlat
gs
icebp
incb
rcr
in
sbb
mulb
call
jg
push
push
cmpsl
and
sti
jmp
test
imul
das
stc
cs
mov
xor
fdivp
inc
jg
adc
imul
push
push
outsl
je
js
insb
movsb
loopne
add
xchg
cli
mov
or
jge
inc
add
rcll
cltd
push
adc
xchg
push
jl
mov
push
call
call
xor
cltd
push
cli
or
cmp
mov
sub
jge,pt
sub
fsts
nop
ljmp
sub
ret
leave
push
outsb
mov
mov
out
shr
adc
subb
add
fisubrl
mov
cmc
push
mov
jo
aaa
or
inc
in
fiadds
prefetch
pop
aaa
fsubr
stos
and
outsl
mov
inc
mov
fs
mov
stos
aam
leave
pop
rolb
and
xor
dec
sahf
xchg
test
mov
and
aad
fwait
shll
cli
sub
inc
jns
rcrl
jle
in
jns
lods
sub
test
pop
dec
sub
inc
jno
mov
mov
or
cmp
test
xchg
jb
into
push
jae
sub
or
aas
cld
rcrb
pop
push
inc
inc
xchg
in
push
mov
imul
repnz
inc
aam
and
in
add
mov
xchg
sub
lea
xchg
adc
add
adc
jno
lods
ss
inc
stos
cltd
test
aam
or
frstor
scas
and
xor
pop
imul
and
in
mov
iret
xor
push
inc
push
mov
scas
or
push
push
fstpl
sti
xchg
scas
mov
fcmovb
xchg
in
sti
mov
add
and
lahf
and
data16
loope
jae
fisttps
xor
cmp
add
clc
jo
lret
push
je
xchg
cmp
xor
cli
stos
repz
xchg
pop
dec
and
xchg
sbb
leave
enter
insl
dec
inc
mov
js
lcall
cs
rcrb
xchg
sbb
inc
cltd
mov
mov
xchg
test
sub
insl
pop
test
cmpl
push
xchg
xchg
xor
aam
inc
push
add
inc
or
hlt
mov
push
pop
rol
into
ret
jnp
bound
movd
inc
ret
mov
ds
xchg
rolb
jnp
out
js
sub
in
jp
pop
or
imul
sub
push
std
es
fldt
ja
in
test
into
mov
int
fs
and
gs
aaa
sbb
xchg
cmpsb
cltd
cwtl
in
dec
jl
mov
xor
inc
gs
lods
mov
popf
shlb
pop
jbe
adc
xor
decl
push
xchg
loope
sub
sahf
scas
xor
or
and
test
repz
daa
imul
mov
mov
sbb
push
xor
fistl
cmp
cmpsb
cltd
cwtl
in
dec
xchg
movsl
xor
lahf
loope
sahf
lret
push
or
shlb
xor
and
rcrb
cmp
adc
icebp
sub
jmp
test
test
or
bound
jb
jns
js
pushf
mov
orl
add
sbb
dec
xor
mov
int3
inc
add
add
knotb
or
push
ss
fcmovnu
lret
cmp
adc
mov
adc
dec
pop
and
lea
xchg
stc
cvtdq2ps
push
add
xlat
bound
sub
cltd
xor
xchg
cmc
sbb
adc
pop
push
out
insl
sub
cmp
dec
shll
and
imul
lds
mov
cmp
dec
and
sahf
fstpl
nop
loop
lock
cwtl
in
dec
dec
xchg
mov
adc
lds
cmp
jmp
sub
pop
mov
pop
cltd
mov
inc
lretw
pop
nop
adc
mov
xor
and
mov
mov
adc
fsub
mov
jge
dec
dec
push
xor
leave
popa
or
outsl
xor
fdivl
rol
cwtl
pop
sbb
loop
mov
lea
mov
cmp
jp
xchg
lods
repz
ret
lds
addr16
stos
jecxz
out
daa
in
cs
or
push
sub
cmp
imul
dec
mov
repz
add
dec
andb
jb
adc
dec
js
gs
cmpsl
mov
cwtl
in
dec
jmp
stos
fisubs
fimull
push
movb
and
bound
cltd
pop
jp
cmp
cld
hlt
mov
and
mov
add
pushw
jecxz
stos
lret
leave
cld
in
mov
add
mov
ret
adc
adc
sub
and
adc
fadds
or
xor
push
dec
dec
rcll
xchg
aam
or
mov
divb
sub
mov
mov
cli
jo
aaa
nop
icebp
popa
ret
pusha
jo
xchg
aaa
mov
movsb
adc
outsl
xchg
pusha
jl
inc
mov
subb
sbb
or
shl
mov
mov
mov
xchg
xchg
jb
mov
aam
scas
les
jecxz
sarb
dec
cmp
fstpl
pop
sbb
fwait
in
insb
inc
out
sahf
add
cmc
inc
adc
cmp
loopne
pusha
imul
mov
mov
aam
mov
add
outsb
shll
xchg
subl
fcmovne
sub
aad
push
sbb
fwait
pop
out
jae
cmc
push
fcompl
cs
std
or
jae
aaa
mov
fsubp
sbb
test
dec
sbb
leave
cmpsl
cmp
adc
sub
imul
lahf
popf
mov
dec
push
jl
jg
repz
cmp
dec
ret
or
stos
and
jmp
stc
jmp
repz
xor
pop
shrl
std
jbe
shlb
outsl
pusha
icebp
inc
adc
sahf
jns
ficoms
mov
gs
das
scas
fcmovu
mov
je
clc
push
or
sahf
pop
negb
sub
push
pop
sub
aam
shlb
icebp
push
fbld
sub
cmpb
inc
nop
out
pop
scas
fdivl
lods
pop
ret
ja
data16
jno
cmp
test
sbb
nop
mov
cmp
psraw
mov
dec
mov
lock
cli
inc
mov
lcall
int3
pop
add
pop
or
jp
pop
test
aaa
add
sub
inc
xor
fists
test
push
dec
shlb
adc
mov
pop
push
mov
loope
add
jg
in
cmp
pop
push
js
popf
cltd
cmpsl
les
sub
dec
ja
pop
std
loope
shr
fwait
sarb
test
adc
xchg
std
ds
push
sbb
lahf
ss
fstpl
inc
cmp
mov
addl
dec
out
mov
ja
pop
sub
jl
mov
or
add
addr16
dec
cld
or
pop
orl
jns
inc
imulb
mov
pop
popf
rorl
into
out
jae
mov
add
outsl
aam
adc
ds
jle
push
lahf
xor
mull
dec
cmc
xchg
pop
and
imul
mov
outsl
cs
xor
das
dec
mov
or
inc
gs
mov
addr16
cld
mov
xchg
cmp
pop
repnz
inc
mov
sub
cld
mov
rorl
pop
sub
pushf
lea
in
mov
mov
sub
pop
jge
gs
sbb
push
lahf
clc
sbb
adc
mov
in
pop
cmp
fstpt
test
hlt
pop
push
inc
sbb
mov
ss
dec
cli
test
nop
mov
and
jge
mov
mov
test
sbb
mov
fbld
push
inc
stos
mov
inc
aad
ss
xor
and
imul
pop
das
inc
aam
xor
or
call
pop
jg
xlat
dec
and
test
or
inc
sub
push
inc
xchg
and
or
in
xchg
pop
nop
push
aam
inc
fistpl
xor
andb
inc
sbb
xor
lret
pop
std
add
movsb
pop
in
jp
dec
testb
sbb
push
es
inc
cmpsl
mov
ja
sbb
lret
inc
lret
lods
mov
cld
testl
cmp
push
jmp
sahf
in
pop
xor
push
into
daa
jmp
gs
push
xor
dec
adcl
enter
mov
cmp
data16
jnp
arpl
mov
and
in
mov
popa
lcall
mov
sti
sub
sub
das
xor
adc
in
mov
sarb
rcr
jecxz
fnsave
sub
push
xor
lcall
stc
dec
add
cmc
in
nop
lods
scas
sbb
pop
aad
pop
cltd
movsb
sarb
cmc
and
xchg
push
test
imul
ja
in
xor
mov
in
jnp
shrl
mov
cmpsl
loopne
fwait
add
ja
sub
mov
enter
ds
lock
test
lea
push
adc
cs
jnp
lcall
push
adc
das
decl
call
sbb
push
es
mov
iret
in
mov
stc
aad
push
loopne
adc
dec
dec
lret
xlat
loope
mov
test
pop
mov
aas
or
ds
cmp
pop
jbe
int3
sahf
cmp
in
nop
lods
jb
out
lods
add
pusha
pop
push
scas
add
mov
adc
sti
add
sbb
aas
push
jbe
out
lret
mov
rcrl
test
loope
in
outsl
inc
cltd
scas
dec
xor
add
lahf
dec
loop
arpl
and
xor
mov
pop
icebp
adc
sti
dec
inc
push
sbb
mov
jmp
test
outsb
pop
lock
movsb
outsb
stc
mov
pop
stos
push
mov
aad
insb
lcall
test
lea
sub
loop
xor
es
xor
adc
lock
ror
ljmp
js
imul
mov
xor
pop
dec
stos
add
or
out
es
mov
dec
push
sub
daa
or
xor
cmp
nop
movsb
leave
sub
aas
into
xchg
popf
pop
or
movsl
adc
xchg
sbb
sbb
roll
fcoms
inc
adc
in
lods
lcall
adc
or
das
cwtl
mov
xchg
in
push
mov
stc
je
mov
cmp
imul
orb
popf
jg
dec
mov
or
int
dec
sub
iret
adc
add
mov
gs
imul
cld
test
dec
mov
xor
dec
idivb
loopne
xchg
nop
adc
jecxz
add
add
mov
push
xchg
add
aaa
fcompl
pop
bnd
xor
mov
cmp
adc
movsl
adc
mov
insb
or
arpl
dec
xchg
adc
stos
adc
push
out
icebp
clc
pop
or
loope
dec
sbb
cmpl
push
aad
sub
adc
adc
adc
or
push
ret
fisubrl
xchg
xor
and
xlat
xchg
hlt
je
xchg
add
xchg
pop
and
lods
push
xchg
repnz
sahf
in
icebp
add
nop
pop
dec
mov
loop
data16
inc
xor
hlt
insb
push
mov
stos
call
lock
and
ret
push
ds
mov
jnp
xchg
cmp
lret
ljmp
dec
in
push
inc
cmp
and
in
jmp
cmp
inc
in
mov
or
sbbb
sub
das
add
pop
nop
insl
in
popa
dec
test
mov
sahf
movsl
pop
mov
imul
adc
fimull
push
into
inc
pushw
and
ljmp
xchg
mov
xor
mov
addl
mov
sahf
dec
mov
mov
fwait
mov
outsb
stc
dec
setb
stos
lcall
js
mov
mov
xchg
push
insl
or
sbb
sbb
aaa
dec
cld
cmc
mov
movsl
out
mov
into
test
clc
enter
out
mov
rcrb
adc
mov
dec
sub
test
add
push
xchg
mov
mov
mov
or
sbb
mov
sti
jecxz
popa
xchg
cli
inc
pop
adc
pop
xor
movsb
test
dec
xchg
pusha
in
cmpsl
push
pop
out
or
pushf
cltd
adc
cli
cmc
cmp
xlat
cmc
sub
cmp
les
or
aad
or
jne
icebp
shrl
dec
or
je
xor
add
scas
in
stos
lods
ljmp
pushf
dec
sub
test
add
push
xchg
mov
cltd
lret
dec
frstor
or
sahf
clc
aas
or
and
shl
cmc
in
dec
sbb
pop
lods
imul
pop
sar
scas
push
and
mov
push
call
into
cmpsb
mov
flds
aad
jg
mov
xchg
xchg
cmp
inc
repnz
sub
jp
mov
push
push
aaa
mov
xchg
aad
mov
repz
stc
cmp
xorl
adc
rcrl
hlt
dec
pop
frstor
movsl
and
fildll
and
jb
inc
mov
adc
les
mov
lahf
mov
ret
stos
movsl
jnp
push
notw
add
sub
pop
test
jle
loopne
sbb
sbb
jmp
test
mov
add
push
andl
cmp
cmp
repnz
test
pop
mov
adc
iret
sbb
jg
popa
movsb
shll
inc
sbb
out
in
push
jle
mov
jle
jmp
and
pushf
dec
add
xchg
mov
scas
arpl
loopne
pop
push
and
xorl
push
xchg
mov
mov
test
xor
cmp
pusha
adc
iret
mov
test
nop
mov
sbb
adc
jne
lcall
insl
inc
adc
or
pop
add
sbb
arpl
jg
pop
dec
jae
xor
dec
mov
sbb
and
and
stos
sub
sbb
adc
or
cmpsb
mov
pop
insb
mov
or
cwtl
xchg
mov
push
fcomip
cltd
inc
arpl
push
pop
aad
leave
jge
xchg
aad
push
subb
sbb
xchg
loopne
or
push
pop
fadds
sub
std
stos
pop
mov
int3
test
sub
push
adc
push
aad
pusha
and
in
call
dec
loope
dec
or
sbb
movl
divb
popf
leave
inc
in
ss
aas
adc
mov
sbb
xor
icebp
push
insl
cmpw
lret
pop
xor
test
loope
and
popfw
mov
cmp
les
enter
rcll
or
test
lock
adc
ja
fisubrs
data16
pushf
negb
fistpl
pushf
cs
lods
mov
test
out
data16
sub
mov
aaa
subb
enter
or
fiaddl
test
jns
fs
das
aaa
mov
ljmp
push
cmc
daa
and
and
adc
add
dec
mov
xchg
mov
xchg
scas
test
out
fcmovne
mov
hlt
xlat
lahf
dec
pcmpeqd
lcall
loope
xchg
dec
xor
loopne
xor
fcmovnb
push
imul
push
push
mov
lret
mov
mov
adc
lock
dec
cmpsl
mov
cmp
or
xchg
movsl
outsb
mov
cs
fcoml
sub
jecxz
mov
cmp
insb
sub
in
shll
fcomps
and
push
and
out
mov
cmp
mov
mov
fsubs
scas
xchg
pop
mov
rol
std
mov
jns
daa
out
jb
and
mov
mov
aas
mov
cmpsl
xchg
or
mov
jge
mov
xor
icebp
mov
inc
xchg
movsl
jge
adc
fidivs
outsl
cltd
and
insb
imul
ja
pop
test
and
add
fs
jg
cmp
adc
iret
sahf
add
in
mov
dec
dec
dec
test
outsb
sbb
push
add
mov
pop
or
mov
es
cltd
addr16
pop
or
add
popf
xchg
mov
int3
sbb
add
mov
pop
sbb
ss
nop
or
icebp
pop
pushl
out
fcomip
roll
popa
fcmovbe
std
popf
call
ds
mov
dec
arpl
js
and
mov
ljmp
xor
mov
add
lods
lret
leave
dec
imul
mov
jg
repnz
jb
cltd
lret
fidivrl
pop
mov
test
arpl
ficoml
dec
es
jne
rcrb
sub
and
mov
es
xor
arpl
xor
pop
pop
insb
mov
cld
leave
mov
or
ret
dec
adc
and
and
cmp
or
pop
repz
jne
pop
das
push
sbb
sahf
xor
shrl
mov
sarl
cmp
cwtl
cmp
rcr
out
sahf
stos
mov
inc
sub
in
adc
stc
cmp
ret
cli
arpl
fdivl
imul
aas
fwait
sbb
push
push
mov
arpl
iret
ds
cltd
rol
sbb
xchg
push
fwait
and
mov
dec
inc
out
icebp
jl
push
cmp
mov
inc
xor
into
sbb
testl
scas
adc
fsubs
push
lds
sbb
pop
push
movsb
sbb
std
repz
fstpl
xlat
pop
jmp
cmp
ss
dec
int3
fprem
js
notb
cmp
lret
adc
lahf
gs
jae
mov
mov
xlat
cwtl
mov
jg
mov
jne
xchg
pop
dec
cld
and
xchg
xor
inc
or
loope
cld
imul
fwait
inc
fists
inc
sbb
mov
gs
pusha
repnz
sub
cwtl
cmp
sub
cld
sub
ret
xor
jmp
aam
or
test
sbb
or
aad
jne
pop
ficomps
inc
xor
adc
mov
icebp
lcall
lahf
lods
pop
push
out
js
lods
dec
jp
mov
cmpsl
jp
push
pop
push
jp
test
pushf
ret
lea
fcoms
rorb
pop
lret
out
fcoms
rorb
lahf
movsl
sti
jae
jns
push
sub
jb
jne
into
mov
jp
inc
rcll
es
loopne
pushf
cmp
cmp
xor
iret
ret
in
in
fs
enter
add
and
lahf
add
repnz
iret
cmpsl
imul
jl
sub
cltd
rorb
jp
in
fisubrl
andl
pop
sub
aaa
push
in
mov
sarl
xlat
xor
xor
dec
mov
movsl
loop
in
mull
fimuls
cmp
xchg
and
sbb
ror
bound
mov
std
mov
add
cmpsl
insl
push
orl
scas
stos
push
mov
pop
das
sbb
sbb
inc
jbe
repz
pop
push
jle
mov
ret
loop
clc
sub
or
cs
imul
inc
cli
adc
popa
lret
stc
jmp
jno
adc
sbb
call
mov
aam
popl
test
ds
les
testb
fdivs
cmc
mov
sub
push
shll
cmp
out
mov
cmp
adc
testl
sbb
das
jmp
push
pop
inc
push
inc
sub
mov
ds
les
testb
imul
clc
or
xor
cmc
pop
jecxz
adc
mov
ds
adc
popf
mov
stos
testl
mov
stc
inc
mov
jo,pt
jbe
test
jecxz
imul
xor
into
inc
mov
ss
hlt
xchg
xchg
daa
pop
andl
dec
or
fcmove
xchg
pusha
out
aas
and
xor
enter
inc
mov
pop
push
gs
jo
sahf
pop
jnp
test
or
bound
arpl
sub
icebp
es
push
xchg
sub
les
roll
jle
cmp
add
cmc
sub
in
xchg
les
and
push
out
inc
int3
into
push
xchg
mov
aad
dec
pop
insl
iret
mov
fsubrl
cmp
mov
mov
fwait
xchg
ss
or
inc
sahf
dec
mov
and
dec
movsl
cli
pop
jle
xchg
mov
addr16
lahf
pushf
movsl
sub
pop
jl
or
loopne
int
mov
lods
jbe
dec
pushf
push
xchg
add
mov
out
scas
push
js
fwait
leave
pop
push
out
push
pop
pop
push
lock
dec
lahf
aaa
mov
repnz
outsb
les
invd
call
lea
add
fstl
aad
jo
sarl
out
push
int3
rcll
lods
mov
flds
daa
jg
jmp
inc
stos
popf
js
out
mov
or
fstpt
subl
call
jg
fisttps
xchg
cmp
mov
push
and
pop
cmp
popa
xor
fwait
int3
cmp
pop
mov
popa
insl
push
mov
and
je
imulb
inc
cmpsl
insl
pop
icebp
cld
mov
out
jns
jp
cltd
scas
ja
ret
dec
lret
divb
push
push
xchg
mov
xor
xor
mov
insl
adc
test
stc
clc
fwait
mov
jle
les
push
jg
inc
clc
dec
cli
xor
cli
adc
xchg
lods
push
mov
mov
xor
push
mov
daa
sub
testl
add
dec
ja
dec
imul
xchg
or
xchg
jmp
mov
rclb
iret
fcmovbe
notb
mov
popf
cmpsl
push
dec
rorb
mov
scas
mov
addr16
out
insb
in
les
fdivr
sbb
push
dec
fdivrs
fs
or
out
mov
leave
ror
imul
adc
inc
mov
test
lock
inc
fs
mov
pop
ds
std
mov
mov
cmpsl
cmpsb
mov
cmc
gs
cltd
inc
in
add
adc
cli
add
subb
dec
aam
jbe
pop
insb
fwait
shll
push
insl
jae
adc
insb
movsb
mov
or
dec
mov
pop
push
jle
push
or
mov
or
in
fstl
enter
sahf
xchg
pop
xchg
out
rclb
pmaxsw
xlat
decb
mov
push
mov
cmc
sarb
loopne
inc
fwait
mov
mov
pop
aas
dec
add
and
xchg
and
pop
pop
imul
xchg
pop
mov
jle,pn
lahf
mov
data16
imul
add
arpl
pusha
sti
or
aad
pop
add
inc
in
addr16
call
arpl
jp
icebp
xchg
push
out
cmp
or
fwait
cmp
pusha
push
clc
mov
pusha
mov
cli
mov
insb
add
pusha
pop
inc
das
push
mov
sbb
sub
std
icebp
dec
jne
jbe
or
cmpsb
ja
xchg
pop
sbb
jg
pop
jns
pop
xchg
pusha
dec
in
out
push
cmc
push
mov
lock
xchg
mov
mov
fdivrl
out
xchg
call
outsl
fadds
mov
andb
hlt
js
xchg
adc
outsb
sbbl
incb
imul
stos
sarb
xor
popa
lock
or
lret
sarb
outsl
movsb
jnp
mov
mov
fsubr
cmpsb
lods
mov
inc
jl
sbb
sub
dec
lods
gs
jb
jne
push
out
cmp
mov
push
add
or
inc
mov
mov
in
push
sub
xor
addr16
pop
mov
jo
dec
push
pushf
lret
push
xchg
mov
xchg
xchg
inc
scas
aam
mov
mov
cld
mov
jecxz
ret
enter
push
out
outsl
bound
sub
or
scas
icebp
xchg
and
push
movsb
popf
mov
mov
aas
push
cmc
je
cmp
cmp
and
gs
fcomps
inc
test
test
pop
insl
adcb
sub
test
add
rcr
sbb
in
adc
sbb
ja
loopne
test
loope
dec
enter
mov
pop
dec
pusha
mov
jno
jecxz
lret
je
or
push
imul
add
ja
xor
push
mov
out
xor
scas
pop
mov
xchg
sti
mov
jle
add
push
test
push
add
sub
mov
add
sub
or
lcall
cmpsl
fisttps
out
xor
pop
adc
mov
ret
rolb
xchg
dec
mov
popf
ds
xor
and
or
fmuls
cmpb
sbbl
sub
push
mov
aaa
ds
mov
gs
push
gs
stos
mov
mov
and
adc
insb
push
jmp
rolb
arpl
cmp
pop
sub
xor
sti
mov
push
sub
xchg
pop
sbb
daa
sub
std
xor
shrb
xor
mov
std
mov
mov
sar
shll
pusha
in
in
sbb
mov
xchg
sbb
cltd
adc
pop
push
sbb
out
repnz
enter
add
aam
fcoms
loope
dec
push
mov
dec
and
iret
xchg
popf
leave
sarb
es
inc
inc
add
push
hlt
mov
ja
lods
lahf
lret
pop
push
push
adc
iret
or
loop
leave
and
xor
mov
scas
pop
lret
fwait
bound
mov
leave
int
push
inc
sbb
fnstsw
push
mov
sub
mov
mov
push
inc
jp
data16
mov
cmc
lods
cltd
cwtl
cmp
pop
outsb
negl
mov
fldcw
aam
sub
lods
cmp
mov
dec
dec
jecxz
rol
adc
fisttpll
jp
cmp
add
cs
xor
int
or
sub
mov
shlb
mov
aas
test
pop
push
cmc
cmp
fdivl
movsl
fnstsw
repz
ds
lret
jbe
jl
xchg
jbe
sbb
cmc
xor
pop
add
sbb
push
inc
xor
js
jge
inc
jae
das
pushf
shl
into
cmp
scas
cmp
mov
mov
mov
inc
scas
hlt
decl
mov
pop
xor
cmpsb
xor
lock
clc
loope
insl
dec
add
push
adc
lods
jle
mov
dec
and
lahf
mov
jnp
in
int3
loope
xchg
ljmp
push
fwait
lods
cmpsl
cs
add
aad
lret
inc
pop
and
jno
or
cld
icebp
mov
mov
sahf
sub
dec
jno
cld
arpl
gs
ljmp
jne
and
cld
dec
nop
mov
fs
aam
pusha
ljmp
pop
xchg
pop
xor
push
and
xchg
mov
shll
std
push
sbb
sahf
and
push
and
inc
sub
sub
xchg
cld
popa
pop
cmp
loop
add
mov
dec
xchg
je
xchg
cmp
nop
mov
xlat
pop
jae
jmp
push
jns
cmp
jg
aam
push
sbb
stos
mov
mov
fsubrp
inc
mov
xlat
xchg
aas
incb
cmp
idivb
push
or
iret
sbb
push
xlat
bound
popf
mov
into
lahf
stos
repnz
aaa
aaa
sub
prefetcht1
and
mov
jno
std
lahf
stos
push
lea
jecxz
mov
xorl
addr16
add
std
jge
cmp
repnz
testb
jg
popa
enter
test
cwtl
and
cmpb
je
inc
xor
mov
dec
mov
push
jne
decl
xchg
jg
ds
test
lret
and
or
faddl
movb
jnp
pop
pop
mov
outsl
mov
std
loope
mov
mov
dec
xchg
ss
jnp
sub
aaa
daa
mov
out
movzbl
rolb
inc
int3
movsb
sbb
mov
mov
jge
xchg
int
mov
and
mov
push
push
xor
pop
push
mov
ret
test
adc
pop
imul
or
repnz
stc
mov
mov
sbb
or
push
out
in
decb
int3
mov
fsts
fistps
pop
sti
das
icebp
xchg
pop
mov
out
call
lea
addb
dec
out
add
fwait
xor
add
mov
sbbl
mov
repz
mov
decl
sti
addb
lds
fdivrs
xlat
daa
pop
inc
ret
repnz
lahf
sub
rolb
mov
mov
pop
ja
aad
aaa
ret
fcomip
push
fbstp
push
push
pop
shrl
lcall
cmc
cmp
mov
adc
cmpsl
imul
mov
rcrb
shrb
ljmp
mov
hlt
xchg
sbb
adc
dec
loop
mov
jge
ja
in
push
mov
hlt
mov
sub
inc
insl
in
lea
in
push
cmp
jns
pop
das
test
fistl
imul
negb
es
sbb
push
fnstenv
pop
repnz
xor
insl
ja
fs
ljmp
xor
jb
push
and
cmp
aad
mov
lods
inc
popa
fisubrl
pop
aam
xchg
es
out
sub
xor
bound
popa
dec
sbb
aaa
iret
pop
push
ja
or
mov
js
pop
in
sbb
push
into
loop
jge
in
mov
rcll
jp
into
fisubl
in
mov
cli
jl
lea
xor
popa
addr16
xchg
xchg
mov
enter
testl
sub
jge
stos
fld
int3
dec
pop
out
mov
scas
pop
sbb
inc
inc
xchg
xchg
mov
pop
mov
push
xlat
xor
fs
jge
stos
fld
int3
dec
pop
out
popa
outsl
psrld
test
xor
fsubs
test
cli
mov
add
xchg
jmp
cmp
incb
mov
inc
jnp
jmp
lahf
inc
repnz
jo
dec
or
inc
andl
xchg
mov
and
fs
adc
ljmp
xchg
inc
std
push
mov
pusha
mov
adc
aam
cmc
xor
add
jne
inc
lods
lea
mov
rolb
lock
pop
ds
outsl
fwait
ja
xchg
cltd
jbe
push
shl
jg
pop
xor
fldt
rcr
popa
sbb
stc
jae
shrl
mov
stos
aaa
cmpb
push
adc
xor
shl
pop
ds
dec
sbb
inc
or
xor
xchg
mov
aad
sub
pop
aas
pop
movsb
test
add
dec
iret
mov
or
scas
ret
xchg
dec
cmp
mov
dec
fcoms
call
add
outsl
inc
out
jecxz
ja
and
mov
rcrl
std
inc
or
ljmp
cmp
pop
pop
pop
pusha
pop
mov
cmp
mov
leave
ljmp
xor
push
adc
movsl
aad
pop
test
dec
mov
push
leave
cmpb
mov
into
jle
outsw
or
adc
jmp
inc
test
push
dec
lret
stc
outsb
les
repnz
pop
fstpt
jecxz
shlb
pop
xor
mov
ror
lock
adcb
arpl
pusha
xor
inc
inc
mov
mov
xlat
mov
pop
or
jbe
sub
inc
dec
jae
adc
popa
cmp
push
inc
lods
sarb
jp
mov
xchg
pusha
xor
mulb
mov
enter
xlat
mov
test
add
dec
jae
adc
repnz
fbstp
lds
jae
push
add
test
popa
adc
add
mov
iret
sbb
cmp
jns
or
inc
xor
mov
jg
lods
pop
add
push
add
test
je
rorl
mov
sbb
xchg
inc
xchg
jecxz
add
cmp
add
pop
cmp
iret
popa
les
xchg
lret
mov
das
jb
add
scas
mov
ret
jb
popa
adc
dec
imul
bound
or
arpl
inc
ret
ret
fldt
outsl
ljmp
fsubrs
push
xor
sub
leave
pop
test
divl
pop
es
or
nop
xchg
cs
adc
popf
fs
sub
aam
int
xlat
rorb
jl
loop
shll
hlt
fldt
lahf
in
xchg
xor
imul
xor
or
lahf
sub
or
leave
pop
test
sub
fistpl
fs
pop
pop
scas
sti
stc
add
lcall
mov
push
sub
and
pop
hlt
adc
cmpsl
inc
cmp
mov
dec
or
stos
repz
test
lock
mov
xchg
pop
pop
xchg
xor
stos
subl
cltd
pop
xchg
xchg
xchg
mov
mov
cmp
int
rclb
add
mov
aam
scas
pop
icebp
loope
pop
push
xor
rol
push
mov
movsl
jnp
or
lahf
push
and
and
inc
or
test
fcompl
jbe
jnp
jb
daa
int
nop
add
idivl
cmp
outsl
sub
pushf
in
sbb
pushf
xchg
stc
pop
xchg
and
call
mov
jmp
leave
aam
xbegin
ja
idiv
into
pop
jnp
loope
push
mov
push
fiaddl
inc
popa
cli
sub
add
inc
pop
lahf
fcoms
adc
call
in
inc
das
sbb
push
imul
pop
mov
subl
pop
jle
inc
pop
outsb
push
dec
sub
mov
mov
loop
xor
stos
sar
mov
nop
cmpsb
push
int3
add
or
psllq
xor
into
fsubs
movsl
leave
pop
mov
bound
xchg
xor
mov
imul
xchg
mov
das
cli
inc
in
xor
pusha
and
inc
mov
inc
lock
jle
push
insb
push
inc
jae
cmp
jns
xor
cli
adc
jb
fsubrs
lock
fiadds
ja
or
dec
nop
add
mov
fs
cmp
or
pop
lods
cmp
mov
mov
in
jno
sbb
dec
adc
xchg
push
push
cmp
mov
stos
cmp
cmp
test
xor
mov
sbb
lods
or
inc
das
lds
mov
repnz
mov
lods
push
and
jae
popa
mov
ret
push
lahf
xchg
enter
jmp
jno
iret
fcomi
imul
ljmp
into
cld
inc
daa
cwtl
repnz
push
adcl
inc
sub
lret
inc
add
mov
int
jg
fisubl
pushf
sti
sub
xor
cs
in
or
fmull
jnp
scas
loope
and
ss
imull
push
test
outsl
test
xchg
bound
rcll
mov
insb
icebp
daa
xor
mov
cld
dec
and
popa
cli
sub
cmp
in
cs
push
dec
mov
mov
cs
cli
inc
in
xor
xlat
or
xor
movsb
bound
cs
jne
add
mov
mov
xorb
xor
fdivrs
mov
rolb
out
inc
xchg
cmp
jmp
jne
lock
fiadds
ja
fcomp
cld
test
add
or
cmp
mov
lahf
or
popf
aas
mov
adc
inc
or
xchg
aam
pop
pop
aaa
and
pop
mov
xor
data16
xor
pop
rcll
cmp
daa
push
cmc
push
jns
mov
dec
sbb
test
pop
sbb
xlat
cmp
insl
ljmp
insl
shrb
pop
out
bound
pop
sbb
std
fdivl
pushf
cs
add
lret
dec
mov
insb
jbe
fwait
cld
cmp
enter
rorb
xor
sbb
add
dec
inc
jmp
sti
push
iret
sub
mov
mov
pusha
sarb
jg
jmp
cld
jns
aas
mov
adc
nop
lret
pusha
xorl
or
lahf
cltd
fdivl
popf
sbb
mov
divl
add
dec
pusha
frstor
test
aam
add
lods
inc
xor
adc
cwtl
insb
icebp
jmp
mov
dec
adcb
pop
enter
push
leave
xchg
gs
mov
lahf
outsb
stc
xor
pop
inc
pop
pop
mov
jbe
arpl
cmp
cmp
pop
repnz
xchg
fdivl
cwtl
jne
xlat
mov
or
sbb
pop
out
lods
add
sti
arpl
lahf
push
push
dec
mov
add
and
aam
mulb
loopne
shll
lds
fstpl
ror
push
test
aad
lret
push
lods
sbb
lds
out
fisubs
loope
scas
xchg
mov
xchg
cmpsb
jb
lcall
pop
pop
cmpsb
aad
jnp
or
push
popa
cs
inc
dec
addl
mov
int
and
xchg
repz
xchg
dec
stos
sbb
sub
inc
adc
ljmp
icebp
or
push
pop
mov
jns
sub
pop
in
push
pushf
fld
fstpt
push
xchg
xor
sbbb
lods
dec
pop
shll
or
sbb
icebp
jecxz
enter
les
movsl
adc
clc
or
sub
pop
cmp
inc
int3
cmpsb
jne
adc
enter
fucomi
push
insb
cs
mov
pop
js
hlt
sub
jmp
repnz
test
xor
inc
stc
lahf
add
and
fldcw
add
test
ja
sub
xchg
lea
mov
or
or
jg
pushf
cs
sbb
xchg
in
sub
dec
std
test
xor
clc
mov
call
lahf
pop
call
xor
push
pushf
loopne
loopne
dec
jno
pop
jb
jge
in
call
pop
jmp
fistps
scas
lock
xchg
nop
nop
or
xchg
cmp
xchg
jno
jp
or
out
js
daa
fucomi
lea
mov
lcall
cli
call
jo
cs
lds
adc
adc
aam
mov
sbb
pop
mov
mov
cmp
stos
mov
mov
push
fistpll
mov
movsl
int
mov
mov
xchg
faddl
cwtl
inc
lea
pop
pop
iret
fs
popa
das
les
jge
xchg
repz
xchg
dec
stos
sbb
daa
pusha
add
lahf
xor
adc
or
int3
addr16
push
out
xchg
and
mov
adc
cld
mov
ror
xchg
pop
push
dec
inc
xchg
jns
je
or
fildll
xchg
daa
lahf
cmpsl
mov
cmp
pop
sbb
pushf
lds
sub
mov
test
subl
js
dec
dec
jns
sbb
sub
jns
and
xchg
mov
insb
cmp
sti
fists
cmp
imul
jp
sbb
mov
cmpsb
mov
sub
movsb
pop
movsl
adc
or
push
sbb
sbb
push
add
pop
sbb
add
mov
push
cmpsl
jo
mov
int3
aam
enter
les
movsl
mov
imul
adc
mov
test
fbld
xchg
stos
xor
pop
shll
sbb
mov
aam
adc
out
lods
in
xorl
ret
dec
jne
shlb
sbb
mov
xor
sar
cmc
jl
pop
jae
adc
adc
movsb
sarb
dec
sub
imul
xchg
outsl
ss
mov
mov
je
mov
add
pop
cld
mov
jle
aam
fcoml
mov
mov
int3
int
inc
outsb
push
cmc
push
jns
pop
or
leave
jge
xchg
aad
push
stos
dec
shl
bound
popf
enter
outsb
dec
dec
mov
xor
jmp
push
les
mov
xchg
aad
push
decb
scas
push
push
and
rolb
mov
sbb
adc
ss
jge
xchg
aad
push
pop
sub
orl
mov
lock
aam
and
mov
leave
jge
xchg
aad
push
mov
add
push
mov
sahf
pushf
cmpsb
dec
push
mov
jne
or
push
lods
pop
dec
mov
rcll
mov
inc
out
movsb
sti
mov
je
push
leave
sarb
icebp
cmp
push
pop
xor
cwtl
loop
jge
xchg
aad
push
xor
repnz
lahf
mov
xor
lock
inc
inc
es
ffree
and
lods
jg
loop
jge
xchg
aad
push
dec
or
sti
sbb
xor
push
test
dec
push
adc
push
psraw
daa
sti
mov
sarl
rcll
sarl
jns
enter
dec
out
js
xchg
cs
lock
out
sbb
jge
xchg
aad
push
leave
jge
xchg
aad
push
dec
nop
mov
xchg
pop
pop
rorl
xor
rcl
cmp
pop
mov
push
mov
ja
mov
in
int3
mov
scas
cmpsb
imulb
mov
sub
push
and
jb
mov
inc
shlb
rcrb
enter
jl
js
and
fwait
adc
std
je
fs
cwtl
jnp
ja
mov
and
sbb
or
loopne
sub
adc
out
outsb
xchg
setns
cmpsb
je
cmc
aam
xor
adc
push
and
adc
mov
mov
xor
mov
sbb
mov
out
mov
test
push
cs
daa
insl
and
inc
jno
cmp
inc
fildl
push
frstor
pop
lcall
xor
cvttps2pi
push
lock
mov
cs
xchg
cs
jecxz
ljmp
push
cmc
xor
int3
dec
pusha
inc
push
lods
out
jmp
fld
jg
andl
xor
inc
fbstp
sbb
xchg
sbb
xchg
sub
adc
ret
test
rorb
and
and
cmpsb
add
daa
idivl
xor
fnstsw
mov
mov
push
cmp
add
int
pushf
jb
mov
inc
cmp
push
jmp
movsl
dec
xor
xor
lods
mov
sti
icebp
or
dec
pop
mov
xchg
mov
mov
cmpsb
pop
pop
scas
jae
pop
mov
dec
cld
mov
jns
test
xlat
xchg
in
dec
inc
xchg
mov
rcrl
mov
ror
xor
or
jb
push
xchg
push
into
add
xor
xor
popa
mov
pop
addr16
adc
pushf
cmp
pop
jle
jns
cs
scas
sub
imulb
mov
jg
test
pop
and
repz
sub
xchg
and
xchg
fisubrs
dec
ss
in
fs
sub
arpl
in
repz
xor
jecxz
jb
jmp
xor
cmp
aaa
dec
xchg
cmp
push
and
xchg
inc
mov
or
int3
mov
dec
call
sub
aad
icebp
inc
js
repnz
add
sarb
out
add
push
sti
jle
inc
sbb
and
pop
fbld
shld
popf
push
mov
sbb
hlt
scas
fisttpl
pop
dec
push
sbbb
mov
addr16
inc
dec
arpl
sbb
add
in
cmp
add
and
push
mov
add
push
push
scas
dec
or
sbb
inc
repz
add
xchg
lds
movsb
adc
jl
int
enter
or
rcll
push
in
sbb
ds
lds
pop
push
jnp
xor
mov
adc
loope
lret
push
insl
inc
out
xchg
add
xor
mov
add
sub
cltd
mov
faddl
push
ds
mov
lcall
les
pop
push
pop
jae
and
icebp
das
xor
mov
rcll
sbb
arpl
dec
pop
data16
xchg
aam
das
xchg
jne
pop
sub
sub
call
mov
clc
aaa
or
sbb
mov
repnz
dec
nop
push
push
out
js
push
mov
mov
mov
inc
add
stos
mov
sub
andb
push
dec
enter
cmp
xchg
in
jb
lods
ja
insb
outsl
insb
add
repz
mov
or
xor
lcall
add
test
shll
mov
in
pop
es
repz
dec
jge
aam
xorl
das
sub
fsts
cmc
ljmp
gs
adc
call
imul
into
stos
sti
push
adc
sbb
shr
jne
jmp
cld
push
xchg
popf
lret
daa
std
mov
hlt
fwait
mov
inc
mov
mov
leave
sbb
ficoms
adc
jno
sub
jne
and
pop
mov
inc
jle
cltd
xchg
ret
jae
pop
add
mov
int
sti
mov
imul
inc
xchg
arpl
fs
mov
hlt
and
lea
into
cltd
push
ficompl
adc
xlat
push
jge
ss
and
jmp
sar
outsb
mov
mov
mov
das
xchg
int
and
adc
adc
jo
add
mov
mov
popa
xlat
add
sub
ret
and
jb
adc
fisubrs
pop
faddl
pop
push
xchg
test
cmp
and
pushf
dec
loop
add
addb
xchg
in
xchg
sub
or
jno
out
adcb
inc
outsl
repnz
fwait
inc
adc
subb
inc
jno
or
adc
sub
shll
xorl
test
roll
test
mov
sahf
jae
loopne
mov
inc
into
stc
push
mov
sub
add
mov
jp
loop
insb
sub
bound
in
xchg
sbb
mov
rorl
cmp
shrb
sub
outsl
out
cmp
shl
int3
mov
and
jp
enter
lret
adc
push
lcall
cmp
imul
push
xchg
pop
sti
lods
mov
and
clc
subl
scas
mov
jge
push
insb
jg
adc
and
pop
inc
add
and
test
test
insb
icebp
test
push
mov
cwtl
jb
notl
mov
lea
cmpsl
inc
xchg
adc
call
in
fcmovbe
sahf
cmp
add
dec
inc
fucomip
pop
and
xor
nopl
mov
adc
sub
jo
mov
pop
imul
inc
mov
jno
data16
mov
sub
iret
pop
jbe
divb
adc
lcall
ss
stos
ficoml
inc
cmpsb
arpl
adc
jecxz
add
call
cli
aad
rolb
les
xchg
fs
scas
and
in
nop
pop
push
sbb
inc
test
insb
imul
inc
js
lret
xchg
or
repnz
loop
or
arpl
adc
xchg
bound
and
and
rcl
adc
mov
inc
inc
mov
fisubl
lock
mov
push
xor
addr16
int3
and
movsl
pushf
ret
sbb
mov
ret
iret
and
xchg
xchg
lods
push
push
dec
ss
xor
pop
adc
lods
int3
iret
int
mov
or
ja
repnz
outsb
fstps
pop
mov
mov
aam
push
cmpsl
rcll
xor
push
fstps
pop
mov
lods
outsl
test
inc
jns
dec
mov
and
lcall
add
push
push
icebp
hlt
js
rolb
out
mov
inc
inc
pop
sbb
faddl
loopne
bound
mov
sti
push
dec
dec
sti
push
fisubs
mov
adc
rol
dec
sbb
cli
dec
sub
mov
js
mov
lret
push
aam
adc
mov
dec
aam
jbe
cmp
cltd
dec
push
or
cmc
jecxz
inc
in
xor
jge
cmc
xor
das
cmp
or
and
xor
pushw
jno
fsubl
jo
sub
mov
cld
lret
adc
pusha
or
popf
mov
in
jbe
xor
add
in
inc
push
pop
lds
into
std
mov
incb
xor
stc
lret
subl
cmpsb
push
push
dec
inc
adc
cmp
repnz
inc
movb
fbld
ss
jo
cmp
lods
or
push
xor
xor
cmp
gs
clc
sbb
xor
jno
jae
cmp
pop
inc
xchg
mov
stc
sbb
adc
mov
popf
sub
andb
sbb
and
mov
pop
jbe
cltd
in
mov
aam
stos
sbb
insl
jp
cmpsb
test
xchg
filds
add
inc
in
mov
aam
and
mov
ss
lahf
pop
sbb
mov
aaa
ret
test
xchg
filds
into
pop
sbb
jb
call
loopne
fsubl
cmp
pop
inc
or
push
push
les
shlb
inc
and
xor
out
dec
ja
pop
lret
les
iret
gs
mov
mov
mov
es
outsl
adc
dec
xchg
outsl
xchg
mov
add
push
cmp
lock
fstps
mov
insl
fwait
lock
out
add
dec
sub
jbe
lods
add
mov
lahf
or
push
add
push
sbb
dec
pop
sbb
test
in
scas
or
push
dec
mov
stos
test
repz
into
stos
push
push
lret
push
setae
dec
sub
ja
pop
sbb
loopne
mov
jp
push
push
pop
scas
mov
xor
jge
jge
xchg
loopne
pushf
xchg
mov
ljmp
aas
cmpsb
xchg
push
out
mov
rorl
mul
cmp
mov
xchg
dec
xchg
add
sbb
mov
sub
mov
lret
pop
adc
push
inc
pop
mov
dec
lahf
sub
mov
cmp
scas
fsubl
cmp
hlt
mov
mov
push
in
shr
xlat
dec
xor
jmp
loop
cmp
stos
mov
mov
daa
xor
and
aas
and
adc
xlat
loop
icebp
fcomps
add
mov
add
movsb
pop
cmp
outsb
adc
outsl
ret
cmc
jl
in
xchg
shrl
hlt
inc
shll
sub
add
in
xchg
cmp
insl
in
xor
jbe,pn
in
xlat
addl
jbe
xchg
mov
aam
xchg
aas
fcomps
aam
jg
or
xchg
add
cmp
cmp
push
mov
xchg
or
xor
int
lods
jae
insb
push
clc
mov
repnz
imul
jno,pt
xchg
arpl
out
hlt
in
and
lods
adc
or
inc
and
sbb
pop
cmp
lea
and
jmp
rorb
addr16
xor
movl
ret
push
jne
sti
call
mov
outsb
push
out
and
aas
xchg
or
sub
sti
or
adc
and
aaa
out
and
sbbl
jg
cmp
aam
push
and
movsl
imul
dec
push
sarl
fildl
or
stc
arpl
or
daa
mov
jae
inc
xlat
sbb
cmp
xchg
int3
mov
enter
sub
mov
xor
sbb
sbb
sti
cmpsl
lea
mov
inc
arpl
xor
dec
jg
xor
addb
jg
jo
adc
aad
mov
cmp
jbe
in
iret
inc
outsb
or
sub
sub
adc
jbe
adc
gs
pop
jne
movhps
push
loope
jge
sbb
movsb
and
or
out
ljmp
loopne
pop
push
loop,pn
outsl
rorl
stos
mov
lds
stos
nop
cmp
jecxz
jo
add
xchg
mov
ret
xchg
inc
js
and
push
cmpsl
sub
xchg
or
dec
mov
mov
or
jnp
mov
inc
int
movaps
jmp
push
cmp
out
add
sub
dec
mov
pop
xor
cmp
ret
push
cmp
lahf
push
bound
add
addl
sub
cltd
dec
push
jmp
in
xor
add
andb
add
outsl
pop
leave
pushf
push
pop
mov
pop
lahf
adc
or
data16
movsl
sub
test
push
out
mov
cmpb
adc
or
inc
out
in
hlt
jns
clc
cs
mov
idivl
sbb
mov
xchg
mov
pusha
add
cmp
lea
mov
sbb
mov
scas
cld
mov
mov
xchg
xchg
inc
and
xchg
ss
inc
cs
scas
out
in
leave
sbb
shll
add
push
out
xchg
mov
or
in
cmpsl
jl
sti
repnz
xlat
mov
lret
adc
test
mov
xor
data16
mov
adc
rorl
out
sbb
pop
rcll
sti
xchg
icebp
sbb
loop,pt
negb
negb
xor
push
xchg
aam
dec
scas
inc
cwtl
and
lods
inc
aam
mov
mov
push
scas
les
jb
xchg
sbb
arpl
rorl
pushf
loop
rcr
and
cmpsl
sti
dec
push
pop
and
or
fs
notl
into
bound
inc
push
and
mov
pop
and
dec
dec
scas
es
or
adc
dec
lcall
pop
leave
add
dec
imul
orb
xor
cli
addl
push
cmp
sub
lahf
std
icebp
lcall
sub
outsb
cmp
int
loopne
shl
std
test
fstps
mov
stc
xor
adc
cmc
mov
stos
xchg
dec
fidivrs
fstps
arpl
popa
insl
lret
push
ja
pop
jle
fdivrp
rorb
shlb
pop
xchg
xchg
sbb
arpl
adc
xor
lahf
cmp
add
xor
rcrl
dec
dec
roll
out
mov
mov
addr16
jl
and
push
mov
mov
ss
leave
inc
jecxz
inc
and
movsl
or
sbb
xlat
jo
adc
in
enter
sub
xor
sub
sbb
das
lret
jmp
inc
lods
pop
clc
popa
xchg
push
mov
adc
lea
lret
adc
out
push
movsb
jecxz
sub
push
loope
and
cmp
out
push
bound
mov
mov
mov
or
into
add
sbb
and
sbb
xchg
push
aas
outsb
jge
dec
and
push
les
sub
mov
adc
aam
xor
jne
dec
add
cwtl
xchg
push
fs
push
xchg
std
fs
fcoms
ljmp
repnz
push
sbb
aad
movsb
fcoms
ret
adc
sub
ljmp
adc
xchg
mov
in
xchg
and
das
popf
jno
scas
test
and
es
dec
fldenv
dec
xlat
and
xor
jmp
jp
aaa
in
dec
push
shll
fs
adc
mov
popa
enter
loope
ror
in
pushl
xor
inc
xchg
jmp
jnp
pop
mov
test
or
ljmp
dec
and
mov
roll
cwtl
stos
sbb
out
rclb
cmp
jle
adc
push
andb
mov
cmpsl
andb
mov
scas
sti
xchg
lods
or
and
mov
add
daa
add
bnd
iret
and
cmp
bound
out
cmpsb
aam
mov
test
sub
repnz
nop
adcb
cltd
shlb
rolb
dec
fisttpl
aam
pop
mov
jge
mov
hlt
and
adc
xor
cmp
pusha
in
fldenv
hlt
push
jne
mov
or
lcall
jge
orb
jb
or
jo
push
xchg
es
iret
or
loop
repnz
pop
out
imul
sbb
jge
xchg
dec
pop
dec
call
dec
test
mov
xchg
mov
imul
in
ljmp
jle
push
push
inc
xchg
hlt
add
pop
in
dec
sub
or
leave
in
int3
notl
mov
mov
popa
sbb
lock
mov
cmp
stos
xchg
rcll
inc
mov
xchg
mov
sub
adc
out
push
cld
dec
push
cmp
test
xchg
lods
lods
and
cs
mov
in
outsb
add
xor
ljmp
sbb
lahf
shr
jmp
sbb
out
add
ret
pop
dec
ret
stos
outsl
addr16
dec
jns
movsl
jp
pop
mov
push
rorb
nop
mov
mov
rorb
movsl
fcmovb
add
shll
mov
data16
and
hlt
jne
sub
cld
push
xor
push
mov
push
sub
jns
jmp
lret
push
cli
add
popa
nop
out
xchg
mov
imul
cmp
cmpsl
cwtl
push
iret
push
adc
orl
cwtl
daa
sbb
adc
js
adc
cs
jle
das
loop
and
jno
jle
mov
test
xor
sub
jg
cmp
pusha
cmp
cmp
or
push
fistpll
sahf
mov
in
or
arpl
jo
cwtl
out
xor
mov
xchg
stos
adc
paddd
jno
dec
pusha
stos
fcmovb
dec
mov
nop
sub
add
incl
push
cmp
add
movsl
jp
test
add
add
scas
fs
jp
je
pop
movsl
es
pop
cmp
xchg
out
pop
iret
inc
cmpsl
out
adcl
and
push
inc
sub
shrb
mov
and
fisubrl
sbb
push
std
call
repnz
rolb
jmp
out
jbe
dec
shlb
xchg
cmp
push
in
pushf
es
into
dec
push
aaa
cmp
xchg
test
fsts
sbb
adc
cld
and
xor
cmp
jo
aam
sub
push
sarl
and
mov
jmp
sbb
ret
ds
mov
ljmp
mov
inc
repz
mov
repz
rcrb
in
add
addl
movups
aas
lods
imul
lea
mov
lods
inc
xchg
insl
popa
lods
pop
xchg
test
int3
call
popa
in
cltd
decb
je
adc
mov
std
fs
pop
cli
mov
sub
add
mov
dec
adc
ljmp
mov
shrb
and
sbb
inc
mov
std
cmpxchg
pop
cld
idivl
popa
jl
pop
or
call
ss
push
clc
sbb
ret
xchg
mov
mov
cmp
pop
dec
int3
push
and
mov
cmp
cltd
cmp
loope
adc
jnp
sbb
jnp
mov
aam
dec
hlt
and
dec
inc
mov
and
dec
lahf
adc
jecxz
ss
push
clc
sbb
ret
add
mov
sbb
cmp
cmpsb
pop
outsl
addr16
push
outsl
mov
ret
sets
ret
std
std
ljmp
or
fmull
sti
xor
dec
cs
ds
cmpsl
jns
fildll
xchg
xchg
out
cmp
sub
mov
loop
lods
test
jb
stos
lahf
mov
mov
mov
loope
mov
xor
mov
shl
pop
inc
dec
clc
lods
bnd
ds
jbe
cld
cmp
adc
imul
ret
dec
subb
popa
sbb
dec
pop
push
mov
mov
push
cltd
xor
mov
jnp
xor
and
push
pop
pop
sub
push
imul
sbb
add
xchg
mov
mov
fcmovne
aam
push
add
pop
pop
dec
leave
repz
lret
sbb
xchg
or
mov
or
inc
pop
sbb
push
sarw
sbb
jp
xor
jmp
mov
push
out
xor
mov
cmp
leave
inc
push
jg
test
imul
icebp
incb
dec
jl
sub
ret
arpl
jg
shlb
fsubrs
fsubs
fdivr
and
xchg
cmp
js
xor
cmpsl
ret
xchg
push
cmp
mov
insb
out
insb
fisubrl
push
sub
xchg
orb
ret
jle
loopne
out
sub
lods
add
xchg
jmp
cli
aaa
inc
pop
dec
cmp
rcrb
dec
mov
xor
jge
insb
push
add
push
sbb
jecxz
jae
mov
jp
inc
mov
mov
sarb
pusha
inc
jge
cmp
or
and
mov
push
cli
nop
xchg
xchg
mov
jecxz
sbb
test
ds
out
xchg
pop
xchg
mov
cmp
xchg
cmp
outsl
arpl
or
rorl
test
sub
jp
sbb
addr16
test
mov
jp
ret
call
mov
mov
mov
jl
xorb
add
fwait
iret
cmc
cmp
sbb
aaa
adc
mov
mov
or
mov
mov
push
cmp
repz
insl
ja
push
mov
rep
mov
scas
shrl
fistpll
clc
add
push
addr16
out
pop
divl
push
pop
gs
dec
mov
std
inc
pop
dec
adc
add
xor
fldcw
adc
insl
jcxz
push
push
cmp
xlat
jno
mov
jns
aas
sti
jg
jnp
push
mov
xchg
jns
ret
adcb
xor
aam
shll
lods
xchg
in
das
pop
addr16
inc
add
jmp
mov
and
enter
dec
xor
sti
fsts
cmp
mov
mov
pop
fcomps
adc
or
mov
sarl
jns
xor
ficoml
push
imul
push
inc
out
cmc
jle
jp
scas
sbb
test
jge
aas
sub
jge
dec
push
mov
aas
mov
push
sub
xchg
mov
or
rorl
xchg
jnp
dec
sub
push
out
dec
mov
xchg
mov
inc
dec
cmp
ja
cmc
divl
cmp
xor
andb
ljmp
sub
lret
sub
pop
je
shlb
adc
mov
out
cmc
jle
jp
scas
mov
fisttps
jl
loop
adc
repnz
cmp
int
cmpsb
insl
sub
lods
cmp
push
std
xor
push
mov
cmpsb
inc
popf
mov
call
jge
stc
loope
ja
loop
inc
in
popa
add
enter
xor
insl
ljmp
hlt
cmpl
mov
scas
cmpsb
incb
cltd
pop
test
adc
mov
adc
pop
jae
sbb
sub
out
pop
add
mov
fistpl
or
fstps
mov
and
mov
imul
test
fcomp
shll
pop
in
rorb
lock
outsl
push
xchg
cmp
push
ja
pop
sbbl
in
mov
mov
lea
ret
arpl
std
fldenv
jne
xor
or
add
dec
test
sub
data16
cltd
mov
cmpsl
das
pushf
pop
ret
mov
cmp
sbb
daa
out
notb
insl
or
inc
repnz
fiaddl
jne
inc
stos
cmp
xchg
aad
mov
insl
and
call
pop
sub
hlt
xlat
jb
push
pop
mov
cmp
inc
sub
les
cmc
daa
movsb
mov
jmp
cmpsl
sbb
mov
mov
decl
pop
sbb
inc
push
mov
push
loop
mov
mov
mov
add
fsubrp
dec
loop
dec
jge
inc
sbb
sub
sbb
movsb
xchg
loope
add
pop
pop
mov
inc
clc
add
jl
or
jecxz
and
scas
jp
sbb
cmpsb
mov
sbb
loop
mov
pop
lock
fmull
add
inc
pop
movsb
mov
and
popf
bound
mov
icebp
cmp
pop
sbb
or
mov
scas
jno
loop
adc
enter
push
mov
push
cmp
lcall
arpl
jne
cmp
mov
mov
cld
loop
out
xchg
setb
inc
sub
sub
repnz
fadds
jno
sub
aad
sahf
cmp
or
pop
jmp
cmp
xchg
mov
adc
cwtl
arpl
clc
add
jl
in
xchg
rcrl
mov
or
movsb
stos
adcb
stc
pop
sbb
and
cli
jge
clc
cltd
jp
test
and
xchg
mov
sbb
cltd
inc
lret
inc
xchg
insb
loop
jns
mov
cmpsb
pusha
cmp
divb
out
imul
mov
pop
decb
stos
mov
out
stos
cmpsb
cmp
xchg
fsubr
int
scas
cmpsl
and
in
xchg
push
cmp
xor
negb
mov
sub
movsl
andb
mov
addr16
cmpsl
cmp
add
xor
jle
mov
mov
mov
lahf
imul
mov
mov
daa
test
bound
jle
nop
inc
add
push
or
clc
inc
pop
pusha
adc
dec
roll
add
lds
insl
or
int
cs
insb
pop
sub
jne
dec
adc
dec
js
jle
pushf
or
test
test
lods
cltd
aam
xchg
je
jle
pushf
or
cwtl
call
or
aas
stos
rclb
xchg
xchg
popf
inc
repz
sbb
aad
cmp
mov
or
mov
mov
arpl
and
fistl
pop
xor
rorb
mov
or
inc
lods
out
xchg
xchg
insl
or
lods
in
sbb
pop
pop
enter
cmpsb
lcall
adc
add
xor
jno
pop
inc
fisttps
lock
xor
stos
sub
pop
je
ljmp
cld
dec
mov
call
push
hlt
jmp
jge
mov
pop
rclb
sub
add
cmp
xorb
rcr
pop
xchg
ss
mov
mov
pusha
lds
add
sbb
add
sub
stc
adc
pop
mov
mov
or
fsubrs
mov
pop
out
popf
stos
clc
lods
push
jo
loop
sub
pop
pushf
loope
dec
add
or
jmp
mov
cmp
repz
inc
addr16
jo
xchg
incl
lods
jecxz
mov
cmp
stos
fisttps
imul
push
mov
pop
mov
inc
jmp
loopne
and
js
sbb
roll
and
scas
jae
pop
inc
push
pop
inc
push
test
sub
aas
mov
mov
mov
add
jae
dec
in
jle
outsl
jmp
mov
push
cli
test
jne
test
pusha
inc
inc
mov
pop
jbe
sbb
sub
ja
sub
mov
mov
mov
and
mov
or
mov
int
stos
cmp
and
cmpsl
test
lret
and
or
fdivp
iret
push
cmp
cmp
in
or
add
push
dec
dec
pop
xchg
pop
mov
pop
in
mov
mov
add
adc
loopne
repz
out
push
mov
pop
imul
ljmp
inc
mov
in
xchg
or
inc
adc
sub
out
dec
fmull
stos
jns
and
test
or
add
push
and
insl
add
insl
sub
or
sub
aam
inc
pop
nop
imull
pop
jg
out
mov
and
and
add
and
xchg
sarb
cmp
inc
bnd
xor
pop
inc
cltd
movsb
or
aad
push
cli
das
imul
movsb
outsl
jg
xor
lcall
stc
stos
ret
in
lock
xchg
jl
xchg
pop
and
cmc
xchg
xchg
xchg
jnp
adc
jg
jl
lock
add
fmul
ss
cltd
fldl
orb
mov
xchg
mov
ja
inc
iret
adc
addr16
jnp
add
movsl
imull
sub
mov
fstpl
lahf
push
mov
inc
mov
add
jecxz
imul
rcll
mov
cmp
fists
test
lea
or
xor
imul
fdivr
mov
daa
rclb
and
jno
pushf
pop
aas
lret
outsl
es
inc
sbb
inc
test
insb
imul
pop
addr16
int3
xlat
and
call
imull
jo
adc
add
out
lret
andb
lret
shrl
test
lea
or
mov
ljmp
xlat
out
inc
stos
bound
mul
or
push
cltd
es
jns
cli
add
pop
adc
rolb
imul
addr16
jne
dec
mov
mov
xor
jge
xchg
movsb
cmp
jmp
sti
add
out
cmp
pop
jg
xchg
xchg
xchg
jnp
adc
jg
jbe
in
iret
inc
ss
cld
push
mov
push
mul
or
push
cltd
sub
ss
or
or
lea
adc
pop
fmul
cmp
jae
jns
xchg
sbb
fadds
mov
push
inc
adc
sahf
pop
fs
lds
jl
fs
inc
or
clc
lret
push
mov
bound
or
dec
dec
hlt
xor
fwait
jge
arpl
xchg
or
repz
mov
ss
ficomps
pop
and
cmc
push
or
mov
out
cmpsb
rolb
or
fldl
sub
mov
push
and
mov
add
sbb
pushf
sbb
lds
ja
cli
loope
jo
pop
xchg
push
pop
mov
flds
sub
filds
pop
scas
or
insl
dec
jnp
int
scas
sub
sub
dec
cmpsb
out
loopne
or
adc
sub
xor
push
jmp
mov
mov
inc
or
notb
movsb
js
mov
xchg
cmpsb
int3
dec
gs
in
stc
jns
cmpsl
clc
jbe
adc
lods
mov
movsl
arpl
inc
in
adc
cs
insl
xchg
pop
inc
inc
unpckhps
into
mov
nop
jbe
or
xchg
xchg
pop
divl
cmpsb
adc
test
movsl
add
add
xchg
mov
inc
jmp
lods
adc
out
mov
push
subb
sbb
mov
xor
or
iret
inc
or
xor
stc
xor
pop
sbb
in
movlps
cli
int
mov
lock
repnz
fimuls
daa
sbb
xor
pop
sbb
movsl
mov
cmc
pop
stc
lods
jg
jle
movsb
push
and
stc
out
das
sbb
xor
popf
std
dec
ljmp
inc
inc
dec
sub
scas
mov
ret
add
das
aaa
ret
notl
rep
fsts
inc
cmp
mov
mov
inc
mov
adc
mov
lods
mov
fistpl
xorb
dec
pop
sub
out
xchg
jmp
popa
mov
or
mov
imul
or
and
gs
add
cld
loop
push
movsb
push
adc
pusha
add
mov
push
loop
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
in
es
inc
mov
enter
sub
jmp
push
loopne
push
xor
and
xchg
cld
das
mov
mov
call
neg
aas
sbb
sbb
std
in
inc
inc
and
inc
xchg
pop
and
adc
add
mov
maskmovq
or
jmp
leave
jge
xchg
aad
push
popf
push
adc
xchg
mov
jne
xchg
push
or
sub
or
int
fcomps
rorb
loopne
mov
rclb
es
rcll
into
mov
je
pop
mov
pop
jl
out
loop
jge
xchg
aad
push
dec
js
or
icebp
mov
mov
xchg
aad
push
leave
lahf
push
xor
cmpb
add
popa
xchg
jl
cmp
cmpsb
xchg
in
cmp
jbe
sbb
sbbl
js
xchg
and
jb
cmp
jnp
add
lods
jnp
daa
or
imul
rcr
inc
add
cmp
mov
sub
nop
sbb
mov
movl
cld
mov
divl
dec
idivl
js
sbb
std
xor
dec
lcall
ret
dec
mov
jns
andb
cwtl
inc
shlb
icebp
mov
jle
lock
jno
out
sbb
add
nop
mov
or
das
jecxz
mov
adc
cmp
pop
mov
sbb
hlt
mov
daa
mov
cmp
lods
ljmp
mov
xor
or
je
adc
add
sahf
pop
sbb
rcl
jl
sub
es
add
mov
js
pop
or
jae
dec
mov
arpl
and
clc
jbe
mov
in
js
out
std
negl
ds
mov
fcomip
jecxz
lret
push
jno
xchg
jle
pop
cmp
mov
divl
add
mov
lods
sti
imul
scas
mov
push
fistpll
adc
test
inc
cmp
cmpsl
mov
push
clc
jo
and
addr16
push
mov
xchg
mov
call
in
fdiv
xor
mov
fldl
inc
mov
mov
pop
mov
mov
das
xchg
mov
dec
mov
clc
stos
flds
ret
adc
loopne
xlat
mov
adc
jnp
testb
dec
mov
call
xchg
xchg
mov
and
test
xchg
pop
mov
test
enter
in
mov
cs
mov
cmc
pop
insb
xor
fcmovnbe
sbb
aaa
scas
dec
stc
cli
insb
mov
out
mov
insb
insb
dec
jb
or
inc
jae
mov
lock
jp
jmp
push
push
jl
lods
mov
clc
pop
loope
pusha
js
fs
adc
popa
sub
insb
test
clc
sbb
outsl
mov
mov
ret
imul
adc
sub
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
add
mov
cmp
jge
xchg
aad
push
sub
loop
jge
xchg
aad
push
icebp
out
dec
addb
loop
jge
xchg
aad
push
xor
ficompl
mov
loop
jge
xchg
aad
push
xor
lods
imul
loop
jge
xchg
aad
push
mov
adc
loop
jge
xchg
aad
push
repz
clc
insl
std
cmp
leave
jge
xchg
aad
push
roll
sbb
xchg
aad
push
jbe
jg
xchg
enter
rcll
stos
test
lcall
rcll
cs
push
int3
loop
jge
xchg
aad
push
cmp
mov
loop
jge
xchg
aad
push
xchg
xchg
lret
sbb
loop
jge
xchg
aad
push
into
test
lods
xchg
mov
loop
jge
xchg
aad
push
push
sti
jg
inc
out
leave
jge
xchg
aad
push
pop
pop
jae
mov
loop
jge
xchg
aad
push
sti
push
xchg
or
and
leave
jge
xchg
aad
push
add
push
outsl
mov
leave
jge
xchg
aad
push
mov
inc
xchg
loop
jge
xchg
aad
push
in
fisttpl
or
rcll
out
test
loop
jge
xchg
aad
push
push
ret
jl
mov
xchg
aad
push
repnz
and
loop
jge
xchg
aad
push
sbb
pop
xor
or
rcll
push
xor
loop
jge
xchg
aad
push
std
in
and
leave
jge
xchg
aad
push
pop
cmp
jmp
scas
test
leave
jge
xchg
aad
push
fdivl
int3
loop
jge
xchg
aad
push
sbb
leave
aaa
xchg
push
ret
jge
xchg
aad
push
pop
dec
iret
dec
in
inc
loop
jge
xchg
aad
push
add
rcl
loop
jge
xchg
aad
push
inc
fcoml
loop
jge
xchg
aad
push
or
aaa
mov
xchg
aad
push
sub
int3
and
jge
xchg
aad
push
in
in
out
cmp
jge
xchg
aad
push
mov
popa
push
cmpsb
pop
pop
loop
jge
xchg
aad
push
pop
mov
leave
jge
xchg
aad
push
enter
inc
notl
loop
jge
xchg
aad
push
cmpsl
nop
inc
scas
and
jge
xchg
aad
push
ficompl
loop,pn
jge
xchg
aad
push
push
faddl
loop
jge
xchg
aad
push
and
mov
jge
xchg
aad
push
cmp
cltd
hlt
adc
loop
jge
xchg
aad
push
mov
aam
push
inc
push
loop
jge
xchg
aad
push
xchg
pop
inc
sub
mov
loop
jge
xchg
aad
push
mov
mov
loop
jge
xchg
aad
push
test
loop
jge
xchg
aad
push
pushf
or
loop
jge
xchg
aad
push
sbb
int
loop
jge
xchg
aad
push
lret
test
mov
rcll
adc
sbb
loop
jge
xchg
aad
push
mov
pop
dec
loop
jge
xchg
aad
push
stos
push
mov
leave
jge
xchg
aad
push
mov
sahf
inc
add
rcll
sub
pusha
lret
xchg
loop
jge
xchg
aad
push
in
and
repz
jge
xchg
aad
push
ret
add
enter
loop
jge
xchg
aad
push
leave
jecxz
aad
dec
jb
leave
jge
xchg
aad
push
fdivrs
jo
push
jle
loop
jge
xchg
aad
push
out
mov
fstl
jge
xchg
aad
push
fisubs
fdivl
add
jge
xchg
aad
push
mov
loop
jge
xchg
aad
push
repz
or
push
aaa
push
cmp
or
sarb
pop
mov
ljmp
loopne
mov
dec
cmp
xchg
lahf
outsl
add
fadd
jle
rcrl
into
inc
jecxz
jge
sub
jno
xchg
cmp
adc
rcl
ret
mov
sti
pop
jbe
sub
dec
mov
pop
inc
pusha
aad
popf
jecxz
and
and
sub
mov
fdivrs
mov
push
lret
gs
mov
jae
mov
cmp
add
mov
adc
pop
pop
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
mov
scas
out
fsts
rcll
xchg
push
push
sbb
mov
pop
sub
cmp
faddl
pop
out
sysret
fldl
sbb
xor
fdivrs
shlb
ljmp
push
movsl
je
pushf
cmp
jge
pop
jmp
addb
daa
stos
sbb
jb
ds
lods
sub
js
cmp
xchg
or
xchg
scas
dec
lea
fstpt
push
decb
push
inc
adc
pop
sbb
roll
pop
shr
pushf
shlb
shlb
aaa
stos
pop
cmpsl
in
ret
stos
cmpsl
sti
js
jmp
rcll
lahf
jle
mov
mov
jg
int3
inc
xor
cmc
outsl
rcrb
push
int3
lret
mov
outsb
shll
mov
adc
jecxz
mov
loop
pop
xchg
dec
xchg
insb
arpl
xor
lcall
popa
mov
test
test
xor
movsl
mov
into
jne
or
sbb
sbb
xor
icebp
sub
lods
jnp
pop
hlt
lcall
idivb
push
push
adc
dec
das
mov
lret
inc
test
dec
scas
mov
mov
fs
xchg
jae
lahf
and
push
mov
push
mov
mov
outsb
jne
lds
lds
mov
shll
addr16
or
adc
arpl
xor
mov
push
out
inc
xchg
aas
int3
jae
mov
adc
das
push
lret
int
jb
push
cmp
jge
nop
clc
fdivs
mov
jno
xor
cmp
ficomps
cwtl
inc
jb
sub
insl
jnp
mov
movb
imul
mov
cmpsl
cltd
jb
pop
aas
fcmovne
mov
negl
push
ret
movsb
mov
in
cld
or
decb
or
fwait
inc
push
pushf
lret
in
cmpl
push
subl
loopne
sarb
pop
inc
push
iret
pop
push
nop
loopne
mov
mov
jg
inc
xor
loopne
jge
cmpsl
jbe
mov
test
sub
pusha
nop
test
pop
clc
xchg
test
shl
clc
ja
jmp
jge
mov
int3
dec
pop
test
rcrl
insb
lds
sub
test
outsl
aam
jg
pop
xor
ds
sub
loope
faddl
adc
xchg
stos
loope
jbe
xchg
add
arpl
ja
adc
aad
pusha
xor
fwait
popf
shll
lahf
in
pop
movsb
mov
repnz
add
or
add
dec
push
sub
icebp
inc
hlt
lods
lea
sub
dec
jp
dec
das
adc
aas
push
and
aam
cmpsb
mov
into
neg
leave
push
in
pushf
loopne
mov
cs
add
xchg
jp
inc
xchg
clc
ljmp
inc
xlat
aas
xor
out
jo
and
rcl
sbb
jnp
pop
inc
inc
fisttpll
pop
sbb
adc
daa
mov
pop
jbe
pop
mov
scas
sbb
pop
xchg
shr
ds
lahf
push
jno
or
out
sbb
dec
cmp
lods
test
push
movsb
or
insl
sti
push
cmp
lods
xchg
xchg
xchg
mov
cli
adc
cmp
jecxz
shl
pusha
test
lods
push
movsl
out
lret
and
or
xlat
mov
inc
in
dec
fcompl
jge
cli
repz
rcpps
pushw
test
adc
scas
scas
in
add
clc
mov
push
jp
mov
push
and
add
int3
ret
inc
shll
cmpb
jbe
scas
ja
xchg
ja
aam
inc
push
inc
or
lcall
xchg
out
pop
mov
cmp
cwtl
cld
test
xchg
pop
insl
sub
dec
push
jae
xor
mov
fwait
xchg
push
sub
aaa
dec
pop
mov
and
or
sbb
test
mov
cmp
ja
loope
fdivrs
cmp
pop
ss
sti
inc
sahf
jns
fcomp
cli
dec
and
pop
pminub
push
pmullw
popa
pop
inc
or
sbb
es
sbb
or
and
mov
jl
pop
xor
inc
jmp
std
iret
inc
mov
loope
into
mov
lods
repnz
iret
cmp
jge
or
mov
and
xor
stos
mov
mov
setnp
outsb
pop
test
push
hlt
cmp
test
xor
pop
adc
notb
add
mov
mov
or
xor
jb
inc
xlat
test
push
xchg
in
cmovnp
xchg
rcrb
sti
nop
cmpsl
push
pusha
mov
fstl
rclb
inc
ljmp
mov
mov
adc
popf
negb
repnz
xor
mov
xchg
mull
test
popf
cltd
jns
dec
repnz
bnd
lret
jb
repz
test
push
fidivl
inc
mov
outsb
dec
xchg
adcl
cmp
test
inc
jne
ret
out
mulb
mov
lahf
aad
call
fidivrs
xchg
cld
outsl
push
inc
and
and
cmp
mov
sbb
push
gs
out
xor
push
ficoms
inc
filds
or
or
pop
push
out
xor
fwait
sub
inc
mov
loope
xor
add
cmpsl
mov
mov
mov
pop
ja
sub
cmp
mov
sbb
test
push
test
clc
mov
js
mov
int
mov
pop
test
sub
lds
popa
shll
fsts
sub
lock
jle
mov
dec
cwtl
sbb
repz
popa
sbb
pop
cwtl
lcall
les
int3
dec
adc
sub
mov
out
cmp
push
iret
data16
xor
rcll
xchg
lret
cli
sbb
cld
mov
std
cmpsb
mov
fdivs
out
push
scas
or
outsb
jno
dec
les
xchg
in
fnstsw
cld
les
mov
push
mov
sbb
arpl
dec
xchg
xchg
sarb
fcomps
das
xor
xchg
cli
inc
loope
inc
loope
pslld
lcall
imul
icebp
xchg
mov
jg
mov
rol
pop
es
mov
rclb
nop
cmp
and
mov
mov
ret
xchg
xlat
xorb
test
in
in
and
or
and
push
mov
scas
add
mov
xchg
adc
test
bound
mov
xor
cmp
movsl
gs
int
or
xchg
push
jo
out
push
aam
gs
cmpsl
loop
jp
inc
jae
aas
into
scas
push
mov
test
jbe
lds
fbstp
mov
pushf
push
push
fwait
int
mov
fyl2xp1
cli
push
sahf
mov
dec
push
xchg
xchg
sub
div
sbb
mov
dec
sbb
and
sbb
gs
pop
nop
xor
out
xchg
data16
sub
push
add
cmp
fbstp
push
and
adc
xchg
insl
cmp
scas
push
iret
aad
sub
jae
push
sahf
sub
pushf
add
das
inc
mov
inc
dec
js
lock
push
sub
xchg
sbb
notl
push
data16
roll
push
std
or
mov
inc
popa
cmpsb
mov
xchg
jmp
das
jbe
inc
pop
xor
dec
pop
cmp
fisttpl
clc
lock
sti
or
dec
ja
mov
popf
imul
mov
or
pop
outsb
dec
subb
sub
cmp
sti
push
sub
call
lods
sub
fnsave
imul
insb
sub
idivl
arpl
test
jne
mov
push
cmp
pusha
mov
into
cmpsl
sub
es
rcrb
cmc
daa
nop
mov
xor
sbb
je
sbb
cwtl
stos
xor
mov
movsb
sbb
inc
addb
pop
cmp
aam
cmp
sub
pop
push
jl
jmp
mov
mov
rclb
stos
test
adc
faddl
cmc
aam
lret
sub
mov
scas
adc
scas
test
and
dec
mov
push
mov
int3
sub
fimull
out
or
and
mov
adc
dec
sub
add
bound
mov
mov
nop
jl
int
mov
mov
lret
mov
scas
stos
test
lret
insb
inc
imul
outsl
sbb
jbe
jne
and
jno
inc
lcall
mov
mov
rcrb
jbe
lss
mov
cvtps2pd
jno
popf
fidivrs
out
push
mov
sahf
xchg
test
addr16
pop
push
and
in
sub
xchg
ret
frstor
cmp
jne
mov
ljmp
xchg
jne
ja
sbb
xlat
ds
adc
lods
sub
dec
icebp
aad
outsl
jg
or
mov
mov
mov
inc
mov
or
ja
int3
sub
shll
gs
xor
shll
dec
negl
mov
inc
inc
cmp
test
lock
jl
mov
and
dec
jbe
xor
inc
inc
dec
cli
pushf
cli
dec
add
int3
mov
cmpsl
inc
xchg
repnz
jae
pop
pop
or
das
mov
adc
aad
pop
xchg
test
jle
inc
jne
or
jnp
arpl
mov
mov
jge
jl
dec
pushl
jbe
adc
int
push
mov
push
sub
sbb
div
cmp
bound
lods
loop
movsb
test
imul
add
cmp
in
add
jnp,pt
rorl
rolb
hlt
mov
pop
xchg
and
mov
enter
sub
ret
add
jae
xchg
out
or
adc
std
nop
in
adc
nop
loop
xchg
movb
mov
or
and
adc
or
push
ds
clc
movsb
inc
mov
or
xchg
sbb
cltd
jecxz
xchg
mov
andb
jmp
jae
js
rcrb
imul
mov
fiadds
popf
cmp
jae
dec
ds
out
or
xor
call
inc
xor
les
or
sbb
cmp
adc
xor
cmpsl
incl
mov
mov
lea
sti
mov
mov
andl
mov
addr16
push
fsubs
gs
mov
fucom
imul
and
out
je
xlat
adc
shll
leave
adc
cmp
out
xchg
dec
in
sub
dec
repnz
leave
push
inc
ss
and
sub
mov
xor
fsubrs
mov
mov
jb
pop
dec
aam
insl
push
mov
in
jl
rcll
push
adc
cmp
popf
dec
and
popa
jle
scas
xor
xchg
lahf
pushf
mov
or
xchg
xor
or
add
xor
jmp
cmc
das
ud0
add
cmpsb
mov
popf
mov
adc
cmpsb
inc
test
jae
std
js
ds
nop
dec
sti
mov
pop
push
mov
push
movsb
mul
lahf
mov
sub
mov
out
mov
add
jne
aas
sti
cld
shlb
cmpsb
dec
jp
jmp
jg
add
mov
call
decl
call
or
jnp
iret
aas
xchg
test
or
adcb
cmp
add
ret
test
dec
ret
fidivrs
mov
and
imul
mov
and
hlt
and
lahf
cmp
out
mov
dec
or
mov
sbb
adc
movsb
and
pop
push
mov
clc
adcl
out
popf
ret
idivb
leave
shll
pop
sti
cmovg
mov
and
xchg
sahf
jo
bound
xlat
js
cld
movsb
test
stos
loop
std
ret
xchg
inc
pop
mov
mov
popf
xor
pop
mov
push
jae
cmpsl
mov
leave
or
mov
enter
shlb
jnp
outsb
fmul
jno
test
mov
pusha
idivb
jnp
repz
mov
out
pushf
sbb
push
dec
mov
stos
cmp
jle
loope
leave
cmp
mov
jmp
rol
test
xchg
cmp
into
sub
insb
jecxz
mov
mov
into
repnz
popa
aas
ret
rol
inc
inc
pop
ja
mov
movsl
lds
ficoms
outsl
cmp
ficoml
iret
inc
int
aam
nop
or
push
xchg
push
pop
arpl
pushf
lcall
push
movsb
xchg
in
pop
leave
xor
stos
mov
test
fnstenv
dec
inc
scas
bound
dec
pop
pop
and
add
xor
mov
pop
push
shlb
in
ss
insl
loopne
cmp
mov
int3
cmp
sbb
out
ficoms
aam
mov
fs
fdecstp
lock
cmc
xor
dec
inc
dec
pop
cmp
xor
setg
sbb
ficoms
in
icebp
insl
cmp
push
inc
pushf
mov
mov
and
test
push
insb
out
testb
scas
adc
in
rcll
mov
pop
aas
mov
aad
in
add
add
xor
sub
push
xchg
sbb
add
mov
or
loopne
cmc
sub
loop
nop
out
data16
sete
movsl
mov
rcll
ret
jo
jge
add
popf
lahf
sub
jmp
sub
ja
mov
pusha
cmp
bound
and
lock
cli
xor
mov
jns
adc
ss
sbb
insb
adc
addb
mov
nop
xchg
shlb
scas
mov
packuswb
or
and
mov
push
jae
pop
mov
push
cltd
or
stos
jge
je
jle
mov
jno
adc
scas
fdivs
mov
and
insb
xor
pop
push
int
jmp
mov
mov
repz
jae
aam
out
dec
mov
lods
push
andl
int
clc
outsb
xorl
mov
mov
mov
movsl
lret
jl
fwait
xor
cmc
inc
xchg
lahf
mov
popa
jmp
pusha
std
gs
and
and
stos
pushf
inc
decb
aas
or
test
dec
out
pop
mov
xor
inc
hlt
push
cmp
bound
sub
lds
mov
or
mov
xchg
ret
and
test
xchg
push
pop
out
dec
sub
dec
ja
in
mov
fists
pop
or
and
test
inc
mov
fcoml
adc
sbb
loop
pop
loopne
outsl
cld
mov
dec
cltd
add
mov
ret
or
xor
jnp
bound
add
jb
push
dec
dec
push
push
inc
imul
out
pusha
rcrb
sub
pop
dec
xchg
xchg
inc
sbb
dec
aas
jo
sub
hlt
ja
pop
xchg
mov
or
lock
sub
stos
and
mov
fldl
iret
xor
or
push
push
dec
cld
orb
ficoml
test
ljmp
aam
xchg
xor
push
cmp
sbb
fmuls
mov
and
mov
add
mov
xchg
or
adc
cs
sbb
fcmovnu
inc
fsubrl
fisubrs
jae
push
sbb
mov
ljmp
shlb
pmuludq
and
cmp
sbb
inc
in
push
or
cmp
dec
push
mov
rcr
shl
loope
xchg
inc
and
add
imul
or
cmpl
dec
or
int3
inc
mov
jns
xchg
ffreep
repnz
pop
cmpsb
ret
lret
dec
sbb
insl
lret
out
gs
pop
shlb
insb
push
test
ljmp
ljmp
sahf
push
decb
loope
jae
aam
cwtl
push
jbe
dec
sub
clc
popf
or
enter
push
popf
xchg
cmp
loop
sti
mov
jns,pn
push
push
jns
imul
outsl
mov
cmc
dec
imul
adc
jmp
lds
jmp
xchg
mov
sbb
or
jne
mov
rclb
fdivs
cmp
pop
fcmovbe
subb
fcmovu
push
push
bound
out
jbe
aad
or
js
call
and
dec
mov
sub
and
ret
pop
aad
andl
shrb
mov
ret
add
pop
xchg
jle
push
sbb
cmp
push
sbb
mov
and
test
pop
sub
and
aam
fcompl
push
arpl
roll
add
mov
jo
ret
call
mov
mov
lahf
mov
imul
inc
push
subl
mov
xchg
push
adc
nop
call
leave
jno
dec
push
xchg
inc
bound
dec
inc
fisttpl
mov
scas
mov
mov
push
fisttpl
push
aas
sbb
insb
lds
dec
sub
out
xchg
subb
add
add
mov
pop
frstor
idivl
aam
jecxz
out
ret
lahf
add
insl
outsl
les
add
lock
add
or
insb
lods
mov
cmp
test
popf
scas
popl
ljmp
mov
cmc
mov
cmc
cltd
inc
cmc
sub
lret
lds
cmp
pop
stc
stos
jmp
js
aas
push
and
jbe
dec
jae
in
in
pusha
pop
gs
or
loopne
std
in
cwtl
stos
aaa
push
popa
fs
cltd
inc
mov
fs
pop
pop
in
sub
mov
adc
bound
out
adc
out
sbb
negl
mov
ss
sbb
shrb
xorb
jle
or
sub
mov
scas
stc
dec
fs
and
jg
cmp
xchg
push
add
je
cmp
daa
jns
sub
int3
xchg
mov
jp
dec
jbe
imul
pop
fisttpll
dec
xchg
outsl
push
mov
cwtl
and
enter
nop
insb
push
xchg
lods
mov
sub
dec
rorb
jl
fwait
jle
mov
cltd
out
mov
adc
idivb
push
jle
pushf
icebp
cmp
push
int
or
mov
xchg
cld
rorl
popa
push
cli
addl
or
data16
mov
loope
test
inc
flds
mov
xchg
or
test
jg
mov
cmp
int
cmp
mov
and
push
stos
enter
or
add
dec
addb
xchg
cld
int3
xchg
bound
fst
gs
call
or
push
or
scas
dec
div
jp
inc
jns
mov
arpl
push
aaa
pop
pusha
and
or
call
add
int3
jbe
mov
sub
bound
movsb
push
jae
incb
jne
cmp
push
rclb
mov
lods
pop
das
mov
dec
jp
das
in
std
lretw
push
inc
sub
stc
mov
ss
push
imul
aaa
mov
inc
sub
mov
mov
in
fadds
in
fs
enter
stos
cli
pop
jae
fscale
int
jp
fsubl
xchg
hlt
xor
inc
outsl
fidivrl
xchg
push
and
sarl
ds
and
xchg
ss
aas
dec
push
je
cmovle
push
or
cmp
iret
jge
or
cwtl
in
mov
nop
inc
js
enter
std
out
xor
mov
movsl
push
or
mov
or
xor
in
in
cs
sub
mov
loope
jbe
outsl
cmc
fistpl
pop
rcll
mov
aad
or
push
insl
adc
stos
push
push
aaa
outsl
fstpt
mov
jae
xchg
sbbb
mov
and
mov
lock
cltd
sbb
dec
jmp
fs
test
ret
pop
add
rcrl
xlat
lret
dec
mov
lahf
push
rorb
movsl
jbe
mov
sbb
rcll
push
inc
lahf
ds
icebp
cmpsl
leave
inc
jbe
test
add
xlat
repz
fldl2t
mov
int3
cli
xor
jle
dec
in
jns
xchg
jecxz
mov
mov
pop
xor
shrb
dec
fldenv
lret
out
xor
lea
fsub
int
jno
and
push
out
mov
ret
jne
cmp
lahf
xchg
lret
rclb
frstor
inc
scas
rcrl
sbb
push
loopne
into
mov
jecxz
aas
in
cld
popf
test
sub
lcall
movsl
bound
sbb
in
sub
data16
jae
outsl
imul
mov
lcall
roll
sbb
sbb
jne
mov
or
pop
cli
mov
adc
xor
adcb
pop
mov
jg
aad
fildl
inc
flds
movl
add
in
rol
aam
mov
lods
and
dec
and
iret
xor
notl
cmp
negb
addb
adc
ljmp
in
and
mov
lea
das
dec
cmc
add
xor
aas
fwait
jns
inc
ret
testb
ds
inc
mov
out
clc
xor
xor
sbb
cltd
add
sbb
jle
push
inc
loop
aas
mov
xor
mov
push
xor
arpl
dec
inc
inc
add
out
dec
mov
or
cmp
cmp
imulb
or
sbb
pop
dec
xor
xchg
cmp
pop
jmp
fsts
loopne
add
xchg
xor
push
mov
arpl
push
addps
inc
ds
cli
adc
fmuls
sbb
xor
and
add
pop
cwtl
push
and
popa
les
repnz
mov
rcll
jle
jle
add
or
insb
mov
fwait
pop
mov
pop
das
popa
sub
mov
outsl
or
adc
inc
popf
jbe
in
xor
pop
xchg
out
mov
test
cmp
arpl
mov
cs
push
mov
dec
adc
sub
test
in
xchg
mov
leave
test
mov
les
cmp
lret
fmul
pusha
fs
mov
das
adc
ja
ficoml
push
add
mov
mov
xor
fiadds
scas
mov
adc
inc
mov
adc
jno
psllq
cmpsb
cmp
fs
in
and
leave
xorb
stos
adc
jge
adc
dec
sub
xchg
pusha
aam
and
hlt
imul
sti
lcall
mov
jnp
pop
inc
xchg
cwtl
out
mov
pushf
dec
xchg
aas
insl
int3
inc
and
or
lcall
lods
dec
mov
movsl
ss
insl
push
cmpsl
fsts
out
pop
or
sbb
fdivrs
xchg
insl
push
lods
pop
xchg
push
dec
pushf
dec
es
repz
dec
sbb
pusha
loope
dec
mov
adc
pop
fwait
jb
and
test
inc
fistpl
xor
movsb
mov
outsb
pop
cmc
jp
add
dec
mov
icebp
repnz
test
out
out
xchg
fisttpl
mov
cld
cwtl
xor
cmc
sbb
mov
inc
mov
outsl
sbb
mov
ds
arpl
add
lds
orb
pop
into
jp
pop
adcl
mov
bound
mov
mov
mov
sbb
aam
dec
jp
ret
dec
push
jp
xor
inc
sbb
mov
lea
aas
sub
lahf
lret
or
iret
mov
mov
lea
sbb
or
mov
aas
xor
mov
imul
xchg
jno
adc
stc
jne
mov
dec
daa
mov
popa
mov
and
xor
gs
mov
fisubrl
loop
js
dec
sub
lcall
push
mov
addr16
push
cmp
and
repnz
sti
xchg
lahf
mov
add
xchg
outsb
add
cltd
cs
sub
xor
shll
insl
lahf
lock
sbbb
push
ficoms
imul
xchg
push
adc
sub
cltd
adcb
mov
adc
xchg
aam
mov
push
mov
jns
push
insl
test
cmp
or
fnstsw
inc
popa
sub
jecxz
mov
std
test
push
dec
mov
mov
es
pop
xchg
adc
fwait
iret
ret
lret
xor
add
sub
jmp
dec
lds
xor
pop
cld
adc
fcmovb
xchg
and
clc
stc
cmpsl
movsb
outsb
cmp
sbb
test
lcall
sub
jge
push
cli
inc
inc
int
iret
data16
aas
stc
dec
add
sub
lcall
in
hlt
je
ret
jb
jo
aaa
dec
jno
bound
or
inc
dec
ss
cmp
and
cmpsb
es
inc
and
jns
test
inc
xchg
dec
and
or
mov
pop
and
sbb
pop
inc
push
inc
sub
push
jnp
into
repnz
pop
sub
sbb
outsl
movsb
cli
ret
adc
inc
insl
out
xchg
icebp
scas
mov
and
or
mov
iret
cld
cmp
dec
xchg
xchg
push
in
iret
idiv
inc
jnp
sub
cmp
jge
and
stc
add
jb
dec
fsubr
enter
jns
sbb
xchg
nop
shll
jne
xor
mov
nop
shlb
push
inc
push
fldl
mov
jecxz
xchg
aaa
cmp
mov
insb
stc
call
push
dec
loop
cmp
pop
adc
inc
push
in
xor
jno
cwtl
dec
adc
xchg
and
ss
scas
ficompl
cmp
pop
sbb
sbb
ss
call
adc
adc
adc
push
cmp
cmp
xor
cmp
push
lcall
call
mov
dec
enter
loopne
jnp
sub
jl
pusha
xchg
or
mov
dec
mov
lea
cmpsb
pop
stc
cltd
mov
dec
sub
cli
sub
xor
add
mov
sbb
pop
loop
xor
xchg
sahf
movsb
outsl
lds
repnz
flds
enter
push
mov
lods
scas
mov
mov
dec
push
aam
lods
pop
sub
pop
dec
cmp
shr
pop
outsb
rcrb
roll
sub
xor
xchg
pushf
out
movsl
adc
or
inc
lret
cmc
adc
bound
mov
add
fmulp
push
jne
mov
sbb
xor
js
jp
inc
jle
push
push
xchg
xor
out
loopne
sbb
dec
sbb
push
pop
popf
mov
mov
dec
pusha
xchg
add
mov
ret
sub
mov
dec
ja
cmp
stc
mov
repnz
adc
in
lea
scas
dec
out
mov
add
cmpsb
mov
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
leave
jge
xchg
aad
push
add
cmp
push
dec
push
insb
dec
cmp
xor
imul
add
add
adcb
add
add
add
inc
add
and
incl
inc
add
fdivl
inc
and
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
arpl
add
add
add
add
sbb
xor
add
add
add
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
shlb
shlb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
add
add
fwait
add
imul
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
cltd
add
jb
insl
jo
add
add
add
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
roll
inc
imul
outsl
ja
add
add
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
add
add
pusha
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
xor
cs
insb
add
add
inc
mov
add
add
add
add
add
sub
add
pop
add
adcb
add
mov
add
inc
mov
add
add
add
add
add
inc
add
addb
add
inc
mov
add
add
add
or
add
add
inc
mov
add
add
add
mov
add
addb
add
inc
mov
add
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
jo
add
add
add
jae
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
ja
ja
ja
ja
jo
add
add
add
ja
ja
ja
ja
add
pop
jo
add
add
or
jo
or
jo
add
add
mov
jo
or
jo
add
add
mov
jo
ja
mov
pop
jo
add
add
mov
jo
or
jo
add
or
ja
jo
or
jo
add
mov
add
add
or
jo
add
orb
mov
add
mov
mov
jo
or
add
add
add
or
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
addb
lock
decl
pop
jo
xor
lock
decl
pop
jo
xor
lock
decl
add
add
add
add
decl
pop
jo
add
xor
decl
pop
jo
add
xor
decl
add
add
add
add
add
decl
pop
jo
add
add
cmp
decl
pop
jo
add
add
cmp
decl
add
clc
add
push
add
jmp
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
pop
addb
pop
addb
jg
add
jg
add
incl
add
inc
add
incl
add
add
add
and
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
xor
aaa
add
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
add
add
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
