lcall
sub
jl
add
push
fimuls
pop
fs
aad
pop
pop
leave
ret
pop
add
pop
pop
jle
out
in
pop
ret
inc
adc
adc
and
dec
pop
pop
jne
out
xlat
or
ret
xor
and
nop
mov
and
mov
dec
inc
ljmp
and
inc
adc
and
adc
inc
and
pop
stc
lahf
notb
or
and
mov
add
iret
testb
and
dec
and
inc
cmpb
nop
inc
pop
adc
cmp
mov
stc
into
insb
push
inc
inc
push
cmpsl
nop
rclb
or
lods
mov
cwtl
cltd
fldenv
dec
sbb
dec
pop
mov
in
and
inc
and
inc
add
fwait
jge
and
and
cmp
insb
shl
and
ss
inc
pop
nop
test
inc
dec
push
cmpsl
sub
movsb
mov
nop
dec
test
or
pop
push
mov
stos
pusha
add
and
cmpb
mov
and
adc
and
ror
dec
inc
xchg
cmp
test
fisubl
test
dec
inc
mov
add
mov
add
mov
or
xor
imul
adc
cltd
shrl
cmp
pusha
or
lock
aad
data16
inc
or
and
adc
in
adc
jg
mov
mov
and
nop
inc
inc
adcb
adc
and
fistpll
inc
add
dec
mov
dec
add
es
cmp
mov
add
and
dec
mov
add
xor
inc
adc
ds
xor
lcall
and
adc
adc
orb
insl
mov
fisubl
and
pop
addb
nop
adc
and
data16
notb
inc
inc
mov
inc
rclb
adc
bound
pop
mov
xchg
fmuls
movsb
adc
and
inc
adc
adc
add
cmpb
add
and
outsl
add
add
cmp
cmpb
and
nop
data16
mov
mov
insb
out
push
cmpsb
jb
call
add
jb
adc
inc
inc
adc
or
or
insb
and
js
ret
add
inc
xor
push
adc
jl
stos
rolb
push
pusha
jp
inc
adc
and
add
dec
xor
je
stos
dec
out
and
xlat
add
dec
and
xchg
or
and
and
xchg
cmp
pop
shr
lock
adc
inc
mov
nop
adc
adc
inc
and
cmp
inc
test
or
adcb
xor
push
jb
popa
push
xchg
js
sbb
adc
fwait
mov
xor
mov
dec
addl
dec
shrb
sarl
scas
sbb
xorl
push
dec
cld
or
mov
jl
in
cli
enter
or
call
clc
dec
loopne
jbe
pop
and
cs
fcompl
loopne
movsb
inc
pop
sbb
xor
sub
cmp
int3
lods
sub
push
js
inc
lock
inc
pusha
pop
mov
int3
outsb
adc
adc
jb
xor
cmp
cmp
sbb
xor
push
es
jl
and
sbb
stos
mov
xor
push
pop
inc
xor
mov
add
add
sbb
lcall
and
ret
add
pusha
and
cmp
test
out
xor
push
mov
subb
pop
stc
pop
push
mov
add
movl
inc
add
jne
mov
xchg
inc
add
out
sahf
cmpsl
xchg
stos
adc
jge
jg
sti
out
xlat
outsb
dec
xor
rorl
sbb
dec
or
fadds
pop
fldcw
add
mov
cltd
ss
jbe
divl
mov
ja
loope
je
cmp
lods
inc
cmp
add
decw
xor
mov
mov
shrl
out
jg
pop
xor
ljmp
mov
sbb
mov
sbb
jmp
lret
push
es
add
pop
into
call
cmp
out
sahf
lods
pop
add
push
xor
rorl
loopne
pop
call
inc
adc
out
cs
in
or
mov
cmp
mov
xorl
inc
pop
in
sbb
fcoml
scas
jle
xor
add
xlat
int
in
xor
lret
mov
addl
mov
xchg
cld
pop
dec
mov
andb
jge
das
mov
cmpb
sub
adc
push
divb
cwtl
push
sub
pop
daa
cmp
xor
pop
add
call
sahf
cmp
inc
add
sbb
rcrl
repnz
lods
icebp
or
and
push
sahf
stc
add
in
mov
lret
adcl
or
je
mov
sbb
adc
les
dec
mov
fld
mov
add
mov
cli
out
and
dec
adc
cmpsl
or
sti
enter
cli
pushl
push
hlt
push
call
xchg
data16
rorb
insb
or
adc
xchg
dec
sbb
sbb
inc
dec
sbb
addr16
ja
and
pop
cmp
fdivl
lahf
mov
call
sahf
lock
int3
sub
add
cmp
lods
inc
xchg
pop
or
je
mov
fidivl
add
dec
not
fisttps
cmp
ss
sub
pop
push
add
jg
mov
clc
call
jb
sub
out
adc
cmpsl
or
add
mov
inc
sbb
rcrb
xchg
das
imul
jno
and
pop
cmp
movsl
testl
add
fs
inc
popa
xor
xor
jle
pop
flds
fs
aaa
movsb
js
cmp
and
xor
hlt
cltd
sub
add
xlat
or
pop
and
enter
lret
jmp
push
inc
add
xchg
in
push
sub
sbb
inc
xor
movl
not
neg
add
insb
inc
aas
adc
cmp
cmpsl
loope
mov
fldenv
repnz
mov
lret
rorb
push
lcall
pop
add
roll
add
out
into
or
xor
aam
dec
clc
push
lea
push
lock
mov
call
hlt
es
push
push
clc
pop
push
dec
add
fcmovne
scas
push
push
xor
mov
sub
fildl
in
adc
das
mov
lcall
call
repz
jl
neg
inc
ret
jge
dec
aam
pusha
add
shrl
sub
bound
scas
daa
adc
adc
mov
xchg
inc
fimuls
flds
rclb
mov
std
xor
add
and
add
lock
jmp
repz
or
inc
xchg
js
sbb
xor
repz
mov
add
ds
mov
mov
inc
jno
cli
mov
cs
sub
call
into
subb
lahf
inc
cmpsl
div
mov
das
fs
hlt
xor
fwait
sbb
mov
pop
xor
inc
add
pop
cmc
out
inc
xor
mov
neg
popf
ds
inc
adc
adc
xor
pop
inc
aaa
or
movsl
sbb
loopne
popf
mov
pop
cmova
adc
mov
es
ss
mov
sub
aaa
neg
mulb
xor
push
and
pop
adc
add
cpuid
rorb
daa
test
in
into
jbe
popl
push
adc
sub
insb
cmp
mov
push
addr16
insb
xchg
es
jb
mov
pop
and
jmp
jns
ror
pop
pop
xor
push
xor
clc
mov
inc
sbb
neg
mov
sbb
test
mov
sub
shrl
pop
imul
pop
fdivl
sbb
scas
adc
cli
addl
jae
insl
ret
dec
ret
and
sbb
jb
fistpl
jo
jge
lea
inc
inc
addr16
and
mov
mov
xchg
and
xadd
shll
sbb
je
or
sub
sub
subl
addl
ffree
testl
add
push
pop
outsl
clc
es
dec
xor
sbb
in
mov
outsl
lea
add
fiaddl
leave
sub
ja
std
add
jmp
mov
inc
enter
xchg
frstor
hlt
adc
enter
pop
dec
mov
lcall
lods
lock
divb
inc
mov
ficomps
icebp
int
add
inc
jmp
and
inc
adc
xor
rclb
adcb
iret
stos
sbb
out
or
test
add
push
sbb
inc
jno
es
insb
jg
pop
pop
movsl
jge
add
jne
daa
popf
jo
adc
inc
je
push
cmp
push
inc
call
adc
or
or
inc
cmp
push
insl
push
cmp
jmp
mov
test
push
test
sbbb
add
pop
testb
jle
mov
sarb
pshufw
or
dec
cli
push
icebp
int3
add
outsb
rolb
inc
inc
xor
and
cmp
mov
pop
inc
std
rolb
data16
loop
or
push
mov
js
xlat
ljmp
test
push
fiaddl
add
fmuls
pop
push
adcb
insl
jmp
pop
or
call
testb
clc
xchg
subb
sbb
inc
jns
ret
scas
bound
fmuls
xchg
xor
add
xor
mov
mov
adc
test
and
ror
xchg
shlb
mov
cmpsl
jge
fbstp
stos
out
or
and
fistl
jns
add
imul
jg
add
js
loop
jne
gs
mov
xor
push
sbb
rcrb
mov
sub
pop
or
add
lods
mov
mov
scas
addr16
xor
push
fsubrp
cs
mov
adc
fisttpll
aad
and
sub
dec
test
test
out
dec
mov
jnp
fldt
rcrl
mov
mov
xchg
dec
jbe
scas
jp
fmull
or
mov
inc
gs
rcrb
inc
add
dec
testb
cmp
xchg
jmp
clc
cmp
jbe
pop
enter
stos
out
adc
adc
jge
iret
jne
in
fadds
sbb
mov
pop
lods
mov
mov
mov
xchg
outsl
add
xor
sbb
loope
cli
loop
cmp
roll
jge
dec
sahf
int
mov
inc
jmp
shrd
pop
lcall
aad
jnp
out
dec
lret
fsubl
ret
lret
shlb
movsb
push
push
fdiv
scas
xchg
sub
jp
and
nop
aaa
mov
jmp
test
mov
neg
jl
pop
dec
xor
add
shlb
mov
push
gs
aaa
int3
add
daa
sbb
xchg
dec
enter
fisubs
repz
adc
pop
aaa
xor
call
js
adc
or
das
push
out
mulb
call
aam
fs
sti
push
xchg
mov
fsub
enter
push
call
pop
flds
mov
test
adc
js
jg
in
cmp
bound
imul
andb
lcall
insb
add
mull
sbb
pop
clc
mov
xor
mov
aaa
xchg
stos
in
adc
add
mov
popf
jp
pop
sbb
inc
inc
sarl
out
fs
int3
cmp
add
repz
fcompl
sbb
sub
sbb
add
or
xchg
divb
jp
inc
dec
push
add
in
fiaddl
jno
fwait
sub
add
adc
test
popa
xor
nop
in
in
add
loopne
jl
sub
notb
sub
aam
pushf
imul
jbe
imull
lcall
mov
out
test
out
dec
out
lods
int3
jge
gs
inc
cmp
mov
fidivl
out
popa
mov
int
cmp
sbb
xchg
sub
jnp
sbb
scas
shll
inc
mov
std
out
add
add
cld
js
jb
xchg
mov
ret
xchg
enter
cltd
add
pop
ss
in
mov
pop
jl
loop
adc
sti
mov
fiaddl
mov
aam
cmc
cmp
xchg
stos
std
push
adc
pop
jl
mov
mull
dec
pop
add
cmp
sbb
xor
adc
inc
stos
xchg
adc
xor
add
aam
decb
or
cld
mov
jge
shll
sub
shlb
je
mov
push
jge
int
sbb
ja
cs
push
jg
adc
mov
sahf
loopne
push
scas
push
insl
notl
xchg
dec
in
lea
and
ds
push
push
add
and
std
cmp
and
lret
daa
sti
scas
out
outsb
sub
and
and
or
cmc
popf
or
in
add
aad
dec
jecxz
sub
shr
push
ljmp
jae
mov
out
push
mov
inc
mov
dec
loopne
cli
pop
subl
mov
adc
filds
jmp
cmp
push
jl
dec
jbe
pusha
jo
pop
in
stc
cltd
xchg
nop
inc
out
mov
in
sub
loope
cmp
adc
and
cs
inc
pop
testb
ds
sub
inc
aam
sahf
jo
jmp
icebp
dec
test
inc
or
add
mov
rorb
rcl
xchg
loopne
push
push
aam
and
std
xor
or
sbb
std
pop
fwait
mov
sub
filds
xlat
and
adc
outsb
jb
xor
xor
cmp
dec
cwtl
cmp
dec
inc
aaa
cwtl
jmp
cld
ja
jb
loope
sahf
sbb
icebp
add
iret
cmpsb
jmp
mov
repz
loop
je
inc
mov
adc
xor
pop
sti
push
pushl
lea
or
push
call
dec
adc
packssdw
add
jp
loope
fsubl
incb
cmp
ds
jbe
push
xchg
add
pop
enter
xor
scas
divb
adc
call
sbb
jp
sarl
mov
add
call
sub
cltd
mov
lods
and
orb
mov
xor
sti
cmp
cli
enter
and
cli
sbb
out
inc
and
ljmp
aad
jp
les
sbb
xchg
incb
stos
mov
into
orl
cmp
jmp
xor
loopne
clc
sub
dec
clc
add
adc
mov
mov
mov
push
enter
xchg
add
outsb
shlb
sub
xor
and
xor
add
adc
cmp
add
cmpsl
std
cmp
inc
stos
xor
push
cmp
sbbb
jb
jnp
insl
in
xchg
out
sbb
and
jno
sbb
iret
gs
cmp
enter
adc
outsl
jns
push
ret
xchg
push
nop
cmpsl
xor
ret
test
fs
mov
xor
mov
or
mov
jnp
sub
sub
xchg
les
pusha
xchg
in
mov
mov
push
or
sub
ljmp
jmp
add
push
mov
ret
xchg
or
aam
cs
adc
cmp
mov
inc
push
sbb
xor
rcrb
sub
fldenv
je
out
lret
ja
movsb
fisubrs
cli
out
inc
pop
jg
clc
call
mov
ret
jo
add
jne
out
xor
add
xor
mov
outsl
jb
pop
fcoml
push
fdivl
push
sbb
movl
es
sti
add
cld
cmpsl
mov
jnp
jmp
mov
or
cmp
sbb
in
cli
sub
and
arpl
std
jg
xor
and
in
mov
mov
push
cmc
sbb
cmp
in
cmp
mov
jge
push
jae
pop
loopne
aas
call
jmp
clc
aaa
or
adcl
adc
and
fbld
subb
mov
mov
xchg
xor
popf
xor
pop
pop
movsl
out
wrmsr
jmp
inc
xchg
push
daa
cmp
mov
mov
sahf
xchg
push
in
incl
push
and
adc
dec
test
adc
adc
mov
jp
sbb
lods
sub
cmp
push
shlb
and
add
mov
data16
and
cmp
adc
lcall
xchg
xorl
mov
xchg
push
andb
aad
sqrtps
pop
ljmp
cmpl
enter
leave
mov
fisttpl
dec
inc
xor
out
dec
xlat
xor
inc
jne
cmpsb
adc
or
fucompp
cmpsb
movsb
push
addb
mov
loope
inc
ljmp
sub
fcmovnbe
dec
nop
inc
test
push
call
adc
pop
xchg
adc
lods
push
in
cmc
xor
popf
sbb
mov
leave
stos
xchg
inc
dec
dec
mov
into
and
add
fnstsw
sbb
movsb
pop
test
repnz
jle
orb
shll
xor
pop
xchg
mov
or
in
inc
fidivl
or
add
mov
outsl
add
lret
or
dec
mov
push
inc
loope
fiaddl
clc
out
test
nop
xlat
js
mov
ljmp
mov
mov
clc
mov
dec
lock
sub
inc
loopne
adc
sti
lret
flds
ret
xchg
lock
fs
xchg
lret
pop
add
loopne
aam
cmp
loope
adc
ds
jl,pt
je
cmp
adc
loopne
js
shll
add
jmp
mov
mov
sub
decb
jno
jmp
shlb
and
cltd
and
mov
enter
lods
js
or
pop
dec
sbb
sti
mov
loope
push
rol
mov
cmp
add
fs
and
lds
fcomps
sbb
or
mov
or
mov
mov
cmp
hlt
ss
out
pop
add
std
lods
aam
xlat
xor
stos
pusha
pop
loopne
dec
xor
push
push
sub
add
and
pop
pop
fisubs
lock
ljmp
int3
adc
jo
fcomip
lods
jl
xlat
inc
movhps
das
nop
inc
in
incl
dec
mov
in
fisubl
aam
or
fs
ds
or
in
mov
das
cmpb
or
data16
add
adc
cwtl
add
push
rolb
mov
xor
pop
mull
sbb
cs
cwtl
mov
push
jl
add
in
les
and
push
mov
dec
repz
clc
jecxz
repnz
repnz
mov
pop
subb
pop
pop
in
or
fwait
inc
cmp
fisttps
repz
dec
filds
enter
and
or
cmp
jns
dec
cs
fadds
stc
sti
mov
lock
or
push
mov
stc
adc
xchg
sub
dec
sarb
addr16
add
xor
xor
cmp
dec
lret
pushl
cmpsl
push
sahf
in
orb
data16
fdiv
jle,pt
div
pop
jo
pop
or
iret
xchg
loopne
xor
add
xchg
xor
mov
nop
loopne
mov
add
outsb
js
lock
xor
mov
and
in
cmp
daa
xor
clc
sub
add
call
jg
test
imul
xlat
mov
aas
adc
add
addr16
dec
daa
xor
sub
decl
adc
dec
adc
jmp
add
test
xor
sbb
nop
stos
or
cmpsl
dec
setae
jae
or
adc
mov
xchg
pop
jl
imul
je
cmp
xlat
adc
add
inc
ds
jecxz
inc
inc
push
rclb
push
or
fistpl
pushf
inc
shlb
sbb
aaa
lret
fsubrs
inc
dec
dec
pop
mov
shll
loopne
jnp
daa
mov
jmp
xor
xor
add
or
inc
test
adc
or
cs
pushl
push
js
lock
sbb
push
movsl
andl
addb
mov
push
push
sbb
cmpsl
loope
sbb
orb
nop
lds
adc
sbb
or
inc
add
dec
lock
sbb
test
add
lock
jnp
xchg
cmp
xchg
mov
pop
pop
pop
test
xchg
dec
test
add
lds
dec
jnp
enter
leave
clc
cmc
add
and
inc
add
pop
or
lock
adc
movb
add
or
std
add
das
pop
ss
push
leave
inc
or
add
loopne
add
adc
repz
mov
jbe
imul
adc
aas
adc
xlat
mov
fildll
es
and
lcall
and
add
or
cld
dec
fldenv
cld
cmpsb
dec
rorb
addb
or
dec
fdiv
xchg
push
mov
mov
loopne
add
dec
dec
jnp
loopne
xchg
dec
sbb
and
popa
add
neg
int3
or
adc
es
sub
ret
adc
sub
ja
sbb
and
pop
lock
adcb
dec
jmp
jo
andb
sbb
fildll
pop
fdivrs
push
inc
dec
or
mov
ss
call
pop
or
mov
lea
and
fs
add
adc
mov
inc
push
call
pop
add
adc
cld
adc
or
in
fiaddl
sbb
push
out
sbb
inc
push
dec
cli
rorb
xor
fxch
test
sub
popa
rcr
add
cwtl
add
xor
xchg
adc
les
jne
pop
inc
dec
jge
call
fcoml
jne
push
lahf
add
sbbb
jle
lock
lods
bound
jo
push
add
adc
rolb
adc
or
sbb
xchg
add
add
jp,pt
jmp
xchg
add
push
pop
sahf
push
push
pop
loopne
call
icebp
or
adc
insl
mov
push
adc
mov
fwait
je
add
sbb
add
rolb
sbbl
nop
mov
ret
fdiv
shld
inc
adc
in
add
xor
sub
hlt
or
mov
ret
hlt
xor
pusha
mov
xor
sahf
add
or
or
and
or
lock
in
lcall
adc
hlt
test
ds
les
jle
test
sbb
data16
push
push
push
sahf
rorb
loop
fcom
hlt
sbb
mov
sub
or
add
das
cmpsl
divl
repz
sbb
mov
mov
addr16
xor
push
mov
sbb
sbb
scas
enter
scas
or
mov
cmpsb
rclb
add
shrb
insb
add
jmp
pop
pop
or
repnz
adc
fdiv
daa
mov
ror
cmp
adc
cmpl
xor
movsb
aam
incb
xchg
jge
dec
mov
div
call
jnp
sbb
mov
mov
sbb
pusha
jno
dec
jmp
lods
outsl
lock
pop
arpl
sub
push
and
xchg
pop
je
pop
or
mov
cmp
or
cmpb
or
je
ljmp
in
add
and
je
pop
std
add
mov
in
add
addb
mov
xor
push
fmul
mov
lods
mov
in
inc
push
mov
ror
add
fmul
inc
in
loopne
mov
dec
insb
lcall
dec
xor
test
adc
jno
push
cs
dec
inc
arpl
xor
jecxz
jmp
popl
xchg
out
shll
les
incl
xorb
adc
leave
push
fcompl
jne
dec
faddl
xor
rcrl
out
pop
fwait
cmp
aas
ss
cmp
jns
adc
inc
sbb
adc
fidivl
lock
inc
int3
add
push
inc
or
and
insl
cmpsl
push
daa
add
push
or
xchg
jle
xor
mulb
xor
shl
xor
jo
adc
add
xchg
sbb
sub
scas
pop
mov
inc
data16
xor
mov
lret
xchg
pop
stos
add
mov
sbb
sub
cmp
dec
imul
clc
fdivs
stos
xchg
sbb
shrl
cmp
add
loope
popa
push
dec
xchg
push
fsubrl
fmull
andl
and
xchg
mov
fnstsw
xor
ret
push
lods
adc
push
js
mov
icebp
push
sbb
mov
inc
push
pop
into
addr16
adcl
fdivs
xor
sbb
adc
inc
cmp
mov
jecxz
xchg
mov
add
lock
fstps
dec
enter
imul
sahf
cmp
jns
cmp
dec
fsubs
aad
in
mov
rcrb
mov
jne
sub
sub
int3
outsb
popa
add
adc
xchg
or
xor
fsubrl
int3
test
push
jne
cmc
push
dec
add
cmp
aad
sbb
add
sbb
pop
inc
cwtl
sahf
loopne
lcall
cmp
clc
mov
scas
pop
add
sub
bound
les
mov
rorl
popf
imul
mov
shlb
xlat
or
push
incl
cmp
sbb
add
xor
lahf
sub
xor
add
movsl
mov
cmp
outsb
mov
xchg
adc
in
add
shrl
inc
or
ret
ljmp
or
in
mov
sti
rorb
sub
loope
repz
cmpsl
les
rcll
add
in
push
mov
or
adc
pop
loopne
cmc
stos
adc
inc
fsubl
cmc
lea
sbb
push
push
call
test
out
add
push
sub
jge
or
jmp
rcrb
add
adc
movb
mov
aas
mov
ficoms
add
push
cmp
test
mov
cmc
in
fnsave
mov
or
mov
xor
icebp
adc
js
loopne
jl
insl
pop
inc
movsl
push
mov
out
mov
mov
movsb
imul
jge
dec
fistps
addl
ljmp
jp
cmp
shll
dec
add
lock
jmp
sub
ficoml
shll
ffreep
inc
addb
pop
mov
and
add
push
jecxz
pop
xchg
mov
xor
sub
cltd
das
adc
test
call
lret
adc
mov
xchg
or
push
fistpll
inc
gs
mov
pop
sub
push
mov
hlt
ret
shrb
add
filds
pop
xor
xchg
push
cld
lock
pusha
daa
and
inc
mov
push
xchg
adc
rorb
popa
jl
orl
sbb
push
jo
push
sub
mov
fcomi
pop
imul
sbb
and
ja
test
dec
aaa
nop
ljmp
push
out
push
in
mov
scas
cmp
pushf
lock
adc
pushw
lock
sbb
inc
fsubs
dec
daa
rclb
and
loopne
rolb
imul
adc
jo
sub
or
out
insl
out
add
call
pop
mov
adc
les
add
test
mov
push
and
xlat
cmp
in
inc
scas
outsl
or
stos
jbe
push
adc
dec
roll
lahf
mov
jl
nop
jae
sub
pop
xor
mov
mov
pop
or
adc
ljmp
xchg
testb
mov
clc
sub
lcall
inc
loope
cmpl
pop
push
les
je
pop
sbb
icebp
int3
or
shll
mov
insb
add
dec
cld
adc
cli
test
or
adc
add
icebp
stos
fildl
add
push
push
dec
add
pop
ja
push
push
fucom
or
test
xlat
jl
rcrl
mov
fcoms
adcb
stos
and
adc
or
sbbl
rolb
jns
pop
mov
imull
mov
push
dec
incl
adcb
out
data16
xorl
xor
dec
inc
dec
mov
push
pop
and
inc
jmp
push
adc
sbb
out
lock
leave
mov
add
push
lcall
cmp
ret
xor
and
inc
mov
or
mov
outsl
xlat
jmp
sti
enter
stos
cs
loop
enter
loopne
mov
out
je
mov
adc
iret
fiadds
jmp
dec
outsb
rolb
cs
mov
ljmp
jge
ljmp
inc
push
shr
ljmp
ljmp
lock
roll
push
add
leave
pop
jge
or
cwtl
outsl
jae
adc
les
dec
lock
add
shlb
sub
fildll
xchg
add
adc
std
outsl
or
xlat
fistpll
sbb
jmp
cli
mov
lret
or
mov
test
mov
jnp
orl
xchg
add
lds
add
or
mov
pop
xor
add
aas
add
mov
sbb
mov
push
les
push
adc
add
test
mov
dec
sbb
dec
jge
add
mov
out
add
jle
pop
icebp
hlt
adc
adc
psubw
call
mov
xor
les
sub
xchg
pop
js
sbb
dec
mov
ds
xchg
push
out
add
xor
add
pop
and
add
mov
js
cltd
cmp
mov
ss
jae
pop
sbb
mov
sbb
inc
repz
in
push
shll
push
popa
xchg
int
or
mov
and
add
xor
xchg
mov
dec
inc
and
jg
dec
sub
push
clc
jns
mov
and
stos
and
outsl
mov
call
loopne
xor
jge
sbb
pop
loopne
sub
mov
lods
dec
adc
sbb
or
mov
data16
or
or
and
or
mov
es
fwait
js
das
leave
call
mov
push
dec
loopne
icebp
xchg
in
popa
xchg
notb
inc
bound
xlat
push
jnp
pushf
dec
mov
jmp
adc
arpl
and
in
mov
popa
int3
ret
or
lret
add
cli
cld
jno
mov
lods
fcomp
add
loopne
jmp
outsb
lock
sub
loopne
pushf
mov
shl
cmp
ds
inc
add
shll
js
movsl
test
in
clc
and
ret
into
inc
enter
dec
pop
adc
jmp
add
xchg
icebp
enter
pusha
sarb
lods
jecxz
cmp
fxam
aam
scas
pop
push
stc
loopne
loopne
jg
cmp
pusha
jb
mov
jl
cli
rorl
setbe
roll
call
inc
fimull
xor
xchg
cmp
out
jp
movsl
or
sbb
inc
call
popa
inc
fsub
mov
hlt
lahf
sbb
std
imul
lods
cs
fsubrp
dec
es
sbb
pop
mov
fidivrs
add
sub
xor
call
dec
lea
arpl
sbb
out
push
pushf
lods
adc
dec
sbb
adc
lods
cmp
pop
jb
pop
popa
adc
imul
fdiv
inc
add
or
ss
lret
aam
notb
xor
imul
mov
adc
hlt
sbb
mov
adc
arpl
adc
dec
testl
insb
sarb
inc
jge
xor
sbb
mov
xlat
xchg
ljmp
inc
adc
mov
clc
sbb
jae
ret
mov
outsl
movl
mov
loop
pop
mov
loope
or
or
test
adc
roll
push
shrb
add
mov
xchg
clc
pop
lahf
test
cmp
clc
sbb
loopne
hlt
rcrl
xchg
xor
arpl
jp
pusha
push
adc
fistps
push
xor
shr
rorl
cmpsb
fstpl
xchg
pushf
dec
jecxz
and
call
pop
inc
lock
insb
mov
popa
shl
inc
icebp
cmp
mov
ds
pop
inc
sub
outsl
or
push
dec
mov
adc
or
add
or
aam
inc
aas
mov
or
cli
fsubr
xchg
and
push
daa
push
rcrl
xor
mov
sub
sbb
scas
add
lods
add
inc
add
hlt
es
cltd
arpl
jmp
adc
cmp
push
push
push
pusha
or
repz
fdiv
or
mov
add
hlt
push
ret
sbb
push
and
xlat
addb
gs
or
lock
jo
into
subl
cmp
shrl
and
inc
inc
jl
dec
or
mov
sub
pop
ret
and
cmp
jb
neg
push
mov
pop
dec
xchg
mov
mov
bound
subl
rcl
xchg
add
fwait
xchg
fsubrl
mov
lock
fistl
cmp
popa
das
lcall
int3
pop
xorb
jmp
ror
sti
cmp
sub
movsl
shrb
push
das
pop
and
inc
push
clc
cmp
inc
jbe
icebp
je
xlat
and
loop
sub
mov
lds
ret
dec
add
adc
sarb
adc
sbb
adc
fistl
adc
sbbl
loopne
xchg
shll
mov
les
jae
push
sbb
xchg
and
push
shlb
test
push
sbb
push
int
cli
out
push
and
addb
jmp
inc
js
popa
ja
xor
cmpsl
call
in
jno,pn
xchg
andb
add
mov
test
xlat
out
fsubrl
pop
add
insb
xor
rolb
dec
sti
scas
cmp
push
sub
xchg
test
xor
jl
js
cmovge
cld
cmc
push
xor
pop
inc
push
push
jle
fsubr
and
cmp
lret
add
xor
pop
add
cmp
fs
out
clc
mov
shr
ret
sahf
add
faddl
lcall
das
sub
rsqrtps
pushf
subl
movsb
xor
into
sbb
gs
xor
or
inc
add
pop
add
imul
movsl
inc
popf
mov
add
mov
mov
pop
jne
pop
and
add
xor
addl
lcall
enter
xchg
lods
adc
repz
sub
cmc
mov
andl
xor
add
mov
test
lock
pop
rclb
and
jp
mov
push
sbb
ret
xor
addr16
add
sub
or
mov
sub
ja
xor
sub
push
subb
fiaddl
or
sbb
or
sbb
push
mov
mov
add
inc
lock
jne
cld
in
rorb
clc
fbstp
cmp
mov
test
les
or
push
inc
nop
jbe
pop
or
and
jns
adc
and
mov
lods
dec
fdivs
fidivrl
stos
ljmp
dec
loope
cmp
xchg
xchg
cld
ret
mov
jmp
pop
mov
repz
sahf
cmp
mov
and
stos
fwait
arpl
sbb
dec
adc
dec
jb
xchg
sbb
sbb
lods
inc
lret
sub
sub
mov
jmp
sub
sbb
pop
cmp
push
lahf
ss
cmp
shr
lods
fadd
movsl
or
cli
out
call
shlb
jmp
rorl
loopne
adc
cld
cld
jmp
pop
sbb
pop
je
push
loope
pop
jmp
sarb
call
adc
push
jno
dec
xlat
jge
fsubrs
loopne
test
xchg
xchg
popf
repnz
loopne
xor
popf
cmpsb
add
and
xor
jecxz
fmuls
and
sub
pop
subb
or
add
das
jle
negl
inc
mov
pop
xadd
or
pop
call
iret
fsub
dec
or
sbb
ret
popa
stos
out
jb
lods
push
loop
fbstp
mov
mov
ret
pop
add
dec
aam
xor
test
xor
mov
pop
push
call
add
sbbb
sub
test
stos
push
inc
sub
in
add
push
call
js
or
cmp
aad
push
mov
add
scas
push
pop
sbb
cld
inc
ja
push
pop
pop
idivb
xor
inc
adc
jbe
inc
jecxz
outsl
or
ds
jp
mull
adc
imulb
pop
add
dec
test
in
dec
adc
fstpt
fdivp
or
lret
inc
jmp
push
mov
pop
adc
xor
ret
test
jmp
or
ret
and
push
xchg
sbb
jmp
inc
add
neg
pop
inc
sbb
add
inc
jo
jp,pt
lock
jmp
pop
jo
decb
inc
mov
inc
insb
ss
daa
insl
push
cli
adc
mov
test
lret
push
and
aam
add
jmp
mov
cmpsl
popa
ljmp
aaa
xor
repz
negl
movsl
xchg
sarb
inc
daa
pop
add
pop
cld
mov
jl
fisubrs
adc
xlat
pusha
fwait
adc
testl
sbb
movsb
clc
dec
xor
loope
pushf
jge
out
inc
mov
clc
sbb
cs
sub
xor
jnp
ret
xor
add
lahf
pop
inc
hlt
outsl
jecxz
cmpsb
stos
inc
pusha
orl
mov
dec
sbb
fdivrs
add
rclb
aad
sub
add
sub
int
shl
push
jmp
add
mov
xchg
lock
push
add
mov
pop
mov
or
inc
imul
push
lods
inc
pop
adcb
test
add
lds
xchg
xor
rcl
adc
add
and
adc
fmuls
adc
adc
jle
push
xchg
jbe
out
stos
aam
push
inc
mov
arpl
imul
and
mov
sbb
jmp
addb
test
fists
flds
hlt
test
or
rorb
hlt
push
test
push
xor
sbb
mov
das
inc
xchg
add
inc
sbb
jae
sub
sub
add
lcall
dec
sbb
sar
sahf
adc
roll
add
xchg
inc
pop
lret
cltd
sbb
and
mov
shl
mov
sbb
jmp
mov
jl
mov
mov
add
adc
adc
fadds
frstor
xorb
js
jo
ds
adc
imul
sbb
push
aam
mov
sahf
iret
ljmp
mov
add
jo
roll
das
add
adc
clc
mov
jmp
clc
int3
lock
xlat
sub
or
aas
adc
fcmovnu
pop
stc
mov
or
adc
push
ror
sub
scas
shr
icebp
stc
or
inc
ljmp
clc
cmpsl
mov
mov
cmp
inc
cmpsl
ljmp
fsubr
push
mul
jae
mov
adc
in
test
jo
outsb
outsb
cltd
dec
jb
sbb
loope
cli
cmpsl
or
addr16
rclb
ret
imul
out
sbb
pop
sbb
lock
pop
push
add
rcr
mov
push
icebp
push
push
shll
punpcklbw
pusha
or
in
push
or
sbb
add
add
pop
out
add
aam
mov
gs
jb
and
imul
mov
shll
aas
pop
lret
push
pop
dec
daa
ret
ja
xlat
sbb
test
imul
imul
daa
fidivl
gs
mov
into
mov
stos
cmp
lcall
sub
rcrl
test
mov
jno
sbb
xor
or
or
push
fildl
lcall
sbb
jge
fidivs
xor
or
sub
insl
pop
fimuls
push
dec
adc
mul
jo
sbb
mov
jle
inc
mov
shll
test
mov
les
mov
icebp
sbb
in
jmp
in
push
dec
sub
in
adc
pop
ds
aaa
push
jo
and
push
mov
inc
in
add
outsl
call
or
dec
adc
mov
js
adc
and
or
out
adc
push
sbbb
add
adc
faddl
sbb
adcl
cmp
dec
insb
mov
loopne
or
int3
test
dec
sub
sbb
mov
jno
xchg
cmp
jmp
mov
bound
aaa
sub
xchg
add
inc
es
cmp
cs
push
adc
cmpsb
call
push
je
sbb
roll
popf
into
jo
clc
andb
adc
xchg
push
sbb
push
dec
pusha
sti
addr16
fwait
cltd
add
inc
sub
adc
add
cmp
jbe
xchg
loop
cs
mov
enter
cmp
push
and
cmp
push
or
xor
mov
and
loope
mov
loopne
mov
xchg
cmpsb
js
bound
push
xor
jb
int3
add
pop
js
inc
popa
xchg
ret
lock
inc
aaa
add
out
mov
add
std
mov
pop
push
xchg
jle
sbb
mulb
bnd
cltd
jmp
cli
jnp
jb
pop
in
push
call
xchg
loopne
xchg
decb
cmp
dec
stos
xor
mov
xchg
fcompl
inc
add
in
add
dec
jns
pop
adc
cmp
add
fbstp
daa
scas
xchg
xor
mov
sbb
mov
or
test
in
lcall
loope
or
inc
outsl
push
push
enter
int3
cmpsl
inc
sub
sub
movsb
sbb
jne
mov
cmp
inc
mov
add
add
mov
add
loopne
mov
int3
mov
aas
sub
es
sub
jmp
sbb
loopne
mov
xlat
inc
lahf
movsb
inc
std
or
pusha
lahf
push
out
inc
fstpt
xor
stc
outsb
lea
dec
jp
add
adc
loope
or
repz
cmp
in
scas
or
aad
jbe
pop
sub
mov
xchg
ret
sbb
aam
jecxz
fcomip
aam
mov
lock
andl
out
pusha
push
in
fstl
xchg
cmp
mov
movsl
hlt
adc
sti
shlb
inc
sbb
or
lahf
les
loope
dec
xchg
icebp
mov
js
sub
loopne
xor
sti
and
inc
hlt
xor
cwtl
test
pop
shr
sub
inc
mov
mov
aaa
test
subb
xor
inc
adc
jb
int
adc
hlt
movsb
scas
xor
cmp
sbb
xchg
stos
xor
sbb
test
or
cmp
dec
movsb
js
les
adc
inc
jecxz
and
xor
jno
loopne
ss
xlat
cmp
outsb
push
daa
ret
ret
and
mov
mov
and
popl
or
xorl
cmpl
lcall
lods
pop
mov
jbe
pop
andb
iret
push
ret
cmp
test
or
and
jmp
cmpsb
mov
lea
and
lds
inc
jmp
jg
and
loopne
mov
sub
adc
inc
jo
mov
mov
fwait
push
cwtl
sbb
std
inc
cld
push
jb
adc
push
aam
cmp
cmp
int
out
leave
test
ljmp
push
leave
lock
or
mov
push
jmp
cmp
jae
jg
push
xchg
mov
enter
cli
jge
outsl
jne
add
pop
push
inc
push
or
and
cli
add
add
cmp
add
out
sar
loopne
sbb
sub
fwait
outsb
cli
or
xor
daa
jne
stos
aam
adc
scas
push
or
jo
inc
lock
cmp
movsb
push
sbb
loopne
je
sub
daa
xchg
mov
add
clc
jo
gs
imul
ror
imull
mov
inc
aas
iret
mov
insb
shl
orl
mov
dec
inc
hlt
adc
lock
fisubrs
xor
out
bound
divb
ror
cwtl
inc
sub
add
pop
and
xor
cmp
roll
lret
add
add
int3
aam
out
mov
mov
faddl
or
xor
test
push
pop
mov
add
filds
popf
lods
and
mov
push
addb
mov
dec
scas
adc
rol
test
leave
sub
gs
mov
clc
jbe
cmp
and
xor
add
jle
pop
mov
shlb
sbb
xchg
adc
push
test
fs
sbb
add
andb
ljmp
xor
cmpsl
sub
aaa
and
dec
pop
or
inc
sar
int3
sub
push
sbb
sub
dec
mov
push
and
lret
cmpsb
and
adcl
loop,pn
xchg
rolb
sub
mov
jne
push
pmaddwd
pusha
movsl
mov
aad
in
xchg
dec
mov
dec
add
lret
lret
in
packssdw
or
pop
call
shrl
scas
push
shlb
dec
test
push
jo
dec
xchg
adc
adc
mov
push
jmp
movsl
inc
div
lds
sub
push
jne
mov
cmpsb
rolb
cmp
loop
icebp
in
imul
aas
cmp
mov
movb
adc
sub
outsb
rcll
xchg
and
dec
ljmp
jmp
adc
xchg
ja
mov
lds
imul
inc
lret
xlat
pop
push
mov
and
cmp
push
jmp
lahf
movsl
mov
in
clc
insb
add
or
jmp
idivl
jne
xor
icebp
pop
mov
fisubs
loopne
std
out
add
add
fcoml
shl
popf
inc
add
mov
shl
and
pop
cmp
mov
adc
jo
mov
cld
push
xchg
shlb
ljmp
dec
mov
inc
cmpsb
sub
add
push
popa
arpl
lret
call
enter
movsb
add
fisubrl
and
pop
push
mov
add
push
fimuls
add
add
push
cmp
aas
jo
jne
sub
xchg
or
xchg
sbb
mov
pop
sub
or
test
mov
mov
xchg
cwtl
mov
or
adc
je
sub
or
mov
mov
fadd
cmp
push
lahf
shlb
dec
pop
jmp
mov
icebp
cltd
ret
inc
push
dec
scas
fs
mov
repz
mov
or
pop
pop
popa
arpl
ss
scas
push
jl
jo
and
test
iret
dec
or
aas
ret
inc
mov
or
cli
das
and
mov
rolb
mov
outsl
or
pop
insb
xor
jne
sbb
mov
std
adc
stos
fimuls
and
push
cmp
in
movb
stos
jnp
movsl
xor
pusha
add
std
inc
xor
jg
dec
shll
hlt
sbb
dec
js
iret
xchg
add
mov
out
add
test
push
push
les
push
and
xor
hlt
inc
dec
xor
push
push
out
dec
inc
inc
mov
inc
sub
or
sbb
rcrb
mov
or
sub
pop
hlt
sub
negl
xor
xchg
into
data16
add
cmc
xchg
inc
push
loop
iret
shlb
aam
add
jno
inc
pushf
dec
cmpsl
mov
ret
xchg
sbb
test
fwait
cmp
lods
sub
jle
mulb
inc
pop
push
pusha
pop
loopne
inc
sub
dec
mov
sub
add
je
mov
mov
inc
mov
adc
fwait
or
push
cmp
add
sbb
daa
icebp
inc
aad
lods
fmull
inc
clc
xor
mov
nop
or
data16
fstps
or
sub
xor
xor
mov
test
idivb
movsb
js
in
nop
leave
outsb
jp
sub
incl
pop
rolb
mov
add
mov
xor
mov
scas
ret
mov
leave
int3
xchg
or
mov
ss
add
vpshufhw
lods
aad
cmc
jns
pop
rclb
and
scas
xchg
mov
xor
push
movsl
mov
rcrl
add
push
dec
xor
ret
gs
or
add
mov
stos
adc
cmp
popf
cs
push
fwait
ljmp
addr16
and
nop
mov
sub
and
mov
and
rolb
jno
inc
out
not
jno
pop
loop
adc
lods
sbb
add
or
data16
push
cwtl
or
or
test
mov
add
jmp
push
pop
cmpsl
adc
mov
mov
subl
jne
es
xor
cmp
loop
movsb
inc
test
shr
jns
inc
in
dec
and
rcl
jecxz
cmp
mov
xor
iret
jno
leave
mov
shrb
lret
cmpsl
pop
icebp
or
nopl
sub
push
xchg
stos
jp
call
dec
fsubs
cmc
or
fsubs
pop
out
xor
dec
or
add
sbbl
add
add
add
or
clc
mov
adc
jmp
cs
stos
cmp
cmp
int
inc
arpl
adc
xor
ret
dec
ljmp
shll
ss
jle
cmpsb
fwait
mov
sbb
jae
lret
add
jnp
inc
addb
add
notl
push
out
jecxz
lods
test
or
es
mov
mov
in
pushf
push
jae
fwait
or
lret
nop
cmp
cmp
repz
aad
in
dec
loop
fwait
not
and
push
xchg
sbb
filds
sarl
mov
xor
add
in
rol
or
sbb
push
rcrb
mull
hlt
adcl
stos
icebp
push
dec
mov
add
gs
xchg
ret
test
ja
add
push
cld
sub
or
mov
adc
adc
mov
or
pop
test
iret
and
add
cmp
js
enter
movsl
or
mov
or
cmp
in
mov
jl
xor
ds
lahf
pop
jne
inc
aam
clc
dec
jle
xor
add
sub
and
push
adc
or
jp
push
jno
fidivl
and
mov
dec
gs
or
mov
mov
stc
cltd
outsl
rorb
cmc
and
sbb
stos
das
loopne
mov
pop
push
mov
push
xchg
push
cld
push
push
call
xor
dec
lods
popf
test
sbb
mov
nop
clc
lahf
pop
cmp
lahf
pop
sarl
seto
pop
dec
ret
mov
xchg
inc
fcmovnb
ss
xchg
inc
lods
aad
and
xlat
test
push
out
js
jo
push
test
fsubrl
adc
int
pop
sbb
mov
fldt
and
xor
sbb
add
jb
stc
and
fistpl
nop
inc
inc
add
mov
add
leave
pop
xchg
das
inc
lea
xchg
and
adc
adc
adc
mov
fidivl
lea
or
fsts
pop
sahf
es
cli
lret
out
push
jmp
and
mov
dec
cmpsl
add
outsb
jb
cld
mov
pop
clc
jno
fcoml
into
sub
ret
add
jbe
inc
aaa
aas
mov
pop
fists
or
movsb
fisttpl
jb
push
fdiv
add
cld
fdivrl
cmp
sahf
cmpsb
push
pop
out
jns
inc
mov
or
in
cmpsl
pop
lock
jb
jno
dec
enter
lds
jne
sub
inc
imul
sbbl
sbb
in
scas
test
mov
shr
jle
gs
or
mov
and
fnstenv
lock
mov
loope
pop
mov
inc
dec
pop
nop
push
sbb
bound
leave
mov
imulb
add
loope
lds
movsb
shl
adc
fwait
in
add
testb
pop
sbb
cmp
xor
lock
add
sbb
sbb
or
lods
adc
xlat
jp
ficoms
sub
cmp
ret
insl
xchg
or
jg
jnp
add
scas
add
pop
cmp
or
lods
sbb
add
dec
stos
cli
sub
shrl
or
popa
out
test
sub
insb
add
stos
negl
or
push
leave
xchg
pusha
add
fbld
pushf
sahf
lods
adc
jo
xor
loopne
repz
xor
pop
pop
sub
adc
sub
push
xor
clc
or
mul
std
xchg
lds
js
lcall
sbb
push
jb
popa
xchg
inc
adc
lds
mov
xchg
pop
jbe
inc
call
fiaddl
mov
pop
jne
or
and
cmp
je
daa
cltd
dec
mov
cmp
movaps
jo
rcrl
xchg
stc
push
fsubs
xlat
dec
adc
mov
add
cmp
push
sub
jno
sbb
ret
jbe
pop
cmp
sbb
xchg
xchg
sbb
pop
cmpsl
int
jle
add
xor
fadd
xor
lcall
mov
cmp
xor
inc
loopne
lret
mov
lock
clc
sbb
mov
cmpsb
imul
jmp
vcomiss
aaa
inc
rolb
test
pusha
aaa
roll
ja
lock
sbb
or
add
bt
mov
test
movsl
or
outsb
test
pop
pop
dec
fcoml
test
ret
insl
stos
ret
push
push
clc
add
adc
lds
mov
test
xchg
mov
push
sub
pop
and
or
pop
stc
pop
ret
jno
push
xchg
shr
dec
pop
or
dec
jnp
cld
fmull
divl
push
push
dec
loopne
bound
add
mov
nop
sahf
or
bound
aad
push
inc
xor
iret
inc
jmp
jno
std
inc
add
lock
shrb
pop
sbb
imul
ret
push
ret
push
adc
push
jo
adc
pushf
add
lods
adc
loop
and
lods
inc
sbb
ljmp
movsb
ret
sub
clc
bound
add
jg
loop
or
sub
andb
pop
repnz
add
dec
in
jmp
inc
and
outsl
sbb
data16
repnz
sub
pop
xor
inc
cltd
sub
sub
js
sub
sbb
jg
jae
mov
push
push
sbb
shll
aaa
loopne
clc
sbb
pusha
jmp
and
in
add
add
push
adc
dec
rclb
cwtl
test
add
fadds
cltd
scas
or
inc
jg
push
mov
inc
add
push
rcrb
or
push
pushl
push
push
and
movsb
mov
ret
test
test
xchg
push
ds
dec
sbb
add
push
and
outsl
or
push
push
sbb
loope
out
inc
daa
sbb
mov
fiadds
out
and
inc
or
inc
push
push
rclb
cmp
or
dec
mov
jmp
and
pushf
push
push
xchg
aaa
dec
and
add
test
xor
rorb
arpl
xlat
aam
stos
adc
adc
test
iret
adc
sub
jo
aaa
push
cmc
ret
pop
xchg
and
sbb
icebp
sbbb
add
enter
popa
adcb
or
scas
test
dec
add
imulb
ffreep
loope
add
pushf
sub
jne
ret
xchg
xrelease
imul
gs
daa
dec
fs
and
mov
mov
mov
fcoms
bound
lock
pop
popl
sub
or
pinsrw
mov
fisubs
rcr
or
or
jecxz
les
cmpl
xchg
push
popa
lods
sti
dec
add
inc
lret
mov
jbe
push
sub
mov
xchg
push
and
int3
int3
out
hlt
or
cmpsl
cmc
inc
adc
add
push
push
stos
jge
dec
lea
lcall
cli
fs
jge
sbb
lahf
adc
add
mov
in
push
jecxz
cmp
mov
adc
mov
jne
ficoms
push
mov
add
and
subb
xor
mov
and
pop
cld
sub
ds
out
test
mov
xchg
push
jb
lds
lock
mov
sbb
sar
shrb
adc
mov
add
in
xor
push
add
jmp
pushw
std
testl
mov
and
xor
jl
test
rorl
xor
xchg
xor
xchg
icebp
aaa
neg
call
jno
test
or
ror
out
fidivrs
mov
pop
dec
movsb
mov
insb
inc
cmc
push
aam
sarl
in
adc
jp
ret
sbb
int
xor
inc
dec
push
loope
adc
add
cmp
jmp
not
stc
jecxz
xchg
rclb
rcr
xor
or
add
push
mov
inc
shlb
xchg
xor
addb
inc
mov
xor
popf
addb
push
mov
cmp
jbe
xchg
je
stos
out
insl
inc
adcb
sbb
sub
jb
add
jb
pusha
push
ret
mov
add
mov
mov
jbe
or
sub
mov
ds
xchg
and
loop
lret
jo
sar
sbb
xor
add
test
push
stos
xor
les
mov
adc
sbb
mov
jmp
test
mov
sub
stos
adc
and
sbb
scas
mov
in
sub
les
jmp
push
dec
pop
aad
pop
daa
add
push
mov
or
push
mov
fmulp
jg
and
jo
xor
mov
adc
jne
imul
mov
inc
or
cmp
xchg
outsl
add
call
inc
mov
inc
or
mov
movsl
jbe
inc
adc
repz
data16
shrb
xor
sarl
mov
int
xor
or
inc
mov
or
jecxz
pop
xor
push
or
jnp
clc
ret
sbb
dec
in
adc
ljmp
loope
xchg
push
clc
inc
call
push
push
push
mov
xorl
pop
mov
push
and
pop
xchg
add
push
mov
xor
cmp
pusha
insl
mov
mov
rolb
and
and
push
subb
mov
push
or
andb
loopne
push
sbb
or
test
mov
and
call
lods
inc
inc
add
inc
sbb
fldcw
aad
xor
lret
shlb
movsb
dec
add
aam
jne
lods
xlat
add
push
fwait
jnp
fcomps
jl
insb
gs
push
lods
cli
cmpsb
sub
jmp
test
jb
ljmp
and
hlt
sbb
dec
push
inc
das
sub
fnstenv
out
cli
fisttpl
fchs
dec
lret
push
icebp
cwtl
add
jbe
xor
insb
fadd
addb
dec
loopne
sti
adc
in
add
loop
and
or
push
mov
adc
popa
sub
mov
mov
push
cli
sbb
push
popa
sti
outsl
and
hlt
inc
sub
dec
cmp
inc
sbb
pusha
sub
dec
add
arpl
cmpsl
cltd
cmp
pop
lcall
pop
adc
add
mov
dec
stos
add
pop
jb
mov
lock
cmp
fs
or
std
jmp
roll
fs
add
scas
xor
frndint
cld
push
inc
loopne
fst
mov
sub
sahf
rorl
divl
dec
adc
xor
dec
dec
or
in
pop
cmpsl
movsb
aam
or
cld
pop
and
inc
inc
cmp
push
test
imul
lahf
imull
rep
jne
inc
push
fsubs
inc
mov
mov
sbb
pusha
call
mov
inc
mov
pop
lcall
xchg
das
sbb
aaa
xchg
inc
ret
jg
repz
lret
add
imul
push
sbb
scas
mov
mov
mov
cmc
aas
test
sbb
fistpl
mov
jnp
cmpsl
mov
mov
into
ret
std
in
dec
adc
in
clc
sbb
scas
popa
add
lret
dec
sbb
shlb
mov
pop
addr16
bound
imul
add
cli
pusha
pusha
push
loope
or
or
pop
cmpb
jg
jp
jo
jp
xor
fmulp
rcr
icebp
fiaddl
pushl
rclb
inc
les
cmp
aaa
sub
sbb
out
sbb
cmp
pop
mov
jle
push
hlt
cmc
xchg
fdiv
stos
test
push
pop
lods
push
test
pop
pop
push
push
hlt
or
and
cmp
xchg
adc
lock
rorb
test
or
xor
pusha
shll
xchg
icebp
xchg
pop
mov
pop
arpl
rcr
inc
sub
enter
add
enter
sub
mov
add
clc
cmp
add
fists
inc
inc
insb
test
mov
mov
out
add
push
pop
aas
xchg
pop
lret
sbb
dec
and
inc
test
and
and
ror
cmp
enter
push
outsl
sub
push
flds
xor
nop
pop
sub
mov
test
push
dec
mov
pop
adc
clc
xchg
sub
mov
popa
adc
adc
dec
mov
push
add
shrb
mov
mov
or
and
jmp
mov
arpl
repnz
push
cli
bound
rolb
add
mov
adc
push
xor
inc
das
mov
push
pop
imul
loopne
std
idivb
lea
adc
lock
call
icebp
xchg
and
push
leave
add
pop
or
inc
jmp
inc
xor
loop
xor
xchg
adc
pop
pop
fimull
and
int
or
cli
std
imul
enter
clc
divl
icebp
jl
cmpsl
cs
jne
cmp
clc
orl
xchg
aad
test
cmp
or
xor
add
inc
insl
roll
xchg
fwait
dec
inc
and
incb
mov
add
sarb
mov
stos
rcrb
cmp
in
add
and
shlb
rorl
mov
pop
mov
or
test
loop
jle
fildll
shlb
push
fisttpl
inc
push
cltd
ficoml
loopne
push
rcll
inc
daa
loope
mov
andl
add
lret
cli
rcl
push
arpl
aad
inc
xchg
aad
iret
cli
lcall
add
xor
and
cmp
push
or
stos
pusha
xor
jo
cmp
rorb
shr
add
test
int
xor
and
dec
mov
imul
icebp
cmp
jle
rorl
or
call
mov
cld
es
push
repz
adc
jecxz
xchg
inc
mov
sub
inc
pop
or
in
shl
add
or
pop
and
mov
inc
jecxz
addb
mov
mov
lret
inc
sbb
adc
mov
xchg
add
negl
xor
inc
add
sub
dec
add
lock
jo
popa
xor
punpckhbw
xchg
and
or
inc
mov
and
cmp
mov
ficoms
jl
fisttpll
jmp
lock
dec
clc
and
sbb
inc
divb
pop
fs
xor
inc
dec
mov
fsubs
xor
jae
hlt
push
fs
lds
fdivrl
nop
cld
pushl
clc
dec
jl
je
mov
ror
hlt
iret
jl
cmp
jae
mov
sub
repz
sub
sbb
int
fwait
xorl
loopne
inc
outsl
xchg
loopne
jl
popf
cmp
stc
je
in
add
add
ss
pop
gs
and
orb
adc
sbb
cli
test
jb
jecxz
add
call
div
lds
jb
mov
add
and
xchg
xchg
insb
sbb
sub
les
loopne
repz
or
inc
nop
push
incb
ror
js
pop
sbb
loope
xchg
rol
fisttpl
repz
or
test
add
push
xlat
mov
jge
adc
inc
cmp
ret
mov
sbb
sub
xor
add
add
testb
sub
ret
andb
hlt
stos
xchg
pop
or
test
sarb
addb
push
call
or
sbb
or
mov
dec
push
stos
add
testl
movsl
inc
mov
mov
and
jne
loopne
stc
pushf
js
pop
lock
jbe
inc
inc
test
or
add
test
fdivp
flds
pop
or
pop
lret
ret
add
ljmp
pusha
mov
mov
cmp
lea
les
cmp
out
decl
jl
adc
mov
push
jmp
sbb
inc
mov
sub
fimuls
clc
aas
xchg
mov
fistpll
in
xorl
xchg
jbe
addr16
or
ret
xchg
popa
movsb
daa
adc
push
jbe
out
movsb
jb
push
adc
roll
xchg
inc
add
dec
mov
mov
xor
adc
jmp
mov
sub
adc
and
pusha
rolb
dec
or
mov
call
enter
dec
or
in
lret
insl
dec
sub
add
cmpsb
fstpt
or
rcll
mov
adc
jecxz
cmp
jmp
sbb
adc
in
add
pop
adc
cmpl
idivl
jl
hlt
cld
sub
add
mov
cmp
jo
dec
adc
sbb
fdivrs
push
adc
pop
out
aam
sbb
dec
test
fists
test
cmpsl
pusha
dec
mov
pop
arpl
cmc
xlat
cmpsl
scas
and
mov
mov
jno
shll
imul
js
jmp
cli
inc
ljmp
sub
cmp
add
mov
add
fimuls
fs
ret
or
add
dec
mov
dec
inc
xchg
xchg
imul
negl
jmp
movsl
push
dec
packuswb
mov
daa
jecxz
inc
in
adc
add
in
ret
test
pop
ficoms
sahf
loopne
jno
call
pop
and
sub
xchg
fcmovb
push
repnz
call
es
shll
scas
andl
pop
adc
push
push
inc
stos
push
add
lock
xor
push
mov
fisubs
adc
pop
js
insl
xorb
or
mov
rol
or
cltd
icebp
sar
scas
xchg
add
push
pop
xchg
jmp
shr
inc
push
fildll
push
mov
fiaddl
fwait
cwtl
fildll
lret
xchg
mov
mov
or
in
push
mov
inc
add
mov
scas
ret
add
or
add
arpl
dec
inc
mov
add
addb
div
out
add
orl
xchg
in
dec
xor
fdivrl
cltd
mov
loope
jg
int
and
xor
scas
ss
pop
shll
mov
addr16
adc
es
xlat
and
arpl
mov
add
loope
and
inc
pop
mov
xor
and
test
adc
ret
cmp
ss
notl
stos
jp
inc
sar
in
mov
push
mov
lds
pop
sbb
call
push
xor
push
rolb
inc
fdiv
and
pusha
fstps
and
in
ret
pop
inc
gs
xchg
cwtl
imul
push
xchg
dec
jp
sub
push
rcll
inc
mov
inc
mov
add
mov
mov
fidivrl
push
out
sbb
cs
sbb
cmp
es
insl
push
loopne
add
setns
xchg
pop
cmp
iret
lret
push
mov
xchg
andb
fadds
cli
sbb
scas
sub
mov
mov
xlat
mov
lahf
dec
cmp
dec
test
cmpsl
in
notl
call
lods
shll
mov
je
xor
and
sub
and
pop
sbb
sub
jmp
and
sbb
ret
pop
add
add
movb
mov
sub
mov
push
jb
mov
cmp
sbb
outsl
inc
icebp
mov
popa
sub
mov
rolb
int3
loope
cli
or
mov
fsubrs
int
pop
jp
or
sbb
fisttpll
stos
mov
loopne
push
push
or
sbb
inc
add
pop
test
fs
aam
repz
add
sub
push
testl
push
lods
sbb
dec
rcr
comiss
mov
flds
pop
add
cmpsl
sbb
lods
not
ljmp
pop
push
jno
nop
add
inc
pop
dec
or
sbb
cmpb
and
les
inc
xor
lods
or
sysexit
inc
and
sub
stos
lock
push
sti
pop
je
or
jmp
pop
xchg
jmp
adcb
movl
aam
sbb
cli
push
nop
xor
lods
inc
adc
fldt
cmc
insl
std
mov
scas
xlat
dec
jl
addl
cmp
mov
adc
or
pop
mov
jmp
xchg
js
jnp
cmp
daa
xor
dec
jge
push
fnstenv
mov
mov
inc
pop
jmp
and
adc
add
mov
adc
and
loope
pop
loope
fstp
sub
pop
fst
add
cli
ja
enter
jge
cs
dec
and
addl
add
pushf
cli
push
jmp
add
jne
inc
mov
ret
sbb
leave
xor
cmp
push
add
test
pop
pop
add
test
popf
add
xchg
jne
jmp
ljmp
mov
sahf
movsl
xchg
add
xchg
nop
andb
popa
lret
leave
jl
xor
das
stos
xchg
cmc
jbe
invd
mov
mov
add
inc
dec
push
push
leave
or
pop
pushf
and
ljmp
sbb
test
imul
push
ret
es
pop
jle
inc
imul
cmp
add
xchg
ficomps
out
stos
sarb
inc
stc
shll
xchg
add
push
ret
pop
xor
xor
pop
cmp
aam
push
pop
add
rcrb
and
add
push
int
pop
rcrb
fstps
xor
call
sbb
out
cmpsb
js
mov
fmuls
adc
es
add
xchg
popf
out
inc
and
scas
lock
movsb
inc
fstps
out
sbb
shrl
ljmp
pop
pusha
inc
add
mulb
lock
adc
mov
aad
cmp
mov
aad
jb
cwtl
and
inc
adc
call
push
into
dec
cmp
aaa
sbb
lock
add
push
loop
cli
sbb
jmp
sbb
psubsb
mov
mov
int
mov
push
or
adc
or
shlb
outsb
faddl
adc
ds
mov
xor
addb
adc
add
pop
mov
lret
mov
loopne
mov
adcb
add
adc
fistpl
mov
repz
jecxz
movl
mov
inc
orb
inc
iret
adc
add
jne
test
add
xlat
cli
ret
add
ficompl
incb
sahf
add
out
add
add
or
add
xor
dec
pop
xchg
in
adc
cmp
push
adc
fmull
add
mov
or
inc
test
popf
cmp
mov
push
enter
in
push
or
loop
das
xchg
sub
test
dec
lock
addr16
ret
inc
jne
push
lods
pop
pop
dec
pop
fistl
dec
add
push
enter
dec
ror
sbb
mov
popf
jne
scas
add
jecxz
leave
xchg
enter
mov
test
loope
in
scas
add
loopne
out
jl
sbb
and
xchg
push
test
les
pop
shlb
lea
fwait
pop
sub
shlb
cwtl
addr16
dec
pusha
dec
cld
adc
hlt
push
lock
or
sub
sbb
push
xlat
jno
and
mov
xchg
xor
jg
inc
mov
loopne
sub
movsb
test
pop
and
mov
sbb
xor
fs
rclb
int3
test
push
les
jo
or
aam
pop
xchg
sbb
fmuls
add
and
rorb
inc
fdivrl
add
inc
or
adc
sub
psubusw
push
dec
mov
xchg
les
pop
aas
lahf
fadd
js
shl
clc
aaa
rolb
sub
inc
pop
js
jne
push
adc
insl
xor
repnz
dec
rcr
cltd
inc
ficompl
into
inc
addl
mov
fdivl
fwait
push
push
test
inc
outsb
push
les
push
callw
add
adc
rolb
xor
push
subb
push
push
xchg
cmp
stos
adc
xor
xor
jae
cmc
xor
mov
js
mov
roll
push
rcll
rcl
push
dec
mov
mov
out
push
cmp
and
xchg
loop
lea
ljmp
aad
imul
shlb
push
xchg
mov
aam
mov
mov
cli
cld
dec
push
jmp
inc
and
cmpsb
lea
cmp
xor
add
push
flds
mov
das
out
jmp
or
push
add
aad
and
jnp
sarl
js
pop
inc
mov
ficompl
inc
add
ljmp
xor
ss
shlb
jo
inc
inc
es
ja
or
push
mov
scas
fsubl
mov
ret
pop
mov
mov
push
sbb
imul
fisttpl
into
stos
or
pop
dec
xchg
cmc
fistps
testl
aas
jmp
int3
and
sahf
push
aaa
frstor
vhaddps
shll
outsb
jmp
pushf
cmp
and
mov
sub
movsb
pop
adc
fnstenv
pop
bound
adc
aad
js
paddsb
adc
lods
sti
and
test
outsb
pusha
sbbl
xor
jnp
daa
int3
dec
inc
xchg
dec
lds
hlt
out
sub
dec
xor
jmp
or
inc
push
fidivrs
loope,pt
sub
ds
inc
push
add
shlb
inc
enter
adc
out
sahf
cltd
add
lock
add
add
mov
cmpsb
push
mov
roll
jmp
or
scas
mov
fistpll
loope
push
clc
rorb
mov
pop
adc
pop
lcall
cli
pushf
xchg
push
mov
or
cld
imul
sub
shll
xor
fidivrl
movups
inc
cwtl
bound
sub
test
inc
mov
sub
je
rolb
fsubs
sub
mov
icebp
pop
add
clc
out
pop
inc
sbb
clc
xor
mov
jmp
sub
xchg
mov
or
dec
push
adc
mov
iret
or
inc
sbb
fs
jg
je
inc
loopne
call
lea
mov
sbb
xchg
imul
adc
or
cmp
pop
mov
lds
inc
mov
and
pop
adc
roll
mov
addr16
adc
add
cld
mov
adc
out
and
sbb
cld
and
in
mov
pop
push
sbb
mov
jge
mov
mov
inc
jns
push
or
ja
sbb
or
mov
pop
and
mov
ffree
push
or
or
sbb
fisubrs
insl
pop
icebp
pusha
outsl
inc
adc
mov
cmp
inc
mov
pop
push
das
aad
fadd
sbb
aam
sub
sbb
jmp
faddp
mov
sub
sbb
rorl
insb
push
push
jmp
call
dec
sbb
into
je
clc
loopne
out
xadd
cmpsb
mov
scas
cli
xchg
sbb
push
sub
imul
push
cmp
dec
dec
movsb
dec
xchg
mov
xchg
dec
xchg
pop
sbb
ret
addl
xlat
sbb
dec
clc
xor
pop
decl
jmp
mov
pop
ja
mov
lahf
pop
mov
xor
adc
lock
lods
mov
int3
clc
mov
ficoms
aad
clc
jb
imul
cwtl
sarb
and
cli
mov
popa
xor
dec
dec
addb
scas
xor
rorb
xchg
adcb
jmp
inc
fldenv
pop
in
in
fmul
xor
insb
mov
bound
jmp
lods
add
sbb
add
call
push
jmp
push
rolb
xchg
sub
mov
xchg
ds
aaa
test
pop
add
mov
daa
fnstcw
dec
add
mov
imul
cmp
les
ret
mov
xor
stos
lcall
xlat
mov
dec
add
loope
decl
pop
addr16
pop
pop
mov
mov
dec
jp
add
sub
aas
aaa
add
inc
cmp
rclb
cmpsb
pop
aam
test
addb
or
mov
lds
fldt
cltd
lcall
aas
add
test
mov
pop
or
or
inc
add
in
lcall
jmp
sub
xorl
iret
pop
sub
dec
sarb
or
fildll
mov
sbb
xchg
movsbl
stos
clc
mov
add
push
call
imul
cs
mov
adc
and
sub
das
je
bound
jge
enter
or
mov
dec
lea
mov
outsl
in
mov
das
mov
cmpsl
sub
ret
pop
aaa
jb
repz
addr16
mov
cmpsl
aam
pop
xchg
mov
ret
rolb
lods
aas
nop
stc
mov
in
mov
sbb
lock
pop
or
add
hlt
hlt
inc
pop
scas
enter
cmp
push
popa
cld
sub
pop
push
add
sub
sub
mov
fcoml
mov
stos
adc
movl
pop
jne
bound
or
dec
rorb
inc
enter
jnp
fwait
cmp
or
enter
hlt
stos
cmc
jb
add
pop
or
add
clc
jns
jae
inc
xor
fisttpl
pusha
add
adc
cmp
rorl
pop
sbb
or
ficoml
lea
jno
add
call
sub
rol
mov
jp
icebp
lods
inc
in
pop
popa
or
shrb
xchg
jle
das
rcr
push
adc
adc
clc
and
rol
sub
cmp
or
sub
pusha
clc
cs
push
addl
loop
cmc
mov
repz
cmp
sbb
inc
mov
push
aas
rolb
mov
sar
mov
lock
xchg
and
call
or
and
test
mov
out
gs
or
dec
xchg
adc
mov
adc
pop
loope
mov
push
aam
test
ljmp
push
into
cli
shll
pop
int3
out
or
add
mov
add
jno
push
adc
paddw
xchg
add
push
sbb
outsb
cmpsl
jbe
or
sub
xchg
fsubs
outsb
in
fwait
dec
insb
pusha
jne
pop
mov
xor
mov
dec
lret
loopne
movsb
ret
int3
and
push
xchg
outsl
adc
mov
in
add
in
movsl
test
lcall
rolb
sbb
cmp
adc
ja
in
xor
insb
sti
add
inc
adc
adc
test
fsubrp
and
pop
add
fidivrl
pop
xor
push
rcrb
loopne
push
xchg
mov
jns
call
mov
mov
rclb
movb
inc
lock
push
dec
fdiv
add
xchg
sbb
pusha
nop
and
out
je
js
xor
cmp
stos
jbe
sbb
and
jg
je
fstl
das
cmpsl
sbb
and
sub
pop
ret
inc
fcoms
inc
add
ret
cld
in
in
add
test
ret
jl
sub
ret
inc
mov
js
mov
addb
sbbl
loope
dec
cmc
or
push
pushf
out
imul
sarl
or
adc
aad
mov
mov
nop
and
ret
lahf
cltd
push
cmp
aam
jmp
jbe
insl
cmp
mov
jo
test
push
xor
push
int
cmp
lret
adc
loope
or
bound
jg
das
and
pop
jmp
negb
popf
lock
sbb
iret
in
jbe
popa
in
sub
mov
jl
pop
push
shlb
into
jle
xchg
jmp
push
xor
jmp
enter
cmp
or
clc
sub
dec
in
js
or
aas
icebp
sub
ret
push
push
pusha
pop
pop
clc
imul
xchg
icebp
mov
arpl
dec
add
call
mov
cmpsb
shrb
fdiv
pop
or
imul
adc
xor
xchg
adc
mov
test
aad
add
xchg
movb
rcl
xchg
cmp
fstpl
pop
xchg
sti
cmp
daa
arpl
call
movsb
lock
cmp
sbb
pop
sbb
mov
xor
push
les
jo
pop
popl
sbb
loopne
mov
es
cmp
push
inc
mov
jne
outsl
dec
push
js
in
add
aam
aad
dec
sti
pop
fsubs
mov
shll
jle
cmpxchg
xchg
cmp
dec
lret
jl
popf
mov
sbb
sub
rdmsr
push
xchg
shll
addl
aad
add
mov
push
addr16
jle
sub
jnp
call
xchg
insb
push
andl
sbb
push
sbb
cld
push
sbb
icebp
in
adcl
paddusb
sbb
in
add
ret
jns
xor
xor
dec
into
lods
test
cld
les
pushf
push
mov
nop
or
icebp
call
adc
sahf
insl
cltd
mov
aaa
test
adc
adc
sarb
add
ret
pushf
xchg
into
out
sbb
movb
lods
cwtl
call
xor
xor
pop
movsl
dec
cmp
push
inc
dec
inc
mov
dec
shlb
dec
loopne
mov
inc
push
xchg
inc
jl
data16
test
ljmp
push
add
and
lcall
jge
fcompl
ljmp
dec
sub
xor
mov
pushf
add
sub
hlt
aaa
test
lods
xchg
add
push
daa
push
icebp
in
and
or
inc
dec
shl
sub
jl
sbb
add
add
icebp
jle
xor
stos
jo
push
mov
pop
xlat
jecxz
aas
push
push
frstor
xlat
sbb
lret
loop
test
adc
jmp
sbb
mov
adc
cmp
repnz
cltd
ret
add
inc
aam
pusha
add
or
pop
in
xlat
mov
cmp
cmp
clc
mov
jno
mov
scas
adc
es
or
icebp
daa
push
pop
clc
lret
cld
flds
and
inc
adc
cli
loope
lock
and
xchg
xor
xchg
jmp
sub
mov
mov
test
push
loope
lds
sub
push
cwtl
push
push
notl
xchg
aaa
popf
adc
push
jp
movsb
pop
jmp
mov
or
cmc
push
iret
or
sub
dec
mov
cli
cmc
out
stos
xchg
inc
fnstsw
fidivs
mov
les
jno
lcall
adc
and
clc
xchg
jle
arpl
cmp
in
and
dec
cwtl
dec
ljmp
inc
iret
sbb
or
or
les
jbe
test
out
loop
or
jno
add
jnp
jp
push
mov
lods
aaa
fiadds
rol
xchg
pusha
sub
loop
cmp
mov
mov
mov
add
inc
pop
mov
jge
xor
inc
das
cmp
jle
sbb
mov
xor
lret
loope
clc
push
dec
inc
xchg
and
shll
sub
cld
lret
rolb
inc
lods
outsb
shlb
xor
out
test
add
cltd
lods
push
aad
cs
cld
xor
add
dec
adc
or
addr16
fcmovnbe
lds
push
lock
cmp
movsb
pop
subb
rorb
mov
adc
loop
add
cld
add
and
inc
dec
pop
out
mov
jbe
in
push
and
jb
xchg
mov
push
push
pop
push
pop
mov
aaa
cs
fcoml
inc
jle
ficompl
hlt
jmp
bound
lods
push
cwtl
adc
cmp
loopne
and
sbb
jae
call
push
das
add
push
lods
movsb
bound
shll
cld
and
imul
rcrl
push
and
or
mov
fstl
loope
outsb
dec
inc
filds
adc
dec
jb
fsubrs
ja
push
mov
imul
adc
iret
aas
ficoml
inc
scas
mov
push
pop
lds
xlat
test
mov
sub
loopne
lock
cmp
lock
mov
push
pop
fcmovnb
aam
and
jnp
loope
sbb
mov
adc
mov
sbb
jle
add
test
sbb
out
int3
and
mov
add
cmp
jl
add
ret
add
pop
push
add
add
dec
push
pop
xor
add
dec
jne
cmpsl
and
or
sbb
in
fdiv
out
jmp
dec
divl
ljmp
mov
add
mov
xchg
push
fcomp
inc
rolb
add
out
push
inc
push
cli
jle
cmp
push
sub
lock
mov
out
adcb
inc
enter
sbb
imulb
push
arpl
daa
add
pop
add
mov
cld
testb
add
lret
or
callw
dec
lock
sar
sub
ret
add
inc
orb
pop
add
and
fsubs
or
aas
sub
adc
jnp
inc
jecxz
or
fists
sbb
sub
sahf
jo
hlt
in
daa
push
int3
hlt
aad
adc
or
add
loopne
xchg
xor
pop
aaa
mov
inc
add
scas
adc
push
xchg
cmp
dec
mov
inc
mov
jnp
xchg
xchg
lds
or
lods
jne
les
inc
xor
imul
inc
add
fidivs
fldenv
repnz
pop
hlt
sbb
adc
push
fidivs
add
mov
test
popa
pop
cmp
lock
mov
cs
pop
fistl
sbb
mov
cmp
lock
mov
cmp
pop
mov
dec
sti
add
rorb
sbb
mov
lea
mov
lea
mov
add
dec
sti
cltd
pop
xor
and
addl
ret
cmpl
scas
aas
pusha
jno
fistpll
add
inc
pusha
movsb
les
out
push
dec
sub
andb
cmp
mov
fsubl
cmc
xor
out
add
inc
neg
insl
js
pop
adc
mov
sub
inc
and
incb
nop
sub
pop
call
mov
lock
rcll
adc
test
and
push
fisubs
lahf
cli
cmp
test
cwtl
add
mov
jge
sbb
shl
fcmovu
dec
sbb
mov
adc
pushf
loopne
add
repz
add
jl
and
pop
inc
ljmp
icebp
jmp
add
add
imul
sub
aam
mov
loopw
sbb
insl
jnp
adc
inc
or
insl
fstpl
lock
add
and
test
fistps
jo
or
xor
cmc
cmp
cmp
popf
cmp
ss
js
stos
or
and
ret
xor
outsb
sbb
jb
cmpl
adc
into
rolb
push
xchg
push
fimuls
cmc
test
mov
fxtract
imul
adc
dec
sbb
xchg
rcll
test
inc
add
aaa
jp
stc
pop
pusha
add
cmp
sub
insb
and
xchg
cmc
outsl
dec
xchg
test
mov
xor
pop
dec
movsl
add
mov
xchg
mov
fnstenv
aaa
dec
daa
mov
cmp
cmp
aam
rorl
jl
adc
sbb
adc
fistps
out
outsl
popa
loopne
or
mov
push
iret
add
adc
and
fldenv
mov
sbb
dec
vmaxss
mov
into
pop
push
ss
movsl
cwtl
aaa
push
jmp
les
test
mov
add
nop
lds
repnz
cmp
cmp
mov
cmc
nop
add
push
std
je
push
test
ret
hlt
cwtl
cmp
inc
sub
ret
jl
jo
pusha
and
inc
dec
dec
mov
ja
pop
loopne
sahf
scas
or
test
hlt
ljmp
jle
mov
movsbl
xor
or
add
push
pop
cmp
push
fwait
lock
mov
pusha
mov
push
mov
xchg
xchg
fcompl
aas
pushf
mov
orl
gs
test
or
cs
jp
fsubl
adc
or
aad
xor
sbb
and
pop
sti
xorl
pushf
jg
movnti
ss
mov
daa
or
push
or
add
in
nop
pop
mov
xchg
fmuls
das
jg
mov
push
and
arpl
ret
push
cmc
xlat
or
add
cmp
xlat
in
add
adc
test
push
sub
jo
xchg
jp
imul
mov
xor
xchg
cwtl
or
enter
adc
and
pop
jle
fdivp
shr
inc
faddl
stos
mov
or
dec
testb
jecxz
xor
fimull
or
add
adc
xor
push
mov
in
jg
add
add
jl
sbb
and
fldt
mov
cli
hlt
jecxz
mov
pop
xchg
and
xor
jmp
daa
je
dec
loopne
and
sbb
out
mov
call
inc
test
mov
cmp
mov
sahf
adc
cmp
pop
shr
aam
fcomps
or
inc
mov
or
or
adc
aas
hlt
dec
sti
aas
fsubrl
loope
sar
loop
loop
nop
adc
nop
inc
mov
mov
lea
inc
cmp
fbstp
movaps
adc
daa
jae
cltd
loopne
or
mov
and
xor
cli
inc
sub
inc
and
or
add
in
xor
sub
mov
sbb
or
hlt
pushw
into
or
repnz
adc
or
or
adc
dec
mov
daa
mov
pop
add
sbb
adc
mov
pop
jbe
mov
test
aas
nop
add
loope
daa
imul
mov
or
dec
mov
mull
test
adc
lods
adc
bound
push
mov
mov
rolb
rolb
imulb
add
ja
inc
jp
cmp
add
xchg
push
movsl
cmp
push
adc
mov
push
andl
adc
mov
ret
divl
pop
dec
cmp
dec
mov
sbb
mov
dec
ds
inc
add
scas
xor
mov
out
ds
push
fs
lods
pop
cmc
scas
mov
cmp
fistps
or
shr
sahf
jo
push
dec
outsl
in
fsubrs
jle
lret
push
or
add
adc
cmpsb
sub
sub
loopne
test
enter
dec
mov
add
lea
test
mov
mov
dec
adc
mov
add
add
into
sbb
pop
xchg
sahf
out
jle
ret
fsub
insl
icebp
add
add
cmpsb
jb
mov
rcr
sub
insb
mov
pop
or
xchg
mov
push
in
xor
daa
cld
imul
cwtl
ret
xchg
xlat
test
jne
add
sbb
fidivl
dec
and
inc
mov
mov
sbb
xchg
mov
push
jg
and
push
inc
fiadds
jno
sarb
adc
loopne
pop
push
xor
sub
add
cmp
adc
jmp
xor
clc
out
xlat
mov
mov
or
scas
inc
enter
popf
push
mov
enter
mov
mov
rcrl
or
fdivrs
adc
inc
sbb
xor
xchg
mov
fildl
push
lock
enter
scas
sub
mov
ss
js
xchg
dec
loopne
add
ret
pusha
sbb
fadds
enter
pop
jecxz
enter
and
adc
lock
xchg
and
cmpsb
jo
sbb
push
addr16
aam
jns
or
jmp
and
test
dec
or
inc
stos
and
push
mov
repnz
cmp
insl
sbb
sarl
sbb
add
jo
lock
aam
push
dec
mov
je
push
rorb
addl
xchg
push
inc
pop
jmp
pushl
dec
jbe
jbe
punpckhwd
pop
clc
es
ret
daa
sbbb
call
sub
sarl
push
jmp
int
ret
add
cs
adc
mov
mov
lea
pop
xchg
push
in
ret
out
adc
jb
push
mov
add
addb
add
sub
xchg
test
add
cmp
xchg
sub
shlb
mov
add
outsb
add
add
or
notl
inc
xchg
push
rcrb
or
and
adc
push
sbb
adc
mov
ljmp
leave
jp
addl
daa
repnz
ret
xlat
icebp
pop
jb
notl
pop
sub
cmpsb
cmpsl
or
ja
cmp
jo
mov
cld
xor
int3
lock
push
push
dec
pusha
rolb
loope
stos
outsl
sbb
xchg
jmp
add
repz
ficompl
add
ds
dec
nop
push
movsl
adc
add
push
add
mov
les
sub
add
addr16
pop
jp
jb
lods
jge
fcmovnb
push
pop
lock
mov
xor
add
pop
push
shlb
cs
mov
sbb
inc
sbb
inc
or
pusha
hlt
jnp
mov
jo
stos
mov
add
mov
call
clc
push
call
fsubp
ret
inc
sub
outsl
cmpsl
je
aad
inc
lcall
inc
in
xor
jp
popa
jmp
add
loop
push
push
lret
scas
mov
popa
and
sub
or
sahf
sub
xor
sub
movsb
sbb
lret
mov
cli
adc
ja
xchg
inc
cwtl
ret
cwtl
movl
xchg
sbb
arpl
fmuls
movsl
mov
add
mov
adc
push
in
ret
imul
scas
sbb
xor
xor
add
dec
inc
or
fsubrl
jl
addr16
fsubl
filds
rclb
xlat
outsl
xchg
pop
notb
mov
push
test
ss
loope
xchg
sbb
cli
xor
xor
sub
in
ret
aaa
test
mov
stos
pop
in
out
sti
dec
xor
sbb
insb
and
fldt
dec
and
lahf
xchg
push
jnp
cmp
mov
les
enter
cld
loopne
loopne
inc
stos
sahf
adc
xor
jae
add
repz
mov
add
and
and
lds
fisttpll
xchg
jo
outsl
and
xor
jp
jmp
inc
add
pop
sarb
leave
jo
jecxz
imul
shrb
test
aam
mov
lret
das
addb
sbb
loop
cmp
ret
xor
and
ds
xor
xor
cltd
out
lds
in
or
stos
pop
mov
sbb
insb
xchg
int
inc
mov
clc
add
ja
out
jmp
clc
dec
jge
ss
mov
ret
jbe
xor
push
pop
sub
fadd
inc
divl
xor
lret
xchg
mov
jo
add
add
lods
fs
add
fs
mov
popa
ja
and
cli
es
movb
xor
dec
shlb
push
add
xchg
test
dec
lock
add
loop
movsb
sbb
sub
push
adc
ret
inc
data16
or
call
jle
sub
outsl
mov
and
dec
fucom
inc
clc
or
rclb
jb
pop
jecxz
adc
jae
stos
into
and
sub
inc
mov
ret
dec
xorl
les
cmpsb
pop
ret
ret
insl
push
add
out
pop
sbb
mov
add
or
jg
add
add
or
sbb
add
and
jp
das
ja
push
mov
push
jmp
or
fcmovnbe
add
jo
mov
lds
jle
hlt
push
add
mov
push
pusha
rol
fwait
and
dec
enter
jbe
cmp
loopew
fdivr
and
push
jmp
adc
adc
and
adc
repnz
repnz
xchg
push
sbb
daa
dec
outsb
jmp
pusha
lods
sti
shlb
and
add
cmc
dec
inc
cmp
mov
add
mov
andl
jno
push
add
jle
adc
cmp
loop
imul
pop
push
or
int
jb
mov
call
mov
push
sub
push
call
add
and
pop
rcrb
mov
jl
test
mov
add
and
xor
sub
mov
lahf
lock
lock
ds
adc
mov
loop
push
sbb
or
cmp
xchg
in
cmp
xchg
hlt
dec
mov
sahf
push
popa
ret
sbb
stc
jnp
addb
or
mov
cmp
jmp
fnsave
mov
rolb
push
outsl
pop
test
sub
pop
inc
or
adc
arpl
es
xchg
scas
adcl
addr16
or
mov
outsl
pop
mov
pop
cld
push
xor
push
out
add
adc
orl
mov
ds
in
xacquire
xchg
cld
ss
mov
or
xchg
push
inc
add
add
test
push
mov
out
cld
add
push
std
test
dec
and
aaa
lret
ret
popl
das
push
jmp
mov
push
outsb
lret
loopne
sarb
dec
js
call
loop
inc
mov
test
jmp
push
push
call
pop
call
push
jbe
std
cmp
clc
sub
sub
sbb
cmp
or
inc
adc
mov
aas
mov
test
test
jle
jmp
and
outsb
dec
or
jbe
pop
inc
lock
mov
test
sub
gs
into
jmp
rcrb
xor
pop
loope
sti
dec
xchg
nop
sbb
pop
in
jmp
mov
mov
daa
cmpb
add
add
add
je
inc
and
ret
pop
iret
stos
mov
jmp
pop
ret
js
push
loope
clc
stos
mov
xor
inc
adc
add
adcb
lock
xchg
std
sub
xchg
adc
xchg
sub
xchg
sbb
add
pusha
hlt
dec
sarl
cmp
mov
pop
mov
mov
xlat
fstpt
int
call
rcll
cwtl
repnz
cld
pushf
mov
call
sub
pop
sbb
xrelease
add
icebp
or
add
and
mov
cmp
sbb
nop
sub
cli
or
adc
pop
mov
add
add
cmp
loope
push
test
sbb
pop
ret
into
aaa
xchg
xor
and
movsl
test
pusha
rcrb
lods
ljmp
out
movsl
adcl
jbe
test
jae
xchg
xor
pop
sbb
pand
popa
or
push
adc
lahf
adc
pop
ret
sar
insb
xchg
or
arpl
inc
call
adc
push
adc
jnp
sbb
adcb
mov
fwait
mov
sub
cmp
sbb
out
mov
cmpsl
jecxz
mov
pop
daa
dec
lock
dec
add
test
jne
dec
mov
mov
les
cmp
jno
sbb
lret
or
pop
fnstsw
arpl
data16
xor
or
mov
cld
test
and
mov
mov
mov
loop
outsb
inc
stos
test
ljmp
pushf
and
mov
or
movsb
jecxz
jb
sbb
mov
mov
stos
jno
es
inc
loope
or
mov
cld
out
jp
cmpsb
jb
pop
cld
pop
sbb
mov
rclb
push
fisttpl
pop
js
xor
adc
aaa
in
push
leave
sbb
lret
xchg
cmp
xor
xor
add
pop
mov
ja
insb
and
adc
in
add
inc
test
repz
popl
xchg
mov
jmp
or
test
ja
jge
mov
pop
clc
loope
push
js
adc
xchg
sub
rclb
lock
and
lea
sub
xchg
adc
xchg
dec
ret
inc
xchg
inc
sahf
into
mov
loop
aas
jmp
mov
test
es
mov
lahf
sbb
popa
pop
ja
sahf
test
cmp
loopne
pop
negl
mov
cmp
mov
mov
repnz
pop
addr16
mov
sub
mov
daa
add
das
adc
scas
pop
jge
inc
int3
adc
sub
mov
mov
orl
nop
adc
add
cmp
dec
outsl
xchg
and
lahf
adc
mov
lret
ret
add
mov
jle
into
sub
push
repz
test
push
aam
sahf
subb
mov
pop
cmp
jo
mov
das
jns
mov
iret
inc
mov
sahf
pop
repnz
mov
andl
repz
imul
fldt
std
add
nop
jmp
in
mov
push
les
xor
aam
cmp
fmuls
les
mov
add
andb
adc
cltd
lret
add
jl
rcll
add
ret
int3
mov
repnz
mov
rcl
adc
xchg
adc
xor
pushf
xor
xor
rcl
fisubs
in
add
add
and
jno
loope
sbbb
xchg
loopne
lcall
fsub
lret
or
aad
lock
or
neg
add
add
dec
cmpsb
out
hlt
hlt
andl
decl
adc
stos
sub
adc
pop
xchg
xchg
adc
adc
clc
cmpsb
dec
mov
dec
mov
pop
add
int
inc
push
xor
and
sbb
subl
cmp
mov
adcb
in
xor
inc
sbb
sbb
push
bound
aaa
imul
add
xchg
pop
add
mov
movsb
stos
sbb
sbb
pop
xor
add
jns
scas
add
dec
loop
inc
fiaddl
pop
lods
sti
push
sub
out
icebp
cmpsb
insb
cwtl
or
sbb
mov
sub
loop
jmp
mov
sbb
fcmovu
push
cmpsb
js
inc
sub
ret
dec
inc
xchg
js
jbe
push
lds
jge
test
dec
dec
inc
into
clc
arpl
call
inc
cmpsl
jo
push
xchg
fwait
mov
rcrl
scas
mov
sbb
insl
aad
lods
adc
mov
sub
push
and
stos
xchg
inc
mov
mov
mov
push
dec
dec
add
sbb
cld
jno
sbb
icebp
lahf
or
or
adc
cld
popa
adc
jno
call
rcrb
loop
inc
cld
push
add
dec
xor
add
outsl
adc
lea
xchg
jno
mov
jne
sub
popa
add
jg
test
ja
sub
popf
imul
dec
push
xor
push
adc
addb
dec
mov
adc
dec
jbe
or
pop
jo
lods
sbb
insb
and
inc
cmp
ja
mov
popf
insb
ljmp
pushf
loope
sub
add
dec
ret
imul
add
scas
ffree
mov
pop
pop
loop
jb
sub
inc
and
call
push
mov
test
subb
lret
ja
xor
decb
sbb
jbe
aaa
fstps
sbb
cwtl
mov
mov
mov
jne
sbbl
aad
loop
adc
gs
addb
and
adc
jg
das
js
add
cltd
imul
push
sub
js
and
xchg
dec
lret
mov
lock
cmp
pop
movsb
add
decl
pop
mov
out
cld
sbb
mov
push
les
mov
loope
or
adc
push
mov
inc
mov
fdivr
sbbb
lds
scas
ds
xchg
inc
cmpl
cmp
cld
adc
add
add
cmp
clc
lldt
jns
lcall
sbb
sub
adc
int3
xchg
aad
jmp
pusha
add
mov
mov
ljmp
inc
mov
shl
loope
mov
cli
jmp
cmp
call
lods
into
add
je
fsubrp
jmp
push
mov
and
fwait
lret
and
sbb
inc
orb
jecxz
mov
xor
sbb
test
fwait
xor
daa
ret
xchg
cmp
lods
pop
push
cmp
stos
adc
repnz
pusha
mov
fcmovu
clc
push
insb
fadds
push
shrb
pop
dec
dec
leave
pop
or
jmp
test
ja
testb
mov
das
mov
or
mov
in
cmp
addb
add
xchg
inc
jmp
test
jae
std
mov
lods
leave
aaa
cli
dec
adc
out
or
mov
rclb
lock
testl
sub
icebp
sbb
orb
popa
mov
das
adc
add
dec
push
stos
mov
xchg
pop
push
stc
push
xorl
je
sbb
lock
add
icebp
jb
repz
mov
fsubs
push
stc
jns
jnp
sbb
repnz
adc
add
icebp
xor
jmp
test
je
outsb
add
adc
push
dec
shl
lcall
cli
das
mov
ficoms
jnp
jp
loope
dec
dec
aad
sarl
xchg
outsl
cmp
jbe
stc
out
or
mov
xorb
cmp
movsl
or
es
xor
push
loopne
jnp
leave
movsl
xor
dec
fsubrl
imul
add
jne
fmull
sarb
cmp
pop
popa
adc
add
add
jp
mov
jbe
lock
fs
fisttpll
outsl
mov
mov
ds
jo
out
pop
loopne
inc
mov
repnz
inc
xchg
arpl
cmp
adc
div
and
and
cmp
and
lds
adc
sub
scas
ds
xchg
xor
mov
or
adc
xor
inc
or
push
add
dec
fdivr
test
ja
mov
mov
cmp
hlt
xor
out
xorb
push
daa
sbb
lahf
inc
or
inc
in
xchg
or
out
pop
cmpsl
dec
mov
mov
in
rorb
lock
lods
fcoms
aaa
xchg
xchg
sti
in
mov
aam
cmpl
mov
mov
pop
pop
mov
loop
sbb
adc
lret
sbb
adc
adc
scas
inc
aad
xor
or
cmpsl
hlt
outsl
add
mov
mov
test
sbb
jae
pushf
in
ret
and
shlb
shl
sbb
cltd
add
mov
adc
sbb
mov
push
push
sub
and
ss
inc
push
or
mov
mov
or
add
adc
in
cmp
adc
pushf
pushf
add
pop
movsl
cld
leave
jge
push
pop
fadds
ja
mov
ret
cmpb
inc
les
lds
inc
mov
jae
and
lcall
movsb
xchg
sti
push
cmp
outsb
mov
out
add
jle
arpl
inc
sbb
add
pop
fldt
inc
pop
add
ljmp
popa
and
add
js
jb
in
mov
xchg
cltd
jp
cmp
or
and
rorb
loop
dec
outsl
sahf
adc
or
int
mov
xor
jb
jmp
repnz
decb
or
rcr
fimuls
pusha
and
ja
pop
push
out
sbb
add
rolb
loope
test
and
addl
or
xchg
shrb
je
add
pusha
push
sub
cmp
jbe
push
xchg
lcall
mov
jbe
call
push
ficoml
mov
dec
xor
addb
outsb
loop
xchg
pushf
enter
dec
adc
mov
push
or
sub
pop
lea
fisubs
add
jmp
addb
inc
or
out
mov
push
sbb
sub
cltd
xchg
pop
adc
fisttpll
arpl
or
ret
loop
sub
fbstp
jns
inc
adc
jmp
out
mov
into
sbb
cmc
adc
adc
insl
mov
inc
sti
mov
pop
andb
jb
shlb
movsl
int3
xchg
mov
and
aaa
mov
das
lret
bound
xlat
nop
cmp
cmp
gs
int3
mov
inc
lret
adc
call
sysret
xchg
rcll
enter
cmc
pop
repz
push
dec
adc
jo
cmp
mov
rol
lahf
cmpsl
loopne
shlb
call
add
push
orl
inc
and
cli
add
loopne
mov
xchg
push
pop
dec
sbb
pop
movsb
dec
test
sub
repz
repz
add
mov
mov
lods
jmp
frstor
stos
sbb
add
push
rcl
ljmp
inc
adc
mov
in
into
and
js
fsts
fs
push
jb
and
sar
mov
jmp
iret
push
mov
imul
ja
sbb
mov
es
cmpsl
push
cld
sub
decl
add
push
es
adc
mov
call
jo
sbb
mov
adc
nop
pop
insb
fisttpll
mov
jne
mov
adc
mov
mov
fdivrl
sub
cmpsl
add
mov
lea
add
dec
adc
or
or
cmpsl
adc
and
push
sahf
scas
test
or
pushf
add
inc
lret
sbb
ljmp
or
add
dec
jecxz
mov
and
mov
outsb
mov
sbb
sahf
sbb
inc
out
mov
loope
adc
or
mov
stos
inc
mov
ja
ret
ss
bound
push
fld1
mov
pop
popf
sbb
or
push
push
lock
add
add
call
push
imul
icebp
inc
dec
test
mov
ficoml
pop
sbb
fmul
xor
or
or
push
aaa
stc
sbb
inc
lds
and
adc
shlb
inc
pop
adc
and
ja
add
mov
daa
test
outsb
orl
push
pop
nop
pop
pusha
loopne
sar
iret
sbb
mov
push
add
hlt
and
scas
add
dec
pop
sub
out
sbb
or
rorl
pop
inc
xor
pusha
dec
adc
negl
xlat
idivb
lret
push
dec
sbb
out
dec
jge
sbb
lea
lds
sarb
or
js
lret
imul
or
mov
andl
inc
or
xchg
dec
inc
dec
insl
xlat
js
loope
scas
jge
and
imul
add
mov
outsl
shr
aam
xchg
mov
sbb
jp
hlt
adc
jp
xor
lds
rolb
enter
out
ret
leave
icebp
ljmp
jo
cmp
push
push
arpl
or
loopne
push
les
adc
dec
adc
pop
push
sub
dec
mov
add
gs
adc
adcl
fld
cmp
cmpb
inc
push
ret
rorb
mov
pop
pop
mov
push
push
inc
adc
pop
arpl
cmp
cs
daa
mov
test
fcomps
inc
or
adc
jo
imul
scas
movsb
fbld
sbb
cli
aam
mov
mov
jne
inc
xor
sbb
fwait
add
xor
jo
das
or
aaa
lcall
mov
es
or
sbb
mov
ljmp
loopne
mov
or
fadd
out
addl
cmpsb
aam
pop
or
push
jge
jae
jmp
shl
ljmp
add
std
fisubs
outsb
or
dec
jo
adc
pop
pop
sarb
push
cli
repz
jl
sbb
shrl
loop
push
scas
pop
gs
sbb
fsubs
push
push
xor
mov
in
xchg
rcrb
add
mov
push
sbb
or
jo
inc
cs
and
test
mov
jae
ret
sub
mov
adc
or
push
sub
dec
scas
test
sarb
push
xor
push
arpl
add
leave
rcrb
into
xor
cmp
or
push
lock
or
sbb
pop
xchg
adc
loopne
int3
or
cmp
test
movl
dec
sbb
push
xchg
loope
cmp
push
ud0
jl
jne
adc
test
fcomps
fisttpl
and
sahf
mov
mov
xor
mov
inc
or
dec
cwtl
cmpsb
push
mov
sbb
xchg
and
loopne
mov
xchg
adc
jns
and
imul
jg
mov
scas
xchg
push
pop
and
loope
sar
add
aad
frstor
test
and
aas
adc
mov
dec
arpl
sbb
or
test
lock
xchg
int3
or
aam
and
ja
les
ljmp
stos
adc
xor
scas
mov
rol
dec
and
out
jb
dec
adc
dec
aad
es
mov
mov
bound
ret
add
add
fmul
jecxz
fdivrp
push
sub
cmp
sbb
aam
inc
test
add
xor
lds
flds
sbb
push
ret
push
nop
push
mov
pop
loopne
inc
inc
jmp
pop
fstpt
ret
or
jp
jmp
outsl
inc
and
pop
inc
in
stos
sar
xlat
inc
mov
push
mov
jae
jbe
and
adc
aam
xor
clc
jmp
test
sbb
addr16
mov
daa
loope
jb
outsl
xchg
inc
out
sub
movb
push
add
dec
insb
popa
xchg
cwtl
nop
rolb
pop
loope
lock
movsl
test
sub
in
adc
add
mov
mov
sbb
rcrb
fsubs
add
inc
dec
stos
mov
push
adc
sub
jbe
sub
lcall
or
sub
fadds
push
add
nop
call
xor
add
cmp
test
mov
push
roll
nop
imul
inc
imul
push
push
cmp
mov
push
call
int3
cmpsb
cld
dec
rcrb
daa
jle
ret
mov
mov
mov
enter
xchg
xchg
adc
xor
mov
mov
xchg
lcall
ret
js
loop
sub
rolb
ret
dec
adc
xlat
xchg
mov
lock
std
xorb
aam
ds
add
mov
jbe
popl
mov
mov
popa
scas
jecxz
mov
scas
push
ret
mov
dec
pop
sti
or
jne
pusha
jecxz
mov
push
test
aas
mov
jmp
outsl
mov
xchg
sbb
sbb
mov
fisubl
jnp
imul
jbe
mov
mov
xchg
pusha
adc
add
and
fmul
cltd
add
test
rcrb
outsb
inc
mov
or
test
dec
clc
mov
xor
adc
jmp
mov
pusha
arpl
ror
js
dec
pop
mov
rolb
mov
sbb
nop
icebp
mov
pop
pop
es
push
mov
xchg
jle
pop
push
out
fsubs
adc
mov
sbb
test
clc
jb
hlt
pop
stos
int3
inc
or
push
scas
lods
stos
xor
out
fldz
push
call
mov
out
lretw
jbe
and
jne
jecxz
sbb
mov
ds
mov
xor
mov
test
scas
les
lahf
or
fisubs
jmp
lea
xor
call
das
cmp
aaa
mov
push
fucomi
ljmp
xchg
cmp
gs
cmpl
shlb
movsl
xchg
hlt
je
js
add
sub
sub
jmp
pop
sbb
daa
sbb
push
jns
loopne
mov
call
add
add
sub
pop
mov
xchg
xor
rorb
mov
dec
les
jmp
xchg
add
cltd
cmp
call
add
loope
xchg
cmp
adc
fadds
or
cmpsb
xor
clc
and
movsb
inc
daa
pusha
fisttps
xor
push
shrb
xor
arpl
movsb
and
xor
or
sbb
imul
inc
mov
and
shrb
das
in
outsl
push
movsl
mov
stos
push
xlat
cwtl
cmp
std
mov
xchg
cmp
pop
lods
sub
adcl
shl
add
shll
adc
jo
jle
add
adcb
push
lret
xor
xlat
movb
adc
dec
add
jmp
fdivrl
xchg
movb
inc
and
out
mov
xchg
movb
add
or
pop
pop
mov
icebp
adc
aas
mov
mov
mov
jp
fcomps
inc
and
sub
je
or
sbb
add
cmp
push
mov
adc
add
add
roll
adc
cwtl
std
sti
mov
dec
xor
bound
loop
lods
xor
mov
lcall
add
or
adc
flds
add
ljmp
push
jne
xchg
push
add
dec
faddl
and
mov
lret
popf
push
stc
dec
adc
adc
ficomps
adcb
in
dec
popa
jo
jg
inc
pop
jle
repz
movsb
rorb
in
das
add
xchg
xor
xor
cmp
faddl
pusha
xchg
dec
enter
xchg
mov
cltd
xlat
das
and
pusha
push
xorl
or
std
jmp
add
imul
inc
and
push
js
cmp
push
ror
or
inc
sub
imul
adc
scas
add
mov
scas
xchg
or
rclb
outsb
xchg
pop
jmp
cmp
cwtl
fsubr
xor
in
push
adc
push
push
jne
pusha
dec
mov
cmp
xchg
nop
movsl
cs
and
in
int
jecxz
pop
add
cmpsb
testb
push
or
int
popf
xchg
les
lock
in
pop
subl
mov
mov
ds
movsl
test
pusha
shlb
flds
add
xor
and
popa
test
dec
inc
call
lods
icebp
cmp
xor
movsb
sahf
stc
loopne
push
sbb
jne
jge
out
loope
lret
jno
or
lods
mov
addl
rorb
push
add
push
sbbl
mov
sub
add
fisubl
sbb
jp
push
repnz
dec
mov
jo
faddl
sub
aad
inc
xor
sti
les
add
lahf
jo
sbb
loope
xchg
filds
icebp
jmp
icebp
out
cmp
dec
xchg
cmpsb
sbb
mov
enter
cld
or
pop
mov
ret
outsb
or
jmp
cmpsb
pop
in
ret
xor
les
hlt
sbb
std
daa
sbb
in
pusha
mov
xorb
or
xor
jns
add
or
insl
cmp
es
jp
add
or
xor
shlb
out
mov
sbb
mov
fdivr
or
mov
jmp
sbb
sbb
lods
adc
fs
inc
sub
xor
orb
ss
xchg
ret
inc
and
mov
in
fidivrl
push
enter
or
fsubl
mov
dec
sbb
arpl
and
test
jne
jle
out
fwait
incl
jb
ss
push
push
es
aaa
shrl
or
ret
dec
push
cmp
inc
pop
dec
fcomp
movhps
jmp
dec
call
dec
out
or
test
jl
or
ja
mov
mov
xchg
push
add
xchg
dec
inc
mov
pushf
or
jp
movsb
add
pop
xor
xor
loop
push
leave
pop
cmpsl
mov
hlt
into
je
push
mov
mov
sbb
ret
popa
loopne
xchg
xchg
adc
fidivrl
shrb
mov
add
pusha
movsl
lock
jmp
sbb
aaa
jo
nop
fistpl
xchg
mov
xorl
dec
pusha
add
or
jmp
popa
loop
jg
lea
fstpt
jb
mov
mov
push
dec
add
aam
cmpsl
add
aad
rolb
xchg
js
lock
push
mov
in
xor
je
dec
add
add
sbb
insl
add
lods
pop
xlat
popa
aas
push
mov
imul
dec
das
xchg
mov
mov
push
or
inc
fisubl
movsb
inc
negb
fsubs
add
sbb
andl
jbe
stc
and
sarl
or
dec
dec
add
sbb
mov
loope
test
dec
mov
lret
mov
hlt
push
pop
sbb
orl
lock
into
push
adc
push
or
push
out
in
sbb
rolb
in
dec
add
andl
sub
sbb
enter
rorb
push
and
scas
xor
popa
in
mov
dec
sbb
lcall
or
ljmp
iret
arpl
and
lcall
xchg
inc
rcrl
adc
add
shlb
jp
pop
inc
nop
cltd
cmp
jp
mov
mov
out
clc
sbb
adc
and
mov
lods
adc
sub
loopne
add
pusha
loop
js
push
ja
lea
fdecstp
fcompl
lock
aas
fcmovbe
nop
sahf
mov
add
xchg
sbb
xchg
xor
sub
jp
add
and
dec
repz
les
sbb
xchg
out
cmp
sub
movsl
int3
sub
test
dec
pusha
enter
rcrb
xor
loop,pn
xchg
scas
xchg
adc
and
orb
push
je
sbb
fisttps
dec
in
sub
inc
xor
xor
dec
call
add
add
inc
mov
sbb
sub
sahf
gs
adcb
and
inc
or
test
xchg
jp
xor
pop
rolb
and
lea
shrl
loop
and
add
cmpsl
mov
add
add
add
add
pushf
adc
loop
adc
cwtl
push
sbb
mov
sbb
adc
lods
test
and
inc
dec
or
daa
dec
jecxz
jbe
lcall
push
add
add
sbb
mov
pop
sub
daa
andb
movsb
popf
mov
inc
inc
rcrl
dec
pop
dec
or
dec
lock
sbb
ret
push
rcl
rolb
shlb
jo
fdiv
mov
js
shrb
arpl
stc
movsl
pusha
add
inc
cmp
adc
test
scas
add
fwait
mov
pop
jmp
fnstsw
mov
jno
ror
fwait
mov
call
movsb
mov
lods
dec
outsb
mov
lea
or
push
adc
pop
or
xchg
lock
add
fwait
insb
ss
or
add
add
test
stos
inc
cmovne
in
cli
adc
add
cmp
cmpsb
idivl
js
inc
xor
pop
xchg
mov
or
out
movsb
fcmove
enter
jl
insl
push
dec
loope
dec
and
nop
imul
imul
into
jne
add
sbb
test
pop
test
add
dec
and
mov
cmpsb
xor
adc
and
xor
out
das
inc
int3
jno
aas
cwtl
fs
dec
je
popl
outsb
jp
mov
mov
out
sbb
and
ljmp
into
pop
pusha
call
rcll
enter
outsb
imul
pop
enter
add
jmp
add
push
loope
std
inc
xor
add
adc
jo
je
and
fdivs
fisttpl
and
lret
mov
pop
out
push
mov
sub
out
call
dec
imul
jne
adc
scas
cli
hlt
lods
or
xchg
aad
es
repz
inc
hlt
and
cmc
test
inc
mov
cmp
mov
jne
ret
hlt
nop
push
add
and
push
push
sbb
loopne
pop
sahf
not
loopne
loop
loopne
test
cmp
jg
jge
cmp
scas
test
add
adc
pop
add
mov
cmp
orb
jmp
cmpsb
or
into
mov
shrl
rcrl
inc
push
pop
and
sbb
and
pop
xchg
mov
out
shr
xchg
hlt
xor
jo
in
push
pop
out
add
sbb
leave
popa
out
addl
xchg
mov
adc
scas
push
adc
loop
roll
or
mov
lock
xor
xchg
ljmp
and
hlt
mov
les
sub
xchg
fistpll
fiaddl
clc
jo
push
das
dec
inc
fwait
lods
xchg
addr16
adc
fisttps
adc
or
adc
xorl
fistpl
xchg
push
dec
iret
movsl
stos
enter
into
pop
dec
mov
push
mov
imull
mov
lret
xchg
xor
jecxz
mov
dec
movsb
test
xchg
cltd
aam
push
inc
daa
lock
inc
int
jl
jns
or
xlat
sub
movl
scas
xchg
aaa
adc
fbstp
jns
or
testb
dec
or
adc
iret
mov
cld
popf
cli
lea
adc
jno
mov
mov
add
add
adc
pop
pop
ror
mov
mov
nop
push
aas
nop
xchg
loop
or
rcr
xor
mov
pop
cwtl
aad
xchg
push
mov
fstpl
popa
pop
test
dec
repnz
fwait
or
push
cwtl
sbb
mov
sbb
fcoms
adc
push
sub
xchg
in
inc
shlb
mov
sbb
aaa
xchg
sbb
popa
int
imul
cwtl
mov
divl
idivb
pop
or
loop
call
push
xor
adc
mov
das
clc
dec
jae
lret
pop
or
inc
jge
xor
jo
sub
cmp
sub
mov
push
mov
stc
movsb
inc
shlb
addb
pop
test
stos
xchg
xchg
in
mov
add
mov
xor
jne
mov
and
mov
sbb
inc
mov
in
mov
xchg
imul
mov
mov
dec
adc
add
inc
and
adc
into
shr
mov
mov
ret
ret
leave
scas
fwait
dec
pop
mov
aam
in
xor
pop
rcpps
std
xor
hlt
sbb
add
lret
mov
inc
daa
cmp
inc
and
cmp
lods
and
xor
movsb
pop
or
push
enter
aam
sarb
mov
aas
inc
xchg
dec
lock
shlb
loop
andl
adc
mov
ficomps
mov
or
and
dec
stos
ss
dec
outsl
adc
or
enter
pop
xchg
adc
jmp
ss
jecxz
xchg
and
and
adc
movsl
xchg
fildl
adc
dec
bound
js
push
pop
inc
roll
ret
fprem1
aam
sbb
call
inc
or
jbe
lcall
push
fcmovb
adc
fcom
dec
add
add
jnp
or
inc
mov
inc
cmp
xlat
outsl
lahf
test
lods
or
pop
sti
dec
stc
add
test
add
aaa
pop
mov
jno
push
cmp
jecxz
inc
call
jle
lock
fisttpl
xchg
xchg
jg
push
sub
les
xor
mov
add
xor
pop
pop
les
js
dec
sbb
add
and
addb
sbb
or
fcmovb
sbb
mov
loop
movsb
lea
subb
stc
andb
loopne
push
mov
or
push
push
pop
cmpl
clc
jg
xor
adc
std
test
jg
sbb
mov
jl
out
cltd
test
sub
cld
dec
fucom
pop
sub
cmovp
mov
inc
sub
pusha
jl
aaa
jecxz
cwtl
mov
or
and
inc
stos
aaa
pop
inc
ficoms
and
js
pop
add
pop
fisttpll
or
adcb
and
adc
mov
ret
jns
jne
mov
xorl
push
stos
or
pop
adc
mov
test
push
sahf
xlat
push
jp
arpl
xor
push
jnp
jo
mov
int3
lock
jp
add
add
push
lahf
mov
push
add
xor
ss
adc
push
int3
and
push
mov
sub
insl
outsl
jecxz
sub
scas
add
mov
dec
jnp
movsl
mov
or
mov
pop
adc
push
aas
ficompl
call
inc
mov
lds
push
clc
or
mov
or
push
push
inc
inc
xchg
js
std
fstpl
xor
mov
dec
es
test
or
scas
outsb
mov
mov
mov
int
push
adc
test
adc
shrb
divl
sbb
outsl
dec
lea
push
jle
enter
and
pop
add
shl
cltd
and
or
ret
enter
dec
and
push
frstor
jecxz
dec
out
cmp
pusha
xchg
and
jbe
gs
mov
and
lea
mov
push
sbb
push
mov
icebp
lds
xchg
movsb
sub
insl
fsubs
outsb
out
cmpl
pop
loop
add
and
lret
xor
xor
fcomps
push
jne
insb
xchg
push
dec
inc
and
lock
cs
xor
popa
xor
scas
push
rolb
mov
sbbb
ljmp
or
mov
fdivrs
mov
shlb
stos
in
out
add
push
movsl
xor
jmp
pusha
sbb
mov
adcl
dec
ja
mov
dec
jo
sbb
add
push
loopne
imul
mov
pushf
int
jb
jecxz
push
out
cmpsl
xor
flds
sub
lock
frstor
jne
xor
test
add
lret
pushaw
in
mov
adc
aaa
xor
dec
push
push
inc
sub
pop
test
and
and
pop
lcall
mov
cmp
orl
push
push
sub
sub
push
jp
cmp
sbb
inc
sbb
add
mov
aas
and
hlt
imul
pushl
mov
mov
cmp
or
xor
mov
cs
dec
mov
scas
out
or
mov
aaa
jno
sub
fsubs
adc
fcomps
sbb
dec
dec
sbb
jp,pn
aad
and
arpl
mov
imul
mov
out
inc
pop
dec
cmp
or
and
loopne
rcrl
fcomps
or
fidivs
pop
pop
ret
decb
cmpsl
push
loope
push
and
fsubrs
mov
adcb
inc
ret
mov
xor
jbe
add
cmp
adc
pop
subl
jo
inc
push
push
add
pusha
dec
out
iret
add
roll
js
xchg
add
push
mov
adc
call
movsb
or
clc
outsl
aad
and
push
pushf
mov
cs
xor
inc
inc
sbb
add
rcpps
mov
adc
leave
mov
jg
adc
xor
and
int
pop
adc
and
andb
adc
add
jbe
aad
nop
mov
and
fldt
adc
pushf
adc
adcb
push
outsl
int
pushf
add
dec
and
or
inc
jo
cmpb
and
adc
pop
mov
call
nop
and
add
dec
sbb
adc
and
insb
inc
les
xchg
test
in
and
dec
inc
addb
imul
sub
mov
insb
lcall
mov
jo
inc
loop
data16
incb
enter
pop
add
imul
repnz
xor
and
push
adc
and
in
mov
and
rorb
es
xor
fcmovb
lods
dec
adc
in
and
rcrb
test
pop
and
pusha
scas
cltd
test
inc
and
hlt
sbb
int3
inc
into
mov
xchg
rcrb
pusha
add
fsub
mov
dec
push
bound
xorb
push
add
sub
out
test
int3
mov
push
push
jo
push
push
jo
xchg
inc
adc
pusha
data16
dec
mov
clc
cmp
xor
ss
inc
pop
mov
and
call
pusha
nop
insb
test
popf
sbb
and
pop
or
outsb
data16
xor
inc
adc
loopne
fs
sbb
lods
cltd
sbb
cld
add
or
cmpsb
loop
in
xchg
xor
ret
pop
ficoms
adc
add
sbb
xchg
sub
je
or
mov
outsb
sub
add
mov
dec
cmp
shll
xchg
mov
and
inc
push
sub
push
bound
sbb
add
test
mov
xor
cmp
movsb
push
pop
xor
or
push
int3
int
xchg
inc
pop
xchg
or
mov
push
iret
pusha
inc
pop
cmp
cli
push
imulb
imul
jbe
push
sub
pusha
mov
pusha
pop
adc
jae
int3
dec
push
int3
sub
mov
add
and
fiadds
pusha
mov
fcomps
or
shrb
inc
and
into
fisubl
mov
xorl
push
push
orl
push
push
lods
enter
loop
adc
or
testb
inc
xor
pop
insb
sbb
int3
insb
in
xchg
mov
in
adc
clc
addb
or
lcall
pop
xchg
lods
xchg
mov
or
adc
mov
es
push
sbb
jb
js
ret
sti
js
and
and
nop
xor
inc
jo
les
xor
add
push
ret
or
rol
inc
inc
xchg
mov
xor
add
sub
int3
cs
jo
dec
jp
xor
dec
and
cmpsl
ss
in
cmp
adc
add
adc
xor
sbbl
cwtl
sarb
fadd
xor
dec
cli
cs
push
loopne
and
inc
mov
ljmp
scas
out
sarl
add
es
xchg
cwtl
int3
lcall
dec
xchg
dec
jne
xor
push
dec
pushf
lcall
push
adc
or
and
cmp
xchg
shl
pop
outsb
dec
push
and
pushf
inc
insb
in
jb
inc
adc
insb
pusha
xor
fsubrp
xchg
jns
dec
popa
adc
in
ret
sub
or
xchg
cmpsb
cmp
push
data16
dec
dec
sbb
push
test
adc
mov
and
push
push
and
and
cld
rcll
mov
call
pop
pop
loop
dec
and
loop
shl
sbb
mov
popw
xchg
and
jbe
dec
je
jo
ss
into
shlb
mov
mov
aad
pop
adc
push
mov
push
mov
andb
mov
rclb
sub
or
lea
push
and
inc
adcl
je
inc
and
sub
pusha
add
in
ljmp
push
push
dec
sub
mov
test
call
and
in
mov
xchg
mov
lahf
xchg
dec
mov
stc
scas
push
adc
add
ljmp
or
adc
daa
xor
dec
xorb
or
mov
mov
or
call
xor
mov
adc
repz
sub
loop
fisttpll
fcomps
out
add
inc
xchg
jmp
jl
xchg
sahf
mov
jb
xlat
inc
xchg
lret
fcmovnb
pop
daa
xchg
lds
mov
lock
inc
mov
sub
test
and
js
adc
push
pop
jge
nop
mov
jne
inc
dec
pop
add
pop
incl
mov
movsb
nop
sti
mov
arpl
sub
sbb
call
push
adc
inc
push
inc
sub
mov
jl
idivl
fists
ret
icebp
jo
pop
xchg
push
mov
lret
call
push
je
push
cmp
mov
cmc
cld
adc
add
add
mov
negl
nop
leave
xlat
jae
imul
mov
jge
jle
sub
add
inc
or
jmp
mov
test
push
mov
mov
cli
inc
div
adc
int3
cmc
pop
out
xchg
movsl
mov
dec
incl
add
faddl
push
push
mov
mov
dec
mov
mov
rorb
add
cmp
pop
xchg
scas
xor
mov
mov
xchg
sbb
es
incl
add
xor
inc
into
push
xchg
es
lods
jns
mov
sub
sub
mov
call
pushl
xor
add
scas
nop
lods
push
adc
mov
cmpsb
test
sbb
call
data16
push
scas
lret
stc
push
add
adc
or
push
lods
mov
mov
xchg
or
dec
pop
dec
fst
mov
mov
sarb
inc
fiadds
jno
cmp
std
mov
mov
shlb
or
inc
add
or
loop
outsl
inc
dec
in
jp
xor
xchg
das
clc
mov
xor
testb
mov
js
test
insl
jbe
mov
lods
xor
add
jecxz
xchg
mov
shlb
cmpsb
sbb
ds
lcall
mov
mov
dec
push
xor
inc
add
push
adc
pusha
xlat
cmp
ljmp
orl
pusha
adc
mov
sar
jle
xchg
jle
xchg
iret
popa
cmc
cmc
adc
dec
decl
ud2
out
stos
mov
mov
lret
push
add
pop
mov
incl
xchg
les
ret
test
sub
xor
add
call
push
lods
xchg
mov
shl
shll
or
lret
adc
mov
add
fisubs
das
stos
mov
add
addb
pop
cmp
dec
mov
stc
movsb
enter
cs
mov
inc
xor
and
or
push
add
fmull
pop
cmpb
dec
and
unpcklps
call
sbb
filds
jecxz
inc
cwtl
jge
js
sahf
fsub
xor
inc
lret
inc
mov
mov
andl
or
repz
pop
sbb
std
or
dec
shll
inc
test
inc
movsb
repnz
ret
in
jmp
repnz
mov
mov
and
pop
cmp
cmp
mov
pop
jae
add
bnd
pop
and
pop
dec
adc
and
cli
and
xor
pop
push
test
aam
cmc
fstps
in
xor
fbld
repz
cmp
clc
call
or
sub
in
lcall
shlb
test
xchg
ja
mov
addl
in
aaa
xor
or
pop
push
incl
mov
mov
fsts
stc
lahf
and
aas
loop
loopne
xchg
and
push
test
ljmp
andb
dec
inc
adc
mov
jo
jns
pop
in
cld
out
clc
pusha
mov
sub
std
in
mov
jo
or
and
loope
call
out
pusha
dec
in
adc
movsb
sbb
popa
movb
movsl
cs
mov
cld
ljmp
xchg
jmp
cwtl
push
movsl
mull
mov
xchg
add
stos
pushw
cmpl
ds
lock
or
mov
js
in
jns
jae
lahf
movsl
push
dec
xchg
lcall
mov
sbb
xorl
fs
xchg
dec
mov
sbb
or
ljmp
push
lods
bnd
push
rclb
jae
add
adc
pop
add
ljmp
es
flds
adc
xchg
add
cmp
mov
lea
ljmp
std
lods
sub
lret
dec
orb
add
add
add
fs
ljmp
or
jbe
add
lds
bound
add
dec
pusha
cmp
std
xchg
inc
add
test
add
test
lcall
inc
push
or
in
pop
fstpt
add
push
arpl
mov
and
mov
ljmp
es
add
movsl
add
push
push
push
add
xchg
test
jmp
xchg
pop
mov
scas
insb
mov
jg
lcall
ljmp
inc
arpl
bound
and
add
pusha
mov
stos
mov
xchg
xchg
push
or
add
add
pop
hlt
jg
sub
test
cmpsb
movsb
mov
mov
xchg
mov
test
cwtl
add
loopne,pt
fdivr
xor
std
lahf
fprem1
or
xor
push
dec
call
mov
test
dec
add
and
mov
sti
incl
lods
pushf
add
popa
mov
add
mov
test
xchg
loope
inc
ret
hlt
nop
sarb
push
jle
pop
cld
and
or
mov
add
and
pop
xor
pushl
sbb
xor
add
and
sub
xchg
mov
cmp
pop
adc
adc
and
ds
popf
pushf
decl
add
imul
add
int3
pop
stc
cwtl
mov
fnsave
scas
adc
jb
adc
pop
scas
fnstcw
mov
enter
and
ret
fisttpll
push
and
dec
xor
pop
ljmp
popa
frstor
push
insb
add
sub
rcr
lahf
imul
push
add
scas
je
add
neg
cmc
test
mov
add
testb
repnz
push
cmp
jmp
inc
in
add
adc
int3
push
mov
mov
mov
call
sub
sbb
jp
add
add
add
inc
out
cwtl
mov
lock
rcrb
leave
push
inc
sahf
outsl
add
cmp
add
lcall
add
mov
gs
pushl
ljmp
ds
test
or
jbe
sbb
decl
sbb
aaa
fists
int
mov
mov
aam
jp
stc
mov
psrld
ss
call
je
mov
leave
adc
inc
jecxz
mov
rorb
popa
shr
stos
mov
cli
decl
loopne
xchg
cmp
or
sub
and
test
dec
adc
scas
stos
xchg
mov
mov
dec
or
mov
incl
and
pop
jbe
push
xchg
xchg
stos
dec
inc
lcall
addb
push
out
cli
push
push
add
xchg
and
and
sub
aam
in
test
decl
mov
and
jge
das
jae
push
and
xchg
movsb
mov
push
popl
xchg
ljmp
iret
and
push
jp
sti
jne
ss
sub
sbb
xor
dec
xchg
xor
adc
rorb
cli
int3
arpl
dec
int3
jb
data16
and
add
daa
frstor
das
cli
ljmp
sbb
js
jmp
and
lds
inc
ds
and
lock
jmp
lret
jge
loop
or
add
cmp
sub
add
popl
pop
decl
cmovae
stos
sbb
into
rol
xchg
jl
jne
pushl
xor
inc
adc
call
faddl
mov
xor
pop
inc
out
nop
pusha
call
push
pop
xchg
xchg
ljmp
cmp
adcl
inc
test
es
cmc
xchg
popa
lahf
mov
rcr
jle
cmp
xchg
cld
and
or
xor
inc
adcb
loop
mov
sti
ss
incl
jge
add
lds
xlat
sub
dec
enter
incl
adc
mov
add
dec
mov
mov
jb
push
decl
xchg
lret
mov
cmp
inc
mov
aam
fstpt
inc
lret
jmp
int
shl
sbb
mov
jl
or
or
pushf
or
mov
pop
repz
dec
adc
test
cwtl
mov
xor
mov
xor
sar
lcall
ja
sub
cmp
fs
aam
nop
cmp
pop
adc
loopne
call
mov
loopne
jns,pn
lcall
loop
pop
pusha
div
mov
and
inc
xlat
or
and
xor
popf
into
int
f2xm1
js
pop
push
sbb
or
xorb
test
sbb
or
incl
loopne
roll
sbb
aaa
inc
mov
mov
and
and
xor
jb
rcll
decl
ljmp
inc
inc
lock
pop
xor
dec
lea
inc
popa
add
lcall
icebp
loope
mov
inc
inc
mov
mov
cmp
or
xchg
inc
loope
lcall
mov
je
loope
test
sub
push
mov
addr16
movsb
movsb
mov
cmpsb
jb
xchg
test
push
test
je
xchg
clc
or
addl
jmp
adc
pop
inc
and
xchg
xchg
orl
and
pushl
loope
dec
or
jle
leave
scas
pop
sbb
scas
and
addr16
addr16
loopne
jg
push
lret
fstps
inc
lods
adc
aas
push
andl
cmp
mov
xor
sbb
inc
cmp
sub
pusha
xor
sarl
jmp
js
shlb
pop
loope
into
arpl
addb
fwait
in
js
push
rcll
test
sub
mov
or
lds
mov
sub
or
movsl
andl
sbb
cld
decl
mov
icebp
addl
xor
mov
add
leave
into
push
cld
dec
fdivrs
sub
aaa
cmp
sub
hlt
jnp
pop
cmp
or
ret
dec
stos
mov
in
je
out
xor
pop
dec
xchg
decl
and
add
lods
mov
jecxz
sbb
ja
pop
test
cmpsb
pushl
leave
and
adcl
daa
mov
bound
fcoml
pushf
ljmp
clc
sbb
jo
add
rcrl
repz
pop
adc
push
ret
mov
dec
idiv
stc
mov
into
xlat
mov
push
ss
push
js
nop
lds
jo
cmp
fidivl
loope
mov
lock
jne
xor
data16
shl
add
outsb
mov
cwtl
loopne
ljmp
dec
add
stos
cmpb
shll
cmp
add
add
add
xchg
jbe
push
fisubrl
pop
mov
aaa
pop
or
and
push
fcmove
in
fdivrs
das
loope
jecxz
popf
ss
sbb
sbb
push
or
mov
inc
xor
xor
and
mov
xchg
insb
dec
cs
sub
shrl
enter
or
dec
mov
clc
scas
insb
fs
or
jl
fs
popf
sarb
mov
sti
inc
lock
mov
mov
jb
test
and
add
pop
pop
lock
jg
shrb
jb
pop
mov
pusha
push
scas
fmulp
add
popa
xchg
hlt
sbb
repnz
nop
aaa
and
or
push
loopne
push
sbb
outsl
cmp
lcall
ds
jge
stos
mov
add
aam
int3
sbb
lock
adc
xor
aas
dec
fldenv
rcr
mov
decl
imul
out
shll
icebp
jo
adc
stc
addb
decb
mov
add
xchg
ds
pop
add
mov
add
es
jg
std
pushl
mov
gs
sarb
mov
or
xchg
adc
je
jmp
sbb
sbb
add
dec
add
and
sub
dec
inc
ljmp
cli
outsl
fistl
inc
mov
lret
lret
inc
add
mov
fmuls
inc
add
incl
jg
xor
sub
mov
sarl
nop
mov
mov
cmp
lcall
mov
in
insb
mov
stos
pop
mov
push
inc
push
add
enter
cld
mov
and
dec
dec
mov
aas
mov
pop
add
mov
hlt
mov
lock
add
imul
and
out
xchg
pop
xchg
fisubl
in
add
inc
fisttpll
js
enter
mov
aaa
jl
outsl
sbb
pop
add
les
and
iret
mov
pushl
out
pop
inc
mov
sub
nop
pop
add
pop
mov
js
and
ret
pusha
aad
inc
test
push
les
jo
and
popa
dec
inc
dec
mov
lret
add
and
or
lcall
test
adc
add
sub
dec
decl
add
push
dec
push
ljmp
nop
out
mov
notb
cld
sub
or
add
and
mov
sbb
mov
inc
mov
and
es
negl
or
lret
sub
adc
lds
jecxz
popa
adc
or
mov
orb
sbb
pusha
icebp
inc
clc
test
mov
adc
pop
jecxz
jo
or
mov
push
cwtl
inc
es
jg
adc
push
inc
pop
dec
adcl
in
adc
xor
add
cmpsb
insl
pushf
movl
add
jg
outsl
iret
movsb
inc
push
pop
mov
xor
xchg
add
inc
ljmp
iret
addb
decl
call
arpl
dec
pop
push
out
sub
mov
dec
mov
cmp
mov
in
subl
and
dec
sub
ret
roll
testb
and
int
cli
or
inc
lret
cmp
je
scas
xchg
or
and
pop
cmc
mov
inc
or
aad
adc
out
call
sbb
inc
adc
arpl
sub
push
in
jne
sahf
jg
cmp
sbb
cmp
add
dec
push
icebp
imul
and
mov
xlat
and
xor
ja
or
pushl
dec
xchg
dec
cltd
rclb
dec
jo
in
cmpb
ss
mov
jnp
adc
or
jecxz
jns
and
push
dec
xor
sarb
sub
outsl
cli
fildll
rcl
cmp
or
sub
jg
leave
inc
inc
or
inc
sub
roll
sub
testb
push
mov
cwtl
pop
filds
std
test
xor
lidtl
popw
pushf
cmc
push
call
xor
inc
aad
mov
icebp
stos
dec
lea
cmovp
call
xchg
pushl
std
decl
mov
jle
xchg
adc
push
jg
mov
pop
pop
fs
jo
js
out
in
cmp
repz
push
cmp
incl
add
aaa
call
adc
daa
faddp
xor
cmp
movsb
mov
lcall
push
cmp
out
mov
jp
pop
pop
lods
mov
decl
addl
xchg
in
jne
dec
rcll
pop
or
pop
sti
adc
imul
push
stos
push
cwtl
movsb
pushf
roll
cltd
add
jno
and
pushf
repz
jns
dec
sub
push
or
jb
insl
adc
cmpxchg
fbld
adc
xchg
or
cmpsl
pusha
dec
scas
mov
jp
add
decl
iret
pop
add
inc
pusha
sbb
dec
sub
xchg
incb
jmp
loopne
pop
adc
in
sarb
popf
jo
dec
fbld
xchg
push
cmp
add
out
in
xor
adc
leave
dec
dec
cs
push
dec
pop
dec
adc
or
mov
and
pop
or
jns
andb
mov
popf
imul
out
es
in
cmp
pop
cmc
add
xchg
or
or
cmp
insl
fisubrl
mov
aaa
nop
das
test
add
loop
fisttpl
lods
in
cs
ret
nop
mov
cmp
ja
or
push
mov
test
stos
decl
jae
and
imul
dec
rorl
and
push
sub
pop
icebp
jmp
mov
mov
sar
add
addb
cmpb
dec
pop
bound
and
sub
lods
jge
imul
sub
decb
or
subl
add
pop
call
incl
add
mov
movl
aaa
add
sbb
dec
xchg
sbb
add
and
add
mov
jg
xor
fstpt
bound
ret
sbb
inc
sbb
cmp
pop
fdivrs
lods
arpl
add
dec
jge
add
cmpsl
sub
mov
jge
mov
je
and
out
jmp
cmpsb
pop
or
sub
cmp
or
loopne
push
fdivr
mov
add
and
inc
into
inc
cwtl
adc
das
inc
scas
adc
xor
or
jp
cwtl
in
cmpsb
mov
repz
ljmp
rcl
fidivl
push
cs
adc
inc
test
hlt
adc
fildll
push
test
mov
dec
adc
sahf
jg
loopne
fimull
sarl
test
sbb
jmp
add
xor
push
push
add
mov
je
fsubrs
pop
mov
addb
add
sub
ds
mov
xor
sub
mov
jno
gs
xor
insb
scas
clc
cmpb
out
lcall
and
fldt
xor
jle
inc
xchg
addr16
or
sbbb
jp
je
pop
cmp
mov
jg
mov
adc
loopne
jecxz
inc
movsl
add
pop
push
rcll
stos
decb
sub
and
pop
or
mov
aas
xchg
add
cld
add
lods
sub
jmp
iret
or
mov
loop
sub
insb
dec
outsb
jns
xchg
int
push
mov
mov
das
cmp
pop
ret
das
hlt
adc
jp
lret
adc
rorl
adc
jnp
push
mov
decl
add
dec
mov
test
sbbl
xchg
int3
dec
ret
push
mov
sub
mov
fadd
pop
sub
mov
rorb
jo
movsw
and
call
mov
xor
xor
std
dec
in
mov
dec
mov
inc
adc
mov
or
decl
or
push
sbb
outsb
mov
dec
ret
push
mov
lcall
adc
xor
pop
pusha
dec
mov
mov
sar
ljmp
fcomps
sub
push
fnstcw
inc
dec
dec
add
mov
jmp
mov
das
cmpsb
sti
es
mov
push
cmp
imul
incl
arpl
xchg
dec
adc
xchg
jecxz
daa
dec
loopne
jle
flds
stos
sbb
incl
xlat
mov
pop
sub
pop
push
push
jb
xor
and
in
outsl
jb
xor
xor
jno
lods
jmp
jb
fnstenv
jl
mov
stos
jnp
dec
mov
js
call
lods
std
jbe
je
cmp
jecxz
cld
adc
lods
adc
das
push
xor
cmp
lcall
push
push
and
pop
inc
mov
frstor
sub
dec
xor
jae
aad
pop
jo
and
incl
sti
outsb
imull
add
fimuls
sub
cmp
jne
std
or
mov
mov
sbb
in
mov
dec
pop
popf
in
and
cmc
mov
push
je
jbe
cli
cwtl
push
sbb
pushf
hlt
jle
pop
pop
xchg
inc
imul
adc
call
adc
pop
divb
dec
or
mov
jbe
mov
jge
push
sbbb
scas
or
mov
mov
addr16
mov
fcomip
pushl
orl
pop
cmpsl
ljmp
movsl
xor
cmp
lret
push
ret
pop
out
iret
xor
mov
imull
popf
test
and
pop
fs
cmp
sbbb
jg
ljmp
test
jmp
imul
xorl
mov
incl
jmp
add
mov
fstpl
or
xor
mov
je
cwtl
add
or
inc
push
mov
sti
test
xchg
call
lods
cs
mov
push
inc
test
mov
enter
mov
cwtl
ret
cmp
xchg
lahf
cld
xchg
fdivl
xchg
shrb
movsb
repz
mov
lock
mov
scas
int3
ficomps
xchg
cmp
mov
mov
std
stos
inc
inc
repnz
imul
sub
mov
inc
jg
out
push
std
push
cmpsl
mov
bound
sahf
imul
and
adc
lock
or
in
outsb
cmp
add
loopne
cmpb
pusha
movsl
and
xor
pushf
adc
lahf
and
sarb
pop
mov
rolb
xchg
mov
pushf
or
xchg
add
jle
pop
add
leave
add
xorb
leave
les
pop
in
add
imul
add
enter
inc
pop
aaa
cmp
lock
push
nop
stos
pop
cwtl
jle
arpl
scas
mov
loopne
idiv
and
push
add
negl
and
mov
in
pop
in
rcrl
loopne
sbb
add
dec
add
inc
mov
int
mov
call
push
push
mov
xchg
ss
add
add
xchg
pusha
cli
aas
fimull
push
add
repz
into
adc
push
dec
sbb
dec
outsl
xchg
std
int
cmp
mov
sbb
xchg
adc
sub
clc
adc
repz
test
cs
lret
loop
int
cmp
mov
jg
xchg
popf
test
add
popa
add
mov
lock
outsb
fs
shll
shll
lods
and
cmp
stos
add
clc
pushl
pushf
iret
add
nop
std
add
data16
movl
add
mov
adc
add
inc
addb
sarl
rclb
pop
mov
mov
adc
jb
out
pop
je
mov
sahf
pop
bound
add
hlt
or
sub
xor
inc
and
adc
xchg
lcall
inc
ss
add
mov
mov
adc
cltd
cmpw
or
leave
cwtl
add
hlt
mov
mov
sub
sub
push
fildll
cmp
sti
and
push
lods
loopne
clc
lds
or
add
add
pop
stos
pop
icebp
inc
pop
lcall
fadds
js
xor
push
ss
decl
cmp
pushf
and
inc
mul
stos
cmp
roll
loope
lahf
mov
or
bound
js
push
lods
lret
jl
xchg
jp
insl
ss
mov
call
mov
das
sub
fidivrl
jae
cmpsl
dec
jmp
mov
pop
popf
into
incl
and
leave
jno
mov
hlt
cmp
dec
pop
jge
mov
imull
lcall
xchg
dec
pcmpeqb
adc
mov
mov
and
and
repnz
sub
sbb
loope
inc
call
repnz
jb
negl
or
hlt
inc
pop
xor
arpl
dec
xor
xor
dec
pushl
cmc
add
mov
or
push
xchg
incl
cmc
shll
movsl
push
mov
dec
mov
mov
inc
jo
test
add
stos
xor
ljmp
jmp
sub
lods
call
lahf
pop
sbb
es
fisttpl
cmpsb
push
std
test
into
or
cmp
mulb
ja
out
xchg
bnd
idiv
push
sti
adcb
and
loop
ljmp
repz
jbe
add
add
js
push
pop
and
incl
arpl
enter
adc
add
mov
mov
cmp
adcl
xchg
out
cmp
inc
rolb
or
loopne
adc
lret
jne
cmp
pop
or
enter
pop
mov
ds
or
cli
fcoms
ljmp
iret
icebp
jno
and
mov
das
adc
add
push
and
xchg
mov
decb
cmpsl
fs
dec
sbb
adc
bound
push
rcrb
decl
std
sub
shll
cltd
mov
and
inc
iret
shr
mov
decl
sbb
das
mov
pusha
xchg
cld
pop
push
and
pop
js
inc
call
and
and
push
aaa
and
push
mov
add
mov
or
call
and
mov
fdivs
sub
pop
push
loope
pop
lcall
mov
sbb
sub
incl
fs
add
adc
lods
testl
sub
ret
inc
mov
or
pusha
bound
test
xor
mov
shlb
nop
dec
mov
fdivrs
push
addb
addr16
xor
scas
sub
mov
loopne
cmpsb
mov
or
arpl
or
out
sbb
dec
and
pop
cwtl
sub
push
sub
add
pop
pop
xor
and
roll
lcall
add
repz
adc
fs
inc
push
das
add
test
iret
and
nop
xchg
or
pop
push
bound
add
xchg
lock
mov
das
lea
or
mov
pop
add
fldcw
pop
sbb
popl
cmp
fdivrl
andb
add
call
lcall
dec
sbb
push
jge
adc
mov
xor
sub
fs
pop
inc
cmp
movsl
mov
movsl
sbb
rcrl
pop
push
adc
lcall
arpl
push
add
mov
pop
pusha
push
add
inc
inc
scas
push
add
repnz
ljmp
push
ja
out
mov
imul
sbb
inc
mov
or
popa
shll
mov
cmc
decl
and
dec
jp
mov
pop
fcoms
pop
icebp
add
and
dec
xchg
xchg
shll
pushl
pop
nop
je
xchg
jbe
sub
out
lds
xchg
insb
xor
adc
add
incl
test
push
fwait
pop
jb
lret
addl
cmc
dec
dec
mov
ljmp
inc
inc
and
inc
pusha
test
hlt
or
add
and
imul
xchg
out
sar
decl
mov
loope
add
sub
test
aam
mov
sub
incl
fwait
cmp
pushf
push
test
sbb
scas
dec
mov
mov
outsl
add
sub
leave
adc
and
xchg
lcall
insb
lds
mov
mov
push
notl
xchg
jbe
movsb
jnp
or
je
xchg
mov
subl
mov
adc
push
clc
jbe
loop
adc
cld
stc
test
pop
pushl
arpl
shlb
push
ret
pop
or
int3
push
shl
out
and
dec
cmp
jmp
lods
dec
sti
clc
xor
jo
push
mov
and
sahf
mov
mov
fcomip
test
sub
inc
push
rcll
push
or
pop
add
adc
imul
and
sub
xor
mov
cmp
jbe
insl
nop
cmp
mov
adc
ljmp
rcll
pop
sub
adc
int
repnz
mov
lcall
dec
push
push
jecxz
mov
fucomi
cli
jmp
add
adc
ds
pop
xchg
add
call
gs
and
sub
js
mov
push
xchg
add
popa
or
mov
cs
xchg
dec
dec
out
and
add
and
sub
fiadds
stos
testb
scas
cli
dec
sub
enter
cltd
jno
cli
sub
std
icebp
outsl
sbbb
mov
and
es
add
popa
and
movsb
out
cli
push
push
jnp
test
pop
add
add
adc
add
jecxz
mov
cld
lock
decl
sub
sub
jmp
jmp
notb
and
mov
cmpsl
sub
js
insl
add
shlb
mov
test
fldl
ret
fdivs
in
das
ds
dec
jmp
add
hlt
scas
dec
nop
incl
xor
pop
xor
insb
orl
out
clc
ja
cmpsl
fwait
add
add
adc
dec
clc
add
es
mov
orl
jg
fldt
ss
or
pop
scas
lret
add
out
in
jns
int3
mov
out
in
mov
ret
cmpsl
mov
cli
or
jle
add
lods
loop
jecxz
flds
jg
cmp
imul
clc
or
cmp
pop
sub
mov
call
adc
add
add
shlb
in
jne
cmp
lcall
add
addb
add
aad
subb
ds
cmp
mov
add
sbb
loop
stos
add
jns
sti
xor
pop
mov
std
jecxz
xor
add
mov
mov
adc
in
jnp
insb
jmp
jmp
cmp
xor
in
sbb
jp
add
mov
stos
add
adc
test
push
jle
and
decl
add
xor
enter
jbe
pusha
push
sbb
add
adc
adc
sbb
roll
dec
xchg
cli
mov
sbb
shlb
jle
movsb
inc
add
popf
xor
incl
outsb
cld
add
jecxz
cld
xlat
mov
push
mov
fcom
sbb
jb
pushf
aad
push
movsb
mov
add
or
pushl
iret
mov
out
sarb
jns
sub
mov
pop
inc
sbb
mov
jle
stc
xorb
lock
ret
mulb
lds
inc
mov
xor
or
aam
xchg
mov
adc
adc
push
fs
lods
js
aas
push
or
rcrb
jb
sbb
fs
xchg
dec
iret
stos
popf
in
add
subl
sub
leave
and
cli
jmp
sbb
aad
lock
fists
repnz
mov
subb
int
push
fadds
dec
test
mov
adc
aaa
mov
xchg
or
push
adc
out
ja
add
daa
or
cmc
mov
pop
pop
inc
cld
xor
inc
push
sbb
imul
inc
insb
add
cmc
popf
or
cmp
popa
and
jb
adc
push
inc
loope
mov
mov
jge
vmwrite
lock
jmp
sub
cmp
mov
clc
sub
push
lea
faddp
xor
inc
dec
xor
arpl
mov
jle
test
pop
jmp
jnp
addr16
mov
or
add
or
aam
xchg
push
xor
push
jns
les
jl
loope
dec
jl
sbb
jmp
push
test
sti
push
aas
inc
add
xor
lods
aad
imul
sahf
call
insb
cmc
lods
in
incl
xor
inc
cmp
sahf
xor
enter
sub
or
pushl
mov
jp
xchg
xor
dec
fwait
and
scas
scas
push
ret
push
outsl
fsubl
je
pop
jmp
std
cmp
add
and
ficompl
sbb
vmovntps
dec
lcall
test
cmp
push
and
inc
sub
cmp
and
jno
and
mov
fisttpl
mov
out
pop
adc
mov
xor
cld
dec
sub
dec
pop
les
into
pop
push
fstpl
mov
push
lea
addr16
lods
mov
mov
call
loopne
sbb
in
iret
jnp
cmp
and
xor
mov
mov
decl
cld
push
xchg
mov
stos
push
lock
or
lods
mov
mov
mulb
add
ficoml
and
gs
sub
sub
pop
jg
mov
mov
data16
mov
sub
push
xchg
inc
ret
decl
sub
push
loope
jo
sti
data16
mov
loop
in
decl
fadd
cli
sbb
test
pop
jo
pop
or
pop
rcrl
ss
lock
mov
sbb
shll
sbb
scas
lret
int
xor
cwtl
dec
cmp
ficoml
mov
and
and
add
lcall
sbb
loopne
add
jns
cld
jge
add
mov
scas
mov
cld
dec
inc
adc
pushl
stc
sub
and
mov
in
icebp
ret
push
pop
pusha
pop
and
shrb
dec
dec
xor
mov
xchg
lret
and
adc
fdiv
mov
jno
mov
jns
dec
das
loopne
push
xlat
lds
add
sbb
xor
out
popf
test
xor
aad
pusha
add
push
sbb
or
dec
sub
mov
inc
sub
inc
popa
inc
out
or
dec
dec
inc
cmp
push
sub
dec
push
lds
and
aad
call
xor
addr16
lock
jnp
jnp
pop
jp
ljmp
pop
jp
inc
sbb
ljmp
cmpsb
inc
xor
sbb
push
ret
or
dec
dec
fisubl
andl
cld
jmp
nop
and
adc
push
xchg
jmp
cwtl
pop
add
popf
jg
insb
inc
sbb
jp
icebp
movsl
mov
dec
lds
cld
xor
jmp
shlb
shlb
or
push
push
dec
sbb
xor
xorb
call
fisubrl
mov
js
aad
insb
mov
sub
nop
inc
xchg
je
lock
sbb
inc
adc
xchg
mov
cli
lcall
or
xchg
or
adcb
jns
jge
xor
call
sbb
or
xchg
jb
jl
push
jmp
pop
pop
fistps
jg
sbb
cwtl
iret
pop
sahf
mov
sub
dec
test
scas
aaa
add
mov
arpl
mov
adc
dec
scas
push
pusha
cmp
inc
sysexit
sahf
fadds
mov
jbe
cltd
stos
adc
sub
jo
cmc
test
ljmp
aaa
mov
push
sbb
rcrb
sbb
push
decl
cwtl
lea
mov
aam
xchg
and
std
mov
jo
push
xor
roll
pop
sub
clc
mov
lret
xor
insl
scas
push
and
add
fists
cmp
inc
push
and
ds
jo
lock
test
add
jg
jns
dec
enter
imul
cmp
subb
rep
adc
nop
incl
push
and
push
cmp
and
pop
cmp
or
mov
lods
decl
movb
mov
xlat
cmpsw
fistpl
lahf
test
mov
push
mov
int3
pop
bound
in
imul
dec
jle
das
mov
movsb
jle
sar
ljmp
sarb
int3
xchg
adc
jne
adc
jle
stos
xor
push
pushl
cwtl
xchg
fmull
sub
outsl
data16
sub
mov
fsubs
test
cmp
xchg
jne
inc
and
hlt
jg
add
addr16
push
pushf
add
cld
nop
jle
mov
jo
xchg
jo
out
and
decl
push
inc
cwtl
sub
jb
les
ret
js
push
fdivr
xor
clc
sbb
imul
and
sbb
decb
fstpl
adc
js
or
call
es
incl
cmpsb
test
in
xlat
fs
dec
mov
cld
xchg
and
inc
pusha
ret
aaa
shll
push
jle
xor
lcall
inc
mov
in
inc
xor
movsb
arpl
or
sti
sub
pop
adc
mov
and
cmp
dec
adc
nop
inc
sbb
xor
or
jmp
push
pop
out
add
jp
loope
stc
aas
cmp
lcall
int3
inc
inc
inc
push
mov
jp
bound
push
and
call
lahf
cli
dec
or
nop
inc
gs
mov
addr16
leave
mov
mov
inc
ficomps
pop
adc
inc
clc
mov
push
adc
xor
xchg
mov
ffree
incl
cmpsl
fstps
or
sarl
dec
adc
xchg
lcall
test
push
ja
icebp
lods
cmp
xor
and
sbb
add
scas
mov
insb
in
mov
jl
cwtl
cmp
add
call
jo
push
lods
je
jnp
subb
iret
adc
mov
incl
fildl
cmp
adc
loop
push
fwait
test
cmp
lcall
sub
cs
sub
inc
cmp
xor
mov
jbe,pt
in
jns
mov
dec
mov
dec
aas
rcrb
pop
outsl
clc
mov
inc
je
fadds
ss
pushf
or
pop
fdivr
jmp
jp
enter
push
push
ret
pop
pop
mov
xchg
test
nop
leave
lcall
call
std
and
fld1
stc
pop
sbb
adc
add
jecxz
nop
ds
je
push
addb
add
inc
je
fst
jo
adc
add
jg
enter
xor
test
iret
push
jg
dec
adc
sbb
out
add
cmp
or
test
lret
addl
sbb
mov
mov
push
ljmp
inc
xchg
loopne
jae
rorb
pushl
adc
add
jbe
and
adc
psrlw
clc
lret
loopne
cmp
jne
in
stos
adc
hlt
xor
mov
je
or
repz
add
xchg
pushl
mov
push
xchg
mov
add
cmp
xor
pushl
leave
and
dec
and
and
lcall
add
push
mov
mov
mov
lea
loop
gs
pusha
mov
adc
add
xor
out
xor
ljmp
test
test
incl
into
lcall
mov
cmp
mov
lea
dec
adc
adc
lock
incl
fsubr
cwtl
adc
rcll
push
add
jae
or
rolb
pusha
mov
icebp
cmovo
jmp
lds
push
xchg
cmp
orl
int3
cmp
pushl
insb
outsb
inc
pop
add
das
imul
xchg
mov
add
xor
ljmp
and
call
adc
aam
jb
mov
mov
cs
stos
or
call
jmp
xchg
push
mov
shrl
cmp
pop
popf
mov
arpl
int
pop
or
pop
lock
lcall
sub
inc
jmp
fs
movsl
xchg
insb
das
aaa
dec
xchg
add
push
mov
call
std
nop
lret
and
fcmovb
dec
sub
sub
rorl
dec
add
push
and
loope
push
sbb
and
mov
and
push
adc
jo
cmp
lea
call
cs
mov
push
mov
jl
sub
push
jmp
iret
divl
add
cmpsl
mov
mov
add
lds
rorb
adc
ljmp
roll
or
iret
test
sub
lods
outsl
cli
decl
adc
sub
movsb
xlat
push
mov
sub
dec
fld
and
jmp
mov
in
lahf
and
push
dec
mov
insl
cmp
out
mov
scas
pop
pushf
xor
cmp
clc
fcomip
hlt
ret
test
faddp
push
aad
xor
sbb
call
dec
or
mov
push
push
cs
dec
pop
lock
dec
mov
add
incl
clc
xchg
mov
inc
inc
add
add
add
xchg
jg
adc
xor
add
loop
iret
dec
data16
xor
and
pop
push
incl
mov
mov
sbb
test
xor
cwtl
lock
mov
fcoml
arpl
mov
xor
add
sbb
fildll
dec
push
add
fnstcw
or
sar
xchg
decl
enter
inc
xor
lds
or
inc
add
ljmp
gs
and
and
add
sti
int3
push
dec
filds
or
dec
test
call
adc
inc
lods
mov
sar
inc
loopne
fsubl
mov
inc
cmp
push
pushf
add
xor
clc
jg
mov
nop
sbbl
lock
dec
cwtl
adc
ljmp
nop
adc
pop
mov
and
push
mov
iret
adc
jae
insb
xor
mov
popl
mov
rcrb
mov
cmp
inc
aaa
adc
loopne
fistl
and
or
bound
jle
and
adc
add
ljmp
and
dec
push
add
imul
mov
mov
inc
and
and
sar
add
xchg
inc
inc
pop
add
add
test
loop
test
adc
lret
xor
dec
push
and
insl
inc
adc
dec
decl
inc
jne
xor
push
fsubl
cmpsb
and
and
xor
cmp
add
int3
adc
loopne
icebp
xor
aaa
pushf
and
cs
test
add
dec
adc
rep
add
fisubs
jno
rolb
push
outsl
add
pop
sbbb
jge
fnstenv
neg
call
gs
pop
mov
loopne
out
push
stos
push
pushf
and
sahf
adc
add
push
std
ljmp
sub
mov
inc
repz
inc
pop
cmpl
test
mov
inc
mov
jo
mov
xlat
std
add
adc
sbb
xchg
fildl
shl
loopne
dec
sub
fcomip
lret
fiadds
sti
add
mov
cmp
int3
mov
sarl
mov
fsubs
clc
orb
inc
add
push
add
push
std
dec
incl
loope
add
xor
cmp
bound
inc
dec
lcall
test
sbb
ss
mov
xchg
dec
repnz
sbb
inc
cmp
jns
cmp
lods
jl
xlat
lods
and
jecxz
lret
and
or
jne
adc
jl
mov
jl
lods
cltd
push
dec
jmp
shrl
dec
and
nop
mov
and
push
inc
dec
jno
add
adc
jno
inc
sar
jmp
add
lds
cmp
mov
nop
xor
xchg
push
outsb
adc
adc
xor
call
icebp
add
cmp
mov
call
dec
inc
pusha
inc
sub
mov
jl
decl
inc
mov
add
pusha
lea
shll
inc
mov
dec
inc
ret
incl
mov
mov
cltd
lock
int3
jle
test
call
jno
and
loope
decl
loopne
sbb
fildl
je
jge
cmc
xchg
dec
add
clc
adc
push
leave
fcomps
shrb
lods
sub
add
int3
aam
js
lret
xchg
outsl
clc
push
std
mov
xor
xor
ret
jb
xor
lcall
sbb
pop
xchg
stos
dec
push
or
adc
or
inc
stc
in
mov
les
add
or
ljmp
mov
or
pop
adcl
repnz
cmp
cwtl
das
cmp
jp
dec
std
pushl
enter
push
jmp
ja
shll
test
jg
xchg
or
adc
or
call
dec
test
adc
cmp
rcll
or
lahf
inc
jl
fs
clc
pop
mov
popf
mov
icebp
dec
jno
scas
jne
jmp
sbb
data16
xor
movsl
insl
outsb
and
sbb
or
mov
decl
lock
xchg
sub
xor
and
xchg
outsl
lcall
and
cli
inc
mov
push
xchg
ss
test
repz
and
test
mov
nop
leave
cli
pushl
fldenv
in
push
pushf
and
loop
add
fadds
xor
pop
sbb
ljmp
push
inc
push
out
stos
or
mov
addb
add
cld
pop
popa
sbb
shll
ljmp
adc
and
and
das
or
mov
mov
js
test
loopne
add
out
rorb
push
inc
bound
repz
lods
nop
lea
jnp
sahf
incl
sub
inc
in
test
sbb
xlat
jl
and
inc
xor
pushl
dec
sbb
xlat
lds
lock
int3
data16
inc
mov
inc
adc
lahf
and
movsl
and
mov
subb
lcall
and
push
nop
jle
push
aas
push
aam
outsl
jmp
jmp
fistpll
dec
or
cmp
mov
lea
mov
cmpsb
loope
lds
in
shll
push
dec
jns
sub
add
pushl
pusha
mov
mov
add
call
jnp
jb
pop
mov
imul
adc
decl
add
ror
fwait
xchg
xchg
mov
fs
rcl
out
jecxz
inc
dec
js
mov
ficomps
fisttpl
lret
push
sub
test
inc
lahf
push
in
loope
mov
in
cwtl
int3
xchg
call
shl
xchg
push
lea
mov
into
or
int3
pop
lret
frstor
leave
or
and
test
cmpsb
jle
sub
adc
jl
jmp
inc
stos
les
mov
aas
int
and
aaa
std
jmp
adc
add
insl
call
inc
mov
int3
lds
adcb
adc
add
adc
jns
test
and
pop
loopne
jle
hlt
xor
pop
fcos
aas
movsl
and
inc
mov
bound
sbb
out
clc
push
inc
inc
js
mov
ljmp
pop
push
dec
loopne
or
jo
jns
scas
sbb
nop
cltd
iret
mov
test
sbb
jecxz
adc
jbe
xor
mov
add
jmp
sub
xchg
cwtl
daa
inc
cmc
mov
sub
add
je
inc
leave
xchg
pushl
add
enter
add
dec
stos
test
xor
xor
mov
in
xchg
mov
add
popf
jg
mov
and
xchg
or
xorl
push
ds
xchg
loopne
cmpsb
jae
or
shll
adc
jnp
dec
incl
mov
and
push
push
enter
xor
call
cmp
pop
cmp
fbld
rolb
es
addb
popa
lock
outsb
pushf
mov
ljmp
pusha
mov
xchg
hlt
cmp
das
inc
and
pop
stos
daa
loopne
bound
xor
or
andb
xchg
xchg
dec
adc
jmp
xchg
xor
in
out
pop
cld
movsb
mov
xchg
add
out
fsts
incl
rorl
testb
adc
shll
dec
mov
or
jnp
ljmp
rcr
cmpsl
or
stos
cs
cmp
add
jge
add
mov
mov
or
call
ja
and
and
pushf
xor
std
pop
ficoml
cmpsb
das
movsb
mov
mov
inc
cmp
call
add
ljmp
xor
out
add
adc
mov
adc
out
cmp
lcall
lock
cmp
adc
call
shrb
insb
clc
push
or
cld
lods
inc
cmpl
stos
mov
call
push
fidivrl
push
jne
xor
and
xor
cld
cmp
test
pop
leave
lahf
sbb
mov
xor
mov
das
clc
ljmp
hlt
and
loop
add
call
xchg
into
sub
pushl
rclb
cmpsb
add
test
aam
stos
data16
adc
add
xchg
jge
inc
stos
pushl
shll
outsb
arpl
add
add
push
mov
sbb
cmc
lcall
rcrb
test
scas
loopne
sub
lcall
call
dec
add
xchg
shrl
add
sbb
pop
shl
push
roll
call
pop
dec
ret
xchg
shlb
add
ljmp
inc
pushl
bound
add
inc
or
sbb
dec
push
or
data16
in
lret
addr16
fcomp
ljmp
cmp
xchg
mov
inc
hlt
pushf
and
repnz
inc
add
pop
xor
push
pushf
jo
pusha
or
mov
xchg
sbb
xchg
and
mov
les
pop
mov
pop
add
jp
ret
lmsw
stos
orb
arpl
popf
inc
cmpsb
jmp
and
push
sub
push
adc
inc
dec
es
pop
cmp
fs
inc
and
jl
pop
adc
loopne
repnz
sub
int
insl
fildll
jo
lret
or
subl
jecxz
cmp
xor
incl
cmc
jl
mov
xor
and
push
movsb
cli
jl
adc
stc
sub
push
gs
pop
pushl
cld
pop
rol
mov
xchg
clc
cmp
daa
jecxz
clc
jl
xchg
icebp
add
movsl
call
testb
fidivrl
clc
add
jo
int
and
inc
push
loope
clc
and
mov
mov
push
inc
std
loope
or
stc
inc
xor
in
pusha
cmp
ds
incl
jmp
add
cmp
sbb
pop
mov
jmp
movsb
mov
clc
cmp
psubb
jl
popl
add
cmc
addb
into
cmp
in
push
push
jp
lock
mov
outsl
shll
inc
mov
pushf
jecxz
pop
cld
clc
mov
lcall
add
mov
inc
clc
jnp
xchg
idivl
cmp
sbb
sbb
mov
dec
pop
or
jo
or
xor
call
stos
clc
repz
push
jecxz
and
clc
mov
test
pop
call
icebp
rol
shl
pop
pop
mov
sub
mov
xchg
icebp
je
testl
mov
xor
ds
sub
cmp
pop
bndstx
sub
pushf
mov
cltd
repz
jae
mov
adc
call
mov
xor
cwtl
js
clc
rcll
push
push
cmp
mov
sar
cltd
pop
in
jl
daa
in
push
add
pop
push
cmp
fdivrp
lahf
pushf
add
jg
jo
jae
add
mov
jecxz
stc
ds
jecxz
dec
repnz
jno
xchg
mov
decl
cmp
test
and
filds
ret
mov
mov
jle
add
ljmp
cmp
jb
adcb
adc
jl
loopne
pop
js
fisubs
and
jecxz
mov
jecxz
fs
xchg
xchg
notl
lock
call
nop
icebp
mov
and
push
lock
xor
and
fs
out
cli
loope
pop
pop
jl
xchg
hlt
xchg
ss
out
subps
int3
icebp
xchg
pop
fprem
jg
adc
jp
fdivs
cwtl
in
icebp
lods
add
out
adc
stc
les
or
clc
mov
movsl
inc
pusha
xchg
lret
test
addr16
jmp
cwtl
cmp
sbb
popa
and
scas
enter
fldenvs
out
in
dec
sbb
mov
add
mov
and
ljmp
cwtl
stc
and
stc
loopne
leave
mov
add
and
push
cltd
inc
stc
mov
incl
bound
jecxz
jb
xor
mov
jo
add
stos
lret
pop
xchg
jle
mov
sbb
outsl
clc
decl
jo
pop
add
addb
stc
cmp
in
adc
sub
mov
lcall
test
cwtl
int3
mov
and
cmp
cli
test
jno
lret
adc
inc
jmp
xchg
scas
lods
push
xchg
frstor
call
or
xchg
push
jno
xchg
mov
add
and
lret
outsl
stos
adc
inc
adc
cmpsb
jg
push
insl
xchg
mov
lahf
rorb
and
add
inc
sbb
jmp
mov
inc
popa
inc
and
sarl
call
test
cld
pop
inc
addr16
movsl
subl
or
fmuls
sub
mov
push
adc
incl
fisubrl
imul
add
add
pop
ret
add
je
shr
stc
adc
decl
mov
sub
ret
mov
arpl
sbb
adc
inc
fldt
and
decl
lock
addl
das
cs
notl
cmp
icebp
and
mov
cld
xchg
xchg
leave
dec
pushf
push
orl
not
das
negl
and
mov
xchg
mov
mov
inc
cmp
dec
loop
cli
incl
pop
imul
jne,pt
ret
scas
adc
jns
and
movsb
into
fs
pushl
and
and
rcr
jecxz
dec
inc
push
mov
orl
dec
mov
lcall
shlb
mov
mov
cmpsl
adc
incl
fists
mov
iret
adc
mov
incl
sahf
repz
push
mov
inc
test
cmp
sbb
mov
mov
inc
sti
arpl
mov
test
sbb
cmc
loope
cmp
fdivrs
sub
add
dec
in
and
mov
cmp
lahf
add
jmp
jbe
loopne
xchg
xor
adc
popa
into
push
push
sub
inc
xchg
bound
inc
cmpsb
rorb
sarl
jnp
mov
push
inc
sbb
mov
push
pushl
inc
add
scas
add
mov
lea
sbb
sbb
xlat
mov
pop
cmc
ljmp
adc
test
dec
add
sub
ret
add
arpl
cs
mov
gs
add
mov
loope
fxch
outsl
sbb
cli
lds
fs
mov
sbb
lods
pop
std
push
sbb
mov
add
icebp
push
xor
jmp
addb
adc
inc
adc
cmp
pop
jb
fs
mov
pop
test
fsubr
ljmp
jle
das
mov
mov
inc
push
cmp
fstpt
int
add
mov
inc
div
shrl
rcl
mov
fcomip
incl
add
sahf
cltd
or
jns
enter
mov
aam
mov
sbbb
loope
js
test
fwait
xchg
mov
lods
mov
adc
mov
aad
dec
dec
clc
inc
or
mov
add
push
dec
inc
pop
lock
test
addr16
cmp
shll
mov
rol
or
add
fldt
push
mov
roll
dec
add
inc
loopne
scas
in
sbb
cmp
mov
fnsave
fsubrl
push
jmp
test
filds
cltd
jbe
outsb
shrb
int3
cmp
adc
incl
sti
add
add
stos
inc
mov
aaa
stos
andl
stos
ljmp
loope
out
jecxz
add
cltd
jge
jbe
ja
add
outsb
push
mov
sub
sbb
jecxz
sbb
xor
sbb
inc
ret
insb
adc
mov
add
jmp
xorl
sub
rsqrtps
cmc
rcl
xchg
paddusw
cld
scas
adc
add
xchg
pop
scas
stos
js
mov
xchg
icebp
idiv
push
into
iret
push
stc
add
jmp
aad
rcrb
jg
xchg
pop
mov
fs
add
aam
call
arpl
and
cmpb
lock
popf
mov
jae
pandn
incl
cmp
outsb
add
roll
inc
lret
jmp
out
ret
ret
add
jecxz
js
sub
lahf
mov
push
adc
loope
jg
xchg
mov
add
addb
and
sarl
jecxz
add
push
pop
in
inc
add
pop
cmpsl
pop
mov
or
jmp
mov
inc
adc
adc
ret
rorb
es
fcompl
ljmp
mov
rolb
pop
das
or
or
scas
test
stos
and
incl
push
stos
ds
mov
push
pop
lock
add
push
xchg
add
imul
add
es
inc
or
inc
imul
mov
xchg
xor
movsl
sbbl
into
sbb
lock
pop
hlt
or
cwtl
das
cmp
pusha
push
test
stc
lods
es
dec
cmc
rorb
loop
data16
clc
cmpsb
push
mov
sbb
enter
stos
fidivs
outsb
inc
jns
jns
dec
sbb
popa
mov
dec
lcall
mov
pop
shlb
xor
ret
rolb
leave
cmpsb
pop
mov
cld
mov
aad
or
test
incl
add
js
pusha
sub
ret
inc
pop
pop
inc
adc
out
fldl
sarb
dec
xchg
mov
add
mov
rolb
add
xchg
adc
in
push
in
stos
hlt
adc
or
and
in
sbb
or
scas
clc
push
aas
rolb
cmp
mov
xchg
lock
lock
inc
movsb
lcall
ror
push
jl
stc
and
pminsw
xor
jp
add
ja
call
dec
dec
and
sarb
sahf
mov
subl
sbbb
popf
fsubp
adc
push
loopne
dec
jg
push
inc
dec
inc
pop
mov
inc
mov
aam
mov
incl
sub
jl
movsb
das
subb
add
orl
movb
cld
mov
jmp
xchg
push
sub
addb
sbb
cmpsb
test
fimull
aad
incl
inc
jmp
lds
mov
dec
and
jg
stc
nop
popf
and
inc
lahf
inc
or
pusha
pushf
sbb
int3
xchg
mov
mov
loope
pop
bound
lret
pop
movsl
dec
lods
cltd
shrb
dec
leave
dec
ljmp
pop
push
dec
xor
sahf
jl
sub
push
mov
cwtl
pop
cwtl
dec
adc
fidivrl
incl
repnz
nop
and
jle
stos
add
into
jae
add
testl
push
mov
mov
loopne
dec
push
xor
les
dec
incl
cwtl
invlpg
loopne
inc
nop
xor
lds
jg
jmp
xor
enter
inc
push
aad
dec
test
jae
lahf
jno
call
cmpsb
mov
push
cld
in
adcl
dec
repnz
cmpsl
mov
fists
dec
xorl
lods
push
popl
decl
incb
outsb
mov
hlt
dec
sbb
fwait
and
fadds
decl
jo
mov
sub
jnp
mov
and
xchg
mov
xchg
add
das
clc
and
add
orb
and
pop
dec
and
scas
and
adc
mov
xchg
fisubl
pushf
xchg
sub
inc
cmp
es
cwtl
pop
push
xchg
lods
mov
incl
xor
test
out
ss
jbe
adc
or
bound
inc
or
jo
cli
jg
lcall
xchg
and
adc
rolb
xchg
sub
xchg
xlat
mov
icebp
lcall
push
inc
mov
shl
jl
imul
decl
adc
mov
cmp
mov
adc
cld
js
cwtl
xchg
jp
pop
es
cmpsl
or
pushl
in
inc
cltd
fnstenv
mov
in
mov
repz
and
push
xchg
roll
jecxz
mov
inc
dec
ret
dec
push
jl
or
xchg
dec
xchg
lcall
xor
push
call
and
adc
dec
pop
lea
inc
push
and
inc
sahf
loopne
pop
dec
mov
clc
and
xor
mov
jbe
pusha
ret
mov
or
add
addl
or
sarb
push
cltd
test
push
inc
sub
nop
push
sub
or
add
rolb
add
inc
cmp
in
lret
jg
shlb
cmpsb
les
push
lahf
pop
jae
xchg
jl
xor
loop
loopne
add
dec
jo
loopne
dec
pop
mov
lds
leave
and
add
pop
mov
jo
sub
jp
je
mov
jge
push
sub
sbb
test
movsb
clc
ljmp
insl
insl
mov
mov
jmp
or
push
jge
push
cmpsb
arpl
gs
popf
mov
ret
push
jg
jmp
mov
inc
inc
pop
repnz
dec
pop
xor
push
mull
push
nop
sbb
es
imul
and
inc
mov
pop
or
lahf
inc
xlat
mov
dec
je
lcall
mov
scas
xor
rcl
aad
clc
stos
jns
sub
stos
clc
push
in
mov
shll
adc
inc
mov
shlb
sub
lock
and
ss
mov
adcb
cli
addps
inc
shlb
pop
mov
push
sub
loopne
jecxz
xchg
lret
addb
std
jmp
sub
inc
jne
cmpsb
cwtl
lret
and
sbb
adc
jp
gs
iret
and
xchg
pushl
lret
clc
cs
jp
add
sub
call
xchg
cmp
sbb
push
sbb
lcall
xchg
test
sub
sarl
mov
daa
mov
xlat
push
sub
pop
push
sbb
ljmp
shl
imul
leave
fs
xchg
mov
mov
mov
inc
jmp
stc
add
lret
xchg
xor
jns
or
inc
int3
lahf
test
gs
mov
mov
push
cmp
cs
cmc
adc
sti
push
test
call
adc
icebp
cmp
dec
sub
lods
jae
jmp
mov
or
sub
pushl
bound
push
pop
insl
mov
fiaddl
inc
shr
call
fcompl
add
jg
insl
dec
sahf
jmp
xchg
sub
addb
jns
adc
fildl
jg
ljmp
ret
sub
xchg
adc
cs
and
xor
jmp
inc
scas
jg
ret
and
nop
xor
pusha
jge
cmp
sub
pushl
add
or
adc
push
out
nop
es
sar
cs
pop
cmp
shrl
cld
jmp
fiaddl
into
rcrb
addr16
add
call
and
cmc
out
clc
ljmp
inc
std
je
cmp
mov
xchg
loop
push
sar
outsl
adc
ljmp
cmp
dec
sub
movsl
iret
out
add
cmp
scas
lcall
and
pop
inc
pop
and
sbb
adc
cltd
les
dec
scas
fdivs
lock
lcall
je
scas
repnz
outsb
mov
and
leave
movsb
rcrl
movsb
mov
divb
aaa
sbb
pop
sub
xchg
jno
sbb
dec
mov
loope
testl
jp
and
scas
jp
push
xchg
sub
addr16
inc
add
sub
movsl
sbb
push
decl
pop
cltd
fldenv
sub
js
or
or
sub
cmpsl
inc
ljmp
xchg
sbb
mov
sub
sbb
cmpsb
mov
and
cld
decl
ret
adc
dec
mov
pop
sti
stos
jno
mov
decl
cmpsb
bound
in
orb
dec
or
mov
jg
sbb
jae
sub
jg
pushl
cltd
lret
nop
cmp
test
lret
repz
mov
mov
cwtl
ds
jns
jg
call
inc
mov
xor
orl
sbb
pop
fcomip
mov
push
adc
and
and
scas
adc
insb
ss
and
add
popa
ljmp
std
cmc
loop
lret
inc
cmc
mov
movsb
pop
cwtl
lock
movsb
pop
les
enter
or
xor
fbld
adc
mov
call
es
push
incl
mov
dec
push
repnz
mov
xor
ljmp
ja
shr
int
int3
or
push
or
xchg
mov
pop
in
jmp
and
sbb
insb
mov
sub
push
and
mov
ljmp
add
sbb
fiaddl
mov
fadds
cmpsb
sub
mov
shll
sub
out
sti
mov
shrl
or
mov
xor
bound
xor
cltd
iret
dec
cli
push
dec
adc
adc
addr16
cmp
ret
nop
sub
in
pushl
les
cltd
jnp
xchg
sub
addl
sbb
add
out
push
xor
push
or
push
popa
ja
push
js
xor
ficoml
push
add
jb
push
sbb
mov
push
inc
add
pop
xchg
or
jb
dec
mov
dec
outsl
xor
sub
fnsave
mov
out
enter
mov
xor
mov
mov
aaa
cld
incl
pop
jbe
inc
iret
pushf
sbb
lret
adc
sub
enter
push
inc
je
adc
fldl
popa
jno
and
cmp
in
std
or
fsubs
ja
imul
std
mov
inc
sar
ror
stc
cltd
jbe
xchg
jg
jle
push
comiss
and
pushl
sub
enter
jbe
adc
mov
js
cmc
sub
sti
pop
dec
decl
add
out
jo
sbb
push
cmp
fs
mov
jmp
adc
xchg
cmpsb
in
xchg
mov
enter
inc
xor
mov
lcall
ja
cmpb
lcall
sbb
out
loop
push
push
scas
leave
pushl
sbb
mov
popf
pusha
or
shrb
ja
xchg
js
pop
and
xor
add
decl
and
add
sub
push
aaa
push
add
inc
inc
and
xor
call
rclb
sbb
dec
adc
insb
inc
ror
push
add
popa
js
dec
fildll
xor
pushl
jne
jge
sub
add
sub
popa
add
add
and
mov
cwtl
jp
mov
ljmp
lods
test
mov
mov
dec
sub
jb
inc
and
add
add
mov
mov
test
and
outsl
out
into
push
sbb
mov
imulb
pop
add
and
push
clc
mov
add
xor
out
cmp
mov
add
push
loope
movsl
mov
icebp
or
xor
dec
je
jg
das
or
and
cmp
arpl
adc
movsb
icebp
inc
jle
push
pushf
mov
fisubs
cmc
cmpsl
call
addr16
mov
jle
imul
sub
xchg
mov
stos
dec
clc
cmc
push
sub
mov
hlt
outsl
clc
inc
stc
xchg
or
xlat
push
lods
into
loope
filds
pop
imul
pushl
popa
aaa
fstpl
pop
outsb
mov
jl
jge
dec
add
mov
sbb
lock
popf
mov
adcl
ja
and
add
sbb
add
add
mov
jnp
push
sub
jle
test
jg
or
inc
xchg
mov
lcall
dec
sub
and
mov
das
imul
or
pop
or
or
cmc
jg
lret
xchg
push
mov
jmp
mov
add
push
decl
add
xchg
mov
int3
add
inc
stos
xchg
incl
xlat
ret
ret
adc
jle
decl
jecxz
jle
pushf
push
cmp
popa
add
and
lahf
cmpsb
imul
cmpsb
xor
or
decl
in
add
xchg
jp
mov
push
mov
jg
decl
cmc
pusha
addr16
xor
test
mov
sbb
mov
adcl
xor
jno
lcall
dec
mov
mov
pusha
mov
mov
and
dec
pop
xchg
cmc
lods
inc
sbb
xchg
inc
test
incl
cltd
popf
dec
leave
subb
mov
xchg
and
mov
std
xchg
add
cld
ror
adc
jb
pop
sbb
mov
xorl
icebp
lcall
movb
pop
cwtl
mov
adc
lods
shrl
test
fcomip
xlat
out
sbb
xchg
inc
je
sub
mov
xchg
lret
lcall
lcall
cmp
xor
push
divb
and
dec
pop
pop
inc
xchg
outsb
xchg
inc
stos
enter
jmp
add
xchg
xchg
xchg
les
mov
push
mov
xchg
jns
cwtl
je
das
hlt
lcall
sub
dec
push
dec
or
movsb
loop
inc
jb
iret
xlat
mov
add
arpl
push
add
cmp
call
popf
pop
outsb
cltd
cmpsl
and
or
adcl
add
data16
push
lret
cmp
mov
mov
push
hlt
mov
rcl
adc
add
lods
add
jp
mov
mov
in
mov
mov
or
notb
add
sahf
and
xchg
andl
gs
pushl
test
lods
sahf
test
push
dec
sbb
sbb
add
fs
clc
sub
out
incl
sbb
stos
nop
stos
ret
movl
test
and
mov
add
mov
or
xchg
in
pop
cwtl
leave
sub
daa
xor
rcrb
test
out
cmp
mov
xchg
nop
int3
cs
sahf
pop
push
popf
insl
push
sbb
test
jb
repz
dec
lcall
dec
in
adc
sub
sarb
adc
adc
arpl
cld
bound
std
push
add
and
dec
jne
mov
pop
mov
daa
dec
adc
pop
mov
xor
mov
cmp
in
add
push
das
jo
decl
adc
cld
xchg
pusha
lcall
mov
ret
and
mov
sbb
test
ret
inc
xchg
dec
pop
je
popfw
mov
sub
movsb
xchg
aas
dec
push
sbbb
push
or
cmp
rorl
mov
testb
das
push
das
inc
cmp
xchg
mov
cmp
data16
or
out
test
mov
ret
mov
lcall
es
push
push
cmp
aad
xlat
movsl
push
inc
mov
setae
jb
pushf
add
add
and
or
je
ljmp
mov
cmp
jbe
xor
out
or
xchg
jmp
xchg
test
mov
stos
cwtl
inc
jle,pn
test
js
ljmp
into
jno
outsb
cmp
add
subb
cs
pushw
loope
pop
mov
pand
icebp
lcall
inc
adc
mov
pushf
jmp
ljmp
lods
mov
imul
jbe
inc
into
mov
popf
dec
and
or
decl
outsb
mov
jg
hlt
sahf
mov
xor
jl
add
mov
movsb
xchg
stos
idiv
ljmp
fcom
and
sbb
cmp
or
andb
dec
adc
incl
mov
and
insb
in
and
bound
movl
call
mov
jo
pushf
cmp
add
shll
push
nop
out
push
mov
es
das
clc
lcall
push
pusha
jmp
and
xor
cmp
in
push
test
sub
add
sub
cmpsl
xor
dec
or
test
jmp
and
inc
pusha
cmc
xchg
movsb
int3
sbb
lods
mov
stos
mov
ja
jle
adc
mov
ljmp
pop
and
jns
push
stos
add
ss
icebp
inc
in
jle
xchg
lcall
or
push
adc
popa
rorb
jno
stos
cli
cmp
or
sbb
das
jmp
xor
es
lret
lcall
dec
in
loopne
xor
inc
mov
jmp
xchg
dec
xchg
lock
je
mov
mov
mov
in
nop
scas
and
xor
xchg
pop
mov
movsb
pop
in
sub
mov
int3
popa
rorl
ss
push
pushl
inc
dec
fmuls
lea
pop
lea
popf
cmpsb
and
in
es
jp
or
mov
sub
rolb
sbb
push
data16
in
mov
inc
jns
out
aas
xor
mov
inc
jne
dec
popa
mov
adc
jo
adc
ljmp
or
mov
fnstcw
xchg
jbe
movsb
sar
sarl
mov
add
add
jmp
fldl
inc
push
cmc
xchg
aaa
fcoms
in
stos
cltd
notl
dec
pop
ss
decl
mov
sub
and
lcall
mov
jge
dec
ljmp
pusha
mov
fisubrl
cld
dec
xchg
and
push
out
cmp
xor
cmp
lcall
cmpsl
adc
cmpsb
ds
xchg
sub
nop
scas
stos
loope
push
fcoml
ret
dec
test
mov
sub
ja
inc
ret
lmsw
mov
push
xor
inc
test
pop
pop
and
dec
xchg
leave
call
adc
out
cmp
push
arpl
enter
mov
mov
out
int
and
pop
popf
mov
jg
insb
inc
xor
sub
xchg
add
data16
push
lock
pop
cld
or
mov
xor
or
pop
sub
mov
mov
enter
mov
es
lcall
lock
push
or
ret
stos
mov
in
test
rorl
lods
add
and
add
xor
pushl
mov
sti
pop
incl
pop
mov
pop
mov
mov
mov
add
scas
jbe
jg
inc
xchg
sbb
test
je
mov
ret
mov
clc
add
das
mov
jb,pn
add
mov
in
jne
imul
int3
pop
cmp
dec
in
ret
push
sahf
jmp
jae
push
adc
cmp
sbb
xor
add
adc
outsl
ss
aam
movsl
and
popf
inc
jbe
xchg
iret
or
in
dec
cwtl
cmpsb
mov
jp
mov
push
jmp
mov
pop
lds
inc
jecxz
cmpsl
repnz
xchg
adc
inc
cmp
push
mov
data16
mov
pop
lret
jnp
sbb
test
mov
add
ja
xlat
and
and
shlb
or
cmpsb
push
fistpl
stc
dec
fs
nop
xor
jno
jge
add
inc
cs
ret
sti
add
and
dec
das
push
ds
inc
xchg
and
cmp
in
sub
dec
mov
push
sbb
cmp
push
cmpsl
mov
in
and
and
sarb
adc
jb
repnz
repnz
data16
es
lret
or
adc
xor
clc
add
call
lock
sbb
ret
xor
insb
dec
cltd
add
scas
cs
movsl
add
sbb
or
outsl
mov
lret
push
or
nop
int3
pop
rorb
lods
sub
push
mov
das
int3
xchg
mov
cmp
mov
or
push
xor
pop
jae
lea
lahf
jne
loopne
xor
sub
dec
adc
xchg
inc
and
adcl
das
add
cmpb
es
das
cmp
outsb
imul
push
inc
mov
cli
cmpsb
and
fwait
lcall
cwtl
pop
popf
dec
jge
in
cld
mov
add
fucomi
out
adc
fsubl
add
adc
sbb
js
jmp
mov
ss
loopne
rclb
incl
iret
test
push
ret
xchg
enter
int3
xor
jge
mov
jg
rorl
sub
jo
and
adc
mov
les
loop
fldt
ljmp
pop
clc
xchg
sub
sub
inc
bound
cmp
and
scas
clc
mov
jp
mov
add
inc
popl
loope
mov
sub
scas
jnp
lods
mov
xchg
and
icebp
jmp
mov
push
addb
sub
inc
js
xchg
and
outsl
ds
adc
inc
cmp
add
pop
inc
leave
les
sub
xchg
incl
xchg
dec
sbb
pop
ret
add
inc
jmp
sub
mov
hlt
nop
or
sub
cmp
lods
jb
and
daa
sbb
fldl
mov
sbb
add
dec
call
jns
xor
roll
mov
mov
adcl
sub
mov
sbb
or
cli
sbb
push
hlt
fistpll
sub
call
je
xchg
add
loopne
aaa
test
stos
cld
xor
cmp
out
cmp
jb
mov
add
sbbb
push
pushf
cld
or
outsb
push
and
es
xchg
cmpsb
jmp
add
and
hlt
lcall
loopne
rorb
adc
or
sbb
jg
jp
cmpsl
add
inc
enter
ret
enter
jp
adc
jmp
in
inc
pusha
sub
fsincos
add
fdivp
add
add
jecxz
fisttps
incl
cld
mov
jle
cmp
lods
ss
add
jae
sar
mov
lods
xor
pushf
mov
inc
and
mov
and
popa
mov
sub
and
add
push
fsubrs
mov
js
call
or
add
nop
fimull
inc
dec
int3
fwait
insl
adc
repz
mov
pop
lock
loopne
int
push
adc
dec
mov
rcl
jnp
push
in
out
imul
mov
daa
lds
sub
enter
in
sub
ljmp
jb
fbstp
fildl
lahf
xor
test
movsl
shl
adc
push
jbe
add
lcall
in
js
stos
lea
dec
clc
out
inc
mov
mov
lock
add
test
adc
ret
nop
or
and
ja
cmpb
add
mov
or
and
xor
and
int3
cmpsb
or
mov
into
cmp
addr16
push
pop
push
jmp
sbb
mov
out
cwtl
jo
xchg
punpcklwd
ds
cmp
add
xor
push
dec
jmp
adc
xor
xorb
push
pushf
push
jae
push
jb
push
clc
ficoms
movsb
aad
jg
lcall
sbb
addl
fs
jmp
push
hlt
and
xor
mov
js
mov
push
cmp
enter
int
push
or
popf
and
adc
pushl
cmpb
and
dec
pop
movsb
decl
inc
adc
shl
out
jmp
jne
xchg
je
push
adc
add
adcb
xlat
and
int
incl
and
jl
and
and
or
xchg
mov
cs
or
imul
ljmp
inc
jno
add
test
xlat
jmp
jbe
push
adc
or
decb
xor
daa
ljmp
sarb
sahf
testl
mov
dec
out
pusha
bound
pop
std
jmp
mov
or
jb
jp
ds
inc
ret
idivl
dec
clc
inc
sbb
divb
std
ret
ret
mov
jg
pop
es
jno
push
pop
inc
cld
test
push
sbb
popf
clc
mov
jo
ljmp
push
out
out
call
dec
jp
inc
pop
sbb
add
jnp
adc
xchg
jmp
icebp
cmp
or
mov
xchg
rcll
data16
xor
repz
mov
incl
cmp
ljmp
popa
ds
incl
inc
cmc
jl
fnstenv
xor
stc
cmp
xor
icebp
test
jnp
lahf
inc
dec
incl
push
rcrb
sbbb
mov
loopne
cmp
mov
mov
and
pop
dec
bound
xlat
add
add
mov
xchg
push
mov
popl
ljmp
sar
loop
mov
push
test
stos
mov
stos
push
or
sub
add
cmpsl
pop
sub
and
or
mov
jo
call
add
push
sub
inc
bound
add
dec
fisttpl
sub
dec
aam
decl
outsb
jne
mov
mov
add
andl
test
ljmp
push
rol
aas
add
and
add
mov
inc
adc
xchg
mov
mov
fisubrs
and
decl
adc
xchg
jmp
adc
rcrb
pop
sub
les
or
mov
or
and
fsub
mov
hlt
mov
adc
xor
and
fstps
add
push
mov
mov
xchg
out
out
das
clc
in
cmp
adc
stos
iret
lcall
push
movsl
add
orl
and
ss
push
mov
or
sysenter
icebp
xlat
test
push
ja
xchg
lock
mov
xchg
pop
aam
sbb
into
in
pop
inc
fsubl
decl
imul
test
aam
jo
mov
lcall
add
aaa
fldl
fwait
jp
aaa
add
sub
or
xchg
ljmp
xchg
test
mov
xor
add
clc
jg
add
mov
pop
cmp
shlb
add
jg
incl
xchg
mov
dec
push
out
cmp
icebp
mov
sbb
pop
jno
cld
jg
in
or
mov
sbb
lahf
inc
push
or
iret
inc
int
ljmp
xchg
sub
popa
loope
pop
wbinvd
push
push
iret
jb
push
add
lods
add
sbb
daa
sub
mov
lret
cli
adc
jle
push
add
xor
test
pop
add
push
sub
mov
and
aaa
or
xchg
pop
shll
loope
xchg
cmp
mov
incl
in
add
pop
adc
xchg
xchg
faddp
push
stos
repz
jg
lds
xor
popf
into
loopne
mov
xchg
inc
data16
inc
cmp
outsl
out
push
inc
jmp
mov
jnp
jb
out
pop
imul
pushl
cld
decl
in
dec
push
leave
mov
jne
xor
xor
jmp
mov
cld
or
es
pop
int
mov
mov
iret
or
lcall
or
push
add
mov
mov
mov
cmp
das
push
push
sub
out
push
sub
jmp
mov
xchg
jb
mov
sbb
enter
aaa
inc
divb
mov
decl
jge
xchg
out
adc
jp
xlat
cs
jp
test
add
inc
cwtl
mov
clc
mov
jmp
imul
movl
repz
insl
adc
jb
cmp
push
mov
lcall
fs
adcb
jg
mov
add
stos
mov
lds
mov
sar
out
dec
add
pop
jg
jmp
jne
dec
nop
adc
jo
add
adc
and
ljmp
xor
lret
aaa
mov
lods
clc
shlb
add
cwtl
mov
fiadds
lods
dec
mov
lcall
mov
pop
xchg
sbbb
mov
pop
ret
inc
jo
cmp
xchg
jmp
loop
cmpsb
das
push
pop
inc
popa
sub
sub
and
cwtl
decl
dec
addr16
fiadds
push
cmpsb
stc
rorb
js
sbb
in
sbb
jg
push
jl,pn
mov
sub
pop
mov
negl
mov
pop
pop
sar
pushl
push
or
cmpsl
cwtl
inc
xor
pushf
or
mov
jg
out
pusha
sbb
xor
out
arpl
cmp
push
popa
inc
xchg
ljmp
add
clc
jmp
mov
in
movsb
cmp
nop
xor
jo
inc
mov
inc
jp
jge
jecxz
nop
cmpsb
out
pop
dec
adc
jnp
stos
loope
bound
push
sbb
aaa
add
xchg
outsb
inc
in
jp
arpl
lcall
in
pop
cwtl
std
xor
pop
push
into
aaa
cmpsl
xlat
xchg
or
or
xor
cld
add
adc
xchg
push
xor
clc
adc
test
jmp
loope
jg
xchg
jne
loopne
lcall
popa
xchg
fwait
test
andb
stos
xchg
inc
inc
mov
pop
add
or
add
clc
mov
aas
bound
lds
sub
das
lcall
repz
jmp
es
add
jmp
inc
push
and
add
std
fdivr
inc
mov
xor
mov
pop
push
pop
iret
sub
stos
pusha
dec
add
shrl
dec
in
jg
xor
fwait
mov
in
outsb
fcmovu
cwtl
mov
mov
xchg
int
xchg
add
mov
int
ja
mov
mov
pop
jno
std
ret
inc
imul
loope
pop
stos
aaa
push
mov
outsb
inc
add
pop
and
xchg
mov
push
dec
dec
pop
and
test
adc
jb
jmp
les
add
add
add
clc
mov
in
fildl
xchg
xchg
add
pop
cmp
and
lcall
inc
mov
inc
xchg
sti
lock
cli
add
ljmp
mov
leave
add
rol
inc
ret
cli
sub
mov
cld
dec
add
and
ffree
movsl
es
arpl
push
inc
add
lcall
clc
xchg
xchg
pop
rorl
xchg
dec
mov
mov
fbstp
add
stc
add
or
and
push
sub
ret
js
xchg
add
loop
incl
mov
xchg
divl
add
addb
adc
add
shr
sub
add
jne
inc
clc
jle
pop
add
mov
cs
les
dec
fisubrl
imul
xchg
lock
daa
mov
add
or
xchg
or
fstpt
fbstp
adc
xchg
dec
aas
lds
push
mov
ds
or
add
add
add
dec
sbb
sahf
mov
and
pop
push
out
call
jnp
push
cmp
inc
dec
mov
push
cmp
gs
in
dec
add
push
pop
adc
decl
decb
mov
cmpsl
add
es
scas
shrb
fsubs
add
cmpsb
mov
mov
jge
lds
mov
xor
cmpsl
aas
mov
sub
in
and
pushf
ret
and
xchg
mov
std
dec
pushf
cmp
lcall
in
cli
or
dec
sahf
xchg
or
and
or
stos
or
push
pop
adc
in
sbb
lea
cmp
sbbl
add
adcb
jb
loop
add
xchg
loope
push
adc
pop
or
add
lods
push
jno
mov
out
add
jne
push
sbb
cmp
jle
xor
addl
arpl
mov
call
mov
adc
sbb
and
testb
test
add
sub
cmc
or
dec
mov
lcall
mov
insb
das
in
js
insb
inc
imul
add
push
xchg
sahf
cld
test
rcl
lods
int
scas
lea
fsubl
xchg
call
cmp
add
sub
in
mov
dec
pop
sbb
in
jl
push
mov
mov
push
push
adc
loop
ljmp
inc
sahf
mov
ss
sbb
pop
dec
xchg
xchg
add
in
jge
jl
fcompl
imul
ljmp
lods
out
pop
out
cltd
add
sub
pop
pop
jmp
sbb
xchg
and
jne
addr16
sarb
js
xchg
repz
pop
call
jecxz
test
ss
testb
loopne
pmulhuw
jge
lcall
pushl
loop
mov
mov
sbb
inc
sbb
aaa
pushl
or
sub
ds
mov
or
mov
adc
incl
xor
fwait
movsl
cmp
mov
and
cmp
cmpsb
into
and
cmp
xor
outsb
scas
adc
loope
jle
mov
rol
sub
push
lret
call
mov
pop
sbbb
enter
mov
sub
mov
outsl
mov
repnz
pcmpeqd
sti
sti
mov
std
cmpsl
ds
lret
sti
out
cmp
xchg
cmp
fmuls
fwait
add
or
jnp
dec
cmp
stos
pop
sahf
dec
out
or
or
sbb
push
mov
ljmp
push
popf
lds
sbb
lea
sbb
sub
popa
xchg
inc
xchg
je
int3
fdiv
push
mov
pop
mov
in
sbb
jp
mov
movq
in
xchg
insl
sarl
adcb
and
and
aad
ss
cmp
leave
cmp
mov
jbe
adcb
outsb
lret
sub
mov
adc
in
ss
pop
inc
or
xor
enter
loope
repnz
stc
imul
mov
xor
pop
xor
lret
cmp
pop
sub
pop
cmp
dec
or
mov
movsl
mov
fwait
dec
ljmp
add
notb
jp
inc
dec
std
pop
xor
cmp
enter
arpl
decl
or
aas
mov
push
cli
rorl
scas
mov
daa
jmp
hlt
sbb
aaa
and
out
jmp
movsl
mull
mov
add
push
dec
das
clc
cmp
sub
insl
mov
mov
sahf
pop
dec
lds
mov
call
lahf
push
cs
out
sti
mov
jns
mov
ret
ret
loopne
dec
xchg
xchg
pop
cs
jo
decl
pop
testl
sub
in
pop
push
shlb
popa
jp
jbe
dec
mov
push
lea
cwtl
decl
mov
or
pop
inc
les
push
shr
sbb
push
or
and
fdivr
mov
imulb
add
and
sbb
adc
stc
mov
decl
xchg
in
in
out
push
mov
add
ffree
xchg
inc
mov
les
cmpsb
shll
mov
mov
mov
adc
lods
push
jl
adc
repz
sbb
js
shrl
fcmovnb
jge
mov
test
mov
adc
lcall
imul
pop
hlt
xor
pop
mov
mov
fimuls
sbb
into
ret
push
xchg
or
gs
mov
adc
push
subl
mov
sbb
push
xchg
add
sub
mov
int
add
adc
pushl
cld
xchg
aas
xchg
or
xchg
bound
pop
mov
test
pushf
stos
aam
pushl
xor
cmp
jecxz
mov
sbb
in
jo
xchg
out
and
iret
jg
decl
push
add
add
xor
pop
fidivl
xchg
mov
pop
daa
jmp
ret
test
in
cmp
rorb
insl
sub
dec
lcall
sbb
mov
ljmp
imul
xchg
push
test
or
xchg
jmp
or
jl
jb
mov
gs
ret
xchg
stos
add
int
lea
mov
mov
das
mov
out
clc
mov
pop
mov
sbb
leave
testl
cmp
pushl
clc
xor
sti
pusha
iret
jg
jbe
inc
pusha
cld
and
or
xchg
js
call
enter
push
aad
scas
jo
test
xchg
ffreep
ss
pop
adc
adc
nop
rolb
call
xchg
add
insb
aas
mov
mov
jle
push
mov
mov
push
std
inc
test
stc
xor
mov
pop
mov
mov
push
cmpsb
idivb
xor
js
call
pop
cmc
lcall
fcmovnb
inc
cwtl
pop
sahf
bound
roll
jnp
test
push
jle
ljmp
loop
cmpb
or
fstl
mov
add
aaa
fmull
xchg
mov
pop
icebp
pop
push
and
mov
outsb
sbb
pushl
ret
sbb
or
xchg
xchg
cmc
mov
jo
cmpsb
and
jmp
mov
ja
xor
outsl
in
imul
inc
imul
push
into
mov
push
rcrl
shlb
cltd
dec
push
add
lret
mov
lahf
imul
jg
pop
mov
dec
cmp
in
cld
or
rcll
xchg
loopne
inc
sar
inc
or
loop
inc
adc
rcrb
mov
cs
lock
dec
fcoml
dec
nop
pop
cmp
xor
mov
mov
mov
popa
js
jmp
cmp
in
xor
dec
cmp
push
outsl
cmp
mov
xchg
aad
xor
or
rcrb
movl
push
decl
orb
or
loope
jg
stos
int3
cmc
je
mov
adcb
jp
incl
insb
aad
fdivrs
jecxz
daa
cmp
pop
push
mov
popf
mov
lods
cmp
ljmp
mov
and
add
xor
add
push
jge
jbe
pop
popf
insl
push
out
ds
jmp
xchg
sahf
movsb
fisubrl
fdivp
cmp
sub
popa
push
es
jno
call
idivl
xchg
es
addr16
inc
es
inc
jbe
mov
out
in
divb
xchg
push
cmova
xor
mov
push
rcrb
mov
and
ljmp
popf
mov
in
push
fildll
andl
in
inc
pop
mov
cmp
ljmp
testb
sahf
ror
mov
pushf
les
sbb
mov
or
xor
movsl
pop
sub
push
inc
stos
push
out
cli
mov
int3
push
stos
or
mov
or
call
sahf
lret
fcompl
hlt
xor
push
pop
gs
xor
dec
pop
aam
mov
fimuls
lcall
mov
pop
daa
cmpsl
les
xorb
cmpsb
push
notl
push
sub
jge
sub
add
dec
mov
dec
sub
dec
sub
ret
stc
pushf
repz
sbb
outsb
add
test
loop
sbb
popf
dec
mov
push
inc
movl
mov
int
lods
mov
je
dec
cmp
mov
mov
int3
mov
jno
sbb
inc
mov
mov
lcall
nop
sub
jnp
adc
jns
dec
mov
fdivrp
je
push
add
dec
xor
push
std
jo
int
gs
rclb
pop
scas
xor
mov
mov
fdivl
lret
das
pop
add
lock
je
pop
dec
inc
xchg
loopne
loopne
jmp
faddl
inc
in
popf
and
mov
inc
arpl
sub
fildll
fs
jnp
dec
lcall
jmp
insl
xchg
arpl
cmp
incl
decl
push
push
dec
aas
in
mov
mov
popf
inc
shrb
popl
cmp
ja
decl
or
or
out
pop
das
lret
cmc
ljmp
cmp
jle
xchg
outsl
das
cli
mov
jns
mov
mov
sub
ljmp
mov
scas
dec
clc
js
out
jno
add
shl
outsl
mov
call
pop
mov
outsl
cli
cld
enter
adc
push
xor
andl
loop
jb
in
stos
sahf
ljmp
incl
xor
cmp
decl
xor
repnz
into
enter
jno
jmp
mov
aam
and
mov
and
or
xchg
xchg
das
call
mov
xchg
mov
inc
sbb
push
in
js
mov
mov
insb
jns
jb
fcomip
inc
sub
dec
sbbb
incl
test
sub
mov
xchg
sub
mov
outsl
pop
cltd
push
and
push
push
inc
pop
popa
pop
dec
inc
mov
jg
add
popl
jns
mov
mov
push
inc
mov
and
insl
jnp
adc
jno
push
insb
rorb
cmpsl
inc
loope
decl
lock
jb
std
jge
xchg
fildll
xor
arpl
xchg
aam
int
add
cs
xchg
add
lret
sti
idiv
sti
decl
jo
aad
pushf
int
sub
lock
sti
ror
sbb
std
fnsetpm(287
fs
dec
mov
add
cli
std
enter
inc
pop
test
sbb
or
cltd
sub
and
into
cmc
sbb
out
or
daa
ret
idiv
pushl
outsl
mov
push
out
scas
pushl
lahf
insl
lcall
mov
push
insl
repz
loop
scas
jbe
sarl
leave
outsl
lea
push
inc
xchg
ds
std
or
test
sbb
aaa
mov
loopne
test
enter
mov
add
incl
inc
mov
and
inc
test
jmp
frstor
ret
jecxz
imul
xlat
fcmovnb
cmpsl
mov
inc
mov
fcoml
add
test
xlat
mov
xchg
decl
push
sbb
and
movb
fstl
ds
fadds
call
jnp
fisubl
outsl
outsb
dec
frstor
xlat
cs
lods
int3
pusha
popa
movsb
sub
incl
push
cmp
fidivl
int
adc
dec
call
repnz
and
test
and
adc
leave
iret
out
jbe
out
xchg
stos
ret
cmc
dec
cmp
data16
xor
out
ljmp
xchg
lods
and
push
xchg
mov
stos
insl
nop
cltd
adc
mov
cmpsl
int3
ret
mov
mov
ljmp
lret
divb
xor
xchg
les
sbb
inc
dec
aaa
dec
jo
lea
dec
pusha
std
pusha
push
and
mov
cmp
pop
call
divb
pusha
cmpsl
jo
mov
out
insb
dec
dec
mov
cmp
stc
dec
ja
cmp
incl
shrl
mov
stc
inc
xor
ja
cmp
lds
or
cmpsl
insb
repnz
fisubs
repz
push
xchg
adc
out
and
push
cwtl
mov
fisttps
jmp
jmp
push
xor
out
mov
cmpl
push
add
mov
xor
fs
aad
sub
jns
hlt
jecxz
xor
push
xor
scas
cli
incl
sahf
xchg
jo
aam
out
enter
mov
frstor
call
mov
sub
lock
ret
jmp
xchg
inc
pop
push
lods
neg
mov
loop
cmp
loope,pt
fs
jle
mov
push
xor
ds
pop
push
out
rcrb
push
add
or
pushl
int3
aas
sub
loope
dec
inc
push
fadd
insl
inc
sti
dec
ds
push
push
adc
les
pop
icebp
aaa
push
cli
push
mov
sbb
and
mov
add
mov
and
adcb
imul
xor
popf
xlat
mov
adc
nop
int3
or
cmpsb
fistl
aaa
stos
loopne
inc
leave
loopne
lret
insl
fimull
repnz
pop
mov
cmp
jge
dec
mov
outsl
pop
mov
pushl
sbb
sbbb
jmp
sti
mov
aas
adc
test
jbe
mov
xchg
inc
pop
jae
dec
jg
and
xor
fcomip
outsl
fsubrl
jge
addr16
cwtl
adc
xchg
test
jg
loop
cmp
add
jmp
mov
sub
aam
cmp
cmp
push
clc
roll
jg
jecxz
sub
sahf
mov
fptan
cwtl
lods
cmp
push
pop
cmp
cmpb
decl
xchg
inc
sbb
push
dec
shr
out
les
jb
bound
rcrl
in
loope
mov
lcall
bnd
sbb
leave
cmp
es
lret
mov
and
gs
jl
ljmp
outsl
addr16
dec
adc
adc
push
pop
xchg
xor
adc
push
fsubl
movsb
push
cmp
mov
xchg
fcompl
fcmovbe
ljmp
mov
jmp
sbb
mov
into
add
inc
mov
cltd
lahf
sbb
mul
aad
clc
aaa
js
and
jle
xor
push
mov
inc
iret
push
xchg
adc
into
adc
vpunpcklqdq
test
sbb
push
shl
ss
incl
sub
ds
push
aam
sub
into
daa
les
divb
xor
lcall
xchg
xor
lods
cmp
xor
cli
sbb
mov
inc
repnz
call
rcrl
jns,pn
frstor
fsts
pushf
sub
mov
jmp
loopne
jmp
ret
loope
xor
mov
pusha
mov
xchg
xlat
mov
ljmp
into
call
or
inc
cmp
test
inc
aas
inc
mov
imul
pop
jmp
mov
pop
push
fidivrl
std
sbb
inc
pushl
aas
mov
inc
sti
jno
jmp
bound
pop
shrb
test
and
outsl
cli
lcall
jge
stc
sarb
or
ljmp
xor
push
push
or
xchg
ficomps
in
mov
jne
test
jno
rorl
jno
add
insb
pop
lret
adc
lcall
cmpb
push
fnstenv
mov
cmp
negb
icebp
jmp
sub
fdivl
push
and
subl
jae
push
mov
xchg
pop
jg
adc
outsb
movl
filds
xchg
lea
aas
mov
testb
pusha
outsb
movsl
and
or
add
jmp
xchg
movsl
xchg
mov
fildl
jg
scas
push
outsl
push
adc
ss
movb
subps
inc
jne
shlb
ljmp
fidivrs
jge
mov
and
orl
pop
sub
aas
sub
sti
arpl
pop
hlt
pushl
daa
ret
sbb
sbb
inc
sub
out
jmp
rolb
mov
mov
lcall
jl
push
pop
cmpsl
mov
mov
add
scas
aad
das
es
add
sbb
inc
stos
pop
lcall
icebp
mov
sub
jo
push
pop
movb
popf
das
inc
cmc
rep
jl
add
mov
add
lock
cli
sub
and
sbb
cmp
push
add
gs
decl
xchg
sbb
fsubl
push
enter
loope
jmp
pop
fs
addl
lcall
ret
adc
sbb
call
outsb
test
repnz
jge
fisubl
xorl
ljmp
inc
jo
adc
movsb
pop
sub
pop
or
pop
xlat
and
dec
pop
loope
pop
loopne
fwait
gs
sub
inc
add
add
dec
in
push
rcrl
leave
jmp
mov
imul
mov
test
pop
sbb
dec
pop
stos
add
icebp
rol
call
repz
inc
sub
add
cs
mov
jno
fnstsw
out
pop
jg
sbb
ljmp
xchg
xchg
jle
cmpsb
lds
mull
mov
xchg
enter
inc
sub
jp
daa
scas
cli
jmp
jns
ret
dec
jae
into
cmp
int3
dec
pop
pause
jae
dec
pop
xlat
jo
sti
xor
outsl
cli
pushl
cs
addr16
test
jle
add
ja
mov
out
mov
mov
add
mov
lret
sub
cli
pop
pop
call
mov
roll
das
adcl
arpl
and
notb
sub
adc
push
and
cld
xchg
cmp
pop
es
aaa
cld
xchg
cltd
xchg
fisubrl
pop
out
xchg
fldcw
fdivrp
call
xchg
aas
stos
sub
add
sbb
xor
cmpsb
xchg
xor
jecxz
cmpsb
or
call
into
lret
aam
xor
xor
or
sub
jge
incl
add
push
xor
mov
cli
push
test
lea
in
mov
movsl
dec
adc
pop
push
ljmp
lcall
out
movsb
cmp
adc
jle
jno
push
pop
test
jmp
push
lahf
aam
mov
cmp
adc
stc
cld
cli
xor
js
loop
mov
mov
call
std
fs
mov
mov
test
test
xchg
push
pop
cld
mov
mov
loopne
decl
ss
sub
push
repz
xchg
push
xchg
push
mov
inc
xchg
movsb
in
ss
dec
sbb
inc
push
sub
or
iret
in
icebp
pushf
add
lcall
in
mov
sub
cltd
out
adc
inc
mov
push
adc
push
and
incl
popl
xchg
test
mov
jbe
mov
sub
mov
fdivl
jbe
stos
xchg
popa
mov
call
mov
sbb
enter
and
call
aam
lahf
iret
sbb
fistps
iret
fbstp
mov
int
loopne
lods
xlat
daa
add
pop
bswap
fcoms
mov
ljmp
scas
inc
xchg
or
cs
mov
add
movsl
popf
dec
repz
or
popf
inc
pusha
incl
cld
adc
cmp
daa
mov
cmpb
jg
jo
dec
pop
stc
jmp
in
loope
fcmovb
cmp
push
and
and
push
cmp
clc
in
jno
fdiv
call
sbb
push
pop
sbb
mov
popl
pop
rol
mov
scas
sub
loop
dec
jmp
mov
decl
les
icebp
roll
mov
gs
stos
xor
gs
iret
jbe
outsl
mov
std
pop
cmp
pop
cmp
and
mov
push
jmpw
or
mov
xchg
sbb
jno
movsb
xchg
xor
call
sbb
ret
repz
jnp
mov
test
mov
call
call
mov
mov
nop
add
dec
cmc
pop
push
push
loopne
mov
jge
and
jg
pop
cmc
pushf
or
fstl
sbb
pop
imul
in
xor
cmc
cmovl
jmp
sub
cmpsb
mov
jae
lcall
ljmp
mov
and
bound
fadd
xchg
lahf
repz
cwtl
ret
cmpsb
inc
movb
pop
sbb
call
inc
std
loop
push
inc
nop
xchg
xor
adc
or
scas
scas
cmpsl
andb
lods
mov
js
and
add
pop
aas
pop
ds
int
les
pop
ud0
call
es
stc
data16
in
or
cwtl
jp
inc
enter
ud2
sbb
cmpsl
mov
xchg
jle
ljmp
adc
jae
mov
outsl
lahf
test
push
mov
pop
jmp
sub
imul
leave
out
sbb
inc
in
in
test
ret
add
jb
xchg
add
es
stos
fsubrp
adc
das
test
pop
aas
cld
pushl
dec
mov
add
push
scas
add
repnz
push
clc
shrl
adc
lea
fnstenv
pop
cmpsb
cmp
lcall
cld
jno
fwait
or
or
jmp
jp
bound
cltd
pop
adc
push
xchg
outsl
pop
mov
cld
pop
cmp
cltd
cmc
lods
sub
outsb
ljmp
xor
push
int3
cmpsb
pushf
push
mov
jg
adc
xor
scas
cld
in
nop
inc
sub
data16
jo
or
rcll
test
xor
andb
int3
fmuls
cmpsl
mov
movsb
push
jle
push
xchg
aas
nop
pushl
cwtl
loop
inc
mov
leave
lret
jbe
pop
sub
jg
scas
jmp
xchg
or
lea
dec
mov
movsl
xchg
call
fadd
inc
sub
outsb
push
pop
cld
call
lea
ss
or
push
es
ja
rorl
dec
cmp
jmp
cmp
pop
cld
pusha
test
stc
filds
pop
js
pop
xor
mov
aad
mov
mov
insb
xor
movb
aas
int3
mov
rol
mov
decl
cmp
jcxz
ret
clc
or
shlb
out
xchg
or
imul
xchg
add
dec
lret
test
mov
sbb
sbb
test
std
into
or
decl
mov
push
je
mov
xlat
sub
outsb
and
das
pop
cli
and
push
mov
mov
jo
push
mov
cmpsl
aam
mov
sub
insb
jg
xchg
lods
xchg
mov
pop
sbb
adc
xlat
cld
daa
mov
pop
xor
incl
xor
cmpsw
test
push
fidivrl
cs
xor
idivl
pop
jo
xchg
les
mov
daa
icebp
sahf
jno
fdivl
out
mov
cltd
adc
mov
pushl
je
inc
add
call
aas
ds
cmpsb
js
movsl
les
arpl
inc
nop
sbb
mov
jbe
pusha
adc
or
sub
inc
imul
cmp
orl
shl
popf
pusha
int3
and
mov
lcall
imull
int
pop
cld
dec
mov
mov
outsl
out
xorl
or
hlt
call
or
xor
inc
lds
popf
test
jp
nop
addr16
dec
mov
lcall
mov
es
mov
adc
lock
shlb
adc
call
and
insl
popf
rolb
mov
in
aad
jecxz
add
in
push
lods
out
push
xchg
jg
jb
faddl
in
xchg
jae
pop
addl
sub
sub
es
outsl
mov
incl
add
in
push
adc
je
call
push
dec
mov
push
cmp
add
data16
call
in
into
mov
or
sbb
inc
std
jg
and
sbb
fcompl
call
and
sahf
jnp
mov
xchg
push
ret
xchg
push
xchg
pop
test
pushf
jmp
les
pop
cs
jmp
outsl
dec
jmp
adc
jae
jecxz
loope
cmp
cmp
cmpsb
xchg
push
outsl
out
adc
jmp
dec
adc
mov
roll
test
test
call
loop
imul
enter
pop
jae
sbb
cs
ds
sti
mov
jle
fsubs
cmp
sub
test
ljmp
out
ret
and
testl
repnz
dec
mov
xchg
or
in
popa
sub
cmpsb
jnp
jp
dec
jns
dec
push
cmc
stos
cli
jmp
fdiv
sbb
cmp
adc
mov
pop
and
stos
push
fists
int3
pop
repnz
imulb
fisttpll
jns
out
jp
ljmp
and
dec
int
jns
adcb
and
decl
push
mov
push
cmp
sub
insb
dec
imul
or
xchg
sarb
rcrb
inc
and
call
imul
outsl
cli
mov
ss
test
imul
pushl
std
call
call
and
insl
jae
push
enter
scas
add
int3
mov
jle
incl
pushf
ja
jle
xor
mov
cs
test
inc
hlt
sub
xchg
cmp
sbb
xor
mov
sbb
and
xchg
fidivrs
cwtl
shrb
stos
cmp
mov
hlt
or
lds
mov
pusha
xchg
mov
xchg
cmp
aad
aad
pop
xchg
jg
fwait
sbb
addb
or
js
icebp
push
pop
fistl
mov
call
in
popa
fisubrs
fnstenv
mov
pop
sub
and
xchg
mov
decl
add
std
adc
jo
je
mull
in
sub
andl
cli
mov
jmp
pop
mov
xor
sbb
mov
out
xor
lock
sti
push
add
movsb
mov
pop
dec
inc
adc
cs
push
outsb
mov
mov
or
mov
mov
rclb
inc
xor
jae
imul
cmp
mov
jmp
inc
pop
inc
jp
sbb
push
loope
popf
jns
jmp
mov
ror
or
pushf
decl
jge
jle
dec
pop
lahf
add
rclb
iret
pop
or
pop
ljmp
dec
retw
incl
jmp
dec
xchg
movlhps
mov
mov
sub
push
nop
imul
mov
dec
shll
call
mov
out
aam
stos
movsb
enter
ljmp
pop
cmp
jmp
shlb
stos
adc
pop
pop
int
outsl
ja
pop
xor
ja
inc
test
sti
adc
insb
aam
test
rorb
lret
mov
pop
fcomip
out
xor
adc
daa
lret
aam
mov
cs
stos
loopne
pop
loopne
pop
aam
sbb
dec
call
xor
jb
mov
pushl
dec
insl
add
push
addl
rol
orl
fisttpl
clc
decl
pop
sub
or
sub
pop
adc
add
xor
ss
jae
into
shrl
push
rorl
pusha
jo
cmp
pop
lret
jmp
sar
hlt
inc
inc
cmp
inc
or
pushf
imul
sbb
xchg
xchg
or
stos
jno
add
jle
jl
jl
dec
int3
pop
push
push
push
fwait
adc
andl
or
mov
mov
cltd
cmc
cmp
data16
lret
inc
imul
jmp
and
ficomps
incb
in
jns
gs
mov
mov
mov
or
dec
xchg
xchg
arpl
ds
jg
cmp
push
xchg
shlb
test
or
mov
ja
ljmp
loop
mov
fwait
sub
int
push
pop
push
jp
cmp
sti
adcb
das
add
pop
flds
and
fucompp
int
mov
adc
adc
sub
mov
clc
decl
cmp
push
scas
icebp
daa
and
test
sub
ljmp
ljmp
mov
jl
pop
pusha
aas
cwtl
adc
or
lock
xchg
js
cmp
adc
imul
add
jg
mov
lcall
and
cmp
fsubl
mov
and
mov
xchg
cmp
jmp
mov
sarb
mov
ljmp
mov
aas
adc
pop
mull
stos
rolb
push
gs
xchg
shll
mov
addr16
xchg
pop
mov
push
dec
adc
push
xor
cwtd
adc
dec
into
or
mov
jbe
jno
cmpsb
call
mov
xchg
and
iret
and
or
lcall
add
jg
push
in
cmp
sub
dec
call
sbb
mov
lea
mov
jnp
hlt
push
in
or
fbstp
scas
or
dec
push
cli
movsb
mov
cmp
filds
outsl
push
push
jp
cmp
ficompl
sub
jp
ljmp
push
inc
mov
sar
inc
sbb
in
test
inc
sbb
movb
lock
mov
fistps
jg
jg
cmp
arpl
dec
mov
mov
lret
sbb
mov
jp
jmp
negl
sub
push
fsubs
loopne
sub
cmp
cwtl
cld
je
inc
sbb
fnstenv
mov
add
xor
adc
or
imul
sub
call
cld
ret
cmp
movsb
jl
jbe
fsubrl
sbb
fidivs
mov
and
rcrl
cltd
xor
imul
loop
mov
and
data16
popf
jno
adc
cwtl
sbb
ljmp
cli
adc
push
or
mov
mov
dec
les
mov
push
test
jecxz
push
idiv
int
push
push
mov
lahf
fcmovnbe
lcall
in
sub
loopne
hlt
jmp
arpl
mov
adc
mov
aas
cmp
dec
cmpsb
sbb
and
stos
mov
ljmp
pop
push
xor
pop
mov
sub
and
mov
adc
pop
adc
jg
inc
and
test
xchg
sbb
shr
xlat
enter
mov
adc
xlat
xchg
adc
pop
loope
lea
aam
ds
jns
decl
lods
mov
adc
pop
sbb
mov
jmp
sub
mov
adc
pop
pushl
lcall
fidivl
xchg
sbb
and
jns
xor
mov
cltd
jmp
jmp
inc
imul
jl
push
adc
sbb
mov
jmp
out
mov
dec
mov
lea
sbb
lock
mov
add
pop
dec
jecxz
pop
lahf
ljmp
and
cmp
adc
loop
ret
cmp
incl
aad
pop
or
clc
xor
aaa
pop
push
ret
call
sub
call
xor
dec
ficoms
outsb
jbe
out
js
je
sub
insb
pop
and
into
stos
lcall
mov
push
sbb
ds
loop
jae
or
test
mov
test
sub
xor
jmp
pushl
imul
daa
stc
push
ljmp
cs
rorl
sarb
das
sar
call
cmp
sbb
cs
cld
or
xor
out
pushf
lcall
dec
out
xor
pop
mov
mov
ss
sub
mov
fs
decl
add
lahf
dec
rclb
in
cmp
imul
call
scas
sub
jnp
inc
mov
stc
sahf
jne
lahf
fbstp
cmp
fidivs
dec
roll
mov
addr16
loop
test
jmp
out
cwtl
mov
sar
mov
pop
push
ljmp
mov
xor
jp
or
cmc
jbe
lcall
fimuls
inc
fmul
data16
xor
cmp
mov
xchg
lods
add
ficoms
xchg
dec
sub
inc
sub
cmpsl
outsl
add
fs
inc
xchg
sub
xchg
fnstenv
test
xor
mov
stos
movsl
ljmp
mov
call
push
ja
imul
int3
sub
pusha
pushf
inc
mov
out
jmp
pushl
mov
push
push
je
sbb
jnp
and
pushf
cs
mov
sub
cmpsb
mov
add
incl
cmp
aad
movb
sbb
lea
imul
pop
popl
xchg
bound
fists
inc
into
mov
mov
dec
xchg
mov
inc
enter
int
pop
sbb
scas
mov
decl
aad
jo
enter
pop
es
out
lds
das
daa
mov
sub
in
pushl
push
insl
jg
or
cmp
jge
sbb
sbb
sbb
pop
cmpsb
xor
cld
call
imul
mov
add
jl
sbb
mov
add
decl
cs
cs
xchg
or
cmp
pop
or
sbb
ret
and
mov
idiv
call
mov
add
mov
sub
cmp
sub
in
pop
jg
lds
cli
inc
sub
xorb
mov
xchg
nop
dec
sti
jmp
lcall
cli
adc
mov
jnp
lds
adc
dec
dec
cld
pop
mov
sbb
outsb
xchg
outsb
pop
ds
inc
test
stc
sub
clc
fldenv
mov
adc
lcall
clc
inc
out
jnp
add
fisttps
sub
fistl
std
call
pop
icebp
adc
fadds
xor
mov
mov
pop
sub
jp
sbb
pusha
pop
pop
cltd
seto
inc
cli
popf
inc
pushl
cwtl
dec
cmp
in
fwait
or
std
cwtl
cmpsl
sub
mov
cmp
add
jne
or
les
sahf
ret
das
mov
enter
push
inc
jne
adc
js
jmp
lret
sub
cltd
pushf
outsb
sub
xor
dec
test
cmc
test
cmp
dec
outsl
decl
mov
inc
sbb
addr16
ja
mov
inc
outsb
push
mov
sbb
lds
les
add
jmp
lds
adc
lcall
rol
cmp
and
adcb
repnz
andl
movsl
cmp
mov
aam
sbb
decl
lods
and
or
ds
mov
or
lods
lret
mov
xlat
cltd
into
rorl
pushl
and
sbb
push
loopne
cmp
ds
jmp
xor
jp
sub
xchg
jmp
or
adc
rcll
jb,pn
rorl
jecxz
outsb
cli
lea
cmpsb
sub
shrb
mov
cmp
mov
popa
adc
ds
incl
xchg
sub
mov
mov
pop
cmpsl
jo
cwtl
int3
fildl
pushl
add
in
xor
scas
mov
into
jge
dec
mov
xchg
fcompl
ljmp
xchg
repz
mov
cmc
mov
mov
popf
lahf
std
jns
mov
shrb
lods
jg
stos
in
xor
pop
cs
jno
pusha
ret
push
sbb
jle
fs
idiv
push
mov
or
clc
into
pop
jo
es
stos
divb
pop
lahf
cld
jno
mov
mov
pop
xchg
push
mov
jl
sub
push
mov
pop
es
lcall
jp
xchg
sub
out
call
les
insb
jb
cmp
enter
jg
arpl
and
fidivs
inc
push
push
push
inc
loopne
decl
out
push
jp
xchg
pop
test
test
sub
fisttpll
mov
xor
jb
cmpxchg
xor
pusha
adc
mov
daa
es
pushl
cmp
jle
jns
dec
push
xor
in
jecxz
mov
js
cmp
xchg
jmp
xchg
push
call
mov
push
das
and
ds
sbb
stos
shll
sbb
lcall
fsub
mov
fdivp
shlb
mov
push
push
js
movsl
xchg
pop
in
fcmovnu
sbb
lea
ljmp
xchg
mov
decl
jge
data16
fldcw
pop
dec
subb
push
sbb
popf
scas
clc
incl
repnz
sub
fildl
cmp
xor
negl
sarb
lods
fs
mov
inc
loop
or
loop
loop
push
ljmp
inc
and
insb
lods
jmp
int3
sub
lods
and
cmpsl
loopne
popf
dec
mov
xchg
push
jmp
test
or
pop
sub
insl
jo
or
data16
or
mov
pop
mov
sbb
loop
add
sub
outsb
pushf
insb
inc
add
add
fs
icebp
lcall
icebp
mov
ret
scas
push
or
leave
fcoms
pop
dec
jo
xor
mov
decl
arpl
xor
into
jmp
pop
mov
cmp
cmpb
in
imul
sbb
shl
mov
fs
sarl
xor
sti
sbb
mov
cmc
call
dec
leave
xchg
movsl
js
lods
jmp
xchg
or
inc
mov
inc
rolb
decl
jo
adc
inc
movsl
jp
insl
stos
out
lahf
cmp
aad
xchg
shrl
roll
jmp
jno
imul
push
sbb
push
cmp
push
out
in
mov
pop
pushl
push
je
sub
sbb
and
jnp
fmul
adc
and
ljmp
or
daa
sub
orl
jo
mov
cmp
lods
out
dec
sub
pushf
pop
sbb
inc
mov
ljmp
jge
subb
mov
aad
mov
ffreep
inc
inc
fwait
lahf
mov
int3
mov
cmp
call
and
hlt
arpl
sarl
inc
subl
test
sub
jg
mov
pop
sbb
sub
icebp
mov
fmuls
jp
hlt
pushl
mov
cli
push
sahf
sub
adc
adc
ljmp
loop
mov
pop
out
ljmp
dec
mov
call
fcomip
in
test
mov
je
jns
test
cmp
sub
cmp
jp
data16
icebp
mov
test
sub
and
call
sbb
add
cmp
jne
fstpl
cld
xchg
push
loopne
dec
aaa
push
ret
ljmp
outsb
xor
jle
orb
ret
into
pushf
pop
outsb
and
aaa
mov
jg
jno
lahf
imul
jecxz
clc
scas
test
test
in
in
mov
rorl
jae
ja
mov
push
loopne
mov
xchg
call
lahf
pop
mov
mov
mov
cmp
fisubrs
das
sahf
fsubl
jg
jmp
call
es
frstor
mulb
push
push
js
sbb
mov
in
cli
pop
icebp
call
and
jo
filds
jge
shrl
add
das
es
dec
add
inc
dec
jg
pop
xchg
ror
scas
nop
dec
jo
fcomps
fsubrp
aam
out
add
scas
xor
loop
faddp
push
pusha
lahf
pop
repnz
notl
jmp
xchg
pop
loopne
shrl
rolb
xor
in
and
xchg
fisubrl
ljmp
movntps
xor
and
js
mov
dec
lcall
call
dec
jge
fisubl
mov
cmp
or
cltd
mov
inc
gs
int3
call
or
popl
ljmp
pop
and
into
lea
adc
cmpsb
dec
inc
jmp
mov
aas
movsb
mov
mov
xor
dec
jb
fdivrp
xor
inc
std
mov
mov
cmpsl
fstpl
jmp
xchg
mov
aas
in
jbe
mov
into
loopne
pop
rorl
loopne
call
adc
cmp
nop
mov
out
push
pop
mov
add
lcall
cmc
jo
inc
int
jecxz
nop
hlt
jbe
mov
lea
jg
push
and
std
jge
xchg
fwait
jg
repz
adc
popa
or
dec
pop
enter
incl
les
inc
sbbb
fs
out
loope
out
pushl
ljmp
pop
test
and
sbb
mov
stos
jp
sbb
decl
stos
ficomps
push
pop
arpl
lds
out
jae
loope
mov
or
adc
incl
push
jnp
xchg
fcompl
and
add
cmpsl
cmpsl
fwait
es
pop
out
mov
mov
fisubl
or
cmc
pop
int3
imul
mov
sar
call
sbb
les
fnstcw
roll
mov
xor
xchg
push
jno
imul
or
mov
bound
push
cmp
or
roll
fsts
bts
fisubrl
push
idivb
pop
or
mov
or
shll
jmp
push
fiaddl
mov
imul
pop
sub
lods
out
xor
outsb
cld
jo
sub
adc
pushl
xor
aas
jo
popf
inc
cmpsb
test
xor
out
dec
icebp
popa
dec
cmp
mov
inc
iret
pop
lret
fs
mov
cmp
sbb
or
push
mov
sub
out
ss
add
mov
cwtl
stos
dec
adc
push
add
pop
loopne
std
inc
mov
push
add
mov
pop
ret
add
rcrb
aaa
sub
sahf
sar
lcall
pop
lods
inc
mov
mov
adc
movsb
xchg
inc
notb
lahf
mov
xchg
mov
jo
adc
pusha
bound
data16
aaa
and
mov
add
jmp
fwait
jno
mov
jnp
sub
stos
sub
xchg
cmpsb
mov
cmpsb
xor
inc
gs
push
sar
jg
cwtl
cwtl
jmp
mov
push
in
mov
cmpsb
cld
inc
xlat
fisubs
jg
fsubl
xchg
movsb
lret
or
pop
adc
cmp
sub
in
inc
cmp
je
jns
pop
out
adc
xor
movsl
mov
lret
jle
mov
aaa
imul
cli
ljmp
cli
sahf
ret
scas
sbbl
imul
loopne
add
ret
xor
adc
mov
mov
sub
jne
decl
xor
pop
cmp
dec
loope
pop
sbb
fwait
cmc
add
ficomps
aad
aam
lods
sub
mov
aaa
xchg
es
jg
aas
xlat
in
dec
xchg
stos
and
lock
cmp
in
mov
jns
lods
incl
adc
cmp
enter
call
sub
push
mov
std
call
lods
adc
adc
mov
push
pop
ja
mov
aas
adc
out
cli
pushl
out
psubd
arpl
repnz
lahf
push
push
pop
fcmovnu
xor
decl
pop
cs
mov
repnz
test
pop
xchg
lds
mov
ljmp
jne
add
cmp
pop
hlt
ffreep
sub
jl
lods
mov
mov
dec
in
mov
pop
bound
sarb
movsb
add
call
stc
and
inc
dec
sbb
cs
mov
and
jbe
gs
xchg
mov
mov
cli
inc
jge
outsb
lods
push
rcrb
daa
or
pop
push
push
push
sbb
inc
sbb
loop
addr16
sub
cmp
xchg
ljmp
ljmp
jl
stos
push
dec
stos
jecxz
or
mov
sub
lock
xchg
adc
decl
jp
ret
jbe
inc
push
shrl
mov
and
movsl
push
test
mov
mov
cs
or
push
and
insl
loopne
cld
int
cltd
cwtl
jg
mov
iret
jge
cmp
incl
push
jb
mov
add
test
pop
xchg
mov
lds
rclb
decb
rcl
fisubrs
lcall
sub
dec
mov
push
lahf
into
push
jmp
add
fnstsw
cmpsb
aas
sbb
push
out
sub
out
jecxz
fwait
mov
mov
in
call
nop
jg
loopne
decl
in
lcall
mov
inc
cmpsl
lahf
pop
cltd
jno
pusha
stc
jo
repnz
push
and
or
xchg
or
jne
in
decl
orl
inc
sbb
rorl
out
sbb
cmp
add
pop
lock
stc
mov
aaa
ret
inc
idivl
adc
jl
insb
fisubs
jmp
sbb
clc
repnz
mov
push
mov
pop
fs
decl
pop
in
out
out
xor
pop
jle
imul
fsubl
add
sbb
ds
andl
lock
xchg
cli
scas
pop
adc
cli
icebp
xchg
and
incl
lcall
stos
cli
add
pop
inc
mov
ljmp
movsb
sti
or
jmp
mov
dec
mov
js
dec
add
cwtl
adc
pop
pop
mov
ljmp
adc
iret
in
out
mov
mov
daa
mov
das
inc
mov
decl
mov
and
mov
movsl
rorl
insl
and
xchg
mov
dec
arpl
jmp
in
or
jge
into
fisttps
jo
sbb
xchg
cmpsl
xchg
in
adc
jne
sbb
xor
int
sar
push
imul
mov
enter
dec
outsl
jmp
arpl
xchg
jnp
xor
sub
lock
fists
in
rcrb
ljmp
std
lret
je
mov
add
out
fwait
shrb
push
movsl
mov
test
pushl
mov
sub
sbb
rorb
cwtl
cmc
xchg
test
push
mov
and
pop
addl
jle
stos
fcomps
jnp
xor
jmp
cmp
cli
rcrb
rorl
out
clc
ljmp
jp
ror
notb
xor
push
xchg
mov
xor
xor
ds
adc
lret
add
sbb
inc
into
hlt
push
out
sub
incl
dec
pushf
fmull
call
aaa
adc
sub
ds
dec
push
std
pop
hlt
ret
out
stc
mov
clc
xchg
mov
fnsave
sbb
jp
mov
clc
cltd
cmp
frstor
xchg
pop
pop
outsl
ret
addr16
push
fs
jmp
ljmp
mov
sub
mov
loop
add
push
pop
out
aam
js
sbb
sahf
aaa
pop
mov
mov
sub
shlb
mov
xchg
jno
push
sahf
sbb
je
fistps
aaa
fcmovb
pop
and
xor
pop
sahf
push
in
hlt
sti
dec
xor
js
dec
adc
addr16
mov
fsubrs
in
xchg
rolb
ret
out
clc
lods
mov
adc
xchg
stos
call
jg
fisubrl
jno
fidivrl
es
scas
push
movsb
aaa
lcall
decl
jle
push
dec
push
ljmp
ljmp
sbb
dec
test
ficoml
push
pop
mov
jl
pop
or
xor
jmp
stos
into
test
xlat
lea
out
pop
push
subb
xor
xchg
ds
movsb
inc
jmp
push
pop
xlat
push
add
test
pop
fdivrs
and
gs
jg
mov
lcall
inc
push
fcoml
out
xor
dec
and
mov
jns
lcall
add
sbb
es
xchg
jnp
gs
call
push
xor
sub
jl
fildl
addr16
inc
out
std
pop
ret
add
stos
jg
jg
push
fcoms
jne
in
cmp
es
dec
out
js
out
ljmp
mov
mov
popl
aad
std
and
jae
pop
mov
xchg
pop
das
xor
add
mov
stos
loopne
out
push
xor
adc
inc
inc
in
loop
add
jle
mov
stc
popf
lahf
clc
xchg
or
sub
jb
and
popa
jne
pop
in
movsb
sub
cwtl
sbb
sbb
addr16
ljmp
stos
or
ljmp
cs
imul
out
test
outsl
lret
lcall
cld
push
in
xor
pusha
enter
lcall
jmp
mov
mov
push
mov
in
cmp
out
fildl
inc
notl
push
mov
lret
mov
idivb
dec
push
int
jmp
mov
loopne
pushf
inc
data16
dec
cmc
dec
and
mov
lods
xchg
xchg
imul
pushl
test
mov
adc
mov
in
int3
call
adc
pop
incl
cld
push
adc
push
jl
xchg
sub
xchg
lcall
xchg
push
sbb
out
xlat
adc
pop
mov
mov
fsubl
pop
push
incl
mov
nop
test
mov
sub
stos
sub
rcll
and
pushl
fwait
incb
mov
jne
ret
icebp
stos
movsb
sub
outsb
jmp
mov
imul
jmp
and
out
loop
adc
data16
jmp
jns
js
adcb
jg
out
xchg
outsl
push
mov
adcb
jns
clc
shlb
imul
add
rcl
xchg
loop
loope
call
mov
and
pop
mov
xlat
lret
lcall
push
test
lods
and
push
mov
pop
mov
push
push
inc
cmp
cwtl
call
mov
clc
xchg
lahf
pop
xor
push
fisubs
imul
jecxz
out
cli
pushl
inc
inc
push
sub
shl
sub
mov
mov
and
fwait
mov
pusha
addr16
fwait
mov
data16
shll
jmp
inc
mov
stos
cmp
or
dec
ficoml
mov
lret
push
andb
mov
pushf
inc
inc
adc
push
pushf
fidivrl
repz
cli
mov
lods
lock
or
loopne
fldpi
nop
sbb
mov
lds
fiaddl
rcl
idiv
xor
fsubrp
pop
jmp
fs
clc
fdivrl
mov
mov
ljmp
cmpsb
jp
imul
and
cwtd
dec
adc
cld
fcoms
push
out
stc
xlat
xchg
pop
push
pop
hlt
decl
xchg
cmp
push
mov
dec
aaa
ss
xor
push
pusha
gs
decl
mov
pop
pop
scas
stos
sub
daa
dec
adc
adc
pop
jge
mov
mov
sub
inc
ljmp
and
jp
imul
xchg
push
pop
jmp
fs
imul
pushl
loope
vdivpd
add
lds
cmp
shrb
sbb
loopne
and
fiaddl
in
jb
leave
jle
pop
ljmp
or
lock
xchg
push
hlt
lds
cmp
inc
dec
leave
clc
mov
js
subb
scas
dec
outsl
test
lods
pop
leave
in
sbbl
movsb
pushf
pop
push
insb
das
je
push
ljmp
adc
imul
les
fsts
add
pop
pop
xor
insl
push
insl
inc
push
cmp
stc
aam
or
mov
xchg
dec
test
rcr
or
nop
fld
dec
nop
add
stos
fcom
push
dec
insb
push
cmp
repnz
les
aas
inc
add
mov
nop
fcmovnb
out
fucom
f2xm1
mov
push
mov
inc
jmp
stos
add
das
pop
mov
push
fdivrs
inc
xor
decl
ret
out
pop
ror
lds
push
pop
hlt
nop
popa
inc
jp
xorb
and
mov
push
iret
mov
cwtl
xchg
iret
pop
push
rorl
jmp
and
xor
cmp
stc
adc
movsb
scas
cmc
add
sub
mov
daa
mov
fisttpl
fs
xor
and
repnz
test
mov
mov
es
mov
out
stos
lret
pop
or
in
into
inc
cmp
lcall
addb
cmp
mov
and
les
push
outsb
in
dec
jg
lcall
pop
cmovno
cmp
pushl
jae
dec
hlt
and
incl
inc
xchg
int3
push
inc
fdivrs
adc
pop
and
mov
xchg
xchg
pop
je
icebp
scas
inc
lcall
cmpb
sti
jge
mov
add
repnz
jmp
push
cli
call
mov
aas
int
lds
ljmp
nop
addb
dec
push
pop
and
cmc
ljmp
shlb
mov
bound
inc
inc
mov
xchg
or
in
dec
push
decl
mov
outsl
pop
add
or
test
pop
inc
fdivl
sub
jmp
adc
xchg
test
scas
xor
lds
es
shlb
xor
movsl
jl
and
sti
add
add
sub
out
repnz
ljmp
ljmp
mov
xchg
or
inc
in
jg
nop
cs
daa
cmp
test
xchg
lcall
push
inc
rorb
lret
xchg
adc
jbe
sbb
sbb
divl
clc
aas
iret
loop
les
sbb
in
ss
mov
pushl
dec
and
orl
push
sub
inc
jg
loop
adc
call
mov
ret
lret
lcall
imul
cmc
clc
clc
cwtl
push
in
push
cmp
ljmp
mov
adc
and
add
adc
iret
leave
fadds
test
incl
mov
in
rolb
adc
fwait
ss
inc
and
mov
inc
nop
sbb
cld
pushl
and
jo
cwtl
jno
mov
rorl
jmp
mov
xor
lea
cmpl
sbb
adc
mov
ror
repnz
test
mov
lds
pusha
pop
or
ret
or
fnsave
in
xor
stos
jb
ror
cmp
adc
sbb
mov
mov
repz
add
add
and
shr
mov
add
aad
or
xchg
mov
xor
lcall
cltd
arpl
bt
mov
pop
mov
loop
pop
jnp
xchg
sar
pusha
pop
cwtl
mov
adc
incl
mov
pop
add
mov
mov
add
repnz
pushl
rclb
jp
inc
push
jo
add
in
and
mov
rcrb
ja
sbb
add
jmp
test
or
cwtl
dec
jmp
jo
xchg
roll
or
dec
xchg
imul
int3
std
mov
or
cmp
fdivrl
lods
sbb
jg
cwtl
xor
mov
adc
cmp
or
pop
adcl
adc
xchg
mov
push
call
enter
sbb
inc
nop
test
ret
inc
fisubs
jl
decl
and
testb
jg
ljmp
data16
jp
push
xor
call
and
or
xor
mov
xor
cmp
dec
aas
bnd
add
ljmp
into
jno
sbb
pop
pop
xchg
push
sbb
ljmp
clc
jbe
mov
ficomps
jmp
add
inc
les
inc
push
xor
les
push
and
push
inc
scas
adc
push
js
loope
std
xchg
adc
xchg
cmp
push
movsb
sbb
cmpsb
pushf
movsb
mov
jl
inc
out
push
mov
jp
enter
jne
add
insl
adc
call
sub
inc
aad
xchg
sub
and
ret
inc
ja
addb
insb
aam
push
adc
cmp
pop
mov
popf
mov
gs
dec
xorb
adc
dec
mov
dec
ljmp
add
or
xchg
pop
in
xor
subb
cmp
sub
cmc
or
dec
push
push
hlt
cli
cld
lcall
push
inc
icebp
inc
xor
mov
mov
add
mov
jl
jp
mov
inc
repz
inc
jmp
js
sbb
aas
out
cs
es
lods
icebp
leave
pop
add
mov
inc
or
cmp
add
rolb
loopne
add
or
pop
mov
inc
or
rcrl
add
cwtl
scas
adc
jg
incl
lds
sub
adc
xchg
dec
sti
cwtl
xchg
or
inc
xor
mov
popa
adc
into
cwtl
jbe
stc
popf
jg
mov
or
or
cmp
push
mov
fwait
xor
mov
jecxz
and
push
pop
ja
lock
pop
xchg
adc
push
xchg
inc
iret
movsb
lea
push
inc
stc
dec
in
dec
and
pop
cmc
xchg
pop
ljmp
pop
dec
loopne
sub
ss
cli
filds
daa
and
out
adc
stos
and
pop
loopne
pop
sub
out
inc
ss
aam
sub
pop
out
xchg
and
call
xor
mov
lret
fsubrl
and
inc
add
xor
inc
add
xor
xor
mov
jg
decl
inc
mov
shll
adc
mov
sbb
ljmp
adc
xchg
inc
clc
call
pop
add
sbb
adc
add
dec
repnz
call
push
incl
sbb
lods
or
pop
lahf
mov
enter
inc
sbb
sub
jg
es
rclb
dec
mov
push
or
push
jno
scas
and
ret
incl
iret
js
inc
addr16
or
add
mov
fildl
adc
mov
sbbb
jg
jno
jmp
rorb
xchg
pop
lods
mov
sbb
call
loopne
or
shlb
mov
sarl
out
mulb
cmpsb
lock
fmuls
lret
mov
lock
or
inc
xchg
jg
jae
jge
fisttpll
pushl
inc
std
inc
iret
negl
mov
jnp
xchg
in
mov
xchg
or
sbbb
adc
ljmp
fstl
pushl
jae
les
jp
mov
sbb
fs
push
fcomps
xchg
xchg
jno
fldl
call
push
push
adc
and
sub
sbb
jb
test
dec
aad
mov
xor
int3
js
repz
and
decl
test
test
int
je
jbe
pop
xchg
pushf
adc
jb
in
test
stc
xor
cld
add
sbb
adc
rcr
dec
xchg
cmp
cmp
fadd
rorb
add
sbb
xchg
jns
xchg
call
mov
jb
call
cmpsb
mov
adc
xor
and
out
mov
inc
shlb
lock
cmp
nop
loopne
add
jae
xor
shrl
and
adc
add
dec
adc
int3
test
add
ja
push
jecxz
jbe
dec
test
jmp
jle
cmp
mov
pop
xchg
sub
cs
stos
ret
arpl
adc
and
test
jl
cld
xchg
cs
mov
adc
or
add
adc
add
pop
insb
pusha
cmc
setnp
xor
xor
ret
test
test
ficomps
xchg
xchg
sarl
sbb
sbb
and
add
stc
xor
cld
push
scas
das
insb
add
mov
dec
loopne
mov
dec
sub
or
lods
and
lods
filds
push
mov
push
xchg
out
sub
sub
movsb
push
scas
sub
add
pop
sub
ds
mov
pusha
lcall
mov
lods
jmp
sbb
lcall
mov
loop
jmp
and
add
rorb
push
jmp
faddl
add
xor
add
jg
call
sub
inc
sahf
mov
or
movsl
dec
add
push
mov
fisubrl
imul
adc
fsin
pushf
mov
cli
jg
mov
mov
cmp
xchg
sbb
push
fists
mov
inc
xor
mov
adc
dec
lea
fimuls
and
mov
aam
add
xchg
mov
xchg
push
jbe
js
in
scas
xor
ds
mov
cwtl
adc
es
push
dec
mov
mov
into
push
daa
push
cmp
add
adc
dec
mov
add
loope
std
icebp
jle
sbb
push
mov
jecxz
call
cld
test
aad
aaa
jbe
iret
daa
rolb
gs
or
push
add
pop
std
jmp
mov
stc
data16
inc
test
push
movq
add
insl
jmp
aam
mov
iret
mov
mov
and
popa
hlt
repnz
sbb
in
xchg
outsb
cmpl
sub
and
push
lahf
or
sahf
xchg
idivl
jne
and
int3
repnz
imul
in
aam
cld
pushf
mov
push
je
pop
jecxz
push
loopne
mov
gs
sub
mov
add
mov
add
jle
xor
loop
hlt
xor
mov
inc
inc
aad
jecxz
decl
popl
inc
mov
in
arpl
lock
add
add
mov
pop
add
and
fs
cmc
or
call
xor
sub
aas
push
mov
clc
js
xor
xor
rcr
movsb
decl
lock
adcl
pushf
out
push
add
cmpsl
dec
pop
push
dec
fdivl
lods
clc
call
std
push
and
mov
xor
sub
jae
mov
scas
jmp
aaa
fwait
clc
add
sarb
push
jno
incl
mov
and
jns
xlat
sub
xchg
outsl
add
sahf
out
pop
fwait
adc
pushl
push
and
push
jnp
dec
sahf
cmp
xlat
test
and
xchg
mov
adc
decl
sarl
inc
pushf
adcl
loopne
imul
dec
mov
jg
and
fiadds
shlb
aam
mov
pop
cmc
and
jo
cmp
ljmp
inc
jne
jg
pop
js
adc
loope
out
enter
jmp
movsb
xor
mov
push
pusha
jle
xor
sbb
sbb
adc
jne
jmp
xchg
out
cmp
sub
stos
mov
mov
mov
sub
lcall
dec
jne
dec
add
sarl
sbb
lds
lods
push
pop
push
lcall
mov
hlt
sbb
push
mov
xchg
cmp
out
xchg
sub
call
test
mov
mov
mov
fs
add
xchg
push
popa
pop
dec
into
or
xor
clc
inc
jp
xor
jg
add
test
js
outsb
add
inc
bnd
lcall
out
daa
adcb
sub
mov
push
fwait
push
mov
andl
ljmp
xchg
fwait
sub
jno
cmp
mov
dec
mov
dec
ja
gs
sarb
addr16
sarb
or
aam
cmpsb
mov
cmp
aaa
ret
les
popa
repz
jne
sbb
cmp
dec
incl
mov
xchg
cmc
nop
stos
or
or
cmp
pop
pop
decl
lods
repnz
in
inc
add
fwait
push
je
loopne
inc
pop
mov
les
and
adcl
dec
pusha
mov
add
inc
push
xor
in
call
or
hlt
and
int
scas
mov
push
incl
cld
add
mov
sub
int3
or
cmp
or
gs
adc
or
dec
mov
scas
mov
out
test
push
mov
sar
mov
stos
roll
cs
and
dec
notb
je
mov
lods
fs
cmp
adc
in
mov
or
leave
cs
mov
mov
jmp
pop
add
and
adc
add
movsb
lods
xchg
mov
mov
leave
inc
dec
into
cmp
xor
decl
data16
daa
test
mov
mov
cli
insb
adc
jo
lods
stc
or
decl
cli
adc
int3
scas
outsl
or
push
daa
je
in
push
faddl
jmp
adc
incl
inc
or
mov
jb
lea
addr16
lock
out
cmp
decl
mov
arpl
sbb
add
loop
lcall
add
cli
inc
mov
or
push
push
and
subb
incl
mov
pop
pop
pushf
add
cwtl
push
dec
add
push
xchg
or
pushf
sbb
fs
cld
sub
cli
andb
loope
mov
rcrb
xchg
pushf
lds
enter
mov
mov
or
push
sarb
insb
jb
cmp
push
loopne
cld
call
mov
push
or
push
outsb
cltd
or
mov
mov
ljmp
cmp
scas
xchg
lods
mov
ds
ds
clc
decl
mov
mov
sbb
les
dec
jb
out
add
and
std
dec
ljmp
cmp
jbe
mov
adc
lds
rcrb
jmp
push
incl
cwtl
jbe
leave
inc
lods
test
xchg
inc
sub
cmp
pop
decl
push
test
jecxz
mov
lds
mov
inc
jmp
mov
jmp
and
roll
addl
cmp
mov
cltd
pushf
push
add
lcall
add
and
loop
xor
adc
add
out
out
cmp
shl
call
sbbb
movsb
cmp
sbb
pushf
fdivl
sub
sub
sub
or
xor
inc
in
sub
pop
and
pop
mov
jg
call
adc
ret
jecxz
adc
shl
das
mov
ljmp
jp
add
pusha
cmpsb
mov
nop
xchg
add
pusha
enter
inc
jmp
mov
pop
push
jmp
pop
inc
adc
pop
fnstsw
and
pop
adc
in
dec
add
xor
mov
dec
addl
bound
loopne
incl
dec
cs
inc
mov
ss
mov
bound
push
lahf
push
mov
or
out
cs
call
sub
aaa
pop
mov
xor
push
cmc
sbb
and
les
mov
outsl
or
push
lret
popa
das
imul
cmp
inc
testb
add
lds
shl
inc
and
stos
call
dec
addr16
rcr
adc
push
xchg
subl
data16
cli
cwtl
mov
std
push
xchg
pop
cmc
and
inc
inc
mov
nop
sbb
jg
pop
push
pop
inc
and
push
sub
pop
lds
int3
sbbb
mov
incl
cltd
inc
lea
cmc
dec
loopne
pusha
sbb
ret
iret
pop
in
mov
gs
pop
bound
fmuls
call
jp
dec
push
stc
stos
sbbl
xor
jp
adc
cld
lret
add
ljmp
or
cld
adc
movsl
inc
orl
aas
jp
cltd
shl
sbb
and
out
cmp
sub
push
cmp
add
adc
adc
add
adc
sbb
pushl
xchg
xor
rolb
xor
cs
fwait
rcrl
adc
jg
inc
mov
sub
dec
arpl
fs
inc
xchg
cld
inc
xor
jbe
mov
clc
cli
das
sbb
cmp
int3
mov
jge
push
imulb
dec
aaa
std
outsl
xor
adc
stos
lret
or
insb
adc
cmp
stos
ljmp
shlb
dec
xor
xchg
call
inc
mov
incl
sub
mov
inc
in
mov
jg
movsl
dec
inc
and
adc
push
mov
incl
in
adc
mov
sbb
cld
push
outsl
mov
push
adc
cmp
pushl
movsl
sbb
clc
cs
sbb
lcall
call
enter
ret
dec
jbe
incl
ret
shlb
pop
enter
push
das
push
push
adc
test
xorb
gs
repnz
lcall
lock
fdivl
adc
es
jecxz
sbb
sub
into
ret
call
mov
push
xor
js
lahf
cmpb
xor
or
pop
push
repnz
fisubl
roll
dec
lret
test
inc
lods
and
xchg
fld
rcr
inc
popf
xor
add
push
shrl
pop
add
enter
std
add
pop
mov
inc
push
jmp
enter
xchg
ljmp
jbe
and
dec
popw
mov
cwtl
int
adc
add
lods
dec
cmp
fistpl
lahf
aad
aad
test
xchg
stc
popa
loopne
cs
lods
add
jb
sub
pop
xlat
insb
mov
fs
and
push
fdivrs
dec
sar
andb
adcb
mov
jae
scas
cs
and
mov
mov
add
or
xor
xchg
cmpsb
adc
mov
cmp
cltd
xchg
pop
repnz
add
xchg
clc
rolb
dec
scas
inc
add
xchg
lods
and
hlt
push
or
leave
fwait
stos
lret
mov
pusha
leave
sub
and
pop
jp
mov
cmp
mov
insl
rorb
xor
push
pop
push
or
repnz
add
dec
loopne
add
mov
xor
fisttps
push
movsb
pop
shlb
inc
push
daa
fsub
add
std
jo
stc
inc
and
stos
mov
mov
ret
push
out
mov
mov
cmp
mov
adc
sahf
pop
push
ret
fxtract
shufps
insb
clc
mov
adc
adc
or
leave
sub
pushl
sbb
add
sbb
mov
mov
xchg
lret
sub
orb
cmp
inc
push
add
das
sub
push
scas
jo
jp
repz
dec
call
shrl
mov
push
stos
out
sbb
stc
aam
push
ljmp
lock
das
add
push
inc
aam
test
js
xchg
mov
data16
sbb
pop
nop
ja
mov
push
nop
sbb
std
push
mov
hlt
mov
mov
loopne
test
pop
outsl
jg
mov
scas
and
les
lods
in
cmpsl
rcr
popa
test
nop
pushf
mov
outsb
pop
mov
outsb
out
push
and
jo
xchg
lods
je
bound
sbb
lea
sbb
incl
ficomps
je
adc
add
adc
in
ljmp
adc
xchg
jbe
out
add
add
test
leave
stc
inc
pusha
add
bound
xchg
mov
and
or
popa
sub
mov
mov
lea
push
jbe
push
and
cmp
in
dec
clc
jmp
adc
insl
rcr
sbb
or
rorl
test
in
nop
les
std
mov
inc
jbe
push
out
je
add
notb
sub
inc
inc
sub
push
mov
fcomip
das
cs
shrb
adc
dec
cmp
test
iret
cli
mov
mov
ljmp
cmpsb
cmp
dec
int3
nop
loop
add
int3
ljmp
fiadds
les
lahf
leave
cmp
sbb
cltd
std
fcmovnbe
xchg
nop
addb
test
jne
adc
sub
mov
inc
dec
dec
jbe
cmp
lea
xor
mov
push
xor
mov
fdivrs
add
and
aaa
std
push
or
push
movsb
push
sti
xor
xor
pop
jbe
outsl
cli
incl
xchg
notl
jo
xor
les
jb
jno
insb
in
add
decl
inc
test
bound
adc
and
sarb
shlb
mov
add
mov
or
out
inc
mov
test
xchg
cs
jmp
pop
add
outsl
inc
mov
add
pop
xchg
xor
sahf
push
outsb
add
call
in
dec
xchg
mov
lea
fidivrs
fnstenv
mov
scas
in
cwtl
jne
add
movsl
cmp
enter
dec
cld
jno
cmpsl
jmp
je
rcll
les
mov
xchg
call
jg
ja
in
jo
lods
sub
inc
mov
sarl
icebp
aaa
mov
lock
pop
lea
mov
paddq
inc
pop
adc
add
mov
pushf
jge
rorl
ret
push
push
push
mov
xlat
sbb
mov
push
pop
bound
cmpsb
pop
fidivs
loop
fwait
in
sbb
call
lods
inc
jp
add
adc
jne
nop
std
add
add
mov
or
addl
or
sbb
fdivrl
or
rcrl
stc
leave
mov
hlt
pop
and
mov
mov
js
jmp
scas
or
jbe
add
adc
pop
loope
sar
call
push
and
int
pop
movl
push
sub
in
push
pusha
movsl
sub
sahf
xchg
pop
out
dec
jb
loop
pop
popf
adc
sti
xlat
adc
in
sbb
lcall
daa
dec
cmp
push
cwtl
out
xchg
dec
mov
jecxz
adc
cmpsl
out
add
incl
ss
mov
add
inc
testb
jmp
lret
into
add
pushl
aas
inc
and
out
jp
rorb
inc
loope
test
ljmp
xchg
sub
sub
adc
sub
cld
jl
in
xor
mov
mov
adcl
pusha
sbb
adc
decl
jb
xchg
jp
mov
fadd
mov
popa
cli
add
clc
fisttps
sbb
pusha
push
inc
stos
shrl
outsl
adc
xlat
in
ret
pusha
daa
daa
mov
dec
pop
mov
or
cs
shlb
daa
inc
cmp
rol
incl
pop
cld
dec
sbb
xchg
repnz
mov
fldcw
or
fistpl
fistpll
nop
lret
inc
int3
xor
mov
and
test
cmp
cmpsb
lcall
jno
sbb
jmp
scas
dec
sub
sub
lea
pop
mov
repnz
shl
cmpsb
incl
sbb
test
adc
dec
pop
inc
adc
mov
cwtl
je
movups
inc
decl
fisttps
aad
xchg
or
jae
cmp
loopne
push
mov
adc
out
pusha
sub
fdivr
call
sbb
fimuls
jne
cltd
out
jmp
ja
arpl
cwtl
incl
jbe
cmp
adc
outsl
inc
aam
inc
mov
inc
out
ffreep
cli
xor
mov
mov
pushf
test
movsl
inc
add
and
or
int
push
std
call
ret
sub
xor
lds
pop
adc
in
push
dec
xchg
in
les
call
incl
or
sbb
jno
cmp
call
xchg
iret
pusha
out
out
cli
call
ds
dec
js
lds
xchg
inc
xchg
adc
xchg
sbb
dec
and
mov
xchg
popa
mov
inc
or
popf
and
or
jecxz
scas
shlb
pop
ret
mov
mov
call
shl
lods
xchg
xchg
dec
pop
push
sti
cmp
inc
add
jecxz
test
cli
addb
mov
mov
clc
push
push
jmp
push
cld
add
mov
shll
cmp
cmp
cmp
and
ljmp
gs
addr16
popf
call
cmp
inc
notb
test
or
dec
adc
push
lea
mov
sti
inc
ljmp
hlt
clc
sbb
testb
in
xchg
icebp
xor
fcoms
loop
cs
mov
xorb
shlb
mov
lock
leave
movsb
sub
lcall
subl
call
out
test
popf
fsubl
movsl
xor
push
jo
mov
and
mov
call
add
ficompl
and
rcrl
adc
imul
xchg
adc
sahf
mov
lahf
nop
shrb
decl
test
add
mov
fcoml
mov
popa
adc
inc
xor
aad
ds
mov
call
test
and
dec
xor
fld1
mov
lods
rcl
aaa
pushl
dec
clc
clc
adc
roll
in
loopne
mov
inc
out
loop
call
ret
and
mov
ljmp
xchg
js
test
sub
and
sahf
fstpl
les
imul
sub
leave
mov
jg
sbb
out
lahf
popf
out
das
movb
ret
test
pushl
push
lock
adcb
and
and
cmc
inc
dec
push
jae
xchg
pop
jae
and
xor
add
nop
ss
lcall
lcall
xchg
shll
jmp
mov
jb
pop
inc
add
sub
jl
decl
repz
cld
or
ds
xchg
and
ja
mov
sar
pusha
cld
dec
xor
popa
jle
stos
dec
out
fldcw
loope
dec
jg
std
adc
int3
stos
or
mov
add
xchg
sar
cmp
lcall
push
jae
int3
inc
leave
pop
cmp
icebp
movsb
cld
pusha
mov
xlat
xor
pop
xchg
or
jae,pt
or
add
sbbb
and
sub
sbb
jae
add
cli
pushl
and
cmpsl
xor
cmp
rorb
and
sub
enter
fsts
pop
inc
sbb
push
loop
adc
push
or
pop
hlt
shrb
add
fstps
loopne
or
into
imul
xchg
in
jge
cwtl
add
rcrw
cltd
mov
xchg
dec
lds
push
jbe
ret
add
jmp
sbb
add
aas
or
pop
clc
jle
dec
test
jmp
cli
pusha
mov
rolb
test
dec
fbstp
bound
mov
fcomip
dec
or
fcoml
push
push
jle
push
inc
call
xchg
les
aaa
mov
mov
xorb
jge
nop
dec
pop
ljmp
jne
aas
push
flds
xchg
push
cmp
addb
insb
lods
aaa
push
xor
fcomip
push
scas
cmp
jp
and
or
sub
xchg
dec
adc
icebp
lcall
adc
cmpsl
insb
movsb
xchg
cltd
les
adc
inc
mov
ljmp
adc
dec
mov
add
push
xchg
inc
push
std
push
js
dec
shll
jg
fdiv
data16
sarl
adc
push
mov
out
cli
inc
bound
xor
dec
mov
mov
add
shrb
and
mov
mov
push
cli
popf
mov
and
cwtl
jl
jl
aaa
sub
mov
xor
jns
enter
dec
inc
pop
push
cmpsb
movsb
roll
dec
aam
add
imul
adc
es
lods
imul
in
mov
push
pop
rorl
lret
adc
shrb
sbb
and
insl
cmp
cltd
inc
add
ja
jle
xor
popf
sub
pusha
lahf
dec
jmp
adc
popf
mov
stos
push
aaa
or
shlb
xlat
mov
mov
or
jo
add
test
bound
outsb
or
stos
hlt
das
dec
xor
and
bound
mov
pusha
inc
fwait
icebp
push
das
xchg
pop
filds
mov
sti
int3
jecxz
mov
cmp
mov
stos
imul
lock
sub
test
jecxz
inc
inc
sbb
out
or
mov
adc
mov
adc
movsl
jne
mov
jge
xchg
push
int3
add
lock
pop
into
pusha
mov
sbb
cs
pushl
inc
xchg
push
ss
test
dec
push
pushf
test
push
mov
mov
pop
inc
shlb
jno
call
leave
clc
jmp
mov
dec
or
fldt
jl
inc
pop
cmp
sti
mov
shrl
test
shlb
mul
out
mov
stos
sahf
aaa
add
clc
decl
insl
xchg
sub
xorb
rcrl
out
pop
mov
add
decb
mov
lea
mov
mov
loopne
and
or
pop
push
jno
stos
loop
pop
and
add
cmp
shl
inc
stos
test
add
jnp
jne
call
movhps
clc
icebp
js
and
xor
adc
inc
outsb
in
mov
ja
xchg
pop
sti
ret
es
ljmp
sbb
mov
in
incl
or
jg
int3
xchg
dec
fildl
dec
add
jge
xchg
scas
test
insl
or
lcall
add
mov
push
dec
jp
push
adc
cwtl
ja
jg
adc
incl
cltd
jmp
xchg
ljmp
sub
jnp
jno
lea
cmpsb
ss
fcos
ds
das
incb
mov
sahf
fsubl
loopne
aad
or
mov
sbb
popf
add
pop
jmp
mov
xor
or
mov
sbb
cli
test
addr16
out
mov
pop
rorl
arpl
sub
scas
rorb
ret
ljmp
inc
or
shrw
hlt
jg
incl
sbb
mov
into
sbb
aam
imul
fisttps
and
jmp
test
aas
pop
sub
adc
lock
lds
decl
or
sbb
xor
adc
mov
jmp
lods
imul
cmp
pop
scas
push
daa
movsl
add
sarl
lock
insl
pop
pop
cltd
es
pushl
or
push
cltd
adc
aas
sbb
movsl
xchg
fdivrs
jns
add
lods
outsl
clc
jp
xchg
addl
sbb
mov
lret
ret
lea
xorb
popa
call
clc
lock
fidivrs
rcrb
push
jbe
pop
idiv
aaa
adc
push
mov
jo
enter
jmp
lea
pop
sbb
rclb
sahf
pusha
add
loope
ret
xor
xor
xchg
imul
or
mov
sbb
fnsetpm(287
add
adc
shrb
test
rclb
aaa
xchg
adc
in
jo
vcvtsi2ssl
mov
shll
popa
and
and
jecxz
ret
or
lret
imul
ds
and
or
and
inc
or
xchg
cmp
daa
mov
mov
inc
and
smsw
rclb
xchg
add
sub
add
or
in
inc
adc
das
push
fstpl
jp
sarb
pop
mov
xchg
stc
xor
cld
imul
cli
adc
push
or
je
xchg
jle
add
aaa
loop
adc
fsubl
cmp
data16
inc
xor
loop
jmp
xchg
enter
jb
add
adc
cwtl
pop
push
or
shl
arpl
dec
pushf
sbb
dec
gs
decl
sub
test
jmp
push
sbb
or
andl
xor
cli
push
push
cmp
cmp
mov
or
dec
cli
push
mov
daa
scas
fsubrp
mov
add
enter
lcall
aam
xor
dec
ret
les
mov
nop
lcall
cli
mov
jmp
or
and
add
cmc
mov
add
add
push
imul
dec
cmp
stc
and
decl
mov
push
jbe
adc
sub
call
sub
aad
push
or
lcall
add
mov
testb
and
popf
cmp
sar
jmp
cmovb
xchg
jae
and
push
scas
adc
xor
dec
push
adc
cmp
jg
jg
jle
fcoms
sub
mov
pop
fs
movsb
sbb
xor
decl
or
mov
mov
push
in
sub
mov
cmp
scas
fcomip
movb
rcrb
adc
add
and
mov
call
fs
xor
mov
out
jecxz
icebp
sbb
mov
lods
jo
jle
or
jg
pushl
sbb
and
pop
push
mov
rcr
test
call
mov
lahf
sbb
inc
in
jbe
or
mov
or
call
data16
into
push
inc
xchg
push
or
call
andb
cmpsl
jns
or
nop
js
sti
sub
sti
ret
lcall
sbb
shll
mov
push
rcll
aas
and
adc
inc
ds
incl
call
inc
dec
lret
addr16
push
inc
mov
jp
je
rol
loopne
pusha
sub
add
xor
loop
sub
ljmp
sbb
mov
fwait
sub
jmp
dec
into
sub
mulb
rcrl
pop
repnz
data16
cmp
je
and
jns
rcrl
inc
aad
jmp
and
and
fcmovbe
xchg
mov
adc
mov
iret
adc
pop
push
and
mov
xor
cmp
call
pop
cltd
push
adc
push
arpl
cs
add
pusha
pop
bound
decl
pop
dec
rcrl
andl
and
call
loope
jg
cmp
out
rolb
dec
bound
flds
and
outsb
inc
push
mov
mov
adc
ret
bound
sub
jno
nop
es
adc
dec
mov
jmp
mov
int3
add
cmpsb
test
and
inc
inc
and
lcall
cmp
mov
fcoml
fsqrt
out
and
and
mov
call
jns
push
les
dec
dec
gs
xchg
and
xor
inc
mov
jl
xlat
into
sub
and
aaa
lcall
add
js
imul
adc
je
test
jmp
push
mov
inc
add
and
sbb
inc
js
xchg
adc
and
test
test
pop
inc
jmp
add
xchg
sbb
adc
cmpsb
pushf
inc
ret
shll
add
jmp
xchg
sbb
and
ret
adc
sub
es
stc
jno
test
loopne
and
loop
je
pusha
ret
test
and
in
lock
adc
dec
adc
popa
mov
cwtl
rcll
push
pop
pop
mov
call
xchg
mov
sets
cli
mov
or
sbb
sahf
push
mov
out
cli
cmp
jne
popa
lret
pop
bswap
movsb
cwtl
and
sbb
jg
ljmp
and
adc
xchg
adc
push
cwtl
pop
adc
pusha
ljmp
cli
cltd
loopne
fwait
inc
into
mov
and
sbb
mov
jo
sub
pop
push
fsubrs
ficoml
enter
loope
test
xchg
mov
sub
adc
jl
inc
pop
add
cmp
jge
mov
xor
call
inc
jb
cwtl
xor
fs
les
fs
inc
sub
enter
decl
addl
or
add
call
in
cmp
cld
cmp
or
mov
adc
loopne
sti
xor
cmp
jo
mov
cmc
xchg
shr
and
dec
aas
xor
mov
push
insb
cmp
pop
stc
out
cmpsl
add
or
inc
ret
add
mov
jmp
adcl
mov
and
pop
dec
inc
sbb
mov
loop
es
outsl
jle
and
ret
and
mov
or
fs
sub
adc
push
or
and
xor
xor
pusha
cmp
scas
mov
add
push
add
nop
or
call
outsl
mov
sbb
pusha
insb
cmp
stos
fsubrl
mov
jecxz
aad
call
adc
inc
enter
sti
mov
imul
lahf
gs
add
nop
lret
lcall
push
pop
push
fucom
jnp
ret
aas
call
dec
ss
jbe
jmp
outsl
push
mov
or
outsl
popa
rcrl
pop
jbe
cmp
clc
push
sbb
aaa
cld
mov
testb
cmp
mov
jge
pop
sbb
jmp
stos
sarb
dec
loopne
iret
jg
js
and
pushf
negb
subl
fadd
mov
cwtl
sbb
in
cmp
push
cmc
js
and
jno
addb
outsl
out
lods
mov
jmp
mov
ret
cmc
in
movsb
cld
push
cmp
and
je
push
jb
rcrl
in
sub
inc
subl
push
mov
or
inc
out
mov
das
mov
and
cmp
inc
xor
cli
push
dec
cmp
or
or
data16
int
cmpsl
mov
filds
call
inc
lahf
push
dec
dec
cmp
roll
scas
pop
cmpsl
xchg
daa
sub
and
adc
dec
sub
mov
mov
lret
jmp
les
sub
decl
adc
fucomip
mov
push
scas
mov
or
iret
cmp
xchg
mov
ret
or
jno
lea
dec
es
movsl
pop
fiaddl
sti
and
decb
adc
fdivr
push
popa
xchg
jns
xor
or
or
subb
or
push
out
pop
and
mov
push
es
test
insl
ret
mov
cmp
cmp
sbb
mov
call
add
lds
pop
bound
jbe
ror
pushl
cmp
push
lahf
repnz
insl
sub
cmpsb
lea
ret
push
fcompl
pop
jl
fcomip
mov
mov
mov
mov
loope
adcl
fisttps
jbe
mov
push
clc
adc
cmp
sbb
imul
xchg
xchg
in
add
pushl
imul
je
sbbb
xor
add
adc
adc
popf
mov
rclb
pop
pop
add
mov
pushf
xor
and
js
add
add
cmp
dec
mov
sarl
jns
cmp
popa
loopne
xor
add
incl
jge
xor
lcall
lods
push
jmp
int3
xor
sub
fsub
rorb
rclb
ja
fwait
xchg
xor
xlat
cmp
sbb
fildl
mov
and
cmc
xchg
es
lods
dec
jns
movsb
cmp
test
adc
cld
add
pushl
cld
iret
cwtl
jbe
adc
push
or
shll
cmp
scas
test
in
jmp
xchg
mov
xor
dec
lret
dec
mov
ja
xchg
cld
movsb
loop
incl
bound
jg
push
cmp
dec
clc
sub
pushf
imul
sahf
icebp
push
daa
dec
sar
and
ret
mov
mov
lcall
add
inc
cld
adc
cwtl
sbb
call
cld
das
lret
enter
add
and
fcoms
inc
cmpsb
cmc
push
mov
daa
add
decl
mov
incl
orb
sub
mov
jg
jo
sbbl
jle
std
mov
gs
insl
xchg
and
cmp
aam
andb
ljmp
sbb
cwtl
daa
shrb
xchg
or
xor
cmp
pushl
decl
nop
lcall
adc
sbb
stos
sub
inc
cmp
data16
push
clc
js
dec
mov
push
adc
jmp
pop
dec
and
sub
xchg
jl
xchg
incb
sbb
xchg
rcrl
es
out
jb
add
inc
decl
orb
imul
inc
test
sbb
loope
cs
test
push
pop
push
aad
ret
xchg
sub
inc
rclb
fistps
adc
jg
ljmp
cli
incl
inc
in
mov
pusha
sub
xor
lret
mov
das
mov
call
in
fimuls
scas
outsb
push
or
add
test
ds
fld1
clc
lcall
sbb
mov
fldl
cli
call
xor
and
mov
fsubs
roll
jp
sar
mov
mov
mov
cmp
mov
out
mov
call
and
lcall
xchg
lea
inc
or
test
xor
decl
pop
scas
aam
jmp
fnstcw
cmp
test
inc
and
incl
movsb
mov
xchg
icebp
test
xorl
hlt
push
das
jmp
pop
push
loope
call
cmpsb
mov
movsl
adc
adcb
jecxz
sub
lds
inc
xor
and
lret
add
repnz
cmpsl
hlt
fnsave
pushf
mov
call
ss
mov
mov
fmull
lret
mov
mov
xor
movl
aad
ss
add
xchg
in
and
xchg
sub
fbld
add
pusha
mov
jp
sub
push
xchg
aas
cmp
ljmp
fs
repz
push
jb
dec
test
xchg
pop
int3
mov
sub
iret
movsl
xchg
sbb
push
clc
sub
rcll
lcall
xchg
push
cli
push
cli
add
bnd
push
xor
shrb
mov
out
popa
cli
mov
inc
roll
test
stc
inc
xorl
xchg
jae
fs
in
lds
xchg
xor
jl
push
std
mov
idivb
lods
push
mov
pop
and
nop
sub
or
pop
lcall
jmp
test
xor
popa
inc
inc
or
int3
inc
xchg
and
lret
or
test
add
xchg
rolb
dec
stos
lock
popa
add
pop
bound
sarb
imul
add
mov
add
jo
call
cld
inc
call
mov
sub
push
xor
cs
imul
sti
out
ret
push
fcoms
pop
idivl
mov
push
mov
xor
push
pop
loopne
call
loopne
outsb
das
cmp
int3
fs
addb
or
mov
xchg
lods
mov
xchg
fisubrl
pop
and
fnstenv
mov
out
add
sbb
push
mov
dec
lret
adc
cld
inc
xchg
ds
das
inc
decl
inc
mov
in
es
fisubrl
dec
movsb
xor
stos
in
test
pusha
dec
ljmp
or
and
dec
and
mov
xchg
jo
push
sbb
add
push
xor
sub
int
sub
sub
xchg
or
pop
and
ljmp
mov
test
push
daa
xchg
mov
xchg
xor
inc
loope
mov
push
inc
add
inc
jp
pop
lock
incl
jge
fistpll
andb
mov
ja
xchg
imul
xchg
stc
movsb
into
int3
xchg
mov
push
stc
adc
decl
lods
icebp
mov
fs
adc
mov
xor
fiadds
das
clc
iret
xor
daa
or
sub
imul
pop
xlat
sub
cmpsb
sub
incl
cmp
xor
dec
movsl
nop
xchg
ret
jmp
dec
mov
outsb
cwtl
pop
push
inc
js
in
sub
sti
les
inc
jge
jbe
push
decl
sbb
pusha
add
push
mov
adc
or
ljmp
jns
stc
xor
xchg
pop
jne
bound
dec
fwait
cmp
push
decl
scas
inc
mov
hlt
in
and
rorl
into
stc
mov
call
adcb
or
rcll
pop
pop
add
pop
inc
inc
or
or
inc
xor
fcomip
decl
and
int3
or
add
sarl
lods
stos
pop
or
pushl
and
xchg
and
lcall
or
imul
lcall
jecxz
cld
cmp
imul
dec
test
add
lock
cmp
inc
test
cli
and
js
pop
out
cli
xchg
xchg
cmp
in
int3
std
mov
cmc
cmpsl
mov
test
int
lcall
les
push
xchg
es
mov
rorl
lods
jl
cmpsb
xor
ljmp
addl
mov
xchg
push
add
inc
inc
and
mov
jle
enter
out
cs
test
lcall
shll
sub
sub
mov
shl
dec
sbb
add
decl
dec
inc
cmp
jle
call
dec
or
pop
and
xchg
push
scas
cmc
cmp
in
mov
mov
mov
lcall
filds
aas
adc
fstl
or
add
sbb
and
cwtl
or
cltd
adc
nop
pop
jecxz
mov
cmp
xchg
les
dec
xor
bound
mov
xor
xor
xorl
shlb
xchg
cmp
lcall
xchg
popa
insl
leave
popa
or
loopne
xchg
into
daa
push
call
je
sub
or
popa
mov
mov
int
nop
or
sbb
sbb
add
arpl
adc
cs
sub
sub
xchg
sub
xlat
lcall
mov
js
adc
mov
inc
xor
xor
sub
call
dec
sbb
cs
adc
cmp
xchg
xor
inc
test
inc
das
jo
pushl
jmp
adc
mov
dec
mov
push
xor
xchg
and
fwait
cld
mov
mov
incl
pop
xchg
sub
mov
pop
in
mov
rcrb
fwait
mov
adc
int3
mov
ss
push
iret
xor
mov
jg
jmp
inc
ficomps
pusha
arpl
insb
js
mov
mov
sbb
jbe
data16
mov
inc
sub
add
cltd
outsb
data16
push
lock
push
int3
dec
and
sar
push
leave
and
mov
and
mov
cmp
pop
hlt
pushl
roll
sbb
je
cmp
cltd
xor
adc
in
mov
cmp
das
adc
xchg
lods
adc
popf
js
xchg
jbe
mov
jecxz
adc
cltd
mov
sbb
push
xchg
data16
adc
push
mov
mov
test
mov
adc
in
dec
adc
loope
jge
test
or
sub
lock
repnz
or
lods
and
out
push
push
clc
mov
mov
jmp
in
xchg
adc
adc
xor
push
adc
movsl
sbb
and
ljmp
mov
mov
data16
and
shlb
stc
sbb
jmp
shlb
jae
adc
jnp
and
sbb
dec
icebp
ret
std
ljmp
das
jmp
adc
mov
or
mov
bound
ljmp
or
jbe
xor
cltd
xor
jg
mov
movsl
xchg
fadds
push
dec
decl
inc
ds
pop
adc
cltd
addl
enter
and
and
xor
sub
incl
inc
cmpsb
test
inc
mov
and
cwtl
ja
inc
les
push
std
inc
iret
inc
sub
push
shlb
outsl
xor
pop
or
out
nop
xor
push
fs
ljmp
xchg
jb
imul
lods
inc
jne
mov
and
idiv
jg
inc
mov
repnz
adc
push
dec
test
xor
xchg
shll
or
notb
pop
cld
incl
es
jo
lahf
or
mov
inc
enter
jl
shrb
ja
andb
sbb
xor
cmpsl
sub
loope
add
fs
adc
inc
sbb
xor
loopne
or
mov
test
adc
jp
lds
push
and
imul
cs
xor
mov
cmp
push
shll
popa
adc
jae
enter
rolb
fnsave
push
popa
mov
push
fwait
add
inc
cmp
mov
xor
mov
inc
ss
jno
pop
cmp
xor
test
aaa
daa
out
daa
mov
popa
inc
fnop
in
mov
and
pop
xor
push
push
loopne
jp
or
xchg
xchg
pop
stos
push
repz
dec
pop
repnz
lret
in
fcoms
fiaddl
fisttps
pop
inc
dec
sbb
jns
in
mov
and
lds
sbb
mov
test
inc
xchg
imul
mov
mov
nop
dec
mov
sbb
dec
bound
cmp
xchg
ljmp
xor
daa
xor
test
sti
mov
mov
sbb
pop
mov
pop
dec
dec
stos
jp
mov
shlb
cmp
cmp
jecxz
jo
sbb
rcr
xchg
push
in
ret
lock
mov
lods
test
fcmovnbe
cmc
fwait
jecxz
incl
stos
xlat
jnp
lods
hlt
pop
sbb
nop
ljmp
cmp
jbe
fdivs
call
cltd
mov
pop
cmp
cmc
sahf
adc
sarl
in
scas
adc
sbbb
and
xchg
push
shl
call
enter
popf
add
dec
pop
adc
dec
cmp
or
and
inc
ljmp
mov
cwtl
les
sub
push
pop
loopew
movb
aad
sti
lret
test
fidivrs
add
ljmp
in
and
loop
cwtl
or
add
sahf
or
clc
fcoms
dec
incl
aas
and
inc
xchg
sti
adc
sub
sbb
loope
daa
sub
sbb
outsl
mov
out
fs
icebp
push
push
mov
sahf
pop
repz
xorb
add
ja
and
xchg
and
incl
dec
test
and
ja
sti
enter
inc
ds
pop
cld
or
inc
or
or
js
adc
jmp
mov
xor
fs
inc
std
or
in
fwait
and
call
cltd
addl
in
sahf
pop
nop
incl
out
out
int
jge
incl
mov
movsb
nop
xor
insl
sub
clc
xchg
out
bswap
mov
ucomiss
sub
jmp
adc
jg
xor
and
aas
sub
jg
sbb
cmp
aas
add
icebp
rcrb
andl
dec
sar
aam
je
adc
pushl
pop
cli
cmp
mov
stos
adc
sub
xor
cmp
sub
xlat
loopne
jmp
mov
ljmp
inc
add
sbb
xor
outsl
hlt
add
pop
add
call
dec
pushf
push
xchg
adc
dec
inc
call
test
jno
and
imul
jmp
pop
push
sbb
mov
add
or
movsl
pop
shrb
jb
adc
repz
cs
and
imul
push
popa
inc
adc
add
incl
stos
push
dec
mov
mov
jg
xlat
add
cmp
push
loope
sub
xchg
adc
inc
xchg
pusha
adcb
jg
mov
mov
cwtl
ljmp
push
push
out
push
push
push
push
sbb
push
cli
call
xchg
rclb
adc
cmp
lock
inc
mov
leave
jne
add
xchg
adc
pop
rcrl
bound
pop
mov
xchg
xchg
jmp
lods
xchg
xchg
cmp
int
pop
dec
xchg
mov
in
std
outsb
jnp
sbb
cs
push
and
pop
and
daa
push
arpl
add
fistpll
dec
and
enter
mov
or
repnz
add
in
cld
aas
add
or
das
mov
and
sbb
sbb
push
jbe
mov
xor
sbb
xchg
incl
or
popa
xchg
inc
jmp
jmp
jo
movsl
or
push
lret
jmp
lea
sarb
popaw
out
jmp
or
lcall
sub
mov
cmc
scas
mov
push
dec
xchg
xor
fs
incl
inc
add
cmp
int3
cld
into
jecxz
decl
mov
subb
cmp
test
int3
sbb
decl
push
dec
mov
int
mov
jmp
sbb
fisttpl
mov
jmp
xchg
or
loope
ret
xor
int3
in
leave
mov
sbb
shlb
jbe
mov
dec
jns
jae
push
movsb
push
and
push
cld
and
mov
pop
lcall
mov
test
sub
jmp
adc
aaa
decl
sub
mov
push
adc
loop
sti
add
jecxz
aad
and
add
sbb
adc
ljmp
adc
and
mov
or
nop
stos
rorb
jg
rol
inc
or
adc
and
das
icebp
and
and
jg
fcoml
mov
iret
icebp
lahf
jbe
cmpsl
nop
rclb
lret
or
loope
and
call
jmp
add
add
push
rolb
dec
jge
int3
popa
xchg
push
mov
repz
cmpsl
and
mov
inc
lds
push
or
and
and
adc
inc
orl
push
stos
mov
inc
jb
and
sub
imul
scas
lret
mov
or
jecxz
ficompl
xchg
mov
cmpsb
stos
pushf
cmpsl
fcmovne
adc
mov
stos
popf
pextrw
push
push
popf
rolb
push
and
pop
pusha
mov
mov
sub
adc
jmp
or
ret
mov
imul
loop
mov
mov
jg
mov
dec
xchg
fidivrs
dec
sbb
call
xchg
xchg
inc
pop
cmpb
inc
jmp
mov
lcall
pushl
sub
or
rcl
rcl
mov
mov
inc
jmp
xchg
inc
pop
jl
cld
pushf
or
xchg
jbe
lds
push
rcrl
adc
or
aaa
push
lret
cld
cli
test
andl
pop
addb
pop
mov
dec
cmpsl
xchg
fisubrs
and
push
jmp
pop
or
in
lcall
xchg
iret
or
test
jmp
pop
lret
jnp
adc
xchg
imul
add
cmp
add
out
mov
inc
pop
pop
push
ss
js
pop
sub
fcmove
ja
cmpb
stos
sub
lods
into
lretw
inc
add
ret
dec
mov
loop
scas
div
shr
orl
or
cmp
mov
lock
call
adc
or
gs
push
rorl
aad
aaa
inc
mov
pushl
loop
xchg
fdivs
xor
int
mov
out
daa
cmp
xor
or
call
aaa
dec
fisttpl
in
movsl
out
notl
pop
cmp
inc
movsb
mov
fdivrl
inc
jmp
or
insl
cltd
insl
inc
adc
fcmovne
push
test
cmp
mov
pop
push
icebp
rolb
mov
pop
loope
xor
hlt
aaa
lret
mov
xor
decl
or
push
push
mov
arpl
pushl
mov
xlat
lock
lahf
pop
xchg
sub
and
aaa
divl
xor
stos
repnz
pushl
cmpsb
jge
int3
mov
setae
in
xchg
bound
cmpsl
inc
adc
stos
add
or
adc
jbe
loope
pushl
stos
mov
adc
cmp
std
fildll
loop
dec
addb
push
mov
daa
lcall
inc
mov
dec
mov
add
stc
pop
sbb
into
or
aam
sub
jmp
mov
inc
fcoms
push
mov
fildll
cmp
adc
sub
jo
dec
subb
mov
dec
add
dec
ljmp
push
cmp
ja
loopne
stos
sub
cmp
lock
je
mov
loop
dec
or
dec
cli
stc
or
add
out
div
mov
lea
mov
inc
lock
ljmp
cld
adc
adc
in
int
or
jmp
or
add
or
jge
mov
incl
sub
add
mov
add
jp
test
cmp
loopne
loop
pushf
push
xor
xchg
pop
rcrb
mov
cmc
sbb
cwtl
pop
loop
les
movb
add
out
jbe
cmp
add
inc
adc
loopne
xor
push
xchg
jl
stos
adc
dec
jmp
mov
pop
pusha
test
push
jmp
jne
xor
mov
pusha
jecxz
pop
xchg
test
jge
xchg
dec
and
shll
dec
lcall
dec
xor
dec
pop
inc
loope
stos
imul
jg
lea
addr16
out
test
mov
mov
adc
push
adc
mov
and
dec
push
adc
and
les
ss
call
jno
leave
cmpsb
sahf
adc
or
pop
mov
enter
aas
push
push
add
xlat
adc
int
mov
dec
mov
xchg
mov
testb
out
jmp
rorl
mov
scas
lock
loope
stos
in
mov
popf
mov
ljmp
aas
add
add
dec
mov
jecxz
nop
xor
jns
or
adc
mov
sbb
mov
jmp
cld
sbb
mov
mov
sub
pop
test
stos
sar
call
rcll
stos
daa
mov
nop
dec
not
push
jge
push
push
es
in
fistps
push
mov
test
dec
insb
pushf
stos
adc
mov
mov
jb
mov
ja
rorb
rclb
add
sbbb
in
cmp
and
ljmp
and
xor
or
push
pop
mov
ds
dec
test
lcall
rcrb
push
loopne
xchg
or
lds
movsl
fildl
mov
jmp
pop
sbb
or
push
inc
push
mov
addb
aaa
xchg
jns
lds
filds
add
scas
sbb
push
test
test
rorl
lret
into
mov
or
call
dec
push
jne
sbb
mov
lahf
xlat
push
shl
outsb
stc
adc
call
lret
mov
fsubl
enter
adc
and
std
jge
jmp
call
cld
lcall
negb
sub
cli
pushf
test
nop
xrelease
jns
decl
push
shlb
sete
adc
test
repz
flds
add
jmp
ss
scas
sub
pop
xchg
adc
rolb
dec
inc
pop
imul
incl
push
sbbb
loope
jno
in
push
jecxz
sarl
incl
jne
or
movl
and
js
pop
stos
ds
lcall
adc
jl
jns
add
clc
mov
incl
add
or
cs
push
stc
or
clc
sub
cld
fstpt
bound
popl
mov
mov
sbb
clc
xchg
out
jl
pop
jns
cmp
mov
sub
stos
add
mov
insl
mov
add
jecxz
sarl
xor
pop
mov
dec
add
sub
pop
sub
mov
xor
out
jbe
pop
jecxz
add
idivb
imul
int
sbb
ljmp
xor
clc
fisubs
and
mov
out
pop
clc
push
iret
fstpt
loopne
scas
mov
mov
jl
mov
ds
jecxz
mov
pushl
jle
clc
outsb
pop
pushf
in
loope
jl
jl
ds
clc
jae
fcoms
mov
jle
inc
mov
icebp
std
pop
aas
xor
clc
dec
ds
pop
xor
leave
out
jl
pop
test
js
sti
jmp
stc
scas
mov
mov
jbe
jl
add
cli
pushl
sbb
fsubr
mul
jb
or
inc
movb
js
js
jecxz,pt
test
inc
pushf
ret
add
loop
sub
fdiv
mov
arpl
push
mov
clc
push
outsb
cmp
clc
ljmp
pop
sub
pop
jecxz
icebp
pop
pop
int3
jl
cmp
jecxz
icebp
or
das
mov
add
jl
jb
cmpsl
es
cld
dec
add
jns
mov
add
leave
clc
sbb
ds
js
and
dec
pop
mov
and
sub
xor
mov
pop
xchg
and
jp
dec
fimull
pop
jecxz
add
in
pop
stc
pop
add
sub
stos
sahf
ret
push
ds
int3
jmp
ds
pop
push
ss
shlb
xchg
mov
cwtl
push
add
dec
ljmp
mov
sub
dec
jl
imul
nop
cmpxchg8b
fs
scas
add
je,pt
ret
test
pop
nop
out
mov
and
xor
movsl
iret
loopne
lret
sub
jg
jmp
add
add
data16
inc
mov
mov
add
jne
inc
add
add
sbb
adc
shl
std
add
sbb
mov
mov
mov
add
icebp
pop
add
jb
adc
mov
mov
lret
add
add
or
fidivs
add
xchg
hlt
in
fwait
inc
xchg
es
add
scas
mov
sti
and
rcrb
pop
stos
add
sbb
add
ficomps
fisttpl
clc
sub
mov
add
jbe,pn
inc
dec
pop
clc
sbb
inc
mov
movl
add
mov
jmp
jmp
shr
pushl
add
xchg
lds
dec
sbb
mov
js
sub
icebp
push
mov
scas
pop
and
xchg
rolb
add
std
lods
arpl
lods
sbb
mov
notl
adc
jg
adc
add
cmp
add
sub
add
clc
and
add
xchg
sbb
add
lods
movsb
jecxz
sub
outsl
add
mov
xor
das
sub
mov
adc
xlat
mov
ljmp
imul
addl
fstp
es
sbb
push
clc
pop
mov
imul
scas
jbe
dec
ret
pop
adc
and
ds
or
cmpsl
mov
xor
pop
ds
iret
cmp
add
push
adc
inc
dec
or
add
pop
jmp
neg
push
add
add
add
lahf
or
sbb
or
add
sbb
outsb
mov
pop
pusha
rolb
xchg
sbb
fcomp
mov
push
cmp
add
pop
bound
mov
and
iret
add
xor
sub
sub
out
lock
cltd
sbb
sub
scas
mov
cmp
cli
lock
call
add
jbe
mov
and
sbb
test
lcall
sbb
adc
incl
rclb
add
xor
shlb
or
pop
stc
or
pop
data16
gs
xlat
jl
and
adc
inc
les
and
cmp
mov
js
or
dec
or
dec
mov
incl
mov
push
or
stos
sbb
outsb
into
aam
and
sub
out
aas
out
or
decl
js
or
xor
and
dec
je
inc
dec
push
jecxz
iret
dec
mov
in
xlat
sbb
out
call
shll
jle
lcall
jmp
cmpsb
sbb
inc
daa
iret
ja
mov
ud0
dec
cmp
addb
push
loope
insb
or
lds
aas
and
add
sub
inc
adc
sbb
xchg
jl
pusha
jmp
shr
jle
jno
icebp
int
out
sbb
sahf
sahf
les
lds
inc
aam
ja
pop
subl
imull
popa
outsb
jmp
mov
stos
in
mov
les
ficomps
hlt
adc
push
fnstenv
xor
mov
jbe
sub
mulb
les
add
decl
mov
cmp
decb
dec
cld
xor
push
jo
stos
cmp
mov
enter
jmp
push
mov
aas
inc
es
push
add
aaa
mov
daa
lahf
sub
call
cwtl
ret
popf
xor
test
jo
dec
push
decl
adc
shl
aad
add
lds
in
aas
or
les
inc
and
adc
jb
call
pusha
je
lods
xor
jg
stos
lods
jg
add
out
dec
pop
ja
popf
cmpsb
dec
incl
in
cmpsl
cmp
mov
pop
mov
call
push
outsl
mov
and
test
adc
sub
inc
ret
or
lcall
sbb
pop
pop
je
loop
cmpsl
inc
jns
imul
out
and
jmp
cmp
repz
jmp
or
and
sarl
mov
and
lea
incl
sub
roll
int3
rolb
lods
push
dec
icebp
push
maxps
hlt
call
xor
das
repnz
mov
add
in
mov
mov
mov
fcom
pusha
push
jo
rorb
or
lock
scas
mov
pop
shl
nop
push
dec
xchg
in
xchg
add
lods
or
sbb
xor
insb
or
lcall
push
xchg
adc
shll
fisubrl
and
push
mov
inc
int
pop
lock
stos
ret
and
adc
mov
ljmp
jb
enter
inc
outsb
popl
adc
add
cmp
mov
xchg
decb
cwtl
and
lock
test
jo
mov
mov
dec
movsb
pop
popf
outsb
rcll
add
or
mov
sbb
xor
iret
push
stos
sbb
sub
ret
push
xchg
jmp
and
iret
cmp
inc
sbb
sub
pop
mulb
sbb
stc
loope
inc
inc
xor
mov
call
stc
push
pop
and
and
mov
rcrb
jo
leave
and
rorl
and
inc
jg
sbb
cmpsb
mov
std
add
mov
adc
xchg
sti
mov
inc
pop
push
dec
xor
sbb
addl
sub
jno
inc
push
push
ja
lret
jbe
incl
adc
mov
add
shlb
jg
lret
je,pn
xchg
xor
xchg
fldcw
loop
dec
xor
lds
cmp
xor
ljmp
pop
push
jg
add
cli
push
sub
jmp
push
xor
fsts
sbb
pop
es
inc
push
rclb
adc
add
lock
inc
incb
std
push
enter
das
fdiv
je
mov
jl
inc
sub
mov
add
stos
dec
adc
cmpsb
stc
sbb
incl
rcll
or
lock
and
adc
xchg
mov
push
pop
daa
jecxz
jns
sub
aas
xchg
cmp
inc
data16
xor
pop
data16
dec
mov
inc
movb
sub
cmp
inc
mov
jbe
push
loope
lcall
jmp
leave
loopne
imul
push
pop
mov
pop
lods
pop
xchg
popf
insb
jae
fcmovnbe
cmp
loop
popf
cmp
ljmp
test
xchg
dec
cmp
pop
movsb
daa
and
out
loope
adc
mov
cmpsl
orb
dec
sub
cmp
cmp
decl
push
adc
adc
mov
out
ret
xchg
xlat
jne
enter
xor
inc
xor
xor
rolb
loopne
cmp
jp
leave
incb
pop
xlat
test
bound
roll
fstl
mov
decl
xchg
jge
cmp
mov
xor
arpl
jle
shlb
jmp
incl
aaa
aas
dec
and
clc
jb
or
dec
shrl
int3
test
mov
inc
mov
xchg
xchg
cltd
lds
mov
jg
push
sbb
enter
mov
test
orb
and
decl
sbb
mov
mov
cs
xchg
movb
std
ja
dec
int3
jg
lcall
adc
and
add
pop
pop
add
decl
fs
in
jge
lahf
insl
lock
cs
and
push
adc
inc
andl
les
mov
fcomip
mov
pop
sbb
rol
sahf
inc
and
ds
cmp
mov
test
cmpl
add
ret
mov
aas
rcl
mov
cwtl
add
subb
mov
loop
movsb
dec
pop
push
adc
insb
jg
cmp
adc
fsubrs
xor
fwait
push
jge
jnp
mov
add
pop
icebp
call
add
lds
mov
jle
lcall
cmp
and
ljmp
out
and
pop
into
pop
clc
push
dec
mov
insb
mov
cmp
push
cltd
add
out
or
insb
test
pop
cld
pop
icebp
or
or
sub
cmp
jno
out
pop
dec
test
cld
incl
push
mov
lods
jmp
clc
orl
je
mov
push
bound
rolb
fmull
decl
sub
lds
jb
add
gs
incl
jp
add
push
inc
fistl
push
hlt
mov
mov
gs
out
clc
call
shlb
add
jno
mov
lods
rolb
gs
call
nop
test
lods
outsb
pop
lret
pushf
hlt
sub
sbb
mov
and
bound
xor
push
sbb
cmp
decl
lock
loope
cltd
xchg
mov
xchg
or
dec
xchg
mov
add
jb
sar
lcall
adc
mov
dec
sarb
aaa
mov
xor
incl
nop
push
test
sbb
in
cwtl
or
adc
sub
fiaddl
pop
push
orb
adc
and
out
pop
jl
add
lcall
xchg
mov
stos
pop
sar
lcall
pusha
jg
sahf
cli
inc
push
push
jg
arpl
in
fldcw
mov
inc
in
test
mov
pushl
cs
push
fisttpl
cmp
add
out
pusha
and
ss
aam
mov
push
adc
xchg
clc
ss
cmp
xchg
incl
push
jmp
dec
movsl
in
sub
and
xor
jmp
jb
insl
xchg
adc
mov
out
or
and
lds
push
xchg
test
pop
pop
or
jl
lds
add
jg
movsl
cmpsl
pushf
fadds
mov
inc
dec
insb
sbb
fists
sbb
outsb
mov
and
insl
rcll
jbe
ss
dec
popa
std
push
cld
scas
into
test
dec
sub
mov
adcl
pop
test
pushl
adc
aad
sahf
push
mov
push
adc
loop
inc
or
mov
dec
icebp
mov
lcall
pop
insl
mov
loopne
addr16
jg
and
sub
lods
dec
and
leave
mov
test
mov
ret
xchg
jnp
mov
jno
push
in
sarl
add
push
enter
and
cmp
ss
test
jne
outsl
cli
ljmp
loope
and
and
push
xchg
cwtl
sbb
jmp
lds
daa
sbb
push
in
xchg
pusha
scas
std
orb
imul
call
loop
inc
pushl
cmp
fists
subl
or
xor
in
mov
or
jmp
xlat
orl
fistl
cltd
iret
pop
xchg
gs
sub
call
incb
inc
movsl
jge
cwtl
outsb
fucomip
mov
movsl
sete
xchg
addr16
jmp
popa
cmp
repnz
inc
pop
inc
add
or
int
inc
je
pop
std
cmp
mov
jmp
shll
or
kxorb
arpl
shll
clc
pop
mov
pop
mov
jbe
inc
inc
decl
mov
icebp
or
repz
xlat
add
shlb
aas
mov
push
hlt
incl
push
lds
orb
in
pusha
jmp
ret
mov
push
sub
or
sbb
iret
punpckhwd
sbb
and
ss
add
mov
mov
jmp
xchg
test
add
rcl
lcall
cmp
iret
out
xchg
rolb
les
xchg
pop
out
test
icebp
dec
sub
xchg
pusha
inc
adc
inc
data16
lea
xchg
inc
repz
add
cs
rclb
mov
adc
mov
pop
orl
orl
lea
pop
pop
jl
call
adc
decl
sbb
xchg
mov
loope
out
mov
or
sub
aad
std
jmp
xchg
cltd
call
ret
aam
inc
dec
leave
adc
icebp
inc
adc
lods
call
lods
int
dec
add
shl
mov
adc
xor
aad
sahf
pushf
and
outsb
loop
aaa
out
cli
incl
xchg
inc
rcl
xchg
les
sub
loopne
inc
fildl
sti
mov
ja
lea
fadd
rclb
lea
push
xor
inc
jg
ret
mov
xchg
jno
movsb
sub
jnp
inc
xchg
xchg
add
cmp
cmp
push
or
or
icebp
or
jb
out
insb
decb
scas
sub
mov
jecxz
dec
cmp
mov
sbb
push
test
xor
int3
jg
in
push
outsl
jl
mov
fbld
popa
out
or
xchg
xchg
in
data16
mov
inc
and
enter
dec
mov
mov
and
push
xchg
mov
gs
movsl
jne
jle
into
jns
popl
and
pop
jns
mov
dec
mov
xchg
mov
mov
mov
pop
loopne
inc
enter
xchg
add
dec
dec
jno
lock
pop
sub
incl
sbb
cmp
and
in
aam
inc
ss
mov
push
inc
popa
add
mov
jg
test
repnz
insb
stos
jecxz
sub
std
xchg
es
incl
inc
push
arpl
adc
jmp
sub
add
lods
addl
push
pushf
cmp
ljmp
adc
sbb
ficompl
out
data16
je
push
loop
and
and
pop
cld
call
cmpsl
add
pop
mov
or
inc
addr16
jg
sub
ljmp
pop
push
rolb
mov
jl
mov
dec
jl
adc
sbb
and
cmp
ds
js
sbb
out
clc
incl
or
cwtl
rcrb
divb
add
bound
pushl
pusha
nop
out
push
add
inc
dec
movsb
sbb
stc
mov
xchg
ljmp
adc
fiaddl
or
std
inc
xor
ret
fcoml
jmp
lcall
cmp
xor
scas
push
push
mov
pop
je
jg
loop
lahf
imul
dec
mov
decb
mov
rolb
adc
movsl
add
xchg
push
dec
lods
movsb
rcll
ds
mov
add
dec
add
add
jbe
jne
sub
in
adc
add
shlb
adc
mov
cmpsb
xchg
adc
outsl
sbb
inc
inc
xchg
daa
cmpsl
call
add
adc
jne
mov
ror
pop
subb
out
stos
sbb
jb
and
roll
cmpsb
add
sbb
pop
les
sbb
int3
inc
rclb
mov
jae
add
je
push
in
adcl
out
enter
sub
in
in
ja
or
add
add
ret
push
pop
stos
pop
ds
add
xchg
add
ret
imul
push
mov
push
xchg
cli
add
mov
ss
sbb
in
add
scas
sub
call
andl
mov
pusha
daa
loope
hlt
sbbb
adc
fmuls
push
orb
jbe
or
dec
lds
lock
add
icebp
dec
mov
jo
xor
fsubrs
dec
push
mov
sbbb
ds
sub
push
repz
inc
mov
mov
mov
cld
mov
or
into
xchg
xchg
mov
add
adc
repz
sti
fisttps
cmp
cs
icebp
aad
sub
and
mov
sbb
xlat
add
add
subb
rclb
fsubl
sub
push
push
fs
popa
jbe
dec
mov
jo
dec
cmp
add
adc
sub
pop
xchg
es
or
pop
pop
sarl
jae
clc
or
add
push
xor
dec
cmp
bound
dec
cmp
mov
mov
mov
test
add
add
test
dec
xor
jl
ljmp
cs
ljmp
xor
inc
add
adc
push
movsl
cmpb
loop
and
add
shlb
lds
clc
outsb
add
test
ret
bound
rclb
jl
fdivrl
mov
sub
outsl
fcmovnb
add
xchg
ds
add
pop
bound
mov
pushf
rolb
stos
addb
out
push
and
es
sub
xchg
cmp
decl
ret
mov
loopne
adc
int
test
loop
in
ljmp
add
shrb
daa
adc
filds
nop
dec
and
ret
aaa
test
and
push
icebp
lcall
cli
jnp
ror
xor
dec
lock
mov
cli
jge
iret
dec
nop
sub
movsb
mov
fs
push
inc
xor
mov
es
lcall
and
adc
push
std
rolb
out
dec
push
stc
xchg
fcompl
mov
sarb
add
and
ss
mov
loope
cld
call
xchg
imull
xchg
cmp
adc
jl
data16
push
lcall
xorb
mov
xor
nop
xchg
xor
imul
or
or
cmpsl
adc
jnp
mov
lock
jb
dec
in
jbe
xchg
ret
jmp
xchg
jne
stc
jnp
rorb
imul
pop
out
ds
rcll
lcall
push
sbb
adc
cmp
mov
lret
push
adc
decl
inc
mov
aaa
nop
dec
mov
dec
outsb
jae
ret
out
mov
leave
and
adc
inc
xchg
test
and
int3
mov
sarl
pop
pop
out
mov
adc
aam
add
rolb
cmpsl
dec
sti
pop
sub
ljmp
xchg
push
or
test
xor
and
add
mov
lods
cmpsb
cld
dec
leave
mov
xor
popa
and
inc
insb
cld
jo
in
inc
pop
jl
mov
filds
ljmp
hlt
push
pop
jo
popf
cwtl
dec
lcall
push
hlt
xchg
out
inc
rcr
mov
pop
les
sbb
add
or
sbb
and
adcb
mov
dec
lods
clc
call
ret
ret
inc
mov
repz
fadds
hlt
xchg
fwait
mov
pushl
insb
push
inc
test
out
mov
push
push
sub
out
cmp
jno
and
shlb
ljmp
cltd
and
fmulp
adc
inc
xor
push
push
and
mov
flds
addr16
jp
shll
push
lcall
lcall
loopne
adc
inc
out
sar
ret
scas
pop
pusha
imull
jp
loope
dec
loopne
and
outsl
ret
in
xor
xchg
jle
ret
mov
cld
pop
iret
enter
out
insl
bound
adc
das
ljmp
aad
xchg
pop
leave
or
add
mov
incl
push
inc
pop
les
mov
dec
xor
or
cld
xchg
loope
jl
and
testb
dec
sub
add
mov
aas
daa
dec
or
enter
mov
movsb
xchg
or
data16
aas
xchg
lret
xor
or
pop
incl
or
jle
mov
add
dec
add
xor
insb
lcall
mulb
and
fwait
orb
cmp
sbb
push
sub
and
ljmp
aam
out
mov
andb
dec
testl
push
push
sarb
inc
pop
push
mov
push
or
mov
hlt
mov
call
jmp
daa
xor
inc
mov
pop
mov
fs
add
cmpsb
add
stos
xor
adc
inc
mov
jge
inc
or
mov
push
pop
push
mov
imul
hlt
call
inc
mov
mov
imul
stos
repz
data16
cmc
test
push
dec
cmp
lods
push
push
or
iret
or
sarb
imul
call
dec
mov
pop
imul
call
add
and
xor
dec
addr16
lret
jno
nop
pop
sbb
cmp
sub
sbb
pushl
cli
out
cmp
leave
aad
outsl
inc
sti
xchg
inc
add
mov
loop
xchg
and
or
repz
lcall
jmp
rclb
insb
ljmp
addl
add
dec
dec
mov
dec
mov
loop
add
and
jg
xor
push
subl
lea
push
jg
in
ljmp
fs
jmp
ja
pop
push
int3
mov
jns
mov
sub
xor
jg
pop
movsl
mov
cli
scas
sahf
cmpsl
in
pop
push
inc
loop
mov
and
call
rolb
aaa
xchg
decl
mov
mov
lock
decl
stos
pop
movl
les
movntps
mov
lret
add
incl
enter
add
and
dec
nop
fwait
addl
sub
decl
sbb
inc
loope
pushf
jmp
ret
daa
cmc
push
test
je
cmp
loop
cltd
push
jne
pop
or
shrb
fldl
dec
adcb
mov
scas
nop
test
mov
mov
mov
xor
xchg
or
xchg
push
push
mov
and
mov
inc
orb
cmp
movsb
dec
dec
leave
frstor
push
push
push
inc
push
nop
in
nop
lds
inc
xor
lods
ja
sbb
call
xchg
jnp
jp
in
fsub
enter
mov
or
adc
jg
jmp
int
dec
lods
inc
adc
or
into
sbb
inc
xor
add
xor
xlat
and
xor
lods
push
call
call
sub
dec
mov
bound
and
adc
repz
pop
mov
and
inc
dec
jg
pop
lret
push
pop
mov
test
push
nop
and
sub
adc
mov
lcall
and
mov
and
maskmovq
testl
repnz
sbb
mov
pop
imulb
int3
sub
sbb
and
or
incl
es
test
scas
dec
stos
mov
cwtl
xchg
mov
gs
xor
fisttpll
ljmp
and
and
adc
xlat
cwtl
pop
inc
push
cmp
enter
xor
clc
mov
lea
pop
cs
sub
cwtl
aam
xchg
incl
push
and
push
inc
adc
xor
fmull
jecxz
adc
add
into
nop
mov
sbb
mov
pop
sbb
adc
and
test
lcall
scas
add
test
and
les
cmpsl
data16
and
decl
imul
mov
or
xor
cwtl
and
adc
inc
jmp
call
adc
shrb
inc
out
enter
jnp
pop
sub
ja
push
adc
mov
and
pushl
sub
add
and
push
adc
add
stos
push
adc
in
jmp
push
roll
addr16
fistpl
add
cltd
dec
jae
int3
or
out
inc
dec
and
and
mov
adc
ret
dec
or
mov
xor
and
lds
inc
js
jmp
inc
sbb
mov
insb
inc
or
mov
xlat
xor
insb
mov
xchg
loop
fildl
mov
stc
cmp
or
mov
and
and
xchg
stos
xchg
jg
jo
adc
xchg
and
mov
test
inc
xchg
rcrb
mov
sbbb
lea
jo
mov
mov
stos
fistpl
andl
ret
sahf
adc
push
in
icebp
push
jo
dec
shrl
xor
xor
adc
sarb
popf
imul
jg
test
adc
push
stos
push
xchg
xor
rorl
daa
imul
clc
lcall
push
data16
push
ret
add
or
xor
inc
jmp
out
loop
dec
adcl
sbb
sbb
les
js
ret
icebp
xchg
pop
es
inc
or
jns
inc
dec
and
adc
add
bound
dec
pusha
inc
test
inc
jp
mov
ljmp
mov
add
adc
sub
scas
rol
sarb
jecxz
sti
mov
movsl
lods
or
jmp
popf
mov
push
push
cmpsb
add
ds
mov
mov
int3
pop
push
jl
mov
decl
mov
shl
test
and
fmuls
mov
sub
mov
cld
jmp
mov
scas
outsl
aas
cmpsb
insl
xor
fisubl
call
pop
adc
mov
sarb
add
push
add
and
loop
inc
shrl
adc
loop
cmp
movsl
out
adc
nop
adc
sub
xchg
ret
test
dec
pop
inc
sub
shl
xchg
rsqrtps
push
or
cli
orl
insb
call
shrb
add
mov
cmp
xorl
stos
jg
lcall
push
xor
cmp
iret
ds
daa
push
add
cwtl
jno
or
or
push
add
add
inc
sub
push
push
mov
cmp
lds
xchg
lahf
sub
nop
add
iret
push
stos
fs
push
or
hlt
mov
mov
xor
sar
cwtl
mov
push
insb
adc
ja
enter
gs
jmp
cmp
jmp
loopne
mov
sbb
inc
mov
arpl
sbb
lahf
push
imul
or
dec
sub
rorb
xor
jno
ret
sub
call
pop
shr
mov
xor
xchg
inc
dec
adc
repnz
ror
bound
add
add
sbb
add
and
xchg
mov
sarb
scas
ds
mov
js
mov
mov
adc
push
sbb
rolb
lret
test
notl
sub
and
shrl
push
sahf
pushf
sub
dec
cmp
sub
xchg
xor
pop
mov
and
push
mov
dec
push
insl
xchg
xchg
xchg
push
mov
xor
push
std
xor
adc
xchg
xor
cmp
addb
xor
push
inc
xchg
aad
aas
shrb
cmp
das
cmpsl
call
jmp
add
add
ljmp
ljmp
lock
mov
dec
push
sbbb
cmp
fldcw
out
mov
lcall
xchg
mov
fadds
stos
and
dec
sqrtps
and
jmp
inc
cwtl
mov
cmp
fwait
push
add
xor
out
scas
push
mov
adc
call
insb
xchg
sub
loop
xchg
push
rolb
aas
test
insl
outsl
lcall
fldcw
dec
lret
ret
jl
sub
dec
cmc
adc
pop
aad
loop
lcall
mov
fnstcw
cli
cmpsb
movsl
cwtl
scas
rorb
xchg
adc
sub
dec
test
call
aad
inc
in
inc
loop
insl
orb
lcall
sub
cmp
je
cs
sub
insl
sub
in
xor
sbb
push
add
and
sub
pop
add
push
push
jecxz
leave
outsb
mov
scas
shr
aas
inc
rorl
sbb
xchg
or
mov
cmp
lcall
fisttpll
or
push
xor
ret
cli
xchg
mov
test
lcall
mov
aam
adc
jb
lret
sub
fbld
in
pop
xchg
iret
stos
lds
sub
repz
add
and
jmp
and
invd
mov
test
inc
adc
lods
push
sub
jno
clc
fisttps
hlt
inc
decl
mov
push
sahf
cltd
fs
cmpb
out
sbb
inc
mov
dec
mov
in
push
xor
push
bound
push
call
mov
inc
insb
bound
cmp
dec
pop
or
icebp
mov
mov
push
icebp
push
hlt
sbb
sbb
arpl
in
mov
inc
incl
push
add
or
rcrl
adc
sbb
push
movb
ljmp
clc
jmp
jl
cmpsb
pop
or
mov
adc
mov
mov
call
mov
ds
mov
and
je
mov
lock
shll
cmp
dec
bnd
add
pushl
shl
out
mov
adc
and
jle
iret
mov
test
adc
jmp
and
mov
cltd
pop
movsb
push
repnz
cmp
fs
push
inc
lcall
dec
and
fildll
jo
roll
nop
das
lahf
js
and
loopne
xchg
ljmp
sbb
adc
shlb
xchg
dec
push
das
out
mov
ficoml
or
jae
decl
inc
pop
pushf
sbb
repnz
pop
add
sbb
data16
dec
add
lret
lahf
xchg
inc
decl
fidivrs
movsb
fwait
lahf
cmp
mov
mov
lcall
js
sub
sbb
inc
inc
sub
stc
adc
mov
cmp
gs
aas
cmp
dec
inc
add
xchg
popf
popf
add
inc
pop
add
fists
out
add
imul
scas
add
push
add
mov
mov
or
inc
dec
xor
sub
int
mov
xor
xor
sbb
add
test
jg
incl
sbb
add
cmc
addb
adc
add
mov
pop
and
or
cmp
pop
popa
mov
pushl
or
mov
lahf
insb
or
dec
and
cmp
orl
out
subl
xchg
test
test
in
cltd
push
cmovle
scas
mov
test
cwtl
enter
mov
dec
inc
or
adc
fwait
cmpsb
sbb
cli
outsb
inc
scas
fadd
rcll
cmp
movsb
roll
xchg
sbb
add
sbb
cld
mov
adc
movsb
inc
jnp
ss
leave
negl
and
aam
loop
inc
push
cld
call
mov
outsl
ret
or
popa
mov
imul
mov
add
jl
or
dec
fs
sar
adc
push
cmp
test
outsl
xor
mov
cwtl
cmp
adc
aam
addr16
lds
xchg
insb
mov
call
mov
orb
mov
in
and
je
sub
clc
je
jl
dec
bound
push
call
jp
mov
inc
pop
adc
mulb
in
jmp
add
out
inc
inc
outsb
addr16
loopne
or
cmp
pop
test
cmp
push
orb
push
cs
or
incl
mov
inc
adc
xchg
add
subb
push
mov
xchg
xor
mov
sete
mov
sbb
cmpsb
push
inc
xor
jns
xchg
mov
orb
sbb
dec
jg
jecxz
pop
enter
in
xchg
pop
push
in
pushf
lea
add
mov
push
adc
shlb
gs
push
sbbb
and
pushf
lcall
jo
mov
add
dec
arpl
dec
jno
enter
cld
push
dec
push
add
adc
add
sub
and
sarb
mov
subb
aas
mov
inc
push
mov
xor
inc
loopne
addr16
add
les
test
pop
fadds
pushl
adc
xor
ficomps
xchg
inc
repnz
outsb
inc
push
rcll
pop
ds
mov
mov
push
sbbb
xor
mov
mov
bound
in
push
pushl
pop
xchg
aam
mov
test
cmp
pushf
push
lret
sbb
loop
ret
and
jecxz
jl
jecxz
pop
pop
sahf
js
pop
jl
jl
icebp
cmp
and
test
movq
jl
jl
pop
mov
jge
add
clc
adc
enter
dec
mov
mov
and
out
pop
inc
cwtl
sub
and
mov
loop
and
decl
sysenter
es
jl
bound
jmp
cwtl
dec
add
movsb
icebp
adc
loopne
shl
push
and
jl
icebp
add
je
clc
and
push
pop
xor
pushl
ja
bound
or
test
dec
jecxz
cli
xor
outsb
jnp
icebp
pop
mov
jg
enter
mov
xchg
inc
jae
imul
pop
jb
ds
mov
xor
arpl
cltd
or
mov
cmp
and
lret
lods
pop
pop
push
lcall
pop
cs
push
pop
in
lods
clc
jecxz
jne,pt
movsl
xlat
mov
lock
mov
fidivrl
add
loop
or
int
cmp
pop
out
mov
sbb
xchg
inc
mov
xchg
clc
push
ds
jl
clc
outsb
lods
ds
movsl
mov
mov
mov
ljmp
sarb
test
pop
lcall
ds
clc
in
addr16
in
scas
cmpsl
icebp
cmc
in
jle
popa
ds
jecxz
fnstsw
pop
inc
pop
jns
bound
dec
push
add
clc
das
xchg
push
cmpsl
dec
mov
dec
pop
xor
push
adc
lea
mov
bnd
adc
loope
clc
in
mov
push
jl
lcall
mov
jmp
and
pop
sub
pusha
jbe
pmaxsw
push
ret
test
icebp
jo
lret
jl
jl
lods
jecxz
icebp
adc
push
push
jmp
pop
test
jl
mov
jne
les
mov
jl
lock
ljmp
and
clc
test
jg
jp
sbb
sub
push
pop
loopne
les
adc
dec
jl
repnz
cmc
movsl
jne
jae
xchg
ljmp
mov
imul
xor
mov
in
aaa
inc
out
mov
incl
push
pusha
push
sub
cli
lret
xchg
xor
add
or
sbb
inc
cli
pop
std
jmp
test
jmp
fdivs
mov
inc
jb
lock
stc
incl
nop
bound
add
lods
test
nop
sub
xor
call
pop
repnz
jne
mov
cmp
out
add
mov
mov
mov
mov
mov
sbb
push
sub
mov
sbb
ret
out
push
mov
mov
cmp
es
lcall
cs
inc
or
xchg
mov
pop
add
push
xchg
dec
outsb
push
in
daa
mov
scas
out
inc
adc
insb
pop
pop
jmp
mov
xor
icebp
mov
mov
add
sar
out
clc
pop
or
pop
enter
push
mov
out
jns
gs
pop
mov
push
push
jge
inc
jmp
pop
jl
ja
test
adc
add
or
test
clc
decl
xchg
out
mov
push
mov
and
and
push
or
ljmp
popa
cs
test
sbbl
ljmp
mov
push
add
into
fidivrl
ds
stc
sbb
es
xor
decl
xor
or
mov
or
es
das
adc
add
std
xchg
int3
jle
dec
cmp
fxch
fbstp
addl
in
push
stc
leave
push
or
in
and
std
dec
xor
ret
jmp
gs
pop
and
test
shl
inc
ror
push
cs
adc
and
xchg
addr16
ljmp
test
dec
jl
xor
lds
inc
cmp
lock
or
into
push
decl
sbb
movsb
jne
test
das
dec
mov
fistps
push
sti
cmp
mov
dec
leave
scas
sahf
pushl
cld
push
insl
mov
imul
xor
into
xor
xor
pusha
lcall
push
mov
arpl
mov
lcall
test
es
cmp
jmp
sub
and
fistpll
adc
out
mov
inc
mov
incb
jo
fs
and
test
test
cld
jle
dec
andl
inc
sbb
clc
decl
les
out
jb
rclb
or
pop
stc
add
xchg
in
inc
sub
lcall
cmp
pusha
rcrb
ljmp
jl
mov
nop
mov
dec
pusha
jg
dec
das
cli
mov
and
and
push
fptan
jne
push
imul
sub
adc
rcl
fs
ret
sbb
mov
and
add
pushl
std
mov
inc
pushf
xor
xchg
lods
ret
add
aaa
outsl
.byte
clc
.byte
lcall
sub
jl
add
push
fimuls
pop
fs
aad
pop
pop
leave
ret
pop
add
pop
pop
jle
out
in
pop
ret
inc
adc
adc
and
dec
pop
pop
jne
out
xlat
or
ret
xor
and
nop
mov
and
mov
dec
inc
ljmp
and
inc
adc
and
adc
inc
and
pop
stc
lahf
notb
or
and
mov
add
iret
testb
and
dec
and
inc
cmpb
nop
inc
pop
adc
cmp
mov
stc
into
insb
push
inc
inc
push
cmpsl
nop
rclb
or
lods
mov
cwtl
cltd
fldenv
dec
sbb
dec
pop
mov
in
and
inc
and
inc
add
fwait
jge
and
and
cmp
insb
shl
and
ss
inc
pop
nop
test
inc
dec
push
cmpsl
sub
movsb
mov
nop
dec
test
or
pop
push
mov
stos
pusha
add
and
cmpb
mov
and
adc
and
ror
dec
inc
xchg
cmp
test
fisubl
test
dec
inc
mov
add
mov
add
mov
or
xor
imul
adc
cltd
shrl
cmp
pusha
or
lock
aad
data16
inc
or
and
adc
in
adc
jg
mov
mov
and
nop
inc
inc
adcb
adc
and
fistpll
inc
add
dec
mov
dec
add
es
cmp
mov
add
and
dec
mov
add
xor
inc
adc
ds
xor
lcall
and
adc
adc
orb
insl
mov
fisubl
and
pop
addb
nop
adc
and
data16
notb
inc
inc
mov
inc
rclb
adc
bound
pop
mov
xchg
fmuls
movsb
adc
and
inc
adc
adc
add
cmpb
add
and
outsl
add
add
cmp
cmpb
and
nop
data16
mov
mov
insb
out
push
cmpsb
jb
call
add
jb
adc
inc
inc
adc
or
or
insb
and
js
ret
add
inc
xor
push
adc
jl
stos
rolb
push
pusha
jp
inc
adc
and
add
dec
xor
je
stos
dec
out
and
xlat
add
dec
and
xchg
or
and
and
xchg
cmp
pop
shr
lock
adc
inc
mov
nop
adc
adc
inc
and
cmp
inc
test
or
adcb
xor
push
jb
popa
push
xchg
js
sbb
adc
fwait
mov
xor
mov
dec
addl
dec
shrb
sarl
scas
sbb
xorl
push
dec
cld
or
mov
jl
in
cli
enter
or
call
clc
dec
loopne
jbe
pop
and
cs
fcompl
loopne
movsb
inc
pop
sbb
xor
sub
cmp
int3
lods
sub
push
js
inc
lock
inc
pusha
pop
mov
int3
outsb
adc
adc
jb
xor
cmp
cmp
sbb
xor
push
es
jl
and
sbb
stos
mov
xor
push
pop
inc
xor
mov
add
add
sbb
lcall
and
ret
add
pusha
and
cmp
test
out
xor
push
mov
subb
pop
stc
pop
push
mov
add
movl
inc
add
jne
mov
xchg
inc
add
out
sahf
cmpsl
xchg
stos
adc
jge
jg
sti
out
xlat
outsb
dec
xor
rorl
sbb
dec
or
fadds
pop
fldcw
add
mov
cltd
ss
jbe
divl
mov
ja
loope
je
cmp
lods
inc
cmp
add
decw
xor
mov
mov
shrl
out
jg
pop
xor
ljmp
mov
sbb
mov
sbb
jmp
lret
push
es
add
pop
into
call
cmp
out
sahf
lods
pop
add
push
xor
rorl
loopne
pop
call
inc
adc
out
cs
in
or
mov
cmp
mov
xorl
inc
pop
in
sbb
fcoml
scas
jle
xor
add
xlat
int
in
xor
lret
mov
addl
mov
xchg
cld
pop
dec
mov
andb
jge
das
mov
cmpb
sub
adc
push
divb
cwtl
push
sub
pop
daa
cmp
xor
pop
add
call
sahf
cmp
inc
add
sbb
rcrl
repnz
lods
icebp
or
and
push
sahf
stc
add
in
mov
lret
adcl
or
je
mov
sbb
adc
les
dec
mov
fld
mov
add
mov
cli
out
and
dec
adc
cmpsl
or
sti
enter
cli
pushl
push
hlt
push
call
xchg
data16
rorb
insb
or
adc
xchg
dec
sbb
sbb
inc
dec
sbb
addr16
ja
and
pop
cmp
fdivl
lahf
mov
call
sahf
lock
int3
sub
add
cmp
lods
inc
xchg
pop
or
je
mov
fidivl
add
dec
not
fisttps
cmp
ss
sub
pop
push
add
jg
mov
clc
call
jb
sub
out
adc
cmpsl
or
add
mov
inc
sbb
rcrb
xchg
das
imul
jno
and
pop
cmp
movsl
testl
add
fs
inc
popa
xor
xor
jle
pop
flds
fs
aaa
movsb
js
cmp
and
xor
hlt
cltd
sub
add
xlat
or
pop
and
enter
lret
jmp
push
inc
add
xchg
in
push
sub
sbb
inc
xor
movl
not
neg
add
insb
inc
aas
adc
cmp
cmpsl
loope
mov
fldenv
repnz
mov
lret
rorb
push
lcall
pop
add
roll
add
out
into
or
xor
aam
dec
clc
push
lea
push
lock
mov
call
hlt
es
push
push
clc
pop
push
dec
add
fcmovne
scas
push
push
xor
mov
sub
fildl
in
adc
das
mov
lcall
call
repz
jl
neg
inc
ret
jge
dec
aam
pusha
add
shrl
sub
bound
scas
daa
adc
adc
mov
xchg
inc
fimuls
flds
rclb
mov
std
xor
add
and
add
lock
jmp
repz
or
inc
xchg
js
sbb
xor
repz
mov
add
ds
mov
mov
inc
jno
cli
mov
cs
sub
call
into
subb
lahf
inc
cmpsl
div
mov
das
fs
hlt
xor
fwait
sbb
mov
pop
xor
inc
add
pop
cmc
out
inc
xor
mov
neg
popf
ds
inc
adc
adc
xor
pop
inc
aaa
or
movsl
sbb
loopne
popf
mov
pop
cmova
adc
mov
es
ss
mov
sub
aaa
neg
mulb
xor
push
and
pop
adc
add
cpuid
rorb
daa
test
in
into
jbe
popl
push
adc
sub
insb
cmp
mov
push
addr16
insb
xchg
es
jb
mov
pop
and
jmp
jns
ror
pop
pop
xor
push
xor
clc
mov
inc
sbb
neg
mov
sbb
test
mov
sub
shrl
pop
imul
pop
fdivl
sbb
scas
adc
cli
addl
jae
insl
ret
dec
ret
and
sbb
jb
fistpl
jo
jge
lea
inc
inc
addr16
and
mov
mov
xchg
and
xadd
shll
sbb
je
or
sub
sub
subl
addl
ffree
testl
add
push
pop
outsl
clc
es
dec
xor
sbb
in
mov
outsl
lea
add
fiaddl
leave
sub
ja
std
add
jmp
mov
inc
enter
xchg
frstor
hlt
adc
enter
pop
dec
mov
lcall
lods
lock
divb
inc
mov
ficomps
icebp
int
add
inc
jmp
and
inc
adc
xor
rclb
adcb
iret
stos
sbb
out
or
test
add
push
sbb
inc
jno
es
insb
jg
pop
pop
movsl
jge
add
jne
daa
popf
jo
adc
inc
je
push
cmp
push
inc
call
adc
or
or
inc
cmp
push
insl
push
cmp
jmp
mov
test
push
test
sbbb
add
pop
testb
jle
mov
sarb
pshufw
or
dec
cli
push
icebp
int3
add
outsb
rolb
inc
inc
xor
and
cmp
mov
pop
inc
std
rolb
data16
loop
or
push
mov
js
xlat
ljmp
test
push
fiaddl
add
fmuls
pop
push
adcb
insl
jmp
pop
or
call
testb
clc
xchg
subb
sbb
inc
jns
ret
scas
bound
fmuls
xchg
xor
add
xor
mov
mov
adc
test
and
ror
xchg
shlb
mov
cmpsl
jge
fbstp
stos
out
or
and
fistl
jns
add
imul
jg
add
js
loop
jne
gs
mov
xor
push
sbb
rcrb
mov
sub
pop
or
add
lods
mov
mov
scas
addr16
xor
push
fsubrp
cs
mov
adc
fisttpll
aad
and
sub
dec
test
test
out
dec
mov
jnp
fldt
rcrl
mov
mov
xchg
dec
jbe
scas
jp
fmull
or
mov
inc
gs
rcrb
inc
add
dec
testb
cmp
xchg
jmp
clc
cmp
jbe
pop
enter
stos
out
adc
adc
jge
iret
jne
in
fadds
sbb
mov
pop
lods
mov
mov
mov
xchg
outsl
add
xor
sbb
loope
cli
loop
cmp
roll
jge
dec
sahf
int
mov
inc
jmp
shrd
pop
lcall
aad
jnp
out
dec
lret
fsubl
ret
lret
shlb
movsb
push
push
fdiv
scas
xchg
sub
jp
and
nop
aaa
mov
jmp
test
mov
neg
jl
pop
dec
xor
add
shlb
mov
push
gs
aaa
int3
add
daa
sbb
xchg
dec
enter
fisubs
repz
adc
pop
aaa
xor
call
js
adc
or
das
push
out
mulb
call
aam
fs
sti
push
xchg
mov
fsub
enter
push
call
pop
flds
mov
test
adc
js
jg
in
cmp
bound
imul
andb
lcall
insb
add
mull
sbb
pop
clc
mov
xor
mov
aaa
xchg
stos
in
adc
add
mov
popf
jp
pop
sbb
inc
inc
sarl
out
fs
int3
cmp
add
repz
fcompl
sbb
sub
sbb
add
or
xchg
divb
jp
inc
dec
push
add
in
fiaddl
jno
fwait
sub
add
adc
test
popa
xor
nop
in
in
add
loopne
jl
sub
notb
sub
aam
pushf
imul
jbe
imull
lcall
mov
out
test
out
dec
out
lods
int3
jge
gs
inc
cmp
mov
fidivl
out
popa
mov
int
cmp
sbb
xchg
sub
jnp
sbb
scas
shll
inc
mov
std
out
add
add
cld
js
jb
xchg
mov
ret
xchg
enter
cltd
add
pop
ss
in
mov
pop
jl
loop
adc
sti
mov
fiaddl
mov
aam
cmc
cmp
xchg
stos
std
push
adc
pop
jl
mov
mull
dec
pop
add
cmp
sbb
xor
adc
inc
stos
xchg
adc
xor
add
aam
decb
or
cld
mov
jge
shll
sub
shlb
je
mov
push
jge
int
sbb
ja
cs
push
jg
adc
mov
sahf
loopne
push
scas
push
insl
notl
xchg
dec
in
lea
and
ds
push
push
add
and
std
cmp
and
lret
daa
sti
scas
out
outsb
sub
and
and
or
cmc
popf
or
in
add
aad
dec
jecxz
sub
shr
push
ljmp
jae
mov
out
push
mov
inc
mov
dec
loopne
cli
pop
subl
mov
adc
filds
jmp
cmp
push
jl
dec
jbe
pusha
jo
pop
in
stc
cltd
xchg
nop
inc
out
mov
in
sub
loope
cmp
adc
and
cs
inc
pop
testb
ds
sub
inc
aam
sahf
jo
jmp
icebp
dec
test
inc
or
add
mov
rorb
rcl
xchg
loopne
push
push
aam
and
std
xor
or
sbb
std
pop
fwait
mov
sub
filds
xlat
and
adc
outsb
jb
xor
xor
cmp
dec
cwtl
cmp
dec
inc
aaa
cwtl
jmp
cld
ja
jb
loope
sahf
sbb
icebp
add
iret
cmpsb
jmp
mov
repz
loop
je
inc
mov
adc
xor
pop
sti
push
pushl
lea
or
push
call
dec
adc
packssdw
add
jp
loope
fsubl
incb
cmp
ds
jbe
push
xchg
add
pop
enter
xor
scas
divb
adc
call
sbb
jp
sarl
mov
add
call
sub
cltd
mov
lods
and
orb
mov
xor
sti
cmp
cli
enter
and
cli
sbb
out
inc
and
ljmp
aad
jp
les
sbb
xchg
incb
stos
mov
into
orl
cmp
jmp
xor
loopne
clc
sub
dec
clc
add
adc
mov
mov
mov
push
enter
xchg
add
outsb
shlb
sub
xor
and
xor
add
adc
cmp
add
cmpsl
std
cmp
inc
stos
xor
push
cmp
sbbb
jb
jnp
insl
in
xchg
out
sbb
and
jno
sbb
iret
gs
cmp
enter
adc
outsl
jns
push
ret
xchg
push
nop
cmpsl
xor
ret
test
fs
mov
xor
mov
or
mov
jnp
sub
sub
xchg
les
pusha
xchg
in
mov
mov
push
or
sub
ljmp
jmp
add
push
mov
ret
xchg
or
aam
cs
adc
cmp
mov
inc
push
sbb
xor
rcrb
sub
fldenv
je
out
lret
ja
movsb
fisubrs
cli
out
inc
pop
jg
clc
call
mov
ret
jo
add
jne
out
xor
add
xor
mov
outsl
jb
pop
fcoml
push
fdivl
push
sbb
movl
es
sti
add
cld
cmpsl
mov
jnp
jmp
mov
or
cmp
sbb
in
cli
sub
and
arpl
std
jg
xor
and
in
mov
mov
push
cmc
sbb
cmp
in
cmp
mov
jge
push
jae
pop
loopne
aas
call
jmp
clc
aaa
or
adcl
adc
and
fbld
subb
mov
mov
xchg
xor
popf
xor
pop
pop
movsl
out
wrmsr
jmp
inc
xchg
push
daa
cmp
mov
mov
sahf
xchg
push
in
incl
push
and
adc
dec
test
adc
adc
mov
jp
sbb
lods
sub
cmp
push
shlb
and
add
mov
data16
and
cmp
adc
lcall
xchg
xorl
mov
xchg
push
andb
aad
sqrtps
pop
ljmp
cmpl
enter
leave
mov
fisttpl
dec
inc
xor
out
dec
xlat
xor
inc
jne
cmpsb
adc
or
fucompp
cmpsb
movsb
push
addb
mov
loope
inc
ljmp
sub
fcmovnbe
dec
nop
inc
test
push
call
adc
pop
xchg
adc
lods
push
in
cmc
xor
popf
sbb
mov
leave
stos
xchg
inc
dec
dec
mov
into
and
add
fnstsw
sbb
movsb
pop
test
repnz
jle
orb
shll
xor
pop
xchg
mov
or
in
inc
fidivl
or
add
mov
outsl
add
lret
or
dec
mov
push
inc
loope
fiaddl
clc
out
test
nop
xlat
js
mov
ljmp
mov
mov
clc
mov
dec
lock
sub
inc
loopne
adc
sti
lret
flds
ret
xchg
lock
fs
xchg
lret
pop
add
loopne
aam
cmp
loope
adc
ds
jl,pt
je
cmp
adc
loopne
js
shll
add
jmp
mov
mov
sub
decb
jno
jmp
shlb
and
cltd
and
mov
enter
lods
js
or
pop
dec
sbb
sti
mov
loope
push
rol
mov
cmp
add
fs
and
lds
fcomps
sbb
or
mov
or
mov
mov
cmp
hlt
ss
out
pop
add
std
lods
aam
xlat
xor
stos
pusha
pop
loopne
dec
xor
push
push
sub
add
and
pop
pop
fisubs
lock
ljmp
int3
adc
jo
fcomip
lods
jl
xlat
inc
movhps
das
nop
inc
in
incl
dec
mov
in
fisubl
aam
or
fs
ds
or
in
mov
das
cmpb
or
data16
add
adc
cwtl
add
push
rolb
mov
xor
pop
mull
sbb
cs
cwtl
mov
push
jl
add
in
les
and
push
mov
dec
repz
clc
jecxz
repnz
repnz
mov
pop
subb
pop
pop
in
or
fwait
inc
cmp
fisttps
repz
dec
filds
enter
and
or
cmp
jns
dec
cs
fadds
stc
sti
mov
lock
or
push
mov
stc
adc
xchg
sub
dec
sarb
addr16
add
xor
xor
cmp
dec
lret
pushl
cmpsl
push
sahf
in
orb
data16
fdiv
jle,pt
div
pop
jo
pop
or
iret
xchg
loopne
xor
add
xchg
xor
mov
nop
loopne
mov
add
outsb
js
lock
xor
mov
and
in
cmp
daa
xor
clc
sub
add
call
jg
test
imul
xlat
mov
aas
adc
add
addr16
dec
daa
xor
sub
decl
adc
dec
adc
jmp
add
test
xor
sbb
nop
stos
or
cmpsl
dec
setae
jae
or
adc
mov
xchg
pop
jl
imul
je
cmp
xlat
adc
add
inc
ds
jecxz
inc
inc
push
rclb
push
or
fistpl
pushf
inc
shlb
sbb
aaa
lret
fsubrs
inc
dec
dec
pop
mov
shll
loopne
jnp
daa
mov
jmp
xor
xor
add
or
inc
test
adc
or
cs
pushl
push
js
lock
sbb
push
movsl
andl
addb
mov
push
push
sbb
cmpsl
loope
sbb
orb
nop
lds
adc
sbb
or
inc
add
dec
lock
sbb
test
add
lock
jnp
xchg
cmp
xchg
mov
pop
pop
pop
test
xchg
dec
test
add
lds
dec
jnp
enter
leave
clc
cmc
add
and
inc
add
pop
or
lock
adc
movb
add
or
std
add
das
pop
ss
push
leave
inc
or
add
loopne
add
adc
repz
mov
jbe
imul
adc
aas
adc
xlat
mov
fildll
es
and
lcall
and
add
or
cld
dec
fldenv
cld
cmpsb
dec
rorb
addb
or
dec
fdiv
xchg
push
mov
mov
loopne
add
dec
dec
jnp
loopne
xchg
dec
sbb
and
popa
add
neg
int3
or
adc
es
sub
ret
adc
sub
ja
sbb
and
pop
lock
adcb
dec
jmp
jo
andb
sbb
fildll
pop
fdivrs
push
inc
dec
or
mov
ss
call
pop
or
mov
lea
and
fs
add
adc
mov
inc
push
call
pop
add
adc
cld
adc
or
in
fiaddl
sbb
push
out
sbb
inc
push
dec
cli
rorb
xor
fxch
test
sub
popa
rcr
add
cwtl
add
xor
xchg
adc
les
jne
pop
inc
dec
jge
call
fcoml
jne
push
lahf
add
sbbb
jle
lock
lods
bound
jo
push
add
adc
rolb
adc
or
sbb
xchg
add
add
jp,pt
jmp
xchg
add
push
pop
sahf
push
push
pop
loopne
call
icebp
or
adc
insl
mov
push
adc
mov
fwait
je
add
sbb
add
rolb
sbbl
nop
mov
ret
fdiv
shld
inc
adc
in
add
xor
sub
hlt
or
mov
ret
hlt
xor
pusha
mov
xor
sahf
add
or
or
and
or
lock
in
lcall
adc
hlt
test
ds
les
jle
test
sbb
data16
push
push
push
sahf
rorb
loop
fcom
hlt
sbb
mov
sub
or
add
das
cmpsl
divl
repz
sbb
mov
mov
addr16
xor
push
mov
sbb
sbb
scas
enter
scas
or
mov
cmpsb
rclb
add
shrb
insb
add
jmp
pop
pop
or
repnz
adc
fdiv
daa
mov
ror
cmp
adc
cmpl
xor
movsb
aam
incb
xchg
jge
dec
mov
div
call
jnp
sbb
mov
mov
sbb
pusha
jno
dec
jmp
lods
outsl
lock
pop
arpl
sub
push
and
xchg
pop
je
pop
or
mov
cmp
or
cmpb
or
je
ljmp
in
add
and
je
pop
std
add
mov
in
add
addb
mov
xor
push
fmul
mov
lods
mov
in
inc
push
mov
ror
add
fmul
inc
in
loopne
mov
dec
insb
lcall
dec
xor
test
adc
jno
push
cs
dec
inc
arpl
xor
jecxz
jmp
popl
xchg
out
shll
les
incl
xorb
adc
leave
push
fcompl
jne
dec
faddl
xor
rcrl
out
pop
fwait
cmp
aas
ss
cmp
jns
adc
inc
sbb
adc
fidivl
lock
inc
int3
add
push
inc
or
and
insl
cmpsl
push
daa
add
push
or
xchg
jle
xor
mulb
xor
shl
xor
jo
adc
add
xchg
sbb
sub
scas
pop
mov
inc
data16
xor
mov
lret
xchg
pop
stos
add
mov
sbb
sub
cmp
dec
imul
clc
fdivs
stos
xchg
sbb
shrl
cmp
add
loope
popa
push
dec
xchg
push
fsubrl
fmull
andl
and
xchg
mov
fnstsw
xor
ret
push
lods
adc
push
js
mov
icebp
push
sbb
mov
inc
push
pop
into
addr16
adcl
fdivs
xor
sbb
adc
inc
cmp
mov
jecxz
xchg
mov
add
lock
fstps
dec
enter
imul
sahf
cmp
jns
cmp
dec
fsubs
aad
in
mov
rcrb
mov
jne
sub
sub
int3
outsb
popa
add
adc
xchg
or
xor
fsubrl
int3
test
push
jne
cmc
push
dec
add
cmp
aad
sbb
add
sbb
pop
inc
cwtl
sahf
loopne
lcall
cmp
clc
mov
scas
pop
add
sub
bound
les
mov
rorl
popf
imul
mov
shlb
xlat
or
push
incl
cmp
sbb
add
xor
lahf
sub
xor
add
movsl
mov
cmp
outsb
mov
xchg
adc
in
add
shrl
inc
or
ret
ljmp
or
in
mov
sti
rorb
sub
loope
repz
cmpsl
les
rcll
add
in
push
mov
or
adc
pop
loopne
cmc
stos
adc
inc
fsubl
cmc
lea
sbb
push
push
call
test
out
add
push
sub
jge
or
jmp
rcrb
add
adc
movb
mov
aas
mov
ficoms
add
push
cmp
test
mov
cmc
in
fnsave
mov
or
mov
xor
icebp
adc
js
loopne
jl
insl
pop
inc
movsl
push
mov
out
mov
mov
movsb
imul
jge
dec
fistps
addl
ljmp
jp
cmp
shll
dec
add
lock
jmp
sub
ficoml
shll
ffreep
inc
addb
pop
mov
and
add
push
jecxz
pop
xchg
mov
xor
sub
cltd
das
adc
test
call
lret
adc
mov
xchg
or
push
fistpll
inc
gs
mov
pop
sub
push
mov
hlt
ret
shrb
add
filds
pop
xor
xchg
push
cld
lock
pusha
daa
and
inc
mov
push
xchg
adc
rorb
popa
jl
orl
sbb
push
jo
push
sub
mov
fcomi
pop
imul
sbb
and
ja
test
dec
aaa
nop
ljmp
push
out
push
in
mov
scas
cmp
pushf
lock
adc
pushw
lock
sbb
inc
fsubs
dec
daa
rclb
and
loopne
rolb
imul
adc
jo
sub
or
out
insl
out
add
call
pop
mov
adc
les
add
test
mov
push
and
xlat
cmp
in
inc
scas
outsl
or
stos
jbe
push
adc
dec
roll
lahf
mov
jl
nop
jae
sub
pop
xor
mov
mov
pop
or
adc
ljmp
xchg
testb
mov
clc
sub
lcall
inc
loope
cmpl
pop
push
les
je
pop
sbb
icebp
int3
or
shll
mov
insb
add
dec
cld
adc
cli
test
or
adc
add
icebp
stos
fildl
add
push
push
dec
add
pop
ja
push
push
fucom
or
test
xlat
jl
rcrl
mov
fcoms
adcb
stos
and
adc
or
sbbl
rolb
jns
pop
mov
imull
mov
push
dec
incl
adcb
out
data16
xorl
xor
dec
inc
dec
mov
push
pop
and
inc
jmp
push
adc
sbb
out
lock
leave
mov
add
push
lcall
cmp
ret
xor
and
inc
mov
or
mov
outsl
xlat
jmp
sti
enter
stos
cs
loop
enter
loopne
mov
out
je
mov
adc
iret
fiadds
jmp
dec
outsb
rolb
cs
mov
ljmp
jge
ljmp
inc
push
shr
ljmp
ljmp
lock
roll
push
add
leave
pop
jge
or
cwtl
outsl
jae
adc
les
dec
lock
add
shlb
sub
fildll
xchg
add
adc
std
outsl
or
xlat
fistpll
sbb
jmp
cli
mov
lret
or
mov
test
mov
jnp
orl
xchg
add
lds
add
or
mov
pop
xor
add
aas
add
mov
sbb
mov
push
les
push
adc
add
test
mov
dec
sbb
dec
jge
add
mov
out
add
jle
pop
icebp
hlt
adc
adc
psubw
call
mov
xor
les
sub
xchg
pop
js
sbb
dec
mov
ds
xchg
push
out
add
xor
add
pop
and
add
mov
js
cltd
cmp
mov
ss
jae
pop
sbb
mov
sbb
inc
repz
in
push
shll
push
popa
xchg
int
or
mov
and
add
xor
xchg
mov
dec
inc
and
jg
dec
sub
push
clc
jns
mov
and
stos
and
outsl
mov
call
loopne
xor
jge
sbb
pop
loopne
sub
mov
lods
dec
adc
sbb
or
mov
data16
or
or
and
or
mov
es
fwait
js
das
leave
call
mov
push
dec
loopne
icebp
xchg
in
popa
xchg
notb
inc
bound
xlat
push
jnp
pushf
dec
mov
jmp
adc
arpl
and
in
mov
popa
int3
ret
or
lret
add
cli
cld
jno
mov
lods
fcomp
add
loopne
jmp
outsb
lock
sub
loopne
pushf
mov
shl
cmp
ds
inc
add
shll
js
movsl
test
in
clc
and
ret
into
inc
enter
dec
pop
adc
jmp
add
xchg
icebp
enter
pusha
sarb
lods
jecxz
cmp
fxam
aam
scas
pop
push
stc
loopne
loopne
jg
cmp
pusha
jb
mov
jl
cli
rorl
setbe
roll
call
inc
fimull
xor
xchg
cmp
out
jp
movsl
or
sbb
inc
call
popa
inc
fsub
mov
hlt
lahf
sbb
std
imul
lods
cs
fsubrp
dec
es
sbb
pop
mov
fidivrs
add
sub
xor
call
dec
lea
arpl
sbb
out
push
pushf
lods
adc
dec
sbb
adc
lods
cmp
pop
jb
pop
popa
adc
imul
fdiv
inc
add
or
ss
lret
aam
notb
xor
imul
mov
adc
hlt
sbb
mov
adc
arpl
adc
dec
testl
insb
sarb
inc
jge
xor
sbb
mov
xlat
xchg
ljmp
inc
adc
mov
clc
sbb
jae
ret
mov
outsl
movl
mov
loop
pop
mov
loope
or
or
test
adc
roll
push
shrb
add
mov
xchg
clc
pop
lahf
test
cmp
clc
sbb
loopne
hlt
rcrl
xchg
xor
arpl
jp
pusha
push
adc
fistps
push
xor
shr
rorl
cmpsb
fstpl
xchg
pushf
dec
jecxz
and
call
pop
inc
lock
insb
mov
popa
shl
inc
icebp
cmp
mov
ds
pop
inc
sub
outsl
or
push
dec
mov
adc
or
add
or
aam
inc
aas
mov
or
cli
fsubr
xchg
and
push
daa
push
rcrl
xor
mov
sub
sbb
scas
add
lods
add
inc
add
hlt
es
cltd
arpl
jmp
adc
cmp
push
push
push
pusha
or
repz
fdiv
or
mov
add
hlt
push
ret
sbb
push
and
xlat
addb
gs
or
lock
jo
into
subl
cmp
shrl
and
inc
inc
jl
dec
or
mov
sub
pop
ret
and
cmp
jb
neg
push
mov
pop
dec
xchg
mov
mov
bound
subl
rcl
xchg
add
fwait
xchg
fsubrl
mov
lock
fistl
cmp
popa
das
lcall
int3
pop
xorb
jmp
ror
sti
cmp
sub
movsl
shrb
push
das
pop
and
inc
push
clc
cmp
inc
jbe
icebp
je
xlat
and
loop
sub
mov
lds
ret
dec
add
adc
sarb
adc
sbb
adc
fistl
adc
sbbl
loopne
xchg
shll
mov
les
jae
push
sbb
xchg
and
push
shlb
test
push
sbb
push
int
cli
out
push
and
addb
jmp
inc
js
popa
ja
xor
cmpsl
call
in
jno,pn
xchg
andb
add
mov
test
xlat
out
fsubrl
pop
add
insb
xor
rolb
dec
sti
scas
cmp
push
sub
xchg
test
xor
jl
js
cmovge
cld
cmc
push
xor
pop
inc
push
push
jle
fsubr
and
cmp
lret
add
xor
pop
add
cmp
fs
out
clc
mov
shr
ret
sahf
add
faddl
lcall
das
sub
rsqrtps
pushf
subl
movsb
xor
into
sbb
gs
xor
or
inc
add
pop
add
imul
movsl
inc
popf
mov
add
mov
mov
pop
jne
pop
and
add
xor
addl
lcall
enter
xchg
lods
adc
repz
sub
cmc
mov
andl
xor
add
mov
test
lock
pop
rclb
and
jp
mov
push
sbb
ret
xor
addr16
add
sub
or
mov
sub
ja
xor
sub
push
subb
fiaddl
or
sbb
or
sbb
push
mov
mov
add
inc
lock
jne
cld
in
rorb
clc
fbstp
cmp
mov
test
les
or
push
inc
nop
jbe
pop
or
and
jns
adc
and
mov
lods
dec
fdivs
fidivrl
stos
ljmp
dec
loope
cmp
xchg
xchg
cld
ret
mov
jmp
pop
mov
repz
sahf
cmp
mov
and
stos
fwait
arpl
sbb
dec
adc
dec
jb
xchg
sbb
sbb
lods
inc
lret
sub
sub
mov
jmp
sub
sbb
pop
cmp
push
lahf
ss
cmp
shr
lods
fadd
movsl
or
cli
out
call
shlb
jmp
rorl
loopne
adc
cld
cld
jmp
pop
sbb
pop
je
push
loope
pop
jmp
sarb
call
adc
push
jno
dec
xlat
jge
fsubrs
loopne
test
xchg
xchg
popf
repnz
loopne
xor
popf
cmpsb
add
and
xor
jecxz
fmuls
and
sub
pop
subb
or
add
das
jle
negl
inc
mov
pop
xadd
or
pop
call
iret
fsub
dec
or
sbb
ret
popa
stos
out
jb
lods
push
loop
fbstp
mov
mov
ret
pop
add
dec
aam
xor
test
xor
mov
pop
push
call
add
sbbb
sub
test
stos
push
inc
sub
in
add
push
call
js
or
cmp
aad
push
mov
add
scas
push
pop
sbb
cld
inc
ja
push
pop
pop
idivb
xor
inc
adc
jbe
inc
jecxz
outsl
or
ds
jp
mull
adc
imulb
pop
add
dec
test
in
dec
adc
fstpt
fdivp
or
lret
inc
jmp
push
mov
pop
adc
xor
ret
test
jmp
or
ret
and
push
xchg
sbb
jmp
inc
add
neg
pop
inc
sbb
add
inc
jo
jp,pt
lock
jmp
pop
jo
decb
inc
mov
inc
insb
ss
daa
insl
push
cli
adc
mov
test
lret
push
and
aam
add
jmp
mov
cmpsl
popa
ljmp
aaa
xor
repz
negl
movsl
xchg
sarb
inc
daa
pop
add
pop
cld
mov
jl
fisubrs
adc
xlat
pusha
fwait
adc
testl
sbb
movsb
clc
dec
xor
loope
pushf
jge
out
inc
mov
clc
sbb
cs
sub
xor
jnp
ret
xor
add
lahf
pop
inc
hlt
outsl
jecxz
cmpsb
stos
inc
pusha
orl
mov
dec
sbb
fdivrs
add
rclb
aad
sub
add
sub
int
shl
push
jmp
add
mov
xchg
lock
push
add
mov
pop
mov
or
inc
imul
push
lods
inc
pop
adcb
test
add
lds
xchg
xor
rcl
adc
add
and
adc
fmuls
adc
adc
jle
push
xchg
jbe
out
stos
aam
push
inc
mov
arpl
imul
and
mov
sbb
jmp
addb
test
fists
flds
hlt
test
or
rorb
hlt
push
test
push
xor
sbb
mov
das
inc
xchg
add
inc
sbb
jae
sub
sub
add
lcall
dec
sbb
sar
sahf
adc
roll
add
xchg
inc
pop
lret
cltd
sbb
and
mov
shl
mov
sbb
jmp
mov
jl
mov
mov
add
adc
adc
fadds
frstor
xorb
js
jo
ds
adc
imul
sbb
push
aam
mov
sahf
iret
ljmp
mov
add
jo
roll
das
add
adc
clc
mov
jmp
clc
int3
lock
xlat
sub
or
aas
adc
fcmovnu
pop
stc
mov
or
adc
push
ror
sub
scas
shr
icebp
stc
or
inc
ljmp
clc
cmpsl
mov
mov
cmp
inc
cmpsl
ljmp
fsubr
push
mul
jae
mov
adc
in
test
jo
outsb
outsb
cltd
dec
jb
sbb
loope
cli
cmpsl
or
addr16
rclb
ret
imul
out
sbb
pop
sbb
lock
pop
push
add
rcr
mov
push
icebp
push
push
shll
punpcklbw
pusha
or
in
push
or
sbb
add
add
pop
out
add
aam
mov
gs
jb
and
imul
mov
shll
aas
pop
lret
push
pop
dec
daa
ret
ja
xlat
sbb
test
imul
imul
daa
fidivl
gs
mov
into
mov
stos
cmp
lcall
sub
rcrl
test
mov
jno
sbb
xor
or
or
push
fildl
lcall
sbb
jge
fidivs
xor
or
sub
insl
pop
fimuls
push
dec
adc
mul
jo
sbb
mov
jle
inc
mov
shll
test
mov
les
mov
icebp
sbb
in
jmp
in
push
dec
sub
in
adc
pop
ds
aaa
push
jo
and
push
mov
inc
in
add
outsl
call
or
dec
adc
mov
js
adc
and
or
out
adc
push
sbbb
add
adc
faddl
sbb
adcl
cmp
dec
insb
mov
loopne
or
int3
test
dec
sub
sbb
mov
jno
xchg
cmp
jmp
mov
bound
aaa
sub
xchg
add
inc
es
cmp
cs
push
adc
cmpsb
call
push
je
sbb
roll
popf
into
jo
clc
andb
adc
xchg
push
sbb
push
dec
pusha
sti
addr16
fwait
cltd
add
inc
sub
adc
add
cmp
jbe
xchg
loop
cs
mov
enter
cmp
push
and
cmp
push
or
xor
mov
and
loope
mov
loopne
mov
xchg
cmpsb
js
bound
push
xor
jb
int3
add
pop
js
inc
popa
xchg
ret
lock
inc
aaa
add
out
mov
add
std
mov
pop
push
xchg
jle
sbb
mulb
bnd
cltd
jmp
cli
jnp
jb
pop
in
push
call
xchg
loopne
xchg
decb
cmp
dec
stos
xor
mov
xchg
fcompl
inc
add
in
add
dec
jns
pop
adc
cmp
add
fbstp
daa
scas
xchg
xor
mov
sbb
mov
or
test
in
lcall
loope
or
inc
outsl
push
push
enter
int3
cmpsl
inc
sub
sub
movsb
sbb
jne
mov
cmp
inc
mov
add
add
mov
add
loopne
mov
int3
mov
aas
sub
es
sub
jmp
sbb
loopne
mov
xlat
inc
lahf
movsb
inc
std
or
pusha
lahf
push
out
inc
fstpt
xor
stc
outsb
lea
dec
jp
add
adc
loope
or
repz
cmp
in
scas
or
aad
jbe
pop
sub
mov
xchg
ret
sbb
aam
jecxz
fcomip
aam
mov
lock
andl
out
pusha
push
in
fstl
xchg
cmp
mov
movsl
hlt
adc
sti
shlb
inc
sbb
or
lahf
les
loope
dec
xchg
icebp
mov
js
sub
loopne
xor
sti
and
inc
hlt
xor
cwtl
test
pop
shr
sub
inc
mov
mov
aaa
test
subb
xor
inc
adc
jb
int
adc
hlt
movsb
scas
xor
cmp
sbb
xchg
stos
xor
sbb
test
or
cmp
dec
movsb
js
les
adc
inc
jecxz
and
xor
jno
loopne
ss
xlat
cmp
outsb
push
daa
ret
ret
and
mov
mov
and
popl
or
xorl
cmpl
lcall
lods
pop
mov
jbe
pop
andb
iret
push
ret
cmp
test
or
and
jmp
cmpsb
mov
lea
and
lds
inc
jmp
jg
and
loopne
mov
sub
adc
inc
jo
mov
mov
fwait
push
cwtl
sbb
std
inc
cld
push
jb
adc
push
aam
cmp
cmp
int
out
leave
test
ljmp
push
leave
lock
or
mov
push
jmp
cmp
jae
jg
push
xchg
mov
enter
cli
jge
outsl
jne
add
pop
push
inc
push
or
and
cli
add
add
cmp
add
out
sar
loopne
sbb
sub
fwait
outsb
cli
or
xor
daa
jne
stos
aam
adc
scas
push
or
jo
inc
lock
cmp
movsb
push
sbb
loopne
je
sub
daa
xchg
mov
add
clc
jo
gs
imul
ror
imull
mov
inc
aas
iret
mov
insb
shl
orl
mov
dec
inc
hlt
adc
lock
fisubrs
xor
out
bound
divb
ror
cwtl
inc
sub
add
pop
and
xor
cmp
roll
lret
add
add
int3
aam
out
mov
mov
faddl
or
xor
test
push
pop
mov
add
filds
popf
lods
and
mov
push
addb
mov
dec
scas
adc
rol
test
leave
sub
gs
mov
clc
jbe
cmp
and
xor
add
jle
pop
mov
shlb
sbb
xchg
adc
push
test
fs
sbb
add
andb
ljmp
xor
cmpsl
sub
aaa
and
dec
pop
or
inc
sar
int3
sub
push
sbb
sub
dec
mov
push
and
lret
cmpsb
and
adcl
loop,pn
xchg
rolb
sub
mov
jne
push
pmaddwd
pusha
movsl
mov
aad
in
xchg
dec
mov
dec
add
lret
lret
in
packssdw
or
pop
call
shrl
scas
push
shlb
dec
test
push
jo
dec
xchg
adc
adc
mov
push
jmp
movsl
inc
div
lds
sub
push
jne
mov
cmpsb
rolb
cmp
loop
icebp
in
imul
aas
cmp
mov
movb
adc
sub
outsb
rcll
xchg
and
dec
ljmp
jmp
adc
xchg
ja
mov
lds
imul
inc
lret
xlat
pop
push
mov
and
cmp
push
jmp
lahf
movsl
mov
in
clc
insb
add
or
jmp
idivl
jne
xor
icebp
pop
mov
fisubs
loopne
std
out
add
add
fcoml
shl
popf
inc
add
mov
shl
and
pop
cmp
mov
adc
jo
mov
cld
push
xchg
shlb
ljmp
dec
mov
inc
cmpsb
sub
add
push
popa
arpl
lret
call
enter
movsb
add
fisubrl
and
pop
push
mov
add
push
fimuls
add
add
push
cmp
aas
jo
jne
sub
xchg
or
xchg
sbb
mov
pop
sub
or
test
mov
mov
xchg
cwtl
mov
or
adc
je
sub
or
mov
mov
fadd
cmp
push
lahf
shlb
dec
pop
jmp
mov
icebp
cltd
ret
inc
push
dec
scas
fs
mov
repz
mov
or
pop
pop
popa
arpl
ss
scas
push
jl
jo
and
test
iret
dec
or
aas
ret
inc
mov
or
cli
das
and
mov
rolb
mov
outsl
or
pop
insb
xor
jne
sbb
mov
std
adc
stos
fimuls
and
push
cmp
in
movb
stos
jnp
movsl
xor
pusha
add
std
inc
xor
jg
dec
shll
hlt
sbb
dec
js
iret
xchg
add
mov
out
add
test
push
push
les
push
and
xor
hlt
inc
dec
xor
push
push
out
dec
inc
inc
mov
inc
sub
or
sbb
rcrb
mov
or
sub
pop
hlt
sub
negl
xor
xchg
into
data16
add
cmc
xchg
inc
push
loop
iret
shlb
aam
add
jno
inc
pushf
dec
cmpsl
mov
ret
xchg
sbb
test
fwait
cmp
lods
sub
jle
mulb
inc
pop
push
pusha
pop
loopne
inc
sub
dec
mov
sub
add
je
mov
mov
inc
mov
adc
fwait
or
push
cmp
add
sbb
daa
icebp
inc
aad
lods
fmull
inc
clc
xor
mov
nop
or
data16
fstps
or
sub
xor
xor
mov
test
idivb
movsb
js
in
nop
leave
outsb
jp
sub
incl
pop
rolb
mov
add
mov
xor
mov
scas
ret
mov
leave
int3
xchg
or
mov
ss
add
vpshufhw
lods
aad
cmc
jns
pop
rclb
and
scas
xchg
mov
xor
push
movsl
mov
rcrl
add
push
dec
xor
ret
gs
or
add
mov
stos
adc
cmp
popf
cs
push
fwait
ljmp
addr16
and
nop
mov
sub
and
mov
and
rolb
jno
inc
out
not
jno
pop
loop
adc
lods
sbb
add
or
data16
push
cwtl
or
or
test
mov
add
jmp
push
pop
cmpsl
adc
mov
mov
subl
jne
es
xor
cmp
loop
movsb
inc
test
shr
jns
inc
in
dec
and
rcl
jecxz
cmp
mov
xor
iret
jno
leave
mov
shrb
lret
cmpsl
pop
icebp
or
nopl
sub
push
xchg
stos
jp
call
dec
fsubs
cmc
or
fsubs
pop
out
xor
dec
or
add
sbbl
add
add
add
or
clc
mov
adc
jmp
cs
stos
cmp
cmp
int
inc
arpl
adc
xor
ret
dec
ljmp
shll
ss
jle
cmpsb
fwait
mov
sbb
jae
lret
add
jnp
inc
addb
add
notl
push
out
jecxz
lods
test
or
es
mov
mov
in
pushf
push
jae
fwait
or
lret
nop
cmp
cmp
repz
aad
in
dec
loop
fwait
not
and
push
xchg
sbb
filds
sarl
mov
xor
add
in
rol
or
sbb
push
rcrb
mull
hlt
adcl
stos
icebp
push
dec
mov
add
gs
xchg
ret
test
ja
add
push
cld
sub
or
mov
adc
adc
mov
or
pop
test
iret
and
add
cmp
js
enter
movsl
or
mov
or
cmp
in
mov
jl
xor
ds
lahf
pop
jne
inc
aam
clc
dec
jle
xor
add
sub
and
push
adc
or
jp
push
jno
fidivl
and
mov
dec
gs
or
mov
mov
stc
cltd
outsl
rorb
cmc
and
sbb
stos
das
loopne
mov
pop
push
mov
push
xchg
push
cld
push
push
call
xor
dec
lods
popf
test
sbb
mov
nop
clc
lahf
pop
cmp
lahf
pop
sarl
seto
pop
dec
ret
mov
xchg
inc
fcmovnb
ss
xchg
inc
lods
aad
and
xlat
test
push
out
js
jo
push
test
fsubrl
adc
int
pop
sbb
mov
fldt
and
xor
sbb
add
jb
stc
and
fistpl
nop
inc
inc
add
mov
add
leave
pop
xchg
das
inc
lea
xchg
and
adc
adc
adc
mov
fidivl
lea
or
fsts
pop
sahf
es
cli
lret
out
push
jmp
and
mov
dec
cmpsl
add
outsb
jb
cld
mov
pop
clc
jno
fcoml
into
sub
ret
add
jbe
inc
aaa
aas
mov
pop
fists
or
movsb
fisttpl
jb
push
fdiv
add
cld
fdivrl
cmp
sahf
cmpsb
push
pop
out
jns
inc
mov
or
in
cmpsl
pop
lock
jb
jno
dec
enter
lds
jne
sub
inc
imul
sbbl
sbb
in
scas
test
mov
shr
jle
gs
or
mov
and
fnstenv
lock
mov
loope
pop
mov
inc
dec
pop
nop
push
sbb
bound
leave
mov
imulb
add
loope
lds
movsb
shl
adc
fwait
in
add
testb
pop
sbb
cmp
xor
lock
add
sbb
sbb
or
lods
adc
xlat
jp
ficoms
sub
cmp
ret
insl
xchg
or
jg
jnp
add
scas
add
pop
cmp
or
lods
sbb
add
dec
stos
cli
sub
shrl
or
popa
out
test
sub
insb
add
stos
negl
or
push
leave
xchg
pusha
add
fbld
pushf
sahf
lods
adc
jo
xor
loopne
repz
xor
pop
pop
sub
adc
sub
push
xor
clc
or
mul
std
xchg
lds
js
lcall
sbb
push
jb
popa
xchg
inc
adc
lds
mov
xchg
pop
jbe
inc
call
fiaddl
mov
pop
jne
or
and
cmp
je
daa
cltd
dec
mov
cmp
movaps
jo
rcrl
xchg
stc
push
fsubs
xlat
dec
adc
mov
add
cmp
push
sub
jno
sbb
ret
jbe
pop
cmp
sbb
xchg
xchg
sbb
pop
cmpsl
int
jle
add
xor
fadd
xor
lcall
mov
cmp
xor
inc
loopne
lret
mov
lock
clc
sbb
mov
cmpsb
imul
jmp
vcomiss
aaa
inc
rolb
test
pusha
aaa
roll
ja
lock
sbb
or
add
bt
mov
test
movsl
or
outsb
test
pop
pop
dec
fcoml
test
ret
insl
stos
ret
push
push
clc
add
adc
lds
mov
test
xchg
mov
push
sub
pop
and
or
pop
stc
pop
ret
jno
push
xchg
shr
dec
pop
or
dec
jnp
cld
fmull
divl
push
push
dec
loopne
bound
add
mov
nop
sahf
or
bound
aad
push
inc
xor
iret
inc
jmp
jno
std
inc
add
lock
shrb
pop
sbb
imul
ret
push
ret
push
adc
push
jo
adc
pushf
add
lods
adc
loop
and
lods
inc
sbb
ljmp
movsb
ret
sub
clc
bound
add
jg
loop
or
sub
andb
pop
repnz
add
dec
in
jmp
inc
and
outsl
sbb
data16
repnz
sub
pop
xor
inc
cltd
sub
sub
js
sub
sbb
jg
jae
mov
push
push
sbb
shll
aaa
loopne
clc
sbb
pusha
jmp
and
in
add
add
push
adc
dec
rclb
cwtl
test
add
fadds
cltd
scas
or
inc
jg
push
mov
inc
add
push
rcrb
or
push
pushl
push
push
and
movsb
mov
ret
test
test
xchg
push
ds
dec
sbb
add
push
and
outsl
or
push
push
sbb
loope
out
inc
daa
sbb
mov
fiadds
out
and
inc
or
inc
push
push
rclb
cmp
or
dec
mov
jmp
and
pushf
push
push
xchg
aaa
dec
and
add
test
xor
rorb
arpl
xlat
aam
stos
adc
adc
test
iret
adc
sub
jo
aaa
push
cmc
ret
pop
xchg
and
sbb
icebp
sbbb
add
enter
popa
adcb
or
scas
test
dec
add
imulb
ffreep
loope
add
pushf
sub
jne
ret
xchg
xrelease
imul
gs
daa
dec
fs
and
mov
mov
mov
fcoms
bound
lock
pop
popl
sub
or
pinsrw
mov
fisubs
rcr
or
or
jecxz
les
cmpl
xchg
push
popa
lods
sti
dec
add
inc
lret
mov
jbe
push
sub
mov
xchg
push
and
int3
int3
out
hlt
or
cmpsl
cmc
inc
adc
add
push
push
stos
jge
dec
lea
lcall
cli
fs
jge
sbb
lahf
adc
add
mov
in
push
jecxz
cmp
mov
adc
mov
jne
ficoms
push
mov
add
and
subb
xor
mov
and
pop
cld
sub
ds
out
test
mov
xchg
push
jb
lds
lock
mov
sbb
sar
shrb
adc
mov
add
in
xor
push
add
jmp
pushw
std
testl
mov
and
xor
jl
test
rorl
xor
xchg
xor
xchg
icebp
aaa
neg
call
jno
test
or
ror
out
fidivrs
mov
pop
dec
movsb
mov
insb
inc
cmc
push
aam
sarl
in
adc
jp
ret
sbb
int
xor
inc
dec
push
loope
adc
add
cmp
jmp
not
stc
jecxz
xchg
rclb
rcr
xor
or
add
push
mov
inc
shlb
xchg
xor
addb
inc
mov
xor
popf
addb
push
mov
cmp
jbe
xchg
je
stos
out
insl
inc
adcb
sbb
sub
jb
add
jb
pusha
push
ret
mov
add
mov
mov
jbe
or
sub
mov
ds
xchg
and
loop
lret
jo
sar
sbb
xor
add
test
push
stos
xor
les
mov
adc
sbb
mov
jmp
test
mov
sub
stos
adc
and
sbb
scas
mov
in
sub
les
jmp
push
dec
pop
aad
pop
daa
add
push
mov
or
push
mov
fmulp
jg
and
jo
xor
mov
adc
jne
imul
mov
inc
or
cmp
xchg
outsl
add
call
inc
mov
inc
or
mov
movsl
jbe
inc
adc
repz
data16
shrb
xor
sarl
mov
int
xor
or
inc
mov
or
jecxz
pop
xor
push
or
jnp
clc
ret
sbb
dec
in
adc
ljmp
loope
xchg
push
clc
inc
call
push
push
push
mov
xorl
pop
mov
push
and
pop
xchg
add
push
mov
xor
cmp
pusha
insl
mov
mov
rolb
and
and
push
subb
mov
push
or
andb
loopne
push
sbb
or
test
mov
and
call
lods
inc
inc
add
inc
sbb
fldcw
aad
xor
lret
shlb
movsb
dec
add
aam
jne
lods
xlat
add
push
fwait
jnp
fcomps
jl
insb
gs
push
lods
cli
cmpsb
sub
jmp
test
jb
ljmp
and
hlt
sbb
dec
push
inc
das
sub
fnstenv
out
cli
fisttpl
fchs
dec
lret
push
icebp
cwtl
add
jbe
xor
insb
fadd
addb
dec
loopne
sti
adc
in
add
loop
and
or
push
mov
adc
popa
sub
mov
mov
push
cli
sbb
push
popa
sti
outsl
and
hlt
inc
sub
dec
cmp
inc
sbb
pusha
sub
dec
add
arpl
cmpsl
cltd
cmp
pop
lcall
pop
adc
add
mov
dec
stos
add
pop
jb
mov
lock
cmp
fs
or
std
jmp
roll
fs
add
scas
xor
frndint
cld
push
inc
loopne
fst
mov
sub
sahf
rorl
divl
dec
adc
xor
dec
dec
or
in
pop
cmpsl
movsb
aam
or
cld
pop
and
inc
inc
cmp
push
test
imul
lahf
imull
rep
jne
inc
push
fsubs
inc
mov
mov
sbb
pusha
call
mov
inc
mov
pop
lcall
xchg
das
sbb
aaa
xchg
inc
ret
jg
repz
lret
add
imul
push
sbb
scas
mov
mov
mov
cmc
aas
test
sbb
fistpl
mov
jnp
cmpsl
mov
mov
into
ret
std
in
dec
adc
in
clc
sbb
scas
popa
add
lret
dec
sbb
shlb
mov
pop
addr16
bound
imul
add
cli
pusha
pusha
push
loope
or
or
pop
cmpb
jg
jp
jo
jp
xor
fmulp
rcr
icebp
fiaddl
pushl
rclb
inc
les
cmp
aaa
sub
sbb
out
sbb
cmp
pop
mov
jle
push
hlt
cmc
xchg
fdiv
stos
test
push
pop
lods
push
test
pop
pop
push
push
hlt
or
and
cmp
xchg
adc
lock
rorb
test
or
xor
pusha
shll
xchg
icebp
xchg
pop
mov
pop
arpl
rcr
inc
sub
enter
add
enter
sub
mov
add
clc
cmp
add
fists
inc
inc
insb
test
mov
mov
out
add
push
pop
aas
xchg
pop
lret
sbb
dec
and
inc
test
and
and
ror
cmp
enter
push
outsl
sub
push
flds
xor
nop
pop
sub
mov
test
push
dec
mov
pop
adc
clc
xchg
sub
mov
popa
adc
adc
dec
mov
push
add
shrb
mov
mov
or
and
jmp
mov
arpl
repnz
push
cli
bound
rolb
add
mov
adc
push
xor
inc
das
mov
push
pop
imul
loopne
std
idivb
lea
adc
lock
call
icebp
xchg
and
push
leave
add
pop
or
inc
jmp
inc
xor
loop
xor
xchg
adc
pop
pop
fimull
and
int
or
cli
std
imul
enter
clc
divl
icebp
jl
cmpsl
cs
jne
cmp
clc
orl
xchg
aad
test
cmp
or
xor
add
inc
insl
roll
xchg
fwait
dec
inc
and
incb
mov
add
sarb
mov
stos
rcrb
cmp
in
add
and
shlb
rorl
mov
pop
mov
or
test
loop
jle
fildll
shlb
push
fisttpl
inc
push
cltd
ficoml
loopne
push
rcll
inc
daa
loope
mov
andl
add
lret
cli
rcl
push
arpl
aad
inc
xchg
aad
iret
cli
lcall
add
xor
and
cmp
push
or
stos
pusha
xor
jo
cmp
rorb
shr
add
test
int
xor
and
dec
mov
imul
icebp
cmp
jle
rorl
or
call
mov
cld
es
push
repz
adc
jecxz
xchg
inc
mov
sub
inc
pop
or
in
shl
add
or
pop
and
mov
inc
jecxz
addb
mov
mov
lret
inc
sbb
adc
mov
xchg
add
negl
xor
inc
add
sub
dec
add
lock
jo
popa
xor
punpckhbw
xchg
and
or
inc
mov
and
cmp
mov
ficoms
jl
fisttpll
jmp
lock
dec
clc
and
sbb
inc
divb
pop
fs
xor
inc
dec
mov
fsubs
xor
jae
hlt
push
fs
lds
fdivrl
nop
cld
pushl
clc
dec
jl
je
mov
ror
hlt
iret
jl
cmp
jae
mov
sub
repz
sub
sbb
int
fwait
xorl
loopne
inc
outsl
xchg
loopne
jl
popf
cmp
stc
je
in
add
add
ss
pop
gs
and
orb
adc
sbb
cli
test
jb
jecxz
add
call
div
lds
jb
mov
add
and
xchg
xchg
insb
sbb
sub
les
loopne
repz
or
inc
nop
push
incb
ror
js
pop
sbb
loope
xchg
rol
fisttpl
repz
or
test
add
push
xlat
mov
jge
adc
inc
cmp
ret
mov
sbb
sub
xor
add
add
testb
sub
ret
andb
hlt
stos
xchg
pop
or
test
sarb
addb
push
call
or
sbb
or
mov
dec
push
stos
add
testl
movsl
inc
mov
mov
and
jne
loopne
stc
pushf
js
pop
lock
jbe
inc
inc
test
or
add
test
fdivp
flds
pop
or
pop
lret
ret
add
ljmp
pusha
mov
mov
cmp
lea
les
cmp
out
decl
jl
adc
mov
push
jmp
sbb
inc
mov
sub
fimuls
clc
aas
xchg
mov
fistpll
in
xorl
xchg
jbe
addr16
or
ret
xchg
popa
movsb
daa
adc
push
jbe
out
movsb
jb
push
adc
roll
xchg
inc
add
dec
mov
mov
xor
adc
jmp
mov
sub
adc
and
pusha
rolb
dec
or
mov
call
enter
dec
or
in
lret
insl
dec
sub
add
cmpsb
fstpt
or
rcll
mov
adc
jecxz
cmp
jmp
sbb
adc
in
add
pop
adc
cmpl
idivl
jl
hlt
cld
sub
add
mov
cmp
jo
dec
adc
sbb
fdivrs
push
adc
pop
out
aam
sbb
dec
test
fists
test
cmpsl
pusha
dec
mov
pop
arpl
cmc
xlat
cmpsl
scas
and
mov
mov
jno
shll
imul
js
jmp
cli
inc
ljmp
sub
cmp
add
mov
add
fimuls
fs
ret
or
add
dec
mov
dec
inc
xchg
xchg
imul
negl
jmp
movsl
push
dec
packuswb
mov
daa
jecxz
inc
in
adc
add
in
ret
test
pop
ficoms
sahf
loopne
jno
call
pop
and
sub
xchg
fcmovb
push
repnz
call
es
shll
scas
andl
pop
adc
push
push
inc
stos
push
add
lock
xor
push
mov
fisubs
adc
pop
js
insl
xorb
or
mov
rol
or
cltd
icebp
sar
scas
xchg
add
push
pop
xchg
jmp
shr
inc
push
fildll
push
mov
fiaddl
fwait
cwtl
fildll
lret
xchg
mov
mov
or
in
push
mov
inc
add
mov
scas
ret
add
or
add
arpl
dec
inc
mov
add
addb
div
out
add
orl
xchg
in
dec
xor
fdivrl
cltd
mov
loope
jg
int
and
xor
scas
ss
pop
shll
mov
addr16
adc
es
xlat
and
arpl
mov
add
loope
and
inc
pop
mov
xor
and
test
adc
ret
cmp
ss
notl
stos
jp
inc
sar
in
mov
push
mov
lds
pop
sbb
call
push
xor
push
rolb
inc
fdiv
and
pusha
fstps
and
in
ret
pop
inc
gs
xchg
cwtl
imul
push
xchg
dec
jp
sub
push
rcll
inc
mov
inc
mov
add
mov
mov
fidivrl
push
out
sbb
cs
sbb
cmp
es
insl
push
loopne
add
setns
xchg
pop
cmp
iret
lret
push
mov
xchg
andb
fadds
cli
sbb
scas
sub
mov
mov
xlat
mov
lahf
dec
cmp
dec
test
cmpsl
in
notl
call
lods
shll
mov
je
xor
and
sub
and
pop
sbb
sub
jmp
and
sbb
ret
pop
add
add
movb
mov
sub
mov
push
jb
mov
cmp
sbb
outsl
inc
icebp
mov
popa
sub
mov
rolb
int3
loope
cli
or
mov
fsubrs
int
pop
jp
or
sbb
fisttpll
stos
mov
loopne
push
push
or
sbb
inc
add
pop
test
fs
aam
repz
add
sub
push
testl
push
lods
sbb
dec
rcr
comiss
mov
flds
pop
add
cmpsl
sbb
lods
not
ljmp
pop
push
jno
nop
add
inc
pop
dec
or
sbb
cmpb
and
les
inc
xor
lods
or
sysexit
inc
and
sub
stos
lock
push
sti
pop
je
or
jmp
pop
xchg
jmp
adcb
movl
aam
sbb
cli
push
nop
xor
lods
inc
adc
fldt
cmc
insl
std
mov
scas
xlat
dec
jl
addl
cmp
mov
adc
or
pop
mov
jmp
xchg
js
jnp
cmp
daa
xor
dec
jge
push
fnstenv
mov
mov
inc
pop
jmp
and
adc
add
mov
adc
and
loope
pop
loope
fstp
sub
pop
fst
add
cli
ja
enter
jge
cs
dec
and
addl
add
pushf
cli
push
jmp
add
jne
inc
mov
ret
sbb
leave
xor
cmp
push
add
test
pop
pop
add
test
popf
add
xchg
jne
jmp
ljmp
mov
sahf
movsl
xchg
add
xchg
nop
andb
popa
lret
leave
jl
xor
das
stos
xchg
cmc
jbe
invd
mov
mov
add
inc
dec
push
push
leave
or
pop
pushf
and
ljmp
sbb
test
imul
push
ret
es
pop
jle
inc
imul
cmp
add
xchg
ficomps
out
stos
sarb
inc
stc
shll
xchg
add
push
ret
pop
xor
xor
pop
cmp
aam
push
pop
add
rcrb
and
add
push
int
pop
rcrb
fstps
xor
call
sbb
out
cmpsb
js
mov
fmuls
adc
es
add
xchg
popf
out
inc
and
scas
lock
movsb
inc
fstps
out
sbb
shrl
ljmp
pop
pusha
inc
add
mulb
lock
adc
mov
aad
cmp
mov
aad
jb
cwtl
and
inc
adc
call
push
into
dec
cmp
aaa
sbb
lock
add
push
loop
cli
sbb
jmp
sbb
psubsb
mov
mov
int
mov
push
or
adc
or
shlb
outsb
faddl
adc
ds
mov
xor
addb
adc
add
pop
mov
lret
mov
loopne
mov
adcb
add
adc
fistpl
mov
repz
jecxz
movl
mov
inc
orb
inc
iret
adc
add
jne
test
add
xlat
cli
ret
add
ficompl
incb
sahf
add
out
add
add
or
add
xor
dec
pop
xchg
in
adc
cmp
push
adc
fmull
add
mov
or
inc
test
popf
cmp
mov
push
enter
in
push
or
loop
das
xchg
sub
test
dec
lock
addr16
ret
inc
jne
push
lods
pop
pop
dec
pop
fistl
dec
add
push
enter
dec
ror
sbb
mov
popf
jne
scas
add
jecxz
leave
xchg
enter
mov
test
loope
in
scas
add
loopne
out
jl
sbb
and
xchg
push
test
les
pop
shlb
lea
fwait
pop
sub
shlb
cwtl
addr16
dec
pusha
dec
cld
adc
hlt
push
lock
or
sub
sbb
push
xlat
jno
and
mov
xchg
xor
jg
inc
mov
loopne
sub
movsb
test
pop
and
mov
sbb
xor
fs
rclb
int3
test
push
les
jo
or
aam
pop
xchg
sbb
fmuls
add
and
rorb
inc
fdivrl
add
inc
or
adc
sub
psubusw
push
dec
mov
xchg
les
pop
aas
lahf
fadd
js
shl
clc
aaa
rolb
sub
inc
pop
js
jne
push
adc
insl
xor
repnz
dec
rcr
cltd
inc
ficompl
into
inc
addl
mov
fdivl
fwait
push
push
test
inc
outsb
push
les
push
callw
add
adc
rolb
xor
push
subb
push
push
xchg
cmp
stos
adc
xor
xor
jae
cmc
xor
mov
js
mov
roll
push
rcll
rcl
push
dec
mov
mov
out
push
cmp
and
xchg
loop
lea
ljmp
aad
imul
shlb
push
xchg
mov
aam
mov
mov
cli
cld
dec
push
jmp
inc
and
cmpsb
lea
cmp
xor
add
push
flds
mov
das
out
jmp
or
push
add
aad
and
jnp
sarl
js
pop
inc
mov
ficompl
inc
add
ljmp
xor
ss
shlb
jo
inc
inc
es
ja
or
push
mov
scas
fsubl
mov
ret
pop
mov
mov
push
sbb
imul
fisttpl
into
stos
or
pop
dec
xchg
cmc
fistps
testl
aas
jmp
int3
and
sahf
push
aaa
frstor
vhaddps
shll
outsb
jmp
pushf
cmp
and
mov
sub
movsb
pop
adc
fnstenv
pop
bound
adc
aad
js
paddsb
adc
lods
sti
and
test
outsb
pusha
sbbl
xor
jnp
daa
int3
dec
inc
xchg
dec
lds
hlt
out
sub
dec
xor
jmp
or
inc
push
fidivrs
loope,pt
sub
ds
inc
push
add
shlb
inc
enter
adc
out
sahf
cltd
add
lock
add
add
mov
cmpsb
push
mov
roll
jmp
or
scas
mov
fistpll
loope
push
clc
rorb
mov
pop
adc
pop
lcall
cli
pushf
xchg
push
mov
or
cld
imul
sub
shll
xor
fidivrl
movups
inc
cwtl
bound
sub
test
inc
mov
sub
je
rolb
fsubs
sub
mov
icebp
pop
add
clc
out
pop
inc
sbb
clc
xor
mov
jmp
sub
xchg
mov
or
dec
push
adc
mov
iret
or
inc
sbb
fs
jg
je
inc
loopne
call
lea
mov
sbb
xchg
imul
adc
or
cmp
pop
mov
lds
inc
mov
and
pop
adc
roll
mov
addr16
adc
add
cld
mov
adc
out
and
sbb
cld
and
in
mov
pop
push
sbb
mov
jge
mov
mov
inc
jns
push
or
ja
sbb
or
mov
pop
and
mov
ffree
push
or
or
sbb
fisubrs
insl
pop
icebp
pusha
outsl
inc
adc
mov
cmp
inc
mov
pop
push
das
aad
fadd
sbb
aam
sub
sbb
jmp
faddp
mov
sub
sbb
rorl
insb
push
push
jmp
call
dec
sbb
into
je
clc
loopne
out
xadd
cmpsb
mov
scas
cli
xchg
sbb
push
sub
imul
push
cmp
dec
dec
movsb
dec
xchg
mov
xchg
dec
xchg
pop
sbb
ret
addl
xlat
sbb
dec
clc
xor
pop
decl
jmp
mov
pop
ja
mov
lahf
pop
mov
xor
adc
lock
lods
mov
int3
clc
mov
ficoms
aad
clc
jb
imul
cwtl
sarb
and
cli
mov
popa
xor
dec
dec
addb
scas
xor
rorb
xchg
adcb
jmp
inc
fldenv
pop
in
in
fmul
xor
insb
mov
bound
jmp
lods
add
sbb
add
call
push
jmp
push
rolb
xchg
sub
mov
xchg
ds
aaa
test
pop
add
mov
daa
fnstcw
dec
add
mov
imul
cmp
les
ret
mov
xor
stos
lcall
xlat
mov
dec
add
loope
decl
pop
addr16
pop
pop
mov
mov
dec
jp
add
sub
aas
aaa
add
inc
cmp
rclb
cmpsb
pop
aam
test
addb
or
mov
lds
fldt
cltd
lcall
aas
add
test
mov
pop
or
or
inc
add
in
lcall
jmp
sub
xorl
iret
pop
sub
dec
sarb
or
fildll
mov
sbb
xchg
movsbl
stos
clc
mov
add
push
call
imul
cs
mov
adc
and
sub
das
je
bound
jge
enter
or
mov
dec
lea
mov
outsl
in
mov
das
mov
cmpsl
sub
ret
pop
aaa
jb
repz
addr16
mov
cmpsl
aam
pop
xchg
mov
ret
rolb
lods
aas
nop
stc
mov
in
mov
sbb
lock
pop
or
add
hlt
hlt
inc
pop
scas
enter
cmp
push
popa
cld
sub
pop
push
add
sub
sub
mov
fcoml
mov
stos
adc
movl
pop
jne
bound
or
dec
rorb
inc
enter
jnp
fwait
cmp
or
enter
hlt
stos
cmc
jb
add
pop
or
add
clc
jns
jae
inc
xor
fisttpl
pusha
add
adc
cmp
rorl
pop
sbb
or
ficoml
lea
jno
add
call
sub
rol
mov
jp
icebp
lods
inc
in
pop
popa
or
shrb
xchg
jle
das
rcr
push
adc
adc
clc
and
rol
sub
cmp
or
sub
pusha
clc
cs
push
addl
loop
cmc
mov
repz
cmp
sbb
inc
mov
push
aas
rolb
mov
sar
mov
lock
xchg
and
call
or
and
test
mov
out
gs
or
dec
xchg
adc
mov
adc
pop
loope
mov
push
aam
test
ljmp
push
into
cli
shll
pop
int3
out
or
add
mov
add
jno
push
adc
paddw
xchg
add
push
sbb
outsb
cmpsl
jbe
or
sub
xchg
fsubs
outsb
in
fwait
dec
insb
pusha
jne
pop
mov
xor
mov
dec
lret
loopne
movsb
ret
int3
and
push
xchg
outsl
adc
mov
in
add
in
movsl
test
lcall
rolb
sbb
cmp
adc
ja
in
xor
insb
sti
add
inc
adc
adc
test
fsubrp
and
pop
add
fidivrl
pop
xor
push
rcrb
loopne
push
xchg
mov
jns
call
mov
mov
rclb
movb
inc
lock
push
dec
fdiv
add
xchg
sbb
pusha
nop
and
out
je
js
xor
cmp
stos
jbe
sbb
and
jg
je
fstl
das
cmpsl
sbb
and
sub
pop
ret
inc
fcoms
inc
add
ret
cld
in
in
add
test
ret
jl
sub
ret
inc
mov
js
mov
addb
sbbl
loope
dec
cmc
or
push
pushf
out
imul
sarl
or
adc
aad
mov
mov
nop
and
ret
lahf
cltd
push
cmp
aam
jmp
jbe
insl
cmp
mov
jo
test
push
xor
push
int
cmp
lret
adc
loope
or
bound
jg
das
and
pop
jmp
negb
popf
lock
sbb
iret
in
jbe
popa
in
sub
mov
jl
pop
push
shlb
into
jle
xchg
jmp
push
xor
jmp
enter
cmp
or
clc
sub
dec
in
js
or
aas
icebp
sub
ret
push
push
pusha
pop
pop
clc
imul
xchg
icebp
mov
arpl
dec
add
call
mov
cmpsb
shrb
fdiv
pop
or
imul
adc
xor
xchg
adc
mov
test
aad
add
xchg
movb
rcl
xchg
cmp
fstpl
pop
xchg
sti
cmp
daa
arpl
call
movsb
lock
cmp
sbb
pop
sbb
mov
xor
push
les
jo
pop
popl
sbb
loopne
mov
es
cmp
push
inc
mov
jne
outsl
dec
push
js
in
add
aam
aad
dec
sti
pop
fsubs
mov
shll
jle
cmpxchg
xchg
cmp
dec
lret
jl
popf
mov
sbb
sub
rdmsr
push
xchg
shll
addl
aad
add
mov
push
addr16
jle
sub
jnp
call
xchg
insb
push
andl
sbb
push
sbb
cld
push
sbb
icebp
in
adcl
paddusb
sbb
in
add
ret
jns
xor
xor
dec
into
lods
test
cld
les
pushf
push
mov
nop
or
icebp
call
adc
sahf
insl
cltd
mov
aaa
test
adc
adc
sarb
add
ret
pushf
xchg
into
out
sbb
movb
lods
cwtl
call
xor
xor
pop
movsl
dec
cmp
push
inc
dec
inc
mov
dec
shlb
dec
loopne
mov
inc
push
xchg
inc
jl
data16
test
ljmp
push
add
and
lcall
jge
fcompl
ljmp
dec
sub
xor
mov
pushf
add
sub
hlt
aaa
test
lods
xchg
add
push
daa
push
icebp
in
and
or
inc
dec
shl
sub
jl
sbb
add
add
icebp
jle
xor
stos
jo
push
mov
pop
xlat
jecxz
aas
push
push
frstor
xlat
sbb
lret
loop
test
adc
jmp
sbb
mov
adc
cmp
repnz
cltd
ret
add
inc
aam
pusha
add
or
pop
in
xlat
mov
cmp
cmp
clc
mov
jno
mov
scas
adc
es
or
icebp
daa
push
pop
clc
lret
cld
flds
and
inc
adc
cli
loope
lock
and
xchg
xor
xchg
jmp
sub
mov
mov
test
push
loope
lds
sub
push
cwtl
push
push
notl
xchg
aaa
popf
adc
push
jp
movsb
pop
jmp
mov
or
cmc
push
iret
or
sub
dec
mov
cli
cmc
out
stos
xchg
inc
fnstsw
fidivs
mov
les
jno
lcall
adc
and
clc
xchg
jle
arpl
cmp
in
and
dec
cwtl
dec
ljmp
inc
iret
sbb
or
or
les
jbe
test
out
loop
or
jno
add
jnp
jp
push
mov
lods
aaa
fiadds
rol
xchg
pusha
sub
loop
cmp
mov
mov
mov
add
inc
pop
mov
jge
xor
inc
das
cmp
jle
sbb
mov
xor
lret
loope
clc
push
dec
inc
xchg
and
shll
sub
cld
lret
rolb
inc
lods
outsb
shlb
xor
out
test
add
cltd
lods
push
aad
cs
cld
xor
add
dec
adc
or
addr16
fcmovnbe
lds
push
lock
cmp
movsb
pop
subb
rorb
mov
adc
loop
add
cld
add
and
inc
dec
pop
out
mov
jbe
in
push
and
jb
xchg
mov
push
push
pop
push
pop
mov
aaa
cs
fcoml
inc
jle
ficompl
hlt
jmp
bound
lods
push
cwtl
adc
cmp
loopne
and
sbb
jae
call
push
das
add
push
lods
movsb
bound
shll
cld
and
imul
rcrl
push
and
or
mov
fstl
loope
outsb
dec
inc
filds
adc
dec
jb
fsubrs
ja
push
mov
imul
adc
iret
aas
ficoml
inc
scas
mov
push
pop
lds
xlat
test
mov
sub
loopne
lock
cmp
lock
mov
push
pop
fcmovnb
aam
and
jnp
loope
sbb
mov
adc
mov
sbb
jle
add
test
sbb
out
int3
and
mov
add
cmp
jl
add
ret
add
pop
push
add
add
dec
push
pop
xor
add
dec
jne
cmpsl
and
or
sbb
in
fdiv
out
jmp
dec
divl
ljmp
mov
add
mov
xchg
push
fcomp
inc
rolb
add
out
push
inc
push
cli
jle
cmp
push
sub
lock
mov
out
adcb
inc
enter
sbb
imulb
push
arpl
daa
add
pop
add
mov
cld
testb
add
lret
or
callw
dec
lock
sar
sub
ret
add
inc
orb
pop
add
and
fsubs
or
aas
sub
adc
jnp
inc
jecxz
or
fists
sbb
sub
sahf
jo
hlt
in
daa
push
int3
hlt
aad
adc
or
add
loopne
xchg
xor
pop
aaa
mov
inc
add
scas
adc
push
xchg
cmp
dec
mov
inc
mov
jnp
xchg
xchg
lds
or
lods
jne
les
inc
xor
imul
inc
add
fidivs
fldenv
repnz
pop
hlt
sbb
adc
push
fidivs
add
mov
test
popa
pop
cmp
lock
mov
cs
pop
fistl
sbb
mov
cmp
lock
mov
cmp
pop
mov
dec
sti
add
rorb
sbb
mov
lea
mov
lea
mov
add
dec
sti
cltd
pop
xor
and
addl
ret
cmpl
scas
aas
pusha
jno
fistpll
add
inc
pusha
movsb
les
out
push
dec
sub
andb
cmp
mov
fsubl
cmc
xor
out
add
inc
neg
insl
js
pop
adc
mov
sub
inc
and
incb
nop
sub
pop
call
mov
lock
rcll
adc
test
and
push
fisubs
lahf
cli
cmp
test
cwtl
add
mov
jge
sbb
shl
fcmovu
dec
sbb
mov
adc
pushf
loopne
add
repz
add
jl
and
pop
inc
ljmp
icebp
jmp
add
add
imul
sub
aam
mov
loopw
sbb
insl
jnp
adc
inc
or
insl
fstpl
lock
add
and
test
fistps
jo
or
xor
cmc
cmp
cmp
popf
cmp
ss
js
stos
or
and
ret
xor
outsb
sbb
jb
cmpl
adc
into
rolb
push
xchg
push
fimuls
cmc
test
mov
fxtract
imul
adc
dec
sbb
xchg
rcll
test
inc
add
aaa
jp
stc
pop
pusha
add
cmp
sub
insb
and
xchg
cmc
outsl
dec
xchg
test
mov
xor
pop
dec
movsl
add
mov
xchg
mov
fnstenv
aaa
dec
daa
mov
cmp
cmp
aam
rorl
jl
adc
sbb
adc
fistps
out
outsl
popa
loopne
or
mov
push
iret
add
adc
and
fldenv
mov
sbb
dec
vmaxss
mov
into
pop
push
ss
movsl
cwtl
aaa
push
jmp
les
test
mov
add
nop
lds
repnz
cmp
cmp
mov
cmc
nop
add
push
std
je
push
test
ret
hlt
cwtl
cmp
inc
sub
ret
jl
jo
pusha
and
inc
dec
dec
mov
ja
pop
loopne
sahf
scas
or
test
hlt
ljmp
jle
mov
movsbl
xor
or
add
push
pop
cmp
push
fwait
lock
mov
pusha
mov
push
mov
xchg
xchg
fcompl
aas
pushf
mov
orl
gs
test
or
cs
jp
fsubl
adc
or
aad
xor
sbb
and
pop
sti
xorl
pushf
jg
movnti
ss
mov
daa
or
push
or
add
in
nop
pop
mov
xchg
fmuls
das
jg
mov
push
and
arpl
ret
push
cmc
xlat
or
add
cmp
xlat
in
add
adc
test
push
sub
jo
xchg
jp
imul
mov
xor
xchg
cwtl
or
enter
adc
and
pop
jle
fdivp
shr
inc
faddl
stos
mov
or
dec
testb
jecxz
xor
fimull
or
add
adc
xor
push
mov
in
jg
add
add
jl
sbb
and
fldt
mov
cli
hlt
jecxz
mov
pop
xchg
and
xor
jmp
daa
je
dec
loopne
and
sbb
out
mov
call
inc
test
mov
cmp
mov
sahf
adc
cmp
pop
shr
aam
fcomps
or
inc
mov
or
or
adc
aas
hlt
dec
sti
aas
fsubrl
loope
sar
loop
loop
nop
adc
nop
inc
mov
mov
lea
inc
cmp
fbstp
movaps
adc
daa
jae
cltd
loopne
or
mov
and
xor
cli
inc
sub
inc
and
or
add
in
xor
sub
mov
sbb
or
hlt
pushw
into
or
repnz
adc
or
or
adc
dec
mov
daa
mov
pop
add
sbb
adc
mov
pop
jbe
mov
test
aas
nop
add
loope
daa
imul
mov
or
dec
mov
mull
test
adc
lods
adc
bound
push
mov
mov
rolb
rolb
imulb
add
ja
inc
jp
cmp
add
xchg
push
movsl
cmp
push
adc
mov
push
andl
adc
mov
ret
divl
pop
dec
cmp
dec
mov
sbb
mov
dec
ds
inc
add
scas
xor
mov
out
ds
push
fs
lods
pop
cmc
scas
mov
cmp
fistps
or
shr
sahf
jo
push
dec
outsl
in
fsubrs
jle
lret
push
or
add
adc
cmpsb
sub
sub
loopne
test
enter
dec
mov
add
lea
test
mov
mov
dec
adc
mov
add
add
into
sbb
pop
xchg
sahf
out
jle
ret
fsub
insl
icebp
add
add
cmpsb
jb
mov
rcr
sub
insb
mov
pop
or
xchg
mov
push
in
xor
daa
cld
imul
cwtl
ret
xchg
xlat
test
jne
add
sbb
fidivl
dec
and
inc
mov
mov
sbb
xchg
mov
push
jg
and
push
inc
fiadds
jno
sarb
adc
loopne
pop
push
xor
sub
add
cmp
adc
jmp
xor
clc
out
xlat
mov
mov
or
scas
inc
enter
popf
push
mov
enter
mov
mov
rcrl
or
fdivrs
adc
inc
sbb
xor
xchg
mov
fildl
push
lock
enter
scas
sub
mov
ss
js
xchg
dec
loopne
add
ret
pusha
sbb
fadds
enter
pop
jecxz
enter
and
adc
lock
xchg
and
cmpsb
jo
sbb
push
addr16
aam
jns
or
jmp
and
test
dec
or
inc
stos
and
push
mov
repnz
cmp
insl
sbb
sarl
sbb
add
jo
lock
aam
push
dec
mov
je
push
rorb
addl
xchg
push
inc
pop
jmp
pushl
dec
jbe
jbe
punpckhwd
pop
clc
es
ret
daa
sbbb
call
sub
sarl
push
jmp
int
ret
add
cs
adc
mov
mov
lea
pop
xchg
push
in
ret
out
adc
jb
push
mov
add
addb
add
sub
xchg
test
add
cmp
xchg
sub
shlb
mov
add
outsb
add
add
or
notl
inc
xchg
push
rcrb
or
and
adc
push
sbb
adc
mov
ljmp
leave
jp
addl
daa
repnz
ret
xlat
icebp
pop
jb
notl
pop
sub
cmpsb
cmpsl
or
ja
cmp
jo
mov
cld
xor
int3
lock
push
push
dec
pusha
rolb
loope
stos
outsl
sbb
xchg
jmp
add
repz
ficompl
add
ds
dec
nop
push
movsl
adc
add
push
add
mov
les
sub
add
addr16
pop
jp
jb
lods
jge
fcmovnb
push
pop
lock
mov
xor
add
pop
push
shlb
cs
mov
sbb
inc
sbb
inc
or
pusha
hlt
jnp
mov
jo
stos
mov
add
mov
call
clc
push
call
fsubp
ret
inc
sub
outsl
cmpsl
je
aad
inc
lcall
inc
in
xor
jp
popa
jmp
add
loop
push
push
lret
scas
mov
popa
and
sub
or
sahf
sub
xor
sub
movsb
sbb
lret
mov
cli
adc
ja
xchg
inc
cwtl
ret
cwtl
movl
xchg
sbb
arpl
fmuls
movsl
mov
add
mov
adc
push
in
ret
imul
scas
sbb
xor
xor
add
dec
inc
or
fsubrl
jl
addr16
fsubl
filds
rclb
xlat
outsl
xchg
pop
notb
mov
push
test
ss
loope
xchg
sbb
cli
xor
xor
sub
in
ret
aaa
test
mov
stos
pop
in
out
sti
dec
xor
sbb
insb
and
fldt
dec
and
lahf
xchg
push
jnp
cmp
mov
les
enter
cld
loopne
loopne
inc
stos
sahf
adc
xor
jae
add
repz
mov
add
and
and
lds
fisttpll
xchg
jo
outsl
and
xor
jp
jmp
inc
add
pop
sarb
leave
jo
jecxz
imul
shrb
test
aam
mov
lret
das
addb
sbb
loop
cmp
ret
xor
and
ds
xor
xor
cltd
out
lds
in
or
stos
pop
mov
sbb
insb
xchg
int
inc
mov
clc
add
ja
out
jmp
clc
dec
jge
ss
mov
ret
jbe
xor
push
pop
sub
fadd
inc
divl
xor
lret
xchg
mov
jo
add
add
lods
fs
add
fs
mov
popa
ja
and
cli
es
movb
xor
dec
shlb
push
add
xchg
test
dec
lock
add
loop
movsb
sbb
sub
push
adc
ret
inc
data16
or
call
jle
sub
outsl
mov
and
dec
fucom
inc
clc
or
rclb
jb
pop
jecxz
adc
jae
stos
into
and
sub
inc
mov
ret
dec
xorl
les
cmpsb
pop
ret
ret
insl
push
add
out
pop
sbb
mov
add
or
jg
add
add
or
sbb
add
and
jp
das
ja
push
mov
push
jmp
or
fcmovnbe
add
jo
mov
lds
jle
hlt
push
add
mov
push
pusha
rol
fwait
and
dec
enter
jbe
cmp
loopew
fdivr
and
push
jmp
adc
adc
and
adc
repnz
repnz
xchg
push
sbb
daa
dec
outsb
jmp
pusha
lods
sti
shlb
and
add
cmc
dec
inc
cmp
mov
add
mov
andl
jno
push
add
jle
adc
cmp
loop
imul
pop
push
or
int
jb
mov
call
mov
push
sub
push
call
add
and
pop
rcrb
mov
jl
test
mov
add
and
xor
sub
mov
lahf
lock
lock
ds
adc
mov
loop
push
sbb
or
cmp
xchg
in
cmp
xchg
hlt
dec
mov
sahf
push
popa
ret
sbb
stc
jnp
addb
or
mov
cmp
jmp
fnsave
mov
rolb
push
outsl
pop
test
sub
pop
inc
or
adc
arpl
es
xchg
scas
adcl
addr16
or
mov
outsl
pop
mov
pop
cld
push
xor
push
out
add
adc
orl
mov
ds
in
xacquire
xchg
cld
ss
mov
or
xchg
push
inc
add
add
test
push
mov
out
cld
add
push
std
test
dec
and
aaa
lret
ret
popl
das
push
jmp
mov
push
outsb
lret
loopne
sarb
dec
js
call
loop
inc
mov
test
jmp
push
push
call
pop
call
push
jbe
std
cmp
clc
sub
sub
sbb
cmp
or
inc
adc
mov
aas
mov
test
test
jle
jmp
and
outsb
dec
or
jbe
pop
inc
lock
mov
test
sub
gs
into
jmp
rcrb
xor
pop
loope
sti
dec
xchg
nop
sbb
pop
in
jmp
mov
mov
daa
cmpb
add
add
add
je
inc
and
ret
pop
iret
stos
mov
jmp
pop
ret
js
push
loope
clc
stos
mov
xor
inc
adc
add
adcb
lock
xchg
std
sub
xchg
adc
xchg
sub
xchg
sbb
add
pusha
hlt
dec
sarl
cmp
mov
pop
mov
mov
xlat
fstpt
int
call
rcll
cwtl
repnz
cld
pushf
mov
call
sub
pop
sbb
xrelease
add
icebp
or
add
and
mov
cmp
sbb
nop
sub
cli
or
adc
pop
mov
add
add
cmp
loope
push
test
sbb
pop
ret
into
aaa
xchg
xor
and
movsl
test
pusha
rcrb
lods
ljmp
out
movsl
adcl
jbe
test
jae
xchg
xor
pop
sbb
pand
popa
or
push
adc
lahf
adc
pop
ret
sar
insb
xchg
or
arpl
inc
call
adc
push
adc
jnp
sbb
adcb
mov
fwait
mov
sub
cmp
sbb
out
mov
cmpsl
jecxz
mov
pop
daa
dec
lock
dec
add
test
jne
dec
mov
mov
les
cmp
jno
sbb
lret
or
pop
fnstsw
arpl
data16
xor
or
mov
cld
test
and
mov
mov
mov
loop
outsb
inc
stos
test
ljmp
pushf
and
mov
or
movsb
jecxz
jb
sbb
mov
mov
stos
jno
es
inc
loope
or
mov
cld
out
jp
cmpsb
jb
pop
cld
pop
sbb
mov
rclb
push
fisttpl
pop
js
xor
adc
aaa
in
push
leave
sbb
lret
xchg
cmp
xor
xor
add
pop
mov
ja
insb
and
adc
in
add
inc
test
repz
popl
xchg
mov
jmp
or
test
ja
jge
mov
pop
clc
loope
push
js
adc
xchg
sub
rclb
lock
and
lea
sub
xchg
adc
xchg
dec
ret
inc
xchg
inc
sahf
into
mov
loop
aas
jmp
mov
test
es
mov
lahf
sbb
popa
pop
ja
sahf
test
cmp
loopne
pop
negl
mov
cmp
mov
mov
repnz
pop
addr16
mov
sub
mov
daa
add
das
adc
scas
pop
jge
inc
int3
adc
sub
mov
mov
orl
nop
adc
add
cmp
dec
outsl
xchg
and
lahf
adc
mov
lret
ret
add
mov
jle
into
sub
push
repz
test
push
aam
sahf
subb
mov
pop
cmp
jo
mov
das
jns
mov
iret
inc
mov
sahf
pop
repnz
mov
andl
repz
imul
fldt
std
add
nop
jmp
in
mov
push
les
xor
aam
cmp
fmuls
les
mov
add
andb
adc
cltd
lret
add
jl
rcll
add
ret
int3
mov
repnz
mov
rcl
adc
xchg
adc
xor
pushf
xor
xor
rcl
fisubs
in
add
add
and
jno
loope
sbbb
xchg
loopne
lcall
fsub
lret
or
aad
lock
or
neg
add
add
dec
cmpsb
out
hlt
hlt
andl
decl
adc
stos
sub
adc
pop
xchg
xchg
adc
adc
clc
cmpsb
dec
mov
dec
mov
pop
add
int
inc
push
xor
and
sbb
subl
cmp
mov
adcb
in
xor
inc
sbb
sbb
push
bound
aaa
imul
add
xchg
pop
add
mov
movsb
stos
sbb
sbb
pop
xor
add
jns
scas
add
dec
loop
inc
fiaddl
pop
lods
sti
push
sub
out
icebp
cmpsb
insb
cwtl
or
sbb
mov
sub
loop
jmp
mov
sbb
fcmovu
push
cmpsb
js
inc
sub
ret
dec
inc
xchg
js
jbe
push
lds
jge
test
dec
dec
inc
into
clc
arpl
call
inc
cmpsl
jo
push
xchg
fwait
mov
rcrl
scas
mov
sbb
insl
aad
lods
adc
mov
sub
push
and
stos
xchg
inc
mov
mov
mov
push
dec
dec
add
sbb
cld
jno
sbb
icebp
lahf
or
or
adc
cld
popa
adc
jno
call
rcrb
loop
inc
cld
push
add
dec
xor
add
outsl
adc
lea
xchg
jno
mov
jne
sub
popa
add
jg
test
ja
sub
popf
imul
dec
push
xor
push
adc
addb
dec
mov
adc
dec
jbe
or
pop
jo
lods
sbb
insb
and
inc
cmp
ja
mov
popf
insb
ljmp
pushf
loope
sub
add
dec
ret
imul
add
scas
ffree
mov
pop
pop
loop
jb
sub
inc
and
call
push
mov
test
subb
lret
ja
xor
decb
sbb
jbe
aaa
fstps
sbb
cwtl
mov
mov
mov
jne
sbbl
aad
loop
adc
gs
addb
and
adc
jg
das
js
add
cltd
imul
push
sub
js
and
xchg
dec
lret
mov
lock
cmp
pop
movsb
add
decl
pop
mov
out
cld
sbb
mov
push
les
mov
loope
or
adc
push
mov
inc
mov
fdivr
sbbb
lds
scas
ds
xchg
inc
cmpl
cmp
cld
adc
add
add
cmp
clc
lldt
jns
lcall
sbb
sub
adc
int3
xchg
aad
jmp
pusha
add
mov
mov
ljmp
inc
mov
shl
loope
mov
cli
jmp
cmp
call
lods
into
add
je
fsubrp
jmp
push
mov
and
fwait
lret
and
sbb
inc
orb
jecxz
mov
xor
sbb
test
fwait
xor
daa
ret
xchg
cmp
lods
pop
push
cmp
stos
adc
repnz
pusha
mov
fcmovu
clc
push
insb
fadds
push
shrb
pop
dec
dec
leave
pop
or
jmp
test
ja
testb
mov
das
mov
or
mov
in
cmp
addb
add
xchg
inc
jmp
test
jae
std
mov
lods
leave
aaa
cli
dec
adc
out
or
mov
rclb
lock
testl
sub
icebp
sbb
orb
popa
mov
das
adc
add
dec
push
stos
mov
xchg
pop
push
stc
push
xorl
je
sbb
lock
add
icebp
jb
repz
mov
fsubs
push
stc
jns
jnp
sbb
repnz
adc
add
icebp
xor
jmp
test
je
outsb
add
adc
push
dec
shl
lcall
cli
das
mov
ficoms
jnp
jp
loope
dec
dec
aad
sarl
xchg
outsl
cmp
jbe
stc
out
or
mov
xorb
cmp
movsl
or
es
xor
push
loopne
jnp
leave
movsl
xor
dec
fsubrl
imul
add
jne
fmull
sarb
cmp
pop
popa
adc
add
add
jp
mov
jbe
lock
fs
fisttpll
outsl
mov
mov
ds
jo
out
pop
loopne
inc
mov
repnz
inc
xchg
arpl
cmp
adc
div
and
and
cmp
and
lds
adc
sub
scas
ds
xchg
xor
mov
or
adc
xor
inc
or
push
add
dec
fdivr
test
ja
mov
mov
cmp
hlt
xor
out
xorb
push
daa
sbb
lahf
inc
or
inc
in
xchg
or
out
pop
cmpsl
dec
mov
mov
in
rorb
lock
lods
fcoms
aaa
xchg
xchg
sti
in
mov
aam
cmpl
mov
mov
pop
pop
mov
loop
sbb
adc
lret
sbb
adc
adc
scas
inc
aad
xor
or
cmpsl
hlt
outsl
add
mov
mov
test
sbb
jae
pushf
in
ret
and
shlb
shl
sbb
cltd
add
mov
adc
sbb
mov
push
push
sub
and
ss
inc
push
or
mov
mov
or
add
adc
in
cmp
adc
pushf
pushf
add
pop
movsl
cld
leave
jge
push
pop
fadds
ja
mov
ret
cmpb
inc
les
lds
inc
mov
jae
and
lcall
movsb
xchg
sti
push
cmp
outsb
mov
out
add
jle
arpl
inc
sbb
add
pop
fldt
inc
pop
add
ljmp
popa
and
add
js
jb
in
mov
xchg
cltd
jp
cmp
or
and
rorb
loop
dec
outsl
sahf
adc
or
int
mov
xor
jb
jmp
repnz
decb
or
rcr
fimuls
pusha
and
ja
pop
push
out
sbb
add
rolb
loope
test
and
addl
or
xchg
shrb
je
add
pusha
push
sub
cmp
jbe
push
xchg
lcall
mov
jbe
call
push
ficoml
mov
dec
xor
addb
outsb
loop
xchg
pushf
enter
dec
adc
mov
push
or
sub
pop
lea
fisubs
add
jmp
addb
inc
or
out
mov
push
sbb
sub
cltd
xchg
pop
adc
fisttpll
arpl
or
ret
loop
sub
fbstp
jns
inc
adc
jmp
out
mov
into
sbb
cmc
adc
adc
insl
mov
inc
sti
mov
pop
andb
jb
shlb
movsl
int3
xchg
mov
and
aaa
mov
das
lret
bound
xlat
nop
cmp
cmp
gs
int3
mov
inc
lret
adc
call
sysret
xchg
rcll
enter
cmc
pop
repz
push
dec
adc
jo
cmp
mov
rol
lahf
cmpsl
loopne
shlb
call
add
push
orl
inc
and
cli
add
loopne
mov
xchg
push
pop
dec
sbb
pop
movsb
dec
test
sub
repz
repz
add
mov
mov
lods
jmp
frstor
stos
sbb
add
push
rcl
ljmp
inc
adc
mov
in
into
and
js
fsts
fs
push
jb
and
sar
mov
jmp
iret
push
mov
imul
ja
sbb
mov
es
cmpsl
push
cld
sub
decl
add
push
es
adc
mov
call
jo
sbb
mov
adc
nop
pop
insb
fisttpll
mov
jne
mov
adc
mov
mov
fdivrl
sub
cmpsl
add
mov
lea
add
dec
adc
or
or
cmpsl
adc
and
push
sahf
scas
test
or
pushf
add
inc
lret
sbb
ljmp
or
add
dec
jecxz
mov
and
mov
outsb
mov
sbb
sahf
sbb
inc
out
mov
loope
adc
or
mov
stos
inc
mov
ja
ret
ss
bound
push
fld1
mov
pop
popf
sbb
or
push
push
lock
add
add
call
push
imul
icebp
inc
dec
test
mov
ficoml
pop
sbb
fmul
xor
or
or
push
aaa
stc
sbb
inc
lds
and
adc
shlb
inc
pop
adc
and
ja
add
mov
daa
test
outsb
orl
push
pop
nop
pop
pusha
loopne
sar
iret
sbb
mov
push
add
hlt
and
scas
add
dec
pop
sub
out
sbb
or
rorl
pop
inc
xor
pusha
dec
adc
negl
xlat
idivb
lret
push
dec
sbb
out
dec
jge
sbb
lea
lds
sarb
or
js
lret
imul
or
mov
andl
inc
or
xchg
dec
inc
dec
insl
xlat
js
loope
scas
jge
and
imul
add
mov
outsl
shr
aam
xchg
mov
sbb
jp
hlt
adc
jp
xor
lds
rolb
enter
out
ret
leave
icebp
ljmp
jo
cmp
push
push
arpl
or
loopne
push
les
adc
dec
adc
pop
push
sub
dec
mov
add
gs
adc
adcl
fld
cmp
cmpb
inc
push
ret
rorb
mov
pop
pop
mov
push
push
inc
adc
pop
arpl
cmp
cs
daa
mov
test
fcomps
inc
or
adc
jo
imul
scas
movsb
fbld
sbb
cli
aam
mov
mov
jne
inc
xor
sbb
fwait
add
xor
jo
das
or
aaa
lcall
mov
es
or
sbb
mov
ljmp
loopne
mov
or
fadd
out
addl
cmpsb
aam
pop
or
push
jge
jae
jmp
shl
ljmp
add
std
fisubs
outsb
or
dec
jo
adc
pop
pop
sarb
push
cli
repz
jl
sbb
shrl
loop
push
scas
pop
gs
sbb
fsubs
push
push
xor
mov
in
xchg
rcrb
add
mov
push
sbb
or
jo
inc
cs
and
test
mov
jae
ret
sub
mov
adc
or
push
sub
dec
scas
test
sarb
push
xor
push
arpl
add
leave
rcrb
into
xor
cmp
or
push
lock
or
sbb
pop
xchg
adc
loopne
int3
or
cmp
test
movl
dec
sbb
push
xchg
loope
cmp
push
ud0
jl
jne
adc
test
fcomps
fisttpl
and
sahf
mov
mov
xor
mov
inc
or
dec
cwtl
cmpsb
push
mov
sbb
xchg
and
loopne
mov
xchg
adc
jns
and
imul
jg
mov
scas
xchg
push
pop
and
loope
sar
add
aad
frstor
test
and
aas
adc
mov
dec
arpl
sbb
or
test
lock
xchg
int3
or
aam
and
ja
les
ljmp
stos
adc
xor
scas
mov
rol
dec
and
out
jb
dec
adc
dec
aad
es
mov
mov
bound
ret
add
add
fmul
jecxz
fdivrp
push
sub
cmp
sbb
aam
inc
test
add
xor
lds
flds
sbb
push
ret
push
nop
push
mov
pop
loopne
inc
inc
jmp
pop
fstpt
ret
or
jp
jmp
outsl
inc
and
pop
inc
in
stos
sar
xlat
inc
mov
push
mov
jae
jbe
and
adc
aam
xor
clc
jmp
test
sbb
addr16
mov
daa
loope
jb
outsl
xchg
inc
out
sub
movb
push
add
dec
insb
popa
xchg
cwtl
nop
rolb
pop
loope
lock
movsl
test
sub
in
adc
add
mov
mov
sbb
rcrb
fsubs
add
inc
dec
stos
mov
push
adc
sub
jbe
sub
lcall
or
sub
fadds
push
add
nop
call
xor
add
cmp
test
mov
push
roll
nop
imul
inc
imul
push
push
cmp
mov
push
call
int3
cmpsb
cld
dec
rcrb
daa
jle
ret
mov
mov
mov
enter
xchg
xchg
adc
xor
mov
mov
xchg
lcall
ret
js
loop
sub
rolb
ret
dec
adc
xlat
xchg
mov
lock
std
xorb
aam
ds
add
mov
jbe
popl
mov
mov
popa
scas
jecxz
mov
scas
push
ret
mov
dec
pop
sti
or
jne
pusha
jecxz
mov
push
test
aas
mov
jmp
outsl
mov
xchg
sbb
sbb
mov
fisubl
jnp
imul
jbe
mov
mov
xchg
pusha
adc
add
and
fmul
cltd
add
test
rcrb
outsb
inc
mov
or
test
dec
clc
mov
xor
adc
jmp
mov
pusha
arpl
ror
js
dec
pop
mov
rolb
mov
sbb
nop
icebp
mov
pop
pop
es
push
mov
xchg
jle
pop
push
out
fsubs
adc
mov
sbb
test
clc
jb
hlt
pop
stos
int3
inc
or
push
scas
lods
stos
xor
out
fldz
push
call
mov
out
lretw
jbe
and
jne
jecxz
sbb
mov
ds
mov
xor
mov
test
scas
les
lahf
or
fisubs
jmp
lea
xor
call
das
cmp
aaa
mov
push
fucomi
ljmp
xchg
cmp
gs
cmpl
shlb
movsl
xchg
hlt
je
js
add
sub
sub
jmp
pop
sbb
daa
sbb
push
jns
loopne
mov
call
add
add
sub
pop
mov
xchg
xor
rorb
mov
dec
les
jmp
xchg
add
cltd
cmp
call
add
loope
xchg
cmp
adc
fadds
or
cmpsb
xor
clc
and
movsb
inc
daa
pusha
fisttps
xor
push
shrb
xor
arpl
movsb
and
xor
or
sbb
imul
inc
mov
and
shrb
das
in
outsl
push
movsl
mov
stos
push
xlat
cwtl
cmp
std
mov
xchg
cmp
pop
lods
sub
adcl
shl
add
shll
adc
jo
jle
add
adcb
push
lret
xor
xlat
movb
adc
dec
add
jmp
fdivrl
xchg
movb
inc
and
out
mov
xchg
movb
add
or
pop
pop
mov
icebp
adc
aas
mov
mov
mov
jp
fcomps
inc
and
sub
je
or
sbb
add
cmp
push
mov
adc
add
add
roll
adc
cwtl
std
sti
mov
dec
xor
bound
loop
lods
xor
mov
lcall
add
or
adc
flds
add
ljmp
push
jne
xchg
push
add
dec
faddl
and
mov
lret
popf
push
stc
dec
adc
adc
ficomps
adcb
in
dec
popa
jo
jg
inc
pop
jle
repz
movsb
rorb
in
das
add
xchg
xor
xor
cmp
faddl
pusha
xchg
dec
enter
xchg
mov
cltd
xlat
das
and
pusha
push
xorl
or
std
jmp
add
imul
inc
and
push
js
cmp
push
ror
or
inc
sub
imul
adc
scas
add
mov
scas
xchg
or
rclb
outsb
xchg
pop
jmp
cmp
cwtl
fsubr
xor
in
push
adc
push
push
jne
pusha
dec
mov
cmp
xchg
nop
movsl
cs
and
in
int
jecxz
pop
add
cmpsb
testb
push
or
int
popf
xchg
les
lock
in
pop
subl
mov
mov
ds
movsl
test
pusha
shlb
flds
add
xor
and
popa
test
dec
inc
call
lods
icebp
cmp
xor
movsb
sahf
stc
loopne
push
sbb
jne
jge
out
loope
lret
jno
or
lods
mov
addl
rorb
push
add
push
sbbl
mov
sub
add
fisubl
sbb
jp
push
repnz
dec
mov
jo
faddl
sub
aad
inc
xor
sti
les
add
lahf
jo
sbb
loope
xchg
filds
icebp
jmp
icebp
out
cmp
dec
xchg
cmpsb
sbb
mov
enter
cld
or
pop
mov
ret
outsb
or
jmp
cmpsb
pop
in
ret
xor
les
hlt
sbb
std
daa
sbb
in
pusha
mov
xorb
or
xor
jns
add
or
insl
cmp
es
jp
add
or
xor
shlb
out
mov
sbb
mov
fdivr
or
mov
jmp
sbb
sbb
lods
adc
fs
inc
sub
xor
orb
ss
xchg
ret
inc
and
mov
in
fidivrl
push
enter
or
fsubl
mov
dec
sbb
arpl
and
test
jne
jle
out
fwait
incl
jb
ss
push
push
es
aaa
shrl
or
ret
dec
push
cmp
inc
pop
dec
fcomp
movhps
jmp
dec
call
dec
out
or
test
jl
or
ja
mov
mov
xchg
push
add
xchg
dec
inc
mov
pushf
or
jp
movsb
add
pop
xor
xor
loop
push
leave
pop
cmpsl
mov
hlt
into
je
push
mov
mov
sbb
ret
popa
loopne
xchg
xchg
adc
fidivrl
shrb
mov
add
pusha
movsl
lock
jmp
sbb
aaa
jo
nop
fistpl
xchg
mov
xorl
dec
pusha
add
or
jmp
popa
loop
jg
lea
fstpt
jb
mov
mov
push
dec
add
aam
cmpsl
add
aad
rolb
xchg
js
lock
push
mov
in
xor
je
dec
add
add
sbb
insl
add
lods
pop
xlat
popa
aas
push
mov
imul
dec
das
xchg
mov
mov
push
or
inc
fisubl
movsb
inc
negb
fsubs
add
sbb
andl
jbe
stc
and
sarl
or
dec
dec
add
sbb
mov
loope
test
dec
mov
lret
mov
hlt
push
pop
sbb
orl
lock
into
push
adc
push
or
push
out
in
sbb
rolb
in
dec
add
andl
sub
sbb
enter
rorb
push
and
scas
xor
popa
in
mov
dec
sbb
lcall
or
ljmp
iret
arpl
and
lcall
xchg
inc
rcrl
adc
add
shlb
jp
pop
inc
nop
cltd
cmp
jp
mov
mov
out
clc
sbb
adc
and
mov
lods
adc
sub
loopne
add
pusha
loop
js
push
ja
lea
fdecstp
fcompl
lock
aas
fcmovbe
nop
sahf
mov
add
xchg
sbb
xchg
xor
sub
jp
add
and
dec
repz
les
sbb
xchg
out
cmp
sub
movsl
int3
sub
test
dec
pusha
enter
rcrb
xor
loop,pn
xchg
scas
xchg
adc
and
orb
push
je
sbb
fisttps
dec
in
sub
inc
xor
xor
dec
call
add
add
inc
mov
sbb
sub
sahf
gs
adcb
and
inc
or
test
xchg
jp
xor
pop
rolb
and
lea
shrl
loop
and
add
cmpsl
mov
add
add
add
add
pushf
adc
loop
adc
cwtl
push
sbb
mov
sbb
adc
lods
test
and
inc
dec
or
daa
dec
jecxz
jbe
lcall
push
add
add
sbb
mov
pop
sub
daa
andb
movsb
popf
mov
inc
inc
rcrl
dec
pop
dec
or
dec
lock
sbb
ret
push
rcl
rolb
shlb
jo
fdiv
mov
js
shrb
arpl
stc
movsl
pusha
add
inc
cmp
adc
test
scas
add
fwait
mov
pop
jmp
fnstsw
mov
jno
ror
fwait
mov
call
movsb
mov
lods
dec
outsb
mov
lea
or
push
adc
pop
or
xchg
lock
add
fwait
insb
ss
or
add
add
test
stos
inc
cmovne
in
cli
adc
add
cmp
cmpsb
idivl
js
inc
xor
pop
xchg
mov
or
out
movsb
fcmove
enter
jl
insl
push
dec
loope
dec
and
nop
imul
imul
into
jne
add
sbb
test
pop
test
add
dec
and
mov
cmpsb
xor
adc
and
xor
out
das
inc
int3
jno
aas
cwtl
fs
dec
je
popl
outsb
jp
mov
mov
out
sbb
and
ljmp
into
pop
pusha
call
rcll
enter
outsb
imul
pop
enter
add
jmp
add
push
loope
std
inc
xor
add
adc
jo
je
and
fdivs
fisttpl
and
lret
mov
pop
out
push
mov
sub
out
call
dec
imul
jne
adc
scas
cli
hlt
lods
or
xchg
aad
es
repz
inc
hlt
and
cmc
test
inc
mov
cmp
mov
jne
ret
hlt
nop
push
add
and
push
push
sbb
loopne
pop
sahf
not
loopne
loop
loopne
test
cmp
jg
jge
cmp
scas
test
add
adc
pop
add
mov
cmp
orb
jmp
cmpsb
or
into
mov
shrl
rcrl
inc
push
pop
and
sbb
and
pop
xchg
mov
out
shr
xchg
hlt
xor
jo
in
push
pop
out
add
sbb
leave
popa
out
addl
xchg
mov
adc
scas
push
adc
loop
roll
or
mov
lock
xor
xchg
ljmp
and
hlt
mov
les
sub
xchg
fistpll
fiaddl
clc
jo
push
das
dec
inc
fwait
lods
xchg
addr16
adc
fisttps
adc
or
adc
xorl
fistpl
xchg
push
dec
iret
movsl
stos
enter
into
pop
dec
mov
push
mov
imull
mov
lret
xchg
xor
jecxz
mov
dec
movsb
test
xchg
cltd
aam
push
inc
daa
lock
inc
int
jl
jns
or
xlat
sub
movl
scas
xchg
aaa
adc
fbstp
jns
or
testb
dec
or
adc
iret
mov
cld
popf
cli
lea
adc
jno
mov
mov
add
add
adc
pop
pop
ror
mov
mov
nop
push
aas
nop
xchg
loop
or
rcr
xor
mov
pop
cwtl
aad
xchg
push
mov
fstpl
popa
pop
test
dec
repnz
fwait
or
push
cwtl
sbb
mov
sbb
fcoms
adc
push
sub
xchg
in
inc
shlb
mov
sbb
aaa
xchg
sbb
popa
int
imul
cwtl
mov
divl
idivb
pop
or
loop
call
push
xor
adc
mov
das
clc
dec
jae
lret
pop
or
inc
jge
xor
jo
sub
cmp
sub
mov
push
mov
stc
movsb
inc
shlb
addb
pop
test
stos
xchg
xchg
in
mov
add
mov
xor
jne
mov
and
mov
sbb
inc
mov
in
mov
xchg
imul
mov
mov
dec
adc
add
inc
and
adc
into
shr
mov
mov
ret
ret
leave
scas
fwait
dec
pop
mov
aam
in
xor
pop
rcpps
std
xor
hlt
sbb
add
lret
mov
inc
daa
cmp
inc
and
cmp
lods
and
xor
movsb
pop
or
push
enter
aam
sarb
mov
aas
inc
xchg
dec
lock
shlb
loop
andl
adc
mov
ficomps
mov
or
and
dec
stos
ss
dec
outsl
adc
or
enter
pop
xchg
adc
jmp
ss
jecxz
xchg
and
and
adc
movsl
xchg
fildl
adc
dec
bound
js
push
pop
inc
roll
ret
fprem1
aam
sbb
call
inc
or
jbe
lcall
push
fcmovb
adc
fcom
dec
add
add
jnp
or
inc
mov
inc
cmp
xlat
outsl
lahf
test
lods
or
pop
sti
dec
stc
add
test
add
aaa
pop
mov
jno
push
cmp
jecxz
inc
call
jle
lock
fisttpl
xchg
xchg
jg
push
sub
les
xor
mov
add
xor
pop
pop
les
js
dec
sbb
add
and
addb
sbb
or
fcmovb
sbb
mov
loop
movsb
lea
subb
stc
andb
loopne
push
mov
or
push
push
pop
cmpl
clc
jg
xor
adc
std
test
jg
sbb
mov
jl
out
cltd
test
sub
cld
dec
fucom
pop
sub
cmovp
mov
inc
sub
pusha
jl
aaa
jecxz
cwtl
mov
or
and
inc
stos
aaa
pop
inc
ficoms
and
js
pop
add
pop
fisttpll
or
adcb
and
adc
mov
ret
jns
jne
mov
xorl
push
stos
or
pop
adc
mov
test
push
sahf
xlat
push
jp
arpl
xor
push
jnp
jo
mov
int3
lock
jp
add
add
push
lahf
mov
push
add
xor
ss
adc
push
int3
and
push
mov
sub
insl
outsl
jecxz
sub
scas
add
mov
dec
jnp
movsl
mov
or
mov
pop
adc
push
aas
ficompl
call
inc
mov
lds
push
clc
or
mov
or
push
push
inc
inc
xchg
js
std
fstpl
xor
mov
dec
es
test
or
scas
outsb
mov
mov
mov
int
push
adc
test
adc
shrb
divl
sbb
outsl
dec
lea
push
jle
enter
and
pop
add
shl
cltd
and
or
ret
enter
dec
and
push
frstor
jecxz
dec
out
cmp
pusha
xchg
and
jbe
gs
mov
and
lea
mov
push
sbb
push
mov
icebp
lds
xchg
movsb
sub
insl
fsubs
outsb
out
cmpl
pop
loop
add
and
lret
xor
xor
fcomps
push
jne
insb
xchg
push
dec
inc
and
lock
cs
xor
popa
xor
scas
push
rolb
mov
sbbb
ljmp
or
mov
fdivrs
mov
shlb
stos
in
out
add
push
movsl
xor
jmp
pusha
sbb
mov
adcl
dec
ja
mov
dec
jo
sbb
add
push
loopne
imul
mov
pushf
int
jb
jecxz
push
out
cmpsl
xor
flds
sub
lock
frstor
jne
xor
test
add
lret
pushaw
in
mov
adc
aaa
xor
dec
push
push
inc
sub
pop
test
and
and
pop
lcall
mov
cmp
orl
push
push
sub
sub
push
jp
cmp
sbb
inc
sbb
add
mov
aas
and
hlt
imul
pushl
mov
mov
cmp
or
xor
mov
cs
dec
mov
scas
out
or
mov
aaa
jno
sub
fsubs
adc
fcomps
sbb
dec
dec
sbb
jp,pn
aad
and
arpl
mov
imul
mov
out
inc
pop
dec
cmp
or
and
loopne
rcrl
fcomps
or
fidivs
pop
pop
ret
decb
cmpsl
push
loope
push
and
fsubrs
mov
adcb
inc
ret
mov
xor
jbe
add
cmp
adc
pop
subl
jo
inc
push
push
add
pusha
dec
out
iret
add
roll
js
xchg
add
push
mov
adc
call
movsb
or
clc
outsl
aad
and
push
pushf
mov
cs
xor
inc
inc
sbb
add
rcpps
mov
adc
leave
mov
jg
adc
xor
and
int
pop
adc
and
andb
adc
add
jbe
aad
nop
mov
and
fldt
adc
pushf
adc
adcb
push
outsl
int
pushf
add
dec
and
or
inc
jo
cmpb
and
adc
pop
mov
call
nop
and
add
dec
sbb
adc
and
insb
inc
les
xchg
test
in
and
dec
inc
addb
imul
sub
mov
insb
lcall
mov
jo
inc
loop
data16
incb
enter
pop
add
imul
repnz
xor
and
push
adc
and
in
mov
and
rorb
es
xor
fcmovb
lods
dec
adc
in
and
rcrb
test
pop
and
pusha
scas
cltd
test
inc
and
hlt
sbb
int3
inc
into
mov
xchg
rcrb
pusha
add
fsub
mov
dec
push
bound
xorb
push
add
sub
out
test
int3
mov
push
push
jo
push
push
jo
xchg
inc
adc
pusha
data16
dec
mov
clc
cmp
xor
ss
inc
pop
mov
and
call
pusha
nop
insb
test
popf
sbb
and
pop
or
outsb
data16
xor
inc
adc
loopne
fs
sbb
lods
cltd
sbb
cld
add
or
cmpsb
loop
in
xchg
xor
ret
pop
ficoms
adc
add
sbb
xchg
sub
je
or
mov
outsb
sub
add
mov
dec
cmp
shll
xchg
mov
and
inc
push
sub
push
bound
sbb
add
test
mov
xor
cmp
movsb
push
pop
xor
or
push
int3
int
xchg
inc
pop
xchg
or
mov
push
iret
pusha
inc
pop
cmp
cli
push
imulb
imul
jbe
push
sub
pusha
mov
pusha
pop
adc
jae
int3
dec
push
int3
sub
mov
add
and
fiadds
pusha
mov
fcomps
or
shrb
inc
and
into
fisubl
mov
xorl
push
push
orl
push
push
lods
enter
loop
adc
or
testb
inc
xor
pop
insb
sbb
int3
insb
in
xchg
mov
in
adc
clc
addb
or
lcall
pop
xchg
lods
xchg
mov
or
adc
mov
es
push
sbb
jb
js
ret
sti
js
and
and
nop
xor
inc
jo
les
xor
add
push
ret
or
rol
inc
inc
xchg
mov
xor
add
sub
int3
cs
jo
dec
jp
xor
dec
and
cmpsl
ss
in
cmp
adc
add
adc
xor
sbbl
cwtl
sarb
fadd
xor
dec
cli
cs
push
loopne
and
inc
mov
ljmp
scas
out
sarl
add
es
xchg
cwtl
int3
lcall
dec
xchg
dec
jne
xor
push
dec
pushf
lcall
push
adc
or
and
cmp
xchg
shl
pop
outsb
dec
push
and
pushf
inc
insb
in
jb
inc
adc
insb
pusha
xor
fsubrp
xchg
jns
dec
popa
adc
in
ret
sub
or
xchg
cmpsb
cmp
push
data16
dec
dec
sbb
push
test
adc
mov
and
push
push
and
and
cld
rcll
mov
call
pop
pop
loop
dec
and
loop
shl
sbb
mov
popw
xchg
and
jbe
dec
je
jo
ss
into
shlb
mov
mov
aad
pop
adc
push
mov
push
mov
andb
mov
rclb
sub
or
lea
push
and
inc
adcl
je
inc
and
sub
pusha
add
in
ljmp
push
push
dec
sub
mov
test
call
and
in
mov
xchg
mov
lahf
xchg
dec
mov
stc
scas
push
adc
add
ljmp
or
adc
daa
xor
dec
xorb
or
mov
mov
or
call
xor
mov
adc
repz
sub
loop
fisttpll
fcomps
out
add
inc
xchg
jmp
jl
xchg
sahf
mov
jb
xlat
inc
xchg
lret
fcmovnb
pop
daa
xchg
lds
mov
lock
inc
mov
sub
test
and
js
adc
push
pop
jge
nop
mov
jne
inc
dec
pop
add
pop
incl
mov
movsb
nop
sti
mov
arpl
sub
sbb
call
push
adc
inc
push
inc
sub
mov
jl
idivl
fists
ret
icebp
jo
pop
xchg
push
mov
lret
call
push
je
push
cmp
mov
cmc
cld
adc
add
add
mov
negl
nop
leave
xlat
jae
imul
mov
jge
jle
sub
add
inc
or
jmp
mov
test
push
mov
mov
cli
inc
div
adc
int3
cmc
pop
out
xchg
movsl
mov
dec
incl
add
faddl
push
push
mov
mov
dec
mov
mov
rorb
add
cmp
pop
xchg
scas
xor
mov
mov
xchg
sbb
es
incl
add
xor
inc
into
push
xchg
es
lods
jns
mov
sub
sub
mov
call
pushl
xor
add
scas
nop
lods
push
adc
mov
cmpsb
test
sbb
call
data16
push
scas
lret
stc
push
add
adc
or
push
lods
mov
mov
xchg
or
dec
pop
dec
fst
mov
mov
sarb
inc
fiadds
jno
cmp
std
mov
mov
shlb
or
inc
add
or
loop
outsl
inc
dec
in
jp
xor
xchg
das
clc
mov
xor
testb
mov
js
test
insl
jbe
mov
lods
xor
add
jecxz
xchg
mov
shlb
cmpsb
sbb
ds
lcall
mov
mov
dec
push
xor
inc
add
push
adc
pusha
xlat
cmp
ljmp
orl
pusha
adc
mov
sar
jle
xchg
jle
xchg
iret
popa
cmc
cmc
adc
dec
decl
ud2
out
stos
mov
mov
lret
push
add
pop
mov
incl
xchg
les
ret
test
sub
xor
add
call
push
lods
xchg
mov
shl
shll
or
lret
adc
mov
add
fisubs
das
stos
mov
add
addb
pop
cmp
dec
mov
stc
movsb
enter
cs
mov
inc
xor
and
or
push
add
fmull
pop
cmpb
dec
and
unpcklps
call
sbb
filds
jecxz
inc
cwtl
jge
js
sahf
fsub
xor
inc
lret
inc
mov
mov
andl
or
repz
pop
sbb
std
or
dec
shll
inc
test
inc
movsb
repnz
ret
in
jmp
repnz
mov
mov
and
pop
cmp
cmp
mov
pop
jae
add
bnd
pop
and
pop
dec
adc
and
cli
and
xor
pop
push
test
aam
cmc
fstps
in
xor
fbld
repz
cmp
clc
call
or
sub
in
lcall
shlb
test
xchg
ja
mov
addl
in
aaa
xor
or
pop
push
incl
mov
mov
fsts
stc
lahf
and
aas
loop
loopne
xchg
and
push
test
ljmp
andb
dec
inc
adc
mov
jo
jns
pop
in
cld
out
clc
pusha
mov
sub
std
in
mov
jo
or
and
loope
call
out
pusha
dec
in
adc
movsb
sbb
popa
movb
movsl
cs
mov
cld
ljmp
xchg
jmp
cwtl
push
movsl
mull
mov
xchg
add
stos
pushw
cmpl
ds
lock
or
mov
js
in
jns
jae
lahf
movsl
push
dec
xchg
lcall
mov
sbb
xorl
fs
xchg
dec
mov
sbb
or
ljmp
push
lods
bnd
push
rclb
jae
add
adc
pop
add
ljmp
es
flds
adc
xchg
add
cmp
mov
lea
ljmp
std
lods
sub
lret
dec
orb
add
add
add
fs
ljmp
or
jbe
add
lds
bound
add
dec
pusha
cmp
std
xchg
inc
add
test
add
test
lcall
inc
push
or
in
pop
fstpt
add
push
arpl
mov
and
mov
ljmp
es
add
movsl
add
push
push
push
add
xchg
test
jmp
xchg
pop
mov
scas
insb
mov
jg
lcall
ljmp
inc
arpl
bound
and
add
pusha
mov
stos
mov
xchg
xchg
push
or
add
add
pop
hlt
jg
sub
test
cmpsb
movsb
mov
mov
xchg
mov
test
cwtl
add
loopne,pt
fdivr
xor
std
lahf
fprem1
or
xor
push
dec
call
mov
test
dec
add
and
mov
sti
incl
lods
pushf
add
popa
mov
add
mov
test
xchg
loope
inc
ret
hlt
nop
sarb
push
jle
pop
cld
and
or
mov
add
and
pop
xor
pushl
sbb
xor
add
and
sub
xchg
mov
cmp
pop
adc
adc
and
ds
popf
pushf
decl
add
imul
add
int3
pop
stc
cwtl
mov
fnsave
scas
adc
jb
adc
pop
scas
fnstcw
mov
enter
and
ret
fisttpll
push
and
dec
xor
pop
ljmp
popa
frstor
push
insb
add
sub
rcr
lahf
imul
push
add
scas
je
add
neg
cmc
test
mov
add
testb
repnz
push
cmp
jmp
inc
in
add
adc
int3
push
mov
mov
mov
call
sub
sbb
jp
add
add
add
inc
out
cwtl
mov
lock
rcrb
leave
push
inc
sahf
outsl
add
cmp
add
lcall
add
mov
gs
pushl
ljmp
ds
test
or
jbe
sbb
decl
sbb
aaa
fists
int
mov
mov
aam
jp
stc
mov
psrld
ss
call
je
mov
leave
adc
inc
jecxz
mov
rorb
popa
shr
stos
mov
cli
decl
loopne
xchg
cmp
or
sub
and
test
dec
adc
scas
stos
xchg
mov
mov
dec
or
mov
incl
and
pop
jbe
push
xchg
xchg
stos
dec
inc
lcall
addb
push
out
cli
push
push
add
xchg
and
and
sub
aam
in
test
decl
mov
and
jge
das
jae
push
and
xchg
movsb
mov
push
popl
xchg
ljmp
iret
and
push
jp
sti
jne
ss
sub
sbb
xor
dec
xchg
xor
adc
rorb
cli
int3
arpl
dec
int3
jb
data16
and
add
daa
frstor
das
cli
ljmp
sbb
js
jmp
and
lds
inc
ds
and
lock
jmp
lret
jge
loop
or
add
cmp
sub
add
popl
pop
decl
cmovae
stos
sbb
into
rol
xchg
jl
jne
pushl
xor
inc
adc
call
faddl
mov
xor
pop
inc
out
nop
pusha
call
push
pop
xchg
xchg
ljmp
cmp
adcl
inc
test
es
cmc
xchg
popa
lahf
mov
rcr
jle
cmp
xchg
cld
and
or
xor
inc
adcb
loop
mov
sti
ss
incl
jge
add
lds
xlat
sub
dec
enter
incl
adc
mov
add
dec
mov
mov
jb
push
decl
xchg
lret
mov
cmp
inc
mov
aam
fstpt
inc
lret
jmp
int
shl
sbb
mov
jl
or
or
pushf
or
mov
pop
repz
dec
adc
test
cwtl
mov
xor
mov
xor
sar
lcall
ja
sub
cmp
fs
aam
nop
cmp
pop
adc
loopne
call
mov
loopne
jns,pn
lcall
loop
pop
pusha
div
mov
and
inc
xlat
or
and
xor
popf
into
int
f2xm1
js
pop
push
sbb
or
xorb
test
sbb
or
incl
loopne
roll
sbb
aaa
inc
mov
mov
and
and
xor
jb
rcll
decl
ljmp
inc
inc
lock
pop
xor
dec
lea
inc
popa
add
lcall
icebp
loope
mov
inc
inc
mov
mov
cmp
or
xchg
inc
loope
lcall
mov
je
loope
test
sub
push
mov
addr16
movsb
movsb
mov
cmpsb
jb
xchg
test
push
test
je
xchg
clc
or
addl
jmp
adc
pop
inc
and
xchg
xchg
orl
and
pushl
loope
dec
or
jle
leave
scas
pop
sbb
scas
and
addr16
addr16
loopne
jg
push
lret
fstps
inc
lods
adc
aas
push
andl
cmp
mov
xor
sbb
inc
cmp
sub
pusha
xor
sarl
jmp
js
shlb
pop
loope
into
arpl
addb
fwait
in
js
push
rcll
test
sub
mov
or
lds
mov
sub
or
movsl
andl
sbb
cld
decl
mov
icebp
addl
xor
mov
add
leave
into
push
cld
dec
fdivrs
sub
aaa
cmp
sub
hlt
jnp
pop
cmp
or
ret
dec
stos
mov
in
je
out
xor
pop
dec
xchg
decl
and
add
lods
mov
jecxz
sbb
ja
pop
test
cmpsb
pushl
leave
and
adcl
daa
mov
bound
fcoml
pushf
ljmp
clc
sbb
jo
add
rcrl
repz
pop
adc
push
ret
mov
dec
idiv
stc
mov
into
xlat
mov
push
ss
push
js
nop
lds
jo
cmp
fidivl
loope
mov
lock
jne
xor
data16
shl
add
outsb
mov
cwtl
loopne
ljmp
dec
add
stos
cmpb
shll
cmp
add
add
add
xchg
jbe
push
fisubrl
pop
mov
aaa
pop
or
and
push
fcmove
in
fdivrs
das
loope
jecxz
popf
ss
sbb
sbb
push
or
mov
inc
xor
xor
and
mov
xchg
insb
dec
cs
sub
shrl
enter
or
dec
mov
clc
scas
insb
fs
or
jl
fs
popf
sarb
mov
sti
inc
lock
mov
mov
jb
test
and
add
pop
pop
lock
jg
shrb
jb
pop
mov
pusha
push
scas
fmulp
add
popa
xchg
hlt
sbb
repnz
nop
aaa
and
or
push
loopne
push
sbb
outsl
cmp
lcall
ds
jge
stos
mov
add
aam
int3
sbb
lock
adc
xor
aas
dec
fldenv
rcr
mov
decl
imul
out
shll
icebp
jo
adc
stc
addb
decb
mov
add
xchg
ds
pop
add
mov
add
es
jg
std
pushl
mov
gs
sarb
mov
or
xchg
adc
je
jmp
sbb
sbb
add
dec
add
and
sub
dec
inc
ljmp
cli
outsl
fistl
inc
mov
lret
lret
inc
add
mov
fmuls
inc
add
incl
jg
xor
sub
mov
sarl
nop
mov
mov
cmp
lcall
mov
in
insb
mov
stos
pop
mov
push
inc
push
add
enter
cld
mov
and
dec
dec
mov
aas
mov
pop
add
mov
hlt
mov
lock
add
imul
and
out
xchg
pop
xchg
fisubl
in
add
inc
fisttpll
js
enter
mov
aaa
jl
outsl
sbb
pop
add
les
and
iret
mov
pushl
out
pop
inc
mov
sub
nop
pop
add
pop
mov
js
and
ret
pusha
aad
inc
test
push
les
jo
and
popa
dec
inc
dec
mov
lret
add
and
or
lcall
test
adc
add
sub
dec
decl
add
push
dec
push
ljmp
nop
out
mov
notb
cld
sub
or
add
and
mov
sbb
mov
inc
mov
and
es
negl
or
lret
sub
adc
lds
jecxz
popa
adc
or
mov
orb
sbb
pusha
icebp
inc
clc
test
mov
adc
pop
jecxz
jo
or
mov
push
cwtl
inc
es
jg
adc
push
inc
pop
dec
adcl
in
adc
xor
add
cmpsb
insl
pushf
movl
add
jg
outsl
iret
movsb
inc
push
pop
mov
xor
xchg
add
inc
ljmp
iret
addb
decl
call
arpl
dec
pop
push
out
sub
mov
dec
mov
cmp
mov
in
subl
and
dec
sub
ret
roll
testb
and
int
cli
or
inc
lret
cmp
je
scas
xchg
or
and
pop
cmc
mov
inc
or
aad
adc
out
call
sbb
inc
adc
arpl
sub
push
in
jne
sahf
jg
cmp
sbb
cmp
add
dec
push
icebp
imul
and
mov
xlat
and
xor
ja
or
pushl
dec
xchg
dec
cltd
rclb
dec
jo
in
cmpb
ss
mov
jnp
adc
or
jecxz
jns
and
push
dec
xor
sarb
sub
outsl
cli
fildll
rcl
cmp
or
sub
jg
leave
inc
inc
or
inc
sub
roll
sub
testb
push
mov
cwtl
pop
filds
std
test
xor
lidtl
popw
pushf
cmc
push
call
xor
inc
aad
mov
icebp
stos
dec
lea
cmovp
call
xchg
pushl
std
decl
mov
jle
xchg
adc
push
jg
mov
pop
pop
fs
jo
js
out
in
cmp
repz
push
cmp
incl
add
aaa
call
adc
daa
faddp
xor
cmp
movsb
mov
lcall
push
cmp
out
mov
jp
pop
pop
lods
mov
decl
addl
xchg
in
jne
dec
rcll
pop
or
pop
sti
adc
imul
push
stos
push
cwtl
movsb
pushf
roll
cltd
add
jno
and
pushf
repz
jns
dec
sub
push
or
jb
insl
adc
cmpxchg
fbld
adc
xchg
or
cmpsl
pusha
dec
scas
mov
jp
add
decl
iret
pop
add
inc
pusha
sbb
dec
sub
xchg
incb
jmp
loopne
pop
adc
in
sarb
popf
jo
dec
fbld
xchg
push
cmp
add
out
in
xor
adc
leave
dec
dec
cs
push
dec
pop
dec
adc
or
mov
and
pop
or
jns
andb
mov
popf
imul
out
es
in
cmp
pop
cmc
add
xchg
or
or
cmp
insl
fisubrl
mov
aaa
nop
das
test
add
loop
fisttpl
lods
in
cs
ret
nop
mov
cmp
ja
or
push
mov
test
stos
decl
jae
and
imul
dec
rorl
and
push
sub
pop
icebp
jmp
mov
mov
sar
add
addb
cmpb
dec
pop
bound
and
sub
lods
jge
imul
sub
decb
or
subl
add
pop
call
incl
add
mov
movl
aaa
add
sbb
dec
xchg
sbb
add
and
add
mov
jg
xor
fstpt
bound
ret
sbb
inc
sbb
cmp
pop
fdivrs
lods
arpl
add
dec
jge
add
cmpsl
sub
mov
jge
mov
je
and
out
jmp
cmpsb
pop
or
sub
cmp
or
loopne
push
fdivr
mov
add
and
inc
into
inc
cwtl
adc
das
inc
scas
adc
xor
or
jp
cwtl
in
cmpsb
mov
repz
ljmp
rcl
fidivl
push
cs
adc
inc
test
hlt
adc
fildll
push
test
mov
dec
adc
sahf
jg
loopne
fimull
sarl
test
sbb
jmp
add
xor
push
push
add
mov
je
fsubrs
pop
mov
addb
add
sub
ds
mov
xor
sub
mov
jno
gs
xor
insb
scas
clc
cmpb
out
lcall
and
fldt
xor
jle
inc
xchg
addr16
or
sbbb
jp
je
pop
cmp
mov
jg
mov
adc
loopne
jecxz
inc
movsl
add
pop
push
rcll
stos
decb
sub
and
pop
or
mov
aas
xchg
add
cld
add
lods
sub
jmp
iret
or
mov
loop
sub
insb
dec
outsb
jns
xchg
int
push
mov
mov
das
cmp
pop
ret
das
hlt
adc
jp
lret
adc
rorl
adc
jnp
push
mov
decl
add
dec
mov
test
sbbl
xchg
int3
dec
ret
push
mov
sub
mov
fadd
pop
sub
mov
rorb
jo
movsw
and
call
mov
xor
xor
std
dec
in
mov
dec
mov
inc
adc
mov
or
decl
or
push
sbb
outsb
mov
dec
ret
push
mov
lcall
adc
xor
pop
pusha
dec
mov
mov
sar
ljmp
fcomps
sub
push
fnstcw
inc
dec
dec
add
mov
jmp
mov
das
cmpsb
sti
es
mov
push
cmp
imul
incl
arpl
xchg
dec
adc
xchg
jecxz
daa
dec
loopne
jle
flds
stos
sbb
incl
xlat
mov
pop
sub
pop
push
push
jb
xor
and
in
outsl
jb
xor
xor
jno
lods
jmp
jb
fnstenv
jl
mov
stos
jnp
dec
mov
js
call
lods
std
jbe
je
cmp
jecxz
cld
adc
lods
adc
das
push
xor
cmp
lcall
push
push
and
pop
inc
mov
frstor
sub
dec
xor
jae
aad
pop
jo
and
incl
sti
outsb
imull
add
fimuls
sub
cmp
jne
std
or
mov
mov
sbb
in
mov
dec
pop
popf
in
and
cmc
mov
push
je
jbe
cli
cwtl
push
sbb
pushf
hlt
jle
pop
pop
xchg
inc
imul
adc
call
adc
pop
divb
dec
or
mov
jbe
mov
jge
push
sbbb
scas
or
mov
mov
addr16
mov
fcomip
pushl
orl
pop
cmpsl
ljmp
movsl
xor
cmp
lret
push
ret
pop
out
iret
xor
mov
imull
popf
test
and
pop
fs
cmp
sbbb
jg
ljmp
test
jmp
imul
xorl
mov
incl
jmp
add
mov
fstpl
or
xor
mov
je
cwtl
add
or
inc
push
mov
sti
test
xchg
call
lods
cs
mov
push
inc
test
mov
enter
mov
cwtl
ret
cmp
xchg
lahf
cld
xchg
fdivl
xchg
shrb
movsb
repz
mov
lock
mov
scas
int3
ficomps
xchg
cmp
mov
mov
std
stos
inc
inc
repnz
imul
sub
mov
inc
jg
out
push
std
push
cmpsl
mov
bound
sahf
imul
and
adc
lock
or
in
outsb
cmp
add
loopne
cmpb
pusha
movsl
and
xor
pushf
adc
lahf
and
sarb
pop
mov
rolb
xchg
mov
pushf
or
xchg
add
jle
pop
add
leave
add
xorb
leave
les
pop
in
add
imul
add
enter
inc
pop
aaa
cmp
lock
push
nop
stos
pop
cwtl
jle
arpl
scas
mov
loopne
idiv
and
push
add
negl
and
mov
in
pop
in
rcrl
loopne
sbb
add
dec
add
inc
mov
int
mov
call
push
push
mov
xchg
ss
add
add
xchg
pusha
cli
aas
fimull
push
add
repz
into
adc
push
dec
sbb
dec
outsl
xchg
std
int
cmp
mov
sbb
xchg
adc
sub
clc
adc
repz
test
cs
lret
loop
int
cmp
mov
jg
xchg
popf
test
add
popa
add
mov
lock
outsb
fs
shll
shll
lods
and
cmp
stos
add
clc
pushl
pushf
iret
add
nop
std
add
data16
movl
add
mov
adc
add
inc
addb
sarl
rclb
pop
mov
mov
adc
jb
out
pop
je
mov
sahf
pop
bound
add
hlt
or
sub
xor
inc
and
adc
xchg
lcall
inc
ss
add
mov
mov
adc
cltd
cmpw
or
leave
cwtl
add
hlt
mov
mov
sub
sub
push
fildll
cmp
sti
and
push
lods
loopne
clc
lds
or
add
add
pop
stos
pop
icebp
inc
pop
lcall
fadds
js
xor
push
ss
decl
cmp
pushf
and
inc
mul
stos
cmp
roll
loope
lahf
mov
or
bound
js
push
lods
lret
jl
xchg
jp
insl
ss
mov
call
mov
das
sub
fidivrl
jae
cmpsl
dec
jmp
mov
pop
popf
into
incl
and
leave
jno
mov
hlt
cmp
dec
pop
jge
mov
imull
lcall
xchg
dec
pcmpeqb
adc
mov
mov
and
and
repnz
sub
sbb
loope
inc
call
repnz
jb
negl
or
hlt
inc
pop
xor
arpl
dec
xor
xor
dec
pushl
cmc
add
mov
or
push
xchg
incl
cmc
shll
movsl
push
mov
dec
mov
mov
inc
jo
test
add
stos
xor
ljmp
jmp
sub
lods
call
lahf
pop
sbb
es
fisttpl
cmpsb
push
std
test
into
or
cmp
mulb
ja
out
xchg
bnd
idiv
push
sti
adcb
and
loop
ljmp
repz
jbe
add
add
js
push
pop
and
incl
arpl
enter
adc
add
mov
mov
cmp
adcl
xchg
out
cmp
inc
rolb
or
loopne
adc
lret
jne
cmp
pop
or
enter
pop
mov
ds
or
cli
fcoms
ljmp
iret
icebp
jno
and
mov
das
adc
add
push
and
xchg
mov
decb
cmpsl
fs
dec
sbb
adc
bound
push
rcrb
decl
std
sub
shll
cltd
mov
and
inc
iret
shr
mov
decl
sbb
das
mov
pusha
xchg
cld
pop
push
and
pop
js
inc
call
and
and
push
aaa
and
push
mov
add
mov
or
call
and
mov
fdivs
sub
pop
push
loope
pop
lcall
mov
sbb
sub
incl
fs
add
adc
lods
testl
sub
ret
inc
mov
or
pusha
bound
test
xor
mov
shlb
nop
dec
mov
fdivrs
push
addb
addr16
xor
scas
sub
mov
loopne
cmpsb
mov
or
arpl
or
out
sbb
dec
and
pop
cwtl
sub
push
sub
add
pop
pop
xor
and
roll
lcall
add
repz
adc
fs
inc
push
das
add
test
iret
and
nop
xchg
or
pop
push
bound
add
xchg
lock
mov
das
lea
or
mov
pop
add
fldcw
pop
sbb
popl
cmp
fdivrl
andb
add
call
lcall
dec
sbb
push
jge
adc
mov
xor
sub
fs
pop
inc
cmp
movsl
mov
movsl
sbb
rcrl
pop
push
adc
lcall
arpl
push
add
mov
pop
pusha
push
add
inc
inc
scas
push
add
repnz
ljmp
push
ja
out
mov
imul
sbb
inc
mov
or
popa
shll
mov
cmc
decl
and
dec
jp
mov
pop
fcoms
pop
icebp
add
and
dec
xchg
xchg
shll
pushl
pop
nop
je
xchg
jbe
sub
out
lds
xchg
insb
xor
adc
add
incl
test
push
fwait
pop
jb
lret
addl
cmc
dec
dec
mov
ljmp
inc
inc
and
inc
pusha
test
hlt
or
add
and
imul
xchg
out
sar
decl
mov
loope
add
sub
test
aam
mov
sub
incl
fwait
cmp
pushf
push
test
sbb
scas
dec
mov
mov
outsl
add
sub
leave
adc
and
xchg
lcall
insb
lds
mov
mov
push
notl
xchg
jbe
movsb
jnp
or
je
xchg
mov
subl
mov
adc
push
clc
jbe
loop
adc
cld
stc
test
pop
pushl
arpl
shlb
push
ret
pop
or
int3
push
shl
out
and
dec
cmp
jmp
lods
dec
sti
clc
xor
jo
push
mov
and
sahf
mov
mov
fcomip
test
sub
inc
push
rcll
push
or
pop
add
adc
imul
and
sub
xor
mov
cmp
jbe
insl
nop
cmp
mov
adc
ljmp
rcll
pop
sub
adc
int
repnz
mov
lcall
dec
push
push
jecxz
mov
fucomi
cli
jmp
add
adc
ds
pop
xchg
add
call
gs
and
sub
js
mov
push
xchg
add
popa
or
mov
cs
xchg
dec
dec
out
and
add
and
sub
fiadds
stos
testb
scas
cli
dec
sub
enter
cltd
jno
cli
sub
std
icebp
outsl
sbbb
mov
and
es
add
popa
and
movsb
out
cli
push
push
jnp
test
pop
add
add
adc
add
jecxz
mov
cld
lock
decl
sub
sub
jmp
jmp
notb
and
mov
cmpsl
sub
js
insl
add
shlb
mov
test
fldl
ret
fdivs
in
das
ds
dec
jmp
add
hlt
scas
dec
nop
incl
xor
pop
xor
insb
orl
out
clc
ja
cmpsl
fwait
add
add
adc
dec
clc
add
es
mov
orl
jg
fldt
ss
or
pop
scas
lret
add
out
in
jns
int3
mov
out
in
mov
ret
cmpsl
mov
cli
or
jle
add
lods
loop
jecxz
flds
jg
cmp
imul
clc
or
cmp
pop
sub
mov
call
adc
add
add
shlb
in
jne
cmp
lcall
add
addb
add
aad
subb
ds
cmp
mov
add
sbb
loop
stos
add
jns
sti
xor
pop
mov
std
jecxz
xor
add
mov
mov
adc
in
jnp
insb
jmp
jmp
cmp
xor
in
sbb
jp
add
mov
stos
add
adc
test
push
jle
and
decl
add
xor
enter
jbe
pusha
push
sbb
add
adc
adc
sbb
roll
dec
xchg
cli
mov
sbb
shlb
jle
movsb
inc
add
popf
xor
incl
outsb
cld
add
jecxz
cld
xlat
mov
push
mov
fcom
sbb
jb
pushf
aad
push
movsb
mov
add
or
pushl
iret
mov
out
sarb
jns
sub
mov
pop
inc
sbb
mov
jle
stc
xorb
lock
ret
mulb
lds
inc
mov
xor
or
aam
xchg
mov
adc
adc
push
fs
lods
js
aas
push
or
rcrb
jb
sbb
fs
xchg
dec
iret
stos
popf
in
add
subl
sub
leave
and
cli
jmp
sbb
aad
lock
fists
repnz
mov
subb
int
push
fadds
dec
test
mov
adc
aaa
mov
xchg
or
push
adc
out
ja
add
daa
or
cmc
mov
pop
pop
inc
cld
xor
inc
push
sbb
imul
inc
insb
add
cmc
popf
or
cmp
popa
and
jb
adc
push
inc
loope
mov
mov
jge
vmwrite
lock
jmp
sub
cmp
mov
clc
sub
push
lea
faddp
xor
inc
dec
xor
arpl
mov
jle
test
pop
jmp
jnp
addr16
mov
or
add
or
aam
xchg
push
xor
push
jns
les
jl
loope
dec
jl
sbb
jmp
push
test
sti
push
aas
inc
add
xor
lods
aad
imul
sahf
call
insb
cmc
lods
in
incl
xor
inc
cmp
sahf
xor
enter
sub
or
pushl
mov
jp
xchg
xor
dec
fwait
and
scas
scas
push
ret
push
outsl
fsubl
je
pop
jmp
std
cmp
add
and
ficompl
sbb
vmovntps
dec
lcall
test
cmp
push
and
inc
sub
cmp
and
jno
and
mov
fisttpl
mov
out
pop
adc
mov
xor
cld
dec
sub
dec
pop
les
into
pop
push
fstpl
mov
push
lea
addr16
lods
mov
mov
call
loopne
sbb
in
iret
jnp
cmp
and
xor
mov
mov
decl
cld
push
xchg
mov
stos
push
lock
or
lods
mov
mov
mulb
add
ficoml
and
gs
sub
sub
pop
jg
mov
mov
data16
mov
sub
push
xchg
inc
ret
decl
sub
push
loope
jo
sti
data16
mov
loop
in
decl
fadd
cli
sbb
test
pop
jo
pop
or
pop
rcrl
ss
lock
mov
sbb
shll
sbb
scas
lret
int
xor
cwtl
dec
cmp
ficoml
mov
and
and
add
lcall
sbb
loopne
add
jns
cld
jge
add
mov
scas
mov
cld
dec
inc
adc
pushl
stc
sub
and
mov
in
icebp
ret
push
pop
pusha
pop
and
shrb
dec
dec
xor
mov
xchg
lret
and
adc
fdiv
mov
jno
mov
jns
dec
das
loopne
push
xlat
lds
add
sbb
xor
out
popf
test
xor
aad
pusha
add
push
sbb
or
dec
sub
mov
inc
sub
inc
popa
inc
out
or
dec
dec
inc
cmp
push
sub
dec
push
lds
and
aad
call
xor
addr16
lock
jnp
jnp
pop
jp
ljmp
pop
jp
inc
sbb
ljmp
cmpsb
inc
xor
sbb
push
ret
or
dec
dec
fisubl
andl
cld
jmp
nop
and
adc
push
xchg
jmp
cwtl
pop
add
popf
jg
insb
inc
sbb
jp
icebp
movsl
mov
dec
lds
cld
xor
jmp
shlb
shlb
or
push
push
dec
sbb
xor
xorb
call
fisubrl
mov
js
aad
insb
mov
sub
nop
inc
xchg
je
lock
sbb
inc
adc
xchg
mov
cli
lcall
or
xchg
or
adcb
jns
jge
xor
call
sbb
or
xchg
jb
jl
push
jmp
pop
pop
fistps
jg
sbb
cwtl
iret
pop
sahf
mov
sub
dec
test
scas
aaa
add
mov
arpl
mov
adc
dec
scas
push
pusha
cmp
inc
sysexit
sahf
fadds
mov
jbe
cltd
stos
adc
sub
jo
cmc
test
ljmp
aaa
mov
push
sbb
rcrb
sbb
push
decl
cwtl
lea
mov
aam
xchg
and
std
mov
jo
push
xor
roll
pop
sub
clc
mov
lret
xor
insl
scas
push
and
add
fists
cmp
inc
push
and
ds
jo
lock
test
add
jg
jns
dec
enter
imul
cmp
subb
rep
adc
nop
incl
push
and
push
cmp
and
pop
cmp
or
mov
lods
decl
movb
mov
xlat
cmpsw
fistpl
lahf
test
mov
push
mov
int3
pop
bound
in
imul
dec
jle
das
mov
movsb
jle
sar
ljmp
sarb
int3
xchg
adc
jne
adc
jle
stos
xor
push
pushl
cwtl
xchg
fmull
sub
outsl
data16
sub
mov
fsubs
test
cmp
xchg
jne
inc
and
hlt
jg
add
addr16
push
pushf
add
cld
nop
jle
mov
jo
xchg
jo
out
and
decl
push
inc
cwtl
sub
jb
les
ret
js
push
fdivr
xor
clc
sbb
imul
and
sbb
decb
fstpl
adc
js
or
call
es
incl
cmpsb
test
in
xlat
fs
dec
mov
cld
xchg
and
inc
pusha
ret
aaa
shll
push
jle
xor
lcall
inc
mov
in
inc
xor
movsb
arpl
or
sti
sub
pop
adc
mov
and
cmp
dec
adc
nop
inc
sbb
xor
or
jmp
push
pop
out
add
jp
loope
stc
aas
cmp
lcall
int3
inc
inc
inc
push
mov
jp
bound
push
and
call
lahf
cli
dec
or
nop
inc
gs
mov
addr16
leave
mov
mov
inc
ficomps
pop
adc
inc
clc
mov
push
adc
xor
xchg
mov
ffree
incl
cmpsl
fstps
or
sarl
dec
adc
xchg
lcall
test
push
ja
icebp
lods
cmp
xor
and
sbb
add
scas
mov
insb
in
mov
jl
cwtl
cmp
add
call
jo
push
lods
je
jnp
subb
iret
adc
mov
incl
fildl
cmp
adc
loop
push
fwait
test
cmp
lcall
sub
cs
sub
inc
cmp
xor
mov
jbe,pt
in
jns
mov
dec
mov
dec
aas
rcrb
pop
outsl
clc
mov
inc
je
fadds
ss
pushf
or
pop
fdivr
jmp
jp
enter
push
push
ret
pop
pop
mov
xchg
test
nop
leave
lcall
call
std
and
fld1
stc
pop
sbb
adc
add
jecxz
nop
ds
je
push
addb
add
inc
je
fst
jo
adc
add
jg
enter
xor
test
iret
push
jg
dec
adc
sbb
out
add
cmp
or
test
lret
addl
sbb
mov
mov
push
ljmp
inc
xchg
loopne
jae
rorb
pushl
adc
add
jbe
and
adc
psrlw
clc
lret
loopne
cmp
jne
in
stos
adc
hlt
xor
mov
je
or
repz
add
xchg
pushl
mov
push
xchg
mov
add
cmp
xor
pushl
leave
and
dec
and
and
lcall
add
push
mov
mov
mov
lea
loop
gs
pusha
mov
adc
add
xor
out
xor
ljmp
test
test
incl
into
lcall
mov
cmp
mov
lea
dec
adc
adc
lock
incl
fsubr
cwtl
adc
rcll
push
add
jae
or
rolb
pusha
mov
icebp
cmovo
jmp
lds
push
xchg
cmp
orl
int3
cmp
pushl
insb
outsb
inc
pop
add
das
imul
xchg
mov
add
xor
ljmp
and
call
adc
aam
jb
mov
mov
cs
stos
or
call
jmp
xchg
push
mov
shrl
cmp
pop
popf
mov
arpl
int
pop
or
pop
lock
lcall
sub
inc
jmp
fs
movsl
xchg
insb
das
aaa
dec
xchg
add
push
mov
call
std
nop
lret
and
fcmovb
dec
sub
sub
rorl
dec
add
push
and
loope
push
sbb
and
mov
and
push
adc
jo
cmp
lea
call
cs
mov
push
mov
jl
sub
push
jmp
iret
divl
add
cmpsl
mov
mov
add
lds
rorb
adc
ljmp
roll
or
iret
test
sub
lods
outsl
cli
decl
adc
sub
movsb
xlat
push
mov
sub
dec
fld
and
jmp
mov
in
lahf
and
push
dec
mov
insl
cmp
out
mov
scas
pop
pushf
xor
cmp
clc
fcomip
hlt
ret
test
faddp
push
aad
xor
sbb
call
dec
or
mov
push
push
cs
dec
pop
lock
dec
mov
add
incl
clc
xchg
mov
inc
inc
add
add
add
xchg
jg
adc
xor
add
loop
iret
dec
data16
xor
and
pop
push
incl
mov
mov
sbb
test
xor
cwtl
lock
mov
fcoml
arpl
mov
xor
add
sbb
fildll
dec
push
add
fnstcw
or
sar
xchg
decl
enter
inc
xor
lds
or
inc
add
ljmp
gs
and
and
add
sti
int3
push
dec
filds
or
dec
test
call
adc
inc
lods
mov
sar
inc
loopne
fsubl
mov
inc
cmp
push
pushf
add
xor
clc
jg
mov
nop
sbbl
lock
dec
cwtl
adc
ljmp
nop
adc
pop
mov
and
push
mov
iret
adc
jae
insb
xor
mov
popl
mov
rcrb
mov
cmp
inc
aaa
adc
loopne
fistl
and
or
bound
jle
and
adc
add
ljmp
and
dec
push
add
imul
mov
mov
inc
and
and
sar
add
xchg
inc
inc
pop
add
add
test
loop
test
adc
lret
xor
dec
push
and
insl
inc
adc
dec
decl
inc
jne
xor
push
fsubl
cmpsb
and
and
xor
cmp
add
int3
adc
loopne
icebp
xor
aaa
pushf
and
cs
test
add
dec
adc
rep
add
fisubs
jno
rolb
push
outsl
add
pop
sbbb
jge
fnstenv
neg
call
gs
pop
mov
loopne
out
push
stos
push
pushf
and
sahf
adc
add
push
std
ljmp
sub
mov
inc
repz
inc
pop
cmpl
test
mov
inc
mov
jo
mov
xlat
std
add
adc
sbb
xchg
fildl
shl
loopne
dec
sub
fcomip
lret
fiadds
sti
add
mov
cmp
int3
mov
sarl
mov
fsubs
clc
orb
inc
add
push
add
push
std
dec
incl
loope
add
xor
cmp
bound
inc
dec
lcall
test
sbb
ss
mov
xchg
dec
repnz
sbb
inc
cmp
jns
cmp
lods
jl
xlat
lods
and
jecxz
lret
and
or
jne
adc
jl
mov
jl
lods
cltd
push
dec
jmp
shrl
dec
and
nop
mov
and
push
inc
dec
jno
add
adc
jno
inc
sar
jmp
add
lds
cmp
mov
nop
xor
xchg
push
outsb
adc
adc
xor
call
icebp
add
cmp
mov
call
dec
inc
pusha
inc
sub
mov
jl
decl
inc
mov
add
pusha
lea
shll
inc
mov
dec
inc
ret
incl
mov
mov
cltd
lock
int3
jle
test
call
jno
and
loope
decl
loopne
sbb
fildl
je
jge
cmc
xchg
dec
add
clc
adc
push
leave
fcomps
shrb
lods
sub
add
int3
aam
js
lret
xchg
outsl
clc
push
std
mov
xor
xor
ret
jb
xor
lcall
sbb
pop
xchg
stos
dec
push
or
adc
or
inc
stc
in
mov
les
add
or
ljmp
mov
or
pop
adcl
repnz
cmp
cwtl
das
cmp
jp
dec
std
pushl
enter
push
jmp
ja
shll
test
jg
xchg
or
adc
or
call
dec
test
adc
cmp
rcll
or
lahf
inc
jl
fs
clc
pop
mov
popf
mov
icebp
dec
jno
scas
jne
jmp
sbb
data16
xor
movsl
insl
outsb
and
sbb
or
mov
decl
lock
xchg
sub
xor
and
xchg
outsl
lcall
and
cli
inc
mov
push
xchg
ss
test
repz
and
test
mov
nop
leave
cli
pushl
fldenv
in
push
pushf
and
loop
add
fadds
xor
pop
sbb
ljmp
push
inc
push
out
stos
or
mov
addb
add
cld
pop
popa
sbb
shll
ljmp
adc
and
and
das
or
mov
mov
js
test
loopne
add
out
rorb
push
inc
bound
repz
lods
nop
lea
jnp
sahf
incl
sub
inc
in
test
sbb
xlat
jl
and
inc
xor
pushl
dec
sbb
xlat
lds
lock
int3
data16
inc
mov
inc
adc
lahf
and
movsl
and
mov
subb
lcall
and
push
nop
jle
push
aas
push
aam
outsl
jmp
jmp
fistpll
dec
or
cmp
mov
lea
mov
cmpsb
loope
lds
in
shll
push
dec
jns
sub
add
pushl
pusha
mov
mov
add
call
jnp
jb
pop
mov
imul
adc
decl
add
ror
fwait
xchg
xchg
mov
fs
rcl
out
jecxz
inc
dec
js
mov
ficomps
fisttpl
lret
push
sub
test
inc
lahf
push
in
loope
mov
in
cwtl
int3
xchg
call
shl
xchg
push
lea
mov
into
or
int3
pop
lret
frstor
leave
or
and
test
cmpsb
jle
sub
adc
jl
jmp
inc
stos
les
mov
aas
int
and
aaa
std
jmp
adc
add
insl
call
inc
mov
int3
lds
adcb
adc
add
adc
jns
test
and
pop
loopne
jle
hlt
xor
pop
fcos
aas
movsl
and
inc
mov
bound
sbb
out
clc
push
inc
inc
js
mov
ljmp
pop
push
dec
loopne
or
jo
jns
scas
sbb
nop
cltd
iret
mov
test
sbb
jecxz
adc
jbe
xor
mov
add
jmp
sub
xchg
cwtl
daa
inc
cmc
mov
sub
add
je
inc
leave
xchg
pushl
add
enter
add
dec
stos
test
xor
xor
mov
in
xchg
mov
add
popf
jg
mov
and
xchg
or
xorl
push
ds
xchg
loopne
cmpsb
jae
or
shll
adc
jnp
dec
incl
mov
and
push
push
enter
xor
call
cmp
pop
cmp
fbld
rolb
es
addb
popa
lock
outsb
pushf
mov
ljmp
pusha
mov
xchg
hlt
cmp
das
inc
and
pop
stos
daa
loopne
bound
xor
or
andb
xchg
xchg
dec
adc
jmp
xchg
xor
in
out
pop
cld
movsb
mov
xchg
add
out
fsts
incl
rorl
testb
adc
shll
dec
mov
or
jnp
ljmp
rcr
cmpsl
or
stos
cs
cmp
add
jge
add
mov
mov
or
call
ja
and
and
pushf
xor
std
pop
ficoml
cmpsb
das
movsb
mov
mov
inc
cmp
call
add
ljmp
xor
out
add
adc
mov
adc
out
cmp
lcall
lock
cmp
adc
call
shrb
insb
clc
push
or
cld
lods
inc
cmpl
stos
mov
call
push
fidivrl
push
jne
xor
and
xor
cld
cmp
test
pop
leave
lahf
sbb
mov
xor
mov
das
clc
ljmp
hlt
and
loop
add
call
xchg
into
sub
pushl
rclb
cmpsb
add
test
aam
stos
data16
adc
add
xchg
jge
inc
stos
pushl
shll
outsb
arpl
add
add
push
mov
sbb
cmc
lcall
rcrb
test
scas
loopne
sub
lcall
call
dec
add
xchg
shrl
add
sbb
pop
shl
push
roll
call
pop
dec
ret
xchg
shlb
add
ljmp
inc
pushl
bound
add
inc
or
sbb
dec
push
or
data16
in
lret
addr16
fcomp
ljmp
cmp
xchg
mov
inc
hlt
pushf
and
repnz
inc
add
pop
xor
push
pushf
jo
pusha
or
mov
xchg
sbb
xchg
and
mov
les
pop
mov
pop
add
jp
ret
lmsw
stos
orb
arpl
popf
inc
cmpsb
jmp
and
push
sub
push
adc
inc
dec
es
pop
cmp
fs
inc
and
jl
pop
adc
loopne
repnz
sub
int
insl
fildll
jo
lret
or
subl
jecxz
cmp
xor
incl
cmc
jl
mov
xor
and
push
movsb
cli
jl
adc
stc
sub
push
gs
pop
pushl
cld
pop
rol
mov
xchg
clc
cmp
daa
jecxz
clc
jl
xchg
icebp
add
movsl
call
testb
fidivrl
clc
add
jo
int
and
inc
push
loope
clc
and
mov
mov
push
inc
std
loope
or
stc
inc
xor
in
pusha
cmp
ds
incl
jmp
add
cmp
sbb
pop
mov
jmp
movsb
mov
clc
cmp
psubb
jl
popl
add
cmc
addb
into
cmp
in
push
push
jp
lock
mov
outsl
shll
inc
mov
pushf
jecxz
pop
cld
clc
mov
lcall
add
mov
inc
clc
jnp
xchg
idivl
cmp
sbb
sbb
mov
dec
pop
or
jo
or
xor
call
stos
clc
repz
push
jecxz
and
clc
mov
test
pop
call
icebp
rol
shl
pop
pop
mov
sub
mov
xchg
icebp
je
testl
mov
xor
ds
sub
cmp
pop
bndstx
sub
pushf
mov
cltd
repz
jae
mov
adc
call
mov
xor
cwtl
js
clc
rcll
push
push
cmp
mov
sar
cltd
pop
in
jl
daa
in
push
add
pop
push
cmp
fdivrp
lahf
pushf
add
jg
jo
jae
add
mov
jecxz
stc
ds
jecxz
dec
repnz
jno
xchg
mov
decl
cmp
test
and
filds
ret
mov
mov
jle
add
ljmp
cmp
jb
adcb
adc
jl
loopne
pop
js
fisubs
and
jecxz
mov
jecxz
fs
xchg
xchg
notl
lock
call
nop
icebp
mov
and
push
lock
xor
and
fs
out
cli
loope
pop
pop
jl
xchg
hlt
xchg
ss
out
subps
int3
icebp
xchg
pop
fprem
jg
adc
jp
fdivs
cwtl
in
icebp
lods
add
out
adc
stc
les
or
clc
mov
movsl
inc
pusha
xchg
lret
test
addr16
jmp
cwtl
cmp
sbb
popa
and
scas
enter
fldenvs
out
in
dec
sbb
mov
add
mov
and
ljmp
cwtl
stc
and
stc
loopne
leave
mov
add
and
push
cltd
inc
stc
mov
incl
bound
jecxz
jb
xor
mov
jo
add
stos
lret
pop
xchg
jle
mov
sbb
outsl
clc
decl
jo
pop
add
addb
stc
cmp
in
adc
sub
mov
lcall
test
cwtl
int3
mov
and
cmp
cli
test
jno
lret
adc
inc
jmp
xchg
scas
lods
push
xchg
frstor
call
or
xchg
push
jno
xchg
mov
add
and
lret
outsl
stos
adc
inc
adc
cmpsb
jg
push
insl
xchg
mov
lahf
rorb
and
add
inc
sbb
jmp
mov
inc
popa
inc
and
sarl
call
test
cld
pop
inc
addr16
movsl
subl
or
fmuls
sub
mov
push
adc
incl
fisubrl
imul
add
add
pop
ret
add
je
shr
stc
adc
decl
mov
sub
ret
mov
arpl
sbb
adc
inc
fldt
and
decl
lock
addl
das
cs
notl
cmp
icebp
and
mov
cld
xchg
xchg
leave
dec
pushf
push
orl
not
das
negl
and
mov
xchg
mov
mov
inc
cmp
dec
loop
cli
incl
pop
imul
jne,pt
ret
scas
adc
jns
and
movsb
into
fs
pushl
and
and
rcr
jecxz
dec
inc
push
mov
orl
dec
mov
lcall
shlb
mov
mov
cmpsl
adc
incl
fists
mov
iret
adc
mov
incl
sahf
repz
push
mov
inc
test
cmp
sbb
mov
mov
inc
sti
arpl
mov
test
sbb
cmc
loope
cmp
fdivrs
sub
add
dec
in
and
mov
cmp
lahf
add
jmp
jbe
loopne
xchg
xor
adc
popa
into
push
push
sub
inc
xchg
bound
inc
cmpsb
rorb
sarl
jnp
mov
push
inc
sbb
mov
push
pushl
inc
add
scas
add
mov
lea
sbb
sbb
xlat
mov
pop
cmc
ljmp
adc
test
dec
add
sub
ret
add
arpl
cs
mov
gs
add
mov
loope
fxch
outsl
sbb
cli
lds
fs
mov
sbb
lods
pop
std
push
sbb
mov
add
icebp
push
xor
jmp
addb
adc
inc
adc
cmp
pop
jb
fs
mov
pop
test
fsubr
ljmp
jle
das
mov
mov
inc
push
cmp
fstpt
int
add
mov
inc
div
shrl
rcl
mov
fcomip
incl
add
sahf
cltd
or
jns
enter
mov
aam
mov
sbbb
loope
js
test
fwait
xchg
mov
lods
mov
adc
mov
aad
dec
dec
clc
inc
or
mov
add
push
dec
inc
pop
lock
test
addr16
cmp
shll
mov
rol
or
add
fldt
push
mov
roll
dec
add
inc
loopne
scas
in
sbb
cmp
mov
fnsave
fsubrl
push
jmp
test
filds
cltd
jbe
outsb
shrb
int3
cmp
adc
incl
sti
add
add
stos
inc
mov
aaa
stos
andl
stos
ljmp
loope
out
jecxz
add
cltd
jge
jbe
ja
add
outsb
push
mov
sub
sbb
jecxz
sbb
xor
sbb
inc
ret
insb
adc
mov
add
jmp
xorl
sub
rsqrtps
cmc
rcl
xchg
paddusw
cld
scas
adc
add
xchg
pop
scas
stos
js
mov
xchg
icebp
idiv
push
into
iret
push
stc
add
jmp
aad
rcrb
jg
xchg
pop
mov
fs
add
aam
call
arpl
and
cmpb
lock
popf
mov
jae
pandn
incl
cmp
outsb
add
roll
inc
lret
jmp
out
ret
ret
add
jecxz
js
sub
lahf
mov
push
adc
loope
jg
xchg
mov
add
addb
and
sarl
jecxz
add
push
pop
in
inc
add
pop
cmpsl
pop
mov
or
jmp
mov
inc
adc
adc
ret
rorb
es
fcompl
ljmp
mov
rolb
pop
das
or
or
scas
test
stos
and
incl
push
stos
ds
mov
push
pop
lock
add
push
xchg
add
imul
add
es
inc
or
inc
imul
mov
xchg
xor
movsl
sbbl
into
sbb
lock
pop
hlt
or
cwtl
das
cmp
pusha
push
test
stc
lods
es
dec
cmc
rorb
loop
data16
clc
cmpsb
push
mov
sbb
enter
stos
fidivs
outsb
inc
jns
jns
dec
sbb
popa
mov
dec
lcall
mov
pop
shlb
xor
ret
rolb
leave
cmpsb
pop
mov
cld
mov
aad
or
test
incl
add
js
pusha
sub
ret
inc
pop
pop
inc
adc
out
fldl
sarb
dec
xchg
mov
add
mov
rolb
add
xchg
adc
in
push
in
stos
hlt
adc
or
and
in
sbb
or
scas
clc
push
aas
rolb
cmp
mov
xchg
lock
lock
inc
movsb
lcall
ror
push
jl
stc
and
pminsw
xor
jp
add
ja
call
dec
dec
and
sarb
sahf
mov
subl
sbbb
popf
fsubp
adc
push
loopne
dec
jg
push
inc
dec
inc
pop
mov
inc
mov
aam
mov
incl
sub
jl
movsb
das
subb
add
orl
movb
cld
mov
jmp
xchg
push
sub
addb
sbb
cmpsb
test
fimull
aad
incl
inc
jmp
lds
mov
dec
and
jg
stc
nop
popf
and
inc
lahf
inc
or
pusha
pushf
sbb
int3
xchg
mov
mov
loope
pop
bound
lret
pop
movsl
dec
lods
cltd
shrb
dec
leave
dec
ljmp
pop
push
dec
xor
sahf
jl
sub
push
mov
cwtl
pop
cwtl
dec
adc
fidivrl
incl
repnz
nop
and
jle
stos
add
into
jae
add
testl
push
mov
mov
loopne
dec
push
xor
les
dec
incl
cwtl
invlpg
loopne
inc
nop
xor
lds
jg
jmp
xor
enter
inc
push
aad
dec
test
jae
lahf
jno
call
cmpsb
mov
push
cld
in
adcl
dec
repnz
cmpsl
mov
fists
dec
xorl
lods
push
popl
decl
incb
outsb
mov
hlt
dec
sbb
fwait
and
fadds
decl
jo
mov
sub
jnp
mov
and
xchg
mov
xchg
add
das
clc
and
add
orb
and
pop
dec
and
scas
and
adc
mov
xchg
fisubl
pushf
xchg
sub
inc
cmp
es
cwtl
pop
push
xchg
lods
mov
incl
xor
test
out
ss
jbe
adc
or
bound
inc
or
jo
cli
jg
lcall
xchg
and
adc
rolb
xchg
sub
xchg
xlat
mov
icebp
lcall
push
inc
mov
shl
jl
imul
decl
adc
mov
cmp
mov
adc
cld
js
cwtl
xchg
jp
pop
es
cmpsl
or
pushl
in
inc
cltd
fnstenv
mov
in
mov
repz
and
push
xchg
roll
jecxz
mov
inc
dec
ret
dec
push
jl
or
xchg
dec
xchg
lcall
xor
push
call
and
adc
dec
pop
lea
inc
push
and
inc
sahf
loopne
pop
dec
mov
clc
and
xor
mov
jbe
pusha
ret
mov
or
add
addl
or
sarb
push
cltd
test
push
inc
sub
nop
push
sub
or
add
rolb
add
inc
cmp
in
lret
jg
shlb
cmpsb
les
push
lahf
pop
jae
xchg
jl
xor
loop
loopne
add
dec
jo
loopne
dec
pop
mov
lds
leave
and
add
pop
mov
jo
sub
jp
je
mov
jge
push
sub
sbb
test
movsb
clc
ljmp
insl
insl
mov
mov
jmp
or
push
jge
push
cmpsb
arpl
gs
popf
mov
ret
push
jg
jmp
mov
inc
inc
pop
repnz
dec
pop
xor
push
mull
push
nop
sbb
es
imul
and
inc
mov
pop
or
lahf
inc
xlat
mov
dec
je
lcall
mov
scas
xor
rcl
aad
clc
stos
jns
sub
stos
clc
push
in
mov
shll
adc
inc
mov
shlb
sub
lock
and
ss
mov
adcb
cli
addps
inc
shlb
pop
mov
push
sub
loopne
jecxz
xchg
lret
addb
std
jmp
sub
inc
jne
cmpsb
cwtl
lret
and
sbb
adc
jp
gs
iret
and
xchg
pushl
lret
clc
cs
jp
add
sub
call
xchg
cmp
sbb
push
sbb
lcall
xchg
test
sub
sarl
mov
daa
mov
xlat
push
sub
pop
push
sbb
ljmp
shl
imul
leave
fs
xchg
mov
mov
mov
inc
jmp
stc
add
lret
xchg
xor
jns
or
inc
int3
lahf
test
gs
mov
mov
push
cmp
cs
cmc
adc
sti
push
test
call
adc
icebp
cmp
dec
sub
lods
jae
jmp
mov
or
sub
pushl
bound
push
pop
insl
mov
fiaddl
inc
shr
call
fcompl
add
jg
insl
dec
sahf
jmp
xchg
sub
addb
jns
adc
fildl
jg
ljmp
ret
sub
xchg
adc
cs
and
xor
jmp
inc
scas
jg
ret
and
nop
xor
pusha
jge
cmp
sub
pushl
add
or
adc
push
out
nop
es
sar
cs
pop
cmp
shrl
cld
jmp
fiaddl
into
rcrb
addr16
add
call
and
cmc
out
clc
ljmp
inc
std
je
cmp
mov
xchg
loop
push
sar
outsl
adc
ljmp
cmp
dec
sub
movsl
iret
out
add
cmp
scas
lcall
and
pop
inc
pop
and
sbb
adc
cltd
les
dec
scas
fdivs
lock
lcall
je
scas
repnz
outsb
mov
and
leave
movsb
rcrl
movsb
mov
divb
aaa
sbb
pop
sub
xchg
jno
sbb
dec
mov
loope
testl
jp
and
scas
jp
push
xchg
sub
addr16
inc
add
sub
movsl
sbb
push
decl
pop
cltd
fldenv
sub
js
or
or
sub
cmpsl
inc
ljmp
xchg
sbb
mov
sub
sbb
cmpsb
mov
and
cld
decl
ret
adc
dec
mov
pop
sti
stos
jno
mov
decl
cmpsb
bound
in
orb
dec
or
mov
jg
sbb
jae
sub
jg
pushl
cltd
lret
nop
cmp
test
lret
repz
mov
mov
cwtl
ds
jns
jg
call
inc
mov
xor
orl
sbb
pop
fcomip
mov
push
adc
and
and
scas
adc
insb
ss
and
add
popa
ljmp
std
cmc
loop
lret
inc
cmc
mov
movsb
pop
cwtl
lock
movsb
pop
les
enter
or
xor
fbld
adc
mov
call
es
push
incl
mov
dec
push
repnz
mov
xor
ljmp
ja
shr
int
int3
or
push
or
xchg
mov
pop
in
jmp
and
sbb
insb
mov
sub
push
and
mov
ljmp
add
sbb
fiaddl
mov
fadds
cmpsb
sub
mov
shll
sub
out
sti
mov
shrl
or
mov
xor
bound
xor
cltd
iret
dec
cli
push
dec
adc
adc
addr16
cmp
ret
nop
sub
in
pushl
les
cltd
jnp
xchg
sub
addl
sbb
add
out
push
xor
push
or
push
popa
ja
push
js
xor
ficoml
push
add
jb
push
sbb
mov
push
inc
add
pop
xchg
or
jb
dec
mov
dec
outsl
xor
sub
fnsave
mov
out
enter
mov
xor
mov
mov
aaa
cld
incl
pop
jbe
inc
iret
pushf
sbb
lret
adc
sub
enter
push
inc
je
adc
fldl
popa
jno
and
cmp
in
std
or
fsubs
ja
imul
std
mov
inc
sar
ror
stc
cltd
jbe
xchg
jg
jle
push
comiss
and
pushl
sub
enter
jbe
adc
mov
js
cmc
sub
sti
pop
dec
decl
add
out
jo
sbb
push
cmp
fs
mov
jmp
adc
xchg
cmpsb
in
xchg
mov
enter
inc
xor
mov
lcall
ja
cmpb
lcall
sbb
out
loop
push
push
scas
leave
pushl
sbb
mov
popf
pusha
or
shrb
ja
xchg
js
pop
and
xor
add
decl
and
add
sub
push
aaa
push
add
inc
inc
and
xor
call
rclb
sbb
dec
adc
insb
inc
ror
push
add
popa
js
dec
fildll
xor
pushl
jne
jge
sub
add
sub
popa
add
add
and
mov
cwtl
jp
mov
ljmp
lods
test
mov
mov
dec
sub
jb
inc
and
add
add
mov
mov
test
and
outsl
out
into
push
sbb
mov
imulb
pop
add
and
push
clc
mov
add
xor
out
cmp
mov
add
push
loope
movsl
mov
icebp
or
xor
dec
je
jg
das
or
and
cmp
arpl
adc
movsb
icebp
inc
jle
push
pushf
mov
fisubs
cmc
cmpsl
call
addr16
mov
jle
imul
sub
xchg
mov
stos
dec
clc
cmc
push
sub
mov
hlt
outsl
clc
inc
stc
xchg
or
xlat
push
lods
into
loope
filds
pop
imul
pushl
popa
aaa
fstpl
pop
outsb
mov
jl
jge
dec
add
mov
sbb
lock
popf
mov
adcl
ja
and
add
sbb
add
add
mov
jnp
push
sub
jle
test
jg
or
inc
xchg
mov
lcall
dec
sub
and
mov
das
imul
or
pop
or
or
cmc
jg
lret
xchg
push
mov
jmp
mov
add
push
decl
add
xchg
mov
int3
add
inc
stos
xchg
incl
xlat
ret
ret
adc
jle
decl
jecxz
jle
pushf
push
cmp
popa
add
and
lahf
cmpsb
imul
cmpsb
xor
or
decl
in
add
xchg
jp
mov
push
mov
jg
decl
cmc
pusha
addr16
xor
test
mov
sbb
mov
adcl
xor
jno
lcall
dec
mov
mov
pusha
mov
mov
and
dec
pop
xchg
cmc
lods
inc
sbb
xchg
inc
test
incl
cltd
popf
dec
leave
subb
mov
xchg
and
mov
std
xchg
add
cld
ror
adc
jb
pop
sbb
mov
xorl
icebp
lcall
movb
pop
cwtl
mov
adc
lods
shrl
test
fcomip
xlat
out
sbb
xchg
inc
je
sub
mov
xchg
lret
lcall
lcall
cmp
xor
push
divb
and
dec
pop
pop
inc
xchg
outsb
xchg
inc
stos
enter
jmp
add
xchg
xchg
xchg
les
mov
push
mov
xchg
jns
cwtl
je
das
hlt
lcall
sub
dec
push
dec
or
movsb
loop
inc
jb
iret
xlat
mov
add
arpl
push
add
cmp
call
popf
pop
outsb
cltd
cmpsl
and
or
adcl
add
data16
push
lret
cmp
mov
mov
push
hlt
mov
rcl
adc
add
lods
add
jp
mov
mov
in
mov
mov
or
notb
add
sahf
and
xchg
andl
gs
pushl
test
lods
sahf
test
push
dec
sbb
sbb
add
fs
clc
sub
out
incl
sbb
stos
nop
stos
ret
movl
test
and
mov
add
mov
or
xchg
in
pop
cwtl
leave
sub
daa
xor
rcrb
test
out
cmp
mov
xchg
nop
int3
cs
sahf
pop
push
popf
insl
push
sbb
test
jb
repz
dec
lcall
dec
in
adc
sub
sarb
adc
adc
arpl
cld
bound
std
push
add
and
dec
jne
mov
pop
mov
daa
dec
adc
pop
mov
xor
mov
cmp
in
add
push
das
jo
decl
adc
cld
xchg
pusha
lcall
mov
ret
and
mov
sbb
test
ret
inc
xchg
dec
pop
je
popfw
mov
sub
movsb
xchg
aas
dec
push
sbbb
push
or
cmp
rorl
mov
testb
das
push
das
inc
cmp
xchg
mov
cmp
data16
or
out
test
mov
ret
mov
lcall
es
push
push
cmp
aad
xlat
movsl
push
inc
mov
setae
jb
pushf
add
add
and
or
je
ljmp
mov
cmp
jbe
xor
out
or
xchg
jmp
xchg
test
mov
stos
cwtl
inc
jle,pn
test
js
ljmp
into
jno
outsb
cmp
add
subb
cs
pushw
loope
pop
mov
pand
icebp
lcall
inc
adc
mov
pushf
jmp
ljmp
lods
mov
imul
jbe
inc
into
mov
popf
dec
and
or
decl
outsb
mov
jg
hlt
sahf
mov
xor
jl
add
mov
movsb
xchg
stos
idiv
ljmp
fcom
and
sbb
cmp
or
andb
dec
adc
incl
mov
and
insb
in
and
bound
movl
call
mov
jo
pushf
cmp
add
shll
push
nop
out
push
mov
es
das
clc
lcall
push
pusha
jmp
and
xor
cmp
in
push
test
sub
add
sub
cmpsl
xor
dec
or
test
jmp
and
inc
pusha
cmc
xchg
movsb
int3
sbb
lods
mov
stos
mov
ja
jle
adc
mov
ljmp
pop
and
jns
push
stos
add
ss
icebp
inc
in
jle
xchg
lcall
or
push
adc
popa
rorb
jno
stos
cli
cmp
or
sbb
das
jmp
xor
es
lret
lcall
dec
in
loopne
xor
inc
mov
jmp
xchg
dec
xchg
lock
je
mov
mov
mov
in
nop
scas
and
xor
xchg
pop
mov
movsb
pop
in
sub
mov
int3
popa
rorl
ss
push
pushl
inc
dec
fmuls
lea
pop
lea
popf
cmpsb
and
in
es
jp
or
mov
sub
rolb
sbb
push
data16
in
mov
inc
jns
out
aas
xor
mov
inc
jne
dec
popa
mov
adc
jo
adc
ljmp
or
mov
fnstcw
xchg
jbe
movsb
sar
sarl
mov
add
add
jmp
fldl
inc
push
cmc
xchg
aaa
fcoms
in
stos
cltd
notl
dec
pop
ss
decl
mov
sub
and
lcall
mov
jge
dec
ljmp
pusha
mov
fisubrl
cld
dec
xchg
and
push
out
cmp
xor
cmp
lcall
cmpsl
adc
cmpsb
ds
xchg
sub
nop
scas
stos
loope
push
fcoml
ret
dec
test
mov
sub
ja
inc
ret
lmsw
mov
push
xor
inc
test
pop
pop
and
dec
xchg
leave
call
adc
out
cmp
push
arpl
enter
mov
mov
out
int
and
pop
popf
mov
jg
insb
inc
xor
sub
xchg
add
data16
push
lock
pop
cld
or
mov
xor
or
pop
sub
mov
mov
enter
mov
es
lcall
lock
push
or
ret
stos
mov
in
test
rorl
lods
add
and
add
xor
pushl
mov
sti
pop
incl
pop
mov
pop
mov
mov
mov
add
scas
jbe
jg
inc
xchg
sbb
test
je
mov
ret
mov
clc
add
das
mov
jb,pn
add
mov
in
jne
imul
int3
pop
cmp
dec
in
ret
push
sahf
jmp
jae
push
adc
cmp
sbb
xor
add
adc
outsl
ss
aam
movsl
and
popf
inc
jbe
xchg
iret
or
in
dec
cwtl
cmpsb
mov
jp
mov
push
jmp
mov
pop
lds
inc
jecxz
cmpsl
repnz
xchg
adc
inc
cmp
push
mov
data16
mov
pop
lret
jnp
sbb
test
mov
add
ja
xlat
and
and
shlb
or
cmpsb
push
fistpl
stc
dec
fs
nop
xor
jno
jge
add
inc
cs
ret
sti
add
and
dec
das
push
ds
inc
xchg
and
cmp
in
sub
dec
mov
push
sbb
cmp
push
cmpsl
mov
in
and
and
sarb
adc
jb
repnz
repnz
data16
es
lret
or
adc
xor
clc
add
call
lock
sbb
ret
xor
insb
dec
cltd
add
scas
cs
movsl
add
sbb
or
outsl
mov
lret
push
or
nop
int3
pop
rorb
lods
sub
push
mov
das
int3
xchg
mov
cmp
mov
or
push
xor
pop
jae
lea
lahf
jne
loopne
xor
sub
dec
adc
xchg
inc
and
adcl
das
add
cmpb
es
das
cmp
outsb
imul
push
inc
mov
cli
cmpsb
and
fwait
lcall
cwtl
pop
popf
dec
jge
in
cld
mov
add
fucomi
out
adc
fsubl
add
adc
sbb
js
jmp
mov
ss
loopne
rclb
incl
iret
test
push
ret
xchg
enter
int3
xor
jge
mov
jg
rorl
sub
jo
and
adc
mov
les
loop
fldt
ljmp
pop
clc
xchg
sub
sub
inc
bound
cmp
and
scas
clc
mov
jp
mov
add
inc
popl
loope
mov
sub
scas
jnp
lods
mov
xchg
and
icebp
jmp
mov
push
addb
sub
inc
js
xchg
and
outsl
ds
adc
inc
cmp
add
pop
inc
leave
les
sub
xchg
incl
xchg
dec
sbb
pop
ret
add
inc
jmp
sub
mov
hlt
nop
or
sub
cmp
lods
jb
and
daa
sbb
fldl
mov
sbb
add
dec
call
jns
xor
roll
mov
mov
adcl
sub
mov
sbb
or
cli
sbb
push
hlt
fistpll
sub
call
je
xchg
add
loopne
aaa
test
stos
cld
xor
cmp
out
cmp
jb
mov
add
sbbb
push
pushf
cld
or
outsb
push
and
es
xchg
cmpsb
jmp
add
and
hlt
lcall
loopne
rorb
adc
or
sbb
jg
jp
cmpsl
add
inc
enter
ret
enter
jp
adc
jmp
in
inc
pusha
sub
fsincos
add
fdivp
add
add
jecxz
fisttps
incl
cld
mov
jle
cmp
lods
ss
add
jae
sar
mov
lods
xor
pushf
mov
inc
and
mov
and
popa
mov
sub
and
add
push
fsubrs
mov
js
call
or
add
nop
fimull
inc
dec
int3
fwait
insl
adc
repz
mov
pop
lock
loopne
int
push
adc
dec
mov
rcl
jnp
push
in
out
imul
mov
daa
lds
sub
enter
in
sub
ljmp
jb
fbstp
fildl
lahf
xor
test
movsl
shl
adc
push
jbe
add
lcall
in
js
stos
lea
dec
clc
out
inc
mov
mov
lock
add
test
adc
ret
nop
or
and
ja
cmpb
add
mov
or
and
xor
and
int3
cmpsb
or
mov
into
cmp
addr16
push
pop
push
jmp
sbb
mov
out
cwtl
jo
xchg
punpcklwd
ds
cmp
add
xor
push
dec
jmp
adc
xor
xorb
push
pushf
push
jae
push
jb
push
clc
ficoms
movsb
aad
jg
lcall
sbb
addl
fs
jmp
push
hlt
and
xor
mov
js
mov
push
cmp
enter
int
push
or
popf
and
adc
pushl
cmpb
and
dec
pop
movsb
decl
inc
adc
shl
out
jmp
jne
xchg
je
push
adc
add
adcb
xlat
and
int
incl
and
jl
and
and
or
xchg
mov
cs
or
imul
ljmp
inc
jno
add
test
xlat
jmp
jbe
push
adc
or
decb
xor
daa
ljmp
sarb
sahf
testl
mov
dec
out
pusha
bound
pop
std
jmp
mov
or
jb
jp
ds
inc
ret
idivl
dec
clc
inc
sbb
divb
std
ret
ret
mov
jg
pop
es
jno
push
pop
inc
cld
test
push
sbb
popf
clc
mov
jo
ljmp
push
out
out
call
dec
jp
inc
pop
sbb
add
jnp
adc
xchg
jmp
icebp
cmp
or
mov
xchg
rcll
data16
xor
repz
mov
incl
cmp
ljmp
popa
ds
incl
inc
cmc
jl
fnstenv
xor
stc
cmp
xor
icebp
test
jnp
lahf
inc
dec
incl
push
rcrb
sbbb
mov
loopne
cmp
mov
mov
and
pop
dec
bound
xlat
add
add
mov
xchg
push
mov
popl
ljmp
sar
loop
mov
push
test
stos
mov
stos
push
or
sub
add
cmpsl
pop
sub
and
or
mov
jo
call
add
push
sub
inc
bound
add
dec
fisttpl
sub
dec
aam
decl
outsb
jne
mov
mov
add
andl
test
ljmp
push
rol
aas
add
and
add
mov
inc
adc
xchg
mov
mov
fisubrs
and
decl
adc
xchg
jmp
adc
rcrb
pop
sub
les
or
mov
or
and
fsub
mov
hlt
mov
adc
xor
and
fstps
add
push
mov
mov
xchg
out
out
das
clc
in
cmp
adc
stos
iret
lcall
push
movsl
add
orl
and
ss
push
mov
or
sysenter
icebp
xlat
test
push
ja
xchg
lock
mov
xchg
pop
aam
sbb
into
in
pop
inc
fsubl
decl
imul
test
aam
jo
mov
lcall
add
aaa
fldl
fwait
jp
aaa
add
sub
or
xchg
ljmp
xchg
test
mov
xor
add
clc
jg
add
mov
pop
cmp
shlb
add
jg
incl
xchg
mov
dec
push
out
cmp
icebp
mov
sbb
pop
jno
cld
jg
in
or
mov
sbb
lahf
inc
push
or
iret
inc
int
ljmp
xchg
sub
popa
loope
pop
wbinvd
push
push
iret
jb
push
add
lods
add
sbb
daa
sub
mov
lret
cli
adc
jle
push
add
xor
test
pop
add
push
sub
mov
and
aaa
or
xchg
pop
shll
loope
xchg
cmp
mov
incl
in
add
pop
adc
xchg
xchg
faddp
push
stos
repz
jg
lds
xor
popf
into
loopne
mov
xchg
inc
data16
inc
cmp
outsl
out
push
inc
jmp
mov
jnp
jb
out
pop
imul
pushl
cld
decl
in
dec
push
leave
mov
jne
xor
xor
jmp
mov
cld
or
es
pop
int
mov
mov
iret
or
lcall
or
push
add
mov
mov
mov
cmp
das
push
push
sub
out
push
sub
jmp
mov
xchg
jb
mov
sbb
enter
aaa
inc
divb
mov
decl
jge
xchg
out
adc
jp
xlat
cs
jp
test
add
inc
cwtl
mov
clc
mov
jmp
imul
movl
repz
insl
adc
jb
cmp
push
mov
lcall
fs
adcb
jg
mov
add
stos
mov
lds
mov
sar
out
dec
add
pop
jg
jmp
jne
dec
nop
adc
jo
add
adc
and
ljmp
xor
lret
aaa
mov
lods
clc
shlb
add
cwtl
mov
fiadds
lods
dec
mov
lcall
mov
pop
xchg
sbbb
mov
pop
ret
inc
jo
cmp
xchg
jmp
loop
cmpsb
das
push
pop
inc
popa
sub
sub
and
cwtl
decl
dec
addr16
fiadds
push
cmpsb
stc
rorb
js
sbb
in
sbb
jg
push
jl,pn
mov
sub
pop
mov
negl
mov
pop
pop
sar
pushl
push
or
cmpsl
cwtl
inc
xor
pushf
or
mov
jg
out
pusha
sbb
xor
out
arpl
cmp
push
popa
inc
xchg
ljmp
add
clc
jmp
mov
in
movsb
cmp
nop
xor
jo
inc
mov
inc
jp
jge
jecxz
nop
cmpsb
out
pop
dec
adc
jnp
stos
loope
bound
push
sbb
aaa
add
xchg
outsb
inc
in
jp
arpl
lcall
in
pop
cwtl
std
xor
pop
push
into
aaa
cmpsl
xlat
xchg
or
or
xor
cld
add
adc
xchg
push
xor
clc
adc
test
jmp
loope
jg
xchg
jne
loopne
lcall
popa
xchg
fwait
test
andb
stos
xchg
inc
inc
mov
pop
add
or
add
clc
mov
aas
bound
lds
sub
das
lcall
repz
jmp
es
add
jmp
inc
push
and
add
std
fdivr
inc
mov
xor
mov
pop
push
pop
iret
sub
stos
pusha
dec
add
shrl
dec
in
jg
xor
fwait
mov
in
outsb
fcmovu
cwtl
mov
mov
xchg
int
xchg
add
mov
int
ja
mov
mov
pop
jno
std
ret
inc
imul
loope
pop
stos
aaa
push
mov
outsb
inc
add
pop
and
xchg
mov
push
dec
dec
pop
and
test
adc
jb
jmp
les
add
add
add
clc
mov
in
fildl
xchg
xchg
add
pop
cmp
and
lcall
inc
mov
inc
xchg
sti
lock
cli
add
ljmp
mov
leave
add
rol
inc
ret
cli
sub
mov
cld
dec
add
and
ffree
movsl
es
arpl
push
inc
add
lcall
clc
xchg
xchg
pop
rorl
xchg
dec
mov
mov
fbstp
add
stc
add
or
and
push
sub
ret
js
xchg
add
loop
incl
mov
xchg
divl
add
addb
adc
add
shr
sub
add
jne
inc
clc
jle
pop
add
mov
cs
les
dec
fisubrl
imul
xchg
lock
daa
mov
add
or
xchg
or
fstpt
fbstp
adc
xchg
dec
aas
lds
push
mov
ds
or
add
add
add
dec
sbb
sahf
mov
and
pop
push
out
call
jnp
push
cmp
inc
dec
mov
push
cmp
gs
in
dec
add
push
pop
adc
decl
decb
mov
cmpsl
add
es
scas
shrb
fsubs
add
cmpsb
mov
mov
jge
lds
mov
xor
cmpsl
aas
mov
sub
in
and
pushf
ret
and
xchg
mov
std
dec
pushf
cmp
lcall
in
cli
or
dec
sahf
xchg
or
and
or
stos
or
push
pop
adc
in
sbb
lea
cmp
sbbl
add
adcb
jb
loop
add
xchg
loope
push
adc
pop
or
add
lods
push
jno
mov
out
add
jne
push
sbb
cmp
jle
xor
addl
arpl
mov
call
mov
adc
sbb
and
testb
test
add
sub
cmc
or
dec
mov
lcall
mov
insb
das
in
js
insb
inc
imul
add
push
xchg
sahf
cld
test
rcl
lods
int
scas
lea
fsubl
xchg
call
cmp
add
sub
in
mov
dec
pop
sbb
in
jl
push
mov
mov
push
push
adc
loop
ljmp
inc
sahf
mov
ss
sbb
pop
dec
xchg
xchg
add
in
jge
jl
fcompl
imul
ljmp
lods
out
pop
out
cltd
add
sub
pop
pop
jmp
sbb
xchg
and
jne
addr16
sarb
js
xchg
repz
pop
call
jecxz
test
ss
testb
loopne
pmulhuw
jge
lcall
pushl
loop
mov
mov
sbb
inc
sbb
aaa
pushl
or
sub
ds
mov
or
mov
adc
incl
xor
fwait
movsl
cmp
mov
and
cmp
cmpsb
into
and
cmp
xor
outsb
scas
adc
loope
jle
mov
rol
sub
push
lret
call
mov
pop
sbbb
enter
mov
sub
mov
outsl
mov
repnz
pcmpeqd
sti
sti
mov
std
cmpsl
ds
lret
sti
out
cmp
xchg
cmp
fmuls
fwait
add
or
jnp
dec
cmp
stos
pop
sahf
dec
out
or
or
sbb
push
mov
ljmp
push
popf
lds
sbb
lea
sbb
sub
popa
xchg
inc
xchg
je
int3
fdiv
push
mov
pop
mov
in
sbb
jp
mov
movq
in
xchg
insl
sarl
adcb
and
and
aad
ss
cmp
leave
cmp
mov
jbe
adcb
outsb
lret
sub
mov
adc
in
ss
pop
inc
or
xor
enter
loope
repnz
stc
imul
mov
xor
pop
xor
lret
cmp
pop
sub
pop
cmp
dec
or
mov
movsl
mov
fwait
dec
ljmp
add
notb
jp
inc
dec
std
pop
xor
cmp
enter
arpl
decl
or
aas
mov
push
cli
rorl
scas
mov
daa
jmp
hlt
sbb
aaa
and
out
jmp
movsl
mull
mov
add
push
dec
das
clc
cmp
sub
insl
mov
mov
sahf
pop
dec
lds
mov
call
lahf
push
cs
out
sti
mov
jns
mov
ret
ret
loopne
dec
xchg
xchg
pop
cs
jo
decl
pop
testl
sub
in
pop
push
shlb
popa
jp
jbe
dec
mov
push
lea
cwtl
decl
mov
or
pop
inc
les
push
shr
sbb
push
or
and
fdivr
mov
imulb
add
and
sbb
adc
stc
mov
decl
xchg
in
in
out
push
mov
add
ffree
xchg
inc
mov
les
cmpsb
shll
mov
mov
mov
adc
lods
push
jl
adc
repz
sbb
js
shrl
fcmovnb
jge
mov
test
mov
adc
lcall
imul
pop
hlt
xor
pop
mov
mov
fimuls
sbb
into
ret
push
xchg
or
gs
mov
adc
push
subl
mov
sbb
push
xchg
add
sub
mov
int
add
adc
pushl
cld
xchg
aas
xchg
or
xchg
bound
pop
mov
test
pushf
stos
aam
pushl
xor
cmp
jecxz
mov
sbb
in
jo
xchg
out
and
iret
jg
decl
push
add
add
xor
pop
fidivl
xchg
mov
pop
daa
jmp
ret
test
in
cmp
rorb
insl
sub
dec
lcall
sbb
mov
ljmp
imul
xchg
push
test
or
xchg
jmp
or
jl
jb
mov
gs
ret
xchg
stos
add
int
lea
mov
mov
das
mov
out
clc
mov
pop
mov
sbb
leave
testl
cmp
pushl
clc
xor
sti
pusha
iret
jg
jbe
inc
pusha
cld
and
or
xchg
js
call
enter
push
aad
scas
jo
test
xchg
ffreep
ss
pop
adc
adc
nop
rolb
call
xchg
add
insb
aas
mov
mov
jle
push
mov
mov
push
std
inc
test
stc
xor
mov
pop
mov
mov
push
cmpsb
idivb
xor
js
call
pop
cmc
lcall
fcmovnb
inc
cwtl
pop
sahf
bound
roll
jnp
test
push
jle
ljmp
loop
cmpb
or
fstl
mov
add
aaa
fmull
xchg
mov
pop
icebp
pop
push
and
mov
outsb
sbb
pushl
ret
sbb
or
xchg
xchg
cmc
mov
jo
cmpsb
and
jmp
mov
ja
xor
outsl
in
imul
inc
imul
push
into
mov
push
rcrl
shlb
cltd
dec
push
add
lret
mov
lahf
imul
jg
pop
mov
dec
cmp
in
cld
or
rcll
xchg
loopne
inc
sar
inc
or
loop
inc
adc
rcrb
mov
cs
lock
dec
fcoml
dec
nop
pop
cmp
xor
mov
mov
mov
popa
js
jmp
cmp
in
xor
dec
cmp
push
outsl
cmp
mov
xchg
aad
xor
or
rcrb
movl
push
decl
orb
or
loope
jg
stos
int3
cmc
je
mov
adcb
jp
incl
insb
aad
fdivrs
jecxz
daa
cmp
pop
push
mov
popf
mov
lods
cmp
ljmp
mov
and
add
xor
add
push
jge
jbe
pop
popf
insl
push
out
ds
jmp
xchg
sahf
movsb
fisubrl
fdivp
cmp
sub
popa
push
es
jno
call
idivl
xchg
es
addr16
inc
es
inc
jbe
mov
out
in
divb
xchg
push
cmova
xor
mov
push
rcrb
mov
and
ljmp
popf
mov
in
push
fildll
andl
in
inc
pop
mov
cmp
ljmp
testb
sahf
ror
mov
pushf
les
sbb
mov
or
xor
movsl
pop
sub
push
inc
stos
push
out
cli
mov
int3
push
stos
or
mov
or
call
sahf
lret
fcompl
hlt
xor
push
pop
gs
xor
dec
pop
aam
mov
fimuls
lcall
mov
pop
daa
cmpsl
les
xorb
cmpsb
push
notl
push
sub
jge
sub
add
dec
mov
dec
sub
dec
sub
ret
stc
pushf
repz
sbb
outsb
add
test
loop
sbb
popf
dec
mov
push
inc
movl
mov
int
lods
mov
je
dec
cmp
mov
mov
int3
mov
jno
sbb
inc
mov
mov
lcall
nop
sub
jnp
adc
jns
dec
mov
fdivrp
je
push
add
dec
xor
push
std
jo
int
gs
rclb
pop
scas
xor
mov
mov
fdivl
lret
das
pop
add
lock
je
pop
dec
inc
xchg
loopne
loopne
jmp
faddl
inc
in
popf
and
mov
inc
arpl
sub
fildll
fs
jnp
dec
lcall
jmp
insl
xchg
arpl
cmp
incl
decl
push
push
dec
aas
in
mov
mov
popf
inc
shrb
popl
cmp
ja
decl
or
or
out
pop
das
lret
cmc
ljmp
cmp
jle
xchg
outsl
das
cli
mov
jns
mov
mov
sub
ljmp
mov
scas
dec
clc
js
out
jno
add
shl
outsl
mov
call
pop
mov
outsl
cli
cld
enter
adc
push
xor
andl
loop
jb
in
stos
sahf
ljmp
incl
xor
cmp
decl
xor
repnz
into
enter
jno
jmp
mov
aam
and
mov
and
or
xchg
xchg
das
call
mov
xchg
mov
inc
sbb
push
in
js
mov
mov
insb
jns
jb
fcomip
inc
sub
dec
sbbb
incl
test
sub
mov
xchg
sub
mov
outsl
pop
cltd
push
and
push
push
inc
pop
popa
pop
dec
inc
mov
jg
add
popl
jns
mov
mov
push
inc
mov
and
insl
jnp
adc
jno
push
insb
rorb
cmpsl
inc
loope
decl
lock
jb
std
jge
xchg
fildll
xor
arpl
xchg
aam
int
add
cs
xchg
add
lret
sti
idiv
sti
decl
jo
aad
pushf
int
sub
lock
sti
ror
sbb
std
fnsetpm(287
fs
dec
mov
add
cli
std
enter
inc
pop
test
sbb
or
cltd
sub
and
into
cmc
sbb
out
or
daa
ret
idiv
pushl
outsl
mov
push
out
scas
pushl
lahf
insl
lcall
mov
push
insl
repz
loop
scas
jbe
sarl
leave
outsl
lea
push
inc
xchg
ds
std
or
test
sbb
aaa
mov
loopne
test
enter
mov
add
incl
inc
mov
and
inc
test
jmp
frstor
ret
jecxz
imul
xlat
fcmovnb
cmpsl
mov
inc
mov
fcoml
add
test
xlat
mov
xchg
decl
push
sbb
and
movb
fstl
ds
fadds
call
jnp
fisubl
outsl
outsb
dec
frstor
xlat
cs
lods
int3
pusha
popa
movsb
sub
incl
push
cmp
fidivl
int
adc
dec
call
repnz
and
test
and
adc
leave
iret
out
jbe
out
xchg
stos
ret
cmc
dec
cmp
data16
xor
out
ljmp
xchg
lods
and
push
xchg
mov
stos
insl
nop
cltd
adc
mov
cmpsl
int3
ret
mov
mov
ljmp
lret
divb
xor
xchg
les
sbb
inc
dec
aaa
dec
jo
lea
dec
pusha
std
pusha
push
and
mov
cmp
pop
call
divb
pusha
cmpsl
jo
mov
out
insb
dec
dec
mov
cmp
stc
dec
ja
cmp
incl
shrl
mov
stc
inc
xor
ja
cmp
lds
or
cmpsl
insb
repnz
fisubs
repz
push
xchg
adc
out
and
push
cwtl
mov
fisttps
jmp
jmp
push
xor
out
mov
cmpl
push
add
mov
xor
fs
aad
sub
jns
hlt
jecxz
xor
push
xor
scas
cli
incl
sahf
xchg
jo
aam
out
enter
mov
frstor
call
mov
sub
lock
ret
jmp
xchg
inc
pop
push
lods
neg
mov
loop
cmp
loope,pt
fs
jle
mov
push
xor
ds
pop
push
out
rcrb
push
add
or
pushl
int3
aas
sub
loope
dec
inc
push
fadd
insl
inc
sti
dec
ds
push
push
adc
les
pop
icebp
aaa
push
cli
push
mov
sbb
and
mov
add
mov
and
adcb
imul
xor
popf
xlat
mov
adc
nop
int3
or
cmpsb
fistl
aaa
stos
loopne
inc
leave
loopne
lret
insl
fimull
repnz
pop
mov
cmp
jge
dec
mov
outsl
pop
mov
pushl
sbb
sbbb
jmp
sti
mov
aas
adc
test
jbe
mov
xchg
inc
pop
jae
dec
jg
and
xor
fcomip
outsl
fsubrl
jge
addr16
cwtl
adc
xchg
test
jg
loop
cmp
add
jmp
mov
sub
aam
cmp
cmp
push
clc
roll
jg
jecxz
sub
sahf
mov
fptan
cwtl
lods
cmp
push
pop
cmp
cmpb
decl
xchg
inc
sbb
push
dec
shr
out
les
jb
bound
rcrl
in
loope
mov
lcall
bnd
sbb
leave
cmp
es
lret
mov
and
gs
jl
ljmp
outsl
addr16
dec
adc
adc
push
pop
xchg
xor
adc
push
fsubl
movsb
push
cmp
mov
xchg
fcompl
fcmovbe
ljmp
mov
jmp
sbb
mov
into
add
inc
mov
cltd
lahf
sbb
mul
aad
clc
aaa
js
and
jle
xor
push
mov
inc
iret
push
xchg
adc
into
adc
vpunpcklqdq
test
sbb
push
shl
ss
incl
sub
ds
push
aam
sub
into
daa
les
divb
xor
lcall
xchg
xor
lods
cmp
xor
cli
sbb
mov
inc
repnz
call
rcrl
jns,pn
frstor
fsts
pushf
sub
mov
jmp
loopne
jmp
ret
loope
xor
mov
pusha
mov
xchg
xlat
mov
ljmp
into
call
or
inc
cmp
test
inc
aas
inc
mov
imul
pop
jmp
mov
pop
push
fidivrl
std
sbb
inc
pushl
aas
mov
inc
sti
jno
jmp
bound
pop
shrb
test
and
outsl
cli
lcall
jge
stc
sarb
or
ljmp
xor
push
push
or
xchg
ficomps
in
mov
jne
test
jno
rorl
jno
add
insb
pop
lret
adc
lcall
cmpb
push
fnstenv
mov
cmp
negb
icebp
jmp
sub
fdivl
push
and
subl
jae
push
mov
xchg
pop
jg
adc
outsb
movl
filds
xchg
lea
aas
mov
testb
pusha
outsb
movsl
and
or
add
jmp
xchg
movsl
xchg
mov
fildl
jg
scas
push
outsl
push
adc
ss
movb
subps
inc
jne
shlb
ljmp
fidivrs
jge
mov
and
orl
pop
sub
aas
sub
sti
arpl
pop
hlt
pushl
daa
ret
sbb
sbb
inc
sub
out
jmp
rolb
mov
mov
lcall
jl
push
pop
cmpsl
mov
mov
add
scas
aad
das
es
add
sbb
inc
stos
pop
lcall
icebp
mov
sub
jo
push
pop
movb
popf
das
inc
cmc
rep
jl
add
mov
add
lock
cli
sub
and
sbb
cmp
push
add
gs
decl
xchg
sbb
fsubl
push
enter
loope
jmp
pop
fs
addl
lcall
ret
adc
sbb
call
outsb
test
repnz
jge
fisubl
xorl
ljmp
inc
jo
adc
movsb
pop
sub
pop
or
pop
xlat
and
dec
pop
loope
pop
loopne
fwait
gs
sub
inc
add
add
dec
in
push
rcrl
leave
jmp
mov
imul
mov
test
pop
sbb
dec
pop
stos
add
icebp
rol
call
repz
inc
sub
add
cs
mov
jno
fnstsw
out
pop
jg
sbb
ljmp
xchg
xchg
jle
cmpsb
lds
mull
mov
xchg
enter
inc
sub
jp
daa
scas
cli
jmp
jns
ret
dec
jae
into
cmp
int3
dec
pop
pause
jae
dec
pop
xlat
jo
sti
xor
outsl
cli
pushl
cs
addr16
test
jle
add
ja
mov
out
mov
mov
add
mov
lret
sub
cli
pop
pop
call
mov
roll
das
adcl
arpl
and
notb
sub
adc
push
and
cld
xchg
cmp
pop
es
aaa
cld
xchg
cltd
xchg
fisubrl
pop
out
xchg
fldcw
fdivrp
call
xchg
aas
stos
sub
add
sbb
xor
cmpsb
xchg
xor
jecxz
cmpsb
or
call
into
lret
aam
xor
xor
or
sub
jge
incl
add
push
xor
mov
cli
push
test
lea
in
mov
movsl
dec
adc
pop
push
ljmp
lcall
out
movsb
cmp
adc
jle
jno
push
pop
test
jmp
push
lahf
aam
mov
cmp
adc
stc
cld
cli
xor
js
loop
mov
mov
call
std
fs
mov
mov
test
test
xchg
push
pop
cld
mov
mov
loopne
decl
ss
sub
push
repz
xchg
push
xchg
push
mov
inc
xchg
movsb
in
ss
dec
sbb
inc
push
sub
or
iret
in
icebp
pushf
add
lcall
in
mov
sub
cltd
out
adc
inc
mov
push
adc
push
and
incl
popl
xchg
test
mov
jbe
mov
sub
mov
fdivl
jbe
stos
xchg
popa
mov
call
mov
sbb
enter
and
call
aam
lahf
iret
sbb
fistps
iret
fbstp
mov
int
loopne
lods
xlat
daa
add
pop
bswap
fcoms
mov
ljmp
scas
inc
xchg
or
cs
mov
add
movsl
popf
dec
repz
or
popf
inc
pusha
incl
cld
adc
cmp
daa
mov
cmpb
jg
jo
dec
pop
stc
jmp
in
loope
fcmovb
cmp
push
and
and
push
cmp
clc
in
jno
fdiv
call
sbb
push
pop
sbb
mov
popl
pop
rol
mov
scas
sub
loop
dec
jmp
mov
decl
les
icebp
roll
mov
gs
stos
xor
gs
iret
jbe
outsl
mov
std
pop
cmp
pop
cmp
and
mov
push
jmpw
or
mov
xchg
sbb
jno
movsb
xchg
xor
call
sbb
ret
repz
jnp
mov
test
mov
call
call
mov
mov
nop
add
dec
cmc
pop
push
push
loopne
mov
jge
and
jg
pop
cmc
pushf
or
fstl
sbb
pop
imul
in
xor
cmc
cmovl
jmp
sub
cmpsb
mov
jae
lcall
ljmp
mov
and
bound
fadd
xchg
lahf
repz
cwtl
ret
cmpsb
inc
movb
pop
sbb
call
inc
std
loop
push
inc
nop
xchg
xor
adc
or
scas
scas
cmpsl
andb
lods
mov
js
and
add
pop
aas
pop
ds
int
les
pop
ud0
call
es
stc
data16
in
or
cwtl
jp
inc
enter
ud2
sbb
cmpsl
mov
xchg
jle
ljmp
adc
jae
mov
outsl
lahf
test
push
mov
pop
jmp
sub
imul
leave
out
sbb
inc
in
in
test
ret
add
jb
xchg
add
es
stos
fsubrp
adc
das
test
pop
aas
cld
pushl
dec
mov
add
push
scas
add
repnz
push
clc
shrl
adc
lea
fnstenv
pop
cmpsb
cmp
lcall
cld
jno
fwait
or
or
jmp
jp
bound
cltd
pop
adc
push
xchg
outsl
pop
mov
cld
pop
cmp
cltd
cmc
lods
sub
outsb
ljmp
xor
push
int3
cmpsb
pushf
push
mov
jg
adc
xor
scas
cld
in
nop
inc
sub
data16
jo
or
rcll
test
xor
andb
int3
fmuls
cmpsl
mov
movsb
push
jle
push
xchg
aas
nop
pushl
cwtl
loop
inc
mov
leave
lret
jbe
pop
sub
jg
scas
jmp
xchg
or
lea
dec
mov
movsl
xchg
call
fadd
inc
sub
outsb
push
pop
cld
call
lea
ss
or
push
es
ja
rorl
dec
cmp
jmp
cmp
pop
cld
pusha
test
stc
filds
pop
js
pop
xor
mov
aad
mov
mov
insb
xor
movb
aas
int3
mov
rol
mov
decl
cmp
jcxz
ret
clc
or
shlb
out
xchg
or
imul
xchg
add
dec
lret
test
mov
sbb
sbb
test
std
into
or
decl
mov
push
je
mov
xlat
sub
outsb
and
das
pop
cli
and
push
mov
mov
jo
push
mov
cmpsl
aam
mov
sub
insb
jg
xchg
lods
xchg
mov
pop
sbb
adc
xlat
cld
daa
mov
pop
xor
incl
xor
cmpsw
test
push
fidivrl
cs
xor
idivl
pop
jo
xchg
les
mov
daa
icebp
sahf
jno
fdivl
out
mov
cltd
adc
mov
pushl
je
inc
add
call
aas
ds
cmpsb
js
movsl
les
arpl
inc
nop
sbb
mov
jbe
pusha
adc
or
sub
inc
imul
cmp
orl
shl
popf
pusha
int3
and
mov
lcall
imull
int
pop
cld
dec
mov
mov
outsl
out
xorl
or
hlt
call
or
xor
inc
lds
popf
test
jp
nop
addr16
dec
mov
lcall
mov
es
mov
adc
lock
shlb
adc
call
and
insl
popf
rolb
mov
in
aad
jecxz
add
in
push
lods
out
push
xchg
jg
jb
faddl
in
xchg
jae
pop
addl
sub
sub
es
outsl
mov
incl
add
in
push
adc
je
call
push
dec
mov
push
cmp
add
data16
call
in
into
mov
or
sbb
inc
std
jg
and
sbb
fcompl
call
and
sahf
jnp
mov
xchg
push
ret
xchg
push
xchg
pop
test
pushf
jmp
les
pop
cs
jmp
outsl
dec
jmp
adc
jae
jecxz
loope
cmp
cmp
cmpsb
xchg
push
outsl
out
adc
jmp
dec
adc
mov
roll
test
test
call
loop
imul
enter
pop
jae
sbb
cs
ds
sti
mov
jle
fsubs
cmp
sub
test
ljmp
out
ret
and
testl
repnz
dec
mov
xchg
or
in
popa
sub
cmpsb
jnp
jp
dec
jns
dec
push
cmc
stos
cli
jmp
fdiv
sbb
cmp
adc
mov
pop
and
stos
push
fists
int3
pop
repnz
imulb
fisttpll
jns
out
jp
ljmp
and
dec
int
jns
adcb
and
decl
push
mov
push
cmp
sub
insb
dec
imul
or
xchg
sarb
rcrb
inc
and
call
imul
outsl
cli
mov
ss
test
imul
pushl
std
call
call
and
insl
jae
push
enter
scas
add
int3
mov
jle
incl
pushf
ja
jle
xor
mov
cs
test
inc
hlt
sub
xchg
cmp
sbb
xor
mov
sbb
and
xchg
fidivrs
cwtl
shrb
stos
cmp
mov
hlt
or
lds
mov
pusha
xchg
mov
xchg
cmp
aad
aad
pop
xchg
jg
fwait
sbb
addb
or
js
icebp
push
pop
fistl
mov
call
in
popa
fisubrs
fnstenv
mov
pop
sub
and
xchg
mov
decl
add
std
adc
jo
je
mull
in
sub
andl
cli
mov
jmp
pop
mov
xor
sbb
mov
out
xor
lock
sti
push
add
movsb
mov
pop
dec
inc
adc
cs
push
outsb
mov
mov
or
mov
mov
rclb
inc
xor
jae
imul
cmp
mov
jmp
inc
pop
inc
jp
sbb
push
loope
popf
jns
jmp
mov
ror
or
pushf
decl
jge
jle
dec
pop
lahf
add
rclb
iret
pop
or
pop
ljmp
dec
retw
incl
jmp
dec
xchg
movlhps
mov
mov
sub
push
nop
imul
mov
dec
shll
call
mov
out
aam
stos
movsb
enter
ljmp
pop
cmp
jmp
shlb
stos
adc
pop
pop
int
outsl
ja
pop
xor
ja
inc
test
sti
adc
insb
aam
test
rorb
lret
mov
pop
fcomip
out
xor
adc
daa
lret
aam
mov
cs
stos
loopne
pop
loopne
pop
aam
sbb
dec
call
xor
jb
mov
pushl
dec
insl
add
push
addl
rol
orl
fisttpl
clc
decl
pop
sub
or
sub
pop
adc
add
xor
ss
jae
into
shrl
push
rorl
pusha
jo
cmp
pop
lret
jmp
sar
hlt
inc
inc
cmp
inc
or
pushf
imul
sbb
xchg
xchg
or
stos
jno
add
jle
jl
jl
dec
int3
pop
push
push
push
fwait
adc
andl
or
mov
mov
cltd
cmc
cmp
data16
lret
inc
imul
jmp
and
ficomps
incb
in
jns
gs
mov
mov
mov
or
dec
xchg
xchg
arpl
ds
jg
cmp
push
xchg
shlb
test
or
mov
ja
ljmp
loop
mov
fwait
sub
int
push
pop
push
jp
cmp
sti
adcb
das
add
pop
flds
and
fucompp
int
mov
adc
adc
sub
mov
clc
decl
cmp
push
scas
icebp
daa
and
test
sub
ljmp
ljmp
mov
jl
pop
pusha
aas
cwtl
adc
or
lock
xchg
js
cmp
adc
imul
add
jg
mov
lcall
and
cmp
fsubl
mov
and
mov
xchg
cmp
jmp
mov
sarb
mov
ljmp
mov
aas
adc
pop
mull
stos
rolb
push
gs
xchg
shll
mov
addr16
xchg
pop
mov
push
dec
adc
push
xor
cwtd
adc
dec
into
or
mov
jbe
jno
cmpsb
call
mov
xchg
and
iret
and
or
lcall
add
jg
push
in
cmp
sub
dec
call
sbb
mov
lea
mov
jnp
hlt
push
in
or
fbstp
scas
or
dec
push
cli
movsb
mov
cmp
filds
outsl
push
push
jp
cmp
ficompl
sub
jp
ljmp
push
inc
mov
sar
inc
sbb
in
test
inc
sbb
movb
lock
mov
fistps
jg
jg
cmp
arpl
dec
mov
mov
lret
sbb
mov
jp
jmp
negl
sub
push
fsubs
loopne
sub
cmp
cwtl
cld
je
inc
sbb
fnstenv
mov
add
xor
adc
or
imul
sub
call
cld
ret
cmp
movsb
jl
jbe
fsubrl
sbb
fidivs
mov
and
rcrl
cltd
xor
imul
loop
mov
and
data16
popf
jno
adc
cwtl
sbb
ljmp
cli
adc
push
or
mov
mov
dec
les
mov
push
test
jecxz
push
idiv
int
push
push
mov
lahf
fcmovnbe
lcall
in
sub
loopne
hlt
jmp
arpl
mov
adc
mov
aas
cmp
dec
cmpsb
sbb
and
stos
mov
ljmp
pop
push
xor
pop
mov
sub
and
mov
adc
pop
adc
jg
inc
and
test
xchg
sbb
shr
xlat
enter
mov
adc
xlat
xchg
adc
pop
loope
lea
aam
ds
jns
decl
lods
mov
adc
pop
sbb
mov
jmp
sub
mov
adc
pop
pushl
lcall
fidivl
xchg
sbb
and
jns
xor
mov
cltd
jmp
jmp
inc
imul
jl
push
adc
sbb
mov
jmp
out
mov
dec
mov
lea
sbb
lock
mov
add
pop
dec
jecxz
pop
lahf
ljmp
and
cmp
adc
loop
ret
cmp
incl
aad
pop
or
clc
xor
aaa
pop
push
ret
call
sub
call
xor
dec
ficoms
outsb
jbe
out
js
je
sub
insb
pop
and
into
stos
lcall
mov
push
sbb
ds
loop
jae
or
test
mov
test
sub
xor
jmp
pushl
imul
daa
stc
push
ljmp
cs
rorl
sarb
das
sar
call
cmp
sbb
cs
cld
or
xor
out
pushf
lcall
dec
out
xor
pop
mov
mov
ss
sub
mov
fs
decl
add
lahf
dec
rclb
in
cmp
imul
call
scas
sub
jnp
inc
mov
stc
sahf
jne
lahf
fbstp
cmp
fidivs
dec
roll
mov
addr16
loop
test
jmp
out
cwtl
mov
sar
mov
pop
push
ljmp
mov
xor
jp
or
cmc
jbe
lcall
fimuls
inc
fmul
data16
xor
cmp
mov
xchg
lods
add
ficoms
xchg
dec
sub
inc
sub
cmpsl
outsl
add
fs
inc
xchg
sub
xchg
fnstenv
test
xor
mov
stos
movsl
ljmp
mov
call
push
ja
imul
int3
sub
pusha
pushf
inc
mov
out
jmp
pushl
mov
push
push
je
sbb
jnp
and
pushf
cs
mov
sub
cmpsb
mov
add
incl
cmp
aad
movb
sbb
lea
imul
pop
popl
xchg
bound
fists
inc
into
mov
mov
dec
xchg
mov
inc
enter
int
pop
sbb
scas
mov
decl
aad
jo
enter
pop
es
out
lds
das
daa
mov
sub
in
pushl
push
insl
jg
or
cmp
jge
sbb
sbb
sbb
pop
cmpsb
xor
cld
call
imul
mov
add
jl
sbb
mov
add
decl
cs
cs
xchg
or
cmp
pop
or
sbb
ret
and
mov
idiv
call
mov
add
mov
sub
cmp
sub
in
pop
jg
lds
cli
inc
sub
xorb
mov
xchg
nop
dec
sti
jmp
lcall
cli
adc
mov
jnp
lds
adc
dec
dec
cld
pop
mov
sbb
outsb
xchg
outsb
pop
ds
inc
test
stc
sub
clc
fldenv
mov
adc
lcall
clc
inc
out
jnp
add
fisttps
sub
fistl
std
call
pop
icebp
adc
fadds
xor
mov
mov
pop
sub
jp
sbb
pusha
pop
pop
cltd
seto
inc
cli
popf
inc
pushl
cwtl
dec
cmp
in
fwait
or
std
cwtl
cmpsl
sub
mov
cmp
add
jne
or
les
sahf
ret
das
mov
enter
push
inc
jne
adc
js
jmp
lret
sub
cltd
pushf
outsb
sub
xor
dec
test
cmc
test
cmp
dec
outsl
decl
mov
inc
sbb
addr16
ja
mov
inc
outsb
push
mov
sbb
lds
les
add
jmp
lds
adc
lcall
rol
cmp
and
adcb
repnz
andl
movsl
cmp
mov
aam
sbb
decl
lods
and
or
ds
mov
or
lods
lret
mov
xlat
cltd
into
rorl
pushl
and
sbb
push
loopne
cmp
ds
jmp
xor
jp
sub
xchg
jmp
or
adc
rcll
jb,pn
rorl
jecxz
outsb
cli
lea
cmpsb
sub
shrb
mov
cmp
mov
popa
adc
ds
incl
xchg
sub
mov
mov
pop
cmpsl
jo
cwtl
int3
fildl
pushl
add
in
xor
scas
mov
into
jge
dec
mov
xchg
fcompl
ljmp
xchg
repz
mov
cmc
mov
mov
popf
lahf
std
jns
mov
shrb
lods
jg
stos
in
xor
pop
cs
jno
pusha
ret
push
sbb
jle
fs
idiv
push
mov
or
clc
into
pop
jo
es
stos
divb
pop
lahf
cld
jno
mov
mov
pop
xchg
push
mov
jl
sub
push
mov
pop
es
lcall
jp
xchg
sub
out
call
les
insb
jb
cmp
enter
jg
arpl
and
fidivs
inc
push
push
push
inc
loopne
decl
out
push
jp
xchg
pop
test
test
sub
fisttpll
mov
xor
jb
cmpxchg
xor
pusha
adc
mov
daa
es
pushl
cmp
jle
jns
dec
push
xor
in
jecxz
mov
js
cmp
xchg
jmp
xchg
push
call
mov
push
das
and
ds
sbb
stos
shll
sbb
lcall
fsub
mov
fdivp
shlb
mov
push
push
js
movsl
xchg
pop
in
fcmovnu
sbb
lea
ljmp
xchg
mov
decl
jge
data16
fldcw
pop
dec
subb
push
sbb
popf
scas
clc
incl
repnz
sub
fildl
cmp
xor
negl
sarb
lods
fs
mov
inc
loop
or
loop
loop
push
ljmp
inc
and
insb
lods
jmp
int3
sub
lods
and
cmpsl
loopne
popf
dec
mov
xchg
push
jmp
test
or
pop
sub
insl
jo
or
data16
or
mov
pop
mov
sbb
loop
add
sub
outsb
pushf
insb
inc
add
add
fs
icebp
lcall
icebp
mov
ret
scas
push
or
leave
fcoms
pop
dec
jo
xor
mov
decl
arpl
xor
into
jmp
pop
mov
cmp
cmpb
in
imul
sbb
shl
mov
fs
sarl
xor
sti
sbb
mov
cmc
call
dec
leave
xchg
movsl
js
lods
jmp
xchg
or
inc
mov
inc
rolb
decl
jo
adc
inc
movsl
jp
insl
stos
out
lahf
cmp
aad
xchg
shrl
roll
jmp
jno
imul
push
sbb
push
cmp
push
out
in
mov
pop
pushl
push
je
sub
sbb
and
jnp
fmul
adc
and
ljmp
or
daa
sub
orl
jo
mov
cmp
lods
out
dec
sub
pushf
pop
sbb
inc
mov
ljmp
jge
subb
mov
aad
mov
ffreep
inc
inc
fwait
lahf
mov
int3
mov
cmp
call
and
hlt
arpl
sarl
inc
subl
test
sub
jg
mov
pop
sbb
sub
icebp
mov
fmuls
jp
hlt
pushl
mov
cli
push
sahf
sub
adc
adc
ljmp
loop
mov
pop
out
ljmp
dec
mov
call
fcomip
in
test
mov
je
jns
test
cmp
sub
cmp
jp
data16
icebp
mov
test
sub
and
call
sbb
add
cmp
jne
fstpl
cld
xchg
push
loopne
dec
aaa
push
ret
ljmp
outsb
xor
jle
orb
ret
into
pushf
pop
outsb
and
aaa
mov
jg
jno
lahf
imul
jecxz
clc
scas
test
test
in
in
mov
rorl
jae
ja
mov
push
loopne
mov
xchg
call
lahf
pop
mov
mov
mov
cmp
fisubrs
das
sahf
fsubl
jg
jmp
call
es
frstor
mulb
push
push
js
sbb
mov
in
cli
pop
icebp
call
and
jo
filds
jge
shrl
add
das
es
dec
add
inc
dec
jg
pop
xchg
ror
scas
nop
dec
jo
fcomps
fsubrp
aam
out
add
scas
xor
loop
faddp
push
pusha
lahf
pop
repnz
notl
jmp
xchg
pop
loopne
shrl
rolb
xor
in
and
xchg
fisubrl
ljmp
movntps
xor
and
js
mov
dec
lcall
call
dec
jge
fisubl
mov
cmp
or
cltd
mov
inc
gs
int3
call
or
popl
ljmp
pop
and
into
lea
adc
cmpsb
dec
inc
jmp
mov
aas
movsb
mov
mov
xor
dec
jb
fdivrp
xor
inc
std
mov
mov
cmpsl
fstpl
jmp
xchg
mov
aas
in
jbe
mov
into
loopne
pop
rorl
loopne
call
adc
cmp
nop
mov
out
push
pop
mov
add
lcall
cmc
jo
inc
int
jecxz
nop
hlt
jbe
mov
lea
jg
push
and
std
jge
xchg
fwait
jg
repz
adc
popa
or
dec
pop
enter
incl
les
inc
sbbb
fs
out
loope
out
pushl
ljmp
pop
test
and
sbb
mov
stos
jp
sbb
decl
stos
ficomps
push
pop
arpl
lds
out
jae
loope
mov
or
adc
incl
push
jnp
xchg
fcompl
and
add
cmpsl
cmpsl
fwait
es
pop
out
mov
mov
fisubl
or
cmc
pop
int3
imul
mov
sar
call
sbb
les
fnstcw
roll
mov
xor
xchg
push
jno
imul
or
mov
bound
push
cmp
or
roll
fsts
bts
fisubrl
push
idivb
pop
or
mov
or
shll
jmp
push
fiaddl
mov
imul
pop
sub
lods
out
xor
outsb
cld
jo
sub
adc
pushl
xor
aas
jo
popf
inc
cmpsb
test
xor
out
dec
icebp
popa
dec
cmp
mov
inc
iret
pop
lret
fs
mov
cmp
sbb
or
push
mov
sub
out
ss
add
mov
cwtl
stos
dec
adc
push
add
pop
loopne
std
inc
mov
push
add
mov
pop
ret
add
rcrb
aaa
sub
sahf
sar
lcall
pop
lods
inc
mov
mov
adc
movsb
xchg
inc
notb
lahf
mov
xchg
mov
jo
adc
pusha
bound
data16
aaa
and
mov
add
jmp
fwait
jno
mov
jnp
sub
stos
sub
xchg
cmpsb
mov
cmpsb
xor
inc
gs
push
sar
jg
cwtl
cwtl
jmp
mov
push
in
mov
cmpsb
cld
inc
xlat
fisubs
jg
fsubl
xchg
movsb
lret
or
pop
adc
cmp
sub
in
inc
cmp
je
jns
pop
out
adc
xor
movsl
mov
lret
jle
mov
aaa
imul
cli
ljmp
cli
sahf
ret
scas
sbbl
imul
loopne
add
ret
xor
adc
mov
mov
sub
jne
decl
xor
pop
cmp
dec
loope
pop
sbb
fwait
cmc
add
ficomps
aad
aam
lods
sub
mov
aaa
xchg
es
jg
aas
xlat
in
dec
xchg
stos
and
lock
cmp
in
mov
jns
lods
incl
adc
cmp
enter
call
sub
push
mov
std
call
lods
adc
adc
mov
push
pop
ja
mov
aas
adc
out
cli
pushl
out
psubd
arpl
repnz
lahf
push
push
pop
fcmovnu
xor
decl
pop
cs
mov
repnz
test
pop
xchg
lds
mov
ljmp
jne
add
cmp
pop
hlt
ffreep
sub
jl
lods
mov
mov
dec
in
mov
pop
bound
sarb
movsb
add
call
stc
and
inc
dec
sbb
cs
mov
and
jbe
gs
xchg
mov
mov
cli
inc
jge
outsb
lods
push
rcrb
daa
or
pop
push
push
push
sbb
inc
sbb
loop
addr16
sub
cmp
xchg
ljmp
ljmp
jl
stos
push
dec
stos
jecxz
or
mov
sub
lock
xchg
adc
decl
jp
ret
jbe
inc
push
shrl
mov
and
movsl
push
test
mov
mov
cs
or
push
and
insl
loopne
cld
int
cltd
cwtl
jg
mov
iret
jge
cmp
incl
push
jb
mov
add
test
pop
xchg
mov
lds
rclb
decb
rcl
fisubrs
lcall
sub
dec
mov
push
lahf
into
push
jmp
add
fnstsw
cmpsb
aas
sbb
push
out
sub
out
jecxz
fwait
mov
mov
in
call
nop
jg
loopne
decl
in
lcall
mov
inc
cmpsl
lahf
pop
cltd
jno
pusha
stc
jo
repnz
push
and
or
xchg
or
jne
in
decl
orl
inc
sbb
rorl
out
sbb
cmp
add
pop
lock
stc
mov
aaa
ret
inc
idivl
adc
jl
insb
fisubs
jmp
sbb
clc
repnz
mov
push
mov
pop
fs
decl
pop
in
out
out
xor
pop
jle
imul
fsubl
add
sbb
ds
andl
lock
xchg
cli
scas
pop
adc
cli
icebp
xchg
and
incl
lcall
stos
cli
add
pop
inc
mov
ljmp
movsb
sti
or
jmp
mov
dec
mov
js
dec
add
cwtl
adc
pop
pop
mov
ljmp
adc
iret
in
out
mov
mov
daa
mov
das
inc
mov
decl
mov
and
mov
movsl
rorl
insl
and
xchg
mov
dec
arpl
jmp
in
or
jge
into
fisttps
jo
sbb
xchg
cmpsl
xchg
in
adc
jne
sbb
xor
int
sar
push
imul
mov
enter
dec
outsl
jmp
arpl
xchg
jnp
xor
sub
lock
fists
in
rcrb
ljmp
std
lret
je
mov
add
out
fwait
shrb
push
movsl
mov
test
pushl
mov
sub
sbb
rorb
cwtl
cmc
xchg
test
push
mov
and
pop
addl
jle
stos
fcomps
jnp
xor
jmp
cmp
cli
rcrb
rorl
out
clc
ljmp
jp
ror
notb
xor
push
xchg
mov
xor
xor
ds
adc
lret
add
sbb
inc
into
hlt
push
out
sub
incl
dec
pushf
fmull
call
aaa
adc
sub
ds
dec
push
std
pop
hlt
ret
out
stc
mov
clc
xchg
mov
fnsave
sbb
jp
mov
clc
cltd
cmp
frstor
xchg
pop
pop
outsl
ret
addr16
push
fs
jmp
ljmp
mov
sub
mov
loop
add
push
pop
out
aam
js
sbb
sahf
aaa
pop
mov
mov
sub
shlb
mov
xchg
jno
push
sahf
sbb
je
fistps
aaa
fcmovb
pop
and
xor
pop
sahf
push
in
hlt
sti
dec
xor
js
dec
adc
addr16
mov
fsubrs
in
xchg
rolb
ret
out
clc
lods
mov
adc
xchg
stos
call
jg
fisubrl
jno
fidivrl
es
scas
push
movsb
aaa
lcall
decl
jle
push
dec
push
ljmp
ljmp
sbb
dec
test
ficoml
push
pop
mov
jl
pop
or
xor
jmp
stos
into
test
xlat
lea
out
pop
push
subb
xor
xchg
ds
movsb
inc
jmp
push
pop
xlat
push
add
test
pop
fdivrs
and
gs
jg
mov
lcall
inc
push
fcoml
out
xor
dec
and
mov
jns
lcall
add
sbb
es
xchg
jnp
gs
call
push
xor
sub
jl
fildl
addr16
inc
out
std
pop
ret
add
stos
jg
jg
push
fcoms
jne
in
cmp
es
dec
out
js
out
ljmp
mov
mov
popl
aad
std
and
jae
pop
mov
xchg
pop
das
xor
add
mov
stos
loopne
out
push
xor
adc
inc
inc
in
loop
add
jle
mov
stc
popf
lahf
clc
xchg
or
sub
jb
and
popa
jne
pop
in
movsb
sub
cwtl
sbb
sbb
addr16
ljmp
stos
or
ljmp
cs
imul
out
test
outsl
lret
lcall
cld
push
in
xor
pusha
enter
lcall
jmp
mov
mov
push
mov
in
cmp
out
fildl
inc
notl
push
mov
lret
mov
idivb
dec
push
int
jmp
mov
loopne
pushf
inc
data16
dec
cmc
dec
and
mov
lods
xchg
xchg
imul
pushl
test
mov
adc
mov
in
int3
call
adc
pop
incl
cld
push
adc
push
jl
xchg
sub
xchg
lcall
xchg
push
sbb
out
xlat
adc
pop
mov
mov
fsubl
pop
push
incl
mov
nop
test
mov
sub
stos
sub
rcll
and
pushl
fwait
incb
mov
jne
ret
icebp
stos
movsb
sub
outsb
jmp
mov
imul
jmp
and
out
loop
adc
data16
jmp
jns
js
adcb
jg
out
xchg
outsl
push
mov
adcb
jns
clc
shlb
imul
add
rcl
xchg
loop
loope
call
mov
and
pop
mov
xlat
lret
lcall
push
test
lods
and
push
mov
pop
mov
push
push
inc
cmp
cwtl
call
mov
clc
xchg
lahf
pop
xor
push
fisubs
imul
jecxz
out
cli
pushl
inc
inc
push
sub
shl
sub
mov
mov
and
fwait
mov
pusha
addr16
fwait
mov
data16
shll
jmp
inc
mov
stos
cmp
or
dec
ficoml
mov
lret
push
andb
mov
pushf
inc
inc
adc
push
pushf
fidivrl
repz
cli
mov
lods
lock
or
loopne
fldpi
nop
sbb
mov
lds
fiaddl
rcl
idiv
xor
fsubrp
pop
jmp
fs
clc
fdivrl
mov
mov
ljmp
cmpsb
jp
imul
and
cwtd
dec
adc
cld
fcoms
push
out
stc
xlat
xchg
pop
push
pop
hlt
decl
xchg
cmp
push
mov
dec
aaa
ss
xor
push
pusha
gs
decl
mov
pop
pop
scas
stos
sub
daa
dec
adc
adc
pop
jge
mov
mov
sub
inc
ljmp
and
jp
imul
xchg
push
pop
jmp
fs
imul
pushl
loope
vdivpd
add
lds
cmp
shrb
sbb
loopne
and
fiaddl
in
jb
leave
jle
pop
ljmp
or
lock
xchg
push
hlt
lds
cmp
inc
dec
leave
clc
mov
js
subb
scas
dec
outsl
test
lods
pop
leave
in
sbbl
movsb
pushf
pop
push
insb
das
je
push
ljmp
adc
imul
les
fsts
add
pop
pop
xor
insl
push
insl
inc
push
cmp
stc
aam
or
mov
xchg
dec
test
rcr
or
nop
fld
dec
nop
add
stos
fcom
push
dec
insb
push
cmp
repnz
les
aas
inc
add
mov
nop
fcmovnb
out
fucom
f2xm1
mov
push
mov
inc
jmp
stos
add
das
pop
mov
push
fdivrs
inc
xor
decl
ret
out
pop
ror
lds
push
pop
hlt
nop
popa
inc
jp
xorb
and
mov
push
iret
mov
cwtl
xchg
iret
pop
push
rorl
jmp
and
xor
cmp
stc
adc
movsb
scas
cmc
add
sub
mov
daa
mov
fisttpl
fs
xor
and
repnz
test
mov
mov
es
mov
out
stos
lret
pop
or
in
into
inc
cmp
lcall
addb
cmp
mov
and
les
push
outsb
in
dec
jg
lcall
pop
cmovno
cmp
pushl
jae
dec
hlt
and
incl
inc
xchg
int3
push
inc
fdivrs
adc
pop
and
mov
xchg
xchg
pop
je
icebp
scas
inc
lcall
cmpb
sti
jge
mov
add
repnz
jmp
push
cli
call
mov
aas
int
lds
ljmp
nop
addb
dec
push
pop
and
cmc
ljmp
shlb
mov
bound
inc
inc
mov
xchg
or
in
dec
push
decl
mov
outsl
pop
add
or
test
pop
inc
fdivl
sub
jmp
adc
xchg
test
scas
xor
lds
es
shlb
xor
movsl
jl
and
sti
add
add
sub
out
repnz
ljmp
ljmp
mov
xchg
or
inc
in
jg
nop
cs
daa
cmp
test
xchg
lcall
push
inc
rorb
lret
xchg
adc
jbe
sbb
sbb
divl
clc
aas
iret
loop
les
sbb
in
ss
mov
pushl
dec
and
orl
push
sub
inc
jg
loop
adc
call
mov
ret
lret
lcall
imul
cmc
clc
clc
cwtl
push
in
push
cmp
ljmp
mov
adc
and
add
adc
iret
leave
fadds
test
incl
mov
in
rolb
adc
fwait
ss
inc
and
mov
inc
nop
sbb
cld
pushl
and
jo
cwtl
jno
mov
rorl
jmp
mov
xor
lea
cmpl
sbb
adc
mov
ror
repnz
test
mov
lds
pusha
pop
or
ret
or
fnsave
in
xor
stos
jb
ror
cmp
adc
sbb
mov
mov
repz
add
add
and
shr
mov
add
aad
or
xchg
mov
xor
lcall
cltd
arpl
bt
mov
pop
mov
loop
pop
jnp
xchg
sar
pusha
pop
cwtl
mov
adc
incl
mov
pop
add
mov
mov
add
repnz
pushl
rclb
jp
inc
push
jo
add
in
and
mov
rcrb
ja
sbb
add
jmp
test
or
cwtl
dec
jmp
jo
xchg
roll
or
dec
xchg
imul
int3
std
mov
or
cmp
fdivrl
lods
sbb
jg
cwtl
xor
mov
adc
cmp
or
pop
adcl
adc
xchg
mov
push
call
enter
sbb
inc
nop
test
ret
inc
fisubs
jl
decl
and
testb
jg
ljmp
data16
jp
push
xor
call
and
or
xor
mov
xor
cmp
dec
aas
bnd
add
ljmp
into
jno
sbb
pop
pop
xchg
push
sbb
ljmp
clc
jbe
mov
ficomps
jmp
add
inc
les
inc
push
xor
les
push
and
push
inc
scas
adc
push
js
loope
std
xchg
adc
xchg
cmp
push
movsb
sbb
cmpsb
pushf
movsb
mov
jl
inc
out
push
mov
jp
enter
jne
add
insl
adc
call
sub
inc
aad
xchg
sub
and
ret
inc
ja
addb
insb
aam
push
adc
cmp
pop
mov
popf
mov
gs
dec
xorb
adc
dec
mov
dec
ljmp
add
or
xchg
pop
in
xor
subb
cmp
sub
cmc
or
dec
push
push
hlt
cli
cld
lcall
push
inc
icebp
inc
xor
mov
mov
add
mov
jl
jp
mov
inc
repz
inc
jmp
js
sbb
aas
out
cs
es
lods
icebp
leave
pop
add
mov
inc
or
cmp
add
rolb
loopne
add
or
pop
mov
inc
or
rcrl
add
cwtl
scas
adc
jg
incl
lds
sub
adc
xchg
dec
sti
cwtl
xchg
or
inc
xor
mov
popa
adc
into
cwtl
jbe
stc
popf
jg
mov
or
or
cmp
push
mov
fwait
xor
mov
jecxz
and
push
pop
ja
lock
pop
xchg
adc
push
xchg
inc
iret
movsb
lea
push
inc
stc
dec
in
dec
and
pop
cmc
xchg
pop
ljmp
pop
dec
loopne
sub
ss
cli
filds
daa
and
out
adc
stos
and
pop
loopne
pop
sub
out
inc
ss
aam
sub
pop
out
xchg
and
call
xor
mov
lret
fsubrl
and
inc
add
xor
inc
add
xor
xor
mov
jg
decl
inc
mov
shll
adc
mov
sbb
ljmp
adc
xchg
inc
clc
call
pop
add
sbb
adc
add
dec
repnz
call
push
incl
sbb
lods
or
pop
lahf
mov
enter
inc
sbb
sub
jg
es
rclb
dec
mov
push
or
push
jno
scas
and
ret
incl
iret
js
inc
addr16
or
add
mov
fildl
adc
mov
sbbb
jg
jno
jmp
rorb
xchg
pop
lods
mov
sbb
call
loopne
or
shlb
mov
sarl
out
mulb
cmpsb
lock
fmuls
lret
mov
lock
or
inc
xchg
jg
jae
jge
fisttpll
pushl
inc
std
inc
iret
negl
mov
jnp
xchg
in
mov
xchg
or
sbbb
adc
ljmp
fstl
pushl
jae
les
jp
mov
sbb
fs
push
fcomps
xchg
xchg
jno
fldl
call
push
push
adc
and
sub
sbb
jb
test
dec
aad
mov
xor
int3
js
repz
and
decl
test
test
int
je
jbe
pop
xchg
pushf
adc
jb
in
test
stc
xor
cld
add
sbb
adc
rcr
dec
xchg
cmp
cmp
fadd
rorb
add
sbb
xchg
jns
xchg
call
mov
jb
call
cmpsb
mov
adc
xor
and
out
mov
inc
shlb
lock
cmp
nop
loopne
add
jae
xor
shrl
and
adc
add
dec
adc
int3
test
add
ja
push
jecxz
jbe
dec
test
jmp
jle
cmp
mov
pop
xchg
sub
cs
stos
ret
arpl
adc
and
test
jl
cld
xchg
cs
mov
adc
or
add
adc
add
pop
insb
pusha
cmc
setnp
xor
xor
ret
test
test
ficomps
xchg
xchg
sarl
sbb
sbb
and
add
stc
xor
cld
push
scas
das
insb
add
mov
dec
loopne
mov
dec
sub
or
lods
and
lods
filds
push
mov
push
xchg
out
sub
sub
movsb
push
scas
sub
add
pop
sub
ds
mov
pusha
lcall
mov
lods
jmp
sbb
lcall
mov
loop
jmp
and
add
rorb
push
jmp
faddl
add
xor
add
jg
call
sub
inc
sahf
mov
or
movsl
dec
add
push
mov
fisubrl
imul
adc
fsin
pushf
mov
cli
jg
mov
mov
cmp
xchg
sbb
push
fists
mov
inc
xor
mov
adc
dec
lea
fimuls
and
mov
aam
add
xchg
mov
xchg
push
jbe
js
in
scas
xor
ds
mov
cwtl
adc
es
push
dec
mov
mov
into
push
daa
push
cmp
add
adc
dec
mov
add
loope
std
icebp
jle
sbb
push
mov
jecxz
call
cld
test
aad
aaa
jbe
iret
daa
rolb
gs
or
push
add
pop
std
jmp
mov
stc
data16
inc
test
push
movq
add
insl
jmp
aam
mov
iret
mov
mov
and
popa
hlt
repnz
sbb
in
xchg
outsb
cmpl
sub
and
push
lahf
or
sahf
xchg
idivl
jne
and
int3
repnz
imul
in
aam
cld
pushf
mov
push
je
pop
jecxz
push
loopne
mov
gs
sub
mov
add
mov
add
jle
xor
loop
hlt
xor
mov
inc
inc
aad
jecxz
decl
popl
inc
mov
in
arpl
lock
add
add
mov
pop
add
and
fs
cmc
or
call
xor
sub
aas
push
mov
clc
js
xor
xor
rcr
movsb
decl
lock
adcl
pushf
out
push
add
cmpsl
dec
pop
push
dec
fdivl
lods
clc
call
std
push
and
mov
xor
sub
jae
mov
scas
jmp
aaa
fwait
clc
add
sarb
push
jno
incl
mov
and
jns
xlat
sub
xchg
outsl
add
sahf
out
pop
fwait
adc
pushl
push
and
push
jnp
dec
sahf
cmp
xlat
test
and
xchg
mov
adc
decl
sarl
inc
pushf
adcl
loopne
imul
dec
mov
jg
and
fiadds
shlb
aam
mov
pop
cmc
and
jo
cmp
ljmp
inc
jne
jg
pop
js
adc
loope
out
enter
jmp
movsb
xor
mov
push
pusha
jle
xor
sbb
sbb
adc
jne
jmp
xchg
out
cmp
sub
stos
mov
mov
mov
sub
lcall
dec
jne
dec
add
sarl
sbb
lds
lods
push
pop
push
lcall
mov
hlt
sbb
push
mov
xchg
cmp
out
xchg
sub
call
test
mov
mov
mov
fs
add
xchg
push
popa
pop
dec
into
or
xor
clc
inc
jp
xor
jg
add
test
js
outsb
add
inc
bnd
lcall
out
daa
adcb
sub
mov
push
fwait
push
mov
andl
ljmp
xchg
fwait
sub
jno
cmp
mov
dec
mov
dec
ja
gs
sarb
addr16
sarb
or
aam
cmpsb
mov
cmp
aaa
ret
les
popa
repz
jne
sbb
cmp
dec
incl
mov
xchg
cmc
nop
stos
or
or
cmp
pop
pop
decl
lods
repnz
in
inc
add
fwait
push
je
loopne
inc
pop
mov
les
and
adcl
dec
pusha
mov
add
inc
push
xor
in
call
or
hlt
and
int
scas
mov
push
incl
cld
add
mov
sub
int3
or
cmp
or
gs
adc
or
dec
mov
scas
mov
out
test
push
mov
sar
mov
stos
roll
cs
and
dec
notb
je
mov
lods
fs
cmp
adc
in
mov
or
leave
cs
mov
mov
jmp
pop
add
and
adc
add
movsb
lods
xchg
mov
mov
leave
inc
dec
into
cmp
xor
decl
data16
daa
test
mov
mov
cli
insb
adc
jo
lods
stc
or
decl
cli
adc
int3
scas
outsl
or
push
daa
je
in
push
faddl
jmp
adc
incl
inc
or
mov
jb
lea
addr16
lock
out
cmp
decl
mov
arpl
sbb
add
loop
lcall
add
cli
inc
mov
or
push
push
and
subb
incl
mov
pop
pop
pushf
add
cwtl
push
dec
add
push
xchg
or
pushf
sbb
fs
cld
sub
cli
andb
loope
mov
rcrb
xchg
pushf
lds
enter
mov
mov
or
push
sarb
insb
jb
cmp
push
loopne
cld
call
mov
push
or
push
outsb
cltd
or
mov
mov
ljmp
cmp
scas
xchg
lods
mov
ds
ds
clc
decl
mov
mov
sbb
les
dec
jb
out
add
and
std
dec
ljmp
cmp
jbe
mov
adc
lds
rcrb
jmp
push
incl
cwtl
jbe
leave
inc
lods
test
xchg
inc
sub
cmp
pop
decl
push
test
jecxz
mov
lds
mov
inc
jmp
mov
jmp
and
roll
addl
cmp
mov
cltd
pushf
push
add
lcall
add
and
loop
xor
adc
add
out
out
cmp
shl
call
sbbb
movsb
cmp
sbb
pushf
fdivl
sub
sub
sub
or
xor
inc
in
sub
pop
and
pop
mov
jg
call
adc
ret
jecxz
adc
shl
das
mov
ljmp
jp
add
pusha
cmpsb
mov
nop
xchg
add
pusha
enter
inc
jmp
mov
pop
push
jmp
pop
inc
adc
pop
fnstsw
and
pop
adc
in
dec
add
xor
mov
dec
addl
bound
loopne
incl
dec
cs
inc
mov
ss
mov
bound
push
lahf
push
mov
or
out
cs
call
sub
aaa
pop
mov
xor
push
cmc
sbb
and
les
mov
outsl
or
push
lret
popa
das
imul
cmp
inc
testb
add
lds
shl
inc
and
stos
call
dec
addr16
rcr
adc
push
xchg
subl
data16
cli
cwtl
mov
std
push
xchg
pop
cmc
and
inc
inc
mov
nop
sbb
jg
pop
push
pop
inc
and
push
sub
pop
lds
int3
sbbb
mov
incl
cltd
inc
lea
cmc
dec
loopne
pusha
sbb
ret
iret
pop
in
mov
gs
pop
bound
fmuls
call
jp
dec
push
stc
stos
sbbl
xor
jp
adc
cld
lret
add
ljmp
or
cld
adc
movsl
inc
orl
aas
jp
cltd
shl
sbb
and
out
cmp
sub
push
cmp
add
adc
adc
add
adc
sbb
pushl
xchg
xor
rolb
xor
cs
fwait
rcrl
adc
jg
inc
mov
sub
dec
arpl
fs
inc
xchg
cld
inc
xor
jbe
mov
clc
cli
das
sbb
cmp
int3
mov
jge
push
imulb
dec
aaa
std
outsl
xor
adc
stos
lret
or
insb
adc
cmp
stos
ljmp
shlb
dec
xor
xchg
call
inc
mov
incl
sub
mov
inc
in
mov
jg
movsl
dec
inc
and
adc
push
mov
incl
in
adc
mov
sbb
cld
push
outsl
mov
push
adc
cmp
pushl
movsl
sbb
clc
cs
sbb
lcall
call
enter
ret
dec
jbe
incl
ret
shlb
pop
enter
push
das
push
push
adc
test
xorb
gs
repnz
lcall
lock
fdivl
adc
es
jecxz
sbb
sub
into
ret
call
mov
push
xor
js
lahf
cmpb
xor
or
pop
push
repnz
fisubl
roll
dec
lret
test
inc
lods
and
xchg
fld
rcr
inc
popf
xor
add
push
shrl
pop
add
enter
std
add
pop
mov
inc
push
jmp
enter
xchg
ljmp
jbe
and
dec
popw
mov
cwtl
int
adc
add
lods
dec
cmp
fistpl
lahf
aad
aad
test
xchg
stc
popa
loopne
cs
lods
add
jb
sub
pop
xlat
insb
mov
fs
and
push
fdivrs
dec
sar
andb
adcb
mov
jae
scas
cs
and
mov
mov
add
or
xor
xchg
cmpsb
adc
mov
cmp
cltd
xchg
pop
repnz
add
xchg
clc
rolb
dec
scas
inc
add
xchg
lods
and
hlt
push
or
leave
fwait
stos
lret
mov
pusha
leave
sub
and
pop
jp
mov
cmp
mov
insl
rorb
xor
push
pop
push
or
repnz
add
dec
loopne
add
mov
xor
fisttps
push
movsb
pop
shlb
inc
push
daa
fsub
add
std
jo
stc
inc
and
stos
mov
mov
ret
push
out
mov
mov
cmp
mov
adc
sahf
pop
push
ret
fxtract
shufps
insb
clc
mov
adc
adc
or
leave
sub
pushl
sbb
add
sbb
mov
mov
xchg
lret
sub
orb
cmp
inc
push
add
das
sub
push
scas
jo
jp
repz
dec
call
shrl
mov
push
stos
out
sbb
stc
aam
push
ljmp
lock
das
add
push
inc
aam
test
js
xchg
mov
data16
sbb
pop
nop
ja
mov
push
nop
sbb
std
push
mov
hlt
mov
mov
loopne
test
pop
outsl
jg
mov
scas
and
les
lods
in
cmpsl
rcr
popa
test
nop
pushf
mov
outsb
pop
mov
outsb
out
push
and
jo
xchg
lods
je
bound
sbb
lea
sbb
incl
ficomps
je
adc
add
adc
in
ljmp
adc
xchg
jbe
out
add
add
test
leave
stc
inc
pusha
add
bound
xchg
mov
and
or
popa
sub
mov
mov
lea
push
jbe
push
and
cmp
in
dec
clc
jmp
adc
insl
rcr
sbb
or
rorl
test
in
nop
les
std
mov
inc
jbe
push
out
je
add
notb
sub
inc
inc
sub
push
mov
fcomip
das
cs
shrb
adc
dec
cmp
test
iret
cli
mov
mov
ljmp
cmpsb
cmp
dec
int3
nop
loop
add
int3
ljmp
fiadds
les
lahf
leave
cmp
sbb
cltd
std
fcmovnbe
xchg
nop
addb
test
jne
adc
sub
mov
inc
dec
dec
jbe
cmp
lea
xor
mov
push
xor
mov
fdivrs
add
and
aaa
std
push
or
push
movsb
push
sti
xor
xor
pop
jbe
outsl
cli
incl
xchg
notl
jo
xor
les
jb
jno
insb
in
add
decl
inc
test
bound
adc
and
sarb
shlb
mov
add
mov
or
out
inc
mov
test
xchg
cs
jmp
pop
add
outsl
inc
mov
add
pop
xchg
xor
sahf
push
outsb
add
call
in
dec
xchg
mov
lea
fidivrs
fnstenv
mov
scas
in
cwtl
jne
add
movsl
cmp
enter
dec
cld
jno
cmpsl
jmp
je
rcll
les
mov
xchg
call
jg
ja
in
jo
lods
sub
inc
mov
sarl
icebp
aaa
mov
lock
pop
lea
mov
paddq
inc
pop
adc
add
mov
pushf
jge
rorl
ret
push
push
push
mov
xlat
sbb
mov
push
pop
bound
cmpsb
pop
fidivs
loop
fwait
in
sbb
call
lods
inc
jp
add
adc
jne
nop
std
add
add
mov
or
addl
or
sbb
fdivrl
or
rcrl
stc
leave
mov
hlt
pop
and
mov
mov
js
jmp
scas
or
jbe
add
adc
pop
loope
sar
call
push
and
int
pop
movl
push
sub
in
push
pusha
movsl
sub
sahf
xchg
pop
out
dec
jb
loop
pop
popf
adc
sti
xlat
adc
in
sbb
lcall
daa
dec
cmp
push
cwtl
out
xchg
dec
mov
jecxz
adc
cmpsl
out
add
incl
ss
mov
add
inc
testb
jmp
lret
into
add
pushl
aas
inc
and
out
jp
rorb
inc
loope
test
ljmp
xchg
sub
sub
adc
sub
cld
jl
in
xor
mov
mov
adcl
pusha
sbb
adc
decl
jb
xchg
jp
mov
fadd
mov
popa
cli
add
clc
fisttps
sbb
pusha
push
inc
stos
shrl
outsl
adc
xlat
in
ret
pusha
daa
daa
mov
dec
pop
mov
or
cs
shlb
daa
inc
cmp
rol
incl
pop
cld
dec
sbb
xchg
repnz
mov
fldcw
or
fistpl
fistpll
nop
lret
inc
int3
xor
mov
and
test
cmp
cmpsb
lcall
jno
sbb
jmp
scas
dec
sub
sub
lea
pop
mov
repnz
shl
cmpsb
incl
sbb
test
adc
dec
pop
inc
adc
mov
cwtl
je
movups
inc
decl
fisttps
aad
xchg
or
jae
cmp
loopne
push
mov
adc
out
pusha
sub
fdivr
call
sbb
fimuls
jne
cltd
out
jmp
ja
arpl
cwtl
incl
jbe
cmp
adc
outsl
inc
aam
inc
mov
inc
out
ffreep
cli
xor
mov
mov
pushf
test
movsl
inc
add
and
or
int
push
std
call
ret
sub
xor
lds
pop
adc
in
push
dec
xchg
in
les
call
incl
or
sbb
jno
cmp
call
xchg
iret
pusha
out
out
cli
call
ds
dec
js
lds
xchg
inc
xchg
adc
xchg
sbb
dec
and
mov
xchg
popa
mov
inc
or
popf
and
or
jecxz
scas
shlb
pop
ret
mov
mov
call
shl
lods
xchg
xchg
dec
pop
push
sti
cmp
inc
add
jecxz
test
cli
addb
mov
mov
clc
push
push
jmp
push
cld
add
mov
shll
cmp
cmp
cmp
and
ljmp
gs
addr16
popf
call
cmp
inc
notb
test
or
dec
adc
push
lea
mov
sti
inc
ljmp
hlt
clc
sbb
testb
in
xchg
icebp
xor
fcoms
loop
cs
mov
xorb
shlb
mov
lock
leave
movsb
sub
lcall
subl
call
out
test
popf
fsubl
movsl
xor
push
jo
mov
and
mov
call
add
ficompl
and
rcrl
adc
imul
xchg
adc
sahf
mov
lahf
nop
shrb
decl
test
add
mov
fcoml
mov
popa
adc
inc
xor
aad
ds
mov
call
test
and
dec
xor
fld1
mov
lods
rcl
aaa
pushl
dec
clc
clc
adc
roll
in
loopne
mov
inc
out
loop
call
ret
and
mov
ljmp
xchg
js
test
sub
and
sahf
fstpl
les
imul
sub
leave
mov
jg
sbb
out
lahf
popf
out
das
movb
ret
test
pushl
push
lock
adcb
and
and
cmc
inc
dec
push
jae
xchg
pop
jae
and
xor
add
nop
ss
lcall
lcall
xchg
shll
jmp
mov
jb
pop
inc
add
sub
jl
decl
repz
cld
or
ds
xchg
and
ja
mov
sar
pusha
cld
dec
xor
popa
jle
stos
dec
out
fldcw
loope
dec
jg
std
adc
int3
stos
or
mov
add
xchg
sar
cmp
lcall
push
jae
int3
inc
leave
pop
cmp
icebp
movsb
cld
pusha
mov
xlat
xor
pop
xchg
or
jae,pt
or
add
sbbb
and
sub
sbb
jae
add
cli
pushl
and
cmpsl
xor
cmp
rorb
and
sub
enter
fsts
pop
inc
sbb
push
loop
adc
push
or
pop
hlt
shrb
add
fstps
loopne
or
into
imul
xchg
in
jge
cwtl
add
rcrw
cltd
mov
xchg
dec
lds
push
jbe
ret
add
jmp
sbb
add
aas
or
pop
clc
jle
dec
test
jmp
cli
pusha
mov
rolb
test
dec
fbstp
bound
mov
fcomip
dec
or
fcoml
push
push
jle
push
inc
call
xchg
les
aaa
mov
mov
xorb
jge
nop
dec
pop
ljmp
jne
aas
push
flds
xchg
push
cmp
addb
insb
lods
aaa
push
xor
fcomip
push
scas
cmp
jp
and
or
sub
xchg
dec
adc
icebp
lcall
adc
cmpsl
insb
movsb
xchg
cltd
les
adc
inc
mov
ljmp
adc
dec
mov
add
push
xchg
inc
push
std
push
js
dec
shll
jg
fdiv
data16
sarl
adc
push
mov
out
cli
inc
bound
xor
dec
mov
mov
add
shrb
and
mov
mov
push
cli
popf
mov
and
cwtl
jl
jl
aaa
sub
mov
xor
jns
enter
dec
inc
pop
push
cmpsb
movsb
roll
dec
aam
add
imul
adc
es
lods
imul
in
mov
push
pop
rorl
lret
adc
shrb
sbb
and
insl
cmp
cltd
inc
add
ja
jle
xor
popf
sub
pusha
lahf
dec
jmp
adc
popf
mov
stos
push
aaa
or
shlb
xlat
mov
mov
or
jo
add
test
bound
outsb
or
stos
hlt
das
dec
xor
and
bound
mov
pusha
inc
fwait
icebp
push
das
xchg
pop
filds
mov
sti
int3
jecxz
mov
cmp
mov
stos
imul
lock
sub
test
jecxz
inc
inc
sbb
out
or
mov
adc
mov
adc
movsl
jne
mov
jge
xchg
push
int3
add
lock
pop
into
pusha
mov
sbb
cs
pushl
inc
xchg
push
ss
test
dec
push
pushf
test
push
mov
mov
pop
inc
shlb
jno
call
leave
clc
jmp
mov
dec
or
fldt
jl
inc
pop
cmp
sti
mov
shrl
test
shlb
mul
out
mov
stos
sahf
aaa
add
clc
decl
insl
xchg
sub
xorb
rcrl
out
pop
mov
add
decb
mov
lea
mov
mov
loopne
and
or
pop
push
jno
stos
loop
pop
and
add
cmp
shl
inc
stos
test
add
jnp
jne
call
movhps
clc
icebp
js
and
xor
adc
inc
outsb
in
mov
ja
xchg
pop
sti
ret
es
ljmp
sbb
mov
in
incl
or
jg
int3
xchg
dec
fildl
dec
add
jge
xchg
scas
test
insl
or
lcall
add
mov
push
dec
jp
push
adc
cwtl
ja
jg
adc
incl
cltd
jmp
xchg
ljmp
sub
jnp
jno
lea
cmpsb
ss
fcos
ds
das
incb
mov
sahf
fsubl
loopne
aad
or
mov
sbb
popf
add
pop
jmp
mov
xor
or
mov
sbb
cli
test
addr16
out
mov
pop
rorl
arpl
sub
scas
rorb
ret
ljmp
inc
or
shrw
hlt
jg
incl
sbb
mov
into
sbb
aam
imul
fisttps
and
jmp
test
aas
pop
sub
adc
lock
lds
decl
or
sbb
xor
adc
mov
jmp
lods
imul
cmp
pop
scas
push
daa
movsl
add
sarl
lock
insl
pop
pop
cltd
es
pushl
or
push
cltd
adc
aas
sbb
movsl
xchg
fdivrs
jns
add
lods
outsl
clc
jp
xchg
addl
sbb
mov
lret
ret
lea
xorb
popa
call
clc
lock
fidivrs
rcrb
push
jbe
pop
idiv
aaa
adc
push
mov
jo
enter
jmp
lea
pop
sbb
rclb
sahf
pusha
add
loope
ret
xor
xor
xchg
imul
or
mov
sbb
fnsetpm(287
add
adc
shrb
test
rclb
aaa
xchg
adc
in
jo
vcvtsi2ssl
mov
shll
popa
and
and
jecxz
ret
or
lret
imul
ds
and
or
and
inc
or
xchg
cmp
daa
mov
mov
inc
and
smsw
rclb
xchg
add
sub
add
or
in
inc
adc
das
push
fstpl
jp
sarb
pop
mov
xchg
stc
xor
cld
imul
cli
adc
push
or
je
xchg
jle
add
aaa
loop
adc
fsubl
cmp
data16
inc
xor
loop
jmp
xchg
enter
jb
add
adc
cwtl
pop
push
or
shl
arpl
dec
pushf
sbb
dec
gs
decl
sub
test
jmp
push
sbb
or
andl
xor
cli
push
push
cmp
cmp
mov
or
dec
cli
push
mov
daa
scas
fsubrp
mov
add
enter
lcall
aam
xor
dec
ret
les
mov
nop
lcall
cli
mov
jmp
or
and
add
cmc
mov
add
add
push
imul
dec
cmp
stc
and
decl
mov
push
jbe
adc
sub
call
sub
aad
push
or
lcall
add
mov
testb
and
popf
cmp
sar
jmp
cmovb
xchg
jae
and
push
scas
adc
xor
dec
push
adc
cmp
jg
jg
jle
fcoms
sub
mov
pop
fs
movsb
sbb
xor
decl
or
mov
mov
push
in
sub
mov
cmp
scas
fcomip
movb
rcrb
adc
add
and
mov
call
fs
xor
mov
out
jecxz
icebp
sbb
mov
lods
jo
jle
or
jg
pushl
sbb
and
pop
push
mov
rcr
test
call
mov
lahf
sbb
inc
in
jbe
or
mov
or
call
data16
into
push
inc
xchg
push
or
call
andb
cmpsl
jns
or
nop
js
sti
sub
sti
ret
lcall
sbb
shll
mov
push
rcll
aas
and
adc
inc
ds
incl
call
inc
dec
lret
addr16
push
inc
mov
jp
je
rol
loopne
pusha
sub
add
xor
loop
sub
ljmp
sbb
mov
fwait
sub
jmp
dec
into
sub
mulb
rcrl
pop
repnz
data16
cmp
je
and
jns
rcrl
inc
aad
jmp
and
and
fcmovbe
xchg
mov
adc
mov
iret
adc
pop
push
and
mov
xor
cmp
call
pop
cltd
push
adc
push
arpl
cs
add
pusha
pop
bound
decl
pop
dec
rcrl
andl
and
call
loope
jg
cmp
out
rolb
dec
bound
flds
and
outsb
inc
push
mov
mov
adc
ret
bound
sub
jno
nop
es
adc
dec
mov
jmp
mov
int3
add
cmpsb
test
and
inc
inc
and
lcall
cmp
mov
fcoml
fsqrt
out
and
and
mov
call
jns
push
les
dec
dec
gs
xchg
and
xor
inc
mov
jl
xlat
into
sub
and
aaa
lcall
add
js
imul
adc
je
test
jmp
push
mov
inc
add
and
sbb
inc
js
xchg
adc
and
test
test
pop
inc
jmp
add
xchg
sbb
adc
cmpsb
pushf
inc
ret
shll
add
jmp
xchg
sbb
and
ret
adc
sub
es
stc
jno
test
loopne
and
loop
je
pusha
ret
test
and
in
lock
adc
dec
adc
popa
mov
cwtl
rcll
push
pop
pop
mov
call
xchg
mov
sets
cli
mov
or
sbb
sahf
push
mov
out
cli
cmp
jne
popa
lret
pop
bswap
movsb
cwtl
and
sbb
jg
ljmp
and
adc
xchg
adc
push
cwtl
pop
adc
pusha
ljmp
cli
cltd
loopne
fwait
inc
into
mov
and
sbb
mov
jo
sub
pop
push
fsubrs
ficoml
enter
loope
test
xchg
mov
sub
adc
jl
inc
pop
add
cmp
jge
mov
xor
call
inc
jb
cwtl
xor
fs
les
fs
inc
sub
enter
decl
addl
or
add
call
in
cmp
cld
cmp
or
mov
adc
loopne
sti
xor
cmp
jo
mov
cmc
xchg
shr
and
dec
aas
xor
mov
push
insb
cmp
pop
stc
out
cmpsl
add
or
inc
ret
add
mov
jmp
adcl
mov
and
pop
dec
inc
sbb
mov
loop
es
outsl
jle
and
ret
and
mov
or
fs
sub
adc
push
or
and
xor
xor
pusha
cmp
scas
mov
add
push
add
nop
or
call
outsl
mov
sbb
pusha
insb
cmp
stos
fsubrl
mov
jecxz
aad
call
adc
inc
enter
sti
mov
imul
lahf
gs
add
nop
lret
lcall
push
pop
push
fucom
jnp
ret
aas
call
dec
ss
jbe
jmp
outsl
push
mov
or
outsl
popa
rcrl
pop
jbe
cmp
clc
push
sbb
aaa
cld
mov
testb
cmp
mov
jge
pop
sbb
jmp
stos
sarb
dec
loopne
iret
jg
js
and
pushf
negb
subl
fadd
mov
cwtl
sbb
in
cmp
push
cmc
js
and
jno
addb
outsl
out
lods
mov
jmp
mov
ret
cmc
in
movsb
cld
push
cmp
and
je
push
jb
rcrl
in
sub
inc
subl
push
mov
or
inc
out
mov
das
mov
and
cmp
inc
xor
cli
push
dec
cmp
or
or
data16
int
cmpsl
mov
filds
call
inc
lahf
push
dec
dec
cmp
roll
scas
pop
cmpsl
xchg
daa
sub
and
adc
dec
sub
mov
mov
lret
jmp
les
sub
decl
adc
fucomip
mov
push
scas
mov
or
iret
cmp
xchg
mov
ret
or
jno
lea
dec
es
movsl
pop
fiaddl
sti
and
decb
adc
fdivr
push
popa
xchg
jns
xor
or
or
subb
or
push
out
pop
and
mov
push
es
test
insl
ret
mov
cmp
cmp
sbb
mov
call
add
lds
pop
bound
jbe
ror
pushl
cmp
push
lahf
repnz
insl
sub
cmpsb
lea
ret
push
fcompl
pop
jl
fcomip
mov
mov
mov
mov
loope
adcl
fisttps
jbe
mov
push
clc
adc
cmp
sbb
imul
xchg
xchg
in
add
pushl
imul
je
sbbb
xor
add
adc
adc
popf
mov
rclb
pop
pop
add
mov
pushf
xor
and
js
add
add
cmp
dec
mov
sarl
jns
cmp
popa
loopne
xor
add
incl
jge
xor
lcall
lods
push
jmp
int3
xor
sub
fsub
rorb
rclb
ja
fwait
xchg
xor
xlat
cmp
sbb
fildl
mov
and
cmc
xchg
es
lods
dec
jns
movsb
cmp
test
adc
cld
add
pushl
cld
iret
cwtl
jbe
adc
push
or
shll
cmp
scas
test
in
jmp
xchg
mov
xor
dec
lret
dec
mov
ja
xchg
cld
movsb
loop
incl
bound
jg
push
cmp
dec
clc
sub
pushf
imul
sahf
icebp
push
daa
dec
sar
and
ret
mov
mov
lcall
add
inc
cld
adc
cwtl
sbb
call
cld
das
lret
enter
add
and
fcoms
inc
cmpsb
cmc
push
mov
daa
add
decl
mov
incl
orb
sub
mov
jg
jo
sbbl
jle
std
mov
gs
insl
xchg
and
cmp
aam
andb
ljmp
sbb
cwtl
daa
shrb
xchg
or
xor
cmp
pushl
decl
nop
lcall
adc
sbb
stos
sub
inc
cmp
data16
push
clc
js
dec
mov
push
adc
jmp
pop
dec
and
sub
xchg
jl
xchg
incb
sbb
xchg
rcrl
es
out
jb
add
inc
decl
orb
imul
inc
test
sbb
loope
cs
test
push
pop
push
aad
ret
xchg
sub
inc
rclb
fistps
adc
jg
ljmp
cli
incl
inc
in
mov
pusha
sub
xor
lret
mov
das
mov
call
in
fimuls
scas
outsb
push
or
add
test
ds
fld1
clc
lcall
sbb
mov
fldl
cli
call
xor
and
mov
fsubs
roll
jp
sar
mov
mov
mov
cmp
mov
out
mov
call
and
lcall
xchg
lea
inc
or
test
xor
decl
pop
scas
aam
jmp
fnstcw
cmp
test
inc
and
incl
movsb
mov
xchg
icebp
test
xorl
hlt
push
das
jmp
pop
push
loope
call
cmpsb
mov
movsl
adc
adcb
jecxz
sub
lds
inc
xor
and
lret
add
repnz
cmpsl
hlt
fnsave
pushf
mov
call
ss
mov
mov
fmull
lret
mov
mov
xor
movl
aad
ss
add
xchg
in
and
xchg
sub
fbld
add
pusha
mov
jp
sub
push
xchg
aas
cmp
ljmp
fs
repz
push
jb
dec
test
xchg
pop
int3
mov
sub
iret
movsl
xchg
sbb
push
clc
sub
rcll
lcall
xchg
push
cli
push
cli
add
bnd
push
xor
shrb
mov
out
popa
cli
mov
inc
roll
test
stc
inc
xorl
xchg
jae
fs
in
lds
xchg
xor
jl
push
std
mov
idivb
lods
push
mov
pop
and
nop
sub
or
pop
lcall
jmp
test
xor
popa
inc
inc
or
int3
inc
xchg
and
lret
or
test
add
xchg
rolb
dec
stos
lock
popa
add
pop
bound
sarb
imul
add
mov
add
jo
call
cld
inc
call
mov
sub
push
xor
cs
imul
sti
out
ret
push
fcoms
pop
idivl
mov
push
mov
xor
push
pop
loopne
call
loopne
outsb
das
cmp
int3
fs
addb
or
mov
xchg
lods
mov
xchg
fisubrl
pop
and
fnstenv
mov
out
add
sbb
push
mov
dec
lret
adc
cld
inc
xchg
ds
das
inc
decl
inc
mov
in
es
fisubrl
dec
movsb
xor
stos
in
test
pusha
dec
ljmp
or
and
dec
and
mov
xchg
jo
push
sbb
add
push
xor
sub
int
sub
sub
xchg
or
pop
and
ljmp
mov
test
push
daa
xchg
mov
xchg
xor
inc
loope
mov
push
inc
add
inc
jp
pop
lock
incl
jge
fistpll
andb
mov
ja
xchg
imul
xchg
stc
movsb
into
int3
xchg
mov
push
stc
adc
decl
lods
icebp
mov
fs
adc
mov
xor
fiadds
das
clc
iret
xor
daa
or
sub
imul
pop
xlat
sub
cmpsb
sub
incl
cmp
xor
dec
movsl
nop
xchg
ret
jmp
dec
mov
outsb
cwtl
pop
push
inc
js
in
sub
sti
les
inc
jge
jbe
push
decl
sbb
pusha
add
push
mov
adc
or
ljmp
jns
stc
xor
xchg
pop
jne
bound
dec
fwait
cmp
push
decl
scas
inc
mov
hlt
in
and
rorl
into
stc
mov
call
adcb
or
rcll
pop
pop
add
pop
inc
inc
or
or
inc
xor
fcomip
decl
and
int3
or
add
sarl
lods
stos
pop
or
pushl
and
xchg
and
lcall
or
imul
lcall
jecxz
cld
cmp
imul
dec
test
add
lock
cmp
inc
test
cli
and
js
pop
out
cli
xchg
xchg
cmp
in
int3
std
mov
cmc
cmpsl
mov
test
int
lcall
les
push
xchg
es
mov
rorl
lods
jl
cmpsb
xor
ljmp
addl
mov
xchg
push
add
inc
inc
and
mov
jle
enter
out
cs
test
lcall
shll
sub
sub
mov
shl
dec
sbb
add
decl
dec
inc
cmp
jle
call
dec
or
pop
and
xchg
push
scas
cmc
cmp
in
mov
mov
mov
lcall
filds
aas
adc
fstl
or
add
sbb
and
cwtl
or
cltd
adc
nop
pop
jecxz
mov
cmp
xchg
les
dec
xor
bound
mov
xor
xor
xorl
shlb
xchg
cmp
lcall
xchg
popa
insl
leave
popa
or
loopne
xchg
into
daa
push
call
je
sub
or
popa
mov
mov
int
nop
or
sbb
sbb
add
arpl
adc
cs
sub
sub
xchg
sub
xlat
lcall
mov
js
adc
mov
inc
xor
xor
sub
call
dec
sbb
cs
adc
cmp
xchg
xor
inc
test
inc
das
jo
pushl
jmp
adc
mov
dec
mov
push
xor
xchg
and
fwait
cld
mov
mov
incl
pop
xchg
sub
mov
pop
in
mov
rcrb
fwait
mov
adc
int3
mov
ss
push
iret
xor
mov
jg
jmp
inc
ficomps
pusha
arpl
insb
js
mov
mov
sbb
jbe
data16
mov
inc
sub
add
cltd
outsb
data16
push
lock
push
int3
dec
and
sar
push
leave
and
mov
and
mov
cmp
pop
hlt
pushl
roll
sbb
je
cmp
cltd
xor
adc
in
mov
cmp
das
adc
xchg
lods
adc
popf
js
xchg
jbe
mov
jecxz
adc
cltd
mov
sbb
push
xchg
data16
adc
push
mov
mov
test
mov
adc
in
dec
adc
loope
jge
test
or
sub
lock
repnz
or
lods
and
out
push
push
clc
mov
mov
jmp
in
xchg
adc
adc
xor
push
adc
movsl
sbb
and
ljmp
mov
mov
data16
and
shlb
stc
sbb
jmp
shlb
jae
adc
jnp
and
sbb
dec
icebp
ret
std
ljmp
das
jmp
adc
mov
or
mov
bound
ljmp
or
jbe
xor
cltd
xor
jg
mov
movsl
xchg
fadds
push
dec
decl
inc
ds
pop
adc
cltd
addl
enter
and
and
xor
sub
incl
inc
cmpsb
test
inc
mov
and
cwtl
ja
inc
les
push
std
inc
iret
inc
sub
push
shlb
outsl
xor
pop
or
out
nop
xor
push
fs
ljmp
xchg
jb
imul
lods
inc
jne
mov
and
idiv
jg
inc
mov
repnz
adc
push
dec
test
xor
xchg
shll
or
notb
pop
cld
incl
es
jo
lahf
or
mov
inc
enter
jl
shrb
ja
andb
sbb
xor
cmpsl
sub
loope
add
fs
adc
inc
sbb
xor
loopne
or
mov
test
adc
jp
lds
push
and
imul
cs
xor
mov
cmp
push
shll
popa
adc
jae
enter
rolb
fnsave
push
popa
mov
push
fwait
add
inc
cmp
mov
xor
mov
inc
ss
jno
pop
cmp
xor
test
aaa
daa
out
daa
mov
popa
inc
fnop
in
mov
and
pop
xor
push
push
loopne
jp
or
xchg
xchg
pop
stos
push
repz
dec
pop
repnz
lret
in
fcoms
fiaddl
fisttps
pop
inc
dec
sbb
jns
in
mov
and
lds
sbb
mov
test
inc
xchg
imul
mov
mov
nop
dec
mov
sbb
dec
bound
cmp
xchg
ljmp
xor
daa
xor
test
sti
mov
mov
sbb
pop
mov
pop
dec
dec
stos
jp
mov
shlb
cmp
cmp
jecxz
jo
sbb
rcr
xchg
push
in
ret
lock
mov
lods
test
fcmovnbe
cmc
fwait
jecxz
incl
stos
xlat
jnp
lods
hlt
pop
sbb
nop
ljmp
cmp
jbe
fdivs
call
cltd
mov
pop
cmp
cmc
sahf
adc
sarl
in
scas
adc
sbbb
and
xchg
push
shl
call
enter
popf
add
dec
pop
adc
dec
cmp
or
and
inc
ljmp
mov
cwtl
les
sub
push
pop
loopew
movb
aad
sti
lret
test
fidivrs
add
ljmp
in
and
loop
cwtl
or
add
sahf
or
clc
fcoms
dec
incl
aas
and
inc
xchg
sti
adc
sub
sbb
loope
daa
sub
sbb
outsl
mov
out
fs
icebp
push
push
mov
sahf
pop
repz
xorb
add
ja
and
xchg
and
incl
dec
test
and
ja
sti
enter
inc
ds
pop
cld
or
inc
or
or
js
adc
jmp
mov
xor
fs
inc
std
or
in
fwait
and
call
cltd
addl
in
sahf
pop
nop
incl
out
out
int
jge
incl
mov
movsb
nop
xor
insl
sub
clc
xchg
out
bswap
mov
ucomiss
sub
jmp
adc
jg
xor
and
aas
sub
jg
sbb
cmp
aas
add
icebp
rcrb
andl
dec
sar
aam
je
adc
pushl
pop
cli
cmp
mov
stos
adc
sub
xor
cmp
sub
xlat
loopne
jmp
mov
ljmp
inc
add
sbb
xor
outsl
hlt
add
pop
add
call
dec
pushf
push
xchg
adc
dec
inc
call
test
jno
and
imul
jmp
pop
push
sbb
mov
add
or
movsl
pop
shrb
jb
adc
repz
cs
and
imul
push
popa
inc
adc
add
incl
stos
push
dec
mov
mov
jg
xlat
add
cmp
push
loope
sub
xchg
adc
inc
xchg
pusha
adcb
jg
mov
mov
cwtl
ljmp
push
push
out
push
push
push
push
sbb
push
cli
call
xchg
rclb
adc
cmp
lock
inc
mov
leave
jne
add
xchg
adc
pop
rcrl
bound
pop
mov
xchg
xchg
jmp
lods
xchg
xchg
cmp
int
pop
dec
xchg
mov
in
std
outsb
jnp
sbb
cs
push
and
pop
and
daa
push
arpl
add
fistpll
dec
and
enter
mov
or
repnz
add
in
cld
aas
add
or
das
mov
and
sbb
sbb
push
jbe
mov
xor
sbb
xchg
incl
or
popa
xchg
inc
jmp
jmp
jo
movsl
or
push
lret
jmp
lea
sarb
popaw
out
jmp
or
lcall
sub
mov
cmc
scas
mov
push
dec
xchg
xor
fs
incl
inc
add
cmp
int3
cld
into
jecxz
decl
mov
subb
cmp
test
int3
sbb
decl
push
dec
mov
int
mov
jmp
sbb
fisttpl
mov
jmp
xchg
or
loope
ret
xor
int3
in
leave
mov
sbb
shlb
jbe
mov
dec
jns
jae
push
movsb
push
and
push
cld
and
mov
pop
lcall
mov
test
sub
jmp
adc
aaa
decl
sub
mov
push
adc
loop
sti
add
jecxz
aad
and
add
sbb
adc
ljmp
adc
and
mov
or
nop
stos
rorb
jg
rol
inc
or
adc
and
das
icebp
and
and
jg
fcoml
mov
iret
icebp
lahf
jbe
cmpsl
nop
rclb
lret
or
loope
and
call
jmp
add
add
push
rolb
dec
jge
int3
popa
xchg
push
mov
repz
cmpsl
and
mov
inc
lds
push
or
and
and
adc
inc
orl
push
stos
mov
inc
jb
and
sub
imul
scas
lret
mov
or
jecxz
ficompl
xchg
mov
cmpsb
stos
pushf
cmpsl
fcmovne
adc
mov
stos
popf
pextrw
push
push
popf
rolb
push
and
pop
pusha
mov
mov
sub
adc
jmp
or
ret
mov
imul
loop
mov
mov
jg
mov
dec
xchg
fidivrs
dec
sbb
call
xchg
xchg
inc
pop
cmpb
inc
jmp
mov
lcall
pushl
sub
or
rcl
rcl
mov
mov
inc
jmp
xchg
inc
pop
jl
cld
pushf
or
xchg
jbe
lds
push
rcrl
adc
or
aaa
push
lret
cld
cli
test
andl
pop
addb
pop
mov
dec
cmpsl
xchg
fisubrs
and
push
jmp
pop
or
in
lcall
xchg
iret
or
test
jmp
pop
lret
jnp
adc
xchg
imul
add
cmp
add
out
mov
inc
pop
pop
push
ss
js
pop
sub
fcmove
ja
cmpb
stos
sub
lods
into
lretw
inc
add
ret
dec
mov
loop
scas
div
shr
orl
or
cmp
mov
lock
call
adc
or
gs
push
rorl
aad
aaa
inc
mov
pushl
loop
xchg
fdivs
xor
int
mov
out
daa
cmp
xor
or
call
aaa
dec
fisttpl
in
movsl
out
notl
pop
cmp
inc
movsb
mov
fdivrl
inc
jmp
or
insl
cltd
insl
inc
adc
fcmovne
push
test
cmp
mov
pop
push
icebp
rolb
mov
pop
loope
xor
hlt
aaa
lret
mov
xor
decl
or
push
push
mov
arpl
pushl
mov
xlat
lock
lahf
pop
xchg
sub
and
aaa
divl
xor
stos
repnz
pushl
cmpsb
jge
int3
mov
setae
in
xchg
bound
cmpsl
inc
adc
stos
add
or
adc
jbe
loope
pushl
stos
mov
adc
cmp
std
fildll
loop
dec
addb
push
mov
daa
lcall
inc
mov
dec
mov
add
stc
pop
sbb
into
or
aam
sub
jmp
mov
inc
fcoms
push
mov
fildll
cmp
adc
sub
jo
dec
subb
mov
dec
add
dec
ljmp
push
cmp
ja
loopne
stos
sub
cmp
lock
je
mov
loop
dec
or
dec
cli
stc
or
add
out
div
mov
lea
mov
inc
lock
ljmp
cld
adc
adc
in
int
or
jmp
or
add
or
jge
mov
incl
sub
add
mov
add
jp
test
cmp
loopne
loop
pushf
push
xor
xchg
pop
rcrb
mov
cmc
sbb
cwtl
pop
loop
les
movb
add
out
jbe
cmp
add
inc
adc
loopne
xor
push
xchg
jl
stos
adc
dec
jmp
mov
pop
pusha
test
push
jmp
jne
xor
mov
pusha
jecxz
pop
xchg
test
jge
xchg
dec
and
shll
dec
lcall
dec
xor
dec
pop
inc
loope
stos
imul
jg
lea
addr16
out
test
mov
mov
adc
push
adc
mov
and
dec
push
adc
and
les
ss
call
jno
leave
cmpsb
sahf
adc
or
pop
mov
enter
aas
push
push
add
xlat
adc
int
mov
dec
mov
xchg
mov
testb
out
jmp
rorl
mov
scas
lock
loope
stos
in
mov
popf
mov
ljmp
aas
add
add
dec
mov
jecxz
nop
xor
jns
or
adc
mov
sbb
mov
jmp
cld
sbb
mov
mov
sub
pop
test
stos
sar
call
rcll
stos
daa
mov
nop
dec
not
push
jge
push
push
es
in
fistps
push
mov
test
dec
insb
pushf
stos
adc
mov
mov
jb
mov
ja
rorb
rclb
add
sbbb
in
cmp
and
ljmp
and
xor
or
push
pop
mov
ds
dec
test
lcall
rcrb
push
loopne
xchg
or
lds
movsl
fildl
mov
jmp
pop
sbb
or
push
inc
push
mov
addb
aaa
xchg
jns
lds
filds
add
scas
sbb
push
test
test
rorl
lret
into
mov
or
call
dec
push
jne
sbb
mov
lahf
xlat
push
shl
outsb
stc
adc
call
lret
mov
fsubl
enter
adc
and
std
jge
jmp
call
cld
lcall
negb
sub
cli
pushf
test
nop
xrelease
jns
decl
push
shlb
sete
adc
test
repz
flds
add
jmp
ss
scas
sub
pop
xchg
adc
rolb
dec
inc
pop
imul
incl
push
sbbb
loope
jno
in
push
jecxz
sarl
incl
jne
or
movl
and
js
pop
stos
ds
lcall
adc
jl
jns
add
clc
mov
incl
add
or
cs
push
stc
or
clc
sub
cld
fstpt
bound
popl
mov
mov
sbb
clc
xchg
out
jl
pop
jns
cmp
mov
sub
stos
add
mov
insl
mov
add
jecxz
sarl
xor
pop
mov
dec
add
sub
pop
sub
mov
xor
out
jbe
pop
jecxz
add
idivb
imul
int
sbb
ljmp
xor
clc
fisubs
and
mov
out
pop
clc
push
iret
fstpt
loopne
scas
mov
mov
jl
mov
ds
jecxz
mov
pushl
jle
clc
outsb
pop
pushf
in
loope
jl
jl
ds
clc
jae
fcoms
mov
jle
inc
mov
icebp
std
pop
aas
xor
clc
dec
ds
pop
xor
leave
out
jl
pop
test
js
sti
jmp
stc
scas
mov
mov
jbe
jl
add
cli
pushl
sbb
fsubr
mul
jb
or
inc
movb
js
js
jecxz,pt
test
inc
pushf
ret
add
loop
sub
fdiv
mov
arpl
push
mov
clc
push
outsb
cmp
clc
ljmp
pop
sub
pop
jecxz
icebp
pop
pop
int3
jl
cmp
jecxz
icebp
or
das
mov
add
jl
jb
cmpsl
es
cld
dec
add
jns
mov
add
leave
clc
sbb
ds
js
and
dec
pop
mov
and
sub
xor
mov
pop
xchg
and
jp
dec
fimull
pop
jecxz
add
in
pop
stc
pop
add
sub
stos
sahf
ret
push
ds
int3
jmp
ds
pop
push
ss
shlb
xchg
mov
cwtl
push
add
dec
ljmp
mov
sub
dec
jl
imul
nop
cmpxchg8b
fs
scas
add
je,pt
ret
test
pop
nop
out
mov
and
xor
movsl
iret
loopne
lret
sub
jg
jmp
add
add
data16
inc
mov
mov
add
jne
inc
add
add
sbb
adc
shl
std
add
sbb
mov
mov
mov
add
icebp
pop
add
jb
adc
mov
mov
lret
add
add
or
fidivs
add
xchg
hlt
in
fwait
inc
xchg
es
add
scas
mov
sti
and
rcrb
pop
stos
add
sbb
add
ficomps
fisttpl
clc
sub
mov
add
jbe,pn
inc
dec
pop
clc
sbb
inc
mov
movl
add
mov
jmp
jmp
shr
pushl
add
xchg
lds
dec
sbb
mov
js
sub
icebp
push
mov
scas
pop
and
xchg
rolb
add
std
lods
arpl
lods
sbb
mov
notl
adc
jg
adc
add
cmp
add
sub
add
clc
and
add
xchg
sbb
add
lods
movsb
jecxz
sub
outsl
add
mov
xor
das
sub
mov
adc
xlat
mov
ljmp
imul
addl
fstp
es
sbb
push
clc
pop
mov
imul
scas
jbe
dec
ret
pop
adc
and
ds
or
cmpsl
mov
xor
pop
ds
iret
cmp
add
push
adc
inc
dec
or
add
pop
jmp
neg
push
add
add
add
lahf
or
sbb
or
add
sbb
outsb
mov
pop
pusha
rolb
xchg
sbb
fcomp
mov
push
cmp
add
pop
bound
mov
and
iret
add
xor
sub
sub
out
lock
cltd
sbb
sub
scas
mov
cmp
cli
lock
call
add
jbe
mov
and
sbb
test
lcall
sbb
adc
incl
rclb
add
xor
shlb
or
pop
stc
or
pop
data16
gs
xlat
jl
and
adc
inc
les
and
cmp
mov
js
or
dec
or
dec
mov
incl
mov
push
or
stos
sbb
outsb
into
aam
and
sub
out
aas
out
or
decl
js
or
xor
and
dec
je
inc
dec
push
jecxz
iret
dec
mov
in
xlat
sbb
out
call
shll
jle
lcall
jmp
cmpsb
sbb
inc
daa
iret
ja
mov
ud0
dec
cmp
addb
push
loope
insb
or
lds
aas
and
add
sub
inc
adc
sbb
xchg
jl
pusha
jmp
shr
jle
jno
icebp
int
out
sbb
sahf
sahf
les
lds
inc
aam
ja
pop
subl
imull
popa
outsb
jmp
mov
stos
in
mov
les
ficomps
hlt
adc
push
fnstenv
xor
mov
jbe
sub
mulb
les
add
decl
mov
cmp
decb
dec
cld
xor
push
jo
stos
cmp
mov
enter
jmp
push
mov
aas
inc
es
push
add
aaa
mov
daa
lahf
sub
call
cwtl
ret
popf
xor
test
jo
dec
push
decl
adc
shl
aad
add
lds
in
aas
or
les
inc
and
adc
jb
call
pusha
je
lods
xor
jg
stos
lods
jg
add
out
dec
pop
ja
popf
cmpsb
dec
incl
in
cmpsl
cmp
mov
pop
mov
call
push
outsl
mov
and
test
adc
sub
inc
ret
or
lcall
sbb
pop
pop
je
loop
cmpsl
inc
jns
imul
out
and
jmp
cmp
repz
jmp
or
and
sarl
mov
and
lea
incl
sub
roll
int3
rolb
lods
push
dec
icebp
push
maxps
hlt
call
xor
das
repnz
mov
add
in
mov
mov
mov
fcom
pusha
push
jo
rorb
or
lock
scas
mov
pop
shl
nop
push
dec
xchg
in
xchg
add
lods
or
sbb
xor
insb
or
lcall
push
xchg
adc
shll
fisubrl
and
push
mov
inc
int
pop
lock
stos
ret
and
adc
mov
ljmp
jb
enter
inc
outsb
popl
adc
add
cmp
mov
xchg
decb
cwtl
and
lock
test
jo
mov
mov
dec
movsb
pop
popf
outsb
rcll
add
or
mov
sbb
xor
iret
push
stos
sbb
sub
ret
push
xchg
jmp
and
iret
cmp
inc
sbb
sub
pop
mulb
sbb
stc
loope
inc
inc
xor
mov
call
stc
push
pop
and
and
mov
rcrb
jo
leave
and
rorl
and
inc
jg
sbb
cmpsb
mov
std
add
mov
adc
xchg
sti
mov
inc
pop
push
dec
xor
sbb
addl
sub
jno
inc
push
push
ja
lret
jbe
incl
adc
mov
add
shlb
jg
lret
je,pn
xchg
xor
xchg
fldcw
loop
dec
xor
lds
cmp
xor
ljmp
pop
push
jg
add
cli
push
sub
jmp
push
xor
fsts
sbb
pop
es
inc
push
rclb
adc
add
lock
inc
incb
std
push
enter
das
fdiv
je
mov
jl
inc
sub
mov
add
stos
dec
adc
cmpsb
stc
sbb
incl
rcll
or
lock
and
adc
xchg
mov
push
pop
daa
jecxz
jns
sub
aas
xchg
cmp
inc
data16
xor
pop
data16
dec
mov
inc
movb
sub
cmp
inc
mov
jbe
push
loope
lcall
jmp
leave
loopne
imul
push
pop
mov
pop
lods
pop
xchg
popf
insb
jae
fcmovnbe
cmp
loop
popf
cmp
ljmp
test
xchg
dec
cmp
pop
movsb
daa
and
out
loope
adc
mov
cmpsl
orb
dec
sub
cmp
cmp
decl
push
adc
adc
mov
out
ret
xchg
xlat
jne
enter
xor
inc
xor
xor
rolb
loopne
cmp
jp
leave
incb
pop
xlat
test
bound
roll
fstl
mov
decl
xchg
jge
cmp
mov
xor
arpl
jle
shlb
jmp
incl
aaa
aas
dec
and
clc
jb
or
dec
shrl
int3
test
mov
inc
mov
xchg
xchg
cltd
lds
mov
jg
push
sbb
enter
mov
test
orb
and
decl
sbb
mov
mov
cs
xchg
movb
std
ja
dec
int3
jg
lcall
adc
and
add
pop
pop
add
decl
fs
in
jge
lahf
insl
lock
cs
and
push
adc
inc
andl
les
mov
fcomip
mov
pop
sbb
rol
sahf
inc
and
ds
cmp
mov
test
cmpl
add
ret
mov
aas
rcl
mov
cwtl
add
subb
mov
loop
movsb
dec
pop
push
adc
insb
jg
cmp
adc
fsubrs
xor
fwait
push
jge
jnp
mov
add
pop
icebp
call
add
lds
mov
jle
lcall
cmp
and
ljmp
out
and
pop
into
pop
clc
push
dec
mov
insb
mov
cmp
push
cltd
add
out
or
insb
test
pop
cld
pop
icebp
or
or
sub
cmp
jno
out
pop
dec
test
cld
incl
push
mov
lods
jmp
clc
orl
je
mov
push
bound
rolb
fmull
decl
sub
lds
jb
add
gs
incl
jp
add
push
inc
fistl
push
hlt
mov
mov
gs
out
clc
call
shlb
add
jno
mov
lods
rolb
gs
call
nop
test
lods
outsb
pop
lret
pushf
hlt
sub
sbb
mov
and
bound
xor
push
sbb
cmp
decl
lock
loope
cltd
xchg
mov
xchg
or
dec
xchg
mov
add
jb
sar
lcall
adc
mov
dec
sarb
aaa
mov
xor
incl
nop
push
test
sbb
in
cwtl
or
adc
sub
fiaddl
pop
push
orb
adc
and
out
pop
jl
add
lcall
xchg
mov
stos
pop
sar
lcall
pusha
jg
sahf
cli
inc
push
push
jg
arpl
in
fldcw
mov
inc
in
test
mov
pushl
cs
push
fisttpl
cmp
add
out
pusha
and
ss
aam
mov
push
adc
xchg
clc
ss
cmp
xchg
incl
push
jmp
dec
movsl
in
sub
and
xor
jmp
jb
insl
xchg
adc
mov
out
or
and
lds
push
xchg
test
pop
pop
or
jl
lds
add
jg
movsl
cmpsl
pushf
fadds
mov
inc
dec
insb
sbb
fists
sbb
outsb
mov
and
insl
rcll
jbe
ss
dec
popa
std
push
cld
scas
into
test
dec
sub
mov
adcl
pop
test
pushl
adc
aad
sahf
push
mov
push
adc
loop
inc
or
mov
dec
icebp
mov
lcall
pop
insl
mov
loopne
addr16
jg
and
sub
lods
dec
and
leave
mov
test
mov
ret
xchg
jnp
mov
jno
push
in
sarl
add
push
enter
and
cmp
ss
test
jne
outsl
cli
ljmp
loope
and
and
push
xchg
cwtl
sbb
jmp
lds
daa
sbb
push
in
xchg
pusha
scas
std
orb
imul
call
loop
inc
pushl
cmp
fists
subl
or
xor
in
mov
or
jmp
xlat
orl
fistl
cltd
iret
pop
xchg
gs
sub
call
incb
inc
movsl
jge
cwtl
outsb
fucomip
mov
movsl
sete
xchg
addr16
jmp
popa
cmp
repnz
inc
pop
inc
add
or
int
inc
je
pop
std
cmp
mov
jmp
shll
or
kxorb
arpl
shll
clc
pop
mov
pop
mov
jbe
inc
inc
decl
mov
icebp
or
repz
xlat
add
shlb
aas
mov
push
hlt
incl
push
lds
orb
in
pusha
jmp
ret
mov
push
sub
or
sbb
iret
punpckhwd
sbb
and
ss
add
mov
mov
jmp
xchg
test
add
rcl
lcall
cmp
iret
out
xchg
rolb
les
xchg
pop
out
test
icebp
dec
sub
xchg
pusha
inc
adc
inc
data16
lea
xchg
inc
repz
add
cs
rclb
mov
adc
mov
pop
orl
orl
lea
pop
pop
jl
call
adc
decl
sbb
xchg
mov
loope
out
mov
or
sub
aad
std
jmp
xchg
cltd
call
ret
aam
inc
dec
leave
adc
icebp
inc
adc
lods
call
lods
int
dec
add
shl
mov
adc
xor
aad
sahf
pushf
and
outsb
loop
aaa
out
cli
incl
xchg
inc
rcl
xchg
les
sub
loopne
inc
fildl
sti
mov
ja
lea
fadd
rclb
lea
push
xor
inc
jg
ret
mov
xchg
jno
movsb
sub
jnp
inc
xchg
xchg
add
cmp
cmp
push
or
or
icebp
or
jb
out
insb
decb
scas
sub
mov
jecxz
dec
cmp
mov
sbb
push
test
xor
int3
jg
in
push
outsl
jl
mov
fbld
popa
out
or
xchg
xchg
in
data16
mov
inc
and
enter
dec
mov
mov
and
push
xchg
mov
gs
movsl
jne
jle
into
jns
popl
and
pop
jns
mov
dec
mov
xchg
mov
mov
mov
pop
loopne
inc
enter
xchg
add
dec
dec
jno
lock
pop
sub
incl
sbb
cmp
and
in
aam
inc
ss
mov
push
inc
popa
add
mov
jg
test
repnz
insb
stos
jecxz
sub
std
xchg
es
incl
inc
push
arpl
adc
jmp
sub
add
lods
addl
push
pushf
cmp
ljmp
adc
sbb
ficompl
out
data16
je
push
loop
and
and
pop
cld
call
cmpsl
add
pop
mov
or
inc
addr16
jg
sub
ljmp
pop
push
rolb
mov
jl
mov
dec
jl
adc
sbb
and
cmp
ds
js
sbb
out
clc
incl
or
cwtl
rcrb
divb
add
bound
pushl
pusha
nop
out
push
add
inc
dec
movsb
sbb
stc
mov
xchg
ljmp
adc
fiaddl
or
std
inc
xor
ret
fcoml
jmp
lcall
cmp
xor
scas
push
push
mov
pop
je
jg
loop
lahf
imul
dec
mov
decb
mov
rolb
adc
movsl
add
xchg
push
dec
lods
movsb
rcll
ds
mov
add
dec
add
add
jbe
jne
sub
in
adc
add
shlb
adc
mov
cmpsb
xchg
adc
outsl
sbb
inc
inc
xchg
daa
cmpsl
call
add
adc
jne
mov
ror
pop
subb
out
stos
sbb
jb
and
roll
cmpsb
add
sbb
pop
les
sbb
int3
inc
rclb
mov
jae
add
je
push
in
adcl
out
enter
sub
in
in
ja
or
add
add
ret
push
pop
stos
pop
ds
add
xchg
add
ret
imul
push
mov
push
xchg
cli
add
mov
ss
sbb
in
add
scas
sub
call
andl
mov
pusha
daa
loope
hlt
sbbb
adc
fmuls
push
orb
jbe
or
dec
lds
lock
add
icebp
dec
mov
jo
xor
fsubrs
dec
push
mov
sbbb
ds
sub
push
repz
inc
mov
mov
mov
cld
mov
or
into
xchg
xchg
mov
add
adc
repz
sti
fisttps
cmp
cs
icebp
aad
sub
and
mov
sbb
xlat
add
add
subb
rclb
fsubl
sub
push
push
fs
popa
jbe
dec
mov
jo
dec
cmp
add
adc
sub
pop
xchg
es
or
pop
pop
sarl
jae
clc
or
add
push
xor
dec
cmp
bound
dec
cmp
mov
mov
mov
test
add
add
test
dec
xor
jl
ljmp
cs
ljmp
xor
inc
add
adc
push
movsl
cmpb
loop
and
add
shlb
lds
clc
outsb
add
test
ret
bound
rclb
jl
fdivrl
mov
sub
outsl
fcmovnb
add
xchg
ds
add
pop
bound
mov
pushf
rolb
stos
addb
out
push
and
es
sub
xchg
cmp
decl
ret
mov
loopne
adc
int
test
loop
in
ljmp
add
shrb
daa
adc
filds
nop
dec
and
ret
aaa
test
and
push
icebp
lcall
cli
jnp
ror
xor
dec
lock
mov
cli
jge
iret
dec
nop
sub
movsb
mov
fs
push
inc
xor
mov
es
lcall
and
adc
push
std
rolb
out
dec
push
stc
xchg
fcompl
mov
sarb
add
and
ss
mov
loope
cld
call
xchg
imull
xchg
cmp
adc
jl
data16
push
lcall
xorb
mov
xor
nop
xchg
xor
imul
or
or
cmpsl
adc
jnp
mov
lock
jb
dec
in
jbe
xchg
ret
jmp
xchg
jne
stc
jnp
rorb
imul
pop
out
ds
rcll
lcall
push
sbb
adc
cmp
mov
lret
push
adc
decl
inc
mov
aaa
nop
dec
mov
dec
outsb
jae
ret
out
mov
leave
and
adc
inc
xchg
test
and
int3
mov
sarl
pop
pop
out
mov
adc
aam
add
rolb
cmpsl
dec
sti
pop
sub
ljmp
xchg
push
or
test
xor
and
add
mov
lods
cmpsb
cld
dec
leave
mov
xor
popa
and
inc
insb
cld
jo
in
inc
pop
jl
mov
filds
ljmp
hlt
push
pop
jo
popf
cwtl
dec
lcall
push
hlt
xchg
out
inc
rcr
mov
pop
les
sbb
add
or
sbb
and
adcb
mov
dec
lods
clc
call
ret
ret
inc
mov
repz
fadds
hlt
xchg
fwait
mov
pushl
insb
push
inc
test
out
mov
push
push
sub
out
cmp
jno
and
shlb
ljmp
cltd
and
fmulp
adc
inc
xor
push
push
and
mov
flds
addr16
jp
shll
push
lcall
lcall
loopne
adc
inc
out
sar
ret
scas
pop
pusha
imull
jp
loope
dec
loopne
and
outsl
ret
in
xor
xchg
jle
ret
mov
cld
pop
iret
enter
out
insl
bound
adc
das
ljmp
aad
xchg
pop
leave
or
add
mov
incl
push
inc
pop
les
mov
dec
xor
or
cld
xchg
loope
jl
and
testb
dec
sub
add
mov
aas
daa
dec
or
enter
mov
movsb
xchg
or
data16
aas
xchg
lret
xor
or
pop
incl
or
jle
mov
add
dec
add
xor
insb
lcall
mulb
and
fwait
orb
cmp
sbb
push
sub
and
ljmp
aam
out
mov
andb
dec
testl
push
push
sarb
inc
pop
push
mov
push
or
mov
hlt
mov
call
jmp
daa
xor
inc
mov
pop
mov
fs
add
cmpsb
add
stos
xor
adc
inc
mov
jge
inc
or
mov
push
pop
push
mov
imul
hlt
call
inc
mov
mov
imul
stos
repz
data16
cmc
test
push
dec
cmp
lods
push
push
or
iret
or
sarb
imul
call
dec
mov
pop
imul
call
add
and
xor
dec
addr16
lret
jno
nop
pop
sbb
cmp
sub
sbb
pushl
cli
out
cmp
leave
aad
outsl
inc
sti
xchg
inc
add
mov
loop
xchg
and
or
repz
lcall
jmp
rclb
insb
ljmp
addl
add
dec
dec
mov
dec
mov
loop
add
and
jg
xor
push
subl
lea
push
jg
in
ljmp
fs
jmp
ja
pop
push
int3
mov
jns
mov
sub
xor
jg
pop
movsl
mov
cli
scas
sahf
cmpsl
in
pop
push
inc
loop
mov
and
call
rolb
aaa
xchg
decl
mov
mov
lock
decl
stos
pop
movl
les
movntps
mov
lret
add
incl
enter
add
and
dec
nop
fwait
addl
sub
decl
sbb
inc
loope
pushf
jmp
ret
daa
cmc
push
test
je
cmp
loop
cltd
push
jne
pop
or
shrb
fldl
dec
adcb
mov
scas
nop
test
mov
mov
mov
xor
xchg
or
xchg
push
push
mov
and
mov
inc
orb
cmp
movsb
dec
dec
leave
frstor
push
push
push
inc
push
nop
in
nop
lds
inc
xor
lods
ja
sbb
call
xchg
jnp
jp
in
fsub
enter
mov
or
adc
jg
jmp
int
dec
lods
inc
adc
or
into
sbb
inc
xor
add
xor
xlat
and
xor
lods
push
call
call
sub
dec
mov
bound
and
adc
repz
pop
mov
and
inc
dec
jg
pop
lret
push
pop
mov
test
push
nop
and
sub
adc
mov
lcall
and
mov
and
maskmovq
testl
repnz
sbb
mov
pop
imulb
int3
sub
sbb
and
or
incl
es
test
scas
dec
stos
mov
cwtl
xchg
mov
gs
xor
fisttpll
ljmp
and
and
adc
xlat
cwtl
pop
inc
push
cmp
enter
xor
clc
mov
lea
pop
cs
sub
cwtl
aam
xchg
incl
push
and
push
inc
adc
xor
fmull
jecxz
adc
add
into
nop
mov
sbb
mov
pop
sbb
adc
and
test
lcall
scas
add
test
and
les
cmpsl
data16
and
decl
imul
mov
or
xor
cwtl
and
adc
inc
jmp
call
adc
shrb
inc
out
enter
jnp
pop
sub
ja
push
adc
mov
and
pushl
sub
add
and
push
adc
add
stos
push
adc
in
jmp
push
roll
addr16
fistpl
add
cltd
dec
jae
int3
or
out
inc
dec
and
and
mov
adc
ret
dec
or
mov
xor
and
lds
inc
js
jmp
inc
sbb
mov
insb
inc
or
mov
xlat
xor
insb
mov
xchg
loop
fildl
mov
stc
cmp
or
mov
and
and
xchg
stos
xchg
jg
jo
adc
xchg
and
mov
test
inc
xchg
rcrb
mov
sbbb
lea
jo
mov
mov
stos
fistpl
andl
ret
sahf
adc
push
in
icebp
push
jo
dec
shrl
xor
xor
adc
sarb
popf
imul
jg
test
adc
push
stos
push
xchg
xor
rorl
daa
imul
clc
lcall
push
data16
push
ret
add
or
xor
inc
jmp
out
loop
dec
adcl
sbb
sbb
les
js
ret
icebp
xchg
pop
es
inc
or
jns
inc
dec
and
adc
add
bound
dec
pusha
inc
test
inc
jp
mov
ljmp
mov
add
adc
sub
scas
rol
sarb
jecxz
sti
mov
movsl
lods
or
jmp
popf
mov
push
push
cmpsb
add
ds
mov
mov
int3
pop
push
jl
mov
decl
mov
shl
test
and
fmuls
mov
sub
mov
cld
jmp
mov
scas
outsl
aas
cmpsb
insl
xor
fisubl
call
pop
adc
mov
sarb
add
push
add
and
loop
inc
shrl
adc
loop
cmp
movsl
out
adc
nop
adc
sub
xchg
ret
test
dec
pop
inc
sub
shl
xchg
rsqrtps
push
or
cli
orl
insb
call
shrb
add
mov
cmp
xorl
stos
jg
lcall
push
xor
cmp
iret
ds
daa
push
add
cwtl
jno
or
or
push
add
add
inc
sub
push
push
mov
cmp
lds
xchg
lahf
sub
nop
add
iret
push
stos
fs
push
or
hlt
mov
mov
xor
sar
cwtl
mov
push
insb
adc
ja
enter
gs
jmp
cmp
jmp
loopne
mov
sbb
inc
mov
arpl
sbb
lahf
push
imul
or
dec
sub
rorb
xor
jno
ret
sub
call
pop
shr
mov
xor
xchg
inc
dec
adc
repnz
ror
bound
add
add
sbb
add
and
xchg
mov
sarb
scas
ds
mov
js
mov
mov
adc
push
sbb
rolb
lret
test
notl
sub
and
shrl
push
sahf
pushf
sub
dec
cmp
sub
xchg
xor
pop
mov
and
push
mov
dec
push
insl
xchg
xchg
xchg
push
mov
xor
push
std
xor
adc
xchg
xor
cmp
addb
xor
push
inc
xchg
aad
aas
shrb
cmp
das
cmpsl
call
jmp
add
add
ljmp
ljmp
lock
mov
dec
push
sbbb
cmp
fldcw
out
mov
lcall
xchg
mov
fadds
stos
and
dec
sqrtps
and
jmp
inc
cwtl
mov
cmp
fwait
push
add
xor
out
scas
push
mov
adc
call
insb
xchg
sub
loop
xchg
push
rolb
aas
test
insl
outsl
lcall
fldcw
dec
lret
ret
jl
sub
dec
cmc
adc
pop
aad
loop
lcall
mov
fnstcw
cli
cmpsb
movsl
cwtl
scas
rorb
xchg
adc
sub
dec
test
call
aad
inc
in
inc
loop
insl
orb
lcall
sub
cmp
je
cs
sub
insl
sub
in
xor
sbb
push
add
and
sub
pop
add
push
push
jecxz
leave
outsb
mov
scas
shr
aas
inc
rorl
sbb
xchg
or
mov
cmp
lcall
fisttpll
or
push
xor
ret
cli
xchg
mov
test
lcall
mov
aam
adc
jb
lret
sub
fbld
in
pop
xchg
iret
stos
lds
sub
repz
add
and
jmp
and
invd
mov
test
inc
adc
lods
push
sub
jno
clc
fisttps
hlt
inc
decl
mov
push
sahf
cltd
fs
cmpb
out
sbb
inc
mov
dec
mov
in
push
xor
push
bound
push
call
mov
inc
insb
bound
cmp
dec
pop
or
icebp
mov
mov
push
icebp
push
hlt
sbb
sbb
arpl
in
mov
inc
incl
push
add
or
rcrl
adc
sbb
push
movb
ljmp
clc
jmp
jl
cmpsb
pop
or
mov
adc
mov
mov
call
mov
ds
mov
and
je
mov
lock
shll
cmp
dec
bnd
add
pushl
shl
out
mov
adc
and
jle
iret
mov
test
adc
jmp
and
mov
cltd
pop
movsb
push
repnz
cmp
fs
push
inc
lcall
dec
and
fildll
jo
roll
nop
das
lahf
js
and
loopne
xchg
ljmp
sbb
adc
shlb
xchg
dec
push
das
out
mov
ficoml
or
jae
decl
inc
pop
pushf
sbb
repnz
pop
add
sbb
data16
dec
add
lret
lahf
xchg
inc
decl
fidivrs
movsb
fwait
lahf
cmp
mov
mov
lcall
js
sub
sbb
inc
inc
sub
stc
adc
mov
cmp
gs
aas
cmp
dec
inc
add
xchg
popf
popf
add
inc
pop
add
fists
out
add
imul
scas
add
push
add
mov
mov
or
inc
dec
xor
sub
int
mov
xor
xor
sbb
add
test
jg
incl
sbb
add
cmc
addb
adc
add
mov
pop
and
or
cmp
pop
popa
mov
pushl
or
mov
lahf
insb
or
dec
and
cmp
orl
out
subl
xchg
test
test
in
cltd
push
cmovle
scas
mov
test
cwtl
enter
mov
dec
inc
or
adc
fwait
cmpsb
sbb
cli
outsb
inc
scas
fadd
rcll
cmp
movsb
roll
xchg
sbb
add
sbb
cld
mov
adc
movsb
inc
jnp
ss
leave
negl
and
aam
loop
inc
push
cld
call
mov
outsl
ret
or
popa
mov
imul
mov
add
jl
or
dec
fs
sar
adc
push
cmp
test
outsl
xor
mov
cwtl
cmp
adc
aam
addr16
lds
xchg
insb
mov
call
mov
orb
mov
in
and
je
sub
clc
je
jl
dec
bound
push
call
jp
mov
inc
pop
adc
mulb
in
jmp
add
out
inc
inc
outsb
addr16
loopne
or
cmp
pop
test
cmp
push
orb
push
cs
or
incl
mov
inc
adc
xchg
add
subb
push
mov
xchg
xor
mov
sete
mov
sbb
cmpsb
push
inc
xor
jns
xchg
mov
orb
sbb
dec
jg
jecxz
pop
enter
in
xchg
pop
push
in
pushf
lea
add
mov
push
adc
shlb
gs
push
sbbb
and
pushf
lcall
jo
mov
add
dec
arpl
dec
jno
enter
cld
push
dec
push
add
adc
add
sub
and
sarb
mov
subb
aas
mov
inc
push
mov
xor
inc
loopne
addr16
add
les
test
pop
fadds
pushl
adc
xor
ficomps
xchg
inc
repnz
outsb
inc
push
rcll
pop
ds
mov
mov
push
sbbb
xor
mov
mov
bound
in
push
pushl
pop
xchg
aam
mov
test
cmp
pushf
push
lret
sbb
loop
ret
and
jecxz
jl
jecxz
pop
pop
sahf
js
pop
jl
jl
icebp
cmp
and
test
movq
jl
jl
pop
mov
jge
add
clc
adc
enter
dec
mov
mov
and
out
pop
inc
cwtl
sub
and
mov
loop
and
decl
sysenter
es
jl
bound
jmp
cwtl
dec
add
movsb
icebp
adc
loopne
shl
push
and
jl
icebp
add
je
clc
and
push
pop
xor
pushl
ja
bound
or
test
dec
jecxz
cli
xor
outsb
jnp
icebp
pop
mov
jg
enter
mov
xchg
inc
jae
imul
pop
jb
ds
mov
xor
arpl
cltd
or
mov
cmp
and
lret
lods
pop
pop
push
lcall
pop
cs
push
pop
in
lods
clc
jecxz
jne,pt
movsl
xlat
mov
lock
mov
fidivrl
add
loop
or
int
cmp
pop
out
mov
sbb
xchg
inc
mov
xchg
clc
push
ds
jl
clc
outsb
lods
ds
movsl
mov
mov
mov
ljmp
sarb
test
pop
lcall
ds
clc
in
addr16
in
scas
cmpsl
icebp
cmc
in
jle
popa
ds
jecxz
fnstsw
pop
inc
pop
jns
bound
dec
push
add
clc
das
xchg
push
cmpsl
dec
mov
dec
pop
xor
push
adc
lea
mov
bnd
adc
loope
clc
in
mov
push
jl
lcall
mov
jmp
and
pop
sub
pusha
jbe
pmaxsw
push
ret
test
icebp
jo
lret
jl
jl
lods
jecxz
icebp
adc
push
push
jmp
pop
test
jl
mov
jne
les
mov
jl
lock
ljmp
and
clc
test
jg
jp
sbb
sub
push
pop
loopne
les
adc
dec
jl
repnz
cmc
movsl
jne
jae
xchg
ljmp
mov
imul
xor
mov
in
aaa
inc
out
mov
incl
push
pusha
push
sub
cli
lret
xchg
xor
add
or
sbb
inc
cli
pop
std
jmp
test
jmp
fdivs
mov
inc
jb
lock
stc
incl
nop
bound
add
lods
test
nop
sub
xor
call
pop
repnz
jne
mov
cmp
out
add
mov
mov
mov
mov
mov
sbb
push
sub
mov
sbb
ret
out
push
mov
mov
cmp
es
lcall
cs
inc
or
xchg
mov
pop
add
push
xchg
dec
outsb
push
in
daa
mov
scas
out
inc
adc
insb
pop
pop
jmp
mov
xor
icebp
mov
mov
add
sar
out
clc
pop
or
pop
enter
push
mov
out
jns
gs
pop
mov
push
push
jge
inc
jmp
pop
jl
ja
test
adc
add
or
test
clc
decl
xchg
out
mov
push
mov
and
and
push
or
ljmp
popa
cs
test
sbbl
ljmp
mov
push
add
into
fidivrl
ds
stc
sbb
es
xor
decl
xor
or
mov
or
es
das
adc
add
std
xchg
int3
jle
dec
cmp
fxch
fbstp
addl
in
push
stc
leave
push
or
in
and
std
dec
xor
ret
jmp
gs
pop
and
test
shl
inc
ror
push
cs
adc
and
xchg
addr16
ljmp
test
dec
jl
xor
lds
inc
cmp
lock
or
into
push
decl
sbb
movsb
jne
test
das
dec
mov
fistps
push
sti
cmp
mov
dec
leave
scas
sahf
pushl
cld
push
insl
mov
imul
xor
into
xor
xor
pusha
lcall
push
mov
arpl
mov
lcall
test
es
cmp
jmp
sub
and
fistpll
adc
out
mov
inc
mov
incb
jo
fs
and
test
test
cld
jle
dec
andl
inc
sbb
clc
decl
les
out
jb
rclb
or
pop
stc
add
xchg
in
inc
sub
lcall
cmp
pusha
rcrb
ljmp
jl
mov
nop
mov
dec
pusha
jg
dec
das
cli
mov
and
and
push
fptan
jne
push
imul
sub
adc
rcl
fs
ret
sbb
mov
and
add
pushl
std
mov
inc
pushf
xor
xchg
lods
ret
add
aaa
outsl
mov
add
mov
sar
lret
int3
dec
cmpb
xchg
bound
pop
xchg
arpl
add
out
ljmp
dec
cmp
xor
add
and
push
lcall
pushl
or
pop
addr16
adc
add
sub
and
mov
inc
cmpsb
and
mov
push
cmp
or
jg
inc
aam
fwait
and
fmul
xchg
sub
sbb
inc
xchg
xchg
add
movsb
or
std
roll
loop
aam
inc
les
dec
jl
cld
adc
jmp
test
or
in
cli
sbbb
adc
cld
loopne
daa
in
sti
pop
cs
outsl
sbb
inc
cmp
rol
mov
xchg
andl
out
jb
inc
int3
shll
lcall
test
incl
lock
shrd
outsl
dec
xchg
inc
adc
jecxz
mov
mov
ljmp
sbb
inc
push
popa
adc
imul
inc
rcrl
pop
aad
jnp
xchg
xor
mov
cmpsl
mov
pop
js
push
dec
or
enter
and
mov
call
adc
mov
jno
mov
inc
inc
jge
xchg
sbb
int3
inc
xor
mov
mov
jno
jg
sbb
out
adc
jae
loope
movl
dec
lcall
call
enter
movsl
and
mov
dec
mov
xor
xor
aas
lcall
sbb
push
xchg
mov
call
js
mov
push
jg
pusha
and
inc
clc
lds
pop
enter
add
pusha
or
mov
xchg
dec
sub
or
dec
notb
sbb
or
push
lret
cmc
push
add
jmp
iret
mov
xchg
xchg
pusha
inc
mov
xchg
xchg
jo
cli
adc
add
shlb
and
lods
cwtl
cli
sub
add
outsl
adc
jb
scas
xor
cmpsl
add
or
jbe
call
jmp
add
mov
and
fs
movsb
cmpsl
aam
sbb
or
mov
scas
ja
clc
call
push
xchg
loope
xor
sahf
or
or
decl
roll
adc
subb
or
ret
les
jle
movsb
mov
shlb
mov
xor
push
fs
daa
mov
and
or
xchg
xor
mov
decl
add
cmpb
add
xor
mov
sub
mov
jno
xor
cli
mov
jno
addb
enter
call
and
add
sub
arpl
and
inc
add
jo
add
and
pushl
sub
rclb
jb
push
lods
frstor
call
sti
jno
or
into
roll
test
add
add
mov
cmpl
incl
mov
push
or
inc
int3
test
stc
push
cltd
icebp
nop
cmp
or
pusha
mov
push
dec
repnz
nop
push
dec
push
push
dec
movsb
push
and
outsl
inc
mov
rcr
mov
mul
ds
roll
dec
mov
xlat
adc
mov
adc
call
imul
lret
data16
mov
call
push
inc
pop
decl
adc
cltd
inc
jbe
scas
and
fcomps
sub
insl
leave
movsb
idivl
out
les
pop
pushf
cmp
outsl
push
ss
sbb
xor
jge
and
sbb
inc
dec
push
push
or
push
cld
pop
fldenv
xor
movsb
leave
or
dec
or
jnp
movsb
jge
jmp
pop
cmpl
lret
sub
xchg
shlb
pusha
dec
out
cmp
cmc
jg
add
mov
mov
fs
and
jb
pushl
pop
mov
cmp
dec
pushf
push
out
cmp
or
mov
call
push
sub
fisubrs
add
add
jbe
add
aam
adcb
idivl
xchg
inc
ret
dec
pushl
add
gs
inc
enter
sti
bswap
or
loopne
rol
pop
cmp
ja
int3
rorl
out
iret
push
fldt
sbb
add
jmp
and
fisttpl
sahf
xchg
cmpsl
add
repnz
inc
xor
add
add
outsl
rcrb
mov
push
mov
nop
aaa
mov
add
ljmp
xlat
fisttps
jmp
add
movsb
lret
add
sbb
notl
add
ljmp
inc
mov
out
iret
add
mov
xchg
pop
push
test
add
jl
leave
add
mov
sub
movb
push
dec
rolb
push
add
ja
xchg
je
rclb
adc
push
in
aad
decl
pop
pop
mov
adc
cld
gs
add
and
or
lcall
test
bound
js
inc
add
sub
add
add
adc
shrl
inc
ror
sbb
into
int
mov
loopne
repz
pop
mov
pop
add
push
adc
fldt
dec
push
push
mov
in
insb
decl
pop
out
notb
xor
add
sbb
xchg
and
add
inc
add
cmpsl
js
adc
add
rolb
sbb
sti
adc
push
test
decl
lret
or
xchg
cld
in
jg
sbb
into
lea
pusha
mov
mov
clc
mov
pop
mov
test
jp
mov
movsl
in
outsl
pop
pusha
nop
scas
test
mov
inc
add
pop
fisubs
jg
and
inc
jg
add
push
jle
cmc
sbb
adc
pop
sub
sub
outsb
and
ss
push
imul
inc
inc
push
call
mov
fidivrl
add
inc
mov
outsb
push
das
push
out
mov
test
add
sub
je
sbb
fs
testb
scas
or
adc
ss
push
adc
test
call
mov
jbe
mov
pop
and
adc
fstl
or
call
loop
mov
ret
int
cli
and
pop
ret
add
push
and
adc
mov
adc
rcrb
nop
fnstenv
jmp
push
and
mov
jle
rclb
lcall
outsb
testl
lods
adc
pop
test
scas
repz
mov
inc
shrl
mov
jbe
mov
sarl
mov
add
test
das
incb
push
pop
rolb
inc
sbb
fiadds
sub
mov
adc
jg
and
pushl
xor
fdivl
xchg
and
pusha
cmpsb
fsts
sub
les
mov
xor
fcomip
incl
xor
sbb
daa
popf
cmp
mov
lcall
fwait
mov
dec
ljmp
push
les
dec
lcall
repnz
inc
add
incl
push
rorb
ret
popf
cmp
test
mov
data16
cmc
loope
mov
xlat
dec
daa
inc
sub
mov
or
xchg
or
jl
dec
jecxz
in
jl
in
cwtl
in
les
add
and
sub
jle
mov
push
mov
call
inc
iret
sahf
cs
xlat
mov
sti
insl
in
enter
inc
lds
inc
xor
mov
sbb
stos
jg
jmp
and
dec
js
xchg
add
pushf
jno
xchg
jo
mov
mov
push
add
or
ja
mov
push
push
incl
cld
pop
aam
loop
es
push
pop
sbb
mov
and
clc
incl
fst
xlat
or
fiadds
fucomip
dec
push
imul
sti
cmp
inc
sub
nop
arpl
jo
push
outsb
shlb
cmp
push
leave
adc
add
xchg
mov
push
or
mov
lret
mov
loop
call
js
sub
adc
dec
jmp
jmp
stos
sub
dec
call
out
xchg
adc
test
in
mov
movsb
dec
iret
inc
xchg
fbld
push
into
and
push
rcll
push
or
shlb
scas
pop
mov
dec
in
ret
or
mov
and
lods
push
sarl
and
sub
cmp
jg
sahf
loope
cld
jae
xchg
daa
push
adc
loopne
add
lock
lret
ud1
fildll
pushl
mov
shrb
pushl
lahf
push
xchg
loopne
jo
hlt
mov
inc
xor
out
insl
pop
shlb
push
int
pop
inc
jmp
push
jge
aaa
pop
push
or
scas
xchg
mov
pop
or
mov
inc
sub
mov
lock
dec
add
mov
ret
loopne
push
xchg
and
push
ffreep
ljmp
add
pop
xor
rorb
inc
add
xor
xchg
ds
call
sbb
xchg
jecxz
jo
fs
adc
int
hlt
push
jg
cmc
incl
mov
scas
jno
enter
mov
xlat
incl
inc
xchg
lods
xor
jns,pn
nop
sbb
or
push
in
push
push
push
das
clc
jg
adc
in
repz
pop
insb
adc
into
xor
mov
jmp
movsl
shl
iret
icebp
add
xchg
sbb
adc
xchg
cmp
sub
gs
ljmp
sar
mull
dec
sub
xchg
jae
sbb
push
in
xchg
ss
fsubs
mov
lock
fldz
mov
adc
mov
cwtd
mov
dec
mov
jmp
mov
push
outsl
rcrb
push
mov
jp
out
cli
and
sbb
in
loopne
negb
adc
shlb
mov
sub
je
jns
insl
out
push
aad
decl
jbe
jl
sbbb
lods
popa
int
sub
decl
inc
push
jns
clc
mov
mov
dec
adc
cmp
out
cli
dec
mov
jmp
pop
sbb
push
mov
stos
dec
push
push
cmpsb
jg
dec
or
std
or
and
xchg
dec
shr
ret
shll
or
js
pushl
dec
push
fs
gs
lahf
cmp
je
or
adc
sbb
cwtl
call
push
mov
lret
lret
xor
xchg
daa
testl
ret
test
push
out
push
push
test
xor
and
jns
xchg
jmp
rcll
out
iret
mov
and
lcall
repz
nop
fstpl
sbb
and
add
sti
xor
loopne
pushl
in
push
adc
add
jge
mov
push
fsub
loop
xor
lods
add
pop
adc
jmp
enter
in
rclb
mov
xor
shrl
popa
movsl
mov
int
sub
enter
test
xor
lcall
and
fidivs
adc
daa
jbe
data16
jg
jle
xor
dec
jnp
and
fwait
inc
jb
dec
add
mov
outsb
sbb
or
mov
push
nop
sti
inc
pop
leave
pop
stc
inc
sbb
pop
mov
int3
int3
lret
popa
into
icebp
xor
icebp
jmp
add
sub
jge
jecxz
cli
pop
in
js
cld
xorb
dec
loopne
or
dec
dec
xor
sahf
mov
mov
pop
sub
mov
into
popa
addr16
add
add
dec
icebp
rcl
mov
inc
loope
push
sub
mov
jno
pop
or
pop
js
xchg
push
stos
mov
and
mov
sub
incl
insl
cli
xchg
adc
dec
lret
pop
or
push
xor
mov
add
xchg
sbb
push
call
dec
push
out
je
lea
pop
and
push
roll
dec
mov
add
jmp
sti
jae
cwtl
lods
or
jo
dec
add
sbb
jecxz
push
pop
cwtl
movsb
xchg
add
pushl
inc
inc
hlt
shrl
lahf
sub
lret
push
ja
jg
jne
add
cltd
mov
push
sahf
or
sbb
pop
in
cmp
mov
dec
mov
je
fcmovnbe
pop
pusha
je
lcall
sub
sahf
popa
pop
adcl
dec
lods
mov
arpl
stc
ljmp
or
add
xlat
imul
popf
incl
cld
stc
stc
and
cli
out
xor
cs
lahf
je
inc
cwtl
test
push
into
mov
sti
arpl
sti
test
fstl
mov
adc
jb
xchg
test
outsl
pusha
jge
cmp
ror
add
jg
mov
push
mov
mov
enter
cld
call
and
or
cmpsl
andb
arpl
push
or
inc
test
dec
push
lcall
mov
cld
jl
leave
and
lods
or
dec
dec
fsubs
aas
inc
mov
fiadds
jne
inc
mov
arpl
rclb
add
mov
in
notb
push
stos
ja
add
pop
mov
mov
jns
mov
xor
incl
xorb
mov
mov
and
test
insb
test
adc
push
jmp
aaa
add
push
pop
das
dec
xchg
add
jo
mov
push
adc
repnz
enter
or
shll
sbb
cmp
pop
leave
pop
xchg
dec
popf
and
outsb
add
and
loopne
bound
pop
enter
nop
xlat
adc
adc
loop
mov
mov
orl
js
mov
ljmp
mov
into
ffree
in
xor
cmpsb
xor
mov
enter
aam
push
test
cmp
test
iret
test
jae
mov
fildl
xor
dec
ffree
add
sbb
adc
dec
dec
xchg
sub
flds
adc
dec
xchg
in
imul
in
add
dec
imul
adc
lea
add
add
xchg
cmp
xchg
mov
sti
and
inc
stos
ljmp
daa
push
xchg
stos
cmp
pop
call
mov
xchg
cmpsl
xor
nop
pop
loopne
mov
sbb
mov
test
dec
incl
lret
xchg
cld
stos
xchg
and
jb
mov
incl
adc
ds
aam
mov
push
int3
mov
add
mov
decl
sub
enter
sbb
bound
fistpll
or
ret
aam
push
test
push
icebp
call
rolb
imul
cmp
cmc
jno
repnz
and
je
imul
push
arpl
or
fldl
shr
mov
bound
decl
and
and
and
sbb
dec
bound
lds
lret
adc
mov
cli
push
ret
lods
add
in
jge
daa
aaa
push
push
insb
clc
js
addr16
aaa
enter
cmpsb
push
inc
and
add
sti
outsb
pop
dec
mov
sub
jl
cmpsb
adc
loop
scas
sub
jge
jmp
add
pop
call
mov
scas
and
pusha
test
add
adc
popf
push
push
add
sub
hlt
mov
movsb
pusha
sbb
lds
daa
in
dec
fimull
pop
dec
cld
cmp
mov
mov
push
sahf
lahf
sbb
pop
outsl
cmp
into
jg
test
mov
add
rcll
ljmp
addr16
loope
inc
inc
sub
into
adc
or
mov
adc
pop
xor
mov
mov
pushf
pop
shrb
fcomip
call
mov
sub
pop
fs
cmp
bound
scas
mov
adc
jp
pusha
add
jge
popf
jno
mov
add
push
pop
push
ljmp
sub
mov
movsl
sub
das
cltd
jno
sbb
sub
mulb
and
jne
lcall
fnclex
icebp
out
sbb
fstpt
or
cli
repz
inc
pop
inc
lods
sub
rorb
imul
les
lds
jmp
jg
aam
lock
fptan
rcrl
mov
mov
mulb
sbbb
arpl
pushf
xor
adc
jecxz
outsb
notb
cwtl
incl
and
ret
repz
mov
push
int3
xchg
pop
push
test
cli
mov
movsl
mov
jb
xchg
sbb
adc
and
loope
xchg
and
enter
inc
mov
call
dec
sbb
mov
ds
movsl
push
repz
add
mov
jl
incl
sub
or
fistpl
pop
push
xlat
ret
jae
jns
push
jae
or
ja
cli
sub
push
fsubs
pop
rcrb
lret
add
xchg
jecxz
xchg
les
outsb
shrl
pop
sub
call
mov
call
mov
bsf
or
es
aas
andl
jg
dec
mov
mov
sarb
mov
jecxz
inc
cmp
jg
call
popa
std
xchg
cwtl
es
add
dec
inc
sbb
inc
addb
ljmp
incl
hlt
or
bound
loope
shr
mov
ret
adc
push
jnp
dec
insl
sbb
out
aaa
sbb
xchg
mov
int3
mov
pop
sub
add
lcall
pop
and
call
inc
leave
scas
mov
call
xchg
popaw
xor
roll
mov
outsl
jge
lahf
in
xchg
fdivr
or
hlt
bound
stc
xlat
adc
test
clc
mov
stc
sbb
out
and
pushl
rcrb
adc
add
call
xchg
enter
sahf
ljmp
push
inc
inc
call
xchg
jp
pushf
mov
push
inc
inc
jl
push
je
stc
decl
inc
push
and
adc
mov
lods
mov
jg
add
insb
xor
or
push
jg
mov
outsb
cmp
mov
js
inc
ret
mov
xor
nop
popa
daa
xchg
dec
rcr
call
adc
push
push
jecxz
or
add
gs
or
add
fdivs
add
sahf
mov
nop
jb
test
ss
xor
shl
sbb
cmp
jg
stos
xchg
dec
mov
ret
add
and
xchg
lods
bound
inc
add
pop
addr16
jle
dec
es
les
and
mov
les
cmp
mov
stos
xchg
dec
cwtl
or
sti
loop
pop
sar
pop
jmp
and
je
cltd
fs
pop
adc
aaa
sbb
lock
jmp
stc
adc
inc
jno
lcall
or
xchg
mov
mov
popf
jl
or
mov
das
lods
xor
and
xchg
add
popa
adc
nop
xor
xorb
cmp
bound
popf
enter
cld
mov
and
mov
inc
cs
mov
les
movsb
xchg
add
pop
outsl
xchg
pop
enter
sub
clc
jge
addb
sbb
add
pop
test
add
cli
adc
in
in
mov
push
mov
sbb
xchg
fwait
or
insb
test
mov
test
mov
jno
add
pop
fs
xchg
push
and
sub
sarl
sub
mov
sbb
ds
rclb
inc
faddl
rcrl
xchg
inc
bound
mov
clc
jmp
mov
adc
sbb
adc
xor
inc
or
decl
cmp
jecxz
ds
jne
push
and
cmp
lods
push
mov
or
adc
mov
push
push
mov
pusha
clc
inc
push
into
adc
fmuls
ret
test
int3
cld
fmull
je
jg
call
orb
movsb
mov
pop
cmp
inc
leave
pop
mov
cltd
cmp
pop
and
dec
jp
or
lahf
imul
xor
pushl
push
mov
imul
sub
leave
sti
pop
push
sbb
cwtl
leave
mov
dec
pushf
cmp
outsl
ljmp
cwtl
or
add
rcr
push
jno
mov
enter
pushf
mov
cs
decl
mov
jge
hlt
sbb
push
xor
test
sti
jne
jecxz
add
incl
mov
test
mov
movsl
push
lods
adc
push
test
jge
je
or
mov
loopne
add
and
fs
push
dec
ja
enterw
dec
jecxz
mov
mov
imul
fs
lock
arpl
mov
cld
cmp
sub
mov
inc
popa
or
mov
dec
sarb
xor
sub
lret
fcoms
or
push
roll
call
dec
lods
jg
mov
sub
adc
adc
sbb
xor
js,pt
repnz
decl
movsb
lds
adc
inc
mov
jmp
sub
test
sub
bound
clc
decl
jmp
int3
mov
xchg
add
out
pop
mov
lret
enter
dec
pop
mov
fisubrs
jmp
outsl
je
xor
in
and
out
xor
mov
mov
pop
sti
sub
incl
je
shrb
push
rorl
mov
jg
jle
scas
add
lea
andl
pop
and
ljmp
ret
pop
dec
shl
inc
cmp
sbb
xchg
leave
lret
lret
sbb
mov
call
push
inc
les
test
call
xor
scas
cli
daa
loop
sub
cli
sarl
loopne
xor
sbb
nop
mov
mov
test
cmp
mov
loopne
xor
jg
cs
inc
dec
test
lahf
sub
cmc
loop
mov
or
push
cli
xlat
cltd
and
pop
outsl
add
movsl
mov
fstl
addps
or
ljmp
sbb
sahf
imul
inc
shlb
and
xchg
ss
outsb
mov
jne
cmp
scas
inc
cmp
dec
outsl
mov
gs
call
adc
addb
xchg
cmc
add
inc
jge
pop
or
dec
xlat
xor
loopne
jb
lcall
sbb
lret
xor
dec
jmp
sub
pushf
decl
sbb
adc
and
test
gs
jmp
orb
in
jg
mov
test
and
push
push
dec
add
decl
sbb
add
loop
cmpsb
mov
xor
int
xchg
icebp
dec
aad
dec
in
add
andl
bnd
dec
add
lock
pushf
mov
iret
sarb
push
mov
xchg
cmpsl
push
jge
xor
pushw
pop
and
mov
add
sbb
pop
sbb
xchg
sbb
inc
inc
test
repz
ljmp
xlat
adc
jmp
es
mov
inc
insb
stos
cmpsb
add
insb
xor
lcall
icebp
mov
add
loope
jmp
sbb
mov
cmp
adc
jo
dec
bound
mov
mov
lods
or
arpl
cmp
dec
mov
mov
lcall
call
mov
xchg
cmpsb
sbb
cs
mov
mov
mov
dec
fbstp
fists
sbb
jne
enter
jle
nop
mov
and
scas
ljmp
pop
push
dec
imul
lcall
pushl
mov
and
adc
mov
mov
mov
xor
mov
incl
sbb
xor
inc
mov
enter
cmc
nop
iret
jb
scas
stos
std
jg
pop
loopne
jmp
and
sarb
add
cmpb
lcall
or
push
sub
aas
mov
in
shll
enter
arpl
arpl
test
orl
repz
jo
repz
inc
les
test
or
dec
loope
loope
add
pop
roll
pusha
test
aam
cs
jno
and
shl
lcall
mov
xor
xor
inc
jo
sub
xchg
lret
xchg
pushf
sub
mov
inc
dec
fs
push
mov
leave
inc
push
or
dec
inc
leave
aam
popf
rclb
push
inc
mov
pop
mov
jns
das
lcall
das
cmpsb
movsb
pop
fmuls
inc
pushl
sbb
xor
mov
dec
cmpsl
out
add
add
sahf
add
stos
aam
rcrl
test
xor
xchg
push
repnz
in
pop
cmc
iret
push
enter
push
test
enter
xchg
pop
push
icebp
enter
inc
push
pop
mov
sub
test
cmc
in
or
and
popf
sub
push
xchg
insl
jo
inc
addr16
test
pop
adc
inc
in
dec
and
dec
xor
sbb
inc
scas
pop
inc
mov
sbb
jmp
dec
mov
fiaddl
inc
testl
inc
cmovae
push
movsb
push
and
mov
adc
inc
shlb
popa
dec
mov
les
test
incl
mov
int3
add
in
mov
repz
dec
out
mov
mov
pop
xorl
push
test
imul
cltd
aas
mov
fwait
insl
bound
add
stc
push
mov
cmpsb
inc
decl
cld
mov
int3
and
xor
les
adc
xor
in
inc
arpl
mov
test
pop
dec
lods
hlt
or
loop
push
mov
aad
mov
add
ljmp
clc
add
xchg
push
arpl
lock
fimuls
adc
fsubrs
shl
and
sbb
aas
cmp
lret
jnp
adc
jbe
sub
push
xor
scas
add
inc
imul
cmp
or
or
jle
cmp
ljmp
sbb
fisttpll
xor
ret
insb
test
idivl
out
popf
js
mov
out
mov
xchg
xor
pop
je
push
xor
incl
int3
push
adc
mov
seto
ret
into
mov
sub
fcomip
pop
lock
js
aas
xchg
hlt
nop
xor
cmp
enter
mov
xor
pushl
inc
das
mov
jg
pusha
in
or
out
inc
gs
pop
dec
sub
inc
call
incl
insb
in
dec
lock
mov
add
test
ljmp
sti
inc
mov
dec
sbb
sahf
jge
push
test
push
adc
fs
or
lcall
or
adc
adc
sti
xor
int
fistps
sbb
push
test
sbb
inc
pop
aam
push
out
inc
dec
cmp
sub
dec
mov
jg
xchg
mov
xor
nop
jns
std
push
pop
ljmp
xchg
adc
call
in
or
inc
lret
enter
pop
sbb
mov
cmp
mov
dec
or
stos
dec
or
jno
push
in
xchg
mov
xchg
xor
sub
std
test
mov
sub
push
and
fists
mov
or
sub
and
push
jg
jl
daa
jl
lcall
nop
cmpsl
inc
mov
sub
inc
xor
aaa
jo
ficompl
add
jmp
jge
push
sbb
mov
lds
adc
js
jo
das
sar
enter
dec
cmp
mov
push
or
ljmp
push
mov
push
push
icebp
scas
xchg
subb
push
dec
fwait
push
add
mov
push
push
cmp
faddl
cli
mov
adcb
push
insb
aas
and
repz
add
lret
lcall
mov
add
or
sbb
fsubp
add
cmpsb
push
daa
cs
pop
pop
jmp
aaa
adc
outsl
test
clc
out
mov
int
inc
scas
loope
xchg
cltd
cmp
test
jg
mov
push
inc
loop
cmp
adc
call
paddsb
andnps
lock
cwtl
cmpsb
mov
fildll
lds
mov
rol
xorb
push
and
lcall
inc
aas
mov
mov
add
push
add
fsts
add
pushl
dec
adc
mov
and
pop
add
cmp
dec
nop
in
std
orb
and
mov
dec
mov
pop
out
es
scas
sbb
sbb
dec
or
pop
sub
push
add
incl
or
pop
clc
xlat
push
sub
out
daa
ret
popf
mov
sbb
xor
stc
add
addr16
pop
adcb
adc
add
stc
pusha
jl
cs
add
test
shll
and
sbbl
sarb
daa
loop
add
stos
pushf
mov
add
add
ja
push
cwtl
nop
push
pushf
sbb
push
sbb
mov
mov
add
push
push
inc
jmp
outsl
rcll
iret
add
mov
fst
insl
pop
into
pop
loope
push
mov
shll
movsl
dec
lcall
push
pushf
call
fcompl
add
ret
adc
pop
lcall
or
pop
jb
sub
xor
fldlg2
sbb
mov
fsubl
lahf
or
cmp
cmpsb
add
scas
sub
ds
popa
cltd
mov
mov
xor
loopne
leave
or
xchg
xchg
mov
incl
movsb
repnz
adc
dec
push
sbb
rcrb
push
rcl
mov
or
and
fwait
and
sub
push
bound
mov
xor
rorl
loop
enter
daa
xchg
nop
lret
and
orl
ret
loope
les
repnz
sbb
mov
lea
lahf
bound
sbb
xchg
pop
mov
jb
imul
call
mov
inc
pusha
cltd
repnz
mov
test
test
pop
roll
add
lret
filds
jb
incl
add
add
add
xabort
add
xor
pop
dec
lods
rcrb
mov
out
call
rcr
ds
and
and
cmc
jg
fucomip
and
sub
xchg
dec
inc
fs
push
fsubrs
sbbb
fcomip
nop
pop
pop
inc
add
mov
in
mov
push
xor
mov
in
ds
adc
andb
fisttpl
out
clc
aaa
std
xchg
rorb
cmp
movsb
push
clc
rolb
dec
add
jp
pop
lods
lcall
adc
adc
out
movsb
xchg
subb
fisttpll
enter
mov
mov
adc
push
dec
daa
sub
aas
or
aas
pop
movsb
or
sbb
out
fwait
in
scas
mov
or
push
mov
jg
lcall
lds
fst
addl
std
das
enter
loope
jmp
cltd
inc
rorb
or
pop
int
fnstsw
pop
push
pop
imul
mov
sahf
cs
incl
sbb
loop
jge
enter
push
mov
ljmp
mov
and
fldenv
fisttpl
jge
pop
cmp
inc
je
push
mov
ret
mov
jne
sbb
mov
jmp
dec
aas
push
or
movb
jmp
dec
and
and
outsb
adcb
and
std
jnp
dec
and
adc
out
add
stc
addr16
and
xchg
add
inc
mov
add
decl
push
es
cwtl
arpl
cmpl
cmp
push
push
int3
addr16
sbb
cli
pushf
adc
aaa
cld
and
lods
popa
adc
rorl
nop
cmp
adc
mov
cmpsl
xchg
fwait
into
dec
cmp
bound
and
ljmp
sbb
cld
iret
addr16
jb
pop
pop
arpl
das
out
and
ds
test
sub
pushl
imul
adc
enter
adc
xchg
lret
popa
in
cli
inc
push
into
xor
jl
jbe
call
and
sub
mov
inc
mov
repz
out
jns
sbb
pusha
dec
in
pop
inc
inc
or
jo
popa
mov
pop
sub
out
or
insb
ret
jg
lock
pop
insb
mov
loopne
or
ret
inc
divl
call
pop
rclb
mov
mov
xorb
mov
icebp
je
push
pop
cmpsb
das
daa
inc
mov
adc
xor
in
loopne
or
test
lods
adc
add
incl
xor
in
rolb
xor
call
add
cwtl
movsb
xchg
lcall
jns
fistpl
hlt
leave
fnstcw
jg
inc
mov
decl
dec
mov
add
arpl
sbb
cmc
xchg
in
mov
push
or
mov
in
je
cmp
test
insb
lea
lcall
or
xchg
leave
clc
mov
ljmp
data16
push
pop
popf
add
test
sub
add
incl
add
dec
nop
pusha
dec
idiv
mov
shr
inc
in
daa
xchg
xchg
push
sub
adcb
int
data16
mov
or
dec
add
push
xor
xor
dec
fwait
inc
or
and
cmp
lcall
xor
repnz
das
and
or
mov
xchg
and
mov
incl
jecxz
xor
cmp
test
mov
and
call
push
sub
mov
inc
push
test
and
inc
sub
push
mov
add
xor
mov
and
add
iret
ret
jo
sub
cmovl
aam
cltd
lcall
fists
popf
dec
add
or
push
pusha
inc
repnz
push
dec
cmp
or
cmp
call
adc
enter
inc
and
jno
fmull
sbb
ljmp
adc
sub
push
insb
adc
cmpb
and
and
or
pop
or
loop
cld
incl
es
sbb
or
adc
es
and
fs
call
sub
sub
fs
push
shlb
and
cmpsb
gs
lcall
sub
cwtl
inc
xchg
push
and
and
and
inc
mov
cmpsb
cmp
xor
dec
mov
add
enter
inc
inc
outsl
call
cmp
out
sbb
add
mov
push
cld
and
decl
out
inc
cmovs
mov
push
hlt
lret
jae
imul
push
mov
ljmp
or
repnz
mov
push
or
or
push
xchg
jle
lock
sbb
push
cmp
cmc
ja
incl
sub
or
loop
icebp
nop
ret
fisttps
shll
stos
cmp
imul
scas
dec
mov
jge
pop
jns
decl
nop
mov
inc
pusha
nop
push
add
push
mov
stos
movsl
out
jmp
fildl
stos
decl
or
mov
push
cmp
jb
inc
std
call
decl
mov
icebp
xchg
fisttpl
jg
adc
repz
movsb
popa
push
or
js
push
xchg
or
cmp
cmpsb
jno
int3
movsl
js
add
in
notl
cld
pushl
stc
push
ljmp
int3
icebp
xchg
pop
ret
scas
shll
ret
jg
or
and
repz
shl
xchg
or
das
mov
pop
dec
rolb
push
and
xchg
clc
ret
dec
mov
lds
data16
je
adc
dec
add
sbb
pop
jmp
aas
mov
inc
roll
add
enter
sti
sub
add
enter
hlt
add
pop
cmc
or
or
cmp
push
jg
js
jl
inc
jno
xlat
out
adc
pop
arpl
fcmovnbe
sbb
inc
push
sbb
scas
jmp
pop
into
stos
lret
test
hlt
inc
mov
mov
ds
pushl
cmp
jnp
gs
adc
and
jbe
pop
sub
and
push
dec
std
jg
mov
inc
loopne
dec
inc
mov
mov
cli
jmp
mov
dec
loop
leave
lcall
frstor
dec
sarl
in
jg
mov
add
xor
ret
lahf
test
call
pop
push
or
xorb
fisttpll
pushf
incb
pop
xchg
sbb
das
mov
dec
ret
mov
push
xchg
xchg
xchg
rolb
inc
ficoms
out
sbb
cs
fidivrl
push
sub
pop
movsb
cmp
jge
jle
xlat
std
out
add
or
and
xchg
adcb
das
pop
pop
inc
mov
add
out
ljmp
insl
je
pop
xchg
ljmp
out
pusha
out
fwait
xor
add
call
inc
dec
jb
scas
dec
inc
xchg
adc
inc
add
dec
mov
pusha
add
cmpsb
dec
sub
outsb
adc
pshufw
or
dec
mov
fisubrl
sbb
xchg
mov
cld
call
or
xchg
sub
mov
stc
scas
sti
adc
orl
and
cmp
movsb
mov
popa
stos
push
add
ljmp
es
add
or
adc
jecxz
int3
les
mov
xor
sbb
inc
call
aaa
clc
push
mov
mov
mov
jb
aam
inc
into
sbb
cmpsb
mov
pop
mov
add
das
lret
shrl
leave
enter
mov
mov
add
pop
dec
std
mov
call
cmp
ret
inc
mov
push
mov
ds
mov
mov
cmpb
push
cltd
sbb
fldl
mov
and
pop
test
addl
decl
dec
mov
sbb
sbbb
or
mov
int3
nop
cmp
cmpsb
incl
adc
adc
movsb
xchg
mov
sbb
add
dec
mov
aas
dec
nop
jo
test
pop
mov
mov
jbe
jmp
add
in
lea
nop
jmp
pop
mov
clc
pop
jle
mulb
and
jmp
jge
push
sbbb
mov
aas
in
mov
and
inc
xchg
and
stos
jnp
mov
loopne
jne
add
outsb
mov
out
les
hlt
lods
pop
and
pop
hlt
ret
icebp
sub
cs
popa
test
ret
sbb
insl
dec
dec
pop
ljmp
fbstp
jle
loope
adc
xor
out
inc
mov
push
cmpsb
test
cmpsb
sbb
or
lcall
cmp
fwait
jo
test
pop
popf
xor
adc
imul
xor
bound
ljmp
push
test
adc
push
cli
or
jmp
xor
hlt
mov
notl
data16
sbb
xlat
jbe
icebp
and
mov
cmc
and
ja
add
cmp
xor
ja
and
jge
fs
xchg
adc
mov
testb
pusha
flds
jp
call
adc
push
mov
inc
test
js
add
cltd
roll
add
lcall
and
gs
or
rol
divb
das
jb
inc
push
jle
dec
mov
push
pop
mov
xor
call
shlb
sbb
incl
push
mov
sub
mov
jmp
cltd
je
mov
in
gs
cmp
sbb
push
cmpsl
jnp
adc
les
not
and
adc
scas
movsl
das
std
cs
dec
popa
scas
sub
rorl
fwait
mov
cmp
xchg
mov
xor
xchg
jg
cmpsl
inc
xchg
and
cs
outsb
xchg
and
add
jp
pop
rclb
sbb
shl
pop
sub
ljmp
or
jno
out
mov
mov
jae
and
xchg
loopne
shl
cmp
or
dec
fisttps
xchg
xor
or
in
sbb
stc
mov
jae
sub
filds
ret
sarl
rolb
push
and
test
ja
inc
lret
dec
ss
add
das
clc
outsl
push
add
das
rcrb
lcall
dec
outsb
jge
dec
ljmp
xor
xchg
cmp
enter
jg
incl
add
sahf
mov
push
test
subl
or
jo
das
insb
fwait
outsb
push
loop
mov
mov
nop
shll
adcb
call
cli
cmp
roll
jnp
jl
bound
xchg
jmp
mov
sbbl
decl
add
inc
xchg
cmp
test
addr16
or
lcall
ret
fwait
mov
cmp
lret
jmp
mov
fldt
test
scas
pusha
and
mov
push
mov
incl
loop
dec
dec
push
inc
sahf
adc
jns
imul
pop
or
mov
sub
push
insb
xchg
or
cmp
jg
sbb
jge
aam
jns
int
sub
cwtl
movsl
in
add
dec
fidivs
cli
lcall
inc
mov
lcall
mov
nop
aas
xchg
and
fisttpl
in
or
hlt
lret
lahf
outsl
push
jne
sub
shrb
xor
xor
push
push
sub
jle
xor
jns
xchg
or
dec
or
mov
sbbb
outsb
or
xor
fisttpl
adc
loop
xchg
sub
cmp
dec
pop
adc
mov
or
and
daa
mov
cwtl
cmp
nop
push
es
inc
mov
insl
rcrb
dec
pop
cmp
or
jo
psubusb
adc
ja
inc
mov
push
sbb
add
xchg
adc
sbb
add
cs
ret
cld
or
adc
mov
jnp
fistl
fldl
mov
push
xor
adc
jecxz
push
xchg
ljmp
inc
in
test
sbb
xchg
mov
outsl
inc
dec
inc
leave
rcrb
jae
ljmp
xor
or
pop
mov
movb
cmp
jl
jl
add
cld
push
cltd
rcll
adc
sbb
sbb
mov
add
scas
or
xor
ljmp
xor
push
and
xor
ret
cld
fldenv
fwait
xchg
movsl
sbb
pop
enter
sbb
push
adc
mov
push
jl
jmp
cmp
add
incl
loopne
dec
add
dec
ja
add
pop
pop
lcall
int3
jne
loopne
and
lret
mov
adc
pop
jo
int
sbb
in
fs
loopne
cmp
std
roll
sub
pop
out
fcomp
jg
mov
mov
outsl
iret
push
xchg
arpl
xchg
dec
std
inc
push
or
cmc
std
xor
mov
xor
incl
roll
mov
fldpi
call
adc
out
mov
int3
lock
test
pop
cmc
incl
enter
inc
rcll
lret
lea
add
fsts
lds
cld
pop
push
sub
jecxz
das
iret
or
sub
lret
mov
imul
out
cmp
jbe
adc
in
push
je
mov
movsl
jge
es
dec
inc
incl
inc
mov
or
stos
mov
push
call
mov
pop
cs
shll
xor
aaa
add
jns
bnd
mov
mov
xor
and
mov
adc
or
shlb
dec
xor
push
pop
pop
sbb
pop
out
out
sbb
add
lcall
push
inc
arpl
repz
mov
adc
movsl
pushl
push
adc
pop
dec
inc
add
rcrl
push
xlat
cli
and
add
lcall
int
hlt
mov
leave
mov
jmp
in
mov
sarl
stc
sub
pop
push
aas
mov
add
inc
sub
call
inc
mov
sbb
sbb
cmpsl
jmp
push
cmp
mov
pusha
mov
mov
jl
pop
clc
jg
testl
push
int3
stc
fs
fidivl
out
sub
sub
js
cli
jae
bound
dec
add
out
inc
daa
adc
add
add
jo
add
lcall
scas
mov
and
mov
pop
jae
mov
inc
or
inc
insl
nop
push
sub
jg
cmpl
adc
cmp
xchg
mov
mov
and
popa
pop
adc
pop
mov
pop
inc
stc
inc
add
cltd
shlb
loopne
mov
popf
sbb
add
mov
xchg
push
mov
loopne
push
add
add
fisttpl
push
cmp
push
pop
lds
adc
mov
cmp
push
mov
cmpsb
outsb
jns
pushf
int
or
aad
add
mov
sub
pop
add
xchg
pop
clc
in
add
adc
jmp
popa
and
popf
leave
inc
mov
lods
add
pushf
jno
mov
jmp
sbb
imul
xchg
in
andl
push
jno
ljmp
rolb
sub
inc
sbb
nop
cmp
mov
jo
pop
outsl
push
arpl
add
add
fdivr
push
incl
dec
lcall
flds
cmpsb
cmp
or
adc
hlt
sahf
sub
push
add
sbb
and
push
add
adc
decl
js
inc
loop
and
rol
xlat
add
inc
je
or
shrb
mov
loope
lock
test
push
adc
mov
xor
mov
xchg
adc
dec
pop
jl
cmp
push
lock
rcrb
in
incl
inc
jb
shl
push
out
add
xchg
ljmp
mov
add
lcall
xchg
sbb
mov
pop
push
sahf
add
inc
jg
aaa
push
jl
pop
pushf
xchg
and
jl
inc
push
push
xor
pop
in
clc
lret
pop
mov
cmp
push
adc
sbb
scas
not
xchg
xchg
cmp
movsb
sarl
aam
les
mov
lock
add
sub
adc
push
cmpl
jo
ljmp
mov
pop
sbb
stc
enter
xor
inc
hlt
push
push
fwait
scas
add
sti
mov
call
jge
adc
cmp
test
mov
aaa
into
das
sbbb
addr16
daa
ljmp
cli
lret
sbb
xor
inc
lds
stc
insl
dec
in
jg
out
push
mov
cli
jno
add
xor
cmp
std
popf
mov
pop
sub
add
adc
jb
add
loopne
popa
sti
aas
add
sbb
sbb
out
and
pop
cmp
nop
dec
cmpsb
add
lods
dec
cltd
or
scas
push
les
add
lods
cmp
imul
mov
pop
movsl
push
or
mov
loopne
incl
movsl
cmp
push
test
mov
shlb
push
mov
pop
jbe
adc
je
pop
cli
imul
scas
insl
in
fmul
inc
jmp
lock
mov
fnstenv
or
sbb
outsl
ljmp
shrl
inc
cmp
add
xor
test
mov
cwtl
inc
jo
jecxz
mov
lds
mov
adc
adc
cmpsb
rorl
and
incb
hlt
fstpt
sbb
push
decl
xor
ret
and
jg
cs
jmp
lcall
mov
dec
loope
push
clc
pusha
int
test
cmp
cltd
add
cli
jg
dec
dec
mov
sbb
or
mov
jmp
push
jbe
into
subb
adc
add
or
ljmp
jecxz
aas
pusha
movl
push
test
jl
lock
or
or
push
cld
call
xchg
jo
jns
add
sbb
adcb
cmp
incl
je
sbb
pop
pop
pop
inc
inc
loopne
push
cmp
adc
cmp
fisubs
or
dec
sbb
insl
pop
in
out
push
out
sub
call
sub
add
scas
add
fimuls
jge
jle
sub
pop
aam
add
ficompl
in
scas
add
mov
je
add
andb
addb
sbb
call
les
inc
sti
xchg
gs
movsl
cmpsl
add
aas
and
cltd
sti
jno
xorl
pop
inc
xchg
inc
pop
adc
lea
cmp
cmpsl
jg
add
cs
stc
movsb
adc
inc
lods
mov
and
sub
push
xor
xor
cmp
sub
cmpsb
adc
add
push
pop
or
add
jne
cmp
scas
les
mov
add
lds
add
mov
xchg
xchg
adc
or
cmp
gs
mov
xor
aas
ror
repnz
adc
in
lcall
js
std
call
stos
decb
ret
popf
mov
sbb
inc
sbb
dec
pop
xor
mov
call
mov
jb
dec
adc
shll
sub
ljmp
into
sarl
in
jp
repz
fs
sub
data16
daa
cmpsb
jg
cld
leave
movsl
sti
dec
and
xchg
adc
test
push
add
dec
dec
jno
cmp
and
movsb
inc
sbb
je
add
xlat
jno
add
xchg
add
inc
arpl
jge
imul
adc
bound
lea
cli
push
out
add
pop
pop
incl
cld
enter
adc
pop
lock
inc
lcall
ljmp
andb
js
sbb
mov
xor
cltd
lea
in
push
rolb
or
add
addb
decl
mov
ret
sahf
xlat
mov
jae,pn
xor
and
das
sarb
out
mov
xchg
cmp
test
xchg
call
incl
mov
popa
fcmovb
pop
test
shld
jp
adc
mov
xchg
jg
decl
mov
and
ret
lret
iret
adc
push
daa
js
and
jmp
lret
mov
and
and
icebp
or
cmp
push
sbb
loope
jg
cmp
jnp
clc
cmp
adc
add
adc
push
jo
adc
incl
lcall
fdivr
mov
pop
sbb
jle,pn
dec
pop
add
sbb
xchg
sbb
fwait
aam
and
sub
xor
cmp
out
push
cmp
or
imul
jmp
je
xor
add
fadds
rorb
adcl
stc
je
ja
das
cli
inc
pop
inc
xchg
adc
imul
shr
lods
add
adc
inc
adc
call
adc
in
in
mov
cltd
inc
cmp
stc
inc
mov
rolb
ficompl
loope
xchg
bound
incl
mov
test
push
pusha
xchg
jge
jmp
sub
cmc
and
add
lock
decl
dec
adc
and
dec
repnz
xor
fbstp
push
add
popa
adc
incl
cmc
or
int3
sub
push
stc
aas
xlat
add
pop
or
sbb
push
dec
test
or
xchg
and
iret
jle
mov
inc
cwtl
sub
inc
lock
adc
out
push
es
add
rep
imul
pop
repnz
test
rorb
sbb
cmp
aas
shrl
dec
push
adc
mov
and
in
mov
int
mov
add
jns
dec
rolb
cmpsl
test
and
and
test
roll
in
inc
fsts
arpl
cmpsb
add
and
loopne
xor
rclb
aam
adcb
and
pop
inc
push
outsl
inc
adc
add
addr16
pop
ret
inc
jo
push
add
mul
inc
mov
or
or
fildl
je
adc
push
imul
mov
ds
adc
in
test
pushf
dec
cli
and
orb
test
bound
adc
dec
pop
mov
jge
or
jb
dec
or
push
lds
movsb
xor
or
in
add
dec
mov
in
xlat
inc
std
pop
pandn
jns
rol
sahf
sbb
dec
add
push
xlat
es
hlt
sbb
add
mov
test
pusha
pop
inc
aaa
mov
inc
dec
mov
mov
jae
add
pop
icebp
xlat
test
iret
or
enter
loope
cltd
or
dec
popa
push
add
cs
pop
cld
push
add
fadd
add
les
mov
cltd
inc
stos
adc
sub
enter
cmp
dec
mov
pop
cmp
dec
mov
call
push
adc
lods
xchg
push
or
push
lahf
push
add
outsb
sbb
or
in
or
jg
adc
andb
mov
cwtl
mov
hlt
mov
jmp
rorl
mov
adc
xor
push
inc
enter
xchg
pop
sub
in
divl
incl
sbb
mov
add
jnp
inc
jge
test
adc
and
lcall
push
fdivs
pop
jb
cmp
shll
shrl
lahf
sub
jno
xchg
xchg
push
sub
cwtl
mov
mov
jmp
xchg
add
jnp
inc
stos
sub
repnz
xchg
cmp
arpl
sahf
sbb
je
ljmp
out
jmp
sbb
popa
addr16
jo
lret
adc
mov
fs
push
cmp
lcall
push
cmpsb
push
xor
mov
lret
addr16
and
xchg
inc
rcrl
cmp
inc
cmpsb
add
sbb
loope
cmp
or
push
mov
adc
and
decl
push
sbb
or
jp
inc
sub
cmp
and
hlt
or
add
cmp
lcall
jbe
adc
push
mov
scas
add
roll
dec
push
hlt
mov
stc
stos
cmc
mov
testl
or
adc
mov
cmp
or
rolb
lock
inc
aam
repz
stos
inc
das
and
sbb
sbb
insl
dec
adc
mov
cmc
ljmp
lock
sbb
sbb
pop
pop
xor
mov
push
incl
popa
in
jbe
add
imul
mov
test
es
imul
daa
xor
ror
jne
ret
bnd
xlat
insl
ficoml
test
aam
xchg
dec
dec
add
scas
clc
mov
clc
outsb
mov
cmp
dec
mov
push
inc
push
call
mull
jnp
and
or
cmpsb
push
into
pop
sub
stos
jmp
stc
xor
sbb
pop
gs
aam
cmp
rcl
pop
mov
call
pop
imul
mov
push
xchg
jle
mov
xchg
push
lcall
adc
lahf
push
in
inc
fidivs
sub
mov
cmp
adcb
lcall
les
daa
jo
lock
adc
fidivrl
addr16
adc
xor
mov
mov
push
add
push
enter
call
clc
leave
sbb
decl
es
js
dec
push
nop
adc
data16
add
adc
jmp
add
decl
ja
jne
outsb
out
inc
fnclex
insl
imul
in
dec
mov
adc
mov
jne
decl
inc
cmpsb
mov
cmpsl
adc
je
test
rolb
adc
inc
hlt
cmp
dec
nop
ja
cmpsb
nop
sbb
mov
les
dec
enter
clc
xchg
cmp
pop
icebp
pushl
and
and
sbb
xchg
dec
sub
and
cmpb
adc
jnp
adc
cwtl
pop
mov
mov
mov
es
lods
call
mov
or
sub
pop
mov
inc
mov
decl
nop
push
adc
mov
dec
cmp
fs
add
dec
add
ljmp
dec
mov
and
sbb
and
sbb
mov
and
dec
les
lcall
dec
mov
dec
push
nop
rolb
and
inc
imul
mov
mov
inc
sbb
call
pushf
and
inc
sahf
adc
icebp
call
add
xchg
loop
das
adc
rorl
test
nop
out
test
fs
clc
ffree
int
es
sub
notb
fsubrs
adc
lcall
dec
sbb
push
xchg
mov
in
cmp
mov
add
xchg
mov
push
add
incl
xchg
xchg
jo
lods
es
xchg
stc
lods
sbb
push
aaa
jmp
ljmp
call
dec
movsl
std
fadds
jb
ljmp
xlat
adc
inc
loopne
loopne
in
dec
xchg
push
add
das
lock
sarl
jg
jo
mov
lea
lea
jl
jp
addl
jo
nop
lds
jo
pushl
lcall
push
je
mov
sub
add
cmp
or
negb
frstor
sbb
sbb
mov
sub
xor
cli
mov
jb
fldcw
cltd
inc
mov
nop
sub
mov
outsl
repnz
ss
cmpsl
add
incl
lock
mov
xor
mov
lcall
lret
inc
jmp
xor
dec
aas
xor
or
inc
push
test
sti
add
mov
test
mov
sbbl
sbb
cmpsl
jb
adcb
ljmp
repnz
rclb
sbb
mov
push
jmp
pop
dec
in
jg
lcall
inc
inc
in
fndisi(8087
mov
lea
jae
pop
add
mov
imul
add
incl
inc
lods
inc
repnz
and
push
or
adc
dec
push
sub
lods
dec
mov
mov
cltd
daa
jae
jl
or
mov
lahf
cmp
pop
inc
pop
loopne
mov
cltd
dec
xor
lcall
cld
mov
sbb
sbb
mov
inc
push
movsl
xor
cmp
sub
ja
mov
add
dec
mov
add
pop
push
mov
bound
or
add
xchg
dec
test
mov
cwtl
insb
jmp
jmp
or
add
add
dec
xchg
popf
test
test
aas
sbb
decl
and
or
and
fcoms
jnp
push
add
jnp
or
sbb
call
out
inc
jle
dec
ljmp
lods
jb
add
push
xchg
mov
adc
adc
adc
mov
mov
sbb
bound
es
sbb
pop
mov
stos
pop
xchg
fs
fcmovb
pop
leave
das
lea
or
ret
fcoms
test
mov
push
inc
xor
sbb
adc
cwtl
repnz
xor
inc
sub
jge
add
mov
cld
loop
fnstsw
mov
push
decl
mov
adc
push
dec
mov
out
pop
pop
test
fstpt
jmp
adc
adc
jecxz
cmp
xchg
sbb
push
sar
jmp
lret
scas
outsb
imul
or
jae
mov
push
and
push
xchg
or
in
sub
xchg
push
adc
sbb
sub
cwtl
or
rcrb
pop
js
sbb
mov
sub
mov
inc
fcmovbe
dec
lock
add
in
mov
call
xor
xchg
out
add
fistps
xor
cmp
add
stos
add
ja
in
or
push
or
adc
or
dec
fs
sbb
call
fisubrs
xchg
add
sub
push
cmp
sub
pop
addl
cmp
xchg
call
incl
xorb
aaa
add
loopne
loop
pusha
add
add
testl
adc
add
loope
mov
mov
add
fdiv
in
adc
push
lret
add
mov
das
xchg
incb
adc
add
clc
add
lods
test
insb
mov
pop
add
rcl
add
movsb
notl
xor
sub
sti
inc
add
popl
lea
add
xlat
add
add
sbb
inc
outsl
into
pop
leave
loope
add
dec
int3
add
addl
sti
outsl
sub
pop
data16
rclb
fucom
scas
arpl
lahf
lods
mov
addr16
add
sbb
ficomps
fildl
sub
cmpsl
jle
lds
dec
mov
sbbb
mov
outsl
cmp
sahf
and
aas
xor
adc
push
fwait
xchg
outsw
mov
into
mul
or
pusha
add
sbb
or
pop
pushf
sbb
mov
cli
add
xchg
sahf
testb
and
mov
dec
or
notb
adcl
xchg
xchg
add
xchg
scas
add
outsl
clc
or
testb
test
sbb
loope
mov
hlt
push
subb
jb
mov
rolb
xchg
imul
add
jecxz
and
int
stos
and
es
test
add
dec
mov
movsb
add
mov
mov
add
aas
xor
push
add
pop
andb
clc
sbb
lods
outsl
add
lret
add
xorb
or
bound
add
loop
js
in
fnsave
xchg
sub
pop
cmp
xchg
or
cwtl
pusha
jb,pt
pop
adc
lock
jecxz
push
mov
adcb
dec
insb
in
test
out
and
pop
nop
cmp
call
xlat
fdivr
jge
loope
ljmp
repnz
add
ds
adc
jae
bound
in
mov
adc
xor
ret
push
call
in
push
aas
bound
lcall
insb
in
mov
bound
push
sbb
mov
cmp
cli
pushl
push
push
add
icebp
adc
test
out
inc
dec
mov
rol
jne
enter
scas
push
and
dec
xchg
pop
sub
mov
nop
cmp
jbe
mov
mov
es
or
jne
fmuls
xor
push
inc
daa
or
aad
add
lcall
sbb
push
cmp
cwtl
popf
and
popf
mov
stc
js
decl
fldcw
adc
sub
and
je
fwait
mov
mov
insl
iret
iret
mov
out
rorb
push
xor
rcrb
jmp
xor
sub
addb
sbb
jg
push
xchg
rol
bound
cld
dec
je
jnp
out
in
cmpsl
jmp
jp
sbb
test
fdivl
add
dec
rcl
push
cwtl
aad
xor
mov
mov
push
mov
and
mov
push
test
xlat
adc
enter
rolb
jnp
insb
jo
jg
mov
mov
dec
add
jmp
or
pop
cmpsb
cmpsb
decl
fidivl
popf
jo
cmpsb
dec
scas
popa
out
mov
add
js
lcall
add
jmp
test
ss
jg
decl
xor
scas
mov
pop
mov
sbb
scas
or
stos
sbb
and
jo
addl
adc
cmpl
pop
inc
lret
data16
call
add
sbb
jecxz
jno
icebp
adc
xor
lret
xor
pop
pop
shlb
or
push
and
inc
inc
mov
call
fadds
loop
xchg
cwtl
rclb
cld
out
cmc
sub
lcall
or
pushf
mov
adc
mov
enter
test
or
icebp
stos
cmc
pushl
sbb
cld
adc
ret
pop
lret
ds
pushfw
push
xchg
push
aas
lcall
inc
std
and
or
inc
mov
loope
enter
mov
xchg
xchg
incl
ret
lods
push
fsts
test
mov
add
jp
stos
dec
aad
push
pushl
cli
cli
and
push
sbb
inc
shr
and
call
mov
mov
and
scas
mov
cmp
leave
incl
ret
jbe
fs
inc
sub
mov
lret
rolb
test
andl
add
aas
aad
aas
icebp
int3
xor
cmpsl
popa
roll
push
lods
jmp
repz
div
ret
call
pop
je
push
pop
dec
lret
or
adc
push
cltd
lods
lcall
lcall
or
gs
dec
xor
adc
push
sbbb
mov
pop
or
push
mov
inc
lods
jg
mov
sbb
mov
outsl
cli
lcall
fldl
loopne
frstor
pusha
out
mov
cwtl
out
jp
nop
test
std
stc
test
lret
dec
push
lcall
pushf
cmpsb
lahf
sahf
cmp
lods
and
jb
incl
and
mov
lahf
addb
fcoml
scas
lcall
jp
mov
xchg
iret
stos
xchg
inc
fisubs
mov
or
ljmp
stos
inc
jl
out
mov
add
or
pop
adc
mov
jno
decl
xchg
mov
aaa
bnd
popl
or
cmpsb
inc
aas
call
call
out
sub
movsb
fs
and
adc
dec
test
mov
mov
add
dec
decl
mov
aas
test
pop
in
dec
ret
xor
xlat
orb
cmp
aas
ljmp
lds
xchg
pop
hlt
adc
cmp
les
mov
sbb
cli
add
scas
mov
movsb
cld
ja
xor
hlt
mov
out
andb
mov
or
mov
adc
inc
orb
cs
mov
incl
mov
mov
cmp
cmp
sbb
fsubl
out
push
adc
cmpsb
mov
xor
sahf
cmp
jl
or
pop
cmpb
lret
sbb
dec
inc
jecxz
jmp
mov
cld
add
sub
clc
jnp
pop
frstor
cmp
mov
jge
sub
mov
lcall
rclb
sbb
fs
dec
xor
outsb
push
loop
push
incl
inc
jl
inc
add
jecxz
pushf
clc
push
repnz
scas
ds
ds
call
clc
pushf
mov
push
jp
jbe
jne
mov
jge
fidivrs
cmp
outsb
in
pop
cmp
in
mov
or
push
jl
jecxz
ds
jns
mov
sarb
cmp
pop
mov
sti
icebp
popw
ds
mov
stc
cmpsl
icebp
cli
stos
je
dec
ljmp
sub
popl
jl
pop
js
xor
leave
icebp
sbb
out
decl
adc
push
inc
add
pop
pop
in
pop
loopne
pushl
ljmp
insb
adc
sub
mov
jb
mov
test
pop
mov
ja
or
fdiv
es
cld
jg
movl
jl
rorl
testl
pop
and
and
loopne
push
xor
jecxz
sbb
jecxz
lcall
xchg
pop
sbb
pushf
pop
xor
mov
mov
test
pop
jl
es
or
fwait
loopne
push
cld
ds
push
jbe
mov
in
push
pop
mov
sahf
jl
in
mov
aam
or
insl
je
sbb
jl
icebp
addr16
insl
mov
clc
sar
push
clc
mov
jl
mov
jle
add
mov
dec
ds
icebp
push
aam
cld
lea
mov
push
jecxz
or
popf
jl
clc
mov
cmp
mov
ds
dec
clc
cld
jl
jl
sub
ljmp
icebp
jb
mov
cmp
icebp
jl
ds
mov
push
repz
ljmp
xor
imul
sahf
pop
mov
fcomi
test
mov
xchg
pop
push
jp
jp
das
clc
jl
mov
fs
mov
and
mov
xor
sub
decl
adc
mov
icebp
or
jae
movsb
pop
aad
xchg
jecxz
ds
clc
pop
or
lcall
call
jl
lock
movl
ljmp
xchg
movl
ret
arpl
mov
clc
lret
filds
mov
daa
jl
jl
pop
mov
push
sbb
lods
jo
xor
jo
pop
call
push
mov
stc
stc
subb
jmp
fldcw
xchg
fdivr
xlat
cmp
pusha
push
sbb
fwait
sub
sbb
mov
mov
mov
lret
ljmp
test
and
jmp
jg
es
in
and
inc
call
jmp
fs
sbb
loopne
mov
mov
add
jo
and
and
inc
and
dec
dec
fisubrs
and
adc
cmp
xor
imul
jno
mov
pushl
dec
xor
xor
add
xor
data16
les
sbb
mov
dec
das
lret
int
inc
xchg
adc
pop
sarl
push
call
rcrb
pop
sub
cmp
sbb
shll
sbb
inc
dec
in
xchg
lret
sub
push
popf
andl
push
jo
and
xchg
mov
outsl
pop
bound
mov
insl
push
adc
rol
call
std
data16
mov
enter
xor
dec
add
outsl
out
icebp
out
incl
jmp
aad
push
xchg
inc
xorb
cmp
imul
ds
lods
pslld
fildll
jmp
cmp
mov
pushf
imul
sub
addb
insl
mov
cs
shl
ljmp
test
loopne
and
lods
fiaddl
popa
fs
push
loop
jae
and
popa
cld
fcomip
fidivrs
mov
xor
data16
cld
dec
js
add
and
std
ja
pusha
mov
imul
arpl
int3
jle
pushl
sub
out
and
add
jae
xchg
lahf
sahf
pushf
xor
shlb
mov
call
mov
xor
cs
loop
xor
cmpsl
add
mov
in
pushl
call
test
in
scas
mov
mov
push
call
bound
add
jb
add
call
cld
lea
lea
or
pop
mov
xor
mov
dec
aam
push
inc
sub
cld
xchg
lods
or
or
add
and
pushl
mov
pop
imul
stc
inc
dec
push
add
mov
bound
sar
mov
jl
and
push
and
icebp
lcall
shll
subl
inc
inc
jp
mov
sti
test
cwtl
ljmp
and
inc
mov
xchg
add
mov
jg
add
and
xchg
sbb
jns
push
cmp
or
inc
pop
inc
sbb
inc
dec
pop
jo
xchg
adc
and
and
inc
sub
cmp
loope
out
dec
jb
or
or
lods
pop
lcall
dec
sar
jmp
inc
jae
mov
inc
jmp
xor
sbb
shll
add
inc
pop
ss
cmpxchg
pushl
std
ret
stos
movsb
in
rol
and
inc
mov
ljmp
jmp
cmp
sub
ljmp
cli
or
mov
push
xchg
xchg
sbb
cmp
mov
mov
dec
adc
stos
clc
ja
pushf
jo
or
sub
cmc
add
dec
xchg
xorl
ljmp
out
add
push
in
or
mov
ret
push
sub
add
sub
or
mov
ljmp
xchg
test
push
aaa
mov
mov
ljmp
dec
out
mov
jp
dec
enter
jno
adcb
mov
mov
and
sbb
adc
daa
lcall
fistpll
movsl
mov
push
in
mov
mov
mov
incl
cmpsb
lea
pop
lret
lret
loopne
adc
call
sahf
popf
pusha
out
sbbb
inc
xchg
lahf
lret
pop
pop
xchg
and
sarl
cld
sbb
lcall
dec
rcrb
or
pop
aaa
fildll
scas
notl
mov
mov
scas
mov
test
ljmp
dec
jp
adc
pusha
or
jbe
stos
addl
pusha
ljmp
mov
ja
add
pushl
jnp
insl
mov
test
stos
mov
jmp
sub
enter
add
adc
push
pop
sub
pop
add
or
dec
push
aam
and
loop
pop
fcomip
mov
pop
push
in
fs
pushf
mov
sbb
out
jg
xlat
stc
jg
decl
outsl
xchg
mov
jbe
and
ss
push
movsb
xchg
pop
stc
inc
lods
dec
inc
test
stos
decl
dec
adc
adc
cmpsl
mov
pop
enter
jae
lds
jg
pop
shll
mov
aaa
popf
xor
cmp
loope
mov
jmp
mov
jnp
loope
cmp
xchg
or
inc
fdivr
mov
pop
xchg
fwait
seto
or
ss
cmp
xor
push
inc
xor
lcall
add
push
xchg
inc
xchg
nop
mov
sub
mov
add
adc
inc
cmp
pop
lock
cmp
jns
cwtl
and
mov
andl
sub
lock
jg
pop
clc
ljmp
mov
stos
rcrb
jnp
sbb
inc
fcompl
lcall
mov
xchg
pop
sub
push
or
push
loop
adc
inc
push
aam
fcomip
incl
sbb
lock
rolb
addb
shlb
icebp
pushl
jle
loopne
popa
sub
rclb
movsl
push
repnz
sub
incl
add
push
xchg
iret
xchg
fstpl
rolb
push
nop
fldenv
fdivr
incl
or
pop
mov
inc
rcrl
cmp
sti
add
add
cld
popf
shrb
hlt
fwait
and
ljmp
mov
dec
pop
push
sbb
sub
sbb
inc
xchg
add
cmpb
mov
push
test
xchg
jmp
imul
test
or
mov
mov
jg
mov
cmp
iret
inc
stc
cwtl
loop
sbb
pop
outsl
or
sbb
clc
mov
dec
or
ret
daa
test
cmpsl
fs
xor
enter
decl
loope
adc
mov
jns
push
cmpsl
les
inc
stc
dec
ret
xchg
fs
loope
add
aaa
cld
jmp
clc
xchg
pop
orl
adc
cmp
lods
subl
std
sbb
push
adc
cld
sbb
inc
ss
jmp
add
jmp
jne
mov
push
scas
xacquire
mov
outsl
push
pop
jg
or
or
mov
les
jnp
jae
mov
mov
add
cli
ret
stc
jbe
xor
jb
xor
mov
inc
sbb
lcall
xor
sbb
pop
pop
mov
cmp
dec
fnstcw
clc
add
pop
sbbb
push
cmp
daa
cmc
push
out
stos
cmp
test
add
add
add
rcll
lret
add
mov
jg
fidivs
add
bsf
mov
xchg
dec
ds
fidivrs
push
cld
fwait
add
add
jp
or
xor
sbbb
adc
bound
mov
push
push
or
add
add
sti
jmp
iret
add
mov
add
hlt
add
pushl
jg
cltd
add
je
loop
aaa
cwtl
add
lret
add
and
nop
insl
add
ljmp
aaa
adc
jg
or
stc
or
popa
jb
add
add
adc
mov
out
fsubl
push
xlat
mov
xor
add
nop
dec
add
or
addb
xchg
scas
movb
adc
iret
adc
cld
test
mov
outsb
cmp
pop
ljmp
add
add
mov
add
inc
pop
cld
jmp
cld
dec
add
push
and
cmpsb
insb
nop
adc
not
add
or
outsl
nop
in
out
mov
imul
push
add
mov
test
je
dec
mov
es
xchg
add
ljmp
inc
inc
add
add
push
cmp
sub
inc
push
add
outsl
push
das
sub
add
aaa
scas
xchg
xchg
add
add
add
jb
loope
inc
rcrl
pushl
leave
add
add
cmpsl
add
or
test
add
call
imul
xor
add
call
push
fiaddl
and
cmp
mov
sbbl
inc
nop
leave
mov
adc
sbb
inc
or
xor
cwtl
push
xchg
enter
jg
xchg
gs
inc
sub
lods
in
or
dec
bound
lcall
je
mov
and
ret
andl
push
out
mov
movsb
add
cmp
mov
mov
sbb
add
daa
add
push
pop
hlt
call
sarl
lock
lock
mov
cmp
cltd
adc
cltd
test
sub
sub
inc
cs
mov
arpl
push
xor
loop
leave
addr16
out
pop
xchg
pop
ret
adc
push
bound
cld
outsl
cmp
cmpsb
jbe
in
ljmp
or
adc
mov
lcall
fisubrl
lea
and
dec
repz
cmp
adcb
leave
dec
fadds
and
adc
cs
gs
jle
dec
adc
cmp
ret
movb
outsl
sub
lds
inc
idiv
inc
test
pop
jo
imul
jae
xchg
dec
test
lea
jne
add
orb
cmp
jno
cmpsb
fnstcw
fs
inc
xor
addr16
in
or
and
addl
andl
mov
cmp
mov
inc
inc
lods
cs
pop
mov
dec
arpl
or
icebp
and
and
mov
or
negl
and
xor
stos
lods
add
push
xor
xchg
xchg
xchg
enter
insl
adc
ret
ja
mov
jb
test
sar
call
dec
test
xchg
lock
int
mov
popf
fxch
clc
jno
and
push
addr16
jmp
jecxz
icebp
pop
pop
add
adcl
pop
mov
fs
jecxz
cwtl
inc
add
ljmp
jge
mov
add
imul
and
jl
or
test
std
js
sbb
adc
stos
lds
fucomip
mov
les
cld
js
shl
lcall
mov
xchg
cs
in
ja
cmp
jns
bound
jl
sar
ja
out
sahf
popl
cli
outsb
or
jge
fistpll
je
add
sub
lahf
icebp
mov
decl
pop
pop
mov
fcomip
je
icebp
scas
sbb
aam
xor
cmp
decl
pop
add
mov
sahf
ljmp
cld
inc
clc
ret
sub
rolb
decl
movsb
and
enter
push
and
jl
and
daa
adc
push
inc
stos
dec
lock
cmp
cmp
mov
dec
mov
decl
orb
adc
xchg
cwtl
sub
ficoms
leave
and
nop
dec
inc
cs
adc
pop
leave
adc
inc
clc
ljmp
dec
adc
dec
dec
and
inc
int3
adc
stc
and
inc
nop
mov
faddl
cmpsl
jg
addl
stc
mov
mov
push
dec
or
pop
incl
mov
or
adc
ss
les
or
and
call
cld
mov
mov
pop
inc
lods
and
inc
in
test
mov
pop
repz
idiv
incl
cmp
cmp
and
bound
test
mov
pushl
hlt
jl
bound
sub
xlat
and
dec
xchg
and
lcall
push
mov
iret
sbbl
inc
jo
xchg
mov
ljmp
ljmp
cmp
scas
adc
inc
xchg
add
and
and
stos
mov
lcall
add
and
and
data16
add
sub
mov
add
xorb
lock
call
mov
sbb
std
sbb
jp
inc
mov
call
mov
push
mov
push
cmp
and
cmpl
jge
loopne
ret
fstl
inc
adc
fldl
adc
pushl
jne
and
lcall
jb
cmpsb
movsb
cmpsb
jp
out
push
pop
sahf
fimuls
outsl
bound
jl
mov
je
or
roll
in
lret
loope
mov
fistps
add
jmp
cltd
cmp
xor
xor
daa
mov
fldenv
pop
push
add
shll
jg
sbb
outsb
jecxz
movsl
loop
out
add
call
xor
xor
enter
int3
bound
xorb
int3
and
lea
sbb
jmp
and
cmp
mov
bound
mov
lds
stos
inc
xorb
cmpb
mov
test
rcr
popa
pusha
data16
sbb
out
mov
pushl
shlb
add
mov
jp
mov
fdivl
mov
jmp
in
sbb
insb
addl
int3
or
jle
clc
lcall
pop
aad
call
dec
or
jle
pop
and
adc
adc
pop
cld
pushl
jl
les
je
insb
or
pop
adc
pushl
std
sbb
jp
add
push
push
xchg
mov
xlat
adc
jb
jmp
pop
lret
jb
xchg
lock
and
pop
dec
pushl
xchg
mov
and
call
push
ret
cmp
cmp
cli
cmc
data16
repnz
jno
mov
ljmp
dec
sti
and
cmp
iret
mov
mov
push
icebp
iret
and
cmp
sbb
fidivrs
or
inc
mov
insl
lret
icebp
lods
ljmp
mov
and
mov
divps
and
dec
call
xor
jge
cmp
pop
and
popa
inc
sub
ret
mov
cmp
push
mov
mov
dec
or
pushl
mov
mov
std
stc
mov
inc
pop
dec
in
inc
cmc
in
mov
sub
jg
lcall
movsl
ret
cmpsl
sarl
xor
enter
mov
popf
sub
mov
ljmp
or
xlat
pop
sahf
inc
mov
loope
mov
ret
in
lret
and
push
shrb
decl
loop
lcall
sub
cli
rolb
add
fcoml
out
mov
cmpsl
lock
jmp
and
dec
push
outsb
dec
or
mov
out
lret
add
fwait
xchg
or
add
out
mov
sbb
stos
sub
dec
inc
adc
adc
mov
ja
jmp
add
or
scas
push
add
mov
adc
jmp
aad
stos
inc
or
xchg
add
loopne
jg
cmp
add
ret
incl
xor
stc
lret
jne
or
add
pop
add
incl
add
test
and
dec
testb
sbbl
pop
or
fnstenv
xchg
sub
cmp
pop
shr
roll
dec
call
xor
fsub
call
mov
inc
add
push
sbb
xor
imul
add
and
incl
cltd
dec
adc
mov
or
push
cmp
in
jno
cmp
cmp
bound
cmp
dec
sarl
movsb
cltd
dec
cmp
clc
ljmp
sbb
sbb
or
ret
insb
dec
cld
cwtl
dec
push
sub
xorb
andb
out
mov
push
add
test
push
js
mov
out
add
les
repz
shrl
or
mov
fmuls
inc
sti
js
cwtl
add
inc
test
xchg
addr16
test
cli
xchg
pop
pop
add
sbb
out
imul
and
movsb
add
add
out
dec
lret
push
rcrl
pop
adc
inc
push
push
je
iret
and
sub
jl
cltd
roll
cmp
cmp
dec
xor
pop
sbb
mov
cld
jge
insl
test
add
sti
pop
inc
sbb
xchg
in
pop
jb
pop
pop
test
adc
inc
cmpsl
cmp
add
cltd
sub
add
xchg
dec
and
pop
push
mov
push
adc
and
or
add
incl
add
mov
std
leave
jb
ss
sub
mov
adc
je
les
ljmp
mov
rorb
add
push
mov
fimuls
xor
and
popf
push
hlt
jg
cmp
popa
lock
adc
orl
inc
xor
push
mov
dec
ljmp
rcr
pop
mov
cmp
cmpsb
xchg
inc
mov
loope
mov
and
stos
jo
and
pop
nop
pop
jmp
out
jecxz
add
int
leave
add
mov
in
jnp
jmp
jno
adc
pop
adc
daa
xor
push
inc
cmpsb
xor
push
mov
jno
and
xor
mov
popf
stc
mov
xlat
and
movl
daa
out
flds
push
jo
stc
push
and
js
cmpsb
stos
cmp
xor
xchg
in
xor
xor
mov
inc
jbe
push
cmpsl
cmpsw
inc
adc
mov
or
xor
sahf
addl
arpl
iret
inc
sub
pop
xchg
mov
push
mov
call
add
addr16
dec
dec
add
mov
push
jo
pusha
jnp
in
aas
es
call
xor
shl
nop
leave
rcll
sbbl
cmp
sbb
out
inc
add
jne
aaa
mov
sbb
sbb
push
mov
or
cli
in
inc
push
fsts
pop
insb
addb
outsb
sbb
out
mov
ljmp
jmp
aam
jmp
adc
push
cmp
inc
or
subl
sti
cmc
test
pop
scas
clc
mov
mov
repz
push
cmp
inc
push
mov
call
dec
sbb
in
arpl
add
leave
stos
lcall
push
or
mov
mov
sub
or
and
cmp
mov
and
pusha
push
leave
adcl
or
decl
push
scas
adc
cmp
xchg
inc
mov
mov
mov
xchg
movsb
and
pop
inc
adc
jb
xchg
fwait
cmp
mov
nop
mov
jmp
and
mull
mov
inc
sub
xor
or
dec
dec
add
enter
lock
cmp
sbb
push
push
add
push
jg
pop
xorb
aas
sub
shlb
sbb
cmp
fwait
mov
incl
cmc
dec
adc
js
add
pop
adc
das
fwait
lods
in
push
cmp
outsl
decl
adcl
inc
dec
sub
pop
jnp
or
test
mov
lcall
stc
cwtl
data16
push
and
cmpsb
mov
cmpsl
or
addb
inc
mov
add
sti
jg
decl
or
mov
xor
inc
jge
and
dec
push
lcall
fadds
mov
mov
cmc
push
lahf
call
sbb
scas
sbb
loopne
test
mov
dec
ljmp
push
push
les
and
cmp
lcall
jno
sub
repz
cmp
push
scas
test
inc
lea
cli
lcall
ret
movsb
mov
je
inc
test
loope
outsb
add
lds
cmc
outsb
lcall
push
push
fdivl
nop
and
pop
push
sub
push
inc
inc
dec
fcomip
call
mov
push
in
sbb
enter
aam
rclb
aas
inc
sbb
xor
jmp
rol
mov
sbb
push
andb
cs
xor
ds
fdivrs
loope
cli
imul
xor
call
dec
imul
adc
push
push
out
xchg
fildll
ljmp
aam
sub
test
sbb
loopne
int3
dec
pop
cld
call
cmp
pop
mov
cmc
or
jns
fidivl
in
jns
fldcw
incb
sub
jp
scas
cli
push
mov
cmp
in
push
pop
popf
jle
add
das
cmp
jmp
dec
add
xchg
pop
inc
add
sub
ljmp
std
or
adc
push
jne
pop
add
fdivrs
mov
pop
jge
sub
enter
add
incl
addr16
sub
mov
scas
pop
xchg
jbe
add
call
xchg
lcall
and
mov
and
cmpl
jmp
cld
jecxz
out
mov
inc
test
ss
cmp
xor
imul
inc
jnp
push
sub
pop
cmp
mov
decl
jp
daa
cld
lret
push
jl
test
push
in
xor
data16
fisttps
jae
std
add
inc
in
outsb
cmp
lcall
add
cmpsb
aam
int3
push
and
adcb
lcall
icebp
mov
mov
mov
cwtl
sbb
xor
fstp
push
ss
sbb
ret
xchg
lea
add
mov
call
sub
cld
fisttpll
sbbb
adc
jg
js
shll
dec
outsb
pushf
dec
loope
xchg
scas
notl
test
and
pushl
in
and
scas
dec
mov
or
aad
xchg
mov
xlat
subb
pop
lds
enter
adc
dec
xor
push
pusha
xor
pop
ljmp
add
jl
outsb
sbb
sub
fnsave
sbb
mov
push
pop
rorl
lret
push
std
call
mov
data16
test
cmc
push
mov
shlb
xchg
add
or
call
in
add
jecxz
imul
cmp
xchg
dec
sub
out
push
movsl
jl
fidivs
push
jae
adc
lret
xchg
test
mov
cmp
xchg
lods
inc
or
or
pushl
jne
inc
xchg
out
mov
xor
push
rorb
lock
iret
jmp
mov
addb
ret
push
divl
setae
sub
push
mov
lcall
arpl
fidivl
jns
addb
xchg
push
cmpsb
add
adcb
cmp
jl
and
aam
repnz
inc
or
xchg
and
inc
rep
inc
data16
pushl
jp
fdivr
pop
call
pop
mov
aad
orb
lahf
lods
or
das
cli
and
mov
xchg
xor
mov
sbb
orb
lock
incl
nop
lahf
add
and
clc
out
movsl
test
xchg
sbb
mov
pop
cmp
int
sub
add
add
loopne
mov
dec
test
lcall
cwtl
add
inc
inc
outsb
mov
clc
sbb
je
mov
incl
loopne
out
add
jp
add
mov
xchg
leave
movsl
aad
std
sub
push
in
inc
mov
xchg
adc
add
mov
pop
mov
mov
call
je
mov
mov
cmp
nop
rcr
sbb
js
and
test
inc
shrb
incl
pop
or
mov
cmp
ljmp
in
cwtl
test
add
or
mov
ljmp
push
ja
xchg
xchg
inc
pop
mov
sbb
cltd
mov
ljmp
jl
enter
cli
jg
cmpsb
gs
or
xor
addb
mov
sub
jmp
cmp
jmp
ret
inc
fsubrs
sbb
adc
or
outsl
jg
outsb
lcall
inc
loope
inc
mov
xchg
imul
lret
inc
jmp
and
popa
xchg
and
mov
inc
pop
js
or
ljmp
hlt
adc
mov
mov
mov
ret
mov
jb
ljmp
outsb
out
lods
push
push
mov
dec
rorb
call
ret
mov
inc
cmp
mov
das
loope
add
mov
mov
pop
bound
jmp
mov
adc
or
mov
js
pop
leave
mov
mov
add
pop
and
dec
sti
stos
jb
mov
sbb
hlt
jmp
push
les
call
or
and
jbe
pop
loopne
inc
mov
add
lea
cmp
and
push
pop
add
dec
outsb
mov
sub
enter
cmp
add
inc
roll
jp
je
and
and
mov
test
outsl
mov
lods
enter
rcl
sub
rorl
pop
frstor
sub
loopne
in
incl
cmpb
jns
inc
add
nop
in
or
mov
xchg
sbb
flds
xor
stos
mov
decl
enter
les
test
mov
dec
arpl
imul
cmp
mov
xchg
push
xor
test
imul
xchg
push
rorb
jmp
xchg
fistpll
lret
mov
shlb
push
push
nop
or
inc
jmp
stos
jmp
stos
inc
aam
push
adc
mov
jne
fidivrs
cmp
test
lret
mov
sbb
loope
and
ljmp
dec
inc
cmp
or
mov
cmp
xchg
xor
or
and
call
sub
sub
jg
mov
sub
mov
sub
test
pop
adcb
or
stos
ds
rclb
xor
inc
loope
and
clc
ljmp
subb
repz
adc
stos
adcl
mov
shr
call
into
pop
rclb
or
dec
pushf
jbe
outsb
or
sbbl
aad
jge
sbb
inc
mov
stc
xor
nop
cmp
ja
push
mov
hlt
inc
ja
icebp
or
fdiv
push
fistpl
mov
jmp
jns
mov
fdivr
daa
cmp
stos
and
pop
add
lahf
out
and
call
inc
ljmp
in
data16
add
hlt
push
pushl
lcall
inc
xor
inc
dec
add
mov
add
cmp
scas
fwait
lcall
fildll
sbb
fs
sub
cmp
pusha
push
imul
out
push
mov
cmpsb
xor
ljmp
jae
aam
stos
arpl
pop
cld
call
pop
add
jg
adc
pop
mov
aas
bnd
jg
jg
enter
mov
mov
pop
shl
jno
jb
idivl
imul
pushl
push
mov
sub
lahf
dec
icebp
int3
pop
ljmp
and
sbb
hlt
mul
lcall
mulb
mov
jl
subl
hlt
icebp
dec
or
jmp
test
js
fcomi
xor
mov
pop
imul
push
and
pop
icebp
js
movsb
adc
jg
push
and
fbld
sub
ret
iret
xchg
mov
inc
or
and
jecxz
push
clc
adc
daa
out
jne
mov
sbb
sbb
mov
das
nop
mov
xchg
xor
adc
jl
sub
cmp
dec
cmp
dec
mov
ds
out
inc
lret
push
pusha
and
nop
scas
push
dec
jg
lret
add
jge
fistps
insb
jl
add
fstl
add
mov
rol
ds
mov
pop
pop
repz
xor
and
into
int
xor
and
inc
data16
mov
stc
xchg
in
mov
push
dec
mov
iret
je
popl
frndint
movsb
mov
iret
inc
mov
ret
insb
mov
pop
call
cwtl
lahf
daa
aam
dec
pop
in
mov
repz
and
mov
mov
jmp
je,pn
mov
rolb
sti
sub
lock
gs
ja
sbb
adc
lcall
push
test
push
lea
mov
sub
aas
fs
aam
cmc
jle
and
push
das
gs
jmp
xchg
das
lret
push
add
xor
inc
jmp
shr
inc
jmp
stc
jnp
dec
orl
sbb
pop
sbb
call
sub
fs
adcl
nop
and
xorb
call
nop
dec
pop
xchg
out
imul
and
xchg
movsl
ds
mov
incl
and
push
adc
sbb
and
and
ljmp
dec
jl
es
lea
jge
cs
or
scas
out
add
pop
push
incl
inc
push
add
js
inc
adc
fsubrs
ja
iret
push
in
ljmp
and
jle
push
rorb
cwtl
js
mov
sub
and
inc
jbe
call
enter
loopne
das
xchg
icebp
mov
dec
add
and
dec
adc
inc
popa
mov
incl
stos
add
icebp
pop
sbb
pop
rcr
sbb
addb
aaa
std
fwait
repnz
dec
xchg
push
imul
pop
aam
dec
pushl
out
je
icebp
push
push
fadds
or
mov
inc
aam
sahf
mov
sub
pop
lock
push
jg
call
and
pushl
pop
cltd
test
fucomip
int3
inc
stos
add
out
outsb
popa
arpl
mov
dec
or
leave
lret
cld
out
dec
imul
out
dec
and
jo
icebp
inc
es
loop
rcr
and
push
clc
lcall
repz
dec
xchg
or
and
ss
mov
cld
decl
fisubs
xchg
add
push
push
xchg
test
push
dec
push
or
or
repz
mov
dec
xor
in
pusha
jb
sub
and
adc
xchg
jne
pop
icebp
jmp
into
sub
aam
ja
xor
jbe
inc
push
nop
mov
inc
mov
mov
into
loopne
and
pop
fsubs
add
lret
daa
das
mov
dec
xchg
and
cmp
sub
xchg
and
mov
loopne
mov
stos
fcomp
pop
fimuls
int3
xorb
incl
push
xor
ret
int
divb
jge
sbb
push
in
test
sub
shlb
orb
movb
scas
adc
pop
lock
testb
sub
insb
mov
call
scas
js
outsb
and
sarl
adc
cli
jl
and
add
loopne
mov
dec
push
inc
xor
pop
and
add
nop
jmp
js
or
mov
add
or
fsubs
cmp
les
orl
movsb
add
adc
cli
xchg
cltd
adc
sub
or
sub
dec
add
scas
add
inc
or
mov
clc
inc
cmp
mov
lock
push
mov
cmpsb
and
ljmp
add
leave
and
inc
inc
andb
mov
and
das
mov
shlb
or
aam
mov
mov
push
xchg
push
push
pushf
adc
xor
pop
cld
jmp
inc
xchg
mov
xor
andb
push
nop
andb
mov
cmp
test
xor
arpl
je
push
xchg
pop
xchg
or
ds
lahf
or
jns
or
pop
je
sbb
sbb
test
lahf
sbb
incl
inc
imul
dec
mov
jle
jmp
xor
adc
jmp
sbb
jne
data16
incl
cmp
cs
sahf
pop
mov
push
daa
xor
mov
ljmp
incl
scas
andb
dec
add
loopne
int3
inc
or
cmpsb
add
incl
mov
adc
jmp
clc
pfcmpgt
jle
sub
incl
cmp
cmp
or
lds
gs
mov
inc
ss
pushf
xchg
push
test
roll
insb
jle
lock
and
xor
nop
aad
mov
or
pop
push
cli
cmp
mov
dec
push
mov
rorb
push
add
mov
push
mov
or
pop
pushf
cmc
xor
sub
scas
adc
mov
adc
out
and
xchg
cmp
fistl
add
jne
jecxz
cmp
add
inc
inc
lock
in
dec
jno
rolb
push
std
adc
adc
adcl
dec
cmp
pop
dec
xor
gs
fcomp
adc
lcall
hlt
pop
out
lcall
ds
aas
xchg
frstor
sbb
add
outsb
mov
ret
lds
push
adc
idivb
dec
mov
sbb
or
mov
add
sub
mov
shr
scas
sub
push
cmp
pop
xor
inc
adc
push
mov
xchg
xchg
xor
or
push
adc
xor
adc
add
jg
pop
inc
cmp
incl
jmp
push
dec
or
and
adc
sub
or
xchg
rcll
push
jae
pop
lock
ljmp
xor
sbb
sbb
xlat
sbb
fs
lcall
inc
cmc
outsl
mov
aaa
adc
dec
pusha
out
lret
inc
adc
aas
pop
dec
adc
ljmp
xor
bnd
xor
dec
decl
sub
mov
push
je
push
inc
mov
fisubrl
inc
mov
decl
and
sub
addb
cmc
in
xor
sub
jbe
push
or
jp
push
dec
movsl
fldenv
fcmovnb
pop
clc
decl
inc
shr
shl
push
push
mov
xor
movsb
xor
add
ljmp
mov
aaa
and
xchg
or
je
in
push
iret
and
flds
or
adc
adc
ja
mov
and
mov
inc
roll
cmc
into
push
pusha
push
add
incl
cmp
fldl
cmpsl
movsb
inc
insb
bound
test
ss
jg
push
mov
mov
cmpl
sahf
xor
push
out
fdivrl
call
mov
adc
aad
shll
daa
sbb
mov
xlat
incl
cmp
test
dec
mov
scas
sbb
jg
mov
mov
mov
insl
cmp
ljmp
outsb
mov
mov
xor
shlb
xchg
adc
in
cwtl
sbb
sub
and
clc
pop
inc
arpl
xor
add
jb
nop
push
mov
ljmp
jns
dec
orb
ret
xor
pop
push
subb
xchg
adc
sub
or
push
lods
cs
ljmp
add
xor
ss
xchg
test
les
mov
or
bound
sub
or
mov
mov
lock
cmpsb
and
decl
and
pop
or
int3
je
cmpsl
mov
xchg
inc
inc
mov
lods
inc
jb
or
outsl
and
jnp
lcall
inc
dec
pop
add
pop
or
hlt
add
adc
fists
jle
lret
mov
decl
iret
lds
outsb
push
cmp
xchg
mov
out
in
nop
jb
inc
daa
fildl
cld
fists
inc
fisubrs
dec
and
lock
or
mov
stc
push
outsb
test
cmp
jbe
out
je
pop
cmp
jge
and
loop
sar
decl
insl
mov
or
lods
push
or
mov
into
mov
jge
das
and
pushl
pushl
mov
sub
lret
inc
call
popl
ljmp
js
iret
push
and
jl
jns
xor
push
add
in
cld
pushf
inc
cld
out
xor
dec
lea
xor
mov
arpl
mov
ret
mov
leave
aaa
jl
and
and
xchg
loopne
fiadds
or
call
jae
in
mov
orb
ret
imul
fildl
cld
pop
pop
pcmpgtb
xchg
rcr
mov
call
stc
aam
mov
test
mov
js
pop
xlat
xchg
adc
jge
push
fldcw
and
icebp
out
inc
pushf
mov
movb
pushl
and
mov
add
les
adc
dec
jle
push
lcall
subl
out
pop
inc
adc
inc
repz
pop
mov
lahf
xor
sar
js
ljmp
sbb
lahf
cltd
dec
loop
loope
cmpsl
inc
push
inc
mov
cmp
fdivrl
cmp
dec
xchg
push
lods
push
or
mov
jmp
jo
mov
add
andl
pusha
inc
and
adc
shlb
iret
sub
inc
mov
sub
ljmp
sar
push
lcall
adc
xor
dec
inc
xor
and
inc
jecxz
jg
inc
das
push
loop
push
int3
test
jle
or
mov
orb
adc
and
filds
and
les
cltd
and
sbb
inc
sbb
xor
out
nop
rclb
sub
addb
out
add
inc
mov
inc
dec
int3
and
call
jecxz
int3
cmpsb
sbb
and
data16
in
rclb
mov
push
jmp
xchg
adc
repnz
pop
fdivrp
push
std
dec
test
out
mov
lds
popa
lret
jmp
dec
mov
inc
cmp
rorl
jno
and
push
nop
and
mov
xor
and
jecxz
add
inc
ret
inc
iret
xchg
or
or
cmp
incl
rorb
int
movsb
or
dec
sbb
es
call
das
inc
jno
imul
sub
add
xchg
dec
pop
add
decl
xchg
dec
adc
and
fwait
mov
andl
adc
sbb
sub
inc
and
inc
repnz
push
pop
shl
xchg
js
mov
andl
or
inc
ljmp
inc
and
movl
inc
inc
dec
pop
sbb
sub
push
ss
pop
enter
fcomip
jg
flds
mov
xchg
sub
cmp
aam
dec
enter
cld
call
nop
and
and
popf
push
push
adc
and
int3
xor
and
lcall
inc
mov
sbb
and
dec
int3
popf
loopne
or
inc
and
dec
add
incl
mov
cli
dec
subb
mov
adc
inc
lcall
adc
mov
cmp
fsubrp
iret
insb
and
dec
aaa
je
inc
cmpsb
and
cltd
or
clc
jg
dec
adc
adc
shlb
or
movsb
sbb
shl
lock
and
xor
add
jp
pushl
arpl
xchg
pop
in
ja
cmpsl
and
xchg
aam
loop
cmpsb
or
push
and
enter
dec
lcall
movsb
mov
sub
push
mov
adcb
cmp
je
outsb
and
fs
xor
cld
stos
bound
add
xor
ljmp
sub
test
xchg
je
clc
mov
jae
fsts
gs
aas
inc
and
lock
xchg
mov
lcall
popf
adc
sbb
add
sbb
into
in
or
cmp
call
xor
pop
cmp
test
pop
sbb
dec
sarb
jne
sub
lahf
inc
sub
cld
popf
xchg
mov
cld
call
mov
add
jo
mov
jg
call
mov
lret
lcall
mov
xchg
popf
in
dec
mov
mov
mov
nop
fldenv
in
jne
mov
mov
pushl
mov
dec
clc
hlt
scas
call
pop
cli
mov
pop
lcall
fldt
out
out
or
cmc
dec
jo
or
hlt
lods
test
or
mov
mov
mov
xchg
sti
incb
fwait
or
or
ljmp
ja
push
xchg
scas
pop
popa
lcall
decl
mov
test
sub
cmp
fistps
dec
iretw
mov
aad
jmp
sar
fwait
and
add
movsb
add
sti
adc
jl
fisttps
orl
lahf
fs
insb
lret
stc
daa
adc
add
mov
dec
cmc
pop
enter
mov
fld
push
in
sbb
pop
pop
popl
mov
mov
add
icebp
rorl
lock
cmp
xor
pop
je
mov
test
repz
adcb
incl
movsl
push
mov
inc
push
aaa
jbe
add
lret
shlb
jo
movsb
aad
push
sub
sbb
decl
enter
adc
outsb
leave
js
xor
mov
cmp
add
sbb
and
and
or
mov
shlb
pusha
cmp
ljmp
inc
mov
fsubs
daa
bound
inc
cmpb
in
and
adc
mov
adc
jbe
es
out
aas
scas
std
mov
sbb
mov
xchg
jg
jne
add
or
adc
mul
je
jo
or
push
jge
add
xor
loope
dec
lcall
popf
and
lock
test
push
jmp
and
rorl
fsubs
loopne
adc
dec
pop
jno
iret
leave
out
xor
or
in
movsl
push
dec
lods
dec
sbb
lock
cmp
add
jns
call
mov
inc
and
ss
dec
adc
fnstenv
dec
icebp
push
aam
or
ja
or
dec
roll
ret
pop
std
mov
mov
jecxz
or
popf
jmp
add
xchg
and
dec
push
pusha
dec
or
mov
pushl
jno
push
sub
insl
pop
or
pusha
jo
jo
cs
mov
stos
push
mov
cs
mov
lds
jmp
jb
jl
sub
inc
mov
dec
inc
and
les
xchg
in
pop
rcl
xor
cmp
fwait
xorl
addr16
mov
push
or
add
pop
js
cltd
dec
and
jae
in
cmp
and
xchg
adc
adc
mov
pop
jmp
daa
int
or
or
fldl
mov
jns
add
mov
dec
pop
cmp
inc
cmp
stos
add
lea
push
rclb
jmp
push
loope
sub
mov
inc
xor
nop
push
adc
adc
cmc
jl
adc
shrl
out
add
lcall
fdivr
cmpsb
jo
imul
or
sbbl
dec
sbb
decl
and
gs
xchg
xchg
cmp
ljmp
ja
sbb
in
ds
jg
outsl
call
adc
xchg
push
mov
into
je
daa
push
mov
xorb
mov
or
dec
sbb
lods
mov
fcomip
ds
xorl
add
ds
pop
xlat
loopne
dec
cmp
jl
mov
ljmp
and
sbb
cmpsl
sbb
and
or
hlt
dec
test
push
dec
xchg
adc
lds
sub
jb
sub
add
cmp
ljmp
xchg
jmp
scas
fwait
cmp
scas
mov
dec
js
pop
adcl
push
jbe
add
and
and
xchg
mov
mov
mov
mov
rcll
jmp
adc
jg
cmp
ret
std
aam
stos
das
mov
cli
in
das
int
pushl
push
test
std
inc
in
push
js
test
out
cmp
arpl
icebp
push
and
idiv
fisubs
add
inc
inc
aam
dec
sub
dec
add
fisubs
arpl
fistl
add
dec
inc
inc
cmc
xor
fisttpll
sbb
jmp
xchg
ss
loope
dec
push
movsb
add
cli
pushl
adc
xor
dec
bound
test
repnz
dec
push
aas
iret
sub
and
jecxz
enter
pusha
inc
mov
orb
adcb
inc
xchg
and
pushl
dec
ret
movsb
sbb
pusha
cmp
pushf
dec
in
pusha
adc
sbb
test
pop
jmp
jno
xor
mov
add
test
jle
jl
lock
sahf
leave
jno
pop
xor
cmp
add
adc
pop
inc
cmpsb
jge
xchg
or
fldenv
add
sti
jg
and
test
outsb
addb
mov
mov
jge
sbb
call
xchg
loopne
mov
rcrb
cmpsl
mov
dec
add
add
ds
aaa
movsb
sbb
in
ja
lret
inc
clc
imul
insl
daa
lds
jecxz
sbb
sub
sub
mov
xchg
inc
mov
adc
cmp
and
add
int3
xchg
xor
call
bnd
pop
add
and
mov
dec
mov
sti
movsb
outsb
push
xor
add
shll
add
ds
iret
call
sbb
mov
out
je
mov
aad
xchg
mov
dec
add
outsl
mov
bound
push
and
xor
cltd
imul
bound
stos
add
pop
add
outsb
ret
repnz
xlat
add
xchg
sub
adc
sbb
pop
pop
add
mov
insl
jnp
mov
pop
fcoms
and
jge
or
cmp
sbbl
lahf
mov
adc
push
pop
xor
addb
add
repnz
or
sahf
ret
xor
sahf
xchg
rolb
faddl
add
cmp
scas
rorl
lret
outsb
sub
mov
flds
jge
adc
mov
adc
and
out
enter
adcb
ret
and
ss
hlt
or
xchg
push
in
add
pop
negb
lcall
sbb
loopne
and
jl
mov
pushf
cmp
mov
loopne
incb
or
cmp
cmp
pusha
mov
ret
loop
loop
inc
cwtl
dec
lock
pop
cli
pushf
rclb
jle
pop
lret
add
add
xor
mov
sub
fbld
pop
cli
ss
add
pop
and
in
lahf
lock
mov
pushf
test
push
or
pushf
mov
pop
pushf
data16
sub
scas
push
mov
or
cmc
push
xchg
hlt
or
cmp
loop
mov
and
in
xor
mov
or
sub
popa
pop
popa
xor
cmp
scas
push
rcrl
mov
pop
xchg
scas
fsubrl
push
jp
mov
sbb
out
sbb
xor
and
jno
adc
data16
add
mov
incl
sbb
insb
add
fistps
inc
clc
call
lock
adc
push
lahf
repz
cmp
cmp
dec
sahf
lret
and
test
les
fadd
inc
mov
sbb
test
mov
ret
pusha
adc
rclb
xor
xor
fldl
mov
rorb
pusha
das
jns
xor
or
subb
cli
cmc
bound
mov
or
jbe
jl
jo
mov
ffree
xchg
xor
sbb
cmpb
xor
out
adc
mov
sarl
dec
loopne
insb
jno
icebp
faddl
shl
xchg
xchg
dec
and
mov
stos
js
cs
lods
pushf
pop
xor
pop
push
test
pop
daa
repz
jo
outsb
pop
push
lods
inc
sub
xor
adc
mov
es
add
sbb
in
jmp
shrb
popa
inc
loope
mov
mov
push
mov
movsl
and
lea
cmp
add
and
or
pop
shrb
jbe
jbe
pop
push
ret
js
adc
enter
fcom
shrl
stos
mov
mov
xchg
lahf
repnz
movsl
mov
imul
pop
enter
jnp
clc
dec
and
sub
mov
push
and
nop
int3
xor
and
adc
or
pop
push
push
and
jno
jo
adc
and
ss
mov
sub
xor
jmp
popf
fdivs
pusha
lds
xor
add
mov
call
lock
add
in
bound
dec
mov
pusha
cmp
pop
adc
test
mov
daa
jmp
push
mov
mov
or
push
mov
cmp
cmp
cmovbe
jnp
dec
testl
mov
rorb
inc
movsl
inc
mov
call
pusha
or
sub
daa
adc
xor
mov
insl
push
cmp
incl
ljmp
mov
sahf
int
and
push
das
popl
je
aaa
mov
mov
es
je
fwait
divl
sarb
cmp
jns
push
cmp
in
lcall
andb
cmpl
cltd
push
mov
les
fcmovne
or
dec
les
jg
fwait
mov
cmp
dec
mov
sbb
cmp
pushl
inc
cmp
pushf
popa
sub
call
push
movsl
divl
push
decl
push
mov
hlt
adc
cmp
add
clc
pushl
or
out
add
mov
and
add
ljmp
fcmovnb
sub
cli
or
ljmp
loope
gs
dec
gs
add
xchg
mov
mov
int
nop
mov
and
mov
std
inc
adc
mov
std
mov
add
jmp
flds
shll
icebp
push
rcr
adc
insb
cli
popl
pop
adc
imul
or
addr16
test
xor
xchg
jae
pop
lods
mov
mov
cmp
adc
cmp
xor
push
pop
daa
dec
mov
mov
popa
cmpsl
and
push
dec
jle
jb
rcr
push
pop
frstor
inc
mov
in
pop
test
mov
jl
lock
sti
sub
ljmp
clc
outsl
xor
adc
inc
mov
dec
das
dec
ja
les
pusha
out
stos
popa
std
pushf
xchg
and
push
stos
subb
cwtl
add
aaa
cld
incl
push
sbb
pop
pop
int
mov
add
mov
xor
push
pop
ror
xor
jo
pop
mov
gs
and
jae
mov
ret
shl
xchg
inc
inc
shll
or
mov
popa
add
mov
stc
pusha
in
movsl
orb
dec
and
dec
add
movsl
das
add
mov
leave
movsl
ror
je
test
adcb
sbb
ror
loopne
fwait
dec
mov
pop
imul
aaa
loop
jle
lcall
adc
sbb
adc
adcb
fwait
mov
int
mov
stc
iret
adcb
mov
out
ja
lea
push
imul
js
loopne
inc
jnp
cmp
leave
pop
ljmp
dec
fimull
and
or
dec
mov
je
cli
pop
shrl
adc
and
cmp
or
push
loop
mov
mov
adc
add
test
add
lds
dec
adc
jg
sub
pusha
andb
idivl
filds
xor
pop
sub
jg
push
loop
call
xchg
fsubrp
decl
bound
dec
pop
add
fstpt
adc
jne
in
shlb
fldenv
sbb
incl
movsb
mov
and
lret
addb
cwtl
arpl
ljmp
pop
mov
cmp
sub
jo
in
in
dec
and
mov
xchg
sar
jg
loope
lock
mov
push
jbe
loop
test
nop
dec
mov
jp
pusha
ljmp
outsb
mov
mov
and
imul
jmp
jb
in
xor
mov
or
pop
pusha
inc
repnz
add
fs
jmp
out
xchg
in
inc
movsl
jp
cmp
sub
cmp
jo
cmp
mov
insl
xchg
cli
inc
mov
sbb
test
pop
inc
cwtl
clc
insl
imul
or
pop
das
sar
pop
jbe
mov
sbb
adc
cld
cmpsb
or
cmp
cmp
incl
xchg
pop
aas
inc
or
jle
xchg
ljmp
sbb
fisttps
daa
or
add
pushl
jo
insb
mov
adc
mov
cli
out
insb
mov
fbld
sti
sbb
and
and
jmp
cs
shll
sbb
inc
call
rorl
in
add
cwtl
das
adc
in
stos
clc
incl
ss
dec
cmp
jmp
loope
mov
int3
xchg
stc
push
or
push
stos
call
sub
or
xchg
add
shll
pop
cmp
inc
mov
push
xchg
mov
mov
jmp
ljmp
sti
pop
jbe
nop
adc
mov
mov
jecxz
jns
ljmp
sbb
adc
xlat
inc
or
negl
jecxz
imul
jmp
xchg
or
xchg
push
mov
xor
scas
push
in
inc
cltd
xor
push
add
aas
cwtl
inc
cs
add
nop
pop
mov
enter
mov
add
xchg
cmp
movsb
sub
jbe
insl
lock
or
or
mov
push
cmpsw
xchg
inc
or
mov
mov
cmpsl
gs
dec
daa
xchg
out
lahf
cmp
pop
movsl
add
inc
das
sahf
lods
adc
xchg
mov
or
cmpb
cs
lret
adc
sbb
xchg
inc
cs
lcall
in
rcrb
sub
mov
sub
inc
mov
dec
rolb
cmp
xchg
pop
mov
test
push
xor
sub
jl
cmp
ljmp
cld
xlat
ljmp
xchg
cwtl
movsb
inc
push
jecxz
shlb
hlt
je
mov
and
pop
imul
or
sbb
jno
pop
or
ljmp
idivb
inc
sti
jmp
call
shl
cmp
pop
jbe
decl
test
movsb
mov
push
imul
call
outsl
cmpsl
jge
jae
cmpsb
adc
push
test
dec
lea
xchg
int
pop
cwtl
mov
cmp
outsl
shrl
dec
rorl
call
pop
sbb
in
into
fdivrl
aam
call
jbe
inc
rorl
or
incl
clc
mov
test
mov
push
and
mov
lock
add
movsl
add
or
hlt
xchg
call
pop
push
add
mov
jp
je
mov
stos
inc
fistl
lcall
call
jbe
sub
adc
or
inc
add
sub
nop
aam
ljmp
adc
rol
inc
jp
jo
stc
cmp
mov
mov
lret
mov
das
add
in
pop
std
incl
mov
jbe
xchg
pop
or
test
push
ljmp
das
sbb
out
cmp
rcr
adc
and
jecxz
call
sub
aaa
mov
ds
orb
jns
cld
add
push
push
hlt
jmp
aam
dec
mov
jae
mov
push
sbb
ljmp
and
or
mov
mov
xor
ljmp
add
shlb
jge
jne
push
in
shll
jg
lea
jne
and
xchg
inc
dec
push
shrb
jo
mov
and
movsb
cmp
incl
mov
cmp
xchg
imul
fdivrp
decl
pop
cltd
inc
imul
adc
dec
and
inc
xchg
push
xchg
mov
mov
ljmp
dec
cld
call
inc
clc
inc
mov
lock
js
cs
clc
add
sbb
sbbl
insb
inc
lcall
decl
sahf
std
cmp
inc
and
push
bound
add
out
xor
loopne
rcr
test
xor
lcall
xor
sbb
pop
and
jp,pt
inc
inc
cmpsb
pop
mov
push
jg
adc
int
ja
push
std
test
mov
fs
outsl
insl
mov
bound
jecxz
xchg
cmp
jmp
movsl
shrl
cs
cld
adc
inc
mov
stos
xchg
or
mov
cmp
pushl
mov
add
add
mov
pop
gs
insl
mov
data16
sub
test
call
repz
inc
enter
cld
xor
pop
push
xchg
jl
dec
insl
mul
jnp
aam
aad
xchg
icebp
call
sub
test
add
cmp
add
fbstp
call
pushf
adc
ljmp
or
xor
jg
sbb
ljmp
rcr
sub
mov
icebp
addb
sarl
sub
mov
es
std
push
and
and
push
out
mov
lods
ja
and
nop
cltd
dec
cmpsl
pushf
cmpsb
fidivl
ljmp
or
les
xor
cwtl
push
seto
div
mov
sbb
pusha
sub
or
inc
sub
add
cmp
incl
push
rol
movups
ds
cmp
or
push
or
decb
sarl
sub
xchg
pusha
fbld
cmp
mov
test
mov
push
adcl
and
rcrb
mov
enter
xorb
push
adc
and
or
lret
lcall
pop
mov
inc
sbb
mov
push
and
mov
mov
bound
pop
cwtl
les
xor
xor
add
in
pop
test
add
pop
out
or
nop
ss
sub
decl
dec
xchg
sub
clc
cmp
stos
xor
lret
jns
dec
js
mov
xchg
push
arpl
mov
pxor
push
cs
daa
cmpsl
icebp
popl
in
mov
jmp
add
pop
mov
fdivr
inc
pusha
scas
inc
shlb
mov
xchg
popa
push
xlat
lds
incl
fimull
ds
cmp
mov
sarb
xor
fucomp
jmp
rorb
int
mov
pushf
adc
mov
test
enter
insb
pushf
repz
das
mov
dec
ja
push
ret
or
scas
in
mov
fs
aam
repnz
and
mov
or
jb
mov
pop
repnz
jno
cmpsl
ret
data16
cmp
leave
in
cmp
sarb
shll
add
cmp
xchg
pop
sub
add
call
lds
dec
adc
fistpl
roll
xor
inc
push
mov
pop
mov
lds
ret
divl
mov
lock
lcall
mov
mov
into
addb
sub
mov
mov
fs
rcl
sbb
lcall
in
lcall
lcall
xchg
mov
stc
aam
mov
ffreep
or
outsb
jp
add
dec
ret
inc
out
add
add
jg
and
xchg
push
mov
jmp
push
push
add
add
incl
stos
jno
cmp
bound
adc
sbb
dec
call
out
sbb
pop
sti
jp
mov
jmp
sti
mov
mov
add
sbb
add
test
jle
and
outsb
push
mov
push
mov
jb
sbb
addb
jmp
xor
mov
call
retw
sub
test
cmp
unpcklps
cmp
popa
test
bound
sub
fdivl
je
push
inc
stos
scas
push
lock
out
arpl
insb
fnsave
add
push
or
sub
in
jo
insl
imul
mov
push
fadd
dec
inc
jl
iret
xor
sub
sar
cwtl
mov
pop
add
dec
adc
xchg
sub
inc
outsl
cmp
push
cld
mov
add
add
fidivrs
outsl
pusha
daa
popf
add
ret
pop
jecxz
and
push
push
mov
aam
test
js
push
mov
xor
mov
pop
mov
dec
and
ret
sbb
mov
pop
loope
add
inc
je
dec
fdivl
inc
mov
scas
cmpsl
call
clc
movsb
lret
rclb
and
int3
xchg
add
cs
dec
lock
nop
cli
lea
add
outsl
adc
jle
mov
add
and
cmpl
clc
jecxz
cmc
dec
sbb
mov
cld
mov
aad
adc
dec
xchg
fmulp
aas
scas
mov
push
dec
xchg
fstpl
std
jecxz
mov
fsubl
jmp
push
inc
sti
sbb
dec
mov
addl
and
pop
aad
add
sub
les
inc
mov
rorl
inc
xor
pop
out
push
add
loop
pusha
pop
sbb
sar
fwait
loop
adcl
jmp
mov
sub
repnz
rcll
mov
push
popf
popl
xor
les
mov
mov
dec
shlb
insl
xor
push
mov
mov
inc
addr16
subl
leave
adc
mov
jb
out
push
dec
bound
mov
rcll
xchg
enter
add
dec
and
mov
dec
dec
emms
subb
or
adc
popa
shlb
xchg
hlt
or
fwait
gs
and
and
pop
and
out
sub
adc
sbb
sub
and
dec
test
scas
cmpsb
xchg
mov
test
bound
sub
jmp
add
xchg
dec
mov
inc
mov
popf
or
jmp
in
fists
mov
cmp
out
add
js
test
mov
jb
mov
daa
jnp
adc
mov
loopne
xchg
dec
out
pop
xchg
mov
loopne
fildl
nop
subb
add
mov
mov
loop
rcr
adc
scas
sbb
adc
fadds
pop
hlt
mov
fsubrl
sahf
lock
loopne
insl
test
scas
test
paddsb
push
and
mov
test
adc
cld
cmpsl
mov
stos
pop
movsb
mov
cs
mov
iret
out
add
inc
add
jno
mov
push
inc
mov
sub
xor
push
or
inc
icebp
jg
adc
inc
mov
pop
pushf
sbb
out
repnz
aaa
mov
sbb
sti
scas
xor
and
cmp
orb
outsb
imul
aad
icebp
cltd
add
pushf
and
xchg
xchg
mov
arpl
dec
mov
arpl
mov
insb
push
push
xchg
sub
addr16
mov
orb
inc
xchg
inc
xlat
movb
incl
test
pop
sbb
mov
mov
push
mov
push
scas
jno
xchg
jecxz
and
adc
int3
lahf
insl
inc
xlat
or
fcomi
cmpsb
dec
mov
cmpsb
lcall
shrl
bound
xchg
xchg
add
or
fs
lods
mov
sbb
pop
pop
sbb
hlt
das
std
das
test
call
pop
and
xchg
ret
add
mov
faddl
popa
xchg
out
cmpsb
xchg
inc
sub
jg
sbbb
popf
ret
push
cltd
dec
sbb
out
in
mov
inc
push
pop
sub
aas
pop
or
add
stos
mov
jecxz
cmp
and
in
js
xor
xorl
das
push
outsb
inc
or
lock
fs
cmc
mov
and
xor
dec
in
push
je
cs
push
jmp
pushw
mov
test
add
imul
aad
or
bound
push
dec
lret
xchg
mov
loop
mov
mov
test
ds
mov
in
das
test
orb
add
mov
push
shll
std
inc
addb
loopne
xor
gs
loopne
mov
dec
test
pop
popf
rol
ljmp
les
push
mov
loop
lods
inc
and
loope
or
sbb
cmp
pop
push
mov
xchg
mov
leave
enter
into
lcall
and
push
and
xchg
xchg
cltd
sbbb
enter
shr
bound
test
jl
xor
loope
sub
loope
dec
int
push
or
sbb
dec
pop
mov
ret
inc
mov
adc
sub
out
roll
sbb
jno
mov
repnz
mov
filds
xchg
and
xor
popf
int
sbb
push
pop
inc
lcall
pop
ss
pop
jge
rcr
stos
pop
sbb
mov
ret
call
mov
call
stos
incb
dec
xchg
nop
and
decl
adc
add
mov
pop
fidivrs
incl
inc
mov
jecxz
out
dec
lahf
sub
xchg
aad
subb
and
mov
xor
mov
sub
int3
jg
push
jno
es
bound
or
sub
xchg
andw
cld
ljmp
jg
rep
loopne
pop
xchg
imul
call
mov
lock
pop
pop
outsl
mov
out
jmp
cmpsb
pop
incl
push
cmpsl
push
mov
adc
dec
inc
xchg
test
and
addb
cli
and
sbb
inc
push
lea
xchg
jp
mov
mov
ds
fadd
ret
xchg
and
call
aam
fistpl
pop
mov
jmp
jmp
cmp
cs
and
loop
sub
xchg
fistpll
mov
jo
add
push
mov
lea
mov
les
inc
cmpl
orb
aam
into
ret
andb
ljmp
and
jp
fdecstp
inc
test
imul
push
inc
icebp
pop
ds
lcall
mov
decl
je
mov
imul
inc
js
or
in
jecxz
incl
inc
int
fidivl
mov
push
into
sbb
cs
xor
and
ljmp
adcb
rcl
nop
shrb
mov
sub
jb
data16
and
fstpl
lcall
xchg
mov
dec
andl
sahf
roll
addr16
decl
and
push
push
push
dec
outsl
fisubrl
inc
push
mov
lods
loopne
xchg
adc
movl
incl
insb
cli
xchg
or
inc
out
push
add
rclb
cmp
decl
pushl
add
sbb
es
sub
inc
scas
jg
enter
pop
jns
std
pop
push
lds
cmpsb
jb
sbb
ljmp
push
cmp
movsb
test
add
adc
stos
and
cmpsb
test
mov
pushl
fdivrs
and
in
dec
pop
subl
call
xchg
adc
je
lret
test
or
jl
inc
out
add
xor
push
add
stc
dec
loop
or
loopne
xchg
div
or
mov
mov
lcall
notl
xchg
jno
shlb
pop
cmpl
lock
daa
loopne
es
sub
sbb
push
push
mov
sti
push
adc
ss
or
shl
inc
cmc
je
and
xor
cmp
test
and
jbe
xchg
mov
std
cld
cmp
jmp
inc
clc
rolb
test
std
and
lock
adc
icebp
sbb
xlat
adc
add
jmp
aas
or
icebp
sbb
inc
lock
sbb
sbb
or
sbb
into
mov
pushl
in
in
jae
cmpl
mov
xchg
and
jb
fcmovb
subl
test
fsubp
aas
mov
sub
ljmp
sarl
dec
pop
scas
data16
cld
or
es
fbld
shlb
push
adc
jb
lcall
cmp
test
push
lcall
cmpsb
repnz
popf
adc
adc
push
sbb
fcomip
lcall
lods
or
call
lret
xacquire
inc
sub
hlt
aas
mov
ja
jl
icebp
dec
push
inc
out
inc
and
aas
xor
ljmp
or
or
in
xchg
icebp
or
cwtl
sbb
sub
call
xor
test
ja
jnp
adc
incl
sbb
jg
aam
cmp
add
ret
adc
xlat
insl
ss
jbe
pushl
mov
test
push
inc
jp
in
dec
pop
popa
inc
pop
andb
clc
ret
dec
dec
call
cli
jp
int
in
push
mov
cmp
mov
test
adc
fldl
lretw
and
shl
dec
add
std
pop
fistpl
pushf
inc
cmp
in
mov
inc
cwtl
and
mov
inc
out
rclb
add
cmpsl
cld
push
add
xchg
data16
or
jmp
xchg
dec
inc
loopne
aam
les
and
dec
into
sbbb
xchg
mov
idivl
lcall
or
loope
inc
in
nop
fidivs
imul
ss
addr16
filds
sarl
add
dec
adc
or
mov
jmp
lods
mov
adc
xchg
push
adc
push
pusha
cmp
int
outsb
sbbb
jns
xchg
inc
jecxz
out
insb
iret
push
fdivrs
mov
lock
jo
or
cwtl
mov
xor
icebp
and
and
mov
fisubl
and
cmc
mov
popa
insl
cmp
or
decl
lahf
addr16
xchg
test
out
and
stc
xor
adc
pop
cltd
and
leave
mov
hlt
test
lock
mov
or
sub
mov
mov
jge
incl
imul
repz
mov
push
mov
add
stos
lea
test
mov
add
or
jmp
pop
push
enter
sbb
fistps
and
adc
jge
sub
sub
dec
or
xchg
fimuls
sub
pop
je
lock
scas
mov
jecxz
call
and
dec
lds
xorl
int3
mov
cmpsl
js
popa
push
out
leave
pushl
in
imul
and
nop
loop
dec
movsb
xor
mov
mov
inc
dec
xchg
cs
mov
ja
mov
les
push
sub
mov
scas
pushf
cmp
xor
xchg
addr16
mov
sbb
xchg
popa
push
inc
rcl
loope
xorl
inc
filds
jge
xor
mov
add
jne
and
push
nop
int3
xchg
jp
sbb
sub
pop
add
mov
pop
add
sar
call
in
fbstp
add
les
push
cmpb
inc
lods
push
add
mov
mov
mov
ficoms
add
mov
push
dec
mov
pusha
mov
inc
pushl
outsb
int
roll
xor
sar
adc
ljmp
or
dec
inc
jecxz
call
dec
imul
pop
std
push
sbb
adc
inc
inc
pop
gs
xor
rorl
mov
movsl
xchg
cmpsl
stc
nop
ret
pop
in
dec
ja
xor
lcall
or
out
test
inc
les
sar
ljmp
decb
movsb
mov
push
mov
and
loop
mov
inc
lahf
mov
lcall
decl
jnp
inc
add
adcb
aam
loope
pop
inc
or
mov
test
and
insb
ds
test
lds
insl
out
xor
enter
push
adc
push
fisubrs
xor
jno
cltd
jecxz
fisubs
adc
add
or
pop
pop
mov
add
stos
jno
fcomps
xor
iret
int3
leave
inc
adc
pop
js
jnp
mov
jnp
mov
jmp
nop
das
push
cmp
inc
mov
dec
and
sub
jmp
cld
test
mov
mov
movsb
out
outsl
add
test
or
push
loopne
jmp
lds
outsb
jmp
clc
mov
mov
mov
dec
into
loop
stc
mov
scas
test
mov
add
push
lods
mov
cwtl
mov
add
push
dec
in
mov
push
pop
jl
push
icebp
adc
pop
inc
movl
mov
add
mov
cmc
mov
fdivl
jmp
sbb
hlt
pop
mov
jp
fcoml
or
iret
xor
clc
call
ds
add
and
xorb
or
outsl
inc
sub
sbb
repnz
xor
dec
sub
jo
lcall
push
xchg
test
xor
jno
movsl
adc
inc
incl
orl
xchg
dec
dec
aad
mov
mov
outsl
pop
sbb
push
mov
xchg
repz
popa
in
sar
std
cmp
pop
and
shl
fcomp
cmpsb
cmpsb
jmp
mov
and
mov
pop
stos
ficompl
mov
jmp
xor
popf
sbb
shll
lret
or
mov
mov
pop
push
test
jo
add
decl
pop
mov
movsb
ret
in
sbb
adc
jge
push
and
mov
jp
lcall
lea
icebp
xchg
out
mov
enter
in
fs
pop
inc
daa
add
lcall
xchg
clc
push
inc
mov
adc
out
jp
adc
nop
filds
js
jmp
adc
ljmp
iret
dec
out
ss
push
mov
adc
mov
push
sar
push
dec
out
aaa
jle,pn
push
dec
adc
sub
lret
xor
mov
xor
movsl
leave
cmp
loopne
popf
imul
push
mov
jns
xlat
in
shll
mov
enter
insl
out
pop
dec
sbb
pop
icebp
mov
std
ljmp
sbbb
xor
hlt
outsl
xorl
jg
icebp
call
cwtl
lods
arpl
loopne
add
push
adc
shlb
xor
js
leave
mov
out
add
add
push
flds
jae
cmp
rolb
loopne
and
or
popa
cmp
data16
je
or
or
and
outsb
imul
add
loope
mov
sbb
enter
sub
inc
mov
mov
jae
dec
mov
mov
or
push
mov
loopne
sbbl
cmp
pop
mov
imul
jo
adc
aam
add
and
mov
add
outsl
sub
das
cmp
loopne
and
rcl
dec
dec
cmpb
lock
jg
and
push
inc
pop
xchg
stos
leave
push
add
add
sub
addl
inc
add
mov
ds
pop
aad
out
incl
jp
scas
sub
inc
lcall
test
lods
fsts
push
andb
jae
add
jno
jecxz
cmpsb
fcomip
aaa
adc
orb
es
je
pop
add
fildl
nop
push
add
daa
pop
mov
sub
sbb
outsl
xchg
icebp
add
xchg
inc
add
or
in
ljmp
and
scas
add
rorb
mov
add
ret
ficomps
sbb
cld
ds
adc
fildl
fmul
cltd
pop
sub
mov
and
nop
es
out
das
cmp
add
mov
push
dec
inc
ror
lcall
add
pushl
mov
sub
inc
add
push
dec
cmp
in
push
movsb
mov
inc
sub
push
xor
adc
stos
and
pushf
inc
sbb
push
lcall
adc
out
add
leave
push
push
lcall
jle
loopne
pop
rolb
movsl
jae
insl
add
mov
xor
es
or
lock
ror
loope
jmp
push
fbstp
sti
jne
add
dec
cmpsb
add
adc
loope
add
sub
jb
xchg
xorb
outsb
ret
push
push
movsb
lea
sahf
add
adc
mov
add
aas
scas
push
ja
outsb
stos
push
stos
scas
jg
mov
xchg
add
mov
sbb
in
sub
jl
repz
jp
cli
adc
mov
push
or
daa
lods
stos
lods
mov
aad
dec
sub
in
imul
fstpt
addl
jb
cmp
out
lock
jmp
push
sti
add
inc
adc
into
lds
in
dec
aas
neg
loop
stos
adc
pushf
popa
je
ds
xchg
out
rcll
xchg
add
and
mov
sub
or
out
cwtl
jg
daa
inc
fdiv
sub
shl
in
andl
out
pop
mov
adc
and
ret
sub
les
cmp
test
sti
ja
jecxz
mov
aam
push
and
dec
pop
cld
or
mov
rcrl
add
add
or
subb
jg
ret
es
mov
xor
nop
sbb
inc
sbb
add
test
dec
or
leave
jp
mov
mov
adc
test
outsl
add
or
dec
jl
and
sbb
test
ds
sbb
jo
lock
mov
lcall
xchg
lcall
sbbl
dec
sbb
pop
lods
xor
adc
fistpl
es
jne
decl
ds
js
in
fmulp
lret
and
leave
mov
pop
mov
or
push
jl
idivb
cmp
xchg
fdivl
popa
stc
add
fsubs
push
jns
ss
shl
cmp
push
inc
push
loop
and
pop
push
xchg
cwtl
insb
dec
cvtpi2ps
mov
sbb
cld
pushl
test
dec
mov
push
test
and
inc
mov
jb
es
push
nop
cmp
mov
jo
popl
leave
fsubr
and
pop
pop
outsl
clc
incl
lret
ret
inc
sbb
cltd
outsb
or
pop
adc
pop
xor
data16
lret
popl
pop
or
sbb
gs
sbb
mov
xchg
lret
adc
or
rcll
outsl
add
js
dec
inc
xor
push
mov
decl
insb
movsl
xchg
inc
inc
inc
lret
or
push
std
sbb
mov
mov
push
sub
or
pop
mov
mov
fstp
pusha
imul
cmp
pop
adc
inc
stc
stos
inc
lods
les
fiadds
sbb
dec
jno
test
lods
fadds
push
and
add
sbb
in
out
clc
pushl
sahf
add
add
pop
xchg
int3
and
cmp
xor
push
sbb
sub
mov
popa
std
decl
ret
ljmp
adc
pop
mov
mov
fs
adc
sub
std
cmc
or
pushl
aaa
jmp
les
nop
cmp
mov
xor
enter
add
xor
in
orl
incl
push
lock
jecxz
jg
add
roll
cmp
pop
mov
fcoms
les
xchg
inc
push
or
xchg
push
std
out
cli
stos
xor
add
insl
mov
pop
add
adc
or
pop
pop
adc
inc
sub
and
mov
inc
inc
add
jo
jge
pushl
push
adc
test
sbb
xorl
cwtl
mov
inc
cmp
sbb
mov
and
cmp
lcall
pop
sub
incb
sbb
enter
clc
decl
loope
enter
repnz
loopne
fs
push
insl
outsb
push
out
stos
jbe
and
add
rol
dec
add
loopne
mov
jl
xorl
pushf
adc
subl
inc
sub
dec
sub
dec
sti
aad
pop
test
jle
adc
dec
push
or
ja
outsb
adc
or
sbb
dec
adc
mov
mov
pop
dec
test
cwtl
mov
cli
push
inc
lcall
dec
push
pop
rol
roll
push
sbb
cli
adc
xchg
mov
or
jle
push
sti
in
or
push
adc
dec
add
inc
xchg
int3
and
push
jecxz
lods
or
cmpl
sub
iret
mov
fbstp
insb
loope
out
or
xchg
push
call
fstpt
push
dec
adc
std
or
clc
loope
mov
inc
aam
leave
div
sar
ljmp
test
mov
cmp
movsl
movsb
or
and
scas
dec
push
xchg
mov
call
mov
aaa
out
push
pop
pop
je
push
push
and
leave
test
and
int
hlt
xor
push
std
lock
dec
dec
xchg
pop
mov
pop
jl
aas
push
lock
pushl
mov
jg
dec
add
jb
mov
bound
jo
jno
fbld
or
cmp
pop
mov
lcall
mov
push
and
ret
loop
pop
or
push
cmp
out
decl
mov
das
jmp
loop
push
cwtl
enter
jg
loope
mov
sbb
addr16
sbb
jg
or
pop
fwait
inc
jg,pn
jmp
sbb
movsb
or
and
inc
cld
pop
cmp
sbb
movsb
lret
mov
aaa
mov
sub
decl
mov
mov
jbe
or
adc
icebp
push
popa
testl
out
push
xchg
xor
rolb
adcb
pop
les
test
and
shlb
mov
decl
lock
dec
jo
pop
outsb
stos
mov
mov
mov
test
incl
lret
inc
inc
cmpsl
push
stc
aam
push
mov
cltd
scas
das
mov
pushf
or
jmp
call
pop
fimuls
xchg
adc
popa
in
es
bound
in
iret
cmp
jg
fcomip
mov
fs
mov
orb
insb
mov
jmp
pop
xor
inc
push
jne
cwtl
roll
xchg
js
and
jae
insl
pop
pop
jno
rclb
sub
call
jge
xchg
mov
pop
mov
pushf
lret
dec
jg
adcl
icebp
cld
cmp
mov
xchg
std
pushl
sbb
push
sub
mov
or
aad
pop
movsl
pushl
rorb
arpl
dec
xor
sub
dec
or
pop
and
mov
incl
add
ds
mov
ja
hlt
imulb
mov
mov
ret
mov
sub
xor
fstpt
xchg
jmp
mov
int3
js
push
insb
adc
ljmp
cmp
xchg
inc
or
orb
pushl
xchg
scas
push
fisttps
sub
mov
sbb
or
fcmovnu
add
or
mov
mov
imul
insl
cmp
out
pop
lcall
xchg
das
insb
insb
mov
sti
incl
in
outsl
push
fnstcw
dec
pop
mov
jae
cmp
fildll
xor
in
lcall
fbstp
mov
sar
lcall
data16
mov
stos
dec
mov
pop
clc
add
xor
adcb
jl
call
mov
jecxz
popf
add
lahf
dec
adc
test
cmp
into
stos
les
jle
adc
incl
sahf
jg
xor
sub
movl
icebp
mov
clc
jno
xor
dec
cli
shll
lcall
or
repz
jmp
adc
aam
jne
repnz
inc
xor
incl
push
jl
pop
jno
jg
in
icebp
fwait
loop
push
jns
xor
inc
sahf
inc
xor
leave
mov
out
pushl
clc
pop
pop
pushf
pushf
xchg
jp
dec
inc
inc
and
dec
mov
loope
xor
sbb
xor
adc
push
cmp
pop
lods
loope
hlt
mov
adc
cld
jmp
not
xor
push
mov
adc
cld
add
sbb
cli
ljmp
stos
xor
add
push
fadds
imul
hlt
lods
xor
mov
into
jb
sub
dec
loop
pushf
sar
decl
testb
sub
repz
cld
les
lcall
enter
mov
ret
xor
pop
fcomps
xchg
ret
dec
imul
sbb
mov
mov
pushf
mov
add
scas
pop
mov
push
pop
ljmp
pop
xor
push
icebp
push
rcrb
scas
push
test
fidivrs
push
in
pushl
stc
cli
adc
cmp
scas
jl
mov
stos
mov
jnp
cmpsb
lcall
stos
jne
daa
popl
xchg
stos
add
scas
adc
xor
push
or
push
and
ljmp
test
les
xchg
adc
push
mov
mov
sub
ljmp
jle
adc
dec
fwait
xchg
into
lcall
mov
inc
out
inc
test
cmp
nop
push
inc
int3
stos
inc
pop
mov
push
fistpll
sub
mov
jno
or
test
incl
xlat
lods
shl
mov
sbb
add
iret
jmp
insl
into
mov
cwtl
sbb
mov
fucomip
andb
idiv
sub
mov
std
xor
dec
movsl
fucomp
pushf
xchg
fisubl
adcb
and
xor
fdivs
xor
jge
inc
cwtl
scas
sbb
popf
arpl
and
pushl
lock
mov
mov
mov
popa
adc
push
in
fs
fs
sbb
dec
inc
add
mov
mov
jne
mov
cmp
pop
hlt
inc
int3
decl
shlb
lods
pop
out
mov
jb
popa
outsb
ds
jo
push
hlt
jnp,pn
push
rorl
jbe
pushl
call
xor
pop
jns
cwtl
mov
sub
loope
lods
sahf
xchg
or
jmp
test
or
aas
rclb
fcoms
jp
sbb
or
cmpsb
jmp
add
push
xchg
loopne
lods
in
nop
dec
or
sbb
ret
ljmp
adc
aad
fists
or
adc
mov
fdivrs
inc
stc
push
or
add
mov
mov
or
xchg
push
dec
sub
adc
add
mov
push
adc
aam
call
adc
mov
push
aaa
pushf
pop
mov
sbb
sub
sbb
les
mov
jmp
mov
push
lret
push
mov
retw
mov
loopne
cld
insl
jne
lcall
sub
lcall
out
in
add
in
ret
das
ljmp
jle
lcall
testb
sbb
dec
sub
inc
cs
loope
cld
jmp
mov
mov
xor
sub
mov
pushf
add
adc
xchg
aaa
mov
mov
jg
imul
mov
fildl
imul
nop
cmpb
jg
addb
cld
xor
adc
xorb
sub
add
dec
xchg
shll
ja
decl
push
mov
jecxz
dec
and
xor
movsl
adcb
ljmp
inc
jecxz
jp
mov
pop
enter
dec
sub
adc
mov
or
xor
test
xchg
sub
pop
into
enter
pushl
dec
fisttpl
jnp
arpl
addr16
xchg
add
push
shlb
adc
mov
clc
pushl
mov
add
loope
or
sbb
sub
daa
jb
lret
incl
addr16
add
test
jns
scas
repnz
jl
pop
pop
pop
inc
andl
jmp
inc
iret
inc
gs
mov
pop
sbb
adc
add
inc
pop
mov
push
push
adc
jbe
imul
jg
test
test
idivb
cmp
mov
shrl
jae
push
jg
sbb
or
jb
push
and
xlat
xor
lds
adc
addr16
inc
jne
decl
leave
cs
int3
aas
sub
pop
fwait
pop
aam
mov
or
lcall
add
scas
inc
xchg
inc
sub
push
cltd
push
jp
cs
mov
iret
outsl
or
pushl
or
inc
and
cmp
mov
push
mov
decl
test
inc
push
sub
or
sub
push
jmp
inc
nop
mov
lcall
lret
add
mov
and
dec
ds
movl
push
decl
mov
inc
aas
out
mov
outsb
pop
pusha
mov
push
pop
mov
hlt
cmp
jmp
icebp
cmp
mov
loope
and
push
lods
pusha
ss
cmp
xchg
cmp
pop
lock
adc
popf
call
mov
stos
xchg
dec
mov
loope
adc
outsl
or
jo
inc
push
addb
adcl
repz
rorb
cmp
ds
push
mov
clc
push
or
add
or
cwtl
xchg
adc
xchg
sbb
jle
inc
mov
pop
cmp
and
hlt
inc
push
cmp
pusha
pushf
inc
lcall
jg
add
repz
jb
add
xchg
add
or
lret
scas
incl
and
incl
sub
mov
sub
es
mov
sbb
ss
pop
aam
add
sbb
sbb
insl
ljmp
fcom
jecxz
push
insl
mov
add
inc
scas
xchg
ficompl
in
cmp
mov
decl
mov
ficoms
into
aad
inc
sub
add
push
fsin
orb
fcoms
ret
inc
cmpsb
icebp
add
sbb
ss
push
mov
outsb
lcall
popf
push
orb
es
xorb
shrb
mov
data16
add
xchg
xchg
inc
xchg
dec
xor
fwait
loopne
les
jns
mov
test
push
and
adc
fwait
loope
std
in
ret
jo
jb
add
fdivrs
sti
cmp
mov
push
out
aam
xchg
and
movsl
lcall
xor
dec
cmp
std
mov
ss
push
mov
out
in
push
sub
stos
jg
loop
adc
insl
sbb
and
cltd
xor
into
cld
xchg
cmp
add
ljmp
inc
fimull
mov
sbb
push
sbb
or
adc
add
jns
cmp
shll
sbb
or
mov
mov
xor
repz
les
mov
jb
lock
and
test
iret
fnstcw
and
incl
fiadds
jp
dec
jl
mov
add
popf
push
data16
jns
or
or
jmp
add
mov
push
mov
int
xor
adc
cmp
leave
iret
cmp
xor
inc
in
daa
cwtl
lcall
lea
push
mov
pop
lea
in
fwait
cltd
je
inc
sbb
les
add
fadd
icebp
mov
pusha
and
popa
loopne
and
addl
inc
es
arpl
and
cmp
push
aam
xchg
mov
test
dec
and
fs
push
sub
dec
jae
or
ret
adc
sbb
inc
and
adc
xor
add
lcall
add
repnz
cmp
clc
add
cmp
inc
sar
outsl
and
xchg
cmp
int3
add
adc
add
push
xor
imul
call
and
addb
pop
jp
mov
sbb
or
dec
fmull
cmp
xchg
fsts
push
jno
sbb
insb
sbb
mov
mov
pop
incl
shll
cmpl
jo
iret
xchg
loope
push
sub
push
fcmove
loop
push
idiv
rorb
lods
ja
lcall
pop
inc
pusha
dec
jg
mov
jo
cmp
leave
je
inc
add
ds
push
mov
add
pop
mov
jg
add
divb
jae
pushf
fnstcw
mov
cmpsl
mov
daa
sbb
pushl
mov
call
test
pushl
lock
sbb
jmp
fsubrl
sbb
push
daa
add
sbb
mov
add
hlt
das
shrb
or
es
pop
push
int
call
outsb
inc
stos
test
into
mov
add
inc
clc
jg
js
and
push
cltd
and
sub
push
jl
sub
bound
lods
lods
repz
es
jns
mov
pop
andb
ljmp
mov
dec
dec
sbb
jl
fbstp
lock
mov
mov
or
lahf
cmp
jmp
rep
call
adc
test
and
push
inc
pop
mov
xchg
rcr
push
adc
je
jno
xor
call
dec
ret
lea
dec
pop
incl
es
push
mov
outsl
inc
dec
and
data16
sbb
sub
jle
cmc
mov
xchg
stos
dec
cmc
pop
scas
pop
sahf
loopne
into
push
sbb
jmp
pop
xchg
mov
out
stos
dec
movsl
push
sub
push
xchg
add
insl
ljmp
lcall
je
push
or
push
adc
inc
push
pop
pop
mov
xchg
lods
cwtl
pop
xor
insb
and
pop
inc
popa
sbb
inc
les
decl
mov
push
push
aam
popa
lret
xchg
dec
scas
xor
sar
daa
mov
and
stos
push
sar
jmp
inc
nop
add
inc
add
sub
inc
sub
orb
sbb
pop
aad
dec
mov
in
lds
xchg
xor
aad
jne
mov
inc
or
cmp
mov
xor
adc
lret
sub
ret
xor
in
loope
shrl
and
cmpsl
xor
movsl
cmp
xchg
jl
add
jb
xchg
xchg
add
lahf
orb
adc
insb
fs
mov
popa
scas
xor
cmp
xchg
dec
loope
sub
inc
push
movsl
fwait
es
fldt
inc
adc
imul
ss
mov
call
mov
dec
or
sbb
jo
mov
pop
pop
mov
add
xor
ds
jno
ja
push
ret
jle
mov
stos
dec
xor
dec
dec
mov
call
or
sar
inc
ret
lcall
cltd
mov
push
addr16
arpl
or
pop
sub
incl
test
call
cmp
in
lock
xor
outsb
cs
jg
xchg
arpl
sub
adc
adc
fcmovu
mov
mov
lock
lret
lods
pop
and
or
incl
in
push
stos
js
loop
or
sbb
push
and
nop
ret
cmp
ds
test
dec
fs
into
and
subb
cld
lret
pop
xor
pop
test
scas
pop
sbb
scas
sbb
add
sarb
lret
and
push
pop
push
or
ds
push
xchg
cmp
das
in
or
cmp
push
mov
loop
imul
dec
cmp
cmp
out
aaa
cwtl
mov
scas
cli
std
loopne
dec
movsl
gs
test
cmp
cmpb
inc
rorl
push
rclb
cmp
xchg
dec
dec
int3
add
rorl
or
cld
shll
inc
lahf
std
cmp
or
jmp
xchg
push
icebp
push
sarb
js
pop
or
les
add
in
mov
loop
in
test
add
in
mov
jl
cmc
shrb
xchg
loopne
test
ja
mov
shrb
outsl
insl
mov
fdivr
jg
inc
cmp
mov
or
in
shlb
sbbb
mov
shl
int
pop
das
loopne
inc
test
jmp
dec
scas
mov
xchg
and
jmp
pushf
pop
cmp
pop
cmp
xchg
ss
subb
fcmovbe
pushf
ljmp
or
movsb
enter
add
mov
jo
cmp
jmp
ljmp
jecxz
and
inc
pop
loop
push
and
pop
or
pop
stc
outsb
repnz
mov
dec
jg
call
out
inc
iret
fwait
inc
cmp
inc
mov
mov
rdtsc
lea
cmp
sti
add
jp
arpl
ss
into
or
mov
or
insb
or
rclb
aas
push
repnz
rcr
lcall
mov
sbb
or
fxch
mov
mov
mov
mov
adc
scas
aam
insb
aad
leave
sbb
ss
push
inc
cs
aas
daa
mov
cwtl
gs
fs
fidivs
sbb
pop
inc
pop
and
xor
gs
or
pop
jne
push
sub
das
movsb
push
scas
outsb
stc
sbb
sub
imul
pop
pusha
dec
jne
push
xor
jmp
or
andl
das
enter
adc
push
pop
aas
inc
xchg
push
shll
adc
adc
cmpl
jmp
add
pop
dec
or
call
std
lldt
add
gs
ljmp
dec
cmp
data16
xor
mov
jecxz
ret
jmp
sbb
enter
in
call
lret
push
or
push
adc
and
pushw
lret
std
sub
dec
jg
and
movsb
aaa
add
fisubrs
pop
or
daa
dec
add
pushl
mov
icebp
dec
mov
push
fs
mov
and
cmp
mov
mov
inc
pop
pop
rclb
xor
and
pushl
pushf
adc
xchg
std
push
inc
loopne
test
repz
cmp
mov
ljmp
push
ds
pusha
pop
xchg
jbe
movsb
in
push
orl
adc
call
sbb
mov
cld
cld
cmp
scas
or
and
jmp
sbb
loope
insl
add
mov
or
xor
xor
xor
inc
enter
mov
negl
in
test
push
push
sub
pop
test
inc
and
mov
dec
call
and
out
push
dec
addr16
pushf
cmp
and
add
das
cmp
inc
mov
icebp
incl
pop
scas
xlat
ret
add
mov
call
pusha
xchg
popf
inc
in
rol
andb
and
jns
in
decl
fildl
std
xor
ret
push
xchg
adc
inc
add
call
inc
adc
stos
pop
andb
jp
jge
inc
je
enter
add
insb
xchg
rclb
push
dec
rolb
sbb
loope
mov
loopne
loop
xor
add
add
xor
sbb
pushl
inc
adc
lods
loop
and
dec
ret
das
or
xor
cwtl
repnz
sub
call
pushl
mov
inc
adc
test
lahf
dec
mov
sub
mov
out
mov
in
and
sbb
push
mov
adcb
mov
iret
cs
clc
mov
decl
pusha
sub
lea
jg
sbb
dec
and
mov
ror
jb
iret
inc
jg
push
lock
fisubs
mov
cld
call
xchg
es
out
dec
lret
or
inc
xchg
adc
call
and
xor
cmp
add
push
ljmp
jge
sbb
shrb
mov
dec
je
mov
mov
inc
push
sub
mov
ret
shr
xor
push
push
imul
cmp
sbb
nop
push
mov
push
dec
and
mulps
sbb
imul
push
and
xchg
call
xlat
cmp
mov
insl
das
xlat
test
je
mov
push
sbb
dec
sbb
mov
xchg
aaa
std
incl
and
cmc
loope
mov
inc
pushf
push
ss
xchg
testl
push
inc
test
sbb
xchg
mov
xchg
push
mov
ljmp
inc
addb
cmp
lret
mov
inc
cmpsb
lock
aas
push
sbb
xlat
pushl
push
pushl
in
out
icebp
fs
dec
push
mov
add
iret
or
cli
aam
icebp
cmp
ror
mov
aas
inc
enter
in
or
or
lea
out
je
mov
ret
test
add
mov
xlat
adcb
cmp
cmp
push
xor
imul
dec
adc
add
pushl
xor
sbb
adcl
pop
mov
movsb
jg
mov
call
insb
lock
jne
ds
sub
cmpsb
scas
xchg
mov
test
adc
data16
or
add
incl
es
adc
push
data16
call
cmp
sub
sub
pop
mov
fs
jg
push
mov
cmpps
rorb
add
jmp
in
sbb
jg
add
push
lret
adc
dec
xchg
repnz
jg
ljmp
mov
xchg
inc
pop
add
add
mov
and
outsl
xor
ret
sub
ljmp
movsb
jae
mov
in
jo
pop
ljmp
xchg
mov
mov
sub
incl
adc
pop
xchg
dec
out
pop
and
xchg
push
jb
rep
testl
fnsave
dec
icebp
dec
test
negl
pop
adc
mov
jecxz
popa
outsl
inc
test
add
adc
fiadds
pushl
xchg
cmp
cmp
dec
mov
sarl
mov
push
into
leave
dec
mov
incl
sbb
add
push
test
lods
jb
pop
sbb
dec
sbb
push
add
pushl
xor
loopne
sarb
test
fdivl
ja
subb
add
mov
incl
inc
sub
je
add
push
adc
popa
scas
out
loope
mov
sub
sub
test
aas
hlt
shrl
dec
les
or
sbb
inc
jp
cwtl
sub
dec
sbb
xor
cld
mov
mov
adc
mov
adc
sahf
ljmp
sbb
mov
popf
push
mov
cmp
aas
fisubrs
or
stc
or
mov
call
sarl
lahf
icebp
adc
sub
add
jl
inc
das
clc
call
mov
frstor
stos
mov
enter
sarl
pop
loope
cmp
lcall
and
push
test
cltd
pop
ret
dec
add
loop
stos
mov
or
cmp
jg
call
sub
xchg
add
addr16
pop
push
subl
clc
lock
call
push
xor
and
int
sub
add
pusha
int
sti
xor
adc
stos
hlt
xor
or
cmpsl
or
mov
xor
pop
hlt
sbb
pop
js
ljmp
stos
push
test
filds
adc
pop
jle
es
nop
out
cld
mov
adc
ljmp
pop
mov
insb
adc
inc
cmp
lcall
pushl
xchg
pushf
loop
lods
push
add
fdivrl
add
clc
ret
ds
jmp
mov
cmp
test
fwait
into
push
cmp
mov
jg
pop
decl
mov
ret
adc
dec
aad
jb
ja
cwtl
clc
out
clc
sub
cmp
cld
shrl
jecxz
mov
pushf
pop
out
inc
ljmp
es
lcall
jge
jae
mov
inc
jno
clc
pop
fstps
mov
cmpsl
pmulhw
enter
or
jmp
jb
inc
or
add
nop
dec
or
pop
inc
lods
lds
push
stos
or
in
lret
mov
mov
xchg
in
push
in
pop
pusha
jo
mov
popa
sahf
ljmp
cmp
and
lods
rorl
mov
call
scas
ret
dec
call
mov
add
pop
mov
imulb
and
cmp
jnp
push
push
bound
sbb
push
repz
mov
das
test
inc
std
arpl
and
dec
cwtl
mov
popf
xor
rorl
ror
notb
pop
adc
push
cmp
xchg
icebp
jae
add
and
cmpb
pushf
nop
lret
into
test
push
or
xor
xor
pop
xchg
cwtl
inc
sahf
arpl
popf
jbe
mov
cwtl
cwtl
mov
arpl
mov
cwtl
cwtl
cmp
lcall
es
and
aas
adc
and
push
jp
sar
incl
nop
and
mov
pusha
call
or
stos
mov
mov
xchg
pusha
add
sub
add
js
jns
fcomip
aas
xor
sbb
inc
add
movd
or
push
pop
pop
add
pushf
cmp
in
xor
ja
ret
es
mov
xchg
mov
je
jp
add
lock
pop
incb
movsl
jbe
add
jg
add
popa
call
mov
or
add
or
call
lret
cwtl
pop
add
mov
add
xchg
ret
adc
inc
and
int
les
icebp
jmp
enter
add
inc
adc
mov
push
push
mov
aas
aad
clc
pop
adc
arpl
pop
inc
scas
call
cmp
imul
mov
lahf
adc
outsl
fs
lcall
ljmp
and
ljmp
jnp
testl
movsl
push
mov
cmp
movsb
call
mov
rcl
and
nop
adc
or
mov
add
adc
mov
outsl
jmp
iret
cmpsb
clc
push
out
lahf
jo
push
aas
xor
gs
add
jne
xlat
iret
mov
aas
push
mov
out
addr16
stc
add
fucomi
fistpll
push
add
jle
jle
xor
sahf
mov
mov
cmp
aas
sarb
scas
fidivrl
add
or
xor
orl
xor
aas
lahf
loopne
mov
js
inc
jbe
cmp
mov
inc
push
iret
stc
or
mov
data16
idivb
sub
fildll
adc
iret
pop
jle
cld
out
ljmp
in
jne
mov
lahf
sti
xor
cld
sar
mov
xchg
out
aas
cmc
mov
test
sub
sub
adc
sti
aas
and
jg
insb
out
leave
jb
xchg
arpl
and
sub
add
push
cmpl
mov
adc
xor
mov
adc
push
pop
add
and
jno
or
ljmp
inc
mulb
out
mov
pop
or
loopne
loop
incl
gs
addb
lret
sbb
mov
push
jmp
push
out
mov
hlt
sti
pusha
mov
fisttpll
sub
xchg
adc
add
and
add
nop
push
popf
push
jl
mov
fists
xor
clc
adc
loop
je
sarb
inc
pushf
nop
pop
icebp
push
fdivs
sbb
mov
jae
sbb
je
nop
lock
lcall
xor
hlt
jp
adc
jb
cli
cmp
shlb
sbb
lds
or
inc
cwtl
call
lcall
jno
js
mov
pop
test
loopne
mov
arpl
out
xor
jg
incl
enter
int3
outsb
pushf
jge
insb
mov
push
dec
scas
and
or
shrl
mov
add
js
dec
xchg
es
cli
stos
dec
mov
mov
xchg
enter
or
xchg
mov
ljmp
clc
incl
fildl
mov
cmp
cli
sub
mov
mov
cld
out
lcall
xchg
xor
adc
xlat
xchg
xchg
nop
pop
stc
popa
dec
dec
clc
scas
adc
xlat
movsb
cli
jg
add
sbb
je
fs
ljmp
aaa
adc
stc
sbbb
adc
leave
push
aam
and
mov
pushl
std
in
daa
jo
sbb
mov
jmp
inc
test
xchg
mov
or
inc
test
sbb
dec
mov
mov
aaa
outsl
js
mov
in
inc
in
negb
and
imul
rcll
leave
enter
in
adc
iret
push
lea
lcall
mov
nop
shlb
adc
pop
addb
je
in
sbb
andl
mov
or
adc
push
adc
mov
mov
xchg
movsb
rorb
pushl
mull
or
lret
jns
mov
dec
xchg
adc
cmp
pushl
cmp
test
and
in
movb
inc
add
incl
ds
lcall
movsl
adc
dec
lods
dec
testb
lcall
push
das
xor
shlb
dec
sbb
mov
gs
out
push
popa
mov
dec
push
lcall
arpl
or
and
stos
sbb
mov
mov
inc
dec
cld
jmp
shll
ret
sbb
dec
add
imul
push
leave
cmp
add
pop
imul
mov
and
xor
inc
pusha
xor
add
mov
xchg
dec
mov
pop
fildll
lods
daa
fisubrl
add
repnz
xlat
sub
call
jbe
pushf
test
outsb
or
xchg
push
fldt
insb
fbld
push
lret
jecxz
adc
jae
xor
fdivs
inc
mov
loopne
rolb
sbb
xchg
adcl
fiaddl
jg
sub
push
mov
mov
imul
and
mov
inc
xlat
rcll
adc
subb
xor
clc
incl
mov
sub
repz
js
inc
xchg
xchg
into
mov
movsb
js
je
add
subb
cs
mov
and
icebp
in
mov
lret
call
or
test
mov
cmp
mov
add
push
pop
cmp
in
pop
addl
pushl
cmpsb
push
mov
sub
sub
sub
shl
pop
ss
aam
dec
pop
add
mov
cmp
push
adc
mov
sub
hlt
nop
adc
adc
lods
add
ds
inc
icebp
mov
mov
ret
cmpsb
outsb
xor
add
xchg
and
xchg
or
faddl
add
or
rorl
fildll
adc
mov
pop
add
xorl
mov
adc
lock
jbe
loope
call
and
dec
ds
fidivs
jge
adcl
les
push
aas
repnz
lea
data16
scas
ljmp
push
sub
leave
es
sub
aas
cmpsl
mov
dec
xchg
mov
lods
mov
bound
es
sbb
push
sub
ds
mov
arpl
std
outsl
xchg
ljmp
add
adc
addr16
sub
imul
outsb
push
std
and
hlt
xchg
xchg
lret
push
leave
stos
call
neg
push
sbb
faddl
inc
cmp
pop
loop
leave
imul
and
dec
inc
and
sbb
dec
orl
ljmp
xorb
out
cld
pop
addr16
or
push
sbb
add
rolb
call
cmp
push
xchg
or
mov
xchg
mov
addr16
incl
addr16
xchg
sub
mov
pop
arpl
cmp
push
xor
pushf
repnz
mov
cltd
aam
jl
std
inc
ret
pop
test
and
sbb
jnp
jne
lcall
add
push
dec
sbb
stc
test
cmp
push
stc
dec
imul
sub
mov
xchg
mov
sbbl
cld
mov
loopne
test
aaa
inc
orl
hlt
call
dec
es
pminsw
pusha
popf
mov
shlb
cmpl
cwtl
adc
test
loopne
pop
sub
sub
mov
ds
andl
iret
inc
adc
addb
lock
adc
and
or
je
es
lcall
or
adc
adc
xor
inc
test
adc
adc
cmpsb
add
push
fistl
add
push
insb
mov
add
fcmovb
push
sub
fwait
mov
roll
xor
and
inc
lcall
movsb
and
xor
orb
and
xor
mov
jle
jo
xchg
mov
add
je
dec
mov
mov
mov
and
dec
or
mov
int
push
insb
cli
repnz
pushf
enter
cmp
adc
inc
ljmp
inc
enter
and
dec
dec
inc
inc
xchg
and
cwtl
cli
push
test
dec
subb
and
adc
inc
push
inc
fwait
mov
nop
call
hlt
andb
xor
int3
add
inc
inc
sub
pushf
push
int3
push
cmp
adc
cwtl
and
mov
or
cwtl
cltd
cmpsb
dec
inc
and
add
scas
cmp
add
sbb
fsub
xor
and
es
adc
hlt
inc
cs
xor
and
adc
stos
fiaddl
mov
pop
or
push
es
add
pusha
data16
or
outsb
rorb
adc
sbb
adc
insl
shrb
cs
andb
inc
xchg
mov
inc
xor
int3
lret
sbb
lods
outsb
xor
inc
pusha
xor
mov
xor
stos
xchg
andb
push
into
lcall
lock
push
ret
lret
dec
xor
popf
sub
mov
adc
xor
mov
outsl
and
fadds
sub
inc
adcb
jnp
or
xchg
enter
scas
cmp
scas
inc
xor
add
jbe
xchg
test
inc
pop
fmuls
dec
pusha
inc
notb
mov
cwtl
rcrl
lcall
call
adc
add
xor
cmp
dec
sbb
clc
fmul
pusha
es
push
sub
cmpsb
xchg
push
fs
cmpsb
mov
xor
test
and
cwtl
mov
push
sbb
xor
add
mov
add
or
and
push
or
incb
xchg
or
and
inc
nop
cmp
mov
add
jo
mov
mov
dec
sbb
ss
inc
pusha
xor
xor
and
and
dec
pop
mov
push
jnp
mov
hlt
pop
cmp
or
mov
rcrb
cmpsb
push
xor
adcb
cmp
addb
in
push
mov
subb
push
orb
nop
mov
xor
mov
pushf
and
pop
mov
mov
mov
dec
nop
lret
dec
inc
dec
sbb
or
and
jb
push
mov
test
and
adcb
clc
negb
adc
imul
push
push
rclb
jp
lret
sub
jnp
aam
call
jo
sub
and
dec
enter
pop
in
xchg
xchg
dec
push
xchg
inc
push
bound
and
xchg
push
adc
and
js
mov
sahf
clc
or
lret
stos
mov
fs
addb
xchg
adc
lds
fs
inc
push
pop
pop
mov
pop
addr16
adc
jl
cs
sbbb
adc
jo
fcomps
inc
cmpl
xchg
xchg
inc
cmp
call
lret
out
into
imul
inc
push
pop
mov
nop
inc
cld
out
push
xchg
fs
or
sbb
or
cmp
adc
mov
je
mov
pushw
push
fdivl
fadd
xchg
pop
sbb
test
in
shlb
nop
mov
cmp
stos
je
sub
cmp
dec
inc
push
ss
out
js
mov
je
sub
or
and
xor
cmpl
xchg
es
sub
sbb
or
add
mov
mov
cmpb
add
lcall
gs
mov
addb
push
int
add
and
dec
rorb
adc
andb
adc
add
and
inc
sbb
inc
and
ds
outsl
adc
scas
rclb
inc
sub
sahf
and
adc
jb
stos
int3
adc
int3
dec
inc
bound
fildll
push
adc
rclb
jb
dec
xchg
xchg
push
inc
shlb
push
sahf
int3
inc
sub
hlt
in
lcall
and
inc
add
xchg
sub
aaa
mov
nop
inc
jl
adc
cmpsb
nop
adc
xchg
sbb
and
ret
or
in
cli
and
jbe
add
add
enter
data16
mov
inc
lcall
cltd
es
add
mov
mov
insb
and
cltd
shll
dec
jo
dec
inc
push
cltd
adc
loopne
cs
xchg
fdivrl
push
test
int3
add
sub
test
xchg
cmp
inc
lret
and
push
cli
add
fiadds
push
mov
dec
inc
fs
nop
xorb
jo
les
addb
addr16
adc
and
jno
inc
sbb
mov
in
add
cmp
je
mov
add
adc
cmpsb
push
and
sbb
add
adc
sub
xorb
inc
adc
in
js
add
cmp
adc
sub
xor
dec
push
adc
lods
pusha
ror
mov
cwtl
cs
and
je
adc
pop
jb
inc
imulb
int3
and
xor
jl
push
daa
xorl
adc
push
imulb
push
pop
dec
jo
xor
out
cmp
or
cmp
or
adc
add
cmp
sbb
push
inc
mov
sub
cld
popa
popa
add
add
inc
in
cld
lock
adc
sbb
imul
and
xchg
lcall
add
add
subl
dec
clc
pop
mov
mov
les
xor
and
adc
and
or
rorb
int
dec
xor
ss
movsl
inc
orl
lret
into
or
push
inc
xor
mov
mov
xor
repnz
jne
or
xchg
inc
jnp
cwtl
sub
pop
rorl
adc
dec
jle
adc
int3
sub
cli
out
push
and
dec
ret
pushf
cmp
lcall
ss
pop
mov
test
dec
xor
xchg
insb
data16
mul
pop
mov
xor
mov
xchg
adc
addl
ljmp
mov
test
cwtl
mov
mov
push
insb
sub
mov
jp
mov
adc
and
lods
test
js
lods
test
lret
cmp
das
cmp
es
mov
or
push
xor
ficompl
push
lcall
mov
mov
push
inc
test
bound
addb
jbe
sub
je
es
arpl
notb
je
cmpsb
push
in
cltd
ror
fimull
gs
ljmp
xlat
leave
lods
inc
jbe
and
cmp
push
dec
cmp
and
out
in
ljmp
jo
xor
mov
mov
pop
sbb
mov
jo
mov
inc
shl
hlt
mov
loop
lods
in
mov
mov
mov
mov
sub
aam
push
push
mov
mov
into
xchg
fs
dec
pusha
fcmovbe
adcb
mov
ljmp
lret
cmpl
add
in
arpl
pushf
xor
xchg
mov
pop
sbb
and
ja
push
jnp
and
add
push
cli
nop
pop
bound
sbb
int3
add
adc
xor
sub
jbe
and
add
jae
fs
rolb
jae
add
add
add
sbb
adc
add
add
outsl
or
sbb
pop
cmp
cmp
insb
mov
cmp
and
push
sub
cs
aaa
fwait
insl
mov
dec
xor
cmp
pop
add
dec
push
add
dec
dec
push
dec
imul
push
jo
ja
and
insb
add
push
fcmovnu
dec
sti
popa
jge
fs
je
pusha
jns
inc
add
dec
mov
insb
add
push
add
pop
ss
int
add
pusha
add
add
mov
insb
add
addb
test
outsb
xchg
out
mov
js
jp
add
jl
sbbb
int
pop
pop
mov
cltd
mov
mov
and
std
out
fwait
mov
ret
add
mov
cmp
jmp
fstps
add
insb
ss
int
xchg
add
add
add
add
fwait
mov
mov
mov
mov
mov
int
mov
mov
mov
add
mov
add
insb
ss
int
ret
add
add
add
add
int
mov
add
add
add
add
add
insb
ss
int
iret
add
add
add
fwait
int
mov
aad
add
add
add
mov
insb
ss
add
add
add
ss
int
add
add
add
add
add
data16
insb
add
add
add
add
insb
ss
int
jmp
in
add
add
add
int
mov
add
add
add
add
add
insb
ss
testb
add
add
add
inc
data16
sti
add
add
les
inc
xor
pop
jbe
dec
adc
rclb
sbb
add
pop
inc
mov
add
das
inc
dec
imul
fdivrs
in
dec
inc
das
das
inc
add
dec
dec
dec
dec
out
jg
add
add
jl
push
sub
xchg
sbb
in
inc
incb
add
jae
pop
mov
ja
jl
je
jl
jge
xchg
pushl
mov
mov
adc
je
pop
push
add
mov
je
jbe
jbe
cmpb
cmpl
dec
xchg
test
nop
out
jle
jge
jle
jne
popa
adc
cmpl
js
sti
lcall
jg
imul
jb
jle
mov
sub
pop
pop
pop
pop
popl
ja
pop
jbe
fwait
or
mov
jle
mov
addb
and
cltd
and
bound
test
outsl
mov
mov
jle
add
adc
pop
std
std
jg
jle
cmpl
sub
jl
cmpb
ja
jl
ds
add
mov
mov
push
subl
jg
cmpl
adc
rol
jb
jbe
imul
jns
jp
dec
sub
jp
jbe
imul
ja
inc
adc
add
sbb
imul
imul
mov
test
ja
pop
push
dec
dec
push
pop
pop
cmp
and
jp
pop
dec
in
or
dec
push
jbe
dec
daa
push
cmp
adc
sbb
bound
pop
jo
jb
inc
adc
std
lret
jl
dec
push
push
mov
xor
pop
sbb
sbb
pop
lods
pop
mov
loopne
mov
inc
ret
decl
es
je
or
xchg
mov
sti
push
rolb
adc
insb
and
jg
nop
pop
test
orl
mov
jle
push
push
or
pushl
or
sbbb
mov
push
dec
es
push
add
ja
nop
lea
mov
and
or
mov
push
xchg
push
and
pop
in
mov
adc
outsb
jge
mov
ja
sbb
sbb
mov
outsb
jl
xor
cmp
insb
jnp
or
inc
fmul
imul
inc
xor
mov
jp
or
jp
cmp
sbb
mov
or
sub
sbb
and
push
push
mov
gs
cli
dec
jbe
push
daa
push
xchg
adc
push
push
imul
mov
jne
mov
inc
cmp
or
testb
push
cmp
scas
inc
xor
push
jne
clc
fbld
jle
mov
push
sub
cwtl
addb
mov
add
ja
je
jle
rorl
xchg
test
jg
je,pn
pop
push
xchg
lret
sub
fcompl
cmpsb
cmp
push
daa
pop
mov
push
dec
jl
dec
push
mov
fdivrl
cmpsl
pop
fbstp
bound
jge
sub
int
xchg
cmp
insb
dec
xor
call
mov
mov
pop
push
push
fnstcw
jle
test
addl
adc
pop
lcall
inc
jne
adc
xchg
push
lret
and
jbe
mov
je
fs
jle
out
outsb
cmpb
sub
jge
or
jg
pop
add
mov
sbb
sub
ret
loopne
jb
xchg
jo
or
mov
inc
mulb
push
jo
sbb
jle
je
repnz
pop
sub
repnz
pop
cmp
add
add
pop
adc
and
sbb
add
scas
mov
incl
cmp
add
jo
cmp
outsl
pop
add
aaa
pushl
add
jnp
sub
js
xor
push
cs
xchg
mov
xor
or
sub
pop
subb
jo
mov
mov
add
and
jg
enter
pop
aaa
jae
jnp
cmp
add
out
xchg
in
jnp
add
push
lds
test
or
push
xchg
roll
push
or
cld
pop
and
sub
or
sub
dec
push
pop
aaa
add
aas
add
and
adc
inc
add
sub
adc
repz
ss
cs
add
aaa
push
add
cmp
pop
add
cmp
ret
shlb
bound
std
inc
and
and
add
inc
popa
add
ja
fstpt
push
dec
jle
push
and
add
push
inc
and
push
dec
jns
jne
es
cs
push
jns
jnp
xchg
insl
mov
mov
dec
test
push
addb
ss
nop
adc
decl
jbe
mov
xor
add
pop
xchg
add
outsl
jle
push
fsubrl
push
arpl
sub
add
std
pushl
push
push
outsb
lcall
jno
add
jns
loope
mov
add
jp
ss
cmp
cs
jno
push
js
inc
jge
sbb
push
fistpll
jle
add
mov
test
inc
sbbb
cs
mov
inc
xorl
dec
lea
mov
dec
xchg
mov
add
inc
xchg
rolb
dec
xchg
mov
fbstp
push
lahf
int3
add
add
roll
pop
stos
aam
stos
fisttpll
outsb
dec
stos
or
popa
test
pushl
ficoml
mov
push
loopne
je
xlat
add
add
in
push
cli
add
jno
in
rol
testb
repnz
repz
insl
add
rcr
sbb
sbb
mov
push
test
fstl
insb
inc
xchg
push
xchg
xchg
push
nop
cltd
push
xchg
xchg
push
jle
lock
xchg
xchg
xchg
xchg
add
push
xchg
xchg
popf
add
outsl
cltd
pushf
lahf
add
test
add
mulb
cmpsl
mov
mov
movsb
cmpsb
test
lods
cmpsl
push
stos
test
movsl
cmpsb
stos
add
add
lods
cmpsb
add
lock
add
mov
push
mov
mov
push
mov
into
mov
ss
sbb
iret
mov
iret
mov
sarl
out
lcall
movsb
add
mov
mov
int3
mov
rcrb
mov
push
push
rol
iret
ret
scas
lds
jle
std
int
mov
fcmovb
fcmovne
mov
rol
dec
pusha
insl
mov
push
ds
mov
out
fisubs
mov
add
push
mov
out
ss
xchg
sahf
cli
mov
jae
lahf
mov
lret
lret
leave
out
enter
test
aam
push
fmul
push
ror
lret
rcr
shlb
rcr
fcmove
mov
push
aam
add
fcmovu
xlat
rcll
flds
in
outsb
mov
fdivrs
fadd
add
fstpt
loop
jecxz
push
jmp
outsl
mov
fstl
pop
in
push
in
add
fstp
add
loope
add
loop
in
push
jecxz
in
stc
in
out
jmp
loop
add
jecxz
in
hlt
mov
add
out
imul
aad
in
es
add
orl
out
push
repnz
pop
les
mov
std
add
push
out
add
in
in
in
jecxz
fcomi
mov
loop
out
ljmp
push
in
stc
call
repz
push
in
cli
out
push
idiv
ret
add
pop
mov
repnz
cld
hlt
xchg
lock
push
int3
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
popf
mov
xchg
xchg
adc
adc
xchg
xchg
fistpll
imul
push
and
std
fistpl
jecxz
push
and
jnp
pushf
push
add
sub
adc
fsts
stc
adc
rcr
rcl
jecxz
jecxz
fcomp
sub
enter
push
sub
fcom
rcr
rcll
add
scas
test
push
test
pushl
shrb
scas
mov
std
imul
scas
test
add
fwait
test
fsubr
jb
fcmove
sub
jnp
xchg
mov
or
lret
lahf
xchg
imul
push
outsb
jbe
lahf
scas
fdivrs
jg
pushf
jg
sub
rcrb
pop
scas
pushf
jge
imul
sub
xor
add
imul
scas
ret
mov
and
sub
std
ljmp
inc
sbb
sbb
push
sti
pop
sub
or
aas
outsb
jl
sarb
sub
sub
mov
pop
int
mov
or
sbb
push
push
adc
add
aas
ret
add
out
sub
outsb
mov
in
mov
lods
mov
or
sub
and
aaa
cmp
sbb
mov
test
xor
pop
je
lods
std
stos
orb
push
ds
sub
sub
lcall
dec
cmp
pop
subb
adc
inc
mulb
sti
incb
sbb
popa
pop
push
or
lahf
jo
ucomiss
push
outsb
out
arpl
add
pop
sbb
fs
sar
jg
sti
in
sti
mov
mov
sbb
jl
popa
mov
jmp
mov
pop
sbb
sbb
lcall
cmp
dec
pop
pop
jmp
pop
pop
pop
addr16
inc
cmp
decl
mov
pusha
dec
adc
cwtl
loope
adc
sbb
cmp
push
add
pop
sub
cmp
cmp
out
clc
mov
sub
xor
xor
sub
stos
scas
dec
push
daa
mov
mov
ret
mov
aam
jecxz
out
imul
imul
pop
repnz
dec
mov
decb
pop
sti
cmp
stos
mov
call
stos
in
fistl
mov
pop
loope
jmp
sub
mov
mov
ror
xor
popf
pop
shrb
lods
mov
insb
cmpsb
mov
jecxz
mov
mov
push
dec
cwtl
shll
loop
fs
jne
pop
aaa
mov
loope
mov
or
rol
out
cld
insb
mov
mov
icebp
out
mov
lds
mov
jecxz
rcr
mov
aad
mov
jmp
pop
out
les
mov
ss
jecxz
fisttpll
add
fldt
mov
js,pn
or
out
sub
fmulp
mov
push
mov
int
and
into
lds
les
out
into
into
aad
jnp
mov
out
or
outsb
addr16
push
jmp
fcomip
adc
mov
ret
vpunpckhbw
out
ja
pop
sti
mov
adc
sub
gs
ljmp
or
addr16
bound
aam
test
lahf
stc
mov
sub
ret
sarb
idiv
addr16
adc
fs
mov
push
jno
inc
jb
movsl
iret
ret
fucom
out
mov
cmc
pop
add
push
movsb
std
mov
mov
jae
push
push
inc
jae
ret
mov
fstp
push
in
testb
push
icebp
lock
movsb
sar
mov
movsb
inc
fstpl
insl
push
sub
push
insl
ja
mov
in
out
jnp
aaa
loopne
shl
pop
pop
enter
andb
and
mov
std
add
push
sbb
pusha
jae
xchg
jns
sbb
or
loopne
pop
clc
mov
sbb
or
ja
xchg
inc
ljmp
or
fstpl
leave
in
mov
mov
mov
jl
dec
push
add
pushf
js
push
add
mov
xchg
mov
lcall
pop
mov
mov
pop
adc
or
out
data16
or
cmp
mov
sbb
push
adc
leave
ficoms
cmp
pop
stc
clc
stc
loop
cmp
mov
adc
mov
js
pusha
push
push
add
cmp
out
fisubrs
pop
data16
in
add
adc
sub
jmp
arpl
mov
mov
mov
sbb
xor
adc
sbb
notb
ja
mov
stc
insb
or
not
mov
add
mov
aaa
clc
repnz
clc
cld
sarl
cld
or
add
fistpll
pop
sub
fimuls
mov
mov
mov
es
imul
leave
fcoml
faddl
orb
out
push
ja
int
push
add
and
out
mov
push
arpl
push
push
dec
and
add
std
cmp
lret
into
sar
pop
add
push
das
cmp
sbb
fucomp
fisttpll
push
and
std
cltd
cld
or
into
jnp
das
or
and
lret
mov
add
pop
cld
xor
insl
add
aad
nop
inc
cld
std
ret
pop
mov
mov
adc
pop
enter
mov
and
inc
out
pop
xor
fistps
or
add
dec
inc
add
pop
add
incl
push
insl
xchg
add
dec
movsb
sarb
iret
fcmovu
add
out
add
repnz
pop
lods
and
data16
data16
call
push
pusha
add
adc
push
adc
aam
outsl
adc
sbb
jecxz
cmp
in
out
cmp
add
sbb
cmp
push
out
loope
dec
ficomps
push
push
addb
dec
jmp
pop
clc
push
inc
fistpl
mov
inc
push
cs
sbb
cld
cli
fcmovne
out
out
rcrb
mov
int3
add
dec
pop
mov
int
mov
into
test
in
lock
cld
xchg
popa
popf
lds
and
pop
fldenv
sbb
xchg
sbb
pop
andb
adc
scas
xor
and
pop
es
adc
daa
prefetch
shlb
outsb
adc
fildll
push
mov
mov
mov
xor
stc
mov
add
test
pop
jge
xchg
mov
shl
cmovo
adc
or
idivb
int3
push
inc
pop
out
and
cli
test
pop
add
inc
in
enter
mov
test
add
mov
lahf
inc
or
movswl
subb
incl
push
stc
xor
inc
pop
sahf
pop
or
or
xor
out
jae
je
int
outsl
mov
dec
dec
add
push
add
pop
arpl
or
insb
mov
in
divb
adc
adc
fs
push
jae
push
lcall
sbb
and
xchg
sub
sub
xor
imul
jl
inc
push
roll
addr16
jecxz
pushl
add
lret
shrl
clc
add
and
add
movsb
pop
add
subb
mov
ds
or
xchg
inc
scas
dec
dec
shlb
dec
push
jecxz
addl
mov
xchg
mov
fisttpl
mov
lods
movsb
add
mov
aam
jo
mov
ret
mov
aam
flds
fsubp
dec
int
sbb
sahf
jmp
repz
push
int
hlt
repz
push
xor
add
add
push
push
push
dec
xor
dec
dec
push
push
lods
xchg
shrb
xor
cmpsb
xorb
push
push
push
aaa
cmp
inc
pushf
add
ss
push
inc
pop
push
dec
pusha
inc
bound
pop
out
nopl
and
es
sub
xor
push
sbb
push
pop
sbb
sbb
and
xor
and
xor
sbb
sbb
pusha
sub
pop
pop
push
es
dec
pop
int3
jle
fwait
sbb
and
popa
inc
jbe
scas
cmpsb
pop
pop
sbb
rcrb
mov
popa
pop
or
rorl
fcomps
and
sub
and
or
pusha
pop
jbe
inc
pusha
add
out
mov
sbb
inc
popa
add
outsb
sub
push
roll
add
das
lcall
sarb
fmull
and
push
shl
ss
push
dec
pop
pop
or
and
lea
mov
pop
shlb
and
inc
in
push
sbb
and
int3
xor
and
arpl
sbb
es
and
mov
add
dec
lahf
add
add
inc
inc
pop
push
popa
dec
addr16
dec
bound
and
inc
inc
aas
adc
push
ja
fisubrs
rorb
lods
les
fcmovu
add
pop
dec
push
dec
pop
pusha
fldl
or
or
sub
fcmovnb
push
and
add
les
mov
pop
push
pop
dec
pop
pop
pop
jbe
popa
or
fucomi
outsb
mov
sbb
adc
pop
popa
push
or
sbb
mov
lcall
popa
inc
pop
push
pop
pusha
or
push
push
rcrl
and
sbb
sbb
mov
pop
pusha
add
ds
cmp
xor
or
add
cld
pushl
add
push
adc
cmp
adc
or
sbb
mov
pop
add
pop
mov
popa
dec
test
ss
addr16
dec
pop
sti
es
add
push
pop
jno
mov
add
pusha
call
pop
jno
or
mov
jnp
stos
jno
outsb
push
das
xor
adc
cmpsl
mov
dec
outsl
push
jo
jg
jg
xor
loop
adc
jo
mov
inc
scas
mov
sub
int3
int3
inc
xor
inc
jbe
aas
roll
call
or
push
ja
adc
push
jl
cs
cs
add
push
add
jl
push
sbb
out
add
cs
sbb
mov
das
add
push
or
fildl
pusha
pop
shlb
or
mov
enter
ja
jg
xchg
int
fstpl
mov
leave
imul
filds
sarb
rorb
mov
mov
std
enter
jmp
cmp
fdiv
or
pop
fnstsw
add
fmuls
out
lock
pop
ja
int
xlat
add
ja
ljmp
pop
adc
lock
cli
cmp
fstp
ror
xchg
push
das
cli
add
mov
imul
xor
xor
xor
das
pop
or
xor
xor
cld
in
shl
inc
pop
pop
es
jo
cld
cmp
cmpsb
aas
lock
pop
outsl
pop
mov
xchg
pop
outsl
je
out
es
mov
fcomi
or
sbb
sbb
fldcw
mov
and
xor
sub
ss
cmp
cmp
and
jnp
flds
adc
sub
xor
add
add
cmp
std
pop
dec
sub
inc
pop
dec
add
cmp
jnp
push
cmp
outsb
inc
cmp
dec
es
dec
push
inc
push
push
dec
dec
inc
push
dec
push
push
push
pop
push
jge
pushl
pop
pop
add
bound
jne
jbe
lcall
inc
push
insb
push
push
fs
jp
dec
insl
pop
inc
sbb
pop
jno
push
jne
insl
shl
bound
push
add
push
jae
data16
repz
push
jae
or
popa
jl
add
jbe
es
inc
jbe
jl
add
push
dec
fists
insb
pop
jns
jbe
inc
push
xor
inc
aaa
dec
fisubrl
add
dec
add
cmp
push
ss
aas
push
xchg
dec
aas
pop
add
xor
xor
dec
add
xor
cmp
adc
insl
sti
in
mov
and
and
add
aas
jns
inc
dec
push
inc
stos
test
lcall
add
cs
mov
push
pop
outsb
inc
inc
js
pop
jne
push
gs
sbb
loopne
lcall
arpl
push
inc
add
xorl
pop
mov
test
cmpl
out
mov
mov
test
repz
mov
add
adc
cs
repz
pushf
and
orl
mov
xchg
test
xchg
mov
add
dec
mov
add
add
fcmovne
outsl
xchg
mov
add
push
xchg
sub
sahf
sahf
sub
mov
fbld
cmpsl
movsl
cs
cmpsl
es
lods
stos
xor
imul
cmp
mov
add
popa
cmc
aaa
jmp
stos
mov
dec
add
arpl
push
mov
push
mov
cld
outsl
push
rorb
ret
push
add
pop
addr16
lret
inc
aam
add
inc
adc
and
mov
pusha
jl
inc
fwait
add
insb
push
pop
jbe
add
outsb
adc
dec
dec
mov
das
jo
es
inc
mov
es
mov
dec
mov
outsl
mov
push
jo
dec
roll
push
les
inc
pop
jo
mov
push
aas
push
ja
xchg
data16
sbbb
std
lods
loop
test
xchg
stos
add
xchg
cmpsb
mov
mov
lea
jbe
mov
sub
lret
push
mov
cwtl
int3
add
enter
cmp
leave
mov
shll
mov
fidivrs
push
cmp
popl
inc
test
mov
mov
dec
les
iret
fucomi
rolb
inc
ret
push
enter
stc
loop
inc
enter
pop
aad
outsl
jecxz
in
sbb
mov
mov
mov
rolb
xchg
jecxz
xchg
add
in
add
lret
fistl
sbb
xchg
pusha
mov
xchg
mov
push
xchg
loop
repz
lock
xchg
mov
ror
add
cmc
data16
insl
int
push
hlt
push
fsubr
ss
out
iret
repz
in
std
out
push
clc
add
imul
push
adc
pop
inc
fidivrl
negl
adc
pop
adc
shrb
cmp
lcall
inc
pop
sub
pop
in
arpl
pop
push
pop
adc
sbbl
imul
push
pop
adc
ret
cmp
lods
pop
sbb
out
adc
jne
cwtl
out
popa
push
pop
push
insl
test
jae
pushf
repz
std
jg
cmp
rcrl
xor
xor
or
jmp
repnz
popa
mov
xor
add
pusha
jp
out
add
loopne
loope
popa
inc
pop
push
and
and
sub
jmp
das
cmp
adcl
sub
mov
sbb
sbb
das
xor
xchg
ficoms
loopne
mov
add
sbb
and
fdivrs
jne
xchg
popf
mov
sbb
pop
fisttps
sbb
and
xor
cmp
fwait
sahf
mov
lahf
out
mov
popa
adc
xor
pushl
pusha
jno
xchg
lahf
mov
or
lcall
push
sub
data16
jo
jo
push
data16
push
jno
or
pop
test
dec
dec
dec
dec
dec
inc
sarl
and
decl
pop
mov
mov
mov
jmp
mov
movsb
mov
dec
push
dec
mov
cmovno
push
push
pop
pop
cmpsl
mov
fdivrp
mov
pop
adc
jg
pop
data16
or
aas
add
push
adc
shl
dec
pop
pop
cmpsb
mov
test
mov
adc
out
fistpl
inc
popa
push
pop
into
aam
mov
mov
sqrtps
inc
inc
popa
pop
cmpsl
ret
sarb
and
add
inc
enter
pop
movsl
cmpsb
mov
mov
or
jne
ficoms
pop
ror
int3
imul
mov
sub
mov
ror
int3
int
pusha
push
fdivr
setne
movsl
cmpsl
ret
ljmp
pop
pushl
lea
xor
mov
mov
and
mov
std
out
add
sti
out
fnstsw
popa
mov
negb
lock
pop
cmp
popa
addb
ljmp
test
pop
into
pop
cmpsb
pop
test
mov
lea
in
pop
pop
add
push
pop
add
popa
push
adc
pop
aam
jl
mov
add
sub
add
or
comiss
xor
mov
xor
outsl
jecxz
orb
outsb
jecxz
pop
add
out
sti
call
sbb
sbb
add
push
pop
pop
push
push
and
sbb
and
sbb
std
sub
and
sub
or
add
sub
push
das
sub
xor
cmpsl
mov
sub
and
xor
and
sarl
push
xor
add
xor
dec
int
cmp
cmp
inc
xor
push
xor
xor
push
fmull
inc
pusha
je
dec
dec
add
fildl
dec
dec
add
push
outsb
insl
add
insb
idivb
testb
outsl
jns
jae
add
push
imul
add
jnp
xor
inc
sti
ja
add
push
arpl
repz
jb
js
js
jle
addl
xchg
iret
xchg
mov
out
aaa
pop
jne
bound
jnp
ret
push
les
jecxz
insb
js,pt
lea
or
outsb
jns
popf
add
int
adc
lea
push
xchg
sbb
sti
xchg
xchg
add
fwait
popf
lcall
fwait
pushf
push
pushf
lahf
lahf
mov
sti
pop
mov
test
add
mov
adc
out
enter
mov
movsb
test
test
movsl
stos
cmpsl
lods
push
test
or
pop
scas
stos
stos
push
nop
insl
mov
scas
lods
scas
lods
push
mov
scas
mov
pushl
push
mov
mov
mov
mov
mov
mov
mov
insl
add
mov
fnsave
fistl
mov
mov
push
mov
mov
mov
outsb
mov
mov
loopne
fcmovne
mov
out
mov
add
mulb
rorl
lret
leave
aam
mov
jno
out
outsb
lds
mov
insl
int
out
push
enter
leave
pop
leave
lret
sub
scas
and
int3
lret
into
push
sahf
ljmp
mov
into
ror
iret
out
push
rolb
rcl
aam
inc
int
add
rcl
aam
mov
xorb
aad
aam
into
outsl
daa
popa
mov
xlat
ss
fmuls
scas
imul
fistl
pop
fcmovu
in
fnstsw
roll
push
push
shll
imul
negl
pop
hlt
fcmovu
ficoml
adc
push
mov
fstp
jg
fcompl
fimuls
fisubrs
into
rcrl
push
loopne
fidivl
popf
jbe
push
fiaddl
fmull
dec
push
out
repz
fsubp
filds
loopne
jecxz
fsubp
loopne
xor
fwait
in
hlt
stc
add
outsb
lret
mov
sti
push
loope
cs
or
fildl
in
push
out
jbe
mov
in
jl
in
call
mov
jmp
and
ljmp
in
ss
dec
push
in
jmp
cltd
mov
in
push
in
jmp
int
dec
in
lahf
out
in
outsb
lock
pop
or
push
out
repnz
loopne
sub
mov
div
cmpsb
cmc
add
aaa
int
push
stc
repz
hlt
push
push
push
cmc
sti
clc
add
std
cli
iret
push
push
push
and
mov
add
add
je
aaa
cmp
pushf
mov
movsl
lods
mov
fwait
jl
pushf
mov
mov
fwait
scas
lahf
lods
stos
mov
lahf
stos
test
popaw
mov
cli
jg
mov
mov
mov
mov
js
fwait
and
mov
popa
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
popa
xchg
mov
cmpsb
idiv
sub
add
mov
inc
inc
inc
in
mov
mov
mov
mov
jns
popa
test
mov
adc
mov
pop
lods
mov
mov
stc
insl
mov
fisubrl
les
stos
pop
push
enter
lods
xor
inc
ret
mov
dec
pushl
les
jne
mov
lods
mov
dec
hlt
mov
mov
cwtl
and
cwtl
pop
mov
nop
fbstp
mov
cmp
cmp
mov
in
dec
mov
es
fidivs
sbb
lods
mov
xchg
aaa
cmp
in
mov
shrl
mov
hlt
mov
mov
jae
mov
mov
pop
popa
add
xor
add
cld
mov
mov
ja
ret
mov
aaa
sar
out
fsubl
in
les
mov
jle
addl
mov
leave
mov
incb
or
and
ret
add
sub
mov
jle
jl
enter
mov
les
add
or
test
mov
mov
cld
pop
push
push
nop
push
lahf
je
les
shll
add
in
mov
inc
dec
mov
out
shll
mov
mov
out
fsubs
lcall
neg
ret
mov
jg
mov
bound
jecxz
mov
fs
outsb
mov
adc
test
mov
push
test
jle
jns
mov
adc
mov
loopne
ds
jle
data16
leave
sarb
jbe
add
insb
jns
sbb
sub
mov
cli
adc
add
ret
inc
adc
jnp
pmaxub
rol
mov
mov
cmpsb
insb
dec
mov
imulb
mov
mov
daa
pop
or
repz
jecxz
push
cltd
jmp
jecxz
fcmovu
fsub
fiadds
aad
jns
in
fcomp
out
pop
leave
js
mov
and
sarb
cltd
mov
fistps
in
jmp
out
in
jmp
adc
lock
jmp
lock
push
push
stc
loope
mov
jmp
xchg
call
pop
imul
bound
pop
imul
loopne
lcall
and
icebp
mov
repz
jae
xor
daa
pop
cmpb
std
and
incl
and
scas
jg
aam
mov
fs
cli
mov
add
add
lcall
pop
add
push
cmpsl
mov
out
add
jge
mov
ljmp
inc
add
bound
pop
push
ss
orb
outsl
mov
mov
lret
pop
aas
xchg
pop
inc
mov
push
pop
adc
xor
fwait
orl
stos
cli
dec
insl
push
icebp
push
sub
incb
sbb
xor
push
repnz
xor
aas
sub
adc
and
loopne
repnz
call
add
xor
sbb
adc
test
or
pop
jo
arpl
addr16
or
push
adc
jbe
div
addb
rclb
or
mov
stc
cmp
or
add
push
pop
std
ja
push
jbe
loopne
push
aad
mov
into
sarb
out
cmpsb
das
lret
xor
int3
mov
adc
aad
or
pop
fcmovnu
out
add
das
inc
add
decb
dec
fisttpl
fisttpll
cmpsb
stc
fists
test
daa
adc
cmp
push
inc
push
xor
jmp
xor
das
xor
inc
inc
sub
sbb
cmp
xor
lea
inc
cmp
mov
and
ret
xor
dec
mov
lcall
aas
pushl
pop
xor
inc
push
push
add
cmp
sbb
pop
mov
pop
aas
add
outsl
imul
push
cmp
fwait
mov
add
and
and
and
xor
xor
xor
out
imul
xor
aaa
adc
push
push
push
push
push
sub
sub
out
push
adc
fs
jae
push
push
arpl
in
imul
push
inc
xor
inc
cltd
lahf
mov
xor
add
push
and
push
xor
ficoms
push
sbb
xor
inc
push
sbb
dec
mov
push
add
or
or
and
inc
push
and
inc
add
and
or
out
and
push
xor
xor
dec
add
ds
mov
arpl
fidivl
inc
and
pop
push
stc
push
mov
push
push
adc
push
je
push
adc
sub
and
dec
cmp
cs
push
push
jl
pop
je
sub
xchg
xor
adc
push
cmp
xchg
call
dec
and
pop
lock
xchg
jae
int
imul
mov
mov
mov
dec
mov
test
or
ds
lahf
aas
pop
xchg
add
pushf
add
sahf
push
mov
push
mov
add
insl
add
scas
es
lods
add
scas
jle
jnp,pt
mov
pop
mov
add
add
push
mov
imul
xchg
dec
outsb
lcall
mov
push
pop
test
push
pop
outsb
adc
push
fs
pop
imul
ret
push
jae
je
aam
xchg
jnp
jl
ds
ljmp
pop
movb
add
add
xchg
sahf
mov
sahf
mov
mov
push
and
cs
jecxz
push
mov
in
fwait
repz
cmpsb
repnz
mov
mov
imul
jmp
popf
fwait
lods
xor
mov
mov
push
add
outsb
fs
push
cmpsl
xchg
mov
mov
xchg
add
fists
ret
add
mov
lret
fxch
mov
add
fcom
add
hlt
out
out
add
in
mov
sar
add
cmc
out
cli
icebp
push
sti
repz
dec
cwtl
jns
add
lret
adc
sbb
add
add
inc
enter
add
mov
dec
aas
lds
ret
xchg
xchg
and
ficompl
add
popa
ret
add
mov
repnz
fstps
pop
pusha
add
ret
lahf
xor
enter
add
test
lods
mov
add
sbb
mov
popa
mov
test
mov
pop
popa
pusha
adc
adc
unpckhps
cltd
mov
movhps
mull
add
popa
jns
lahf
sahf
fwait
mov
or
lahf
ret
mov
mov
mov
lahf
ja
int
mov
test
inc
sub
repz
xchg
outsl
pop
enter
mov
pusha
mov
push
mov
fstl
fwait
fwait
fwait
pop
add
and
sub
and
mov
or
movsl
bound
es
cs
and
mov
mov
mov
pusha
add
mov
pusha
dec
lahf
test
add
mov
mov
popa
test
call
ret
pop
add
fcmovu
cmp
push
lahf
mov
or
sbb
xor
jmp
mov
scas
add
fistps
lahf
pop
popa
lahf
fwait
fwait
push
dec
cmp
pop
lahf
inc
fs
adcl
scas
out
or
scas
mov
inc
inc
insl
mov
mov
stc
pushf
jge
push
push
mov
xchg
xchg
jae
scas
repz
jg
mov
mov
data16
jbe
jo
insl
addr16
test
push
fstpt
mov
xchg
mov
movsb
jle
scas
imul
push
mov
adc
or
lea
jno
or
arpl
data16
addb
ret
stos
jb
mov
fs
insl
jae
in
aaa
push
pop
pop
pop
push
sbbb
pop
fdivl
fs
mov
mov
add
lcall
js
lahf
pushf
jl
aas
cmp
cmc
sti
out
scas
mov
scas
test
cwtl
test
mov
adc
xchg
stc
in
insl
imul
test
lret
pop
data16
jle
mov
cmp
mov
jle
scas
mov
mov
loope
in
popf
pop
ja
pop
nop
pusha
inc
pop
add
xchg
cmpsl
movsb
je
add
in
scas
addl
pusha
pop
pop
and
in
inc
pop
mov
pop
pop
cmp
arpl
mov
pop
popa
mov
cmp
pop
mov
fs
jge
out
xchg
pop
pop
pop
cmp
cld
sub
add
inc
ds
or
cltd
cmp
xor
aam
sub
sub
jae
iret
push
push
mov
out
adc
imul
or
cmp
cmp
popa
xchg
sub
dec
mov
xlat
xor
push
cmp
aas
cmp
cld
sti
sbb
add
cmp
ds
add
incl
inc
cmp
add
dec
pop
clc
insl
adc
cmpsl
adc
ds
pusha
push
push
add
push
insb
outsl
fistpl
and
and
daa
pop
push
aas
pop
imul
or
push
bound
jp
jnp
repz
data16
jge
or
jb
and
int3
mov
add
inc
cmp
dec
fisttpl
dec
inc
push
dec
push
dec
push
push
push
outsb
dec
jae
and
pop
pop
add
pop
fldcw
push
inc
push
popa
push
push
arpl
pop
data16
add
into
push
push
push
xchg
add
ret
add
add
jecxz
adc
xchg
cmpl
jp
push
jnp
xchg
jb
inc
inc
jb
add
ss
push
mov
lea
mov
xchg
mov
sbb
movsb
into
pop
add
lahf
scas
push
mov
mov
test
xchg
mov
insl
mov
add
push
fsub
push
push
or
outsl
iret
push
leave
rcl
push
ror
add
jle
add
mov
xchg
int
mov
sahf
xchg
mov
sbb
cltd
cmpsb
mov
incl
push
xchg
pushf
xchg
add
xchg
sahf
add
cltd
mov
cltd
outsb
mov
scas
add
shrl
add
test
xchg
add
movsb
pop
aam
scas
push
mov
jbe
lods
add
push
push
mov
mov
int3
outsb
ficoml
push
mov
add
mov
les
les
ds
add
ret
cmpsb
mov
xchg
cmp
and
enter
mov
push
lret
lret
into
into
into
movb
mov
aaa
ret
lret
add
into
int
push
ror
shlb
pop
insl
and
ror
push
shrl
int
mov
int3
rcl
ja
inc
lret
push
mov
xlat
roll
shl
push
add
mov
mov
push
mov
ficoms
lock
push
filds
xchg
int3
jle
add
in
cmpsl
mov
repz
aam
jge
ss
jecxz
pop
je
fbstp
mov
call
in
out
out
movsl
cmc
sub
imul
loop
movsl
imul
push
lods
repz
jmp
hlt
daa
hlt
div
aam
pop
sub
push
mov
aas
inc
inc
cmp
pusha
cmp
decl
nop
pushl
pop
sub
rorb
sbb
sbb
xchg
inc
add
rorb
pop
outsl
test
or
or
add
pop
push
jmp
inc
int
xor
xor
psubsw
or
jg
inc
push
iret
push
and
sub
in
decl
xor
jl
push
cmp
xor
in
ljmp
mov
push
adc
shlb
cmp
aaa
xor
mov
sbb
pop
cmp
adc
xchg
out
xchg
js
dec
inc
cmp
int
adc
xor
sbb
or
add
inc
lock
mov
inc
xor
testb
cli
pop
adc
dec
adcb
and
imul
adc
lock
js
lods
mov
add
into
test
insb
pop
xchg
lret
xchg
jne
paddusb
mov
adc
insb
or
jg
pusha
or
rolb
dec
xor
lcall
xchg
in
cmp
rorb
pusha
add
mov
in
fistps
mov
orb
xor
movsb
orb
jbe
pop
jl
mov
cltd
pop
inc
sti
ljmp
mov
cltd
test
cmpsb
jl
cmp
mov
jge
xchg
lock
mov
cwtl
xor
jge
cmp
or
decl
mov
mov
lock
mov
dec
jns
mov
or
xor
dec
ja
xchg
iret
xchg
scas
call
ja
xor
inc
push
stc
mov
jmp
xchg
pop
inc
sahf
dec
invlpg
inc
dec
jno
lea
push
stc
xlat
lock
lock
jno
inc
pop
inc
xor
mov
shll
ljmp
insb
pop
fwait
mov
shll
inc
mov
jmp
shll
pop
sub
mov
in
lahf
orl
aas
cmpsl
mov
pushl
aaa
inc
dec
jle
xchg
mov
dec
sub
sub
ds
mov
inc
aaa
xor
fldl
push
adc
and
cmp
push
adc
adc
pop
sbb
pop
adc
pop
push
push
sbb
test
and
decl
outsb
push
sub
pop
das
pushw
pop
cs
and
inc
cmpsb
in
decl
imul
sub
and
add
loopne
jg,pt
xchg
mov
mov
ret
mov
add
fldt
jle
or
ret
loopne
mov
lcall
pusha
cmp
aas
repnz
or
leave
fsubp
in
lret
stos
outsl
or
pop
movsl
or
pushf
mov
pop
out
into
in
mov
dec
pusha
or
imul
mov
add
int
adc
ljmp
dec
inc
cmp
or
mov
call
xor
cmp
jns
mov
lock
cmp
xor
pop
and
sti
or
or
pop
add
add
xchg
call
add
xchg
js
push
push
add
push
fisttps
mov
lahf
imull
or
add
push
jno
xlat
xchg
add
xchg
in
cmpsl
mov
mov
fstpt
lret
sub
jg
popw
mov
mov
pop
mov
cltd
cltd
test
add
mov
mov
in
jne
pushf
pop
leave
inc
mov
cltd
pop
mov
out
lods
mov
lret
xchg
aaa
mov
adc
int3
mov
stc
nop
incb
sbb
pop
adc
lret
add
pop
outsl
inc
daa
adc
out
and
push
add
or
and
outsl
pop
cmp
cmp
dec
and
add
push
or
pop
jle
int
add
insb
adc
pop
add
and
push
cmp
xor
push
fadds
out
fdivr
imul
jl
or
inc
sbb
add
sahf
fistl
push
add
inc
pop
pop
cs
xor
jnp
out
push
push
imul
dec
add
dec
pop
jbe
sub
jle
pop
add
push
pop
ds
pop
push
and
mov
pop
add
gs
dec
bound
push
sbb
push
in
aaa
dec
int
pop
push
pop
jb
ss
popa
jnp,pt
incb
xor
jne
sub
imul
outsl
push
imul
je
push
push
insb
arpl
pop
jne
sti
ja
push
xchg
pop
add
push
das
push
in
mov
jg
aaa
sbb
xchg
cmp
test
mov
ss
push
jbe
pushl
xchg
push
add
orb
popa
cs
out
insl
pop
movsl
int
in
outsb
out
push
clc
imul
pop
cli
mov
adc
int3
pop
and
cmp
in
hlt
test
mov
xchg
push
or
movb
xor
add
inc
xchg
ljmp
sbb
adcl
xchg
pop
fiadds
mov
push
add
xchg
pop
mov
mov
jecxz
pop
icebp
decl
inc
mov
sbb
xchg
add
xor
or
mov
mov
push
jb
add
xchg
xchg
jge
xchg
aad
lcall
push
inc
insl
stos
add
mov
inc
inc
les
imul
addl
inc
inc
or
adc
push
xchg
adc
cmp
cltd
push
movsl
push
adc
xchg
add
push
mov
adc
fistl
outsb
and
cwtl
mov
and
cmpsb
mov
mov
mov
or
fiadds
dec
mov
nop
add
outsl
xchg
mov
sub
inc
lods
sahf
and
cwtl
push
and
mov
push
inc
mov
add
lods
add
cmc
mov
push
adc
mov
mov
mov
mov
push
mov
scas
lods
pop
push
into
lods
xchg
mov
add
roll
mov
add
rclb
mov
mov
out
leave
pop
rcr
adc
or
int3
cmpsb
in
std
outsl
cmp
lret
rcl
jbe
flds
jge
fbld
aad
arpl
outsl
mov
inc
lretw
mov
call
stos
jno
orb
mov
xchg
mov
adc
mov
mov
push
mov
addb
xchg
mov
pusha
ret
cwtl
shr
leave
data16
test
push
insb
jle
lret
mov
mov
sti
rorl
mov
lahf
dec
fisubrl
in
lcall
mov
pop
lea
fdecstp
fildl
aad
insl
pop
xchg
fimull
fistpll
out
clc
cmpsb
dec
in
mov
aam
mov
push
int3
push
mov
pop
cmpsb
mov
xlat
mov
fbld
aam
mov
repz
or
loopne
add
add
fildl
loope
cmpl
dec
push
sti
push
out
es
cli
jbe
clc
adc
in
loop
ret
icebp
outsb
jmp
in
shlb
in
add
sbb
sub
aaa
bound
inc
cli
pop
les
aaa
das
sub
push
add
pop
aas
movsb
daa
pop
jno
mov
sti
lock
xchg
jno
lock
sbb
push
aas
xor
jl
mov
fneni(8087
fnstsw
lret
jl
sub
sub
fwait
pop
sbb
and
fwait
lret
fcmovu
filds
loope
lret
lcall
mov
pop
dec
outsl
mov
mov
idiv
div
out
jmp
and
and
jg
mov
mov
ja
fstpl
pusha
or
call
pop
imul
mov
je
movsl
mov
or
hlt
sti
mov
pop
pusha
ljmp
mov
pop
mov
cld
out
lahf
xchg
std
or
pop
js
repz
mul
jbe
mov
ret
lcall
rcrl
hlt
fdivrl
lahf
pop
lods
mov
or
icebp
neg
or
cmp
jo
jecxz
div
cld
cmc
loop
dec
xchg
movsb
mov
or
or
rorb
aam
or
cmp
hlt
sar
in
aas
aas
lcall
xchg
movsb
inc
inc
dec
dec
adc
or
sbb
outsb
ret
mov
iret
mov
dec
push
push
push
dec
dec
jg
fstpl
dec
inc
adc
pop
insb
test
stos
test
mov
addr16
push
push
popa
popa
push
push
dec
jg
or
sbb
sbb
es
xchg
imul
dec
cmp
pop
pop
pop
xchg
aas
cmp
push
push
push
add
jae
sbb
add
aaa
sub
jno
and
je
jns
xchg
test
inc
or
cmp
popa
inc
lahf
lahf
mov
push
or
add
jne
pop
pop
sti
clc
dec
repz
or
add
jo
test
and
push
xchg
pop
fisubs
in
out
or
test
pop
movsl
mov
push
call
call
mov
fidivrl
or
scas
pop
xchg
xchg
pop
popf
pop
push
mov
in
cld
and
out
mov
mov
test
rcr
lret
ret
pop
dec
xlat
inc
cmp
sahf
int
xor
sarl
pop
fisubrl
lcall
loope
int
jg
xor
mov
jae
mov
mov
add
jge
sarl
std
imul
mov
mov
or
negl
ret
sti
mov
test
incl
pop
movsl
mov
mov
mov
add
das
cmp
pushf
das
mov
lahf
and
stc
adc
xchg
and
std
mov
dec
inc
and
enter
fisubs
hlt
jo
jo
or
cmp
fcomip
addb
cmp
ret
xchg
and
or
add
iret
out
repnz
in
xlat
pusha
add
pop
push
in
cmp
cmp
lock
pusha
aas
addr16
dec
push
or
or
inc
fnstsw
ja
bnd
insb
aaa
xor
cmp
jb
add
scas
pusha
xor
sub
or
dec
mov
nop
fists
pop
dec
or
lds
cwtl
and
dec
inc
add
dec
movsl
jmp
test
mov
inc
xor
xchg
push
fsubr
xor
sub
dec
dec
pop
mov
push
adc
add
mov
pop
push
scas
stos
adc
sub
xchg
lcall
jo
jg
mov
cmpsl
dec
lret
mov
lods
adc
fnstenv
in
jbe
stos
add
adc
imul
into
mov
sub
add
xor
fnstsw
int3
sub
pusha
and
xlat
fnstsw
pusha
sub
xchg
mov
xchg
daa
xor
sub
jb
cmpb
sub
xor
scas
cltd
call
stos
stos
add
pop
mov
inc
mov
add
idiv
mov
xor
sub
mov
mov
ss
aad
push
mov
xorb
or
out
and
sbb
dec
adc
sbb
xor
adc
xor
xor
ds
push
xor
push
sbb
out
cmp
es
fiadds
jmp
inc
jae
push
inc
imul
cmp
mov
mov
mov
dec
arpl
dec
shl
jae
call
sti
insb
dec
mov
inc
arpl
jecxz
adcl
out
fwait
int
mov
jae
mov
xchg
ss
movsl
repnz
xchg
add
lods
mov
stc
rcll
mov
imul
aam
ret
int3
imul
pop
aam
fisttpl
jb
add
jecxz
in
out
cmp
repz
repz
xchg
push
cmpsb
mov
mov
push
cld
jmp
adc
add
dec
push
and
add
mov
nop
add
adcl
or
push
inc
add
pop
fsts
mov
or
cld
cmp
or
cmp
incl
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
sti
mov
sti
pop
push
push
popa
ds
cmp
mov
push
popa
inc
cmp
sbb
mov
scas
pop
push
out
shrl
aad
aas
shrl
push
pop
adc
add
jmp
add
fwait
negl
cmp
inc
inc
daa
sub
sub
pop
or
dec
cmp
pushf
loopne
stc
ss
push
xor
fildl
jge
outsb
pop
push
sub
pop
or
dec
pop
cmp
out
out
mov
mov
sub
sbb
dec
xor
mov
insb
pop
and
xor
in
incl
sbb
and
int
ss
jbe
test
sbb
mov
fwait
dec
and
adc
sbb
push
in
ja
dec
push
and
aas
inc
mov
pop
push
push
mov
cmp
rorl
add
or
ds
cld
push
out
inc
sbb
sbb
test
cmp
mov
xor
fiaddl
pop
inc
or
outsl
jo
inc
sbb
push
and
add
push
pop
push
push
adc
or
pop
imul
loopne
sbb
sbb
xor
push
and
ffreep
cmp
pop
lds
test
xchg
or
jnp
push
pop
push
push
pop
push
push
pop
jne
sbb
mov
fstpl
sbbb
pop
pop
lds
or
mov
outsl
mov
xchg
xor
add
daa
and
xor
mov
cmp
add
add
adc
mov
insl
jae
push
adc
adc
push
sub
push
dec
push
push
mov
mov
push
dec
inc
add
pop
pop
cs
pop
add
gs
outsb
call
addr16
add
insl
push
dec
dec
ss
fldln2
imul
inc
insl
push
dec
je
es
push
jp
add
push
clc
pushl
push
xchg
push
add
push
add
push
je
fwait
ljmpw
add
mov
fwait
add
in
ljmp
xchg
jno
mov
outsb
nop
mov
jne
popl
jp
mov
lcall
outsl
sarb
test
add
outsl
test
ljmp
in
sti
incb
pushf
xchg
test
mov
pushf
lahf
mov
mov
mov
mov
add
repz
add
test
cltd
add
xchg
mov
cmpsl
outsl
pop
cwtl
les
xchg
repnz
mov
mov
mov
mov
mov
cmpsb
add
mov
push
mov
mov
outsb
push
mov
mov
lcall
sarl
aad
add
ds
push
lods
lahf
jg
add
ret
add
cltd
inc
add
ror
mov
in
lea
dec
pop
aad
rolb
xlat
jge
je
xlat
into
ds
dec
add
ror
pop
or
fcoms
fmuls
shll
mov
rolb
fcom
add
fxch
add
iret
add
mov
in
int
fdivr
add
push
out
pop
loop
xchg
aam
add
mov
fld
push
xlat
push
std
fcomi
fists
xor
adc
add
in
out
in
add
lods
insl
ficoml
push
in
loop
cs
js
lcall
out
push
in
out
cld
jecxz
imulb
cld
ss
add
out
mov
inc
mov
sti
in
ss
lods
mov
call
jmp
mov
sbb
repnz
icebp
xlat
outsb
not
loopne
shrl
jmp
fisttpll
fucomip
scas
xchg
jg
loope
jecxz
ss
loope
call
fneni(8087
in
inc
in
call
fwait
insl
sti
insl
mul
ds
loope
add
ljmp
hlt
out
pop
xchg
mov
push
stc
jmp
out
push
loope
cli
jbe
mov
pop
call
scas
es
mov
push
call
jbe
divl
pop
cli
lock
repnz
icebp
out
imul
jnp
mov
push
xacquire
push
cli
repz
jbe
hlt
out
insb
pop
cld
push
cmc
sti
ss
sti
idiv
into
clc
out
jo
jl
sti
in
push
jmp
out
out
repz
pop
cmc
hlt
outsb
push
lock
push
std
hlt
push
cld
idivb
push
mov
ds
div
jge
lret
scas
stc
fsubs
test
push
push
cld
clc
ss
mov
out
insb
dec
cli
incl
cmc
stc
add
div
cli
cmp
push
cli
sti
ss
push
push
ds
xor
test
clc
cld
xor
int
cmp
push
mulb
adc
add
jmp
testb
xlat
clc
decl
scas
cmp
mov
pop
cmp
and
dec
cli
xchg
mov
roll
pop
dec
call
notb
or
cmp
call
or
and
sbb
push
or
mov
jmp
inc
xchg
addl
and
or
pop
sub
dec
xor
dec
mov
dec
dec
add
cmpsl
test
jecxz
lret
sahf
xchg
cltd
add
xor
repz
insb
push
sub
dec
js
push
push
fs
mov
lret
dec
sbb
movsb
int
out
pop
pop
xor
jg
mov
lods
je
arpl
mov
out
jecxz
loope
jg
mov
jbe
lods
push
pop
popa
sarl
jns
stc
lcall
movsb
cwtl
ret
repz
lock
lahf
fadd
popa
pop
gs
stos
xchg
in
mov
xchg
popf
adc
xor
into
sar
scas
xor
gs
ja
inc
lods
lods
rcr
imul
push
pop
pop
pop
pop
outsl
jo
jae
mov
xor
ja
test
sti
or
lea
loopne
inc
inc
movsb
inc
ds
mov
inc
push
pop
or
xor
test
mov
add
sbb
adc
mull
xor
sbb
add
xor
loopne
scas
pop
and
and
dec
sbb
or
dec
xor
ficomps
inc
shll
shl
mov
push
shrb
push
std
jg
pop
in
jns
push
dec
xor
xor
jb
pop
mov
jns
pop
push
je
out
pusha
fistpll
push
stos
lods
add
std
decl
lods
push
ja
cmp
sub
sub
test
es
dec
pop
in
jnp
jae
pop
pop
xor
mov
and
mov
daa
mulb
pop
dec
bound
cmp
cmp
pop
daa
pop
dec
addr16
aaa
sub
es
das
bound
das
stc
into
dec
xor
push
addr16
stos
test
daa
mov
addr16
xor
and
push
fs
push
and
mov
and
push
and
outsl
negb
in
lahf
xchg
add
fs
xchg
sarl
stos
add
int
jmp
mov
add
ret
jge
push
mov
testl
lock
das
fcompl
lea
lcall
pop
push
loop
dec
sub
jle
add
jle
paddusb
inc
adc
add
scas
mov
dec
pop
pop
pop
repz
pop
pop
adc
cmp
mov
out
in
pop
cmp
add
or
shrb
add
adc
cmp
lods
movsl
pop
mov
pop
push
pop
push
insl
mov
add
add
mov
push
or
test
push
adc
push
ds
lods
out
mov
jle
dec
push
dec
add
pop
bound
insb
jo
add
ljmp
cmpsl
test
popf
add
ret
into
ror
aas
sbb
jecxz
push
mov
out
decb
jnp
out
lret
push
xor
mov
das
mov
jl
adc
std
lret
push
mov
mov
jge
rcrl
mov
mov
popa
cmp
adc
and
add
rorl
jle
stc
and
pop
das
movsl
push
ret
mov
lahf
cmpsl
add
movsl
adc
add
or
nop
xchg
push
pushw
inc
add
push
jbe
std
out
fildl
inc
adc
mov
stc
mov
subb
clc
add
lcall
add
push
xor
inc
mov
insl
fisttpl
adc
push
push
adc
sbb
mov
es
out
mov
push
push
pop
sub
pop
addr16
and
insb
ss
push
ss
das
imul
dec
imul
jae
dec
jne
push
push
jbe
jno
sarb
add
push
inc
cs
pop
dec
xchg
mov
push
add
pop
out
stos
clc
mov
jl
push
xorl
test
sub
insl
sti
xchg
arpl
xor
mov
sahf
sbb
adcb
test
or
out
repz
add
arpl
insb
mov
adc
loopne
xor
fs
push
lcall
jo,pn
jae
dec
jl
mov
js
xor
fnstsw
adc
sbb
scas
imul
movsl
pop
jle
cmpsb
js
add
jl
jbe
subb
popf
push
or
fdivl
movsb
test
mov
test
adc
ss
scas
xchg
scas
ss
mov
xchg
adc
fstpt
mov
adcb
xchg
and
fisttpl
and
cltd
mov
sub
es
sti
mov
mov
sub
cmp
add
mov
insl
xor
push
xor
push
inc
scas
addl
mov
sbb
mov
add
scas
adc
rolw
mov
ja
or
xchg
add
mov
mov
test
movsl
ret
lods
ss
data16
enter
xor
inc
aas
mov
cmp
insl
rorl
mov
cmpsl
roll
lods
data16
outsb
fildl
xchg
inc
mov
dec
mov
push
mov
mov
insb
outsb
pop
mov
mov
jmp
mov
mov
inc
mov
pop
mov
xchg
dec
mov
arpl
int
jbe
mov
push
ret
flds
adc
fldl
push
iret
sbb
xlat
in
ret
call
add
fucomip
add
rolb
mov
cmpsb
pop
rcl
push
les
add
imul
js
int
leave
aad
jne
push
jns
filds
dec
ret
loope
jecxz
data16
push
enter
pop
roll
hlt
idiv
sub
mov
in
jle
sti
in
fcmovnbe
out
shr
add
push
aam
jle
outsb
je
mov
rcr
in
dec
fistpl
gs
sahf
fdiv
es
subl
push
lcall
jbe
fwait
xchg
add
or
mov
movsb
out
lods
mov
loope
into
jbe
fcmove
ret
cs
ss
mov
fcomps
xlat
outsb
in
fcmovnu
or
es
adc
shl
push
int3
out
fiaddl
into
xchg
fsub
inc
subb
push
test
fimuls
fildl
pop
test
out
call
lods
out
mov
cmc
inc
cs
inc
roll
fucomip
adc
mov
xchg
int3
fidivrs
int3
outsb
rorl
clc
insl
fwait
int
push
enter
leave
hlt
xlat
repz
call
lahf
test
out
std
cld
add
test
enter
rol
sbb
mov
xor
xor
inc
mov
loope
inc
inc
inc
cmp
push
pop
inc
xor
aas
xor
pop
sti
int
sub
adc
or
pop
cmp
push
push
push
fs
xchg
mov
mov
push
push
push
inc
cmp
cs
cmp
jp
test
mov
rol
in
in
mov
lods
std
jg
lcall
jge
pop
dec
cmp
inc
dec
dec
pop
push
push
bound
sub
pushl
lea
lahf
mov
lahf
xchg
jb
insl
insb
arpl
ljmp
dec
dec
cmp
cmp
sub
pop
pop
pop
bound
addl
aaa
clc
jmp
loopne
out
fidivl
subb
dec
aaa
sub
fwait
jge
pop
pop
sbb
cltd
cltd
pop
les
jmp
loopne
mov
pusha
imul
dec
cmp
xor
pop
mov
sbb
sbb
pop
call
mov
xchg
push
mov
pusha
cs
addr16
mov
sahf
pop
mov
pusha
mov
pop
jl
popf
scas
nop
andb
jg
sti
cmp
pop
pop
jnp
mov
ljmp
and
ret
inc
je
cmpsb
mov
inc
xor
sbb
sbb
pop
push
sbb
fcmovu
loopne
loopne
and
push
int
ret
ja
mov
or
push
pop
in
into
sbbl
and
or
pop
mov
pop
sti
int
mov
or
pop
out
pop
pop
pusha
xchg
dec
mov
push
push
or
pop
add
mov
pop
mov
xor
or
stc
out
and
pop
jne
push
bound
xchg
fimull
sbb
fistpll
je
xor
or
out
cli
sti
lock
bound
mov
mov
and
std
jmp
pop
inc
sub
fs
fisttpl
add
icebp
pop
jne
pushf
mov
mov
fsubl
add
cmc
jae
rcrl
or
sti
std
pop
fsubrs
lods
mov
ja
sbb
fcomps
push
les
mov
sbb
sbb
imul
jle
add
pop
push
add
mov
repz
sbb
push
adc
or
pop
out
sbb
lahf
or
pop
cld
stc
sbb
lods
adc
pop
sti
sti
cli
lock
addr16
rcrb
sub
insl
fistpl
out
pop
pop
and
push
sbb
sbb
shr
ficompl
pop
clc
xchg
adc
sbb
push
jg
jno
fcmovnu
pop
loop
pop
clc
lahf
cmp
shlb
add
push
cli
aas
sbb
pop
jmp
cmp
pop
std
into
stc
rcrl
and
divb
lods
lcall
mov
xor
or
fcmove
cmp
into
or
int
pop
mov
loop
mov
xchg
push
and
into
push
pusha
loopne
lahf
into
pop
sub
push
jnp
pushl
jbe
pop
push
dec
aaa
es
sbb
and
add
int3
or
sbb
pop
sub
cmp
popa
push
mov
clc
mov
jle
dec
ss
stc
mov
test
or
mov
stos
or
mov
pop
cli
in
int
jo
jbe
stos
pop
sub
pop
pop
push
sbb
lret
inc
popa
pop
fwait
test
mov
mov
mov
mov
sti
fwait
test
sub
adc
xor
mov
test
jg
mov
push
inc
push
push
or
fwait
insl
outsl
jg
jae
js
jnp
xor
imul
pop
js
adc
jb
sbb
jge
push
cmp
in
or
cld
sub
and
insl
mov
add
fcompl
pop
pop
int3
out
fwait
pop
add
add
add
insb
fbstp
lock
jae
test
xchg
xchg
inc
negb
and
add
cli
nop
add
cwtl
and
mov
mov
adc
xor
jbe
add
push
insb
stc
imul
mov
cwtl
cwtl
add
mov
sbb
adcl
xchg
and
mov
mov
add
mov
arpl
pushl
xor
mov
or
mov
adc
test
pop
xor
add
xor
sbb
cmp
adc
add
cmpsb
xchg
ss
fcmovnbe
push
aaa
push
or
cwtl
add
aaa
fwait
add
cmp
cmp
cmp
sbb
sbb
mov
imul
in
sbb
push
inc
push
push
inc
popf
add
inc
lcall
aaa
jg
insl
sbb
fisubs
sub
sub
fcomi
jg
dec
nop
xchg
add
dec
cltd
add
dec
push
cs
dec
sub
cli
mov
mov
push
lahf
add
push
sahf
add
pop
movsb
stc
in
mov
and
push
das
push
mov
insl
inc
mov
pop
pop
ss
push
xor
xor
cmpsb
mov
outsb
incb
aaa
pop
movsl
add
pop
xor
and
ds
mov
cld
mov
cmp
cmp
test
cmp
out
push
das
clc
insl
mov
pop
jl
dec
insb
cmpsl
add
dec
inc
imul
push
jae
pop
jge
inc
push
add
dec
inc
insb
push
inc
outsb
mov
jmp
ds
push
imul
inc
outsl
mov
mov
arpl
push
jae
cmpsb
stc
insl
jmp
mov
ja
push
js
add
mov
stc
push
jl
add
jne
add
push
jl
push
jge
repz
out
lds
pop
push
pop
jle
add
add
pop
mov
cmp
push
cmpb
add
int
outsb
orl
enter
out
mov
push
mov
lds
popa
xchg
mov
push
sub
imul
xchg
into
pushfw
push
in
mov
jge
iret
mov
jno
push
je
rcrl
xchg
aad
xchg
xlat
add
es
aad
push
rol
push
dec
faddl
jg
push
add
pusha
push
insl
push
out
xchg
add
inc
cmpsl
imulb
inc
cmpsb
mov
fdivl
cmpsb
stos
push
mov
mov
rol
das
mov
mov
daa
push
lock
into
cmpsb
test
call
movsl
ficoms
test
xchg
mov
data16
push
lcall
movsl
mov
insb
mov
loopne
scas
out
loope
push
mov
stc
fldt
into
data16
loop
lret
out
mov
repz
in
jmp
cs
add
shr
sbb
sbbb
mov
lock
repnz
rolb
ffreep
push
sbb
aam
rcl
xchg
fmuls
push
xor
clc
lock
ljmp
jbe
jge
xchg
movsl
lcall
bound
jg
pop
pop
outsl
mov
call
fcmovbe
mov
popf
xorb
jmp
test
int3
ss
shl
in
fnstcw
stc
xchg
jp
pusha
pop
push
jae
push
mov
lds
sub
repnz
stc
out
inc
enter
mov
imul
sbb
sub
shr
mov
jg
dec
aas
cmp
movb
out
xor
push
enter
pop
push
dec
ds
repz
cmp
jmp
add
xchg
xchg
inc
or
ljmp
repnz
inc
aas
inc
cmpb
mov
out
sub
push
sbb
repnz
cld
out
sub
out
xchg
inc
aaa
fdivr
aas
jns
jle
into
faddl
cld
out
cmp
jle
sti
out
lfs
mov
pusha
in
cmc
sbb
mov
lahf
lea
jle
call
das
out
pop
jo
cld
adc
jg
lcall
cwtl
push
push
cs
pop
adcl
mov
add
out
shl
aad
ret
aas
test
stos
xchg
subl
lods
mov
sar
mov
cwtl
mov
push
dec
jg
inc
pushl
xchg
stos
mov
loope
jmp
cwtl
xchg
pop
sbb
rcll
adc
push
dec
add
push
dec
dec
subb
dec
dec
inc
inc
cmp
inc
inc
pop
call
mov
adc
fs
cld
not
lret
pop
out
sti
in
adc
adc
adc
in
cmp
push
pop
mov
loop
and
pop
xor
and
les
xor
pop
scas
jge
fistl
pop
and
testb
popa
mov
and
mov
orb
imull
lret
les
and
mov
pop
pop
std
idiv
std
or
pusha
movlps
imull
mov
and
pop
into
test
subb
xchg
pusha
xchg
scas
or
pop
es
or
std
sbb
rcrb
sub
sbb
out
fidivl
add
pop
mov
add
pop
add
add
int3
dec
add
lret
push
pop
mov
mov
rcrb
lahf
mov
stos
scas
rcrb
and
sbb
stos
push
pop
pusha
xchg
popf
pop
or
pusha
loop
inc
popa
lds
add
jne
pop
xor
xchg
adc
dec
cmp
out
jge
out
stc
jns
idiv
jnp
jns
idivb
idivl
out
jnp
std
decl
out
jmp
pop
sti
out
ja
jnp
dec
cs
call
idivb
out
jne
out
decl
scas
out
cmp
ja
fdivrp
decb
es
jle
push
stc
ds
sbb
push
jge
scas
pop
out
out
pop
sub
lahf
push
inc
pop
out
daa
jnp
push
into
fcompp
idiv
out
fisttps
ja
mov
lahf
test
lcall
popf
adc
out
jnp
pop
push
out
mov
xchg
out
es
xchg
mov
pop
mov
je
ja
push
push
cmpsl
out
jg
sahf
sti
mov
out
imulb
es
mov
sub
ja
pop
cmpsb
outsl
mul
inc
mov
pop
out
out
sahf
out
jo
pmaxsw
pop
pop
je
lret
push
pushl
idivl
out
into
scas
out
jg
out
lret
jo
xchg
pop
out
iret
dec
shr
popa
out
negb
jae
aas
mov
js
lods
stc
divl
aaa
testb
jbe
xchg
lock
lcall
cmp
jno
lcall
out
aaa
imul
psubsb
jle
dec
jg
shrl
pop
jnp
addr16
sbb
jg
out
fucomp
push
jbe
stc
jmp
mov
outsl
pop
mov
daa
mov
push
pop
jnp
pop
icebp
call
dec
pop
sub
out
ja
js
jo
mov
decl
jg
jge
aas
daa
ret
cmp
xchg
pop
mov
pop
pop
pop
ja
sub
lahf
pop
pop
lock
jmp
cmpsl
nop
sub
mov
into
jecxz
movsb
popa
push
inc
mov
decl
cs
cs
dec
push
fdivs
cmpsb
inc
sahf
xchg
in
xor
dec
mov
fbstp
sub
clc
push
movsb
jae
push
adc
dec
pop
xchg
mov
push
lods
pop
data16
inc
sti
push
fbld
jbe
inc
mov
shll
addr16
push
or
dec
clc
jmp
xchg
mov
jl
mov
xchg
out
shlb
inc
addr16
xor
and
push
incb
xchg
nop
adc
movsl
mov
xor
pop
cmp
pop
mov
and
lock
dec
lock
mov
push
icebp
push
ds
lcall
jno
push
mov
call
mov
add
je
incl
push
add
cmp
fmuls
mov
out
dec
and
stos
mov
xchg
stc
mov
pushl
fdivr
jnp
mov
sub
rcll
cld
sub
push
or
xlat
sbb
sbb
mov
js
lods
clc
inc
popa
xor
lret
sbb
mov
out
cmp
lock
es
add
push
es
decl
push
xlat
outsb
fs
loopne
mov
js
jp
xchg
or
insl
repnz
lods
nop
mov
jmp
inc
jnp
sbb
dec
cmp
inc
rcl
scas
add
leave
arpl
incl
lret
loop
cmp
stos
frstor
enter
mov
call
and
adc
add
or
lret
fildl
mov
scas
nop
cli
xchg
xor
adc
mov
mov
insb
pop
sub
and
sbb
inc
shrl
insl
aad
cmp
int3
repnz
inc
mov
add
shl
fidivrs
xor
aas
shrb
lcall
jg
add
xor
iret
iret
adc
sbb
lock
ljmp
or
mov
rcr
xlat
inc
int3
and
icebp
arpl
cmp
jno
add
addr16
pop
dec
cmp
pop
xchg
scas
xchg
jno
inc
dec
decl
jae
push
sbb
lods
test
mov
in
std
jae
mov
pop
lcall
mov
ja
insl
mov
sbb
in
popa
movsb
cld
dec
push
mov
xchg
sbbl
incl
sub
mov
scas
lea
addb
sahf
jmp
pop
or
push
aas
decl
out
mov
lret
xchg
jmp
push
mov
mov
add
and
xchg
sbb
arpl
and
js
ss
xor
lods
stos
or
ljmp
test
mov
stos
dec
cmp
dec
mov
stos
inc
mov
or
push
sbb
cwtl
xor
sbb
jbe
andb
decb
and
push
xchg
mov
out
sub
jbe
push
nop
lcall
add
jmp
lods
dec
roll
adc
int3
sub
aam
inc
movsl
hlt
ud0
incl
sbb
sub
in
jne
addl
xor
sbb
xor
sti
fistpll
cmp
jg
repnz
insl
sbb
testl
pop
out
mov
ljmp
mov
mov
pop
es
das
pop
adc
inc
leave
fildll
imul
sbb
sub
mov
dec
mov
dec
pop
loopne
sub
adc
fstpt
bound
cmp
call
inc
in
lods
pop
lahf
xor
ljmp
xor
fisubl
rorb
sub
fcompl
lods
inc
adc
adc
aas
cmpsb
sub
stos
or
dec
lret
push
push
xor
imul
mov
mov
pop
ds
jge
dec
mov
in
mov
call
sub
mov
pop
out
cmp
or
mov
imul
and
and
fwait
lea
mov
sbb
and
fdivl
inc
cmp
incl
sub
xchg
js
hlt
cld
xchg
outsl
mov
xorl
negl
fisttps
lcall
daa
xchg
negb
mov
test
mov
mov
aam
int3
nop
fdivrs
xor
push
enter
pop
sub
push
andb
inc
pushf
add
cmp
fwait
dec
fdivr
jmp
adc
pusha
and
and
jne
xor
aad
fstl
fs
stc
xor
and
aaa
add
gs
mov
imul
sti
cltd
ret
lcall
push
bound
test
lret
lret
pushl
cmpsl
ljmp
sbb
adc
xchg
pop
test
or
loopne
call
xchg
orl
cltd
inc
lahf
sahf
je
pop
test
decl
xchg
mov
cmpsb
popa
sub
lret
sub
and
decl
jp
shlb
dec
sbb
addr16
movsb
jno
inc
js
pushf
pop
push
arpl
std
call
movl
add
mov
popa
add
lcall
imul
mov
enter
fldl
cwtl
xor
mov
ds
jmp
cmp
stos
test
and
jno
adc
jle
sti
cmp
call
mov
mov
mov
pop
sti
push
xor
jge
out
sbb
jge
mov
lds
and
notb
inc
jo
es
leave
int
and
rcrb
movsl
repz
lret
cmp
xchg
ja
mov
imul
hlt
out
xchg
test
xchg
xlat
jae
out
fistps
cmp
sub
sahf
jae
lods
shrl
jnp
adc
test
leave
dec
lcall
mov
add
aad
cmp
mov
sub
push
sbb
pop
and
out
fcoml
xchg
xorb
ljmp
clc
adc
jno
xorb
mov
mov
mov
jp
je
mov
push
or
lahf
inc
jno
hlt
and
mov
mov
lock
xor
shr
sbb
push
in
insb
jecxz
adc
jnp
call
mov
js
jnp
int
inc
dec
test
adc
int
in
or
or
movsl
call
call
clc
add
push
int
in
push
mov
mov
cmp
dec
adc
pop
cmpsl
xchg
loop
ss
xchg
dec
sub
mov
idivw
repnz
jno
stos
stc
test
mov
test
subb
adc
loopne
decl
mov
icebp
add
inc
or
cmp
aad
push
comiss
cmp
pop
pop
daa
cmp
mov
or
movsl
sub
sbb
fisttps
mov
adc
add
pop
xchg
sarb
data16
dec
and
push
shlb
dec
push
mov
popf
add
sahf
and
xchg
sbb
cmp
and
movsb
xor
aaa
and
and
dec
sbb
cmp
or
dec
and
clc
dec
push
dec
leave
rorb
bound
and
pop
repnz
xor
adc
jbe
addb
or
mov
leave
or
pop
adc
inc
adc
dec
dec
gs
mov
cmp
inc
mov
and
pushf
inc
mov
lcall
mov
hlt
lods
dec
dec
push
dec
scas
fisubs
or
sbb
int3
add
pop
adc
bound
dec
mov
nop
aam
mov
adc
push
xchg
adc
push
add
rorb
xor
xchg
sbb
and
test
mov
cmp
cltd
inc
jo
xchg
xchg
push
and
push
add
push
adc
adc
xchg
dec
xchg
and
xchg
cltd
roll
int3
insl
ja
dec
mov
and
outsb
adc
and
addb
rol
mov
xor
adc
lcall
and
data16
sbb
adc
lret
push
xchg
cs
xchg
and
mov
add
shlb
or
jl
mov
add
fimull
push
pushf
inc
pop
sbb
push
andb
xchg
or
mov
movsl
or
sbb
int3
mov
and
adc
sbb
mov
add
ret
sbb
scas
add
inc
mov
dec
adc
dec
pusha
add
pushf
js
adc
xchg
sarb
add
mov
scas
mov
testb
inc
inc
cmp
mov
cmpsb
cli
leave
add
xchg
mov
inc
and
fisubrl
jo
fimuls
popf
cmp
jo
dec
adc
cmpb
dec
jno
cltd
jo
ss
push
fcompl
add
or
pmulhuw
push
in
pusha
addr16
jo
mov
push
push
sub
out
or
test
pusha
aaa
outsb
and
pop
mov
stos
add
movsl
cmpl
js
add
or
inc
add
or
ret
push
xchg
cltd
cltd
cld
cs
pop
shll
cwtl
scas
sub
ficoms
int3
fidivs
jbe
ret
cli
nop
and
in
mov
mov
pop
xchg
xchg
fcoms
into
ds
adc
and
ret
and
insb
pusha
or
xor
rorl
xor
sbb
jbe
nop
cmp
loop
out
inc
cli
cmpsb
pusha
out
sbb
shrb
inc
mov
xchg
push
scas
repnz
xor
je
es
sub
or
out
mov
push
dec
hlt
xchg
add
loopne
pusha
jbe
sbb
sub
outsb
sbb
cmpsb
rorl
or
pusha
or
mov
loop
cld
enter
push
fs
push
mov
inc
cmova
mov
mulb
sbb
xor
lret
in
push
dec
cmp
dec
int3
cmp
xor
push
js
sahf
adc
xchg
cld
cmp
lods
push
or
push
cmp
cld
enter
sbb
adc
fcoml
loopne
dec
and
das
xchg
mov
or
inc
mov
push
std
and
adc
pop
sub
jbe
leave
ljmp
js
inc
sub
jb
pop
sbb
sbb
in
jl
xor
popa
jne
test
push
or
sub
ret
pop
clc
cmp
es
xchg
fadd
and
lock
mov
sbb
add
jbe
cmp
in
and
sbb
add
or
and
ss
sbb
ret
insb
icebp
mov
push
loope
push
js
and
jmp
adc
movsb
jl
ret
push
aad
mov
int3
inc
pop
or
inc
out
je
or
add
xor
push
sbbb
js
cmp
jl
xchg
popa
int
push
inc
pop
push
mov
pusha
push
shll
add
rcl
cltd
ret
call
xchg
add
loope
add
stos
add
test
out
push
mov
and
scas
xchg
pop
shlb
fadds
xor
mov
call
loopne
fsubr
inc
xor
call
repnz
add
sub
inc
jmp
sbb
adc
cmp
fldenv
leave
fidivrs
mov
lds
fiaddl
jb,pt
rcrb
mov
cmp
test
push
sti
jb
mov
enter
jmp
add
int
dec
ss
pop
bound
insl
imul
push
add
or
and
mov
sbb
add
add
dec
pushf
lods
loope
or
push
inc
inc
test
xor
jp
lret
icebp
cmp
adc
adc
mov
inc
inc
mov
inc
push
fiadds
push
mov
ficoml
outsb
test
inc
sub
dec
and
lock
imul
sbb
or
or
adc
push
aam
lret
sbb
and
cmc
xchg
push
cmpsl
xchg
mov
rolb
out
sub
inc
insb
inc
test
loopne
bound
test
xor
mov
pushf
dec
sub
and
and
and
ror
orb
pop
jo
push
and
add
ficoms
sub
dec
mov
fdivs
xor
aam
push
sbb
insl
mov
push
dec
push
aam
pop
pop
sbb
lret
and
mov
call
inc
imul
or
mov
xchg
movsl
daa
imul
into
dec
dec
adc
sbbl
xchg
add
inc
pop
and
jb
pusha
pop
mov
xchg
jbe
fsubrs
adc
pop
push
and
sbb
mov
movsb
xor
xchg
imul
ret
mov
push
inc
add
orl
ljmp
push
adc
pusha
xor
dec
jbe
fcomps
lods
jo
fcoml
dec
or
insb
enter
xor
sbb
and
and
and
jb
add
je
dec
scas
mov
repnz
fiaddl
jno
aaa
sbb
enter
insl
sbb
add
pop
in
popa
fs
mov
adc
xor
rcrl
movb
sub
sahf
sbb
push
and
dec
mov
test
ljmp
ret
add
adc
loope
xor
lcall
push
cmp
popa
es
nop
pop
inc
and
xor
lret
add
push
out
sahf
xchg
loop
js
jb
sub
movl
stos
stos
xor
dec
inc
adc
and
inc
mov
push
push
js
xchg
imul
ret
and
cltd
leave
and
je
jnp
cltd
push
je
loop
out
ret
enter
ljmp
lock
pop
sbb
pop
xchg
mov
mov
shll
nop
inc
inc
or
ret
push
clc
sbb
xor
sbb
add
inc
adc
inc
insb
jmp
dec
outsl
fs
gs
popa
outsb
fs
gs
inc
js
loop
mov
gs
cmp
fimull
insb
or
push
inc
jne
jb
outsb
aas
mov
iret
insb
push
and
inc
outsl
jne
push
dec
xchg
inc
imul
push
jb
inc
imul
jb
insl
jo
inc
into
mov
sbb
addr16
jns
gs
pop
inc
sbb
iret
mov
popa
jo
gs
outsl
jns
push
dec
outsb
outsw
adc
cld
gs
imul
outsb
jp
jne
or
fldt
push
push
dec
jb
push
arpl
sbb
inc
jb
je
dec
outsl
popa
fs
imul
sahf
push
js
sub
outsb
jbe
outsb
insl
xchg
pop
adcb
jae
xor
jg
fsts
sbb
push
outsb
push
pcmpgtb
jo
pop
pop
fmull
push
mov
mov
cmp
add
dec
jb
outsl
dec
inc
inc
jns
ds
inc
push
je
jbe
imul
mov
dec
jns
cmp
imul
pusha
or
adc
sahf
arpl
xor
fwait
test
mov
mov
cmp
inc
push
mov
popf
push
push
pusha
popa
imul
jp
mov
cmovbe
and
arpl
pop
push
push
add
dec
shrl
imul
jecxz
aaa
dec
addr16
daa
dec
popa
cmp
push
jbe
dec
subl
pop
xchg
push
pop
movl
lods
mov
andb
sub
ficoml
subb
daa
xchg
adc
dec
popa
inc
jbe
vmptrld
ret
dec
push
sahf
es
inc
dec
repnz
enter
adc
inc
push
mov
imul
test
inc
inc
adc
jo
or
sub
mov
jp
push
sbb
aas
fdivs
push
arpl
in
imul
jne
push
xchg
cmpl
insb
imul
repz
gs
std
outsl
bound
push
cmp
insb
inc
jae
insb
jbe
cmp
in
add
push
pushf
insb
fadds
sbb
cmp
int3
inc
jb
and
sub
divb
add
mov
adc
mov
mov
add
push
dec
imulb
les
mov
les
jnp
mov
push
bound
inc
pop
push
or
add
add
add
fldl
rclb
or
or
push
adc
adc
sbb
outsb
dec
xor
cmp
fdiv
add
sbb
pop
xchg
xor
add
je
dec
add
jae
mov
inc
dec
cmpsl
pop
mov
mov
negl
dec
sbb
jno
dec
jnp
dec
or
je
addr16
outsl
inc
and
sbb
and
add
mov
add
scas
xor
notb
add
shrb
lahf
push
jb
gs
mov
cmp
push
ljmp
xchg
out
loop
je
jae
push
or
or
rcrb
aas
aaa
add
mov
xor
cmp
and
xchg
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
addb
add
add
addb
add
xor
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
clc
add
cmp
add
and
add
dec
add
cmp
add
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
add
add
add
xor
add
cmp
xor
add
pusha
add
xor
add
mov
xor
add
mov
add
fadds
xor
add
add
add
sub
add
push
add
add
js
add
mov
add
add
add
add
lock
add
sbb
add
inc
push
add
add
add
or
add
add
call
or
add
add
add
add
add
roll
add
add
add
add
add
roll
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
loop
add
add
add
add
add
add
add
loop
add
or
add
add
add
add
add
add
shr
add
add
add
add
add
add
dec
out
add
mov
add
or
add
lock
mov
add
or
add
add
add
add
call
add
add
add
add
add
add
add
rolb
add
or
add
add
add
incb
add
or
add
add
add
add
add
add
add
or
mov
add
or
add
add
orb
add
add
add
add
add
or
add
or
add
add
add
add
add
push
add
call
add
add
add
add
add
add
and
mov
add
or
add
add
add
add
call
add
add
add
add
add
add
add
mov
add
or
add
add
shrb
add
call
add
add
add
add
add
mov
or
add
add
add
add
add
inc
add
mov
add
or
add
add
add
inc
add
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
call
add
add
add
add
add
sbbb
rolb
add
or
add
add
push
pop
add
call
add
add
add
add
push
add
or
add
add
add
add
add
jne
add
add
add
add
add
add
add
call
add
add
add
add
push
add
nop
addl
add
add
or
add
push
add
sbb
add
or
add
add
add
add
add
add
addb
addb
add
or
add
out
add
add
add
add
add
add
add
push
add
add
add
or
add
push
add
pop
xchg
add
orb
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jbe
imul
dec
add
jb
jae
add
add
insb
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
insb
add
add
outsl
add
add
add
popa
add
jae
add
add
bound
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
imul
and
dec
add
jne
jb
and
inc
add
arpl
and
push
add
popa
add
jae
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jb
je
jns
jb
and
push
add
add
and
inc
add
push
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
ljmp
sub
ljmp
ss
push
ljmp
jb
add
sub
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
