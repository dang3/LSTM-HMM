push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
or
movb
pop
mov
shlb
mov
pusha
call
add
pop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
fdivs
pop
es
mov
dec
jge
les
negl
adc
jbe
aad
sub
insb
mov
xchg
pop
jbe
imul
jg
mov
jne
mov
lds
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
out
sub
inc
mov
out
pop
aam
add
out
fwait
scas
mov
stos
add
add
les
jns
popf
nop
sbb
sbb
jge
jp
jae
cmp
sbb
lods
cli
pop
mov
lcall
mov
in
jp
fidivrl
inc
jg
xor
popf
sbb
push
add
loop
daa
mov
mov
jp
cmp
add
test
push
sub
xlat
inc
mov
outsb
add
and
movb
cmpsb
pop
mov
jg
lahf
pop
dec
mov
or
dec
out
test
lds
out
cmp
mov
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
jno
pushf
outsb
je
lcall
adc
add
push
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
xor
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
inc
mov
push
dec
scas
jno
adcl
sub
fdivr
or
mov
cmpsb
repz
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
jle
xchg
jbe
mov
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
.byte
cwtl
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
and
add
add
add
loop
add
ret
add
add
add
and
add
add
and
add
add
and
add
add
inc
and
add
and
add
add
pop
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
and
add
add
add
loop
add
ret
add
add
add
and
add
add
and
add
add
and
add
add
inc
and
add
and
add
add
pop
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
inc
outsl
jo
inc
imul
outsl
popa
fs
imul
add
rolb
dec
gs
jo
gs
jb
jns
icebp
add
imul
jb
je
arpl
add
push
add
fs
je
insl
inc
add
sbb
gs
outsl
outsb
jae
insb
gs
add
add
je
jb
jbe
push
jns
gs
add
insb
jae
jb
outsb
push
add
inc
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
gs
outsl
outsb
jae
insb
gs
add
add
gs
inc
je
insl
add
mov
push
insb
gs
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
popa
jo
imul
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
je
imul
bound
gs
add
dec
add
arpl
inc
add
fwait
add
je
jbe
outsb
je
add
add
je
outsl
imul
jbe
jae
add
push
dec
inc
dec
xor
cs
insb
add
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
imul
jb
gs
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
inc
add
push
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jnp
jp
lods
lods
stos
add
cmpsb
test
mov
mov
mov
leave
lret
int3
int3
rcl
in
rcl
shl
rcl
shl
into
int
hlt
enter
enter
in
mov
mov
lods
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
leave
not
rcl
cld
fcom
xlat
std
fcomp
xlat
xlat
xlat
aam
aam
rcl
sar
int3
int3
int
aad
aam
ror
sar
ret
std
mov
mov
scas
iret
movsb
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
lret
rcl
aad
aad
fcomp
call
fdivr
aam
dec
int3
int
int
into
call
aam
dec
into
int3
mov
mov
mov
std
cmpsl
cmpsb
cmpsb
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
pop
add
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
enter
int3
call
rcl
call
xlat
fcomp
xlat
call
aam
int
into
dec
leave
leave
dec
into
into
inc
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
aas
inc
sbb
or
sbb
aaa
cmp
cmp
and
adc
pop
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
sarb
leave
leave
leave
dec
ror
call
aam
aam
aad
iret
ror
inc
mov
inc
ret
mov
mov
ljmp
mov
popf
xchg
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jge
jle
jle
jle
jo
jo
bound
mov
cmp
inc
inc
mov
outsl
outsb
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
lret
inc
mov
mov
mov
ljmp
movsl
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
cltd
cltd
cltd
in
addl
push
or
add
add
add
add
add
add
add
add
add
add
add
outsb
outsl
jo
pop
pop
pop
or
pusha
nop
mov
incb
jnp
jnp
jnp
outsl
jo
out
addr16
data16
ret
jg
jp
js
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
nop
incl
addb
xchg
xchg
lahf
lahf
mov
ficoms
nop
nop
jle
js
pop
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
mov
addb
decb
mov
jge
jle
jb
jb
jne
je
jge
jg
test
xchg
push
cmp
ss
cmp
movsl
mov
test
sti
stos
lods
stos
stos
lods
lods
test
movsb
movsl
std
fwait
fwait
cltd
xchg
xchg
xchg
decl
jg
jp
jp
jnp
jns
mov
cwtl
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
or
inc
inc
dec
insl
imul
test
leave
cltd
cltd
fistps
cltd
fwait
stc
xchg
xchg
nop
std
mov
xchg
mov
mov
lea
cltd
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
test
add
pop
adc
cmpsl
scas
call
cltd
xchg
cltd
incl
xchg
decb
xchg
xchg
sahf
popf
sahf
std
mov
mov
xchg
in
xchg
xchg
xchg
in
xchg
push
jne
push
or
inc
or
or
sub
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
mov
call
lahf
sahf
jmp
test
pushl
cmpsb
lods
mov
xchg
test
std
les
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
pushf
cltd
lcall
mov
call
xchg
xchg
xchg
xchg
sahf
sahf
pushf
movsb
movsb
movsl
test
test
movsl
movsl
movsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
popa
jne
jae
mov
jge
test
int
nop
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
movsb
mov
mov
lods
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
fwait
cltd
lcall
sahf
mov
std
mov
cwtl
fwait
out
nop
xchg
mov
cwtl
aad
cwtl
cltd
in
xchg
cwtl
out
mov
xchg
stc
xchg
test
std
xchg
je
cltd
push
cmp
dec
jle
lods
inc
jge
mov
jnp
mov
jae
mov
outsl
ljmp
adc
stos
or
lods
or
mov
jge
mov
mov
lods
pushf
mov
movsl
movsb
add
mov
add
pop
adc
mov
lcall
nop
xchg
call
cltd
fwait
lcall
sahf
mov
lcall
xchg
xchg
call
xchg
nop
call
xchg
fwait
cld
xchg
xchg
sahf
stc
sahf
lcall
popf
xchg
xchg
imul
xchg
dec
jns
cltd
cmp
imul
and
mov
adc
ljmp
adc
pcmpgtd
lods
packuswb
scas
adc
mov
imul
adc
mov
imul
aas
cmp
mov
scas
lods
scas
mov
movsl
movsb
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
popf
lcall
movsl
movsl
jmp
mov
xchg
decl
mov
decl
mov
fwait
jo
fwait
arpl
call
sub
decl
adc
or
xchg
add
call
add
lahf
add
ljmpw
outsl
pushl
sbb
jae
mov
and
rcrl
mov
xchg
lods
mov
lods
scas
mov
mov
movsl
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
ljmp
cmpsl
cmpsl
ljmp
cmpsl
cmpsb
lcall
mov
mov
decl
cmp
mov
arpl
mov
pop
incl
add
push
decl
add
nop
add
xchg
add
cltd
add
sahf
add
or
mov
outsb
pushl
sub
mov
sub
sub
jge
cs
movl
sarl
movsb
movsb
movsb
dec
mov
mov
add
add
add
lods
mov
push
adc
test
ljmp
sahf
jmp
test
lods
ljmp
mov
scas
scas
scas
jmp
mov
mov
popa
incl
or
push
incl
add
addl
incl
add
mov
push
call
add
lcall
jmp
adc
mov
aaa
cmp
leave
cmp
dec
cmp
call
cmp
mov
rolb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsl
ljmp
popf
jmp
lods
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
incl
or
xchg
push
incl
add
lea
push
decl
add
popf
add
mov
add
lods
add
mov
jb
ret
cmp
dec
inc
mov
rolb
call
inc
fmuls
call
dec
xchg
fisttpl
fisttpll
fistl
call
xchg
std
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
lcall
adc
jl
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
sbb
lea
pop
decl
push
call
add
pushf
add
mov
add
test
push
gs
and
dec
dec
nop
call
push
xchg
call
push
cltd
ficoml
fistpl
jmp
push
pushf
jmp
push
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
test
sahf
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jns
lahf
cltd
popf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
xchg
and
xchg
pop
arpl
xchg
sbb
nop
or
xchg
add
xchg
add
lcall
jmp
add
mov
data16
mov
xor
fcomps
ficompl
fbld
fisubs
jmp
cmpsw
jmp
gs
call
imul
faddl
ret
mov
cmpsb
mov
sahf
mov
add
add
add
inc
inc
adc
jb
lcall
lcall
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
outsb
lcall
daa
imul
xchg
or
xchg
add
cltd
add
mov
add
lods
add
mov
pushl
adc
roll
jmp
outsb
lods
jmp
jno
jmp
jo
ljmp
jmp
scas
in
je
out
je
out
je
jmp
mov
mov
test
lcall
sahf
add
add
adc
insl
js
lea
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsl
lods
lcall
xor
lahf
aaa
ja
mov
xor
fwait
sbb
pop
call
add
mov
add
mov
pushl
add
enter
fistl
jmp
ja
jmp
jg
in
jg
out
cmpb
lock
push
test
call
mov
inc
mov
test
daa
mov
mov
add
arpl
cmp
cmp
pop
pop
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
mov
mov
mov
cmp
movsb
inc
jge
mov
cmp
lcall
lcall
add
test
add
mov
gs
mov
add
dec
daa
cmp
movsb
ljmp
out
lea
push
pop
push
pop
push
xchg
push
xchg
xchg
stc
ret
in
pop
fnstenv
clc
stos
stos
stos
mov
popf
sahf
xor
pushf
sahf
add
add
add
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
inc
mov
jle
lcall
cmp
dec
test
movsb
xor
pop
lcall
add
test
pusha
ljmp
add
mov
add
leave
add
mov
out
mov
out
xchg
push
cltd
enter
lcall
negl
cld
popf
into
sti
popf
int
sti
cwtl
lret
xchg
ret
fistpll
enter
mov
mov
xchg
popl
cltd
lcall
xor
das
cs
cmp
push
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
ret
inc
mov
enter
mov
mov
ljmp
push
xchg
movsb
sub
fwait
pop
pop
lcall
add
lods
add
mov
mov
add
leave
add
or
inc
xchg
out
mov
push
cmpsb
into
push
movsb
int3
push
cmpsb
iret
cld
test
cli
cmpsb
iret
cld
test
sar
cld
stos
sar
cld
test
mov
int3
std
mov
mov
lahf
lahf
lahf
dec
xchg
xchg
xchg
add
cltd
fwait
add
add
add
sub
inc
inc
inc
bound
pop
xlat
je
jno
mov
mov
ret
mov
ret
ret
ret
ret
dec
mov
pushl
push
test
scas
push
mov
scas
dec
xchg
lahf
sbb
pushf
add
movsb
add
lods
add
mov
mov
add
int3
add
fadds
je
ficoms
in
pop
cmpsl
push
popf
lret
sti
lods
aam
cli
mov
cli
mov
cld
scas
sar
mov
mov
mov
std
mov
std
mov
std
mov
push
cmpsb
mov
dec
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
ss
outsb
mov
mov
xlat
fsubr
aam
fdiv
rcl
sar
int3
into
into
dec
leave
leave
dec
leave
leave
dec
lret
leave
inc
mov
jmp
push
mov
lods
jle,pt
sahf
push
popa
jmp
add
mov
fs
mov
add
rolb
outsb
call
add
fiadds
jae
ljmp
sti
lods
sar
mov
fcos
std
mov
fdivr
std
mov
mov
fdivr
std
rcr
std
mov
int
call
lret
mov
sahf
mov
or
add
add
xor
add
add
pop
or
enter
in
pop
out
call
test
in
leave
fucom
fsubp
fcmovu
fcomi
fsqrt
aad
fdivr
int
iret
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
add
faddl
ja
jecxz
ja
out
xor
sti
mov
loopne
std
inc
loope
inc
fdivrp
std
fdivrp
std
loopne
std
leave
std
enter
fdivrp
dec
sti
mov
enter
sar
mov
mov
xchg
adc
add
add
std
add
incl
std
std
add
div
or
in
in
pop
in
out
in
sub
out
out
dec
ljmp
xchg
out
out
in
out
fsubr
les
xchg
test
ja
mov
add
ljmp
add
mov
add
int3
add
xlat
add
fiadds
js
call
inc
popf
cli
mov
loop
std
int3
loop
std
int
dec
in
dec
in
std
int
dec
loope
std
shl
shl
shl
shl
sti
in
mov
inc
ret
cmpsb
test
mov
xchg
cwtl
add
add
add
incb
std
std
add
stc
testl
lock
in
repnz
pop
out
lock
cmp
out
in
pop
fsubp
loopne
les
xchg
sti
sahf
es
movsb
add
lods
add
mov
gs
add
movl
jb
fiaddl
je
in
jp
jmp
jl
negb
sti
mov
std
shl
dec
jecxz
shr
std
shl
shl
std
aad
xlat
call
std
std
fld1
fld1
shl
push
aad
in
fcos
leave
leave
leave
rep
stos
test
xchg
xchg
xchg
and
xchg
cwtl
add
std
cld
add
clc
add
sti
stc
add
cmc
hlt
or
aad
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
call
add
faddl
ja
out
js
in
sbb
cld
ret
fdivrp
std
xlat
jmp
std
fucomi
fucomi
fsubr
fsubr
jmp
in
fsubrp
jmp
jmp
cld
aam
push
ret
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsb
jo
xchg
xchg
xchg
add
loop
add
leave
sbb
lods
jnp
repnz
and
mov
add
mov
popa
mov
add
into
add
aad
jno
loopne
jne
ljmp
sti
pop
std
aam
loopne
fsubr
std
fucomi
fsub
std
aad
cld
shl
cld
shl
cli
shl
stc
iret
clc
int3
test
out
mov
fcomp
fdivr
mov
mov
fwait
cltd
lcall
fwait
lcall
add
add
fcom
add
mov
mov
lcall
add
mov
fs
mov
add
iret
add
fadds
jb
loopne
jns
jmp
xor
enter
loope
sti
lret
loope
cld
clc
mov
aad
repz
sar
icebp
mov
int
ljmp
ljmp
cli
call
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
into
int
mov
rol
mov
cmpsl
loopne
xor
pop
ljmp
add
mov
add
dec
push
jb
rorl
jbe
fsts
ja
loope
cmp
dec
cwtl
jmp
scas
lret
jmp
scas
std
loopne
ret
cld
fisubrs
neg
mov
enter
int3
in
lret
loopne
aad
loop
fadd
call
out
test
out
out
popf
ljmp
push
lods
stos
lods
adc
cmpsb
cmpsl
cmpsb
add
ret
mov
lahf
stos
aam
dec
cmp
cmpsb
sbb
lods
and
ja
mov
inc
test
ret
stc
lret
test
mov
out
mov
mov
enter
int
ror
int3
mov
int
mov
xlat
aam
jg
fcmovu
jb
loopne
gs
in
out
jmp
xor
cmc
div
and
repnz
sbb
fstp
or
mov
int
mov
add
mov
sarl
mov
xchg
lock
jbe
ljmp
mov
sarb
test
mov
pushf
lret
mov
leave
int3
jp
into
into
addr16
rcl
push
iret
rcl
dec
xlat
inc
rcr
aam
aam
fldenv
fistpl
fcmovu
fcoml
fucom
loop
loope
in
out
jmp
in
icebp
out
add
cld
testb
cld
add
incl
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandb
leave
lds
enter
int3
ror
and
aam
sbb
aad
adc
aam
or
xlat
aad
rcr
add
add
loopne
add
in
add
in
ljmp
incl
mov
mov
add
rol
ret
vmovaps
ret
les
mov
mov
push
rol
or
enter
leave
movl
lret
add
xlat
add
aam
aad
aad
aam
add
fsub
add
aam
add
loop
add
fsubp
add
out
add
icebp
lock
incl
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
rcl
jmp
aad
cmc
rcl
sar
into
iret
into
cli
int
int
int3
int3
lret
mov
mov
lods
stos
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
rcl
aad
call
dec
iret
iret
dec
iret
iret
dec
int3
lret
mov
mov
lods
lods
lods
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
jae
gs
inc
inc
dec
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
rcl
call
rcl
dec
lret
int3
inc
mov
mov
mov
ljmp
sahf
popf
xchg
xchg
xchg
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
jg
jnp
jp
addl
aam
push
mov
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
outsl
outsl
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
lcall
pushf
xchg
cwtl
fcoml
addb
jge
jl
js
jns
jnp
jns
jnp
jnp
jae
jae
push
push
push
cmp
jne
sahf
popf
popf
mov
lods
lods
rep
scas
scas
sti
scas
scas
lods
std
test
popf
pushf
call
test
call
mov
lods
jmp
scas
lods
leave
cmpsb
cmpsb
movsl
cltd
jae
je
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
xchg
mov
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
jo
orl
cltd
repnz
xchg
xchg
std
mov
call
pushf
popf
ljmp
test
mov
mov
mov
xlat
movsl
movsb
movsl
pop
addl
add
pusha
pusha
popa
or
scas
mov
cmpsl
sahf
mov
decl
mov
xchg
xchg
xchg
std
sahf
lahf
mov
negl
jg
stos
push
push
push
jo
pop
push
outsl
imul
jge
subl
mov
lcall
fwait
pushl
outsl
xchg
mov
dec
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
call
cwtl
cltd
cltd
fwait
pushf
popf
sahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
insb
xchg
xchg
pop
jle
popf
dec
jl
movsb
inc
js
lods
aaa
jbe
scas
sub
mov
insl
ljmp
sbb
mov
lods
mov
scas
scas
scas
jle
mov
add
add
add
pusha
pusha
popa
or
mov
in
movsb
test
cltd
xchg
cwtl
lcall
mov
mov
decl
addl
cld
xchg
popa
cmp
dec
jns
xchg
cmp
nop
sub
xchg
sbb
lcall
or
push
pushl
sbb
mov
and
mov
stos
mov
scas
scas
lods
xchg
sahf
popf
sahf
adc
add
add
pusha
pusha
popa
or
lods
mov
stos
mov
mov
ljmp
cmpsl
cmpsl
lcall
pop
jns
mov
imul
mov
pop
incl
or
mov
push
call
add
cmpsl
or
mov
je
mov
sub
jle
enter
lret
xor
xchg
inc
test
divl
test
add
add
add
popa
pusha
popa
or
cmpsb
test
jmp
scas
scas
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
decl
add
xchg
add
sahf
add
cmpsl
add
mov
outsb
inc
ss
lret
inc
mov
into
inc
call
inc
nop
call
inc
xchg
flds
call
popa
popf
dec
cmpsl
mov
mov
movsl
movsb
daa
std
incb
add
add
pusha
popa
pop
or
popf
mov
ljmp
mov
pushl
mov
stos
lcall
pop
arpl
nop
sbb
lea
pop
decl
add
xchg
add
mov
add
scas
add
ja
rorb
fstps
fistpl
fistps
jmp
pop
mov
jmp
insb
cmpsl
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jl
pushf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
cmpsl
add
scas
add
mov
xor
jmp
outsb
test
out
stos
ljmp
out
jae
jmp
jns
call
test
std
mov
test
inc
jg
addl
dec
dec
pop
insl
insl
imul
xchg
cltd
cwtl
xchg
pushl
mov
mov
mov
jne
lcall
jne
popf
sub
cwtl
or
pop
jmp
popa
pushl
or
xchg
jmp
js
ljmp
push
xchg
push
xchg
fisubrl
mov
push
cltd
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
lcall
ljmp
add
mov
adc
fistps
in
xchg
mov
push
xchg
push
xchg
push
fwait
lret
fwait
leave
push
cwtl
lods
mov
lods
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
xchg
test
cmpsb
push
xchg
lods
dec
cmp
and
lahf
add
pusha
pushl
add
lret
fisubl
cmp
cmc
mov
iret
cli
stos
sar
cld
stos
sar
sti
stos
sar
lods
sar
stc
test
jmp
mov
dec
rol
stos
stos
stos
jne
pushf
pushf
or
add
add
dec
dec
push
aaa
jb
jae
stos
test
into
out
into
lret
cmc
lret
sti
lret
std
leave
leave
mov
pusha
mov
stos
inc
cmp
adc
cmpsl
add
mov
arpl
rolb
dec
add
flds
push
xchg
mov
mov
fcos
mov
xlat
mov
sar
jmp
leave
dec
rol
scas
lods
scas
mov
add
add
add
add
pop
or
aad
dec
loopne
jecxz
fsubp
fistps
fcmovnu
xlat
xlat
out
shll
test
jb
cmpsb
push
pop
ljmp
add
lret
call
add
jecxz
jp
lock
mov
std
ret
loope
inc
loope
std
loopne
dec
fdivrp
std
leave
loopne
dec
loope
std
out
mov
lret
mov
xchg
pushf
popf
pushf
sbb
add
add
incb
std
std
add
jmp
in
sbb
in
in
xor
loop
jecxz
les
mov
mov
add
mov
fs
add
into
add
fildl
je
call
insb
mov
std
ret
fdivrp
sti
shl
call
in
shl
call
out
call
out
fsubr
std
shl
push
enter
int3
sar
mov
mov
add
incl
std
incb
cld
cld
pop
aad
aam
mov
pop
xchg
popf
or
pusha
pushl
add
roll
jo
fiadds
jbe
in
pop
mov
clc
mov
std
shl
fldl2e
fucompp
fsub
cld
xlat
jmp
std
fsubr
cld
shl
push
enter
rcl
sti
mov
lahf
sahf
das
add
add
into
into
into
or
bound
ljmp
dec
add
add
loop
ja
in
xor
stc
int
clc
leave
test
aad
icebp
ret
out
ret
sar
in
out
aam
jmp
shl
in
fucomp
mov
stos
das
std
incb
aam
push
mov
jae
or
mov
insb
inc
pop
jae
lret
and
aad
xchg
ficoms
clc
loop
mov
out
jecxz
lret
mov
loope
mov
lret
sarb
in
ficompl
in
jmp
rorl
mov
add
lods
lods
stos
add
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
into
mov
ret
mov
int
ror
iret
pop
rcl
rorl
xlat
fnstcw
fildll
in
frstor
jecxz
lock
in
jmp
fiaddl
std
incl
std
add
mov
outsb
mov
lods
jns
mov
mov
mov
mov
ret
leave
leave
and
rcl
pop
rol
adc
rcl
or
loope
or
int
add
incb
std
std
incb
lcall
shufps
or
int3
int3
int
stos
stos
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
ret
mov
xchg
leave
enter
mov
rol
mov
scas
scas
scas
insb
stos
stos
lods
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
aam
rcl
sar
into
iret
int
stc
mov
test
jle
pop
pop
pop
add
add
add
add
add
add
add
add
jno
jno
data16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
aam
dec
iret
int
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
jne
je
test
aad
jo
ret
bound
insl
insl
insl
jb
popa
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jb
and
add
pop
add
add
je
jb
popf
xchg
pushf
mov
xchg
mov
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
lea
lods
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
popf
sahf
popf
cmc
cltd
lcall
push
push
push
imul
jle
mov
xchg
testl
mov
mov
jo
mov
mov
stos
lods
lods
push
lods
lods
stos
add
add
add
mov
mov
scas
cld
xchg
xchg
xchg
lcall
fwait
cltd
lcall
fwait
lcall
mov
loope
jbe
out
xchg
fs
push
jl
pushf
inc
ja
cmpsl
ss
scas
sub
mov
jo
mov
insb
pushl
pushf
scas
lock
mov
imul
int
add
add
xchg
pop
scas
cmpsb
stos
test
popf
pushf
popf
jmp
movsb
movsl
call
push
decl
inc
je
mov
imul
push
arpl
xchg
adc
xchg
or
mov
sbb
je
mov
daa
jp
lds
inc
cltd
scas
imulb
stos
stos
or
add
add
je
movsb
popf
lahf
test
test
scas
scas
pushl
mov
decl
or
mov
push
decl
add
mov
adc
shll
dec
ds
roll
call
inc
mov
aad
xchg
dec
lcall
movsl
mov
add
imul
test
mov
lods
pushl
mov
movsl
call
push
call
or
xchg
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
mov
call
pushf
mov
test
cmpsl
test
add
add
arpl
adc
pushf
pushf
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cwtl
and
xchg
pop
pop
lcall
add
mov
xor
jmp
outsl
lods
jmp
jns
in
jp
push
jge
push
jg
ficompl
mov
and
add
add
adc
push
cmp
mov
mov
ret
mov
fs
movsl
inc
jge
sahf
and
popf
add
pop
pushl
outsb
fmull
out
lea
notb
enter
jmp
cmpsl
mov
movsl
movsl
sub
inc
aas
inc
adc
push
xchg
xchg
cld
rol
inc
ret
vcmpsd
test
sbb
movsb
add
mov
gs
add
aam
ja
in
insl
scas
push
test
stc
lods
sar
cld
lods
sar
std
scas
sar
std
lods
sar
jmp
enter
mov
ds
std
add
outsl
outsl
inc
scas
mov
mov
mov
aam
out
lret
lret
mov
mov
jmp
add
les
imul
out
xchg
testl
cld
rcr
std
rcr
inc
icebp
mov
shl
cmpsl
cmpsl
dec
addl
stos
add
in
jmp
call
out
inc
loop
in
fisubl
movsb
and
pusha
mov
add
fiadds
ja
out
cmp
cld
int
call
out
call
in
std
aad
shl
push
enter
int
lods
scas
scas
popa
addb
add
std
add
incb
int
shrb
lahf
sbb
stos
add
mov
add
loope
js
cmc
push
cmpsl
std
loop
xlat
call
cld
shl
sti
aam
sti
aam
push
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
push
fs
mov
or
jg
ljmp
cli
in
mov
shl
jmp
ret
shl
out
aam
jmp
fcmovnu
scas
ret
ret
lds
fwait
lcall
add
add
mov
stos
xchg
inc
and
ret
int3
lret
jbe
mov
fdivrs
adc
int
fxch
into
pop
fst
aad
in
loope
call
in
in
sbb
sarb
cmp
mov
lods
push
mov
mov
cs
mov
int
fisttps
int3
into
int3
or
aam
push
std
incb
cmpl
add
add
add
roll
std
add
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
jle
adc
aaa
cmc
out
repnz
mov
jnp
push
js
inc
fiadds
and
sub
adc
clc
cmp
cmp
pop
inc
aas
mov
jne
add
xchg
fs
leave
dec
cmp
out
mov
jl
arpl
jbe
inc
or
popa
xlat
or
dec
pop
pop
cmpl
push
pushf
clc
cs
sbb
lea
inc
or
outsb
lock
jmp
xchg
adc
ds
out
nop
pop
insl
int3
cmp
mov
cmp
add
pop
and
sub
data16
mov
stc
mov
cmc
add
mov
in
pushf
xorb
mov
jecxz
pop
or
into
adc
jne
sbb
cmp
fisttpl
cwtl
lods
mov
or
or
imul
out
imul
xchg
inc
add
dec
or
adc
dec
stc
and
mov
daa
gs
lock
outsl
pop
push
jp
jg
add
xchg
orl
imul
rcll
adc
adc
cmp
sub
arpl
xchg
xchg
fadds
inc
adc
sub
dec
or
lds
and
leave
fwait
inc
test
cmp
sub
dec
xchg
cmp
add
pop
in
jmp
mull
mov
cmp
push
dec
or
xchg
and
add
int3
cmpsl
loope
sti
sub
popa
shll
push
testb
mov
pop
cwtl
pop
clc
aad
and
dec
or
xchg
imul
fdivr
clc
pop
pmulhw
sti
inc
movsl
pop
ds
xor
cld
gs
jp
arpl
icebp
shrb
in
repnz
sbbl
loopne
outsl
shrl
inc
cltd
mov
addr16
jb
mov
mov
cmc
bound
mov
sub
sbb
push
inc
sub
push
xchg
mov
hlt
and
push
fdivs
addr16
inc
pop
mov
aas
and
rol
in
xlat
mov
lods
fs
xor
mov
addr16
mov
adc
setbe
sub
repz
cmpsl
imul
mov
stos
mov
xchg
xor
cmp
add
mov
fs
cwtl
loope
dec
lahf
in
adc
mov
mov
sub
movsb
xchg
jo
mov
or
cmp
mov
push
gs
cmp
pop
pmullw
sbb
mov
xor
adc
jbe
mov
push
xchg
test
push
dec
mov
adc
aad
jnp
or
mov
pop
aaa
das
jbe
bound
sub
mov
mov
mov
cmp
xor
push
mov
lods
sbb
mov
pop
push
fwait
add
cmp
mov
pop
clc
sub
addr16
jae
jp
xchg
cmp
push
sub
sahf
inc
in
dec
nop
insb
out
jg
inc
or
loop
pusha
jmp
testl
jp
lds
jp
cmp
lods
pop
pop
idiv
mov
insb
mov
fstl
pop
out
ret
cmp
adc
and
sub
arpl
mov
xor
repnz
cmp
jg
or
es
dec
jmp
js
jns
jg
loope
mov
cmp
gs
daa
fisubl
ds
out
movsb
sub
repz
mov
xchg
cmp
xor
loopne
cmp
lahf
bound
pop
icebp
mov
push
call
add
or
fdivrs
mul
scas
pop
sub
sub
mov
les
notl
out
adc
dec
lods
jne
aad
jge
lods
in
ss
pop
mov
jne
mov
call
arpl
int
xchg
adc
inc
sub
or
ds
imul
push
les
pop
adc
cmc
xor
cmp
or
enter
cmp
cld
out
and
xchg
push
inc
out
imul
mov
sub
push
xchg
scas
imul
adc
mov
pop
or
sbbl
pop
xor
or
mov
jne
bound
sbb
in
je
movsb
fmuls
inc
lods
es
arpl
inc
push
jl
fwait
jmp
mov
or
add
test
adc
dec
dec
es
cwtl
jne
mov
in
mov
or
xchg
subl
ljmp
cmc
aad
dec
pop
jbe
loopne
test
pop
outsl
sub
rcll
push
xchg
mov
leave
jae
adc
enter
push
enter
fistps
nop
cmc
add
add
movsl
push
ret
sbb
push
mov
clc
into
bswap
and
cmp
mov
pop
lret
mov
das
sbb
hlt
cltd
jg
xchg
cmp
je
outsb
push
ds
push
sub
loopne
aam
sahf
into
push
in
int
jmp
fistl
xchg
orb
cs
cmp
inc
arpl
sub
jmp
leave
cmc
lahf
outsl
mov
mov
add
sahf
aam
or
and
pusha
div
sti
cwtl
adc
ja
in
idiv
push
jle
psubsw
mov
into
movsb
inc
imul
ret
xchg
dec
repz
test
jmp
jg
add
sbb
and
lock
or
cs
push
bnd
bound
je
mov
adc
adc
or
mov
mov
xor
stos
inc
aad
arpl
jne
enter
sbbl
jnp
out
test
pushf
mov
into
push
or
aas
and
ret
pop
je
dec
loope
xchg
in
sahf
push
cltd
sbb
xchg
insb
inc
movsb
cmp
ds
xchg
ret
fistps
push
lds
test
xchg
cs
push
sub
dec
mov
subb
mov
sbb
mov
mov
roll
es
out
push
pop
cld
xchg
fnstcw
mov
addr16
xchg
cltd
or
sahf
cmp
sbb
mov
sarl
jecxz
loopne
sahf
xor
xchg
shll
add
les
pop
mov
cmp
jns
pop
cmpsl
out
jne
mov
std
xchg
xchg
or
sahf
cmp
and
sarl
lods
inc
push
fsubp
mov
pop
add
xor
imul
push
lds
mov
mov
fisubs
mov
movsl
lcall
clc
in
enter
mov
dec
inc
out
jb
shrl
xchg
test
xchg
in
cmp
adc
cmpsb
inc
cmp
push
push
sub
jne
mov
sti
xchg
adc
ljmp
fimuls
inc
out
or
stc
inc
pop
fstpl
jg
sub
cmpsb
ret
bnd
xchg
and
push
gs
sbb
int
sub
dec
clc
push
fcomps
jl
or
imul
dec
data16
js
loope
add
push
call
test
fiaddl
cmp
sub
pop
or
cs
pusha
mov
add
and
inc
mov
jns
aas
push
lcall
test
lret
jnp
std
inc
or
xor
sub
ret
jno
dec
mov
divl
addr16
addr16
mov
test
imul
pushf
enter
pop
pusha
adc
inc
and
add
cmpsl
ds
pop
repnz
dec
pop
cmpl
mov
sahf
xor
andl
push
push
mov
fdivl
repz
and
cld
xchg
clc
inc
xchg
sub
dec
pushf
mov
shrb
sahf
cmc
shrb
mov
lock
jp
inc
cltd
push
stos
int3
addr16
sub
push
mov
dec
out
push
ljmp
jbe
mov
fimuls
ret
mov
loope
jp
dec
lods
insb
addr16
sahf
iret
aad
add
icebp
mov
mov
mov
fistpl
mov
mov
leave
pusha
sbb
sbb
icebp
mov
xchg
rorb
pop
in
ret
add
je
inc
xchg
add
icebp
and
inc
fsubr
mov
sahf
es
repz
repnz
push
gs
nop
aas
aam
mov
inc
fcmovnb
mov
sub
in
cmpsb
lret
ds
cmpsb
cmp
or
jo
out
fstpt
faddl
lahf
ljmp
ficompl
int3
inc
rcl
and
out
fldt
clc
add
adc
adc
sbbl
outsl
cwtl
das
insl
fnsetpm(287
dec
rcrl
cmpsb
adc
addl
sub
dec
inc
lds
lea
lcall
or
or
popa
clc
fwait
popa
sub
push
repnz
aas
shrb
push
std
xchg
cmp
xchg
cs
or
push
xor
imul
jmp
inc
lods
stos
arpl
sub
cltd
adc
andl
aaa
xchg
nop
jns
imul
xorb
jecxz
pushf
and
movsl
inc
lret
adc
adc
add
cwtl
pop
push
and
scas
push
jl
imul
mov
jecxz
sbb
push
mov
xchg
lret
xor
aam
adc
andb
jl
cli
mov
test
out
xchg
add
jbe
cs
push
dec
cmpsb
cmp
test
lret
cld
cmc
fsubrs
push
popf
xor
dec
repnz
mov
lods
or
sbb
in
dec
pop
mov
dec
ljmp
mov
out
mov
hlt
outsl
push
es
ja
push
cmp
aaa
ret
imul
cmp
mov
loope
dec
sbb
xchg
xchg
dec
jno
pop
lock
xchg
movsl
cmp
cmp
shlb
xor
ficompl
cmp
mov
ficoml
and
push
out
pop
fnsave
dec
in
cmpsw
ds
in
sub
push
icebp
sub
pop
stc
popa
clc
sarl
loop
mov
gs
out
pop
mov
push
adc
sub
stc
cmp
pop
adc
sub
in
dec
xor
pop
sahf
xor
push
adcb
addb
mov
cmpl
jno
mov
lock
rcll
sub
cmp
or
jp
lods
inc
fwait
adc
bound
into
gs
es
je
les
shl
enter
jmp
ljmp
push
push
out
adc
ret
inc
xchg
clc
push
cmc
ds
aaa
push
nop
out
mov
jecxz
inc
fnstsw
out
or
mov
fidivrl
or
shrl
or
lahf
nop
fmull
lahf
aad
xor
loope
out
fdiv
dec
dec
loope
adc
lret
push
push
jbe
adc
leave
and
jbe
mov
in
xchg
rorb
adc
ret
inc
pop
or
out
mov
xor
jb
sarb
js
sub
xor
rclb
pusha
idivl
jp
or
pinsrw
push
shr
popf
aam
out
shrb
adc
dec
in
sarb
out
push
call
daa
out
outsl
sahf
mov
mov
aaa
ljmp
pop
leave
push
sahf
js
lds
nop
daa
mov
jle
std
fmuls
dec
push
decb
sub
data16
loope
cmpsl
aam
and
cmpsl
inc
ficoml
addr16
fildl
hlt
mov
push
outsb
insl
popa
adc
xchg
sub
push
jmp
push
loope
mov
and
out
xchg
icebp
sahf
xor
and
xor
jno
es
xchg
push
push
movsl
inc
cmpsl
ds
gs
xor
jae
push
aaa
into
outsl
popfw
xor
nop
test
es
cmp
inc
xchg
jns
shlb
cmp
fisttpll
pop
sub
jno,pt
stos
fs
fidivs
movsb
cltd
xor
dec
jmp
mov
cltd
xor
fwait
mov
or
es
out
jo
xchg
sub
xchg
rclb
add
inc
rorb
push
sbb
mov
sbb
frstor
int3
cmp
pop
vmovdqu
xlat
cmp
das
in
and
dec
arpl
push
dec
and
lret
cmp
jb
repnz
adc
cwtl
push
testb
jmp
je
or
and
imul
ja
inc
shlb
leave
push
xchg
pop
testb
pop
and
mov
mov
lods
inc
shlb
lods
ja
mov
repz
pop
mulb
adc
and
pop
aad
pusha
imull
add
mov
mov
push
ljmp
and
test
mov
cmpsb
repz
dec
and
xor
xor
cmc
push
add
dec
mov
mov
cmp
aad
inc
and
icebp
iret
sbb
popl
test
xor
sbb
push
mov
pushf
mov
inc
push
mov
repz
ljmp
push
sub
cmp
add
jns
pop
and
sub
adc
outsb
inc
mov
lea
add
xor
imul
stos
push
xchg
mov
ret
pusha
dec
mov
repz
push
mov
in
or
test
mov
repnz
pop
enter
js
dec
lods
jmp
xor
mov
movsl
pop
mov
mov
mov
adc
popf
xor
xchg
and
ja
mov
cli
lods
mov
rclb
pop
mov
shl
js
pop
sbbl
sub
cmp
mov
ret
jne
insl
imul
cld
xchg
mov
pop
jns
push
sub
andb
outsb
add
icebp
rorl
in
add
xor
inc
fstpt
in
cmp
cmp
sbb
xor
sbb
dec
fld
pop
int
fdivl
push
int3
arpl
hlt
int
jno
int3
gs
pop
push
icebp
mov
in
or
cmc
je
les
pop
pop
cmc
mov
in
xchg
lods
cld
xchg
and
xchg
cs
and
fcmovu
jb
pop
sub
pop
or
iret
cmp
push
in
insb
or
mov
or
push
in
push
mov
test
and
dec
jecxz
inc
call
and
jmp
mov
mov
out
xchg
adc
movsb
push
jae
inc
lds
cmpsl
aad
add
mov
jp
cltd
shrb
aam
sti
xchg
sti
cmc
repz
fsts
test
outsl
out
or
xchg
push
in
imul
mov
insl
call
or
xlat
pop
ret
in
aaa
into
cmp
xchg
sub
mov
cmp
sbb
lea
cmp
gs
movsb
cmp
or
mov
jle
inc
fdivs
cli
xchg
sub
jge
das
dec
jo
adcb
imul
pop
sub
jne
push
dec
hlt
mov
test
adc
aam
test
fs
xor
xor
xchg
push
mov
out
cmpsl
stos
inc
std
sbb
cmpsl
scas
push
mov
lods
rcrb
out
jmp
cmpsl
cmp
pop
sahf
enter
pusha
jmp
push
mov
out
add
arpl
and
and
push
ljmp
push
lods
mov
loopne
stc
mov
adc
pop
xchg
sbb
imul
pop
repnz
sub
sarl
ret
cmp
cmc
flds
or
push
out
cmpsl
sub
nop
enter
mov
loop
pop
imulb
in
fs
dec
pop
hlt
jge
in
test
jne
rorb
pushf
jo
add
mov
scas
inc
out
in
sar
out
shlb
imull
add
fstl
mov
pop
icebp
dec
sbb
movsl
push
dec
push
fildll
lahf
mov
xor
sub
mov
push
out
xor
mov
addr16
adc
jmp
dec
ds
leave
pusha
sub
xorb
shrb
cmpl
or
int3
inc
mov
out
cmc
inc
inc
mov
leave
push
jp
test
aam
or
lea
rol
jg
pop
lds
xchg
mov
les
std
pop
jmp
push
les
or
jmp
or
and
rcll
out
or
out
insl
repz
call
jno
xlat
test
lock
or
imul
cmp
dec
int
pop
pop
cs
cmp
aam
in
add
xchg
xor
aad
pop
dec
test
push
xchg
pop
mov
xchg
repnz
sarl
fildl
adc
dec
or
inc
cltd
xor
inc
jns
adc
iret
mov
clc
pushf
insl
lcall
xor
or
test
jnp
clc
push
gs
mov
mov
test
into
xchg
cmp
mov
ret
inc
cs
in
cmpsl
and
pushl
lahf
test
jno
rolb
arpl
enter
shrl
push
push
add
mov
push
jne
daa
xlat
mov
inc
jmp
dec
in
push
shrl
cmp
hlt
sarb
mov
out
lahf
enter
jbe
push
push
jo
mov
fwait
outsl
sbb
push
xor
mov
sub
xor
cmpsb
add
cmp
imul
push
inc
xchg
xchg
outsb
add
popf
fnstcw
cmp
mov
movsb
lahf
test
insl
icebp
jns
movsl
aaa
movsb
popf
xor
pop
sub
jge
mov
add
mov
cmpsl
fisubl
cmc
mov
shlb
nop
mov
test
jg
lret
push
and
add
lds
adc
xchg
add
mov
pop
push
lods
sub
cwtl
ja
gs
cwtl
dec
mov
xchg
out
dec
xchg
pop
outsb
mov
or
stos
scas
ror
mov
int3
jae
and
mov
ds
sub
out
push
cmp
addr16
adcl
aam
fldenv
mov
hlt
arpl
jnp
push
lods
xchg
pop
and
outsl
push
cmpsl
inc
in
inc
repz
cmp
jp
lret
ss
inc
test
js
mov
mov
fstpt
and
sahf
repnz
mov
jle
out
aad
add
pop
pop
mov
shld
scas
test
mov
out
pop
add
lds
mov
cwtl
fwait
jecxz
xor
lcall
push
imulb
push
in
push
jg
insb
sbbl
les
das
out
fstps
adc
aam
lret
lcall
repnz
jne
popf
xor
xchg
xor
sub
mov
jge
mov
xlat
call
xchg
xchg
fisubs
jmp
aas
daa
lahf
fmull
dec
lcall
pop
sbb
and
or
add
xchg
or
mov
cmpsb
cmp
xchg
dec
mov
ds
fsubl
or
pop
or
stos
push
scas
or
mov
rcrl
stos
stos
outsb
lds
fists
ret
mov
add
and
adc
jmp
sub
filds
sti
ret
push
pop
cld
jno
xor
in
test
xor
or
sti
adc
mov
cli
mov
push
call
aam
jg
and
sub
std
lock
pop
or
adc
call
enter
test
insl
les
ret
aas
imul
in
mov
rcrb
nop
dec
fisttpl
adc
sbb
inc
sbbb
movsb
int3
cmc
mov
iret
pop
aas
push
int3
scas
stc
stos
addb
lret
mov
shlb
insb
movsl
leave
or
push
and
inc
or
push
push
mov
insl
leave
cs
gs
mov
inc
addl
cmc
sbb
repnz
mov
loop
xor
movsb
mov
xchg
sub
aad
xchg
rcrb
sbb
testl
lods
cmpsb
rclb
jle
push
fs
jl
sbb
inc
jecxz
pop
sbbl
mov
jl
int
int3
jo
push
ss
fcomp
jbe
xor
and
fsts
cld
sbb
sbbl
pop
loope
xor
fbstp
mov
outsb
mov
pop
sbbb
in
pop
sub
ds
jb
sbb
pusha
cld
push
push
sub
insb
inc
popa
clc
negb
cld
or
mov
movsl
cmp
mov
movsl
inc
dec
adc
icebp
mov
cltd
xchg
lods
cmp
cmpsb
in
mov
mov
cmp
daa
movsl
add
js
mov
dec
mov
rcl
imul
or
pop
inc
mov
sub
sti
test
mov
adc
jne
pop
bound
pop
push
jbe
das
fs
jne
test
fcos
dec
fwait
test
push
mov
pop
push
adc
mov
xchg
and
dec
push
movsl
jp
mov
gs
jbe
or
stc
jae
popf
push
or
bnd
notl
mov
fldl
jnp
sti
add
push
adc
jns
fcmovu
pop
xchg
scas
fiaddl
add
popa
fildl
lds
lret
jl
std
dec
ret
mov
inc
pop
out
lret
int3
and
stos
adc
cld
mull
insb
push
test
or
pushl
addr16
cltd
mov
fcmovu
mov
adc
push
loop
cs
pop
xor
mov
and
addb
mov
std
mov
xchg
cs
dec
outsb
mov
fsin
jl
xlat
sbb
rcrl
repnz
fsubrs
xchg
adc
and
lock
xor
dec
je
movups
repnz
mov
or
pop
aas
out
dec
scas
jno
cmp
or
mov
scas
xor
mov
mov
fcmovnu
or
xchg
das
ds
bound
or
outsl
jle
stos
lock
jns
dec
mov
loopne
mov
mov
testl
xlat
and
adc
mov
dec
lock
xlat
cwtl
jae
arpl
inc
jge
adc
and
cli
imul
inc
push
push
loopne
popf
xor
add
xor
mov
mov
xchg
repnz
stos
lret
adc
sbbb
addr16
pop
jmp
aam
subb
xor
pop
sahf
xor
sbb
popf
fidivrs
fldenv
testl
dec
adc
xchg
mov
in
cli
sbb
mov
or
inc
xchg
in
dec
fstl
mov
dec
xlat
jo
lods
push
push
xchg
arpl
cmpsb
enter
aam
pop
rclb
or
int
ja
lock
and
daa
adc
jno
push
shrl
push
in
cmp
add
stos
push
xor
jnp
clc
sub
add
scas
call
push
adc
add
mov
cmp
ret
mov
fdivrl
inc
cmp
cmp
mov
sbb
call
mov
ds
ficompl
inc
sarl
scas
lret
push
outsb
cmp
insl
and
sbb
movsl
lods
cmp
sub
rcrb
ret
and
cmp
insb
cli
testb
pushf
int
mov
gs
in
mov
addr16
cmpsl
add
int
inc
sbb
sahf
sbb
loop
icebp
dec
or
push
cli
lods
popf
xor
dec
pop
push
sbb
les
popf
test
lret
sub
out
scas
pop
add
mov
pop
sahf
pop
nop
aaa
xchg
shll
hlt
sub
mov
pop
xchg
sub
push
popf
pop
xrelease
xor
icebp
jns
jbe
movsb
lock
cmpsb
cmp
sbb
or
mov
cmp
jg
mov
and
jg
jbe
jecxz
pop
adcl
out
adc
xchg
imul
sub
mov
and
push
mov
xor
push
outsl
mov
outsb
inc
repnz
rcl
inc
fimull
inc
xchg
dec
and
push
cmp
push
pusha
jge
or
xchg
mov
xchg
into
stos
push
push
push
xchg
cmp
ret
insl
es
gs
push
mov
cli
call
mov
sti
dec
jo
xchg
es
sbb
int3
hlt
xor
sub
into
or
call
and
daa
nop
push
aad
push
sarl
mov
jb
push
mov
std
mov
hlt
fldl
cltd
push
or
sub
aad
and
lods
jb
leave
cwtl
int3
jnp
pop
arpl
cmp
aas
pop
les
adc
dec
cmp
out
sub
inc
pop
mov
jp
and
lods
shlb
mov
inc
jns
xchg
stos
arpl
adc
mov
mov
pop
dec
sub
jae
lcall
popf
adc
pandn
nop
repz
cs
mov
shlb
pop
negb
nop
stos
cltd
xor
xor
and
icebp
cs
push
sbb
cmp
into
xchg
es
dec
jmp
aam
push
xchg
sti
shr
repz
inc
cmpsl
sbb
dec
enter
nop
daa
stc
jne
arpl
fiaddl
sbb
xchg
daa
fs
cld
pop
pop
adc
pop
mov
rcr
bound
std
adc
call
mov
mov
out
jnp
mov
ja
xchg
pusha
notl
inc
fists
sahf
inc
shl
pop
lds
inc
hlt
and
movlhps
dec
cltd
xchg
sbb
and
mov
cmp
jae
lea
shrb
fsubrs
inc
push
push
mov
push
mov
xor
js
adc
inc
cltd
mov
and
xchg
jno
js
std
sub
out
pop
ret
sub
les
aad
dec
call
daa
fisubrl
dec
js
std
fnstsw
xor
lea
and
jl
xchg
movb
dec
das
nop
lds
shlb
mov
aam
mov
outsb
vmovsd
xor
mov
jbe
ja
in
xchg
push
jecxz
mov
out
fisubrl
hlt
add
js
enter
inc
ss
inc
fsubp
adc
jl
stc
add
loope
pusha
fsubrs
mov
sub
int3
incb
xor
adc
pop
pusha
mov
repz
fistpll
push
je
cmp
mov
subb
lret
rclb
push
cwtl
fmuls
int
mov
sbb
in
es
pop
xchg
xchg
leave
popa
out
es
push
jmp
out
shlb
or
je
jle
xor
pop
inc
or
inc
sti
mov
and
mov
sub
pop
pop
daa
fiadds
lret
lock
mov
mov
jo
mov
dec
sbb
mov
fisttpl
push
or
inc
lret
roll
outsb
push
inc
ficoms
sbb
loop
push
outsl
cld
xor
mov
mov
inc
mov
movsl
sub
xor
cs
or
jl
mov
jge
out
inc
push
loop
loope
push
stc
ret
xor
scas
and
xor
aas
out
and
test
ret
jecxz
sahf
inc
std
ljmp
pop
push
aad
cmp
push
jo
cmc
dec
add
mov
xor
arpl
lcall
push
fidivrs
sub
insl
mov
cmpxchg
scas
sbb
lcall
mov
mov
aam
mov
outsb
shll
lret
pop
cmp
ljmp
dec
in
xchg
add
jge
es
cmp
pop
jnp
xor
xchg
inc
push
mov
xchg
aaa
dec
mov
add
insb
out
cmp
mov
int
aaa
lods
mov
cmp
xor
xchg
inc
dec
subl
rcrb
cmp
pop
jl
lcall
pop
push
mov
or
fwait
lcall
addb
xchg
stos
jo
adc
outsl
outsl
popa
mov
add
pop
inc
inc
in
inc
cmp
inc
cmp
scas
xor
in
imul
shlb
inc
outsl
sti
leave
loopne
ja
test
and
cmpl
sbb
xor
cwtl
dec
imul
subb
pop
xchg
mov
loop
jg
xchg
lret
out
push
jp
sub
jge
and
test
in
xchg
push
std
int
das
ja
mov
comiss
stc
sti
clc
sub
mov
rcrb
out
xor
clc
adc
adc
cmp
push
movsl
jg
sbb
mov
mov
pop
mov
cmp
dec
rcrl
inc
fiadds
filds
or
dec
popf
mov
insl
jle
rcll
dec
addl
mov
imul
push
lcall
push
inc
pop
cli
pop
cmp
and
jnp
scas
mov
and
mov
jecxz
pop
mov
cmc
mov
shl
fwait
push
clc
in
int3
push
lods
fidivs
ja
fsubrs
mov
add
sbb
fmul
lcall
mov
mov
ror
inc
fcoms
dec
xor
mov
push
cltd
push
push
test
insb
and
cmp
test
push
xchg
push
test
sahf
jne
scas
sbb
mov
iret
sub
mov
jmp
je
inc
enter
xor
mov
scas
jecxz
imul
sahf
push
in
iret
inc
xor
add
cmpsb
and
fstpl
or
outsb
xor
pop
stos
dec
daa
mov
sbbl
mov
sbb
in
inc
jecxz
jmp
insl
rcll
test
scas
in
cmp
sbb
jae
mov
add
es
fs
ret
mov
sbb
stos
dec
mov
in
cmp
cmp
mov
sbb
test
adc
lds
shlb
pop
imul
mov
ret
nop
lods
stos
call
cli
xor
xchg
ds
push
clc
push
aaa
adc
incl
xchg
sbb
mov
inc
push
stos
cmp
out
pop
jne
cmp
cmp
ja
jl
add
sub
push
jmp
dec
sbb
subb
jno
sub
movsl
je
dec
cli
sub
sub
jo
sbbl
xor
add
test
xor
xor
movsl
bound
addr16
int
jge
xchg
inc
ja
mov
je
dec
rorl
cmc
mov
cmp
imul
or
jp
out
push
stos
cmp
pop
outsb
out
out
xor
rcr
je
stos
lds
loope
xor
xchg
fsubrl
pop
push
pop
out
test
lea
add
xchg
xor
sub
test
ja
adc
xchg
sub
pop
fs
popl
gs
comiss
roll
and
inc
pop
leave
pusha
dec
mov
sti
rorl
les
xchg
sub
cmp
push
jne
pop
cmpsl
aaa
pusha
imull
sarl
shrl
fnsave
cmp
sahf
fidivrl
cli
scas
fstpt
or
mov
sub
sbb
inc
cld
add
dec
mov
pop
rclb
pop
movsl
insb
insb
int3
lods
push
aad
mov
test
cmpsb
cmp
xchg
lahf
add
push
pop
lods
jl
mov
and
out
cwtl
das
and
out
cmp
xchg
inc
xlat
dec
push
sbb
data16
ljmp
inc
cltd
fwait
imul
lahf
mov
pop
loop
pusha
insb
cmpsb
cmp
sbb
fwait
pushf
lods
bound
sbb
add
std
xchg
das
dec
jb
dec
in
cmpsl
jns
rcl
idivl
fldt
push
push
xor
pop
subl
fwait
lods
inc
int
xchg
sub
out
mov
mov
shlb
aad
inc
sub
dec
stos
inc
adc
cmp
sbb
cld
xchg
mov
shlb
add
fucomi
xchg
fsubrp
aas
fdivp
repnz
icebp
leave
and
mov
enter
dec
out
lret
xchg
sub
aad
movsl
in
in
popf
push
pop
hlt
gs
popa
clc
sbb
mov
pusha
cmp
movsl
cmp
test
mov
out
inc
out
cmp
xchg
test
jecxz
mov
push
call
icebp
mov
xchg
xchg
jmp
pop
pop
cld
xchg
dec
push
or
incl
leave
pusha
jecxz
xchg
xchg
push
sahf
test
in
shrb
jno
mov
in
adc
ss
cmp
push
sub
dec
loop
cld
or
addr16
mov
xlat
jg
outsl
push
xor
insl
out
hlt
push
push
push
mov
fsubp
mov
cmp
lcall
pusha
mov
push
pushf
xor
cmc
cmp
mov
pushf
sub
imull
fldcw
mov
add
adc
pop
dec
lods
xor
push
pop
mov
cmp
mov
xchg
cmp
sbb
pushf
mov
push
xchg
jge
aam
mov
aam
dec
mov
out
dec
mov
pusha
fimuls
push
pop
or
fidivs
pusha
int3
arpl
mov
and
pop
or
movsb
pop
daa
mov
imulb
jne
dec
std
arpl
imul
cmpl
xchg
sub
mov
js
int3
out
test
fs
test
inc
adc
or
sbb
fistpl
push
ss
fisubrl
fbstp
scas
sbb
jmp
dec
cmpb
lds
scas
sbb
lret
inc
out
or
add
lods
stos
bound
sub
add
test
mov
inc
fstl
cmpsl
ds
cmp
addr16
pop
out
je
cmp
fs
nop
xchg
adc
mov
mov
movsl
pop
sub
pop
push
pop
xor
push
adc
nop
scas
push
mov
sub
inc
fsubrl
inc
arpl
xchg
push
or
gs
testl
aaa
mov
xlat
mov
stc
and
push
dec
mov
sub
scas
jnp
nop
cmc
pushf
ss
into
push
dec
jecxz
jecxz
popf
aam
push
das
mov
je
rorb
or
cmpsb
cmp
pop
addr16
or
stos
sub
pop
stos
mov
leave
insl
and
sahf
ljmp
loop
icebp
mov
add
fwait
sbb
imul
cmp
insb
mov
fwait
xor
ljmp
scas
es
push
sti
insb
add
rorb
iret
jecxz
test
test
movsl
inc
int
pop
dec
push
push
fidivrs
cmp
mov
dec
mov
pop
cs
jge
nop
add
insl
jg
mov
sub
push
sub
cmp
sub
inc
dec
mov
cmp
lahf
es
add
pop
test
adc
or
das
inc
lahf
sub
int
fdivrl
out
cmp
mov
and
pop
push
in
inc
dec
mov
mov
adc
mov
fdivl
push
jmp
out
roll
mov
mov
adc
popf
fs
pop
mov
cld
lcall
dec
fisubl
inc
popa
xor
hlt
enter
dec
pop
ss
divb
imulb
stos
sub
xchg
pop
or
ret
and
pop
sbb
bound
inc
lods
mov
mov
xchg
lret
in
jmp
rclb
cmpsl
inc
pop
loope
sbb
mov
push
inc
lods
mov
jecxz
add
lods
mov
adc
into
enter
jb
popf
inc
aam
dec
lea
insl
outsl
push
in
test
mov
sti
jle
jmp
sub
and
jno
sarl
inc
out
cmp
or
nop
pop
push
mov
out
add
fcoms
sahf
sarl
mov
fld
jecxz
pop
add
and
cmp
add
aas
mov
daa
mov
jo
dec
imul
fidivrl
cmc
outsl
pop
lods
sti
pop
mov
shrl
adc
and
dec
aam
enter
leave
push
jl
sbb
dec
mov
push
mov
in
ficompl
sbb
cmc
inc
insl
jb
shrb
dec
add
mov
jbe
ja
fisubs
cli
es
arpl
and
iret
fisttpll
andl
inc
push
aam
andl
into
insb
outsl
push
xchg
sub
xlat
mov
pop
out
push
outsl
ljmp
nop
fnstenv
inc
aas
sbb
andb
sbb
int
test
push
jns
sbb
or
pop
and
sti
fstps
lock
jle
inc
jns
icebp
jne
mov
or
xchg
cmc
push
xchg
xor
lahf
push
lea
cltd
push
fdiv
lahf
push
leave
push
fidivl
fldl
pop
push
cwtl
dec
mov
in
imul
cmp
adc
xchg
adc
fidivl
sbb
out
sbb
lods
nop
lret
mov
xchg
cmp
push
add
jo
insb
inc
or
add
mov
dec
pop
shrb
add
inc
aaa
stc
mov
cmp
mov
inc
fs
push
int
add
repz
sub
fs
lock
sub
inc
int
push
aas
xchg
jns
mov
sbb
repnz
rep
push
cmp
inc
ficompl
loope
push
push
shrb
push
ss
xlat
insb
mov
mov
test
stos
sub
pop
jp
fs
inc
xlat
fcomp
fwait
jbe
dec
imul
mov
jo
pop
in
test
pop
sub
les
cmpsl
sub
push
jle
push
cwtl
data16
adc
add
inc
xor
xlat
cmpps
mov
lahf
and
sti
loopne
arpl
fstl
push
and
rol
leave
mov
dec
fsts
push
mov
data16
loop
jg
insb
jmp
es
jae
pop
out
inc
shrl
repnz
and
sbb
js
add
shrl
sub
inc
pushf
inc
cmp
inc
cs
fs
mov
push
lock
in
ljmp
add
and
or
enter
decb
repz
lahf
adcl
pop
sbb
clc
adc
sub
pop
iret
popa
enter
dec
int3
jne
loop
add
stos
cld
fwait
and
idivl
and
lods
push
dec
movsb
bswap
push
fnstenv
je
xor
xlat
sbb
jb
rorb
lret
int3
fsubrl
inc
fs
push
repnz
notb
cmpsl
out
decb
dec
jg
sbbl
decl
push
shll
rcrl
pop
pop
mov
dec
dec
insb
ret
nop
mov
dec
loope
or
adc
inc
into
pop
gs
fs
inc
pop
sbb
inc
stc
aas
sub
push
es
inc
push
pop
dec
cltd
idiv
xchg
repnz
cwtl
jnp
lret
aad
xchg
fildll
mov
cld
mov
mov
xorl
int3
ret
lcall
nop
or
leave
daa
mov
nop
mov
out
in
mov
jp
mov
out
mov
in
lret
lods
inc
std
or
loopne
pusha
xor
sarl
addr16
repz
xor
push
sub
nop
daa
cmc
jle
pop
jg
xor
pop
inc
lds
frstor
stos
cmp
cmc
int3
out
test
ficoml
and
cmpsl
mov
fdivrs
scas
inc
imul
xchg
push
fstps
sbb
push
fsubl
jnp
cmc
mov
and
gs
jg
insb
cld
xchg
std
mov
add
adc
xchg
test
lock
push
lock
les
jno
mov
push
cs
mov
in
cmpsl
repz
fstpt
or
std
mov
sbb
ss
lock
aam
mov
neg
sti
pop
das
shlb
add
leave
inc
xlat
mov
pop
mov
adc
push
add
pop
cwtl
das
mov
pop
ja
in
inc
sbb
pop
xchg
pop
test
lea
inc
cwtl
pop
negl
sbb
das
mov
sbbl
or
sbb
fadds
push
ljmp
jb
mov
fcompl
inc
bound
pushf
inc
dec
loopne
mov
push
outsb
mov
out
test
lea
mov
xchg
sub
push
jno
jb
mov
xchg
inc
pushf
and
in
push
cmp
push
push
jne
cli
mov
ret
jo
sbb
xchg
push
and
jbe
mov
fimuls
cltd
sbb
adcb
xchg
add
data16
enter
test
out
pop
mov
xor
pop
in
adc
sub
mov
div
xchg
sub
push
cmpsl
xchg
cltd
test
loop
jecxz
imul
stos
mov
mov
shrb
pop
sbb
loope
andl
lret
mov
scas
sarl
dec
xlat
cmp
inc
cmp
cmp
dec
stos
inc
test
fs
push
fisubs
pop
fbstp
loopne
and
xor
xor
cmpsb
mov
cmc
stos
add
fstl
mov
dec
or
fldt
ja
into
insb
mov
pop
rcrb
fsubrl
scas
pop
fists
cmpsl
adc
adc
inc
repz
jmp
xor
rcr
sbb
imul
xchg
lret
int3
lds
xchg
push
add
xchg
nop
outsb
bound
frstor
sbb
cmp
inc
xlat
xchg
mov
shll
mov
cmp
pushf
cwtl
push
je
mov
cmpsl
icebp
loop
mov
pop
mov
nop
pop
cmpsb
movsl
in
mov
push
sub
notl
adc
xor
mov
jmp
ficomps
or
mov
add
jp
sbbb
jae
mov
mov
fnsave
or
xchg
pop
scas
mov
lahf
add
or
adcb
fldcw
cmp
sub
inc
out
push
jns
jne
divb
xchg
fucomip
test
mov
lds
hlt
lods
push
cmp
dec
decl
ja
mov
enter
cmp
pusha
icebp
jae
xchg
or
jl
push
cmp
and
jg
cmp
push
fiaddl
mov
int
push
jbe
fwait
xchg
adc
in
fstl
cld
mov
sub
adc
sbb
sbb
mov
mov
jle
lds
ja
sbb
inc
rclb
leave
enter
sbb
xchg
jbe
mov
jge
fmulp
xchg
mov
sti
test
pop
mov
fs
dec
in
in
insb
jge,pt
jle
dec
or
aad
aam
ljmp
mov
adc
pop
mov
mov
fldt
inc
xor
cmp
insb
je
in
mov
push
cltd
xor
push
cli
daa
cmpsb
inc
pop
cmp
fdivl
int
dec
jb
sti
pop
out
cmp
lret
pop
sub
fistpll
inc
idiv
fxch
sub
inc
mov
cmp
cltd
ljmp
cmp
das
je
mov
mov
fdivrs
push
daa
and
loope
mov
icebp
jns
sub
addb
jo
dec
push
out
icebp
loopne
movsl
stc
xchg
sbb
cmc
cwtl
and
fnstenv
mov
mov
mov
mov
leave
jae
repnz
mov
jbe
aad
mov
movl
push
adc
les
jne
in
add
pop
repnz
daa
cmp
test
paddb
test
adc
mov
sbb
xchg
push
push
mov
mov
xor
and
jns
lods
push
fwait
ljmp
inc
and
jge
daa
jle
aaa
ja
je
pop
pop
mov
xchg
pop
mov
loopne
aas
in
loop
mov
push
idivl
cmp
vunpckhps
xor
dec
bound
rorl
lock
add
pusha
out
inc
inc
xlat
rcrl
ds
ret
mov
pop
fwait
and
sub
sub
fidivl
loope
or
jno
jbe
jmp
mov
stos
inc
push
xor
jne
loope
in
ret
sub
jo
xor
shr
mov
and
push
shrb
mov
ret
out
aas
fstps
mov
filds
xchg
xor
aaa
mov
pop
out
out
sbb
cwtl
inc
stos
ficoml
je
mov
mov
sub
fstpl
lahf
and
or
cld
and
sbb
insb
push
gs
mov
imul
outsl
test
xor
inc
arpl
cmpsb
les
pop
dec
cltd
dec
xchg
mov
add
test
sahf
push
sbbl
pop
fucomp
insl
push
test
int
imul
xor
sbb
jno
add
cmpsl
cmc
xchg
imulb
sahf
dec
add
add
rcrl
and
repnz
mov
pop
jae
mov
xchg
adc
and
jae
ja
stc
sub
imul
lock
arpl
lcall
fdivs
test
inc
fld1
incl
lea
test
and
xchg
xchg
sbb
dec
into
insl
cld
lods
mov
sbb
shrl
xor
dec
imul
adc
mov
daa
repz
dec
ds
add
adc
xchg
test
xlat
mov
jbe
inc
iret
adc
lods
xor
push
sbb
scas
xor
push
mov
mov
icebp
dec
in
dec
dec
mov
aaa
mov
sbb
xor
mov
hlt
mov
stos
xor
shr
imul
inc
daa
orl
popf
dec
hlt
in
std
jl
cmp
sbbb
int3
push
or
ljmp
jb
cs
out
inc
sbb
daa
in
and
pop
ret
lahf
stc
adc
pop
dec
push
mov
mov
xchg
sub
and
lods
inc
outsl
inc
pop
add
or
and
cmp
pushf
cmp
xor
shlb
out
test
mov
mov
fsubl
rcll
xchg
push
dec
or
clc
jne
xor
leave
andb
push
push
out
mov
imul
dec
pop
sti
inc
fidivrl
xchg
jns
adc
fucom
rclb
stos
push
jmp
mov
cmp
gs
push
or
or
add
mov
out
and
ret
jp
xchg
add
xor
insb
cmp
jo
xor
push
hlt
addr16
pop
jle
xchg
lds
adc
lods
mov
lret
ds
popf
pop
inc
pop
inc
out
fldcw
xchg
hlt
sahf
xor
pop
ficoml
sbb
cmp
out
adc
and
test
je
push
or
je
jp
jmp
iret
mov
pushf
imul
and
cmpsb
ds
xchg
sub
and
and
sbb
add
rolb
xor
lret
test
xchg
dec
outsl
shrb
repnz
popa
lcall
aad
push
movsl
das
das
test
jae
in
lods
push
or
hlt
in
pop
hlt
cmc
push
mov
jae
lret
cld
out
notl
fwait
mov
je
sahf
jnp
mov
jle
push
jmp
test
imul
imul
test
add
mov
loop
cmpsb
xchg
xchg
orb
jnp
mov
mov
push
mov
xchg
push
mov
sbb
cmp
xor
das
cmp
jbe
jmp
lret
testl
mov
add
dec
inc
xchg
mov
pop
xlat
stos
mov
xchg
jge
pusha
scas
pop
inc
scas
jbe
je
popa
test
and
addb
mov
jmp
push
cmp
lods
leave
xchg
ds
lahf
xchg
scas
out
fcoml
jl
repz
inc
and
outsb
or
mov
jle
popa
jns
fldt
inc
push
inc
or
xor
cltd
mov
jecxz
adc
dec
bound
fsubrs
jbe
pushf
sbb
inc
push
mov
int
mov
leave
mov
cmp
xchg
cmpsl
cmp
jecxz
push
stc
ja
outsb
dec
sbb
shll
jbe
in
mov
inc
mov
adc
pusha
mov
pop
shrb
lahf
ret
lock
jecxz
mov
arpl
push
js
and
push
jo
add
cwtl
shlb
cli
cmpsl
pop
and
cmpsl
jo
push
sub
and
adc
mov
loop
iret
xchg
or
lock
lock
jp
jns
add
shr
pop
add
jmp
jno
xor
in
test
adc
xor
push
cmc
lea
push
lcall
scas
or
das
ss
mov
lea
mov
mov
fnstcw
or
add
sub
fucom
xchg
add
loope
cmp
push
mov
lcall
je
shll
cmpsb
cs
and
add
stc
enter
mov
or
inc
mov
mov
push
out
pop
insl
cmp
lret
xchg
mov
adc
add
imul
adc
adc
out
fldcw
fists
outsl
inc
notb
enter
push
xor
pop
cmp
shrl
movb
pop
mov
incl
pop
mov
lods
sbb
jns
mov
arpl
jns
cmpsl
cmp
outsb
jae
loopne
ret
rcl
ljmp
dec
pusha
push
cmp
or
repnz
dec
dec
or
xor
or
add
pushf
dec
outsb
stos
cs
xchg
xchg
test
test
sbb
jecxz
inc
in
out
pop
cmpsl
cli
lds
xor
pop
mov
jo
outsl
cmp
popa
loopne
mov
pusha
pcmpeqd
pop
es
fdivl
call
aad
repz
push
inc
push
or
cmp
test
lods
outsl
xor
imul
fmull
dec
dec
dec
xchg
test
fadds
lds
sbb
pushf
insl
jne
rclb
ds
test
and
fistl
push
dec
dec
sub
jne
shrb
dec
pop
repz
imul
and
int3
fcomps
icebp
lahf
push
add
stos
lea
cmp
test
addr16
dec
pop
adc
ljmp
movsl
outsl
cmp
int
es
inc
dec
jmp
push
or
pop
lcall
fst
stos
mov
ret
push
mov
shll
inc
sub
pusha
xchg
lcall
xor
subb
push
mov
mov
jmp
and
adc
inc
inc
jno
mov
push
popa
das
jl
leave
fdivrs
or
imul
outsl
imul
shl
xchg
into
test
fsubp
inc
sub
push
out
hlt
fwait
xor
sbb
fcom
dec
push
add
repnz
je
or
cs
push
mov
cmp
xor
pop
dec
add
mov
movsl
push
or
push
or
mov
rorl
lahf
loop
in
push
dec
add
nop
jp
ret
add
adc
movsl
dec
mov
sub
dec
push
cmp
mov
add
daa
rorl
testb
push
enter
icebp
push
test
lahf
push
add
adc
insb
gs
push
push
jmp
lret
adc
jp
cltd
mov
mov
sub
fs
jl
bound
pop
dec
mov
mov
adc
call
xor
push
pusha
testl
add
das
mov
mov
and
cmp
mov
or
loope
in
out
pop
clc
cmc
aaa
dec
sbb
cwtl
cmp
popa
xchg
inc
sarb
gs
mov
mov
inc
std
adc
xor
inc
fscale
xor
inc
pushf
push
cmp
cmp
push
decl
adc
and
xchg
pushf
jb
into
sbb
loop
or
cmp
push
aaa
sbb
cmp
adc
cli
or
mov
sbb
repz
decb
inc
ret
in
test
fisttps
jns
enter
push
int3
movsb
push
or
sub
push
xchg
push
push
out
ljmp
xchg
push
enter
jne
dec
shl
mov
pop
rorb
sbb
mov
pop
in
xor
popf
xchg
mov
es
or
and
xor
xlat
xchg
inc
mov
push
dec
adc
mov
ljmp
hlt
out
adc
mov
je
and
mov
subb
mov
jo
mov
popf
scas
and
jmp
inc
fnstenv
push
popa
dec
aad
xor
xor
imul
inc
sbb
dec
pop
sub
lret
stos
addr16
fcmovb
mov
jno
mov
cs
push
movsb
xor
in
push
or
sbb
xchg
fdivl
cmp
int3
xor
sbb
dec
jle
out
fwait
sub
scas
lea
xlat
mov
pop
aaa
or
xor
js
xchg
lds
ja
es
add
inc
out
xchg
cmp
push
mov
jb
sub
mov
fsubrp
dec
pop
mov
sub
pop
lcall
pop
out
iret
or
shlb
imul
sbb
popl
xchg
mov
push
add
shrl
jl
adc
push
xchg
and
mov
in
pop
fisttpll
dec
inc
adc
mov
inc
push
pop
add
mov
scas
call
aas
scas
test
test
push
js
aam
push
mov
xchg
fs
push
sbb
ja
xor
add
xchg
add
and
clc
insl
cmp
or
mov
pop
dec
or
pop
cmp
int
loop
dec
dec
pop
rol
xor
icebp
mov
shrb
pop
icebp
and
inc
jp
ja
imul
dec
jl
stc
push
lods
rcl
pop
je
sbb
adc
push
jo
pusha
out
add
mov
pop
mov
and
cld
cmp
sub
loop
push
in
inc
jb
jmp
push
jno
jp
setae
addr16
notb
add
stos
flds
and
xchg
jp
mov
fldt
scas
adc
mov
test
xor
iret
xor
loop
push
push
dec
lahf
mov
loopne
add
or
imul
pop
inc
lods
orb
jge
push
pop
imul
cmc
pop
mov
sub
std
cmp
pop
les
cmp
daa
adc
sub
mov
idiv
fdivrs
or
xor
push
lods
cld
push
push
pop
inc
push
cmp
cmp
pop
xor
add
cmp
push
push
in
mov
add
pop
pop
and
jno
fildll
xor
movsb
adc
pusha
push
enter
test
sub
enter
pop
ss
or
push
subl
push
stos
not
sub
mov
inc
mov
lds
pop
dec
push
inc
push
xor
out
ljmp
mov
mov
gs
cs
out
mov
insb
sbb
aaa
movsl
pop
stc
js
add
test
cltd
xor
fbld
pusha
rorb
fisttps
sbb
das
data16
pusha
jle
test
cmp
or
mov
sahf
aam
es
subb
fidivrl
stc
imul
xchg
sub
cld
les
ret
xchg
lcall
and
pushf
lods
lahf
sbb
lret
fldpi
jne
scas
arpl
scas
pop
mov
cmp
add
and
lock
pop
or
out
push
into
test
sub
nop
jb
jne
out
and
nop
sub
and
scas
ficomps
gs
jno
enter
clc
into
xchg
sbb
subb
mov
imul
popa
lods
pop
cwtl
bound
sahf
mov
cmp
enter
mov
and
int
cmc
inc
outsb
and
lret
xor
lcall
and
add
xchg
inc
faddp
dec
xor
insb
gs
daa
xchg
mov
dec
bnd
lds
loope,pt
iret
xchg
inc
cwtl
imul
movsl
add
cmp
push
adc
inc
ja
jge
cmp
adc
push
adc
xchg
and
add
aas
loope
cmpsb
rcl
xchg
xchg
insl
add
mov
insl
jo
mov
pop
stos
xchg
insb
adc
adc
xchg
cmpsl
lds
fisttpll
repz
lahf
outsl
mov
pop
das
mov
js
je
adcl
sbb
xchg
enter
adc
push
jb
js
mov
nop
repz
in
test
imul
stos
pop
ljmp
push
in
pop
outsb
xchg
adc
pop
jge
cmp
or
pop
insb
movsb
aam
stc
mov
xor
sbb
adc
or
outsl
pop
dec
data16
pop
mov
test
enter
mov
rorl
pop
xor
cmpsb
das
sbb
lea
mov
cmpsl
and
cmpsb
lods
vmovshdup
dec
cld
pusha
lret
or
outsl
idivl
or
dec
pop
sarl
sbb
dec
mov
dec
nop
cmp
dec
push
mov
pop
gs
sbb
or
jb
ds
pushf
stos
and
out
lock
les
adc
pop
ss
fistpll
mov
jne
xlat
xlat
cmp
stos
lods
inc
lcall
inc
clc
sbb
push
dec
sarl
std
jl
rolb
add
rolb
test
inc
add
nop
jno
imulb
pop
movsb
cmp
into
or
inc
lahf
ret
loope
dec
iret
fistpl
fidivl
mov
mov
lcall
es
jle
inc
add
movl
push
out
test
inc
sti
push
cmpl
push
fnstenv
lds
rcrb
xchg
dec
push
dec
loopne
push
push
jmp
rcll
int3
lret
loope
inc
pushf
std
outsl
cmp
sbb
inc
invd
lahf
aas
xrelease
adc
jle
pop
subl
movsb
fcomip
fsubl
movsl
xchg
pop
insb
mov
shlb
jae
inc
fadds
sub
iret
out
cmpsb
adc
cmp
pop
scas
push
sbb
jno
lods
inc
ret
xchg
fstps
pop
dec
fwait
out
repz
cmp
sub
jle
cli
fnop
mov
es
popa
sbb
mov
cmp
mov
mov
pop
inc
sbb
movb
dec
pushl
dec
xorps
iret
leave
movsl
shlb
add
mov
adc
xor
ljmp
jb
cmc
mov
clc
xchg
sbb
sbb
rcrl
or
inc
les
mov
dec
dec
in
push
imul
mov
outsb
cmc
mov
dec
xchg
cmp
cmp
xchg
sub
mov
ljmp
inc
arpl
mov
sti
push
inc
xor
imull
orl
or
insb
popa
aad
push
nop
push
popf
add
decb
jae
lcall
call
loope
sarb
mov
in
jp
lods
mov
cld
inc
sbb
imul
imul
das
mov
clc
add
andb
jne
or
ja
xchg
mov
dec
mov
fildll
sub
inc
cltd
ret
pop
sahf
mov
lea
dec
and
imul
adc
cltd
jne
inc
into
gs
pop
loopne
mov
cmpb
adc
pop
in
push
insb
test
adcl
ss
icebp
sbb
sbb
fistpll
mov
jbe
sarb
mov
into
std
jo
jne
shlb
xlat
outsl
filds
addr16
cmp
test
aam
iret
rcr
gs
es
fbld
add
int
aam
lret
add
pop
xor
stos
cltd
popf
cli
push
push
mov
outsl
pop
adc
lcall
pmaddwd
mov
packssdw
mov
cmc
and
outsl
repz
fistpl
repnz
mov
push
sbb
add
inc
sbb
jg
inc
ret
mov
dec
movsl
xchg
xchg
lods
clc
dec
fimull
mov
rcll
push
decl
and
and
sbb
mov
lock
sbb
idivb
push
cmpsb
in
aaa
out
bound
jnp
into
stos
aad
sub
sbb
andl
inc
movsb
inc
fdivrl
mov
arpl
aaa
pop
mov
jnp
mov
sub
std
or
mov
mov
pop
and
movsb
xor
aaa
shr
imul
jbe
andb
push
xlat
mov
loop
jp
bound
mov
jb
into
aad
repnz
sub
sub
pop
dec
xchg
push
outsb
mov
scas
xchg
sbb
jbe
add
rcr
repz
pop
pop
dec
mov
inc
jbe
mov
dec
rcll
stos
iret
xchg
push
lds
mov
jo
push
add
and
daa
pushl
and
or
adc
and
cmp
xlat
mov
popa
cmp
icebp
pusha
mov
xchg
cmpsb
add
repnz
clc
daa
jae
pop
frstor
adc
jl,pt
jmp
fwait
sub
inc
je
sbb
sbbl
push
insl
inc
pushw
stc
lret
loopne
out
insl
imul
mov
cmpb
or
imul
addr16
in
into
repnz
je
pop
lock
popa
and
repz
inc
arpl
pop
out
mov
fdiv
add
sub
cmp
daa
inc
sti
sub
ret
pop
mov
ds
pop
or
adc
cs
les
jno
dec
xchg
jp
fdivrl
gs
xchg
mov
mov
fwait
add
cli
inc
xor
loopne
dec
fistpl
in
pop
sbb
idivb
cmpb
lods
mov
push
jno
sbb
inc
xlat
popf
sub
stos
adc
xor
jecxz
xlat
and
cwtl
jmp
inc
insl
jo
les
cmpsb
push
push
cmp
imul
ss
cmpsl
push
jno
xchg
adc
or
cmpsl
push
cltd
sbb
adcl
jbe
add
gs
cld
pop
adc
mov
int
les
test
scas
shrl
jnp
mov
out
ret
stc
fnstenv
cmp
mov
mov
inc
pop
xchg
lods
shrb
in
inc
inc
fwait
xchg
pop
inc
lods
cmp
and
stc
push
adc
bndstx
sarl
mov
iret
lock
and
jl
pop
enter
in
adc
mov
cmp
dec
fistps
and
xor
pop
fsubrl
loopne
pusha
push
addb
mov
inc
mov
or
in
inc
dec
mov
mov
dec
xor
lret
std
inc
jecxz
jno
mov
mov
mov
rcrl
mov
inc
movsb
sub
sub
in
mov
dec
cmp
add
dec
in
das
mov
movsl
xchg
add
in
cmp
adc
mov
dec
lods
and
mov
fwait
mov
add
out
arpl
enter
pop
imul
jae
popf
out
sbb
jmp
mov
and
xlat
testb
hlt
ret
push
jnp
arpl
addr16
sub
jle
cmp
mov
sub
stos
inc
cli
adc
imul
int3
int
jle
shl
mov
xchg
add
xor
mov
hlt
jg
mov
push
xchg
ret
stc
xchg
outsl
xor
add
mov
mov
lret
mov
lds
xchg
pop
or
leave
pusha
scas
stc
paddb
cld
es
in
test
xor
or
outsl
leave
aas
pop
push
sahf
mov
ds
dec
test
or
cs
adc
orl
cmp
je
inc
inc
and
cli
xlat
xchg
adc
and
ret
rolb
cmp
xchg
outsb
data16
jno
in
mov
rorb
adc
or
fdivs
mov
outsb
scas
pop
insb
stos
mov
mov
xchg
inc
sbb
iret
xor
shll
dec
aad
sbb
sub
leave
push
nop
push
xor
xor
nop
daa
push
mov
jb
sbb
pop
xchg
ficomps
and
rclb
gs
and
movsl
xchg
call
jns
inc
popa
mov
mov
pop
mov
pop
adc
pop
imul
mov
loopne
test
cmp
sbb
lock
and
add
lds
jmp
inc
xchg
xchg
lahf
fwait
push
sbb
add
or
aam
pop
mov
cmpsb
std
mov
fcompp
inc
inc
cli
arpl
test
or
pop
push
js
cmp
test
sub
aad
das
test
stos
cli
lods
pop
dec
pop
stos
jp
or
stos
dec
and
icebp
iret
andb
sarl
fnstenv
push
jb
inc
push
fisttpl
cltd
shlb
mov
jl
jb
dec
pop
out
jg
in
mov
lea
pop
sahf
fisttps
pop
push
adc
jmp
pusha
pop
sahf
fsubl
inc
push
cmc
adc
dec
scas
sbb
faddp
jmp
mov
roll
push
ds
dec
push
pop
loope
out
fwait
mov
lret
push
hlt
shrl
mov
xor
fnstcw
mov
cmp
scas
mov
push
lahf
ret
xlat
out
loopne
popf
push
imul
addr16
outsl
jbe
lods
rol
cmp
aad
stc
outsb
mov
popf
pop
jae
into
aaa
call
pop
cmp
sub
call
rcl
loop
sbb
popf
mov
fidivrl
cltd
in
and
pop
das
jb
lret
cmp
mov
lcall
xchg
jnp
pop
lock
test
mov
add
dec
in
popf
jge
jmp
fisttps
aad
test
xor
xor
cmp
sub
or
subl
add
cld
xchg
sbb
pop
sbb
test
xor
pop
popa
ret
cmp
push
imul
cli
add
subl
int3
jb
int
outsb
lds
sti
mov
or
xlat
es
shl
inc
pop
push
inc
in
stos
push
sti
xor
inc
sbb
loopne
pop
popf
push
cmp
sbb
mov
bound
test
and
movsb
sti
sti
test
add
sub
in
nop
cmp
das
insl
mov
out
popa
pop
lcall
push
adc
push
ljmp
mov
frndint
test
push
hlt
cmp
in
dec
shll
out
ret
push
jl
loopne
pop
mov
sahf
gs
orl
push
push
mov
xor
mov
adc
lret
xchg
jno
xchg
adc
inc
inc
sbb
mov
mov
addr16
lods
loope
dec
or
ljmp
dec
sub
sub
mov
dec
lods
push
inc
ss
in
mov
push
jb
xor
out
dec
cmpl
dec
pop
sbb
out
les
sub
sbb
xchg
repz
cmp
xor
insb
xor
cli
in
int3
arpl
rclb
and
and
cmp
pop
mov
dec
dec
dec
pop
sub
nop
das
jle
popf
fcoml
cli
or
mov
cmp
stos
sbb
cli
fs
dec
and
jae
sbb
js
ss
mov
xor
cmovae
mov
lock
hlt
mov
adc
mov
lock
out
xor
and
adc
movsl
int3
jnp
lcall
in
stos
push
mov
data16
dec
adc
loope
and
add
or
push
lcall
cmp
int3
inc
rcrl
and
pop
pause
adc
stos
lds
test
jp
push
in
xchg
sahf
adc
inc
xor
rorb
fisttpl
fidivl
add
lock
xchg
popa
pushf
pop
scas
into
or
dec
popa
push
and
stos
adc
cmp
push
cmc
xor
sbb
cli
push
cmpsl
in
fbld
ss
mov
shll
sti
or
pop
push
loop
sub
ss
mov
cmp
sub
jecxz
fmull
dec
imull
dec
and
out
cmpsl
push
sub
arpl
lea
lds
cmp
out
lret
xor
cltd
std
ret
hlt
sub
sbb
mov
sbb
xchg
test
mov
push
nop
ljmp
stos
sahf
lret
inc
mov
sti
test
adc
into
dec
sub
dec
cld
mov
fsubl
test
mov
pop
xchg
mov
xchg
out
fnstcw
out
leave
pusha
and
sahf
and
loopne
jp
sub
popf
push
sarl
sbb
jns
sub
push
cmp
mov
lret
data16
fcmovb
mov
lods
cmp
jp
cmp
xor
cwtl
ret
test
popa
fdivr
out
subb
sbb
xchg
xchg
pop
outsl
mov
sub
shll
pushf
inc
dec
outsl
xor
and
lock
cmc
inc
push
and
dec
aad
movsl
sbb
aaa
push
sbb
xchg
mov
ds
outsl
mov
lea
imul
cmp
adc
dec
dec
mov
cmp
inc
mov
test
cs
mov
popf
test
mov
mov
in
dec
adc
inc
iret
jb
dec
sub
mov
fdivrs
lds
cmc
add
loope
cmp
sbb
push
pop
mov
roll
mov
test
sub
pop
inc
into
mov
add
mov
pop
insl
dec
loopne
repz
dec
outsl
aaa
inc
frstor
fnstcw
pop
jns
test
daa
pop
adc
adc
xchg
adc
data16
add
pop
or
jbe
int
cmp
and
xchg
push
lahf
dec
cs
test
mov
adc
sub
popa
cmp
xchg
cmp
mov
popf
es
pop
mov
cli
in
push
fcompl
pop
loop
sub
mov
adc
pop
inc
in
xchg
and
cmp
cmp
movsb
jae
xchg
out
loopne
pop
and
arpl
shlb
test
jno
int3
push
sub
pop
roll
icebp
pop
ljmp
cmc
xchg
subb
mov
inc
shrl
xchg
xor
sub
repz
jp
das
inc
pop
adc
mov
mov
mov
addr16
sub
mov
xchg
pop
fwait
pusha
mov
test
pcmpgtd
pop
lcall
mov
mov
cmp
jg
ret
xlat
and
add
or
pushf
mov
mov
mov
dec
jle
xchg
outsb
mov
inc
test
cld
aaa
pop
add
push
inc
push
mov
movsl
outsl
xchg
sbb
rorl
out
ljmp
stos
jp
xor
cwtl
stos
pop
push
jl
mov
jns
lods
cmpsb
dec
aaa
aad
xchg
sarb
adc
sub
push
push
mov
int3
js
mov
mov
cmp
xorl
mov
xchg
loopne
sar
icebp
jnp
push
cmp
scas
lret
sub
mov
sbb
lahf
test
hlt
push
mov
xchg
add
inc
add
lcall
push
and
cs
mov
and
pop
sbb
addr16
stc
leave
or
popf
sbb
les
insl
out
jnp
fimuls
jl
lahf
sub
xchg
in
push
mov
or
testl
and
adc
sub
adc
movntq
and
pop
stc
pop
and
scas
js
movsb
je
out
call
andl
push
ds
inc
mov
fucomi
js
inc
add
jge
icebp
outsb
in
test
fistps
clc
aam
fimuls
cmpsb
iret
or
js
jno
orb
fimuls
je
xchg
or
call
sbb
std
or
and
stos
jns
cmp
daa
pop
xor
push
and
mov
cmp
gs
push
inc
incb
xor
push
ds
fmull
lcall
xchg
rolb
pop
filds
es
xor
adc
enter
dec
daa
inc
mov
lods
sub
stc
cmp
xchg
test
sub
dec
negl
sub
loopne
ds
add
pushf
ret
hlt
stc
mov
ret
addr16
add
cmp
shl
pop
fiadds
xor
mov
cmp
xchg
sbb
push
cmp
mov
sub
movsl
jle
and
or
inc
pop
jne
rcl
stos
cmpsl
out
sub
or
adc
adcl
add
push
ret
cmp
push
mov
lea
add
jmp
inc
aaa
aad
jb
outsb
dec
push
ljmp
negb
dec
adc
in
add
in
jo
scas
mov
xchg
mov
sti
push
mov
stc
loopne
push
fldl2e
subl
mov
add
xor
sub
call
mov
adc
sbb
or
push
pop
mov
into
aaa
pop
shlb
shr
into
je
mov
adc
inc
xchg
xor
push
loope
jmp
test
cwtl
pop
mov
stos
rorb
adc
leave
test
inc
push
jae
jnp
pop
stos
mov
xor
fcompl
gs
and
test
insl
jmp
movsb
icebp
dec
jmp
mov
mov
hlt
lds
fdivp
pop
cmp
decl
in
jnp
into
daa
fistps
or
mov
xchg
push
int3
inc
out
bound
push
std
push
push
loop
push
sbb
mov
cmp
jl
ficomps
sti
push
sub
pop
push
decl
mov
stos
es
and
in
pop
mov
fcmovnbe
push
pop
xor
mov
push
or
fisubl
inc
dec
rorb
add
movsb
cmp
cmp
pop
sbb
hlt
imul
loope
icebp
mov
dec
loopne
add
fidivrl
iret
test
mov
mov
add
loopne
xlat
pop
sub
cmp
cmpsb
scas
cmc
in
fisttpl
dec
jecxz
jns
xchg
leave
mov
test
sub
jecxz
sub
std
push
push
sbb
andb
and
add
xchg
mov
lahf
mov
inc
add
sub
inc
loop
pusha
mov
loopne
inc
xlat
rcl
jb
and
dec
test
and
pop
sbb
push
outsl
aas
mov
ljmp
stos
add
jo
fidivrs
jmp
add
mov
jl
and
adc
fwait
mov
inc
clc
xor
or
cs
repnz
aad
aam
sbb
sbb
inc
xchg
fcom
loope
sbb
pop
push
ror
sub
imul
dec
push
inc
out
pop
mov
adc
std
push
cmp
aas
mov
movsl
mov
imul
pop
jae
or
and
xchg
add
ds
mov
jne
pop
xchg
sub
jo
cmp
push
mov
loop
fcom
insl
or
shr
repnz
dec
or
mov
xchg
push
xchg
lcall
dec
push
cltd
mov
lret
je
dec
out
stc
notb
xchg
andb
leave
cmpsl
repnz
xchg
cmpl
mov
cmp
jmp
adcl
adc
xor
test
cmpsb
add
inc
lods
jp
das
xor
pop
scas
jp
pop
jb
mov
fstpl
xor
xchg
mov
cmpsb
jbe
sbb
scas
mov
adc
inc
pushf
sti
xchg
ret
pop
fwait
jecxz
ss
cmp
add
fsubs
pop
fwait
sbb
loope
in
jmp
xchg
inc
fdivrp
xchg
shlb
lods
cmpl
scas
movsb
xor
sbb
aaa
rorb
or
daa
mov
dec
repnz
pop
push
rcrl
sarl
xor
cwtl
sarl
xor
cmpsl
push
dec
fistps
sbb
mov
mov
cltd
shrb
add
into
movsl
pop
sub
jecxz
mov
push
jmp
dec
ret
fdivrp
out
or
and
daa
pop
cmp
sub
xlat
adc
cli
mov
add
es
pop
mov
into
push
leave
idivl
add
add
push
jmp
stos
mov
xor
push
jle
mov
dec
loop
int
bound
imul
mov
and
scas
mov
sub
mov
push
popf
sub
inc
stos
mov
fdivrl
mov
daa
mov
add
xor
adc
add
insl
add
mov
mov
repnz
pusha
addl
or
mov
shrl
pop
loope
int3
inc
mov
test
loopne
test
fsubr
leave
std
mov
adc
cwtl
fidivs
adc
cs
gs
cmp
xlat
loop
lods
inc
dec
add
rolb
jns
cmp
lahf
loope
pop
adc
cmp
pop
mov
out
in
js
dec
add
es
push
add
fsubl
inc
arpl
jae
push
xor
xchg
sbbl
adc
dec
jne
lahf
xor
jb
outsl
push
push
mov
xchg
repz
jae
clc
cltd
test
mov
inc
mov
loop
ret
push
pop
and
insb
into
inc
aam
js
out
test
fs
repz
rcrb
mov
push
out
aad
cmpsb
sbb
jp
or
dec
mov
in
mov
fsubp
jnp
xlat
jmp
loop
lcall
filds
fidivs
inc
movsb
cmp
popf
xor
and
jg
and
pop
cmovb
fwait
stc
pusha
push
push
push
mov
mov
dec
adcb
orl
or
pop
int
in
loope
aaa
pop
das
mov
std
jo
mov
pop
push
mov
outsl
xchg
scas
jb
mov
imul
and
mov
xor
xchg
or
loope
cmp
in
sub
mov
cmc
outsb
lcall
and
jo
push
mov
mov
push
ret
ret
mov
jp
inc
out
fldt
lea
hlt
xchg
sahf
or
test
pop
repz
sub
sti
daa
inc
fildll
mov
inc
pushf
rcrb
jns
push
scas
repz
xchg
cmpsb
cmpb
test
mov
and
xor
in
sub
lods
inc
adc
pop
icebp
inc
inc
xor
fstl
insl
test
mov
mov
xchg
sub
insl
mov
les
leave
cmpl
add
cmp
into
das
cmp
mov
sub
pop
lods
cld
loope
shl
mov
add
or
dec
call
fcom
in
sub
inc
je
push
aaa
xor
test
push
inc
mov
fcomi
fnstenv
sarb
add
data16
sarl
xor
lcall
push
shlb
addb
psrlw
adc
test
fs
movsl
xchg
jnp
jecxz
push
xchg
pop
or
xchg
clc
icebp
sbb
mov
xorb
and
dec
mov
adc
push
insb
aaa
out
test
imul
sbb
mov
in
sub
popf
mov
inc
into
mov
jbe
insl
insl
loopne
leave
std
mov
hlt
fidivrs
ficompl
lods
pop
in
xchg
jle
jnp
mov
pop
fsubp
add
repz
and
sub
imul
jae
lock
out
cmp
call
mov
cltd
xor
push
cltd
sbbl
dec
cmp
shrb
xchg
arpl
cmc
adc
add
mov
or
xchg
fst
insb
movzbl
lret
jp
xor
imul
into
push
jo
mov
adc
xor
gs
ret
jle
adc
add
hlt
pop
add
jo
xchg
ret
loopne
fistl
or
jl
xlat
jmp
int3
jae
js
dec
out
xchg
outsl
aas
push
inc
push
xchg
pop
fwait
jmp
cld
iret
xchg
lds
divb
scas
nop
or
mov
xor
pop
jns
inc
loope
divl
rclb
adc
jns
adc
fidivrl
stos
push
ret
mov
std
lods
in
sti
xchg
aam
addr16
sbb
sbb
insl
jnp
gs
add
add
adc
lcall
pop
in
stos
cltd
enter
inc
sbb
pushf
inc
cmp
push
sbb
push
push
dec
dec
add
jbe
mov
sub
hlt
cmpsb
mov
fnstenv
push
ljmp
call
sti
addr16
mov
mov
lock
es
pushf
lret
cmp
push
inc
inc
mov
jns
pop
jae
dec
mov
rorl
jne
cs
in
xor
pop
cld
movsb
insl
push
pushf
jno
sbb
aad
or
outsl
inc
jecxz
aad
jmp
gs
insl
mov
jne
push
loope
sarl
mov
mov
and
xchg
add
pop
scas
inc
xchg
fs
loope
or
sar
xchg
inc
jmp
jp
sub
jl
lret
lret
mov
cmp
xchg
cmp
aad
mov
push
or
pop
iret
ror
and
mov
outsl
pop
xor
dec
or
sarb
mov
xchg
add
mov
stos
int
mov
int3
add
jb
insb
sub
ret
in
or
xchg
jno
ret
push
push
ss
aaa
or
pop
adc
xor
in
js
fstps
inc
cld
mov
push
cmp
out
test
dec
sahf
xor
adc
iret
xchg
testb
lods
lea
lcall
mov
pop
test
cld
adc
ss
xchg
mov
jl
iret
ljmp
insb
sub
or
cmp
xchg
sahf
ret
lods
mov
dec
rcll
loopne
jae
lea
popa
dec
dec
rcll
das
ret
scas
cmp
imul
jno
mov
dec
jno
dec
outsl
daa
scas
adc
cmp
stos
jg
sub
push
rcll
scas
icebp
jnp
test
mov
enter
iret
shrb
popf
inc
lret
dec
jmp
or
mov
add
xchg
cmp
jecxz
adc
ss
add
scas
jge
jns
aam
jo
xchg
add
mov
and
lods
pop
int
push
cwtl
and
nop
add
push
xor
mov
pop
mov
mov
lcall
sbb
ds
aad
inc
pop
aaa
add
or
mov
or
fnsave
loopne
pop
pop
ret
cmpl
push
cmp
sbb
aam
enter
jnp
mov
mov
push
mov
divl
xchg
inc
les
lret
cltd
pop
je
xorb
sar
jae
mov
shlb
xchg
dec
add
push
lahf
mov
out
loop
lods
cmpsl
mov
mov
pushf
adc
repz
mov
push
in
pop
test
jge
sti
outsb
jmp
insb
xor
xchg
pusha
xor
es
jnp
imul
dec
clc
cli
orl
add
into
enter
cs
and
mov
jne
popf
jg
jmp
xchg
aas
mov
add
lods
pop
divl
jp
bound
jo
lods
mov
shlb
rcrb
or
je
inc
sub
inc
repz
pop
add
out
test
imul
cmp
cmp
out
xor
js
lea
arpl
stos
xchg
and
xchg
mov
jp
push
pop
inc
push
cmp
jl
pop
mov
lea
sbb
test
push
inc
inc
mov
lret
fcoms
and
xor
and
out
and
sub
out
fdivrs
jmp
sbb
pop
adcb
shlb
mov
nop
decl
cmpsb
and
push
out
xor
jne
outsb
hlt
jmp
push
or
mov
outsl
outsl
pop
rclb
shlb
jo
loope
fs
xchg
jge
cmp
adc
popf
std
jo
mov
out
mov
arpl
imul
mov
xchg
sbb
addr16
icebp
cmp
test
push
jo
push
jns
js
andl
sbb
pushf
ret
insl
xchg
fwait
xchg
sub
mov
sub
mov
mov
leave
in
push
sahf
sbb
dec
aam
rcrl
enter
loopne
add
inc
out
jne
sub
int
icebp
sbb
pop
pop
aaa
pusha
mov
insb
mov
jle
cmc
ljmp
in
jbe
aad
loopne
dec
add
inc
and
lds
push
cmp
je
repnz
insl
and
add
dec
fwait
xor
adc
bound
mov
stos
mov
scas
sub
sub
shl
movsb
xchg
fsubs
or
fs
sub
xchg
test
jbe
int
mov
test
sub
and
sarb
mov
adc
adc
lahf
dec
dec
cltd
mov
ret
es
pop
pop
out
sahf
mov
xor
mov
inc
and
jne
push
push
fidivrl
dec
or
cld
xchg
mov
sub
stc
nop
imul
mov
lcall
outsb
push
cmpsl
loop
imul
mov
mov
pushf
std
test
mov
push
jmp
or
stos
in
das
sbb
dec
pop
pop
dec
mov
test
in
mov
pop
mov
test
push
add
fcomip
scas
aas
andb
insb
outsb
sbb
jecxz
mov
cmp
mov
pop
mov
loopne
test
sbb
or
es
fiadds
int
cmp
cs
or
fistl
enter
add
xlat
sbb
xchg
push
and
pop
pusha
les
clc
fdivs
push
shl
lea
mov
ret
add
mov
call
rolb
push
fidivs
in
jno
cmpl
test
iret
inc
pop
std
and
in
addr16
xor
push
xchg
xor
mov
or
cmp
out
shrb
ja
outsl
push
stc
adc
lcall
gs
dec
data16
cs
call
push
xchg
sbb
shl
jae
mov
popf
fistl
sbb
fidivl
or
fists
mov
jg
stc
repz
cmp
mov
jge
scas
add
add
hlt
adc
stos
adc
cld
cld
push
call
iret
xor
les
out
cmp
shrb
cmp
jbe
insb
dec
leave
dec
mov
pusha
rcll
mov
stos
das
mov
js
inc
cld
sub
addr16
cwtl
lods
scas
clc
pop
popa
sub
inc
xor
addr16
imul
cmp
sub
sub
adc
mov
int
ljmp
mov
mov
inc
push
out
xchg
stos
mov
nopl
mov
scas
xchg
xchg
in
xchg
jl
mov
out
fildll
jl
push
outsb
xor
or
arpl
stc
icebp
mov
mov
out
shrl
int3
movsb
decl
mov
inc
sbb
scas
mulb
pop
pop
insl
mov
push
cmp
inc
cli
outsb
jnp
ds
xor
scas
aas
ljmp
dec
mov
xchg
out
adc
mov
leave
and
scas
out
or
dec
adc
data16
xchg
mov
or
push
jmp
mov
jmp
sub
fs
cmpsb
scas
pop
cmp
out
ds
jns
mov
jb
or
js
sbb
push
cmp
jl
daa
fwait
sbb
jnp,pn
inc
xor
fwait
and
fwait
pop
jae
mull
sub
rcr
jo
loop
pushf
enter
rcl
push
cmp
das
stos
mov
and
pop
push
les
mov
push
or
out
fdivl
rcrl
out
sub
loopne
das
xorl
push
sub
cmp
out
hlt
pop
test
sahf
rcll
stos
jl
xchg
imul
sub
sbb
dec
inc
add
jp
push
mov
xor
dec
pop
add
aaa
inc
cmp
inc
shlb
dec
out
push
out
adc
or
mov
imul
jmp
cmp
inc
mov
jp
cmp
into
popa
cwtl
rorl
pop
mov
js
rcll
inc
cmc
cmpsl
ret
sub
or
or
push
cmp
leave
mov
ret
stos
test
loope
add
push
pop
dec
pop
cmp
mov
add
dec
sbb
mov
cld
iret
inc
es
push
sub
in
test
out
shrb
fs
cmp
xchg
lods
jnp
xchg
sub
inc
mov
js
pop
dec
cmpsl
cmp
mov
inc
add
out
nop
cmpsb
das
inc
aas
out
imul
jle
add
das
cmp
lcall
sbb
sub
fwait
pop
and
xor
mov
ror
popa
aam
loop
push
jno
scas
ljmp
dec
push
enter
fnsave
xchg
ret
cmp
ss
jmp
jb
mov
push
dec
lods
repz
mov
mov
sbb
pop
fistl
xchg
sahf
sub
and
gs
mov
mov
ss
or
cmp
bnd
ja
orb
hlt
add
jg
mov
ljmp
push
jae
push
stos
push
test
jmp
decb
rcrb
cwtl
lea
xor
cld
stc
popf
aaa
imul
push
dec
outsl
push
jnp
xchg
push
lcall
fisubrs
push
jnp
pop
adc
sbb
xchg
or
mov
cltd
stc
nop
lret
push
out
inc
addr16
ljmp
push
xlat
jns
insb
and
lcall
out
mov
push
push
in
js
stc
imul
es
test
sbb
enter
clc
push
jae
pop
sbb
lcall
pop
bound
inc
xchg
aas
pusha
mov
js
cmp
das
dec
pop
xor
push
inc
mov
pop
push
mov
lret
cmp
jo
mov
mov
movsb
mov
lret
lock
data16
jg
in
mov
in
add
jae
sub
xchg
xchg
inc
imul
pmaxub
sbb
cmp
outsb
mov
stc
je
jae
mov
xor
and
les
clc
or
fisttpl
stc
daa
aad
aad
and
int
das
ja
repnz
in
or
cmp
call
cmpsl
fwait
push
xorb
mov
lock
gs
and
out
stc
test
iret
testb
inc
adc
mov
sbb
loopne
sarb
jp
les
les
push
mov
push
lods
movsl
pop
cmp
out
and
push
cmp
xor
mov
inc
push
test
pop
lods
fbld
cmp
dec
mov
mov
dec
push
leave
dec
loope
sarb
xlat
mov
pop
sbb
insb
mov
xor
and
cld
xor
jge
addr16
mov
mov
cmp
movsl
aam
sub
aam
pop
jmp
xchg
mov
je
jge
mov
sub
dec
loopne
clc
popa
testl
pusha
in
add
mov
imul
gs
outsb
dec
xchg
inc
mov
push
fcompl
push
outsl
xorb
sbb
in
arpl
inc
arpl
fucom
add
mov
jnp
cmpsb
mov
insl
lret
sti
xor
pushl
in
cld
addl
stc
sarl
stos
das
aas
pop
or
fnstenv
push
cmp
cmp
mov
leave
sub
cmp
inc
je
xchg
xchg
scas
pop
dec
mov
jl
adc
lock
aam
cmp
dec
and
mov
test
pop
lret
mov
pop
push
in
mov
jnp
and
push
lock
and
sbb
cld
cmpsb
lea
lods
xlat
jbe
mov
stc
nop
adc
xor
push
mov
jl
mov
mov
ret
aad
addr16
imul
insl
and
mov
shrb
jp
and
mov
cli
aas
jne
in
sarl
and
and
add
rcrl
and
pop
pop
pop
sbb
call
adc
test
jbe
or
sarb
ja
mov
xchg
test
scas
outsb
je
lcall
push
jb
jno
mov
adc
lock
or
pop
mov
pop
fdivrs
mov
or
iret
xlat
outsb
add
insl
xor
sti
ljmp
inc
xchg
sub
or
mov
mov
je
loope
mov
sbb
movsb
jmp
pop
in
test
cmp
xlat
out
rolb
cmpsl
dec
lock
cmp
pop
xchg
pop
or
adc
stos
shll
scas
xchg
sub
push
gs
pusha
addr16
mov
int
jo
xchg
stos
outsb
cmpsl
pop
mov
sub
popa
nop
xchg
ja
orl
stos
push
popf
fisubrs
xchg
sub
xchg
aas
add
mov
pushl
push
loope
sbb
sbb
popf
sbb
mov
inc
mov
nop
sub
push
shrb
or
mov
ficoms
fnstcw
lods
jns
cmpsl
sahf
pop
jge
lret
cmp
lds
adc
push
and
jl
out
xor
cmp
dec
push
popa
movsb
cmpsb
sub
mov
je
pop
push
or
rol
sbb
push
inc
ss
mov
mov
fldcw
outsb
push
mov
das
outsb
add
sbb
mov
clc
sub
mov
inc
addr16
in
adc
mov
nop
push
ljmp
jno
lahf
gs
xchg
fmull
mov
pop
ret
pop
sbb
jp
sub
and
cmc
adc
scas
xchg
fsubs
dec
ret
push
out
adcl
mov
faddl
in
jbe
pop
xchg
cmpsl
pop
je
not
cmp
int3
out
das
mov
enter
sahf
mov
dec
bound
popa
jmp
push
int3
mov
jbe
test
and
shrd
mov
into
xchg
sub
scas
notl
mov
fbstp
mov
push
std
sub
out
cli
les
ljmp
ret
adc
daa
out
pop
inc
idivl
clc
or
cmc
leave
imul
sbb
dec
popa
addr16
mov
jb
jo
cld
sbb
mov
mov
ret
aad
pop
imul
jbe
mov
or
movsb
je
shrb
add
inc
cld
movsl
mov
repnz
push
adc
adc
lds
mov
mov
pop
adc
stc
shll
adc
xor
fldl
sahf
in
inc
inc
sub
xorb
xchg
dec
xchg
pop
fidivs
fsubs
dec
pop
lods
cmpsl
repz
pop
pushf
add
les
and
addr16
push
stc
dec
out
xor
pushf
jae
mov
aam
out
btc
dec
mov
daa
xchg
inc
loopne
cmp
in
pop
rorl
inc
bound
out
cmp
ds
and
lock
mov
mov
sbb
or
mov
jns
push
add
lcall
fwait
out
stos
xorb
addr16
aam
sahf
mov
scas
outsb
out
mov
pop
or
sahf
sub
imul
or
inc
lods
push
data16
mov
jno
and
and
mov
jle
pop
xor
mov
stos
or
ja
mov
in
cs
test
pop
sub
int
ljmp
push
dec
sub
in
adc
shr
pop
adc
sbb
out
sbb
push
int3
arpl
xchg
outsl
or
xchg
cli
test
lret
andb
add
idivb
lods
pop
or
mov
cmp
int
push
dec
mov
divb
push
and
dec
clc
pop
push
pop
fadds
or
mov
in
push
adc
xchg
mov
enter
cmp
xchg
in
sbb
cmpps
scas
jge
clc
lods
mov
jg
fnsave
mov
setne
adc
jp
mov
mov
jmp
mov
mov
sahf
fs
sub
aad
cs
sub
shll
jge
cmp
mov
pop
and
mov
jp
mov
scas
push
lock
bswap
and
mov
out
pusha
cmp
shlb
adc
xchg
dec
lock
jecxz
in
add
repnz
and
adc
repz
jmp
pop
push
lods
cmp
xor
mov
or
mov
daa
roll
mov
cli
fmull
sbb
pusha
jmp
out
repnz
fmull
push
jno
das
and
cmp
mov
loopne
xchg
mov
das
leave
cmp
aaa
push
or
mov
sbb
test
into
xlat
shl
inc
push
push
dec
sub
and
push
inc
punpckhbw
xchg
mov
loopne
inc
xor
scas
jg
pop
sti
xor
mov
clc
sub
pushf
mov
fsubs
sbb
sbb
push
imul
stc
pop
mov
jl
or
inc
and
pop
xor
sub
mov
ret
ja
push
movsl
xor
pop
adc
popa
loope
sar
lret
mov
mov
adc
outsl
mov
push
or
sub
mov
mov
push
xchg
inc
mov
loope
xor
out
je
inc
mov
mov
push
sbb
enter
add
push
jle
push
fidivl
mov
mov
sahf
clc
adc
mov
push
outsl
add
mov
push
mov
mov
orb
add
cmp
add
mov
pop
lret
push
into
inc
sbb
ficoms
ret
lcall
pop
rcll
outsl
lret
or
js
cmp
nop
lret
hlt
testl
imul
jbe
ret
hlt
cmp
shrl
mov
or
cmpsl
popf
cmp
decb
mov
dec
dec
ret
shl
aad
popf
add
jne
imul
or
lds
xor
in
cltd
int3
xor
loop
and
mov
aam
xchg
adc
push
adc
stos
popf
dec
pop
mov
xor
pop
int3
fwait
cmpsl
int
push
movsb
inc
stc
cwtl
jl
aam
and
and
andb
stos
jnp
or
fildll
int
jge
push
insl
dec
dec
and
ror
mov
push
sbb
imul
or
pop
sbb
xor
pop
cli
push
mulb
inc
jnp
ljmp
js
push
adc
jmp
mov
inc
or
dec
sbb
pop
cmp
or
xchg
mov
sub
movsb
cmpsl
bound
sub
cmp
insl
sub
mov
vandpd
mov
aam
add
shl
or
lea
add
std
push
daa
cmpsl
mov
cmpsb
sbb
bound
xchg
push
dec
mov
aaa
stc
jle
out
adc
jle
bound
add
mov
iret
ret
mov
mov
mov
loopne
dec
xlat
popa
pop
rclb
repz
xor
fisubs
or
sarb
inc
adc
xor
cwtl
adc
shll
shlb
mov
dec
push
arpl
aam
mov
lcall
adc
in
push
flds
dec
hlt
outsb
adc
test
push
inc
std
movsl
mov
out
hlt
pushf
jg
pop
outsb
les
shll
dec
pop
scas
incl
push
ficompl
push
out
sbb
loopne
mov
mov
and
inc
fsubl
lea
lds
and
test
fcmovb
scas
cmp
loope
mov
mov
push
push
loop
push
daa
loope
lods
sub
adc
jae
int
sti
xchg
xor
loope
loopne
mov
mov
or
dec
jno
cltd
jle
test
cld
mov
dec
enter
lock
xchg
sub
adc
cli
cltd
fiaddl
aaa
dec
xor
adc
pop
mov
add
xlat
pop
push
outsb
int
mov
js
and
rol
or
ret
xor
pop
in
and
stc
inc
adc
andl
movsl
pop
in
jp
popf
push
popf
xor
dec
adc
and
int
jnp
push
adc
xor
xor
cmp
popf
xor
or
stos
jns
ret
sbb
lcall
xor
xor
hlt
leave
cmp
cmp
dec
out
call
mov
and
jge
dec
pusha
push
shrl
jl
cmpsl
cmpps
lret
dec
adc
push
stos
pop
or
push
addr16
push
hlt
call
stos
jge
pop
cmpsb
arpl
loopne
xchg
jmp
inc
mov
mov
mov
mov
movsl
in
loop
scas
adc
adc
jle
nop
enter
shr
push
sub
dec
dec
lcall
sbb
sbb
sub
mov
add
enter
loop
jo
stos
iret
mov
sbb
jnp
cmp
pop
pop
dec
scas
mov
mov
movntq
and
xchg
xor
cmp
arpl
mov
and
mov
outsl
lcall
xor
adc
inc
popf
lods
jae
test
pusha
adc
mov
add
aad
adc
pop
adc
cs
outsl
lods
sarl
jae
sub
mov
imul
mov
stos
and
mov
mov
xchg
daa
lret
subl
outsl
lahf
daa
test
int
outsb
inc
arpl
sub
push
cmpsl
jno
jo
pop
ror
pushf
inc
insb
iret
push
lds
mov
pop
loopne
add
mov
mov
ljmp
jg
fsub
fisubrs
inc
xor
fsubp
mov
push
add
jl
pop
mov
jae
test
out
inc
sbb
pushf
mov
cvtdq2ps
or
loopne
mov
or
push
pushf
xchg
jnp
add
pop
divb
xchg
xchg
cmp
sbb
lods
stc
test
pusha
sbb
shlb
loop
xor
testb
xchg
push
outsl
js
dec
roll
push
mov
xchg
sbb
pop
sbb
arpl
out
lods
xchg
lds
mov
and
inc
lds
mov
mov
mov
les
cmpl
jp
rcll
call
lods
sahf
outsl
mov
jbe
cmp
jp
insb
push
mov
sbb
ds
xor
mov
jmp
push
sbb
fmull
push
cmpsb
or
dec
clc
fsubrs
sub
or
decb
fwait
test
cli
xchg
loope
pop
jmp
addl
cmp
cmp
addr16
push
mov
jmp
cmp
rcrl
xor
jnp
or
pop
in
lods
pop
mov
jnp
xor
push
push
roll
pop
out
call
lea
mov
scas
lret
leave
ret
scas
jge
jno
add
xor
add
sbb
add
push
test
or
in
stos
xchg
xor
dec
loopne
mov
data16
pop
fisubs
in
mov
mov
and
sub
pop
out
or
scas
add
ds
adc
pop
pop
orb
or
sahf
ret
rol
jle
push
pop
inc
outsl
setns
rclb
cmp
xchg
add
sbb
pop
xchg
movzbl
pop
mov
inc
jge
dec
cmc
das
mov
xor
in
push
decl
dec
mov
je
jecxz
stos
xchg
not
push
or
movsl
repz
push
jge
add
vunpckhpd
mov
es
in
cld
decb
mov
mov
aam
stc
andl
fs
es
add
jp
mov
aam
fists
sbb
mov
sub
adc
incl
xchg
push
mov
xlat
outsb
pushf
jmp
jno
stc
out
mov
and
or
and
push
mov
lret
sti
std
sarb
je
ret
adc
dec
sub
loope
dec
push
and
nop
sbb
aam
popf
lds
pop
mov
aaa
sti
adc
gs
mov
xchg
pop
adcb
jb
fldcw
pop
mov
mov
mov
xchg
or
jp
lods
notb
inc
cmp
flds
lret
loopne
das
cs
outsb
inc
xchg
mov
aaa
outsb
cmpsl
mov
pusha
lahf
lcall
rcr
jo
push
das
out
les
mov
fsubr
xchg
pop
and
add
mov
mov
mov
loopne
add
adc
mov
jne
sub
mov
jne
lods
sbb
stos
daa
cmp
push
sti
shlb
xchg
xor
fisubrs
lret
jae
mov
mov
adcl
mov
push
adc
sbb
hlt
pop
xor
mov
mov
int
out
lcall
or
aad
movsb
mov
cmp
mov
int
mov
mov
aaa
dec
dec
cmpsl
out
pop
aad
inc
arpl
cmp
inc
movsb
mov
mov
sub
jmp
jnp
adc
int3
cli
aas
out
cld
push
mov
cmp
mov
sbb
sbb
jbe
call
arpl
xchg
fsincos
mov
clc
sub
pusha
cmpsl
mov
fisubrl
icebp
out
aas
dec
and
inc
dec
ss
sub
imul
inc
pop
sub
and
mov
cmp
out
je
jg
add
outsb
jle
arpl
loop
ja
jno
mov
lahf
mov
mov
js
in
hlt
dec
notb
jmp
leave
adc
adc
sbb
sub
inc
aad
xchg
push
mov
mov
stos
mov
sti
bound
pop
inc
lret
mov
sahf
push
sbb
ds
clc
pop
sub
cmpsl
fidivl
sub
subb
mov
xor
fistpll
aas
out
pop
pop
data16
mov
dec
mov
std
or
inc
lds
push
cmp
or
outsl
sub
dec
dec
roll
adc
in
ja
mov
and
jmp
add
jne
in
popa
es
push
xchg
mov
mov
dec
stc
sub
fistpll
add
stos
pop
scas
xor
xor
add
xlat
jg
xchg
cmpsl
lds
adc
sbb
cmc
mov
ret
mov
xor
scas
or
cmp
and
fnsave
mov
pop
or
in
aas
emms
iret
fldt
dec
mov
cmp
les
adc
sarb
add
je
add
lea
dec
mov
in
adc
pop
xchg
mov
jge
vpcmpeqb
mov
mov
sarb
addl
mov
hlt
fnstcw
pop
xchg
ret
rorl
adcb
mov
ficomps
push
push
ret
daa
ljmp
clc
adc
xchg
inc
rcl
jb
ja
lock
add
lds
insl
lret
fiadds
jecxz
push
pop
mov
shrb
shl
mov
inc
scas
out
ret
push
ret
roll
std
fucomip
and
adc
dec
in
stos
sti
xchg
shl
xchg
call
push
fs
out
hlt
dec
mov
inc
popa
sahf
stos
lret
mov
aam
xchg
push
push
cli
sbb
mov
jne
jbe
aaa
movsb
daa
or
bound
sbb
xchg
cmp
negl
pusha
int
jmp
inc
xorl
das
decb
mov
out
inc
fdiv
add
vmovshdup
outsb
sbb
popa
mulb
pop
xor
cmp
pop
stos
shrb
jle
cli
mov
cmp
xchg
nop
daa
popa
push
mov
xorl
inc
push
mov
dec
daa
push
mov
orl
jnp
and
push
cmpl
insb
enter
xchg
in
aad
cld
in
mov
mov
test
xchg
inc
adc
ja
cmp
dec
dec
mov
mov
mov
adc
mov
loopne
push
pop
mov
xchg
adc
push
dec
xchg
je
mov
pop
and
imul
push
subl
fwait
xor
xchg
fs
mov
adc
jne
fwait
xor
jno
std
sub
push
popa
xorl
pop
mov
imul
hlt
and
xchg
lcall
loope
adc
lea
mov
jecxz,pt
mov
jmp
pop
adc
dec
pop
ret
andl
popa
shrb
add
aad
call
pop
mov
push
and
in
sti
test
mov
lcall
cmpsb
fnstenv
ret
jns
mov
adc
sub
cmpsb
imul
imul
inc
fstp
or
cmp
rolb
sbb
push
jle
gs
jnp
push
lods
mov
adc
inc
aam
data16
lret
xchg
inc
dec
iret
mov
push
jle
test
mov
arpl
xchg
loopne
loop
outsl
inc
mov
push
rcrb
movl
mov
aaa
pop
mov
or
outsb
add
enter
add
cltd
xor
mov
inc
sbb
push
mov
mov
inc
loopne
mov
negl
subl
and
sbbb
in
out
sti
xchg
test
fsubrp
pop
add
syscall
jno
aaa
xor
jnp
add
jo
dec
add
pop
mov
push
lods
out
cmp
push
inc
scas
pop
lahf
sub
repz
push
xor
mov
push
sub
pop
mov
sbb
sbb
mov
and
and
fcomps
cwtl
pop
inc
inc
mov
xchg
stos
xor
mov
movsb
inc
ret
mov
inc
sub
sbb
mov
mov
mov
lods
add
shlb
jmp
std
inc
ret
fsts
pop
popf
scas
nop
je
lret
inc
maskmovq
idivl
aas
jns
out
xchg
xchg
aaa
std
mov
jbe
mov
mov
inc
mov
sbb
jo
mov
jbe
fcomip
leave
sub
xorb
push
call
jecxz
outsl
push
hlt
add
inc
rcll
enter
xlat
divb
adc
cli
mov
addr16
sub
xor
lea
xor
cmpsb
fildll
lret
gs
add
pop
fidivrs
test
or
out
push
es
jl
jmp
or
sahf
fbld
ljmp
mov
mov
xor
mov
mov
jg
out
leave
pop
or
mov
aad
inc
fldcw
xchg
mov
dec
int
mov
jno
sti
mov
inc
frstor
mov
add
and
stos
iret
cld
dec
or
mov
mov
push
mov
add
mov
pop
addl
enter
shrl
or
daa
fs
hlt
jno
dec
fisubrl
dec
cmpsb
imul
outsl
push
push
pop
mov
fstpt
daa
jge
fildll
inc
outsb
jp
out
aam
mov
mov
in
dec
loope
add
das
mov
mov
jmp
cmc
scas
adcb
and
mov
push
jecxz
addr16
cmp
inc
mov
in
jbe
mov
ret
shll
push
dec
test
dec
and
jge
pusha
fdivr
xchg
and
sbb
xchg
mov
inc
test
xor
add
rcll
mov
dec
dec
xor
inc
cwtl
jae
jne
data16
out
xlat
push
xchg
test
ret
jae
push
add
sbb
mov
pop
dec
and
pop
add
xchg
out
mov
aaa
addr16
mov
popa
mov
pop
divb
bound
mov
inc
or
fcoms
or
or
inc
stc
out
jg
sub
jo
arpl
jbe
sub
and
mov
into
bound
add
add
jge
lods
pop
mov
jb
mov
adcl
xchg
aaa
lret
sub
jo
inc
rcl
xor
add
jae
push
pop
lock
adcb
rcll
lret
into
lret
pminub
xchg
rcrb
lods
and
pusha
add
xchg
push
inc
in
inc
mov
test
daa
mov
push
adc
movb
sub
mov
sbb
negl
dec
push
cmp
sub
push
mov
mov
or
jno
cs
test
js
mov
cltd
movsl
cmp
mov
mov
fs
mov
sub
jg
mov
xor
shlb
dec
pop
sbb
test
shll
xchg
in
setp
into
and
imul
pop
ret
ret
pop
cmc
push
jmp
mov
add
nop
xor
dec
pop
adc
xor
push
sbb
dec
out
jo
out
sub
insl
sub
insl
cmp
popl
pop
cmp
xor
mov
sub
pushf
and
cmpsb
dec
fcoml
mov
xor
xor
into
sbb
inc
cmp
push
dec
and
pop
and
push
sarb
mov
cmp
sbb
mov
xor
pusha
paddusw
cmp
seta
daa
faddl
popf
mov
loope
push
je
sub
shll
mov
sub
outsl
mov
or
add
sbbb
sbb
iret
clc
mov
jecxz
xor
mov
out
pop
mov
lea
nop
xchg
in
cmc
mov
scas
adc
and
shr
adc
into
outsl
cmp
dec
insb
mov
sbb
mov
sarb
sti
and
div
mov
cmpsl
or
nop
dec
add
ljmp
sbb
pop
movsl
cltd
push
or
dec
in
cmc
push
mov
jge
ss
in
loopne
xchg
jle
mov
rol
ds
xchg
or
mov
iret
movsb
cmp
dec
movsb
dec
addl
dec
dec
jne
push
aas
jae
movsl
and
dec
in
test
into
push
jnp
mov
mov
xchg
jl
mov
or
adc
test
or
hlt
inc
jae
push
mov
je
sarl
cmp
popf
pop
dec
fwait
add
pop
out
ret
mov
lret
jo
lcall
cwtl
notl
lret
inc
popf
push
sbb
mov
mov
dec
out
dec
jmp
in
and
mov
inc
adc
lahf
aaa
ficoms
sti
aas
outsl
notb
popa
stos
enter
inc
fstpt
mov
jo
ret
into
mov
cmp
ss
std
dec
push
sbb
push
mov
sbbl
add
sub
sub
push
sub
mov
mov
add
daa
shrl
or
cli
icebp
jl
or
sti
pop
jne
int
dec
cmp
cmp
aas
loope
add
pushf
mov
jl
mov
or
cmp
adc
std
dec
data16
adc
adc
add
xchg
pushf
clc
int
fidivs
sbb
insb
add
and
jae
mov
inc
data16
sub
lret
or
mov
sahf
test
aaa
fnstcw
pop
pop
inc
xchg
movsb
icebp
mov
jecxz
xlat
cltd
fst
outsl
push
cmp
ljmp
xchg
in
daa
out
sub
push
or
movsb
ljmp
xor
cmp
dec
out
dec
add
pop
adc
adc
subl
dec
out
packsswb
sbb
pop
or
out
sbb
dec
popa
fsubs
in
mov
xorl
ja
push
add
inc
dec
in
adcb
inc
nop
daa
xchg
out
scas
inc
aas
ss
addr16
or
insl
mov
loopne
mov
sbb
inc
repz
sub
imul
cmp
aad
lods
cmp
cmpsb
cmp
out
les
out
cltd
jo
loop
fbld
mov
test
mov
pop
imul
pop
xchg
aaa
mov
out
sbb
cltd
xorl
fcoms
repnz
fs
dec
pop
mov
push
fucomi
mov
push
shlb
mov
imul
jmp
ja
and
mov
test
lcall
movsb
daa
ds
push
cmp
xchg
mov
pop
insb
add
jp
test
ja
inc
xor
inc
fmul
test
mov
out
sbb
sbb
xchg
lret
pop
lcall
and
lcall
sbb
and
cmc
push
jle
and
mov
and
inc
testb
mov
test
inc
sti
pop
dec
xchg
sub
mov
shr
xchg
sarb
mov
out
stos
out
cmpl
cmp
int
mov
sbb
das
mov
mov
jmp
cmp
outsb
call
jo
jecxz
mov
loope
adc
sbb
aas
arpl
popf
adc
daa
mov
loop
jno
shrl
test
hlt
dec
cs
int
mov
mov
mov
jnp
in
sub
jne
inc
dec
pop
inc
clc
fadd
adc
repz
sbb
jbe
sbb
int
stos
add
bnd
dec
sub
mov
mov
dec
pusha
into
imul
sti
xor
jo
outsb
add
pop
mov
adc
pop
and
cmp
iret
lahf
mov
loope
addr16
lods
cltd
lods
mov
subps
cwtl
push
iret
repnz
data16
pushf
xchg
adc
mov
ja
push
test
into
lea
aad
sbb
xchg
enter
jecxz
or
xor
mov
mov
xchg
dec
ret
mov
sub
cwtl
pop
decl
inc
adc
jo
inc
mov
xchg
and
xor
add
mov
ss
seto
rol
inc
arpl
insb
dec
add
mov
ret
fwait
push
fistl
scas
add
leave
jecxz
and
stos
mov
pushf
int
in
mov
jae
push
adc
decl
lret
popa
push
mov
sbb
adc
xchg
cmp
nop
add
mov
ja
stos
sub
xlat
je
mov
jnp
mov
sbb
gs
sbb
adc
stos
inc
in
clc
lds
negl
pop
rorb
adc
mov
sbb
test
leavew
fisttpll
cmp
cmpsl
jecxz
inc
test
movsb
mov
mov
cmc
mov
xchg
adc
daa
xchg
mov
and
dec
mov
icebp
aam
or
push
push
xchg
mov
fldenv
cmp
out
mov
ds
mov
cli
fbstp
and
push
xor
inc
xchg
test
pusha
ss
sbb
int3
inc
sub
xchg
add
popf
lahf
test
mov
aam
jbe
pop
push
xor
fidivl
mov
mov
sub
jne
dec
push
add
adc
ret
jnp
dec
jmp
mov
cmp
mov
out
out
es
hlt
daa
pushf
arpl
roll
hlt
sbb
in
adc
jp
lds
pop
addr16
xchg
mov
inc
push
cmp
pushf
icebp
sbbl
inc
mov
test
insb
or
les
pop
pop
repnz
xchg
jp
popa
add
xchg
cmpl
test
mov
pop
dec
mov
and
push
aas
fwait
mov
shlb
push
cwtl
gs
push
int
pushf
movsl
jne
push
mov
shl
je
jmp
add
sbb
ja
je
inc
in
adc
jp
call
add
sbb
sbb
jo
lods
jb
je
stc
ja
aam
sbb
cmp
add
mov
push
dec
sbb
mov
subl
repz
cli
jge
xchg
sub
add
jmp
addr16
imul
fdiv
popa
inc
movsl
push
lcall
push
les
test
mov
cmp
fbld
stos
add
in
call
add
jecxz
adc
sbb
ds
or
enter
fwait
movd
xchg
pop
stos
stc
pop
out
ljmp
xadd
leave
aaa
sbb
movsb
bound
inc
lds
pop
popa
pusha
adcb
push
jne
jmp
mov
pop
sub
jno
and
and
stos
sti
or
insb
mov
cmp
orb
dec
cmc
lret
xchg
in
jmp
shrl
jbe
mov
cld
xlat
dec
mov
pop
xor
push
fucomip
fisubrl
sub
aad
xchg
lret
add
jmp
paddd
dec
sbb
lcall
mov
movsl
jo
in
push
dec
test
dec
std
inc
repnz
fidivl
popa
fdivl
xchg
mov
cli
mov
mov
aaa
add
pop
insb
imul
mov
stc
mov
test
test
push
imul
ss
test
stos
shl
fldt
insl
jg
and
fs
push
mov
stc
push
add
out
dec
and
fldt
jp
ss
push
es
cltd
stc
or
sub
lcall
in
pop
jecxz
icebp
testl
pop
cmp
cmp
fldcw
mov
push
push
push
fucom
stc
pop
ljmp
mov
jne
imul
mov
sbb
sbb
mov
and
cmp
ret
pop
sbb
scas
jb
ret
mov
add
int
jp
pop
adc
iret
js
fdivl
lcall
cmp
cmpsb
movsl
fdiv
mov
sub
lock
xchg
rclb
lds
and
jne
aas
push
cli
xchg
fidivs
xor
xchg
gs
cld
pushf
mov
stos
lcall
pop
adc
jb
ret
stc
or
negb
mov
es
cmp
mov
stc
xor
inc
and
call
dec
add
add
loop
dec
mov
roll
sub
sub
inc
push
inc
in
idiv
jae
andb
pop
and
das
cmpsl
call
mov
jle
mov
mov
mov
in
sbb
enter
lret
cmc
imul
icebp
in
mov
add
cmp
xor
sbb
lahf
test
in
xor
imulb
add
aam
aaa
sti
xor
xor
add
inc
sub
cmp
jns
adc
rcrl
cltd
xor
shrb
adc
push
scas
push
rorl
int
jo
push
jns
dec
imul
fsubrl
and
xchg
aaa
mov
xchg
push
aaa
adc
pusha
rorb
pop
pop
xchg
mov
call
mov
mov
cli
mov
sbb
xchg
out
sbb
push
ret
mov
cmp
fnsave
pop
loope
xchg
pop
mov
movsl
test
jmp
cmp
movsl
movsl
clc
push
inc
cmp
jno
mov
inc
subl
adc
pusha
sub
imul
mov
scas
xchg
fidivrs
add
mov
pop
aas
or
mov
nop
sub
das
xor
repnz
sbb
enter
xchg
inc
mov
dec
push
mov
jns
and
adc
cmpsb
lahf
push
mov
in
push
and
movsl
sbb
lret
stos
mov
clc
leave
stc
pop
dec
inc
cmpsl
jp
fldenv
insl
dec
or
jb
mov
xorl
mov
mov
jnp
xchg
repnz
clc
es
xlat
push
cmp
and
loope
xchg
ja
dec
lret
insb
mov
push
scas
jb
sbb
fdivl
rclb
insl
xchg
dec
push
xchg
mov
movd
addb
cmp
sbb
xchg
jecxz
imul
xchg
mov
int3
jg
scas
inc
aas
cltd
or
xchg
icebp
sub
push
add
ficomps
popa
sub
scas
dec
ds
dec
iret
fs
cwtl
rcll
or
xlat
popw
push
sub
and
pop
das
mov
jg
in
pop
adc
leave
lahf
andb
imul
xchg
inc
mov
mov
cltd
test
movb
jae
outsl
push
xchg
test
sahf
add
rorl
jp
loope
jmp
pop
ja
sbb
and
call
pop
add
cmpl
lret
fnstenv
and
cwtl
stos
iret
inc
and
jmp
add
mov
pop
std
leave
bnd
decl
inc
idivb
in
push
sahf
pop
lds
lea
stos
push
movsb
mov
scas
inc
pop
outsb
scas
sbbb
repz
sub
inc
int3
mov
dec
cwtl
jle
shll
in
mov
leave
fstps
lods
lea
push
mov
jecxz
xorl
fsubrs
test
rcl
mov
mov
aaa
cmpsb
adc
and
ror
movsb
cmp
jno
inc
aaa
cwtl
ret
fdivrp
jo
lods
call
ja
cmp
xchg
mov
dec
arpl
jns
jns
xor
cmp
ljmp
dec
jmp
loope
dec
sub
test
push
ret
mov
ss
std
pop
fdivrl
cmp
jo
push
data16
sbb
sti
mov
psraw
addr16
add
fwait
lcall
into
das
int
xlat
mov
push
dec
fisttps
test
dec
push
hlt
inc
adc
pop
and
or
in
or
add
inc
push
cmp
movsb
jl
lods
cmp
loop
adc
test
push
mov
mov
stc
mov
shll
mov
test
cmc
or
adc
pop
xchg
pop
inc
inc
mov
int
cltd
add
jo
inc
call
mov
int
sbb
or
jb
lahf
outsb
dec
fsts
pop
fildl
mov
and
jmp
cltd
mov
jne
sub
insb
mov
mov
sarl
and
das
pop
pop
jb
lds
hlt
mov
ret
cmp
and
add
pop
cld
sub
outsl
fwait
or
cwtl
mov
imul
xchg
mov
push
imul
mov
or
repnz
push
cmc
and
cld
lcall
in
jbe
stos
cld
outsl
sub
xor
sahf
mov
je
fisttpll
in
cmpl
or
dec
and
mov
sub
pop
push
rol
out
mov
popl
mov
es
xchg
mov
in
sahf
xchg
mov
fidivrs
sub
movsb
mov
lret
popa
mov
divl
cmpsb
sbb
aad
lret
cld
jmp
dec
sahf
adc
push
inc
mov
sub
sbb
xchg
dec
je
lods
stos
rcrl
loop
cmpsl
mov
stc
mov
adc
inc
sahf
pop
adc
sbb
das
dec
mov
push
cmovo
movsl
test
sbb
incb
ret
sarl
imul
pop
cmp
pop
mov
subb
cmp
or
adc
add
cwtl
mov
arpl
push
out
int
adc
cmp
pop
mov
xchg
scas
mov
movsl
jg
int
mov
aad
dec
fyl2x
adc
mov
repnz
invd
pop
les
add
cmp
dec
mov
out
out
add
adc
stc
je
loop
mov
mov
add
adc
lods
xor
mov
cmpsl
jbe
sarl
sbb
ficomps
test
mov
lahf
jbe
mov
shrb
jnp
xchg
lods
sbb
add
outsl
outsl
popf
stc
outsl
push
insl
adc
lahf
popf
mov
iret
rclb
in
pop
popa
xor
xchg
inc
inc
cmc
xchg
dec
pusha
in
bound
cmc
mov
stos
jmp
fstpt
dec
lea
xor
ljmp
jne
xor
les
fwait
ret
lret
xchg
arpl
add
nop
sbb
pop
lret
sbb
sub
inc
rcr
jno
mov
or
and
jae
pusha
sub
lret
sbb
sbb
dec
scas
xchg
mov
sub
ret
inc
and
loop
in
jb
sahf
cmp
jecxz
xchg
cmp
pop
dec
movsb
dec
movsb
sbb
pusha
outsl
sub
roll
addr16
imul
dec
mov
ds
div
into
fidivrl
testl
jno
sub
push
outsl
xor
cmp
mov
jo,pn
ret
es
test
mov
jmp
sbb
mov
and
imul
xchg
xor
mov
aad
je
mov
ret
js
sbb
mov
mov
aaa
stos
and
jno
mov
push
mov
les
das
ret
rcl
push
sub
test
insb
repnz
mov
mov
cmp
and
sbb
jne
jnp
shrb
fidivrs
sarl
data16
pop
out
dec
or
jmp
fisubs
mov
daa
cld
int
out
in
scas
lcall
inc
loope
ficoms
aas
xor
mov
pusha
xor
dec
and
das
testb
mov
sub
and
imulb
into
pushf
outsl
jne
cld
or
outsb
rcl
dec
push
int3
arpl
fcoml
imul
test
inc
pop
dec
inc
pop
jae
aam
sbb
mov
mov
lret
sbb
cmp
mov
ret
jle
cmp
aas
movsl
jnp
insb
cmc
pop
sahf
xchg
shl
cli
or
sar
lods
loope
add
repnz
xor
push
ja
cmp
push
insl
add
inc
jg
cmp
push
aas
push
push
pop
into
orb
sub
sbbl
lahf
push
orl
ss
inc
mov
scas
out
mov
pop
push
outsl
ret
loopne
mov
pushf
lods
inc
into
ljmp
int3
xor
decb
das
leave
lcall
je
dec
add
icebp
sahf
shlb
xor
inc
repz
jns
dec
gs
sub
fldl2t
mov
jbe
int
arpl
pusha
dec
jp
lret
mov
lret
bound
les
adc
in
add
sbb
and
mov
jecxz
rcr
gs
pop
loop
jp
dec
mov
and
nop
popa
test
leave
call
addl
in
popa
xchg
dec
pop
pop
cmp
fadd
push
cmpl
imul
cltd
jge
inc
scas
and
cld
outsl
push
cli
shl
pop
add
aaa
and
int
adc
sbb
mov
or
mov
addr16
mov
add
pop
jo
test
notl
adc
ret
and
and
ficompl
cmpsl
or
dec
gs
xchg
jo
push
rcrl
aam
in
loope
or
inc
push
sbb
bound
sbb
mov
popf
lock
and
inc
xchg
push
and
imul
fbld
aas
loop
test
lods
pop
dec
scas
cmp
sbb
push
jg
xchg
adc
fadd
into
mov
add
mov
jae
pop
frstor
or
jecxz
or
pop
push
mov
cmp
sbbl
or
and
pop
dec
loope
xor
popa
iret
push
stc
das
push
push
lret
sti
jg
jle
je
adc
jnp
test
pop
dec
sbb
in
fwait
sti
mov
jmp
jp
pop
iret
add
jae
jo
mov
icebp
insb
xor
sbb
aad
push
push
sub
bound
bound
fs
jmp
fiadds
fadds
adc
mov
or
fcmovnu
xor
mov
lds
stc
pop
popf
ljmp
arpl
mov
cwtl
out
and
jno
push
cmp
inc
in
mov
sub
mov
dec
shlb
ret
iret
mov
and
mov
mov
sub
movsl
enter
dec
imul
lea
sub
sbb
out
cmp
xchg
jp
dec
mov
fisttpl
sahf
sub
dec
jno
in
and
dec
sbb
jno
cmp
or
pop
mov
movsb
imul
out
int3
rcrl
pop
ficomps
cmp
jmp
mov
js
in
add
push
pop
and
jne
movsb
lods
xchg
sub
out
and
dec
xor
popf
push
sbb
idivb
and
jp
or
pop
test
cmp
jno
mov
push
mov
iret
xorb
sbb
xchg
jb
xchg
add
pop
xlat
outsb
aad
push
and
in
or
cmp
jp
jg
add
mov
mov
stos
inc
or
sub
shlb
out
mov
stc
jle
mov
int
loop
or
mov
jl
mov
gs
fiaddl
inc
mov
xor
fcomip
lcall
test
lock
mov
xlat
and
push
out
scas
and
and
cwtl
cmc
scas
inc
adc
std
fisubl
and
jb
notl
add
jno
aaa
jge
fwait
pop
mov
cwtl
add
add
jae
mov
pop
clc
lods
cs
jnp
sti
inc
xor
push
or
push
adc
lea
in
add
xor
sbbl
dec
pop
lock
sbb
sub
iret
sahf
gs
lock
add
xorb
and
or
push
push
test
fisttpl
mov
fstpt
stos
test
fisubrl
test
lods
push
jae
cltd
xor
or
and
popa
stos
xor
add
mov
jne
icebp
cwtl
outsl
pop
mov
jle
pop
pop
mov
pop
pop
in
pop
mov
sbb
mull
fwait
mov
in
pop
in
repnz
fmuls
test
add
rcl
lahf
mov
jp
push
mov
add
mov
test
sbb
rolb
sbbl
inc
fcomps
hlt
fadd
dec
out
push
sbb
jge
cmp
xor
add
outsl
mov
imul
repnz
test
rorl
mov
mov
ret
subl
xor
pushf
add
adc
pop
inc
inc
sub
bound
cmp
push
stos
into
mov
add
cmp
stos
shlb
inc
push
jae
aas
cli
mov
loope
add
adc
mov
mov
or
stc
stos
cld
jbe
stos
int3
jg
js
rclb
dec
adc
test
sbb
nop
dec
xor
gs
pop
dec
loope
es
mov
add
mov
mov
shll
xor
jg
sub
jge
xchg
addr16
mov
lods
mov
jecxz
stos
and
xchg
div
mov
mov
add
pop
xor
mov
xchg
add
jecxz
add
out
jb
pop
loop
lcall
xor
jbe
xor
test
mov
mov
cld
ds
cmpl
mov
addl
jnp
in
mov
jnp
inc
inc
aas
push
stos
pop
das
orb
or
fdivrl
arpl
or
aam
xchg
jno
aaa
mov
xchg
popa
enter
std
aam
enter
test
inc
jge
xchg
scas
daa
mov
loope
or
in
rorl
dec
loop
in
sahf
inc
in
imulb
test
fists
stos
cmp
ss
mov
inc
sbb
jmp
testl
mov
imul
sbb
xor
dec
push
inc
fcoms
mov
sub
dec
lods
add
xor
jbe
aam
push
cmp
lret
in
mov
pop
addr16
mov
int
ret
dec
bound
fsubrs
test
popf
cltd
imul
pop
call
push
repz
fildl
jo
jns
scas
fnstsw
outsl
call
fsubrl
xor
push
add
mov
out
sub
add
inc
dec
xor
js
add
jl
outsl
sub
jnp
test
sub
addb
pop
or
xchg
xchg
lods
aas
push
lods
dec
and
ss
push
out
lock
mov
jb
mov
inc
fld
fwait
lock
gs
pop
xchg
jg
dec
sbb
mov
fwait
pusha
cmp
test
lret
dec
inc
xor
repnz
std
int3
pop
sbb
push
or
mov
daa
mov
iret
subb
jae
in
sbb
push
out
mov
cpuid
sub
popf
sub
xchg
int
adc
lods
inc
rclb
nop
sub
jae
lods
jmp
jl
push
push
add
lods
adc
movsb
stc
push
lods
loopne
lea
sub
xchg
mov
cmp
jo
add
cltd
inc
adc
sti
sahf
cmp
mov
mov
cmp
gs
rorb
aas
rcrb
imul
inc
test
sub
sub
pushf
xor
test
or
mov
fldl
out
push
push
test
add
or
xchg
jp
sbb
xchg
push
out
lods
add
xor
add
pop
xor
pop
adc
jge
inc
jae
mov
sub
rolb
lcall
fwait
in
push
negb
pop
mov
cmpsl
insl
inc
push
inc
popf
pop
inc
and
sub
xchg
lods
or
dec
daa
out
sti
ds
mov
les
xor
sbb
int
sbb
and
sti
shl
sub
insb
test
fdivl
dec
pop
push
stos
shrb
push
jp
enter
dec
rorb
push
inc
xchg
and
incl
and
add
pop
jg
xor
mov
jecxz
mov
sahf
call
in
scas
bound
push
jns
loop,pt
xchg
icebp
nop
and
jle
in
sbb
add
push
fisubrl
inc
mov
decl
pop
jge
mov
sbb
xchg
adc
out
ss
popf
lods
test
bound
sbb
out
shl
pop
int
mov
xor
inc
fs
mov
push
stc
in
inc
movzwl
or
sbb
mov
xchg
in
pop
mov
push
mov
xor
in
rol
xor
mov
or
or
inc
mov
sbbl
sbb
cld
dec
xchg
std
int
mov
and
mov
or
out
dec
lret
fs
cwtl
imul
js
push
dec
push
xor
test
out
cltd
inc
push
enter
imul
xor
jne
out
pop
cmpsl
lcall
leave
inc
mov
push
push
pusha
and
negl
xchg
pop
jecxz
jb
xchg
out
push
dec
mov
into
add
jl
and
pop
insb
mov
mov
std
ret
pop
sti
cmp
pop
sbbl
pushf
stc
sbb
mov
xchg
es
inc
mov
mov
faddl
mov
bound
aaa
gs
sahf
mov
push
push
jb
mov
pusha
adc
push
cmp
lds
mov
add
cmp
cmp
imul
fldl
mov
xor
fs
mov
ja
mov
icebp
push
call
jno
outsl
push
les
or
xlat
aad
aam
stc
mov
lods
nop
popa
les
fsubrl
cmp
mov
or
dec
stos
outsl
pop
and
stos
inc
sbb
jl
fistpll
shrb
test
jge
aaa
cmp
and
aam
lahf
push
xchg
sbb
lcall
dec
sub
mov
adc
aad
lock
out
pop
repnz
add
pop
jns
xchg
in
cmp
repz
loopne
mov
mov
push
push
adc
jg
inc
scas
mov
outsb
cmp
shll
insb
cld
sbb
out
dec
cmp
les
test
orb
loopne
jne
jmp
test
mov
and
push
push
push
sbb
stos
arpl
shl
aaa
cld
push
bound
mov
pop
lods
pop
xor
adc
push
xchg
sub
clc
mov
pop
movsl
or
cli
mov
and
ljmp
cmp
je
mov
data16
adc
ja
test
cli
adcb
fidivs
mov
lret
int3
lahf
jns
mov
sbb
mov
jo
pop
sub
adc
jge
lods
ret
sbb
call
mov
addr16
es
je
and
push
pop
cltd
pop
sbb
pusha
push
out
jbe
aas
dec
dec
sbb
pop
shrl
icebp
jbe
jae
adc
hlt
push
imul
stos
lret
mov
mov
jb
pop
sub
xchg
das
add
xchg
clc
sbb
into
push
pop
cmp
das
xchg
fcomps
sub
adc
add
jb
or
aas
xchg
stos
push
loop
or
xor
out
gs
dec
push
xchg
pop
lds
inc
je
mov
pusha
cmpb
xor
and
push
dec
mov
sahf
cmp
adc
mov
inc
mov
mov
cli
aam
jno
cld
xchg
mov
rcrl
dec
int3
test
insb
cmp
mov
mov
jb
push
nop
mov
cmp
mov
add
out
test
cmc
xor
mov
add
mov
xchg
inc
jp
test
mov
cmc
mov
add
xor
add
insb
pusha
ret
hlt
xor
cmp
outsl
andl
subl
stos
pop
jp
jbe
lock
loope
push
mov
clc
iret
and
xchg
jge
loope
cmp
and
imul
dec
mov
pop
sub
mov
mov
push
push
and
mov
lods
jne
clc
iret
cmp
push
int3
test
es
cs
insl
cmp
xor
stos
pop
je
inc
push
mov
inc
lds
mov
mov
jbe
cmp
ret
insl
xlat
and
adc
js
fwait
test
in
push
in
nop
add
scas
fisubrl
xor
xchg
cli
pop
xor
int3
fwait
mov
mov
cs
or
or
push
mov
loop
adc
mov
pop
add
mov
and
pop
sub
dec
stc
dec
jmp
nop
lahf
push
or
ss
pop
in
movsl
dec
add
cmp
insl
fwait
mov
pop
pop
jns
dec
imul
pop
pop
mov
xor
sbb
fnstsw
lret
and
jo
or
mov
in
int3
rol
scas
xchg
in
loopne
ja
sub
loopne
mov
and
mov
dec
mov
add
mov
sbb
arpl
leave
insl
scas
sub
mov
insb
inc
push
test
faddl
cltd
mov
shlb
add
out
insb
mov
mov
adc
in
ss
dec
pop
imul
shl
inc
outsb
bound
shll
xchg
hlt
pop
jecxz
into
push
mov
ret
sub
int
loope
sub
in
jmp
adcb
mov
es
sbbl
test
jle
out
sub
mov
xchg
sub
insb
ss
les
mov
in
inc
xchg
xchg
jo
je
loop
mov
sarl
push
das
daa
push
les
int3
dec
cltd
jbe
lods
mov
cltd
in
jnp
pop
mov
pop
xor
and
inc
mov
add
or
cmpsl
cmp
pop
gs
push
sub
pop
adc
stc
loopne
imul
cmpsb
loopne
cltd
insb
mov
and
push
repnz
mov
inc
popa
mov
or
dec
jmp
push
outsl
and
xor
adc
push
dec
and
push
dec
int
testb
adc
push
lret
fstl
mov
imul
lock
es
repnz
sbb
mov
jge
into
insb
adc
les
cmpl
inc
stos
into
gs
lock
enter
lods
or
pop
scas
mov
insb
cmpsl
pushw
int
or
xlat
sbb
mov
cmp
jecxz
and
mov
test
in
clc
andl
inc
sbb
xlat
pop
jae
dec
sbbl
jg
cmpsb
je
cmp
xchg
xchg
sub
mov
pushf
cmp
add
insb
cmpsl
dec
out
js
add
pop
repnz
lret
call
mov
or
insl
pop
xchg
les
cmp
call
in
or
pushf
popa
repnz
sbb
test
inc
mov
push
je
mov
mov
xor
nop
out
out
sbb
lock
jmp
lret
xchg
and
fisttpl
orb
iret
xor
fcmove
xlat
or
mov
pop
icebp
je
out
scas
hlt
aas
adc
jno
xor
jo
fistl
or
shll
aad
and
ja
popa
cmc
fpatan
mov
sbb
daa
push
dec
xor
adc
xchg
xchg
stos
es
mov
inc
mov
xchg
mov
movsb
sbb
daa
mov
sbbl
push
pop
stos
roll
inc
enter
mov
jo
arpl
cmp
mov
cmp
jae
into
push
insl
sbb
dec
ds
inc
cmpsb
cmp
mov
inc
lret
mov
int
pop
popf
pop
aam
and
outsl
inc
into
repnz
lods
lret
js
and
js
ds
cltd
sub
inc
sbb
mov
pushf
mov
inc
push
leave
popa
arpl
test
push
jo
mov
clc
jne
test
adcl
fcomip
scas
inc
out
das
cmp
inc
dec
mov
inc
cmp
pop
pop
test
cltd
jb
mov
pusha
fwait
xor
ljmp
popf
mov
push
out
mov
mov
in
jne
clc
jbe
xchg
stmxcsr
lea
push
cmc
inc
cmp
xchg
sbb
rolb
mov
addr16
addr16
mov
daa
rcrl
int
add
and
or
sub
jmp
pop
cmpsb
movsb
add
push
ljmp
call
add
dec
ret
cwtl
test
push
shll
sub
xchg
ds
loopne
xor
mov
mov
sub
pop
pop
mov
adc
sub
lahf
xchg
loope
notl
nop
push
test
ds
shll
sub
inc
pop
and
jnp
jl
in
cmp
rclb
and
repnz
daa
aam
arpl
mov
subl
in
cmpsl
movsb
mov
sbb
add
xor
pushl
les
mov
loop
stc
test
mov
cwtl
cmp
pop
cpuid
pop
xor
jg
lret
lcall
sbb
push
test
es
ds
loop
dec
pop
pushf
test
outsl
js
flds
das
fistpl
pusha
sbbb
popa
mov
push
push
xlat
mov
jbe
pop
mov
adc
adc
les
jnp
ret
lods
mov
dec
shl
and
pop
pop
jno
repnz
mov
add
pop
lds
xchg
sub
adc
in
test
sub
dec
cmpsb
mov
add
leave
js
push
cmp
test
dec
rclb
in
mov
enter
cmp
lods
fisttps
mov
xchg
xchg
aad
cmp
test
pop
mov
getsec
cmp
test
cs
shll
mov
adc
jnp
xchg
icebp
xchg
sub
jne
push
lret
int
cmpl
cmp
inc
icebp
lret
xor
stos
jnp
shrb
inc
cld
mov
addps
imull
dec
add
xchg
pop
sbb
push
fnstenv
fidivrs
lcall
ja
cmc
dec
xchg
sub
dec
add
and
dec
inc
pop
pop
add
popa
test
daa
adc
in
jg
and
je
testl
push
mov
mov
pop
aaa
inc
cmp
mov
lods
mov
add
pop
xchg
and
push
push
ds
and
adc
scas
jo
arpl
cmpsl
out
test
mov
pop
das
add
inc
out
cmpsl
ret
dec
ljmp
aad
xchg
and
ja
and
imulb
add
shrb
xchg
aam
push
pop
sub
add
pop
test
into
call
mov
sti
pop
sub
add
popa
jl
dec
adc
pop
add
push
jecxz
inc
stos
pop
rcr
sahf
adc
sbb
lcall
xor
popf
jnp
fstpl
arpl
sbb
jle
xlat
mov
ret
lds
sub
and
leave
sbb
daa
mov
lret
cmpl
loop
add
push
ret
int
jmp
inc
jno
js
lods
xchg
inc
and
cltd
add
ds
xor
lcall
leave
stos
jg
insl
xor
push
fsubl
add
xchg
mov
shlb
cs
fdivr
pop
sti
dec
add
xorl
test
sahf
jmp
call
es
cmpsl
jle
mov
cltd
in
add
dec
jg
in
push
cmp
ds
push
imul
stos
mov
aaa
jnp
xchg
add
adc
dec
inc
fwait
mov
sbb
call
lds
ret
mov
lea
pop
in
cmpsl
add
sbb
pop
loopne
stc
xor
test
scas
jecxz
jnp
js
dec
dec
xor
sbb
insb
xor
shrb
or
xor
xor
std
jo
push
mov
adc
xchg
fisttpl
or
cltd
add
mov
loopne
in
push
push
inc
fstl
mov
inc
mov
addr16
imul
cld
pop
add
cmp
or
nop
rcrb
xlat
repz
mov
mov
and
push
mov
pop
mov
fadds
jp
aam
sub
out
sti
hlt
sub
aaa
fwait
repz
or
aad
mov
push
lods
mov
mov
jp
mov
mov
dec
movsb
push
add
mov
xchg
push
jecxz
push
ret
fisttps
lret
and
jno
shrb
shlb
dec
push
adc
fucomip
xchg
test
bound
push
adc
mul
imul
or
dec
push
cs
sub
pop
xchg
jmp
pop
fbstp
add
push
inc
jle
adc
push
stos
in
xchg
mov
push
mov
dec
dec
or
and
pop
xchg
and
inc
ss
pop
mov
int
ja
stc
mov
mov
cltd
mulb
out
mov
mull
test
jnp
dec
mov
fwait
movsb
jno
movsl
ds
jge
mov
pushf
inc
jp
hlt
pop
fsubl
push
stc
fnstenv
lea
cmpsb
push
cmp
xor
pushl
xchg
pop
shl
cmp
in
fwait
adc
aaa
sub
out
sub
lods
fcompl
inc
fmuls
repz
movhps
xchg
mov
or
bswap
mov
fdivl
das
cmpsl
mov
push
sahf
int
add
pop
inc
and
pop
cmpsb
fdivrs
js
adc
js
and
jp
push
push
and
mov
test
jns
das
cmp
lock
xor
arpl
ds
cmp
jne
mov
jbe
cmpsl
cmpsl
frstor
test
sahf
or
inc
inc
fsubl
jp
xor
add
ror
das
lds
movsl
pusha
test
fadds
pop
jbe
add
leave
cli
nop
out
sti
xchg
dec
cmc
rorl
xor
loope
push
mov
shl
cmp
adc
and
stc
jle
xchg
jl
jbe
loop
movsl
jne
in
adc
stc
pop
xor
xchg
fstpt
movsl
enter
cmp
inc
gs
mov
lret
push
cmp
push
pop
mov
mov
pop
lahf
out
push
in
add
lret
in
repnz
push
lret
test
call
dec
ret
and
add
in
data16
insl
lret
xchg
xor
fimuls
cmp
pop
addr16
jl
and
mov
in
mov
cwtl
mov
xor
pop
arpl
mov
mov
push
pop
adc
cmpsb
inc
sbb
adc
ds
pop
dec
jecxz
js
fs
adcl
ljmp
aam
loopne
pop
dec
out
mov
sbb
jbe
inc
or
add
fdivrs
ljmp
idivl
fisubl
xor
movsb
ss
test
jl
inc
cmp
push
aaa
lods
shll
mov
pop
sbb
sti
enter
dec
decb
xor
mov
scas
es
outsb
hlt
dec
lea
cmp
int3
lret
xor
lret
stos
push
jno
xor
ds
jg
loopne
sbb
addl
push
testl
imul
xchg
cli
test
sbb
jb
sub
sbb
mulb
push
pop
pusha
cmp
jnp
pushf
lods
add
daa
ds
outsb
add
dec
sahf
shlb
inc
cwtl
adc
adc
test
insb
scas
sbb
xchg
subl
adc
loopne,pn
pop
in
sub
cs
addl
out
imulb
xor
xchg
xor
gs
or
pop
mov
loope
sub
jmp
dec
or
std
jge
mov
push
xchg
cs
ret
mov
sbb
sub
xor
mov
mov
jle
xchg
or
fisubs
out
mov
jo
mov
sti
ljmp
mov
cmp
scas
in
int
lahf
dec
or
shrl
xchg
daa
pushf
and
bound
mov
inc
outsl
add
cltd
sub
pusha
scas
xor
rol
ljmp
and
out
shrl
adc
sub
jp
jmp
sbb
xor
sarb
mov
pop
lahf
cli
cmp
mov
and
jbe
arpl
cli
shufps
jne
jnp
aam
dec
movsl
sub
lret
mov
jge
mov
lcall
pop
insl
jnp
push
popf
repz
push
sub
sub
mov
sub
cmp
jns
push
cmpsl
scas
mov
mov
add
addb
jnp
ds
out
xchg
jecxz
or
hlt
fs
jmp
add
imul
cld
sbb
shl
ja
sahf
hlt
jecxz
cmp
lock
cmp
xchg
jmp
shr
insb
cmpsl
xchg
mov
or
popfw
and
cwtl
imul
in
adc
cmpl
cmpsb
cmc
jno
clc
push
lahf
jnp
fisubs
fmull
sub
sub
imul
test
loop
or
adc
insb
sub
in
filds
sub
push
sbb
mov
mov
sbb
push
fwait
inc
dec
out
arpl
jp
shrb
inc
jmp
mov
cmp
shrl
jl
mov
rcr
jmp
fnstenv
xchg
fs
sub
pop
push
repnz
mov
xchg
pop
loope
leave
je
scas
pop
in
or
addr16
ss
mov
scas
mov
out
filds
imul
adc
push
xchg
outsb
cld
or
pop
pop
push
inc
xchg
fdivr
dec
in
inc
jl
cltd
lock
or
xchg
idiv
andl
dec
and
icebp
xchg
insl
add
push
iret
imul
inc
mov
push
das
repz
and
xchg
dec
bound
sbb
aas
out
push
sbb
mov
mov
das
sbb
iret
bswap
sub
pop
aam
dec
shrb
push
pop
scas
shrl
decb
xor
jbe
scas
pop
push
in
inc
inc
xchg
sahf
andl
imul
fdivl
or
xor
dec
adc
mov
stos
jmp
add
jge
push
jmp
mov
xor
push
jae
lcall
or
fmuls
or
leave
mov
call
push
inc
ret
or
mov
js
pop
push
mov
pop
je
lods
xor
sahf
push
fsubrl
mov
rorl
cmc
cld
outsl
jecxz
adc
xchg
xor
and
jnp
push
jne
cmp
enter
and
cmp
and
sbb
cld
data16
sub
enter
into
sahf
push
out
addl
sub
lret
clc
das
ret
outsl
repnz
sbb
lds
sub
mov
pop
sbbl
pop
adc
std
xchg
pop
fiaddl
sub
cmovp
movsl
ret
push
js
scas
xchg
xchg
push
addr16
mov
incb
sbb
pushf
loopne
fld
cli
xchg
mov
mov
scas
sbb
pop
fwait
sub
int3
jge
mov
and
mov
leave
sub
jb
add
js
or
inc
push
push
lock
inc
mov
jbe
pop
les
clc
lret
pop
movsl
xor
clc
insl
out
pop
lret
cwtl
cmpb
cmp
dec
mov
insl
pop
test
shrb
jmp
pushf
lea
jnp
stos
inc
or
inc
inc
dec
out
rcll
add
insl
stc
push
test
cmc
push
mov
pop
xor
mov
pop
inc
in
or
daa
mov
mov
in
les
arpl
or
daa
dec
mov
xchg
mov
push
repnz
ljmp
repnz
das
cmp
cmpsl
jle
mov
push
xchg
pop
and
jnp
std
jecxz
mov
fsts
mov
inc
cwtl
call
lcall
dec
or
push
cli
sub
clc
or
adc
sbb
out
mov
xchg
sub
sbb
cmp
test
fnstsw
repnz
push
leave
dec
lcall
fsubrp
pop
adc
xabort
in
jb
xor
aas
js
jp
insl
mov
mov
mov
ljmp
dec
out
addr16
iret
outsl
and
or
or
inc
xchg
dec
cmp
mov
js
and
ds
xorl
xchg
enter
repz
cli
xor
xchg
outsb
stos
sbb
xchg
xchg
xor
push
test
movsl
push
adc
pushf
scas
es
mov
cwtl
addl
mov
imul
lahf
leave
mov
add
push
iret
mov
bound
jg
dec
ljmp
ffree
or
xchg
xchg
fadds
ficomps
or
pop
pop
pop
ljmp
scas
inc
xchg
les
std
in
push
sbb
lcall
cs
cwtl
aad
gs
dec
pop
repnz
mov
sub
inc
fildll
add
xchg
js
insb
or
sub
and
cmpsb
test
dec
dec
rorl
mov
cld
mov
rorb
outsl
testl
mov
mov
dec
and
sub
inc
outsl
mov
cmp
mov
nop
push
mov
sub
scas
rcrl
cmc
lods
xor
or
mov
mov
test
orl
mov
push
sub
push
loope
push
mov
sbb
xor
push
jns
loop
jle
loope
mov
imul
mov
mov
push
jle
or
and
stos
div
imul
imul
xor
mov
movsl
cmp
loop
shl
fwait
es
fmul
push
dec
dec
add
test
mov
and
push
ds
push
dec
push
cwtl
daa
int
pop
ror
add
hlt
mov
jbe
dec
shll
loope
push
or
dec
or
fidivs
rolb
lods
jo
sbb
lds
or
js
das
add
shrb
push
jnp
mov
dec
pusha
pop
mov
fcmovnbe
mov
inc
inc
fdivs
std
pop
and
push
aad
mov
cld
or
outsb
inc
lret
xchg
lea
lods
xor
cld
cmp
leave
cmpsb
cmp
sbb
inc
lods
aas
mov
jns
ljmp
call
aam
cmpsl
loopne
xlat
sub
ja
jge
adc
ret
loop
add
sbb
sarb
push
int3
ljmp
popf
cmp
or
leave
test
or
scas
in
adc
adc
ds
ss
dec
lret
rcrb
icebp
mov
out
addr16
sub
mov
mov
add
das
pop
inc
or
cmp
push
aas
outsl
xchg
inc
mov
mov
insl
mov
mov
lods
hlt
mov
jne
test
push
and
js
xchg
inc
adc
call
or
mov
popf
insb
ret
push
pop
loopne
lret
and
cmpsb
imul
dec
aam
pop
sbb
fistps
dec
push
rorl
mov
imul
mov
inc
cwtl
in
mov
or
and
push
push
scas
or
or
mov
daa
je
xor
lcall
lds
test
call
fcoms
fsubp
inc
mov
hlt
dec
mov
push
mov
xlat
add
es
addl
aad
in
bnd
in
xchg
jge
arpl
mov
ja
mov
inc
fldl
xlat
daa
mov
popa
roll
outsl
mov
mov
test
ds
cmp
mov
in
mov
lret
sbb
fcoms
mov
sahf
mov
xor
sbb
jp
imul
bnd
mov
mov
mov
outsb
lret
fwait
ffreep
push
sbb
scas
add
sub
adc
sub
std
mov
mov
mov
fwait
add
sub
inc
les
incb
sub
mov
pop
xchg
adc
shll
mov
movsl
cmp
cli
jbe
sbb
stc
mov
mov
aaa
jle
mov
jl
stos
mov
inc
mov
push
hlt
imul
push
ja
cmc
push
enter
push
jmp
lock
dec
pusha
lods
fistpl
lcall
cmpsb
aas
scas
cmp
xor
pushf
test
iret
pop
mov
jae
movsb
lock
fimull
pop
mov
xchg
scas
mov
inc
lret
test
out
cmp
rolb
test
movb
outsb
pop
push
mov
les
out
daa
mov
mov
or
pop
or
xor
cs
sub
addr16
pusha
fldcw
imul
jb
subb
adc
pop
pop
inc
mov
int
out
xlat
int
nop
sbb
or
mov
push
out
aas
data16
aad
or
jmp
push
and
sub
pop
lock
push
xor
jae
aam
sti
mov
ficoms
sbb
test
jo
cmp
xlat
push
or
scas
ja
jp
inc
shll
push
mov
jecxz
or
mov
mov
or
out
dec
adcb
mov
mov
shlb
loop
ficoms
repnz
and
xor
ds
lret
mov
seto
mov
cmp
sub
scas
cmc
jmp
decb
cltd
jno
push
add
test
jo
xor
xchg
cld
jne
and
or
sbb
mov
nop
lcall
in
jl
out
stos
push
out
xchg
add
movsl
dec
jae
push
cmp
sub
sub
xlat
jo
in
in
ljmp
imul
push
hlt
mov
gs
out
mov
pushf
push
mov
in
outsb
test
filds
jae
shl
imul
mov
inc
pop
test
mov
ja
xchg
jnp
inc
xchg
xchg
lds
addl
or
sbb
jne
fistpll
mov
sub
fisubrl
enter
lds
in
xlat
mov
sub
pop
in
xchg
shlb
dec
push
call
xor
mov
call
or
popa
mov
mov
movsb
mov
bnd
and
pop
sub
jle
jle
imul
loopne
xchg
push
sarb
inc
js
int
imulb
pop
ficoml
lods
mov
iret
iret
data16
jecxz
mov
dec
ret
mov
or
scas
les
xchg
xchg
dec
cmc
sahf
das
mov
jb
xchg
rcll
push
mov
jno
and
out
ret
mov
cmp
push
jo
ljmp
insb
aam
sahf
shll
aaa
movsl
dec
out
lock
call
lods
testb
stos
stos
inc
mov
push
leave
fs
mov
cwtl
xor
mov
add
pop
nop
addr16
push
sahf
lcall
push
fcoms
cmp
insl
or
cmp
lcall
dec
call
push
jb
insl
ja
mov
xor
rcll
jg
and
or
cmp
mov
mov
ljmp
in
push
je
mov
xlat
jbe
jg
call
push
and
pop
cld
fildll
outsl
mov
lods
or
cs
pusha
cltd
ja
adcb
int3
mov
stc
xchg
sub
cld
into
jno
jne
lds
and
xlat
push
inc
movsb
mov
mov
cmp
repnz
jno
xchg
sub
push
xchg
sbb
sub
mov
fmuls
adc
and
scas
out
js
xor
stos
mov
adc
sti
pop
or
icebp
mov
xchg
leave
sub
cld
pop
dec
fs
xor
sbbb
scas
aam
mov
out
popa
sti
imul
les
fimull
adc
mov
xchg
shrl
sarb
jge
scas
push
add
cmp
pusha
filds
daa
mov
pusha
or
add
push
jb
jne
test
mov
mov
xchg
add
sti
add
pop
or
push
push
mov
inc
insl
inc
ljmp
test
pop
pop
icebp
cmp
pop
push
lods
icebp
jle
xchg
loope
push
inc
sbb
fsts
sbb
movsb
lret
mov
xor
loope
mov
ds
xchg
arpl
std
nop
inc
add
addr16
es
sbb
push
cmp
and
call
insl
sbb
and
adc
add
mov
adc
jb
add
mov
adc
jmp
enter
pop
out
xor
inc
xchg
jnp
and
dec
cmp
mov
xlat
or
or
inc
mov
in
std
or
inc
fcmovnu
sbb
xchg
subl
jmp
push
cmpsb
jbe
sub
rep
dec
lcall
ficompl
lea
stc
push
lea
cld
mov
je
jns
add
jns
push
jmp
xchg
cmp
xchg
je
inc
push
repz
lods
jnp
mov
sbb
cs
xlat
call
inc
in
add
fs
push
xchg
lret
sub
or
les
outsl
js
mov
daa
mov
dec
mov
js
ret
cmpb
jno
arpl
scas
shrl
test
pop
push
add
add
stos
fcmovb
pop
int3
push
push
push
pop
jecxz
outsb
aad
outsb
jl
mov
jnp
mov
les
movsb
xchg
cmp
daa
mov
cmp
es
push
adc
xor
in
leave
pusha
push
add
je
inc
loopne
and
addr16
loopne
jmp
pop
pop
xchg
rorb
mov
cmp
mov
jb
mov
cltd
mov
aas
es
push
mov
outsb
pop
pop
leave
pusha
mov
mov
cmpsl
sbb
outsb
sub
dec
ss
jnp
adc
mov
aam
rorl
dec
out
arpl
jg
sbb
push
mov
dec
fnstsw
mov
data16
stos
and
iret
mov
mov
fdivrl
jle
mov
stc
push
test
inc
adc
leave
test
inc
sbb
dec
mov
dec
mov
adc
das
repnz
data16
or
mull
loop
push
sbb
xor
sub
je
insl
sbbl
push
hlt
mov
pop
xor
xchg
mov
jb
inc
int
xchg
xchg
or
sub
or
mov
inc
xchg
fcmove
cmp
imul
ljmp
and
mov
sub
mov
pop
cwtl
gs
xor
std
popa
jns
cmpsb
mov
in
shll
outsb
xlat
repz
mov
sub
sub
and
jae
mov
push
inc
fisubrl
imul
lods
rcrb
add
xor
push
movsl
in
pop
xor
or
mov
and
add
inc
mov
bound
jmp
sbb
push
movsb
dec
mov
or
sbb
dec
mov
pop
ret
gs
jg
lcall
dec
ds
aam
fadds
jae
popf
xchg
xchg
push
cmp
fs
jle
ds
pop
xchg
add
mov
jg
fidivl
outsl
inc
mov
shrb
adc
das
out
pop
aad
xchg
or
sbb
sub
cli
test
repnz
test
out
xchg
add
cmp
pop
negl
outsl
cmp
out
jae
cmp
outsb
and
pop
stc
sub
lods
dec
sbb
xchg
lret
mov
add
aaa
fs
pop
xlat
add
cmp
jmp
push
dec
or
fistpll
ret
into
pop
and
mov
sub
icebp
jnp
xor
add
sub
jns
std
mov
push
insl
ljmp
sbb
jge
cmp
mov
stc
fcomps
sbbb
jecxz
mov
mov
mov
leave
or
dec
lcall
insb
insl
cmp
fimuls
mov
jns
jns
fsubr
out
fprem
popf
stos
iret
xor
cld
or
test
testb
xor
adc
into
dec
pop
ja
sub
and
stc
outsw
xlat
ret
pop
scas
cmp
divb
and
fstps
sti
dec
dec
pusha
clc
ds
imul
shr
out
call
or
in
mov
test
push
adc
ret
enter
rcrb
in
outsl
jmp
or
cmp
dec
popf
std
fs
aad
sub
sub
pusha
pushf
jmp
pop
cmpl
ret
imul
mov
sbb
int3
adc
scas
pop
mov
leave
pusha
pusha
dec
leave
test
das
and
xor
out
mov
fisubl
je
enter
popf
scas
mov
or
xchg
imul
out
push
sti
addr16
fsubs
cmp
jb
sbb
push
loopne,pt
lods
fisubl
mov
popa
insl
int3
jbe
mov
sbb
test
mov
mov
lock
jmp
test
jnp
popf
nop
mov
popf
xor
insl
sbb
rolb
rorl
loope
adc
push
and
mov
cmpsl
dec
and
mov
mov
mov
inc
and
sbbb
into
insl
cmc
shll
mov
mov
mov
es
hlt
mov
pop
mov
dec
test
pop
dec
or
mov
popf
lods
es
fistl
jo
pop
xor
cmp
jecxz
loop,pt
jl
cmp
inc
jne
cmp
jmp
outsb
cld
in
test
push
hlt
push
mov
jae
js
sub
fbld
fwait
push
bound
push
test
jb
andl
arpl
in
jmp
dec
pop
mov
add
push
repz
pop
not
pop
pop
cmpsb
int3
icebp
jge
roll
dec
mov
jb
mov
sub
cmp
insl
shl
out
cmp
idivb
cltd
in
nop
mov
lock
push
fnstcw
cmp
cwtl
cmp
lcall
gs
movsl
xchg
hlt
sub
sbb
ficompl
xchg
push
mov
cmp
dec
sub
cmp
in
ja
stos
xchg
sub
fildll
cwtl
cmp
out
ds
inc
push
mov
cli
movsb
aam
add
dec
incl
dec
add
add
cmpsb
out
ljmp
shll
in
cmp
mulb
cmpsl
jnp
jmp
adc
leave
push
lods
dec
mov
fmull
aaa
inc
aad
shll
pop
inc
fstpt
ret
sbb
sub
sub
cli
dec
cmp
dec
int3
mov
out
jp
repnz
scas
push
out
xchg
inc
fldt
jbe
movsb
js
fcmovu
arpl
xchg
sub
jae
sub
fcoml
leave
adc
ljmp
stc
nop
lret
das
lock
inc
pop
or
or
sub
shll
aas
call
jmp
std
push
in
popf
js
icebp
sti
lods
repz
jecxz
loop
and
dec
mov
mov
sbb
pusha
lcall
out
inc
adc
xor
jbe
xchg
mov
lret
xlat
aas
mov
test
sahf
cltd
orl
sahf
push
lret
xor
xchg
xchg
jmp
pop
mov
ljmp
outsb
ja
stos
dec
into
lods
test
mov
test
mov
jecxz
jns
push
stos
outsl
jns
test
clc
ljmp
out
push
mov
cwtl
aad
aam
xor
lea
cli
mov
mov
xlat
subl
out
sub
push
das
shlb
mov
add
inc
popa
dec
push
sbb
sub
push
cmp
inc
cmp
dec
sub
lcall
in
pop
addr16
test
pop
cmp
lock
jecxz
cmp
sbb
aad
adc
pop
push
arpl
ret
loope
mov
jle
aad
dec
iret
fildl
es
jnp
jae
mov
xlat
dec
pop
push
cmc
dec
in
icebp
repnz
push
repnz
addl
jns
cwtl
and
push
adc
lock
jo
cmpl
les
add
pop
addr16
inc
lret
ds
push
jae
test
cmp
sbb
push
mov
out
dec
xchg
cli
in
adc
dec
cwtl
mov
stos
inc
pop
fsubr
push
imul
push
aaa
into
push
jae
orb
mov
pushf
jb
cli
xchg
xor
dec
out
xor
pop
jo
outsl
das
add
sub
enter
das
mov
xor
divb
ret
sbb
xchg
cs
adc
jne
jl
out
push
mov
fwait
xor
mov
and
iret
in
mov
pop
add
xor
shlb
fisubrl
cmc
xchg
lods
push
and
test
xor
inc
push
popf
inc
and
xchg
cmp
arpl
jno
mov
popf
into
mov
dec
push
jecxz
incl
dec
pop
loopne
ds
or
and
or
xor
push
out
push
push
popf
push
jl
inc
pop
ud1
daa
cmc
shlb
inc
and
mov
leave
and
cmp
mov
add
and
sbb
jae
jbe
movsb
dec
int3
push
lods
mov
fmulp
adc
jb
test
xorb
scas
and
add
icebp
inc
lret
xchg
lcall
enter
icebp
fbld
sub
inc
popa
sti
inc
xchg
adc
dec
jae
lds
gs
mov
insb
loopne
sahf
adc
push
popa
or
insl
mov
test
pop
insl
sbb
sahf
fdivrs
and
jbe
dec
jbe
sub
fstps
cwtl
adc
das
call
insl
pop
jae
mov
xchg
jp
push
mov
call
jle
push
mov
cmpsl
inc
adc
and
fsubs
in
mov
ret
fadd
mov
mov
das
push
cld
stos
imul
out
mov
in
orb
mov
sahf
lret
addr16
je
xchg
js
pop
ret
mov
in
test
movsb
aad
mov
lahf
sub
orb
cmp
mov
sbb
xor
dec
adc
popa
xor
xchg
sbb
fsubs
mov
push
les
inc
call
outsb
xor
cmc
bound
insl
pop
into
pop
das
cmp
leave
dec
hlt
jecxz
lret
in
cmpsb
les
bound
cmp
sbb
test
mov
jne
xchg
cmpsb
icebp
shrl
daa
pop
out
add
jno
jle
xchg
scas
mov
jno,pn
and
stos
jmp
dec
out
repnz
and
inc
cmp
out
adc
and
push
inc
fiaddl
std
push
inc
inc
xor
sbb
lods
push
dec
add
repz
in
cld
xor
int3
cmp
pop
mov
les
rcrl
test
cmpsl
loop
fmuls
mov
jg
aas
mov
jbe
add
jns
lret
decb
jp
push
mov
push
int
inc
xchg
or
or
outsl
ss
repnz
push
inc
lahf
jecxz
leave
sbb
inc
inc
push
push
inc
orb
sub
data16
je
mov
adc
dec
dec
or
mulb
xor
out
stos
mov
and
jmp
sti
xchg
mov
lea
jle
xchg
lock
mulb
or
shrb
add
addr16
pop
fwait
and
pop
lcall
inc
mov
lds
jge
sbb
and
mov
stos
andb
mov
jae
xorl
push
mov
sbb
dec
dec
inc
push
je
lcall
push
sahf
jg
push
cmpb
mov
es
fistl
mov
movb
std
sahf
and
mov
pop
hlt
in
or
jns
sub
mov
mov
insl
add
jmp
xor
es
fldl
icebp
dec
roll
inc
pop
ds
loope
in
les
adc
inc
push
shlb
in
and
fidivs
enter
stc
fwait
or
mov
int3
test
std
addr16
dec
cmpsb
fiaddl
lods
sti
cli
push
mov
mov
push
inc
inc
pop
cli
push
jp
fdivp
fldl2t
popa
pushf
xchg
mov
data16
movsb
imulb
pop
out
je
das
cmp
cmp
adc
cli
dec
fdivr
push
inc
fucomip
lock
sub
ficoms
imul
faddl
inc
push
pop
hlt
test
sub
sbb
lock
mov
pop
or
mov
out
dec
sbb
int
sbb
or
adc
inc
loop
sbb
or
sbb
mov
dec
adc
sbb
lret
mov
jo
push
pop
push
push
out
sub
sarl
adc
inc
push
add
mov
aaa
mov
sbb
xchg
cltd
mov
add
push
xor
lahf
ss
inc
inc
fcmove
xchg
imull
push
std
push
enter
mull
pop
movsb
inc
gs
xor
xor
popf
arpl
cwtl
test
lret
ds
popf
mov
int3
inc
jne
lods
cmp
inc
sbb
sbb
loop
jg
sti
lods
ljmp
sub
push
in
test
fidivl
in
les
inc
or
std
lahf
cmpsl
sub
sbbl
mov
test
rcll
cld
push
jmp
push
les
fsts
cmp
mov
jle
push
adc
add
int3
repz
insl
in
loope
pop
or
push
mov
cmpsl
insb
aaa
popf
fcoml
jle
push
mov
inc
inc
inc
mov
jo
inc
adc
xchg
lret
test
jb
sbb
js
and
pop
sti
cmp
push
aam
js
mov
mov
inc
aaa
dec
cmp
add
cmpb
outsb
adc
jne
xchg
into
arpl
cli
jno
rcl
fildl
sbb
shr
fwait
scas
pop
lods
dec
pop
fistpll
sub
sarl
aad
and
inc
pop
sub
in
inc
pop
movsb
cld
or
or
sub
insb
cs
mov
pusha
mov
loopew
push
pop
xchg
or
sbb
or
outsb
dec
iret
mov
loopne
jne
testl
mov
hlt
mov
push
loop
add
push
mov
jl
lcall
pusha
adc
inc
pop
xor
mov
dec
in
inc
rolb
pop
sahf
xor
pop
mov
push
fbstp
fincstp
lds
sub
xor
mov
jecxz
bound
mov
subl
sbbb
ljmp
mov
enter
shrl
cmp
push
xchg
shl
jns
jbe
test
lock
out
pop
adc
pushfw
mov
and
jae
push
stc
xchg
sub
xor
test
or
mov
pushf
scas
dec
scas
ja
mov
adcl
pushf
fidivs
inc
push
jae
out
mov
rol
iret
mov
cmc
mov
mov
jne
testl
pop
je
xor
pop
xlat
fwait
push
pusha
call
add
test
insl
inc
or
lahf
push
or
add
mov
shlb
test
fwait
jg
inc
jae
mov
fiadds
in
dec
inc
push
enter
fcoml
sahf
xor
nop
mov
bound
fs
mov
test
cs
adc
enter
cmp
or
push
mov
cmpsb
pop
adc
test
inc
jae
cltd
aas
fidivl
call
test
sahf
icebp
popa
or
fprem
mov
mov
aas
sub
pop
pushf
xchg
xor
xchg
mov
mov
sarb
jmp
inc
xchg
dec
fdivl
cs
js
ret
ljmp
push
test
mov
xor
jl
add
out
inc
xchg
in
xorl
aas
popa
jb
pop
cmp
ret
add
sti
ds
push
xor
fld
mov
add
ljmp
call
pop
sbb
rol
pop
push
and
je
pop
fsts
subl
jns
ret
mov
jle
push
xor
ficoms
mov
sahf
aas
fmull
push
pusha
xor
mov
std
and
add
xlat
sbb
adc
cmp
mov
sub
out
inc
ss
or
test
pushl
fstps
dec
faddp
mov
mov
or
mov
or
sub
inc
js
xor
cld
jb
movsl
icebp
sbb
clc
outsl
inc
push
lock
movsb
adc
or
aaa
pop
out
jnp
add
pushf
nop
rorl
cli
lock
and
cli
out
mov
inc
fnstenv
popa
cmp
fsubrs
xchg
in
in
mov
ret
mull
mov
insl
sbb
cwtl
lea
add
jge
dec
jmp
int3
adc
push
cmp
or
cmovo
jg
pop
into
jne
repnz
pop
xchg
into
bound
roll
mov
push
or
outsl
cltd
push
pop
mov
sub
xlat
cmp
inc
xor
rcrb
push
and
cmp
pusha
mov
jae
gs
insb
inc
data16
xchg
leave
iret
loope
shl
adc
mov
adc
aam
filds
or
cmpb
and
std
push
fbstp
ss
arpl
mov
mov
aaa
test
jg
adc
stos
lds
out
sbb
sahf
out
xchg
cmp
in
sbb
jmp
cmpsb
mov
scas
and
mov
and
loope
xchg
push
or
jbe
stc
sub
in
in
push
in
add
aam
ret
cltd
xchg
icebp
add
lock
xor
jno
daa
es
scas
mov
inc
jnp
add
and
ret
stos
xchg
inc
sbb
je
jnp
js
cltd
mov
dec
mov
lcall
pop
js
movsl
jmp
jg
or
push
aaa
jmp
mov
jecxz
and
push
orl
add
or
pusha
add
sub
sbb
or
movsl
lret
sub
and
out
adc
clc
inc
add
mov
movsb
adc
cld
mov
popf
xor
inc
mov
inc
xor
dec
or
adc
inc
push
addr16
jno
xor
mov
push
jnp
xor
xor
fidivrs
shrb
sbb
adcb
in
test
in
mov
sbb
outsb
cmp
outsb
jns
sub
push
pop
mov
ljmp
ret
or
fnstcw
sahf
aas
inc
inc
in
cld
dec
call
lea
int3
and
popa
ret
sub
add
adc
sbb
mov
inc
push
cli
jno
in
jno
push
inc
push
push
in
ret
sub
icebp
mov
mov
sbb
cmp
xchg
daa
jmp
subb
adc
add
pop
jnp
mov
and
mov
cld
insb
xchg
addr16
pushf
adc
sbb
adc
cltd
sub
scas
nop
out
xor
cmpsb
dec
pop
push
and
insb
pop
inc
mov
in
lds
clc
dec
mov
in
add
inc
mov
xor
lcall
xor
adc
xchg
mov
das
and
inc
loope
in
and
or
js
ficompl
pop
ja
bnd
subl
sahf
jp
shl
jmp
stos
fnsave
nop
cwtl
push
icebp
mov
mov
mulb
movsl
xchg
fwait
xchg
enter
lods
ret
sub
arpl
clc
mov
scas
insb
cmp
push
imull
std
test
or
roll
out
pop
shrl
xor
lods
int
mov
test
and
xchg
push
pushf
movl
xor
sbb
xchg
lds
mov
les
popa
outsl
add
pop
out
test
pop
jno
rcrb
cmp
scas
jo
inc
xchg
adc
fldcw
dec
inc
adc
out
sbb
shld
and
jg
sub
faddl
aas
mov
in
add
icebp
lods
dec
cwtl
shl
pop
push
jo
fcmovnb
mov
xor
and
jns
out
out
lcall
jg
inc
loopne
mov
loope
sbb
push
sbb
xchg
mov
pop
pop
sbb
or
dec
cmp
pop
mov
dec
and
mov
nop
mov
push
je
sbb
fmuls
ja
loope
mov
lahf
stos
test
ret
hlt
inc
in
stc
in
imul
and
xchg
inc
out
cli
jns
lea
push
xchg
mov
add
fsubrs
pop
bound
fmuls
stc
and
and
repnz
mov
shl
test
dec
movsl
xchg
inc
sbb
enter
dec
sub
mov
sub
add
scas
xchg
sub
xor
fbstp
mov
cmp
call
cmp
clc
mov
sub
push
and
or
sti
sbb
fnstsw
pop
in
aaa
or
cmp
cwtl
sub
xorb
pop
jne
shlb
jecxz
xor
pop
repnz
jne
dec
push
clc
popl
adc
add
mov
pop
in
data16
subl
aas
dec
movsb
test
xor
add
and
sbb
push
and
pop
jl
sub
lret
add
jbe
dec
popf
dec
mov
inc
lcall
or
ja
inc
test
xor
add
in
out
xchg
cmp
shrl
inc
jmp
out
push
mov
cmpb
or
dec
pushf
lods
cmp
xchg
enter
add
rsqrtps
and
mov
mov
in
push
pop
fnstenv
enter
mov
stos
aam
cmp
mov
push
add
mov
leavew
pop
push
out
mov
ffree
into
clc
xlat
repz
mov
sub
nop
pop
inc
xor
pushf
fs
lods
xchg
mov
inc
leave
pusha
xor
sub
mov
stos
dec
cmp
pop
adc
cmp
outsl
jne
cmp
bound
shrb
data16
imul
aad
out
ds
insb
adcb
mov
cli
mov
fld
lcall
not
mov
imull
pop
clc
dec
outsb
inc
jns
mov
mov
xchg
fsubrs
dec
cmp
stc
pushf
xchg
sbb
shl
adc
cmp
addb
fsts
aam
cwtl
imul
daa
sbb
in
pop
std
scas
clc
cmpsl
jl
sbb
jl
sbb
enter
sub
push
mov
dec
ret
push
push
or
fsubr
clc
aas
lahf
push
pop
std
xor
and
pop
sbb
adc
xchg
pop
call
icebp
mov
sub
mov
and
mov
or
sub
shr
jecxz
daa
mov
mov
mov
ret
xchg
imul
adc
inc
loop
sbb
cmp
mov
lret
dec
dec
fcmovnbe
jmp
sub
push
pop
xor
push
adc
shl
mov
mov
cld
mov
icebp
xor
sub
dec
fistpll
insl
les
xchg
and
and
imul
je
movsb
loope
inc
pop
inc
sarl
and
pushf
xor
lcall
rorl
add
xor
push
addr16
pop
mov
cmpsb
lods
pop
and
or
xor
and
lock
pop
movzwl
xchg
jb
pop
or
jb
fucomp
fdivrl
jne
mov
pop
adc
loope
mov
test
popa
xor
or
stos
or
rcrb
insl
in
jnp
fnstenv
or
sbbl
xor
mov
lahf
push
insl
jb
jp
lods
pushl
pop
jp
pop
adc
ja
pop
repz
test
daa
int3
loop
lcall
repz
cmpsb
or
psrlq
outsb
enter
je
loope
in
in
add
cmp
xor
fisubs
lea
test
ja
pop
mov
push
fbstp
movsb
xor
inc
shlb
adc
rcrb
pop
scas
enter
loope
orb
mov
repnz
mov
mov
stos
add
dec
push
lret
sub
pop
sbb
fnsave
fs
push
test
push
add
push
xor
xchg
ljmp
insl
test
sar
repnz
pusha
dec
add
mull
or
mov
jbe
adc
dec
cmp
ds
mov
jecxz
cld
adc
fwait
shrl
sbb
xor
insb
out
idivl
lcall
jmp
inc
add
inc
icebp
push
xchg
jmp
jno
mov
or
outsb
inc
or
out
push
push
out
test
sub
insb
in
mov
adc
sub
jl
subl
enter
inc
add
xchg
popa
push
cwtl
arpl
lcall
fdivr
cmp
ss
pop
test
clc
adc
inc
out
dec
sbb
lock
iret
into
scas
and
push
fdivl
iret
jmp
fidivrl
mov
xor
pop
test
fcomps
outsb
mov
jle
push
insb
movsl
push
in
sahf
adc
jbe
addb
cmc
adcb
add
out
jmp
and
fidivrs
push
xchg
inc
push
insl
fnstsw
pshufw
clc
mov
or
or
dec
sbbl
pop
xchg
call
cmp
add
jno
inc
icebp
dec
mov
and
aam
cmp
test
pop
int3
mov
mov
fbstp
jg
les
movsl
inc
fnstenv
push
stos
cmp
js
stc
inc
inc
adc
xchg
sub
cmpsl
inc
dec
push
sbb
pop
mov
dec
testl
es
cli
xchg
pop
scas
mov
jmp
dec
mov
int3
gs
std
inc
mov
cmpsb
and
pusha
push
add
xchg
xchg
and
cltd
cld
mov
mov
mov
fs
fcom
push
xlat
mov
push
and
jle
adcl
icebp
cmp
fs
fbstp
pop
jl
stos
mov
fistpl
lea
and
add
sar
es
push
test
in
inc
inc
jle
lret
xlat
inc
faddp
shrl
ret
test
and
fwait
cld
data16
cwtl
and
mov
jae
mov
sbb
pop
dec
imul
cmpsb
aad
adc
push
mov
loope
xchg
fadd
ret
hlt
call
adc
dec
movsb
andb
push
mov
mov
enter
dec
arpl
dec
jae
adcb
cli
pop
lahf
push
notl
pop
dec
fcoms
loop
jbe
add
mov
mov
and
jge
and
xchg
into
mov
stos
add
rcll
inc
stos
xchg
rcll
dec
or
test
testb
jge
lods
stos
pop
and
jno
xor
and
dec
pop
scas
out
out
sbb
push
mov
sbb
mov
cmp
lods
lods
cmpsb
sahf
xor
push
mov
push
call
xchg
jno
dec
es
aam
clc
cmpsl
fdecstp
sbb
dec
mov
or
mov
mov
add
xchg
xor
lcall
enter
xor
dec
out
test
jnp
repz
dec
jmp
out
inc
xlat
mov
jns
mov
push
movsl
mov
iret
xorb
popa
mov
xor
push
mov
lahf
bound
fwait
xchg
addr16
add
adc
xor
in
jno
repnz
icebp
pop
sub
dec
mov
add
add
rcrb
jno
mov
add
push
cmpl
mov
pop
ret
jo
sub
stc
push
adcb
sbb
xchg
sbb
das
lods
mov
fsubr
int
or
push
mov
xor
scas
inc
js
cltd
int
inc
ljmp
mov
jl
into
jns
shl
stos
add
and
xchg
repz
rcr
mov
mov
jae
in
lods
xor
hlt
sbbb
add
push
cmp
jecxz
jnp
mov
ja
fstps
mov
xchg
rclb
dec
in
mov
or
pop
lods
test
lret
je
xchg
push
int
mov
mov
adc
sahf
mov
decl
mov
out
in
inc
in
shrl
call
push
test
js
inc
push
sbb
push
jb
cmp
lods
mov
jbe
xchg
scas
jno
or
lret
out
bound
rcll
jns
xor
lcall
js
lods
add
cltd
cmp
add
mov
shll
xor
mov
jmp
mov
adcb
cwtl
push
mov
mov
test
pushf
clc
into
sub
mov
push
cltd
scas
in
sbb
stos
call
mov
insl
pop
fidivrl
mov
add
xor
in
push
push
cmpsb
ss
sub
jg
aas
and
mov
sub
fistpll
mov
insb
insb
pop
dec
fisttps
loope
sahf
xor
or
adc
jmp
adcb
in
loopne
adc
std
aam
shll
or
adcl
mov
or
or
fisubrs
and
arpl
ds
loop
push
out
cmpsl
jb
out
pop
and
jmp
lds
iret
push
mov
push
mov
das
xchg
adc
cmc
sbb
xor
pop
les
or
adc
test
aam
leave
nop
sub
add
rcrb
and
lods
imul
scas
shll
xchg
arpl
push
in
lock
jg
adc
add
jp
addr16
ljmp
scas
leave
jb
jbe
insl
ja
pop
mov
shr
jmp
push
inc
xlat
push
test
mov
cmpsl
loope
lea
addr16
mov
jmp
call
lcall
sub
pop
sti
lret
out
mov
sbb
push
lcall
pusha
les
scas
mov
mov
lret
xor
sub
pop
mov
aaa
fcomps
imul
popa
cmc
or
and
test
cmp
xor
mov
mov
jmp
mov
dec
push
icebp
stos
and
js
test
into
fdiv
in
scas
lods
pop
ja
adc
mov
sub
lcall
sbb
dec
fbstp
add
lret
mov
jg
cltd
out
xchg
out
fs
adc
cmp
ja
push
cltd
add
inc
sub
aad
push
mov
mov
test
fisubl
neg
hlt
addr16
andl
mov
aam
add
jo
fdivp
movsb
sbb
lods
dec
repnz
push
hlt
mov
mov
arpl
inc
bound
cmpsl
ret
imul
insl
lcall
int
jg
repz
lock
lods
jbe
push
pop
and
xor
and
stos
fstpt
imull
jae
aaa
push
add
mov
stos
clc
sbb
ret
popa
xchg
cli
or
or
cmpsb
popa
ja
xchg
push
pop
in
fidivl
xchg
sub
jb
insl
dec
pusha
mov
loope
mov
clc
rcll
add
add
fsts
push
dec
aam
xchg
insl
ss
mov
xchg
in
das
cs
imul
sbb
and
arpl
psubd
xchg
sub
push
cltd
pop
arpl
add
fxch
lahf
or
iret
adc
or
or
mov
jo
test
mov
add
or
daa
pusha
repz
xor
and
nop
adc
xor
enter
rorl
insl
lcall
imul
jo
mov
and
cld
lock
cmp
inc
js
xchg
lods
pop
rcrl
inc
sbb
pop
mov
xchg
ret
sbb
fcompl
sub
sarl
shll
mov
inc
test
add
das
push
push
dec
pop
add
xor
shlb
jo
adc
mov
popf
push
subb
test
inc
fidivrs
jle
pop
sbb
add
jne
lock
mov
xchg
cmp
daa
or
xor
inc
sub
jae
mov
loop
test
xor
inc
sub
pop
subl
push
or
adc
pop
movsl
inc
int3
jg
dec
mov
addr16
cmpsb
std
test
xadd
mov
xchg
xchg
enter
clc
lods
movsl
mov
insl
mov
ljmp
scas
in
out
mov
push
sub
addb
das
lcall
push
call
outsb
xchg
out
sahf
xchg
ret
test
sbb
push
dec
rep
outsl
lods
ljmp
and
fisubs
or
andb
mov
xchg
pop
mov
xor
pusha
sub
xchg
cmpsb
xchg
inc
adc
sbb
std
gs
data16
fsubl
rclb
jae
sub
lret
xchg
mov
scas
inc
lods
xor
test
pop
dec
cmp
mov
xchg
jmp
dec
pushf
addr16
mov
xor
inc
bound
mov
sbb
xchg
push
sbb
push
jb
out
das
sbb
jp
aad
ffree
fisttps
push
pop
xchg
pop
add
mov
jbe
mov
rcll
pop
xor
dec
add
jle
sub
push
mov
cmpsb
jno
mov
add
dec
das
add
mov
rorb
psadbw
sahf
call
cmp
sahf
cmpsl
js
sbb
mov
jbe
ds
mov
addb
and
in
mov
jbe
in
repz
jle
and
rcrl
xchg
test
pop
cli
pop
dec
fnstenvs
clc
jle
xor
push
les
lret
addr16
lret
addl
popa
pop
lcall
dec
imull
jb
dec
sbb
jne
push
xor
test
test
pop
es
xor
bound
add
aam
aad
rcll
cmp
mov
fistpll
into
sar
xchg
mov
incb
daa
mov
loop
nop
cmc
cmp
sbb
adc
mov
bound
mov
sub
dec
adc
xlat
inc
mov
cmp
imul
jb
jne
mov
fcoms
sti
pop
sub
inc
xchg
jb
dec
xor
lods
ffree
test
decb
xchg
lahf
push
loop
leave
lcall
nop
lds
pop
pop
pop
cmpsl
inc
inc
pushf
hlt
fidivrs
inc
in
mov
xchg
das
pop
fsubl
xchg
sub
scas
cmc
jnp
inc
lods
push
ss
cmp
or
hlt
cmp
fdivs
fs
inc
cmp
add
pop
enter
fldcw
movb
and
push
andl
das
test
xchg
scas
jp
stc
inc
pop
dec
rcl
sti
or
cmp
pop
dec
hlt
pushf
mull
sahf
clc
gs
jno
add
pop
mov
pop
push
cs
shrb
inc
addr16
xchg
cwtl
aas
test
jecxz
shl
addl
dec
ret
repnz
inc
in
fucomip
xchg
lds
jge
aas
jp
adc
pushf
mov
push
popf
xor
out
std
pushf
push
in
icebp
out
sbbb
repnz
jg
adc
lahf
cmp
lods
notb
sub
pushf
sbbl
les
pop
inc
xorb
inc
ret
rcrb
sbb
addr16
jp
mov
popa
sub
push
inc
mov
push
xorl
loope
fdivs
push
cmp
ficomps
jne
cli
inc
loopne
and
inc
cmp
jg
jns
xchg
sub
xor
out
xchg
xlat
bound
fidivrl
mov
lea
in
cmpsb
cmp
mov
aam
sbb
inc
inc
sbb
sub
inc
sar
notb
mov
xor
dec
fmulp
bound
rcrl
jmp
fidivl
imul
jb
nop
je
push
int
mov
xor
and
xchg
sbb
mov
inc
sub
mov
test
sarb
out
and
adc
imul
xchg
mov
pop
xchg
mov
pop
xor
mov
or
adc
jbe
clc
pop
nop
jb
or
add
and
adc
add
pop
cmpsb
iret
je
leave
push
mov
inc
adc
push
cmpsl
fs
push
das
ret
jnp
xor
adc
adc
xchg
pop
ret
shlb
cmpsl
jp
mov
add
xor
fs
or
ja
hlt
jbe
clc
push
xor
xor
aam
outsl
pop
inc
sbb
xchg
icebp
mov
jbe
adc
sarb
sub
push
fcmovu
fwait
pop
hlt
or
or
sub
aas
mov
mov
ret
pop
inc
cmp
push
loope
cltd
pop
cmpl
loope
out
adc
inc
stos
bound
cltd
std
mov
ja
insl
outsl
xchg
std
sbb
xchg
dec
push
push
je
stos
movsb
rorb
push
in
insl
mov
test
or
cmp
mov
push
or
mov
sbb
mov
in
sti
sti
cmp
xchg
pop
orl
sbb
outsl
jbe
test
xchg
addl
test
cmp
loope
test
sub
arpl
xor
adcb
or
mov
shl
shlb
fs
sub
jbe
stos
sarl
sbb
ret
push
movsb
test
add
icebp
sbb
pop
repnz
pop
add
mov
mov
test
mov
dec
loop
pop
adc
fidivrs
in
sub
xor
es
push
dec
sbb
mov
arpl
cwtl
movsl
aaa
sub
xchg
add
mov
adc
aam
mov
iret
jno
cmc
dec
mov
insl
adc
insl
je
aad
add
cld
gs
fstpt
mov
adc
inc
mov
or
xor
cmp
or
out
push
push
mov
jo
pop
xor
lods
into
pop
hlt
or
xlat
jecxz
adc
jle
pop
jg
sub
add
jnp
push
mov
movsl
sarl
xchg
lcall
inc
sti
dec
movsb
adc
les
mov
cs
mov
mov
or
ja
xchg
cmp
mov
mov
test
test
stos
je
stc
decl
push
jnp
sbbl
fistpll
lahf
push
cmpsb
ja
nop
jo
aad
jle
fcomps
fs
repnz
std
xchg
rcrb
fists
adc
cmpsb
sbb
or
icebp
mov
ret
lcall
jne
andb
xchg
clc
add
push
jae
and
lods
xchg
dec
dec
cmc
or
xor
inc
cld
push
pop
std
add
push
cmpl
popf
stos
xlat
fldcw
stc
sbb
mov
das
fistpll
ret
fbstp
mov
sbb
out
fidivs
add
mov
mov
adc
loop
fs
adc
cmp
mov
dec
jbe
pop
lret
mov
in
leave
pushl
sub
shlb
je
or
mov
daa
std
popl
xchg
out
popa
adc
mov
lods
and
jne
aam
xlat
lret
adc
fists
or
jg
mov
cmc
call
and
push
aas
insb
adc
roll
test
sbb
mov
insl
push
lret
xor
jp
mov
sbb
adc
rorb
lock
mov
mov
mov
jb
inc
adc
cmp
sub
sub
mov
push
xor
insl
add
sub
push
hlt
mov
dec
test
icebp
fldcw
lods
xchg
adc
add
incb
lock
xor
mov
cmc
stos
je
jg
fistps
fsts
sbb
xchg
int3
xchg
inc
sbb
xchg
sub
fcom
mov
cmp
lcall
into
orb
leave
pusha
pop
adc
jne
out
imull
mov
pop
shlb
addr16
mov
je
cmp
push
in
mov
xchg
jo
push
test
push
in
push
into
jae
js
xchg
push
jno
xor
loop
or
xor
sbb
adc
xchg
inc
mov
mov
mov
cmp
int3
ret
sub
enter
pop
push
sbb
xchg
sub
xchg
cmp
fldt
cmpsb
push
test
cmp
add
shl
loope
pop
jl
fldcw
int
dec
pop
jo
pop
mov
xor
mov
sub
loopne
sbb
fdivrl
jp
push
sub
and
leave
fwait
push
out
push
jg
iret
std
cltd
pusha
or
iret
mov
mov
jo
xchg
mov
adc
pop
repnz
adc
adcb
jns
daa
sbb
pop
jno
and
mov
jns
jno
dec
pop
add
in
push
rcrb
xchg
rol
test
cld
lods
lret
cld
push
xchg
push
ss
add
inc
arpl
xor
loop
pusha
bound
lea
movsb
mov
dec
and
inc
xlat
shlb
push
imul
ja
adc
jae
stos
or
jg
push
mov
cmpb
mov
xchg
push
pop
scas
sbb
cwtl
sub
pop
idivb
aas
mov
sbb
loopne
mov
add
testb
andl
add
sahf
and
flds
sti
pop
mov
insl
add
in
pop
and
lods
mov
fildl
aad
loopne
das
repz
sbb
sbb
xlat
scas
lret
iret
pop
repz
mov
xchg
xlat
mov
cmpsl
mov
mov
inc
mov
sbb
pop
pop
cmp
call
das
cmp
sarb
cmp
xor
in
aas
mov
mov
adc
lock
scas
push
les
mov
mov
inc
jb
mov
and
pop
aaa
mov
mov
loopne
mov
lret
scas
and
mov
mov
cmpsb
pop
cmp
sahf
xlat
cltd
fmuls
stos
pop
neg
aad
js
mov
ret
loope
ja
scas
pop
mov
loop
xchg
mov
add
push
sbb
add
loopne
push
xlat
cmc
add
pop
mov
nop
pop
xor
iret
orb
and
jle
test
in
mov
inc
inc
int
js
dec
out
lock
das
lods
imul
jp
les
push
and
sub
sti
xor
aas
push
bound
xchg
jae
mov
inc
mov
aad
sub
lcall
cmp
sbb
sub
cmp
sbb
push
leave
aaa
mov
cmp
outsb
jl
pusha
and
call
xchg
repz
leave
mov
jne
sub
jp
aad
test
lods
mov
sub
mov
addb
stos
mov
fnsave
int
sbb
icebp
cmp
push
jns
pushf
cli
dec
adc
fwait
pusha
into
mov
jbe
jmp
push
cmp
lahf
jp
fwait
adc
xlat
fwait
pop
or
xor
push
pop
movb
push
or
mov
pop
inc
inc
add
cmp
les
dec
data16
idivl
add
sbb
or
mov
daa
out
loop
jle
imul
sub
out
mov
in
pop
xlat
pusha
pusha
adc
movsl
gs
jb
mov
leave
in
pop
pop
adc
adc
adc
and
enter
fldcw
icebp
xor
xor
lods
ret
adc
test
movsb
and
xchg
aas
loope
sub
and
jno
xchg
mov
insb
loope
mov
sbb
pop
repnz
mov
fldenv
add
insb
pop
cli
push
inc
pop
adc
mov
xor
dec
pop
adc
adc
lret
push
mov
push
dec
int
push
stos
gs
aad
cltd
xchg
push
xor
xchg
neg
mov
push
pop
cltd
pushf
aad
or
pop
lock
pop
inc
xor
ja
pop
push
xchg
cmc
jp
leave
adc
movsb
xchg
and
lcall
sub
lock
pushf
dec
xlat
sub
in
or
lret
leave
rcll
mov
fsubr
pushf
pop
xor
add
repz
or
stc
js
insl
jecxz
xchg
test
sbb
mov
dec
pop
ret
dec
mov
call
sbb
inc
js
fsubrs
sbb
push
inc
dec
pop
mov
aad
mov
add
insb
mov
cwtl
out
stos
iret
jle
outsb
leavew
push
cmpsl
xchg
xchg
pop
pop
je
add
jl
cmp
add
mov
mov
sub
sahf
mov
jbe
lock
xchg
loope
mov
mov
dec
dec
cmpsb
jo
mov
lret
mov
int
jno
lock
sbb
add
jbe
pop
sub
and
les
testb
ret
xchg
daa
insb
scas
popa
dec
aaa
fidivrl
cs
fwait
and
in
xor
out
xchg
aaa
push
scas
xor
adc
sub
xchg
and
jno
push
sub
mov
push
push
pop
mov
xor
loop
mov
dec
xor
xchg
sbb
in
jo
push
ret
mov
aad
or
in
jge
in
jnp
or
hlt
mov
je
pop
sbb
sahf
lods
int3
or
xor
testb
mov
cli
and
mov
xor
cltd
orl
and
jo
inc
stos
mov
sbb
jne
fcoms
ret
daa
sbb
xor
jg
inc
xor
test
aaa
jo
cmp
add
bound
xchg
sub
xchg
aam
and
mov
cmpl
sub
cmpsl
push
jnp
out
aad
sbb
mulb
mov
jmp
sbb
scas
iret
movl
stc
mov
mov
arpl
insl
sbb
fistl
pop
mov
int
popa
xchg
sti
adc
xor
mov
in
jmp
daa
jno
cmpsl
push
cs
fstp
jl
bound
adc
sahf
xor
jns
mov
cmp
rorl
jns
cmp
adc
ss
jae
push
pushf
lds
push
lea
outsb
mov
xlat
mov
jb
cld
aaa
inc
sbb
mov
dec
mov
or
fidivl
sbbb
and
xchg
or
mov
xor
or
cmp
push
outsb
in
mov
mov
xlat
or
cmp
jp
in
jae
icebp
push
push
add
mov
leave
ret
stc
into
pop
mov
in
hlt
sub
jg
lret
cmp
rclb
and
or
into
push
dec
cmp
in
adc
push
inc
add
call
cmp
dec
or
jbe
mov
es
in
test
jno
pusha
aam
scas
lds
loope
popf
jg
xor
jns
xchg
fmul
pop
shlb
je
stos
sbb
mov
push
loop
cli
arpl
mov
inc
push
inc
loope
sti
dec
imul
push
pop
add
jp
fadd
adc
in
repz
pop
lds
ss
jmp
sbb
popf
bound
ss
inc
or
pusha
popa
pusha
in
xchg
cmc
imulb
cmp
add
mov
es
mov
cli
jne
or
insl
lea
lock
push
or
push
pop
xchg
mov
stc
mov
js
inc
pop
mov
mov
jne,pt
mov
sbb
inc
les
or
in
icebp
adc
sbbb
mov
rolb
jb
mov
add
adc
orl
pop
inc
adc
sbb
push
xchg
xor
ja
push
cltd
sbb
jle
xor
or
adc
pop
push
pop
xor
adc
jbe
mov
or
stos
inc
lret
pop
pushf
jno
loopne
xchg
jmp
test
xchg
dec
insl
add
data16
popa
or
cwtl
xor
xchg
test
cmc
push
and
cwtl
and
push
std
inc
mov
xchg
popa
loope
mov
popf
test
std
jmp
testl
sub
movsb
loopne
xchg
imul
add
jle
xor
inc
push
mov
loopne
xor
mov
rdtsc
xchg
sbb
cmp
adc
mov
mov
imul
mov
sbb
cmp
or
les
jecxz
imulb
jge
out
xchg
cmp
movsb
inc
adc
sbb
stc
notl
sub
jae
dec
iret
cmpb
adc
mov
xor
or
jnp
fisubl
or
test
lret
push
dec
sar
pop
pop
cmp
mov
and
fadd
test
add
cmpsl
add
dec
xlat
mov
pusha
or
fisubs
ljmp
jne
inc
jb
inc
mov
js
jbe
stos
mov
cmpl
lock
cmpsl
stos
cli
sbbl
inc
in
cli
aas
push
call
les
cmp
imul
mov
ss
adc
jmp
mov
orl
push
jno
and
stos
out
adc
or
jns
shld
xor
jbe
jns
test
mov
jno
mov
mov
out
out
lret
adcl
sahf
mov
fimuls
xor
outsl
gs
sbb
xor
inc
pop
adc
cmp
inc
outsb
xor
fldenv
adc
jmp
lea
jge
iret
daa
add
sti
fdiv
stc
leave
inc
mov
add
imul
jmp
mov
cmp
mov
mov
push
mov
sahf
fnstcw
xor
sbb
out
js
xchg
xor
mov
test
jae
adc
loop
sti
pop
inc
add
adc
ss
mov
mov
jecxz
mov
scas
aad
lahf
add
cmpsl
repz
stos
fnsave
mov
cmp
sbbb
enter
ds
shlb
sarb
outsb
cmp
aaa
jle
out
bound
imul
mov
insb
dec
mov
les
rcr
pop
xchg
out
pop
dec
pushf
fadds
xor
cwtl
loop
cld
sub
inc
inc
stc
inc
mov
push
outsl
fisubs
mov
mov
sub
imulb
push
pop
xchg
mov
arpl
loop
ss
addr16
mov
mov
repz
mov
xor
out
repz
push
sbb
adc
lret
sbbb
movsb
mov
ja
ret
pusha
mov
cwtl
and
pushf
cli
sbb
fs
mov
add
lret
jl
adc
sub
and
lea
mov
add
cmc
xchg
sbb
movsl
in
mulb
mov
mov
shl
sahf
clc
lcall
or
mov
loopne
jg
sbb
sub
or
cmp
and
inc
clc
hlt
loop
loop
mov
jmp
fisubrs
imul
cmpsl
ds
sbb
push
adc
ss
and
ret
int3
outsb
mov
dec
hlt
mov
xlat
inc
fldl
inc
lods
push
cltd
fnstsw
cmp
push
jmp
pop
jg
nop
jno,pt
mov
movsl
fsubrs
and
mov
out
das
out
int
mov
cmp
pop
mov
mov
xchg
jmp
jl
mov
aad
jbe
popa
xor
or
pushf
in
mov
jg
xchg
addr16
ljmp
jb
dec
and
insl
cmpsb
rorb
std
push
rcrl
enter
roll
mov
mov
repz
pop
rcrb
rorb
jp
inc
inc
sti
jmp
inc
loopne
shrl
add
icebp
js
sbb
fimull
cmpl
push
or
inc
mov
sti
mov
sti
leave
mov
lret
jle
adc
aad
sub
mov
je
jb
xchg
insb
mov
cltd
lods
sub
repnz
dec
xor
sub
dec
add
cmc
add
push
shrl
adc
xchg
insb
hlt
xchg
xchg
aad
and
loope
popa
sahf
cmpl
dec
lahf
pop
pop
in
negl
inc
mov
xchg
std
daa
adc
inc
dec
lods
xor
negb
ret
xchg
flds
jo
pop
das
aaa
cmp
xor
xchg
xchg
int
out
or
or
xor
and
cli
or
pop
out
test
lret
js
jecxz
out
sbb
fimuls
mov
jle
fnsave
pop
adcl
test
jbe
inc
movsl
loop
push
jo
mov
jb
leave
jg
ja
adc
flds
mov
cmp
jecxz
mov
xchg
xchg
movsb
push
fbstp
adc
imul
and
mov
mov
dec
or
xlat
push
insl
icebp
push
jnp
push
sbb
enter
mov
cmpsb
xchg
xor
inc
xlat
mov
shll
push
pop
in
xchg
out
outsb
xchg
jnp
cmpb
xchg
nop
int3
sbb
fs
in
push
bound
fsubrs
mov
sar
or
fstpl
int3
push
xor
and
push
lea
pop
repnz
cmp
mov
call
fstpl
xchg
loopne
mov
or
jb
fstpt
sbb
add
inc
pop
push
or
nop
push
shrl
cmp
das
add
mov
mov
jno
adc
arpl
xchg
mov
push
pushf
or
pop
or
push
mov
gs
xchg
outsl
and
rcrl
mov
mov
sbb
mov
sub
stc
insl
loopne
push
mov
jnp
pop
popf
fs
repnz
push
std
scas
movsl
stos
xchg
pop
jae
movups
add
js
lret
jb
rcll
lods
dec
mov
call
mov
loope
shrb
xlat
aad
xor
or
sub
pop
aaa
mov
jg
rolb
pop
cmp
and
dec
mov
leave
mov
lret
cmp
inc
mov
mov
jmp
mov
adc
lods
inc
popf
jmp
das
addb
sub
test
int3
imul
dec
push
push
fdivl
in
jbe
cmp
xor
add
xchg
xor
adc
mov
sbbb
shrb
loop
jno
sbb
and
xchg
add
xchg
test
sbb
repz
aaa
adc
sarl
jno
sbb
popa
scas
xchg
loope
jo
andb
push
enter
xchg
scas
out
pop
cmp
push
push
scas
sub
pop
cwtl
hlt
pusha
sub
mov
sub
push
mov
inc
shll
orl
lcall
adc
and
stos
inc
and
jns
jnp
ret
sbb
sub
test
pop
xchg
addr16
jo
push
push
pop
mov
jmp
lret
rcrb
outsl
add
adc
int3
push
push
adc
mov
push
xor
sbb
cmc
inc
int
and
mov
sub
imul
jp
mov
push
insl
xchg
pusha
xchg
subb
lods
orl
push
inc
inc
cmp
inc
inc
arpl
mov
divl
inc
and
sbb
cs
or
ret
mov
lret
push
fdiv
cmp
mov
fld
mov
shll
jo
or
clc
xchg
stos
in
test
fld
and
punpcklwd
daa
push
insl
loopne
mov
pop
push
xlat
xlat
pop
mov
mov
jl
bound
xlat
cli
push
les
push
ds
loop
jle
negb
shrl
push
loope
push
aas
mov
addb
insb
inc
fmull
and
jp
fldt
pop
and
fisttpll
ljmp
pop
nop
cmp
push
mov
push
rcl
jnp
adc
lea
pusha
sbb
cltd
mov
ljmp
adc
daa
lods
cmp
jnp
xchg
mov
inc
pusha
imul
mov
movsb
mov
jge
mov
sbbl
dec
dec
gs
lea
mov
pop
repnz
and
jns
mul
loope
mov
iret
shrl
repz
hlt
cltd
lock
ljmp
test
dec
in
sub
and
mov
ficoms
movsl
push
cwtl
das
clc
outsl
inc
sbb
repz
popf
stos
jecxz
mov
mov
jmp
push
in
cmp
push
lds
or
in
or
sbb
ret
addr16
or
pushf
pop
sbb
data16
push
push
in
jge
aas
mov
sbb
fidivrs
repz
cmc
sub
and
push
into
cmp
insl
insb
addl
cmp
repz
and
jo
hlt
jmp
popa
and
out
jmp
mov
cmc
mov
add
inc
out
decl
lock
mov
pop
xor
cli
fs
mov
out
in
mov
pop
or
dec
xchg
push
or
in
add
leave
std
jbe
loopne
pop
shl
cmp
cmp
inc
inc
and
jno
mov
push
lea
jmp
push
out
mov
ljmp
xor
jbe
lret
std
and
pop
mov
test
mov
cs
or
push
popa
mov
cli
cwtl
jecxz
xchg
adc
cwtl
in
test
or
mov
insb
test
mov
adc
mov
subb
loope
push
scas
xchg
gs
mov
int
push
xchg
add
aam
jg
jno
iret
testl
xchg
cld
mov
ss
pop
push
out
push
outsb
push
fildll
mov
push
or
andb
pop
xchg
or
ret
sbb
jl
xchg
mov
sub
xor
icebp
shlb
scas
inc
push
imul
fmulp
bnd
sub
jo
jns
icebp
inc
jb
jb
xor
xor
mov
insb
lods
scas
call
mov
imul
cmp
loopne
cmp
dec
pop
dec
pop
xchg
sbb
loope
pop
in
jne
das
ret
lcall
lock
jo
sub
lods
js
fldl2t
daa
pop
aas
push
lods
and
or
rcrl
mov
nop
daa
stos
pcmpeqb
aaa
push
mov
xchg
and
jae
inc
mov
push
inc
cmp
sbb
mov
out
jbe
sbb
add
mov
xchg
sbbb
test
movsl
jne
shr
mov
shll
adc
cli
sbb
and
stc
jle
push
pop
sbb
push
sbb
jb
mov
mov
in
xor
mov
sub
pop
mov
pop
nop
insb
or
sbb
push
xor
ljmp
es
andb
repnz
stos
or
nop
fstpt
pop
mov
psrlw
add
jne
inc
repz
fimuls
cmp
into
das
out
or
jle
lods
hlt
cmpl
aaa
or
push
xchg
insl
mov
outsb
mov
js
push
mov
dec
inc
mov
pop
sbb
dec
xchg
inc
push
push
pop
push
lods
jns
iret
dec
and
add
add
pop
paddq
push
stc
fisubrl
or
lcall
call
and
cmp
fbld
aas
or
pushf
daa
mov
push
mov
push
xchg
ficomps
mov
aad
or
out
cmp
sahf
lods
outsb
jo
es
imul
mov
je
dec
add
and
stos
mov
mov
popf
mov
mov
and
sbb
gs
sbb
aas
jne
icebp
xchg
sub
add
into
lods
cmp
jecxz
popf
xchg
cmp
lcall
sti
pop
adc
ficompl
insb
xor
lret
bound
dec
jmp
dec
scas
pop
sarb
adc
call
jg
test
sbb
sub
mov
mov
fcmovb
and
cltd
stos
xchg
push
cmp
das
stc
mov
out
enter
xor
push
adc
insl
imul
repnz
dec
push
negb
dec
pop
adc
mov
jo
mov
test
insl
ret
movsb
sti
ret
push
shll
fadds
pop
or
inc
adc
pop
in
mov
pop
je
add
cmp
cwtl
icebp
push
int
jle
ret
lahf
sbb
in
add
testl
in
fnsave
inc
out
push
mov
sbb
scas
rcl
cmp
enter
mov
xchg
orb
jo
imulb
out
push
addl
pop
mov
je
cmp
push
jg
js
xchg
pop
and
shrl
dec
ljmp
or
ja
scas
push
pop
lods
mov
pop
int
xor
xchg
jl
gs
cmp
jo
sub
fisttpll
sub
pop
lret
cmpsl
jbe
movsb
jbe
out
sti
test
les
gs
jb
pop
inc
pop
cmpsb
add
or
adc
adc
pushf
andb
cmpsb
pop
insl
roll
repz
int3
mov
jbe
pop
jne
cmp
test
and
test
fbstp
vpmovmskb
xchg
mov
dec
add
adc
lds
cmp
hlt
popf
sar
push
jmp
and
push
cmp
mov
or
in
mov
icebp
int3
mov
andl
sbb
call
xorl
xor
shrl
mov
adc
aaa
pop
and
xchg
dec
mov
pop
imulb
fsubrs
fadd
lods
out
sub
imul
shrl
add
repnz
cs
mov
adc
js
xchg
jno
ret
sub
push
jb
inc
pop
je
fdiv
movsl
and
mov
mov
stc
jae
jge
pop
jp
iret
sahf
loopne
sbb
cmc
incb
mov
rclb
xchg
dec
fs
loope
add
fnsave
jns
das
or
sub
dec
decl
lcall
outsw
mov
lret
js
mov
fstl
adc
lahf
gs
lock
pop
xchg
mov
or
popa
inc
fdivrl
rcl
jo
fwait
mov
add
jg
dec
gs
pop
inc
dec
cmpsb
cmp
fsubr
dec
rclb
scas
jge
mov
adc
push
or
iret
gs
cmpl
jbe
cvtps2pd
push
dec
jo
xorb
push
jmp
sbb
sub
cltd
test
daa
add
out
pop
mov
dec
les
in
icebp
inc
sub
rcr
pop
sub
sahf
sub
fucomp
sub
mov
testb
shrl
shll
push
loop
sub
cmc
cmp
dec
pop
bnd
push
mov
push
fldenv
mov
out
jns
sbb
or
addr16
fdivl
cld
dec
cmp
les
lods
pop
xlat
add
jae
sahf
popa
test
cmp
jg
rclb
insb
xchg
dec
stos
mov
adc
mov
pop
loopne
jae
shll
je
adc
mov
or
lcall
sbb
andl
jnp
shrb
fcoml
jl
mov
faddl
fidivs
cs
out
mov
xchg
mov
dec
in
or
into
mov
es
adc
lret
sub
mov
jmp
xor
lahf
and
xor
mov
mov
adc
lcall
je
cmp
lods
or
xor
lods
inc
push
test
in
mov
jnp
rorb
rcrb
insl
xchg
inc
loopne
jb
mov
mov
dec
mov
pop
leave
sbb
and
ret
xlat
imul
mov
ret
adc
pop
adc
mov
ret
call
cs
mov
and
xchg
jae
addr16
cmpsb
popf
jmp
and
in
mov
sarl
inc
adc
jg
in
push
add
mov
call
inc
and
ja
inc
shll
or
cwtl
xrelease
add
sbb
add
dec
mov
jle
test
es
push
pop
cmp
mov
out
pop
inc
lahf
aas
mov
jb
xorb
sbb
movsb
aam
gs
lret
pop
sub
incb
jb
adc
add
pop
or
stos
mov
mov
ja
sbb
fs
arpl
imull
sub
ret
dec
cltd
jns
mov
mov
and
mov
icebp
mov
sub
cmpsl
ja
add
cmpsl
fcoml
test
dec
clc
inc
stos
sub
subl
das
mov
add
iret
stc
add
pop
or
dec
pop
jl
stos
cld
dec
mov
jno
insl
sbb
pop
mov
mov
sbb
jp
sub
icebp
movsl
or
sbb
out
dec
pop
ds
daa
insb
sub
test
xchg
pop
jne
les
aas
mov
jnp
mov
jno
pop
add
lds
push
lock
pop
xor
lods
mov
pop
std
jg
sub
adc
adc
pop
cli
dec
and
pop
les
xorl
jl
jbe
popf
jae
mov
cli
xchg
adc
es
data16
sub
movsl
xor
cmp
jle
ds
shrl
lret
jp
sahf
aad
jne
out
mulb
mov
lret
adc
inc
into
and
cmpsl
or
out
pop
dec
ljmp
inc
in
pop
repnz
ret
mov
repz
add
addr16
scas
je
xor
push
and
cmc
dec
pop
or
jle
push
inc
stos
xor
mov
lods
xchg
mov
adc
mov
call
add
xor
mov
push
mov
mov
jo
and
std
nop
test
loope
sub
sub
mov
adc
jb
and
rcl
sub
les
ja
xchg
loope
int
xor
push
loopne
test
add
cmp
test
jl
pop
icebp
sbb
add
test
js
jge
xor
push
mov
in
out
shl
xchg
mov
push
or
fisubrl
ljmp
insb
mov
jmp
mov
cmp
xchg
xor
ret
fildll
loopne
loop
es
loope
insl
sub
sub
cltd
sbb
lahf
xchg
cmp
xchg
test
mov
std
pop
mov
fmull
or
jle
cmp
lock
dec
js
fsubs
in
adc
jle
mov
or
add
add
mov
pop
lods
or
clc
jge
imul
insb
fsubs
and
int3
mov
movsb
in
ret
dec
fnstsw
and
scas
fs
fists
cld
xor
aas
pop
sahf
pop
mov
adc
mov
movsl
jg
xlat
sar
lret
push
xor
pop
xchg
inc
int3
arpl
sbb
sti
in
mov
std
xchg
fcomps
shlb
leave
in
push
pop
test
xor
testl
pushl
xchg
cmp
rcrb
out
push
pop
jns
in
std
cmpsb
je
dec
cmpsb
iret
pop
repz
fistpll
adc
add
stc
jns
xor
shl
mov
nop
mov
lock
sbb
dec
es
loope
cmp
pop
mov
aad
xor
sbb
sbb
popa
xchg
lahf
adc
cli
jecxz
lcall
cwtl
call
lea
inc
clc
sbb
lods
jo
repnz
dec
mov
outsl
nop
fsubr
mov
pop
insl
scas
xchg
stos
imul
cmp
orl
jge
add
pop
dec
fmuls
cltd
jecxz
int3
int3
inc
cld
or
mov
ret
int3
jo
incb
cwtl
inc
xchg
mov
push
jo
in
mov
xor
stos
inc
sub
adc
data16
mov
inc
mov
fisttps
jle
and
daa
xlat
les
stc
sbb
lods
pop
popf
repnz
cmp
mov
fisubrl
es
ret
xchg
js
loopne
lea
inc
fs
daa
mov
loop
inc
call
loope
cmp
mov
lods
sbb
pop
in
jg
jp
xchg
mov
jmp
mov
mov
jnp
inc
pop
inc
dec
cmp
push
mov
pop
dec
inc
pop
jl
test
jp
push
and
fildl
imul
jo
xchg
les
pusha
mov
loop
ret
mov
cmp
repz
lods
rcrl
mov
push
js
fs
fistpl
jae
dec
mov
jle
aam
pop
fwait
add
mov
mov
inc
sbb
xor
push
mov
mov
loope
repnz
push
mov
pop
sarl
sar
cmp
addr16
dec
lods
ds
test
sub
fisttps
shlb
out
or
xor
in
aad
push
popf
fwait
push
lret
jo
mov
pop
stc
es
je
pushf
jmp
pop
and
cmc
dec
or
inc
int3
push
mov
sbb
jmp
sarl
int
inc
loope
js
push
data16
std
or
xchg
jnp
xchg
mov
and
inc
xor
cmpsl
cmp
cmp
and
inc
xchg
pop
je
insl
sarl
xchg
dec
jle
or
aaa
mov
cmpb
dec
ret
mov
fstp
mov
outsl
jnp
std
cltd
rep
imul
cwtl
sbb
jno
jp
test
lret
mov
mov
shll
lret
pop
lods
xchg
dec
dec
mov
hlt
imul
push
mov
rclb
arpl
sub
jns
xor
fdivl
or
jge
cltd
xor
sub
cmp
cld
inc
mov
mov
sub
inc
pop
push
mov
mov
loop
in
into
add
dec
cs
lock
popf
fmull
bound
test
stos
xor
pop
mov
xchg
or
shrb
adc
sahf
cltd
addr16
das
push
mov
dec
or
xchg
gs
sbb
subl
inc
out
into
jb
add
fs
pop
xchg
stos
dec
outsl
lret
bound
push
pop
cmp
push
pop
cmp
fwait
xchg
xchg
cmpsb
negl
mov
stos
stc
nop
fstpl
lcall
cltd
xor
mov
mov
ss
sbb
scas
xlat
and
les
mov
adc
orb
jg
data16
mov
pop
dec
mov
adc
lea
lret
jb
dec
pop
in
push
jmp
out
jo
rorl
push
xchg
repnz
mov
mov
sbb
add
jl
rorb
lea
sti
push
sub
stc
shl
push
sub
pop
pop
fstl
shl
cmpsb
mov
xchg
sub
lahf
pop
subl
scas
call
test
push
icebp
fwait
mov
pop
das
fsubr
pusha
sbb
mov
in
push
or
push
cmpsl
cmp
mov
ret
push
add
sub
push
mov
sti
adc
shlb
jle
mov
push
jl
or
jg
inc
inc
aas
dec
mov
mov
lcall
xor
filds
test
sub
push
xor
inc
sahf
xchg
pusha
or
lods
inc
push
sarl
adc
cmp
mov
mov
add
out
and
dec
inc
inc
in
scas
test
and
sahf
xorb
mov
pop
and
pop
jne
cmp
icebp
jmp
mov
ret
in
mov
adc
iret
add
jns
lds
xor
leave
insb
cmp
addr16
cmc
roll
pop
pusha
daa
add
inc
insb
adc
dec
loope
jge
into
mov
xchg
pop
mov
cmp
stos
sub
dec
jb
clc
jo
js
adc
pop
xchg
mov
sbb
cmp
xlat
inc
mov
out
sbb
pushf
and
pop
outsb
pop
inc
into
dec
in
es
adc
lret
aam
xor
push
shr
pop
pushf
loop
test
jmp
fcomps
mov
jmp
mov
cmp
gs
out
xlat
es
lret
cmpsl
push
into
and
int
lods
mov
addr16
sarb
insl
loope
mov
cmpsl
push
push
push
lods
vmovntpd
aad
ret
outsb
push
xor
cmpsb
hlt
addl
jl
nop
sub
cmpsb
xor
pop
popa
mov
add
or
and
lods
mov
push
clc
test
sbb
test
loop
imul
pop
xor
lea
mov
ret
outsl
add
in
mov
inc
ficompl
inc
daa
sbb
xor
sub
loope
cli
and
out
aaa
mov
addr16
imul
icebp
jg
xchg
out
rclb
stos
int
daa
lcall
sbb
clc
cmp
cmp
pop
xor
scas
add
incl
xor
jne
sub
jns
insb
adc
aas
mov
jnp
addr16
mov
in
xor
xor
jmp
into
and
jmp
movsb
int3
and
js
repnz
lods
inc
bound
pusha
ss
push
outsl
inc
or
xchg
push
out
lods
mov
xlat
mov
mov
outsl
in
mov
ljmp
pop
cmc
mov
add
movsb
popf
jg
ss
push
cmp
push
dec
xchg
rcl
inc
outsl
mov
insl
bound
insl
jge
test
add
hlt
xchg
in
idivb
int3
seto
popa
jge
jbe
fidivrs
sar
adc
pop
xor
iret
mov
mov
pop
fwait
mov
insl
jmp
xor
mov
xchg
dec
cmpsb
test
fsts
push
lods
int3
cli
push
loope
mov
fisubrl
dec
pusha
ret
sbb
mov
xchg
mov
fnstcw
negb
cmp
test
cmp
add
lds
push
js
jg
mov
or
lahf
jno
add
mov
clc
cli
push
stos
add
fidivrs
mov
sbb
addr16
outsb
stos
cli
inc
sti
out
inc
cmc
xchg
mov
jb
mov
push
nop
mov
mov
sbb
jnp
mov
mov
aam
sub
or
sbb
int
xchg
jnp
ret
loopne
sbb
or
mov
popa
movsl
jo
stc
outsb
xor
and
dec
testl
cmpsb
popa
push
rcrl
stos
inc
cmpl
outsb
movsb
push
aam
nop
ss
inc
fsubrl
push
jg
lret
das
inc
jle
mov
push
xor
out
movsl
adc
mov
popa
sbb
in
pop
insb
iret
rclb
inc
pop
in
testb
jge
fstl
repnz
push
sub
add
idivl
pop
jg
or
in
mov
dec
rorl
fadds
add
xchg
cmp
pop
arpl
into
test
cwtl
xor
fwait
jo
inc
and
pushf
mov
add
dec
push
inc
popa
xorl
shrl
add
out
xchg
add
out
mov
jg
jb
sub
xchg
mov
inc
stos
data16
lahf
add
mov
test
cltd
mov
loope
lea
dec
pusha
push
jle
push
mov
dec
aaa
lea
hlt
cs
idiv
fistps
fs
push
popf
inc
lahf
or
mov
fptan
or
call
js
repnz
inc
or
aaa
push
pop
jb
push
mov
mov
jb
xchg
cmpsb
divb
adc
sub
cmc
push
push
adc
push
mov
fsubl
mov
mov
gs
enter
pop
addb
adc
pop
clc
push
loopne
pop
enter
int
pop
or
mov
loope
scas
mov
rclb
inc
sub
pusha
sahf
lods
xchg
cltd
jge
jg
std
cwtl
mov
mov
insl
loopne
pop
adc
cmp
jp
push
pushw
stc
and
cltd
gs
push
xchg
into
push
or
pop
in
pop
test
jp
out
dec
punpcklwd
lock
js,pt
call
in
jmp
mov
or
dec
es
call
fnsave
sbb
jo
xor
shlb
fldt
jmp
sub
push
gs
mov
pop
sub
or
call
jg
scas
aad
push
dec
out
xorl
ret
sbb
jge
jl
in
loop
pop
ret
dec
push
mov
bound
popa
pop
and
xor
mov
pop
imul
mov
nop
push
aaa
inc
xchg
dec
negl
ljmp
and
cs
les
out
xor
stc
push
push
or
xchg
pop
lret
test
xchg
call
or
and
mov
jo
fadd
lods
and
add
icebp
mov
mov
mov
insl
adc
jmp
je
clc
pop
sub
push
loope
in
out
mov
pop
dec
lcall
inc
push
dec
cmpsl
jle
xchg
lret
in
gs
cmp
fsts
mov
adc
jmp
mov
or
clc
stos
ficomps
mov
popa
pushf
sub
cs
aad
sub
imull
add
sub
sbb
outsb
sub
and
xchg
ret
outsl
and
xchg
or
ljmp
mov
fsubrs
ljmp
xchg
mov
push
add
stos
es
mov
shrb
mov
pop
xchg
mov
jno
xor
xchg
idiv
pop
sub
sbb
add
cmpl
lds
data16
outsb
dec
test
sarl
mov
test
xchg
sub
add
leave
push
mov
std
fwait
jae
cmp
enter
inc
pop
inc
and
fdivr
dec
test
out
in
add
xor
sbb
sti
dec
imul
ss
fisttpll
mov
add
les
add
push
das
xchg
xor
addr16
jl
fsubrs
sbb
dec
dec
dec
pop
ja
push
out
mov
mov
dec
pop
loope
fstl
fsts
jmp
dec
stos
dec
pop
mov
loopne
or
mov
call
cmc
fwait
sub
mov
dec
mov
test
pavgw
xor
js
dec
fs
cwtl
xor
lds
mov
and
mov
iret
int3
cmpsl
ds
out
add
ljmp
pushf
test
fmull
sbb
mov
mov
xchg
repnz
rcl
add
fdivr
or
sub
fsubs
cli
or
insb
or
sub
mov
nop
mov
xor
repnz
andl
jb
cmp
add
aaa
int
das
inc
js
imul
adc
mov
iret
movsl
cmpb
leave
pop
in
mov
push
aas
pop
stos
sub
add
not
notl
insl
mov
sbb
mov
fisttpl
movsl
or
insl
loopne
test
ret
fsts
or
pop
repz
or
xchg
mov
sub
mov
insb
add
mov
popa
jl
mov
xchg
sahf
sti
imull
push
dec
sub
hlt
mov
xchg
push
inc
popf
sbb
in
mov
adc
lock
dec
inc
cmp
dec
xchg
out
cmp
sar
popa
xlat
icebp
dec
fidivs
leave
push
jge
pop
ljmp
jecxz
push
mov
aad
jg
cmp
sub
mov
and
push
cmc
popf
or
push
cmp
loope
lret
das
iret
and
fstl
cmp
rep
or
leave
mov
jb
sub
scas
fldcw
jno
pop
mov
or
mov
or
xchg
into
mov
les
jne
jo
movsb
sub
mov
sahf
push
aas
xchg
aaa
and
lds
cld
mov
es
pop
pop
retw
pop
and
pop
scas
inc
inc
loope
repz
sub
push
adc
rorl
push
mov
cmpsl
adc
or
enter
lock
jmp
lahf
lock
into
jmp
sbb
test
and
and
jmp
sbb
or
shr
and
fcoms
out
test
leave
or
cmp
shl
push
push
adc
cmp
or
pop
jb
repz
in
and
jge
sub
in
repz
jmp
jge
add
inc
push
mov
sbb
cmp
scas
pop
fcompl
fmul
pop
xor
jl
adc
add
test
mov
insl
test
add
and
repz
imul
ljmp
inc
fcomps
pushf
xor
pop
lcall
and
mov
mov
mov
and
mov
xor
loope
adc
or
push
mov
in
test
mov
int3
jecxz
add
xrelease
cwtl
cld
sub
pusha
jecxz
cmp
hlt
call
orb
mov
xchg
popf
mov
shlb
lock
xlat
out
out
jge
fnsave
add
enter
jl
aaa
xlat
insb
xchg
mov
xor
scas
add
sti
test
mov
scas
rclb
xor
jecxz
push
hlt
push
mov
push
or
scas
dec
cmp
movsl
fnstenv
mov
sahf
fbstp
mov
jecxz
cmp
push
jmp
cmp
fisubrs
outsb
sahf
les
jb
lds
in
xor
mov
test
xorl
aaa
mov
pop
jp
inc
sub
out
rcl
sub
mov
cld
je
pop
cmpsb
sbb
add
fimull
lds
test
rorb
mov
stc
test
push
add
cmpl
data16
mov
xor
les
fstpl
rcrb
mov
std
inc
sub
push
insb
sub
inc
xor
je
sbb
les
mov
std
gs
cmpsl
or
push
mov
mov
ss
fldt
xchg
lods
fmull
push
fnstcw
loope
adcb
shrb
dec
pop
pushf
mov
shll
shlb
inc
sub
shlb
dec
mov
pop
dec
mov
sbb
jg
or
je
notl
shll
mov
xchg
lret
call
mov
inc
in
cmp
fistps
or
mov
lods
pop
and
xchg
xchg
leave
xchg
mov
add
mov
push
sbb
clc
jecxz
es
dec
or
jne
stos
sub
sub
cld
push
push
dec
push
push
jnp
inc
lods
and
cmc
neg
pop
movsl
sbb
bound
enter
xchg
xchg
xchg
cmc
pusha
iret
add
mov
or
arpl
mov
into
out
notb
out
inc
fs
fists
leave
fnstcw
test
sub
pop
vmovq
push
notl
loop
fsts
adc
into
cmp
mov
ret
leave
mov
push
fistpl
scas
and
lret
icebp
mov
mov
pop
imul
jne
push
fcompl
push
jne
mov
aas
mov
repnz
cmp
shrb
call
lods
decl
xlat
pop
les
pop
out
mov
xchg
imul
adc
call
jecxz
push
jl,pt
cmp
push
jecxz
sbbl
cs
rcr
pusha
sbb
stos
cmp
push
fdivrs
mov
fsubl
adc
dec
mov
and
jmp
fistpll
adc
mov
test
rorl
in
test
or
mov
add
js
pop
mov
fwait
pop
lcall
and
xor
add
xor
and
add
lahf
or
mov
jmp
sub
and
sbb
mov
dec
or
adc
dec
rorb
mov
popf
jne
and
jg
in
mov
cmc
ret
aam
cmp
call
stc
xor
arpl
dec
mov
je
pop
mov
fwait
mov
int
subps
daa
dec
cmpsb
dec
in
pop
test
mov
add
scas
filds
push
dec
jo
iret
imul
mov
mov
nop
mov
cmpl
add
push
mov
loop
push
cmp
adc
push
xchg
shlb
leave
mov
pop
rolb
push
ror
lods
adc
andl
fisubl
pop
sti
sbb
and
xchg
add
outsb
out
mov
test
fdivrl
push
or
push
adc
sbb
dec
or
lea
xchg
flds
push
mov
imul
jg
test
xchg
sbb
xchg
fdivrp
lds
outsl
inc
cwtl
jge
mov
imul
xchg
scas
mov
movsb
lock
adc
sbb
xchg
shlb
fbstp
scas
cld
mov
xchg
insl
mov
js
sarb
movhlps
pop
inc
xor
dec
cs
in
icebp
aaa
iret
into
pop
gs
je
aam
lods
mov
les
jge
fdivs
scas
and
adc
in
mov
in
aam
out
inc
movsl
gs
push
mov
notb
test
arpl
mov
sbb
daa
push
mov
dec
pop
mov
mov
les
lds
fldenv
lret
sbb
jno
lods
dec
loope
jne
scas
arpl
inc
sahf
orl
cmp
jecxz
stc
dec
pop
cmp
movsl
cmp
adcl
fsubs
loope
inc
or
sti
inc
xor
cmp
sub
mov
arpl
pop
out
test
cwtl
repz
in
sub
jg
push
jmp
or
in
repz
xchg
pop
xor
test
js
lret
ret
cld
xor
adc
jns
inc
adc
adc
xor
and
jno
fwait
loop
mov
cmp
jecxz
aas
pop
push
sbb
and
fdivrs
rcll
sbb
mov
test
jns
or
or
mov
ret
mov
addr16
ficomps
fimull
das
sarl
add
mov
lret
jl
fnstsw
movsb
mov
aam
jae
fldl
sbb
cmpsl
stos
fstpl
mov
push
fidivs
cld
xlat
xchg
in
mov
xor
mov
sbb
jno
jns
movsl
out
mov
sub
cmp
loop
or
inc
ret
scas
mov
into
add
pop
jne
sub
push
and
xchg
add
je
or
aaa
test
or
jmp
in
inc
mov
pop
mov
jbe
cmp
cmp
loope
pop
sub
pop
sbb
dec
sub
sbb
mov
pop
ja
xor
sub
mov
imul
outsl
sbb
xor
pop
or
cltd
popl
clc
jno
dec
mov
cmp
cmp
loope
xchg
mov
leave
aaa
sub
jge
jge
pop
mov
sahf
sub
dec
push
mov
stos
xor
pop
pop
call
cmp
jb
mov
pop
lock
xlat
cmp
push
sbb
xchg
aas
push
loopne
sbb
mov
lds
xchg
fstpt
repnz
push
stos
and
into
gs
jne
push
in
faddp
mov
xchg
mov
call
xor
xor
adc
ficompl
iret
push
jbe
jns
clc
inc
jle
adc
movsl
inc
sbb
popf
aaa
push
test
aaa
push
icebp
fnsave
or
push
push
cld
adc
mov
rcl
filds
cmpsl
dec
jns
xor
jle
lahf
je
mov
jns
inc
fnstsw
fs
xor
lea
in
jl
jle
dec
push
pop
pop
pop
das
pushf
scas
push
xchg
mov
popf
lret
add
test
pop
lods
and
dec
fidivrs
dec
pop
xor
loopne
lds
pop
ja
icebp
mov
mov
iret
pop
xlat
jmp
add
shrb
repz
push
icebp
sub
int
movsl
push
inc
xlat
inc
divl
sub
sub
pop
out
das
addr16
shll
jns
pop
add
cmpl
loop,pn
es
inc
or
jns
add
xor
and
mov
aas
cltd
popa
stos
rcrl
inc
push
jnp
mov
xor
ret
int3
mov
fidivrl
ja
into
push
xchg
cltd
push
lock
mov
add
testl
outsb
js
stc
jne,pn
xchg
stos
dec
adcb
jno
pop
cmpsb
push
lods
test
jp
and
fldt
insb
push
movsl
mov
idiv
imul
mov
xchg
sub
leave
imul
push
std
pop
inc
mov
pop
loope
ds
enter
test
push
aaa
jle
xlat
test
or
ja
mov
fistpl
mov
fs
in
orl
or
xchg
and
mov
jns
sbb
outsl
add
xorl
inc
xchg
xlat
push
in
arpl
adc
icebp
dec
xor
test
and
inc
jge
push
jmp
mov
push
insl
imul
mov
or
sbb
mov
and
lods
push
rcrl
lock
pop
xchg
jne
sahf
push
stos
sbb
add
fistl
add
test
cmp
fimull
icebp
pxor
dec
cltd
or
mov
push
jnp
jg
jns
pop
cmc
or
jp
mov
int3
in
into
aad
das
stos
dec
adc
xor
pop
icebp
popa
jp
sti
cld
add
cltd
xor
fistpll
fstps
test
jmp
icebp
pop
aad
cmp
pop
repnz
call
cmp
out
and
jp
adc
jmp
jmp
test
shr
testl
cmp
push
mov
loope
push
fiadds
daa
lret
popa
pushf
lods
add
sub
scas
sbb
insb
fbld
leave
andb
test
xchg
xchg
sbb
dec
jge
jbe
or
andl
and
and
out
mov
fidivs
lcall
and
repnz
xor
or
test
cs
or
xchg
iret
and
mov
mov
ficoml
sti
adc
cmp
pop
mov
hlt
aam
lcall
sbb
fs
sub
or
shrl
test
jo
add
mov
cmp
xchg
lret
stc
adc
mov
inc
sub
ds
push
jecxz
cmp
push
pushf
lods
fsts
jmp
js
push
je
mov
shrl
push
pop
pusha
xor
or
std
inc
call
imul
lea
push
scas
popa
icebp
push
mov
mov
stos
lock
dec
push
mulb
xor
pop
aam
sbb
movsb
fstpt
sub
adc
jg
inc
popa
mov
movb
mov
shrl
cmpsb
lock
add
mov
sbb
fidivl
jg
mov
xchg
dec
mov
cmc
in
sub
pushf
mull
mov
loopne
xor
mov
mov
cmc
push
mov
arpl
sub
popf
test
mov
xchg
dec
pop
dec
loop
lahf
dec
shlb
call
push
xor
push
pop
push
sub
mov
xchg
sub
cmp
inc
add
ss
imul
divl
xchg
test
sti
adc
sub
insl
aam
leave
movsb
cmp
cmpsl
pop
jecxz
sarb
and
cmpb
ss
test
pop
test
ds
movsl
push
stos
and
cmp
das
cmpsl
and
push
mov
xor
lret
lods
ds
dec
repnz
mov
add
push
sub
ds
sbbl
lcall
test
and
jne
fdivl
jb
les
mov
gs
and
pop
push
jg
fiaddl
jle
jmp
add
mov
cwtl
sahf
ds
mov
sub
jne
mov
adc
mov
push
cmp
negl
push
push
out
adcb
or
mov
lahf
clc
arpl
loopne
cmpsb
ds
push
jb
inc
xor
cs
ljmp
in
movsl
push
push
mov
lcall
stos
jb
mov
insl
test
or
cmp
mov
and
sbb
into
addl
fmul
mov
pop
mov
sti
cmp
cmpsb
imull
loopne
out
loopne
sbb
scas
call
push
dec
sahf
push
cmp
daa
add
test
dec
ja
jbe
mov
loop
mov
pop
sbb
psadbw
fucomip
stos
cmp
add
aas
mov
mov
push
mov
adc
aas
int3
adc
mov
add
movsl
rcr
push
testl
dec
jae
outsb
jp
movsl
rcl
cltd
xor
mov
out
xchg
mov
pop
jge
sti
inc
mov
insl
dec
mov
repnz
addr16
push
das
mov
aam
jle
mov
repz
icebp
loopne
sarb
jns
jnp
divb
or
mov
mov
insb
addr16
push
adc
movsb
aas
call
or
pop
cmp
leave
inc
shl
pop
rcrb
push
insl
mov
inc
lcall
and
dec
sar
cmp
xor
mov
mov
rcl
push
stc
into
repnz
jns
lea
rol
pop
adc
jg
mov
jge
addr16
mov
dec
dec
add
lods
add
push
xchg
lcall
add
test
lds
mov
xor
stos
aas
rcll
cmp
lea
insl
stos
aam
lea
int3
add
cmpsl
fcompl
roll
mov
mov
sbb
push
mov
shl
outsb
repnz
outsb
inc
enter
mov
mov
jp
mov
mov
push
push
pop
outsb
jge
aas
dec
cwtl
pop
mov
xor
insl
rolb
lock
cmp
push
movsb
movsl
push
leave
push
sbb
fimull
add
int3
ja
ds
sbb
leave
int
out
stos
cmp
sub
mov
pop
movsb
stos
mov
lcall
pop
xor
push
lock
ss
bound
fcompl
jno
stc
cmpsb
add
cli
jno
cmp
stos
lret
sbb
enter
fidivl
fcomp
in
or
add
jle
pop
lods
in
aam
adc
push
inc
fidivs
fmull
into
sub
push
or
mov
gs
es
outsl
fadd
xchg
cli
insb
mov
adc
out
dec
xor
outsb
inc
mov
js
test
sub
dec
jbe
cmp
xchg
sub
mov
adc
popl
cltd
mov
push
and
mov
pop
mov
xor
out
test
vandnps
addr16
insb
cltd
xor
xchg
insb
outsl
xor
rol
jbe
jl
test
lahf
push
cmpsb
fwait
xor
mov
popf
dec
mov
and
push
push
cmc
enter
mov
push
in
subl
jge
ja
in
fmulp
or
clc
jne
and
ret
sbb
outsb
cwtl
mov
jle
sub
xchg
adc
mov
sub
iret
sbbb
dec
dec
jno
mov
les
xchg
test
pop
mov
dec
test
shlb
and
or
xor
cwtl
test
scas
arpl
mov
sahf
mov
jne
inc
fsts
mov
jnp
jecxz
imul
stc
insl
add
repz
sub
xor
scas
mov
mov
mov
cmpsl
mov
inc
out
adc
lea
mov
inc
inc
dec
ret
in
sub
jmp
scas
xor
and
notb
lods
inc
dec
mov
test
addr16
scas
outsl
dec
xchg
ret
xchg
int3
mov
sbb
sub
dec
mov
jo
je
jecxz
add
xor
aad
adc
es
or
mov
xor
xchg
lahf
mov
xchg
inc
in
je
mov
lcall
cmp
inc
sbb
xor
outsb
mov
cltd
pop
mov
insb
sub
sub
jmp
mov
pop
push
mov
or
push
out
mov
mov
xor
inc
enter
pop
jmp
push
jbe
pop
lods
cmp
push
pop
mov
repnz
insb
mov
std
lods
inc
inc
ljmp
adcl
mov
sbb
push
fbstp
lds
jb
inc
inc
jnp
aam
mov
decb
out
lds
aas
adc
ficoml
ret
push
jnp
xchg
jge
sbb
fdivp
pop
inc
lret
je
insb
imul
orl
lret
mov
scas
and
shrl
iret
mov
movsl
sbb
fldenvs
xchg
push
add
xor
sbb
shrl
or
sbb
jno
lahf
ss
call
mov
dec
push
sbb
cs
mov
add
push
xchg
stc
out
mov
or
push
xor
fnsave
dec
add
dec
jecxz
cmp
imul
aaa
fimuls
mov
aaa
sub
outsb
scas
outsl
mov
xchg
shll
addr16
addr16
shlb
xchg
frstor
bound
push
out
scas
in
and
push
mov
adc
div
inc
std
add
imul
sub
nop
fdiv
push
cmc
cmp
cmp
test
jg
fistl
adc
sbb
xor
test
jnp
aaa
lea
mov
incl
xor
xchg
add
cmp
pop
pop
pushf
add
or
lcall
xorl
mov
pop
in
pop
pushf
outsb
mov
pop
jecxz
and
and
jbe
rorb
xlat
js
sti
xchg
cs
jae
negl
adc
je
pushf
xor
aad
aad
aas
mov
jge
js
mov
mov
cmp
vorps
aaa
pop
pushf
xor
add
pushf
xchg
mov
mov
aam
inc
pop
jg
jne
out
sub
mov
scas
sbbb
dec
pop
adc
out
xchg
dec
movsl
jecxz
into
mov
xchg
mov
test
sbb
push
and
fmuls
push
mov
js
decb
push
aam
or
mov
cmpsb
cmp
pop
jl
xchg
sub
aaa
mov
imul
jg
mov
ja
cmpsl
icebp
movsb
and
or
clc
outsl
adcb
push
lods
pop
xchg
mov
dec
add
dec
fptan
test
call
dec
out
push
sub
mov
pusha
jg
test
pop
lret
inc
xchg
jmp
int3
sbb
sbb
xchg
fidivl
lds
sbb
cltd
pop
sbb
jl
stos
icebp
mov
fidivrs
xlat
outsl
inc
jle
std
mov
dec
test
sub
inc
add
jne
mov
sti
push
sti
iret
pusha
inc
es
xchg
cmp
iret
daa
and
adc
dec
shlb
mov
in
mov
jbe
xchg
insb
add
push
mov
addr16
cmp
lret
es
adc
sub
sahf
dec
push
mov
push
mov
mov
sub
imull
dec
pop
pop
inc
stc
jne
or
lret
int3
adc
divl
or
lcall
sub
dec
std
inc
jmp
push
sti
pop
lock
mulb
dec
pop
cmp
mov
std
xchg
mov
mov
das
mov
xor
cmp
adc
jb
lods
sub
pop
sbb
mov
cltd
pusha
push
jno
into
pop
scas
sbb
andl
or
cmp
in
push
shlb
inc
inc
sbb
jnp
fs
cmp
pop
and
dec
in
stos
insl
pop
adc
mov
lcall
gs
sbb
cmp
dec
cmp
cmp
addr16
dec
je
pop
lods
insl
addr16
sahf
enter
jg
push
popf
push
insl
add
mov
inc
arpl
andb
mov
mov
and
insl
cmp
cld
push
dec
inc
inc
mov
xor
sub
jmp
pusha
or
andb
cmp
shl
fwait
jge
and
sbb
filds
mov
dec
pop
push
push
repz
add
add
fisttpll
sbbl
or
scas
pop
xor
xchg
jb
leave
scas
mov
fstps
jns
push
stos
cmp
and
xchg
insb
sahf
iret
jl
sbb
pushf
pop
cmpsb
cmp
sub
pop
lock
sbb
pop
loop
or
outsb
lret
es
sbbl
adc
sbb
mov
sub
cld
inc
xor
inc
ret
mov
jns
sbb
or
xchg
outsb
lods
mov
dec
popf
out
xchg
pop
sahf
push
inc
cmp
push
mov
clc
shl
fwait
add
bound
sbb
pop
sbb
insl
sub
ja
aas
cmp
hlt
dec
mov
add
jbe
push
lea
pushf
addr16
mov
rolb
pop
mov
call
jp
jmp
dec
dec
addr16
fisubl
cs
icebp
mov
lods
icebp
pop
lret
dec
lods
xor
repnz
fidivs
push
sbb
pop
outsb
daa
mov
addr16
out
mov
push
add
inc
push
jmp
mov
shlb
aaa
jns
in
inc
loope
cmp
repz
mov
xchg
sub
fnstenv
xor
dec
dec
dec
fbstp
test
ds
sub
push
adc
sub
mov
and
mov
mov
inc
xchg
mov
sub
push
add
sub
fs
fnsave
loopne
pop
adc
push
pop
lds
cld
xor
out
cmp
mov
cmp
inc
inc
xchg
call
xor
jns
movsb
or
pop
or
pushf
imul
cltd
movaps
mov
gs
out
cltd
cltd
xor
fistpll
mov
fsubr
cmc
dec
xchg
clc
add
xor
sbb
in
in
clc
jae
idivl
addr16
mov
mov
aad
push
mov
mov
jmp
lret
imul
sbb
pop
xlat
mov
fwait
aam
xchg
xchg
ss
jb
loop
xchg
insl
xchg
or
ret
loopne
xor
dec
mov
ljmp
or
adc
pushf
scas
inc
mov
inc
stc
add
push
lock
sti
push
add
inc
mov
pushl
pop
mov
loop
add
mov
out
mov
mov
xchg
les
mov
cmp
sub
pushf
push
repz
lods
pop
and
push
rolb
jge
and
aaa
push
or
pop
dec
aam
xchg
add
arpl
aaa
rcll
sub
xor
std
test
sub
fisttpll
js
adc
push
aas
iret
outsb
loope
fstp
dec
xchg
out
xchg
stc
nop
pop
xchg
push
lods
xor
jl
int
sbb
sbbl
pop
jle
cmp
inc
inc
xchg
or
jle
in
lds
dec
dec
mov
inc
cmp
jne
jno
adc
pop
push
rcrl
dec
jg
xor
inc
jl
loope
fs
lods
jno
movsl
sbb
scas
sbbb
sbb
daa
jno
insl
sub
scas
and
js
lret
test
lods
lds
in
enter
mov
adc
xchg
xchg
icebp
adc
pop
jns
lcall
sahf
pop
addr16
frstor
dec
sti
int3
inc
xlat
std
sbb
push
insb
pop
imul
jo
hlt
cmp
sbb
test
pop
pop
popa
pop
jmp
pop
es
mov
fimuls
sub
sub
in
xchg
into
and
insb
cli
mov
jne
ljmp
jg
scas
outsl
adc
mov
pop
xor
jns
loop
aam
aam
shl
cmc
movsl
sbb
mov
stos
xchg
lret
cs
or
inc
in
pop
loop
sub
add
lods
pop
lcall
into
ret
mov
popf
insb
cmp
mov
shll
xchg
xor
adc
leave
pusha
mov
push
mov
nop
and
sub
sbb
jno
loope
iret
sbb
flds
push
add
xchg
xchg
push
in
or
fdiv
mov
movsb
cmp
hlt
ret
notb
fistl
call
lds
mov
dec
scas
aas
xchg
sbb
push
jl
xor
adc
push
cmp
ja
mov
in
xchg
xchg
cmp
xchg
aas
testb
es
test
fstpt
inc
sub
cmp
gs
xor
cmc
cld
jg
in
mov
pushf
or
shll
adc
pop
and
sub
adc
fs
jno
and
scas
arpl
fucomip
lahf
fs
rolb
lods
aaa
cld
lcall
jne
xchg
add
push
push
xor
dec
data16
jb
pop
push
or
aad
repnz
ret
cmp
cmc
hlt
push
add
repz
xor
nop
inc
aas
mov
xchg
in
add
imul
mov
mov
xchg
jb
mov
movsl
rolb
sbb
sub
ret
hlt
xchg
mov
in
icebp
pop
addl
sub
sbb
pop
gs
add
push
sbb
lcall
push
push
inc
cmp
sbbb
jnp
addl
push
mov
test
je
inc
mov
fstpl
cmc
sbb
out
sbbl
mov
mov
mov
lock
jmp
dec
shll
and
cmpsl
repz
imul
je
bound
jnp
add
mov
cmpsl
pop
dec
mov
bound
dec
mov
js
jmp
loop
out
lret
hlt
jns
fnsave
or
adc
notl
jp
sbb
ficoms
mov
inc
add
ljmp
jb
pop
xorl
mov
dec
loope
jo
out
cmpsb
cld
xchg
mov
xlat
stc
pop
or
adc
cmp
lds
sti
xchg
out
rclb
jg
add
sbbb
pop
or
aaa
add
pop
jno
data16
adc
mov
mov
push
jmp
or
icebp
or
mov
pop
push
fsubrs
mov
mov
jae
cli
rolb
cmpsl
cmp
jmp
mov
push
lds
xorb
cmpsl
std
ljmp
int3
cld
aaa
sbb
mov
rcr
pusha
adc
repz
sahf
rorl
sub
repz
inc
and
xorl
sub
call
popa
loope
push
cmc
stc
mov
jmp
or
sarl
dec
in
outsl
in
pushf
scas
pop
cmpsl
mov
add
bound
repz
sbbl
call
cmp
pop
repnz
lods
mov
int
es
stos
push
add
lcall
mov
pop
js
cmp
daa
cmp
pop
mov
jbe
lods
xchg
icebp
arpl
push
jns
cmc
adc
pusha
mov
mov
xchg
fdivl
jge
in
sbb
xchg
dec
ror
xchg
mov
loopne
aaa
xor
mov
inc
mov
cmp
and
pop
scas
sbb
mov
sbb
sbb
je
xchg
mov
movsb
xchg
arpl
xor
xchg
push
ljmp
jno
mov
adc
mov
add
xchg
test
bound
lahf
xor
dec
aas
mov
out
xchg
pop
loop
pop
xchg
outsb
dec
jne
or
hlt
shrb
fbld
lea
push
stc
or
repnz
loopne
les
mov
ret
pop
mov
outsl
daa
stc
pop
xchg
xchg
pop
pop
sub
jle
mov
cmpsb
dec
imul
ja
cmpsl
mov
shlb
mov
adc
xor
jmp
xchg
add
pop
sub
cmp
jne
popa
aam
adc
cmp
add
mov
outsl
mov
mov
cld
xor
and
lcall
mov
inc
fiaddl
push
lods
fildl
in
xor
call
test
sarl
cmp
movsl
cmc
mov
lret
unpcklps
fwait
pop
push
int
xor
mov
adc
mov
outsl
jnp
js
std
push
lods
xchg
cltd
pop
jns
aad
xchg
sub
stos
iret
scas
leave
mov
lods
add
call
mov
rol
outsb
xor
out
lock
pop
ljmp
les
fstpt
rcrl
loop
add
loopne
aaa
or
ss
pop
xchg
add
lock
cmpl
add
iret
aaa
leave
xlat
cmpsl
lock
test
movsl
and
xchg
icebp
nop
push
push
aas
jns
xchg
xchg
cmp
xor
gs
pop
push
pushf
push
movsl
aam
or
fnsave
inc
aas
aas
fucomp
cli
push
inc
inc
jo
or
cmp
adc
pop
sub
in
je
fsub
repz
std
xchg
sub
cmc
push
flds
popf
sub
sbb
pop
out
xor
or
movsb
cli
lea
loop
clc
xor
inc
fistpll
jbe
and
cs
pop
xor
mov
leave
mov
bswap
sbb
insl
jmp
push
mov
mov
cmp
or
lret
add
lea
leave
test
cwtl
mov
lret
adc
mov
add
xor
mov
mov
push
outsb
xchg
int
inc
push
pop
jb
pop
inc
fimuls
ss
pop
cmp
or
xorl
int3
ror
sub
repz
mov
pop
xor
fisttpll
xchg
into
cmpsl
xchg
cmpsl
fldenv
lea
push
xlat
lds
mov
adc
push
addr16
test
mov
stos
mov
push
cltd
int3
sbb
testb
mov
out
test
imul
sti
mov
pop
jl
dec
shlb
mov
sbb
imul
sub
cmp
mov
pop
xchg
cmp
inc
fsts
xchg
addr16
mov
mov
cwtl
xchg
lret
popa
les
in
jg
or
add
jnp
and
xchg
add
mov
mov
pop
js
pop
xchg
xor
loopne
scas
xchg
jg
mov
adc
outsb
cmp
stos
sbb
fsubrl
xchg
imul
mov
ret
roll
sarb
pop
lock
lds
pop
inc
mov
sub
sub
les
in
sbb
test
sbbl
aaa
xchg
inc
inc
push
int3
pop
sub
or
scas
mov
dec
mov
push
stos
stos
nop
mov
adc
sub
loope
mov
icebp
pop
sub
adc
mov
push
jne
or
add
pop
pop
shlb
xchg
gs
sub
inc
pushl
mov
xchg
rol
test
clc
icebp
dec
mov
loopne
mov
mov
mov
mov
pop
jo
repnz
xor
push
or
xchg
cmp
and
adc
mov
imul
cs
lds
or
or
shr
mov
fucomip
loopne
adc
inc
or
dec
pop
mov
andb
ret
test
scas
or
stc
cmpsb
and
imul
cmp
rclb
les
divl
jle
mov
add
cwtl
or
xchg
xchg
jne
repnz
sbb
dec
inc
jns
inc
outsb
push
jmp
xchg
sbb
and
out
jp
je
sbb
add
pushf
inc
and
mov
xlat
cld
xchg
or
cmc
ficompl
xchg
add
leave
inc
cmp
inc
cmpsb
adc
mov
push
lods
adc
or
mov
mov
fsub
sub
mov
mov
dec
adc
sub
pop
shlb
rolb
in
inc
insb
jne
sbb
inc
idivl
fsubs
jae
add
pop
movsb
lret
cwtl
popf
pop
jmp
push
fdiv
out
mov
pop
jge
or
add
inc
jno
xor
pop
out
in
xor
int
or
out
push
push
and
ds
add
adc
push
and
ds
in
int3
shrb
aam
xchg
rcll
or
aas
or
adc
mov
fnstsw
xor
jbe
add
mov
and
or
add
sub
xor
arpl
or
or
jae,pn
lret
in
adcb
cmp
fcmovb
push
loope
nop
mov
ret
test
je
jo
dec
outsl
push
jge
fsubl
or
xor
fdiv
mov
xlat
pcmpeqb
add
jl
push
shll
or
add
mov
loopne
call
sti
push
inc
xlat
aas
sbb
mov
loopne
jmp
das
dec
popl
jae
leave
mov
rcll
orl
push
lahf
jg
dec
xor
push
outsb
loop
mov
cmc
and
xchg
sub
pop
daa
sub
int
xchg
test
push
rcl
out
test
clc
and
lcall
sub
dec
mov
jns,pn
fidivl
cltd
stc
cmp
adcl
jmp
mov
jge
sub
es
xchg
or
cmc
pop
sub
xor
cli
add
nop
lahf
sahf
push
pop
xchg
inc
faddp
jge
sub
pop
fwait
loop
pop
jmp
add
jmp
shl
out
push
xor
dec
and
mov
insl
push
movsb
jp
shrb
fwait
sub
pusha
daa
aas
pop
orb
hlt
push
mov
push
xchg
add
and
push
ja
movsl
add
in
and
mov
cmp
dec
mov
sbb
jo
call
imul
inc
or
mov
mov
insb
outsl
testb
jae
rcrb
xchg
mov
out
imul
or
mov
xchg
cmpsb
sub
push
je
lcall
in
aam
stc
pop
adc
sbb
cmp
lods
imul
lods
mov
in
rorb
mov
xchg
push
out
mov
mov
pop
or
cmppd
cwtl
das
sbb
and
dec
fsubs
shlb
jns
test
mov
push
sub
les
mov
xor
sti
xchg
or
add
mov
mov
adc
loopne
fs
cmp
xor
pop
cwtl
mov
stos
push
jmp
lods
ss
pop
lcall
loop
mov
pop
mov
mov
shll
add
or
leave
cmpb
je
adc
jmp
xchg
in
aad
mov
mov
test
int
cmpb
nop
lock
add
or
arpl
pop
insl
cld
xchg
mov
bound
and
push
or
xchg
jbe
dec
mov
insb
imul
call
sbb
or
bound
inc
push
call
movsb
jecxz
dec
adc
mov
adcl
push
jne
xchg
das
mov
gs
xchg
mov
je
xor
dec
dec
loope
test
push
adcb
add
push
ffreep
shll
popf
pop
rorl
es
sub
leave
mov
dec
arpl
add
dec
leave
pop
addr16
lret
popa
xor
adc
xchg
push
sbb
inc
cmp
or
or
adc
mov
loopne
imul
fstpt
fstl
jp
mov
xor
xor
out
arpl
testb
mov
insb
or
xchg
sub
test
mov
add
add
out
enter
andb
subb
rcl
push
mov
ds
icebp
mov
test
pop
cld
addr16
or
xchg
adc
or
adc
or
enter
lods
jge
xchg
sub
fwait
je
fisubrs
frstor
lret
mov
pop
outsb
call
mov
mov
ds
int
mov
gs
aad
push
adc
pop
fcompl
and
pop
ljmp
lret
aad
aad
ds
es
xchg
or
sub
gs
pop
inc
test
scas
aam
cld
mov
sbbb
outsl
mov
in
dec
aam
les
cmp
in
cmp
add
data16
cli
and
div
int
inc
insb
scas
out
cmp
mov
lods
cmpsb
subb
je
call
or
dec
test
shlb
pop
mov
frstpm(287
jno
mov
enter
and
inc
jp
xchg
xchg
pusha
fwait
mov
sub
dec
pop
scas
jnp
jbe
rcrb
into
and
push
xor
cmpsb
pop
fmuls
cli
negb
push
insl
mov
fidivs
mov
into
push
inc
mov
mov
jp
inc
add
jns
and
stos
mov
and
cmpsb
icebp
bound
push
out
clc
hlt
mov
and
shlb
addr16
jmp
test
rcrb
push
jecxz
mov
xorb
sbb
mov
or
rolb
xchg
inc
in
xchg
fucomip
call
imull
clc
outsb
add
mov
push
dec
jl
xor
pop
add
sub
loopne
sbb
aad
cmpsl
xor
shlb
notl
xor
shl
cmp
add
bnd
movsl
popa
adc
cmp
subb
in
clc
mov
inc
add
stos
popf
out
outsb
popw
fs
pop
xchg
pop
lock
or
lea
movsl
cwtl
jno
add
pop
inc
sub
cmp
bound
cmp
fs
sbb
mov
inc
inc
pusha
arpl
int3
test
inc
push
loopne
pop
cmpb
mov
mov
cmp
sub
aam
add
outsl
cmc
mov
mov
push
mov
stc
mov
cmp
sbb
push
add
inc
or
movsl
cltd
sub
pop
and
lds
inc
mov
mov
push
mov
aad
fwait
int
dec
pop
pop
jne
jo
shll
rolb
pop
add
insb
stos
sbb
fisttpl
mov
dec
dec
add
cwtl
or
add
and
decl
inc
mov
jle
push
sub
mov
lods
ljmp
insb
inc
mov
out
sbb
jne,pt
jno
pop
adc
imul
test
dec
sbb
scas
jmp
fisubrl
pop
sbb
dec
push
mov
rcrb
jge
jne
sbbb
in
xchg
gs
push
ljmp
inc
rcrb
inc
adc
xor
shrl
loopne
daa
cli
push
add
shl
or
mov
jl
popa
push
lds
cmpb
test
fs
sub
jb
andb
nop
adc
adc
mov
gs
rorb
inc
movsb
pop
insb
fisubrs
pushf
hlt
sbb
cmp
dec
sbb
mov
cmp
into
fisubrs
std
push
in
inc
loope,pn
push
arpl
aam
das
lds
push
aam
lea
cmp
inc
xlat
imul
sub
xor
ds
mov
loopne
hlt
cld
outsl
stos
das
addr16
pusha
int3
lods
sbb
decl
cmp
xor
lahf
cmp
push
jle
push
outsl
jge
aaa
add
push
outsl
lcall
stos
mov
enter
or
cli
jg
mov
sub
mov
sbb
andl
fmull
dec
xrelease
xor
inc
pop
iret
fs
xchg
xchg
addb
dec
xchg
cmp
in
andb
jmp
insl
sub
cmpsl
std
mov
hlt
lret
pushf
xchg
das
mov
push
cltd
jmp
dec
inc
fadds
sub
daa
inc
and
movsb
xor
fstl
sahf
mov
fsubrs
lock
movsb
testb
mov
mov
or
hlt
loop
in
icebp
sub
stos
pop
imul
xchg
xchg
dec
std
and
pop
cwtl
mov
push
jle
stc
adc
lahf
ret
lret
xchg
sub
shl
ja
xchg
jmp
in
inc
pop
push
push
cmp
adc
jge
mov
mov
or
and
stos
xlat
pop
subl
mov
ljmp
pop
mov
subb
jl
cmp
pop
pop
notb
aam
adc
mov
stos
sbbb
movb
mov
xor
pop
psrld
inc
negl
mov
andl
add
sub
into
pop
dec
fsubl
mov
mov
mov
cmpsl
imul
mov
mov
add
cwtl
xor
dec
std
cwtl
das
das
push
jg
repnz
lds
mov
scas
cmp
sub
lahf
lods
mov
cmpsb
fsubs
popf
lea
fnstsw
xorb
lret
adc
or
lcall
jb
cld
pop
movsl
shrl
test
stos
jbe
ret
repz
or
lods
pop
daa
imul
icebp
sbb
in
xor
dec
inc
mov
ja
insl
movsb
jp
xor
xchg
mov
icebp
mov
and
dec
jp
vmptrld
cli
in
stos
aad
addb
andl
in
or
xchg
daa
repnz
subl
pop
inc
fimuls
shll
add
jb
bound
adc
ficompl
ret
cmovns
scas
rclb
out
loope
pop
sub
out
dec
adc
jge
sbb
ljmp
mov
inc
mov
mov
mov
test
fadds
addr16
pop
insb
jg
jno
out
jl
bound
push
or
out
std
jo
nop
lock
add
push
test
int3
push
push
aas
cwtl
movsl
cmp
adc
shll
int
dec
iret
pop
add
loopne
and
jo
add
inc
pop
mov
int3
fisubrs
lods
roll
mov
mov
out
adc
lret
out
inc
pop
repz
dec
arpl
pop
jnp
push
adc
cltd
pop
mov
jno
cmpsl
daa
sub
or
rclb
out
adc
or
and
or
sbb
movsl
dec
call
ja
adc
mov
imul
mov
and
sbb
aas
cld
adc
add
push
or
in
or
mov
jmp
dec
sbb
mov
jns
mov
ds
pop
mov
push
jo
ficoml
shld
xchg
aad
dec
pop
sub
fucomip
sbb
xchg
add
mov
push
cltd
lret
push
jmp
pop
icebp
test
push
dec
nop
push
add
sub
sbb
sub
std
insb
inc
sbb
fsubs
sub
jl
sub
mov
lods
lret
pop
xor
fs
cmp
adc
jne
mov
sub
scas
flds
jge
sub
push
cwtl
dec
mov
jo
fldcw
sarb
notb
jne
sub
outsl
mov
adc
mov
shlb
cmp
hlt
cli
shll
mov
xor
inc
inc
arpl
mov
pop
mov
pop
shll
dec
mov
pop
or
shrb
xchg
cmp
and
fwait
push
inc
mov
mov
mov
adc
push
jb
and
mov
js
mov
mov
and
nop
mov
fnstsw
mov
adc
repnz
shrl
adc
or
push
or
clc
sbb
xorb
jl
int3
pop
adc
push
stos
repz
adc
or
and
mov
lods
shlb
rclb
insb
push
jl
cwtl
out
mov
outsl
data16
pop
int
je
jns
aad
pop
dec
or
sahf
or
pop
dec
sbb
xor
mov
xor
or
and
fisttpll
adc
cwtl
dec
stc
jmp
mov
cmp
ret
sub
in
jle
xchg
xchg
mov
loop
std
jg
aam
cli
mov
cmpsl
mov
sbb
dec
insl
pusha
xlat
jp
and
cmpsb
fidivrl
xchg
add
xor
xchg
and
adc
lcall
mov
and
ds
lods
or
push
jae
test
dec
std
xor
adc
lods
add
ficoms
inc
cmpsb
sbb
popf
loopne
pop
cmp
add
call
dec
enter
cmp
sbb
insl
push
lcall
cwtl
das
jecxz
shlb
xchg
testb
sbb
mov
xchg
out
dec
iret
xor
lods
pop
test
pop
mov
scas
xor
ja
fidivl
or
mov
pop
mov
jmp
mov
mov
adc
addb
inc
fld
orb
pop
mov
jae
push
mov
gs
aas
push
sarb
fidivs
repz
loop
pop
jnp
dec
sahf
addr16
jo
push
mov
dec
popf
clc
sti
xchg
out
mov
loopne
daa
mov
cmp
fsubs
aam
mov
scas
mov
mov
cmpsl
bound
jecxz
fstps
inc
jne
jle
mov
adc
jp
int
es
insl
loopnew
cltd
lea
mov
jnp
nop
lcall
push
mov
mov
das
sub
insb
cli
fsubrl
ljmp
jae
xchg
std
sbb
enter
push
cs
cmp
incl
js
ja
pop
dec
pop
xchg
ds
cltd
push
or
and
xchg
mov
mull
mov
test
adc
mov
fucomp
mov
call
enter
test
into
push
xchg
arpl
mov
cmc
cmp
pop
es
xor
mov
cwtl
gs
inc
and
fisttpll
xor
in
movsl
pop
stos
xchg
sbb
ret
lret
in
jns
cmpsl
ds
lcall
imul
insl
leave
or
lcall
std
std
xchg
pop
mov
fnstenv
loope
and
xor
popf
sbb
xor
xchg
xor
xchg
out
scas
xchg
out
out
in
mov
cmp
rcrl
jle
xor
shrb
pop
jg
xchg
sub
int
push
pop
out
lds
pop
xlat
fiadds
or
push
pop
jae
mov
enter
mov
in
or
ds
out
inc
rcrb
inc
in
lods
mov
fucomi
mov
lcall
cmp
pusha
subb
test
in
pop
mov
xchg
pop
add
cmp
inc
iret
in
loope
mov
push
sbb
cmp
in
cmp
pop
int3
ret
push
mov
mov
push
lcall
cltd
test
and
and
pushf
jg
sti
test
sub
shl
jle
adc
cltd
sbb
mov
mov
push
push
jg
xor
sbb
movsl
in
sbb
or
addr16
mov
pop
mov
pop
cltd
ret
jp
dec
pop
lock
or
loopne
sub
dec
movsl
pop
mov
ljmp
mov
cld
ds
es
push
or
lcall
addb
fucomip
es
mov
mov
inc
jecxz,pt
add
leave
mov
mov
pop
aaa
mov
jle
subb
jl
add
xchg
sbb
sub
lret
lea
fs
add
mov
shrl
push
fcomps
testl
icebp
inc
nop
sub
push
bound
loope
inc
into
dec
incb
xchg
test
ljmp
add
movsl
movsb
jbe
add
jge
and
ret
dec
les
andl
flds
pop
ja
insl
sub
cmp
lods
mul
jl
dec
pushf
cmpsl
inc
cmpsb
outsb
orb
xor
hlt
addb
adc
outsb
add
test
popf
mov
xchg
outsl
ret
adc
adc
lcall
pop
cmp
into
in
bound
dec
les
rcll
in
bound
mov
and
jmp
adcl
ficomps
mov
push
adc
mov
mov
dec
mov
mov
xchg
inc
ret
sub
xor
inc
pop
loope
clc
push
sub
ja
adc
add
cli
xchg
shrb
shrl
out
movsb
js
or
loope
cmp
mov
mov
icebp
jno
adc
iret
psllw
repz
sbb
add
inc
mov
fmuls
sahf
ja
movsl
fiaddl
mov
div
aaa
fsubrs
les
call
mov
loope
adc
fcoms
jb
mov
mov
pop
insl
aam
lods
adcb
aad
cld
pop
xchg
xchg
mov
outsb
mov
xchg
push
xchg
xchg
lcall
xor
xchg
mov
cmp
sarb
add
mov
popa
push
in
cmp
cmpsl
shll
lret
and
subl
cmp
icebp
sbb
jecxz
adc
or
jno
leave
mov
xor
jae
fpatan
ret
loopne
out
mov
cmp
jge
fsubr
push
into
adc
xor
outsb
sbb
sbb
push
loopne
cmpsl
lea
mov
or
push
lret
xchg
fwait
psubsw
inc
add
xor
lcall
jbe,pn
test
leave
icebp
jge
mov
ja
shl
nop
adc
push
mov
ja
pop
enter
std
inc
int
lcall
movntq
out
inc
jmp
rclb
pop
add
arpl
xchg
popf
xor
lret
jmp
aad
je
jmp
nop
xlat
mov
sbb
pop
or
fs
and
arpl
clc
xchg
sub
mov
out
mov
es
pop
out
ss
repnz
js
xchg
scas
mov
ret
das
jecxz
fsubr
insl
jg
je
push
mov
movswl
bound
imul
push
mov
shlb
leave
test
jbe
xor
add
push
mov
aas
push
sarb
and
mov
adc
sub
and
ss
sub
sbb
das
sub
and
pop
xchg
test
xchg
and
sub
add
es
dec
gs
mov
imul
mov
testl
out
lea
std
nop
xchg
xchg
jnp
pop
adc
pop
push
repz
sub
or
jge
xor
xor
mov
dec
loope
nop
pop
loopne
outsb
pop
sahf
mov
push
in
inc
jb
sub
cmp
insl
cli
sahf
lods
jg
into
shrl
jle
mov
fildl
fsincos
movaps
or
pusha
and
and
xlat
es
pop
pop
xchg
cmpsl
js
mov
cs
test
inc
sbb
dec
dec
or
lds
adc
fsubs
add
lahf
das
lcall
jmp
add
cmp
imul
shl
xorl
shll
fistpll
push
lret
mov
jns
and
int3
push
arpl
mov
dec
sbb
and
xchg
aad
imul
fcoml
xchg
add
aaa
mov
test
pop
fisubl
das
fidivs
pop
xchg
sub
fs
cmp
dec
fdivrs
push
movsl
add
and
mov
jne
insl
mov
jg
xlat
add
cmp
dec
or
jge
loope
ja
xchg
mov
fistl
gs
mov
ret
leave
out
call
aaa
or
mov
xchg
push
pop
sbb
or
push
sbb
and
das
mov
push
pop
and
sarl
sub
adc
orb
in
daa
dec
scas
adc
sbb
vandnps
add
cltd
xor
frstor
lock
cmp
jae
call
jg
in
iret
mov
mov
enter
xchg
repz
mov
push
scas
ljmp
pushf
scas
aaa
and
pop
pop
mulb
ds
loope
cmp
leave
sbbb
std
sbb
inc
mov
push
lret
add
jmp
addr16
stc
ror
mov
dec
mov
out
push
xchg
add
sbb
andb
mov
xor
scas
mov
push
cmpsb
test
mov
xchg
push
imul
ljmp
rcrb
add
mov
pop
dec
jbe
add
jae
mov
sar
sti
dec
and
mov
std
addb
das
mov
jp
jnp
cmpsl
ret
test
testb
sti
pop
ret
sub
sbb
or
sub
adc
pushf
adc
pop
and
int
pop
ljmp
push
jne
stos
jo
rorb
xlat
das
cvtdq2ps
mul
add
out
pusha
insb
mov
lahf
push
cwtl
mov
jg
fstps
popf
xor
fidivrl
lcall
and
mov
cmp
sbb
or
push
ja
inc
xchg
dec
imul
cmp
sub
jecxz
xchg
adc
mov
and
ror
lods
mov
iret
dec
scas
cmpl
rcl
scas
mov
inc
fs
jl
call
mov
jnp
repz
int
mov
fistpll
stc
push
dec
fcoms
jb
outsl
scas
cmp
imul
out
in
scas
adc
movsl
scas
dec
mov
or
mov
cmc
cmc
sub
popf
ss
add
and
dec
jb
and
pop
aam
rcl
lret
data16
rol
je
adc
pop
xchg
ja
cmpsl
test
loop
movsb
mov
lahf
data16
sbb
lock
imul
dec
std
les
inc
mov
imul
mov
test
jge
das
lret
je
push
in
test
or
scas
or
out
xchg
mov
inc
mov
add
in
or
cmp
bound
push
dec
aas
xlat
lret
xlat
dec
sub
dec
cmp
push
inc
cltd
jb
imul
fnstenv
jg
sub
pop
scas
les
push
mov
fcmovnu
outsl
rcr
jmp
fisttps
cmp
xor
fstps
sub
test
jbe
ljmp
mov
fiaddl
push
insl
ljmp
adcl
xor
nop
jbe
xchg
push
stos
das
call
pop
cmp
mov
dec
loopne
jp
jmp
test
mov
cmp
dec
dec
mov
cmpb
icebp
cmc
dec
fistpll
in
hlt
sahf
shlw
adc
pcmpgtb
push
mov
add
mov
and
mov
and
or
into
and
stc
nop
inc
push
or
sbb
movsb
cmp
mov
cmpsb
nop
and
cli
adc
xor
repz
bswap
push
cld
mov
add
mov
ror
mov
addr16
dec
inc
jmp
pop
inc
data16
pop
jne
sahf
mov
hlt
loop
dec
out
fwait
add
imul
inc
fldl
int3
jnp
mov
mov
test
movsb
dec
cltd
in
adc
jmp
dec
adc
or
jns
inc
cmpsb
out
daa
dec
add
push
sbb
xchg
pop
daa
movsb
inc
mov
dec
fiaddl
scas
inc
call
sbb
mov
sbb
fisubs
dec
int3
outsb
jp
inc
pop
sbb
lods
inc
mov
dec
mov
jbe
out
xchg
fcoml
add
pop
lods
in
add
or
push
test
fdivl
sub
push
cltd
repnz
cld
and
pop
stos
cmp
enterw
mov
xor
rorl
push
lahf
fisubl
les
push
cli
jns
movsb
push
aad
lock
pusha
xor
push
outsb
adc
adc
sti
jnp
mov
pop
cmp
ret
ljmp
stc
adc
pop
add
enter
jmp
sahf
cmc
xor
jge
adc
icebp
adc
cmp
daa
enter
sub
add
xor
jb
arpl
out
xchg
sbb
jp
sarl
or
fldcw
and
dec
movsl
mov
lds
mov
mov
cmp
outsb
lcall
hlt
in
adc
mov
mov
aam
cmc
outsb
out
in
pop
xor
repz
and
in
je
in
push
mov
mov
imulb
mov
mov
repnz
or
int
and
leave
push
int
xchg
and
xchg
add
dec
jbe
sbb
mov
in
xor
imul
dec
lock
leave
call
imul
or
lret
test
xor
fidivs
pop
mov
push
and
flds
push
xor
aaa
jbe
shlb
jb
mov
push
and
pop
lcall
mov
and
aam
adc
sbb
fwait
xor
inc
fnstenv
push
mov
dec
mov
mov
xlat
ljmp
mov
arpl
mov
mov
xor
cmc
push
in
dec
add
or
and
mov
movsb
jg
stos
push
fiaddl
mov
outsb
hlt
aaa
leave
into
hlt
mov
mov
pushf
add
xlat
xchg
lret
ss
leave
out
sbb
into
inc
sbb
push
inc
movl
fisubrl
inc
fmulp
jae
xor
add
repnz
popf
dec
test
in
inc
and
or
cld
test
ret
rorl
jecxz
adc
in
xor
and
pop
aaa
ljmp
fmuls
ds
pop
mov
adcb
add
push
shlb
or
mov
add
adc
adc
push
cmp
dec
outsb
daa
push
jne
adcb
xlat
roll
mov
cmpsb
pop
int3
arpl
rcll
loop
mov
dec
mov
addr16
out
xchg
xlat
xchg
andb
pop
mov
ja
sbb
fcomps
jnp
dec
les
test
xorb
sub
test
pop
xor
imul
rcll
pop
jae
xchg
jnp
lret
jp
xlat
mov
cmpsb
in
mov
cmp
inc
and
faddl
sub
inc
out
mov
cld
fwait
cs
xlat
push
mov
stos
mov
xchg
test
lds
test
sahf
clc
sub
xchg
xchg
cmp
repz
ds
xchg
xchg
popf
imul
popf
sbb
push
les
sub
mov
fs
es
addr16
out
jae
test
sti
jae
fsubrl
hlt
mov
jl
and
mov
inc
dec
fwait
sub
nop
jl
mov
cld
into
mov
sbb
pushw
push
lret
aad
mov
dec
loopne
aad
out
jo
xchg
mov
sar
repnz
dec
dec
adc
and
outsl
sub
sbb
in
dec
repnz
lea
inc
das
ret
sub
xor
pop
sbb
aad
rolb
stos
cs
test
add
push
mov
adc
sub
in
push
nop
mov
or
leave
push
add
mov
call
mov
mov
sub
leave
adc
push
mov
mov
ret
pop
lea
in
dec
xchg
cmpl
pop
icebp
mov
ds
inc
out
adc
fsubl
into
push
insb
arpl
sbb
pop
adc
inc
pop
mov
jmp
mov
or
cli
sbb
clc
shl
or
loope
sub
orb
xchg
in
inc
loop
or
jp
or
scas
push
inc
and
call
jnp
rcrl
icebp
or
pop
mov
rclb
inc
into
adc
movl
dec
roll
in
and
addr16
mov
sub
negb
mov
jno
idiv
shl
test
bound
xchg
popf
fisubl
loope
xorl
sub
pop
cmc
andb
jne
inc
test
dec
adc
in
mov
and
add
ja
push
lods
mov
idivb
out
dec
add
mov
fwait
lea
repz
imull
fcomps
repnz
sbb
add
and
add
call
sub
jns
xor
test
mov
jns
ret
xchg
sti
loop
rolb
lods
or
mov
fcoms
lods
cmp
shll
pushf
loope
pop
push
mov
jmp
stos
and
fbstp
sbb
push
pop
outsb
pop
xlat
xchg
pop
mov
stos
xchg
insb
lock
push
fdivrl
in
sub
xchg
jl
mov
and
jae
imul
inc
lods
push
imul
gs
xorl
mov
cmp
sub
icebp
xchg
shll
add
addr16
sbb
ret
mov
pop
sbb
scas
mov
ret
adc
pop
shll
xchg
adc
fidivs
push
outsl
cli
jp
xchg
pusha
xor
xorl
and
rcrl
das
xchg
mov
daa
xor
out
pop
push
adc
enter
fs
xchg
movb
scas
add
stos
adc
pushf
lods
push
test
lahf
or
aam
xchg
out
jge
mov
popa
ds
jns
stos
adc
push
jl
push
xchg
mov
sub
jl
jg
and
int
adc
sub
jnp
loop
out
inc
mov
ret
imul
and
fnstsw
icebp
movsb
mov
es
push
popf
dec
shrb
adc
movsb
pop
sarb
mov
bnd
decb
sbb
dec
pop
scas
push
mov
jg
clc
dec
loop
out
pop
xchg
and
loop
push
in
sahf
lock
push
cmp
js
sub
fdivs
and
inc
out
adc
orb
or
cmp
adc
dec
mov
sbb
aam
pop
or
movsl
vmovaps
xorl
sbb
xchg
dec
pop
div
cli
lcall
cmpsb
mov
sti
jle
frstor
int
addr16
fcompl
loopne
or
insl
inc
mov
mov
push
xchg
je
in
jbe
fidivs
aad
mov
inc
push
aad
or
add
cwtl
inc
mov
xchg
add
mov
rol
inc
push
rolb
cmpb
inc
pop
jbe
jns
movsb
pop
pushf
pop
xor
lret
mov
jo
dec
loope
ljmp
add
mov
aad
dec
addb
mov
xchg
fldenv
push
das
jmp
add
cmpsb
pop
mov
mov
imul
fwait
aaa
pop
popa
mov
or
dec
shl
jnp
fucomip
cmc
pop
loop,pt
mov
dec
fsts
xchg
lods
testb
mov
cmc
pop
pop
loope
out
aad
dec
and
ss
or
clc
sahf
sub
mov
setge
push
in
add
inc
jg
in
adc
lods
out
js
mov
js
repnz
iret
call
test
loope
add
sbb
mov
dec
lock
push
dec
lods
daa
outsl
test
ret
sbb
dec
cld
pushf
push
xor
rorl
in
inc
jge
mov
or
clc
xchg
pminub
fidivs
aas
mov
test
inc
sub
jge
and
and
xchg
es
or
mov
sub
out
movsl
mov
fnstsw
addr16
inc
dec
cmp
xchg
push
dec
rcl
pop
es
inc
mov
fisubrs
mov
xlat
repz
ds
jnp
xchg
mov
pop
xchg
add
ja
push
inc
mov
ja
mov
xchg
xor
sbb
subb
fnstsw
push
fs
xchg
push
pop
je
mov
mov
arpl
mov
rorb
mov
dec
out
or
push
pop
mov
pop
rolb
testl
add
jmp
cwtl
push
or
mov
mov
add
add
daa
xchg
pop
clc
or
cmp
xchg
test
push
push
nop
daa
and
mov
sub
mov
and
inc
addr16
std
ss
das
add
and
sub
idivb
xor
wrmsr
sti
cmp
adc
sahf
dec
push
int3
bound
lods
inc
fstp
imul
dec
outsl
jmp
sahf
or
ja
adc
sbb
or
out
frstor
jae
sub
rep
inc
rcll
xchg
fwait
sbb
mov
push
push
and
adc
push
mov
push
addr16
fnstcw
ljmp
aam
jns
out
add
xchg
call
clc
and
outsl
stos
es
mov
cmp
cmp
sahf
lods
inc
mov
mov
and
cmp
xchg
inc
fsts
std
pop
cltd
imul
ffree
aas
inc
clc
pushf
outsl
xlat
push
cmp
lods
cli
pop
lds
push
adcb
clc
repz
push
fists
sub
mov
pusha
das
scas
sahf
clc
out
divl
push
in
mov
in
js
jge
daa
cmp
cmp
sbb
in
int
arpl
enter
lret
mov
push
ret
aam
aad
mov
adc
cmc
xorl
lods
mov
fwait
insb
mov
into
out
insl
add
mov
cmpsl
cli
sbb
mul
or
and
dec
pop
pop
andl
sub
icebp
cmp
and
dec
jne
loopne
mov
jl
mov
incb
and
movsl
xlat
cmp
sbb
lret
mov
push
sub
mov
jo
pop
daa
jae
ja
shll
or
les
sub
xor
and
jns
or
mov
je
popa
jg
pop
ljmp
mov
or
dec
jmp
sbbl
add
in
loopne
ds
dec
sar
jl
mov
sub
mov
push
pop
scas
stos
xchg
sbb
sbb
shll
mov
loop
aam
pushf
mov
lods
push
call
dec
adc
push
out
fstp
or
mov
lods
cltd
fcmove
xchg
fnstcw
or
fcmovnu
in
or
test
lock
cld
loope
cmp
inc
mov
fwait
xcrypt-ecb
cmpsl
into
popf
adc
cmp
js
push
push
xchg
popf
jmp
adc
push
into
cmp
push
xchg
push
add
inc
pop
addr16
out
sub
inc
dec
mov
in
stos
fcoms
sub
push
cmp
jns
sbb
loopne
push
sti
jg
sub
and
testl
add
push
fldcw
data16
sub
jo
push
add
fdivr
icebp
mov
pop
jecxz
or
fnstenv
jecxz
das
nop
cmp
xor
pop
or
insb
dec
mov
mov
bnd
sbb
enter
in
fbstp
lret
mov
push
cmc
sub
jl
or
ljmp
scas
pop
pop
adc
rorb
andl
clc
fwait
loopne
jmp
jmp
push
leave
gs
cmc
jns
dec
mov
rcrl
cmp
imulb
sbb
dec
jl
mov
pop
adc
test
add
test
sbb
insb
pop
dec
ja
cmpsl
test
shlb
jl
cmc
movsb
pop
push
adcb
sti
jbe
mov
in
xor
xchg
loop
mov
inc
mov
movsb
popf
push
and
cli
stc
cli
lret
jne
sbbl
fldcw
rcr
nop
adc
xchg
or
shl
adc
bound
pusha
mov
mov
jno
adc
mov
pusha
pop
es
pop
or
scas
jno
or
arpl
mov
sbb
call
sub
out
push
aad
xchg
cmp
or
cmc
movsb
push
dec
shll
dec
sbb
inc
mov
mov
outsl
push
insb
ficoml
clc
xchg
out
fcomps
insl
aas
outsl
xchg
insl
pop
cmp
divl
andl
sbb
pop
hlt
pushf
insl
out
push
dec
push
sbb
add
mov
std
xchg
imul
xchg
and
mov
pop
jnp
mov
aad
mov
xchg
lret
jmp
mov
jnp
repnz
sub
imul
ja
cmp
jne
pop
jecxz
imul
repnz
icebp
dec
fs
xchg
sub
mov
mov
inc
loop
push
mov
xor
test
push
add
adcl
mov
out
push
xchg
movsl
xchg
inc
pop
cmpsl
std
jo
repz
xor
mov
and
outsb
and
outsb
notl
xor
sub
pop
repnz
mov
ret
in
ret
mov
sbb
push
fsubrs
mov
rcll
shll
test
loop
xchg
xor
cmpsb
dec
push
inc
inc
sbb
lret
jns
cmpsb
and
xchg
mov
notrack
out
pop
or
cmpsl
das
fadds
cld
sarb
lock
xchg
data16
iret
aaa
push
mov
out
and
xchg
sub
das
lret
in
call
mov
lock
jp
xor
inc
inc
inc
imul
xchg
mov
dec
sbb
mov
shrb
sub
gs
push
lahf
insb
in
aas
pop
jmp
mov
jne
out
xchg
sbb
sbb
cmpsb
sbb
add
cmc
dec
pop
and
das
mov
rorl
test
add
adc
xchg
inc
stos
jecxz
fsubrs
je
das
cmpsb
xor
xchg
and
dec
cmp
imul
cmp
add
adc
iret
aaa
push
cwtl
fwait
pop
xchg
test
xchg
filds
sub
cmp
xchg
add
push
sahf
xor
int3
pop
sub
mov
es
aas
and
call
ss
mov
fs
leave
pushf
daa
out
adc
jns
xor
fsts
or
into
and
dec
pop
lock
mov
data16
sub
out
cmpb
mov
lods
push
jae
adc
push
mov
adc
jbe
add
inc
fiadds
adc
mov
inc
mov
bound
pop
sbb
sbbb
mov
in
scas
notl
add
pop
mov
dec
loop
jle
aam
jmp
mov
into
xor
push
and
ss
or
outsb
sbbb
xchg
in
xchg
jb
inc
cmpsb
popl
test
push
divb
test
mov
or
jb
addl
xchg
dec
jp
neg
sub
or
pop
mov
mov
cltd
fsubr
mov
xchg
inc
and
das
test
dec
les
push
mov
fwait
cmp
cld
xor
notb
repz
test
ret
icebp
push
push
mov
stos
jle
stos
es
push
sub
push
cltd
sub
xor
jne
xchg
scas
jge
adc
les
nop
lea
mov
sub
mov
lods
dec
xchg
mov
shlb
iret
cmp
sti
dec
ja
negb
stos
movsl
idivl
mov
jb
fsubrs
jl
int
pusha
orl
decl
loope
adc
popa
adc
movsb
js
or
mov
cmpsl
mov
mov
test
in
scas
xorl
xchg
sbb
push
sbb
arpl
aas
aad
jecxz
push
leave
out
bswap
arpl
mov
sahf
push
loopne
and
inc
xchg
scas
loop
cmpsl
push
pop
pop
repz
fcoms
test
fidivrl
add
push
jl
cmp
rcrb
sbb
fs
adc
in
jns
leave
and
stos
mov
push
sbbb
vcvttps2dq
test
and
dec
dec
sub
pop
cwtl
or
sbb
mov
cmp
lods
fwait
lea
mov
fistpll
push
jmp
pop
mov
scas
push
add
and
lret
inc
cmp
notl
dec
fisubs
xor
pop
lock
out
jbe
pop
mov
pushf
aas
mov
and
test
test
sub
stos
xchg
add
lahf
cli
cmp
mov
and
rep
outsb
and
inc
pop
xchg
aad
mov
sbb
mov
add
addb
jo
insb
sarl
push
jecxz
ljmp
lret
out
test
inc
push
movb
test
iret
pop
std
sub
push
out
mov
lock
fucomp
add
push
insb
mov
lcall
cmpsb
lea
adc
pop
dec
fisubs
cmpsl
pusha
sub
fsubr
add
sbb
mov
sti
cmp
shrb
jmp
lods
repz
pop
aaa
mov
imul
int3
test
dec
pop
xchg
movl
lret
frstor
push
pop
cmp
subl
sbb
repz
mov
push
cmp
lahf
jno
shrb
aam
lcall
xchg
adc
and
push
jecxz
sbb
ret
dec
movsb
xor
mov
ljmp
andb
test
out
adc
mov
pop
repnz
lcall
adc
pop
mov
mov
cwtl
in
ja
inc
cwtl
test
int
jmp
adc
pop
or
xor
adc
cli
int3
mov
ficoms
cmp
out
and
out
mov
je
je
cmp
dec
pop
mov
push
orb
mov
ja
or
fldcw
inc
dec
jg
outsl
shlb
mov
mov
mov
adc
dec
aam
mov
jae
push
sub
popa
pop
int3
nop
sub
mov
jnp
in
cmp
pop
push
aaa
testb
adc
nop
clc
ds
push
push
scas
test
aam
test
or
sahf
movsl
arpl
hlt
cmp
test
jne
sbb
mov
les
inc
sbb
out
in
sbb
jnp
imul
mov
movd
fnsave
adc
push
mov
lds
rcl
arpl
dec
jl
adc
rcrb
push
fwait
movb
mov
cmp
lods
mull
lods
sub
lret
dec
pop
cmc
in
stos
aaa
mov
dec
or
jb
stc
test
or
jbe
daa
xor
inc
mov
mov
mov
pop
pop
sti
cltd
shlb
outsb
cmpsl
enter
sub
into
std
aam
pop
lods
adcb
adc
mov
inc
cmp
adc
dec
adc
ret
aas
ja
cmp
push
fldt
daa
cs
sub
cmp
cmp
add
fwait
pop
mov
out
xchg
arpl
mov
in
lret
std
fists
aam
outsl
dec
lods
mov
mulb
xchg
sbb
xor
mov
jp
repnz
mov
mov
mov
jb
add
movsl
push
notb
mov
pop
les
dec
loope
push
add
cli
aas
jns
jo
add
popf
push
cmp
push
and
cmpsb
outsl
ja
push
jo
lret
inc
and
pop
dec
xchg
outsb
mov
push
or
dec
ficoms
stc
fiaddl
and
cmpsl
push
test
cs
mov
lret
and
fwait
xlat
pop
icebp
daa
jne
test
bound
dec
push
es
insl
jle
mov
cmp
and
push
std
pop
sbb
mov
dec
and
fildl
fsubl
mov
pop
imulb
xlat
shl
or
adc
dec
testl
mov
xchg
sahf
dec
sbb
xchg
shrl
dec
and
addb
mov
jmp
mov
jmp
stos
pop
sub
andl
cmp
lods
jg
push
lock
loop
lret
pushw
movsl
push
sti
test
ja
push
adc
pop
mov
jns
push
imull
pop
xor
or
jmp
and
xchg
sub
jnp
sbb
scas
pop
or
xorl
pop
daa
adc
push
testl
xchg
divb
fldenv
sbb
ret
pusha
idivl
or
cmp
lds
or
stc
lods
mov
cmp
fsubrl
pushf
loopne
into
bound
outsl
pop
call
push
cmp
dec
mov
movsb
mov
mov
aam
lock
incl
cli
daa
cmc
bound
xchg
sub
fdivrs
mov
arpl
xchg
mov
dec
cmp
sub
movsb
jnp
hlt
push
and
jecxz
pusha
cld
jae
mov
stc
mov
cli
popa
lea
icebp
xlat
jo
and
xor
dec
xchg
dec
xor
and
xchg
enter
xchg
mov
sub
adcb
inc
sub
imul
push
adc
mov
es
push
push
push
xor
and
dec
add
push
repz
aam
pop
jnp
dec
jle
jb
lcall
adc
and
movb
sbb
and
fmull
rcrb
jb
jp
mov
or
mov
mov
inc
stos
xchg
arpl
and
fstp
in
into
enter
xor
out
jle
cmp
dec
scas
stos
loope
mov
ret
xor
add
push
sbb
xchg
repnz
dec
sub
xchg
mov
push
ljmp
jno
cmpsb
jge
movsl
mov
nop
daa
dec
fsubs
inc
insl
test
mov
xor
push
mov
fwait
pop
repnz
dec
pop
lods
cmc
out
pop
push
cmp
adc
inc
pop
ljmp
mov
adc
pop
xchg
mov
mov
arpl
addl
mulb
mov
int3
leave
in
cmc
push
ljmp
test
arpl
cmc
in
or
mov
mov
ret
pop
jbe
cmp
xlat
dec
repnz
std
jge
in
sbb
repz
push
addr16
mov
cmpsb
lea
adc
iret
pop
addr16
clc
xchg
sar
jo
cmp
insl
and
test
jp
mov
mov
cmp
lea
sbb
int3
mov
mov
xor
cltd
out
mov
sub
mov
dec
push
cmpl
xor
sbb
mov
or
mulb
adc
lret
std
je
popa
xor
dec
cmp
fiaddl
pop
pop
jnp
or
push
mov
xchg
movsb
and
mov
adc
dec
pop
cmp
mov
lret
pop
dec
sub
addr16
mov
sahf
repnz
sarl
les
jp
ds
popf
cmp
insb
pop
test
mov
decb
repz
push
sti
adc
lahf
xor
popf
xchg
dec
call
inc
adc
xor
jl
clc
or
dec
ss
out
ja
popa
add
cmp
incb
fstpl
push
cli
pop
jl
jp
sbb
inc
fs
enter
cmp
out
xlat
outsb
and
aaa
dec
xor
imul
mov
movsb
rcl
fmulp
and
adc
sbb
cmp
xchg
mov
jnp
sbb
mov
insb
inc
sub
jle
mov
rorl
sub
data16
jnp
and
imul
xchg
in
inc
push
fwait
lea
mov
add
jge
or
push
ss
addr16
fisubs
iret
cmpb
jp
jns
xor
call
xlat
je
sub
or
arpl
lret
cmpsl
rorl
mov
cmpsb
inc
in
pop
push
dec
leave
fs
dec
lret
cld
mov
jmp
mov
mov
lea
inc
xchg
mov
fs
pusha
popf
xor
pop
mov
cli
out
adc
mov
fldcw
cmp
sbb
popa
sub
pop
test
mov
or
lock
lods
fidivl
das
repnz
jae
xchg
call
xor
loopne
adc
add
push
lret
and
and
cwtl
cmp
std
ss
inc
fdivl
rcl
xchg
arpl
cmp
push
mov
out
or
jle
mov
daa
mov
icebp
adc
mov
jl
dec
loop
cmp
add
pop
aad
out
inc
out
cmc
pop
and
loopne
ret
cld
inc
jge
dec
scas
loope
ljmp
push
clc
sbb
cmc
mov
mov
push
and
jnp
xor
sbb
and
pop
dec
inc
sbb
sub
sarl
jle
lods
fdivl
inc
jns
in
mov
and
mov
jo
cmp
movsl
aad
mov
sbb
mov
inc
pop
jle
fdivrl
in
xchg
icebp
sbb
and
stc
pop
orb
mov
into
aaa
adc
xchg
mov
movsl
in
dec
fs
fmul
sarl
add
push
mov
sti
or
mov
fsubl
mov
imul
jno
sub
push
or
leave
push
cmpsb
jb
mov
movsl
test
in
cmp
mov
mov
fwait
hlt
adc
mov
mov
pop
negl
mov
outsb
sbb
clc
enter
push
into
cs
xchg
int3
sub
sub
add
sbb
add
sbb
and
lods
jnp
les
mov
popf
and
jle
sbb
and
outsb
out
inc
mov
push
adc
jmp
scas
bnd
cmp
push
dec
sbb
lahf
and
mov
sub
pop
xchg
dec
mov
aas
mov
mov
inc
sbb
into
jo
xchg
jmp
inc
mov
in
add
ficompl
adc
adc
jge
xchg
ss
xor
jmp
push
push
in
insw
mov
add
mov
xchg
sbb
popf
mov
mov
inc
cmp
and
and
pop
xor
fsubrp
imul
mov
mov
push
pop
test
loopne
and
stc
push
addr16
daa
push
enter
pop
das
sbb
jne
push
popa
enter
leave
popf
sti
and
xchg
int3
ds
aas
xor
insl
pop
cltd
mov
pushf
inc
dec
push
dec
fsubr
push
mov
sbb
rorl
jno
adc
test
jmp
mov
sbb
sbb
sbb
arpl
into
jbe
mov
add
sbb
xlat
dec
sbb
mov
xor
fildll
xchg
dec
pop
imul
ja
test
cmp
bound
outsl
push
cmp
icebp
mov
jl
mov
je
pop
jbe
sbbl
cmp
lcall
pushf
out
pop
dec
and
int3
pusha
fsubrs
xchg
sub
fiaddl
inc
push
add
jg
sbbl
out
add
sbb
add
mov
pop
pop
cmc
mov
inc
and
jmp
add
dec
inc
stc
bound
mov
inc
xlat
inc
rcll
out
push
shr
pop
sub
and
test
data16
fnsave
stos
sbb
ds
sbb
stos
pop
popa
cmp
jecxz
xor
icebp
daa
add
sub
push
sub
leave
xor
in
ret
fisubrl
push
fstps
cltd
dec
pop
mov
iret
xor
sub
dec
ret
fidivs
imul
leave
imul
mov
push
xchg
xor
pop
lcall
mov
mov
jmp
sbb
adc
aaa
cmp
pop
cmpsb
xor
lds
dec
loop
dec
pop
lock
imul
test
inc
xchg
adc
mov
xor
cmp
lods
pop
cli
rcrl
add
js
mov
in
ljmp
das
mov
fbstp
xchg
call
leave
xchg
and
or
sbb
xor
jmp
xchg
and
cmp
jp,pt
cmpsb
cmp
inc
pop
fcoms
add
sbb
sub
loope
cmp
movsb
cmpsb
aad
mov
sarb
stos
iret
outsb
loope
inc
lret
pop
jp
mov
inc
daa
cwtl
das
push
sbb
lret
lods
movb
or
sub
or
jbe
jnp
mov
movsl
cmp
repnz
bound
mov
aam
dec
push
or
popf
mov
xchg
das
lock
outsb
inc
fstpl
fxam
add
mov
fnstcw
mov
mov
xor
cmp
pop
inc
test
test
xor
cmp
jg
cmc
add
out
pushf
mov
dec
jmp
outsb
add
dec
push
ret
jae
cmc
aas
sahf
xor
or
ja
pop
jg
mov
movsb
out
cmp
mov
pop
mov
popa
ljmp
sbb
rorl
imul
adc
inc
sbb
fs
test
jbe
stos
inc
mov
xor
jae
dec
cmp
sbb
mov
xchg
push
andb
and
push
sub
out
cmp
lods
shrl
test
mov
sbb
shr
or
jle
inc
jb
and
xchg
inc
mov
push
push
scas
mov
ss
xchg
lret
test
push
lret
or
inc
fsubrl
out
dec
aad
sbb
jle
mov
add
sbb
jp,pn
push
test
loope
cmp
test
or
les
adc
pop
sar
mov
scas
mov
xchg
ret
jg
adc
mov
add
adc
shrb
lods
rclb
adc
pop
xchg
xor
ficompl
popf
cld
negl
mov
lahf
aaa
cmc
movsb
mov
lds
mov
in
jb
outsb
insl
rorl
scas
inc
push
mov
xor
pop
and
mov
divl
cmp
sub
mov
mov
shll
pop
push
into
stos
divb
cwtl
lods
das
shlb
cs
xchg
adc
iret
push
pushf
add
outsl
mov
loopne
arpl
mov
sbb
incl
mov
stos
cmp
inc
pusha
adc
pop
jg
push
cltd
jo
sbb
xchg
or
clc
sahf
pop
aaa
cwtl
stos
insb
adc
jo
int
sbb
or
or
leave
jmp
jg
pop
mov
jmp
jl
lret
mov
nop
aam
sbbb
lcall
stos
jmp
fisttpll
push
lock
pop
lcall
push
fsubrp
cld
xor
or
fisubrs
repz
sub
inc
xlat
mov
jmp
popa
out
dec
mov
dec
imul
jmp
inc
aaa
or
mov
or
sub
rorl
in
loope
inc
xchg
inc
dec
lock
movsb
sarl
pushf
and
sti
ljmp
fwait
jp
int
mov
or
mul
sahf
xchg
xchg
pushf
sub
in
aas
xor
xchg
addl
mov
ljmp
mov
pop
popl
fnstenv
iret
jnp
mov
or
frstor
xchg
push
jae
mov
call
andl
sbb
pop
ss
cmp
imul
cmp
fistps
adc
mov
les
in
push
xchg
mov
pop
inc
repnz
jecxz
mov
add
fldenv
sarb
stos
lret
out
cmc
mov
sub
insl
pop
icebp
sahf
push
pop
ret
add
imul
movsl
mov
jle
aaa
pop
lret
jp
fsubl
mov
fdivrl
mov
repz
inc
sbb
or
insl
ss
xchg
out
dec
sub
sub
sub
and
xor
mov
test
lret
rep
push
mov
dec
pop
mov
mov
adc
xchg
jnp
jg
sahf
sbb
inc
jo
lock
xchg
pop
xor
xor
mov
rcrl
pop
xchg
mov
jecxz
pop
fdivr
add
cli
push
rcr
push
sti
xor
sub
inc
icebp
sub
xor
adc
push
jmp
jbe
dec
iret
std
or
cmp
push
sub
push
xchg
jne
and
or
enter
pushf
pushf
add
push
sahf
inc
loop
in
addr16
cwtl
pop
xchg
movsb
jne
pop
xor
dec
imul
gs
sbb
ret
out
dec
in
push
shlb
xchg
in
fidivs
lods
mov
push
std
push
arpl
or
dec
sti
inc
push
sub
push
fidivs
dec
pop
vaddpd
pop
and
adc
stos
adc
inc
mov
xor
aam
pop
sahf
and
pop
mov
jbe
cli
lret
mov
mov
sbb
mov
push
clc
cmp
mov
xchg
cmp
rol
sub
cmp
jge
pop
add
push
jno
cmpsb
and
jbe
jnp
and
jecxz
lock
and
mov
mov
ret
add
pop
ss
imul
mov
test
mov
imul
add
add
daa
cwtl
arpl
xchg
shrb
jg
sbb
inc
testb
sub
adc
repnz
add
je
xchg
or
xor
add
push
jle
dec
das
fdiv
mov
fbstp
out
aas
push
test
adc
popf
or
xchg
jle
out
fadd
sbb
push
xchg
xchg
mov
and
add
mov
add
dec
mov
pop
outsb
push
pop
rcl
mov
out
mov
mov
cmpsl
mov
xor
jne
push
jns
add
sbb
cli
icebp
lods
pop
xlat
xchg
cmp
mov
xlat
push
int3
rolb
roll
push
popf
into
xchg
rcl
xchg
out
imul
fcomip
repnz
fwait
cmp
pop
xlat
flds
fcmove
push
fidivs
into
adc
mov
arpl
leave
sub
fildl
sti
xchg
cmp
mov
sbb
andb
popa
inc
mull
push
fbstp
xor
mov
jnp
cwtl
mov
adc
jmp
pop
xabort
imul
pushf
dec
loop
outsb
xor
in
jbe
cmp
mov
dec
add
or
jno
in
jmp
push
out
out
test
sub
dec
scas
testb
enter
jp
add
sub
jae
fs
mov
fistps
dec
pop
lods
dec
push
sbb
aad
mov
push
mov
sbb
out
add
lcall
and
adc
push
sahf
inc
mov
in
out
fnstenv
sbb
repz
or
xchg
mov
notl
adc
xchg
ja
push
test
aas
mov
fidivl
test
or
clc
and
shlb
push
jmp
out
mov
lahf
xor
notl
mov
ret
int
bound
loopne
pop
add
add
lahf
test
imul
rolb
je
inc
fmul
cltd
push
ror
arpl
gs
inc
fstpl
cmp
shlb
cmp
data16
scas
mov
lock
xor
sbb
sub
std
cmp
jnp
mov
inc
add
stc
inc
cli
mov
popf
pop
out
into
roll
sbb
cs
loop
xor
mov
faddl
pop
dec
das
mov
je
pop
mov
xchg
popa
mov
sbb
cmp
sbbb
pop
xor
lsl
push
repz
xchg
popf
ficomps
sub
inc
leave
enter
add
mov
mov
push
lea
mov
dec
sbb
jp
in
adcl
or
jns
sti
xchg
ret
cmpsb
push
mov
cmc
or
bound
outsb
ret
adc
add
outsl
jns
addr16
mov
push
ret
loope
mov
mov
xchg
sbb
mov
hlt
mov
dec
xlat
in
or
mov
sbb
ds
xor
add
xor
mov
out
sti
mov
dec
xor
ljmp
imul
mov
fidivl
mov
movl
arpl
lods
ljmp
pushf
xor
inc
mov
fdivl
fidivl
decl
arpl
scas
iret
sti
pop
into
iret
ret
pop
jbe
mov
xchg
pop
push
mov
cmpsl
loop
cmp
push
fs
xlat
mov
push
jge
dec
movsb
data16
repnz
mov
testl
mov
or
shr
dec
pop
adc
test
jle
mov
push
pop
insl
lret
push
lea
rorb
mov
push
imul
xchg
xchg
ds
mov
pop
mov
movsl
arpl
shl
xlat
insb
idivl
sub
push
dec
loope
jno
inc
sub
cli
mov
aam
sbb
dec
add
in
inc
cmp
popf
or
data16
pop
fiaddl
mov
xchg
xor
in
add
xchg
in
das
dec
jo
push
popf
mov
jmp
mov
dec
adcb
aad
rol
mov
test
xor
popa
je
adcb
jno
pop
in
icebp
sbb
pushf
pop
push
cld
mov
rorb
and
xchg
or
xor
mov
adc
call
rcrb
addl
leave
lock
jecxz
test
js
in
ss
nop
xchg
cs
mov
sub
xlat
mov
pop
inc
inc
lret
pushf
lea
inc
and
dec
orb
xlat
jp
sub
jge
les
subl
imul
mov
xchg
push
inc
cmc
repz
outsb
lahf
enter
jg
push
sub
pop
pop
xor
pop
imul
mov
inc
shlb
lea
sub
std
in
dec
adc
sbb
stc
pop
jbe
ja
mov
fisubrs
into
addr16
sub
out
add
icebp
push
xor
mov
ret
sub
cmp
fbld
stos
inc
rolb
push
sub
js
popf
cltd
inc
mov
cmp
push
inc
mov
subl
mov
sub
imul
dec
inc
movsb
dec
pop
push
push
repnz
xchg
mov
xchg
adc
leave
push
cs
mov
lods
dec
jl
pop
dec
lods
xchg
jp
std
xchg
imul
sahf
nop
stos
adc
repz
jmp
adcl
cmp
test
mov
jle
movsb
cmp
xor
ds
call
push
lods
vaddps
rcrb
jle
rcrl
pop
iret
shrl
add
es
fwait
inc
sub
pop
cmp
ret
out
icebp
adc
xchg
test
push
adc
sbb
rcll
add
out
cmpsb
std
sbb
insb
inc
repnz
sti
sbb
mov
in
rclb
jnp
lods
mov
scas
inc
ficompl
int
jnp
repz
popf
mov
into
pop
inc
sbb
pop
xor
call
test
je
sub
clc
sbb
adc
leave
and
clc
bound
dec
fisubrs
sub
test
mov
frstor
xchg
out
add
dec
inc
fstps
adc
repnz
mov
push
mov
inc
dec
adcb
cmpsl
dec
mov
mov
aam
cltd
xor
ds
xor
xchg
ret
mov
addr16
and
lods
je
lock
pop
jmp
mov
fistl
dec
or
addr16
call
adc
sub
orl
or
lret
sub
scas
xchg
insb
cmp
add
sbb
mov
jge
fistps
inc
jecxz
repnz
jo
xchg
inc
and
testl
andb
cltd
lock
inc
and
fmul
das
lahf
push
cmc
add
dec
jecxz
movsb
aas
lret
push
push
mov
imul
adc
lods
cmp
icebp
inc
fnstcw
aad
scas
sbb
xor
dec
aas
bound
sbb
cmp
stc
call
outsb
pop
pop
test
xchg
test
mov
push
jmp
or
fstpl
mov
sub
inc
das
inc
jne
movsl
xor
aas
std
cmc
lcall
leave
mov
int3
fbld
mov
rcr
adc
cmpsl
push
mov
mov
repnz
in
loope
sbb
adc
xor
scas
jp
mov
sbbb
push
push
in
or
push
idivb
xchg
fsub
ss
mov
push
popf
cwtl
je
adc
leave
js
mov
dec
xchg
jl
push
push
lea
cli
mov
or
iret
mov
add
ljmp
imul
mov
cltd
mov
inc
cltd
and
and
dec
adc
loop
cs
cmp
pop
or
int3
cmp
mov
decl
fs
add
adc
nop
addr16
repnz
mov
add
imul
xchg
mov
and
callw
ret
sbb
mov
mov
hlt
es
std
pop
hlt
xchg
jnp
sar
and
xchg
loopne
sub
dec
adc
push
jns
or
and
mov
dec
dec
dec
fistpll
je
jg
lahf
mov
cmp
popf
repnz
iret
out
fimull
fstl
into
ret
pop
lods
call
test
lret
dec
add
fdivrs
popa
test
enter
sbb
pop
pushf
push
aas
add
ss
sti
fisubs
or
pop
xchg
seta
dec
ds
and
dec
dec
dec
add
or
test
enter
out
mulb
mov
into
stos
mov
add
xor
sbb
pop
es
cmpsl
sub
popa
movsb
cmp
loop
dec
add
mov
lret
ret
jne
popa
or
xchg
ret
insl
or
dec
es
push
dec
movsb
cmp
outsl
add
gs
orb
push
inc
mov
xlat
movsl
cmp
xchg
cmp
mov
pop
repz
or
cmp
daa
xor
in
sbb
jb
ja
inc
dec
add
fsubrl
cmp
xchg
pop
popf
inc
jg
out
int3
sub
push
dec
data16
addl
fwait
jbe
testl
lret
lea
inc
dec
adc
fbstp
jge
jo
jb
shrb
notl
mov
push
adc
or
or
nop
aam
dec
cmpsl
popf
pop
stos
push
cmp
loop
icebp
stos
inc
lock
fs
stc
imul
mov
pop
adc
fisubs
cmc
fcom
rcrb
push
dec
les
mov
scas
xchg
pop
adc
cmp
aad
icebp
loopne
adc
enter
loopne
sqrtps
gs
lahf
popa
test
and
dec
lcall
sbb
add
rcl
out
gs
testl
or
stos
push
xlat
aas
sbb
loopne
xor
gs
les
and
popf
cmp
inc
or
xor
sbb
jns
xchg
out
mov
das
push
out
add
test
dec
jbe
mov
mov
clc
in
sbb
xor
pop
push
dec
jecxz
shlb
mov
shrb
sahf
cmpsb
xor
cmp
fwait
adc
ds
andl
movsb
mov
sbb
lahf
pusha
pop
out
stos
popa
cmp
sub
push
out
mov
data16
lret
xchg
add
std
fwait
pop
jo
sbb
dec
mov
lods
adc
lods
cmp
cmpsl
mov
mov
lret
mov
push
xor
add
movsl
mov
arpl
clc
xchg
dec
mov
imul
jnp
xchg
sahf
push
or
cwtl
idivb
sbb
cmpsb
repz
sub
push
movsl
cld
xchg
add
jo
cmp
dec
hlt
movsb
in
jno
aad
mov
stc
add
std
push
fsubrs
mov
addr16
leave
jns
out
popf
push
outsl
orl
cmp
xor
out
pop
mov
dec
pop
in
enter
adc
push
dec
cmc
cmpsb
imul
je
pop
out
jno
in
and
fldl
sarl
inc
and
dec
add
or
fimuls
out
inc
inc
stc
adc
cli
push
sbb
clc
push
or
jp
xchg
cmp
jno
cmp
mov
jo
loop
insb
xchg
xchg
repnz
lds
mov
and
sti
addr16
mov
push
fsubrs
subb
xor
mov
fcomps
in
dec
popa
cmp
mov
dec
adc
cltd
inc
rorl
hlt
push
pop
outsb
data16
imul
sbb
push
in
mov
xlat
jo
cs
rcl
fisttpl
movsb
shrl
out
popa
xchg
or
ret
sub
adc
aaa
add
xor
mov
data16
dec
pop
test
aaa
into
out
stc
loope
int3
out
push
lea
dec
xchg
push
dec
cmpsb
and
cmp
push
cld
mov
and
jbe
xchg
adc
sbbb
pop
mov
jbe
in
testl
sub
or
bswap
es
int
sub
xchg
or
nop
sub
movlps
push
mov
gs
xchg
jg
insb
fcomi
mov
push
test
add
sub
testb
addr16
hlt
jae
or
movl
or
mov
adc
movsl
pop
xor
mov
sahf
jno
std
xor
ljmp
frstor
push
cmp
push
in
mov
addr16
add
inc
ficomps
nop
add
inc
aad
inc
cmp
jbe
js
int3
stos
addr16
mov
outsb
adc
mov
sbb
jge,pn
movsb
aaa
and
jp
xor
mov
jmp
and
orb
shrb
add
mov
shll
cmp
fildll
adc
xchg
push
je
dec
mov
cmp
cmpsl
lock
scas
enter
jb
sub
xchg
mov
test
cmpsb
cmp
fdivrs
iret
insb
adc
dec
movsl
mov
adc
jns
sarb
fsub
nop
cmpl
cmc
or
shll
fimuls
sub
fsubrs
int
or
mov
push
sub
dec
jmp
rclb
inc
negl
mov
pop
xor
std
popf
stc
xor
sbb
fbstp
notl
xor
mov
dec
push
mov
ds
dec
negb
fadds
mov
iret
jecxz
iret
pop
insl
scas
aaa
enter
cmp
icebp
movsl
into
scas
insl
sub
pop
push
scas
jg
ret
dec
jge
ss
nop
fmul
aad
lret
je
sub
and
rclb
rcrb
jno
add
jnp
inc
xor
pushf
iret
lock
pushf
mov
push
and
fisubrs
xchg
lahf
add
jae
push
mov
inc
mov
pop
leave
push
sbb
test
or
stos
pop
in
pop
inc
fimuls
mov
pop
repnz
dec
mov
push
xor
in
and
shrl
cld
mov
push
cmpsb
mov
in
clc
add
lret
cmp
in
mov
adc
pop
add
jb
adcb
fldenv
cmc
mov
mov
cmp
push
xor
pop
ficoms
pop
hlt
inc
adc
add
xor
movsb
mov
bound
clc
es
icebp
jp
push
mov
adc
rcl
fld
cwtl
dec
scas
mov
pop
dec
and
cmc
lret
pop
mov
dec
sub
xor
cltd
pop
fmull
sub
adc
push
or
fs
out
xor
inc
cwtl
and
ljmp
sbb
imul
mov
push
xor
sbb
fabs
psubsb
cmp
pop
push
pop
pop
repz
push
cltd
adc
and
cli
push
jp
push
inc
xor
mov
shl
xchg
bound
push
fnstenv
mov
push
cwtl
mov
popf
stc
fmulp
pop
sub
adc
cld
jge,pt
repz
and
add
add
pop
mov
test
mov
xor
clc
int
pop
pop
scas
aad
lods
pop
ss
jle
or
pop
daa
inc
xchg
mov
jbe
cmp
stos
push
add
movsb
lods
aas
roll
ja
xchg
mov
add
jnp
push
jns
mov
adc
ja
pop
ss
push
inc
andl
test
out
add
pcmpgtw
jae
and
fildll
pop
js
sub
aas
push
sahf
imul
pop
inc
xchg
insb
inc
inc
stos
mov
fwait
not
out
test
push
lods
sahf
sub
dec
lret
ficompl
outsl
nop
and
es
out
pop
or
add
jae
mov
es
out
orl
jns
add
nop
ds
push
pushf
pusha
filds
jmp
int
popf
outsl
pop
out
inc
pop
nop
testb
sbb
cmp
fiadds
shlb
and
dec
loope
mov
push
mov
xlat
dec
fs
inc
cltd
add
fs
jne
into
xchg
push
shl
xor
sti
mov
sub
cmpsb
jnp
xchg
loopne
or
add
inc
repnz
and
add
jne
popa
mov
scas
dec
inc
fdivrs
int
xorl
mov
loop
shll
inc
fidivs
adc
push
mov
out
negb
shr
push
insl
add
clc
nop
cwtl
loopne
pop
scas
mov
movsb
loope
mov
sub
ret
push
mov
sub
inc
mov
jb
mov
hlt
sbb
fcoml
cmp
jg
push
sbb
mov
push
mov
or
cmp
shl
cs
into
xchg
mov
pop
popf
sub
push
shlb
add
mov
shrl
shlb
or
and
or
fidivrl
push
dec
movsl
pop
pop
dec
adc
idivb
push
outsl
es
jno
daa
cmp
cli
sbb
aas
jmp
xor
jl
adc
xor
jle
or
jne
ss
lret
and
aam
mov
pop
out
lods
ljmp
jecxz
xchg
mov
iret
adc
je
lret
adc
pop
pusha
orl
push
cmpsl
out
sub
aaa
mov
pop
lock
cld
in
mov
xchg
jae
adcl
scas
call
jecxz
xchg
test
enter
dec
ljmp
movsb
ret
jp
or
push
test
fs
faddp
inc
add
orl
dec
cmpsb
inc
mov
loopne
in
lods
push
icebp
jmp
pop
adc
movsl
js
jg
jg
data16
mov
mov
ret
mov
cltd
lock
inc
pop
aad
fisttpl
into
and
mov
jecxz
inc
push
dec
std
inc
fstpl
cmpsl
inc
xchg
cld
roll
cmp
xor
out
jo
sti
xchg
dec
leave
xchg
stos
aas
mov
fs
jp
movsl
pusha
addr16
movl
das
mov
and
dec
pop
sub
jl
mov
jl
inc
cwtl
das
icebp
add
sbb
jle
call
sbb
pop
loop
mov
clc
gs
movsl
mov
pop
jg
fstl
inc
fadds
icebp
pusha
jb
sbb
xchg
and
sbb
rorb
xchg
jno
jecxz
mov
cmpsb
jnp
xchg
jge
and
or
testl
ret
cmp
shlb
xchg
mov
int
scas
inc
dec
popa
js
stos
mov
add
enter
mov
dec
stos
push
pop
movsb
ret
or
dec
mov
jnp
fwait
xor
out
xor
mov
sbb
stos
mov
das
ljmp
int
mov
jle
pop
lods
rcl
pop
sbb
les
pop
pop
inc
loope
cmp
fcmovbe
popl
xchg
add
or
gs
cwtl
mov
xor
lret
adc
iret
jmp
mov
daa
sarb
xor
out
loop
pop
dec
lret
int3
mov
fildll
mov
pop
add
mov
lds
inc
mull
sub
fistps
fadds
cmpsl
pop
not
sbb
xor
subl
repz
mov
adcb
add
js
cs
cmc
sub
dec
cmp
fisubrl
mov
shlb
xlat
pop
cmpsb
hlt
shlb
jg
mov
je
cwtl
mov
out
xor
pop
lahf
jb
popa
std
fnsave
insl
add
push
mov
loope
outsb
add
addr16
dec
push
xchg
jp
ret
pop
outsb
lds
add
add
sbbb
out
mov
out
aas
add
mov
xchg
and
stc
js
xlat
xchg
adc
mov
jb
daa
xlat
ret
dec
insb
and
insb
ds
mov
xor
pop
dec
iret
sub
or
iret
fisttpl
sarl
pop
cltd
jno
push
sub
fdivs
xor
dec
adc
fsts
cmp
xor
and
in
lcall
in
adc
push
xchg
push
dec
hlt
pop
hlt
bound
stos
push
xchg
inc
fldl
mov
gs
fsubr
xchg
fisubrl
jns
mov
jle
or
cmpsl
popf
sbb
int3
les
stos
xlat
pop
std
test
xor
repz
arpl
leave
jmp
repz
mov
pop
dec
sub
fidivl
dec
test
lcall
xchg
mov
and
out
adc
mov
xor
pop
xlat
cmpsl
sbb
rolb
loop
out
inc
pop
xor
ss
dec
gs
scas
lea
jae
ja
push
sub
loop
aam
stc
nop
outsb
sti
xor
fstps
add
int
ljmp
dec
shll
mov
or
sbb
lock
test
inc
ja
fistpl
icebp
adc
pop
mov
fwait
jo
loope
mov
int
sub
je
pushf
inc
sub
xchg
sbb
into
inc
data16
jno
jns
sbb
movsb
mov
pop
and
test
lret
xor
or
inc
inc
lods
push
or
xlat
lea
mov
clc
jmp
jecxz
ds
lret
mov
xor
sub
call
outsl
testl
pop
lret
jp
mov
dec
lahf
mov
cld
fsubrs
addl
xor
es
in
xchg
subb
push
xor
es
mov
cld
rorb
jno
popf
lcall
mov
lods
xor
inc
imul
and
in
gs
cltd
out
les
rdmsr
add
pop
loop
int
loope
cltd
inc
dec
jecxz
mov
cmp
jne
cli
fs
mov
push
dec
xor
call
cli
sub
pop
cmp
push
out
mov
lock
xor
arpl
sub
ret
or
xchg
rcr
leave
cmpsl
les
sub
rol
popf
sbb
scas
mov
pop
xchg
xor
pushf
scas
or
repz
in
es
je
int
iret
xor
sub
mov
and
adc
gs
mov
in
mov
pusha
ret
push
stos
inc
clc
fwait
and
fsts
jl
lds
push
bound
mov
es
sub
xchg
sub
inc
mov
shlb
int3
pushf
pop
cs
mov
jo
in
sub
test
or
add
add
dec
sbb
or
mov
fnsetpm(287
dec
xorb
and
cli
jmp
test
add
adc
jb
pushf
dec
ret
jp
dec
dec
sahf
fwait
and
mov
pop
jle
shlb
jns
or
xchg
adc
or
ja
mov
aam
jg
jnp
sub
mov
sbb
ds
lods
mov
pop
pmaddwd
adc
lods
gs
pop
xor
add
inc
mov
mov
call
pop
xchg
mov
sbb
repz
ds
xchg
mov
lds
xchg
incb
jb
mov
or
das
xorb
inc
scas
inc
es
shlb
inc
int
loope
mov
in
mov
jb
jecxz
mov
inc
out
sub
inc
les
push
stos
es
add
and
sarb
pop
popa
mov
rcrb
push
cmp
nop
enter
es
push
je
and
out
cltd
xchg
dec
mov
sbb
xchg
sub
fadd
mov
call
std
xchg
sbb
lods
loopne
and
fs
push
or
xchg
push
das
sub
test
lods
dec
mov
or
add
sub
mov
rorb
mov
and
in
jl
mov
pop
sub
shrl
outsl
adc
pop
pusha
popw
nop
int3
test
imulb
pop
xchg
xor
jae
ljmp
je
add
fsts
jb
or
fdivrl
fidivrl
push
jno
std
pop
and
adc
sub
jno
lds
pop
inc
imul
fbld
loope
repz
push
jb
adc
xchg
inc
adc
lds
ficoml
test
push
sbb
dec
loope
imul
mov
idivl
and
or
dec
and
and
cmp
mov
push
pop
cmp
sub
ret
test
cmp
inc
imul
adc
js
or
add
imul
sbb
inc
jp
push
push
cs
popf
sbb
out
stc
aas
scas
sbb
and
ret
out
test
hlt
sub
add
cmpsl
fmulp
push
fsubrl
xlat
mov
pop
in
sub
mov
outsb
aad
fwait
xorl
insb
sub
cmpsl
pop
push
and
iret
vpunpcklwd
dec
cld
sbb
rorb
iret
jb
fistpl
out
xorb
shlb
outsb
dec
dec
cmpsb
leave
bndstx
movsb
mov
bound
pop
mov
pop
out
or
sti
mov
movsb
clc
xchg
sub
xor
in
cmp
cmpl
adc
add
pop
out
ljmp
cmp
aaa
push
arpl
lock
pop
mov
inc
stos
dec
cmpsl
cmp
mov
scas
and
ja
pop
cmpsl
dec
inc
and
pusha
ds
stos
aas
cmpl
add
jnp
inc
jecxz
icebp
add
or
outsl
sub
movsl
jnp
insl
sub
dec
pop
adc
mov
and
scas
cmc
push
dec
int3
or
aaa
jl
xor
xor
mov
xchg
out
dec
cmp
jns
enter
out
add
cltd
cmp
shl
daa
dec
push
aaa
mulb
out
pusha
cmp
shlb
out
push
dec
repz
data16
clc
or
fidivrl
inc
xchg
in
dec
in
or
scas
rcrb
xlat
repz
or
xchg
nop
mov
sub
cwtl
jae
lcall
jae
jecxz
pop
jns
pop
mov
test
push
lcall
cwtl
xchg
pop
adc
add
mov
movsl
stos
sub
jmp
push
dec
add
in
push
out
imul
cmp
sub
pop
mov
stos
push
rol
jg
js
popf
push
icebp
adc
push
cmp
out
test
xor
addr16
lods
jno
jae
sti
mov
xchg
gs
push
mov
jp
xor
addb
fdivl
cmpsb
daa
or
sub
sub
aaa
and
push
pop
cmp
xchg
jae
inc
xor
out
jmp
jecxz
imul
ffree
lea
sbb
xor
loop
push
out
pushf
mov
push
pop
mov
sarl
mov
cs
push
fadds
or
fsubs
les
pop
pop
jno
roll
dec
fisttps
enter
push
pop
sub
sbb
data16
pop
push
mov
adcb
int3
sub
sbb
jne
jne
sbb
sbb
or
insb
fwait
jmp
fwait
pop
and
loope
outsb
jl
add
adc
mov
pushf
loop
jecxz
jge
mov
add
push
jb
in
out
mov
lods
inc
das
mov
xor
sub
adc
pushl
mov
sub
mov
jae
inc
fs
out
mov
sbb
and
lods
inc
int
mov
jnp
adc
out
cmpl
int3
test
scas
xor
lret
jb
dec
mov
fmull
mulb
je
or
sahf
gs
rclb
lods
fnstcw
cmpsl
arpl
and
adc
xor
sub
mov
pop
fsubl
inc
xor
inc
nop
daa
jns
push
cmp
scas
or
pop
push
fldl2t
xor
mov
xor
push
mov
jne
add
dec
cltd
jae
pop
std
fstpt
loopne
in
xchg
or
inc
arpl
and
xor
insl
ds
xchg
dec
cmpsb
ss
insb
sbb
fldt
jo
cmp
shll
add
test
test
fnsave
mov
hlt
sbb
xor
push
cmpsb
cmp
mov
vmovupd
mov
out
push
mov
fadds
mov
stc
iret
aaa
in
outsb
in
adc
lods
jl
imul
sbb
xchg
sub
loop
popa
fbstp
xchg
stos
push
cmp
cltd
pop
popf
jl
leave
mov
scas
icebp
push
leave
pusha
dec
pop
xchg
fdivl
push
pop
lahf
loopne
adc
imul
inc
lret
mov
fisubrs
in
and
mov
repnz
shrb
test
cmc
ljmp
sbb
fprem1
adc
loop
sbb
push
pop
inc
push
test
das
mov
test
xchg
jnp
jle
loop
fs
into
jl
jge
xchg
clc
in
fmul
fists
adc
loopne
test
cmp
movsd
pop
jg
pop
call
std
inc
or
push
cmp
fcoml
mov
pop
insb
xor
adc
je
pop
lds
mov
push
lods
pusha
lcall
mov
sbb
shl
shl
xor
addl
mov
jl
ljmp
xlat
cmp
scas
jno
xor
push
cwtl
xchg
cmp
dec
cmp
mov
sub
inc
mov
lahf
xor
sub
rorb
mov
mov
and
rorl
or
mov
or
mov
shlb
in
dec
insb
mov
mov
popl
jb
push
aad
mov
xor
mov
leave
sbb
mov
cmp
fdivrl
adc
push
pop
sbb
testl
jae
xor
in
pushf
mov
xchg
les
aas
lret
rorl
cmp
rol
mov
or
xor
cmpsl
push
mov
xchg
jmp
fidivrl
jnp
stos
sbb
push
push
sbb
sbb
lahf
loopne
mov
scas
mov
rol
je
xchg
cmpsb
ljmp
inc
stc
mov
lods
push
jmp
fyl2xp1
adc
xor
fdivl
idivl
dec
jno
mov
dec
pop
loope
repnz
dec
mov
push
out
aas
lods
aam
lea
ljmp
jb
je
adc
or
cs
ss
repnz
sbb
insb
shlb
dec
sub
dec
mov
bound
scas
inc
jmp
push
orb
jno
lock
sbb
fcmovnu
jne
sub
jg
out
cld
inc
and
and
mov
inc
icebp
add
js
jbe
test
int
push
add
mov
sbb
xor
mov
pop
pop
loope
es
pop
aas
pop
lods
inc
dec
inc
in
xorl
cmp
or
mov
sub
push
or
test
in
mov
sub
lock
mov
lea
movsl
mov
push
inc
pop
push
jge
push
in
push
jmp
arpl
adc
icebp
xor
loopne
movsl
inc
ficoms
stos
sub
loopne
in
dec
cli
imul
push
jle
inc
cmp
movsb
ljmp
add
mov
mov
mov
ret
jb
mov
adc
test
inc
nop
cltd
cmp
adc
std
sarb
fistl
sub
scas
dec
dec
cmp
jle
insl
xchg
cs
sbb
cwtl
and
movsb
jg
mov
mov
xor
xor
push
lods
jnp
push
pop
cmpsl
sub
or
lret
xor
jmp
das
sbb
std
scas
inc
das
jno
outsl
fisttps
pop
xor
test
xchg
repnz
stos
add
add
aam
cwtl
fistl
lret
call
cmp
xlat
pop
sub
shll
dec
pop
aad
sahf
test
insb
movsl
outsb
or
mov
int
imul
out
cmpb
or
push
lret
lock
into
gs
jns
stos
lock
in
push
sub
loop
stc
adc
out
xor
out
cwtl
xchg
sub
jmp
das
cmp
xlat
xor
das
cmpsb
jo
sti
stos
pop
mov
ja
hlt
ret
mov
xchg
ljmp
inc
inc
xchg
fdivr
nop
pop
lock
ss
loopne
xchg
popf
pop
push
in
xorb
or
pop
mov
pop
les
cmp
outsl
loope
push
jp
pop
mov
fcoml
lea
mov
fnstenv
add
xchg
jge
test
xchg
xorb
inc
stos
add
dec
mov
and
adc
cmp
cmp
cs
mov
mov
test
mov
stos
pop
xchg
push
jns
jnp
dec
lods
rorl
sub
cltd
jo
xor
in
scas
idivl
pop
dec
out
xchg
fimull
cltd
addr16
fmull
gs
mov
jnp
push
cmpsl
outsb
nop
daa
mov
xor
xchg
fcomps
xchg
xlat
std
jecxz
clc
add
movsl
lods
cltd
fcomp
sbbl
in
aam
mov
mov
mov
cmpsb
ficoml
pushl
enter
hlt
movsb
dec
fwait
in
hlt
les
sahf
sbb
mov
xchg
xchg
gs
pop
clc
sub
xor
dec
add
test
ds
mov
mov
cmp
repz
mov
mulb
or
dec
add
inc
mov
dec
push
add
hlt
mov
mov
test
xchg
imul
jno
sbb
mov
mull
inc
mov
xor
cmpsl
in
stos
mov
push
push
push
pop
inc
out
negb
sbb
fnstsw
imul
test
sbb
nop
xchg
fiaddl
xchg
mov
movsb
out
mov
lods
sub
or
std
sahf
xor
mov
mov
inc
idivb
jl
mov
add
mov
test
or
push
pusha
xor
jb
or
pop
ja
ret
sub
sahf
int3
rorl
outsl
movsb
ljmp
add
jae
les
push
or
pop
addr16
insb
push
push
outsl
cltd
fsubs
hlt
inc
push
out
icebp
sub
push
icebp
mulb
fdivr
out
sbb
mov
jo
xor
out
mov
pushf
sbb
mov
adc
and
adc
mov
or
jge
shll
xchg
or
push
jne
fbstp
jo
inc
mov
push
xor
pop
iret
cmp
fistps
mov
leave
out
push
fdivl
inc
mov
jmp
mov
dec
fisubrs
movsl
repnz
pusha
lret
xchg
sbb
les
and
dec
or
sub
je
sub
idivb
outsb
xlat
push
cmc
lcall
sbb
repnz
lds
xchg
loopne
cmp
mov
push
jge
cmpsb
std
add
jg
fs
movsb
in
mov
pop
cs
lret
nop
jns
sbb
cltd
mov
inc
mov
jl
cli
push
push
lds
mov
push
dec
rep
cmpl
std
mov
dec
and
or
lret
dec
out
add
jne
rep
add
add
xor
ret
xchg
cmp
fsubrp
mov
or
xor
inc
lret
pop
pop
sub
cld
mov
dec
pop
jb
and
call
pop
ds
sub
imul
ss
repz
call
xor
std
or
xchg
and
sbb
mov
cmp
pop
movsb
xchg
clc
xor
sub
mov
mov
push
into
jg
adc
gs
in
pop
in
mov
incb
sbb
push
sbbl
mov
push
imul
jle
rcll
push
lea
mov
jge
test
pop
addl
lcall
mov
sub
adc
mov
sub
mov
mov
add
and
pop
fcmovb
xchg
xchg
cmp
mov
pop
insb
fcomi
dec
stos
or
cld
pop
jnp
add
data16
fdivrs
jge
sahf
push
icebp
nop
cmpsb
jecxz
xchg
clc
add
lret
jecxz
push
mulb
xchg
xchg
jecxz
mov
out
stos
inc
mov
fnsave
mov
mov
arpl
iret
mov
mov
mov
jp
dec
mov
push
dec
push
insl
imulb
adc
insl
sbb
pushf
es
xchg
movsl
leave
aas
in
xchg
arpl
mov
iret
mov
sub
repz
shl
sub
cmp
push
add
clc
testl
cld
mov
test
out
xchg
xchg
mov
les
mov
repz
jg
pop
stc
shrl
inc
xor
jno
mov
mov
out
movsl
add
js
pusha
adcb
add
xchg
gs
xchg
xchg
rorb
clc
mov
popf
add
add
stos
inc
adc
leave
push
dec
jl
xor
add
pushf
and
loop
in
xlat
fcoms
fidivrs
inc
sub
testb
notl
sub
sub
lock
rcrb
lds
fnstenv
and
mov
das
scas
xor
pushf
mov
cmpsb
push
push
fidivrl
cmpsb
pop
ror
xor
pushf
imul
jne
xchg
mov
mov
or
sub
push
aad
jnp
loopne
mull
clc
scas
cs
push
lahf
in
push
jns
lret
insl
pop
and
imul
or
subl
inc
sbb
in
stos
shufps
scas
dec
jae
sbb
daa
cmp
or
xor
ja
fs
push
and
nop
xor
dec
lods
sbb
sbb
jae
in
mov
jmp
filds
xchg
adc
sahf
jge
test
adc
lds
dec
inc
les
loopew
jne
mov
lods
mov
into
adc
xor
or
das
or
das
ret
pop
sahf
clc
push
pop
cmc
lea
stos
inc
popf
adc
int3
out
inc
sahf
in
xor
pop
lods
ljmp
cld
ror
inc
inc
mov
push
add
cs
imul
push
and
into
dec
popa
repz
insb
adc
jmp
outsl
cs
push
rorb
add
sub
pop
ljmp
push
in
cmpsb
movsl
insb
jle
jae
stc
lahf
push
or
rcll
mov
sbb
mov
leave
pop
aaa
jl
cli
or
mov
mov
cmpsb
lea
sub
stc
nop
add
jne
jmp
gs
lret
jb
mov
jno
scas
rorl
cmc
in
cmp
test
orl
andl
dec
ret
push
mov
adc
inc
xor
pop
push
add
repz
or
mov
xchg
jecxz
mov
in
or
lret
jno
jmp
incl
adc
addb
pop
mov
mov
stc
xchg
dec
in
adc
xorl
das
lcall
mov
frstor
or
scas
jl
fyl2xp1
xchg
loopne
cli
pop
xlat
mov
in
lret
or
adc
sbb
and
push
outsl
test
into
insl
arpl
lcall
aaa
out
in
add
add
xor
jbe
mov
mov
lods
std
or
outsb
sbb
pushf
lds
aas
movsb
fcmove
rcll
mov
sbb
mov
mov
loopne
jo
js
cmp
test
test
test
test
mov
cltd
cmp
iret
xchg
or
push
lock
mov
pushf
das
pop
xor
mov
sub
das
call
xor
pop
push
xor
jp
popf
pop
inc
push
ds
jbe
cmp
push
cmc
cs
cmpb
jb
in
xchg
scas
or
xchg
fisttps
sti
inc
clc
cmpsl
dec
add
nop
sub
mov
adcb
xchg
inc
imull
leave
int
pop
js
xchg
andb
ds
xor
bound
rcrb
xchg
adc
mov
sbbl
in
mov
sbb
mov
xor
jmp
mov
sub
cmp
popa
jmp
mov
push
dec
sbb
popf
mov
fbstp
dec
pop
clc
mov
mov
mov
xor
mov
mov
add
mov
xor
or
clc
ficoml
adc
ficoms
sbb
call
insb
lock
dec
out
sub
shlb
mov
mov
outsb
iret
pop
push
lea
repnz
loop
fwait
adc
adc
repnz
xchg
jg
stos
cmc
dec
cmp
out
pop
in
ljmp
inc
mov
shlb
sbb
subl
push
cmpsb
add
xchg
test
pop
sbb
cmp
mov
adcb
xchg
rep
aaa
pop
sahf
inc
jge
loope
ljmp
in
stc
mov
ucomiss
sbb
adc
pop
xchg
call
sub
ret
dec
xor
scas
gs
and
lea
or
mov
jnp
sarb
rcrl
sbb
mov
lahf
insb
in
cmpsl
shlb
inc
push
loope
sub
stos
aas
clc
or
insl
push
sahf
scas
lea
rorb
jle
push
js
jg
aas
sub
add
xor
lds
push
testb
dec
jae
cmc
adc
inc
push
cmp
addr16
push
sti
cmp
adc
outsl
ret
jecxz
adc
outsb
daa
adc
xor
jb
outsb
lahf
mov
or
fwait
dec
faddl
mov
adc
add
fnsave
jb
jl
sti
stos
and
test
inc
int3
fistpll
pop
mov
ficoms
and
loop
jmp
jno
std
lock
mov
clc
cmp
cwtl
pop
cmp
cmp
jge,pt
xchg
xchg
je
cmpsl
add
addb
scas
into
in
leave
push
xor
outsl
divb
sahf
iret
out
shr
inc
push
inc
cmpsb
push
mov
jae
mov
lea
inc
aaa
outsb
jmp
pushf
fistps
inc
sti
jno
dec
add
outsl
test
jge
aas
push
mov
dec
das
jge
cmpb
mov
lock
notb
add
xor
je
sbbl
push
cmpsl
testb
and
cld
and
stos
jno
pop
mov
push
in
loop
push
mov
jns
jg
push
aam
arpl
and
ja
cmpl
outsl
mov
mov
sub
daa
mov
lods
out
nop
cmc
jb
mov
out
fstpl
xor
insb
and
mov
gs
push
mov
xor
or
je
mov
movsb
adc
add
ss
movsl
sub
es
lods
aas
xchg
lret
mov
dec
lds
out
pop
inc
repz
idiv
push
call
inc
push
popf
push
cltd
lret
inc
or
mov
jns
sarl
mov
jns
jne
orl
or
xchg
push
and
lods
jmp
mov
clc
jb
fcmovnu
mov
push
mov
enter
in
mov
xor
icebp
rcl
cmp
dec
sahf
mov
in
inc
xchg
dec
push
add
mov
movsb
sbb
sbb
mov
out
mov
or
jns
movsl
out
xchg
testb
add
cmpsl
inc
cltd
idivl
lds
jp
aas
pop
rcrl
mov
cmp
mov
daa
mov
cli
xchg
push
mov
mov
fwait
test
sub
cli
sbb
mov
add
test
fildl
and
mov
out
cmp
xor
add
xor
inc
xchg
push
mov
stc
sub
adc
lds
mov
out
xor
ret
nop
stos
mov
push
jp
in
shrl
out
pop
cmc
mov
daa
inc
xchg
data16
imul
pavgb
or
divl
fxtract
push
scas
adc
jns
add
mov
xor
inc
xchg
push
add
icebp
pop
sahf
es
inc
daa
mov
lret
or
cmp
and
repnz
pop
popf
mov
call
fists
jp
sub
out
ficoms
mov
icebp
mov
icebp
dec
jno
or
iret
data16
jo
fistl
jns
or
mov
pop
in
xor
inc
popa
clc
jbe
add
aad
xorl
fidivl
cmp
repnz
dec
mov
gs
hlt
xchg
mov
sbbl
mov
stos
push
shrl
fdivl
mov
push
pop
xor
jbe
stos
enter
adc
test
push
mov
xchg
jmp
clc
jb
lahf
mov
les
jp
jg
mov
and
xchg
into
mov
sub
insl
adc
add
mov
sbb
adcl
mov
fwait
xor
in
fs
add
imul
sar
shl
or
mov
cmpsb
jecxz
repz
pop
in
mov
rcl
mov
lea
push
fiadds
cli
out
xchg
cmp
xor
jo
aaa
mov
pop
cld
push
stos
push
and
cmp
push
push
jmp
xor
mov
orl
sbbl
jle
std
pushf
xor
jb
fidivrs
imul
ficompl
jmp
clc
fwait
dec
aas
shl
jg
loope
loopne
aas
int3
fidivs
ja
jecxz
and
out
aas
dec
and
cmpb
push
mov
xor
push
fsubrs
loopne
negl
cmp
out
sbb
fsubrs
lret
mov
in
sbbl
movsb
sub
inc
popa
clc
or
fs
jl
ret
movsl
fwait
push
in
sbb
dec
iret
xor
dec
add
lret
sub
sub
aaa
call
jo
nop
rorb
iret
add
lret
insb
xchg
roll
sahf
outsb
add
sbb
pop
popf
and
xor
jbe
loopne
hlt
dec
mov
jmp
or
or
lret
push
pop
fidivrl
dec
mov
inc
movsl
inc
mov
test
add
xor
xchg
in
dec
cli
in
push
out
enter
adc
pop
jae
rcrl
adc
movb
push
and
jns
lret
xchg
lret
xchg
movsb
mov
sar
aas
mov
sub
ljmp
mov
xor
shrl
add
rcr
mov
out
or
pop
fcmovnb
mov
xchg
xor
rorb
mov
or
jl
push
scas
push
mov
rep
pop
mov
inc
push
inc
lcall
and
test
aas
adc
mov
cmc
xor
xchg
imul
jnp
daa
repnz
test
cli
sbb
mov
cmp
jl
fldcw
inc
mov
orps
mov
sbbb
mov
out
imul
jnp
and
xor
aam
cmpsl
push
cmc
push
jmp
mov
cmc
mov
jb
cltd
sub
lret
sbb
das
push
mov
sub
push
mov
jbe
xchg
push
test
sub
scas
push
push
cwtl
loop
cli
jmp
dec
add
dec
fldt
lret
int3
hlt
dec
inc
mov
jg
lret
mov
xchg
sub
push
bound
mov
pusha
mov
sbb
fldenv
andl
pop
mov
fsubr
cmp
lret
mov
lret
jmp
mov
xor
and
inc
add
jno
xchg
stos
adcl
fcmove
sbb
sub
lret
jbe
cmpsb
jae
out
pop
test
ret
add
cmpsb
and
outsl
std
data16
popa
iret
out
inc
pand
or
int3
fs
ficoms
add
sub
andl
enter
cmpsb
fldcw
adc
xor
push
in
imul
ja
repnz
les
xor
cmpsb
loopne
insb
jo
mov
es
cli
sub
loope
lods
mov
rcrb
mov
jns
sub
mov
mov
jno
sbb
fucomip
lcall
xchg
mov
fstp
lret
stos
idiv
and
movsb
sbb
dec
out
inc
test
lret
mov
sarb
xchg
fsubrl
or
sbb
jg
mov
and
rclb
mov
xor
js
xchg
and
aam
stos
pushf
scas
xor
leave
xor
in
decb
push
pop
cmp
loopne
cli
and
ret
mov
and
jp
ret
ja
jns
mov
pop
popl
stos
mov
imul
sub
cmp
adc
mov
or
testl
push
fidivl
jbe
mov
ret
mov
push
and
cmpsb
ret
jae
mov
pop
lret
popa
jb
popf
pop
repnz
add
rorb
sbb
aad
pop
pop
loope
divl
mov
fmuls
dec
in
cmp
jp
dec
lcall
sbb
dec
aas
push
jnp
mov
dec
or
leave
cs
sbb
inc
mov
insb
dec
lret
adc
incb
cmpsb
jge
sbb
add
sbb
test
jns
pop
stc
mov
call
cmp
mov
popa
and
sti
inc
popl
xchg
push
ds
xor
scas
jmp
cmc
pop
cwtl
in
arpl
cmpsl
repnz
aad
and
and
push
leave
and
add
sub
repz
sbb
movsl
adc
int
mov
iret
xor
dec
repnz
push
sub
cmp
push
lods
push
or
sub
aad
popf
lods
movsl
pop
inc
pusha
sbb
jbe
push
inc
jno
std
mov
ljmp
cli
test
loop
adc
loop
shll
cmp
lds
adc
pop
push
pusha
xor
adc
lods
inc
fildl
outsb
inc
scas
ljmp
lea
outsb
rcr
fisttpl
sbb
xor
push
xchg
xor
xchg
push
or
sahf
sbb
cmp
insb
xor
xchg
loop
loop
mov
xchg
xchg
fdivs
or
xchg
mov
pop
stc
inc
mov
sbb
cwtl
out
mov
addr16
push
mov
mov
clc
xchg
sub
sub
inc
insl
arpl
pop
adc
inc
jecxz
mov
push
out
push
in
jecxz
inc
shl
dec
mov
lock
lods
bound
pop
sub
pop
sub
pop
in
mov
sbb
add
push
sbb
add
jns
mov
arpl
sub
and
cmpl
lods
enter
cli
jmp
lock
leave
pusha
inc
icebp
jnp
jmp
xchg
xor
mov
mov
and
mov
std
mov
mov
mov
xor
jns
xchg
mov
lret
imul
loopne
ret
push
cli
mov
in
cli
shrl
xchg
lods
push
addl
jb
fisubrs
push
lahf
stc
nop
adc
test
or
and
loopne
movl
mov
mov
mov
jbe
mov
inc
mov
dec
je
or
push
cmp
bound
add
push
sub
out
mov
call
mov
repz
jno
iret
pop
in
jmp
aad
jbe
sarl
aam
mov
adc
xor
es
xchg
xor
out
mov
sub
cmp
mov
popa
in
pusha
push
mov
or
dec
xchg
xor
dec
rolb
jne
popl
imul
dec
addr16
loope
pop
popf
xor
mov
mov
lock
pusha
stc
xchg
sub
imul
cwtl
in
ret
mov
out
mov
cmpl
jbe
or
push
or
loop
daa
jbe
fdivs
dec
enter
xchg
in
jecxz
xchg
xchg
inc
inc
push
fisubl
movsl
icebp
jmp
mov
stos
mov
fidivl
aam
in
push
loop
cmp
loopne
jns
push
mov
cltd
stc
pop
fdivl
lods
lret
xlat
sti
test
test
mov
sub
jp
jmp
or
mov
jmp
cmp
add
shll
add
movsl
sub
fnsave
rorl
scas
fistpl
sub
int3
scas
arpl
mov
inc
stos
inc
jns
cmp
mov
xchg
mov
xchg
xor
ss
mov
in
jae
cli
xchg
xor
inc
add
jae
outsl
mov
lods
call
dec
daa
ljmp
sub
jns
aad
adc
fnsave
add
jnp
adc
jg
ror
dec
std
pop
movsl
std
sbbb
mov
adc
mov
sub
jbe
pusha
push
jo
hlt
iret
sbb
out
fists
jo
or
and
pop
or
es
xor
cs
mov
pop
mov
or
lods
sbb
cwtl
sbb
pop
cmp
inc
inc
dec
jmp
stos
fmul
jo
loopne
repz
sbb
dec
ret
mov
movsl
jl
mov
lods
jle
out
cmpl
sarl
das
gs
adc
test
in
lea
add
cltd
cli
outsb
iret
loopne
jne
xchg
xor
jne
jecxz
push
mov
imul
adc
pop
jle
arpl
iret
mov
add
movsb
dec
iret
or
stos
mov
add
sub
sub
push
cmp
mov
lret
arpl
cmp
dec
mov
mov
subl
mov
pop
push
mov
inc
aaa
call
lret
adc
xchg
xorl
jmp
out
test
inc
lea
xor
xor
xchg
pop
aad
icebp
jp
loope
or
popa
rcrl
lea
in
test
inc
out
imull
sub
fisubs
jecxz
aaa
inc
fdivr
inc
push
pop
inc
ljmp
xor
mov
lahf
push
btr
nop
mov
test
notb
imul
in
pop
mov
xor
setnp
lods
jo
in
mov
idivb
mov
xchg
push
lret
ret
dec
xchg
insl
in
in
inc
pop
es
and
imul
sbb
adc
in
xor
jne
adc
out
adcb
lock
push
mov
pop
and
xchg
mov
sbb
pop
mov
or
divb
jmp
mov
mov
cli
cld
push
sub
adc
and
addb
pop
hlt
in
fidivrs
mov
cli
es
xor
dec
pop
cmp
in
ret
xchg
inc
mov
out
mov
fs
dec
cmpsl
xor
mov
push
lods
jae
mov
ss
lods
mov
or
mov
das
ja
test
jmp
xor
subb
xchg
adc
paddsb
jg
inc
adc
or
popf
cmp
mov
sbb
decb
lods
or
cmp
sbb
lahf
inc
push
dec
push
mov
add
jle
and
in
insl
rol
pop
add
lock
loopne
mov
push
loope
aad
adc
dec
jecxz
cs
cmp
movb
adc
mov
scas
dec
in
push
cltd
sti
pop
aad
mov
in
add
in
dec
fwait
jns
out
xor
gs
cld
xchg
ret
add
out
and
sbb
cld
cmp
out
sbb
ja
inc
test
jmp
fnsave
fiaddl
das
and
mov
insl
out
sbb
dec
and
jmp
jmp
push
mov
cmp
mov
add
stc
jnp
sbb
clc
jae
inc
add
inc
dec
mov
insl
enter
adc
xlat
imul
add
aad
sub
and
in
dec
lods
jo
adc
mov
in
inc
mov
adcl
inc
fs
inc
mov
sbb
shr
jp
cmp
dec
mov
dec
in
cmp
lods
rcrb
mov
scas
jle
push
inc
rcrb
stc
xchg
sub
scas
lods
xorb
test
fwait
pop
adc
std
rcrb
int
mov
cmc
pop
mov
andl
mov
enter
dec
pop
psubsw
aam
test
bound
arpl
or
hlt
rcrb
xor
test
addr16
adc
xor
xchg
ficoms
mov
lcall
sbb
ja
jae
sbb
xor
cmc
mov
dec
getsec
movsl
in
pop
shll
sbbl
mov
dec
call
add
jp
mov
cmp
add
xor
je
jg
fldl
xor
bnd
xchg
in
xchg
pop
repnz
dec
sarb
xchg
sub
popf
jmp
cmpsl
cmp
and
aam
jle
mov
dec
sahf
out
dec
jecxz
jg
repnz
inc
sub
jb
js
in
or
xchg
inc
insb
jle
mov
xchg
out
inc
cmpsl
sub
dec
mov
xchg
pop
jo
repnz
es
xor
stos
jne
jle
rclb
ret
xorl
xlat
push
cmp
iret
es
pop
lods
add
and
addr16
aad
jle
cmp
inc
bound
es
cmpsl
push
sbb
test
cli
repnz
test
lds
rep
subb
adc
enter
inc
add
jmp
push
insl
mov
fcmovnbe
pop
sub
cmpsl
lds
popl
mov
movsl
mov
adc
ss
push
lret
cmpsb
mov
adc
push
insb
push
fcmovnb
fnsave
mov
sbb
push
fildll
mov
push
sub
cld
xchg
and
insb
rclb
lock
add
push
sbb
mov
test
stos
sbb
inc
loop
rcr
repz
pusha
leave
cltd
cli
iret
mov
jle
cmp
stos
pop
fsubrl
int
pop
mov
sub
jmp
add
fdivs
inc
pop
mov
orl
lcall
arpl
test
test
imul
insl
mov
mov
mov
ljmp
inc
pop
push
lods
jle
mov
mov
dec
inc
inc
fidivs
mov
lea
loopne
mov
sbb
pop
push
test
inc
mov
mov
mov
rcll
or
sahf
in
out
adc
and
dec
or
enter
mov
mov
adc
mov
inc
mov
mov
daa
mov
mov
testl
xchg
enter
mov
loope
aam
dec
xchg
aad
and
cli
adc
pop
and
mov
enter
pop
fsts
cmp
fbstp
xchg
out
in
xlat
popf
out
jo
imul
xor
ja
push
out
lret
adc
cmpsb
or
mov
popl
mov
mov
test
fstpt
mov
add
mov
mov
push
call
pop
xlat
sub
mov
mov
test
fidivs
mov
outsl
xor
ss
xchg
push
insl
add
sub
pushf
and
mov
xor
cmp
xchg
ja
and
sbbb
mov
testl
mov
repnz
fstp
adc
test
aam
or
fucomip
dec
sub
mov
cmp
imul
push
mov
mov
rolb
je
inc
lods
push
sub
cld
inc
cmp
sti
jle
xchg
push
jbe
adc
icebp
jl
dec
loope
sahf
rorl
dec
pop
mov
lret
ret
outsl
xchg
cmp
ja
in
sahf
pop
out
adc
push
jg
push
inc
cmpsb
adc
or
lcall
dec
test
mov
xchg
or
jg
scas
mov
sbb
add
push
cmp
fldcw
jb
outsb
mov
test
test
js
pop
push
xor
inc
mov
xor
in
push
jecxz
movb
mov
mov
cmp
sarb
stos
stc
nop
ffree
cmp
enter
ret
sub
scas
pop
into
xchg
adc
mov
roll
add
adc
mov
rolb
pop
inc
jge
jne
pop
cmc
or
jl
nop
nop
cmc
adc
sub
fbstp
mov
fimuls
xor
sub
push
mov
outsl
jns
adc
mov
mov
sarb
ljmp
pop
push
fiaddl
std
and
mov
iret
pop
dec
or
sub
pop
data16
mov
loopne
adc
xor
shrb
add
ss
scas
cli
mov
popa
sub
fcmovb
arpl
cmp
pop
mov
and
int
lret
into
sub
iret
in
in
mov
int
enter
push
mov
and
ud2
mov
outsb
fyl2xp1
js
xchg
mov
lahf
mov
fprem
xlat
fdivl
jnp
addr16
ret
leave
add
pop
jg
mov
xchg
popf
cmp
aas
mov
fmull
or
dec
add
or
pop
hlt
bound
inc
push
inc
dec
inc
movsb
out
jecxz
sti
pop
adc
inc
xchg
bound
fdivl
push
push
jl
add
cmpsb
in
movsl
adc
mov
sbb
dec
lahf
lret
bound
and
jo
arpl
mov
mov
jnp
mov
mov
insl
cmp
sbb
rcll
mov
and
fs
addr16
xchg
jno
ret
ret
shlb
fists
arpl
lcall
dec
inc
das
lods
cld
pop
in
clc
dec
push
push
fsts
inc
and
stc
xchg
xor
adc
inc
xor
pop
arpl
js
mov
mov
cmp
lret
add
lock
and
fldt
adc
sti
pop
stos
mov
xchg
dec
in
xor
das
icebp
sarb
push
xchg
pop
jp
jecxz
imul
out
cmc
lret
lock
and
mov
popf
dec
call
jns
orb
popa
push
repz
jp
out
and
mov
dec
andb
lea
add
mov
xor
mov
es
lret
pop
mov
push
mov
shrb
add
test
jne
sbb
cld
push
adc
mov
outsl
jecxz
jae
scas
xor
mov
fstps
sar
mov
dec
pop
xor
cmpsb
std
movsb
pop
and
fists
xlat
sub
pop
icebp
sahf
or
loop
cwtl
adc
pop
mov
xor
shll
adc
or
test
movsb
addr16
shlb
pop
call
mov
js
outsb
aam
xchg
cmp
data16
pop
bound
dec
mov
fwait
dec
pop
xchg
packuswb
mov
rclb
mov
ret
aad
stc
scas
in
ja
ret
push
and
out
incb
add
xor
sbbb
pushf
xor
test
jno
hlt
cwtl
stos
js
lahf
xchg
inc
jae
sbbb
lea
add
lods
cmp
jmp
aaa
or
or
cltd
and
jmp
mov
add
popl
loop
scas
sub
bound
in
shr
popf
in
push
popa
popf
push
dec
mov
notl
mov
popf
out
movsl
inc
push
std
lods
outsb
lahf
push
fcoml
cs
pop
lds
aas
mov
mov
xor
sbb
or
inc
adc
cli
in
movsl
lahf
sbbl
idivb
push
rcrb
ss
mov
push
out
cmp
sbb
or
jne
pop
mov
ret
mov
xor
and
das
shrb
push
push
adc
pop
or
je
jle
es
dec
stos
stc
inc
pushf
pop
dec
pop
test
mov
cli
cmpsb
lret
test
lret
mov
push
dec
lods
xchg
ret
jnp
ja
fdiv
repz
imul
dec
xchg
ds
pop
sub
mov
inc
addr16
lock
aas
insl
fs
ja
sahf
mov
pusha
and
adc
rcrl
out
into
fdivl
mov
js
inc
and
jg
pop
push
sub
mov
popa
cltd
jae
das
push
jmp
jne
test
jb
pop
xchg
cmc
mov
int3
push
adc
xchg
stos
jmp
shll
inc
jecxz
push
lcall
in
push
pushf
imul
mov
mov
fistpll
cmpsb
cli
push
pop
fwait
cwtl
mov
insb
fs
jge
sarl
sbb
andl
adc
shrl
jl
add
mov
mov
or
sti
loopne
and
mov
dec
in
aaa
in
test
ja
js
cmp
out
sub
movsl
lock
cltd
xor
add
cs
pop
xor
xchg
hlt
in
icebp
mov
push
inc
inc
popa
xor
movsl
xchg
sbbl
adcb
xchg
ja
es
js
cld
inc
cmp
fs
mov
push
sbbb
mov
lea
sbb
aaa
pushf
jns
sub
pop
mov
jecxz
pop
cmpsl
lret
xchg
mov
aam
jmp
insb
out
xchg
push
push
mov
psrlq
xor
mov
loopne
sub
je
sub
mov
pop
jbe
ret
pop
testb
and
push
inc
mov
pop
inc
fs
dec
bound
jl
and
and
xor
dec
stos
rolb
push
pop
lock
orb
ja
push
rcrl
jo
mov
xchg
insl
mov
shrl
mov
mov
int3
call
sbb
decl
hlt
or
or
in
pop
push
test
int
pusha
shr
mov
shrl
pop
xchg
leave
pop
xchg
pusha
sti
pop
adcl
xchg
mov
fistps
jmp
adc
lret
mov
push
rcrl
repz
cmp
cmc
inc
cmp
loop
jnp
hlt
pop
dec
mov
mov
sub
in
or
in
mov
fs
ds
and
shrl
mov
pop
cs
inc
pop
mov
xchg
xchg
lds
dec
fdivp
movsb
mov
popa
sbb
xchg
scas
cmp
or
pop
jmp
xchg
add
add
fwait
cmp
loope
pushf
loope
push
out
xchg
fwait
dec
xor
outsb
popf
xchg
xchg
sub
pop
and
test
adc
cmp
adcl
mov
in
cmpb
adc
mov
xor
pop
push
mov
push
mov
xchg
mov
imul
dec
cld
iret
cs
sbb
add
pop
mov
jl
scas
fistl
insb
cld
or
pushf
insb
sub
sub
xor
das
jb
pop
loop
mov
aam
sub
or
shrb
pop
jecxz
jge
lods
sbb
addr16
mov
add
imul
ljmp
js
add
push
into
xorl
sbb
xchg
outsl
cmp
add
mov
mov
cmp
mov
enter
dec
mov
mov
insl
mov
rcrb
cltd
xor
mov
mov
aas
mov
inc
bound
pop
imul
movsl
mov
push
pop
jmp
stos
rol
xlat
sub
mov
arpl
rcrl
jnp
jle
scas
mov
insb
rorb
sub
jg
or
sbb
xchg
inc
jae
xor
sub
lea
sbb
fs
dec
dec
lods
jp
out
sub
mov
daa
mov
mov
inc
jbe
sub
and
inc
testl
and
sub
frstor
fbld
test
xchg
xchg
pop
das
mov
mov
insl
add
mull
inc
pop
div
push
push
sub
scas
pop
lret
jge
and
mov
int
xchg
out
mov
lock
add
mov
mull
adc
test
sbb
das
cmp
mov
popa
movb
mov
adc
fs
mov
jge
test
addr16
test
mov
mov
adc
sbb
cmp
sub
lods
fldenv
int3
lods
fidivl
add
cmpsb
in
sub
scas
inc
cmpb
cmp
dec
pop
bound
stc
icebp
stos
sbb
adc
sbb
sub
ror
fstl
cli
orb
aam
or
xor
push
mov
xchg
xchg
adc
mov
repnz
lods
fidivrs
out
in
ja
addb
jns
out
popf
xlat
jle
pushl
xchg
push
fwait
notb
xor
add
enter
sbb
jno
cmp
dec
mov
pop
hlt
test
je
iret
add
dec
dec
fnstenv
int3
jmp
int
aam
push
jmp
xor
pushl
adc
add
out
dec
int3
test
shlb
pop
dec
push
mov
pop
repnz
dec
xchg
inc
jns
cmpsb
xor
xor
and
stos
push
xor
xor
iret
jge
roll
push
mov
loop
int
sahf
arpl
jae
jns
test
inc
fisubs
js
scas
inc
cmc
mov
mov
cltd
int3
pop
inc
sarb
push
mov
mov
loop
dec
fadds
push
nop
xchg
push
sub
imul
fsubl
push
sbb
dec
sarb
clc
inc
cltd
lods
ret
repz
mov
sub
xchg
push
aas
mov
and
hlt
sbb
adc
arpl
imull
ficomps
adc
mov
mov
mov
fisubs
xchg
mov
mov
decb
mov
xor
sub
add
jecxz
ret
out
pushf
pop
imul
popf
jge
inc
inc
or
pop
and
xchg
orb
adc
push
movsl
ja
jp
sbb
mov
data16
ds
jmp
or
xorl
fsts
mov
ja
jp
pop
fsubrl
hlt
std
cmpsb
sbb
lcall
push
stos
loope
fldl
testl
xor
mov
movsl
sbb
push
scas
test
lahf
stos
shl
rcrb
test
lret
mov
repnz
pushf
repz
pop
pop
sahf
stos
rol
lcall
push
aaa
jbe
xchg
mov
les
push
loope
dec
popa
or
int
push
adc
inc
loope
adc
xchg
rcr
jae
or
and
mov
pop
ret
jle
cmp
xor
inc
in
sbbb
mov
xlat
push
test
cmp
aad
add
mov
pushf
dec
loope
test
or
jge
outsl
push
insb
push
faddl
popa
pop
sbb
mov
lea
inc
and
cli
lods
ljmp
enter
xor
scas
ljmp
push
fbld
in
lret
and
mov
push
jbe
popa
std
sbb
or
or
and
cmp
jmp
pop
cmp
push
addr16
aad
inc
repz
rcr
xor
outsb
push
cmp
in
sub
incb
ret
std
cld
mov
jge
push
fsincos
stc
xchg
cmpsb
js
fdivs
repnz
outsb
pop
mov
sarb
andl
and
lahf
adc
sub
inc
pusha
push
and
test
shll
add
sbb
push
jne
cmp
xor
dec
bound
mov
aam
pop
sbb
adc
xchg
mov
lret
stc
movsl
cmp
jne
pop
xchg
xor
add
loopne
mov
in
rcrl
repnz
push
mov
pop
cmp
dec
inc
out
std
dec
imul
in
imul
xchg
push
dec
mov
sbb
sbb
subl
cwtl
divl
pop
test
pushf
orb
ret
imulb
xchg
sub
add
mov
imul
pop
xor
testl
into
inc
fwait
nop
out
inc
push
stos
inc
mov
in
mov
xchg
sub
cmp
jb
test
push
insl
filds
daa
mov
and
lret
xchg
xor
stos
iret
adc
insl
xor
sahf
decb
insb
mov
int3
lea
into
aas
clc
dec
pop
add
cmpsb
pop
inc
loopne
inc
test
enter
cmc
dec
push
movsb
inc
lret
mov
cmp
add
add
lret
mov
addr16
sarb
sub
lea
dec
push
mov
sti
adc
addr16
push
xor
outsb
pop
inc
xchg
jae,pn
idivl
aam
mov
pop
test
mov
js
imul
out
sahf
inc
xchg
inc
fsubrs
push
popf
pop
dec
aaa
pop
adcb
jmp
lods
xorb
mov
inc
ja
pop
mov
pop
loopne
cs
pop
fisubl
inc
fs
and
sub
aaa
mov
sahf
in
pushf
dec
push
and
push
inc
dec
neg
mov
fsts
sar
cld
cmp
ficoms
mov
push
adc
mov
jmp
roll
or
push
cli
stos
jne
nop
fdivrl
jecxz
int
pop
cmp
dec
mov
xchg
lods
sub
jl
imul
sub
es
push
das
dec
inc
mov
sub
inc
pop
or
ret
filds
mov
pop
pop
icebp
dec
adc
stos
xchg
sbb
pop
lea
ljmp
bound
divb
cld
sbb
mov
mov
lock
mov
mov
xchg
fs
xchg
jno
in
sbb
lret
mov
or
enter
mov
jecxz
sbb
xchg
jecxz
mov
xor
sub
test
ss
push
shrl
jo
xchg
push
repz
cli
sbb
lea
add
out
gs
cltd
jb
mov
insb
loopne
xchg
and
or
xor
mov
js
out
lret
fmulp
jne
aas
fnstenv
fnstcw
imul
or
inc
faddl
jge
push
cmpsl
jne
and
inc
int
negb
or
ret
cld
pusha
lahf
push
dec
clc
jo
std
ds
je
stos
inc
out
pop
adc
jge
cmp
pop
inc
push
or
sub
lods
lea
xchg
jo
adc
jmp
sbb
bound
xchg
sub
dec
push
mov
out
push
cld
out
ss
out
fsubrl
sub
lea
sbb
mov
sbb
shl
adc
jb
mov
and
xchg
in
xchg
iret
popa
aad
hlt
insl
jge
jns
push
in
test
sub
movsl
inc
fxch
cmp
sarl
into
pop
stos
jg
and
in
shrl
inc
fdivl
data16
mov
imul
jp
data16
xchg
dec
sahf
pop
das
mov
movsb
fildl
call
iret
jae
jle
insb
fistps
sbb
jo
mov
add
and
addr16
cwtl
xor
data16
pushf
ds
das
or
ljmp
jae
mov
dec
jbe
inc
mov
inc
into
pop
xor
xchg
adc
ficoml
xchg
xor
rcrb
dec
xor
push
add
pop
movsb
cmp
shl
xor
cmp
pop
pop
mov
or
mov
test
adcl
cltd
push
faddp
cmp
mov
pop
les
fs
add
imul
xor
scas
lret
mov
rcrb
xor
dec
sbb
jo
sbb
push
dec
xor
faddl
cltd
mov
xor
enter
enter
mov
sbb
and
enter
shll
cmpsb
in
or
lock
es
add
into
mov
test
data16
push
inc
mov
in
jecxz
inc
daa
roll
movsl
xor
sub
cmpsb
jle
cs
push
std
aas
xchg
adc
inc
insl
sbbl
sub
mov
in
add
loop
and
push
sar
xor
sbb
sti
rorb
out
insb
mov
cmp
jo
sub
push
inc
inc
mov
adc
loop
adc
lahf
xor
lds
xchg
and
push
cltd
push
push
pop
mov
jp
iret
jecxz
pop
cmpsl
decb
adc
insb
fsubp
sbbl
xor
push
fwait
cmc
scas
nop
daa
mov
sar
int
mov
jns
inc
push
out
cmp
xor
xor
mov
lods
ljmp
mov
test
es
xor
mov
mov
sbb
inc
nop
cmpsl
sub
push
icebp
enter
leave
or
sub
insb
out
leave
mov
out
out
jecxz
push
negb
testb
movb
add
popa
cld
jg
fistpll
fbld
cmp
push
fcoml
imul
lret
mov
test
lock
adc
arpl
jg
inc
sbb
dec
adc
cmpsb
mov
inc
loope
or
push
in
sub
je
sub
shrb
jo
inc
fdivrs
dec
imul
adc
mov
div
mov
imul
adc
mov
pusha
mov
scas
xor
push
fs
dec
pop
adc
and
andb
cmp
mov
adc
int
outsb
mov
sbb
and
dec
adc
notl
push
or
jnp
jns
xor
push
fstps
sti
inc
call
or
daa
add
movsl
or
inc
daa
jae
inc
xor
test
dec
dec
jle
jne
xchg
mov
push
sub
repnz
fxch
and
aaa
lcall
popa
rcr
out
loope
jno
icebp
arpl
mov
pusha
pop
mov
data16
xchg
test
adc
imull
aam
jbe
std
pop
sti
rorb
and
mov
cli
mov
enter
aad
sub
nop
jge
inc
mov
lea
pop
sbb
cmp
mov
int3
pop
insb
xchg
and
sbb
shrl
sub
jns
ja
mov
or
xor
dec
insl
mov
jecxz
icebp
mov
aas
test
test
mov
enter
fcom
mov
xchg
call
add
mov
sbb
ror
insb
cmpsl
push
pop
arpl
hlt
mov
add
jns
add
sahf
mov
xchg
or
or
popf
pop
cmpsb
test
mov
sub
pusha
jg
jnp
inc
adc
stos
andps
out
dec
ljmp
or
out
cmp
dec
cmc
inc
out
mov
icebp
fdivrl
push
xchg
mov
test
mulb
and
mov
mov
cmp
shrl
add
sub
bound
mov
fs
test
sbb
jb
aam
in
std
rcl
dec
pop
add
push
cmp
gs
ficomps
fsubr
push
repnz
pop
push
fs
icebp
je
add
adc
sbb
mov
stos
inc
ret
lcall
ja
pushf
dec
rcrl
mov
push
rcrl
shr
leave
sbbb
out
sub
hlt
test
or
ret
shl
lcall
fwait
out
push
arpl
imul
dec
adc
cmp
lret
xor
pop
subl
arpl
push
sbb
fcomip
mov
adc
int
xchg
inc
popa
mov
shlb
fwait
mov
jp
inc
lcall
xor
push
cmp
jmp
mov
scas
fwait
and
out
stos
test
adc
pop
inc
es
push
in
push
fwait
inc
mov
stos
jmp
ss
je
ja
or
lret
das
jnp
jbe
adc
xchg
adc
test
icebp
dec
mov
lret
es
les
jbe
add
movsb
daa
aaa
out
bound
daa
std
nop
fbstp
into
frstor
push
fdivrl
pusha
sub
ffreep
fwait
push
enter
add
hlt
inc
adc
dec
adc
pop
adc
ret
aam
pop
repz
scas
or
and
mov
adc
mov
cmc
movsbl
jge
adc
mov
daa
inc
icebp
mov
sahf
cmp
ds
shlb
or
fcomip
mov
decl
lahf
mov
ljmp
pop
push
bound
test
adc
or
mov
cmpsb
orl
mov
lahf
inc
dec
cmpsb
xor
and
xchg
add
loop
cmpsl
imul
mov
sub
sbb
rcrb
mov
sub
sub
lods
mov
pop
xbegin
cmp
push
or
divb
sahf
dec
mov
rcrl
faddp
and
lcall
cmp
pop
sbb
add
pop
or
pop
or
das
aam
insb
xor
cli
fs
and
inc
mov
cwtl
cmp
imul
les
and
inc
in
cld
loopne
cltd
lret
inc
or
sbb
pop
dec
push
popa
loop
xchg
cmp
jnp
pop
pop
out
pop
add
rcrb
rol
sahf
and
es
mov
lds
rorb
stos
push
push
in
ret
repz
pusha
xchg
push
mov
dec
cmp
sub
pop
rcll
cmp
rep
loop
jne
cltd
xchg
out
dec
sbb
imul
out
sub
jnp
sbb
lret
out
sbb
mov
and
push
out
cmp
xchg
repz
mov
xchg
xchg
push
movsl
mov
aas
fists
rcrl
inc
ljmp
xor
pop
mov
mov
sahf
push
sbb
pop
jg
stc
adc
mov
shlb
dec
dec
jno
push
cmc
scas
dec
out
daa
adc
inc
test
ret
or
dec
jbe
dec
icebp
jp
iret
mov
sbb
xor
cli
pop
cmpsl
gs
movb
rclb
jnp
call
ja
rcrl
test
repz
adc
call
adc
ds
dec
sub
mov
arpl
sub
xor
dec
mov
push
pop
das
mov
pop
jns
push
aaa
mov
fwait
test
pop
add
sbb
xlat
stos
mov
pop
insl
mov
test
clc
xchg
mov
out
shlb
cs
fdivr
aas
stc
aam
testl
cli
dec
cli
lfs
pushf
push
insl
xchg
jmp
insb
xor
aad
scas
push
ss
scas
movlps
inc
mov
inc
cmp
scas
sbb
decb
leave
jne
das
or
push
bound
sub
mov
shrb
movsb
inc
add
lret
adc
loopne
push
sbb
fwait
xor
fildl
sbb
mov
dec
lods
mov
rcr
sarb
leave
dec
pop
jl
loope
xchg
in
mov
call
repnz
push
dec
sahf
movsl
outsb
add
repz
and
push
loop
add
decl
pop
jo
add
xchg
push
cwtl
sub
mov
ret
sti
mov
or
mov
stos
rolb
ss
in
and
outsl
jg
mov
jno
daa
aaa
dec
or
jne
pop
mov
pop
lds
cmp
jne
and
inc
pop
inc
int3
xor
xchg
sub
xor
jge
ljmp
mov
jecxz
jle
adc
xchg
sbb
add
sti
adc
js
xor
repz
ljmp
push
jl
das
inc
xchg
stos
push
add
mov
and
mov
adc
loopne
inc
adc
jne
xchg
inc
stos
clc
loope
jmp
shrl
fnsave
and
adc
test
cmp
loope
les
or
aad
push
pop
xchg
scas
push
or
jo
push
sub
dec
cmpsl
pop
popa
mov
xchg
js
pop
mov
inc
cmc
and
jb
movsb
sub
sbb
loopne
xor
jl
jecxz
jmp
jmp
jo
fsubrs
mov
gs
popa
sbb
pop
mov
fwait
push
ds
mov
sub
and
cmp
mov
scas
stos
pop
sub
cmp
and
xchg
loop
mov
sub
lcall
add
std
adc
push
js
rcl
push
andl
bound
loop
loopne
ss
or
dec
fldt
jecxz
and
lock
int
jp
jo
loope
jecxz
dec
scas
dec
push
mov
mov
les
adc
out
arpl
repnz
cmp
push
jns
push
push
out
popa
push
lods
xlat
outsb
fbld
inc
imul
push
xchg
dec
or
rol
cli
xor
pop
pop
and
and
mov
lcall
push
inc
call
and
and
cwtl
nop
ss
pop
cmp
dec
shrb
push
sbbl
mov
adc
add
in
xchg
push
or
mov
xchg
push
cmpsl
cmp
mov
shl
jns
fcoms
inc
jb
adc
lahf
cwtl
pushf
pop
int
gs
repz
and
jecxz
jne
pop
cmp
jne
int
ss
pusha
mov
popf
xchg
icebp
shll
in
add
popf
gs
mov
add
push
pushf
test
shll
push
test
rcl
or
shrl
sub
nop
inc
sub
outsl
cmc
lods
mov
adc
lret
add
rcl
movsb
lea
jge
mov
mov
push
push
mov
mov
icebp
or
mov
leave
jge
sbb
jecxz
ljmp
or
xchg
roll
pop
aaa
mov
lods
psubsb
subb
movsl
dec
and
or
pusha
push
js
dec
push
mov
add
dec
mov
jge
sbb
mov
pop
test
pop
mov
pop
scas
stos
mov
jmp
out
jmp
xchg
xor
push
cs
rolb
popf
add
sub
push
in
mov
xor
outsb
jns
mov
jno
pop
sbbb
das
sbb
addb
mov
sbb
cmp
mov
fadds
push
or
ret
rolb
mov
sbb
mov
popa
and
xor
pop
jns
in
aas
dec
jnp
xlat
cli
and
jnp
inc
mov
mov
out
adc
push
xor
xchg
pop
cmpsb
mov
lods
ret
add
cmpsl
cld
imul
jg
cwtl
jo
lds
fsubl
and
xor
jecxz
mov
int3
inc
leave
xor
fdivrl
stos
add
dec
rcrb
cmp
fld
addr16
xchg
ss
push
push
cmp
pop
imul
pop
cld
xor
add
sub
pop
shll
rorb
mov
cmp
jge
movsl
loope
xchg
dec
icebp
jle
adc
mov
pop
jecxz
bound
imul
hlt
lret
xor
sub
std
sbb
mov
movsb
subb
fwait
or
cmp
sbb
dec
add
imul
xchg
js
sbb
xor
mov
int
xor
pop
adc
rol
sub
mov
xor
hlt
sti
pop
repz
out
daa
decl
jmp
pop
inc
and
shrb
pop
mov
add
mov
and
sahf
adc
or
mov
out
test
stos
fnstcw
xor
mov
xor
push
dec
mov
jge
mov
xor
std
inc
push
push
sti
sub
mov
pop
cwtl
mov
mov
rorb
lea
adc
cmp
mov
cmp
cltd
or
aaa
inc
mov
pop
jb
repz
pusha
pop
cmp
or
inc
and
mov
inc
mov
xor
lods
push
fwait
ret
add
lcall
jbe
les
or
mov
push
mov
ret
imul
mov
aaa
mov
push
dec
popf
push
mov
pop
fmull
adc
pop
imulb
xor
vmovsldup
and
push
sar
insb
js
repnz
mov
and
fstps
add
out
pop
out
int3
push
add
aam
inc
dec
add
popf
test
in
add
push
mov
movsl
sbb
mov
shlb
mov
popa
imul
push
mov
dec
ss
mov
jmp
out
or
ds
mov
pop
cmp
pop
dec
popa
mov
xor
dec
mov
dec
shll
xchg
push
sub
jge
clc
mov
adc
mov
add
or
mov
cmp
mov
sti
dec
and
loope
adc
sub
test
out
xchg
ss
out
mov
xor
insb
add
popa
int
jo
push
sbb
test
xor
popf
cmpsl
jns
lcall
adc
js
dec
cwtl
adcl
fwait
inc
cmp
xor
iret
ljmp
outsb
inc
nop
lcall
lahf
cmp
or
mov
test
push
cmc
dec
sub
fwait
and
mov
ljmp
push
adc
into
lret
push
sub
addl
hlt
das
dec
push
add
and
ds
sub
cli
lods
jae
adcb
xchg
fsubs
lret
xor
jbe
jnp
and
xchg
mov
push
test
cld
neg
jmp
cmp
mov
je
lods
inc
pop
or
lret
pop
adcl
mov
pop
jno
cltd
test
cmpsb
daa
add
dec
aam
push
ss
ja
inc
imul
push
shl
mov
stc
stos
mov
fstpt
mov
lret
mov
mov
int3
sahf
jae
test
ss
pop
push
inc
stos
cmp
and
sarb
push
imul
popa
loope
pop
push
sbbl
xchg
into
loop
mov
inc
pop
sub
sti
stos
inc
pop
push
lds
subb
addr16
arpl
in
cmpsl
pop
subb
pop
dec
push
in
rcl
sbb
scas
in
loopne
int3
pop
out
jl
mov
push
lcall
fmul
mov
std
xor
aad
mov
daa
adc
imul
arpl
xor
push
jecxz
xchg
popa
pop
scas
shlb
add
mov
insb
les
call
or
adc
xchg
push
insb
fwait
push
dec
cmpb
js
in
testb
mov
aam
pop
pop
adc
pop
ss
cmp
popf
push
push
and
pop
arpl
add
xor
adc
pop
adc
pop
mov
fs
pop
fsubl
nop
daa
or
xor
inc
inc
lret
lret
sahf
push
adc
push
xchg
mov
xchg
mov
in
fwait
xlat
notl
adc
mov
jl
dec
adc
out
xor
push
mov
test
jns
cs
inc
sahf
pop
sub
ss
mov
jl
test
push
pop
aas
mov
dec
addr16
enter
das
icebp
pop
and
fistpll
inc
imul
outsb
mov
mov
push
sahf
adc
ret
adc
fimull
pusha
imul
dec
pop
out
xlat
mov
out
cli
scas
ret
ljmp
mov
int3
jg
xor
out
popa
pop
stc
cs
and
jno
mov
fmuls
mov
cmc
push
or
cmpsl
mov
fisubrs
pop
inc
add
dec
xchg
adcb
cmp
mov
outsb
mov
out
mov
rcl
jno
arpl
mov
and
das
push
push
call
sub
lret
in
lock
in
xor
mov
xchg
adc
or
dec
xchg
testb
mov
popa
mov
sarb
and
scas
push
test
arpl
stos
mov
repz
mov
lods
pop
sbbb
mov
clc
and
sti
or
mov
notb
mov
mov
push
rorl
lea
pop
mov
fstpt
mov
or
jbe
ret
sbb
call
xchg
sbb
jo
fs
cltd
adc
enter
mov
dec
rcrl
lret
sbb
cmp
daa
pop
push
jno
popf
ss
cmp
mov
mov
jns
iret
cmp
sti
pop
in
sahf
leave
xchg
std
lods
int
adc
in
and
mov
outsl
andl
stos
stos
mov
ffree
ja
out
ja
subb
add
lcall
lcall
cltd
or
loopne
fdivs
popl
lods
dec
add
imul
lds
cltd
stos
xchg
cmp
push
lahf
mov
test
ljmp
lock
sbb
xlat
incl
xor
js
or
adc
pop
xor
insb
cmp
mov
stc
and
jle
inc
shlb
and
inc
incb
dec
fisttpl
and
fdiv
pop
push
inc
imul
and
pop
fnstcw
push
int
jae
test
popf
cmpsl
repnz
dec
dec
aas
jno
repnz
xor
adc
push
sbb
adc
pusha
jo
or
hlt
xchg
cmp
ja
imul
lcall
push
xchg
inc
in
inc
stos
dec
out
inc
arpl
scas
fstl
mov
lcall
hlt
aaa
pop
mov
jmp
mov
out
dec
inc
dec
cmp
or
sub
push
or
xchg
xor
fs
out
fmul
mov
ret
data16
adc
cmp
and
nop
xlat
or
es
hlt
push
stc
xchg
xor
arpl
addr16
int
add
inc
popa
cmp
movsl
es
pmullw
push
push
js
mov
push
mov
daa
shlb
adc
mov
mov
lahf
mov
mulb
out
fwait
cmc
add
mov
arpl
xchg
jo
sbb
mov
ret
sub
mov
push
fstps
jp
pop
inc
jg
push
jle
jae
hlt
jne
out
out
mov
sbb
xorl
mov
dec
inc
out
test
cmp
imul
push
je
jo
js
xor
push
divb
push
pop
sbb
test
jno
sbb
into
push
rolb
mov
addr16
orb
jno
dec
popf
jmp
aam
inc
cmc
decb
mov
adc
lds
data16
rcrb
cmp
jge
subl
gs
pop
gs
mov
dec
pop
cmp
sbb
arpl
cmp
cmp
smsw
mov
jbe
enter
push
mov
loope
and
xchg
les
mov
xchg
cmp
inc
xor
sbb
xchg
mov
adc
int
ljmp
inc
jecxz
add
ss
out
bound
dec
add
loope
lret
mov
out
ret
enter
int3
dec
sti
push
daa
mov
popa
adc
je
insb
in
xor
sbb
in
sbb
sub
dec
ss
fcomps
pop
dec
cmc
sbb
add
stos
orl
sbb
and
adc
into
gs
idivb
ja
ret
xchg
sbb
das
in
data16
lock
pop
mov
dec
mov
int
je
cmp
mov
push
pop
xchg
fbld
bound
js
pop
inc
push
insb
dec
dec
stos
pop
ds
subl
cwtl
and
dec
sub
sti
jmp
jg
cli
push
pop
xchg
push
xchg
fdivrl
outsb
repz
mov
repz
or
or
sbb
dec
loopne
lcall
dec
jbe
add
call
cmp
xchg
jle
ret
jl
adc
pop
fiadds
and
loope
gs
add
push
inc
loopne
mov
sub
add
cli
and
push
push
jmp
sub
mov
popa
push
inc
push
loop
jno
ss
inc
lock
ja
jge
idivb
rclb
pusha
repz
js
xchg
outsl
inc
inc
sub
repz
dec
stos
fmuls
test
test
test
mov
push
adc
add
fdivrl
jae
pop
stos
imul
ds
cmp
xor
push
mov
out
jp
mov
push
rcll
imul
pavgw
fisubrl
push
mov
push
into
gs
adc
sub
sub
repz
xchg
stc
adc
sbb
es
sub
pusha
inc
sub
xchg
stc
xor
sahf
xchg
inc
daa
cmp
adc
pop
and
out
loopne
cmp
and
out
pop
sbb
jns
fnsave
lcall
or
sbb
xor
bound
movsb
pop
aaa
or
or
pop
shll
out
inc
inc
xchg
sub
push
popf
and
mov
fcompl
shll
jne
mov
mov
adc
aam
xchg
dec
add
ret
or
dec
lcall
jmp
ffree
in
xor
shr
push
lods
sub
jbe
mov
mov
cmpsl
sbbl
icebp
jmp
xchg
or
push
arpl
repz
filds
xor
aam
lret
jno
dec
cmp
arpl
pop
out
mov
dec
jbe
jp
fidivl
or
push
mov
enter
imul
dec
mul
lahf
inc
fnop
mov
mov
push
cs
pusha
xor
sar
rcr
out
fcompl
sbb
pop
rclb
sub
jno
and
mov
andl
and
faddl
add
loope
add
test
leave
cltd
xchg
or
mov
adc
insb
mov
inc
sub
cli
cmc
sbb
or
pusha
lcall
shrl
push
dec
push
pushf
cltd
arpl
xor
push
mov
les
mov
mov
jne
sub
dec
sarl
int3
xor
sub
sbb
or
pop
imul
dec
out
call
mov
cmpsl
cmp
nop
repnz
repz
shrl
fadds
lods
add
pop
add
es
and
test
hlt
ffreep
push
dec
cwtl
cwtl
xor
pusha
xchg
shlb
mov
cmpl
mov
xor
aas
inc
xlat
jecxz
aam
mov
mov
andl
fwait
cmp
push
add
add
push
lds
outsl
aad
mov
dec
rcl
jl
lea
mov
xor
dec
mov
push
lret
push
lret
stc
push
push
loope
lock
jl
pop
adc
scas
mov
and
sub
dec
loopne
test
in
adc
bound
cmp
ret
test
or
mov
outsb
out
mov
sbb
das
dec
dec
or
fstpt
jo
xorb
xchg
stos
or
mov
mov
ret
mov
jo
rolb
js
push
jg
pop
data16
xchg
push
add
push
xor
xor
fdivs
fstpl
outsl
jp
mov
test
leave
jmp
pop
pop
add
mov
cmp
sahf
cmp
mull
and
xlat
stos
mov
hlt
outsb
lret
paddsw
sbb
xchg
mov
fdiv
cmp
out
ljmp
mov
and
or
adc
jp
es
daa
sbb
pop
pop
cmp
mov
aas
jp
negb
jmp
mov
push
mov
iret
mov
sahf
push
jo
inc
fists
push
push
jbe
mov
lock
lods
push
fadd
cmpb
xor
cmpsl
mov
push
ljmp
rcrl
push
jg
mov
pushf
adc
and
out
cli
xchg
fsubrl
stos
inc
add
add
outsl
lods
cmp
enter
popa
fsub
movsl
mov
lret
stc
jae
xor
pop
test
shl
adc
xor
icebp
out
mov
adc
popa
bound
mov
ja
repnz
add
pop
aam
add
mov
mov
sbb
xchg
pop
xchg
add
or
inc
and
dec
in
ja
aas
mov
js
popa
mov
test
and
inc
cmp
ja
and
leave
daa
aas
pusha
sub
sbb
or
xchg
xor
lock
push
mov
cmp
imul
fisttpll
cwtl
jp
decl
dec
ficomps
mov
xor
cwtl
add
mov
mov
cmp
pop
xchg
pop
cmpb
leave
mov
mov
insl
unpckhps
xchg
add
add
pop
jle
dec
loopne
lret
push
in
push
out
out
hlt
fidivrl
call
notb
adc
jecxz
or
es
or
push
nop
imul
addl
test
gs
mov
mov
xor
add
fiadds
push
test
sub
mov
stc
inc
cltd
push
fiaddl
stc
in
jb
iret
xchg
jmp
inc
flds
int
cmp
cmp
sahf
pop
fs
mov
ss
mov
and
ds
movq
pop
pop
jg
cmp
fwait
mov
cmpsl
sahf
jp
cli
jns
ficompl
into
sub
jge
cmp
nop
lods
aaa
sub
pop
push
or
pop
clc
insl
jns
jne
dec
cmpsl
iret
add
jae
cmp
sti
xchg
movsl
icebp
pushf
es
xor
outsb
cmp
lahf
aam
int3
mov
or
out
mov
mov
test
inc
jge
cmp
fldenv
or
mov
dec
ret
push
lret
jecxz
cmp
mov
lahf
arpl
xor
pop
sarl
pop
repnz
je
sub
jns
push
and
dec
dec
fadds
inc
shrb
jg
loop
ss
sti
mov
xor
cmp
jp
jl
clc
mov
fstps
aam
sub
imul
movsl
cmp
ret
pop
cmpsb
xor
jmp
fmull
push
out
jl
and
mov
adc
test
sti
aas
ficomps
or
cmp
xchg
sbbl
jg
push
hlt
jo
mov
mov
icebp
pop
mov
cmp
jbe
daa
cmp
xor
dec
add
andb
inc
push
and
cmp
lret
cmp
nop
pop
add
adc
push
push
mov
test
int
adc
mov
mov
inc
mov
leave
inc
sub
mov
adc
push
je
dec
lahf
inc
xchg
mov
lods
mov
ss
enter
sub
jns
sbb
std
push
ja
mov
and
and
mov
mov
notl
sbbb
jle
dec
pop
mov
int3
fsubl
mov
inc
fldenv
pop
push
xchg
lcall
sub
lock
in
out
outsb
jb
mov
call
fyl2xp1
movsb
xor
in
fsubr
mov
add
jecxz
cwtl
mov
mov
clc
enter
and
jo
es
fldcw
mov
jmp
loope
and
aad
ss
mov
mov
pop
daa
add
outsl
mov
cli
xchg
push
jg
outsb
and
imul
negl
mov
jae
in
pop
hlt
mov
xchg
arpl
adc
jns
in
cmp
pop
cld
aas
clc
aam
inc
mov
mov
push
jecxz
stc
and
lret
sbb
mov
hlt
std
xlat
pop
sub
mov
mov
mov
adc
adcb
xor
hlt
repnz
push
mov
push
push
inc
or
loope
mov
lock
imul
ffree
xor
fbld
xor
xchg
pop
loop
lock
cltd
es
test
jnp
bound
adc
ds
add
mov
icebp
inc
es
dec
add
popa
or
xor
aam
xchg
or
sbb
inc
addr16
push
xor
imulb
dec
mov
adc
and
aas
xor
jecxz
ret
mov
sub
add
outsb
shrl
sub
add
lock
pop
sahf
repz
out
sbb
jbe
mov
into
mull
pop
mov
ficoms
les
call
outsl
add
inc
mov
mov
call
ret
pop
fmuls
jnp
push
dec
in
xor
add
sbb
lret
hlt
pop
mov
fnsave
dec
mov
push
push
pop
test
lfs
or
andb
mov
jmp
sbbl
stos
fistps
fmul
shl
jge
inc
xlat
xchg
pop
adcb
scas
frstor
add
cmp
loop
scas
jno
cs
shrb
in
xor
pop
sub
mov
in
jg
loope
rep
jge
es
fidivrs
lahf
jle
and
xchg
mov
adc
imul
xor
mov
push
dec
xor
pop
cmpsl
out
ds
or
mov
mov
or
push
mov
aad
jno
sub
xchg
subps
iret
fistpl
ds
xchg
inc
cmp
out
xlat
xchg
cwtl
roll
mov
sbb
cmp
push
sahf
jle
je
bound
jne
xor
adc
jno
and
imul
adc
call
push
pop
or
or
int
sbb
scas
rorl
jne
push
sti
xchg
ja
mov
lock
sub
mov
mov
mov
dec
mov
test
xchg
std
aas
je
insb
mov
add
test
jmp
lods
orl
cmpsb
sbb
lock
enter
repnz
and
rcrl
das
les
fsubs
mov
ret
or
xor
lret
popl
fidivs
je
shlb
cmp
shlb
mov
push
jmp
stos
mov
aas
outsb
cmpsl
test
leave
push
aad
call
pusha
sarb
ss
sbb
inc
pusha
movsb
sti
test
jl
imul
jbe
mov
sbb
or
sub
leave
mov
mov
fistl
orb
cmp
push
andl
dec
mov
adc
mov
cwtl
pop
jns
nop
in
jnp
fs
ss
xor
mov
dec
dec
inc
sahf
mov
push
pop
pop
cs
lret
cbtw
bound
mov
insb
and
pop
cmpsl
fs
add
xchg
sub
pop
adc
sbb
push
add
aad
jle
jb
pop
cltd
adc
ljmp
push
inc
xchg
movsl
xchg
imul
fnstsw
arpl
ret
pop
cmp
push
sbb
icebp
xchg
and
cwtl
add
hlt
jo
or
mov
xchg
sub
jge
xor
jb
jl
sbb
fs
cmp
push
inc
jp
out
das
or
inc
push
filds
xor
je
xchg
jae
push
mov
inc
scas
fisubs
aam
push
pop
out
andb
push
js
call
movsl
dec
ja
jb
mov
addr16
fisubrl
cs
nop
cmp
push
xor
cmc
or
inc
cmpsl
inc
dec
cmp
pushf
and
scas
jl
xlat
lods
rcrb
repnz
lret
call
inc
ficoms
jae
dec
mov
dec
xchg
movsb
dec
leave
jp
jno
jmp
sub
pop
adc
adc
lea
cmp
dec
mov
inc
xor
mov
pop
or
sub
fisubrl
push
dec
mov
inc
pop
call
mov
mov
mov
in
nopl
mov
iret
pusha
xchg
gs
cltd
mov
adc
push
pop
push
jg
jbe
imul
ds
pop
mov
stos
mov
lcall
lcall
cmp
mov
sarl
and
ret
shrb
cmp
test
and
scas
xor
lret
addr16
loopne
xchg
push
mov
pop
xchg
hlt
mov
loop
je
aaa
push
mov
lcall
adc
jmp
or
inc
pop
inc
mov
push
rcll
push
xchg
cmc
int3
inc
jmp
push
push
sbb
jo
mov
popa
pop
or
jno
mov
cmp
and
jae
push
std
inc
lret
repz
sub
cmp
jge
js
sbb
mov
xchg
and
push
sub
data16
cltd
mov
dec
js
mov
out
inc
es
inc
inc
inc
push
jns
fldt
cs
xor
dec
pop
mov
mov
mov
inc
fnstsw
sbb
mov
mov
mov
gs
pop
in
test
push
and
cmpsb
add
jmp
lcall
shl
or
pop
ret
jmp
pusha
sub
rcl
cmpl
pop
pushf
dec
fdivrs
test
loop
mov
lock
mov
ja
in
orl
leave
add
cli
insb
mov
adc
add
stos
repnz
and
pushf
mov
cmpsb
mov
mov
or
mov
in
adc
imul
xor
xchg
and
stos
test
cltd
mov
fwait
inc
cwtl
pop
stos
inc
xor
push
sub
pop
neg
xor
jb
pushf
in
mov
push
fiadds
xor
inc
es
pop
xor
mov
cmp
les
daa
aas
sbb
jl
fnstsw
dec
dec
cmp
adc
loope
cmpsl
push
mov
push
lret
mov
mov
xchg
fistps
cmpsl
stos
rclb
pop
shlb
popa
clc
push
push
pop
lock
cli
adc
xchg
and
mov
es
sbb
clc
push
ret
adc
xchg
inc
lret
mov
pusha
lcall
lret
cmp
imul
push
arpl
clc
fs
aaa
xchg
in
jbe
dec
and
xor
hlt
add
xchg
lods
xchg
xchg
push
adc
cmc
inc
add
xor
ja
loop
pop
lock
mov
out
jae
mov
push
inc
pop
mov
mov
sub
outsl
sub
arpl
mov
pushf
pop
add
aad
adc
sub
in
lret
test
cli
jb
bound
shr
add
mov
shrb
outsb
daa
stos
lahf
mov
int
stc
push
push
popf
cltd
leavew
dec
aaa
xlat
test
jo
out
insl
jae
divl
fsubrp
dec
xchg
xchg
push
ret
scas
add
push
xchg
xlat
pusha
mov
shl
out
mov
or
pusha
cmp
dec
int
mov
xchg
fwait
sub
leave
repz
and
sbb
lods
cmp
popa
pop
aad
cmp
add
aam
rcrb
xchg
add
inc
lret
pop
dec
nop
dec
dec
push
xor
rorl
jmp
and
sarb
push
jmp
xchg
cld
mov
mov
cmp
int3
insl
int3
ss
or
mov
aad
int3
push
movsl
jne
sub
pop
scas
inc
scas
in
adc
mov
pop
push
cmp
mov
idivb
lods
pop
lock
jb
lods
xchg
adc
add
push
in
int
pop
aad
xchg
test
push
iret
push
andb
mov
out
xchg
sbb
xchg
insb
es
int3
add
repz
inc
push
jmp
or
push
sbb
sub
adc
rcrl
nop
push
imul
stos
loope
andb
push
stc
lret
test
mov
push
and
lods
xchg
ljmp
lea
inc
loope
jle
mov
jae
mov
bound
adc
mov
popa
mov
xchg
enter
inc
rclb
jb
inc
ljmp
xor
out
xlat
loop
ds
data16
dec
in
mov
aaa
push
push
fbstp
rcrl
sarb
dec
loopne
clc
nop
scas
fisubrs
addr16
sbb
aas
out
and
mov
inc
jnp
add
xor
cltd
xchg
ljmp
xchg
push
mov
out
pop
mov
xor
sbb
bnd
adc
xlat
sub
and
cltd
js
or
pushf
pop
out
cmpsl
andb
int3
cmp
rcrl
out
mov
dec
pop
sarb
sub
jmp
rclb
leave
cmpsb
adc
cmpsb
shlb
add
inc
lea
or
dec
cmc
mov
jle
cmp
cmp
nop
jno
adc
cmp
pushf
jl,pt
fdivl
inc
daa
mov
call
cmp
mov
inc
in
stos
lea
jmp
mov
add
xchg
stc
test
lahf
mull
movhlps
add
pop
stos
fisubrs
jb
push
scas
pop
cmc
fadd
or
into
movsb
jl
das
mov
fdiv
lcall
adc
stos
fdivl
and
mov
push
cld
push
sbbl
insb
inc
xchg
cmp
lds
insb
mov
sub
imul
adc
nop
rcrl
push
sbb
xor
mov
in
fbstp
je
scas
inc
inc
gs
push
push
ljmp
jno
sub
push
cs
and
inc
fcoml
mov
movsb
and
mov
jb
add
sub
test
daa
sub
cmpsl
dec
int
iret
xor
push
pop
repnz
jmp
in
lea
mov
pop
xchg
mov
cwtl
ja
lret
divb
mov
xchg
sbb
enter
mov
fidivrs
iret
shll
sub
lods
lahf
jmp
dec
int
loopne
push
cmpsb
sub
sub
scas
testl
aaa
add
cltd
xor
loop
pop
jmp
test
jp
or
push
insb
add
clc
enter
xlat
cmpsl
icebp
stos
mov
or
mov
cmpsl
adc
fdivrs
cmp
mov
imul
xchg
nop
inc
mov
mov
xchg
sub
cwtl
add
push
mov
push
scas
mov
mov
sub
pop
mov
dec
jno
and
loope
mov
sbb
dec
sbb
inc
jl
adc
push
add
mov
or
iret
fidivrs
cmpsb
jg
xchg
jbe
icebp
in
leave
mov
mov
adc
xchg
andl
xchg
fbstp
adc
mov
mov
xchg
je
inc
sub
xor
jno
int
inc
js
out
dec
mov
jno
mov
jnp
nop
clc
pop
dec
insb
mov
jecxz
and
or
sbb
xchg
lods
adcb
mov
lods
out
jo
arpl
xlat
xor
test
mov
mov
cmp
sbbb
pop
pop
mov
scas
repnz
dec
outsb
test
dec
dec
and
stos
fwait
aaa
inc
mov
xor
mov
sbb
cmc
jne
rcrb
xchg
jl
or
loopne
outsb
pop
cmp
push
sub
inc
scas
stos
cmp
loop
iret
hlt
ds
jo
jae
int
shlb
enter
andb
test
hlt
cmp
mov
push
xchg
add
jge
adc
les
insb
js
das
pop
or
lret
mov
mov
call
repnz
jne
popa
call
mov
pusha
popa
subl
ds
mov
fstps
lea
addl
lea
lock
push
cltd
xor
aam
sub
and
cmp
jle
push
pushf
sti
xor
clc
popa
cwtl
bound
push
test
pop
jb
xor
iret
shll
call
push
xchg
ljmp
cld
mov
scas
pop
pop
repnz
pop
sbb
push
cmp
adc
add
push
icebp
pop
ret
aas
hlt
mov
push
mull
les
sbbl
icebp
sarl
fisttpl
test
into
in
adc
cli
fcomi
pop
push
pop
ja
fdivrs
mov
fsub
sub
push
in
jne
jno
mov
arpl
nop
xchg
push
sbb
inc
fs
pop
out
pushl
repz
and
inc
mov
add
cmpsl
push
jne
pop
push
xor
inc
popf
cmp
inc
sbb
call
iret
fstpt
xchg
sbb
mov
sbb
xchg
jecxz
shr
mov
inc
mov
fisubl
fprem1
sysret
aad
lret
mov
rcrb
fsubrs
mov
xchg
and
roll
scas
imul
out
pop
mov
dec
hlt
aaa
pop
sub
adc
lcall
cmp
adc
xchg
sbb
int
mov
mov
mov
jle
mov
or
or
loop
mov
mov
push
or
insb
scas
adcl
mov
lahf
aad
es
dec
out
stos
call
xchg
adc
scas
fldl
adc
and
push
mov
int3
andl
arpl
mov
loop
pop
aam
out
pop
lds
flds
and
cltd
dec
mov
dec
xor
jbe
inc
push
outsl
loop
cmpsb
loope
xchg
imul
jmp
std
inc
fstpt
xor
sbb
rcll
stos
lock
mov
test
push
in
test
pop
mov
insl
outsl
jo
jns
nop
or
xorb
out
sub
dec
cltd
arpl
xchg
cmp
inc
dec
nop
stos
sbb
jbe
int3
dec
dec
gs
adc
int3
dec
gs
ds
bound
jl
xchg
nop
cmpsl
jne
mov
enter
repz
les
mov
repnz
adcl
enter
popa
jmp
cmp
xchg
rorb
sub
push
mov
push
cmp
nop
mov
cmp
push
stos
das
mov
loopne
inc
cs
sub
iret
aam
pop
cmp
call
jg
push
out
mov
sbb
lret
mov
cltd
hlt
fisubrl
ljmp
pop
and
sbb
add
je
iret
roll
inc
int
test
sbb
or
jecxz,pn
and
pop
ja
or
int
cli
jnp
mov
push
add
imul
in
aam
faddp
out
roll
pushf
es
pushl
mov
and
mov
pop
aas
cmc
ret
xor
adc
sbb
mov
pop
dec
and
cmp
mov
fildll
mov
mov
mov
ja
mov
fadd
enter
in
cmpsb
sbb
mov
jno
bound
jle
dec
sbb
divl
setns
nop
in
into
xchg
xchg
fcmovnbe
push
cltd
xor
xchg
mov
lds
hlt
fnstenv
add
push
fsubr
dec
mov
dec
aam
das
push
lret
lods
fists
cmp
ljmp
xor
pop
rolb
nop
dec
ret
rcl
jecxz
dec
mov
push
pop
push
or
addl
sahf
lods
shlb
add
pop
sub
ja
fmul
negl
add
fisubs
sub
aad
into
outsb
dec
stos
pop
rorb
pop
dec
sub
cmc
mov
int
jbe
xor
xchg
inc
sti
and
cld
pusha
push
loopne
fstl
mov
inc
cwtl
pop
sub
xor
jae
adc
ret
mov
je
add
or
sti
iret
pop
push
lods
sub
outsb
int
test
push
jne
pop
xorl
leave
in
or
call
lods
mov
popa
cld
mov
and
sbb
imul
cmp
shlb
mov
arpl
lock
cli
xchg
jae
and
inc
pop
lea
lock
into
and
outsl
add
jg
mov
leave
sub
mov
add
fsubr
enter
pusha
mov
jns
add
or
push
mov
cmp
inc
insb
xchg
test
lock
pusha
clc
push
push
adc
mov
dec
xchg
fsubp
pop
sahf
gs
je
lcall
jb
push
push
inc
clc
jmp
jo
js
int
xor
mov
aam
xor
adc
pop
loope
popa
fsubl
dec
cmp
popa
nop
mov
jp
daa
lods
sbb
mov
push
inc
stos
push
outsl
jbe
jl
test
xchg
cmp
and
js
mov
out
cltd
lock
mov
cmp
in
jno
imul
fimuls
mov
sbb
out
roll
ss
movsl
js
ljmp
inc
mov
adc
xchg
inc
pop
xor
js
addr16
dec
xchg
mov
sbb
xlat
add
and
inc
pop
gs
or
ds
call
out
out
stos
mov
ret
mov
popa
cld
xor
inc
or
ss
test
stos
in
test
jecxz
inc
fistpl
add
and
daa
push
sub
scas
subl
pop
imul
in
movsl
or
cmp
xor
clc
hlt
ret
pop
add
loopne
sar
cmp
inc
loop
pop
test
cmp
sub
sub
add
int3
jae
repz
mov
repz
movsl
fstps
mov
pop
sahf
sub
sbb
fcomps
cmp
push
jge
pop
sub
xor
stos
mov
push
lret
and
mov
mov
ret
dec
lds
popa
add
jnp
sbb
std
inc
ss
or
push
inc
inc
shll
repnz
iret
mov
pop
mov
add
and
ja
std
jns
fisubrl
sbb
mov
dec
orb
rclb
repnz
xchg
push
iret
movsb
cmp
ja
inc
adc
ret
cmc
dec
in
xchg
lret
inc
notb
je
jnp
bnd
aas
push
adc
dec
clc
mov
sub
add
stos
adc
mov
dec
das
lret
loopne
fs
mov
sti
jns
jle
orl
lret
nop
dec
sub
pop
nop
insl
imul
mov
adc
mov
decb
sub
ja
clc
mov
cmpsb
mov
fs
dec
push
xlat
insb
test
iret
xchg
ljmp
sub
pop
in
aad
pop
and
hlt
jl
mov
adc
fcmovnbe
push
repz
cld
outsl
aam
pusha
testl
cmpsb
sbb
push
cmp
test
pop
ret
xor
jbe
bound
movsl
lea
cmp
sbb
sub
inc
push
jmp
push
fidivrs
stc
or
adc
gs
je
push
sti
xchg
jne
scas
xchg
adc
mov
out
and
sbb
pop
ret
sarl
xchg
dec
in
fmuls
mov
insb
or
jle
xchg
mov
std
cltd
outsb
xchg
in
in
pushf
or
mov
sub
mov
je
int
nop
cmp
test
inc
xchg
mov
scas
in
or
jecxz
inc
cmpsl
cmp
dec
loopne
jmp
dec
fstpl
ja
fsub
mov
cli
jae
sbb
xchg
shll
mov
into
xor
sub
xor
push
sarb
in
jp
mov
lret
xor
jns
pop
fisubrs
int
jns
movsb
ljmp
movsbl
push
out
cli
or
adc
xor
cmp
sahf
pop
cs
movsb
and
push
incl
cmp
dec
imul
outsl
stos
mov
cmc
movsl
dec
divb
imul
adc
scas
cmc
es
test
fmull
add
and
or
leave
test
or
jle
gs
mov
xchg
js
es
mov
ret
mov
pushl
xorb
stc
or
repnz
adc
pop
sbb
mov
or
lret
add
push
xor
jno
push
mov
mov
inc
repz
sahf
dec
out
xchg
aas
lock
cwtl
insl
ret
pop
mov
mov
fisubs
mov
jge
adc
movsl
scas
frstor
and
in
push
push
and
fs
inc
cmp
mov
mov
push
aad
lods
add
dec
dec
xlat
pop
dec
jns
mov
inc
add
cmp
dec
aam
dec
jmp
xor
test
xor
mov
rcrb
push
js
loopne
sahf
sahf
repnz
mov
dec
std
enter
sub
call
mov
shr
xchg
mov
jae
mov
pusha
clc
insl
shrl
orl
or
rcl
test
popa
subl
decl
mov
dec
mov
xlat
outsb
in
out
push
in
nop
or
cmp
mov
shl
sub
andl
imul
and
cwtl
sbb
loope
data16
bound
sarb
shr
xor
test
mov
in
daa
arpl
loop
dec
sub
jnp
imul
iret
adc
popa
xchg
xchg
dec
mov
outsl
xor
loope
lret
outsb
leave
mov
insb
fistps
jns
repz
cs
pusha
xchg
sub
inc
mov
insl
add
jg
mov
jle
or
adc
rclb
out
sbb
inc
mov
mov
ljmp
pop
cmp
lahf
xor
je
cmp
jae
les
arpl
hlt
pop
cmp
inc
in
push
sbb
inc
xor
push
push
inc
mov
adc
xchg
int
lcall
lock
in
xor
adc
aad
pop
or
and
push
test
mov
in
jnp
jne
loope
cmp
mov
divl
push
cmp
int
and
push
xor
and
mov
add
popf
and
mov
xor
stos
or
adc
in
inc
push
mov
mov
cmpsl
sbb
in
lds
push
jmp
dec
and
rcrb
add
mov
mov
shrb
pop
and
add
cld
inc
and
jno
ret
jp
clc
shrl
leave
dec
jecxz
shlb
push
das
push
pop
sbbb
xor
pop
cmp
es
sbb
jg
push
test
sbb
mov
cmc
repz
xor
xchg
rclb
jae
xchg
mov
fwait
pop
ja
or
pop
sbb
loop
add
rcl
jae
xor
lahf
pop
pop
mov
mov
or
sbb
mov
fnstsw
or
adc
or
cmpsb
int3
pusha
or
inc
stos
cmpl
int
neg
mov
cmp
mov
mov
std
adc
ficomps
test
inc
sbb
add
movsl
jl
jecxz
or
push
es
pop
in
jle
insl
or
xchg
rclb
jl
neg
lcall
and
fscale
xchg
ja
jge
in
or
xchg
pusha
and
out
push
out
in
xor
pop
sub
jb
mov
xchg
push
mov
pop
inc
inc
les
aaa
pop
divl
fisttpl
pop
jecxz
movsb
xlat
and
mov
ss
lret
cltd
loop
rcrl
and
inc
fidivrs
out
mov
mov
xchg
sti
pop
int
push
gs
outsl
add
icebp
adc
or
push
jge,pn
negb
add
adc
mov
and
adc
jecxz
pop
out
call
pop
in
xchg
adc
inc
imul
or
add
dec
sbb
mov
and
dec
out
jne
divl
stc
aad
cmpsl
xor
lods
ud0
push
xchg
fsubrl
pop
ret
inc
testl
in
xchg
cmp
dec
mov
and
push
lods
test
xor
sarl
pop
dec
in
addr16
push
mov
icebp
scas
aaa
mov
sub
ss
iret
and
jb
je
push
cmc
cli
dec
push
or
daa
sub
pop
sub
mov
jp
sub
xlat
mov
mov
push
or
dec
or
es
jecxz
in
popa
daa
mov
dec
push
je
jp
testl
shlb
mov
jb
jae
jne
mov
sub
stos
rcl
call
insb
or
and
and
cs
or
stos
cmp
xor
mov
rcl
cld
mov
sbb
decl
and
adc
in
test
push
stos
fstpt
lret
stos
xchg
pop
jb
sub
pop
cwtl
je
xchg
sbb
icebp
fs
inc
sahf
fwait
dec
push
mov
push
xor
sub
mov
pushf
fidivs
mov
push
sahf
clc
xor
or
ss
sbb
hlt
dec
lea
pop
or
push
lock
dec
js
addr16
hlt
pop
lahf
cmp
mov
push
popl
into
jnp
gs
push
dec
cmpsb
inc
push
int3
ret
ss
jne
ret
sti
xlat
mov
jo
ja
adc
and
mov
dec
xchg
ljmp
jne
mov
ret
xchg
jle
mov
add
xchg
js
pop
mov
and
shrb
insl
sahf
fs
sub
xor
jbe
xor
nop
xor
cmp
test
jno
jmp
sub
cmp
add
mov
and
jae
sbb
mov
xor
jo
inc
jg
sub
inc
imul
pop
popf
inc
in
cmp
push
out
notb
xor
adc
das
popw
loopne
cmp
fwait
xor
pop
call
outsl
std
mov
jp
xchg
std
pop
mov
jge
mov
es
jne
jno
push
out
ret
imul
mov
push
jbe
push
iret
fistpll
arpl
das
rclb
mov
shrl
pop
loopne
mov
out
cmp
push
rcl
push
testl
lods
sbb
pop
pop
mov
int
jbe
ljmp
and
xor
fcompl
mov
fdivl
xchg
dec
popa
scas
in
addr16
test
fldcw
notb
stc
push
fwait
cs
fwait
xor
nop
mov
ret
lods
push
mov
int
sub
xchg
in
rcrb
jl
mov
jne
outsb
xor
psubb
jmp
movsb
test
pop
xchg
mov
inc
fiadds
mov
push
xchg
shrb
out
or
mov
xor
jnp
inc
sub
and
mov
mov
dec
cmc
das
mov
out
test
inc
lret
xchg
icebp
out
and
dec
xor
push
dec
pop
adc
and
inc
lret
push
lds
imul
lds
push
ja
lret
fcomip
sbb
mov
jmp
xchg
add
dec
shl
cmpsb
mov
in
mov
inc
lahf
lds
cmpsb
jmp
fisttpl
aaa
push
loope
and
outsl
sti
push
popl
rcll
stc
mov
jmp
in
pop
xchg
sub
add
sbb
insb
sub
ret
jp
cld
xorl
mov
inc
cmp
lock
dec
bound
xorb
mov
mov
test
dec
jb
scas
pop
pop
push
dec
cmpsb
xchg
adc
xchg
add
dec
push
and
xchg
mov
mov
sbb
loopne
mov
adc
repnz
mov
lret
xor
int
add
adc
pop
daa
mov
pop
push
pop
adc
and
push
cli
in
lods
mov
mov
or
rolb
inc
scas
pop
push
sub
popa
add
cmp
push
stos
fmulp
jo
dec
test
mov
imul
andl
arpl
mov
orb
mov
dec
repz
dec
aam
fsubrs
ljmp
insl
add
xor
xchg
jg
jae
lahf
test
daa
mov
imul
dec
pushf
test
jecxz
dec
mov
in
sub
push
fidivl
jns
dec
aaa
test
cmp
pop
out
clc
sarb
sbbl
sti
push
pop
in
jnp
pop
or
aad
mov
rcrb
fwait
mov
jmp
sub
je
out
shll
pop
adc
sahf
repnz
stos
push
jno
je
push
or
aas
scas
fcmovbe
sbb
sub
xchg
jp
fistpll
inc
mov
sub
je
xor
sub
sbb
repz
lret
test
inc
decl
cs
shrb
xchg
inc
push
les
cmp
out
test
inc
or
addr16
push
pop
add
xor
popa
sub
dec
cmp
sti
sarb
aam
stos
pop
pop
ret
mov
mov
arpl
mov
fs
mov
shrl
push
xchg
int
xorb
testl
pop
nop
sub
nop
cmc
xorl
std
in
xchg
push
xchg
rcrl
and
clc
fadd
mov
stos
xor
clc
push
sub
dec
sub
out
call
pop
cwtl
sti
repnz
insl
cmp
xchg
mov
daa
mov
adc
xor
pop
push
push
in
je
pop
mov
pop
roll
pop
cmp
data16
fsubrs
lods
sbb
scas
int3
aam
jmp
ds
repnz
fisubrl
scas
int
ja
shr
jbe
sbb
mov
mov
sbb
aam
jecxz
and
cs
and
lahf
mov
cmc
add
loop
iret
jmp
jmp
jne
cmpsl
and
push
enter
mov
daa
ret
mov
into
dec
out
inc
je
test
loopne
xchg
xchg
sbb
and
pcmpeqb
or
xchg
mov
addr16
pop
pop
icebp
lea
push
sub
dec
add
in
sbb
fwait
out
dec
leave
imul
aaa
shlb
mov
pop
rep
scas
xchg
pop
cs
jp
cmc
jl
call
jp
inc
dec
daa
bound
xchg
sbb
dec
and
jo
in
dec
inc
ret
inc
cmp
mov
aad
inc
sub
adc
mov
cmpsl
or
cmp
jo
in
in
shlb
repz
or
jp
push
pop
nop
daa
xchg
aad
inc
ret
mov
pushf
cmp
in
aas
pop
xor
das
popa
sbb
jg
cmpsb
sub
pop
sarb
lea
insl
je
xchg
add
call
xchg
stos
sub
fstl
popa
inc
mov
pushf
popfw
lods
lcall
adc
dec
cmp
cmpl
stos
inc
sub
jns
out
fistpl
insl
sar
cmp
xchg
test
movsl
in
pop
and
sbb
adc
push
gs
sub
aaa
mov
inc
popf
push
cmpsl
push
les
sbb
shrb
sub
xor
jge
fnstcw
sbb
fimuls
ljmp
fucomp
pop
dec
gs
addr16
subl
push
jo
dec
inc
imul
xor
push
movsb
xchg
push
mov
lds
cmc
in
add
loop
jo
push
imul
mov
iret
jnp
push
ss
push
inc
mov
jbe
pop
test
and
test
loope
repz
cmp
sbb
rcrb
adc
inc
jmp
adc
out
rcrl
adc
push
leave
adc
or
test
rcr
test
or
pop
mov
lea
repz
cmp
pop
int3
fimuls
pop
xor
mov
jge
jmp
mov
popf
ljmp
mov
ss
das
push
jle
testb
sbb
sub
loop
and
into
push
mov
cli
es
adc
cltd
out
xor
jecxz
and
adcb
or
adc
and
popl
das
cmp
out
incb
les
inc
or
inc
push
in
dec
jecxz
cmc
mov
sbb
sub
jne
xchg
lods
or
fidivs
test
push
add
and
fcompl
pop
cmp
cmpsb
lock
mov
mov
scas
inc
inc
js
mov
in
adcb
adc
mov
fs
idivb
sahf
adc
mov
data16
adc
ss
test
into
jo
mov
mov
adc
mov
fnstcw
push
repnz
cmpsb
jo
sub
mov
xor
cmp
xchg
mov
sub
adc
lea
out
xchg
push
je
daa
icebp
add
dec
inc
mov
mov
bound
add
dec
dec
inc
push
and
xor
cmp
insl
push
sub
fnsave
mov
enter
mov
and
add
add
fldenv
fs
int3
adc
push
xchg
sub
ret
inc
aam
jae
dec
iret
je
pushf
pop
or
mov
xor
add
xchg
outsb
iret
repz
int3
fs
cmp
jmp
jl
outsl
fiaddl
xorl
int
mov
pop
sbb
mov
pop
loopne
jle
mov
xchg
mov
and
lret
lahf
popa
lcall
jp
pop
les
cltd
xchg
sbb
dec
scas
or
sbbl
adc
mov
pushf
mov
pop
xchg
ret
loope
hlt
and
mov
pop
mov
lahf
mov
sub
mov
loope
js
pop
ret
xor
push
xchg
outsl
and
push
add
je
xor
cwtl
ljmp
decb
ja
sahf
xor
xor
andl
dec
pop
test
out
sbb
and
cmp
out
cld
nop
push
enter
mov
and
jmp
push
fisubs
adc
inc
push
stc
ds
dec
lods
enter
shr
test
cmpsb
mov
mov
aam
and
cld
pop
outsb
and
inc
pop
testb
imul
push
sub
cmp
jecxz
dec
add
mov
mov
mov
jb
push
cmp
cmp
pop
outsl
xlat
outsb
mov
popa
or
pop
xlat
mov
inc
out
xchg
fnsave
mov
sbb
lods
fisttpl
mov
dec
xlat
frstor
nop
mov
jnp
push
lahf
idivl
add
mov
addr16
addr16
fimull
and
mov
jno
pop
mov
push
xchg
lds
divb
cli
ret
imul
pop
add
mov
sub
mov
xchg
ret
ret
pop
adcl
jne
int
idivl
or
cmp
loop
aas
out
push
cli
repnz
inc
mov
push
and
push
popa
or
clc
cmp
aad
out
mov
repz
in
push
inc
fwait
gs
mov
mov
lods
and
push
popa
int
sbb
sahf
xchg
mov
lret
arpl
sub
hlt
mov
test
add
sti
and
iret
inc
sbb
xorl
rorl
sub
rolb
mov
mov
cmpsb
daa
xchg
sbb
outsb
inc
jnp
inc
or
mov
lret
imul
jmp
lea
int
and
and
sub
xor
jnp
mov
ret
lcall
popa
lods
pushf
jae
pop
pop
mov
and
rcl
cltd
xor
imul
dec
mov
or
jb
shll
add
xor
push
int
sahf
mov
inc
pushf
lods
mov
leave
loopne
lods
mov
push
push
add
push
mov
push
xchg
push
jo
enter
enter
and
push
inc
push
in
imul
cmc
insb
add
clc
insl
shlb
insb
fistpll
fidivl
stos
xchg
adc
or
lods
xlat
jmp
or
pop
mov
scas
inc
fmull
fmulp
mov
int3
lret
or
xchg
nop
bound
sbb
cmp
xor
cmc
addl
add
push
lods
stc
nop
fbstp
jecxz
lret
pop
cli
add
rcrb
into
subl
idivl
je
sbb
imul
cmp
add
pop
ss
pushf
jbe
xchg
jns
inc
sbb
in
xor
es
in
test
push
repz
and
cmpl
mov
or
mov
and
and
pushf
outsb
push
pop
ds
js
lods
pop
dec
jo
fdiv
jge
and
iret
jo
lret
add
xchg
adcb
fildll
push
es
push
cmp
ja
iret
mov
jmp
sub
pusha
je
cmpsl
sahf
xor
sarb
mov
mov
add
mov
xor
add
repz
xchg
sub
adc
jl
jb
cmp
lock
push
mov
mov
flds
mov
xor
xchg
mov
in
loope
lock
pop
dec
xor
in
std
cmp
inc
pushaw
xchg
push
ret
push
cwtl
and
test
inc
mov
dec
ror
xchg
enter
mov
int
mov
jle
loopne
mov
or
dec
push
clc
inc
sbbl
mov
cltd
mov
adc
push
push
push
adcb
xchg
xlat
jnp
repnz
xor
mov
clc
gs
sub
ret
test
or
lret
add
sub
into
add
sub
mov
test
decb
mov
lods
mov
pushf
jns
sbb
push
mov
imul
testb
pop
mov
jl
xor
cmpsb
cmp
pop
gs
aad
mov
lahf
in
mov
fdivl
push
pop
lods
xchg
int3
sub
mov
mov
inc
dec
jb
and
lret
add
les
mov
cwtl
fdiv
leave
shlb
into
pop
jmp
push
inc
cmpsl
push
mov
push
jne
push
in
imul
mov
scas
stc
push
push
add
fidivrl
call
mul
shl
mov
adc
jge
and
jnp
push
movsl
add
jnp
cmpsb
in
sbb
pop
scas
mov
sub
dec
test
add
iret
fldt
inc
test
gs
mov
cmpl
and
insl
sub
cmp
mov
aam
imul
sti
lods
mov
std
lret
icebp
jmp
fstpt
push
dec
jae
clc
mov
inc
fimuls
pop
cs
imul
xchg
mov
outsl
jmp
add
push
test
in
fs
xchg
cmp
cmc
adc
movsw
lds
cmp
mov
lret
adc
loop
lods
shlb
cltd
xor
outsl
pushf
cmpsl
push
inc
and
adc
call
lods
lds
mov
push
fldl
pop
sbb
arpl
addr16
xor
test
jecxz
mov
cmpsb
xchg
lret
mov
mov
loope
mov
xor
mov
bound
andl
iret
loopne
cmp
enter
mov
aas
test
inc
push
es
push
mov
sbb
lret
pop
dec
push
mov
int3
lret
into
and
jmp
lods
mov
inc
in
add
scas
nop
div
fisubs
add
sahf
rclb
add
inc
fadd
repz
and
inc
into
bound
dec
int
jp
dec
test
out
jmp
leave
xor
pushf
aaa
adc
loop
pop
out
adc
mov
mov
dec
in
fucomp
jg
js
sti
jmp
mov
mov
bound
push
dec
dec
xchg
push
push
xor
mov
or
mov
or
mov
ja
xchg
fsubs
test
stos
addb
push
mov
arpl
fsubrl
adc
cwtl
testb
out
dec
or
mov
pop
and
andl
inc
inc
pop
hlt
and
adc
inc
pushf
sub
sbb
cmpsb
mov
leave
subb
xor
sbb
fidivl
repnz
lahf
mov
and
andb
push
das
cmpl
adc
into
in
sub
fisubl
loope
fstl
aad
daa
sbb
mov
fcompl
sarl
push
push
jae
jp
jne
outsb
mov
test
daa
or
dec
ss
loop
out
push
roll
test
ds
lods
jno
xchg
or
dec
loope
adc
adc
push
add
jle
xchg
enter
loop
enterw
push
cmpsb
je
out
pop
repz
faddl
and
cmp
nop
jecxz
in
das
push
mov
and
adc
jle
cld
xchg
adc
popf
test
dec
or
and
jle
cmp
dec
in
negl
mov
xlat
daa
popl
cwtl
pop
lds
loopne
pop
mov
imull
cwtl
cmp
or
add
fsubl
and
pop
shlb
push
and
and
imul
jp
push
inc
xor
gs
sbb
push
xchg
cmp
sub
fistpl
pop
mov
leave
imul
rep
push
daa
push
sub
fisubrl
pushf
adc
rorl
es
push
jecxz
je
xor
dec
mov
repz
and
movsb
mov
test
jmp
sbb
sub
dec
lahf
stos
out
pop
xchg
ds
enter
xor
dec
xor
jle
push
mov
sarl
cld
jno
ficoml
fbstp
xchg
lods
pop
xchg
jb
fdivrl
pop
sbb
fnsave
fnsave
jbe
xorb
addr16
pop
inc
loopne
push
ja
inc
sti
adc
in
push
or
mov
add
stos
push
mov
and
push
sbb
dec
inc
push
push
inc
ficoml
mov
sub
insl
out
mov
xor
xchg
lahf
cmp
out
into
mov
mov
lods
sub
js
lea
or
mov
movsl
negb
andb
fucomp
mov
pop
jmp
or
mov
arpl
sbb
push
loopne
icebp
jns
sahf
and
xchg
jno
sub
call
xchg
andb
les
test
jge
jecxz
ficoms
lea
jno
xchg
xor
std
adc
lods
test
dec
xor
dec
inc
adcb
pop
mov
xor
push
jb
in
sti
cmp
jo
adc
adc
pop
es
pandn
inc
xchg
mull
test
aaa
fisubl
fdivs
std
xor
mov
dec
push
push
aad
xchg
and
sbb
lods
in
inc
xchg
lock
stc
nop
sub
and
jbe
mov
in
addl
adc
sbb
xchg
xchg
push
mov
ret
sbb
adc
sbb
aad
and
cmpsb
mov
jnp
sbb
pop
lods
push
or
fyl2xp1
std
or
cli
rcrb
jbe
adc
ret
jp
mov
cmp
sub
xor
in
lea
mov
imul
jo
pop
jae
mov
push
add
xchg
adc
mov
fmuls
adc
lds
outsl
cli
in
pusha
lock
clc
in
sti
jp
rorl
sub
mov
add
ss
jle
fcoml
adc
add
xor
or
aas
inc
rolb
mov
lea
add
xchg
dec
hlt
cmpl
add
inc
fsubl
xchg
loopne
fs
or
mov
and
jmp
inc
or
ret
inc
lahf
jle
jbe
xor
jae
outsl
popf
mov
lcall
mov
xlat
imul
popa
push
cs
sbb
pushf
pushf
xchg
int3
insl
mov
dec
or
pop
std
mov
and
mov
repnz
add
and
lahf
popa
mov
fistpl
mov
add
pop
adc
xchg
fcompl
xor
std
or
aad
clc
sub
ret
xchg
scas
jno
cmpsl
push
outsb
xlat
xor
je
fnstenv
mov
inc
adc
test
stc
scas
fidivrs
bound
enter
mov
pop
insl
pop
sarb
cmp
mov
nop
fsts
lcall
push
jnp
aam
popf
inc
sbb
movsb
pop
call
xchg
test
cwtl
aas
mov
movsb
cmp
adc
bound
and
adc
mov
ljmp
mov
mov
sub
jnp
push
jns
cmpsl
add
dec
hlt
sbb
adc
push
lds
jmp
inc
xchg
lods
test
mov
push
mov
cmp
test
cmpsb
inc
push
sub
pop
fldcw
fisubrs
adc
push
mov
jg
repz
push
pop
cmc
imul
sub
sahf
bound
xchg
inc
fldenv
inc
icebp
dec
jo
in
nop
xor
imul
mov
mov
add
mov
and
iret
insl
leave
xchg
pop
and
pop
movsl
test
fsubp
mov
cmpsb
and
imull
js
test
mov
aam
test
stos
dec
fs
aas
fcmovb
pop
dec
pop
xchg
pop
xor
sbb
cmp
add
test
push
mov
sub
mov
mov
notb
fildll
sbb
xchg
outsb
jl
sbb
shlb
xor
xchg
inc
repnz
imulb
jge
lcall
jmp
cmp
mov
rcll
aad
stc
mov
out
jo
xchg
inc
bound
jno
fildl
xorl
lea
addr16
fidivl
sub
popa
fldcw
std
xchg
imul
mov
das
cmp
shrb
pop
xlat
shlb
in
cmp
pop
push
out
aad
mov
cmpsl
adc
pop
xchg
add
test
ja
int3
and
orl
popf
xor
mov
sbb
push
dec
popf
stc
inc
mov
dec
loopne
sbb
xor
jne
fldenv
and
inc
mov
pop
fwait
pop
lds
int
dec
mov
ljmp
xchg
inc
hlt
xor
adc
and
inc
les
pop
xor
sbb
inc
ljmp
push
mov
jmp
gs
ret
ret
jmp
mov
in
out
les
cmpsb
loop
fcmovbe
mov
fidivrl
sub
inc
inc
xchg
les
cltd
rclb
hlt
jbe
data16
pop
fcoms
dec
add
out
or
cld
into
mov
leave
pop
xor
pop
cli
jne
sub
stos
and
mov
mov
xchg
jle
dec
add
jl
test
inc
lcall
sub
jb
addr16
add
loope
cmp
mov
mov
aam
mov
in
ja
add
inc
sbbb
cwtl
and
inc
adc
adcl
aaa
clc
shr
pop
in
ret
shl
clc
test
icebp
sbb
xchg
pop
sbb
add
dec
or
sub
mov
adc
jp
inc
gs
sub
sbb
add
popa
push
mov
dec
lahf
jne
test
pop
adc
arpl
loope
mov
in
lea
fwait
bound
push
imul
insb
or
pop
push
imul
or
imul
mov
cmp
test
and
adc
xor
push
mov
bts
push
sbb
aas
lret
push
out
sub
jns
stc
int
sarl
mov
mull
pop
out
into
enter
jbe
jp
pop
test
icebp
push
sbb
mov
push
into
fwait
push
or
jo
add
dec
aas
pushf
xor
sub
je
dec
inc
push
mov
add
stos
enter
inc
jbe
dec
xchg
sbb
xchg
mov
sbb
jmp
test
ret
mov
sub
das
popa
jmp
push
sahf
icebp
out
fdiv
dec
lods
adc
dec
mov
bndstx
ret
in
sbb
roll
std
int
jmp
dec
dec
mov
popa
cmp
xchg
icebp
gs
cld
mov
cld
jne
push
xchg
mov
push
xchg
daa
cli
stos
out
mov
jle
jle
insb
pop
adcb
icebp
sbb
and
pop
popf
push
shlb
movsl
mov
test
lea
mov
in
in
lds
mov
or
sbb
loop
mov
lahf
rcr
xchg
push
rol
push
popf
xor
dec
mov
stc
bsf
pushf
or
cmp
pop
sub
sub
movl
add
and
outsb
and
insl
ds
dec
sub
mov
jns
inc
cltd
fcoms
adc
or
fucomi
nop
add
add
jns
cmpsl
ljmp
pop
sbb
mov
jb
daa
arpl
dec
lahf
adc
iret
mov
outsl
insl
pop
mov
mov
lea
and
test
imul
scas
inc
sahf
xor
test
push
inc
add
sub
pop
sysexit
or
cmp
add
ret
add
sahf
jae
or
add
js
dec
or
mov
mov
call
xchg
push
push
jecxz
dec
test
push
loopne
mov
xchg
inc
inc
push
jmp
cs
add
out
xchg
pusha
jl
push
adc
out
daa
add
dec
lds
dec
cmpsl
adc
push
mov
xchg
lds
mov
mov
or
rorl
es
push
outsb
insb
test
sbb
jno
mov
into
mov
push
lret
push
insb
mov
inc
push
adc
in
arpl
dec
aad
addr16
notb
inc
jmp
mov
pop
imul
ja
data16
test
or
in
push
in
jae
popf
popa
mov
scas
xor
std
fdivp
mov
out
or
adc
js
scas
ffree
xlat
push
std
jmp
ret
dec
data16
cmpsl
sbb
enter
jae
or
dec
mov
fcmovnbe
cltd
push
int
shr
mov
arpl
enter
nop
cmp
sahf
clc
and
imul
sbb
shlb
sbb
insl
ss
add
clc
xlat
outsb
ljmp
std
mov
mov
xchg
xchg
mov
nop
inc
outsb
add
popa
ljmp
xlat
sub
test
fwait
ret
sub
outsl
out
rcrl
sbb
outsl
lret
mov
mov
jp
and
mov
jg
jge
pop
cmp
pusha
cli
out
push
add
mov
fcomps
jp
jnp
test
mov
add
lcall
jmp
xchg
xchg
cmc
mov
push
adc
addr16
inc
inc
divl
shl
jns
push
jb
jae
add
push
rcr
pop
arpl
jl
sub
fstl
push
pushf
add
mov
icebp
sub
push
les
aam
in
hlt
push
sbb
sahf
push
xchg
js
mov
sbb
fcoml
adc
pop
test
lock
lods
fcomps
cli
popa
mov
sub
pop
and
scas
adc
jae
cmp
repz
sarb
jp
addb
test
adcl
sub
push
fdivl
inc
cmp
loop
push
and
mov
ret
mov
movsb
lahf
idivl
addb
pusha
sub
fidivrl
fisubs
dec
jno
add
jle
cmp
mov
rcrb
in
inc
repnz
pop
fadds
faddp
arpl
adc
cmp
jne
push
inc
lea
out
or
lds
lahf
icebp
jle
lods
xorl
jne
cli
and
or
cmc
xchg
xor
insl
imulb
add
bnd
push
and
jg
int
into
das
loopne
mov
fldt
pushf
aas
rol
xor
jmp
in
pop
push
int3
in
aaa
dec
or
push
shrb
adc
fistpll
jp
jnp
cmpsl
push
mov
enter
bound
adc
pop
push
fildll
daa
jmp
cmpsl
push
ret
mov
xchg
jno
mov
bound
jle
adc
lods
nop
in
or
jmp
shrl
and
aaa
sarl
dec
jmp
out
push
out
movb
mov
dec
mov
mov
clc
add
clc
mov
and
fsubrs
sahf
xor
xor
lahf
jmp
mov
bound
ret
cmp
loope
test
add
aad
and
jbe
cltd
cmp
xchg
mov
fsubs
inc
cli
sbb
inc
inc
fs
inc
out
sti
shll
add
lea
mov
sbb
call
add
xor
aas
inc
gs
mov
inc
pushf
popa
xor
mov
adc
jne
xchg
jo
inc
jne
xor
shlb
bound
in
mov
dec
add
lods
popa
outsb
cs
pusha
jp
aam
pusha
and
mov
sub
or
mov
lret
xor
outsl
cmp
xchg
mov
inc
mov
aam
inc
xchg
xor
ficompl
mov
add
loope
into
shrd
pop
jecxz
shrl
sbb
insl
inc
push
and
cs
test
or
lods
fldt
push
adcb
xchg
gs
push
ret
cmpsb
dec
lret
push
test
pop
aad
xchg
enter
inc
sub
inc
les
pop
ficompl
jg
loop
fisubs
xchg
les
lock
shr
orl
mov
push
test
pop
jge
add
out
imul
push
shl
sbb
xor
sti
mov
roll
sbb
stos
mov
movsl
mov
nop
out
push
sub
cmp
xor
movsl
bound
sbb
mov
icebp
cld
inc
inc
xor
sbb
es
movb
push
pushf
flds
sahf
mov
test
shrb
jp
sub
out
xchg
sbb
cli
adc
bound
addr16
shl
nop
sub
out
mov
lods
inc
mov
fdivl
shrb
repnz
mov
les
dec
cmp
push
lea
lods
sub
testb
push
outsl
neg
xlat
mov
or
or
pop
idivb
mov
push
inc
dec
push
test
dec
les
js
mov
bnd
inc
das
jb
mov
push
mov
fldl
cmpb
test
testb
outsl
movsb
push
jno
ret
push
jo
xchg
mov
shrl
ret
or
sbb
mov
rcll
mov
ror
insb
enter
add
aas
sahf
pop
hlt
nop
fnsave
dec
in
jne
imul
icebp
xlat
lods
jecxz
sub
cs
cmp
xorb
jecxz
roll
xchg
xchg
das
pop
or
xor
adc
mov
add
push
xor
fadds
mov
sub
mov
and
loopne
in
es
push
mov
loop
aad
repz
dec
push
dec
sbb
mov
fnstcw
mov
sub
add
sub
inc
mov
test
mov
sub
jno
and
inc
xchg
sub
pop
or
ret
shl
push
add
adc
lods
sub
dec
pop
addr16
xchg
inc
xchg
cmp
mov
bound
dec
push
scas
cwtl
or
ret
inc
ret
cmp
ret
shlb
insl
mov
jne
sbb
fstpl
adc
orb
nop
ljmp
lock
inc
cmpsl
sbb
and
lock
pop
ret
lahf
push
movsl
push
add
fwait
je
push
cmc
lret
decb
xor
dec
adc
mov
mov
inc
sbb
aas
push
in
negb
mov
movb
or
inc
push
test
outsb
jp
lret
or
mov
adc
sbb
adc
sub
loope
push
cmp
stc
mov
outsb
add
popa
pop
push
call
push
test
cmp
dec
cltd
test
mov
push
ja
push
mov
inc
loop
pop
test
cmc
aas
mov
int3
fsubl
add
pushf
dec
subl
icebp
rcll
mov
in
fidivrs
les
mov
xchg
mov
adc
cltd
cmpb
pop
adcb
call
mov
shlb
mov
cmp
mov
fildll
adc
inc
cld
adc
jae
jg
xlat
lock
and
mov
xor
push
mov
inc
cwtl
je
fdivl
mov
pop
jne
mov
mov
mov
add
adc
xlat
mov
ret
sbb
sarb
pop
mov
pusha
sbbl
mov
nop
sub
mov
jns
sub
jg
cli
mov
sahf
arpl
adc
sti
pop
pop
scas
andb
dec
add
lock
sbb
xchg
push
imulb
mov
imul
adc
dec
inc
ss
jae
cld
dec
adcl
lea
ds
lcall
into
lret
cwtl
cmpsl
push
rol
mov
dec
ret
inc
jge
insb
mov
popf
inc
mov
jb
cmp
or
cmc
js
jo
fs
daa
decb
sub
test
push
in
leave
jecxz
sbb
mov
js
stos
in
jge
dec
out
sahf
adc
sbb
mov
mov
out
cmp
movsl
mov
nop
xchg
adc
jne
sbbb
inc
jbe
mov
fistps
por
jecxz
or
xor
nop
icebp
lock
cmp
lods
test
lret
mov
fistl
movb
xchg
jo
sub
out
adc
or
adc
movsl
inc
popa
and
das
push
ss
in
sbb
push
xor
jmp
adc
dec
movsb
mov
dec
dec
pop
in
aad
jbe
pop
push
inc
pop
ds
flds
adc
sti
jne
push
scas
jne
fists
push
xchg
aaa
scas
jb
xor
lea
cmp
cmp
int
jmp
hlt
mov
es
add
out
inc
ja
sub
lret
lds
test
inc
aaa
mov
test
mov
jnp
movsl
jnp
xchg
push
setg
test
mov
xchg
fadd
and
jp
ret
xor
mov
mov
jno
sbb
scas
fucomi
xorl
test
push
movsb
sub
jns
and
lods
mov
into
add
stc
loopne
sub
inc
cmp
or
jle
int
movsl
jno
adc
mov
sbb
movsl
mov
adc
out
xchg
sub
movsl
data16
xor
cmp
and
ret
mov
lods
pop
xlat
popa
das
cmp
test
fnsave
push
fs
push
cli
pushf
fldcw
loopne
dec
sub
fdivs
xchg
popa
cmp
mov
mov
xchg
pop
jle
mov
mov
add
in
cld
scas
mov
sub
lds
add
inc
outsl
jbe
mov
adcl
mov
mov
or
push
and
popf
pop
iret
sub
sahf
mov
xchg
and
adc
sti
mov
es
mov
pop
mov
imul
xor
sbb
adc
out
out
loop
mov
jmp
leave
pusha
insl
or
jl
mov
out
andb
imul
idivb
add
insb
aad
push
shll
jg
and
shll
mov
aaa
cmp
rcll
mov
pop
mov
xor
into
orb
add
jae
xor
cmp
xchg
orl
movsb
fwait
notl
addr16
pop
int3
lods
js
inc
out
popa
jnp
jmp
lods
add
cltd
or
inc
push
push
adc
js
mov
repz
lret
icebp
xor
ja
aaa
in
shrl
ja
lret
xor
fnstcw
jmp
addb
rolb
adc
call
hlt
mov
or
pop
mov
je
mov
imul
cld
inc
les
xchg
ljmp
push
cmp
imul
push
pop
pop
or
dec
cltd
stc
sti
xchg
mov
in
cmc
mov
push
sbb
repz
pop
dec
sbb
adc
or
adc
xchg
lds
mov
mov
jne
adc
push
sbb
pop
xor
push
push
and
mov
out
lret
lret
cmpsb
sub
mov
aas
and
jle
sub
addr16
pop
cmpsl
out
int3
push
push
adc
insb
sbb
pop
push
add
lcall
jbe
popf
push
in
jae
xchg
imul
push
jnp
inc
pop
cmp
xor
dec
cmp
das
xchg
push
jbe
push
daa
out
lahf
jecxz
int
je
mov
ja
and
std
mov
add
pop
mov
int
out
inc
push
cmp
mov
pop
cmp
ffree
mov
fs
mov
inc
popf
add
jge
mov
pop
mov
jb
pop
hlt
mov
cmp
sbb
les
cltd
pop
mov
sahf
sub
int3
faddl
pop
push
addb
mov
cmpsl
fld
cwtl
pop
fidivl
mov
jp
mov
cmc
rcll
fldt
inc
outsl
dec
leave
mov
into
stos
xchg
test
jb
shrb
mov
mov
dec
dec
clc
xchg
call
sub
je
xchg
repnz
adc
enter
inc
test
jns
ja
or
dec
xchg
xchg
fildl
xorl
je
push
lods
cld
jns
cmp
mov
lods
mov
ret
jne
inc
pusha
adc
mov
ret
ja
push
and
inc
xchg
mov
push
jmp
ja
fbld
fdivs
xchg
xor
scas
les
or
xor
dec
jle
movsl
mov
mov
xchg
xor
cmp
cmp
sub
mov
adc
dec
add
and
xchg
jne
es
jmp
aas
addr16
add
test
test
and
test
lods
lret
pop
scas
loop
shrl
shlb
rorb
enter
or
negb
sbb
push
pop
mov
stos
not
pop
fsubl
lds
test
pop
cs
mov
jmp
and
mov
scas
push
mov
popf
add
mov
aas
mov
mov
rorl
sbb
jo
inc
pop
fnsave
out
cli
stc
pop
aam
adc
jns
or
fwait
push
push
in
cmpsl
out
loopne
cld
mov
testb
cmc
adc
mov
and
stos
cmpsl
dec
xor
popa
ret
and
cmc
int3
sbb
mov
iret
pop
jge
jl
outsl
adc
push
pop
decb
fwait
test
mov
faddl
sub
jle
shl
rcr
add
call
and
dec
popf
dec
mov
ficoms
xchg
xchg
mov
adc
push
and
iret
andl
inc
aad
cltd
mov
ss
push
jge
out
xchg
test
daa
dec
addb
popa
lock
shlb
dec
pop
add
push
or
inc
jecxz
mov
mov
jo
dec
push
loop
gs
call
xchg
pop
je
sbb
hlt
adc
push
xor
out
outsl
dec
jb
sahf
cltd
xor
and
in
jno
add
mov
out
adc
jp
ss
or
sbb
and
push
in
xchg
sub
jae
sub
fbld
xor
jmp
jge
aad
pop
jb
mov
sbb
add
incb
hlt
pushf
dec
nop
dec
sbb
hlt
adc
hlt
or
push
aas
dec
stos
jge
sub
enter
sub
lret
rcl
xor
and
jmp
push
add
lea
mov
daa
mov
mov
inc
clc
shlb
pop
sbb
mov
jno
int3
push
pop
sbb
xor
jmp
adc
cmp
dec
push
and
int3
jb
dec
lods
incl
xchg
mov
and
addr16
dec
pop
orb
movsl
mov
pop
daa
lea
dec
cmpsl
mov
push
xor
mov
or
pop
les
pop
repz
insb
arpl
push
in
jp
push
cmc
dec
add
adc
aaa
cs
add
adc
jae
adc
push
scas
sbb
xchg
jne
jmp
prefetch
inc
xchg
push
jne
popa
loope
mov
xchg
xor
pushf
imulb
push
add
inc
scas
cmp
fcoml
popa
mov
mov
mov
sub
pusha
sbb
sbb
cmpsb
cmp
jns
mov
xorl
or
data16
lods
mov
xchg
int3
gs
ja
pop
pminsw
sbb
and
leave
cmpsb
adc
adc
std
out
test
es
test
mov
jnp
ja
out
pop
xchg
sbb
mov
mov
sbb
rol
push
mov
pop
mov
arpl
repnz
adc
fsub
sbb
push
shrl
arpl
adc
cmp
ror
rcr
imul
gs
test
lret
movsl
adcb
scas
sarb
inc
cmpsb
jnp
jno
hlt
mov
sbb
jle
mov
add
ljmp
sub
mov
xchg
xchg
sbb
data16
jge
testl
rol
fsubrp
add
cs
jge
sbb
or
sub
sub
inc
fidivrl
repz
fs
inc
ss
ffreep
jp
xchg
out
inc
jmp
int
fnstenv
test
sub
pop
pop
mov
enter
dec
xor
ja
cmp
fdiv
or
adc
and
mov
or
add
enter
test
pop
cltd
xlat
test
out
cmpsl
push
fisubl
int
and
jo
mov
and
bt
ret
pop
jo
jns
push
inc
imul
push
pusha
out
out
sbb
inc
and
xchg
pushf
es
xor
cmp
inc
daa
mov
sub
inc
xchg
push
dec
xchg
add
dec
sbb
femms
pushf
mov
data16
jmp
jb
mov
ret
sti
mov
lcall
sub
jmp
sub
xor
lret
jl
fs
dec
es
out
adc
pop
pop
inc
push
or
and
sti
or
sub
loop
jo
jl
xchg
lock
ret
pop
mov
outsb
xor
mov
fdivp
xchg
lea
mov
insl
mov
das
adc
pop
inc
xor
dec
dec
aas
jmp
push
push
xor
lods
mov
push
fldt
pop
pop
out
sub
decl
int
jae
pop
enter
cli
push
popa
jmp
ret
xor
push
or
inc
sbb
xchg
lods
xchg
or
rclb
in
call
mov
imul
add
mov
test
sbb
int
jae
lods
inc
scas
sbb
or
scas
xor
sarl
cmp
bound
sbb
unpckhps
dec
movsl
in
ss
pop
xchg
jno,pn
lea
mov
test
cmp
inc
cmp
cwtl
stos
repz
cwtl
xor
out
lahf
ss
subl
sub
repnz
imul
out
lret
fimuls
mov
lock
and
push
jle
fnsave
loopne
in
test
fwait
insb
ljmp
mov
addl
sub
in
and
cmp
cmp
add
insb
testb
call
mov
or
ja
sub
enter
xchg
outsb
imul
sub
pop
adc
nop
sbb
xor
adc
jne
addb
dec
cmp
jmp
and
ja
pushf
jl
dec
std
fsubrp
xor
sahf
stos
and
xor
loope
sub
mov
int
pop
mov
mov
sahf
dec
scas
fildll
adc
push
out
xor
push
pop
mov
loop
shll
subl
jbe
lods
push
sahf
pushf
dec
out
xchg
dec
xchg
sarl
adcb
dec
jae
js
movsb
in
lcall
arpl
pop
repz
nop
cld
popf
push
es
xor
leave
jmp
fwait
sub
fs
add
movsl
rcrb
loope
push
mov
pop
cld
mov
outsl
cli
xlat
mov
jg
adc
mov
repnz
adc
xlat
mov
fsts
repnz
fdivrl
repz
sub
sub
loope
sbb
mov
sbbl
and
cmpsl
ljmp
ret
mov
ficomps
pusha
decb
jo
xchg
sbb
xlat
dec
mov
shl
cmp
jmp
in
sahf
mov
pop
loopne
jo
sub
push
ja
xchg
in
add
xor
pusha
push
loop
add
inc
mov
cmp
xor
ljmp
sti
mov
or
aad
out
mov
xor
in
inc
mov
fidivrl
ja
lods
notb
cli
imull
cmc
jle
rol
rcrl
test
stc
mov
and
cmp
leave
shl
cmp
mov
cs
out
mov
inc
dec
jge
cmpsl
in
sbb
ds
scas
outsl
cmp
push
stos
dec
dec
shl
xchg
xchg
cld
xchg
cmpsl
pop
rolb
mov
nop
out
fsubs
push
mov
jbe
mov
mov
cld
adc
dec
mov
dec
loope
xor
arpl
push
std
mov
inc
xchg
imul
ja
xchg
xchg
js
jbe
jmp
clc
imul
sub
insb
mov
push
movsl
jl
xchg
sub
sbb
in
inc
fcmovnb
lds
ja
sbb
push
jne
mov
sub
loope
iret
fs
aaa
push
jb
push
subl
stc
fwait
add
loopne
sahf
sub
cmp
mov
loope
or
ljmp
jb
or
pop
divb
and
mov
add
inc
mov
mov
xor
inc
call
or
aam
mov
sub
pop
test
add
shll
add
sti
mov
push
push
loope
cmc
lds
sbb
push
data16
adc
popa
js
xor
or
or
aad
cmp
iret
mov
sub
cmp
push
mov
xchg
enter
movsb
sub
add
and
cmp
or
mov
or
repz
movsl
dec
xor
fsubrl
fdiv
mov
scas
adc
sbb
pop
add
cld
test
stos
and
orb
les
xor
mov
mov
test
fsubrs
outsb
stos
mov
sbbb
mov
push
fstpt
push
mov
orb
fmuls
out
sub
jns
adc
lods
enter
lea
dec
test
jns
popf
clc
xor
sub
and
cltd
xlat
adc
and
sarb
mov
shl
or
inc
pop
inc
dec
js
jnp
push
inc
fistpl
mov
fisttpll
cs
mov
stos
pop
sti
stc
nop
sub
mov
mov
and
bound
sbb
xchg
jae
xor
and
and
aad
stc
xorl
cmpsb
sti
call
cmp
or
pop
pop
dec
mov
sbb
sbb
add
dec
loope
inc
ja
in
sub
lcall
jecxz
or
into
mov
cmpsl
shr
fld
adc
lock
dec
jbe
fucomp
mov
lret
xor
push
xchg
stos
int3
in
jnp
enter
into
inc
push
push
shll
or
lea
std
adc
popl
cmp
cmp
dec
mov
loop
sub
gs
push
movsl
dec
or
mov
and
sbb
inc
pop
sarl
inc
jmp
aam
mov
cmp
xlat
imul
sub
jae
ljmp
loopne
jge
mov
sbbb
and
xchg
sub
mov
mov
shrb
cmp
mov
jno
or
xchg
jmp
and
pop
je
sbb
inc
adc
jp
add
sub
pop
lock
in
push
or
imul
mov
movsb
push
pop
out
add
lods
jmp
lock
sub
xchg
mov
out
sub
cmpl
out
adc
fldt
outsl
call
test
outsl
shlb
dec
int
jg
imul
fstpl
xlat
lods
stos
out
insl
dec
pop
mov
mov
out
fdivrs
pop
pop
xchg
cltd
push
jnp
pop
pushf
pop
in
add
xchg
cmp
add
mov
mov
xlat
push
pop
mov
sbb
or
cmp
pushf
rol
lcall
fidivl
shll
inc
sbb
push
roll
out
arpl
lods
ret
fs
mov
dec
add
mov
imul
adc
shr
insb
mov
pop
ljmp
stc
mov
jmp
cltd
pop
cltd
dec
mov
sub
into
jnp
inc
mov
xor
fsubl
arpl
lret
xor
loop
loope
push
or
mov
test
inc
mov
push
fsubs
test
mov
cmpsl
andb
stos
push
repnz
jge
aam
ret
cmc
push
outsb
cmp
xchg
cs
push
sbb
test
outsl
sub
cmp
mov
arpl
jge
cmp
int
fld1
scas
or
jg
outsb
es
rol
inc
xlat
or
test
movsb
rcrl
push
jne
ret
das
or
xchg
pop
outsb
jle
movsl
punpcklbw
push
ret
lds
fs
sub
or
lahf
jnp
or
pop
cmpsb
out
scas
mov
mov
xchg
push
mov
jecxz
xor
xchg
xchg
mov
cs
jne
idivl
inc
ja
xchg
test
incb
or
fmull
icebp
sbb
lea
or
adc
xor
mov
shlb
push
mov
out
aad
sub
push
jae
enter
cs
outsl
xor
jmp
push
sub
mov
cs
sub
dec
mov
push
inc
ds
jle
cld
xchg
pop
sahf
sbb
mov
and
je
sbb
push
jp
fidivrl
fs
dec
enter
sarl
inc
adc
rclb
mov
shll
sbb
out
ljmp
inc
xchg
adc
pop
and
outsl
daa
hlt
icebp
es
xchg
pop
aaa
xchg
cwtl
stos
cmp
cmp
std
sbb
inc
sahf
aas
push
lahf
xchg
cmpsb
inc
pushf
inc
das
les
rorl
dec
movsb
mov
pop
cmp
mov
int3
push
mov
loope
pop
xchg
mov
mov
jecxz
lret
call
jg
push
ljmp
cmp
pop
ret
pop
dec
movsb
add
mov
and
sub
loop
mov
test
adc
mov
std
push
xor
xor
sub
loop
or
loopne
daa
clc
les
test
mov
sub
test
add
sub
pop
cld
lcall
in
jp
enter
test
sbb
jle
into
bound
in
mov
push
movsb
jnp
mov
xor
movsb
sti
mov
hlt
jmp
mov
repnz
pop
adc
test
mov
mov
jne
pop
jae
gs
mov
mov
ds
sbb
cld
test
aaa
add
xor
mov
fisttpl
movsl
or
fcoml
data16
in
add
loope
sbb
lret
bound
inc
jmp
sbb
imul
pop
mov
sarb
insl
xor
gs
fstl
or
adcb
dec
std
mov
icebp
sahf
xor
test
dec
stc
popf
out
iret
sbb
mov
je
fnsave
popa
xlat
xchg
fcompl
neg
cwtl
scas
je
sbb
sbb
mov
nop
or
push
repnz
outsb
cmp
ja
lods
mov
xor
inc
movsb
out
out
mov
int3
or
out
lahf
movsl
cmp
dec
vandnps
xchg
add
jg
mov
out
dec
callw
cltd
call
push
outsl
int3
push
xchg
bound
add
or
mov
cmp
ss
pop
mov
cmp
mov
mov
popf
out
mov
xor
jmp
or
and
push
sahf
sbb
or
test
cmpsl
js
mov
enter
out
mov
mov
enter
cwtl
sub
sbb
sbb
call
xchg
sbb
sahf
mov
xchg
adc
lock
and
sbb
xchg
xor
and
and
pop
add
seta
adc
mov
or
sbb
imul
lret
test
mov
mov
sbb
hlt
ret
xlat
pusha
push
fidivrl
repnz
pop
shl
orb
aaa
jne
imul
dec
mov
into
jo
sbbb
mov
sbb
popa
and
mov
movsb
movb
sbbl
or
dec
dec
mov
rol
add
icebp
imul
pop
fildll
add
sahf
mov
and
stc
int
call
pop
add
enter
loopne
mov
inc
sbb
or
jbe
mov
ret
add
push
addr16
mov
orl
jmp
mov
bound
xchg
test
loop
sub
sbbl
loope
cmp
and
sbb
fs
or
push
test
aam
ficompl
mov
mov
push
out
sub
ret
sbb
dec
sbbl
mov
sti
push
int3
jge
sbb
push
xlat
sub
xchg
mov
mov
lds
fidivrl
fs
or
imul
iret
adc
cli
lcall
adc
dec
filds
shrl
and
cmp
push
mov
sbb
lds
roll
dec
push
out
movsb
pop
mov
nopl
inc
sbb
ja
sub
dec
data16
sti
repnz
aaa
jbe
sub
cwtl
mov
popf
or
out
hlt
movsb
cmp
cmp
push
loop
inc
dec
and
adc
stos
das
sub
jbe
scas
fidivl
fdivr
mov
aas
xor
xor
in
xchg
ds
xor
cmc
dec
push
cmpsb
or
loopne
push
les
aas
gs
pop
xchg
add
sub
fsubrp
int
dec
inc
popa
hlt
daa
outsb
adc
fwait
jbe
xor
dec
fbld
jp
bound
or
xchg
cmp
cmp
sub
nop
fldt
lods
dec
rolb
nop
fiadds
dec
adc
movsb
cmp
cs
hlt
imul
leave
sti
aad
test
pop
cmp
js
mov
mov
pop
mov
popf
xor
adc
into
scas
cmp
push
mov
add
inc
push
ret
pop
idiv
inc
scas
lds
aam
dec
pop
and
int
sub
cmp
test
inc
xchg
xchg
xor
mov
js
daa
inc
jns
outsb
cmp
sbb
mov
lret
adc
adc
adc
xchg
cwtl
lret
cs
mov
mov
popa
mov
ret
je
mov
xor
ds
fwait
mov
movsl
cwtl
push
loopne
pushf
ret
out
pop
mov
mov
jne
outsb
mov
push
or
bound
sub
js
cmc
dec
leave
xchg
leave
and
test
xchg
xor
push
mov
sub
and
aas
pop
testb
push
sbb
jo
aas
mov
jge
mov
mov
and
cld
stos
dec
mov
scas
insb
or
pop
dec
jmp
push
mov
out
jp
pop
cmp
call
dec
shrb
lods
and
fwait
sahf
outsl
addl
mov
sarb
je
hlt
sarb
xlat
mov
cmp
scas
loop
ds
push
repnz
fbld
pop
jecxz
popf
inc
stos
add
jns
das
jo
jmp
mov
dec
pop
insb
fistpl
mov
sbb
bound
scas
mov
jmp
jae
pop
fmul
inc
in
sbb
dec
iret
popf
stos
cmp
aaa
mull
or
and
mov
mov
lock
lcall
dec
lahf
cwtl
mov
xlat
adc
or
cmpsb
dec
cli
adcb
or
jmp
mov
enter
test
push
push
cmpsb
daa
inc
jg
movsl
xor
xor
jae
das
push
sub
push
dec
dec
jmp
test
sub
push
sbb
pop
jmp
ret
xor
or
ret
pop
and
leave
xsha256
cmpsb
aad
push
daa
inc
mov
xchg
mov
and
pop
imul
lds
jb
pop
pop
lods
xchg
enter
pusha
sti
mov
dec
push
inc
jg
xor
cli
test
out
insl
push
cmp
adc
push
xor
fistpl
in
add
adc
sub
pop
cmp
mov
filds
aam
adcl
or
jg
insb
pop
rcr
pop
sub
mov
fstp
mov
dec
mov
icebp
xor
mov
xchg
cltd
insb
pop
lock
xchg
adc
insb
push
gs
xor
pop
mov
sbb
popa
daa
or
push
xchg
xchg
mov
cmp
push
icebp
sbb
pop
repz
push
mov
addl
cli
repz
or
les
into
cmp
aas
jae
in
movsb
push
rorb
fisubrs
imul
je
leave
dec
lock
sbb
add
es
mov
cs
lods
add
pop
out
dec
adc
in
dec
push
mov
dec
call
shrb
jl
jb
cmp
ret
punpckhwd
out
and
mov
or
inc
stos
pop
xchg
jnp
test
cmp
xchg
jp
push
mov
pop
popf
pop
push
movsl
les
pop
xor
fdivp
jns
xor
stc
ds
fidivl
pop
fdivs
pop
sbb
arpl
jb
mov
dec
cmc
in
insl
iret
out
xchg
mov
jg
cmp
jnp
stos
lods
mov
icebp
inc
jmp
lahf
pop
push
repz
mov
pop
mov
cmp
fs
sbb
cwtl
daa
loop
ret
sbbl
leave
and
loopne
insl
or
mov
ljmp
lock
loopne
push
fwait
ljmp
mov
or
ret
jg
in
push
lods
fcom
sub
dec
cmp
mov
aas
pop
les
rcl
repz
mov
scas
enter
mov
lret
dec
pop
lret
loope
inc
sbb
stc
push
add
inc
cmp
mov
and
dec
cmp
aam
ja
add
xor
andl
int3
outsb
add
cmp
pop
jb
cld
pop
pop
shll
hlt
inc
arpl
pop
sti
adc
sbb
cltd
jp
or
outsb
in
mov
mov
xchg
sarl
mov
push
inc
inc
ljmp
xor
cld
in
mov
das
dec
lret
das
rcrl
mov
jg
clc
pop
aaa
cmp
in
scas
sbb
or
subl
mov
dec
fbstp
testb
mov
imul
and
mov
mov
xchg
pop
ljmp
test
mov
outsb
add
in
mov
hlt
adc
cmp
ret
enter
test
nop
and
out
dec
mov
or
xlat
pop
je
negb
sahf
and
stc
xor
out
jge
cld
insb
mov
mov
cld
cmp
ret
lahf
or
lea
jle
mov
enter
xchg
loope
cltd
push
cmp
jle
aam
fmull
cld
arpl
dec
jmp
mov
in
enter
in
cmc
dec
rol
in
cltd
mov
mov
pusha
das
add
dec
mov
jge
adc
outsl
mov
dec
out
sbb
inc
inc
cli
xchg
xor
push
pop
add
mov
mov
pushf
nop
jp
mov
insb
push
loop
adc
mov
pop
loop
xor
mov
jns
fcomps
movsb
inc
push
push
int
adc
adc
inc
sbb
int
lds
push
mov
cltd
lods
loop
ljmp
xlat
push
jb
clc
in
jns
fidivl
push
call
in
mov
jo
jl
jne
cmc
cmpsb
rcrb
inc
dec
cs
jnp
jae
cli
pushf
cmp
std
in
jl
imul
mov
ret
and
jno
sbb
outsb
adcb
push
into
insl
jp
pushf
pop
test
adc
cwtl
es
push
xor
and
test
ret
mov
cmc
push
mov
mov
push
push
jl
loope
mov
testb
mov
jge
in
pop
inc
test
fs
fldl
ljmp
mov
loope
sbb
pop
movsb
add
inc
or
add
loopne
jle
mov
nop
dec
cmp
cmp
shlb
mov
mov
mov
orl
out
add
push
xor
xchg
in
xchg
mov
mov
xchg
adc
mov
clc
dec
inc
mov
ror
hlt
adc
sbb
loop
sarb
add
movsl
mov
pop
call
add
push
into
pushf
jno
sbb
pop
cmp
out
out
cmpsl
out
aaa
push
fstl
sbb
xor
insb
push
cmp
outsb
rcrb
mov
push
lea
mov
jno
cmc
pusha
js
mov
pop
jl
xlat
push
aad
sti
js
scas
es
jle
cwtl
ljmp
pop
enter
sub
sub
mov
subl
adc
les
mov
out
mov
rcrb
mov
loopne
fstpl
pop
or
loop
sbb
nop
orps
imul
fsts
adc
fidivrs
icebp
rcll
jl
pop
scas
pop
mov
sbb
jnp
or
jae
dec
adc
loopne
pop
movl
mov
jge
push
sti
dec
mov
or
mov
adc
nop
fnsave
mov
jns
out
shrd
jno
insl
and
mov
dec
xor
adc
jmp
xchg
ljmp
scas
pusha
das
sub
lods
push
sub
dec
inc
out
xchg
add
push
sbb
mov
push
xchg
pop
cmp
test
lret
inc
cmp
jo
push
call
sahf
ret
repz
add
repz
mov
and
xchg
sub
insl
xorl
cmp
push
mov
xlat
xor
sbb
mov
mov
jmp
pop
xor
add
lea
xor
push
dec
mov
cmc
adc
cs
fistps
stos
inc
lea
dec
pop
pop
ljmp
jno
js
out
shlb
mov
ret
jae
jnp
dec
mov
inc
or
kortestb
sub
dec
fcoml
out
add
dec
movsb
push
stos
push
jg
sub
push
mov
jle
imul
pop
fsub
add
dec
sub
sti
out
cmpsl
sub
or
xor
add
hlt
push
mov
xchg
mov
iret
lahf
in
jge
mov
and
inc
xor
sub
icebp
mov
es
lock
fisubl
xor
xchg
pop
xchg
mov
add
stos
push
cmp
cmp
push
andl
ljmp
cmpb
ss
lret
stc
je
in
jnp
push
or
mov
cmp
mov
mov
mov
rsm
sub
cmp
imul
dec
dec
xor
jge
clc
pop
scas
mov
aad
dec
jge
mov
sti
jecxz
sbb
clc
fldt
sub
mov
sub
lods
push
jbe
sbb
push
mov
pop
imul
push
push
cmp
ljmp
or
lret
ljmp
inc
cmp
and
int3
je
mov
into
jg
jg
aas
imul
out
pop
push
icebp
or
xchg
pop
ljmp
mov
leave
sbb
jp
leave
int
pushf
sbb
pop
insb
div
cmpsb
sbb
rcl
add
test
or
jle
mov
jnp
sub
push
divl
sbb
xchg
ja
test
jne
xor
sub
lods
mov
cmp
xor
jl
out
shlb
mov
cli
shlb
cmpsl
add
xchg
jle
shrb
in
push
rcll
fiadds
mov
push
adc
push
sub
call
sbb
add
shrb
in
dec
es
imul
in
aas
lret
mov
cld
pushf
dec
movsl
mov
push
cmp
lret
or
nop
lret
inc
mov
pop
push
xchg
jg
cmpsb
inc
call
push
xlat
enter
pop
sti
into
iret
scas
mov
jmp
inc
cmpsl
fcmovnbe
add
or
add
mov
clc
cmp
push
xorl
stos
aas
jnp
stc
pop
mov
sbb
jecxz
push
testl
mov
nop
cmp
fldcw
movsl
pop
outsl
jns
pop
push
mov
pop
mov
mov
add
cli
jl
xchg
scas
push
mov
rcrb
cmp
hlt
jl
aas
lds
xchg
cmp
orb
sbb
xchg
js
mov
dec
push
push
sbb
xor
jp
or
ja
cmp
dec
stc
sub
ret
pop
in
sbb
jnp
or
js
add
inc
fnsave
outsl
jle
fs
add
adcb
xchg
sub
in
subb
or
roll
in
std
dec
enter
cmpb
add
push
adc
xchg
sbb
jge
icebp
sbb
faddl
es
outsb
lahf
stos
scas
inc
test
cli
les
nop
xchg
mov
sub
sbb
pushf
fildl
mov
adc
mov
arpl
ss
adcb
aas
fsubrs
xchg
mov
or
mov
mov
aam
lret
rcrl
pop
adc
lea
cmpsl
add
mov
sbb
pop
bound
fcomp
or
pop
mov
inc
fsubl
jmp
adc
scas
mov
sub
xchg
push
pop
daa
push
fdiv
es
and
pop
mov
call
cs
or
or
pop
repnz
and
jl
jp
jbe
fwait
sbbl
push
movsl
call
pop
loope
mov
jne
inc
decl
mov
pop
mov
test
jle
aas
adc
call
sub
cltd
stos
push
dec
pop
mov
clc
mov
sub
fs
xor
mov
push
out
push
bound
idivl
pop
xor
test
andb
jno
inc
lret
out
fsubr
inc
push
inc
or
jae
ror
add
sbb
push
daa
jmp
sub
mov
mov
shll
loopne
jno
lods
xchg
sub
bound
insl
push
movsl
mov
add
fcompl
test
or
in
sbbb
roll
loop
mov
mov
shlb
shlb
leave
outsb
loope
scas
push
inc
adcl
movsb
cmp
notb
pushf
and
leave
stos
mov
scas
push
xchg
stos
cmp
lds
sbb
lods
mov
int
out
negl
xchg
inc
xchg
popf
xor
mov
xchg
mov
movsl
notb
arpl
inc
push
adcl
leave
jne
jno
jo
out
jae
test
rcrl
cmp
inc
and
in
stc
fs
enter
mov
push
jae
cld
cmpl
js
addr16
hlt
pop
in
adc
sbb
int3
loop
sbb
std
aam
dec
loopne
divb
insl
push
push
sbb
inc
rolb
out
cmpl
in
rolb
imul
ds
push
mov
xor
scas
cmp
cwtl
xor
lock
sti
addr16
jnp
pop
imul
into
enter
sahf
sub
mov
rcll
add
icebp
jbe
mov
clc
cli
inc
push
xchg
cmpps
xchg
cld
pop
jle
call
push
cwtl
xchg
adc
fsub
mov
pop
lret
clc
jae
jb
sti
mov
xchg
adc
fnsave
mov
cmp
adc
js
daa
ds
movsl
and
iret
ss
adc
push
adc
and
jae
pop
bound
adc
std
xchg
mov
push
xor
cltd
fdivr
sbb
add
jns
sub
dec
cmp
jge
stc
daa
stc
sbb
ret
daa
rclb
dec
inc
fs
std
test
xor
jp
dec
inc
xor
mov
js
pop
pop
stos
sub
sbb
movsl
cwtl
nop
pop
lret
pop
or
loope
mov
repnz
lret
stc
adc
or
dec
out
test
inc
mov
mov
cs
fsubrs
mov
sbb
xor
mov
scas
lock
inc
repnz
xor
jno
loopne
push
aad
in
xchg
cmc
xchg
jge
adc
hlt
ja
sub
in
adc
inc
inc
outsb
std
cmp
xchg
leave
loope
loopne
jns
imulb
pop
arpl
add
mov
imul
movsl
or
mov
fcmovu
dec
cmp
inc
in
rcl
les
xchg
rcr
and
repz
stos
inc
int
jns
in
xor
mov
cmpsl
cmp
hlt
clc
fsub
mov
sub
push
lret
std
cltd
popw
mov
cmp
xlat
jmp
shll
mov
repz
repz
out
jl
inc
sub
jmp
push
dec
flds
or
iret
add
sbb
push
mov
or
ss
mov
dec
fisubrl
fsts
pop
or
fs
insb
mov
jg
les
dec
mov
push
iret
push
adc
imul
mov
dec
dec
fnstsw
cmp
push
push
fsts
pop
sub
gs
mov
out
adc
loop
in
pop
mov
mov
mov
add
pmuludq
fwait
leave
add
cld
xchg
lods
jg
and
mov
filds
mov
std
dec
movsb
shl
pop
mov
pop
cmp
pop
lahf
movsb
inc
add
xorl
add
push
cmp
push
lods
pusha
std
or
push
push
out
cwtl
adc
test
outsl
jbe
insb
pop
pop
lods
fldt
insb
sub
out
lods
ret
out
xor
and
mov
aas
push
sbb
ret
mov
pop
xchg
dec
xor
out
mov
xor
push
insb
popa
jge
negl
aas
jge
insb
cs
inc
ss
cmp
or
popa
pop
aaa
mov
movsl
mov
push
je
mov
push
sbb
shrb
lds
xchg
pop
xchg
stos
ret
inc
dec
push
leave
fs
outsb
stos
mov
cmp
push
sub
stos
mov
jae
cs
lods
int3
push
mov
jae
adc
push
inc
int3
out
call
mov
lock
jbe
popa
test
pop
ret
pop
dec
xor
imul
leave
sub
mov
addb
fimull
cmpsl
jg
int
jl
sbb
aad
cli
mov
cmp
out
fstps
push
mov
fs
mov
mov
inc
adc
jge
movsl
push
leave
outsl
jge
xor
daa
push
cltd
adc
adc
shl
or
repz
xorb
adc
sbb
fs
push
xor
cltd
add
jnp
loope
add
sbb
push
fidivrs
and
lcall
jecxz
push
adc
add
pushf
aaa
lock
es
and
and
fdivrs
inc
dec
push
inc
xlat
iret
pop
cmp
inc
repnz
stos
inc
inc
xchg
push
sub
sarb
aam
push
cmp
mov
dec
test
mov
icebp
mov
add
and
sub
mov
loopne
mov
inc
lret
jl
ret
jnp
es
lods
mov
jmp
mov
popf
adc
and
stos
mov
inc
into
xor
daa
mov
adc
ljmp
push
cltd
add
adc
adc
push
loope
jae
mov
push
lock
movsb
adc
dec
lods
repz
sbb
cmp
in
dec
rorl
mov
and
jg
test
fs
notl
and
nop
pop
mov
cwtl
outsl
jp
fldcw
or
jo
js
pop
xchg
adc
sub
daa
shl
pusha
xchg
xorl
cmp
sbb
mov
out
cltd
mov
ja
pusha
test
or
clc
jnp
sub
xchg
pop
xor
push
sub
or
sti
mov
test
adc
xchg
addb
mov
iret
test
push
scas
mov
mov
leave
push
sbb
xor
cmp
and
popf
xor
pop
fwait
repnz
and
popa
test
or
cmp
xor
inc
fs
pusha
aas
in
fwait
and
repz
mov
cli
and
adc
cwtl
push
das
or
mov
mov
testl
pop
popa
cmp
mov
sti
jle
sbb
jns
cmovbe
loop
sub
mov
pop
xchg
dec
or
out
aad
mov
inc
std
or
jp
sbb
stos
inc
movsl
mov
mov
leave
fs
cs
mov
ja
and
push
jg
hlt
sbb
test
xchg
cmp
gs
mov
push
mov
xlat
cmp
out
imul
mov
add
mov
roll
imul
add
lods
bound
mov
and
movswl
icebp
xor
repnz
dec
sub
test
inc
rol
ror
pmuludq
loopne
adc
inc
pop
dec
push
and
inc
push
aaa
mov
mov
xor
loopne
xor
lods
int3
dec
fistpll
aad
addb
fiaddl
mov
out
jmp
and
sbb
adc
rcrb
in
pop
scas
pop
flds
jae
push
mov
fistps
neg
push
mov
push
in
arpl
cs
ja
filds
pop
sub
mov
inc
push
jbe
inc
test
lret
ret
testl
dec
call
inc
or
outsl
pop
sti
lea
mov
or
add
sub
push
shl
lret
sub
mov
mov
lret
pop
out
pop
mov
mov
add
leave
cwtl
aam
int
and
out
dec
mov
outsl
test
arpl
aad
inc
xlat
test
fmul
lods
sub
xchg
cmp
push
cli
sbb
ss
pop
test
lock
js
daa
push
push
push
aaa
lcall
xchg
test
movsl
mov
ljmp
mov
xor
push
cmp
pcmpgtd
xor
das
adc
lods
mov
fmulp
xor
rcr
cmp
inc
out
push
jno
scas
jmp
das
ja
push
mov
rol
xchg
test
push
ret
push
push
or
add
mov
addb
add
outsl
outsb
or
sbb
pop
insl
call
cmp
push
ss
ds
xor
int3
fadds
dec
pop
mov
jge
xchg
outsl
in
in
and
inc
cwtl
xor
xchg
inc
mov
xchg
xchg
loopne
inc
push
sbb
out
push
data16
adc
inc
add
clc
push
cmp
push
cmp
fdivs
mov
loopne
lods
int3
arpl
lret
int
mov
es
stos
in
dec
cli
pop
mov
sbb
cmp
jl
call
inc
in
cmc
mov
pop
iret
shll
xor
shrb
test
icebp
fistl
lea
and
repz
mov
xlat
sbbb
dec
and
cmc
sub
daa
lods
mulb
out
push
int
test
ds
push
adc
xchg
pop
es
xchg
shrb
out
add
lods
jmp
jle
addl
cmpsl
mov
incl
rcrb
inc
fwait
and
sub
aad
call
loop
int
dec
stos
mov
adc
and
out
insb
inc
popf
clc
fwait
outsb
cmpsl
fdivrs
call
mov
out
xchg
lret
push
jl
jne
pusha
and
ret
pushf
icebp
adc
sub
sahf
imul
int3
fiaddl
dec
cmp
mov
cmp
imul
mov
jmp
cmpb
jmp
mov
dec
cld
lock
fists
jge
jge
rcr
mov
mov
ds
daa
or
lret
cmp
sub
jae
pop
xchg
push
or
loopne
or
cmpsl
mov
mov
cmc
xor
lcall
jns
sub
daa
ficomps
pop
shll
lds
rcl
pop
mov
call
mov
lahf
sub
fidivrs
mov
jns
int3
cmc
lret
pop
out
add
shl
aaa
test
push
daa
mov
rcr
xor
push
cld
push
xchg
int3
enter
jne
or
stos
jns
jne
fsubr
outsl
stos
scas
mov
push
mov
mov
lret
sub
add
push
and
add
mov
pop
or
jae
adc
dec
jo
loop
out
adc
das
stos
push
cmp
in
mov
nop
dec
imul
rcll
pop
or
mov
lock
jo
sub
repnz
inc
std
pop
inc
xchg
dec
aad
rcl
adc
icebp
and
cmp
mov
pop
cmpsl
or
or
pop
or
mov
pop
sub
inc
push
shl
popf
fsubrs
or
push
dec
mov
mov
inc
sbb
jmp
push
cmp
jmp
cltd
xchg
cmp
sub
dec
dec
in
testl
jge
pop
push
ljmp
pusha
jnp
jno
xchg
lahf
mov
popf
pop
xor
shr
cmp
ja
lret
pop
stos
sub
jmp
lea
mov
movsl
stos
lret
and
aam
sbb
jae,pn
adc
push
in
lret
lea
bound
cmp
repz
mov
shlb
add
xlat
jmp
scas
jns
mov
daa
xchg
mov
xlat
fdivs
insl
push
ljmp
jb
inc
add
out
push
icebp
lahf
push
out
cmpps
mov
movsl
jo
jns
outsl
xchg
sub
out
insb
cmp
aad
movsb
push
out
mov
sbb
cmpsl
repz
sub
or
movsl
rolb
and
inc
pop
aas
adc
js
negb
mov
or
add
js
jae
jae
cmp
es
cmc
push
sub
ret
xchg
cmpsl
xor
pop
or
mov
movsb
sub
scas
jno
shrl
sar
in
pushl
pop
dec
loopne
pop
leave
lea
cmp
jg
xor
ds
mov
cmp
cmp
cmc
pop
iret
dec
mov
xchg
test
shlb
push
data16
and
mov
and
cltd
lock
mov
pop
ret
imul
mov
adc
shrb
aaa
outsl
fstl
rep
add
repnz
lock
jbe
mov
mov
or
mov
idivb
into
mov
push
mov
mov
mov
pop
dec
cs
mov
mov
mov
mov
jg
std
or
adc
dec
jecxz
mov
cmc
xor
xlat
pop
mov
and
insl
cltd
gs
cltd
lock
mov
or
push
test
sub
aad
cmc
in
push
aam
sub
pop
fs
push
movsb
push
test
sub
push
js
mov
sbbl
stc
xchg
enter
mov
xchg
aaa
bound
dec
add
dec
push
movsb
add
sahf
rorl
add
icebp
pop
push
je
pop
lret
xor
mov
stc
cmp
mov
lret
sbb
ss
addl
xchg
or
das
cli
sub
shll
add
repnz
in
shrl
test
adc
sub
inc
add
loop
adc
sbb
outsl
inc
cld
pop
scas
cs
xor
out
jb
pop
push
outsl
mov
jno
jns
ljmp
shrb
dec
mov
cs
sti
jne
stos
xchg
mov
adc
xchg
inc
fcoml
lcall
outsl
add
mov
dec
mov
lahf
push
xor
rolb
out
adcl
cli
iret
pop
movsb
xor
and
inc
scas
mov
mov
and
fxch
pop
js
mov
sbb
fdivl
mov
imul
cmpsb
out
adc
xchg
scas
mov
xchg
in
cmp
icebp
mov
pop
imul
and
dec
pusha
mov
popl
mov
aam
repz
ds
mov
cwtl
xor
push
jae
inc
jmp
xchg
imul
mov
or
ss
pop
mov
mov
cmp
mov
jb
mov
lds
ret
movsb
dec
dec
push
fchs
or
mov
pop
in
pop
pop
es
pop
aas
jno
bound
lods
xchg
rcrb
adc
jmp
sti
sbb
mov
push
outsl
iret
dec
leave
subl
popf
dec
inc
push
sbb
stos
nop
cli
aas
imull
sub
mov
xchg
mov
mov
jne
cmpsb
lock
and
fnsetpm(287
mov
movsb
sbb
enter
iret
inc
das
add
lock
mov
xchg
mov
ss
or
fbld
mov
cld
add
sub
nop
repz
lret
xlat
xchg
sub
xor
mov
dec
add
pop
mov
mov
ret
jl
cmc
dec
inc
push
inc
popf
lret
jne
ja
lea
adcb
pop
aam
mov
jo
sub
imul
inc
and
shrb
incl
scas
sub
lock
cld
rcrl
sub
mov
sub
or
cmp
outsb
inc
fstps
sbb
add
and
jge
sahf
push
mov
jecxz
mov
movb
mov
popa
and
stc
pop
inc
icebp
sub
jbe
lcall
sbb
adc
jb
mov
or
gs
mov
mov
cs
pop
xrelease
or
dec
lock
or
rcrl
orb
mov
jp
push
jno
or
jle
xor
fcom
dec
lea
stc
rclb
arpl
jmp
test
push
shrl
stos
test
repz
cmp
jmp
aaa
cs
sbb
and
mov
iret
add
into
bound
jmp
push
or
fcompl
or
cltd
mov
sahf
jmp
cli
or
sub
cltd
fwait
notl
sub
rorb
pop
hlt
icebp
ljmp
pusha
mov
fcoml
dec
pop
test
sbb
jmp
push
loop
stos
add
repz
xorl
arpl
mov
icebp
in
in
sub
aaa
push
shl
ret
mov
les
jle
cmc
ret
mov
jnp
out
adcl
and
int3
jae
std
cmp
mov
mov
or
iret
mov
fadds
pop
outsl
jb
mov
mov
mov
fiadds
fildl
inc
icebp
cmp
fdivl
lret
pop
test
mov
mov
push
inc
xor
enter
adc
pop
jecxz
test
imul
pop
leave
out
out
test
jne
cmp
sub
adc
xor
mov
jmp
loopne
push
push
outsl
push
cmpsb
and
pop
hlt
subb
mov
cli
stos
pop
rolb
dec
push
int
mov
adc
sbb
xor
adc
les
mov
out
stos
mov
xchg
push
mov
mov
mov
cmpl
imul
jbe
dec
mov
mov
cwtl
pop
adc
inc
dec
fisubs
cli
aaa
ss
push
add
add
lds
cltd
cmp
std
mov
and
add
arpl
adc
adc
and
adc
push
jns
int3
popf
movsb
jg
add
mov
xchg
loop
popf
loopne
sarl
jno
out
scas
sbb
pop
push
jno
xchg
mov
loope
nop
adc
in
xlat
int3
incl
mov
add
mov
push
or
jl
dec
cmp
sbbl
pushl
mov
mov
pop
inc
rorb
pop
lea
adc
adc
sahf
icebp
ficoms
mov
xchg
and
in
inc
or
lods
push
fwait
das
jo
call
mov
adc
rcrl
pushf
clc
rorb
jb
rorb
mull
fnsave
jnp
cs
xor
cmp
and
scas
popw
inc
stos
add
and
sbb
xor
inc
mov
dec
aad
push
nop
je
rol
add
adc
cwtl
int3
adc
ljmp
and
repz
dec
jmp
ret
fstpl
rol
and
cmpsb
inc
mov
push
int
iret
inc
ret
lret
add
push
icebp
cmpsb
pushf
mov
sub
and
mov
jb
call
fwait
sub
lahf
shr
or
in
jo
lods
mov
lods
mov
outsb
mov
outsl
ss
mov
lea
xchg
test
push
or
mov
loope
jnp
or
aad
enter
dec
jmp
xor
aam
mov
push
jbe
sahf
cli
rclb
sbb
fwait
cmp
sbb
dec
rol
out
push
pop
sbb
je
sub
mov
and
cltd
std
xchg
lock
sbb
xor
jo
sbb
gs
ret
xchg
js
hlt
pop
lods
sbb
dec
int
pushf
leave
insl
shrb
mov
in
mov
or
adc
dec
rclb
scas
dec
sahf
cmc
cs
fsubs
push
outsb
stc
sub
sbb
ficoml
andb
mov
xor
inc
lock
lods
into
pop
jbe
pop
fnstenv
xchg
dec
in
inc
movsb
dec
loop
ja
inc
cs
lock
pop
inc
shll
cwtl
and
orb
pop
jg
subb
xchg
and
nop
inc
pop
sub
push
sti
and
loop
add
or
jp
inc
movsb
sti
jle
imul
cmp
nop
das
cmc
cmp
cmp
sbb
xor
in
test
gs
in
mov
mov
bound
mov
jne
push
aaa
push
jbe
call
pop
dec
xchg
in
cmp
pusha
daa
scas
cmp
lret
mov
lock
cmp
or
btsl
dec
mov
cmp
sub
xor
mov
mov
in
clc
push
lahf
aam
sub
outsb
std
dec
jne
shl
rcrl
jno
shlb
ds
push
repz
lcall
and
xchg
push
cmpsb
cmp
mov
subb
push
and
add
mov
sbb
test
sbb
cmpsb
fistps
push
ja
jg
xchg
inc
mov
mov
pop
push
jg
xchg
mov
pop
push
push
push
int
push
hlt
adc
push
jne
bound
leave
stos
fs
push
sub
jp
pop
andb
sbb
enter
pop
jmp
jle
std
data16
pop
cli
repz
push
xor
pusha
xor
aaa
inc
ss
push
in
jg
push
cmp
stc
in
xchg
jmp
cltd
in
jecxz
data16
add
sbb
mov
jl
mov
or
inc
add
inc
repnz
and
fnstsw
cmp
cmp
iret
call
test
addr16
and
fs
movsb
cli
xchg
xchg
fiadds
mov
loope
imul
jl
ljmp
testl
xor
push
mov
jne
inc
and
nop
push
and
incw
in
xchg
push
xchg
pop
movsl
inc
faddl
xor
rolb
icebp
add
jb
adc
or
dec
inc
int3
out
jecxz
nop
mov
cs
pop
ja
jle
sbbl
mov
push
ret
pop
test
in
jnp
das
loope
or
lret
gs
adc
push
stos
into
enter
mov
in
loopne
clc
adc
ret
lret
sbb
popf
pop
int
sarl
lret
ret
jns
jns
pop
shrb
cmp
test
in
dec
in
push
sti
xchg
aaa
mov
icebp
lock
sbb
sub
mov
or
repnz
sub
jl
repz
pop
cmc
inc
or
xchg
mov
cmc
mov
or
rcll
out
mov
test
lcall
mov
dec
ss
dec
sub
sub
data16
popa
pusha
cmp
roll
jbe
pop
adc
xchg
inc
pushf
xor
cwtl
mov
push
sub
ret
pop
adc
push
cs
xchg
sbb
add
int
repz
add
addr16
and
jne
outsl
cmp
in
clc
sbb
lea
stos
loope
cmc
shl
icebp
sbb
hlt
cmp
imul
lcall
loopne
adc
aam
push
push
pusha
and
add
fdivl
push
clc
xchg
loopne
sahf
clc
fildl
inc
xchg
mov
cs
lea
and
fsubr
xor
pop
jmp
sub
add
mov
dec
push
cmpsl
push
lahf
cmpsl
xchg
je
fldcw
push
xchg
ficoms
cmp
mov
or
lods
dec
sub
pop
xor
popa
fwait
lahf
push
js
jp
je
lahf
int
xchg
mov
push
dec
rcl
lods
int3
fsubrs
test
mov
cmp
movl
xlat
jmp
sahf
xorl
inc
add
aas
dec
fisttpl
or
je
int
inc
fs
dec
rcll
jno
jno
mov
lea
mov
fmul
xor
mov
std
cltd
jnp
or
outsb
in
xor
fisubs
lea
mov
adc
xchg
clc
sub
mov
js
lock
inc
loop
adc
jg
loop
mov
pusha
pop
inc
loope
xchg
call
or
add
xor
in
lret
sub
aaa
or
cmpl
pop
or
add
fnsave
scas
je
aam
adcb
pop
out
out
loopne
mov
adc
int
bound
cltd
js
push
je
iret
push
jg
shrb
iret
fsts
dec
cmp
dec
iret
fsts
and
add
out
ja
add
iret
push
mov
sbb
push
dec
cmpsl
push
sarl
sub
push
cmp
jmp
add
cmp
ss
mov
dec
enter
xorl
lods
push
jnp
enter
push
imul
mov
mov
js
rcrb
decl
lret
bswap
push
je
cld
cmpb
pop
cltd
jnp
and
adcl
mov
lret
jnp
xor
mov
arpl
pop
lcall
lret
or
mov
clc
dec
lock
inc
sbb
or
inc
lahf
pusha
inc
subb
xlat
jb
or
cwtl
adc
stc
nop
rclb
cmp
popa
dec
iret
iret
mov
inc
sahf
add
loope
or
and
push
pop
lock
or
sub
sti
pop
in
insb
ret
jle
stc
or
out
repnz
mov
sbb
push
iret
lds
leave
xchg
mov
and
and
loop
enter
jge
test
imul
loopne
pop
scas
insl
testl
push
xor
push
or
push
out
lret
xchg
fs
mov
into
pop
sbb
xchg
sub
arpl
inc
fbstp
add
and
pop
cmp
les
xlat
push
jo
xchg
pop
dec
add
jb
cmpsb
mov
cmp
movsl
popa
fldt
call
sbb
daa
leave
jle
jnp
cmpsb
xor
and
mov
xor
std
mov
rolb
lcall
and
or
lods
mov
aaa
cmp
or
aad
cld
sar
stos
jmp
jp
fiadds
es
rclb
xchg
xor
out
sbb
xor
mov
outsl
cmp
adc
popa
and
outsb
stos
mov
fcmovbe
jl
mov
mov
jl
movsb
mov
and
icebp
orb
jns
mov
mov
imul
inc
call
ja
mov
push
or
mov
add
sub
sub
jp
cmc
inc
sti
loop
lcall
jb
out
sbb
repnz
divl
movsl
add
rcll
mov
or
cmp
pop
adc
cmp
hlt
mov
popa
mov
push
push
stos
push
pushf
addr16
inc
pusha
add
enter
aaa
cmpl
jle
stc
ljmp
cld
fmull
hlt
dec
mov
mov
lea
pop
mov
xor
in
mov
push
into
mov
lret
push
mov
mov
pop
jb
div
jne
dec
cmp
dec
idivl
dec
std
fwait
jno
or
clc
xchg
adcl
pusha
fisubrs
lret
or
inc
lret
fisubrl
mov
xchg
mov
int3
xor
mov
mov
mov
and
shlb
mov
jo
inc
outsb
or
xchg
or
imul
pop
out
mov
loope
out
adc
pop
icebp
out
xorl
inc
sbb
push
pop
lods
out
and
add
push
repz
xchg
je
pop
clc
scas
inc
sub
pop
jmp
and
dec
cmpsl
ret
jl
shr
daa
jp
mov
dec
scas
sub
push
cmp
cmp
enter
or
jnp
inc
mov
aaa
cmpsb
add
test
sub
mov
inc
sub
ljmp
cmc
push
push
jecxz,pt
jo
mov
mov
inc
mov
adc
lcall
inc
dec
pop
jmp
in
int3
fisttpll
lahf
into
incl
cmp
ds
inc
cmp
mov
loopne
test
fldenv
cmp
std
xor
mov
cmp
clc
lcall
fisubs
sub
fucomi
add
mov
mov
out
push
jbe
mov
mov
push
xor
pop
dec
and
pushf
movsb
mov
sbb
les
and
mov
pop
cmpsb
addl
sub
xchg
pop
jmp
xlat
mov
pop
dec
push
mov
int
sti
int
mov
nopl
in
lds
shlb
push
mov
jle
jl
xchg
loope
lds
mov
xchg
inc
pop
mov
cmp
add
inc
js
stc
sub
cmp
hlt
pop
xchg
pop
xchg
jae
pop
cs
das
mov
aaa
hlt
sub
lds
inc
int3
pop
inc
xchg
adc
ds
add
xlat
pushf
jecxz
sti
notl
cmp
dec
dec
add
gs
in
sub
cmp
mov
or
cmp
push
dec
es
sub
enter
cmpsl
in
push
and
push
push
or
daa
mov
adc
dec
jo
imul
mov
roll
repz
push
cs
imul
das
cmp
js
lcall
pop
jo
mov
data16
scas
aaa
lahf
je
into
xor
jno
xchg
out
xchg
ret
xchg
ficoms
cmp
movd
xchg
out
cwtl
and
xlat
cmc
mov
lods
cmp
testl
push
mov
in
adc
js
sub
or
rorb
push
mov
sbbb
imul
shl
or
cmp
lahf
daa
test
xcrypt-cfb
cmpsl
movsb
dec
pop
dec
out
jecxz
jle
idiv
push
popa
sbb
jg
lret
lock
cmc
dec
jne
cmp
xorl
jbe
in
xchg
hlt
das
cmp
add
je
mov
loop
movsb
or
mov
fisubrs
cltd
push
mov
repz
sub
repz
and
xchg
jns
xchg
sub
out
mov
and
insl
xor
jnp
mov
orl
or
mov
out
inc
xchg
and
popf
es
rorb
test
xchg
lods
and
xchg
mov
jle
test
adc
dec
dec
fmull
shll
jnp
mov
sub
int
rorl
and
cmp
mov
xchg
inc
pop
xor
mov
lcall
ja
xor
pop
mov
lret
popa
stos
andb
jae
out
mov
sub
leave
add
inc
add
xchg
pop
or
ds
jg
aam
outsb
mov
out
into
les
outsl
jae
push
fildl
mov
dec
cmpsl
rorl
sti
test
jnp
std
cmp
mov
sub
icebp
and
es
outsl
sub
icebp
push
fcmove
and
adc
adc
mov
xor
add
pop
frstor
mov
mov
xor
jo
adc
pusha
fisttpl
and
sahf
fsubrl
test
scas
jbe
lock
cld
mov
and
stos
sti
cmpsl
mov
pop
or
add
scas
out
and
add
sti
repnz
imul
adc
ds
outsb
rolb
pop
movsl
and
add
popf
ja
daa
inc
mov
js
fisubs
push
call
cmp
adc
xor
iret
jbe
loopne
stc
and
adc
xor
pusha
and
mov
mov
add
ljmp
nop
imul
in
ficomps
mov
adc
icebp
adc
cs
jne
mov
fwait
fs
inc
mov
mov
iret
mov
jae
cmpl
dec
jne
imul
sub
xchg
fcmovne
cld
jns
xor
push
xchg
inc
mov
inc
jb
inc
pop
push
movsb
mov
fdivrs
mov
cmpsb
adc
jno
push
xchg
cmp
mov
add
jecxz
call
inc
inc
fwait
shll
sarl
mov
jge
and
push
out
test
push
xchg
mov
rcrb
imul
inc
mov
inc
fisttpll
cld
rcl
ds
dec
insl
rorb
mov
add
add
xchg
hlt
popa
and
fistpl
mov
sbb
mov
push
call
add
daa
mov
jle
notb
bound
sub
pop
mov
jmp
fiaddl
cmp
dec
outsl
jg
rcll
mov
sub
xorb
lcall
fnstcw
mov
add
sub
xchg
subl
cld
mov
and
sub
sub
sub
call
mov
iret
icebp
add
fldt
fdivrs
fsubrs
adc
pop
cmp
cwtl
clc
call
daa
cmp
popf
lods
les
pop
les
insb
aam
int
dec
lret
adc
sbbl
jl
imul
out
imul
out
lret
int3
fdiv
pop
fucomip
pop
adc
ljmp
adc
in
fwait
out
daa
outsl
mov
xor
fs
add
mul
xor
mov
dec
mov
imul
cld
push
pop
jle
xor
jl
xorb
enter
popa
clc
cmp
call
fistps
add
inc
std
das
fstps
ret
inc
and
sub
push
jmp
jge
mov
push
movsb
jae
ljmp
mov
inc
ret
subl
sti
into
repz
push
leave
push
jne
sarl
mov
inc
aad
cmp
repz
maxps
pop
sti
xor
dec
popf
xor
in
lret
xchg
bswap
mov
sbb
inc
adc
test
lret
sarl
or
stos
dec
andb
stos
and
xchg
mov
push
divb
push
cmp
fcmovne
push
shll
mov
lret
in
sub
loopne
repz
fldenvs
sbb
adc
jl
out
cmpb
cmc
cwtl
bound
xlat
repz
mov
rcll
sbb
or
xchg
enter
cmpsb
or
gs
xchg
push
adc
mov
dec
adc
mov
adc
sub
cmp
ficoml
pop
jns
out
push
jg
and
pop
imul
xlat
cmp
pop
orl
fidivrs
lcall
idiv
xchg
fildl
cltd
jle
rorb
fdivl
push
mov
mov
cli
push
pop
stos
cmpsl
ret
mov
push
or
outsl
sarb
loope
daa
push
jbe
sahf
push
inc
dec
and
rorb
stos
push
sub
test
int3
sbb
leave
xor
shll
sub
repz
les
ss
cli
sbb
adc
inc
test
xor
inc
fs
xchg
data16
roll
pusha
popf
mov
gs
lock
in
mov
or
mov
loope
sub
orb
hlt
or
or
mov
push
es
pop
dec
mov
dec
shlb
xlat
fdivs
cs
shl
cmpsl
mov
jmp
sbb
psubusb
into
cmp
loope
sub
jl
cmp
xor
jbe
out
cmpsl
add
daa
aas
jp
dec
cmp
mov
jge
cli
loope
pop
insl
ja
add
stos
nop
scas
mov
andb
rcr
icebp
dec
iret
aas
scas
js
mov
pop
mov
cmpsb
dec
movsl
push
add
outsl
push
or
hlt
int3
mov
xlat
dec
in
push
stc
popa
ret
movsl
js
xor
adc
ljmp
fmul
jno
mov
in
scas
cmp
push
sub
push
shlb
add
lret
mov
cmp
inc
adc
sbb
adc
fdivs
fs
mov
xor
enter
push
jnp
mov
lcall
in
mov
jmp
jle
mov
sahf
add
in
inc
xor
pushf
scas
inc
in
inc
aas
dec
lock
movsb
out
int
sbb
add
add
lahf
nop
xorl
jmp
mov
clc
addr16
mov
pop
fcoms
jb
xchg
sbb
jp
add
lahf
push
xor
xchg
mov
push
sbb
xchg
paddq
mov
ret
stos
lock
cmp
arpl
imul
mov
xchg
xor
loopne
push
call
push
out
rorb
or
andb
andl
insb
les
nop
inc
mov
sbb
cmp
push
pop
or
sbb
es
pushf
idivl
stc
or
ficompl
aaa
xlat
repz
fisubrs
mov
in
rolb
xor
xchg
pop
enter
ds
mov
mov
in
sbb
add
mov
rcrl
es
push
cs
inc
js
loop
addl
inc
incl
add
mov
jb
inc
jecxz
and
imul
lock
insb
mov
in
xor
into
sbbl
adc
inc
push
divb
lret
jne
stos
into
push
xor
push
ficomps
repz
loope
les
mov
dec
dec
mov
popf
push
cmp
das
inc
pop
add
shll
cld
pop
dec
jmp
push
push
mov
ror
bound
sub
sub
lret
int3
in
dec
mov
stos
fcmove
jae
rcr
scas
mov
cmp
pop
or
xlat
sub
adc
fidivrs
sbb
rcrl
push
xchg
pushf
xchg
jns
enter
aad
sti
jns
mov
in
test
cltd
push
jno
or
mov
add
fildll
mov
lret
cmc
mov
call
iret
add
or
add
imul
cmp
sbb
push
xor
mov
cld
jb,pt
pop
mov
add
cmc
fisubs
adc
jno
testb
push
mov
push
fnsave
lods
cmp
fstpt
sbb
aaa
into
bound
daa
arpl
push
push
lock
mov
jno
jecxz
fimull
repz
pop
gs
cmp
inc
pusha
cmp
xchg
mov
cmp
adc
mov
jl
and
popf
dec
dec
xchg
push
mov
push
es
scas
pop
lods
mov
pushf
std
in
jns
out
ss
push
cs
mov
lock
or
ficoml
mov
mov
in
adc
dec
js
cld
in
sti
xor
dec
and
inc
mov
add
in
sbb
sarl
cmp
pop
xchg
pop
outsb
test
sti
pop
jbe
adc
lock
aaa
sahf
loopne
es
sub
int
sbb
aad
call
pop
stc
push
cmp
les
jge
add
outsb
shrb
cmp
arpl
out
cmp
inc
fimull
sti
lret
rcrb
sbb
adc
jb
sbb
jno
and
cmp
mov
enter
sub
or
loope
dec
fucomip
fisubl
push
and
inc
cmp
stos
mov
fidivl
push
sbb
dec
sub
in
or
or
mov
ds
fcoms
shlb
pusha
lods
push
mov
mulb
add
and
add
jns
punpckhbw
pusha
movsl
repz
out
pusha
or
lea
lret
inc
add
fwait
xchg
inc
mov
shlb
jno
jne
mov
or
adc
arpl
hlt
lcall
sub
popf
push
stc
mov
punpckldq
jo
xor
movsb
fsubrs
xor
loopne
adc
jg
jmp
iret
stos
in
popa
imull
mov
or
cltd
movsb
mov
pop
dec
in
ret
stos
jae
jne
mov
clc
lret
cmp
stc
nop
sbb
cmp
int3
jmp
adc
repnz
add
adc
sub
fwait
orb
jl
cmpsb
cmpsb
movsl
sbb
cmp
lret
lcall
jne
imul
mov
shlb
xchg
mov
pushf
cli
dec
and
cmp
push
popf
fistpll
mov
movsb
lea
jl
ss
and
pop
hlt
xor
pop
jge
sub
push
std
out
aaa
lcall
inc
std
sahf
fisubs
pop
dec
in
push
xchg
pop
and
add
movsl
mov
cmp
pop
in
pushf
rol
mov
repnz
adc
push
dec
loope
adc
dec
push
clc
negb
sti
jbe
popa
iret
pop
scas
jne
pop
std
push
dec
std
dec
mul
jnp
rcrl
loopne
outsb
out
mov
loope
xor
std
lds
xchg
jmp
dec
mov
mov
push
cmpsb
mov
leave
pop
xchg
and
out
and
cmp
xlat
push
sbb
lahf
imul
test
jns
pop
mov
dec
jg
jo
sub
scas
mov
mov
and
push
add
mov
xor
test
fisubl
pop
jecxz
cmp
imul
push
cmc
mov
andnps
int
mov
mov
jle
pop
jb
push
and
and
and
xor
decl
stos
adc
stos
inc
movaps
push
ret
lods
and
lock
dec
ja
jge
call
jge
repnz
pop
jns
out
mov
test
leave
xchg
popa
cmp
cmpl
repnz
les
jmp
std
icebp
adc
mov
and
or
insl
mov
mov
inc
push
jae
inc
aam
push
ss
hlt
arpl
and
adc
sub
and
aad
add
jno
xchg
push
js
dec
scas
jns
pop
ret
cmp
ss
pop
jecxz
out
inc
mov
cmp
movsl
jo
jae
loope
jp
cmc
push
or
cmp
adcb
leave
push
xor
xchg
mov
lret
cmpsb
stos
xchg
popa
ja
mov
insb
sbb
pusha
sti
dec
jo
hlt
push
cmp
sub
rep
push
mov
jl
scas
movsb
adcb
mov
sbb
ret
dec
stc
adc
pop
je
inc
int3
adc
jmp
aaa
outsl
aad
outsl
iret
cmpb
pop
cld
xlat
nop
sbb
add
mov
imul
popw
into
mov
adc
notl
inc
add
dec
fldt
sbb
ds
or
push
std
insl
pushf
addr16
dec
xor
jl
mov
jmp
sti
inc
les
mov
negl
imul
jns
mov
pop
mov
xchg
in
lods
je
rorl
dec
hlt
ret
aas
sahf
sbb
add
mov
push
xchg
fcomip
push
xor
lea
ficompl
pusha
lea
rol
mov
cmpsb
push
out
jmp
or
daa
xchg
sbb
pushf
ret
repz
mov
pop
jge
adc
insb
jle
addr16
pop
loope
mov
sub
dec
imul
xor
loop
sbb
or
imul
mov
push
addb
out
mov
mov
aas
push
mov
add
adc
or
es
cmpsl
ds
out
pushf
fadd
lea
pop
cli
sub
cs
mov
arpl
insb
cmpsl
jno
les
xor
std
mov
lcall
and
iret
arpl
rorl
cmp
xor
inc
ret
mull
mov
insl
xor
pusha
into
xor
js
sbb
aaa
push
bound
jo
pop
rep
sbb
mov
mov
adc
cmp
pop
push
and
and
xor
mov
popa
and
ret
jae
and
dec
shrb
out
cmp
mov
mov
inc
cmc
std
jmp
movsl
mov
popa
inc
xlat
push
lea
bound
and
iret
sub
addr16
in
add
popf
jns
dec
fdivs
and
sbb
int3
pop
mov
jmp
clc
push
addr16
loope
inc
test
cmpsb
push
mov
sub
repz
push
cmp
pop
out
insl
stc
shrb
lock
cwtl
add
pop
push
je
pop
xchg
mov
sbb
rorl
jp
out
pop
jno,pt
outsb
xchg
pop
outsl
sbb
idivb
lock
and
sub
push
push
mov
xchg
jno
add
xchg
push
call
icebp
enter
push
jmp
fiaddl
cmp
jp
call
adc
pop
mov
inc
and
int3
lock
sbb
int
ret
data16
insl
mov
sub
mov
xor
mov
fildll
mov
shll
sbb
xchg
and
inc
imul
dec
outsb
mov
out
pop
mov
push
xor
push
fstps
cwtl
mov
push
ljmp
testb
rorb
iret
adc
mov
push
mov
out
cmpsl
gs
mov
into
mov
xorb
test
dec
and
ficoml
sub
sub
rcll
sub
lds
popf
bound
dec
lock
jnp
ja
popa
aaa
mov
push
pushf
jmp
dec
fisubrl
testl
adc
in
pop
loopne
sbb
mov
adc
in
cwtl
icebp
sti
enter
add
ret
pop
mov
mov
inc
push
int
gs
js
inc
cltd
adc
ret
add
roll
sbb
jg
popa
jns
pop
inc
fmul
stos
inc
fstp
ljmp
mov
fmul
jno
cmpsl
jl
sbb
std
mov
and
std
jmp
xor
push
loope
lahf
xor
outsl
test
das
mov
call
ss
dec
movsl
cld
mov
lret
xor
ret
or
cmp
mov
cli
or
mov
bswap
flds
jnp
popf
xor
fldz
in
adc
push
fistpl
xor
imul
add
mov
int3
lret
lret
pop
jl
push
mov
and
shll
mov
test
pop
dec
mov
les
arpl
add
mov
jae
fbld
imul
pop
sbb
scas
cmpl
inc
pop
or
out
xlat
movl
pushf
inc
inc
inc
aad
dec
cmp
testl
js
cltd
jl
xor
iret
jmp
les
enter
xchg
loope,pt
add
scas
pusha
fsubrl
and
push
or
inc
arpl
sahf
jo
aam
jbe
aas
cmc
nop
stos
cmp
bound
adc
jnp
fnstenv
push
lods
and
pop
test
dec
and
adc
and
push
dec
mov
dec
in
movsl
mov
insb
xor
iret
push
adcb
daa
mov
stc
test
loope
cmpsb
jge
pop
mov
out
out
repz
repz
mov
xor
test
popa
jg
cmp
cld
in
lds
orl
rcr
pop
adc
jae
pop
mov
dec
loopne
jg
sub
fistps
xchg
sub
pop
in
testb
mov
pop
mov
cmovne
mov
or
jns
sbb
pushf
scas
mov
cmc
mov
jle
mov
cmp
inc
dec
cmp
ret
dec
mov
in
cltd
call
popa
lret
adc
adc
inc
lret
adc
push
rcrl
xor
shrb
push
jle
push
pushf
inc
cmp
inc
fs
clc
or
dec
xchg
mov
inc
call
int
inc
js
ljmp
sahf
mov
dec
mov
js
leave
popa
add
fwait
mov
sbb
minps
pusha
in
insl
inc
mov
fdivl
lods
out
test
cld
or
and
ljmp
add
xor
sbb
div
sbb
xchg
popa
fmuls
jbe
lock
cmpsl
test
mov
mov
mov
mul
nop
push
dec
daa
lcall
pop
mov
mov
test
shlb
bound
iret
ds
jne
or
pop
add
push
xorb
adcb
adc
insl
scas
enter
sbbl
add
mov
je
in
repz
int3
in
sbb
push
lahf
mov
adcl
push
sahf
cli
jno
jo
out
add
or
push
or
enter
clc
sbb
ficomps
jmp
push
xor
js
std
loope
sub
iret
push
sub
and
adc
xlat
dec
xchg
ja
xchg
dec
jg
xor
jmp
lods
aad
jb
mov
roll
xor
daa
jle
sbb
popf
outsl
jnp
jbe
iret
stos
int3
push
mov
dec
push
sub
test
mov
jns
mov
pop
subb
xor
lahf
jp
xor
mov
and
push
bound
in
js
pop
stos
cltd
scas
inc
lret
pop
mov
int3
arpl
sar
inc
fdivrl
mov
sbb
dec
mov
xor
jmp
stc
inc
mov
outsb
sub
jecxz
inc
mov
popf
xor
push
dec
xchg
popa
aad
loopne,pt
insb
fsubrl
pop
or
push
xchg
dec
inc
fidivrs
jae
pop
pop
gs
fisttps
imul
hlt
pop
jae
divb
sbb
ret
cli
pop
in
outsb
fisubrs
jns,pt
pop
cmp
fisubrl
addr16
repz
pop
cmpsl
inc
push
or
mov
leave
lret
aam
xchg
sbb
push
ljmp
jno
jl
data16
daa
lahf
xor
iret
sbb
push
add
push
mov
adc
pop
xor
inc
mov
push
xchg
xor
scas
push
das
mov
cmp
mov
xor
inc
das
rcl
fstl
sbb
xor
and
add
test
scas
shrb
cs
jg
pop
je
inc
mov
push
add
sbb
arpl
outsb
test
jl
and
cmp
shl
movl
test
dec
cmpsb
lea
in
ficoml
aas
pop
hlt
jo
movsb
daa
test
xchg
scas
push
lret
add
xchg
inc
in
cld
mov
and
cwtl
lret
mov
xor
inc
imul
cmpsl
jle
push
cmpb
add
jl
popa
imul
xor
int
pop
pop
aas
or
rcll
dec
sti
repz
in
mov
repz
cmp
nop
lret
xorl
jo
aas
call
popa
xor
mov
scas
mov
sub
rcrb
mov
and
and
fwait
sbb
aam
aaa
pop
in
cs
imulb
pop
fmul
push
or
adc
pusha
xchg
ljmp
ds
mov
mov
push
cmp
nop
jmp
iret
addr16
ret
xchg
popf
into
sbb
adc
xor
aam
mov
or
pop
imul
mov
test
push
inc
push
xor
sub
cli
jmp
scas
cmc
pop
cmpsl
scas
loopne
sbb
jle
add
cmp
inc
popf
add
push
jmp
dec
lcall
in
cmp
out
test
fldt
mov
stos
mov
push
adc
adc
bound
and
daa
fstpl
loopne
and
add
pusha
negl
add
sarl
das
xchg
pop
and
push
insl
pop
test
addr16
pop
xchg
jle
cmp
mov
inc
xor
ret
mov
cmpsl
in
jmp
out
cmp
push
and
mov
adc
inc
js
dec
and
push
notb
pop
xchg
mov
outsl
and
clc
cmp
xlat
into
jae
sub
out
les
mov
cmp
cmp
jle
int3
add
aaa
push
pop
ja
mov
mov
adc
pop
inc
mov
cli
pop
pop
mov
add
pop
mov
lret
call
pushf
xchg
jo
cltd
test
xchg
pop
jne
popa
fdivr
mov
imul
movsl
dec
cli
xchg
js
leave
mov
push
jns
clc
and
cmp
negl
sub
test
jge
xchg
xchg
dec
dec
js
fwait
test
dec
jecxz
jg
call
mov
lds
int3
fistpll
cmpl
rorb
lea
push
sub
repz
les
stos
mov
dec
or
mov
fnstenv
jg,pn
out
mov
cs
pop
xchg
cmc
lds
pop
inc
addr16
pushf
push
loopne
dec
fmul
sub
flds
add
sbb
push
fs
lock
popf
push
jmp
dec
lcall
inc
outsb
call
or
fimuls
xor
mov
loopne
jne
cmp
cmpsb
cmp
jno
inc
loop
sbb
and
jl
or
jge
fistpl
mov
inc
add
mov
cmpsl
int3
cltd
scas
add
dec
mov
in
sahf
fldcw
xor
idivb
pop
mov
sbb
cmp
mov
fldcw
imul
jmp
mov
sbb
cld
mov
lods
loop
adc
hlt
mov
lret
mov
aaa
push
das
stos
cld
aad
jp
mov
fwait
pop
cmp
frstor
or
pop
lods
stos
cmpl
xlat
stos
shrb
add
xor
fidivl
jns
push
mov
inc
ret
or
jle
sub
push
mov
add
lods
cmpsb
jecxz
fxch
sbb
aas
sub
pop
mov
pop
fstpt
stc
inc
mov
fstpl
xchg
mov
inc
sub
mov
cli
loopne
xor
jo
popa
cmpl
fwait
inc
addb
bound
push
xor
and
dec
adc
cld
lret
test
and
jmp
div
pop
push
cmp
sbb
imul
sti
xchg
jno
push
sub
fisubl
movsl
inc
or
lret
sub
xor
xor
cwtl
and
test
insl
popa
fnstsw
sbb
cwtl
cmp
and
cmp
mov
sarl
mov
cmp
loop
pop
shlb
hlt
rcll
jne,pn
fistpl
xor
sub
iret
stc
jmp
or
lcall
test
das
mov
mov
sbb
mov
out
sbb
adc
dec
ret
lret
sbb
nop
test
mov
fists
daa
mov
stos
test
inc
ljmp
test
bound
dec
out
jns
inc
loop
insl
add
ds
add
jge
shl
hlt
imul
or
leave
into
pop
push
pop
xor
jns
shlb
add
pop
xor
dec
pop
push
jecxz
jb
sub
out
xchg
jns
fisttps
and
icebp
inc
ljmp
pop
cmp
dec
out
dec
and
int
pop
xlat
or
fisubrs
roll
into
cltd
xor
in
jmp
lret
jecxz
fdivl
jmp
fsubrs
jecxz
rcll
sbb
xlat
lds
dec
mov
sahf
jne
mov
cld
sub
repnz
fisubs
push
mov
setne
das
fdivrl
stos
dec
mulb
mov
push
xchg
sbb
sahf
jb
mov
es
nop
mov
add
inc
cmp
int
cmpsl
mov
call
dec
xchg
dec
int3
pop
jo
scas
loop
push
and
cmp
mov
fistps
push
jmp
push
stc
dec
cmp
jl
lds
mov
push
outsb
ja
in
leave
add
xor
testl
jl
outsb
add
test
jge
cmpsb
push
sub
cld
inc
insb
jae
dec
movsl
or
inc
mov
shrb
add
cmpsl
mov
cmpsl
aad
test
lods
sbb
ja
add
loop
lahf
pop
mov
es
enter
lahf
mov
or
mov
les
inc
cmpsl
jno
or
imul
pop
xor
inc
lods
iret
sub
or
adc
pop
inc
fisttpl
test
in
stc
inc
push
jno
mul
sti
or
sbb
pop
cld
inc
adc
adc
sahf
pushf
out
xchg
sub
inc
das
fsubs
push
call
jmp
mov
daa
jbe
push
mov
mov
ret
jle
lock
and
cmc
mov
xorl
pop
lods
mov
adc
mov
out
add
lahf
xchg
add
adc
cmp
cmc
jp
jns
ficoml
jns
jnp
rcrb
dec
adc
adc
push
jne
push
inc
or
dec
mov
add
loop
aam
sbb
adc
arpl
cltd
push
cmc
mov
cmp
mov
jp
roll
mov
jno
outsl
and
ds
mov
cmc
nop
dec
sbb
pop
repnz
jbe
pop
sbb
dec
jl
es
sahf
movsb
jae
xchg
pusha
lret
shrb
push
add
popf
test
or
and
scas
adc
fmull
cmpl
outsl
xlat
test
nop
fisubl
ret
mov
movsb
jo
fwait
sub
faddl
jb
rorb
push
rcrb
xchg
xor
sub
out
pop
lods
add
call
mov
xchg
bound
js
dec
icebp
sub
pop
inc
jmp
pop
sub
fdivl
cli
cmpsl
ret
movsb
ret
and
xor
cmp
push
fldcw
lcall
mov
sbb
push
stos
imul
pop
adc
xor
cli
xor
mov
setbe
lcall
fstpt
mov
push
loop
mov
pushf
mov
insl
xor
sahf
aam
jg
push
ljmp
sub
mov
sbb
ja
jb
sahf
dec
out
rclb
or
dec
xlat
popf
mov
pop
dec
mov
mov
sbb
repz
pop
xchg
rclb
pop
ret
adc
jle
in
inc
ljmp
insb
sbb
dec
xor
adc
lock
mov
sti
stos
test
mov
test
je
xchg
popf
mov
sub
in
and
stos
add
jno
mulb
out
mov
cmc
cmp
pop
xchg
int
jle
sahf
out
jo
cmp
mov
in
push
dec
pop
cmp
fwait
sub
add
idivb
sbb
sti
lods
outsl
push
adc
jne
sbb
fisubs
icebp
adc
inc
int3
push
mov
push
inc
repnz
add
test
jns
out
push
inc
mov
rcrl
aas
cwtl
adc
sbbb
mov
jo
pop
imul
jne
out
inc
xchg
sbb
or
int
cwtl
pop
cwtl
add
fldcw
push
subl
add
lea
adcl
sbb
sbb
test
xchg
mov
stc
ljmp
iret
mov
packuswb
sub
inc
mov
test
aad
jo
mov
jl
shrl
xor
lock
imul
inc
jb
idivb
adc
adc
or
xor
xor
mov
push
jae
fstpt
or
push
lock
loopne
popf
daa
outsl
fwait
or
jle
mov
add
adc
pop
stc
pop
lds
jp
loope
dec
push
jecxz
sbb
mov
data16
repnz
hlt
cmp
add
mov
cmp
push
fstpt
rcrb
xor
mov
ret
stos
jmp
out
mov
push
or
cli
dec
inc
les
std
jle
popf
cmp
pop
ljmp
mov
inc
and
clc
rcrl
xor
jnp
mov
sub
and
iret
push
adc
inc
xor
js
and
sub
pop
inc
xchg
adc
mov
js
lcall
stc
pop
ret
rorl
and
push
push
cmp
add
outsb
sub
lock
pop
or
test
data16
lods
adc
and
mov
cmc
lret
js
mov
push
test
insb
push
je
enter
mov
xchg
push
cmc
stos
xchg
or
mov
push
fidivl
pop
push
mov
notl
addl
mov
in
je
imul
push
inc
lods
aas
push
daa
ret
subl
jno
aam
push
aam
dec
testb
pop
scas
add
mov
shlb
out
adcl
cli
sub
mov
push
dec
fistpl
cmpsb
xor
aam
add
mov
pop
sbbl
cmc
mov
loope
push
adc
dec
scas
imul
gs
nop
adc
stos
test
and
push
inc
lret
sbb
add
cmpsl
insb
jno
xor
jl
dec
rcl
sbb
nop
mov
or
rcl
in
negb
mov
xchg
pushl
adc
inc
inc
push
inc
gs
lret
push
inc
int
cmpsl
jns
loop
dec
mov
lock
into
and
inc
push
fcoml
mov
imul
std
imull
shlb
cwtl
mov
fcompl
mov
in
out
adcl
mov
mov
mov
shrb
enter
adcl
add
jbe
fwait
sub
nop
test
mov
pop
jecxz
es
xor
shlb
mov
xlat
sbb
sub
mov
xor
xchg
fdivl
pushf
sub
jb
push
lea
push
imul
es
test
mov
fimull
mov
xchg
dec
cmpsl
out
mov
lods
shlb
jge
mov
dec
repnz
aad
adc
sub
push
bound
movsb
and
push
loop
or
ret
notl
outsb
cmp
inc
mov
mov
das
test
and
mov
ljmp
lods
cmpsb
adc
jl
xchg
sub
jg
jne
inc
inc
dec
jb
mov
fwait
shrl
mov
mov
inc
lock
xchg
aas
jecxz
or
cmp
xor
jecxz
cmova
adc
adc
adc
sbbb
cmp
adc
add
sub
push
movsl
push
mov
es
lods
pop
dec
into
insl
test
das
xchg
insl
fdivrs
stos
jno
sarb
shlb
rol
inc
cmp
cmc
jmp
inc
daa
mov
iret
lret
sahf
lods
inc
in
sti
ret
int3
add
iret
fildl
add
and
shlb
or
shl
cmp
push
inc
subl
int
lods
int3
and
sub
or
lcall
repz
cmc
int3
aas
out
pop
cmc
sbb
aas
jl
lods
or
scas
into
push
icebp
or
inc
cmpsl
movsb
insl
push
push
xorb
gs
mov
nop
les
add
popf
jo
lahf
lret
or
pop
aaa
push
adc
and
fs
call
mov
push
sbb
cmp
sbb
dec
push
lods
clc
cmp
sbb
xchg
xor
xchg
mov
outsl
sbbb
je
or
sbb
lea
ret
outsl
xor
in
lock
inc
stos
xor
cmp
cltd
test
jae
andl
fcom
pop
jmp
js
pop
out
push
dec
in
or
mov
ljmp
pop
cltd
jecxz
lods
fdivrs
xor
int3
cmc
test
in
lods
jo
push
sub
mov
lods
ss
scas
inc
enter
jo
int3
xor
xchg
inc
push
pop
cmp
arpl
imul
push
mov
arpl
in
sti
in
fisttps
jae
sbb
adc
clc
add
test
repz
sbb
iret
sub
outsb
push
mov
add
lds
push
and
adc
and
push
pop
adc
lret
lret
lahf
in
cli
mov
shlb
mov
lods
pop
add
data16
xchg
mov
mov
gs
adcl
mov
js
xor
add
jecxz
ds
lods
add
frstor
pop
popl
cmc
inc
mov
idivl
loop
or
pop
mov
mov
lcall
jbe
pusha
test
insl
jle
jne
nop
mov
pop
out
xlat
xor
movsb
movsl
in
xchg
pop
or
jp
xor
jge
or
fdivl
cwtl
add
add
ret
and
test
lret
jb
int3
jae
push
mov
xor
add
pop
jle
push
lods
inc
push
lds
loope
ficoml
jmp
pop
adc
mov
xor
mov
les
adcb
lret
lcall
inc
adc
js
inc
stos
mov
cs
xor
loope
mov
pop
out
xor
cmpsb
fs
jl
clc
xchg
aaa
or
add
js
mov
mov
jl
lods
jbe
ret
inc
sub
out
imul
sub
dec
icebp
aas
jns
aas
cmp
sti
cmpsl
jecxz
fmull
push
stos
call
jmp
mov
leave
pop
aaa
jl
add
popf
sbb
repz
aam
mov
idivl
or
outsb
sub
hlt
cmp
ret
pop
hlt
dec
idiv
and
pop
lods
sbb
enter
adc
mov
cltd
jge
icebp
aas
popf
icebp
ds
xor
pop
inc
mov
pop
movsl
mov
lcall
dec
out
cwtl
push
cmp
sub
popf
pop
sub
mov
add
mov
call
xchg
ljmp
cmpsl
enter
enter
xchg
mov
outsb
push
out
into
cmovs
push
dec
and
adcl
sbb
daa
stc
xchg
cmpsl
sbb
loopne
mov
dec
lahf
pop
mov
mov
xchg
inc
lds
cmp
push
mov
ret
dec
cwtl
or
cmp
cmc
ja
nop
inc
fadds
sub
in
adc
fidivrs
insl
inc
aaa
pushl
adc
rolb
arpl
lret
nop
pop
popa
movsl
jne
push
cs
mov
inc
mov
lods
inc
xor
cltd
lds
repnz
hlt
dec
ror
rorb
cwtl
fdivrs
dec
cmpsl
or
add
popf
stos
outsb
cmp
mov
mov
or
cmp
pop
in
xchg
jle
push
aam
in
mov
out
xchg
stos
xchg
mov
punpckldq
jg
testl
mov
int
lock
add
lahf
into
pushl
sbb
cmp
mov
popf
xchg
dec
xlat
adc
call
fdivrs
test
inc
mov
arpl
aam
ret
and
ss
jbe
jae
jg
xchg
lahf
inc
test
out
sbbb
movsb
test
adc
sahf
pop
leave
cmpsl
mov
inc
mov
dec
cmp
loop
add
in
in
mov
aam
adc
pop
int
jecxz
pop
xchg
inc
pop
test
xchg
out
rcr
repnz
xchg
icebp
and
xchg
sub
int
into
and
std
jo
inc
sub
rcr
addr16
fidivrl
hlt
sub
jecxz
sub
subb
mov
adc
jae
ret
repz
pop
icebp
lret
fldcw
xchg
and
ret
jp
mov
mov
jmp
push
insb
sarl
ss
mov
mov
mov
mov
xchg
and
jp
incl
xor
cmc
and
push
std
lahf
or
popa
jo
gs
daa
mov
xlat
sbb
orl
pop
out
xor
xor
movsb
push
gs
or
xchg
xchg
sbbl
in
pop
jge
cmp
cmc
mov
cmp
mov
mov
adcb
bound
adc
loope
pop
push
int
xchg
pop
sbb
jo
pop
fistpll
xchg
femms
insl
outsl
test
xlat
outsb
mov
xor
mov
rcll
add
nop
mov
fidivl
iret
xchg
shrb
mov
imul
lods
or
xor
cmpsl
call
dec
stos
mov
mov
clc
mov
push
add
lea
ljmp
inc
pop
sbb
jle
cld
xchg
jp
and
sbb
add
divl
ds
add
push
xchg
inc
sub
mov
sbb
sub
xor
sarl
mov
test
arpl
sbb
lea
jno
loop
push
lret
shlb
mov
inc
dec
gs
lret
aam
icebp
lret
mov
pop
incl
xchg
xor
lds
fiaddl
stos
dec
push
mov
fsubr
sbb
cmp
fisubrs
int3
and
dec
adc
arpl
adc
cmp
clc
popa
mov
out
les
sbb
mov
or
xchg
push
outsb
dec
lea
loop
xchg
dec
pop
dec
fcoml
adc
mov
bound
imul
mov
adcl
push
test
movsb
mov
mov
arpl
jmp
cmp
push
insl
add
mov
mov
movsl
rcl
leave
adc
push
inc
xchg
bound
jge
pop
xchg
pop
insb
inc
mov
repz
push
sub
and
popa
clc
jne
sbb
adcb
stos
cwtl
inc
adc
sbb
xor
fbld
mov
rorb
mov
add
fwait
ss
test
fnstcw
test
mov
push
xchg
iret
icebp
mov
aas
add
jo
mov
sub
jb
mov
push
ret
xorl
sub
mov
mov
ret
add
adc
pop
cmp
and
and
pmaddwd
pop
mov
and
push
inc
shrl
stos
or
lea
pop
test
mov
xor
or
mov
adc
mov
imul
mov
es
jno
pusha
test
mov
and
push
mov
adc
push
adc
sub
subl
in
mov
jmp
out
pushf
loop
push
sub
add
ja
jl
stos
mov
dec
test
repnz
mov
out
mov
hlt
mov
adc
addl
shlb
aaa
stos
and
sbb
and
mov
mov
push
jl
xchg
ja
mov
push
push
sub
lahf
cmp
push
decb
mov
in
sbb
or
cmpsb
mov
cmp
inc
sub
pushl
loope
cmp
dec
dec
aad
dec
pop
or
pusha
jne
mov
test
stc
push
in
clc
pop
jns
ja
jge
cmpsl
movb
int3
sbb
iret
xchg
cmpsl
iret
jg
mov
test
jnp
rcll
mov
and
pop
push
push
sub
mov
fisubrs
xlat
hlt
ror
nop
stos
cmc
sbb
push
test
push
jbe
rcll
je
mov
loop
push
outsl
fcoml
imul
testb
and
mov
arpl
pop
jle
test
lea
in
sbb
nop
dec
shll
add
push
lds
aam
test
arpl
dec
add
lock
inc
imul
push
and
dec
mov
mov
push
cli
dec
test
and
add
push
cmc
sti
stos
inc
xor
nop
pop
ret
xchg
fldt
push
jno
jns
sub
xlat
push
arpl
loope
inc
pushf
out
mov
aad
lea
add
xchg
inc
nop
sub
mov
jecxz
pop
popl
loope
insb
rclb
sub
inc
scas
mov
jb
inc
ss
xchg
or
mov
inc
outsl
jns
in
mov
cmc
test
incb
data16
or
pop
add
jne
dec
cmpsb
mov
mov
test
adc
stos
mov
and
lods
inc
shr
add
popf
bound
jae
mov
mov
xlat
xchg
jecxz
outsb
stos
aas
mov
mov
xor
es
push
or
xchg
sahf
pop
xor
adc
es
push
ret
pusha
push
loopne
mov
cltd
loope
sbb
call
popa
jl
in
mov
aas
inc
inc
aaa
adc
movsb
mov
ds
mov
test
mov
add
lahf
mov
pop
ljmp
fwait
xor
inc
jmp
cld
xchg
inc
mov
aas
repnz
rcrl
stc
adc
or
jge
lret
test
lods
adc
add
sbb
mov
dec
pop
adcb
repnz
mov
dec
imul
cmpsb
lock
orb
add
adc
ficoml
mov
std
mov
outsl
push
and
enter
mov
cmp
aad
jmp
or
pop
xchg
push
mov
imul
clc
sub
lds
xchg
adc
cmc
iret
out
mov
sahf
ror
and
and
mov
mov
roll
xchg
dec
jecxz
rclb
fneni(8087
dec
push
pop
mov
lods
xor
sbb
inc
inc
push
jnp
push
mov
sbb
jge
pop
sti
sub
inc
sub
cwtl
sub
cltd
sub
imul
mov
or
mov
hlt
push
sbb
xchg
adc
cmc
sbb
decb
xchg
sub
out
xchg
rorb
pop
aam
scas
add
mov
jbe
lock
lods
ljmp
out
insb
mov
icebp
jbe
clc
jle
movsl
jno
xchg
imul
dec
inc
dec
in
sbb
inc
ret
add
arpl
pop
mov
jb
repz
dec
jp
jg
push
sub
add
push
jecxz
shll
jae
fcoml
adc
outsb
pushf
xor
clc
inc
fcoml
sbb
push
fistpll
out
aam
lcall
std
loop
adc
inc
test
mov
add
inc
inc
loop
push
adc
mov
pop
cmp
xlat
or
sahf
insl
jg
call
push
and
and
int3
scas
inc
jge
pusha
lock
stos
orb
hlt
inc
mov
mov
push
stos
out
jne
loope
daa
leave
mov
fcoml
or
cwtl
inc
orb
dec
cmp
mov
or
inc
dec
mov
imul
or
lods
repz
ljmp
out
popf
sbbl
mov
es
xchg
cs
imul
enter
jno
and
or
push
or
mov
je
aad
gs
mov
test
mov
enter
push
and
mov
icebp
inc
jns
add
sarb
cmp
or
shll
scas
dec
cmp
add
add
dec
sub
std
push
adc
pop
push
mov
dec
out
and
xchg
jae
in
mov
outsb
dec
fcmovb
jle
mov
daa
stos
pushf
xor
dec
outsb
inc
lods
xor
push
pop
cs
push
mov
mov
mov
popf
dec
push
call
lret
stos
push
inc
adc
stc
int
jne
push
cmpsb
mov
out
pop
cmc
adc
ficomps
xor
ja
call
out
mov
xor
movsl
mov
lret
leave
out
loop
mov
xor
push
clc
ret
testb
cmpsb
adc
arpl
leave
inc
pusha
bndstx
sub
pop
lret
pop
mov
push
loope
mov
push
ljmp
push
shl
sahf
pop
and
fdiv
cmp
mov
mov
das
ret
mov
add
jbe
pop
lods
outsb
std
out
ja
les
jns
movsb
mov
pop
mov
imull
mov
nop
mulb
pushf
dec
insl
adc
xchg
mov
mov
lahf
shll
scas
and
mov
in
imul
insl
dec
out
push
fldl
lock
pop
in
add
jg
push
cs
inc
das
ret
xchg
andb
daa
mov
in
inc
faddl
pop
pop
cmp
mov
jecxz
int3
push
push
mov
sbb
sbb
addr16
ret
mov
js
in
mov
ss
cltd
test
test
incl
nop
cmp
jno
imul
imul
lret
gs
pop
in
repz
inc
lret
sub
xchg
les
sub
dec
xor
lahf
fs
push
inc
fistl
jo
and
pop
sbb
sbb
jge
test
rcrb
adc
xor
loope
call
in
lds
mov
cmp
out
shrl
dec
and
les
inc
fdiv
fs
repz
lods
pop
pusha
imull
mov
ret
not
movsl
idivb
and
xor
int
or
jle
add
add
loopne
mov
push
in
insb
push
sub
pop
stos
adcb
inc
or
jae
mov
lods
adc
pop
add
ffree
push
rol
out
je
call
adc
jmp
bnd
lds
jbe
lret
jmp
fstps
mov
shrb
mov
icebp
mov
imul
psllw
fwait
add
xchg
fwait
cmpsl
sbb
inc
pop
mov
lds
push
push
xor
gs
xchg
push
and
inc
mov
insb
dec
jmp
repz
jge
jecxz
pop
xchg
popf
and
xchg
mov
shrl
add
inc
jo
push
xor
arpl
stc
sub
mov
cwtl
dec
jbe
addr16
int3
out
inc
jns
js
in
jp
cmp
adc
push
outsb
fcmovu
repnz
enter
popa
loope
lds
mov
xlat
cmp
lods
les
cs
xor
popf
fidivs
test
sub
xchg
outsl
sti
jge
lods
inc
dec
add
cmpsl
imul
pop
popf
pop
push
sub
mov
shl
cmp
or
dec
insb
cmp
jns
push
in
push
mull
or
sub
in
xchg
fsubs
sbb
sbb
in
xchg
cmp
jmp
inc
jmp
imul
cmp
and
dec
fwait
into
inc
xchg
aas
jbe
addb
push
xor
test
repz
test
nop
inc
sbb
ss
test
xlat
data16
or
or
cwtl
loope
inc
fnstenv
dec
xchg
mov
lea
mov
ret
mov
filds
mov
pop
sbb
scas
cmp
cmp
push
pop
movsb
xchg
insl
mov
imul
jmp
mov
stos
xor
mov
pop
sbb
mov
xchg
call
int
stc
sti
pop
jmp
lret
psllw
xchg
test
xor
movsb
sub
adc
mov
ljmp
outsl
repnz
jmp
and
pop
fildl
push
xchg
loopne
aas
shl
push
out
call
jbe
pop
or
inc
aas
xchg
push
inc
out
repnz
mov
inc
mov
xchg
push
cmp
or
sub
mov
in
adc
or
lea
jno
hlt
xor
pop
dec
in
xlat
push
add
out
lahf
leave
lods
sahf
clc
in
loopne
out
stos
adc
movsl
cltd
mov
push
ljmp
add
shlb
adc
push
in
test
jl
and
fbld
into
je
sbb
data16
xchg
cwtl
or
lahf
push
mov
fwait
aaa
negb
imul
icebp
cmp
aad
jne
mov
adc
clc
iret
movsl
mov
and
or
ret
xor
outsb
cld
lea
movnti
xor
lcall
cwtl
xor
pop
xchg
mov
ja
sbb
cmp
shrb
addl
clc
pop
lcall
and
dec
mov
inc
scas
or
mov
mov
in
stos
push
xchg
ss
shlb
and
push
add
xor
xor
lds
xchg
cmpb
pop
push
cmp
pop
movsl
cmp
cltd
dec
ret
pop
sti
mov
and
sbb
sti
or
mov
pop
mov
inc
outsb
cli
mov
mov
aam
sub
movsl
rcrb
popa
negb
out
divb
xor
sbb
sahf
and
mov
add
gs
sbb
fadds
sbb
jmp
mov
mov
pop
xlat
in
add
inc
fistps
cwtl
mov
and
rcl
inc
mov
adc
jecxz
push
mov
rcrl
mov
mov
andb
pop
or
cli
push
jge
cmpsb
xchg
jae
loope
cmp
push
cmc
push
je
mov
sub
adc
xor
gs
lods
cmpsl
lahf
inc
inc
clc
loopne
fs
stos
mov
shll
es
mov
dec
rcl
mov
call
aad
mov
clc
adc
or
jb
cmovp
rcl
adc
push
inc
dec
mov
loope
lea
je
out
das
das
xchg
jnp
mov
lea
jns
inc
popa
xor
loopne
es
jbe
fsubs
dec
pop
mov
ljmp
lret
int3
adc
loop
popf
int3
or
sub
push
lock
cmc
sub
jae
sbb
and
inc
cmc
mov
int3
ss
jmp
cmp
cs
loope
jo
lret
dec
cmp
out
daa
mov
pause
mov
pop
fisttpl
out
ds
bound
add
negl
int
mov
lods
addr16
or
add
shlb
cwtl
mov
out
cmpsb
out
cld
dec
out
out
inc
inc
mov
stos
lock
lods
pop
stos
mov
pop
mov
notl
and
cmpsb
data16
mov
shll
xor
int
and
loop
pop
sti
outsl
repnz
sbb
pusha
jno
mov
xorb
or
sti
repz
jmp
push
nop
imul
loop
repnz
in
cmpsb
or
push
push
aas
gs
repnz
jno
add
incl
daa
lcall
mov
xor
lahf
pop
fidivrs
push
gs
and
jns
icebp
hlt
mov
adc
rolb
imul
push
mov
mov
sti
xchg
sti
xor
xchg
aad
dec
mov
inc
pusha
pop
jp
mov
mov
movsl
adc
sbb
mov
push
or
mov
xchg
inc
push
sbb
jne
sarb
aad
fs
dec
or
sahf
stos
stos
mov
inc
mov
shlb
adc
in
xchg
mov
shlb
mov
ja
mov
sbb
sub
or
lret
les
xchg
mov
stos
outsl
inc
pusha
cli
jp
out
rcll
cli
adc
stos
icebp
jg
xchg
push
jl
sub
cmp
das
fsubr
xor
les
inc
push
ss
mov
xor
mov
and
out
mov
push
incb
insl
ror
push
jmp
adcl
mov
int3
sub
jecxz
sbb
popa
xor
adc
mov
mov
push
sahf
clc
inc
lods
decb
test
out
int3
inc
mov
int
jne
jo
out
notl
scas
call
or
sahf
out
cmpsl
sub
cmp
dec
push
ja
pop
mov
jbe
dec
mov
out
in
test
mov
addr16
push
pmulhw
mov
iret
sub
clc
adc
xchg
mov
je
mov
cmp
xlat
stos
xor
jmp
fidivrs
xor
jne
fidivrs
xchg
jecxz
or
sbb
pop
adc
or
lahf
xchg
mov
out
scas
xor
push
ljmp
xchg
lods
sbb
aaa
push
das
call
fsubrp
sub
imul
test
lret
lahf
xor
adc
mov
int3
loop
cmp
mov
lea
push
or
mov
sbbb
adc
pop
jbe
daa
popa
je
pop
mov
push
xlat
pop
inc
xlat
sbb
and
pop
jbe
fwait
xor
mov
cmp
dec
fsubl
jno
ja
mov
idivb
lods
stos
dec
and
in
mov
inc
jge
out
jb
bound
inc
movb
dec
dec
cmp
roll
out
add
and
decl
cmpsl
push
jge
aam
add
mov
scas
into
and
pop
cmp
xchg
jnp
and
dec
adc
mov
mov
pop
lea
cltd
mov
out
adc
xchg
xchg
sub
lock
or
stos
test
inc
pop
mov
pushf
jmp
nop
rorl
jmp
in
jbe
sub
rol
push
int
push
jmp
leave
insl
js
sbb
jno
shlb
or
cltd
mov
dec
cli
call
mov
cmp
es
out
enter
pushf
mov
inc
mov
push
push
outsl
sub
aam
aas
shll
jo
xchg
cmpsl
xlat
and
pop
enter
xor
and
idiv
or
cmp
jle
cwtl
push
mov
movl
pop
lds
and
xlat
int3
inc
lock
add
sbb
ret
in
incl
or
repnz
loopne
xchg
rorl
xor
push
add
adc
jb
cmp
insl
jge
inc
xlat
push
xchg
mov
ljmp
insl
or
gs
cmp
xor
call
iret
gs
add
out
inc
outsl
dec
inc
and
add
mov
cmp
mov
xchg
lods
sub
mov
leave
xchg
jl
mov
fbld
fwait
xor
sti
pop
mov
je
dec
xor
aam
pop
cld
sahf
jno
adc
xchg
or
popf
in
cld
xchg
push
mov
pop
xor
js
rcrb
push
scas
jnp
push
jne
sub
imul
rolb
xchg
lea
es
popf
mov
mov
pop
or
xchg
test
sbb
sar
lods
lret
movsl
jmp
fnstenv
sbb
xchg
lock
jmp
out
xchg
jo
imul
xchg
sbb
jge
sub
xchg
xchg
jg
scas
xorb
cmp
adc
rcll
mov
jno
nop
mov
mov
mov
into
add
add
cmp
sub
or
fdivl
cwtl
or
repz
jp
fsubr
dec
pop
insb
mov
pop
mov
divl
cltd
sbb
pop
arpl
sbb
lret
inc
jmp
roll
push
xor
aad
xchg
add
cwtl
sub
mov
xchg
testb
ret
jns
test
xorl
addr16
pop
sti
das
out
lds
mov
dec
mov
dec
mov
out
adc
sub
push
sbb
jae
cli
sub
mov
imul
mov
sbb
mov
mov
push
insb
call
out
int3
add
push
xchg
sbb
rorb
cli
sub
scas
inc
or
cli
xchg
les
adc
shll
push
pop
dec
lods
add
js
shlb
xchg
push
add
pop
dec
or
aaa
mov
shl
cli
mov
push
mov
or
scas
xlat
into
mov
cmpsb
push
test
shll
xchg
mov
es
inc
xchg
push
mov
dec
mov
dec
into
push
xlat
xor
lcall
stc
je
mov
jmp
sub
aas
fldt
fistpll
dec
sar
lret
aad
xchg
dec
je
and
movsb
aas
jmp
aad
addr16
ja
imulb
lret
pop
add
popf
in
insb
js
scas
inc
cmpsl
mov
into
fistpll
sbb
pop
adc
jno
jns
mov
mov
xchg
add
shlb
jbe
inc
addl
lock
ja
leave
popa
xor
add
test
add
mov
pop
test
inc
add
xchg
cmp
out
add
cltd
xor
pop
sar
seto
mov
aas
cmp
push
aas
jo
xchg
insl
cmc
sbb
insl
jle
adc
cmpsb
xor
push
out
cmpl
int
out
xor
mov
jmp
aam
mov
mov
jge
shll
cmp
sub
rcrb
jns
inc
add
mov
pop
adc
shl
xchg
hlt
mov
loop
lcall
shlb
sub
daa
mov
mov
nop
cmp
inc
stc
jg
push
stos
in
pop
and
lret
sti
aaa
xchg
inc
dec
cmp
inc
sub
xchg
cltd
push
push
repnz
sarl
mov
or
adc
add
cld
pop
scas
and
mov
inc
push
mov
or
mov
shl
sbb
jbe
add
push
rolb
in
push
xchg
lcall
jg
icebp
mov
in
dec
mov
jl
loopne
mov
in
jecxz
push
mov
je
sbb
xchg
lcall
shll
dec
pop
lods
cs
mov
scas
enter
inc
jmp
push
in
xor
mov
sbbl
cmp
mov
sbb
add
cmp
ret
or
mov
xor
mov
mov
ret
push
lods
repz
rolb
notl
test
sbb
jmp
lar
test
dec
push
push
mov
push
nop
rcrb
jg
sub
add
cmp
xchg
cmp
cmp
testb
jg
ljmp
cmp
mov
inc
xlat
jge
mov
fldenv
add
mov
rorl
test
cli
les
jmp
mov
data16
inc
push
mov
lods
bound
icebp
jbe
and
mov
jae
mov
inc
jg
repnz
cmp
or
fisubs
shll
pop
mov
pop
ds
xchg
jbe
mov
dec
repz
add
shlb
pusha
fcomp
lret
test
pop
cwtl
mov
hlt
xchg
lock
mov
mov
mov
dec
dec
or
sub
mov
mov
lea
pop
mov
sbb
push
mov
mov
cmp
lahf
pop
add
or
repz
and
pop
outsb
ret
fdivrl
or
ss
rcll
inc
cmp
inc
dec
push
jmp
inc
mov
xchg
test
mov
xchg
stos
xchg
stc
cmp
imul
test
dec
add
je
sub
inc
mov
js
inc
push
cli
lds
repz
xor
sbb
dec
aam
hlt
pop
out
mov
mov
or
test
jno
push
sbb
scas
push
mov
sub
pop
push
aaa
pop
fildl
cli
mov
cs
xor
mov
or
and
ljmp
dec
and
jno
xchg
scas
mov
bound
outsl
iret
rcrb
cwtl
inc
and
stc
lds
jns
dec
mov
imul
iret
shll
mov
lock
aaa
pop
adc
push
mov
adc
shlb
inc
cld
repnz
out
int3
lret
insl
iret
outsl
stc
inc
frstor
dec
cli
push
andb
mov
adc
mov
into
out
movsl
push
adc
push
jb
addb
stos
cmpsb
push
jle
nop
pop
add
sbb
jbe
mov
mov
movsl
adc
and
add
mov
sahf
xchg
cmp
or
frstor
jo
mov
xlat
pop
in
add
jb
sbb
push
bound
xchg
or
inc
push
cltd
es
gs
dec
addr16
sti
mov
cmpsl
ss
lea
rcll
cld
jecxz
xor
call
push
movsb
test
jle
iret
fnstenv
out
sbb
mov
popf
js
test
movl
test
lahf
andl
das
fwait
xor
pop
fyl2xp1
or
mov
add
jmp
mov
jl
in
adc
jge
xchg
out
aaa
push
sub
inc
adc
ret
mov
adc
jno
int
xor
sti
es
dec
mov
sbb
icebp
test
xor
sub
cmp
fs
lock
test
or
daa
and
push
sub
lret
gs
cmpsb
inc
dec
scas
jb
and
xchg
dec
dec
lcall
loopne
jmp
mov
mov
push
fsubs
add
push
push
adc
jo
dec
jmp
daa
bound
sbb
ror
inc
imulb
cmp
fisttpll
mov
andb
or
mov
fdiv
add
in
jp
inc
lods
sbb
jecxz
test
rorb
mov
pop
and
xchg
addr16
inc
pop
fdiv
jl
push
scas
adc
xor
cli
jne
mov
in
sub
jbe
mov
add
cmp
pop
daa
push
das
movb
movsb
mov
push
sub
mov
mov
in
loopne
xchg
insl
cmpsl
push
or
jae
inc
gs
imul
mov
sbb
mov
cli
dec
push
and
js
test
mov
mov
mov
scas
daa
cmp
mov
cld
sub
and
dec
clc
shlb
pop
in
mov
pushf
loope
cmpsb
fisubs
push
jp
cmp
cli
adc
inc
xchg
stos
xor
popf
movsb
loopne
popa
push
xor
pop
xor
sti
xchg
addr16
scas
inc
cmpsl
push
xor
popa
ss
arpl
mov
inc
in
arpl
shrb
and
xorl
mov
inc
outsb
add
fstpt
xor
lods
xchg
fimuls
mov
xlat
add
icebp
sbb
ja
inc
jb
data16
jp
jmp
test
and
scas
shll
mov
adc
xchg
mov
xchg
xlat
or
mov
adc
sub
ret
idivb
sbb
add
imul
outsl
loop
mov
outsb
lock
outsb
das
test
jecxz
jb
test
xchg
push
mov
mov
test
mov
adc
aas
xor
jo
insb
add
les
adc
fildl
inc
fistl
stos
es
cli
cli
pop
mov
clc
adc
xchg
pusha
lea
pop
mov
jns
mov
pop
adc
add
mov
sarb
mov
fsts
mov
fimuls
push
ss
aam
call
hlt
subb
inc
dec
int
nop
mov
es
pop
jg
ljmp
xchg
jae
sub
xchg
fisubrs
or
mov
adc
push
push
int3
cmpsb
xor
xor
add
fs
sti
mov
add
in
dec
mov
out
cmpsl
call
test
jb
sub
imul
mov
dec
movsl
xchg
push
ret
cmp
jle
jg
jne
aaa
stos
mov
jb
add
aam
ss
jnp
leave
push
xor
adc
mov
pop
jmp
pop
cmp
sbb
movb
lret
pop
test
into
in
sbbl
jmp
in
addr16
pushf
ljmp
in
inc
xor
cltd
dec
out
jp
shrb
and
enter
clc
adcl
les
mov
gs
push
outsl
loope
rol
sub
ret
pop
or
fmul
frstor
stos
jbe
inc
clc
adc
add
subl
mov
bound
sbb
mov
mov
mov
lock
xor
xchg
adc
int
mov
xlat
cmp
and
xchg
pop
aaa
loopne
pushf
xchg
jmp
jecxz
and
sbb
mov
jb
setae
dec
shlb
mov
aad
xchg
jae
js
or
inc
add
inc
repz
push
out
sub
jb
ret
jnp
or
enter
es
stos
mov
jnp,pn
pusha
test
fcmovu
iret
negl
cmp
sub
or
scas
xor
in
test
cli
fstpt
cltd
sbb
xchg
imul
out
jecxz
push
or
push
push
lret
int
sub
dec
adc
les
or
pop
push
push
xor
pop
icebp
dec
inc
xchg
cmp
js
xlat
sbb
pushf
jne
leave
fs
ss
push
add
xor
push
mov
pop
mov
xor
test
push
jmp
mov
fldenv
mov
or
push
dec
dec
cld
push
xchg
fwait
mov
push
or
outsl
cmp
rcr
stos
ja
aam
mov
aad
test
sti
or
das
inc
inc
jae
fdivs
mov
gs
dec
dec
call
fistpll
popl
test
cmpsl
fcomi
dec
mov
das
nop
mov
and
lret
xchg
or
add
stos
sbb
enter
fimuls
adc
or
mov
pop
jo
stc
mulb
int3
dec
mov
int3
lret
repnz
ret
enter
lret
in
mov
aam
cltd
mov
or
lods
jo
mov
fcomps
or
dec
jb
push
push
sbb
sti
movsl
cmp
lods
and
ds
cmpsl
mov
jle
jmp
decb
xor
clc
sahf
clc
hlt
mov
sub
lcall
jmp
stc
out
sub
popf
dec
std
das
mov
mov
push
icebp
mov
inc
lods
imul
repz
dec
pop
adc
mov
xor
clc
xor
sub
nop
pop
mov
movsl
pusha
notl
lret
repz
fdivl
call
test
mov
jae
in
andl
dec
pop
add
mov
in
sub
testb
sbb
sbb
lret
mov
jae
cs
push
fsubrl
adc
std
lcall
push
loop
icebp
cwtl
ret
adc
sub
outsb
lahf
push
push
mov
mov
pop
cmc
cmp
mov
mov
or
inc
cwtl
cmc
xlat
sbb
out
imul
test
mov
sahf
sti
mov
ds
sub
adc
leave
test
out
sub
xchg
push
or
cmp
out
inc
cmp
loopne
mov
or
into
xor
adc
aad
xor
pop
std
aam
xlat
and
jecxz
hlt
cwtl
ret
in
cltd
popw
push
xchg
lods
mov
mov
sbb
sub
daa
pop
sbb
mov
add
enter
fsubr
mov
push
jo
imul
or
jg
pop
xchg
jl
mov
mov
shl
pusha
pop
cmp
aad
mov
shll
popf
fstpt
sub
push
imul
xor
leave
into
xor
cmp
scas
int
into
xor
hlt
scas
scas
add
xor
dec
movsl
lea
sub
out
cmpsl
sahf
clc
mov
dec
mov
pop
and
loope
sub
push
jae
aas
push
lret
lock
mov
jb
loop
fadds
aaa
mov
in
mov
out
adc
add
cltd
std
mov
mov
sub
xor
cmp
and
cld
stc
int
loop
xlat
orl
in
aas
movsb
pop
cmp
dec
dec
sahf
xor
mov
add
jle
cli
addr16
sub
inc
bound
clc
jbe
xchg
jg
cs
adc
pop
fmuls
lcall
inc
inc
scas
mov
xor
mov
pop
loop
cmp
pop
fsts
test
push
and
and
push
mov
dec
in
or
sub
insb
shll
dec
mov
in
dec
pop
push
mov
pop
shl
cmp
dec
mov
xchg
adc
insl
mov
imul
lods
inc
sti
jbe
jne
adc
jns
pusha
aas
stos
adc
jb
jae
xor
push
call
aaa
hlt
outsl
push
adc
rol
mov
fs
or
inc
inc
or
push
sub
leave
pusha
arpl
out
enter
ja
shl
add
jns
or
or
fcom
xchg
add
mov
pop
push
leave
call
flds
cmpsb
aaa
inc
cmpsb
jecxz
sahf
es
sbb
gs
jae
push
pop
xchg
jecxz
js
pop
sahf
mov
shlb
sbb
xor
cmp
addb
std
lret
lret
xor
ds
mov
fs
jae
imulb
in
popf
xor
mov
mov
dec
int
lods
ja
xchg
int
and
and
inc
movsl
add
jge
dec
pop
pop
ds
loopne
or
xchg
xor
into
enter
pop
mov
inc
stos
sahf
mov
jbe
leave
fdivl
mov
jbe
push
stos
mov
xor
add
out
repz
add
int
popa
ja
mov
mul
sbb
shlb
inc
jle
jo
fisubl
fists
mul
fidivrl
mov
lock
out
std
clc
dec
stos
add
adc
jl
jg
rcrl
test
cmp
dec
jge
lock
and
sar
andl
xchg
add
int
bound
ds
adc
mov
icebp
movsl
push
push
ret
and
call
jns
and
clc
or
daa
cli
push
push
ja
shlb
sbbb
inc
pop
in
lea
out
bound
test
mov
stc
mov
xlat
dec
pop
and
inc
in
jbe
movsl
mov
dec
cld
pop
mov
push
mov
add
dec
pop
mov
xor
xchg
jne
mov
stos
mov
mov
or
xor
dec
fadds
notl
imulb
shrl
int
outsl
pop
jno
aad
push
mov
cwtl
rclb
je
add
or
fdivrp
fld
dec
fbstp
call
and
xchg
lock
mov
dec
fbstp
ja
imull
sub
jnp
mov
push
cmpsb
cli
inc
iret
int
je
xor
xchg
inc
mov
fbld
clc
aas
pop
daa
pop
aaa
movsb
clc
pop
dec
push
cmc
rcr
insl
and
sbb
int
daa
or
rcrb
into
cmp
mov
imulb
fwait
add
ret
or
pop
repnz
add
mov
xchg
xor
jns
mov
cwtl
xor
cmpsb
mov
repz
mov
and
pushf
push
xor
movsl
cmpsb
ljmp
jp
sbb
and
cmp
and
bnd
pop
xor
mov
and
pop
jbe
lds
in
inc
cwtl
xor
int
insl
loopne
popa
sbb
inc
das
add
cmc
or
mov
push
xchg
lods
cmp
fidivs
or
sbb
mov
jno
inc
in
xchg
loopew
push
or
js
add
push
in
sbbl
and
or
cmpsl
dec
add
rcll
es
xchg
scas
dec
xchg
sub
cmp
or
rol
repz
stos
lock
test
test
sbb
arpl
push
flds
xchg
out
xor
fdiv
inc
fildl
or
mov
xorb
cmpsb
div
arpl
stos
push
add
pop
lcall
and
sub
mov
sbb
xor
enterw
popf
sub
push
icebp
push
inc
inc
nop
sbb
aad
das
test
lods
mov
pop
std
pop
sahf
cs
pop
popf
push
jmp
inc
enter
jb
mov
arpl
out
sub
lahf
into
fcoml
sbb
outsb
cs
mull
popa
lret
cmp
ret
cmp
push
pop
mov
shlb
jle
lods
dec
sbb
jno
aam
sbb
inc
adc
in
fsubrs
fs
and
inc
js
lds
lret
sub
lcall
inc
aas
loope
and
mov
shll
sbb
push
gs
sbb
jge
bnd
int
jl
les
stos
mov
and
xor
add
inc
ja
leave
xor
xchg
push
pop
stc
sbb
xchg
mov
clc
nop
sbb
add
imul
xchg
adc
arpl
inc
mov
das
jnp
and
pop
cltd
call
lahf
arpl
gs
cmc
xchg
add
imul
pop
js
fcoms
imul
imul
and
cld
and
mov
pushf
pop
pop
sbb
mov
push
es
ret
adc
rcrl
pop
lds
jg
or
hlt
xchg
and
sub
out
and
hlt
push
jno
xchg
mov
rorb
dec
jae
pushf
jnp
jge
sub
out
jnp
push
hlt
inc
dec
cmp
fdivrs
xchg
jo
xchg
jno
data16
sbb
jae
mov
and
jns
mov
ss
lock
aaa
into
mov
loope
mov
dec
pushf
and
xchg
pop
and
rcll
mov
cli
inc
mov
sahf
icebp
cmp
mov
fcomps
pop
in
pop
stos
inc
cmp
ds
or
inc
push
jne
add
push
mov
cmp
push
sub
mov
ret
add
jp
and
int3
int
lods
ja
push
ljmp
jno
hlt
push
das
lcall
lcall
mov
jno
int
add
hlt
aaa
lock
scas
cmpb
aas
push
jb
add
and
cli
xor
loop
pusha
adc
popf
inc
addl
imul
jl
xor
jg
ja
push
xor
jmp
decb
push
fwait
rcrb
les
movsl
imulb
sub
mov
movsb
jecxz
rcr
mov
int3
sub
data16
mov
aas
sub
pushf
imul
es
incl
add
jbe
jl
xchg
dec
mov
idivb
cmp
pop
testl
and
outsb
jp
dec
or
mov
mov
mov
inc
pop
mov
clc
and
repz
cmp
out
nop
ds
adc
insb
mov
inc
sbb
or
pop
jmp
jne
add
add
aam
int
cmpsl
mov
daa
jo
test
or
cmpsb
mov
mov
jne
xchg
add
popf
xchg
shl
xchg
or
les
mov
and
mov
dec
notb
movsl
subb
pushf
loope
fstps
or
gs
xchg
imul
lock
rclb
cmp
adc
imul
jmp
sahf
fildll
mov
faddl
scas
ljmp
mov
ss
aas
or
jmp
inc
sbb
cmp
arpl
mov
outsb
push
and
in
mov
out
shrl
xchg
dec
inc
and
xchg
xlat
mov
es
xchg
imul
sbb
andb
jae
pop
dec
sub
psubq
pop
daa
rcrb
dec
pushf
dec
mov
push
cli
pop
orl
dec
push
xor
aaa
clc
cld
aas
addl
inc
dec
add
or
sub
jmp
mov
mov
jg
shr
inc
mov
mov
push
mov
inc
stc
xorl
mov
jo
add
std
jo
stos
and
push
add
sbb
and
fists
jno
es
aaa
inc
mov
cmp
push
push
in
call
mov
outsl
xorb
loopne
pop
xor
shlb
mov
scas
fstpl
mov
sbb
outsl
insl
adc
mov
test
push
out
je
dec
pusha
in
jne
in
cmp
pop
dec
inc
sub
jle
adc
aas
mov
mov
fs
xchg
pop
call
lahf
or
stc
push
movsl
sub
arpl
icebp
pop
aad
sbbl
nop
xlat
xor
add
xor
cmp
add
dec
and
xchg
lods
sbb
jp
dec
mov
shrl
ret
call
xchg
stos
mov
outsl
jecxz
sbb
rcll
jae
jp
cli
lods
mov
iret
rclb
jp
mov
call
into
mulb
gs
out
inc
ret
jae
cmc
bound
mov
push
sub
aad
or
or
das
adc
xchg
cmp
push
mov
pop
movsb
jno
daa
out
and
mov
cltd
icebp
jnp
sub
sbb
imul
add
adc
add
adc
clc
ljmp
loop
dec
add
and
ret
hlt
jmp
ficoml
mov
jnp
fs
adc
jae
pop
add
insl
xor
fxtract
mov
adc
aam
adc
dec
add
lock
test
ret
pop
repz
jl
lret
push
jne
and
mov
call
adc
pop
mov
repnz
xor
outsl
notl
fs
xchg
and
jne
ds
add
data16
sbb
xor
or
rcrb
icebp
inc
test
lcall
and
or
pop
inc
repnz
dec
mov
clc
outsl
out
fidivrl
repnz
xchg
push
jmp
or
imul
enter
jnp
rcrb
or
cmp
dec
mov
movsl
iret
pop
fmulp
sbb
dec
push
xchg
mov
mov
repnz
cs
sbb
mov
and
mov
lcall
xchg
mov
sbb
and
cmp
cmp
icebp
pop
mov
mov
xchg
cmp
and
lcall
or
sbb
fmull
ljmp
cltd
xchg
mov
and
data16
cld
inc
push
ljmp
rorl
mov
fbld
gs
add
hlt
lock
test
fwait
and
pushf
roll
mov
push
addr16
out
push
push
xor
push
roll
daa
mov
jmp
adc
test
mov
fstl
inc
inc
aaa
push
jp
mov
xchg
in
popa
xor
fucomi
push
std
int3
inc
cmp
mov
cmpsl
push
lods
shrb
and
adc
cs
into
pop
pop
push
or
jge
lea
jp
pop
mov
pop
outsl
fs
sbb
pushf
push
movsl
mov
mov
add
cltd
je
cs
fiaddl
push
xlat
jbe
pop
test
adc
inc
push
mov
xlat
mov
shrl
cmpsl
cltd
jb
ljmp
push
test
mov
arpl
outsl
int3
jno
jb
sub
xchg
adc
into
sub
jmp
push
mov
adc
test
mov
insb
mov
inc
es
dec
loopne
dec
dec
dec
dec
mov
rcrb
lods
into
xor
leave
and
cld
movsl
add
mov
mov
pop
xor
mov
loopne
cmp
dec
mov
call
xlat
pop
into
pop
mov
dec
out
in
inc
push
int3
arpl
sbb
xchg
and
ljmp
sbb
jl
xlat
push
out
pop
repnz
or
dec
movsl
ss
movsb
dec
iret
fcomi
adc
mov
js
jns
jge
sbb
sahf
xchg
cli
cld
imul
adc
dec
popa
mov
shrb
xor
add
clc
sub
pop
fistl
sub
add
nop
fidivl
lret
loop
outsl
fldenv
push
mov
cld
shlb
pop
lods
scas
and
repnz
fdivrs
es
mov
andb
bound
movsb
add
loop
and
xchg
js
rcl
icebp
ljmp
cmpsb
xchg
add
mov
xlat
jae
stc
add
in
jnp
insb
cmp
xchg
sahf
mov
and
movsl
jge
and
mov
cltd
push
pop
xor
stos
cmp
mov
sub
clc
xor
pop
add
dec
xchg
pop
xchg
sub
jp
out
and
pop
ffree
mov
inc
or
sbb
mov
fnsave
inc
and
hlt
sarb
push
inc
psubw
arpl
push
adc
adc
daa
in
dec
dec
stc
push
jnp
lret
or
cmp
push
loopne
cmp
clc
imul
js
mov
aad
xor
cmp
push
xchg
out
inc
xlat
lahf
pop
xrelease
mov
push
out
dec
jmp
dec
add
and
xor
outsb
das
loop
sbbb
mov
stos
daa
in
xor
push
test
or
pop
popf
xorl
add
dec
pop
lea
addr16
out
cmpsb
into
ror
lods
test
mov
push
adc
dec
lods
jbe
insb
push
adc
mov
mov
insl
inc
lret
pop
dec
ljmp
xor
jp
data16
loope
jbe
mov
jno
cwtl
push
lods
dec
mov
cli
push
adc
cmp
bound
cwtl
add
pop
push
testb
fisubs
mov
mov
fdiv
or
ss
jnp
jbe
push
iret
pop
pop
sahf
cmp
sub
pop
xchg
aam
bound
or
xor
pusha
jmp
andb
inc
push
and
add
jne
and
add
cld
adc
dec
cwtl
mov
mov
mov
sbb
jo
cmpb
inc
mov
fldcw
dec
dec
mov
or
jns
sub
jnp
add
ret
lret
mov
pushf
xchg
sbb
fmuls
pop
insb
adc
push
scas
push
test
imul
cmp
lcall
or
cmp
ja
cmp
pop
mov
mov
jmp
push
adc
enter
jb
push
stc
xchg
push
jge
inc
mov
mov
jecxz
xor
lods
aaa
ja
push
test
leave
mov
pushf
nop
repnz
repz
xchg
fistpl
or
lahf
test
daa
lds
call
out
les
jmp
push
mov
int3
push
js
mov
dec
pop
scas
sbb
jbe
hlt
test
jmp
add
movsl
inc
and
decl
addr16
in
dec
dec
shll
mov
pop
inc
mov
mov
jns
push
dec
cs
mov
in
or
xchg
cmp
inc
mov
pop
repnz
mov
cmp
fistpll
jmp
or
pusha
adc
or
jns
mov
mov
xchg
imul
xchg
nop
push
adc
cmp
ja,pn
and
and
inc
int3
out
xor
outsb
fwait
movsl
cmp
stos
cmp
mov
dec
add
xor
push
dec
out
xchg
mov
aam
fnsave
push
sbb
pusha
sti
xchg
and
es
inc
sbb
push
xchg
jnp
nop
lcall
push
ror
xlat
mov
mov
inc
fstps
dec
pop
sti
sti
xor
jmp
in
push
iret
jecxz
jae
mov
mov
rcrl
adc
push
sarl
jmp
pop
sub
push
or
pop
lahf
push
add
lods
inc
or
scas
xor
mov
cwtl
lock
add
adc
insb
js
add
stc
rcll
fcoms
sti
cmpsl
cmpsb
aaa
or
popf
movntps
push
loope
mov
cmpb
and
add
jle
int3
fcom
mov
faddl
inc
icebp
adcl
dec
and
fsub
and
loope
jo
test
iret
dec
pusha
dec
dec
test
test
scas
pop
xchg
push
int
jmp
cld
add
je
fdivl
push
cmpl
dec
push
cli
jmp
mov
fwait
mov
jecxz
mov
adc
adc
popf
testl
scas
mov
sbbl
test
pop
hlt
or
test
xlat
sti
movsb
xchg
push
shrl
test
cmpsb
xchg
jbe
call
sbb
mov
pop
mov
jnp
sbbb
mov
lcall
and
adc
ljmp
inc
cmpsl
mov
and
insb
add
ljmp
sub
and
and
xor
pop
subb
and
in
xor
movsb
push
jmp
mov
es
inc
aaa
roll
cmovb
incl
inc
lahf
pmuludq
movb
xchg
cs
sub
pusha
jae
mov
mov
xchg
sub
aad
pop
subl
test
xchg
out
sbbl
aad
fs
ja
repz
pop
xor
jp
movsb
xor
loopne
mov
pop
movsl
inc
iret
data16
sbb
and
out
jl
lret
and
push
cmpl
icebp
pop
pop
je
dec
and
xor
xchg
notl
sar
xchg
pop
out
push
pop
les
ljmp
mov
jb
xor
mov
jns
cmp
push
andl
add
xchg
mov
lds
sub
imul
sbb
fnstcw
test
cmpsb
jo
add
sbb
push
or
dec
mov
clc
adc
mov
loopne
inc
ss
inc
mov
mov
imul
movsl
xor
sbb
fdivrl
cmc
add
fistpl
pop
std
lods
or
mov
mov
mov
out
bound
pop
sbb
jbe
call
aaa
ljmp
loope
dec
push
sub
out
imul
test
inc
dec
and
lret
jae
in
adc
mov
aad
in
popf
js
push
je
push
lods
jecxz
test
mov
lds
jg
stos
xchg
sbbb
sbb
imul
cs
inc
hlt
pop
mov
mov
pop
jo
andb
pop
cmp
jecxz
notb
sarl
pop
pop
in
fadd
cltd
iret
pop
xor
mov
data16
out
jne
out
xor
sti
xchg
mov
adc
xchg
dec
adc
orb
clc
pop
fcompl
pop
and
leave
and
hlt
jae
stc
test
ud2
leave
pushf
xor
ljmp
fsubp
cmp
pop
movsb
cmc
mov
mov
pop
ret
push
stos
pop
mov
jle
ret
pop
add
sbb
push
xor
dec
dec
ficomps
push
add
aaa
out
xchg
add
leave
loope
adcb
jne
mov
adc
ds
mov
mov
ret
das
rcrb
adcl
ljmp
xchg
sbbl
or
sbb
in
add
jge
cwtl
jecxz
cltd
push
or
test
xchg
insb
arpl
ret
subb
out
add
sbb
push
icebp
jecxz
shll
stc
cmp
jnp
pop
pushf
and
sti
xor
mov
stos
mov
aam
mov
out
lods
inc
sbb
testl
dec
fcoms
mov
xchg
lock
scas
jne
andb
push
mov
lds
movsl
outsl
push
adc
cltd
adc
cmc
mov
daa
es
daa
pop
mov
rolb
pop
push
add
andl
add
stos
jg
xchg
cmp
sbb
fnstenv
push
fnstenv
scas
or
mov
jmp
into
icebp
dec
push
mov
iret
fstp
sbb
adc
fstl
dec
cs
leave
shl
cli
mov
aaa
lds
mov
push
or
jae
mov
daa
pop
lret
orb
dec
in
adc
int3
imul
cld
addl
repz
je
jl
sub
dec
xlat
cs
outsb
call
fdiv
mov
cs
xlat
sbb
sahf
sbb
or
adc
pop
xor
pusha
repnz
scas
mov
mov
aas
adc
int3
cltd
je
insl
adc
push
sti
mov
pop
jo
nop
adc
cmc
hlt
ret
mov
add
cmpb
sbb
sub
pop
sub
test
pop
xchg
sbb
ds
pop
push
int
or
mov
enter
lret
fwait
pop
ljmp
test
dec
loope
insb
out
sbb
cs
lods
lret
jae
push
mov
mov
dec
mov
and
sub
xor
movsl
aas
push
push
add
popa
sub
push
inc
in
nop
push
add
popl
and
dec
into
mov
mov
fisubrl
cmpsb
sbb
push
cs
into
sub
push
int
adc
sub
dec
xor
jecxz
sub
jne
jo
mov
in
scas
fst
mov
shlb
cmp
mov
and
mov
mov
je
daa
or
push
lahf
outsb
mov
icebp
jae
dec
cmp
jecxz
bound
ds
xlat
outsl
sub
push
cli
inc
lock
sub
mov
adcb
inc
mov
pop
clc
add
addr16
xor
inc
popa
test
fildl
pop
bound
loope
adc
dec
jp
shll
jo
sub
dec
push
in
xchg
out
jae
sub
cmc
call
jae
in
xchg
sbb
bnd
in
es
fiadds
jno
sub
xor
mov
jge
pushf
cmp
loope
fsubs
or
fimuls
roll
mov
mov
xlat
outsb
mov
nop
imul
icebp
dec
dec
je
dec
mov
lds
push
mov
and
sub
ss
mov
addb
int3
jecxz
in
sub
in
sbb
lahf
cld
mov
les
jno
or
ss
jns
pop
push
and
out
cmpsl
sbb
js
enter
mov
adc
jb
jle
or
das
inc
jne
std
cmp
stos
pop
sahf
xor
xchg
loop
in
pop
shlb
rcll
add
mov
fidivl
xchg
dec
in
mov
xchg
outsl
xchg
and
add
inc
inc
orb
scas
int3
jp
rcll
bound
and
adc
leave
add
in
inc
lret
jo
inc
mov
leave
roll
jl
nop
sbb
loopne
lahf
dec
cld
xor
jge
pop
mov
leave
pusha
cmp
es
les
jmp
dec
jbe
in
push
pushf
xor
push
sub
data16
test
shrb
fistps
push
jg
mov
call
pop
inc
cmp
repnz
pop
inc
dec
or
loope
movsl
cmp
mov
push
lret
pop
sbb
push
fnstsw
inc
mov
and
jg
lds
xchg
and
cmpxchg
dec
fisttps
je
lahf
int
fsubr
pop
push
andl
pop
jbe
xchg
sahf
jne
mov
push
andb
cwtl
or
inc
faddp
std
pmaddwd
push
and
lret
xchg
add
jae
lret
data16
cmpsl
ds
mov
dec
adc
dec
popf
test
jmp
js
jo
pop
xchg
inc
xchg
mov
mov
mov
fs
ss
or
mov
mov
and
push
scas
pop
bound
cmc
pop
in
shlb
hlt
ss
ret
push
call
repnz
cmp
jne
adc
ja
xchg
add
pop
mov
ja
sub
push
inc
repnz
push
lds
dec
cs
fsubs
out
push
inc
push
jb
jae
lods
push
adc
pmaxub
mov
jge
or
popa
mov
in
sub
mov
stos
pop
insl
pop
int
jno
sub
stos
jb
ja
add
push
xchg
or
insb
jl
sub
repnz
cmpsb
adcl
cmc
ficompl
loopne
pop
pushf
sub
xor
mov
stos
push
notl
cmp
jle
add
or
xor
mov
inc
fsts
sub
sbb
ljmp
pop
sub
icebp
push
xor
outsb
cmp
ss
icebp
or
out
icebp
arpl
dec
sbb
clc
xchg
cmc
mov
das
jo
das
js
aad
mov
cmpl
pusha
hlt
enter
sbbl
jb
sub
scas
les
loope
mov
adc
fiaddl
outsb
mov
ret
inc
sbb
mov
fsubs
sbb
or
pop
shrl
insl
cmpb
mov
iret
jg
out
cltd
test
mov
imul
jg
sbb
fs
mov
lods
xchg
roll
jne
call
ror
das
clc
jne
or
cmpsl
inc
arpl
sbb
inc
push
push
stos
or
scas
jno
stos
jne
adc
mov
sbb
dec
leave
push
cmc
mov
popf
idivl
jmp
xor
ror
jg
mov
cmc
sub
sub
jp
das
sti
fwait
mov
ret
bound
shl
jns
jo
repz
pop
push
ret
cmp
adc
mov
lcall
test
xchg
add
dec
out
in
insb
pop
daa
shl
scas
and
mov
test
ja
addr16
mov
mov
jmp
lock
inc
loopne
pop
jecxz
cmp
ljmp
mov
jl
xor
int
jg
sbb
fldenv
fistps
jmp
sub
pop
pop
out
xchg
mov
ja
pop
xor
shlb
push
pop
xchg
cld
mov
mov
scas
push
test
add
inc
cmc
fnsave
pop
loope
icebp
push
mov
daa
inc
add
addr16
sbb
push
and
iret
mov
cmpsb
in
inc
fsubp
add
jge
mov
subb
pushf
and
mov
mov
mov
mov
or
rclb
mov
sahf
sub
adcl
bound
sub
inc
clc
jb
scas
mov
testl
pop
inc
jg
sub
stos
mov
loope
xchg
dec
add
test
ret
popl
bound
and
fcoms
pop
sub
mov
xorb
idivl
fnstcw
cmp
sub
aaa
out
pop
jns
jae
mov
mov
lock
insl
sub
lds
mov
lods
push
loopne
stc
pop
scas
lret
mov
mov
into
lcall
jge
mov
mov
mov
sbb
stc
xchg
aam
add
mov
fsub
jle
and
mov
adc
mov
stc
scas
mov
sbb
sbb
adc
mov
mov
sahf
test
mov
imul
pop
jmp
gs
mov
add
cmp
fcomi
hlt
cmp
aaa
pop
cltd
jmp
sub
mov
xor
ret
fistpll
test
cmp
sub
data16
add
adc
ljmp
ss
jl
cmc
lods
out
xchg
sub
cmpsb
shll
fnstcw
loope
ret
stos
outsl
cmc
mov
jnp
lahf
ljmp
cmp
mov
cmovns
pop
dec
rolb
and
xchg
sub
in
jno
shlb
push
out
cmc
int3
dec
or
pushf
nop
daa
sub
mov
mov
test
fisttpll
wrmsr
mov
inc
xlat
jo
mov
dec
test
ss
aad
into
shll
push
call
lods
inc
mov
mov
iret
cmp
and
in
mov
dec
jmp
adcl
or
int
aad
sbb
mov
mov
inc
pop
popf
sbb
mov
mov
shl
lcall
jg
mov
mov
mov
mov
and
adc
repnz
iret
std
in
fucomip
leave
int3
int
jp
xor
jle
push
sbbl
ds
shlb
popa
andl
push
jbe
mov
xchg
push
mov
lret
xchg
push
sahf
daa
pop
dec
cli
dec
int
push
adc
sahf
jle
and
sbb
mov
mov
ficoml
pushf
jae
jno
mov
movsb
cmpl
or
push
mov
adc
inc
jle
jnp
cmp
scas
jno
andl
aaa
push
pop
sahf
sbbb
mov
mov
and
cld
push
sahf
jge
loop
iret
cmpsb
and
xchg
mov
ja
sbb
sub
je
add
repnz
xor
lock
or
xor
sbb
push
adc
iret
pop
rcrb
test
xor
es
push
mov
clc
leave
fistpl
push
outsl
test
fbstp
stos
pusha
sub
sub
push
popa
push
std
cltd
sahf
sbb
dec
adc
into
movsb
fsts
dec
sbb
aaa
out
mov
fs
inc
pop
adc
jle
mov
xor
dec
mov
testb
sbb
shl
mov
mov
pop
out
adc
push
mov
fucomi
fsub
lea
sbb
sbb
jecxz
aaa
into
clc
vpcmpgtw
push
stos
dec
and
pop
pushf
in
jns
jmp
push
push
mov
leave
inc
data16
test
dec
mov
or
or
mov
push
cmp
xorb
push
in
fldenv
cwtl
test
cmp
adc
and
sbb
dec
cmpl
std
push
sbb
xlat
les
adc
fistps
loopne
cs
lock
mov
mov
cli
sbb
ret
xchg
add
outsl
xchg
iret
out
bound
mov
clc
ret
jnp
xchg
pusha
fstpl
out
jmp
push
iret
or
faddl
or
mov
fs
mov
cmp
pop
fisttpll
or
mov
mov
shl
adc
xor
test
loope
inc
cmp
lods
inc
fistpll
cmp
xchg
push
mov
pusha
adc
fsts
sbb
lea
jbe
clc
dec
sbb
rorb
cmpsl
cmp
sbb
es
adc
icebp
fimull
addr16
mov
out
stc
and
rclb
pop
xchg
mov
cwtl
ret
mov
push
es
sub
inc
push
xor
jp
or
xor
pushf
out
data16
dec
pop
xor
arpl
std
aaa
jnp
imul
lcall
xor
shlb
fsubr
jnp
mov
adc
inc
push
xchg
cmp
pop
dec
fistpl
pushf
lods
jp
jb
xchg
mov
ret
jg
lret
pop
sub
inc
jmp
pop
icebp
cmp
fs
inc
pop
add
call
or
cmp
jmp
aam
mov
jae
inc
cmp
pop
sbb
inc
sbb
enter
popa
fs
add
mov
adcl
sahf
sbb
cmpsb
fsub
dec
test
scas
jb
hlt
mov
adc
add
add
rcrl
popf
hlt
ss
cmp
sahf
inc
mov
sbb
test
jle
dec
pop
mulb
in
add
dec
jge
jle
push
popf
pop
jmp
sahf
pop
dec
and
cli
jl
cwtl
sub
jge
pop
dec
daa
or
xchg
cmpsl
and
inc
push
sub
pop
cwtl
gs
outsl
das
pushf
or
pop
mov
xchg
hlt
clc
iret
shrb
lcall
mov
in
leave
fidivl
lock
jl
dec
mov
movl
xor
mov
mov
frstor
xor
aam
roll
and
xor
push
std
xlat
leave
fnstcw
add
cwtl
and
push
xor
es
jge
testl
mov
pop
insb
adc
pop
sbb
lcall
and
pusha
ss
fsub
nop
dec
pusha
ret
dec
mov
xor
pop
mov
lahf
pop
stos
add
or
push
pop
push
dec
stc
lea
shll
repz
sbb
push
dec
mov
sub
or
rol
ss
imul
mov
adc
and
and
ljmp
stos
cmp
testl
out
jnp
sub
repnz
mov
int3
pushf
cmp
aam
in
jnp
sbb
lcall
jecxz
scas
lret
loopne
xchg
jge
cld
jmp
imul
cmpsl
lds
push
outsl
cs
mov
lret
mov
les
out
scas
rcl
pop
into
sahf
dec
aam
pop
aaa
push
lds
push
sbb
inc
cmpb
in
mov
insb
add
rorb
ret
mov
xlat
aad
outsb
nop
aam
xor
cmp
cltd
and
fnsave
mov
ljmp
xor
push
mov
pop
loop
sub
cmc
fwait
sbb
lret
xchg
daa
repnz
inc
and
inc
enter
add
and
shl
setno
pop
cmp
jecxz
mov
sbb
mov
repnz
leave
jns
clc
or
iret
adc
pop
or
inc
mov
sbb
inc
bound
inc
imul
xchg
cmpsb
popf
inc
lods
lods
mov
sahf
movl
xor
sub
rcrl
fbstp
fsts
cmp
bound
pop
xchg
inc
adc
scas
iret
push
roll
enter
sub
xor
fs
sub
and
notl
imul
jne
jl
mov
pop
add
sbb
xchg
scas
dec
pop
sub
in
aam
pop
push
cmp
add
xor
mov
dec
xor
sub
movsb
mov
cwtl
add
shll
cmp
es
mov
call
mov
inc
jecxz
jo
sub
nop
stos
rcrl
sarl
adc
fxch
leave
inc
pusha
xlat
lods
fnstenv
adc
pop
stc
sti
sahf
pop
xchg
cwtl
pop
fnsave
fbld
js
cltd
and
out
jae
rcrb
jge
rorb
icebp
fwait
movsb
sahf
dec
fnstenv
mov
test
sahf
jmp
xor
icebp
sbb
inc
movsw
jge
push
pop
nop
insl
add
call
adc
jno
into
mov
stos
lea
xlat
sub
xor
and
jecxz
sbb
sub
mov
xor
adc
popa
and
push
sti
adcb
or
cli
sub
cmpsb
out
mov
inc
jp
xlat
repz
in
sub
fiaddl
shl
popa
xchg
sub
sub
das
or
les
loopne
pop
sbb
jns
aad
jle
jge
loopne
xor
stc
add
out
mov
and
mov
xchg
fdivrl
xorb
fisttps
cmp
lcall
cltd
mov
xchg
inc
test
icebp
addr16
jno
inc
stos
divl
cmpsb
cmp
aaa
jl
adc
bound
ljmp
sbb
in
dec
mov
mov
int3
in
les
pop
xchg
int
pop
cmc
stos
out
or
xchg
mov
pop
cwtl
xor
mov
adc
mov
fdivr
sbb
sbb
scas
orb
gs
movsl
jae
pop
inc
inc
dec
push
pop
mov
int
rorl
sbb
aam
subb
cmc
loop
scas
pop
pop
xchg
lock
mov
mov
repnz
outsl
push
je
testl
enter
jg
ss
lahf
in
in
xchg
push
cmp
daa
jg
fisttpll
dec
in
jle
fwait
scas
inc
insb
sti
jo
sbb
mov
jmp
leave
call
out
sbb
pop
and
jne
out
dec
adc
jg
test
xor
xchg
pusha
dec
mov
testl
das
icebp
xor
imul
mov
add
shll
and
mov
inc
inc
dec
out
arpl
pushf
push
ja
pop
repz
inc
jb
in
or
mov
int
dec
pop
scas
jl
add
fcomps
mov
pop
push
mov
stos
js
dec
call
cmp
inc
cmpsb
xchg
add
es
xor
scas
push
xchg
test
mov
push
add
rep
sbbb
in
adc
push
jecxz
jecxz
mov
lods
xchg
jnp
cmp
int3
add
aam
in
xchg
mov
jg
adc
inc
lret
je
push
inc
sub
dec
fiaddl
jae
je
inc
lods
or
filds
jmp
push
pop
jno
dec
cmp
jo
popl
or
or
and
inc
sbb
lret
pop
gs
and
insl
mov
call
aad
mov
and
stos
mov
lods
std
jne
je
mov
push
inc
lea
aam
dec
outsl
mov
insb
sti
mov
pop
out
jo
stos
mov
fucom
lret
lock
or
subl
or
dec
insl
es
jnp
sbb
jns
xor
hlt
scas
fidivrs
push
in
jge
or
inc
and
fwait
xchg
insb
inc
aaa
repz
daa
arpl
out
xor
cmp
mov
jne
or
paddusw
inc
xchg
pusha
xor
mov
mov
test
ja
xchg
pop
mov
pushf
and
or
mov
test
outsb
jmp
js,pt
push
daa
sbb
cmpb
xchg
mov
in
fnstcw
mov
push
movsb
jns
sub
push
inc
mov
sbb
mov
fs
mov
adc
or
cli
pop
lods
inc
cmp
cli
inc
pop
lret
in
das
clc
or
mov
fwait
adc
loope
imul
xlat
lea
mov
hlt
mov
imul
cwtd
xchg
adc
dec
test
or
inc
mov
std
mov
or
fcompl
and
std
mov
test
fdivrl
xchg
jmp
stos
cmp
inc
xchg
rcll
rol
popa
clc
lret
mov
xchg
sbb
lcall
in
jecxz
or
jecxz
adc
cld
stc
ficomps
mov
icebp
push
sub
adc
mov
aam
inc
fsubs
fnsetpm(287
pop
jg
stos
mov
mov
test
sahf
test
mov
inc
adcb
outsl
sbb
push
adc
add
xchg
cmp
push
in
je
mov
leave
rcl
pop
icebp
cltd
lods
les
out
movsb
into
movsl
enter
and
sbb
mov
into
sahf
xor
inc
sbb
stc
mov
or
mov
dec
or
dec
nop
sub
aaa
adc
insb
jle
jbe
ljmp
ljmp
test
xor
leave
jns
fwait
ljmp
xor
adc
addr16
xor
sub
jl
in
dec
inc
inc
dec
ficomps
dec
xorl
in
cli
test
insl
bound
test
pop
gs
notb
ljmp
jg
rcl
xor
mov
int
stos
fcmovbe
fsubl
push
inc
cmc
inc
dec
mov
fucomi
scas
cmpsb
add
push
das
out
lods
xchg
lods
lea
adc
sbb
adc
ja
pop
xor
data16
push
divl
sub
dec
sti
xchg
jnp
mov
daa
outsl
cwtl
loopne
dec
nop
scas
lret
pop
std
mov
movsb
xchg
cs
pusha
div
scas
lcall
hlt
shlb
sti
jmp
sbb
sub
xchg
push
arpl
loopne
pop
cltd
inc
inc
push
sub
les
sub
hlt
aad
cmp
inc
pop
fs
gs
outsl
sub
loop
ret
add
decl
inc
fnstcw
outsl
xchg
outsb
cmp
or
dec
add
mov
addr16
cwtl
or
mov
xor
lret
insl
dec
les
push
cmpsl
inc
push
mov
jb
cmp
pop
cwtl
data16
les
mov
fwait
in
int
sub
inc
mov
imul
imul
xchg
inc
and
insl
std
inc
mov
rolb
stc
or
insl
mov
dec
gs
fisubrl
lret
jnp
cmp
shrb
xchg
sub
pushf
lahf
mov
cltd
inc
xor
cmp
repz
pop
fidivl
sbb
jmp
push
addl
call
or
pop
cmp
loopne
das
or
mov
out
cmp
cmp
push
pop
sbb
flds
fwait
add
sub
cmp
pop
push
out
push
xor
add
xchg
jmp
lock
lods
xor
push
inc
or
test
xchg
jb
mov
inc
cmp
cmc
xchg
fst
leave
pop
cmc
repnz
jb
lds
lcall
cltd
pop
dec
shll
outsb
rorl
insb
imull
xor
loopne
rcrl
mov
sbb
push
ret
push
xor
xchg
in
nop
lock
rcrl
lcall
jg
dec
sub
ljmp
xchg
scas
add
jmp
jne
xor
dec
cmc
cmp
lret
xlat
cld
xchg
add
test
out
push
sub
xlat
pop
push
add
in
test
inc
scas
inc
test
adc
sub
lea
cmp
cltd
pop
dec
pop
jle
and
lods
adcl
notl
lret
pop
loop
add
scas
es
in
sub
in
lods
jg
jb
xor
cmp
popf
insl
lds
inc
daa
inc
popf
adc
pop
cmpsb
ss
dec
fists
daa
inc
mov
mov
mov
pop
xor
mov
push
in
fisubrl
adc
sarb
sub
xchg
mov
mov
cli
icebp
fisubrs
loop
add
incl
movsb
ss
mov
mov
push
shlb
cmp
sub
cld
xchg
shrb
lods
imul
xchg
mov
push
loop
dec
and
icebp
xlat
imul
cmc
enter
mov
sbb
test
xchg
outsb
cmpsb
sbb
and
xorb
push
sub
mov
xor
xchg
rorb
mov
or
inc
adc
xchg
sub
dec
mul
sbb
scas
and
dec
lcall
fwait
dec
scas
bound
mov
dec
mov
rcrl
xchg
ret
jp
stos
inc
js
adc
lret
xor
pusha
push
xchg
aas
jbe
lock
add
popf
push
sti
es
out
sub
cmp
insl
popf
lahf
ret
xchg
pop
and
out
xchg
insb
cltd
push
loop
xor
jecxz
inc
xchg
movsl
inc
adc
je
bound
les
or
push
out
xchg
out
xchg
xor
adc
push
inc
into
cmp
jge
mov
jp
inc
ret
fnstcw
or
sub
aaa
push
inc
or
cmpl
dec
insb
bound
mov
stos
cmp
dec
jae
ja
pop
adc
xor
and
out
ljmp
push
cmp
and
enter
jg
sbbl
dec
push
jmp
iret
movsb
fcoms
adc
pop
mov
add
mov
cmpsl
jo
mov
cmp
aas
xchg
sub
ret
adc
popf
mov
fisubs
add
jns
add
movsb
xchg
aaa
add
jb
inc
into
lahf
jg
or
lds
mov
mov
or
movsl
in
xlat
sbb
fisubs
std
sub
test
pop
add
and
pushf
jae
imul
mov
outsl
subl
and
mov
in
inc
not
ljmp
xchg
in
mov
lret
jae
inc
stos
enter
and
xor
xchg
adc
fsubr
dec
leave
pusha
popa
or
out
sub
jle
sbb
jae
dec
push
ljmp
sub
mov
sbb
or
out
xchg
cmp
mov
mov
cs
dec
bound
lcall
dec
xchg
push
fxch
and
cli
pusha
outsl
in
mov
pop
inc
jmp
jo
stos
and
sbb
test
xor
not
push
dec
mov
sub
repnz
popf
xor
scas
sbb
enter
insb
mov
iret
mov
xor
inc
cmp
es
jmp
mov
sub
lret
adc
push
jecxz
cltd
cmp
lret
arpl
mov
push
jmp
mov
push
popw
lret
sahf
cmpsl
push
sbb
iret
outsb
sar
es
mov
add
pop
stos
in
jl
daa
dec
loope
cmp
pop
push
sbb
lock
mov
lds
mov
pop
mov
sub
add
mov
add
stc
mov
sti
out
jns
and
add
sbb
sbb
inc
aam
mov
rcll
stos
add
cmpsb
xor
scas
dec
fld
sub
cli
xchg
xor
inc
xchg
test
dec
cmpsb
xor
sub
cmpsb
push
pop
les
pop
pop
popa
fnsave
jle
cmp
sub
xchg
ds
mov
and
mov
mov
xor
sahf
icebp
das
fs
jp
pusha
pop
sbb
dec
fidivrl
inc
cltd
mov
inc
and
movsb
fsqrt
xchg
shll
arpl
scas
dec
mov
popa
jg
cmpsl
sbb
add
mov
pop
mov
inc
testl
bound
scas
mov
and
imul
lock
xchg
xor
in
add
push
dec
lods
mov
lods
in
inc
dec
inc
pop
cld
insl
jne
lahf
sbb
dec
fsts
fs
sub
aam
dec
xchg
jns
push
gs
addr16
dec
adc
mov
pop
lods
sbb
rcl
notl
test
inc
mov
aas
adc
and
and
adc
imul
adc
loop
jle
iret
mov
leave
pop
scas
mov
int
mov
scas
jns
push
sbb
mov
dec
fildll
mov
or
inc
push
adc
loope
mov
mov
ret
inc
lds
ret
xchg
inc
lcall
or
cvtdq2ps
int3
mov
in
cli
xor
jmp
sbb
inc
cmpsb
imul
in
push
cmpl
stos
push
lahf
adc
add
cmp
jg
lds
jne
mov
push
adc
jmp
insb
not
iret
fidivrl
faddl
add
sub
pop
adc
jp
dec
nop
pop
fbstp
ss
xchg
cld
cld
pushf
clc
mov
jo
mov
pop
icebp
scas
push
aad
add
cs
inc
mull
out
jns
add
ss
or
mov
and
mov
aad
insl
jnp
call
mov
inc
xchg
mov
int
push
inc
test
daa
mov
mov
aad
sbb
xchg
cwtl
popa
leave
inc
mov
adc
out
push
sbb
test
hlt
enter
dec
out
dec
or
and
or
in
into
out
int
sbb
and
int
jle
rcrb
sti
xor
outsb
xorb
ss
sahf
sti
pop
rcrb
mov
les
mov
fisubrs
push
das
pop
out
pop
idivl
inc
sub
mov
mov
lcall
lcall
mov
xor
ja
and
outsl
mov
pop
std
lds
jp
or
bound
daa
aaa
push
cmp
mov
pop
mov
push
pop
cmc
mov
sub
les
cmc
aam
jg
inc
daa
mov
clc
dec
in
aaa
aam
imul
rdpmc
sbb
sub
iret
xchg
je
add
movsl
mov
add
stos
pop
and
pusha
push
inc
lods
cmp
out
and
cmp
and
out
add
jne
test
inc
dec
xor
cmp
clc
push
cmpb
stc
shrb
or
xor
jae
mov
push
or
adc
int
xor
inc
stc
xchg
add
out
nop
out
adc
and
leave
adc
jle
pop
scas
push
stos
cltd
sub
jle
cli
cmp
mov
or
daa
pusha
ss
dec
pop
mov
push
or
or
rorl
lret
push
push
xlat
jecxz
fldenv
xchg
mov
or
orl
mov
fsubr
bound
iret
pop
add
pop
cmp
fistps
rol
jp
outsl
jge
fwait
adc
hlt
mov
mov
fidivs
fists
lret
repnz
jg
push
popf
and
mov
push
outsb
lcall
gs
cmp
cld
mov
orb
jns
stos
incb
sbb
insb
out
xor
xchg
mov
sarl
xchg
test
mov
mov
adc
inc
mov
push
fwait
out
aas
push
cli
or
inc
pop
mov
int3
fisubrs
push
js
xchg
psadbw
xchg
test
movsb
or
rorl
movsl
lds
icebp
int3
outsl
xor
jmp
cmp
dec
mov
inc
fmul
mov
out
cmp
xchg
xor
repnz
mov
ret
mov
cmp
xor
or
jl
mov
cmp
cmp
dec
pop
sbb
mull
out
iret
sub
pop
out
iret
outsl
cmp
sub
add
gs
xchg
cs
push
test
in
testb
dec
adc
pop
cmp
push
xor
movsb
insl
inc
adc
jge
ficoms
in
and
call
stos
ret
shll
inc
mov
mov
les
adc
push
or
inc
push
fistps
xor
sbb
lret
cmp
dec
and
sub
jle
cmp
outsb
movsb
shll
addr16
lcall
jo
cltd
sub
jg
jle
fldcw
shlb
mov
int
stc
arpl
cmc
jl
pusha
sub
add
icebp
rolb
or
jecxz
xor
pusha
mov
pop
icebp
inc
dec
sbb
int3
xchg
shll
dec
in
cmp
mov
sbb
sti
mov
jl
xchg
aad
call
push
pop
ret
sub
pusha
dec
data16
add
xchg
or
idiv
cmp
mov
test
rcll
pop
cmp
std
xchg
or
push
sbb
mov
iret
dec
add
push
adc
popa
hlt
movsl
mov
jno
loope
push
jge
rol
push
add
adc
mov
out
mov
test
add
mov
out
addb
popa
mov
and
push
push
xlat
sbb
fnsave
xor
mov
dec
movsb
sbb
insl
lcall
fstp
mov
mov
jbe
cmp
lea
jb
fs
mov
gs
scas
mov
fisttpl
rcrb
mov
mov
cmp
insl
nop
out
iret
push
outsl
push
daa
push
mov
jle
or
lret
jae
jno
ret
mov
xchg
sbb
mov
lods
ds
testl
or
dec
xchg
popf
dec
jecxz
mov
push
pop
push
subb
mov
and
cmp
xor
inc
sbb
pop
outsb
inc
nop
push
cwtl
dec
stos
loope
in
jle
stos
lods
add
pop
sbb
xorb
sub
push
outsb
inc
or
mov
push
rcll
add
das
movsb
xor
pop
and
lahf
ss
outsl
mov
movsl
out
sbb
aas
loopne
jnp
testb
test
stc
xchg
inc
adc
ret
mov
mov
xor
push
stos
inc
dec
out
jle
jecxz
sbb
stc
fwait
pop
mov
dec
cmp
rcl
fsubrp
add
jl,pt
sbb
xor
adc
add
insb
js
mov
dec
inc
xlat
jge
jnp
jno
pop
mov
xchg
lods
jmp
add
and
pop
sub
mov
lock
je
fwait
orb
test
std
add
cmp
push
jmp
push
mov
sbb
cmp
ja
out
aaa
push
and
mov
add
pop
xor
maxps
mov
cmpsl
lret
cltd
outsl
push
and
call
pushf
insb
mov
repz
adc
jg
mov
shr
xor
lds
test
mov
movsl
cmp
aad
clc
aam
mov
bound
test
mov
adc
scas
or
stos
jmp
xlat
jnp
daa
mov
adc
xchg
mov
decl
pop
fisttps
and
cmp
xchg
imul
pop
sbb
and
or
les
xlat
inc
enter
cmp
cli
test
iret
sub
add
fisubrs
cld
movsl
inc
inc
jae
loop
dec
cmc
mov
jno
cmpsl
aam
mov
bound
and
adc
push
mov
lds
mov
nop
sahf
xor
jno
mov
idiv
xchg
lret
xor
jg
inc
fs
sbb
push
pop
push
mov
fidivs
push
imul
js
adc
scas
sub
or
fnstenv
ds
sub
incl
or
xchg
cs
dec
out
mov
aad
jp
jae
clc
ret
repz
cld
adc
and
nop
mov
add
scas
icebp
movsb
insl
mov
adc
or
shrb
insb
jae
imul
mov
pop
cmp
loop
mov
loopne
push
mov
add
mov
mov
push
sub
sahf
in
js
or
stc
xor
inc
inc
cmpsb
fiaddl
lcall
stc
cwtl
add
mov
fs
test
adc
adc
js
filds
lret
xchg
mov
inc
pop
mov
cmpsb
inc
adc
insb
dec
loopne
out
in
cmpsb
jnp
shlb
aad
push
adc
sti
cmp
push
addb
pop
das
call
iret
out
pushl
jbe
pop
lods
add
lahf
rorl
add
push
loop
adc
lds
jge
and
scas
scas
mov
jp
data16
adc
les
pop
xor
loope
jl
lods
ret
push
dec
add
stc
adc
and
push
pop
or
dec
xor
faddl
test
mov
clc
inc
xor
std
sbb
add
or
stos
imul
movsl
shrb
jmp
cs
add
sbb
sub
push
jg
addr16
and
mov
test
pop
push
aaa
test
lea
push
mov
test
aas
lods
mov
jl
jg
cmpsb
dec
out
xchg
fisttps
dec
lret
fisttps
xchg
xchg
push
test
cmp
jg
adc
addl
or
clc
hlt
out
ja
sbb
mov
sbb
movsl
pop
movsl
sub
sar
sti
and
inc
bound
push
andb
mov
enter
sahf
bound
popf
inc
js
or
popf
sub
sub
mov
jge
insl
mov
cld
pop
dec
je
cli
dec
dec
out
inc
mov
rcrb
adc
xchg
fstl
daa
in
scas
dec
pop
loopne
hlt
dec
mov
xchg
stc
lods
pop
fnstenv
or
cmpsb
js
addr16
push
fisubrl
cld
out
js
cmp
pop
dec
das
jp
pop
pop
dec
in
addr16
jae
mov
add
repz
adc
inc
mov
cmc
mov
jmp
fwait
push
rorb
jb
cmpsb
movsl
cmp
mov
mov
adc
icebp
cmc
int3
movsl
daa
loopne
fisubs
mov
dec
out
dec
fcoms
lock
and
fs
cmp
call
inc
cmpsl
lret
mov
fnstsw
movsl
mov
jp
insl
pop
mov
xor
xor
mov
mov
mov
and
xor
add
aaa
xchg
xor
lret
or
sbb
mov
faddl
xchg
push
sahf
fwait
mov
mov
out
pop
icebp
test
shlb
idiv
mov
out
lock
xchg
jns
sub
xchg
xor
leave
stc
xchg
arpl
std
aas
sahf
and
in
pop
jae
cmp
dec
xchg
mov
mull
adc
push
add
pop
cmc
jne
sbb
cltd
xchg
jl
adc
pop
xor
xor
or
cmpsl
lahf
lods
lock
ret
loope
or
cmpsl
fidivs
inc
push
out
jg
sbb
out
sbb
push
imul
aas
mulb
lfs
adc
jecxz
ljmp
mov
shr
fs
pop
mov
fucom
andb
je
test
pop
fiaddl
cld
dec
mov
mov
sbb
icebp
and
stos
pop
pop
mov
dec
movsb
out
jo
sarl
in
cmp
and
pop
mov
push
arpl
das
jg
xor
aad
mov
add
sub
fldcw
adc
outsl
jg
add
cmp
and
test
jb
fiadds
adc
test
pop
pop
pop
add
lret
and
imul
icebp
xchg
int
push
pop
scas
ret
iret
push
lods
push
or
into
mov
je
mov
addr16
jecxz
jo
jne
sub
pop
unpckhps
mov
lock
das
pop
rcl
or
mov
mov
push
pop
ljmp
jae
ljmp
push
sbb
es
xor
inc
fistpl
add
popa
jns
bound
fcompl
orl
add
mov
mov
xor
aas
pop
mov
fimull
int
inc
icebp
popa
xor
cli
call
ljmp
jne
pop
adc
dec
adc
jne
daa
addb
jns
pop
xor
ret
jo
mov
pop
or
pop
aaa
mov
jmp
movsb
cmp
popf
ret
int3
call
mov
inc
fld
vorps
leave
and
call
inc
xor
cmc
sub
lret
repnz
cmpsb
push
fwait
cmpsb
les
or
in
mov
mov
pop
jp,pt
add
mov
jae
mov
and
test
jae
cmpsb
jnp
push
cltd
adc
out
addl
mov
scas
cmp
push
pop
inc
mov
ss
leave
shlb
test
push
or
lret
lret
addr16
iret
movsl
push
jg
addr16
sub
das
xchg
jae
mov
and
fwait
or
pop
rorl
jp
pop
and
mov
sbb
mov
or
shll
adc
loopne
add
sub
scas
push
aaa
push
and
inc
pop
xchg
dec
divl
and
fistl
mov
adc
and
ret
cmpsl
ja
pop
jmp
xchg
dec
inc
push
rcll
fldl2t
and
outsb
xor
inc
lods
cmp
jo
dec
aad
pop
test
icebp
xor
jge
adc
jns
mov
and
iret
mulb
sbb
pushf
dec
out
pop
mov
adc
fistpll
adc
mov
lcall
mov
sub
push
mov
shll
push
cwtl
shrl
loope
in
out
push
sbb
aas
sbb
mov
mov
cmp
inc
sbb
inc
adc
mov
stc
inc
adc
lcall
and
int3
adc
outsl
aad
or
rcl
mov
or
lret
or
pop
sbb
ljmp
mov
sbb
daa
icebp
mov
ficoms
lcall
dec
ds
mov
sub
dec
addb
pop
inc
jecxz
sti
pop
jmp
cmp
dec
loop
in
cmc
cli
inc
sbb
lahf
outsl
roll
sbb
pushf
hlt
mov
mov
jnp
sub
xchg
rcll
lcall
mov
sahf
sub
repz
cli
mov
sub
call
inc
mov
inc
iret
adc
test
adc
push
and
pop
push
notb
test
and
nop
mov
mov
or
sub
mov
inc
cmp
ljmp
lret
inc
inc
ret
dec
push
lods
sbb
leave
loope
cmp
and
daa
cs
daa
inc
inc
inc
push
add
push
out
cmp
shrw
into
mov
sub
das
stc
leave
popa
and
or
imul
xorl
pop
call
sti
loop
stc
popf
push
lea
dec
std
and
mov
mov
xor
out
aam
arpl
pusha
sarb
mov
push
call
fmuls
mov
js,pt
decl
push
fistpll
dec
or
sub
dec
jo
xor
jmp
pushf
sar
imul
xchg
in
daa
inc
popa
jle
inc
gs
dec
mov
stc
nop
lahf
pop
rol
push
mov
or
cmp
jle
adc
pop
adc
pop
testb
sub
btc
jp
movsl
mul
mov
sarb
fimuls
xchg
push
outsl
sub
loopw
inc
loop
adc
repz
jp
testl
ret
cwtl
pop
pop
push
dec
arpl
jae
das
sub
sub
inc
clc
popa
lds
push
xor
sar
aaa
push
loope
push
cwtl
rcr
popf
icebp
jmp
lcall
test
add
jno
jne
or
imul
sbb
xor
andb
int3
arpl
dec
sbb
xor
cmp
mov
jecxz
cmp
push
jo
cltd
push
inc
sub
push
or
xchg
mov
sub
and
mov
push
or
jle
jl
icebp
mov
jmp
subl
jnp
ja
mov
ds
sub
mov
jecxz
cli
rcll
jns
pop
lahf
or
aam
enter
insb
pop
cmp
orb
mov
dec
adc
icebp
mov
iret
fbld
shl
jns
pop
mov
and
sar
dec
enter
outsb
in
inc
out
shl
add
jo
shl
int3
lret
stos
inc
jg
shrl
sbb
testl
xor
mov
imul
xchg
sub
add
rcrl
orl
mov
xchg
xor
test
or
dec
out
jnp
xchg
ret
popf
lods
mov
in
jp
icebp
fsubrs
or
dec
pop
push
fidivs
jecxz
mov
mov
loope
push
jns
mov
dec
nop
addr16
push
xchg
jne
xor
outsb
test
bound
mov
ja
ds
pop
dec
lds
lods
inc
xchg
mov
add
push
mov
dec
dec
shlb
out
fwait
les
stos
out
cmc
mov
outsb
push
jno
push
divl
push
jb
mov
out
in
movb
pop
adc
popf
repz
fwait
cmpsl
aam
call
jbe
mov
sahf
lcall
lcall
or
pop
rorl
cwtl
xor
into
sub
pop
jge
leave
jns
shl
pushf
into
lds
jge
daa
sahf
jne
loopne
xchg
jnp
sete
fdivrs
mov
aad
pop
add
xorb
xor
inc
lcall
xchg
scas
inc
jnp
mov
jne
loope
mov
sbb
inc
ret
inc
mov
int
mov
xchg
insl
jno
movsb
addr16
adc
cmpsl
sbb
jecxz
in
lcall
and
mov
cmc
aas
mov
push
movsl
add
jno
xchg
cmp
imul
sbb
xchg
push
mov
mov
loop
jmp
sbb
shlb
hlt
std
andb
or
mov
or
inc
mov
jle
mov
xchg
fistl
mov
aaa
fchs
test
or
sbbb
sbb
xchg
jns
jmp
ja
sbbl
dec
jp
lods
pop
and
lcall
movsl
add
adc
mov
sub
xor
adc
mov
and
iret
icebp
minps
inc
std
mov
lret
jns
push
enter
mov
mov
jmp
fistl
and
aaa
cs
lahf
rcll
popf
mov
pusha
cli
mov
sbb
sub
fwait
jecxz
imul
icebp
lods
pop
lds
cmp
cmpsb
lcall
or
push
mov
test
xchg
fidivs
loope
les
pop
sbbl
stos
dec
outsb
aas
test
leave
push
mov
iret
and
loop
cwtl
sub
mov
mov
mov
popf
divl
or
or
mov
imul
scas
stos
add
mov
pushf
jle
loopne
stos
sbb
inc
int
iret
ja
jle
rclb
movlps
mov
mov
cli
test
sbb
or
mov
imul
cmp
xor
movsb
xchg
sub
gs
testl
mov
and
mov
test
outsl
adc
mov
inc
sub
xchg
add
pop
inc
mull
cmp
inc
bound
cmp
dec
inc
or
pusha
in
jp
adc
xchg
stos
fadds
xor
mov
sti
out
add
dec
cwtl
pop
push
imul
mov
shl
outsb
push
inc
cmp
mov
in
adc
rcll
inc
imul
inc
int
aad
lods
repnz
jne
imul
sbb
mov
aaa
lock
in
jbe
mov
aas
or
outsb
mov
mov
hlt
xchg
mov
popa
xchg
rclb
cld
xchg
fisubl
inc
dec
lea
sub
movsb
shr
aad
scas
ja
pop
xor
mov
jle
push
nop
adc
cmpsb
repnz
mov
mov
shr
add
xchg
inc
sbbb
adc
push
sbb
and
loop
inc
push
adc
mov
push
add
stc
mov
push
int
sbb
fwait
enter
rolb
cltd
cmp
dec
pop
push
inc
lcall
jge
push
aam
xchg
insl
sub
hlt
popa
jno
lock
xchg
call
jp
ja
rcrl
add
call
sbb
xor
jle
mov
xlat
xchg
sub
cmp
jne
adc
addb
xor
shll
outsl
mov
icebp
imul
ficomps
aad
xchg
movsb
cs
mov
lods
idivl
fcoms
stos
xor
shrl
mov
xor
mov
mov
rclb
movsb
repnz
inc
pop
fldt
and
pop
jae
fidivl
lahf
dec
shll
or
test
or
xchg
or
or
pop
cltd
sti
shl
add
mov
push
inc
pop
xchg
out
movsb
mov
push
mov
shl
jbe
enter
push
bound
xchg
adc
das
xorl
mov
loop
mov
cmp
lret
rol
mov
xchg
mov
imul
adc
push
jb
rorl
cli
aaa
adc
add
ret
and
pop
loopne
xchg
ds
sbb
push
call
pop
mov
inc
cmpl
xchg
daa
sbb
jno
leave
movsl
gs
xchg
pop
pushf
sub
stc
daa
sbb
pop
popf
mov
out
into
cld
push
out
push
jno
pop
fdiv
dec
or
ss
push
andl
sbb
push
mov
inc
cmpsb
and
push
fwait
jae
pop
sahf
arpl
pop
repnz
mov
sub
and
repnz
pop
and
lahf
jo
pop
fisttpl
mov
sub
insb
add
mov
pop
sub
cmp
fs
pop
pop
inc
sahf
mov
in
daa
mov
fwait
sub
std
mov
push
aam
jnp
jb
add
xor
daa
dec
pop
or
cmp
xor
mov
fmuls
xor
jle
insl
push
inc
and
lret
jae
adc
cmp
test
pop
mov
popa
sbb
xchg
leave
mov
pusha
mov
jp
stc
pop
mov
movsb
rcrl
mov
sti
mov
dec
jecxz
int3
mov
std
imul
jo
push
fbstp
lcall
shll
adc
mov
data16
mov
out
mov
push
cmpsl
ds
inc
mov
xor
aas
in
lds
mov
sahf
insl
cmovs
cs
sarb
sub
ja
dec
data16
mov
add
jle
push
loope
or
mov
call
pusha
jl
andb
mov
mov
cmpsl
or
test
imul
xor
add
or
hlt
jae
mov
sbbb
and
jl
ljmp
jno
add
pop
outsb
test
sahf
and
fisubrl
dec
pop
call
pusha
sub
cli
fmuls
test
mov
pop
jo
xlat
pop
aam
adc
mov
mov
xchg
ficompl
mov
pop
jne
jae
sub
mov
ret
push
jae
hlt
insb
daa
jecxz
adc
xor
fs
lods
mov
fidivl
jecxz
cmp
popl
xchg
dec
pop
xchg
in
push
shl
sbb
lods
outsl
sub
icebp
sub
mov
sub
inc
daa
inc
setle
pop
pushf
cmp
fildll
and
std
dec
pop
sub
pop
add
cmp
loopne
mov
cmp
add
mov
popa
test
cmp
clc
cmp
sbb
push
insb
in
jp
js
or
shlb
inc
int3
push
rorb
dec
sbb
inc
cli
add
inc
in
xor
andb
iret
pop
int3
sub
js
mov
add
orb
cmp
cmp
jne
push
shlb
ret
add
cmp
outsb
cmp
mov
cmp
call
xor
xor
mov
fsub
mov
push
mov
xchg
adc
push
shll
popa
sbb
xchg
inc
push
inc
out
in
std
mov
push
mov
cmp
testb
sbbl
cld
push
jge
mov
jp
shlb
flds
dec
cmp
scas
mov
push
test
fisttpll
pop
addb
pushf
cmc
je
mov
push
mov
pop
push
inc
inc
jnp
mov
into
cwtl
repz
iret
fistpl
test
xor
pop
jge
call
cmp
pusha
ret
cld
mov
mov
fidivrl
stos
cld
push
xchg
jo
movsb
pop
push
mov
and
jb
cmp
xchg
movsl
fldt
jb
inc
call
inc
dec
insb
lock
cmp
inc
outsb
cld
call
dec
xchg
pusha
in
mov
dec
mov
and
nop
pop
lcall
aaa
std
xchg
imul
call
dec
inc
mov
mov
xchg
inc
mov
pusha
jmp
adc
mov
mov
sbb
push
lds
mov
or
xchg
and
inc
sbb
xor
pop
sarl
sti
dec
pop
add
add
cmpl
jo
shl
adc
xlat
cmpsb
cmp
mov
push
dec
ficoms
mov
test
mov
xchg
sti
dec
cltd
testl
add
into
and
mov
pop
mov
ret
stc
adc
jo
imul
jns
inc
push
mov
jbe
in
aam
jp
adc
mov
jp
dec
adc
shlb
mov
mull
push
in
jecxz
flds
mov
leave
dec
es
out
movsl
jmp
hlt
dec
setbe
fnstenv
out
mov
mov
subb
lcall
xor
add
mov
mul
jb
sub
push
jle
daa
daa
int3
sbb
ror
stos
idivb
ds
xchg
sbb
xorb
loop
shll
negl
test
data16
jnp
inc
sub
sub
jnp
jge
ds
mov
mov
xor
mov
add
xor
hlt
lock
xchg
add
jge
cmp
adcl
in
enter
das
pop
push
lods
xchg
testl
js
fnstenv
dec
inc
pop
inc
out
jmp
aam
mov
std
or
and
insl
xchg
sahf
imul
aam
shlb
pusha
pop
push
inc
adc
int
push
data16
test
add
xchg
ss
fsubl
xchg
sarl
hlt
fisubs
sbb
sub
jge
mov
jg
push
sub
mov
mov
cmp
rcrb
cmp
cld
lahf
out
shlb
sub
mov
push
jbe
das
movb
lret
pushf
push
and
sbb
pop
cs
dec
mov
add
sbbl
push
test
xchg
pop
push
ds
inc
movsl
in
cmp
push
push
out
xchg
hlt
pop
jmp
call
and
lea
in
mov
into
pop
jns
sbb
mov
xor
shlb
or
push
sub
cmpsb
cmpsl
dec
push
add
rcrl
out
lcall
and
jo
out
out
cmp
pushf
fistps
sub
xor
push
outsl
rorl
mov
jbe
inc
mov
fcmovb
scas
push
int3
cld
pop
push
mov
rclb
popf
and
dec
adc
in
int3
lahf
mov
movsl
cwtl
and
and
outsb
pop
lahf
sub
dec
lods
inc
jge
lds
fwait
mov
aaa
mov
out
xchg
jl
cmp
ret
imul
movsl
in
xor
fstpl
xchg
push
call
cmp
jbe
mov
std
or
jg
iret
jecxz
adc
scas
out
cmc
mov
mov
lahf
gs
cld
fxch
fstpt
push
lods
mov
push
mov
inc
jecxz
xlat
in
add
inc
nop
xchg
jmp
xchg
divb
test
fwait
out
sub
push
xchg
mov
or
mov
cmp
jecxz
adc
call
fbstp
xchg
ja
inc
mov
addr16
loopne
mov
or
movsb
mov
dec
dec
sub
shrl
lret
test
in
or
cs
scas
cli
ds
mov
gs
loopne
xchg
push
sub
jns
cmp
xchg
sub
xchg
add
inc
in
mov
xlat
and
aas
ret
int3
lods
jmp
popl
das
xor
add
mov
icebp
adc
cmc
sub
mov
dec
sbb
xchg
out
push
rcrb
jmp
jnp
pop
incb
inc
xor
pop
sub
and
push
cli
dec
xor
mov
ja
cmpsl
int3
ret
aaa
and
int3
lods
insl
ja
jnp
rcrb
mov
andl
int
aad
lcall
dec
data16
fstpl
aas
dec
push
insl
mov
in
mulb
int
lret
push
mov
mov
pushf
lahf
cmc
pusha
test
or
inc
test
dec
scas
pop
das
cmpsb
xchg
fwait
repnz
push
in
sbb
xchg
or
mov
enter
flds
ds
fsubp
arpl
into
in
ror
push
stos
jmp
into
push
sub
das
out
add
push
je
dec
mov
sub
add
test
dec
add
int
fadd
lret
xor
push
push
sbb
push
bound
leave
insb
adc
int
mov
adc
aam
gs
popf
adc
cmp
jecxz
pop
lcall
mov
sbb
lods
add
mov
clc
sbb
lcall
push
inc
sub
pop
movsl
or
mov
xor
daa
push
mov
jns
icebp
push
push
lods
sbb
adc
loope
mov
jmp
stc
pop
icebp
cmp
jmp
lea
or
addb
ds
loope
sahf
dec
mov
sub
bound
add
cmpsb
cmpsb
pop
mov
int3
mov
test
mov
adc
hlt
adc
push
and
xchg
fsubrl
mov
imul
push
sub
mov
into
add
xor
out
mov
pop
bound
stc
push
xorl
xor
sbb
sbb
sbb
loop
lock
call
pop
das
inc
insl
out
pop
push
ret
dec
imul
dec
in
std
enter
pop
push
testl
add
xor
xor
cmp
fdivrs
iret
cmpsb
dec
adc
rorw
sar
cmp
pusha
jg
pop
push
jg
add
test
inc
jae
in
cmp
inc
arpl
fsubrs
popf
inc
pop
mov
in
and
jg
je
and
dec
jp
insl
mov
and
in
sbb
jl
mov
les
pop
xlat
sbb
test
sub
mov
lret
pop
mov
cmp
ds
adc
cwtl
cmp
cmpsl
cmp
or
mov
in
push
dec
les
sub
add
dec
or
mov
das
push
pop
add
inc
cmp
into
dec
lahf
lret
shll
push
dec
jnp
loope
jbe
movsb
add
xchg
pop
and
movsl
cmp
pop
ja
pop
mov
test
cmp
push
cltd
mov
push
repz
out
movsb
aad
xlat
mov
jl
jae
mov
adc
mov
jge
sub
pop
sub
repnz
repnz
and
and
push
or
enter
xor
ficompl
pop
bound
mov
cmp
push
sub
mov
sarl
rol
pop
inc
push
lock
pop
mov
scas
mov
sub
loope
imul
pop
inc
cmc
lahf
cltd
aaa
adc
shrl
xchg
jns
dec
mov
jns
cmp
test
sbb
rcr
stc
int
sub
mov
mov
inc
jb
popa
or
or
out
ja
cmpsb
les
jns
outsb
mov
sbb
cmp
or
les
and
mov
xor
fnstcw
adc
daa
fadd
sbb
clc
jle
push
mov
xor
mov
add
jl
fcomip
inc
popf
xor
clc
and
jg
rolb
dec
lahf
icebp
data16
push
jmp
movsb
daa
clc
sub
stc
loop
xchg
dec
addr16
mov
sbb
iret
mov
idivl
mov
mov
mov
imul
add
dec
adc
clc
mov
push
out
mov
mov
sbb
arpl
inc
std
cmp
mov
popa
xor
xchg
adc
jge
dec
cmc
mov
mov
bound
mov
push
sub
jnp
insb
out
adc
mov
mov
addr16
jge
adc
stc
sub
mov
inc
in
jg
lock
cs
jnp
push
jnp
pop
and
pop
addr16
test
sub
sbb
or
dec
push
scas
sbb
fwait
enter
sub
icebp
push
rcl
mov
push
xchg
ss
jne
mov
scas
cld
jae
cmp
arpl
sub
adc
dec
repnz
fsubr
adc
xor
dec
incb
sahf
mov
mov
aas
in
adc
out
pop
or
sti
xchg
push
push
jno
mov
mov
mov
cmp
jns
push
test
lcall
mov
fdivr
cwtl
jbe
dec
pusha
jb
fucomi
lock
jecxz
sbb
stos
mov
cwtl
in
mov
lahf
das
je
pop
or
push
xor
rclb
mov
pcmpeqw
and
loope
mov
push
lea
mov
test
and
mov
test
sbb
popa
test
inc
xor
in
inc
jae
cltd
test
leave
call
sub
sbb
xor
pop
lods
jge
sbb
outsl
push
test
movsb
aam
xchg
cmc
push
in
shlb
call
push
lock
icebp
into
cmpsb
ret
fnstcw
push
add
cmp
push
mov
dec
mov
dec
loope
mov
insb
je
mov
imul
loop
mov
pop
fucomp
mov
pop
mov
aas
iret
inc
imul
pop
cmp
test
into
xchg
imul
or
nop
jnp
push
negl
sub
push
insl
ret
test
pop
or
push
shlb
or
aaa
out
jmp
sub
sbb
jl
mov
sbb
or
and
jnp
neg
push
test
movsb
add
jle
adc
mov
fbstp
jnp
lea
xor
or
out
std
adc
icebp
jo
cs
out
pop
push
xor
es
jle
mov
jmp
mov
orb
iret
stos
test
mull
xchg
in
jns
aaa
adc
mov
clc
iret
popf
aad
push
mov
jo
or
jb
stos
lea
test
call
xchg
or
enter
cmc
cli
sbb
cmc
int
gs
jne
push
jae
mov
push
mov
je
scas
movsb
addr16
lahf
xchg
cmp
sar
fwait
pop
lcall
fisubrl
pop
sub
mov
aad
lret
shrb
add
xor
rcr
push
xchg
outsb
mov
mov
cmp
movsb
rclb
cmp
sbb
or
das
and
incb
arpl
sbb
and
jbe
add
add
ret
mov
test
add
inc
mov
popa
add
pop
repz
xchg
data16
xor
jle
icebp
loopne
sbb
std
or
shlb
xchg
push
and
pop
and
cmpsl
dec
outsb
into
push
imul
ja
es
or
sbb
lret
add
xor
sub
or
inc
sbb
ja
and
add
mov
push
xor
daa
jecxz
dec
imul
sbb
mov
in
jmp
jle
pop
xor
xchg
adc
popf
mov
hlt
jns
cmp
fs
insl
rcrl
sbbb
jmp
fadd
pop
push
lcall
push
cli
lcall
mov
addr16
push
mov
sbb
and
pop
pop
and
loope
std
shll
ds
xchg
fisubl
rclb
sub
pop
mov
pop
add
lcall
and
das
inc
testb
and
push
rcll
lea
insl
out
sti
inc
xorl
mov
pusha
jg
sbb
popf
scas
insl
pop
push
sbb
bound
dec
into
sahf
mov
shl
jl
adc
jle
xlat
sub
mov
jge
pushf
scas
clc
aaa
cmp
adc
enter
or
cs
cmpsb
dec
push
in
out
adc
push
ljmp
call
sbb
and
mov
sbb
rcrb
fcoms
test
mov
xchg
mov
jns
ljmp
xor
clc
out
pop
in
jns
jg
mov
lock
fstl
xor
push
inc
scas
pop
leave
mov
repnz
lahf
lahf
or
cmp
pop
xor
sbb
dec
into
stc
ret
insb
enter
in
aas
push
repnz
fstpl
outsl
add
push
mov
mov
rorl
sahf
es
xchg
sbb
insl
icebp
aas
mov
rclb
or
mov
jae
mov
cli
xchg
aam
pop
cmp
push
push
pop
rol
xor
shlb
xchg
outsb
xor
jecxz
pushf
insl
cmpsl
xor
cli
push
outsb
insb
and
imul
shl
xor
lods
jns
inc
imul
outsb
lock
aam
call
xor
jp
ror
mov
xor
sbb
les
iret
add
xchg
push
adc
inc
push
adc
cmpsb
add
pop
xchg
movsl
cli
lcall
int3
cmp
dec
in
shlb
fnstenv
dec
mov
cld
push
mov
or
divb
jl
pop
and
imul
mov
mov
adc
push
mov
loop
out
pushl
and
fstl
and
aam
shlb
js
jbe
mov
sbb
push
in
pop
cmp
in
sub
sbb
cmpsl
mov
inc
rorl
pop
in
mov
loop
jo
dec
inc
push
andl
scas
mov
dec
stc
xchg
cmp
fildll
movsl
fnsave
push
jmp
mov
shll
xchg
mov
mov
les
loope
mov
insb
aaa
and
cltd
adc
rorl
cld
inc
dec
ds
ljmp
jno
push
sbb
icebp
popa
sti
fstpl
mov
pusha
rcr
xchg
stos
push
test
gs
xor
mov
arpl
and
movb
cmp
adc
xchg
sbb
mov
mov
clc
mov
mov
cmp
push
sbb
pop
mulb
or
mov
sbb
std
xchg
cwtl
pushf
scas
ret
sahf
mov
out
mov
rorb
icebp
mov
push
aad
xchg
lods
fwait
dec
sbb
shl
je
xor
iret
adc
ljmp
out
lcall
in
das
inc
imul
shl
mov
inc
mov
out
loop
mov
cmp
popf
cmpsb
cmp
out
andl
pop
xor
xchg
arpl
popa
sub
inc
add
insb
fs
and
pop
and
push
push
dec
and
clc
int
jbe
sub
adc
test
and
jae
ljmp
xchg
mov
push
out
bound
add
cs
sbb
pop
push
and
imul
jno
mov
repnz
mov
xor
outsb
sub
out
jg
xchg
scas
add
mov
cmpsb
nop
mov
lds
xchg
stos
mov
pop
xchg
push
fistpl
xor
orl
test
mov
inc
dec
sar
fnstcw
ds
mov
xchg
xchg
add
xchg
mov
mov
in
movsl
pop
in
incl
jl
cld
mov
arpl
stos
inc
clc
or
jne
inc
mov
jbe
push
daa
mov
push
movsb
ret
mov
cli
push
or
mov
jge
and
ljmp
or
or
push
ljmp
stos
int3
jg
leave
loope
push
push
push
push
jle
mulb
jno
mov
xlat
mov
lds
test
call
add
push
adc
push
pop
inc
push
xlat
ret
jl
xor
adc
call
add
lcall
bound
pop
or
imul
mov
xor
or
js
mov
jge
imul
and
aaa
repz
std
jle
sub
push
push
sbb
aas
iret
pop
xor
dec
dec
mov
dec
dec
cld
xchg
lea
add
or
rolb
ret
in
clc
and
fsubr
fwait
pop
repnz
in
das
or
cmpsl
mov
mov
xchg
mov
sbbl
lds
pop
and
xchg
aaa
sahf
js
mov
add
mov
inc
fs
cwtl
push
mov
mov
in
jg
add
rclb
or
add
int3
add
ss
mov
push
insb
subb
les
test
nop
cmp
pop
add
jne
mov
ja
imul
int
outsb
sbb
sbb
mov
jnp
test
push
inc
and
xor
decl
push
aad
rol
dec
pusha
jnp
aas
push
in
lret
lret
ret
orl
fcmovnbe
shll
nop
adcb
mov
outsb
sub
imul
pop
repnz
cmp
fdivr
jne
xchg
add
lods
pop
ja
scas
adc
adc
sub
mov
lret
pop
shrl
push
mov
fbstp
mov
gs
insb
adc
insb
jae
sub
sbb
xor
je
ficompl
xchg
cmp
sub
fdivrs
jmp
aaa
inc
ror
jb
fs
rclb
enter
rclb
cmp
adc
fmuls
mov
aaa
adc
ret
rolb
notb
sub
cs
xor
pop
testb
cmp
jno
mov
or
mov
add
arpl
js
sti
in
adc
mov
mov
pusha
adcl
jmp
int3
dec
fs
jb
mov
mov
and
pop
cmpsl
repz
fsub
mov
ret
loopne
rcl
mov
sub
adc
dec
sbbb
jno
ret
int3
xchg
mov
xchg
push
gs
fcmovb
mov
pop
jb
sub
data16
or
xchg
cs
pop
out
cmpsb
inc
mov
cld
outsl
inc
popf
adc
mov
pop
mov
in
nop
push
call
aas
loop
lock
adc
movd
aam
pop
sub
cmp
cmp
repz
aad
pop
fiaddl
test
xchg
sub
pusha
hlt
call
loop
jbe
mov
or
mov
inc
cmp
shr
stos
inc
lret
pop
fstl
lods
push
jne
or
leave
sbb
add
cs
push
sbb
outsb
cmp
xor
jnp
push
call
cmp
inc
pop
mov
jns
adc
push
pop
sub
lret
divl
mov
adc
push
out
xor
lock
orb
pushf
stos
mov
sub
pop
bound
loop
inc
adc
cli
and
lahf
pusha
adc
fsubrp
mov
adc
out
lret
pop
imul
lahf
and
push
test
loop
pop
jne
mov
and
pop
jbe
push
movsl
iret
xchg
loopne
push
push
in
sbb
xchg
int
jno
imul
test
inc
mov
mov
or
leave
mov
jle
ljmp
insl
xor
push
jo
aas
hlt
es
adc
inc
add
mov
fnstsw
sub
int3
shl
cmp
mov
cmc
aam
adc
or
xor
sti
stos
test
movsl
ds
call
mov
jns
mov
add
pushf
loop
mov
mov
sahf
xchg
sub
movsl
cmp
outsb
jns
add
nop
pop
pop
xor
add
cld
push
jecxz
or
sub
faddl
inc
fisubrs
pop
xchg
mov
test
jae
js
inc
fsubl
push
pop
out
sbb
push
or
mov
adc
aas
xlat
lods
and
fdivrp
pop
dec
xchg
test
jo
cwtl
sub
out
xchg
lea
arpl
mov
dec
mov
and
cmp
imul
in
push
out
repz
adc
and
push
xor
pop
in
cmp
cmpsl
mov
inc
adc
stos
test
mov
ret
xor
je
jle
mov
xchg
or
lea
mov
xchg
xor
xor
daa
jno
add
adc
repz
icebp
inc
cmpsl
dec
cmp
push
sbb
xchg
sub
fs
arpl
lea
jle
popf
shrl
mov
add
pop
aad
pop
pop
jl
mov
mov
aas
loop
xchg
adc
into
out
sbb
sarb
inc
jbe
xchg
cmpsl
arpl
mov
test
cmp
data16
adc
inc
hlt
ds
ret
cld
push
lock
or
dec
push
sub
call
xor
cmpsb
dec
test
loopne
hlt
leave
xchg
mov
shrb
mov
push
aad
cmp
jo
and
les
jns
sub
cmc
push
loop
xor
add
aam
cli
popf
fistpll
sbb
inc
xor
inc
adc
mov
into
and
sti
jp
push
rcrl
xor
and
shlb
fmuls
push
push
xchg
dec
fdivrs
mov
enter
pop
bound
fisubrs
cmp
dec
xlat
xlat
aas
mov
cmp
decl
push
sbb
out
mov
add
push
cltd
xchg
mov
sahf
rorl
adc
sub
sbb
fstl
das
cmp
jae
out
in
add
fcompl
iret
xor
dec
fisttps
fucomi
xchg
outsb
xchg
cmp
cwtl
sti
aaa
sbb
imul
mov
jp
insl
aam
mov
iret
arpl
xchg
mov
popa
rolb
push
je
call
mov
fs
arpl
pop
dec
sbb
mov
je
and
test
ds
shll
inc
int
mov
sbb
dec
pop
sahf
mov
jb
fucom
clc
cmp
push
add
imul
xor
inc
leave
pop
jmp
dec
or
jo
sub
daa
js
cmp
dec
pop
push
pmullw
sub
xchg
fcmovnbe
jp
pop
sub
fimull
pop
dec
daa
insl
cmp
bnd
dec
cmp
mov
rol
in
movsb
push
int3
sbb
aam
adc
stos
xchg
sbb
sahf
scas
cmp
gs
fs
fimuls
dec
cltd
gs
mov
push
and
add
test
mov
pop
iret
xor
push
inc
cmc
aas
push
mov
mov
test
push
xor
fiadds
mov
test
xchg
mov
sarb
sbb
in
mov
mov
sub
push
dec
jns
int3
dec
sbbb
mov
outsl
nop
repz
add
mov
pop
into
jnp
cmp
pushf
arpl
loop
jne
out
xchg
sahf
sbbl
xor
ss
frstor
xchg
sub
and
mov
add
int3
enter
xchg
sub
out
cmp
sbb
xchg
lock
daa
add
ret
pop
cmpsl
popa
xchg
pop
or
loope
sti
sub
pop
fcomp
xchg
sub
icebp
adc
push
sbb
mov
dec
jae
ss
adc
stos
fsubr
in
or
test
mov
mov
pop
mov
les
xchg
jle
dec
outsl
inc
sbb
lret
repnz
sbb
xchg
scas
adc
mov
cmc
mov
fsubs
xor
jmp
inc
pop
mov
push
insl
scas
nop
jo
daa
inc
popa
mov
add
pop
mov
pop
pop
test
fistl
cwtl
mov
push
pop
mov
adc
jbe
mov
pop
xchg
fistl
jb
adc
nop
fnstenv
sbb
push
push
pop
jmp
cli
mov
mov
into
or
cmp
mov
outsl
cwtl
rclb
mov
gs
das
or
or
jg
push
cmp
sti
jg
fucomip
popf
xchg
repnz
out
pop
jmp
sub
pushf
xor
in
lahf
hlt
dec
hlt
cmp
pop
dec
fadds
dec
pop
cmp
or
jcxz
xchg
mov
sbb
ret
push
xor
cmp
xchg
es
cmp
in
xchg
and
sbb
mov
or
cmpsl
xlat
loope
hlt
fwait
mov
imul
shrb
shll
jp
and
push
push
repnz
mov
jns
cwtl
nop
pop
out
xor
aas
in
outsb
add
test
adc
mov
sbb
rolb
fwait
sbb
and
cmp
jge
bound
shrb
pop
dec
enter
stos
inc
xchg
adc
jecxz
mov
pop
out
lods
repnz
sub
scas
inc
push
mov
adc
lea
fsubs
sub
dec
add
andb
xchg
lock
shl
sub
pop
mov
or
cmp
arpl
shrb
xchg
cmp
pusha
mov
and
add
aaa
mov
inc
xlat
movsb
xchg
shlb
push
cmp
aaa
mov
int
loope
unpcklps
jns
faddl
and
cltd
movsl
mov
mov
jg
and
mov
movsb
repz
sub
lock
leave
inc
mov
xchg
inc
stos
push
dec
jecxz
int3
rolb
outsl
xlat
adc
and
clc
add
lds
sbbb
test
call
xor
adc
sub
inc
adc
pop
cwtl
push
lods
mov
xor
dec
push
dec
fimuls
addr16
mov
and
pop
pop
movsl
inc
cmpsl
jae,pt
fbstp
bsr
and
scas
xchg
ja
mov
into
mov
lds
adcb
add
popa
add
inc
jg
enter
pop
xchg
pop
xor
movaps
adc
inc
xchg
mov
or
jb
pop
ss
mov
rdtsc
cmc
cmp
add
into
in
mov
sbb
mov
lret
sub
les
mov
sarb
adc
sbb
xchg
mov
icebp
sub
and
cs
stc
mov
jo
adc
inc
push
xchg
pusha
or
jae
dec
test
aaa
pop
pop
sbb
mov
mov
cli
xchg
lret
pop
xor
push
insl
lea
mov
cltd
inc
into
xchg
cltd
jae
cwtl
adc
xchg
lods
sub
add
shrb
scas
jp
mov
rorl
stos
cwtl
jb
cmove
ret
and
sub
fidivl
inc
fucomi
jne
cli
mov
movsl
mov
add
popa
jmp
xchg
nop
push
mov
divb
popf
rcr
add
in
fistpll
loopne
sbb
lea
movsb
add
adc
insl
add
inc
ret
fnsave
aad
and
jl
xor
arpl
add
mov
add
mov
fisubl
test
pop
jne
in
sbb
cmpsb
inc
cltd
add
cmp
jle
inc
pop
aas
flds
les
push
push
xor
enter
xchg
pusha
mov
daa
je
mov
stc
inc
aad
jne
sbb
dec
mov
sbb
and
and
leave
jle
mov
and
cwtl
movsb
ds
js
lret
xchg
mov
mov
xlat
test
outsb
xchg
jp
test
inc
fiaddl
jb
ficoml
rcll
xorl
jo
jge
mov
fs
push
push
stos
andb
push
shl
or
and
fsubr
jmp
stos
rorl
mov
fdivr
or
sahf
sub
sbb
gs
sub
lods
jo
jmp
and
in
sarb
mov
fnstenv
aam
mov
sub
aad
pop
imull
rolb
inc
sub
repnz
dec
aad
pop
pushf
cs
dec
popa
mov
insb
cmpsb
sub
or
dec
decl
jg
mov
sbb
leave
and
xchg
push
and
pop
jle
aas
mov
inc
ss
inc
inc
mov
ret
and
jp
sbbb
sbb
xchg
push
fisttpl
out
or
dec
js
mov
cmpsl
push
mov
mov
aas
dec
jne
inc
fadd
test
outsb
ljmp
dec
add
mov
jge
xor
or
aas
icebp
dec
push
jmp
sbb
mov
cmpsb
xchg
inc
jg,pt
ret
cmpl
stc
pop
xor
fldcw
mov
push
mov
enter
mov
cmp
rol
addr16
jecxz
jp
ret
repz
dec
pop
rorl
cmc
mov
dec
cmp
std
adc
sbb
cmp
push
mov
or
cmp
xchg
scas
add
sbbb
mov
shld
push
lock
enter
cmp
mov
pop
cmc
add
pusha
or
jl
fisubrs
fucomi
dec
ret
movb
jle
add
sbb
jl
jge
pop
sub
add
ret
cmc
hlt
lret
jae
jns
nop
xchg
dec
pop
mov
and
lcall
test
mov
or
xchg
ret
cmp
lret
mov
cwtl
and
push
push
mov
addr16
sbb
sub
nop
xchg
cmpl
dec
rcl
push
push
scas
mov
rorl
cmp
imul
pop
out
icebp
lcall
mov
inc
mov
push
mov
jno
mov
sar
jge
test
mov
xor
sarl
std
add
sbb
test
push
mov
mov
ret
sbb
sbb
dec
hlt
call
sbb
frstor
mov
fsubrs
pop
mov
into
sub
arpl
add
dec
mov
mov
xchg
mov
adc
js
cs
enter
mov
jnp
mov
inc
mov
mulb
lcall
imul
pop
adc
xor
rol
xchg
pop
sahf
leave
je
push
xchg
add
push
xchg
xchg
clc
nop
mov
in
pop
push
cltd
sub
pop
mov
cmp
icebp
push
mov
cmp
xor
icebp
pop
and
pusha
ja
bound
pop
adc
sub
mov
and
test
imul
test
sarl
or
pushf
iret
lods
mov
fcomip
sbb
mov
in
arpl
mov
addb
push
jmp
shl
ss
or
sbb
lahf
out
int3
adc
fldcw
js
dec
and
iret
loopne
test
dec
icebp
add
adc
mov
mov
ficoms
or
nop
repnz
ss
push
add
out
sub
cwtl
add
lods
test
int
lods
inc
or
fsubr
aas
add
call
sub
call
push
fcmovb
push
sbb
sti
int
test
clc
dec
xor
imul
jl
ror
xor
xchg
mov
ficomps
aaa
nop
leave
arpl
insb
or
mov
mov
add
sbb
sbb
or
sbb
cmpsl
adc
lahf
pusha
movsb
std
adc
popa
je
mov
jmp
xor
inc
sbb
imul
pop
in
call
lock
test
xchg
and
out
in
inc
scas
into
gs
out
test
lds
pop
imul
or
sbb
aas
in
xorl
dec
jno
or
pushf
lret
cld
mov
fsts
mov
or
mov
loop
add
dec
jbe
aam
mov
jb
mov
mov
cmpsl
fisubl
add
les
icebp
inc
cmp
gs
cmp
mov
cmpsl
ds
push
in
xor
lds
xchg
sub
mov
insl
cmp
pop
hlt
xchg
inc
rcll
mov
shl
test
cmp
imulb
xchg
jl
lods
lods
mov
cmpb
pop
clc
out
sub
push
cmp
mov
out
add
adc
sub
leave
pop
xchg
setnp
in
insb
and
punpcklwd
dec
xor
int3
pop
sub
rcrb
rcrb
mov
push
inc
rcll
pop
and
adc
dec
cld
inc
pop
jb
jnp
push
dec
jecxz
mov
jb
adcl
cmp
lahf
mov
je
pop
shlb
xlat
arpl
ds
daa
xor
pusha
ret
cmp
ret
rcrl
mov
jge
loop
sbb
das
lds
push
inc
mov
adc
dec
mov
and
adc
cmp
cld
cmp
test
inc
jbe
das
push
mov
test
jmp
push
sbb
mov
test
std
xchg
es
mov
sbb
lods
inc
sub
sarl
inc
xchg
test
jo
xchg
cmc
jl
sub
sbb
xlat
outsb
stc
cmp
sub
fisubl
and
ret
call
popa
inc
adc
jp
inc
cmp
xchg
js
xchg
xor
and
clc
fldcw
jns
in
cltd
sbb
xor
jmp
orl
clc
cld
add
aam
and
sub
call
mov
pop
out
mov
pop
jbe
mov
popf
xor
xchg
inc
mov
jo
outsl
je
mov
dec
daa
jge
inc
test
popf
lds
inc
call
scas
and
fidivl
fbstp
mov
shl
push
shlb
jmp
loop
lock
aad
inc
inc
cmp
out
repz
adc
and
repz
enter
ljmp
ds
ret
int
cmc
je
adcb
sub
push
sub
xor
dec
and
xchg
ss
clc
push
movsl
and
clc
dec
sub
mov
jg
sbb
imul
je
xchg
sub
cmc
nop
mov
and
push
xchg
mov
xchg
pushf
fisttps
mov
gs
xor
mov
and
pop
stos
push
in
int3
mov
mov
out
nop
loopne
mov
cmpsl
lea
pop
jle
popf
cmpsl
or
jb
xchg
loope
sarl
or
shrl
fbld
mov
dec
jmp
out
mov
sub
fwait
test
pop
repz
xchg
mov
shl
mov
scas
mov
inc
int
outsl
jmp
dec
aas
sbb
inc
mov
loopne
or
sbb
mov
add
xor
gs
movsl
xchg
mov
into
jmp
push
aad
and
bound
nop
cmp
adc
cltd
shlb
fndisi(8087
cmc
mov
fdivp
pushf
adc
mov
mov
movb
or
push
xor
jb
sbb
mov
xor
adcl
test
iret
push
testb
mov
cs
sub
imul
push
stos
push
pop
aam
jns
mov
cmpsb
les
add
ja
sbb
arpl
push
test
inc
dec
mov
sub
test
cmp
inc
sub
das
repnz
or
jmp
push
lock
and
into
mov
into
sti
xchg
add
mov
movsl
cmp
cmp
mov
mov
sahf
call
xor
inc
and
in
sub
jg
lock
jl
jecxz
les
add
push
iret
or
int3
fisubrs
add
iret
cwtl
inc
sbb
std
sub
int3
fstpt
aaa
js
dec
insl
add
pop
outsl
movsb
push
in
pushf
cmpsb
mov
divl
sub
aad
pop
jmp
push
xchg
cmp
pop
push
mov
sbb
mov
arpl
std
mov
mov
je
aam
mov
cs
lods
and
mov
ljmp
xor
mov
or
out
pop
xchg
outsb
out
aam
nop
push
pop
rclb
sub
mov
nop
xchg
xchg
xor
cmp
fsubrl
add
xchg
or
test
aas
and
push
jmp
cmovo
nop
inc
jb
mov
xchg
inc
xor
int
js
inc
leave
mov
xchg
fwait
add
jle
in
xor
lret
pop
push
into
ljmp
pop
mov
and
sbb
fsubs
dec
pop
testb
pop
push
ds
in
jl
lcall
adc
mov
pop
stc
mov
push
sub
or
cmpsl
push
or
sub
andl
sbb
sbb
fidivrl
icebp
push
pop
jae
sub
and
ljmp
test
push
xor
movsl
or
push
pop
shrb
or
jecxz
lds
imul
mov
cwtl
jecxz
dec
dec
sbb
test
mov
imul
xor
je
aas
popa
in
enter
pop
js
testl
testb
and
sub
xchg
jmp
sbb
shlb
sub
dec
mov
cmpb
cmp
mov
cmc
pop
adc
cmpsl
xlat
adc
sub
and
push
std
xchg
cmp
stos
sarb
add
sbb
or
cs
dec
sahf
push
push
add
test
pushf
cltd
pushl
xor
xchg
out
adc
arpl
inc
mov
add
xchg
push
jae
rorb
leave
pushf
sti
lods
pop
sub
subb
outsb
rcr
xchg
cmp
stos
test
in
mov
xor
and
add
jmp
fs
pop
push
adc
sub
and
cmpsl
or
pop
cli
pop
lds
adc
dec
and
arpl
stos
sbb
inc
fdivr
xchg
mov
dec
data16
mov
dec
mov
imul
xor
stos
decb
and
push
movsb
push
dec
add
int
xchg
cli
dec
push
fwait
addr16
sbb
jp
shll
sbb
shrb
js
push
xchg
jb
mov
xor
test
inc
hlt
pop
arpl
jl
mov
jnp
cmp
add
nop
dec
sbb
fs
movsb
mov
push
jns
repz
fstpt
mov
into
movsb
jecxz
arpl
cmp
mov
out
hlt
inc
scas
mov
adc
and
lret
repz
iret
int
add
pop
cli
push
mov
testl
cmp
push
sub
mov
pop
rcrb
jge
pop
imul
iret
dec
cmp
into
and
and
in
call
imul
pop
mov
imul
mov
sub
fisubrs
mov
pop
js
aad
push
sbb
push
jne
xchg
cmpsl
xlat
outsb
xchg
fcomps
cmpsl
and
inc
cs
add
adc
push
pop
in
nopw
into
daa
mov
pop
mov
mov
lds
int
das
sub
jo
stc
xlat
mov
dec
mov
jp
xchg
scas
jb
mov
outsb
xchg
push
out
rcrl
dec
cwtl
je
inc
aad
repnz
sbb
cmpsl
inc
rcrb
daa
lret
addl
mov
pop
ljmp
add
fistps
inc
and
mov
jecxz
jl
mov
or
jnp
push
outsl
push
dec
sti
fwait
mov
incb
xchg
das
push
pop
inc
in
cmp
jae
int
push
jmp
sub
pop
add
pop
sti
adc
ljmp
and
enter
xchg
in
sub
pop
jp
out
stos
jo
pop
ljmp
je
mov
in
mov
pushf
data16
mov
xchg
push
addr16
pop
cmp
push
pop
es
sbb
pop
in
test
jg
cli
adc
inc
sbb
js
pop
mov
cltd
outsl
mov
dec
pushl
cli
lcall
sarl
mull
xchg
add
nop
test
aaa
test
or
pop
jo
lods
sub
fnsave
test
jb
add
stos
sbbl
push
sbb
in
out
popf
jge
or
sbb
add
es
fldenv
enter
fidivrl
jne
jle
rcll
lret
popa
inc
sbb
ret
mov
jns
aaa
andl
addps
mov
shrl
sar
out
push
popf
sbb
cmp
add
or
mov
xchg
xchg
sti
pop
insl
cmpsb
fmul
jb
flds
nop
cmc
std
sub
push
pop
cmp
fmull
adc
jno
and
mov
sub
les
hlt
movl
inc
insl
mov
rcll
xor
outsb
push
sub
insb
mov
inc
lock
shl
xchg
xchg
movsl
mov
pusha
mov
sbb
pop
out
ja
popa
jg
pop
jmp
cmp
cwtl
out
sub
out
jl
cli
push
inc
add
repnz
push
loop
enter
test
cmp
out
or
mov
mov
daa
aam
fidivl
push
movsl
sti
pop
cmp
jne
dec
pop
pop
cld
xchg
adcl
aad
iret
int
pop
mov
icebp
jp
xchg
cmp
ret
add
and
push
punpcklwd
adc
sahf
addr16
pop
push
xor
adc
lea
ss
mov
pop
mov
xchg
ret
xlat
cs
pop
jge
xchg
mov
into
adc
xchg
out
shl
sbb
loopne
or
lods
mov
push
fldl
movsl
push
movsb
shrl
ja
xchg
imul
jae
sbb
or
insl
mov
pop
jp
mov
leave
xlat
sbb
mov
in
adc
movsb
inc
lods
fistpll
rcr
scas
mov
clc
leave
push
dec
dec
mov
dec
test
mov
adc
mov
fwait
sub
mov
lcall
out
cmp
jne
test
test
fists
out
inc
lahf
xor
nop
and
xlat
pop
mov
mov
push
mov
inc
fildl
dec
dec
scas
mov
cmp
jbe
repz
outsl
cmpsb
cmp
jecxz
and
xor
lods
shr
jae
movsl
sbb
xor
inc
push
jne
mov
xchg
lcall
stos
in
cltd
lods
testl
idivl
push
cmp
and
sub
inc
add
and
fs
or
cmc
jbe
push
fadd
pop
test
out
out
jmp
fcomps
and
xchg
sub
and
loope
pop
add
data16
decl
and
jnp
push
cltd
xor
pop
mov
cmp
mov
lock
loope
outsb
jo
stos
test
mov
xchg
adc
push
jmp
stc
and
jbe
out
lock
push
int
inc
xor
or
xchg
push
jns
out
jle
adc
lret
inc
pop
mov
in
pop
jle
cmc
mov
cmpsb
mov
pop
push
fwait
cmc
fucom
mov
je
stos
inc
cmp
jmp
xchg
jge
pusha
scas
test
mov
sbb
pop
pushf
aaa
cld
fisubl
loopne
pop
in
xchg
ljmp
js
lods
in
into
cltd
mov
nop
fsubl
pop
jne
xor
lea
xor
nop
cld
xchg
pop
cs
out
mov
test
push
sub
xchg
sbbl
jne
pop
xlat
incb
cmp
cmpsl
add
xor
or
popf
std
stos
and
aam
jmp
in
popf
ret
xchg
and
aad
add
jg
sub
repnz
jecxz
aad
adc
xchg
mov
out
jno
push
scas
fdivp
paddb
sbb
loop
lods
cmp
test
cmpsl
sbbb
sbb
jmp
adcb
mov
loopne
and
sbb
stos
push
sub
cmp
and
cmpsb
lcall
in
cmp
gs
cmpsl
ljmp
jbe
dec
mov
nop
insl
cs
fsts
mov
mov
add
mov
popf
and
sbb
scas
xchg
std
xlat
dec
xor
inc
inc
inc
fildl
mov
and
sbb
pop
inc
lods
jg
jnp
andl
or
lds
cmpsb
je
adc
pop
cmp
sbb
je
movsb
cmp
add
aam
push
mov
xor
jbe
fcmovnbe
icebp
or
out
out
adc
adc
push
inc
dec
xchg
movsl
pop
mov
push
fiaddl
xchg
icebp
arpl
sbb
ret
dec
mov
adc
lods
in
jno
ss
pop
or
mov
outsb
icebp
xchg
mov
mov
xor
push
mov
xor
mov
flds
push
outsb
push
cmp
mov
push
push
or
out
adc
sbb
mov
in
decb
cs
push
scas
out
mov
js
xchg
sbb
pop
jecxz
jmp
pusha
call
inc
xor
lea
adc
mov
pushl
out
std
aas
fnstsw
pop
mov
popf
mov
or
mov
ja
inc
fnstcw
push
lahf
fcomi
lret
adc
int3
sbbl
jbe
xchg
push
cmc
orb
jg
lds
lret
sahf
dec
loop
and
call
mov
pop
test
mov
cmp
and
test
int
jne
jmp
mov
xchg
stc
fldenv
inc
or
pop
push
sbb
mov
cmp
nop
bound
in
adcl
mov
add
divl
mov
mov
pusha
push
outsb
jne
mov
adc
mov
shrb
mov
adc
push
out
dec
loop
popa
stc
xor
pop
out
mov
aas
add
push
out
cli
nop
fiaddl
fisubl
loop
loope
inc
add
rol
push
adc
loope
mov
into
out
jp
leave
push
dec
scas
loope
popa
stc
dec
add
movntq
push
lret
jb
out
mov
loop
cli
nop
stos
add
in
loope
outsb
pop
data16
loop
cmp
lods
add
in
mov
xor
mov
clc
inc
jle
lock
daa
repz
int
outsb
sub
scas
pop
jne
cld
repz
pop
or
or
pop
sbb
jp
int3
sahf
xor
or
shlb
xor
fidivrs
fidivs
mov
fcompl
xchg
adc
push
aaa
popf
xor
add
xchg
and
xchg
ret
push
pop
hlt
and
sbb
test
pop
push
mov
bound
add
daa
sub
ret
repnz
mov
fstp
stos
or
dec
cmc
sahf
xor
outsb
subl
sbb
into
hlt
pop
hlt
ds
lret
push
lds
stos
lds
dec
repz
mov
outsb
stos
xchg
or
popf
loopne
and
repnz
scas
cmp
imul
push
mov
pushf
pop
test
rol
pushf
scas
lds
cs
popf
and
incl
imul
lds
add
and
bound
mov
imul
out
dec
and
cmp
sub
pop
ret
aam
movsb
mov
ret
repnz
jp
inc
push
ja
shll
pop
add
adc
pop
int3
sub
test
js
jg
lret
pop
xor
push
nop
cmc
andl
adc
adc
dec
pop
ja
sbb
mov
sub
popf
xchg
adc
lcall
movsl
ja
xchg
cs
dec
adc
out
mov
xchg
mov
fistl
shlb
fistps
sub
out
dec
rolb
stc
dec
arpl
push
adc
sub
xor
lahf
cmp
sub
out
xchg
cmp
pop
lods
loopne
and
outsl
pusha
sti
lea
xorb
xchg
stc
or
dec
cmpsb
inc
jle
test
pop
push
fnsave
cmp
movb
push
popa
dec
xlat
loope
jae
jno
loopne
adc
xorl
and
xchg
test
xor
xchg
mov
adc
shrl
repz
sub
pop
push
daa
out
pushf
pop
lods
pop
cmp
mov
inc
das
dec
popf
push
stc
mov
jne
pop
dec
test
jg
shll
aad
jmp
sbb
xor
inc
arpl
fidivrl
or
call
mov
fiaddl
test
sti
and
adc
lock
stos
inc
push
shrb
cmpb
mov
pop
rclb
jle
adc
pop
mov
gs
xor
loopne
add
call
cld
pop
dec
outsl
pusha
jmp
jno
fisubrs
push
scas
ja
iret
je
pop
jne
es
mov
sbb
pushf
or
or
movsb
cmp
adc
sbb
mov
push
xor
push
cwtl
inc
xorb
sarb
fnstsw
and
push
mov
fcmovbe
stos
dec
into
clc
sahf
sbb
lret
cmp
arpl
daa
push
scas
imul
int
ljmp
jo
int
push
mov
push
dec
xchg
sub
push
add
fpatan
inc
dec
adc
or
mov
pop
aas
mov
ss
cltd
adc
clc
pop
jno
sbb
add
sbb
inc
ret
in
inc
dec
push
mov
insb
sbb
aas
dec
or
notl
scas
cmp
fiaddl
mov
jns
cmp
mov
pop
shlb
mov
inc
sbb
aas
shlb
out
into
push
rol
pop
loopne
inc
cmp
mov
pop
pop
daa
sets
sub
jo
inc
xchg
mov
cmpb
stos
ja
xchg
dec
sbb
jns
iret
loope
jg,pn
jno
sahf
jb
lcall
pop
sub
bound
imulb
dec
lret
andb
sbb
or
in
loopne
repz
lea
popf
enter
ret
fistpll
mov
lea
sbb
pushl
in
insb
rcl
fdivp
and
mov
addr16
ljmp
add
pop
lods
cltd
test
dec
mov
push
sub
fidivl
jg
jg
mov
mov
loop
data16
ss
icebp
nop
and
dec
push
movsl
cmp
sbbb
push
ret
cli
mov
outsb
sbb
and
fldenv
fistpll
repnz
adc
scas
or
push
lea
jb
js
xchg
test
pop
and
cmp
imul
insl
aas
fdivrp
pop
push
das
mov
and
ret
sbb
and
jbe
movsb
ljmp
mov
fadds
pop
pop
and
addb
fcmovbe
push
andl
aaa
pushf
mov
inc
adc
mov
cwtl
or
repz
ds
mov
fnstcw
daa
shrl
push
sbb
into
ljmp
aas
adc
arpl
out
add
test
fwait
cmc
mov
inc
dec
xchg
or
mov
pop
ljmp
pop
movsb
xchg
pusha
shll
outsb
xor
sahf
lods
mov
dec
in
pop
ss
stc
pop
mov
repz
stos
push
fs
push
xor
stos
fcmovu
sbb
bswap
cwtl
hlt
push
mov
add
lods
inc
fisubrs
lret
xor
out
cli
xchg
mov
fiaddl
movsl
lahf
sub
popa
clc
icebp
addb
adc
aas
add
sub
pop
test
test
mov
pusha
div
push
ficomps
test
mov
pusha
idiv
imul
and
test
ss
negl
fldl
and
test
add
inc
cmc
addr16
mov
xor
test
jmp
es
cld
outsl
in
into
testb
aad
test
sbbb
or
psubd
gs
lea
lods
sub
xchg
lcall
or
mov
scas
jg
cltd
scas
xchg
or
dec
test
inc
jnp
inc
ficomps
pushf
test
mov
subl
push
sbb
adc
hlt
and
xlat
xchg
or
sbb
cmp
movsb
ja
sub
aam
fisubl
shr
dec
in
inc
add
push
adc
or
imul
dec
and
adc
xchg
xor
dec
loope
div
pop
out
stos
mov
call
mov
aaa
xchg
mov
jmp
dec
pop
inc
add
xorl
mov
push
jno
add
push
ljmp
adc
sbb
cltd
mov
std
and
dec
les
mov
mov
mov
and
add
sub
xor
mov
fs
xchg
imul
ljmp
jo
inc
xchg
pop
lock
sub
push
ja
jno
mov
daa
xchg
push
mov
dec
orb
jns
and
out
and
adc
fcoms
fstps
test
push
dec
jmp
ss
mov
jae
xor
mov
ret
pop
xor
push
out
xchg
cs
ja
out
adc
sahf
or
repnz
test
ljmp
and
inc
push
cmp
ret
jmp
jo
dec
dec
popf
mov
popa
mov
int
xlat
icebp
sub
arpl
or
adc
fwait
addr16
cmp
xchg
xor
inc
push
add
cmp
iret
adc
jo
lock
cs
fadds
and
aad
scas
inc
jmp
mov
jo
xor
in
inc
mov
shll
or
sub
pop
mov
dec
and
outsl
adc
jl
xchg
cmpsl
mov
fstpt
jge
out
dec
push
xchg
test
addr16
sti
push
add
cli
aam
pop
sbb
cs
pop
dec
dec
sub
mov
aam
daa
pop
and
add
imul
mov
cli
iret
pop
ss
fdivp
mov
dec
dec
xchg
aaa
ljmp
imul
dec
inc
mov
mov
or
scas
mov
gs
mov
mov
fnstenv
notb
inc
pusha
test
mov
add
mov
lods
sub
enter
cwtl
das
push
jbe
push
daa
mov
cld
xchg
sub
add
xor
sub
cmp
mov
xchg
push
add
xor
dec
pop
aaa
mov
cmpsl
stos
inc
cmp
mov
ficoms
pusha
adc
repz
dec
rolb
mov
fsub
ret
inc
push
and
jne
insb
add
std
cmp
mov
dec
sbb
jne
jp
xchg
xchg
mov
push
jmp
pop
mov
jecxz
rcl
lds
sbb
sub
pop
mov
adc
xor
xchg
stc
xor
mov
iret
dec
rcrl
sbb
les
mov
sub
mov
filds
scas
int3
shrl
jno
xchg
push
xor
out
inc
aas
dec
and
and
mov
aas
jl
and
sti
mov
sub
jbe
movb
and
pop
inc
in
pop
imul
xor
fldenv
mov
stc
iret
inc
cmpsb
mov
mov
fcom
call
aad
mov
and
inc
icebp
jmp
lahf
js
and
nop
inc
pop
scas
divb
mov
push
int
inc
fisubs
dec
rcll
test
mov
daa
in
imul
shrl
sbb
cmp
dec
sti
jne
stos
lods
mov
insl
ds
mov
bound
push
ljmp
jmp
insl
lods
cmp
xchg
dec
adc
pop
test
lcall
mov
in
sbb
adc
dec
push
cmpsl
mulb
fidivl
lahf
sub
int
jp
pop
arpl
cltd
aam
adc
repnz
fsubs
fdivrl
int3
add
loop
sbb
cmpsb
mov
push
out
icebp
mov
mov
mov
outsl
lds
push
icebp
pop
outsb
addb
insb
test
lods
aas
jg
mulb
outsb
jns
cmp
pop
sbb
movsb
xor
sbb
pop
movsl
xlat
jl
std
xor
lods
jo
and
adc
cmp
dec
xchg
stc
lret
push
call
jbe
sbb
mov
dec
cs
cltd
out
fwait
push
push
or
sub
and
mov
jmp
loop
inc
jl
pop
jle
rorl
mov
mov
or
cmp
pop
insl
orl
xchg
xchg
jle
mov
push
cmpb
mov
or
out
adc
notl
jne
lret
lcall
sbb
pop
test
cmp
or
dec
loop
sub
repz
clc
dec
shrl
les
and
addr16
sbb
in
in
gs
mov
mov
or
fwait
sub
aad
xor
xlat
xchg
cld
stc
sub
dec
pop
jmp
jecxz
mov
out
dec
cld
sahf
xor
adc
mov
int
sub
jge
inc
fidivrl
lahf
jecxz
fwait
popa
repz
cmc
xchg
jecxz
cmp
mov
andl
sahf
sarb
es
daa
les
ret
cmp
cmpb
and
xchg
out
mov
imul
inc
mov
test
xchg
addr16
das
xchg
clc
add
movsl
scas
mov
xor
dec
cmpsl
in
jae
aas
faddl
test
scas
mov
je
push
cltd
pop
sub
push
adc
fs
push
dec
das
cmp
loop
fidivs
pop
fbstp
out
ljmp
mov
fwait
jae
fsts
push
mov
lret
fnstcw
sbb
xchg
pushf
inc
fwait
adc
lret
fs
pop
cld
sbb
sbb
in
cmpsl
xchg
mov
mov
daa
outsb
push
sub
shl
jl
aas
push
pop
pop
enter
fidivl
in
add
xchg
fnstenv
cwtl
pop
cmp
or
and
push
dec
aaa
fdivrs
add
xor
xor
xchg
inc
and
rclb
jecxz
sbbb
xchg
outsl
popf
dec
or
fcmovu
repz
inc
mov
bound
push
jmp
sbb
add
mov
clc
dec
call
mov
sbb
mov
sbb
rcr
sti
xchg
jl
push
mov
cwtl
out
jae
mov
and
xchg
pop
and
ret
call
mov
cmpsb
mov
adc
xor
sbb
push
pop
ss
stc
adc
mov
inc
int
aad
mov
cmc
mov
pop
int3
lock
stos
in
test
jo
ljmp
cmpl
call
push
out
fnstcw
cmc
lods
cld
dec
inc
jmp
jl
mov
aam
cmp
pop
mov
ljmp
test
pop
pop
xchg
mov
jb
in
movsl
push
jns
mov
aaa
sub
adc
dec
pop
pushf
mov
fidivs
movsl
cmp
rcrl
aad
inc
out
sub
data16
push
jle
cmp
push
in
push
notb
movsl
aam
je
nop
mov
mov
sbb
dec
pushf
cmp
push
subl
cmpsb
aaa
repnz
cmp
popa
push
fsubl
mov
mov
mov
cmp
arpl
pop
out
or
imul
pop
in
lods
and
insb
int3
dec
mov
cmp
insb
sbb
sbb
mov
dec
ja
jnp
cmp
cwtl
xor
push
pushf
je
add
ret
and
jecxz
mov
mov
push
das
movb
sahf
cmc
aas
adcl
mov
out
scas
fwait
pusha
stc
push
fnstcw
xor
ljmp
les
fstl
int3
push
jmp
push
pop
jo
pop
jl
pop
mov
fbstp
add
mov
outsb
push
and
out
jne
fwait
push
aas
cs
mov
leave
push
lcall
cmp
or
adc
dec
cmp
arpl
in
xchg
sahf
dec
iret
data16
jbe
in
dec
int3
mov
fs
sub
stos
xchg
push
loop
xor
das
push
aaa
lds
push
adcl
xchg
daa
int
aam
xor
push
add
pavgb
dec
lods
mov
mov
jg
subb
in
jecxz
pop
sahf
scas
aam
lcall
shll
loopne
xlat
pop
insl
rorb
fmuls
mov
leave
inc
cmp
fs
sahf
cwtl
push
inc
cwtl
sbb
inc
divb
add
int
lret
rcrb
stos
mov
imul
dec
push
xor
loop
nop
call
sub
mov
xchg
sub
push
xchg
jl
les
inc
and
push
pop
out
loope
and
in
stc
es
push
sbb
aas
xor
loopne
orl
cmp
imull
pop
lods
mov
cld
or
loop
cmc
pop
jne
and
cmc
daa
std
scas
in
sbb
je
push
decb
hlt
pusha
bound
jmp
adc
hlt
xchg
inc
sbb
add
xchg
inc
loopne
add
lret
jbe
mov
cwtl
adc
push
jbe
xor
xchg
sarl
dec
push
inc
es
cmp
movsb
daa
ja
push
in
or
adc
mov
sub
pop
push
cltd
aas
mov
inc
mov
cmp
xchg
cmc
or
adc
ret
or
fmuls
inc
aad
sbb
test
lret
loope
stc
ss
mov
sbb
scas
push
sub
dec
out
call
sub
insl
sub
sub
dec
pop
jg
incl
addb
scas
mov
mov
dec
push
into
in
push
sbbb
fsubrl
movb
in
fcompl
mov
les
inc
iret
ficoml
adcb
or
adc
insl
push
popa
mov
push
and
out
xlat
mov
sub
clc
jbe
cmp
mov
or
rol
ljmp
rclb
enter
arpl
sbb
andl
dec
test
xlat
mov
fmull
leave
pushf
adc
sbb
or
xchg
mov
ja
lret
insl
inc
out
sti
pop
push
popf
push
add
mov
scas
pop
xor
int
push
fldt
hlt
sbb
clc
jle
mov
cli
or
adc
clc
pop
dec
pop
dec
pop
sub
outsl
insb
out
xchg
das
cmp
inc
xchg
jp
sub
rorb
shlb
sbb
sbb
pop
out
rep
movsb
push
jmp
jmp
mov
or
call
cmp
lods
mov
or
fldenv
xchg
sub
in
inc
mov
in
mov
fwait
dec
pop
leave
and
sarb
pop
out
nop
ljmp
movl
xchg
cmc
xchg
decl
mov
add
aam
mov
or
cld
out
and
test
sub
mov
mulb
xchg
mov
dec
loopne
sbb
mov
mov
shl
fdecstp
mov
movsl
fwait
mov
xor
addr16
push
jecxz
jbe
mov
cli
daa
outsl
adc
pop
pop
push
or
icebp
mov
pushf
pop
push
insb
pusha
sbb
das
lea
fdivrp
enter
xchg
sub
cltd
add
ret
pop
icebp
hlt
popf
mov
js
imul
cltd
sbb
fwait
adc
push
jb
fdivrl
les
out
in
nop
fisttpll
inc
sbb
inc
test
mov
inc
fs
sarb
pop
cmp
sbb
inc
mov
outsb
and
adc
popa
jb
mov
dec
in
out
ret
ret
shrl
jmp
mov
mov
sbb
or
call
cmp
mov
lret
and
ret
hlt
std
mov
mov
cltd
jge
cltd
cmp
jbe
int3
andb
enter
call
cmp
push
xor
or
gs
pop
popf
in
fsubrs
inc
scas
shrb
adc
push
cmp
or
inc
ja
repnz
mov
cmc
adc
test
fbld
js
cld
movsl
push
push
fcomip
mov
adc
imul
push
das
loop
push
ret
xor
sub
push
sub
sbbl
mov
ds
inc
push
or
loopne
or
adc
xor
call
sub
and
xchg
sbb
shrb
loope
loope
and
test
lds
pusha
subb
lcall
or
mov
shrl
mov
ret
lret
fimull
dec
push
push
xor
jg
lock
fstps
pop
lds
out
repz
lods
xor
add
jne
js
pop
jmp
addl
pop
adcb
push
sub
mov
cmp
push
scas
call
cmp
aad
and
push
mov
das
xor
std
pop
ret
je
fimull
addr16
sbb
mov
mov
inc
xor
std
fisubl
jae
popf
add
inc
adc
addl
popl
mov
jbe
js
jg
inc
mov
and
sbb
or
pop
adc
sahf
sahf
out
outsl
repz
es
xchg
jl
enter
cld
and
out
lahf
mov
mov
mov
int3
cli
outsl
data16
cmp
aaa
pop
out
orl
push
mov
fstp
xor
int3
orl
int
pushf
cmc
jmp
sub
push
dec
loop
mov
add
push
bound
outsb
in
iret
fsubrp
mov
lods
ljmp
call
movsl
mov
push
pop
orl
mov
pop
popf
mov
xor
adc
jae
aaa
jbe
inc
push
inc
lock
sub
test
out
sbbb
and
stc
cmpsb
out
sbb
cld
dec
hlt
mov
lock
add
mov
loopne
adcb
xor
popf
std
movl
mov
loope
mov
push
or
pop
push
ljmp
adcb
pop
test
and
and
mov
out
int
and
stc
imul
adc
inc
out
mov
testb
adc
adc
mov
xchg
push
stos
fcompl
mov
pop
ret
ret
or
rorl
stos
js
test
add
cmp
xlat
jne
fisubl
mov
mov
xor
mov
fwait
push
std
mov
pop
aas
pop
mov
call
sub
adc
fistl
mov
ljmp
andl
cmp
out
fcompl
in
daa
sbb
or
push
mov
ljmp
ret
sbb
push
movsl
orl
xchg
cmpsl
and
bswap
subb
mov
mov
leave
lcall
scas
decl
and
mov
mov
lock
popa
mov
jl
inc
xlat
add
std
or
adc
pusha
dec
sbb
outsb
dec
mov
cmp
inc
pop
sub
xchg
mov
dec
dec
js
es
repz
xchg
sub
insl
cwtl
lods
dec
push
jecxz
and
lcall
test
repnz
or
xor
mov
add
mov
stc
fnstcw
int3
fcmove
jnp
cmp
dec
ret
and
lcall
cmpl
jnp
mov
cli
pushf
mov
dec
push
inc
jb
call
fldz
push
ret
xor
jecxz
add
lds
fiadds
mov
mov
fidivrs
jbe
push
push
stos
fdivs
push
dec
cmp
hlt
and
in
xchg
mov
and
dec
data16
mov
cld
mov
push
sub
rcll
jbe
pop
mov
fsubp
addr16
pop
arpl
mov
xchg
xchg
pop
rorb
out
ficompl
inc
xchg
call
cmp
inc
push
out
push
push
lret
jmp
mov
lcall
mov
xchg
frstor
outsb
fdivs
out
in
xor
mov
sbb
iret
into
cmp
push
jo
imul
and
inc
or
fs
ret
cs
iret
push
sbb
fs
xor
scas
les
mov
cmc
push
shr
in
sarl
not
xor
cmp
adc
inc
jl
cmp
mov
or
xchg
push
adc
dec
cmp
jge
pop
icebp
push
mov
push
subl
inc
cmp
testb
int3
inc
pop
insl
sbb
ljmp
pusha
inc
adcb
dec
arpl
dec
cmp
cmpsb
stc
xor
in
ret
jg
xor
push
lods
mov
ds
cmp
outsb
inc
adc
or
jg
mov
leave
cltd
mov
xchg
add
cwtl
sub
sbbl
aad
and
or
lock
sub
jle
push
jbe
adc
dec
mov
cmpsb
push
adc
ja
aad
icebp
sbb
pop
xrelease
sbb
add
adc
or
insb
sub
adc
fsubs
inc
mov
inc
push
lret
and
xchg
repz
cltd
sbb
rol
inc
lds
jl
or
cmp
fdivrs
loop
lods
ss
rorb
jmp
iret
push
es
mov
pop
rcrl
repnz
fsubrs
inc
pop
je
out
in
cs
std
mov
add
lods
push
or
sbbb
jb
lcall
aad
mov
dec
aam
mov
mov
in
imul
fwait
jo
mov
imul
jmp
test
popa
mov
andb
in
mov
mov
pushf
fistpll
movsl
frndint
pop
adc
mov
or
jb
xchg
fidivrl
aad
push
call
inc
pop
int
xchg
aaa
mull
dec
lds
outsb
jns
inc
and
ds
enter
or
lock
out
pop
popf
dec
ror
or
mov
jns
les
and
pop
repnz
jle
movsb
pop
sbb
add
daa
jne
xchg
push
xchg
dec
sbb
imul
mov
fldenv
mov
xchg
and
pop
repnz
jno
test
loope
cmc
cmpsb
push
fstp
jne
mov
add
jge
insl
and
stos
push
call
repz
fmuls
xor
pop
xchg
adc
or
adc
add
js
push
dec
stos
ss
push
pop
in
pop
dec
jge
outsl
jg
bound
jae
adc
shll
dec
bswap
cltd
hlt
cmpsl
pop
mov
xchg
inc
xor
aam
xlat
aas
pop
aaa
mov
xor
aam
lods
das
mov
cmp
icebp
mov
inc
sub
mov
mov
pop
and
insl
aad
out
ds
mov
int
hlt
pop
or
push
lea
push
adc
iret
mov
push
test
jb
adc
addl
lds
jge
int3
fildll
push
and
insb
inc
rorb
xchg
and
or
cmpsl
sub
adc
mov
frstor
and
iret
mov
cltd
sbb
pop
adc
popa
sub
sub
xor
jle
jne
inc
fstl
sbb
pop
mov
std
outsb
mov
dec
add
mov
stos
data16
sarl
test
sub
icebp
aam
add
lcall
mov
xchg
xor
adc
pop
call
jecxz
push
repnz
sbb
aaa
loope
and
mov
test
aam
jecxz
add
cmpsb
xchg
jmp
sub
lods
andb
jne
cld
jns
fldenv
repnz
clc
dec
adc
mov
es
sub
ret
sub
shll
mov
sub
or
cwtl
sti
popf
sub
pusha
inc
dec
mov
push
push
jne
je
arpl
sub
sti
roll
insb
xor
sbb
aaa
pop
push
sub
pop
andl
add
push
shr
add
out
mov
mov
sub
ljmp
in
mov
mov
aad
ret
enter
and
ds
mov
sbb
or
mov
sub
mov
cmp
mov
fstpt
add
mov
in
inc
in
mov
inc
push
in
ja
xor
popa
pop
fsub
pop
repnz
loopne
call
orb
pop
xlat
and
das
adc
jo
enter
jno
fs
jp
sahf
inc
fmuls
movsl
kmovb
mov
std
insl
mov
cmp
in
test
shrb
mov
call
lods
cmc
cmp
pusha
jl
jbe
ds
adc
sarl
pop
insl
out
push
mov
push
daa
push
data16
mov
push
jns,pt
inc
fiaddl
loope
push
popa
jg
mov
stc
ds
icebp
leave
mov
in
mov
mov
sti
into
pusha
mov
jnp
pop
loopne
add
xchg
push
xor
stos
ds
sub
das
aam
cwtl
and
test
das
mov
sti
dec
repnz
xchg
jns
push
cmp
stos
test
shrl
jo
bound
inc
cli
orl
push
sbb
repnz
xor
sbb
and
out
cmp
nop
out
in
jo
add
js
scas
ds
push
dec
cmc
xlat
lock
pop
stos
clc
add
pop
mov
jns
and
mov
inc
push
mov
rcl
outsl
jae
movsb
nop
inc
push
mov
insb
inc
fsubs
aas
in
sbbl
movsl
cmp
mov
popa
into
inc
push
arpl
inc
fstp
mov
xor
sbbl
test
xor
outsl
divb
xchg
cmp
pop
icebp
dec
pop
mov
aad
xchg
sub
cli
xchg
sub
in
sti
push
in
or
push
and
mov
inc
push
mov
xchg
test
movsb
and
sbb
aas
loop
es
push
jmp
fildl
int
pop
xchg
arpl
fwait
enter
gs
scas
push
xchg
popa
mov
imul
and
jo
mov
or
or
pop
mov
mov
pop
mov
mulb
mov
pop
rcrl
aas
push
sub
pusha
negl
jne
jge
sbb
xor
das
mov
out
add
and
andl
push
or
mov
xchg
popf
sub
mov
std
pop
inc
scas
pusha
xorb
cli
movsl
jo
pop
mov
clc
stos
gs
push
lret
pop
lock
outsb
xchg
mov
shll
pop
add
xchg
iret
jecxz
add
movsl
xchg
add
int3
arpl
xchg
xchg
pusha
sub
xchg
mov
mov
mov
loope
add
xchg
sub
stc
jl
sub
dec
pushf
dec
lcall
mov
mov
fcmovnbe
insl
or
sub
sbbl
sar
int
xchg
lcall
pop
icebp
dec
and
mov
outsb
inc
fstpl
lea
mov
fisttps
or
adc
jne
ss
xchg
loop
leave
sub
out
movsb
cmp
insb
push
movsl
mov
ret
repz
or
jb
mov
xorl
sub
scas
pop
sub
mov
fwait
iret
or
add
sub
push
pop
inc
fnstcw
addr16
xchg
in
mov
cltd
jmp
add
mov
lcall
pop
in
pop
pop
cmp
mov
in
addr16
push
ljmp
jno
and
pop
hlt
ds
shrl
dec
dec
loop
lods
outsl
push
fistps
mov
sub
jmp
jl
sahf
data16
iret
push
add
pop
mov
out
arpl
xor
push
sbbl
xchg
dec
loope
add
push
pop
mov
jp
fsubrs
lahf
les
push
sbb
sbb
xlat
outsb
mov
and
fsts
call
sbb
cmpb
push
lret
fmuls
repz
in
or
dec
mov
xorb
scas
mov
pusha
divl
rolb
pop
push
sbb
push
movsb
inc
fcom
jbe
jmp
inc
adc
inc
xchg
mov
les
lods
xchg
out
cmp
outsl
push
out
ss
es
inc
cmp
pop
into
gs
aad
jo
test
xchg
sub
push
cs
push
dec
stos
inc
jle
mov
and
push
xchg
add
ja
fnstenv
xchg
nop
daa
enter
jne
inc
xlat
and
inc
out
jne
aaa
into
pop
mov
push
in
insb
dec
push
out
mov
lcall
scas
inc
jne
xor
subl
aaa
into
jbe
shrb
lods
sbbl
popf
scas
inc
sarb
add
push
jp
xchg
sub
mov
sbb
jge
jecxz
loop
mov
xchg
imul
jbe
aaa
into
jecxz
xchg
sub
cmp
fwait
ja
push
call
loopne
jmp
insb
cmp
shll
dec
in
lods
mov
loope
or
push
xlat
outsb
out
mov
cmp
bound
pushf
xor
pop
hlt
in
mov
and
pop
scas
bound
jle
push
mov
out
mov
shl
cmp
pop
insl
cmp
lods
loop
pusha
imul
aas
xor
mov
mov
push
ljmp
cmp
popa
call
ss
fbld
pop
mul
mov
rcrl
push
int3
ffreep
sbbb
inc
pop
divb
rclb
dec
out
ret
repz
or
pop
lods
mov
in
aas
and
pop
pusha
mov
outsb
jmp
aaa
stc
nop
xor
mov
cli
xchg
out
ss
and
adc
mov
fnsave
loopne
mov
jmp
fidivs
xor
lcall
add
divb
stos
inc
bound
dec
fistps
gs
jmp
xor
sahf
bound
mov
gs
fdivl
cmp
imul
mov
mov
out
stc
nop
push
xor
test
divw
call
insl
clc
mov
mov
add
add
jmp
pop
sahf
gs
jmp
mov
inc
shrl
inc
clc
jns
gs
fdivs
cmc
mov
les
test
xchg
sub
dec
aad
jp
cwtl
das
pop
lods
pop
loopne
mov
outsb
insl
adc
jb
mov
xor
cmovo
lcall
mov
cmp
add
sub
rcrl
ja
jb
mov
lock
sbb
and
pop
ja
inc
bound
lods
xchg
mov
mov
popa
js
or
arpl
pop
shrb
mov
mov
filds
sbbb
pop
lods
inc
push
inc
fldl
test
cmp
xor
lret
pop
dec
loop
push
push
lods
test
rcl
pop
repnz
and
jnp
test
jg
repz
fwait
nop
daa
shr
std
xchg
and
dec
loope
inc
loope
je
inc
fnsave
mov
cmp
adc
sub
sbb
and
jo
push
ljmp
cmc
mov
xchg
sub
pop
inc
inc
fnstenv
jnp
mov
cmpsb
cmp
push
ljmp
pop
inc
mov
pop
lods
xchg
push
movsl
into
aaa
into
pop
ljmp
mov
std
out
sbbl
cmp
push
ljmp
mov
jb
int
ds
xchg
lret
dec
jmp
pop
out
cwtl
xor
jbe
out
lea
ljmp
std
xchg
xchg
cs
pop
mov
mov
movsl
add
imul
testl
pop
movsl
sbb
cmpsb
repz
sub
icebp
or
dec
push
in
jg
lods
les
jns
jge
pop
scas
repz
adc
inc
cwtl
das
jne
mov
out
mov
lcall
or
mov
int
pop
mov
nop
movsb
loop
popa
sbb
xchg
scas
cmp
in
mov
add
outsb
jp
mov
ret
hlt
sub
sbb
inc
subb
sahf
fimull
or
f2xm1
icebp
sub
insb
addl
lods
add
xchg
into
add
add
mov
sbb
pop
pop
cmc
mov
dec
loopne
test
xor
dec
testb
bound
or
stos
mov
loope
in
inc
push
stc
nop
inc
add
daa
mov
mov
push
jmp
or
das
push
in
pop
and
stos
jg
mov
int
cld
cli
lret
mov
add
pop
repz
daa
mov
mov
movsl
mov
mov
mov
fisubl
in
inc
adc
cli
push
and
jg
sbb
push
aas
push
mov
insl
in
repnz
int
or
adc
sbb
lock
sbbl
add
jp
mov
out
sbb
pop
shll
sub
ret
inc
mov
jmp
loopne
mov
rcl
sub
into
cltd
xchg
insb
iret
mov
stc
sub
sub
mov
repnz
test
cs
jns
outsb
fwait
lock
adc
test
sbb
scas
jne
sbb
aam
loopne
mov
sbb
aad
stos
pop
xchg
mov
adc
jmp
std
es
ret
sbb
cmp
popa
push
pop
mov
xchg
arpl
daa
and
jns
xor
or
adc
dec
pop
xor
and
outsl
in
gs
pop
scas
jae
aaa
cmp
je
popf
pop
ds
enter
les
dec
sub
pop
jnp
ret
stos
jns
gs
out
or
shlb
addr16
lds
scas
loopne
out
cmp
roll
filds
cmp
pop
popa
lret
xor
pmulhw
cmp
or
stos
jle
sahf
pop
out
stos
pop
in
pop
jp
insl
mov
gs
push
leave
jle
cld
ja
pop
xor
jnp
outsb
cmp
xchg
sub
mov
xlat
jns
pop
stos
mov
nop
ja
scas
pushf
xor
mov
mov
xchg
cwtl
nop
daa
lret
xor
xchg
int3
test
cmpsl
jnp
fnstenv
ss
jnp
cmpsb
xor
loope
fsubs
xchg
xor
int3
dec
icebp
jne
loop
mov
inc
fisttpl
cmp
imul
xor
rcrl
inc
jbe
clc
dec
dec
out
xchg
sbb
dec
jmp
push
jle
dec
push
push
sarb
insl
sub
aas
xchg
into
xor
popf
fnsave
pop
or
iret
ret
push
cli
loop
jge
add
es
and
cmc
mov
sbb
fucomi
and
loopne
call
stos
xchg
inc
push
mov
xchg
dec
data16
loop
dec
rorb
xor
icebp
jge
out
mov
push
or
lods
xchg
add
add
ret
js
fildl
ret
pop
mov
cmp
cmp
bound
sub
inc
ficompl
mov
jnp
lret
cwtl
scas
pop
push
lret
mov
hlt
ds
lret
push
pusha
rorl
gs
or
xchg
lods
and
pushf
mov
cli
outsl
add
mov
jmp
leave
leave
mov
mov
cmpl
stos
stos
xchg
clc
rcr
das
jmp
shl
and
add
es
ja
push
push
and
jne
xor
mov
cmp
adc
mov
hlt
and
adc
jle
ss
testb
outsb
ja
dec
test
hlt
or
pop
mov
imul
stc
pop
mov
fcmovnu
dec
ror
jnp
mov
popa
scas
loopne
sub
aad
push
aad
repnz
aam
outsl
mov
int
in
adc
loop
sahf
loopne
daa
aad
iret
into
ficoml
mov
stos
inc
enter
add
jns
loope
pop
mov
xchg
mov
or
sbb
sbb
sub
pop
add
iret
cmp
mov
xchg
jne
xchg
xchg
adc
jno
mov
fildl
sti
out
push
test
inc
mov
int
popa
cmpsb
psraw
dec
mov
test
push
lret
or
int
adc
xor
jp
pusha
inc
xlat
imul
or
jae
cmpsl
cmp
xchg
xchg
cmp
mov
mov
jo
jl
cld
xor
mov
das
decl
lcall
mov
dec
gs
push
sahf
and
mov
sbb
faddl
and
das
pop
aad
enter
sbb
scas
dec
test
rcll
test
jno
xchg
rcrb
lods
jp
push
movsl
push
pop
mov
jbe
pop
mov
xchg
cwtl
mov
es
insb
mov
ss
popa
mov
aas
loopne
mov
jg
xchg
in
fnstcw
leave
cli
sar
sub
hlt
int
in
sub
ja
shrb
fidivrs
push
mov
leave
xor
dec
or
imul
sarl
daa
inc
loopne
and
dec
int
outsl
rcl
cmp
cmp
jle
mov
insl
loope
add
mov
scas
sbb
cmc
xchg
lock
loop
mov
fs
xchg
xchg
sbb
int3
stos
adc
mov
in
icebp
imul
rcrb
call
scas
dec
mov
ret
lds
call
daa
fbld
imul
or
cmpsb
sub
orl
mov
std
dec
out
ss
scas
jae
cmp
sbb
nop
jmp
int
jbe
aad
mov
xlat
addps
icebp
xchg
adc
cs
push
fwait
data16
or
xchg
xchg
jbe
or
adc
sbb
popf
dec
call
jge
ss
test
lods
lret
mov
cld
cmpb
imul
mov
lock
cmpsl
stos
and
xchg
loopne
mov
pop
leave
cld
xor
in
lret
xor
loope
shrb
roll
mov
jae
outsl
dec
mov
je
sbbl
xchg
je
adc
inc
mov
imul
gs
lods
add
xchg
loope
and
out
inc
mov
out
mov
jl
inc
cmp
aaa
in
mov
mov
int
outsb
mov
iret
add
imul
xlat
cmp
outsb
cmp
xor
cmp
test
imul
and
xchg
out
aaa
loop
arpl
mov
dec
ret
test
push
sti
adc
sub
insl
cmc
sub
ljmp
in
and
fidivl
lods
pop
mov
mov
leave
sti
and
les
lea
push
notl
mov
loope
test
movlps
gs
inc
cmp
cltd
jno
les
nop
dec
mov
xchg
je
mov
push
jl
mov
jbe
mov
mov
in
pusha
pop
xchg
xchg
jne
cmpl
outsb
mov
jle
popa
stos
ljmp
shl
mov
push
sbb
mov
jno
sub
mov
fdivr
xor
negl
jp
out
imul
lods
pop
int
loope
ret
lods
lidtl
push
push
inc
imulb
mov
jmp
cmc
push
fldcw
cld
mov
or
ljmp
adc
push
push
fcoms
cmp
add
pop
div
sub
jl
insl
inc
mov
dec
xchg
mov
shll
aam
mov
fisubrl
mov
jl
inc
xchg
sub
xchg
popa
test
mov
adc
xor
stc
jecxz
pop
mov
faddp
cmp
or
dec
ret
or
imul
xchg
mov
pop
add
test
leave
inc
push
mov
ds
fiadds
dec
subb
cmp
mov
in
movsb
insl
and
popl
nop
push
addr16
insl
sbb
cmpl
pop
shr
mov
sar
xchg
xchg
xchg
or
dec
xchg
mov
sbb
cmp
mov
test
in
mov
xchg
iret
iret
xchg
jl
fidivrs
call
movsl
pop
into
std
mov
sub
mov
out
pop
sahf
pop
xor
mov
mov
repz
les
mov
mov
sbb
sbb
call
mov
cli
clc
insl
lahf
shlb
es
mov
scas
popa
jmp
adc
jecxz
xchg
mov
cmpsl
add
fcomp
inc
mov
in
les
mov
testb
aaa
push
mov
ds
scas
mov
cld
xchg
es
testl
mov
or
xor
add
movd
ds
and
jno
mov
inc
clc
xor
push
or
xchg
mov
std
jg
aas
dec
out
es
outsb
fcoml
pop
fsts
and
cmp
pop
loope
mov
jle
or
and
xchg
ja
cmp
insl
inc
inc
cmpsl
pop
popa
push
les
mov
inc
fisubrl
test
xchg
mov
xchg
mov
cmp
mov
les
add
enter
stos
lret
ljmp
pop
stc
sbb
mov
jne
bound
pop
push
xchg
sarb
mov
mov
aad
pop
fnstcw
mov
sbb
xchg
loope
sti
xor
mov
jmp
mov
mov
mov
xchg
clc
stc
dec
lds
out
sbb
mov
lock
push
inc
mov
add
sbb
sub
add
push
jg
outsl
les
sub
inc
mov
dec
iret
inc
pop
mov
idivb
mov
push
fcoms
mov
lahf
adc
cmp
pop
xchg
push
out
fistpll
dec
fdivs
fstps
clc
nop
scas
and
sbb
xchg
or
adc
inc
fmull
ss
jbe
pop
push
adc
mov
aas
aam
push
mov
bswap
and
lea
lcall
dec
stc
and
and
je
fnstenv
xchg
dec
mov
push
pop
push
imul
inc
jmp
pop
inc
das
in
pop
sarl
jp
stos
add
sbb
xorl
mov
das
sbb
in
add
push
mov
test
and
sub
lea
inc
add
lods
xor
inc
imul
js
jae
bound
pop
xchg
push
mov
adc
lahf
mov
push
cmp
pusha
rclb
fildl
pop
inc
sbb
inc
imul
pusha
dec
test
push
out
dec
mov
fdivl
lea
lds
shlb
lods
xor
push
in
xor
data16
out
sub
scas
pop
lahf
sbb
or
inc
push
and
inc
adc
xor
cmpsb
je
add
cmpsb
push
inc
stc
xor
mov
add
cmc
xor
and
mov
inc
inc
mov
imul
and
pop
push
pop
xor
cmpsb
inc
push
lea
daa
dec
les
mov
cmc
xor
xchg
pop
lahf
sub
in
push
jo
scas
push
inc
enter
sub
sub
dec
flds
pusha
aaa
ljmp
inc
mov
adc
or
sbb
inc
cmpsl
adc
sbb
cmc
cmpsl
pusha
ret
xchg
movsb
jecxz
dec
leave
loop
mov
in
les
mov
push
mov
fbstp
popf
inc
fisttpl
call
test
fidivl
xchg
aas
in
sbb
xor
mov
hlt
or
shl
xor
pop
xor
dec
fcoml
lods
or
scas
data16
jbe
add
cltd
and
ret
loope
cmp
mov
sbb
mov
negb
out
cmp
mov
in
aas
loope
jnp
fnsetpm(287
sbb
mov
repz
loopne
gs
sarb
or
mov
out
scas
mov
cli
and
std
push
mov
sti
push
mov
repz
gs
dec
adc
xor
out
into
inc
iret
sub
divb
mov
out
sbb
mov
icebp
or
mov
stos
cld
xchg
lahf
fisubl
aam
pop
ret
pusha
mov
adc
in
xchg
jg
mov
fldl
jbe
call
or
ja
adc
cmpsb
js
xchg
xchg
loop
dec
rcrb
cmp
cmpsl
lods
pop
cmc
or
lret
in
push
rep
scas
xor
ljmp
or
out
pop
xor
hlt
sbb
or
cmpl
push
xchg
ja
cmpsb
shlb
add
fwait
data16
lret
inc
nop
jnp
mov
nop
popa
mov
xor
adcl
push
pop
into
push
movsb
push
stos
xchg
rorl
push
js
stos
pusha
out
jne
fldl
xchg
pop
movsl
ftst
sub
ror
lret
push
fcmovb
jmp
loop
sarb
rcr
jae
std
fldl
mov
addb
subb
jb
int
es
out
addb
mov
sar
jmp
inc
lods
daa
mov
dec
testb
loopne
add
push
imul
pushf
sub
jnp
push
pop
hlt
sarl
jmp
mov
stos
movd
testl
dec
fistps
bound
aam
andl
mov
sbb
xchg
lcall
iret
jbe
insb
xchg
jne
xor
inc
xor
xchg
enterw
dec
leave
lret
dec
movsl
rcll
or
push
repnz
fistps
or
out
cmp
popf
jecxz
or
loopne
subl
mov
test
mov
and
clc
jne
loop
idivb
mov
mov
orb
push
orl
mov
ds
xchg
and
clc
dec
sbb
test
out
jne
rclb
jle
xchg
aam
push
in
sbb
fists
in
add
call
mov
mov
mov
cmp
lods
mov
push
inc
aam
popa
mov
sbb
les
add
fstpl
sbb
sub
mov
push
mov
rcrl
popa
cli
xchg
or
pushf
cmp
mov
mov
cld
lahf
xchg
mov
cld
jge
or
and
or
sub
or
push
push
cli
lret
bound
jns
fs
outsl
mov
mov
iret
xor
fs
mov
sbb
jns
pop
stc
mov
sbb
add
mov
jo
lea
lret
fcmovnb
xchg
aad
rolb
sbb
popf
repz
dec
mov
in
push
into
icebp
mov
or
fdivs
mov
cmpsb
mov
out
jge
sub
decb
sbb
mov
movsb
pop
sbb
mov
fimull
into
sti
popa
xchg
out
inc
test
movsl
push
negl
pusha
clc
cltd
sbb
or
in
mov
push
stos
mov
adc
movsb
sbbl
cmp
pop
mov
lahf
mulb
jmp
or
sbb
mov
fimuls
filds
clc
xor
push
sti
inc
out
or
and
dec
push
push
clc
inc
int
xor
push
out
int
into
inc
es
shlb
cmp
int3
fs
pop
das
add
mov
sub
and
and
sbb
inc
adc
ja
jbe
or
filds
fcoml
dec
imul
ret
pop
mov
push
aam
lods
jecxz
dec
inc
vpsrlq
sbb
add
mov
les
pop
pushf
nop
pop
mov
dec
adc
jno
pop
inc
imul
dec
out
mov
dec
ja
pop
cs
fwait
pop
rorb
and
lods
adc
call
lahf
in
or
shl
jmp
repnz
jecxz
rcr
repnz
rep
insl
ret
mov
rcrl
out
fstp
jge
in
flds
add
lahf
xchg
in
sbb
sar
out
rolb
stos
mov
and
mov
pop
mov
dec
xchg
sbbb
dec
push
jg
pushf
ds
cmpsb
imul
ret
outsb
jp
and
adc
cmp
fidivrl
jne
cwtl
imul
dec
dec
push
out
push
dec
sub
or
inc
adc
pusha
js
pop
dec
es
xchg
jo
inc
inc
add
mov
leave
pop
push
mov
jl
in
inc
dec
mov
pop
push
or
pop
push
mov
addr16
and
jo
jg
cmp
xchg
xchg
mov
lods
arpl
icebp
xchg
sub
dec
jo
cmp
xchg
pusha
call
mov
rorb
mov
pop
gs
mov
dec
cmpsl
xchg
in
and
call
ljmp
insl
cli
hlt
sahf
xchg
lret
cwtl
int3
fistpll
in
lret
add
sub
xchg
test
inc
cld
adc
add
mov
mov
loopne
jl
outsb
add
ja
jno
les
push
mov
jb
mov
add
inc
pushf
stc
push
sbb
flds
in
loopne
testl
call
lods
repz
sbb
sarb
fidivrs
aaa
sti
cmc
push
out
scas
inc
lods
stc
mov
dec
rcr
mov
push
out
scas
mov
std
sub
xor
pop
add
movsb
js
addl
mov
stos
xor
add
dec
ret
in
cmc
pop
subb
filds
mov
mov
test
add
imul
enter
mov
fisubrl
mov
mov
in
das
adc
sub
xor
push
push
mov
and
adcb
addr16
je
cli
es
lcall
jns
movsl
and
dec
dec
xchg
adc
add
gs
cmp
mov
loop
andl
cli
cmp
mov
ljmp
sbb
data16
adc
outsl
sub
inc
jecxz
jb
push
lret
nop
xchg
loop
or
inc
mov
xor
jg
mov
aam
dec
out
mov
gs
pop
repz
movsl
push
repz
jno
stos
sub
sub
arpl
and
dec
sbb
sub
push
dec
sub
push
mov
div
sub
outsl
mov
sub
je,pn
cwtl
xchg
sarl
sub
push
pop
dec
in
jno
leave
cmp
and
faddl
push
xlat
push
bound
mov
pusha
jl
mov
popa
cmpsl
lret
in
rcrl
mov
and
cld
add
mov
call
sbb
stos
int
loop
cld
adc
shlb
cmp
and
fwait
imul
jns
sbb
sbb
dec
jnp
cmp
jnp
mov
mov
ljmp
xchg
lds
test
mov
xlat
push
fs
stos
clc
movhps
in
into
aas
mov
sub
dec
xchg
cmc
fmuls
adc
scas
arpl
sbb
mov
jns
dec
mov
cmp
lods
pop
dec
mov
int
iret
lock
dec
movb
out
adc
lds
or
or
sahf
xchg
mov
or
test
es
sti
rcrb
pusha
iret
cmp
fldt
jae
ja
cmp
aam
sbbb
cmc
movhps
in
sub
push
cmpsb
jle
aad
addr16
jns
or
mov
rorb
movsl
cmp
outsb
dec
pop
xor
push
mov
adc
outsl
adc
jl
mov
xor
cld
mov
ds
xchg
test
push
cli
nop
or
xor
in
clc
sub
mov
roll
stos
test
sub
sbbb
fdivrl
lds
lds
pop
cltd
insl
ret
or
jp
or
pop
idivb
stc
aas
bsr
jle
ljmp
gs
insb
mov
fwait
inc
dec
loop
pop
daa
flds
stc
xor
enter
gs
jb
pushf
cli
pop
sub
dec
ret
xchg
es
call
fstl
and
add
pop
out
cmp
icebp
icebp
push
out
push
out
cmp
fdivl
xchg
jle
cs
sbb
and
adc
mov
notl
xchg
repnz
jns
data16
std
inc
in
inc
mov
xor
mov
dec
insb
nop
mov
and
mov
fbld
jecxz
inc
mov
lahf
lahf
movsl
les
pop
ja
fwait
hlt
cmp
ret
fists
in
pushf
mov
jmp
mov
jecxz
fs
fsubrp
xor
imul
gs
cmp
bound
mov
jbe
or
xchg
mov
test
je
lahf
aaa
and
xchg
js
insb
fwait
cmp
xchg
fnstenv
mov
mov
pushf
test
out
xor
mov
in
xchg
mov
std
and
cli
sub
cs
push
push
xlat
sub
leave
push
test
cld
mov
add
mov
jns
jne
push
xor
jnp
jle
pop
inc
add
dec
inc
xchg
pop
inc
divb
sub
mov
fidivl
lods
sub
cmc
lods
stos
data16
or
fmuls
xor
mov
jge
or
mov
mov
sbb
xchg
popf
and
and
aam
xchg
repnz
jl
dec
adc
mov
push
push
pop
iret
mov
mov
fnclex
mov
arpl
xor
outsb
add
mov
and
lahf
fistpl
mov
pop
and
jb
inc
out
je
stc
nop
aad
add
notb
scas
daa
call
xor
xlat
imul
cmc
mov
fistpll
inc
es
lcall
test
bound
insl
or
jmp
mov
pop
sahf
mov
loopne
mov
add
inc
fisubl
in
test
mov
insb
add
lret
cld
sub
inc
dec
jge
push
scas
jo
pop
mov
in
mulb
testl
cmpsl
imul
lret
inc
xlat
in
sbb
dec
or
jo
sahf
pop
jge
xchg
mov
fwait
xor
adc
push
aaa
gs
bound
mov
testb
adc
das
pop
es
xorl
arpl
jae
outsl
push
xorl
movsl
mov
std
xchg
div
mov
call
jmp
mov
ds
scas
outsl
pop
in
mov
push
ljmp
sbbl
cmpsb
outsl
lahf
mov
push
testl
inc
or
jbe
arpl
pop
std
xchg
xchg
mov
and
mov
mov
loopne
adc
testb
dec
xchg
add
mov
mov
or
pop
mov
xchg
xchg
mov
push
loop
sbb
loope
fdivl
add
xor
cli
push
in
xchg
cs
push
fnstenv
jo
mov
int3
adc
imul
or
lahf
loope
shrl
call
int
mov
fs
inc
popf
cmp
and
mov
fistps
mov
int3
and
ftst
fmull
ljmp
xor
arpl
sub
jle
addb
jne
testb
push
sbb
adc
cmp
into
inc
popa
push
ja
push
add
outsl
pop
inc
jae
cmc
shll
and
and
push
test
ror
xor
mov
jne
clc
cli
mov
clc
pop
leave
and
mov
ss
pop
mov
repnz
sub
popa
enter
test
adc
mov
pop
sysexit
shll
pop
push
rcrl
jno
sub
pop
orb
fsubp
xchg
or
dec
push
loopne
mov
rcll
mov
pop
inc
pop
or
cmpsb
fists
cmp
cmpb
lods
xor
les
aaa
out
repz
rclb
out
jns
scas
lea
movsl
cltd
scas
xor
mov
mov
std
shll
sbb
and
insl
push
mov
mov
bound
subl
or
mov
sti
call
imul
int
xchg
scas
and
jne
cmp
push
imul
bound
je
shrb
ret
mov
inc
daa
js
pop
xchg
inc
cld
rcrl
movsb
mov
xchg
sarb
jmp
pop
jmp
or
sti
out
addr16
cmp
xchg
jbe
xchg
inc
mov
ds
lods
rorl
test
xor
mov
mov
xchg
stc
es
fwait
je
sbbl
xchg
sub
arpl
adc
out
sbb
jns
xchg
inc
fstpl
mov
adc
pop
mov
popa
and
mov
outsb
int3
outsl
in
movsb
fsubp
mov
sub
outsl
inc
inc
int3
int3
in
mov
lret
dec
sub
xchg
shl
gs
jge
xchg
dec
dec
stc
jle
mov
jne
jmp
jecxz
bnd
add
cmp
repz
jnp
inc
xchg
adc
sbb
push
call
movsl
mov
insl
rol
push
clc
loope
add
push
out
pop
push
ret
shll
cmp
imul
xchg
dec
rorb
ret
add
shlb
jle
data16
jae
mov
mov
fidivs
mov
lods
push
push
lods
ja
add
jns
jnp
icebp
or
jnp
sbb
jle
cmpsl
testb
in
xchg
jae
mov
aad
mov
notb
push
add
mov
sub
fwait
xor
aaa
testb
testb
xchg
dec
out
mov
inc
fmull
jl
fs
inc
fcmovb
test
clc
adc
ss
in
cmc
addl
sbb
fdivs
imul
fs
adc
and
iret
mov
xor
std
add
in
xor
dec
inc
dec
or
ja
fs
cmpsl
push
add
cwtl
cmp
sbb
inc
and
outsl
inc
adc
in
mov
ret
stos
enter
xor
or
in
sub
out
dec
cmp
sahf
add
jmp
adc
cli
bound
aad
imul
mov
jo
pop
loope
lcall
orb
insb
hlt
fnstsw
cmp
rorb
push
jmp
xchg
bound
aad
into
adc
imul
inc
jns
inc
mov
inc
push
adc
jmp
repz
stc
bound
pop
test
insl
imul
dec
jns
lret
lea
sbb
mov
dec
call
fs
outsl
add
arpl
jo
repnz
insb
jmp
sti
mov
rcll
jae
xchg
test
stos
jbe
push
ja
repnz
out
cmp
lea
movsb
push
sahf
call
add
pop
lret
es
jo
sbb
pcmpgtd
xor
push
pop
and
je
mov
mov
shlb
outsl
repnz
xchg
adc
js
lds
lret
and
jne
and
mov
mov
int3
fnsave
lcall
sub
mov
xor
and
out
mov
std
popa
imul
ret
out
into
inc
pop
push
std
inc
xchg
mov
in
movsb
rorl
adc
cmp
inc
pop
push
mov
ret
mov
sahf
aas
leave
xor
and
xor
push
clc
push
push
std
sub
fwait
sub
js
and
push
std
mov
mov
cmpsb
add
push
std
add
xor
and
mov
xor
std
and
mov
push
std
pop
push
add
lret
and
inc
adc
cmp
fs
mov
cs
pop
pop
pop
leave
mov
mov
dec
and
ds
in
sub
mov
clc
dec
dec
jo
jbe
adcl
jl
jb
sti
pop
shrb
loope
or
adc
fdivrs
dec
jo
testb
push
shr
cld
pop
jae
jp
call
repz
jge
divl
stos
jp
out
jl
std
orl
jno
int3
jmp
cmp
daa
mov
jo
fs
std
pop
pop
jle
aas
hlt
xchg
jnp
adcb
mov
xchg
stos
movsl
jo
fidivrl
jg
pop
or
mov
xorl
push
jecxz
sahf
rorb
in
inc
roll
mov
movsl
outsl
ljmp
lds
fimuls
int3
mov
add
mov
test
icebp
adc
dec
sub
push
fistl
ret
arpl
xor
into
mov
sub
mov
loopne
pop
stc
xchg
insl
out
lret
pop
xchg
mov
cmpsb
outsl
call
bound
jbe
push
inc
daa
mov
mov
and
dec
or
cmp
mov
and
mov
in
test
inc
xchg
hlt
jg
pop
leave
pop
rclb
xchg
cmpsb
mov
mov
mov
and
pop
jnp
fcomps
xchg
inc
push
mov
mov
mov
mov
movsb
xor
stos
sti
pop
cltd
stc
jge
push
push
rcrb
test
mov
mov
mov
mov
mov
mov
inc
sub
mov
subb
call
xchg
aad
pop
jnp
jae
lahf
insb
test
cmc
pop
dec
push
shlb
and
outsl
test
xor
sbb
xchg
cmp
xor
enter
outsb
jp
xor
adc
movsb
sub
inc
cmp
jg
popf
inc
xor
inc
out
and
shll
sbb
inc
and
and
inc
scas
xor
add
cmp
je
cmp
push
int3
mov
negb
das
mov
popf
scas
xor
mov
mov
jmp
lret
mov
dec
in
xchg
cmp
clc
lods
inc
and
adc
mov
adc
shll
pop
push
data16
pop
pop
mov
mov
test
push
sti
out
xchg
hlt
negb
aad
xlat
lcall
inc
inc
xchg
mov
xchg
sub
loope
mov
or
iret
xchg
pop
and
inc
ret
iret
xchg
orl
out
xchg
rorb
mov
dec
xchg
push
and
out
popa
cmp
sub
push
lds
or
jns
xchg
idivl
lret
popa
ret
add
push
iret
mov
pop
jmp
fdivp
pop
xchg
not
jnp
ret
cmpsl
push
jnp
xchg
enter
lods
pop
jmp
inc
mov
out
jo
adc
out
xchg
fisttpll
dec
setb
adc
add
jnp
sbb
jg
and
jb
in
cld
pop
sbb
mov
xchg
loop
xchg
push
les
stc
mov
mov
lcall
and
aad
jnp
add
sub
pop
int
bnd
pop
dec
imul
stc
cwtl
jmp
pop
xor
xchg
mov
pop
stc
hlt
mov
int
out
je
repz
pop
jmp
add
or
fnstenv
push
pop
std
and
fdivrs
and
outsl
sub
cmp
cwtl
icebp
pop
clc
pop
jmp
outsb
xor
fidivrs
das
stc
pop
dec
inc
fdivl
xchg
out
clc
sub
xchg
and
adcb
aad
ds
xor
popa
imul
cmp
pop
into
nop
adc
int
jmp
fwait
inc
or
movsb
sub
sarl
stos
cmp
pop
adc
adc
and
fidivl
push
dec
push
xchg
inc
xor
das
xchg
inc
and
scas
sub
sbb
inc
xchg
pop
loopne
mov
mov
mov
adc
xchg
and
insl
push
fnstcw
ja
mov
clc
cld
push
inc
and
xorb
xor
ja
mov
cmpsl
add
xchg
inc
sbb
inc
adc
inc
adcl
cmpsl
and
call
notb
xor
push
lret
adcl
jg
jb
shll
mov
dec
mov
add
add
jle
mov
movsl
xor
push
xor
pusha
mov
and
inc
cmp
cld
jge
mov
push
outsb
pmullw
push
in
jae
xor
fs
ljmp
flds
repnz
leave
xchg
test
fs
data16
xchg
ss
es
and
mov
into
xchg
push
cmpsl
aad
icebp
push
mov
jno
dec
push
cmp
es
sub
mov
loopne
test
hlt
sub
outsl
jle
adc
jge
xchg
cli
dec
inc
or
out
in
rclb
mov
add
pop
mov
incl
inc
adc
shr
xchg
xchg
inc
adc
inc
adc
and
sub
das
lea
jo
jge
lret
xchg
les
jl
sbb
in
negl
jp
jl
rcr
shlb
movsb
arpl
xchg
inc
jecxz
push
mov
leave
out
add
jge
dec
or
xchg
pop
imul
mov
mov
test
in
je
aad
sbb
xor
in
les
fsts
cld
push
xchg
mov
mov
or
cmpsl
cs
daa
scas
addl
sahf
and
xor
iret
xchg
out
test
jne
push
shr
popa
xchg
cld
out
out
inc
push
mov
lods
aad
fs
outsl
pop
jg
addl
jbe
pushf
mov
and
insl
pop
shll
mov
ljmp
xor
add
mov
jnp
aad
adc
cmp
inc
or
inc
adc
mov
sub
jle
mov
sub
scas
xor
lea
xor
xchg
and
mov
pusha
clc
xlat
push
add
jecxz
movl
rcll
xchg
cmpsl
xor
lods
push
add
adc
xchg
mov
ret
xchg
mov
push
add
int
mov
dec
jg
stos
and
icebp
data16
push
sar
data16
call
pop
xchg
stos
inc
leave
clc
sub
sub
insb
repz
orl
fs
neg
sbb
xchg
push
push
stos
xor
out
pop
pushw
lahf
inc
lret
or
out
sahf
fildl
lret
pop
negl
sbb
cs
sbb
jo
xchg
aaa
fbld
cld
push
or
cmp
mov
or
mov
daa
mov
adc
cmp
roll
cmp
daa
fwait
ds
mov
scas
sub
shll
pop
clc
push
pop
xchg
icebp
mov
orl
loop
xchg
scas
sub
shrb
inc
ss
xorl
sbb
mov
nop
push
ljmp
mov
icebp
pop
fldcw
fdivrs
dec
pushf
ds
dec
jmp
mov
mov
lahf
cmp
rolb
test
push
movsl
and
jl
ljmp
push
inc
inc
dec
push
scas
xchg
lret
shr
repz
xchg
cmp
jnp
mov
push
push
sarl
xchg
imul
lret
mov
test
in
outsl
xor
and
test
cli
inc
push
sub
int3
cmpl
imul
data16
push
mov
ljmp
pop
jmp
sub
cmp
mov
popl
fistps
mov
inc
mov
scas
sub
adc
mov
pusha
cmc
mov
push
mov
mov
test
fsubrs
mov
xchg
xchg
push
jb
lds
xcrypt-cbc
cmpsl
push
lds
sbb
cmp
sub
pop
es
popa
cmp
arpl
mov
call
mov
ss
cs
mov
int
lcall
test
sti
arpl
rcll
fld1
pushf
ds
adc
test
mov
lods
sub
mov
outsb
add
or
cli
gs
pop
negb
sbb
jbe
filds
rcrl
lea
pop
popf
inc
das
sub
jo
cmp
lea
xor
sbb
out
inc
hlt
flds
sbb
les
dec
adc
fidivrs
dec
dec
or
and
mov
cmpsb
in
add
jge
sbb
lods
sub
mov
xchg
jecxz
loopne
jae
sbb
adc
inc
push
add
sub
lcall
xchg
inc
lahf
sbbl
push
arpl
jne
and
cmpsl
pop
stos
dec
or
sbbl
sub
rorl
sub
mov
cmp
pushf
push
mov
icebp
jne
dec
push
aas
push
mov
pop
mov
mov
cmpsb
leave
repnz
push
mov
cmp
mov
mov
sbb
pop
add
dec
sbb
pop
sbb
or
jbe
fdivrs
jo
cmp
mov
jns
sub
out
imul
sbb
pop
cmc
xor
hlt
in
inc
adc
test
sahf
popf
cmp
dec
int3
mov
mov
mov
lret
in
call
adc
and
dec
je
pusha
cmpsb
xchg
dec
in
pop
call
mov
sub
leave
lcall
shr
std
push
imull
ljmp
adc
jp
jnp
into
popf
adc
inc
shlb
stc
cli
sbb
jl
ljmp
bound
aaa
fwait
mov
scas
cmp
mov
or
jmp
std
inc
pop
pop
push
cmpsb
daa
pop
nop
orb
lcall
xchg
and
or
jmp
xchg
pusha
push
cld
faddp
dec
adc
movsb
xor
rorb
in
pop
lds
loope
xchg
lret
icebp
popa
jge
cld
pop
mov
mov
inc
adc
mov
ret
mov
mov
pop
stc
adc
push
mov
dec
xchg
fwait
xor
xchg
and
in
out
out
mov
lods
hlt
pop
mov
stos
sarl
mov
int
jmp
lahf
ds
lahf
call
and
leave
mov
inc
cltd
cmp
adc
fidivrs
lret
inc
repnz
lock
pushf
dec
or
in
lea
iret
hlt
testb
dec
fs
rclb
ja
jae
fsubl
or
lods
sub
leave
loope
xor
mov
cmpb
lret
mov
inc
adc
mov
cmp
and
jo
std
data16
lcall
iret
shlb
test
insl
and
aaa
xor
mov
and
test
cwtl
insl
shl
pop
das
jge
jecxz
aaa
fnstenv
lds
sub
add
gs
in
jg
cli
xchg
testl
and
inc
sub
insl
xor
je
mov
popf
sbb
out
les
shl
pop
xchg
in
jae
sbb
cmp
aas
mov
out
cwtl
mov
push
lret
fidivrs
push
and
pshufw
cltd
pop
imul
mov
pop
or
adc
and
dec
jecxz
jae
sbb
mov
ret
mov
test
aad
lock
xchg
frstor
lahf
xchg
std
xchg
cmp
ret
adc
std
push
push
or
pop
push
inc
pop
orb
mov
xchg
orl
cltd
inc
jo
jl
stos
gs
push
mov
jmp
daa
sbb
dec
call
pop
add
cmp
lcall
xor
lret
dec
and
dec
xor
sbb
add
mov
loope
sarb
imul
jge
test
imul
push
testl
inc
or
fiaddl
or
push
stc
in
pop
pop
add
stc
es
mov
stos
arpl
pop
xchg
lods
xor
repnz
mov
mov
sbb
or
test
das
mov
or
jbe
call
mov
inc
push
sbb
lea
and
call
decl
mov
loope
push
mov
outsl
lock
jb
inc
pop
in
jb
xchg
int3
xchg
push
pop
add
jge
xchg
test
rclb
lahf
cmp
jmp
out
addr16
add
imul
push
add
loope
ret
icebp
jnp
aam
dec
movswl
or
mov
lods
sarb
lcall
pop
add
pop
stos
mov
out
pushf
inc
pop
xchg
xchg
in
shufps
daa
sti
cmp
adc
loope
cmp
mov
sub
mov
repz
cmp
orl
pop
mov
add
lcall
lds
add
imul
mov
xchg
cmp
lods
sub
pop
scas
cs
outsb
adc
xchg
inc
mov
pop
push
movsl
dec
or
mov
dec
jg
out
insl
xchg
addr16
in
decl
js
imul
or
jb
mov
ret
gs
hlt
push
xlat
sub
cmp
dec
ja
test
adc
adc
dec
aam
das
pusha
roll
cmp
and
mov
dec
or
ret
inc
jbe
fimuls
aad
and
rolb
xchg
mov
pop
out
and
jge
inc
xor
nop
cmp
cmp
cwtl
rorb
jb
mov
adc
ljmp
int
mov
dec
sub
xlat
push
aaa
lods
sub
into
xchg
hlt
popa
xor
inc
adc
std
xchg
push
sarb
xchg
sub
push
mov
dec
mov
cli
popa
dec
xor
stc
pop
hlt
nop
fiaddl
hlt
sub
xchg
movsb
out
gs
insb
bnd
arpl
adc
mov
mov
jecxz
imull
add
enter
cmp
sub
xor
stos
cmp
je
pop
in
xor
push
adcb
ljmp
out
subl
mov
push
add
sti
gs
push
clc
pop
pop
cli
mov
mov
pop
cmp
cmc
repnz
int
dec
out
fdivl
xchg
int
jne
rcrb
adcb
jmp
add
or
mov
push
movsl
xor
xor
jns
fwait
cmp
imul
inc
xor
gs
pop
ret
icebp
jg
sbb
mov
mov
mov
sti
pop
add
dec
sub
fldl2e
test
mov
and
sbb
int3
cmp
push
sbb
sbbl
jno
sbb
enter
int
ljmp
xchg
jle
xchg
cmp
imul
mov
scas
mov
pop
orb
xor
lods
xor
test
cmpsb
mov
call
popf
jne
sub
adc
jecxz
inc
dec
ljmp
and
enter
fildll
sti
pop
push
cmp
push
decb
xchg
ds
xchg
cmp
sub
mov
cmpsl
cmp
mov
mov
mov
out
add
push
shlb
aam
push
data16
push
mov
and
cmp
cmp
and
into
adc
and
push
es
in
jmp
loope
and
xchg
cmp
mov
ss
xchg
inc
dec
rolb
jmp
icebp
mov
and
sbb
push
add
fdivrl
cld
mov
pop
clc
imul
push
lock
out
test
rorb
add
adc
push
icebp
stos
das
inc
mov
ss
and
xchg
ds
add
mov
xchg
icebp
and
std
cwtl
loope
out
push
loop
xlat
jns
clc
mov
push
jbe
adc
stos
mov
pop
scas
xor
imul
pop
xor
adcl
mov
xchg
adc
inc
in
jno
dec
ss
lret
lock
adc
scas
iret
hlt
decb
icebp
pop
cwtl
call
pop
cld
imul
dec
pop
adc
pop
std
cmpsb
add
lret
jae
push
iret
inc
adc
mov
out
mov
ret
sub
push
sbb
jns
inc
mov
mov
mov
jae
cmp
lods
sub
daa
in
push
hlt
xrstors
sub
inc
add
mov
dec
loope
aam
cmp
mov
scas
loope
mov
sub
cmp
xchg
cmp
sub
jnp
jmp
xchg
inc
add
dec
or
mov
movsb
subl
daa
lods
test
xchg
loope
fdivrs
add
xchg
xchg
xchg
loop
inc
iret
xchg
cltd
jae
int
xlat
outsb
out
and
aad
mov
pop
add
mov
and
xor
mov
sub
mov
jae
lret
push
hlt
cltd
inc
fs
push
lret
adc
inc
sbbb
xchg
inc
aad
xchg
sub
sub
mov
inc
push
mov
fwait
repz
ljmp
jp
lds
ficoms
out
mov
sub
mov
mov
xchg
sub
enter
mov
xchg
xor
js
jl
sbb
loop
jo
mov
stos
test
pop
add
and
stos
xor
shrb
mov
dec
xchg
cmp
adc
and
in
nop
aaa
lcall
stos
mov
data16
push
inc
jo
push
inc
shll
stc
pop
push
fldenv
mov
nop
pop
stc
shll
fwait
xor
sar
xchg
add
push
pop
mov
mov
jmp
movsb
push
ret
push
jnp
push
popa
in
mov
jae
loop,pt
cmpsl
sub
outsb
icebp
jg
mov
dec
rcll
mov
ret
out
sbb
push
pop
aad
push
notl
addr16
out
std
pop
mov
loop
add
sub
jno
int
cwtl
outsb
lock
fnstcw
insb
fidivrs
xor
std
pop
imul
stc
movsl
insl
xor
sahf
and
mov
scas
mov
cmc
pop
jae
inc
pop
mov
pop
ret
mov
inc
es
sbb
cmc
xor
imul
in
jb
cmp
rolb
clc
pop
fldl
jae
add
dec
or
and
or
pop
stc
jmp
je
or
das
test
stc
adc
push
jmp
jmp
mov
xchg
outsb
fwait
in
je
jg
xor
sbb
mov
cmp
mov
sbb
xchg
iret
out
jb
dec
das
mov
jmp
xchg
push
mov
mov
in
mov
push
ror
mov
dec
bswap
scas
lea
push
and
sub
inc
adc
xor
jbe
scas
sub
insl
dec
or
movsl
popf
aaa
imul
pop
cld
mov
mov
mov
and
mov
mov
pop
clc
mov
mov
mov
stos
sub
stc
mov
fidivl
fwait
cmp
outsb
scas
sub
fists
xor
mov
ror
mov
jecxz
aad
daa
lcall
jmp
cmp
movsl
cli
xchg
xchg
sub
out
jno
jnp
dec
lods
aaa
jl
popa
mov
lods
or
sub
fadds
sbb
dec
jo
mov
insl
mulb
mov
and
cmp
mov
aas
mov
sti
mov
stc
arpl
lcall
sbb
lods
xchg
sti
lcall
jbe
ss
lret
call
aad
lret
or
into
sbb
and
js
cmp
ficompl
loope
dec
es
or
fwait
jo
mov
movsl
fisubl
je
xor
rclb
mov
add
cmp
xchg
dec
das
fs
cltd
inc
push
cmc
cltd
mov
outsl
mov
xor
or
pop
jno
xchg
cmp
add
push
mov
mov
test
cmpsb
xor
ja
and
mov
mov
shrl
xor
gs
push
hlt
popa
fcoms
jg
jmp
stc
pusha
push
jns
scas
in
imul
testb
lret
sbb
les
ret
out
adc
ds
ss
cmp
sub
mov
pop
mov
into
xchg
add
or
jo
mov
lret
inc
out
pop
add
inc
out
add
scas
xor
xchg
jne
sahf
int3
dec
adc
into
cmpsl
sub
in
popf
inc
das
out
scas
xor
cmp
mov
inc
fwait
loope
fcoml
loope
jp
mov
sbb
in
jo
gs
ss
and
adc
test
xlat
mov
xlat
mov
subb
aad
iret
lods
jmp
lahf
mov
mov
push
and
sbb
pusha
jmp
dec
mov
mov
adc
lds
mov
adc
imul
scas
sub
addr16
les
adc
pop
cwtl
cmp
jecxz
xchg
mov
movsl
imul
xchg
out
push
jecxz
mov
lods
std
out
cmp
cmpsb
and
mov
jns
or
lods
sub
mov
and
pop
jbe
cmp
lret
sub
add
std
cmp
stos
fbstp
es
fwait
push
notl
lds
out
cmp
fiaddl
adc
push
clc
dec
rolb
mov
jae
adc
mov
enter
adc
outsl
jno
fstps
mov
jno
ficoml
ret
push
add
and
repnz
xor
cmpsl
enter
mov
xchg
inc
rcll
mov
jno
dec
mov
push
lods
push
sti
aaa
aas
push
mov
orl
daa
rcrl
pop
adc
jl
mov
bound
aad
roll
test
in
xchg
stos
out
or
xor
dec
jge
stc
arpl
imul
popf
addr16
adc
sbb
jo
in
dec
mov
or
cmp
inc
xchg
pop
dec
dec
lods
sub
xchg
mull
lods
sub
bswap
rolb
outsb
inc
pop
mul
jbe
add
fadds
aad
lret
jmp
insl
out
testl
test
mov
jmp
hlt
pop
mov
jl
dec
adc
xchg
jle
mov
jno
xchg
lds
and
push
mov
addr16
sbb
or
sub
mov
cltd
inc
mov
mov
inc
adc
sub
or
jle
pop
mov
cli
test
enter
fildl
test
aam
sahf
mov
sub
jo
cmpsl
jnp
movsb
fadd
mov
jge
dec
lret
mov
test
in
outsb
leave
and
mov
mov
inc
wbinvd
leave
adc
inc
push
pop
stc
gs
arpl
jnp,pn
xor
xor
ja
cmpl
xor
fmulp
mov
sbb
addr16
es
stos
test
add
or
lods
add
push
fldl
subb
rol
mov
mov
mov
mov
arpl
lcall
cmp
xor
mov
lods
scas
xor
mov
fadds
jno
aad
dec
movb
mov
adc
dec
sti
fs
jecxz
int3
test
push
stc
rcl
mov
add
push
int
push
adc
and
add
cmp
and
add
or
pop
push
leave
out
push
xchg
inc
adc
cmc
popa
dec
dec
adc
rorl
sbb
mov
out
in
mov
mov
lods
adc
push
mov
sub
and
xor
test
js
xorl
and
xchg
jecxz
mov
pop
or
xchg
inc
sbb
pop
dec
inc
mov
xchg
xchg
inc
and
sub
dec
enter
xor
daa
lret
pop
sti
insb
cmp
xchg
aas
dec
xchg
adcl
rolb
pop
movsb
xchg
inc
mov
adc
outsl
lods
addr16
cmp
popf
fbld
call
lret
in
aas
sbb
jne
xor
popl
push
sub
xor
mov
or
popl
mov
push
push
movsl
rorb
jns
ret
adc
mov
adc
movsl
cmp
xor
jns
jb
xor
mov
mov
cmp
rcll
push
gs
std
jle
sub
fiaddl
ret
mov
or
mov
ret
movsb
sub
movsl
gs
sub
push
testl
pop
xchg
aas
fimuls
sbb
imul
in
pop
std
sar
mov
push
test
ljmp
andl
push
adc
inc
jno
mov
outsb
idivb
repz
sahf
jb
push
shll
sbb
roll
lret
mov
subb
loopne
or
test
lods
mul
stos
sub
icebp
fstps
aam
int
mov
xor
popa
jg
pop
scas
push
jge
test
mov
aad
xchg
movsl
icebp
pop
add
mov
mov
je
pop
xor
and
xor
out
jb
sysret
leave
cmp
adc
fsubrs
inc
or
mov
pop
dec
mov
or
stos
pop
jge
inc
cmp
sub
xchg
jb
sti
push
int
lret
xchg
pop
mov
shl
loopne
jns
lret
aam
sbb
pop
sbb
and
xchg
pusha
repz
cmpsl
sti
pop
jo
fnstsw
insl
dec
or
mov
inc
push
mov
cmpsb
push
push
and
cmpsl
push
jbe
sub
in
add
push
mov
lahf
jns
addr16
cmpsb
out
push
xor
pusha
cs
xchg
in
fidivl
jno
add
les
nop
stc
sbb
push
push
sub
mov
adcl
and
ja
jmp
lcall
sub
xchg
pop
dec
or
add
iret
negb
addr16
in
ljmp
jbe
push
incl
pop
lret
add
add
enter
scas
inc
xor
lcall
gs
rclb
jecxz
mov
icebp
ss
sarl
daa
sarl
leave
daa
lods
std
push
adc
jnp
inc
or
imul
in
idivl
test
les
movsb
jecxz
jo
outsb
mov
ret
cmpsb
xor
mov
mov
out
fcomps
call
mov
mov
mov
sbbl
sahf
stos
inc
sar
int
les
lods
das
pop
fldl
loop
outsl
repnz
nop
cmp
stos
inc
or
test
inc
or
mov
stos
xor
repz
cltd
inc
adc
mov
mov
jge
out
jno
imul
pop
xor
mov
or
mov
adc
stos
push
mov
adc
dec
in
imul
cmp
scas
sub
xor
xchg
popa
mov
mov
subb
lods
or
fwait
aaa
mov
pop
int3
xchg
mov
idiv
fiaddl
cs
jo
or
test
scas
pop
imul
in
mov
lahf
inc
sub
loop
addr16
popf
repz
jb
aam
in
cmp
js
into
xorl
sbb
mov
push
or
jecxz
jle
lods
mov
popa
iret
push
xchg
adc
sbb
inc
adc
rclb
pushf
adcl
imul
fidivrs
fcoms
test
xor
inc
or
mov
aam
jbe
xlat
sub
fdivrl
cmp
jge
inc
push
ret
xchg
nop
lahf
push
add
leave
call
das
jne
imul
outsl
roll
lret
or
data16
es
les
add
jo
jmp
sti
nop
adcb
jnp
mov
mov
rcr
jp
pop
cld
cmpsl
mov
rolb
and
fstpt
ds
hlt
push
adc
ja
pop
sti
clc
outsl
data16
add
cmp
lods
push
repz
js
mov
fs
cmp
test
or
aas
push
add
or
xor
stos
sub
push
cld
hlt
pusha
rclb
push
mov
out
lds
mov
jmp
xlat
sub
pushf
sbb
out
imul
adc
mov
mov
out
push
cmp
dec
shrb
jecxz
inc
sbb
lock
cld
dec
fstpt
in
add
mov
scas
xor
jge
push
cmc
outsl
mov
pop
stos
dec
sub
dec
pop
mov
addr16
xor
mov
xchg
pop
add
rorl
xor
jnp
dec
and
repnz
inc
mov
dec
loope
or
cmp
push
pop
cmp
sbb
loop
movsb
cmp
add
pop
adc
xor
stc
nop
fmull
pop
scas
fcompl
or
cs
pop
mov
pop
out
mov
jno
shll
add
es
sub
lods
inc
int
mov
stos
out
lret
bound
int
incl
xorb
xchg
pop
sahf
lds
movsb
movsb
out
mov
idivl
inc
fisubrl
dec
loope
mov
mov
fdivrl
push
mov
popf
xor
adc
push
mov
ret
pop
xchg
aad
jo
mov
js
sub
mov
add
lods
pop
push
mov
int
lret
cmp
fistps
push
jmp
xor
pop
mov
les
xlat
pop
lods
inc
dec
clc
mov
sub
bound
mov
icebp
mov
adc
lahf
inc
icebp
and
xchg
inc
sub
xchg
dec
loop
or
cmp
imul
lea
xchg
insb
scas
lahf
ss
movsl
cmp
add
pop
adc
jae
xor
js
test
xchg
fiaddl
sbb
or
int
sub
rcrb
push
jmp
jle
lock
bnd
and
ja
add
daa
js
xchg
sub
cltd
scas
inc
lret
ja
dec
test
lret
shrl
aas
ljmp
xchg
or
mov
les
cmc
ss
dec
loop
mov
mov
fiaddl
push
out
sub
cmpsb
cmp
mov
les
rcr
jno
mov
jns
es
pop
or
cwtl
cmp
lods
stos
pop
pop
mov
lret
xor
cld
lods
cmp
ljmp
jno
mov
ret
es
movsb
xchg
cs
push
scas
inc
dec
divl
arpl
ljmp
adc
mov
and
mov
jae
inc
fsub
xchg
dec
loop
pop
fs
cmp
imul
mov
xchg
imul
cmp
add
pop
adc
xchg
loope
cmpsl
sti
xchg
flds
sbb
or
into
jle
cmp
pop
lahf
push
in
sarb
lock
icebp
jae
and
ja
add
sub
xchg
sub
cwtl
scas
inc
lret
dec
test
int
sbb
ds
jo
lock
or
mov
ret
sub
hlt
xor
dec
loop
xchg
mov
flds
push
in
sub
ss
push
cmpsb
cmp
mov
les
rcr
jb
mov
jns
and
add
test
lret
sti
lods
cmp
jmp
pop
repnz
outsl
jb
mov
ret
hlt
mov
scas
inc
inc
divb
fs
dec
shrl
mov
icebp
mov
mov
and
mov
jb
inc
fucom
xchg
dec
loop
push
gs
aaa
in
add
pop
sbbl
cmp
cmp
mov
push
xor
ret
pop
adc
je
xor
js
cmpsb
sti
xchg
fadds
sbb
or
jge
cmp
pop
sahf
push
in
iret
jge
lock
lock
and
ja
add
jbe
xchg
sub
xchg
scas
inc
leave
jbe
dec
test
int
sbb
shrl
cmp
lock
or
mov
ret
sub
hlt
xor
fsubl
dec
loop
xchg
mov
imul
or
lahf
ss
push
cmpsb
cmp
mov
les
rcr
jb
mov
jns
and
nop
push
or
cwtl
cmp
scas
test
pop
mov
leave
xor
aam
sbb
pop
repnz
outsb
jb
mov
rcll
aad
scas
inc
inc
divb
fs
sub
icebp
mov
push
or
and
mov
jb
inc
fucom
xchg
dec
loop
add
imul
mov
xchg
push
mov
cmp
mov
pop
adc
je
xor
js
movsl
sti
xchg
xlat
test
xchg
mov
sbb
or
into
jl
cmp
pop
popf
push
in
into
jge
lock
out
jae
and
ja
add
sub
xchg
sub
xchg
scas
inc
enter
test
int
sbb
shrl
cmp
subb
xchg
or
mov
ret
sub
hlt
xor
fs
arpl
mov
imul
or
lahf
ss
push
cmpsb
cmp
scas
popa
les
rcr
jb
mov
jns
and
nop
push
or
cwtl
cmp
scas
cmpsl
pop
pop
mov
enter
lods
cmp
jmp
pop
repnz
insl
jb
lahf
push
jns
add
daa
repnz
scas
inc
inc
divb
fs
dec
shrl
mov
icebp
mov
or
and
mov
jb
inc
fucom
xchg
dec
loop
add
cld
xor
push
sbbl
cmp
cmp
mov
push
das
ffreep
pop
adc
je
xor
js
movsb
sti
xchg
test
xchg
mov
sbb
or
into
jnp
cmp
pop
pushf
push
in
int
pop
lock
out
jae
and
ja
add
sub
sub
xchg
scas
inc
jbe
dec
test
int
sbb
shrl
cmp
subb
xchg
or
mov
ret
sub
hlt
xor
arpl
arpl
mov
imul
or
lahf
ss
push
cmpsb
cmp
scas
popa
les
iret
mov
jns
and
nop
push
or
cwtl
cmp
scas
cmpsb
pop
pop
mov
xor
aam
sbb
pop
repnz
insb
jb
sahf
push
jns
cmpb
cs
scas
inc
inc
divb
fs
dec
shrl
mov
icebp
mov
or
mov
and
mov
jb
inc
fucom
xchg
dec
loop
add
xor
imul
mov
xchg
push
mov
cmp
cld
mov
pop
adc
je
xor
js
mov
call
daa
fstps
into
jp
cmp
pop
fwait
push
in
int3
jge
lock
in
jae
pop
shlb
add
sub
xchg
sub
xchg
scas
inc
jbe
dec
test
int
sbb
shrl
cmp
subb
dec
lea
mov
mov
ret
sub
hlt
xor
bound
arpl
mov
imul
pop
mov
lahf
ss
push
cmpsb
cmp
lods
popa
les
into
mov
jns
and
nop
push
or
cwtl
cmp
movsl
pop
pop
mov
xor
aam
sbb
pop
repnz
imul
push
jns
cmpb
cs
scas
inc
inc
divb
fs
dec
shrl
mov
icebp
mov
or
mov
and
mov
jb
inc
fucom
xchg
dec
loop
add
xor
imul
xchg
xchg
push
mov
cmp
sti
mov
pop
adc
je
xor
js
mov
call
fstps
into
jns
cmp
pop
lcall
scas
in
jae
push
shlb
add
sub
xchg
sub
xchg
scas
inc
lds
dec
test
int
sbb
shrl
cmp
subb
xchg
or
mov
ret
sub
hlt
xor
popa
adc
arpl
mov
imul
push
mov
lahf
ss
push
cmpsb
cmp
lods
popa
les
int
jb
mov
jns
and
xchg
push
pop
add
movsb
pop
pop
mov
lds
int
stos
cmp
in
dec
std
pop
repnz
or
xchg
sub
mov
mov
inc
cmc
mov
daa
fs
gs
dec
shrl
mov
sub
icebp
mov
or
mov
pop
pop
sub
mov
les
inc
fsubp
xchg
dec
loop
add
xor
imul
xchg
xchg
imul
rclb
ret
pop
adc
jne
xor
js
mov
call
and
inc
cmp
js
cmp
pop
cltd
push
in
lret
lock
jmp
or
aas
xchg
sub
xchg
sub
xchg
mov
les
dec
cmpsl
in
gs
leave
shrl
cmp
subl
xchg
or
mov
ret
repz
inc
frstor
dec
loop
andl
roll
push
in
mov
cmp
stos
pusha
les
int3
fdivl
mov
jns
pop
sti
xchg
push
push
add
mov
les
into
cmc
stos
cmp
in
inc
cld
pop
repnz
dec
jns
cmpb
rorl
mov
inc
hlt
mov
es
xchg
inc
shrl
mov
test
lcall
cmp
push
pop
sub
lea
sub
xchg
dec
loop
add
xor
imul
test
xchg
push
mov
pop
sub
ret
pop
cmovge
jbe
xor
js
mov
call
and
sbb
shlb
cmp
pop
cwtl
push
out
leave
jnp
lock
ljmp
add
xchg
sub
xchg
sub
xchg
mov
ret
je
dec
cmpsb
in
pushw
enter
aaa
in
test
lock
or
lahf
fsubrl
rorb
inc
ficomps
dec
loop
andb
imul
add
xchg
jmp
mov
cmp
stos
pop
les
lret
fnsave
loop
in
cld
xchg
push
add
sbb
mov
cmp
hlt
test
push
out
inc
sti
pop
repnz
jne
lcall
sub
mov
mov
inc
repz
and
inc
shrl
mov
test
cltd
icebp
mov
or
cmpsb
sbb
ds
loopne
nop
dec
loop
jmp
xor
imul
test
xchg
push
mov
pop
sub
ret
pop
cmovl
jbe
xor
js
lahf
std
xchg
roll
sbb
or
shlb
cmp
pop
xchg
push
out
enter
lods
jmp
ja
add
xchg
sub
nop
mov
ret
dec
cmpsb
jecxz
adc
push
push
mov
mov
lahf
fldt
rorb
ret
repnz
dec
loop
jg
cld
mov
imul
add
mov
cmp
test
lret
cld
mov
jns
sbb
add
mov
ret
repz
push
out
inc
sti
pop
repnz
jne
cltd
dec
jns
jg
xchg
sub
mov
mov
aas
repz
and
inc
shrl
mov
test
cltd
icebp
mov
pop
or
cmpsb
sbb
ds
loopne
nop
dec
loop
addr16
das
jecxz
add
xchg
push
mov
pop
sub
ret
pop
cmovnp
jbe
xor
js
sahf
std
xchg
rolb
sbb
or
jne
cmp
pop
xchg
push
out
jnp
lock
call
ja
add
sub
xchg
sub
mov
shll
loop
data16
shrl
xor
lock
or
lahf
fisubrl
rorb
sub
repnz
ficomps
dec
loop
jle
cld
scas
imul
add
mov
cmp
test
les
leave
fnsave
loop
in
cld
xchg
dec
add
sbb
mov
cmp
repnz
push
out
inc
sti
pop
repnz
jne
cwtl
dec
jns
jg
xchg
sub
mov
mov
ds
and
inc
shrl
mov
test
cltd
icebp
mov
push
or
cmpsb
sbb
ds
loopne
nop
dec
loop
std
addr16
jecxz,pn
add
xchg
push
mov
pop
sub
ret
pop
cmovp
jbe
xor
js
popf
std
xchg
iret
cmp
mov
sbb
or
shlb
rcrb
push
out
jnp
lock
out
or
into
ja
add
xchg
sub
xchg
sub
mov
dec
cmpsb
loope
adc
shrl
xor
test
lock
or
lahf
fldcw
rorb
sub
repnz
pop
adc
inc
jge
cld
scas
imul
add
mov
cmp
cmpsl
pop
les
enter
mov
jns
sbb
xchg
dec
add
sbb
mov
cmp
icebp
test
push
out
inc
sti
pop
repnz
jne
xchg
dec
jns
jg
xchg
sub
mov
mov
cmp
pop
shlb
inc
shrl
mov
test
cltd
icebp
mov
add
sbb
ds
loopne
nop
dec
loop
cld
addr16
sub
dec
test
xchg
push
mov
pop
daa
ffree
pop
cmovns
jbe
xor
js
pushf
std
xchg
into
cmp
mov
sbb
or
shlb
cmp
pop
xchg
push
out
lds
lock
out
or
into
ja
add
xchg
sub
sub
lea
dec
cmpsb
loopne
data16
shrl
xor
test
lock
or
lahf
fsubrs
rorb
sub
repnz
pop
adc
inc
jl
cld
lods
imul
add
mov
cmp
cmpsb
pop
les
fnsave
loop
in
cld
xchg
dec
add
sbb
mov
cmp
out
inc
sti
pop
repnz
jne
xchg
dec
jns
jg
xchg
sub
mov
mov
cmp
mov
and
inc
shrl
mov
test
cltd
icebp
mov
add
movsb
xor
push
sub
mov
sub
loopne
nop
dec
loop
sti
addr16
sub
imul
xorb
push
push
mov
pop
es
pop
cmovs
jbe
xor
js
fwait
std
xchg
int
call
pop
xlat
sbb
shlb
cmp
pop
xchg
push
out
les
lock
in
or
into
ja
add
xchg
sub
xchg
sub
mov
dec
cmpsb
adc
shrl
xor
test
xchg
or
lahf
xlat
sub
or
sub
repnz
pop
adc
inc
jnp
cld
lods
imul
mov
mov
cmp
movsl
pop
les
fidivs
mov
jns
sbb
xchg
dec
add
cwtl
xor
push
pop
mov
mov
cmp
out
inc
cli
pop
repnz
or
jle
xchg
sub
lahf
xchg
rorl
mov
cmp
mov
and
shrl
inc
shrl
mov
xchg
cwtl
icebp
mov
add
movsl
xor
sbb
sub
xchg
dec
loope
dec
loop
cli
push
add
xchg
addr16
rorb
ret
fadd
pop
push
inc
loopne
jns
loope
popa
lcall
mov
sbb
push
sbb
shll
cmp
pop
xchg
pop
out
ret
jp
lock
in
or
pushl
xchg
sub
xchg
sub
mov
fst
addr16
shrb
xor
test
icebp
mov
mov
sahf
aad
roll
sub
fistps
dec
jecxz
jns
std
stos
fs
xchg
lret
test
std
mov
pop
jmp
or
pop
mov
fbstp
mov
jp
pop
xchg
dec
add
cltd
xor
sbb
fwait
push
and
in
cmpsl
ds
push
pop
lock
stc
pop
repz
push
xchg
dec
jp
jge
xchg
sub
sahf
cwtl
das
rolb
mov
cmp
mov
and
imul
xchg
repnz
add
cmpsb
xor
adc
test
lds
dec
loop
mov
clc
imul
adc
jle
mov
data16
movsl
cmp
xchg
pop
and
les
inc
loope
js
loop
pusha
cltd
call
mov
sbb
mov
aas
cmp
jo
cmp
push
xchg
pop
lock
icebp
test
lret
js
std
ss
sub
push
xchg
cs
mov
dec
mov
imull
out
xchg
repnz
or
cmpsl
pushf
aam
ret
cs
dec
loopne
adc
inc
js
test
lret
cld
mov
and
sbb
test
cmp
pop
mov
ret
loopne
cmc
scas
in
loopne
call
xor
mov
push
and
in
movsl
aas
or
pop
hlt
sub
setb
adc
xchg
sub
into
push
mov
cmp
mov
and
push
inc
aad
je
icebp
mov
xchg
repz
add
cmpsl
xor
adc
test
das
imul
in
imull
sub
imul
dec
mov
jge
mov
fs
cmpsb
cmp
mov
les
fld
pop
or
jns
sub
jp
cwtl
add
mov
push
mov
rcrb
mov
cmp
cmp
icebp
shlb
cmpsl
loope
leave
jns
sti
xor
sub
dec
xchg
mov
ret
aam
cmc
sub
repz
push
movsl
mov
adc
add
loope
push
dec
in
jbe
jmp
enter
mov
and
sbb
inc
cmp
pop
mov
shl
rep
in
ficoms
xchg
inc
incl
lcall
and
ljmp
repnz
pop
hlt
es
jns
nop
inc
jnp
jns
xchg
jecxz,pn
cltd
xor
add
dec
ss
mov
pop
pop
aam
mov
insb
jb
repnz
xchg
repz
adc
sbb
lds
mov
dec
in
cmc
push
daa
fisubrs
adc
pop
jnp
mov
arpl
ds
les
fadd
pop
or
jns
sub
jp
xchg
add
scas
call
pop
mov
cmp
insb
and
icebp
mov
fistpll
adc
jns
cli
xor
das
dec
test
mov
ret
hlt
sub
xchg
repz
push
movsl
scas
push
sub
add
dec
loope
or
push
add
mov
and
sbb
inc
aaa
insb
ret
pop
sahf
pop
pop
mov
in
fstl
add
das
gs
mov
push
and
call
or
cmp
pop
hlt
and
inc
jnp
js
xchg
loope,pn
cltd
xor
add
dec
push
push
aam
mov
aad
jno
repnz
xchg
repz
cld
adc
pop
dec
lds
mov
dec
in
repz
and
inc
mov
jns
mov
bound
cmpsl
ds
les
xlat
lds
loop
jae
jecxz
pop
xchg
add
scas
out
rol
imul
or
cmpsb
xor
loop
nop
mov
incl
adc
sbb
mov
adc
loope
imul
mov
push
dec
adc
jg
cli
inc
or
icebp
mov
pop
sbb
pop
es
sti
jmp
add
jecxz
data16
xor
pushf
pop
xor
mov
pop
jno
leave
enter
mov
xorl
stos
push
rcrl
cmpsl
scas
mov
out
inc
dec
sub
lods
das
xor
lock
jbe
pop
jo
add
add
ljmp
in
fdivp
sahf
das
push
imul
cmp
fsts
fcmovb
aad
xor
mov
mov
add
loopne
cwtl
inc
popf
pop
addr16
jo
lods
pop
ja
mov
roll
cld
and
dec
loope
jl
loopne
inc
xchg
and
shl
xor
dec
xchg
repz
mov
lea
ja
int
cmpsb
addr16
stc
and
or
arpl
mov
hlt
push
pop
add
push
bound
int3
nop
cwtl
jl
movsb
xor
mov
add
push
lret
and
jo
fnstsw
ret
push
jg
xchg
push
clc
ss
outsl
xorl
iret
cmpsl
int
movsb
dec
jg
xor
lods
xchg
xchg
movsl
ss
sub
lea
adc
cwtl
aaa
mov
pop
negb
loopne
xchg
mov
aaa
repz
inc
dec
sbb
popa
stos
shll
add
mov
sbb
int3
push
lsl
hlt
pusha
jne
xchg
andb
mov
jbe
xchg
lds
xor
jmp
adc
iret
in
pop
xor
pusha
out
popf
lret
icebp
adc
sub
add
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
sub
shll
sub
adc
jb
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
jb
aaa
sbb
add
imul
lcall
pusha
jle
or
jae
rolb
mov
in
int3
inc
into
sbb
cmc
push
and
xor
aas
addl
.byte
