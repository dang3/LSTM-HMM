push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
jmp
ret
cld
sub
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
sub
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
shlb
add
sub
add
cmp
add
fsubl
add
adc
add
mov
and
add
and
add
and
add
add
sbb
add
push
and
add
add
cld
and
add
and
add
add
shlb
add
call
and
add
add
add
add
mov
add
lcall
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
ds
add
and
add
add
add
add
mov
add
add
add
and
add
and
add
and
add
add
sbb
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
sbb
add
push
and
add
add
cld
and
add
and
add
add
shlb
add
call
and
add
add
add
add
mov
add
lcall
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
ds
add
and
add
add
add
add
mov
add
add
add
popa
je
inc
imul
jns
add
movsl
add
je
gs
imul
add
gs
outsl
jbe
inc
imul
jns
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
outsl
bound
dec
outsl
arpl
add
add
je
imul
bound
gs
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
push
push
je
imul
inc
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
data16
je
je
dec
popa
outsb
fs
add
repnz
imul
jb
je
arpl
add
call
inc
imul
bound
gs
add
roll
dec
gs
jo
jb
add
aad
inc
imul
add
inc
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
jne
jb
outsb
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
imul
mov
push
push
gs
popa
addr16
outsl
js
add
push
add
addr16
arpl
jo
inc
imul
push
bound
je
add
add
je
popa
arpl
outsl
outsb
inc
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
sbb
inc
jb
addr16
jne
jb
inc
imul
inc
jne
insb
imul
outsl
outsb
add
push
dec
inc
gs
imul
push
jo
arpl
add
gs
popa
insb
insb
outsl
arpl
mov
inc
push
add
inc
jb
add
mov
push
dec
inc
gs
gs
imul
inc
dec
dec
xor
cs
insb
add
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
gs
outsb
fs
jb
popa
jns
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
gs
js
insb
imul
jb
gs
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
jecxz
xchg
mov
mov
stos
fcompl
xchg
mov
icebp
and
and
aam
test
movsl
dec
xchg
sbb
dec
ljmp
sub
scas
adcb
cs
xchg
insl
dec
mov
cmp
insb
and
mov
push
cmp
les
pop
insl
cli
in
test
push
and
inc
pop
mov
es
xor
movsl
dec
xchg
daa
pop
pushl
iret
fwait
sbb
in
dec
add
dec
dec
inc
xchg
out
push
xchg
adc
ljmp
popf
xchg
in
insb
rcl
mov
ficompl
rdtsc
in
adc
shll
jbe
dec
notl
test
js
pop
jmp
fcmovu
add
push
mov
bound
jb
icebp
fisubl
mov
cwtl
sbb
mov
or
scas
repnz
jnp
jb
push
fstpt
jo
adc
mov
lods
lret
aas
lcall
push
rorl
cmpsl
push
mov
out
out
insl
push
mov
in
or
cld
or
or
aam
dec
xor
movsb
scas
std
pop
addr16
mov
and
aaa
loop
mov
lret
enter
inc
or
sub
ficoms
out
imul
loopne
sub
or
mov
mov
loop
mov
ljmp
xor
mov
and
sub
xchg
mov
outsl
add
test
imull
test
adc
stos
jge
lahf
adcl
outsl
jbe
or
out
xchg
dec
cmc
mov
lds
int3
es
repnz
dec
sub
mov
out
popf
insl
ss
or
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jp
stos
stos
lods
add
test
mov
mov
mov
ret
lret
lret
into
int3
int3
rcl
in
rcl
shl
rcl
shl
into
int
hlt
enter
mov
in
mov
mov
lods
stos
lods
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
out
lret
rcl
sar
fcom
std
fcom
xlat
xlat
aad
rcl
iret
dec
into
int
aam
dec
ror
inc
ret
mov
mov
lods
iret
movsl
movsb
movsl
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
mov
lret
call
rcl
aam
aad
xlat
fdivr
fcom
fdivr
aam
aam
int3
int
dec
int3
int3
call
aad
dec
into
int
sarl
mov
scas
scas
std
cmpsb
cmpsb
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
pop
add
push
or
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int
call
rcl
call
xlat
call
xlat
xlat
call
aam
dec
int
dec
lret
lret
int
inc
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
ds
push
sbb
push
sub
sbb
xor
aaa
cmp
cmp
and
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
enter
ror
call
aad
call
aam
call
ror
dec
enter
inc
ret
mov
mov
ljmp
mov
sahf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jge
jge
jge
jno
jo
bound
mov
cmp
cmp
mov
outsl
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
leave
lret
dec
lret
enter
ret
ret
ret
mov
mov
scas
lods
lods
jmp
fwait
call
xchg
xchg
cwtl
cwtl
cltd
lcall
cmp
or
add
add
add
add
add
add
add
add
add
add
add
outsl
jo
add
pop
or
jl
nop
fcoms
cmp
jp
idivb
jl
outsb
outsb
outsl
out
push
data16
ret
jge
jp
js
arpl
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
xchg
xchg
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
js
js
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
sahf
in
mov
mov
addl
mov
mov
jg
jno
jo
jae
jae
jle
jle
test
xchg
data16
cmp
es
jg
jge
fwait
lcall
stos
test
lods
sti
lods
lods
stos
lods
lods
lods
stos
stos
stos
std
movsb
movsl
mov
xchg
xchg
xchg
incl
jg
jp
jns
jnp
jns
mov
xchg
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
or
dec
imul
test
xchg
leave
lcall
out
fwait
lcall
mov
mov
mov
mov
mov
cltd
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
scas
cmpsb
lods
add
pop
adc
test
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
xchg
pushf
popf
popf
std
movsl
mov
mov
in
xchg
xchg
nop
in
test
jne
push
or
inc
or
inc
sub
daa
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
nop
call
lahf
lahf
jmp
test
pushl
movsl
scas
mov
xchg
test
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
popf
xchg
pushf
incl
mov
call
xchg
nop
xchg
xchg
xchg
pushf
sahf
sahf
movsb
movsb
mov
movsl
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
je
mov
jg
test
mov
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
cmpsb
mov
mov
mov
stos
lods
lods
mov
mov
add
mov
pop
pop
adc
mov
lcall
lea
xchg
xchg
xchg
call
xchg
xchg
call
fwait
lcall
sahf
sahf
movsb
movsl
mov
stc
cwtl
lcall
mov
xchg
aad
xchg
fwait
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
je
lcall
jmp
jl
mov
jnp
mov
je
mov
outsb
ljmp
adc
lods
or
stos
or
pushl
mov
mov
pushf
movsl
mov
movsb
add
mov
add
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
sahf
popf
lcall
popf
sahf
lcall
xchg
xchg
decl
cwtl
xchg
call
xchg
lcall
fwait
sahf
stc
sahf
xchg
popf
cld
sahf
mov
xchg
imul
xchg
dec
jp
fwait
cmp
push
pushf
pop
imul
mov
adc
test
adc
lods
pcmpgtw
scas
adc
mov
imul
adc
imul
inc
cmp
cltd
scas
mov
lods
scas
scas
movsb
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
mov
jmp
mov
decl
mov
mov
xchg
xchg
jbe
lcall
xchg
dec
jp
xchg
jno,pt
xchg
sub
popa
call
or
xchg
push
pop
call
add
lahf
pop
pop
ljmp
sbb
pushl
push
outsl
pushl
push
jb
mov
and
rcrl
mov
xchg
scas
mov
scas
scas
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
pushf
popf
pushf
jmp
cmpsb
cmpsb
ljmp
stos
test
cmpsb
test
lcall
orb
mov
decl
decl
adc
pop
incl
add
xchg
push
decl
add
xchg
add
cltd
add
lahf
add
or
mov
outsl
pushl
sub
mov
sub
inc
sub
jle
xor
inc
inc
mov
lea
cld
mov
mov
movsl
movsl
movsl
dec
mov
movsb
movsl
add
push
push
adc
test
mov
mov
mov
stos
ljmp
lods
pushl
scas
lods
jmp
mov
xchg
popa
incl
or
incl
add
addl
incl
add
mov
push
decl
add
xchg
add
fwait
add
lahf
add
add
ljmp
sub
cmp
dec
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
cltd
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
adc
mov
push
incl
add
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
jo
ret
dec
inc
mov
into
inc
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fisttpl
fisttpll
ficoml
call
test
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
jl
popf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
sbb
mov
pop
decl
push
decl
add
xchg
add
popf
add
mov
add
test
push
fs
es
int
nop
call
push
xchg
call
push
cltd
fistl
fstpl
ficomps
jmp
pop
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsl
jne
lahf
sahf
or
xchg
xchg
cwtl
add
adc
jns
lahf
fwait
sahf
jmp
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
mov
decl
and
xchg
and
xchg
and
xchg
sbb
nop
or
nop
add
xchg
add
cltd
add
mov
add
stos
add
mov
data16
mov
xor
jmp
arpl
in
cmpsl
jmp
cmpsb
call
imul
fildl
ret
mov
test
mov
lahf
lahf
add
inc
aas
adc
jb
fwait
xchg
cltd
call
mov
scas
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
das
outsl
lcall
daa
push
call
add
lcall
jmp
add
mov
pushl
adc
roll
fsubrl
jmp
jo
jmp
outsl
stos
jmp
jo
call
jne
in
je
in
jbe
out
jne
in
je
jmp
mov
mov
test
lcall
sahf
add
add
insb
outsb
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
scas
lcall
outsl
lcall
cmp
xor
cltd
sbb
pop
call
add
mov
add
mov
popa
pushl
add
enter
fsts
jmp
ja
jmp
jle
in
jg
out
cmpb
icebp
test
push
cmpl
mov
inc
mov
test
daa
sahf
lahf
mov
add
add
add
pusha
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
mov
lcall
cmp
inc
jge
movsl
inc
jg
movsl
cmp
lcall
lcall
pop
ljmp
add
add
add
les
push
fisubs
ljmp
out
mov
push
pop
push
pop
push
xchg
xchg
stc
xchg
stc
pop
out
mov
inc
ret
clc
lods
lods
stos
mov
pushf
popf
xor
pushf
sahf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
inc
rol
ret
inc
inc
mov
mov
jge
lcall
cmp
movsb
xor
push
pusha
lcall
add
test
pusha
ljmp
arpl
mov
add
movl
mov
out
mov
out
xchg
ret
push
fwait
enter
push
fwait
push
lcall
negl
cli
sahf
into
cli
cltd
lret
push
xchg
ret
mov
dec
enter
mov
lahf
sahf
lahf
aas
nop
popl
lcall
add
add
cs
cmp
dec
jecxz
pusha
call
mov
mov
mov
mov
inc
leave
inc
mov
mov
ljmp
xchg
movsl
sub
cltd
or
add
movsb
add
add
mov
mov
add
enter
rorl
je
loopne
xchg
out
mov
push
movsb
into
push
movsb
int
clc
cmpsl
into
cli
test
into
cld
cmpsl
into
cld
stos
sar
std
stos
sar
cld
test
push
sahf
jmp
mov
int3
std
mov
mov
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
add
sub
or
bound
pop
xlat
je
jo
mov
rol
rol
mov
ret
ret
inc
vpaddd
leave
inc
ret
mov
cmpsb
jmp
push
mov
scas
dec
test
mov
add
jmp
pushl
inc
add
into
add
fadds
jb
fists
in
pop
test
negb
sar
sti
scas
aam
cli
mov
sti
scas
sar
mov
mov
mov
cld
mov
mov
std
mov
push
cmpsb
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
ss
jo
cwtl
cltd
lcall
fsubr
aam
xlat
test
int
dec
lret
lret
lret
leave
dec
lret
lret
inc
enter
lahf
scas
jmp
push
mov
stos
jge,pt
lahf
punpckldq
mov
add
mov
arpl
mov
add
iret
add
fadds
jae
loopne
jne
ljmp
cld
lods
aam
std
mov
fcos
cld
mov
fdivr
mov
fdivr
mov
fcos
std
mov
xlat
stc
mov
jmp
mov
call
lret
into
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
pop
out
call
test
in
leave
fstp
fucom
fcmovu
fsqrt
aam
xlat
std
int
into
mov
imul
jmp
add
mov
mov
add
lret
add
aam
jno
fldl
jbe
in
jbe
out
xor
cli
mov
loope
inc
inc
loope
inc
inc
fdivrp
dec
fdivrp
dec
fdivrp
std
enter
enter
lret
sti
mov
enter
sar
mov
mov
xchg
adc
add
add
std
incb
incb
std
std
add
cmc
testb
in
in
pop
jmp
in
sub
in
in
dec
jmp
jmp
jmp
aad
jmp
mov
xchg
cmpsl
cmp
movsl
adc
jmp
add
mov
arpl
mov
add
int
outsl
call
add
fiadds
jbe
jmp
inc
popf
cld
mov
loop
dec
loop
dec
in
dec
in
std
into
jecxz
std
into
loop
std
int3
loopne
std
shl
dec
loop
std
shl
std
shl
cld
fcos
in
mov
fdivr
out
cmpsb
cmpsl
cmpsb
mov
xchg
xchg
add
add
add
incb
std
std
add
stc
testb
repz
add
repnz
in
repnz
out
repnz
cmp
out
in
pop
loop
lds
xchg
sti
lahf
es
movsb
add
add
mov
inc
add
movl
jo
fildl
je
in
jnp
in
movd
negl
sti
mov
cld
shl
shl
std
shr
shr
std
shl
call
call
fsubr
std
fucompp
std
fucomi
cld
shl
push
ret
aam
in
lret
rep
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
clc
add
cli
stc
add
cmc
hlt
or
aam
sarb
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
faddl
jne
out
ja
in
sbb
push
jne
cli
std
xlat
call
std
fucompp
fucomp
fucomi
fsubr
jmp
jmp
jmp
in
fsubrp
aam
push
ret
aad
out
rcl
sar
lods
stos
lods
lods
xchg
xchg
xchg
outsb
outsb
jo
xchg
xchg
xchg
add
loope
add
enter
mov
cltd
repnz
jmp
add
mov
add
int
insl
call
add
filds
jae
jmp
sub
shl
fsubrp
std
fucomi
fldpi
fldpi
call
call
cld
shl
sti
shl
sti
shl
clc
int
push
int3
fdivrp
test
lret
jmp
rcr
call
fcom
sti
mov
mov
lcall
add
add
add
fcom
add
enter
rol
scas
mov
jmp
add
mov
mov
add
iret
add
add
loop
js
call
xor
cld
enter
lret
cld
stc
rcr
idivl
push
mov
into
out
mov
int
ljmp
std
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
int3
lret
add
mov
loopne
xor
jmp
add
mov
gs
mov
add
dec
pop
jo
rorl
fisttpl
jns
loope
cmp
dec
xchg
jmp
scas
lret
mov
out
enter
ret
cld
fbstp
mov
leave
ljmp
iret
rcl
shl
xlat
fcmovnb
out
loopne
in
in
test
out
out
popf
jmp
lret
lret
push
lods
lods
stos
adc
test
cmpsb
add
rolb
ret
ret
ret
mov
lods
aam
dec
jg
pushf
sbb
cmpsb
push
imul
and
ja
mov
inc
xchg
ret
stc
lret
gs
test
mov
shll
rcl
ror
aad
int
ror
lret
mov
iret
shll
xlat
rcl
jg
fcmovnu
jb
loopne
gs
jecxz
call
out
in
xor
div
mulb
repnz
repnz
fcmovnu
or
mov
into
add
add
add
rolb
roll
mov
test
fwait
cmc
mov
je
ljmp
mov
sarb
mov
les
rcrb
lret
jp
into
iret
addr16
iret
push
iret
rcl
dec
fcom
inc
aam
aam
aam
xlat
daa
fcomp
ficompl
fchs
ficoms
fsubp
loope
loope
in
out
jmp
add
cld
cmc
add
sti
add
incb
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
leave
xor
int
daa
int3
ror
and
rcrl
rcl
rcll
iret
aam
rcr
aam
rcr
add
add
add
jecxz
add
in
ljmp
std
incb
mov
mov
add
rol
les
mov
mov
mov
push
ret
or
leave
movl
int3
lret
add
aad
add
aad
rcr
aam
aad
aam
aad
add
fsub
add
fiaddl
loope
loopne
in
out
repnz
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
mov
mov
mov
ja
test
dec
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
ror
jmp
rcl
cmc
rcl
sar
into
iret
sar
int
int
int3
lret
lret
hlt
mov
mov
iret
stos
stos
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
mov
into
xlat
aad
call
xlat
call
rcl
dec
int
dec
lret
lret
mov
mov
stos
lods
lods
icebp
xchg
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
je
fs
dec
inc
dec
cmp
sub
sub
ss
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
mov
ret
lret
call
rcl
call
rcl
dec
lret
lret
rol
pushl
test
popf
sahf
lahf
xchg
xchg
xchg
jmp
outsl
jno
push
pop
adc
xor
add
add
add
add
addb
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
imul
cmp
cmp
jo
outsl
adc
mov
fstpt
mov
ret
mov
mov
mov
cmpsl
cmpsl
test
call
xchg
xchg
fwait
cltd
lcall
dec
dec
dec
movups
add
add
add
add
add
pop
fwait
lcall
popf
xchg
cltd
fcoml
addb
jl
jl
jp
jns
jnp
jnp
jns
jns
je
je
push
push
push
cmp
aaa
popf
sahf
sahf
mov
lods
lods
rep
scas
scas
sti
scas
scas
scas
std
test
test
sahf
pushf
pushf
call
xchg
call
mov
lods
jmp
scas
lods
leave
cmpsb
movsb
movsb
cltd
je
jb
adc
adc
add
add
add
add
outsl
insl
outsl
pop
xchg
mov
sahf
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cltd
lcall
lea
xchg
xchg
xchg
lcall
movsb
test
mov
scas
std
mov
scas
mov
mov
mov
cmpsl
movsb
cmpsl
pop
addb
add
add
add
pop
or
lods
mov
cmpsl
mov
mov
mov
call
popf
mov
negl
jle
stos
push
push
push
jo
push
pop
outsl
insl
outsb
insl
xchg
subl
nop
mov
lcall
mov
mov
xchg
mov
mov
mov
mov
mov
out
lods
stos
insl
stos
test
add
add
add
popa
pop
popa
or
mov
in
mov
xchg
call
xchg
xchg
call
lcall
popf
lahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
insb
test
xchg
pop
jg
sahf
dec
jnp
mov
aaa
jbe
mov
jb
scas
pop
outsb
ljmp
sbb
pop
mov
mov
scas
scas
jle
mov
add
add
add
pusha
popa
popa
or
mov
in
movsb
test
xchg
cwtl
cwtl
lcall
mov
mov
decl
addb
xchg
jb
cld
xchg
pop
cmp
dec
jp
nop
cmp
nop
sub
xchg
sbb
cltd
adc
mov
push
ljmp
pushl
sbb
mov
and
mov
stos
mov
lods
scas
scas
xchg
sahf
sahf
sahf
adc
add
add
popa
pop
pop
or
stos
mov
stos
mov
mov
ljmp
test
cwtl
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
fwait
add
cmpsl
or
mov
jb
mov
sub
jg
leave
xor
dec
pop
xchg
inc
test
imull
cmpsl
cmpsl
sbb
add
add
pop
pusha
pusha
or
cmpsb
test
test
movsl
ljmp
mov
pushl
mov
jmp
inc
jo
mov
pop
decl
or
xchg
decl
add
xchg
add
mov
add
mov
insb
inc
cmp
dec
inc
mov
rolb
call
inc
nop
call
bound
stc
mov
mov
movsl
movsl
mov
add
add
add
popa
or
mov
ljmp
mov
pushl
mov
ljmp
push
jnp
push
popa
call
adc
pop
decl
add
sahf
add
add
scas
add
jne
rorb
xlat
pop
lcall
pop
mov
jmp
pop
mov
dec
cmpsl
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jle
jl
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
cs
sub
xchg
and
xchg
adc
xchg
add
sahf
add
cmpsl
add
mov
arpl
mov
xor
jmp
insb
test
in
stos
ljmp
in
jno
jmp
cmpsl
mov
shrl
addl
pop
outsl
outsb
push
mov
cwtl
ljmp
mov
mov
mov
je
lcall
cmp
popf
sub
cwtl
or
lcall
pop
ljmp
add
ret
or
xchg
jmp
jns
jmp
mov
push
xchg
push
xchg
fisubrl
mov
push
cltd
cltd
fwait
add
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
popf
jmp
inc
jg
mov
push
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
push
cwtl
cltd
clc
fwait
lret
fwait
lret
push
xchg
jmp
stos
inc
mov
stos
popa
mov
add
add
xor
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
inc
ret
mov
test
cmpsl
push
mov
stos
dec
cmp
pop
insb
lcall
add
mov
fs
mov
add
and
push
mov
sar
cli
test
sar
sti
stos
sar
lods
sar
cli
cmpsb
int
out
leave
dec
rol
stos
stos
stos
jne
pushf
pushf
or
add
add
dec
dec
dec
aaa
jae
jb
test
into
int3
out
iret
int3
cmc
leave
lret
leave
lret
enter
movsb
mov
test
inc
jle
mov
add
mov
arpl
roll
dec
add
fildl
je
jmp
xchg
cld
mov
cld
mov
fcos
cld
mov
fdivr
mov
sar
ljmp
repz
scas
mov
add
add
add
add
pop
or
aad
dec
jecxz
loope
fcmovnb
fcmovu
xlat
xlat
out
mov
addr16
cmpsl
sub
pusha
ljmp
add
lret
call
add
or
icebp
dec
mov
sti
inc
loopne
inc
dec
fdivrp
dec
dec
sti
out
mov
lret
divb
pushf
sbb
add
add
incb
std
std
incb
jmp
or
in
out
sbb
in
in
xor
loopne
jecxz
lds
mov
mov
add
mov
inc
add
into
add
fldl
jne
ljmp
cld
ret
cld
shl
std
shl
std
shl
shl
xlat
call
cld
shl
push
enter
lret
sar
mov
mov
add
std
incb
incb
cld
cld
std
pop
aad
mov
pop
mov
popf
or
test
add
add
rolb
jno
fiadds
jbe
out
and
cld
shl
std
fldl2t
xlat
call
sti
xlat
call
cld
aad
push
xlat
jmp
iret
aad
mov
sahf
sahf
das
add
add
into
into
int
mov
bound
lods
add
mov
add
aam
jb
loope
jns
out
das
nop
clc
lcall
clc
lret
cmc
repz
icebp
rcl
out
sar
in
aad
out
shl
jmp
shl
jecxz
fsubr
leave
mov
das
incl
aad
push
mov
je
push
gs
mov
insl
inc
pop
jno
lret
and
cs
loopne
pushf
clc
jecxz
mov
out
in
leave
jmp
fidivrs
lret
leave
sarb
jecxz
fistpl
in
jmp
rorl
mov
add
stos
stos
lods
add
xchg
movsb
les
xchg
mov
xchg
fidivrl
andb
int
mov
shlb
enter
int
ror
into
pop
rcl
rorl
cmp
loopne
das
jecxz
frstor
loop
repnz
in
in
or
std
std
std
add
add
add
std
std
add
mov
outsb
scas
mov
lods
data16
mov
mov
mov
shrl
leave
leave
and
aam
pop
rol
adc
rcl
or
loope
or
int
add
std
incb
std
std
add
add
add
int3
int3
pextrw
or
into
int3
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
ret
mov
xchg
leave
leave
leave
mov
ret
ret
mov
scas
scas
insb
lods
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aad
aad
rcl
sar
iret
int
std
mov
mov
cmpsl
cmpsl
test
cmpb
push
push
push
add
add
add
add
add
add
add
add
jb
jb
push
dec
inc
das
das
sub
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int
aad
sar
int
iret
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jne
je
test
adc
outsb
outsl
ret
bound
insl
insl
outsb
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
xchg
lds
jno
es
add
add
add
je
jb
popf
xchg
fwait
mov
test
mov
xchg
or
test
push
push
push
inc
mov
pushf
into
mov
lahf
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsl
test
cld
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
cwtl
cwtl
lcall
push
push
imul
jge
lea
xchg
testl
mov
pushl
jno
mov
lods
lods
push
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
cltd
lcall
fwait
lcall
mov
loope
je
out
nop
fs
push
jnp
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
int
add
add
xchg
pop
scas
movsb
lods
test
popf
pushf
popf
jmp
movsb
movsb
call
push
decl
inc
jb
mov
push
mov
pop
call
or
mov
outsb
mov
and
jp
les
test
rcrb
subl
jae
push
mov
movsb
test
ljmp
mov
lcall
sub
mov
pop
decl
add
add
add
mov
adc
ret
dec
aas
mov
roll
call
inc
mov
aad
xchg
dec
cwtl
mov
mov
mov
movsb
mov
add
push
xchg
xchg
test
mov
lods
pushl
mov
movsb
call
push
arpl
mov
pop
decl
add
mov
add
mov
push
xchg
fistpl
loopne
mov
jmp
cmpsl
call
lcall
cmpsl
test
pop
add
add
arpl
adc
pushf
lcall
mov
mov
scas
lcall
xor
cwtl
and
xchg
or
lahf
add
add
mov
xor
call
jp
push
jle
out
jle
fistpl
mov
mov
add
add
dec
adc
push
cmp
mov
ret
ret
mov
bound
jmp
add
ljmp
add
ret
pop
insb
fimull
in
lea
notb
enter
jmp
cmpsl
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
gs
add
vmwrite
jmp
scas
push
cmpsl
into
clc
stos
sar
cli
lods
sar
sti
scas
sar
cld
lods
sar
in
mov
inc
mov
movsl
ds
std
incb
xor
outsl
jno
mov
mov
rcl
aam
rcl
aam
rcl
shr
leave
leave
lret
cli
mov
mov
jmp
arpl
ret
call
add
out
xchg
clc
mov
mov
cld
ret
cld
rcr
cld
rcr
icebp
mov
ret
cmpsl
test
addl
stos
add
in
in
or
out
call
outsb
fcomp
fisubl
mov
add
mov
add
fiadds
out
cmp
cld
int
dec
in
shl
call
in
aam
push
enter
enter
scas
scas
popa
jg
addb
add
incb
incl
lret
lret
shrb
sahf
sbb
stos
add
mov
add
loope
jns
cmc
push
movsl
std
loopne
xlat
jmp
cld
aad
std
aad
cli
shl
push
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
fs
mov
push
jne
fstpl
cmp
insb
lods
cld
lock
shl
call
mov
shl
out
aam
call
scas
ret
vsqrtps
add
add
rol
mov
lods
xchg
and
push
mov
shll
lret
mov
fdivrs
lret
adc
int3
outsl
fxch
into
pop
fst
dec
in
loope
out
out
in
in
in
sbb
rol
add
mov
lods
arpl
lods
mov
les
ret
and
ret
int
fisttpll
int
int
aam
push
std
incl
jg
addl
stos
std
add
rol
incb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
repz
mov
inc
out
or
popf
arpl
ret
sbb
pop
inc
jmp
inc
inc
imull
int
aam
or
pop
mov
inc
gs
lea
jne
popf
xchg
cmc
mov
xor
adc
and
jne
mov
pop
pop
mov
ret
sub
int3
imul
sti
les
dec
xchg
pop
pop
lods
add
cmp
int3
aas
fs
and
hlt
aaa
faddp
int3
adc
inc
ret
es
sub
cwtl
stos
push
gs
dec
sbb
inc
fs
cmp
cltd
push
sbb
ret
mov
rcrl
mov
inc
popa
mov
faddl
push
jmp
movsl
pop
pop
or
clc
push
fs
jp
push
push
enter
cmp
sub
mov
insl
xor
rcrb
inc
hlt
mul
add
mov
vmaxsd
repz
je
cld
xlat
jecxz
or
mov
inc
out
pop
lcall
cmp
nop
xchg
or
shlb
cwtl
xchg
bswap
call
jg
xchg
mov
and
mov
xor
orl
sti
jl
cmp
or
lds
call
mov
das
rol
test
lahf
cmp
push
mov
imul
inc
fcompl
lcall
ret
faddl
push
ja
inc
repz
jp
add
fistpl
dec
adc
lds
rcrb
loop
loop
outsl
xor
into
xchg
xchg
lds
jge
rcll
movsl
xchg
ret
and
mov
das
xor
aas
arpl
and
or
call
stc
and
mov
shlb
clc
and
cmp
mov
mov
mov
movsl
int3
nop
gs
add
pop
aas
pop
insb
insb
jae
push
or
lods
and
out
jmp
pop
in
mov
push
cmp
arpl
imul
mov
sahf
and
fadds
jmp
pop
icebp
lods
inc
jg
push
clc
pop
lea
int
in
popa
inc
outsb
dec
jmp
je
lcall
popf
cmp
nop
pop
push
pop
pop
mov
mov
nop
add
fidivs
mov
cli
cmpl
aaa
jns
sub
bound
ljmp
fwait
mov
mov
repnz
stos
leave
movsb
fs
cmc
and
sbb
inc
sbb
jbe
inc
inc
movsb
js
cmpsb
xor
fs
stos
jno
scas
in
int
push
xorl
or
add
or
out
fbstp
int3
outsl
xchg
test
dec
xchg
mov
mov
es
and
lcall
cmp
sbb
std
sub
lea
icebp
mov
cmp
stos
addr16
or
pop
cli
fs
ficoms
and
nop
imul
fnstsw
pop
lds
enter
pop
fldt
or
sub
stos
sbb
daa
lcall
mov
and
loope
push
in
in
cmp
lds
xor
mov
pop
das
imul
jno
mov
stc
enter
push
insb
cltd
imul
jo
or
and
sub
lret
pop
sub
mov
stc
cmpsl
out
xor
inc
bound
adc
inc
out
shll
sub
cmp
dec
popa
cmpsb
sub
and
jge
jmp
rcll
fcom
dec
repz
jo
inc
inc
add
and
xchg
inc
cld
int3
lock
in
fistl
ss
cmpsl
imul
fisubl
push
mov
insl
cwtl
jo
xor
inc
lds
push
orl
jp
mov
or
movsl
cmc
pusha
mov
test
sahf
popa
insb
jmp
nop
popl
pop
mov
adcb
jno
jne
in
inc
adc
and
push
push
pop
mov
loope
inc
mov
mulb
repnz
js
inc
lret
jno
inc
mov
mov
inc
push
in
lea
sti
adc
addb
imul
sub
pop
mov
mov
cmp
fcoms
cltd
in
jae
inc
and
daa
fwait
push
add
jge
mov
cli
mov
sbb
cmp
mov
mov
inc
jge
xor
movsb
mov
push
xor
fcmovnb
xor
inc
xor
in
cwtl
mov
jmp
mov
dec
adc
mov
std
inc
test
mov
and
into
or
push
lahf
shrl
pop
xchg
je
ja
or
js
ret
je
sub
jno
xlat
out
lret
lret
and
jns
mov
idivb
xor
stos
xor
sbb
mov
inc
pop
ljmp
xor
sub
lods
xor
mov
fbstp
or
movsb
push
popf
pop
decl
push
add
sbb
pusha
cmp
iret
fwait
mov
fmuls
out
daa
lret
push
jb
sub
sub
mov
aas
xchg
rorl
dec
dec
jg
and
iret
pop
push
daa
mov
cwtl
lods
push
and
xchg
fs
outsl
cli
cmp
in
mov
sbb
cltd
mov
dec
out
cmp
cmp
mov
stc
or
fs
jno
mov
dec
aas
aas
jae
hlt
scas
andl
ljmp
test
icebp
arpl
jecxz
jl
dec
ffree
push
into
add
ret
test
ds
into
xor
cmp
push
jle
push
xor
stc
nop
sub
mov
add
or
popa
pusha
test
push
loopne
push
popa
dec
loopne
push
cmc
dec
imul
imul
insb
sub
add
jge
subl
sti
xchg
adc
xor
cli
xor
push
call
mov
fldenv
or
cltd
xor
sub
sbb
mov
push
jg
cmp
rol
push
add
repz
and
adc
dec
xchg
cld
jb
mov
rolb
xchg
pop
and
inc
mov
mov
xchg
jbe
leave
icebp
adc
mov
pushl
jnp
cld
inc
int3
fs
out
pop
adc
pop
mov
or
dec
adc
or
gs
pause
jp
cmp
sbb
sub
es
lods
or
jne
es
enter
sub
stc
aam
dec
out
cmc
adcb
mov
rorb
jp
mov
adc
inc
out
fidivl
mov
pop
mov
frstpm(287
jl
xchg
push
lods
add
sbb
push
jmp
add
jo
mov
loopne
and
stos
xor
std
xchg
popa
mov
imul
sbb
dec
add
or
stc
fnstsw
push
daa
in
or
imul
lock
jo
jge
sbb
outsb
stc
aas
mov
jnp
fistpll
push
cmc
inc
imul
sub
pusha
push
xor
add
daa
outsl
push
and
cmp
popa
xor
jne
push
inc
int3
stos
negl
fstpl
xor
je
ss
xchg
dec
out
or
cmp
insl
add
pop
jae
lea
mov
insb
scas
xchg
sub
lea
inc
xor
pop
adc
xchg
in
gs
sbb
add
sub
and
jg
aas
pop
mov
pop
hlt
scas
repnz
and
jnp
add
sbb
cltd
xor
mov
dec
test
mov
insb
cld
fdivl
sbb
cli
xchg
ret
jo
test
dec
jg
mov
aam
mov
insl
mov
ret
hlt
shlb
lret
adc
xchg
jmp
or
lret
lret
bound
dec
mov
ficomps
dec
jnp
scas
outsb
fidivs
dec
cltd
xor
sbb
imul
mov
test
jbe
sub
sbb
or
mov
lods
scas
cli
xchg
xlat
into
es
mov
inc
sub
jp
mov
in
test
inc
js
aaa
into
and
push
in
clc
sub
jg
sarl
push
xchg
push
cmp
inc
aaa
out
xchg
ret
add
cmp
pop
push
mov
cld
cmpsb
jp
fstpl
clc
cmpsb
mov
in
inc
xchg
xor
and
arpl
mov
xchg
xchg
outsb
int
ret
cli
xor
add
push
mov
jge
pop
cmpsl
mov
jle
inc
pop
cmc
je
xchg
sub
adc
aam
fnsave
lret
inc
fstps
mov
test
je
jp
nop
nop
daa
add
orb
das
pop
mov
shll
decb
dec
cmp
jae
repz
inc
fmull
in
ret
jo
cmpsl
ds
adcl
pop
adc
outsb
test
sub
sub
or
xchg
sub
into
sbbb
jge
adc
loope
outsb
roll
rorb
das
add
jg
hlt
fbstp
lcall
cld
sub
data16
fwait
lahf
les
dec
in
push
shrb
cmp
adc
ret
ja
push
loopne
arpl
xchg
std
mov
decb
jnp
mov
inc
and
stos
inc
xor
push
call
push
adc
js
shll
hlt
mov
pop
mov
xsha256
cmpsb
xchg
push
je
repz
inc
js
cmp
sbb
dec
cwtl
inc
fnstsw
push
adcb
jle
pop
jo
mov
inc
xchg
mov
add
mov
and
pop
hlt
mov
test
sub
pop
mov
xchg
jg
imul
cmp
jecxz
not
jp
cmc
pop
xor
mov
test
sbb
jae
testb
iret
sbbl
and
cmp
aam
std
xchg
stc
cmc
jl
out
ja
int
xor
jns
add
cmp
push
sub
insl
sarb
fcomps
aam
lret
lds
clc
fdivs
mov
stc
fwait
xor
dec
out
test
sub
pop
lahf
enter
cli
xchg
sub
ds
les
add
mov
mov
fnstcw
pop
stos
in
pop
repnz
pop
js
sahf
xor
dec
adc
mov
movsl
jmp
pop
mov
add
mov
inc
fnstcw
fcompl
rclb
pop
repnz
xor
sub
jmp
je
iret
repnz
xchg
shrb
les
mov
xchg
sub
dec
push
mov
pusha
xchg
sub
add
stos
jecxz
enter
stc
arpl
mov
sbb
pop
mov
out
pop
ljmp
xor
dec
loop
push
rclb
adc
pop
addr16
negb
xor
in
std
push
aaa
cmp
pop
hlt
fsubrs
rorl
mov
in
inc
xor
xor
stc
out
cmp
inc
mov
imul
es
push
inc
fistl
sbb
cld
pop
icebp
sub
sub
pop
push
insb
and
sti
xchg
xor
push
montmul
cmpsb
inc
stc
cli
xchg
das
imul
aaa
pop
jge
bound
cs
or
out
cmc
mov
ja
daa
push
or
cmp
and
dec
shlb
movd
jns
mov
mov
hlt
mov
adc
adc
adc
sbb
nop
cmp
lods
imul
mov
pop
sar
or
out
int
or
pop
bnd
xsha256
cmpsb
aad
pushf
xor
cs
data16
shll
xor
push
lods
vhaddpd
sti
out
or
xchg
ret
stc
inc
fucomi
push
mov
sbb
sub
jne
sahf
inc
xlat
syscall
movsl
cmp
xor
mov
fadd
pop
adc
icebp
mov
xlat
push
movsl
enter
or
fbstp
movsl
mov
mov
loopne
lret
bound
mov
pop
scas
stos
xor
inc
fcoms
jae,pt
fldenvs
jne
in
jbe
fdivp
movsb
cmp
add
imul
cltd
cwtl
das
mov
push
lds
sub
ja
dec
dec
fistpll
cli
stc
sbb
jmp
fldt
mov
jne
shll
mov
repz
in
test
jmp
sub
cmp
add
mov
scas
in
lock
loopne
jb
inc
lret
bound
dec
out
add
xor
add
shlb
cwtl
scas
inc
or
les
push
adc
lea
ret
push
scas
inc
inc
sbb
sbb
scas
inc
push
sti
aaa
into
js,pn
daa
push
add
cmp
stos
inc
leave
push
iret
xchg
jp
lods
xchg
mov
jl
es
bound
inc
leave
pusha
ss
in
test
push
dec
cmpsb
xor
out
imul
aam
sub
outsl
pop
repnz
nop
add
mov
xchg
out
shll
and
cmp
lret
dec
loop
sbb
inc
insb
cli
xchg
pop
repz
jecxz
sub
repnz
xor
loope
mov
mov
pop
cltd
mov
pop
stos
ret
insb
add
int3
mov
cmp
dec
mov
shl
push
mov
data16
fsubrs
xchg
into
or
cmpsl
ds
sub
lcall
pop
xlat
xlat
outsb
movmskps
pop
inc
mov
pop
notb
into
shll
addr16
pushf
mov
inc
jecxz
sbbl
movsl
mov
xor
insl
lods
sbb
aas
arpl
fnsave
dec
out
shr
add
in
sub
and
mov
jmp
sahf
xor
jle
clc
mov
dec
pop
cmc
mov
push
ljmp
xchg
sub
loope
enter
xor
or
cs
cld
cmp
test
push
fbstp
dec
lahf
ss
call
push
xor
push
cmpsb
jecxz
addl
jns
mov
fistl
mov
into
jp
sar
out
mov
push
inc
fcomi
aaa
loope
loopne
pop
scas
int3
inc
cvtdq2ps
jp
popf
mov
arpl
or
xor
sub
test
dec
cmpsb
lods
inc
and
xchg
sub
inc
lcall
push
hlt
mov
js
clc
addl
lahf
aas
clc
lcall
add
add
mov
fwait
les
sahf
leave
mov
fs
leave
sbb
mov
ljmp
out
popa
clc
cwtl
pop
sbb
sbb
in
repz
adc
adc
pop
repz
push
pop
sahf
push
xchg
cmovge
push
jmp
outsb
icebp
mov
or
or
les
xchg
xchg
cltd
pop
add
xchg
popf
jl
mov
add
xlat
out
in
fcompl
adc
das
scas
inc
popa
xchg
xchg
lds
es
add
insb
sub
mov
int
out
insl
add
mov
cmp
mov
fdivp
and
test
hlt
mov
mov
sti
rolb
cmpsb
jne
mov
pop
fildll
test
cmp
gs
movsl
jno
mov
lidtl
insb
stos
adcb
lea
xchg
adc
ss
addl
int3
ds
in
mull
mov
cs
std
mov
loopne
test
dec
xlat
push
in
or
repnz
sub
jge
adc
iret
mov
jnp
and
insb
mov
out
dec
sbb
and
movsl
pusha
mov
pop
fisttps
pop
insb
outsl
jg
mov
cmp
cmpsb
jecxz
stc
shl
shrb
mov
addr16
es
and
or
sbb
lcall
clc
pop
adcl
outsb
push
daa
mov
cltd
out
lahf
lret
int3
je
scas
jmp
or
adc
jae
shl
mov
insb
std
inc
testl
cltd
adc
and
pop
push
jnp
mov
es
enter
mov
aas
or
and
lahf
jl
xor
out
jnp
ljmp
into
call
aad
adc
xchg
cmp
daa
cmpsb
cli
sub
bound
or
dec
cs
in
addl
or
sbb
mov
aam
daa
add
pusha
and
sbb
sbb
dec
xchg
iret
or
fcoml
mov
mov
in
sbb
mov
and
xlat
fwait
js
cltd
fldl
testb
lods
push
lock
jne
lret
inc
inc
inc
fcompl
inc
xlat
aas
jle
xlat
jge
imul
sahf
adcb
pop
cmc
mov
adc
movsl
sub
gs
and
imul
cmp
push
push
in
test
pop
pop
addl
lods
xor
cli
xor
cli
fildl
inc
inc
lret
addr16
push
fbstp
inc
fbstp
arpl
push
jae
sub
sbb
ljmpw
imul
xchg
sbb
cmpl
loope
insb
pusha
dec
in
fdivl
sub
out
jle
sub
jb
jnp
inc
imul
jnp
lahf
lods
dec
in
cmpl
lret
int3
lahf
data16
push
out
xor
mov
fldcw
ret
pop
scas
hlt
or
mov
cmp
or
cs
js
jo
cltd
xor
and
lret
jo
jmp
in
mov
xor
jp
xlat
outsb
xchg
mov
leave
sbb
xchg
ljmp
std
sub
or
imul
and
ret
push
movsl
in
mov
insb
add
repnz
loopne
ret
shlb
cmp
jp
sbb
clc
addr16
push
push
and
push
scas
fwait
xor
pop
sbb
xchg
dec
out
cmp
dec
outsl
pop
mov
adc
movb
dec
ret
sbb
jecxz
dec
adc
pop
mov
mov
insb
fs
test
loopne
mov
cld
and
hlt
dec
pop
pop
cmc
pop
outsl
pop
out
nop
jl
out
xor
push
jne
dec
fwait
dec
jecxz
sbb
daa
fisubrl
int3
inc
dec
add
mov
lods
inc
mov
cmp
jbe
cmp
jbe
cs
ljmp
and
push
sarb
xorb
mov
xchg
imul
xchg
sub
inc
loop
xor
mov
mov
lret
filds
ljmp
mov
ljmp
frstor
push
xchg
imul
popa
movsl
dec
jecxz
mov
je
pop
popa
clc
xchg
in
test
sbb
aaa
sub
jae
std
cltd
xor
lock
clc
loop
sbb
test
jb
pop
push
cmc
ds
ja
xor
adc
shl
or
loope
imul
mov
into
xor
add
es
or
xlat
mov
xchg
push
sbb
add
sbb
and
xchg
adc
mov
xchg
sub
xchg
lcall
push
out
xchg
inc
xor
outsl
xchg
push
jmp
cmp
mov
cld
cmp
in
mov
sbb
hlt
fs
orl
dec
loope
cwtl
jp
or
out
pop
popa
enter
add
mov
or
jns
cmpsb
cmp
push
jge
adc
mov
test
sarl
add
cmp
cli
ret
stos
and
mov
dec
loope
rcrl
mov
jecxz
mov
mov
pop
cmc
adc
addr16
jecxz
push
mov
add
scas
sahf
mov
dec
fcomip
sbb
mov
ret
stc
nop
fadd
cmp
lock
imul
adc
lods
push
testb
jne
sbb
hlt
arpl
and
inc
pop
mov
mov
jb
andb
cmp
lods
xlat
lods
stc
dec
loop
das
stc
nop
xchg
dec
push
movsl
imul
lahf
cmpsl
fcoml
scas
call
or
lods
cwtl
repz
xor
mov
mov
mov
cltd
mov
in
add
pop
mov
push
test
clc
stc
into
mov
mov
int
pop
repnz
scas
inc
mov
fnstcw
jmp
les
mov
mov
stc
aam
sbb
or
loope
call
pop
lock
stc
jp
adc
and
out
gs
add
adc
jbe
lods
xor
add
rcrb
jnp
ret
push
dec
loop
in
pop
mov
and
out
fsts
loopne
pushf
xor
out
add
add
jno
ss
xchg
outsl
push
out
les
in
por
imul
cmp
inc
fwait
adc
push
mov
jno
dec
movswl
push
adcl
inc
in
insl
add
push
cmc
mov
mov
stos
or
pusha
divl
add
mov
xchg
xchg
sub
jmp
scas
inc
sbb
enter
jl
mov
sbb
adc
push
mov
push
mov
shll
lods
add
mov
jb
addr16
xchg
in
in
test
pop
outsl
push
mov
ret
les
xchg
xchg
add
lret
adc
add
add
insb
xchg
jnp
pop
and
out
xchg
pop
xsha1
cmpsb
dec
cmp
pop
stos
into
movsl
cmp
push
repz
sub
jmp
pop
scas
mov
clc
mov
pop
inc
fisttpll
mov
ja
dec
ss
pop
icebp
mov
scas
pop
lock
sahf
hlt
pop
out
and
js
movsl
test
out
pop
out
leave
pop
cmp
dec
sbb
cmpsb
dec
fwait
aas
int3
lcall
dec
pop
or
push
popf
cmp
into
pop
push
pop
into
daa
mov
outsb
mov
push
or
cmp
pop
jle
lea
xchg
sub
jl
pop
js
movsb
cmp
cltd
lock
cs
sub
push
movsl
sub
dec
sub
adc
gs
inc
sbb
xor
test
shlb
adc
sbb
mov
lcall
jns
les
sbb
xor
test
lea
daa
mov
dec
mov
rcll
inc
mov
data16
cld
xchg
sbb
aas
inc
fisubs
les
mov
fs
xlat
pop
fsubrl
les
js
fbstp
lcall
arpl
jb
jae
out
push
outsb
add
sub
popf
fwait
stc
sbb
xor
push
sti
xchg
push
mov
mov
jbe
adc
sub
sbb
mov
mov
jno
sub
jb
bound
push
addl
out
pushf
xor
adc
xchg
inc
sub
scas
xor
xchg
pop
adc
aaa
push
mov
sarb
fisttpl
int3
inc
pop
xor
mov
mov
jg
jbe
dec
pop
hlt
ds
gs
es
jns
sbb
clc
arpl
insb
push
aas
loopne
movsl
aaa
scas
inc
imul
xchg
sub
xchg
shrb
dec
add
xlat
mov
mov
sub
repz
es
ds
idiv
nop
sub
fcomps
aad
pop
icebp
mov
pop
inc
fmull
repz
jge
sbb
cli
cmp
insl
sbb
jmp
pusha
in
ss
xorb
push
scas
inc
adc
xor
or
test
loopne
xor
fwait
outsl
imulb
ret
mov
cmp
jge
mov
clc
mov
or
cmp
pop
pop
xor
int
pop
leave
cltd
addr16
xor
test
daa
push
mov
out
jo
adcl
stos
sbb
dec
fistps
add
scas
xor
fistps
test
jg
out
stc
push
push
mov
repnz
iret
and
jb
out
and
cmp
fsubrs
movsb
stos
sti
dec
xchg
push
push
push
enter
push
arpl
stos
outsl
mov
lret
imul
pushf
mov
push
jmp
xchg
rclb
push
adc
das
call
call
hlt
iret
out
mov
dec
gs
dec
fstpl
mov
inc
mov
add
test
iret
mov
orl
sub
mov
and
movsb
stc
test
testl
cmc
into
ret
fadds
das
mov
in
repnz
mov
sti
pop
sub
push
jg
movsb
mov
arpl
lods
mov
xor
imull
and
add
pop
lret
pop
mov
das
pushf
ss
push
jne
push
adc
out
sub
enter
xor
dec
xor
pop
mov
arpl
orb
or
pop
scas
ss
outsb
je
or
out
fwait
lods
inc
or
xchg
cmpsl
and
outsb
lahf
enter
rol
mov
mov
jge
mov
mov
mov
jg
mov
fucomi
orl
sub
ja
es
das
push
push
adc
inc
pop
stc
das
movsb
push
mov
loop
and
inc
xchg
xchg
pop
rcl
push
out
cmp
add
pop
sub
cltd
adcb
rorb
popf
je
adc
cmpsl
ds
loopne
imul
mov
out
inc
enter
in
jle
xor
arpl
aad
inc
out
pop
sahf
mov
gs
out
aas
int3
sbb
jnp
leave
cmpsb
cmp
mov
out
das
mov
xlat
rorb
pusha
fimuls
fdivs
imulb
sarb
in
jecxz
jle
mov
jge
enter
repnz
imul
es
divb
pop
xor
mov
push
sti
popf
jl
inc
lea
xor
dec
xchg
cmp
movsl
add
add
ljmp
or
movsb
pop
in
mov
jae
jae
push
jmp
mov
xor
sub
dec
cmp
lds
imulb
mov
scas
out
mov
repnz
mov
repz
aaa
scas
sarl
ss
adc
mov
out
sbb
cmp
clc
and
or
xor
xor
sub
sbb
add
lods
cmc
jne
out
fidivl
sbb
loop
xor
and
xchg
scas
inc
mov
mov
mov
ret
pop
or
dec
xchg
es
mov
push
mov
mov
cmp
sbb
and
xchg
cmp
pop
push
popf
mov
mov
leave
ds
into
or
ds
insb
shll
or
testl
je
push
mov
je
cld
out
add
les
das
hlt
pop
ds
popa
adc
jb
dec
add
lret
mov
mov
call
sbb
je
cs
lea
or
jecxz
mov
test
repnz
and
in
jae
cs
bound
cli
daa
pop
xor
mov
sbb
cmp
outsb
or
and
les
mov
add
adcb
ret
pushf
nop
es
movsb
inc
sub
mov
nop
sub
xchg
out
rolb
xchg
jo
add
fmuls
inc
out
pusha
xchg
add
xchg
xor
out
push
or
add
scas
sahf
in
xchg
push
out
jae
xchg
insb
mov
pop
call
lret
cmpl
cmp
fucomi
std
mov
andb
mov
fmulp
inc
fldenv
and
in
cmp
cmp
call
xlat
push
mov
jecxz
loope
mov
pop
jmp
mov
adc
popf
xor
xor
mov
xor
and
notb
repz
adc
dec
xchg
fwait
std
fwait
into
gs
mov
pop
sahf
lods
rcl
mov
lods
add
in
ret
movsl
iret
dec
sub
xchg
push
cmp
sub
inc
fcmovu
sahf
push
cmc
xor
and
push
cwtl
and
cld
xchg
inc
push
aam
add
loop
push
popf
roll
sbb
xchg
inc
hlt
sub
jno
imul
pushf
rclb
cmp
jbe
imul
add
popa
clc
ja
jne
icebp
stos
fbstp
cmp
xor
cmp
xchg
adc
aaa
ror
repz
stos
out
pop
cltd
in
fstl
mov
add
es
cmp
inc
test
mov
std
xchg
sahf
fs
push
sbb
fwait
xor
mov
das
repnz
and
mov
sbb
lods
mov
lcall
sbb
fsubp
adc
adc
lret
int
scas
sbb
mov
mov
test
inc
mov
xor
testl
jle
shr
mov
push
xchg
cmp
js
sub
pop
add
adc
call
or
sub
sbbb
icebp
inc
in
mov
pop
ret
adc
inc
out
cld
addb
sbb
push
cmp
sbb
jb
out
cmp
ja
xor
cld
daa
sbb
aas
cmp
cmp
repnz
push
cmp
rorl
nop
ja
pop
je
rcl
lock
jp
fidivrl
push
sub
stos
inc
or
movb
xchg
outsl
imul
xchg
pop
test
pop
movsb
push
mov
call
lahf
nop
inc
mov
fnstcw
adc
js
pop
cmp
mov
cmp
popf
cmpl
cli
ret
orl
inc
inc
fnsave
std
loop
in
or
clc
repz
sbb
std
xchg
lods
lahf
mov
lret
ret
movsl
filds
lea
sbb
sahf
sbb
stos
add
mov
iret
pop
repz
mov
mov
mov
cmc
sar
adc
jbe
cmpsl
stos
ss
mov
test
jne
xor
mov
and
ror
xchg
and
mov
in
scas
movsl
sub
sub
xadd
xchg
cmpl
adc
mov
pushf
cld
arpl
xor
aam
clc
jecxz
sub
imul
cmc
add
xchg
jecxz
ds
lock
push
inc
out
and
mov
imul
dec
mov
jl
pop
stos
fidivrl
out
xchg
xor
rolb
pop
xor
inc
es
sbb
xchg
fsubs
dec
out
aam
and
sub
add
daa
jns
dec
or
mov
std
sub
mov
insl
dec
jge
mov
ds
je
lahf
push
adc
xchg
mov
aad
and
jg
xchg
jo
in
test
and
aas
les
xchg
imull
les
cmc
xor
mov
aam
or
cmp
shrl
sub
incl
outsb
jg
movsl
or
dec
adc
pop
cmpsb
push
xchg
dec
mov
addr16
and
mov
iret
jbe
jo
ret
fisubl
push
xchg
sti
sub
in
pusha
negl
roll
je
icebp
out
dec
out
jae
adc
in
push
dec
dec
sub
iret
call
xor
inc
push
enter
adc
pop
rcr
repnz
xchg
mov
ret
mov
je
dec
cmpsl
mov
mov
xor
cli
sub
sub
or
or
and
and
clc
scas
xor
push
fldcw
insb
insl
dec
adc
xlat
jmp
aas
out
jno
jmp
xchg
in
scas
push
mov
loop
push
inc
xlat
xchg
cmpsl
pop
jne
xor
stc
in
jge
pushf
mov
mov
das
xchg
rol
lods
mov
in
es
aad
jmp
lret
cmp
das
outsb
in
jb
flds
jne
rcr
and
roll
dec
je
pop
loopne
dec
ja
sub
cs
cmpl
scas
inc
out
sub
and
cli
lock
dec
cli
pop
pushf
cmpsl
add
lds
sub
int3
mov
dec
jb
ficompl
testl
in
or
cmp
imul
mov
pop
push
fildl
sbb
and
and
or
enter
or
dec
cltd
es
int
rolb
mov
lock
je
adc
in
mov
pop
incb
cmc
fisubrl
fiadds
jbe
jae
jae
cmpb
xor
repz
or
and
ss
or
mov
inc
inc
fiadds
mov
mov
out
mov
add
push
aad
cmp
push
adc
sub
test
lret
cmp
int
pop
movsb
xchg
rcr
pop
mov
mov
push
jg
dec
xchg
das
fstps
fadds
fwait
or
inc
pop
insl
xchg
addr16
inc
add
inc
adc
jae
jbe
inc
xchg
push
mov
jnp
frstor
daa
ss
insl
out
test
mov
sub
repz
test
mov
add
jns
push
jno
loop
enter
pusha
push
iret
das
data16
int3
xchg
test
jae
jmp
cwtl
out
out
out
mov
pop
in
ficoml
aam
sub
outsb
test
mov
jmp
daa
into
dec
adc
sub
dec
lcall
mov
in
mov
add
rorl
addr16
adc
cwtl
xor
xchg
adc
fstps
cltd
xor
jae
pop
out
insb
add
jecxz
inc
or
cmp
in
out
sbb
lcall
rol
fdivrl
lods
sbbl
xchg
adc
sub
cmp
hlt
or
fadd
mov
scas
cmp
sbb
push
adc
scas
out
aad
mov
mov
pop
imul
add
dec
movsb
lea
add
test
lods
pusha
add
sbb
ljmp
jecxz
mov
adc
xchg
xchg
push
sbb
xor
or
cwtl
das
lds
cwtl
mov
stc
cmp
sbb
pop
lea
and
cmp
daa
adc
mov
xor
in
xor
repnz
mov
cli
cmp
orl
xor
sub
xor
xor
movsb
icebp
test
gs
or
pop
pop
dec
adc
sbb
insl
adc
lods
ret
ja
push
add
rcrb
xchg
repz
or
push
leave
pusha
test
lock
stc
lcall
mov
sarb
sbb
in
add
ja,pn
loopne
andl
mov
test
mov
enter
stc
sbb
sub
cli
inc
pusha
sub
pushf
into
inc
in
mov
or
nop
mov
pop
repnz
fstl
scas
pop
push
inc
sbbl
cmp
rclb
movsl
jns,pn
pushl
sahf
andb
adc
mov
or
mov
fists
mov
mov
pop
sahf
sbb
push
ljmp
test
cld
xchg
dec
and
dec
sub
out
lea
inc
push
cltd
jb
decb
cmpsb
and
mov
mov
shlb
test
das
dec
test
cmp
pop
jmp
enter
add
sub
ljmp
stos
mov
test
mov
xchg
lods
pop
fsubrs
nop
sbb
sub
cmpsb
cmp
ja
push
imul
add
inc
or
int3
sbb
dec
in
repz
push
arpl
mov
repnz
popf
xchg
mov
jl
mov
xor
mov
dec
inc
inc
mov
pop
pop
mov
mov
push
adc
loope
add
sbbl
lret
test
push
popa
xchg
std
pushf
xchg
popf
cmp
mov
testl
push
sub
xor
roll
cmp
cltd
icebp
mov
dec
aad
sub
rclb
in
dec
stos
sbb
shrl
mov
outsl
ffreep
fildl
rcll
mov
dec
or
mov
test
insb
pop
mov
push
je
lds
jge
jge
cmp
cmp
jbe
cld
cmp
or
out
test
aas
mov
roll
jge
push
test
fbld
sub
mov
fwait
pop
pop
cmpsl
enter
xchg
data16
xchg
cwtl
das
mov
int3
insl
jb,pn
arpl
fwait
push
clc
cmp
nop
imul
sub
xchg
sub
push
xchg
sarb
aad
mov
adc
aas
or
cmp
movsb
sub
pop
add
push
fistps
mov
stc
push
mov
div
test
imul
inc
out
xchg
pop
fnstenv
pop
inc
out
sub
gs
bound
mov
lea
mov
xor
lea
insl
adcl
cmp
jbe
cld
ljmp
ret
xor
je
enter
cmp
mov
sbb
pop
cwtl
push
imul
cltd
xlat
popa
mov
loopne
enter
fwait
icebp
mov
mov
and
xchg
push
mov
adc
mov
and
fnstenv
pop
out
call
neg
out
or
sbb
or
adc
movsb
aas
push
and
mov
movb
ds
or
lcall
pop
stos
inc
nop
js
lock
cmp
dec
xor
test
ret
pop
pusha
cmpsb
dec
cld
idivb
dec
mov
pop
add
and
cli
push
aad
inc
xlat
sti
clc
mov
sub
xorl
dec
ret
test
cmp
mov
mov
jle
ss
mov
inc
repz
push
cli
addr16
push
pop
inc
mov
test
test
mov
stos
mov
jmp
and
mov
stos
shlb
int
ljmp
inc
testl
sub
sub
mov
sbb
fisubl
jne
stos
jbe
fistps
idivl
aas
or
lahf
push
cmpsl
push
ds
adc
cltd
das
cld
loopne
rol
inc
dec
pushf
dec
xchg
pusha
mov
jo
fucom
sahf
jbe
sbb
loop
adcl
jp
mov
pop
lret
lret
sub
ds
in
inc
push
inc
and
shlb
jle
jp
xchg
xor
add
sbb
es
dec
jbe
fidivs
mov
imul
push
lods
out
xchg
dec
jge
push
movsb
adc
sub
pop
mov
cltd
adc
imul
lock
in
or
in
enter
es
mov
sbb
je
lret
imul
pop
icebp
sub
into
or
dec
pop
aas
adc
mov
mov
adc
lret
cmc
into
mov
faddp
enter
add
rol
pop
add
mov
sub
xor
scas
call
mov
in
ljmp
inc
dec
mov
addl
pop
dec
repz
outsb
push
inc
adcb
dec
jbe
vmovlpd
jb
add
bound
mov
mov
add
insl
dec
addr16
sbb
sub
hlt
xchg
movsl
mov
fwait
out
mov
push
shl
inc
inc
mov
je
test
scas
sub
int3
cmc
arpl
icebp
rorl
fxch
inc
rcr
mov
lods
add
add
test
mov
mov
pop
lods
cmpsb
mov
or
das
mov
inc
ja,pt
in
adc
or
sbb
mov
insl
or
rcr
jb
xlat
mov
lods
into
pop
xchg
lcall
bound
cmc
push
mov
into
jge
lods
mov
and
mov
adc
in
xchg
mov
cmp
out
push
test
fstpt
mov
jecxz
jle
adc
mov
cmp
mov
subl
int3
sbb
testb
cltd
stos
notb
sahf
xor
sbb
or
lahf
mov
shrb
ficompl
or
jl
or
divl
jne
scas
shl
cmpsb
mov
popf
cmpsb
popf
pop
repnz
movb
dec
shl
jns
in
mov
data16
inc
das
arpl
add
jge
add
mov
sub
stc
xchg
adc
addr16
bound
adc
bound
adc
add
inc
shll
sbb
add
cmpsb
data16
dec
cmc
das
jge
ret
lea
pop
repz
xor
call
inc
dec
ret
insl
fdivl
into
dec
test
outsl
add
push
mov
add
loopne
aad
aad
outsl
mov
lock
push
mov
mov
pop
rep
mov
cmp
mov
mul
xor
insb
xor
popf
enter
sub
int
or
xchg
sub
loopne
cmp
clc
xor
and
pop
push
inc
mov
mov
fisubs
pop
lock
adc
mov
inc
jb
insl
pushf
test
xchg
popl
jae
and
jge
inc
ficompl
dec
adc
xchg
out
hlt
sbb
mov
out
mov
fs
mov
fs
lret
test
js
sbb
inc
fcoml
outsl
dec
enter
mov
jne
cmpsl
cmp
movsb
js
pusha
lret
mov
jnp
and
imul
sbb
pop
shl
mov
jp
test
push
jo
inc
jg
jge
xor
popa
inc
push
icebp
mov
ret
fstps
insb
cmpsl
cli
add
cli
call
out
in
fsubrs
lds
sub
pop
cmp
sbb
push
jo
and
xor
adc
fwait
pop
sti
and
or
notl
stos
call
loopne
jo
xor
repz
ja
pusha
testl
sub
pop
jmp
call
mov
outsl
push
outsl
sarb
and
and
stos
inc
push
jns
lea
int3
adc
mov
fidivl
leave
or
leave
pop
sbb
outsl
xor
adc
aas
or
cmp
pop
stc
add
push
push
stos
outsl
jmp
outsb
add
jno
adc
sahf
enter
adc
imul
mov
fdivl
rcr
mulb
sarl
push
dec
enter
imul
cmp
mov
dec
stc
or
or
jo
sub
ljmp
xor
or
or
rorl
dec
mov
xchg
adc
dec
mov
jmp
leave
fisttps
outsb
inc
and
out
mov
imul
in
ret
adc
mov
inc
test
or
jbe
push
and
mov
cmp
push
imul
xchg
aaa
cli
pop
jbe
and
pop
pop
adc
lret
daa
ret
inc
test
es
iret
xchg
fcoml
fisubrl
out
dec
out
inc
mov
cmc
aam
scas
sbb
push
dec
mov
cli
data16
sbbl
js
shlb
mov
aam
xlat
jns
ficompl
sbb
js
and
test
inc
insb
out
in
pushf
imul
xor
hlt
push
repnz
cmpsl
mov
dec
push
lods
sub
mov
imul
lea
inc
pop
push
mov
cmp
cmp
rclb
dec
fisubrs
adcb
jl
scas
jbe
jo
jb
cs
fistl
mov
iret
bnd
scas
pusha
inc
inc
or
test
mov
adc
aad
int3
push
inc
stc
je
scas
xchg
test
hlt
testl
dec
push
dec
pop
mov
iret
inc
clc
je
std
movsl
sbb
xlat
dec
icebp
les
shll
call
add
in
pop
add
xor
xor
negl
in
daa
cld
push
pop
insl
sub
xchg
popf
stc
xchg
or
cmp
inc
mov
dec
popf
xor
aaa
std
nop
daa
inc
repnz
pop
xor
xor
das
or
push
push
ret
and
jno
call
push
mov
jg
jge
imul
imul
in
test
jecxz
and
imul
popa
icebp
or
mov
popl
addl
add
mov
lret
lods
adc
push
adc
dec
or
cs
lods
fcmovnb
shrl
out
push
push
jae
sub
les
test
repz
mov
lret
xor
repz
dec
icebp
xchg
jg
push
es
push
jno
mov
add
inc
ret
movsl
xor
mov
rcll
push
mov
mov
adc
inc
pop
pop
xor
arpl
cmp
push
push
fisubl
xchg
pusha
js
aad
or
pop
mov
fucom
iret
xor
xchg
mov
add
cmc
push
stos
add
outsl
xchg
jp
sub
addr16
imul
push
or
stos
cmp
andb
xchg
jae
out
mov
incb
paddusb
inc
std
jo
mov
cmpsl
inc
test
shlb
jmp
or
ret
adc
pop
dec
xor
mov
xchg
dec
popf
pushf
pop
ret
mov
imul
xor
iret
imul
jae
aad
jb
push
stc
xchg
dec
sahf
and
inc
sbb
jae
cmp
pop
xchg
imul
rol
add
pop
loopne,pt
fisubrs
pop
mov
pop
into
fnsave
jg
andb
lret
je
cmpsl
mov
add
testl
add
fists
in
mov
inc
add
lods
scas
and
jecxz
lret
jne
mov
mov
sub
or
adc
cmp
mov
fcoml
stos
push
leave
and
clc
pusha
jecxz
xchg
sbb
xorl
mov
jo
pop
in
mov
jo
dec
add
loop
jp
lods
iret
dec
popa
inc
pop
imul
sahf
ret
lret
fildl
lcall
je
dec
cmc
stos
subl
sbb
xchg
and
mov
and
fdivp
adc
sub
out
xchg
clc
mov
xchg
fistpll
or
add
lcall
sbb
fsubr
mov
test
in
jnp
sub
mov
sbb
adc
cwtl
ret
inc
fadds
jg
aas
lock
and
fcoml
adc
lret
xchg
adc
dec
add
sarl
add
xchg
jns
or
and
inc
sbb
push
cwtl
jp
lods
sbb
cmpsb
push
in
aad
fstpl
out
jno
cmp
sub
jbe
adc
dec
pop
testb
jb
loope
cmp
dec
int
xchg
mov
fnstcw
jb
cltd
cmp
adc
inc
popf
pop
lcall
sub
mov
lcall
cld
les
sub
repz
neg
adc
mov
mov
movsl
and
sub
jbe
addr16
sub
daa
dec
ret
enter
enter
push
mov
fnsave
cmpsb
sbb
add
dec
js
sub
iret
jno
movsl
and
inc
jecxz
mov
stos
mov
adc
cmp
add
xchg
lock
pop
xchg
and
inc
lods
inc
repnz
cltd
mov
les
xchg
and
mov
arpl
ror
xchg
mov
enter
jmp
add
pop
shll
and
jge
leave
daa
scas
stos
mov
add
mov
pop
cltd
inc
xor
cmp
dec
cmp
ds
dec
clc
stmxcsr
rcrb
add
inc
lods
sub
shlb
adc
aas
fs
loop
adc
mov
fadds
sub
and
clc
and
inc
aaa
incb
ret
ret
xor
out
mov
shl
jne
pop
repnz
lods
and
mov
outsl
enter
sub
sbb
inc
into
cbtw
push
mov
test
pop
mov
or
sbb
inc
mov
fwait
xor
mov
outsl
mov
fdivrl
sub
roll
test
enter
lds
inc
cld
xor
das
pop
movsb
sbb
push
enter
dec
xchg
add
das
mov
sbb
aaa
xchg
dec
dec
sbb
mov
pop
into
jne
dec
popa
or
and
pushf
jp
pop
scas
jle
fdivp
lcall
and
enter
xor
dec
aaa
pusha
ss
jle
mov
int
push
scas
in
mov
or
movsb
pop
shlb
jge
lret
repz
xchg
xchg
dec
ja
jge
sbb
cmc
mov
int
or
mov
loope
repnz
pusha
push
movsl
xchg
inc
test
jle
lods
and
pop
nop
or
pop
xchg
mov
arpl
movsb
leave
push
das
addps
mov
xor
mov
movsl
lods
cmp
inc
shll
xor
mov
cmp
jmp
xor
cwtl
das
jp
or
pop
xor
test
movsb
inc
ljmp
xor
mov
test
out
dec
out
jb
imul
rorl
faddl
xchg
xchg
mov
stos
cmc
jnp
inc
les
cmpsl
les
pop
inc
popa
jle
pop
and
int3
ficoms
adc
and
pop
loop
aas
in
sbbb
xchg
sub
nop
dec
jne
mov
lcall
xor
jp
jo
jno
lock
notl
insl
cld
xchg
sub
cmpsb
arpl
add
dec
ss
popa
lcall
adc
bound
shl
pop
mov
adc
cwtl
out
push
push
out
punpckhbw
sub
outsb
subl
dec
fidivs
es
fists
imulb
ret
pusha
push
sbb
inc
mov
iret
loope
rcll
lret
jle
mov
inc
xchg
shrl
dec
ds
es
loop
out
sub
rol
jg
push
sbb
pop
pop
xchg
fcomps
xchg
mov
and
pop
fiadds
out
data16
push
lds
outsl
mov
push
jmp
mov
adc
dec
ds
push
xchg
adc
call
arpl
sub
adc
mov
pusha
xchg
imul
cmp
mov
jl
and
ss
sub
test
mov
repz
jnp
push
pop
dec
fwait
sbb
mov
sub
push
imul
lret
sbb
aam
push
pop
mov
test
orb
cmp
pop
pop
cmp
lret
shl
popa
mov
sbb
test
shll
xchg
xor
arpl
mov
cmp
repnz
outsb
rcrb
sub
mov
in
cwtl
cmp
ret
push
and
dec
pop
cwtl
inc
and
pop
xchg
pop
and
das
in
sub
imull
or
jmp
adc
jmp
cmp
xchg
jns
jae
insl
push
adc
push
mov
ret
fidivs
mov
adc
and
mov
xor
pop
hlt
jno
mov
pop
dec
les
push
xlat
add
dec
sti
pusha
pop
rcrl
call
stos
pop
outsl
sahf
or
push
mov
imul
out
mov
jl
push
mov
std
add
sub
push
iret
push
loope
sub
shlb
ljmp
jb
shll
std
sbb
sbbl
pop
mov
negb
mov
stos
add
test
and
daa
lret
bound
push
or
jmp
loop
cmp
mov
push
cli
inc
xor
in
mov
fwait
jle
imul
hlt
nop/reserved
jge
paddsb
cmc
pop
cmp
lret
sub
es
push
push
mov
add
je
xor
and
sub
ror
clc
push
popf
es
into
fistps
mov
pop
bnd
and
fisttpl
sub
inc
sti
push
in
shlb
pusha
xchg
pop
out
clc
sbb
push
lret
pushf
mov
xor
mov
insb
sbb
adcl
mov
jnp
shrb
stc
xor
cmpsb
ds
sub
das
cmp
popa
pusha
lcall
pop
lods
xchg
and
or
mov
cltd
cmp
fdivrl
sub
sub
push
or
or
jae
es
stos
aad
push
xchg
pop
hlt
cld
test
je
and
repz
mov
shlb
rcr
orl
scas
ljmp
fisttpll
mov
and
aas
push
into
xor
or
notb
outsb
fs
mov
dec
adcb
mov
or
shrb
packssdw
push
push
mov
or
ljmp
pop
lahf
cmp
sahf
jmp
push
push
into
and
fmul
add
pop
outsb
jo
das
mov
out
cmp
jecxz
or
lds
cmpsb
jle
inc
cmpsl
xchg
push
dec
pop
dec
mov
jnp
adc
sub
xchg
and
or
push
push
popa
mov
shll
movsb
cmp
nop
testb
aas
dec
push
fstl
or
cmpsl
outsl
add
fsubr
push
nop
mov
fdivrp
push
and
test
aam
bound
mov
stos
jmp
scas
les
sub
pop
and
cmp
fs
cmp
shl
add
fwait
gs
xchg
pop
mov
repz
cld
pop
je
daa
jp
push
insb
or
orl
neg
fmull
add
sub
mov
inc
out
ficomps
out
in
mov
jo
ja
pop
mov
cmp
xor
sarl
sbb
mov
or
imull
adc
push
cld
xchg
xchg
jo
into
gs
sbb
mov
jle
jle
cmpsl
inc
in
jo
loop
inc
push
pop
out
inc
xorl
call
inc
int
cli
call
ret
xlat
adc
push
add
cltd
or
cmp
das
cmp
or
xor
xor
fistps
xchg
sbb
cmp
in
cmp
inc
mov
fiaddl
or
std
cltd
jecxz
or
das
jmp
jl
mov
adcb
loope
faddl
mov
out
fisubl
jg
hlt
lret
cwtl
or
sub
jl
dec
sarb
jle
add
test
ret
mov
xor
imul
test
pop
sub
int
mov
sub
fdivp
sar
mov
sbb
push
xchg
cmc
shr
es
inc
in
mov
jl
push
icebp
rcrl
pop
repz
mov
cmp
lods
inc
xor
or
sti
xchg
jmp
das
insl
fstps
in
cs
sub
mov
cld
orl
mov
lods
push
push
xor
stos
dec
hlt
sbbl
adc
aad
adc
xor
xor
js
cmp
les
push
push
imul
divps
scas
test
sahf
lods
dec
sbb
push
cmp
jmp
lods
or
lret
xchg
loop
lret
sbb
nop
jo
outsl
mov
popl
and
inc
fdivl
xchg
movsb
xchg
insl
jecxz
jb
push
adc
add
cmpsb
testl
lds
dec
dec
jmp
push
imul
mov
xchg
mov
ljmp
call
stos
mov
cmp
sbb
push
mov
stc
inc
adc
sbb
stc
add
xor
inc
rcll
mov
add
test
mov
cmp
cmp
into
ss
lahf
mov
les
out
dec
mov
cmp
rolb
push
shl
and
sub
ffree
jl
sarl
jns
and
and
pushf
inc
loope
jne
mov
pop
cmpsb
les
xchg
lods
stos
inc
mov
js
dec
pop
inc
imul
mov
mov
mov
dec
int
clc
and
fstl
inc
mov
cmp
ret
loopne
mov
sub
push
adc
enter
sbb
inc
jle
push
mov
cmpsl
popf
sub
pop
mov
mov
cmpsb
mov
les
sbbb
sub
sbb
or
push
jmp
popf
bound
movsb
and
jge
ljmp
push
sub
mov
imul
jae
cmp
push
imul
mov
fidivrl
sbb
outsl
shrb
push
mov
mov
mov
fstl
sbbb
nop
movsb
mov
cwtl
insl
xor
out
lcall
nop
popa
cmp
aaa
inc
clc
movsb
or
outsl
jnp
icebp
jae
cmp
das
jns
xor
lcall
and
push
jmp
push
lcall
in
mov
mov
or
into
jmp
mov
scas
outsb
jmp
inc
cmp
pop
scas
rolb
int3
loope
scas
call
cmpsl
mov
js
mov
stos
push
add
cmpsl
leave
jne
push
mov
scas
adc
sbb
cmp
cli
mov
sbb
inc
scas
repnz
add
es
mov
mov
push
ljmp
lock
fsubrl
es
shl
cmc
pop
xchg
sub
ja
xchg
xchg
mov
sbb
sub
mov
mov
mov
inc
es
pop
add
adc
cmp
jg
or
sbb
addr16
test
test
mov
add
loope
jb
addb
mov
lds
dec
push
aas
out
in
xchg
push
sub
add
mov
mov
sub
pop
movsl
add
setp
dec
ljmp
mov
std
xchg
xchg
lods
or
push
mov
inc
call
and
fiadds
and
pusha
je
jne
xor
pop
sbb
ffree
inc
push
addr16
add
fidivs
sbb
lcall
push
leave
ja
push
cld
pop
imul
leave
sbb
cmpsb
lret
aas
cmpsb
sbb
call
jp
int3
test
loopne
sbb
adc
adc
push
je
cmp
sbb
mov
push
movsb
fcom
rcrb
test
xor
movsb
pop
cmp
pop
test
inc
sub
sub
push
and
sbb
cmp
call
mov
fbstp
ret
loope
in
out
mov
outsb
add
test
idivl
in
lea
xchg
sbbb
imul
cmp
clc
rol
cmp
out
add
sbb
push
xor
aas
in
lret
out
mov
lea
push
shll
add
and
movsb
stos
xchg
inc
fadd
xchg
cmpsl
stc
lret
cmc
scas
out
mov
ds
nop
pop
daa
shlb
adc
cltd
mov
mov
inc
fadd
dec
pop
cli
jbe
insb
jnp
test
mov
nop
ds
mov
mov
loope
sbb
fdivrs
and
xlat
mov
xchg
pop
jbe
jns
aam
negb
dec
mov
in
push
repz
mov
mov
mov
call
cmp
inc
shlb
ret
rorl
add
or
movsl
lds
push
aad
jmp
shl
or
data16
out
cs
in
lods
jmp
push
inc
sahf
and
xchg
add
ss
sbb
mov
xchg
mov
push
push
sub
mov
push
lods
mov
cmp
fildl
movsb
popa
enter
mov
fldcw
sbb
fsts
dec
out
test
push
pop
jae
movsb
or
sbb
arpl
sub
push
jbe
push
add
push
popa
scas
test
mov
jmp
roll
mov
mov
lods
cwtl
and
aaa
hlt
or
outsl
mov
dec
in
in
rcll
xchg
inc
imul
inc
fcoml
arpl
arpl
xor
loopne
mov
test
pop
lret
lret
in
hlt
mov
nop
mov
pop
mov
or
outsl
mov
testl
leave
loop
and
nop
jg
dec
dec
inc
jl
out
call
or
pop
mov
mov
or
mov
lods
add
xlat
insb
cltd
sbb
add
repz
xchg
test
mov
mov
into
jp
bound
jmp
inc
mov
lea
nop
stos
inc
pop
js
jmp
jno
insb
add
std
outsl
mov
mov
ficoms
les
je
mov
dec
xchg
mov
aas
or
add
jae
dec
push
mov
pop
out
xchg
scas
ret
sbb
mov
jg
clc
shll
scas
sub
push
fcomi
xor
inc
and
mov
xchg
in
cmp
pop
inc
sub
fnsave
cmp
leave
pop
mov
push
lret
mov
les
loope
outsb
loope
aas
insb
adc
mov
adc
add
sub
dec
stos
popa
in
cmpsl
mov
fucomi
dec
das
scas
loope
sub
test
icebp
add
mov
fildll
cmpsl
add
sub
cmc
xor
mov
push
sbb
sub
pop
mov
sub
pop
in
jno
iret
dec
and
xlat
call
in
inc
fldenv
sbb
push
mov
rclb
jb
femms
fbld
inc
sub
loope
xor
push
cmp
pop
sub
cld
rcrl
push
sahf
mov
ja
or
es
ja
imul
inc
imul
mov
push
aaa
jp
push
and
push
lret
fucom
push
jge
push
jg
cmp
loope
lods
inc
out
ljmp
and
movsb
mov
test
fisttps
lods
mov
push
inc
inc
iret
or
pop
cmp
lcall
pop
jno
lock
pop
rcll
loope
sbb
cltd
xchg
repz
adc
addr16
jecxz
add
mov
mov
cmp
dec
enter
fistpll
add
rcrl
push
movsl
mov
loope
movsl
std
mov
or
fs
out
lret
cmp
test
stc
shlb
or
adc
and
and
sub
lods
and
jns
sbb
add
xchg
adc
cmpsl
inc
pop
xchg
ficoms
xchg
inc
std
jbe
or
mov
adc
jecxz
xor
mov
or
mov
inc
jl
jecxz
or
jg
fs
mov
mov
sahf
xor
mov
insl
lret
cmp
dec
add
mov
test
mov
jp
popl
sbb
loop
cmp
pop
push
daa
jecxz
xor
xor
mov
or
stos
int
dec
sub
sbb
or
cwtl
jl
xchg
pop
sbb
mov
ret
adc
bound
nop
rcr
aas
dec
and
xlat
imul
sahf
push
xchg
mov
adc
shlb
aaa
icebp
pop
adc
mov
push
movsb
dec
in
mov
adc
sbb
push
lods
sub
jae
add
in
and
sbbl
dec
add
movsl
lahf
enter
add
sbb
mov
mov
fdivrl
pop
mov
push
icebp
cmp
and
jns
dec
mov
negb
in
push
and
into
sbb
pop
xchg
mov
xlat
pushf
cmp
divb
jg
inc
fistl
stos
mov
pop
xor
pop
xlat
lcall
xor
je
sub
mov
or
fmuls
cmp
in
xor
out
sarb
mov
cmp
mov
aam
cs
iret
and
sub
lock
mov
mov
and
fldl
movsb
test
adc
pop
pop
repnz
stc
mov
sub
mov
into
inc
xor
xchg
sub
add
push
int
xchg
sub
lds
mov
push
add
xchg
stos
mov
push
sub
cld
aam
adc
aam
jl
icebp
mov
lsl
int3
mov
adcl
mov
pop
cmp
ds
hlt
mov
call
xchg
repnz
pop
mov
out
dec
lock
lods
mov
mov
jmp
jae
in
pusha
sbb
or
mov
xor
insl
ja
jb
fs
mov
xchg
mov
loope
test
subb
aas
mov
mov
sub
mov
imul
ret
mov
add
and
mov
ret
add
push
lods
jne
inc
mulb
lods
inc
imul
sbb
into
inc
in
mov
leave
ret
mov
notl
jno
and
push
es
in
into
sub
enter
fistps
aam
dec
add
or
jmp
shrb
fcomp
enter
mov
stos
mov
sbb
fcmovbe
xchg
scas
mov
mov
xor
popa
leave
push
repnz
sbb
daa
jo
sub
cmp
jb
mov
xchg
loop
jge,pn
nop
and
dec
cmp
xchg
outsl
arpl
mov
fisttpll
arpl
inc
lods
cmp
xchg
test
ret
loop
and
out
jg
psadbw
imul
ja
cmp
jmp
dec
out
xchg
dec
shl
sbb
les
sub
push
mov
pusha
clc
rcrb
iret
gs
xchg
mov
mov
cmp
sub
mov
lock
nop
push
aam
push
mov
jecxz
leave
mov
nop
xchg
lret
cmp
stos
icebp
adc
add
fdivp
fwait
jne
ret
xor
adc
add
ret
stos
mov
lock
pop
push
rcrb
sbb
dec
dec
cltd
and
outsl
cmp
pusha
adc
repz
cmp
cmpsb
pop
inc
iret
sub
xchg
xlat
in
mov
shl
inc
inc
call
stos
stos
lcall
iret
xor
adc
fiadds
filds
in
cmp
cld
stc
or
cmp
iret
add
int3
fcomps
and
sbb
sahf
mov
scas
mov
push
sub
in
push
dec
popa
jecxz
leave
jmp
cltd
sub
cmp
lods
inc
loop
pop
sub
pop
cld
out
sbb
lcall
or
sarl
push
or
pop
and
sahf
sbb
shlb
sub
imul
pop
cmc
or
fwait
mov
or
mov
pop
es
out
dec
xchg
into
cmp
sub
pop
iret
sarb
xor
push
out
bound
sar
mov
or
icebp
sbb
outsl
dec
mov
mov
shl
adc
sbb
lret
faddl
scas
adc
mov
and
mov
int3
aad
gs
movsl
imul
test
in
bndstx
cmpsb
shlb
push
dec
inc
cwtl
adc
push
jns
outsb
lods
mov
lods
aad
mov
add
cmp
xlat
xchg
out
mov
push
aas
pop
or
js
pop
ljmp
jle
cmp
es
adc
lods
in
jnp
xor
pop
fcomi
mov
mov
inc
loope
adc
cmp
filds
push
inc
dec
loopne
mov
jno
loopne
adcl
or
xchg
push
test
or
pop
std
push
stos
pop
dec
cmpsb
push
mov
repnz
inc
and
xchg
or
cmp
sub
cld
push
adc
cmp
je
pop
test
add
testl
xlat
insb
xchg
ja
mov
xchg
and
out
cli
incl
jl
sub
popf
jae
or
cmp
shl
xchg
imul
jne
mov
sub
inc
mov
or
push
in
stos
shrl
sbbl
pop
push
test
ljmp
push
jl
fnstcw
push
dec
bound
sti
insl
lcall
sub
push
andl
mov
xor
inc
stc
dec
test
mov
add
inc
lcall
sahf
mov
ja
hlt
sarb
fwait
stos
repz
add
ds
xchg
rclb
dec
fdiv
js
jg
xor
mov
lret
mov
cli
scas
and
lds
enter
aad
cmc
iret
iret
incb
shll
or
lods
andb
fsubrp
pop
pop
jmp
testl
add
and
orb
cmc
rclb
xor
cmp
jge
add
pop
cmpsb
push
shrb
jle
into
mov
inc
push
mov
sbb
push
cmpb
adc
outsl
jnp
in
test
into
mov
cmp
int
mov
pop
notl
lds
inc
adc
int
int3
cmova
in
inc
push
dec
mov
xor
dec
rcll
mov
dec
dec
lds
jmp
pop
ds
pushf
push
pop
mov
shl
insl
enter
pop
aam
xchg
loopne
mov
bnd
imul
dec
cmp
movsb
js
mov
sbb
dec
insl
aam
imul
jno
lea
lahf
push
xchg
icebp
and
cmp
push
sub
stos
cli
stos
lret
js
and
cmpsb
and
adc
jbe
sbb
jmp
insb
mov
and
sub
push
adc
jge
fidivl
out
cmpb
movlps
and
pop
jb
rolb
daa
inc
cmpsl
shrl
push
pop
loope
sbb
sub
lcall
jp
stos
ret
push
call
adc
dec
mov
sub
add
dec
xor
and
scas
push
add
mov
or
ljmp
cmc
mov
mov
mov
dec
cmc
aas
test
lock
test
aam
cmp
dec
cmpsl
test
sub
jns
lahf
test
fildll
iret
push
mov
lods
data16
sub
mov
dec
int3
arpl
rolb
pushf
pop
jmp
dec
stc
mov
mov
bound
pop
aas
sbb
jl
adc
pop
mov
mov
rorl
cmp
jl
shrl
scas
repnz
into
mov
mov
lret
mov
push
js
xchg
loop
movl
add
mov
xchg
sbb
jne
inc
jp
add
es
add
sbb
bound
loopne
push
mov
scas
cmpsl
lret
sub
lret
pop
cmp
and
lahf
ja
adc
test
lods
pop
mov
jb
jae
sub
inc
stos
xchg
inc
out
cmp
dec
lahf
lea
shll
fwait
es
sub
shrl
or
es
dec
arpl
and
andnps
push
sarl
lods
pop
adc
adc
xchg
sbb
lods
inc
xlat
sbb
push
jecxz
xchg
scas
xorl
xor
sbb
jnp
daa
pop
and
inc
hlt
push
inc
pop
add
movsb
sbb
clc
aam
adcl
jecxz
inc
xor
xor
or
ds
sarl
aad
leave
mov
aas
enter
pushf
outsl
ret
subb
dec
arpl
iret
out
xor
push
cmp
xchg
scas
arpl
sbbb
adc
sub
repz
sub
xchg
cmp
das
xor
loope
sub
cmp
jne
push
mov
ljmp
insb
xchg
xor
lea
in
inc
clc
test
fdivrs
pop
stos
or
xchg
add
xor
xor
inc
popf
ds
jns
jmp
jle
adc
fists
popl
xchg
mov
push
fcoms
hlt
adc
mov
into
cmp
jg
mov
mov
or
add
jl
fildll
inc
loop
jns
pop
aaa
call
cmp
in
shrb
mov
push
repz
dec
adc
inc
pop
mov
inc
cmp
jmp
cwtl
out
pop
cmp
xchg
and
inc
in
out
lods
out
adc
mov
mov
stc
cwtl
inc
mov
cmpsl
fucomp
adcb
jecxz
pop
xor
lret
insb
test
es
ret
test
fnsave
test
mov
fisttpl
ret
adcl
outsl
mov
ret
and
aas
dec
shlb
cltd
lcall
xchg
sub
lret
jae
cmpsb
cmp
xor
inc
sbb
dec
dec
cmp
mov
mov
sbb
cmp
xlat
mov
lea
mov
lahf
and
fbld
pop
out
or
test
out
pusha
cmp
sub
out
mov
add
push
add
pop
adc
scas
mov
xlat
mov
dec
cmp
jg
loop
adc
mov
repz
psrlw
test
push
gs
fwait
dec
pop
int
ljmp
dec
lea
packuswb
je
test
and
add
mov
aaa
int
out
iret
push
popa
sub
loope
jae
sahf
sub
xchg
mov
mov
arpl
add
xchg
dec
xchg
repnz
mov
pop
mov
aas
addr16
sbb
scas
flds
pop
fsubl
lea
arpl
lret
sub
out
dec
cmpsl
push
mull
sbb
cld
aaa
dec
in
cmpsb
ds
fistpll
js
test
lret
push
inc
lret
enter
mul
jp
sbb
scas
inc
dec
pop
jp
pop
ss
int
loop
subl
fucomip
adc
push
pop
push
out
add
cmpb
icebp
adc
dec
test
sbb
pop
testb
pop
call
mov
add
cmpsl
ret
and
fwait
cmc
mov
out
xor
sub
loop
pop
mov
aam
or
inc
ss
adc
xor
push
sub
loopne
sub
pop
mov
ffreep
add
and
cmp
inc
xlat
orl
or
inc
and
push
addr16
fadds
ss
jns
scas
test
stos
xchg
sbbl
insl
inc
mov
mov
xchg
sub
sbb
sahf
lock
push
mov
push
and
stos
aas
sti
leave
int3
sbbb
cs
push
je
loopne
adc
jg
inc
ja
ljmp
and
mov
fstpt
lods
mov
and
jge,pn
ret
pop
fbstp
xor
xor
insb
fwait
cwtl
xchg
adc
je
scas
ljmp
pushf
xor
daa
lret
hlt
aas
dec
cmpsb
icebp
out
dec
jg
leave
mov
inc
psrad
dec
lret
ret
mov
dec
push
xchg
ret
sbb
push
mov
pop
sbb
stc
push
xor
jp
cltd
pop
ret
or
orl
mov
testb
pop
xor
mov
enter
hlt
push
jne
push
mull
jnp
sbb
sbb
dec
in
icebp
push
out
or
and
mov
or
ss
pop
aas
dec
iret
add
add
mov
jbe
clc
push
repz
cmp
aaa
add
sahf
lock
cmp
in
cli
loop
movb
popf
fucom
aam
outsl
mov
mov
jmp
adc
loope
mov
xor
cmc
mov
es
jecxz
dec
fisttps
and
insl
mov
mov
and
pop
inc
cs
xor
sub
mov
jge
push
int3
push
cmc
or
out
adcb
mov
sbb
add
cwtl
divl
ret
mov
xchg
lea
sbb
cs
popf
hlt
push
fwait
cmp
cmp
movsb
push
mov
repz
mov
pop
out
cli
outsb
xchg
fstl
frstor
iret
adc
addr16
jbe
fs
ljmp
mov
cmpsl
xchg
movsl
lahf
js
or
inc
mov
es
mov
ret
in
hlt
lahf
jb
andb
pop
cld
xor
insl
mov
xchg
popa
imul
loopw
sub
fldt
or
ss
cld
sub
ret
pushf
jne
mov
jecxz
stos
inc
sub
sti
adc
inc
mov
mov
dec
loopne
mov
xchg
pop
jne
in
and
dec
lods
inc
mov
dec
rcr
cmp
andb
jecxz
dec
sbb
sahf
inc
cmc
mov
mov
mov
jmp
enter
jp
lret
cld
xchg
cmp
push
mov
popa
xchg
xchg
arpl
or
mov
mov
add
nop
jbe
in
pop
xor
test
lea
cs
test
mov
and
cs
xlat
pop
loopne
cmp
dec
pop
lret
push
sub
cmp
mov
loopne
nop
push
cmp
adc
daa
call
or
imul
in
movsb
cmp
and
sbb
adc
pop
cmp
jbe
pop
dec
inc
xchg
mov
sbb
xchg
jno
mov
js
out
mov
sbb
xor
dec
data16
and
sahf
xor
and
lea
pop
enter
xor
xchg
jmp
add
sahf
aad
jle
or
int
add
lcall
mov
inc
repnz
mov
mov
fisttpll
ja
test
jp
or
and
iret
mov
add
addr16
lods
mov
xchg
jge
pushf
stos
mov
repnz
and
repnz
movsb
add
lock
jae
mov
jge
pop
das
mov
dec
je
adc
sub
fists
rcr
mov
xor
sbb
sbb
add
xor
sbb
push
cmp
sbb
and
add
push
pop
gs
dec
leave
mov
roll
scas
add
inc
stos
lret
das
adc
add
ja
dec
test
sbb
xchg
mov
scas
and
je
dec
add
push
in
stos
jmp
xor
mov
std
sub
fwait
test
push
lods
adc
mov
ret
pop
imul
xchg
push
mov
mov
ficoml
lock
imul
cs
push
sub
mov
sahf
nop
sub
es
sbb
cmp
jecxz
sub
notb
mov
arpl
call
aam
stos
mov
lea
add
sahf
push
mov
mov
cltd
pop
leave
int
mov
pop
cmp
xor
xor
xchg
mov
data16
jne
pop
push
mull
sbb
icebp
adc
nop
and
lret
and
inc
push
pop
loop
icebp
sbb
nop
adc
pop
cwtl
sti
inc
jns
lret
push
in
adc
insb
shrb
es
inc
pop
dec
pop
out
outsb
inc
inc
loope
sub
mov
test
dec
push
jg
jnp
mov
rol
inc
call
inc
orl
int
inc
test
and
and
xchg
pop
icebp
pop
in
test
inc
repz
sub
lock
xchg
fldenv
in
push
cmp
inc
lock
inc
xor
mov
cmpl
cmpsl
dec
insb
cltd
or
loop
adc
lahf
push
push
shl
das
je
popa
fmuls
mov
adc
pop
pop
mov
jno
pop
in
sbb
mov
mov
jb
cli
sub
xchg
mov
pop
ljmp
call
or
mov
sub
dec
imul
sti
sbb
mov
out
add
sbb
push
cltd
jl
mov
cmpsb
sbb
pop
rorl
jge
and
iret
sbb
pop
ss
pop
popf
mov
hlt
push
stos
insb
adc
test
cmc
outsl
xchg
ret
dec
out
push
out
mov
sarl
hlt
orl
stc
mov
pop
mov
icebp
jecxz
in
js
push
add
add
xor
daa
fidivrs
gs
pop
stc
das
in
icebp
push
cwtl
push
or
movsl
negl
cwtl
fcoml
lahf
aas
cmp
daa
das
icebp
pop
hlt
mov
mov
packssdw
inc
inc
mov
ret
push
jl
jne
lods
push
sbb
xor
mov
outsb
cs
shlb
stc
inc
popl
repnz
test
mov
pusha
and
faddl
sub
cmp
sbbb
lcall
pop
aad
xchg
outsl
cmc
repnz
lods
or
imul
xchg
shl
in
pop
enter
jnp
shrb
push
dec
in
xchg
idivb
bound
out
test
pop
dec
cwtl
repz
ljmp
insl
sbb
mov
test
jp
ret
jecxz
cmp
mov
xchg
sub
jle
sbb
pop
mov
mov
jbe
mov
add
jmp
xchg
ds
or
fstpt
fidivrs
push
sub
inc
aaa
xchg
cmpb
sub
rclb
pop
pop
jbe
jp
mov
scas
inc
xor
jne
sub
cmp
pop
inc
and
mov
aam
sbb
rcrb
add
pop
mov
add
pop
rcrb
and
mov
jle
test
rclb
mov
cmp
dec
cmp
aam
shr
lods
cmc
data16
stc
mov
and
xchg
jl
shll
repz
sar
mov
cs
sbb
mov
push
out
cmp
into
fchs
jne
popa
jae
fisubs
mov
idivb
mov
rcrl
dec
lods
outsl
mov
test
push
dec
dec
addl
icebp
mov
sahf
and
je
inc
jnp
sti
push
xlat
bound
and
sub
push
sub
les
pop
jb
in
dec
daa
xchg
xchg
xor
xchg
mov
mov
ret
pop
and
or
cmp
shlb
add
dec
xchg
inc
dec
outsl
idivl
testl
jmp
push
jl
xor
cmp
lahf
inc
cltd
push
cltd
hlt
loope
mov
repnz
sar
test
pop
repz
insb
and
jns
decl
mov
mov
pop
sub
sub
icebp
pop
xchg
push
mov
shrb
or
sub
jl
popl
cltd
loope
pop
ret
outsl
cmp
mov
mov
in
sub
scas
adc
lods
into
stos
and
and
dec
lods
mov
dec
loope
jecxz
cmp
subb
cmpl
pop
xchg
jle
push
sub
lret
outsb
lahf
cmp
into
outsl
mov
addb
sbb
pop
je
movsb
cmp
xchg
jge
fwait
pop
dec
dec
dec
adc
insl
inc
mov
imulb
pusha
cmpsb
sbb
mov
insb
outsl
mov
jb
aad
imul
cmp
and
add
xchg
sarl
out
shlb
cmp
pushf
not
repnz
cld
add
or
sub
mov
shrb
inc
jno
push
notl
xor
pop
cmpsb
jg
loop
sbb
std
jl
sub
jnp
loope
insl
pushf
dec
mov
loopne
daa
mov
xor
shrb
mov
stc
lret
into
sbb
pop
addr16
shll
inc
gs
push
sub
xchg
lret
xor
pushf
adc
frstor
int3
push
cld
arpl
sub
aas
enter
out
dec
dec
iret
shlb
shl
pop
int
inc
iret
and
out
lock
inc
and
shll
lret
xchg
add
lahf
xchg
or
add
xor
jno
mov
sbb
inc
jecxz
daa
cwtl
ja
fisubl
inc
push
in
test
push
test
xchg
pop
adc
lods
int3
inc
in
stos
in
mov
fsubl
inc
cmc
xchg
mov
sbb
popf
jecxz
mov
mov
outsb
sbb
cmpsb
jp
and
cltd
call
add
das
sbb
mov
adc
xchg
and
sbb
lds
in
cmp
fadds
sbb
pop
mov
loope
sub
or
cmp
and
sbb
xlat
mov
hlt
xchg
adc
aad
scas
push
jmp
jae
out
and
dec
into
cli
imul
cmp
icebp
push
js
sub
mov
dec
cld
xchg
stos
pop
dec
enter
add
push
outsl
imull
hlt
inc
pop
es
pop
dec
mov
cmpsb
ret
inc
and
xchg
mov
in
push
xchg
jb
repnz
dec
mov
sub
iret
repnz
ficomps
push
mov
xchg
out
inc
stos
imul
cmp
loop
xchg
popf
xor
out
xchg
push
jecxz
into
in
mov
sbb
jle
sub
push
cmp
inc
es
hlt
xor
mov
shrb
mov
add
repnz
pop
push
scas
xchg
lret
ret
pop
sbb
in
ljmp
pop
and
aaa
rcll
iret
or
xlat
sti
jnp
mov
fidivs
xor
arpl
fadds
mov
mov
repz
movsl
sti
or
inc
xchg
fsubr
lods
push
and
fidivrs
cmpsb
std
push
jmp
and
lcall
sub
in
jle
xor
aas
std
pop
mov
daa
lret
xor
je
inc
into
adc
inc
loopne
xchg
mov
mov
in
or
jp
jnp
jae
addr16
push
and
repz
xchg
fwait
rcrl
in
add
bound
int
sar
in
push
cltd
xor
sbb
test
cltd
inc
adc
xchg
jae
int3
cmpsb
add
int
in
push
pop
fs
push
sti
xchg
sub
clc
or
jp
js
std
out
sbb
ljmp
shlb
jns
xchg
xchg
xor
fcmove
or
std
sarl
add
pop
inc
sti
pop
push
push
add
or
mov
dec
rcl
fsubs
stc
cmp
pop
addr16
stc
or
clc
std
xchg
jno
shrl
xchg
sbb
add
test
xor
test
or
dec
orb
scas
mov
leave
in
xchg
xor
sbbl
lods
out
inc
sbb
push
fidivrs
adc
mov
shl
push
or
inc
fstpt
in
xchg
push
arpl
movl
aad
int3
mov
fiaddl
loope
fistpll
cmpsb
gs
nop
or
lock
popa
push
test
add
jae
inc
and
shlb
push
jg
fcmovne
loop
jg
xchg
mov
imul
push
cmp
adc
sub
or
fwait
inc
adc
xor
cli
push
push
xchg
or
ret
mov
fcomip
cmp
movsl
cli
push
out
leave
scas
mov
adc
idivb
aam
enter
jmp
cmp
dec
into
xchg
push
in
into
mov
push
inc
lods
cltd
es
fcoms
std
mov
ret
aaa
ss
cs
xchg
fstl
in
mov
std
dec
mov
insb
cmp
lret
mov
pop
ret
sub
add
aad
rcll
adc
or
inc
push
cmpsl
jno
aad
mov
sub
xor
jno
lret
xor
push
rcrb
cmp
clc
imul
pop
pop
inc
in
pop
scas
daa
outsb
in
ret
repz
in
iret
push
jae
xchg
pop
out
xchg
scas
or
pop
and
sub
mov
out
lods
or
mov
sub
out
add
ror
and
mov
cld
xchg
mov
jne
sub
mov
imul
in
cld
pmuludq
push
inc
dec
icebp
adc
dec
loope
fnsave
dec
adc
addr16
lds
cli
cmp
ret
andl
decl
xor
cmp
lea
fs
inc
movsb
adc
pop
bound
jl
or
mov
xor
add
mov
cmp
mov
rorl
lahf
ret
ljmp
mov
mov
ror
add
in
repz
mov
ret
test
sarb
imul
mov
xor
jo
inc
pop
or
jle
push
sub
in
fcoml
fcmovu
ret
jne
je
sbb
cmp
lea
lods
push
cs
cli
sarl
js
loope
out
add
xchg
sub
jle
push
aad
mov
or
nop
xchg
loope
int
iret
fs
popf
dec
loope
outsl
jmp
dec
andb
out
ror
rorl
jecxz
aas
adc
mov
sub
xor
jg
push
xor
cmp
les
pop
es
iret
fisttpl
je
pop
outsl
sbb
pusha
sti
lods
orb
je
pop
xor
or
inc
std
arpl
mov
arpl
test
ljmp
sub
xchg
add
sub
popa
dec
dec
sarb
jnp
add
push
jbe
fldcw
push
mov
sbb
insb
mov
fstl
je
shll
mov
adc
adc
ja,pn
push
scas
inc
loope
es
je
lret
int
xor
sub
sub
sub
int3
and
adc
push
aad
sbb
push
mov
xor
mov
ficomps
xor
xor
or
popf
sbb
icebp
out
adc
cltd
xchg
push
xchg
lods
daa
ds
lods
dec
filds
pop
add
add
es
sub
inc
fnstenv
xor
fstp
fisubrl
sbb
scas
loopne
cmp
std
xchg
scas
sub
test
outsl
in
stc
mov
je
pop
lods
inc
and
adc
cmp
dec
adc
pusha
dec
dec
jecxz
popa
lds
dec
mov
inc
add
or
flds
into
xchg
pop
pop
cld
lods
daa
mov
fidivs
mov
xchg
fiaddl
xchg
sbb
pushf
mov
adcb
xchg
xchg
cs
mov
lods
jbe
pop
push
push
mov
daa
mov
add
and
dec
jbe
std
insl
out
ljmp
inc
cmp
std
xchg
lock
rcpps
insb
jbe
int3
arpl
es
rorb
daa
fdivrs
cmp
scas
push
jae
cld
push
inc
xor
dec
je
insl
rcll
push
repnz
adc
mov
or
jmp
fiaddl
dec
push
scas
js
stos
add
test
mov
cld
add
adc
push
push
fucomp
push
lods
loopne
sahf
jno
sub
stc
test
mov
pushf
out
mov
xchg
cmp
repnz
and
jmp
push
daa
dec
repz
and
pop
loopne
cmp
test
ljmp
lea
or
pop
mov
and
push
repnz
push
js
dec
fcmove
mov
shl
inc
sarb
out
insl
shlb
sbb
das
fstpt
and
xchg
pop
cmp
ret
push
mov
outsl
xor
mov
aad
in
divb
xchg
sub
mov
pop
dec
jo
pop
scas
daa
cmp
cltd
dec
loop
dec
mov
aam
lock
ret
sub
inc
out
push
loopne
pushf
inc
std
add
adcb
pop
dec
loopne
xchg
pop
das
add
sub
inc
pop
lock
sub
inc
mov
adc
jle
nop
lods
lcall
aas
aas
mov
mov
push
adc
sbb
pop
arpl
and
fidivs
push
mov
ja
movsl
and
mov
hlt
xchg
inc
cmp
xor
outsb
imul
nop
mov
jbe
lods
sbb
add
andb
pop
not
int
jmp
mov
pop
or
movsb
in
jge
push
mov
mov
and
cmpsl
popa
imul
movsl
xchg
push
mov
push
lods
loope
inc
fisttps
mov
cmp
jae
mov
andb
in
insb
fwait
inc
es
ss
fwait
scas
or
cli
pop
and
pop
pop
fsubl
add
lds
cli
lea
mov
xchg
cs
mov
test
mov
dec
dec
pop
fsubrs
push
imul
jmp
pop
lea
into
mov
pop
dec
mov
je
mull
outsb
jno,pn
std
xorb
sub
mov
out
bound
mov
jg
mov
adc
pushf
cmp
movsl
cmpl
push
push
rcrb
adc
adcb
or
cmp
jnp
pusha
frstor
mov
outsl
cmp
insl
imul
enter
repz
les
fadds
pop
mov
push
xchg
aaa
mov
add
pop
cmp
cmp
and
add
cmp
push
pop
ret
les
xlat
es
iret
insl
loopne
xchg
pop
iret
ljmp
sub
loopne
ja
addl
dec
icebp
ss
jmp
fs
rorb
negl
mov
lret
and
inc
fnstcw
out
popa
rolb
aam
arpl
inc
pushf
les
lahf
ret
mov
mov
inc
imul
lahf
orl
outsl
inc
fcoms
cs
dec
jb
stos
outsl
out
fwait
test
dec
pop
call
les
fwait
rep
or
in
and
cwtl
mov
pop
push
stc
pop
jl
push
sub
test
nop
xchg
mov
mov
dec
jnp
mov
jno
scas
das
cmp
test
dec
sar
push
add
mov
fwait
mov
sbb
idivl
xlat
and
sti
jne
fcoms
xor
stc
rcrl
fidivs
rorb
test
int3
push
jmp
sbb
outsl
lret
sbb
mov
sub
pusha
lahf
lds
push
cmpsl
arpl
inc
andb
sbbl
pop
push
dec
outsb
das
loopne
lods
cmpsl
or
pop
into
lcall
or
mov
hlt
and
jecxz
stos
arpl
add
jl
pop
push
call
pop
imul
in
movsb
jno
push
add
or
xor
orl
xor
test
jnp
jns
sbb
adc
mov
movsl
jb
add
test
sti
push
add
lea
pop
stc
xchg
dec
or
and
out
jae
mov
cmp
inc
sbbb
aas
movsl
stos
inc
adc
jecxz
or
dec
pop
hlt
xchg
lock
mov
or
lock
cld
lret
insb
mov
movsl
xchg
ret
push
popf
fwait
or
stos
sub
movsb
arpl
or
ss
cmpsl
xor
dec
jecxz
shll
shlb
xor
lds
movsl
aad
int
lds
insl
bound
push
mov
mov
mov
cmpsb
add
adc
jmp
imul
cmp
push
loope
nop
add
fidivs
cmp
scas
dec
out
test
out
ja
cld
mov
stc
mov
cs
outsl
icebp
cmp
and
pop
adc
ret
mov
push
and
enter
dec
arpl
scas
insb
xchg
and
adc
inc
xchg
cs
into
push
mov
xor
add
lea
fnstsw
jne
add
push
add
dec
test
sbb
jb
push
popf
je
popa
jl
movsb
inc
add
mov
pop
out
hlt
cmpb
out
jmp
and
stos
test
pop
xchg
loop
and
repz
mov
hlt
push
ss
sbb
jne
pop
movsl
icebp
rcrl
add
jbe
pop
dec
mov
sbb
jne
mov
mov
or
jne
arpl
inc
xchg
cld
push
pop
rclb
or
dec
pop
movsl
push
sbb
ficoms
mov
out
sbb
mov
jg
sbb
repnz
pop
mov
int
fnstsw
jo
adc
mov
call
lock
and
mov
dec
dec
insl
jle
sahf
cmpsl
in
fld
pop
sub
xchg
sub
mov
xchg
pop
js
pop
out
mov
xor
lcall
xorb
dec
out
call
cmp
gs
fidivrl
xor
or
push
xchg
jnp
mov
arpl
pop
mov
xchg
icebp
mov
cli
cmp
jae
daa
outsl
lods
and
mov
jp
fimull
mov
add
mov
fldenv
fbstp
fsubp
push
cmpsl
or
mov
in
test
lret
cmpl
daa
inc
lcall
sub
subb
or
stos
jbe
lods
dec
push
sbb
ljmp
push
lret
fimuls
ja
jmp
sub
sub
rcrb
out
in
shrl
lret
outsl
sbbl
ja
ret
lds
pop
je
cmp
mov
mov
or
mov
jg
dec
cli
adc
sbb
dec
in
into
cmc
jmp
xor
ss
loope
insl
rcrb
imul
mov
xchg
sbb
lock
divl
rcll
andps
inc
pop
adc
cmp
mov
aas
aam
lods
stc
cmp
cmp
mov
cwtl
imul
ds
mov
imul
mov
push
dec
fwait
xor
repnz
int
fdivl
out
jo
sub
adc
add
loop
scas
add
mov
fistl
cmp
jmp
lods
loopne
popf
fadd
inc
pop
sub
enter
mov
push
inc
jmp
jo
mov
and
adc
jle
ja
pop
iret
loop
jmp
stos
mov
rolb
cld
push
jb
andb
dec
jnp
or
adc
push
lods
in
jne
xor
push
push
sbb
adc
test
test
imul
call
bound
pop
ljmp
push
inc
je
inc
aad
cmpsl
dec
sbb
in
mov
jns
fcompl
pop
push
into
sbb
sbbb
inc
in
mov
lods
push
inc
adc
clc
je
mov
ja
dec
push
push
in
mov
sub
lret
adc
mov
xchg
sbb
rorb
ljmp
cmp
and
push
xor
inc
stos
dec
fiadds
data16
lock
jnp
add
dec
ficoms
ja
mov
mov
add
mov
outsl
push
xorl
xorb
jb
mov
jnp
lahf
xor
and
mov
jb
pop
out
jno
in
scas
dec
inc
mov
gs
or
jnp
call
test
pop
jnp
adc
lods
jno
xchg
jg
stc
ret
je
inc
sti
dec
sar
mov
testb
clc
fcom
jmp
lret
and
loop
inc
push
shlb
lahf
loopne
aas
xchg
xchg
sbb
push
cmpsl
dec
rcrb
mov
jne
jecxz
fs
xor
out
dec
roll
or
jle
out
mov
aas
or
cld
pop
inc
aas
into
lret
lret
shl
push
xchg
push
cmp
xor
in
mov
insb
aad
add
push
jg
push
jne
popa
into
push
sarb
sti
sahf
add
je
inc
xchg
call
mov
aas
sub
add
inc
scas
add
fsubr
cwtl
inc
xor
sbb
sbb
roll
xchg
inc
jecxz
pop
sbb
fidivl
pusha
mov
mov
cmp
div
xor
ja
mov
cmp
mov
pop
xchg
sti
faddl
cmpsl
mov
sbb
decl
xor
cwtl
inc
loopne
aas
inc
push
cmc
mov
sub
popa
add
cmpsb
mov
dec
push
jne
loope
sbb
shll
jbe
loopne
cvttps2pi
xchg
and
minps
loope
or
xlat
sahf
clc
out
outsb
sub
jg
das
stc
push
sarl
push
add
adc
cltd
inc
jecxz
xor
fsubl
in
push
jmp
imul
lods
sub
sahf
lods
dec
pop
lret
xchg
xlat
repz
sti
inc
cmp
and
dec
sub
mov
mov
mov
xor
and
insb
xor
aam
jae
ss
in
push
jle,pn
or
inc
lods
dec
rep
xchg
adc
xor
in
aas
loope
or
xor
mov
mov
in
rorb
dec
inc
imul
nop
or
inc
ss
or
loope
and
jb
adc
dec
mov
mov
fisubrs
inc
jne
jle
fidivs
jne
inc
testb
dec
and
cmp
lcall
xor
loope
adc
and
pushl
leave
popa
pop
frstor
or
mov
push
push
ror
push
mov
fsubl
shrl
ret
sub
sub
or
sbb
dec
pusha
bound
pop
or
xchg
repz
cmpsl
pusha
adc
out
push
sarb
fistpll
mov
jne
into
das
decl
adc
bound
sub
cmpsb
popf
xchg
arpl
in
cmp
fidivl
fistl
cmp
cmp
test
jl
mov
mov
jl
pop
mov
mov
rolb
cmp
xor
cld
subb
push
and
add
xor
push
mov
jg
loope
lods
adc
jg
out
lcall
arpl
push
loope
cmp
jl
stc
nop
repz
mov
mov
mov
mov
push
imul
xorl
adc
loope
icebp
sarb
jge
jns
and
test
mov
pop
out
in
pushf
cmp
sub
cmp
out
push
jmp
fwait
jecxz
popf
popa
push
sbb
and
and
into
add
jge
mov
cmp
push
lock
push
fiaddl
fs
sbb
xchg
xchg
gs
out
pop
loop
mov
push
or
or
xor
ljmp
scas
mov
xor
xchg
push
cli
in
push
or
dec
jl
xchg
fwait
xlat
pop
addr16
or
xor
es
sbb
shll
adc
and
rorl
es
cmp
in
jle
int3
xlat
xchg
imul
lods
pop
jg
xchg
adc
mov
icebp
inc
rcrl
mov
test
shrl
inc
shlb
sbb
js
cld
stos
stos
adc
adc
pop
and
mov
lret
int3
xor
enter
jmp
test
mov
xchg
fidivs
popa
xchg
push
out
xlat
jo
aad
mov
jo
cmpsl
cmp
adc
aad
and
cs
pop
add
jnp
or
stos
arpl
ss
pop
mov
xor
sub
lret
sub
xor
insl
lret
inc
jg
xchg
ss
icebp
inc
sub
mov
aas
dec
and
std
sub
mov
sti
movsl
inc
pushf
add
or
add
mov
stos
xor
shll
cltd
std
rorl
cmpsb
sti
sbb
xor
sbb
mov
shlb
xchg
lret
jmp
mov
popf
loop
loopne
nop
sub
jns
mov
int3
hlt
mov
fbstp
sbb
jno
fldl
dec
test
mov
xor
jo
daa
pop
filds
jbe
fbld
mov
lods
aam
addr16
pop
push
pop
pop
cmp
push
ret
nop
sub
das
scas
xor
xor
lcall
divl
std
ds
push
in
add
sub
and
notl
js
out
cmpsl
insb
je
push
fiadds
loopne
cmp
orb
testb
cmp
test
dec
leave
stos
add
aaa
imul
hlt
mov
pop
mov
sbb
dec
bound
push
imul
and
adc
jns
fwait
pop
sub
mov
mov
sub
pop
or
sub
stc
pop
xchg
push
jl
jmp
and
xor
add
xorb
sti
inc
cltd
pushw
imul
mov
jmp
fldcw
jmp
incb
xor
decb
pusha
and
cmpsl
shll
movsl
hlt
in
test
std
fdivs
dec
cli
xchg
pop
mov
pop
mov
shlb
sub
decb
xor
mov
adc
xchg
sub
and
xor
sti
inc
insl
or
dec
addr16
xor
adc
rclb
sbb
movsb
ret
std
and
jb
ret
scas
mov
sub
mov
jbe
fildl
xchg
sbbb
mov
push
loope
or
stos
fistpll
sub
call
ss
or
dec
add
cmp
mov
mov
popf
cwtl
pusha
adc
mov
dec
orl
insb
mov
jp
sub
jmp
orl
add
cmc
mov
push
stos
fwait
mov
ror
add
mov
fiadds
jbe
push
ljmp
xchg
jno
pop
sub
cmpsw
lahf
hlt
fucomp
xor
dec
cmp
cmc
orl
inc
mov
fsubrl
int
jns
popf
mov
pop
and
dec
rorb
pop
cmp
fiadds
xor
pop
sub
ret
xor
mov
fldenv
and
scas
fwait
inc
lods
and
jl
or
fstpt
lds
repz
push
xor
idivl
call
xchg
pop
insb
pop
sbb
pop
sub
jp
xchg
mov
pop
test
fists
ret
xor
push
out
idivl
repnz
movsl
mov
push
xchg
jl
data16
pop
or
aam
add
jmp
jnp
xchg
jmp
dec
in
lcall
lds
or
jge
inc
inc
lods
mov
nop
es
mov
push
mov
cld
addl
lcall
or
sbb
decl
cmp
out
sbb
pop
jecxz
cmp
sbb
aas
xlat
mov
iret
cs
pushf
test
and
ret
push
insl
mov
mov
loopne
push
pushf
cli
fisttpl
dec
cmpsb
cmp
sub
repnz
outsb
sbb
dec
lret
or
xlat
sub
roll
and
xchg
fldl
in
mov
mov
js
pop
das
fwait
aaa
xchg
icebp
sub
mov
push
ja
add
jns
xchg
aas
faddp
loope
pop
adc
push
daa
mul
mov
xchg
sub
aam
pop
mov
test
adc
pop
mov
dec
pop
fs
adc
mov
lahf
into
iret
xchg
andb
jo
cmp
fisubrs
sbb
mov
xchg
mov
push
test
test
mov
cmp
ja
dec
sbb
rcrb
aad
mov
pusha
sti
je
cli
scas
inc
adcb
arpl
push
and
jno
loopne
xor
test
std
xor
adc
pop
push
imul
in
or
pop
push
daa
mov
rcrl
in
fidivl
lods
iret
add
mov
or
fdivr
lcall
in
cmpl
lea
add
cwtl
cli
mov
sub
ret
dec
push
push
daa
jb
dec
jnp
xor
es
mov
cwtl
ljmp
inc
push
ds
sbb
mov
call
cwtl
cmp
add
fwait
arpl
cmc
dec
aad
aam
test
push
repz
dec
jge
sbb
pushf
inc
movsb
cmp
jnp
les
popl
add
mov
and
test
push
mov
xor
sub
add
cmp
jno
cmp
mov
imul
push
dec
dec
pop
xchg
pop
in
jg
mov
add
sbb
sub
sub
adc
sub
decl
push
mov
in
ljmp
sbb
in
das
mov
std
adc
mov
xor
std
cmpsl
dec
popa
jmp
test
scas
pop
dec
or
push
mov
fisttps
or
in
sub
imul
jno
jge
repz
aam
nop
push
mov
loope
dec
push
in
je
inc
mov
or
xchg
mov
fwait
mov
mov
rclb
cs
or
and
jl
or
stc
push
imul
mov
outsb
pop
cmpb
push
shrb
mov
adcl
icebp
insb
dec
cmc
cmp
jo
lret
mov
mov
and
xchg
sbb
ss
jl
loopne
xor
cmpsb
jne
fidivs
add
outsb
popa
jns
dec
inc
or
cmpsl
lock
jae
and
dec
mov
push
aam
sti
inc
out
stos
pop
loopne
jnp
loopne
xor
fmuls
aas
sahf
insl
mov
das
inc
sub
gs
jg
dec
push
or
lock
fbld
enter
scas
hlt
std
lods
xchg
and
iret
dec
leave
out
jg
sbb
lods
popf
or
rclb
jo
lret
mov
and
mov
sub
mov
in
imul
pop
add
and
out
insb
ljmp
xlat
xor
aad
rclb
js
cmp
mov
cvttps2pi
pop
mov
repnz
ficomps
xchg
xlat
pop
mov
dec
mov
fs
test
xchg
ja
push
les
or
nop
xchg
fsubrp
push
daa
sahf
repnz
lcall
push
mov
leave
mov
mov
lcall
cwtl
gs
and
fdivrp
mov
fs
dec
scas
mov
cmp
sub
mov
outsl
jo
repz
nop
imulb
or
jae
and
ficompl
lods
fmull
jge
sbb
imul
push
mov
or
jo
mov
cmp
mov
scas
fsubs
sub
dec
sub
push
xor
imul
mov
mov
ss
and
push
mov
into
dec
jge
push
push
sub
cmp
aad
out
aad
fisubrs
in
loop
iret
jecxz
jns
push
mov
imul
out
xchg
cmc
popa
or
add
cwtl
push
add
fwait
gs
cmp
jl
hlt
jp
pop
out
and
push
cli
rcll
scas
in
add
push
xor
js
jb
mov
in
clc
loop
jbe
inc
sbb
xchg
dec
jecxz
repnz
cmp
insl
pop
lods
pop
inc
mov
dec
enter
scas
rcll
outsl
push
hlt
mov
sbb
sar
push
stos
add
dec
outsb
cli
and
in
push
sbb
push
out
jp
and
dec
aam
jl
rcrb
and
and
imul
or
ljmp
cmp
stc
or
loop
aam
orl
outsl
xchg
scas
xor
mov
test
push
test
inc
adc
orb
push
pop
outsb
aad
push
nop
push
scas
inc
inc
mov
push
inc
out
dec
dec
loopne
sbb
mov
push
stos
inc
mov
dec
jne
push
cwtl
adc
or
mov
mov
call
fistps
adc
idivb
or
dec
and
sub
sbb
mov
fldenv
hlt
stos
adc
mov
popa
jl
aad
imul
mov
scas
push
testb
imul
subb
lds
testb
push
outsl
push
nop
xchg
icebp
movsl
inc
mov
cmp
out
mov
inc
addr16
push
cwtl
or
xor
fcomip
inc
ror
bound
popa
jbe
iret
idiv
sahf
daa
out
inc
push
sub
int
xlat
stos
mov
push
mov
lds
xor
xchg
add
outsl
xchg
sbb
testb
mov
mov
push
jb
cmp
sbb
mov
rcrl
push
inc
adc
sbb
inc
xor
mov
lahf
sahf
adc
in
pxor
cltd
test
jmp
mov
les
test
pop
mov
jmp
xchg
push
loopne
mov
mov
or
sbb
mov
incl
lret
mov
inc
in
outsb
and
mov
daa
mov
or
loop
cmp
xchg
in
mov
fwait
and
jb
mov
stos
scas
bound
lret
cmpsb
lock
and
add
adc
adc
and
shrl
xchg
cmc
bound
mov
es
mov
pusha
divl
jbe
sub
jle
leave
lea
in
mov
sub
cmpsl
jbe
add
lock
or
sub
add
sbb
push
and
int
out
mov
test
into
not
jmp
popa
cmp
test
pop
cmc
mov
fisubrs
xchg
lods
js
pop
daa
into
sbb
add
cmp
xchg
sbb
test
add
out
mov
in
cmpsl
sar
lea
and
push
stos
xor
mov
in
push
mov
or
cltd
sub
inc
xor
or
inc
test
jp
ficoml
aam
fwait
pop
pop
cmp
addr16
daa
xchg
mov
xchg
loope
test
cmp
mov
adc
cs
cs
dec
fsubrs
and
adc
or
gs
fnstenv
in
xor
inc
or
jle
test
sub
push
dec
sub
std
hlt
sbb
enter
xchg
jp
out
mov
and
out
lcall
cmp
jo
jmp
and
mov
lods
inc
popf
mov
cmp
int3
and
leave
mov
idivb
aas
mov
les
cmpsb
inc
jmp
or
jp
ja
add
fisttpll
nopl
mov
mov
sbb
ret
sbb
pushf
pop
pop
xchg
lods
clc
cwtl
pop
sub
jo
add
jae
loop
fistpll
pop
scas
jg
mov
les
in
xchg
pop
cld
popa
dec
in
pop
xor
mov
and
adc
push
push
mov
pop
das
mov
ljmp
inc
fdivr
sti
fsubs
xchg
fmul
enter
bound
add
dec
ret
xchg
js
in
jne
pop
daa
stc
xorb
adc
fwait
cmp
or
out
and
out
pop
adc
adc
xor
bound
cmp
sarl
push
xchg
dec
add
jbe
imul
pushf
jge
lret
mov
int
mov
pushf
loopne
fprem1
cmp
ss
dec
shl
outsb
aad
cmc
iret
cmpsb
add
sub
icebp
pop
sbb
mov
xchg
or
sbb
rcr
cmp
scas
mov
bound
dec
jne
pop
sub
xchg
mov
dec
sbb
in
sbb
inc
jne
fwait
mov
and
lock
inc
sti
sbb
cmp
inc
test
push
xchg
in
xor
cmp
xlat
insb
jecxz
pop
push
arpl
inc
xchg
pusha
sahf
xor
call
flds
test
stc
outsb
mov
outsl
cmpsl
stc
sub
xor
mov
pop
into
out
iret
xlat
fwait
repnz
inc
fsubrl
and
lea
or
mov
enter
icebp
jmp
jb
test
lret
lock
loope
aad
cmp
cmp
pop
insl
add
dec
mov
scas
inc
and
fwait
test
popf
lret
cmc
sti
pop
and
xor
jge
out
mov
jle
adc
inc
jg
std
or
mov
dec
sub
outsb
mov
xlat
cmp
xchg
sub
cmp
mov
add
or
mov
jb
jl
and
add
jnp
cmp
xlat
adc
sbb
aad
mov
cmpsl
cmp
mov
xor
imul
rol
rcrb
lods
xor
popa
imul
adc
mov
push
scas
insl
in
push
addr16
sbb
xchg
jg
fwait
rorl
stos
loopne
icebp
outsb
cmp
sub
and
in
popa
rcll
mov
xor
pop
mov
in
rcrl
mov
sub
jo
cs
das
gs
mov
xor
sarb
pop
sub
and
fimull
mov
add
scas
or
mov
mov
sarl
xchg
gs
nop
mov
les
add
xor
dec
sahf
lods
inc
sbb
stc
inc
sbb
cmp
and
insl
sarb
andb
sub
fs
or
or
jno
icebp
negb
cld
imul
mov
push
or
add
xor
test
leave
inc
mov
inc
pop
dec
push
in
jnp
lret
lock
xorb
shl
xchg
cmp
xlat
cmp
test
out
cmp
adc
mov
test
sahf
mov
lods
sub
push
enter
push
mov
cmp
cmp
add
ror
mov
push
mov
cltd
mov
mov
cmpps
popf
add
repz
sbb
imull
adc
mov
sub
aas
testl
sbbb
popa
out
push
pop
mov
rcrl
in
xchg
icebp
lret
bound
cmp
lock
aaa
or
into
int3
push
inc
gs
jl
sbb
ds
gs
sbb
cltd
xchg
in
test
clc
cmpsl
test
mov
xchg
lret
or
inc
jp
stos
lods
gs
lock
out
dec
mov
fwait
loope
cmp
cmp
xlat
inc
cmc
adc
cmp
dec
or
js
sub
lock
cmp
sbb
xchg
mov
sub
test
repz
nop
ds
fwait
xor
cmp
stos
add
xor
pop
leave
pop
dec
and
out
mov
add
fwait
sub
es
orb
movsl
lods
fcoml
sub
stos
pop
mov
sbb
les
inc
cltd
imul
push
pusha
cmp
pop
out
mov
test
adc
arpl
mov
xlat
cmp
push
cmp
aaa
pop
or
sbb
in
iret
das
xchg
mov
rcr
add
mov
rcrb
popa
push
mov
inc
mov
imul
and
sbb
pop
mov
fcomps
loope
lock
push
scas
push
cmc
sti
inc
push
xor
jmp
jl
jo
shll
arpl
mov
imul
jge
jnp
repnz
pushf
dec
mov
shll
daa
jbe
sarl
pop
mov
jae
fcmovnu
sub
aas
clc
or
loop
mov
pusha
pop
jmp
jb
xchg
xor
out
scas
and
cmp
lcall
mov
dec
in
out
mov
xchg
insb
add
fimuls
aam
xor
xorl
push
pop
push
push
xlat
es
js
dec
call
adc
daa
or
scas
adc
push
mov
mov
and
push
into
das
addr16
daa
shrl
notl
push
fwait
dec
es
daa
es
scas
sbb
jo
dec
sbb
inc
int3
idivb
sbb
xchg
push
ljmp
jno
insb
pop
rcrl
xchg
push
fists
lea
sub
shll
add
sub
cwtl
or
and
mov
jecxz
jge
and
subb
xor
imull
mov
jae
rcl
xchg
xchg
repz
mov
mov
shl
dec
push
dec
in
cmp
out
je
sbb
push
leave
jne
push
cmpsl
mov
gs
sbb
pop
fsts
or
lahf
mov
dec
push
negb
sub
shll
and
mov
cmpsb
cwtl
jge
iret
dec
and
loop
pop
cmp
sbb
shl
icebp
movsl
sub
repz
stos
int3
fstpl
jbe
cs
push
or
add
inc
popf
jmp
cmp
cmp
xor
sub
subl
jb
imul
imul
xchg
mov
xchg
cli
out
jmp
pusha
mov
scas
popl
testb
inc
mov
xor
sub
push
inc
sbb
push
call
js
inc
lods
nop
dec
in
mov
bound
xchg
sbb
jmp
push
mov
into
pop
ret
inc
push
jno
xchg
dec
mov
and
outsl
and
ret
repz
inc
dec
push
jb
jb
out
in
lahf
cld
xchg
inc
lods
cmp
xchg
mov
fucomp
dec
push
cli
xlat
xor
dec
push
imul
push
jl
jmp
or
shrl
aam
les
mov
cmp
out
add
jl
cmp
out
faddl
mov
xor
jne
pop
mov
fstpl
xchg
add
jmp
dec
push
cwtl
jp
xchg
loopne
fs
mov
adc
cmpsl
mov
sub
push
mov
fscale
mov
aam
mov
mov
pop
fs
stc
mov
sub
jo
enter
sub
into
repz
add
ljmp
add
or
stc
sub
sub
repz
add
sbb
inc
arpl
shrb
test
sbb
cmp
mov
mov
outsl
ror
flds
cmp
mov
icebp
dec
sbb
mov
ds
jmp
je
in
in
pop
mov
push
bound
adc
data16
call
or
mov
mov
lods
sti
loope
popa
testl
jle
fnstcw
push
popa
test
xchg
adc
adc
inc
mov
jns
pop
scas
sbb
lcall
mov
mov
push
sub
pop
mov
andl
test
xor
or
adc
push
mov
cmp
sub
decb
mov
sub
and
adc
test
int
ficomps
rorb
pusha
mov
in
push
add
repz
lret
iret
test
jb
push
outsb
adc
jo
jo
pop
mov
add
cmp
icebp
sub
mov
adc
je
mov
push
dec
in
ret
pslld
ja
jg
movsb
repnz
and
in
cmpsl
insl
or
fistl
out
add
insl
push
pop
pushf
dec
nop
daa
addb
cli
cltd
xor
sti
shld
repz
xchg
pop
sub
data16
mov
scas
xchg
fbstp
shl
jnp
hlt
stos
out
call
nop
push
sub
mov
ret
or
loope
fisubs
dec
iret
dec
mov
adc
xchg
jp
enter
pop
add
inc
rol
inc
lods
scas
add
pop
add
push
mov
ret
ja
sbb
sbb
jo
push
idivl
mov
dec
and
push
fnstsw
in
dec
pop
inc
jae
test
adcb
xor
popa
sbbl
push
jmp
push
inc
pop
or
out
out
mov
add
cs
fwait
cmpsl
add
verw
mov
pop
icebp
lods
inc
xchg
adc
repz
enter
inc
daa
repz
and
xor
js
imul
pushf
inc
nop
pop
sub
mov
mov
inc
and
xor
out
rcl
pushf
jo
inc
out
popa
fsubr
mov
out
mov
int
xchg
insl
sbb
addr16
cltd
rcrb
daa
cli
jle
jp
xchg
jno
ret
sbb
ret
jecxz
cwtl
inc
xchg
mov
std
inc
adcb
jge
mov
mov
insb
add
sbb
xchg
sti
add
jno
mov
or
pop
mov
mov
push
mov
data16
jae
xchg
inc
jl
xchg
cmp
dec
push
jmp
jp
jo
imul
inc
call
dec
xor
fwait
repnz
insl
sbb
mov
aas
push
ja
ss
xor
outsb
loope
jmp
ss
push
out
xor
push
jne
mov
scas
or
mov
jecxz
imul
xor
push
shrb
push
fadds
sarb
aaa
stos
lds
movsl
inc
dec
test
popf
add
push
xchg
in
icebp
xchg
sub
jecxz
movsb
mov
or
cld
dec
mov
ret
mov
pop
les
sub
inc
add
and
jbe
push
mov
adc
mov
into
inc
adc
jb
sbb
rcll
cmc
mov
out
ret
popf
cli
aas
xchg
loope
push
out
add
outsb
orb
jge
cmc
je
lea
test
pop
add
and
mov
lods
rol
push
jbe
hlt
cmp
ret
mov
jae
inc
xlat
test
mov
push
mov
and
push
sbb
and
stc
xchg
sub
ffreep
mov
iret
ja
sarl
dec
mov
dec
pop
jp
inc
fstpt
adc
jmp
data16
push
push
stos
and
xor
mov
mov
daa
sbb
jo
filds
pusha
mov
sub
jae
adc
jle
lret
xchg
jno
add
in
lahf
loop
stos
ficompl
xor
mov
lcall
insl
add
rorl
mov
iret
jp
nop
daa
fidivl
int3
test
mov
mov
mov
fldenv
sub
mov
xor
xchg
rcrl
scas
push
xchg
mov
pop
je
out
jp
and
jle
sub
sbb
shll
test
mov
push
out
cltd
mov
xor
sub
add
hlt
mov
repz
insl
mov
orl
inc
push
incl
mov
pop
test
aaa
stos
rclb
cmp
addr16
inc
jne
lcall
push
inc
lret
xor
lret
or
xchg
pop
cmpsl
jge
repz
jecxz
or
mov
movsl
shrl
mov
pop
mov
adc
push
sbb
lods
mov
dec
fs
push
pop
movsl
icebp
or
test
es
add
addl
xchg
dec
int
jp
push
xor
jmp
adc
out
mov
push
sub
repnz
test
pop
out
ja
jge
movsl
adc
add
mov
mov
idivl
mov
mov
aad
movsl
lea
jle
ds
fnstenv
mov
ljmp
js
popa
lods
mov
jb
dec
call
in
sub
rorl
repnz
in
push
xchg
mov
cmp
ds
ljmp
scas
sti
pop
lock
rorl
popf
ret
es
ret
sbb
pop
outsl
mov
stos
movsl
je
push
divl
push
xchg
add
pop
int
mov
sbbb
sub
or
shr
cmpsl
mov
or
mov
cmp
push
movsl
and
jle
imul
fs
mov
and
xchg
sbb
in
xor
xchg
pop
lcall
xor
dec
es
add
fsubs
clc
mov
push
loope
push
ret
outsl
push
dec
pop
orl
rcll
push
xchg
imul
mov
sbb
iret
fistpll
or
dec
lret
mov
cld
push
sub
mov
rol
ret
loope
jl
int3
cltd
push
jo
dec
cmp
cmp
movsb
inc
pop
add
sar
std
xchg
cs
mov
cwtl
dec
mov
sbbl
mov
scas
into
adc
loope
out
xor
jae
mov
fiadds
add
fdivl
fildll
sub
movlps
dec
mov
jne
cmpsb
ds
arpl
in
push
lret
bound
das
jmp
arpl
aas
ret
ljmp
jne
das
addr16
call
leave
call
jbe
jo
pusha
jmp
inc
fcoml
cltd
imul
mov
dec
sahf
mov
andl
idiv
cwtl
pop
or
xchg
and
out
jae
rcll
fimull
in
das
cmpsb
stc
cmpsb
sub
xchg
pusha
inc
cltd
push
mov
out
xor
push
sbb
stos
lahf
mov
xchg
adcb
scas
cld
fdivrl
loopne
xchg
add
into
add
mov
jmp
mov
push
inc
lret
dec
movsl
sub
loope
cmp
mov
jl
mov
mov
rcr
sbb
adc
jge
push
mov
pop
cmp
fwait
add
cld
addr16
es
xorl
shrb
dec
sbb
and
sbb
push
es
div
cmp
cltd
test
lret
jge
dec
jecxz
sahf
dec
fnstsw
push
xchg
fnstenv
mov
mov
js
pop
daa
out
mov
jno
cmp
negb
add
add
ja
dec
dec
mov
fnstsw
lret
sbb
movsb
bnd
add
mov
das
mov
shll
call
imul
sbb
add
mov
push
out
cmpsl
cmpsl
mov
and
mov
jg
into
in
sub
repz
sbb
mov
pop
test
lods
inc
xorb
push
cmpsl
cs
pop
add
mov
push
repz
pop
jnp
add
lods
mov
idivb
lcall
outsb
push
mov
mov
andl
or
mov
lods
add
scas
inc
push
enter
pop
int
jne
call
dec
dec
das
andb
ja
loopne
lods
inc
and
int3
add
in
sub
nop
cmp
push
or
mov
push
xor
andb
sub
xor
out
xchg
pop
inc
fmull
scas
arpl
fildll
nop
mov
sbb
mull
scas
jmp
mov
inc
or
stc
mov
push
test
jae
dec
jg
cltd
sbb
and
dec
pop
inc
rclb
cmp
popf
inc
and
jns
mov
aas
mov
mov
xorb
test
mov
outsb
jbe
cli
pushf
xor
adc
ja
in
add
cmpsb
jns
and
loopne
in
sub
and
cmpsb
pop
push
add
adc
imul
adc
mov
xchg
loop
lret
xchg
sbbb
mov
loopne
jbe
mov
jge
ret
addb
in
in
int3
loopne
inc
leave
pusha
js
sub
je
jb
stos
inc
in
inc
ret
loope
push
and
add
inc
xchg
inc
pop
imul
adcl
lods
mov
push
xor
cli
cmc
xchg
lds
lcall
push
add
inc
rorb
cmp
pop
push
hlt
das
adc
call
dec
lock
and
das
mov
inc
push
or
jns
scas
mov
mov
data16
pop
mov
dec
mov
pop
loopne
pop
stc
adc
hlt
aas
or
jns
inc
push
iret
pop
push
fiaddl
jae
pusha
in
es
pop
mov
in
in
popf
int
inc
pop
shrb
add
mov
notb
mov
iret
add
mov
push
nop
es
push
rorb
add
inc
and
sub
inc
insb
sbb
jg
dec
add
sahf
inc
jge
xchg
sti
iret
fdivs
sbbb
mov
mov
mov
fisubl
repz
mov
imul
mov
iret
es
loopne
or
pusha
sub
mov
jmp
cmpl
inc
xchg
scas
and
icebp
xor
jb
xor
or
cli
sbbl
cli
dec
jge
add
mov
inc
push
cltd
ljmp
sub
popf
or
fisubrs
mov
out
ss
into
mov
push
and
addr16
inc
lods
ds
test
shlb
mov
xchg
ror
add
stos
mov
lcall
lock
aam
aad
mov
jg
jae
push
out
in
adc
lds
mov
out
mov
mov
pop
mov
jae
in
add
jnp
lcall
test
mov
cmpsb
cmpsb
scas
xchg
mov
mov
cmpsb
movsl
lock
inc
push
repz
ja
mov
sbb
push
sarl
test
lahf
jge
std
pusha
mov
mov
or
dec
pop
and
mulb
jle
cmp
mul
add
cltd
mov
lret
push
push
push
sarl
mov
or
clc
dec
dec
fwait
jne
pop
or
sbb
jns
in
lea
xor
or
hlt
and
sub
add
sub
into
sub
test
pop
lret
or
enter
imul
add
popf
stc
jp
clc
popf
add
cld
dec
into
push
ljmp
mov
sbbb
pusha
das
push
dec
loopne
aas
aaa
dec
outsl
cmc
xchg
mov
and
push
mov
sub
fstpt
repz
mov
inc
sbb
lods
mov
cld
lcall
push
icebp
call
ficoml
push
cs
insl
mov
scas
cmp
fsubs
idivb
icebp
iret
mov
add
mov
into
xchg
mov
push
and
test
xlat
mov
push
xor
fs
adcl
dec
adc
test
sub
push
or
scas
arpl
adc
push
xor
push
mov
mov
adc
xchg
jne
leave
mov
cmc
sar
and
lods
mov
jne
add
enter
xor
sub
orb
adc
mov
lods
sbb
popa
jbe
addr16
xor
push
jmp
fwait
insl
icebp
inc
fwait
adc
js
int
pop
sahf
or
inc
mov
inc
inc
mov
or
mov
gs
cltd
sub
push
adc
jbe
sti
inc
pop
mov
mov
sahf
add
scas
mov
jbe
xchg
loop
icebp
pop
popf
outsl
mov
js
lret
cmp
sbb
xor
cmc
fsts
lret
mov
xor
pop
idivb
data16
inc
in
fiaddl
mov
dec
inc
inc
divb
dec
fmull
cmpsb
mov
xchg
sub
lcall
sbb
sahf
dec
ljmp
fnstenv
mov
sbb
pop
xchg
cmp
xchg
aas
xchg
sub
xor
orb
negl
xor
inc
or
das
cli
shll
inc
aad
fsts
add
sbb
xchg
mov
adc
leave
leave
cmp
jle
lahf
or
pop
aaa
fsubl
mov
outsb
shll
lds
lahf
push
jge
adc
arpl
icebp
in
jge
subl
push
lret
test
aas
stos
sub
aad
pusha
ret
call
out
push
jecxz
mov
pop
jne
jae
jnp
sahf
sub
gs
dec
jmp
in
fwait
mov
arpl
call
mov
adc
fidivs
mov
rclb
test
push
mov
fmul
movsl
test
or
ljmp
leave
fsts
js
test
aad
outsb
pop
sub
data16
insb
repnz
inc
jnp
ljmp
xor
cmp
stos
push
dec
sbb
cmc
lret
xchg
jg
fnsave
iret
es
faddl
in
lods
and
int3
shlb
ret
cmp
jge
loopne
jno
adc
out
add
xor
ljmp
jnp
sar
pop
movsb
and
jnp
dec
in
jg
jnp
mov
ret
push
fwait
jbe
sbb
mov
dec
cmp
sbb
in
lods
in
loopne
mov
or
arpl
xchg
sub
iret
mov
dec
or
mov
pop
ret
lds
inc
pop
pushw
xchg
sbb
cmp
insb
out
or
jno
xor
fucomp
xlat
dec
in
mov
xchg
pop
rcll
sbb
bound
mov
pop
and
out
push
inc
pusha
jae
cmp
add
test
js
aad
daa
xchg
cmp
jne
push
ror
pop
push
jae
call
add
inc
mov
dec
and
or
dec
fldl
int3
fisttpl
adc
aaa
std
cli
scas
test
push
out
out
sbb
pusha
daa
imul
jmp
in
xchg
mov
std
push
cli
cmp
cwtl
dec
and
jns
andb
xchg
sub
push
push
mov
add
fadd
cmc
sub
or
clc
mov
repz
adc
mov
xchg
pop
dec
pop
xorl
xchg
add
addr16
insl
adc
dec
inc
dec
mov
movhlps
xchg
sub
mov
clc
xchg
sub
xor
out
jecxz
fistpl
cmpsb
xchg
mov
js
push
add
enter
push
dec
out
rcl
repnz
outsb
lahf
lods
fs
dec
mov
shll
and
and
fucomip
shlb
jo
xor
leave
adc
je
adc
mov
scas
test
popa
dec
mov
sbb
lea
mov
or
xchg
test
push
insl
sbb
repz
hlt
int3
mov
movsb
in
jl
pop
jecxz
aas
in
push
cmpsl
push
push
mov
or
frstor
push
mov
inc
data16
cmp
inc
bound
sbb
jns
aam
adc
incl
push
call
in
aas
lret
std
inc
cltd
movsl
lock
ret
aas
nop
pushf
pop
dec
dec
scas
test
data16
jns
inc
xchg
call
xchg
sub
mov
jl
jne
aam
dec
pop
stc
jo
popa
aaa
daa
fmuls
add
jb
sub
jle
xor
lods
and
jp
sbb
sarl
jns
aaa
or
cmc
lahf
nop
xor
imul
out
aas
es
sub
sbb
frndint
jo
or
jb
xchg
insb
xlat
in
aad
adc
lds
mov
mov
ret
in
aaa
sbb
add
mov
adc
bound
jp
inc
jbe
bound
mov
add
push
icebp
push
sbb
mov
enter
lods
icebp
outsl
push
testb
adc
adc
or
mov
add
add
sub
mov
push
imul
or
pop
mov
mov
stos
and
scas
mov
inc
adc
sbbb
cmp
mov
into
sub
push
sub
xor
loope
push
scas
mov
or
rcrl
mov
clc
imul
outsl
dec
and
pop
test
jmp
aas
dec
mov
imul
aam
enter
inc
mov
push
ds
sub
mov
in
into
scas
outsb
ljmp
out
add
adcb
test
mov
mov
push
int3
mov
dec
jp
adc
push
push
and
mov
lods
outsl
repz
std
lds
bound
cwtl
mov
mov
inc
push
pop
cmp
addl
movsb
loopne
test
xor
jns
addr16
sti
addr16
mov
pop
add
mov
test
jne
jo
and
mov
or
mov
sub
or
xor
pop
mov
inc
out
dec
sahf
xor
dec
lcall
ja
xchg
jmp
push
jmp
xor
inc
sub
fs
movsb
dec
shl
jle
fdivrl
push
nop
pop
jge
popa
addl
xchg
jmp
adc
fiaddl
inc
cmpsl
or
test
pop
and
push
fwait
fs
in
ja
lahf
jae
paddq
std
add
loop
nop
jno
movsl
fcompl
pop
in
aam
xchg
addr16
mov
rcrl
ss
test
sub
xor
int3
insl
loope
jmp
sahf
sub
sub
lret
aas
mov
sarl
test
inc
sti
cmpl
mov
mov
dec
hlt
cld
andb
repnz
pop
and
and
pop
fs
mov
in
sbb
adc
pop
sti
sub
aas
pop
inc
cli
sub
push
pop
inc
push
jne
mov
xlat
incb
outsb
js
andl
jo
jmp
mov
inc
fldcw
mov
push
push
cmpl
jb
xchg
xchg
sub
jne
ljmp
pushf
insl
mov
push
mov
lahf
hlt
out
mov
aaa
int
stc
stc
mov
fstps
ror
loop
loope
mov
es
jbe
in
aaa
add
jnp
mov
nop
cmp
fs
shlb
and
test
out
int
and
adc
bound
loope
nop
shll
test
jmp
inc
jg
lret
mov
xor
in
cwtl
push
mov
int
jae
inc
inc
xor
in
lret
pusha
jnp
test
jg
inc
xlat
push
popf
xchg
icebp
pop
mov
xor
jmp
mov
pop
nopl
pop
dec
or
fdivl
mov
ja
pop
cld
mov
pop
ret
outsl
roll
jle
sbb
testb
mov
rcll
xor
aas
xchg
scas
out
out
rorb
or
ds
xor
mov
rcrb
dec
pop
into
cmp
dec
in
addr16
test
lret
adc
repnz
dec
mov
pop
lret
inc
hlt
sub
mov
mov
dec
inc
cmpsl
cmp
sbb
repnz
std
fiaddl
repz
mov
mov
fidivs
mov
jle
filds
data16
mov
push
fs
dec
pop
mov
sub
test
das
xchg
sbb
sub
call
add
mov
mov
xchg
rcrb
in
dec
sahf
std
inc
cmp
mov
xchg
jno
xor
icebp
or
std
aaa
rorb
ja
adc
or
fwait
xor
unpckhps
xor
in
jbe
cmp
and
cltd
and
cmp
xor
mov
pop
mov
or
add
pushf
dec
inc
xchg
std
loopne
lock
jnp
xchg
lock
sbb
ret
inc
sbb
jmp
sarb
push
jne
xchg
pop
pushf
xchg
pushf
cli
arpl
pop
inc
stos
mov
fwait
shlb
ficompl
adc
das
ja
push
js
sbb
inc
pop
sub
dec
test
jle
add
es
push
arpl
dec
bound
jb
addr16
cmpsl
push
mov
stos
fcoms
xorb
sub
decl
daa
lock
loope
shrb
adc
data16
das
hlt
cmpsl
mov
pop
add
xchg
xchg
mov
insl
loopne
push
jg
xor
outsb
loope
fistpll
loope
pop
jp
mov
sub
mov
mov
xor
cli
push
adc
and
insb
es
fimuls
jb
adc
sub
mov
out
roll
inc
inc
movsb
lea
das
sti
adc
mov
inc
mov
ret
lds
dec
pop
adc
mov
cs
imul
add
jle
fstps
out
xchg
dec
fsts
pusha
pop
and
arpl
mov
mov
lods
subl
mov
pop
scas
and
xor
rclb
andl
mov
adc
inc
lcall
fwait
loope
xor
sub
mov
pop
stc
pop
or
inc
cmp
mov
hlt
or
xor
lret
jns
or
sub
xor
cmpsl
call
xchg
push
scas
cmc
push
xchg
mov
or
das
dec
jbe
mov
mov
les
pavgw
cli
fsubl
fmulp
sar
adc
icebp
push
cmp
iret
xor
in
dec
or
push
clc
outsb
add
lahf
popa
rcrl
test
mov
push
push
push
fsub
jno
mov
ja
mov
mov
sbb
ds
pop
popa
leave
loopne
ret
lock
xlat
xchg
test
sbb
dec
pop
jno
add
cmpsb
fists
out
mov
insl
jge
aad
aaa
shl
adc
int
adc
jp
or
nop
dec
in
mov
out
mulb
push
inc
mov
arpl
sahf
rorb
dec
ss
aaa
scas
hlt
dec
push
pop
cmp
and
call
and
jno
popf
out
test
jne
addr16
out
or
inc
push
and
or
add
fdivl
cmp
mov
jnp
jecxz
jb
push
inc
xchg
cs
pop
mov
sub
xchg
iret
movw
mov
mov
lret
inc
add
mov
add
sub
pop
fucomp
enter
aam
in
fildll
js
jno
pop
sahf
sbb
enter
sub
pop
mov
out
xor
out
push
fisubrs
adc
dec
inc
loopne
jae,pn
xlat
or
mov
xchg
inc
lock
jbe
movsl
fistl
sub
fsubs
loope
cmp
cmp
mov
in
xor
or
add
sbb
inc
mov
inc
pop
cmpl
sbb
xchg
scas
ja
test
sti
stos
and
adc
dec
insl
movsb
cmp
shrb
mov
cmpsb
cmp
jb
repnz
addr16
shrl
mov
and
dec
add
stos
add
shrl
sub
cmc
inc
repnz
dec
push
rcrl
insl
cmp
mov
fsubrs
out
xchg
nopl
lea
xchg
pusha
addr16
outsl
sbb
sbb
inc
shl
jp
xor
dec
int
stos
pop
jne
das
int3
ljmp
lods
repz
xor
hlt
data16
and
call
out
xor
adc
cmpsl
mov
cmc
sub
out
mov
shrl
dec
jns
or
mov
leave
sub
sbb
cmp
jbe
pop
jmp
test
lret
fs
lods
in
into
gs
sbb
ret
icebp
or
cmpsl
jmp
addr16
jb
and
sarb
int
fs
rorl
mov
test
stos
mov
out
cmp
push
add
inc
dec
sarb
enter
addl
mov
jne
mov
jnp
adc
sub
movsb
out
mov
int3
fsubrl
add
mov
aam
arpl
std
das
sarl
add
mov
js
out
test
jge
cmp
into
das
enter
xor
les
inc
sub
loope
popa
out
xchg
and
add
sbb
mov
orl
iret
cmp
push
mov
sbb
fcmovb
adc
movq
fcomps
lock
les
push
mov
cmp
mov
scas
fwait
movsl
test
mov
jae
add
lods
js
push
shl
dec
sahf
icebp
mov
lret
jae
push
dec
inc
addr16
sbb
dec
mov
pop
fildl
arpl
aam
pop
adc
push
ja
jns
jno
pop
shrb
fildll
xchg
push
fdivrl
mov
lock
aas
jmp
cmp
mov
mov
push
mov
and
lds
repnz
mov
sub
inc
jnp
lea
cli
inc
jp
test
inc
mov
in
inc
ret
leave
imull
pop
iret
pop
pop
xor
add
sub
cmp
inc
test
leave
jge
push
sahf
add
shlb
push
in
outsb
sbb
xchg
scas
cli
or
out
mov
in
aad
adc
mov
push
fs
push
inc
pop
mov
sahf
divb
shrb
mov
cmp
jmp
jae
mov
int
jnp
sub
jl
daa
mov
cmc
icebp
inc
push
mov
popl
aaa
mov
iret
xchg
push
pushf
jnp
xchg
add
pop
pop
mov
jae
daa
cltd
push
hlt
rol
rol
inc
cmp
pop
lret
xchg
xchg
js
or
push
inc
repz
fisubrl
movsl
add
repz
adc
aas
fidivrs
xor
andl
lcall
fs
mov
in
in
out
dec
or
xchg
push
dec
les
idivl
or
out
jge
cltd
mov
cmp
cmc
sbb
enter
aas
mov
test
inc
sub
cmp
out
sbb
push
ljmp
data16
stc
jle
shrb
dec
cmp
dec
mov
das
jl
mov
outsl
inc
ljmp
pop
dec
leave
sti
add
or
inc
int
dec
xchg
xor
addr16
push
pop
jg
sub
jl
pop
scas
xchg
xchg
jae
rol
or
pop
dec
mov
shr
nop
fdivs
arpl
push
mov
xor
jno
sbb
dec
or
nop
cmp
pop
fcoml
out
xchg
cmpsl
ret
jbe
xor
insl
ljmp
loop
aam
xor
out
outsl
scas
jb
loopne
repnz
jmp
insl
jg
cmp
out
dec
lock
aad
gs
aas
lods
push
rcr
pop
adc
cmp
ljmp
aad
jecxz
nop
and
rclb
les
mov
pop
pop
or
add
mov
pop
push
xor
das
xchg
ret
nop
inc
aas
rorb
ds
out
dec
sbb
fstl
aaa
sbb
mov
and
sti
ss
movsl
inc
aas
inc
xchg
faddl
mov
data16
push
lds
push
xor
pop
push
mov
outsl
xor
pop
mov
sub
out
insl
jg
das
mov
fwait
xchg
jl
push
jae
outsl
arpl
xor
leave
jmp
daa
inc
into
mov
push
mov
test
jecxz
lret
fcomps
hlt
adc
push
add
push
push
inc
js
and
gs
lret
mov
aam
leave
mov
mov
xor
repz
mov
dec
mov
fwait
cmpsl
ds
push
dec
mov
fisubrs
clc
addr16
clc
or
pop
cmp
fstpt
or
jne
outsl
lret
movsb
mov
xchg
aad
movl
adc
push
fdiv
jbe
sahf
lret
push
jl
loope
lea
sbb
in
mov
jmp
sbb
scas
fs
add
add
and
xor
shl
ret
mov
and
iret
inc
push
movsl
push
int
push
ljmp
fldt
cmp
mov
push
pushf
das
addr16
xor
adc
loopne
mov
mov
sahf
jb
inc
aam
mov
movsl
ss
int
push
lea
adc
jb
mov
rcl
sbb
push
xor
sub
pop
pop
cmp
pop
and
fisubl
addr16
repz
adc
mov
into
pop
imul
jp
nop
test
add
call
pushf
xor
mov
push
lahf
dec
mov
jl
sbb
mov
out
in
push
push
inc
dec
dec
call
test
shrb
into
lret
dec
pop
mov
dec
dec
ss
nop
loope
cwtl
loop
or
pmulhuw
inc
adc
enter
xchg
xchg
and
jmp
rolb
decb
in
sub
pop
add
ret
sub
sbb
pop
pop
mov
and
test
inc
jecxz
mov
xlat
outsb
add
iret
icebp
cs
pop
pusha
adc
gs
jl
pop
fwait
stc
popf
and
mov
add
mov
xlat
dec
fisttpl
enter
in
pop
out
out
inc
stos
inc
pop
out
add
push
push
jb
popa
mov
lock
movsb
xor
xchg
jns
inc
lods
inc
pusha
fisubs
movsl
jae
xor
js
mov
call
mov
rcrb
add
call
lret
and
xchg
cmp
adc
add
inc
jl
mov
push
push
push
out
arpl
lret
xchg
jp
stc
push
hlt
inc
mov
add
mov
pop
repz
jecxz
mov
cmp
and
les
ret
pushw
adc
jb
pop
test
mov
sahf
sub
sub
jle
gs
sub
push
scas
add
or
xchg
nop
jmp
sbbl
je
dec
popa
scas
fiadds
sahf
pop
pusha
adc
cmp
or
repz
dec
jno
push
mov
push
dec
push
xchg
lret
outsb
add
xchg
js
mov
shll
adc
cwtl
jg
and
jbe
out
fidivs
add
jecxz
cli
cli
xchg
sub
push
xor
sub
sahf
mov
in
aas
sarl
mov
pop
lock
shlb
push
jge
xchg
sub
jmp
ss
xchg
push
add
push
cwtl
mov
pop
inc
dec
mov
int3
or
fsubl
shrl
mov
lret
jae
fwait
les
push
stos
ja
mov
push
push
aad
sahf
addb
rolb
add
in
xchg
in
cltd
stos
sbb
pop
mov
cmp
adc
nop
pop
xor
inc
fsts
cld
adc
cwtl
das
inc
leave
jns
or
push
or
andb
test
cmpsl
and
js
pop
ljmp
adc
push
test
sti
cmp
decl
fsubl
or
mov
sub
in
mov
mov
dec
fst
mov
in
js
push
mov
pop
sbb
sbb
push
int
lcall
cltd
ljmp
nop
jge
add
inc
lea
shll
repnz
imul
or
rolb
inc
sbb
mov
lods
or
or
xor
test
add
js
sub
adc
jne
fwait
aas
arpl
ljmp
push
in
xchg
lock
cmc
add
arpl
ficomps
in
push
sahf
sub
stc
sbb
jp
dec
sub
imul
cs
dec
sbb
jb
mov
xor
scas
nop
imul
enter
enter
pop
mov
add
dec
test
ss
inc
out
add
sbbl
pusha
hlt
sbb
lods
inc
cmp
jae
xlat
jmp
repnz
test
scas
xor
leave
cli
push
in
pusha
dec
cwtl
cltd
xor
test
lock
sbb
mov
push
adc
push
mov
imul
cltd
xor
pop
in
mov
inc
mov
inc
ror
fwait
xor
mov
push
cmp
popa
decb
out
xchg
sub
or
rcrb
int
cmp
push
mov
mov
sub
jl
shlb
adc
jbe
inc
mov
jae
lret
pop
lret
push
and
and
xchg
xor
fimull
ljmp
mov
xor
dec
rclb
push
mov
adcl
cmp
jmp
xlat
orb
add
loope
cmpl
pop
sub
movsb
push
cmp
pusha
orl
loopne
roll
lcall
shll
add
idivl
cmp
xor
mov
push
iret
mov
dec
sub
mov
adc
pusha
mov
mov
add
cmp
mov
xchg
cmp
push
jmp
xchg
mov
or
adc
mov
les
and
sahf
in
mov
inc
scas
pop
ljmp
inc
lds
jb
push
xchg
out
xchg
sbb
adc
pop
inc
jmp
mov
mov
sbb
lcall
mov
sbb
cmp
lahf
pop
adc
push
scas
fwait
cmc
mov
jl
sub
filds
iret
pop
repnz
sub
jno
mov
xchg
pop
sbb
xchg
in
shll
mov
fdivs
inc
xlat
arpl
pop
loopne
inc
jecxz
xchg
aas
push
inc
out
pushf
in
jmp
mov
aas
std
outsl
add
push
dec
pushf
scas
ret
std
ja
fcmovnu
sti
jbe
ja
cmp
or
repnz
mov
repnz
lret
mov
dec
push
xchg
dec
add
jg
adc
inc
and
rcll
sarb
jmp
push
mov
or
std
loope
xor
stos
mov
fcoml
xchg
xor
add
std
dec
sub
xor
hlt
push
mov
dec
inc
shl
mov
add
ss
inc
fistl
loopne
sub
jnp
test
insb
sbb
adcb
mov
pop
jne
shll
jp
or
cmp
cltd
adc
xchg
fcmove
dec
test
cmp
fwait
pop
xor
cmp
xlat
insl
jns
or
dec
js
mov
out
bound
cld
pop
scas
cli
mov
shl
fisttps
push
mov
fwait
insb
and
mov
lea
mov
and
leave
psubsw
aam
pop
jl
std
inc
outsb
in
fidivl
or
push
dec
mov
adc
dec
sub
cltd
jp
pop
call
lods
insb
add
enter
sub
add
fdivrs
data16
and
pop
add
rcl
test
jne
mov
mov
lret
and
sub
dec
push
das
adc
ja
jecxz
xor
mov
push
hlt
push
jg
jl
inc
push
ds
lods
loop
leave
jns
adc
jge
les
cmp
pop
mov
lret
dec
push
sbb
dec
xor
dec
dec
imul
xlat
fcomps
xchg
jae
xor
aad
and
aaa
push
and
cmpsl
xor
xor
sub
out
popf
cmp
aad
mov
mov
ja
adc
test
xchg
jo
rclb
aaa
pop
pop
push
dec
xchg
scas
jg
aad
addr16
in
sarb
jno
mov
inc
iret
mov
inc
scas
imul
iret
inc
sub
into
jge
adc
filds
push
in
push
xor
rcrl
mov
orb
mov
call
andb
sbb
inc
stc
inc
mov
jle
sbb
or
inc
stos
adc
cwtl
scas
ss
push
push
mov
jne
jae
pop
fists
jmp
scas
cmp
sbb
fucomp
xchg
pop
xchg
pop
inc
inc
aam
jg
xchg
test
mov
fidivs
dec
push
xchg
jmp
adc
sub
subl
nop
rclb
lea
addr16
scas
pop
out
mov
movsb
mov
jle
int
mov
jae
std
or
cmpsb
add
scas
jb
lret
cld
lcall
in
xor
repnz
sbb
dec
cld
outsl
cmp
ss
aam
dec
gs
xchg
pop
addr16
jecxz
stos
xor
mov
xchg
pop
imul
out
gs
push
push
cwtl
stos
scas
inc
fdivrl
fldt
lahf
adc
pushf
hlt
arpl
es
js
push
je
jns
add
int
adc
in
fdivrl
into
mov
xchg
rcrl
mov
sub
out
ja
clc
mov
jle
adc
stos
or
jecxz
xchg
pop
fidivrl
push
and
bnd
adc
push
sbbl
pop
fldt
hlt
aam
gs
pop
bound
inc
or
xor
dec
fcmovb
lods
pushf
xchg
iret
call
lahf
es
fcoml
mov
and
xor
fmull
adc
mov
push
jae
and
sbb
test
sub
jnp
mov
and
xor
pop
mov
icebp
fcoml
adc
lret
mov
mov
inc
leave
outsl
scas
fcompl
xchg
leave
mov
out
lret
mov
sub
fcoml
lods
push
cmp
leave
call
push
leave
jo
outsb
mov
idivl
call
insl
test
add
push
std
arpl
adc
mov
popf
mov
clc
adc
xor
bound
ds
arpl
xchg
ficomps
pop
sbb
jge
mov
push
rcrl
ret
cmpsb
jbe
fabs
stc
inc
jecxz
xchg
add
mov
ljmp
cmc
lcall
jbe
xchg
xlat
testb
sub
and
stc
nop
mov
pop
cld
les
fisubl
and
test
jae
pop
insb
mov
push
and
ja
jmp
pop
push
jne
call
mov
mov
adc
adc
lea
pop
push
jl
imull
mov
push
loop
ret
pop
mov
in
insl
jmp
cmp
mull
cmp
mov
call
jb
orb
cs
lock
push
jno
xchg
jne
inc
and
or
aam
in
push
rcr
into
sub
or
sub
mov
add
sub
push
sub
ljmp
cmp
dec
or
sub
int3
xor
pop
imul
sbb
mov
addr16
fistps
jl
sbb
aam
push
stc
hlt
outsb
out
pusha
jmp
cmp
mov
mov
pop
int
outsl
sti
aaa
sbb
fs
add
mov
fsubl
leave
in
jp
adc
add
stos
cld
test
dec
adc
in
mov
in
xchg
out
je
bound
cs
and
mov
pop
xor
outsl
and
jo
pop
push
pop
cwtl
push
jle
fs
or
mov
aaa
sub
push
and
push
xor
mov
sub
call
ds
in
inc
dec
fbstp
jl
loop
push
repz
adc
cmp
out
mov
and
mov
mov
push
sub
adc
cmp
xchg
imul
pop
movsl
inc
adc
jl
push
cs
xchg
push
inc
mov
add
cmc
arpl
pop
idivb
movsl
xor
shll
jno
mov
xchg
add
sbbb
fucomip
cmpsl
outsl
loopne
fistps
add
push
test
int
shll
adc
pop
out
sbb
test
mov
adc
scas
fidivs
pop
inc
ljmp
and
push
push
stc
xchg
sub
popa
aad
pop
divb
and
jmp
mov
xor
inc
test
jno
inc
lret
inc
mov
in
pop
push
and
mov
ret
xchg
pop
mov
test
movsb
push
dec
xor
push
hlt
imul
add
jae
stos
pop
iret
adc
sarl
mov
aas
xchg
push
mov
and
xor
xchg
inc
data16
mov
call
mov
mov
loop
mov
out
cli
push
dec
add
test
std
aad
xchg
mov
testb
dec
das
shl
in
jp
fists
enter
sbb
iret
lds
aaa
mov
push
sbb
outsb
es
or
lret
pop
xor
jns
jne
mov
mov
movsl
pop
js
inc
sbb
aas
dec
cld
ret
or
fisubrs
xor
sub
push
sbb
add
fbld
xorl
inc
enter
fsubs
xor
mov
mov
lret
inc
cs
pop
shll
icebp
pusha
add
sahf
xor
jnp
mov
dec
int3
push
or
cmp
scas
inc
dec
cmp
mov
cmpsb
addr16
jne
inc
xchg
pop
mov
frstor
rcpps
aam
xor
sub
incb
cwtl
js
and
xchg
adc
jb
and
sbb
push
push
cmp
sti
xor
push
pop
cmp
xor
cld
push
filds
adc
jg
shll
or
xchg
jle
addl
notb
jne
or
cwtl
cmc
mov
loop
push
push
add
or
or
sbbb
imul
jl
repnz
stos
mov
cmp
adc
pop
mov
imul
data16
and
or
pop
insl
addr16
fdivrs
jb
enter
aam
jo
mov
retw
adc
mov
dec
cli
xchg
jge
xor
insb
lret
sub
test
das
pop
jno
dec
shl
dec
inc
loop
aad
pop
mov
push
cmpsl
cmp
ja
aas
shrl
test
push
fldcw
outsb
pop
cmp
scas
out
push
adc
push
push
mov
mov
mov
addr16
mov
inc
cwtl
sub
xor
jge
sub
mov
pop
inc
push
sub
pop
and
xlat
inc
and
push
inc
mov
hlt
out
or
int3
inc
jnp
aam
and
stc
lods
inc
nop
jge
int3
in
out
xchg
aas
andl
dec
jae
lods
outsb
mov
mov
dec
rol
or
enter
dec
pop
mov
es
mov
fprem1
cmp
cli
and
aam
add
mov
daa
push
jnp
inc
xlat
in
mov
push
addr16
test
shrl
dec
ja
stc
mov
lcall
cmp
fmull
movsl
xor
arpl
xchg
xor
fsubr
enter
and
xor
call
push
push
stos
add
in
fists
test
scas
mov
add
push
xchg
pop
lock
add
mov
ja
mov
xchg
jg
popa
or
mov
mov
aaa
push
jne
pop
cltd
inc
xchg
push
mov
addr16
in
call
sub
sbb
ds
out
bnd
xchg
cmp
jns
imull
pop
hlt
stc
jae
xchg
mov
jnp
shlb
leave
mov
leave
inc
push
or
lods
mov
imul
pop
in
shll
je
pusha
sub
cmpsl
add
jle
jno
adc
inc
mov
mov
push
mov
push
push
inc
faddl
nop
pop
repz
jmp
mov
push
dec
repz
mov
and
call
push
pop
push
dec
lods
cmpl
scas
cld
inc
mov
or
popf
lods
lret
inc
mov
push
push
loope
add
daa
xchg
ds
pop
in
xchg
jbe
movsb
mov
stos
pop
repz
sbb
mov
jp
push
mov
push
xchg
inc
rcrl
pop
stos
jmp
loop
mov
dec
loopne
lea
pop
and
sbb
xchg
imul
dec
addl
push
shll
jns
pop
test
xchg
add
fs
mov
mov
jns
push
xchg
pop
sub
lret
mov
stos
adc
mov
fwait
scas
rol
test
loop
add
clc
mov
mov
add
pop
xor
sbbb
lods
outsl
adc
mov
je
test
filds
cwtl
pop
dec
mulb
push
or
cmp
les
push
mov
sti
sbb
iret
push
pop
outsb
jb
cmc
mov
hlt
adc
add
imul
iret
es
or
and
popa
insb
nopl
xlat
ds
data16
sbb
into
dec
dec
sbb
push
cmp
outsl
pop
cmp
int3
jge
scas
push
and
adc
fnstcw
repz
popa
mov
sbb
addb
stc
mov
add
dec
jae
je
xchg
ret
and
insb
inc
testl
pop
mov
out
inc
pushf
jns
push
lock
out
test
add
hlt
lods
adc
lea
and
mov
jno
pop
and
mov
push
and
push
fistpll
mov
adc
jmp
orb
aam
and
cmp
arpl
sbb
xor
cld
fcoms
jle
das
mov
or
push
pop
sub
ja
loope
aaa
cmpsl
imul
jb
fsubp
jle
push
cli
pushf
mov
lock
popa
lock
fisttpll
or
nop
jno
pop
ljmp
and
rcrl
xorl
lahf
jbe
pusha
test
out
shlb
aas
movsb
xchg
push
sbb
insb
int3
pop
jp
jno
pop
mov
cmp
xchg
scas
pop
mov
int
add
subb
das
inc
mov
imul
loope
sub
in
cli
cmp
orl
ja
xchg
jo
xor
jle
into
push
addl
add
lods
dec
dec
dec
stos
lds
xchg
xchg
mov
mov
mov
adc
addr16
dec
mov
pusha
mov
cmc
adc
test
nopl
cmpsb
lea
pop
mov
lea
loop,pt
sub
mov
imul
aam
jp
sbb
aas
lods
inc
xchg
inc
addr16
cmpsb
mov
mov
or
aad
lds
divl
mov
xchg
adc
addr16
fisttps
sbb
ret
sbb
sar
push
in
cld
rcl
xor
push
or
and
imul
jne
mov
cmpsl
ds
dec
div
imulb
xchg
sub
add
les
mov
sahf
test
jns
dec
cltd
mov
cmpsl
add
pop
stos
xlat
icebp
orl
dec
cmp
ret
xor
in
push
push
movsl
inc
sbb
mov
pop
std
out
out
jo
mov
jns
sub
fcomps
sbb
cld
cmp
mov
loopne
mov
pop
fcoms
out
fstpl
inc
adc
add
fstpt
and
sbb
mov
es
pop
cli
ret
xchg
mov
lret
ljmp
push
mov
inc
fisttpl
pushf
icebp
nop
fcmovnbe
jbe
jp
mull
std
pop
mov
je
push
movsb
mov
mov
pop
stos
fdivrl
mov
mov
dec
arpl
mov
js
add
dec
repnz
ror
xor
sbb
fidivs
aaa
ds
pop
push
add
add
and
enter
movsb
adc
movsl
filds
pop
aad
adc
insl
call
and
push
push
xor
xor
sub
sti
pop
lods
jg
add
add
leave
movsb
cld
clc
cmp
movsl
inc
sub
jge
nop
movsb
sub
add
into
ljmp
sahf
push
gs
lock
pop
popa
out
add
mov
mov
xor
sub
cmp
mov
add
and
lock
jg
imul
into
cmp
sub
dec
sbb
jbe
ja,pn
and
adc
movsl
fidivs
xchg
add
push
pop
dec
adc
out
sub
sbbb
fnstcw
dec
sarl
mov
push
fwait
sti
fildll
xchg
sbb
stc
xchg
sti
sbb
pop
inc
dec
std
inc
test
pop
dec
bound
outsl
and
pop
add
xor
inc
mov
fcmovne
into
sbbl
fs
out
mov
mov
push
cmp
lcall
in
lcall
outsl
ret
decl
ret
jl
sbb
imul
add
popf
xchg
in
jae
daa
mov
xchg
pop
enter
mov
pop
jns
fcomps
leave
adc
in
pop
scas
xchg
pop
out
push
imul
out
push
pop
int3
addl
cmp
adc
scas
imul
sub
iret
std
dec
cmpsb
in
xchg
push
in
jae
xchg
mov
cmpsb
xorb
cmp
aas
test
popa
dec
xchg
jecxz
cmp
fdivs
mov
xlat
xchg
test
mov
jo
xor
movsl
pop
push
idivl
dec
cmp
mov
push
pop
add
in
fsubrl
rorb
inc
fcomps
rcrb
scas
fs
arpl
push
cld
test
sti
or
iret
xor
in
sbb
mov
mov
nop
nop
cltd
dec
mulb
sbb
int3
shll
push
repnz
add
scas
insl
loope
or
jmp
mov
sarb
inc
jl
mov
pop
mov
mov
cwtl
es
xchg
inc
xchg
lods
iret
mov
in
inc
ss
repz
scas
mov
movsb
inc
push
add
mov
data16
aaa
and
repz
pop
mov
insl
jge
shl
pop
push
mov
pop
mov
mov
mov
jle
daa
inc
fldl
fs
aad
mov
test
es
push
inc
sti
or
lret
fld
jecxz
in
lock
cmc
push
icebp
in
and
ds
imul
lret
nop
insb
and
and
pusha
sub
inc
clc
loopne
mov
insb
fdivrs
out
inc
rcrb
add
xor
test
and
out
jae
push
sub
ja
jno
bound
cmp
xor
jo
cld
push
aaa
lret
and
icebp
add
bound
xchg
sub
mov
repz
mov
jp
xlat
hlt
xor
sub
mov
inc
dec
pop
pop
stos
xlat
outsb
xchg
pop
sub
les
jecxz
cmp
std
loop
aas
add
pop
popa
cld
cmpsl
nop
fdivrp
leave
out
inc
mov
xchg
push
orl
sbb
std
mov
push
sub
jmp
aaa
xor
jbe
xchg
mov
cmc
ret
into
fidivrl
push
lcall
cwtl
jge
push
hlt
movsb
psrlw
dec
sub
push
or
jmp
out
popa
cltd
add
add
mov
popa
jmp
cmpsb
movsl
cmpsl
cmp
mov
int
fldt
xchg
sahf
hlt
jbe
mov
or
mov
adc
repnz
mov
daa
orb
adcb
shr
xor
jo
cmp
xor
fcomps
fidivl
repz
repnz
add
fwait
mov
jnp
jns
push
push
hlt
xor
out
mov
pop
add
mov
or
or
mov
sbb
in
sub
andl
adc
push
lds
leave
dec
and
fsubl
mov
pop
xor
testb
dec
into
nop
jns
cmpsb
mov
xchg
sub
lods
pop
mov
insl
ljmp
jge
subb
xor
adc
mov
pop
and
leave
daa
mov
outsl
stos
xor
mov
cmp
dec
cmp
nop
add
fnsave
scas
inc
pop
sbb
xchg
jne
inc
and
mov
mov
in
adc
into
sbbb
cmp
shl
fdivs
dec
xor
movsl
loop
fcompl
pop
jae
xchg
or
dec
fstpt
or
mov
mov
pop
adc
dec
or
mov
cwtl
xchg
pop
add
mov
inc
jns
jne
jo
mov
out
mov
stos
pop
adc
inc
cli
test
sub
mov
int3
idivb
int3
addr16
in
sarl
leave
cmpsb
mulb
pushf
inc
out
mov
push
push
shl
fisubrl
out
shl
pop
push
lret
mov
int
inc
lcall
and
in
sbb
das
ret
inc
call
leave
add
push
xor
loopne
pop
push
mov
ret
fsubs
hlt
or
push
inc
mov
ficompl
mov
mov
push
lea
lods
cli
sti
shrb
movsb
sub
xchg
fs
popf
xchg
mov
and
in
movsb
pusha
mov
test
repnz
ret
inc
mov
jmp
adc
push
pop
lds
add
push
mov
dec
movsb
cwtl
push
adc
popf
loope
arpl
je
loop
lcall
mov
rol
jl
push
and
inc
pusha
out
sti
fwait
mov
xor
mov
sbb
jge
scas
test
push
daa
mov
sub
cmpb
stos
mov
loopne
adc
sarl
push
jp
lea
inc
pop
pop
repz
mov
jl
aaa
push
lcall
test
lret
pop
in
arpl
movb
insb
outsb
dec
add
mov
xchg
cwtl
inc
jecxz
push
stos
mov
stc
adc
mov
mov
mov
adcb
or
adc
test
jbe
xor
sub
mov
jns,pn
adc
add
sbb
loope
cltd
push
loop
cmp
or
mov
orl
out
ja
sub
div
sbb
loope
add
inc
inc
mov
sahf
push
or
in
sbb
adc
pop
in
xor
xchg
scas
ljmp
pop
jno
push
outsb
push
sbb
xor
sub
jle
insl
mov
outsl
mov
sbb
es
xchg
dec
and
es
mov
sbb
je
and
xchg
push
fcoml
sbbl
int
dec
xor
divl
int
add
cmp
mov
fildll
jp
mov
pop
push
mov
pop
pushf
outsb
dec
ds
pop
aas
fldenv
arpl
scas
mov
test
jo
sbb
sbb
outsb
jne
sub
je
jg
dec
loope
test
icebp
fcmovb
jne
mov
jl
stos
fs
les
add
adc
mov
leave
jae
inc
inc
fdivs
adc
cmp
lods
js
xor
rcll
fdivrl
lahf
mov
mov
lods
cmp
sahf
xchg
stos
out
int
mov
push
repz
enter
outsl
std
jg
mov
data16
cwtl
mov
popa
fs
out
and
pushf
adc
mov
adc
or
and
cmc
sbb
push
dec
fstl
dec
orl
aaa
mov
xor
inc
pop
cmp
pop
jg
pop
imul
mov
cs
xchg
clc
inc
push
sti
inc
jne
push
push
dec
and
mov
fmuls
xor
lret
data16
out
lret
in
pop
mov
and
icebp
pop
or
pop
lcall
xor
sbb
ds
cltd
dec
cld
fwait
shlb
mov
dec
xor
aad
lea
popf
adc
mov
cmp
sub
xor
pushf
adc
lret
push
xor
sbb
popf
aas
lahf
lock
xchg
scas
mov
sbb
push
mov
or
push
xor
arpl
mov
rorb
xor
adc
dec
sub
cmpsb
xor
pushf
ja
lds
cmp
push
cwtl
fisttpl
cmpsb
jle
sub
adc
push
fsubr
imul
push
and
jmp
sbb
xor
adc
push
cmp
rcl
cwtl
or
push
pop
repnz
and
pop
dec
or
sub
ss
sbb
mov
inc
leave
xlat
push
sbbl
adc
mov
push
jg
dec
pop
and
sahf
clc
shll
add
mov
dec
jne
or
mov
fisubrl
cli
mov
dec
and
popf
scas
mov
cmp
jecxz
xchg
xor
inc
adc
fnstcw
mov
sub
data16
shlb
rorl
mov
jns
cmp
jns
cwtl
js
xlat
cltd
pop
push
sbb
in
test
mov
pop
dec
and
push
insl
fisubl
add
pop
dec
jo
pop
int3
outsl
es
xchg
add
inc
pop
les
in
fidivrl
pop
jmp
or
push
ds
clc
aam
pop
lds
xchg
xor
out
or
sbb
lock
leave
sub
shrb
mov
negl
pushf
scas
mov
sub
mov
sbb
lcall
das
adcl
shrl
sbb
icebp
insb
lock
ds
adc
jae
div
xchg
add
int
adc
lret
lea
pusha
shll
fistpll
gs
mov
iret
push
fstps
nop
ss
dec
xchg
inc
sub
cld
scas
xor
insl
push
stos
aas
dec
fnsave
mov
inc
sub
add
inc
sub
dec
cmpsb
shl
add
mov
mov
out
jns
aad
or
jp
stos
push
jbe
int3
cltd
std
std
into
pushf
gs
cli
adc
sub
xchg
mov
cltd
xchg
pop
mov
ja
xor
ret
pop
adc
cmp
loop
call
fcomps
stc
int
cs
ficomps
mov
repz
inc
push
cltd
add
fisttpl
cmp
cmp
xchg
mov
in
out
inc
pop
cmpsb
sub
lods
in
mov
test
sub
pop
cs
sub
lret
jae
scas
out
inc
test
pop
cmp
lcall
xchg
mov
je
adc
aas
movsb
jecxz
sub
orb
sti
push
rol
sub
fildll
xor
in
aaa
test
push
inc
arpl
jg
cmpl
divb
pop
addb
insb
cs
dec
push
push
mov
pop
mov
mov
inc
mov
insl
xor
popf
push
imul
sbb
pop
leave
inc
rorl
testb
jnp
cli
out
pop
call
cmp
cltd
xchg
pop
mov
add
cmpsb
inc
mov
rcll
sbb
das
sbb
movsb
add
dec
test
add
cmpsb
cmp
mov
sbb
popa
pop
push
cld
dec
repz
mov
clc
repnz
sub
arpl
xchg
mov
inc
loop
add
ds
loope
dec
mov
gs
fcoml
stos
movsb
out
inc
pop
sbb
lahf
adc
in
adcl
mov
inc
or
stos
adc
ret
fidivs
xor
cwtl
jbe
push
xor
out
xchg
pop
inc
out
ret
pop
leave
imul
jp
add
xchg
mov
xor
adc
mov
in
into
and
cmp
insb
xorl
pop
jmp
or
jmp
xor
xor
jmp
sub
mov
scas
mov
jge
ret
rol
dec
dec
mov
push
sub
mov
sarl
int3
push
jg
push
lret
repz
pop
mov
mov
out
jo
pop
cmp
lcall
mov
mov
mov
incb
leave
jno
shll
scas
mov
aad
xchg
je
add
sbb
repz
repnz
mov
vpunpckhqdq
pop
mov
stos
inc
jl
loope
stos
inc
push
xchg
nop
push
cmp
xor
nop
push
lods
mov
fsubp
cmp
pop
test
sub
scas
popa
cli
mulb
xor
pop
leave
jb
outsb
outsl
mov
bound
cmp
test
mov
jecxz
sub
call
into
push
sahf
mov
sbb
mov
sbbl
stc
int
and
iret
ret
sbb
test
repnz
mov
xchg
pusha
test
ret
cmc
sub
cmp
mov
scas
push
shrl
sti
movsl
mov
push
mov
push
xor
mov
fsubrs
inc
popf
std
rorl
sub
sbb
aas
es
inc
fildl
xor
lods
into
jb
jno
dec
arpl
push
inc
cmp
leave
push
or
or
frstor
adc
hlt
int3
jnp
xchg
inc
dec
adc
xchg
jecxz
insl
out
mov
sahf
jle
lret
scas
xor
dec
push
jmp
push
stos
and
and
and
popa
add
lret
jnp
push
adc
xor
fs
sub
pusha
push
lds
sbbl
or
test
jno
mov
es
push
nop
inc
push
pop
jbe
pusha
xchg
jb
xchg
mov
cltd
push
adc
dec
pop
inc
jbe
ds
sbbl
mov
xlat
ds
sub
fcmovb
popa
push
mov
inc
xlat
das
outsl
push
pusha
lock
repz
test
addr16
fmull
pop
sub
out
jp
sub
popa
or
xchg
xor
mov
mov
negw
call
mov
sub
dec
jmp
adc
jnp
jbe
out
jmp
rorb
xor
shlb
push
icebp
add
push
cltd
dec
mov
imul
cmp
je
mov
jle
fcoml
int3
insb
xchg
std
test
daa
pop
int
jb
inc
test
mov
shrl
mov
adc
ja
movsl
inc
mov
es
scas
loope
movsb
inc
dec
out
sti
xor
mov
xorb
into
rol
repz
push
gs
adc
ret
imul
imul
pushf
and
lret
fisubrl
cld
push
fwait
cmpsb
xor
sbb
sub
test
push
dec
mov
ds
pop
jno
jns
hlt
icebp
cmc
xor
pop
jmp
jmp
lret
mov
mov
into
fiaddl
pushf
test
xchg
and
fisttps
sahf
jne
inc
sub
cwtl
out
daa
sbb
cs
out
push
mov
adc
mov
fsubs
aam
mov
push
out
xchg
and
and
xchg
push
jl
push
lods
in
sbb
leave
pusha
stc
cmp
push
lods
cmpsl
adcl
add
mov
sbb
mov
outsl
negb
loope
adc
hlt
mov
mov
mov
in
imul
fs
popa
xor
or
roll
fs
push
fisttpl
mov
adcl
xchg
jecxz
leave
sbb
outsb
pop
fdivrp
cmp
xchg
js
iret
stc
leave
mov
xorl
jg
lds
or
je
adc
sbb
push
inc
xor
incb
scas
pop
addr16
iret
pushf
xor
imul
aaa
clc
and
sub
popf
xor
xchg
leave
mov
out
ljmp
imul
add
mov
test
lret
lds
cltd
xor
repnz
imul
dec
in
outsl
lret
aaa
in
das
in
in
push
dec
dec
mov
into
rcl
popa
rolb
pop
sbb
aam
ss
test
pop
loopne
into
mov
push
mov
sbb
sbb
mov
pop
jl
add
cmp
adc
xchg
jle
lock
mov
xchg
ds
sahf
test
movsl
mov
adc
jb
cmpsl
orl
dec
sahf
hlt
je
lods
cmp
pop
xchg
adc
aam
mov
and
sub
rcr
fistps
cmpsb
ds
xlat
jne
dec
lods
lds
jno
inc
je
sbb
push
test
cmp
notb
and
dec
addl
or
gs
test
sbb
in
loop
mov
in
add
cmp
js
mov
adc
rcrb
and
jbe
scas
ljmp
pushf
xor
sahf
imul
mov
iret
out
popf
or
lret
std
in
jl
lret
ja
cmpsb
stos
inc
inc
sarl
popa
leave
xor
lock
adc
push
movsl
sbb
fisttpll
xchg
lret
out
push
daa
jns
push
cmp
test
outsb
inc
ror
gs
or
addl
sahf
lcall
loopne
adc
mov
mov
lock
cs
ss
rclb
and
int3
loope
in
add
mov
dec
jl
xlat
outsb
dec
fcmovnu
mov
adc
enter
int3
ljmp
std
cmp
lahf
leave
gs
xchg
repnz
enter
jb
or
in
xchg
cli
xchg
push
cmp
jnp
clc
in
loopne
push
adc
add
push
insb
and
adc
push
dec
push
pop
testb
jnp
cltd
adc
xor
jp
fldcw
jecxz
adc
jmp
fwait
sbb
and
adc
cmp
mov
add
popf
and
or
dec
jb
ja
mov
push
popf
xchg
pop
addl
dec
sahf
sbb
mov
inc
leave
pop
dec
adc
xor
pop
xchg
push
test
xor
jle
daa
data16
push
cwtl
inc
xor
xor
arpl
xchg
jb
lea
ljmp
dec
sbb
lock
adc
pop
mov
outsl
or
ret
into
inc
bound
dec
inc
mov
loop
iret
in
jo
pop
repz
icebp
adc
cmp
xor
fstps
movsl
es
or
dec
clc
shll
scas
sahf
enter
dec
add
fmull
cmp
das
or
xlat
test
cmp
dec
and
push
hlt
fxch
insl
mov
outsb
das
daa
and
leave
js
cmpsl
cmpb
mov
mov
ret
test
andb
outsl
push
js
xorb
pop
push
rcrl
cmp
push
imul
sbb
loope
out
mov
and
lret
inc
push
sahf
jg
cs
mov
mov
adc
adc
lret
cld
add
add
and
pop
mov
lret
std
xor
push
jno
pop
repnz
xchg
adc
push
lods
pop
push
cs
loope
dec
xchg
repnz
adc
test
push
cmc
dec
out
mov
lock
lods
out
les
cli
aaa
into
sub
lret
subb
mov
pop
pop
call
or
dec
dec
test
push
inc
movsb
push
mov
loopne
outsl
xchg
sbb
mov
jle
xor
pop
outsb
mov
mov
loopne
paddusb
jne
ss
leave
stos
adc
mov
fildll
inc
push
mov
or
sbb
daa
inc
add
xrelease
inc
dec
mov
dec
psrld
cwtl
or
push
into
gs
lret
push
or
in
adcl
mov
cmp
shrl
add
ds
push
cmpsb
jb
lcall
outsl
mov
jae
aam
imul
push
imul
inc
sbb
icebp
stos
test
int
test
mov
out
rcr
mov
push
sti
test
mov
mov
nopl
inc
test
xchg
pop
sahf
push
mov
inc
stos
mov
jne
imul
mov
shl
iret
fwait
call
dec
dec
out
aas
adc
add
cli
ds
push
push
mov
sbb
jl
push
sub
out
jle
add
sbb
test
incl
push
icebp
adc
movsb
adc
mov
fcoml
mov
sti
dec
loop
sarl
adcl
pop
psubusw
and
push
lahf
subb
xor
mov
pop
dec
jne
aas
mov
test
sub
out
ljmp
and
ja
in
push
lret
mov
scas
jnp
and
ds
les
test
pop
cmc
cmp
xor
in
adc
bound
xchg
mov
ja
popf
cs
test
lds
cld
or
mov
les
pop
adc
mov
mov
dec
mov
add
es
insl
movsb
inc
xchg
jecxz
jbe
aam
shll
mov
in
inc
pop
xchg
pop
dec
dec
adc
mov
fldenv
adc
test
gs
push
iret
jb
movsl
lret
push
xor
cmp
adc
cwtl
dec
xor
and
out
pop
mov
lret
js
insb
sbb
ja
in
shlb
rcr
cltd
das
out
mov
push
fidivl
xor
fmul
xchg
mov
sbbl
mov
and
ret
pop
es
incl
xchg
mov
bound
dec
add
cmp
push
xchg
andl
dec
pop
push
insl
mov
add
cmp
out
lea
push
inc
iret
data16
rol
mov
lds
insl
js
sub
or
or
cmpsl
mov
ret
popf
loop
mov
sbb
lock
cmc
cmp
jnp
push
jo
mov
pop
pop
rep
out
or
or
fucomip
push
add
jo
jb
dec
fsub
negl
or
sahf
cmp
and
insl
sti
sub
sbb
pushf
hlt
sbb
lret
dec
data16
clc
xor
push
orb
in
test
ss
rolb
mov
pop
in
outsb
fcoms
les
ss
jno
cmp
test
inc
push
mov
jnp
jge
adc
add
lock
mov
cmp
fmul
or
iret
std
add
test
test
or
xchg
xor
mov
lods
push
pop
repz
ret
shll
mov
shr
ds
popf
inc
stc
insb
scas
or
dec
sbb
or
pop
mov
std
push
push
cli
sarb
jbe
adc
rorb
push
cmp
and
pop
dec
xchg
push
ret
pop
sbb
in
pop
js
mov
call
inc
loop
cmpsb
pop
je
mov
jmp
cmp
fwait
enter
stos
mov
ljmp
jne
xchg
scas
pop
pop
lcall
mov
add
test
insl
jge
cmovs
cmpsb
adc
addb
into
ror
pop
add
or
stos
loope
fdivl
es
pop
out
int3
aam
pushl
iret
jno
cmp
pop
sub
loopne
push
push
nop
fsubs
adc
pusha
daa
loopne
dec
pop
xchg
aaa
sub
push
pop
sbb
mov
push
xchg
sbb
and
les
loop
xor
jle
out
cmp
ljmp
push
pop
pop
stc
imul
inc
xchg
xchg
pop
repnz
aaa
pop
incl
pop
and
sbb
push
add
jo
xor
cmp
cmpsl
mov
cmp
ljmp
mov
mov
jae
je
fdivs
repz
push
mov
frstor
push
jbe
cmp
lcall
out
cmc
ljmp
arpl
std
push
cld
mov
pcmpeqd
subb
xor
or
add
cmp
sub
js
or
mov
xor
push
sub
add
push
aaa
pop
inc
repz
pop
or
aas
jge
shll
add
cmp
jo
sbb
test
bound
sahf
lret
fimull
mov
mov
jg
xor
xor
pop
mov
inc
int
in
xchg
scas
mov
test
shl
cmp
cwtl
mov
push
pop
pusha
inc
clc
repnz
dec
and
inc
outsl
lret
aas
xlat
nop
rolb
aam
adc
push
mov
add
popf
hlt
adc
push
dec
popf
and
push
fxtract
nop
roll
dec
or
mov
aaa
add
and
push
fadd
xchg
sbb
sbb
and
inc
adc
dec
cmpsb
push
sub
cmp
or
sub
push
test
push
rolb
les
cmpsl
cld
and
daa
notl
cmp
add
mov
scas
push
sub
xchg
sbb
insl
sbb
fmull
hlt
dec
ja
jo
jo
dec
dec
insb
inc
clc
jns
fwait
cmp
or
and
clc
push
fwait
xchg
hlt
inc
adc
jg
or
out
mov
push
jne
in
adc
mov
andb
mov
test
dec
mov
cltd
cmpsl
sbb
dec
and
lods
fiadds
fwait
cmp
hlt
jecxz
inc
or
test
enter
adc
test
fsub
lds
fwait
sti
jg
jecxz
and
mov
insb
push
jl
shrl
inc
mov
mov
outsb
adc
push
sub
repz
lahf
addb
rcrb
or
add
jmp
push
in
mov
cmp
fldl
sub
push
in
inc
push
xchg
push
out
shll
push
or
int
mov
xor
rcrl
inc
das
inc
int
call
pop
dec
jle
arpl
mov
fistpl
aas
dec
xor
pop
xor
test
enter
sahf
xor
shlb
enter
int
add
ret
lods
repnz
lds
pop
negb
and
leave
bound
fsubr
stc
inc
mov
mov
leave
mov
push
mov
adc
xlat
mov
fmuls
sahf
and
xchg
push
data16
aas
outsb
xchg
fwait
test
adc
popf
inc
stos
int
rcrl
xchg
xor
mov
mov
xchg
roll
stos
inc
addr16
sub
pop
repz
test
sub
aam
cli
test
xorl
dec
sbb
test
leave
ljmp
cmp
stos
and
iret
mov
dec
adc
or
sub
mull
and
cmp
jmp
mov
fidivrs
mov
icebp
push
mov
cmp
stos
fiaddl
mov
shrl
std
add
aaa
aaa
mov
sub
fnstsw
or
xchg
std
stc
int3
arpl
jno
or
xchg
rol
fwait
pop
rcrb
clc
aad
push
inc
pop
call
cmp
xchg
sub
xchg
jmp
dec
imul
cli
cmp
and
fmuls
jmp
jae
inc
jne
cs
jp
push
pop
int3
lahf
movsl
cmpsb
imul
aam
mov
shl
jo
imul
xchg
adc
adcb
roll
jmp
enter
lahf
xlat
leave
mov
pusha
leave
scas
jae
stc
out
popf
jg
jmp
mov
lret
mov
in
cmp
mov
cmp
xor
mov
and
inc
stc
mov
cmp
ljmp
cmp
ja
sbb
pop
daa
out
ljmp
xor
mov
lret
lret
cmp
stc
cmc
pop
or
fucomi
pop
push
lds
add
outsl
mov
test
lahf
xor
fimull
fldcw
imul
pusha
aas
loope
xor
mov
test
xor
xchg
mov
daa
divb
sub
enter
mov
aad
mov
popa
fistl
ret
jns
push
cmp
lods
inc
test
pop
imul
pushf
scas
int
stc
pop
in
in
mov
dec
sub
jne
fsubr
mov
ficompl
jge
cli
jp
or
mov
insb
sbb
and
ljmp
cmp
lcall
jno
cld
sub
arpl
repnz
lods
shll
mov
lds
and
sarl
cmp
out
jp
test
popf
or
mov
cwtl
pop
lods
push
jp
out
pop
cmpsb
je
iret
pop
add
pop
test
loopne
xor
les
sbb
jae
mov
scas
mov
fs
add
insb
xchg
sahf
inc
int3
mov
inc
out
sub
xchg
dec
mov
mov
and
outsl
stos
push
mov
icebp
sarb
ja
scas
rcll
negb
lods
cld
rol
xor
push
ret
lock
lret
cltd
mov
inc
into
xor
push
jne
adc
mov
jne
adc
rorl
data16
jno
jge
fcmovnu
popa
xor
jle
clc
scas
adc
in
sbb
sbb
fcomi
mov
imul
mov
pop
ds
sbb
lea
jl
out
push
cmp
xchg
out
xor
mov
scas
push
nop
mov
xchg
xor
in
xchg
out
inc
sahf
cmp
cmpb
sbb
repnz
push
pop
dec
push
xor
fisttpl
ret
cmp
jl
and
or
out
iret
rcr
jae
pop
fcomp
mov
push
movsb
jbe
or
int3
cmp
nop
jmp
jo
test
outsb
aam
push
sub
je
or
add
adc
cwtl
dec
popa
xchg
sbb
andb
pushf
xor
add
xchg
pop
pop
and
aaa
es
jl
sub
jae
dec
mov
pop
ja
insl
jmp
cltd
sub
mov
fmulp
sub
addr16
jno
imul
pop
repnz
cs
pop
push
repnz
xor
push
movsl
push
mov
mov
xor
jns
addb
pop
push
mov
lcall
push
loopne
jl
shll
sbb
incl
out
inc
xchg
imul
pushf
aas
inc
sbb
in
aad
shl
jbe
fstpl
hlt
cmp
push
jae
sbb
popf
add
adc
sbb
leave
addr16
fisubrs
add
xchg
test
inc
lcall
mov
insl
aas
jb
sbb
xor
or
lock
push
dec
add
adc
es
cmpsl
push
inc
inc
push
adc
or
jge
mov
push
stc
and
sbbb
movl
call
jbe
xchg
adc
pop
mov
call
daa
or
mov
test
add
in
mov
loop
lret
not
ret
inc
loop
mov
push
nop
imul
adc
xor
mov
pop
add
mov
into
pop
int3
les
mov
mov
int3
dec
xchg
lods
push
jmp
outsl
leave
xchg
xlat
rolb
rorl
mov
mov
mov
int3
enter
call
leave
jl
pop
mov
dec
loope
bnd
int
cs
pop
mulb
ja
push
jne
xchg
pushf
das
xchg
xor
es
mov
pop
lods
pusha
xchg
data16
test
and
aam
loope,pn
mov
mov
ret
cmp
push
xor
fwait
xchg
inc
sti
jae
cltd
dec
adc
mov
stc
popf
and
inc
xchg
sahf
jmp
cld
or
into
xchg
aaa
into
out
sbb
push
jae
test
mov
mov
and
ljmp
cmp
cltd
test
or
enter
pop
ljmp
jo
ret
inc
imul
cmpsl
push
fadd
dec
cli
andl
setge
pminsw
pop
xlat
jne
mov
icebp
xchg
fwait
cmpsb
leave
add
dec
rorb
lea
in
lds
andl
cmpsl
and
mov
cli
push
arpl
and
nop
std
mov
fiadds
push
dec
ljmp
in
mov
adc
push
outsb
pop
and
loopne
leave
in
imull
xchg
pushf
lock
rolb
cwtl
or
sub
jmp
mov
fwait
and
jle
btr
fs
fucomp
scas
push
out
add
sbb
lods
cmp
and
inc
and
in
xchg
sub
movsl
adc
or
sbb
enter
mov
std
mov
rol
push
push
repz
mov
push
jae
add
je
mov
jmp
fisubrs
les
bound
and
jg
int
xor
push
push
icebp
or
pop
loopne
subl
jp
mov
std
jl
mov
insl
insb
jg
cs
int
push
inc
repz
movl
aaa
xor
jle
fbstp
sub
inc
adc
cmc
mov
mov
mov
jecxz
push
sub
and
pop
xchg
pop
dec
mov
pushf
repnz
sbb
cmp
lcall
pop
mov
dec
mov
pop
mov
ret
jne
push
mov
fwait
addr16
test
roll
add
in
int
data16
fwait
pop
iret
cmp
mov
xchg
cmpsl
movsl
lds
pop
mov
mov
fucomp
call
mov
xchg
sub
cmpsl
scas
xchg
jmp
jg
divl
jae
enter
stos
ja
adc
jp
xor
cmp
jns
or
add
push
dec
push
adc
or
faddl
data16
imul
sub
xlat
aam
sbbl
int3
push
lahf
sbb
inc
int
icebp
mulb
cli
jae
iret
xchg
jbe
mov
fidivrl
rorb
jg
cmpb
xchg
or
loop
in
iret
fcmovnbe
pop
dec
pop
dec
fsubrl
dec
aam
imulb
xor
pop
insl
aam
mov
clc
and
test
popa
xchg
sbb
mov
aaa
into
jl
xchg
sub
aam
cmpb
mov
ror
inc
loop
dec
mov
jmp
or
jnp
in
aas
and
sarl
out
cld
sub
fadds
aaa
test
mov
mov
jno
add
xor
push
sbb
cwtl
insb
inc
jo
cmpl
push
add
sub
pop
aam
inc
sbb
cld
adc
sbb
call
dec
adc
dec
cmpl
stos
in
out
mov
fmull
mov
jno
fadd
addr16
nop
test
pushf
bound
jno
adc
ds
cmp
shlb
jno
mov
cmp
push
cltd
push
fdivrl
loop
inc
xlat
and
data16
xchg
scas
or
int
sub
sbb
adc
movsb
pushf
inc
jae
in
jg
jp
xchg
loope
xchg
push
lahf
ss
stc
dec
pusha
das
and
push
pop
jl
mov
add
hlt
push
and
adc
cld
daa
sub
xchg
xor
xchg
sub
int
lret
push
xchg
dec
sub
je
aam
iret
lods
mov
xor
xlat
outsb
fcmovu
xchg
inc
jl
cmc
jl
sahf
int3
fadds
push
popf
mov
jmp
inc
inc
xor
cmp
push
inc
inc
sbb
js
mov
mov
fs
xchg
dec
daa
ss
add
sbb
cwtl
jae
lahf
hlt
jnp
pop
filds
lds
js
loop
insb
add
mov
inc
mov
add
lret
inc
cmc
fcomi
sub
dec
scas
xor
add
sbb
dec
mov
xlat
popw
inc
fimull
jno
int3
inc
push
loopne
test
loope
call
cmp
push
xchg
xchg
int
test
mov
push
mov
jb
xor
in
aaa
pop
sub
test
lcall
cmp
cmp
data16
imulb
cmpsb
sbb
sub
mov
mov
movlps
aad
test
addr16
pop
in
inc
hlt
and
push
mov
push
data16
adcb
push
lahf
arpl
sbbb
rol
bound
mov
andb
icebp
fsubs
stos
roll
push
sub
cltd
xchg
fsubs
mov
add
fsubr
pop
push
lods
fs
sbb
je
aaa
scas
mov
and
ficoms
inc
sbb
repz
icebp
out
jle
in
or
inc
cli
outsb
mov
pop
mov
loopne
std
es
outsl
inc
ss
mov
and
push
sbb
xor
rcrl
adc
roll
xlat
out
or
testl
call
pop
adc
clc
stos
aaa
fnstenv
decl
outsb
add
ret
add
add
mov
loop
mov
dec
movsb
imul
sub
sbb
dec
dec
mov
leave
lahf
fistpll
in
lea
dec
push
test
sub
popa
cli
push
mov
stos
out
push
pop
lea
imul
inc
popf
xor
jg
mov
adc
lret
out
dec
out
idivb
lods
out
xchg
xchg
icebp
leave
js
sti
mov
xchg
insl
sub
pop
arpl
ss
and
or
dec
lahf
jno
xchg
lds
es
dec
mov
xor
and
sub
mov
insb
sub
mov
add
ret
imul
xor
shrb
fildl
sahf
and
test
ss
pop
jns
shll
cmp
add
inc
enter
or
mov
adc
mov
sbb
std
cltd
outsl
sti
dec
shll
jmp
insb
sbb
mov
xchg
ja
jns
lcall
cmp
outsb
add
sarw
stos
cmp
inc
push
jns
jmp
fstpl
pop
mov
ret
movsl
mov
ret
push
sbb
lea
add
mov
mov
push
loopne
pop
jmp
and
mov
sbbl
cmp
add
mov
pop
pop
dec
xchg
ja
jecxz
add
push
lea
xlat
xor
mov
mov
leave
bound
inc
fmuls
stos
pop
neg
pop
insl
jge
ds
dec
out
ret
test
jmp
push
cltd
jb
fxtract
adc
cmc
jl
sbb
shlb
sub
clc
lahf
xor
loope
mov
jmp
into
pop
cmp
pop
lods
mov
cwtl
sbb
and
sbb
pop
mov
in
adc
xchg
pop
and
scas
aas
or
push
mov
or
sbb
divl
shr
push
bound
xchg
jae
jge
pop
and
ror
push
ret
ljmp
pusha
add
pop
add
sbb
bound
lds
fildl
mov
inc
pusha
divl
and
mov
sub
jp
xchg
add
aad
fsubrl
ret
adc
es
insb
jb
test
inc
or
xor
loop
loop
or
jo
push
mov
xchg
sbb
shr
adc
jle
and
push
jns
dec
sub
cwtl
loopne
and
imul
into
sub
fwait
mov
adc
mov
push
sti
pop
pop
xor
and
aad
dec
nop
and
fadds
std
push
movsl
ljmp
test
into
sbb
jbe
sub
clc
sbb
fwait
adc
pop
xchg
mov
cmpsb
cmp
out
test
push
ret
adc
mov
js
pop
dec
loop
sbb
imul
lock
push
aaa
fdecstp
int
in
cld
mov
mov
popf
jbe
test
stos
mov
adc
sbb
ds
je
mov
stc
popf
adc
cld
imul
addr16
pop
xor
ja
xor
adc
lods
fwait
or
and
and
rolb
bound
jo
jo
icebp
dec
xor
jp
stos
jmp
out
popa
les
fwait
test
arpl
cmp
out
pop
jo
ss
lock
aaa
or
popa
push
mov
fnstcw
adc
mov
pop
scas
fdivrs
mov
je
mov
stos
sar
subl
xchg
ja
add
js
popa
cmc
pop
rol
out
loopne
movsl
aaa
mov
add
int3
fsts
push
and
mov
push
sub
jb
mov
fnstcw
xchg
cmc
fcompl
stos
and
sbb
xchg
and
nop
imul
mov
sbb
fs
aas
xor
sbb
and
sub
fisttpl
ljmp
mov
mov
movsb
jnp
and
mov
hlt
and
in
outsb
sub
or
dec
aam
push
daa
mov
les
sub
dec
rorl
bound
dec
andb
into
jae
repz
dec
out
pushf
lods
push
adc
movsb
lret
lahf
mov
sub
mov
push
mov
mov
js
lahf
inc
lcall
jmp
cmp
mov
or
mov
jno
lea
pop
popa
adc
rcl
mov
stos
mov
push
dec
mov
leave
notl
outsb
arpl
js
clc
dec
sti
or
xor
aad
pusha
inc
cltd
sbb
lds
push
inc
sahf
or
test
mov
pop
jecxz
test
inc
adc
push
iret
xchg
cs
xchg
mov
stos
jne
outsl
inc
cmpsl
xchg
jbe
cli
sbb
mov
adc
sarl
jg
enter
cmc
das
xor
popf
mov
push
shrb
out
sbb
xchg
xchg
dec
cmp
out
and
aaa
pop
sbb
daa
mov
test
enter
fistps
std
adc
imul
in
mov
in
js
push
push
dec
lahf
cmovo
test
cmpsl
push
popf
adc
pop
ror
mov
push
jne
mov
rcrb
add
lea
jmp
and
mov
fidivl
mov
pop
mov
out
lahf
cmp
stc
clc
data16
xchg
cs
fldl
adc
or
jle
mov
add
sub
in
std
int
outsb
aas
lock
sub
mov
ret
js
imul
dec
stos
mov
pusha
jo
mov
inc
xlat
sub
insb
scas
mov
movsl
inc
mov
push
add
xchg
xor
es
les
adc
sbb
xchg
push
stc
or
pop
stos
inc
jmp
or
xor
xor
fwait
stos
inc
mov
mov
mov
fnstenv
addr16
lret
adcb
push
ljmp
addl
in
mov
push
pop
insl
sarb
ret
mov
dec
cmpsl
out
icebp
into
aaa
in
sub
test
rorl
pop
loopne
pushf
fwait
mov
test
sti
xchg
mov
pop
scas
sbb
sbb
rolb
out
mov
repnz
call
mov
out
inc
test
push
xchg
insb
ja
jno
imul
out
inc
xor
cmp
sbb
aad
loope
ffreep
mov
aad
cmp
or
xor
cmp
ss
ja
push
cmp
cld
push
out
or
das
pop
fprem1
shrl
xchg
fldl
add
jns
and
lods
dec
movsl
sbb
add
or
jnp
lods
cld
push
cmp
mov
cmp
cmp
outsl
jo
cltd
mov
push
and
fsubrs
and
and
in
fidivl
fwait
repz
int3
xlat
push
pop
aaa
dec
inc
mov
adc
das
xchg
xor
cmp
jne
ljmp
jg
pop
loopne
ds
js
cmc
lods
add
inc
int
mov
push
jnp
daa
pop
inc
mov
xchg
xchg
pop
add
mov
mov
pop
lds
sbb
jl
cmpsb
lock
lahf
inc
sahf
mov
and
pop
dec
inc
insb
xor
les
sub
int
inc
sahf
aam
cmpsl
aas
insl
xor
jns
xor
sbb
sbbb
cwtl
lods
jmp
loopne
push
sub
inc
mov
and
push
or
stc
jle
xchg
movsb
imul
mov
adc
addl
nopl
xor
lock
jbe
arpl
stos
add
test
sahf
adc
rcrb
rolb
push
divb
sub
cmp
push
and
pmaddwd
dec
mov
int
daa
jb
sub
adc
shll
add
sbb
js
pushf
jae
jmp
xchg
push
jecxz
cmp
sbb
outsb
out
mov
fnstenv
dec
sub
hlt
cmp
shl
aam
test
stos
imul
pushf
pop
lret
pop
cmc
push
out
mov
pop
outsl
xchg
outsb
cs
pop
xchg
mov
test
test
xor
push
andl
xlat
call
mov
mov
ret
pop
mov
int
push
dec
add
mov
mov
pushf
push
adc
loope
add
into
in
or
andb
outsb
inc
pop
xchg
lcall
icebp
mov
adc
out
cmpsl
xchg
sub
fs
xor
mov
sub
push
cmp
fldl
xor
gs
pushf
push
in
flds
cmp
mov
test
and
pop
call
cmp
lods
test
ja
pushf
fnstcw
testb
pop
dec
xchg
les
outsl
loop
xchg
data16
cwtl
mov
push
or
imul
add
movsl
icebp
pop
sbb
jmp
aaa
mov
cmpsl
test
xchg
mov
leave
sub
push
jl
rorb
or
test
jnp
mov
in
sti
rcrl
mov
pusha
int
xchg
decl
rolb
or
and
adc
scas
test
das
loope
adc
mov
cmpsb
cmp
mov
les
rcrb
jecxz
xorl
movsl
mov
xchg
xor
fmul
movsl
in
scas
and
sbb
push
loop
testb
shl
imul
in
jb
mov
push
sti
xchg
xchg
popf
stc
xchg
repnz
lret
jnp
cld
xchg
out
popa
sbbb
shlb
mov
sbb
mov
dec
mov
mov
jmp
jp
ja
adc
pop
lret
and
mov
cltd
adc
lods
jmp
mov
xchg
mov
ficompl
mov
cmp
mov
cli
jo
xlat
jbe
pop
inc
out
adc
das
or
adc
lret
ret
inc
cld
lcall
fneni(8087
imul
cmp
adc
sbb
and
test
xchg
jecxz
xchg
call
ljmp
call
push
sub
pop
cmc
push
lahf
addb
xor
test
xor
test
sbb
popl
imul
mov
bound
inc
enter
sub
push
xchg
clc
dec
mov
sbb
call
pop
imul
lods
movsb
or
xchg
mov
xchg
push
cmc
cmp
add
mov
stos
aaa
imulb
ljmp
ret
std
cs
dec
sbb
fmull
xor
lret
push
jo
cmp
push
inc
scas
into
push
in
nop
sub
ja
sub
adc
cld
popf
jne
cmpsb
cwtl
mov
push
scas
sti
call
xchg
ss
jno
dec
mov
adc
aad
hlt
jl
es
fwait
add
negl
add
inc
notl
cmp
ljmp
cltd
push
pop
mov
xbegin
iret
shll
mulb
ret
insl
push
cmc
or
pop
ss
jge
subl
mov
dec
adc
mov
aas
dec
sbb
cwtl
lea
jge
loope
xor
les
aaa
stos
pop
bound
hlt
into
pop
bound
pop
cwtl
xchg
and
repnz
cmp
and
or
aam
or
dec
and
inc
sarb
pushf
xlat
adcl
andl
xor
adc
push
xlat
and
and
lods
and
or
imul
in
lcall
pop
je
cmp
dec
jno
or
call
in
clc
push
cmpsb
imul
iret
lahf
leave
aad
ds
sbb
xor
jle
out
sbb
mov
fsubr
push
dec
add
mov
addr16
sub
jno
adc
sub
push
xor
test
gs
jb
jnp
sbbl
insl
add
dec
mov
out
jp
dec
scas
insl
lods
inc
push
push
lret
bound
add
push
gs
icebp
and
fidivs
daa
mov
xor
lods
jmp
cmc
lcall
cmpsb
xchg
xchg
fsubs
aam
sub
xor
pop
fwait
mov
int
and
xchg
cs
pop
out
les
ljmp
pop
bound
cli
popf
or
movsl
aas
cmpsb
cmp
fisttps
out
addr16
mov
lea
xchg
dec
mov
pushf
fldl
cltd
test
imul
cwtl
pop
mov
loop
jb
xchg
add
adc
dec
mov
mov
mov
lea
jae
push
xchg
orb
xor
lock
mov
cld
popa
stos
pop
inc
push
addb
lcall
jecxz
mov
mov
fadds
lcall
and
inc
loope
je
in
inc
gs
mov
stos
xlat
mov
fucom
ljmp
std
mov
fisubl
paddusw
jecxz
mov
in
xor
aam
jo
mov
mov
xchg
xor
cmp
out
imul
pop
in
sbb
lret
mov
shrb
nop
ss
push
repnz
mov
rolb
jns
ja
sub
jne
test
add
pop
stos
xchg
mov
es
frstor
mov
clc
loop
fs
xor
xchg
lret
mov
push
mov
jmp
inc
push
inc
out
sbb
and
insl
jge
inc
scas
cmp
and
push
test
dec
mov
lods
inc
leave
inc
faddl
jecxz
pop
and
xchg
inc
jecxz
jle
cmpsb
sub
pushf
lcall
adc
jle
or
pop
fnstenv
lds
cmc
adcl
cltd
pop
das
cwtl
call
mov
scas
inc
add
in
jb
cmp
push
push
mov
mov
in
imul
cmp
jmp
dec
into
jb
sub
bound
and
rcll
insl
movsl
sub
loop
jge
test
adc
ret
jp
mov
arpl
test
push
push
jge
or
bound
sub
push
add
ss
cld
and
inc
fldt
fwait
adc
rcrl
and
jle
test
fucomi
shrb
vpxor
sar
test
push
xor
jmp
push
aam
sbbl
outsl
fwait
pop
loope
sbb
insb
inc
sbb
jne
push
jmp
test
adc
xchg
jmp
js
dec
out
mov
ss
roll
push
cli
cs
mov
pop
cmp
push
test
in
pop
out
sub
dec
xchg
scas
jl
int
int3
sub
aaa
fldl2t
pop
sbb
push
jb
or
ret
dec
and
mov
mov
ss
inc
test
lahf
sbb
xchg
dec
lea
pushf
dec
fwait
mov
out
mov
dec
mov
outsb
jae
addr16
adc
cmp
pop
idivb
data16
in
jae
or
ja
mov
stos
push
mov
sarl
imul
sbb
add
jno
clc
add
cmp
jne
xlat
inc
inc
pop
movlps
adc
out
std
xor
cmp
inc
push
or
dec
mov
outsl
xchg
sub
ror
mov
jb
mov
out
int3
idivl
daa
je
sub
pushf
add
sarb
call
data16
inc
gs
mov
sub
stos
call
xor
in
inc
paddsw
fdivrl
subl
or
sbb
jne
jb
aaa
movsl
scas
or
sbb
fadds
lret
mov
imull
pop
push
inc
mov
addb
mov
jp
repz
fldt
mov
lods
inc
insb
pcmpgtd
dec
not
ret
push
int
and
cmp
cmc
fdivrs
mov
aam
and
mov
cs
lea
dec
jbe
cmp
into
lahf
mov
cmp
aas
movsb
shrl
sti
and
xchg
das
ljmp
pop
bound
pop
lods
lcall
std
pop
fisubl
data16
push
dec
xchg
into
divb
fstpl
repz
xor
pushf
hlt
fmuls
jbe
adc
push
adc
cmpb
scas
mov
jg
adc
lods
mov
lret
lods
inc
cmp
int
or
jo
pusha
insl
mov
scas
xorb
xor
pop
sub
rcl
ret
stc
or
out
sbb
fnstenvs
mov
xchg
jle
daa
bound
loopne
lock
mov
xor
testb
repz
or
aam
xchg
test
lock
sbb
add
dec
add
cld
mov
xchg
add
lret
out
cmp
mov
dec
cmp
push
mov
add
mov
mov
fs
mov
shr
cmpsl
mov
std
out
add
sti
fstpt
cwtl
movups
sbb
jne
mov
push
outsl
sub
aas
pop
nop
cld
sbb
outsl
shl
or
or
xchg
int3
rcll
cmp
jge
into
mov
addb
or
mov
mov
ja
mov
sub
fcoms
lds
pop
fnsave
mov
aas
adc
in
push
in
gs
xchg
bound
xchg
je
aaa
xchg
test
mov
dec
cmpsl
and
mov
and
xchg
loope
clc
mov
bound
fwait
xor
push
adc
xor
mov
mov
divb
fwait
test
adc
lock
aad
test
mov
pop
or
or
pop
scas
inc
mov
in
addr16
inc
cld
mov
pusha
mov
or
movsl
ljmp
and
adc
pop
jns
mov
and
sarb
stos
lret
push
or
fsubs
leave
jae
dec
in
inc
sub
aam
andl
xchg
lock
es
decl
outsb
mov
mov
mov
aam
inc
lahf
jnp
cmpsb
push
xlat
and
xchg
fwait
mov
xchg
cli
call
or
adc
in
jl
popa
repz
mov
test
xor
das
xchg
and
mov
aad
imul
jns
test
jg
lret
mov
dec
push
jb
out
mov
gs
dec
nop
out
js
dec
cmp
mov
push
out
jb
in
out
push
xchg
sub
test
fisubs
add
pop
mov
adc
add
popa
jae
xchg
mov
xchg
mov
repz
and
mov
imul
gs
jmp
xchg
jb
sub
cmpsl
or
add
xlat
mulps
and
pop
dec
popa
sub
jl
ljmp
ds
mov
inc
leave
xchg
scas
xor
enter
sub
in
out
add
dec
add
pop
movsl
inc
adc
leave
fidivrl
cwtl
pop
mov
enter
xchg
push
dec
jecxz
mov
repnz
inc
nop
ret
outsb
inc
fistpl
cmp
push
enter
pop
jmp
out
cmpl
adcl
dec
fdivrp
or
addb
dec
mov
push
movsb
mov
sub
cmc
adc
inc
push
push
outsl
imul
adc
push
ja
mov
xchg
jno
sbbb
sbb
and
lods
pop
sub
dec
repnz
lock
xrelease
mov
or
sbb
xsha1
cmpsb
mov
rorl
push
ljmp
push
incl
mov
xchg
lret
dec
ja
jp
jecxz
push
pop
int
xchg
xor
sub
fildll
inc
mov
and
mov
nop
fmulp
stos
mov
adc
adc
jo
lahf
mov
jne
pop
jle
in
mov
cmp
dec
adc
negl
jl
push
mov
fistps
test
mov
imul
mov
ficoml
insl
shll
jne
mov
out
ds
push
jo
stos
inc
inc
xchg
xchg
test
out
push
sub
or
scas
outsb
and
pop
repz
andl
dec
dec
add
pop
mov
lea
shl
cwtl
lods
ror
ljmp
cli
gs
pop
xchg
mov
popf
jae
cmp
adc
aas
jmp
sub
jp
mov
xchg
and
push
sbbb
iret
out
stc
add
jecxz
das
inc
xor
ja
mov
mov
sbb
pop
repnz
adc
rol
xor
sub
test
in
fwait
cmp
std
pop
xor
xor
test
int
xor
or
inc
push
icebp
mov
rclb
ja
cs
shlb
xor
data16
out
xchg
and
cmp
outsb
cmp
aam
bound
ror
or
add
rolb
jnp
lret
xor
mov
mov
in
sbb
cli
test
mov
pop
lods
add
shll
jecxz
scas
add
inc
neg
stos
outsl
pusha
add
add
and
cli
xchg
cmp
aam
pop
or
repnz
outsb
and
adc
jle
stos
ljmp
pop
pushf
cmp
jmp
mov
fimull
push
or
lock
imul
mov
outsl
iret
and
lods
lahf
sub
dec
ret
pop
jne
cmp
sbb
xchg
sub
jne
dec
mov
add
decl
xchg
or
pusha
int
jb
repz
push
cmpb
cmova
fistl
mov
idiv
and
pop
pop
test
dec
push
push
hlt
or
push
int3
dec
adc
lds
jae
out
mov
decl
hlt
lgs
jmp
or
jle
popf
or
test
and
xor
into
gs
adc
inc
xchg
mov
shl
addr16
hlt
lods
test
mov
mov
iret
push
and
fdivrs
xor
mov
inc
mov
pop
pop
pop
xchg
dec
leave
inc
and
out
int
stos
int
push
pop
xchg
inc
scas
mov
xchg
cltd
flds
mov
xchg
ljmp
push
stos
add
add
fs
hlt
leave
inc
mov
aam
xchg
inc
repz
fdivs
nop
negl
or
stos
dec
dec
cmc
mov
sub
lods
dec
xor
lea
nop
stos
repnz
jno
xlat
jno
dec
inc
push
arpl
fsubrs
sbb
mov
es
jno
outsb
sub
inc
push
scas
mov
xor
jg
mov
repnz
mov
xchg
test
xchg
int
mov
lcall
data16
pop
mov
cwtl
pop
mov
sbb
xchg
icebp
sbb
fs
or
adc
shrb
lcall
xchg
cmpsb
xchg
and
ss
pop
rorb
push
cmp
inc
imul
ds
fadds
ret
jnp
fnsave
repnz
popa
jbe
or
jmp
jo
test
in
aaa
fwait
sub
cltd
or
and
cs
lcall
lret
sub
neg
jbe
add
dec
loope
sbb
pop
mov
xchg
daa
mov
add
mov
xor
jmp
stos
out
jl
dec
xchg
add
cmpsb
push
sbb
inc
pusha
jae
je
es
and
insl
pop
lods
mov
js
aas
pop
jge
mov
jge
andl
fmul
orb
sub
int
or
cmc
jnp
daa
nop
mov
ret
js,pn
push
cmp
test
add
int3
xchg
jle
shll
stos
fsubr
stc
cwtl
xor
call
add
enter
sarb
into
mov
mov
dec
sub
dec
aaa
aaa
or
xchg
lods
sti
ret
jns
xor
cltd
ret
jmp
bound
xchg
nop
or
es
cmp
push
or
jp
xchg
and
insb
stos
fsub
jge
mov
push
lods
mov
and
and
dec
jne
mov
ficoms
or
xlat
cmc
addr16
mov
adc
popf
lock
icebp
or
push
pusha
scas
inc
xchg
push
push
popa
and
ss
ficomps
mov
aas
ffree
in
cmp
push
sbb
fwait
sti
gs
mov
cmpsb
jne
sbb
rclb
add
es
jg
cmp
int3
cwtl
mov
and
sbb
test
pop
dec
jbe
lods
cmp
leave
dec
aas
imul
aam
ja
out
sbbb
jecxz
cwtl
pop
inc
pop
pusha
lret
xlat
mov
aaa
mov
sbb
repz
insl
cs
ficompl
pop
mov
xchg
mov
mov
pop
xor
sub
clc
in
mov
cmc
ucomiss
jle
inc
out
leave
mov
lret
lods
xor
scas
pop
xor
pop
sub
clc
mov
in
jecxz
sub
stos
flds
push
inc
into
mov
push
in
nop
test
jbe
je
outsl
cmp
pop
cmp
dec
popa
sarb
mov
sub
and
jno
pop
ret
outsb
and
fbstp
add
scas
insb
cmpb
jmp
fwait
add
mov
mov
ret
std
jb
push
clc
or
adc
test
mov
ret
shll
orb
or
inc
dec
mov
cmpb
ror
popf
in
mov
aaa
dec
push
popf
jp
dec
mull
lods
jns
packssdw
das
ds
das
incl
iret
or
mov
cltd
hlt
sbb
ja
adc
inc
cltd
rep
inc
dec
xchg
fsubr
repz
push
mov
ss
push
or
enter
popa
lock
out
jb
xchg
shl
push
cli
xor
mov
movsl
xchg
ret
insb
dec
aad
orl
adc
in
push
mov
das
pop
dec
dec
mov
pop
push
ljmp
inc
fldt
loop
into
jmp
bound
push
mov
mov
fdivl
and
dec
fwait
shrb
pop
int3
fs
std
jns
and
lret
in
mov
sub
std
push
mov
pop
addr16
jnp
mov
mov
jnp
push
stos
fidivrs
dec
add
movsl
add
test
insl
sub
xchg
xor
fs
jno
add
inc
xor
inc
cmpsl
sti
mov
adc
or
sbb
pop
xor
mov
cwtl
js
test
in
dec
pop
and
cs
nop
in
cwtl
test
ja
and
dec
mov
jl
movsb
mov
jp
cli
mov
xchg
out
jg
in
add
pop
lcall
cmp
pop
imul
push
adc
xchg
in
jae
mov
sbb
mov
stos
daa
in
sub
add
les
mov
int3
mov
cmp
orl
popf
insl
loopne
jbe
mov
jnp
out
lahf
into
imul
xchg
int3
fs
in
dec
lahf
mov
push
push
scas
repnz
icebp
pop
imul
in
lcall
movsl
je
xor
arpl
testl
adcb
jae
pusha
orl
lret
loope
adc
movsb
mov
cltd
scas
fiaddl
and
repnz
shrb
pop
jno
lret
xchg
sub
jne
scas
mov
dec
jnp
cmc
cmp
cmpsl
outsl
lock
outsb
test
mov
push
mov
das
nop
jae
pop
pop
cmpsb
cmp
fidivl
inc
mov
mov
bnd
in
push
push
cmpsl
inc
cmc
xor
push
sbb
pop
pusha
cmp
mov
ja
popf
xchg
pop
xlat
add
push
and
and
pushf
aad
xchg
cmpl
jg
push
pop
pop
sbb
mov
ret
sub
lods
js
inc
sub
fs
pusha
cwtl
shl
in
call
outsl
xchg
stos
in
daa
divb
or
mov
cld
pop
add
jnp
sub
or
ss
sbb
push
pop
sbbl
mov
push
mov
pop
cli
les
in
xchg
mov
or
cltd
cmp
rcll
add
dec
push
mov
sub
test
nop
pop
xchg
mov
addr16
jo
icebp
insb
dec
push
ss
imul
int3
rcl
scas
rorl
shlb
das
cmpsb
cmp
ss
pop
pop
jg
xor
jecxz
ss
mov
mov
ret
js
lods
mov
cltd
popf
fs
jp
fcmovne
jo
push
test
jno
mov
mov
shrl
xlat
cmp
inc
ret
jp
sbb
cmpps
xor
pop
loope
mov
jp
push
mov
inc
in
aaa
jmpw
add
mov
pop
jle
inc
fdiv
lods
mov
icebp
movsb
shlb
jecxz
cmp
les
fldenv
mov
push
xchg
push
mov
sarl
fcmove
bound
pop
jmp
push
inc
xor
xor
jbe
push
adc
xor
es
lea
lahf
xlat
jmp
mov
push
cmp
movsb
loop
mov
sbb
sbb
jmp
test
pop
loope
lret
sarb
movsl
cld
jmp
lret
int3
pop
jp
xchg
les
stos
mov
xor
lods
adc
mov
dec
mov
xlat
outsb
cs
fwait
divl
or
jge
aam
adc
ret
xchg
jae
jl
lods
sub
lea
xchg
jns
lea
mulb
imul
sbb
gs
call
and
ret
dec
add
fsts
jecxz
test
hlt
pop
dec
int3
arpl
sbb
sub
sbb
jp
mov
jb
mov
sub
or
add
sahf
daa
xchg
mov
cwtl
clc
jp
cmp
dec
mov
test
movsb
mov
cwtl
pop
jp
adc
aaa
ja
push
sahf
leave
mov
pop
insb
pop
rcr
inc
and
dec
mov
pop
imul
mov
fmul
pop
fcmovnu
add
in
inc
test
push
mov
int
popf
xchg
mov
daa
and
scas
ret
xor
pushf
mov
cmp
xor
sbbb
pop
int
adc
fwait
sbb
es
ds
es
xchg
test
fdivs
jns
ds
inc
jp
jno
jg
xor
mov
js
int3
lea
popa
sub
out
sbb
out
and
jb
dec
dec
scas
adc
mov
jb
push
mov
loop
cmpsb
out
ficoms
in
outsl
adc
push
ucomiss
js
aas
mov
xchg
insl
mov
fcom
cmp
push
pop
repnz
fstpl
cs
pop
adc
in
inc
shll
dec
dec
dec
loop
int3
in
inc
sub
pop
pop
flds
adc
loope
jnp
mov
mov
mov
shl
ret
stos
fidivl
pop
jmp
pop
dec
enter
push
sub
and
cld
roll
pop
neg
loope
test
mov
and
inc
xor
out
push
sub
addb
mov
mov
mov
cmpsl
adc
cmpsb
mulb
scas
xchg
pop
cmp
mov
xchg
dec
test
ror
ret
notl
add
in
leave
push
xchg
push
out
loop
jp
int3
arpl
jmp
repnz
xchg
mov
loopne
scas
out
jo
or
push
lods
or
adc
mov
cmp
adc
test
inc
inc
push
jmp
mov
daa
mov
pop
gs
dec
pushf
stc
sub
out
mov
sub
js,pt
fwait
popa
imul
mov
insb
xchg
stos
pushf
mov
sbb
enter
mov
mov
and
mov
mov
hlt
and
push
pop
sti
jl
push
stos
xchg
ret
fsubs
subb
mov
out
jmp
push
sub
push
mov
icebp
cmp
push
xchg
push
pop
jno
inc
xchg
sub
iret
iret
mov
in
arpl
adc
jbe
inc
xor
in
fmul
or
repz
mov
push
cmpsl
xchg
mov
and
pushf
pusha
lret
lret
rolb
add
sarb
loop
jp
xor
or
xor
cmpsb
push
imul
insb
loop
out
pop
mov
mov
fwait
icebp
fdivp
je
push
jge
cmpsb
mov
jge
xor
in
test
sub
insb
and
jp
inc
inc
or
mov
arpl
in
cmp
ret
inc
push
outsb
or
loope
cmp
cmp
inc
lea
adcb
sbb
pop
or
fbstp
adc
nop/reserved
mov
sbb
cld
aam
out
cld
shrl
pop
mov
jle
push
mov
sub
test
inc
sub
aaa
shlb
xor
xor
jle
aaa
adcl
pop
sub
lods
adc
sub
or
push
sbb
repz
pusha
adc
test
cmpsb
mov
mov
out
insb
data16
scas
push
insb
cmp
adcl
cmp
xchg
sbb
daa
inc
mov
adc
in
push
insl
fisubs
push
testl
mov
in
push
sbb
ret
rcrb
outsl
lds
xor
inc
mov
mov
or
mov
sbb
mov
pusha
mov
mov
cs
mov
icebp
dec
add
push
popa
shrl
add
cmp
orb
sub
mov
jmp
in
jo
cmp
push
test
adc
mov
in
mov
and
lcall
mov
test
mov
in
adc
pop
in
dec
scas
sbb
adc
test
sbb
push
cs
lcall
inc
ja
shlw
cwtl
icebp
gs
cmp
inc
pop
mov
xor
fistpll
out
lret
mov
lock
push
popa
cmp
mov
xor
dec
je
add
pop
mov
lret
stc
popf
sti
insb
jbe
and
arpl
xchg
in
aad
sub
movsl
pop
loope,pt
dec
fs
add
mov
adc
pusha
loopne
cmp
dec
lret
sti
xchg
or
push
shlb
sbb
push
add
mov
sarl
add
xchg
orb
psrad
adc
and
push
inc
pop
mov
jns
sbb
mov
mov
out
das
pushl
inc
mov
xor
xchg
push
rcll
aaa
fidivl
add
jnp
outsb
inc
pusha
sahf
sbb
or
jle
mov
lods
inc
fadds
leave
xor
outsl
lock
push
pop
xor
lret
cmpsb
fildll
imul
testb
push
mov
xlat
lods
fmull
test
jb
insl
js
in
mov
sti
repz
and
out
jle
fcoml
push
movsb
test
int3
pop
data16
out
mov
popa
add
out
cwtl
incb
inc
sahf
test
jne
shlb
cmp
loopne
xchg
dec
mov
pushf
jg
push
loope
pop
mov
incl
mov
fwait
sti
mov
push
mov
mov
popf
bound
push
das
xlat
es
mov
dec
xor
and
inc
je
loopne
add
addl
pop
ljmp
scas
mov
lret
dec
psubq
aam
icebp
cmp
cmp
jb
add
push
and
int3
sub
stos
in
addr16
pop
inc
movsl
push
mov
inc
les
xor
xchg
jg
es
iret
fldcw
inc
idivb
mov
idivb
pop
xlat
test
test
cmp
insl
daa
xchg
fstpl
pop
ss
je
scas
imul
loope
inc
pop
int
pop
in
xor
jbe
dec
push
mov
sub
xor
addr16
add
lcall
fidivl
in
pop
cwtl
jae
out
ss
xor
in
inc
outsb
inc
cltd
xchg
xchg
push
loopne
mov
and
fildl
mov
movsl
psubsw
jae
into
xchg
mov
pop
gs
mov
or
sub
and
jbe
cs
pop
adc
pop
div
pop
aaa
cmp
ficoms
lahf
and
adc
cmp
rcr
mov
out
cli
sbb
sub
push
jb
addr16
jecxz
xor
push
in
and
sbb
dec
je
xor
jnp
std
push
mov
nop
add
push
div
outsb
nop
pop
xchg
js
mov
int
lret
jecxz
data16
popf
add
adc
sub
and
mov
in
movsl
nop
daa
out
sbb
aaa
sub
and
loope
imul
fdivrs
add
pop
sub
dec
jecxz
fldenv
lcall
in
std
rcr
adc
sbb
into
sar
out
push
or
mov
mov
xchg
stc
mov
fs
clc
or
mov
fdiv
inc
fidivl
outsl
repz
and
mov
lock
mov
cld
push
push
or
pusha
lahf
xchg
jecxz
aas
adc
jmp
xlat
fdivrs
mov
pop
jb
imul
dec
sub
sub
sbbb
icebp
lret
jne
call
in
sub
leave
jae
cli
addr16
loope
es
pop
sub
inc
jae
sub
movsb
ja
or
cmp
imul
icebp
push
push
push
sub
hlt
leave
sbb
inc
pop
clc
push
add
inc
pop
and
add
or
cwtl
test
lods
testb
jbe
xchg
jne
fisttps
push
insl
sub
pop
stos
loopne
xor
fwait
xor
or
stos
popa
lock
out
inc
ljmp
jns
repz
push
xchg
pusha
push
mov
push
lods
sub
sbb
push
pusha
and
mov
movsl
pushf
lods
in
mov
mov
insb
out
aaa
into
lods
xchg
sti
push
xor
adc
add
cwtl
das
inc
cli
or
imul
and
fsub
decb
fucomi
orb
push
ljmp
test
lret
notb
jnp
les
sbb
pop
aam
mov
pop
jl
sub
lea
add
jg
or
shr
repnz
jne
repz
out
test
test
dec
or
dec
int
mov
xor
iret
inc
inc
movsl
jmp
add
adc
mov
cltd
shll
inc
stos
xor
shrl
mov
or
ror
xchg
jmp
int
stos
call
inc
out
mull
sbbl
movsb
adc
mov
adc
pop
decb
lods
dec
xor
lcall
jmp
xor
les
outsl
jae
and
stc
popf
push
push
shrl
out
outsl
jle
testb
leave
stos
outsb
je
in
das
rcll
xor
pop
js
mov
clc
out
lcall
cmp
sub
fldl2t
nop
loop
call
clc
mov
fs
outsl
push
sarb
scas
and
inc
rcl
push
jo
or
lock
shrb
xorl
aam
int3
xchg
mov
or
fdiv
cmpb
push
aaa
mov
ret
jnp
sbb
jge
mov
push
adc
mov
pop
lock
std
es
out
adcl
mov
xor
inc
rcl
sbb
out
pop
adc
leave
push
ja
rolb
push
push
js
fwait
xchg
adc
jnp
pop
movsl
xchg
jl
jp
rorl
mov
scas
js
mov
sub
pop
loopne
inc
sub
adc
and
fcmovu
js
int3
test
ret
aad
push
hlt
fsubs
mov
sub
jmp
dec
pop
add
mov
push
stc
popa
lock
jo
lods
decl
dec
lahf
sub
mov
leave
inc
into
testb
out
lret
enter
cmpsl
je
mov
push
int3
pusha
lods
jl
lahf
je
jge
popf
push
or
out
push
enter
dec
mov
xchg
cmp
aas
or
aaa
pop
adcb
pop
data16
push
sbb
inc
mov
jo
adc
mov
jl
lret
mov
mov
pusha
mov
scas
cltd
es
es
jmp
out
dec
sbb
cmp
jmp
fisubl
push
xchg
les
aad
js
lret
fnstsw
imul
out
std
pop
popf
pusha
cmp
aas
shlb
lds
xchg
jo
ret
lods
and
out
aas
es
mov
scas
add
mov
jb
test
xor
adc
test
lock
push
data16
test
test
lods
cltd
mov
hlt
shlb
pop
or
jge
lods
shrb
sarb
sbb
push
ja
push
les
sub
lahf
rclb
inc
jmp
mov
mov
xchg
pop
sbb
mov
jbe
das
pop
cmp
mov
test
mov
jb
xchg
daa
mov
mov
cwtl
jae
sbb
or
sub
or
aas
jno
xrstor
dec
into
jle
sbb
shrb
lcall
or
movsl
xlat
mov
daa
dec
pop
lret
xorb
sbb
xchg
leave
outsb
into
ret
in
imul
and
test
repz
mov
cltd
add
insb
jmp
pop
sub
adc
xlat
cld
loop
push
inc
in
add
pushl
in
mov
stc
pop
ss
pop
xchg
rcrl
pop
push
lods
mov
arpl
cli
xchg
xchg
outsl
xchg
lahf
mov
ficoml
cli
in
outsb
xor
cmpsl
push
dec
inc
ja
jg
inc
popa
insb
mov
xlat
fcompl
add
and
cmp
rol
pop
lock
pop
cmp
cmp
mov
or
sarb
jmp
inc
push
rorl
mov
sbb
test
outsb
mov
pushf
cli
jecxz
mov
pop
or
dec
push
mov
adc
aaa
cmc
or
pop
jo
push
jle
push
add
stos
push
addr16
leave
xor
add
addr16
sub
xor
out
mov
insl
push
push
ljmp
inc
pop
or
popf
jo
mov
xchg
adc
imull
mov
add
sub
xchg
scas
es
xor
xlat
lods
cmpsl
push
mov
cwtl
pusha
test
fisttps
sbb
aaa
adc
mov
dec
cwtl
es
in
and
mov
mov
into
cmp
push
roll
repz
sub
jb
inc
test
dec
sub
cs
lock
push
mov
ret
jle
pop
idivl
popf
xlat
repz
cmp
add
mov
sti
dec
and
aas
lods
popl
mov
lods
cmp
jle
cmpsb
sbb
dec
fldenv
mov
in
adc
jmp
mov
inc
xchg
cli
mov
or
xor
je
fisubl
xlat
mov
fstpl
cli
add
rcll
jns
aam
xor
cmp
mov
enter
mov
sbb
iret
xorb
xchg
xchg
pop
andb
jmp
in
icebp
xchg
xor
pop
xchg
mov
inc
sbb
lock
je
loopne
stc
in
add
daa
enter
lds
lods
mov
mov
jp
pop
mov
lods
cmp
aaa
lea
in
jbe
xchg
adc
cmp
push
inc
push
xchg
mov
outsb
sbb
testb
je
xor
cmc
jae
mov
push
xor
xor
push
fwait
mov
out
adc
jnp
data16
pop
xchg
imul
jmp
mov
mov
xchg
sbb
mov
dec
scas
pop
inc
into
imul
sub
sbb
lods
inc
leave
inc
sub
shrl
mov
mov
data16
stc
and
xlat
jp
mov
stos
add
adc
repnz
sbb
xchg
popa
adc
add
inc
frstor
repnz
les
mull
test
sbb
jg
dec
scas
inc
jbe
stc
jbe
dec
inc
fwait
xchg
inc
push
lock
cli
imul
loopne
xchg
out
push
cmpsl
outsl
rolb
add
and
test
test
dec
cmp
mov
sub
pop
jb
nop
dec
mov
xchg
roll
mov
or
dec
sub
add
inc
enter
arpl
arpl
inc
rcr
int
into
in
dec
inc
aaa
jbe
repnz
push
outsl
jl
test
mov
push
add
orb
jmp
cmp
imul
into
cs
cmp
scas
or
movsl
jp
xchg
test
jno
fs
pusha
inc
out
popa
sbb
pop
jno
mov
dec
repz
and
pop
je
cmp
sbb
or
xchg
nop
scas
fsubs
or
gs
js
imul
stc
sbb
xchg
mov
ja
push
adc
and
pop
inc
or
movsl
mov
sti
push
push
push
loopne
repnz
dec
loopne
mov
enter
sarl
add
inc
pop
iret
jae
subl
movsl
cmp
aas
ret
dec
mov
stos
add
inc
inc
lds
dec
test
mov
jnp
shrl
add
mov
pop
mov
mov
mov
push
shl
out
outsl
sbb
sbb
fisubrs
dec
sbb
and
lea
fwait
pushf
jg
into
add
cli
ss
pop
jo
arpl
sbb
jle
enter
cmp
es
fs
inc
cmp
mov
int
and
ljmp
aad
aaa
inc
je
mov
in
lds
lret
aam
adc
leave
sub
mov
call
fbld
cmc
or
jle
js
or
call
sub
add
mov
jns
inc
jmp
cltd
cmp
mov
dec
mov
mov
xor
orb
addb
fnstenv
fwait
dec
cli
stos
fimull
popf
xor
into
or
iret
mov
or
inc
rolb
sahf
add
push
adc
lcall
adc
out
lret
scas
inc
mov
push
repz
out
add
or
push
and
ret
dec
jecxz
aad
loop
cwtl
icebp
sbb
mov
sbb
popa
stos
inc
push
or
popf
mov
fiadds
lret
push
jp
xor
adc
scas
push
test
add
fnstenv
loope
neg
xlat
pop
rol
js
aas
and
lret
cld
in
dec
and
adc
pop
je
lods
dec
imul
sbb
lods
shll
into
sbb
arpl
push
sub
cmp
push
mov
das
xchg
jne
xor
das
mov
popa
call
cmpsb
jbe
pusha
fs
je
scas
mov
sti
sbb
inc
test
repnz
sub
movd
je
dec
or
jnp
sub
sbb
ds
mov
daa
push
test
mov
dec
leave
sahf
imul
movsl
mov
adc
pop
loopne
sub
out
iret
xchg
cs
addb
sahf
insl
jae
pop
add
or
outsl
int3
push
sarl
pop
movsb
pop
sub
and
les
es
push
or
mov
ss
iret
mov
fwait
insb
out
mov
mov
int
aam
xor
rcrb
icebp
mov
scas
nop
out
adc
sbbb
push
arpl
pop
mov
xchg
aaa
pusha
pop
shr
addr16
add
xchg
dec
lds
sbb
addr16
mov
fwait
cmp
out
inc
ds
adc
adc
jmp
fwait
lods
in
pusha
cmpsb
lea
add
add
ljmp
nop
cmp
ljmp
xchg
push
inc
call
mov
test
and
shll
sbb
mov
cmpb
sub
adc
mov
xchg
lods
addr16
or
popa
pusha
movsb
push
push
mov
and
insb
mov
jp
xor
stos
das
pop
add
iret
jecxz
jle
lods
mov
inc
rcll
mov
into
mov
stc
setnp
or
adc
add
idivl
mov
dec
loope
jno
mov
movsb
or
addl
nop
adc
mov
xchg
push
pushf
mov
fs
xor
mov
movsl
mov
fld
xchg
adc
movsb
fldcw
sbbl
mov
sub
pop
dec
inc
fistl
into
xor
rcl
out
imul
or
mov
cmp
mov
and
hlt
aaa
push
xor
sub
fldt
and
aaa
scas
inc
push
leave
sti
pop
into
fs
mov
lahf
jno
lret
add
jmp
add
ror
addl
cs
jl
sbb
jns
lock
ret
fsub
add
popf
stc
fsubrs
lahf
mov
lea
xor
pcmpgtw
minps
add
rcrl
and
ljmp
dec
aad
adc
mov
cmc
bound
int3
dec
arpl
push
jo
cmp
pop
sti
mov
xchg
push
fxch
and
outsb
or
test
xchg
mov
lds
scas
xor
scas
xchg
cmp
or
loopne
cmp
jne
push
scas
out
lock
xor
stos
xchg
addr16
pushf
aam
movsb
add
push
repnz
cmc
push
lods
mov
push
jne
shrl
add
out
xchg
push
sub
dec
in
adc
push
sub
mov
push
roll
ja
sbb
pusha
jmpw
into
insb
or
add
out
pusha
xor
sub
fcoms
sub
cli
mov
sbb
fs
sub
xor
into
gs
mov
sub
mov
sub
pushf
pushf
pop
sub
push
aas
scas
inc
cmp
inc
inc
or
mov
push
daa
sub
mov
faddl
data16
jne
les
and
fisttpl
les
popl
push
jne
cmp
testl
sub
sbb
jns
mov
push
shrb
icebp
inc
ret
loopne
daa
pop
js
shlb
push
xchg
iret
xchg
mov
dec
xor
fcomi
push
jns
mov
int3
outsl
loope
and
cwtl
pop
mov
movsb
jecxz
xchg
arpl
and
fcmovu
movsb
xchg
arpl
je
dec
mov
andl
xor
fstps
pop
aas
aad
cmpb
xor
push
fnstenv
inc
shlb
xchg
mov
hlt
arpl
pop
inc
fwait
nop
mov
sub
int
daa
in
jge
jno
push
fcompl
ret
jl
push
and
je
std
and
ret
push
push
divl
inc
mov
sahf
push
sbb
leave
movsl
icebp
or
bound
scas
test
xlat
stos
fnstcw
hlt
jle
cmc
cmc
imul
cmp
shrl
push
fnstenv
out
fsub
cmp
sahf
aaa
fcmove
dec
addr16
fdivp
xchg
mov
lret
mov
pushf
fmul
clc
pop
push
sub
arpl
ror
xlat
lds
dec
xchg
sub
pop
cltd
test
sub
jl
pop
mov
push
daa
inc
int
mov
ret
sbb
scas
popf
or
xchg
mov
jno
cmpsb
sbb
jmp
inc
rorb
cmp
adc
jp
and
adcl
arpl
pop
cmp
cmp
adc
mov
ds
sub
mov
and
mov
daa
lcall
adc
cltd
mov
scas
rorl
xchg
mov
popf
jbe
xchg
test
adc
outsl
dec
jns
scas
insb
inc
dec
adc
stos
adc
cmp
cmp
sahf
std
mov
sbb
insb
mov
mov
or
or
jl
popl
cs
push
push
or
ss
addr16
iret
lods
mov
mov
test
repz
push
mov
mov
sti
mov
bound
daa
sub
mov
out
mov
add
pop
cmpsl
xchg
mov
adc
mov
stc
rcl
not
cmp
in
insl
clc
test
pop
pop
jae
xchg
xorb
lcall
inc
xchg
mov
scas
cmc
adcb
xchg
pop
mov
sub
lcall
popf
xor
fistpll
cs
cmp
dec
add
mov
lret
xor
mov
jge
jns
ficompl
add
movsl
mov
and
mov
or
inc
or
dec
out
roll
scas
sub
lret
and
lret
sbb
pop
sti
outsl
or
mov
cmp
add
popf
addl
cmp
mov
addb
aam
iret
cltd
hlt
jge
sbb
pushf
pop
lcall
push
int
test
push
rorl
int3
arpl
lods
nop
push
mov
pop
mov
insb
and
jns
inc
sbb
lcall
cmpsl
jl
dec
push
sub
jbe
xor
push
popf
pusha
jle
aad
call
sub
mov
rcrl
cld
xchg
gs
lcall
ret
in
fimuls
ljmp
jl
xor
dec
jl
mov
and
xchg
xchg
xor
es
cmp
arpl
mov
mov
mov
jmp
mov
jo
mov
jo
and
jp
mov
mov
sti
adc
and
xchg
outsb
test
jns
out
out
sub
fnstcw
mov
test
cmp
js
mov
adc
push
mov
mov
faddp
loopne
lahf
dec
xchg
push
into
fcoml
leave
test
mov
jbe
cltd
push
stos
mov
pop
xor
pop
dec
jg
cmpb
inc
pop
dec
imul
jno
out
dec
or
ffree
jno
add
repz
or
fsub
xlat
jmp
mov
push
dec
add
daa
iret
or
and
cltd
or
cmp
lock
data16
stos
pop
add
and
jl
add
testb
dec
nop
cmp
mov
aad
lea
addr16
shl
add
cmpsb
les
jb
xchg
pop
fnstcw
test
fiadds
arpl
in
cmpl
or
test
out
add
and
ret
xchg
jnp
das
adc
stc
lds
daa
push
das
popa
push
dec
jno
jmp
inc
add
js
fs
imul
push
xchg
push
imul
push
sub
call
dec
int
and
lahf
cwtl
es
cmpsb
xor
out
jne
js
insb
adc
std
pop
lret
mov
icebp
lret
push
repnz
pusha
inc
out
push
insl
mov
sub
cmp
clc
mov
sub
mov
call
push
pop
pop
or
fidivrs
pop
outsb
shlb
ljmp
cmp
testl
xchg
movsb
jl
popf
and
fsubl
orb
jecxz
nop
daa
add
scas
push
mov
pop
fldl2t
adcl
cwtl
cmp
push
push
sbb
jo
or
sbbb
aad
sub
ss
adc
jns
xor
insl
and
pop
int3
arpl
lcall
xorl
andb
js
inc
mov
cmp
dec
cmc
pop
mov
sbb
mov
pop
add
sbb
mov
adc
fmull
pand
pop
jae
cmpsl
push
push
stos
lods
xchg
sub
fwait
dec
sti
and
add
cmp
cmp
in
les
cmp
sahf
or
in
mov
or
test
adc
shrb
inc
dec
jg
add
mov
mov
inc
notl
sub
int
inc
jmp
fldlg2
cwtl
adc
orb
and
push
push
jnp
xor
jb
subl
int
xor
fldenv
js
int3
mov
mov
cmc
lds
lock
pop
loop
jle
and
and
add
dec
jecxz
roll
jnp
push
add
fsubs
imul
or
ror
pop
pslld
fadds
mov
and
cmp
mov
add
ret
ja
lock
ret
xchg
inc
std
outsl
hlt
adc
push
or
mov
in
xchg
fxch
inc
pop
stc
mov
dec
cmpsb
add
xor
dec
add
in
decl
fmull
adc
jns
fcmovnu
lods
sarb
popa
mov
clc
mov
das
xchg
jne
clc
movsl
push
mov
lcall
fbstp
popa
mov
xchg
pop
mov
lahf
inc
scas
cmpsb
lret
or
jle
scas
xchg
adc
sub
icebp
lds
insl
sub
jns
shrb
jb
pop
lret
mov
cld
pop
pop
cmc
mov
idivb
mov
cmp
pushf
int3
xor
mov
out
xchg
addr16
adcb
mov
iret
lock
jmp
inc
fs
aad
sbb
add
add
dec
int
insb
xor
and
push
jge
jne
mov
sbb
push
jns
lods
xchg
inc
push
insb
add
test
outsb
mov
movsb
adc
sub
cmp
test
cmc
ja
repz
xchg
mov
sbb
lret
or
and
mov
loop
pushf
jno
iret
xchg
mov
mov
mov
cmp
ret
pop
cmc
push
and
mov
mov
xchg
xlat
adc
mov
cmc
push
lcall
divl
arpl
xor
mov
pop
repz
push
mov
adc
push
out
fisttpll
sahf
mov
and
pop
xchg
pop
add
insb
clc
pop
adc
decb
xchg
mov
dec
push
sub
adc
loop
sbb
lods
iret
fcoms
test
orb
dec
mov
jg
ss
cmp
test
jnp
inc
pop
adc
jecxz
insl
popa
fcompl
jne
xor
push
scas
cs
jae
jnp
xor
outsb
adcb
dec
or
addr16
jp
or
and
push
shlb
cmp
xchg
mov
xor
xchg
loopne
sub
int
sub
cld
mov
or
cwtl
jmp
adc
fucom
lock
mov
leave
fucomi
push
movsb
mov
adc
test
sub
mov
cmp
outsb
inc
jp
or
dec
ljmp
out
and
jg
fdivr
fwait
mov
mov
add
test
lds
test
repz
inc
ficomps
cmp
and
mov
xlat
subl
lods
cmp
das
push
push
fwait
sbbl
shrl
push
or
sub
or
sbb
bound
imul
mov
out
push
movsl
lea
sub
or
mov
pushf
xchg
test
jne
test
push
pop
inc
popf
add
add
jno
mov
mov
and
stos
fldl
and
mov
push
repnz
xchg
in
add
and
push
subb
mov
gs
fists
bound
inc
push
inc
imul
ja
pop
dec
gs
jmp
test
lods
and
std
xor
mov
lret
mov
jmp
add
stos
pmaddwd
and
movsl
or
push
dec
push
xchg
sub
lret
andl
scas
push
jnp
jae
mov
pop
pop
add
dec
push
test
inc
lods
mov
es
or
dec
int3
inc
mov
in
push
xor
cmpsl
mov
leave
int
pop
push
jns
loope
and
fdivrl
loopne
lds
xchg
jnp
imul
adc
std
int
inc
fmuls
jle
imul
lea
cmp
jge
add
xchg
sar
movsb
sub
int3
les
adcb
nop
repnz
push
dec
or
mov
daa
cmc
cmpb
lods
imul
cli
cmovae
jl
lods
mov
dec
cli
xchg
cmpsl
out
stos
inc
clc
inc
and
rorb
jae
mov
sahf
xchg
xor
pop
dec
xchg
mov
pop
mov
xchg
outsb
jo
pop
mov
cli
mov
ljmp
cmp
aaa
lret
mov
mov
stc
adc
dec
scas
test
outsb
jns
sbb
daa
shrl
jne
inc
iret
cmp
maskmovq
notl
dec
adc
rcrb
dec
jecxz
jecxz
scas
fadds
add
push
mov
seta
rcrl
or
xchg
dec
cwtl
cmp
aam
jno
mov
mov
inc
and
push
push
push
fcoms
cld
pop
insb
dec
cmp
hlt
imul
adc
xchg
lods
sbb
xor
std
push
cmp
sahf
std
outsb
sub
jl
into
rcrl
out
dec
iret
push
adcl
faddl
inc
sub
pop
insl
push
jecxz
lock
movsb
repnz
aam
lret
add
cmc
iret
xor
lahf
pushf
xor
fs
test
loope
movsl
xor
pop
loop
push
sub
out
add
xor
lock
pop
sbb
pushf
pop
add
imul
sti
lods
test
int
push
sbb
std
sub
inc
pop
inc
rorl
mov
movsl
loope
push
lock
and
cmp
mov
loopne
loope
mov
cwtl
cltd
leave
cmp
jns
sbb
cli
insl
add
jge
sbb
or
inc
icebp
xchg
sub
out
mov
lods
dec
xchg
jno
sbb
imul
icebp
bound
hlt
inc
sub
mov
lods
inc
mov
xchg
test
and
dec
shll
out
out
aam
daa
cmpsb
pusha
dec
clc
or
ds
mov
cmc
add
add
jno
lods
push
loop
loope
mov
jbe
stos
inc
mov
xchg
push
push
aas
add
mov
push
lcall
xor
xchg
fimuls
js
push
pop
cmp
pop
push
pop
or
push
pop
add
jno
icebp
insb
adc
add
pop
fdiv
push
pop
scas
inc
xchg
xchg
sbb
adc
cmp
cs
pop
jno
xlat
mov
add
mov
ja
pushf
xchg
xchg
inc
movsb
cmp
incb
not
loope
out
xchg
stos
xor
imul
out
add
notb
movsl
sub
repz
faddp
cmc
mov
mov
popa
jns
mov
inc
jmp
pop
fldt
out
push
in
in
loop
sub
adc
push
outsb
dec
movsb
sub
lea
mov
mov
int
daa
mov
cmp
aad
sahf
jl
adc
jg
fidivrl
jb,pn
and
add
mov
testb
mov
aam
mov
lea
out
jp
and
xor
outsb
push
xchg
test
mov
push
nop
mov
cli
popf
or
iret
lea
pop
jmp
cmpsl
test
mov
lea
jno
repz
push
mov
push
aas
adc
xorl
pop
pop
add
push
jae
sahf
int3
orl
xchg
call
or
xchg
repz
stos
into
adc
jae
in
je
pop
fcompl
sub
pop
mov
mov
or
insl
sahf
repz
inc
push
cmpsb
iret
xlat
lret
pushaw
jge
mov
sahf
les
mov
xor
xchg
jne
xchg
push
lahf
ds
push
or
aam
repz
ret
fwait
cli
sbb
test
sub
xchg
add
cltd
push
stos
sbb
cmp
or
inc
scas
mov
push
xor
sub
sbb
dec
loopne
mov
addr16
setbe
loop
into
jb
sbb
xchg
int3
or
and
sbb
popl
sbb
or
pop
icebp
scas
mov
add
mov
push
leave
xlat
and
sbb
mov
cmpsb
push
and
jmp
add
sbb
pop
adc
lods
mov
mov
xlat
repz
repz
insb
movl
rcll
ficomps
dec
cmp
lret
imul
pop
dec
movsb
mov
sbb
add
scas
cwtl
inc
fdivl
fstpt
shll
loope
jge
jecxz
inc
push
movsb
int3
ficomps
xchg
inc
cmp
cmp
pop
test
mov
test
add
popf
jbe
mov
sbb
iret
fldl
cli
mov
dec
cmp
pusha
shl
and
sub
ja
bound
jp
pop
mov
cwtl
fxch
leave
fsubrs
lods
mov
push
pop
jecxz
pop
lret
hlt
dec
add
cmp
out
xor
dec
cmp
pop
jmp
inc
inc
and
fstp
mov
mov
jbe
xchg
lock
call
outsl
sbb
stc
or
adcl
shlb
ja
or
addb
push
jmp
mov
push
jmp
pop
jmp
inc
mov
mov
jmp
lds
dec
pop
pop
test
into
mov
out
test
pop
adc
decl
xchg
jo
adc
add
nop
bound
cmp
addb
movsl
cs
pop
or
jge
fsubl
lods
dec
or
xlat
mov
movsl
jecxz
sub
in
idivl
iret
lret
mov
insl
popf
mov
aaa
je
sub
popa
mov
stc
pusha
mov
je
jb
movlps
cli
jne
pop
loop
add
sbb
aad
mov
and
bound
daa
mov
iret
sbb
popa
gs
jge
push
pop
insb
pushf
lods
faddl
mov
mov
cmc
xchg
xchg
and
and
push
data16
xchg
sub
xor
mov
adc
push
mov
cld
sbb
and
stos
lea
outsb
lret
pop
leave
push
add
push
xchg
fwait
or
mov
insl
daa
popf
xchg
and
and
fstpl
cmp
push
inc
ret
ss
adc
and
fistpl
adc
decl
or
addl
xchg
xchg
add
xor
and
nop
sbb
repnz
out
test
adc
lret
arpl
test
dec
insl
and
imul
cmp
fmull
test
ret
lods
xchg
and
mov
push
lret
loopne
lods
cmpsl
inc
into
es
fld1
mov
outsl
daa
xor
sbb
loope
fcomi
mov
scas
xor
add
add
pushw
icebp
clc
or
bound
imulb
fists
pop
imul
xchg
outsb
shr
jno
add
les
adc
addr16
test
popl
mov
stos
mov
mov
jne
aam
pop
fwait
adc
and
jo
roll
cld
ret
imul
sbb
in
test
or
cld
addr16
pop
nop
addr16
xchg
outsl
les
xor
mov
pop
les
push
cld
inc
test
cld
xchg
mov
ret
or
jae
call
addb
jl
mov
inc
pop
mov
ss
mov
bound
push
jmp
sub
ret
push
or
jne
adc
jb
inc
and
pop
lcall
popf
mov
mov
inc
roll
cmp
aam
sti
std
sub
ds
inc
insb
push
mov
repz
inc
adc
inc
or
out
out
sbbl
mov
jns
jne
les
mov
lret
jne
add
hlt
dec
js
lea
stc
idivb
loopne
lea
push
push
arpl
mov
push
push
es
jg
lahf
xlat
ljmp
mov
icebp
arpl
mov
xchg
fldt
and
push
mov
test
add
stc
or
lea
enter
and
mov
outsl
scas
insl
lret
xlat
jp
mov
pop
lahf
push
mov
jp
divb
xchg
hlt
xchg
nop
daa
push
stos
pop
ret
push
sub
ds
xor
sub
or
rcr
out
xor
hlt
imul
popf
pop
add
icebp
popf
xor
movsb
jno
lahf
xor
test
hlt
mov
inc
in
mov
repz
movl
push
add
push
mov
je
jns
xchg
sbb
mov
xor
push
mov
sti
jbe
push
xchg
jo
sub
xchg
pop
imul
icebp
jbe
add
fwait
xor
lods
gs
dec
stos
and
insl
mov
sahf
rclb
js
test
cltd
rep
sub
fcompl
scas
push
pusha
xchg
subl
xchg
xchg
fs
mov
inc
movsb
stc
ja
aaa
int
je
loop
fs
cmp
movsb
push
rcr
push
push
pusha
bound
cwtl
mov
mov
pop
add
pop
xor
and
add
out
scas
push
out
outsl
stos
testl
push
jbe
ret
cli
pop
leave
scas
mov
je
or
sbb
jmp
and
ret
dec
pop
mov
int3
pop
imul
xchg
cmp
mov
xor
nop
imul
xlat
sub
adc
cmc
movsb
fmul
sub
hlt
xchg
pop
scas
int3
outsb
sarl
add
movsb
xchg
icebp
or
mov
popf
lret
in
pop
push
jmp
pop
jp
mov
pop
jg
mov
xor
inc
push
out
pop
add
mov
icebp
jne
or
cmp
js
add
cmp
pop
sahf
jle
sub
jae
dec
es
xchg
fs
jae
in
xchg
icebp
cmp
push
hlt
decl
mov
push
mov
mov
adc
mov
mov
arpl
sub
enter
repz
ds
loopne
int3
pop
jle
cmpsl
sub
fnstsw
dec
mov
pusha
and
shlb
add
negl
inc
iret
adc
inc
jecxz
push
push
int
les
sbb
test
jne
aam
cwtl
adcl
aaa
and
out
add
filds
mov
xchg
add
sbb
xor
ja
in
pop
ret
fisubrl
jmp
dec
and
dec
lods
lock
sub
stc
xor
or
and
pop
insb
xchg
add
cli
jno
iretw
out
daa
or
and
jb
negl
mov
mov
movsl
xchg
decl
movsl
sti
pop
xlat
ret
in
outsl
pusha
dec
popa
pop
xchg
test
lcall
push
cmp
decl
stos
mov
mov
cmpl
adc
stos
fldt
bound
mov
adc
xchg
data16
fldcw
lods
andb
iret
aas
lcall
adc
cmp
mov
xor
and
cmc
mov
outsl
ret
adc
mov
ja
cmpl
rorb
sbb
jae
outsl
jo
int3
mov
pop
popf
push
inc
fcomps
dec
data16
sub
dec
dec
jno
cmpsb
mov
arpl
xchg
test
sarl
shr
add
cmp
xor
rol
sub
enter
bound
mov
and
pop
push
xchg
gs
pop
adc
jae
subb
and
and
and
bound
push
scas
stos
xchg
jo
jb
or
aas
xchg
sub
les
adc
adc
jb
sbb
push
in
pop
ja
xchg
std
or
movd
sub
js
dec
push
leave
ss
sub
bound
es
std
lods
xchg
into
loop
bound
pop
add
out
jns
push
ss
in
mov
ficoms
cmpsb
pusha
jnp
insb
fs
sbb
jae
mov
lods
fidivs
fnsave
and
add
fwait
sub
xor
stc
sub
decb
cs
xchg
call
dec
out
cmc
mov
add
imul
and
inc
testb
cmp
psubsb
add
pop
ret
lret
lea
shrb
hlt
sbb
add
xor
jge
in
mov
roll
and
mov
dec
subl
xchg
pushf
fdivrl
into
cs
mov
hlt
inc
inc
inc
test
inc
adc
iret
and
add
out
xchg
and
pusha
fcmove
dec
pause
lock
lods
mov
in
je
cwtl
lret
adc
or
xor
xchg
sbb
sbb
imul
pop
dec
subb
dec
lock
lea
ja
inc
aaa
push
jns
std
sub
and
lcall
in
pop
jno
nop
mov
or
out
or
jbe
in
sti
je
roll
sbb
xchg
add
rolb
lods
inc
jne
adc
mov
es
push
dec
in
cmp
sbb
test
out
pop
repnz
push
add
xor
ljmp
imul
cwtl
push
xlat
sti
push
pop
je
xor
ret
push
or
add
mov
shlb
cmpsw
mov
sbb
fwait
push
or
in
dec
pop
mov
dec
mov
inc
aas
jb
ds
push
xchg
inc
jmp
sbb
xor
mov
mov
lea
movsl
dec
mov
cltd
adc
dec
pushf
mov
je
insb
int3
imul
ljmp
mov
adc
jle
jecxz
mov
xor
repz
jmp
push
jl
pop
lea
mov
clc
pop
leave
cmp
sti
xchg
sbb
lea
xchg
stc
popf
lcall
pop
mov
scas
xchg
js
imul
pop
push
pop
outsl
xorb
cmovns
aaa
into
enter
pop
jmp
lret
bound
jae
iret
adc
in
lods
xchg
xor
int3
in
adc
pop
cli
cmp
test
xor
cltd
xchg
mov
push
inc
inc
cmc
cmpsl
lahf
fsts
fnstcw
pop
or
adcl
dec
in
xchg
dec
inc
jbe
cmp
repnz
pop
sahf
lcall
push
sahf
sbb
cld
sub
push
ljmp
call
sub
int
mov
mov
inc
cmpsb
imul
lahf
leave
xor
sub
out
lods
mov
pop
xor
mov
cmp
ret
mov
or
aam
push
dec
daa
shlb
mov
sahf
movsb
sti
fidivs
stc
outsl
js
add
dec
xor
sbb
pop
pop
loop
or
call
pop
outsb
lds
ds
test
ror
xor
mov
lods
shlb
lock
inc
push
fwait
pushf
scas
lock
xchg
fstp
inc
int3
and
jle
push
xchg
mov
scas
mov
and
cwtl
jecxz
daa
outsl
sbb
hlt
int3
add
mov
or
divb
push
ret
sub
add
ljmp
pop
andl
cli
and
adc
sbb
adc
mov
sub
fadds
pop
jbe
mov
cmp
hlt
cmp
jno
jecxz
lds
mov
arpl
xchg
add
mov
pop
lods
sub
insl
mov
loopne
jo
sub
imul
lea
mov
das
sbbb
pushf
icebp
cmp
into
fsub
push
mov
xchg
test
inc
mov
loopne
push
and
push
xor
jnp
jae
pop
cwtl
mov
rcrb
sbb
gs
clc
lahf
negb
ss
adc
inc
into
fsub
les
pop
mov
mov
sub
es
fcmovne
out
lock
addr16
test
sbb
dec
inc
fiaddl
sub
xor
into
std
aam
push
push
das
adc
dec
cmp
cmp
pop
xchg
xchg
cmp
aam
mov
add
push
jecxz
jno
mov
jle
mov
scas
fildll
sub
shlb
aam
inc
push
les
and
inc
stos
dec
xchg
jmp
movsl
sub
cmpsb
sub
nop
xchg
add
push
mov
in
jns
xor
shrl
push
bound
out
mov
or
sbb
sbb
rclb
in
jne
sub
scas
sub
cld
lods
mov
ljmp
sub
jb
xlat
mov
jb
dec
pop
dec
and
fs
mov
fwait
jle
inc
fnstenv
fbld
dec
mov
push
in
push
lcall
mov
cmp
sbb
cmp
and
adcl
xchg
shll
inc
xchg
rorl
mov
lahf
mov
push
rcrl
call
mov
sbb
mov
cmpb
mov
clc
sbb
mov
push
xor
push
jge
xchg
stos
and
in
xor
insb
xchg
insb
popa
mov
ret
int3
sub
pushf
and
mov
mov
pop
cmp
outsb
out
scas
hlt
sub
cwtl
lcall
dec
in
jno
jle
sub
out
sti
or
pop
out
jge
xlat
mov
push
pop
push
xlat
pop
repz
and
push
loope
add
mov
sarl
and
mov
mov
outsb
fadds
sahf
into
or
dec
xor
lcall
rclb
aad
mov
pop
push
xchg
adc
pop
and
mov
dec
xor
sbb
fcomi
movsb
ss
pop
fistpll
fst
fbld
dec
inc
lods
jne
xor
cmp
leave
imul
mov
xchg
clc
mov
xor
lock
or
xchg
mov
arpl
inc
dec
cmpsb
and
xchg
sti
xchg
ja
sbb
dec
push
mov
lea
int
sbb
lcall
push
adc
into
iret
fsubrs
pushl
xor
hlt
mov
xchg
xchg
sub
sub
dec
dec
ficompl
mov
sbb
jne
cmp
jns
mov
cmp
int3
shll
int3
vmwrite
mov
dec
mov
push
cmp
mov
imul
scas
sbb
mov
sti
pop
stc
sbb
mov
xchg
mov
mov
pushf
sahf
inc
add
xor
and
mov
inc
push
dec
icebp
fldcw
int
or
aas
clc
cmc
pusha
push
sub
add
shl
mov
stos
ficomps
xchg
jb
push
hlt
sbb
cmp
adc
and
and
xor
adc
add
adc
xor
sub
dec
mov
xlat
icebp
jle
cmp
cs
dec
mov
mov
icebp
mov
lds
int
es
orw
fadd
xchg
rol
adc
popa
rcrl
sbb
add
add
mov
lock
xor
movsl
lock
pop
out
insl
sub
pop
ss
lahf
and
fwait
int
or
movsb
xchg
xlat
ds
jle
sti
sub
sub
inc
testl
popf
or
enter
dec
shlb
movsl
loop
push
dec
mov
sbb
or
les
dec
jno
ret
xchg
fsubr
pop
ret
cltd
xor
mov
jmp
stos
lret
and
data16
or
jmp
sar
add
mov
or
jb
xchg
mov
ret
je
icebp
xchg
or
in
push
mov
loop
imul
mov
and
mov
xor
inc
fcomps
cmp
cwtl
mov
cs
es
popf
test
test
pop
fsubrl
push
fwait
or
dec
xchg
add
fimuls
pop
lret
outsl
jnp
jnp
xchg
pop
push
add
iret
popf
lock
mov
or
mov
cltd
jns
nop
dec
outsl
lcall
mov
in
add
sub
dec
lahf
cmpsb
pop
add
cmp
popf
mov
xorl
cmpb
jnp
test
mov
repnz
xor
fdivs
dec
and
ja
pop
dec
mov
or
sahf
jle
dec
and
mov
jg
xchg
and
gs
fldt
pop
sub
movsb
aas
cwtl
ss
fisubl
les
insl
inc
cli
icebp
adcb
cltd
mov
fsubl
scas
shrl
out
ds
mov
inc
es
inc
into
lds
xchg
repnz
out
add
push
je
aaa
test
or
cmp
pop
adc
add
mov
adc
inc
sbb
repnz
mov
lea
sbb
jecxz
and
out
mov
sub
stos
inc
inc
push
sbb
dec
rclb
scas
mov
test
bound
loop
push
movsl
push
jb
aam
fisubl
xchg
jmp
mov
inc
pop
and
xchg
popf
add
das
jnp
and
add
test
inc
and
cmp
inc
sbb
mov
pop
in
repz
mov
and
adc
xchg
xor
mov
adc
hlt
nop
loope
or
jb
mov
into
jne
loope
and
sub
jno,pt
pop
imul
adc
inc
sbb
out
dec
and
pop
mov
jp
je
test
cltd
fnstenv
pop
hlt
mov
rcll
mov
fs
stos
aad
dec
or
mov
scas
adc
adc
in
push
mov
dec
call
or
sbb
outsb
xor
ja
push
in
cmpsl
loope
sub
xchg
pushf
mov
jno
lock
std
adc
push
ficomps
or
xchg
jl
cmp
lea
cmpsl
popf
ljmp
mov
fdivrs
fst
adc
fstpt
popa
jno
add
sub
testb
out
cmpsl
out
testb
pop
add
or
lea
roll
inc
loop
push
and
xchg
adc
jecxz
mov
adc
pop
fimuls
nop
sbb
cmp
stos
incb
or
dec
mov
mov
les
cmp
jg
mov
dec
pop
adc
in
mov
fs
mov
inc
fucomi
or
in
add
data16
and
sahf
adc
mov
jmp
add
jne
pop
mov
ja
or
inc
jae
or
pushf
fildl
or
cltd
sbb
and
sbb
jl
jg
jne
scas
jno
inc
mov
stc
out
aad
sbb
cwtl
dec
xchg
fidivl
test
fldenv
push
mov
ret
pop
pop
mov
in
pop
and
shll
addr16
cwtl
cmp
sahf
ss
dec
sub
stc
addr16
loope
hlt
loopne
push
and
daa
mov
cmc
lods
ret
mov
faddl
mov
mov
pop
lcall
push
shll
lret
lret
mov
shll
das
lods
xchg
mov
or
sbb
test
xor
lret
mov
jb
xchg
xor
inc
hlt
fdivl
jl
or
jno
push
jecxz
cs
cmp
out
fdiv
scas
inc
fwait
loope
xchg
fbstp
sub
lds
and
test
xorl
das
mov
bound
or
mov
cmp
das
int3
mov
pop
aad
sarl
mov
mov
cs
dec
daa
mov
sarl
inc
ret
jle
repnz
das
sbb
decb
sub
outsl
daa
jno
std
fsubrs
or
push
rcll
jg
or
jge
scas
in
inc
sub
dec
lret
inc
mov
notl
pusha
aad
outsl
int3
out
sub
dec
movsl
push
lret
outsb
lods
sub
fstl
cmp
jnp
mov
stos
aaa
ret
mov
push
ljmp
orps
ljmp
push
insb
jb
ja
dec
daa
sbb
leave
rsqrtps
sbb
dec
ja
sbb
nop
fmuls
mov
mov
xchg
scas
xchg
push
sbb
incl
testl
cs
cmp
pusha
inc
aam
inc
fmul
xor
jbe
leave
aaa
inc
jae
leave
movsb
arpl
mov
cmp
in
pop
outsb
cmp
mov
ds
repz
xchg
sub
mov
movsb
ljmp
ret
arpl
inc
fwait
inc
stos
in
std
and
pushf
ret
xchg
addl
out
cmp
jmp
or
out
movsb
inc
mov
faddp
pop
int3
out
adc
cmpxchg
lret
lods
sub
or
nop
mov
ret
or
bound
rol
mov
mov
jns
in
xchg
stos
lcall
xor
push
add
outsl
or
movsl
cmp
sar
adc
mov
or
mov
mov
cmpl
mov
pushf
mov
enter
or
cmpb
test
dec
pop
cmc
insb
or
ret
pop
cmp
pop
or
xchg
xlat
push
cmp
mov
sbb
out
incl
sahf
in
adc
ja
outsl
std
adc
idiv
lods
sbb
lahf
push
jmp
or
repnz
sub
test
mov
or
sub
adc
gs
and
ja
sahf
sub
push
in
sahf
pop
call
cmpb
pop
notb
pop
jbe
or
add
in
sub
or
in
imul
push
in
fwait
inc
push
xchg
sub
fs
cmp
xchg
das
mov
jp
xor
pop
adc
gs
xchg
mov
xor
scas
xchg
lock
lea
aaa
mov
mov
mov
xchg
dec
out
test
popf
daa
rcr
xchg
sub
push
xor
in
movsl
inc
pop
and
inc
add
popa
push
iret
stos
or
mov
mov
std
ja
repz
in
scas
inc
pop
sbb
push
cwtl
sub
lcall
pop
fbstp
sbb
fiaddl
icebp
mov
cmp
std
ret
jge
and
in
stc
test
inc
lods
jmp
outsb
push
repz
push
mov
xor
shll
xor
leave
or
das
jle
movsl
data16
inc
cwtl
pushl
pop
pushf
pusha
cmp
mov
inc
mov
lods
rcr
mov
arpl
xchg
test
mov
lods
sti
aad
fdivl
jb
sub
sbb
in
pop
rolb
pop
xchg
xchg
dec
out
add
pop
ret
push
jbe
aad
cwtl
test
and
mov
scas
xor
call
sarl
and
jmp
dec
repz
dec
mov
mov
xor
mov
push
pop
or
pop
pop
xchg
pop
sahf
push
repz
stos
lock
cltd
jne
and
push
mov
pop
add
mov
daa
pop
mov
or
test
jmp
mov
adc
fnstcw
inc
fiadds
lahf
lahf
mov
in
rorl
sub
sbb
pop
lods
das
fwait
mov
test
push
or
leave
mov
jo
xor
push
es
add
gs
pop
repnz
sbb
push
add
xor
bound
adc
sbb
addr16
ja
cmp
iret
pop
mov
xchg
mov
pop
cli
aas
shll
shr
add
lock
push
stos
or
dec
or
xor
sub
pop
aam
push
mov
ret
pop
imul
adc
cmpsb
jnp
ficoml
orl
inc
inc
fbld
insl
cmpb
adc
and
mov
lea
mov
push
jae
xlat
and
adc
iret
jg
add
mov
mulb
out
jmp
push
or
loop
fcompl
cmpsl
jg
mov
arpl
test
orl
out
jo
incb
push
ret
loope
enter
lods
lret
sti
loope
rcll
lods
xchg
pop
negl
shl
pop
or
cmpsl
adc
mov
sbb
clc
adc
add
pop
fcoml
jnp
cmc
inc
or
pusha
ss
js
or
leave
add
je
xchg
push
icebp
and
stos
or
std
xchg
into
inc
inc
add
jne
jns
push
call
rcl
dec
lahf
add
rcr
js
inc
stos
std
jae
push
dec
and
xchg
repz
test
scas
pop
cmp
mov
retw
add
mov
sbb
js
rorl
add
pop
test
mov
or
fcmovne
mov
pop
mov
push
mov
adc
rolb
pop
loope
sub
ljmp
push
or
add
imul
insl
cmp
and
inc
mov
adc
aam
sbb
and
or
repnz
sbb
iret
lret
das
test
ret
or
jo
jl
sbb
and
mov
imul
mov
lds
add
popa
js
dec
jno
mov
push
loop
es
xor
fldl2t
cli
das
ret
mov
add
icebp
sbb
sub
scas
in
jns
jecxz
fistpl
mov
loop
adc
pop
outsl
lret
scas
in
lock
sub
out
stos
into
ret
pushf
xor
mov
cmp
xchg
in
or
or
xor
or
sbb
jae,pt
jo
jmp
lcall
icebp
leave
arpl
in
addl
sub
cmp
ds
cli
xchg
scas
inc
leave
aas
cmp
sub
cld
xchg
popf
je
cwtl
xchg
cld
mov
sbb
mov
cmp
pop
mov
adc
lcall
add
data16
push
movsl
add
out
neg
pusha
idiv
pop
mov
pop
mov
push
mov
mov
sbb
jp
and
sub
and
or
push
fiaddl
mov
fisubs
setp
and
inc
out
xchg
jb
mov
scas
sbb
lds
pushf
mov
addr16
roll
push
lock
pop
pop
js
adcb
fwait
clc
mov
adc
and
mov
add
sub
arpl
jle
movl
lcall
daa
pmovmskb
push
mov
dec
pop
cmp
test
lods
icebp
inc
mov
push
mov
and
pop
ja
xchg
ljmp
adc
leave
push
cld
xchg
mov
adc
sub
pop
lret
pop
sub
mov
dec
and
scas
lret
decb
inc
and
or
dec
test
mov
js
mov
nop
adc
and
pop
imul
addr16
in
jp
xorl
add
aad
call
push
sbb
mov
and
leave
sbb
dec
ljmp
popf
jecxz
dec
dec
in
pop
sub
push
dec
xchg
and
loop
add
data16
jns
pop
call
stc
push
inc
fmuls
xor
enter
out
push
adc
xor
mov
add
pop
push
out
icebp
and
das
push
push
lds
fsubl
sbb
in
mov
adc
lret
mov
cmpsb
inc
insb
int3
sub
pop
adc
rolb
ja
les
and
mov
sbb
int
pop
dec
jno
jmp
or
xchg
mov
and
pop
cmpsb
ja
fwait
icebp
leave
int
cmpsl
sbb
and
push
sbb
pop
and
aaa
pop
jg
xchg
push
inc
mov
xchg
adc
mov
push
repz
xchg
dec
mov
push
leave
push
adc
test
cmp
adc
call
test
fstps
xchg
out
outsb
inc
mov
mov
aaa
xor
out
inc
imul
mov
push
push
mov
jae
cmpsb
stos
inc
mov
xor
mov
notl
cmp
fsubs
fisttpl
lods
pop
mov
sbb
push
push
outsl
cmp
rcrl
pop
mov
jge
xchg
add
das
push
call
mov
leave
jl
mov
and
lret
out
push
js
fs
sub
popa
push
inc
shrb
aaa
sub
xchg
das
andb
mov
mov
mov
pop
mov
sbb
lods
jbe
repnz
aad
xor
or
and
pop
pop
jae
ret
mov
lahf
cmp
mov
adc
mov
inc
repnz
xor
xchg
cld
or
cmp
push
add
rolb
inc
movsl
adc
rorl
scas
sahf
aad
xchg
push
cmp
popf
test
inc
rep
push
js
cmp
sub
jno
xchg
fnstenv
sub
nop
mov
popf
fadds
inc
test
out
pop
push
mov
push
mov
scas
call
push
popf
add
aaa
push
jecxz
dec
stc
cmp
sub
jo
pusha
rorl
dec
dec
les
push
ror
xchg
pop
lret
pop
push
add
mov
mov
lds
adc
fs
jns
sbb
popa
or
insl
sbb
jnp
push
mov
add
loopne
out
add
mov
test
test
push
jge
gs
push
add
cmpb
lds
std
js
leave
sbb
sti
pop
hlt
lret
or
jp
or
cmp
leave
xchg
lds
aas
mov
insb
jle
lret
jp
push
adc
cwtl
sub
mov
pop
or
sub
sub
push
push
gs
add
and
repnz
sahf
xor
lea
pop
stos
and
insb
outsl
push
xorl
iret
cmpl
flds
movsb
cwtl
or
pop
into
andl
sbb
pushf
aad
pop
mov
mov
xchg
stos
les
push
cmp
push
lret
or
andl
loope
fmuls
subl
icebp
mov
jb
outsb
sub
filds
rcrl
and
push
int3
jmp
xchg
in
lcall
pop
stos
outsb
mov
nop
inc
cmp
jb
cmp
jl
pop
repnz
call
inc
add
aaa
dec
int
shlb
jmp
lock
out
pusha
adc
cmp
jecxz
das
inc
add
es
or
jecxz
add
pop
pop
sahf
cmp
mov
es
pop
mov
daa
idivb
mov
in
jle
out
ss
pop
and
loope,pt
inc
in
bound
pop
pop
ret
sub
testl
scas
cmc
mov
daa
rcrb
sbb
sub
es
inc
ficompl
mov
insb
dec
sub
das
nop
ss
in
cmpsl
leave
and
inc
in
push
pop
in
jno
out
rcr
mov
mov
stc
or
std
mov
push
std
into
enter
sbb
adc
movsl
ret
aam
fidivl
add
stos
sbb
add
dec
cmp
jmp
push
adc
sbb
push
mov
xor
lcall
cli
es
mov
test
loop
sub
movsb
loopne
inc
out
xchg
cwtl
enter
mov
js
aam
stos
movsl
mov
mov
sub
pop
aas
scas
jl
pop
add
cmc
dec
mov
or
xchg
out
test
xor
int3
aaa
cmp
out
dec
outsl
mov
sub
hlt
ret
dec
dec
fdivrl
andl
daa
sarl
scas
push
into
adc
add
test
out
sbb
inc
jge
xchg
cmp
pop
cwtl
inc
pusha
int
sub
mov
push
fsubr
int
cltd
cli
incl
push
sbb
cli
cmp
cmp
cmpsb
push
dec
cmp
shll
push
xor
outsl
mov
rcrb
shr
cmp
lock
add
adc
out
push
in
sub
pop
sub
gs
xchg
cmp
sbb
cmp
out
rcll
jge
clc
mov
stos
inc
dec
mov
mov
sub
subl
xchg
shlb
loope
push
xor
js
xor
xchg
mov
fiaddl
repnz
xchg
mov
xchg
add
sbb
movsl
testb
jmp
adc
xchg
push
and
decl
mov
jb
mov
int3
push
or
mov
daa
ljmp
push
outsl
mov
mov
cmp
sbb
popf
push
loopne
clc
sub
dec
pop
push
jle,pt
rcrb
shrl
shll
shll
aaa
cmp
jecxz
es
pop
or
push
jne
lahf
ss
int
or
nop
dec
jge
jg
mov
push
test
mov
xchg
sub
dec
pop
fidivs
dec
push
sbb
decl
cli
imul
arpl
outsb
add
mov
mov
bound
les
hlt
jb
aaa
into
and
add
int3
fsubrs
and
sub
lea
mov
mov
icebp
les
inc
xchg
repz
or
mov
out
insb
pop
divb
insb
xchg
sub
sti
sub
xchg
enter
cmpl
and
pop
dec
sti
xchg
jl
xchg
mov
mov
mov
pop
adc
inc
push
shlb
movsl
cmp
dec
sahf
xor
xchg
dec
lret
imul
and
lods
jb
cmp
lock
data16
out
mov
std
sbb
push
pop
add
add
pop
pop
pusha
jp
jne
push
fldenv
scas
scas
mov
mov
xchg
sub
movsb
pop
enter
idivl
pop
xor
fcomps
cs
inc
mov
out
sbb
jp
sbb
push
imul
inc
push
movsl
js
mov
outsl
inc
push
ficompl
xchg
adc
xchg
mov
cmp
or
lea
ret
scas
xchg
dec
sbb
lcall
adc
xlat
scas
dec
pushf
adc
xchg
mov
mov
push
jg
test
ja
enter
imul
loop
mov
sbb
ds
out
xorb
jecxz
push
jmp
fldl
into
sub
sub
cltd
daa
jns
stc
mov
clc
jae
pop
lea
sti
ret
jmp
mov
lods
push
movsb
mov
or
jge
mov
out
sbb
add
adc
orb
ds
push
push
mov
jge
mov
divl
inc
cli
iret
ds
add
mov
cli
push
test
push
arpl
daa
bnd
test
repz
sti
xchg
add
dec
fildl
mov
je
icebp
movsl
pop
dec
jmp
cltd
aaa
rorb
jmp
dec
out
push
leave
jae
sbb
xchg
lret
xor
loopne
add
lahf
jno
mov
lods
jecxz
jo
jp
push
nop
and
stc
popa
dec
mov
inc
push
fmull
mov
popa
pop
cmp
shlb
popa
scas
sub
fdivrp
sub
add
jno
test
adc
inc
sub
leave
fidivrl
mov
popf
lock
mov
sahf
push
push
lret
inc
cli
insb
rcl
jne
mov
inc
out
in
push
pop
sbb
mov
xor
cli
test
inc
add
loop
xor
adc
jg
mov
adc
test
cmp
inc
test
push
inc
pop
xchg
inc
add
xor
xchg
enter
sbb
aad
pushf
cmp
out
out
jecxz
and
pop
scas
in
xor
std
pop
push
xchg
pop
inc
and
jns
pop
xchg
sub
cmp
shrb
rcrb
and
aam
loope
mov
scas
dec
push
shl
stc
cmpl
push
dec
in
fldl
cli
test
lret
pop
dec
push
push
pop
adc
xor
hlt
mov
out
out
das
adc
sub
addr16
add
xor
cli
adc
mov
cmp
pop
lds
cmp
seta
loop
int
sub
lods
jo
shrb
popl
movsl
fcoml
push
jg
xor
icebp
adc
xorb
mov
imul
xor
out
std
pop
dec
data16
mov
fwait
or
andl
mov
mov
outsl
xlat
pminub
push
pop
jae
or
pop
in
out
loop
or
mov
loop
push
add
xchg
and
lods
mov
push
fmul
dec
std
mov
sub
pop
xor
jne
mov
pushf
ljmp
popf
lock
aad
mov
fidivl
push
es
imul
xchg
xorb
out
in
stos
out
arpl
xchg
scas
test
mov
gs
add
add
cmp
mov
pusha
clc
test
jg
xchg
addr16
or
mov
mov
into
xchg
ja
ja
jge
dec
fidivs
repnz
dec
adc
ror
xchg
pop
test
sbb
insb
dec
loop
jecxz
adc
mov
cwtl
xor
push
pop
cmp
and
movsb
outsb
ret
push
mov
outsb
jg
pop
mov
dec
ficomps
lds
dec
dec
mov
fbld
dec
and
es
popf
sub
ret
xchg
stc
inc
mov
sti
push
inc
outsl
xchg
pop
pop
push
pop
repz
add
mov
xor
aaa
push
inc
movb
dec
hlt
sbb
pop
adc
mulb
sub
and
cs
fisubrl
pmuludq
xor
pop
loop
shrl
cmp
lods
add
imul
repz
mov
les
mov
in
jb
lock
movsl
add
adc
push
mov
dec
pop
adc
shll
cs
std
adc
mov
sbbl
imul
xchg
pop
jnp
iret
cmpsb
cs
das
and
or
mov
sbb
push
push
addr16
in
add
test
sti
out
cmp
test
cld
stos
mov
mov
mov
xchg
sti
adc
cld
xchg
test
test
insb
push
test
mov
out
test
sub
andl
scas
hlt
incl
repz
push
push
cmpsb
mov
xor
xor
jns
inc
sbb
mov
sub
imul
test
mov
push
mov
out
popa
je
jno
nop
jbe
sti
and
sbb
push
inc
mov
test
mov
into
push
jp
pop
inc
repnz
int
sub
js
mov
hlt
andl
test
sub
sub
jno
bound
xchg
insl
out
cld
fdivs
addr16
fsubrs
in
shll
xor
adc
xchg
push
das
sbb
aas
cmc
dec
sub
shrb
jge
adc
mov
fwait
js
test
mov
mov
clc
fsubr
sub
aad
mov
bound
xchg
cmp
stos
sbbb
sub
fildll
sub
add
mov
mov
rclb
mov
sub
adc
inc
inc
or
or
lods
out
std
hlt
cmp
push
jge
cs
fildl
push
shld
es
icebp
lahf
pop
out
rorb
pop
hlt
cmp
insl
pop
out
jnp
int3
sahf
add
jmp
or
xchg
movsl
inc
flds
lret
xlat
fcompl
div
daa
inc
popf
fcmovnbe
adc
xor
icebp
pop
sub
dec
ror
nop
or
add
xor
inc
pushf
push
mov
test
rcrl
cmc
pmullw
xlat
sbb
pop
and
rcl
inc
jmp
icebp
cld
xor
in
add
jle
or
dec
xor
repnz
pop
test
addr16
or
xchg
xchg
sub
scas
stos
dec
adc
call
and
push
mov
cwtl
in
add
dec
data16
mov
loope
push
negb
ja
jo
jmp
cmp
sub
mov
testl
iret
aad
bound
jbe
jge
lret
test
loope
xor
subb
push
cwtl
push
adc
pushf
and
push
mov
mov
mov
xchg
xchg
dec
pop
push
inc
cmp
stc
push
inc
leave
xlat
push
pop
into
xlat
test
sub
aas
inc
pop
jno
dec
dec
mov
adc
mov
enter
mov
mov
subb
aam
and
push
dec
inc
movsb
ja
cs
es
cmp
or
aam
bound
xor
and
or
ja
idiv
inc
sub
fbld
pop
inc
sbb
subl
cmp
aas
xchg
dec
stos
les
test
inc
xor
and
push
inc
fnsave
jle
xchg
fs
xchg
sbbb
fstl
lret
xchg
mov
add
and
xchg
insb
scas
adc
iret
bound
cmp
push
or
gs
pop
dec
and
fsubrp
add
mov
add
mov
imul
mov
pop
test
scas
lcall
dec
mov
int
movsl
fmuls
adc
mov
sbb
mov
xor
sbb
enter
mov
sub
and
or
xchg
push
daa
or
fdivl
in
jne
nop
test
inc
sbb
mov
adc
or
scas
repnz
sbb
sub
inc
mov
rclb
lret
data16
cwtl
push
in
clc
jnp
stos
es
das
add
xlat
mov
push
add
pop
divb
cs
sbb
xor
cmp
push
cmp
pop
mov
push
xor
fsub
mov
pop
mov
dec
push
cmp
fsts
pop
jp
mov
xor
fistl
xor
fwait
xor
mov
pusha
enter
or
xchg
push
mov
adc
movsl
sbb
mov
xchg
insl
ret
lea
popf
sahf
addl
sub
jmp
or
out
shrl
adc
inc
rcll
in
test
pusha
push
insl
or
rorb
sahf
sbb
or
xchg
xchg
movsb
pop
adc
push
call
sbb
enter
adc
and
test
mov
ret
pop
fsubr
nop
shr
fwait
cld
aad
push
pop
mov
pop
icebp
out
pop
scas
push
push
lret
add
out
xchg
mov
cmc
cmp
and
aaa
fnstcw
mov
pop
jno
mov
cmp
sub
decl
aaa
xor
dec
dec
push
and
mov
xchg
dec
cs
pop
outsb
lods
mov
nop
out
cli
roll
pop
repz
sub
cltd
nop
mov
add
sbb
xor
loopne
jle
jo
shll
dec
xlat
mov
inc
int
cmovne
mov
int3
out
pop
and
xchg
jbe
das
pop
xchg
imul
jo
adcl
cmp
pop
xchg
inc
insl
je
test
mov
lock
sbb
cltd
cltd
xlat
push
or
fwait
sti
mov
pusha
mov
int3
and
push
mov
mov
push
adc
aam
ljmp
dec
sub
jnp
adc
movsl
and
movsb
push
mov
mov
inc
nop
jbe
sub
lcall
aad
jecxz
jp
movsl
lahf
dec
stos
addb
or
cmpsl
sbb
fcomi
movsl
aaa
iret
scas
xchg
popa
clc
shll
leave
jg
loope
ror
add
mov
or
cmpsb
pop
inc
loope
cmp
repz
in
jnp
fcoml
or
sub
dec
pop
xchg
sub
out
mov
cmp
test
cmp
imul
std
gs
sbb
mov
cltd
popa
jl
iret
or
dec
into
daa
leave
bound
test
mov
leave
mov
clc
in
and
fnstsw
fcmovbe
scas
lds
orb
mov
dec
pop
pop
mov
mov
nop
cwtl
cmpsb
xor
cmp
cmp
push
sti
sti
pop
xchg
inc
sbb
pushf
dec
gs
ret
jmp
sbb
sub
xchg
xchg
and
dec
movsb
jecxz
push
cwtl
loopne
push
repz
add
outsl
hlt
std
jo
or
fbstp
in
add
std
or
mov
jmp
popf
fwait
push
in
int3
fisubrl
xchg
out
loopne
mov
out
cmp
outsl
jmp
jns
nop
gs
ret
pop
lret
in
and
lods
ss
pop
jbe
pop
je
pop
lods
add
pop
jnp
pop
and
add
mov
and
mov
and
push
decl
add
std
test
mov
gs
pop
or
push
lods
imul
dec
pop
adc
ret
mov
mov
jns
into
gs
cltd
push
mov
sbb
adc
pop
sub
or
or
gs
ret
mov
jecxz
mov
or
pushl
sbb
dec
inc
jns
arpl
pop
repnz
xchg
cmc
lock
xor
or
aas
xchg
xlat
call
inc
jae
dec
ret
stos
jbe
sub
lods
inc
out
sub
sbb
jle
cmp
mov
mov
leave
mov
cs
in
into
pusha
mov
das
mov
pop
xchg
rorb
adc
mov
sub
sahf
jmp
adc
addr16
push
cmc
mov
add
sub
dec
and
les
push
fimull
xchg
mov
dec
mov
push
jns
imul
sbb
sbb
sahf
mov
ss
sbb
aas
push
mov
mov
push
in
out
xchg
cltd
xlat
jp
or
ds
push
cmp
cmp
cmp
push
sbbl
or
mov
mov
hlt
mov
fdivs
pop
jp
aad
or
data16
nop
sbb
cmp
outsb
les
jno
or
mov
adc
rolb
out
pop
repz
movsb
cmp
cwtl
push
jne
out
sbb
mov
jnp
sub
inc
xchg
nop
jne
mov
add
mov
push
pop
call
fs
jg
adc
adc
mov
xchg
jg
cmp
sbb
mov
add
into
pop
jmp
and
pop
imulb
lahf
stos
loop
clc
fdiv
loop
pop
add
fs
cmp
dec
dec
je
scas
xchg
pop
or
cmp
mov
cvttps2pi
push
lret
cmp
inc
sbb
or
rcr
ljmp
cmpl
cltd
add
mov
shr
mov
xchg
sbb
or
sbb
test
cmp
loopne
xchg
pop
inc
adc
mov
imul
inc
shlb
pop
loope
mov
imul
cli
push
sub
push
push
addb
leave
rclb
ret
mov
add
xchg
ja
lcall
fnstenv
fidivs
push
fsubs
iret
mov
mov
push
inc
bound
push
lahf
pop
lods
push
jns
sarl
lock
adc
out
leave
out
fsubl
inc
mov
test
shr
ret
jle
jl
sti
lods
mov
jnp
call
mov
lods
ljmp
cmp
jecxz
push
inc
cmp
mov
jns
into
ljmp
sti
dec
push
adc
mov
repnz
call
out
add
daa
pop
push
pop
out
aad
imul
inc
std
movsb
mulb
xor
out
outsl
xchg
xor
mov
or
push
aas
pop
jns
add
shrb
mov
ja
dec
dec
mov
xchg
push
call
aad
cmp
mov
out
mov
add
or
es
xor
cmpsl
out
shlb
andl
cld
xor
add
push
push
sub
add
je
sub
dec
lock
out
addr16
jecxz
or
push
pop
out
or
push
lods
and
imul
inc
fidivrl
pop
lahf
mov
into
xchg
inc
xlat
cld
and
ss
sbb
inc
test
imul
test
and
jo
in
out
stos
push
iret
push
cmp
fsubl
lret
sub
mov
sub
repnz
add
insl
add
adc
pop
mov
push
push
imul
bound
pop
testl
ds
insb
cwtl
xchg
fimuls
mov
jno
adc
int3
sbbl
loope
sbbl
outsl
in
cmp
ds
xchg
aas
mov
in
pop
add
push
xchg
push
dec
fidivl
jo
pop
sub
push
push
fcoms
inc
imul
add
xchg
mov
jbe
pop
pop
adc
cmc
bound
sbb
and
pusha
ss
adc
ret
inc
pop
and
push
sbb
std
in
fisttps
mov
mov
xor
ja
popf
mov
sbb
rcrl
aad
push
sti
pop
insb
ss
push
push
adc
mov
cli
sahf
jmp
mov
les
test
push
jbe
out
push
stos
sti
daa
inc
aam
in
stc
sub
cmp
cmpsb
push
cmpsl
push
ss
or
inc
flds
scas
pusha
fisttpl
in
push
int3
pusha
jle
mov
scas
cmp
scas
bound
cmp
stos
xlat
pop
sub
dec
jecxz
das
pop
lcall
clc
into
add
lods
mov
push
mov
sbb
sub
flds
fnstsw
mov
movsb
dec
dec
mov
imul
faddl
or
out
xchg
push
rcrl
mov
jae
sbb
dec
movsb
loopne
out
xchg
and
pop
incl
mov
sti
addb
dec
shlb
adc
pop
shlb
cmp
in
adc
xor
adc
inc
fldcw
loope
test
icebp
mov
adc
jno
gs
out
mov
sub
loop
push
push
jmp
daa
mov
cmpsl
mov
sub
push
jnp
test
jmp
xor
xchg
test
mov
cwtl
outsb
add
divb
mov
and
inc
shrb
xor
mov
pop
in
dec
add
ja
lock
sbb
jg,pt
push
jle
mov
xchg
xchg
data16
fcomps
pop
stc
lods
dec
add
xchg
and
les
loope
cmpsl
xchg
push
leave
nop
daa
push
fidivl
sub
mov
enter
aaa
add
inc
icebp
out
aam
into
dec
fcos
sub
repnz
xchg
in
cltd
jns
sbb
mov
ss
jo
mov
mov
jae
pop
stos
xor
jne
dec
cmp
fsubrs
mov
fstl
jo
pop
and
loop
inc
movsb
xchg
es
sbb
js
das
movsl
aad
jecxz
xorl
loopne
cwtl
adc
mov
popf
jb
scas
in
mov
lds
fcomps
push
pop
cli
test
and
nop
daa
mov
mul
xchg
cltd
sub
out
hlt
cmc
jne
aad
mov
cmpsb
cmp
cld
inc
hlt
xchg
jb
insb
out
sub
xchg
hlt
pop
pop
or
shll
movsl
loop
ss
movsb
movsb
xor
test
pop
ret
sbb
cli
loopne
or
bound
xchg
push
push
or
int
adc
push
imul
sbb
dec
dec
dec
mov
mov
lret
mov
push
xchg
imul
or
push
sub
popf
out
incb
popa
mov
mov
fidivrs
and
jge
fsubp
cmovb
test
sub
xor
sbb
test
push
fdiv
jge
scas
cmpsl
ret
pop
xor
pop
lret
pop
mov
lds
out
jmp
ja
inc
out
ss
int3
lar
xchg
rcrb
testb
sub
add
inc
add
imul
popa
push
mul
pop
in
mov
mov
xchg
aas
inc
jmp
xchg
fiaddl
push
lea
fs
fistl
repz
xor
push
insl
daa
mov
jge
stos
daa
setns
mov
adc
lods
fs
add
pop
lret
imul
xchg
mov
add
lret
test
xchg
pop
and
cmp
adc
jne
test
cli
and
rcrl
xor
stos
outsl
loop
xchg
and
mov
sub
out
outsb
xchg
pushf
pop
push
pop
add
fldl
lock
xchg
out
popf
rcl
mov
sub
jo
adc
rorb
cmc
enter
sbb
fidivrs
cs
xor
mov
ret
sub
xlat
out
pop
xchg
sbb
mulb
inc
movsb
test
lds
xor
test
lock
sbb
sbbb
imul
outsl
jge
push
jnp
into
inc
add
sub
xorb
pop
push
aas
icebp
clc
sub
cmp
pop
xor
add
fstpl
pushf
adc
in
ljmp
adc
lcall
push
jmp
sbbb
sub
mov
cs
xor
mov
and
aad
stos
push
ret
xor
xor
dec
pop
lods
mov
mov
jns
inc
jmp
fisubrl
jo
pop
sti
test
roll
ja
test
lahf
sbb
repz
sbb
jae
aam
clc
xchg
ja
xchg
jl
adc
xchg
sub
fcmovu
cmc
push
ret
or
push
cmpsl
data16
test
ficoms
mov
ljmp
adc
in
std
adc
xor
xor
add
xchg
dec
out
daa
and
outsl
ljmp
cld
cli
or
sti
and
jbe
pop
sub
stos
dec
mov
or
inc
cmpsl
loope
add
cmpsb
jae
in
cmp
in
test
fnstsw
dec
inc
sti
lahf
es
dec
cmpsl
and
popf
lock
sbb
in
jae
push
in
popa
neg
pop
mov
adc
jle
xor
jecxz
gs
cmpsl
lea
dec
mov
rcl
mov
out
aam
cmp
fildll
add
rcrb
in
push
dec
ret
inc
xor
cmp
fisubrl
pop
push
lods
add
insl
jb
pcmpgtw
cmp
dec
insb
xchg
mov
test
js
mov
xor
std
fstl
test
pop
iret
and
adc
pop
adc
push
xchg
stos
test
dec
shrl
xchg
mov
lret
sbb
test
mov
adc
outsb
dec
pop
mov
sahf
jno
mov
mov
jb
pushf
jp
or
mov
orl
sub
aaa
push
cmp
daa
rcll
mov
ret
movsb
ret
cmp
ja
push
xchg
incl
fwait
stc
inc
inc
inc
fnsave
lcall
push
gs
incb
fimull
add
imul
hlt
push
xchg
loop
pusha
xor
mov
data16
ret
sub
pop
fiaddl
scas
cmp
data16
xlat
js
push
inc
fildl
push
cmc
repz
mov
or
jo
jbe
repz
lock
pop
insb
cmpsb
cld
dec
sbb
fdivl
mov
mov
dec
aaa
mov
and
stos
pop
stos
jmp
push
movsb
insl
dec
leave
daa
shlb
sti
xchg
jmp
test
mov
jl
fld
jg
adc
out
imul
ret
fstl
push
lea
pop
fdiv
lret
xlat
es
sbb
cmpsb
inc
iret
add
shrb
pop
sahf
mov
frndint
dec
subb
xlat
sub
ss
cmp
repnz
roll
push
into
test
push
outsl
das
in
dec
aam
shl
pop
inc
sbb
mov
repz
js
lcall
jno
sbb
enter
cmp
cmc
outsl
inc
lods
xchg
subl
stos
out
daa
inc
inc
push
cmc
out
outsb
pusha
ss
inc
and
fidivl
or
adc
jbe
subl
or
dec
es
jecxz
cmp
or
icebp
sahf
mov
ljmp
adc
cmpsw
push
adc
mov
cld
ds
push
jmp
popa
fwait
push
inc
fs
dec
in
frstor
pop
cltd
fs
sbb
jecxz
notl
pop
dec
insb
mov
cltd
repz
inc
sbb
pop
mov
gs
and
data16
data16
jle
in
ljmp
pop
lock
pop
out
rorl
sbb
divb
stc
es
out
mov
xchg
ss
adc
ja
jmp
outsb
shrl
push
and
cld
lcall
mov
lcall
sahf
xor
aad
cmp
stos
pop
fidivl
sahf
lods
xor
fsubrs
add
jbe
jb
or
mov
jno,pn
mov
stc
stc
ljmp
dec
xor
mov
dec
adc
jmp
xor
mov
lea
inc
sbb
out
bound
mov
cs
pushf
outsl
and
inc
repz
adc
daa
arpl
push
mov
inc
ret
clc
and
fidivl
or
mov
xchg
flds
add
jp
daa
inc
or
fstps
sub
pop
dec
jae
dec
pop
push
fnsave
cmpxchg
loop
fwait
scas
push
stc
jnp
call
mov
loopne
sbb
lret
clc
mov
scas
sub
icebp
sbb
and
pop
push
stos
lock
cli
add
jae
lret
sub
les
jecxz
out
jne
cmpsl
push
lods
cmp
jle
les
sub
ret
pop
cmc
mov
cmc
sbb
movsb
inc
imul
rclb
leave
pop
xchg
mov
lds
push
dec
mov
xchg
loopne
jge
jmp
mov
loopne
lock
dec
movsl
fsubrs
inc
psllq
fstps
movb
popf
rcll
mov
add
sub
push
insl
cmp
pop
scas
pop
adc
mov
or
and
popf
out
adc
js
and
dec
xchg
js
dec
test
dec
and
pop
dec
or
inc
and
push
call
cmc
int
sbb
je
dec
add
dec
ret
cmp
push
rorl
or
sbb
sti
sub
xchg
orb
push
loop
call
nop
sbb
inc
cmp
imul
out
mov
mulb
push
push
ljmp
icebp
adc
sub
aas
int
pop
adc
pushf
mov
or
xchg
mov
loopne
pop
mov
push
clc
stos
or
sbb
cmp
xchg
mov
cld
mov
push
jmp
xchg
jl
cmpsl
out
jno
stos
xor
dec
xchg
mov
adc
mov
int
jecxz
mov
push
add
dec
inc
iret
fs
mov
test
jmp
ljmp
and
inc
push
sub
push
inc
imul
push
sti
fwait
xlat
cmp
pusha
sbb
fnstcw
into
adc
negl
xchg
mov
outsb
movsb
inc
push
cltd
mov
mov
adc
push
mov
push
fnstcw
push
sbb
cmp
and
outsl
push
jle
add
mov
aam
inc
sbb
add
andl
lds
jbe
scas
xor
leave
cmpl
testb
lds
mov
push
mov
mov
jmp
aad
cmpsl
stos
daa
fstpl
push
sbb
inc
or
mov
push
xor
dec
bound
stos
test
imul
ja
loopne
movsb
je
lds
sub
mov
rclb
nop
test
cmp
ffree
inc
call
cmc
ret
loope
mov
aad
sahf
sub
jmp
mov
xor
popf
repz
add
repz
rol
mov
mov
adc
cmp
mov
mov
push
or
mov
fadd
xchg
jnp
lcall
mov
loope
mov
mov
push
movsl
int
push
out
in
xor
inc
push
push
inc
fwait
data16
call
jl
jb
ljmp
push
adc
rcr
hlt
divb
or
xor
jecxz
mov
imul
stc
mov
repz
fmul
imul
pop
add
imul
out
popf
loop
adc
movsb
test
mov
sub
popf
out
popa
or
dec
push
mov
ljmp
lock
pop
repz
orb
push
push
shlb
xchg
cli
or
mov
loopne
in
aaa
sbb
fwait
lea
ja
rclb
sub
movsl
in
fcoml
jbe
xchg
int3
out
out
pop
repnz
aad
add
out
jg
push
mov
xor
sub
dec
and
jb
jp
and
xchg
and
jecxz
divl
push
cmp
xor
and
mov
mov
aaa
cmp
stos
lock
negl
cmpsl
xchg
insb
inc
test
xchg
push
repnz
inc
fcompl
js
mov
jne
jns
fsubl
xchg
scas
xchg
dec
add
cltd
inc
and
stos
inc
call
mov
rolb
xchg
loope
and
and
fstpt
sub
dec
pop
icebp
hlt
mov
mov
imul
push
xchg
push
push
cmc
jne
cmp
sbb
xchg
sub
cmpsb
dec
xchg
jle
inc
xchg
scas
cwtl
int
pop
sub
lahf
xor
fwait
add
cmc
jle
pop
or
mov
jg
cmp
shl
xor
dec
insb
or
dec
scas
mov
stos
inc
or
mov
pusha
fistpl
in
jg
push
cmp
aam
gs
push
cld
aad
jmp
and
dec
jnp
leave
fisttpl
int3
mov
test
xchg
mov
pop
aam
rcrl
dec
cmpsl
jb
xchg
pop
ja
inc
cmc
pop
repz
lfs
adc
rolb
push
shll
add
orl
iret
idivl
ds
inc
inc
xor
daa
jne
xchg
or
js
pop
jge
aam
jl
mov
les
insb
pop
test
mov
mov
pop
je
ds
test
dec
inc
shll
enter
pop
mov
pop
arpl
iret
cmp
sbb
push
dec
mov
push
jmp
sbb
jg
cmpsl
push
mov
jle
inc
lock
psraw
mov
js
xchg
and
inc
mov
data16
scas
mov
or
cmp
sub
pusha
add
xor
lea
lret
cmp
jl
lods
push
fldl
cmp
test
and
mov
aam
sbb
gs
jnp
xchg
jp
inc
lcall
sahf
outsl
mov
imul
aas
test
sbb
xlat
repz
icebp
pop
cmp
jg
or
pop
sbb
add
pushf
inc
fsubs
or
pop
out
pop
push
inc
and
sub
mov
jmp
fs
fnstcw
das
cmp
jae
lcall
cmp
or
adc
push
in
sub
cmp
jp
xor
inc
pop
ficomps
mov
into
cs
add
jg
jg
push
fsub
push
or
dec
lock
and
cmp
stos
inc
outsb
jmp
into
inc
out
ret
daa
negb
mov
ljmp
int3
xor
pop
sarl
outsl
cltd
stos
lock
pushf
cmc
outsb
sub
add
mov
pushf
sbb
stos
push
int
ljmp
ja
idivb
int3
std
xchg
incl
insl
loopne
xchg
sbb
andb
jecxz
jne
out
sub
mov
mov
pop
fadds
lock
inc
jae
ss
inc
lods
jecxz
stc
xor
enter
iret
jmp
and
pop
mov
adc
cmp
sbb
test
mov
data16
push
push
cltd
out
sti
aam
loope
xchg
test
in
popf
ss
pop
lock
ret
and
pop
jae
sub
insb
cmp
xchg
pop
sbb
ljmp
call
sbb
jbe
xchg
mov
mov
cmpsb
dec
xor
pop
lock
cmp
fsts
mov
fnstsw
xchg
nop
repz
lahf
in
fmul
pop
es
dec
mov
lods
mov
jmp
stos
jge
shrb
dec
cmc
xor
pop
call
mov
orl
in
sub
aas
push
das
repz
sub
cmpl
mov
sbb
sbb
push
jb
xor
subb
ret
fwait
push
sbb
mov
xchg
mov
ds
and
pop
test
mov
pushf
fcomps
lea
fisubl
dec
ret
dec
stos
jno
pop
rol
ret
insb
popa
ja
shlb
xor
inc
adc
and
iret
in
lds
daa
or
loop
cmpsb
push
aaa
jmp
incl
nop
test
and
mov
sub
pop
fdivl
pop
mov
xchg
pop
shlb
nop
aaa
sub
ja
adc
insb
dec
int
pop
adc
icebp
fimull
push
inc
jmp
pop
mov
jmp
cmp
outsb
jnp
mov
iret
gs
xor
inc
in
bound
cs
pop
aas
dec
fnstenv
inc
xor
pop
inc
and
pushf
jno
stos
mov
rcl
testl
kxnorw
adc
lret
cli
push
mov
gs
or
jle
shrl
xchg
dec
xor
scas
or
sub
loope
xor
adcb
add
mov
loope
fistps
popa
nop
lods
jns
shrl
sbb
lock
divl
dec
sub
jecxz
mov
cli
ss
out
mov
xchg
int3
sub
cmpb
std
sbb
and
and
pusha
push
jle
lea
cmpps
adc
imul
ss
faddl
cld
outsl
cmp
ss
mov
add
aaa
mov
mov
xor
jae
cmpsl
mov
cmp
mov
je
adc
xor
inc
mov
clc
jo
rcrl
xchg
imul
jmp
iret
push
movsb
rcrb
mov
adc
xchg
mov
dec
cmpsb
add
dec
dec
xor
lret
popa
xor
pop
mov
push
adc
fildl
push
xchg
ljmp
in
cmp
push
addb
dec
aad
and
imul
sbb
shlb
xchg
pop
mov
push
ja
pop
test
loopne
jo
jbe
in
push
mov
mov
mov
idivb
repz
scas
shll
or
insl
jnp
std
insb
push
out
mov
incl
cld
xor
and
ret
push
ret
dec
pop
xchg
mov
das
add
inc
lods
mov
repnz
xchg
sbb
je
mov
imul
movsb
jp
mov
outsb
add
call
shlb
mov
sbb
xor
mov
mov
inc
push
and
and
cs
or
jae
fdivrl
repz
stc
test
out
bound
or
inc
in
dec
mov
mov
pop
pop
cmp
ljmp
cmp
mov
rcl
bnd
pop
lea
mov
adc
fiaddl
test
xor
mov
pop
lods
pushf
or
in
mov
pop
or
jne
or
sarb
out
es
adc
push
fdivl
or
gs
jae
pop
ja
xchg
popf
test
in
insb
ret
xor
stc
cmp
jge
jnp
repnz
repz
int
les
test
repnz
shll
add
push
xchg
sub
jmp
mov
js
cld
pop
cli
and
inc
sub
xchg
inc
push
pop
mov
or
jnp
dec
cs
movsl
push
jae
inc
jle
testl
jae
add
push
pop
or
xchg
mov
inc
fdiv
aas
stos
mov
test
rorl
lcall
xorps
push
add
fldcw
stos
sub
mov
xor
mov
xchg
jp
and
ds
out
jmp
out
pop
push
cld
repnz
xor
movb
or
push
scas
mov
push
or
mov
cmpsl
jb
arpl
mov
push
pop
adc
jmp
stos
xchg
scas
sub
pop
or
out
push
push
clc
insb
lock
arpl
mov
push
cltd
add
xor
cmpsl
arpl
mov
popf
mov
fs
stos
jo
add
pushf
fildl
mov
callw
sbb
sub
pop
fwait
jb
lret
scas
push
add
fidivl
jo
cwtl
dec
mov
xchg
mov
out
jecxz
xlat
out
jbe
jmp
jge
flds
dec
and
add
cmp
cmp
pusha
fists
add
movsl
dec
cmp
push
jp
push
jo
ss
cmp
cli
xchg
jp
cld
pop
test
js
cld
sub
jge
or
test
fldt
fnsave
shl
xchg
pop
adc
rcll
out
shrb
int
outsl
loop
cmpl
push
jo
mov
xchg
pop
lds
fcoml
cmp
sbb
mov
addl
mov
les
pop
adc
jge
fnsave
sahf
idivb
inc
cltd
ds
xor
mov
dec
jle
xor
fists
movsl
or
adc
pop
ret
arpl
lock
push
cmp
and
cmp
popf
lods
pop
adc
cmp
push
jo
adc
or
jge
xchg
sub
arpl
mov
fcoml
int3
mov
xchg
sub
enter
jno
shrl
cmp
jmp
movsl
inc
sbb
cs
dec
loopne
jl
lds
sbb
lahf
inc
repz
xor
test
sbb
shrb
sub
mov
popa
not
push
xchg
fdivs
push
jbe
test
sub
mul
and
aas
cmpb
aad
xchg
jo
and
or
push
jae
sub
popf
shlb
ljmp
hlt
xor
outsb
jns
fdivrl
leave
scas
std
sbb
inc
inc
and
fcoml
or
pop
inc
cld
inc
sahf
sti
dec
inc
xor
xor
icebp
pop
dec
into
xchg
cmp
ss
testl
add
js
ljmp
insb
jge
adc
fwait
jg
inc
cmpsb
mov
xchg
xchg
cmp
scas
jne
repnz
hlt
aas
mov
xlat
jns
mov
jne
sub
ljmp
xor
push
push
mov
repnz
out
int3
fdiv
out
adc
es
mov
inc
jp
jg
adc
add
push
test
inc
fdivl
jnp
mov
fbstp
stos
ss
mov
sbb
mov
dec
or
push
lea
or
lea
push
or
ljmp
dec
gs
mov
xchg
mov
rcr
and
pop
sub
push
push
pushf
dec
sahf
xor
out
mov
push
add
mov
mov
jecxz
sub
rcrb
add
xchg
xchg
dec
push
mov
sbb
cmp
rorb
adc
xchg
add
fsubs
push
mov
push
lahf
and
jp
push
lods
jmp
aaa
xor
dec
add
xchg
jo
sub
fistl
loope
sbb
adc
add
repnz
iret
dec
fdivl
nop
dec
adc
pop
push
jnp
mov
inc
mov
orl
mov
nop
xor
sbb
lcall
xor
addr16
mov
popa
or
or
loope
scas
push
xchg
adc
lcall
or
outsb
mov
vpaddq
add
sub
inc
mov
jmp
mov
pop
lods
in
aaa
xor
jecxz
pop
dec
lcall
in
in
inc
fucomip
jne
clc
cmpsl
loopne
cmp
movsb
ret
sub
ror
mov
sbb
cmp
popf
sbb
test
mov
aaa
pop
ss
rcr
je
adc
adc
jbe
push
pushf
fwait
call
or
movsb
xor
adc
shl
sbbb
mov
mov
lahf
xorb
mov
pop
mov
adc
fistpll
pop
es
dec
fldt
lret
lret
repnz
seta
ror
int3
mov
test
ds
dec
movsb
pop
push
or
insl
mov
ja
push
push
mov
mov
sti
ss
test
das
dec
inc
ret
and
call
fsts
movsb
out
pop
or
in
sti
or
xchg
add
mov
add
xchg
hlt
push
mov
xchg
aad
jb
jb
jno
mov
dec
cli
test
sub
mov
cmc
fadds
lcall
cmpsb
lea
add
cmp
gs
dec
dec
loopne
ffree
sbbb
dec
dec
sbb
xlat
cs
sbb
out
les
ss
cltd
xor
dec
pop
fcoms
repz
popa
addr16
sub
stos
add
xor
add
vmovaps
jmp
and
pop
mov
push
xor
dec
or
enter
js
js
push
outsb
push
rcrb
jb
xlat
addr16
test
test
or
cmp
fidivs
sub
repz
and
into
mov
in
pop
jge
xchg
scas
inc
loopne
sub
int
mov
shll
inc
shr
les
divl
add
fisubs
jb
jmp
mov
scas
xor
movb
stc
out
sub
pushf
clc
cmc
push
test
lods
sbb
push
inc
xchg
and
aam
insl
data16
lods
ljmp
push
lock
lods
pop
jl
jbe
xor
sub
push
cltd
or
xor
orl
mov
aad
xchg
push
adc
mov
jno
and
data16
and
mov
sbb
fwait
xor
cwtl
or
add
mov
int3
xor
popf
adc
jp
mov
testb
ljmp
xchg
push
jge
inc
popa
clc
je
sbb
and
lahf
lret
mov
cld
imul
int3
sti
cwtl
cmpsb
scas
leave
fsubl
into
push
cmp
mov
pushf
out
and
jg
aaa
jnp
test
movsb
cmp
mov
ret
shlb
outsl
sar
rcrl
jb
push
mov
jns
jae
punpckhwd
xchg
mov
imul
lods
mov
shlb
xor
movsb
cld
fst
push
jge
test
mov
cmp
sbbl
adc
jmp
test
xchg
aas
clc
pop
imul
or
iret
data16
dec
or
xchg
in
test
pop
adc
shrl
outsl
jmp
popa
ss
mov
dec
out
jl
shrl
js
add
pop
les
push
movsb
xor
es
notb
cmp
push
add
adc
test
fwait
ret
rcll
add
push
push
mov
jbe
cmp
test
imul
fwait
popf
scas
les
in
jecxz
add
xadd
dec
xorb
adc
sub
mov
sub
pop
sub
test
xchg
and
add
dec
das
sub
mov
daa
out
arpl
mov
stos
fmulp
cwtl
xor
arpl
lea
and
stos
sahf
mov
sub
std
push
cli
push
outsl
cmp
push
push
mov
mov
jmp
aad
jno
pop
sub
mov
out
xlat
xchg
test
lea
or
ds
aas
std
or
xchg
leave
popf
mov
add
std
shrl
nop
loopne
rcr
cmp
shrl
daa
popf
mov
stos
in
pop
out
cs
in
stc
nop
mov
les
movsl
daa
mov
insb
mov
sahf
mov
add
xor
dec
mov
xchg
xchg
add
lret
movsb
aas
jo
mov
and
shld
stos
lds
dec
adc
ret
sbb
cld
or
das
fs
fstpl
mov
into
and
mov
adc
loopne
inc
xchg
aam
inc
pop
testl
xor
cs
nop
push
jns
scas
mov
pop
fnstsw
mov
into
movsl
inc
rcl
cmp
inc
xchg
mov
stos
xorl
mov
loope
cs
vpmuludq
mov
push
sub
or
cli
outsb
test
ret
es
jp
daa
inc
mov
or
repz
mov
lods
test
mov
inc
push
push
adcb
shlb
lea
fbstp
mov
imul
add
lret
lock
push
ljmp
pushf
repz
outsb
in
adc
aad
push
je
idivb
test
mov
inc
pop
adc
and
adc
xchg
jge
cmp
negl
dec
push
rcr
cmp
cmpsb
dec
aas
stos
and
inc
stc
mov
mov
push
js
cmp
mov
lcall
push
movsb
bound
cmp
ja
push
or
lea
lahf
bound
jne
inc
xor
jle
push
inc
push
enter
mov
enter
dec
cmpsl
xchg
fmull
sbb
adc
notb
scas
xchg
sbb
clc
repnz
mov
test
inc
mov
jo
imul
test
arpl
mov
adc
imul
fwait
push
and
cmpsb
sbb
or
je
sbb
dec
and
sbb
jno
sbb
cmp
xlat
testb
xor
fisttpl
sbb
int3
fmuls
sti
sub
xor
xlat
es
aad
mov
call
mulb
xor
out
xlat
icebp
lahf
pop
daa
inc
mov
inc
mov
ret
mov
leave
xor
sbb
pop
dec
and
cwtl
loope
popa
cmp
pop
stos
pop
icebp
fmuls
pusha
lahf
out
and
push
and
cmc
mov
mov
das
movsl
arpl
mov
xorl
mov
jae
cmp
inc
repz
ljmp
insb
lret
push
mov
test
loope
pop
inc
movsb
xchg
jne
pop
aas
jmp
inc
pop
adc
push
mov
xchg
mov
push
fcmovne
ja
inc
roll
inc
fidivs
mov
push
dec
mov
aam
gs
inc
jns
pop
and
mov
and
addr16
out
dec
shlb
mov
shlb
mov
mov
fistl
enter
add
es
jmp
mov
fsubl
mov
pop
adc
cmp
lock
ret
dec
cmp
ret
faddp
xchg
ljmp
jmp
inc
out
sbb
push
jmp
testl
fwait
pop
mov
xor
in
or
sbb
scas
push
xlat
sbb
mov
xlat
mov
cmp
ret
aaa
divb
xchg
sub
loopne
bound
push
scas
sub
rcrl
bound
sub
out
pop
dec
test
fsubrs
stos
and
add
pop
dec
popa
cmp
imul
pop
mov
rcrb
daa
xchg
into
popa
sbb
fimull
sbb
add
repnz
inc
inc
push
add
xor
cli
je
push
cmpsb
mov
push
insb
xchg
jns
test
les
cmp
xchg
outsb
cmp
in
repnz
dec
pop
divl
xchg
scas
jp
pop
xchg
cmpsb
add
xchg
aas
fbld
jno
mov
lret
xchg
aas
cmp
mov
lret
enter
jl
inc
mov
cmp
into
mov
sahf
jmp
cvtps2pd
cwtl
or
fidivrl
xchg
add
mov
xchg
mov
in
nop
shll
pop
loopne
or
jle
push
lods
nop
lds
pop
sbb
mov
and
lods
insb
jle
mov
cmp
push
jmp
xchg
lods
xchg
jno
in
push
push
push
mov
ss
push
in
nop
lds
pushf
dec
cld
pusha
loop
fisttpll
xchg
insb
rorl
daa
shl
inc
pop
jge
jae
testl
sbb
jne
stos
cmp
shll
sbb
xor
xchg
sub
dec
movsb
jg
scas
jb
cwtl
pop
xchg
mov
es
lahf
stos
mov
pop
loope
push
pop
xchg
or
sub
test
sti
dec
fbld
mov
adc
cltd
dec
js
mov
add
and
sahf
cltd
iretw
inc
repz
test
jl
adc
push
mov
fisttpl
shll
jp
enter
lret
xchg
cmp
in
ror
sbb
xchg
jg
sub
add
lcall
js
add
cmp
jnp
jl
xchg
insb
int3
stc
aam
mov
inc
inc
jns
inc
cmp
xor
pop
jle
pop
ret
daa
mov
or
insb
and
mov
out
pop
daa
ret
jge
cwtl
dec
push
cmp
aam
and
call
sbb
xor
cmpsb
push
mov
test
in
jge
cs
push
pop
sub
and
push
push
push
or
pop
xchg
add
inc
jl
mov
push
insl
jg
adc
sbbl
cmp
ret
push
test
push
mov
xor
inc
jcxz
mov
or
insb
sub
sub
mov
popf
arpl
cmpsl
bound
mov
arpl
lods
outsb
in
outsb
xchg
mov
sbbb
fbstp
pusha
sbb
lods
jg
movsl
inc
push
loop
pop
or
xor
mov
lea
gs
dec
loopne
dec
test
pusha
stc
mov
imul
and
addr16
in
fwait
cmpsl
imul
fs
adc
mov
pushf
js
lahf
push
jecxz
jne
inc
push
aad
xchg
cld
push
cld
pushf
shlb
ljmp
inc
or
mov
jb
xchg
dec
dec
mov
aad
loopne
es
rclb
ja
std
adc
out
mov
jmp
dec
pop
fld
sbb
fcomip
mov
add
sbb
xchg
xchg
cli
inc
loope
push
mov
pop
push
stos
out
lret
sarb
mov
and
mov
add
hlt
outsb
add
xor
ret
adc
cmpsl
inc
mull
insl
mov
xchg
hlt
pop
vucomiss
pop
movsl
dec
cmp
pop
xchg
xchg
sub
sbb
lods
test
mov
mov
pop
cmp
push
dec
mov
add
repz
jns
clc
jmp
loopne
xchg
xchg
les
push
test
hlt
movsl
fnsave
rcr
xor
push
arpl
cmp
pop
xchg
mov
jne
iret
push
mov
scas
mov
fs
inc
mov
mov
bound
in
pop
shlb
xchg
movsb
repnz
push
in
pop
or
cld
pushl
mov
mov
jmp
imul
outsl
mov
xchg
push
call
leave
mov
fcomi
shl
fdivr
sbb
icebp
or
cld
pop
daa
jae
test
xchg
pop
aaa
push
or
lahf
test
int3
pushf
stos
mov
pop
sub
scas
dec
les
iret
xor
fbld
call
lret
sub
stos
lcall
adc
fwait
outsb
cmc
xchg
or
movsb
inc
fst
fldcw
jno
fsubrs
scas
sbb
sub
lcall
mov
jmp
and
jo
push
mov
ljmp
inc
jns
repnz
mov
jmp
jge
dec
mov
fidivrl
xchg
ja
xchg
out
xchg
mov
or
add
test
and
cmc
insb
daa
add
dec
xor
adc
addr16
mov
into
test
into
in
outsb
aad
ret
or
test
lret
cmp
imul
ljmp
outsb
mov
pop
iret
or
inc
out
xlat
popa
jle
adc
xor
hlt
gs
inc
test
arpl
push
data16
and
outsb
add
jo
pop
sbb
add
mov
adc
or
cmpsl
or
lock
leave
mov
add
shr
lahf
popa
divl
xchg
or
std
and
or
sbb
scas
cmc
rcrl
movsb
mov
vsqrtss
scas
fisttpll
sub
and
xchg
ljmp
inc
pop
shlb
dec
or
dec
xchg
pushf
xor
jno
cmp
jmp
dec
out
mov
cmp
lcall
lahf
cli
pop
push
in
xor
ljmp
lods
push
jle
pop
mov
negl
cmpsb
push
lret
fistpll
outsb
mov
xchg
out
out
pusha
pop
movsb
lea
movsb
jl
mov
sub
jno
sub
inc
inc
cmp
xchg
sub
pop
or
xchg
mov
mov
cmc
mov
sbb
mov
dec
ret
std
inc
cmp
lcall
dec
push
call
push
push
fldcw
rcr
std
mov
dec
dec
mov
inc
add
stos
pusha
addr16
repnz
cmp
cmpsl
daa
push
jmp
out
inc
repz
push
test
cli
daa
dec
and
mov
mov
shl
and
imul
iret
jo
inc
int3
lret
lods
mov
jae
mov
dec
push
jne
or
bound
sub
icebp
rcrb
sbb
das
adc
sbbb
mov
imul
loopne
ds
mov
and
faddl
call
fcmovu
lret
inc
sbbl
push
xchg
idivb
int
rolb
fsubl
pop
add
dec
mov
repz
movsl
outsl
cmp
xor
xor
cmpsb
xchg
stos
cmp
movsb
test
ret
ds
mov
test
lret
shl
iret
rcl
sbb
or
mov
outsb
inc
icebp
jae
pop
lret
or
test
inc
cmpsb
les
jecxz
nop
sbb
add
xor
pop
cs
xor
lret
std
pop
jmp
stc
pop
sub
ficompl
xchg
dec
mov
lock
insb
push
fidivrs
scas
cmp
xchg
scas
pop
xor
mov
leave
push
and
inc
ljmp
decb
jns
sub
cmp
add
inc
inc
mov
pop
pop
inc
adc
mov
mov
push
and
xchg
cmp
lods
pop
mov
jbe
jae
cwtl
mov
xchg
mov
shl
hlt
jecxz
jnp
cmp
add
icebp
or
bound
aaa
hlt
xchg
inc
popf
loopne
in
adc
fldenv
pop
jno
stos
pop
mov
pop
sahf
jle
push
push
dec
out
jno
mov
ret
adc
sbb
fisubs
shrb
mov
xchg
inc
fstpl
repnz
cmp
adc
insb
sbb
test
jnp
pop
out
les
sub
test
or
or
aas
mov
sarb
dec
mov
ret
push
in
pop
daa
xchg
shlb
dec
out
out
push
rcl
pop
mov
frstor
stc
cs
inc
outsl
ss
addr16
in
aaa
inc
int
arpl
jne
sub
das
fwait
xor
das
lret
sbb
ljmp
push
jno
ja
or
outsb
sbb
mov
push
xchg
fxch
and
jecxz
adc
shlb
bound
or
push
xchg
pop
adc
push
movsl
pushf
test
and
mov
dec
nop
mov
dec
out
leave
jb
adc
adc
mov
or
movsl
mov
cmp
mov
in
aas
dec
out
subl
xor
cmpsb
or
fisubrs
fldt
mov
sbb
andb
xchg
cwtl
scas
sbb
jmp
pop
cwtl
aas
clc
sub
in
pop
fistpll
aaa
scas
dec
add
inc
shlb
or
jl
mov
aad
hlt
int3
sub
test
addr16
sub
jecxz
mov
pop
inc
push
push
push
ficoml
shrb
pop
mov
pusha
insl
js
lahf
jge
sti
cltd
adcl
leave
xor
data16
push
push
jb
jbe
aas
daa
leave
add
pop
clc
daa
fidivl
sbb
addr16
mov
in
push
mov
pop
insb
int
lahf
push
leave
addr16
push
ror
out
or
imul
orb
sti
arpl
mov
stc
inc
repz
lock
mov
jb
inc
mov
es
bound
cmp
sahf
mov
rcll
cmpsl
add
idiv
bound
into
iret
jge
lret
repz
arpl
inc
stc
popf
xlat
cltd
std
lock
xor
sbb
jmp
mov
popa
mov
mov
rorl
xchg
stc
lea
dec
leave
daa
mov
add
push
std
mov
pop
mov
xchg
add
jg
dec
mov
testl
outsb
sub
add
add
fcoml
aaa
stc
cmpsl
shlb
cli
stos
stc
mov
sbb
sarl
cli
pushf
or
ds
shlb
sub
pop
mov
jmp
fcomip
or
mov
iret
dec
cltd
negl
call
cmp
xor
push
inc
inc
xor
sbb
add
cs
mov
call
cmp
lret
rolb
pusha
lods
and
adc
popa
outsl
jo
xchg
mov
repnz
dec
int3
aad
sbb
in
sub
dec
cmp
aaa
add
sbb
xchg
movsb
aas
pop
call
and
jp
xchg
ret
into
xchg
scas
stc
inc
push
test
aam
test
sbb
mov
jne
lret
call
mov
mov
push
push
jmp
outsb
sti
test
xchg
jb
dec
xor
scas
cmpsl
int
dec
and
or
xor
xor
test
out
pop
ja
es
mov
adc
popa
cltd
das
mov
inc
sahf
xor
pop
jg
push
mov
cmc
push
mov
lcall
mov
out
pop
aad
cmpps
and
aaa
inc
je
stos
sub
xor
fiadds
pop
data16
or
xchg
mov
mov
mov
in
pushf
and
lds
xor
mov
or
iret
ja
mov
mov
mov
mov
pop
ja
std
cmp
pop
adc
shll
std
cmp
inc
jl
xchg
jl
insb
movsl
jae
movsb
movsb
push
cld
fisttps
mov
stc
xor
cs
mov
aad
test
and
vmovss
loope
int3
push
mov
bndstx
daa
pop
insl
push
sbb
lods
xchg
xchg
mov
leave
icebp
mov
psubusb
or
xchg
sub
cld
dec
xchg
frstor
ud1
rcrb
shlb
pushf
and
int
test
call
or
mov
sbb
mov
sti
push
in
sub
add
xor
sar
and
cmpsb
std
push
imul
dec
xor
clc
nop
xchg
xor
xchg
mov
cmp
hlt
nop
sub
lcall
and
mov
int3
cmp
cmp
mov
mov
sub
enter
inc
add
mov
out
pop
lock
jb
adc
nop
sub
jb
stos
mov
and
out
popa
xor
lea
mov
xchg
cmp
imul
and
sub
loopne
sti
push
add
arpl
mov
subl
adc
cld
add
repz
clc
jae
sub
sbb
out
inc
addr16
xchg
sub
mov
mov
jecxz
popf
jns
push
or
inc
cmp
sbb
loopne
faddl
data16
cmp
jns
jmp
jns
flds
xchg
jns
inc
and
xchg
sti
mov
pop
mov
add
loope
jp
mov
adc
pop
dec
mov
add
cmp
xchg
add
arpl
psrlq
mov
ret
enter
and
incl
or
xor
subl
sub
inc
xor
lods
mov
int
sub
dec
xchg
dec
jecxz
shll
mov
je
mov
mov
cmpl
inc
ss
test
push
leave
repz
fcomp
cs
mov
popa
adc
cmc
inc
inc
stos
cmp
loope
lret
inc
sti
cmp
push
lock
pop
repnz
test
mov
or
cmp
scas
ja
xchg
aas
xor
mov
or
push
movsb
dec
jo
jge
out
mov
jle
js
jge
xchg
daa
jbe
dec
das
xor
ds
cmc
mov
lods
cmp
pop
add
andl
add
js
or
or
loope
jg
ret
ja
call
dec
xchg
lcall
repz
cmpsb
inc
add
sbb
shll
fdivs
in
movsl
ret
jle
leave
int
je
xchg
pop
jns
mov
or
movsb
xor
lea
push
sbb
stc
jo
lahf
jp
inc
dec
add
loopne
xchg
mov
push
adc
xor
lds
pop
stos
pop
lock
mov
aaa
add
mov
les
and
mov
lret
mov
adc
jo
shll
test
cmpsb
ds
inc
mov
dec
xchg
gs
sbb
sub
into
shlb
sub
xchg
inc
lahf
les
dec
and
lahf
push
xor
xchg
lock
rclb
adc
arpl
jge
js
mov
scas
push
mov
fistps
test
fsubrl
into
popf
in
cmc
ljmp
mov
stos
sahf
inc
out
cmp
add
pop
cmpsb
xor
or
and
rorl
idivl
bound
scas
fdivrl
sub
pop
in
jnp
push
push
pop
adc
pop
sub
imulb
cmc
std
ja
and
outsl
pushl
cmc
xchg
push
rol
fwait
add
scas
adc
loopne
and
iret
add
shlb
sub
push
outsb
dec
and
jnp
cltd
insl
daa
jmp
push
test
jle
std
or
mov
push
andb
and
jp
lret
or
dec
jbe
movsl
sarl
insl
leave
popf
cmpsb
out
lods
addr16
sbbl
inc
mov
cs
xchg
lahf
add
and
push
mov
out
inc
mov
addl
mov
mov
sub
into
jb
jbe
add
cmpsb
and
push
enter
aaa
fucomp
insb
cli
int
fsubrl
pop
mov
ljmp
mov
or
outsb
jle
test
lcall
lods
xchg
les
xor
addr16
gs
or
stos
aaa
jae
push
mov
inc
inc
outsl
addb
scas
mov
jp
mov
loope
inc
push
mov
cmp
rolb
andl
push
xor
orb
sub
jge
fcomps
xor
xor
xchg
push
pushf
mov
iret
outsl
cmp
pop
gs
pop
cmpb
lods
jecxz
lret
mov
movsl
scas
jo
xchg
mov
dec
sahf
sub
std
xor
jge
aad
loope
cwtl
daa
movsb
inc
lods
fdivl
mov
mov
jne
sub
inc
sub
and
push
cwtl
jge
in
repnz
push
and
inc
in
pop
andl
mov
ret
outsl
les
notl
adc
pushf
xor
dec
xor
jmp
xor
mov
jle
and
push
inc
pop
stc
dec
push
mov
fisttpll
jp
mov
movsl
das
mov
pop
xor
push
jns
and
int
push
enter
aas
out
out
popa
sbb
mov
daa
or
outsb
pop
push
jmp
adc
cmp
fwait
pop
shld
js
in
add
push
mov
jp
mov
sarl
ficompl
jbe
shlb
cmp
pop
cmp
mov
mov
dec
xchg
test
dec
inc
inc
test
pop
xchg
outsb
rcll
lret
pop
add
push
imul
fidivrl
mov
add
mov
xchg
fwait
movsl
sbb
jo
mov
cmp
cmp
lret
inc
mov
fsubr
incl
xor
cmpsb
jecxz
mov
inc
adc
jne
push
outsb
arpl
out
out
or
cmp
add
xchg
inc
orl
adc
dec
jecxz
pop
jmp
jae
out
mov
sub
add
push
in
in
mov
jo
nop
xchg
sbb
or
cmp
cmp
mov
jmp
cli
and
jb
test
xor
out
pop
sbb
shrb
pop
popa
jge
cltd
lock
sub
push
out
test
fildll
mov
xor
sub
push
mov
mov
sub
cltd
decb
sub
push
mov
ret
lea
dec
dec
dec
mov
mov
test
push
rorb
sbb
or
mov
out
push
or
sub
cmp
cmpsl
sbbb
mov
mov
push
lock
or
mov
push
pop
push
lds
scas
add
popa
scas
cmp
movsl
test
lret
divl
jns
mov
push
cld
scas
aas
call
xor
push
into
adc
jmp
sahf
lods
and
pop
mov
push
in
pop
in
stos
lret
cli
psrad
xor
std
dec
cmp
out
xlat
cwtl
test
out
mov
sbb
aad
inc
mov
dec
shr
jne
sbb
lods
dec
pop
loope
jge
jmp
sahf
and
adc
jns
inc
rol
jne
add
pop
adc
inc
jns
add
jge
repz
jno
adc
call
mov
push
and
stos
mov
inc
movsl
cmp
push
sbb
ret
pop
je
out
inc
lods
loope
fisubs
out
mov
add
fnsave
test
inc
call
cld
cmpsl
jne
jmp
insl
xchg
xchg
add
xchg
push
lods
fisubrs
shlb
clc
cmp
mov
ds
or
call
cwtl
cmp
and
mov
or
xchg
mov
xlat
aam
xchg
lock
scas
dec
xor
pop
test
push
sar
mov
dec
inc
pop
stos
inc
ficoml
xor
ljmp
sub
out
inc
loopne
into
mov
lods
js
mov
push
pop
fucomp
test
aad
xchg
adc
inc
mov
jne
mov
dec
sbb
mov
imul
sbb
outsl
xchg
sub
mov
jge
dec
sub
std
clc
dec
fnstsw
lret
pop
out
out
mov
jge
cmp
inc
and
mov
andl
dec
mov
jg
sbb
push
fisubs
sub
test
push
or
jp
pop
gs
lea
mov
and
mov
mov
loopne
daa
mov
xor
test
xor
ret
xor
shlb
stos
inc
daa
rol
das
dec
into
inc
cmpsl
dec
pop
xor
jl
in
or
mov
sti
lahf
fadds
js
movsl
and
loop
lret
repnz
cwtl
mov
push
push
and
adc
dec
jne
out
inc
es
pop
inc
mov
mov
iret
or
sbb
mov
jnp
pop
imulb
loop
mov
jle
repnz
imul
cmpsb
cmp
in
les
inc
ja
data16
add
xor
pop
sahf
push
addr16
push
cmc
push
stc
or
add
sbbb
or
mov
int
stos
and
push
int3
push
aas
push
cmpsb
sbb
add
mov
nop
dec
pop
pop
adc
or
cli
xchg
and
and
shll
insb
sub
lock
clc
xor
popf
pop
mov
imull
into
orl
mov
add
pushf
push
mov
push
sub
fldl
xchg
fs
cmp
data16
push
adc
shll
xor
push
js
pop
in
dec
cltd
xchg
fsubs
int
mov
jno
lock
cmpsb
cmp
ja
inc
dec
mov
xor
mov
pop
inc
loopne
jg
stc
xor
in
pop
pop
push
mov
es
pushf
dec
shrb
jo
bound
xchg
cmpsl
idivb
enter
mov
fsubl
mov
xchg
int
cltd
outsl
out
sbb
cmpsb
in
cmp
pop
test
in
mov
push
xchg
cmp
push
cmpsb
and
int
mov
mov
push
shl
sbb
loopne
sub
aaa
fidivl
xorb
test
mov
les
sti
es
add
and
adc
cltd
xor
sbb
out
xchg
insb
loop
lret
and
mov
pusha
vpcmpeqd
rorb
cmc
sbb
or
and
cmp
faddl
test
mov
jg
ficoml
mov
fwait
cmc
sbb
cmp
and
sub
sub
test
jge
iret
imul
jp
aaa
repz
xor
popa
js
or
ret
sub
mov
adc
mov
xchg
fpatan
pushf
aam
or
mov
or
mov
xchg
loop
leave
divps
push
mov
cmp
lcall
and
andb
adc
pop
push
xor
mov
js
cltd
cmp
add
fbstp
inc
jecxz
loop
mov
xchg
lods
dec
inc
adc
cwtl
pop
push
or
mov
mov
lds
out
lods
push
imul
jmp
cmp
xchg
and
fadd
mov
sub
fsubrl
into
pop
adc
add
ja
mov
in
or
cmp
sbb
arpl
mov
inc
pushf
sub
adc
pop
or
pusha
mov
data16
xchg
faddp
sbb
cmp
inc
xor
mov
ret
lods
dec
fwait
dec
xor
jbe
loope
andl
or
sbbl
aam
mov
pop
hlt
xchg
sbb
lahf
mov
fstps
cli
adc
daa
test
rcl
cltd
mov
imul
xor
mov
out
cltd
in
xchg
daa
add
ftst
push
xor
push
je
or
mov
mov
pop
je
dec
mov
lahf
push
das
inc
add
xchg
sub
add
ret
lcall
sbb
xor
inc
sahf
sbb
jnp
push
dec
push
ret
sbb
or
test
pushf
mov
mov
es
roll
jecxz
push
nop
cmp
shll
jbe
adc
xchg
cmp
dec
scas
cmp
andl
rorl
in
jo
inc
push
outsl
xor
xor
mov
andb
rep
inc
in
jmp
jmp
test
cwtl
dec
jne
push
call
lret
clc
inc
fsubrs
mov
mov
xchg
hlt
push
mov
mov
pop
sti
inc
inc
sub
icebp
filds
or
cmp
loope
fiadds
int
push
shlb
mov
bound
daa
inc
inc
pop
push
push
mov
test
inc
adc
xchg
mov
hlt
mov
mov
push
xlat
scas
out
dec
test
pop
daa
arpl
or
adc
push
cmpsl
inc
jne
jnp
popa
fcomps
mov
fimull
movsl
stc
lea
ret
lods
rolb
es
mov
movb
inc
adc
jl
adc
dec
movsl
and
mov
or
push
rclb
jb
xor
test
adc
push
lcall
in
into
pop
lret
pop
shrb
cmpsl
pusha
enter
sub
adc
lahf
ss
pop
cld
mov
sub
daa
cmp
mov
jne
outsl
idivl
sub
loope
cli
xchg
test
lret
sbb
jle
sbb
xchg
addb
insb
out
les
inc
stos
in
cwtl
cwtl
insb
mov
cmpb
adc
xchg
inc
pop
in
js
jns
fstl
lock
cwtl
mov
pushf
out
test
inc
mov
fwait
pop
jo
in
mov
dec
dec
fisubrs
inc
sahf
mov
bound
mov
lcall
lahf
iret
xchg
and
pop
ss
lret
mov
sarb
aam
ljmp
testb
cld
test
fidivs
dec
add
sub
push
or
or
sub
inc
loope
mov
je
mov
bound
xchg
adc
pushf
andb
push
mov
imulb
les
decb
jg
or
pop
gs
lret
cmp
stos
mov
bound
ret
hlt
les
jno
cmpb
insl
outsl
adcb
int
xchg
jmp
fstpt
je
test
lock
mov
cmpsl
or
xor
aam
mov
mov
adc
or
fwait
mov
fisttpll
mov
add
mov
jmp
jmp
push
int
mov
and
pop
addr16
rcrb
cmp
in
sahf
repz
mov
outsl
mov
aaa
sti
push
or
mov
ret
pop
sub
shl
popf
mov
cmp
jmp
push
sbb
int3
mov
ss
push
inc
insb
fildll
call
adc
mov
in
mov
jno
enter
cmc
in
mov
xchg
pop
notb
bound
dec
and
mov
cmpsl
sub
and
nop
stos
cmc
adc
xchg
cmp
and
lret
jmp
push
mov
mov
push
lock
mov
mov
mov
dec
outsb
xlat
imul
insb
xchg
add
jne
dec
push
aaa
adc
mov
in
rcrl
pop
xchg
js
jb
xchg
movsb
push
adc
pop
mov
cmp
in
arpl
sub
inc
jno
stos
sub
xor
xor
sar
push
sub
shl
cwtl
ret
dec
hlt
cmp
es
jl
xchg
pop
dec
inc
imul
shrb
in
lock
inc
mov
cmp
dec
xchg
sbb
xchg
in
mov
jp
mov
add
ljmp
jb
or
lret
ja
jns
pushf
pop
add
int3
jge
mov
cmp
mov
dec
aad
in
xor
popl
aas
out
sti
ret
ljmp
test
je
add
lods
inc
stos
jle
jb
aaa
fwait
adc
mov
pop
jmp
hlt
lcall
stos
int
sub
insl
mov
xor
and
cmp
xchg
mov
push
call
addr16
insb
loop
pmaxub
sbb
lret
and
in
jg
push
sub
lea
popa
shlb
jno
out
add
mov
sbb
jecxz
outsb
loope
dec
mov
sub
psrad
add
cld
jo
dec
cmp
mov
mov
xor
push
out
pusha
negl
or
pextrw
mov
dec
cltd
pop
jmp
pop
cld
btr
repnz
in
test
mov
ret
ja
data16
cltd
fsubs
xchg
js
fdivrl
sub
inc
movsb
call
subl
test
loopne
mull
mov
pusha
test
inc
testb
not
jmp
repz
mov
add
inc
scas
inc
sbb
jne
jg
dec
push
mov
fsts
inc
test
add
mov
out
popa
fnstenv
les
ja
pop
pop
stc
push
test
adc
or
push
adc
mov
data16
aaa
mov
test
scas
mov
dec
push
dec
stos
jmp
test
fwait
les
cli
sarl
inc
cmc
rcr
gs
inc
cmpsl
and
xor
mov
imul
cli
in
xchg
cmp
nop
subl
jno
push
xchg
rorb
push
inc
adc
repnz
jp
pusha
add
and
lret
loopne
add
popa
stos
fisubrs
bswap
out
pop
dec
xor
test
cmpl
ret
sub
sbb
mov
incl
sub
orb
iret
mov
es
adc
fistpl
or
pop
sub
mov
push
cmpsl
inc
imul
orl
dec
push
mov
test
rorb
stc
lahf
sub
fdivp
insb
imul
popf
xchg
sbb
jecxz
test
pop
add
pop
jg
and
loop
xor
testb
cmc
adc
lea
xor
sub
xor
mov
or
xor
fsubrp
repnz
insl
add
rcll
mov
adc
subb
sbbb
jbe
popa
test
add
movsl
out
scas
adc
cmp
ljmp
inc
adc
cli
fadds
inc
push
aaa
sti
cld
push
insl
and
popa
fsubl
pop
scas
test
outsb
add
pusha
test
aas
push
jnp
lret
das
xor
mov
popa
pop
ret
shlb
xchg
ja
pop
std
mov
stos
lret
and
mov
xor
push
mov
inc
cwtl
lds
or
xchg
dec
mov
mov
push
ds
lcall
clc
mov
add
sbb
cmp
movb
push
jo
and
mov
mov
loopne
add
daa
icebp
fmull
jmp
jg
mov
pop
into
and
add
cmp
or
cli
je
cs
es
faddl
dec
je
test
cmc
cmpsl
jno
sub
cmp
rcrl
loope
movsl
pop
out
pop
adc
cmpsl
inc
test
cmc
sbb
addb
add
add
mov
push
xchg
hlt
lock
inc
sub
and
mov
stc
fldcw
shll
jns
jmp
sahf
pop
or
adc
pop
jbe
pushf
xor
loope
lock
mov
mov
negb
lret
ret
add
repz
inc
clc
iret
push
push
xchg
mov
push
sub
mov
js
add
xor
out
xchg
add
xor
xor
xchg
sbb
int
xor
ret
test
in
xor
lds
or
mulb
cmp
sbb
dec
mov
cmc
dec
lods
mov
cmp
imul
fdivrs
adc
sbbb
or
xchg
push
popa
xchg
repz
push
mov
push
pop
je
es
inc
pop
dec
jbe
jmp
mov
mov
pop
cltd
inc
fmul
jo
mov
xchg
pop
pop
repnz
pop
jo
gs
xchg
popf
shl
fsubp
clc
mov
sbb
cmp
xchg
lock
dec
ret
adc
jnp
and
je
or
pushf
push
repz
inc
rclb
int3
pop
in
jge
dec
add
nop
mov
scas
fistps
dec
ljmp
mov
mov
adcb
cmpsl
sbb
mov
sahf
lds
mov
sub
cmp
out
stos
mov
or
mov
fsubrp
sub
jnp
cli
movsl
mov
lret
test
pop
jne
dec
jmp
dec
lret
mov
xor
or
pop
inc
addl
sub
sbb
add
or
cmp
xchg
dec
mov
fstpl
sbb
sbb
xchg
cld
rcrl
push
dec
push
movsl
nop
push
mov
push
inc
insl
or
xorl
movsb
xchg
popa
sbb
jbe
inc
xchg
mov
push
imul
push
sbb
sbbl
lds
mov
mov
jb
sarb
into
xchg
inc
inc
popf
push
loope
fimuls
add
cwtl
xor
push
outsl
adc
lahf
ss
popf
cmp
xchg
aaa
jmp
push
jmp
pop
into
push
shl
jnp
repnz
mov
sbb
in
outsb
dec
mov
sub
int
int
push
or
pop
inc
mov
loop
jae
enter
cmp
or
jb
test
xchg
sub
enter
or
mov
sbbl
scas
fcmovbe
call
pop
sbb
push
lcall
and
popa
adc
lods
jne
push
mov
adc
les
fs
add
xchg
sub
xor
movsb
repnz
mov
loop
mov
ds
popf
in
cli
xchg
mov
push
sbb
jg
les
in
mov
mov
fstpl
push
gs
inc
fs
out
jmp
jo
test
xor
xor
pop
add
mov
jne
leave
fnstenv
mov
pusha
push
hlt
popf
cmp
int
aaa
repnz
idivl
les
cmpsb
mov
jl
add
int
cwtl
jae
out
cli
sbb
fbstp
cmp
ds
inc
dec
popa
and
call
dec
fucomp
cmp
ret
pop
scas
fisttpl
mov
mov
adc
test
cmp
std
pop
add
jno
adc
inc
mov
outsl
es
pop
gs
add
scas
and
cs
sub
outsl
and
repz
fsts
fincstp
lret
add
js
inc
stos
jmp
dec
push
loop
dec
fldt
or
xchg
xchg
xor
jo
stc
nop
lcall
mov
rolb
lcall
in
jbe
in
push
insb
mov
pop
stos
aaa
sahf
in
jp
sub
subb
cld
imul
mov
out
sub
sbb
lahf
stos
hlt
iret
dec
mov
xlat
imul
mov
movsl
mov
mov
ljmp
mov
adc
ds
call
fdivrl
cltd
push
aam
sub
dec
hlt
mov
jne
rolb
pop
call
mov
sbb
sub
mov
ret
push
inc
or
lock
fildl
mov
out
aas
aas
or
or
pusha
add
bnd
aam
loopne
mov
pop
and
or
popa
out
xchg
ja
or
xor
add
pop
dec
or
inc
sub
aad
mov
out
fwait
push
inc
rclb
aam
jb
call
adc
out
sub
push
insl
xor
push
sub
xor
inc
flds
stos
pusha
sbb
ret
sbb
outsb
mov
jne
into
push
call
adc
mov
mov
cmp
push
les
add
and
pop
icebp
cmpsl
dec
hlt
xchg
out
cmp
pop
push
xchg
fildll
pop
pop
jnp
sti
and
in
outsl
push
data16
jae
xor
cs
inc
add
mov
jl
inc
cvtdq2ps
xlat
mov
orb
xchg
xchg
push
jge
nop
cmp
cmp
jecxz
les
aas
and
lods
sbb
or
repz
sub
pop
fidivl
and
mov
mov
inc
sahf
sub
pop
lret
fists
es
xor
inc
lods
inc
push
pop
xorb
and
xchg
lods
add
add
mov
lret
dec
out
xchg
sbbl
shrl
xor
jno
cwtl
xor
jecxz
jns
jo
mov
mov
push
fidivs
inc
mov
jo
mov
fld
cmpb
test
mov
or
pop
push
mov
mov
cmp
sub
dec
push
std
cmp
inc
pop
or
ds
nop
dec
mov
add
push
rclb
adc
loopne
testb
push
jg
cmp
pusha
xchg
xchg
int3
and
fucomi
cmpsb
lock
cwtl
sbbl
adcb
lods
add
mov
and
inc
mov
sti
clc
xor
adc
scas
mov
popa
mov
movsb
rolb
xor
cs
dec
mov
je
push
hlt
fdivrp
adc
outsb
pop
hlt
lahf
xor
mov
jmp
repz
int3
fcom
daa
subl
insb
mov
aaa
xor
or
daa
xor
ficomps
push
jmp
push
fdivs
xorb
leave
cmp
aas
dec
jbe
jbe
stos
jae
inc
clc
mov
cmp
push
inc
pusha
lea
push
xor
dec
icebp
pushf
loope
mov
lahf
cmp
sub
outsl
movl
js
mov
in
jmp
sub
sarl
adc
push
push
pop
jb
in
push
lahf
lahf
cmp
lods
std
inc
pop
fidivrs
adc
and
in
dec
fstpl
testl
cli
mov
ljmp
outsb
pusha
jl
xor
pop
xor
inc
aas
stc
aaa
ficompl
repz
mov
in
inc
loopne
arpl
divl
scas
mov
push
push
sbbb
mov
push
in
dec
xchg
mov
mov
and
inc
push
mov
dec
cwtl
loopne
mov
or
inc
ret
rorb
stc
outsb
loope
nop
pop
insb
inc
testl
sub
sbb
repz
or
mov
out
xor
pop
pop
lods
std
clc
and
ds
cmpsl
das
faddp
pop
or
test
jns
adc
outsl
push
push
out
xchg
adc
pinsrw
loopne
mov
test
adc
hlt
adc
mov
mov
mov
jno
jo,pt
mov
imull
sarl
stc
andl
mov
arpl
mov
jmp
in
push
jnp
jb
nop
mov
into
insb
xchg
lock
inc
sub
adc
ljmp
out
xchg
pop
cmp
lods
repnz
xchg
dec
dec
mov
lock
and
lock
inc
enter
loopne
lock
add
dec
dec
repz
xchg
ret
sbb
and
rorl
mov
pop
xor
aaa
pop
ret
cli
loopne
sub
add
pop
sub
fidivs
adc
aam
push
js
cmp
jle
neg
sub
sub
add
adc
jo
test
je
ljmp
jecxz
cltd
shlb
sarl
lds
aad
push
inc
pop
dec
mov
in
notb
and
push
adc
scas
pop
enter
rcrl
mov
jae
ds
cmpsl
lock
sbb
imul
mov
pop
decb
add
mov
mov
sbb
mov
pushf
stos
popa
test
hlt
mov
cmp
mov
inc
push
ss
insb
ljmp
push
jecxz
add
sub
repz
mov
cmpsb
repnz
inc
pushf
movsb
cld
xchg
dec
or
das
bound
repz
js
int3
mov
xor
idivl
shr
addr16
sub
xor
sub
mov
jno
sub
add
lds
mov
pusha
mov
pop
testb
test
mov
popf
ljmp
sbb
cld
aam
pop
repnz
inc
test
lods
fisubrs
iret
popf
pop
ds
xlat
adc
imul
sbb
rorl
mov
je
cli
lods
and
or
xor
icebp
out
inc
or
stos
dec
mov
ja
jne
cli
fs
xor
orb
sub
fstpt
nop
jecxz
sbbb
push
sahf
clc
jne
add
sbb
rclb
test
mov
adc
aaa
aam
in
lret
lds
sahf
imul
and
mov
std
mov
fucomp
add
jne
fisubrs
cmp
inc
sti
xchg
dec
push
adc
in
jo
or
sbb
adcb
add
jbe
or
data16
cli
adc
jae
push
push
aad
xor
nop
cmovne
sub
mov
jb
mov
addl
or
addr16
xchg
cwtl
mov
shlb
out
jno
or
test
sub
gs
adc
inc
scas
inc
js
mov
je
int
lods
test
test
xor
push
jg
cmp
ret
xor
jnp
lds
pop
jle
dec
mov
inc
xchg
mov
mov
and
insl
jp
dec
in
inc
rcrb
jae
insb
cli
sahf
pop
xchg
in
mov
shll
mov
loopne
ss
insb
mov
data16
mov
sti
pop
cmp
sbb
ds
je
jns
test
xchg
sti
xchg
lds
jl
test
scas
xor
add
add
movsb
xor
xor
sub
lea
mov
inc
mov
push
add
cmp
jno
pop
xchg
sub
insl
mov
lahf
mov
addr16
aas
mov
mov
inc
ja
xchg
js
mov
push
xor
pop
jmp
xchg
sti
mov
jmp
sbb
fistps
sbb
sub
push
pop
pop
or
out
sbb
adc
addr16
jo
lods
lea
fsts
pop
into
pop
scas
jle
adc
jne
popa
aaa
shrl
pop
add
mov
shld
pop
jecxz
or
pop
cltd
ffree
iret
push
mov
add
cmp
test
lret
push
rolb
jo
popa
jnp
push
jae
xor
push
bound
jl
ja
fdivp
mov
fcmovne
sbb
mov
mov
test
rclb
rclb
data16
popf
push
fcomip
xchg
repz
cltd
sbb
mov
cmp
insb
sub
testb
scas
loop
cmp
cmp
ret
jecxz
in
sbb
addr16
insb
out
das
adc
lods
mov
mov
stos
adc
test
gs
mov
push
add
fidivl
or
xchg
sbb
repz
push
icebp
xor
ds
rep
jg
xor
scas
mov
fnstsw
mov
sbb
and
mov
jns
jl
sub
jle
push
mov
mov
gs
mov
in
pop
mov
aam
dec
fisttps
and
cmp
mov
ss
mov
mov
and
xor
and
imul
inc
pop
jo
negl
shld
lret
data16
arpl
and
dec
ret
xor
mov
mov
cmp
or
scas
cli
jnp
iret
inc
sbb
test
jnp
or
sub
or
jle
pop
jmp
pop
pop
cmp
adc
dec
shlb
push
call
pop
fisubrl
pop
pushf
imull
add
lahf
xor
mov
pushf
xor
or
repz
add
loopne
and
and
or
sahf
testl
bound
xlat
int
or
imul
fdivl
mov
addb
add
fidivrl
aad
or
xchg
leave
pop
test
lret
and
aas
mov
ds
pop
mov
xchg
mov
fwait
repnz
ja
xchg
dec
in
loope
adcl
mov
pop
jle
icebp
cmpsl
or
rorb
jg
aam
clc
pop
ja
cmp
mov
jle
call
or
mov
push
pop
lock
outsb
or
or
ja
or
adc
loopne
daa
adc
aam
jmp
nop
cli
cmpsb
cmpb
xchg
mulb
cmp
dec
or
mov
mov
cmp
sub
ljmp
cmpsl
add
fs
test
sti
cmpsl
addb
adc
dec
loop
insb
adc
ja
lods
or
mov
stc
jge
and
jmp
add
xchg
sub
and
movsl
test
out
test
scas
cwtl
in
cmp
dec
add
jo
test
xchg
mov
fistl
lcall
aad
lret
sub
data16
adc
push
inc
or
fld
lds
rolb
in
pop
fdivl
mov
push
jecxz
stc
xchg
test
sbb
and
lds
inc
fidivl
gs
mov
mov
sbb
lret
or
insl
dec
scas
clc
sub
cwtl
hlt
mov
fxam
insb
rclb
mov
jbe
pop
iret
cmp
pop
dec
in
adc
ret
jge
sub
sbb
mov
cmp
jnp
cmp
or
popa
clc
out
fcoml
mov
or
mov
mov
jle
mov
stc
jge
add
ret
sbb
push
dec
in
mov
fldcw
or
pop
sahf
sbb
sti
mov
mov
sbb
frstor
jbe
and
and
stos
dec
roll
sbb
jbe
and
mov
addr16
mov
dec
jge
hlt
aas
jl
cmp
sahf
lds
pop
jno
jecxz
jecxz
sbb
loopne
nop
shlb
inc
loopne
ja
or
outsl
arpl
test
jno
lock
cmc
jb
xorb
or
push
int
outsb
icebp
mov
dec
fs
imul
cli
in
and
lret
pushf
mov
add
mov
push
mov
xlat
insl
in
jmp
xor
cmc
mov
popf
loope
lret
cmpl
inc
fprem1
dec
mov
mov
fists
mov
jp
sub
in
pop
shl
insb
sub
and
into
ljmp
dec
test
negl
lret
or
pop
out
nop
out
test
adc
sub
popf
jl
xchg
mov
pop
push
rolb
ret
outsb
ja
mov
divb
pop
daa
sub
hlt
fucomp
pop
push
sub
je
fisubrs
cmp
test
inc
dec
xor
push
lea
mov
sbb
stos
js
sub
xchg
mov
scas
cmp
inc
daa
popf
mov
adc
xchg
mov
or
add
cmp
mov
sbb
jno
sarl
das
clc
and
ret
jb
cltd
mov
push
sub
popa
cmpb
dec
push
mov
cs
lods
xchg
xor
sub
loopne
or
jne
or
mov
cwtl
pushf
test
dec
mov
ja
mov
inc
xchg
add
cmp
stc
push
scas
xchg
sub
clc
xchg
scas
adc
adc
jbe
fbstp
out
or
jge
xchg
or
sbb
push
lret
pop
xchg
fnstenv
jge,pt
stc
fdiv
mov
sahf
mov
dec
pop
adc
bound
xchg
shlb
push
or
mov
dec
sti
jle
icebp
scas
sbb
jno
dec
aad
sahf
mov
push
fwait
loop
and
xchg
dec
data16
arpl
cmp
outsl
mov
in
sbb
leave
addb
jo
imul
std
pusha
rorb
loop
cmc
sbb
sub
bound
aam
cmovb
push
pop
lock
mov
jns
mov
cmp
pop
fstpl
mov
mov
inc
sub
mov
testl
scas
mov
aad
push
rsqrtps
pop
jno
lret
cld
std
mov
or
jnp
sub
xchg
add
out
sti
dec
mov
sub
push
jp
cmpsb
nop
cs
lret
in
sti
add
decl
push
inc
xchg
cld
xchg
mov
bound
adc
sbbb
ds
mov
or
pushf
loop
pushf
add
cmpsb
jns
mov
cwtl
insb
movsb
inc
movsl
pop
cltd
inc
stos
stc
xchg
or
call
or
cmp
fs
mov
cmp
fisubrl
xor
loope
sub
stc
sub
add
aad
pop
adc
mov
arpl
mov
ds
inc
push
rclb
fstp
dec
sub
adc
dec
lret
sub
in
push
out
lret
roll
pop
fcmovu
mov
fs
pop
jno
fwait
notl
inc
into
in
icebp
rcrb
mov
rorl
push
dec
cmp
imul
adc
xchg
popa
fimull
mov
pushl
ljmp
and
jae
loopne
mov
mov
out
outsb
ss
fmull
out
lds
call
js
out
xchg
fwait
stc
push
icebp
fcoms
xlat
es
cmpsl
mov
fdivrs
mov
clc
aam
ljmp
scas
mov
addr16
or
cltd
cmp
and
sub
cltd
std
out
cmc
pop
jge
call
push
mov
test
pop
lods
xor
push
xor
movsb
lret
fisubrs
lds
sti
mov
sub
sub
cmp
arpl
jbe
add
je
xlat
into
fimuls
sar
inc
cs
adc
sbb
inc
push
jg
lret
xor
out
pop
adcl
jge
xor
les
lret
or
mov
fucomip
outsb
push
inc
inc
push
sub
sub
jnp
cwtl
mov
pushf
dec
dec
xchg
cmp
dec
inc
in
jmp
rcll
mov
popf
aas
fwait
sub
and
push
and
cmp
popl
mov
push
inc
fiaddl
push
dec
sub
xchg
hlt
dec
out
pop
data16
lds
add
es
insb
daa
xor
pusha
data16
pop
imul
out
xchg
jbe
dec
dec
or
pop
dec
mov
jno
test
sbb
lret
loope
pop
adc
inc
in
xorl
ret
mov
movsl
loope
out
mov
movsb
push
push
ljmp
fs
or
and
loopne
pop
and
add
das
jb
mov
and
or
xor
xor
outsl
in
sub
insl
scas
inc
lahf
sbb
int3
fs
jns
inc
lods
jp
dec
nop
cmp
push
lret
mov
cmpsl
mov
inc
addb
mov
repz
js
scas
xchg
jle
hlt
scas
jg
out
imul
jne
add
xor
outsb
pushf
cld
xchg
iret
push
in
push
mov
sub
fs
js
pop
outsb
lcall
sub
out
in
ljmp
xchg
lcall
xchg
mov
mov
icebp
cmp
pusha
dec
fcoms
cmc
cmc
mov
mov
push
icebp
cld
adc
lret
push
nop
push
jo
mov
mov
gs
clc
mov
aam
sub
dec
fs
dec
mov
xchg
dec
jo
sub
sbbb
mov
aam
jo
sbb
lret
iret
push
std
and
push
clc
int
xchg
push
lock
in
arpl
mov
sahf
mov
fisubs
dec
push
arpl
in
daa
mov
cmpsl
aam
aam
cmp
jecxz,pt
mov
push
enter
add
icebp
xor
mov
xlat
scas
and
mov
inc
inc
bound
pop
add
lahf
cmpsl
and
imul
pop
test
sbb
insl
sbb
js
pusha
sbb
fs
sbb
shlb
lods
mov
daa
jb
les
pop
cmp
add
out
sub
scas
mov
lahf
shll
xchg
and
jne
and
ja
aad
daa
and
mov
pop
dec
in
jle
fwait
cmpsb
cwtl
mov
or
xor
mov
test
aas
inc
outsl
xchg
mov
daa
loop
mov
ror
int
cmc
jle
sub
pop
repnz
lea
xor
or
add
in
cmc
and
add
sbb
outsl
mov
xchg
xor
in
pop
dec
sbb
fsubrl
pop
mov
orl
mov
push
call
imul
xchg
or
fisttpl
sub
cwtl
das
or
std
push
ds
jb
push
ds
shlb
in
sub
xor
mov
je
sti
jl
fisubrs
ss
inc
fcomps
xchg
push
or
sbb
call
iret
outsb
mov
sub
mov
xchg
cs
add
loop
add
mov
ucomiss
xchg
add
imul
dec
mov
and
push
jmp
adc
pop
out
mov
cli
popf
sub
popa
cmp
mov
and
jge
add
add
jle
push
push
xchg
cltd
mov
xchg
jbe
sbb
push
into
nop
js
inc
loop
jne
fisubl
cli
cmp
pop
scas
xchg
inc
dec
jp
std
push
adc
jbe
adc
xor
dec
push
push
gs
dec
or
leave
in
into
jle
dec
dec
mov
in
mov
sbb
shll
xor
sbbb
fistl
adc
sbb
cmp
jp
test
pop
mov
push
xchg
loope
sub
mov
mov
jecxz
fildll
insb
outsl
xor
dec
clc
test
lock
int3
mov
ss
test
jle
fcompl
inc
arpl
pop
loope
adc
into
out
or
test
dec
shrl
shrl
push
jge
push
test
mov
sub
pop
or
jno
mov
fdivl
addr16
xchg
rolb
cli
inc
imul
sbbl
lret
jle
pushf
cwtl
dec
jnp
adcl
sbbb
xor
lds
loope
inc
in
and
jmp
imul
ja
pop
sbb
int3
push
add
xor
das
inc
push
call
mov
fdivl
adc
dec
sub
std
push
adc
mov
leave
dec
jno
cld
stos
or
aaa
adc
fildll
in
cmp
lds
ss
dec
mov
adc
ficoms
call
adc
shrb
sub
stos
enter
jle
xor
sub
dec
xchg
sub
add
jp
mov
leave
xchg
xor
sub
dec
cmc
sbb
sbb
imul
xchg
cltd
push
sarb
jno
or
pusha
cwtl
flds
jno
xor
cltd
test
and
add
push
sarl
mov
sarb
lods
cwtl
cmp
xor
mov
sub
mov
movsb
jge
and
adc
mov
fisubrl
leave
mov
cmpxchg8b
mov
adc
call
push
lock
add
dec
mov
inc
stos
daa
cld
mov
adc
add
mov
int
jl
xor
add
push
sbb
xchg
insb
add
or
sbb
cs
addr16
jl
cmp
inc
test
mov
ds
sarl
out
pushf
jne
xchg
add
call
push
mov
jge
xor
mov
xchg
xchg
imul
sbb
inc
inc
lds
sbb
into
and
es
jg
dec
cmp
fistl
sub
cmp
adc
fnsave
test
lcall
mov
adc
add
sbb
repz
imul
sbb
add
add
xchg
inc
loop
inc
call
cmp
clts
and
aaa
sti
fwait
stos
sub
xchg
bound
sbb
mov
int
inc
or
mov
xchg
xchg
cmp
inc
cmp
in
popf
divl
cmp
inc
cmc
arpl
fucompp
cmp
pusha
arpl
jg
insb
ret
cmp
int
cli
fwait
ret
mov
jb
pop
sub
ret
lret
mov
cltd
bound
push
popf
push
int
or
mov
scas
cmp
call
or
ret
call
rolb
jne
dec
mov
inc
scas
mov
sbb
inc
fbstp
xor
test
jg
iret
pusha
call
push
out
aas
into
rcll
adc
std
inc
jns
loope
in
pushf
xorb
addb
jp
movsl
stos
arpl
aad
lcall
lods
mov
adc
inc
dec
ds
or
cmp
sarb
pop
loop
and
out
push
lret
and
sub
mov
cltd
in
into
rol
fisttpll
inc
cmpb
or
arpl
daa
inc
add
dec
arpl
test
fcmovnb
into
fidivs
push
lods
jle
loope
ljmp
aaa
dec
sbb
xchg
mov
mov
mov
andb
jns
out
negl
xchg
sub
ss
adc
jp
add
adc
adc
sub
mov
adc
inc
lds
mov
cwtl
sbb
dec
aas
sub
out
shrb
pop
jmp
imul
shlb
push
dec
loop
ficoms
in
inc
xchg
loope
dec
add
ja
testl
inc
lret
cld
test
js
push
xchg
cmc
test
les
popf
dec
in
or
arpl
adc
pop
in
sti
push
rcl
outsb
test
into
or
cmc
mov
aad
daa
fwait
xchg
adc
lret
inc
xor
mov
mov
pop
testb
adc
arpl
xor
sub
pop
pop
jno
andl
xor
sbb
sbb
cmp
je
and
mov
xlat
mov
fcompl
shrl
repz
aam
sub
mov
mov
xchg
sbbl
push
xchg
sbb
enter
sbb
mull
cmp
fistpll
cmp
lods
lock
clc
iret
push
fdivr
mov
sub
ret
fsubrl
leave
cmp
shrl
cli
push
call
popf
daa
outsl
sbb
hlt
mov
push
mov
push
mov
clc
pop
inc
xchg
in
imul
jne
lods
mov
adc
xchg
push
sbb
inc
lret
sti
push
pop
push
fbld
mov
mov
fwait
lods
cmp
xor
and
push
in
push
out
sbb
cmpl
dec
imull
ljmp
out
mov
in
cltd
jl
add
out
jmp
dec
cmpsl
dec
inc
std
inc
inc
test
xchg
pop
jle
push
ljmp
pop
and
int3
push
sahf
adc
ss
sbb
add
sbb
cli
jne
dec
enter
jl
push
out
push
mov
les
and
sbb
mov
pusha
mov
pop
out
adc
xlat
test
arpl
xchg
mov
les
divl
dec
dec
dec
rcl
and
ds
sub
push
push
mov
jmp
add
mov
mov
inc
mov
pop
daa
mov
mov
push
dec
jne
cmp
push
movsb
dec
xor
sbb
jne
test
andb
test
rcrb
aas
popf
and
push
ljmp
and
out
imull
sub
incb
inc
in
imul
mov
xor
icebp
jecxz
pop
lcall
mov
lret
repnz
mov
rorl
dec
xor
pop
lock
dec
shll
mov
push
jae
jns
pusha
mov
lret
xlat
inc
mov
adc
add
sub
dec
sub
hlt
push
mov
add
push
mov
aad
imul
loop
push
push
push
push
inc
pusha
pop
add
sbb
add
or
sarb
jnp,pn
ds
repz
cmp
sub
mov
repnz
or
mov
pop
imul
out
jmp
inc
push
outsl
mov
out
movsb
lret
cmp
cmpsl
jle
daa
jmp
icebp
in
outsb
hlt
pop
popf
adc
sbb
lcall
sbb
js
and
out
call
and
pop
sbb
mov
mov
stos
repz
adc
sub
cmp
dec
sarl
and
jo
shrb
adc
add
jmp
or
and
push
fdivr
mov
cmpsl
ret
loopne
xlat
add
sahf
mov
pop
int
stos
cwtl
push
push
shlb
jb
push
sub
pop
inc
je
cmpsb
push
adc
inc
imul
sub
std
sarl
outsl
push
js
lods
jg
fwait
lcallw
jmp
add
jnp
stos
jbe
pusha
sub
cltd
je
loope
dec
jno
sub
pop
and
outsl
mov
cld
lds
sbb
mov
push
xorb
loop
inc
fcmovnbe
mov
jno
xchg
dec
jb
int3
in
rclb
dec
out
mov
mov
xor
scas
das
pop
dec
rcrl
and
mov
jne
add
adcl
push
out
add
pop
cmpsl
xor
sub
pop
and
ja
ret
sar
jns
shll
pop
sub
xchg
cs
lods
or
push
lods
out
mov
mov
push
xchg
sub
mov
sub
mov
fcmovne
sub
dec
stos
lret
mov
sbb
call
ja
xchg
push
pop
out
dec
cmpsb
cmc
cmc
xor
inc
jp
mov
pop
inc
xor
mov
rclb
sub
ss
icebp
movsl
fs
push
inc
cmc
mov
idivl
enter
xchg
mov
fldcw
inc
pop
cmp
mov
sub
popl
mov
pop
test
int3
fmuls
adc
std
lret
inc
fxch
pusha
idiv
mov
imul
popf
orb
jg
fsubrl
dec
cmc
pop
cmp
lahf
and
arpl
sahf
je
adc
sbb
sub
aad
mov
stc
jg
jnp
xchg
lret
cmc
inc
adc
and
jae
push
mov
or
rorl
aas
mov
mov
dec
std
fsubrl
xchg
lret
or
test
ljmp
push
add
add
lods
cmc
cmpsl
ret
sbb
jns
adc
push
adc
lea
dec
xchg
xchg
sub
lea
xor
and
and
cwtl
xor
mov
inc
popf
dec
dec
fsubs
dec
dec
aam
rcl
dec
fcomp
repz
mov
push
rolb
xchg
cwtl
push
and
sub
int3
ljmp
xor
in
sahf
inc
pop
rorb
and
sbb
mov
or
jl
and
and
or
inc
push
in
jb
push
xlat
popa
mov
mov
xorl
jmp
fucomip
cmp
cmp
movsl
inc
and
pop
loop
push
push
ds
xchg
xor
mov
sub
dec
in
iret
stos
popf
push
dec
insl
xchg
sub
push
daa
cmp
mov
test
dec
std
movsl
shrb
mov
icebp
mov
ret
arpl
xchg
inc
lret
icebp
shlb
call
push
inc
xchg
xor
xlat
fcompl
xor
inc
mov
adc
jb
insl
sub
ret
repz
fdivr
clc
fsubrs
mov
imul
test
or
sub
push
movsl
cmp
and
rcl
lods
pop
mov
cmp
das
outsb
mov
jge
mov
lods
xor
nop
mov
stos
adc
cmc
ss
scas
xchg
into
push
inc
push
mov
push
fists
push
insb
leave
pop
es
fwait
inc
shll
repz
mov
mov
sub
ret
repnz
push
or
mov
mov
insb
sahf
cmc
mov
xor
inc
push
gs
pop
mov
dec
sbb
arpl
mov
lds
les
xchg
jg
mov
inc
adc
sti
pop
add
mov
xchg
in
dec
push
clc
or
cwtl
xchg
lea
ja
lods
ret
data16
test
mov
inc
and
ss
cmc
movsl
cmc
lret
mov
incb
les
mov
mov
sbb
mov
nop
shll
dec
insb
in
xchg
test
cmp
leave
pop
in
inc
mov
imul
and
mov
icebp
cmpsl
out
jge
jno
stc
push
jns
push
cmpsb
xor
pusha
jno
roll
mov
push
rdpmc
push
mov
mov
stos
sbbl
mov
ret
daa
cwtl
mov
out
in
push
cltd
xchg
or
mov
and
in
add
push
pop
mov
std
inc
push
push
fsubrs
sti
pushf
mov
mov
lock
jmp
inc
fldt
push
mov
shll
mov
arpl
inc
mov
cmp
aas
jmp
adc
mov
cmpsb
push
xor
es
adc
pop
mov
leave
aaa
clc
int
mov
inc
int3
vcmpss
lock
mov
stc
add
out
test
mov
ret
nop
xchg
jns
stos
xchg
ret
insb
mov
jp
xor
push
jmp
rcr
cltd
or
ret
lret
mov
jno
xchg
and
movsb
push
inc
cltd
out
mov
hlt
rcll
and
icebp
mov
jl
sub
outsb
jns
adc
push
imul
inc
scas
hlt
dec
pop
dec
jbe
jnp
mov
testb
mov
add
mov
xor
clc
sbb
roll
push
dec
lcallw
movlps
jae
scas
push
flds
cmpsb
aaa
in
stc
or
adc
dec
mov
and
lods
push
dec
aas
stos
push
stc
enter
scas
dec
push
jmp
notl
pop
dec
test
mov
les
imulb
int3
jge
push
lds
pop
lds
in
sub
imul
adc
pushf
mov
push
stos
pusha
adc
lret
lret
std
es
push
mov
add
mov
pop
fidivs
mov
mov
xor
popf
imul
loope
aaa
cmpsl
out
cwtl
or
cmpl
xor
inc
testl
call
mov
test
lret
sub
cmp
inc
push
pop
ffree
bound
mov
lds
jns
fsub
les
stos
xor
xchg
ja
sbb
hlt
sub
xchg
push
imul
loope
dec
loop
inc
ret
dec
ds
inc
ret
sar
cmp
inc
jmp
test
ret
dec
or
add
sbb
shlb
insl
insb
repnz
stos
jne
notb
xchg
sub
stc
or
cmp
jo
adc
outsb
insl
mov
shll
mov
xchg
vxorps
inc
in
mov
xchg
mov
jns
inc
fdiv
fcompl
or
fnstcw
insb
inc
mov
adc
add
in
das
cs
pusha
inc
mov
jno
xchg
sub
mov
insl
add
fidivrs
sub
lret
sbb
sub
leave
out
push
sarb
leave
loope
jge
sti
sub
dec
es
vpaddd
scas
nop
dec
iret
or
fstps
std
test
insl
sbb
scas
dec
mov
mov
enter
jl
fsubrs
pop
push
in
jns
mov
movl
aas
pusha
cmpsl
ljmp
outsl
mov
mov
bndldx
testl
shr
sub
sbb
xor
push
or
push
mov
pop
lahf
mov
mov
or
sbb
movsl
rorl
mov
in
cwtl
mov
push
xchg
insb
ss
pushf
repz
stos
rolb
push
add
fimuls
lock
lcall
sbb
adc
call
jge
pop
mov
aad
and
jg
inc
mov
and
mov
loopne
das
loop
ss
add
imul
in
cld
decb
das
and
ficoml
fwait
push
outsl
imull
mov
inc
mov
mov
and
mov
sub
push
in
sub
aad
and
jae
lret
rcrl
imul
inc
mov
dec
push
shlb
dec
outsb
xlat
movsb
sub
nop
daa
cmc
push
xor
mov
mov
cli
pop
test
dec
pop
xchg
imul
dec
cmpsb
jnp
and
notb
cmpsb
stos
ds
ljmp
jb
rcrl
addr16
push
inc
xchg
test
sub
add
bound
call
idivb
scas
out
cmp
mov
fucom
jecxz
mov
adc
and
push
loope
adc
mov
outsl
insl
add
in
fucomi
mov
xchg
cmp
and
ja
cmp
adc
sub
insb
sub
pop
add
xor
jmp
add
pop
in
sub
pop
cmp
pop
nop
adc
mov
jno
daa
pop
mov
xchg
dec
add
cltd
je
in
add
inc
xlat
test
or
xor
cmp
call
cmp
pop
test
xchg
cmpsl
mov
iret
xor
and
xchg
scas
adc
je
test
jae
cmp
inc
out
daa
test
xor
mov
movb
cmpsb
xor
fldcw
mov
insb
scas
mov
pop
xchg
andb
outsl
fld
xor
push
push
lods
or
xor
mov
push
lea
lcall
mov
mov
rcll
roll
sti
push
popf
jo
inc
lods
cmp
out
inc
mov
jecxz
lods
xchg
inc
mov
movsl
pop
mov
sub
mov
fistps
shrb
test
cltd
xchg
mov
pop
scas
push
int3
mov
stc
pop
adc
in
push
subb
xor
shlb
loope
push
dec
cmp
inc
mov
out
leave
cld
shll
daa
arpl
loopne
mov
or
xlat
sub
mov
xchg
sbb
fnstenv
out
ret
adc
cmp
shlb
pop
mov
ret
jnp
test
rcrb
inc
outsb
push
clc
dec
jg
adc
in
test
adc
xor
mov
lcall
push
jbe
push
xchg
iret
das
inc
add
lret
and
cs
cmpsb
xchg
inc
mov
jle
mov
xor
xchg
mov
das
ds
inc
cmp
int
pop
cvtdq2ps
cmc
xchg
sub
lea
movsl
mov
xchg
and
push
mov
scas
clc
xchg
loopne
mov
pushf
sub
adc
mov
mov
sub
inc
or
int3
hlt
aad
and
out
jecxz
rcll
scas
das
jnp
scas
hlt
mov
in
sub
jb
cmpsl
call
mov
test
cmp
das
loop
fidivrs
inc
dec
xor
hlt
sbb
sarb
cltd
cmp
xor
sub
mov
test
push
sbb
popa
sbb
pop
icebp
shrb
sbb
lea
push
ss
push
out
adc
shr
inc
jne
jne
cwtl
das
cmp
mov
movsl
ficomps
mov
push
idivb
rolb
mov
add
or
mov
push
bound
mov
test
xchg
cmp
in
cwtl
push
pop
call
xor
jle
mov
add
xor
mov
xchg
jmp
cltd
mov
push
and
stc
inc
or
ja
add
pop
scas
sahf
jns
repz
dec
add
adc
int3
sub
subl
psrad
push
or
add
xor
iret
jo
inc
test
pop
pop
mov
stc
je
insb
mov
jbe
and
dec
popw
in
push
jbe
out
iret
pop
mov
repnz
idivb
jno
aam
dec
adc
arpl
add
and
leave
and
sarl
bound
jge
popf
out
push
rcrb
mov
lret
icebp
ljmp
xchg
or
sub
lahf
inc
fst
and
cmpsb
psadbw
stos
mov
fisttpll
cmp
icebp
scas
mov
in
out
adc
ss
sti
outsl
cmp
movsb
into
fcomps
cmpsl
in
les
cmp
sbb
aas
shrl
sub
push
push
dec
jecxz
nop
adc
and
pop
sub
in
pop
sub
push
mov
ffree
dec
out
into
pop
fs
mov
negl
cmpsb
gs
fwait
outsl
iret
cmpsb
lea
push
and
imul
mov
fdivs
dec
andl
lods
sub
and
mov
xchg
fidivl
push
push
mov
sub
test
movsb
push
dec
add
cmpb
outsl
out
rcrl
xor
test
xor
lret
and
dec
adc
jo
stc
clc
sahf
jmp
lret
data16
lret
adc
mov
mov
sbb
lret
adc
in
cltd
adc
push
and
and
lret
jmp
inc
push
fistpl
mov
hlt
outsb
mov
ror
mov
in
dec
dec
cmp
cmp
shr
rcl
jnp
stc
popf
mov
adc
push
jbe
ja
lea
pop
pop
xchg
hlt
ds
fs
fnstcw
cs
push
shl
shrb
lcall
test
pop
stos
jmp
dec
mov
aad
shr
imul
test
adc
jnp
xchg
sub
repnz
lods
xchg
pop
popa
adc
aaa
pop
stos
icebp
adc
cmpb
lods
into
mov
pop
pop
bound
rolb
pusha
into
jnp
add
jmp
push
sbb
inc
lcall
inc
arpl
sub
sub
lds
fnsave
bound
stos
ja
inc
xchg
mov
mov
cwtl
sbbb
into
ret
add
popa
cmp
faddl
loopne
or
add
imul
ja
mov
xchg
rcrb
inc
mov
outsb
jl
adc
jne
push
sub
fnstsw
jmp
shll
pop
mov
data16
sub
add
ja
sbbl
cwtl
and
in
mov
jge
jno
xchg
sub
arpl
add
mov
inc
cltd
sbbb
push
sbb
xor
or
pop
sahf
stos
jae
fdivrl
jg
sbb
mov
xor
popa
ljmp
mov
into
addr16
nop
and
in
mov
mov
pop
test
mov
add
jp
and
cmpsb
cmc
fstpt
dec
push
xchg
add
mov
push
mov
xchg
test
scas
sbb
and
mov
fdivrs
push
clc
add
sti
div
enter
orl
sub
sbb
shll
push
sbb
adc
dec
pop
test
mov
mulb
testl
icebp
xchg
lret
insb
int
mov
mov
and
jo
test
leave
out
cmpsl
cld
negb
iret
xchg
dec
fdivr
lret
xchg
fcmove
xchg
mov
loope
dec
out
and
mov
into
rorb
and
repz
mov
notl
or
dec
lods
out
fstl
and
movsb
fmul
jae
loop
adc
pusha
repz
sbb
and
add
mov
daa
mov
repnz
fisubl
sbb
pop
xor
inc
mov
popf
fidivl
sbb
js
inc
fiaddl
dec
or
sbb
shl
test
lahf
inc
das
mov
lea
pop
neg
pushf
das
icebp
lea
sub
fadds
adc
sbb
sbb
and
dec
inc
sbb
aam
movsb
cmp
sub
imul
jno
mov
xchg
push
cwtl
fists
out
test
sbb
mov
sti
ja
inc
pop
xor
ss
push
add
cmc
mov
jnp
pop
ljmp
stc
loope
sub
push
loop
fucom
pop
insb
jmp
out
add
dec
dec
or
jae
imul
push
xchg
inc
add
xlat
mov
mov
fsub
cs
outsb
xchg
inc
lcall
xchg
icebp
fildll
out
call
jae
adc
xchg
cmpsl
sbb
nop
inc
lret
sbb
mov
push
pcmpgtb
int
leave
popa
idivl
imul
mov
jb
jnp
inc
xchg
add
jno
and
push
push
movsb
fildl
jp
mov
or
pusha
std
xor
insb
jns
scas
call
mov
mov
jge
xchg
sahf
and
push
in
cmp
clc
in
sub
leave
or
push
jmp
sbb
inc
xchg
adc
add
push
mov
daa
mov
xor
daa
push
push
sbb
lcall
cwtl
xor
or
outsl
push
std
push
repnz
in
pop
sub
or
pop
jecxz
sbb
xchg
xor
mov
ds
test
sahf
mov
addr16
adc
add
cmp
ljmp
mov
stos
in
jns
nop
in
mov
mov
cmp
mov
stos
jns
mov
cmp
sub
je
cmc
add
add
testl
test
mov
loope
sbb
xor
jno
imul
xchg
sti
fwait
clc
jmp
mov
out
mov
int
mov
mov
sbb
sbb
ja
xor
icebp
ds
xchg
clc
arpl
push
dec
dec
cmp
test
test
sbb
cmpsl
pusha
in
mov
cmc
mov
adc
cmpsl
out
fdivs
or
inc
xchg
pop
inc
test
nop
daa
test
cmc
mov
sahf
pop
in
or
dec
gs
lret
cltd
and
in
pop
mov
bnd
dec
aaa
mov
mov
or
fstl
clc
outsl
repnz
stos
cmp
mov
or
ficoms
fdivl
xor
lcall
pop
pop
icebp
push
movsl
and
sub
in
jnp
insl
mov
idivb
lods
lret
mov
cmp
xchg
sub
inc
add
dec
lret
daa
cmpsl
decb
xchg
adcl
mov
lcall
dec
ret
loope
fcoms
fadds
popa
pusha
mov
fcompl
and
cmp
or
sahf
sti
sahf
xchg
pusha
nop
ljmp
and
test
add
dec
inc
shlb
cltd
in
out
mov
and
sbbl
mov
jmp
xor
sbb
test
icebp
or
jne
xchg
xchg
ret
test
push
jb
bound
lret
frstor
mov
xchg
push
outsb
mov
les
jne
ror
cli
loop
arpl
jmp
dec
xchg
outsl
lret
mov
daa
popa
into
insl
ja
jecxz
adc
dec
add
in
rcll
inc
mul
pop
mov
sbb
xchg
les
mov
and
mov
lea
lods
xor
and
sbb
std
pop
pop
push
dec
enter
and
pop
lret
push
or
xchg
sbb
scas
roll
clc
addb
sbb
mov
adc
push
fists
popf
add
sbb
push
clc
sbb
and
das
cmp
mov
testl
dec
cmc
jo
jae
cmc
out
pop
jg
notb
mov
pop
jl
inc
sbb
ret
adcl
xchg
pusha
mov
xor
sub
fwait
and
adc
push
push
push
xchg
das
rcrl
lods
test
lret
mov
mov
fstpt
mov
sub
scas
inc
stos
std
add
xor
mov
sbb
jne
inc
xor
xchg
cmp
out
aam
pop
mov
fwait
inc
lods
cmc
rcrl
xchg
pop
inc
fsubrl
add
cmpsb
push
lret
sahf
xor
pop
push
inc
test
cli
ds
cld
sub
imul
or
nop
add
sbb
inc
fisttpll
sbb
push
fsubrs
pushf
andl
sbb
adc
loop
icebp
getsec
mov
adc
out
js
leave
push
imul
test
mov
inc
sub
adcl
mov
aad
cmp
pop
push
jecxz
and
popl
repnz
mov
xchg
dec
inc
mov
daa
leave
mov
lret
push
jne
mov
add
fldenv
test
jmp
clc
sti
addb
jae
jo
out
mov
cmp
mov
fwait
push
mov
sub
es
pop
pop
das
mov
cmp
or
jle
mov
idivb
push
jne
inc
cli
jns
das
movsl
repnz
mov
or
push
mov
add
add
and
lea
jns
scas
cmp
adc
pop
jne
jbe
xchg
sub
xchg
out
fdivl
xchg
stc
mov
sub
sti
xor
push
sarl
cs
and
cmpsb
mov
xchg
mov
mov
rcrb
inc
mov
stos
mov
jae
jo
js
xchg
pop
xchg
jmp
xchg
sub
jnp
stos
adc
dec
or
ds
or
xchg
loope
cmpsb
inc
fstl
pop
testb
push
adc
mov
mov
mov
ret
leave
lret
jne
mov
pop
sub
pop
push
lahf
sbb
cmp
inc
or
mov
je
insb
mov
xchg
out
test
das
cmp
cmp
mov
movsl
mov
sarb
ret
cmpsl
mov
fisubrs
push
mov
mov
push
ret
mov
outsl
loope
nop
aaa
dec
ret
push
mov
xchg
adc
lds
out
pop
inc
in
inc
js
push
iret
jae
mov
icebp
movsl
je
xor
mov
aam
add
cmpsb
xchg
and
aas
test
lret
mov
out
fisubs
and
das
cmp
mov
push
xchg
inc
sti
sub
sub
mov
push
dec
out
fstps
and
incl
popa
mov
ds
and
jecxz
outsl
add
xchg
xor
lret
adc
test
loopne
lods
loope
sub
sub
rcr
sbb
mov
cmp
mov
dec
test
fnsave
mov
sbb
lea
aad
stos
ret
enter
and
fnstsw
or
pusha
jle
mov
jge
jo
sahf
xor
pop
fstpt
adc
fnstcw
fistpl
lods
jg
popa
xchg
imul
popa
jg
pop
fwait
dec
inc
lds
mov
inc
movsl
inc
loop
das
push
pop
orb
imul
jo
test
mov
shlb
sub
setno
sub
mov
sahf
push
leave
inc
add
jno
push
and
stos
mov
imul
popa
popf
sbb
dec
or
mov
sub
pop
or
jmp
mov
imul
dec
cmp
xor
iret
xchg
cli
mov
jb
fistpll
rolb
push
or
loope
test
std
fnsave
adc
ja
sti
pop
ljmp
in
lods
rcr
sub
xchg
jp,pt
mull
add
shlb
test
fwait
arpl
dec
mov
ficomps
mov
mov
imul
cltd
mov
mov
imul
xchg
cmp
das
mov
out
mov
movsl
jae
cmp
add
lds
imul
cltd
push
lods
inc
mov
mov
fbstp
jns
cmp
xchg
cs
insb
cltd
pop
mov
leave
nop
pop
jg
or
add
pop
push
mov
loopne
icebp
pushf
cmpsd
js
fbld
or
iret
out
mov
outsb
push
gs
fcomip
in
fsubr
xchg
mov
leave
sbb
sti
sbb
pop
xchg
test
sahf
jp
push
nop
sti
pop
sub
jb
out
mov
adc
stos
jle
fists
test
adc
das
scas
das
pop
xchg
lds
mov
andb
jg
aaa
jnp
in
inc
rorl
fbld
mov
sub
jb
shrb
fiaddl
and
dec
jnp
fsubrl
mov
dec
gs
aam
pop
notl
mov
mov
repnz
and
sub
and
rcr
mov
ret
outsl
mov
or
scas
pop
jg
mov
pop
inc
jl
push
outsl
lock
jge
insl
cmp
and
call
xchg
add
mov
dec
add
mov
xor
inc
or
mov
inc
call
jo
mov
loopne
jg
jp
xchg
sub
fstps
or
and
pop
ss
pop
add
dec
movb
loopne
out
pop
or
mov
aaa
push
inc
or
cmpb
xor
and
inc
aaa
jbe
or
sbb
lods
push
idivl
add
test
push
insl
cwtl
pop
in
cmp
nop
mov
mov
adcb
jge
mov
xor
mov
or
cwtl
ss
cmpsl
mov
mov
sbb
loopne
stos
sub
sahf
mov
pop
jecxz
push
cwtl
pop
inc
fldl
jmp
dec
xchg
pusha
inc
into
xchg
mov
shl
inc
jb
xor
mov
mov
pop
add
jp
mov
sbb
in
xor
mov
mov
add
xchg
cmp
xor
in
rclb
pop
scas
add
es
pop
sbb
out
xor
loope
and
repnz
in
xchg
pop
cli
lcall
ljmp
ret
xor
cmpsl
cmpsl
imul
sti
lcall
aam
pop
repz
data16
inc
mov
icebp
inc
sub
das
jnp
fcompl
inc
fadds
jbe
iret
cmp
leave
je
call
orb
and
into
jne
adc
sahf
fs
bound
subl
inc
insl
jge
mov
mov
call
mov
test
imul
jb
test
mov
mov
inc
sarl
ror
adc
xchg
and
fbld
cli
mov
pop
orb
cs
aas
stos
aam
aaa
fcmovnbe
ja
int3
lcall
push
push
jb
cli
sti
xchg
mov
push
testb
bound
sub
movsl
cmp
or
pop
pop
fs
outsb
cmp
sub
mov
sub
xchg
sub
rcrb
notb
xchg
pop
fcomi
addb
xchg
inc
pop
mov
xchg
loopne
rcll
inc
push
aam
bound
stc
mov
inc
out
xchg
mov
aas
jge
in
ret
xchg
xchg
cmp
add
std
adc
mov
imulb
push
es
xchg
ret
or
stos
add
popf
lea
insb
lods
add
pop
add
sub
les
xchg
push
aad
inc
dec
sub
adc
shrb
lock
test
popf
hlt
ret
add
pop
push
xor
pop
sub
add
pop
or
xor
jecxz
push
inc
xlat
jmp
dec
dec
das
movsl
mov
outsl
int
jnp
lea
aam
jo
iret
jecxz
fwait
mov
xlat
push
push
pop
mov
xchg
push
xchg
mov
fbstp
lahf
lea
jg
jmp
mov
mov
nop
lock
aam
push
mov
stos
pop
mov
out
add
dec
cmp
aam
data16
dec
or
clc
fnsave
lods
ficoml
inc
fdivr
das
push
mov
push
in
adc
out
add
add
sar
cwtl
mov
adc
jp
loope
dec
lcall
push
insl
nop
fdivrs
inc
and
adc
lret
test
daa
and
xor
mov
test
adc
loopne
mov
jb
out
out
jnp
or
push
mov
sbb
push
mov
std
ss
sub
es
ficomps
cli
xchg
dec
cmp
dec
cmp
ss
cli
pop
test
cpuid
push
scas
xchg
and
ds
mov
sahf
fiadds
xchg
push
cli
cmpsl
adc
loope
and
or
ficoml
cmp
mov
js
outsl
jnp
sub
mov
pop
movsl
sbb
out
push
int3
shl
jp
fmuls
lods
pop
mov
rolb
xchg
cwtl
aad
imul
scas
and
sti
fdiv
xor
cmp
pop
in
inc
shlb
pop
and
mov
mov
movsl
jle
fidivl
rorl
lret
or
mov
pop
in
lods
fidivs
pop
dec
loopne
idiv
and
push
and
out
outsl
stos
mov
push
mov
in
push
je
shrl
pusha
xchg
and
mov
push
xor
fisubs
pusha
xorb
enter
adc
inc
sbb
lahf
push
mov
add
mov
test
pop
data16
test
loopne
std
xchg
fprem
mov
jae
stos
in
fsubrs
dec
mov
xor
push
cmp
imul
into
scas
push
xor
nop
dec
dec
iret
call
xchg
idivl
sub
pop
mov
or
incb
and
pop
cmpsl
fs
adc
push
push
daa
xor
fsubr
push
lds
xchg
loop
sbb
push
fnstcw
jmp
aam
test
in
sarl
or
push
xchg
insl
movsb
cltd
xor
call
stos
repz
sarl
push
mov
fists
add
inc
cmc
jo
adc
rcl
sarb
push
cs
mov
mov
vpacksswb
addb
or
fpatan
test
daa
fisubl
cmp
fwait
imul
push
jmp
mov
outsb
iret
cmp
jecxz
ja
aaa
shrl
adc
jns
dec
xchg
fwait
add
mov
sahf
repnz
js
jecxz
adc
xor
fsubrs
xor
xchg
insb
sbb
adcb
lock
xlat
stc
loope
movsl
adc
out
repz
push
mov
jp
nop
pop
data16
shr
std
mov
pushf
xor
mov
leave
aas
or
pop
sbb
into
shlb
clc
push
push
in
pop
std
dec
push
stos
sbb
test
dec
out
decb
fmuls
mov
and
xchg
add
mov
jb
out
ds
rcl
jg
dec
dec
test
xlat
pop
sbb
add
adc
adc
iret
std
adcb
xor
je
cs
push
mov
les
mov
jne
add
jnp
in
or
xchg
adc
mulb
or
inc
add
divb
in
ret
stos
je
inc
into
xchg
adc
leave
arpl
push
sub
subb
xor
push
ljmp
call
mov
inc
jns
sub
or
int
cmp
testl
cwtl
aaa
imul
cmp
ffreep
enter
mov
ds
data16
pop
imul
adc
xchg
mov
mov
inc
cmc
insl
mov
mov
enter
lahf
inc
mov
sti
sarl
pop
outsl
jge
cs
xchg
sub
test
test
dec
out
les
mov
clc
mov
leave
and
jbe
stc
xchg
mov
leave
push
sbb
stc
mov
sbb
mov
pop
in
loope
repz
int
pop
aas
aad
mov
popf
dec
test
xchg
push
dec
aad
jg
xor
lds
icebp
or
loope
pop
repz
ljmp
fstp
adc
mov
js
in
ret
into
push
lret
in
xor
mov
call
out
push
push
push
int3
fwait
xchg
xchg
out
bound
and
shlb
pusha
lods
cmp
jecxz
mov
pop
sbbl
sub
loopne
scas
in
inc
push
jb
pop
jle
jmp
or
in
xor
mov
sbb
jmp
pop
jb
leave
mov
mov
stos
mov
cmc
in
popf
push
xlat
mov
das
inc
jae
jmp
fstpl
aam
lock
enter
fs
add
push
aas
push
ret
sub
sar
mov
and
aad
cli
jbe
stos
xor
add
fdivl
push
cmc
inc
jle
aas
int
jo
mov
sbbl
cmp
and
add
mov
out
iret
imul
push
mov
xchg
imul
xchg
testl
sbbb
mov
loopne
add
lahf
mov
cmpsb
cmp
insl
mov
jne
mov
outsb
xorb
leave
cmp
adc
outsb
mov
les
rcrb
push
repnz
mov
pop
xchg
cs
out
mov
pop
mov
sub
add
outsl
je
cmp
inc
cwtl
mov
popa
pop
push
cmp
popa
jmp
testl
ja
add
mov
ss
fisttps
aad
jmp
cmp
adc
add
jne
insl
sub
rcrl
mov
bound
call
jmp
inc
fiaddl
or
ds
adc
mov
daa
in
gs
fistps
imul
bound
pop
jl
loop
shll
add
popf
jo
cmpsl
aas
mov
imul
pop
xor
mov
and
scas
add
pop
pop
testb
xchg
push
insl
and
lea
shrl
cwtl
mov
dec
movsl
and
push
mov
xor
inc
test
add
mov
insb
mov
pushf
out
xchg
pop
mov
into
outsl
sarb
xchg
push
insb
pop
pop
cmp
loopne
cmp
add
xchg
ret
mov
sbb
fldcw
xchg
mov
sbb
jecxz
xchg
jp
and
or
scas
je
xorl
dec
cmp
je
cmp
test
jno
leave
ds
push
mov
push
fisttpll
pop
add
cmp
daa
pop
xor
jns
xor
and
popl
mulb
add
lock
or
or
pop
jl
inc
scas
inc
jle
xchg
mov
sbb
fcompl
cmpsl
jo,pt
inc
pop
cwtl
rol
xchg
mov
jb
cmp
jmp
jb
inc
pop
push
xchg
nop
test
jle
aam
aas
or
cs
scas
push
popf
cmp
add
push
mov
mov
sbb
jle
jnp
mov
js
pop
imul
cmp
jp
repz
enter
cmpsb
push
sahf
mov
and
call
shl
jo
fsubp
inc
lods
inc
scas
mov
jecxz
or
mov
dec
out
jl
cmp
popf
add
out
pushf
lods
mov
lods
test
mov
shll
inc
faddl
cli
push
lods
sub
cmp
ficompl
pop
jne
inc
cmc
shrl
addr16
nop
mov
mov
mov
and
std
jo
ret
addl
movsl
scas
inc
cltd
jno
test
enter
xchg
add
adc
adc
inc
inc
lods
push
xor
lods
push
popf
scas
push
cmp
shrl
jl
or
xor
mov
nop
rclb
adc
pop
fdivrl
sarb
sti
push
leave
pop
pusha
stc
out
cmp
pop
push
test
aad
insl
inc
das
ret
mov
bound
jp
fbld
mov
xor
xchg
pop
in
jle
dec
out
fs
adcb
add
je
mov
inc
push
sub
inc
bound
fisubs
sub
push
lds
loopne
or
sbb
and
cld
and
pop
push
dec
loope
lods
mov
mov
imul
aaa
sub
popf
dec
mov
sbb
fdivrl
fldenv
inc
stc
dec
cmp
out
pop
rcrl
loopne
adc
js
mov
or
mov
filds
and
andl
aad
mov
test
mov
cmpsb
scas
fisubs
dec
adcb
adc
sarb
and
mov
jg
jae
ds
jge
out
fiaddl
add
mov
iret
xor
jg
lock
mov
push
adc
adc
jns
stc
lds
sbb
out
dec
pusha
add
adc
ljmp
pop
out
push
enter
cwtl
or
inc
loope
jbe
lahf
mov
sub
mov
shlb
pop
insl
sub
dec
mov
jg
fsts
and
aaa
push
pop
push
je
mov
and
test
xor
adc
outsb
loopne
pop
lock
ret
xor
decb
icebp
outsl
xchg
das
cmp
pop
push
jae
xlat
jle
test
adc
pop
cmpsb
sbb
stos
mov
inc
xor
imul
mov
das
pop
icebp
or
jl
cmp
pop
outsb
mov
cmc
aas
imul
cmp
vpconflictq
jg
inc
xor
shll
dec
or
inc
out
gs
outsb
cs
lahf
inc
push
jo
js
jno
xor
into
aam
lds
addl
bnd
push
inc
fnsave
add
test
enter
icebp
mov
idivl
inc
add
xor
push
shll
jbe
loopne
xchg
mov
les
dec
ds
clc
cs
mov
gs
xchg
sub
adc
enter
daa
fisubs
or
cltd
sub
xor
jp
mov
mov
lea
push
cli
lret
stc
xor
mov
xchg
loop
ret
xchg
xlat
popl
pop
js
movsb
cmp
pusha
push
std
xchg
xchg
outsb
jge
lcall
fs
test
insl
sti
mov
sub
popa
repnz
lock
add
sti
icebp
jae
mov
cmp
cmp
xchg
negl
out
cmpsb
imul
into
movsl
pop
ret
add
adc
stos
fldenv
ss
out
add
data16
push
insb
sub
adc
insl
mov
jns
test
inc
rcrl
and
int3
mov
in
das
xor
lea
mov
fistpll
int3
in
dec
iret
sbb
push
pop
xor
arpl
cwtl
adc
int
cs
and
mov
mov
arpl
sbb
in
jb
sub
xchg
cmp
rol
jge
push
cmp
mov
imul
repnz
mov
sub
cmpsl
push
add
aas
push
popa
jns
int
lods
jmp
lret
cld
xlat
sbb
enter
daa
ljmp
ja
mov
in
ljmp
xor
call
mov
in
test
adc
and
cmp
fs
xchg
add
fwait
and
leave
insl
inc
push
mov
dec
in
push
cmp
data16
push
outsb
xchg
jmp
pop
loope
mov
and
jae
movsl
movsb
pusha
test
dec
jl
mov
addl
loopne
shrb
xchg
inc
outsl
enter
cs
inc
xchg
sti
cmpsl
push
sub
test
clc
inc
ja
loopne
mov
ljmp
hlt
cmp
aad
inc
xchg
dec
inc
cmp
push
pop
fstl
cmp
sub
cmp
sub
jp
arpl
cs
cmp
add
rolb
pop
cmp
out
xchg
pop
stos
dec
lods
pop
sub
push
cmp
jge
sbb
mov
or
jns
mull
pop
pushf
push
out
dec
in
push
mov
mov
inc
out
test
xchg
mov
icebp
popa
lds
shrb
sti
insb
pop
fwait
roll
pop
xchg
rcrb
ds
movsl
push
pop
add
dec
inc
je
sti
push
inc
inc
pop
jnp
mov
in
mov
push
popf
call
mov
sbb
adc
lret
enter
repz
mov
dec
sarb
lods
push
cld
fists
fildll
mov
mov
int3
mov
sub
pop
or
jg
pushf
movsb
into
xor
pop
int
mov
ljmp
inc
push
mov
fadds
das
xor
push
iret
je
adc
pop
sbb
adc
dec
cmp
xchg
lahf
push
adc
mov
pop
push
and
add
fisttps
jns
mov
add
jo
das
mov
push
popa
cmp
and
xor
cltd
decb
xchg
cmp
lods
push
mov
std
pop
jno
aaa
movsb
cmp
inc
xchg
stos
adc
lret
jl
ja
dec
scas
xchg
dec
daa
cli
xchg
jg
dec
shl
mov
jl
mov
fsubr
jo
jb
bound
call
or
outsl
xor
lods
inc
sub
dec
lcall
inc
cld
das
movsl
jne
pop
sbb
xchg
ja
les
push
sub
or
stos
insl
and
xchg
mov
dec
ss
xorb
test
inc
pop
lret
add
xor
mov
sahf
push
repz
int3
mov
sar
fistl
mov
push
push
mov
data16
aam
jle
jne
jle
dec
les
cmp
mov
and
sbb
popf
addr16
pop
mov
jp
jns
adc
push
lock
or
daa
inc
out
fstpt
xchg
shlb
xchg
and
andb
shlb
sub
movsb
loopne
jae
test
fidivrl
das
cmc
loopne
stos
sbb
xchg
jb
xor
push
mov
ret
lcall
jl
fdiv
xor
in
lods
mov
dec
jnp
cmc
test
cmp
add
mov
iret
sbb
add
dec
cs
push
sbb
lcall
sbb
into
popl
popa
xor
mov
bound
cmp
inc
test
jo
inc
popa
int3
jmp
push
data16
aas
outsl
sub
dec
add
mov
int
aaa
lods
jo
into
pop
in
add
push
sub
fpatan
mov
es
jp
std
adc
mov
in
cmp
sbb
repz
dec
test
popf
inc
cmp
bound
popf
mov
or
lods
mov
clc
xchg
cld
cltd
sahf
scas
ficompl
push
xchg
push
push
in
icebp
out
cmpsl
fdivs
push
aas
outsb
push
fs
iret
inc
popa
ret
fisubl
daa
inc
sbb
ss
insl
xchg
mov
rcrl
call
push
sub
fnstcw
repnz
cli
xor
ss
xor
test
fwait
in
mov
jne
je
cmc
pop
add
cmp
sbb
push
xchg
leave
test
call
js
sbb
fidivl
fstpt
loopne
fidivs
pop
cmp
hlt
outsb
mov
push
mov
out
popf
push
int3
sub
loopne
jo
aad
fwait
bnd
pop
out
popf
xchg
mov
test
js
add
lahf
inc
xchg
and
sub
mov
mov
es
shrl
dec
daa
inc
push
mov
lea
fsubrp
or
push
ficoms
pop
fidivrs
in
rcll
lcall
pop
mov
fidivrl
mov
cli
xorb
pop
aas
mov
shrl
mov
add
out
loopne
fisttpl
leave
and
adc
sub
lcall
in
mov
sbb
add
push
das
out
sarb
cli
cmp
mov
pop
adc
sub
pop
scas
cld
lcall
jl
fnstenv
aam
or
test
out
ja
call
inc
lret
sub
adc
push
hlt
js
cs
cmpsb
aad
cmpsl
jae,pt
lods
fadd
and
push
repz
push
movsl
adc
aaa
or
xor
popf
lds
jp
sbb
pop
pushf
xchg
stc
inc
sbbl
mov
je
popa
into
or
push
push
jae
sti
or
inc
mov
aam
insl
divb
push
out
loopne
mov
fimuls
adc
sarb
mov
lret
or
xchg
sub
sahf
xsha1
cmpsb
into
inc
popf
imul
sub
mov
sbb
les
push
mov
pop
cmc
sub
cmp
push
sbbl
call
push
sbb
scas
dec
lretw
mov
jp
sub
cmc
jae
ljmp
push
hlt
mov
sbbb
imul
mov
mov
jo
push
sarb
ret
rorl
ljmp
xor
xor
inc
dec
add
in
mov
push
lea
xchg
mov
scas
sub
sbb
clc
and
in
shr
icebp
mov
and
nop
xchg
sub
pop
lret
das
mov
leave
pop
subb
loope
imul
popa
sbb
dec
jl
add
mov
lock
mov
push
cmc
mov
mov
rorb
inc
aam
cmp
pop
jle
xor
cmp
cmp
mov
data16
jge
enter
sbb
xchg
jp
xor
adc
jb
xchg
jb
and
out
ficomps
mov
lcall
push
inc
and
ret
dec
jne
mov
cmc
shlb
shll
mov
cmp
cmpsb
push
stc
arpl
mov
add
add
fwait
mov
mov
mov
adcb
cmp
mov
push
xor
popf
or
aaa
shrl
imul
test
jo
xchg
sbb
movsb
arpl
je
push
mov
int
std
xchg
inc
dec
mov
jae
sbb
iret
and
push
jo
dec
adc
mov
shlb
icebp
lcall
cmp
xchg
ds
out
loope
push
enter
xor
rol
sbb
loope
insb
fidivrs
xchg
xor
repz
je
test
jo
call
fisubl
dec
loope
add
cli
cmp
xor
cld
ljmp
sbb
add
gs
or
pushf
popa
ss
lcall
and
add
sub
popf
inc
or
dec
sti
xchg
rorl
dec
pop
and
push
mov
insb
lahf
dec
mov
and
negb
and
sti
sbb
xor
pop
push
sub
add
push
test
addl
sub
cmp
jns
cwtl
jmp
aaa
push
push
sub
es
das
clc
movsl
fcmovnb
sbbb
pop
repnz
push
push
imul
xchg
in
enter
icebp
cmp
adc
xor
aad
test
dec
adc
insb
mov
enter
xchg
jl
pusha
popl
jne
xchg
xor
xchg
out
loopne
pop
adc
mov
cmp
lcall
arpl
ljmp
dec
fwait
jne
test
ret
push
ja
push
rorb
mov
sbb
in
movsl
jns
fadds
test
sbb
iret
orb
and
clc
sub
pop
sub
lods
sbb
lret
aas
imul
xlat
mov
adc
repnz
sub
imul
cmp
lods
adc
pop
movsb
xchg
jl
out
mov
shll
dec
inc
dec
shrb
xor
sbb
sub
in
repnz
in
sub
mov
or
lods
dec
push
lock
cld
add
sbb
lods
mov
orb
and
sti
jbe
loopne
pop
pushf
add
dec
mov
inc
in
sti
gs
fs
mov
negl
rorb
mov
pop
xorb
and
outsl
or
fnsave
xor
jo
sti
jb
and
test
jns
jg
movsl
mov
jo
fwait
stos
add
movd
mov
sbb
dec
out
jno
shrb
fisttpll
xchg
add
sub
and
insl
cmp
sti
sub
xorl
sti
push
jmp
adc
mov
adc
scas
jg
jp
addr16
scas
mov
mov
dec
cmpsb
sbb
mov
dec
andb
pop
aam
sbb
out
ret
lea
sahf
xor
add
mov
inc
xchg
push
mov
add
subl
pop
cmp
cmp
lds
dec
pop
and
sti
out
rcr
mov
das
andb
inc
push
sbb
mov
jno
fsubs
pop
mov
mov
nop
xor
mov
cmc
mov
les
cltd
or
pop
imul
sub
xchg
or
gs
iret
sub
or
or
out
loop
and
mov
xor
loopne
push
in
cmp
sarl
repnz
jo
mov
cmp
stc
xlat
out
les
icebp
es
sub
mov
and
movsb
loope
ret
enter
jns
dec
mov
insb
js
cmp
jmp
jecxz
sbb
imul
pop
rolb
aas
loopne
pop
in
fadd
pop
lret
mov
das
gs
sub
shll
mov
gs
in
sub
pop
jbe
cmpsb
cmpsl
aas
dec
dec
pop
inc
mov
std
sarl
out
mov
mov
mov
call
jl
test
push
xchg
in
dec
mov
sub
ror
enter
jmp
lods
add
mov
mov
int3
test
test
inc
repz
xchg
imul
mov
mov
call
or
loope
lret
je
pop
test
push
mov
icebp
jle
aas
cmp
mov
mov
incb
jl
nop
push
repnz
cmc
jno
mov
mov
inc
dec
mov
stc
cltd
xor
or
or
jmp
pop
mov
movsl
dec
out
mov
popf
mov
adc
xchg
xchg
adc
mov
jno
es
cmp
mov
push
pop
cmp
inc
lods
shlb
mov
lret
nop
aas
add
inc
shl
cmp
mov
xlat
jns
fld
outsb
scas
jb
push
mov
sub
popa
mov
cmpsb
sub
adc
inc
jl
shrl
xchg
cmpsb
out
scas
push
push
mov
test
push
and
dec
mov
mov
mov
nop
inc
loope
add
inc
sub
pop
arpl
dec
pop
pop
cs
loopne
je
inc
int
fcomi
fdivr
mov
mov
mov
pushf
mov
insl
mov
adc
aad
cwtl
sub
mov
fiaddl
adc
mov
addr16
dec
bound
push
iret
fistl
sbb
mov
dec
mov
dec
xchg
cltd
push
jg
orb
sub
fs
pop
popa
lods
or
or
push
sub
mov
jno
xor
or
sbb
jo
inc
push
push
stos
fisubrl
data16
clc
leave
shll
jecxz
in
sahf
je
xor
xchg
mov
push
ja
or
int3
dec
pop
lods
sub
icebp
enter
add
outsb
aas
fnstcw
test
lcall
pop
dec
sub
and
leave
mov
pop
dec
in
inc
aam
cmpsb
inc
int
pushf
mov
dec
push
cmp
mov
adc
shlb
enter
push
shrl
xchg
out
or
icebp
mov
icebp
cmc
jl
mov
test
ficompl
push
imul
sahf
inc
sbb
pop
rcr
test
inc
into
push
add
jmp
popa
push
jmp
jecxz
or
out
push
xchg
pop
es
aas
outsb
call
mov
jg
mov
ret
push
sbb
dec
mov
push
mov
and
jecxz
jno
cmp
int
mov
sub
cmpsb
inc
dec
out
xchg
adc
mov
stc
or
scas
adc
pop
push
xor
jle
jg
inc
inc
ret
je
pop
pushf
pop
dec
inc
inc
cmp
xlat
sbb
push
cmpsb
in
fstpl
sti
cmpsl
popa
mov
scas
xchg
test
pop
movsl
hlt
mov
lret
insl
jmp
and
out
add
ret
jb
outsb
xchg
inc
cltd
wbinvd
mov
jmp
lods
inc
or
adc
mov
daa
jno
imul
movsl
mov
stos
inc
jnp
aas
es
mov
mov
dec
ret
or
fmuls
dec
and
mov
rcrl
fsub
mov
negl
lds
pop
enter
gs
pop
js
xchg
int3
pop
cmp
in
pop
rcl
fsts
xlat
psllq
fists
ficoms
adc
mov
mov
movsb
fwait
cmpsl
aad
cmp
adc
xor
xor
andb
push
cmp
roll
push
f2xm1
mov
ret
pop
xchg
add
sarl
lcall
inc
mov
and
or
push
scas
insb
mov
inc
sub
imul
push
inc
pop
movsb
pop
je
mov
filds
xchg
je
enter
test
lret
pop
clc
mov
mov
rcl
adc
sub
mov
sbb
sti
aam
cmp
pop
add
jae
movsb
divb
ja
push
test
jns
jbe
mov
mov
fstpl
les
sub
loop
push
mov
into
aas
sub
cwtl
mov
clc
adc
jnp
lea
leave
addr16
cmp
nop
push
lcall
test
pop
and
stos
inc
push
test
fnsave
push
pop
inc
jp
jne
lahf
mov
sbb
imul
daa
lds
and
cs
dec
fisubrl
dec
in
xor
xor
jae
jle
pop
push
in
lahf
mov
pop
xrelease
sbb
popa
mov
sub
dec
xchg
push
push
lret
or
pop
mov
rclb
pop
push
sbbl
dec
mov
push
stc
cwtl
mov
push
mov
xchg
popf
cld
cwtl
dec
scas
cmp
in
pop
and
cmp
insb
mov
xchg
cs
sarb
repnz
pop
push
adc
cmpb
pushf
test
test
lret
outsl
xlat
insl
lods
pushf
fldenv
into
hlt
or
enter
xor
jbe
fucomip
cmp
jbe
stc
aas
lock
sbb
iret
pause
mov
inc
xchg
and
sbb
push
test
stos
adc
mov
xor
add
push
cmp
and
dec
dec
aad
push
pop
inc
pop
cmp
fsubrl
fdiv
xchg
and
loopne
adc
cli
inc
hlt
xor
cmp
push
push
mov
mov
push
inc
aaa
cmpsl
push
out
movsb
xor
aad
xchg
push
mov
xchg
cli
bound
jno
dec
and
pop
jge
popa
add
push
adc
push
and
sahf
xor
outsb
aas
mov
push
dec
inc
pop
ljmp
jno
xchg
hlt
dec
arpl
lahf
cmove
jns
movsb
push
fs
push
push
jle
jne
jmp
xor
jp
movsb
pop
aas
lcall
inc
adc
jb
dec
movsb
xchg
fistpl
xchg
pop
dec
stos
aas
cmpl
rcl
daa
add
arpl
inc
or
pop
in
ljmp
xor
xchg
xchg
jne
xor
outsl
mov
add
cmpsb
push
xor
lcall
repnz
xor
xor
push
inc
scas
mov
insb
shrb
add
cmp
mov
or
adc
dec
and
addr16
xchg
jbe
add
repnz
push
and
sbbb
push
push
out
test
mov
popa
mov
jno
sarb
inc
push
sub
inc
jge
clc
mov
aam
cmp
lea
aad
push
andl
imul
lods
inc
sbb
lret
bound
inc
test
mov
add
aaa
push
jno
mov
scas
jmp
daa
sar
pop
icebp
sbb
xchg
or
mov
sbb
or
test
mov
push
sub
xchg
pop
xchg
lods
in
sub
dec
test
outsb
mov
adc
je
and
mov
and
pop
or
push
decb
fmul
xchg
aaa
and
out
lds
add
sti
test
mov
mov
sarb
pop
mov
mov
push
data16
or
cmc
adc
enter
adc
imul
push
imul
dec
mov
mov
or
add
mov
mov
in
add
loop
lahf
jno
aas
push
cli
push
stos
adc
mov
movsl
xor
in
sbbl
add
xchg
das
test
pusha
and
data16
int3
ficoms
xchg
sub
push
pop
mov
test
jl
sbb
rorb
xor
das
imul
sub
jl
push
scas
xchg
push
movsl
add
fsubr
js
jl
js
cmpsl
cwtd
fwait
xor
add
mov
cmc
push
xor
pop
das
mov
xor
shl
mov
movl
ret
xor
mov
mov
movsb
cmp
pop
adc
adc
or
xchg
sub
push
mov
cmp
xchg
ja
mov
push
push
xor
repz
fldenv
fstps
out
loop
data16
fbstp
push
push
call
mov
cmpsb
cmp
sbb
cmp
pop
outsl
js
jno
sbb
dec
pop
jo
cwtl
mov
jne
push
jae
mov
push
adc
jno
mov
int3
addb
ret
sti
dec
adc
pushf
enter
ja
sbb
into
andl
push
outsl
stc
sbb
mov
sub
stos
popf
mov
es
scas
xor
idivl
aad
nop
add
in
adc
cli
ja
push
add
pop
mov
push
icebp
pop
pop
call
arpl
push
std
movb
cmp
adc
mov
inc
psubusb
imul
lods
insl
mov
fsubrl
xchg
inc
pop
sarl
pop
outsl
imul
jge
pop
push
scas
add
dec
adc
loop
mov
pusha
repnz
enter
frstor
int3
ja
dec
xlat
sub
fimuls
rcr
movsb
cmp
repz
scas
das
aam
stc
test
nop
mov
sbb
mov
adc
mov
int
fists
call
jecxz
xchg
outsb
lahf
inc
es
fnstcw
add
jge
xchg
repnz
and
lods
xchg
sbb
mov
sub
mov
test
pop
in
and
ret
xor
pop
cs
iret
pop
out
inc
fdivrs
adc
jle
pushf
sbb
into
ljmp
add
add
push
addr16
ljmp
xor
fcmovb
stos
into
and
movsb
mov
add
sub
test
shlb
rorb
shlb
jecxz
enter
int3
mov
test
inc
notl
pushf
sti
xchg
into
mov
sbb
jbe
aad
test
movsl
dec
int3
adc
les
or
lret
push
es
fisubl
orb
push
imul
cltd
jg
or
imul
xor
adc
leave
mov
pop
scas
fwait
iret
dec
in
cmp
call
mov
sbb
pushf
in
mov
inc
pusha
mov
mov
mov
sub
adc
shl
in
push
repnz
xchg
sub
gs
ljmp
popa
xchg
inc
std
adc
jle
adc
icebp
cmp
fdivp
cmp
mov
xor
subl
iret
adc
test
mov
mov
subl
aaa
popa
clc
push
cmp
cltd
or
and
pop
mov
cmp
addr16
add
leave
xor
cli
xor
outsb
fldcw
bound
dec
fdivrl
shlb
cli
fbld
or
cmpsl
dec
into
adc
dec
jecxz
jmp
push
jb
add
and
cmp
cmp
dec
popa
lahf
jae
add
push
icebp
test
scas
in
or
mov
mov
popa
je
fwait
imul
xchg
jg
gs
pop
or
mov
fisttpll
dec
mov
lods
js
push
mov
outsl
out
jp
cmp
cli
shr
mov
bound
jb
jge
mov
or
jno
add
je
lock
lods
repz
xor
je
sub
push
add
loope
mov
test
fdivl
pop
jb
xchg
push
jecxz
xchg
cmp
les
in
push
and
fbstp
test
fidivl
cmp
inc
xorl
add
dec
fcomps
sti
mov
roll
out
lret
in
jl
push
sub
pop
adc
ss
es
fwait
sqrtps
inc
cld
pop
loop
cmp
add
dec
pop
push
push
sbb
lcall
ljmp
jns
insl
ja
pop
insl
add
popf
cmpsb
lret
pop
jmp
popf
or
rorl
dec
mov
fiadds
xchg
shll
repz
pop
inc
dec
fstps
shrb
dec
dec
cmpb
cmp
cmp
stos
sbb
mov
mov
sub
test
xor
push
outsb
xor
pop
dec
cmpsb
sub
jg
xchg
scas
arpl
cmc
or
cmp
dec
adc
in
out
adc
pop
push
pop
imul
pushf
lods
stos
mov
in
xor
lds
bound
out
cli
xchg
xchg
and
test
jecxz
and
ret
push
mov
xor
fs
push
popa
push
imul
sub
shrl
shlb
xchg
adc
arpl
ljmp
subl
or
pop
and
iret
loopne
mov
push
rorb
inc
push
and
bound
lret
test
fisubrl
cmp
ss
insl
mov
mov
lock
inc
xchg
sahf
push
or
es
movsb
aam
add
leave
nop
cltd
cmp
push
mov
movsb
jno
mov
add
imulb
arpl
gs
clc
es
lea
xchg
fwait
adc
xchg
jge,pt
jmp
pop
insb
in
or
cmp
ss
and
out
jle
mov
push
lods
data16
aas
sahf
out
arpl
inc
stos
fcomp
hlt
lret
sarl
sub
adc
add
das
pop
push
inc
sub
cmp
cmpsb
aas
testb
enter
js
stc
cmc
movsl
xchg
test
lahf
into
dec
mov
push
fstpl
pop
test
int3
sbbl
sub
gs
cltd
pop
inc
cli
pusha
xchg
xchg
ss
pop
xlat
aaa
push
cmc
loop
or
jg
xchg
repnz
pop
jno
sbb
cmpsl
pop
cmp
jge
push
push
in
dec
scas
inc
jl
aad
push
dec
mov
dec
dec
ret
pop
jge
insb
jle
push
push
xchg
jne
xchg
push
pop
xchg
shl
lods
mov
out
out
dec
aam
outsb
insl
sub
cmp
rclb
in
mov
pushl
and
jns
xchg
stc
inc
mov
push
or
or
in
mov
sub
notl
sti
rorl
and
xchg
dec
xchg
sub
fbstp
xlat
out
jno
test
mov
push
pop
frstor
jo
jmp
lods
sub
mull
je
push
lret
add
mov
adc
in
ret
add
repz
dec
sbb
dec
outsb
call
push
inc
sbb
pop
lods
sbb
mov
inc
popf
leave
mov
xchg
dec
ss
add
sbb
cld
in
nop
or
rcrb
sbb
popa
int3
pop
jae
fcmove
mov
outsb
xor
lock
std
cmpsb
std
int
cmpsl
lds
movsl
out
js
mov
push
fs
mov
lds
xchg
cmp
cld
inc
out
xor
add
pushf
xor
pop
pop
jno
inc
aaa
push
xor
cmp
cmp
dec
pop
cmpsl
dec
mov
mov
pop
jg
imul
fcmovnb
pop
int
xchg
push
or
test
dec
sub
pop
inc
outsl
add
jnp
sub
mov
icebp
cmpsb
sbb
mov
xchg
fwait
imul
dec
loopne
inc
ficompl
jg
daa
ret
into
cltd
and
mov
inc
and
inc
cs
and
mov
aaa
shrl
mov
clc
pop
push
stos
jle
mov
add
mov
add
mov
or
adc
in
jg
lcall
lcall
bound
mov
mov
jae
loop
les
mov
mov
inc
out
cmp
stos
xchg
pop
in
std
mov
inc
out
fsubrp
rolb
outsb
loop
mov
dec
dec
mov
cmp
mov
rcrb
es
rcrl
inc
cltd
mov
movl
sbb
push
or
lcall
scas
lds
dec
arpl
xor
shl
lret
or
push
cwtl
fs
inc
aaa
sub
and
pop
sub
dec
sub
pop
div
imul
int3
push
mov
pop
in
sub
and
or
test
andl
cmp
sbbl
cmp
es
lock
pop
movsl
hlt
bnd
pop
fisubrl
sub
mov
rorl
mov
pop
adc
dec
fdivl
or
inc
pop
pop
jg
pop
rorb
repz
push
addl
divps
or
scas
inc
dec
cmpsb
aaa
int
adc
loope
lcall
ja
jb
lea
stc
lods
ljmp
dec
cmp
dec
sub
repnz
xlat
int3
fdivs
mov
rcrb
dec
in
fldl
sub
icebp
movsl
xor
lods
jo
xlat
loope
xchg
sbb
hlt
jl
mov
adc
mov
bound
mov
lret
mov
add
das
cmpsb
int3
mov
mov
movsl
cmpsb
cmp
sahf
jl
ja
jecxz
mov
out
orl
in
rorb
push
sub
call
out
test
mov
or
icebp
inc
stos
mov
jecxz
popf
enter
jecxz
inc
negl
fs
repz
loopne
lods
mov
push
push
addb
xchg
jns
cld
popl
xchg
in
das
xchg
mov
add
lea
and
scas
inc
jnp
enter
or
sbb
stos
and
inc
jg
cmpsb
mov
sub
push
fsubrp
inc
xchg
add
enter
adc
aaa
jo
das
push
outsb
rorl
adc
out
dec
arpl
mov
jg
push
lea
or
sbb
imul
pop
jecxz
adc
push
fnstsw
fs
out
jns
xchg
icebp
add
fbld
das
ja
mov
jbe
aas
pop
push
sahf
lods
scas
pop
inc
bound
pusha
lret
ja
loopne
dec
js
pop
lods
je
test
dec
or
cmp
test
pop
sub
mov
push
and
or
jge
fistpl
std
fucomp
push
mov
imul
dec
or
arpl
cmp
ret
sbb
xchg
ficompl
loopne
push
fld
xlat
mov
dec
xor
pop
inc
clc
mov
iret
bound
jns
orl
push
repnz
into
xchg
adc
sbb
les
jno
nop
mov
rolb
mov
pop
or
hlt
dec
inc
push
inc
inc
lods
nop
repnz
xor
fucomip
push
or
mov
pop
mov
xchg
es
aad
movsl
cmp
pop
lods
pop
les
push
push
lock
stc
test
test
push
fisubl
or
or
push
xor
jecxz
jae
test
adc
leave
mov
add
adc
outsl
mov
fistpl
cld
xchg
pop
insb
adc
dec
push
fstl
adc
arpl
pop
mov
add
jmp
inc
cmp
push
popa
test
inc
mov
mov
clc
emms
mov
movsl
mov
jmp
or
push
push
lcall
mov
inc
sti
je
push
leave
stos
inc
divl
dec
and
stc
xor
push
sbb
or
data16
and
outsl
mov
cli
push
or
cld
pop
xchg
test
js
mov
fdivrl
sub
lods
mov
test
jnp
loope
outsb
rcrl
mov
adc
shr
adc
dec
add
jp
dec
mov
mov
mov
inc
pop
aas
mov
pop
dec
add
xchg
push
in
call
out
cmpsl
fsts
loopne
subl
mulb
cmpsb
inc
cs
test
iret
dec
push
in
outsb
mov
xor
cli
mov
sti
inc
enter
pop
fldl
scas
das
cmp
enter
inc
pop
insb
jae
aad
adc
cmp
mov
xchg
xor
cmp
adc
mov
pop
loope
mov
scas
push
imul
xor
xchg
int
in
inc
popa
loop
xchg
sub
clc
push
push
xor
jb
xchg
push
sbb
push
aaa
jne
movsb
dec
jns
push
and
rol
into
fsubr
pop
adc
test
lret
addl
clc
ja
mov
jmp
sbb
add
mov
push
or
jne
sbb
pushf
sbbl
out
and
imul
test
arpl
ss
data16
ss
arpl
jle
inc
lds
aad
jp
push
ret
xchg
pop
xchg
inc
dec
cmp
push
mov
fs
out
mov
stos
sub
repz
xchg
jle
lock
cmp
jecxz
bound
outsb
mov
mov
test
xchg
xorl
push
ja
cmpl
cmp
test
push
xor
mov
push
and
fldl
pop
mov
jmp
les
js
xchg
scas
xchg
adc
inc
es
js
mov
sbb
shlb
push
loop
movl
push
jbe
hlt
pop
xchg
inc
lea
rorl
mov
jmp
dec
icebp
mov
jmp
ss
dec
and
jbe
jbe
mov
cld
jecxz
mov
imul
mov
negb
xchg
or
inc
push
ss
xchg
mov
and
enter
pop
and
inc
sub
jne
adc
rcl
lcall
adc
xlat
nop
out
adc
std
out
and
pop
repz
inc
mov
jl
testl
enter
pusha
xchg
mov
or
adc
inc
inc
repz
cs
popa
les
loopne
add
lods
lds
adc
or
pop
scas
icebp
cwtl
push
fistps
mull
and
inc
adc
adc
push
mov
stos
mov
push
fcmovu
nop
loopne
push
inc
adc
inc
mov
fildl
mov
bound
jecxz
lahf
ss
xorl
je
lock
fs
sti
ja
jle
jbe
xchg
cmp
out
cmp
dec
stos
inc
movsl
jle
mov
add
and
leave
mov
inc
stos
mov
fucomi
jg
rcl
mov
test
scas
dec
movsb
repnz
sub
push
or
aad
movsl
mov
aad
test
push
inc
outsl
xor
lahf
adc
add
cmp
fisubs
lret
addr16
in
loopne
push
and
out
mov
xchg
js
leave
cmp
into
sbb
mov
cmovl
mov
push
mov
rorb
mov
inc
push
mov
mov
test
add
or
lods
scas
push
adc
in
xor
inc
xor
imul
outsl
enter
sarb
ja
xor
add
mov
pop
xchg
ja
repnz
out
mov
aas
xchg
and
in
lods
jp
lock
pop
or
jmp
or
mov
add
sub
in
lret
jb
imul
cmpsl
aas
push
mov
arpl
cltd
jbe
clc
hlt
mov
adc
pop
inc
lods
push
pop
adcb
pop
ss
add
sahf
imul
cmp
not
out
xchg
dec
dec
pop
js
xchg
arpl
mov
mov
jecxz
fisttpll
xor
iret
mov
mov
shlb
cmpsb
cmp
jbe
les
cwtl
sub
jl
nop
iret
pusha
negl
stos
push
divl
jne
xchg
xor
pop
or
es
jns
pushf
pop
aad
test
push
addr16
rcrl
outsl
mov
out
mov
inc
fimuls
lods
fcoms
mov
xor
les
stos
inc
stos
xrelease
std
dec
es
in
int
lret
es
mov
mov
mov
cmpsb
pop
mov
add
adc
dec
xor
xchg
push
push
push
push
push
mov
sub
cmpsl
xchg
mov
inc
out
pop
xor
popa
fmuls
outsl
in
mov
ja
and
mov
pop
inc
and
add
lds
stos
mov
fdivs
cmpsb
jo
sub
inc
adc
je
mov
adc
data16
rcl
jb
pusha
and
insl
dec
cmp
ljmp
das
and
pop
lock
cmpsl
cmc
jne
ja
negl
jnp,pn
notl
in
xchg
lret
mov
inc
xor
mov
mov
lods
pop
mov
into
lea
and
adcl
aad
inc
mov
aad
sbb
loopne
daa
or
test
scas
scas
orb
sub
and
lea
pop
shlb
dec
sub
aad
dec
pop
jnp
pop
push
xchg
xchg
lods
cmp
inc
shrb
das
mov
je
pop
hlt
mov
sub
lea
std
lahf
add
cmp
push
fcoml
nop
push
add
dec
adc
adc
sbb
push
cmp
inc
xchg
sub
ds
or
test
xchg
stos
fs
mov
push
outsb
xor
pop
inc
mov
sar
sbb
or
adc
mov
pop
mov
stc
jle
scas
and
ds
test
hlt
jg
sbb
sahf
push
xchg
rorl
xchg
cltd
push
loope
lea
out
jns
fidivs
adc
xchg
push
jmp
dec
pop
test
scas
sahf
clc
orb
lahf
daa
clc
adc
shlb
dec
pop
repnz
inc
mov
adc
inc
xchg
jmp
push
test
lret
and
pop
and
cld
inc
xchg
sub
fdiv
push
or
jbe
ret
call
fcomps
add
sub
cmpsb
sub
push
lcall
in
imul
sbb
int3
push
lods
int3
push
mov
subb
insl
sarl
sub
jle
push
jge
hlt
pop
jnp
int
jns
daa
jle,pn
xchg
es
fnstenv
lret
xor
testl
xor
add
push
nop
dec
mov
gs
add
pop
insb
cmp
sahf
pusha
in
data16
movsl
adc
add
out
adcb
cmp
insb
adc
pop
push
rcrb
mov
mov
cli
loope,pt
cmp
inc
push
dec
lock
pop
pop
rorb
loopne
and
push
push
jno
cld
add
jne
add
inc
mov
fs
push
aas
inc
inc
out
sub
pop
mov
dec
jmp
adc
mov
cmpsb
stos
ret
jle
dec
pop
mov
sarl
scas
enter
out
cwtl
into
pusha
push
mov
jnp
pop
mov
fnstenv
addr16
aas
adc
enter
mov
insb
clc
out
mov
or
mov
out
sahf
aam
movsb
repnz
add
cmp
movsl
cmp
aas
push
or
mov
fildll
nop
je
mov
cmpsl
jo
mov
jmp
add
outsb
sub
or
xchg
fnsave
ja
inc
es
jge
push
shrl
enter
sbbb
addr16
into
and
mov
adc
mov
xorl
inc
fmuls
sbb
sti
push
and
mulb
dec
push
jecxz
dec
hlt
inc
xchg
stos
ds
sbb
cwtl
sbb
outsl
adc
insb
insb
stos
shl
insb
inc
arpl
mov
mov
xchg
adc
sbb
or
repnz
arpl
and
mov
lea
cmp
xlat
sub
movsl
repnz
les
das
out
movsb
rcll
cmc
pushf
add
adc
push
es
mov
icebp
inc
cwtl
mov
sarl
je
cmc
sbbb
negl
mov
out
lock
mov
pop
ljmp
gs
push
fistpll
shrb
mov
sbb
pop
mov
mov
or
jecxz
sub
sub
es
cwtl
stos
sub
mov
jmp
xchg
push
mov
push
rolb
pop
adc
xchg
sub
repz
and
mov
lods
mov
test
aas
jg
sti
and
sti
add
lcall
das
sub
daa
movsb
cmp
cmp
and
loopne
pop
push
scas
dec
sub
jbe
inc
js
je
rcrl
mov
mull
out
lock
push
xchg
xchg
sbb
mov
pop
cmp
rcrb
dec
daa
add
xchg
pop
mov
sub
cld
lcall
jbe
sub
gs
cmc
mov
add
loope
mov
xlat
push
push
ss
lods
dec
std
push
clc
and
lods
fwait
loope
and
fists
or
jns
outsl
sbb
cmp
scas
mov
lret
lahf
call
mov
icebp
mov
mov
lret
loop
adc
or
xchg
adc
jae
xor
je
daa
decb
xor
xor
scas
pop
sub
rol
fs
mov
sti
lea
and
and
sub
jb
xorl
shr
test
push
jbe
pop
outsb
mov
ljmp
lcall
push
scas
xor
stos
inc
int
sub
out
add
enter
stos
test
popa
sub
std
xchg
enter
insb
xchg
sub
push
sub
subl
and
aam
out
in
inc
pop
fwait
xor
sub
lock
xorl
dec
in
roll
hlt
xchg
insb
into
add
xchg
sub
jecxz
jo
ret
add
push
shlb
xchg
icebp
mov
cwtl
push
fmull
push
pop
mov
inc
fsubr
dec
fwait
sbb
icebp
mov
outsl
ret
fidivrl
aas
adc
cmpsb
stos
or
cmp
push
add
out
xchg
sbb
xor
shll
loopne
jg
dec
repz
pop
jno
mov
cmp
sbb
lahf
cwtl
sti
inc
cltd
mov
int
movsl
dec
or
mov
inc
into
xor
lds
or
jo
dec
cmp
mov
lods
mov
or
sub
call
in
std
mov
lods
inc
sub
inc
or
enter
das
or
test
bound
mov
inc
xor
cmc
loope
dec
movsl
sahf
mov
sarl
and
stc
push
js
mov
je
repz
lahf
loope
sti
out
les
xlat
outsb
aad
arpl
enter
data16
pop
mov
mov
in
stos
cld
push
push
mov
daa
inc
cmp
mov
enter
inc
xchg
scas
jb
adc
cmpb
out
ljmp
mov
or
sub
mov
shlb
mov
fldl
jecxz
es
int
aas
fnstenv
stos
cltd
xchg
testl
daa
dec
and
push
add
or
sub
jle
int3
inc
cmc
out
cmc
arpl
lds
jl
pop
pop
sub
cltd
jae
sub
out
loopne
fisttpll
les
push
jmp
sbb
movlps
adc
movsb
ret
ret
push
shrl
stos
cli
mov
push
xchg
test
dec
pop
je
call
stc
aad
jl
lods
jg
push
icebp
rclb
fwait
shrb
inc
fwait
adc
adc
jnp
and
push
sti
ja
pop
inc
dec
loop
popf
shlb
xor
or
out
inc
lods
pop
xchg
and
imul
adc
std
push
inc
ljmp
adc
insb
call
mov
adc
aad
and
out
popa
and
insl
pandn
sahf
lods
adc
xchg
jb
cmp
cmpsb
xor
xchg
sub
xlat
mov
in
scas
mov
shl
sub
mov
les
cld
add
enter
mov
repnz
es
aas
or
push
shlb
inc
dec
repz
dec
popa
sbb
xchg
insl
or
movsb
fdivl
mov
pop
adc
and
xchg
cmp
cmp
cmp
or
pop
jbe
ljmp
cld
jmp
jg
mov
push
xlat
inc
add
pop
outsb
mov
mov
arpl
shl
cmp
sub
mov
push
jle
mov
adc
lcall
cmpsl
push
andb
mov
xor
push
and
push
test
push
ljmp
jmp
adc
lahf
test
adc
dec
cmpsl
fs
imul
push
mov
dec
mov
dec
push
jg,pt
jmp
aad
sahf
jp
or
push
in
xor
cltd
das
push
cmc
sbb
es
enter
std
nop
ljmp
sahf
xchg
popa
jbe
lcall
or
aam
cld
mov
inc
cwtl
mov
push
adc
and
mov
imul
cs
notl
inc
and
sub
xchg
pop
sbb
sub
jge
xchg
repz
sahf
ja
fwait
adc
cmpsb
inc
lcall
push
in
add
mov
in
inc
stos
lock
and
or
or
neg
xlat
idivb
addr16
dec
leave
ret
imul
pop
cmp
jp
std
adc
xchg
mov
mov
mov
out
mov
xlat
ds
test
add
into
mov
jne
xchg
cwtl
and
das
jge
sub
std
push
loop
fldz
js
mov
scas
adc
xchg
push
or
lods
sub
popa
inc
dec
and
cmp
and
sti
int3
xchg
pusha
jg
nop
in
inc
das
push
fidivrl
jl
push
std
in
addr16
sbb
lods
push
je
out
inc
or
jne
insl
inc
addr16
xchg
adc
mov
ss
mov
and
mov
jle
or
out
out
std
leave
divb
leave
mov
fisttpll
add
aam
ss
sub
out
sub
iret
xor
loope
cmp
mov
or
cmp
and
in
arpl
out
jno
jae
add
popf
lahf
mov
lret
iret
loope
add
xor
rclb
dec
xchg
lods
stos
stc
jo
fwait
popa
test
mov
js
jne
and
jo
add
xorb
jl
or
pop
test
data16
jle
xchg
jl
test
lcall
inc
loop
dec
testl
xchg
mov
xor
adc
hlt
std
pop
sbb
add
aaa
pop
adc
push
xchg
xor
arpl
ficomps
iret
cli
or
subl
and
mov
std
mov
push
clc
xchg
jno
xchg
cmc
test
insl
inc
ret
push
push
call
cmpsl
pop
push
in
popf
push
adc
dec
add
imul
mov
clc
mov
pop
jle
movsb
sub
stos
mov
into
mov
or
sbbl
call
rcrl
add
dec
push
cs
lods
xor
flds
test
out
fstps
test
jle
outsb
xchg
imul
rclb
into
pushl
les
aam
mov
adc
or
cmc
jo
cs
mov
fwait
push
push
out
mov
jge
xor
int3
arpl
call
orb
mov
push
mov
sub
or
sarb
nop
mov
xor
jnp
or
add
xor
pop
stc
jns
jo
ss
adc
mov
sub
add
xor
xchg
ja
pop
jno
mov
jecxz
sahf
mov
jnp
mov
ret
push
popa
shll
push
fldenv
lret
cltd
sub
lods
mov
sub
sbb
cwtl
ds
in
jb
jno
xor
popf
nop
push
inc
orl
xor
ret
adc
clc
adc
mov
inc
faddp
fmuls
sub
jp
test
pop
cld
roll
mov
mov
push
cs
insb
sbb
jo
cmp
pop
dec
das
cmp
and
pushl
lret
scas
adc
int3
dec
int
dec
push
push
out
mov
scas
and
fucomp
sahf
inc
xor
aam
sbb
pop
lcall
cmp
pop
mov
push
mov
cltd
pop
cmp
rorb
int3
pop
leave
lret
data16
roll
xor
fisttps
push
jg
stc
adc
cmp
xchg
in
mov
and
xchg
fnsave
add
mov
push
dec
push
mov
pushf
je
mov
add
stos
test
dec
mov
jmp
pop
jae
dec
fstl
add
mov
rcrb
es
push
mov
jne
and
jecxz
push
mov
mov
add
cmp
cmp
imul
xor
add
rcrb
push
imul
inc
ror
jbe
gs
push
xchg
or
arpl
xchg
jp
and
int3
lret
cld
lods
loop
fists
pop
fcomps
inc
mov
popa
or
mov
pop
fs
push
outsb
or
push
hlt
stos
jl
or
dec
sbb
ret
dec
inc
sub
xchg
push
cli
leave
xchg
daa
ret
lods
push
bound
shl
addr16
add
inc
push
insl
mov
in
xchg
lea
sbb
adc
mov
push
sub
loope
pusha
adc
pop
les
pushf
mov
sti
cs
outsl
dec
mov
sub
out
mov
ss
lcall
jg
adc
mov
lahf
notl
xor
outsb
xchg
xor
push
jb
mov
mov
xlat
or
fs
and
mov
stos
stc
pop
std
cmp
mov
pusha
aaa
dec
rcr
sbb
inc
jnp
jno
pusha
stos
and
daa
jle
or
cmp
pop
adc
orb
aas
js
or
insb
ret
xchg
gs
push
and
mov
dec
fistpl
fiaddl
cmp
loop
in
cwtl
jbe
cli
and
sub
sub
daa
rclb
cmpsl
mov
push
aad
push
cld
xchg
xor
out
push
lods
sub
repz
xchg
aad
mov
and
push
xchg
fwait
jmp
das
push
in
xor
add
jp
les
nop
test
jge
dec
mov
stos
addl
push
sub
sbb
lret
test
or
jns
aad
push
lahf
in
sti
dec
mov
push
dec
sti
sub
dec
mov
movsb
sbb
data16
jne
int3
xchg
dec
lock
mov
sahf
je
insl
cs
or
push
rorl
mov
out
ds
pop
and
sub
test
das
jnp
pop
insl
pop
rcl
cmpsl
adc
repz
dec
fbstp
push
xlat
arpl
ds
xor
cmp
mov
fucomi
sub
cmp
adc
mov
push
and
pop
inc
pop
jo
or
xchg
jle
add
push
decl
lds
cmp
sub
dec
sbbw
mov
xor
mov
push
sub
or
mov
mov
xchg
jl
shll
divb
cmova
lds
ror
push
pop
add
hlt
repnz
sub
fisttpl
sti
xchg
arpl
es
cmp
pop
adc
sub
popa
lcall
and
mov
int3
lahf
pop
sahf
push
out
and
popf
xor
shll
sub
sbb
dec
cmp
into
inc
pop
hlt
pop
sbb
outsl
sbb
in
xor
sub
std
insb
sbb
mov
and
mov
js
adc
lret
mov
ret
xchg
push
out
cmpsb
cmp
shrb
lods
aad
sbb
jp
xor
outsb
add
and
lea
and
leave
push
lcall
loopne
in
push
push
fisubrl
test
mov
jo
jno
in
lods
push
lcall
and
repz
inc
ljmp
push
cmpl
sub
adc
jb
inc
and
testl
lea
mov
or
sbb
adc
mov
in
mov
out
mov
sbb
js
mov
add
mov
jns
or
and
dec
push
push
testl
mov
mov
xlat
and
movsl
add
xchg
fcmove
lea
adc
leave
sbb
cld
leave
jae
dec
dec
repnz
dec
mov
leave
sbb
push
sub
daa
push
imul
inc
xchg
mov
int3
arpl
adc
push
sti
add
movsl
lcall
in
jge
jns
out
xchg
mov
or
sahf
push
fldt
cwtl
fcoms
inc
les
in
cld
xchg
add
mov
add
jge
iret
mov
loopne
repz
dec
cld
loopne
mov
imul
pop
jle
das
repnz
mov
add
mov
push
fidivrs
in
mov
or
stos
out
popa
and
insl
push
and
cmp
stc
inc
cltd
test
lcall
leave
enter
mov
mov
andb
ljmp
outsb
sbb
adc
int3
cmpsb
pushf
inc
fsubrs
or
aaa
imul
lods
jl
adcl
popa
pop
outsl
mov
xchg
cmp
adc
inc
call
and
xor
lcall
arpl
jo
xor
cli
mov
mov
imul
ret
fisttps
push
cmc
stos
mov
mov
in
inc
dec
push
ret
sub
push
add
add
and
lods
xor
cs
jne
ror
arpl
aaa
clc
popl
out
xchg
xor
les
loop
mov
push
mov
imul
jne
add
or
dec
in
xchg
pop
int
inc
sbb
arpl
test
fimuls
addr16
and
mov
cmpsb
in
adc
sbb
ficomps
mov
mov
scas
sub
in
dec
sub
mov
push
sti
jno
into
push
das
xchg
dec
mov
mov
sub
add
add
and
jle
xchg
cmpsl
cmp
pop
xor
shlb
aas
loope
jns
dec
outsb
or
aas
cmp
imul
addr16
test
int3
push
push
loope
mov
sti
repz
ret
inc
aam
dec
pop
mov
inc
inc
mov
outsb
sbb
fs
insb
push
sbb
imul
mov
push
mov
sub
dec
bound
push
dec
pushf
stos
into
and
xchg
push
and
bound
mov
ss
rcl
jb
and
fsubl
dec
mov
push
stos
fildll
shl
aad
mov
fists
add
sbb
loop
push
xchg
inc
xor
lock
arpl
int3
or
outsl
add
inc
mov
fstl
sub
fidivrl
push
push
ljmp
pushf
repz
or
xchg
test
and
xchg
pop
cmp
fwait
mov
and
or
mov
mov
pop
xchg
push
inc
test
xlat
test
or
cmp
adc
leave
push
xchg
clc
fnstsw
jnp
sbb
adc
ss
push
push
iret
imul
sbb
outsb
popa
pop
hlt
cmp
inc
popf
push
adc
subl
outsl
cmpsb
gs
mov
xchg
or
les
out
aaa
xchg
xor
add
push
scas
or
mov
imul
xor
xchg
and
sbb
sti
jle
add
repnz
fidivs
scas
or
mov
enter
cmp
daa
mov
dec
lods
ljmp
inc
popa
insl
scas
adc
orb
js
cmpsl
jle
pop
cmp
mov
push
pushl
outsl
imul
cmc
adcl
push
add
push
sbb
rcrb
testb
dec
dec
in
cmp
pop
jg
mov
add
inc
fs
mov
enter
dec
mov
add
outsl
push
adc
mov
lahf
ss
imul
inc
and
dec
mov
jle
subl
xor
mov
out
insl
sbb
sbb
ja
push
lea
mov
mov
incb
pop
xor
ljmp
xchg
mov
push
je
adc
mov
pop
outsb
add
push
fisubl
mov
fdivrl
sbb
and
call
out
xor
scas
add
int
inc
jbe
mov
mov
call
pop
lcall
jecxz
jno
fmuls
or
fs
mov
and
sbb
and
cmp
jns
jl
loope
xor
dec
add
sub
out
iret
mov
inc
add
les
dec
inc
sub
mov
push
pop
sahf
aad
or
addl
ss
lods
js
lea
pop
test
sub
rorl
jae
enter
pop
xor
pop
hlt
fwait
dec
aas
stc
xchg
hlt
lock
mov
shll
mov
pusha
mov
mov
jns
sbb
or
cmpsb
mov
jl
fdivrs
fstp
xor
repz
pushf
inc
dec
loop
jno
cmpsb
and
mov
ret
mov
jmp
fdivs
mov
mov
inc
mov
or
mov
pop
cmp
rolb
adc
jp
sub
add
xlat
mov
fists
lret
sbbl
jle
das
daa
movups
aas
outsb
scas
mov
jle
jg
call
in
pop
je
lret
fisttpll
lods
cmp
push
int3
aam
ja
mov
insl
daa
out
cs
rorb
int3
mov
movsb
mov
fldt
sub
dec
dec
lds
cmp
shl
sbb
mov
aas
and
out
mov
sub
int3
fsub
sub
inc
addr16
push
test
pop
rol
stos
hlt
fucom
dec
loopne
sbb
iret
in
mov
sarl
insb
add
push
out
jo
pxor
std
inc
lahf
or
pop
xorl
into
andl
push
mov
xchg
out
sub
test
push
fistps
sub
movsl
push
add
xchg
adcb
rorb
mov
sahf
ja
arpl
cltd
sub
cmpsl
xor
xor
js
or
dec
add
dec
dec
cltd
xor
testl
scas
and
xor
push
and
sti
enter
xchg
sub
sub
sarl
add
sbb
sbb
ja,pn
arpl
sbb
aaa
jg
je
movsb
inc
and
mov
mov
lds
push
movsl
cmp
repz
dec
inc
push
xor
add
cmp
jmp
inc
and
iret
mov
ret
adc
pop
jae
adc
mov
jae
jle
xor
add
cmp
data16
arpl
pop
pop
dec
adc
fldl2t
loopne
fcmove
in
scas
shrb
in
hlt
inc
fildl
out
and
and
inc
pop
add
pavgw
jbe
sahf
shll
cmp
sti
sub
mov
and
ficoml
in
jmp
sub
sbb
jnp
stc
movsl
push
gs
add
jg
call
mov
mov
iret
push
or
sahf
gs
int
inc
aam
or
pusha
cmpsb
cmp
shl
shlb
ret
icebp
adc
lods
jo
mov
scas
xchg
daa
lahf
bound
ss
jl
jmp
or
or
stos
fstpt
add
in
fwait
adc
jne
jle
imul
mov
jg
loopne
ss
adc
adcl
loope
roll
sbb
test
sbb
xchg
mov
push
fbld
mov
in
cltd
and
cwtl
add
mov
out
cmp
sub
sbb
ret
cmpsl
fs
mov
jbe
jmp
dec
mov
stos
das
adc
test
jg
lret
xchg
cmp
stos
out
cmpsl
fcmovnu
push
call
adc
pop
push
and
mov
clc
popa
xor
inc
dec
or
popa
mov
jb
mov
add
pop
out
rorl
xor
mov
sbb
add
mov
jb
pusha
movsb
mov
filds
mov
add
mov
sbb
inc
ds
insb
in
sbb
pop
repz
mov
jp
fildl
leave
pusha
fs
addr16
loop
xor
or
iret
mov
xchg
jb
scas
and
notb
cmpsb
lods
mov
dec
jge
and
push
pop
dec
pusha
out
inc
sbb
rcrb
imul
sub
lahf
xor
mov
add
popa
es
mov
xchg
dec
or
mov
mov
sbb
pop
mov
cmp
sahf
mov
mov
sti
adc
adc
add
hlt
mov
push
or
mov
mov
data16
cmpsl
test
xchg
sub
cs
or
pop
in
aam
sbb
dec
push
push
pop
jle
lcall
inc
clc
movsb
andl
enter
orl
popa
into
mov
dec
cmc
pop
or
rcrb
lods
pop
dec
je
stos
cmc
addb
adc
test
xor
push
ret
lret
dec
test
out
outsb
jae
xor
sub
out
and
int3
add
mov
cmpsl
sbb
and
stos
xchg
jl
xlat
cmp
sbb
jno
arpl
pop
cwtl
bound
loop
addl
addr16
rorl
push
lods
xor
or
lods
mov
or
sbb
push
mov
dec
out
pop
push
or
mov
add
adc
jno
xchg
pop
jo
test
sub
addr16
push
jne
sub
mov
fstpl
jnp
and
in
pop
push
and
jl
fdivs
out
mov
pop
or
std
gs
or
enter
movsb
dec
mov
fisttpl
jge
mov
inc
sbb
ffree
mov
shll
mov
cmc
adc
inc
fdiv
mov
xor
maxps
xchg
adc
in
pop
push
ret
repz
loope
cmp
pop
add
adc
and
jbe
lahf
xorb
push
test
mov
add
pop
xor
in
add
adc
ss
data16
aam
roll
push
pop
xor
xchg
testb
sbb
out
pop
lds
test
and
iret
pop
loop
nop
iret
push
shll
xor
repnz
push
xor
adc
sbb
test
jns
inc
je
push
push
xor
jmp
adcl
sub
mov
icebp
dec
sub
cmpsl
and
pop
mov
jp
sbb
jmp
jb
cmpsb
dec
imul
or
push
out
jo
das
mov
fcmovnbe
pop
xor
pop
cmc
and
iret
imul
mov
cmp
pop
cmpsl
bswap
inc
ret
jbe
add
pop
repz
sub
mov
aas
mov
lcall
adc
inc
push
rolb
inc
aaa
pmullw
mov
and
fcompl
out
push
ds
loope
test
mov
add
jns
je
dec
sbb
mov
daa
jl
dec
loope
push
inc
call
pop
mov
jne
ljmp
lock
xor
cmp
mov
out
xor
mov
push
pop
dec
iret
lret
into
mov
sbb
and
scas
push
sub
add
xchg
xchg
mov
fstps
daa
pop
dec
cmp
repz
fwait
imul
fldl2e
pop
les
sbb
in
addr16
lcall
pop
sbb
adc
cmp
pop
ret
xor
fs
scas
and
mov
pop
or
mov
test
sahf
adc
dec
lret
fbstp
adc
fs
jbe
vpmacssdql
jne
mov
pop
mov
add
jb
das
sub
fnstcw
insl
push
dec
mov
aad
les
mov
or
ret
stos
adc
adc
fistps
movsb
cmp
movsb
cmp
xor
or
push
outsb
and
xchg
dec
mov
outsb
mov
mov
pushf
dec
es
jmp
mov
adc
adc
mov
movsb
out
jne
inc
outsl
push
jae
js
push
cmp
mov
inc
pop
stos
push
and
mov
arpl
cmp
pop
std
adc
cmp
push
daa
div
mov
sub
call
sbb
lea
jb
in
scas
es
mov
insl
jnp
bound
popa
and
sbb
call
cld
pop
out
ja
lcall
out
fdivp
imul
pushf
dec
pushf
push
or
cmpsb
cmp
fcompl
push
add
push
cltd
in
inc
inc
jp
push
enter
dec
mov
mov
push
out
pop
out
jg
inc
movsb
lea
andl
pop
scas
inc
xchg
outsb
add
into
popa
leave
test
outsl
enter
lahf
ss
push
out
pop
dec
rcl
xchg
adc
cmc
jge
and
fidivs
outsb
pop
ret
pushf
pop
jle
jp
inc
fcompl
fcmovu
sbb
lods
cmp
xor
dec
pop
mov
dec
or
sarl
push
insb
jmp
out
mov
lret
hlt
push
jno
push
mov
push
push
cmp
cmp
bound
fimuls
cs
pop
pushf
ret
rcll
inc
mov
out
imul
dec
mov
xchg
test
sub
jge
in
or
jmp
sahf
pop
jmp
add
adc
dec
jb
jo
and
inc
fdivrs
jecxz
mov
mov
inc
mov
mov
xorb
cli
out
outsl
test
aad
jo
cltd
rclb
mov
stc
loope
mov
imul
jns
repz
mov
cmp
scas
in
add
ret
js
imul
notl
sti
out
xchg
lcall
push
xchg
xchg
mov
fistps
jle
adc
mov
xor
push
stos
and
xor
pop
inc
pushw
xlat
loop
cmp
add
les
inc
mov
pusha
jnp
mov
mov
dec
test
mov
imul
lock
in
daa
inc
mov
jnp
add
das
in
lods
imull
mov
lods
call
mov
or
xchg
jb
sarb
push
xor
xor
mov
rorb
add
repz
mov
xchg
je
sub
jbe
push
mov
xlat
int
sub
js
call
jecxz
add
mov
enter
scas
mov
pop
cmp
outsl
push
push
jns
dec
dec
iret
cmpsl
xchg
dec
jle
subb
push
iret
jno
adc
fiadds
mov
jbe
movsl
call
fcompl
dec
mov
ss
or
movsb
jmp
dec
int
scas
ja
stos
fcmovu
sbb
dec
push
pop
loopne
rcll
pusha
test
inc
out
dec
es
pop
imul
repz
cmp
and
push
mov
fchs
xchg
jnp
addl
pop
test
fs
adc
mov
pop
push
jno
sbb
test
repnz
push
dec
pop
lods
fwait
mov
jg
cmpl
dec
je
cmp
dec
xchg
shl
idivl
outsl
leave
jge
ret
lcall
sbb
push
outsb
outsb
aaa
pop
and
test
inc
popaw
mov
adc
xchg
add
or
sbb
shrb
jl
shr
push
xchg
stc
mov
cmc
sub
sub
inc
sbb
cmpb
jo
mov
add
jle
das
pushf
lret
jno
pop
cltd
sbb
add
adc
das
pop
cltd
xchg
jae
leave
out
mov
and
xchg
jl
mov
xor
inc
add
sbb
rolb
mov
fdivl
andl
xchg
leave
xor
les
insl
aas
push
in
mov
in
sbb
inc
gs
push
shl
mov
out
paddusw
lret
jge
shlb
addr16
sbb
loope
imul
jmp
outsb
sbb
xchg
nop
xchg
xchg
stos
loopne
cmp
int3
push
stc
mov
and
insb
pop
lods
scas
and
mov
rcr
push
sub
les
push
fstpt
pop
mov
lea
test
dec
adc
xchg
les
es
sbb
mov
fs
popf
pop
mov
push
add
push
inc
pop
sbb
dec
orb
cmp
mov
lods
jae
adc
cwtl
pop
movsb
adc
push
mov
push
dec
test
jge
and
cmpsb
insl
jge
call
sbb
scas
test
adc
xor
xchg
mov
mov
xor
cmpsl
adc
std
adc
and
je
leave
in
cli
jp
dec
pop
pop
mov
cwtl
jnp
aaa
test
scas
inc
dec
lods
cmp
fbstp
push
mov
pop
jno
test
cmp
in
dec
in
js
inc
mov
imul
push
pop
add
aaa
stc
push
sub
xor
cmpsl
xor
fdivs
and
out
push
cmp
mov
aad
sbbb
fsubrl
pop
and
pop
mov
mov
and
inc
pop
or
bound
sbb
rcr
xchg
enter
lret
mov
fwait
lods
stos
sub
shld
rorb
mov
popf
cmp
mov
mov
inc
push
mov
mov
movsb
fwait
push
adc
cmp
pop
inc
fisubrs
push
fbld
push
pushf
popa
and
scas
mov
mov
test
ds
cmpsb
add
loop
inc
pop
test
lret
lret
int3
sub
fs
test
pop
mov
das
fmull
orl
jecxz
ss
stos
in
in
js
jne
mov
and
jb
scas
jno
and
sbb
cmc
xor
in
push
push
ret
jb
pop
loopne
pop
in
test
inc
cmp
mov
rolb
cwtl
add
mov
add
fldcw
jge
gs
xchg
pop
repz
addb
dec
cmp
enter
arpl
xchg
je
cmpsl
shll
sub
int
fisttps
jo
cmp
ret
frstor
jno
outsl
lret
repnz
jmp
in
adc
inc
fsubrl
dec
mov
mov
and
loopne
pop
sbb
lret
not
jp
mov
jno
into
xchg
mov
std
loop
xor
fwait
push
stos
jmp
inc
jmp
fs
mov
sbb
aaa
or
sbb
out
loop
sub
mov
pop
mov
lret
fidivs
fxam
mov
flds
dec
mov
fnstenv
and
mov
stos
fsubrs
fidivl
or
jg
int3
mov
sbb
inc
test
push
push
pop
pop
mov
in
jae
mov
pop
ficomps
aad
dec
jmp
add
mov
push
sub
jnp
sahf
and
movsb
out
jle
push
enter
stos
pop
xor
fists
mov
push
push
outsl
iret
or
mov
sub
ss
push
push
mov
sub
scas
sub
fistps
dec
pop
clc
xlat
gs
sbb
push
in
jle
mov
xor
jb
cli
adc
lods
imul
mov
roll
add
mov
push
lret
fdivp
push
cli
test
pop
scas
inc
adcb
adc
sub
xchg
add
lcall
clc
fcompl
or
pushf
jns
dec
or
push
push
push
push
imul
mov
add
push
mov
and
lret
out
push
mov
popf
push
aam
subb
add
insl
jge
in
mov
jae
jl
aaa
inc
lcall
adc
aam
clc
or
cmp
cmp
arpl
push
jb
mov
and
cmp
repz
ljmp
popa
mov
dec
fistpl
dec
rorl
mov
mov
in
cmpsb
dec
fidivl
notb
or
lods
push
test
inc
push
adc
ljmp
mov
jp
mov
movsl
dec
stos
pop
enter
fpatan
cmc
jo
cli
lcall
jge
xchg
and
lret
and
jb
xor
arpl
push
test
in
adc
sbb
mov
add
cwtl
jge
and
push
jecxz
arpl
fimuls
sbb
xor
rorl
out
cmp
jbe
or
test
jns
into
movsl
lock
fbld
hlt
lahf
xor
push
mov
mov
imul
aaa
mov
pop
mov
cmpsl
repnz
mov
out
imul
jg
sbb
lcall
jb
std
and
pop
pop
clc
enter
push
sbb
inc
inc
pop
cmp
jbe
add
pop
pop
sub
sbb
sbb
add
in
iret
mov
xor
xlat
jno
lods
jmp
sub
loop
xorb
imul
adc
cmp
aad
mov
and
pusha
or
int3
std
push
adc
and
rorl
dec
shlb
test
bnd
add
pop
stos
ds
xchg
test
inc
scas
xor
and
lods
mov
pop
xor
jl
dec
mov
cmpsb
mov
xchg
push
fisubrl
jnp
inc
lods
adc
test
lretw
lods
fisubs
jae
mov
jle
xchg
pop
mov
loopne
dec
mov
adc
in
shr
fimull
mov
inc
inc
fs
sub
xchg
dec
icebp
xor
test
and
push
lret
jb
mov
loopne
push
fwait
push
stc
mov
jle
pop
popa
test
push
shrb
xchg
fnsave
notb
mov
add
inc
mov
sbbb
push
iret
or
aaa
push
or
push
add
aam
pop
test
int3
inc
dec
mov
sub
mul
mov
and
inc
sbb
inc
shl
ret
ficompl
addr16
repnz
or
fsincos
cld
mov
sbb
pop
sub
ds
dec
mov
in
fistpll
cli
sub
xor
xchg
push
push
mov
aad
jae
xchg
jg
mov
loopne
mov
ret
imul
sub
push
jo
sub
xchg
jne
mov
gs
sub
imul
decl
sahf
mov
out
fcomps
lock
cmp
push
jg,pn
mov
fwait
icebp
push
cltd
jmp
mov
cmp
mov
mov
jns
adc
push
dec
push
jne
and
push
mov
cmpsb
sbb
in
mov
loope
imul
mov
repnz
sarb
ljmp
dec
test
fwait
aaa
inc
out
inc
call
lea
xchg
xor
xchg
cwtl
push
clc
xorb
fs
xor
jae
lock
repnz
cld
sub
shlb
add
sub
ljmp
mov
aas
xor
mov
sbb
test
cmp
xchg
in
xchg
adc
sbb
xor
sti
aas
pop
or
lret
repz
pop
lock
or
adc
cltd
adcl
nop
inc
in
xchg
mov
mov
or
cmp
repnz
cmp
jns
dec
mov
fcoms
xlat
or
sub
jecxz
dec
sbb
mov
jg
not
sbb
inc
addr16
lcall
add
orl
add
pop
out
pusha
cmpsb
adc
jle
ja
leave
rol
in
jmp
pop
dec
cmpsl
sahf
pop
loope
clc
loopne
out
push
cmp
sub
pop
or
inc
xor
mov
decl
fidivl
inc
cli
ja
add
mov
stc
pop
lahf
inc
scas
in
andl
push
mov
test
lods
mov
enter
dec
out
aam
push
pop
dec
ret
sbb
push
xlat
dec
rorb
push
out
in
jns
xor
push
out
or
xor
test
scas
pushf
or
iret
in
test
jge
stos
inc
mov
leave
das
aam
and
pop
cmp
divl
icebp
or
sahf
cmp
sbb
jp
cmp
push
sahf
pop
repz
add
orl
lea
cmpsb
xor
sbb
inc
fstps
mov
and
add
sub
xor
in
insl
or
add
ret
sub
mov
sub
mov
aas
sub
mov
pop
std
push
das
cmp
mov
xor
shrl
and
and
movsl
aas
popa
in
push
popf
jl
addr16
mov
adc
inc
loop
inc
jp
fcoms
xor
fnsave
inc
divl
cld
mov
fistl
pusha
jns
jbe
dec
popa
mov
xchg
fsubrl
sub
std
or
mov
gs
jecxz
mov
add
sub
aaa
sar
adc
xor
rolb
cmp
add
lret
cmp
adc
add
sbb
push
sbb
test
jl
pop
jae
je
add
cld
mov
mov
mov
stc
mov
into
mov
pop
mov
pop
pop
xchg
mov
jae
inc
in
fxch
mov
and
push
adc
lret
rcrl
daa
ds
out
nop
lahf
mov
rcll
out
xchg
pop
xor
dec
and
lock
mov
movd
cld
push
cmc
mov
das
aam
leave
repz
ret
scas
stc
mov
pop
add
call
imul
fwait
notb
lea
jb
lods
movsl
adc
adc
fisubl
dec
dec
xchg
ja
clc
inc
or
sbb
push
sbbl
mov
cmp
jp
mov
jae
mov
flds
jbe
pop
inc
outsl
mov
mov
test
or
cmp
lea
bound
test
daa
cmpl
push
icebp
inc
clc
sbb
jb
mov
pusha
dec
xchg
jl
in
aas
sahf
jl
xor
out
mov
fisubs
mov
push
scas
in
lahf
mov
sub
xchg
add
add
mov
cs
jmp
jecxz
stc
daa
and
jnp
mov
fwait
xchg
and
and
lahf
shlb
sub
mov
or
test
inc
mov
gs
mov
mov
push
mov
adc
pop
jns
xor
outsb
xor
aad
pushf
mov
data16
gs
pop
and
xchg
dec
repz
cs
dec
pusha
pushf
cmp
mov
shll
inc
in
add
aad
mov
repnz
lods
mov
test
dec
scas
cmp
and
and
or
xchg
mov
adc
lcall
or
mov
ja
mov
les
popf
aad
jg
int3
loop
sti
xlat
push
push
lea
jmp
add
xor
jbe
in
xchg
dec
imul
iret
stos
in
ror
jne
je
jmp
test
in
fwait
aam
push
out
mov
shlb
repnz
push
mov
pusha
rclb
out
mov
int
sbb
cmp
jmp
dec
mov
in
repnz
push
push
stos
cmpb
fildl
or
sub
jo
sub
rol
adc
mov
mov
cmp
add
data16
mov
sbb
repnz
popa
mov
push
hlt
cmp
mov
test
mov
in
add
dec
fs
push
jge
daa
cmp
push
jae
outsb
sbb
insl
pop
incb
pop
dec
lock
push
jmp
adc
repnz
jle
leave
mov
nop
sub
pop
pusha
or
jns
pop
xchg
jbe
mov
jp
in
ds
push
jecxz
cld
imul
mov
push
cltd
pusha
loope
fs
add
nop
pop
and
jb
cmp
mov
inc
inc
fidivs
jecxz
sbb
outsb
clc
adc
into
lods
fcoms
cmpl
out
pushf
mov
aam
inc
xchg
pop
jmp
inc
push
lret
insb
std
aaa
into
cs
jno
push
push
in
std
repz
addr16
jae
das
mov
fidivl
je
push
imul
xor
push
jmp
cmc
push
mov
loope
cmpl
pop
push
imul
inc
push
sbb
in
xor
call
mov
pop
fsubr
imul
push
push
cmc
rcr
outsb
push
aaa
xchg
inc
sub
mov
stc
pop
out
fidivrs
inc
pop
call
xorl
scas
je
scas
cmp
and
neg
cld
cmp
cmp
mov
rcl
mov
sub
adc
lock
xor
pop
pop
popa
xchg
popf
push
dec
xchg
push
aas
push
push
sbb
jmp
daa
pop
insb
daa
mov
sarb
lods
xchg
pusha
and
inc
fdivrl
ret
cmp
lods
aaa
inc
fcomps
cltd
adc
repz
add
jae
jmp
in
pushf
cli
or
lds
ret
mov
push
inc
enter
push
cmc
int
out
add
and
pop
pop
mov
les
and
pop
fiadds
inc
cmp
jl
push
enter
xchg
mov
pop
sbb
repnz
pop
icebp
and
loop
fdivrs
scas
and
shrb
xchg
addr16
in
pop
inc
out
mov
imul
xchg
imul
cmc
xchg
xor
xor
mov
cmpsb
outsl
xlat
push
and
dec
rorl
adc
std
arpl
pop
mov
jle
loope
ret
mov
jo
and
jmp
xorl
fsubr
out
lret
adc
push
fnsave
rcrb
jecxz
xchg
ljmp
es
sub
dec
mov
pop
ja
push
repnz
test
sahf
ret
test
xorl
xchg
rol
pop
cmp
imulb
cli
jl
dec
dec
call
int
in
pop
or
jbe
inc
stos
push
jae
jno
pop
or
inc
xchg
std
mov
cmp
lahf
out
pushf
aad
pushf
clc
xchg
icebp
imul
sar
div
mov
pop
test
arpl
into
das
mul
dec
mov
mov
shrb
lods
shrb
mov
leave
sbb
push
shlb
pop
mov
popa
dec
shrl
out
mov
and
fidivl
mov
loopne
orl
imul
fidivs
mov
jns
push
lods
mov
cmpsl
jbe
ds
and
sbb
das
and
push
dec
in
inc
enter
imul
lahf
lret
std
jo
mov
sub
xor
inc
add
mov
push
mov
insb
cmpsl
xor
fmuls
xor
cmp
bound
adc
test
inc
aas
inc
icebp
insb
arpl
test
repz
lea
mov
or
pop
mov
fcompl
pop
add
cmpsl
out
cs
cmp
jnp
xchg
dec
xchg
pusha
and
lds
mov
syscall
sub
ljmp
cmpsl
jecxz
push
test
pusha
cs
xor
shrl
lea
push
nop
clc
out
add
aad
mov
sbb
pop
dec
sub
inc
mov
dec
out
aaa
pop
cld
sti
mov
cmp
lods
mov
bound
mov
pop
and
and
sub
test
rclb
add
add
inc
sti
pop
pop
pop
out
in
rcrl
jge
mov
ja
jbe
stos
arpl
pushf
test
xor
pop
ds
popf
mov
sub
scas
sbb
xlat
jmp
pop
call
test
sub
scas
pop
aaa
movsb
jnp
inc
lods
inc
jp
inc
fdivrs
xchg
sbb
or
arpl
adc
cld
shrb
notb
call
push
sbb
inc
aad
push
lock
jae
jo
cmp
int3
jmp
dec
out
and
frstor
aas
mov
push
movsl
pop
xor
les
jb
movsb
push
out
sub
xchg
pusha
jno
cmp
insb
negb
cmp
or
mov
add
fsub
cmpsb
repz
or
jge
adc
mov
cwtl
loop
rclb
sub
orl
fldl
mov
lahf
xchg
add
in
jecxz
addl
shl
shlb
out
pop
nop
stos
pusha
aaa
lret
rcll
popf
mov
cmpsb
sbb
mov
into
sub
push
mov
ficompl
cli
mov
push
fwait
es
jno
or
cmpsl
pop
mov
push
call
cmp
ret
sbb
popa
sub
xor
in
int3
pop
ret
push
mov
loope
xchg
inc
pusha
mov
cmp
jp
mov
in
fildl
or
add
imulb
fidivs
jecxz
loope
test
out
inc
imul
ja
add
ret
and
pop
xor
in
add
pop
adc
es
ljmp
xchg
xor
and
or
mov
jmp
loop
fiadds
out
int
pushf
dec
les
cwtl
aad
loop
xchg
pop
push
push
and
push
pop
xor
xor
scas
inc
cmpsb
adc
mov
mov
sbb
dec
imul
cmpsb
ds
push
sub
push
aad
clc
int
dec
cmp
sbb
daa
pop
movsl
cmp
or
xchg
sub
leave
mov
cmp
mov
pop
pop
pop
or
mov
cmp
test
inc
dec
sarl
addb
jnp
sbb
sub
inc
adc
lahf
sub
push
cmp
mov
shrl
adc
xchg
dec
push
and
test
ss
jl
mov
sub
stos
frstor
dec
sti
mov
mov
gs
mov
adc
andl
push
or
jb
jl
ret
and
hlt
jo
or
btsl
cwtl
fsubs
stc
je
loope
shr
add
fstl
jle
inc
shrb
push
adc
iret
popf
dec
mov
adc
jmp
and
fldt
xchg
sbb
subb
pop
fcoms
icebp
push
pop
out
fldl
movsl
into
xchg
mov
sbb
andl
test
inc
push
outsb
andb
ficoml
add
insl
xor
mov
test
xchg
sbb
pop
xchg
loop
sub
loope
or
mov
rcll
push
pop
cmpsl
das
mov
popa
enter
dec
iret
fstpl
xor
jle
inc
mov
sub
dec
mov
jp
mov
push
dec
adc
pop
cmpsb
and
mov
xchg
sbb
sahf
dec
mov
stos
gs
inc
in
shl
ss
js
in
call
outsb
out
push
popa
mov
decb
in
xlat
or
xchg
add
mov
fstpt
test
jno
xor
push
jmp
sbbb
mov
sub
dec
xor
pop
xlat
sbb
or
jns
cmpsl
movsb
mov
push
dec
inc
push
jne
pop
cmc
dec
sbb
and
add
orb
pop
aaa
shll
movsl
fidivl
fldenv
lods
mov
or
dec
add
pop
xchg
lods
inc
out
fstl
inc
cmpsb
mov
xchg
mov
outsb
jmp
fstps
xor
push
adc
jne
push
push
shl
xchg
or
dec
xlat
ljmp
in
mov
pop
adcb
dec
fsub
jl
lock
mov
mov
xlat
sub
or
xchg
and
xchg
out
dec
or
filds
sub
jae
dec
push
sarl
cli
jne
adc
mov
inc
pop
in
aad
fcmovbe
sahf
xor
jg
les
dec
fbld
das
insl
inc
or
std
xchg
pop
sub
scas
dec
jge
add
outsl
lret
pop
jge
movsl
fnsave
lcall
cmpsb
sbb
xchg
adc
mov
nop
stos
dec
es
shr
add
popf
jg
nop
mov
mov
lret
jge
adcb
aam
xor
call
inc
dec
dec
pop
int
add
aam
xor
data16
pop
js
popa
push
mov
xchg
imul
popf
stc
sub
into
pop
es
adc
or
add
inc
aad
sbb
mov
int
mov
ljmp
out
cwtl
or
mov
or
scas
push
ret
jbe
lods
subl
enter
sbb
aaa
mov
das
sub
cld
mov
push
cli
inc
dec
jno
test
mov
lea
lahf
push
sub
dec
mov
gs
add
out
mov
adc
xchg
pushf
lods
and
fdivl
test
dec
lds
xor
jmp
rcrl
jle
push
mov
dec
dec
in
push
in
sti
xor
bswap
repnz
ds
loope
mov
sti
mov
stc
aad
dec
loopne
ret
adc
sbb
scas
cmp
xchg
sbb
sahf
cmp
out
movsb
jp
jl
das
pushf
popl
repnz
adc
aad
fcompl
inc
scas
jl
dec
insl
mov
cmp
repnz
not
in
mov
into
sub
and
bnd
lcall
lret
lret
test
jae
popf
dec
add
std
and
scas
and
inc
clc
jb
mov
adc
lret
fidivs
aas
mov
pushf
cmp
xchg
jne
inc
pop
into
jne
ss
outsl
je
stos
in
mov
cmpsl
pop
or
cmp
cltd
addb
jo
fwait
sub
test
mov
jle
sbb
or
rcl
stos
xor
lock
or
adc
sub
inc
sahf
stos
in
fwait
jnp
loope
jl
xor
fs
inc
jb
adc
xlat
pop
push
out
pop
aas
xlat
outsb
dec
pop
hlt
ja
push
jne
xchg
push
movsb
mov
in
push
add
mov
cmpsl
rcl
add
xchg
and
ficomps
test
jnp
pop
negb
test
pushf
sbb
adc
push
lahf
mov
cmpsb
sbb
lea
xor
js
ret
nop
fsubrl
ja
inc
dec
fs
ljmp
jns
xlat
mov
pop
jecxz
loop
ja
xor
add
mov
jae
and
push
mov
xchg
pop
test
sbb
fsubs
lret
fcoms
lods
or
cmp
lret
out
lahf
sbb
pop
cmp
gs
pop
dec
mov
add
xchg
push
xchg
ret
in
nop
dec
mov
xchg
xlat
xchg
mov
mov
and
cld
cmp
push
mov
enter
loop
test
bound
mov
out
adcl
pop
mov
dec
push
cmp
mov
inc
hlt
push
lahf
fs
iret
in
pop
dec
fisttps
insb
outsw
insl
sbbb
test
xchg
shl
adcb
in
mov
push
lock
movsb
in
jp
sbb
mov
push
jp
enter
je
inc
xchg
sbb
fisubrl
cmpsl
add
and
jne
pop
cmpsl
sub
fisubrl
dec
pop
test
cmp
jge
sbb
inc
xor
sti
movsb
push
xor
into
pop
in
push
lcall
sahf
lods
sbb
jae
enter
sbb
es
outsb
ljmp
xor
popl
sub
sub
repz
ret
sub
out
sub
mov
popl
dec
test
cmpsb
pop
nop
push
adc
movsl
sti
mov
lea
ret
outsl
adc
call
jl
push
mov
adc
test
fwait
insb
dec
jnp
repz
push
dec
adc
inc
mov
pop
xchg
or
idivl
in
fstp
ljmp
xor
inc
std
stc
nop
imul
jno
mov
scas
cmp
pop
xor
adc
inc
incl
clc
fnsave
push
sbb
fldt
push
lods
dec
add
and
pop
stos
lods
inc
fnstsw
pop
push
fnsave
mov
cmpsl
sub
je
add
lahf
int3
and
pushf
mov
push
xchg
test
in
lds
mov
pop
aam
mov
outsl
es
in
lea
add
push
xorl
lret
iret
int3
adc
ss
pop
in
xor
xchg
or
dec
out
sarb
ds
test
dec
insl
add
push
pop
popf
mov
popa
sti
and
add
mov
aam
push
shrl
daa
icebp
jne
hlt
popl
jl
in
push
jno
push
shlb
ss
jo
out
test
sbb
int3
in
aam
popl
into
pusha
test
shrb
xchg
fisubrs
jecxz
xchg
cmp
in
imul
sbb
or
dec
inc
fnstcw
pop
cmpsb
push
imul
lock
jge
or
mov
push
data16
cwtl
xor
imul
inc
fnstsw
push
rolb
add
xchg
ret
sub
pop
and
scas
or
xlat
outsb
pusha
pushf
jo
inc
push
mov
fisubrs
push
sub
xor
loopne
nop
lcall
pop
cmp
int3
aad
fs
clc
inc
cmp
push
inc
dec
sbb
insl
into
fsts
add
scas
xor
test
test
ss
int3
enter
or
xor
iret
adcb
add
push
push
dec
scas
int3
insl
inc
sbb
lods
mov
dec
out
repz
arpl
movsb
jns
mov
jp
xlat
insl
pop
jecxz
sub
adc
jmp
fistpl
mov
dec
pop
add
mov
fimuls
jbe
adcl
dec
mov
xchg
cs
push
dec
dec
xor
dec
out
cmp
adc
mov
add
or
cmp
or
dec
popf
mov
adc
cmpsl
in
fmuls
cmpsb
cltd
pop
push
add
ret
out
int3
and
push
ss
es
push
fistl
xor
jcxz
and
mov
mov
subl
cmp
repz
sahf
push
popf
mov
push
adc
insb
dec
add
cmp
and
xor
sbb
push
mov
mov
adc
outsl
in
movsl
je
adcb
mov
out
dec
add
lret
cmpsb
aam
clc
mov
and
push
out
mov
cmp
loope
ss
mov
ss
jae
adc
push
out
jnp
xor
sbb
add
das
mov
mov
sub
cmp
mov
mov
mov
add
roll
or
rcrl
or
rcl
xor
jno
pop
fldl2t
inc
xchg
mov
std
adc
xchg
jl
movsb
push
jbe
popa
out
fsubs
aas
leave
cmpsl
mov
roll
jb
rcll
cmp
mov
sbb
mov
pushf
adc
adc
fs
ja
adc
xor
mov
sub
movsl
and
add
and
in
dec
ds
cwtl
movsl
shrl
xor
sbb
inc
fiadds
lret
fdivrl
stc
mov
push
lods
lret
mov
push
cmp
jp
and
pop
push
sarl
ljmp
jb
iret
stos
pop
xchg
out
shrb
adc
jno
test
mov
cmpsb
pop
xor
fs
nop
jb
xchg
imul
jge
sub
fildl
lret
sbb
add
mov
mov
test
xchg
pop
nop
mov
pop
jbe
movsb
mov
sbb
inc
mov
shr
je
es
repnz
dec
das
fwait
mov
xchg
repnz
fs
jp
mov
cmp
lahf
scas
push
cld
loop
jb
pop
pop
xor
pushf
mov
cli
out
mov
push
xchg
mov
vpmulhuw
insb
cmc
xchg
xchg
insl
or
xchg
jg
mov
fmull
clc
push
lea
xor
outsl
cmpsb
sub
jg
mov
popf
int3
pop
xchg
adc
mov
insl
mov
jbe
jmp
pop
out
cmpb
add
arpl
inc
mov
mov
and
mov
int3
lret
sbb
fdivs
inc
cltd
sbb
enter
dec
rcrl
ret
je
jecxz
hlt
addr16
and
notb
sbb
push
stc
popf
dec
and
mov
and
xchg
push
adc
xchg
mov
xor
sub
in
fisubl
jg
rep
inc
data16
adc
cld
fidivs
mov
sbb
pop
arpl
sahf
lds
and
mov
lret
sbb
hlt
jl,pt
lods
push
jge
xchg
mov
outsl
in
jb
sahf
call
pop
inc
jmp
sahf
xlat
int
jp
cmp
clc
lret
cmc
scas
into
push
js
jg
repz
lret
xchg
add
pop
cmpsl
out
negb
push
add
dec
xor
mov
scas
push
lcall
sti
outsl
loop
mov
xchg
mov
add
in
and
sarb
jl
in
loopne
jmp
cmp
sbb
lock
inc
jecxz
cld
jl
mov
cs
inc
stos
and
out
jp
xchg
out
add
sub
sub
add
inc
pusha
ljmp
movsb
mov
addb
inc
cs
enter
hlt
jb
dec
icebp
jns
xchg
cs
pop
xor
dec
leave
add
sbbb
jbe
push
call
add
jo,pt
inc
aas
push
pusha
testl
insb
push
pushf
adc
cmpsl
ds
xchg
mov
push
dec
in
shl
jecxz
int3
cmp
outsl
cmp
xor
sub
clc
sbb
mov
mov
lock
pop
rol
sbb
popa
cmp
xor
aam
xlat
mov
jecxz
pop
les
ds
mov
mov
inc
mov
out
movb
add
push
lods
mov
adc
les
ja
sub
cld
and
mov
stos
pop
hlt
jbe
inc
stos
push
push
mov
push
xor
insb
and
adc
or
insl
sahf
sub
xchg
jno
xchg
sbb
pop
inc
adc
mov
sub
mov
ret
xchg
aas
xor
ljmp
mov
fwait
ss
sbb
test
dec
pop
and
inc
aaa
lret
add
dec
nop
sub
cmpsb
les
lahf
imul
cmp
pop
pop
das
add
adcb
test
mov
out
dec
dec
loop
pop
outsb
jl
sub
add
and
iret
flds
add
lcall
sub
inc
jnp
mov
xchg
cmp
or
out
cmp
pop
ret
iret
push
mov
inc
fistl
fsts
sub
lods
fldcw
ret
rcrb
cmc
pop
jg
mov
pop
les
popf
jecxz
adc
nop
fistps
ss
sbb
outsb
mov
ffree
adc
bound
mov
rcr
jmp
xchg
add
push
test
dec
inc
in
clc
fdivs
test
dec
and
sub
stos
adc
mov
jb
lea
jb
je
repnz
data16
arpl
pop
pop
or
xchg
cmpps
fwait
sub
les
call
loop
in
shld
cmp
cmp
lahf
insb
aas
pop
fwait
adc
xor
sti
inc
sub
cmp
pop
inc
scas
add
add
test
fdivp
or
bound
push
push
iret
insb
lea
mov
mov
ja
int
sub
imul
xchg
jno
dec
and
data16
push
or
and
adc
sti
xchg
xchg
mov
push
test
xchg
inc
push
ja
ret
repz
std
cmpsl
pop
cmp
xor
sbbb
mov
lret
xchg
adcb
jmp
and
xchg
mov
loopne
sbb
xchg
mov
xor
xchg
insl
fisubrs
adc
mov
sti
out
inc
mov
dec
pop
movsl
mov
sbb
mov
test
inc
fidivrs
push
jle
pop
mov
les
mov
mov
pop
addr16
arpl
sbb
mov
pushf
sub
shll
push
shld
sbb
pop
mov
dec
cld
adc
push
or
shll
je
iret
mov
sub
lods
jmp
lods
pusha
negl
add
loop
push
cld
and
jno
rorb
insl
rcll
sbb
pmaxub
fistpl
sar
cld
shrl
sub
push
iret
rcr
int
mov
out
cltd
sar
pushf
clc
xchg
clc
and
scas
inc
xchg
scas
sub
adc
inc
cltd
push
push
mov
ss
adc
movsl
jbe
in
andl
jno
add
dec
jbe
add
fs
push
cltd
mov
xor
test
ds
aaa
xchg
das
pop
scas
data16
fstl
enter
jne
inc
scas
mov
lahf
jo
xchg
jmp
lahf
jmp
enter
inc
push
loopne
jae
pop
int
repnz
push
push
imul
mov
je
icebp
fcmovnb
stos
mov
cmp
gs
arpl
sahf
outsl
les
add
dec
popa
inc
and
loopne
leave
mov
mov
and
test
loop
cltd
inc
cmp
cmp
in
test
dec
add
rorl
mov
xorl
or
adc
std
ja
imul
xchg
adc
outsb
out
jo
sbb
xor
repz
xor
out
dec
inc
mov
adc
adc
mov
pop
mov
sti
insl
into
xchg
mov
cmp
xchg
pop
mov
je
xchg
sbb
xor
adc
xor
imul
inc
dec
fistl
call
dec
fldcw
cmpxchg
sbb
add
mov
fistl
fdivrl
push
adc
cli
push
push
mov
mov
dec
sub
lcall
xlat
dec
inc
sub
divb
repz
jb
stos
xchg
mov
adc
int3
jp
je
dec
lcall
pushf
lds
lret
inc
adc
xor
jb
cmc
push
out
dec
push
stc
enter
aad
mov
push
xor
pop
movsl
icebp
xchg
sub
jg
enter
dec
mov
push
lahf
gs
popa
sub
shl
or
add
push
adc
push
push
xchg
out
stos
add
xor
adc
mov
lcall
mov
fcoms
push
subl
cmp
inc
or
mov
aam
xchg
sub
ret
mov
jno
cmp
mov
cltd
adc
add
pushf
in
cltd
mov
ss
insb
scas
cwtl
popf
mov
shr
cmp
mov
cmpsl
sub
sub
xor
mov
push
clc
outsb
xor
scas
push
stos
fiaddl
adc
jge
adc
xchg
jp
lds
mov
aaa
test
insb
pop
lock
adc
pop
xrstors
aaa
push
movsl
icebp
dec
sbb
sti
test
lret
cld
sbb
ret
jo
insl
cli
mov
or
sbb
sub
jno
shll
xchg
out
lahf
insb
push
lods
pop
lods
xor
fwait
mov
jbe
sub
push
std
push
int3
outsb
int3
push
fdivl
insl
aaa
cmp
insl
test
scas
sub
inc
adc
jge
inc
push
jne
sti
jp
and
aaa
push
inc
fmull
inc
cs
ficoms
sub
xor
popf
scas
nop
movsb
add
sbb
sub
mov
jae
lcall
cwtl
sub
xchg
cli
into
scas
push
sub
fldl
cmp
roll
sub
mov
data16
lea
out
inc
dec
movsb
out
add
cs
or
dec
cmp
test
ljmp
pusha
xchg
packuswb
mov
out
xchg
pushf
push
lock
out
icebp
mov
mov
jb
stc
sbb
adc
scas
or
outsb
cld
call
cmc
mov
cmp
scas
jo
jmp
rcrb
shrb
popf
cmp
jnp
aam
mov
cmp
dec
bound
movsl
lds
dec
cltd
sbb
dec
sub
mov
xor
daa
xor
xor
mov
sub
adc
and
adc
data16
pop
lret
stos
mov
shll
loope
repnz
lock
or
xor
arpl
lods
xor
mov
cmp
adc
lods
cmp
fcoms
shr
mov
push
add
jo
pop
ficomps
jae
xor
daa
lahf
testb
xchg
imul
adc
cmp
jno
mov
popf
movsl
icebp
xchg
outsl
pusha
or
and
shrl
stc
push
sbb
ret
ret
sbb
leave
xor
fcom
scas
or
sub
adc
adc
pop
lods
int
shl
notb
sub
xor
shl
jb
xchg
dec
cmp
popa
xor
dec
int
into
outsl
jns
push
inc
cmpl
mov
mov
lea
adcb
or
dec
add
test
mov
aaa
dec
std
xchg
stos
and
xchg
add
repz
popf
sub
jb
push
test
inc
fld
rcrl
pop
xor
jb
cmp
out
fcompl
or
add
test
out
movsb
push
add
lar
pop
push
scas
dec
push
sub
nop
lods
push
les
or
xchg
stos
call
mov
popf
stos
fnstcw
push
mov
push
jb
sub
jmp
add
nop
pop
cmp
nop
arpl
dec
sub
mov
cmp
mov
cltd
jns
and
les
movsw
rclb
lods
fildl
movb
inc
incb
add
data16
xchg
out
hlt
movsl
and
aaa
loopne
dec
mov
fisttpll
test
and
or
cld
cmp
popf
adc
xchg
lret
mov
popf
gs
inc
push
xchg
sbb
sub
in
cltd
cmc
cmp
mov
jae
pop
imul
pusha
movaps
lret
inc
dec
ret
dec
aam
stos
and
jbe
ja
and
jae
icebp
test
stos
cmp
movsl
out
xchg
pop
pop
pop
mov
xchg
inc
in
icebp
mov
cmp
push
data16
dec
xor
add
mov
add
mov
in
scas
rcrb
mov
fldenv
shr
enter
les
mov
xchg
sub
clc
xchg
stos
sub
lret
cmc
or
icebp
cmp
sub
popf
jne
add
pop
cwtl
jnp
push
shlb
add
fcomps
repz
adc
mov
aaa
inc
lcall
sbb
jp
iret
fldt
iret
mov
js
push
dec
call
daa
ret
pop
clc
cmp
ds
pop
jge
push
scas
mov
das
pushf
mov
dec
pop
arpl
add
adc
sub
dec
dec
aad
jmp
jl
push
es
out
aad
inc
jp
and
push
shl
pop
jb,pt
cmp
xor
in
xchg
ds
push
cltd
out
fwait
mov
idiv
dec
xchg
xor
xor
and
mov
gs
sub
mov
scas
lds
imulb
jns
mov
gs
fdivl
adc
sbb
mov
repnz
push
stc
lods
cld
out
cs
mov
mov
es
popf
and
jge
setp
push
inc
sti
mov
out
push
push
std
cmp
imul
push
xchg
outsb
mov
loopne
jo
xchg
mov
pop
mov
shr
and
in
fstl
sub
sbb
mov
arpl
push
xchg
popl
outsl
aaa
dec
inc
in
pushf
mov
cmp
cmp
push
cmp
std
xchg
and
lret
sbb
mov
push
xchg
lods
mov
fsubrs
pop
icebp
mov
cs
movsb
testb
lds
popf
mov
iret
in
test
cmp
mov
pop
aas
pop
into
in
jb
fdivrl
sub
mov
xchg
loope
jge
mov
stos
or
mov
jns
and
xor
pop
add
xorb
mov
pop
fimuls
adc
test
es
mov
aas
or
pop
inc
fiadds
jns
imul
adc
mov
cli
repz
pop
test
pop
int
leave
jecxz
cmp
jl
fwait
mov
int
mov
das
pop
es
shlb
in
icebp
dec
dec
mov
notl
cwtl
ljmp
xchg
add
push
repz
aaa
dec
stc
std
inc
into
int3
repz
iret
test
in
add
push
pop
in
sub
cmc
adc
jne
cld
popa
hlt
fdivl
mov
mov
ret
popa
aam
data16
ror
out
or
cmp
xchg
in
pop
outsb
push
subl
jnp
imul
scas
dec
testb
mov
nop
repz
mov
dec
fs
stos
push
mov
shrl
or
inc
push
jb
sbb
dec
daa
stc
adc
dec
out
jnp
lea
std
stc
popf
xor
sbb
lahf
rol
fadds
xchg
repnz
sub
loope
adc
rol
jge
aam
mov
jle
fidivrl
fdiv
ret
mov
mov
in
pop
push
imul
ret
mov
dec
jo
jle
xlat
pop
call
aam
repz
int
lods
dec
xchg
pop
cwtl
in
out
movsl
outsl
adcb
cmpsb
jmp
cli
xchg
outsl
jl
push
lret
fmull
and
pop
mov
mov
loop
mov
test
mov
mov
out
push
insl
dec
sub
lcall
cmp
jnp
mov
jns
in
test
shr
mov
or
mov
int
or
ret
fisubl
sti
ret
cmp
dec
out
lock
pop
imul
das
icebp
inc
pop
and
or
incl
or
push
fwait
mov
xorb
jno
int
stc
and
push
dec
out
dec
push
repnz
pop
imul
lahf
fstsw
push
add
inc
mov
add
mov
subb
inc
jnp
sub
mov
jecxz
and
enter
jo
mov
js
or
lcall
int3
loop
mov
push
in
outsl
add
mov
cltd
repz
stos
jno
lock
pop
jnp
nop
mov
stos
cmp
rorb
cmp
cmp
cmp
dec
mov
lret
pop
aad
pop
icebp
xchg
clc
data16
sysenter
js
outsb
bound
nop
mov
mov
jns
xchg
cmp
mov
or
decl
aad
jmp
add
in
int3
in
cmp
adc
pop
jae
sbb
cmpsb
push
arpl
lcall
jo
and
lock
adc
sbb
sti
xchg
rorl
outsb
movsb
sbb
push
mov
and
into
leave
jne
fisubrl
iret
mov
int
das
add
push
pushf
jbe
ljmp
push
mov
lods
arpl
mov
sub
xor
xchg
push
cltd
out
testl
int
out
add
add
mov
xchg
iret
add
or
fwait
jge
repz
push
fisubl
aas
orb
in
jne
cmpsl
adc
into
mov
jmp
cli
xchg
ja
push
xchg
or
call
add
inc
or
jp
mov
or
das
inc
jns
cmp
sbb
das
mov
add
or
inc
mov
sub
cld
pop
mov
outsb
xchg
mov
fmul
es
lahf
sbb
jge
aam
cmpsb
pop
adc
mov
outsl
nop
inc
ds
ja
shlb
xchg
pop
adc
sub
mov
xchg
cmc
pop
rclb
outsl
xchg
sbb
loope
adc
lea
adc
leave
movsl
fcoms
fsubrl
dec
inc
sbb
sbb
test
sbb
xchg
rorl
sbb
xchg
or
aas
mov
inc
lods
mov
frstor
add
dec
mov
pop
sbb
stos
inc
sbb
inc
popa
mov
fiadds
xor
lods
xor
out
xor
add
add
push
xor
rolb
iret
mov
sub
adc
ljmp
dec
stc
mov
ds
xchg
pusha
mov
dec
rep
ror
cmp
xor
leave
pop
sub
jo
lret
popf
std
push
popf
mov
int
xor
lcall
jg
add
mov
lods
cmp
lods
cli
push
pop
xor
inc
jecxz
lret
jae
lret
dec
int3
insb
or
fisubrl
es
and
test
scas
scas
lea
sub
push
adc
gs
pop
mov
and
scas
cmp
add
pop
inc
mov
gs
inc
aad
lret
push
imul
push
imul
addr16
xchg
xor
push
daa
fbstp
cmp
sub
sub
lahf
mov
test
aad
fwait
jbe
imull
mov
mov
sbb
mov
test
das
mov
mov
jp
mov
xor
js
pushf
outsl
in
mov
lret
cld
xchg
les
push
enter
lods
push
ljmp
popa
inc
inc
pop
clc
push
pop
rcrl
out
in
testb
adc
filds
cmc
sub
nop
cs
sahf
sbb
and
lret
sbb
aam
lods
movsb
cmp
je
ds
cmpsl
ds
call
pop
push
cmp
imul
xor
fistpl
xor
sbb
test
lea
jnp
adc
push
or
push
push
mov
fistl
mov
jl
repz
orb
sbb
xchg
xor
stos
adcb
fsubl
xor
jnp
mov
nop
xadd
nop
push
mov
xor
sub
cld
lods
inc
cs
lock
xor
arpl
shl
adc
inc
pop
jne
push
loopne
mov
xchg
mov
lret
push
inc
data16
mov
mov
inc
mov
mov
notb
aam
adc
jno
mov
in
xchg
xchg
pop
push
inc
shlb
and
and
fs
lcall
lods
cmp
sub
mov
imul
mov
jbe
inc
mov
jecxz
outsl
inc
bound
mov
js
push
subb
outsb
shrl
loopne
out
sbb
rclb
rcrb
ljmp
push
out
aas
aaa
pop
xlat
outsb
dec
xlat
inc
lods
stc
mov
sbb
and
mov
jae
enter
lret
addr16
push
inc
lock
icebp
fcompl
dec
adc
shrb
xor
dec
ret
jns
in
addr16
xor
dec
lcall
sbb
aaa
or
in
es
mov
sub
xorl
int3
pop
loop
or
dec
ficompl
lds
jl
pop
sarl
cs
sti
xchg
stos
and
mov
mov
cs
int
dec
push
cmpsl
bnd
dec
daa
leave
rol
jge
xchg
lods
jp
push
lods
mov
inc
fwait
fwait
mov
mov
xchg
std
dec
inc
movsl
movsl
sbbb
leave
mov
adc
popa
mov
and
inc
je
cmp
jl
lret
mov
lcall
orl
dec
orl
loop
fwait
sub
cmp
fdivs
or
bound
sbb
enter
mov
adc
loopne
push
mov
nop
outsb
in
dec
cltd
sbb
dec
xor
dec
or
xchg
dec
mov
xchg
hlt
pop
adc
insl
scas
dec
movsb
pop
sub
das
pushf
mov
lods
out
inc
xor
test
inc
inc
mov
cmp
sub
into
in
mov
cmp
ficoml
popf
lds
and
sbb
or
ret
int
adc
push
out
addr16
mov
mov
inc
aad
sbb
arpl
mov
fcmovnbe
mov
loope
stos
jbe
lcall
jecxz
xchg
mov
sbb
out
mov
ljmp
jmp
cli
jmp
movsb
aad
push
jbe
or
push
xlat
mov
lahf
sub
add
xchg
icebp
push
fcoml
jg
cmpsb
movsl
jmp
mov
sbb
test
cmp
jle
aas
idivb
or
dec
daa
xor
stos
cld
enter
lcall
mov
popf
cs
jns
adc
mov
pop
in
cmp
loope
clc
enter
inc
fnstcw
or
mov
inc
mov
jne
cmp
cmp
push
inc
lcall
push
in
mov
out
add
inc
fists
push
mov
jne
mov
in
adc
xchg
andb
lret
xor
lods
addr16
mov
push
cmc
divl
push
sbb
ret
xor
and
xor
loopne
mov
jo
icebp
loope
in
test
mov
pop
sub
ret
sbb
inc
cli
ljmp
sbb
push
mov
in
fs
ss
mov
lahf
fidivrl
xlat
pop
ror
mov
shl
mov
mov
pusha
mov
fcoms
xchg
push
mov
and
stc
push
xor
or
dec
fsubp
arpl
cmp
xor
inc
outsl
xor
mov
movsb
cmp
adc
sbb
pop
scas
sub
xchg
daa
bound
push
jmp
mov
sub
mov
cmpsb
push
fucom
adc
and
lahf
daa
mov
and
sbb
pop
popa
and
loop
movsl
mov
data16
adc
pop
xchg
int3
lahf
mov
mov
ljmp
cmpsb
insb
movsb
sbb
sarl
sub
add
enter
test
hlt
scas
shrb
sub
mov
in
push
outsb
ljmp
ret
or
pop
xor
test
mov
sub
and
shr
inc
out
dec
jecxz
shlb
mov
adc
call
mov
leave
cmpsl
jo
and
or
add
mov
mov
pop
sarb
or
cmc
outsl
jmp
cld
push
scas
test
test
into
das
in
test
push
cwtl
xlat
mov
movsb
xchg
les
mov
push
and
fsub
rcl
popl
idiv
pop
add
xchg
mov
pop
loop
or
cltd
cmp
sbb
jl
clc
sub
jns
jbe
xchg
cmp
dec
mov
sbb
stc
test
scas
lcall
and
push
out
fisttps
std
push
xchg
jmp
test
xor
lahf
nop
testl
push
pop
add
loopne
jnp
cmc
movsl
test
jne
adc
jg
inc
or
lock
push
sbb
movsl
mov
pop
popf
icebp
dec
push
xchg
scas
push
clc
jae
or
sar
or
jb
orb
mov
sub
pop
and
ss
add
push
mov
ret
mov
fiadds
lods
out
jg
adc
pop
data16
mov
shlb
add
jbe
in
rcr
or
aaa
rorl
sbb
dec
in
orb
jmp
mov
outsl
or
pushf
and
lahf
idiv
pushf
mov
push
es
jmp
mov
addb
sbb
fbld
cli
movsl
sbb
fwait
imul
adc
xchg
insb
lcall
mov
aad
sbb
nop
pop
xchg
aas
bnd
xchg
divl
fs
mov
cmp
add
mov
ret
inc
ret
in
lods
dec
push
mov
aaa
fdivs
mov
repz
jb
sub
in
fdivr
mov
incl
call
inc
sbb
dec
imul
xor
pop
ljmp
out
pop
ds
or
popf
das
jmp
cmp
push
sub
jg
enter
addr16
adc
in
xor
dec
jno
pusha
lcall
xchg
movsb
mov
stos
dec
xchg
pop
movsb
loop
pop
dec
jae
sti
stos
aad
xor
add
inc
pop
mov
shl
mov
int
cld
push
sub
push
pop
jbe
mov
xor
cli
popf
sbb
pop
dec
mov
fisubrs
push
inc
inc
mov
gs
inc
xchg
push
push
addr16
inc
lret
filds
popa
push
aaa
rorb
int3
leave
movsb
xor
loop
push
insl
push
mov
pop
push
daa
mov
sbb
ret
dec
and
mov
fisubs
add
jne
xchg
cmp
mov
and
mov
aas
addr16
cmp
cmpsl
popa
dec
mov
rcrb
mov
or
fs
jg
outsl
mov
pop
hlt
sahf
pop
repz
jl
sti
fwait
scas
jg
lock
ret
mov
fxch
into
push
push
incl
orb
sub
cli
push
gs
call
adc
outsb
push
or
jo
mov
dec
and
push
pop
outsl
aam
ror
ficompl
scas
iret
fcmovnbe
add
pop
jg
testl
mov
js
xchg
pusha
scas
bswap
daa
xchg
xchg
inc
dec
mov
in
dec
jl
ds
jnp
fsubl
mov
es
fcmovbe
aaa
aaa
mov
dec
mov
js
push
inc
sbb
inc
push
xor
repnz
shlb
push
mov
dec
andb
test
mov
lcall
jb
gs
mov
lods
jae
fsubrs
stos
mov
nop
xor
test
movsb
call
adc
sahf
out
push
add
fidivrl
mov
sub
pop
cs
lods
enter
je
lcall
inc
mov
xchg
pusha
mov
rorl
in
scas
fdivrs
sbb
data16
sub
lods
inc
push
xchg
fsubs
and
sub
sti
nop
add
cli
xchg
adc
xor
adc
pop
xchg
xor
dec
rcll
lods
out
xchg
das
fwait
mov
push
loope
fisubs
fisubrs
and
fsts
cmp
cmp
test
add
vpslld
movsb
decb
fcomip
les
lods
rorl
addr16
stc
pop
lods
in
rcrb
sbb
pop
pop
sub
popf
adc
sbbb
and
arpl
mov
ljmp
sub
or
mov
fimull
push
xchg
lahf
xor
jg
movsb
scas
cmpb
and
stos
mov
jo
fildll
insl
and
loope
adc
loop
mov
shll
inc
xchg
adc
xor
out
movsb
icebp
test
scas
shlb
ret
fidivl
adc
rclb
add
push
daa
push
jecxz
xlat
incl
and
icebp
push
mov
comiss
data16
push
inc
mov
lods
cmp
or
pop
scas
lret
push
repz
cld
movsl
js
push
add
sbbl
out
pop
inc
pusha
mov
lret
movsb
xor
cmpsb
std
js
jns
adc
call
mov
out
cmpsl
std
push
scas
out
mov
xchg
push
out
into
loopne
mov
pop
jne
push
cli
mov
insl
and
dec
or
cmc
stos
call
into
dec
test
nop
mov
jne
mov
cmp
jle
pop
mov
sub
mov
lods
adc
add
mov
inc
push
mov
xorb
int3
mov
lret
cli
xchg
cld
js
pop
repz
loopne
pop
mov
push
xor
xchg
addr16
push
bound
push
pop
test
insb
jne
lds
es
mov
sub
arpl
adc
push
mov
pop
mov
sub
loope
out
test
jbe
pop
call
stc
mov
push
inc
dec
adc
jmp
xchg
out
mov
jnp
fistps
adc
out
or
fsubrs
cmc
into
jo
xchg
inc
out
push
out
ret
imul
dec
pop
and
xchg
repz
jmp
push
jle
loop
stc
mov
jb
or
xchg
jmp
jno
repz
pushf
fst
icebp
mov
mov
jge
cli
cmp
mov
in
pusha
ss
mov
push
insb
sti
xchg
in
inc
pop
popa
add
adc
insb
mov
les
mov
movsb
scas
sub
and
je
inc
daa
loop
inc
ficompl
fdivs
cmc
push
cli
loopne
dec
movsb
and
push
mov
sub
rcrl
sbb
mov
les
adc
push
mov
add
mov
fcomip
and
dec
inc
outsb
hlt
or
mov
imul
pop
lock
jle
addr16
mov
cmp
test
push
nop
and
sti
add
pop
xchg
adc
push
pop
cs
mov
jl
add
test
repnz
sub
dec
cltd
mov
pop
lret
fldcw
push
and
jbe
loop
jno
lret
inc
icebp
jge
dec
addr16
jne
js
aam
adc
rcrl
jb
repnz
inc
fnsave
push
cwtl
adc
inc
fcmovbe
add
jle
jge
in
mov
jl
imul
jae
addl
adc
subb
or
xchg
push
cmpsl
xchg
sbb
sub
pop
mov
mov
jo
mov
add
sbb
and
out
sub
rcr
mov
or
scas
jb
scas
shll
clc
add
rolb
xchg
push
loope
xor
jb
or
jnp
scas
dec
notb
outsl
adcb
inc
fcmove
mov
fs
add
loope
mov
sbb
test
sbb
in
imul
mov
cmp
push
lock
mov
aaa
imul
sub
and
cwtl
xchg
sub
pop
testb
fdivl
or
pop
jge
or
daa
call
pop
lock
add
pop
sahf
inc
pop
scas
mov
add
push
insl
stc
pusha
aaa
into
mov
lret
bound
cmc
testb
cmp
stos
outsb
push
lods
pop
jp
xchg
mov
mov
outsb
pop
lock
cli
cmp
jmp
cmp
gs
insl
popf
xor
jns
push
insl
mov
mov
sub
push
mov
add
pop
xor
jmp
adc
add
aas
aaa
cmpsl
jo
pop
in
sti
fcomps
cmp
mov
sub
jns
or
push
pop
jne
stc
push
lods
loope
and
push
out
mov
popa
shlb
sub
arpl
xor
lcall
mov
pop
jo
mov
fs
in
push
popf
loopne
lods
inc
js
sbbl
scas
gs
sbb
or
sbb
cwtl
call
jmp
inc
inc
dec
std
cld
cmp
fnsave
pop
mov
bound
cmp
xlat
dec
inc
and
sbb
in
dec
stos
es
gs
sub
pop
xor
cmp
frstor
xchg
push
insb
rorb
sbb
inc
or
aam
pop
loopne
push
xchg
inc
lcall
jmp
loope
stc
push
adc
stc
shrb
pushf
imul
xchg
pop
lret
jns
jle
fisttpll
cwtl
popa
jle
out
and
daa
push
dec
dec
push
inc
add
outsl
xchg
sbb
std
adc
sbb
inc
pop
jno
clc
push
fs
testb
or
cmp
sbb
stos
and
xorb
jge
ret
sub
lea
negb
outsb
cwtl
mov
or
test
or
test
aam
jns
arpl
orb
pushf
and
mov
dec
lcall
int
outsb
repnz
iret
add
mov
pop
mov
imul
mov
std
loop
test
mov
jb
inc
iret
xchg
lahf
cld
dec
push
inc
push
test
dec
pop
fidivs
and
push
adc
jae
call
sbbb
lcall
sbb
adc
sti
fbld
sub
mov
scas
addr16
sbb
jb
and
fdivs
pop
xor
and
fcompl
pop
dec
cmp
fidivl
insl
in
test
jg
dec
mov
daa
mov
loopne
out
xchg
ds
ficoml
adc
cmp
xchg
mov
clc
and
and
mov
cmc
cltd
test
and
push
dec
jnp
je
xchg
dec
lcall
xchg
das
sub
les
push
addr16
leave
jo
mov
test
test
adc
jl
ret
popf
cmpsb
and
cmpl
dec
mov
or
jecxz
xor
inc
and
lods
xor
mov
jl
cmc
pop
int
inc
sbb
inc
fimull
call
mov
jnp
sahf
xchg
xchg
addr16
lahf
mov
and
mov
jecxz
jne
out
and
loop
mov
inc
fnstenv
or
sbb
dec
hlt
aas
push
sub
repz
fcmovnu
adc
add
test
jmp
xor
sar
add
sub
cs
pop
cld
xchg
mov
fmul
lret
outsl
daa
or
les
inc
in
inc
lahf
ljmp
add
lea
notb
push
popf
movsl
dec
jmp
decl
and
dec
dec
cmc
mov
icebp
test
lods
sub
xchg
sbb
jnp
pop
mulb
roll
xor
xor
jmp
pop
ret
in
mov
jl
fisubrl
and
push
push
rcrl
or
adc
xor
sbb
dec
fnstsw
mov
push
sti
and
dec
cmp
push
test
jae
cmp
or
fwait
pop
std
or
shr
push
cmc
int
dec
loop
cmp
xor
mov
jl
int
adcb
mov
lret
dec
fcoms
sub
pop
or
sbb
idivb
dec
aaa
push
pop
test
sbb
decb
jmp
inc
inc
mov
outsb
out
xchg
enter
mov
mov
ja
dec
cmp
addr16
cmp
pop
ja
or
mov
jbe
ljmp
inc
xor
hlt
out
push
daa
arpl
pop
pop
add
dec
sbb
mov
repnz
add
jl
arpl
movsb
jl
push
out
inc
cwtl
pop
mov
adc
cmp
adc
mov
push
mov
mov
pop
mov
pop
cld
lret
xor
es
scas
lret
int3
mov
iret
mov
xchg
daa
add
jno
inc
stos
arpl
inc
addr16
lret
mov
test
dec
dec
stc
mov
in
cmpsb
xchg
add
mov
ja
nop
cld
mov
add
mov
or
lcall
cmp
out
test
inc
sbb
stos
jecxz
push
mov
mov
lock
out
xchg
dec
loopne
sbb
jecxz
aaa
adc
sub
push
fadd
ja
push
pop
dec
rol
mov
mov
nop
cmp
push
mov
mov
add
dec
push
test
adc
or
fistpl
or
xor
outsb
ljmp
or
shl
push
orl
enter
out
or
inc
cwtl
xorb
mov
jae
mov
rorl
adc
mov
lret
mov
int3
outsl
adc
mov
push
fisubrl
mov
mov
mov
push
into
push
int3
inc
repz
dec
loop
dec
pop
into
push
shll
cltd
adc
sub
sbb
or
push
iret
data16
js
icebp
adc
xchg
dec
lds
mov
dec
dec
add
outsb
loope
stos
cmpsb
cmp
or
fadd
inc
jns
pusha
mov
int
imul
sbb
adc
es
mov
es
cli
inc
mov
xorb
test
in
dec
pop
out
dec
dec
cmp
jmp
incb
push
call
hlt
cli
push
es
addb
and
int
inc
scas
sarb
shlb
in
cltd
repnz
and
sti
fisubrl
push
nop
jmp
cmpsl
mov
add
mov
inc
mov
int
lcall
push
jne
mov
mov
mov
and
push
push
mov
cmp
repnz
faddl
pop
push
test
stos
inc
leave
or
loop
mov
in
add
dec
rolb
cmp
xor
cmp
push
les
nop
aas
mov
mov
data16
je
sub
mov
loopne
mov
lret
sbb
sbb
xor
daa
aaa
push
loopne
mov
loope
xchg
pop
xlat
lret
sub
or
mov
dec
sbb
negb
sbbl
decl
mov
stos
push
jnp
insb
scas
dec
pop
xor
pop
sbb
add
in
imul
clc
fbstp
jl
dec
gs
jle
and
dec
sub
call
movsb
jp
std
stos
int
jb
jnp
xchg
cmpsb
andb
jb
sbb
inc
mov
sub
cmp
jle
xchg
outsl
pop
in
sbb
push
dec
fbstp
pop
pop
cmpsl
jle
mov
or
or
int3
or
cmpsl
rcr
lods
out
stc
mov
stos
xchg
das
mov
idiv
icebp
dec
gs
sub
popa
inc
sub
xchg
ss
sti
jnp
pop
lds
mov
cmp
cmpsb
les
inc
push
lock
aad
add
lods
lods
fcomps
loop
into
sub
dec
pop
jge
arpl
sub
xchg
adc
and
jmp
cmc
mov
push
mov
ss
out
outsl
rcl
std
ret
imul
adc
mov
sbb
dec
lret
lods
cmp
sbb
enter
out
xor
dec
and
movsb
mov
mov
push
mov
mov
test
sbb
flds
rclb
je
jge
arpl
aad
cwtl
push
clc
frstor
fs
stos
stos
negb
xchg
xchg
das
fwait
pushf
and
jnp
inc
lret
jbe
sub
mov
les
inc
dec
or
mov
mov
popl
in
mov
cltd
test
xor
xor
cmpps
pop
orl
pop
test
test
cmpl
xchg
ficoml
cmpsb
xor
mul
ja
sbb
fstps
mov
mov
push
ds
fldl
inc
and
adc
scas
ret
mov
push
and
cmp
xchg
fs
inc
sbbl
das
mov
loope
insb
mov
xchg
notb
mov
pop
pop
adc
loopne
mov
fdivrs
aas
mov
cmp
imul
jge
cmpsl
jb
xchg
rcrl
std
aam
xchg
mov
add
mov
sbb
jge
sub
inc
fxtract
int3
xor
push
out
push
les
jae
push
iret
pop
inc
adc
iret
movsl
or
mov
jo
mov
mov
push
cmpsl
xchg
jg
add
test
cld
xchg
outsb
ror
pop
iret
push
sbb
jo
cmp
lock
sahf
or
push
dec
test
cmp
outsl
jae
in
push
loopne
cmc
pop
cmpb
imull
test
jbe
xorl
sbbl
call
fistpl
lahf
xor
shr
pusha
pop
sub
mov
shll
inc
or
test
sub
push
fsub
sub
test
fdivp
pop
daa
add
jns
sbbb
arpl
jae
fidivrs
push
or
nop
out
fistps
mov
test
mov
test
cmpl
jle
fnstcw
or
scas
cli
lcall
imul
int3
lret
mov
mov
fwait
mov
cmp
mov
aad
test
testb
rclb
das
fwait
push
rcrl
add
cwtl
mov
lret
mov
rorl
xchg
mov
pop
popa
fsubrs
gs
outsl
insb
push
arpl
mov
outsb
or
std
sbb
pop
mov
out
jb
pop
cmp
mov
imul
test
push
idiv
outsb
cmp
inc
push
xor
mov
jne
pop
into
xchg
adc
fmuls
or
and
daa
call
pop
rclb
inc
aad
insb
daa
push
test
xor
stos
sahf
and
and
aas
fdivr
test
icebp
inc
mov
xchg
jecxz
js
outsb
adc
out
testl
repnz
or
rcl
mov
push
lods
popl
mov
push
add
xor
ret
aaa
ficompl
sbb
mov
sub
scas
pop
divb
jge
mov
fidivrs
fxch
cmpsl
jp
cli
mov
es
jl
dec
fs
jne
xchg
sbb
jl
lret
inc
sub
hlt
dec
pop
ret
clc
sti
out
xchg
sbb
cmp
addr16
ja
xor
or
xchg
cld
xor
pop
adc
mov
push
pop
aaa
xor
mov
dec
sub
fldenv
out
daa
add
pop
xor
ss
loopne
cmpsb
push
jns
pushf
sub
dec
and
pop
les
es
push
push
movsb
mov
cli
xchg
bound
sbb
mov
lahf
xor
inc
pop
jno
fnsave
xchg
ja
inc
push
mov
in
lcall
inc
push
cmp
cmpl
shrb
out
jg
test
fsubrs
xchg
cmp
in
imul
add
and
or
mov
cmp
mov
andb
push
insl
ret
push
lcall
xchg
ljmp
js
mov
add
insb
out
push
mov
add
leave
sub
mov
jbe
add
lock
mov
pop
js
mov
xchg
sub
movsb
and
pop
outsl
shll
mov
cwtl
and
iret
pop
xor
xchg
cmp
cmp
aam
xchg
pusha
imul
repz
stos
repnz
movsl
cmp
jnp
dec
imul
fnstenv
pop
lds
les
or
stos
gs
inc
add
dec
scas
out
arpl
aam
lahf
push
add
int
or
adcb
jns
int
mov
cli
jnp
mov
and
subb
mov
mov
cs
aam
sub
inc
sbb
insl
pop
mov
cmpsb
sub
daa
lret
push
dec
xor
loope
idivb
jg
adc
scas
andb
pusha
in
test
out
adc
lcall
cmc
out
test
stc
xchg
sbb
xor
xchg
adc
and
sbb
jecxz
dec
outsl
cmp
mov
in
mov
push
cs
pusha
test
cmp
sub
push
pushf
pop
mov
jno
sub
ret
scas
push
imul
and
imul
add
popa
pop
jns
push
fcmovne
mov
jg
pop
xlat
mov
pop
pop
fmull
std
sub
sub
dec
addr16
jp
hlt
jnp
nop
mov
fidivs
ret
hlt
push
mov
nopl
fnsave
jp
inc
push
test
mov
cmp
daa
push
or
push
fsubrs
jo
repnz
and
cli
jne
mov
xchg
jb
in
jno
imul
mulb
inc
push
sti
test
cwtl
lea
out
sbbb
leave
xor
clc
arpl
nop
push
test
in
sbb
push
fs
dec
movsl
add
xchg
push
out
mov
jmp
fists
jae
inc
stos
sub
xor
testl
cmp
dec
leave
sbb
or
mov
jae
aad
fbld
mov
cmp
mov
mov
stos
add
jno
fimull
loopne
cmpsl
sbb
cmpsl
mov
xchg
jbe
push
mov
je
in
pop
jb
push
stos
xchg
push
mov
nop
jle
lock
data16
push
scas
rol
mov
insb
xor
jle
stos
pushf
jae
iret
repnz
cmp
dec
push
les
mov
ja
push
insb
sub
ja
ja
or
inc
push
int3
loopne
or
jmp
xor
sbb
or
cmp
dec
clc
cmp
ret
test
jnp
adc
sbb
ds
imul
dec
imul
jmp
inc
push
pop
out
aas
adc
mov
inc
out
add
adc
and
leave
mov
insb
sub
pop
scas
icebp
leave
xchg
jae
ss
cmp
repnz
inc
cli
push
fiadds
lcall
push
sub
xor
jbe
mov
push
fadd
scas
pop
and
xchg
push
cmp
out
jge
es
movsb
aas
push
xchg
out
les
mov
push
jbe
cmp
ss
sub
movb
dec
shlb
sbb
inc
leave
push
loope
in
cmp
sub
add
jmp
sub
insb
icebp
mov
push
pop
xchg
add
cwtl
ds
cltd
mov
daa
xor
lret
sti
adcl
sbb
stos
cmp
fnstenv
stc
mov
and
xchg
xchg
dec
repnz
mov
bound
les
ljmp
jb
dec
rorb
mov
push
mov
xchg
out
sbb
xchg
pop
das
mov
xchg
xor
push
in
int
mul
mov
mov
dec
out
jmp
aad
adc
inc
or
add
mov
aam
not
fs
test
push
sahf
dec
mov
stc
adc
or
daa
inc
mov
push
mov
inc
add
test
xchg
add
jecxz
stos
dec
sub
es
adcb
mov
xorl
cmp
inc
xchg
fbld
adc
push
inc
xchg
xlat
bound
jbe
sahf
and
adc
inc
es
xor
aad
mov
pop
push
je
repz
push
enter
mov
xchg
adc
lods
inc
add
mov
clc
movsb
ljmp
jecxz
fdivp
mov
sbb
jge
cmp
and
arpl
mov
nop
stos
and
pop
xor
sub
ds
dec
int3
xchg
rclb
or
fiadds
int3
cmp
jecxz
pop
mov
movsb
mov
lods
sbb
cltd
mov
and
ficoms
lret
scas
cmp
mov
lock
daa
or
test
push
jecxz
enter
jecxz
cmpsb
mov
and
add
imul
rorb
std
jg
mov
mov
rcr
clc
or
add
pop
mov
cli
loope
or
add
aad
leave
popa
jmp
adc
mov
iret
imull
push
fsubs
daa
int
out
xlat
xchg
jl
bound
push
js
test
cmpl
mov
mov
faddl
dec
add
shlb
adc
sub
jmp
stos
inc
or
fcomp
mov
or
jmp
test
insl
les
rorb
mov
add
shll
loopne
pusha
push
and
je
inc
inc
fcomi
test
jne
sbb
insb
add
rcrl
or
lret
sbbl
ficoml
test
loopne
cmpl
mov
shl
int3
mov
add
lods
or
fnstenv
cmp
cvtps2pi
js
sbb
rorb
cmp
decb
ss
enter
xlat
dec
xor
test
dec
pop
cmp
mov
mov
rorl
jns
hlt
adc
dec
sub
icebp
push
test
outsb
roll
ret
jae
cmpsl
sub
loope
es
or
pop
jmp
dec
add
pop
fstl
xor
lahf
push
or
push
shlb
stos
test
ficoms
leave
fstpt
fiaddl
or
loopne
aam
add
inc
inc
out
ds
fnstenv
pop
pop
lock
push
xchg
add
sbb
test
mov
sub
lahf
lea
pop
dec
fwait
les
imulb
aas
xchg
scas
xchg
negb
ljmp
xor
data16
inc
idivl
adc
aam
call
or
mov
sub
stos
mov
mov
jbe
adc
fdivs
inc
in
ret
mov
adcl
fs
jno
cmp
xlat
dec
hlt
mov
jne
mov
in
xchg
push
insl
loope
lahf
daa
ja
or
jg
das
mov
aaa
into
outsb
push
and
sub
push
in
jb
in
mov
cwtl
mov
mov
fisubrs
xchg
aaa
into
enter
mov
sbb
rol
xor
addr16
pop
mov
inc
push
and
stos
lds
fstps
or
add
adc
push
inc
mov
rcll
data16
mov
fildl
mov
jg
stos
inc
cmp
out
leave
int
cmp
jne
mov
mov
cmp
test
shrl
jne
mov
pusha
sub
rcl
adc
sbb
mov
jb
lods
adcb
push
mov
gs
leave
push
stos
in
ss
in
adcl
or
adc
mov
xor
xchg
hlt
mov
sbb
xor
or
mov
and
jo
std
mov
shl
negl
mov
rolb
pop
test
daa
cli
outsl
ds
fldcw
nop
sbbl
popf
cmp
addl
aas
jnp
jo
mov
mov
cmp
shrb
push
mov
movsb
out
movsl
mov
lret
or
or
cmp
imul
icebp
dec
xchg
jle
mov
jno
enter
jl
outsb
mov
xchg
fimuls
lahf
mov
fs
shlb
mov
aas
enter
lock
out
cmpsl
scas
add
aaa
mov
inc
adc
outsl
stos
cmp
adc
pop
cltd
jo
outsb
add
pop
xlat
jne
or
fwait
adc
inc
lea
scas
es
and
ja
mov
test
or
pop
in
jbe
and
test
pop
jecxz
stc
jmp
cmp
xchg
xor
nop
fistl
sbb
shrl
call
dec
inc
cld
daa
dec
fs
fstp
out
dec
sub
mov
clc
mov
in
mov
test
inc
sbb
sub
and
lcall
cwtl
out
mov
dec
imul
mov
xor
jge
push
hlt
cmp
xchg
or
xor
jmp
xchg
scas
jno
add
mov
push
aad
add
lods
sbb
sub
leave
test
scas
inc
call
push
or
push
dec
cmp
daa
push
dec
or
outsl
ljmp
aas
push
outsl
sbb
pop
pusha
and
loope
lods
dec
loope
inc
test
ljmp
jmp
inc
dec
outsl
lds
mov
xchg
add
xchg
sbb
jns
mov
and
inc
adc
ja
xchg
vorps
ficompl
inc
jne
cmpsw
push
mov
out
inc
add
mov
dec
cld
ja
test
mov
inc
shrl
fcomps
or
adc
sbb
clc
lea
shr
cld
jg
out
sbb
iret
jecxz
fmull
or
jb
push
dec
dec
pop
out
cmp
repz
jmp
rorl
adc
and
jae
out
pushf
adc
jbe
jge
fisttpll
push
mov
jno
leave
and
daa
pop
inc
xchg
xor
and
in
jbe
clc
push
push
cmpl
das
les
aam
jae
dec
lods
xchg
sbb
ds
leave
xchg
pop
arpl
sub
frstor
jne
cmp
xor
sbb
mov
pop
lods
sahf
cwtl
iret
data16
jge
inc
mov
lock
inc
xchg
push
in
xor
outsb
add
jle
enter
aad
je
sbb
cld
in
jle
fnsave
cmp
sub
sub
call
push
gs
ffree
aas
sub
push
pop
rclb
fisubrl
insb
xchg
push
inc
push
mov
sbb
inc
xchg
out
enter
xlat
push
aad
jae
xchg
sub
mov
mov
cmp
add
mov
add
scas
pop
and
arpl
sahf
add
jae
iret
and
pop
test
add
push
iret
or
sti
fwait
clc
sbb
icebp
xor
and
sub
ret
adc
lahf
aad
adc
pop
xchg
inc
addr16
mov
ror
cltd
not
ds
add
adc
call
hlt
pop
mov
push
popf
xor
mov
movsb
das
outsb
cmp
mov
push
add
shlb
fistl
adc
push
mov
inc
test
imul
gs
and
dec
sub
cwtl
fwait
lea
dec
xor
in
xor
lods
es
test
scas
call
push
leave
sahf
cmc
sub
adc
loop
xor
mov
or
xchg
mov
xor
daa
repnz
hlt
xor
call
int3
aam
sub
enter
xor
shlb
xor
loop
push
divb
daa
and
inc
lods
scas
mov
xchg
out
cld
flds
cmp
pop
negb
js
cmp
xchg
fdiv
es
sbb
xor
test
inc
test
cli
dec
shl
xchg
in
mov
dec
dec
jno
ret
pop
lds
out
xor
sbb
xchg
jle
repnz
add
xor
add
test
xchg
sub
clc
mov
notl
pop
add
inc
iret
lret
xchg
add
pop
test
dec
clc
pop
cmp
xchg
ja
dec
fstl
popa
fs
lcall
subl
push
fwait
mulb
cli
ret
or
lcall
test
aas
dec
iret
sub
push
sub
out
test
xchg
sbb
jecxz
test
sbb
inc
lret
xchg
xor
sarl
push
jmp
stos
rcrb
adc
outsl
inc
push
cltd
cmpsb
jns
stos
scas
call
cmp
push
pushf
dec
inc
push
xchg
test
in
sbbb
sbb
add
lods
mov
clc
flds
lahf
dec
add
rolb
dec
repnz
negl
xchg
jp
fcoms
pop
lock
stc
mov
push
fisubrs
xchg
fmuls
popa
in
jmp
ret
stc
andb
or
pop
jecxz
cmp
sbb
pop
xchg
lea
dec
or
xor
pop
mov
mov
dec
sub
sahf
inc
push
cmp
in
add
lahf
adc
negb
loope
pop
add
xlat
movsb
jnp
mov
sbb
lods
nop
push
lcall
mov
dec
nop
jno
pop
rclb
inc
sbb
insl
cmp
jmp
push
cmpsl
scas
lret
jecxz
insl
sti
js
xor
jge
ljmp
sbb
movsl
mov
popa
mov
fisubs
xchg
cmp
sarb
cld
fcomps
xchg
stc
stos
sbb
popf
mov
int
add
add
rorl
aaa
push
decb
loopne
push
or
sub
ret
mov
pop
test
imul
cli
push
mov
push
mov
mov
rcll
mov
adc
jmp
into
fwait
and
xor
fwait
lock
shll
std
mov
pop
fisubrs
fs
jecxz
jae
pop
fwait
outsb
stc
pop
fcom
scas
mov
repnz
xlat
in
and
gs
movl
in
pop
xlat
cs
dec
adc
in
mov
sub
movsb
ja
or
push
or
adc
sub
int
or
aad
sub
out
dec
fwait
xor
mov
ljmp
call
ret
push
lea
ret
xchg
dec
stc
andl
push
test
stos
xchg
lahf
and
scas
or
std
and
test
aas
cmp
mov
mov
xchg
leave
sub
pop
mov
mov
add
sbb
cwtl
jp
nop
shlb
je
stos
call
mov
pop
arpl
xorl
or
loope
sti
xchg
mov
addr16
mov
sbb
or
lret
add
cmp
mov
jp
pop
cmpsl
cld
pop
out
sub
loope
or
inc
aad
js
xor
xlat
mov
test
daa
sub
popf
xor
cmp
adc
loop
les
jb
push
xchg
or
int3
cli
scas
jp
idivl
dec
popa
clc
jle
sahf
pop
sbb
jg
mov
dec
mov
lock
lea
xchg
iret
add
cmp
pop
aas
xchg
sbb
fidivrl
shlb
cmpsl
adc
fld
sti
pop
or
jmp
jo
fidivrl
jmp
movl
lahf
xor
jge
sub
inc
cmpsl
jge
mov
scas
dec
ja
fsubrl
popf
in
cmp
int3
in
gs
pop
scas
mov
pop
dec
scas
mov
push
push
imul
je
sub
idivb
fwait
movsl
jg
pop
and
rcll
ja
daa
mov
rorb
shll
adc
cltd
stos
cmp
into
out
insl
addb
push
push
repnz
loop
xchg
das
sahf
imull
lds
or
outsl
mov
cli
pushf
out
mov
popf
jne
inc
popf
lods
inc
dec
and
rcrb
mul
mov
xorl
ret
sub
mov
xchg
mov
in
icebp
das
aad
es
inc
jp
pusha
test
arpl
into
cmp
loop
cltd
fnstenv
dec
pop
mov
adc
cmp
lods
or
shlb
incb
sbb
out
add
jge
mov
insb
adc
pop
jg
xchg
add
mov
icebp
xchg
inc
push
pop
stos
adc
loop
les
sbb
pop
add
shll
ret
out
sub
rclb
fiadds
mov
jne
mov
push
cmpsb
imul
pop
cmpsl
jb
xchg
jns
imul
imul
les
mov
lcall
jbe
mov
dec
pop
in
mov
mov
fistps
int
repnz
push
out
cld
test
mov
sbb
dec
lods
xchg
jle
mov
cmp
imul
mov
shr
call
xlat
mov
lea
push
popf
push
dec
push
cli
out
xchg
repnz
fildl
and
test
in
pushf
cmc
xor
mov
aas
aad
add
pop
dec
loope
mov
es
mov
push
or
and
xor
cmpsb
cwtl
repnz
cmc
stos
test
mov
add
out
test
mov
cmp
jns
xor
push
ljmp
and
dec
ret
or
lret
mov
and
pop
cmc
fiadds
push
jns
mov
mov
sub
inc
pop
mov
and
or
arpl
xlat
push
lods
roll
test
test
std
sahf
cmp
ret
sbb
dec
lret
in
mov
ds
ffreep
loope
and
pop
sub
rcrl
push
cli
ret
call
lds
in
push
add
xchg
testb
sbb
lods
insb
lods
inc
sahf
enter
jns
mov
mov
test
nop
imul
mov
sbb
add
cmp
push
jle
cmp
rcrb
mov
enter
sub
daa
push
mov
ss
jp
inc
fdivrs
flds
popl
repz
stos
insl
adcb
lret
ss
out
sbbb
ret
and
insl
mov
sbb
ljmp
mov
push
cld
in
mov
pop
cmp
dec
lret
push
mov
pop
loop
gs
call
jl
sub
push
aam
xor
dec
sbbb
xor
mov
sbb
mov
cld
lock
and
mov
jno
in
aam
mov
xchg
mov
push
pusha
test
mov
and
pop
popa
imul
xchg
add
mov
cld
push
inc
fstl
fwait
fs
push
push
testb
movl
mov
repz
adc
arpl
pop
pop
push
inc
adc
mov
daa
mov
js
mov
dec
subb
ja
adc
add
mov
sub
pop
cmc
mov
push
xchg
jns
sub
xchg
sub
add
int
and
or
cwtl
sub
cwtl
pop
xor
xchg
xor
rcrl
aaa
dec
pushf
or
adc
mov
and
dec
popa
call
or
cld
mov
filds
cmp
aad
divb
dec
int
dec
pop
dec
out
aam
cwtl
ret
jnp
outsl
push
mov
adc
cmp
jb
imul
jns
out
mov
sub
shr
jo
jns
jg
fildll
sahf
xchg
xchg
test
imul
and
clc
test
iret
shrb
clc
xchg
inc
add
pop
push
jmp
dec
jle
and
decb
mov
les
mov
cmc
gs
roll
sub
fnstenv
pusha
fnstenv
cmp
imul
xchg
lock
inc
sbb
mov
inc
jmp
loopne
popa
pop
iret
and
mov
sub
mov
dec
dec
xor
jo
cmpsl
call
sbbb
add
mov
push
lds
aad
into
push
ret
xor
and
out
test
cmc
in
int3
pop
lahf
arpl
xchg
inc
repz
aaa
inc
in
adc
push
fidivl
xlat
mov
or
in
mov
sub
sub
sbb
mov
pusha
out
sbb
inc
inc
fdivs
dec
mov
dec
loopne
pop
push
lds
andb
cmc
mov
push
icebp
jne,pt
adc
push
adc
jns
imulb
std
outsl
fistps
andb
pusha
test
push
add
mov
bound
cmpsl
jmp
mov
loope
adc
iret
xor
mov
lock
mov
or
xchg
js
fnstcw
xchg
fucomi
ret
inc
dec
pop
mov
cmpsb
dec
faddp
mov
push
mov
stc
je
push
sub
adc
adc
cmp
cltd
cmpl
rcrb
sub
push
pop
or
cmp
sub
fldcw
je
cmp
ss
arpl
jnp
cltd
mov
sub
xchg
sahf
fldenv
rcrl
adc
xor
mov
cmp
push
or
cmpsb
dec
sub
test
jae
xchg
nop
mov
negl
pop
mov
mov
xor
aad
pop
or
cli
das
cmpsb
in
xlat
push
sbbb
icebp
shlb
jecxz
mov
mov
adc
pop
cmp
jl
repnz
lea
dec
mov
jnp
sbbl
pushf
loope
int3
push
jns
lret
push
loopne
mov
bound
cmp
push
pop
testb
add
dec
xchg
jne
add
push
cs
rcrl
orl
sub
add
add
leave
cmpb
lds
pop
ja
sub
out
out
cmp
fwait
jns
rcl
cmp
call
mov
mov
push
cmp
cmc
cmp
pop
jl
cmp
fucomip
push
pusha
cltd
mov
push
scas
nop
xlat
adc
adc
push
mov
jne
xor
push
scas
outsl
test
cmpsb
hlt
jge
dec
mov
nop
daa
pop
sub
pop
jg
inc
mov
ficoml
pop
int3
or
rcrb
lahf
sub
mov
mov
scas
fidivrl
mov
push
ss
scas
in
jae
sbb
cwtl
clc
jecxz
test
lods
jp
sbb
pop
xor
mov
mov
xchg
aaa
outsl
push
imul
fstps
add
adc
andl
xlat
fisubl
lret
fistpll
or
das
and
fisubs
addr16
xor
cld
movsl
add
xor
in
jo
aaa
push
lahf
neg
jmp
enter
push
orb
pop
xor
repz
hlt
fs
mov
sub
imul
jno
add
pop
cmpsb
adc
sub
loope
inc
dec
loopne
cmpsb
cld
outsl
or
in
jnp
mov
pop
xchg
mov
popa
in
in
std
dec
loope
repnz
lds
out
xchg
fisttpl
lock
jmp
adc
jle
push
inc
jl
xchg
cmpsl
shl
push
enter
lret
push
outsl
add
cmpsb
in
jno
xchg
in
cmc
xor
movsl
fwait
jbe
int
cwtl
ja
fnstenv
cwtl
and
sbb
rdtsc
cmpsb
arpl
add
mov
jns
cmpsb
fnsave
jns
mov
sarb
sbb
in
add
pop
int
nop
jns
pop
stc
xchg
pop
ret
sbb
xor
vpsubusb
test
scas
insl
cmp
movsl
push
mov
jo
pop
cmp
cmp
dec
add
or
stc
pop
pop
push
or
stos
cmp
fwait
mov
inc
dec
push
imul
ficoml
jo
movsl
mov
push
adc
xchg
cmp
inc
push
inc
add
addl
jl
stos
inc
pop
sub
sbbl
mov
xlat
loope
jno
jg
insl
icebp
mov
inc
andl
push
shrb
sbb
jge
adc
fucomp
insb
and
inc
or
push
mov
inc
fsubr
aad
fidivs
fcomps
jne
push
movl
jno
pop
idivl
cmp
adc
cmp
pop
push
bnd
push
jmp
int3
sbb
test
ljmp
inc
das
cmp
cmp
scas
in
aad
push
int
push
xchg
add
call
imul
or
out
fcomp
enter
aaa
jmp
mov
cs
test
lock
sbb
add
and
sbb
or
movsb
cmp
xchg
out
dec
out
imul
sbb
cltd
repnz
sbb
sub
pop
in
push
cltd
jmp
xor
push
sbb
jge
pop
jbe
repnz
mov
and
mov
and
add
inc
fstl
jmp
mov
xor
inc
gs
inc
xlat
mov
dec
pop
hlt
jnp
xor
mov
adcl
mov
mov
lods
std
sub
test
jno
sub
inc
pop
or
xchg
jecxz
xor
js
jnp
mov
jne
xchg
sub
dec
push
inc
stos
test
sbb
push
jae
mov
fwait
iret
movl
add
shlb
rcrb
add
add
cmc
add
and
imul
sbb
fildll
loope
or
fsubr
imul
dec
adc
scas
shl
mov
ftst
add
push
xor
icebp
lcall
push
sbbb
into
lcall
jns
ds
repnz
popw
mov
pop
cltd
and
dec
mov
push
imul
and
std
xchg
dec
inc
fstp
lods
jnp
ljmp
adc
cmpsl
sbb
or
xor
xchg
adc
pop
ss
movsb
inc
daa
dec
push
aam
push
out
dec
sbb
dec
jge
js
push
stos
cltd
je
out
punpcklbw
sbb
divb
sub
xchg
xchg
mov
jns
cmovb
pop
jae
test
into
icebp
xor
scas
inc
xchg
dec
cmpsb
lahf
sub
les
cmp
fdivrl
dec
jp
rclb
jo
inc
sti
fsubrp
fsubl
xor
in
js
sub
adc
stos
popf
cs
ret
pop
lea
and
or
inc
stos
mov
xor
mov
push
jle
hlt
mov
mov
test
shlb
jmp
dec
pusha
pop
outsb
push
mov
insl
mov
mov
ds
xchg
pop
push
test
and
movsb
in
push
int3
mov
lock
xchg
je
push
push
ds
and
clc
cmpsl
mov
inc
iret
out
lahf
pop
xor
movhps
call
std
adcl
cltd
xor
adc
inc
add
pop
or
mov
inc
sbb
jge
push
push
cmp
pop
lods
push
out
in
fmuls
and
jle
bound
mov
ja
scas
les
repnz
sub
nop
lret
imul
push
ljmp
std
cmp
into
xchg
lock
lock
push
mov
or
mov
ret
ljmp
cs
insl
stos
ds
nop
pop
fs
sbb
push
insb
stos
testl
jo
inc
dec
pop
call
fstpl
sub
cwtl
outsl
jge
shrl
jg
ret
xchg
xchg
xor
and
pop
stos
mov
daa
arpl
xor
mov
sub
mov
stos
loop
sti
shlb
mov
test
mov
outsl
pushf
int3
out
pop
enter
or
push
cmp
sbb
sub
mov
loop
xchg
cmp
or
push
pushf
xor
inc
cmp
lock
lret
into
call
push
mov
in
fsubr
cmpsl
nop
jmp
mov
pop
mov
into
popf
pop
fdivl
mov
fidivs
loope
mov
lds
xchg
ret
mov
adc
mov
ret
pop
push
cwtl
push
sub
cs
xor
sub
mov
cmpsl
dec
ret
movl
cli
ficompl
into
inc
inc
add
push
jno
mov
xor
xchg
test
adc
xchg
xor
stos
push
mov
pop
call
mov
repz
fldcw
rcrb
push
mov
nop
dec
cli
push
divl
aam
ret
xor
mov
cs
jb
mov
sbb
jo
xor
mov
mov
sbb
cmp
pop
cmp
popf
idiv
or
das
inc
sub
xchg
pushf
fwait
xor
sahf
sbb
inc
push
mov
fsts
notb
movsl
std
cmp
inc
inc
lods
inc
pop
arpl
pop
das
movsb
popf
inc
lcall
int3
jge
in
dec
inc
mov
repz
xor
pop
inc
jo
movsl
movsl
push
sbb
mov
ret
sub
hlt
fnsave
cmpsl
dec
stos
aaa
fwait
call
int3
jecxz
cmp
sub
cli
fsubs
pop
repnz
adc
xor
add
push
inc
loopne
mov
sub
popf
mov
xor
aaa
dec
push
out
icebp
add
mov
cmpsl
lahf
std
add
dec
roll
lock
mov
loop
stos
or
pop
mov
jnp
adc
imul
mov
jp
or
fs
test
adc
pmaddwd
lret
jl
pop
sub
sarb
cmc
sub
icebp
add
add
xor
adc
mov
cmp
lahf
jb
xchg
adc
ss
ficomps
jg
lods
mov
pushf
inc
pop
stc
sbb
dec
adc
and
ds
sbb
jl
sub
mov
in
dec
in
jecxz
xchg
mov
rcrl
sbb
inc
xor
je
out
in
sub
data16
lcall
sbb
stos
stos
cmp
jns
and
adc
xor
add
js
roll
js
jmp
cmp
adc
jne
pop
dec
iret
cmp
int3
in
faddl
add
fldt
or
gs
iret
mov
xor
mov
ja
in
dec
loop
pop
pop
jae
fidivrs
scas
mov
xchg
pop
cld
inc
push
jo
cwtl
and
mov
les
cmp
cmc
mov
fcmove
movsb
or
ret
int3
movsb
gs
mov
rorb
mov
cmp
cmp
popa
bound
out
repnz
sbb
jl
mov
loop
or
stos
cmpsb
in
addb
movb
jge
addr16
mov
out
test
cmpsb
sti
pop
adc
test
clc
pop
movsl
fwait
icebp
fistpll
push
movsl
mov
scas
enter
scas
sahf
not
push
jno
inc
adcb
adc
add
not
inc
lods
add
sahf
and
adc
nop
nop
push
mov
fiaddl
mov
in
shr
enter
out
daa
mov
scas
dec
inc
jne
jle
adc
mov
int
push
inc
inc
inc
push
jl
cmp
pop
push
add
add
xchg
fiadds
ret
std
jle
adc
lea
ja
add
shl
push
clc
bound
and
int
imul
fsubrs
mov
and
pop
adc
ret
fldz
insb
inc
and
imul
inc
negb
les
pop
data16
cmp
xchg
in
add
pop
fs
pusha
outsl
shlb
andb
mov
and
subb
je
and
or
sub
xchg
loop
adc
add
ds
shlb
mov
rcrl
or
les
jb
shr
or
stc
popa
mov
sub
sub
jle
adc
ss
imul
push
je
jecxz
mov
dec
cmpsl
out
loope
mov
xor
cs
dec
xor
adc
cmp
les
insl
hlt
fsubs
inc
inc
stc
or
cmp
in
pop
adc
pushf
and
imul
loopne
fwait
push
nop
xchg
cwtl
aam
dec
outsl
mov
imul
fwait
icebp
sbb
sub
xchg
add
lea
psrlq
mov
bound
adc
pop
sub
cltd
pop
cmp
in
jb
and
mov
scas
cmp
push
out
lcall
dec
loop
dec
ja
jns
imul
xchg
mov
shlb
add
add
jbe
or
add
inc
mov
aas
dec
push
jno
jl
pushf
repz
pop
out
aas
inc
sahf
sub
sbb
and
mov
xchg
inc
popa
lahf
sbb
jmp
shr
inc
stos
mov
fmul
jecxz
sar
add
stc
and
push
das
iret
ljmp
jp
inc
test
ror
sbb
scas
cwtl
icebp
xchg
mov
jl
sbb
pop
enter
imul
std
push
mov
sbb
fisubrs
and
fimuls
andb
push
lcall
cs
bndstx
cmp
push
fwait
movsb
add
in
mov
inc
aam
xchg
and
jns
lods
pop
add
pop
mov
jnp
push
mov
decb
arpl
sub
test
scas
fldl
sti
push
pop
int
push
fs
stc
nop
push
cwtl
fsubs
add
push
pop
pushf
mov
dec
stc
nop
out
stos
imul
movsl
mov
popa
outsl
int
add
jmp
mov
ret
push
xchg
inc
movhps
sbb
dec
push
rcl
lret
loop
mov
hlt
scas
vpxor
cmp
insl
pop
cmp
nop
jl
adc
popa
mov
pop
cmpsl
shll
mov
push
bound
js
or
stos
sbb
sbb
xlat
sub
lods
in
push
fisubs
inc
and
push
or
mov
pusha
cmp
xchg
cmp
add
cmp
ss
xor
ficomps
xor
xor
lods
ljmp
mov
lret
in
gs
push
gs
add
repnz
imul
pop
xchg
leave
cmp
test
mov
inc
mov
cmp
and
out
loop
fdivrs
pop
push
out
mov
and
or
push
cmpsb
ss
lret
jne
inc
or
push
fwait
mov
mov
aam
sbb
xor
xchg
mov
jmp
sbb
inc
out
cld
inc
push
adc
lods
pop
sub
repz
loopne
jb
inc
aam
jmp
dec
ja
jno
mov
jp
decb
cwtl
movsb
push
fbld
cmpsb
jp
mov
cmpsl
push
sub
ja
jne
hlt
inc
ds
pop
xchg
inc
ljmp
push
lods
jmp
hlt
sbbl
add
and
push
push
inc
fwait
in
and
jl
inc
fwait
xchg
cltd
mov
iret
add
mov
or
mov
sahf
push
or
push
mov
sub
data16
jmp
ja
fists
dec
hlt
das
mov
push
xchg
jbe
adc
shlb
subb
pop
popa
jecxz
push
push
stc
lret
dec
inc
jbe
lds
pusha
les
lods
fstpt
imul
cmp
inc
insb
and
ss
enter
nop
or
push
ss
adcl
cmp
mov
jbe
rcl
jo
test
jbe
nop
dec
scas
adc
les
in
outsl
push
jl
pop
jne
sbb
std
jo
jns
dec
cmp
pop
sub
sarb
gs
jl
js
mov
jno
pop
cld
loope
int3
mov
je
add
lods
cmpsl
clc
repz
dec
dec
mov
push
lahf
inc
inc
into
aam
iret
pop
sbb
jno
lret
mov
jl
arpl
xor
popa
mov
out
or
aad
push
sar
imulb
ret
test
sub
xor
jecxz
add
mov
test
clc
and
fsubrl
cmpsl
dec
or
cmc
xchg
fs
outsb
ljmp
sahf
push
xchg
aas
mov
inc
es
hlt
push
mov
decb
test
push
dec
sub
jne
lods
xchg
loopne
mov
adc
ret
addl
fcmovu
imul
cmpsb
lods
mov
repnz
xorb
mov
hlt
dec
xchg
outsl
cmpsb
pop
sarb
imul
lods
xor
adc
inc
push
sub
jb
shl
dec
fbstp
pop
ficompl
add
das
out
insl
pop
lret
dec
mov
mov
call
push
jns
pop
fwait
sahf
pop
or
pop
jg
in
ds
xor
sub
inc
je
mov
lock
xchg
insb
ret
and
jb
testl
jecxz
inc
add
mov
outsb
sbb
xor
cmp
and
dec
scas
out
push
insb
pop
rorl
cmp
push
dec
fmull
cs
cmp
repnz
cmp
pop
dec
dec
jns
sbb
dec
jle
sub
sub
movsb
gs
enter
out
das
pop
or
scas
xor
pop
cltd
mov
aam
add
iret
dec
mov
outsl
repnz
popa
imul
imul
shrb
jle
repnz
pushf
and
lret
xchg
das
idivl
hlt
lcall
test
cmpsl
jmp
mov
inc
cmp
ljmp
push
jns
push
stos
xchg
bnd
ljmp
call
jmp
ror
xor
imul
cltd
sbb
out
cmp
cmpsl
fwait
packssdw
pop
js
jo
clc
mov
icebp
arpl
sbb
push
aas
xor
pop
cmc
adc
sbb
fsubs
sbb
ret
mov
lock
or
repz
sub
lahf
or
push
push
mov
sti
jnp
pop
out
cltd
mov
cmp
in
mov
lods
inc
xor
roll
push
insl
dec
mov
pop
loop
push
lods
mov
push
mov
mov
daa
jg
push
jecxz
inc
adc
scas
addr16
pop
xchg
mov
orb
pop
ds
mov
lock
popa
clc
stos
aad
mov
mov
call
cmp
scas
lret
movsl
pop
mov
pop
mov
sub
fwait
jl
sbb
rcr
jbe
ja
pop
xor
in
cltd
sbb
stos
sahf
lahf
loope
loope
sub
scas
scas
jge
sub
xlat
addr16
mov
popl
std
ror
fmull
dec
out
out
dec
mov
mov
addr16
fistps
stos
jnp
int3
jo
push
imul
push
dec
mov
jae
in
push
pop
pop
push
add
sub
sbb
cmc
out
cld
roll
add
je
pop
lods
insb
adc
and
call
jg
jle
lcall
data16
push
sbbb
jl
lock
and
pop
rolb
push
jg
sub
pop
shlb
add
xchg
mov
xchg
divb
bound
cld
int
sti
ret
xorl
inc
int
jb
aaa
fidivrl
push
aas
por
pop
cwtl
mov
pop
cmp
mov
and
mov
fwait
fwait
int3
sbbb
cmp
jns
in
dec
lret
or
loopne
iret
pop
outsb
jno
or
fidivl
and
jp
int
jae
movsl
enter
repz
stos
or
inc
rcrb
or
xchg
xor
sarb
lds
ds
adc
cmp
push
jae
pop
jl
dec
or
xlat
pop
adc
data16
aad
jmp
mov
xchg
insb
inc
jg
ds
sbb
pop
repz
add
popf
and
mov
jns
push
arpl
cmp
inc
push
push
leave
push
xlat
insl
lret
test
and
cmp
cmp
ret
jle
dec
dec
pop
repz
mov
jb
xchg
xchg
sbb
mov
rcrl
cmp
lods
mov
sbb
nop
pop
push
out
dec
dec
loopne
popf
mov
loopne
testb
and
add
sbbl
adc
jno
jno
nop
pop
lods
ja
fcomps
lea
pop
popa
and
xchg
sbb
mov
and
test
dec
adc
repz
push
adc
outsb
sbb
daa
clc
cmp
div
lret
fwait
dec
add
call
lcall
pusha
mov
xchg
sub
mov
dec
sahf
jno
sahf
sti
push
in
cmc
adc
or
xchg
sahf
mov
push
jecxz
xchg
icebp
movsl
or
ret
sbb
jns
dec
call
in
sahf
addb
adc
arpl
dec
add
std
sbb
or
sub
scas
add
adc
in
test
cs
jo
sbb
xrelease
xchg
xchg
outsl
push
cmpsl
dec
mov
dec
out
stos
pop
sbb
loope
xchg
mov
icebp
scas
sub
leave
add
das
test
fstpl
ret
sbbb
mov
add
sahf
out
sti
subb
mov
lods
and
push
jo
sub
inc
aaa
mov
cmp
dec
loop
pop
loope
stos
in
adc
xchg
lret
in
xlat
jle
and
mov
xor
fwait
hlt
mov
jmp
sti
xchg
incl
push
pop
popa
daa
or
aas
loope
xchg
nop
sbb
add
add
mov
fcomi
or
xor
fists
lret
adc
lods
mov
pop
imul
and
clc
std
xchg
dec
adc
loop
add
pop
mov
cmpsb
in
or
mov
cmp
xchg
nop
sub
jnp
mov
cmpsb
std
loop
jo
jp
jns
adc
push
lods
or
push
sarl
push
push
fstl
lods
fiaddl
cmp
loop
int
outsl
jmp
in
mov
fldt
gs
andl
adc
push
jns
cmpsl
sub
aas
cmp
or
hlt
inc
inc
sub
scas
sti
inc
xor
popf
mov
faddp
mov
mov
pop
addb
cmp
jg
xor
sub
push
jnp
ficoml
push
inc
adc
xchg
dec
idivb
inc
fdivr
sub
je
push
mov
lahf
arpl
dec
or
mov
scas
stos
loopne
mov
leave
lods
stos
or
sbb
sbb
sbb
repz
cmpsb
pushf
scas
mov
in
and
sbbb
inc
and
pop
and
fmul
lret
addr16
fisttpll
xchg
adc
mov
cmp
xchg
es
sub
pushf
jmp
cld
xchg
cs
hlt
mov
loope,pt
push
xor
dec
iret
pop
mov
dec
dec
fwait
or
cwtl
mov
lret
je
into
push
xchg
lret
sub
shll
mull
adc
stos
mov
hlt
stc
and
add
loope
ret
aas
cwtl
sbb
int3
mov
push
jge
out
loop
outsb
movsl
xor
jmp
cmp
sti
popl
lret
lds
leave
leave
push
jo
mov
cltd
push
testb
push
popf
mov
inc
ljmp
sbb
and
xchg
cmp
out
sahf
je
mov
cmp
cmp
mov
test
addl
sub
sahf
std
and
jmp
popa
stos
push
jecxz
mov
cs
xchg
cmp
or
mov
in
xchg
mov
dec
and
inc
lds
push
xor
add
std
mov
dec
jns
inc
in
stc
shl
enter
add
dec
or
test
cmpsl
fldt
je
rcrb
mov
fidivl
enter
shl
dec
inc
xchg
xor
pop
aaa
mov
arpl
or
dec
rclb
mov
xchg
jge
inc
and
push
shrb
dec
popf
push
sahf
daa
pop
out
mov
ret
outsl
adc
ror
jmp
aaa
mov
or
mov
outsb
add
jnp
adc
mov
cld
or
icebp
push
lods
and
xor
push
push
scas
les
int
into
repz
shll
sbb
cmp
xor
sub
push
mov
jmp
sub
jecxz
lret
mov
mov
sbb
cmp
rcrb
mov
mov
fbstp
rcll
sbb
xchg
jp
stos
aad
lods
repnz
jge
test
scas
test
addl
sarb
in
cmc
adc
mov
test
cmp
pop
ds
push
adc
jb
sti
cli
mov
adc
frstor
jbe
mov
pushf
xchg
mov
ret
inc
in
fs
fwait
inc
hlt
loope
push
sahf
xor
cmp
int3
fimuls
push
xor
jecxz
addr16
shl
xchg
lea
mov
jo
movsb
out
xchg
jge
or
jne
loop
lock
gs
xchg
lock
ret
andps
jnp
and
add
data16
pop
xchg
add
sahf
fwait
and
inc
gs
out
or
inc
inc
dec
arpl
imulb
insb
cmp
pushf
pop
fmuls
rcrb
mov
shll
inc
cmpsl
pop
inc
mov
jns
data16
push
xchg
adc
mov
mov
daa
push
xor
adc
and
mov
movsb
push
int3
push
xchg
mov
pop
jmp
cwtl
jno
popf
out
xor
or
push
add
ds
or
dec
mov
aad
mov
leave
or
pusha
mov
dec
test
ret
js
addl
enter
mov
lcall
jl
sbb
aas
sbb
ds
outsb
push
xor
test
lods
add
outsb
fcompl
lods
aas
push
and
cmpsb
push
addl
clc
pushf
mov
sub
xchg
adc
ror
call
ret
jle
in
xchg
inc
leave
push
mov
dec
cwtl
push
pop
cltd
out
pop
repnz
mov
jl
fldcw
in
orb
adc
out
dec
sub
das
lods
sub
push
mov
dec
push
xchg
jo
pop
push
jecxz
mov
xor
xchg
xchg
sbbl
cmp
sbb
and
push
sahf
fidivrs
imulb
je
pop
jl
inc
mov
mov
lret
jnp
jno
sub
add
or
jo
xlat
ret
and
ret
and
jmp
add
dec
popa
push
cmp
sub
inc
dec
inc
xor
xor
jo
cld
icebp
popa
or
stos
jbe
jl
mov
testl
lods
jo
and
add
sbb
add
scas
repnz
out
mov
lods
mov
rol
imul
push
inc
mov
jo
imul
push
int
push
test
add
add
push
or
xor
cmpsb
cwtl
sbb
subl
ret
dec
les
push
fs
mov
mov
mov
cmp
clc
insl
add
popf
inc
cmpsl
outsb
jecxz
inc
leave
mov
xchg
xchg
push
cmc
mov
shll
xor
pop
jle
fwait
mov
subb
inc
leave
mov
mov
shll
jns
cmpsb
mov
test
sbb
mov
or
jae
rcl
out
sub
mov
fwait
adc
jle
movsb
cmp
movb
dec
dec
sbb
mov
sbb
push
inc
adc
dec
aad
sub
dec
fdivs
jb
ud1
out
push
popf
int
idivb
idivl
es
dec
fnstenv
push
and
sub
rcrl
mov
pop
loopne
ret
jae
daa
lcall
push
lods
push
or
dec
jno
xor
push
push
lret
loopne
sub
imul
push
push
adc
stos
iret
loop
in
jne
and
pop
add
cmpl
cwtl
enter
push
inc
clc
stos
mov
pop
adc
lea
test
xor
imul
add
nop
divl
push
cmpsb
nop
movsb
add
mov
stos
in
pop
jle
cmp
arpl
jbe
jbe
outsb
mov
add
popf
imul
nop
xchg
ja
popa
pop
push
mov
negb
adc
fldenv
adc
in
fs
cltd
pop
lods
pop
xor
enter
push
lods
insl
adc
ja
pushf
cwtl
mov
jo
notb
xchg
sbb
lods
movsb
pushf
in
or
and
out
push
push
imul
mov
lret
bound
inc
mov
test
sbb
insb
ds
or
das
into
notb
mov
inc
xchg
out
xchg
add
or
xchg
mov
hlt
mov
cmp
rclb
mov
lods
outsl
or
or
js
xchg
ret
fildl
mov
arpl
pop
or
rorl
fucomip
int
jno
push
add
add
sub
pop
mov
dec
rorl
push
and
push
inc
push
idivb
adc
jbe
das
inc
adc
inc
test
mov
adc
rcrb
mov
jg
sbb
out
lods
lret
xchg
lret
push
test
clc
lods
int3
mov
aam
xlat
ret
lcall
gs
inc
mov
ja
les
jo
clc
addr16
xchg
or
in
xchg
aas
dec
test
loop
daa
inc
and
push
or
jl
movsb
repnz
xchg
aaa
sub
push
push
pop
test
pop
xchg
fstenv
mov
cmpsl
mov
popa
xor
mov
mov
fsts
sub
cmp
push
dec
xchg
pop
mov
ss
shl
aad
xlat
and
scas
call
icebp
repnz
fs
add
xchg
js
mov
fadds
sbbl
jg
push
es
mov
jae
inc
sti
aad
shr
adc
fwait
cs
ja
inc
ljmp
adc
aas
notb
test
mov
mov
clc
sti
rclb
mov
lds
lds
cmp
je
iret
inc
idivl
pop
mov
bound
fbstp
and
mov
mov
mov
push
sub
jge
pop
fisttpll
ffreep
xor
jg
repnz
pop
add
dec
dec
xchg
xchg
incl
fimull
mov
daa
mov
scas
dec
jb
add
or
stos
cwtl
stos
loopne
sub
mov
jae
inc
pop
push
clc
inc
mov
jl
xchg
int
mov
jge
fidivs
pop
mov
push
lahf
daa
inc
mov
push
lret
lods
jmp
xchg
insb
lahf
imul
mov
sahf
jp
dec
iret
adc
flds
xor
pushf
push
xchg
lods
jmp
mov
adc
inc
cs
jp
in
jg
push
mov
xchg
jmp
adc
outsb
push
loope
into
pushf
out
xchg
je
xchg
cld
lcall
mov
inc
push
adcb
dec
or
jo
xor
jle
in
jecxz
pop
sbb
popf
in
cmp
sti
cmc
or
add
fistps
push
fimuls
push
inc
pop
ficomps
adc
xor
and
cltd
pop
push
pushf
push
fmulp
das
add
ljmp
ret
mov
js
push
and
rolb
mov
mov
jl
mov
dec
into
inc
cmp
pop
out
outsb
jge
movsl
mov
push
jnp
dec
mov
mov
lea
fidivl
cmp
pop
adc
dec
fcmovnbe
add
mov
pop
popf
js
xlat
xor
dec
cmpsl
fisubrl
int
add
and
xlat
int
test
insb
ja
inc
xchg
imul
aam
jg
jns
lds
adc
pop
in
fdivs
mov
call
or
or
or
and
out
in
cmp
gs
mov
aaa
pop
mov
xor
cmp
jle
pop
outsl
xorl
cmp
pop
into
mov
mov
or
pop
pop
cmp
fisubl
lods
ss
push
or
mov
jo
or
inc
test
xchg
mov
ret
push
shrl
mov
insb
mov
sbb
add
mov
pop
jg
iret
push
push
pop
add
fsubrs
and
mov
jne
stos
mov
stos
in
out
jbe
xor
and
das
adc
add
xchg
repz
mov
mov
push
cmpsl
fistps
aad
mov
dec
push
movsl
fdivrs
jnp
mov
dec
lds
mov
push
xorb
mov
sub
enter
mov
popa
test
sub
inc
movsb
mov
and
mov
int
mov
xchg
out
mov
pushf
test
push
lock
lahf
ss
inc
mov
orl
jae
int3
add
mov
enter
sti
inc
sahf
jl
sahf
mov
inc
lods
pusha
push
jmp
and
es
inc
xlat
xchg
pop
pop
fidivs
mov
pop
adc
mov
mov
ljmp
dec
popf
sbb
test
inc
push
pusha
idivl
bound
mov
scas
jp
push
nop
sti
ret
adcb
pop
lret
int3
arpl
push
and
inc
orl
js
push
out
pop
add
dec
and
adc
adc
outsl
pop
les
fmuls
lods
adc
xlat
outsb
sbb
push
stc
jmp
in
movsb
ret
and
sbb
out
xor
xor
pop
mov
dec
into
addl
sub
pop
mov
leave
push
jb
sbb
jg
ljmp
sub
mov
mov
insl
imul
mov
add
jb
inc
dec
addr16
xor
movsb
adc
rcrl
mov
jno
jnp
fisubrs
gs
call
test
mov
cmp
jle
movsl
es
cwtl
jo
aam
jb
out
addb
or
lcall
inc
icebp
add
dec
sbb
jp
inc
push
hlt
lcallw
push
mov
sbb
aad
adc
subb
lret
push
pop
mov
iret
scas
and
ja
insl
jno
adc
and
sub
add
sbb
mov
push
add
xchg
xor
insl
mov
arpl
sub
ja
je
or
xor
adc
xor
mov
cmpl
lcall
lods
add
add
lret
push
xor
arpl
sbb
ds
add
pop
mov
repnz
movsb
add
xor
inc
mov
out
cmc
push
mov
insb
inc
je
xchg
sbb
mov
test
inc
push
out
or
mov
clc
cmpsb
jl
mov
insl
outsl
insb
adc
sbb
fisubs
and
pop
dec
pop
push
pop
out
mov
sub
mov
loop
cmp
inc
andb
mov
adc
inc
js
fisubl
inc
sub
or
dec
out
cld
cmp
inc
pop
call
sub
nop
jl
push
lods
mov
jnp
jmp
pop
xor
sarl
xlat
mov
filds
push
sub
int3
adc
and
fs
insl
js
imul
xchg
pop
inc
fldt
adc
or
cmp
add
sbb
pop
popf
or
pop
cmc
mov
mov
xchg
and
mov
hlt
pop
and
adc
dec
and
leave
xchg
xor
fcomps
push
popa
or
data16
fstps
mov
leave
fisttpl
loope
mov
into
orb
jo
dec
scas
sub
mov
jno
je
mov
idiv
or
mov
add
pop
rep
daa
ja
or
jne
cltd
lcall
pusha
jge
mov
or
mov
push
inc
test
xchg
xchg
adc
jmp
jae
test
adc
push
mov
sbbl
sahf
jle
pop
xchg
mov
dec
mov
outsb
pop
aad
dec
or
out
lods
mov
mov
sbb
add
or
push
mov
repz
bound
mov
int
jo
ljmp
and
and
das
lods
cltd
pop
orb
pop
arpl
jp
jae
leave
jno
jle
cmp
movsb
mov
sub
cmpsb
loope
clc
popf
jp
je
out
xchg
jb
imull
inc
sub
sbb
testb
lods
xlat
stc
jb
push
mov
adc
mov
push
insb
jae
lds
arpl
mov
jge
xchg
lret
mov
out
mov
and
cld
das
sub
hlt
negb
fnsave
ret
push
add
inc
aaa
inc
cmp
xchg
push
dec
dec
fs
int
cmp
popa
ror
fstpt
push
daa
inc
mov
rorb
xchg
lods
adc
int3
lret
out
push
mov
daa
and
jle
cmpsl
pop
in
stos
adcl
push
cld
push
push
dec
mov
dec
and
mov
imul
lock
out
dec
xchg
aad
mov
mov
xor
cs
ds
shlb
jno
cmc
pop
mov
mov
push
adc
mov
cli
js
fbstp
push
aas
dec
pop
lods
push
dec
loop
mov
lods
pop
cmp
shr
jnp
mov
and
mov
jp
int
sub
push
adc
data16
stos
mov
or
out
add
mov
push
stos
in
loop
xchg
daa
outsl
aam
dec
ret
and
mov
fsubrs
and
hlt
movsl
out
testb
dec
aam
cmpsb
shlb
mov
out
je
cmpsl
xchg
jl
jp
jne
xor
cwtl
std
cs
sub
cs
jp
insl
out
lods
dec
jecxz
adc
fmulp
les
mov
inc
sbb
rcrb
jl
mov
push
pop
arpl
sub
sub
dec
pop
jo
xchg
out
dec
or
sub
adc
rclb
imul
inc
pop
loopne
add
dec
or
popa
mov
mov
cmp
or
movsb
xorl
inc
add
mov
pop
xchg
cltd
mov
sahf
push
lds
icebp
gs
jmp
mov
lcall
xchg
jne
leave
enter
jb
add
cmp
iret
les
jmp
xchg
lret
scas
das
inc
xorl
dec
pop
or
lret
gs
xlat
or
sbb
sub
icebp
or
jl
push
jl
ret
and
or
fsubl
imul
outsl
pop
imul
jo
mov
out
iret
dec
aaa
adc
in
pop
jae
iret
repnz
mov
xchg
stos
or
in
enter
and
push
std
push
sub
out
lret
xchg
push
hlt
xor
pusha
stos
inc
xchg
decl
arpl
cld
scas
sub
xor
xchg
testb
jo
lea
js
ljmp
or
cltd
in
scas
fiaddl
mov
and
fidivs
pop
xor
sub
fwait
jmp
xor
aam
mov
pop
hlt
adc
push
movsl
xor
out
pop
outsl
ss
jle
movsl
cmp
xchg
gs
mov
push
jns
sahf
add
js
ret
outsl
negl
ret
shl
inc
xor
mov
dec
je
and
jge
sbb
sbb
scas
push
into
jnp
push
and
pushf
mov
in
xchg
mov
ret
sbb
add
sbb
push
repz
loopne
cmp
add
test
and
jl
jbe
xor
lock
lret
jnp
ret
adc
dec
inc
lret
cld
and
pop
adc
in
lcall
rolb
loopne
push
push
lahf
cmc
jmp
nop
lods
sahf
ss
mov
jg
jne
leave
mov
iret
mov
or
scas
xchg
fwait
jp
xchg
pop
cwtl
mov
out
xor
add
mov
fcompl
scas
insl
shlb
jno
test
inc
sbb
scas
in
push
mov
mov
mov
dec
add
inc
push
jno
dec
scas
sub
loope
mov
inc
and
fidivrl
fsubrs
iret
push
ret
adc
stos
mov
fadds
mov
cmpl
popa
xchg
adc
inc
inc
notb
push
aaa
lret
jmp
in
push
mov
or
mov
pop
lret
lahf
push
dec
sbb
sar
aad
in
lret
das
jmp
jnp
fwait
push
pushf
cld
popa
pop
pop
ror
push
sahf
lock
aad
rcrb
add
inc
andl
jl
adc
xchg
mov
mov
jns
loope
out
sbb
mov
out
sbb
mov
jno
enter
or
sbb
add
dec
cmp
je
ficomps
cmp
or
mov
pop
pusha
dec
pushf
inc
sbb
fsts
jnp
xchg
xchg
sbb
mulb
or
fcomip
jns
out
out
andb
cmc
sbb
jne
int
addl
add
call
mov
fs
fwait
mov
jae,pn
out
aad
jle
stos
scas
mov
cwtl
xchg
sub
loope
adc
mov
lcall
imul
cmp
cmpsb
imul
add
or
adc
loop
in
inc
icebp
stc
mov
sti
xchg
mov
subl
cmpsl
aad
cld
ror
imulb
lds
jmp
popf
dec
jecxz
mov
cmp
add
fimull
fs
add
mov
mov
rorl
mov
iret
cmp
xchg
xchg
xor
jns
inc
les
lcall
mov
in
in
loopne
lods
in
pop
ja
dec
push
mov
mov
shr
popa
and
mov
sbb
ds
and
mov
lods
add
sbb
pop
dec
jb
inc
lret
aad
int3
inc
sub
xchg
add
push
lahf
mov
inc
and
movsb
rorb
xchg
add
push
mov
decl
neg
idivb
cmp
adcb
sub
pop
iret
jb
cmp
ja
mov
pusha
jge
cmpsl
shl
repnz
add
mov
xchg
dec
jge
enter
cltd
std
sbb
adc
add
out
repz
es
and
lds
and
dec
jnp
insb
ret
mov
mov
orl
loop
into
dec
dec
mov
loope
ds
in
pop
dec
lock
add
xlat
shr
xchg
push
roll
cmpsl
jne
push
sahf
aam
sub
mulb
xchg
ret
push
or
dec
gs
lea
mov
jecxz
scas
xchg
jmp
in
jmp
adc
or
addr16
jmp
xchg
jo
or
cmp
dec
jecxz
and
aad
xor
das
adc
xchg
mov
adc
sahf
and
pop
loope
cmp
in
sub
or
jge
call
aas
repz
push
call
out
popa
inc
dec
sbb
sbb
loope
push
mov
xor
push
or
sub
jbe
loope
cmpsb
push
jmp
testb
ja
scas
int
and
xor
and
fiadds
fbstp
into
arpl
repnz
mov
adc
dec
add
cmp
cmpl
sbb
dec
rcll
out
rclb
icebp
sarb
mov
addl
mov
push
adc
lahf
mov
cld
into
fsubl
dec
in
lcall
pop
mov
in
lret
lret
inc
sub
push
test
dec
fs
sub
mov
push
insl
push
xor
popa
jp
xchg
push
test
add
test
mov
sahf
in
je
xchg
mov
aas
arpl
in
fwait
push
iret
std
stos
inc
das
mov
leave
push
orl
xor
lds
popf
cmc
pop
or
ljmp
cmc
int3
dec
push
xchg
pop
stos
cli
xchg
sub
pop
pop
jg
ja
mov
fnstsw
dec
divl
xor
orl
xchg
hlt
in
push
inc
fwait
lcall
mov
fistps
pop
inc
push
and
adc
pushl
dec
xor
add
popa
dec
fimull
or
xchg
sub
or
fsubrs
mov
mov
xchg
in
ret
mov
loope
or
sarb
or
test
inc
int
int
stc
out
dec
dec
push
mov
lcall
aam
hlt
mov
inc
cmpsl
in
mov
lret
mov
or
push
test
push
ja
mov
jb
lds
inc
fnstcw
fnsave
lods
stos
fld
rcl
into
mov
jno
addl
add
add
push
adc
xchg
mov
push
inc
in
inc
sahf
mov
pop
and
xor
inc
push
in
mov
stos
sbb
inc
je
mov
js
xchg
jge
js
jecxz
popf
hlt
sbb
lods
mov
jne
cmp
dec
mov
leave
addl
cli
shlb
shrl
push
mov
inc
insl
pop
cmp
icebp
add
xchg
sbb
sbb
ljmp
or
jne
inc
pop
mov
push
mov
mov
and
lret
and
cmp
mov
and
loop
sub
fs
std
repz
and
xchg
inc
lock
ret
jge
push
xchg
aad
cld
jg
jbe
mov
push
rol
in
std
xorl
aaa
aas
into
or
fsubl
xor
push
fnstcw
dec
xor
dec
pusha
and
push
push
ja
sbb
sahf
andb
repnz
and
fimull
xor
int3
push
mov
daa
or
push
pushf
stos
insl
cmp
inc
xor
jecxz
push
mov
or
js
mov
xor
filds
xchg
pop
lock
mov
aam
addr16
inc
stos
cmp
lods
xchg
mov
stos
dec
and
gs
seta
mov
cmp
mov
mov
in
imul
test
pop
test
ret
js
sub
jp
movsl
cmp
fstps
out
mov
cwtl
inc
shlb
or
cmpsl
ficoms
sbb
mov
push
lahf
xchg
xor
push
rcr
add
add
jle
push
lock
jg
shl
push
mov
loope
inc
cmpsb
test
xor
jp
pop
addr16
ret
mov
ss
xor
ret
push
inc
fildl
and
daa
fldl2t
and
dec
dec
dec
sub
ljmp
pushf
je
cmp
inc
jmp
jae
mov
jp
mov
test
adc
xchg
stc
repnz
loopne
sbb
inc
jmp
negl
pop
fldcw
cmp
mov
test
mov
iret
fildll
dec
jno
ljmp
out
pop
outsl
and
stos
xor
ss
fnstenv
and
pop
popf
pop
fmuls
scas
popa
fsubl
xchg
out
lds
test
pop
addr16
mov
dec
dec
mov
push
lcall
jge
xchg
notl
push
loope
ret
adc
xchg
mov
pop
cs
fsubrl
cltd
sbb
es
outsb
fs
cmp
bound
mov
ret
mov
and
fcmovnbe
ljmp
cmp
and
lret
hlt
xchg
lods
push
mov
ror
xor
lods
inc
ret
jle,pn
outsb
popf
mov
add
push
jecxz
mov
sbb
shrl
insl
and
insb
cmp
mov
stos
inc
aam
mov
in
and
jnp
and
lea
xor
pushf
mov
inc
out
cli
xchg
jge
lahf
stos
call
or
pop
jb
adc
mov
enter
xchg
and
cmp
inc
fwait
imul
popf
sti
xchg
push
clc
mov
cmpsl
das
xchg
mov
cmpsb
popa
xor
loopne
rclb
and
insl
or
inc
out
mov
enter
mov
fldenv
clc
sahf
stos
aaa
xor
scas
jno
jmp
mov
add
test
and
xor
int3
push
imul
or
adc
push
loop
cmp
xchg
xchg
insb
ret
popa
lcall
cmp
inc
fsubs
ret
sbb
call
enter
insb
sub
xor
stc
call
pusha
xor
lahf
add
int
jno
sbb
cmpl
arpl
gs
pop
xor
subb
repnz
or
and
inc
repz
test
inc
xchg
add
xlat
orb
jecxz
jge
popa
xor
sbb
outsb
push
fstpl
mov
les
outsl
rcll
mov
neg
loope
mov
mov
stc
je
inc
sub
sub
push
inc
je
aaa
and
xchg
adc
into
stos
push
inc
inc
inc
xchg
ljmp
and
in
pop
jbe
cmp
add
adc
imul
outsb
pop
fsubp
mov
pop
mov
aad
je
repz
insb
movsl
rclb
out
mov
mov
cmp
popf
js
jg
inc
push
cmp
sbb
ss
pop
jb
imul
scas
ds
test
or
out
movsb
xchg
insb
xchg
cwtl
ss
nop
push
hlt
mov
adc
jmp
sub
jne
push
fcomps
lea
or
push
mov
dec
cwtl
js
insb
adc
je
mov
push
fsubrl
adc
or
dec
adc
test
mov
mov
out
sbb
cmp
jb
and
mov
pop
pop
ficoml
mov
jecxz
xrelease
and
jns
out
data16
out
xchg
mov
pushf
xchg
and
sahf
or
loopne
cmp
sahf
push
int3
sub
or
outsl
mov
in
pushf
repz
int3
mov
idivl
mov
mov
mov
push
jecxz
dec
pop
jl
loopne
sub
mov
or
xor
clc
lcall
inc
aam
add
sub
lret
xlat
fiaddl
loop
movsl
pushf
scas
and
push
mov
pop
adc
arpl
mov
fsubrl
divl
rolb
nop
jns
dec
add
jae
shll
aaa
dec
stos
jmp
add
jmp
fstps
cmpsl
ret
xor
cmpsb
add
movsl
add
push
das
pushf
mov
push
into
inc
ljmp
mov
cld
jnp
jl
pop
dec
xor
mov
aaa
pop
sbb
imul
icebp
adc
into
enter
and
pop
lahf
divb
xor
push
in
xor
inc
push
icebp
fimull
clc
push
push
jg
mov
fs
mov
daa
jp
je
icebp
adc
push
adc
testl
mov
scas
cmp
mov
pop
outsl
leave
jmp
hlt
xchg
cmc
adcl
subl
mov
shrb
lods
mov
cmpsl
and
roll
mov
and
inc
shl
ljmp
pop
and
jne
bound
arpl
dec
dec
jb
insb
pusha
dec
xor
and
adc
outsl
dec
mov
and
mov
bound
or
or
ja
mov
lods
shr
je
cmpsl
imul
popl
mov
jnp
inc
and
mov
aas
mov
inc
frstpm(287
or
jg
push
arpl
adc
stos
incb
popf
mov
out
xor
out
imul
lds
enter
xchg
sub
push
inc
rcrl
pop
add
daa
and
cmp
mov
xchg
add
add
dec
cmp
lea
aam
pop
mov
int3
hlt
ret
xchg
inc
push
repz
int
cmp
in
jp
leave
jecxz
push
mov
adc
imul
and
shlb
jge
sbb
mov
pop
xor
out
mov
pop
daa
in
and
adc
ljmp
pushf
scas
insb
jbe
dec
and
xchg
pop
test
sbb
inc
adc
xor
sub
xchg
movsb
inc
iret
add
mov
mov
lods
call
mov
fidivrs
push
inc
out
test
inc
sbbb
shrb
in
sti
mov
dec
mov
mov
mov
xchg
jno
xchg
cmp
xlat
emms
imul
push
adc
movsb
lret
je
pushf
ret
and
fildll
add
xor
push
and
pop
dec
pop
in
xchg
push
sub
sbb
mov
notb
sub
fidivs
fmull
rolb
nop
lods
add
or
lret
push
fadds
nop
bound
jae
cmp
inc
jmp
mov
sub
sahf
adc
les
test
cmp
flds
mov
mull
mov
dec
dec
insl
or
lods
xor
lods
mov
ljmp
adc
inc
int
mul
bnd
push
popf
aam
jge
sarb
sub
xor
int3
sub
jp
xchg
aad
fnstsw
in
xchg
pop
cwtl
jecxz
jbe
xor
dec
push
mov
xchg
sub
idivb
lock
dec
out
cld
out
fwait
cmp
and
pop
mov
pop
aaa
mov
mov
adc
dec
sub
pop
outsl
arpl
add
andl
ja
pop
dec
ss
or
jns
inc
pop
mov
lock
icebp
lods
cmp
test
mov
cmpps
inc
fidivl
xor
push
add
ljmp
mov
aad
fadds
cmpsl
push
mov
fcoml
jb
pop
in
jnp
aaa
or
inc
stc
jle
push
xchg
call
scas
insl
sub
les
repnz
fistps
mov
sub
xchg
stos
les
bnd
cmp
rorb
mov
gs
mov
nop
adc
lods
jae
push
nop
dec
test
pushf
push
push
mov
jmp
inc
inc
mov
ja
xor
or
cs
fcmovbe
add
adc
lahf
jp
add
imul
in
loopne
enter
mov
mov
dec
cmp
lock
mov
ds
inc
pushf
jge
decb
adc
cmpb
mov
popf
xor
outsb
fdivs
je
pop
lcall
cmp
pop
leave
pusha
inc
xchg
mov
or
insb
add
aas
mov
jg
idivl
inc
popf
dec
push
sbb
sub
cmp
jg
aad
dec
push
mov
jmp
inc
sbb
push
and
in
out
xchg
xchg
and
test
ljmp
test
in
sub
icebp
mov
xchg
push
lds
mov
rcrl
hlt
mov
insb
rol
stc
jg
and
dec
das
shrl
test
push
xchg
cmp
out
mov
sbb
pop
cwtl
xor
aad
mov
rclb
add
xchg
test
xchg
fistps
cld
sbb
adc
xchg
cmpsb
hlt
xchg
jae
out
xchg
xor
adc
arpl
idivl
hlt
mov
jge
jnp
test
mov
hlt
push
outsl
movsb
and
mov
or
xor
lahf
orl
cwtl
ret
ljmp
out
movsb
shr
fldl2t
fwait
xor
jnp
xor
pop
and
dec
and
adc
xchg
adc
pop
pop
jg
aas
push
sub
sbbl
sbb
mov
test
add
jb
jbe
jg
cmp
mov
xchg
jo
iret
and
std
loopne
in
leave
fs
in
mov
addr16
int
xor
jbe
movsl
adc
and
cmp
insb
inc
mov
stc
les
mov
xchg
hlt
rcl
inc
push
outsl
mov
jb
andl
std
mov
jl
push
xor
call
mov
es
pushf
xchg
iret
in
fbld
test
sbb
mov
and
jecxz
mov
pop
das
rclb
inc
leave
xor
cmpl
jmp
les
dec
in
andb
fsubr
push
xchg
jbe
shlb
sbb
js
dec
stos
nop
cmpsb
jae
les
cmp
loope
lods
jle
dec
call
dec
leave
call
es
cltd
add
into
dec
xchg
pop
cli
adc
rclb
fstps
push
xor
mov
out
jg
xchg
mov
daa
data16
sub
jns
imul
jge
cmc
mov
in
inc
gs
xchg
mov
imull
aad
adc
cmp
daa
cmp
mov
in
inc
jge
in
inc
push
jae
sahf
mov
lcall
pop
push
cld
inc
xlat
mov
mov
and
fiaddl
adc
xor
xor
push
lods
xor
push
mov
lahf
ja
cmpsb
lock
mov
adc
cmovns
dec
movsb
lea
xor
or
pop
sahf
out
jg
push
or
std
mov
push
push
push
lret
mov
push
stos
movb
mov
push
mov
mov
sub
mov
inc
xchg
test
out
xchg
test
sub
inc
aad
jmp
andl
cmp
mov
add
and
jns
mov
andb
push
mov
in
mov
adc
cltd
std
sub
and
out
iret
ret
inc
sub
stc
mov
mov
mov
std
cmp
lods
lea
jle
xor
and
xchg
test
add
pop
insb
lods
dec
jbe
aam
cwtl
mov
dec
cmp
int3
sbb
addb
dec
es
in
nop
stos
inc
fcomps
sbb
loop
sbb
imul
jns
pop
push
xor
scas
out
jg
lahf
mov
jg
xor
jnp
ficoms
int3
mov
test
inc
push
mov
cwtl
sbb
cltd
xchg
sbb
outsl
bound
lcall
sahf
idiv
push
mov
es
aam
outsb
cmp
clc
xor
pop
dec
adc
mov
cmp
stos
test
pop
pop
push
aas
inc
repnz
pop
or
inc
push
mov
pop
cmc
cmpsl
add
fldl
push
and
push
movsb
hlt
sahf
xor
mov
rorl
fisttpll
xor
adc
cmc
ds
cld
inc
xchg
xchg
cmp
leave
cmc
dec
arpl
sahf
push
pop
mov
xor
enter
mov
inc
fstpl
xchg
pop
imul
sub
mov
loop
pop
mov
sub
fcmovu
cmp
push
xorb
stos
push
xchg
rcrl
cmp
mov
xor
jns
sbb
dec
mov
lret
dec
ret
imul
jnp
xchg
inc
push
mov
outsb
mov
xor
std
add
pop
push
das
pop
fdivl
ljmp
loope
imull
mov
add
lea
xor
xor
xor
jbe
mov
sbb
adc
andl
pop
sbb
push
xor
in
hlt
jecxz
mov
out
push
and
das
and
lds
cltd
add
insl
clc
cmp
sbbb
add
ja
mov
imul
dec
arpl
sub
xor
cli
jle
icebp
sbb
pushf
xchg
ds
jnp
push
ss
pop
les
js
cmpsl
jbe
or
cs
leave
fstpt
cmp
sbb
xor
popa
dec
add
mov
push
mov
pop
adc
sub
or
pop
sub
rorl
inc
pop
int3
mov
and
jmp
xchg
push
pop
jo
mov
int
cli
cli
and
jbe
shl
fsubs
and
cmp
xchg
stc
adc
xchg
mov
push
sbb
adc
fdivs
out
adc
jecxz
dec
xor
aaa
into
popf
shl
xor
mov
fwait
cmpsl
push
cmpsl
mov
int
imul
pop
stos
jp
or
sub
jnp
push
inc
sbbl
mov
sbb
cmp
add
sub
jmp
dec
out
xor
repnz
push
push
jns
pop
mov
mov
pop
adc
stos
jp
icebp
and
je
idivb
aam
jmp
repz
sbb
push
cld
rolb
sub
int3
stos
push
cmpsl
clc
fsubr
sub
fistl
cld
dec
and
leave
push
mov
test
incb
lods
lret
or
les
ret
mov
lock
sbb
cmp
scas
xchg
aad
sub
mov
inc
lfs
movsb
ret
or
inc
push
shll
inc
mov
xor
movsl
mov
lods
pop
sub
in
mov
add
mov
add
and
sahf
scas
inc
push
and
pop
hlt
and
jnp
jbe
jmp
cmpsl
mov
fidivs
inc
iret
sbb
mov
idivb
cli
repz
fisubrl
pop
jmp
jmp
repnz
inc
pop
int3
test
dec
rcr
xor
mov
fwait
lcall
je
popf
inc
dec
xchg
fsubrs
dec
ljmp
enter
stos
push
push
out
lret
ss
jmp
test
lahf
daa
das
mov
jle
adc
and
add
xor
incl
mov
shrb
pushf
mov
js
fs
inc
push
or
mov
pop
lock
sarb
push
jmp
fdiv
icebp
mov
mov
cmpsb
mov
fdivl
sub
loopne
inc
rcrl
ss
cmp
and
call
pop
stos
xor
es
and
push
repnz
inc
cltd
jp
cmpsl
loope
or
in
and
mov
cmpsb
cmp
push
test
fstpl
stos
adc
fdivs
push
push
test
lcall
adc
dec
jle
gs
sub
adc
pop
movsl
repz
cmp
pop
mov
pushf
mov
jp
adcl
inc
mov
inc
or
jle
and
fsubrs
out
push
daa
dec
mov
cmp
sbb
rcll
add
hlt
lcall
rclb
imul
int3
mov
test
pushf
test
cwtl
data16
push
mov
call
add
ljmp
mov
mov
push
sub
cwtl
addr16
xor
sub
inc
and
jle
jnp
addr16
sub
sahf
mov
imul
mov
xor
in
std
pushf
cmp
inc
xor
pop
xor
fnstcw
sbb
insl
adc
pop
dec
in
lods
jp
movsb
insl
gs
sub
cmpsb
mov
scas
jns
stos
xchg
add
std
aam
js
sbb
lock
adc
mull
outsl
mov
adcb
clc
xchg
push
push
mov
inc
pop
scas
movsl
cli
imul
pusha
push
jecxz
push
in
stc
lahf
cmpsl
push
out
fadd
loopne
sub
and
jmp
mov
mov
insl
xor
sbb
test
dec
jge
jno
cltd
or
fists
std
push
outsb
lahf
into
and
inc
or
adc
cmp
out
negl
shlb
fnsave
popf
in
dec
movsl
mov
jne
mov
cld
push
xor
pop
insb
jp
fbstp
inc
lahf
stos
cmp
push
call
and
dec
pop
sti
jecxz
dec
clc
and
movsb
jge
ret
jl
mov
push
repz
cmpsl
xchg
push
lock
cltd
cs
stc
xor
out
inc
push
fsubrs
xor
imul
fwait
scas
adc
cs
repz
fidivs
xchg
cli
or
shr
insb
adc
jne
mov
fidivl
push
add
ja
stc
nop
dec
loopne
xlat
sbb
scas
nop
mov
xor
inc
js
outsb
adc
push
scas
popf
mov
arpl
or
insl
mov
loopne
mov
js
hlt
pop
fs
mov
inc
lcall
testl
das
dec
popf
cmp
sub
cmp
jle
mov
xchg
add
sbb
xchg
stos
pop
jnp
add
dec
pavgb
sub
lret
pop
aad
cmp
mov
fistl
lea
cmp
pop
testb
repz
cs
jbe
mov
add
cs
mov
fcompl
cmp
js
push
das
ret
arpl
mov
popa
mov
push
call
int3
cmp
fdivrs
and
push
scas
repnz
mov
dec
xchg
mulb
movl
test
sbb
clc
das
jne
xchg
test
into
dec
sahf
js
mov
out
test
add
repnz
adc
jns
push
inc
dec
push
jo
stc
iret
mov
popa
and
mov
shll
cmpsb
fisubs
call
jne
ret
rep
push
cmp
lcall
mov
mov
jmp
lods
mov
pusha
xor
sbb
xor
mov
sub
lea
add
ss
stc
jnp
sub
inc
push
test
daa
push
sbb
mov
xor
push
mov
jb
mov
xchg
sahf
or
push
add
addr16
inc
leave
push
pop
cmp
fidivrs
in
into
lret
inc
and
and
jno
xor
sbb
mov
push
scas
add
scas
xchg
mov
imul
mull
shll
movsl
nop
imul
mov
loop
stc
inc
pop
mov
stc
movsb
adc
push
jge
adc
or
inc
xor
push
int3
and
je
fldenv
dec
fdecstp
je
sbb
popa
clc
mov
clc
mov
adc
out
or
daa
adc
roll
fnstenv
insl
mov
adc
daa
ss
fwait
repz
scas
loopne
rclb
lods
lds
mov
hlt
outsb
cli
xchg
mov
rcrl
into
inc
mov
push
xchg
push
xor
xchg
out
push
stos
int
das
sub
arpl
in
push
in
test
sbb
mov
push
push
dec
fwait
and
push
xchg
mov
xchg
dec
data16
cli
adc
movsl
mov
xchg
lods
movsl
je
enter
mov
xchg
add
mov
andl
add
mov
mov
ret
inc
push
outsb
gs
gs
xor
mov
daa
adc
ret
inc
inc
mov
dec
loope
lods
mov
jmp
mov
push
inc
repnz
dec
dec
inc
sbb
cmp
sti
pop
xor
aad
addl
lods
out
subl
mov
mov
stos
inc
sub
es
xor
xchg
jnp
jae
dec
pop
mov
xor
mov
jecxz
std
xchg
andl
push
and
adc
pop
js
mov
push
sub
mov
jo
lahf
rcrl
scas
movsl
adc
xchg
lret
int3
and
mov
js
push
xchg
lock
add
divl
xchg
dec
pusha
sbb
cmp
sarl
sbb
and
stc
adc
or
test
pop
aaa
sti
lret
aaa
pop
js
in
pushf
cltd
test
imul
outsl
sbbl
iret
scas
fwait
repz
cmp
add
fisubrs
push
shrl
add
arpl
out
test
mov
push
push
js
push
lock
dec
clc
push
mov
pop
in
je
pop
ljmp
bound
mov
jmp
rol
rorl
cmp
push
ret
sub
cs
shl
sub
sahf
mov
xchg
dec
inc
push
jmp
dec
pop
jbe
fldenv
push
nop
lahf
and
fisubl
test
inc
mov
in
lods
fistpl
js
cmc
aam
mov
push
jne
in
stc
out
stos
sbbl
inc
inc
ret
sub
fnstenv
xchg
jno
xlat
inc
adc
pop
daa
sbb
js
dec
out
mov
pop
mov
scas
mov
ret
sub
hlt
mov
test
scas
inc
mov
mov
xchg
xchg
cmpsb
in
repnz
popa
call
cmp
jo
fwait
xchg
test
pop
jp
pop
out
inc
jp
loop
dec
dec
cmp
out
popa
ss
mov
xchg
int
push
mov
xorl
adc
push
jb
int
mov
mov
aad
pop
inc
orb
push
adc
jnp
inc
icebp
movsl
out
aas
test
in
loope
lods
cmp
sbb
mov
insl
sbb
iret
cs
int
jb
neg
and
subb
mov
pop
xchg
inc
jp
ja
in
push
add
mov
or
xor
pop
jae
adc
sti
pop
pop
fstl
dec
out
jo
mov
or
jl
inc
inc
push
inc
imul
enter
aaa
outsb
add
adc
or
aaa
lcall
inc
stos
je
and
xorl
divl
xlat
shr
pop
sbb
adc
sub
pop
mov
jl
test
cli
push
dec
inc
pusha
jmp
mov
jge
aad
popa
lods
fidivs
mov
inc
lahf
mov
inc
fsubl
jo
fisttpl
icebp
sbb
inc
cmp
addb
inc
push
jle
int3
jl
mov
add
inc
adc
addr16
or
adc
mov
imul
scas
enter
adc
sti
aaa
push
mov
das
dec
leave
cmp
adc
inc
cld
adc
fbld
or
aaa
push
ret
arpl
and
pop
js
aam
sub
aaa
jle
js
jmp
mov
jmp
lods
add
pop
arpl
or
mov
jb
lds
inc
push
push
or
loope
pop
sub
jb
mov
scas
mov
xor
push
adc
loope
mov
out
lret
cmp
dec
rolb
xchg
xor
aad
and
push
daa
lods
out
mov
push
popa
xchg
xchg
cwtl
stos
stc
jmp
jnp
mov
and
adc
and
dec
jg
rorl
mov
mov
clc
stos
jno
fs
mov
aam
add
mov
in
test
xchg
cli
add
push
adcl
xor
cs
pop
mov
adc
pop
push
jae
icebp
lret
dec
sbb
pop
xchg
and
insl
imul
into
dec
out
hlt
in
xor
test
xchg
and
aad
push
sbb
in
js
or
sub
cmp
or
jl
test
into
push
je
fldenv
mov
outsl
repz
imul
jno
lret
xchg
inc
fdivl
add
lods
fwait
dec
sbb
mov
popa
add
push
add
push
movsb
pop
push
jne
add
pop
aad
arpl
cmp
sub
testb
mov
call
dec
addl
push
jl
shl
jl
gs
sarl
adc
mov
sbb
jae
data16
fsubs
inc
adc
dec
scas
push
xlat
popf
xor
test
pop
cld
mov
out
cld
sub
ret
stc
or
mov
mov
scas
cmp
loopne
ljmp
out
mov
xchg
jbe
adc
nop
cwtl
lret
and
sbbl
fisttpl
daa
mov
stos
cltd
push
pop
inc
lret
adcb
or
inc
cmpsl
and
xor
and
xchg
int
aad
mov
in
or
nop
mov
mov
xchg
sub
mov
mov
xchg
sbb
scas
dec
js
inc
mov
pop
xor
lods
mov
in
jle
add
pop
sub
cld
xchg
jo
push
rcll
icebp
adc
aaa
inc
inc
adc
repnz
lret
scas
ljmp
mov
mov
push
cltd
cmpsl
ffreep
lds
mov
jp
pop
dec
sub
and
mov
aas
push
insl
xchg
gs
aas
push
imulb
lock
jb
lret
mov
cs
sub
out
aaa
mov
cmp
imul
jle
dec
add
dec
push
push
xlat
inc
dec
pop
shll
or
pop
pop
cmpsb
xchg
mov
int
pop
jbe
push
push
push
cs
lock
cwtl
loop
aam
add
mov
pusha
mov
popf
adc
push
and
movsb
repnz
xchg
das
add
mov
std
cmpsb
xchg
pop
fstpl
mov
pop
pop
mov
bound
je
xchg
lret
jno
out
out
mov
fisttps
lea
dec
es
mov
lds
imul
int3
pop
inc
arpl
pop
xchg
and
jmp
or
popf
inc
pop
cmc
clc
pop
and
xchg
push
jno
xorb
sbb
roll
cmp
xor
out
and
inc
add
and
loope
insb
test
sahf
addr16
popa
ret
adc
push
adc
sbb
test
rcll
jp
lock
or
cmp
test
stos
movsb
in
rcr
ret
mov
daa
cmp
outsl
daa
xchg
mov
pop
xor
inc
mov
cmc
mov
lea
jae
icebp
adc
sbb
pushf
lret
cli
lret
fstp
mov
pop
icebp
div
shr
pushf
mov
push
lea
adc
bound
rclb
add
add
add
lea
jns
loop
test
aaa
std
fldenv
mov
cwtl
sbbb
scas
or
jp
adc
pop
add
subl
aam
cmp
and
sub
ds
sahf
xor
cltd
aaa
push
in
xor
adc
fs
andl
xchg
ljmp
sub
into
cmc
int3
cs
add
int3
fiadds
jns
movsl
out
fldcw
pop
dec
jae
inc
sub
mov
jns
inc
pop
notb
notl
push
push
sub
sti
idivb
js
repz
jnp
push
stos
cld
lods
and
add
mov
addb
dec
lahf
sub
add
sub
fimull
sbb
push
jae
pop
push
aas
dec
adc
cmp
notb
incb
lcall
adc
pop
cmp
test
push
cmp
adc
mov
movsb
repz
test
jge
inc
jb
sub
push
fdivrl
scas
inc
popa
stos
pop
mov
shrb
add
jno
scas
push
dec
and
repz
push
adc
xlat
iret
jmp
add
pop
mov
jnp
dec
push
js
xchg
xor
adc
pusha
sbb
leave
pusha
repnz
pushf
inc
scas
lea
sar
jne
cmpsl
sbb
pop
push
jecxz
xor
adc
mov
shrl
lret
scas
jb
clc
xlat
push
pop
mov
mov
rorb
jp
fsubr
cmp
aaa
je
sub
fstp
cmc
push
push
xor
dec
xchg
jl
fcmovnu
pop
push
or
xchg
jge
inc
ret
arpl
pusha
out
iret
push
jb
or
xchg
pop
sub
mov
jl
xchg
clc
inc
push
popa
mov
xchg
xor
mov
lret
push
dec
out
fisubs
into
insl
lods
and
scas
add
stc
fadds
mov
test
jmp
mov
cmp
adc
mov
push
jnp
mov
cmpsb
push
sub
std
sbb
cwtl
add
sbb
out
fldt
and
jmp
push
lea
mov
movsl
ds
cmp
hlt
xor
sahf
push
lret
sahf
pop
and
loopw
add
pop
shlb
xchg
pop
mov
or
xchg
xor
iret
push
test
mov
cmp
lcall
ja
lret
inc
cmp
xlat
cmpsb
in
scas
loop
loope
inc
jl
add
mov
jne
hlt
push
bnd
sub
aad
sarb
mov
ret
lret
jns
std
call
mov
jbe
adc
aaa
addb
mov
repz
ret
aas
ret
jg
aas
dec
and
mov
push
pop
or
xchg
cmp
nop
repz
std
push
dec
or
in
enter
leave
fistpl
leave
pop
adc
pusha
pop
cs
cmp
stos
ret
jp
ret
pusha
pop
mov
pop
or
xchg
or
insl
mov
gs
into
cltd
cmp
xchg
pop
dec
aam
insl
push
pop
pop
xor
and
inc
push
xor
and
test
jmp
and
mov
sub
add
or
or
xor
cmp
loopne
outsb
dec
dec
out
mov
xor
and
packsswb
inc
outsl
adc
inc
mov
pop
cmp
sbb
mov
jbe
cmp
fcmove
repnz
add
xchg
push
ret
out
pop
lea
enter
lods
cmc
or
mov
lret
sbb
jb
lahf
push
adc
pop
cmp
dec
dec
arpl
test
mov
sbb
incb
push
repz
pop
mov
popf
pop
iret
sbb
test
sbb
mov
in
shrb
stos
xlat
cmp
cmpsl
cmc
mov
movsl
fnsave
sbb
insl
inc
lea
xchg
xor
out
mov
shrl
das
mov
aas
cwtl
rolb
je
out
movsl
sbb
dec
mov
js
out
or
pop
ljmp
sbb
xor
sti
sub
je
sbb
loope
ficompl
daa
lods
mov
mov
or
cmp
es
adc
mov
xor
mov
into
push
mov
and
jbe
inc
in
test
jns
sub
nop
mov
inc
pop
scas
lea
dec
mov
ss
push
dec
jb
adc
subb
sub
xor
scas
xchg
cmp
sub
mov
cltd
call
cltd
mov
dec
movl
push
rcrb
jmp
pop
pop
cmp
jb
xlat
xor
xor
fisttpll
in
test
aam
push
push
push
adc
add
lret
popa
mov
jns
pop
movl
inc
mov
repz
test
sub
sbb
inc
divl
and
cmp
jb
xchg
nop
ret
cmp
jnp
mov
add
xor
test
dec
dec
or
lock
arpl
test
aam
sub
push
mov
hlt
sub
cwtl
cmp
loop
insb
sbb
aaa
push
movsb
mov
test
es
test
push
mov
or
xchg
test
cmp
mov
cmpsl
inc
mov
jae
rcrl
add
push
inc
jl
adc
sub
add
dec
jge
xchg
mov
ja
inc
jecxz
lds
movsb
ljmp
insb
dec
xchg
call
or
out
mov
test
sti
push
jno
lret
xor
je
lea
scas
xor
inc
rep
call
stos
ret
push
jbe
jp
jg
inc
fwait
insl
mov
push
hlt
push
dec
gs
xchg
dec
imul
stos
lcall
xor
mov
mov
pop
and
mov
pusha
in
xchg
js
mov
xchg
push
push
loop
jnp
loope
sahf
adc
sbbl
push
add
stos
mov
cmp
pop
push
sub
cmpsb
test
jge
ds
incl
js
cli
xchg
push
lcall
addr16
xchg
xchg
jns
pop
xor
into
or
pop
dec
and
mov
insb
mov
or
lcall
jnp
in
push
pop
mov
mov
jno
call
xchg
lds
fstl
inc
gs
mov
and
mov
xchg
sub
push
or
popf
xor
jecxz
call
mov
sub
jl
dec
cmp
pushf
insl
insb
sub
cltd
add
insb
mov
andb
subb
mov
mov
fnsave
dec
jmp
jbe
outsb
push
mov
adc
jg
imulb
cmp
mov
icebp
jg
sarb
mov
sub
xor
ss
push
jmp
or
and
dec
jb
dec
mov
ret
ret
iret
mov
sbb
lods
push
insb
les
das
imul
popf
and
sbb
lcall
xchg
aas
scas
push
cmpsl
push
sbb
xor
sbb
xchg
test
cmp
fdiv
jb
push
outsl
test
les
jge
sub
adc
ja
mov
xchg
inc
bndstx
or
in
pop
adc
or
pop
call
mov
fiaddl
xorb
xchg
sub
test
fadds
lods
inc
jb
fiaddl
jmp
rcrb
pop
jl
ds
mov
and
mov
cmpsb
lret
popa
es
or
cmp
jge
aam
mov
dec
in
pop
ss
dec
sbb
rolb
xor
scas
xchg
jp
out
jle
adc
inc
xor
in
inc
shl
mov
gs
and
pop
icebp
rclb
fwait
outsl
push
int3
loop
sbb
loope
sbb
cmp
test
ret
or
cmp
int
fldt
add
sub
lock
pop
push
fs
sti
mov
mov
imul
cltd
xchg
pop
inc
int
xlat
mov
pop
cmp
mov
fldenv
fwait
pop
loopne
and
mov
out
and
test
push
lret
ficomps
jb
cmp
jp
push
lods
out
aas
fists
fadd
adc
pop
lock
jg
test
cli
sbb
pop
sbb
mov
cltd
mov
push
xchg
inc
cld
lea
popa
fcoms
adc
sbb
test
xor
xchg
pop
scas
and
sub
inc
leave
fs
out
out
push
in
sub
iret
sbb
xor
rolb
add
sub
inc
fs
dec
mov
cmp
pop
out
loopne
jl
sub
addr16
cmc
push
out
xor
stos
imul
add
push
pop
push
outsl
or
shl
pop
sub
test
addr16
orb
cmp
sub
stc
pop
xchg
scas
ja
clc
das
inc
mov
mov
stos
dec
pop
adc
xchg
mov
fbstp
je
ja
sbb
sub
js
aas
push
inc
stos
inc
cmp
cmpsl
cmpsl
adcb
jecxz
fadds
mov
icebp
adc
push
popf
iret
scas
out
pop
lret
mov
mov
mov
ret
loopne
cmc
cmp
stc
out
dec
jmp
rcll
mov
dec
sti
push
repz
daa
jb
xor
int
insl
sbb
sub
enter
cs
xor
push
lahf
adc
lahf
cmpsb
xor
add
subb
inc
mov
jne
pop
popf
repz
dec
loope
je
loope
fldt
jns
montmul
cmpsb
inc
lcall
xchg
pop
lods
inc
mov
jp
fcmove
add
cmpsl
sahf
addr16
loope
push
lcall
jle
lret
es
mov
mov
jns
inc
stos
dec
fisubrl
mov
jp
push
dec
loope
inc
push
repnz
mov
fs
cmp
push
cltd
jp
xchg
and
fs
ljmp
lods
rclb
pop
push
jge
sbb
ss
popf
stos
imul
lods
mov
pop
leave
outsl
mov
jecxz
pop
jmp
icebp
mov
cwtl
stos
pop
pop
mov
and
push
jle
adc
push
jmp
push
addr16
push
pop
pop
addr16
pop
lods
push
sub
mov
dec
dec
and
mov
mov
jae
xor
xchg
and
rclb
ds
sub
orl
rcl
mov
in
mov
into
sbb
mulps
pop
or
stc
xor
int
stos
xor
sub
cmp
xchg
pop
jl
popf
sub
in
add
xchg
cmpsb
mov
js
sub
negl
lret
pop
cltd
xchg
mov
inc
mov
imul
fs
adc
mov
xor
sub
aad
inc
int
jmp
lea
mov
adc
xor
je
nop
jg
pop
mov
sti
shlb
mov
mov
sbb
stos
ret
pop
fnstenv
repnz
arpl
popa
sahf
insb
jnp
dec
arpl
pop
sub
mov
pop
mov
outsl
jp
fs
pop
jg
cltd
inc
je
cmp
fnstenv
fucomp
sti
rclb
adc
xor
inc
pop
add
out
and
fmuls
or
jo
dec
out
ljmp
or
cmp
push
fidivl
xchg
test
sbb
xor
lcall
iret
into
dec
mov
fs
in
xchg
leave
iret
inc
rcl
or
addr16
xor
xchg
push
xchg
jg
add
sbb
sti
dec
ret
jnp
pop
or
jl
stos
cltd
js
dec
or
mov
xchg
adc
mov
cwtl
sbb
cmp
int3
arpl
into
ljmp
push
mov
adc
mov
or
shrl
push
mov
sbb
mov
imul
daa
mov
dec
and
jb
scas
popf
or
insl
add
sahf
inc
lret
and
push
sbb
aas
ljmp
in
jle
mov
out
adc
out
push
adc
push
mov
mov
cld
movsl
cmp
lock
int
les
jns
shll
cmp
jle
repz
xchg
icebp
clc
jb
jecxz
ljmp
xor
icebp
jp
scas
inc
mov
lahf
outsb
sbb
add
dec
imul
sti
xchg
popf
je
sbb
hlt
hlt
das
fsubl
cltd
ret
loopne
aam
xor
repnz
stos
adc
xchg
cmp
test
js
roll
cmp
push
and
fdivrs
aam
rcrl
js
push
das
loope
movsb
icebp
das
or
xchg
subl
lock
jmp
jge
or
pop
inc
insl
pop
ret
jae
cmc
sub
pushf
or
or
mov
xchg
cs
lahf
add
roll
dec
je
test
mov
mov
mov
in
jne
test
inc
jmp
daa
aaa
push
sbb
cmp
cwtl
ret
push
stc
adc
mov
push
lcall
jb
xchg
jle
clc
push
sbb
xchg
ss
and
mov
cmc
testl
mov
or
xorb
movsb
adc
data16
fidivrs
jecxz
ja
xchg
test
jl
subl
test
pop
xchg
sub
sub
mov
shlb
std
iret
repnz
add
das
mov
fisttpll
int3
cli
sbb
lcall
pop
mov
ja
inc
cmc
pop
ret
push
iret
loope
sub
pop
xchg
pop
out
jae
out
in
xchg
xor
fidivl
or
clc
pop
add
gs
arpl
mov
pop
lds
out
gs
in
push
jno
cmc
lret
imul
cmpsb
xchg
xchg
leave
movl
push
test
movsb
cmp
mov
inc
or
pop
lcall
push
cmpsb
ja
jp
cmp
sbb
loope
fistpl
in
jne
cld
cmp
test
fnsave
aam
xor
popa
xor
ljmp
inc
fstl
mov
sti
in
enter
testl
sub
shld
test
mov
jle
inc
pop
stos
lahf
hlt
mov
imull
fistpl
mov
shr
mov
fidivs
lahf
jecxz
scas
cltd
rorb
mov
cmc
int
stos
in
outsb
in
dec
fnstsw
add
xchg
mov
sbb
std
pop
add
mov
montmul
cmpsb
test
test
mov
cmpsb
xchg
out
test
and
fistps
fiaddl
push
cwtl
adcb
stc
mov
mov
sub
dec
adc
mov
stos
cmp
std
loop
push
data16
inc
and
sbb
mov
mov
insb
aad
fwait
mov
inc
loop
testb
pop
adc
cltd
pusha
add
insb
xor
fdiv
ljmp
cmpl
loope
bound
adc
inc
add
xor
adc
sub
cwtl
iret
xchg
clc
push
cmc
sub
and
add
inc
xor
mov
adc
xlat
dec
test
shl
mov
inc
add
xor
pop
pop
out
xor
cs
inc
inc
aad
add
mov
arpl
pop
sbb
ds
jo
cmpsb
addr16
flds
pop
xchg
sbb
lock
sbb
xor
popf
cmp
shrb
sbb
mulb
or
ljmp
cltd
pushf
xor
xchg
mov
push
xchg
jle
mov
jb
scas
add
pop
sbb
xor
jle
out
mov
sub
mov
pop
push
iret
je
add
sbb
sub
sti
push
mov
dec
mov
ljmp
pushf
xor
ret
xchg
ss
ret
pushf
into
popa
mov
enter
sub
pop
scas
movsb
dec
sub
pop
push
mov
shr
filds
aad
adc
add
mov
jbe
addr16
inc
and
cmp
jmp
es
mov
add
dec
mov
push
xlat
outsb
inc
into
gs
jmp
cmc
pop
jno
add
sub
ljmp
rcrl
call
icebp
adc
ds
mov
add
mov
movb
test
mov
adc
cmc
outsl
push
jne
int3
shrb
push
xor
add
adc
fisttps
add
icebp
andb
outsl
insl
sub
ret
stc
nop
jle
or
inc
cmp
jbe
sub
loopne
mov
mov
adc
mov
mov
in
mov
aas
rclb
xchg
imul
test
gs
into
outsl
xchg
mov
mov
out
cmp
aaa
cmp
popf
clc
iret
or
or
out
push
fdivs
xchg
mov
mov
pop
in
pop
jmp
adc
mov
pushf
mov
and
fildl
lods
pop
push
sbb
dec
xchg
scas
out
jmp
pop
or
mov
loop
sub
pop
push
sti
sbb
leave
pop
dec
cmp
jp
shll
adc
fwait
xchg
sub
fs
mov
sub
xor
sub
ja
bnd
adc
ja
pop
mov
adc
cwtl
pop
mov
or
pop
das
movsb
sub
fisubrs
xchg
ret
add
add
jp
leave
aam
lds
jmp
cmp
mov
and
adc
add
lret
dec
lret
xchg
daa
cmp
test
xor
add
adc
mov
aas
cwtl
into
mov
imul
xor
lods
ljmp
call
cmp
repz
jno
enter
lcall
push
test
sarl
sbb
addr16
xor
ja
mov
test
loopne
sbb
jnp
iret
jno
jmp
icebp
xchg
test
stos
dec
pop
hlt
jb
sbb
dec
dec
adc
mov
xchg
pop
bnd
enter
fdivrp
push
dec
aas
mov
js
aad
mov
rcrl
cmp
mov
mov
mov
mov
xchg
fucomp
into
add
xchg
xor
aad
pop
push
mov
ss
repz
aam
insb
lock
test
adc
mov
adc
pop
cmp
jae
inc
sahf
and
test
movl
and
push
mov
and
popa
cmp
out
jmp
aad
lahf
mov
xchg
xor
sbb
or
pop
popf
or
mov
iret
and
jle
jo
mov
test
xor
loope
push
pop
or
or
jp
jecxz
lahf
stos
pop
dec
push
xor
js
lods
cmpsl
inc
jns
ret
call
loopne
fnstcw
mov
js
push
jb
lcall
lods
scas
mov
sti
int3
jl
adc
mov
lret
mov
test
xchg
mov
outsb
push
jne
std
repz
les
adc
mov
add
mov
dec
mov
fdivp
das
cmp
mov
add
leave
jbe
in
arpl
movsb
jle
cmp
shrb
setbe
dec
inc
ds
mov
xor
bound
inc
fidivs
dec
pop
add
adc
xchg
push
cmpsb
xor
mov
sbb
and
jge
xchg
fwait
xorb
pop
arpl
popa
pop
mov
imul
sbb
fstpt
inc
outsl
mov
popa
adc
call
push
fisttpl
sbb
inc
mov
hlt
insl
jno
xchg
pop
pop
sbbb
jbe
jl
jg
je
int
mov
mov
and
and
arpl
xor
xchg
les
orl
adc
xor
jecxz
jns
inc
in
xor
xchg
in
push
lods
mov
pop
mov
or
div
fnstenv
sbb
outsb
mov
pusha
negl
repz
xor
and
inc
push
movsl
ja
push
jbe
sub
ret
pop
shll
xchg
mov
cmp
sbb
outsb
mov
jbe
mov
shlb
xchg
scas
cmp
adc
sbb
insl
cmp
push
addl
fists
cmpsl
ffreep
and
xor
cmc
sbb
jle
and
sbb
adc
xor
mov
dec
jbe
jge
lods
mov
cmp
jnp
xor
insl
and
fdivrl
fsubl
nop
ljmp
jecxz
in
test
or
push
xor
sbbb
je
jne
pop
fwait
xor
jno
jns
fsubrp
sub
adc
inc
arpl
mov
leave
fists
or
or
adc
test
mov
dec
sub
jbe
cld
dec
sub
mov
sbb
in
nop
aam
xchg
xor
mov
sub
repnz
ljmp
jge
lock
xlat
push
push
pop
xor
in
inc
cli
cld
mov
xorb
pop
inc
loop
jo
roll
mov
lret
dec
inc
cmp
iret
pop
test
adc
cmp
sub
push
mov
add
mov
lret
loope
movsl
and
imul
out
ja
scas
pop
rcll
jb
cmp
test
mov
clc
ja
lcall
cmc
popa
fsubr
push
outsl
jnp
rcr
add
mov
cmpsb
jg
xor
mov
ja
adc
add
xor
outsl
ficompl
cmp
push
popa
cmp
rcrl
fwait
push
fsubl
or
jge
xor
or
xor
mov
push
or
iret
fildl
mov
pop
repz
inc
inc
stos
call
pop
je
sub
cmp
addr16
sahf
cs
iret
lahf
movsl
push
adc
push
and
push
fcomps
in
nopl
mov
add
mov
cmpsl
xor
iret
push
dec
cwtl
and
es
lds
iret
pusha
lds
xor
stc
push
push
addr16
mov
jp
inc
ficompl
popa
in
cmp
pop
mov
mov
test
push
or
adc
jl
bound
xchg
inc
pop
mov
repnz
and
push
movsl
test
lret
icebp
mov
push
adc
push
popa
or
mov
push
stos
dec
mov
je
in
lods
cs
orb
or
fxch
pop
shll
push
push
loope
adc
jae
scas
cwtl
enter
lret
jae
pop
loope
xchg
jb
lods
or
xor
int
ret
std
xchg
popa
imul
add
push
push
ja
dec
loope
ret
ss
sbb
ljmp
or
pop
add
pop
mulb
test
and
shl
lret
pushf
pop
idivb
sbb
cs
enter
and
out
mov
and
pop
sbb
push
test
fadd
scas
xchg
add
incb
and
mov
jo
test
imul
add
lock
mov
jmp
xlat
push
add
testb
sbb
pusha
seta
insb
xchg
sub
lock
mov
jb
sbb
insb
addr16
mov
ja
icebp
and
lock
mov
ja
or
adcb
xor
jne
xchg
insl
adc
sbb
out
int3
push
and
fstl
insb
addr16
mov
andl
push
test
je
xor
cmpb
pop
sbb
mov
clc
mov
rcll
add
dec
ds
inc
push
add
mov
dec
mov
shll
rclb
sbb
sarl
lcall
mov
or
adc
xchg
pop
jb
test
cmp
inc
add
sahf
leave
aad
stc
mov
mov
fadds
nop
jno
ret
adc
inc
ss
movsb
repnz
test
xor
dec
fdiv
jb
hlt
movsb
imul
sti
inc
cmp
icebp
sbbl
xor
push
lahf
jg
mov
xor
or
and
leave
cwtl
inc
cmpsl
ja
lods
lds
into
data16
aam
outsl
ret
jnp
xor
movsb
dec
xchg
jecxz
leave
jg
pop
es
shll
mov
fsubrp
or
adc
mov
scas
mov
mov
outsb
std
push
or
xor
cld
loope
inc
inc
popf
sti
mov
int3
sub
lret
adc
add
mov
pop
cli
andb
test
sub
jbe
call
inc
sahf
out
cmpsl
jne
pop
insb
xor
or
pop
ljmp
in
in
or
pushf
push
stc
xchg
mov
pushf
jmp
mov
lock
lahf
mov
shrb
sbb
sub
adc
int3
data16
or
sub
inc
mov
push
out
xlat
mov
in
cmpsb
dec
xlat
lods
inc
fs
mov
mov
sbb
jne
fs
xor
out
js
sub
push
fwait
mov
ret
fwait
xor
push
iret
mov
dec
or
push
lods
push
inc
leave
jp
inc
and
mov
jns
cmp
iret
push
sbb
or
mov
ds
jae
push
mov
or
pop
jns
shr
lods
lcall
xor
mov
jle
lahf
std
push
loop
mov
xchg
in
movsl
dec
xchg
xchg
daa
data16
icebp
or
and
test
pop
xor
sbb
fstl
loopne
scas
inc
aas
mov
mov
int
xchg
test
sub
lock
imul
out
xchg
xchg
jmp
inc
inc
or
xchg
sbb
fdivrl
sub
adc
orl
daa
decb
pop
out
mov
pop
cmp
lcall
andb
hlt
sahf
add
inc
test
add
test
xor
icebp
stos
rcrb
sub
test
scas
lods
pop
pcmpgtd
push
mov
clc
push
sbb
adc
inc
add
cmc
xor
adcl
push
sub
rol
int3
inc
pop
lret
and
daa
adc
cltd
scas
out
sbb
out
loop
out
mov
push
cs
add
bound
dec
ss
addl
ja
in
lret
cwtl
jnp
push
arpl
and
mulb
inc
pop
clc
adc
loope
loopne
ds
es
hlt
xchg
sub
scas
jno
popf
mov
xlat
faddl
xor
stos
push
ljmp
pop
mov
sbbl
sbb
push
cmpsl
sub
gs
xchg
popa
clc
inc
jae
test
lret
and
push
aas
cmp
imul
or
int
mov
inc
lods
cmpl
stos
mov
insb
xor
mov
mov
andl
dec
in
sti
fwait
mov
push
sbb
aad
dec
pop
daa
inc
out
insb
imul
setbe
cmc
xchg
out
mov
mov
nop
mov
out
jecxz
jae
shl
pop
or
insb
repz
stos
mov
mov
adc
loope
and
xchg
loop
xchg
les
std
pop
movsl
fsubr
jp
jecxz
fsubrl
inc
into
cmp
cltd
pusha
aas
push
fnstcw
sbb
xor
jecxz
scas
aad
loope
test
jo
sbbl
add
stc
lcall
rol
iret
insb
out
enter
outsb
add
jbe
dec
xor
adc
mov
fs
push
sti
loopne
ss
roll
sbb
and
lahf
movsl
jae
push
movsb
or
sub
repnz
jle
arpl
jg
xchg
shrl
cmc
lea
jno
lods
cwtl
and
fidivrl
lock
add
sarb
rcll
pop
push
rorl
pop
stos
fildl
stos
imul
mov
xchg
sub
jo
pop
testb
jne
jmp
mov
jo
or
fwait
or
stc
pop
out
pop
jge
jae
aam
add
lcall
and
jbe
add
lods
cmp
mov
mov
test
add
addl
xchg
rclb
fucomi
dec
test
fmull
rcrb
adc
imul
cmc
jge
dec
fildll
jl
xorb
mov
pop
pushf
xor
dec
mov
mov
ret
iret
jno
bound
xor
pop
push
test
call
adc
aaa
xor
sahf
notb
aas
sub
dec
repz
out
enter
inc
cmpsl
divl
and
ds
andl
push
gs
adc
jnp
dec
leave
or
and
cmpb
mov
call
xor
out
push
sbb
mov
movsb
dec
pop
cs
pop
fdivrs
sub
or
sub
bound
fucomip
xchg
insb
rcr
jae
mov
jo
mov
les
jne
adc
imul
sub
sahf
or
xor
das
and
cmp
fdivs
mov
scas
std
aad
mov
test
out
pop
mov
push
cld
scas
orps
mov
sub
jae
popa
daa
and
call
scas
and
repz
subl
ja
out
test
mov
insl
pop
in
sub
adcb
stos
das
add
jo
cmp
add
imul
aad
inc
or
push
xchg
sub
je
push
jbe
cwtl
jnp
clc
push
test
mov
cmpsb
add
xlat
fcmovne
test
scas
add
jg
xchg
or
insb
and
mov
pop
call
add
sbb
or
test
rcrb
push
and
dec
sub
jbe
andb
mov
test
or
aas
pop
mov
dec
adc
aaa
into
xchg
ror
loope
mov
imul
sbb
in
push
pop
pushf
stos
aad
pusha
mov
cmp
mov
dec
xcrypt-ctr
cmpsl
fdivrl
push
dec
fnstenv
dec
loop
sbbl
out
testl
fbstp
outsb
xchg
jecxz
out
pop
lods
pop
test
pop
idivb
push
mov
sub
lds
push
jp
mov
or
loopne
and
fiadds
repz
cmpsl
and
loopne
mov
jge
test
test
inc
fstps
jns
stos
pop
popl
xchg
idiv
inc
cmc
xchg
clc
addr16
xlat
pop
scas
push
leave
jge
push
mov
jbe
lea
xchg
mov
test
clc
fimuls
xchg
popa
adc
adc
jae
push
cli
or
lods
ds
pusha
in
shrb
mov
arpl
mov
pusha
testl
or
popa
cmp
fisubl
dec
pop
inc
jns
in
xchg
sbb
cs
push
lea
jge
pop
xchg
jns
lret
or
mov
push
shrl
in
dec
pop
pop
aaa
push
movsb
xor
dec
in
lds
jge
aaa
pusha
fcomps
testl
sub
mov
pop
mov
sub
mov
gs
cmpsb
jle
lods
push
push
mov
lret
or
and
dec
jge
insl
push
mov
outsl
jle
je
ret
xlat
jmp
loope
mov
mov
jge
nop
push
fimull
cmpsl
cld
xchg
fldcw
popa
rcl
call
sub
push
push
mov
dec
mov
pushf
mov
hlt
std
mov
pop
es
lahf
xor
lods
jne
fidivrs
pop
aad
fisubs
cs
mov
aam
adc
jbe
xor
out
cwtl
out
pushf
sbbl
cmp
and
mov
fcoml
test
xor
clc
cs
inc
jo
es
xchg
lock
lods
testl
push
dec
xchg
push
aas
outsb
fstps
xlat
xor
mov
and
push
push
rcl
mov
sbb
in
in
pushf
push
testl
out
mov
add
pop
or
pop
sub
popf
xor
shll
jp
mov
loopne
ja
jecxz
scas
outsl
push
lock
fwait
xchg
mov
jge
and
inc
mov
call
cmp
dec
outsl
inc
pop
mov
insb
inc
and
outsb
insl
es
inc
add
int3
jae
addr16
icebp
cwtl
mov
fwait
sbb
mov
mov
jbe
push
mov
adc
decb
pop
dec
pop
dec
jne
bound
ja
fbld
sub
adc
jmp
xchg
xlat
mov
ret
push
ret
xor
or
cmp
pop
xlat
dec
daa
insb
lods
or
xchg
ss
iret
xchg
into
adc
pop
inc
in
ret
hlt
fwait
out
inc
mov
inc
scas
mov
testb
dec
adc
stos
call
or
cmp
hlt
mov
shrb
mov
adc
push
xor
pop
or
adc
inc
mov
pop
xchg
pop
notb
or
andb
imul
jmp
sbb
jge
adc
xchg
insb
popa
pop
ja
leave
xchg
sub
mov
inc
negb
sbb
push
mov
add
loope
dec
das
mov
nop
pushl
pop
push
jo
lahf
dec
inc
xchg
xor
push
popf
mov
fidivs
mov
shld
std
xchg
inc
nop
daa
or
ljmp
add
jnp
rcrl
lret
lahf
pop
scas
les
jne
subl
les
aad
mov
cli
mov
push
xor
addr16
je
std
push
adc
test
jge
repz
icebp
stc
xlat
mov
insb
popa
loope
xor
xchg
lahf
repz
push
aad
add
xchg
int3
js
mov
pop
xchg
or
jmp
lea
into
xchg
fidivs
mov
scas
pop
imul
add
or
sbb
int3
rcrb
cmp
shrb
das
pop
lea
mov
in
nop
xchg
push
push
sub
pop
sub
jae
out
sub
insl
jg
sbb
jmp
out
test
dec
push
lods
sbb
cmp
mov
push
lods
addr16
lods
jo
enter
das
jmp
adc
mov
push
je
inc
push
stc
js
adc
push
dec
adc
xchg
xor
das
ljmp
push
mov
cs
fsts
xor
jl
xlat
or
insl
movl
cmc
jl
fs
mov
loopne
sbb
adc
xor
cwtl
cmpsl
push
subb
inc
sub
cli
sbb
jns
sbb
insl
sbb
and
mov
stos
out
jnp,pt
pop
sub
jnp
mov
jns
sbb
add
stc
mov
jle
mov
sbb
or
mov
into
shl
or
test
inc
jge
movsl
mov
mov
lcall
xor
cmp
mov
pop
dec
in
sbb
jbe
push
xor
test
lret
sti
pop
scas
call
pop
xchg
sub
or
inc
scas
shll
sbb
fstpl
fsubrs
push
movsl
xlat
fsubr
js
sub
dec
fidivl
cwtl
add
and
inc
sub
out
aam
pop
add
jg
pop
jle
mov
mov
cmp
repz
fstps
mov
mov
pop
adcl
inc
ret
hlt
imul
dec
cwtl
sbb
push
fsubrl
mov
popf
in
push
or
and
int
pop
out
setne
push
ljmp
jno
mov
fsin
cld
test
sub
cmp
leave
pop
clc
sub
test
dec
inc
dec
insb
gs
mov
cmp
jg
cmpl
and
fsubrl
pushf
fbld
pop
inc
mov
icebp
xor
lret
dec
xor
shrb
jne
pop
notb
xor
fidivl
inc
hlt
cmpsl
dec
sub
push
xchg
fldenv
xchg
mov
dec
loope
pop
mov
decl
and
notl
cmpsl
subl
ds
lods
outsl
mov
lods
adc
int
xchg
push
xlat
cmc
mov
jge
jo
loopne
pop
popf
outsb
ficomps
psllw
lahf
mov
insb
nop
in
and
lods
fsubl
loope
pop
shl
mov
fwait
sarb
and
hlt
lret
and
mov
jl
test
jbe
jg,pn
pop
xor
or
daa
dec
shll
ret
sbb
sbb
sahf
cmp
sbb
cmpsl
sbb
js
nop
inc
inc
push
repnz
mov
lea
outsl
stos
mov
sbb
jl
jns
call
or
jle
mov
insb
jbe
mov
pop
mov
testb
xchg
or
fcomps
cmp
addr16
hlt
fidivrl
push
movsl
and
rcrb
mov
sahf
mov
pop
xor
lods
add
outsl
push
or
mov
test
aad
daa
mov
cmp
sub
add
hlt
push
sbb
enter
dec
mull
fucom
out
sub
iret
fstpt
cmp
push
test
jmp
dec
lock
dec
fsubr
jle
ja
mov
sub
xchg
out
mov
cmp
cs
mov
mov
iret
loopne
pop
push
out
cmp
push
sti
sbb
xor
lods
xchg
inc
pop
cmp
outsb
ss
loop
mov
push
add
es
xchg
push
cmpsl
mov
pop
jbe
mov
push
adc
add
sbb
adc
cmp
mov
pop
pop
loopne
mov
and
sbb
xchg
fs
mov
add
xor
mov
push
sub
gs
lods
inc
and
fsubr
je
push
mov
push
jne
and
xchg
pop
inc
jp
mov
gs
inc
iret
cmp
push
adc
adc
adc
cmpsl
leave
imul
xchg
sub
pop
or
out
scas
push
outsl
in
xchg
or
leave
push
pop
loop
cmp
pop
ja
push
mov
nop
ret
sbb
lock
jg
sbb
mov
jae
cmc
lds
rolb
add
cmpsb
add
insb
inc
popa
movsl
pop
jp
adc
mov
add
mov
pop
push
es
cmp
cwtl
cltd
out
inc
mov
dec
icebp
int
jbe
test
loope
iret
and
adc
pop
ret
push
in
rcl
std
push
push
inc
add
loop
jnp
and
inc
fnstenv
flds
and
pushaw
mov
sub
inc
jmp
movsb
jo
mov
push
mov
loopne
lock
pop
push
dec
xor
xlat
mulb
clc
pop
push
cmpsl
stc
mov
out
inc
sbb
jle
ljmp
les
outsb
shrb
xor
jne
push
push
ss
addl
cli
xchg
enter
xchg
jmp
pusha
les
imul
xchg
fs
nop
cs
and
inc
push
mov
jl
mov
fs
dec
inc
dec
jmp
ljmp
ljmp
jae
cltd
and
xor
add
lods
fcoml
cmpsw
lods
enter
jns
add
mov
sbb
pop
leave
aam
mov
andb
push
fs
arpl
pop
xor
imul
popa
int3
imul
pop
inc
xchg
sub
cmp
sbb
adc
fidivs
and
sub
dec
popa
insb
gs
mov
jno
xor
fwait
or
das
mov
in
xor
clc
bound
inc
repnz
clc
and
xchg
scas
jno
dec
in
cwtl
cmpsb
insl
pop
sub
mov
sbb
ss
mov
or
adcl
jg
ret
bound
dec
mov
jle
ret
sbb
out
mov
pusha
pop
mov
stos
adc
lret
jae
mov
push
add
pop
mov
aas
inc
jl
inc
mov
jbe
sub
insl
pop
cmp
hlt
push
aam
out
pop
cmpsl
test
lcall
lcall
mov
rorl
mov
fbstp
fsubrl
lret
decb
mov
outsb
sub
and
sbbl
push
mov
jne
pop
repnz
xor
stos
sub
fsubrp
cmp
inc
lods
divb
cld
cmp
das
stos
loope
mov
loope
leave
pop
fmull
pop
pushf
push
leave
adc
out
std
sub
inc
fcmovnbe
outsb
int
scas
les
sub
adcb
jnp
aas
mov
aaa
inc
sbb
or
pop
cmp
in
lds
jnp
insb
lods
jo
nop
jmp
adc
jae
shlb
ret
cmc
mov
ss
imul
sarl
sub
adc
or
mov
xchg
or
or
or
sahf
sub
mov
rolb
mov
push
inc
inc
pushf
ja
xor
sarl
xlat
nop
stos
inc
cmp
lcall
lcall
fldcw
xor
in
sub
xlat
cmc
adc
aaa
jnp
outsb
out
push
int3
and
pop
in
out
adc
sbb
movl
add
test
cmp
cmpsb
jb
xchg
fists
sbb
sub
lret
inc
mov
push
stos
sahf
adc
lret
mov
es
cwtl
mov
add
imul
or
repnz
sti
push
popf
mov
or
icebp
xor
xchg
inc
data16
fdivl
jo
ljmp
mov
sarb
ss
out
ljmp
lock
es
add
add
jecxz
and
data16
pop
mov
push
mov
push
lret
mov
sbb
mov
je
pop
inc
adc
fistps
mov
sti
or
testb
pop
sbb
mov
mov
inc
fnstcw
fsubl
dec
mov
out
fs
std
xchg
jp
jne
stos
sub
rcll
xchg
pop
dec
je
fsubs
sbb
aam
dec
jl
repnz
sub
sub
dec
lcall
cmp
ret
jecxz
push
scas
mov
adc
hlt
sbb
es
int3
fs
mov
arpl
mov
aaa
cli
adc
cwtl
fcoms
xchg
adc
cwtl
lahf
xor
aaa
icebp
dec
sti
in
adc
and
jg
xor
aaa
lret
cmp
cmp
repnz
lcall
pop
and
fldt
mov
mov
xor
add
neg
pop
sub
adc
ret
add
adc
push
cmp
xchg
xchg
adc
mov
dec
pop
and
push
push
call
adc
mov
ret
faddl
out
dec
push
fdivl
push
jbe
dec
sub
lds
sbb
hlt
sahf
les
cmp
jge
lods
fsubr
inc
push
add
inc
scas
int3
mov
push
into
aaa
into
add
inc
cmp
clc
arpl
xchg
mov
lods
lods
cmc
rol
sbb
imul
cmp
scas
xor
std
xchg
aaa
mov
ror
lahf
sbb
cwtl
xor
mov
roll
mov
jl
mov
cmp
ret
add
pop
test
jl
push
cld
negl
out
out
cmp
xor
rcl
aad
loop
rclb
and
or
push
pop
popa
inc
add
scas
fwait
pushf
out
inc
pop
xor
in
or
xchg
rorb
xchg
mov
lret
movsb
pop
and
lds
pusha
iret
loope
pop
cmp
jg
in
ror
icebp
or
and
adc
inc
popa
jge,pt
test
fwait
lods
add
pop
gs
fmul
adc
add
dec
movsb
and
push
cmp
cmpsl
stc
pop
jmp
cmp
pop
das
fdivr
clc
or
pop
fisubrl
aas
or
and
aam
dec
or
dec
pop
pop
sub
sub
sbb
push
dec
jle
xor
inc
inc
inc
gs
mov
inc
and
fisubrl
popa
sub
xchg
outsb
in
adc
inc
leave
insb
mov
hlt
mov
out
sti
orb
aad
fcoml
xor
mov
repz
xchg
lds
and
xlat
in
mov
stc
xor
stos
push
push
jb
xchg
push
mov
jno
jae
repz
mov
pop
adc
icebp
std
jnp
das
adc
inc
pusha
andb
loope
imul
repnz
ret
pop
mov
pusha
clc
mov
fdivrl
ret
fldl
inc
sbb
dec
insl
mov
and
fldl
push
or
pop
test
ljmp
rcrb
lods
pop
loope
arpl
bound
add
jno
mov
or
mov
jg
test
cld
sbb
mov
test
lcall
sbb
mov
and
dec
inc
sub
jmp
mov
aad
jmp
ret
sbb
dec
out
cld
js
mov
xchg
inc
xchg
sbb
pop
outsl
pop
jecxz
das
adc
mov
iret
lods
add
lock
jmp
jb
ret
jae
mov
bound
fmull
xor
dec
xchg
pop
ja
adc
add
pop
nop
push
lret
pop
cmp
hlt
push
cmp
stos
addr16
jae
ret
dec
xor
push
nop
xor
repz
loop
jecxz
add
xchg
insl
aam
aaa
jbe
sub
mov
outsb
cmp
or
dec
mov
xchg
inc
ss
cltd
xor
mov
push
movsb
popf
stos
xor
fstpl
loopne
and
adc
ja
jmp
xorl
lcall
in
cmp
mov
lods
sub
jmp
nop
addr16
push
mov
add
mov
sbb
and
repz
fsub
movsl
outsl
sub
jmp
dec
test
jle
xchg
mov
push
mov
xchg
aad
test
xor
cmp
aam
dec
lea
jle
outsl
add
ja
add
jnp
in
stos
cli
loope
lret
insb
xchg
stos
adc
frstor
orb
clc
insb
mov
xchg
adc
xchg
aaa
add
mov
mov
lahf
leave
dec
insb
cli
shr
es
sbb
lcall
sbb
icebp
adc
fisttpl
in
mov
mov
pushf
fmuls
loop
lock
rcrl
pushf
push
mov
cmpsb
lret
or
fbld
and
test
push
cld
mov
add
ljmp
jae
xchg
or
dec
cmp
repz
loop
lods
ljmp
pushf
xor
inc
iretw
lret
mov
sbb
outsl
xor
cmp
ds
jecxz
shrl
push
mov
inc
push
scas
inc
inc
add
xchg
jne
jnp
test
es
mov
stos
add
jb
fnstenv
adc
bound
cmp
cwtl
mov
mov
add
push
movsl
xor
fnstenv
mov
mov
addr16
adc
mov
fcom
sahf
xor
or
lret
cld
xchg
mov
xor
mov
sub
inc
mov
pop
sbbb
mov
jl
jmp
inc
inc
mov
pop
fwait
mov
sub
push
lret
mov
and
rorl
cmp
add
stos
sbb
int
xchg
adc
sarl
mov
mov
aaa
fistl
jp
movsl
and
xchg
ss
das
fs
ret
mov
push
les
es
fisubrl
clc
sub
cli
clc
xchg
adc
push
adc
xchg
mov
out
call
add
stos
mov
or
mov
andl
adc
xor
jne
bound
popf
call
dec
lock
mov
out
mov
orw
jecxz
hlt
lret
out
out
push
xor
adc
mov
mov
fbld
pop
roll
loope
mov
pop
jecxz
cmpsb
dec
pop
sub
testl
scas
stc
pop
daa
repnz
mov
pop
mov
mov
jo
add
mov
aas
mov
or
mov
outsl
aad
dec
nop
int
adc
icebp
mov
mov
inc
mov
test
je
sbb
or
loopne
mov
xor
lock
jns
mov
push
sahf
jne
mov
lods
xor
test
xchg
inc
adc
jo
ss
xchg
dec
lea
shll
imul
lods
xor
addr16
int3
jge
dec
inc
xor
inc
ja
in
jb
fcmovnu
xchg
into
dec
adc
fcoml
aaa
add
xchg
push
jns
stos
xchg
enter
mov
jae
mov
pop
pop
xchg
mov
cwtl
cmp
sbb
ret
scas
or
mov
jno
and
xchg
repnz
jg
xor
ffreep
mov
jmp
iret
data16
dec
les
xchg
ret
cmpsb
lret
bound
or
call
daa
out
ja
loope
stos
inc
pop
aas
mov
pop
mov
pusha
std
xchg
cmc
adc
push
xor
arpl
lret
in
or
jnp
int3
mov
push
adc
movsb
inc
je
jne
daa
xchg
cmpsl
daa
mov
xchg
decl
pop
repz
fisubs
or
fcmovbe
icebp
sti
add
push
sbb
aad
pop
loope
test
add
movsl
lods
xlat
mov
test
icebp
movsb
sbb
in
pop
insb
sub
shlb
negb
cli
shlb
inc
shl
jmp
insl
dec
lret
add
jae
insl
xchg
fisubrl
icebp
fisubs
fnstenv
adc
testl
out
aad
dec
insb
call
idivl
pop
cmp
outsb
add
cmpsb
je
arpl
and
jo
pop
ljmp
jmp
mov
inc
cltd
xchg
dec
imul
push
adc
lea
les
jl
in
pop
xor
in
push
lret
push
sub
push
jge
les
dec
aaa
int
loop
and
pusha
in
xchg
push
jmp
push
xchg
add
cmc
push
push
mov
das
push
mov
clc
movsb
cld
xor
lcall
push
popa
pushf
outsb
jmp
xlat
mov
adcb
pop
mov
cli
push
sub
xchg
and
sahf
andb
es
scas
xchg
or
lahf
jnp
aas
inc
out
lock
push
jb
mov
adc
jecxz
loopne
dec
push
in
lahf
ret
mov
push
sbb
int
cltd
push
je
mov
sbbb
inc
dec
loop
dec
notb
push
lock
ljmp
imul
cld
push
mov
and
cwtl
popf
xor
cmp
outsb
add
mov
loopne
adc
aaa
daa
pop
mov
xor
das
stos
inc
cmp
in
stc
xchg
pop
pusha
dec
fs
jge
idiv
xor
and
rorb
hlt
adc
sub
insl
lods
sbb
mov
sbb
lock
mov
ret
cmpsb
jle
movsl
add
icebp
aaa
jno
frstor
add
xchg
out
rcrl
stos
cmp
roll
ljmp
test
mov
in
or
imul
movl
loopne
cmp
mov
lods
pop
sbb
pop
into
mov
iret
sbb
das
push
sub
inc
mov
dec
dec
pop
loope
jo
dec
stc
sbb
addr16
pop
fldt
loopne
shl
es
mov
loopne
out
sub
jno
push
pop
mov
xchg
push
dec
push
push
bound
jne
jle
mov
dec
mov
je
inc
xchg
pop
pushl
dec
insl
xchg
cs
aaa
pop
call
fnstenv
push
lods
mov
add
add
or
jp
jae
pop
sub
rorb
mov
in
xchg
lahf
sub
imull
in
movsb
jmp
sub
clc
fcom
mov
pop
xor
fists
jae
dec
sbb
push
cs
add
shl
dec
mov
loope
push
das
adc
cmc
xchg
lcall
mov
sub
mov
test
adc
jl
or
ss
mov
mov
dec
and
loop
inc
push
adc
cmp
mov
adc
popl
pop
hlt
xor
vminps
push
mov
out
cmp
fdivl
pop
adc
in
cmpsl
ret
sub
mov
das
aad
cmpsl
bound
int3
insb
pop
loopne
cmp
and
xchg
stos
out
ja
push
jmp
insl
stos
scas
dec
xor
cmpsb
cmpb
in
push
jecxz
std
adc
pusha
clc
sbb
jns
sub
out
stos
les
out
icebp
mov
sub
sbb
lret
sub
inc
popa
dec
dec
inc
mov
shrl
mov
in
imul
fstpt
pop
repnz
clc
rcl
xlat
jmp
dec
andb
int3
mul
dec
cmpsl
ds
and
ja
or
sbbl
inc
pop
xchg
and
test
mov
adc
dec
push
cmp
out
push
lds
pop
in
gs
xor
mov
jp
pop
fistl
pop
or
inc
push
jecxz
jl
add
dec
push
and
dec
adc
mov
sub
jns
decl
popf
movsl
mov
mov
lret
mov
push
dec
mov
insl
mov
subl
cli
mov
int
popf
ret
sub
loope
or
cmp
scas
pusha
int
mov
and
mov
mov
adc
popa
pop
mov
sbb
mov
mov
jnp
scas
aad
mov
add
mov
fcompl
cmp
test
pop
leave
testb
ljmp
xchg
add
data16
cmp
pop
xchg
xchg
imull
ret
mov
sbb
mov
mov
lahf
mov
or
mov
outsb
mov
cmc
cmpsb
sahf
enter
add
mov
pop
xor
jo
int3
mov
dec
movsl
inc
outsb
xor
jae
add
sti
iret
pop
loopne
or
lods
push
jns
cltd
xor
dec
mov
loop
jo
mov
sbb
cld
call
inc
xchg
test
lock
aad
lret
adc
dec
dec
lods
cmp
stos
icebp
dec
call
ret
fdivs
xchg
push
xor
xlat
add
xchg
xor
lods
stc
bnd
cwtl
les
jge
and
aam
in
inc
inc
mov
inc
enter
cltd
push
mov
inc
scas
rolb
mov
icebp
aaa
mov
imul
push
mov
jmp
les
mov
insb
jmp
jg
xorl
pop
push
adc
rorb
xchg
inc
lods
inc
orl
xlat
sbb
mov
movsb
jl
fldt
push
fsubrs
adc
cmp
pop
outsl
sbb
fdiv
imul
jl
dec
jo
jl
repz
leave
popf
mov
add
sub
insl
lcall
inc
mov
icebp
test
out
xchg
leave
js
repnz
test
push
cmc
fsubrl
jns
stc
mov
jbe
mov
les
push
sbb
fwait
jle
and
mov
fildl
or
push
mov
fdivr
lock
inc
jle
cltd
scas
data16
shlb
push
repnz
fldt
stos
mov
idivl
mov
push
mov
andl
out
cmp
movb
arpl
js
fldcw
xor
xchg
mov
inc
pop
mov
ja
sbb
inc
std
je
das
addr16
jg
hlt
dec
loope
lods
dec
mov
fisubl
mov
cmp
aam
lds
sub
out
adc
clc
nop
loope
dec
dec
pop
es
dec
pop
mov
test
jae
popf
leave
pusha
iret
pop
ja
push
and
cmc
loop
xor
add
sbb
ds
lea
sbb
addr16
sub
jge
lahf
rcrl
jb
stos
pop
push
cmpsl
into
inc
jae
clc
or
or
or
and
jmp
jmp
jmp
daa
jle
movsl
jae
push
adc
ss
faddl
pop
jmp
jb
lcall
fildll
mov
cld
addb
popa
stos
scas
sbb
jae
cmp
pop
ljmp
mov
jle
leave
inc
sbbl
ljmp
scas
mov
add
mov
xor
clc
mov
mov
out
imul
scas
jns
das
loopne
je
push
sub
mov
lods
repnz
pushf
loope
lods
xchg
mov
and
xor
sbb
push
jle
push
icebp
mov
inc
out
inc
fldt
jnp
into
sub
adc
inc
dec
fstpt
fwait
sub
adc
movsb
push
scas
mov
xchg
loopne
pop
popa
lret
rcr
lods
pop
pop
ror
pop
push
mov
test
ret
sub
in
jne
push
jmp
fcoml
movsl
jmp
in
repnz
stos
and
les
in
insl
and
add
and
hlt
jns
shlb
stos
into
stos
subps
add
sbb
mov
loop
xchg
push
xlat
pop
jecxz
imul
rclb
out
add
jae
clc
loope
jno
pushf
ss
xchg
insl
jl
mov
cltd
mov
push
cltd
repnz
adc
sbb
xchg
pop
popa
popa
icebp
stos
jecxz
cmp
cmp
xlat
xchg
sub
test
rolb
lcall
popa
jne
mov
push
pop
inc
insl
add
lods
xchg
xor
scas
aad
addl
and
cmp
xchg
cld
dec
fidivrl
cwtl
cli
cld
or
mov
cmp
out
sub
pusha
dec
or
cmp
dec
scas
sbb
mov
iret
jecxz
js
inc
add
cmp
mov
mov
rol
fnsave
nop
adc
insl
cld
push
push
ret
cld
xchg
cmp
ret
push
mov
ja
or
scas
ds
xchg
pushf
lods
imul
hlt
sbb
push
cmpsl
mov
sub
cs
xchg
xor
pop
xchg
test
jne
cmp
pop
fsubr
fidivrl
add
sti
scas
ja
loopne
adc
leave
cmpsl
lcall
sub
jne
test
cld
xchg
pop
call
pop
scas
push
push
stos
scas
pushl
pop
pushf
in
ss
add
cmpsb
xchg
and
jns
ds
inc
or
ja
jae
aam
push
add
and
inc
cmp
push
inc
dec
pop
xchg
insl
xchg
pusha
push
repz
cmp
push
data16
add
mov
add
cld
les
lahf
aad
imul
mov
and
jecxz
faddl
adc
push
mov
pushf
sub
or
jp
mov
and
adcl
xchg
test
aad
mov
loopne
jbe
add
lods
xor
clc
xchg
stc
cwtl
icebp
or
sbb
leave
dec
pop
shr
test
sbb
mov
stos
dec
xchg
mov
nop
sub
xlat
gs
adc
cli
loopne
xor
cltd
gs
mov
movsb
ret
aad
add
aam
aam
fnstsw
in
sbb
push
add
mov
mov
cli
subl
or
scas
stos
cltd
cmpsb
push
rcll
push
outsl
mov
pop
icebp
cli
fstpl
mov
xor
in
or
outsl
cmp
les
icebp
adc
pop
outsb
out
adc
sbb
shl
imul
or
movsb
inc
rclb
adc
call
xchg
test
inc
out
sbb
mov
sub
pop
sub
sub
mov
jmp
in
outsl
mov
popf
cmp
inc
xor
push
fildl
add
sbb
bound
test
sub
jg
out
xor
jb
push
loope
fld
js
out
testb
gs
jbe
cmp
cwtl
sub
push
in
jne
xor
lods
xchg
jmp
dec
ficompl
mov
jle
push
pushf
xchg
rcrb
lahf
daa
shr
or
add
cmpsl
cmp
dec
xchg
push
int3
mov
mov
sbb
push
movsb
mov
pop
cmpsb
mov
icebp
outsb
rcr
mov
in
sti
fmull
mov
pop
insl
or
test
hlt
sub
fwait
cmp
call
jae
xor
sbb
and
cmp
sbb
mov
cmpsl
scas
mov
imul
data16
test
pop
jg
frstor
cld
imul
shll
and
icebp
aas
and
out
in
in
fldt
or
je
movsl
inc
loopne
insl
sub
hlt
mov
fnstsw
dec
popf
sbb
jecxz
lds
pop
repz
lock
inc
movsl
sbb
dec
repz
out
mov
dec
je
jl
les
push
in
cmp
in
xchg
fwait
lods
mov
fistpll
pop
negl
fwait
xor
pop
dec
lcall
mov
cmp
pop
sub
push
add
sbb
sbb
mov
dec
inc
dec
pop
lods
cmp
cltd
adc
pop
sub
push
insb
sarb
subl
hlt
push
data16
in
jp
xchg
testl
mov
loop
fisubrl
sarl
xor
lret
push
push
jmp
dec
jecxz
jae
mov
jl
and
sub
sahf
imul
xor
aam
les
in
jmp
adc
xchg
jns
rcll
push
jne
xchg
sub
dec
mov
insb
in
dec
mov
lds
push
pop
sub
test
inc
cmpsb
negl
fmull
cmpsl
inc
mov
adc
ss
xchg
enter
les
test
xor
test
in
fnstenv
xchg
pop
mov
fistps
test
jg
scas
mov
xchg
inc
xlat
ret
hlt
scas
push
pop
adc
aad
xchg
xchg
sub
imul
divl
jmp
imul
add
jle
push
fiadds
mov
xor
fwait
dec
sbb
scas
xlat
jo
or
push
addr16
cwtl
daa
imul
dec
repnz
cmc
loopne
xor
and
out
pop
sbb
nop
adc
jge
mov
jl
mov
or
scas
neg
sti
xchg
cmp
ja
pop
daa
push
push
mov
xchg
sub
adc
popa
mov
jns
outsl
adc
out
in
inc
add
imul
call
pop
out
pop
sbb
dec
xor
xchg
dec
jle
aad
mov
pop
or
and
fsts
lods
shlb
icebp
stos
inc
mov
sbb
push
out
js
mov
mov
enter
sbb
lret
jp
ljmp
mov
stos
cwtl
and
jno
cmpsl
dec
rclb
inc
pusha
sbb
test
mov
imul
sbb
push
test
add
insl
push
sbb
cmc
icebp
ds
outsl
or
divb
dec
cld
ja
inc
adc
xchg
int3
xor
fs
pop
and
lcall
test
inc
in
jae
or
mov
ficoml
scas
pop
movsb
pop
je
sub
mov
dec
lret
and
orb
gs
aas
testb
call
xchg
cltd
out
push
cmp
push
mov
xlat
inc
ljmp
inc
xor
sub
in
jl
mov
push
mov
inc
in
and
lcall
push
fldt
pop
outsb
sub
pop
lods
inc
jle
mov
jmp
int3
fidivrs
sbb
aas
movsl
aad
pop
loop
loope
sub
stc
dec
push
icebp
imull
data16
aad
sbbb
in
jne
xor
cmpsb
mov
fldt
mov
xor
jmp
add
popf
shll
mov
rorl
sub
in
inc
mov
les
mov
jnp
push
jbe
pushf
pop
repz
push
call
cmp
iret
inc
fsubrl
cmp
icebp
cmp
iret
push
xchg
push
push
test
mov
and
cmp
insb
jmp
cmp
enter
and
pop
sub
cld
cmp
shl
add
xchg
xchg
fucomp
xchg
iret
sbb
add
pop
shrb
sahf
pop
lods
ret
test
ja
xlat
mov
imul
jle
push
rcl
insb
test
adc
push
hlt
aam
and
icebp
push
sub
add
xchg
cli
xor
xor
rol
jl
adc
add
dec
inc
jo
jbe
xor
jecxz
xchg
dec
inc
les
cmpsl
sbb
sbb
adc
push
push
mov
push
or
shrl
lds
int3
aaa
into
std
rolb
in
dec
sbb
lcall
and
sub
push
ljmp
jb
loop
test
add
mov
sbb
mov
je
loopne
out
fldl
cli
cmp
mov
sub
sub
pop
jle
push
pushf
scas
xchg
dec
shll
into
pop
mov
pop
jne
add
imul
test
stc
xbegin
xchg
sub
jmp
aaa
dec
mov
dec
fists
mov
push
jle
iret
movsl
and
lahf
lret
push
add
xor
mov
mov
js
inc
and
dec
aam
push
dec
cmpsl
fsubl
dec
xor
dec
add
lds
adc
mov
stos
mov
jb
adc
add
push
inc
jno
xlat
cmp
or
shll
loope
xchg
jecxz
scas
push
pop
pushf
cmpsb
push
inc
jnp
pop
insl
fcmovb
in
add
scas
push
in
fists
xor
xor
adc
and
gs
mov
inc
pushf
mov
cmp
inc
rcll
out
push
jae
iret
xrelease
stos
push
mov
or
push
mov
rcl
mov
cmpsb
in
add
push
mov
js
imul
xchg
in
enter
xchg
sub
loope
pop
pop
cltd
loop
jno
mov
sbbl
mov
pop
mov
fmull
push
dec
lea
insb
jae
jno
rcr
lcall
mov
ret
hlt
cmp
dec
lahf
lahf
in
sub
js
mov
cwtl
xchg
arpl
add
les
fincstp
or
add
pop
fcoms
xchg
and
out
mov
pop
icebp
test
adc
sub
xlat
mov
mov
dec
jns
push
jge
push
adc
sbb
mov
mov
xor
mov
sbb
mov
ja
mov
movsb
cmp
pop
ret
sbb
lock
dec
xlat
pop
dec
fnstenv
push
jb
xchg
cwtl
pop
cmpsb
sarb
stos
sbb
sbb
xchg
neg
lret
pop
jb
push
sub
xchg
push
cltd
xchg
xor
xor
push
out
aam
jae
ljmp
fdivp
mov
lahf
lcall
mov
and
stos
aam
inc
sub
lahf
ss
cltd
dec
mov
out
mov
mov
push
nop
inc
or
pop
hlt
in
fcmove
in
jnp
mov
push
in
mov
movsb
xor
inc
ss
outsb
sti
sub
xchg
fs
mov
hlt
jo
rclb
mov
dec
xlat
xchg
testl
out
into
jno
add
xor
clc
pop
mov
push
jmp
lds
icebp
mov
popa
or
push
xchg
xchg
notl
leave
add
adc
andb
mov
cmpsl
popf
mov
daa
sbb
mov
fwait
jns
lods
inc
rcrb
pop
mov
inc
loope
enter
cli
mov
push
in
sbb
subl
xlat
mov
push
inc
add
xor
jle,pn
mov
inc
fcomps
rorb
jno
test
and
pop
sbb
arpl
leave
pop
loop
scas
jne
pop
out
imul
jecxz
xchg
inc
pop
mov
or
repnz
and
push
mov
dec
cmpsb
mov
dec
out
mov
fnsave
sti
and
add
in
pusha
sbb
repnz
mov
pop
insb
pop
xchg
xor
pop
lods
sbb
ret
in
adc
rcll
inc
out
test
jecxz
fcomps
xchg
cmpsl
cli
dec
scas
pop
movsl
inc
in
test
push
cmp
mov
lods
jl
sub
pop
mov
dec
bound
cmp
dec
xor
negl
ss
call
repnz
lods
mov
jns
xor
aad
push
lds
cmp
adc
sbb
lahf
imul
inc
fildl
mov
iret
inc
mov
int
jmp
dec
in
mov
push
lea
jg
sarl
popf
mov
sbb
stos
shl
insl
out
jg
mov
lods
mov
ret
bound
daa
xchg
sbb
fwait
xor
cmp
lds
mov
into
sbb
xchg
stc
movsl
and
fsubr
movsl
jl
out
inc
nop
lahf
fiadds
lcall
and
push
popa
pop
test
dec
lock
jns
mov
movsb
jnp
mov
inc
sbb
adc
sub
les
int3
aad
in
pop
inc
pushf
xor
push
inc
and
adc
adc
jne
inc
xor
push
out
popf
pop
xor
cmp
push
xor
xor
lahf
adc
fwait
and
je
pop
lods
adc
push
cltd
xchg
pop
add
jno
ja
lods
dec
popa
sbb
dec
jb
js
mov
pop
or
inc
repnz
repnz
dec
cmp
int
test
jns
jp
stc
loopne
cmp
fbstp
push
cmp
and
loop
sub
dec
inc
jno
push
jg
mov
mulb
jl
mov
popf
xchg
cltd
lds
push
sub
sub
fbstp
dec
in
cmp
aaa
lcall
mov
mov
addr16
fcomp
mov
adc
and
push
push
lods
test
jae
imul
or
fsub
inc
jns
cmc
push
add
dec
inc
add
aad
popa
insb
sahf
ss
sahf
or
fmul
fs
pushf
cltd
jmp
ret
jnp
cmc
insl
add
pop
dec
mov
js
fldl
mov
cmpsb
andl
rol
pop
add
lret
fisttps
lea
cmpsl
dec
lods
or
test
iret
inc
popa
fisubrl
xchg
adc
mov
sub
cmp
or
and
mov
clc
adcb
mov
in
cld
mov
mov
pusha
add
sub
sub
lds
icebp
sbb
cmp
ds
jbe
and
dec
fs
rcrb
xor
dec
dec
fcmovb
clc
lret
cmp
cmp
sub
add
mov
in
arpl
lods
push
and
mov
fxch
into
gs
pop
mov
mov
or
ret
in
or
adc
mov
adc
and
sbb
inc
fstpt
jnp
lret
xor
mov
ljmp
nop
sti
pop
mov
sub
dec
fdivs
mov
add
jae
arpl
sub
mov
sub
sbbb
pop
popa
jg
lahf
cmp
lea
mov
clc
adc
inc
pop
jne
aad
testb
push
outsb
dec
and
push
jo
jge
shlb
lahf
popf
dec
movl
pop
mov
or
ds
into
shlb
cmc
xchg
iret
call
dec
xlat
negb
shll
sub
add
in
cmp
movsl
jecxz
xor
mov
mov
shrb
cwtl
lea
rcrl
les
mov
push
icebp
inc
mov
iret
adc
ss
mov
mov
push
jno
rol
pop
or
outsb
sub
mov
cmpsb
mov
jl
inc
mov
loop
or
in
dec
xchg
sbb
aam
cmp
push
jl
imul
es
adc
stos
mov
jno
jo
mov
subb
xchg
popf
ret
mov
jb
jecxz
add
rol
cmp
or
out
sub
inc
rorb
mov
inc
test
adc
or
lock
int3
add
in
sarw
in
push
mov
les
imull
andb
js
jb
das
movsb
xor
hlt
add
js,pt
imul
adc
mov
aam
sti
popf
stc
scas
or
xorb
call
pop
aas
cmp
mov
adc
push
enter
inc
stc
lods
push
dec
cmpsb
mov
mov
pop
cmp
fwait
shrb
mov
jnp
jae
into
mov
lock
in
inc
and
or
or
sbb
or
fists
inc
dec
cli
scas
cmp
jl
adcb
mov
and
mov
dec
xchg
fs
jg
shll
xlat
cmp
and
push
ss
inc
sub
adc
sti
inc
pop
das
loopne
xor
cmp
or
fistpl
andb
daa
xchg
daa
adc
imul
or
fidivs
clc
outsb
xchg
xor
sub
xchg
push
pushf
push
outsl
dec
xchg
mov
pop
inc
and
or
xchg
mov
test
sbbb
dec
or
das
sbbl
sub
ret
push
inc
test
mov
mov
xor
add
mov
repnz
ret
sub
sbbl
sbb
and
inc
lahf
pop
icebp
xchg
mov
mov
incl
fwait
sbb
je
add
pusha
fstenv
test
cmp
fdivs
mov
sub
pop
mov
inc
sub
xor
hlt
in
mov
popa
or
les
xchg
adc
sarb
sbb
shll
add
inc
jno
add
mov
fcoml
mov
lea
or
cmpsl
popf
xor
inc
sbb
fcoms
mov
jnp
repnz
cltd
cmp
popa
push
leave
popa
fiaddl
xor
inc
test
cmp
jo
and
aad
or
mov
imul
in
outsb
aam
dec
pop
mov
imul
leave
outsb
xlat
repnz
dec
mov
nop
leave
popa
fwait
mov
add
xor
jge
xchg
pop
insl
xchg
mov
pushf
fsubs
jg
mov
jno
dec
loope
xchg
sti
subb
or
jae
jae
xlat
clc
xchg
add
loope
les
or
daa
push
mov
loope
xchg
push
cli
aaa
dec
mov
pop
rclb
out
mov
xchg
cmp
pushf
pop
out
mov
jne
mov
in
mov
movsl
cmc
inc
push
sbb
pushl
enter
cld
push
jae
pop
loop
sub
hlt
mov
push
les
mov
pushf
jns
inc
mov
pop
clc
lahf
or
push
xor
mov
cli
add
ja
icebp
lock
adc
jbe
lock
cmpsl
out
xchg
jnp
mov
push
mov
fwait
cs
cmc
imul
and
or
push
shrb
mov
push
cltd
cmp
jae
xchg
cmp
dec
fidivs
add
fcmovu
std
cmpsl
and
inc
gs
mov
shll
ds
outsl
les
das
xlat
outsl
dec
jge
fmuls
sub
into
iret
cltd
cmp
mov
inc
ficompl
lods
jae
pop
subb
pop
adc
push
mov
pusha
movsl
ret
or
leave
fwait
popf
cmpb
or
and
mov
mov
ja
stos
sub
and
out
xchg
and
hlt
push
xor
mov
adc
lcall
mov
adcl
dec
push
sub
adc
push
call
ja
jo
push
je
lahf
cltd
xchg
push
jne
pop
in
inc
mov
add
repz
adc
adc
sbb
sub
shl
les
or
std
add
aas
rcll
mov
fs
mov
cmpl
add
lahf
ret
pop
mov
cmpsb
movb
loopne
mov
testb
dec
int
faddl
push
lahf
pop
sbbl
sbb
mov
inc
sub
jnp
enter
push
add
push
popa
and
pop
mov
fsub
jns
mov
add
push
lods
cld
push
and
mov
lret
fsubrl
lods
sahf
cld
and
sub
push
lret
bound
sbb
mov
daa
aam
popa
or
adc
mov
pop
fxch
pusha
sbb
push
lods
scas
or
mov
mov
bound
cmpsl
into
out
ret
fists
xlat
les
out
hlt
mov
xchg
pop
jl
loop
xchg
je
mov
es
stc
push
xchg
push
imul
or
inc
ds
out
pop
lods
sub
bound
push
movsl
mov
mov
jmp
jecxz
aas
lcall
mov
popf
sub
xchg
push
jns
fisubl
movsl
ret
out
nop
sub
dec
pop
adc
outsb
lcall
clc
fsubr
stc
fcmovb
sbb
rol
daa
leave
inc
les
mov
sbb
add
in
push
adc
les
cmp
sbb
pop
push
cmp
xor
inc
repnz
call
add
mov
cld
and
mov
or
ret
fsubs
scas
fstpl
fildl
mov
sbb
insl
jp
push
push
push
mov
mov
in
mov
fnstenv
push
inc
or
je
push
shrl
push
xlat
in
sahf
subb
and
jno
or
pop
aad
movsl
inc
int3
arpl
mov
cmp
repz
dec
fdivrl
or
xchg
cs
sbb
mov
and
insl
rorb
xchg
sub
jg
mov
ret
adc
lret
pop
mov
or
adc
aaa
add
mov
stos
out
sbbb
sub
jg
movsl
rol
rcr
out
movl
xlat
les
in
push
or
mov
cmp
jno
jecxz
cli
sbb
divb
push
mov
sarl
mov
xlat
xor
nop
and
out
bound
mov
int3
adc
imul
dec
lret
in
jns
adc
test
aad
xchg
adc
movsb
aas
jae
mov
stc
dec
or
mov
lcall
xor
std
mov
fldcw
stos
in
incb
and
cli
xor
xor
daa
sub
and
cmp
daa
and
fcomi
adc
js
subb
xor
nop
out
cmp
leave
jg
cmpsl
push
ficoms
mov
test
fsubr
scas
adc
hlt
iret
shlb
int3
inc
insl
jge
sahf
and
mov
dec
inc
daa
gs
nop
jnp
mov
jl
shlb
lods
and
dec
xorw
adc
add
sbb
mov
out
sbb
cmc
mov
or
push
and
xchg
push
add
daa
push
insl
repz
out
and
lods
cmp
xchg
in
pushf
inc
inc
aaa
pop
in
fldcw
adc
pop
and
hlt
stos
add
push
mov
test
arpl
pop
int
ss
insb
imul
lds
mov
inc
in
iret
push
xchg
stos
inc
test
in
dec
xor
fsubs
xchg
jl
test
aas
stos
push
xor
leave
xchg
push
loope
xchg
nop
mov
xchg
daa
arpl
ds
sub
aaa
stos
xlat
dec
insb
out
cmc
and
mov
insl
mov
jne
decb
test
mov
xchg
push
je
dec
add
inc
fcomp
mov
stos
adc
mov
jno
fistpll
dec
out
pop
ja
xchg
test
leave
sahf
dec
dec
inc
push
pusha
movsl
mov
pop
in
and
jg
jmp
xchg
sub
adc
loope
pop
out
sub
and
or
aam
inc
pop
cmp
in
sub
sub
or
dec
inc
and
ret
sar
mov
into
mov
imulb
and
sbbb
and
and
dec
mov
fcmovne
jbe
and
push
pop
xchg
gs
lds
loopne
inc
push
pop
into
jnp
cmp
fadd
adc
std
hlt
iret
aas
imul
lods
mov
pop
mov
sbb
call
mov
inc
in
mov
stos
cmp
mov
out
in
push
outsl
push
xchg
add
push
gs
xor
push
xor
flds
jecxz
push
rcrb
test
insb
clc
test
cmp
test
jno
jb
sbb
and
add
push
mov
cmpsl
xlat
mov
xchg
add
pop
push
cwtl
shll
jg
jae
jae
outsb
mov
jg
aas
lds
movsl
mov
push
nop
jbe
push
pop
adc
test
les
pushl
insl
jg
fwait
adc
jle
adc
gs
jg
js
dec
fdivrl
mov
xchg
test
fsubs
fdivrl
push
lock
xor
in
push
clc
mov
jb
clc
scas
sbb
mov
mov
push
fwait
mov
inc
int3
loopne
jns
test
outsb
cmpsb
xor
inc
loopne
sub
roll
sti
mov
sub
daa
add
sub
fisttpll
push
clts
les
and
push
cmpsl
pushf
push
xchg
add
cmp
mov
cltd
dec
jmp
aas
stos
or
pop
add
pop
data16
data16
aas
dec
in
inc
inc
out
decl
faddl
xchg
xchg
std
jbe
rclb
add
scas
xchg
inc
and
in
in
cs
adc
out
inc
sbb
xor
and
pushf
mov
les
and
or
cmpsl
fwait
push
outsb
mov
inc
or
arpl
minps
lcall
clc
clc
popl
push
fsubrs
iret
and
inc
addr16
and
addl
repz
or
xchg
pop
mov
mov
pxor
or
mov
rorl
ficoml
xorb
or
lock
cmpsb
xlat
xchg
xor
ret
push
mov
dec
clc
cmp
sub
sbb
inc
aad
enter
dec
add
xchg
inc
jle
sub
fsubl
jb
cmp
aad
shrb
fildl
inc
xchg
and
jmp
pusha
cmp
ffree
sar
sti
mov
bound
cmpsb
xorl
loopne
mov
add
out
push
rcr
cmp
out
mov
repnz
addl
pop
and
mov
mov
add
dec
jbe
mov
cltd
jl
in
xor
shlb
add
add
fisttps
cli
std
sbb
mov
xchg
push
push
jno
cmp
mov
ret
ljmp
adc
ljmp
popa
shlb
xchg
mov
mov
inc
xlat
jle
je
call
sti
bswap
cmp
xchg
sub
mul
mov
pop
sbb
aas
insl
dec
fsubrs
lea
adc
mulb
push
or
jb
fwait
cmc
aad
or
les
xor
je
inc
dec
loop
test
je
lret
sub
cmpsl
push
hlt
cmpsl
push
mov
dec
dec
in
sbb
out
add
aaa
cmc
adc
mul
ja
lahf
mov
pop
loop
jne
add
jnp
xchg
jg
les
sahf
addr16
ret
mov
cltd
adcl
leave
sbb
je
lods
out
aas
ret
sub
ret
cmp
mov
iret
fstpl
int
out
cs
sbb
add
icebp
mov
mov
fcoml
cld
lcall
in
ret
push
mov
push
loop
cmpsl
ja
sbb
mov
mov
and
hlt
jbe
and
dec
ja
xor
pushf
fcmovb
xchg
or
nop
insb
popl
idivl
shl
add
push
int3
xchg
inc
orb
lock
xor
push
lds
jae
jmp
jecxz
out
push
nop
sub
ja
iret
add
lods
adc
xor
sub
dec
mov
out
ret
mov
push
push
jae
jg
or
lods
loopne
into
adc
mov
out
sub
stos
aaa
lods
push
xchg
and
jo
outsb
test
sub
cmpl
notl
lret
lret
pop
add
ret
mov
mov
mov
cmp
and
mov
inc
daa
int3
pop
mov
inc
push
testl
add
iret
data16
aam
in
divb
and
enter
pop
stos
jle
cmp
leave
cs
or
loop
pop
inc
sbb
in
adc
aaa
roll
in
test
adc
aas
jae
fdivl
popf
xchg
pop
repnz
mov
jns
lret
jno
in
movsb
push
push
arpl
mov
jle
shlb
pop
leave
mov
fimull
pop
in
cmp
stc
jno
pop
aaa
flds
mov
test
repnz
and
js
jg
jae
cmp
adc
dec
addl
xchg
adc
ds
jmp
jb
pop
mov
fs
jne
lret
lahf
pop
mov
push
dec
sub
mov
sbb
dec
push
jecxz
sbb
add
mov
pop
repz
movsb
push
in
fwait
jp
jle
jno
mov
jle
gs
ljmp
daa
jp
jmp
pop
adc
data16
adc
notl
imul
fs
dec
in
idivb
dec
cmc
mov
scas
lods
bound
push
jae
adc
push
inc
test
arpl
add
ret
clc
dec
cmp
ret
ret
sbb
jns
lods
and
pop
sbb
lret
mov
push
cmovnp
pop
aad
mov
sar
cmp
cmp
test
lret
popa
and
and
add
mov
fidivrs
add
xchg
stos
push
xchg
jb
popf
adc
stc
xor
ljmp
xor
mov
ljmp
rcl
scas
push
jae
mov
ja
in
repz
cmp
sbb
dec
dec
add
mov
sahf
and
inc
int
mov
fisubl
insl
xchg
or
pop
sub
sbb
xlat
dec
es
push
sub
xchg
dec
pop
add
push
and
sbb
lahf
sbb
shll
cli
cmp
out
mov
sbb
fldl2t
sbb
pop
inc
stos
insl
popf
stc
push
mov
and
stc
xchg
icebp
xchg
outsl
cmp
addr16
push
push
sub
cmpsl
jne
fwait
cmpsb
shlb
jp
lods
lods
jo
mov
mov
cmpsl
dec
scas
mov
rclb
shll
sbb
arpl
dec
fidivl
fsubs
aad
pop
nop
outsl
mov
dec
mov
clc
mov
roll
add
sbbl
or
and
stc
int3
add
repnz
mov
sub
addb
mov
and
pop
fwait
push
mov
push
add
mov
jg
cmp
add
iret
cmp
jbe
adc
inc
sbb
stos
mov
add
je
sbbl
adc
shlb
enter
and
and
movsl
lds
arpl
inc
pop
mov
push
subb
xchg
push
add
pop
inc
iret
xchg
dec
add
lret
movsl
dec
fsts
or
ret
jns
mov
adc
dec
and
mov
test
imulb
lods
or
push
fiaddl
out
rcrl
sbb
inc
dec
xchg
pop
jecxz
lods
lret
in
sub
inc
cltd
pop
xchg
mov
mov
mov
daa
dec
repnz
xchg
jmp
or
daa
sub
loope
and
push
mov
out
mov
ret
rcrl
dec
jnp
fidivl
push
xchg
shl
mov
sub
xchg
shrl
mov
mov
inc
sbb
repz
xor
lret
push
outsl
or
cmpsl
sub
xchg
lods
xchg
mov
cmovns
cld
in
fmulp
pop
loopne
jg
fmul
lods
adc
or
sahf
jb
fwait
mov
pop
push
mov
mov
pop
es
scas
mov
adcb
push
cwtl
xchg
pusha
repnz
mov
out
push
fnstsw
cmp
sub
xchg
pop
orb
in
imul
popa
sbb
pop
mov
cmp
lcall
dec
mov
pop
subl
movsl
xor
das
test
inc
pusha
mov
push
sub
dec
lret
jb
push
xchg
xor
pop
andl
sub
mov
mov
xchg
scas
out
sbb
insb
push
push
insl
test
push
add
roll
mov
push
insl
adc
stos
daa
sbb
push
out
icebp
data16
push
test
dec
dec
enter
xor
les
xchg
xor
nop
insb
xchg
test
lret
cs
pop
ja
add
jecxz
push
iret
jnp
out
mov
stc
ja
adc
push
les
add
rcrb
mov
mov
mov
imul
cltd
cmp
out
inc
imul
and
sti
orb
push
mov
test
out
aas
pop
add
add
lea
js
mov
popw
push
adc
or
cmp
in
xor
stos
popf
push
sub
push
cmp
mov
xor
xor
std
rcr
pop
sbb
fstps
mov
fcomps
sti
xchg
push
or
sub
loope
pop
or
in
mov
imul
dec
add
inc
mov
pusha
std
pop
loopne
rclb
adc
daa
add
pusha
xor
mov
mov
subl
es
mov
pop
jns
adc
add
sub
ds
mov
push
or
outsb
fwait
xor
loope
jo
ret
je
popf
lcall
mov
ja
test
arpl
push
cmc
xchg
ficompl
push
js
fildll
test
mov
or
dec
setbe
pop
hlt
pop
bound
imul
inc
into
sub
repz
and
repz
dec
xchg
mov
leave
cmp
subl
dec
or
loope
jmp
mov
xor
ds
mov
mov
cli
pushf
mov
add
mov
in
shrl
sbb
fnsave
lea
sbb
xchg
clc
xchg
and
sub
addr16
out
jp
lret
add
push
mov
inc
loop
icebp
subb
mov
nop
jl
filds
xchg
fldt
mov
add
jge
add
aad
dec
xchg
test
sub
inc
lds
mov
dec
pop
stc
mov
sub
pop
scas
mov
test
out
inc
testb
or
adc
jo
sub
pop
and
xchg
aaa
and
mov
xchg
sahf
pop
xchg
add
jge
pop
popf
xchg
andl
pop
dec
iret
lds
jp
rcr
lods
mov
leave
divb
sbb
pop
xchg
and
xor
mov
rclb
pop
loopne
fwait
out
int
mov
fiadds
stos
xchg
xor
xchg
mov
dec
sub
dec
shrb
adc
mov
call
mov
mov
mov
out
das
add
dec
lock
movsl
aaa
dec
ret
int3
lcall
cmp
ret
iret
push
jp
dec
addr16
out
push
adc
sub
repnz
lret
mov
sbb
data16
adc
cmp
xor
gs
jb
xchg
mov
inc
mov
pop
cmp
push
daa
sub
pop
jb
jo
lea
lret
mov
add
scas
in
aam
cmp
dec
dec
or
adc
adc
jb
xor
movsb
pop
cwtl
das
mov
jnp
iret
outsb
mov
xchg
or
out
mov
sbb
cmp
mov
sub
lods
sbb
call
pop
jecxz
aad
add
imul
push
dec
cmp
cmp
loop
add
pop
push
movsl
insb
shlb
or
adc
xor
or
pop
test
mov
popl
inc
sar
test
pushf
lods
and
inc
popa
mov
push
js
push
das
xchg
and
lcall
mov
leave
ss
testl
mov
test
cmpsb
ds
push
pop
outsb
inc
in
jno
scas
stos
or
adc
shlb
sbb
ja
cmp
mov
mov
bound
movsb
xor
inc
repnz
int3
fimuls
mov
popa
jae
pusha
cmp
xchg
movsl
jle
adc
mulb
stc
pop
ret
xchg
adcb
push
leave
jecxz
sub
in
mov
mov
addr16
or
xor
jae
insl
aam
movl
add
cmpsl
pushl
push
aas
xchg
sahf
push
mov
mov
aas
lret
sbb
sbb
addr16
clc
cmc
aam
imul
jno
mov
clc
and
data16
inc
jb
inc
fmull
sub
lret
and
push
inc
jle
mov
fnstenv
mov
jp
fwait
ljmp
in
je
ficoml
rclb
jge
scas
out
out
and
fucomi
lahf
lods
inc
mov
insb
outsb
insb
insb
scas
ret
mov
or
push
mov
adcb
and
out
les
and
cmpsl
fwait
popf
or
cmpsb
insl
mov
ret
jp
out
pop
in
addl
das
sub
mov
in
rcll
fcmovnbe
lds
bound
loopne
jnp
mov
stc
gs
jg
popf
call
and
inc
stc
inc
rorb
mov
daa
es
add
jmp
pop
pop
xchg
push
hlt
rolb
pop
incb
inc
fstps
lods
pop
imulb
inc
push
or
push
imul
pusha
ljmp
in
popf
addb
out
cmpsl
jo
lret
jne
nop
xchg
bound
pop
movsb
fcomps
xor
push
cmp
sub
add
or
cmp
add
adc
xchg
jl
push
or
cmpb
and
or
push
lods
jo
add
enter
scas
jno
and
mul
sbbl
sbb
mov
sub
loope
int3
cltd
xor
inc
nop
mov
lea
lahf
push
loop
int3
leave
inc
and
pop
adc
jne
jg
pop
popf
insl
out
adcl
sub
mov
pop
fwait
sarl
xorl
or
mov
push
mov
mov
dec
sbb
cmp
shll
cmc
imul
pop
mov
int
inc
loope
stc
adc
dec
xchg
aam
and
push
mov
push
xor
mov
adc
daa
sbb
pop
push
loopne
mov
arpl
icebp
xchg
jmp
inc
dec
imul
cltd
mov
and
das
divb
int
pop
stc
mov
sub
daa
enter
push
pop
xor
sub
xchg
mov
mov
mov
mov
fisubs
cli
jne
jbe
loopne
enter
jg
push
test
inc
jle
pop
add
jns
push
fsubrs
inc
es
xchg
xchg
or
mov
or
ficoms
movsb
sub
pop
push
ret
xrelease
mov
fldl
stc
lahf
cmp
xor
cmp
aaa
inc
mov
imulb
add
sub
fstps
xchg
mov
jae
fucomp
xchg
out
xchg
test
mov
in
and
int
addr16
push
cltd
mov
out
sti
notb
and
inc
fsubl
inc
cmc
cmpsb
xchg
fidivrl
push
das
sub
in
mov
ljmp
jns
xor
in
xorl
or
xor
push
in
pop
ret
fxch
maskmovq
testl
push
pop
cmpsl
xor
scas
mov
jns
xchg
mov
cwtl
mov
xchg
or
and
cwtl
jo
dec
movsb
inc
dec
fs
xchg
pop
jl
add
inc
dec
xchg
cmp
loop
popa
adc
dec
fldt
psrad
xchg
xlat
cmp
and
jg
stc
mov
pop
cld
jae
insl
pusha
enter
mov
cwtl
in
lock
mov
cmp
mov
dec
or
cld
outsb
cwtl
inc
or
jmp
outsb
inc
xor
sbb
lds
idiv
mov
inc
daa
pusha
jle
sar
inc
cwtl
mov
dec
sti
pop
mov
push
gs
jmp
jg
sub
mov
dec
dec
or
pop
inc
xor
xchg
inc
daa
pop
fbstp
movsl
adc
pop
in
cltd
sti
sub
adc
out
xchg
outsl
adc
out
push
lock
cmp
push
and
mov
pushf
cmp
jns
sahf
jbe
ror
sbbl
or
and
fwait
and
jo
add
push
mov
stc
adc
add
push
inc
mov
fstl
xchg
xor
jmp
adc
fs
ss
fidivs
pop
in
inc
movsb
cmp
lods
and
pop
xchg
rcrl
mov
or
push
mov
mov
jg
inc
inc
push
in
in
popf
push
nop
xor
mov
xlat
sbbl
inc
jmp
js
mov
mov
push
push
cltd
pusha
mov
outsb
adc
cld
ds
dec
mov
inc
adc
push
popa
pop
add
mov
inc
jno
lock
test
xor
cmpsl
inc
xlat
outsb
jns
shr
pop
fwait
cmc
adc
or
sarl
movsl
xchg
aas
test
pop
sbb
push
in
jne
push
jmp
dec
pop
shlb
jl
mov
les
xchg
or
dec
dec
addr16
mov
inc
ss
lcall
push
and
sub
xchg
aas
jmp
fistpl
test
adc
repz
adc
add
add
ss
cmc
jne
add
jmp
aas
inc
pop
add
pop
cli
cmp
rcrl
repnz
ret
les
loop
push
in
ljmp
sub
xlat
mov
mov
mov
sub
loop
push
push
sbb
out
xchg
imul
enter
jb
addr16
or
pop
repz
mov
add
dec
jae
addr16
or
adc
test
mov
push
movsl
imul
sarb
ret
add
in
lea
and
add
and
or
add
ljmp
pushf
xor
aas
mov
or
sarl
adc
cmp
sahf
imul
leave
lods
rol
pop
add
push
inc
bound
sub
nop
add
leave
pusha
imul
testb
ret
outsl
sbb
lahf
mov
pop
mov
xor
movsb
mov
loop
sub
mov
lds
push
adc
test
jle
movsl
pushf
cli
mov
pop
stos
rorl
add
loope
arpl
ds
pop
mov
aam
mov
mov
das
add
or
cwtl
das
add
sbb
mov
test
cltd
aaa
dec
in
mov
mov
push
jg
pop
repnz
xchg
sub
push
mov
inc
mov
xor
insl
mov
popa
cli
rorb
add
lods
adc
test
mov
mov
xchg
push
jmp
adc
jo
mov
lret
push
cmp
insl
push
inc
fisttpll
cs
pop
addr16
cltd
outsl
lcall
mov
or
pop
sub
pop
pop
aad
scas
push
jle
jge
daa
ss
insl
and
xchg
xchg
fidivl
mov
or
jmp
cmp
push
pop
cmc
mov
jl
mov
stos
inc
sub
xor
lock
mov
inc
in
push
movsl
sbb
lock
pop
out
aam
push
movsl
mov
jbe
and
cmp
push
pop
hlt
mov
scas
adc
xchg
add
mov
add
cmpsb
das
push
aam
orb
xorl
mov
push
or
cld
mov
push
call
mov
outsl
push
mov
loope
mov
arpl
push
popf
dec
test
push
cltd
popa
clc
pop
lods
push
lods
loopne
shlb
add
test
cmpsb
sub
shl
loop
jbe
dec
dec
in
sub
ja
jl
shrb
lret
sti
inc
sub
push
les
mov
mov
xor
cmp
jp
fnsave
pop
lock
xchg
or
pop
adcl
inc
inc
mov
dec
in
dec
sbb
inc
cmpsl
jnp
fstpt
or
adcl
pop
sahf
leave
jg
push
decb
ss
xchg
sub
mov
nopl
leave
call
jno
mov
aaa
into
cmp
aaa
into
shl
mov
pop
loope
nop
or
xchg
sub
bound
inc
inc
mov
js
arpl
xchg
sbb
lahf
dec
mov
pop
mov
imul
sub
lea
inc
jge
adc
lret
add
pop
nop
and
arpl
push
aad
or
imul
sbb
pop
mov
fsubp
jns
jae
add
lods
xor
fidivl
push
push
mov
daa
clc
push
mov
push
lods
cmpsb
inc
xchg
je
pushf
xor
jnp
or
jbe
mov
iret
jns
sub
jbe
into
gs
stos
inc
xlat
addr16
xchg
inc
insb
add
ss
lods
push
in
loopne
pushf
xor
test
mov
stos
inc
out
fs
cltd
cmp
xorl
dec
jecxz
insb
cmpsb
cmp
jno
enter
mov
sbb
js
fs
scas
lods
mov
loopne
cwtl
das
stos
shlb
subb
loop
xchg
sub
clc
mov
mov
in
sbbb
cmp
push
inc
fnstsw
outsb
mov
jnp
mov
mov
jo
jmp
push
sub
mov
js
lods
cmp
push
enter
cld
xchg
lock
or
addr16
xchg
rcll
repz
cmpsb
cmp
hlt
nop
testb
push
outsb
add
xchg
or
pop
push
xchg
sub
xchg
jbe
enter
pop
pusha
xchg
clc
mov
pop
mov
push
sub
les
outsb
add
test
test
negb
dec
jecxz
pop
stos
inc
into
mov
sbb
das
xchg
xchg
rcrb
mov
xchg
lds
gs
mov
lahf
mov
outsb
inc
fstps
xchg
pusha
test
push
test
mov
das
adc
ljmp
in
and
popf
scas
inc
rorb
iret
data16
lcall
cmpsb
mov
xlat
icebp
mov
das
jl
dec
loop
mov
lock
and
jmp
cld
sbb
push
mov
sbb
jg
or
pop
cmp
mov
repnz
mov
popf
insl
call
data16
fcoms
nop
daa
inc
pop
insb
add
orl
bound
cmpxchg
xor
lods
das
xchg
sub
xchg
jl
xor
shl
jns
or
enter
jns
pop
dec
out
jbe
leave
mov
rcll
cmp
rolb
pop
mov
cbtw
lods
mov
das
jae
leave
pusha
bound
out
mov
inc
fsubrs
or
jecxz
xor
idivl
icebp
mov
jno
pop
mov
idivl
sbbl
scas
daa
mov
testb
je
jno
pop
stos
daa
mov
repnz
xchg
sub
leave
pusha
mov
lahf
ss
dec
push
in
jge
dec
loop
mov
xor
in
dec
outsl
push
jle
insl
add
mov
mov
mov
xor
sbb
ds
hlt
sbbl
push
pop
aas
add
mov
out
inc
push
out
pop
repz
add
popf
xor
lock
dec
outsl
push
das
stc
push
clc
xchg
sub
divb
daa
into
adc
xor
mov
push
in
lcall
cli
jbe
sub
xchg
sub
dec
in
jg
mov
test
int3
arpl
leave
test
adc
les
inc
add
cmpsb
xchg
pop
repz
mov
push
sbb
pop
imul
fwait
mov
mov
fsubrp
test
adc
xor
xchg
test
daa
mov
je
in
lods
ret
or
pop
cmp
pop
jne
pop
scas
mov
stos
lods
jmp
fmulp
clc
popl
add
and
stc
lea
sbb
leave
in
cli
std
xchg
sub
sbb
mov
sbb
mov
sahf
xor
inc
dec
mov
xchg
mov
jo
out
hlt
lods
ret
and
inc
inc
pop
js
mov
lret
inc
out
and
push
cmp
ret
pop
insb
pop
pop
repnz
stc
nop
inc
fimuls
std
mov
sub
pop
pop
push
adc
mov
popf
xor
aad
loop
jne
sub
lea
dec
imul
scas
mov
xor
popa
add
pusha
mov
mov
loopne
inc
fnstenv
inc
lret
bound
cwtl
das
sbb
jbe
aas
out
outsb
call
pop
scas
call
cmp
pushf
jp
dec
rcrb
xchg
xchg
inc
outsl
ds
inc
jns
bound
mov
jne
pop
out
jle
fsts
or
jge
popa
fisttpl
loop
cmp
or
dec
mov
out
pop
les
pop
pop
lret
mov
pop
add
sub
pop
jb
mov
xchg
ret
cmp
fdivrl
ds
mov
dec
sbb
push
movsb
inc
mov
aas
enter
push
xchg
push
xlat
jmp
scas
push
scas
mov
mov
movsl
push
push
rclb
mov
push
cmp
pop
icebp
fwait
xor
pop
or
dec
inc
mov
imul
push
and
stos
inc
xchg
sub
push
scas
mov
rorb
or
ds
and
push
or
push
jmp
jno
jmp
aad
divl
mov
lods
pop
lock
jne
mov
ds
adc
jge
push
mov
mov
or
push
daa
fldcw
and
lret
jl
dec
fcoml
roll
jl
inc
movsl
scas
inc
pop
popa
sub
jp
cwtl
pop
scas
sub
repz
sub
aaa
pop
cmp
es
encls
outsl
ret
int3
out
mov
lock
mov
out
into
push
lock
fimull
ss
xchg
add
sti
loope
mov
stos
or
int3
cli
stos
gs
mov
xchg
xchg
fidivl
jle
sub
hlt
sub
jle
popf
cmp
cltd
jg
bswap
test
mov
loop
dec
scas
dec
mov
sub
imul
push
mov
call
or
stos
cwtl
out
mov
testb
cmp
int
jecxz
inc
in
outsl
mov
pop
loop
mov
test
in
mov
mov
jne
aam
pop
repnz
and
pop
mov
pop
lock
imul
xor
push
sub
and
sbb
jle
loope
inc
mull
push
clc
jmp
cmp
pop
aam
inc
in
xchg
cmpsb
cmp
into
and
in
arpl
fsubrs
out
sarl
adc
ss
ja
ficoml
push
ljmp
test
testb
mov
xor
xchg
jbe
and
or
sub
adc
hlt
mov
and
notl
xor
fidivrs
jno
fsubl
and
mov
pop
push
sub
lahf
inc
mov
xor
jge
jnp
adc
adc
sbb
xchg
shll
pop
rcr
test
in
rorb
outsb
ret
loop
inc
js
testb
or
push
jns
daa
in
pop
sub
push
pop
sub
fildll
adc
stos
dec
jle
cmp
jmp
aad
mov
sub
aaa
or
lret
fwait
aas
in
push
lock
out
or
xor
adc
andl
pop
xchg
icebp
sbb
shll
xchg
mov
jge
lret
and
test
push
jmp
push
push
pop
scas
push
pop
ret
loopw
gs
incb
gs
ficoml
inc
movsl
lds
rolb
rclb
lds
adc
popa
lods
xchg
or
pop
push
dec
mov
sbb
ds
out
xchg
jp
fwait
or
mov
add
test
mov
push
dec
mov
pop
sbb
pop
cmp
jns
xor
sub
cmp
loop
pusha
fmull
shrl
xor
orb
mov
adc
aam
sbb
pop
shlb
loop
jmp
imul
sbb
outsl
mov
jg
pop
shl
aas
test
mov
in
adc
negl
and
repnz
inc
pop
rcrl
and
add
fs
popa
lds
xchg
xchg
jge
sub
fistpl
sbb
lock
dec
mov
mov
push
mov
xlat
xor
aam
pop
shll
xor
xchg
add
adc
pop
xchg
cld
xor
popa
add
bound
pop
shl
pushf
ficoml
mov
mov
push
xchg
cmp
pop
xchg
push
xchg
sub
mov
lret
pusha
sbb
add
das
fwait
lock
ds
enter
push
leave
pop
sbb
cmpsb
sub
call
js
fstpt
data16
mov
xchg
lahf
ss
test
sbbb
xchg
dec
sub
insl
fs
mov
js
je
dec
sub
sbb
dec
adc
sub
or
dec
stos
push
cmpsl
imul
sub
inc
cmc
out
int
sbb
pop
rcrb
jge
dec
stc
and
adc
mov
out
add
add
and
hlt
lock
mov
in
imul
sbb
push
add
imul
pop
das
push
add
pop
dec
in
dec
and
scas
jnp
incb
outsb
jae
fs
mov
icebp
popa
clc
loope
negl
add
cld
xchg
mov
jp
scas
lds
clc
sbb
ss
cwtl
lret
cmp
cmp
fdivrs
rorb
pop
cmp
int3
cmp
psubusb
cmc
mov
push
jmp
test
dec
mov
mov
mov
sarl
call
mov
sarb
iret
push
pop
cmp
cmpsl
xchg
inc
fistpl
bndldx
pushf
pop
jmp
jae
mov
mov
cmp
pop
repz
fs
enter
shrl
inc
nop
pop
cmp
sub
addb
clc
andl
mov
push
pop
inc
les
inc
int
pusha
cmp
xchg
xor
push
stc
push
pop
sbb
lahf
jle
mov
fistl
push
aad
std
fcomps
push
int
mov
cmp
ret
imul
sbb
lock
or
stos
adcb
in
jb
addr16
pop
xor
or
push
in
xorb
out
adc
sti
mov
push
out
nop
adc
icebp
std
push
mov
mov
push
cltd
mov
ret
fadds
xor
call
mov
inc
enter
popf
xor
push
test
adcb
adc
inc
push
scas
arpl
cmp
fsubl
arpl
mov
cld
dec
loop
xlat
push
leave
sar
js
mov
xchg
ud0
adc
cwtl
xchg
ficoml
push
fisttpll
jo
fnstcw
repz
cmpsb
imul
mov
gs
mov
and
and
jp
sub
jno
cmp
and
push
js
dec
ja
dec
bound
aas
and
xchg
pop
sub
adc
mov
mov
mov
jl
cmp
popl
adc
jb
or
daa
flds
bound
inc
out
lods
shlb
adc
test
mov
lret
lock
rorb
sub
cli
jbe
stos
pop
sub
scas
cmp
outsb
jo
jo
cmp
popf
pusha
xchg
subb
add
pop
std
mov
adc
movsl
mov
mov
add
jae
cmc
ja
nop
push
adc
mov
adc
aaa
pop
outsb
cltd
imul
notb
push
cmp
jl
pop
add
or
aas
xchg
jnp
es
shlb
jnp
xor
inc
fimull
lods
mov
cli
pusha
movsb
jbe
pop
sbb
ficoms
jbe
in
pop
and
aas
loop
imul
outsb
sub
movsl
pop
cmp
sbb
adc
cli
jne
mov
sbb
jge
xchg
jno
xor
daa
mov
lcall
or
xor
stc
fstl
jb
outsl
dec
shrb
cmp
mov
dec
gs
psrlq
iret
push
jecxz
leave
inc
push
scas
ret
inc
mov
pop
fs
gs
mov
andl
xchg
xchg
xchg
sub
lahf
jo
cmp
ja
outsb
mov
stc
cmovnp
sub
push
jne
test
movsb
add
xorl
inc
ss
mov
fldt
mov
popf
int3
js
rorb
pop
lods
ret
gs
jmp
cmp
lahf
mov
lea
sbb
roll
adc
mov
lock
add
adc
hlt
std
shll
jp
push
dec
loop,pn
jae
add
pop
and
out
xchg
jmp
mov
pop
fidivs
andb
pop
lods
push
fbstp
loop
mov
mov
inc
xchg
xchg
inc
mov
sti
imul
test
adc
jge
jne
jb
and
jmp
or
sub
xchg
test
adc
push
mov
fwait
dec
inc
mov
scas
pop
jbe
push
loope
cli
mov
dec
mov
push
scas
bound
insl
pushf
dec
loope
adc
adc
sahf
jecxz
add
cmp
sub
lcall
je
in
in
xor
jae
aas
xchg
mov
adc
jg
add
mov
mov
fisubs
push
dec
ret
sbb
inc
inc
xchg
mov
xorb
arpl
lcall
xchg
jo
int
dec
pop
xlat
ds
shrb
adc
inc
addl
xchg
xchg
mov
lock
xlat
pushf
xchg
fnstcw
xorl
add
sub
and
daa
ja
jp
scas
aaa
sarb
jae
ret
loop
pop
stos
cmpsb
or
adc
jb
fldl
jns
test
mov
mov
lret
mov
fucomip
lods
xchg
jns
or
adc
cli
out
xor
push
data16
fists
jnp
inc
cmp
cld
ss
mov
sbb
inc
xchg
adcl
xor
pop
push
outsb
lock
aad
adc
daa
cltd
repnz
mov
fdivl
loop
sbb
imul
sub
xchg
mov
mov
xchg
cmpsl
xor
sbb
dec
jmp
insl
iret
fidivs
inc
rcrl
aaa
mov
mov
pop
lret
mov
into
inc
repnz
call
sub
jbe
popa
xor
hlt
pop
cmp
mov
sbb
or
int
push
sub
sub
adc
xchg
ds
adc
and
cmp
push
int3
push
rcrl
cli
add
rcr
int3
loopne
adc
and
jl
jae
test
mov
mov
outsl
iret
iret
or
pop
xchg
lock
test
scas
lds
roll
sbb
pop
mov
pminsw
mov
pop
fdivrl
popa
jbe
push
mov
or
and
sarl
test
repnz
jg
mov
sbb
in
push
cmp
cmp
sbb
cmp
sbb
je
or
pop
les
mov
jmp
dec
lds
dec
shrl
out
sub
ficoms
jnp
iret
sbb
outsb
pop
pop
xchg
cmp
dec
pop
ss
pop
mov
xchg
add
cmpsl
mov
push
jne
jns
cmpsl
loope,pt
mov
pop
test
mov
cmp
push
xchg
jns
or
fwait
aaa
in
cld
andl
sub
jle
pop
cmp
jns
sbb
mov
xor
negb
stos
push
sbb
pop
cld
jmp
sti
inc
iret
repz
push
sbb
enter
mov
ja
ficoml
mov
out
imull
in
lds
mov
test
rcrl
mov
bnd
mov
push
adc
pop
out
pushf
cltd
add
fisubrs
in
sub
sarb
xor
jmp
mov
call
mov
call
int
jnp
jecxz
push
lret
lock
adc
lock
cmp
jae
sbb
mov
adc
sbb
adc
das
stos
sub
aaa
mov
loop
mov
filds
loope
push
mov
ret
in
ljmp
jno
iret
andb
call
mov
sahf
xchg
xor
pop
negb
jg
push
pop
sub
pop
push
sub
call
push
dec
or
pop
es
test
jge
sbb
push
int
dec
clc
and
in
and
cmp
sbb
sbb
aad
pop
cmp
loopne
dec
test
push
and
add
pmuludq
adc
mov
dec
push
data16
push
dec
pop
jp
pop
rclb
push
lcall
fildll
test
stos
jg
xchg
pop
mov
je
cltd
push
mov
jg
jecxz
xchg
shl
xchg
sub
frstor
iret
in
jecxz
iret
push
lret
cmp
fld
ss
pop
pop
int
pop
sarb
pop
pop
shrl
andb
fstl
inc
es
dec
das
inc
les
or
shrl
sbb
imul
mov
xor
lock
in
fbstp
inc
aad
xchg
fstpt
sub
arpl
je
adc
data16
push
int
sub
mov
pop
lret
js
iret
lea
mov
repnz
pushl
adc
lret
sahf
xor
movsl
pushf
xor
dec
ljmp
aas
mov
icebp
jmp
das
shll
jmp
dec
mull
fs
jl
rorb
jge
jnp
nop
xchg
arpl
dec
fistps
jg
ss
lods
imul
dec
dec
push
enter
cmp
mov
inc
sub
lea
pop
gs
mov
pop
ljmp
inc
fucomp
pop
fisttpl
sub
iret
push
les
and
stos
inc
enter
aas
ljmp
iret
pmaxub
out
fisttpl
std
mov
les
and
fisubl
xor
or
pusha
popa
out
arpl
ss
sub
lret
sbb
ljmp
jmp
cmp
filds
out
sbb
icebp
lea
sbb
andb
sub
fildll
std
xor
jge
cld
xsha1
cmpsb
int
add
push
int
stos
mov
add
stos
inc
fidivl
lret
push
shl
in
test
jmp
add
pop
ficompl
filds
adc
fwait
xor
shlb
test
lock
shlb
xchg
pop
jns
pusha
pushf
aad
mov
imul
nop
sub
test
mov
dec
rcr
cmc
es
jno
aas
imul
rolb
add
arpl
mov
idivb
je
mov
jl
scas
dec
sbb
inc
jno
cmp
and
lods
xchg
nop
jno
jg
mov
or
call
hlt
aaa
push
repnz
dec
mov
fbstp
push
movb
lret
and
mov
in
stos
scas
sbb
add
std
mov
xlat
dec
in
adc
xchg
lret
ret
hlt
std
xchg
push
pop
mov
popf
xchg
push
leave
clc
sbb
push
push
cwtl
ja
mov
mov
pop
repnz
cwtl
jge
sbb
mov
pop
fwait
pop
int3
cmovno
fsubrl
mov
pusha
outsb
ss
adc
mov
mov
push
out
inc
push
aam
xchg
sub
adc
inc
xlat
data16
and
stc
mov
and
push
mov
inc
idivl
xchg
sbb
and
sbb
add
or
aam
mov
cmp
fmuls
lcall
sbb
xor
stos
pop
fucom
in
call
mov
mov
mov
idivl
out
fcmove
sahf
xor
fldenv
pop
int
sahf
fcoms
xor
aas
dec
cmpsl
pop
pop
outsb
adc
outsb
pop
mov
insb
sub
out
xchg
and
cmp
or
repnz
cmpsl
pop
cli
call
les
icebp
pop
insb
mov
adc
mov
mov
out
inc
mov
fxch
inc
out
das
cmp
popf
lods
mov
add
into
inc
fstl
and
addr16
lds
ss
mov
cmp
jge
fs
push
mov
and
cld
push
mov
mov
arpl
lods
sub
outsl
inc
outsl
inc
fisubs
rcll
lea
cmpsl
jecxz
inc
shll
aam
test
negb
jecxz
into
adc
pop
or
fists
push
test
cmp
repz
jg
dec
aas
pop
push
loopne
jp
inc
jl
addr16
push
popf
adcb
iret
stc
inc
outsb
mov
or
adc
lods
jecxz
sti
lret
mov
enter
lods
inc
mov
faddl
ror
inc
ret
pusha
mov
out
lea
fstps
xchg
shlb
shlb
shlb
push
lods
jecxz
sub
shrl
sbb
add
in
push
sbb
sahf
jb
jl
dec
inc
dec
mov
xchg
gs
and
cld
pop
rcll
idivl
mov
push
test
dec
xchg
pop
movb
fidivs
in
stc
jecxz
xchg
mov
aas
jecxz
push
orl
addb
and
dec
movb
mov
out
sub
cmp
movl
adc
mov
xchg
sub
rorl
sbb
mov
sbb
mov
daa
jmp
push
testl
inc
mov
lods
gs
mov
push
aaa
mov
xchg
dec
les
add
dec
jno
add
mov
cld
fdivrl
loope
push
fsubs
pop
ret
mov
jecxz
or
adc
ret
xchg
adc
xchg
xchg
push
cli
add
in
movsl
xchg
movlps
call
and
ljmp
fwait
dec
mov
insb
mov
push
sarb
in
orb
and
push
mov
mov
hlt
sbb
mov
loope
xor
push
push
mov
icebp
cmp
jle
mov
or
pop
movsl
mov
adc
pop
leave
lcall
mov
adc
jecxz
clc
sub
test
loopne
in
cwtl
outsb
mov
rclb
in
cmp
fs
aas
xchg
dec
popf
dec
adc
inc
test
test
push
mov
sub
movsb
insl
xchg
pushl
lcall
pop
sbb
xlat
push
mov
cmp
pop
pushf
loope
into
inc
or
cmp
jbe
into
adcb
mov
jo
pop
dec
push
ljmp
dec
repnz
fildll
out
cmp
xlat
or
fidivl
pop
ss
mov
les
sub
cmc
dec
add
aam
sbb
jae
das
cmp
xlat
push
fisubrl
sub
mov
pop
shrl
out
sub
test
out
and
adc
flds
add
pop
in
mov
mov
ljmp
add
mov
xor
hlt
pop
xchg
jg
stos
dec
or
inc
xchg
insb
jb
push
stc
xchg
nop
iret
sahf
and
icebp
subl
enter
in
aaa
xor
push
pop
adc
cmp
aas
mov
stc
and
xchg
jl
cmp
inc
xchg
mov
addr16
sub
and
js
sbb
test
xchg
add
lock
out
mov
icebp
inc
pop
xlat
dec
lahf
inc
sbb
pop
or
lea
pop
call
push
gs
mov
loopne
and
lea
int
sub
cli
xchg
stos
xchg
pop
mov
mov
pop
mov
sub
cmp
push
insb
jbe
cmp
adc
xchg
inc
xor
push
jge
dec
movsl
dec
sahf
shlb
or
jle
mov
xchg
push
lods
dec
aad
push
push
call
lods
mov
xchg
push
add
add
mov
and
sub
loopne
sub
testl
xchg
xchg
xchg
sbbb
sbb
in
dec
xchg
jnp
sbb
mov
jp
add
xchg
jae
pop
insl
sti
xchg
cmp
pusha
loope
inc
sbbl
dec
lret
dec
pop
push
cwtl
pop
lret
in
pop
out
cmp
mov
or
add
popf
enter
mov
push
movsl
pop
cmp
ds
inc
lret
lret
mov
cmpsb
sbb
sub
lds
push
push
std
negb
lock
xchg
les
insl
aad
sbbb
out
jo
pop
add
fwait
pop
gs
outsb
adc
movsb
and
push
clc
and
fidivs
dec
dec
loopne
out
mov
test
or
push
mov
idivb
jp
popf
adc
inc
lods
jmp
cmpsl
jbe
sti
pusha
stos
mov
hlt
dec
ret
mov
lahf
xor
fsubrl
inc
dec
int
adc
dec
mov
imul
fwait
add
and
adc
xlat
cmpsl
xor
js
enter
xchg
xchg
mov
fstps
xor
sarl
scas
adc
outsl
inc
iret
ja
add
lea
mov
mov
cmpsl
or
shrl
pop
push
call
dec
mov
push
jecxz
push
movsl
lahf
add
and
lock
or
mov
cli
xchg
inc
test
and
leave
das
sbb
orl
push
call
call
or
cmp
mov
jno
jge
mov
loope
cmp
mov
jno
mov
mov
ret
repz
roll
imul
orl
jns
pusha
stos
fsubs
das
fs
inc
fiadds
mov
hlt
cltd
fdivr
xchg
or
sbb
inc
sbb
es
outsl
push
scas
fwait
jge
inc
scas
mov
lret
and
cmp
push
test
enter
push
adc
dec
out
movsl
jl
jmp
add
pop
imul
jnp
push
lods
mov
dec
in
std
inc
clc
cs
lret
add
out
or
inc
outsb
orb
jae
mov
and
das
xor
enter
jp
sti
fstl
test
fwait
jb
nop
xor
inc
mov
aaa
cld
adc
xor
decb
xchg
mov
or
shlb
dec
in
les
xchg
push
popf
sbb
mov
jmp
test
sti
push
ja
fiadds
aam
adc
push
adc
push
or
dec
dec
gs
cmpsb
add
adc
subl
movsb
int3
fistl
cmpsb
or
out
mov
inc
and
cmp
and
inc
scas
add
push
int3
jle
ret
sbb
xchg
lea
jp
push
xchg
sbb
push
stc
mov
mov
cmp
lcall
push
or
insl
sarl
add
ljmp
dec
mov
pop
icebp
xchg
addr16
mov
pop
sbb
or
jl
je
add
mov
stc
jg
imul
inc
adc
pop
fdivr
mov
cmpsl
ret
push
jns
mov
repnz
push
mov
or
dec
mov
aam
lods
sahf
cmp
je
mov
fwait
xchg
mov
cmp
fisttps
out
mov
and
jge
std
push
jbe
stc
mov
inc
or
sbb
mov
fsubrs
test
push
dec
sarl
sbb
jbe
jns
mov
out
pop
ret
shlb
xorb
jp
add
pushf
dec
jae
shrb
xchg
sub
sbb
roll
jno
add
out
repnz
dec
movsb
or
jle
mov
pop
movntps
mov
add
sub
shll
pop
leave
mov
ljmp
test
inc
insl
js
lret
je
insl
imul
aas
and
loop
dec
icebp
jp
cmpsl
iret
jp
pushf
das
loop
mov
inc
gs
xchg
mov
movsl
loope
outsl
push
cmp
outsb
mov
and
add
data16
xchg
fwait
xor
or
adc
cmpsl
lods
cmp
push
dec
pop
cmc
cmp
add
les
sub
sub
jb
mov
test
xor
xchg
popf
stc
push
cmp
sub
dec
dec
loope
shrl
rclb
jnp
je
inc
in
imul
lret
mov
out
fdivrs
fdivl
jbe
cmp
aaa
pusha
imull
mull
movsl
pop
or
pop
cmp
dec
fbstp
mov
aaa
fnstcw
scas
xor
arpl
cmpsl
xor
lcall
mov
popa
aam
sahf
fnstsw
movsl
add
mov
cmpsl
jmp
push
bound
jo
jle
jge
mov
and
jo
cmp
imul
push
rcll
cld
fdivrs
or
push
and
jl
cmp
mov
mov
lods
popa
call
stc
adc
sub
fnstenv
test
fwait
push
adc
mov
scas
jecxz
inc
lea
mov
xchg
xor
jno
imul
leave
adc
jb
lahf
dec
push
in
fldl
jmp
dec
push
repz
add
enter
rcrl
inc
push
enter
into
sbb
stos
out
aad
into
mull
or
les
fsubr
push
inc
pop
dec
add
lahf
lcall
clc
xchg
aaa
out
inc
push
scas
cmc
ljmp
sbb
out
scas
sbb
mov
inc
or
inc
push
sub
inc
jno
in
push
mov
in
adc
les
movsl
cmc
inc
or
mov
or
enter
gs
sub
ja
in
sbb
inc
push
icebp
push
sarb
in
or
inc
or
xchg
sbb
adc
inc
fs
jmp
dec
adc
fildl
orl
aas
scas
lcall
bound
or
fildl
push
negb
pop
adc
sbb
sarl
shl
pop
add
lock
and
int
aaa
out
jno
lret
mov
pusha
in
cltd
push
lret
xchg
adc
out
jno
inc
mov
pop
add
mov
adc
or
in
add
or
cltd
pop
pop
add
mov
mov
adcl
sbb
dec
pop
mov
mov
mov
je
dec
outsl
lock
mov
pushf
inc
adc
inc
int3
xchg
mov
enter
pushf
lret
sarb
mov
pop
mull
mov
aaa
cmpsb
icebp
imul
nop
nop
call
mov
dec
xchg
outsl
xchg
cwtl
test
or
sti
das
lods
add
dec
or
pop
cmp
fcmovb
sub
xchg
adc
xchg
int3
lea
iret
cs
mov
repnz
mov
cmpsl
pop
into
xor
xchg
xchg
add
cld
ret
or
push
add
push
xchg
cltd
in
es
mov
mov
mov
scas
sub
insb
and
fwait
in
inc
push
ret
dec
mov
mov
cwtl
repz
dec
or
sti
push
add
xchg
pop
add
dec
lret
rclb
push
add
mov
aam
cli
or
mov
mov
pusha
inc
js
sbb
cltd
xor
and
cli
pop
in
jge
test
fdivrs
fisttpl
and
jns
ds
pop
ja
xchg
out
add
sbb
jne
lcall
lods
dec
data16
mov
mov
aas
lcall
in
addr16
lret
and
add
daa
aas
into
mov
mov
pop
pop
mov
repnz
cmc
pop
test
jno
sbb
cmpb
aad
jae
into
mov
outsl
sbb
push
les
xchg
adc
mov
scas
cmp
outsl
xor
dec
pop
sub
dec
or
cmp
imul
or
pusha
aam
pop
repnz
out
int3
mov
lods
sub
fucomip
push
das
dec
or
sar
pop
jns
dec
or
dec
or
pop
cmp
push
and
mov
jl
movsb
lods
pop
cld
xchg
mov
sub
pop
scas
xchg
cmp
push
dec
adc
add
mov
aad
scas
sub
fistl
pop
push
mov
mov
mov
pop
pusha
cs
sub
push
leave
add
nop
rolb
mov
mov
scas
lds
jmp
add
sub
shlb
dec
mov
stos
cmp
mov
stos
sub
mov
adc
dec
negl
pop
add
sub
push
in
sub
lahf
sub
gs
sub
xor
xchg
add
fucomip
pop
add
inc
sub
and
push
dec
sbb
js
inc
or
ja
mov
jo
mov
push
xchg
jns
adcl
cmpsb
or
pop
mov
outsb
mov
aam
sbb
lret
adc
sbb
xor
jb
mov
idivb
mov
push
addps
dec
mov
push
popf
cmpsl
sub
stc
inc
xor
js
ret
mov
imul
and
jl
or
sbb
pop
lds
dec
jl
js
dec
adc
les
push
cmp
jno
sbb
inc
in
dec
jl
repz
into
loop
popa
sbbb
add
jne
pop
mov
testl
jns
cli
popf
mov
shr
pop
push
fadds
loope
or
adcb
jnp
jg
inc
or
insl
sarb
sbb
push
negl
loop
adc
adc
std
cmp
stc
dec
or
movsl
out
out
aam
push
rcrl
mov
mov
inc
imul
sbb
pop
add
daa
lea
mov
sbb
popa
mov
movsb
daa
in
sbb
loopne
stos
ss
pop
add
cmp
sub
pop
xor
sbb
lock
aam
xchg
cmp
mov
dec
lcall
lcall
and
cmp
mov
sbb
inc
addb
rorl
loopne
sub
and
cmpsl
mov
lds
inc
adc
xor
ja
xchg
fsubrs
stc
sbb
popf
cmp
inc
clc
pop
pushf
sbb
cmp
lock
sub
cmp
xor
mov
out
insb
mov
mov
mov
js
sub
cmp
dec
or
fstpt
cltd
fs
jae
dec
jg
popa
mov
lahf
cmp
scas
call
pop
cmp
add
je
out
cmpsl
jo
rcrl
mov
or
pop
pusha
dec
outsl
jmp
jge
out
out
cmp
jl
divl
mov
xchg
dec
push
aam
iret
mov
xchg
and
jae
popf
inc
cmc
pusha
jp
imul
mov
mov
test
pop
sub
inc
dec
mov
adc
cmp
mov
rcll
ds
std
xorl
inc
adc
adc
add
add
xor
sbb
cwtl
ds
dec
or
jns
sbb
int3
xlat
jle
lds
pop
cli
push
mov
pop
or
mov
sub
jmp
data16
cmp
mov
into
stos
ss
pop
mov
scas
and
les
negl
xchg
sbbl
inc
loope
jne
in
add
insl
sbb
push
clc
dec
push
ss
xchg
inc
xor
sub
int3
mov
ja
gs
fnsave
dec
es
or
out
fidivs
outsl
push
call
cli
mov
dec
in
out
jbe
cmc
xchg
cmp
movsb
orb
popf
inc
fmuls
inc
jp
push
rcrl
inc
or
xlat
repnz
jmp
std
popa
pop
incb
sbb
lods
callw
push
add
shl
idivl
lods
daa
sub
lea
xor
xor
xor
mov
sbb
inc
cltd
dec
inc
or
lret
push
push
std
dec
jns
push
adc
inc
or
mov
leave
cmpsb
add
mov
lods
adc
clc
nop
mov
addr16
jo
in
scas
xchg
pop
ret
sub
or
psrlw
icebp
mov
mov
fmuls
mov
push
psraw
push
orl
lods
xchg
jecxz
sub
ds
les
fidivrs
adc
ret
pop
out
pop
push
mov
movl
add
mov
mov
xorb
fnstsw
dec
mov
mov
arpl
shrb
mulb
or
pop
xchg
xchg
xchg
inc
test
das
out
test
jb
adc
jmp
jns
add
mov
add
iret
jns
test
pusha
repz
ja
lds
fsub
in
mov
inc
push
out
lods
gs
jge
dec
or
mov
lahf
les
popa
inc
mov
cmc
popl
push
jne
xchg
std
popl
iret
roll
fwait
lds
mov
out
popf
or
jecxz
xchg
push
cmp
ret
sub
jo
repz
loopne
cmp
mov
mov
fstp
orb
scas
xor
pushf
negb
loope
cli
gs
test
fcompl
inc
mov
nop
ds
lock
nop
or
cmpsl
dec
jo
pop
jmp
lods
sub
push
std
pop
and
test
cmp
mov
shll
icebp
ja
xchg
inc
ss
cld
push
clc
sub
ret
in
pop
pop
mov
stc
xchg
xchg
sahf
out
or
add
mov
pop
cli
pop
cwtl
mov
push
sub
movsb
xor
aaa
mov
or
mov
pushf
loope
test
mul
or
jno
mov
sarb
cmp
ret
inc
nop
mov
into
xchg
push
test
xor
push
mov
mov
andb
jne
inc
sahf
mov
xchg
cwtl
dec
push
movsb
ret
cld
mov
mov
or
add
mov
dec
xlat
bswap
rclb
mov
faddp
test
and
push
lea
sbb
jno
sbb
mov
mov
fwait
cmp
mov
pop
mov
stos
push
std
xchg
adc
xchg
fcoms
jo
mov
bound
mov
lahf
inc
xchg
add
cs
cmp
mov
lods
xor
jns
stos
push
jge
push
mov
aam
pop
sub
dec
fwait
mov
and
mov
inc
mov
mov
xchg
inc
push
add
xchg
dec
and
cmp
shl
and
in
stc
scas
sub
clc
xchg
mov
lret
sti
stos
fwait
cmp
xor
sbbb
das
icebp
mov
mov
push
out
cmc
xchg
stc
mov
mov
enter
jnp
cmp
cs
les
sarb
rcl
or
popf
add
mov
fisubrs
xchg
fidivs
and
adcl
je
mov
xchg
mov
sub
xor
jb
je
jae
dec
or
gs
inc
xchg
mov
aad
int
xchg
or
cltd
pop
jmp
mov
sub
mov
out
sbb
mulb
popf
insl
out
cs
adcb
andb
gs
clc
rolb
mov
mov
lahf
push
and
out
addr16
mov
lock
addb
pop
out
jns
mov
adc
pushf
scas
loopne
inc
ret
loope
cmpsl
mov
push
push
jne
mov
sbb
inc
popf
cmp
and
pop
scas
test
jg
mov
adc
jmp
popf
sbb
orl
mov
xchg
xor
and
flds
int3
inc
pop
ljmp
and
sub
lret
repz
fcoml
and
jno
xchg
cmp
lds
test
fisubl
loop
ss
xor
jbe
xchg
inc
and
and
movsb
dec
or
out
dec
and
inc
fidivrs
push
mov
sbb
shll
mov
clc
fwait
cmp
nop
inc
addb
cwtl
pop
mov
adc
cmp
xor
fmul
push
add
add
xchg
fcmove
and
cmp
sub
add
das
mov
push
add
pushf
cmp
insl
sbb
mov
test
loop
inc
jbe
push
add
loopne
add
pmaxub
xor
jno
xchg
jmp
xchg
movsl
out
iret
xchg
shlb
xor
insl
lock
push
les
hlt
inc
mov
cli
popf
call
aam
jg
cltd
cmp
jnp
divl
mov
jle
into
mov
addr16
adc
mov
into
push
mov
push
in
mov
stos
outsb
cmc
xor
xchg
or
out
in
jb
leave
roll
aaa
fwait
mov
fiaddl
cltd
pusha
lods
xor
lret
push
mov
test
and
ret
hlt
sbb
pop
push
jecxz
fcmovnu
andl
les
leave
sub
mov
out
mov
popf
sbb
xchg
fiadds
dec
push
or
cwtl
push
sub
sbb
push
xor
aas
loopne
xchg
push
das
in
jbe
test
xchg
cmpb
mov
rcl
cwtl
inc
or
lea
int
outsl
faddp
xchg
in
imul
mov
in
insl
imul
and
in
ficompl
mov
mov
shrb
in
sbb
push
dec
lahf
inc
add
cld
fs
hlt
movsb
sub
xchg
xchg
aaa
mov
pop
les
cs
push
inc
or
cmp
xchg
push
or
std
mov
ss
shrl
psrld
in
jo
je
testb
xor
popf
es
push
fsubr
jno
test
pop
mov
stos
add
cmp
mov
int
jp
fistpll
cmpsl
inc
sub
insb
and
aaa
xchg
bound
lods
dec
push
cmp
out
mov
mov
mov
flds
jne
add
mov
xchg
dec
or
andb
mov
add
xor
lahf
and
imul
aaa
into
xchg
push
jle
pop
jp
or
mov
push
rorl
adc
mov
es
or
mov
mov
jb
add
xchg
mov
adc
fnstenv
dec
push
push
inc
dec
dec
or
lcall
dec
dec
push
pushl
scas
sub
shll
stc
pop
int3
adc
andl
aas
sbb
cmp
movsl
xor
sub
dec
mov
scas
iret
xchg
pop
rcrl
data16
cmp
lret
mov
push
pop
cwtl
sbb
imul
out
jb
mov
push
shll
mov
imul
aam
jge
sub
cs
hlt
leave
xor
inc
adc
fdivrl
das
outsl
push
popa
mov
mov
and
aas
jne
add
push
pop
addr16
es
lods
pop
jnp
fnstsw
cmpsl
sub
or
mov
mov
adc
arpl
mov
and
imul
icebp
push
leave
faddl
gs
orb
out
jg
add
aaa
push
adc
mov
jmp
aaa
cmpsb
stos
inc
lret
mov
cmp
shrb
dec
sub
mov
xor
jge
mov
packsswb
stos
lods
pusha
fdivl
mov
out
cli
xchg
push
or
das
xchg
mov
or
xchg
jecxz
mov
scas
pop
add
cmpsl
mov
test
addl
cmp
out
movsl
pushf
aaa
cmp
add
pop
es
pop
xchg
fldt
mov
xchg
sub
mov
subb
shll
iret
popa
jae
fdiv
jbe
loop
loop
aaa
cs
dec
adc
cmp
addr16
mov
outsb
and
adcl
mov
mov
and
dec
inc
push
mov
mov
pushf
cmp
aam
mov
movsl
ss
movsb
imul
jnp
cmp
bound
sub
lock
hlt
lock
loop
leavew
pusha
cwtl
inc
sbb
sbb
add
pop
mov
pop
pop
inc
xlat
jl
mov
inc
xor
popf
shll
or
add
mov
filds
mov
jne
mov
lods
enter
orl
mov
adc
cltd
inc
ja
insl
in
fldenv
out
add
mov
out
lds
xchg
inc
dec
sbb
or
ret
sub
jecxz
adc
sbb
push
fcompl
xor
test
dec
aam
imul
push
cld
add
int
push
leave
xchg
fstl
mov
int
push
sti
iret
sbb
add
fdivs
pop
inc
rsqrtps
cmp
mov
nop
jb
inc
lahf
lret
outsl
in
pop
in
insl
cs
pop
cld
aaa
xor
sub
adc
das
test
jnp
testb
inc
adc
jno
gs
stos
bound
mov
and
dec
divl
and
pop
push
pushf
inc
jmp
pop
add
aas
xchg
inc
in
scas
cs
fdivrs
repz
cmpsb
sbb
jno
adcl
or
mov
adc
add
xor
xor
and
das
mov
stos
dec
adc
fsubs
stos
gs
mov
je
aaa
bound
xor
xor
dec
or
loop
and
mov
mov
jo
int
fwait
ret
lcall
xor
nop
or
lret
cmp
mov
pop
stc
xlat
stos
inc
subps
and
mov
in
test
sub
pop
orl
pop
add
dec
adc
jp
aam
xchg
or
push
dec
add
mov
scas
mov
mov
outsl
dec
adc
mov
mov
cltd
inc
movsl
or
mov
filds
and
in
push
shll
cmp
jo
mov
iret
test
mov
popa
mov
test
scas
nop
xchg
pop
xor
pop
add
mov
inc
or
enter
or
lock
and
push
xor
and
lret
fbld
call
cmp
lods
aaa
lcall
enter
mov
jmp
push
add
fstpt
lods
mov
push
stc
xor
jno
imul
pushf
adc
mov
sti
mov
sarb
push
clc
or
cld
popa
js
jecxz
es
xchg
imul
push
std
xor
jge
jae
pop
mov
cld
bound
fiaddl
je
dec
pop
adc
xor
sbb
pop
inc
js
xchg
push
ljmp
out
jg
adc
pop
cmp
int
daa
xchg
inc
add
cltd
cmp
xor
ss
ret
xor
test
xchg
enter
jg
push
add
or
adc
pop
mov
je
and
inc
into
xchg
pop
cmp
cltd
aas
mov
test
mov
lret
ret
test
pop
xor
sub
pushf
or
loopne
mov
and
cmpsb
pop
leave
xchg
icebp
movb
jb
je
lcall
addl
es
pop
xsha1
cmpsb
mov
jo
cmp
sub
sub
fidivrl
ret
xchg
add
or
lods
inc
pop
sbb
mov
push
or
mov
and
mov
mov
leave
jl
cmp
cmp
xor
loop
inc
push
xchg
vdivpd
aaa
xchg
push
jns
mov
sbbl
push
loopne
pop
push
push
subl
push
jmp
lcall
mov
cwtl
inc
lret
add
push
stos
xor
mov
xchg
push
sbbb
push
sbbb
pop
jb
mov
mov
pop
imul
imul
sbbl
mov
popf
inc
push
subl
xor
insl
gs
xchg
push
ja
data16
cmp
sub
loope
xor
test
dec
or
push
aad
push
jg
rol
outsb
cmp
mov
test
aaa
xor
pop
rdtsc
dec
repnz
ds
shr
inc
adc
call
mov
in
insb
push
jb
movsb
es
push
add
shll
sub
jmp
pop
add
sti
int
cmp
fnsave
sub
xchg
adc
lea
inc
pop
mov
mov
pop
add
test
imul
lods
les
loopne
jno
cmp
addr16
xchg
repz
dec
mov
push
shrl
stc
pop
jns
xchg
inc
test
mov
xchg
pop
movsl
xor
fdivl
gs
ds
adc
stc
out
mov
mov
sbb
push
cmp
push
sub
jmp
inc
or
sahf
inc
je
enter
aas
mov
cs
push
out
cmp
sub
orl
call
mov
add
jb
sub
cmp
xchg
aas
inc
and
call
mov
out
loopne
push
lods
sub
add
inc
cmp
nop
xchg
and
pop
cmp
xor
sar
les
lcall
adc
inc
inc
or
xor
lret
xlat
and
xchg
rolb
pop
in
sub
sbb
dec
jp
xchg
jae
shlb
pop
add
js
mov
ret
xchg
push
clc
xor
and
jne
clc
lock
data16
je,pn
mov
cmc
and
jns
loope
icebp
js
pop
push
out
in
push
inc
jae
enter
mov
test
ljmp
push
pop
xlat
xchg
lret
push
jle
or
nop
add
insl
xor
into
and
sarl
movsb
push
add
popf
loope
popa
xor
dec
stc
pop
jl
push
push
push
sub
dec
insb
fdivl
xchg
cwtl
cmp
jecxz
jg
les
mov
into
cmpsb
inc
out
lds
ss
add
rcrb
push
adc
mov
in
ljmp
lahf
sti
inc
push
nop
int
and
les
adc
lds
adc
cmc
mov
mov
or
pop
in
pop
fisttpll
hlt
push
orb
adcb
lret
mov
iret
iret
mov
dec
or
sub
aad
mov
test
pop
imul
dec
orl
sbb
popf
xor
jge
mov
xchg
rcll
outsl
jg
and
dec
xor
fnstenv
xchg
pop
add
int
xchg
clc
aad
sbb
push
cwtl
push
pop
add
pop
mov
dec
inc
or
mov
pop
inc
cmc
and
icebp
dec
adc
popa
xor
roll
mov
lret
jno
icebp
push
push
add
mov
iret
inc
leave
or
imul
jle
mov
aaa
shrb
jns
std
adc
push
xor
es
xor
in
insb
cmc
mov
push
sub
xor
add
fimull
flds
fnstsw
lret
pushf
jmp
dec
xchg
sub
mov
mov
xchg
out
xor
leave
fdivs
dec
jecxz
int
push
add
adc
in
jle
insl
out
lock
cmp
jmp
mov
aad
nop
int3
ds
fdivrl
inc
add
icebp
cmp
xchg
cltd
out
dec
or
xchg
or
or
out
or
cltd
xor
test
sbb
es
sbb
adc
subb
push
push
inc
or
add
mov
lods
adc
xchg
jmp
push
lret
or
pop
xor
fistpll
fwait
cmp
pop
mov
rolb
shll
adc
leave
or
popf
cmp
push
mov
inc
out
sbb
cltd
fidivrl
sbb
xchg
clc
aaa
dec
or
or
daa
out
cmp
push
ds
xchg
das
out
push
adc
pop
jge
dec
push
xchg
adc
mov
adc
lcall
lods
mov
stos
insb
out
or
mov
clc
pusha
jne
mov
mov
mov
jle
out
insl
lea
js
aad
into
inc
xchg
jnp
lds
sbb
sbb
push
fwait
icebp
adc
mov
mov
pushf
mov
psrlw
cmpsl
mov
call
call
add
into
add
lahf
clc
sbb
cld
out
fiaddl
push
enter
adc
out
mov
fwait
cmp
jp
jecxz
xlat
adcl
fistpll
out
sti
popa
push
mov
jge
jecxz
addb
vmwrite
movsl
xor
adc
xor
rclb
mov
jle
nop
mov
adcl
mov
fwait
xchg
hlt
mov
pushf
ja
into
out
add
ljmp
or
pop
and
dec
dec
pop
add
ss
aas
jp
aam
sub
mov
cmc
sbb
jle
fwait
cmp
ss
aad
and
je
insb
xor
sbb
jnp
ja
mov
or
jg
push
inc
adc
and
xor
fnsave
adc
lods
push
shrb
push
xchg
lods
in
pop
in
arpl
dec
push
mov
cmpsb
std
pop
push
sub
pop
xor
das
in
insl
mov
cmpsl
dec
push
inc
add
popf
mov
xchg
inc
insl
fcomp
jle
ja
mov
repz
jne
ljmp
jecxz
std
pop
mov
cmpsl
xlat
and
cwtl
cmp
and
push
and
mov
adc
dec
lret
test
lret
mov
mov
xor
pop
fldcw
xchg
inc
test
push
dec
fnop
test
xchg
lods
aaa
repz
cld
sub
mov
sbb
xchg
cmp
pop
sbb
lea
mov
inc
jecxz
cmpsb
adc
xor
fadds
xor
push
ret
test
ds
xchg
pop
mov
cmpsl
xchg
inc
push
push
xlat
test
nop
pop
cld
je
mov
ss
mov
cmpsb
imul
push
mov
jne
cmpb
scas
fcoml
cs
xchg
inc
fs
loopne
sub
neg
aaa
cmp
cli
or
shl
xchg
push
dec
std
inc
jo
fidivrs
fwait
adc
fstpt
dec
or
inc
dec
jae
jg
mov
faddl
sbb
xchg
js
fldt
mov
mov
out
add
inc
pop
add
jmp
adc
cmpsb
outsb
popf
inc
aad
orb
sbb
and
cs
xor
clc
movsl
out
mov
pop
cmc
mov
and
fldt
mov
aam
shl
jl
test
mov
imul
and
jg
in
test
rcr
out
jb
or
gs
daa
int3
nop
xor
int3
nop
sub
inc
or
push
cli
jl
in
jb
push
and
mov
movaps
xchg
inc
stos
repnz
pop
fnsave
outsl
rcrl
repz
out
xor
lods
sub
and
jg
xchg
inc
xchg
fistpll
into
pop
mov
cwtl
sbb
xor
out
imul
rolb
ds
jb
and
nop
shll
xchg
adc
movsb
push
enter
cmp
jg
scas
add
jle
outsb
in
sbb
inc
dec
or
inc
adc
test
push
sub
add
add
loopne
pop
mov
pop
decb
gs
ficoml
popa
ss
insb
hlt
sub
jecxz
mov
push
xchg
pop
pusha
add
and
es
and
mov
cmp
test
into
push
adc
test
jge
rcr
cmpl
xchg
fs
fcoms
negl
sub
add
inc
jae
and
mov
sarl
mov
pop
stc
inc
mov
pop
dec
pushf
inc
adc
mov
movsl
inc
adc
ret
push
add
lret
and
mov
cmpsl
and
cmpsl
cmp
and
adc
add
sbb
and
and
jbe
ja
pusha
jns
ret
les
lods
rcrb
aaa
fwait
sbb
mov
dec
inc
or
adc
test
dec
mov
jp
xor
jb
lods
sahf
inc
insb
outsl
orl
push
mov
insl
mov
stos
pop
add
rcrb
data16
mov
loop
lea
gs
cltd
mulb
push
ret
add
mov
mov
dec
xchg
inc
fcmove
jo
lcall
and
push
rorl
insb
repz
lcall
inc
sbb
ja
add
adc
or
testb
jmp
ret
movsl
sub
stos
xor
imul
push
dec
adc
pop
fmull
loop
ja
mov
test
mov
fsts
mov
pop
in
mov
fmull
int
cmp
or
std
pop
mov
inc
in
inc
or
xchg
add
mov
jns
xchg
sarl
add
call
je
mov
push
clc
cli
in
nop
pop
jecxz
mov
sbb
dec
repz
in
or
popf
jns
xor
leave
rolb
aam
pushf
cmp
fdivrs
icebp
in
fwait
mov
clc
mulb
adc
cmp
and
cmp
in
pusha
repz
xchg
inc
stos
lods
hlt
pop
scas
mov
push
nop
mov
into
aad
in
sbb
pop
jne
roll
sbb
mov
fcmovb
mov
addr16
std
xchg
inc
fistpll
add
movsb
xor
cltd
sbb
cmp
mov
pop
add
andl
mov
es
enter
push
jnp
cmpsl
popf
dec
jb
nop
lret
addr16
jnp
fnstsw
add
cs
pop
int3
ret
mov
loope
gs
mov
mov
xor
mov
pushf
pusha
adc
lahf
jnp
and
sarl
lcall
data16
cltd
fnstenv
ja
or
cmp
lods
inc
or
ss
xlat
jns
xchg
incl
mov
hlt
out
mov
insb
out
add
dec
adc
xchg
ja
stos
jo
loope
push
std
imul
push
stc
enter
jns
xchg
cmp
vpunpcklqdq
jecxz
stos
pop
sub
or
jecxz
jg
or
mov
scas
xchg
fsubr
je
aaa
xchg
cmp
loope
jg
pop
sarl
jp
cwtl
push
addr16
inc
dec
fildl
or
insl
sub
sbb
pop
hlt
orl
popa
clc
shlb
imul
lock
xchg
inc
inc
or
xlat
sbb
sbb
dec
jne
push
jl
mov
ja
outsb
sbb
lds
sbb
dec
je
xor
jne
fldenv
pop
push
or
jno
inc
and
out
push
jo
add
es
add
lods
je
fucomip
push
push
add
pop
jno
mov
xchg
iret
data16
les
sti
in
test
dec
or
mov
ficomps
mov
repz
fisubs
cmp
bound
cld
jbe
pop
icebp
mov
sbbl
aad
sysret
jmp
cmp
ds
dec
scas
xchg
fnsave
shrb
in
xchg
pop
and
xchg
sbb
cmpsl
mov
into
mov
fcoml
or
jae,pn
pusha
insl
imul
mov
xchg
repnz
inc
push
adc
cmp
pop
les
jp
subb
mov
ds
sub
nop
jno
frstor
ret
fs
hlt
add
adc
jp
xchg
cmp
mov
mov
sub
dec
aam
andb
xchg
mov
sbb
and
inc
lds
push
out
mov
jne
fsubrp
push
sbb
xchg
sub
cmp
mov
test
shlb
jecxz
pop
adc
aaa
loop
imul
xchg
mov
fcompl
mov
repnz
fbld
das
cmp
pusha
inc
data16
jne
pop
icebp
mov
test
enter
add
daa
xchg
sub
outsl
jp
dec
lods
nop
fidivs
int
imul
and
mov
sbb
movsl
mov
iret
mov
ficoml
or
dec
jecxz
sub
or
push
popf
jg
sub
shlb
ds
and
lds
in
subl
or
cmp
sub
dec
pop
and
mov
shll
add
xor
test
inc
push
jnp
test
cmp
mov
mov
sub
aad
jle
std
xchg
xchg
lahf
repz
mov
mov
repnz
aaa
inc
das
jne
pop
out
mov
jbe
fsubr
imul
xchg
sub
cmp
and
mov
orl
addr16
loop
pop
adc
out
test
ss
push
mov
cwtl
mov
fistpl
mov
lock
fbld
cs
std
jae
pop
repnz
test
sarb
add
mov
cs
cmp
push
insl
jns
dec
stos
mov
jne
int3
shrl
loope
xchg
adc
repnz
sbb
movsb
xchg
iret
mov
cs
push
in
or
dec
in
sub
push
add
mov
out
shlb
aas
inc
and
gs
fs
pop
xchg
jbe
subl
or
cmp
sub
dec
pop
and
sahf
scas
aas
fistpll
pop
cmc
xor
test
inc
push
jl
test
xchg
movsl
lcall
clc
mov
jbe
dec
insl
jge
std
xchg
nop
sahf
hlt
mov
mov
mov
icebp
adc
xor
push
pop
out
xchg
jbe
insb
add
cld
xchg
sub
cmp
dec
orl
pop
adc
out
test
xor
or
jp
add
int3
fisubl
mov
out
dec
fistps
sub
data16
jno
pop
repz
test
sarl
add
mov
das
push
cmp
push
imul
stos
mov
jne
lret
aam
std
xchg
adc
repz
sbb
mov
les
cmc
push
in
pop
pop
dec
in
sub
imul
mov
mov
add
test
gs
arpl
pop
xchg
je
andl
or
cmp
sub
dec
pop
and
pushf
lods
inc
xlat
fidivrs
pop
cmc
xor
test
inc
push
jl
andl
xchg
movsb
lcall
idivl
jbe
dec
insl
jl
std
xchg
popf
hlt
mov
mov
mov
lock
xor
xor
jae
pop
out
xchg
or
sbb
xchg
sub
dec
mov
orb
addr16
pop
adc
out
test
xor
jnp
dec
or
jns
add
lret
fldenv
mov
in
dec
fistps
sub
aad
aas
data16
jo
pop
repz
xchg
test
ret
sarb
add
mov
das
push
cmp
push
push
mov
test
lret
cld
fdivrp
xchg
adc
repz
sbb
mov
ret
das
hlt
aad
in
push
push
dec
in
daa
je
pop
push
xchg
sub
mov
decl
test
push
popa
pop
xchg
jae
test
or
cmp
sub
dec
pop
and
fwait
stos
inc
xlat
fdivrl
cmc
jne,pn
adc
mov
rcrl
mov
ja
dec
insl
jp
xchg
mov
sbb
loopne
adc
xor
jno
pop
lock
ja
fsub
insb
add
cli
xchg
sub
cmp
dec
jg
test
mov
faddp
pop
adc
out
xchg
xor
jnp
inc
or
cltd
mov
sub
lret
mov
in
dec
loopne
sub
aad
ds
outsl
jl
rep
nop
test
into
jp
add
mov
das
push
aaa
rcrl
mov
cmpsl
mov
jbe
enter
xchg
nop
mov
sbb
mov
shrl
repnz
out
add
es
pop
data16
add
mov
mov
decb
inc
ds
shlb
pop
pop
xchg
jb
test
or
testb
ret
and
lcall
in
sti
pop
cmc
sub
xchg
jg
movsb
cmp
mov
pop
out
mov
js
inc
insl
js
call
lret
scas
sbb
test
xor
xor
outsl
push
pop
icebp
test
js
xlat
loop
add
xchg
sub
push
mov
imul
xrelease
inc
push
movsl
ja
add
leave
aad
mov
jmp
loope
sub
aad
cmp
pop
rep
popl
adc
loop
cmp
cltd
xor
ret
jae
dec
movsl
mov
ja
aad
clc
xchg
or
cs
pop
insl
adc
mov
xor
lock
add
dec
out
and
or
xchg
ja
sub
lret
cld
or
push
jo
xchg
ret
or
pushf
xor
sub
inc
push
and
cwtl
cmpsl
inc
fcomp
mov
pop
imulb
or
push
ds
jge
jge
movsl
cmp
sahf
fwait
xor
mov
pop
in
mov
jns
inc
xlat
outsb
jbe
add
leave
stos
push
mov
ljmp
das
cmp
pop
icebp
orl
insl
add
notb
and
mov
jnp
test
imul
lock
das
in
popa
inc
push
movsl
je
add
aam
mov
sbb
aas
pop
cmp
imul
stos
mov
adc
fbld
push
xor
pop
fs
dec
movsb
test
ja
neg
xchg
or
cmc
mov
sbb
pop
insb
adc
scas
mov
pop
out
add
push
out
and
push
arpl
xchg
je
sub
mov
stc
or
push
mov
xchg
rorb
xor
sub
inc
push
and
test
xchg
cmpsb
inc
mov
jmp
clc
pusha
imull
or
adc
mov
ret
pop
loope
mov
jns
inc
fsubrs
push
add
enter
fldl2t
adc
sbb
cmp
sub
xor
insl
dec
pop
icebp
jle
push
out
lahf
js
shl
outsb
add
and
inc
mov
js
stos
inc
mov
fcmove
pop
or
lock
cs
pusha
inc
push
movsl
jno
add
mov
sub
ret
shll
mov
push
es
xlat
push
aaa
push
cmc
test
lret
cld
fsubl
push
das
ret
jno
push
mov
xlat
outsb
not
xchg
pop
sbb
lea
sbb
pop
imul
jp
shrl
int3
pop
out
std
sqrtps
inc
push
ja
push
popa
outsl
push
xchg
jno
sub
mov
and
les
inc
cmp
shrb
pop
lret
push
xchg
push
movsl
out
add
sahf
xor
sub
mov
xchg
movsb
inc
fcmovbe
mov
add
mulb
daa
pop
mov
cmp
push
jp
cmpsb
cmp
int
les
out
mov
jp
inc
fnstenv
push
add
cmpsb
pop
mov
out
lods
sbb
cmp
lret
pop
bnd
push
call
iret
fisubrs
adc
xchg
and
lea
inc
mov
jbe
stos
inc
mov
shrl
fmul
pusha
or
icebp
mov
ds
outsl
jg
pushf
mov
sub
mov
adc
inc
fcoms
imul
cmpsl
mov
adc
xor
ret
pop
pusha
outsl
mov
js
ret
hlt
aam
xchg
push
push
testl
lcall
lret
pop
lock
or
js
dec
pop
jo
xchg
jo
sub
in
mov
cmc
add
shrl
pop
lret
bound
stos
jmp
cmpsb
in
incb
sahf
das
ucomiss
inc
push
and
jecxz
mov
push
in
popa
clc
and
inc
jg
js
cmpsl
mov
lds
mov
jnp
aas
fnstenv
push
add
les
adc
aad
cmp
lret
pop
repz
push
call
iret
fsubrl
push
icebp
cwtl
das
and
lea
inc
mov
jbe
stos
inc
mov
aam
leave
leave
pusha
or
repnz
adc
scas
nop
cs
and
adc
inc
fcoms
push
addr16
mulb
jge
clc
xor
pop
pusha
insl
mov
jns
rcr
repnz
xchg
add
es
mov
addr16
shrl
lret
sti
or
cmp
jns
dec
pop
jo
outsl
xchg
mov
ret
hlt
add
imul
bound
test
adc
sub
dec
and
in
mov
imul
repnz
clc
and
mov
cmp
jbe
test
mov
pop
fsubrp
mov
jl
cmp
add
ret
mov
adc
aas
sub
xor
addr16
pop
hlt
jnp
push
call
into
fisubrl
or
cltd
xor
lea
inc
mov
jne
stos
inc
mov
aad
enter
push
ljmp
pop
cmp
add
mov
and
adc
inc
fsts
imul
jb
mull
les
neg
cmpsl
or
popf
xor
sub
pop
pop
imul
mov
fnstenv
rolb
cwtl
add
clc
popl
mov
gs
lods
xchg
jbe
aam
mov
lret
call
or
cmp
jp
dec
pop
jno
lea
das
lahf
scas
es
mov
repnz
insb
inc
push
int3
arpl
cmpsl
ljmp
cli
or
cmp
pop
dec
in
sahf
inc
fcmovne
mov
add
lock
stc
and
and
inc
adcb
push
test
xor
fsubr
mov
jl
cmp
jno
push
add
shll
lods
adc
aas
daa
xor
pop
hlt
jns
push
jmp
int3
fnstenv
or
cltd
xor
sub
mov
jae
lods
inc
mov
aad
ror
popa
add
daa
call
test
jp
popf
stos
lea
mov
fisttps
adc
inc
ficoml
imul
jno
clc
mov
ret
jg
cmc
xlat
cmpsl
or
sahf
xor
pop
push
push
pushf
jge
jp
mov
add
inc
and
mov
fs
scas
xchg
je
aam
mov
int3
out
pop
repnz
jp
dec
pop
jb
mov
das
popf
lods
nop
daa
fistpll
scas
inc
xor
aad
inc
push
int
test
xchg
cmpsb
jmp
fdivs
or
cmp
mov
lea
insb
add
out
arpl
and
mov
xor
sbbl
xchg
pop
mov
jl
cmp
jb
dec
add
shlb
scas
adc
aas
and
inc
pop
hlt
ja
push
ljmp
jno
or
cltd
xor
sub
es
aas
mov
jno
lods
inc
mov
aad
ror
bound
repz
es
test
jns
sahf
stos
mov
mov
fisttpll
push
push
inc
fisttpl
imul
jo
stc
mov
ret
hlt
aad
ds
push
lahf
ss
sub
pop
pop
imul
jb
into
add
inc
and
mov
bound
scas
xchg
jb
aad
mov
int
les
push
push
in
aaa
push
jnp
dec
pop
jae
mov
xor
mov
scas
inc
xor
insl
inc
push
int
andl
xchg
movsb
jmp
mov
test
sub
xor
cmp
mov
mov
insl
add
in
arpl
push
add
jno
stos
inc
xchg
enter
mov
jge
cmp
jb
dec
add
jg
stc
nop
mov
fists
scas
adc
inc
xlat
and
xor
cmc
jbe
push
ljmp
jno
or
lcall
ds
inc
scas
xchg
insl
ret
ror
bound
in
mov
and
adcb
test
test
xor
mov
fmull
or
cs
add
stc
lahf
orl
aas
push
adc
ss
daa
pop
pop
addr16
jnp
mov
add
aas
pop
and
xchg
jno
mov
ret
pop
hlt
hlt
add
in
xor
push
jae
mov
xor
mov
scas
inc
cs
outsb
inc
dec
int
andl
adc
adc
or
leave
cmp
mov
mov
outsb
add
sbb
lea
cmp
stos
inc
test
leave
pusha
fsub
mov
jle
aaa
dec
add
nop
mov
fstl
scas
push
repnz
fsubs
xor
divb
push
ljmp
jno
push
ljmp
pop
cmp
lods
inc
lods
nop
xlat
outsb
ret
bound
in
mov
and
adcb
push
mov
enter
mov
or
inc
fisttpl
insl
add
insb
stc
popf
orb
lock
ss
es
pop
pop
gs
jl
mov
add
cmp
pop
sbb
mov
ret
repz
xor
or
cmpsl
xchg
sub
mov
scas
inc
sub
fsubrs
dec
int
jg
testb
mov
stos
in
or
cmp
mov
mov
outsl
push
fucomp
arpl
sbb
lea
cmp
sbb
stos
inc
test
leave
pusha
xlat
loop
push
adc
out
sub
dec
add
nop
mov
fcoml
scas
or
das
xor
divb
ljmp
jno
add
daa
es
cmp
push
outsb
jp
inc
lods
xlat
outsb
ror
jmp
cmc
mov
ljmp
je
lahf
movsl
xchg
enter
mov
or
inc
fmull
insl
add
imul
jle
and
shrl
aaa
inc
and
pop
push
fs
jl
mov
jae
lret
sti
or
xchg
cmp
and
mov
xlat
lahf
scas
aaa
into
loopne
pop
cmc
icebp
add
xor
jge
inc
push
je
test
xor
mov
mov
sub
outsl
ds
into
gs
testb
mov
stos
jecxz
or
ss
sub
mov
outsl
push
fucomi
fs
sbb
lea
cmp
inc
orb
pusha
aad
mov
jle
xor
add
xchg
mov
fistpl
scas
or
inc
fsubs
cs
inc
pop
divb
push
jmp
xchg
jge
or
fwait
xor
es
daa
pop
cmp
inc
stos
xlat
outsb
mov
loopne
mov
and
adcb
stos
fs
mov
mov
daa
mov
or
inc
fisttpll
insl
add
push
sti
fwait
jl
and
iret
test
cmp
pop
push
arpl
jl
mov
je
enter
or
xchg
cmp
and
lea
popf
scas
cmp
fistpll
push
out
xor
jge
inc
push
jne
test
xor
mov
push
call
or
outsl
cmp
iret
data16
testb
mov
stos
loope
or
xor
sub
je
push
call
cmpsl
outsl
push
gs
sbb
lea
test
in
xor
pop
pop
jecxz
or
nop
hlt
cwtl
loope
inc
sub
std
mov
inc
std
pop
jle
leave
loope
and
mov
add
pusha
sbb
mov
scas
dec
pop
pxor
ficompl
rcr
out
cmp
shrb
push
dec
sbb
stc
arpl
cmpsb
sarb
mov
sbb
xor
rorb
int3
sub
cmpsl
xlat
clc
push
push
add
push
mov
or
adc
daa
rcl
add
ret
mov
data16
add
xor
sti
scas
repnz
leave
jge
jge
ljmp
pop
ret
jns
rcrl
mov
lea
lock
xchg
mov
lock
jp
jns
jae
and
test
cmp
and
push
std
out
lahf
insb
push
lock
sub
jp
or
dec
add
pop
iret
jecxz
dec
popa
ret
jl
adc
xchg
fidivrs
jle
jb
nop
into
int3
ljmp
mov
fisttps
lahf
push
adc
xchg
mov
fs
inc
cmp
cmp
sub
adc
in
and
pop
nop
or
sbb
dec
int3
xchg
sbb
xchg
loop
sub
push
outsb
jl
mov
mov
fwait
lods
aam
inc
cltd
sbb
push
mov
mov
testl
mov
fbstp
dec
add
mov
addr16
xchg
add
incl
push
loopne
xor
sbb
and
xor
pop
add
xor
ret
out
cmp
sub
mov
push
mov
dec
out
cmp
adc
jo
cmp
arpl
mov
xchg
cwtl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
pop
push
or
pop
daa
sahf
dec
nop
xchg
dec
cltd
shr
sub
pop
or
jb
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
outsb
in
push
fisubrl
mov
daa
cltd
add
outsb
and
and
es
mov
icebp
