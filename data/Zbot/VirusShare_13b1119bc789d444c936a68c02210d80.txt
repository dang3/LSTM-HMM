push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
pushl
shlb
pop
add
call
add
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
pop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
incl
fisubl
add
mov
add
or
add
out
add
adc
add
hlt
and
add
add
add
mov
add
insb
and
add
add
pushf
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
xchg
and
add
and
add
and
add
add
ret
add
add
test
add
repnz
add
add
jbe
add
add
add
or
add
and
add
and
add
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
and
add
and
add
and
add
add
hlt
and
add
add
add
mov
add
insb
and
add
add
pushf
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
xchg
and
add
and
add
and
add
add
ret
add
add
test
add
repnz
add
add
jbe
add
add
add
or
add
and
add
and
add
add
add
add
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
imul
inc
add
repnz
imul
jb
je
arpl
add
add
je
jb
jbe
je
push
jb
imul
push
add
dec
jo
outsb
dec
jne
gs
add
out
inc
gs
imul
bound
gs
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
imul
outsb
je
outsl
insb
add
inc
gs
je
dec
popa
outsb
fs
add
dec
add
popa
insb
dec
outsl
arpl
ret
gs
jne
jb
outsb
je
jb
arpl
jae
xchg
add
je
jne
jb
outsb
je
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
gs
inc
imul
gs
jo
jb
add
rolb
dec
gs
jo
gs
jb
jns
dec
add
insb
outsb
inc
add
cmp
fs
imul
add
cmpsb
add
je
gs
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
push
add
addr16
arpl
jo
inc
imul
jb
addr16
imul
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
and
inc
js
jb
arpl
outsl
outsb
inc
add
sbb
insb
imul
outsl
outsb
add
inc
push
add
gs
insb
dec
gs
popa
addr16
outsl
js
add
mov
push
dec
inc
gs
gs
imul
push
push
bound
je
add
add
addr16
jne
jb
inc
imul
push
dec
inc
jb
add
push
dec
inc
dec
dec
xor
cs
insb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
loope
loop
xchg
xor
mov
jo
inc
cmpl
out
fsubs
or
out
jg
xchg
xor
xchg
push
scas
dec
lods
test
pop
loop
push
in
popf
push
mov
pop
cltd
movaps
dec
dec
cvtps2pd
addr16
mov
stc
cmp
sub
negb
mov
out
ljmp
add
adc
fwait
add
sub
adc
dec
xchg
or
out
adc
popf
push
xor
sarl
cmc
mov
inc
or
fisubrs
mov
leave
sub
into
lods
sbb
pop
sbb
push
into
jbe
mov
xchg
into
sub
leave
fldl
mov
ljmp
das
pop
fs
mov
and
pop
test
jecxz
pop
mov
bound
cld
mov
divb
xor
mov
orb
mov
int
mov
push
dec
inc
mov
stos
add
sbb
enter
imulb
loope
xchg
lods
dec
aad
fsub
lcall
adc
pop
je
dec
aaa
cmp
mov
mov
nop
adc
gs
push
mov
mov
xchg
jae
out
data16
pop
jmp
ljmp
addb
sarl
hlt
insl
push
jno
sarl
add
cmpsl
add
and
fcomps
xchg
xor
lods
mov
bound
or
adc
or
cli
xor
mov
mov
lods
cs
mov
std
je
jmp
shll
add
jne
add
test
mov
aad
cmp
in
into
mov
int
cltd
out
inc
cmc
xor
mov
push
test
mov
inc
lea
jmp
adc
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
jl
stos
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
lret
lret
lret
into
rcl
in
rcl
shl
rcl
shl
int
int3
hlt
leave
enter
leave
out
mov
in
mov
mov
stos
lods
stos
lea
cltd
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
xlat
xlat
std
fcom
xlat
xlat
xlat
aad
dec
ror
dec
into
into
aam
rcl
sar
ret
std
mov
mov
scas
iret
movsl
mov
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
sbb
mov
jnp
mov
sar
leave
lret
iret
ror
aad
fcom
fdivr
xlat
xlat
fdivr
dec
int3
int
into
into
int3
call
aam
dec
int
inc
rol
mov
mov
scas
std
cmpsl
cmpsl
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
push
add
or
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int
call
rcl
call
xlat
xlat
fcom
xlat
call
aam
dec
into
int
leave
lret
lret
int
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
imul
imul
pop
pop
pop
fs
aas
cmp
das
push
prefetch
sbb
cmp
aaa
cmp
cmp
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
leave
dec
rcl
call
aad
call
aad
dec
rcl
dec
enter
mov
ret
mov
mov
ljmp
movsl
movsl
sahf
sahf
popf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jge
jle
jge
jo
jno
arpl
mov
cmp
cmp
pop
pop
pop
stos
jo
outsb
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
dec
lret
lret
dec
leave
inc
mov
mov
scas
scas
scas
jmp
lcall
xchg
xchg
cwtl
cwtl
cwtl
cltd
cltd
cltd
in
addl
push
push
or
add
add
add
add
add
add
add
add
add
add
add
jo
jo
pop
pop
pop
or
pusha
nop
mov
incb
jp
idivb
jmp
outsl
jo
data16
fdivs
jne
jge
jge
js
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
nop
incl
addl
xchg
xchg
xchg
lahf
sahf
sahf
sti
mov
xchg
xchg
mov
js
js
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
mov
jle
jo
jo
jne
jae
jg
jge
addb
xchg
data16
cmp
and
jle
cmp
movsb
mov
test
sti
lods
lods
lods
lods
stos
stos
test
test
movsl
mov
cltd
xchg
xchg
xchg
decl
jg
jns
js
jl
jnp
mov
xchg
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
mov
pop
pop
push
push
rdmsr
inc
inc
inc
dec
imul
test
xchg
leave
fwait
cltd
lcall
fwait
lcall
mov
incl
mov
lcall
test
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
cmpsl
scas
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
popf
sahf
pushf
std
mov
mov
xchg
in
xchg
xchg
in
test
jne
prefetchw
add
inc
or
or
sub
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
nop
call
mov
cmpsl
ljmp
test
scas
mov
xchg
test
roll
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
xchg
lcall
mov
decl
nop
xchg
xchg
xchg
sahf
popf
sahf
movsb
movsb
movsl
test
movsl
mov
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
bound
jo
jae
jl
jle
test
mov
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
js
mov
movsb
mov
mov
lods
lods
mov
mov
add
mov
add
pop
adc
mov
jmp
mov
xchg
xchg
xchg
call
xchg
xchg
call
cltd
fwait
fwait
popf
sahf
lahf
sahf
sahf
mov
mov
fwait
out
xchg
xchg
mov
xchg
aad
cwtl
cltd
in
xchg
cwtl
out
mov
nop
stc
xchg
xchg
std
xchg
jb
fwait
imul
ljmp
cmp
mov
jb
mov
insl
ljmp
adc
stos
or
or
mov
jle
mov
mov
stos
pushf
movsl
movsl
movsb
and
add
add
mov
add
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
popf
pushf
lcall
popf
pushf
call
xchg
cwtl
decl
xchg
nop
call
xchg
cltd
cld
xchg
xchg
pushf
stc
lahf
fwait
sahf
stc
lahf
xchg
popf
cld
sahf
xchg
xchg
insb
mov
xchg
pop
jle
xchg
dec
jns
cltd
cmp
imul
push
imul
mov
adc
stos
adc
lods
adc
lods
adc
scas
adc
mov
push
mov
imul
mov
fwait
scas
mov
scas
scas
scas
movsl
movsl
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
popf
pushf
jmp
mov
mov
call
xchg
decl
addl
xchg
js
cltd
jo
cltd
bound
call
sub
decl
adc
xchg
or
xchg
add
call
add
lahf
pop
pop
jmp
sbb
pushl
pop
outsl
pushl
push
jae
mov
and
mov
inc
test
ret
xchg
lods
mov
lods
lods
mov
sahf
lahf
lahf
add
add
add
add
mov
scas
add
pop
adc
lods
mov
mov
cwtl
sahf
lcall
movsb
ljmp
test
ljmp
cmpsl
cmpsl
lcall
mov
mov
mov
decl
sub
mov
pop
incl
add
push
incl
add
popl
push
call
add
lahf
add
test
pusha
pushl
daa
ja
mov
sub
mov
sub
les
jg
cs
leave
lea
cld
mov
mov
mov
mov
movsb
add
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
ljmp
stos
lods
pushl
lods
scas
jmp
jo
incl
push
pop
incl
or
add
addl
incl
push
incl
add
popl
push
call
add
sahf
add
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
sarb
xchg
sarb
call
cmp
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
test
mov
mov
mov
test
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
es
mov
push
decl
adc
mov
push
incl
add
decl
add
xchg
add
xchg
add
sahf
add
mov
add
lods
add
sbb
xchg
leave
inc
mov
int
mov
roll
call
dec
mov
xlat
dec
xchg
fmuls
fimull
fisttpl
ficoml
call
test
std
mov
mov
movsb
mov
lahf
or
add
add
add
add
dec
dec
adc
jl
movsb
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
popa
call
adc
decl
push
decl
add
xchg
add
pushf
add
add
cmpsl
add
stos
add
mov
fs
mov
dec
mov
aad
xchg
fcoms
ficoml
fcoml
ficomps
ficoms
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
mov
add
inc
inc
adc
ja
lahf
cltd
lahf
jmp
lahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
mov
call
and
call
and
xchg
sbb
xchg
or
nop
add
xchg
add
cltd
add
mov
add
lods
add
mov
fs
mov
xor
ficompl
jmp
bound
jmp
fs
jecxz
cmpsl
jmp
addr16
call
cmpsw
ljmp
dec
mov
mov
mov
lahf
sahf
add
inc
aas
adc
je
cltd
xchg
cwtl
call
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
fwait
outsl
lcall
daa
push
cwtl
push
callw
add
fwait
add
mov
add
stos
add
mov
pushl
adc
rolb
jmp
outsb
lods
jmp
jo
jmp
jno
call
jae
in
je
out
je
in
jbe
in
je
jmp
mov
mov
cmpsb
test
mov
lahf
mov
add
add
add
jg
cmp
adc
outsb
js
mov
popf
lcall
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
cmp
mov
sbb
pop
call
add
mov
add
mov
arpl
mov
gs
mov
sbb
fsts
jmp
ja
jmp
jle
in
xorb
repnz
xrelease
push
cmpb
aam
mov
test
daa
mov
lahf
lahf
add
add
add
pusha
add
xor
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
rol
pushl
insb
mov
cltd
cmp
inc
jge
mov
aaa
jbe
fwait
sbb
xchg
add
popf
add
mov
add
lods
add
add
mov
add
iret
and
movsl
jmp
mov
push
pop
push
nop
ret
pop
push
xchg
push
xchg
stc
xchg
stc
mov
out
pop
fidivl
ret
clc
stos
stos
stos
mov
popf
popf
xor
sahf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
jge
lcall
cmp
dec
test
mov
adc
lcall
jmp
add
mov
arpl
mov
add
movl
call
xchg
cltd
enter
fwait
lcall
clc
popf
lret
popf
int
cli
sahf
int
sti
lcall
fbstp
cli
mov
mov
mov
xchg
add
add
add
aaa
aaa
add
das
cs
cmp
dec
jecxz
pusha
decl
mov
mov
mov
sar
ret
ret
enter
mov
lahf
lcall
dec
xchg
scas
dec
xchg
movsl
sub
lcall
jmp
add
mov
arpl
mov
add
leave
add
or
filds
out
mov
push
movsl
into
push
cmpsb
int3
push
test
sti
test
iret
cld
test
cld
stos
sar
std
test
sar
cmc
sahf
mov
dec
enter
mov
into
lahf
sahf
sahf
dec
xchg
xchg
xchg
add
fwait
lcall
xor
add
sub
or
inc
bound
pop
xlat
jae
jb
mov
rol
rol
mov
ret
ret
inc
ret
ret
inc
dec
enter
rol
mov
cmpsb
jmp
push
mov
lods
dec
test
sahf
sbb
pop
jmp
add
mov
mov
add
int
outsb
call
add
loopne
jnp
in
pop
cmpsb
push
lahf
lret
cld
scas
sar
cld
mov
cld
mov
sti
scas
sar
std
mov
mov
std
mov
std
mov
pushl
sar
mull
call
lret
mov
mov
lahf
mov
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
aad
fsubr
aam
not
rcl
std
lret
dec
lret
lret
leave
lret
dec
lret
lret
leave
leave
mov
scas
jmp
push
mov
lods
cmp
arpl
mov
add
mov
mov
add
iret
add
xlat
add
filds
jne
call
jno
cli
scas
sar
cld
mov
fcos
cld
mov
fcos
mov
xlat
mov
xlat
mov
xlat
clc
mov
call
leave
int3
mov
mov
xchg
or
add
add
xor
add
add
pop
or
mov
pop
out
out
jecxz
out
loope
jecxz
fucom
fcmovnu
xlat
fcmovnu
cli
xlat
fdivr
int3
ror
mov
push
test
test
add
jmp
add
mov
add
lret
add
aad
jae
faddl
ja
in
js
in
xor
cli
mov
inc
std
std
std
std
leave
fdivrp
std
dec
dec
dec
cld
mov
enter
iret
mov
mov
xchg
adc
add
add
incb
incl
incl
repz
or
out
in
pop
in
out
in
sub
out
in
dec
ljmp
xchg
out
out
in
out
fcmovnu
fucomi
ret
stc
lods
jno
cmpsb
cmp
movsb
adc
jmp
pusha
pushl
imul
int
outsl
fadds
jb
filds
jbe
call
inc
popf
cli
mov
loop
std
lret
dec
in
dec
jecxz
dec
jecxz
dec
jecxz
dec
loopne
shl
shl
std
shl
call
in
cli
fcos
in
mov
inc
ret
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
cltd
cltd
add
incb
std
add
clc
testb
hlt
lock
hlt
repnz
out
lock
out
repnz
cmp
in
out
pop
loop
mov
xchg
sti
lahf
and
lcall
add
lods
add
mov
fs
add
movl
jno
fildl
jbe
jecxz
jp
in
push
pop
stos
cld
mov
cld
shl
cld
shl
std
shr
std
shr
call
in
std
aam
call
jmp
fldl2e
fldl2e
std
shl
push
ret
jecxz
lret
lret
leave
repz
test
xchg
xchg
xchg
and
xchg
cwtl
add
std
cli
add
clc
add
sti
cli
add
div
or
aam
sarb
negb
add
add
scas
add
mov
add
leave
add
add
faddl
jbe
out
js
in
sbb
cli
ret
cld
xlat
jmp
std
fucomi
fldl2t
std
fucomi
fucomp
fsubr
fucomi
std
fsubrp
std
fsubrp
fucomip
cld
shl
push
ret
out
rcl
sar
stos
stos
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
mov
cltd
repnz
jmp
add
mov
add
int3
add
aad
jno
fiadds
jae
call
sub
std
shr
loopne
fucomp
fldpi
fldpi
xlat
call
shl
cli
shl
sti
iret
loope
stc
int
clc
int
push
rcl
in
mov
call
fcomp
sti
mov
mov
fwait
cltd
lcall
cltd
fwait
add
fcom
add
mov
subb
push
lahf
add
stos
add
mov
mov
add
roll
outsb
call
add
loop
js
ljmp
cli
xchg
enter
loopne
cli
lret
sti
stc
mov
aad
repz
sar
icebp
mov
int3
jmp
mov
iret
std
ljmp
imul
fsub
cmc
fsubp
fsubrp
mov
mov
xchg
add
add
add
int
add
sarb
lahf
xor
pusha
ljmp
add
mov
add
dec
push
jno
rorb
jmp
sbb
ljmp
call
scas
leave
std
loope
ret
cld
fildll
neg
mov
leave
ljmp
iret
rcl
shl
aad
call
in
test
out
lock
ljmp
push
lods
lods
stos
adc
test
test
lahf
mov
rolb
ret
roll
ret
ret
pop
mov
stos
aam
dec
cmp
sbb
test
push
scas
and
mov
js
mov
inc
xchg
ret
push
mov
leave
gs
test
mov
shll
rcl
mov
int
ror
int3
mov
int
mov
xlat
aam
jg
fcmovnu
jb
fsubp
gs
in
out
jmp
xor
div
mulb
icebp
icebp
icebp
sbb
fstp
or
mov
int3
add
add
add
mov
mov
les
imul
sbbb
mov
cmpsl
sarb
stos
mov
ret
mov
cmpsl
leave
mov
mov
enter
int3
iret
addr16
rcl
push
rcl
rorl
xlat
aad
rcl
aam
aam
fsubs
fcomp
ficompl
fcmovnu
ficoms
fsubp
loop
jecxz
out
jmp
add
cld
testl
std
add
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
mov
daa
lret
ror
and
aad
sbb
aam
adc
rorb
rcl
aam
aam
xlat
add
fstp
add
add
in
add
in
ljmp
std
incb
mov
mov
add
ret
ret
lds
rol
sub
mov
mov
push
rol
or
mov
add
into
lret
aad
add
fcom
add
add
add
aad
add
xlat
loope
aad
flds
fsubp
loopne
fstp
loopne
jecxz
call
add
std
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
mov
mov
mov
ja
stos
stos
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
iret
iret
jmp
rcl
cmc
aam
sar
ror
into
cli
int
lret
stc
int3
int3
int3
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpb
aas
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
into
ror
xlat
call
xlat
call
rcl
dec
int
dec
lret
int3
inc
mov
mov
lods
lods
stos
icebp
cltd
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
jae
data16
inc
dec
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
ret
int3
lret
lret
rcl
call
rcl
dec
lret
inc
mov
mov
test
test
xchg
xchg
xchg
jmp
outsl
outsl
xchg
adc
add
xor
add
add
add
add
addb
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
outsl
outsl
jno
scas
scas
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
add
add
add
add
add
pop
fwait
cltd
lcall
xchg
lcall
addb
jl
jge
js
jns
jns
jp
jns
jp
jb
jae
push
push
push
cmp
aaa
popf
popf
sahf
mov
scas
scas
rep
scas
scas
sti
lods
scas
scas
std
test
pushf
pushf
call
test
call
mov
scas
jmp
scas
scas
leave
movsb
movsl
movsl
cltd
je
jae
adc
adc
add
add
add
add
outsl
insl
outsb
pop
stos
movsb
stos
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cltd
lcall
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
scas
mov
mov
mov
movsl
mov
jg
pop
pusha
popa
or
scas
mov
cmpsb
sahf
mov
decl
nop
call
lahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
insb
insl
outsl
xchg
subl
mov
std
nop
mov
ljmp
sbbb
mov
push
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
pushf
sahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
lea
xchg
jne
notb
jg
popf
dec
jp
movsb
inc
jp
scas
aaa
jbe
scas
sub
pop
outsl
ljmp
sbb
mov
mov
mov
scas
scas
jle
movsl
mov
add
add
add
popa
or
mov
in
movsb
cmpsl
lcall
lahf
sahf
jmp
mov
cwtl
decl
addl
cld
xchg
pusha
cmp
dec
js
xchg
cmp
xchg
daa
push
call
punpckldq
cmpsl
adc
insl
pushl
sbb
mov
and
mov
test
lods
xchg
lahf
lahf
sahf
adc
add
add
pop
pop
popa
or
mov
stos
mov
lahf
ljmp
test
test
decl
cmp
mov
decl
adc
test
pop
decl
add
call
add
cmpsb
or
jae
mov
das
jl
ret
das
jg
xor
leave
xor
dec
pop
xchg
inc
test
mov
cmpsl
test
add
add
add
popa
pusha
pop
or
movsl
test
ljmp
scas
scas
pushl
mov
jmp
aas
jb
mov
pop
decl
or
add
decl
add
xchg
add
mov
add
mov
outsb
inc
cmp
rolb
aam
nop
call
inc
xchg
fimull
call
popa
sahf
inc
cmpsl
mov
mov
mov
mov
std
incl
add
add
pusha
pusha
pop
or
sahf
mov
ljmp
mov
mov
mov
mov
mov
jl
mov
call
push
pop
decl
add
xchg
add
lahf
add
cmpsb
add
scas
add
jbe
rorl
fcoms
fcompl
jmp
pop
lahf
jmp
pop
mov
jmp
insl
cmpsl
dec
test
cld
mov
mov
cmpsl
lods
movsl
xor
jg
add
add
dec
dec
dec
pop
jge
jl
fwait
cwtl
cltd
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
imul
and
xchg
adc
add
sahf
add
add
scas
add
or
int3
xor
loop
test
ljmp
in
jno
jmp
jns
call
test
mov
test
test
add
add
add
dec
pop
insl
insl
push
mov
xchg
ljmp
mov
mov
mov
jne
lcall
jne
pushf
sub
xchg
or
pushf
add
mov
add
mov
gs
or
xchg
jmp
jns
ljmp
out
xchg
push
mov
fisubrl
mov
push
fwait
cltd
cltd
add
sub
sub
push
push
dec
pop
addr16
loopne
mov
mov
sarb
mov
xchg
ljmp
sub
cltd
push
pop
jmp
add
mov
fs
mov
adc
mov
push
xchg
push
cltd
push
cwtl
push
cltd
leave
stc
pushf
lret
cwtl
stos
mov
stos
popa
lahf
lahf
mov
add
xor
pop
pop
pop
pop
fisttpl
mov
mov
ret
mov
cmpsl
jmp
dec
cmp
pop
imul
add
add
mov
fs
mov
add
and
push
mov
into
stc
test
cli
stos
sar
std
lods
iret
cld
lods
sar
cli
test
call
rol
test
sahf
sahf
or
add
add
dec
push
dec
aaa
je
je
stos
stos
test
out
int
cmc
lret
int3
lret
lret
lret
enter
movsb
mov
stos
popa
mov
stos
inc
jg
mov
add
mov
arpl
ret
dec
add
fildl
clc
xchg
mov
mov
fcos
std
mov
mov
sar
ljmp
repz
scas
lods
mov
add
add
add
add
pop
or
aam
dec
loopne
jecxz
fistps
fcmovu
out
mov
gs
test
jae
movsl
or
scas
add
mov
add
add
loop
jl
lock
mov
cld
inc
inc
fdivrp
dec
loopne
dec
loope
std
fdivr
out
mov
lret
mov
xchg
sahf
pushf
pushf
sbb
add
add
incl
std
std
add
jmp
out
sbb
jmp
xor
loope
loop
les
mov
mov
add
mov
arpl
roll
dec
add
faddl
jbe
ljmp
std
ret
fdivrp
sti
shl
call
out
shl
shl
call
out
std
xlat
jmp
push
enter
lret
sar
mov
mov
mov
add
add
std
add
incb
cld
std
pop
aam
push
mov
pop
xchg
sahf
or
test
pop
pushl
add
roll
jno
loopne
jne
out
and
std
shl
fsubr
fucompp
std
fsub
cld
fsubr
sti
fsub
std
sti
aam
push
fdivr
loopne
sti
mov
lahf
lahf
das
add
add
into
into
int
mov
bound
ljmp
add
enter
aad
jb
loop
js
out
das
nop
stc
lcall
clc
lret
fdivrp
test
hlt
ret
bnd
out
ret
in
sar
out
ljmp
ljmp
stos
das
std
incl
aam
aad
mov
jae
or
mov
imul
sbb
lret
and
xlat
cs
loopne
fwait
clc
loop
mov
out
jecxz
lret
mov
leave
fadd
lret
leave
sarb
in
ficompl
out
jmp
rorl
mov
add
stos
lods
lods
add
xchg
mov
ljmp
xchg
fidivrl
jle
rol
stos
mov
lahf
mov
shll
enter
int3
insl
aad
int
aam
rorl
fcom
cmp
das
in
fisubs
in
lock
in
in
or
std
incb
std
std
add
mov
outsb
mov
lods
jns
mov
mov
mov
mov
shrb
leave
and
rcl
pop
mov
rcl
or
or
int
add
std
incb
incl
lcall
shufps
or
int3
into
int
stos
stos
lods
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
rol
mov
xchg
leave
leave
mov
ret
ret
sarl
scas
mov
lods
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
std
rcl
sar
into
int
std
stc
mov
mov
test
cmpsl
roll
pop
add
add
add
add
add
add
add
add
jb
jno
pushw
inc
inc
dec
das
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
aam
dec
int
dec
enter
mov
jmp
mov
push
add
add
add
add
jae
jne
test
aad
jo
ret
arpl
insl
outsb
outsb
jb
bound
pusha
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jno
daa
and
add
add
add
je
jb
fwait
xchg
fwait
mov
test
mov
xchg
or
test
push
push
push
inc
mov
popf
into
mov
lahf
mov
decb
mov
fwait
pushf
pushf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
popf
pushf
pushf
cmc
cltd
cwtl
cwtl
in
test
push
imul
jle
mov
xchg
notl
mov
pushl
imul
call
stos
stos
lods
add
add
add
mov
scas
cmpsb
lods
cld
xchg
xchg
xchg
call
cltd
lcall
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
arpl
std
lcall
ljmp
and
mov
insb
pushl
pushf
scas
lock
mov
imul
int
add
add
xchg
pop
lods
movsb
stos
test
lahf
sahf
popf
jmp
mov
xchg
decl
ja
popl
decb
sbb
call
or
mov
sbb
jae
mov
sub
ret
inc
xchg
rcrl
subl
jne
push
movsb
pushf
lahf
test
cmpsl
cmpsb
cmpsl
ljmp
mov
lcall
sub
adc
xchg
push
decl
add
xchg
add
mov
adc
shlb
int3
aas
mov
rolb
call
inc
mov
aad
xchg
dec
lcall
movsb
movsb
mov
add
imul
movsl
mov
scas
pushl
mov
mov
call
sbb
mov
push
call
add
lods
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsl
call
fwait
mov
mov
cmpsl
cmpsb
pop
add
add
arpl
adc
pushf
fwait
fwait
cld
mov
scas
mov
mov
scas
lcall
xor
cwtl
and
xchg
or
sahf
add
add
mov
dec
xor
jmp
jp
out
jl
push
jg
fstps
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
fs
cmpsb
inc
jl
mov
add
pop
pushl
or
fmull
in
mov
push
xchg
push
xchg
enter
jmp
movsl
inc
mov
cmpsb
sub
inc
aas
inc
adc
push
xchg
mov
mov
inc
sarl
test
pop
imul
mov
arpl
ret
call
adc
in
insb
lods
push
cmpsb
int
clc
lods
sar
cli
lods
sar
cld
lods
sar
scas
iret
in
mov
inc
mov
movsl
ds
incb
xor
jno
scas
mov
mov
aad
mov
aad
fnop
aam
out
lret
leave
leave
cli
mov
mov
jmp
add
add
aad
jno
out
test
stc
nop
ret
mov
cld
rcr
inc
fdivr
std
ret
fcos
icebp
mov
shl
test
dec
jg
addb
add
add
in
in
or
out
jmp
outsb
fisubl
mov
add
mov
add
faddl
jbe
out
aaa
xchg
sti
mov
dec
in
std
shl
shl
std
shl
aad
push
leave
fdivr
rol
int3
in
scas
scas
lods
popa
jg
addl
add
add
incl
std
incl
lret
int3
shrl
mov
add
mov
add
loop
jns
cmc
push
cmpsb
std
loopne
out
aam
aad
cld
aam
cli
aam
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
push
fs
mov
or
fistps
cmp
imul
mov
iret
bnd
ret
shl
in
rcl
jmp
fcmovnu
scas
ret
vsqrtps
add
add
rol
mov
stos
xchg
and
push
mov
shlb
lret
js
mov
xlat
mov
int3
adc
into
outsl
fmul
into
pop
aad
in
loopne
out
out
in
in
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
int3
sbb
bswap
into
int
aad
push
std
incl
jg
jg
std
incb
stos
std
incl
rol
add
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
adc
xchg
icebp
or
mov
std
pop
mov
dec
lcall
sub
dec
stos
sbb
sti
loop
ds
pop
and
pop
inc
cmp
hlt
lret
nop
cltd
call
mov
cmp
int3
mov
jbe
mov
mov
pop
hlt
cmp
adc
cmpsl
jo
mov
sbb
mov
dec
loop
add
dec
add
push
pop
jo
lds
sbb
dec
sub
jae
leave
cmpsb
add
cltd
movsl
sub
enter
addr16
mov
mov
mov
insl
aad
dec
xchg
adc
lcall
sarb
inc
vmovhps
add
dec
cmp
popf
xlat
mov
outsl
seto
rorl
xor
ljmp
push
std
popf
jge
sub
push
ret
lea
and
push
insl
int3
pop
je
lea
int3
adc
mov
mov
std
int3
lods
aad
cli
fmul
clc
lds
dec
lcall
jl
fisubrs
adc
push
jno
lret
pushf
ret
add
daa
lods
adc
mov
addr16
sbb
cmpsb
and
stos
push
test
sub
jp
cld
iret
mov
mov
add
jle
loope
mov
call
push
divb
imul
sub
mov
fwait
daa
mov
test
jp
sarb
mov
imul
hlt
pop
adc
xor
adc
ljmp
std
mov
lret
movsl
add
push
mov
decl
lea
pop
push
shlb
push
cs
fdivl
lret
lods
sub
jnp
mov
imull
loop
sbb
cmp
cltd
push
sub
jge
pop
dec
or
pop
std
andb
cwtl
fisttpl
push
lods
sbb
shrl
jne
cmpsl
inc
pop
dec
mov
jae
mov
jmp
dec
mov
mov
test
insl
jmp
cltd
leave
mov
or
adc
xor
mov
lahf
ljmp
xor
fdivrs
push
out
insb
gs
lods
sub
clc
dec
fdivs
push
fst
push
test
jmp
or
adc
les
int3
mov
inc
jmp
mov
cwtl
icebp
repnz
mov
or
add
cmp
jnp
and
ror
scas
sub
or
jecxz
mov
mov
cmp
cmpsb
cmp
nop
lea
adc
mov
cli
pushl
idivb
pop
shl
inc
cmp
push
jne
in
mov
add
in
clc
xchg
repnz
pop
out
mov
inc
mov
out
push
inc
mov
popf
std
push
fcmovnbe
jmp
repz
mov
in
sti
jle
fdivrp
sub
std
inc
pop
xchg
xor
addl
gs
aad
ret
push
jno
jg
nop
outsb
inc
jne
cs
mov
imul
fmull
scas
add
addr16
pop
adc
or
roll
into
cmp
dec
push
sbb
je
mov
mov
test
add
arpl
fmull
push
incl
fildll
mov
outsb
xchg
rcll
cmpsb
dec
mov
push
repnz
push
outsl
or
adc
sbb
pop
and
sbb
or
call
jge
jle
pop
cwtl
ret
lock
mov
jo
push
mov
mov
cmp
ds
sub
pop
dec
pusha
and
stos
andl
fisubl
and
lcall
out
cmp
sbb
sbb
push
jmp
std
sbb
mov
lea
cmpl
dec
or
out
sub
pusha
jmp
outsl
and
aaa
int3
cwtl
jne
mov
scas
mov
out
push
jl
addr16
je
popa
call
pop
shll
lcall
xchg
dec
add
negl
filds
gs
xchg
fmull
jl
adc
jmp
inc
sahf
inc
jnp
jmp
jg
mov
jp
imul
mov
xchg
frstor
loopne
pop
jecxz
testl
jae
lret
mov
rclb
popa
in
jl
jecxz
cwtl
leave
sub
cmp
stc
mov
push
mov
and
xor
mov
inc
pushf
adc
mov
push
loopne
dec
xlat
adc
faddl
mov
push
push
ss
jnp
bound
pusha
and
sub
movsl
cld
mov
or
xchg
gs
in
inc
jbe
dec
aam
xchg
int
mov
sbbl
push
sar
or
cmp
push
in
mov
cmp
stos
fs
aam
test
addl
sti
mov
or
cmpsb
xchg
loope
test
cmpsb
iret
cmp
mov
movsl
pop
add
outsb
je
popa
ret
cmpl
xor
add
xchg
add
mov
xchg
ret
jmp
xchg
add
xchg
jne
dec
adc
mov
xor
sahf
inc
xlat
push
sbb
into
jecxz
mov
negl
sbb
jmp
ds
aaa
cli
cli
jae
in
dec
rclb
clc
bound
movsb
pop
sub
rolb
ret
push
inc
add
lods
xchg
sub
mov
shrl
scas
mov
iret
movsb
fisttps
add
stc
aaa
lods
xlat
test
xchg
je
ljmp
mov
lds
loop
aas
adc
xchg
xchg
arpl
mov
mov
pop
fadds
ret
xor
push
dec
loope
dec
repz
push
test
sti
xchg
and
cmp
rol
sbb
sbb
frstor
popf
shll
sub
cmp
jecxz
and
hlt
pop
jo
and
or
insb
ss
lcall
bound
xchg
xchg
mov
in
insb
mov
aas
mov
ja
push
call
lret
push
xor
add
sbb
and
fcoms
leave
pusha
sub
pop
cmc
adc
out
jg
jl
addr16
rorl
and
push
inc
inc
fdivs
insl
popa
xchg
pop
test
hlt
mov
adc
outsl
sub
pop
nop
mov
in
jecxz
outsb
adc
ss
mov
mov
push
mov
stos
mov
enter
iret
imul
fistpll
mov
sub
cmpsl
out
xchg
mov
call
mov
push
pop
js
pop
mov
addr16
xchg
lods
inc
mov
rcl
pop
mov
rcl
cmc
mov
out
in
add
test
adcl
pop
nop
push
fld
jae
cli
hlt
adcb
push
mov
es
in
ss
cmc
test
cmp
push
inc
pop
in
or
or
mov
xchg
sub
jmp
add
or
adc
mov
arpl
inc
fdivr
test
mov
dec
sub
mov
ret
mov
sti
stos
push
mov
sbb
imul
cmp
sti
xchg
out
jb
push
movsb
bndldx
mull
iret
xchg
sbb
xchg
dec
mov
in
in
sbb
aaa
mov
xchg
sub
stos
mov
xchg
lahf
notl
and
xchg
rorb
adc
and
xor
pop
in
push
dec
test
insl
arpl
xchg
sub
push
popf
cmc
add
icebp
mov
stos
mov
sbb
repnz
cmp
jl
popf
iret
add
dec
loope
jmp
ljmp
in
adc
js
in
cmpl
loop
test
mov
and
mov
mov
into
gs
push
inc
fiadds
in
and
sahf
xor
jbe
mov
sbb
stc
xor
mov
sbb
jl
add
mov
outsb
sti
inc
or
inc
les
mov
mov
inc
aad
jb
sbb
or
inc
ud2
mov
mov
xchg
sub
scas
shlb
mov
mov
inc
and
mov
pop
fbstp
pop
out
push
and
mov
push
mov
lock
push
mov
nop
mov
cmp
pusha
test
mov
cmp
jbe
push
hlt
mov
in
xor
inc
pop
xlat
ret
pop
movd
outsl
stos
cltd
xor
nop
mov
add
dec
loopne
push
loopne
daa
ss
mov
dec
data16
cmp
dec
in
pop
adc
sti
insl
sbb
lret
jg
jle
outsb
sbb
add
cltd
xor
inc
fcoml
mov
add
push
cmp
pop
or
aam
jo
bound
inc
pop
orl
cld
inc
fsubl
push
rclb
push
out
ljmp
jns
ret
popa
scas
mov
iret
daa
mov
test
in
adc
inc
fimuls
sub
js
pop
rclb
jae
xor
xor
cld
mov
cmpb
leave
pusha
jl
shlb
sbb
sarl
out
lret
fcomp
ret
stc
aaa
into
ljmp
mov
jne
ljmp
xor
ljmp
sub
ds
sub
sub
sub
push
cld
aam
out
call
outsb
sbb
mov
adc
mov
sub
popf
ss
leave
fidivs
sti
push
ljmp
cltd
xor
lock
xor
jle
addb
arpl
popf
xor
xchg
push
call
and
pop
lock
sub
mov
dec
cmp
aas
mov
mov
pop
daa
mov
fs
enter
je
aas
sbb
mov
dec
in
stos
es
ret
cmp
inc
fstps
xor
mov
roll
iret
inc
hlt
addr16
in
stc
nop
xor
or
or
insl
add
sub
lret
bound
pop
mov
mov
or
lahf
ss
fs
push
clc
cmc
mov
shrb
or
xchg
rcrb
fidivl
jns
or
dec
adc
xor
mov
xor
cmp
dec
in
imul
pop
fidivrs
rep
jne
or
fs
jbe
pushf
xor
mov
andb
int3
arpl
fsubrl
and
iret
mov
pop
pusha
cwtl
mov
iret
cmpl
test
mov
mov
dec
cmp
fwait
push
int3
pop
scas
mov
fimuls
lea
iret
iret
lock
loop
testb
and
push
pop
xchg
sbb
sub
lcall
loop
xchg
pop
cmc
into
dec
jl
aas
arpl
pusha
and
cmp
arpl
pop
div
pop
nop
daa
inc
push
icebp
mov
test
in
ret
ja
outsl
dec
in
into
inc
xlat
mov
loopne
leave
sar
ds
repz
out
adc
jle
jns
xchg
or
in
push
cs
das
mov
shll
lods
rorl
insl
jge
jbe
xlat
adc
dec
clc
nop
daa
ljmp
jle
lahf
pop
lock
sahf
lock
push
mov
cld
jg
cmp
daa
ss
ss
fsubl
add
or
loopne
fbstp
mov
int
mov
jg
mov
pop
jne
pusha
mull
fnstenv
sarl
push
lret
test
dec
fucomp
adc
mov
das
out
and
mov
ret
pop
orb
push
inc
mov
or
test
aam
fmul
es
fcoml
int
sub
loopne
adc
je
jl
jmp
push
in
push
xchg
cltd
mov
push
jmp
cmpl
popf
jo
push
in
cmp
popf
xor
pop
sbb
dec
outsl
xor
mov
sbbb
int
push
add
stos
or
sbb
outsl
mov
push
shrb
int3
pop
sahf
mov
ficomps
push
sub
xchg
sub
fimull
js
add
or
add
lods
mov
movsb
cmp
cmp
shrl
mov
pusha
push
je
sub
inc
ficoms
mov
arpl
test
xchg
loopne
mov
lea
std
xchg
and
sbb
and
insb
push
mov
cmp
clc
pop
add
pop
pop
jp
sub
xchg
and
mov
loopne
and
xchg
mov
stos
sub
popa
clc
xor
sbb
ret
push
pop
sub
dec
mov
shl
outsl
adc
mov
dec
test
inc
mov
nop
cmpsl
push
in
sbb
and
cld
xchg
stos
sbb
insb
int3
lods
inc
mov
fistps
rcrb
fmull
aas
dec
loop
add
xchg
jne
dec
loope
xchg
and
inc
sub
mov
fistps
add
mov
mov
arpl
push
sahf
mov
jbe
jle
jbe
scas
mov
nop
test
jmp
cmp
sbb
pop
xchg
xor
push
jmp
push
mov
and
addr16
pop
jnp
mull
push
sbbb
mov
xchg
std
adc
stos
popl
mov
mov
das
inc
push
xor
push
lcall
imul
jg
or
insb
or
xorb
in
inc
mov
mov
mov
sub
xchg
xchg
sub
inc
scas
inc
cmp
mov
dec
xor
ret
pop
cld
out
xchg
orb
dec
or
pop
movsb
or
jp
mov
push
fwait
xchg
cs
movsl
mov
jnp
ja
fnstenv
xchg
jbe
cmpsl
inc
mov
mov
ffreep
pop
fstl
ret
loopne
jecxz
sbb
jbe
jg
cmp
mov
or
shrl
sub
mov
xor
in
ss
pushf
xor
outsl
push
jl
lods
inc
sahf
adc
mov
mov
pop
test
lret
aad
ret
pop
sub
dec
lea
cli
scas
inc
lds
inc
out
inc
shll
loop
push
stc
arpl
inc
lcall
dec
add
or
shr
xlat
xchg
test
es
pop
lock
imul
lock
mov
sbb
stos
aad
push
and
xchg
sub
cmp
xchg
lds
mov
sub
push
cmp
mov
push
popf
sub
push
jmp
sub
cs
loopne
fs
jl
and
ljmp
add
jns
adc
rolb
sbb
icebp
arpl
imul
mov
xchg
dec
in
jno
or
cmp
and
or
repnz
in
test
dec
loope
cmpb
lds
scas
sub
stos
inc
lea
lahf
push
scas
mov
loopne
es
xchg
fs
data16
jae
mov
xchg
adc
mov
xchg
sbb
fisubl
push
adc
bound
icebp
mov
push
or
outsl
push
lods
jmp
test
fidivl
into
int3
jle
shrl
jae
xor
jmp
movsl
xchg
fwait
repnz
push
in
xor
incl
xchg
add
jns
inc
fnstenv
imul
pop
xchg
jbe
ja
scas
mov
mov
adc
pusha
push
lahf
ret
xor
iret
bnd
insl
sbb
sbb
inc
ret
mov
push
lea
testb
inc
xlat
stos
lods
pop
mov
hlt
jmp
das
mov
and
or
icebp
xchg
add
in
jae
cmp
ljmp
xor
cmp
std
lahf
mov
pusha
shlb
movlps
mov
jecxz
sbb
push
es
fisubrl
outsl
mov
dec
shll
xor
jmp
add
mov
lret
movsl
loope
mov
scas
push
mov
stc
test
mov
jl
cmp
pop
or
popa
clc
push
xchg
mov
fdivl
imul
sti
lods
arpl
repnz
push
dec
adc
jg
pop
mov
cmp
scas
out
and
mov
adcl
insl
pop
lret
bound
xor
xchg
xchg
dec
jbe
insl
pop
mov
or
lds
popa
popa
add
mov
push
ja
test
jbe
cmp
jno
insb
jno
jo
call
push
mov
pop
pop
lods
push
popf
sbb
dec
adc
icebp
je
in
adcl
pop
scas
mov
ficoms
divps
xor
xchg
mov
lret
repz
adc
idivl
insb
add
lahf
sbb
xchg
sbb
xchg
cs
rcll
fldcw
loope
js
dec
fildll
lcall
outsl
sbb
add
in
test
sub
lods
xchg
std
push
loope
out
pop
scas
cmovb
imul
mov
and
inc
inc
xlat
ja
pusha
not
cwtl
sbbl
int3
jmp
push
int
mov
pop
out
fidivl
inc
rcrl
mov
pop
xchg
cld
xchg
pop
out
or
fimuls
aas
ss
test
push
call
notl
std
xchg
sbbl
dec
or
jnp
mov
add
sbb
cwtl
add
fsubrs
lahf
cld
xchg
adc
sbb
mov
and
push
jmp
stos
mov
xchg
or
sub
rcrb
jle
push
fists
cmp
test
lret
push
and
mov
dec
fbstp
dec
jbe
cmp
mov
imul
in
out
aad
movsl
cmp
mov
sti
sbb
cltd
mov
rcrl
jne
inc
sbb
mov
and
adc
cmp
inc
adc
jge
cmp
sbb
scas
mov
xchg
sub
push
inc
cmp
ss
shrb
add
push
call
int
mov
mov
imul
fsubs
test
insl
xchg
test
cld
mov
out
xchg
fidivs
jb
arpl
cmc
mov
jb
adc
sahf
xor
mov
push
push
pop
jge
dec
outsb
lret
testl
or
test
out
adc
push
xchg
mov
fwait
test
push
fidivrl
pop
xor
cmp
inc
mov
ret
enter
jge
mov
lds
fistps
adc
xchg
cli
xchg
repnz
mull
int3
sbb
lock
into
iret
cmp
jl
push
adc
xor
jnp
icebp
mov
pop
daa
mov
sub
insl
mov
push
mov
jbe
add
notb
dec
aaa
stos
inc
test
add
mov
inc
fisttpll
shlb
fidivl
mov
fldt
sub
pop
mov
or
jl
and
inc
shrl
mov
mov
mov
ret
loop
shrb
jecxz
mov
stc
or
push
mov
mov
push
std
sub
insb
js
rclb
nop
daa
daa
shrb
jp
int
cltd
fwait
cltd
xor
mov
jecxz
pop
and
add
dec
sbbl
jo
push
popa
cmc
mov
mov
push
mov
sbb
adc
mov
shll
rorl
cs
sbb
mov
dec
in
fsubrs
adc
addl
push
in
add
adc
loope
sbb
push
add
lret
pusha
testl
pop
cmc
push
das
sub
xchg
movsl
mov
les
fisubrs
leave
jp
push
mov
fwait
cs
dec
in
sub
leave
out
cmp
mov
cmp
mov
aaa
into
push
inc
fucomp
daa
sub
jp
xor
xchg
fwait
sub
sub
ret
pop
sbb
cmpsb
jnp
int
jns
aam
cmp
mov
ret
shr
jecxz
int
inc
xlat
repnz
shlb
adc
cmp
lock
push
cmpsb
test
xchg
sub
lahf
sbb
jl
shlb
leave
lcall
jmp
add
out
les
inc
testl
push
cld
rclb
jmp
jne
mov
das
jecxz
and
push
add
pop
and
pusha
push
jp
sbb
jae
xor
mov
mov
mov
xchg
or
sbb
jg
xchg
sub
mov
jns
and
scas
xchg
push
in
iret
std
xchg
loopne
adc
mov
ret
hlt
pop
add
inc
stos
and
cwtl
cld
sub
add
es
mov
test
jo
pop
fmul
out
jns
lea
sub
xchg
sub
cmp
js
dec
test
pop
enter
jl
mov
enter
xor
dec
divb
cmp
mov
add
inc
fistpl
mov
loopne
pop
mov
leave
pusha
dec
popa
outsb
add
jge
inc
fcmovnb
mov
jb
imul
sub
adc
cmpb
insl
cmp
xchg
push
pop
repz
inc
mov
aam
lret
pop
out
mov
fstpt
add
and
fidivl
dec
mov
jnp
mov
push
pop
and
popa
xchg
push
mov
nop
daa
or
rclb
insl
lea
pop
je
cmpsl
sarb
inc
ret
xlat
outsb
cmc
popa
lea
mov
xchg
cmpsl
add
mov
cmc
push
aas
lahf
push
and
inc
shrb
lahf
adc
jne
xor
and
dec
in
mov
shlb
lods
inc
jno
xchg
sub
inc
xlat
in
fdivrl
iret
iret
gs
xchg
lock
loopne
inc
add
cmp
mov
inc
cmp
mov
std
xorb
inc
movsb
push
or
movsb
sbb
mov
outsb
add
xchg
fnsave
sbb
mov
fimull
cmpsb
and
out
paddb
cwtl
clc
xor
repz
mov
iret
data16
sbb
cli
adc
and
bnd
add
adc
ja
pop
in
test
xchg
out
mov
sub
dec
and
add
lods
and
push
add
pop
test
lret
mov
xchg
jl
loope
adc
gs
ss
adc
test
dec
lcall
xchg
xchg
push
mov
xor
fwait
pop
scas
or
cwtl
insb
mov
mov
sbb
or
xchg
outsb
pop
scas
pop
xchg
cmp
or
pop
jmp
lahf
test
xchg
sbb
sbbb
cmp
mov
pushf
shlb
fisubrs
push
outsb
scas
loop
cs
mov
dec
iret
push
ret
xor
mov
mov
mov
insl
adc
pop
lds
addb
or
repnz
test
sbb
ffree
pop
fldenv
mov
daa
popf
loope
ds
stc
nop
es
loop
test
mov
aaa
or
xor
jge
inc
into
and
pop
lds
inc
popf
testb
stos
inc
add
add
sbb
xorl
iret
daa
push
mov
fimull
aaa
lea
jge
mov
shrl
iret
jae
pop
repz
or
rcll
sbb
bound
mov
push
xchg
inc
aam
dec
mov
out
jb
nop
xchg
outsb
cmp
mov
adc
out
popf
and
and
adc
cmp
jl
add
dec
inc
icebp
mov
out
xor
and
sbb
cmp
lods
jae
jne
jl
adc
scas
loope
cmp
jmp
mov
mov
sub
mov
imul
pushf
insb
orb
arpl
movaps
xchg
pusha
ja
cmp
syscall
movsb
imul
push
push
shrl
loopne
rorl
mov
mov
xchg
or
ja
jo
push
mov
and
pop
test
cmp
lds
or
insb
sub
cmp
in
sbb
jae
divb
mov
sub
lods
adc
cmpsb
scas
ljmp
mov
repz
lods
or
cmp
out
jno
sub
imul
inc
data16
xchg
data16
outsb
xchg
std
dec
jmp
or
icebp
cmp
aaa
into
mov
sub
mov
loope
scas
rorl
add
jle
sub
addr16
xchg
inc
repnz
jb
push
cwtl
xor
jmp
add
pop
leave
inc
fcomps
and
outsl
stos
push
mov
jge
data16
rdpmc
mov
rclb
cmp
adc
roll
pop
mov
repnz
jo
out
jns
enter
filds
leave
test
mov
cwtl
das
lcall
push
out
loope
jmp
or
inc
jge
mov
jnp
adc
inc
cwtl
sbb
jmp
mov
ss
xchg
test
inc
ss
cmp
mov
adc
int3
push
or
mov
add
addr16
lea
or
xchg
das
test
mov
mov
shll
and
cmpsl
and
inc
sbb
es
pop
call
test
or
out
xchg
xchg
int
add
sbb
test
sahf
loopne
or
das
mov
lea
jbe
popf
push
jle
nop
inc
stos
popaw
adc
inc
and
sub
jg
ds
mov
push
lods
aas
pushf
adc
sbb
shlb
push
lret
sub
jae
sub
mov
cmp
scas
mov
aas
filds
data16
or
test
sbb
sbb
shl
ficomps
insl
add
dec
xor
push
mov
xchg
jbe
enter
mov
outsl
jns
int3
and
sti
jl
aas
sahf
popf
and
mov
stc
nop
pop
int3
cmc
mov
and
fcoms
jle
popa
jno
xor
sbb
add
cmp
test
int
pushf
stc
inc
xchg
sub
and
inc
add
sub
xor
xchg
adc
lahf
inc
pop
xchg
sub
sub
jecxz
mov
enter
dec
fists
add
or
add
mov
xchg
inc
ss
adc
xchg
shr
mov
add
mov
lahf
andb
icebp
lret
das
mov
inc
sub
xchg
mov
jb
lea
imul
mov
dec
jp
xor
and
repz
lea
xor
es
daa
jecxz
jle
jmp
push
andb
push
or
iret
xchg
xchg
lods
je
lret
data16
mov
sub
aaa
ss
pop
je
push
or
sbbb
roll
fistl
mov
nop
in
push
out
out
and
jae
mov
out
mov
iret
sub
add
lret
stc
mov
stos
mov
mov
cmpsb
mov
imul
shll
ljmp
les
xor
int3
out
cli
pop
jmp
xchg
sub
stos
push
lahf
lret
pusha
xchg
inc
imul
popa
fidivs
data16
xchg
mov
lock
sbb
dec
fcmovne
mov
mov
and
and
adc
inc
aas
jno
cwtl
push
insb
and
push
data16
loope
adc
lret
cmp
jle
cwtl
add
iret
push
test
das
arpl
sbb
add
sbb
sub
iret
jp
daa
jb
pop
into
leave
arpl
jne
pushf
mov
loopne
cmpsl
adc
ss
rsm
out
push
sub
clc
and
je
pop
sub
mov
lods
ja
insb
inc
ret
ljmp
cmp
stc
nop
test
idiv
iret
xor
mov
dec
fnstenv
test
mov
fstps
shrb
cmp
mov
mov
jp
jmp
and
fimull
adc
push
rcrl
xor
je
lea
fdivl
xchg
out
jae
fldcw
in
mov
andb
mov
add
repz
jns
fnstenv
lcall
inc
movsl
inc
xlat
dec
add
mov
or
mov
push
jmp
repz
mov
icebp
xor
adc
jbe
repnz
shl
lods
lahf
mov
js
xchg
mov
push
push
add
loop
push
repnz
inc
into
fdivrl
test
out
xchg
subb
sub
jns
inc
fnstsw
stos
xchg
dec
cld
shrl
push
mov
dec
icebp
fbld
xchg
lret
rclb
dec
out
ljmp
test
xor
in
in
iret
adc
lods
push
add
test
or
jbe
sub
jl
shl
or
icebp
mov
cwtl
xor
push
mov
cmpsl
int
cs
shlb
pop
add
adc
cmc
int3
arpl
faddl
push
sub
inc
dec
insb
cmp
pop
adc
das
imul
pusha
jmp
andl
or
sbb
mov
and
sti
call
jmp
psubb
les
xor
adc
jecxz
iret
push
lcall
lcall
filds
shlb
pop
pop
jno
pop
clc
xorb
mov
je
sub
push
mov
xchg
leave
adc
les
inc
out
adc
add
movl
into
mov
jns
cmc
pop
ljmp
xchg
mov
stc
fs
or
cld
xchg
and
add
stos
mov
repz
shll
pop
jae
scas
inc
outsl
outsb
mov
sbb
jle
mov
std
jo
sbb
push
out
pop
jmp
mov
xchg
lea
daa
mov
sub
fs
xor
sub
and
xchg
mov
outsb
inc
jge
push
pop
mov
ss
push
cltd
and
mov
icebp
bound
movsb
iret
outsb
mov
mov
daa
sbb
jns
repnz
inc
in
mov
push
insb
outsl
outsl
fimuls
mov
jne
sbb
push
into
sub
in
mov
out
lds
sub
cmpb
mov
add
sti
xchg
shlb
sbb
dec
test
outsl
push
pop
clc
lea
mov
sub
xchg
call
into
into
xchg
xlat
mov
sbb
pop
in
push
adc
movsb
shll
add
fmuls
xchg
mov
dec
dec
sub
orl
sub
fbstp
sub
sub
addr16
push
dec
xchg
stos
cli
out
popa
pushf
mov
ret
cwtl
mov
mov
insl
scas
repz
outsb
lahf
aad
jmp
sbb
repz
pop
insb
add
rcrl
repz
aam
pop
sahf
pop
loope
out
dec
pop
lea
imul
add
loopne
stos
repz
lea
bound
cmp
stos
insb
addb
jo
adc
fucomi
or
lahf
adc
stos
or
mov
bound
bound
and
inc
ret
jmp
lock
lahf
shrb
jno
adc
dec
sbb
mov
jb
xchg
rcl
push
sub
cmpsl
ds
dec
incl
adc
pop
sahf
fdivs
xchg
insl
mov
gs
ds
pop
xchg
mov
test
adc
or
inc
outsb
sub
lahf
arpl
mov
jbe
mov
push
cpuid
pushf
xor
xor
sahf
sub
push
and
push
sahf
mov
in
ja
push
xor
pusha
jnp
adcb
push
adc
mov
leave
mov
sti
or
push
in
dec
gs
cmp
or
fwait
loope
int
fistl
movsl
cmp
jne
repnz
cmp
pop
pop
rclb
fistpll
cltd
repnz
mov
xchg
push
dec
leave
enter
lret
jl
mov
adc
jb
mov
leave
xchg
and
or
ljmp
loope
ret
es
sbb
inc
pusha
or
cmpsl
mov
pop
dec
out
test
aas
fdivrl
cmp
daa
mov
pop
lea
mov
gs
push
cld
add
sbb
ret
push
or
insb
int3
add
jle
insl
scas
inc
lahf
cmpsb
arpl
andb
mov
insb
add
sub
loopne
xlat
js
mov
fstpt
addr16
mov
mov
jmp
cmc
divl
stos
push
xor
out
movl
add
cltd
faddl
adc
fdivrs
pop
mov
push
ja
mov
jnp
dec
jno
push
popf
cmc
xchg
xchg
mov
mov
cmc
mov
scas
and
mov
loopne
jp
lock
and
into
xor
xchg
mov
or
xor
fs
jne
sub
and
cmp
pushf
in
sbb
push
mov
push
adc
cmc
inc
ljmp
and
push
fsubrl
repnz
sarb
gs
in
inc
push
outsl
les
xor
arpl
mov
inc
dec
lahf
jecxz
fsts
mov
mov
add
clc
cmpsl
dec
out
mov
loope
jle
orb
or
dec
aam
dec
out
ds
adc
out
push
fimuls
ret
dec
dec
mov
and
out
inc
mov
push
stos
inc
xchg
push
cs
popaw
and
rolb
mov
inc
paddsw
pop
mov
std
stc
mov
pop
jbe
sub
push
imul
clc
jg,pt
aam
inc
jae
mov
xchg
sbb
adc
cld
scas
jmp
inc
cli
stos
jecxz
rcrl
sti
icebp
fisubl
mov
loopne
inc
mov
fiaddl
mov
ret
jb
negb
ljmp
mov
into
fldcw
push
mov
dec
adc
loopne
ds
mov
lcall
dec
das
jne
and
dec
ficoml
mov
lret
add
jle
or
mov
enter
mov
jmp
jle
std
pop
repz
xchg
std
add
aaa
adc
mov
test
inc
pop
xor
and
inc
addr16
cwtl
outsl
jne
lods
test
jae
sti
or
mov
in
xchg
das
call
mov
jno
mov
cmp
dec
xchg
jge
fstp
outsl
test
cmpsb
cmp
cmpb
imul
call
lds
sbb
push
xchg
and
rcll
jno
adc
bound
mov
or
xor
sbb
push
adcb
fwait
loopne
sbb
push
lods
imull
mov
mov
and
adc
mov
push
lock
imull
sub
xchg
shlb
mov
fs
inc
mov
jnp
jge
lods
roll
dec
jmp
lahf
rorl
pop
pop
inc
arpl
sub
orl
xchg
xorl
adc
call
out
xlat
ret
stos
js
sbb
or
das
fldlg2
int
sarl
xchg
cmp
add
push
outsl
jnp
sahf
pop
sahf
aaa
mov
mov
int3
xchg
cmp
mov
and
xlat
ljmp
js
xlat
xlat
fstl
es
mov
mov
je
jge
jo
mov
fisubrs
loop
sbb
movsb
jae
dec
sub
repz
iret
xlat
xchg
aad
loope
dec
rolb
cmpsb
jne
dec
mov
imul
jb
pop
xchg
xchg
jl
pop
popf
pop
mov
in
test
add
or
xchg
fiaddl
cmpsl
imul
pushf
inc
jle
xor
adcl
test
scas
inc
das
cmpsl
int3
sub
push
mov
out
or
push
cmpsl
sub
test
pop
sbb
pop
aad
jnp
pop
mulb
sub
js
les
pushf
out
das
sbb
push
sub
fnsave
cmp
loope
mov
add
das
mov
jmp
pop
pop
std
jnp
and
xchg
mov
push
pop
inc
xor
pop
imul
push
push
fsubrs
pop
cmc
sti
xor
divb
addr16
mov
leave
enter
outsl
in
aad
popa
cmp
dec
mov
scas
mov
popf
push
xor
jge
dec
and
int
clc
inc
je
lret
xor
negl
cli
mov
inc
clc
stos
xor
mov
and
xor
lahf
cld
das
icebp
lcall
push
mov
orl
es
mov
aaa
pushf
and
sahf
mov
push
push
mov
fsubr
fwait
inc
add
rorb
xchg
push
or
out
stc
ret
clc
outsl
adcb
xor
mov
or
push
lods
xchg
addr16
or
leave
dec
in
aas
stos
dec
cmpsb
lret
iret
adc
cltd
sbb
push
fsubs
sub
mov
int3
jmp
inc
in
call
fnstenv
cmp
imul
dec
pop
sti
jnp
cmp
lret
mov
in
test
push
out
pop
or
sbb
and
movsl
inc
scas
out
stc
dec
lret
jne
mov
adc
ljmp
xor
rol
cmp
mov
subl
cmc
add
int3
out
shrl
mov
mov
jbe
pop
mov
dec
and
call
data16
add
jge
jle
or
xchg
ret
xor
pop
xor
inc
test
push
push
push
and
test
jb
add
int3
es
imul
jl
pop
subl
lock
sbb
and
add
andl
push
xor
jbe
jmp
fstps
inc
push
out
cwtl
adcb
test
ss
hlt
ret
mov
pop
dec
enter
aaa
fs
inc
lods
jecxz
rorb
jg
and
or
sub
inc
sub
push
ss
call
ds
add
add
lds
mov
xor
test
jmp
mov
scas
fcmovnb
lea
push
rorl
and
push
stos
scas
int3
dec
outsb
dec
lret
mov
and
mov
xchg
in
lds
pop
aad
mov
xchg
add
andl
out
cmp
lods
and
mov
out
pusha
sbb
add
into
repnz
shl
idivl
xor
ljmp
cli
clc
sub
inc
fnstsw
xchg
jbe
sahf
imul
mov
xchg
into
and
test
push
divb
push
sti
shll
mov
push
sbb
push
dec
movsb
dec
sbb
adc
inc
jae
arpl
xchg
dec
ret
pop
dec
nop
sub
clc
shr
xchg
sti
mov
les
xorl
ret
mov
push
dec
mov
adc
sbb
pop
movsl
xor
pusha
iret
sub
pop
mov
sarb
andb
mov
icebp
mov
imul
xchg
dec
mov
movsb
call
test
cmp
push
in
cmp
popf
inc
test
sbb
aas
loopne
fsubr
scas
xchg
xchg
xlat
outsb
push
pop
cmpsb
hlt
push
inc
arpl
out
inc
in
adc
push
cld
jne
movsb
enter
add
mov
movsl
scas
pop
jle
pop
mov
movsb
clc
xlat
lock
cmp
push
pop
sub
jbe
jge
mov
mov
xchg
mov
mov
pop
mov
inc
push
loopne
decb
fcoms
mov
jp
scas
lret
cli
add
fwait
clc
int
xchg
xchg
leave
je
ffreep
js
jmp
and
dec
jmp
sub
jp
outsb
shl
cmpl
sbb
out
testl
pop
iret
es
inc
jnp
lds
adc
adc
in
xor
shl
aad
and
push
or
dec
outsb
popf
xor
adc
xor
sti
push
shll
leave
stos
insl
shrl
mov
mov
outsb
add
jl
cmp
pop
or
cmp
cmp
xchg
sub
ret
adc
sbb
adc
mov
jmp
inc
fildl
add
or
out
lcall
out
ret
jae
ret
mov
adc
jp
sub
xor
jbe
xor
lcall
popa
in
cs
cmp
pusha
pop
mov
xlat
adc
fstps
xchg
stc
mov
push
jb
imul
xor
pop
add
out
sbb
jns
add
or
mov
xchg
and
lock
aaa
ljmp
push
inc
fmull
stos
inc
ds
orl
jle
hlt
lea
or
lret
out
int
adc
push
lret
loopne
std
mov
neg
mov
in
mul
stos
inc
mov
in
cmpsl
mov
stos
popf
xchg
pop
add
pop
jns
scas
inc
mov
ror
repz
shrl
adc
icebp
mov
or
lret
mov
sub
fidivrs
ds
loop
pop
gs
nop
nop
imul
jecxz
xchg
adc
movsl
cmp
dec
add
jns
ret
pop
negl
ret
pop
mov
clc
mov
inc
stc
mov
mov
loopne
out
sar
out
push
inc
inc
in
jno
fsubr
xchg
xlat
mov
or
sub
xchg
sub
mov
fmul
loope
mov
pusha
jmp
lea
mov
push
sbbl
addr16
pop
sub
sbb
xor
jno
xor
in
push
shlb
je
andl
fisttps
xorl
fisubl
testl
sub
dec
fnsave
insb
fnstsw
fisubs
int
inc
sti
pop
jle
and
insl
push
mov
mov
frstor
mov
adc
adc
test
ss
mov
fsts
sub
ss
test
out
xor
xor
out
out
xor
fldt
scas
cmp
sub
mov
jno
fsubs
pand
test
or
gs
sbb
pop
cmp
mov
adcl
fwait
and
jbe
dec
pop
sarb
addr16
dec
fstpt
sbb
in
clc
ljmp
cld
ret
into
les
das
fistl
es
mov
sbb
icebp
jle
add
xchg
out
and
fwait
cmpsl
xor
cmpb
jg
mov
fisttpll
lods
sub
cld
mov
push
push
jl
test
pop
sahf
ffree
inc
push
pop
pop
out
sbb
addr16
jns
mov
lock
mov
jbe
jbe
call
add
stos
mov
xor
jnp
imul
xor
add
test
cpuid
out
xchg
adc
sub
sbb
xchg
adc
es
sbb
pushf
shl
sbb
pop
mov
sbb
add
xor
pop
jmp
mov
mov
and
subb
xor
iret
pop
mov
daa
adc
mov
and
push
mov
inc
sarb
imul
pop
js
cmp
and
push
add
push
stos
inc
pop
lods
add
decb
pop
adc
fsubrs
and
sub
les
jbe
loopne
sbb
fyl2x
push
sbb
and
dec
ss
dec
lds
mov
les
mov
stos
addr16
inc
pusha
ret
mov
icebp
xchg
mov
and
cli
pusha
sub
xor
daa
lcall
adc
sub
imul
push
clc
mov
sbb
and
test
inc
jge
or
mov
cmp
aam
pop
movsl
cld
xchg
inc
push
movsl
sub
sub
lods
cld
or
mov
and
jecxz
jecxz
pop
fdivs
cwtl
pop
xlat
in
pop
sbbb
fsts
call
aam
push
rclb
add
xor
loopne
push
inc
sub
mov
inc
mov
dec
fldl
lods
and
jmp
int3
sbb
jp
mov
mov
push
jo
mov
jg
push
inc
cltd
push
inc
pop
idiv
aaa
inc
fadds
xor
popa
cli
pop
cmp
subl
mov
mov
fldenv
inc
inc
xchg
jne
fbld
inc
mov
fs
or
out
mov
mov
jno
std
xchg
subl
mov
or
movl
rorl
xchg
sbbl
nop
in
cmp
jnp
jge
pop
adc
lods
in
outsb
adc
add
iret
cmpsb
fisubrs
int
in
xchg
jo
adc
das
jo
lahf
xor
mov
mov
je
dec
out
add
js
scas
xchg
mull
or
aad
xor
bound
out
insb
addr16
sbb
lret
pop
and
mov
jmp
xchg
std
iret
fildl
pop
in
pop
push
rcll
xchg
sbb
add
mov
jne
mov
push
xor
lret
lret
mov
add
std
pop
loope
cmpsb
and
add
xchg
in
mov
jb
outsl
dec
jecxz
enter
mov
fimuls
cltd
stc
sbb
jge
and
adc
ret
jle
addb
daa
loop
inc
xchg
jnp
jmp
ja
cmp
dec
pop
test
insl
sub
cld
inc
mov
xor
int3
mov
ret
gs
imul
arpl
sti
popf
sbb
scas
dec
mov
lods
xchg
dec
cmc
out
xlat
rorl
xlat
cmp
clc
aas
repnz
dec
aad
stos
inc
cli
fldl2t
and
cwtl
inc
xor
out
out
gs
xchg
popa
cmc
inc
cmpsb
xor
inc
rorl
add
aam
fcmove
adc
dec
insl
call
cmpsl
enter
scas
mov
div
stos
xchg
pop
jne
sbbb
or
ljmp
xor
cs
test
repnz
je
das
call
push
xorb
fcoml
add
loope
mov
push
jnp
jge
and
pop
movsl
mov
neg
or
addl
dec
lods
imul
xlat
repz
call
jno
dec
mov
push
mov
mov
outsl
arpl
jne
clc
jge
mov
sti
rolb
rcrb
les
shlb
cmp
stos
inc
xor
push
enter
fsubrp
push
lods
mov
clc
scas
jbe
insb
xchg
sti
mov
mov
ret
aaa
into
shl
call
sbb
outsl
dec
lea
jge
xchg
push
je
jecxz
dec
aad
mov
out
rol
icebp
mov
mov
es
mov
push
negl
out
add
push
ljmp
jno
rorl
xchg
jnp
mov
lods
enter
pusha
jmp
xor
xor
push
jmp
pop
lock
push
dec
scas
dec
sarb
cli
sub
scas
lret
gs
test
bound
cmp
mov
shll
aaa
hlt
push
clc
jae
cli
xchg
and
stos
mov
into
xor
cmp
hlt
mov
fstpt
push
sbbb
stos
dec
movsb
mov
mov
hlt
repz
mov
xchg
adc
cmpsb
mov
inc
inc
add
je
or
popa
sbb
pop
sub
movsl
xchg
and
inc
call
lods
inc
or
ds
scas
fst
roll
and
fnstcw
in
fucom
xchg
sub
lea
movsl
icebp
popf
jl
jnp
scas
or
imul
stos
out
xor
roll
bound
adc
jmp
mov
leave
ss
push
in
iret
ret
cmp
or
pushf
hlt
pushf
xchg
test
adc
enter
imul
cmp
js
call
xchg
es
xchg
mov
inc
ja
scas
call
mov
push
movsl
sbb
lods
and
es
js
push
adc
pop
add
sbb
push
push
mov
fdivl
adc
lret
imul
lret
mov
mov
shrl
repnz
stos
and
dec
and
lcall
jge
in
mov
sbb
adc
lds
mov
mov
sbb
int
bound
add
add
das
sbb
rcrl
in
and
mov
cmp
adc
and
xor
arpl
sub
cltd
rcr
and
lea
xor
jne
iret
lods
mov
fbld
dec
lahf
mov
fmull
lods
xchg
and
sub
push
pop
sbb
or
lcall
ja
test
loop
nop
sub
test
icebp
scas
jb
out
lea
ret
scas
push
push
or
test
inc
or
dec
fucom
les
std
jle
and
mov
sarb
rcrl
jecxz
sbb
cmp
data16
leave
popa
bound
rcll
pushf
xor
sbb
ss
inc
gs
jnp
ljmp
sbb
enter
pop
sub
xor
mov
fbstp
jmp
cld
xchg
in
fwait
in
fs
push
ss
mov
notb
mov
test
imul
xor
lret
cmp
mov
dec
call
jecxz
inc
pop
rolb
movsb
shr
sbbl
adc
xor
sub
and
pop
mov
dec
and
jge
inc
bswap
pop
inc
fisttpl
sbb
mov
enter
push
add
ss
das
cmp
dec
bound
sahf
hlt
mov
sub
movsl
pop
subb
mov
stos
and
push
bound
sbb
inc
mov
add
cltd
arpl
push
sub
xchg
jp
movb
jne
loop
movsb
loop
mov
ret
push
mov
mov
fidivl
ret
pop
popf
rolb
and
test
inc
fidivrl
sbb
mov
call
dec
insb
cmpl
mov
jnp
call
out
mov
push
loope
mov
push
adc
adc
fwait
mov
push
xor
add
daa
pop
scas
pop
push
out
add
and
mov
push
rol
test
add
les
cwtl
mov
dec
mov
test
xor
adc
out
mov
adc
inc
daa
lret
xchg
mov
imul
mov
imul
pop
mov
addr16
shlb
xor
pop
mov
fsubr
cmc
in
and
jo
and
jne
xchg
mov
test
xor
xchg
hlt
push
leave
and
add
call
push
fcompl
or
add
jl
jno
cltd
mov
add
adc
push
shrb
mov
cli
aam
mov
push
out
loopne
pop
xlat
lea
test
lret
jbe
mov
jle
notl
and
test
push
addl
pop
call
and
sbb
fldt
lret
sahf
cmpl
mov
hlt
sbb
pop
jno
lea
in
xor
aam
ljmp
mov
sahf
adc
xorl
add
xchg
sub
dec
sub
into
test
scas
adc
mov
popa
clc
xor
mov
xchg
lock
pop
or
dec
std
cli
loopne
sahf
xchg
xchg
aad
std
cmp
push
lcall
jbe
das
repnz
or
adc
pop
inc
outsb
pop
mov
dec
in
hlt
mov
mov
and
mov
ljmp
dec
clc
cmpb
shlb
lods
cmc
push
imul
pop
jp
scas
call
into
xchg
pop
in
icebp
ficomps
das
jnp
add
inc
cmp
jae
pop
xor
arpl
mov
in
lods
ficoml
das
jns
pusha
inc
pop
loop
jge
test
dec
xor
nop
sbb
dec
out
xor
ljmp
lahf
jae
sbb
in
notb
sarb
push
fsubs
add
test
mov
pop
pop
insb
test
mov
ljmp
dec
fisubl
jg
idivb
rolb
mov
sub
insl
je
outsl
jecxz
cmpsl
cmp
mov
and
je
jo
sarl
es
or
mov
test
in
pushf
cli
inc
add
push
mov
stc
aad
adc
mov
xor
iret
loope
lock
enter
sbb
jmp
pop
cmp
and
cmpb
ret
mov
cmp
or
das
mov
add
mov
mov
mov
mov
jp
mov
push
mov
mov
sbb
or
jnp
mov
call
sbb
inc
adc
test
or
ret
stc
inc
out
add
sbb
pop
outsb
iret
cmp
int3
arpl
lods
fildll
fucomip
clc
pop
outsb
hlt
popa
jno
push
or
lret
jp
call
into
pop
xor
cmp
cmp
mull
add
sub
mov
imul
cmpsl
jns
cmp
dec
jmp
fidivrl
jp
xchg
or
xchg
mov
push
mov
rcr
sub
dec
and
sub
cmp
and
rcr
dec
push
push
imul
add
lea
pushf
sub
xchg
bound
pop
ret
xchg
jmp
leave
in
cld
adc
dec
jecxz
pop
les
les
push
in
mov
movsb
jmp
mov
jecxz
dec
mov
sbb
cld
lods
out
xchg
stos
xchg
pushf
jl
cmp
sbb
mov
int
dec
dec
cli
cli
dec
adc
mov
mov
mov
mov
push
or
fdivs
mov
mov
enter
or
xlat
mov
inc
xchg
fmull
int3
outsb
lock
inc
mov
call
mov
rol
out
out
dec
xchg
in
cli
jl
mov
out
mov
jmp
pop
test
cmp
jno
inc
repnz
push
lods
bound
scas
sbb
stc
xchg
mov
push
sbb
sti
sbb
pop
ret
dec
test
ret
mov
push
and
pusha
jmp
mov
push
inc
push
mov
faddp
pop
std
icebp
mov
out
xor
adc
stos
sub
lret
lret
jne
shll
scas
scas
jns
enter
imul
push
push
sar
sub
adc
cmp
xchg
push
jp
mov
cmc
and
xlat
fs
fdivrs
inc
push
cmpsb
sub
xchg
cmp
and
dec
mov
jo
lret
int3
hlt
jmp
xchg
bound
int
out
leave
inc
out
leave
pusha
xchg
dec
shrl
xor
dec
push
xor
xor
xor
ds
outsl
or
add
jg
fs
inc
int3
and
cs
jl
pop
mov
adc
fdivr
cmp
lods
insl
xor
cli
aaa
push
cld
sbb
adc
lahf
ss
push
inc
fs
test
rcr
insb
sub
jp
scas
mov
cltd
out
pop
push
mov
adc
call
or
scas
cmp
lahf
jb
es
mov
push
fstpl
aad
scas
xchg
sub
pop
push
jo
mov
push
cld
lock
lods
xor
mov
into
push
xor
push
xlat
sub
sub
xchg
sub
jmp
add
aam
fdivrl
mov
sbb
inc
les
adc
xchg
sub
mov
push
loopne
sub
jl
mov
mov
in
xchg
cmpsl
insl
jge
or
cmp
test
rcl
lret
xchg
insl
cmp
xchg
insl
jnp
je
cs
adc
lds
stos
aam
dec
mov
loopne
mov
inc
adc
jnp
fucomi
jge
insb
add
adc
jbe
xchg
sub
lret
js
mov
xchg
lcall
idivb
aad
add
xchg
jne
pop
imul
mov
lock
shll
lret
jo
inc
lds
inc
lods
adcl
lods
cmp
fwait
out
push
int
mov
xchg
mov
jne
arpl
int
xchg
mov
mov
das
xor
cmp
dec
xchg
sub
movsl
sbb
fidivl
mov
jle
jge
inc
ds
out
les
outsl
in
sbb
stos
cmpl
jecxz
cmp
out
ficoms
sub
jg
sti
sub
mov
sbb
aad
fbstp
loopne
ds
inc
sahf
pop
cli
xchg
rorb
add
inc
pop
icebp
pop
repz
or
les
shlb
bound
inc
bound
cmc
nopl
andl
dec
or
mov
sub
data16
ds
ret
rol
test
cwtl
mov
mov
mov
das
das
inc
sbb
fndisi(8087
push
mov
xchg
rcll
xchg
cmc
mov
jle
scas
loopne
loope
jge
out
cmpl
xchg
dec
insb
xchg
and
mov
dec
insb
ja
and
int
adc
and
popa
lds
scas
mov
out
inc
enter
inc
in
clc
repnz
testl
dec
int
xor
mov
out
sar
cltd
mov
fsub
push
xchg
xlat
mov
scas
inc
shrl
sub
pop
fadds
add
push
xor
jb
jns
leave
xchg
repz
cmpsb
shrb
sbbl
adc
out
xchg
add
mov
xor
jbe
push
sub
negb
inc
xchg
adc
jb
push
mov
sub
test
push
push
sbb
pop
pop
pop
ljmp
out
push
push
add
test
mov
xchg
lcall
pop
jno
push
daa
repnz
mov
dec
in
outsb
add
ds
enter
std
adc
or
je
ja
cmp
dec
mov
sbb
and
jne
add
in
pop
sbb
mov
cmp
push
adc
xchg
scas
mov
ficoms
sub
ja
mov
fildll
mov
push
lods
push
jne
mov
mov
cmp
inc
cmp
scas
push
jne
sti
jg
xor
push
popf
std
add
lret
lret
sbb
xor
mov
pop
arpl
iret
sbb
ds
in
outsl
subl
xor
inc
push
or
pop
sahf
and
in
cmc
data16
es
ret
lret
lret
jge
es
inc
aad
push
mov
adc
pop
shlb
cs
mov
dec
daa
mov
or
shl
fcompl
cmp
loopne
insl
xchg
xor
in
push
pop
cmp
adc
testl
lahf
not
das
cmp
push
sub
or
loopne
xor
mov
mov
jmp
das
mov
ret
ja
adc
mov
and
cli
shlb
mov
or
cmp
pop
or
mov
mov
cmp
mov
sub
cmp
testl
insb
loop
aam
scas
jne
fidivl
cmp
nop
xchg
call
ja
ret
fstpt
xchg
fmul
bswap
jae
ljmp
in
inc
outsl
and
mov
add
mov
jecxz
adc
add
xor
cmpl
add
push
sbb
lret
pusha
fs
xchg
in
lret
fildll
leave
adc
sub
xor
lret
pop
mov
pushf
sub
into
inc
cmp
or
rep
aas
lret
xchg
sub
pop
test
mov
jnp
fcompl
in
shl
int
insb
add
popa
sub
jmp
pop
imul
das
decl
stos
jne
dec
into
inc
pop
fists
sbb
jne
mov
leave
cmp
push
jne
mov
pop
in
insl
jp
cmp
stc
insl
cli
js
imulb
ss
aad
les
lar
sbb
ds
mov
or
aaa
xchg
and
add
mov
enter
cs
mov
fcomps
mov
adc
xor
mov
sub
std
movsb
lock
adc
cmp
mov
and
insl
cltd
jbe
adc
inc
lret
arpl
inc
shr
into
mov
jl
and
mov
ret
in
pusha
orb
enter
mov
mov
push
pop
outsb
imul
addr16
and
pop
lock
aam
call
push
cs
aas
sub
cs
mov
xor
stos
add
jnp
arpl
mov
push
mov
loop
cltd
pop
in
and
cmpsl
jp
inc
in
inc
sbb
pop
jg
leave
mov
mov
xchg
push
call
loop
pusha
in
std
inc
xchg
loope
jbe
add
aad
and
loope
lret
xor
dec
fildll
lcall
xor
ljmp
lret
hlt
ret
and
in
inc
adc
bound
in
mov
cld
mov
mov
loopne
aad
push
scas
pop
mov
dec
add
sub
jo
sahf
sub
cmp
sahf
popa
ja
cmp
dec
cmp
lret
imull
cwtl
inc
lret
pop
dec
iret
int3
loope
pop
fbld
mov
pop
mov
jecxz
ds
mov
xchg
mov
mov
jl
in
mov
je
mov
movsl
std
mov
orb
and
daa
cld
xor
dec
bound
loop
insl
inc
dec
push
xor
xchg
ja
ljmp
sbb
int3
dec
int3
pop
sub
push
gs
enter
jae
mov
xchg
xor
and
mov
clc
sarb
lds
pmaddwd
rcr
gs
pushl
lds
adc
sub
fdivrs
aaa
or
jbe
sub
dec
cmpsl
rorl
dec
cbtw
aad
fidivs
mov
sub
mov
and
cmp
popa
mov
mov
or
jl
or
push
sub
stos
mov
sti
inc
mov
mov
popa
sahf
jnp
rolb
fucomp
sti
jge
movsb
icebp
mov
push
mov
and
sbb
int
cmpsl
bound
notb
inc
or
cmp
lods
pop
out
out
adc
adc
xorb
shr
push
cmpsl
cmpsl
cmp
loopne
sbb
ja
lds
jle
sar
jno
xchg
insl
or
add
inc
test
ds
jne
sahf
xchg
push
adc
sti
mov
das
dec
adc
fisttpll
dec
sbb
daa
cmc
xchg
adc
pop
das
mov
rorl
mov
mov
das
fistl
xor
cwtl
daa
fsubrp
adc
inc
bound
and
sti
aaa
lods
and
pop
adc
jmp
rcl
aam
and
mov
rorb
lea
out
jle
and
mov
cmp
inc
pop
adc
cwtl
inc
jl
pop
scas
or
out
call
inc
clc
inc
lret
int
pop
movsl
pop
or
subl
sub
inc
ds
and
mov
pop
mov
arpl
dec
xchg
adc
fsubr
ds
sub
shrb
mov
xchg
aaa
mov
mov
popa
ror
out
jbe
jno
subl
jo
loope
insl
out
clc
jae
mov
das
cmp
out
dec
cmp
nop
xchg
stos
pop
imul
jns
mov
pop
loopne
outsl
loop
mov
jle
sbb
sbb
adc
loope
and
fimuls
and
clc
add
and
adc
repnz
push
push
ljmp
call
pop
repz
or
pop
cmp
mov
std
lock
dec
in
mov
mov
inc
cmpsl
outsl
test
iret
mov
or
sub
iret
fucomp
inc
push
lods
stc
out
sti
lahf
leave
fildl
add
jnp
xchg
add
outsl
aaa
inc
call
test
inc
jmp
xchg
das
out
fdivrs
inc
mov
sahf
aaa
push
movsb
mov
xchg
xchg
mov
push
and
or
mov
nop
scas
push
rcpps
fs
adc
cs
aad
xchg
rcll
test
push
in
cmp
jle
mov
cmpsb
cmp
add
insl
add
adc
mov
ret
repz
int3
scas
inc
xor
xchg
adc
jmp
mov
push
test
clc
push
loopne
ds
inc
jnp
daa
inc
add
movsb
inc
push
fbstp
mov
inc
out
push
cs
xor
push
jmp
mov
icebp
adc
adc
or
fisttpll
scas
shll
inc
loop
incb
jmp
pushf
dec
dec
add
inc
inc
scas
mov
icebp
xor
cmpsb
xor
cmp
inc
push
sub
push
mov
ret
outsl
sub
push
in
into
cmc
cmp
bt
rorb
cli
xchg
out
lret
cmp
push
mov
push
cltd
cld
jne
inc
fs
xor
test
xchg
mov
les
lds
inc
cmc
ret
pop
call
mov
mov
push
cld
cmp
andb
subl
jno
pusha
mov
pop
and
stos
or
inc
in
cmpsl
fcompl
sti
call
daa
gs
out
popf
push
testl
push
mov
enter
mov
pop
fiaddl
sbb
stos
cmc
mov
ret
adc
cmp
push
or
push
int3
movsb
gs
jnp
jns
mov
popa
and
mov
xchg
add
adc
cmpsb
std
mov
loopne
push
rol
and
in
imul
movsl
je
jge
xchg
loopne
lds
ficompl
xchg
leave
xchg
enter
and
mov
jns
xor
lea
mov
mov
ret
or
pop
or
cmp
sub
insl
pushf
stos
push
adc
add
adc
mov
cmp
cmp
pop
addr16
imul
push
add
pusha
test
movlps
inc
clc
outsl
sbb
call
addr16
roll
test
negb
cli
rcl
xor
das
test
push
add
mov
dec
and
insl
mov
clc
push
mov
pop
mov
add
push
mov
ljmp
shl
adc
fnstcw
xor
dec
int
mov
stos
sbb
mov
cmp
fbld
push
jg
xchg
lcallw
mov
pop
mov
jl
adc
ja
mov
es
pop
jge
fwait
daa
cmp
xor
popf
sbb
add
pop
jbe
sahf
inc
sbb
popa
lret
fsubrl
pop
addl
fwait
mov
ret
and
or
test
pop
clc
inc
dec
std
into
scas
push
jae
mov
enter
fcompl
leave
push
aam
ret
neg
mov
inc
jno
ds
fidivl
out
or
cli
dec
add
ja
dec
in
jle
rol
shrb
shrb
shlb
cmc
cmc
dec
fwait
xor
insl
pop
jg
ficoml
in
rcll
pushf
xchg
jge
stos
mov
popa
les
cmp
dec
fnop
jg
adc
ja
jae
push
fdivl
enter
nop
pop
dec
ret
lcall
add
jb
push
jmp
dec
arpl
mov
jb
movsb
ror
cmp
jo
dec
in
cmp
faddp
pop
adc
pop
add
lahf
pop
mov
repz
dec
push
les
jae
fstpt
pop
mov
vcvtsd2ss
enter
mov
lock
jbe
cltd
mov
incl
sub
jne
je
cmp
sub
fisubs
addr16
push
rolb
adc
jg
mov
sub
ja
jg
dec
scas
and
addr16
nop
inc
dec
pop
repz
adc
fs
adcb
leave
and
sbb
std
mov
sub
jnp
inc
sub
aas
mov
or
inc
stc
xor
inc
fcmovbe
and
mov
mov
test
sti
sbb
fldl
add
cwtl
icebp
lret
jb
je
pop
mov
mov
pop
fstpt
jp
mov
mov
sub
jne
out
hlt
test
sbb
rcr
and
into
mov
dec
sti
inc
inc
sahf
jp
xor
lea
movsb
fst
adcb
cli
push
xorl
mov
inc
pop
movsl
xchg
loope
dec
ret
hlt
add
inc
shrb
outsl
loop
mov
fiaddl
lret
inc
lret
popa
push
movsl
xchg
xchg
sbb
fadd
mov
jl
insl
add
inc
fwait
sub
jl
jne
fisubrs
mov
repnz
jecxz
insb
out
jp
cmc
mov
adc
in
adc
or
ret
mov
fimull
sub
dec
andb
push
mov
andl
xor
mov
xchg
jg
scas
and
fmulp
rcrb
xchg
ja
add
push
xchg
dec
in
push
call
lods
adc
jb
pop
xchg
dec
sub
stc
ficompl
sub
push
js
or
mov
mov
sbb
mov
aaa
mov
cli
shr
in
out
mov
push
and
and
aad
or
mov
mov
mov
adc
test
pop
insl
sbb
mov
dec
adc
test
fsubs
daa
sub
adc
clc
aas
xchg
std
or
mulb
orl
fildll
aaa
sbb
call
xor
jo
das
add
push
test
fsts
mov
mov
jp
in
movsl
insl
xchg
inc
fadd
mov
pop
in
icebp
fisubrl
ds
movsl
cmp
loop
movsl
pushf
lea
jbe
rcr
cmp
leave
test
sbb
push
into
and
mov
ret
mov
inc
push
incb
popa
add
enter
xchg
loop
xchg
and
subb
shll
insb
pop
lock
sub
bound
test
lcall
and
add
repz
es
cs
inc
cltd
xor
push
cmc
sub
cmp
cmc
sub
out
subl
jno
in
subb
lea
je
mov
imul
out
adc
jbe
pop
jbe
lea
mov
pop
xchg
loop
out
dec
sub
mov
mov
shlb
add
iret
mov
jge
cmp
movsb
xchg
and
push
or
in
jge
xchg
adc
cwtl
outsl
jnp
lea
cmpsl
sbb
and
cmc
mov
out
add
and
xor
cli
push
movsl
out
pop
inc
jmp
mov
xor
in
mov
fadd
mov
or
fs
movsb
push
fsubl
mov
pop
shr
lock
loopne
adc
sbb
sbb
sub
mov
and
stos
push
movsl
fstpt
jmp
movsb
into
mov
jecxz
or
xchg
add
cmpsl
into
cmc
sub
popf
sbb
mov
mov
je
xchg
mov
or
sub
and
les
inc
mov
aad
xchg
imul
aam
mov
es
push
call
sbb
xchg
pop
jnp
outsl
aaa
xchg
pop
out
insb
cs
ja
nop
mov
pop
jg
and
sub
into
mov
insb
mov
add
mov
in
sbb
inc
shll
pushf
push
loope
cmp
push
push
or
les
je
orl
aam
lcall
dec
sub
cmpxchg
inc
js
pop
or
pop
pushf
inc
pop
loope
pushf
sub
sbb
jmp
movsb
push
imull
fisttps
xchg
push
sbb
pushf
xchg
mov
popa
or
dec
imul
or
shlb
push
mov
pushf
pop
or
fldt
mov
sbb
xor
add
xor
pushl
mov
mov
enter
sbb
pushf
jg
xor
mov
shlb
mov
adc
jl
xlat
cmp
cmp
xchg
fcompl
lods
dec
sub
add
ret
pop
inc
xorl
ret
jp
out
xchg
mov
les
fldt
pop
loop
cmpb
add
arpl
or
sahf
mov
aas
lods
in
lahf
and
and
cmp
mov
rcrl
std
fcomi
jp
jbe
sbb
addb
pop
cs
dec
outsb
jl
daa
mov
rclb
jno
add
jl
ret
rclb
inc
add
mov
ja
adc
pop
xchg
jno
jno
arpl
nop
push
jbe
mov
inc
push
mov
and
sub
lds
cli
xchg
mov
cltd
test
inc
dec
scas
jg
arpl
sbb
into
dec
cs
dec
xchg
mov
xchg
test
mov
xor
inc
inc
cld
ficoml
xchg
cli
xor
sub
jno
jp
jae
and
jbe
sbb
jmp
fstpl
pop
dec
rolb
aaa
or
mov
aas
test
xchg
lcall
and
pop
dec
lahf
lods
dec
aam
xchg
gs
pop
mov
sub
jbe
add
sbb
ret
mov
movsl
mov
cmpsl
adc
or
cmp
cmp
mov
or
aam
stos
imul
in
push
call
cmp
insb
cmpsl
call
add
fsubrs
mov
rcl
adc
lcall
fildl
pop
inc
adc
inc
ret
xor
mov
xor
sbb
lret
cmp
cs
and
stos
sub
or
cmp
mulb
loope
in
repz
pop
aas
pop
lahf
ret
ret
dec
rep
jecxz
cwtl
aam
push
andb
push
and
jb
arpl
sti
clc
cmp
cmpsl
cmp
lret
jle
jmp
cmp
and
pop
adc
add
ss
daa
or
jge
les
testb
enter
push
xchg
mov
adc
int
sbb
mov
mov
push
lock
insl
sub
mov
lock
pop
insl
cld
adc
push
lcall
dec
cmp
pop
scas
jg
stos
mov
sub
sahf
push
cld
shrl
adc
jbe
push
sub
inc
mov
test
repz
add
push
stc
and
push
xchg
push
mov
ret
std
jne
sti
mov
xor
loop
enter
jg
loope
outsb
xchg
sub
adc
and
inc
xor
sbb
jp
jl
lret
cld
or
jmp
push
ds
push
pop
mov
cmc
cli
adc
xchg
cmp
andb
hlt
mov
dec
leave
jmp
lock
xchg
sbb
pop
jmp
dec
fdiv
push
cmp
aaa
ret
xchg
fxtract
int3
lret
sti
out
fisubl
fiadds
stos
xchg
mov
addl
ficompl
push
aam
jg
xlat
insb
insl
outsl
adc
inc
sbb
lock
aad
xchg
pop
insb
or
aas
push
ja
dec
pusha
pusha
or
cmp
mov
in
sbb
js
mov
pop
cli
fiaddl
adc
rorl
leave
jo
das
dec
es
pop
lods
inc
nop
xor
hlt
jbe
inc
push
xchg
add
mov
jae
xchg
sub
sti
pop
mov
imul
sbbb
pop
ja
mov
lahf
push
repz
addr16
cwtl
outsb
pop
movsb
jae
xor
mov
jle
mov
shrl
add
mov
inc
repz
std
adc
and
mov
icebp
or
cmp
fs
fbstp
and
and
mov
or
std
rorb
testb
ret
and
and
mov
mov
insb
push
faddp
out
iret
xlat
test
fcomi
iret
subb
push
mov
cmp
cld
add
sahf
and
cwtl
pop
mov
mov
jle
mov
shr
mov
int
data16
or
push
mov
bound
pop
jp
sub
adc
inc
cwtl
es
shll
push
mov
sbb
shlb
imul
xchg
mov
fsubl
add
and
and
jns
sub
enter
inc
or
lods
in
fiadds
pop
adc
cmpsb
ret
fwait
xor
fucomp
push
test
mov
xlat
into
adc
out
js
imul
and
pop
lahf
in
das
out
out
add
jb
iret
int
jmp
xor
in
ret
inc
push
xchg
test
push
lret
adc
in
adc
or
clc
or
movnti
pop
mov
cs
loope
jg
sbb
rorl
push
dec
push
hlt
movsb
pusha
sbb
jne
cmp
fldl
add
scas
mov
cld
mov
shrb
and
adcb
rcrl
inc
imul
in
loopne
rorl
jle
daa
fcmovne
xor
fldenv
xor
aam
mov
sub
inc
fidivrl
loopne
test
ret
or
ret
jge
dec
fstpl
fs
sbb
jp
jno
dec
flds
or
pushf
ss
mov
fldl
fwait
add
movsl
and
inc
push
enter
ficoms
test
jb
cwtl
mov
and
mov
shll
nop
adc
popa
add
xor
cmpsl
ror
into
add
mov
xor
lods
adc
inc
xor
repz
test
imull
jo
lods
mov
sbb
aaa
dec
mov
leave
push
or
out
aaa
push
xor
bound
sbb
imul
pop
int3
lret
arpl
mov
sar
inc
add
mov
sub
adcb
pop
sti
fwait
aad
negl
mov
mov
pop
fdivs
in
ss
cs
inc
repnz
mov
ljmp
mov
or
add
cs
bound
jmp
imul
pushf
xor
cmpsb
xor
pop
mov
xchg
subl
mov
dec
lods
mov
xchg
push
daa
ljmp
mov
je
push
xchg
adc
aas
dec
dec
out
mov
out
cmp
xlat
inc
pop
cltd
cltd
push
in
or
ret
sub
mov
mov
shlb
rcrl
loope
movsl
sbb
pop
push
aas
fadds
pop
adc
mov
inc
jmp
xor
jo
push
and
into
shlb
ret
dec
loopne
xchg
sarb
shlb
negb
rorl
loopne
sub
mov
into
int3
fildl
adc
push
and
or
sti
cmp
pop
push
mov
loopne
xchg
aam
mov
out
pop
frstpm(287
scas
push
push
insb
cmp
inc
or
pusha
notl
ss
rorb
lahf
inc
loope
or
xor
cmpsb
sbb
sub
xchg
mov
adc
push
scas
std
insb
imul
pop
inc
fs
jns
fnsaves
je
sti
ret
pushf
and
sub
fld
inc
dec
int3
mov
fs
sub
dec
sbb
mov
inc
bound
out
cmp
adc
int3
fadd
cmp
loop
dec
imul
pop
mov
and
lret
stos
push
pop
adcb
addr16
mov
scas
jns
hlt
push
lahf
scas
mov
jl
dec
push
jge,pn
aam
mov
std
or
inc
mov
call
fidivl
pop
ret
push
pusha
stos
jne
mov
enter
outsb
add
bound
adc
dec
cmp
jge
jl
sub
in
sahf
xor
jo
inc
or
ljmp
xchg
adc
xor
adc
outsb
movl
std
adc
das
inc
add
xor
xlat
mov
jp
pop
leave
sub
pushf
inc
push
pushf
mov
jae
stos
sahf
dec
push
pop
lods
mov
arpl
outsl
daa
jecxz
ds
push
inc
out
mov
push
fcmove
das
stos
mov
or
push
or
stos
lods
add
pop
xor
pop
data16
or
rol
cmp
xor
scas
ja
mov
mov
cmp
cmp
lret
out
mov
imull
dec
jle
dec
xor
fs
or
mov
repnz
mov
mov
fiaddl
push
dec
out
xorb
xchg
sub
ret
scas
fnstsw
add
jecxz
test
push
adc
out
push
cmp
test
and
cmp
xchg
lods
jge
iret
or
xchg
f2xm1
in
es
add
cmpsl
lcall
push
ljmp
out
xor
pop
mov
hlt
push
mov
fcomip
xor
stos
mov
pop
repnz
shll
adc
jne
fnstsw
jae
bound
ror
pusha
sub
cmp
lret
add
pop
mov
insl
out
add
sub
pop
dec
cli
scas
mov
adcb
ret
leave
test
outsl
jnp
xchg
sbb
into
mov
or
out
pop
xchg
repz
sbb
fistl
loopne
cmp
add
pop
sub
test
into
jb
jne
dec
addr16
mov
sahf
lods
cmp
dec
mov
ja,pt
in
sub
pop
adc
loop
push
leave
mov
subb
pop
mov
dec
mov
data16
icebp
aam
mov
loop
or
jbe
add
jae
loop
mov
xchg
dec
push
mov
cmpl
add
testl
scas
js
mov
movsl
nop
sbb
jp
rcrl
cmp
mov
jnp
rclb
fidivs
cs
sbbb
inc
mov
scas
ja
iret
pop
jmp
stos
lcall
or
xchg
mov
les
ljmp
lret
popa
out
jmp
jno
in
int3
push
pop
xor
xchg
jns
repz
sbb
mov
movsl
incb
xor
cld
push
mov
jmp
add
es
cmp
scas
jmp
icebp
adc
lods
jmp
cmp
jnp
lret
fnstenv
fisttps
add
test
and
mov
and
jae
loope
pop
adc
aas
ljmp
mov
xor
push
pop
xchg
sbb
nop
sahf
clc
clc
rorl
loop
sbb
imul
mov
sub
pushf
mov
out
mov
repnz
cli
mov
push
rol
fstl
dec
shl
aaa
pop
aas
cmpsl
sub
cwtl
into
mov
push
lret
jbe
enter
pop
addl
fisttpl
and
dec
jo
mov
sub
cmp
ss
movsl
xchg
in
xlat
mov
gs
pop
adcb
jne
or
test
mov
inc
jp
inc
and
inc
out
sti
jne
negb
cmpsb
adc
inc
push
dec
lods
and
lret
sub
mov
inc
aas
les
cli
or
sbb
sbb
fcmovb
dec
pop
aam
dec
pop
xlat
add
jo
int3
scas
xchg
fsts
inc
add
movsl
xor
mov
cmp
pop
add
cmpsb
inc
in
cmove
lahf
push
push
push
push
mov
or
xchg
and
push
imul
or
push
adc
and
mov
popf
or
inc
mov
js
fdivrs
push
adc
xor
add
dec
adc
enter
mov
movsb
inc
mov
inc
adc
xor
js
xchg
loopne
ficoms
insb
adc
ljmp
cmpsl
pusha
hlt
in
test
call
mov
stos
sti
jg
and
fcmovu
pop
in
fadd
cli
adc
aaa
adcl
mov
add
inc
xor
imul
fldcw
fs
cmp
lds
push
mov
inc
cmc
jb
mov
cli
mov
sub
inc
cmp
addr16
jmp
icebp
scas
cmpb
push
call
mov
jg
jae
push
in
xchg
xor
rcr
dec
call
fiadds
out
adc
xchg
popa
xchg
pop
sarl
mov
push
and
add
cmp
push
inc
sbb
mov
out
push
shlb
mov
cmc
shl
adc
jne
jb
push
data16
sub
enter
mov
xchg
shrl
mov
pop
nopl
adc
jne
mov
rcl
adc
pop
mov
dec
in
push
xchg
scas
lds
dec
push
lods
cmp
scas
idivl
xor
push
lea
jecxz
xchg
scas
push
cmp
pop
lcall
pop
and
aaa
mov
add
cmpsl
insl
sub
jne
fistpll
push
and
subb
xchg
movsb
enter
ds
std
push
xor
aaa
out
and
xor
addb
test
loopne
sbb
je
lcall
xrelease
cmpsl
out
jp
pop
lods
sub
xchg
lahf
inc
testb
xchg
adc
int3
cmp
push
or
or
and
pop
ret
pop
cwtl
loope
andb
mov
push
sub
inc
adc
aam
xor
insl
lea
mov
jne
jg
mov
lods
adc
inc
stc
ss
iret
iret
les
mov
mov
bound
lea
in
inc
mov
jle
out
repnz
xor
sbb
xchg
sub
xor
mov
inc
push
icebp
aam
or
loop
mov
insb
movsb
nop
sub
int3
push
push
imull
dec
cwtl
or
push
mov
dec
and
adc
arpl
mov
stos
pop
gs
xor
mov
and
pushw
fwait
mov
bound
fsubs
test
fbld
add
mov
sbb
mov
jae
mov
shl
cmc
mov
lock
lea
lods
sbb
inc
cli
nop
jl
xor
sub
inc
pushl
mov
xchg
shlb
lret
jle
mov
sbb
jle
leave
xchg
movmskps
sti
aaa
dec
push
push
dec
adc
lods
xor
sahf
pop
jae
xor
push
std
test
mov
mov
pushf
dec
sub
imull
dec
sti
inc
sbb
faddl
ds
ds
sahf
lock
daa
push
adc
mov
mov
inc
inc
sbb
bound
xchg
stos
push
in
fstpt
jp
fcoms
push
cli
inc
es
sete
arpl
lea
mov
ficoms
dec
or
cltd
cmp
sub
ficomps
shrb
sub
xchg
dec
jg
subl
pop
loopne
jnp
sub
inc
inc
and
mov
iret
adc
jbe
cmp
push
out
cld
xchg
cmp
std
add
or
push
movsl
and
lea
loop
pushf
adc
mov
cmp
scas
stc
in
dec
jno
pop
jecxz
xchg
adc
cltd
mov
popa
xor
lret
sub
js
ss
fs
arpl
filds
insl
mov
incl
idivb
lret
mov
cmp
and
mov
pop
sub
repnz
add
gs
add
fistps
xor
stos
hlt
push
adc
addr16
pop
repnz
pop
mov
push
addr16
sahf
clc
xor
movsb
movb
fsubl
mov
scas
or
fildll
dec
and
imul
movsb
mov
push
jge
ds
mov
std
sbb
cmpsb
jge
inc
leave
cltd
shr
add
xchg
dec
in
aaa
stc
mov
xchg
nop
sbb
or
xchg
loope
mov
arpl
jo
dec
and
inc
repnz
inc
aas
cli
cld
leave
lock
je
pop
jmp
ret
inc
xor
ret
dec
dec
dec
cmp
sub
xchg
scas
pop
shl
pop
jmp
repnz
lods
and
xor
test
mov
movsb
mov
jecxz
mov
sub
fsts
fcompl
xchg
dec
ds
popf
shr
dec
rcrb
jb
add
stc
mov
dec
mov
add
test
int3
fisubrs
jae
movsb
movsb
in
inc
fwait
leave
out
push
out
leave
fstps
je
in
xchg
pop
sbb
addl
xchg
sub
icebp
inc
pop
hlt
sbb
push
sahf
clc
push
inc
enter
loope
cli
and
rcl
ja
push
xor
mov
push
xchg
and
fs
cli
add
and
shrl
xchg
rorb
lret
add
arpl
mov
add
aaa
call
nop
push
push
ljmp
jg
fidivs
fidivs
sbb
push
sti
and
push
lods
insb
inc
fstps
sub
pop
and
push
lods
aad
jp
pop
js
repz
aaa
inc
stos
sub
push
les
inc
push
jmp
push
aaa
push
adc
push
ds
xchg
das
movb
in
bound
aam
ret
pusha
repz
data16
insb
rcrl
add
xchg
xor
push
pop
pop
fcoml
mov
or
mov
lods
insb
cltd
out
mov
xor
push
cwtl
jae
xchg
ret
pop
mov
cli
xchg
mov
xchg
loope
mov
das
ficomps
mov
lret
fnstsw
push
xor
out
and
lea
inc
dec
mov
xchg
xor
dec
inc
imul
sarl
dec
ret
dec
cltd
pop
add
dec
mov
data16
je
cwtl
fnstsw
rcll
pushf
cmpsl
jns
xchg
pop
aas
push
in
adc
xchg
push
fwait
jae
cs
xor
jl
inc
cmp
pop
push
js
jge
loop
dec
hlt
xor
rorl
sbbl
enter
jge
inc
xchg
test
test
and
jg
mov
add
pop
mov
xchg
pusha
jp
or
cmp
jnp
orl
cmp
outsl
icebp
pop
jecxz
ljmp
fnsave
enter
and
cmp
xchg
dec
pop
repz
ja
loope
or
decb
dec
and
arpl
mov
sahf
ret
cmp
hlt
mov
mov
cli
fbstp
loop
sbb
dec
pop
cld
cmp
push
in
loopne
and
cmc
out
add
mov
fsubrp
jmp
out
push
negl
loop
cmp
shl
adc
lds
sbb
push
dec
orl
insb
fnsave
insb
pop
mov
dec
mov
nop
jnp
xor
mov
add
call
adc
cmp
insl
cmp
dec
scas
or
fsubl
mov
cmpsb
sub
inc
lret
jae
and
shlb
movsb
pop
call
sbb
or
ds
sti
pop
pop
pop
push
cltd
jl,pn
pop
xchg
sub
repnz
stos
stc
lea
mov
stos
jne
cmp
mov
es
and
cmp
addr16
xchg
mov
mov
test
mov
xor
arpl
imul
adcb
rclb
pop
mov
incb
orb
outsl
aas
push
les
das
pop
ds
fsubrs
jge
rorl
xchg
xlat
insl
lea
daa
gs
imul
int
or
test
fbstp
inc
fldenv
mov
rolb
cmpsb
les
out
xchg
pop
icebp
adc
lcall
stc
je
jbe
outsl
mov
xchg
cmpsl
icebp
push
cld
sbb
hlt
xor
bound
xchg
sub
aaa
and
cmp
sub
dec
cmc
mov
es
sbb
cli
mov
ficoms
pop
outsb
cmpsb
mov
jnp
out
mov
repnz
cmp
addr16
outsl
xchg
sbb
sub
cltd
cmp
popa
adc
out
push
cmpl
imul
scas
jb
and
inc
fisttps
mov
mov
pop
push
cmc
daa
call
lods
std
add
adcb
sbb
data16
les
gs
push
out
xorb
and
xchg
addb
cmp
call
or
and
les
pop
negb
mov
inc
cmp
leave
pop
stos
pop
leave
pop
fs
and
or
xor
mov
pop
sahf
jne
stos
arpl
push
jno
xchg
mov
dec
sbb
jo
pop
outsb
adc
mov
clc
mov
jae
das
sub
sbb
into
cmpsl
jb
and
fnsave
cmp
sub
shll
add
cs
sbb
jb
add
jp
push
jb
fwait
mov
fists
and
popf
and
xchg
test
call
cld
mov
pop
movsl
jns
bndstx
and
cld
jmp
sub
xchg
or
dec
test
test
and
lret
or
aad
lods
mov
cmc
cs
mov
add
scas
pop
daa
inc
aas
and
aas
cmpsb
clc
psraw
push
xor
or
or
pop
pushf
movsl
push
xchg
scas
sarl
adc
xchg
mov
mov
xor
sarb
shll
mov
test
inc
repnz
ljmp
test
pop
mov
into
push
mov
push
and
cmpsl
mov
aam
enter
cs
sbb
jo
pop
fldl
dec
test
lret
in
aad
insl
sub
popa
mov
cmpl
add
test
gs
mov
fldenv
iret
movsb
jp
jmp
mov
cmp
andl
nop
popf
xor
mov
mov
ja
in
loop
filds
mov
push
es
xlat
outsb
add
jae
loop
mov
or
dec
dec
leave
mov
sub
inc
push
push
inc
jge
popf
lods
jle
pushf
inc
sarb
pushf
adc
push
inc
mov
aaa
je
mov
fnstenv
repnz
shl
sub
push
cmpsb
sub
in
xchg
mov
mov
sub
push
scas
hlt
data16
or
mov
pop
dec
test
dec
fsubrs
cmpl
mov
jno
xor
mov
test
lret
sti
gs
lcall
pop
out
loop
pop
repz
inc
dec
cmp
mov
repnz
or
stos
int
cwtl
push
lret
dec
loopne
jg
setnp
xlat
mov
pop
jg
jmp
sbb
cs
add
ret
sahf
lahf
dec
negl
jns
cmpl
fwait
xchg
dec
icebp
aam
rolb
rol
push
imul
dec
mov
pop
inc
jg
mov
jge
or
mov
xchg
cmpsl
ror
push
push
push
push
sbb
push
xlat
and
scas
lahf
jge
outsb
out
cmp
cmc
adc
call
mov
push
lcall
sahf
or
nop
mov
jae
popa
xor
mov
inc
shrl
cld
jae
mov
and
add
addr16
or
jns
push
mov
scas
bnd
push
push
jl
addr16
std
sahf
mov
inc
popf
adc
ss
cs
mov
mov
movsb
and
push
xor
inc
mull
outsl
xor
sub
xchg
pop
repnz
je
pusha
xchg
movsb
or
inc
ret
addl
push
ljmp
jno
bound
adcl
shlb
and
popa
int3
in
or
test
and
mov
push
jbe
mov
push
imul
xchg
inc
jl
test
aaa
cmp
loopne
xor
loope
fucom
fdivrp
xchg
pop
adc
lret
pop
shll
insl
xchg
sub
je
adc
jbe
mov
adc
imul
rclb
or
cld
jp
andl
jne
pop
cmpsl
sub
adc
cmp
mov
mov
lods
icebp
loop
fstps
push
cltd
xor
xor
adc
pop
int
pushf
dec
adc
sub
fdivrs
lea
aaa
push
push
scas
dec
push
rclb
cmpsl
aas
fwait
stc
movsl
int
testl
fcomi
jge
ja
jg
xchg
aam
jge
pop
or
xchg
mov
dec
cmpsb
jmp
mov
or
xor
sub
mov
inc
rcrl
mov
insl
in
pop
pop
push
jb
and
hlt
shrl
mov
and
clc
andb
insl
pushf
aad
into
mov
push
xor
shlb
pop
jae
inc
loopne
movhlps
sbb
call
leave
adc
cmpsl
andl
sub
pop
fucomp
fs
idivb
jbe
cmp
sub
pop
aaa
jmp
sbb
mov
hlt
xchg
dec
mov
enter
and
das
xchg
clc
cmp
rorb
xchg
dec
repnz
push
repz
add
lfs
pop
pop
jl
aam
lcall
js
loopne
and
pop
out
inc
xchg
push
lret
jae
stos
sub
scas
jns
sub
pop
dec
mov
fidivrl
subl
push
out
enter
pop
outsl
ljmp
outsl
aas
test
repnz
push
mov
adc
xchg
mov
mov
ljmp
mov
or
repz
dec
test
ret
fistps
or
jge
out
sub
ret
add
push
push
jg
cmp
iret
data16
xchg
add
or
insl
dec
aad
push
in
push
mov
roll
sbb
test
push
ret
cmc
mov
push
cld
aas
je
shrb
rol
jno
ja
pop
fxch
mov
jg
pop
clc
inc
adc
pop
fsubr
inc
je
data16
cmc
seta
push
aad
outsl
mov
mov
add
mov
test
inc
xor
pop
fs
pop
or
mov
out
mov
dec
stos
push
test
xchg
mov
jbe
ret
mov
out
ret
shll
pop
scas
jno
dec
sub
sbb
out
imul
arpl
add
gs
movsl
mov
or
ret
and
adc
sbb
frstor
cmpsl
pop
xlat
outsb
dec
aad
add
jne
or
mov
cmpl
std
cltd
sub
jae
xchg
push
sahf
pop
cli
bound
les
cli
pop
in
mov
and
rclb
cli
pushf
cmp
cmp
pop
mov
and
and
in
test
call
out
nop
pop
pop
out
mov
inc
sarb
fcompl
xchg
jg
sti
movsb
cmp
pop
cmp
popa
dec
cmp
test
aaa
daa
jnp
test
or
adc
xor
movsl
xchg
dec
ficompl
stos
loop
js
sub
ret
imul
push
fldl
and
xchg
pop
xlat
jnp
aam
add
push
mov
dec
dec
fs
dec
insb
mov
push
mov
pop
lods
les
test
out
mov
fcoml
push
sub
es
cmp
daa
sbb
mov
or
test
imul
push
loope
nop
mov
dec
scas
push
cmp
and
pop
pop
leave
add
repnz
xchg
nopl
lods
adc
push
das
xchg
ljmp
sbb
iret
das
cmp
sub
rcrb
add
add
push
or
xor
daa
cmp
sti
ret
sbb
mov
negb
sub
inc
loope
lret
std
repnz
or
sbb
cmp
testl
push
mov
jae
or
repnz
xchg
fiadds
xor
inc
icebp
xchg
jg
mov
testb
jg
flds
sub
scas
in
in
roll
test
aad
mov
pop
outsb
repz
xor
loopne
pushf
iret
jbe
add
xor
mov
jb
xchg
sub
in
push
ja
cmpb
add
into
out
js
xchg
cmp
sbb
sti
notl
andb
add
out
lds
adc
mov
pushf
in
fldt
push
fwait
hlt
mov
cwtl
fs
dec
sti
pop
sub
insl
jmp
outsl
std
push
das
nop
mov
mov
mov
popf
inc
loopne
pop
push
imul
add
sub
mov
hlt
js
inc
mov
cmc
pop
adc
mov
ja
test
cmpsl
mov
sbb
mov
sub
rolb
lods
aad
cmp
fistpl
lret
or
dec
movsb
cmp
in
in
lea
sti
sub
sbb
inc
scas
pop
xchg
or
push
lea
sbb
jge
push
scas
xor
cmpsl
loope
xor
nop
add
repz
or
stos
inc
and
out
int3
iret
das
int3
sbb
and
push
fptan
xchg
daa
mov
xchg
ja
sbb
mov
movsb
in
sahf
scas
rclb
push
inc
faddl
adc
dec
push
es
push
sbb
loope
sahf
insb
mov
and
xor
or
rcl
lahf
stos
aaa
pop
cmp
and
or
inc
pop
outsl
mov
cwtl
jnp
mov
mov
loopne
enter
mov
icebp
nop
push
in
lahf
movsl
pop
rcl
add
cmp
cmp
add
inc
movsl
cwtl
push
cmp
aad
jle
aad
stos
aaa
pop
fwait
and
leave
push
fwait
dec
jecxz
jge
sub
inc
pop
addr16
push
ret
sbb
pop
pop
rol
or
pop
mov
dec
cmp
andb
fdivs
xchg
fsubl
cmc
mov
xor
mov
and
jo
lret
push
outsb
orb
cli
nop
mov
fistpl
jle
pop
xchg
pop
repnz
shll
in
dec
adc
repz
stos
gs
inc
js
ljmp
or
inc
insb
xchg
mov
jecxz
imul
stos
mov
jmp
cs
push
jo
jle
fwait
inc
ret
pop
js
push
fistps
gs
adc
ret
loope
in
sub
lea
icebp
mov
loopne
inc
adc
push
ret
mov
shrl
cmc
or
inc
mov
push
sub
test
scas
or
xor
add
or
fnstenv
sub
dec
push
movsl
ja
mov
fucomip
iret
pop
mov
mov
clc
add
imul
xchg
adc
or
loop
fiadds
jnp
xor
mov
jns
mov
loope
push
ss
xor
fisttps
adc
adc
xor
adc
sbb
mov
inc
or
jg
mov
adc
mov
sub
push
sub
sbb
flds
sub
mov
push
aas
pusha
insb
je
nop
sbbl
mov
stos
loop
lcall
inc
lahf
or
dec
cmc
into
mov
fists
push
insb
out
lahf
int
xchg
gs
pop
hlt
js
hlt
xchg
cs
aaa
scas
clc
cmp
inc
adc
and
pusha
cmpb
mov
rcrb
sbb
sarl
or
iret
mov
push
jne
mov
cwtl
xchg
sub
mov
jb
icebp
mov
enter
push
mov
mov
jnp
or
das
in
aam
mov
stos
jmp
mov
add
ljmp
stc
xor
sub
into
loope
or
imul
addr16
pop
out
repnz
push
testb
mov
dec
mov
out
cmpsb
scas
cli
push
push
mov
xor
leave
pusha
cs
jge
mov
sahf
adc
xchg
xchg
mov
sub
pop
dec
iret
iret
repnz
pop
pop
jae
cmp
clc
lea
aam
lret
cld
shlb
rcl
fstl
add
sbb
and
js
dec
mov
lret
mov
data16
push
sub
test
je
xor
pop
sahf
lea
scas
inc
adc
dec
loop
or
cmp
jbe
pop
mov
jmp
in
cmp
addb
adc
js
insb
sbb
fiaddl
or
popa
jns,pn
in
test
loope
adc
mov
mov
jle
ret
scas
out
cli
sbb
shlb
shl
lret
mov
jmp
loope
add
in
cmpsl
in
mov
lods
xchg
fxch
orl
dec
xchg
add
mov
je
xor
add
mov
fidivrs
ss
xor
mov
push
cs
dec
mov
shr
sbb
pop
aam
adc
mov
xor
sbb
in
fsubr
push
pop
xchg
jle
mov
fsubs
jge
or
xlat
dec
jmp
inc
xor
push
lock
cs
sbb
dec
in
gs
cmpsb
popa
in
xchg
ss
cmp
cs
and
movsb
out
pop
bound
movsl
rol
xchg
dec
loop
sub
mov
mov
data16
mov
push
adc
test
into
mov
inc
test
and
stos
mov
jb
mov
std
sbb
mov
mov
mov
pushf
pop
in
jne
les
arpl
in
mov
pop
das
inc
aad
mov
jne
test
insb
pop
xlat
mov
imul
sbb
sti
push
leave
jno
hlt
sub
icebp
stos
inc
cli
cmpsb
mov
cwtl
mov
dec
and
cmp
pop
iret
or
sub
testb
push
dec
mov
insl
imulb
adc
mov
mov
pop
push
pop
pop
sbb
adc
xchg
cmpsb
ja
fdiv
pop
xor
decb
shr
cltd
pusha
jnp
in
lods
enter
enter
stos
jnp
into
push
sarl
cs
test
test
sti
jecxz
jmp
fndisi(8087
add
dec
insl
jl
pop
jmp
fnsave
cmc
cli
mov
sub
mov
imul
inc
gs
add
mov
dec
sub
push
pop
imul
jge
mov
add
scas
fucomp
push
pop
and
mov
arpl
jns
and
fsts
adc
xor
mov
cwtl
dec
call
es
test
stos
add
movsl
movsl
mov
outsb
popa
pop
cmp
sbb
cwtl
sbb
add
es
pushf
pop
pop
inc
or
repnz
pop
fldcw
popf
adc
call
or
fcomps
cmc
andb
daa
and
xchg
roll
repz
cmc
cmp
test
adc
dec
sbbl
sbb
sti
adc
out
negl
add
cmp
mov
aad
pop
jmp
jecxz
mov
push
xchg
bsr
stos
add
out
xor
les
lea
leave
lret
add
push
sbb
in
outsl
loop
xor
testl
loop
test
out
sub
and
insl
jg
and
adc
inc
idivl
xchg
mov
push
jmp
push
dec
cli
popf
fs
cwtl
lods
mov
test
lret
aam
and
mov
pop
repz
push
shlb
push
jo
jnp
inc
jno
stos
inc
adcl
mov
mov
or
push
adc
add
mov
mov
cmp
insl
adc
mov
mov
xor
push
ja
mov
mov
aad
aaa
nop
sti
mov
out
xor
cmp
dec
mov
mov
inc
pusha
or
jne
dec
adc
inc
sbb
dec
shrl
mov
fsts
add
rcll
jo
sti
push
je
out
cmpsb
sbb
push
fstl
mov
pop
cmp
xchg
push
fwait
pop
ds
leave
jg
push
hlt
cmp
fs
addl
xor
or
outsb
fidivrl
lods
icebp
fists
and
mov
test
mov
mov
mov
stc
cmp
aas
mov
xchg
imul
test
cmp
or
and
mov
inc
hlt
xchg
xor
cmp
push
inc
icebp
xor
fnstenv
mov
mov
push
and
sub
orl
notb
mov
incl
xchg
mov
mov
fwait
imul
aas
sub
call
push
mov
in
fwait
sbb
arpl
sbb
nop
mov
test
push
into
sahf
adc
xchg
lock
aad
add
ljmp
jle
gs
xchg
divl
add
dec
std
pop
sbb
xchg
test
aam
mov
xchg
mov
scas
ds
cmpsl
sub
fucom
test
push
in
insl
mov
dec
mov
ret
jb
clc
jae
and
frstor
dec
mov
pop
jmp
outsl
repz
test
adc
and
gs
jmp
arpl
shrl
xor
mov
xor
arpl
or
aaa
push
loop
mov
mov
jmp
out
add
dec
mov
and
jle
and
mov
xchg
jns
mov
fmulp
mov
ss
lret
iret
cld
jae
imul
pop
bound
pop
jnp
mov
imul
scas
sarb
inc
pushf
sti
sbb
and
outsb
add
mov
lret
mov
adc
lahf
arpl
leave
and
hlt
pop
les
xchg
jmp
mov
mov
jg
leave
shrb
xchg
add
out
das
xchg
into
enter
add
mov
aas
test
mov
dec
mov
mov
gs
adc
lock
dec
jmp
adc
xorb
subb
mov
sub
lea
or
mov
pusha
mov
hlt
hlt
aam
jmp
xchg
lahf
arpl
mov
sarb
push
inc
pop
jmp
pop
mov
add
add
lahf
pusha
test
call
pop
inc
mov
stos
inc
fcoms
cli
inc
aad
push
imul
mov
cli
push
lea
int3
int3
into
loopne
cmp
dec
psrad
fdivs
jnp
dec
dec
loopne
jle
call
mov
addb
inc
adc
fidivl
imul
adc
es
xchg
mov
jp
cmp
idivl
lret
lret
hlt
cli
push
imull
cmpsl
ficoms
sbb
adc
rorl
push
popf
xor
sub
xlat
xchg
pop
mov
pop
loopne
sub
loope
push
push
lea
das
adc
jbe
cld
aas
bnd
mov
shll
call
cmp
call
fidivl
push
push
mov
mov
into
adc
xchg
jle
les
mov
xchg
mov
leave
xchg
insl
jns
lahf
ds
out
sti
sti
and
xor
sbbb
and
ror
iret
iret
inc
sbb
daa
shrl
mov
push
cld
arpl
xor
cmp
int3
lret
orl
or
fisttpl
test
cmpl
stos
inc
shll
enter
sub
in
movsl
mov
add
inc
fcmovu
xchg
and
data16
fisubrs
jno
int
sbb
das
cmp
std
cltd
lahf
icebp
xor
int
test
sbb
mov
cmp
inc
imul
js
test
mov
mov
out
aas
test
std
mov
xor
es
jnp
clc
fwait
jne
mov
les
ds
or
adc
add
mov
inc
pop
jge
fwait
test
adc
fisubs
mov
ljmp
adc
mov
nop
cmpsl
out
dec
xchg
jnp
jae
pop
fstl
movsl
clc
cltd
mov
add
lock
cmpsb
inc
push
xchg
and
lods
mov
iret
jo
addr16
mov
bound
mov
mov
cmp
cltd
adc
daa
ss
jae
scas
xor
xchg
gs
xchg
adc
pusha
out
pop
pop
sub
out
in
sarl
inc
leave
and
mov
xor
pop
add
mov
js
pop
testl
pushf
fimull
cmp
mov
imul
jg
cs
dec
mov
mov
mov
icebp
rcrb
fxch
mov
push
jno
push
jecxz
test
xlat
cmpsb
lea
pop
xchg
inc
xchg
in
mov
dec
out
inc
push
jb
dec
push
mov
ja
icebp
je
lods
inc
mov
add
jns
adc
xchg
mov
xor
ret
outsb
xchg
incb
in
fsts
cmpsb
jne
mov
data16
pop
cltd
lea
sti
or
lds
sbb
hlt
xchg
and
mov
subb
lahf
jb
fisubrs
popf
aas
jg
sbbb
scas
xor
stos
adc
inc
in
sub
movsb
pop
sbb
pop
and
test
pusha
test
push
add
inc
cld
mov
adc
call
mov
and
sub
xchg
fdivl
xchg
mov
outsb
ds
sbb
pop
orb
test
mov
test
sub
sub
pop
push
sub
movsl
clc
fcmove
sub
dec
in
cmp
add
call
cmc
sbb
insl
jno
push
les
fcompl
jno
mov
ret
dec
dec
fs
cmp
sbb
jo
insb
iret
pop
xchg
dec
jnp
push
mov
pop
imul
xor
hlt
pop
fsubrp
mov
mov
cs
and
insl
xchg
addr16
push
stc
sti
xchg
psllq
xor
ret
repz
scas
xchg
lret
jbe
outsl
lahf
mov
inc
jb
ja
jmp
lds
push
dec
leave
mov
mov
jecxz
lea
popf
ret
lret
mov
pop
fadds
sti
adc
mov
sbb
fadds
sub
add
jp
rorl
roll
clc
fidivrl
std
inc
mov
dec
pushf
xor
and
dec
fistps
and
jns
flds
push
loope
dec
xchg
shrb
xor
movsl
imul
or
mov
sahf
cmp
mov
arpl
xlat
cwtl
dec
shll
xchg
pop
adc
push
mov
test
pop
mov
or
and
xor
xchg
mov
movsl
shrb
shll
sbb
arpl
cmpl
scas
cwtl
jle
in
scas
mov
out
push
dec
das
and
inc
mov
jo
xchg
pop
shll
and
sub
inc
lods
xor
fldz
pushf
push
call
rorb
inc
push
pop
lret
sbb
sbb
xor
repnz
je
xrelease
jno
mov
popa
out
jns
cmp
in
idivl
mov
sarl
stc
vpextrw
ljmp
imul
mov
loopne
in
orl
repz
dec
hlt
sbb
mov
jecxz
andl
sub
mov
les
mov
fdivl
push
cmp
lods
lret
bound
sbb
jae
lret
push
jmp
add
adc
aaa
mov
pop
sub
outsb
enter
dec
pusha
aam
push
mov
push
push
sub
adc
test
xor
inc
pusha
push
into
repnz
ja
test
in
adc
mov
lds
mov
ret
sbb
adc
and
mov
sahf
xchg
push
xchg
mov
mov
lret
xchg
shll
imul
cmp
cltd
mov
lret
mov
jl
lock
and
loop
rorb
nop
jge
push
leave
int
jbe
sub
dec
les
mov
out
pushf
jb
xchg
xor
sbb
dec
les
insb
cmp
pop
clc
popf
jo
prefetch
test
or
xchg
cmp
mov
sbb
out
les
jbe
mov
call
mov
and
adc
sub
pop
mov
inc
cs
out
stos
xchg
addl
std
pop
mov
int3
sub
test
sbb
leave
xchg
movsb
sti
shrl
rcll
cld
shlb
xlat
mov
adc
jl
les
pop
lods
or
pop
aas
aad
daa
pop
xchg
aad
subb
ret
mov
call
cmp
jnp
cmp
mov
inc
pop
xchg
mov
aad
lock
out
push
sbb
xchg
addl
add
xlat
aam
aam
stc
inc
cmp
lret
arpl
shrb
push
pop
mov
ja
shl
scas
cwtl
mov
in
data16
clc
movsl
and
jl
mov
js
add
xor
jge
jecxz
sub
mov
pop
inc
sub
stc
inc
pop
or
xchg
sahf
stos
movsl
mov
fisubrs
push
mov
xchg
lods
inc
pop
pop
xchg
xor
mov
mov
sbb
mov
or
dec
out
sbb
sbb
mov
arpl
cwtl
aaa
inc
frstor
sub
cmp
xor
mov
sub
xchg
push
xor
inc
dec
aaa
xor
adc
pop
je
ss
call
push
movsl
pop
lea
loope
jge
scas
push
sti
pushf
repz
daa
ss
pop
shll
aam
mov
or
je
sub
testl
add
scas
pushf
mov
adc
lcall
sbbb
mov
pop
mov
icebp
and
decb
xchg
mov
and
fcomps
out
inc
lods
sub
add
test
imul
jo
es
or
mov
mov
addr16
jbe
imul
jg
jmp
add
mov
adc
sbb
jp
mov
fists
in
test
jle
jns
or
xorb
jae
pop
sub
mov
or
icebp
or
sbb
mov
and
sbb
dec
inc
pusha
test
loopne
loope
add
mov
pusha
xor
in
jns
cmp
mov
pop
out
add
pop
and
add
xchg
sub
shll
jmp
dec
mov
in
adc
movsb
cmp
dec
outsb
lds
adc
cwtl
mov
xchg
add
in
add
shll
loop
nop
push
mov
dec
sbb
adc
popa
arpl
xor
out
xchg
stos
packsswb
and
sbb
ret
mov
mov
push
sub
ror
fwait
jno
mov
dec
inc
in
fs
lds
mov
stos
call
mov
cld
jbe
adc
cld
subb
arpl
f2xm1
mov
pop
sti
cmp
cmp
and
or
cltd
xor
cmp
mov
mov
mov
adc
sub
insb
or
cmp
enter
xorb
pop
mov
mov
jp
jmp
xchg
dec
mov
pushl
lds
aaa
xor
or
mov
mov
popa
decb
adc
and
xor
push
push
mov
or
and
jns
in
ljmp
xor
imul
arpl
inc
movsb
inc
push
jo
adc
sub
sub
sbb
jl
les
dec
and
in
aad
roll
add
int
loope
mov
das
jp
adc
loope
mov
mov
gs
leave
jns
cmp
xchg
daa
xchg
lret
mov
int
mov
and
jns
adc
es
jle
fwait
cli
ret
daa
sub
push
jae
pop
sbb
mov
jae
inc
sti
outsb
inc
stos
lahf
fdivrl
pop
rolb
stos
je
or
inc
ret
mov
and
loop
or
sbb
call
jp
inc
pop
mov
jmp
mov
push
orl
mov
cwtl
test
roll
jl
fdivl
lods
std
sbb
rclb
inc
test
lret
push
mov
repnz
inc
xor
xchg
addr16
push
shl
jge
stc
or
lock
and
test
jmp
mov
jne
jb
pushf
cli
cmp
pop
sub
inc
jno
jno
daa
inc
adc
pop
sbbl
mov
sti
xchg
pop
adcb
dec
loope
mov
inc
or
icebp
jl
adc
movsl
ret
shrb
pop
ret
sahf
mov
sub
cmp
cld
insb
dec
xlat
sbb
pushf
lahf
pop
adc
in
jle
and
adc
ret
sti
pop
imul
cmpsb
cmp
add
pop
fwait
sahf
add
xchg
addr16
or
cmp
sahf
mov
fistpll
aaa
jp
dec
pop
adc
out
fcoml
sbb
mov
jl
or
fwait
push
movsl
pop
dec
mov
adc
add
xor
scas
rolb
pop
inc
xchg
jo
out
sub
xchg
xor
mov
cmp
xchg
add
lret
xlat
pushf
sub
leave
and
mov
in
xchg
nop
daa
lock
inc
shr
scas
mov
dec
xchg
imul
mov
sbb
lea
xor
std
mov
jecxz
lret
dec
das
fdivrs
mov
adc
lods
popa
aaa
jl
imul
push
nop
int3
arpl
icebp
cmpsl
push
sub
leave
and
push
dec
mov
mov
popf
lods
cmp
jmp
pusha
cld
cmpsl
lcall
loop
adc
push
repz
bound
test
mov
sbb
cmp
lds
jg
mov
mov
adc
stos
daa
ds
or
fs
scas
mov
mov
rol
cltd
mov
push
cs
cmp
jmp
ljmp
aas
push
inc
clc
jne
leave
fsts
push
xor
scas
in
test
popa
cmp
mov
fistpl
enter
xor
push
and
int3
cmp
lret
stos
in
mov
mov
aad
mov
lods
mov
ret
ljmp
rol
in
sbb
push
in
je
xor
mov
jb
inc
pop
repnz
arpl
cmpsl
pop
mov
cmp
imul
mov
jp
icebp
lods
xchg
add
cmp
imul
scas
jge
cmp
test
and
out
in
sub
mov
cs
adc
in
test
loop
jne
icebp
rcll
dec
xor
jmp
int
jp
dec
lea
dec
or
lea
mov
xchg
mov
sbb
mov
add
stc
nop
adc
orb
add
inc
adc
adcb
adc
stos
loopne
mov
mov
mov
and
daa
bound
push
lret
dec
push
aad
outsl
sahf
imul
sbb
xchg
daa
sbb
xchg
dec
sub
imul
jge
mov
shlb
add
aas
cmpsb
sub
or
fs
pop
and
mov
mov
das
roll
jp
rolb
pop
push
int
lahf
insb
cltd
mov
sar
dec
sub
aad
shrb
mov
aaa
nop
aas
mov
fcomi
mov
enter
daa
inc
clc
call
cmp
das
imul
or
pusha
shr
arpl
push
mov
pushf
insb
cmp
ficomps
xchg
aam
int3
jae
mov
jg
adcb
sbb
xor
sbb
xchg
cli
cmp
cmp
es
pop
dec
in
in
das
pop
push
and
mov
lret
jae
and
mov
arpl
sbb
xor
shll
adc
pushf
out
sahf
rol
sub
mov
fcmovb
fdivp
jl
ds
xchg
push
add
pop
push
aad
negb
dec
jns
jmp
fsubrs
jp
inc
pop
fwait
fwait
pop
xor
or
in
add
mov
add
sub
nop
cmp
dec
jmp
inc
lock
fucomp
jp
or
add
stos
jmp
or
fwait
xor
push
mov
dec
or
adc
push
vcvtdq2ps
add
mov
mov
shrl
xor
pop
or
cmp
daa
lcall
inc
push
aad
dec
jno
cs
fcompl
inc
push
in
jb
shl
add
out
stos
lea
sti
push
mov
adc
cmp
test
jnp
push
xchg
cmpsb
stos
push
mov
icebp
cmp
test
mov
in
arpl
mov
adc
mov
je
movsb
pushf
arpl
mov
adc
push
push
pushf
addr16
daa
movsb
jle
lcall
mov
loope
and
push
push
jl
jmp
stc
mov
sub
cmpsb
xchg
sbb
arpl
cmp
jg
xchg
jmp
adc
rcr
jl,pn
sub
push
jge
out
bound
sbb
mov
call
ss
out
xchg
xor
aas
lret
or
scas
jns
xlat
fwait
cli
lea
add
xchg
shlb
pop
sbbl
mov
es
cli
push
mov
pop
fnsave
and
fwait
pop
hlt
or
and
out
push
in
pop
xchg
add
mov
in
inc
or
mov
dec
jecxz
xchg
iret
sahf
add
sbb
xchg
sbb
mov
andl
lahf
jo
pop
push
add
jb
cmc
in
dec
pop
andb
iret
gs
sarb
nop
aad
mov
outsb
jecxz
ljmp
clc
xor
sub
mov
xlat
mov
pop
and
out
cmpsb
cmp
roll
imulb
jge
adc
test
inc
mov
cmpsl
adc
cwtl
movsl
aaa
mov
imul
cltd
xor
sahf
cmpsb
addl
sub
pushf
roll
imul
call
in
adc
loopne
out
js
mov
xchg
inc
sub
jp
cs
in
cmpsb
aam
fimull
push
cld
stos
fisubrl
rclb
xchg
jle
fstp
in
push
mov
aas
mov
xchg
push
mov
fsubl
mull
jecxz
lcall
sti
hlt
addr16
repnz
lods
test
lahf
ret
repz
jno
push
out
sbbl
lds
mov
xchg
insb
mov
dec
xchg
stos
sub
gs
inc
cs
dec
sub
fidivs
gs
adc
adc
xchg
xchg
data16
ret
xchg
inc
push
and
cmp
push
mov
fsubrs
dec
adc
mov
push
lcall
mov
xchg
and
inc
nop
daa
cmp
lods
jno
adc
out
lcall
sbb
pop
and
xor
sbb
in
dec
xor
sub
mov
xchg
scas
cmp
ror
cmp
leave
and
pop
out
mov
stc
xchg
sbb
clc
xchg
cmpsb
cmp
mov
fiaddl
fsubr
hlt
insl
or
mov
or
popa
mov
insb
mov
xchg
cmpsl
arpl
out
gs
dec
loopne
xchg
arpl
mov
addr16
mov
es
xor
fsubs
int
xchg
add
pop
push
mov
mov
jmp
sub
ror
jo
fldt
test
mov
call
push
jb
jmp
nop
pop
push
push
xchg
incb
lcall
cwtl
xor
xor
mov
sahf
cmp
jmp
push
push
out
dec
adc
or
test
movsl
call
push
inc
jge
jo
cmp
add
sbb
and
out
out
lahf
dec
lock
or
mov
add
mov
or
jo
icebp
lcall
fdivl
adc
cmc
in
cmp
cmpl
mov
dec
jb
add
adcl
lods
cld
mull
inc
xor
loopne
rcrl
lods
xor
dec
mov
xor
loop
orl
mov
push
xor
cli
add
pop
movl
push
inc
shlb
sub
imul
mov
int
insb
add
popf
jb
or
ja
sub
mov
adc
or
lret
es
jo
xchg
push
xchg
jno
gs
aam
jmp
add
sub
jne
inc
dec
sbb
add
pop
pop
aam
and
jmp
fildl
mov
gs
mov
cmp
inc
mov
cmp
stc
pop
adc
cmpsl
sub
mov
xchg
lods
ss
imul
add
push
out
sub
fstl
xchg
sub
cltd
or
out
mov
fsubr
mov
cmpb
fidivl
aaa
dec
rcll
mov
iret
mov
loope
pusha
xchg
pop
in
mov
idivb
lock
lcall
inc
lock
aad
icebp
pop
loop
lcall
cmpsb
cmp
imul
cmp
lea
lret
jle
pusha
enter
xor
out
xchg
cmp
push
or
scas
out
push
adc
mov
pop
mov
pop
pop
movsl
add
push
or
xor
test
mov
int
adc
mov
cmp
fsts
or
lret
jno
xchg
add
push
scas
push
insb
jnp
cvtdq2ps
xchg
inc
pop
dec
cs
ja
inc
fdivp
xchg
mov
and
aas
add
insl
xchg
scas
cmpsb
cmp
enter
adc
scas
xchg
dec
mov
or
dec
pusha
or
test
pop
sub
cmp
mov
fildl
repnz
jns
rcrb
adc
pop
mov
pushf
outsb
cltd
dec
in
sbb
mov
iret
push
mov
jbe
mov
mov
nop
fists
shlb
xor
imul
lods
mov
lcall
loop
sbb
les
mov
hlt
and
push
sysenter
xchg
sub
popa
and
insl
or
fisubrs
and
insl
inc
and
sbb
test
jle
lahf
popa
outsb
rcrl
fidivs
insb
add
xchg
or
pop
inc
clc
inc
rorb
mov
push
out
add
sbb
inc
movsb
outsl
push
adc
push
or
and
testb
dec
fmul
pop
test
loope
fwait
xchg
cmp
inc
icebp
jo
cmpsb
ds
xchg
cmp
sbb
fsubrl
outsb
test
ret
xor
mov
loopne
dec
mov
mov
cmp
push
rcrl
cmp
add
sub
addr16
jle
insb
jle
push
adcb
imul
test
dec
mov
jo
loop
fisubs
aam
je
jae
or
scas
or
pop
mov
pop
sahf
xlat
push
inc
mov
sub
ret
pop
in
xchg
mov
daa
cmp
xchg
mulps
dec
dec
xchg
pop
push
imul
sub
xor
mull
dec
jle
jg
test
pusha
addr16
mov
and
and
adc
dec
lret
clc
clc
sahf
xor
push
jmp
or
xor
adc
jae
out
xlat
add
lcall
jns
pop
push
out
mov
in
push
inc
xchg
mov
mov
lods
sub
idiv
adc
adc
mov
pop
xor
aad
mov
or
mov
push
pushf
inc
pop
repnz
jge
jnp
cmpsl
dec
shr
jb
or
int
cwtl
mov
mov
push
fimull
or
inc
insb
popa
push
imul
jo
xchg
test
shl
mov
dec
nop
out
lahf
aam
cmp
test
ret
ljmp
mov
sbb
rolb
jns
push
scas
lcall
sbb
das
stc
test
mov
cmp
xor
push
push
xchg
sub
mov
std
inc
filds
es
pusha
pop
scas
shr
rcll
repnz
stc
xchg
add
in
test
shll
push
fbstp
js
pop
std
mov
pop
jp
inc
in
cwtl
dec
daa
inc
jne
cltd
pusha
inc
inc
int3
arpl
push
lock
mov
push
dec
lock
outsb
sti
xchg
test
imul
outsb
xchg
add
pop
call
arpl
xchg
jle
jne
jbe
jae
or
xor
cmp
iret
cmpsb
mov
ret
rcrb
hlt
xchg
push
jnp
fiadds
or
jb
mov
xchg
popf
mov
in
aaa
mov
pushf
adc
adc
adc
inc
or
sbb
hlt
xor
shl
pop
xchg
lret
dec
cmpsb
push
adc
inc
dec
divb
dec
stos
push
cmc
daa
insl
in
adc
leave
enter
dec
iret
mov
xor
mov
pushf
hlt
out
cmpsb
sti
dec
add
sbb
ret
inc
arpl
jb
xor
or
sbb
std
out
loopne
in
lret
popa
cmp
sbb
mov
jne
aam
xor
clc
and
sti
jecxz
cmpsb
mov
push
inc
imul
jg
insl
test
mov
add
stos
outsl
push
pushf
pusha
testb
add
or
or
pop
push
xor
rol
mov
or
insl
cmp
das
mov
sarb
mov
adc
add
repz
mov
pop
lcall
add
dec
push
addr16
sbb
xchg
adc
rclb
addl
adc
fsubr
and
pop
lock
cmp
loope
aas
loopne
out
insb
jmp
pop
out
xchg
dec
stos
test
stos
lods
in
test
sub
xor
inc
repnz
cwtl
lds
xor
arpl
sbb
ret
mov
in
stos
shll
mov
testb
lcall
add
cmp
bound
or
dec
pop
fisubrs
daa
inc
and
sub
pushf
and
scas
fwait
mov
aam
adc
mov
fwait
pop
lea
and
cmc
jmp
imul
add
shl
in
sbb
xor
cmp
sub
jo
or
inc
or
cld
sub
mov
jns
pushf
mov
ficomps
movsb
fldenv
iret
jecxz
xchg
xor
cmp
adc
loop
dec
aam
inc
push
cli
imull
out
and
jns
dec
ja
popa
xor
fs
push
or
push
in
movsb
sub
add
movsb
jns
sub
es
or
sahf
jle
cmp
jmp
cmp
pop
dec
jnp
repz
add
je
sbb
ja
jge
ljmp
mov
xorl
and
mov
adc
repnz
mov
mov
inc
gs
fldl
push
stos
mov
xor
push
push
dec
rolb
mov
sbb
cltd
sarl
lods
dec
and
aaa
flds
adc
lods
subb
lret
and
nop
cmpsl
inc
or
or
cs
and
sbb
inc
in
lds
pop
and
outsl
pop
test
ja
js
jge
data16
enter
imull
and
aam
mov
sbb
pop
sub
pop
ds
mov
cld
call
in
pusha
ljmp
stos
fiadds
stos
daa
mov
xor
test
aas
out
pop
cmp
ficomps
incb
leave
sub
lcall
or
fisubs
adc
test
mov
push
inc
mov
enter
adc
mov
xchg
inc
cli
lret
test
movl
xor
sbb
rcr
rol
mov
ljmp
sub
and
push
mov
sbb
jp
sub
xchg
aas
scas
jp
xchg
dec
in
sub
cltd
shrb
imul
and
mov
ja
aas
mov
mov
sub
shlb
inc
mov
nop
add
cmp
mov
inc
scas
out
push
hlt
or
lahf
icebp
arpl
fldl
lock
cmpsb
sub
push
jae
xchg
cwtl
lcall
and
lahf
and
mov
pop
cmpb
adc
loopne
lods
aaa
mov
int3
dec
and
fs
sbb
jne
lea
icebp
movsl
mov
repz
cwtl
stos
test
xor
fwait
adc
inc
inc
mov
push
cmp
adc
scas
sub
or
jb
push
lods
jmp
mov
dec
mov
rcr
aaa
fcmovb
add
jae
push
mov
fcoml
fidivrl
add
and
or
add
push
lcall
xor
dec
hlt
and
mov
decl
push
push
pop
movsl
in
jb
mov
pop
jle
fdivrl
jo
mov
jo
jnp
outsl
cli
inc
push
adcl
mov
lock
ret
in
mov
xor
fwait
xor
sbb
mov
outsl
lret
sbb
aad
popf
stc
daa
push
mov
arpl
cmp
jns
in
sbb
inc
sbb
and
jle
and
sbb
adc
test
in
fidivrs
rep
pslld
rorb
fcomip
pop
push
sbbb
js
das
mov
fwait
outsb
adc
jg
cmpsl
cmp
or
push
cld
inc
ret
cwtl
dec
enter
outsl
sbb
mov
inc
pop
mov
cmp
out
stos
cmc
mov
mov
xchg
xor
lret
test
lret
push
sahf
ljmp
push
addb
push
jge
mov
incb
aas
pop
dec
into
mov
push
shrl
test
xchg
sub
push
mulb
pop
shrb
jl
popf
jle
sbb
ljmp
push
call
pop
out
rep
inc
gs
inc
fsubs
sysenter
shrl
addr16
xorl
int3
test
adc
xor
inc
into
fdivrl
mov
lea
sbb
inc
add
jg
orb
adc
adcb
repnz
jne
dec
scas
ja
cld
lods
sti
cmp
ja
fsubrl
movsl
lds
or
lcall
fwait
std
pop
push
xor
and
les
popa
aad
je
and
adc
jl
iret
lods
xchg
lret
dec
mov
push
adc
push
and
in
push
mov
inc
enter
push
xor
mov
pop
outsb
or
dec
mov
push
shrl
mov
cmpsl
sarb
stc
out
int3
shr
and
mov
test
sti
mov
popw
and
scas
push
sbb
mov
jp
adc
xchg
mov
sub
fcoms
fnstenv
aam
mov
test
xchg
pop
adc
jo
loop
sbbl
pop
arpl
mov
xor
inc
jmp
or
xor
xor
or
push
cld
test
movsb
ret
decl
cmp
mov
mov
sub
shll
loope
xor
jo
push
stc
xchg
adc
call
cltd
dec
int
xor
dec
mov
clc
cltd
pop
or
pop
enter
leave
inc
sbb
es
movl
push
xor
mov
nop
sub
mov
loopne
aad
das
les
scas
mov
in
mov
inc
fdivs
rcll
sar
loop
ficoms
add
jmp
add
fiadds
inc
mov
push
rcrb
scas
lret
out
cltd
xor
adc
mov
dec
popa
ljmp
pushf
jae
lcall
pop
icebp
loop
jle
dec
mov
fdivrp
movsb
sti
xchg
push
mov
pop
inc
ja
insl
push
jmp
add
iret
outsl
mov
xchg
lds
pop
pop
lock
call
aam
repnz
aaa
mov
cmp
pop
xchg
xor
test
mov
sub
daa
push
out
movsl
cmpsl
or
and
cs
pop
imul
fidivl
pop
pop
cltd
inc
push
jns
dec
sar
inc
in
into
sub
push
push
in
or
and
add
das
inc
mov
jge
out
ud0
or
pusha
adc
pop
sarb
fidivl
lock
sub
jnp
dec
outsb
jbe
sub
xchg
xor
fcompl
adc
jbe
ds
inc
pushf
push
mov
out
jl
js
dec
pop
mov
test
xchg
inc
mov
push
xchg
mov
push
fnstenv
mov
cmc
lea
add
mov
test
scas
pop
cmp
cmp
stc
in
loopne
pop
icebp
mov
xchg
aaa
lods
loopne
mov
fimull
mov
jge
scas
add
xor
shll
ret
cs
and
sahf
stc
mov
lahf
ss
push
out
add
ljmp
add
push
ljmp
imul
mov
mov
xor
loop
mov
std
pop
inc
cmp
loope
in
cmp
out
xor
add
jo
pop
lahf
gs
mov
lock
inc
scas
fists
iret
out
stos
icebp
imul
add
add
cmp
ss
das
sbb
xor
in
aam
push
push
mov
jbe
mov
std
into
dec
xchg
imul
aam
ds
jge
pop
dec
das
dec
push
jmp
mov
not
icebp
add
and
push
ds
pop
imulb
mov
sbb
nop
iret
xor
fstps
fbld
setae
push
pop
lret
dec
filds
gs
and
ss
fadd
dec
pop
testl
cmpsl
or
outsb
frstor
mov
test
add
push
daa
ljmp
ja
sbb
in
nop
pop
jne
cmp
xchg
xchg
jae
cs
jns
sub
push
mov
push
in
pop
adc
push
or
dec
lahf
push
inc
fidivl
jge
xchg
ds
cmpsl
loope
mov
cmp
jbe
bound
inc
inc
pusha
mov
sar
test
cmp
xor
icebp
sbb
cli
shr
inc
xchg
sbb
jae
loop
daa
out
pushf
lods
inc
ret
push
divl
mov
xor
fists
in
mov
mov
pop
and
sub
rorb
ds
test
pop
fstps
ret
decb
and
jecxz
rol
pop
pop
into
cmc
mov
mull
jnp
movsb
mov
ds
in
stos
jmp
fsubl
rolb
stc
cmp
fcompl
fisubrl
xlat
mov
addr16
mov
shll
jnp
adc
mov
outsl
negb
mov
dec
in
lret
jae
in
mov
mov
xorl
xor
call
jmp
or
inc
fldenv
dec
pusha
ss
mov
push
dec
dec
adc
cli
roll
scas
sti
mov
mov
fildll
test
sub
sbb
in
jnp
lods
scas
adc
jl
icebp
fidivs
xor
dec
sahf
sbbb
lahf
sub
popf
mov
cltd
sbb
cltd
push
and
add
jecxz
jbe
popf
adc
cs
repz
xchg
mov
in
into
push
insb
insl
rcll
adc
mov
aad
cmc
or
jb
add
nop
out
or
sub
call
mov
popf
outsl
fnstcw
push
jnp
aad
test
mov
loop
push
jmp
mov
leave
add
arpl
adc
lds
mov
sbb
stc
or
test
pop
adc
addr16
cli
nop
mov
xchg
xor
js
push
push
in
xor
mov
jp
ret
sbb
mov
movsl
jnp
xor
test
fldenv
sub
mov
sub
sbbl
call
aas
sub
cs
ds
cld
fisubrl
xchg
ds
mov
insb
or
cmpsl
jle
add
mov
or
movsl
xchg
movsb
out
mov
inc
sub
jae
add
xor
in
std
in
popf
aas
inc
mov
add
test
xchg
add
lcall
pushf
mov
into
les
aaa
les
rcrl
push
ljmp
sbbb
xchg
xchg
push
sub
adc
mov
ds
push
nop
cmp
mov
pusha
or
aam
cmp
sti
pop
add
inc
leave
lret
or
jno
fldcw
cmpsb
cmp
out
jp
imulb
lds
fisubs
repz
pop
or
xor
or
sub
jp
ljmp
lock
dec
pop
xor
pop
inc
fxch
cs
arpl
jmp
mov
or
push
and
imul
fucomp
inc
jge
jb
data16
push
rorl
xlat
mov
movsb
inc
repz
or
push
stc
xchg
aas
jmp
mov
js
dec
bound
cmp
push
popf
pop
xor
int
push
les
sti
push
loopne
push
mov
dec
psubusb
lds
pop
jbe
xchg
out
sbb
push
jl
aad
jp
in
shll
mov
dec
movsb
lock
notb
mov
push
jnp
js
jle
mov
repnz
insb
add
cmp
and
jl
test
lods
xchg
loope
add
ja
mov
ret
int3
inc
cmc
int3
js
mov
ret
xor
push
jmp
push
dec
loop
cmp
inc
fnsave
pop
sbb
cmp
aaa
or
in
arpl
xchg
lahf
nop
jg
outsl
ret
mov
andl
pusha
stos
test
cmp
sbb
xor
jnp
cltd
imul
pop
xchg
loope
or
jb
ja
fstpt
jnp
lret
xor
push
lea
cli
std
pop
ljmp
jg
leave
minps
in
push
mov
adc
scas
je
xchg
insl
mov
push
push
and
xor
and
add
jb
dec
adc
ja
movb
popa
fadds
int
cwtl
gs
fs
fwait
bound
xchg
xchg
ds
cmpsl
xchg
push
jecxz
out
ret
pop
mov
arpl
sbb
fsubrs
daa
mov
push
pop
cmp
push
pop
sahf
scas
addr16
movsb
jb
test
add
repnz
cmp
sub
in
push
adc
dec
dec
std
repz
leave
add
mov
inc
xchg
xor
fcmovne
das
ret
sbb
pop
pusha
aam
pop
mov
xchg
sti
push
mov
sub
cmpsl
stos
mov
js
pop
ds
das
or
lcall
rol
pop
inc
shl
cmp
insl
icebp
orl
cmp
pushf
popf
dec
mov
cmp
mov
shlb
ror
nop
scas
repnz
arpl
inc
sbb
add
mov
xchg
mov
jmp
inc
sbb
and
fstpt
jo
repz
shll
negl
nop
push
cmc
lret
jne
test
and
cltd
mov
ret
in
xlat
fs
dec
sbb
bnd
xor
imul
jmp
cmpsb
xchg
dec
or
lock
inc
cmp
and
aas
mov
push
out
and
pop
movsl
fiaddl
loope
mov
sahf
dec
dec
xchg
jbe
js
lds
xor
jle
xchg
pusha
push
sti
ret
loopne
push
adc
cmp
insb
daa
js
cwtl
fwait
popf
sti
or
sub
lret
fsubl
inc
push
imul
xor
add
sti
leave
jo
pusha
lret
xchg
push
mov
and
mov
rclb
lds
jmp
mov
pop
mov
add
or
add
jg
in
cmp
icebp
and
jg
mov
xchg
xchg
or
js
test
mov
sbb
imul
rclb
xchg
mov
test
mov
stc
adc
cs
push
stos
sti
cmc
pop
jne
xor
pop
inc
lret
pop
rcl
jmp
or
pop
cwtl
push
ja,pt
repz
shrb
fnstcw
fucomp
jae
sub
ficoml
mov
push
pop
ljmp
push
sub
jecxz
and
jb
in
shlb
adc
out
shlb
adc
repz
jae
pop
lret
pop
je
lods
dec
cmp
fyl2x
mov
arpl
mov
inc
popa
push
pusha
or
push
xchg
lods
incl
cmp
movsb
push
jns
or
dec
sub
pop
hlt
nop
mov
lret
xchg
fldt
mov
add
and
dec
in
in
cmovg
ja
or
out
lea
pop
push
dec
emms
popf
and
push
jne
sub
mov
int
imul
jmp
aaa
movsb
ja
cmp
jp
pop
cmpsb
das
cmp
and
sbb
push
sub
xchg
iret
out
testl
ds
inc
jg
notl
in
pop
adc
cmp
dec
aaa
insb
pop
push
jmp
mov
push
imulb
mov
mov
pop
cmp
inc
push
mov
pop
addr16
dec
cmp
jno
nop
lea
insb
add
xchg
mov
jp
sbb
mov
scas
adc
arpl
or
dec
cmp
ss
je
mov
push
shl
xchg
lret
adc
int3
dec
dec
pop
js
mov
insb
cld
inc
push
and
test
sbbb
jge
out
xchg
in
and
cmp
loopne
pop
call
dec
repz
mov
popa
mov
xor
call
mull
push
dec
lahf
push
sub
push
xchg
xchg
outsb
mov
lods
repnz
push
sarb
sbbb
mov
sti
addr16
xchg
sub
outsl
push
jmp
incb
dec
es
jns
add
dec
testb
aam
lahf
dec
lock
pop
xor
aam
cmp
mov
mov
arpl
cmpsb
es
cli
dec
mov
xchg
fdivl
push
movsl
jle
jns
mov
mov
popa
mov
xchg
push
and
or
adc
inc
mov
xchg
sub
xor
ljmp
push
dec
mov
rol
gs
add
jl
mov
jle
clc
add
and
dec
dec
sub
pop
cld
jle
cmp
in
cmpl
dec
mov
dec
cmc
jns
mov
add
daa
or
mov
shlb
pop
pop
andl
iret
pop
push
or
ret
sub
add
mov
paddb
add
mov
test
leave
fsts
pushf
sahf
cmc
dec
dec
in
adc
and
fs
xchg
das
sub
rcl
sbb
xor
gs
push
dec
rclb
fwait
test
loopne
imul
xchg
imul
int3
ljmp
data16
adcb
xor
and
fs
lds
lret
pop
out
sbb
add
int
test
fcoms
std
dec
inc
pop
call
in
mov
es
mov
inc
cmp
jge
call
sti
inc
and
cmp
and
das
mov
dec
mov
push
iret
daa
les
test
scas
negl
push
loope
cmp
dec
in
mov
lock
imul
mov
mov
pop
dec
add
xor
mov
mov
int
and
push
stc
xchg
aaa
jg
subl
fmull
ror
push
jmp
imul
dec
loopne
pop
lock
ja
mov
dec
cmc
push
sti
xchg
sub
fs
int3
ss
sbb
loope
test
jnp
shrl
pop
in
ja
test
add
fstps
mov
mov
inc
orl
add
stc
mov
add
in
addb
lods
xchg
lds
xor
arpl
leave
cmp
test
nop
xchg
test
mov
sti
dec
xor
mov
cmp
shrb
movsb
add
es
mov
maskmovq
testl
and
adc
repz
sbbb
jnp
addl
outsb
add
ss
pop
and
push
filds
mov
or
adc
xor
xchg
scas
jne
jle
jb
dec
sub
je
dec
dec
add
adc
inc
inc
xor
dec
jmp
push
sbb
inc
adc
xchg
or
jo
xlat
jp
or
mov
test
les
push
mov
lea
mov
mov
dec
sub
addr16
adc
or
shrb
inc
pop
push
montmul
cmpsb
test
sub
jne
sbb
test
bound
xchg
ja
cmp
or
sub
xorb
or
cld
cmp
or
pop
repnz
pop
and
pop
jmp
or
fildl
and
sbb
and
outsb
fwait
not
jo
insb
iret
sub
add
jae
xchg
mov
push
jmp
or
pop
cmp
fidivs
jne
lahf
push
xchg
adc
clc
je
sahf
stos
pop
and
and
pop
ficoms
push
inc
push
mov
in
jbe
test
nop
cli
pushl
daa
xor
pop
lock
push
jo
iret
mov
sbb
ljmp
hlt
pop
inc
jno
jae
xchg
mov
sbb
jle
shlb
enter
insb
sub
ret
imul
xchg
nop
or
mov
stos
add
adc
sbb
sub
dec
call
or
arpl
cmp
mov
lahf
cmp
push
lcall
add
pop
lret
mov
and
insl
call
pop
sarb
xchg
test
stc
nop
jns
mov
mov
dec
mov
jb
movsl
in
bound
add
addr16
shrl
mov
mov
mov
mov
xchg
and
push
aas
and
dec
xor
pop
push
mov
push
sub
out
movsb
xchg
adc
jae
mov
movsl
loop
adc
into
popa
rol
mov
loope
loopne
pushf
pop
cmp
xchg
add
push
orl
leave
push
mov
leave
dec
mov
xor
cwtl
mov
cltd
pop
or
call
jb
dec
mov
mov
xchg
sbb
out
cmpsb
mov
mov
inc
pop
cmp
pop
loop
sbb
dec
xchg
mov
daa
iret
dec
jg
lahf
cs
cmp
push
nop
aaa
insb
mov
nop
andl
push
jns
pop
push
adc
dec
sub
data16
sub
pop
inc
xchg
test
sub
pop
nop
adc
dec
sub
mov
inc
stos
imul
and
nop
adc
inc
jne
js
sbb
popa
in
sbb
inc
sub
dec
mov
inc
mov
mov
cmp
outsb
loope
out
rolb
scas
and
or
les
fildl
dec
add
sbb
sbb
mov
das
and
cli
xchg
imul
leave
insl
scas
addr16
adc
sbb
jp
mov
dec
push
and
xlat
pop
xor
popa
push
pop
mov
pop
mov
popa
sbb
ds
clc
sarb
dec
lods
inc
mov
fnstcw
jecxz
aad
mov
mov
sbb
push
bound
add
add
cmpsl
push
mov
xchg
dec
cmc
in
sub
cmp
popa
mov
pop
lea
mov
shll
adc
sbb
cmp
and
std
lods
hlt
mov
sbb
xor
fldcw
mov
jg
stos
mov
rolb
adc
xchg
xor
inc
loop
bound
jmp
mov
repz
xchg
popf
ret
in
ret
xchg
aaa
add
clc
ret
fwait
lea
xlat
outsb
int
dec
inc
shrb
leave
jno
xchg
andl
lret
je
push
jmp
fsubl
jo
pop
std
and
cmp
out
sub
repnz
out
popa
out
je
xchg
xlat
jg
fsubs
test
addr16
pop
xor
pop
add
movsb
or
cmpsl
imul
jle
sbb
lahf
xor
fsubr
jnp
aas
jl
cmp
repz
shrl
dec
and
jp
jnp
fcomps
pop
hlt
popa
push
jae
stc
roll
cmp
shrb
aas
insb
and
test
stos
or
fdiv
lods
dec
inc
jnp
mov
lahf
out
fsubl
xor
add
cmpsl
xor
leave
jns
jg
stos
pop
sub
rcrl
and
lahf
lcall
bndstx
cmp
inc
test
push
rorb
mov
pop
jno
dec
mov
loopne
add
push
and
ja
and
mov
sbb
popf
rorl
sbb
cmp
or
inc
mov
lods
or
sub
clc
pop
and
jb
pushl
mov
xor
enter
lret
adc
mov
loopne
add
lock
imul
shl
inc
push
clc
or
sbb
mov
lods
dec
int3
shlb
insb
daa
sbb
sub
jnp
inc
test
aas
lret
iret
inc
or
xchg
and
movsb
movsb
xor
push
xchg
repz
into
xor
adc
sub
or
jbe
inc
xchg
jge
jne
in
jne
lods
mov
xchg
jg
jb
xchg
mov
xchg
jbe
mov
adc
and
push
lret
cmp
push
js
xchg
cmp
dec
imulb
stos
xchg
insl
add
cld
shr
adc
je
in
sbb
cmp
adc
fdivrs
leave
or
adc
adc
jnp
scas
mov
out
dec
pop
hlt
aam
loope
add
lcall
stc
mov
ficoml
pushf
loopne
pop
push
cltd
inc
inc
lods
sti
mov
adc
cmpsl
movsb
mov
inc
mov
pop
dec
stos
mov
sub
dec
loopne
int
mov
hlt
cmp
sarl
iret
dec
inc
arpl
cmpsb
jle
xchg
sbb
addb
push
mov
jno
mov
cmp
call
jo
mov
repz
in
sub
loop
iret
sub
adc
lods
jns
or
out
sub
insl
mov
mov
mov
aam
jne
jo
stos
shlb
leave
push
aaa
sub
dec
xchg
dec
cmp
xlat
icebp
bswap
mov
ror
mov
arpl
xor
xlat
pop
out
or
in
daa
mov
push
fldenv
mov
lods
arpl
pop
gs
ss
pop
int
hlt
incb
inc
xchg
jns
enter
fsts
ret
jnp
aaa
jo
jb
fadds
dec
pop
or
jle
xchg
popa
testb
pop
jae
mov
cmp
sahf
imul
and
movsl
xchg
dec
jns
lods
ror
in
ss
insl
push
test
mov
ret
xor
incl
push
pusha
das
inc
fidivl
shr
push
in
pusha
add
mov
add
xchg
xchg
sbb
pop
shll
insl
xchg
inc
enter
mov
mov
and
inc
sarb
aas
mov
fs
push
inc
pop
xchg
cs
int
xchg
pop
addr16
pusha
add
mov
fstpt
movb
loop
xchg
pushf
pop
test
add
es
mov
mov
dec
xlat
out
inc
pop
inc
hlt
popl
adc
inc
cwtl
pcmpeqw
pop
mov
fsubl
ret
lods
lcall
movsb
out
and
sahf
sub
lret
adc
add
popa
jb
mov
data16
pop
or
xchg
subb
mov
notl
test
sbb
fnsave
jb
mov
ficompl
add
daa
inc
dec
int
adc
sbb
popa
sbb
mov
stc
push
add
mov
rcrl
out
std
scas
pop
pop
inc
fisubrl
enter
and
incb
dec
shl
in
mov
sti
push
add
cli
inc
aaa
jne
sbb
aaa
inc
out
gs
pop
pop
sbb
mov
pop
test
shll
in
cli
sbb
out
scas
mov
pop
dec
sbb
imul
jge
insb
cmpsb
dec
out
or
movsl
dec
xchg
dec
popf
sbb
dec
cmp
stc
popf
test
in
test
aad
jecxz
into
das
es
outsl
mov
sahf
inc
or
call
jl
ljmp
ret
push
jbe
jne
scas
mov
es
outsb
pop
hlt
fidivl
hlt
out
cli
mov
sbb
scas
xor
dec
out
jns
cld
xchg
sub
mov
mov
push
inc
jns
adc
xchg
lea
push
idivb
in
jns
and
sahf
cs
jns
mov
cwtl
adc
adc
xchg
inc
mov
jno
call
mov
push
insb
add
sahf
xchg
cli
cltd
push
fnstsw
add
ror
ret
jmp
push
sbb
mov
xchg
cmp
xor
cmpsb
shlb
mov
es
sbb
inc
data16
daa
jle
shll
cs
jbe
imul
sbb
adc
mov
test
in
ret
add
movl
jmp
mov
sar
in
xchg
daa
cwtl
movb
xorb
gs
or
stos
xchg
or
inc
sub
je
int
test
jne
dec
mov
or
xor
rep
mov
fiaddl
mov
loope
ljmp
mov
in
loope
es
mov
lahf
test
iret
or
push
call
inc
sbb
outsb
and
mov
jle
jns
mov
adc
adc
and
inc
adc
popa
jbe
adc
cmpsl
jno
mov
and
xchg
or
movsb
repnz
popf
shll
test
stc
je
sti
mov
push
mov
pop
aad
xchg
call
pop
nop
data16
push
lret
cmp
ret
popf
lods
xlat
out
sarl
fbstp
ret
xchg
add
or
cmpsb
mov
pop
mov
sbb
add
mov
in
push
inc
xchg
das
inc
leave
popfw
sbbb
push
js
mov
xchg
adc
test
daa
or
xchg
dec
cmp
adc
dec
dec
sub
mov
psrlq
insb
sub
mov
mov
mov
mul
push
mov
mov
int3
add
icebp
loopne
mov
fsubrp
xchg
ljmp
sub
out
jl
pop
pop
xor
adc
lahf
dec
sbb
insl
and
pop
shlb
inc
push
cltd
f2xm1
repz
adc
or
push
repz
arpl
iret
inc
loop
icebp
mov
jle
pop
add
and
mov
into
hlt
mov
pop
enter
shlb
mov
scas
fwait
insl
push
in
pop
xchg
rcr
and
repnz
loop
lret
mov
sbb
sub
xor
bound
outsl
push
cmp
pop
mov
in
out
fdivrl
jno
int3
add
mov
mov
jne
sub
js
mov
mov
dec
mov
adc
leave
push
je
movsl
cmpsl
ljmp
mov
jo
lret
cmc
mov
jae
mov
mov
xchg
pop
xchg
xor
fs
dec
addr16
clc
sahf
cli
inc
cmp
cwtl
call
je
das
dec
jecxz
fstpt
cmpsb
data16
or
jae
mov
push
xchg
stos
cmp
repz
popf
and
sbb
lret
ds
or
xor
xlat
repz
mov
cmp
pusha
notl
push
mov
pop
imul
jns
std
xchg
dec
sbb
sub
repz
cmp
andl
negb
add
rcll
cmpsl
add
dec
fbld
dec
adc
sbb
push
xchg
out
enter
or
pop
dec
or
mov
cs
or
cltd
mov
sbb
shll
outsb
mov
fs
and
cmpsb
popa
jae
shlb
inc
xor
int
daa
jge
imul
or
xor
ljmp
mov
dec
das
push
out
xor
push
imul
out
out
scas
jo
xor
mov
or
dec
or
pusha
gs
test
inc
cli
push
xchg
pop
dec
cli
or
jo
xchg
scas
ds
in
repz
xchg
fnstenv
scas
ret
rcl
pop
push
call
cmp
and
mov
fsts
sub
sti
das
addr16
aas
cltd
pop
mov
mov
mov
inc
inc
fdivr
mov
scas
mov
in
test
mov
mov
adc
xchg
loop
cmc
pop
fisubs
mov
mov
cmp
jp
cld
or
xchg
sbb
add
dec
push
rcrb
cmp
lods
xor
imul
cmp
popa
loopne
pop
mov
mov
jbe
arpl
aad
mov
popa
icebp
or
lods
sti
int3
and
inc
arpl
sbb
into
repz
bound
leave
lods
out
mov
cmpsb
movl
fldt
xlat
insb
and
xor
imul
mov
or
jne
add
and
sti
sbb
out
cld
insl
sub
mov
cmp
add
jb
dec
and
sti
fwait
jg
cmp
inc
xor
in
cmp
paddb
ljmp
rorl
outsl
sahf
popf
mov
popa
sub
ret
sbb
rcr
xchg
outsl
jns
mov
subl
unpckhps
xchg
cs
test
pop
xlat
and
jnp
xor
lds
jns
adc
push
xor
cli
int
fdivrl
jne
fnstcw
out
mov
inc
pusha
std
leave
pop
cmp
pop
lods
addl
or
push
out
inc
pop
cld
jae
loopne
mov
xor
add
out
mov
fdivrl
cmpsl
js,pt
mov
das
dec
data16
fsubrs
jle
jb
fidivrl
repz
inc
mov
aaa
int
add
xor
inc
stos
bound
cmpb
hlt
push
jmp
dec
sbb
aad
lds
jo
insl
daa
lcall
inc
cwtl
push
push
add
sti
in
sbbl
adc
mov
repz
aad
xlat
cmp
out
push
daa
loop
fnsetpm(287
ja
outsb
inc
pop
adc
push
add
int3
sbb
cmp
cmp
dec
in
in
push
sub
aam
push
call
pop
jle
pop
sahf
mov
es
push
lcall
sbb
dec
mov
pop
jnp
aad
inc
mov
cwtl
mov
fistpll
adc
xchg
call
outsb
lds
fwait
jbe
dec
add
es
mov
push
pop
lods
and
hlt
ja
aas
adc
lods
mov
jns
sbb
in
cmpsl
stc
cmp
xchg
mov
mov
jg
xchg
insl
loop
pop
mov
sub
push
and
xor
imull
pushf
outsl
xlat
sbb
jp,pn
rcl
mov
sub
mov
xchg
cmp
outsl
dec
in
fldt
insl
mov
repz
out
cmp
dec
ret
aad
xchg
mov
loopne
dec
cmp
pop
int
scas
sbb
sbb
push
ljmp
xor
hlt
inc
ss
int3
pop
ss
xchg
mov
mov
xor
inc
jnp
cwtl
lret
mov
pop
arpl
xchg
mov
andb
in
ds
cmp
cmp
ret
mov
sub
sahf
loopne
cmpsl
sub
mov
enter
lcall
das
add
ficoms
mov
xchg
out
aas
or
mov
shrb
pslld
outsb
lret
push
jns
pop
sbb
mov
scas
inc
push
cli
add
cld
int3
xor
sub
pop
mov
mov
in
ja
and
sbb
xor
or
cs
out
fistl
mov
cld
mov
cs
fdivp
mov
mov
cmp
dec
mov
add
mov
stos
movsl
mov
bound
add
or
mov
jle
dec
mov
enter
xchg
out
mov
adc
cmp
inc
bound
icebp
fnstsw
cmc
push
sbb
and
inc
shrl
std
mov
add
xlat
cs
mov
hlt
jl
jmp
or
pop
xchg
xor
stc
pop
mov
pop
push
mov
or
push
add
adc
lret
movsl
cltd
and
popa
dec
adc
push
xor
or
enter
sti
push
cmp
mov
pop
pop
cmpsb
arpl
push
dec
jmp
out
adc
and
imul
shll
adc
inc
push
cwtl
jne
lcall
push
inc
xchg
sub
cli
test
jae
mov
decb
mov
jp
push
mov
cmp
addr16
inc
ljmp
pop
or
ret
sub
pushl
std
adc
xchg
sbb
call
lcall
stc
divl
fs
cld
adc
mov
cltd
jbe
in
pushf
inc
jb
dec
andb
lea
shr
mov
mov
in
fwait
test
inc
inc
in
les
and
mov
mov
int3
test
lods
and
mov
inc
loope
dec
xor
fldt
mov
outsl
jnp
fistps
or
xchg
repnz
push
cmp
inc
out
mov
ljmp
decb
repz
dec
gs
jp
rcr
and
mov
cwtl
xor
lods
mov
xchg
test
iret
int
pop
sahf
scas
rcll
arpl
push
jb
cmp
lahf
loope
iret
jnp
mov
lds
inc
rol
fiaddl
adc
mov
in
adc
mov
push
fcoml
frstor
cli
fidivs
movsl
frstor
mov
test
xor
insl
hlt
mov
adc
negb
fbld
fisttpll
arpl
dec
xor
mov
mov
ftst
jl
ljmp
dec
out
cmc
cmp
xor
jne
mov
test
mov
pop
in
sti
sahf
clc
xor
mov
out
and
add
jne
or
cmp
mov
inc
dec
mov
cltd
or
mov
jle
test
test
pop
lret
jno
pop
add
clc
cmp
and
mov
ret
add
in
jg
or
addr16
lret
lret
push
out
push
pop
ds
bound
sbb
in
std
lods
pop
imul
adc
and
xor
jae
dec
dec
rcl
push
scas
cmc
out
jecxz
pop
xchg
xor
stc
mov
enter
mov
jp
je
sub
fcoms
xchg
addr16
leave
cmp
fwait
scas
scas
fwait
cmp
imulb
in
cmp
popf
clc
jae
test
test
stos
adc
sub
stos
push
jbe
inc
gs
popf
popa
adc
cwtl
in
mov
mov
nop
das
iret
aas
ss
pushw
popf
xchg
dec
daa
int
js
push
jmp
or
outsl
scas
sbb
les
fisttps
or
xchg
pop
mov
seta
and
orl
popf
dec
lret
mov
or
adc
cmc
pop
loop
cwtl
mov
mov
sbb
cmp
pop
cld
cmp
pop
out
pop
xchg
loopne
in
dec
ficoml
cmp
lock
stos
mov
mov
call
dec
lods
mov
adc
xchg
pop
imull
sbb
mov
lock
addr16
pop
enter
ret
sub
ret
in
push
mov
ja
push
into
add
or
pop
cltd
sub
test
aas
dec
stc
inc
xchg
pop
loopne
sbb
bound
dec
out
adc
insl
dec
xchg
mov
lcall
lret
in
outsl
movsl
scas
mov
xlat
shr
clc
movsl
inc
pusha
shrl
jg
fwait
xchg
std
jae
sub
sub
ss
jmp
notl
andb
or
inc
stos
mov
addb
cmpsl
jo
cs
in
xchg
rcll
inc
cwtl
mov
popa
xor
int
js
add
push
pop
add
adc
jmp
in
test
sahf
add
xor
out
xchg
push
and
push
jae
orl
inc
rol
in
dec
push
sbb
or
mov
mov
les
lods
inc
sahf
popf
cmpsl
pop
repnz
in
add
jns,pt
test
xchg
xor
cmp
inc
or
pushf
or
daa
sahf
popa
mov
popa
add
dec
jnp,pn
sbb
and
lock
jbe
pop
imul
xorl
mov
stos
push
sbb
int3
mov
imul
xor
mov
add
aam
sbb
xchg
mov
jp
inc
mov
sbb
and
insb
aaa
xchg
and
les
add
dec
cmp
xchg
outsl
dec
repnz
loop
xor
jle
cmp
jae
pop
lods
sbb
paddb
mov
xlat
jmp
lret
sbb
xchg
mov
adc
test
cmp
jne
outsl
iret
xorl
mov
push
lret
ljmp
into
pop
mov
mov
pop
cmp
in
mov
scas
insb
dec
loope
testb
mov
movsb
popa
add
cmp
xor
jecxz
sbb
mov
and
leave
sub
lret
jp
fcomi
shrl
cmp
mov
scas
dec
mov
stos
in
out
jp
sub
test
mov
cmp
out
fistpl
repz
in
scas
pop
push
inc
lock
je
and
mov
test
dec
xor
addr16
arpl
inc
in
jl
fisubrs
adc
cltd
dec
add
pusha
lahf
sub
push
jle
repz
out
mov
test
cli
pushf
jo
gs
imul
ficomps
pop
adc
outsb
push
loope
lcall
popf
add
and
mov
fwait
sbb
arpl
aas
pop
sub
pop
and
xchg
cwtl
imul
es
fwait
inc
mov
cmp
ret
sti
dec
mov
sarb
inc
sub
pop
aam
mov
lret
es
out
inc
lcall
inc
push
loopne
les
or
mov
je
mov
pop
fs
add
push
xor
pop
inc
sub
push
fidivrl
push
repnz
mov
and
inc
and
lahf
enter
dec
mov
test
mov
jnp
stc
xchg
stos
fadds
mov
cmp
dec
jb
and
pusha
sub
inc
sti
cmpsl
mov
sub
imul
jns
push
add
data16
xchg
mov
add
dec
add
aad
test
and
daa
or
adc
stc
inc
mov
je
imul
mov
xor
push
je
push
push
cmpsb
pop
int3
mov
loopne
or
dec
mov
adc
mov
or
mov
pop
loope
sub
mov
sub
push
sub
sbb
xor
jge
cmpsl
sarb
dec
inc
out
mov
fsubs
adc
cmp
popa
push
scas
mov
fisttpl
fldl
mov
sbbb
mov
xor
sbb
mov
lods
sub
sbb
jb
sarb
push
xor
xchg
in
xchg
adc
xchg
mov
jle
mov
sbb
push
out
push
lods
pop
or
sar
and
test
or
je
ficoml
aas
cmp
xchg
fmull
mov
xlat
mov
leave
pop
inc
sub
jge
fdivrl
mov
xlat
xchg
sub
mov
xchg
sub
fs
leave
push
jo
orb
cmp
test
inc
out
jg
and
mov
push
sbb
bound
adc
push
pop
xchg
pop
test
ret
loop
cmp
pop
inc
push
sub
and
mov
add
pop
mov
sub
or
xor
adc
cmc
inc
cmp
notl
in
pop
jmp
in
or
dec
cmp
push
pop
shll
cmp
inc
pop
test
jb
pop
mov
cmp
cmpl
jae
or
fadd
daa
fcoms
lret
sbb
rolb
pop
insb
cli
xchg
int
push
inc
inc
jl
push
pop
sbb
push
xchg
cmp
xor
xchg
jecxz
subb
inc
adc
jmp
aam
int
adc
test
mov
and
jno
aad
or
lret
mov
icebp
das
dec
dec
dec
ss
into
jge
nop
fwait
clc
and
push
inc
adc
inc
daa
int3
sub
adc
xchg
dec
stc
pop
xor
dec
cmp
mov
mov
mov
mov
in
and
mul
or
pop
jb
lret
shrb
stc
pop
mov
cmp
cmp
xchg
or
fsubrl
or
mov
adc
mov
rcrb
fsubrp
js
push
xchg
js
sub
aaa
inc
mov
and
inc
lea
cmp
out
pusha
ja
imul
mov
pusha
jmp
mov
add
pop
in
xor
cmp
sub
clc
hlt
xor
and
cmp
cmp
mov
imul
cmp
imul
mov
dec
movsl
int
test
pop
lret
push
push
vpandn
dec
ficoml
shl
testl
adcl
lds
loopne
mov
ds
fidivl
lret
inc
rorb
lods
sbb
movl
fxch
mov
scas
nop
shrb
push
mov
pop
sbb
xchg
mov
cwtl
imul
or
add
movsb
lret
sbb
mov
jle
call
and
push
push
mov
fisttpl
loop
pop
xchg
fists
loopne
dec
fmull
xchg
cs
or
inc
loop
jne
mov
push
mov
mov
dec
std
js
xorb
out
aaa
push
in
stos
arpl
jb
and
insl
mov
roll
stos
inc
xor
das
xor
fisubl
popa
sub
loope
xchg
or
out
push
repnz
mov
out
mov
mov
mov
add
mov
fs
int3
notb
push
cli
or
mov
sbb
ret
inc
stos
xchg
add
push
jbe
xor
andb
lret
mov
pop
and
ljmp
insb
pop
and
insl
fcmovnbe
daa
add
in
addl
scas
inc
add
sbb
lcall
cmp
xchg
cli
xchg
sbb
xchg
mov
call
sti
mov
add
aas
cld
sbb
dec
xchg
es
pop
xlat
aad
shll
repnz
fiadds
clc
insl
add
icebp
out
xchg
lods
and
out
daa
cld
push
pop
iret
rol
sti
test
ds
sub
das
jbe
iret
out
mov
mov
rolb
xlat
sub
in
dec
aaa
dec
jnp
js
inc
movsl
or
xchg
cmp
jb
js
sub
test
data16
arpl
inc
and
push
ljmp
divb
or
mov
scas
jo
out
dec
pop
xor
inc
dec
xchg
mov
out
cmp
mov
ds
inc
int
inc
jle
jmp
pop
imul
cmpsl
sbb
sti
repnz
or
xchg
adc
int3
stos
or
push
lret
test
mov
data16
inc
je
cli
mov
pop
jle
mov
lahf
loop
xchg
push
xor
out
or
mov
sbb
pop
dec
pop
xor
adc
mov
clc
jg
inc
ret
fnstsw
cmpsl
push
leave
fwait
pop
pop
pop
adc
aaa
cmp
lea
pop
jne
dec
and
jbe
cmp
dec
inc
addr16
xor
jno
adc
lods
inc
jbe
jl
arpl
icebp
mov
and
mov
sub
or
dec
std
cmp
cltd
out
test
jle
test
pop
lahf
sbb
out
mov
cltd
test
pop
call
outsb
das
mov
cmc
inc
or
cmpb
push
adc
jecxz
mov
cmpsl
ss
sbb
push
add
xchg
add
mov
loopne
pop
mov
shll
sbb
xchg
mov
jle
jo
js
mov
std
out
fisubs
adc
jns
outsl
es
cmp
nop
lret
cmp
adc
ljmp
sarl
rolb
sbb
xchg
getsec
stos
test
and
into
cmp
sbb
dec
stos
fimuls
pop
jb
mov
sub
adc
imul
daa
loop
mov
add
mov
ds
mov
loopne
inc
loop
xor
sbb
push
xor
adc
fstpl
pop
lahf
jle
ds
out
inc
adc
repz
xchg
cmp
push
aad
pop
mov
inc
call
pop
lcall
mulb
out
pop
push
stos
and
test
add
fistpll
mov
mov
cs
popa
push
addr16
and
dec
leave
pop
pop
arpl
imulb
pop
cmpsb
lock
or
test
lret
push
lcall
bound
addr16
stc
xchg
cmpsl
cwtl
dec
into
mov
pop
bound
lock
fwait
movl
mov
cmp
sub
icebp
cli
jo
ss
pop
scas
popf
and
and
inc
xchg
sbb
and
push
adc
insb
mov
loope
mov
mov
jne
cmp
stc
je
push
pminub
jge
out
enter
aaa
mov
pop
pop
lods
or
mov
and
jle
push
test
movsb
pop
daa
inc
shl
mov
mov
dec
push
xor
sti
dec
jmp
loop
cwtl
aas
shll
inc
fwait
cmpb
mov
and
cmc
inc
ret
adc
dec
add
push
inc
stos
cmpsl
sbb
icebp
enter
xchg
out
es
ret
and
scas
insl
lds
add
jns
gs
mov
in
cmpl
push
cwtl
js
inc
xrelease
imul
mov
mov
and
pop
sub
lods
mov
lods
jge
mov
les
dec
test
sti
and
cmp
test
loopne
push
add
inc
adc
cmp
insl
loope
addr16
or
mov
jb
clc
or
dec
sub
dec
jb
dec
cltd
jae
in
call
xlat
jmp
or
or
movsl
movsl
lcall
jmp
aaa
add
adc
xchg
cmc
pop
cld
xor
dec
jno
mov
mov
ss
xor
or
sbb
lock
jecxz
xor
mov
jle
jno
sub
out
lea
jmp
test
jp
outsb
outsl
jl
sbb
cmp
pusha
inc
dec
sbb
mov
push
xchg
cmp
out
cli
gs
sub
gs
or
sti
jbe
enter
nop
add
lret
sub
push
lea
imul
bound
inc
cmc
adc
aam
popf
in
iret
mov
cmpsb
add
xor
cs
push
push
js
movsl
popf
mov
mov
inc
mov
xchg
ljmp
test
sub
test
adc
cs
je
cmp
jae
lea
push
mov
cli
jge
das
aad
pop
add
add
fstl
and
in
test
hlt
pop
xchg
jmp
stos
xchg
rcrb
pop
ljmp
insl
aam
xchg
mov
cmc
hlt
mov
pop
cmc
in
mov
je
call
xchg
push
stos
adc
dec
les
or
and
xlat
outsb
test
lret
lret
jmp
xor
jno
cltd
pusha
cmp
xchg
je
ret
mov
adc
mov
mov
adc
xlat
push
insl
aam
psubusw
imul
out
cmpsl
pop
addr16
push
test
cmp
cmp
int
roll
mov
cmp
sbb
adc
cmpb
and
xor
rcrb
and
fbstp
dec
cmpsb
clc
or
out
push
call
inc
jnp
fwait
and
mov
adc
and
aas
mov
jecxz
ret
je
lods
mov
leave
das
outsl
nop
test
push
dec
loopne
aas
in
sbb
stc
xor
mov
scas
cli
clc
hlt
mov
xor
add
fbstp
cmp
int3
fiadds
push
sbb
xchg
push
cmp
xor
aaa
into
test
xchg
rcl
mov
lret
bound
xchg
testl
cmpsb
loopne
ficoms
mov
in
lea
inc
push
ret
ret
jae
test
jno
or
cmp
fdiv
cmp
pop
ds
dec
sub
push
sub
xchg
add
in
sbb
adc
mov
dec
adc
out
addb
ror
mov
icebp
fucomi
and
inc
cmpsb
mov
stos
stos
dec
lret
bound
bound
and
incl
xchg
jmp
jge
pop
lea
jp
movsb
cmpsl
dec
repnz
dec
xor
lret
cmp
push
repz
push
cli
xchg
mov
pop
sbb
sbb
and
pop
test
dec
out
mov
mov
push
mov
fisubs
fwait
cmpsb
mov
arpl
enter
cwtl
pop
push
es
pop
test
fiaddl
cmpsb
mov
cmp
jecxz
adc
rcrb
out
jp
outsl
lods
fsubrl
add
pushf
test
sbb
nopl
outsl
push
adc
lea
mov
jno
and
or
mov
inc
ja
adc
mov
test
pop
icebp
gs
call
adc
mov
outsb
stc
cmp
mov
sbb
les
pop
jnp
jo
push
xchg
in
lret
mov
push
imul
push
sbb
stos
push
cld
negl
dec
sti
lods
and
jecxz
xchg
adc
jge
pushf
in
testl
mov
push
rorb
mov
jne
fistps
in
add
pop
jo
adc
xchg
lret
out
aas
fbld
sbb
mov
clc
xor
syscall
xor
adc
jle
mov
data16
aam
mov
xchg
lods
stc
sahf
das
iret
sbb
xchg
jo
shrb
lahf
add
add
scas
and
stos
push
inc
pop
icebp
mov
pop
or
cs
clc
or
fdivrl
test
sbb
stos
es
divl
clc
mov
and
add
fmuls
sub
jo
in
fsubrl
lds
scas
stos
bound
pusha
dec
xor
stos
mov
push
dec
mov
lcall
cwtl
pop
dec
adc
addl
aad
push
pop
les
outsl
adc
cmp
addr16
or
push
cmpsl
xor
xchg
or
mov
mov
jg
mov
push
ljmp
icebp
fnstenv
decb
inc
inc
sbb
xor
jbe
fcoms
inc
loop
or
out
sbb
mov
int3
xor
mov
out
in
in
mov
popl
test
adc
push
xlat
cwtl
das
or
xchg
insb
sub
loope
pop
shlb
sbb
cwtl
das
cmp
cmp
out
cltd
push
inc
cmp
rorb
inc
lret
fmulp
mov
mov
leave
iret
fsqrt
or
iret
lcall
xor
roll
mov
or
inc
stos
sub
iret
sbb
and
inc
pop
or
leave
outsb
dec
jg
clc
nop
stos
sbb
cs
int3
pop
bnd
xchg
dec
inc
lahf
pop
jo
outsl
xor
add
jmp
fidivrs
or
mov
push
adcb
out
into
sbb
sbb
call
adc
jae
mov
mov
stos
fldenv
rclb
mov
xor
fidivrs
adc
push
rorl
mov
cmp
lods
scas
into
pop
cmp
adc
push
popf
cltd
inc
push
jo
adc
loopne
aad
sbb
sub
fildll
lcall
std
inc
sub
pop
cs
mov
mov
dec
rclb
mov
sub
mov
pop
addr16
mov
fstps
pop
jecxz
mov
jecxz
aam
std
call
cmc
pop
insb
xlat
movsl
xchg
in
xchg
mov
push
jnp
mov
cmp
test
pushl
sub
addr16
push
mov
or
cmp
imul
and
xchg
js
inc
pop
lcall
and
and
and
int3
or
loop
rcll
icebp
loope
jmp
cld
stos
stos
cmp
orl
inc
pop
xor
adc
dec
sbb
add
fwait
addr16
nop
je
adcb
push
sbb
aam
orb
in
adc
fnstsw
jno
or
imul
push
cli
ja
mov
lea
push
xchg
cmc
sbb
mov
adc
aam
loope
pop
into
mov
andl
push
push
ljmp
cltd
xor
lods
xchg
sub
sub
mov
jmp
or
add
nop
daa
inc
mulb
mov
sub
jl
jnp
dec
xchg
hlt
xchg
push
out
iret
sub
aaa
adc
push
subb
ja
sub
mov
out
stc
jl
loop
sbb
pop
sbb
andb
inc
jb
out
pop
push
push
push
push
mov
fucomp
shrb
push
daa
mov
cmp
inc
push
repz
dec
sub
rol
call
fadd
push
pop
dec
adc
jg
nop
sbb
fbstp
push
and
arpl
jae
push
in
orb
xchg
add
int3
lods
sbb
or
pop
sub
mov
pop
jno
fstps
arpl
subb
adc
pop
int3
mov
jns
or
sarb
stc
pop
ror
shlb
insb
fisubrl
mov
addl
sub
adc
mov
or
adc
xor
sub
push
out
cwtl
dec
sub
push
ljmp
push
aas
dec
mov
leave
movl
icebp
adc
mov
pusha
rorb
scas
cmc
mov
sub
add
inc
push
mov
es
mov
add
addl
negb
dec
mov
lea
push
lds
and
lds
jno
ljmp
inc
leave
sbb
cmpsb
loopne
jb
push
inc
scas
xchg
mov
mov
lcall
xchg
push
or
sbb
mov
xchg
cltd
lods
inc
mov
jmp
fildl
jmp
lods
xor
notb
dec
xchg
icebp
pop
and
lcall
jbe
mov
bound
xchg
mov
test
fistpl
aad
mov
push
xor
insl
jnp
testl
gs
push
cmpsb
rcrl
test
pop
xor
bound
lea
scas
lds
adc
lahf
jae
into
insl
xchg
lods
push
addr16
call
repnz
sub
scas
mov
imul
inc
hlt
or
loope
xchg
push
ss
xor
repz
lods
jmp
fisubrs
sahf
jecxz
arpl
divl
mov
jo
lock
inc
and
fcomi
hlt
push
lcall
push
addr16
pop
xor
xchg
sub
mov
jb
nop
jae
hlt
mov
xchg
mov
mov
mov
cpuid
imul
dec
add
sub
inc
aaa
clc
subb
jmp
dec
shll
inc
rol
sub
pop
push
or
cltd
sub
fnsave
test
std
cmp
dec
pop
and
lret
inc
add
sbb
movsl
dec
scas
push
hlt
mov
and
test
fwait
mov
dec
insb
mov
add
js
or
sub
mov
orb
repz
cld
data16
fmulp
jp
push
lahf
ret
dec
arpl
fwait
nop
inc
and
inc
fnstenv
mov
jbe
mov
jo
mov
aas
dec
xchg
fisubrl
nop
and
test
stos
fwait
add
mov
and
sbb
xor
loopne
pop
sub
adc
mov
jl
out
add
ds
les
mov
fdivl
xchg
ret
jle
mov
xchg
call
int
adc
jbe
jns
outsb
in
inc
in
push
push
ret
std
mov
ret
popa
cld
jnp
sbb
faddl
into
xor
cmc
xchg
mov
mov
and
adc
xchg
jg
hlt
cltd
aaa
and
jl
and
push
and
mov
adcb
xchg
cwtl
or
in
das
es
push
and
jp
sti
scas
std
shll
repz
clc
xorb
add
mov
dec
inc
jge
jmp
sbb
push
movsb
mov
cltd
andl
pop
dec
lret
mov
enter
or
mov
popf
orl
scas
adc
orl
jle
dec
insb
in
jl
pop
shll
icebp
mov
cmp
lea
rcr
mov
push
mov
jbe
insb
pop
xor
in
sub
mov
inc
jbe
ret
mov
xlat
shrb
sahf
cmp
call
cmp
movsl
sbb
rorb
adc
sub
lahf
ficoms
int3
ret
ret
aas
or
xor
mov
inc
jle
aad
fsubl
and
popf
pop
push
lret
cmp
jb
mov
fldenv
adc
scas
test
push
cmp
pop
test
fildl
loope
add
cmp
mov
cwtl
and
xchg
repz
sub
stc
push
ds
inc
or
addb
fstpt
int
mov
repnz
insb
rolb
dec
xor
inc
fxch
sbb
mov
fidivrl
inc
das
or
int
int3
lods
fldcw
gs
lret
cmc
pop
xchg
pop
mov
ret
inc
decb
cmp
aam
lcall
xchg
arpl
popf
icebp
sbb
imul
popa
cmp
xchg
xor
dec
pop
stc
mov
icebp
pushf
pop
movsb
fdivrs
pop
or
mov
push
scas
mov
and
mov
scas
push
lods
xchg
pop
push
ss
push
pop
mov
push
mov
mov
loop
lret
add
inc
xchg
jo
repz
lret
cmp
cmp
push
jb
cmpsb
xchg
int
mov
mov
gs
imul
adc
iret
gs
mov
leave
bound
sbb
mov
sbb
jmp
pop
fdivp
int3
std
movsb
fidivrs
pop
sub
add
mov
dec
repz
xchg
jp
dec
jmp
cmp
jmp
xchg
mov
aas
mov
test
mov
loop
mov
mov
adcl
scas
bound
xchg
pop
mov
movsb
push
test
jmp
mov
imul
and
cmpsl
mov
adc
lods
push
int3
rol
and
dec
push
stos
into
xor
push
push
push
push
imul
inc
fstps
xchg
pop
jp
ljmp
jb
lret
insb
andl
movsl
das
stos
inc
popa
sub
adc
and
push
mov
out
pop
aaa
or
push
mov
add
dec
pop
ds
pop
loop
int3
cmp
jns
lock
xorb
inc
jo
loope
pop
push
fdivrs
fimuls
lock
xor
fs
add
dec
nop
or
mov
popf
stc
rolb
mov
dec
out
adcl
push
in
push
push
pop
sahf
addl
inc
sub
jle
mov
loope
lahf
fbld
dec
mov
sub
jns
and
stos
add
add
xchg
xchg
hlt
sti
xor
or
fs
adcb
xchg
push
xchg
cmp
insb
jl
scas
les
mov
nop
cmp
inc
pop
sub
xor
ret
dec
sub
rcl
push
cmp
jl
cmp
mov
cld
gs
idivl
clc
push
scas
cmp
xor
sub
jae
leave
ss
jae
mov
je
hlt
out
mov
adc
stc
xchg
dec
mov
dec
add
inc
arpl
test
or
jb
xor
push
repz
or
mov
scas
aam
dec
daa
ss
push
popf
imul
jg
ljmp
inc
mov
sbb
iret
scas
lods
ljmp
xchg
fs
xchg
mov
push
mov
xchg
mov
xchg
xor
pop
push
jno
jmp
inc
pop
lds
repnz
into
mov
add
push
rcll
xchg
mov
dec
pushf
xor
cmp
xlat
aaa
incl
repnz
cmp
push
fiaddl
jno
xchg
ja
xchg
addr16
lret
mov
lock
ds
jge
sub
or
inc
pop
lret
in
sbb
and
aam
adc
xchg
popa
pop
pop
xor
lea
imul
pop
dec
mov
cmp
or
or
mov
cmp
dec
pop
int3
pop
shl
or
add
xor
dec
lret
or
pop
or
jbe
xchg
scas
inc
fiaddl
cmp
pop
out
ret
adc
fwait
push
sbb
aad
scas
shll
gs
dec
pop
outsl
icebp
jns
mov
into
mov
out
jo
sahf
cmc
sub
out
ret
sbb
or
jb
pushf
outsb
andl
or
push
ficoms
xchg
sub
shll
insb
insl
scas
rcll
mov
xchg
mov
inc
fsubl
mov
test
rclb
add
pop
mov
cwtl
and
sbbb
pushf
mov
jmp
dec
xchg
xchg
orb
notb
and
in
mov
xor
sub
push
push
mov
xchg
and
sbb
loop
mov
cli
out
fisttps
aas
gs
mov
cmp
je
dec
dec
or
imul
pusha
xchg
icebp
cmp
push
sbb
sub
xchg
jno
pop
sbb
adc
pop
dec
mov
outsl
add
jb
mov
mov
jmp
sbb
push
push
out
inc
add
lds
adc
int
mov
or
enter
jno
iret
fs
cmp
clc
jnp
lcall
sub
pushf
sti
dec
call
jnp
sub
loop
push
test
cmp
ja
in
fnstsw
int3
adc
and
inc
orb
in
std
lods
adc
sbb
dec
xchg
pushl
mov
sahf
lods
push
arpl
jp
mov
leave
scas
pop
inc
pop
cmp
or
aas
mov
dec
arpl
loope
test
pop
popa
dec
pop
jae
mov
test
outsl
jnp
cs
sti
adc
cmpsb
call
insb
fnstcw
fnstenv
mov
out
iret
stc
rcrl
mov
pop
jnp
cltd
jmp
and
add
sbb
lods
fbstp
pop
xchg
jmp
cwtl
cld
inc
std
add
mov
insb
xchg
mov
or
daa
dec
mov
mov
sarl
dec
in
mov
lock
aaa
fstl
dec
sarl
jecxz
mov
subl
int
in
sahf
jg
cmp
mov
cwtl
push
jg
pop
mov
pushf
icebp
daa
icebp
sub
sbb
ret
in
icebp
es
inc
sti
jne
jb
pusha
pop
test
xchg
ret
mov
xchg
stos
inc
pop
xchg
das
sub
xchg
notb
sub
cmc
ret
xchg
faddl
mov
sub
jns
ret
add
data16
scas
mov
push
inc
mov
ror
repnz
push
dec
imull
inc
cltd
pop
push
fdivrl
shlb
jns
inc
sbb
mov
cmp
cmp
shrl
lea
sub
mov
sub
mov
pusha
sbb
out
ret
pop
cmp
je
mov
aad
or
stc
rclb
cld
mov
xchg
and
out
inc
sbb
repz
imulb
add
cmp
and
sahf
pusha
dec
jge
out
sbb
xchg
dec
int
push
xor
sub
fwait
jl
sub
stos
fnstsw
sti
pop
insl
xor
pop
jbe
inc
movsw
inc
push
arpl
sahf
inc
lret
push
daa
popa
cmc
mov
subl
jns
scas
jno
sub
ljmp
out
xlat
jp
hlt
insl
inc
fwait
test
cmp
pop
std
sti
stos
mov
add
fs
and
or
lret
pusha
ljmp
push
inc
bound
mov
dec
mov
mov
push
repnz
inc
movsl
hlt
xchg
fnstcw
xor
push
inc
pop
jle
add
xlat
fucomi
or
xor
fs
inc
inc
out
xchg
inc
push
pushf
js
cwtl
imul
shll
or
pop
inc
shll
test
cs
stos
ret
popl
scas
push
add
in
mov
jle
jecxz
pop
pop
jl
ds
mov
mov
cmpsl
out
popa
cmp
arpl
flds
xchg
xchg
lock
shrl
sub
movsb
xor
das
outsb
add
hlt
inc
pop
lahf
cs
insl
mov
push
jno
xor
testl
fistl
lahf
out
dec
pusha
xchg
outsb
test
jle
and
out
push
fyl2xp1
or
push
xor
jbe
mov
insb
push
jae
fists
arpl
loopne
push
inc
cltd
xchg
mov
xchg
daa
add
jge
cmc
pushf
insl
jg
lahf
sti
adc
adc
push
test
repnz
ror
mov
enter
adc
test
out
enter
fs
pop
fidivl
mov
push
adc
jmp
out
xlat
xlat
fs
xor
cmp
or
aad
cmpsl
arpl
dec
pop
add
sbb
mov
xchg
lret
or
mov
xchg
pop
fdivrl
jnp
mov
xor
inc
lcall
jno
and
sub
xchg
in
cltd
push
mov
sub
mov
adc
sbb
loop
movsl
push
pop
clc
rcr
movsb
or
cmp
mov
mov
test
aad
mov
mov
or
push
in
jmp
popf
jl
mov
inc
mov
js
xorl
inc
arpl
nop
and
repnz
mov
fst
testb
fs
add
inc
pop
push
jl
dec
ja
sub
cmp
xor
push
adc
sarl
clc
push
loope
push
xchg
stos
inc
daa
in
push
and
pop
or
fs
add
xchg
pushf
notl
mov
inc
jge
or
mov
pop
cmpsb
sub
addb
rorl
inc
xchg
jno
mov
clc
and
shll
test
jecxz
mov
push
jmp
mov
pop
icebp
mov
ss
mov
inc
jp
ss
mov
enter
jne
or
lock
cs
cmc
clc
or
jns
sbb
xor
dec
pushf
imul
push
pop
repnz
xor
cld
mov
and
lods
loope
xor
adc
inc
aam
xchg
test
xchg
pop
jmp
sbb
nop
dec
aas
jg
loop
leave
pop
xchg
sti
aaa
jmp
sti
fwait
jo
dec
sbb
mov
outsl
in
jecxz
jne
mov
mov
stos
inc
xlat
xchg
xor
popf
je
hlt
mov
test
call
xchg
inc
jo
mov
pop
les
push
mov
inc
mov
jmp
pop
push
pop
jbe
loope
in
adc
in
mov
insl
cli
mov
sbb
cmp
dec
imul
push
add
inc
data16
jp
arpl
push
out
jp
add
int
xchg
addl
cmp
mov
jo
push
cltd
xor
mull
cs
imul
and
call
dec
and
cmpsb
mov
clc
aas
pop
gs
nop
pusha
dec
mulb
pop
outsl
sbb
xor
mov
repnz
inc
fbstp
stc
ret
std
jecxz
das
mov
add
addb
popa
icebp
hlt
xchg
and
xlat
jae
or
sti
pop
jp
mov
add
mov
into
sbb
xchg
sub
addr16
xchg
cltd
out
jae
sti
push
xor
pmaddwd
lcall
adc
cltd
orb
push
jbe
lock
add
outsb
cmp
lods
mov
in
test
addr16
inc
cli
mov
adc
mov
inc
test
lock
rcrl
cltd
std
jp
call
lds
jp
xlat
mov
inc
push
sub
loopne
ret
push
lea
cwtl
daa
scas
fdivp
cwtl
int
jmp
in
mov
sahf
fcomps
xchg
shl
inc
in
das
dec
out
inc
mov
cli
push
insl
in
es
xor
push
js
adc
dec
ja
inc
mov
dec
cwtl
repnz
push
sub
lods
xchg
push
add
lods
and
mov
jae
lret
movsb
inc
sub
mov
push
loopne
ljmp
push
mov
mov
leave
stc
dec
push
ljmp
pop
push
mov
fmull
mov
or
inc
mov
je
and
pop
imul
in
pop
je
ss
jnp
adc
inc
or
inc
pop
mov
inc
fstl
imul
loop
inc
mov
lcall
or
test
dec
imul
loop
xchg
pop
adc
ss
movsb
frstor
addr16
fldcw
imul
in
addr16
shlb
xlat
jns
jno
loopne
mov
int3
testl
movsl
aad
je
push
daa
cmp
repz
in
pop
pop
icebp
imul
inc
jne
loop
js
nop
pop
xchg
in
testl
data16
or
or
xor
cmp
popa
jge
xor
add
and
lahf
pop
mov
in
gs
push
sub
push
add
aad
xchg
outsb
std
adc
das
xchg
mov
cltd
lret
push
cmp
xor
gs
test
daa
sbbl
test
movsb
ljmp
xchg
mov
lds
in
outsl
imul
jb
call
adc
and
cmp
repz
pop
sbb
dec
call
pop
outsb
js
mov
dec
mov
movsl
sarl
fs
jmp
mov
daa
ds
lea
in
inc
ret
scas
or
xor
xlat
add
and
cmp
xor
cmpsl
xor
push
push
divb
xchg
pop
rcll
movsl
mov
cmp
hlt
pop
scas
adc
mov
jg
ss
fcompl
lret
test
fidivrl
cmpsb
sbb
outsl
mov
sbbb
das
jecxz
mov
mov
test
leave
and
add
scas
lret
jo
inc
sub
sarb
bound
sub
cmp
aas
push
dec
in
mov
insl
dec
test
lds
jecxz
pop
in
ret
push
push
add
imul
shrl
negl
add
mov
inc
gs
push
xchg
sub
fsubrl
cmpl
stos
push
sub
cmp
mov
cmpsb
inc
test
stos
xor
xor
outsl
xor
xchg
sub
jge
lock
jnp
outsl
daa
add
andl
test
ss
sub
cltd
std
stos
loope
adc
popa
jbe
push
adc
sub
nop
or
push
jne
jo
sub
pop
inc
les
mov
xchg
bound
sbb
fwait
and
out
lahf
inc
loope
mov
push
inc
xchg
xor
call
loop
jp
ds
fsubrl
mov
dec
test
add
out
pop
aas
popf
mov
shrl
cltd
sub
pusha
pop
xchg
in
pop
sahf
leave
mov
mov
fucomip
aas
add
sub
dec
stos
adc
js
jle
pushf
or
stos
pop
leave
push
data16
imul
clc
out
daa
aam
into
arpl
xor
clc
test
pop
test
xor
push
xor
stos
push
cltd
fistpl
mov
pop
scas
or
iret
push
and
pop
ret
push
adcl
mov
sbb
fs
fimuls
sbb
cmpb
lods
mov
std
cltd
jmp
cltd
mov
mov
dec
push
fdivrl
rcrb
mov
xor
pop
mov
mov
pusha
idiv
add
dec
mov
lods
repnz
clc
pop
mov
das
jmp
rcl
inc
dec
add
or
pop
adc
cmp
sti
inc
cmp
repz
dec
jmp
mov
mov
das
cmp
insl
sub
jnp
lret
adc
and
ret
sbb
adc
loopw
fcomi
dec
clc
dec
negl
push
or
negl
jns
out
movsb
sbb
cmpsl
cmp
inc
dec
lods
cli
test
ret
bndstx
inc
cmp
out
pop
dec
cmp
imull
mov
adc
adc
xchg
movsb
or
jne
inc
sub
shlb
sub
xchg
jne
dec
add
xchg
out
dec
add
pop
ret
pop
inc
cmpsb
jns
cld
dec
pushf
test
in
mov
aas
mov
push
lea
and
pop
out
jne
mov
mov
pop
xchg
jl
adc
mov
jmp
add
mov
dec
test
fldcw
fisubl
into
in
ret
push
mov
dec
enter
ja
xor
sbb
inc
or
stos
push
subl
out
les
xor
scas
and
mov
xchg
or
movsl
scas
inc
push
lods
outsb
push
pop
pop
into
fmull
or
inc
sarb
sbb
mov
and
std
adc
mov
insb
fidivs
jp
jbe
fsubrl
push
xchg
add
xchg
mov
add
adc
addb
rclb
scas
loop
push
cs
inc
xlat
pushf
fiadds
sbb
inc
jle
pop
insb
insl
aam
pusha
push
lret
fnstenv
cmp
shr
xor
stc
imul
movsb
sub
push
xchg
add
stc
jbe
mull
sbb
add
std
nop
fnstenv
dec
int
outsb
fs
add
dec
icebp
lea
out
xor
in
js
push
loopne
pop
mov
shlb
sbb
sub
jb
dec
out
imull
xchg
scas
sahf
adc
mov
mov
loop
mov
bound
or
inc
or
out
jno
fistl
jae
test
jo
pushf
jns
into
stc
ljmp
cmp
ljmp
xlat
fdivrl
shll
fcompl
or
and
adc
sar
flds
jb
ficoml
ret
mov
lret
loope
xor
orb
inc
subl
fistl
dec
adc
js
lahf
sbb
lds
popl
lds
mov
jl
pop
sub
cmp
jno
cli
jle
xchg
lcall
mov
out
nop
mov
inc
loope
mov
addr16
sub
and
and
sbb
xchg
popf
aad
xchg
mov
rclb
push
cmp
adcb
icebp
outsb
adc
mov
jns
jmp
aam
lds
xor
fmuls
rclb
and
mov
xchg
inc
outsb
decb
cwtl
inc
adc
jp
xchg
pop
fisttpll
call
mov
rorl
xchg
jno
aad
sahf
pop
movsl
in
ss
movsb
xchg
push
fldcw
cmpsl
shrl
push
testb
lock
test
mov
ficomps
flds
xor
movsb
lahf
push
adc
cmpsl
sbb
rcl
shrl
push
inc
mov
xchg
jb
pop
hlt
mov
xchg
xchg
mov
or
push
jbe
pop
cmp
imul
xchg
outsb
and
xchg
pop
lahf
ret
int3
outsl
sbb
pop
repnz
pop
test
add
jg
inc
cmp
jge
lea
add
mov
cmp
call
int
decb
sub
fisttps
scas
pushw
js
pop
imul
in
pop
xchg
push
mov
ds
flds
mov
and
fs
dec
push
in
sbb
and
ret
in
je
call
add
aas
mov
dec
xorl
xor
cmc
or
arpl
in
xchg
leave
push
mov
sbbb
aad
ficomps
dec
inc
addl
xor
std
add
xchg
add
lcall
stos
jb
lea
dec
xchg
je
mov
mov
cmc
lret
pop
dec
cld
test
es
jle
dec
xchg
sbb
fwait
into
jp
fsubrs
sbb
lds
xor
sarb
jno
adc
imul
int
adc
in
mov
push
or
pop
cwtl
nop
or
push
jp
xchg
cmc
hlt
adc
out
bound
pop
int3
pop
adc
sub
insb
daa
sub
mov
outsl
cmp
mov
lcall
pop
hlt
add
in
in
pop
xchg
push
inc
xlat
xorl
sub
scas
add
push
push
xchg
pusha
jl
call
mov
dec
add
sbb
shrl
hlt
sarb
and
push
mov
out
inc
jge
shrb
mov
stos
xlat
test
pop
popf
cmp
stos
sbb
and
stc
jae
adc
mov
adcb
add
sbb
mov
das
mov
pop
push
jns
loopne
jne
jp
lret
jbe
rcrl
add
and
enter
jns
sub
add
je
dec
fidivl
popa
sti
sub
xor
mov
jge
ljmp
mov
and
decl
adc
dec
and
xchg
movd
out
mov
call
push
pop
icebp
mov
xor
insb
ja
sub
xchg
outsb
sub
cmp
dec
dec
xchg
pop
mov
jmp
in
push
dec
jae
jns
and
repz
cltd
adcw
cmp
jbe
mov
mov
mov
insl
sub
stos
int
pop
mov
push
rclb
mov
sarb
jne
pop
insb
xor
xor
sub
fs
jae
ror
mov
mov
and
outsl
into
sti
addr16
mul
scas
xor
iret
insl
jge
or
pop
cmp
mul
ficoml
mov
add
lret
and
outsl
andb
repz
push
movsl
adc
xor
dec
inc
sahf
clc
jnp
insb
fsqrt
in
pop
adc
xor
sbb
imul
outsl
in
jnp
or
xchg
test
push
inc
cmpsb
push
mov
lods
inc
pop
push
mov
mov
into
out
xor
imul
adc
cltd
xchg
mov
xchg
pop
dec
mov
lea
int
mov
push
out
stos
fstp
sti
add
movsb
fldl
inc
xorb
inc
cmp
sub
aad
inc
aas
xchg
shll
xor
dec
fs
test
lret
cld
push
incb
negb
sub
int
int3
fisubrs
lret
lret
cld
repz
adc
pop
scas
fnstenv
sub
test
psllw
mov
test
mov
fwait
scas
inc
mov
push
and
stc
leave
ss
stc
mov
fstl
adcb
xlat
js
sub
xchg
mov
dec
aas
mov
repnz
pushf
lods
add
mov
jp
pop
repz
cld
push
xor
adc
and
xchg
mov
or
sbb
xor
dec
push
inc
jp
test
cli
xchg
add
mov
shll
or
xor
lods
in
in
fists
push
mov
jnp
lret
fwait
mov
and
inc
in
loop
dec
mov
inc
imul
cmpsl
pushl
add
xchg
push
mov
inc
test
xor
ljmp
sub
pop
and
mov
xchg
lock
dec
aad
adc
or
test
ficoml
nop
out
lret
jmp
cld
xor
movsl
lds
inc
iret
inc
sti
les
in
mov
test
insb
lock
rcr
shrl
or
mov
dec
xchg
je
lock
aas
enter
pusha
call
mov
adc
shrl
jmp
push
in
ret
inc
fistpll
fiadds
adc
mov
cmp
mov
sbb
pop
xchg
add
daa
xor
dec
insb
outsb
push
jnp
dec
dec
sub
push
clc
sahf
fisubrs
xor
int
push
cmc
jae
lret
xchg
adc
xor
cmp
pop
lea
sbb
repz
jecxz
ret
aas
push
add
xchg
cs
les
or
sbb
mov
jb
fxch
jns
ss
adc
aam
int
xchg
pop
lock
or
es
std
sbb
jo
lds
sahf
aad
iret
sub
cmp
ja
xchg
sbb
mov
leave
dec
repz
xchg
scas
sub
test
push
adc
push
ror
push
inc
hlt
loopne
es
int3
fiadds
popf
add
imull
outsl
negb
or
jno
sti
rol
repz
adc
outsl
push
jp
lods
inc
xchg
pop
in
ret
or
sub
pop
pop
or
icebp
dec
test
add
ss
push
cmp
xlat
xchg
jmp
fadds
pop
adcb
mov
dec
inc
pop
lea
dec
test
cmp
jl
or
call
testb
push
pop
divb
push
ds
xor
ljmpw
call
mov
pop
jp
out
test
xor
in
jle
shll
mov
jbe
je
movsl
addr16
pusha
dec
mov
jns,pn
pop
jmp
cmpsl
inc
xor
cmp
int
pop
lahf
push
dec
jge
popa
enter
adc
jno
inc
aaa
sbb
jge
ret
pop
push
cmp
ja
in
adc
decb
gs
adc
int3
cmp
js
loop
fldcw
sub
pop
pop
mov
mov
pop
push
cwtl
cld
xchg
or
scas
lcall
xchg
lods
xchg
mov
lds
std
xchg
aas
mov
insb
mulb
mov
lods
and
push
mov
test
push
jnp
mov
aad
sub
sbb
pop
mov
lret
push
mov
mov
mov
mov
sub
mov
je
aas
loop
adc
enter
lods
cmpsl
jno
jl
dec
jecxz
insb
loope
pop
adc
sahf
pop
in
mov
popf
jb
iret
pop
mov
outsl
fsubl
test
push
mov
xchg
xlat
icebp
mov
jecxz
sti
mov
mov
mov
lock
pop
mov
jne
and
mull
cmp
pop
lods
out
pop
rcr
aaa
pop
aaa
cli
push
xchg
sub
inc
xlat
int3
fmuls
xchg
xchg
add
fdivl
lods
inc
loopne,pt
into
rolb
imul
stos
mov
dec
inc
mov
es
mov
dec
imul
sbb
fisubs
xchg
das
pop
mov
pop
loopne
xchg
cmp
sahf
jmp
or
cmp
pop
sahf
lcall
push
push
xchg
out
sahf
cmpsl
fnstsw
fldl
dec
and
mov
aas
push
in
dec
rorb
jl
mov
popa
loop
add
dec
and
cli
mov
xchg
inc
shrl
cmc
shrl
pop
cmp
js
mov
aaa
sets
mov
inc
out
and
mov
mov
jne
adc
push
jno
cwtl
mov
clc
fbld
cmpsl
jl
fidivl
inc
pop
mov
inc
xor
xor
push
and
lret
shll
or
xchg
std
xchg
les
int
push
mov
pop
jno
and
jne
pop
outsb
adc
and
int3
xor
andb
mov
popa
sbb
push
outsl
jl
outsb
ret
mov
fwait
cltd
cld
das
mov
sub
jbe
hlt
sarl
pusha
into
adc
pop
mov
je
insl
hlt
sbb
cmp
jg
push
sbb
mov
shl
mov
div
lahf
mov
subb
or
jbe
aas
orl
movsb
into
shrb
add
mov
or
mul
call
cmp
pushf
or
aam
filds
cmpsl
bound
xchg
and
mov
sub
addb
push
fbstp
mov
scas
fdivrl
ficomps
test
xchg
lods
cld
sahf
jle
xchg
pop
mov
hlt
mov
fs
mov
test
fsts
insl
inc
in
pop
bnd
push
push
shr
call
lcall
push
mov
jge
sub
fs
mov
dec
mov
fsts
cmpsl
hlt
mov
adc
or
leave
cli
mov
jnp
imul
mov
adc
cmp
roll
pop
push
xor
loope
mov
aam
popf
test
aas
js
mov
inc
ds
add
cwtl
decb
loope
shll
mov
and
jp
pop
mov
dec
mov
imul
bswap
dec
inc
mov
push
outsb
out
dec
lret
je
insl
xor
ret
mov
aad
dec
adc
sub
aaa
xor
mov
mov
xchg
add
inc
shlb
push
movsl
in
adcl
clc
test
leave
dec
push
mov
fnstenv
xchg
int
sbb
mov
les
mov
mov
lock
mov
ss
stos
pop
leave
int3
sar
nop
leave
cld
jl
push
jmp
notb
push
pop
test
cmp
jo
pop
rolb
out
pop
dec
loope
and
mov
icebp
cs
pop
movsb
cltd
in
pushf
mov
push
adc
fwait
inc
filds
aas
pop
cmc
xchg
in
jmp
es
jecxz
mov
les
sub
sbb
ja
jno
mov
shlb
and
sahf
stos
fimuls
out
repnz
movsb
push
sub
mov
add
mov
test
aas
or
pop
xor
sub
jle
push
xor
mov
inc
pop
test
push
or
in
sahf
jns
or
roll
jnp
and
xor
jns
jne
out
hlt
inc
pop
scas
jbe
cmp
xor
xchg
lds
popfw
cli
push
cwtl
imul
test
ja
fstl
inc
mov
jle
push
jp
pop
mov
or
or
jp
adc
jbe
aaa
pushf
add
stc
inc
popf
mov
das
jnp
xchg
jno
inc
inc
cwtl
scas
lock
mov
pop
push
in
test
ja
pop
mull
stc
mov
and
sub
lock
out
xor
push
xor
mov
inc
dec
stos
enter
aad
adc
push
out
and
jmp
jnp
cmp
adc
incb
in
inc
out
adc
xor
dec
inc
add
cmc
orb
decl
out
xor
pusha
lods
ljmp
pushf
fisttpl
fbstp
stos
mov
xchg
inc
pusha
sbbb
movsl
movsl
xchg
sub
mov
push
cwtl
push
in
leave
jae
jmp
imul
lds
out
jle
insl
inc
pop
xchg
mov
stc
out
cli
scas
add
push
into
fdivl
bound
inc
loop
out
and
push
fidivs
jle
and
mov
add
mov
sbb
sub
jecxz
rcll
adc
jno
lds
pop
rcrl
xchg
and
mov
jbe
shlb
xlat
data16
pop
das
pop
push
jnp
sub
mov
cmpsl
push
mov
push
les
and
shrb
fwait
jl
inc
cld
sarb
inc
dec
data16
mov
or
push
popw
and
mov
cltd
mov
inc
out
mov
rorb
nop
daa
and
jno
repz
scas
add
mov
xchg
sub
aam
fs
scas
mov
pop
lods
mov
ret
out
push
mov
dec
xor
shlb
mov
arpl
lods
inc
lock
subb
xor
aam
repz
jp,pn
cmp
int3
xor
push
inc
push
xor
in
cmpsb
fmuls
mov
pusha
test
rcr
mulb
out
xor
mov
ficompl
in
je
aaa
and
push
pop
repz
insl
xorl
fistpl
inc
or
push
bound
dec
aas
and
es
sub
adc
xchg
inc
lods
fmuls
fcmovbe
xlat
insl
or
stos
stos
pop
lahf
ss
or
out
add
in
sbbl
mov
ljmp
ret
aas
jge
nop
scas
pushf
jbe
into
adc
data16
push
out
inc
lcall
fwait
push
in
jecxz
lahf
jmp
mov
mov
leave
lret
sub
jecxz
sbb
hlt
jge
mov
sahf
out
adc
or
push
xor
pop
cmpsl
push
mov
mov
out
cmpsb
shrb
rcll
or
mov
scas
mov
adc
data16
add
mov
push
and
adc
scas
xor
cmpl
cltd
sbbb
insb
insb
js
cmpsb
sbb
mov
push
test
push
jmp
into
daa
adc
imul
xchg
imul
adc
or
jno
pop
mov
cmpb
es
xorl
mov
rolw
jae
out
out
idivl
mov
inc
pop
or
xor
xor
outsl
pop
adc
xor
mov
mov
push
xchg
xchg
stc
rcrl
xchg
xchg
rorb
adc
mov
xchg
push
imul
fwait
movsb
mov
cmp
call
movsb
mov
xchg
insb
div
stc
adc
mov
dec
mov
lcall
dec
cmc
insl
cld
jmp
aaa
xor
sti
andl
jecxz
jle
jl
sbb
les
pop
inc
dec
les
sbb
cmp
insb
xor
pop
inc
stc
inc
fdivrp
out
aad
jo
push
divb
loop
sarb
into
pop
jne
loop
xchg
adc
xorl
xor
mov
mov
and
bound
fisubs
fldenv
mov
daa
jp
adc
cltd
xor
jmp
movsl
xchg
arpl
xor
or
sbbl
or
fs
pop
dec
ror
iret
idivl
inc
adc
loop
jecxz
lret
xor
add
aas
mov
sti
xchg
clc
or
mov
pop
dec
addr16
in
in
sahf
xor
xor
or
hlt
mov
pop
mov
lret
rorb
rolb
pop
pop
icebp
dec
test
pop
mov
inc
lods
inc
fstp
call
fs
mov
clc
or
in
call
sub
enter
xor
jno
inc
fnsave
and
repnz
push
pop
loop
inc
sub
icebp
push
adc
mov
jae
jmp
mov
and
mov
ds
xchg
push
adc
lcall
pop
cmp
push
inc
push
adc
jge
push
add
outsl
inc
pop
pop
push
push
out
rcl
out
jmp
sub
add
xor
jmp
lock
cmpsl
out
push
outsl
jne
scas
xchg
subl
in
sbb
ss
cmp
hlt
in
icebp
lret
aaa
xchg
repz
xchg
push
and
enter
xor
in
loopne
stos
and
ja
pop
icebp
xor
xor
aas
pusha
ja
test
jl
scas
orb
push
mov
xor
lods
clc
sbbl
add
add
cmp
cld
xchg
scas
nop
jge
pop
loop
pop
movsb
les
enter
movsb
cmp
pop
inc
orl
jae
stc
or
stos
mov
std
repnz
mov
sti
mov
pop
jp
mov
punpckhdq
jne
mov
jae
andl
std
lods
stc
sbb
push
daa
pushl
test
sub
testb
out
pop
cmc
ret
insw
sar
addr16
in
sahf
cmp
mov
xchg
aaa
lret
rclb
xchg
xor
popf
adc
std
push
jg
cmp
mov
stos
gs
inc
xchg
and
int
inc
pop
jo
stc
popf
xlat
and
jno
push
movsb
xchg
add
push
nop
push
dec
adc
adc
jmp
push
jmp
adc
xor
std
lods
sahf
fwait
xor
dec
cltd
fyl2xp1
sub
repz
icebp
gs
filds
add
cmpsb
imul
mov
addb
aad
ja
fisttpll
or
int3
inc
loopne
in
xchg
popa
roll
push
mov
call
push
sahf
outsl
adc
jge
dec
fadds
mov
gs
or
mov
insb
fucomip
in
jmp
sub
mov
fisubrs
jl
push
xchg
int
mov
in
loopne
enter
pusha
mov
mov
or
gs
xchg
fldt
std
cmpl
add
pop
mov
or
cmpsl
lea
pop
scas
jbe
loope
cmpb
cmpl
mov
orl
or
mov
jp
add
shll
or
in
cmpb
data16
mov
sahf
nop
gs
daa
inc
mov
sub
ret
jl
loop
sbb
outsl
cmc
sbb
mov
ret
jns
lahf
jge
fildl
loopne
cld
pop
vpsubq
shl
jns
adc
test
ficompl
gs
fbld
jne
or
and
push
call
ljmp
mov
push
fldcw
or
adc
mov
mov
dec
je
dec
arpl
xchg
inc
out
mov
dec
enter
sbb
jecxz
cltd
jmp
jo
ror
jb
rcrb
fidivrs
mov
retw
sub
leave
dec
aam
push
lret
jno
ja
lcall
add
xchg
mov
adc
sub
lea
dec
pop
movsb
and
es
gs
stos
xchg
push
cmpsb
xor
cmp
jl
ret
lea
pop
scas
or
cmp
and
and
je
cmp
stos
inc
dec
inc
ss
ficoml
cmp
push
jb
xchg
xchg
scas
outsl
sub
sub
and
jge
mov
nop
mov
das
adc
jle
insl
aad
les
mov
shll
inc
icebp
mov
flds
lods
mov
sbb
mov
int3
addb
scas
sbb
xor
loope
mov
pop
jmp
push
mov
push
call
mov
inc
pop
or
stos
mov
loopne
push
test
sti
inc
je
xor
dec
data16
inc
mov
mov
data16
cld
loop
cli
jne
lea
mov
in
xor
dec
xorb
fucomip
negb
js
loope
enter
xchg
xor
jae
sar
push
pop
cld
repz
outsb
mov
lret
mov
inc
outsb
out
imul
pop
fisttpl
pusha
mov
jo
sub
adc
jb
bound
in
pop
adc
mov
addl
mov
in
popa
xchg
dec
scas
add
outsl
inc
ljmp
adc
jae
sub
cs
dec
aam
mov
imul
sbb
sub
das
push
rcrl
mov
jge
jae
adc
lret
pop
mov
mov
icebp
sbb
in
or
movsl
cmp
dec
out
fmuls
rcr
cli
in
sti
scas
push
mov
sbb
sub
pop
mov
mov
popf
mov
mov
xchg
pop
adc
jne
rorl
dec
repnz
inc
fcomps
or
addb
pop
jns
add
rclb
ss
lods
xchg
stos
ffree
sub
std
inc
ljmp
and
mov
test
xchg
mov
ds
mov
out
imulb
mov
int
adc
xchg
jp
mov
shll
aaa
int
dec
in
clc
idivb
push
jmp
xchg
arpl
adc
jp
jmp
mov
inc
loope
cmp
push
mov
out
out
in
mov
cld
int3
es
xlat
fsubr
test
and
jnp
imul
mov
imul
rorb
and
inc
sub
jmp
sbb
leave
shrl
aam
shl
jl,pt
cmp
xor
hlt
cmp
jp
stc
xor
and
cmp
stos
add
ret
sti
jbe
arpl
xchg
pushf
xchg
test
xor
arpl
push
mov
xchg
xchg
mov
cmp
js
pop
xchg
cmp
daa
dec
mov
hlt
icebp
aaa
add
push
mov
xchg
mov
adc
lahf
popf
mov
pop
jmp
fsubrs
mov
testb
fucomp
jp
std
in
cs
test
repnz
lcall
push
call
and
aas
dec
mov
sub
jo
pop
mov
nop
mov
fildl
mov
jb
dec
arpl
test
out
xchg
and
sahf
sar
hlt
adc
mov
popa
call
imul
add
cmp
nop
pop
test
ret
shrb
es
fld
fwait
or
dec
fcmovnbe
sub
add
dec
fisubl
movsl
and
adc
adc
cli
mov
lahf
inc
into
repz
add
daa
mov
rcl
movsb
shrb
cmp
out
shr
mov
out
mov
in
push
adc
flds
xchg
ficomps
loope
test
aaa
add
test
inc
xlat
pusha
je
xor
jns
idivl
pop
push
sbb
repnz
js
outsb
mov
sbb
outsl
sub
sti
or
push
sbb
aam
mov
xchg
std
or
push
shr
xchg
adc
pop
cs
fnclex
push
dec
loop
call
imul
xlat
rcr
mov
leave
in
test
and
mov
push
mov
aad
js
and
fcoms
pop
and
xchg
xchg
imul
adc
mov
mov
ret
mov
mov
mov
fdivr
cmp
insl
add
sub
xchg
jg
sbbb
pop
pushf
xchg
aam
scas
nop
loop
jge
cmpsb
int
adc
add
dec
adc
pop
repz
jp
into
cmp
into
mov
push
loop
clc
test
test
sub
push
dec
lcall
and
out
mov
testb
test
mov
fnstenv
data16
test
jne
sub
test
mov
loopne
inc
popf
xor
and
inc
and
xor
std
cwtl
mov
std
xlat
leave
outsl
call
lcall
test
loopne
scas
inc
loopne
xchg
divl
push
sahf
cwtl
pop
push
int
in
lcall
nop
jl
xchg
cli
adc
outsb
dec
test
cld
gs
xlat
mov
sub
jae
lds
and
xchg
push
mov
mov
aad
xor
mov
mov
cmpsl
adc
loope
ret
mov
cmc
pop
scas
mov
push
es
pop
imul
aaa
pop
pop
bound
xchg
imul
cli
xchg
pop
stos
pushf
cmpsb
addr16
mov
cmp
jmp
mov
mov
push
stos
loope
stos
icebp
sub
xor
mov
loope
es
fldcw
xchg
aam
es
inc
or
xor
jns
lock
cmp
out
cmp
repz
sub
dec
sbb
jb
mov
mov
mov
pop
mov
cmp
xor
ja
inc
in
lock
push
jmp
push
ss
in
xchg
test
pop
jnp
subl
jns
fdivs
dec
pusha
mov
and
mov
decb
in
jecxz
test
mov
ljmp
add
inc
add
cmc
loope
adcl
mov
xchg
cmpsb
mov
pop
xor
cmp
dec
test
mov
xchg
cmc
inc
out
sbb
test
mov
mov
sbb
jp
push
outsb
iret
jle
cmc
rcr
enter
jb
and
sahf
cs
push
or
pop
mov
jae
inc
push
jmp
rclb
icebp
xchg
aam
jge
test
mov
mov
sbb
xchg
rcrl
mov
jl
int
sti
out
test
jo
adc
push
fstpl
int3
lahf
aad
and
aaa
lea
insl
cmp
inc
sbb
xor
xchg
adc
inc
sbb
add
pop
loop
orl
push
push
imul
push
xor
test
aas
addr16
out
adc
jae
sub
lret
cmpsl
outsl
bound
js
mov
mov
inc
lds
xchg
loop
out
stos
dec
sub
add
fimuls
fcompl
fnstenv
idiv
jg
xlat
in
xchg
sbb
inc
loopne,pn
pop
mov
test
leave
cmp
das
xchg
sub
insl
das
syscall
shr
push
test
xchg
xor
xor
jmp
sti
cmp
mov
jge,pt
jb
mulb
scas
paddq
xchg
js
out
push
adc
mov
add
and
enter
xchg
stc
push
in
outsl
mov
xor
jge
aas
into
adc
push
imul
fdiv
xlat
jns
sbb
sarl
pop
push
out
jo
les
pop
aam
add
call
int3
jae
imull
pop
insb
scas
mov
or
std
paddsw
xor
aas
aad
cltd
int
adc
sbb
les
xchg
jno
cs
test
pop
loop
andl
xor
jl
and
push
ja
dec
cs
stos
push
test
aam
test
scas
adc
cmpsb
xor
outsl
sbb
stos
hlt
lea
dec
lods
xlat
es
xchg
test
scas
js
lea
mov
push
loop
or
mov
cmp
daa
mov
sub
packsswb
or
leave
and
and
mov
gs
pop
pusha
jp
je
adc
adc
dec
or
adc
out
xchg
aaa
call
inc
jle
inc
jg
shlb
sbb
lahf
in
lods
out
hlt
push
dec
lcall
push
ret
outsl
sub
cmp
mov
shlb
fcmovu
sbb
mov
mov
xlat
test
std
sbb
popa
shlb
mov
sub
pop
or
and
cmpb
push
ret
in
fsubrl
mov
mov
stc
jg
mulb
mov
cld
fsubrs
and
mov
popf
inc
cld
shl
sbbb
rclb
ficompl
and
xor
sbb
add
mov
enter
je
nop
mov
xchg
lock
repnz
dec
rcr
movsl
mov
lds
shl
popa
and
lds
test
lds
pop
test
std
outsl
push
mov
sbb
or
iret
fldl
fwait
jmp
out
outsb
insl
push
pminub
cmp
rcrl
lahf
push
mov
loopne
sbb
shl
sub
cmpsb
jbe
lret
xchg
into
mov
mov
adcb
out
stos
aas
sub
xlat
cmovl
mov
inc
push
cmpsl
mov
lahf
test
jp
inc
mov
mov
mov
fwait
adc
in
pusha
movsl
pmullw
nop
adc
sbb
mov
popa
mov
push
pop
les
pop
cmp
jns
mov
les
rep
push
dec
fsubp
mov
int
enter
shrb
mov
out
add
ljmp
inc
cli
add
mov
jp
adc
and
sahf
or
das
nop
pop
cmp
not
mov
pop
mov
pop
jns
push
stos
xor
popa
pop
xorps
lods
and
adc
dec
inc
iret
jle
jecxz
push
inc
pusha
adc
icebp
lods
xchg
dec
sbb
cli
add
mov
xchg
pop
add
gs
mov
cld
outsl
je
mov
sbb
sbb
iret
test
inc
mov
sub
ljmp
lods
lods
xor
or
push
cmpsl
js
repz
insl
dec
fs
enter
js
xchg
stos
jno
xor
fldt
add
push
and
dec
pop
xor
fldt
mov
insl
es
mov
cmpl
add
push
mov
lret
mov
or
rolb
adc
lcall
jle
fildll
lods
and
mov
repz
pop
and
sbb
pop
mov
jnp
movsl
and
dec
or
push
cs
and
ljmp
inc
adc
jno
add
repz
ffreep
add
imul
pop
cmpsb
repz
out
inc
jle
inc
in
mov
xchg
jae
subl
fcmovnu
dec
test
lcall
jnp
dec
ds
subb
dec
jo
xchg
ljmp
cmp
insl
jecxz
push
adc
mov
mov
lahf
sub
mov
mov
jnp
sbb
das
movsb
jecxz
mov
loop
iret
jne
int3
adc
fsub
arpl
push
cmp
jge
xor
js
in
jne
lods
js
cld
sbb
rcrb
inc
mov
popf
hlt
fildll
mov
push
jg
outsb
dec
inc
jne
imul
cmp
xor
int
mov
adc
fadds
enter
mov
mov
imul
roll
push
dec
push
jno
jo
dec
mov
xor
pop
sbb
mov
xor
or
sub
imul
inc
imul
sti
pop
test
ljmp
jp
mov
int
das
mov
and
jbe
aam
push
and
insl
mov
lret
notb
mov
cwtl
pop
in
insl
repnz
mov
clc
xor
in
jns
shrb
movb
imul
dec
cmp
jns
repz
ljmp
repnz
cmpsb
outsb
clc
daa
pushf
in
jns
pop
into
scas
push
arpl
pop
pop
xchg
leave
dec
dec
enter
ljmp
lds
repnz
xor
sbb
add
lds
mov
add
in
gs
and
shld
xor
lea
dec
add
jnp
xlat
and
aas
test
or
xor
mov
out
jmp
sub
sub
stc
adc
pop
sbb
scas
adc
or
push
and
xor
inc
jecxz
cli
or
sarb
cmp
dec
pop
scas
and
aad
roll
mov
mov
popf
rclb
in
mov
or
cmp
push
jle
test
sub
jae
cld
aad
ss
inc
in
scas
mov
add
sbb
enter
mov
push
enter
sub
sbb
jns
pop
clc
add
cs
adc
cmpsb
push
rcrl
xor
arpl
xchg
out
das
push
aas
jmp
call
sub
mov
adc
cltd
pushf
cmp
int
jl
aas
scas
push
testl
idiv
nop
sub
fs
pop
xchg
fistl
inc
fldenv
mull
cmp
dec
dec
icebp
rcll
adc
sti
cmpsl
bound
enter
in
adc
adc
jmp
loope
mov
xlat
test
icebp
int
lds
mov
jp
aaa
or
popf
dec
movsb
int3
pop
cmp
in
pop
sub
mov
xchg
xor
fwait
inc
jb
mov
test
push
pop
and
dec
mov
adc
push
cmp
adc
xchg
aam
dec
jae
icebp
or
inc
jge
add
ljmp
adc
sub
mov
add
xlat
dec
push
ret
jae
in
xor
and
mov
xor
ret
jecxz
outsl
movsl
inc
stc
nop
shrl
mov
sti
push
dec
adc
pop
out
sti
iret
sub
jg
lods
dec
push
out
push
or
add
sub
data16
dec
pop
and
test
xchg
add
test
mov
xor
or
adc
sahf
jl
out
sti
pop
popa
add
insl
mov
repz
popa
lcall
sbb
mov
stc
inc
sub
stc
pop
das
into
xor
xor
fildl
mov
xchg
lret
mov
es
ret
sbb
cmp
adcb
sub
pop
loop
lret
mov
cli
hlt
pop
dec
pop
xchg
cltd
cmp
iret
dec
in
stos
sub
mov
xor
fsubrs
cwtl
jb
and
xor
mov
push
in
push
mov
xchg
cmp
jo
sbb
imul
or
mov
fstpt
mov
or
lret
add
or
movsb
cmp
sub
or
cwtl
insl
xchg
sbb
cmp
mov
lret
adc
cs
inc
or
pop
dec
test
stos
test
and
mov
into
push
movsb
mov
xchg
jno
int
mov
cmpl
sbb
inc
xorl
test
pop
mulb
inc
sbb
pop
fwait
cmpsl
stos
mov
jb
gs
int
push
aam
mov
jb
cmp
fists
and
out
stc
cmp
call
out
mov
pop
movsl
xor
int
sarb
fwait
scas
ret
fsubrs
cld
scas
int
sbb
xchg
dec
mov
notb
inc
stos
mov
mov
in
jge
adc
in
jbe
test
mov
loope
mov
sub
xchg
cmp
sbb
xlat
icebp
in
sub
aad
loope
daa
lds
and
push
xchg
cmpsl
xor
mov
sub
pop
sub
repnz
dec
rcrb
cmc
aam
stc
xchg
xor
dec
fsubrl
pop
mov
adc
xor
add
lea
sub
mov
mov
mov
rclb
sub
aaa
scas
pop
pop
inc
stc
mov
jne
call
mov
dec
iret
pop
xchg
mov
push
push
lods
cmp
movsb
mov
daa
mov
mov
cmpsl
lods
sub
push
stos
or
sbb
xchg
nop
lea
int3
rcl
inc
mov
ja
leave
std
aad
ds
jl
mov
cli
add
inc
xor
push
sbb
popf
xor
dec
inc
jno
fisubl
or
imul
int3
jmp
lcall
out
test
pop
bound
faddl
ljmp
xchg
jle
lds
ss
loopne
pusha
lahf
in
mov
inc
test
sbb
jo
mov
ret
outsb
paddq
mov
jne
and
adc
xor
pop
rep
inc
int
filds
push
lret
mov
into
out
das
and
jp
lea
gs
out
sbb
push
imul
lods
imul
jmp
push
out
sti
in
hlt
enter
shrl
push
xchg
push
psllq
aam
and
sub
loop
mov
inc
fidivrl
mov
cs
in
jb
mov
xorb
scas
cmc
pop
hlt
aas
dec
cmp
cmp
push
jne
fwait
dec
icebp
lock
test
out
inc
add
js
xor
imul
jnp
jb
xor
mov
cltd
adcb
mov
ss
jo
mov
push
pop
mov
xchg
push
icebp
leave
or
inc
mov
jbe
jbe
dec
mov
inc
xchg
lods
cmp
cltd
xor
inc
loopne
pushl
xorl
pop
cmp
dec
mov
adc
adc
push
xor
xor
cmp
xchg
loop
mov
arpl
loopne
push
inc
into
lahf
jne
popa
into
dec
push
jae
adc
xchg
ds
ret
mov
sahf
jmp
dec
xor
lret
adc
fs
in
neg
add
daa
pusha
lret
fists
sahf
or
fs
push
jno
pop
test
or
repz
cli
aas
arpl
push
test
adc
pop
sbb
pop
mov
aam
mov
sbb
aad
sbb
movsl
cli
mov
jo
outsb
scas
xor
int3
or
sbb
xor
ja
cli
push
lea
into
loop
dec
pop
je
and
inc
xorl
movsb
mov
clc
adc
jecxz
std
pavgw
pusha
faddl
ljmp
xor
popf
or
lea
stos
loopne
call
push
popf
jne
es
repnz
lret
push
jbe
in
cmpsl
fdivl
stos
jb
test
in
enter
pop
popa
sbb
outsb
pop
test
repz
jecxz
and
jg
xor
cmpsl
testb
repz
cmp
clc
mov
fistl
or
adcl
sbbl
cmpsb
nop
je
ret
sbb
add
jne
add
jge
fwait
inc
in
out
xor
xchg
test
aaa
adc
sub
out
jae
out
mov
pop
xor
mov
sub
dec
in
aad
or
pop
call
cmp
mov
scas
std
data16
pop
mov
shll
frstor
out
mov
das
into
mov
aam
icebp
movb
int
aad
fdivl
repnz
cli
es
fidivrl
xchg
add
xchg
or
fldl
push
and
gs
cmp
movsl
ret
call
in
push
sarl
xor
stc
adcb
divl
enter
sarl
sbbl
cmp
pop
sahf
aam
iret
aas
imul
in
mov
xor
pop
cmp
adc
push
popf
aam
cmpsl
xchg
mov
cmp
shll
xchg
ss
push
push
repz
popl
cld
aad
jno
lcall
push
cmp
pushf
and
arpl
xor
pop
add
mov
adc
lret
dec
push
or
fisttpl
pop
jmp
dec
jle
and
popf
sbb
iret
fcmovu
ljmp
inc
fsubrp
mov
gs
mov
icebp
push
rclb
sti
pop
addr16
sbb
pop
adc
jne
addr16
ja
adc
push
call
mov
out
pushf
bound
mov
push
xlat
outsb
in
sub
dec
insb
xor
xchg
cmp
mov
mulb
mov
cmp
bound
lods
xchg
inc
data16
frstor
lea
inc
xor
idivl
adc
jbe
or
arpl
sti
ljmp
movsl
inc
lret
xchg
push
xchg
adc
outsl
aaa
pusha
sub
jnp
loope
sbb
mov
adc
sbb
xchg
pop
stc
xchg
mov
jnp
or
push
movsl
pop
movsl
mov
xlat
cmp
sbb
enter
jecxz
xchg
sbbl
mov
mov
adc
push
mov
aas
push
mov
xchg
pop
hlt
lahf
and
jp
jnp
icebp
fwait
addr16
insl
pcmpeqw
mov
adc
pop
aad
lods
jg
mul
add
js
iret
cmp
cltd
pushf
sub
xchg
scas
out
mov
lret
or
push
push
pop
inc
mov
arpl
inc
push
test
push
push
xor
xor
xchg
xchg
pop
cmp
cli
mov
fwait
xor
lcall
and
aas
mov
xor
or
clc
cmpsl
mov
popl
cmpsl
imul
or
sub
cmp
cltd
sbb
aam
lock
jg
adc
pop
cld
mov
lea
push
ja
and
jo
imul
loop
push
out
mov
push
inc
shl
mov
loopne
inc
mov
dec
pusha
dec
dec
dec
cmp
mov
pop
adc
sub
stc
aam
adc
sarb
jbe
inc
adc
mov
xchg
mov
fistl
inc
dec
add
pop
ss
xor
jnp
and
popf
mov
das
push
out
mov
dec
cmp
in
out
adc
lods
adc
mov
test
inc
xchg
adc
fwait
test
or
cltd
popa
and
cmp
cltd
leave
jae
sti
mov
mov
sbb
lods
out
push
inc
enter
xchg
sub
popa
xor
jae
leave
inc
mov
addb
lcall
jno
and
lret
xor
jns
inc
lcall
out
sti
in
mov
lret
shlb
dec
lea
mov
arpl
jp
push
inc
fsubrl
shlb
clc
movsl
cmp
inc
sub
jecxz
sbb
iret
mov
xchg
repnz
cmp
mov
leave
test
sbbl
sub
mov
cmpsb
repnz
mov
adc
xchg
mov
test
insl
adc
jl
jo
hlt
addr16
sbb
lods
sbb
data16
imul
ret
stc
mov
sub
dec
add
or
imul
pusha
repnz
dec
ljmp
dec
jge
cli
lods
out
pop
paddb
clc
mov
mov
mov
insl
das
cmp
fldl
inc
fmulp
push
mov
adc
pusha
dec
insl
push
shrb
mov
sarb
in
jne
mov
add
scas
mov
loopne
mov
cmc
arpl
in
dec
jmp
add
or
loope
ljmp
les
test
push
jo
popa
scas
inc
mov
mov
pop
mov
shrl
imul
jle
sub
fbld
pop
idivb
scas
xchg
push
mov
cmc
adc
andl
sti
pop
add
push
add
test
inc
inc
orb
fmull
test
push
mov
scas
das
and
mov
dec
into
das
jp
cmp
test
push
jbe
adc
mov
push
ljmp
mov
sub
push
push
push
pop
mov
sbb
insb
xchg
cmp
popf
xor
mov
ret
dec
push
or
xor
iret
jl
int
mov
bound
xchg
pop
cmp
dec
sub
cltd
repz
adc
sub
nop
lods
dec
adc
and
loope
jle
in
shrb
sbb
inc
adc
jno
in
push
aas
jmp
psubsw
dec
lods
outsb
int
popf
ja
cmc
cmp
mov
mov
fists
or
inc
push
fwait
or
je
mov
inc
push
xor
sbb
data16
cwtl
push
test
pop
mov
xor
sarb
sbb
or
cmp
bound
arpl
fisubrs
mov
ficoml
call
arpl
das
mov
jp
call
or
mov
es
sarb
xchg
aas
add
dec
jae
push
dec
shufps
pop
cmpsb
xchg
adc
xor
ret
fs
divb
adc
popa
ds
aaa
mov
and
lahf
sbb
insl
fnstenv
push
test
ret
fsubrs
push
popf
repnz
jmp
movsl
cmp
lea
mov
dec
add
push
or
xacquire
lret
mov
cmp
aam
mov
jmp
xchg
mov
mov
or
in
popa
lods
in
sbb
cmp
loope
or
sbb
jno
or
hlt
jae
dec
dec
xchg
js
inc
ljmp
cmp
daa
dec
or
dec
jbe
jg
je
lret
or
jp
sub
or
inc
rclb
sbb
mov
mov
ffreep
sub
pop
lea
lods
stc
cmc
fs
dec
pusha
mov
cmp
or
inc
push
jl
dec
xchg
and
cmp
addr16
mov
fisubrl
and
cwtl
test
inc
les
stc
ret
enter
arpl
outsb
mov
mov
imul
pop
push
xchg
mov
les
sbb
adc
je
es
push
cmpsb
loope
xchg
dec
add
push
je
pop
dec
cmp
xchg
int3
mov
or
and
cmpsb
mov
dec
mov
push
lods
lods
rorl
push
mov
push
sub
sbb
sub
out
aaa
pop
inc
mov
aad
out
daa
inc
pop
rclb
lahf
mov
mov
pop
cmpsb
insb
add
and
adc
push
movsl
push
sbb
push
add
dec
int3
push
jb
sub
jl
cltd
test
mov
ret
dec
shrl
cli
jne
pop
adc
mov
insl
and
pop
inc
fists
mov
jg
push
and
fdivrs
ljmp
sub
add
mov
push
push
outsb
fsubrl
dec
loope
sbb
movntq
leave
mov
inc
xor
xor
int3
sete
mov
pop
test
bound
mov
jbe
ret
daa
mov
stc
or
pop
data16
movsb
push
loopne
or
dec
push
mov
into
insb
jl
inc
push
in
sbb
cmpsb
les
mov
add
sub
movb
aam
adc
and
test
loop
sti
adc
jge
cmp
inc
and
fmul
or
sahf
in
adc
cmc
or
dec
ds
push
jmp
cmp
out
jnp
jl
pop
int
or
push
stc
ds
loopne
loop
out
in
lret
inc
cmp
imul
scas
xor
cmp
rorl
lea
xlat
xor
adc
daa
leave
jbe
push
ljmp
inc
xchg
outsb
cmc
subb
xchg
cmc
mov
push
mov
aad
mov
mov
scas
jg
sub
push
push
or
and
stc
adc
aam
ret
ja
cld
lcall
cld
fsub
ja
lcall
enter
sub
leave
push
xor
sahf
out
mov
and
test
lcall
jl
das
out
sub
rcrl
dec
cmpb
jle
hlt
scas
lds
pop
jmp
mov
adc
addb
mov
mov
lods
pop
adcl
sahf
popf
fdivrs
dec
in
cmp
cmpsb
les
sub
insb
aaa
stos
push
sarb
mov
dec
in
dec
in
call
negb
lods
dec
lods
cs
or
arpl
repz
mov
inc
pop
lret
subb
sbb
imul
lods
and
mov
fdivs
ja
imul
mov
icebp
into
xor
jge
xor
mov
or
lock
add
pop
sahf
mov
pop
ds
cmpsl
addr16
fimuls
mov
shrb
movsb
sub
cmpsl
mov
dec
ja
or
adc
mov
xchg
mov
push
mov
lahf
mov
dec
sbb
inc
or
mov
jnp
ret
js
inc
mov
imul
cli
pop
mov
inc
fwait
pop
and
rcll
and
mov
mov
add
shl
push
mov
sbb
int3
lcall
aaa
mov
mov
lahf
jmp
or
test
call
imul
mov
lods
inc
push
add
mov
mov
aas
pop
ja
push
sarl
cltd
mov
addr16
mov
jb
sub
push
xor
jp
cmp
sbb
jle
js
scas
jbe
testb
mov
push
push
aas
iret
enter
ljmp
adc
sbb
and
mov
aas
out
sub
pop
lds
pop
cmp
mov
in
pusha
hlt
addr16
adc
dec
rcrb
inc
cmc
call
push
cmp
sbb
and
mov
imul
fsubrs
mov
pushf
lret
xor
adc
out
xchg
add
nop
add
xor
fcoml
fdivrs
or
sbb
and
inc
jo
jno
popf
sbb
insl
dec
add
mov
in
inc
icebp
addr16
jne
sub
and
repz
scas
and
or
in
add
movsl
mov
mov
jno
scas
call
add
js
or
imul
popa
push
cmp
jnp
push
aad
and
lods
jae
ljmp
inc
imul
lock
lcall
mov
fcomps
mov
dec
lea
mov
sti
stos
mov
or
out
sbb
ds
pop
notb
fdivrs
lds
into
enter
imul
jmp
movsb
popa
daa
test
test
fnstcw
repnz
mov
sub
mov
mov
insl
mov
rcrl
lret
add
pop
pop
xchg
cli
addr16
data16
adc
xchg
lret
lock
ja
dec
das
cmp
test
or
in
push
cmpsl
pop
fmuls
mov
idivl
and
sti
pop
xor
pop
dec
cmc
xor
push
sub
inc
mov
js
xchg
mov
mov
xchg
jp
call
mov
jnp
add
mov
jle
dec
xchg
sub
test
dec
int
ds
std
xor
cmp
xchg
je
push
sbb
out
test
cli
xor
add
pop
jbe
and
xchg
push
xchg
repz
mov
add
fildl
push
inc
mov
stos
jne
cs
sbb
sub
in
outsl
loope
mov
or
inc
out
cli
arpl
pop
dec
inc
int3
jae
aam
pusha
sbb
inc
inc
jmp
xchg
test
stos
movups
addl
cmpsb
pushf
xchg
xchg
pop
loopne
pop
push
add
repnz
sub
mov
lcall
inc
sarl
hlt
pushf
mov
push
and
lcall
mov
push
adc
push
xlat
xchg
or
cmpsb
imul
sub
xchg
clc
jbe
and
inc
push
jle
dec
lods
inc
adc
lcall
jp
stos
repz
mov
xor
push
testl
ret
jo
hlt
mov
cmp
dec
in
cli
insb
xor
mov
inc
jb
bound
push
fdivrl
test
inc
xlat
jbe
les
xchg
jecxz
lcall
push
es
sbbb
fcmove
ja
out
js
push
sub
xchg
mov
nop
test
lods
add
mov
mov
imul
dec
ret
push
ljmp
push
pusha
sbbb
lods
jae
inc
push
repz
stc
stc
imul
sub
add
xor
addr16
jp
test
out
ret
addr16
push
mov
fwait
inc
popa
and
inc
mov
rep
add
jne
mov
fisttpll
push
inc
fsts
xchg
cmp
adc
scas
mov
adc
int
adc
sarl
dec
xor
push
icebp
mov
jecxz
and
rcrl
or
mov
sub
test
jmp
pop
and
dec
clc
inc
xchg
int3
rep
das
adc
iret
xor
pop
jl
arpl
sub
mov
pushf
cmp
lds
popf
push
out
push
in
lcall
jo
inc
in
add
adc
mov
add
xchg
add
xor
mov
mov
jecxz
cmpl
stos
mov
push
pop
dec
mov
sahf
push
sub
jb
cwtl
pop
xor
test
push
incb
mov
adc
mov
test
mov
fdivrs
lods
std
push
xlat
ret
in
aam
add
mov
into
iret
mov
push
lcall
nop
and
mov
inc
test
out
cli
sti
and
push
sbb
mov
or
sbb
mov
in
sbb
add
jg
push
scas
mov
push
push
xor
and
xchg
movsb
cs
xor
mov
mov
inc
in
jns
popa
in
xchg
cli
jns
jl
leave
and
mov
or
shrl
pop
dec
lds
sti
scas
mov
and
dec
sbb
mov
fisubs
dec
xchg
std
cmp
cmp
dec
int3
mov
insl
into
gs
mov
outsl
enter
std
mov
dec
int3
mov
cmp
sahf
and
xchg
jnp
push
cwtl
fmull
mov
ljmp
ljmp
popf
pop
cmp
sbb
addr16
loope
cld
addb
mov
sub
dec
jecxz
adc
inc
sub
cmp
jns
jle
aam
lcall
in
lods
or
imul
xlat
stos
rorl
jmp
xlat
in
dec
andl
leave
push
ret
mov
arpl
fwait
push
fs
xor
inc
fsub
mov
jne
jbe
adc
les
movsb
pop
popf
jecxz
push
rorl
fwait
xchg
shrb
cltd
add
and
addr16
rolb
mov
bound
test
push
xor
jae
in
xchg
mov
adc
mov
and
cmp
insb
ljmp
mov
and
xchg
mov
mov
repz
sbb
or
xor
sbb
sub
adc
stos
and
out
mov
enter
xchg
push
in
adc
jmp
cld
xchg
add
pop
test
lcall
cmp
add
shrl
out
xor
scas
lds
pop
cmpb
pop
insb
push
call
mov
sub
dec
cmpsb
cmp
or
ss
and
repnz
xchg
mov
aam
mov
ret
pushf
scas
cmp
cmp
xchg
inc
cltd
pusha
cltd
ljmp
jo
jnp
adc
test
inc
xchg
xchg
pop
cmc
push
mov
xor
imul
jge
sbb
int3
ret
dec
hlt
ljmp
and
jl
ljmp
jle
sbb
sbb
out
dec
icebp
mov
std
sub
sub
bswap
push
mov
mov
ds
pop
dec
dec
out
adc
sub
lret
loopne
pusha
push
mov
fstpt
arpl
ret
shrl
push
mov
jb
aad
or
addb
fdivp
rorl
js
cmpsb
lock
sub
add
int3
fbstp
jb
push
or
mov
xor
adc
popa
rolb
inc
fbstp
cmpsl
sbb
xlat
lahf
push
jo
lret
call
add
scas
xchg
test
add
xor
ret
fstpl
mov
sahf
out
mov
mov
popa
mov
mov
mov
movsb
pop
sti
lcall
cmpsl
ds
sbb
add
pop
dec
mov
push
lods
cmc
pop
cmp
jo
lock
bound
imull
adc
icebp
into
sbb
jns
push
pop
hlt
push
add
stc
daa
fiaddl
popf
push
push
add
sahf
mov
das
fimuls
adc
insb
gs
pop
lret
add
pop
ja
je
cld
and
movsl
jmp
inc
xchg
pop
mov
pop
popl
sahf
lods
repnz
pop
dec
into
mull
daa
fndisi(8087
nop
xor
jmp
repz
sbb
lret
movsl
jb
dec
pop
pop
xchg
pop
icebp
mov
stos
mov
add
aam
aaa
mov
mov
lret
mov
movsl
push
stos
xor
or
pop
jne
xor
mov
ret
ds
sub
pop
sub
cmp
xchg
cmp
sbb
outsb
push
cmp
mov
xor
or
call
mov
xchg
popa
clc
enter
roll
test
sbb
and
add
xor
mov
dec
inc
test
dec
aad
cmc
stos
stos
jne
xchg
lods
lds
cli
or
jle
in
data16
dec
sbb
nop
iret
sbbb
sub
rcrl
mov
pop
adc
jecxz
or
call
sahf
pop
addr16
ret
outsl
dec
lods
inc
cmp
fisttpl
out
push
push
dec
mov
dec
out
xor
scas
xor
data16
mov
jo
daa
out
pop
imul
daa
and
fidivl
xor
cmp
xchg
fmulp
into
jge
jecxz
cmp
add
icebp
leave
mov
cld
leave
xchg
push
or
xor
mov
je
addb
mov
loop
ret
adc
rol
scas
stos
adc
addr16
mov
lahf
cmpsl
mov
arpl
hlt
daa
test
jnp
fs
cmp
cmp
push
sahf
clc
inc
xchg
mov
pop
rclb
insb
sbbb
push
mov
fsubrl
test
push
fcomps
fdivl
adc
and
es
inc
aad
js
loopne
mov
adc
testl
mov
sbb
dec
notl
jmp
jp
or
push
pushf
jo
int
sbb
gs
gs
mov
mov
adc
xchg
movsl
mov
mov
add
add
mov
or
or
pop
sbb
arpl
add
sbbl
cltd
push
fsubr
loop
jl
or
mov
clc
xchg
sar
add
out
jnp
or
xchg
fdivp
push
repnz
aas
inc
adc
jae
mov
push
loop
jl
mov
cmp
push
repz
mov
inc
pop
gs
xchg
sub
jno,pn
jp
mov
pop
push
out
xor
and
jg
and
das
fwait
leave
push
adc
xor
fldcw
lret
add
jae
pop
jp
dec
je
push
imul
mov
fisubrs
push
mov
pop
mov
mov
int
fldl
mov
ja
mov
mov
mov
cmp
sarb
aam
mov
add
cwtl
xorb
lret
pushf
add
push
sbb
das
fistps
icebp
je
push
int
addb
push
loope
inc
fnsave
cmp
and
adc
mov
jbe
ljmp
cs
push
vpsrld
sbb
data16
cltd
push
mov
andl
sub
cmp
hlt
mov
sbb
and
add
fisttps
out
inc
loopne
cmp
jns
mov
lods
pop
dec
stos
inc
jl
fsubs
out
mov
cmpsb
sbb
es
dec
fistpl
sub
or
mov
jb
adc
mov
mov
mov
adc
ja
icebp
inc
add
daa
int
xchg
xchg
mov
cld
out
push
lods
daa
ficoml
dec
cmp
xchg
adc
cld
jl
andl
jecxz
pop
inc
cs
jb
add
das
lahf
or
push
mov
outsl
dec
out
and
test
gs
scas
bound
xchg
iret
sarl
add
pop
xchg
rcll
cli
inc
cmp
pop
sahf
lock
sub
adc
and
add
inc
xor
fisttps
jl
inc
pop
stos
sbb
push
cmp
hlt
mov
jge
xchg
mov
ss
or
bndstx
movsb
jecxz
ja
jne
addr16
int
xchg
cmp
jne
cli
dec
xchg
push
adc
sar
rorl
pop
mov
ficompl
andb
jne
enter
add
jl
inc
mov
add
sbb
dec
daa
adc
lds
jmp
into
fwait
pop
jns
in
mov
fs
das
mov
call
dec
fsubl
mov
or
in
xchg
adc
lods
push
addb
rep
test
add
pusha
enter
data16
cmp
pop
jg
icebp
insb
int3
outsb
pop
push
pop
cmc
cmp
sbb
cmp
xchg
dec
insb
xchg
popf
in
jmp
mov
addb
je
push
nop
mov
sbbl
or
lahf
push
sub
loopne
lds
popf
pop
or
mov
cmp
mov
push
mov
fldenv
les
or
mov
jnp
lcall
sbb
mov
inc
ficoml
icebp
out
push
cmp
lret
out
arpl
add
dec
inc
xchg
dec
xchg
push
xor
jo
shrl
lods
cli
mov
shlb
ret
jmp
int
push
mov
jae
mov
fidivs
pop
sti
aad
cmc
cli
or
out
gs
aad
ss
pop
fildll
adc
cmp
or
inc
popf
in
mov
push
loop
fisttps
shll
mov
scas
call
insl
mov
int
adc
xchg
out
aas
shrl
inc
pop
add
mov
mov
andb
jb
or
sub
lods
nop
fidivs
jae
xor
scas
jno
cli
jne
sbb
int3
fldl
jmp
lahf
aas
inc
mov
cmpsb
test
mov
cmpsl
je,pt
shrl
testl
scas
mov
or
jle
scas
dec
outsb
sub
inc
notl
jp
leave
pop
test
ja
mov
jbe
lea
add
lret
data16
cltd
gs
fidivrl
xchg
push
push
cmp
adc
xor
mov
lods
xor
pop
icebp
clc
sbb
inc
fwait
sub
inc
outsb
test
movsl
dec
pusha
cwtl
mov
lret
add
daa
xor
jb
sbb
push
movsb
jno
push
xor
dec
mov
push
inc
sub
int3
vpcmpgtb
sbb
push
xchg
mov
sub
xor
movsl
xchg
or
mov
int3
mov
and
lea
dec
lret
mov
mov
push
and
fistpl
jb
outsb
shlb
leave
js
outsl
and
sub
sub
add
popf
sbb
dec
jecxz
aaa
stos
adc
popa
lods
test
xchg
mov
std
add
pop
cwtl
or
ret
mov
and
out
fdivrp
push
out
icebp
sbb
bound
addr16
mov
inc
adc
push
xchg
add
fstl
mov
dec
mov
inc
stos
push
fldcw
jge
mov
dec
gs
lods
repz
cs
das
stos
adc
stos
mov
inc
out
addr16
out
lcall
pop
jae
cmp
cmp
push
popl
call
std
sbb
push
add
ret
and
movsb
rcrl
nop
loope
outsl
xlat
aad
xchg
adc
pop
mov
dec
add
sarl
sub
clc
adc
pop
jbe
mov
adc
mov
repnz
jl
es
stos
call
and
adc
push
ss
sub
lea
jmp
scas
rcl
xor
xor
push
dec
loope
ds
push
xor
fnstsw
dec
sbb
stos
in
xor
jns
inc
sahf
or
icebp
cmp
xor
and
in
jae
xor
incl
js
mov
xor
cwtl
leave
jb
cli
fwait
push
ss
mov
int
xchg
ret
mov
testb
outsl
shrl
int
mov
cmc
lods
fldt
cmp
mov
inc
fs
pusha
push
or
push
inc
push
fisttpl
int
pop
xchg
bound
inc
pop
mov
int
pop
and
stos
das
cs
sbb
jbe
mov
aam
mov
lds
xchg
jne
jmp
dec
pop
hlt
or
pop
addl
jo
dec
outsl
out
mov
mul
pusha
pop
stos
inc
dec
xorl
sbb
push
cmc
and
mov
mov
popa
and
out
stos
sub
xlat
pop
in
cmp
push
dec
pop
inc
in
mov
push
mov
mov
hlt
mov
in
mov
call
xlat
cli
jo
iret
jne
and
gs
add
mov
xchg
in
xor
mov
out
jp
sbbl
cmc
and
stos
mov
mov
stos
stos
mov
scas
sbb
and
stc
stos
clc
mov
inc
xchg
sub
adc
mov
aad
lret
xchg
xor
jb
hlt
sbb
and
std
dec
fwait
mov
cmpsl
out
push
into
sti
movsb
and
and
rclb
imulb
fstpl
sub
push
sub
jno,pn
lods
inc
mov
mov
dec
xchg
leave
sbb
xor
fsts
push
shll
cmp
or
pop
adc
pop
xchg
mov
jg
and
call
jl
dec
push
ds
xor
mov
or
pop
lret
push
mov
mov
pop
iret
mov
shr
mov
xor
inc
movsb
sbb
pop
test
inc
outsl
push
sbb
sti
adc
lcall
icebp
inc
and
xor
dec
insl
add
dec
loope
bound
popf
mov
add
mov
addr16
int
incl
movsl
xchg
inc
xchg
fs
xchg
jb
push
repnz
xor
xor
pop
add
jns
gs
ss
and
pop
pop
adc
cld
fs
adcl
nop
sub
test
into
and
mov
or
cmc
mov
lret
mov
emms
loope
lahf
fwait
outsb
jl
push
stos
ljmp
pushf
xor
aad
mov
negb
adc
jbe
cmc
lahf
repnz
in
cwtl
and
xchg
and
daa
cltd
cmp
and
rorl
jle
lahf
fstl
push
addr16
faddl
repnz
aam
xchg
loope
imul
mov
mov
testl
pop
loope
mov
inc
cld
pop
movsb
nop
mov
cmpb
add
insb
popf
testl
and
dec
lahf
jno
sti
aas
jno
adc
mov
mov
dec
or
cmp
sahf
adc
and
scas
fistl
add
inc
mov
fnstsw
das
pop
add
mov
testl
dec
jb
mov
cs
call
xchg
rcrb
mov
pop
adc
lea
imul
ljmp
cmp
shr
sbb
push
je
jp
test
mov
pushf
mov
cmpsl
hlt
outsl
jnp
repz
push
lods
dec
lds
dec
fmul
movsl
push
cmp
mov
insb
jg
into
or
jae
stos
cwtl
mov
cli
ja
aaa
pop
pop
pop
mov
and
xchg
popa
icebp
imul
lcall
mov
mov
pop
rcrb
xchg
faddl
jp
push
mov
add
cmp
lods
pop
sbb
push
cmpl
addr16
mov
cld
ds
lds
sbb
mov
popa
jge
arpl
jmp
incb
xchg
andl
or
xor
push
sub
xchg
out
xor
lahf
stos
pop
add
ljmp
or
jnp
cld
xchg
outsb
fwait
in
into
cmpsl
dec
and
fcomi
les
scas
mov
scas
xchg
out
scas
adc
xchg
pushf
mov
sbb
lds
adc
xlat
arpl
mov
adcl
dec
push
pop
cmpsb
xchg
shrl
scas
push
xchg
sbb
mov
xlat
outsb
mov
stc
add
shl
inc
mov
popf
adc
je
and
jb
or
mov
mov
shlb
xchg
mov
dec
shr
xchg
mov
mov
hlt
or
or
xchg
cli
sub
xchg
sbb
add
cmp
pop
cmpsl
lds
leave
cs
mov
test
xor
cmp
in
sub
jne
pop
mov
dec
pop
sub
jns
mov
dec
jecxz
adc
outsl
and
nop
into
in
cld
mov
mov
out
or
in
js
rcll
mov
push
adc
xchg
or
xor
jns
test
or
mov
push
sub
mov
mov
cmp
xchg
jb
ret
xchg
bound
cwtl
out
outsl
lds
fisubs
pop
fists
fidivs
bound
ljmp
insl
xchg
movq
lcall
jg
mov
fdivs
xor
setg
push
dec
cwtl
mov
xchg
cmp
jmp
xor
mov
and
add
sbb
fistpll
pop
data16
insl
or
insl
pop
jbe
shll
push
in
scas
xchg
call
nop
xchg
cmp
pop
sub
inc
cmpsb
jecxz
sbb
adc
es
dec
and
pop
insl
push
jp
jbe
add
xor
dec
push
mov
sub
jbe
loop
leave
sbb
or
aam
inc
cmp
js
js
mov
lret
mov
lods
call
jb
inc
mov
je
ljmp
mov
xor
or
aaa
mov
js
aad
out
add
mov
inc
inc
lcall
xchg
inc
add
cmpsb
test
cwtl
mov
stos
mov
fcmovbe
loopne
cmp
xor
push
sub
ror
fbstp
inc
adc
aas
pop
inc
or
into
push
pop
movsb
aaa
out
or
out
cld
push
stos
in
ficoms
out
mov
jo
sar
mov
pop
mov
xor
adc
std
and
fsubr
jmp
bound
bound
out
mov
pushf
and
adc
outsb
dec
in
jnp
roll
in
repnz
mov
jge
xor
xchg
sub
sti
imul
push
add
addl
lahf
adcb
sbb
inc
leave
mov
fcomps
inc
pop
cmp
inc
lods
cmpsb
clc
rcrb
cmpsl
push
or
adc
xor
adc
mov
lret
sub
out
and
imul
jns
push
and
andl
shll
out
xlat
stos
mov
pop
sbb
dec
jl
mov
mov
xchg
ja
lock
and
adc
call
scas
lahf
push
test
int
sbb
icebp
sub
inc
sbbb
stc
int
sub
inc
xchg
xchg
popf
jmp
iret
mov
std
rcrb
push
roll
xchg
insb
mov
xchg
je
enter
and
mov
mov
dec
imul
and
mov
shll
addb
dec
loopne
inc
mov
std
popa
addr16
cmp
repnz
jmp
mov
push
gs
into
or
in
movsl
pop
sbb
into
outsl
mov
dec
sub
or
je
or
xor
lahf
in
xor
leave
pusha
ljmp
sbb
ret
lretw
int
mov
xchg
and
adc
idivb
int
test
out
push
movsl
mov
fucomip
cmc
fisubrl
in
sub
cmp
lock
jne
dec
jecxz
ds
cmp
out
jge
push
cld
push
mov
inc
sub
sbb
sbb
mov
mov
xchg
lret
xor
lcall
and
ja
ja
daa
stos
jnp
hlt
pop
jge
mov
mov
fsub
mov
aam
in
cmpl
sbbl
shlb
aaa
cmpsb
repz
cmp
mov
outsl
dec
gs
jbe
jmp
sub
push
cld
int3
popa
test
push
jo
and
and
jle
inc
mov
test
push
sbb
js
out
cltd
inc
mov
jb
xor
in
jnp
sahf
cmp
addl
mov
movsl
rep
adc
xchg
fld
fs
insb
jb
fucomi
mov
cmpsb
or
mov
mov
insb
xchg
jp
cmpl
dec
imul
fcomp
jmp
fwait
add
in
push
pop
imul
daa
test
mov
xor
jg
and
mov
nop
inc
xchg
or
dec
repnz
jo
shrl
insb
pop
cmp
les
insl
pop
out
popf
dec
mov
inc
insl
movsb
xor
in
xchg
fadds
pusha
arpl
inc
loope
jnp
or
in
xchg
add
jns
xor
pop
cmp
sahf
shll
dec
jecxz
cmp
in
cmovge
out
arpl
add
aaa
clc
jno
out
sbb
stos
dec
jmp
test
xor
ret
sbb
shlb
in
xor
mov
mov
dec
push
cmpsl
cmp
xlat
movsl
les
xlat
hlt
push
clc
aam
sub
jae
mov
push
fsts
test
dec
pop
xor
and
dec
sbb
xchg
aad
xchg
and
and
jae
push
lods
pusha
xor
not
push
incb
mov
and
stos
fwait
xor
xchg
xchg
movsb
push
jno
inc
jge
mov
sbb
or
cs
arpl
incl
push
mov
xchg
xor
arpl
mov
fistl
cmpsb
xor
stos
inc
icebp
pop
adc
mov
jbe
xchg
dec
popa
aaa
push
gs
fisubrl
mov
insl
jge
ds
rorl
push
rcrb
sub
mov
enter
xchg
jne
xchg
insb
xchg
test
mov
xchg
imul
hlt
dec
mov
fisubrl
shlb
addr16
add
and
call
inc
scas
or
mov
je
xor
xor
das
movsl
sbbl
jecxz
xchg
dec
pusha
sar
jbe
das
repnz
out
push
pop
cld
or
or
das
ja
sbb
clc
sbb
jae
ss
out
xor
orb
mov
cmp
divl
adc
mov
cltd
test
or
data16
mov
adc
sbbl
and
inc
jb
lea
add
sbb
test
ret
pop
xor
mov
fdivrl
xchg
imul
lea
cmpsl
mov
adc
push
xor
bound
jo
ret
jae
xor
mov
int
subl
mov
in
std
scas
mov
icebp
clc
jnp
mov
call
sbb
pusha
and
gs
mov
sbbl
hlt
shlb
call
pop
cmp
icebp
fisubrl
sarl
filds
dec
les
out
sti
in
dec
mov
add
data16
jns
aas
pop
adc
add
jns
sbb
aas
into
mov
subl
cltd
pusha
pop
out
jmp
int3
xor
hlt
bound
mov
stc
sti
xchg
push
or
inc
loope
pop
insl
ja
mov
cld
cmp
testb
out
cmp
or
leave
xchg
dec
add
cmp
jmp
mov
push
mov
cmp
popf
daa
mov
mov
inc
cmpsl
ja
mov
sbb
jae
pop
dec
out
insl
pop
ljmp
cmp
pop
fstp
fdivrs
shrb
adc
cmc
ja
mov
mov
clc
mov
test
xchg
add
xchg
cmpsb
repz
push
xchg
lret
std
inc
lret
ret
mov
popf
shrb
mov
cmp
stos
xchg
rcrb
lret
mov
jno
push
xlat
mov
ret
and
push
adc
jne
cld
lcall
push
lcall
add
mov
xor
inc
mov
inc
inc
fdivrs
js
xlat
sti
jbe
mov
sub
jle
xchg
push
lret
nop
xchg
std
pop
adc
jnp
sbb
push
pop
jbe
aad
inc
pop
int
jb
dec
push
sub
or
shrb
pop
dec
loop
xchg
lea
xchg
sub
std
adc
or
das
ds
xor
xchg
sub
adc
aad
lock
imul
or
out
clc
mov
mov
xchg
imul
push
aaa
mov
iret
and
rorb
pop
dec
pop
stos
inc
data16
add
les
xchg
pop
icebp
push
pop
cmpl
in
fwait
xor
push
mov
xchg
sub
push
icebp
push
iret
push
mov
jecxz
outsl
loope
cmp
sar
into
push
sub
repz
adc
dec
movups
repnz
lcall
cmp
jg
cmc
mov
call
add
sahf
push
lea
pop
jnp
mov
mov
and
adc
js
cli
fists
jbe
xor
test
jne
sub
adc
sbb
ja
pop
dec
icebp
je
pusha
cmp
sti
xchg
add
jp
xchg
and
ds
cmp
aam
in
sub
or
incl
push
xchg
ret
sub
icebp
movb
add
push
in
hlt
cmp
pop
xor
sub
xorb
lods
add
adc
rep
mov
jb
pop
cmp
push
loop
or
inc
jecxz
or
aas
mov
das
insb
jle
sub
inc
cmp
shll
loopne
fs
jle
inc
inc
jmp
cli
xor
xchg
xchg
and
mov
int
mov
xchg
leave
fld
mov
jecxz
popa
mov
pop
mov
lock
dec
cmp
and
sub
mov
jb
mov
mov
mov
xor
sbb
mov
jmp
daa
push
js,pt
and
fucomi
dec
fcmovne
decl
cld
rcll
jge
or
push
notl
icebp
daa
decb
cmp
jno
ss
in
cmpsl
add
adc
jnp
xchg
cmp
loop
or
lds
cmpsl
push
jmp
addl
or
jno
pop
loopne
subb
stc
addr16
xor
sub
push
test
sbb
cs
cmp
or
in
dec
adc
jb
outsb
nop
xchg
jp
sbb
mov
stc
nop
pop
ret
and
call
into
push
jg
jb
test
mov
mov
adc
test
cmp
or
mov
or
add
and
xchg
add
cmc
ljmp
xchg
lock
or
push
scas
sub
jo
outsb
xor
mov
sub
xchg
pusha
dec
loope
ja
popl
je
mov
xchg
cmp
pop
or
add
dec
dec
aas
shrl
push
sub
mov
popf
and
inc
int
mov
mov
add
mov
clc
ja
leave
cltd
fadd
int
loope
adc
xchg
inc
cmpsl
xchg
lret
xchg
cmp
jnp
rorb
sbbl
push
jmp
push
cmc
fldcw
andb
add
sbb
cltd
lea
pop
jmp
stos
or
movsl
imul
mov
mov
test
dec
jecxz
ss
loop
cmp
push
je
test
cld
dec
fs
sahf
xchg
test
push
jmp
insb
outsl
push
test
movsl
mov
out
add
inc
jb
mov
fdivrl
push
in
scas
inc
mov
dec
adc
cmp
mov
insl
push
push
mov
sub
xchg
add
jne
divl
jecxz
dec
adc
hlt
dec
mov
adc
jo
bound
fisttpl
mov
repnz
adc
fwait
cmpsl
push
or
fidivs
xor
xor
xor
sbb
and
push
out
or
xor
inc
mov
adc
stos
bound
adc
and
xor
into
dec
movsl
js
ljmp
dec
lea
mov
sub
ret
lock
sbb
push
ret
dec
or
mov
dec
icebp
mov
movsl
scas
sub
ss
out
pop
xor
lahf
lods
in
xor
call
sub
in
stc
repnz
cmp
or
cmp
mov
mov
scas
xchg
scas
mov
fndisi(8087
out
pop
adc
aaa
loopne
inc
xchg
mov
leave
hlt
fstl
jno
aaa
cld
icebp
xchg
add
out
push
ja
scas
mov
or
lret
into
clc
fwait
inc
push
fdivrl
testl
and
dec
xchg
pop
fucomip
jne
out
dec
xor
loope
xchg
dec
roll
and
mov
cmp
sbb
lret
fcomip
mov
fwait
push
jge
ljmp
push
clc
mov
adc
lcall
cwtl
das
xlat
test
sahf
fisttps
aad
je
jge
cltd
xor
cli
addr16
xchg
mov
sti
roll
or
mov
out
imul
loope
cmpsb
push
int
mov
pop
jmp
adc
popf
push
shr
fcompl
dec
pop
cmp
cmp
iret
adc
jns
pop
mov
xor
adc
cmp
inc
dec
scas
mov
fbstp
test
push
fisubrs
adc
push
and
xor
sbb
jg
leave
push
ret
inc
push
add
jmp
repnz
ret
jle
xor
fadds
aas
or
fwait
mov
test
outsb
xchg
push
jl
sbb
fldl
cltd
js
push
popa
mov
shrb
test
adc
adc
lods
push
mov
mov
add
inc
push
sub
jl
jae
clc
cmp
pop
cmp
int3
sbb
xor
pop
dec
push
nop
push
movsl
pop
outsl
cld
insb
outsb
mov
sbb
sbb
jo
or
and
fidivs
add
orb
pop
and
xor
aaa
jp
je
mov
push
lods
add
mov
sbb
pop
inc
sbb
inc
push
jle
xchg
dec
in
cld
xchg
and
mov
push
test
mov
adc
in
popa
lcall
dec
push
xor
xlat
sahf
mov
aam
add
adc
cmp
push
pop
mov
mov
cmp
lret
hlt
adc
fldl
jo
xlat
cmp
inc
pop
shlb
add
das
mov
lea
adc
sub
pcmpgtw
jg
xor
mov
outsl
pusha
pop
stos
mov
je
adc
push
rcrb
mov
scas
daa
mov
popf
stos
xchg
int
mov
fs
mov
loopne
dec
cmp
mov
sbb
mov
pop
pusha
lods
test
pop
xchg
mov
into
dec
xchg
jecxz
sbb
inc
in
cmp
into
mov
fs
cwtl
adc
out
xor
mov
aaa
mov
mov
sbb
cmp
lret
fistps
fsubrp
pop
out
insl
shlb
outsb
jg
cwtl
pop
icebp
leave
lods
loop
or
sti
test
and
cld
sahf
js
pushf
push
shr
out
push
inc
push
repz
outsl
mov
mov
addb
rep
in
ljmp
ror
mov
loopne
sbb
pop
or
addr16
pop
ljmp
lret
and
addr16
jle
jo
test
fbstp
idivl
and
cmp
and
insb
lods
in
popf
daa
fldl
testl
popa
aad
mov
jle
mov
into
and
ds
outsb
adc
push
dec
mulb
dec
add
arpl
out
cmpb
push
cmp
outsb
mov
or
inc
ret
shr
mov
fmuls
and
xchg
nop
sub
out
sub
iret
clc
popl
lds
ds
nop
movsl
lds
jo
sarl
dec
jmp
loopne
cmpsb
imul
cli
dec
pop
out
lea
jmp
hlt
sub
mov
popa
js
sbb
lock
rorb
push
dec
push
mov
imul
mov
jae
dec
les
mov
scas
push
stos
xchg
in
cmp
scas
xor
jo
imul
es
jmp
or
dec
and
cli
cmpsb
add
mov
cmp
adc
xor
push
shlb
cld
mov
sbb
cmp
iret
fmul
aad
adc
in
fbstp
out
call
adc
or
dec
xchg
scas
fisttpll
push
mov
callw
or
test
repnz
je
dec
cmpsb
int
push
dec
iret
sbb
inc
mov
push
xor
xchg
jmp
loope
mov
inc
xor
cltd
cs
aaa
ficoml
enter
xchg
add
outsb
adcb
incl
mov
jns
adc
add
popf
jae
inc
pop
xorl
xchg
sahf
jg
jecxz
scas
dec
in
cmpl
pop
push
pushf
or
sbb
repz
adc
mov
or
jg
sbb
pop
jno
jecxz
and
jle
aaa
bound
cli
divb
mov
enter
ficomps
jl
push
das
pop
movsb
mov
adc
adc
or
mov
rorl
fnstsw
mov
mov
roll
xchg
testl
jmp
cltd
sub
test
cmc
ds
test
lret
xchg
test
out
nop
stos
mov
lea
aaa
or
add
pop
mov
out
mov
xchg
popl
movsb
clc
dec
in
mov
insb
add
mov
or
das
pop
and
xchg
test
fnstenv
std
shl
imul
lahf
xor
in
loope
cmpsl
jno
pop
cmp
mov
inc
nop
mov
call
ror
xchg
mov
scas
lods
mov
jmp
xchg
xor
dec
out
push
or
cmp
outsl
outsl
stc
adc
rcrl
mov
pop
loopne
push
outsl
xchg
pop
rorl
enter
push
out
rclb
jle
xor
inc
jno
mov
in
mov
mov
mov
fists
stos
arpl
daa
mov
testb
out
xchg
es
mov
rorb
xchg
hlt
mov
sbb
mov
mov
sbb
imul
push
dec
ret
outsb
in
sub
xlat
imul
pop
bound
xchg
jg
pop
mov
add
out
mov
and
shll
cltd
jbe
enter
pop
cmpsl
out
adc
dec
sbb
scas
pop
fnstsw
xchg
call
dec
push
repz
pop
mov
scas
mov
sbb
push
out
jp
xchg
pop
jmp
shll
mov
push
daa
jo
xchg
inc
cmpsl
or
clc
sahf
shl
sbb
mov
sbb
jecxz
xchg
mov
adc
ret
daa
jl
push
mov
mov
jo
in
jg
xchg
sub
test
inc
fistps
ror
ljmp
jno
mov
dec
push
and
and
xchg
pop
stos
shlb
mov
loope
ja
jo
sahf
je
inc
into
sarl
pop
push
adc
mov
test
arpl
pop
icebp
add
jg
into
adc
je
sub
sub
mov
fldl
mov
test
inc
adc
loop
lahf
test
outsl
lret
shll
mov
add
retw
lcall
jne
cltd
fwait
lcall
stos
aas
jl
pop
mov
mov
mov
leave
in
cmp
fprem1
mov
inc
jecxz
popa
push
mov
cwtl
stos
rcl
sbb
dec
jmp
aam
movsb
sti
adc
xchg
pop
out
push
xchg
and
in
mov
sti
add
xchg
jg
xchg
sbb
adc
add
orb
mov
pop
repnz
loope
or
push
pop
adc
loop
xor
mov
fcmovbe
sahf
fnstenv
in
pushf
in
inc
call
aaa
push
fwait
pop
mov
jmp
adc
sarl
and
push
ljmp
imul
into
out
mov
cmp
fsubs
cld
mov
xlat
imul
fwait
sub
inc
fstl
mov
xor
push
fdivs
in
imul
or
insl
pop
inc
xor
mov
sub
cmp
add
mov
push
leave
mov
jo
or
fidivl
aad
xchg
daa
sbb
scas
sbb
mov
pushl
xchg
jb
mull
bound
mov
inc
test
lock
xor
aas
insb
rclb
xchg
out
divb
jno
movl
jmp
js
xorb
das
xchg
add
mov
jae
mov
test
fwait
mov
loop
loop
or
sti
push
xlat
jge
inc
stos
push
add
enter
push
fsin
push
test
cli
in
aad
cmc
into
pop
sbb
jge
xor
dec
xchg
stc
xchg
mov
test
popf
or
jl
test
ljmp
cmp
movsb
lods
mov
in
nop
mov
sti
addb
sbb
orl
faddp
pop
adc
lock
loope
mov
aam
mov
dec
mov
in
and
pushf
mov
bound
imul
icebp
mov
out
xchg
fsts
jl
repz
cmpsb
sub
mov
stc
jmp
scas
mov
mov
aas
push
sub
movsl
sub
inc
in
pop
and
adc
and
xorl
notl
mov
xchg
outsb
or
or
js
int3
xchg
mov
pinsrw
lds
stc
je
adc
scas
in
out
adc
inc
adc
inc
in
mov
dec
loope
div
and
addr16
iret
pop
xor
mov
inc
aas
push
jne
popa
xlat
jmp
and
mov
shlb
dec
and
dec
mov
scas
push
rorl
popf
das
out
stc
fdivrs
bound
pop
adc
cli
pusha
cmc
fs
pop
insb
popf
test
adc
xchg
rcrb
lods
inc
xor
mov
ret
push
pop
inc
bound
iret
popf
gs
sub
sub
inc
dec
cmp
adcl
in
cmp
mov
and
jmp
adc
lods
cmp
inc
or
lds
addr16
dec
sarb
lahf
and
rorb
add
add
das
ds
jl
jns
sbb
aad
xchg
mov
imul
mov
pop
out
mov
mov
ret
cli
stos
insl
or
mov
fistpl
xchg
sub
dec
ror
mov
adc
es
cld
jb
cs
ficoml
dec
ljmp
xor
xorl
sbb
stos
mov
push
cmpl
adc
inc
popa
shll
dec
cmp
idivb
xor
sbb
hlt
loope
jbe
ror
add
jbe
sub
and
mov
jnp
nop
xor
shl
ret
pop
fbstp
and
jnp
inc
sarl
dec
adc
xor
into
sub
sar
adc
subl
lods
sbb
andl
push
ror
add
or
icebp
xor
mov
jae
das
mov
mov
rsqrtps
inc
sub
js
std
pop
clc
call
cmpsl
sbb
add
xorl
sti
or
jae
mov
mov
dec
out
sbb
aaa
shlb
push
mov
ret
popl
ret
dec
aad
std
call
sub
inc
int3
cld
pop
jns
push
jecxz
jle
rcrl
sti
push
das
sbb
mov
test
mov
fbstp
push
sbb
xchg
shll
xchg
repnz
pop
ds
adc
xchg
pop
fists
lret
cmpsb
mov
and
jb
insl
sub
cmp
and
arpl
loop
dec
push
push
adc
mov
cld
loope
mov
mov
fsts
lods
or
cmp
xor
aam
mov
insl
xchg
loopne
sub
stos
xchg
lods
xchg
repnz
jae
outsl
pushf
add
aas
push
adc
mov
pmaxsw
pop
lahf
sub
mov
pop
out
lfs
movsb
cmp
cmp
pop
movsb
jecxz
das
adc
icebp
outsl
and
dec
ljmp
jge
std
leave
dec
xchg
out
test
sbb
or
xor
icebp
mov
test
lcall
in
loopne
je
hlt
stos
inc
stc
pop
iret
jne
repnz
aad
pop
ret
cmp
sub
inc
test
incb
adc
lock
fcmovnu
push
inc
cld
inc
je
xchg
sbb
mulb
inc
inc
daa
cld
or
xor
rorb
cmpsl
jbe
mov
lods
xor
jbe
mov
int3
sub
dec
mov
movsb
das
mov
xor
sub
loopne
data16
dec
adc
stos
bound
add
lcall
adc
repnz
call
lahf
dec
out
movsl
mov
jmp
jge
and
cmpsl
lods
mov
das
pusha
subb
cli
pushf
jno
sbb
xor
arpl
andb
add
jecxz
ja
fistl
xorb
popa
negl
adc
xor
inc
imul
popf
bound
jmp
push
sub
scas
pop
cltd
fdivrs
xchg
jnp
into
je
inc
jg
cmpsl
lds
cmp
jo
pop
int
and
in
jo
fisttpll
aam
jae
test
scas
sub
cmc
mov
daa
sarl
out
push
in
xchg
pop
arpl
lcall
and
push
jecxz
mov
dec
shlb
add
loope
out
std
xchg
cmp
or
jl
pop
push
iret
jno
pop
xlat
outsb
dec
sbb
push
or
fstpt
outsl
mov
add
dec
idivl
sub
gs
into
jmp
lahf
inc
xor
movsb
xor
xorl
fs
test
notl
inc
xchg
movsl
in
gs
cmp
movsb
int3
mov
mov
rolb
movsb
leave
fmull
dec
add
xor
jne
push
push
int3
lret
gs
jo
test
cmc
sbbb
es
push
mov
mov
andl
mov
sbb
and
icebp
addr16
and
push
ljmp
mov
xchg
fsubs
xchg
hlt
cmc
mov
out
in
rorb
stos
xorl
xor
adc
das
ds
cmp
lods
scas
sbbl
xchg
into
mov
int
xor
aaa
push
jbe
loopne
lods
cmp
insl
shl
add
pop
gs
pop
xchg
daa
mov
jg
leave
lcall
test
sub
push
hlt
sub
or
movsb
jecxz
dec
pop
xor
cmp
push
xchg
sub
int
shrl
dec
xor
pop
data16
and
cmpsb
les
ret
and
stos
test
push
ja
repnz
mov
lret
inc
imul
jno
cmp
popa
pop
jno
add
movsb
das
add
stc
mov
jge
push
xchg
mov
data16
sub
adc
cmp
sub
repnz
jecxz
loop
or
sub
pop
mov
fwait
mov
sbb
lea
cmc
add
mov
stos
ja
sub
xchg
mov
lret
sub
stos
inc
xchg
ljmpw
loop
dec
inc
cwtl
cmc
mov
out
jns
bound
cmp
mov
cmp
cmpsl
sbb
jl
mov
fldcw
add
sub
pop
push
clc
mov
xor
test
cmp
es
xchg
mov
vmulps
cli
add
stos
push
call
das
outsb
mov
xchg
loope
add
hlt
adcl
mov
fdivrl
mov
add
pop
inc
dec
icebp
iret
mov
rcll
rcrl
jae
nop
cmp
adc
lock
jp
cld
push
cmp
mov
pop
mov
xchg
and
inc
mov
cmp
out
shrb
adc
mov
popf
movsb
or
outsl
lds
mov
adc
imul
push
daa
shl
fcoms
cmp
xor
test
loopne
cwtl
insl
pop
mov
les
imul
lock
xor
xlat
mov
fwait
jecxz
int3
or
cmovp
jo
mov
les
movsl
cmc
cs
pushf
and
mov
sub
inc
mov
jbe
addr16
push
inc
pop
scas
aas
lea
mov
gs
xchg
dec
sahf
dec
outsb
cltd
jo
inc
and
popa
push
out
jnp
shr
mov
loopne
mov
ret
dec
mov
pop
inc
pop
clc
fs
jnp
loope
cli
push
mov
mov
xor
mov
xchg
data16
xlat
xchg
sub
inc
ja
xchg
js
push
data16
lret
test
mov
xchg
sbb
or
pop
sbbb
cltd
in
cwtl
sub
mov
stos
and
push
ret
ds
cmc
jg
dec
mov
arpl
sarb
clc
adc
movsl
jae
out
test
aas
mov
jmp
fidivrs
dec
fcmovne
sbb
jae
mov
lret
add
loopne
mov
into
daa
lods
xchg
imul
mov
ja
and
test
int3
arpl
add
adc
mov
push
or
nop
jl
push
jge
xchg
loopne
lret
add
es
mov
fdivrs
xchg
jns
inc
mov
sbb
lcall
mov
xor
cmp
inc
loope
shlb
jecxz
inc
mov
or
push
jle
pusha
cmp
leave
xor
sbb
stos
and
out
mov
or
imull
push
sbb
and
cmp
aas
and
ss
fwait
xor
push
push
test
in
ds
notl
lods
sbb
and
lds
in
push
mov
arpl
push
lret
movsb
inc
jle
jbe
andl
sub
and
popa
mov
outsl
push
leave
pop
add
rol
mov
cmp
cmpsb
xchg
adcl
fdivl
jmp
jle
jp
in
jbe
in
pop
mov
inc
jmp
inc
faddp
hlt
push
clc
data16
lock
push
stos
dec
movsb
and
dec
in
pop
lahf
rol
sub
mov
and
jge
cltd
push
loope
mov
adc
jl
xor
dec
jecxz
repnz
test
sbb
shrl
ljmp
xor
jne
pop
lret
in
or
or
je
dec
mov
adc
inc
dec
push
adc
rcrl
imul
cwtl
shrl
rolb
lret
inc
fstps
cltd
push
jmp
nop
lret
jo
out
rol
shrb
shl
inc
mov
cmp
js
mov
dec
mov
or
sub
in
push
imul
lds
jbe
mov
cmpsb
pop
and
icebp
sahf
aas
mov
dec
jb
ja
cmpsl
jecxz
sahf
xchg
dec
adc
jb
add
cmp
in
xchg
out
pop
sbb
nop
ret
cmp
shll
sti
cmp
mov
inc
push
add
loop
cmp
mov
sahf
std
push
test
aas
push
push
jns
jbe
cmp
or
aad
push
popf
lods
xchg
push
shrl
dec
insb
add
mov
mov
jecxz
pop
adc
xchg
xchg
adc
cmpsl
ret
lock
jae
cltd
mov
test
inc
mov
dec
in
clc
stos
push
push
add
or
pop
repnz
cmpsl
popf
or
mov
out
cli
out
lret
aas
shl
jmp
iret
xor
pop
jne
in
xor
xor
lret
in
lret
es
and
fistl
stos
and
hlt
xor
inc
add
jbe
cld
and
rcll
scas
mov
push
hlt
pop
aas
icebp
outsl
inc
jns
mov
pop
push
mov
pusha
sub
imul
sbb
loop
mov
movsl
mov
test
jl
repnz
adc
lret
test
add
es
adc
xor
adc
mov
repz
int
xchg
jb
mov
fisttpll
pop
cmp
sbb
or
dec
test
lahf
add
dec
add
loopne
push
dec
cltd
mov
mov
cmp
aad
mov
push
xlat
inc
sub
daa
cmc
adc
fcompl
jecxz
push
xchg
test
lods
cs
or
je
setb
dec
pop
fcmovnu
sub
pop
test
loope
mov
rcrl
xchg
popa
fucomip
cmp
xor
dec
or
movsl
inc
xlat
scas
inc
cmc
mov
mov
inc
xor
popa
jecxz
add
or
jle
fists
lret
inc
cmp
inc
push
or
mov
sbb
out
add
push
mov
pop
negl
aam
pop
loope
jmp
mov
insl
data16
push
add
or
push
daa
scas
xor
sahf
scas
and
push
insb
daa
jno
subl
ret
push
movsb
add
mov
pop
cli
lods
jmp
mov
frstor
in
push
pop
icebp
adc
iret
shrl
insb
lahf
dec
jp
sbb
jecxz
dec
out
rol
ret
pop
cmp
aas
lcall
push
add
aam
lods
pop
lahf
lods
pop
sarb
mov
ljmp
cmc
dec
repnz
or
xrelease
push
jle
xor
test
cmp
push
mov
pop
or
sbb
or
inc
mov
jbe
inc
cli
mov
push
mov
fidivs
mov
cld
roll
cs
stos
xchg
out
xchg
inc
loopne
jnp
fs
hlt
mov
sti
push
jmp
xor
mov
sub
mov
scas
aaa
pop
andb
mov
roll
push
repnz
jbe
mov
mov
pusha
iret
js
decl
cld
es
cmpsb
sub
loope
gs
xor
test
mov
or
inc
fcompl
sti
xchg
fyl2xp1
pop
out
cli
sbb
ret
ds
jp
lcall
xchg
mov
sbb
aad
push
push
stc
and
xor
sti
xchg
addl
dec
popa
shrl
add
sub
clc
test
cmp
sbb
pop
ret
push
xchg
imul
and
enter
sbb
lea
mov
int3
shrl
pop
das
rcl
jno
mov
push
int
leave
xchg
sub
sarb
add
shlb
mov
lock
fwait
pop
repz
push
cli
bound
push
xchg
mov
repz
outsl
loop
pop
sub
shll
mov
out
adc
ds
sbb
leave
loop
cmp
fs
jg
and
dec
and
ljmp
jno
fsubrp
sub
mov
cli
adc
test
add
or
jns
stos
xchg
movsb
inc
sub
int3
xor
adc
pusha
mov
in
andl
cmc
subl
dec
jb
fcomip
xchg
ret
mov
icebp
scas
mov
addr16
fs
aad
test
popf
fidivl
stos
or
clc
and
and
xchg
or
arpl
push
pop
aam
push
icebp
jb
xchg
cmc
pop
sub
or
dec
jmp
sub
into
faddl
sub
jns
aaa
dec
fwait
jle
pop
mov
ret
pop
inc
jecxz
jne
jle
movsl
mov
shrb
or
inc
test
sub
jae
in
push
loopne
push
push
pop
inc
out
test
xor
shll
mov
mov
jae
and
movsl
xchg
jb
sbb
xor
mov
cltd
pop
imul
nop
out
push
imul
cld
and
jl
shrl
dec
pop
mov
shll
es
pop
and
push
mov
jbe
mov
mov
adc
jno
into
insl
or
cltd
loopne
out
or
arpl
cmp
lock
push
rcr
mov
test
mov
test
aas
mov
xchg
lds
mov
or
inc
pusha
pushf
leave
adcl
test
add
lcall
cmc
js
aad
popf
int3
fdivr
push
inc
cmp
daa
push
mov
aad
push
mov
pusha
mov
dec
lea
fs
sbbl
popa
out
sbb
sub
and
mov
shll
pop
addr16
xchg
jne
pop
pxor
or
add
movsb
mov
pusha
imul
jns
xlat
or
es
adc
stc
cli
pop
sub
mov
imul
cmpsb
imul
sbb
fs
xor
jno
cmp
mov
add
adc
jmp
mov
cld
inc
mov
xor
dec
bound
jae
adc
mov
xchg
push
lcall
cld
add
adc
test
xor
pop
cmc
nop
into
lea
xchg
fs
dec
push
cwtl
pop
cmp
outsb
rclb
in
cmpsb
inc
pop
dec
sahf
xor
xor
mov
aad
fstl
xlat
mov
or
lahf
jp
mov
jbe
xor
pop
test
int3
sub
scas
push
xchg
or
dec
loopne
push
out
movsl
mov
mov
scas
cld
adc
stos
scas
inc
sbb
sub
das
imul
sbb
pop
inc
sub
ficoml
fbstp
and
lcall
and
fsubrs
inc
pop
cmc
xchg
xor
jl
in
dec
ret
xor
rcrl
sub
clc
mov
test
push
or
ljmp
jno
stc
roll
and
loope
mov
lret
call
or
aad
ds
out
mov
aas
and
inc
cmpsl
ljmp
sub
daa
lcall
xor
fs
enter
mov
andl
jle
int3
sub
pushf
adc
fiadds
push
lret
lret
aad
push
aad
mov
test
lods
clc
test
clc
mov
cmpsl
cmp
test
aaa
fwait
mov
ret
dec
es
cmp
xchg
aas
xor
push
inc
push
mov
mov
cmp
jo
cmp
lcall
and
lcall
ljmp
enter
xchg
cld
rcrb
push
or
pop
fnstcw
mov
cmp
jnp
cmpsl
in
mov
pop
cli
xchg
xchg
in
cmp
nop
cwtl
cmpl
and
mov
xchg
dec
and
or
std
ret
cmc
mov
sub
out
mov
jo
sub
pusha
int
into
iret
int3
jle
int
push
sub
mov
enter
sarl
les
push
inc
adc
add
sbb
cs
ja
lods
bnd
aas
or
dec
pop
pushf
rcr
mov
sbb
nop
fimull
and
xchg
add
push
fisttpl
mov
int3
mov
or
lret
lock
jmp
outsl
setne
lret
pop
in
sahf
das
sbb
hlt
inc
je
jno
dec
pop
je
jb
xchg
das
mov
mov
mov
cmp
mov
iret
dec
jns
dec
mov
cltd
push
push
or
cltd
push
in
lods
ficoms
pop
push
mov
xchg
imul
out
lret
sub
aaa
fists
push
inc
decl
sub
jbe
adc
push
dec
dec
inc
jmp
int
enter
mov
mov
push
fnop
ret
lods
aas
into
js
pop
int3
pushf
fisttpl
jecxz
icebp
adc
shlb
mov
out
sbb
jns
xor
mov
sahf
mov
xchg
shl
ret
clc
pop
push
gs
and
xchg
sub
outsl
mov
xchg
mov
mov
jns
cmpsb
std
cltd
bound
enter
sbb
fstps
scas
jno
pop
adc
jmp
fs
shrb
or
mov
mov
rclb
aas
pop
ljmp
push
xlat
inc
mov
ret
stc
xchg
sets
push
ja
jl
xor
mov
fists
aas
or
dec
mov
fldl
rcll
add
mov
inc
dec
pop
push
adc
mov
xchg
jle
add
pop
loopne
sbb
mov
xor
fildl
dec
jae
insb
push
jecxz
scas
fdivr
iret
xor
jmp
cmp
adc
pop
mov
ss
add
sbb
push
jns
divl
stos
cwtl
jns
cli
lods
jo
push
pop
add
mov
scas
inc
mov
or
aad
mov
hlt
jl
mov
cmp
pushf
lock
cli
les
sub
cli
mov
dec
lods
sbb
fbld
mov
shr
dec
mov
test
aam
fdivp
fimull
mov
loopne
sbb
fldl
and
inc
lret
xchg
lds
mov
push
jno
clc
pop
sbb
or
or
aas
insb
sbb
sarb
or
and
int3
aaa
lcall
cwtl
add
dec
mov
scas
adc
jg
push
ja
jge
into
repnz
bound
or
xor
ja
dec
test
cmp
push
or
sub
xor
add
pushf
add
mov
push
in
fisttps
in
clc
jnp
int
xor
inc
lea
xor
adc
sub
mov
add
mov
push
cmp
outsl
cmp
pushl
test
ret
pop
lock
in
pusha
mov
jg
add
xchg
mov
sbb
mov
mov
jno
cmpsb
mov
scas
cmpsb
inc
dec
rorb
pop
aad
sar
xchg
push
movsl
sti
mov
lret
jne
mov
sbb
dec
adc
sbb
rorb
pop
loopne
xlat
mov
les
inc
bound
pop
mov
cmp
or
movsl
pop
mov
shl
jb
and
arpl
stc
into
imul
cld
clc
adc
mov
das
jo
ds
xchg
es
ljmp
mul
jns
lods
outsl
cmp
inc
add
ss
xchg
mov
decb
cmpsb
mov
push
in
adc
inc
adc
mov
dec
insb
pop
dec
loop
jl
clc
rcrb
push
inc
mov
fxch
pop
out
push
lcall
dec
je
popf
dec
mov
gs
call
jne
sbb
lret
cmp
arpl
mov
push
mov
je
push
lret
subl
ret
lea
xchg
in
fisttps
push
mov
addr16
mov
ret
jmp
lret
inc
sti
push
and
push
out
jmp
cwtl
jp
sub
ss
rcrl
notl
add
pop
ret
dec
cmpsl
out
popf
cltd
jecxz
cmp
push
testb
add
dec
cmpsb
xchg
add
and
mov
cmp
adc
test
mov
decb
into
mov
sar
outsb
je
cmpsl
xor
xchg
mulb
andb
lods
repz
or
rcrb
mov
jecxz
add
insl
out
jno
cmp
mov
inc
adcl
popf
es
or
adc
pop
pop
ljmp
push
sub
push
enter
xor
mov
in
pop
hlt
push
adc
lahf
into
out
mov
lds
stos
es
outsl
push
mov
xor
xlat
fs
daa
in
xor
inc
aaa
fistpll
bound
inc
or
jle
sub
loope
fsubr
fldl
fsubl
leave
arpl
stc
inc
cmpl
xchg
cmpl
jne
fwait
xchg
ja
mov
mov
lods
inc
xor
inc
sub
push
lret
mov
les
xor
push
call
sub
mov
mov
lods
int3
out
cmp
dec
adc
insl
adc
cmp
sub
ret
or
sbb
icebp
push
fucomip
lock
jbe
stc
and
iret
lahf
arpl
bound
cli
out
push
sub
inc
bound
jg
outsl
mov
mov
stc
iret
push
inc
pop
pop
icebp
xchg
ror
inc
fcomps
mov
in
cmp
inc
inc
cmpsb
mov
pop
xlat
scas
cltd
lds
outsb
cmp
sbb
adc
cltd
and
fisttps
xchg
shll
ljmp
dec
pop
aad
ret
and
neg
jmp
mov
inc
pop
inc
insb
or
mov
clc
outsl
jnp
pcmpeqd
mov
add
dec
mul
mov
push
pop
xchg
sub
lods
dec
pushf
push
pop
mov
in
and
jo
daa
lock
dec
loope
sbb
mov
lcall
fcom
pop
stos
jmp
adc
loope
inc
repnz
cmp
cmp
add
daa
nop
out
inc
sbb
addr16
inc
cld
int3
mov
push
xor
dec
stc
cli
jbe
mov
push
loopne
lea
cmc
scas
mov
mov
pop
imul
fcomps
inc
cmc
xchg
clc
testl
xlat
push
pop
or
sbb
ljmp
ss
push
inc
faddl
push
pop
inc
sti
pop
cmpsb
pusha
decl
jb
push
pushf
subl
bound
mov
cmpsl
adc
pop
js
outsl
ret
insl
xchg
jecxz
adc
add
test
enter
dec
paddusw
jbe
add
ljmp
cmpsb
outsb
lret
ret
sbb
rolb
jge
mov
je
pop
dec
push
mov
push
inc
push
fwait
pop
bound
sbb
lret
sbb
sub
aad
pop
xchg
mov
cltd
nop
mov
int
fsubp
pushf
push
dec
pop
xor
fs
jmp
popf
or
cmp
mov
xchg
dec
cmp
dec
les
mov
push
hlt
push
test
and
outsb
fdivr
outsb
jl
je
cli
daa
jge
es
dec
andl
inc
mov
xchg
mov
ja
push
pusha
sbb
xchg
jge
icebp
mov
and
mov
lahf
pop
ss
dec
xchg
sbb
xchg
in
icebp
nop
mov
pop
pop
xor
ret
mov
cwtl
or
fucomip
add
lea
int3
in
push
repnz
popf
xor
add
xchg
cmc
mov
cmp
repnz
adc
cwtl
inc
and
xchg
in
pop
loop
jp
lods
push
cld
inc
stc
insl
push
dec
mov
fnsave
pop
mov
idivb
ss
lahf
mov
dec
mov
out
or
mov
icebp
or
jns
and
jo
xor
stos
or
mov
add
es
xchg
jle
xorl
fidivrs
sub
pop
les
mov
jg
adc
sbb
add
mov
mov
pop
pop
add
push
test
inc
scas
cli
frstor
vfrczps
xchg
jbe
int
aad
aam
pop
inc
or
nop
sub
cmp
pop
sub
clc
mov
jmp
loop
loop
cmp
rolb
jbe
insb
mov
aad
cld
xor
dec
and
jnp
push
stos
loope
cmp
mov
loopne
fwait
movsb
lea
push
out
repz
rorb
sbb
imul
dec
sbb
jbe
subl
sti
syscall
jge
sbb
pop
sub
mov
dec
les
mov
sbb
adc
flds
and
rcrb
movb
sbb
bound
push
je
xchg
aam
cs
into
sub
jnp
stc
nop
pop
lcall
xchg
les
jo
mov
loopne
lcall
mov
cmpsb
jbe
mov
in
negl
leave
std
lahf
cmp
jl
fldcw
mov
fmuls
or
adc
push
cmp
testl
popa
jnp
das
jp
mov
movsl
das
cli
pop
lret
shll
cld
cmp
and
pop
sbbl
popa
dec
mov
fdivrl
or
push
dec
jbe
pop
shr
push
or
mov
sbb
lea
sahf
out
xchg
out
fstps
mov
cmpsb
loope
test
mov
mov
fsubrl
mov
ret
fcomp
jne
sbb
pop
and
sti
in
subl
sti
leave
push
out
insb
inc
pop
lret
loope
dec
pop
xor
pop
push
push
aam
jb
in
iret
inc
push
jne
in
aam
mov
jle
into
xchg
inc
add
jbe
jbe
adc
push
push
mov
mov
cld
ljmp
fistps
popa
cmp
cmpsb
sbbl
decl
add
inc
scas
or
xchg
xchg
insl
stos
and
jecxz
mov
sub
pop
sbb
xchg
into
jae
push
movsl
out
sbb
sub
push
xlat
sbb
cmpsb
lds
inc
out
out
lahf
sbb
adc
push
and
popa
js
add
add
sub
and
sbb
hlt
lret
scas
add
mov
test
cmp
add
pop
push
mov
lds
jnp
mov
mov
dec
mov
je
roll
fidivs
cmp
dec
test
call
pop
rclb
enter
loopne
imul
push
mov
fidivrl
ss
sub
pop
adc
xchg
add
fildl
dec
push
pop
std
push
xor
aaa
js
lods
inc
xchg
adc
lods
dec
testl
addr16
in
add
out
jo
push
sbb
mov
dec
jp
out
clc
push
inc
mov
ficoml
mov
cmovno
addb
dec
cmpsl
inc
fwait
cmpsl
inc
sbb
inc
sahf
scas
add
mov
jae
repz
movlps
adc
inc
or
dec
adc
lock
insl
ljmp
push
sti
jne
lcall
sarb
mulb
outsb
push
add
mov
jge
inc
fld
sahf
xchg
mov
stc
push
inc
std
pop
xor
decl
insb
scas
add
imul
jb
hlt
jae
jl
sub
or
xor
jecxz
xor
inc
aam
mov
jmp
outsb
adc
mov
outsb
fcmovnb
sub
adc
inc
or
enter
xor
push
sarb
and
xor
pop
cld
push
push
in
adc
daa
or
jg
inc
jae
loopne
jl
add
push
xchg
or
mov
and
sub
ds
imul
cwtl
adc
pushf
sbb
or
sbb
xchg
sub
arpl
mov
fldl
push
push
cmp
mov
jno
lods
lret
outsl
call
and
mov
sub
dec
out
imul
push
adc
imul
inc
jb
popa
data16
inc
add
jge
and
movsb
mov
ret
arpl
jns
cmpsl
idivl
add
fmul
aas
stos
adc
sbb
js
arpl
movsb
jmp
test
das
scas
mov
jo
ds
add
mov
pop
popa
and
and
pop
pop
gs
test
add
fcom
pop
cltd
sbb
inc
je
jp
cwtl
scas
adc
aaa
add
iret
cli
icebp
movsl
or
outsb
adc
sbb
and
shl
std
mov
outsl
pop
je
add
rclb
jle
es
lret
cltd
xchg
sbb
cmpsl
enter
sub
jge
cld
dec
in
ss
out
insb
shlb
arpl
popf
test
lea
andb
fisubl
mov
push
xchg
dec
outsl
adc
lods
mov
movsb
mov
mov
dec
nop
scas
mov
pop
fcoml
loop
out
cld
call
cmp
xchg
mov
test
test
or
js
jns
push
cltd
out
sti
rorb
jns
cmp
sub
ss
insb
lret
mov
push
in
das
xchg
jecxz
or
mov
cs
insb
xor
sub
std
pop
shl
sbb
xor
push
and
cmovg
movsb
inc
arpl
and
sbb
out
and
xchg
out
movsb
sti
test
imul
aam
push
popf
sub
xchg
dec
cmp
inc
jns
pop
arpl
push
pop
xor
sub
jnp
sbb
mov
xor
or
and
pusha
xor
add
mov
add
sub
lea
mov
nop
imul
test
or
je
vandnpd
xabort
xchg
sub
fstl
ss
adc
or
inc
sbbl
mov
mov
out
roll
adc
call
pop
xor
cwtl
repnz
ss
in
fldpi
xchg
arpl
jp
loope
mov
sub
sarl
or
mov
mov
addr16
inc
out
mov
repnz
iret
or
mov
pop
lea
rcrl
ja
cli
and
push
cmp
cmc
into
pop
aad
cmc
inc
aas
add
imul
cli
aam
sub
es
sub
xchg
cltd
dec
xchg
movsb
stos
int
sahf
jns
mov
test
jno
pop
xor
hlt
popa
inc
inc
out
addl
inc
scas
xlat
pop
andl
push
mov
in
cld
insl
mov
addb
nop
lock
add
mov
mov
in
pushf
ret
pop
sahf
mov
shlb
sbb
test
add
xor
fsub
lahf
jg
xchg
aam
aas
mov
or
adc
jl
mov
test
pop
xor
push
jb
pop
jo
adc
xchg
jns
lods
lahf
clc
or
je
iret
adc
mov
push
ds
jp
sub
lock
inc
outsb
sub
xor
aas
mov
lahf
insl
ret
mov
jle
xchg
insb
in
cmp
push
jp
push
jle
fisttpll
push
imul
sub
fwait
mov
jge
cwtl
jmp
push
lahf
decb
test
popf
clc
adc
mov
xchg
add
sbb
push
add
fsubs
cli
shlb
icebp
jnp
movsb
sbbl
xor
or
out
push
test
jb
xor
mov
scas
lcall
shlb
pusha
addr16
sti
ror
jnp
int3
fildll
lods
xlat
dec
push
mov
sbb
repnz
push
mov
pop
ljmp
push
in
stos
stos
or
rorb
subl
dec
xor
add
xor
mov
or
mov
push
mov
pop
mov
xor
pop
push
pop
mov
inc
idivb
daa
push
add
and
rcll
les
cld
or
adc
iret
mov
pusha
ja
jae
inc
test
inc
xchg
mov
les
mov
push
aad
cwtl
and
add
or
mov
inc
mov
scas
cld
shlb
mov
outsl
loope
xchg
push
insl
add
mov
out
in
pusha
test
jl
inc
fwait
ljmp
loop
mov
pop
aam
xor
jbe
mov
aad
loopne
cs
mov
gs
fsubs
lods
jno
icebp
cwtl
out
shl
insb
negb
mov
xchg
iret
addb
movsb
in
sbb
adc
pop
je
es
xchg
aam
cmp
xchg
cmc
sbb
enter
cmc
jmp
enter
jl
mov
mov
leave
clc
xchg
push
mov
shlb
sub
loop
add
xlat
popa
cli
sub
arpl
and
add
mov
xor
lcall
mov
testl
loopne
and
gs
ss
dec
out
pushf
negb
mov
pop
and
insb
nop
jnp
dec
sahf
sbb
dec
mov
pop
xor
dec
pop
push
jge
pop
sbbl
stc
mov
test
imul
lods
aam
sbb
pop
hlt
fdivl
and
cmpsl
cmpsl
lds
out
sbb
in
in
std
jo
std
jae
sub
into
enter
leave
and
cmp
int3
push
mov
rol
pop
xchg
fstl
in
scas
aas
outsb
leave
xchg
mov
mov
mov
and
aas
push
popa
jg
pop
icebp
xor
mov
test
cmpsb
or
push
xor
mov
push
sub
inc
cmp
or
mov
in
jb
in
pop
js
mov
insb
dec
inc
stc
arpl
push
xchg
xchg
jmp
lds
add
inc
imul
mov
sbb
xchg
nop
mov
push
sbb
mov
push
notl
xor
add
sub
mov
jb
in
adc
pop
cwtl
push
mov
mov
cmp
push
push
jl
mov
push
fcmovnu
lcall
fstp
ret
insb
test
shrb
xor
shrl
jge
shl
mov
lret
push
cmp
inc
fdiv
adc
mov
test
test
cmpl
fmull
inc
sub
and
pop
mov
dec
in
xor
jl
pusha
xor
mov
repz
mov
in
and
push
mov
and
xchg
movsb
dec
je
aad
out
mov
dec
mov
sub
push
imul
mov
xchg
testb
add
mov
xchg
xchg
adc
gs
addr16
push
dec
call
sub
sbb
lcall
xchg
mov
iret
mov
jge
movsb
repnz
adc
enterw
jp
mov
mov
shrl
out
cwtl
adc
push
mov
mov
and
and
repz
sub
push
and
dec
roll
xchg
adcl
mov
sahf
mov
sahf
lcall
imul
mov
lret
fldl
ljmp
aaa
aas
mov
inc
in
and
xor
lcall
ja
rorb
pop
aaa
xor
jp
loop
dec
adc
lods
xchg
mov
or
mov
or
fcomps
cli
js
or
ljmp
hlt
testl
decl
inc
pop
mov
mov
jle
jmp
movsl
inc
scas
fst
imul
sub
inc
sbb
add
mov
mov
mov
lret
cld
bound
pop
cmovl
xor
mov
sbb
pop
sahf
push
lods
xorb
inc
aam
xchg
adc
movsb
mov
dec
jae
sbb
popf
and
stos
xlat
mov
push
sti
aad
xlat
outsb
lret
mov
inc
cmc
cmp
das
adc
add
sbb
xor
je
xchg
push
shll
out
lret
jle
push
notb
ds
pop
pop
das
push
push
lea
mov
jne
jmp
fsubs
pop
ror
fstps
push
mov
cmp
fiaddl
jecxz
outsl
mov
test
mov
jg
push
xchg
fcoml
negl
cwtl
cmp
stc
inc
pop
daa
stos
sbb
loope
xlat
aaa
ds
nop
iret
jns
sbb
lret
and
mov
lods
cwtl
lods
aaa
dec
jb
jg
out
ss
pop
mov
cltd
mov
test
mov
and
shlb
mov
jne
mov
lock
pop
sub
pop
test
mov
push
push
xor
xchg
cs
push
adc
sub
push
dec
js
mov
out
push
fldt
cmpsl
lret
jae
mov
xchg
outsb
xorb
jo
in
int3
in
divl
adc
fxch
jmp
mov
xor
xor
scas
fs
and
xchg
lds
test
mov
and
fs
and
mov
xchg
dec
das
lret
daa
add
lret
pop
out
bound
test
les
xor
mov
movl
fld
stos
fnsave
aad
xchg
icebp
sbb
or
push
xlat
cmpsb
sbb
cmpsb
dec
add
mov
shlb
mov
push
sbb
ds
mov
xor
sbb
cmp
mov
not
pop
mov
fadd
cmp
addr16
pop
push
xor
inc
sti
adc
jecxz
jb
nop
arpl
xor
or
in
imul
sub
insb
inc
pop
pop
into
dec
adc
addr16
xchg
xor
dec
call
push
push
mov
pop
daa
pop
dec
add
mov
sbb
iret
subb
cs
push
add
add
pop
insb
loopne
data16
out
push
fcoms
xchg
or
lcall
inc
daa
outsl
inc
arpl
aaa
adc
fcompl
mov
rol
in
inc
mov
pop
les
je
jae
cmp
pop
sti
push
loop
cmpsb
ret
pop
xor
call
notl
roll
shrl
mov
mov
push
pop
icebp
cmp
dec
ds
popf
nop
dec
mov
pop
enter
jmp
dec
pop
roll
cmc
add
xor
stos
adc
cwtl
inc
or
or
lcall
xchg
rcrl
hlt
push
lods
loopne
lods
and
push
pop
inc
xor
in
push
ret
mov
pop
iret
popa
or
ficompl
subl
lea
dec
push
xchg
sahf
call
jae
jmp
push
push
or
addr16
andl
xchg
xor
gs
jl
or
lds
push
dec
add
in
jae
xor
lcall
divb
insb
nop
mov
test
scas
inc
sbb
into
fcoml
in
shlb
fnsave
call
xor
ljmp
mov
stos
inc
leave
dec
outsb
add
mov
popf
jo
pop
mov
popa
adc
popl
dec
rcll
xor
xchg
test
incb
pushf
popa
adc
fisubl
cmp
rcrb
test
add
mov
stos
mov
push
lcall
fadds
push
lcall
sbb
movsb
add
ja
xchg
or
das
repnz
lret
jne
adc
xchg
mov
pop
push
or
and
lcall
test
fucom
push
cmp
imul
sbb
test
cmpsb
imul
mov
fwait
lcall
push
call
xor
add
jge
xchg
xor
sbb
inc
or
xchg
test
mov
movsl
pop
and
add
ds
lret
jbe
mov
clc
aam
aas
test
sbb
dec
cmpsb
cmpsb
lock
add
dec
stc
call
push
lea
mov
add
fldcw
or
mul
or
rclb
pmaddwd
push
mov
in
jecxz
popf
xchg
cs
jbe
adc
sbb
in
mov
rcr
pop
test
int3
mov
call
mov
mov
sbb
popa
mov
adc
push
cwtl
mov
cmp
outsl
push
pop
test
lret
sbbl
rep
cmp
sbb
push
rol
adc
cmp
sub
xor
movsl
sub
repnz
in
shrb
mov
lock
xchg
xor
or
inc
vphaddbw
popf
rcr
rorb
loop
xor
and
and
dec
fistpl
outsl
gs
add
lods
inc
or
mulb
ja
out
pop
cltd
cmp
outsb
jg
jle
stc
nop
rorl
dec
loop
out
fs
imul
rclb
pop
hlt
fcmovu
push
add
mov
xor
das
test
in
fcmovne
and
xchg
cld
xchg
sbb
sti
mov
dec
xor
ljmp
rcr
xor
jne
pop
mov
scas
fdiv
jns
cmp
xor
add
or
cmc
or
jbe
xor
rclb
fbstp
cmc
jne
xchg
xchg
inc
dec
fmuls
mov
sbb
and
adc
or
or
add
xlat
cmp
pop
mov
xor
pushf
lock
sbb
and
sub
xchg
out
pop
popa
add
imul
pusha
outsb
fsubr
lods
je
sti
xchg
test
inc
rep
pop
test
clc
test
cmp
aam
adc
inc
add
pop
jne
jnp
cmp
inc
cmp
mov
pop
fiadds
adc
mov
xchg
daa
cli
dec
pop
cmc
pop
sahf
cmp
imul
sbb
clc
mov
orb
lock
jmp
outsl
andl
inc
loope
adc
pop
xlat
pop
jae
in
cmp
sub
cwtl
jne
push
gs
lcall
adc
inc
movsl
rclb
icebp
add
mov
imul
call
xor
repnz
fnsave
push
inc
sahf
jae
sahf
push
fisubs
adc
sahf
pop
test
enter
in
sub
fisttpll
lods
out
outsb
sub
cmp
add
fcomp
push
cwtl
out
div
mov
rcll
add
sbb
flds
push
inc
popa
in
cmpsl
xchg
mov
pop
les
sub
mov
xchg
mov
cld
jg
and
scas
sbb
add
rolb
pop
bound
fsubr
repnz
sub
test
fisttpl
imul
mov
inc
sahf
inc
test
imul
push
test
jmp
aaa
scas
cmp
mov
stc
adc
pshufw
bound
sahf
and
jle
insl
popf
iret
or
ja
push
icebp
mov
lcall
jns
inc
sbb
lcall
ret
enterw
das
inc
sbb
sub
add
pop
mov
out
xchg
orb
or
mov
cmp
insb
pop
loop
rcl
push
ljmp
pushf
and
mov
and
cmp
pop
out
dec
xor
adc
add
enter
push
pusha
or
popl
xor
outsb
and
pusha
lods
adc
xchg
adc
mov
or
sbb
sub
sahf
add
addr16
xlat
gs
inc
and
dec
out
popa
mov
jbe
mov
sarb
xor
sub
cwtl
sbb
or
pop
inc
push
dec
xor
leave
outsl
mov
jbe
pusha
push
and
fnsave
lahf
pop
xor
pop
andl
adc
lods
cmp
test
lret
add
cwtl
jb
and
xchg
je
repnz
jne
jb
mov
xchg
sbb
loope
mov
out
mov
jl
cltd
sbb
lret
fstp
cmp
pop
sub
imul
rorl
and
les
adc
pop
test
aaa
sahf
xchg
cmp
test
mov
repnz
loope
fists
roll
bound
mov
mov
mov
add
xor
pop
cwtl
or
lret
or
pushf
scas
or
call
decb
push
push
in
jns
popf
nop
ficoml
je
cmp
incl
rcll
pop
push
mov
lea
out
icebp
cld
int
xor
mov
jecxz
push
leave
insl
rorb
mov
popa
sbbl
into
mov
cld
pop
shrl
mov
add
sbb
xchg
xchg
and
inc
add
jne
lret
scas
cli
fwait
bound
mov
mov
inc
fcompl
mov
or
test
enter
add
cmc
repz
and
mov
loope
in
or
and
fstps
inc
mov
test
fistpll
xchg
cld
repnz
xchg
addr16
cltd
mov
adc
aaa
je
movsb
out
std
pusha
ds
clc
mov
shl
clc
imul
dec
push
push
push
pop
mov
sub
pop
mov
es
lcall
mov
dec
in
push
insb
adc
imul
rorb
stc
jns
lcall
and
cwtl
test
leave
jno
adc
mov
inc
mov
sbb
xor
inc
inc
xchg
pop
sbb
mov
jmp
aaa
js
add
add
nop
popa
pop
cld
and
push
mov
xor
pushf
mov
mov
xor
popf
neg
mov
or
iret
adc
push
mov
sbb
sub
sub
ja
inc
add
and
cmpsb
std
jge
loopne
inc
inc
sub
jbe
mov
test
imul
and
inc
outsl
pop
xorb
int3
xor
sub
dec
mov
inc
ficomps
mov
into
arpl
ljmp
jnp
inc
ja
insl
bound
int
add
ljmp
dec
dec
mov
dec
pop
ret
pusha
dec
sbb
xor
jp
push
push
out
pop
out
inc
and
neg
sbb
mov
adc
mov
xchg
sub
push
pushf
int3
aaa
add
out
mov
and
sub
inc
adc
movsb
inc
cmpsl
scas
pop
sub
lcall
pop
or
stc
inc
imul
inc
in
push
rcrl
inc
xlat
adc
imulb
shl
adc
cltd
pusha
mov
mov
cmp
push
dec
repnz
stc
sub
les
push
scas
mov
movsl
inc
mov
adc
jb
jmp
std
xchg
insl
and
inc
add
sbb
shrb
pop
sahf
sub
sbb
popa
mov
mov
fstpl
insl
mov
sbbl
mov
iret
data16
inc
push
pushf
ret
add
int
ss
jle
add
iret
push
sbb
and
cmp
insb
add
cmpsb
add
cwtl
testb
and
xchg
in
es
pop
inc
scas
dec
inc
add
adc
into
lcall
mov
cmp
rorl
shll
mov
pushf
pop
xlat
push
aad
ja
pop
or
inc
push
movsb
and
out
nop
pop
not
out
mov
xchg
mov
add
inc
lods
repnz
lret
fcmovnb
mov
cmp
push
inc
fistl
out
aad
lret
xchg
sbb
pop
mov
mov
loop
push
addl
clc
shrl
jp
and
decb
xchg
int
call
lods
xchg
lock
outsl
mov
test
adc
xor
mov
ljmp
pusha
int3
faddl
mov
push
xchg
in
imul
hlt
xchg
cmp
outsl
dec
loope
insb
ss
mov
fldcw
cmp
je
mov
std
pop
ret
xchg
aam
adc
outsl
jae
popf
dec
mov
cmp
out
ret
int3
outsb
dec
js
lock
push
sbb
popa
pusha
mov
testb
xor
xor
add
mov
mov
xlat
sub
mov
ret
dec
pop
movl
or
out
in
int3
inc
adc
popf
pushf
mov
cld
jg
xchg
xlat
mov
popf
loopne
jno
orl
pusha
sbbl
into
xorb
fdivrs
xchg
shl
mov
xchg
fwait
in
je
mov
and
and
sbb
decb
sbb
xlat
dec
mov
scas
add
mov
push
push
in
cmp
mov
cmp
jns
rcll
test
xchg
mov
push
mov
mov
xchg
int
imul
push
fmull
repz
xchg
xchg
call
and
xchg
decl
xchg
push
push
icebp
cltd
xor
add
cmp
adc
xlat
insb
fdivrl
add
ficoml
lods
fists
hlt
int
mov
dec
data16
jle
lcall
ja
add
imul
jae
ficoms
push
mov
cmpsb
aaa
push
sub
xor
mov
popf
hlt
clc
lods
inc
es
mov
sub
sbbb
xor
jl
notl
dec
out
dec
loop
jg
leave
push
je,pt
add
adc
jo
leave
rorb
repz
aad
fisubl
cmp
adc
hlt
int
shlb
ljmp
jns
dec
mov
leave
lcall
xchg
and
xchg
sub
mov
sub
mov
divl
shl
xor
out
es
insb
sahf
xor
pusha
dec
sub
bound
push
mov
lcall
inc
lods
and
roll
ja
aaa
mov
jo
loop
sbb
clc
push
and
dec
popf
xchg
sub
add
fmulp
xorl
mov
fnop
xchg
idivl
jbe
inc
sahf
pusha
inc
jg
cmc
and
xor
push
sahf
call
call
mov
adc
pop
pushf
dec
popf
cmpsb
mov
imul
fbld
ss
jbe
lahf
stos
cmp
jbe
pushf
pusha
mov
sarb
hlt
jg
pop
xlat
mov
push
sub
pop
jbe
sbb
imul
sub
inc
dec
dec
inc
jge
jae
in
es
popa
cmp
inc
inc
icebp
adc
pop
jne
js
cmpsb
scas
push
cmp
sahf
push
mov
test
dec
repz
stc
icebp
insb
mov
popa
shll
arpl
xor
push
lret
shll
fidivrl
test
xorb
pop
test
or
pushf
mov
sbb
je
sbb
js
mov
jmp
cmpsl
out
fisttpll
test
test
popf
rolb
xchg
mov
scas
fnsave
jo
andb
out
stos
pop
jnp
movsl
mov
scas
adc
rcl
dec
test
outsb
mov
dec
out
xchg
jno
dec
imul
stos
xchg
inc
sti
cmp
mov
sub
mov
in
cmp
cmp
fstl
jmp
and
cmp
sbb
pushl
ljmp
sub
pop
das
and
pop
repnz
cmp
test
xor
xchg
pop
divb
jne
add
sbb
xchg
add
push
lds
ret
jns
or
mov
push
push
add
mov
testl
adc
xor
leave
xor
adc
aam
ja
push
loope
loopne
in
adcb
out
imul
mov
shlb
imul
xchg
jbe
jge
stos
pop
mov
push
cmp
jp
and
lea
adc
test
add
mov
fiaddl
fldpi
xchg
or
leave
int3
pushf
movsl
pop
mov
mov
popa
leave
jecxz
adc
mov
call
fcoml
jle
cmp
std
add
xchg
adc
std
insl
mov
jne
xor
ret
out
je
and
repz
and
jl
mov
call
adc
into
sub
mov
in
lret
jo
and
pop
dec
insb
mov
sahf
outsl
loop
pop
xor
jno
cs
frstor
cmp
testb
negl
jne
adc
inc
adc
fwait
xchg
push
mov
cltd
divl
jno
pusha
repnz
data16
sub
xchg
xor
mov
cs
cmp
cld
flds
sub
cmp
mov
pusha
jmp
mov
data16
jae
push
inc
xchg
xchg
fidivl
mov
lods
mov
cmp
out
leave
xchg
xor
sbb
test
sbb
pop
mov
cmp
and
js
mov
dec
outsb
lods
cs
push
sbb
mov
push
add
enter
push
xor
fdivs
push
jnp
lock
lret
test
inc
and
push
daa
data16
push
decl
lret
data16
push
jg
out
jo
mov
cwtl
xchg
pop
imul
rclb
inc
clc
mov
push
and
mov
add
in
aas
cmp
out
pusha
xor
sbb
and
lcall
adc
loopne
dec
les
and
enter
hlt
adc
aad
imul
jge
push
push
in
sub
cld
js
push
lds
les
inc
sbbb
popa
lret
outsl
ja
and
testb
shlb
add
cmp
add
sub
cli
push
es
pop
push
jae
frstor
outsl
ret
and
andnps
or
push
jmp
and
xor
aad
fcomi
adc
divb
jbe
dec
sbb
jle
adc
pop
xchg
dec
andb
test
imul
lcall
repz
pop
stos
sbb
mov
ret
xchg
int
lahf
mov
cs
xchg
jle
std
xor
loope
idivl
dec
shr
loop
jl
int
jne
lret
enter
pusha
pop
dec
push
mov
mov
push
lea
xchg
mov
orl
mov
fstp
in
push
repz
test
mov
add
mov
mov
dec
shrb
add
xor
fucomip
xor
in
fwait
loope
cs
xor
pop
mov
push
adc
mov
mov
fldt
repz
pop
xor
cmp
lcall
push
adcb
push
nop
jne
sub
jb
rclb
add
cmpsb
or
mov
pop
pushf
fdivl
push
jmp
mov
mov
and
inc
add
mov
sbb
inc
push
fisubs
lea
int
push
push
in
xchg
push
xor
inc
repz
jno
jecxz
sub
push
je
jle
push
xchg
inc
mov
inc
inc
jae
xchg
out
lret
mov
mov
sahf
pcmpgtb
and
adc
jg
sub
ja
xchg
in
cwtl
inc
sbb
dec
cmp
adc
inc
pop
xchg
fcmovnu
inc
push
mov
aad
subl
mov
jmp
insb
nop
xor
xor
push
inc
inc
fistps
hlt
and
jg
dec
xor
aas
add
fidivrs
dec
push
enter
mov
lahf
orb
fucomp
push
fs
cmp
ret
dec
aaa
setl
std
aad
sub
js
stc
mov
fbstp
xchg
pop
dec
fdiv
xor
pop
test
inc
shlb
add
cmp
sub
jp
lret
mov
push
or
jo
loopne
sbb
or
test
mov
cmc
dec
lea
repz
jl
sbbb
mov
enter
mov
mov
inc
imul
push
test
ds
int3
fstp
aad
int3
les
jge
test
add
xchg
xor
cmp
pusha
add
subl
int
pop
test
mov
mov
orb
xchg
mov
or
pop
mov
jge
adc
push
loopne,pn
xchg
mov
pushf
xor
pop
and
int3
mov
or
mov
jg
adc
mov
test
mov
ljmp
cmp
mov
cld
push
dec
pop
loop
mov
push
xchg
lods
inc
cld
or
adc
pop
push
adc
mov
jno
push
ret
mov
dec
adc
stos
stos
dec
pusha
shlb
popw
gs
mov
mov
out
jnp
mov
imul
xchg
das
fyl2xp1
fstpt
adcb
push
xor
arpl
and
pop
notb
and
test
sbb
adc
lods
movsl
pusha
sbb
add
in
cmpsb
push
sbbl
pop
push
outsl
clc
les
rol
out
or
or
in
test
pop
fisubrl
int3
pop
sub
test
mov
fbld
or
cmc
andb
pop
xchg
xchg
dec
xchg
cmpsl
hlt
mov
or
inc
addl
sbb
into
loope
xor
shlb
dec
decl
mov
jbe
mov
out
in
fistl
mov
vpcmpeqd
jge
adc
dec
lcall
jmp
ror
pop
mov
int
jno
mov
in
inc
xorl
mov
sub
pop
repnz
xor
mov
cld
lcall
mov
lods
stos
dec
add
je
pusha
cmpsb
jno
sbb
test
cmp
arpl
mov
fs
jmp
int3
jle
xor
add
dec
daa
daa
aad
aaa
dec
push
pop
push
push
xrelease
xlat
or
push
dec
adc
pushf
adc
addb
imul
daa
dec
lahf
fstl
sbb
and
aaa
movsb
push
xlat
aas
add
xchg
and
imul
jle
xor
out
repz
movsl
pop
dec
pusha
lahf
cmp
ret
mov
fists
pop
push
fbstp
inc
inc
loop
xchg
dec
xchg
dec
push
ds
adc
cli
out
call
or
clc
push
repnz
sbb
das
cmp
mov
mov
sahf
jo
jg
push
push
imul
mov
sub
jmp
aam
and
cltd
sti
jne
mov
scas
and
dec
inc
andl
lods
and
cmp
mov
imul
jnp
lock
add
xchg
icebp
mov
arpl
sub
sub
sub
adc
dec
mov
mov
lock
test
mov
shlb
fistl
cmp
mov
dec
add
mov
sbb
aas
lret
lods
pop
inc
iret
mov
mov
fldt
clc
mov
add
negb
jae
pop
pop
mov
mov
add
dec
xor
cmp
push
inc
dec
mov
inc
mov
sub
sub
scas
inc
add
ss
int3
fisubs
mov
jl
sahf
fnsave
adc
es
or
cltd
rolb
sbb
fldenv
inc
fiaddl
lret
cwtl
scas
push
or
lods
lods
push
movsl
testl
add
jp
out
sub
cmp
jnp
jmp
jecxz
xor
add
pop
push
dec
pop
mov
push
es
fsubrl
into
movsl
adcl
shrb
add
inc
push
dec
je
clc
cmpb
je
sub
aam
rolb
jbe
push
sbb
gs
push
adc
dec
ja
arpl
popa
xorl
mov
dec
out
mov
add
and
stos
lods
mov
int3
pop
or
pop
in
jne
mov
mov
sahf
dec
cmpb
push
leave
lahf
xchg
pushf
jmp
mov
popf
push
inc
and
fcomip
leave
sbb
mov
mov
mov
addl
ja
mov
addr16
inc
pop
cmp
mov
jns
jbe
mov
sbb
icebp
insb
adc
pop
sub
add
test
dec
test
sti
fisubrl
shll
lcall
mov
pop
repz
inc
inc
fdivr
mov
push
fadds
aaa
push
stos
lcall
jno
mov
cmpl
mov
cvtdq2ps
mull
movsb
je
push
popa
js
mov
ret
icebp
push
lds
dec
aad
call
outsl
or
inc
leave
jg
adc
sti
push
jbe
dec
xchg
lods
clc
dec
mov
xchg
cmp
popa
xor
fadds
mov
jns
and
int3
cmp
cmc
mov
pop
push
es
cmp
inc
add
es
ficomps
lahf
xor
sub
xlat
mov
daa
outsl
addr16
out
dec
jmp
or
pop
pusha
xchg
rol
cmc
push
xchg
sub
pop
mov
rolb
iret
data16
in
test
outsl
cs
mov
cmp
sarl
xlat
nop
inc
and
mov
pop
enter
cmp
dec
pop
daa
pop
mov
ja
outsl
enter
pop
and
push
push
inc
jne
add
lahf
popa
cmp
sub
and
cld
ljmp
ljmp
hlt
adc
testl
stos
adc
pop
cmp
jg
mov
cmc
jecxz
xchg
pop
or
or
addl
test
sahf
jne
leave
lea
pop
jmp
out
push
mov
test
cltd
xor
rcl
mov
push
hlt
rol
scas
cmpsb
lock
lret
daa
cmp
aad
dec
jne
jmp
mov
js
cmp
push
pop
inc
into
lea
xor
lcall
lret
addr16
adc
jecxz,pt
xchg
push
popa
cli
mov
cmp
inc
fdivs
jmp
mov
inc
dec
aas
cmp
mov
ss
xchg
das
inc
mov
push
mov
ja
fdivl
xchg
lods
pop
je
add
xchg
cmpsb
sbb
in
sub
mov
sbb
sar
sub
and
dec
inc
add
fisttpll
stos
test
clc
bound
mov
pop
add
mov
test
mov
push
push
in
pop
cmpsl
dec
fstl
bnd
or
or
movsl
daa
push
mov
pop
insl
add
movsl
cmp
dec
jo
xchg
call
dec
pop
fs
test
popa
pop
das
sbb
mov
cmpsb
cmpsl
sub
pop
xor
jecxz
jbe
and
lret
rcr
lock
and
shlb
rcll
dec
add
scas
push
and
sarl
test
inc
pop
sub
sbb
xor
ds
cmc
outsl
dec
pop
js
add
and
ret
test
xor
movsl
sbb
insb
pop
dec
cmp
mov
int3
lret
mov
push
xchg
sub
lahf
mov
mov
cmp
das
xor
arpl
sahf
push
hlt
sarl
gs
int3
test
add
inc
jne
out
add
add
mov
mov
ds
and
mov
test
and
dec
xlat
out
adc
xchg
movsl
xchg
xor
sti
mov
sub
xchg
add
lahf
stos
pusha
cmp
inc
gs
arpl
xor
cld
sbb
mov
fcoml
lahf
lods
fwait
lahf
jnp
les
cmc
jno
addr16
lahf
or
pop
sub
mov
mov
out
mov
mov
jno
notb
mov
dec
testb
jmp
ret
stos
mov
sbb
sahf
push
pop
testb
pop
lahf
add
pushf
xor
fbld
push
rcrb
add
scas
inc
xchg
inc
xor
mov
xor
push
mov
aam
je
pop
pop
pop
out
aam
loopne
lods
test
call
jae
sbb
cltd
jbe
insl
xor
mov
push
in
cmova
mov
insb
outsl
pop
ret
cmc
daa
rcrb
cmp
out
and
and
inc
sub
rcrb
fnstsw
push
in
sbbb
xchg
xor
add
fsts
or
fs
lcall
and
stos
dec
inc
dec
cmp
pop
sbb
cmp
loop
inc
lea
add
dec
jecxz
push
add
out
push
inc
xor
mov
inc
sub
jl
sub
mov
push
xor
insb
cmp
mov
push
pop
jo
sbb
fmull
lock
jo
inc
xchg
push
je
bound
inc
add
movsl
nop
inc
fadds
or
mov
dec
insb
cmp
xchg
aaa
dec
mov
rclb
nop
add
rcl
push
xor
ss
mov
pushf
sub
jnp
les
xor
or
jbe
lret
stos
stc
icebp
mov
lretw
inc
stc
adcb
xchg
mov
cs
pusha
pop
pop
stos
dec
or
cmp
xor
cmp
or
lret
hlt
sub
adc
adc
loopne
adc
cmp
jbe
clc
je
jno
popf
push
mov
mov
faddl
mov
sbb
mov
repz
inc
mov
fnsave
cmp
jo
fdivs
cmpsl
xchg
cli
scas
xchg
sahf
jne
stos
cs
int3
clc
decb
mov
mov
or
lret
mov
lock
imul
insb
in
xchg
sub
jle
pop
out
es
adc
add
push
inc
mov
or
daa
mov
rcl
into
add
mov
xorl
call
mov
mov
lcall
fwait
jno
aad
jmp
call
pusha
jmp
adc
jo
pop
imul
jno
adc
and
das
cmpsl
push
sahf
push
std
nopl
in
jg
jns
mull
test
xchg
popf
int3
jg
inc
xchg
sub
sub
stos
lea
mov
data16
clc
ret
lds
ds
les
loope
xchg
jno
mov
mov
pop
cld
inc
jnp
add
xor
jmp
bswap
popf
cmpsl
pushl
and
add
jp
gs
add
pop
cmpsb
cmp
cmp
dec
mov
jo
rolb
or
mov
loopne
clc
push
jb
xchg
adc
insl
push
out
pushf
sbb
and
cmp
mov
dec
jge
jl
push
shlb
mov
in
jmp
cmp
mov
in
mov
movsl
push
cmp
daa
mov
and
and
cs
test
sbb
outsl
pushw
sub
mov
ret
jno
pop
mov
mov
or
bndldx
inc
or
jmp
pop
xor
lods
iret
push
scas
or
nop
jnp
in
popf
pop
xor
jae
mov
fidivrl
shr
push
cltd
add
mov
testl
cmp
aad
sbb
sti
pop
jo
push
js
cmp
xchg
inc
arpl
cmp
xor
clc
adc
fstps
fidivs
push
add
das
into
in
add
xchg
inc
aaa
sub
push
pop
pop
in
push
test
pop
call
or
popl
sub
adc
mov
jb
pop
inc
orb
push
add
xlat
sahf
mov
vminpd
mov
andl
push
cmp
add
inc
rcrb
mov
pop
xor
mov
xchg
xor
jge
or
stos
pop
repz
shlb
and
ss
lret
packuswb
xchg
mov
cltd
je
imul
and
mov
sbb
jne
adc
clc
stos
mov
mov
inc
push
fisttpll
lock
out
jecxz
sub
cmp
jge
pop
xor
imul
push
add
jle
loopne
push
push
inc
push
sbb
aaa
dec
cmp
pop
icebp
sub
scas
fistl
add
insl
push
and
pop
mov
and
mov
sbb
and
ja
mov
pop
cwtl
mov
enter
les
test
movsb
cmpsb
inc
scas
into
gs
lods
dec
dec
pusha
pop
in
dec
push
sarb
les
sub
arpl
cmc
push
jns
je
sti
adc
lret
pop
dec
loope
sub
loopne
pop
mov
ret
push
inc
faddl
movsb
aas
mov
arpl
outsl
sbb
dec
dec
xor
aam
push
or
es
pop
out
lret
je
mov
mov
or
xor
int3
pusha
pusha
dec
pop
lods
mov
mov
out
out
test
pusha
inc
pushf
push
or
das
add
je
mov
inc
mov
add
push
dec
bound
scas
xor
sub
xchg
xor
call
mov
xchg
out
mov
mov
aas
loope
add
fnstsw
mov
mov
stos
and
imul
jne
jg
xor
insl
adcb
mov
divb
mov
xchg
mov
or
mov
aad
bound
in
andl
mov
test
or
shrl
fnsave
xchg
and
into
in
std
icebp
xchg
das
bound
mov
pusha
mov
xlat
fidivl
pop
insl
test
lock
mov
lods
mov
or
popf
push
inc
lcall
repz
sub
pop
cmc
hlt
inc
dec
mov
sbb
daa
dec
push
sbb
aad
dec
jmp
int
add
arpl
push
inc
les
je
addr16
repnz
shl
aas
adc
dec
sub
cmp
inc
outsb
jl
pop
mov
ret
outsb
sub
add
dec
adc
pop
test
into
xor
daa
pop
lahf
bound
dec
icebp
xchg
out
and
cmp
add
cmp
push
iret
dec
cld
in
and
int3
push
mov
into
inc
push
ljmp
insl
fistpl
pop
lods
jge
sbb
mov
xor
sub
push
insb
mov
fwait
sub
mov
xor
jbe
ret
xchg
lods
std
aam
out
and
or
jno
cmp
daa
shlb
xor
inc
pop
sub
fmuls
loop
mov
mov
insl
mov
sub
sti
add
cmp
xchg
mov
and
pop
mov
cld
jae
lcall
push
mov
jmp
mov
fmull
insl
das
movsl
xor
fcoms
and
xor
jl
mov
jg
adc
xchg
sti
setg
sub
jle
jp
adc
mov
push
cld
fcoms
sub
adc
mov
aas
testl
adc
cmpsl
es
mov
enter
ret
adc
jl
pop
cmp
call
mov
fs
cmp
aaa
push
mov
mov
push
cmp
lock
test
mov
mov
pop
push
aas
pop
add
inc
cmp
pop
out
cmpsl
and
mov
dec
fimuls
stc
out
push
push
pop
cld
lea
mov
out
sarb
fdivrs
xor
stos
movsb
jge
dec
pop
cmp
cs
mov
repnz
mov
adc
adc
sbb
mov
push
mov
daa
xor
insb
add
loope
dec
pop
loope
jnp
mov
les
xor
dec
lcall
pop
xlat
mov
loope
or
jmp
pop
into
jge
mov
je
xorb
push
lods
idivb
jae
push
ret
stos
mov
aaa
icebp
test
movsb
pop
scas
sub
push
jmp
sbb
pop
xor
add
and
mov
lret
and
mov
xor
lret
push
nop
dec
inc
popa
out
push
imul
sbb
inc
pop
imul
pop
out
ds
cmc
stc
scas
iret
es
mov
mov
add
pop
les
xchg
adc
fistpl
sahf
movsl
mov
jp
xlat
cmc
inc
fisttpl
pop
out
or
cltd
je
adc
ja
andb
scas
push
cmpsb
andb
adc
mov
test
movsb
push
jge
jp
pop
pop
fiaddl
aaa
test
fidivrl
xchg
js
sbb
int3
push
cmp
xchg
dec
repnz
push
cmp
adc
or
popf
hlt
outsl
sarl
stc
or
jbe
sbb
jmp
sti
sbb
leave
xor
jb
push
aaa
repnz
xor
loop
fldcw
incl
jl
jo
out
push
sub
cmp
pushf
lret
cld
repnz
pop
stc
je
xlat
insb
add
sti
sub
xchg
add
lret
mov
or
cmp
sbb
cmp
jmp
int3
cmp
inc
aam
pop
push
test
push
sub
push
pop
out
outsl
lcall
inc
cwtl
push
sbb
enter
push
pop
jmp
xor
push
test
push
xor
pop
inc
jnp
jb
stos
pop
movsl
push
push
pop
ret
jl
or
fists
ljmp
je
jb
jo
test
into
aad
pop
ret
loopne
mov
push
add
push
jne
pop
orb
imulb
sti
cmp
add
pop
add
fnstcw
lods
pop
or
cs
add
xadd
jmp
pop
pop
les
push
in
lods
imul
mov
ret
jae
jne
inc
xchg
dec
pop
popf
ffree
lods
pop
adc
ret
js
ffreep
pop
cmpsb
jns
aas
or
sbb
sbb
outsl
or
in
sahf
xor
fcomi
movsb
push
and
lds
xor
icebp
insl
mov
stos
lods
pop
test
push
ret
push
xchg
or
fisubrl
stos
add
fisubrl
mov
add
dec
fsts
addr16
jne
jae
jne
mov
dec
xchg
and
mov
cmp
inc
repnz
xchg
loope
nop
push
sub
insb
out
arpl
test
xor
jmp
enter
aad
jb
adc
jg
call
loop
lock
mov
mov
test
mov
cmp
xorl
xchg
xor
push
push
out
and
movsl
cmpsb
outsb
adc
mov
dec
stos
movsl
dec
sarl
scas
dec
cmpsb
dec
pop
sbb
lahf
cmp
out
jmp
and
adc
aam
inc
adc
subl
lahf
es
stc
inc
in
push
jp
inc
add
arpl
cwtl
jae
push
scas
popf
stos
adc
push
cmpsb
mov
xor
stos
imul
dec
dec
outsl
jmp
lea
and
mov
sub
push
stos
rorb
shr
fimuls
inc
stos
mov
scas
xorb
push
cmpsl
jecxz
sub
jle
add
pop
push
fildll
adc
notl
dec
sbb
pop
ss
xor
pop
mov
push
push
shll
push
or
test
scas
fidivrl
das
rolb
stos
stc
fdivrl
dec
daa
scas
adcb
dec
sub
lcall
adc
inc
stos
pushf
xor
and
xor
scas
dec
cwtl
das
adc
xor
insl
jno
sub
mov
orl
out
pop
dec
in
add
inc
add
mov
loope
push
cwtl
jmp
mov
lds
pop
cmpsl
xchg
stos
aas
add
mov
mov
push
loop
shrb
xor
xchg
daa
xchg
push
push
cli
adc
cmp
insb
popa
insb
test
stc
data16
aaa
inc
sti
movsb
ret
into
pop
cmp
jb
repnz
sbb
nop
daa
pushf
mov
scas
and
repz
orb
jecxz
jmp
dec
add
pop
das
nop
dec
cmp
push
test
sub
jmp
std
pushf
xor
sub
and
fucomip
pusha
popf
cs
repnz
mov
add
out
push
mov
fdivrl
mov
inc
cmp
je
jne
movsb
and
mov
outsb
dec
mov
in
inc
loop
incl
movsl
sub
adc
in
cld
imul
mov
inc
jae
sbb
and
ret
loope
add
imul
out
lods
test
mov
push
sti
test
xchg
fstpt
icebp
push
lret
pop
inc
inc
aad
xchg
daa
sbb
scas
pop
push
insb
repz
cmp
ljmp
and
jo
mov
rcll
add
jge
mov
xchg
mov
xchg
popf
and
in
icebp
adc
test
cwtl
sub
mov
out
cmpl
out
lock
cmp
sbb
add
dec
adc
mov
mov
cmp
mov
sub
push
lahf
notb
ds
inc
mov
daa
sub
xor
push
adcl
into
lret
repz
fidivs
clc
aam
sbb
cmp
pop
push
int3
cmp
lods
push
jecxz
icebp
dec
or
fidivl
push
xchg
addr16
pop
xchg
lods
fidivs
test
or
subb
adc
add
lea
test
fimull
imul
mov
sbb
pop
ljmp
push
mov
push
into
push
repnz
clc
sub
pop
arpl
lods
jae
adc
dec
movsl
sbb
nop
stos
insb
pop
or
icebp
jmp
push
loope
negb
mov
add
imulb
add
mov
or
aas
and
ret
push
pop
movsb
out
sub
lcall
jl
in
and
cwtl
mov
dec
leave
clc
cmc
push
shrl
or
mov
mov
xor
jmp
cmpsb
lcall
int
mov
sub
push
fwait
aas
sub
push
jmp
in
mov
jle
cmp
pushf
popf
int3
sti
jbe
andl
mov
mov
cmp
and
jmp
clc
and
sub
lcall
test
aas
adc
mov
jae
inc
stos
or
fcompl
adc
lahf
insb
pushf
scas
dec
addr16
cmpsl
pop
lods
and
and
push
jle
inc
fnstsw
sub
or
out
push
ss
dec
inc
adc
adc
dec
cmpsl
lea
arpl
xchg
nop
mov
out
jge
lret
subl
fisttpll
cmpsl
mov
push
notl
out
or
sbb
or
dec
mov
clc
lahf
push
in
adc
mov
jnp
inc
loop
inc
cli
xchg
ja
jmp
iret
out
mov
inc
inc
test
mov
push
inc
push
jb
jbe
daa
cwtl
je
push
mov
loop
mov
loop
dec
outsl
jmp
cltd
jmp
js
mov
jecxz
cwtl
int
add
int
xchg
sbb
sbb
mov
fstps
aad
pushf
pop
into
rclb
adc
imul
adc
cmp
es
jle
out
dec
fstps
aam
jecxz
ja
mov
popa
or
jge
imul
push
pushf
xor
pop
mov
aaa
pop
cmpsb
data16
test
movsb
and
loop
xor
adc
add
mov
push
jne
push
jb
loop
xor
xchg
shrl
in
orl
adc
lods
add
or
insb
nop
push
shrl
mov
stc
or
and
sbb
in
mov
nop
and
aas
imul
stos
addl
hlt
xchg
scas
in
jle
std
loop
fdivrs
aaa
loope
lock
lahf
rol
lahf
push
push
or
rolb
jp
es
jmp
add
repnz
adc
sbb
dec
cmc
cwtl
lahf
jl
jb
pop
xor
bound
ret
push
stos
std
sbb
push
cli
jbe
or
rcrb
sub
fwait
enter
stos
lds
sub
sbb
dec
push
cmp
push
outsb
jp
mov
popf
xchg
or
fidivs
push
fldcw
repz
dec
stos
pop
test
mov
scas
inc
ljmp
faddp
sub
pop
lods
adc
movsb
js
xor
data16
adc
inc
inc
movl
sub
mov
mov
in
lea
fcompl
out
and
sub
rol
jbe
push
and
xchg
outsl
loop
cs
push
ret
imul
popf
cmp
ret
push
fwait
pop
ss
lock
arpl
rclb
push
push
xchg
fstp
mov
jae
dec
mov
dec
jge
mov
jo
dec
jg
nop
jno
and
int3
in
sbb
js
lock
xchg
rcll
outsl
jnp
hlt
outsb
lds
mov
imul
cmp
jae
mov
js
cmpsb
int
lock
jmp
aam
cmp
sbb
xchg
pop
mov
fcmovu
out
test
mov
push
insl
xor
xchg
pop
sahf
movsb
iret
inc
push
stos
test
mov
loop
cli
int
adc
jb
xor
test
or
sub
xchg
pop
ja
lods
mov
popf
jbe
add
mov
jo
dec
mov
loopne
push
int3
iret
in
enter
sub
xchg
xor
cmc
cmp
jle
sbbb
sub
pop
imul
nop
outsl
aaa
mov
jno
daa
cmp
lds
xchg
rclb
insb
fisttps
fidivs
or
push
daa
cmp
pushf
lret
add
es
lods
loopne
xor
adc
pushl
adc
das
xchg
mov
loop
repnz
out
add
adc
sbb
andl
mov
xchg
ds
xor
mov
pop
icebp
push
imul
lock
and
ja
popf
cmpsl
fnstenv
mov
and
push
push
addr16
fs
sbbb
repnz
les
xlat
mov
jns
mov
and
movsb
jns
inc
std
pop
adc
pop
jo
mov
sub
sub
sub
inc
fsubrs
sbb
push
inc
dec
sbbl
ja
cmp
sub
dec
out
ljmp
mov
mov
cmpsb
jle
stc
cltd
sub
inc
mov
int
dec
in
scas
scas
push
sub
pop
scas
orl
ds
pop
xor
mov
cmp
adc
mov
movsl
outsb
xor
bound
pop
int3
clc
or
js
sub
sbb
dec
push
jmp
jg
mov
pop
jb
shll
repnz
popa
into
adcl
sbb
push
loopne
insl
fwait
ja
hlt
jge
shlb
mov
rcl
jne
push
ret
das
dec
in
lods
scas
aaa
out
adc
mov
mov
loopne
gs
popa
daa
jl
mov
xchg
lea
xchg
data16
sub
jl
add
sub
lds
hlt
push
jbe
push
jb
arpl
pop
jns
incb
stos
or
sbb
sahf
cmp
pop
fucomip
mov
test
sub
push
push
mov
in
addr16
jmp
negb
mov
lea
pop
cmp
add
push
mov
mov
mov
pusha
fwait
stos
lods
shl
aad
cltd
mov
sub
loop
cltd
mov
cmp
sti
cmpsl
dec
cmp
mov
addl
lahf
adc
inc
jmp
mov
inc
xchg
cs
push
xor
ja
xchg
imul
mov
movsl
mov
xchg
sub
xchg
push
aas
aas
rol
adc
pop
adc
dec
shl
or
push
scas
cmp
mov
repz
clc
and
pop
inc
fistl
sti
xchg
inc
test
lock
sbb
jae
aaa
into
out
xchg
rcl
mov
insb
cli
jnp
ret
gs
mov
dec
cmp
dec
dec
das
jp
cmp
mov
iret
icebp
xchg
fmull
pop
fdivrl
mov
cmp
jle
movsb
repnz
inc
jecxz
xchg
xor
ret
pop
cli
push
aas
mov
mov
add
sbb
addr16
sbb
jle
pop
in
fstps
lret
jmp
pop
aaa
sub
xchg
jnp
cmp
push
dec
jmp
xchg
mov
jmp
addr16
dec
out
jle
adc
xchg
imul
enter
and
dec
dec
idiv
dec
add
popf
cmp
out
stos
mov
test
addr16
push
enter
or
out
nop
push
sub
and
insl
push
inc
push
loope
pop
xor
ret
adc
push
aam
push
mov
cmpsb
jno
imul
out
scas
or
mov
lods
into
and
out
insb
sub
pusha
xor
jg
dec
dec
pop
push
cmc
push
cld
ror
add
cwtl
mov
ljmp
or
leave
iret
jle
dec
mov
pop
psubsb
jae
cli
fwait
xchg
push
pop
hlt
inc
mov
jmp
mov
inc
jl
mov
inc
adc
jmp
push
mov
push
loopne
pop
xchg
jle
inc
ljmp
sbb
inc
dec
sbb
dec
push
dec
mov
dec
mov
inc
sub
je
jno
sbb
inc
add
ret
cmp
add
lret
fmuls
or
mov
int
lock
and
xchg
jge
lods
cli
fistpll
jae
outsb
scas
jl
jmp
jno
mov
pop
roll
or
jo
movsb
cmp
movsb
aam
sub
iret
or
push
movsb
daa
inc
lcall
hlt
imul
repnz
add
bound
adc
or
pop
mov
js
arpl
fcomps
push
pop
sbb
push
dec
outsb
cltd
inc
dec
bound
leave
loope
inc
and
sti
push
int3
rclb
jne
add
fbstp
ret
xchg
fwait
out
mov
adc
jne
xor
jne
mov
sahf
xchg
test
add
mov
sarl
xor
mov
decl
mov
and
adc
mov
xchg
cmpsl
lods
pop
mov
jg
jno
popa
lcallw
daa
jae,pt
loop
out
xchg
lret
mov
imul
jae
xor
xchg
sbbl
sbb
or
out
movsl
movsb
pop
adc
cmp
jecxz
ds
xor
stos
cmp
idivb
jp
fcmovne
cli
jg
dec
mov
outsb
cmpb
jmp
cltd
inc
add
leave
out
pusha
je
mov
pop
sti
fwait
add
inc
jbe
xchg
xor
gs
test
int
fs
push
mov
cmp
test
pop
das
movsb
movsl
push
dec
pop
outsl
mov
xchg
add
and
pop
push
movsb
gs
cld
fucomip
sub
inc
je
sti
ja
mov
jbe
mov
fists
xor
push
rcrl
mov
addr16
out
es
repnz
daa
sub
es
adc
test
imull
incb
xor
in
stos
jmp
daa
das
lds
dec
mov
mov
sub
jne
mov
mov
dec
mov
lods
imul
sar
add
mov
jb
pop
adc
enter
lds
pop
orb
aaa
sbb
sub
shr
in
and
xorl
adc
icebp
enter
test
mov
add
mov
daa
in
xor
push
test
sub
in
pmaddwd
lret
jnp
push
sub
adc
ds
or
push
addl
test
inc
jmp
jne
push
mov
jmp
sbbb
fdivs
pop
aas
jae
cmp
jb
popf
cmpb
xorb
pop
inc
push
adc
data16
mov
call
inc
mov
dec
negb
push
fildll
nop
daa
incb
scas
ret
push
ljmp
call
push
sti
push
mov
lahf
rolb
test
xor
fdiv
adc
in
sarl
out
jno
fs
xchg
mov
xchg
sub
and
mov
sub
mov
mov
cmpsb
push
sub
and
inc
subb
fsub
mov
sbb
mov
lea
mov
insl
xchg
push
pop
cmp
xchg
sub
out
push
fstpt
scas
mov
ss
or
xor
dec
lahf
mov
dec
les
sub
jl
push
cmp
cmpsb
mov
mov
rorb
movsl
aad
inc
pop
pop
inc
imul
in
and
push
leave
je
push
xchg
xor
fistl
stc
call
and
out
data16
lret
mov
out
test
mov
mov
cli
inc
pop
sub
call
cmp
addr16
test
jg
stos
test
pusha
dec
cmpsb
mov
sub
jo
add
push
leave
mov
adc
mov
cmp
cmp
cmpl
loope
and
push
jp
add
add
jae
dec
mov
inc
rcll
adc
daa
dec
out
fidivrs
enter
popl
push
call
lods
leave
outsl
push
cli
adc
in
or
jns
sahf
adc
pop
lret
ja
ljmp
add
inc
mov
and
call
xchg
fwait
or
add
xor
sbb
outsl
sbbb
cld
lcall
das
or
rolb
sbb
arpl
jmp
jb
arpl
outsl
ret
inc
mov
xchg
mov
mov
les
ret
pop
cmp
loope
add
jne
push
mov
lods
das
outsb
fistpl
jl
fldl2t
in
popf
cmpsb
test
or
adc
jbe
enter
and
inc
setl
and
pop
xor
rorb
inc
test
loope
lcall
push
push
out
sub
rcrb
pop
stc
or
xchg
add
jb
pop
pop
mov
es
mov
mov
cmp
and
xchg
imul
fcoms
scas
std
shr
orb
mov
enter
shr
sti
jbe
jnp
xor
leave
pop
mov
loopne
push
negb
pop
xor
fadds
sbb
jg
pop
scas
and
and
push
push
mov
cltd
ja
enter
repnz
lods
das
mov
mov
push
in
and
inc
dec
jg
mov
in
aad
pop
and
lahf
mov
frstor
adc
cmpb
pop
xchg
mov
out
cld
or
pop
dec
dec
das
mov
adc
leave
dec
xor
inc
mov
inc
sar
jge
inc
or
pop
js
shr
rorb
rorb
push
inc
loope
mov
xchg
testb
adc
ret
push
ds
enter
mov
xchg
out
ja
fsubrs
pop
mov
jb
mov
dec
loope
mov
push
pop
xor
ljmp
dec
and
xor
lcall
sbb
jno
push
ds
lds
stos
and
aad
lea
faddl
xchg
imul
rclb
mov
jbe
enter
std
jo
mov
mov
movsb
xchg
cmpsb
lret
out
jmp
aas
inc
xchg
mov
cmp
adc
jecxz
inc
stc
jnp
stc
lods
sbb
xor
mov
fs
leave
pop
sti
dec
lds
imul
fdivl
jmp
add
sarb
je
adc
pop
pop
lock
ja
fimuls
cmpsb
das
inc
outsl
push
jne
or
icebp
fisubrs
inc
fwait
xor
inc
adc
scas
mov
sub
pop
leave
mov
push
pop
addr16
data16
sbb
sbb
test
mov
mov
mov
out
mov
enter
push
test
push
push
sbb
push
push
cmp
xchg
xor
mov
popl
adc
or
jg
xchg
inc
mov
repz
iret
and
aas
aad
and
dec
adc
lock
add
leave
call
lods
pop
jno
mov
movsl
jns
pop
hlt
and
call
in
outsb
clc
incb
cld
daa
std
push
pop
xor
xchg
push
popf
out
jmp
push
inc
movsl
push
jo
notb
and
lret
xor
xor
pop
mov
and
mov
stos
int3
lods
fwait
push
adc
adc
addb
into
xchg
or
pop
repz
lods
and
test
loope
ret
das
cmp
adc
cli
cmp
push
rol
add
sub
imul
les
stos
dec
loop
fnstsw
daa
xor
fldenv
cmpsl
out
clc
mov
jae
dec
lods
sbbl
sahf
mov
add
and
push
mov
xor
scas
lea
fstpl
jbe
jp
sbb
loope
rcll
mov
repz
and
popf
adc
movsl
pushf
xchg
mov
sarb
pushf
push
cmp
cmp
mov
rcrl
push
push
leave
fcomip
negl
mov
adc
or
mov
ret
sbb
pop
add
ljmp
mov
rolb
cld
or
aas
sub
push
jns
lcall
sarb
pop
imul
testb
adc
cmp
xchg
aas
cli
pop
inc
lcall
lcall
sbb
pushf
shll
xchg
scas
mov
mov
push
loop
sbb
jb
fsubrs
xchg
sbb
loope
pop
xchg
pop
add
in
loope
adc
push
and
ss
xor
inc
loope
mov
pop
mov
mov
out
iret
or
mov
pop
addr16
lods
mov
arpl
sarb
leave
jns
imul
in
push
imul
lea
pop
dec
test
fs
push
std
and
mov
xchg
add
sbb
ja
repz
inc
jns
jb
adcl
jae
mov
aaa
call
add
mov
sub
dec
jge
jae
jne
fldt
dec
out
xor
mov
mov
subb
dec
push
fnstsw
test
stos
mov
sarb
sbb
inc
adc
dec
out
jbe
cltd
jae
loope
mov
popf
outsl
xor
mov
cmp
cmovl
out
cmp
es
sub
pminsw
cli
out
mov
adc
pop
ljmp
cmp
pop
ja
sbb
mov
out
or
add
pop
fidivs
filds
xor
push
ljmp
jno
mov
fisttps
jns
pop
test
push
inc
jle
data16
dec
ljmp
ret
push
pop
stos
xchg
jns
repnz
pop
out
cmc
xchg
and
lret
lods
xchg
inc
xlat
sub
dec
add
cmpsb
stos
inc
fdivr
in
sub
push
mov
jmp
daa
or
icebp
cmpsb
ds
mov
and
xor
ja
jge
bound
inc
push
or
mov
sti
fwait
lret
inc
cmp
push
sub
push
jb
lock
jge
xor
sub
mov
decl
push
in
out
test
insb
sbb
push
or
and
lahf
mov
pop
jle
in
stos
xor
xor
movsl
stos
push
push
scas
push
mov
test
jg
push
out
xor
mov
jne
test
push
xor
popa
add
xor
pop
xchg
mov
hlt
push
leave
xchg
stc
sti
push
sbb
jg
pop
loop
in
movsl
inc
push
mov
mov
mov
popf
je
add
out
sti
xchg
or
xlat
mov
int3
xchg
mov
loopne
and
xor
xchg
lret
xlat
inc
push
push
lods
xchg
add
push
xor
cmpsb
push
mov
cwtl
outsl
test
sub
testl
mov
jle
sbb
ss
mov
ret
mov
lods
cmp
std
cmp
lods
fstps
fistps
sbb
mov
jge
inc
shll
sub
add
cs
xor
and
jns
inc
mov
add
adc
cmovbe
mov
cmp
ss
test
rolb
pop
lock
inc
pop
lret
cmp
repz
dec
push
mov
data16
adc
cmp
jne
aas
cmpsl
dec
ret
pop
inc
movsb
inc
mov
gs
push
std
rorb
add
pop
ds
xchg
xlat
insl
cli
lcall
mov
inc
stc
lds
push
in
push
mov
mov
loop
dec
adc
pminsw
pop
jb
out
adc
cmp
xchg
inc
xor
cmc
in
arpl
mov
or
int
inc
rclw
inc
push
push
ja
xor
mov
push
lcall
pop
adc
fstl
lea
aam
outsl
shr
addb
bound
clc
or
xor
daa
mov
dec
lcall
stos
sbb
pusha
and
sub
jge
hlt
lods
inc
movsb
iret
cmc
inc
jnp
ja
push
cmp
ror
jl
dec
in
inc
dec
mov
imul
push
jno
daa
mov
pop
test
shr
addb
pop
sahf
popf
xchg
cmpb
cmp
jg
xchg
mov
sub
rclb
jae
pop
sbb
mov
jle
stos
pop
scas
sahf
clc
or
jb
cld
test
loope
cs
mov
movsl
adc
push
xor
push
mov
arpl
adc
xchg
push
and
push
add
inc
push
push
test
iret
sahf
sbb
jb
xor
cmp
mov
aad
xor
clc
enterw
lret
xlat
shll
decb
cld
popa
andl
pop
mov
sub
mov
rcr
xor
xor
test
lock
out
popf
popf
jg
sbb
pop
sbb
inc
pop
mov
adcl
jl
or
into
pop
mov
lods
and
and
fisubs
sub
data16
in
sbb
mov
mov
data16
stc
push
sarl
cmp
fstps
mov
movsb
pop
xchg
lahf
xor
cwtl
aaa
mov
sarb
jo
mov
mov
sbb
mov
int3
inc
andb
into
lea
adc
ret
pop
inc
cwtl
push
adc
inc
lret
addr16
ficompl
std
fcomps
xor
in
push
data16
pushf
inc
cmp
test
cwtl
je
imul
ficoms
scas
in
in
jmp
xor
mov
cld
lods
sbb
mov
lret
pop
xchg
mov
jmp
lea
xor
enter
cld
mov
dec
orl
jnp
pop
and
leave
add
or
inc
or
lret
inc
cwtl
mov
cltd
fdivrl
repnz
repz
xchg
outsl
imul
imul
insb
out
dec
es
ss
pop
lods
addb
pop
aaa
outsl
ds
repnz
cmp
mov
xchg
cmpsl
jl
daa
cmp
push
pushf
jne
or
dec
pop
cld
push
jge
inc
sahf
jns
fnsave
aas
cli
and
xchg
lock
test
xor
ds
jge
idivl
push
sahf
and
push
aad
push
cmc
sahf
add
jbe
popf
gs
mov
movsl
fnsave
out
and
xchg
or
sbb
ds
jno
cltd
sbb
sbb
mull
push
test
or
jae
sub
das
addr16
dec
fimull
sub
pop
adc
dec
and
outsl
les
push
jecxz
movsb
dec
mov
jno
daa
cld
ret
fwait
push
test
fldenv
testl
cmc
jle
sub
les
add
aaa
or
mov
mov
push
lock
pusha
inc
inc
sahf
ja
shrb
adc
and
mov
cmc
test
rclb
and
leave
fmuls
sbb
push
stos
sub
or
scas
xchg
push
sub
das
push
sahf
icebp
mov
jno
dec
cmpsl
notb
mov
ret
add
in
imul
stos
mov
loopne
inc
sub
popf
sbb
subb
inc
bound
in
data16
jb
pop
jb
jl
xchg
push
adc
and
ret
das
xor
xchg
rcr
or
filds
push
ds
xchg
adc
mov
and
push
mov
aam
std
mov
loopne
mov
add
sarb
pop
sti
das
push
jmp
mov
jb
lds
pop
mov
fistps
push
enter
xchg
sub
mov
out
lds
jecxz
lret
sbb
add
push
adc
pushf
fs
push
test
das
and
cmp
das
add
sub
inc
push
mov
clc
pop
mov
pop
out
mov
aaa
or
xor
sbb
xchg
push
jge
out
inc
jne
sti
push
sbb
fdivs
outsb
pop
cmpsl
jl
mov
xchg
mov
add
sub
sbb
das
push
pop
mov
pop
js
cmpsl
and
adc
push
pop
mov
cs
insb
xor
cmp
push
repz
sbb
cwtl
jno
iret
mov
or
jge
stos
outsb
jmp
xor
mov
pop
dec
lcall
inc
push
jle
fsubr
rorl
dec
sbb
rcrb
les
pop
cmp
add
xor
mov
pop
outsl
mov
fs
push
xor
mov
dec
inc
sbb
pop
sbb
lock
insl
add
jge
mov
xchg
xor
rsm
inc
cmp
ds
ror
pop
add
mov
pop
in
pop
mov
daa
bound
mov
pop
std
dec
jmp
or
outsl
ret
add
and
xchg
mov
add
xor
jne
mov
cmpsb
dec
stos
test
sbb
popf
dec
jg
sbb
lods
pop
mov
dec
ficoml
pop
pop
or
jb
sti
sub
xchg
sub
ret
pop
loope
loop
push
jbe
add
out
inc
loope
ljmp
fstps
std
or
and
mov
sbb
adc
pop
jmp
adc
jecxz
arpl
add
fcoml
clc
mov
mov
jbe
and
iret
mov
sbb
test
xor
cli
cmpsb
pop
cmp
movl
aaa
popf
dec
shr
mov
mov
fsub
or
dec
fxch
fs
aam
inc
lahf
out
xchg
divb
std
gs
aaa
pop
aas
dec
jp
ret
loope
jg
daa
and
inc
scas
dec
loopne
iret
loop
dec
lock
dec
fstl
cltd
mov
and
jno
xchg
loop
xor
loop
mov
fwait
pop
xor
cmp
orb
adcl
lret
mov
jb
xor
jno
hlt
mov
sahf
xchg
stc
enter
adc
enter
jge
cwtl
sbbb
rol
push
push
push
jge,pn
clc
lods
jp
cmp
iret
push
lods
add
lahf
push
xchg
stos
xor
leave
pusha
inc
sub
int3
pop
in
jno
push
xchg
sub
sbb
nop
push
sub
pop
xchg
rclb
and
jge
xor
jecxz
and
push
mov
pushf
and
inc
int
mov
mov
push
es
jne
into
push
dec
and
bound
dec
movsb
cmp
jmp
call
es
imul
inc
pop
mov
ljmp
ds
inc
sub
push
into
jno
xchg
ljmp
jno
movsb
divl
lock
pushf
xor
cmp
fs
mov
mov
sub
fwait
aaa
add
pop
inc
lods
inc
ja
rcrb
cli
loopne
rol
pusha
jg
icebp
add
mov
ret
mov
xchg
and
js
cmp
cs
repz
test
dec
or
lcall
mov
dec
and
mov
xor
adc
pop
adc
mov
testl
cmp
jmp
mov
adc
adc
repnz
and
or
push
pop
dec
minps
sbb
push
adc
stos
out
lock
jne
adc
mov
sub
mov
pop
jg
sarb
movsb
fmulp
aaa
stos
jbe
sub
scas
xchg
in
pusha
or
movsl
pushl
pop
mov
loop
mov
imul
fldenv
lahf
xchg
cli
test
mov
dec
jne
xchg
dec
test
lret
fwait
icebp
pop
decb
and
mov
clc
mov
xchg
push
clc
movsl
mov
add
jns
xchg
ljmp
mov
stos
mov
inc
sahf
mov
adc
fmulp
sbb
lods
mov
and
pushl
movsb
ja
mov
jno
adc
and
andb
push
mov
cmp
cmp
add
lret
add
fwait
test
or
dec
inc
fnstcw
sahf
negl
inc
cld
dec
bound
dec
loope
stos
cmp
xlat
es
jns
mov
push
lcall
jno
add
fidivrs
fsubr
and
xchg
pop
push
out
test
mov
cmc
outsb
test
fwait
rclb
xor
icebp
xchg
cmp
mov
pop
ss
sbb
ss
fdivl
xor
repz
shl
test
mov
add
push
movsb
stos
sbb
test
fwait
add
adc
daa
cmp
dec
bound
xchg
test
inc
and
aad
sbb
cmp
mov
jge
pop
rcrl
jg
dec
sub
ds
insl
loopne
dec
add
test
mov
jge
sbb
adc
gs
inc
xchg
dec
arpl
inc
daa
or
movsl
inc
aad
xchg
sub
orl
mov
sub
mov
shrl
sbb
and
sti
repz
or
or
fdivrp
cmp
pushf
jle
test
jmp
jmp
pop
lods
call
mov
iret
cmpb
cmpsb
xchg
push
je,pn
mov
xor
xchg
pop
std
insb
add
popf
push
aam
shll
inc
pusha
dec
mov
les
loop
jo
mov
in
mov
sbb
lods
adc
sti
pop
pushf
sbb
cltd
jne
sbb
inc
icebp
mov
mov
xchg
jl
outsb
aas
aam
inc
add
sahf
int3
test
or
pop
les
adc
out
test
loopne
icebp
xor
ja
jb
or
inc
add
test
dec
cmpsl
pop
xchg
insl
mov
lock
push
insb
push
inc
repz
push
xchg
mov
push
int
mov
loope
sbb
or
mov
ljmp
clc
loope
mov
fdivrp
rcll
or
cs
or
push
lods
sbbl
cmpsl
out
sub
pop
pop
setae
shl
imul
mov
adc
cmp
cmp
in
daa
sti
jbe
int
inc
adc
movsl
hlt
insl
or
jge
loop
mov
jl
mov
mov
pop
jbe
dec
test
mov
outsb
sub
jae
arpl
stos
jmp
int
aas
adc
fwait
sti
xor
stos
dec
xchg
ljmp
jmp
ss
cmp
ljmp
pushf
xchg
jecxz
push
push
incl
sbb
lcall
inc
adc
in
add
maskmovq
negl
push
lods
loope
nop
pop
mov
mov
shlb
dec
ljmp
jbe
xchg
movsl
cmp
sar
das
sub
sub
out
and
mov
into
push
mov
push
aad
push
loop
cs
cmc
test
pop
ljmp
jno
or
lahf
xchg
scas
shlb
loop
mov
loopne
push
and
test
mov
jmp
std
sbb
sub
test
out
xor
pop
lock
lods
out
xchg
xor
pop
push
insl
ljmp
push
mov
loopne
or
sub
adc
cmp
testl
pop
sub
shrb
inc
jns
pop
iret
lock
sarl
cmpb
mov
outsl
into
mov
xor
dec
xchg
aam
in
stc
adc
fidivrl
shlb
xor
rcr
jge
sub
imul
repnz
imul
cltd
jnp
sbb
testb
lods
pop
xchg
sub
inc
pop
mov
insb
rorb
sub
jl
adc
test
cmp
xchg
xchg
and
sarl
mov
or
imul
jle
outsb
fmulp
dec
add
jle
data16
out
xlat
out
out
xchg
adc
mov
adc
movsl
inc
shlb
ret
rcrl
jmp
push
cmp
xchg
and
or
dec
and
push
push
iret
data16
aam
push
out
cmp
fcmovb
adc
loop
ljmp
in
add
mov
xor
cmc
mov
xor
sbb
aad
hlt
stos
sbb
enter
mov
sbb
ret
pop
inc
add
popa
dec
dec
push
gs
lret
add
xor
mov
jle
and
dec
test
xchg
mov
dec
xchg
and
aad
cmpsb
mov
dec
out
in
and
ret
dec
aam
dec
test
pop
xacquire
and
lods
subl
or
sub
push
and
daa
clc
xor
dec
mov
test
into
enter
or
jp
jbe
mov
mov
aad
mov
shlb
dec
std
xor
rclb
pusha
int
push
xlat
repz
xor
and
pop
pop
jbe
or
arpl
dec
ljmp
and
in
pop
jno
jecxz
notb
add
shl
pop
pop
addr16
pop
adc
sub
hlt
fildll
mov
adc
ficoms
pop
inc
mov
xor
xchg
inc
jle
add
imul
inc
push
ss
dec
arpl
jp
popl
jb
iret
jb
push
xchg
scas
flds
repz
xchg
test
sarb
adc
mov
clc
push
or
lods
push
lock
mov
push
mov
inc
inc
sub
cltd
leave
lods
jbe
add
or
rcrb
xchg
xchg
jb
das
rcrb
pop
lock
cs
shrl
loope
cmp
pop
adcb
cmc
cld
std
dec
lret
lret
jle
push
sti
inc
mov
sti
xorb
pop
inc
adc
cmp
and
pop
push
inc
and
xchg
dec
jmp
adc
push
xorl
out
rclb
stc
inc
ret
gs
fdivs
push
lcall
cwtl
cs
aad
roll
xor
ja
dec
fcompp
cwtl
pop
lret
inc
add
in
clc
sub
jno
popf
mov
aam
popa
push
cs
pop
pop
out
dec
fdiv
or
push
mov
lahf
test
add
push
mov
rorb
dec
aad
mov
push
std
jg
jbe
dec
cmp
xchg
aad
leave
enter
push
outsb
cmp
lea
flds
pop
repz
mov
call
gs
mov
cmp
inc
sbb
jle
jne
orb
or
inc
adc
adc
aaa
popa
clc
push
inc
cld
xor
xchg
sub
add
xor
mov
fisttpl
das
jle
rolb
fwait
xchg
and
push
sbbl
daa
and
xor
mov
fsub
ljmp
lods
pop
dec
sub
cs
arpl
pop
jbe
push
inc
xor
jmp
jne
sbbl
sarb
outsb
cmp
lahf
push
mov
sbb
movsb
outsb
test
add
push
inc
jbe
lret
push
inc
popf
movsb
cwtl
fmuls
icebp
or
in
cwtl
pop
dec
in
mov
test
rcll
mov
lcall
and
push
popf
jne
stos
in
inc
movsb
cld
xchg
ljmp
cmp
or
imul
sbb
pop
and
inc
cmpsl
mov
dec
popa
lret
lods
or
jb
mov
adc
mov
mov
dec
fnstsw
addl
call
sbb
mov
pop
and
ud0
imul
out
cld
ss
aad
pop
inc
fsubs
pop
aaa
and
sub
insb
cmp
inc
jl
sbb
in
pop
icebp
enter
mov
js
gs
addb
scas
std
sub
lcall
lcall
pop
mov
movsl
jge
push
push
pop
jnp
pop
lods
sahf
ljmp
mov
cltd
test
cwtl
pop
xor
sub
jne
rclb
test
lcall
or
sub
test
and
shlb
push
int
push
push
push
cmp
rorl
or
loop
add
pusha
fwait
sbb
jns
pop
inc
ja
popf
xor
mov
in
pop
xor
bound
push
cwtl
test
arpl
cmc
arpl
jmp
adc
mov
imulb
adc
lret
jecxz
sub
push
hlt
sbb
or
mov
es
lcall
adc
lods
pop
jno
lcall
cltd
test
jb
inc
xor
add
shrl
ljmp
hlt
pop
jmp
arpl
xor
stc
push
mov
inc
fstp
xchg
ret
in
das
jae
dec
xor
std
fcoml
or
test
sbb
ja,pt
addr16
scas
push
mov
outsl
mov
data16
lods
ss
push
in
test
je
mov
push
sbb
dec
push
push
cmp
test
popf
movsl
add
dec
xchg
mov
jbe
sub
fdiv
mov
mov
mov
push
push
inc
fildl
xor
pop
pop
fildll
scas
imul
shrb
add
cs
popf
fwait
or
cwtl
aaa
push
aas
aam
dec
xor
mov
xchg
dec
xlat
cwtl
push
scas
adc
hlt
xor
inc
mov
push
mov
mov
mov
gs
mov
and
insl
out
mov
in
adc
jge
into
and
jae
into
aam
pushl
cmc
dec
push
sub
negb
shr
mov
jge
mov
aad
push
push
xchg
outsl
adc
sub
loope
sub
and
or
mov
xor
mov
lea
jecxz
inc
xchg
inc
adc
inc
loop
xchg
loopne
adc
sub
adc
aaa
pop
repnz
mov
out
sbb
fs
xor
xor
dec
and
in
insb
sub
jne
lea
pop
mov
push
out
inc
test
cwtl
imul
clc
jae
aam
jae
pop
jge
pusha
scas
fidivrs
dec
fpatan
xor
mov
inc
hlt
ss
sub
popf
sub
std
add
and
lock
cltd
cmpsl
data16
andl
dec
or
inc
fidivrs
xchg
push
gs
pop
test
iret
push
xor
fstps
jge
das
push
jno
jno
push
push
imul
push
int
xchg
push
adc
test
scas
js
push
pop
leave
add
add
mov
mov
nop
repz
mov
pop
pop
jbe
mov
push
pop
out
and
je
adcb
aaa
out
sahf
pop
cltd
fnstcw
mov
lods
pop
leave
insb
and
les
mov
movsl
test
es
cmp
sub
dec
bound
mov
inc
aaa
sub
xchg
mov
repz
mov
dec
clc
sbb
aad
xor
bswap
test
fiaddl
les
pop
mov
cmpl
mov
aam
mov
cmp
mov
mov
sub
push
sub
mov
jns
jns
incl
clc
xchg
push
out
jp
pop
int3
add
lcall
test
movsb
sub
jg
arpl
rcrb
das
add
sub
arpl
push
sbb
popf
pop
loop
mov
push
inc
mov
loope
xor
add
rcrb
push
out
fildll
icebp
pop
out
jnp
pop
in
xchg
cmp
das
loopne
and
and
ret
xor
mov
add
popa
push
cmp
mov
loopne
jmp
scas
mov
add
daa
mov
lret
js
jns
inc
xor
pusha
hlt
or
nop
enter
and
lea
inc
inc
aam
push
inc
pop
fldcw
add
mov
fldenv
aaa
xor
jae
adcb
pop
dec
or
inc
dec
sbb
addr16
jl
jl
xor
mov
ficomps
in
adc
mov
mov
fisubl
pop
loope
cmpsb
cmp
ljmp
pop
inc
out
mov
jmp
outsl
test
outsb
inc
or
xor
repz
pop
aas
aad
add
sub
mov
in
gs
insb
sbb
test
mov
outsb
lock
stos
mov
xchg
mov
mov
leave
pusha
adc
fsubrp
push
sbb
jbe
popa
loope
pop
cmp
or
sub
cmpsl
jp
sub
sbb
add
pop
mov
add
adc
imul
push
ret
or
aad
cmpsw
ds
minps
repz
adc
add
gs
and
popf
ret
pop
iret
xor
sti
inc
push
testl
mov
cld
popf
push
ljmp
jno
mov
call
ljmp
fnstenv
mov
testl
lcall
inc
jns
cld
pusha
push
fwait
int
adc
and
adc
xchg
sub
in
cmp
nop
mov
cmpsl
ds
mov
cmp
mov
lods
mov
nop
push
pop
and
mov
pop
xchg
xor
mov
test
rorb
push
and
out
add
sbb
jl
fwait
xlat
outsb
int
incl
leave
lds
pop
ret
push
lcall
push
insl
pop
call
and
push
push
dec
pop
outsl
jbe
xchg
pop
cmp
xchg
jae
cmp
and
mov
and
cli
mov
test
imul
lods
cld
subl
mov
or
sub
jge
cmp
imul
imul
loope
fiaddl
loope
push
mov
dec
mov
sbb
mov
rol
lahf
clc
push
mov
in
roll
sbb
aas
pop
mov
sbb
pop
lds
xchg
mov
into
lea
popa
stc
test
sbb
dec
cld
add
adc
cmp
outsb
jp
lcall
nop
out
repz
lods
inc
roll
pop
iret
rcrb
ret
push
pop
mov
push
push
fnstsw
loopne
dec
mov
test
aad
cs
subl
ljmp
dec
pop
inc
push
out
insl
rclb
into
arpl
jl
fsubl
out
es
out
ret
mov
sbb
inc
notb
je
mov
int3
mov
mov
or
lea
stos
sub
imul
ficompl
call
or
mov
dec
mov
cmpsl
push
pop
out
or
insb
pop
jle
shlb
jg
mov
add
test
adc
pop
sbb
or
mov
push
rcll
xchg
out
or
push
aam
push
mov
idiv
sbb
or
test
movsl
mov
ret
mov
mov
push
test
mov
jge
int
sub
notl
js
dec
and
pop
ds
cmp
nop
outsb
inc
mov
nop
imul
sub
adc
push
stc
insl
xchg
test
or
mov
ret
imul
push
cs
sub
dec
or
mov
repnz
mov
pop
repnz
enter
jg
xchg
dec
pop
adc
mov
insl
ljmp
pop
xchg
ljmp
es
push
add
adcl
cmpsb
cmp
jg
mov
pop
xor
mov
call
or
push
gs
out
add
test
mov
je
cmp
jecxz
push
in
or
sub
lcall
fbld
call
lea
pop
mov
rol
or
adc
sbb
mov
imul
lock
frstor
xor
scas
jb
pop
stc
ja
mov
ret
fisttps
and
adc
test
mov
jb
sbb
lods
sbb
jae
inc
dec
fbstp
push
fnsave
mov
movsb
inc
imul
sub
jge
subl
ficoml
push
jnp
cmpsl
nop
dec
dec
decl
cs
pop
cmp
jl
call
shll
xor
movsl
add
jb
imul
lea
push
add
adc
sub
jae
test
push
aam
mov
jno
or
loopne
and
psubusb
sub
sahf
mov
jb
cmp
jmp
lret
adc
pusha
fldt
inc
jp
jg
int
in
out
adc
inc
movsb
mov
dec
fcomp
stos
lea
xorl
jg
or
lods
mov
jnp
xchg
jle
sti
scas
mov
mov
pop
dec
cmpsb
jp
aam
mov
cmp
and
or
push
aas
pop
pop
aas
or
inc
fisubrs
lret
pushf
xor
lock
and
out
mov
dec
add
xchg
mov
pop
repnz
mov
mov
inc
scas
or
imul
xor
lods
testl
xor
jno
jae
lods
jmp
xchg
imul
xlat
icebp
jnp
cmpsb
jge
and
popf
shlb
or
cld
mov
cmp
mov
mov
cmp
pop
add
dec
ret
popf
loop
pop
popf
mov
xchg
mov
mov
jo
sub
pop
mov
cli
cmp
shlb
lret
mov
outsb
lock
cltd
lods
pop
jge
add
in
test
push
cmc
push
sub
lods
and
imul
mov
xchg
pop
pusha
or
or
movsl
pop
cli
lea
lods
lea
imul
inc
add
ret
sbb
xchg
loopne
and
push
js
cmp
mov
and
pop
out
and
hlt
xchg
out
mov
mov
test
dec
pop
jbe
xor
mov
and
mov
dec
xlat
out
pop
out
dec
jge
xchg
arpl
add
cmp
cmp
in
lcall
and
ret
adc
dec
movsl
mov
mov
and
inc
sbb
or
outsb
xor
scas
xchg
leave
push
ljmp
inc
add
add
mov
jne
loop
idivl
loope
fdivrs
push
jecxz
in
aam
push
cltd
sub
inc
test
push
add
or
jne
jnp
nop
pop
repz
xor
sahf
xor
mov
push
popf
lock
or
bound
lret
out
js
enter
sub
bnd
or
pop
or
popf
icebp
push
rcr
xchg
mov
ss
sarl
inc
loopne
iret
dec
mov
inc
ja
mov
xchg
cltd
cmp
mov
scas
rcll
mov
outsb
sub
outsb
sub
bound
fldt
rep
inc
xchg
push
fldcw
mov
sbb
and
cs
sbb
inc
lret
gs
imul
xor
mov
cmpb
inc
das
jne
ja
int
dec
pop
fwait
push
adc
sarl
xor
fisubrl
shll
fstps
cmc
ficomps
adc
les
aam
jl
xchg
out
xlat
les
mov
aaa
push
popa
out
mov
fidivrl
dec
or
cld
xchg
fimuls
orl
mov
cmp
mov
daa
adc
pop
daa
sbb
pop
pop
ss
imul
icebp
inc
push
and
cmp
movb
leave
or
push
int3
gs
and
mov
fwait
pusha
ja
cmpsl
lock
aam
das
dec
or
sub
sub
xor
icebp
mov
sbb
push
popa
dec
fidivs
hlt
mov
nop
add
shl
fldt
lock
int3
mov
xchg
stos
jg
pop
adc
lcall
xlat
pop
and
inc
xchg
es
sub
pop
and
cmpsl
xchg
aad
xor
mov
fdiv
inc
jmp
out
hlt
mov
sub
push
daa
xchg
dec
int
imul
xchg
lock
adc
std
pop
hlt
and
in
sub
inc
jnp
bound
xchg
adc
or
sarb
addr16
sbb
arpl
or
add
mov
xchg
ss
es
jmp
inc
cmpsb
nop
aam
sub
out
js
lret
sti
cmpsl
adc
xor
pop
xor
ljmp
inc
movsb
cmp
mov
lret
rorb
nop
jno
ret
mov
dec
fdivl
mov
jno
mov
mov
repz
sub
inc
xlat
ds
mov
mov
inc
mov
adc
add
add
enter
outsb
rcr
call
sub
cltd
orl
leave
pusha
dec
sub
rorb
je
mov
cmpsl
pop
in
cmpsl
int3
arpl
mov
insl
loopne
sahf
jns
shlb
push
sti
jmp
dec
or
inc
mov
push
or
incl
jo
popf
adc
ss
movsl
mov
pop
sub
mov
cmp
icebp
in
jne
jne
adc
adc
movsb
inc
mov
lea
push
adc
inc
xchg
mov
or
incl
and
adc
daa
mov
push
fsubrs
std
inc
mov
out
mov
mov
cli
outsl
pop
xchg
mov
out
xor
push
lahf
or
jo
jl
mov
mov
popf
sahf
ljmp
jmp
sbbl
repz
xchg
mov
push
cmp
sub
and
stc
test
jg
cmp
outsb
lods
xor
hlt
insl
mov
pop
jl
dec
aad
mov
cltd
add
sahf
mov
xor
and
mov
or
out
sub
dec
push
test
gs
loope
add
mull
pop
mov
sub
test
sub
in
cmp
sahf
popf
inc
int3
push
inc
std
aaa
adc
pop
fildll
icebp
cmpsb
es
dec
pop
inc
cmp
addl
mov
xchg
pop
add
out
ljmp
jb
mov
mov
cmpsl
fcoms
jno
push
mov
test
ret
sbb
outsb
movsb
outsb
sbb
mov
dec
outsb
lods
test
hlt
insb
add
xchg
inc
ds
aaa
or
inc
mov
mov
xor
movq
test
shlb
inc
push
push
fwait
pop
xorb
out
add
mov
into
jae
aas
shrl
jb
movsl
repz
or
rcl
xchg
sub
stos
mov
pop
rsqrtps
pop
jl
push
scas
push
cmp
test
int3
icebp
mov
fnstsw
push
mov
test
sub
inc
cmp
cmp
push
mov
add
dec
fadd
in
pop
cs
or
cmp
clc
xor
jl
sbb
mov
testb
push
sub
in
loope
ljmp
repz
js
xchg
dec
or
js
call
or
call
mov
adc
je
jl
lahf
push
clc
out
jb
xchg
stos
pop
xchg
add
add
adc
push
push
das
dec
repz
scas
inc
mov
fwait
jp
repnz
outsl
push
mov
inc
shrl
mov
jecxz
or
icebp
mov
std
jge
popa
xor
mov
pop
xchg
loope
sbb
loopne
add
and
push
lahf
sub
rcll
stos
or
jne
loope
insb
xchg
adc
dec
call
sub
scas
jl
nop
pop
adc
mov
mov
inc
test
popf
dec
test
push
or
in
inc
mull
adc
dec
daa
mov
repz
inc
int3
inc
gs
std
push
jmp
push
xchg
and
pop
jge
dec
sbb
pop
pop
nop
hlt
mov
lahf
lcall
fucomi
inc
mov
fucomi
stos
sbb
sub
inc
ret
mov
fimuls
push
rcl
add
lea
inc
repz
pop
adc
or
dec
out
sub
in
sbb
xchg
or
xorb
or
iret
xchg
lods
ja
mov
ret
test
pop
lcall
jl
add
mov
inc
sub
addr16
popa
jb
insb
cmp
xor
pusha
mov
outsb
cmpps
xor
push
xchg
pop
movsl
xorl
imul
test
add
das
jge
jg
ficompl
mov
pop
sti
jbe
clc
testb
stos
xchg
xor
ficoml
xlat
in
mov
push
lods
and
lds
dec
pop
loopne
in
nop
add
es
out
mov
aam
inc
fnsave
ja
sub
stos
xlat
sbb
outsb
dec
pop
jo
or
into
scas
daa
inc
loope
sbb
out
cmp
or
cmpsl
push
push
mov
lods
inc
xchg
add
push
jbe
je
js
cmpsl
xor
data16
fcmovne
mov
jo
fld
fildl
mov
in
adc
cmp
mov
scas
aas
stos
jg
push
pop
lret
mov
sub
jecxz
or
nop
inc
inc
dec
add
jmp
pushf
xor
mov
xor
dec
sahf
mov
repnz
sub
and
pop
shl
inc
pushf
loope
inc
fbstp
into
adc
scas
loopne
fildl
mov
adc
ficompl
jge
jns
mov
inc
bound
roll
std
sub
or
cwtl
cmp
imul
cmp
pusha
notl
add
mov
testl
fsubrs
lret
sbbl
push
into
adc
roll
pop
hlt
inc
push
test
out
jnp
and
push
in
mov
pop
add
in
iret
rorb
in
mov
fs
lods
aaa
je
fwait
or
call
adc
and
lret
push
cmp
movsl
mov
and
fstpt
or
pop
sbbb
xor
lahf
fcompl
push
rorl
cltd
pop
sub
jno
inc
sbb
xchg
loopne
add
mov
jb
mov
stc
popa
cmpsl
lcall
mov
mov
movsb
or
outsl
aas
rorl
jge
notl
addr16
rol
jecxz
mov
addr16
popf
mov
aam
sbb
or
inc
xchg
out
cmpsb
in
call
outsl
xor
fwait
adc
ret
xchg
jbe
dec
adc
dec
inc
outsl
xchg
mov
push
imul
adcb
imul
xlat
jmp
mov
pusha
xlat
into
pop
sub
jge
fcoml
mov
shll
xchg
xor
mov
or
xor
xor
pop
imul
fmulp
inc
imul
add
jmp
jbe
jns
iret
sbb
xchg
hlt
dec
cmpl
stc
and
arpl
cmp
or
add
jmp
incl
or
cmp
push
ret
fistpll
inc
leave
and
enter
and
cmpsb
mov
loopne
int
mov
sbb
cmpsl
pushf
loope
adc
enter
and
jae
xchg
fcmovne
mov
sub
mov
mov
shlb
push
orb
jge
or
rclb
xchg
nop
cltd
stc
inc
ret
negb
jl
outsl
push
cwtl
pop
loope
mov
mov
lods
mov
cmp
mov
es
stos
outsl
add
xlat
aam
pop
in
ds
imul
loopne
mov
stc
dec
mov
sbb
adc
sub
movsl
and
neg
sbb
cmpsl
pusha
shl
mov
imul
enter
movsb
inc
adc
test
and
dec
mov
mov
ret
jb
jne
popa
icebp
movsl
push
cltd
push
std
inc
loope
mov
pop
jmp
inc
outsl
into
fsubrl
inc
lcall
cmp
out
inc
xor
xchg
fs
fucomip
ljmp
stos
jmp
out
cwtl
sbb
ret
push
jg
jo
mov
repz
inc
fists
test
xor
adc
mov
aam
pop
push
push
or
mov
sbb
xchg
inc
pushf
mov
cmp
loope
sbb
lock
dec
ja
hlt
lret
loopne
sahf
mov
sub
jmp
rorl
mov
lret
fnstsw
test
int3
mov
aaa
daa
ficompl
push
fbld
mov
add
inc
cmp
std
sbb
pop
push
in
pop
add
push
and
pop
jmp
ja
icebp
adc
dec
dec
bound
mov
pop
cli
outsl
xchg
push
sub
test
popf
and
inc
xor
mov
lds
add
push
pop
out
add
pop
xor
add
mull
loopne
dec
jbe
lods
sbb
or
test
xchg
fdiv
xchg
rcrl
icebp
add
bound
and
xor
mov
sbb
inc
inc
pop
mov
insb
cmp
jns
hlt
xchg
outsb
sbb
shrl
inc
adc
jp
repnz
aaa
fidivrs
xchg
fistl
push
jecxz
stos
dec
jecxz
xor
in
mov
jmp
pop
mov
pop
scas
and
mov
pop
mov
fcomip
jle
push
daa
stc
mov
shl
ret
inc
scas
xchg
punpcklwd
cmp
dec
dec
or
add
in
jmp
and
pop
cmp
sbb
xchg
pusha
stos
lea
push
cltd
iret
push
aam
pop
xor
insl
mov
les
xchg
sub
add
fsts
mov
mov
mov
inc
rcrb
arpl
fs
adc
mov
out
mov
mov
aad
dec
xor
in
mov
cltd
dec
jb
popa
push
test
or
dec
mov
incl
test
js
mov
sbb
jae
out
mov
and
aam
and
lods
test
dec
cltd
jle,pn
or
je
mov
flds
fucomp
out
cwtl
push
ds
inc
and
data16
xchg
aad
sbb
inc
push
jo
das
sbbl
fisubrs
xor
or
lret
and
pop
cmpsb
ret
mov
jne
repnz
jp
stos
mov
fwait
push
mov
mov
jne
jae
repz
ret
cltd
adc
inc
scas
push
div
in
pop
outsl
sub
add
cld
pop
xor
test
xchg
push
inc
mov
stos
or
push
jns
subb
sub
jae
das
lods
cmpsl
daa
cmc
push
cmc
dec
jg
test
imul
lock
mov
scas
dec
out
mulb
sub
fisttps
inc
inc
test
jmp
test
sahf
enter
rolb
les
aad
mov
mov
pusha
cmpsb
arpl
popa
or
fdivr
cmp
fcomps
out
inc
jle
push
hlt
sub
scas
push
lcall
inc
negl
lret
xor
jl
inc
mov
inc
push
jg
xor
stos
or
int
scas
out
and
stc
cmova
sub
dec
xchg
push
lahf
dec
sub
jp
fmulp
and
dec
jecxz
or
fnsave
shrl
jo
dec
cmpsb
sub
push
repz
push
adc
mov
stc
inc
fcoml
mov
fs
mov
pop
jno
lret
loop
xchg
stos
jns
fdivrl
xchg
and
mov
xchg
cmp
test
jl
outsb
add
loope
mov
jno
cwtl
lock
jge
cmp
adc
fucom
cltd
popf
dec
cs
inc
xchg
cld
mov
mov
mov
add
js
inc
das
or
scas
fmul
roll
std
xor
call
inc
push
aam
or
sub
adc
dec
aad
adcl
cld
mov
dec
popa
subl
cmpsl
shl
nop
xor
dec
test
lods
jo
fidivrl
mov
test
sbb
loop
lds
adc
jns
aaa
mov
jle
mov
mov
dec
add
movsl
sbbl
fst
xchg
js
xorb
and
sub
movsl
mov
pop
sub
pop
jl
call
call
fadds
add
lret
adc
int
lock
cs
hlt
pop
lahf
lret
xor
dec
jnp
fdivp
push
sub
inc
cwtl
movsl
pop
test
push
jl
push
sbb
fidivrs
inc
push
xor
xlat
jmp
pop
shl
aaa
add
cmp
sahf
sub
inc
jecxz
mov
adcl
test
inc
mov
loopne
roll
imul
jmp
or
in
mov
out
insb
mov
mov
outsl
je
sarl
sbb
push
mov
inc
xchg
call
and
pop
push
sub
and
icebp
dec
add
add
and
xor
scas
jmp
push
in
icebp
adc
cmp
push
lods
adcb
push
inc
jno
ret
pop
or
or
sbb
dec
fisubrs
mov
jmp
das
xchg
lret
int3
mov
jns
in
pop
adc
jecxz
fsts
push
stc
icebp
loop
rol
das
ja
adc
mov
mov
sarl
mov
sti
in
or
fisubrs
jae
shrl
mov
sbb
push
dec
inc
adc
xchg
incb
enter
mov
adc
clc
add
pusha
stos
out
fsubl
mov
sbb
cmp
popa
jnp
loopne
ss
mov
shl
mov
mov
lock
fwait
push
push
sbbb
jbe
mov
and
xor
aaa
pop
pop
and
adc
add
es
lods
xchg
mov
fldcw
or
cli
xchg
int3
mulb
adc
push
mov
fidivrl
int3
mov
jno
push
das
clc
adc
testl
cmp
inc
push
sbb
clc
sarb
xsavec
insl
fidivrs
sbb
xchg
xor
pop
data16
dec
movsl
adc
icebp
or
push
sub
rcll
or
aaa
js
shrb
add
insb
ret
nop
dec
sti
xor
adc
mov
les
inc
or
out
mov
sub
lret
shll
cmpb
sub
sarb
push
dec
fistpll
fisubl
cmpsl
or
or
adc
mov
sahf
cmpsl
xchg
jb
movl
fwait
hlt
mov
arpl
addb
iret
dec
and
mov
push
adc
mov
fwait
mov
loope
or
loopne
jno
pop
jnp
sub
mov
mov
fwait
jns
outsl
stos
add
and
dec
inc
mov
loope
xchg
xchg
std
test
push
mov
scas
pop
mov
dec
mov
cmc
cmpsl
cmp
add
test
mov
add
mov
sub
ret
hlt
test
and
cmp
popa
sbbb
xor
loop
loop
ret
add
jnp
pop
test
pop
das
rorl
adc
mov
shrb
gs
mov
scas
lds
mov
mov
call
lods
push
cld
xor
inc
jmp
popf
orb
call
pop
xlat
mov
jno
mov
fisubrl
or
sti
sbb
or
aas
negl
fidivs
push
imul
dec
push
pop
sbbb
or
ljmp
roll
ret
and
add
bound
or
test
xchg
xor
fwait
xor
sbb
dec
dec
sar
inc
add
adc
and
subl
xor
mov
das
in
add
and
xchg
outsl
jae
mov
xor
dec
dec
test
shlb
pop
add
setae
cmp
push
fidivrl
or
adc
imul
jp
insb
xchg
fidivrl
jecxz
sub
pusha
in
jbe
pop
or
das
and
cvttps2pi
and
add
push
and
jne
xchg
rcrb
mov
in
scas
leave
sbb
xchg
and
cs
mov
shll
in
dec
jge
shrb
sbb
push
inc
stos
push
popf
fcoml
shll
and
xor
gs
dec
mov
movsl
mov
mov
jg
dec
and
call
addl
and
or
sub
xor
fists
xchg
add
adc
lds
and
mov
js
adc
sahf
xor
addr16
outsb
sub
ret
out
cmp
xor
inc
xchg
jg
inc
pop
into
test
jg
adc
push
lret
xchg
add
or
mov
lock
sub
cltd
in
push
aaa
mov
cmpsb
insb
mov
push
pop
pop
mov
adc
pop
out
lret
mov
shll
mov
ljmp
popa
mov
imul
scas
push
mov
repnz
andl
or
push
shlb
pusha
mov
cs
mov
call
je
xchg
sahf
icebp
insb
cld
cmp
pusha
scas
push
loopne
vcvtqq2pd
pop
nop
mov
into
add
hlt
sbb
lods
mov
push
dec
std
ljmp
jns
jge
dec
jmp
nopl
pop
clc
mov
hlt
mov
insb
push
aas
shll
xor
dec
push
hlt
inc
push
cmp
or
xor
pop
or
push
mov
push
jo
int
lret
fnstsw
dec
lret
lahf
pop
jmp
rolb
nop
sub
mov
fsubl
or
ret
subl
dec
sbb
add
fbstp
push
mov
and
lea
sti
cltd
enter
add
mov
lahf
movsl
inc
daa
sub
mov
test
xor
pop
testb
adc
adc
sub
xor
add
push
jge
pusha
cmpsl
inc
jo
pop
iret
pushf
push
add
es
lahf
es
sub
insb
rorb
xlat
mov
adc
push
clc
sahf
xchg
jbe
scas
scas
push
cmpsb
jnp
imul
xchg
jmp
adc
or
jp
std
jo
cmpsb
test
mov
mov
xchg
pop
and
push
fsubs
pop
adc
into
in
push
or
outsl
mov
xor
mov
lcall
mov
xchg
jle
push
jns
dec
scas
sbb
dec
push
inc
rcrb
test
xor
pmullw
ret
and
nop
jnp
iret
adc
mov
jae
aam
adc
cli
xchg
out
outsl
fwait
mov
arpl
add
lds
dec
lret
xchg
cltd
and
cmp
lods
call
jge
push
and
adc
aam
popf
sbb
lret
addb
lret
sahf
clc
jne
test
and
mov
lods
xchg
loope
andl
push
not
push
ds
aaa
jmp
xorb
cmp
and
repz
std
adc
mov
add
mov
in
repnz
pop
cmpsb
pop
adc
roll
pop
outsb
aas
lret
mov
stos
iret
test
mov
xor
in
dec
adc
int3
mov
sbb
inc
arpl
and
sbb
rcr
imul
jl
aad
push
outsb
inc
add
dec
pop
inc
mov
ss
push
xorb
mov
dec
loop
mov
lea
adc
imul
adc
or
dec
dec
stos
sbbb
inc
lds
push
into
negl
add
in
ljmp
stc
jge
loopne
fisubrs
adc
mov
xchg
loopne
sbb
or
jne
insl
adcl
mov
mov
mov
in
jl
repz
and
fisttpll
lods
fs
mov
repz
imul
mov
push
jne
inc
push
icebp
movsl
xor
in
inc
test
dec
lret
nop
jge
insw
cmp
mov
mov
ds
call
mov
pop
out
push
call
sarb
jmp
sbb
pop
or
fdivrs
sub
adc
in
cmp
loope
pushf
imul
scas
icebp
mov
mov
sbb
cmp
std
fmull
js
push
stos
and
mov
insb
mov
dec
imul
and
jp
push
lods
lock
iret
xlat
sbb
test
lret
ja
cmp
cmp
xchg
mov
add
hlt
lds
lret
adc
stc
sti
inc
clc
loopne
notl
jo
add
lcall
stc
sarl
std
dec
rcrb
notl
test
mov
adc
ja
mov
test
dec
mov
fstpt
sbb
jmp
ljmp
das
cmp
mov
pop
or
pop
shr
cmc
test
leave
jmp
stos
and
icebp
movsl
repnz
pop
notl
xor
inc
mov
sbb
fwait
movsl
out
clc
inc
sbb
push
dec
notb
or
mov
nop
mov
sbb
or
cmp
test
inc
mov
scas
jb
in
jne
lret
fstpt
xchg
in
inc
sbb
or
out
xchg
xchg
sub
sbbl
les
int
ficoml
jecxz
and
test
cmp
sbb
aad
xlat
or
pop
je
and
inc
push
rcll
add
or
xchg
clc
stos
push
push
cltd
mov
insb
pop
push
adc
pop
mov
addr16
aad
sahf
sbb
adc
adcb
dec
add
in
cwtl
push
mov
xchg
sahf
cli
cli
xchg
in
dec
in
inc
shrl
xchg
dec
cmp
pop
push
sbb
shl
hlt
inc
fidivrl
fwait
jo
aad
pop
xor
fbld
sub
pop
xor
mov
or
push
sbb
outsl
leave
fld
add
mov
xlat
cmp
fisubrs
inc
jns
ja
in
stos
aam
and
jmp
test
in
sarb
cmp
or
lds
cld
jae
mov
int3
dec
sub
and
add
idivl
fldl2t
popf
ret
jle
test
sbb
stos
cltd
test
ljmp
fdivs
cs
xchg
clc
cmp
int3
dec
lock
stos
inc
out
xchg
mov
sbb
in
cmpsb
mov
rcrb
add
add
mov
jg
cwtl
daa
loopne
adc
cltd
data16
lret
lret
add
jb
or
dec
testl
xor
jbe
sbb
stc
inc
mov
xlat
dec
ds
adc
jns
lods
cmp
fistpll
test
js
mov
out
aaa
push
out
aaa
hlt
mov
push
and
cmp
movsl
imull
mov
and
sub
out
popf
bound
inc
or
pop
inc
push
xor
in
lret
mov
jo
je
fstl
push
not
push
mov
push
and
push
movl
sbbb
mov
pop
mov
cmp
xchg
pusha
std
or
repz
inc
ljmp
cli
sbb
jae
sub
inc
dec
push
notl
mov
dec
repnz
push
sub
xchg
decl
or
clc
adc
xchg
lods
mov
dec
jp,pt
loop
inc
inc
mov
dec
or
inc
les
xchg
push
fwait
mov
dec
cltd
sub
rep
fidivrl
sbb
dec
call
jno
test
adc
adcb
sub
dec
pop
adc
ret
dec
jnp
dec
pop
insl
xor
ret
je
shr
popa
sbbl
cwtl
icebp
lds
aam
out
pop
lahf
cmp
out
in
mov
xor
cltd
test
or
into
lds
jp
sub
and
in
rcrl
test
push
mov
lret
addr16
adc
xchg
cmp
sbb
sbb
bound
pop
arpl
push
or
pop
dec
dec
frstor
xchg
dec
xor
xchg
jg
mov
out
xlat
mov
xchg
gs
arpl
ds
inc
cli
mov
or
jae
stos
jbe
fsubrl
mov
cwtl
jmp
fmull
in
pop
insl
and
test
jg,pn
inc
mov
imul
jp
lahf
repz
in
loopne
cltd
adc
pop
je
lret
and
xor
cltd
push
lds
std
and
out
fistl
into
mov
sti
mov
ret
inc
pushf
jns
or
add
sbb
subb
cmc
push
ficoms
cwtl
std
or
inc
mov
xchg
jb
andl
shll
popf
stc
pop
icebp
shrl
push
lea
testb
sub
xchg
fstps
scas
data16
pop
push
push
cmp
jns
cld
out
es
mov
mov
mov
cmp
jmp
inc
pop
xor
ss
mov
mov
inc
add
in
nop
std
cltd
repz
imul
int3
and
cmp
push
aam
add
add
gs
lods
lea
xchg
sub
add
lea
testl
fwait
cmpsl
mov
xor
cwtl
fiaddl
iret
fnstenv
push
scas
inc
sbb
pop
sbb
or
cmp
insl
inc
mov
add
xor
sub
movsl
cld
or
adc
in
shlb
incl
cmpsb
test
xor
imul
adc
sbb
xor
imul
jo
jo
fucomp
pcmpeqd
loop
sbb
int3
xchg
mov
outsl
inc
lea
xchg
push
xchg
cli
test
and
popf
push
je
and
cmp
sub
sbb
call
xchg
mov
pop
adc
pop
loopne
pop
and
push
pop
imul
and
das
push
mov
lods
jmp
ljmp
dec
fdivp
lds
ret
shrl
out
repnz
stos
xchg
dec
and
fldl
sub
mov
rol
insl
cmc
int
sarb
movsl
inc
notl
repnz
stos
jmp
test
testl
sub
xchg
inc
jp
dec
hlt
std
and
iret
pop
cmp
xor
rcrb
cmpsl
pop
add
xchg
insb
fdivrl
in
pop
mov
add
and
push
loope
jno
mov
pusha
out
ret
or
clc
pop
pop
repnz
std
in
cmpsl
arpl
xchg
mov
pop
or
inc
inc
cmpb
mov
sub
adc
fst
test
ja
xchg
push
xchg
jg
lods
and
push
cmpsb
cmp
je
mov
insl
clc
fnsave
pushf
out
movsl
inc
cld
push
jbe
lods
jo
adc
cmp
and
dec
xchg
sbb
dec
jl
mov
cmp
or
repnz
adc
sti
jae
add
jne
pop
movsl
fs
xchg
sbb
pop
cs
outsl
dec
cmp
movsl
jb
xlat
insl
testl
in
cwtl
mov
out
jbe
out
and
inc
mov
inc
testb
lret
insb
aam
popf
jb
icebp
mov
push
mov
js
cmp
mov
lahf
popa
clc
or
hlt
mov
ja
jl
adc
jb
push
fsubs
in
test
push
jmp
test
scas
daa
test
xor
mov
lcall
adc
jb
stos
mov
xor
aam
push
jae
movsb
pop
addr16
xchg
jns
test
pop
pop
loope
pop
daa
sub
pop
push
sub
aas
mov
add
aam
mov
dec
mov
adc
add
adc
lahf
push
stc
imull
jne
orl
fsub
into
push
out
or
mov
ljmp
call
mov
roll
out
mov
aas
push
lods
pop
dec
test
xchg
push
aas
in
xchg
sub
hlt
scas
mov
lret
lock
movlps
fbstp
movhps
mov
out
cli
add
iret
push
std
cltd
ss
sub
xchg
cld
dec
clc
pop
flds
cmp
dec
mov
dec
xchg
adc
dec
call
js
mov
mov
rclb
jno
test
setne
fildl
push
repnz
cmp
or
mov
movsb
sbb
out
or
in
mov
cmp
ljmp
into
or
dec
shll
xchg
sbb
fmul
dec
aam
adc
pop
cwtl
inc
clc
sahf
repnz
xchg
adc
sub
iret
lahf
mov
daa
mov
mov
xchg
mov
rol
pop
fbstp
xchg
aas
test
pop
push
mov
lock
sarl
cmpl
push
sub
fmuls
add
pusha
repnz
pop
add
adc
jg
popa
clc
loop
or
push
add
in
enter
lods
mov
repnz
dec
adc
dec
jnp
lock
pusha
scas
call
inc
mov
arpl
sti
or
pop
in
mov
mov
fisttps
adc
and
jns
jbe
adc
in
xchg
loop
sub
fldcw
fidivs
pusha
adc
push
push
std
and
popf
fs
mov
push
loop
repnz
fdivs
inc
sahf
adc
out
lret
push
mov
mov
sub
mov
fs
inc
movsl
icebp
clc
leave
mov
cmp
shrb
push
leave
xchg
cs
adc
xor
inc
cli
loop
in
sbb
js
pop
loope,pt
leave
jecxz
rcrb
dec
dec
fs
movsb
std
imul
mov
adc
rcrl
push
out
loop
mov
js
cltd
mov
repz
ja
pop
cmp
fistps
adc
fs
daa
mov
je
jg
ret
xlat
orl
dec
sbb
hlt
dec
pop
cmp
js
push
lcall
pop
pop
fwait
test
cld
xchg
pop
outsb
or
and
xlat
push
jb
test
ss
add
fbld
jno
fbstp
pop
jne
fs
lret
adc
bound
sbb
pop
idivb
sub
pop
cs
cli
rcll
add
and
cmc
rol
or
dec
das
pop
jbe
jecxz
imul
dec
adc
add
sbbl
or
lea
or
fisttps
lds
jmp
stc
mov
mov
mov
loope
das
stos
stc
sahf
jmp
aaa
call
or
ss
inc
sahf
mov
lods
leave
cmp
loope
push
fnstcw
rclb
dec
cmp
inc
pop
push
lcall
mov
jmp
ficompl
addr16
adc
mov
repz
daa
cmp
push
mov
mov
xchg
push
inc
enter
inc
or
push
int
sarb
scas
lret
inc
push
mov
sbb
pop
dec
pop
xor
test
jp
mov
test
outsl
xchg
fcomi
pop
call
sbb
pop
cmp
cwtl
and
rdmsr
or
push
mov
inc
lds
icebp
adc
fsubrs
ret
push
inc
and
pop
movsb
xor
das
std
jle
stos
outsl
adc
inc
inc
jno
rclb
cwtl
xchg
lret
and
inc
pop
jns
aad
adc
mov
out
sub
jp
cmp
xor
sbb
shrb
arpl
jb
xchg
sub
mov
fadds
cld
xor
push
push
mov
dec
pusha
push
aas
push
rorl
lock
enter
mov
sti
movsb
stos
mov
repnz
ja
inc
lods
data16
inc
push
daa
add
stc
repz
shl
fwait
and
or
mov
adc
jno
test
push
fwait
xor
pop
cmc
repnz
lods
cmc
imul
sbb
mov
outsl
movsl
xor
pop
js
jno
rcll
rorl
push
push
push
mov
mov
fnsave
mov
insl
mov
test
lea
adc
push
out
dec
sub
scas
hlt
sbb
sbb
cmp
sub
pop
test
sub
popa
mov
test
rcrb
or
in
cmc
clc
xchg
xchg
and
mov
out
pop
sbb
adc
loope
arpl
adc
push
dec
aad
nop
and
mov
adc
mov
pop
and
mov
push
ret
push
mov
mov
lea
and
pop
xor
mov
jmp
add
jecxz
insl
aas
cmp
movsb
mov
popa
ds
in
addl
scas
ret
repz
push
jne
enter
stos
jbe
std
call
sub
xchg
vprotb
insl
push
in
push
jg
dec
sbb
mov
shll
add
xchg
out
repz
dec
rcll
dec
out
fwait
pop
push
fwait
scas
inc
jmp
xor
aas
enter
push
test
pop
sub
popf
lret
lret
cld
in
pop
mov
cli
sub
fstpt
cmp
and
into
inc
mov
outsl
sub
xor
xchg
bnd
and
xchg
daa
lods
sub
ret
scas
inc
lods
loop
stos
inc
int
jmp
dec
adc
ss
push
pusha
mull
pop
mov
cmpsb
pop
inc
dec
or
test
les
cwtl
subb
loop
sub
cmc
mov
pop
loope
rol
shrd
jne
popf
das
xor
lret
fdivrp
sbb
mov
push
mov
or
xchg
mov
cli
mov
in
addr16
pop
scas
and
add
or
xor
pop
sahf
iret
and
sbb
xor
in
outsb
rcll
out
jl
and
fstps
fstpt
outsb
stc
cltd
hlt
mov
sbb
xor
lods
mov
jecxz
push
bnd
ds
mov
inc
xlat
fcompl
flds
movsl
pop
cmp
pop
jp
insb
in
sahf
lds
rclb
cmp
xchg
pop
stos
dec
es
cmp
ret
push
popa
lea
mov
pop
add
mov
sbb
in
divb
into
jl
xchg
mov
popf
push
jne
jg
pop
mov
cmpsb
scas
cmp
cs
insb
lods
add
ret
shll
fistpll
jbe
fdivp
es
add
jl
xchg
sub
jg
ret
mov
or
and
ret
mov
fidivrl
out
jg
fstpt
cmp
imul
f2xm1
mov
fidivl
add
lock
popa
adc
das
enter
es
jnp
jle
sbbl
lea
cli
pushf
ss
rorl
inc
loopne
repnz
mov
xchg
rcrb
sbb
add
push
fcoms
cmpsl
push
call
roll
jg
push
mov
jbe
data16
ret
mov
mov
popa
mov
xchg
ja
shrl
jg
repnz
mov
addr16
xchg
rcr
subl
decl
mov
inc
dec
js
insl
in
sahf
xchg
pop
sbb
imul
push
in
push
and
dec
insb
push
arpl
daa
pop
repnz
xor
popl
in
loope
int
movsl
pop
addr16
jbe
mov
inc
xchg
andb
inc
xlat
imul
fidivrl
fildll
dec
sub
and
insb
fidivrs
sub
jbe
sbb
addr16
icebp
enter
aad
out
popf
mov
pushf
and
fcomp
xchg
not
ret
sub
call
xchg
lahf
test
enter
mov
mov
dec
int3
mov
ret
pop
lret
dec
loopne
mov
xchg
insl
cwtl
popf
decl
jmp
or
inc
or
or
data16
and
push
or
xchg
mov
loop
xlat
and
mov
ret
or
xchg
nop
mov
stos
bound
adc
pop
negb
jns
iret
mov
ds
xor
xchg
pop
into
aaa
xchg
push
popf
cs
sub
stc
rcrl
cld
test
in
fidivrs
push
add
or
mov
pop
pop
cli
int
aaa
jns
daa
mov
aad
inc
ljmp
jne
xlat
outsl
inc
mov
inc
popa
cmp
testl
lcall
div
pusha
add
daa
data16
jle
inc
addr16
jl
in
pop
out
sub
pop
mov
sbb
mov
jp
pop
out
cmc
mov
nop
inc
arpl
lea
mov
adc
push
mov
xchg
int
mov
cmp
fidivl
lahf
mov
sbb
dec
pop
cmc
jge
insb
mov
roll
sahf
xchg
daa
lret
test
gs
lea
mov
jns
pop
cmp
pop
xchg
mov
xchg
pop
mul
sahf
insl
add
incb
or
popf
push
sbb
mov
fs
lcall
cmp
rorl
jge
stos
filds
adc
test
imul
fwait
testb
dec
loop
out
js
mov
shl
adc
sub
jbe
dec
loopne
mov
or
cmp
aas
push
inc
mov
cs
push
push
sbb
mov
out
jmp
sbb
pop
jmp
rclb
mov
or
and
mov
pushf
inc
sbb
jecxz
jecxz
in
call
xchg
xor
pop
gs
lods
int3
or
testb
dec
adc
test
mov
into
cmp
cltd
inc
pusha
cwtl
add
push
movsl
fdivrl
test
inc
in
cmp
mov
out
je
sahf
leave
xor
cli
cs
dec
and
push
mov
rorl
cld
cmp
fstpl
cmp
fsubrs
enter
add
and
sbb
arpl
pushf
cli
push
jns
mov
mov
cwtl
pop
daa
cmpsl
ds
cwtl
jecxz
into
mov
js
int3
pop
bound
bound
xchg
mov
cmp
sub
leave
movsb
jae
jnp
sarb
sbb
xor
cmc
clc
cmc
mov
sub
mov
mov
outsl
jnp
cld
imul
repz
dec
adc
mov
pop
iret
jnp
rolb
mov
jl
lods
loop
lock
inc
sub
mov
imul
mov
mov
aam
scas
out
push
sub
ss
sub
sbb
dec
push
dec
fldt
mov
iret
jecxz
jne
rorl
adc
sub
cmp
jb
popf
es
and
xor
daa
push
sub
inc
dec
daa
rcrb
sbb
jmp
lcall
movsb
push
aad
aam
pop
or
push
fists
push
inc
and
inc
xchg
dec
out
xchg
lods
xor
fdiv
ljmp
inc
jb
decl
xlat
push
popa
fdivr
into
pop
cmp
fdivrs
mov
test
xlat
mov
ss
sti
or
stos
jnp
mov
mov
daa
inc
mov
mov
xchg
dec
repnz
pop
adcb
inc
sub
dec
lcall
jno
jbe
sbb
jb
add
pop
mov
and
cltd
insb
test
push
cltd
sti
mov
inc
sbb
imul
fucomp
cmpsl
sub
and
add
mov
jb
inc
fisttps
mov
aam
orl
xor
pop
stc
popf
ror
movsb
jg
mov
popa
mov
add
adcb
adc
repnz
repz
insb
or
sbb
ret
jae
enter
mov
cmp
out
jo
int3
pop
add
mov
push
es
leave
jne
jle
mov
jl
pop
xor
insl
dec
imul
push
rol
cmpl
sbb
and
jle
lock
sub
dec
sbb
push
and
cmpsl
xor
adc
iret
js
outsl
jge
adc
cmp
dec
data16
ret
test
enter
out
adc
pop
mov
pop
in
jne
xlat
push
mov
mov
sbb
call
jmp
outsl
inc
sub
aam
ds
int3
arpl
fldt
nop
xchg
repnz
push
dec
loopne
mov
out
sbb
and
mov
pop
shlb
lods
sub
and
mov
movsl
xchg
adc
inc
mov
xchg
push
push
rclb
cmc
xchg
jb
fidivl
pop
pushf
push
popf
aam
push
and
in
orb
loope
mov
inc
mov
inc
xor
ret
sub
cmpsl
cmp
jecxz,pn
cld
push
pop
sub
add
cmpsb
add
cmp
cmp
adc
and
and
jns
lock
push
mov
js
sbb
push
insl
lock
and
and
shrb
out
jnp
inc
mov
fdivl
or
cli
cmpb
xchg
cmp
xchg
les
mov
int
jnp,pt
repnz
aaa
sub
mov
push
pop
inc
xorb
xchg
xor
sub
rorl
mov
popl
int3
jecxz
inc
cwtl
push
stos
inc
xchg
leave
jecxz
and
push
cli
mov
inc
adc
mov
xor
sbb
xchg
sub
imul
ret
test
aaa
in
jae
jecxz
or
dec
mov
dec
jne
jmp
mov
add
mov
mov
inc
cli
or
repnz
adc
push
nop
xor
jle
pusha
pop
adc
ret
and
je
jge
sbb
cmp
sbb
dec
adcb
repz
sti
sbbl
cld
adc
es
push
mov
dec
add
repz
or
dec
fmuls
movsl
mov
add
ret
push
xchg
mov
dec
pop
jae
cwtl
pop
mov
loop
rorl
mov
loop
test
fiadds
sub
mov
xchg
jge
push
xor
ret
scas
pop
and
je
mov
js
movsb
movsb
push
fs
testl
pop
daa
sbb
jp
inc
push
pop
in
add
aad
mov
mov
arpl
hlt
lock
stos
pop
aas
add
fsts
push
cmp
lock
or
js
cltd
data16
lret
out
xchg
stc
adc
andb
and
inc
or
sahf
pop
lock
and
in
das
pusha
mov
test
ret
xchg
es
movsb
andl
jecxz
xchg
adc
and
xor
push
xchg
or
add
jge
idivl
in
dec
mov
or
jo
ficoms
cltd
add
pop
js
lea
cmpb
add
pop
pop
mov
sub
imul
lahf
ret
jg
scas
cltd
std
jp
pop
scas
mov
aad
add
mull
jmp
jl
pop
push
ss
mov
and
push
rcl
ror
pop
test
push
outsb
sahf
rolb
add
pop
xchg
ficompl
xor
je
notl
daa
xchg
or
mov
mov
pop
lods
dec
lcall
inc
push
jbe
add
mov
add
out
sbb
rorl
decb
stos
iret
adc
outsb
in
xchg
nop
mov
pushf
mov
adc
xchg
cmp
mov
in
icebp
sbb
or
adc
clc
add
mulb
dec
insl
loopne
out
cld
sbb
mov
fucomp
ss
jmp
push
pop
pop
ja
shl
lcall
and
push
jo
sbb
outsb
loope
mov
out
sbb
test
and
mov
test
gs
inc
js
xchg
sti
push
and
mov
ds
mov
lods
push
pop
adc
and
test
jp
out
cld
pop
fwait
inc
stc
adc
push
out
push
add
lods
xchg
hlt
mov
call
cmp
fidivrl
fcmovnb
adc
fucomi
outsb
lahf
jo
call
sahf
scas
mov
aad
jge
jne
in
cli
jb
icebp
pop
pushf
inc
data16
js
xlat
or
hlt
int3
lea
mov
pop
aaa
mov
int
inc
stos
jae
mov
imul
sub
pop
mov
pop
das
ret
sbb
pop
cmp
fwait
add
pop
pop
loopne
movsb
jbe
into
cmp
cmpsb
xor
inc
out
or
jb
fsubr
test
inc
idivb
cli
jg
xor
out
cmp
push
lods
mov
lcall
pop
mov
cs
aaa
push
push
gs
jae
xchg
mov
add
sub
lcall
jb
ja
jbe
pop
or
push
das
mov
pop
fs
add
jge
pop
and
and
rcr
cli
enter
lcall
mov
dec
dec
push
push
push
push
rolb
sahf
xor
les
inc
fs
in
sub
mov
fistpl
adc
lret
ljmp
mov
popf
cwtl
loopne
lret
in
push
add
sub
dec
inc
loope
ja
insb
inc
fs
mov
mov
orb
mov
xchg
push
jbe
xchg
xchg
xor
cli
pusha
dec
cli
push
aas
dec
xchg
pop
dec
push
cmp
mov
push
cmpsb
cmp
push
fisttpll
mov
in
popa
daa
fdivp
pop
ss
out
je
xchg
outsb
mov
sbb
jle
inc
jno
cli
repz
sub
mov
mov
sub
arpl
jmp
pop
aad
mov
add
inc
popa
clc
aaa
call
and
jno
push
xchg
enter
fnsave
dec
pushl
adc
lcall
and
scas
ds
inc
jmp
jno
jbe
dec
lods
cmp
pop
test
dec
and
cli
in
xchg
pop
shl
mov
loop
jecxz
push
dec
xchg
jne
mov
ljmp
roll
test
sub
push
clc
lret
mov
push
shrl
lds
jge
dec
sub
jp
lods
or
push
test
pop
pushf
mov
sub
fcmovbe
and
pop
pop
pusha
adcb
and
test
adc
gs
aad
mov
or
dec
add
xchg
dec
not
mov
jecxz
jo
jge
fstpl
mov
add
push
or
call
mov
dec
insb
cmp
jmp
jmp
out
sbb
inc
mov
lahf
push
cld
pop
arpl
sbb
ret
jg
ret
enter
pop
jmp
push
out
push
dec
mov
jg
jae
popw
fwait
push
test
popa
inc
jl
enter
dec
loope
pop
popa
jl
iret
push
leave
adc
dec
test
or
mov
out
dec
pop
push
in
mov
sbb
fiadds
mov
mov
xchg
rorl
ss
sub
pop
aas
rcll
cmpsb
out
jbe
enter
inc
nop
add
jge
jno
mov
test
test
cs
push
pusha
fcomps
clc
test
cmp
xor
pop
push
mov
cmp
mov
cmp
ljmp
call
adc
push
xchg
idivl
rcl
dec
xchg
inc
lods
lds
test
stos
cmpsl
lds
enter
dec
out
jnp
sbbl
fiadds
inc
and
jp
aad
pop
je
scas
cmpsl
in
mov
adc
mov
or
shll
mov
test
fcomps
ds
cmpl
jbe
repz
ret
iret
xchg
ds
sahf
add
cmp
add
sub
fsubp
incl
bound
sbb
xor
dec
test
xor
aam
std
nop
fistpll
je
mov
lock
iret
and
call
fsub
lods
lods
inc
pop
add
lret
popf
repz
sub
out
or
dec
mov
pop
mov
push
and
rorb
jnp
pop
adc
dec
ja
lret
xchg
push
xchg
outsl
jns
fnstenv
adc
leave
adc
jbe
push
fstpt
inc
cwtl
das
cmp
rorb
xchg
or
mov
push
and
sbb
sbb
addr16
add
and
out
pop
aaa
mov
xlat
mov
sub
test
sub
pop
ss
out
sbb
outsb
fmul
mov
inc
leave
int
or
mov
jbe
sahf
jg
test
int
mov
or
testb
mov
dec
and
adc
add
xor
jmp
mov
mov
loop
shlb
imul
sbb
ss
shll
pop
neg
dec
mov
adc
lds
hlt
mov
inc
rolb
ret
clc
repz
jl
sbb
fwait
add
andl
cmpsb
insb
add
inc
outsl
daa
jnp
ja
aad
ljmp
test
lret
mov
sub
or
cmp
mov
scas
ficoms
dec
or
jnp
gs
js
popa
loope
rclb
daa
push
icebp
test
pusha
ficoml
cmp
mov
ret
mov
div
test
sub
mov
or
ja
inc
test
scas
sahf
mov
cmp
imul
push
inc
fsubrs
enter
lcall
push
jno
in
out
cld
push
push
frstor
sti
or
and
cmpsl
mov
or
sub
lods
mov
jl
mov
push
jle
xchg
and
push
or
cmpsb
mov
pop
icebp
nop
adc
nop
fisubrl
lods
out
loope
imul
pop
cmp
pop
mov
or
push
jb
addr16
mov
inc
pop
mov
push
cld
les
sbb
add
sbb
mov
cmc
mov
in
sbb
fcomps
fs
pop
adc
into
rcll
push
dec
mov
pop
adc
add
or
mov
fisubrl
adc
push
add
mov
int3
imul
inc
push
int
insb
dec
mov
sub
adc
push
jle
enter
push
jmpw
fcmovu
and
pop
out
add
lea
cs
inc
fwait
iret
scas
inc
enterw
lods
jg
dec
andl
mov
add
lahf
jbe
sbb
push
outsb
push
adcl
test
loopne
jae
lret
lahf
daa
ljmp
pop
lock
fcoms
adc
mov
shll
je
lret
mov
cmp
shr
clc
clc
cmp
scas
sbb
stc
rorb
and
cltd
cwtl
cmp
mov
mov
sub
iret
subb
ss
xchg
inc
or
cmp
pop
dec
push
loopne
movsl
push
pop
imul
repnz
daa
pusha
fdivs
dec
aad
ds
adc
inc
pop
dec
pop
int
outsb
mov
or
adc
sub
sub
dec
andl
push
add
mov
testb
mov
mov
test
scas
in
push
loopne
fcoml
push
push
xchg
xacquire
out
xchg
fdivrl
add
in
adc
fs
sti
jb
push
loope
fnstenv
stos
dec
mov
and
lahf
aam
sbb
mov
cmp
sub
movsl
test
leave
pop
negl
and
dec
ss
push
neg
shll
lods
xor
push
ret
js
push
dec
out
push
test
hlt
addr16
dec
arpl
mov
stc
adc
popf
jno
in
rcrl
nopl
mov
int3
es
sbb
int
mov
xchg
scas
adc
xchg
adc
lds
cs
or
dec
cli
and
dec
adc
cwtl
xor
lret
ret
push
cltd
sbb
daa
mov
dec
inc
gs
into
das
jg
xchg
pop
adc
ret
insb
popa
jl
pop
or
or
inc
pop
push
sub
mov
into
push
cmp
in
fisubrs
shrd
mov
fcmovnbe
mov
mov
inc
inc
pop
ficoms
jo
lret
ret
hlt
mov
xor
pop
inc
push
inc
mov
push
hlt
and
mov
pop
jne
cli
in
daa
loopne
jae
lds
xchg
mov
xchg
sub
or
fucom
cmp
imul
fcmove
xor
or
lods
mov
and
out
push
insl
loope
pop
cmc
dec
movsl
sub
inc
scas
cmpsb
rep
add
cltd
test
rcr
in
les
lods
aaa
push
jmp
cmp
lock
cmp
scas
inc
or
imul
or
frstor
xor
pop
sub
mov
lea
incb
xchg
out
mov
sbb
adc
fwait
xor
mov
xlat
mov
mov
out
pop
dec
pop
test
mov
dec
shrl
or
inc
in
adc
or
test
fwait
movsb
mov
out
push
data16
xor
sub
add
jge
xchg
dec
cltd
sub
or
adc
dec
mov
sub
fistps
mov
mov
adc
jb
mov
popa
repz
int
mov
data16
push
cmp
push
pop
rolb
fwait
push
sub
aaa
add
es
jae
in
dec
ret
jg
and
mov
pop
cs
xor
call
lret
rcr
repz
push
push
mov
cmp
in
ret
xchg
das
inc
mov
ret
xor
in
xchg
lcall
lea
das
stc
mov
arpl
sbb
fdivrs
hlt
pushf
clc
cmpsl
test
mov
sti
adcb
jne
adcb
icebp
pop
icebp
and
popf
gs
loopne
dec
adc
inc
stos
out
data16
and
fwait
jnp
push
pop
fwait
movsl
sti
push
pusha
mov
mov
cmp
test
repz
adc
sbb
insl
mov
in
fistl
gs
test
lret
mov
cmpsb
cmp
pop
test
insb
call
std
or
hlt
icebp
cmpsb
sbb
popa
clc
pop
cltd
and
pop
mov
inc
lods
pop
pop
dec
call
cmc
pop
test
nop
jo
stos
pop
insl
sub
testl
sbb
sbb
adc
xor
call
aam
cmp
mov
data16
mov
or
xchg
mov
push
leave
and
cmp
mov
or
and
pusha
mov
mov
push
imul
sbb
xorb
mov
pop
jbe
pop
lea
nop
jno
test
xor
sub
jmp
mov
xchg
and
lds
cmpsl
idivb
ja
jmp
loope,pn
scas
jns
rcl
and
in
lods
mov
inc
sbb
mov
das
or
fnsave
test
cli
roll
xchg
int3
notl
enter
int3
or
pop
jb
add
dec
or
test
shrl
imul
ret
jne
xlat
mov
pop
outsl
sub
lcall
adc
sub
mov
and
or
mov
sub
pop
mov
sub
sbb
rolb
clc
and
inc
jg
jnp
in
test
dec
xchg
mov
adc
sub
call
sub
repz
movl
xlat
xor
test
and
ret
movsl
xchg
or
mov
pop
mov
sub
in
push
arpl
test
adc
imul
imul
std
jne
movsl
je
dec
and
jae
xchg
pop
jg
leave
test
ss
lret
ret
xor
imul
inc
ljmp
pop
sub
in
stc
outsl
lods
adcb
ror
xchg
sub
or
outsl
daa
rcr
hlt
and
inc
jnp
xchg
adc
mov
dec
cmpb
daa
inc
push
xor
push
fisubs
pop
add
stos
jle
inc
mov
cmp
lea
cmp
jmp
lret
xor
out
adc
mov
xor
or
mov
mov
notl
sub
xor
orl
addr16
mov
xchg
idivl
mov
inc
jmp
mov
call
sub
inc
push
pop
add
decb
imul
lcall
mov
or
int
rorb
mov
jmp
adc
movl
adc
fcomps
push
mov
mov
xchg
push
cmp
jne
rclb
cmp
push
popf
mov
push
and
mov
jl
mov
fsubs
push
shlb
pop
out
push
pop
loope
movsl
in
pop
mov
fwait
xor
aaa
stos
cmp
mov
add
mov
lods
inc
fimull
adc
jns
movsl
icebp
lcall
mov
cmp
xor
or
lahf
push
pop
hlt
or
push
inc
mov
test
inc
push
mov
enter
xchg
filds
dec
fisttpl
stos
cli
cmp
dec
jmp
and
or
cmc
push
xchg
adc
mov
jp
sbb
push
pop
out
lret
ja
xchg
and
pop
lock
icebp
jae
js
int
test
or
dec
in
xchg
xchg
gs
dec
jne
or
sahf
jl
stos
in
push
pop
xor
mov
push
and
in
out
arpl
aas
pop
les
dec
fsts
mov
inc
mov
adc
or
call
adc
fsub
mov
inc
mov
jno
cmp
mov
es
in
mov
push
test
leave
movsl
sbb
iret
mov
cmpsb
adc
pop
fucompp
mov
push
mov
push
mov
loopne
mov
add
or
call
insb
es
pop
and
pop
cmp
dec
daa
adc
and
add
lea
jo
xchg
and
jle
xor
cld
push
inc
ret
call
insb
fildl
out
std
addl
fimull
pop
rclb
ss
sti
push
rcl
into
ja
bound
insb
aas
cwtl
lret
movsb
inc
pusha
mov
sbb
insb
mov
mov
outsb
xchg
int3
dec
in
sub
mov
adc
cltd
jl
pop
lret
roll
cmpsl
fbld
pop
fdivrl
fs
inc
push
shl
mov
jle
jnp
fidivrl
adc
je
mov
in
or
cwtl
outsb
push
push
pop
xchg
nop
out
sbb
push
lds
mov
mov
cmp
inc
call
dec
call
mov
mov
push
jg
mov
mov
mov
and
lods
pop
fstps
mov
push
rol
out
outsb
pop
adc
pop
into
xchg
mov
enter
inc
xchg
inc
push
jb
in
out
pop
push
int
stc
dec
out
popf
mov
js
xor
jns
ja
or
repz
xor
sbb
jb
push
cmovp
mov
cmpb
xor
add
sahf
xor
jmp
jg
sbb
xor
repnz
push
lods
mov
pop
xor
xor
iretw
hlt
jge
xchg
dec
ret
lcall
jbe
adc
pop
scas
adc
mov
dec
lock
mov
pop
sar
lock
lock
lds
dec
dec
pop
sti
mov
xor
ds
and
dec
rcl
cmp
insb
int3
jge
shrl
lcall
scas
cmp
hlt
call
and
or
repz
dec
mov
or
je
sub
ret
cmp
into
call
add
into
mov
sbb
adc
mov
sub
iret
sbb
mov
xchg
aas
or
inc
or
insl
jge
repnz
pop
cmp
lcall
pop
mov
and
clc
arpl
subb
loop
mov
add
dec
inc
aaa
inc
int3
pop
pop
pusha
mov
out
pop
test
sbb
ss
fidivrs
mov
cmp
insl
js
inc
pop
test
pop
mov
sbb
sub
ficompl
test
aaa
add
mov
not
lds
dec
push
mov
int3
xchg
iret
pop
outsl
jae
push
push
scas
outsl
int3
fmull
pusha
es
test
aam
repz
sbb
data16
jge
sub
push
sbb
std
and
mov
add
insb
sub
scas
or
or
repz
push
or
cmc
jae
xchg
outsl
mov
pop
ljmp
push
ss
sarb
and
jle
mov
insb
adc
mov
outsb
add
mov
mov
out
pop
dec
jp
lcall
sbb
ret
out
daa
ljmp
jae
xor
and
lahf
dec
aas
shrb
cltd
xor
push
and
pushf
xchg
mov
cmp
fldenv
stc
pop
sub
cmpsl
stos
jbe
fwait
shrb
in
imul
rol
pop
cmp
nop
outsl
and
pop
cs
xlat
jae
ss
fdiv
je
stos
dec
lahf
cltd
nop
and
inc
pop
fimuls
mov
sub
sbb
xchg
xchg
push
je
test
pop
sbb
jno
fstps
add
pusha
pop
push
imul
cmc
in
pushf
add
fdivl
xlat
cmpl
mov
push
xor
les
lds
scas
cmp
dec
cltd
xchg
inc
add
sahf
and
dec
inc
xchg
repnz
lods
je
xchg
sub
pop
mov
xchg
out
test
lds
mov
mov
fisubs
aam
mov
or
inc
mov
jl
sahf
pusha
int3
pop
aam
fcmovnb
fwait
mov
rcll
and
clc
pop
dec
jl
jae
orl
or
xchg
fwait
repnz
push
xor
jbe
pushf
push
shll
rolb
clc
cmp
and
xor
incb
scas
push
xor
jns
mov
sub
lds
add
pop
test
lret
sti
sbb
pop
jbe
ret
sub
fs
in
inc
iret
lea
mov
sarl
sti
push
icebp
jo
cmp
add
psrlq
mov
xchg
cmpsb
adc
ljmp
mov
sahf
lcall
pop
pop
mov
stc
pop
hlt
inc
xor
add
sti
popl
popl
and
cmp
jno
xchg
enterw
call
inc
fildll
lret
xlat
je
movsb
imul
nop
dec
push
or
std
icebp
out
adc
loope
gs
dec
testl
aad
shrl
jne
sti
or
out
sub
into
dec
dec
mov
dec
loope
inc
popa
mov
outsb
jl
fnstenv
pusha
stc
or
xor
dec
loop
add
xchg
mov
leave
hlt
pop
cli
adc
sub
fldcw
cmp
lods
cmp
xor
adc
adc
repz
pop
adc
ret
fucomp
inc
imull
icebp
xor
movsb
inc
loopne
xor
lock
mov
into
cmp
sbbb
xchg
pop
push
xor
jp
push
adc
call
movsb
xchg
cmp
movsl
cmc
sub
cmpsb
roll
mov
and
push
inc
mov
jns
sub
arpl
dec
inc
test
rorb
sbb
call
bound
lret
sub
je
lahf
jnp
mov
sti
xchg
loopne
icebp
shll
sti
push
aas
sub
clc
test
cld
js
and
stos
movsb
cmp
sbb
mov
mov
sbb
dec
ds
dec
inc
mov
xchg
push
getsec
fwait
adc
out
inc
jmp
test
cmp
xchg
stos
push
insl
fnsave
pop
or
push
fcmovb
xor
dec
or
cmp
ljmp
testb
and
jge
or
jp
dec
push
stc
loop
movsb
mov
pop
fisttpl
lahf
or
mov
mov
cltd
mov
cltd
xor
cmp
int3
negl
pusha
fildl
push
in
push
fwait
dec
pop
jnp
je
lds
inc
leave
adc
lret
cmp
shll
orb
add
pop
jp
js
lcall
pop
and
cmp
or
and
sub
xor
mov
ret
test
lcall
sbbl
sarl
mov
dec
test
fwait
and
mov
andb
loop
mov
mov
mov
mov
cltd
add
mov
leave
popf
xor
insb
adc
jns
and
fldt
add
sbb
jne
fs
pop
adc
in
mov
mov
pop
mov
mov
movsl
stos
cmp
push
dec
add
lods
std
sarl
popa
fldpi
xchg
dec
cmp
mov
ret
out
cmpsl
dec
stc
xlat
mov
leave
or
movsl
gs
xchg
add
lods
dec
repnz
sub
push
cmp
out
jb
xchg
fisubl
or
xor
call
in
in
or
push
push
aas
stos
xchg
subb
out
mov
movsb
mov
jl
mov
pop
jmp
dec
cwtl
and
fwait
jnp
cmc
mov
mov
jo
xor
maskmovq
testl
add
dec
mov
xlat
out
leave
shrb
pop
and
jp
stos
jnp
mov
mov
push
pop
imul
dec
hlt
lcall
sbb
xor
push
push
inc
jns
out
mov
add
mov
es
sbb
dec
out
pop
mov
lahf
push
lea
add
jns
in
test
lret
std
inc
test
jb
push
adc
jle
movsb
mov
leave
cmpsb
push
dec
or
dec
adc
push
add
xor
lcall
jns
add
xor
imul
test
push
subb
mov
and
testb
popa
push
imul
lret
ret
pop
mov
sahf
test
stos
push
fcmovnbe
add
push
push
sub
aaa
popf
pop
fwait
sbb
sub
enter
cmp
in
cmp
xchg
sbb
rcl
xor
insb
in
jnp
fisubrl
push
hlt
and
push
lods
mov
xlat
cmp
inc
xor
xchg
out
pop
out
fnstsw
xchg
mov
mov
js
ds
fs
pop
testb
outsb
jnp
outsl
add
xor
xlat
xchg
jne
stc
clc
mov
test
cli
cmp
and
mov
jp
ljmp
imul
xchg
fldcw
pop
mov
aas
and
sub
dec
add
rorb
cmp
dec
ret
xchg
ficoms
jmp
in
push
sbb
mov
jecxz
inc
lret
outsb
test
jb
inc
call
or
pop
hlt
sahf
cmp
pop
xor
sub
stos
pop
mov
mov
jbe
dec
das
aad
sbb
mov
ljmp
add
sti
cmpsl
dec
push
lcall
sub
push
sub
mov
push
lcall
popa
stos
outsl
sti
leave
pop
shlb
push
sub
scas
call
repz
aas
adc
push
xor
push
lock
insl
xor
mov
clc
out
xor
cmpsb
xchg
add
or
sub
int3
outsb
out
dec
sbb
cwtl
or
cmc
repnz
fdiv
mov
out
not
bound
sbb
and
pop
push
inc
push
xor
cmp
loop
inc
pop
cmp
dec
ja
dec
xor
fdivrl
arpl
fwait
test
jnp
jbe
fbstp
shrl
mov
or
and
jo
pop
imul
scas
insb
lret
cli
std
repz
jo
inc
mov
dec
insb
pop
fisubs
jecxz
in
pop
xor
lea
push
test
fldl
dec
or
push
sub
loop
cmpl
mov
add
push
out
xor
xor
xor
sbb
fwait
lea
push
inc
ret
setae
pop
loope
xchg
testb
or
sub
cs
xchg
pop
mov
pop
ret
adc
mov
fmulp
repnz
add
dec
xchg
xor
out
outsb
cmp
scas
xorl
sbb
jns
cmp
cmp
sbb
adcl
sub
loop
bound
xchg
loope
push
cmp
xchg
cmpsl
and
jae
popf
out
mov
out
jb
push
add
push
xchg
sub
sub
into
cmp
inc
sub
cmpsb
scas
add
add
repnz
add
jne
push
cmp
cli
sti
test
push
dec
or
inc
cmp
jmp
sti
xchg
adc
lcall
iret
mov
je
add
and
in
mov
sti
xchg
int3
scas
mov
add
popf
jge
dec
cmc
gs
adc
jecxz
add
pusha
mov
mov
or
mov
es
loop
adc
out
dec
ljmp
cld
shrl
sahf
iret
mov
sbb
push
lods
xchg
push
fcompl
mov
inc
dec
cmp
adc
ficomps
push
imulb
out
add
cli
sbbb
test
fdiv
std
cs
push
push
jmp
addl
fsubl
push
and
dec
xchg
lcall
sti
push
sub
push
and
ret
sub
jae
cld
clc
push
mov
or
shr
push
or
jne
cs
imul
lea
sbb
xor
out
cmp
leave
leave
mov
sub
out
fildl
mov
jl
mov
dec
fs
das
xchg
insb
dec
dec
and
mov
mov
xchg
nop
jo
imul
mov
in
imul
sarb
push
pop
dec
lahf
imul
xchg
mov
cmp
insl
out
mov
pause
xchg
jnp
cmp
lret
call
test
and
push
xchg
cmp
outsl
adc
or
movsb
and
push
daa
mov
push
repz
in
jl
or
negb
fs
pop
arpl
icebp
int3
andl
pop
and
jmp
out
cs
jecxz
mov
cmp
mov
rcl
sub
push
mov
in
or
aam
sbb
clts
popf
dec
ret
lahf
stos
hlt
sub
xchg
mov
adc
nop
pusha
or
movlps
mov
test
pop
je
movsl
jmp
cmp
xor
jbe
pusha
in
shl
ja
pushf
mov
pop
aad
stos
push
enter
jne
inc
lods
das
inc
jo
outsb
pop
fidivrl
ljmp
mov
shll
xchg
or
ljmp
sub
xor
js
push
push
imul
or
sub
pop
lahf
xchg
inc
xorb
and
inc
shr
test
mov
shll
lret
sub
jo
stos
mov
jae
jl
ljmp
sub
sub
rclb
pop
lock
pushf
add
and
adc
pop
nop
dec
push
testl
push
pop
pushf
jg
bound
or
lods
enter
imul
mov
inc
hlt
fnstenv
push
and
leave
cld
fs
jne
sub
stos
cwtl
inc
fst
add
cmp
ja
imul
stos
cmp
daa
or
or
mov
lea
push
bound
mov
mov
cmpsb
fs
fiaddl
shrl
add
jns
xchg
xor
cs
cmp
inc
subb
mov
fsubrs
xchg
sbb
sahf
or
aaa
push
call
in
mov
dec
sti
aas
into
sub
mov
lret
dec
push
aaa
test
inc
cmpsl
sbb
rcl
mov
or
xchg
mov
repz
mov
ds
lock
enter
mov
sbb
andb
mov
int
jl
lahf
xor
jnp
das
aas
mov
fs
push
ljmp
cmp
out
dec
adc
loop
or
clc
lea
movsl
out
outsb
push
inc
movl
inc
fadds
mov
dec
out
xor
adc
lret
sti
sysenter
pop
cwtl
movsb
cmp
jle
adc
jecxz
xor
xor
lcall
sub
inc
mov
inc
fdivrp
xlat
inc
mov
movsl
sti
incb
mov
sbb
in
ret
sbb
xlat
dec
out
shll
in
push
aas
in
stos
push
mov
or
xchg
icebp
loope
jmp
je
xor
mov
sbb
push
jmp
repz
lret
inc
lods
add
and
xchg
fidivrl
mov
jge
fidivs
adc
into
fistpl
mov
fwait
es
add
movsl
mov
pop
icebp
rcr
pop
out
dec
dec
xchg
push
or
out
add
dec
je
xor
sti
mov
fsubrl
and
cmp
mov
jge
or
clc
mov
inc
sub
pop
pop
lods
add
rorl
xor
push
nop
ret
jae
and
add
movsl
icebp
frstor
rcrl
jne
xchg
cmpsl
aas
lcall
stos
js
loop
jnp
pop
and
imul
sbb
inc
sub
and
mov
adc
jno
cltd
mov
adc
and
add
aad
and
push
in
fidivs
jmp
mov
jnp
iret
movsb
aaa
xlat
mov
mov
pop
xchg
mov
mov
dec
and
add
mov
fstp
and
adc
and
in
xor
imul
daa
lret
cli
pop
imul
cs
fstl
es
sbb
add
mov
loopne
dec
les
xor
stos
psllw
dec
arpl
les
mov
fwait
shll
outsl
pop
test
lahf
ret
in
mov
mov
cld
push
cwtl
das
mov
push
add
inc
popa
xor
push
jmp
test
daa
or
ret
xor
inc
shlb
mov
jmp
adc
inc
test
mov
xor
mov
xchg
imul
cmp
xchg
outsl
mov
jnp
inc
lods
lods
mov
mov
in
push
in
movlps
inc
mov
js
cmpsl
cmp
in
hlt
inc
jae
xchg
stos
add
divb
xchg
mov
and
imul
pop
in
jno
sbb
adc
frstor
sub
dec
pop
cmp
daa
inc
jo,pt
or
insl
sbb
fidivl
and
adcl
imul
inc
pop
imul
das
fidivrs
cmp
mov
pop
rolb
loop
stos
in
addr16
sbb
mov
mov
pop
out
or
pop
xor
push
add
add
mov
pusha
push
and
jae
xor
in
cmpb
or
pop
adc
cmp
adc
inc
pop
xchg
nop
mov
pushf
xor
fnstcw
sub
sqrtps
scas
sbb
nop
outsl
popa
xchg
dec
ja
mov
xchg
xor
xchg
cwtl
inc
insb
adc
out
push
lods
loopne
mov
pushf
js
push
or
sbb
fidivrs
in
jecxz
jle
add
lock
outsb
das
mov
mov
add
int3
shll
adc
mov
mov
outsb
stc
test
es
pop
pop
sub
psllq
das
icebp
dec
aam
rcrb
cmpsb
enter
int
mov
arpl
jmp
inc
in
leave
imull
or
arpl
jecxz
fistpl
cs
jne
add
test
loope
pop
daa
adc
mov
push
ja
xchg
aaa
stos
pop
or
stos
inc
adc
mov
mov
stc
mov
and
jns
imul
test
push
cmpsl
test
aam
fsub
ss
or
cmp
pop
out
and
and
xor
shrl
popa
and
jl
sbb
fbld
fsts
mov
xorl
inc
sar
sub
sub
int
iret
push
sub
out
test
inc
mov
or
aas
xchg
cmc
shrl
or
rolb
adc
adc
mov
xchg
push
push
mov
pop
lock
lock
fldl
mov
fdivl
add
nop
lcall
out
int3
mov
movsl
push
popa
mov
cmpsb
pop
xor
mov
arpl
dec
inc
ljmp
insl
mov
push
out
and
scas
call
mull
mov
rcrl
xchg
inc
or
fistpll
cmp
out
scas
call
in
inc
and
xchg
push
jns
fists
and
int3
cwtl
ret
sub
in
mov
and
out
cs
cmp
pop
sub
inc
fldl
popf
aaa
sub
mov
in
hlt
jo
xor
stos
jne
sub
jmp
inc
cmc
inc
bndstx
cwtl
xor
push
dec
pop
push
sub
outsb
fdivl
xchg
out
sbb
cmp
mov
push
pusha
loopne
cmp
jp
dec
jno,pt
mov
ljmp
aaa
jl
in
test
loopne
ljmp
out
lds
fistpll
test
jge
push
das
mov
sahf
mov
gs
stc
je
div
mov
in
test
and
in
sbb
or
pop
xor
cmc
push
add
cmp
xor
push
cmp
cmpsl
and
pusha
and
gs
cmc
movsl
das
adc
shrb
mov
outsb
jl
movsl
ficompl
mov
movsb
cmp
fldcw
inc
cmpsb
data16
mov
mov
xchg
or
les
out
add
rep
call
mov
std
int3
adc
stos
jne
xlat
dec
inc
lret
test
insb
jl
jl
sbb
mov
sub
pusha
pop
xor
or
setno
outsl
repnz
jge
aad
add
es
fidivs
jecxz
lahf
and
and
adc
and
xor
out
xor
int
inc
inc
xchg
add
cld
and
mov
push
mov
lcall
inc
xlat
xor
lods
test
dec
rcll
push
call
push
cmpsb
lock
inc
mov
cmp
jne
pop
sysenter
stos
jnp
fstpl
dec
scas
mov
cmp
push
in
adc
ss
repz
xchg
sub
fwait
or
mov
cmp
jp,pt
pop
repz
jp
int
mov
pop
shrl
es
lret
push
dec
pop
testb
jge
push
add
xor
adc
shrb
dec
loope
test
mov
je
inc
xlat
inc
xor
in
sbb
adc
cli
rcl
mov
sub
shlb
sub
xorb
mov
cmp
subb
dec
xchg
mov
je
movsl
dec
inc
push
call
into
pusha
mov
stc
negl
sub
ljmp
stos
int3
xchg
xchg
jno
arpl
arpl
mov
andb
cs
pop
lock
sub
lret
mov
nop
rsqrtps
jp
nop
orl
mov
fstp
mov
cmpsl
insb
push
stos
inc
inc
enter
push
stc
js
ret
rclb
enter
les
cmc
cld
pop
imul
lock
xchg
mov
push
xor
out
add
adc
add
xchg
test
popa
loope
cmp
mov
pop
in
pop
out
test
enter
jns
and
out
lret
push
sbb
inc
lret
outsb
jo
decl
sbb
insb
adc
jmp
fs
mov
cltd
ja
mov
push
out
test
movzbl
es
push
xor
add
jo
cs
fmull
gs
xor
adc
inc
jle
xlat
outsb
mov
jb
ret
and
push
imul
cs
xchg
sub
add
shr
push
nop
pop
mov
xor
mulb
in
std
push
sub
mov
stos
cmp
out
push
and
xchg
sbb
ret
in
or
call
scas
xor
in
mov
out
xchg
dec
inc
lods
dec
cli
int
adc
sbb
aaa
cli
pusha
repnz
xor
xchg
gs
push
repnz
push
and
mov
push
loop
adc
jle
cmp
mov
imul
add
xchg
mov
or
and
xlat
xchg
sbb
popa
movsl
cmp
rcrl
hlt
js
push
push
enter
icebp
adc
jns
stos
stos
mov
sbb
fs
xor
popa
testl
fcoms
pop
inc
pop
fbld
stos
mov
jmp
lret
jmp
pop
popa
jbe
mov
rcrl
mov
sbb
out
loopne
scas
push
test
in
mov
sub
lock
and
sahf
xor
mov
push
call
scas
and
sbb
xor
cwtl
push
sub
adc
outsl
adc
sbb
or
xlat
xchg
and
inc
mov
xlat
push
sbb
add
pop
push
or
arpl
ljmp
or
mov
inc
pop
jmp
mov
movsl
je
add
fimuls
stc
xor
mov
fucomip
std
ljmp
nop
xor
xchg
data16
pop
test
stc
inc
clc
lea
outsb
cwtl
xchg
jp
xchg
outsb
push
xsha1
cmpsb
dec
push
jae
stos
mov
cs
scas
addl
sub
aam
jg
nop
aad
push
mov
and
shl
imul
and
div
cmp
ss
out
ds
sub
inc
mov
cs
in
sarl
lds
fldcw
arpl
sar
xchg
mov
mov
dec
jo
jns
pop
sbb
push
cmp
xor
inc
icebp
push
fadd
loope
push
sub
arpl
mov
push
push
xchg
push
mov
sbb
or
cmp
popf
pop
dec
lods
dec
repz
or
aaa
sti
inc
test
mov
imul
mov
cmp
mov
sub
jecxz
out
loop
insb
sub
js
pop
shlb
cli
lret
test
mov
jl
push
test
jmp
add
push
adc
add
inc
dec
pop
jo
xchg
xor
push
pop
testb
jp
push
or
sub
sub
jne
pop
jmp
sub
inc
in
sbb
add
xor
imul
mov
enter
sbb
int3
lahf
stos
jne
fistl
push
jmp
lds
iret
adc
out
dec
cmp
mov
mov
sbb
aaa
lods
stos
or
jbe
std
inc
loopne
aaa
adc
and
mov
push
jle
fwait
sub
fcoml
mov
mov
and
repnz
mov
or
pop
add
cmp
mov
fsubrs
inc
push
and
sbb
lds
std
movsl
mov
data16
cwtl
push
fwait
sbb
mov
push
lcall
test
imul
cmpsl
xor
pop
pop
jns
shll
add
cmc
aam
aas
inc
xchg
imul
mov
pop
stos
out
jmp
dec
stos
fbld
sub
jmp
or
das
pop
movsb
jecxz
dec
adc
push
push
mov
into
in
jecxz
jmp
mov
mov
sub
adc
popl
ror
pop
fcoms
rcrb
push
dec
in
push
sub
or
push
jg
pop
xor
sub
cld
loopne
mov
les
imul
mov
call
xor
aaa
ds
hlt
cmp
nop
jnp
dec
inc
cmp
jge
and
mov
jne
xchg
mov
mov
iret
mov
inc
add
pop
xor
cwtl
jb
adc
or
mov
mov
and
outsb
arpl
pop
xchg
fnstcw
adc
add
cwtl
mov
cmp
mov
in
ret
and
aas
inc
roll
add
sub
ja
test
mov
cmpsb
cmp
mov
mov
ds
dec
lods
cld
pop
dec
fimuls
jge
pop
scas
gs
sub
xor
dec
sub
cli
repz
mov
ret
shrl
ljmp
ret
sub
pop
scas
clc
add
xchg
das
mov
out
inc
arpl
stos
mov
mov
mov
jno
mov
bound
jecxz
mov
fsubrs
repz
dec
shr
and
loop
pop
clc
xlat
sub
loopne
loopne
in
cld
push
mov
mov
mov
and
in
cmp
movsb
cmp
lea
ret
add
pop
or
xchg
imul
jb
lahf
arpl
push
push
sub
push
ds
push
push
and
xor
sahf
and
push
out
push
inc
pushf
rcl
dec
faddl
cltd
loopne
pop
mov
into
enter
out
inc
fistpll
lods
arpl
xchg
xchg
add
mov
rol
in
mov
push
or
mov
pop
sarl
clc
jnp
sbb
fdivrl
aas
pop
loope
cmp
and
outsb
xor
push
mov
call
and
sahf
and
fadds
inc
dec
jb
daa
mov
jg
adc
adc
movsl
pop
push
mov
mov
pushf
mov
stos
stos
enter
fwait
push
into
xchg
jo
mov
arpl
int
adc
pop
xchg
add
bound
inc
xlat
cld
jmp
loopne
pop
insb
popf
mov
cmp
adc
fistps
add
insl
int3
je
ret
addr16
fsubrs
and
pop
mov
leave
cltd
sbb
or
popf
imul
pop
xchg
aad
imul
mov
mov
lahf
xchg
lods
aas
mov
and
faddl
mov
pushf
in
mov
dec
testl
pop
iret
xchg
add
shrl
or
out
arpl
mov
adcl
push
push
out
mov
mov
pop
inc
fiaddl
sub
xor
fsubs
xor
add
ja
jmp
testl
dec
popa
into
xor
mov
shl
aaa
xlat
shl
push
int
inc
and
lcall
adc
es
xchg
aad
andl
ljmp
push
push
push
and
jne
dec
js
adc
add
popl
test
push
into
pop
inc
xor
mov
into
cmp
jge
rcl
imul
imul
in
jg
mov
pop
data16
xchg
test
lret
jae
cmp
cmp
popf
mov
repz
cmp
imul
inc
movsl
xchg
movsl
loopne
sbbb
mov
push
incb
lcall
xchg
popa
stos
je
mov
dec
xchg
inc
ss
cmp
je
aaa
ja
inc
faddl
scas
push
mov
xchg
insl
xor
arpl
lret
ret
pop
xor
in
nop
mov
into
dec
scas
movsb
xchg
push
cwtl
lret
mov
cmp
outsb
mov
adcl
pop
insb
rcrb
shl
out
test
jne
aaa
movsl
jl
push
mov
cmc
pop
xor
aaa
jbe
jae
jnp
fnsave
pop
cmp
dec
add
aas
je
mov
icebp
lret
adcb
test
push
hlt
adc
jmp
std
or
mov
loopne
or
inc
jl
scas
imul
inc
fstpt
loopne
iret
fistpll
mov
stos
pop
lret
mov
lcall
xchg
popa
bound
stos
mov
aam
add
bound
iret
popf
aas
mov
cwtl
mov
or
jnp
sahf
bound
mov
mov
xchg
sbb
out
mov
add
and
pop
ss
push
aam
jno
je
sbb
add
and
stos
pop
jbe
or
pop
mov
mov
sbb
mov
out
cmp
ds
pop
pop
adc
ret
push
jp
pushf
pop
test
and
mov
xor
mov
push
mov
cmp
add
jg
push
mov
pop
outsl
dec
mov
fimull
xchg
pop
loopne
mov
push
call
lahf
shll
mov
mull
test
or
mov
or
mov
mov
test
xor
jns
jbe
jbe
imul
xchg
popa
loopne
icebp
push
subl
add
xor
jmp
test
inc
mov
mov
int3
int3
dec
lahf
js
fisubrs
push
and
test
mov
aad
and
testl
nop
cld
imul
mov
jns
inc
cmpsl
mov
pusha
ljmp
mov
imul
mov
jle
dec
out
pop
inc
imul
cmp
dec
fdivrs
imul
popf
jbe
cltd
inc
loope
outsl
add
stc
jmp
sahf
adc
movsb
sbb
scas
pop
lds
sbb
pop
dec
roll
notb
subl
repnz
pop
jp
mov
push
mov
push
cltd
das
inc
jo
test
loopw
inc
mov
lret
test
adc
sahf
daa
aas
mov
out
mov
ljmp
stos
add
pop
hlt
push
dec
jecxz
icebp
and
lods
outsl
les
cmc
mov
ret
jbe
jp
das
cmp
imul
add
fadds
loop
data16
adc
lea
push
leave
mov
xchg
jns
sub
outsl
lcall
pop
pop
xchg
add
aaa
mov
pop
movsl
sub
stos
ficoms
mov
mov
push
inc
leave
push
pop
lahf
xor
jl
fadds
and
outsb
push
sub
mov
mov
sub
ret
sbb
je
cwtl
jbe
test
stc
mov
add
and
out
push
mov
push
jge
loopne
je
and
mov
mov
sbb
cmc
jg
xor
jnp
imul
xor
outsb
dec
fbstp
adc
xor
outsb
xchg
imul
or
mov
imul
pop
imulb
js
push
push
call
repnz
loop
les
ds
fwait
push
lret
mov
inc
scas
mov
jecxz
xor
pop
jae
mov
lods
fsubp
nop
mov
int3
hlt
pop
adc
push
dec
testl
cs
mov
cmc
stos
and
push
push
cs
cli
pushf
or
stc
lret
cmp
mov
les
pop
add
pop
xor
sbbl
test
call
xor
scas
push
xor
or
cmpsl
push
jae
insl
cwtl
outsb
mov
mov
clc
jge
testb
stos
sbb
sbb
sbb
xlat
xchg
jo
imull
fwait
xor
std
inc
in
mov
push
repnz
or
xor
sub
push
test
adcl
pop
dec
mov
stc
or
add
mov
movsl
cmp
sub
add
sub
add
or
je
stc
adc
and
nop
push
test
sbb
or
sub
lcall
adc
movsb
jno
add
pop
lret
xor
outsb
fisubrl
and
mov
fwait
bound
cld
int3
mov
fmul
xor
pop
enter
jecxz
ljmp
adc
xchg
push
lods
dec
or
add
mov
inc
pop
push
or
pusha
lock
shll
add
push
adc
cmp
push
sub
pushl
jp
xchg
jle
in
sti
sub
push
imul
lock
je
sbb
sti
aaa
jp,pn
es
xchg
inc
test
aas
out
rorl
dec
aaa
push
in
sti
adc
sti
negl
xor
arpl
test
dec
jb
into
sub
xchg
movsl
incb
dec
sub
sbb
int
mov
adc
xor
xchg
movsb
lahf
popa
hlt
addr16
xor
mov
jo
test
fnsave
sbbl
js
in
test
mov
cmp
arpl
mov
xchg
push
mov
in
sbb
call
lods
imul
mov
push
xor
mov
pop
mov
imul
jo
jo
or
xchg
jne
rcll
adc
in
cmp
imul
ja
outsl
adcl
jno
fisubs
inc
sub
or
xor
addr16
push
outsl
mov
xchg
in
mov
and
mov
mov
inc
test
fdiv
adc
or
pop
bound
xchg
cmovp
ret
sub
insb
in
lcall
aaa
dec
cmpb
fnstsw
pop
push
popa
lea
xor
jbe
or
mov
ret
mov
mov
adc
or
pop
fs
vfnmadd213ss
mov
pop
inc
sub
lahf
or
rclb
out
sbb
fistl
inc
sbb
sub
jae
mov
and
sub
adc
mov
push
hlt
imul
push
stos
pop
enter
fs
in
inc
mov
add
dec
inc
call
int
jl
in
std
and
mov
aas
shlb
insl
fwait
lods
sahf
test
into
fldt
or
or
jnp
pop
in
jne
push
scas
in
or
pop
out
add
js
ret
sub
dec
dec
cmp
loopne
aam
enter
mov
repz
cmp
xchg
imul
inc
int
mov
mov
xlat
and
les
dec
push
int3
idivb
hlt
xchg
aam
out
roll
out
ljmp
inc
int
inc
repnz
subl
mov
add
outsb
jl
xor
mov
lcall
add
cmp
addr16
cmp
push
push
xchg
cmp
jb
lcall
xchg
pusha
adc
test
or
pop
mov
add
xchg
jbe
xchg
push
jmp
and
outsb
xor
out
popf
add
mov
mov
xchg
daa
add
sbb
lods
ret
outsb
sbb
sub
insb
or
popf
mov
jmp
xchg
fnsave
xor
xchg
repnz
cltd
mov
lret
clc
shll
inc
sarb
jno
lds
mov
imulb
mov
cld
xchg
std
in
inc
test
sbb
lods
test
push
inc
jmp
xor
in
xchg
dec
push
or
cmp
xchg
lds
xchg
mov
pop
cwtl
mov
dec
jns
jae
shrl
xchg
mov
adc
cmp
iret
add
fisttps
mov
inc
push
jb
std
xchg
push
ja
inc
xchg
vfmsubadd231ps
pop
xchg
sarb
fwait
jo
shld
shr
repnz
loope
xorl
testb
sahf
push
mov
xor
jns
or
jns
aas
push
adc
sub
xchg
popf
cmpl
pop
jne
sub
lret
jae
scas
and
push
or
addr16
nop
mov
mov
imul
pop
add
cli
outsb
mov
mov
daa
sbb
fnstsw
dec
cmpsb
lret
adc
pop
or
out
cli
sub
sub
jge
flds
dec
and
loopne
movsl
adc
and
push
push
push
shrd
add
ficompl
cmp
xchg
popw
loope
mov
out
dec
xchg
ja
sub
shl
and
add
cmpsl
push
mov
pop
xchg
sbb
cmp
lods
xor
adc
cltd
xor
lret
adc
or
sarb
fwait
insl
push
add
sbb
out
cmp
mov
cmp
leave
cmp
es
adc
int
cmpsl
mov
jno
jno
mov
jne
push
pop
push
inc
xor
fucomp
or
sub
xchg
mov
loop
mov
push
test
mov
mov
pusha
cmpsb
or
in
daa
adc
push
iret
xchg
push
int
xchg
and
lcall
add
push
das
int3
mov
and
xorl
mulb
mov
adc
movsl
lret
mov
mov
dec
lret
cmp
movsb
out
das
mov
das
aaa
pop
add
daa
out
test
push
dec
mov
ret
or
or
mov
test
xchg
js
ds
adc
push
add
inc
sub
push
mov
dec
jns
stc
pop
mov
add
push
xchg
movsb
adc
xor
or
lods
pop
mov
dec
movsl
pop
rcl
fisttps
and
js
sbb
imul
xchg
mov
push
push
dec
cmpsb
or
xor
xchg
test
shlb
cmp
dec
test
cmp
cmpsl
dec
add
xlat
stos
mov
imul
jmp
push
push
add
in
mov
aam
movsb
mov
push
in
adc
mov
fnstenv
mov
les
pusha
cwtl
sbb
pop
addr16
sbb
test
stos
pop
xor
out
mov
sbb
push
push
ja
bound
sbb
movsb
sub
mov
repnz
sbb
mov
jns
mov
adc
cmp
mov
cmp
adc
xchg
xor
mov
inc
in
adc
add
call
stos
mov
ja
adc
ror
leave
or
xchg
arpl
add
in
pop
ret
or
xchg
mov
push
cli
loop
repz
enter
repz
int3
or
mov
sbb
mov
dec
add
inc
xchg
pop
ljmp
divl
lods
hlt
aaa
mov
sbb
inc
push
cld
fnsave
js
push
pop
stos
lret
xlat
xor
and
ret
shlb
leave
rcr
mov
and
lock
scas
inc
lock
push
test
fstpl
fisubl
xor
and
mov
fucomp
mov
jbe
cmp
in
lret
xchg
lret
lods
ds
cmp
fildll
cmp
sbb
arpl
inc
jo
shlb
cltd
lea
xchg
and
inc
fucomip
jg
call
dec
clc
or
rcrl
fidivrs
nop
clc
out
xchg
das
mov
sub
insl
xor
int3
adc
test
shrb
cltd
mov
mov
push
push
xchg
movsb
jb
scas
in
inc
out
roll
adc
dec
sub
sub
add
sbbl
shl
jae
mov
adc
mov
stos
mov
fmuls
mov
insb
jl
adc
stc
dec
jp
cld
in
gs
flds
jg
movsl
ret
jb
jg
pusha
fildl
repnz
dec
nop
mov
jecxz
fucompp
mov
std
test
jne
data16
jns
enter
cwtl
js
sbb
mov
lahf
lret
mov
xlat
scas
push
sbbb
out
jle
add
test
mov
ljmp
mov
orb
test
mov
loop
scas
ljmp
jno
in
dec
mov
jno
jle
sahf
sub
dec
in
scas
xor
sarl
jecxz
add
sub
pop
push
clc
and
adc
insb
ja
mov
fdivr
cmpsl
jne
dec
cmpsl
enter
inc
call
adc
bound
stc
xchg
imul
stos
jge
mov
mov
or
test
lret
fldt
dec
stos
fadd
loopne
mov
icebp
pop
fsub
add
jno
sbb
fdivrl
imul
or
or
fildl
in
push
mov
insl
fbld
xchg
sub
ret
push
testl
test
ret
jmp
test
adc
and
mov
jl
adc
adc
mov
sub
xchg
cmpsb
fcmovnu
lods
js
add
int
and
lahf
push
push
aad
out
out
pushf
neg
push
jecxz
jmp
ss
hlt
or
xchg
xor
jl
repnz
mov
push
lock
shl
loop
xchg
clc
xchg
cltd
repnz
dec
mov
sub
sub
xor
popa
movsl
or
cmp
push
mov
or
or
sub
adc
mov
xchg
imul
or
aam
cmpsb
outsb
adc
daa
inc
lgs
test
ja
and
sbbb
dec
mov
inc
mov
xchg
popl
movsb
ror
sti
cwtl
cmpsl
sbb
xchg
xchg
seta
ja
mov
and
pop
int
sti
jle
stos
pop
inc
aam
xor
mov
int
scas
dec
std
mov
xchg
test
test
jae
fldl
js
pop
dec
pop
adc
push
xchg
fcmovnu
in
iret
lock
mov
test
and
fbld
jo
dec
adc
add
popa
fsub
test
and
sti
push
out
xchg
ficoms
cmp
popa
movsb
cmp
and
jmp
mov
mov
push
jge
push
pop
jno
aas
stc
aaa
jbe
aad
inc
pop
mov
push
ret
xor
out
push
movsl
dec
xorl
pushf
xchg
arpl
pop
mov
pop
inc
nop
clc
xchg
test
lret
je
adc
push
pop
mov
xor
mov
gs
orb
jp
bound
shlb
in
adc
add
out
jo
repnz
mov
rolb
dec
mov
xchg
les
scas
jg
dec
mov
push
adc
sbb
out
push
sarb
sub
repnz
dec
ja
sbb
dec
test
jnp
mov
aaa
insb
fdivl
rorb
jne
aaa
adcb
mov
mov
ss
pop
cmp
aam
daa
push
jbe
outsb
insb
scas
popf
push
add
insl
cli
test
mov
sbb
xor
std
add
push
mov
and
int
mov
les
aas
aam
out
stos
loope
insl
les
pop
inc
scas
cmc
leave
dec
pop
enter
ds
and
mov
xor
push
mov
sbbl
hlt
sbb
or
xchg
rolb
cmp
jle
push
fldl
shl
enter
jp
ficoml
bound
fsubl
jecxz
xchg
mov
fstpt
adc
shll
xor
movsl
lcall
fnstenv
je
ret
xor
jecxz
repnz
ret
outsb
test
repz
and
inc
aaa
add
cltd
sub
push
movsl
call
lret
push
rcl
inc
shlb
pusha
pop
mov
out
or
push
sbb
stc
popf
inc
insl
inc
fsubp
jmp
sub
adc
cmpsb
and
inc
popf
icebp
in
jns
lods
mov
mov
imul
cld
sub
mov
ja
pushf
pop
mov
or
test
mov
cmpsl
imul
mov
push
xor
sbb
fstl
push
add
cmp
pop
pop
mov
sarl
and
testb
xchg
jo,pn
cli
test
imul
daa
dec
shl
cld
dec
jae
jnp
jp
shlb
mov
push
jmp
cmpsl
and
inc
test
in
pop
repz
arpl
mov
jmp
cs
ds
test
and
and
mov
sbb
lcall
repz
xchg
jl
stc
test
sbb
push
out
xchg
out
jns
std
stos
xchg
sub
pop
orl
iret
push
pop
mov
xchg
xchg
xchg
repnz
cltd
lods
lcall
out
jae
imulb
ljmp
sbb
rcll
jge
sti
daa
push
mov
dec
mov
cmpsl
out
into
and
jl
cmc
lea
ds
imul
inc
aas
js
mov
pushf
sbb
inc
fbstp
addr16
outsl
mov
test
movsl
ss
push
or
scas
or
sub
loopne
arpl
adc
inc
pop
lods
mov
aas
dec
fdivrl
cmp
mov
sahf
xor
jb
mov
out
add
out
mov
imul
imul
stc
mov
push
popf
popa
pushf
mov
xchg
mov
pop
jae
pop
imul
adc
jo
vmulps
subb
outsl
jge
shlb
mov
and
push
or
jae
ret
mov
fidivrl
jmp
xchg
je
adc
stos
jecxz
fs
testb
inc
fdiv
jl
outsb
sub
das
mov
inc
stos
aad
pmaxsw
add
cmp
and
sti
jbe
shll
jns
push
mov
jmp
cmovg
idivl
and
jo
bound
pop
inc
ficoms
leave
test
dec
pop
orb
sbbb
add
xor
je
lret
xor
in
leave
lret
lock
inc
xchg
add
outsl
pop
imul
mov
neg
adc
pop
xchg
aas
ret
xchg
pop
adc
jle
or
fnsave
jmp
mov
mov
dec
mov
repnz
and
dec
js
imul
in
fidivs
mov
mov
sub
leave
jbe
div
in
adcb
in
ds
lods
jge
gs
xor
jno
mov
jns
mov
jmp
xchg
sbb
leave
sub
jo
cli
lea
subb
push
adc
mov
xchg
stc
or
add
add
mov
pop
loopne
sub
dec
and
mov
mov
into
movsb
or
add
test
imul
add
pop
jnp
testb
jo
xor
jns
popf
stos
dec
mov
push
pop
stos
jno
in
dec
adc
pop
imul
sbb
and
xor
jp
jae
xchg
sub
lcall
sbb
insb
or
sti
xchg
sub
les
imul
gs
lahf
popf
loope
push
dec
mov
or
push
mov
in
shll
rcrl
rcrb
daa
mov
pop
or
add
and
or
popa
cmp
pop
and
mov
lahf
jnp
test
rorl
add
scas
lock
dec
mov
cltd
push
outsl
mov
or
lods
add
shrb
in
mov
xchg
pop
ret
filds
stos
arpl
je
push
movsb
movsl
aad
add
rep
aaa
out
push
sbb
lret
cmp
xor
cwtl
lds
dec
imul
mov
not
jo
mov
aas
pop
jnp
push
cmpsb
ljmp
dec
stc
in
or
sbb
push
mov
test
out
je
cmpsl
cltd
daa
sbb
insl
nop
scas
sbb
add
jbe
adcl
fs
xor
xor
stos
sbb
and
inc
or
bound
cmp
sub
inc
inc
mov
push
js
jo
jne
mov
call
cmc
pop
add
cwtl
or
mov
pop
inc
stc
test
jne
xlat
das
push
inc
push
xor
ss
xchg
pop
aam
push
and
mov
jmp
or
dec
cmp
mov
pop
in
pop
stos
stc
mov
out
ljmp
out
push
loopne
jo
stos
sbb
fsts
cmpsb
aas
loop
jmp
popa
mov
and
lock
mov
sbb
jecxz
xor
addr16
mov
sub
daa
mov
icebp
into
fldt
pushf
gs
and
lahf
daa
cmpsl
insb
and
test
jns
mov
pop
pop
mov
lret
in
add
inc
and
iret
scas
jge
pop
xor
push
xchg
add
add
xor
popf
iret
loop
mov
jns
lods
inc
fmulp
in
jae
movsl
sbb
sbb
sub
loope
fs
mov
mov
ret
cmpsb
ja
sub
inc
out
or
andb
lods
sub
xchg
dec
sbb
jb
fbstp
frstor
es
mov
sbb
jmp
mov
push
mov
scas
jbe
and
fildl
mov
mov
fcomip
dec
cld
aaa
pop
jmp
mov
call
fstl
mov
loop
push
ret
aas
add
imull
fsubrs
push
mov
js
pop
sbbl
mov
pop
insb
mov
xsha256
cmpsb
push
push
push
inc
add
addr16
int3
arpl
jmp
xchg
pop
adc
in
push
ficomps
xchg
insb
jmp
cmpsl
ret
and
mov
imul
mov
mov
psadbw
adc
dec
addr16
pushf
leave
adc
push
mov
and
and
xchg
mov
fxch
mov
mov
lret
pop
mov
sahf
jae
inc
lcall
cmp
adc
and
mov
adc
outsb
cltd
lds
mov
fwait
pop
pop
mov
and
lea
mov
xchg
popa
cmp
dec
cmc
and
les
push
pop
xlat
cmpsl
inc
push
pushf
dec
mov
cwtl
test
mov
cmp
dec
in
subb
nop
pop
leave
fisttpl
xor
dec
mov
dec
in
jle
sub
jecxz
mov
push
test
incl
js
imul
repz
push
cli
fwait
push
scas
movsb
xchg
pop
rcrb
push
pop
mov
xor
outsb
mov
pop
push
cmp
in
mul
and
enter
dec
xchg
sbb
xchg
and
leave
pop
mov
mov
dec
rol
out
push
test
in
outsl
repz
mov
ret
xchg
dec
lods
lods
mov
mov
mov
fwait
xor
push
push
xchg
mov
scas
shrl
pusha
popf
repnz
jg
mov
test
fisubrs
push
pop
call
ror
xchg
cmp
push
cli
jle
add
in
test
dec
or
xor
sub
push
sbb
push
and
push
mov
xor
cmp
or
iret
mov
pop
mov
pop
push
rcrl
bound
pop
dec
aaa
mov
clc
es
imul
data16
sbb
jns
inc
sub
data16
cmp
xor
or
and
sub
cmc
push
inc
inc
sub
dec
lret
or
and
sbb
arpl
std
mov
push
sahf
fcmovu
mov
sub
fnstcw
imul
popf
mov
inc
jo
inc
out
add
lock
mov
aas
nop
cmp
scas
test
ret
popa
mov
adc
xchg
push
es
cmp
imulb
ret
inc
pop
repnz
dec
loopne
adc
aaa
dec
mov
push
lods
jb
out
push
lret
outsb
cmpb
xor
push
xchg
mov
push
push
outsb
mov
test
xchg
in
aaa
dec
add
xchg
or
movsl
pop
repz
sbb
or
pop
repnz
add
ret
jns
sub
push
sub
fbstp
das
roll
adc
stc
lret
cld
sbb
pop
leave
xchg
mov
outsl
fcmovnbe
cli
xchg
bswap
jae
push
push
sbb
cmp
fucomp
sbb
fidivrl
pop
test
mov
movsb
cmp
push
xor
pop
ret
int3
sbb
and
xor
push
sarb
aaa
js
push
pop
xchg
loope
hlt
stos
mov
stc
mov
jne
adc
test
pushf
cli
sbb
push
mov
std
push
in
fistpll
repz
in
or
sbb
mov
popf
mov
sbbb
sbb
sahf
adc
pusha
imul
jne
xchg
add
push
inc
stos
mov
or
mov
std
aam
pop
push
sub
es
cmpsb
pop
stos
mov
dec
adc
dec
inc
or
mov
xor
push
pop
stos
push
jmp
cmp
pop
push
pop
jbe
jle
dec
js
push
push
test
inc
out
int
mov
test
rcrb
mov
dec
xorb
mov
test
pop
or
out
in
inc
inc
push
mov
movsb
xchg
mov
dec
insl
add
jl
ja
push
push
jg
push
es
enter
dec
sbb
enter
mov
out
ja
pop
sbb
jg
jmp
adc
das
das
jno
test
mov
and
aam
xor
lcall
and
insb
dec
int
out
test
out
inc
int
in
in
icebp
les
cmc
push
in
inc
adc
stos
mov
mov
addr16
clc
sbbl
mov
shll
shll
mov
or
push
outsb
jl
test
xor
stos
shl
pop
enter
sub
cmpsl
jp
mov
adc
add
aas
jle
ja
jnp
mov
aas
jge
xor
adc
aad
push
add
sub
std
stos
xlat
stos
pop
fisubrs
addr16
cli
inc
mov
push
dec
cmp
xor
xlat
lahf
int
sub
jg
mov
test
pop
mov
std
divb
adc
mov
clc
shll
mov
and
xor
out
outsl
fs
fbld
push
test
into
negb
movsb
icebp
mov
cmpsl
dec
xchg
xchg
jl
jno
leave
dec
push
repz
mov
adc
cmpsl
mov
fxch
cwtl
push
and
pop
scas
out
xchg
or
test
or
mov
inc
add
push
fistpl
movsl
loopne
sub
aam
cmp
fcoms
and
mov
test
inc
jl
sbb
fistl
xchg
sbb
add
cmpsb
lock
xchg
xor
lea
rorl
aad
in
leave
int
xor
xchg
mov
jns
inc
inc
lahf
adc
xchg
cmp
repz
fldcw
stc
roll
aaa
ljmp
push
xchg
xchg
pushfw
jb
xor
call
stos
mov
repnz
mov
or
insb
out
lds
mov
add
int3
mov
sti
jl
cwtl
mov
push
and
sahf
loope
iret
aaa
fnstenv
adc
mov
sbb
jnp
jg
mov
aam
hlt
lahf
xchg
jecxz
mov
jecxz
fmul
pop
sub
push
mov
mov
add
mov
cmp
and
out
addr16
fisubrl
push
mov
and
out
sub
das
mov
xor
js
push
in
cmpl
or
cs
aam
pop
orb
sbb
jp
cmp
cwtl
fs
cmp
jbe
inc
push
fsubr
lock
pop
out
mov
mov
sahf
adc
adc
cmp
add
das
lahf
mov
xor
out
arpl
xor
rcl
rol
imul
cmp
lcall
pop
sub
add
mov
and
jg
xor
xor
or
pop
lock
dec
insl
mov
stc
lock
dec
sub
jmp
imul
rcll
orb
out
stos
push
sub
imul
sbb
add
sbb
out
rclb
ds
push
call
je
outsl
or
fimuls
popf
pop
xchg
rol
sahf
xchg
cmc
sbb
loope
adc
cmp
mov
xor
aam
dec
lock
lret
popf
add
repnz
cmc
mov
or
xchg
adc
fwait
xlat
out
pop
xchg
push
fldcw
sub
shll
push
lds
xchg
mov
int
sub
rcrl
mov
lods
jecxz
mov
pop
sub
push
arpl
dec
xor
xor
rcr
and
lahf
jle
movsl
and
aas
std
shrl
aaa
jno
pushf
mov
js
pop
xrelease
or
sbb
in
pop
pop
es
lret
pop
xchg
aas
mov
and
sti
xor
dec
sbbb
setle
xchg
and
push
shl
jp
fsubs
out
stc
and
ret
aad
xor
cmp
lods
xor
cmp
negb
subb
mov
lods
into
sbb
dec
add
dec
aas
popf
push
in
into
pop
sti
pop
sarl
xor
fbstp
push
rol
push
add
fidivrs
push
aam
lea
cmc
xor
je
xchg
inc
shrl
test
fldcw
push
aas
lret
popa
stos
push
jp
cwtl
je
add
fwait
jo
and
xor
mov
dec
mov
jns
jbe
xor
lcall
inc
mov
stc
push
mov
dec
fstpl
pop
sahf
sub
iret
call
dec
pop
pop
or
inc
in
xor
scas
jno
xchg
shll
mov
xlat
jmp
addl
movsl
imul
lods
add
pop
jne
push
add
das
inc
enter
mov
dec
repz
vpsrad
repz
push
out
adc
cmp
in
cmp
jbe
pop
mov
mov
adc
and
jnp
je
lret
mov
ss
fsubrs
inc
scas
test
test
mov
push
js
loop
sub
lea
lock
stc
pushf
dec
je
pop
out
ljmp
out
lret
int
push
inc
shl
lret
insb
fs
test
adc
mov
cli
mov
xchg
mulb
sbbl
comiss
aas
mov
adc
das
sti
cmp
out
nop
pop
cmp
sub
repnz
and
lcall
lahf
ja
mov
mov
mov
add
inc
xchg
inc
jle
in
cwtl
insb
add
leave
bound
xchg
loopne
xor
push
inc
arpl
adc
divb
push
outsb
or
out
sub
adc
sbb
or
sbb
inc
pop
jo
jg
mov
and
push
imul
pop
cmp
xchg
cli
cmpb
loopne
js
leave
xor
mov
push
mov
jmp
test
dec
xchg
sub
pop
mov
sbb
test
jle
inc
gs
stc
xchg
push
stc
lods
outsl
aas
out
jne
add
add
push
mov
mov
mov
adc
pop
fnsave
sbb
xchg
mov
cmc
mov
adc
les
add
jg
jo
ja
ret
sbb
sbb
inc
mov
clc
mov
push
lods
sbb
leave
fisttpl
mov
fcompl
add
aad
aam
push
addb
mov
sbb
xor
mov
pop
mov
sub
int3
pop
ljmp
test
xchg
mov
test
jmp
xchg
mov
sub
mov
and
movsl
inc
repnz
sbb
lahf
xchg
loopw
cmp
test
insb
inc
out
loope
aam
outsl
xor
lea
ficoml
iret
add
test
sahf
ret
adc
lahf
jecxz
inc
lcall
popa
cmp
rorl
sbb
and
dec
jecxz
mov
out
xchg
aam
lock
cmpsl
js
add
sti
xchg
in
das
cmp
mov
lea
inc
inc
ja
xchg
fs
sbbl
cmp
push
in
sarl
xor
or
sub
and
les
subl
ficoml
mov
leave
mov
cmp
xchg
daa
xchg
adc
xor
in
test
push
mov
clc
mov
jg
dec
dec
push
push
jb
popf
xor
push
inc
mov
lahf
in
sti
jge
mov
dec
cltd
add
inc
outsb
cmpsb
inc
arpl
test
ja
push
out
sub
icebp
inc
add
in
push
mov
sbb
cmpsb
mov
ret
inc
xchg
les
addr16
pop
mov
inc
sbb
add
jge
mov
cmp
add
outsb
push
jmp
fadds
nop
daa
cmp
adc
push
fwait
cmp
dec
inc
sub
in
and
aam
xchg
and
mov
leave
push
popf
iret
stc
mov
divb
dec
mov
jle
inc
xchg
xchg
push
xchg
sahf
out
cmp
cli
sbb
add
scas
jge
inc
leave
push
mov
je
out
add
jnp
or
add
popl
and
std
gs
dec
or
xor
fdivs
cld
dec
stos
dec
or
arpl
sub
pop
mov
dec
test
lock
jmp
out
sbb
sahf
arpl
inc
lods
loope
lods
mov
jbe
ljmp
mov
leave
ficomps
jecxz
pop
xchg
jne
and
inc
push
xor
icebp
or
jnp
das
push
mov
rolb
fldcw
inc
dec
push
pop
xor
es
test
fwait
pusha
xor
shrl
mov
add
xchg
mov
inc
adc
push
inc
divb
mov
ret
pushl
clc
mov
call
stos
cwtl
xchg
lahf
loope
add
mov
mov
push
lret
bound
insl
push
sarl
mov
and
fs
ficompl
xchg
jge
fidivl
mov
outsl
ja
xor
loop
push
xchg
sub
adc
push
fwait
out
add
cmp
sbb
jge
jmp
add
sub
into
je
sbb
mov
out
test
lods
cmc
js
lea
iret
xchg
or
insb
and
push
iret
sbbl
add
mov
pop
and
jnp
sub
mov
or
lods
sarb
lock
stc
rolb
adc
lret
push
xchg
icebp
aam
xor
cmc
jl
mov
pop
mov
jbe
cmp
add
int3
fdivrl
sbb
es
xchg
push
mov
rcll
mov
js
mov
add
and
push
ret
inc
imul
xchg
adc
ss
sti
mov
fwait
daa
fistps
rorl
das
sbb
xchg
clc
inc
fs
add
push
dec
fsubrl
ja
sbb
ret
scas
xor
mov
jae
popf
scas
cmp
push
dec
jmp
sub
sub
icebp
mov
gs
cld
imul
imul
iret
pop
and
daa
scas
out
into
dec
lcall
fsubrl
dec
sbb
cltd
cmpsl
pop
imul
lods
jns
cmpsb
clc
daa
push
movsl
xor
xchg
test
test
mov
xchg
cmpsl
int3
lea
mov
fcomi
sub
mov
in
cmp
insl
popf
shll
rcrb
mov
or
movsb
pop
aas
repnz
sbb
icebp
xchg
cmp
xlat
into
add
int3
jb
sub
in
nop
fisubrs
push
adc
aad
ja
stos
xor
test
clc
adc
lods
xor
fldl2t
fwait
sub
repnz
inc
out
jmp
arpl
lcall
add
inc
mov
arpl
insl
outsb
test
ret
mov
outsl
clc
cmp
cld
outsb
sbb
test
push
inc
push
sub
enter
xor
in
xor
jns
cmp
pop
dec
cmp
pushl
int3
mov
inc
sbb
jbe
inc
outsl
lcall
pop
shl
loop
inc
pop
cs
jmp
and
push
rclb
lds
mov
fsubl
mov
and
dec
sahf
ja
mov
leave
jne
and
and
inc
dec
pop
lods
pop
xchg
test
xchg
nop
scas
pop
ja
inc
test
mov
and
mov
aad
jns
push
xor
fnstcw
cwtl
bound
inc
or
sti
push
hlt
ret
ffreep
inc
xchg
mov
add
cmpsb
ja
fbstp
dec
dec
or
leave
adc
sub
jl
pop
aam
adc
mov
adcl
adc
inc
sbb
xchg
jg
in
sti
add
out
lahf
dec
inc
fs
scas
ret
cmpsl
ret
cmpsl
in
xchg
pop
and
xchg
in
inc
pop
mov
jge
imul
cs
and
xor
cli
or
xlat
mov
lods
jmp
and
popf
push
outsb
enter
lret
jbe
ret
imul
out
pop
jno
inc
or
mov
or
imul
jne
pop
arpl
loope
sub
les
xchg
sbb
imul
sub
fcomip
ds
int3
dec
inc
jns
lds
test
inc
out
add
xchg
fistpl
mov
out
mov
push
adc
pusha
add
xchg
dec
jg
add
and
inc
sar
imul
xlat
xchg
out
sahf
pusha
sbb
mov
adc
add
cmp
dec
and
dec
cmpsl
shll
jecxz
insb
sbb
insb
shll
rol
pop
cmp
clc
iret
fmul
dec
push
imul
dec
cmp
xlat
sub
ja
xchg
insl
or
sbb
jp
push
dec
mov
xor
mov
xchg
jg
and
xor
lock
sub
dec
in
sar
pop
cmp
push
pop
bound
out
xchg
hlt
mov
or
stos
xor
inc
sbb
rcrl
jge
xor
mov
test
movsb
rorl
dec
pop
sti
and
push
subb
pop
jecxz
xor
mov
jmp
push
int
inc
es
mov
dec
lods
ljmp
lock
mov
pop
leave
enter
repnz
stos
mov
je
and
cli
mov
adc
aam
mov
ds
int
pop
filds
cmpsb
popf
adc
dec
lods
inc
pop
int3
movsl
ss
scas
mov
or
jno
adc
test
mov
pop
mov
add
inc
dec
test
cmp
cli
nop
mov
loopne
in
std
imul
sub
dec
pop
jnp
ja
je
stos
insl
rolb
lock
inc
jae
xor
stos
inc
mov
stos
fstl
sbbl
xor
mov
into
sbb
imul
cwtl
adcl
sbb
mov
jle
xor
adc
addl
dec
insl
jnp
fiaddl
dec
popl
sub
xchg
sub
das
xor
pop
repnz
cltd
or
stc
nop
repnz
movsl
inc
push
xchg
pop
lods
mov
rol
shll
mov
rcrl
mov
cli
pop
scas
test
or
enter
xor
sub
aad
popa
xchg
mov
xchg
repz
jnp
xchg
enter
fs
xchg
gs
dec
mov
ljmp
cmp
xor
or
daa
gs
pop
repnz
mulb
and
adc
mov
in
xlat
and
or
lret
and
lods
lret
fimuls
xchg
inc
imul
lea
and
inc
cli
daa
jae
mov
nop
lret
xchg
nop
inc
pop
sti
sbb
inc
arpl
ljmp
das
mov
mov
mov
movsb
jno
bound
adcb
mov
daa
xor
inc
dec
std
or
xchg
lahf
and
inc
or
stos
test
jae
cs
mov
pop
xlat
cmp
xchg
add
fwait
fwait
loop
outsl
pop
call
xor
sub
dec
fisubl
sub
stos
add
sbb
and
sub
popf
fildll
cli
cmp
jo
shlb
mov
pop
enter
int
stos
out
outsb
cmp
stos
loope
in
icebp
or
or
adc
push
pop
nop
cmc
call
or
les
jge
jo
call
xchg
leave
push
dec
dec
int
stc
out
fwait
xchg
fistl
imull
mov
sub
cmp
add
mov
test
lret
jbe
popf
xchg
sub
mov
cmp
popf
aas
dec
dec
aaa
loopne
stc
cmp
xchg
add
out
or
jmp
cmp
cs
xchg
sub
jmp
push
fstl
lea
fcoms
mov
jae
ds
jl
in
cli
pop
hlt
jmp
and
xchg
cwtl
pusha
jp
lahf
sbb
ljmp
rolb
pop
movsb
mov
int3
pop
loop
dec
enter
dec
jns
into
fdiv
inc
add
test
je
mov
adc
sub
pop
frstor
in
add
lret
out
add
mov
ficompl
add
pop
es
mov
movsl
int
test
ret
dec
fiaddl
aad
or
fsts
aad
pop
pop
loop
dec
fwait
daa
mov
inc
adc
es
pop
mov
dec
mov
ljmp
pop
jnp
xchg
nop
dec
pop
and
add
aaa
xor
mov
pop
mov
fstps
fucom
cmp
cli
test
sub
rcrl
rcr
add
push
loopne
dec
xor
loope
xchg
mov
enter
dec
or
and
push
push
or
test
dec
lods
mov
push
in
daa
jbe
into
scas
mov
mov
mov
mov
xchg
adc
push
test
ret
rol
ficoml
mov
and
je
inc
enter
fs
and
cmc
pop
scas
pop
sahf
loopne
adc
jno
mov
sbb
add
into
mov
in
int3
fimuls
and
push
imul
inc
popa
dec
scas
loopne
pop
xor
mov
pop
push
add
cld
inc
xchg
imul
cmpsl
and
mov
lds
aam
rep
sti
xchg
push
adc
jbe
jp
jmp
jecxz
mov
scas
setnp
xchg
lods
pop
lea
mov
fidivs
lds
aaa
int
and
shrb
mov
push
jae
jle
insl
adc
imul
dec
imul
imul
cmc
dec
push
lret
cmp
loope
xchg
fcoms
jp
mov
jl
mov
add
add
jle
mov
loope
incl
dec
test
in
jle
shrb
sub
push
bnd
sub
mov
arpl
out
les
adc
adc
add
outsb
and
sahf
pop
push
mov
cmp
out
cwtl
add
inc
adc
push
jno
call
mov
repnz
outsl
movsl
xchg
sbb
add
mov
push
cmpsl
mov
test
xor
pop
mov
xchg
sub
out
add
xor
adc
mov
loope
stc
sub
cmp
and
xchg
popa
or
adc
xchg
mov
fcompl
dec
fmull
mov
loop
or
repz
fidivl
jns
mov
dec
test
aaa
or
insb
mov
scas
push
jg
loope
cmp
cltd
insb
ret
mov
add
and
pusha
mov
jae
aas
jae
inc
mov
lahf
dec
add
fmuls
fistps
cmpsl
mov
jb
leave
push
lods
pop
imul
test
in
in
repz
fildl
mov
movsb
aaa
xchg
call
inc
or
rorb
aad
andl
lods
js
or
jecxz
jo
jnp
fwait
push
fimuls
stos
aam
xchg
decl
test
pushf
fmul
and
jnp
aaa
je
imul
shlb
lods
mov
shr
test
mov
arpl
cmpsb
std
cmc
mov
adc
jno
fcoml
xor
jmp
repz
push
jae
shrl
pop
aam
js
add
ds
into
pop
imul
insl
loopne
ljmp
xchg
cmp
movb
cmp
mov
inc
sbb
popa
je
or
jno
in
or
popa
and
xchg
sub
add
outsl
out
or
or
adc
pop
dec
cmp
mov
dec
es
sbb
testb
mov
stc
lea
sub
popa
std
mov
dec
fwait
mov
adc
ficoml
jae
inc
add
fisubrl
lods
jmp
add
popf
sub
pop
pop
scas
mov
lods
int
xor
sarl
push
rorl
cltd
pusha
lods
xchg
out
push
lahf
das
sub
stc
xchg
popa
stc
sbb
and
test
sub
test
dec
jnp
movsb
stos
data16
int3
cmp
jp
icebp
decb
and
cld
xchg
bound
loopne
sub
adc
sub
push
shll
mov
hlt
decl
in
jg
imul
fnsave
push
mov
aam
sbb
add
fiadds
cmpsb
push
lock
inc
add
lahf
xor
int
in
subl
push
int
cmp
repz
sub
xchg
insl
mov
lds
push
ret
ror
js
cmp
pop
bound
mov
insb
jo
sub
xchg
cmp
ljmp
mov
mov
lock
test
mov
push
dec
mov
movsb
xchg
mov
ja
dec
fiaddl
xchg
pop
sub
imul
lea
ficompl
xchg
sub
xchg
sbb
jp
mov
insl
cli
lds
push
sub
sbbl
js
movsb
inc
inc
mov
mov
push
je
xor
mov
mov
add
in
call
push
out
popl
dec
xlat
data16
xor
lds
jecxz
jne
or
mov
data16
aaa
push
pop
mov
cltd
mov
cld
in
sub
lcall
rorl
xadd
shr
and
stos
insb
xchg
stos
addl
or
jg
inc
lahf
cmp
lea
in
jl
rcr
sbb
lcall
xchg
pop
pop
ljmp
testl
cmp
aaa
sub
push
data16
mov
cmpsl
in
stos
clc
sahf
xchg
inc
loopne
sahf
movsl
cmp
xor
test
outsl
or
xor
xor
mov
or
mov
mov
or
push
add
push
or
add
xchg
mov
jle
adc
or
adc
add
and
and
popa
ds
rcr
int
dec
call
jnp
test
shr
enter
and
aas
cli
fisubrs
add
xchg
xchg
jne
jcxz
dec
sub
clc
loop
dec
aaa
popa
jo
cmp
pop
adc
rorb
iret
and
outsb
dec
inc
orl
sbb
push
pop
ja
sub
pop
pop
lods
dec
pop
aam
lds
push
push
mov
mov
ror
pop
mov
ret
aaa
movsb
into
shrl
orl
dec
push
cltd
xchg
xchg
loop
sub
sbb
inc
add
sbb
pop
xor
pop
cmp
push
mov
aaa
jo
dec
lea
adc
scas
cmp
pop
cmp
test
mov
dec
inc
push
xchg
dec
aas
lret
jae
aas
dec
movsb
jecxz
cli
and
add
dec
mov
cld
in
and
and
arpl
mov
in
clc
pusha
push
pop
cmpsb
xlat
pop
je
pop
shll
inc
mov
hlt
cmp
mov
xor
cltd
popa
iret
int3
jo
pusha
mov
aad
jmp
out
adc
inc
mov
mov
push
xor
cmp
sbb
sub
aam
test
sbb
jl
fdivrl
arpl
pop
aad
repz
mov
pop
mov
sub
lods
or
cmc
lods
sub
ljmp
rolb
jp
in
pop
xor
fld
mov
shr
mov
roll
mov
lahf
xor
cltd
fwait
int
and
cmc
sbb
ljmp
hlt
dec
mov
or
test
je
mov
xchg
icebp
jl
sbb
pusha
add
cltd
insl
adc
fbstp
aam
subb
lods
inc
adc
or
das
lcall
rcrb
fwait
xchg
jge
pop
add
pop
outsl
pusha
dec
aaa
pmaxub
scas
aaa
inc
xorb
mov
sahf
dec
and
in
xchg
mov
into
lahf
in
jge
ja
sbb
push
mov
pop
mov
xchg
jmp
push
loopne
pusha
push
and
or
imul
mov
mov
xor
add
xor
mov
enter
add
add
stos
test
jne
hlt
xchg
or
adc
cli
subl
rclb
dec
sub
push
xchg
popf
dec
aaa
fnstenv
xchg
lock
cmp
sbb
mov
addr16
js
and
push
inc
icebp
xor
clc
mov
pop
xchg
sbb
lods
dec
popa
aaa
int
in
xor
sahf
or
stos
fsts
loop
jae
mov
inc
xchg
inc
mov
mov
out
cmc
stos
xor
sbb
or
sarb
rorb
addr16
cmpsl
adcb
add
jbe
out
shlb
out
jge
inc
ret
dec
ficoms
mov
lea
xor
mov
pop
xchg
add
push
and
mov
adc
xchg
cmp
out
pushf
lcall
cmc
nop
shrl
iret
mov
add
inc
stos
call
sub
inc
in
cmc
movsl
and
jne
insb
jge
lods
inc
mov
push
mov
loope
inc
fcomp
mov
push
inc
pushf
scas
cmp
in
inc
fcomps
divl
adc
bound
je
call
shl
adc
subb
shlb
in
fsts
and
popa
negb
arpl
data16
jae
sbb
fucomp
cmpsl
jp
fiaddl
fidivl
push
or
jecxz
ja
ljmp
adc
in
lods
mov
mulb
xor
adc
push
pop
test
loop
mov
lcall
arpl
add
dec
fildl
inc
mov
jns
mov
ds
cmp
jae
lods
outsl
jle
adc
dec
and
addr16
or
xchg
mov
jp
shl
popa
inc
pop
cmpsl
xchg
cmp
in
rolb
mov
mov
pushf
add
pop
xor
outsl
ss
test
popf
lods
xchg
movsb
inc
cmc
js
cmp
xchg
ret
scas
dec
dec
pusha
and
lock
dec
push
loop
pop
dec
adc
testl
jle
or
addr16
mov
pop
std
mov
mov
adc
cmp
popf
insl
cs
xor
cmc
sbb
les
pushw
les
mov
xor
in
scas
pop
scas
call
jno
xchg
mov
inc
push
inc
mov
out
aam
pusha
popf
add
outsl
pushf
data16
leave
ljmp
daa
sbb
movsl
ljmp
pushf
icebp
jmp
mov
sub
std
enter
pop
aaa
sub
in
dec
xchg
cmp
push
ljmp
cmp
adc
movsb
mov
test
cli
das
lock
es
arpl
fldl
insl
idivb
add
or
int
cmpsl
lods
sti
mov
data16
fcmovnb
push
inc
jb
lock
popf
sahf
mov
in
jbe
push
cmpsb
pop
xor
inc
dec
xlat
aam
pusha
ljmp
inc
mov
mov
cwtl
mov
and
mov
call
mov
lcall
pop
roll
mov
sarb
push
mov
jno
mov
loop
call
cmp
jb
pusha
shlb
movsb
fidivs
shr
adc
push
imul
iret
jb
add
icebp
sbb
sub
and
push
les
push
xor
mov
stos
and
in
cmc
mov
adc
inc
push
enter
clc
xchg
jecxz
mov
sti
push
xor
fsubl
test
xchg
xor
sarb
inc
or
cmp
push
push
xchg
mov
sbb
mov
mov
inc
push
sbb
add
jge
data16
mov
cmp
inc
call
jno
push
dec
out
push
xchg
cli
push
jo
cltd
mov
or
xor
insb
inc
shrl
inc
xchg
hlt
mov
cmp
xchg
or
jecxz
mov
or
rcl
stos
jnp
and
jb
dec
inc
cltd
xor
xor
xor
inc
insl
mov
nop
jns
or
inc
movsb
call
push
mov
push
outsb
jns
mov
pop
aas
push
add
out
in
sahf
lds
and
fiadds
jbe
int
xor
add
insb
push
cmp
jb
dec
inc
dec
sbb
cwtl
int
aas
nop
xor
push
pop
out
fmulp
xchg
sub
mov
mov
mov
adc
and
je
xor
dec
cmp
fidivrl
pop
aad
rcrl
sub
sbb
mov
ljmp
mov
inc
movsb
ja
jmp
enter
mov
or
mov
mov
dec
pop
adcl
repz
stc
push
ljmp
adc
adc
mov
fildl
scas
rcrb
loope
mov
out
jmp
mov
pop
mov
fxch
out
cmp
jp
movsb
and
pop
rorb
cmpsl
shr
mov
rolb
sbb
push
cltd
jbe
in
ret
arpl
out
fwait
inc
xor
insl
out
stos
inc
hlt
mov
aas
out
mov
negl
sub
xchg
in
jb
mov
test
cmp
leave
pushf
ljmp
jl
dec
insb
mul
lods
jo
int
push
mov
mov
jns
mov
mov
rolb
call
outsb
adc
sbbb
cmc
mov
dec
sub
xchg
sub
and
mov
out
popf
aaa
fwait
xchg
xchg
in
push
adc
call
sbb
dec
andl
sbb
dec
mov
sbb
lds
orb
pop
pusha
rcl
int
pop
inc
push
mov
aad
loope,pt
sahf
mov
xor
add
push
mov
aad
push
or
push
adc
inc
inc
push
aas
call
mov
xor
movsb
cmp
movsl
dec
rclb
jb
sub
lods
and
push
jp
insb
in
bnd
cmp
push
sahf
mov
sub
push
add
mov
js
xchg
mov
in
test
ja
out
test
or
lea
push
sbb
and
bound
hlt
aas
xchg
insb
mov
rclb
sarl
cmp
out
jp
ss
or
cld
push
pop
sub
xlat
repz
int3
inc
es
inc
mov
xchg
loop
into
pop
mov
mov
jle
loopne
inc
fidivrs
add
adcb
imul
push
je
dec
cwtl
test
lds
and
push
mov
mov
jl
add
jg
pusha
adc
nop
clc
mov
sub
nop
adc
nop
xchg
je
jmp
cltd
pop
popf
icebp
cmpsb
jge
orl
mov
clc
mov
cwtl
inc
fs
daa
and
xor
xchg
jg
fwait
call
ret
jge
xor
xchg
andb
rcr
mov
imul
mov
xchg
xchg
int
js
and
repz
ret
jae
adc
nop
xor
fdivs
loop
scas
fstps
popa
movsb
sub
sbb
add
and
out
test
addr16
xchg
sahf
clc
and
out
sbb
jl
shll
jns
stos
mov
jge
aas
pop
fistl
lea
sub
pop
icebp
add
sub
cmp
pop
jcxz
out
push
loope
xor
dec
loopne
mov
addr16
push
in
sub
sub
cltd
shll
das
jge
popa
xchg
cltd
and
xor
inc
inc
push
push
dec
lahf
or
inc
jecxz
dec
nopl
jge
pushf
loope
test
adc
outsl
dec
sub
xchg
xor
popa
clc
cwtl
pop
mov
adc
out
popl
jnp
xchg
and
aaa
ret
dec
xor
enter
sbb
lret
mov
int3
jg
jmp
jle
inc
and
add
idivb
cmp
cmp
dec
pushf
push
addr16
add
ss
push
cmp
inc
outsl
es
iret
pop
cmp
push
lods
aam
sbb
dec
jecxz
xchg
rol
mov
dec
jnp
cmp
or
mov
out
test
jg
icebp
outsb
pop
lahf
xchg
mov
or
push
rclb
mov
test
push
in
jle
cld
xchg
jae
lds
sahf
xor
jle
cmp
jno
cli
xchg
push
movsb
int3
arpl
jl
adc
and
enter
xchg
sub
test
push
sahf
sarb
sti
popa
dec
in
xor
mov
js
push
insb
jge
adc
sub
sbb
sti
xchg
xlat
pop
in
addl
pop
sahf
push
faddl
mov
fidivrl
xchg
test
loop
movsb
shrl
shlb
dec
or
div
mov
clc
sahf
sub
add
mov
cwtl
stc
push
lret
sub
sbbb
jbe
mull
cmpsl
ds
mov
aad
fwait
int
or
xor
loop
movsb
cmp
stc
out
ret
inc
pshufw
push
inc
cmpsl
jb
sub
imul
add
jb
push
and
frstor
mov
mov
mov
pop
in
nop
pushf
cmp
call
mov
pushf
pop
pushf
lea
cmc
pop
repnz
xor
push
test
dec
inc
je
rcl
mov
mov
clc
fdivl
mov
push
cmp
xor
sbb
cli
dec
test
or
or
mov
ficoml
mov
xor
int3
jecxz
bound
dec
xor
xchg
shll
testb
jo
or
cmpsl
jecxz
pop
test
push
rorb
push
je
popa
mov
jg
add
mov
xchg
test
rcr
inc
sub
inc
xlat
lret
jnp
mov
ret
jbe
mov
cmpsl
lods
lret
dec
pop
xchg
jnp
call
jo
jnp
fwait
and
push
sti
push
or
sub
int3
pop
ret
adc
jno
mov
loop
movsl
mov
pusha
in
inc
mov
bound
daa
dec
dec
fldenv
add
ljmp
inc
std
repz
cld
movsb
inc
mov
lods
repnz
arpl
add
lock
inc
jl
std
aad
ja
jmp
sbb
repnz
or
mov
dec
cmc
and
int
inc
push
in
push
orl
cmc
enter
sub
xchg
adcl
mov
dec
xor
repnz
les
imul
es
stos
je
dec
xchg
mov
clc
mov
int3
sub
push
enter
das
cltd
jae
out
jo
xor
inc
add
xor
fsubr
xor
cltd
jmp
fists
das
inc
stos
xor
jbe
int3
pop
or
andb
daa
test
cmp
fadds
lret
inc
cmp
fwait
push
leave
shl
imul
mov
xor
fmuls
push
sbb
mov
js
mov
lds
repz
cld
xor
xchg
add
lcall
or
scas
lcall
ficoml
fsubs
push
jne
jge
jg
cli
pushf
mov
ret
pushl
outsb
inc
sbb
sbb
je
push
out
popf
hlt
push
jp
push
pop
jno
leave
cmpsb
mov
subl
jle
fistps
pop
mov
or
notl
inc
jnp
movsb
jns
movsb
dec
sbbb
or
xor
add
cmp
push
dec
push
mov
pop
lods
cmp
negb
and
lds
scas
ret
movsb
cmp
mov
dec
xor
jecxz
adc
shll
and
xchg
outsb
les
into
insb
push
and
mov
lret
sub
jnp
mov
les
adc
pop
jns
mov
aaa
pop
icebp
mov
jle
iret
stos
pop
cmp
pop
int3
pop
mov
pop
out
loop
rcrl
jno
ja
xlat
inc
push
mov
pop
add
add
out
inc
test
xor
mov
jmp
lea
ror
test
cmpsl
cmc
cs
cmpsl
xlat
or
or
jmp
shrl
cwtl
imul
scas
rcr
pop
pop
aaa
push
or
dec
mov
in
aas
sub
xchg
shlb
or
in
lret
test
repz
mov
repnz
mov
je
add
test
cmp
inc
pop
sti
xchg
jl
mov
mov
fnstsw
cmpsb
pop
mov
icebp
cmp
mov
push
in
daa
call
mov
sbb
xchg
mov
test
inc
dec
loopne
cmp
sbbl
add
cmp
pop
add
mov
test
ja
ficompl
stos
ret
jb
into
sub
and
ja
aas
dec
ds
lret
inc
roll
inc
xlat
out
pop
mov
or
dec
ss
jge
fmull
mov
jbe
shl
popf
addr16
sti
xchg
push
mov
cmc
sbb
push
jecxz
fcmovnu
cmp
push
shll
xchg
xchg
ror
mov
mov
push
push
mov
add
sub
lods
stc
xchg
push
outsl
nop
adc
dec
lahf
divl
mov
test
mov
inc
xchg
shr
repnz
and
cmp
dec
loop
in
mov
sarl
mov
adc
out
movsb
mov
mov
sub
lods
mov
aam
andl
loop
adc
xor
adc
std
or
js
push
mov
push
and
jmp
inc
sub
scas
ret
out
lds
mov
and
adc
movsl
cmp
cmpsl
out
in
sbb
pop
pop
imul
pop
or
cmp
sub
mov
cltd
aas
lret
out
test
xchg
adc
inc
lds
mov
sub
hlt
pusha
aaa
mov
inc
mov
sbb
cmp
push
xchg
mov
push
jnp
fnstcw
ret
mov
sbb
ljmp
sub
pop
sub
jge
dec
mov
ficomps
dec
jb
mov
cmp
lret
je
out
jo
xchg
pushf
test
cmovo
icebp
outsb
xor
push
mov
xchg
jmp
push
fnsave
mov
pop
scas
pop
pushf
push
out
maskmovq
divl
cwtl
xor
sti
mov
enter
push
scas
shrb
arpl
dec
filds
and
mov
movsb
dec
cmp
dec
add
icebp
xchg
adc
fistpl
gs
cmp
ds
fstl
push
test
cmpsl
leave
xchg
pop
jecxz
rcr
mov
adcb
jp
adc
mov
insl
and
mov
xchg
mov
mov
aaa
and
sbbb
mov
jo
sbb
add
imul
cmpsb
cmp
mov
add
es
fbstp
dec
pop
cld
xor
stc
ret
sbb
popf
xor
clc
jb
and
jnp
xor
sbb
scas
add
cltd
push
in
lret
out
cli
sub
xlat
push
scas
out
ret
and
dec
cmpsb
stos
hlt
sbb
and
sub
sub
dec
std
inc
jl
lcallw
push
out
fwait
sahf
scas
mov
outsl
add
das
or
adc
xor
decb
mov
cli
cmp
add
xchg
sbbl
mov
sbb
push
insb
ret
pop
mov
pop
mov
dec
push
mov
stos
sbbb
ljmp
hlt
mov
in
jmp
pusha
xorb
iret
mov
sbbl
or
inc
xchg
ret
jmp
or
pop
xor
int3
testl
pushf
inc
push
arpl
js
mov
fs
jg
and
ds
push
test
xchg
sahf
scas
testb
pop
int
sbb
rcrb
pushf
out
xchg
adc
movsl
adc
rorb
or
and
sub
xor
xchg
enter
shlb
int
loopne
fs
pushf
xor
push
das
lret
mov
insb
mov
insl
mov
sbb
je
jns
addr16
pop
sti
pop
mov
icebp
xchg
dec
xor
or
movsb
fmull
das
xchg
and
lret
xor
loop
enter
std
aam
dec
dec
dec
mov
imul
mov
xchg
adc
dec
add
sbb
jg
xor
ret
repnz
mov
out
xor
pop
je
std
and
adc
dec
xor
cmpsb
cmp
ret
mov
xchg
outsl
in
and
cwtl
aaa
hlt
add
arpl
push
push
xlat
repz
inc
rcr
lods
ds
cmc
push
mov
sub
inc
inc
shll
pop
jno
xchg
mov
aam
std
js
loopne
gs
jl
and
sub
add
call
and
mov
int3
mov
pop
rorb
push
or
jecxz
mov
mov
adcb
pop
push
and
jno
fs
pop
in
mov
mov
or
mov
or
sub
sub
das
push
xor
sbb
pop
aam
decl
mov
pop
push
out
sbb
cmpsl
scas
daa
outsb
stc
jb
cs
dec
cmp
dec
and
shl
sub
push
or
jecxz
call
cmp
mov
cmp
iret
imul
push
dec
and
fsubrl
popa
jge
cld
adc
or
sub
dec
loopne
adc
sub
addr16
fistpl
mov
sbb
xor
cmp
jne
inc
jecxz
sub
inc
inc
je
sub
inc
fsubs
and
push
cli
outsl
cld
mull
pusha
sbb
test
lcall
or
loopne
push
xchg
bndcn
fmull
or
rcl
or
mov
cmpsb
cmp
inc
fidivs
xchg
xchg
add
cmp
jne
xchg
add
mov
xchg
xor
pop
adc
aam
movsl
cmp
push
lods
enter
loopne
arpl
jb
dec
mov
popf
jg
nop
push
push
movsl
jb
aad
sti
shll
add
mov
test
push
pop
mov
cmpsl
pop
inc
sbb
lret
cld
or
int3
out
inc
enter
test
dec
js
lods
arpl
data16
mov
mov
scas
adcb
and
jb
faddl
jecxz
lcall
and
insb
out
jnp
orl
int3
ljmp
pusha
lds
mov
jns
test
push
push
stos
add
leave
pop
mov
mov
pop
ljmp
testl
filds
adc
xor
arpl
pop
mov
cld
mov
mov
or
insl
sarb
daa
push
mov
mov
in
mov
add
mov
fdiv
ret
add
pop
fcomps
fdivl
mov
jb
adc
stos
cmpsb
mov
cli
int3
bound
rorb
or
nop
mov
pop
adc
insb
lds
orl
xor
inc
or
dec
push
adc
pusha
ret
dec
cmp
sti
add
dec
stos
inc
dec
pop
push
loop
aas
cld
xchg
xchg
sub
jecxz
mov
dec
cmp
cmpsl
sbb
mov
loopne
repz
ds
inc
xchg
outsb
std
movsb
xor
and
leave
js
sti
mov
dec
out
fidivrl
pop
jb
xchg
jmp
inc
sub
addl
pop
cmp
xchg
xchg
outsl
and
pusha
jp
loopne
inc
mov
hlt
ret
fs
rcl
cmc
add
mov
inc
cmp
pop
jg
jnp
cltd
pop
pop
jbe
cltd
or
dec
add
pop
fisttpl
mov
and
and
xlat
das
insb
out
insb
adc
sbb
test
ret
leave
or
dec
test
or
and
and
add
shlb
out
push
xchg
sbb
aaa
int
pop
jg
add
les
adc
pop
je
push
pop
movsl
xor
pop
jbe
in
mov
xchg
cmc
int3
sub
mov
scas
xchg
inc
mov
push
int
push
lock
cmc
inc
mov
outsl
imul
jl
dec
inc
decb
shrl
dec
out
rcr
adc
into
cmp
jg
jl
and
js
dec
cmp
imul
aas
xorb
loop
nop
clc
mov
pushf
mov
lcall
adc
add
cltd
push
sbb
andb
mov
loope
push
fdivrl
dec
lods
push
aam
lea
pop
sbb
xor
push
add
jb
cmp
xchg
sub
add
aas
mull
mov
sahf
xchg
std
and
stos
sub
push
jbe
add
outsb
cli
loop
pop
int3
or
cmp
inc
repz
flds
and
dec
xchg
pop
stos
repz
stos
lret
fidivs
outsb
sbb
test
pop
mov
arpl
cld
xchg
or
mov
sub
std
sarl
ss
or
mov
pop
mov
aam
cmp
cld
into
rorb
mov
ret
sub
sub
xchg
xchg
aam
inc
idivb
pop
fstps
dec
scas
sub
pop
xlat
push
or
cmp
ds
stc
push
pop
mov
pop
xchg
loop
shl
and
mov
and
xchg
es
fildl
call
sbb
int3
fidivl
add
sub
out
ljmp
xchg
outsb
enter
lcall
clc
std
or
mov
push
mov
mov
xor
jg
and
cmp
cmp
or
mov
mov
adc
xor
mov
aaa
aam
mov
mov
popf
inc
mov
sbb
cmp
add
inc
rol
mov
mov
inc
clc
imul
mov
mov
pop
dec
and
pushf
xor
sbb
fwait
and
xchg
fimuls
call
inc
stc
test
fs
mov
jge
mov
add
subb
testl
or
fisttps
lea
xchg
xor
cld
fwait
cmpsl
sub
xchg
out
xorb
imul
mov
negl
cwtl
mov
dec
shlb
mov
dec
lds
in
pop
fsubs
pop
ret
data16
cmp
or
xchg
cmp
mulb
mov
pop
jae
dec
lret
xlat
je
cmp
and
pop
cmp
in
cltd
jo
xor
cmp
mov
add
ret
sbb
stos
test
inc
xor
nop
sub
repnz
inc
mov
rcll
push
and
mov
pushf
xchg
push
aam
cwtl
dec
mov
cltd
sub
mov
lods
jmp
xor
sub
arpl
inc
jle
andb
fs
push
and
push
es
cmpsl
aad
or
jns
add
filds
imul
lods
add
sbb
mov
ljmp
adc
adc
nop
mov
sbb
mov
cmp
cmp
loope
les
pop
movsl
jo
sub
mov
add
bndldx
add
jo
aam
and
pop
push
imul
xchg
sbbl
cli
cmp
pop
loope
les
jmp
int
andb
fldl
cmp
popf
outsl
add
sub
push
test
push
fcomp
inc
pop
imul
push
stc
paddsb
lock
add
sub
or
push
xchg
jle
lret
gs
jg
call
stos
jb
out
jae
clc
fs
pop
imul
lds
imul
es
pushf
sub
cmp
sbb
dec
mov
dec
mov
jns
stos
shrl
xchg
sub
or
push
mov
mov
jns
pushf
iret
jo
jbe
pop
icebp
testb
das
push
jnp
aam
outsl
les
es
jmp
dec
orb
rorl
add
xchg
sub
add
in
jg
sbb
mov
jle
mov
loop
sbbb
shr
movsl
repnz
pop
and
sbb
add
jae
mov
push
stc
pop
fisttps
push
push
xor
div
loope
jmp
out
into
test
mov
ljmp
push
test
inc
lret
in
push
adc
dec
ljmp
dec
inc
sub
mov
fildl
nop
add
insb
cmc
mul
xchg
adc
jbe
int3
jae
mov
inc
lcall
mov
pop
sti
or
arpl
fistpl
pop
push
and
mov
add
aam
aas
or
push
or
movsb
imul
lods
pop
iret
lret
ds
push
and
lea
mov
outsb
popf
add
test
cmp
inc
xchg
out
pop
dec
lret
clc
xchg
jle
sbb
push
aas
pop
outsl
adc
lds
xchg
mov
and
add
pop
sbb
jns
mov
add
jns
jo
insb
xchg
mov
repz
pop
lahf
hlt
cmovge
mov
stc
nop
aas
je
shl
dec
mov
mov
add
inc
xchg
adc
add
push
cmc
popa
cmpsl
pop
neg
in
clc
mov
jle
adc
mov
dec
clc
pop
fwait
lods
cmp
jecxz
incb
fists
cmpsw
jp
addr16
xchg
call
xor
aas
mov
mov
sub
addl
sub
adc
adc
fs
scas
jb
xchg
xor
xor
les
jl
lret
test
mov
pop
jne
mov
pop
scas
xor
jb
lock
add
and
and
inc
hlt
movsb
inc
arpl
mov
addr16
iret
outsb
add
hlt
sbb
test
test
data16
xlat
ss
xor
mov
nop
and
add
sbb
in
fdivs
dec
loopne
lret
dec
mov
mov
insb
ret
ficoms
scas
les
mov
sub
es
test
scas
jne
xchg
pop
test
hlt
scas
inc
gs
out
xchg
push
jmp
fimull
lods
and
cmp
loopne
lods
mov
jo
les
cmp
fwait
pop
in
sub
scas
roll
mov
push
cwtl
sti
xchg
js
inc
sbb
jg
fs
ds
ds
fadd
aam
add
andb
sbb
xchg
stos
and
sbb
sub
cmp
push
sub
push
jne
jg
and
and
cmpsb
push
arpl
mov
add
pop
adc
stc
lret
out
das
arpl
push
nop
add
mov
mov
mov
add
shll
or
rcl
push
mov
jl
inc
pop
cmc
cmpsb
stc
jecxz
ret
loopne
pop
fisttpll
sbb
ss
je
pop
xor
inc
push
loop
in
fildl
test
aam
adc
pop
dec
loop
insl
inc
frstor
ret
int
ljmp
sub
xchg
jp
dec
dec
aad
pop
mov
xchg
sub
sti
imul
sbb
push
adc
lock
jns
sub
mov
adc
in
pop
inc
add
mov
pop
or
jne
pmulhuw
jecxz
push
ret
jmp
nop
stc
xor
stos
jb
sbb
push
out
test
ljmp
idivb
les
negb
pop
aas
popf
mov
insl
pop
mov
clc
inc
fdivl
cmp
add
outsl
xor
inc
jecxz
mov
imul
push
jmp
orl
sahf
jl
lret
sbb
nop
push
cmp
lcall
pop
loopne
cmp
jecxz
out
adc
jo
inc
adc
roll
pop
outsl
rcrb
sbb
fsubrs
fisubrs
fs
fidivrl
fistl
or
outsb
jne
dec
outsb
test
lret
inc
push
xchg
repz
cmp
cmp
jae
iret
or
stos
mov
push
notl
mov
xchg
sti
xor
addr16
subb
lret
xchg
and
pop
shll
mov
mov
movsb
test
ret
xchg
mov
adc
adcl
add
cltd
cmp
adc
pushf
and
xor
dec
neg
scas
call
iret
cli
sbb
push
pop
jb
adcb
or
mov
out
xor
xchg
add
jg
mov
push
mov
nop
ret
mov
sahf
loopne
push
inc
push
es
iret
adc
mov
mov
insl
sbb
jne
leave
fldcw
jle
or
or
test
add
outsb
jbe
xchg
cmp
lock
jmp
jecxz
rcrb
idivl
dec
vminsd
jge
and
xor
and
xchg
pop
xlat
cmp
aas
mov
xchg
mov
in
xor
pushl
sub
in
rorb
and
xchg
dec
cmp
lcall
dec
stc
popf
loope
es
cld
add
adc
and
into
adc
js
bswap
mov
mov
push
ffreep
aaa
arpl
aaa
xorl
mov
mov
mov
inc
aad
sub
addr16
int
jo
pop
push
cmp
aas
jge
dec
cmpsb
mov
xor
sti
in
icebp
sub
shrl
in
mov
ficomps
scas
fs
leave
pop
arpl
lds
addl
in
aaa
dec
cmp
popf
ror
push
pop
out
cmp
push
test
mov
outsl
daa
push
loop
popf
dec
daa
fnstenv
adcb
movsb
add
push
xor
mov
xchg
jnp
and
incb
repz
lcall
jecxz
js
and
inc
cmpsl
dec
fdivl
push
sub
fs
cmp
test
bound
dec
pushf
lret
je
nop
mov
push
mov
adc
js
push
clc
adc
cmp
dec
scas
fwait
pusha
push
in
cmp
xor
jg
ret
lds
cwtl
stos
aas
mov
pop
push
outsb
jle
dec
pop
imulb
fs
bound
xor
xchg
mov
orl
cmp
jl
nop
or
cmpsl
out
push
fnstenv
pusha
xor
adc
fsubr
lods
add
sbb
xchg
jl
pop
inc
sbb
lret
fidivl
and
call
xor
aam
data16
and
stc
or
lods
pop
sub
or
daa
leave
sbb
xor
daa
inc
aam
push
inc
call
cltd
std
out
push
push
jne
adc
movsl
sbb
pop
repz
mov
jne
mov
xchg
mov
jo
aas
cmp
adc
xchg
xchg
jb
gs
pop
dec
pop
inc
es
and
xchg
andb
rcl
gs
sub
cmpsl
stc
push
jo
enter
jle
in
and
test
dec
adc
sbb
pop
fldcw
sbb
xor
iret
jns
das
inc
into
gs
inc
pop
in
mov
mov
jp
xor
sahf
xchg
pop
xor
push
imul
sbbl
repnz
adcb
xchg
pop
pop
hlt
jg
jecxz
jne
pop
cmc
mov
subb
stos
xchg
pop
lcall
jmp
mov
out
cmpsb
pop
cmp
inc
cmc
iret
je
je
sbb
dec
mov
mov
cwtl
mov
loopne
out
ja
loope
jg
in
inc
adc
dec
aam
test
lods
mov
jb
push
cmp
in
in
repnz
cs
jns
imul
lock
std
mov
ds
cmp
mov
nop
or
adc
fs
or
mov
add
test
leave
mov
cmp
int3
inc
xlat
fdivrs
leave
or
int3
jb
fs
subb
or
pop
inc
mov
mov
out
push
sbb
add
jecxz
or
jge
dec
pop
add
dec
fs
out
lods
sub
aaa
pop
lds
filds
push
add
stc
sbb
mov
inc
push
shl
outsb
clc
rclb
mov
ljmp
xorb
repnz
pop
mov
pop
ret
mov
add
clc
stc
filds
adc
xchg
fsubl
stos
and
lds
mov
aad
iret
aad
in
jnp
dec
test
ret
jo
shlb
xchg
test
inc
ljmp
xchg
or
out
jnp,pn
pop
iret
push
xlat
cld
imul
int
pop
pop
sbb
xor
add
push
fbstp
push
stos
mov
fdivl
xchg
push
add
xchg
xor
xor
pop
ja
outsb
lods
sbb
pusha
les
and
mov
test
fidivl
xorb
stos
jl
mov
popf
xchg
jge
mov
xor
std
or
adc
jne
sub
inc
xlat
test
jno
testb
js
fists
xlat
jae
mov
xchg
dec
aam
push
push
xchg
jge
cld
lods
fdivl
sbb
or
mov
pop
stos
pop
xchg
add
and
and
lahf
lret
cmpsl
adc
cmpsl
and
sbb
outsb
fadds
popf
out
xchg
xchg
es
pop
cwtl
test
hlt
mov
orl
pushf
test
test
jns
push
mov
add
iret
sbb
and
ret
call
or
mov
rclb
xor
incb
aas
scas
addr16
xchg
or
mov
or
scas
add
jl
fcompl
je
loope
lret
sub
sti
xchg
in
and
aam
push
mov
faddl
movsb
in
std
movsb
cmp
and
addl
jb
lock
mov
cmp
rcrb
cmp
loope
and
jge
sbb
jnp
nop
pop
push
cltd
dec
loope
aaa
mov
mov
mov
into
imul
sub
shrb
jae
push
mov
mov
pop
push
mov
mov
into
std
clc
js
inc
sbb
lea
mov
lea
lcall
stos
cmpl
jnp
xchg
andb
cmp
js
dec
fdiv
jg
pop
mov
push
push
pop
push
rcr
mov
jl
lret
bound
jmp
or
int
jp
xor
pop
sbb
cli
sub
jge
rcr
shrl
cmp
ret
je
lods
sbbb
in
inc
push
adc
dec
sbb
sub
and
cmp
inc
arpl
sbb
ss
xor
fdiv
mov
sbb
enter
cs
push
lcall
aad
sti
jge
lahf
hlt
dec
pop
stc
movsb
jnp
mov
scas
inc
push
inc
js
mov
or
movsl
rcrl
sbb
pop
mov
outsb
xchg
jnp
les
mov
push
shll
subb
aad
and
rol
push
je
stos
or
insl
mov
sbb
int
inc
stos
add
xor
mov
and
out
mov
xchg
adc
cld
test
insb
negb
cmp
xchg
pop
jne
insl
mov
xchg
mov
mov
gs
shll
loopne
ljmp
cmc
and
add
dec
pop
seta
mov
cltd
mov
jno
mov
stos
cmp
enter
sbb
xchg
int3
lret
and
jg
sbb
lds
ret
out
cmp
shlb
push
ja
and
sbbl
or
outsb
jge
ss
icebp
fidivs
push
movsb
dec
or
out
sub
push
lock
jmp
jae
mov
mov
addr16
insl
jns
jle
inc
push
xchg
adc
shrb
into
pop
mov
dec
push
popf
jl
dec
nop
movsb
and
icebp
in
add
cmpsb
stc
cmp
out
test
pop
jb
cmp
inc
fistpll
fsts
test
jne
sbb
lret
lahf
ss
xor
mov
incl
ja
iret
pop
cmc
shr
mov
scas
ljmp
dec
mov
xor
cmp
out
addr16
in
psllq
adc
hlt
cmp
adc
inc
je
cwtl
pop
lock
xor
cmp
mov
mov
pop
sbbb
adc
and
add
jle
jp
fwait
mov
adc
shrb
inc
test
cltd
mov
inc
sub
popa
imul
mov
mov
pushf
jno
shrb
into
jne
mov
out
xor
nop
push
inc
mov
inc
push
and
iret
int
lret
sub
inc
lods
mov
push
mov
xchg
adc
xchg
sub
repnz
pop
out
and
adc
xor
pop
jg
mov
xchg
sub
cmp
jnp
jmp
xchg
sbb
outsb
jge
add
cltd
xor
add
dec
pushl
mov
js
ret
mov
data16
mov
gs
lods
add
mov
loop
div
nop
sub
addr16
xchg
adc
sub
sahf
std
decl
inc
mov
push
jo
adc
mov
fldt
ljmp
call
pop
add
inc
loop
or
jo
lcall
and
daa
jle
inc
jbe
inc
rcrb
mov
incl
adc
cmp
push
jne
dec
mov
xchg
shl
add
hlt
push
dec
inc
push
pop
cltd
jo
outsl
fldcw
clc
cmpsl
xorb
add
jns
adc
lds
inc
leave
jle
dec
pop
mov
cmpsb
test
test
shll
sbb
adc
pop
xchg
or
mov
test
fnsave
pop
jne
in
test
mov
adc
jo
stc
div
andl
add
aaa
or
pushf
jecxz
jne
mov
mov
lea
mov
ficompl
xlat
push
xor
pusha
ljmp
not
hlt
mov
ret
jnp
cmc
jmp
aas
loopne
stos
cmp
testb
cmp
cs
adcl
sub
inc
mov
fdivrl
jmp
inc
pop
sti
jle
call
cmpsb
adc
and
in
movsl
cltd
jge
xor
add
test
mov
xchg
es
sub
mov
add
push
out
leave
xchg
sti
loopne
push
popf
std
icebp
mov
mov
cmp
inc
sub
pop
pop
inc
mov
icebp
sub
jecxz
popf
xlat
mov
push
push
jp
jl
outsl
jecxz
imul
mov
enter
or
les
or
clc
fcompl
mov
icebp
lds
mov
popf
stc
and
inc
adc
fmull
and
inc
pop
jg
int
nop
cmp
lds
cmp
fsubrs
dec
xchg
sbb
insb
adc
data16
add
test
push
or
cli
add
mov
adc
inc
pop
loope
mov
and
sahf
lahf
push
and
jb
cmpsb
stc
xlat
imul
out
cmpsb
mov
out
fcmovne
mov
fmull
mov
mov
fmul
cmp
push
insl
xchg
cmpsl
xchg
in
lea
aas
mov
test
enter
xchg
sbb
add
jecxz
into
iret
repz
sbb
pop
sahf
cmc
mov
dec
out
xchg
inc
inc
rorl
test
loope
fwait
mov
push
and
mov
test
and
cltd
mov
push
mov
jle
sub
dec
inc
sahf
cmp
or
cmp
popf
xchg
push
inc
or
xchg
adc
push
int
int3
xchg
xchg
push
or
clc
mov
rcr
call
pop
xchg
mov
jbe
jecxz
or
aas
dec
push
adc
or
lock
in
pop
cmp
add
cmp
sbbl
repz
fdivrs
pop
ror
fidivl
inc
jmp
dec
push
mov
cltd
adcl
cmp
inc
sbb
xor
cmp
shrb
xor
mov
add
outsb
data16
cmp
test
xor
xchg
loopne
jnp
aas
dec
out
adc
sbb
sub
xor
push
repnz
push
push
or
inc
lods
inc
repz
dec
xacquire
sub
jnp
dec
jp
add
in
push
adc
roll
pusha
push
dec
scas
push
xor
test
les
outsb
jp
sbb
outsl
push
js
mov
sbb
ret
lds
dec
jge
sarb
adc
repz
xchg
lea
push
or
loop
xchg
xchg
or
cmp
push
in
je
aaa
fdivrl
mov
mov
movsl
bound
mov
fs
es
imull
iret
bound
aas
dec
out
in
dec
cmp
insb
andl
inc
daa
dec
rcr
fstps
or
or
mov
mov
cwtl
sbb
mov
mov
push
xchg
or
inc
lock
into
xlat
in
lds
push
out
xor
repz
fiaddl
fistpll
data16
cmp
jae
push
push
xchg
pop
dec
out
jmp
jae
imul
cmp
rol
leave
mov
and
rcrl
addl
scas
sbb
les
jae
enter
pop
das
sbb
mov
xchg
xor
mov
jns
inc
cmpsb
push
aas
jecxz
bound
aam
ret
mov
mov
sub
imul
shll
outsl
or
jmp
xlat
mov
out
mov
stos
mov
push
test
cmc
or
gs
cmp
xchg
fisubrs
add
xor
ficompl
pop
push
call
mov
fldcw
jecxz
fisttpl
jle
out
mov
mov
xlat
cmp
repz
jg
mov
in
loopne
movsb
fidivs
sub
jo
push
and
out
xchg
sbb
xchg
push
rclb
push
add
dec
mov
icebp
xor
mov
xchg
xchg
es
sbb
shrb
push
sbb
or
xchg
jmp
bound
sub
stc
add
ljmp
aam
jg
pop
xchg
xchg
pop
push
mov
testl
outsb
mov
dec
mov
pop
jmp
push
add
dec
fs
xchg
push
push
mov
adc
jo
mov
or
and
mov
shl
cmp
adc
dec
lock
repz
xchg
stc
ret
int
cmc
mov
ror
stos
jl
daa
sub
stos
dec
fadd
hlt
push
or
mov
mov
mov
popa
divl
jl
lock
sub
add
iret
lret
inc
inc
jmp
push
shrb
sarb
mov
out
clc
lahf
mov
adc
shr
sbb
and
gs
shrb
or
scas
loopne
lret
jp
adc
xchg
fnstsw
sbb
xor
xchg
sub
push
sub
mov
xor
mov
inc
jo
sub
pop
adc
adc
inc
cmpsb
les
orb
std
lea
inc
jl
xchg
out
push
push
pushl
in
js
mov
jnp
xor
inc
popa
sbb
lahf
call
cmp
xchg
inc
out
pop
inc
xor
or
lds
xchg
pop
mov
in
add
sbb
ret
push
inc
ret
ljmp
and
dec
das
lea
mov
lods
in
dec
scas
sub
push
pop
iret
aad
inc
popl
cwtl
shr
jecxz
lock
fcmovnu
push
inc
cmp
fnsave
sbb
xlat
push
or
cmp
mov
fstpt
test
fwait
push
mov
pop
fs
gs
xor
cltd
psubb
ret
adc
dec
cwtl
and
lods
xchg
insl
in
inc
dec
mov
push
lock
or
mov
mov
xor
mov
mov
inc
inc
and
sub
pushf
rclb
cmp
jae
repz
out
test
or
outsl
jp
mov
sbb
mov
sti
push
mul
lods
js
lock
pusha
test
in
adc
aam
out
stos
pop
fiadds
xchg
int3
add
std
mov
daa
insl
pop
aaa
into
lea
lods
mov
subl
ror
nop
dec
ffreep
in
iret
data16
xor
test
leave
mov
jne
lods
xor
sahf
out
xchg
flds
jae
xor
fists
adc
popl
xchg
rorb
mov
js
loopne
xlat
jecxz
int
fsubl
arpl
mov
repz
sbbl
adc
add
icebp
stos
in
xchg
jecxz
jp
mov
jp
add
data16
dec
mov
jge
sub
and
imul
mov
mov
pcmpeqb
lods
test
inc
fnstcw
sbb
cmpsb
cmpsb
cmp
mov
pop
mov
out
mov
xchg
movsb
in
jno
fbld
mull
inc
mov
aad
cmc
xchg
cmp
mov
cs
jmp
sbb
push
lret
push
pop
testb
push
sub
adc
cmpsb
xchg
shll
fnstcw
dec
roll
add
sub
jno
in
jp
daa
lods
cltd
popl
dec
scas
mov
pop
imul
roll
sbb
cmp
movsb
adcl
lds
or
ss
aaa
jae
sbb
jo
mov
fstpt
popf
jno
xchg
lods
movsl
mov
xchg
rclb
or
shrb
xor
inc
mov
es
imul
cmp
andb
sti
aad
inc
out
xor
inc
fcomi
lea
xchg
dec
enter
out
cmpsb
push
fucom
dec
hlt
adc
xor
mov
sahf
xor
jecxz
mov
in
adc
out
shrb
inc
pusha
test
out
test
dec
jne
stc
cltd
or
lret
sbb
dec
push
cmp
xor
enter
mov
mov
ljmp
inc
or
pop
sbb
cmpsl
jle
jp
out
fucomip
xchg
js
repz
push
cmp
jno
mov
or
cs
xchg
inc
test
add
icebp
adc
pop
inc
dec
or
icebp
inc
insl
scas
js
std
lds
pop
inc
out
adc
lods
out
and
adc
lret
mov
divl
pop
ss
ds
aad
addl
mov
outsl
push
loop
in
push
add
idiv
sahf
add
shl
add
das
jge
cmp
inc
fdiv
pop
fisttps
sbb
mov
mov
pop
mov
fildll
shll
lret
fistps
sbb
in
int3
das
pmaxub
mov
dec
mov
inc
int
jbe
cmp
loopne
lcall
jge
lods
mov
pushf
arpl
or
push
jle
sbb
stc
nop
scas
mov
cmp
rclb
lock
pop
popf
push
push
dec
pop
fadds
test
lods
sahf
lods
addl
jle
outsl
jge
inc
push
loope
iret
ret
push
dec
faddl
scas
arpl
sub
pushf
insb
xor
xchg
fs
daa
push
fistl
movsl
mov
into
cld
xchg
cld
or
pop
fstps
mov
xor
es
jp
pusha
mov
inc
stos
mov
jbe
out
cmpsl
loopne
xchg
popf
fsubs
test
out
and
pop
dec
fidivrs
std
enter
pushw
pop
mov
inc
sbb
mov
enter
cs
cmp
int
push
test
or
out
sub
inc
dec
montmul
cmpsb
inc
imul
and
mov
jmp
jns
push
stos
ljmp
push
mov
mov
imul
push
cmp
mov
pop
xchg
faddp
fiadds
mov
cld
minps
xchg
jns
xor
cmpsb
test
lods
loope
xorb
adcb
jno
shlb
sahf
adc
xlat
jg
and
push
test
jns
mov
mov
clc
jae
mov
sub
fimuls
cmp
cmp
call
ret
pop
cmpxchg
addb
sbb
sub
bndstx
mov
xchg
movsb
pop
int3
jecxz
pop
adc
cwtl
icebp
xchg
xchg
and
sbb
fsts
lods
jbe
shlb
xor
in
xchg
inc
sub
movsl
xchg
fisubl
push
sub
sbb
test
mov
mov
lods
iret
xor
or
dec
cmp
mov
jle
sub
and
mov
ds
daa
scas
dec
into
loope
pop
push
into
loop
repz
test
lret
or
lret
and
es
dec
fmull
adc
xchg
xchg
popf
cltd
dec
sbb
cmpsl
aas
call
dec
add
cli
out
and
pop
jb
jno
or
nop
aaa
mov
inc
fidivrs
ja
imulb
jns
mov
inc
clc
xchg
sub
jg
xor
cmp
inc
insl
scas
push
jecxz
lea
sub
sub
push
lods
jge
push
movsb
cli
gs
jmp
and
xchg
jmp
xchg
mov
sarb
ljmp
popf
stc
jmp
repz
mov
fs
in
stos
lret
mov
inc
jne
jbe
pop
mov
stc
inc
adc
int
outsl
andl
into
adc
adc
aas
shll
push
ja
xchg
std
insl
mov
cmp
pushf
lods
test
push
xor
dec
or
jbe
inc
movsb
pop
xor
testl
lret
xor
enter
inc
push
add
xor
xchg
adc
mov
out
or
cld
decb
dec
cmpsb
xchg
cmp
xlat
adc
cmp
aaa
insb
ja
bound
sub
sbb
mov
adc
in
mov
sbbl
xchg
push
fidivs
sub
mov
adc
cmp
sbb
das
and
dec
or
sbb
cmc
scas
mov
mov
repnz
in
rcll
dec
mov
ja
lcall
xor
add
out
loope
pop
ficoms
xchg
or
insb
aam
loopne
jl
fadds
pop
das
leave
xor
push
ret
push
jo
in
xchg
add
pop
movl
rorl
fwait
sbb
loope
daa
add
insb
xor
xchg
in
je
xlat
jb
push
adc
lds
out
aad
adc
xchg
sbb
fcoms
or
daa
pop
insl
pop
jmp
loopne
inc
adc
and
add
or
add
add
adc
pop
enter
arpl
mov
mov
iret
xlat
lods
faddl
fdivs
mov
push
ficomps
xor
into
and
push
sub
push
mov
int3
addr16
jbe
lret
xor
loopne
xchg
sbb
adc
clc
test
push
shl
adc
push
insb
add
fidivrs
fsubl
into
xchg
cli
stc
test
es
fistps
inc
rcrb
xlat
add
mov
stos
xchg
push
subb
or
or
arpl
jecxz
sarb
and
fs
or
sbb
mov
mov
cltd
mov
or
xchg
and
lcall
mov
pop
mov
push
nop
mov
adc
outsl
xchg
xor
aam
imul
mov
fnsave
pop
decl
mov
mov
fst
jno
rorb
push
iret
rclb
movsb
add
inc
gs
and
pop
imul
je
xchg
aaa
aas
sti
xchg
mov
nop
repz
push
push
sarb
inc
fnstcw
sub
xorb
pop
xchg
mov
xchg
push
stos
js
ja
sahf
gs
repnz
rclb
bound
jnp
lods
lods
iret
push
mov
jns
scas
adc
push
pop
lds
cmp
fidivs
je
jg
sub
nop
jae
loop
imul
sbb
rol
mov
testl
fbld
lock
push
in
bound
jae
bound
dec
mov
cmp
xor
sbb
mov
sarl
xor
pop
push
jbe
outsb
jb
pop
scas
push
mov
clc
aad
jo
test
xchg
cmp
les
xchg
divl
xor
sub
lret
dec
pop
jae
xlat
push
mov
repz
fcmovb
pop
xchg
add
lods
decb
mov
mov
mov
pop
sub
sbb
push
cmp
or
adc
push
je
xor
pop
sub
mov
jp
cmp
xchg
in
js
pusha
or
or
cli
adcb
jg
stos
enter
mov
xor
xchg
cmp
mov
dec
sub
je
mov
mov
push
push
pop
jbe
pop
mov
push
adc
sub
andb
xchg
dec
addr16
mov
mov
fwait
insb
xchg
shll
mov
jp
and
cmpsb
sub
test
push
sarl
dec
mov
adc
adc
pop
xchg
cmpb
xor
sbb
imul
jl
and
mov
hlt
mov
mov
mov
push
mov
push
mov
jp
add
and
cmp
mov
lock
pop
lock
xchg
add
or
xchg
mov
leave
mov
fst
mov
sarl
inc
push
adc
push
je
lcall
enter
imulb
cmpsb
imul
loope
je
add
mov
in
mov
mov
push
mov
cmp
popa
or
sbb
jl
mov
jp
repnz
insb
or
cmpb
mov
into
push
test
cmp
rcr
aam
xlat
pop
or
ja
jae
pop
int
fs
cs
lods
insl
cmp
and
in
pop
adc
xchg
adc
mov
jg
mov
jae
loop
aam
and
mov
mov
jne
out
xchg
inc
scas
into
popa
sbb
inc
jmp
fucomip
xor
insb
bound
cmp
gs
lret
jbe
sbb
dec
gs
dec
sbb
mov
into
movsb
add
lea
adc
xor
bound
cwtl
dec
mov
fcompl
pop
pop
push
adcl
out
lods
cmp
jae
push
mov
lahf
out
test
or
push
mov
loope
int
shlb
sbb
push
mov
flds
push
push
sub
or
in
cmp
testb
and
pmaddwd
ficomps
mov
sub
enter
mov
inc
and
and
hlt
lcall
sbb
stc
je
aad
popa
inc
push
fdivs
cmpsl
clc
xchg
inc
ret
pop
sbb
flds
imul
fxtract
xchg
pop
mov
sub
lret
sub
cmpsb
pop
icebp
pop
cltd
test
cmp
out
iret
pop
push
les
cmp
inc
int3
jle
dec
pop
cli
mov
sub
sarl
cmp
dec
mov
js
pop
xchg
pop
shrl
cmp
sahf
insl
cs
pushf
aam
pusha
sbbb
or
idivl
or
inc
mov
mov
fxch
sub
push
sbbl
mov
gs
adc
sarb
cmp
dec
and
jne
sar
cmp
in
mov
inc
fistps
mov
inc
add
sbb
mov
insb
mov
jl
cmp
jg
fbld
fs
scas
repz
pop
push
fwait
xor
nop
sub
mov
mov
mov
pop
cmc
jae
cmpsb
cmc
xchg
jl
or
adc
stc
out
lea
mov
mov
push
fsubr
test
pusha
cmpl
leave
ss
xor
enter
adc
repnz
xor
xchg
std
ret
and
cs
and
lods
mov
jo
std
inc
out
inc
jae
push
mov
and
cltd
out
xor
fmull
inc
aad
ljmp
lahf
ja
rorb
cwtl
add
add
and
or
cli
test
repz
inc
pop
xlat
jmp
inc
sub
xchg
cmc
xchg
and
adc
scas
or
cli
ja
sti
imul
inc
push
cmp
jg
rclb
popaw
mov
int3
out
inc
jbe
mov
pushf
nop
push
sti
jmp
add
or
out
jae
stc
ret
sub
lock
popf
stc
pushf
push
mov
shl
repz
sub
stos
cmp
jae
popa
mov
ret
fildl
les
push
stos
dec
mov
ret
xchg
cmp
adc
les
push
pop
inc
ret
push
sbb
fmul
mov
and
jno
mov
jecxz
mov
loope
fists
or
and
pop
mov
mov
push
mov
mov
int3
xchg
pop
lds
lods
mulb
aad
or
and
mov
stos
and
push
ret
pop
xor
mov
jg
or
je
cmpl
and
movsl
inc
gs
mov
ret
and
mov
xor
push
lcall
cwtl
pop
imul
or
sub
mov
pop
add
movsl
test
scas
pop
xorl
xchg
addb
xchg
pop
add
sub
out
sti
pop
addb
or
and
dec
dec
dec
in
mov
movsl
negl
xor
hlt
pop
in
cmp
lret
xchg
fsubrs
jp
jb
bndstx
gs
lods
xchg
dec
xor
jecxz
shll
add
inc
sub
jno
mov
or
test
les
and
sti
xchg
mov
xor
xchg
xor
leave
push
mov
popa
ficoms
xchg
sub
shl
pop
cmp
mov
scas
mov
sbb
cmpb
lods
test
cmp
cwtl
je
es
stc
icebp
push
mov
sbb
adc
cmp
sub
repz
push
jbe
or
ds
sbb
outsb
adc
test
jno
fnsave
xor
pop
fsubrs
pop
insl
mov
in
pop
dec
rcl
dec
mov
aas
jno
dec
aaa
pop
stos
push
sbb
pop
cmp
shrl
imul
outsl
cltd
pop
ds
rclb
and
dec
add
ds
xlat
aas
les
jno
imulb
mov
out
cli
pop
outsl
pushf
mov
inc
adc
popf
pop
jb
adc
fucomp
insb
xor
or
jns
fs
inc
leave
pop
mov
test
cmpsw
push
js
repz
or
in
stc
sub
xchg
mov
sti
sub
ret
leave
aaa
fadd
and
sbb
mov
mov
xor
sti
shll
add
mov
mov
sti
xor
push
mov
pop
gs
pop
sub
jmp
mov
icebp
xchg
xchg
in
dec
pusha
aaa
scas
call
arpl
lock
add
fprem
mov
jns
data16
mov
mov
or
cmpsb
in
mov
movsb
fistl
hlt
test
enter
inc
fs
xchg
stc
inc
push
pushf
lret
jmp
sbb
mov
jnp
push
sbb
adc
loop
inc
jg
dec
aam
dec
outsl
lcall
add
and
inc
aam
cli
fwait
cld
or
sub
pushf
sub
ret
mov
pop
hlt
mov
push
inc
insl
or
test
inc
mull
mov
into
lds
mov
xchg
mov
push
movsl
or
xor
scas
sahf
mov
inc
pop
icebp
xchg
push
push
mov
rcr
ret
cwtl
insl
loopne
fsubs
test
ds
xchg
xor
test
stc
movsl
mov
imul
pusha
mov
lods
ljmp
push
cltd
pop
dec
inc
xchg
scas
js
jns
std
sub
jae
repnz
js
or
pop
les
jle
mov
add
or
popa
push
dec
inc
bound
shrb
leave
icebp
sub
and
add
mov
and
push
rcrl
mov
test
and
call
cmp
and
and
int
aas
jecxz
adc
sbb
ret
fiadds
movsl
in
push
mov
fisubrl
nop
imul
iret
sbb
sbb
jg
mov
fildll
stos
sub
and
negl
out
dec
and
dec
pop
inc
popa
shrb
ds
sti
push
pop
stc
fmull
sbb
jbe
sbb
mov
or
ljmp
je
sub
dec
cmpsb
dec
arpl
lret
xchg
cmp
push
ja
jge
xor
and
in
loop
jmp
sub
sbb
aas
outsb
cmp
pop
cmp
ds
ljmp
fwait
add
pushf
xchg
insb
inc
sbb
xor
xchg
movsb
cwtl
pusha
and
or
cmp
pop
scas
inc
pop
insb
scas
stos
cmpsb
in
lahf
lods
vpackuswb
add
xor
dec
or
or
insb
mov
loope
jg
xor
shll
cs
cmpsb
rcrl
mov
outsb
scas
rorb
mov
stos
in
jp
sbb
mov
rorl
pop
outsb
jl
mov
mov
or
mov
test
xchg
decb
inc
cmp
arpl
sub
dec
pop
insb
push
cmp
lods
fisubrl
sti
subb
add
int3
fmul
mov
and
jl
and
shll
addb
pop
icebp
pusha
shl
jae
dec
add
push
enter
fsubrp
hlt
dec
and
mov
adc
je
cmpsl
lea
inc
or
jnp
daa
cli
test
add
dec
mov
jg
add
inc
push
mov
aad
sbb
lret
xlat
sti
pusha
adc
scas
add
jno
int
shll
xchg
nop
jae
popa
jmp
adc
jb
iret
icebp
cmp
mov
out
sbb
fnstcw
jbe
xchg
cltd
test
cwtl
cmp
cmpsl
es
ja
stc
push
mov
or
push
jnp
adc
mov
jg
cwtl
and
jb
arpl
mov
test
lds
dec
gs
or
lahf
mov
ja
mov
in
bound
inc
bound
in
cmp
std
div
push
push
fs
sbb
xchg
repz
or
xchg
add
inc
call
clc
mov
ret
iret
or
rcrl
js
inc
stos
iret
lahf
ss
shrl
and
daa
jmp
mov
adc
jge
mov
sbb
fidivs
mov
xor
arpl
test
jmp
bound
cmpsl
jl
fwait
in
movsb
fbstp
sbb
sbb
mov
ret
push
rcrl
cmc
or
mov
mov
int3
sbb
xchg
pop
mov
pushl
push
out
push
rcll
jb
sub
fwait
lods
lock
sbb
add
jo
add
repz
adc
ljmpw
call
cltd
popf
and
outsb
mov
mov
sti
sub
jmp
and
xchg
or
push
imul
cli
mov
loopne
imul
rol
pop
mov
aas
mov
addr16
enter
mov
mull
inc
insl
leave
iret
movsb
lds
aaa
divl
sub
jmp
stc
shld
xchg
lods
out
xor
call
mov
sahf
xor
pop
xchg
mov
push
xor
mov
push
add
and
js
adc
enter
dec
add
inc
fisubl
jb
fadds
sub
xor
adcb
jo
outsb
and
add
xor
mov
mov
shrb
mov
fmull
adc
scas
inc
arpl
insl
mov
cmp
aam
fld
or
testb
ljmp
pusha
fistps
mov
xor
dec
popa
into
xchg
cwtl
pop
ds
dec
xchg
fiaddl
jo
hlt
mov
popl
popf
shl
dec
mov
dec
cmp
add
and
mov
adc
xchg
int
mov
and
sbb
roll
jmp
push
subb
faddl
mov
xchg
cmpsb
add
jge
and
mov
int3
add
sbb
aaa
scas
je
andb
pop
ja
xor
shrl
xor
jp
push
mov
sahf
enter
repnz
daa
jl
sbb
out
or
idivb
adc
fmuls
repnz
fists
cwtl
mov
mov
aas
cmp
pop
jle
mov
mov
sub
out
push
or
cwtl
jae
mov
fsubrp
arpl
xor
mov
gs
sar
jae
cmp
mov
cmp
cmp
push
add
xchg
sar
inc
daa
xor
xchg
out
call
adc
xlat
adc
jmp
out
imul
xor
jle
push
icebp
cmpsb
in
mov
mov
stos
mov
lret
lret
pop
les
popa
out
popa
inc
jns
and
in
and
pusha
aaa
mov
ret
in
mov
xchg
cmp
and
mov
mov
cs
rclb
xchg
lret
test
adc
mov
cmc
cmp
push
ficoml
inc
xor
pusha
xchg
and
std
mov
xchg
dec
leave
pushf
dec
out
in
out
xchg
and
add
push
or
mov
rorl
sarb
dec
cli
push
jnp
lock
ret
adcb
das
pop
and
lahf
movsb
cmp
fwait
pop
cmpsb
sbb
lahf
jp
outsl
pop
in
lret
mov
aas
lret
popf
mov
jecxz
lds
icebp
dec
stos
jp
out
arpl
out
push
add
lds
push
test
fsubrs
dec
fs
shr
cli
cmp
into
xchg
cmp
and
cli
lahf
jo
xchg
xlat
sarb
lcall
xchg
adc
push
les
push
and
jno
xchg
mov
jb
insl
mov
hlt
in
fst
jnp,pn
dec
dec
test
push
adc
test
dec
cltd
test
jg
xchg
pushf
push
jge
jp
xchg
dec
mov
addr16
cmp
jl
js
jne
insl
xor
mov
cld
sbb
arpl
mov
movsb
push
xor
ds
popa
xor
lret
and
xchg
cmp
jne
outsb
icebp
push
ret
notb
cmc
js
pop
add
pop
pushl
add
daa
test
pop
sbb
pop
jno
lahf
arpl
mov
ret
mov
mov
jp
leave
mov
negb
mov
les
mov
loopne
xor
mov
xchg
dec
inc
call
and
jbe
sbb
push
jns
scas
inc
icebp
fmul
in
fwait
lcall
cmp
mov
lcall
ds
or
insb
add
shlb
cmc
mov
cmp
ret
mov
jb
sub
pusha
pop
stos
and
daa
mul
cmp
movsl
mov
fisubl
add
pop
in
inc
in
mov
adc
xor
and
jae
js
inc
jns,pt
test
sbb
lahf
lcall
sub
push
in
rorl
test
ja
out
xor
xor
mov
sub
andl
fmuls
xchg
jne
pop
roll
sbb
icebp
xlat
mov
nop
dec
lcall
pushl
or
dec
adc
or
push
out
loope
cmp
inc
and
subl
pop
dec
fdivrs
negb
je
movsb
aas
xchg
mov
sub
pop
jl
aad
inc
stc
cmp
inc
jmp
test
ss
cmp
negb
fwait
push
out
cmp
leave
clc
inc
or
data16
push
xlat
cmp
xchg
fimuls
mov
jmp
adc
mov
outsl
loopne,pt
pop
cmp
insb
dec
dec
cmp
test
rol
cmp
insb
sbb
and
xor
xchg
cmp
nop
rcrl
insb
xor
sub
mov
pop
shlb
pop
or
jmp
jmp
iret
in
jo
sti
movsb
int3
mov
sbb
mov
mov
xor
pmaxub
dec
cmp
push
ljmp
stc
rcrb
adc
es
jg
inc
popl
in
jle
xchg
jmp
in
lcall
mov
inc
scas
xchg
clc
aam
ret
mov
push
xchg
dec
inc
in
adc
sbb
inc
pop
cmp
insb
dec
in
in
icebp
insb
insb
adcl
add
xor
in
ljmp
je
jmp
sti
inc
andl
stos
jae
cmp
jo
cmpsl
les
push
or
inc
mov
ficoms
pop
pop
shlb
add
xchg
push
shrl
sbb
mov
out
mov
imul
xor
xchg
mov
sbb
ss
xor
repz
gs
int
sbbb
push
cwtl
and
add
pop
test
jge
jg
das
jne
or
lock
fnstsw
mov
dec
out
dec
mov
or
jb
pop
push
fdivs
in
push
repz
jmp
or
fistpl
jnp
mov
repz
inc
push
mov
pop
sub
stc
nop
fdivr
dec
add
js
sub
out
call
cmp
sahf
or
pusha
dec
and
lcall
adc
pop
mov
ret
dec
pop
dec
hlt
pop
dec
mov
dec
jnp
pop
and
jo
or
add
or
enter
jbe
and
xchg
push
pushf
icebp
and
add
daa
xchg
adc
push
mov
lods
sbb
loopne
jp
outsl
lcall
test
xor
xor
loope
sub
rcr
ret
xchg
add
mov
jnp
jp
rol
mov
into
pusha
lods
mov
xchg
pop
sbbb
mov
movsb
std
push
in
sbb
pop
int
sub
lret
outsl
std
push
insb
js
scas
dec
and
scas
addr16
push
xchg
and
dec
xor
and
fiadds
imul
sbb
insl
imul
or
fisubl
push
test
aam
cmp
cli
jb
addr16
scas
xor
jp
fsubrl
xchg
jl
or
cld
dec
mov
mov
mov
jb
jp
add
xchg
jne
sub
hlt
fdivp
movsb
lock
shlb
jno
and
fdivl
jns
popf
scas
jp
rol
and
bound
pop
movsl
aaa
push
pushf
imul
dec
data16
adc
je
les
aaa
cmc
mov
mov
mov
xor
pop
adc
mov
mov
xchg
cwtl
dec
insl
scas
sarb
lcall
and
mov
lea
das
hlt
sbb
mov
jbe
pop
adc
gs
test
stos
aad
push
push
pop
adc
dec
mov
inc
dec
sub
xchg
inc
pop
mov
std
popf
pop
jno
cli
negl
pop
pop
jae
sub
mov
mov
sti
outsl
ret
add
sbb
outsl
cmpsb
les
sbb
push
mov
push
xor
mov
movd
push
pop
jns
dec
xor
cwtl
pop
sub
ret
popa
dec
dec
addr16
repnz
add
jecxz
insb
add
ja
jb
mov
roll
aam
add
loope
mov
dec
jge
push
or
rol
and
adc
repz
out
test
das
pop
movb
gs
add
pop
je
inc
xchg
mov
xchg
pop
repnz
and
sub
pop
push
sbb
mov
jb
inc
mov
sbb
xor
inc
jb
cmpl
das
addr16
arpl
jecxz
enter
in
fisttps
dec
sbb
xor
or
sbb
mov
mov
sub
adc
aad
inc
rol
jmp
in
xchg
data16
jae
cwtl
int
cmp
clc
shlb
xor
adc
test
push
cs
imul
jle
mov
dec
lret
lret
in
and
incl
insl
adc
test
push
ss
mov
xchg
nop
out
mov
cmc
sbb
sub
shr
imul
mov
subb
or
mov
mov
ljmp
fmul
sub
pop
cld
sub
cltd
cmc
mov
dec
stos
inc
pop
xchg
rolb
dec
or
cmp
pop
jnp
es
or
xchg
push
movsb
jge
fisttpl
and
xchg
ss
xchg
xchg
push
sbb
imul
in
dec
inc
jge
cltd
pop
jns
adc
jmp
in
ret
loope
out
xchg
enter
mov
sbb
lods
jg
clc
int
xor
mov
cmp
ror
outsl
shrb
jge
filds
pop
sub
sti
and
adc
xchg
dec
xor
out
sub
and
sub
popf
and
cmp
mov
test
ja
into
addr16
pop
fcoms
cmc
fmull
cmp
ss
cli
popa
sub
lahf
pop
scas
mov
and
stos
inc
imul
enter
testb
outsb
adc
outsl
out
stos
ret
mov
jne
mov
sub
and
inc
sbb
dec
pop
imul
test
pop
in
jns
cli
mov
mov
shrb
aam
jmp
jnp
lds
aad
jmp
adc
addr16
out
nop
in
movsl
cmp
push
mov
cmp
ret
in
pop
pop
shl
sarl
stos
jge
pop
scas
and
pop
mov
movsb
das
add
cmpsb
icebp
jns
inc
pop
xor
mov
shrb
xchg
scas
adc
popf
push
push
jb
xchg
sub
xchg
xlat
xchg
cmpb
sbb
cmp
mov
sbb
paddq
lods
pushf
clc
in
ret
cmp
xchg
push
sbb
iret
adc
idivb
add
test
push
cwtl
mov
out
inc
aas
mov
xor
mov
inc
sub
cli
cs
rolb
sbb
mov
dec
xor
pop
roll
enter
out
adc
jnp
jno
sbb
in
xor
cld
push
cltd
fnsave
fwait
push
ja
push
pop
fincstp
sarl
cli
lret
inc
lahf
loop
xchg
push
sub
aam
pop
xorb
aad
sub
cmpsb
jne
in
xchg
cmpsb
cmp
jmp
dec
dec
lcall
inc
inc
mov
ret
shrl
cmpsb
dec
xchg
ja
jp
xchg
xchg
out
sbb
shl
repz
jmp
inc
jae
in
add
ljmp
jg
and
addl
fwait
adc
jb
sbb
mov
mov
lock
rolb
das
mov
push
stos
flds
dec
mov
outsl
sbb
out
cltd
inc
test
add
int
notl
cmp
lock
or
in
jne
mov
hlt
jnp
jp
cmc
das
adc
or
movsb
mov
pop
aaa
push
pop
jmp
into
fs
cmp
mov
inc
lods
out
pop
stc
or
loope
mov
xorl
outsl
cmp
mov
push
mov
pop
cmp
push
xchg
mov
and
das
jmp
int
aaa
push
outsl
es
xchg
pop
push
push
xchg
pop
and
pop
ds
push
dec
xor
inc
rcr
mov
mov
sbbb
inc
lcall
std
pop
stos
jecxz,pn
mov
push
outsl
mov
push
adc
push
add
xor
sbb
inc
stos
jp
js
lods
mov
pop
xchg
lock
dec
mov
mov
test
into
mov
and
inc
fwait
push
or
jp
push
push
mov
inc
cmp
nop
insb
inc
dec
dec
ret
fisubs
xchg
mov
mov
fistl
andl
addr16
pop
jle
in
out
mov
out
stc
fdivrl
xor
cwtl
or
lods
mov
aas
xchg
sub
pop
cmp
into
and
aad
dec
stos
mov
lret
pop
jmp
and
jns
iret
cs
imul
mov
jb
or
sub
jg
subl
mov
gs
es
call
outsl
push
inc
les
inc
loopne
mov
aas
jne
repz
setne
loope
xchg
push
cmp
int
lock
cmc
inc
inc
mov
clc
xor
jecxz
scas
movsl
or
ss
sete
push
xlat
mov
or
pop
add
fidivrl
or
mov
push
lea
cmp
test
sbb
push
jge
sbbl
roll
mov
jno
fsubr
push
cmp
inc
push
and
arpl
outsl
rorl
mov
lock
outsb
jae
insl
mov
mov
pop
ljmp
cmp
outsl
push
ficoms
aas
dec
jb
lea
mov
pop
jae
out
hlt
jmp
xchg
xor
push
int3
sbb
fadds
mov
iret
cmp
nop
mov
jo
cmp
cmp
sub
pop
mov
sub
add
ret
or
mov
daa
popa
mov
loop
data16
adc
stos
sarb
cltd
outsb
ljmp
sub
imul
flds
mov
mov
mov
sbbl
inc
cs
aaa
dec
cmc
dec
mov
repnz
push
arpl
or
outsb
mov
sbb
cmpsl
mov
loope
fbstp
xchg
lds
pop
xchg
or
sbb
shl
push
in
mov
aas
pop
lea
dec
cmp
pushf
test
shlb
fs
xchg
insb
test
ds
out
aaa
movsb
adc
mov
fnstsw
push
sbb
fxsave
cs
push
stos
fsubr
shlb
push
and
popa
jns
xor
lock
or
mov
cmp
icebp
or
movsl
insb
mov
sub
sbbb
jecxz
and
andl
out
dec
popf
dec
pop
mov
fnstcw
or
lea
mov
mov
inc
fwait
mov
stos
dec
mov
mov
inc
jecxz
xchg
sbbl
xchg
shll
outsb
insb
sbb
mov
sbb
insb
in
xchg
xchg
mov
xor
jmp
mov
push
stos
push
jo
addb
mov
mov
jg
fs
and
jb
test
adc
push
and
jae
adc
hlt
xor
in
addl
mov
mov
shrb
dec
mov
movsb
cmp
ss
js
adc
pop
stos
inc
mov
js
loopne
repz
mov
sbb
in
mov
pop
mov
lahf
xchg
clc
lds
mov
mov
dec
aad
push
and
test
jbe
xor
inc
xchg
sbb
and
mov
sbb
pop
iret
or
js
fsubrs
subl
sbb
add
push
leave
subl
push
inc
ds
inc
jl
pop
aaa
mov
in
or
xor
clc
sbbb
test
in
repnz
dec
aam
lock
pushf
xchg
and
fmull
dec
aam
sbb
dec
dec
add
mov
subb
jecxz
pop
cmp
mov
pop
hlt
mov
imul
jae
ret
fists
hlt
dec
push
sub
aam
imul
pop
roll
mov
add
add
dec
inc
test
jbe
cltd
test
cli
xor
test
inc
or
scas
and
cmpsl
adc
adc
les
mov
xchg
rcrl
in
pop
dec
ss
push
mov
adc
sbb
hlt
test
mov
push
jp
pop
jecxz
or
in
or
push
pop
data16
sub
popf
scas
push
inc
xchg
mov
xchg
testb
rolb
movsl
mov
push
push
sbb
mov
adc
int3
imul
jbe
sbb
imul
adc
push
rorl
imul
push
xorb
jno
xor
add
mov
mov
push
test
fs
mov
add
js
sub
adc
rcrl
sub
jle
cmp
ds
dec
dec
mov
xlat
and
cmpsb
std
dec
insl
outsl
inc
mov
sub
mov
xor
popa
push
aas
sar
imul
js
xchg
pop
pop
sub
sub
sbb
inc
mov
cmp
fbstp
dec
sbb
dec
arpl
testb
out
inc
sbb
push
mov
pop
mov
inc
inc
sbb
in
or
enter
add
lea
and
pop
mov
pusha
push
xchg
fwait
xchg
int
mov
push
sbb
xchg
pop
cmp
dec
mov
dec
pop
push
rcll
pushf
pop
loop
lret
inc
fdivr
leave
data16
arpl
fstl
jp
pop
adc
shrl
push
dec
dec
decb
inc
insl
ds
cmpsl
push
sbb
push
xchg
jl
jb
mov
les
ret
fcoml
test
cmpsb
dec
bound
and
mov
scas
pop
adc
stc
or
je
cltd
jmp
mov
add
popf
mov
dec
mov
pop
testb
dec
dec
nop
pop
push
mov
and
iret
int
mov
adc
pushf
jno
shlb
in
notl
pop
ret
out
push
lret
dec
test
xor
pop
jge
mov
into
mov
jne
sub
xchg
mov
scas
push
sbb
pop
dec
jnp
hlt
mov
lods
jle
mov
or
jl
shrl
out
xchg
dec
inc
sub
xor
mov
mov
insl
mov
in
or
push
fnstcw
or
xchg
idivl
push
daa
cmp
stos
ja
rorl
jg
adc
shr
fstl
outsl
jnp
jo
inc
aaa
flds
test
jle
cmc
mov
lahf
add
jl
jecxz
imul
mov
mov
outsb
fwait
and
out
mov
cmp
mov
mulb
xorb
int
out
ret
insb
lret
and
loope
ja
xor
jmp
std
jmp
pop
loopne
icebp
in
dec
out
xor
cmp
xchg
popf
lods
rol
xchg
loopne
nop
daa
or
sbb
inc
sbb
notl
add
add
ret
jecxz
in
jmp
mov
and
shr
adc
jbe
mov
std
mov
xchg
xchg
sub
inc
inc
and
sbb
or
xchg
push
push
je
or
lret
ljmp
pushf
hlt
ljmp
add
add
gs
adcb
push
mov
push
mov
push
mov
mov
jnp
mul
shrl
and
cmp
lock
jae
dec
in
xchg
or
pop
mov
cli
roll
ss
xor
add
dec
std
es
xlat
testb
inc
jle
je
push
call
mov
lahf
std
inc
inc
rcrb
adc
mov
or
decb
scas
or
outsb
stc
imull
jmp
mov
fwait
outsb
loopne
into
and
mov
lret
pop
outsb
addps
imul
lcall
adc
mov
lock
sbb
xor
add
mov
jg
jmp
jns
push
mov
pop
jb
dec
xlat
stos
mov
inc
fisubrl
into
popa
stc
aad
mov
inc
ret
ljmp
mov
fldt
scas
xchg
cli
sub
imul
jbe
push
hlt
outsl
cmpsl
mov
hlt
sbb
or
stos
xchg
movsb
jmp
pop
mov
aam
jp
iret
ss
jg
mov
inc
push
out
pop
mov
dec
push
jno
cmp
adc
xor
pop
xlat
jo
aad
lock
inc
sub
push
mov
cmpsl
cmp
fdivl
aad
mov
outsb
and
ffreep
rcll
cmp
int
paddb
push
aad
mov
mov
and
leave
cmp
jg
int3
insl
leave
fnsave
mov
das
stos
xchg
popa
sbb
xlat
push
fwait
jb
xor
mov
mov
icebp
jmp
mov
push
addl
stc
stc
popa
adc
fdivrs
mov
call
push
loope
or
xchg
mov
ja
je
adc
in
std
sub
mov
fdivrs
sub
xor
lcall
jno
xchg
add
or
cmc
xchg
pop
les
lock
out
xor
inc
sub
hlt
stos
jbe
xchg
sub
xor
test
inc
test
sub
jo
adc
sub
fs
shlb
dec
pop
push
pcmpeqw
sbb
sbb
xor
adc
mov
lcall
xchg
mov
add
cmp
or
mov
mov
sub
shrb
dec
pop
cmc
push
pushf
cld
push
cmp
fidivl
test
or
loop
xchg
jmp
rol
shrl
sbb
mov
add
int
or
adc
in
add
mov
push
dec
inc
into
call
hlt
inc
mov
pushf
add
mov
cmc
sarl
add
adc
xchg
dec
rcrb
adc
ffree
mov
stc
fildl
push
lahf
imul
and
mov
dec
pusha
or
add
iret
movsl
cmp
lock
inc
in
pop
xlat
sahf
cmp
loop
cmp
adc
mov
dec
dec
jl
aam
push
sbb
cli
mov
pop
sub
hlt
mov
push
aas
mov
arpl
mov
xchg
cli
imul
or
hlt
stc
cld
jl
xlat
loope
ret
or
push
and
push
push
scas
test
lods
movsl
xor
outsl
lret
jg
mov
lods
aam
iret
fstl
dec
pop
ret
into
ds
ret
dec
mov
loop
loopne
popa
adc
movsl
or
dec
adc
imul
ret
sti
pop
stos
mov
jg
lret
out
popa
sub
xchg
adc
jp
jo
dec
cmpsb
jns
pop
lret
mov
test
cmp
adc
jmp
mov
jb
inc
jno
or
cmove
sbb
daa
out
xorb
icebp
negl
call
or
adc
push
jb
imul
push
pop
cmp
in
popa
inc
pusha
std
inc
or
inc
mov
test
pop
shl
mov
aaa
jp
cmp
fstps
test
add
push
push
fnstenv
jecxz
push
sbb
outsb
xlat
outsb
pusha
sbbb
mov
pop
hlt
xor
rorb
mov
inc
cmpb
sbb
xchg
cmc
call
xlat
sbb
movsl
in
clc
out
sub
mov
iret
xchg
sbb
or
aas
aam
dec
sub
dec
push
loop
mov
xchg
adc
sbb
fiaddl
bound
lds
lods
push
enter
movsb
scas
bound
imul
dec
add
fwait
mov
jmp
iret
or
adc
je
movsl
mov
xchg
jg
push
inc
xor
aad
int3
loop
mov
lods
movsl
or
into
xchg
sub
sub
movsb
dec
imul
lods
add
imul
stos
sahf
pop
rol
sub
lret
jle
inc
cmp
jl
adc
loop
xor
or
lock
fadds
test
jbe
std
pusha
jmp
cmp
fwait
in
cmp
lods
call
movsb
sub
sbb
mov
arpl
mov
lods
sub
pop
jb
call
fidivrl
arpl
inc
repz
push
xor
mov
inc
pop
call
pop
sahf
sahf
jg
jle
ss
sahf
out
ljmp
ret
clc
inc
xchg
push
nop
fsubrl
cwtl
fidivrl
xchg
outsb
jb
mov
cld
aam
or
out
mov
inc
jne
les
int3
adc
xor
jb
cwtl
lret
inc
scas
into
in
mov
mov
pop
and
mov
cmp
imul
xor
call
icebp
and
cmp
iret
adc
fwait
repnz
aas
aaa
negl
repz
push
and
dec
adc
xchg
addr16
jbe
loope
jo
mov
adc
push
mov
push
add
inc
lret
loopne
int
imul
outsb
jl
into
jmp
stc
and
fadds
js
lret
loopne
into
pop
sub
add
mov
insl
movsl
push
outsl
xorl
enter
jecxz
or
ljmp
lret
movsl
sti
mov
push
sub
pop
sbb
inc
ja
insb
dec
test
js
lds
leave
jmp
mov
push
gs
cmc
pushf
daa
or
orb
fwait
jle
lret
adc
shr
scas
ss
jbe
xchg
push
xor
adc
into
sti
aas
lock
imul
dec
add
xorb
fbstp
mov
mov
daa
repz
fsubl
dec
rcrb
push
sub
pop
cmp
dec
inc
shll
dec
xor
lods
in
pop
or
mov
cmp
pop
mov
lock
mov
mov
rorb
arpl
nop
out
fdivl
movsb
pop
outsl
pop
lahf
jne
sub
fisttpll
sti
fs
cltd
lcall
loop
test
int3
icebp
xchg
push
xchg
addb
sbb
daa
jbe
pop
fwait
and
mov
stc
popf
popf
jp
mov
inc
pusha
pop
aaa
or
fstpl
add
loop
jns
mov
loopne
shll
xchg
dec
mov
es
outsl
push
pop
popf
insb
mov
fsub
adc
out
push
call
sub
mov
aad
dec
and
jo
repz
sub
daa
pop
mov
xor
jne
fsts
xor
cmp
jo,pn
ljmp
rorl
sbb
cwtl
repz
ret
into
push
xor
fscale
cltd
jl
shrb
xchg
or
fs
ds
std
jbe
daa
lods
jl
push
lcall
ficompl
int
popa
clc
out
adc
cmp
sub
adc
add
cmpsb
ss
and
xor
sub
cmpsl
leave
dec
in
fbstp
adc
cmp
xchg
add
sbb
inc
adc
pop
sub
or
popa
out
and
pusha
add
insb
sub
push
ljmp
sahf
sub
ret
mov
xor
fsqrt
fwait
pop
sub
mov
cmp
test
or
adc
pop
lret
sbb
sub
pop
lret
push
testl
inc
or
fdivl
push
jo
mov
mov
dec
add
pop
cmp
shrb
dec
rorl
jp
add
lahf
daa
cmp
push
js
xchg
sti
dec
dec
ss
inc
fs
adc
mov
mov
test
xor
pop
or
push
leave
int3
aam
xor
pop
and
aas
jmp
add
pop
mov
add
dec
into
pushf
test
pop
sub
je,pn
add
xchg
scas
adc
sub
mov
jns
fnstcw
add
pop
cmp
jp
int
xchg
sbb
xchg
ret
mov
cmp
dec
push
sub
in
cmp
or
adc
fstps
or
rcrb
gs
cld
cwtl
dec
mov
call
test
mov
and
xchg
inc
std
xchg
jno
xchg
pop
lea
je
mov
mov
xchg
cmpsb
loope
adc
shll
or
push
loop
inc
jecxz
bound
xor
pop
test
sbb
adc
sub
imul
adc
sbb
iret
lcall
pop
faddl
cli
in
orb
mov
sbb
scas
pop
cmp
mov
pop
dec
sahf
xchg
add
pop
and
dec
jbe
push
dec
xor
and
sbb
jg
and
bound
clc
sahf
push
test
jo
int3
pop
dec
fistl
jmp
dec
in
mov
imul
movsb
adc
pop
xchg
inc
js
sahf
mov
sahf
xchg
mov
fsubs
dec
fmuls
jge
jecxz
adc
or
mov
hlt
xor
lahf
stos
push
test
icebp
ret
repz
push
clc
andb
push
lret
dec
hlt
mov
fists
xchg
mov
adc
lods
mov
dec
dec
iret
int
roll
jmp
sub
leave
lcall
out
cli
stc
test
mov
fadd
sub
fsubs
lcall
mov
push
adc
push
in
popa
loopne
fwait
mov
cmp
test
lcall
mov
aaa
les
roll
mov
test
insb
mov
cwtl
jnp
or
and
push
cli
sbb
fldt
ss
in
divb
jmp
inc
lock
fistpll
hlt
mov
cltd
sti
in
inc
cmc
out
sub
rcl
cmc
addr16
cmp
mov
pop
sub
mov
aaa
test
jmp
sub
hlt
push
pop
insb
cmp
fwait
arpl
push
mov
sar
sbb
rorb
and
adc
dec
jge
and
mov
or
xor
and
rcrl
cmp
stc
mov
sahf
sub
jge
sub
or
call
push
or
popl
hlt
xchg
mov
popa
mov
movsb
mov
pop
jnp
sarb
xor
gs
lea
inc
fnstenv
shll
aad
or
adc
sub
lock
jno
jo
adc
enter
jg
adc
mov
mov
aas
enter
pushf
test
inc
lcall
std
aas
cli
sub
pop
push
int
mov
mov
enter
cmp
push
xchg
xchg
test
sbb
pop
aaa
push
mov
add
call
movsb
jae
daa
cmpb
leave
xchg
pop
insl
sbb
sbb
cmc
popf
lods
cs
xor
xchg
push
insb
push
fsubrp
test
cmp
addr16
sbbb
ds
inc
xchg
or
nop
mov
inc
cld
call
mov
cmpsl
lods
jmp
add
lcall
sbb
lods
cmc
pushf
sbb
mov
lods
decb
lods
or
out
test
adc
stos
push
cmp
pop
mov
in
in
push
fcompl
ljmp
mov
pusha
push
adc
mov
pop
add
mov
inc
inc
sar
inc
fisubrl
or
sub
bswap
fldenv
pusha
pop
imul
ss
daa
mov
imul
and
shrl
je
cmc
add
cmp
add
mov
ret
xchg
add
jbe
adc
rcl
rcrb
mov
cli
fisubl
and
cmp
lods
and
jg
pop
in
scas
fs
dec
popa
xor
jecxz
cmp
adc
xor
scas
ja
mov
jno
inc
and
xor
mov
fdivrs
or
jo
add
sbb
or
in
xchg
jbe
add
mov
xchg
outsb
cmc
mov
int3
cmp
jp
outsl
call
test
or
sub
dec
lcall
cmc
jno
popf
adc
mov
adc
frndint
nop
cmp
push
push
add
gs
push
sbb
scas
mov
mov
mov
fucomip
clc
and
sarl
push
jno
mov
jle
cmpsl
aaa
sarl
add
push
test
sahf
aaa
push
dec
cmpsl
int3
push
or
subl
in
or
test
push
imul
ficomps
mov
push
iret
mov
add
out
sbb
cld
mov
add
add
lea
jle
mov
imull
jbe
xor
mov
cmc
push
pop
movsl
icebp
mov
cltd
sbb
mov
mov
sub
roll
xchg
jge
leave
loope
sub
push
or
popf
in
mov
lock
test
inc
dec
xor
fadds
inc
pop
fisubrs
inc
or
sbb
es
or
int
sbb
add
xor
push
ds
fists
pop
cmpl
jno
es
imul
shr
jo
aam
test
stos
mov
lret
idivl
inc
inc
fcoms
sub
sahf
ja
jno
cs
leave
fcmovnbe
fdivs
cmp
adc
popf
fs
lret
lcall
cmp
cmp
inc
bound
sbb
lds
stos
cld
fstpt
fwait
ss
adc
ja
sbb
inc
sbb
sub
mov
jae
mov
aas
adc
xchg
add
sahf
test
shlb
sbb
sub
test
cmp
leave
lcall
xchg
jl
mov
scas
addr16
xor
out
mov
dec
out
xchg
and
adc
mov
push
adc
sbb
icebp
cmp
mov
dec
dec
mov
mov
imulb
lock
add
jbe
mov
jge
cltd
and
cmp
js
jecxz
es
sub
mul
jcxz
mov
fdivs
imul
aaa
mov
inc
and
nop
adcl
scas
lret
stc
ja
out
add
stos
xchg
in
pusha
dec
inc
and
test
jp
xchg
arpl
cmpsl
jp
pop
cmp
or
divl
cmpsl
sti
dec
std
jl
sbb
push
cld
or
dec
xor
notb
ficoms
into
pop
es
inc
xor
add
addr16
push
and
push
xor
call
xchg
adc
sbb
cmp
call
shlb
loopne
jno
leave
fnstcw
lods
push
out
inc
repnz
aam
aaa
mov
xor
mov
jecxz
in
cmpsb
mov
gs
test
sbb
jecxz
dec
mov
adc
loop
shl
and
and
fwait
shlb
xchg
jp
mov
lods
lock
nop
xlat
inc
sub
in
mov
jl
mov
pusha
lcall
fstpt
inc
push
or
xor
arpl
dec
fsubr
sbb
inc
pop
jo
in
xor
iret
shll
inc
fucom
stos
sti
xchg
pushl
and
cmpsl
ret
or
pop
or
pop
or
jge
cs
sbb
or
test
inc
mov
mov
push
lods
lahf
xor
pushf
mov
clc
and
mov
in
ss
bnd
pusha
push
inc
cld
lcall
mov
ja
push
mov
inc
call
lods
icebp
shlb
fsts
js
jge
rcl
add
loope
mov
notl
imul
rcll
xchg
popf
scas
enter
sub
test
xor
popf
rol
xchg
cmp
jmp
push
in
mov
xor
pop
pushl
dec
push
dec
pushf
push
sub
stos
adc
inc
in
loop
outsl
ret
shrb
in
push
addl
rcll
jle
icebp
and
jo
add
lcall
in
call
popf
sub
outsl
xor
and
addb
scas
push
mov
xchg
sbb
push
push
pop
cmc
outsb
inc
in
fcmovnu
jl
fdivrl
or
cmp
dec
mov
sarb
mov
in
std
mov
fidivrl
xchg
mov
jne
rorl
test
add
sti
sub
pop
mov
mov
jmp
mov
loope
mov
orl
or
lcall
sbbb
xchg
cmc
in
nop
dec
sbb
arpl
rcll
sysret
mov
test
fwait
es
mov
sti
mov
popa
clc
rolb
das
addr16
je
popa
push
pop
mov
les
xchg
xor
and
inc
scas
xor
or
or
jno
push
outsb
cmp
fldt
push
sub
jae
xor
sub
cld
or
sub
aas
dec
mov
add
adc
or
push
add
dec
dec
mov
gs
shlb
and
ss
add
popa
cli
adc
xor
in
adc
mov
or
lret
lds
cwtl
jne
lds
add
inc
fisttpll
pop
sub
or
js
push
adc
movsl
push
jge
xchg
scas
minps
adc
fnsave
xlat
pop
in
repnz
jmp
pop
divl
inc
rorl
bnd
lret
imul
sbb
jo
nop
data16
lahf
pop
mov
inc
fcoml
aam
push
mov
sbb
fwait
xor
and
xchg
sub
sbb
adcb
fdivl
sahf
in
dec
dec
jno
inc
mov
add
adcb
mov
cmp
aam
pop
test
inc
or
sub
out
sub
mov
mov
inc
in
jl
addr16
xchg
pop
jno
adc
push
dec
pushf
fs
outsl
popf
jo
ret
mov
sbb
sbb
pop
insb
stos
fdivrs
or
or
insl
jns
mov
or
daa
imul
clc
cmp
xchg
xchg
mov
sbb
test
repz
xchg
fcomip
jle
ret
sub
mov
movsl
inc
xor
std
sub
out
fsubrl
lods
mov
lods
cli
pusha
out
dec
jno
in
icebp
pop
arpl
in
insb
inc
push
sahf
call
jecxz
sahf
lods
cwtl
mov
dec
jmp
icebp
shrb
test
fs
adc
popf
xchg
sbb
mov
mov
inc
insl
fldenv
jbe
adc
jge
ss
xchg
out
xchg
cmp
loope
imul
or
jge
push
mov
cwtl
mov
ret
or
rcr
sbb
push
movsl
inc
cmp
lods
sti
outsb
pop
jle
scas
sub
subl
call
out
popl
cmp
sbbl
leave
and
push
faddl
push
js
subl
dec
dec
fbstp
loop
out
es
xchg
in
outsl
arpl
dec
or
jge
push
mov
fadd
data16
xchg
fs
data16
pushf
mov
mov
add
or
sahf
push
rcll
imul
dec
push
jo
jne
pop
cmpsl
push
push
add
daa
fsubrs
mov
loopne
rclb
inc
cli
addl
jne
jg
les
mov
mov
pop
ret
mov
and
data16
mov
dec
jg
cwtl
and
inc
pop
xor
jb
loope
cld
lcall
in
xchg
jo
jo
mov
out
jno
ficompl
mov
and
out
leave
addl
adc
xor
push
icebp
xchg
loopne
xor
mov
aaa
mov
push
xchg
daa
jne
push
fnstenv
loop
std
push
push
cmpsb
jecxz
xor
enter
and
or
sub
hlt
pop
xor
negb
mov
add
sbb
lea
andl
push
mov
xchg
repz
pop
gs
in
sarb
in
mov
mov
and
push
xor
test
in
push
mov
adc
mov
into
imul
cmp
std
mov
or
orl
lock
andb
clc
dec
fucomip
fbstp
lock
add
xchg
pop
jle
cmp
popf
call
dec
lret
ljmp
insb
imul
rolb
sahf
lock
stos
and
sbb
mov
jle
scas
xchg
sub
push
leave
inc
fdivrp
push
sbb
je
call
xchg
sahf
cmp
inc
mov
gs
xor
cli
mov
outsl
inc
stos
inc
ja
pop
add
xchg
ret
clc
in
add
adc
xlat
test
testl
add
push
mulb
mov
lret
inc
ds
lds
pop
lods
mov
push
mov
mov
xchg
in
or
mov
inc
dec
and
or
adc
rcrb
push
xlat
lods
jnp
loopne
lret
xor
int3
adc
je
add
mov
mov
int3
xor
fcompl
int3
arpl
in
push
cmp
por
jbe
arpl
and
lahf
mov
inc
jecxz
and
mov
in
jge
call
mov
xor
ficoml
push
jae
cld
xchg
mov
push
test
pop
sbb
lret
mov
sbb
fwait
sbb
dec
cld
enter
pop
imul
xor
enter
xor
imul
push
call
or
push
pop
sti
pushf
inc
clc
in
inc
movsl
loopne
dec
in
sbb
sub
cmpsl
cltd
cwtl
stos
clc
mov
mov
into
inc
sub
dec
push
stos
ds
inc
das
xor
mov
sti
add
and
lock
jns
std
pop
jbe
pop
sahf
sti
or
in
repnz
add
iret
jne
xor
fs
jbe
mov
adc
pop
repnz
and
cmp
dec
push
stc
cmp
shlb
xchg
pop
adc
jnp
cmp
aad
cmc
dec
pusha
das
out
fnsave
mov
out
ret
ret
xchg
sub
cmc
add
cmpsl
inc
and
rclb
ret
pop
and
lahf
test
loope
dec
leave
es
aaa
dec
sbb
call
pop
sub
mov
add
pop
sub
adc
leave
stc
bndstx
cmpsl
ffree
arpl
and
and
ret
rcll
pop
fsubs
into
mov
ss
dec
out
sbb
iret
fwait
cmp
pop
ror
jae
outsb
jp
mov
mov
xlat
dec
pop
or
rcl
dec
push
cltd
dec
bound
cltd
inc
or
movsb
push
daa
leave
pusha
pop
mov
lret
sub
sub
rol
lcall
rol
pop
ss
rorl
leave
rcr
adc
fwait
lds
jmp
pop
lea
push
pop
add
push
jl
sub
enter
in
cwtl
js
lret
in
mul
xchg
mov
or
fs
adc
xor
push
sti
sbb
jbe
jmp
test
shrb
push
scas
les
xchg
add
or
sub
bound
sbb
inc
pop
cmp
shrb
pop
xor
mov
or
mov
cmp
inc
int3
add
fdivrl
mov
addr16
push
lret
sub
imul
inc
sbbl
or
iret
rcrl
jle
push
mov
sub
sbb
js
dec
ret
xchg
pop
sub
repz
cltd
in
test
push
inc
dec
dec
jmp
ja
adc
cmp
out
and
and
jne
arpl
popa
xor
or
fs
sbb
scas
jo
jbe
or
stos
push
mov
fnstcw
inc
push
xchg
loop
cltd
xor
cwtl
fwait
out
mov
ss
sti
rclb
dec
outsb
mov
loopne
cmp
in
cmp
sub
xchg
inc
xor
aas
pop
dec
fiaddl
push
and
add
js
mov
das
cmp
jns
cmp
mov
jl
jnp,pt
call
and
mov
push
or
push
pop
mov
xor
xor
test
mov
orl
xchg
push
fs
add
bound
cltd
add
aaa
ret
and
jle
mov
jb
test
lods
jmp
lcall
cmp
rolb
out
xor
out
push
adcb
pop
pop
iret
mov
push
mov
inc
fucomi
out
movsl
shl
xor
addr16
and
mov
xchg
pop
sub
out
lods
aas
cmpsb
inc
xchg
mov
fs
out
fwait
jne
cmp
subl
cwtl
imul
pushf
cmp
nop
icebp
mov
jns
push
mov
and
out
fcmovnu
sub
inc
push
lcall
sahf
xchg
and
adc
das
jnp
or
test
repnz
dec
add
mov
sub
sbb
or
fidivrs
xlat
into
into
fs
cmp
xlat
clc
dec
outsb
xor
and
sub
imul
sbb
das
push
mov
divb
arpl
scas
out
xor
rclb
nop
mov
mov
inc
lock
push
clc
adc
push
pop
cmp
sqrtps
je
std
sbb
gs
or
out
test
addr16
sbb
in
jnp
xchg
bts
in
xor
push
jo
adc
add
loop
adc
jg
push
divps
lret
imul
xchg
and
call
cmc
sub
xchg
and
adc
dec
jbe
in
ds
push
bound
jl
sbb
test
mov
fiaddl
mov
cmp
movsb
xchg
xchg
add
in
test
cwtl
insl
mov
sarb
loop
cwtl
jmp
push
inc
pop
out
rolb
mov
xchg
push
aam
xor
dec
mov
pop
cli
out
mov
dec
push
call
std
lahf
outsl
sub
aaa
mov
outsb
test
cwtl
daa
dec
stc
adc
adc
ss
lret
sub
sub
pop
push
lds
cmp
js
sbb
and
jno
stos
out
das
ljmp
or
test
mov
pop
jmp
into
xchg
add
insb
popa
clc
inc
lods
pop
mov
dec
in
jae
aas
xchg
into
in
mov
xchg
push
in
sbb
mov
push
xor
dec
out
je
mov
adc
dec
sbb
les
std
xchg
push
daa
xchg
xor
mov
push
fldt
arpl
pushf
sub
enter
xchg
xor
mov
fnsave
or
mov
jne
xor
js
mov
push
inc
inc
lahf
repnz
lds
push
inc
pop
arpl
fsubl
aad
pop
xor
scas
mov
fwait
xchg
andb
add
inc
dec
lods
inc
cmp
cmp
xchg
ja
addb
fs
bound
imul
dec
mov
in
add
ja
dec
mov
aaa
addr16
or
insl
mov
jg
nop
mov
add
cltd
inc
push
test
rcr
mov
or
xchg
jle
pop
pop
movsb
pop
dec
and
sub
pop
sbb
outsl
mov
pop
imul
mov
out
mov
fisubl
cmp
xor
jne
pop
out
inc
xchg
scas
aaa
mov
jbe
xchg
shlb
imul
xor
mov
inc
push
jp
push
pop
dec
enter
mov
push
in
mov
movsl
mov
repz
xchg
mov
test
cs
popf
push
xlat
das
and
and
jno
xor
jo
push
mov
sbb
jb
push
or
and
mov
push
iret
dec
xlat
addr16
scas
stc
sub
inc
pop
mov
clc
out
adc
rcrl
mov
lcall
and
incb
das
xchg
incb
fsubp
jg
test
mov
push
mov
sub
push
jb
push
jo
xlat
rcrb
scas
pushf
pop
mov
xor
mov
mov
js
xchg
lcall
mov
push
adc
push
pop
out
add
add
push
shlb
pusha
outsl
ret
inc
shr
cmp
in
sbb
or
data16
push
rcl
jp
add
jns
cwtl
je
xchg
loop
push
fadds
lcall
cli
pushf
or
sbb
sub
jnp
pushl
pop
mov
cwtl
scas
mov
adc
popw
scas
cmp
testb
jle
pop
sub
jno
add
dec
fistps
lcall
cmp
out
rorb
dec
repz
fidivs
xor
xchg
rorl
outsl
jnp
fldt
lret
ja
cs
lock
xchg
xchg
les
sbb
add
clc
mov
out
pop
insl
jg
lahf
cmp
data16
mov
or
xchg
stc
push
add
or
shll
ljmp
out
sub
cld
xor
add
insb
bound
testb
incl
das
test
sub
loopne
dec
pop
ss
or
mov
arpl
jge
leave
fistpl
push
es
mov
push
xchg
cmp
pop
notb
cli
loopne
lea
cmp
sbb
arpl
repz
push
fcoml
mov
xchg
aaa
aaa
and
gs
jbe
push
inc
and
sbb
and
sbb
jo
dec
mov
pop
mul
jne
lahf
push
stos
jbe
cmp
fisubs
into
faddl
mov
jbe
or
inc
imul
mov
fstpt
orl
add
push
xorl
adc
lods
jmp
pop
lss
mov
imul
pop
shll
cld
mov
xchg
outsl
inc
xlat
icebp
dec
pushf
and
aad
add
addr16
cwtl
sub
aas
outsb
push
mov
cs
out
sbb
loop
fwait
push
mov
jl
lret
sahf
shl
lds
fyl2x
clc
out
xor
adc
enter
clc
adc
shl
inc
adcl
xor
and
inc
xchg
xchg
inc
push
test
push
add
jb
nop
subl
rcr
int3
mov
scas
pop
cmc
cmpsl
or
push
fcmove
in
adcl
xlat
shlb
imul
ss
fiadds
xchg
dec
cmpsb
or
popf
ss
adc
or
es
and
test
sub
dec
test
xor
pop
adc
dec
adc
lock
pushf
and
mov
shrl
sub
neg
mov
mov
or
and
jecxz
push
rorl
mov
pop
das
enter
lret
xchg
loope
add
sbb
inc
cmp
xchg
lods
push
sahf
in
std
repnz
lock
ret
inc
es
jg
xlat
out
add
call
imul
lods
ja
jb
add
or
loope
sbb
adc
jnp
pop
cmp
pop
mov
insb
idivb
jecxz
call
int3
add
lds
xor
insl
xchg
push
dec
loop
in
hlt
iret
push
sub
cmp
rorb
adc
mov
mov
sbb
mov
into
mov
call
push
fwait
mov
mov
shlb
cmp
into
xchg
cmpsb
or
daa
inc
ljmp
sub
dec
call
inc
fidivl
mov
adc
mov
daa
shrb
mov
or
scas
fwait
ret
rcl
pop
testl
push
dec
sbb
inc
mov
test
arpl
mov
push
xchg
testb
daa
lret
arpl
push
je
lea
or
and
test
sbb
mov
sub
repnz
or
push
jae
inc
pop
test
lret
jae
jno
jne
lds
cmpsb
mov
mov
popf
xor
add
sub
mov
xor
daa
out
inc
and
bound
jp
pop
shrl
insl
and
fsubrs
test
in
xchg
pushf
xchg
out
cmpl
pop
push
fisubs
push
lods
lods
test
pop
rclb
push
insb
call
or
fildl
mov
jmp
lods
scas
pop
sub
cli
push
xlat
mov
popa
jb
pop
mov
bound
xchg
aad
sbb
mov
dec
insl
pop
inc
fstps
stc
xchg
xor
out
fldcw
inc
pop
or
xchg
bound
in
loope
cwtl
lahf
inc
lcall
cmpsb
std
pop
addr16
cmpsl
fmull
cmp
cmp
xorl
fs
movsb
repnz
outsb
and
fcmovnbe
stos
mov
push
repz
aad
cwtl
daa
adc
inc
dec
sub
inc
lds
je
lret
movsl
pop
imull
jb
mov
imul
xchg
nop
dec
sbb
scas
jmp
xor
and
xchg
daa
cld
push
je
xor
ds
pop
pop
cmc
adc
sub
lods
jo
ja
push
push
cwtl
out
popf
sti
and
adc
sti
mov
sub
clc
add
out
daa
test
frstor
mov
mov
fildll
test
lahf
iret
lcall
fucomp
jbe
inc
lods
jne
sub
int
jo
adc
add
mov
mov
fiaddl
mov
sti
data16
sub
nop
sub
mov
cltd
cmpsl
fcoml
push
out
jge
mov
outsl
outsb
add
mov
fidivl
repz
cmp
pushf
push
repz
jbe
jle
cmpsb
cs
xor
inc
stc
pop
int3
and
scas
add
dec
mov
out
sub
adc
mov
jmp
jae
mov
lods
ljmp
call
jmp
mov
fcmovne
mov
mov
in
mov
push
pop
or
clc
stos
mov
inc
adc
aaa
int
mov
push
xchg
in
into
mov
push
push
xor
pop
rcll
add
inc
cmp
add
mov
in
lods
push
cwtl
or
and
push
jno
xchg
ja
and
out
mov
mov
lock
outsl
sub
xor
cli
sub
into
jno
popf
cmp
xchg
xchg
pop
ds
aam
adc
sub
sbb
ret
pop
sub
enter
adc
in
das
inc
mov
pop
cmp
cmpl
mov
rol
data16
cmpsl
lcall
shll
mov
sub
sub
idiv
pushf
pop
mov
xchg
mov
data16
fs
or
jns
add
and
sbb
cmp
jecxz
cmpb
lret
imul
aaa
orl
sar
subb
push
sub
outsl
sti
xchg
xor
lea
movsl
pop
cmp
adc
push
mov
sbb
xor
sbb
and
cmp
jl
pop
es
add
subb
sbb
pop
imul
cmpsl
mov
nop
mov
dec
add
xchg
xor
sbb
div
pushf
scas
mov
lahf
push
test
xchg
sub
mulb
aas
fcomip
and
movl
icebp
out
rcl
jns
addr16
or
mov
cld
xchg
mov
hlt
push
push
adc
jge
into
mov
cmpsb
push
test
or
mov
mov
scas
shlb
js
imul
les
add
test
shl
sub
movsl
xor
jns
aas
ret
ss
xchg
out
in
cs
adc
jp
pop
jl
out
scas
mov
mov
jl
mov
add
pop
sub
iret
aad
mov
add
push
or
jg
or
add
sub
lea
jge
add
mov
pusha
in
iret
lock
es
mov
dec
mov
sti
les
andb
fwait
mov
inc
lea
push
loop
stos
jg
fwait
push
jne
add
jno
and
in
push
sar
push
jno
mov
mov
add
jmp
cmp
sub
fisubs
insl
mov
fistpl
jp
rcr
stos
stc
es
inc
jae
imul
push
adc
sahf
push
and
cld
stos
mov
push
outsb
lret
jae
ficompl
cltd
sub
add
dec
sti
rcrb
push
sub
sbb
jle
fidivs
push
in
mov
lods
out
dec
dec
add
mov
inc
jl
std
lods
fs
mov
not
cmp
mov
sub
movsl
lea
lds
mov
fsubl
push
jl
sub
xor
rol
fnstcw
xor
fldl
fldt
ret
add
sub
ljmp
adc
mov
cmp
daa
clc
lahf
jno
sbb
aaa
push
mov
nop
int
mov
or
imul
dec
mov
pop
sbb
sbb
insl
sub
fwait
jge
adc
xchg
push
es
mov
ror
sbb
aas
test
adc
bound
inc
es
call
stos
aam
add
jo
push
lea
fucomp
cmp
adcl
loope
out
sbb
mov
lods
inc
xorb
cmp
cs
repnz
add
in
stos
rcll
mov
fldt
push
loop
mov
and
push
cld
cmc
xchg
aam
ret
cmp
jb
iret
fnstenv
dec
in
cli
pop
loopne
nop
es
mov
xor
mov
rol
pop
ret
mov
dec
mov
xchg
dec
xor
out
sbb
cmpsb
dec
mov
popf
sub
or
outsb
mov
cmp
cmp
aam
pop
push
fdivs
cmpsl
xchg
mov
jne
jo
popa
jns
push
push
scas
jg
xchg
js
pop
and
les
jl
add
sbb
push
pop
nop
les
inc
std
stc
movsl
push
or
enter
and
push
cmc
push
outsl
lret
xor
test
pop
mov
subl
nop
daa
hlt
dec
mov
inc
aad
cmc
adc
jmp
sbb
adc
aaa
std
push
lock
ja
xchg
pop
lret
sbb
pop
lret
sub
into
fldt
loopne
mov
mov
dec
std
cltd
test
inc
xchg
adc
ds
xorb
data16
xlat
adcl
out
pop
ljmp
mov
cmpsb
inc
xchg
pop
add
into
in
in
into
mov
add
jns
push
jecxz
cmpsl
dec
incb
lods
inc
adcb
loope
repz
fstl
sub
sbbl
ja
jb
pop
xchg
xlat
push
stos
aas
in
in
mov
shll
cs
jae
push
test
test
outsb
stos
aas
mov
xchg
adc
test
push
aam
push
hlt
out
add
inc
hlt
adc
dec
add
inc
adc
sahf
addr16
jl
push
cmp
dec
daa
xchg
inc
inc
add
fisttpl
mov
rcrb
sahf
insl
setb
test
mov
adc
push
rcrl
push
cltd
mov
jno
jle
stmxcsr
mov
dec
mov
decl
jmp
loope
dec
andl
neg
mov
pop
mov
mov
sbb
dec
pop
push
push
fs
and
aaa
cmp
inc
test
lret
imul
lret
std
jne
bound
pop
movsb
mov
sarb
mov
int3
pop
cmpsl
addb
lahf
xlat
lcall
and
mov
push
inc
dec
xor
and
dec
sbb
test
jbe
xor
cwtl
stos
insl
pop
aas
jbe
jp
jmp
scas
test
jne
mov
dec
pop
cmc
cmp
aad
adc
jo
xlat
movsl
outsl
sbb
hlt
pop
fdivs
loopne
out
fisttps
fcoml
stos
in
and
pop
bound
mov
inc
out
sti
pop
je
cmp
mov
pop
jno
das
mov
icebp
mov
lods
cmp
rcr
fadds
add
cmp
aaa
push
sbb
lcall
push
sub
jae
sahf
es
and
enter
sub
shll
pop
fidivs
and
cwtl
xlat
cld
xchg
in
inc
popa
pop
push
sbb
xchg
push
mov
jmp
mov
adc
add
test
mov
loope
xchg
ss
addr16
arpl
iret
out
out
sbb
sub
mov
scas
call
sarb
sbb
loopne
out
mov
les
outsb
ret
sbb
loopne
sbb
loopne
cmp
iret
or
xor
in
add
xor
xor
leave
inc
gs
into
loop
or
add
mulb
loop
pop
test
sahf
pmulhuw
add
add
push
hlt
jns
and
fs
push
adc
mov
xchg
dec
outsl
in
cmp
push
scas
add
jbe
pushf
je
loop
mov
jle
jns
fistl
inc
mov
test
fldcw
sbb
cmc
jne
icebp
mov
in
mov
pop
inc
push
out
mov
fistl
mov
inc
cmp
cmp
xchg
pop
inc
inc
leave
mov
outsb
mov
lret
mov
out
mov
xchg
std
aam
push
mov
inc
popa
into
lcall
sbb
shl
add
adc
cltd
push
lea
in
lods
mov
outsb
jae
or
test
cmpsb
sbb
jae
sub
mov
pop
sub
push
lods
pop
lock
and
ret
mov
repz
imul
imul
add
das
jbe
or
dec
fwait
aam
sbb
aad
popa
aas
adc
push
push
push
inc
scas
mov
adc
je
fsubp
loop
mov
leave
or
cmpsl
sub
pusha
rclb
adcl
adc
lret
sti
mov
push
push
mov
jnp
add
dec
dec
ror
scas
in
ds
push
mov
pop
insb
pop
mov
mov
fsubrl
cld
rorl
pop
lock
les
adc
std
mov
aam
pop
push
xchg
push
jne
cmp
shrb
fs
push
xchg
add
push
rolb
adcl
and
fbld
pushf
jne
mov
adc
inc
shrl
fwait
push
pop
pop
call
push
inc
xor
jnp
lods
pushf
mov
mulb
sti
mov
ljmp
inc
mov
sub
icebp
mov
dec
pop
movsb
icebp
and
fimuls
lret
sbb
push
in
sti
mov
lahf
push
lods
mov
sub
dec
ret
cmc
dec
sbb
push
sahf
daa
iret
push
or
insb
lock
sbb
pushf
fcoms
jno
jno
out
stos
inc
pop
cltd
inc
mov
mov
pushf
xchg
jle
dec
mov
add
dec
mov
cmp
xchg
or
dec
repnz
or
popa
fldcw
mov
out
add
test
in
pop
xchg
scas
es
mov
fisubrl
cli
or
lock
cltd
fstpt
xchg
pushf
mov
lods
push
es
pop
mov
ljmp
out
mov
inc
mov
loope
pop
xchg
xchg
out
test
mov
jl
xchg
adc
mov
xor
test
mov
cmpl
xchg
fldl
cmp
enter
jecxz
push
dec
rorl
imul
xor
scas
jge
xchg
outsl
rorb
xchg
push
cmp
outsl
ja
inc
xor
xchg
mov
pop
add
jge
pop
mov
aas
mov
cmp
insl
sub
scas
hlt
cs
xchg
lcall
add
push
aad
jg
jl
testl
mov
or
aas
cmp
shll
add
addr16
mov
pop
scas
vcvttps2dq
mov
mov
jecxz
xchg
shl
ss
outsl
stos
popa
pop
iret
push
sbb
inc
shrl
xchg
pop
imul
add
xorb
nop
lock
cmp
mov
shl
imul
lock
leave
fdivs
pushf
cltd
inc
popf
arpl
into
js
cmp
inc
addr16
in
bound
popf
daa
xor
add
jns
and
fistl
cwtl
lods
or
icebp
cmp
pop
add
or
popa
mov
data16
xor
mov
mov
stos
jbe
inc
push
fs
and
enter
pop
call
imul
sub
cmp
lods
ss
mov
fwait
sbb
jge
popa
mov
idivb
cmpsl
das
sub
jge
cmp
int
xchg
scas
clc
iret
int
iret
xor
mov
mov
inc
xchg
movsl
mov
and
cwtl
incl
arpl
loopne
pop
or
ret
aam
daa
pop
mov
mov
loopne
out
test
mov
xor
rolb
adc
cmpsl
shll
sbb
push
cmp
add
push
pop
mov
stc
leave
fnstenv
clc
add
sbb
or
mov
divl
enter
sbb
cltd
imul
or
stos
mov
and
cmp
push
je
adc
popf
into
cmp
xor
ret
sub
xchg
nop
daa
fcmovb
xor
jns
scas
mov
inc
ds
jg
jo
cld
adc
stc
nop
cmp
pop
inc
cmp
je
jp
xor
sti
xchg
or
inc
movsb
sub
sbb
hlt
dec
jb
xor
xor
stc
nop
aad
sub
xchg
jg
sbb
sbbl
aas
add
cmp
and
int
test
je
clc
inc
adc
sub
in
xor
mov
or
pusha
les
or
fbstp
push
pop
pop
push
adc
mov
push
or
cmp
fwait
xchg
pop
in
xor
cmp
cld
xchg
push
sub
cli
sub
jnp
jbe
mov
sbb
test
out
insl
ret
rol
and
insl
inc
out
fists
xor
fucomi
sbb
lahf
repz
cmp
sbb
out
mov
inc
dec
cmp
pop
sub
pop
enter
stos
add
sub
jne
pop
cmpsl
add
testl
pop
push
mov
scas
xchg
ss
lcall
xor
pop
sub
in
and
or
fisttps
jle
lret
xchg
push
cmpsb
stc
ret
clc
pop
and
push
sub
cs
adc
cmp
test
inc
jge
xor
outsb
sbb
outsb
inc
dec
fstps
cmc
or
mov
fisubrs
add
decb
push
dec
loop
fsubrl
jmp
jno
dec
arpl
adc
lea
es
insb
and
inc
mov
test
sub
lcall
cmpsb
lret
and
test
outsl
outsl
test
ja
dec
mov
aas
push
iret
out
loopne
ror
arpl
mov
pushf
xor
add
adc
jmp
ss
and
jl
cs
jno
xor
dec
pop
lds
lahf
pop
and
shrl
push
xor
pop
push
mov
nop
popf
repnz
stos
mov
mov
mov
popf
int
movb
loop
push
push
push
ret
hlt
cmpsb
fidivl
pop
add
mov
scas
inc
pop
scas
mov
jmp
lret
sbb
and
lods
push
negb
push
sahf
mov
xchg
int
jno
test
divl
ret
stc
pop
and
inc
ret
ja
inc
cmpsl
in
dec
inc
shrl
add
es
pop
loopne
push
cltd
jno
xlat
repz
pop
cltd
xor
jo
mov
cld
ret
pop
in
xchg
mov
mov
ds
mov
not
aad
sub
cs
fs
ljmp
inc
push
jae
data16
ret
mov
das
aad
js
pusha
cmpsl
fstl
mov
pusha
rclb
jbe
stos
xchg
jne
push
xchg
out
xor
xchg
test
addr16
mov
ljmp
sub
enter
inc
mov
jae
loope
movsb
adc
aaa
enter
sbb
cmp
rcrb
pop
aam
jns
pop
insl
fimuls
clc
jmp
push
xor
xlat
outsb
ret
roll
pop
xchg
fst
outsb
adc
pop
xor
mov
mov
std
mov
popa
jnp
test
repz
inc
aad
jp
idiv
mov
sahf
cmp
push
mov
dec
pop
out
push
add
fadds
in
inc
sub
mov
int3
in
mov
cmp
test
lea
push
aaa
xor
out
addr16
pop
test
cmp
out
mov
inc
lret
jp
or
lds
jnp
das
std
push
fdivrs
imul
jb
inc
pushf
mov
fisubl
mov
lret
mov
in
cwtl
push
jp
push
lods
ja
scas
test
dec
pop
xchg
divb
mov
ds
in
test
sbb
xchg
icebp
xchg
ret
ret
andb
dec
push
mov
popf
mov
add
outsl
add
mul
fistpl
or
clc
out
xor
pushf
das
or
clc
iret
lock
daa
push
loope
int
add
jge,pt
add
cmp
or
jl
mov
mov
add
setge
push
mov
xlat
mov
fnstcw
push
sub
out
lea
jge
rol
sbb
jmp
mov
rclb
mov
jne
in
fstl
popa
xchg
ja
dec
dec
mov
sbb
addb
sbb
enter
pop
outsb
sahf
imul
popa
insb
add
xchg
sbb
xor
js
adc
inc
in
pop
aad
jo
sub
aaa
aam
add
mov
loopne
sbb
lret
adc
add
sbbb
ja
bound
leave
inc
popf
shr
movsl
imul
pop
mov
xor
mov
aaa
ret
lds
stc
inc
pop
cmc
xchg
loopne
xchg
adc
mov
nop
movb
mov
mov
fcmovu
imul
je
shlb
addb
sub
sub
push
mov
mov
loopne
popa
std
xlat
lods
das
mov
cltd
xchg
lahf
andl
add
xor
rorl
xchg
xchg
adc
push
aas
in
cmpsb
cmpsl
adc
hlt
xor
ss
loopne
mov
dec
lret
in
loopne
mov
xchg
push
lods
jl
pusha
andb
xor
inc
pop
dec
pushf
add
subb
sbb
or
icebp
mov
jle
icebp
scas
mov
in
or
and
ss
add
mov
in
in
movsl
je
sbb
out
mov
lock
movsb
insb
add
dec
cmp
inc
mov
in
popa
and
pop
gs
ror
adc
ljmp
push
pop
out
out
sub
inc
xor
or
inc
mov
mov
adc
mov
mov
adc
scas
mov
jp
sub
sub
dec
movsl
lds
fisttps
fildl
iret
pop
movsb
jne
and
inc
sbb
aaa
push
ret
arpl
mov
mov
cmp
push
jge
negl
gs
cmp
sarb
rcl
push
rcl
shrb
mov
mov
insl
out
sbb
pop
sbb
shrb
pop
push
movsl
mov
cmp
push
jmp
adc
push
int3
push
es
jne
xchg
in
call
lahf
cli
ret
push
test
mov
jo
sbb
cmp
jnp
or
test
adc
mov
inc
adc
hlt
pop
and
and
inc
popa
clc
xchg
mov
adc
and
cmp
js
cmpsb
adc
push
mov
pop
movsl
push
cwtl
movsl
mov
pop
cmpsb
lock
lock
mov
fmuls
or
mov
leave
cmp
xor
sub
ja
pushf
test
jp
int3
aam
add
in
pop
sahf
loopne
test
popa
xor
mov
push
out
xchg
inc
ja
popl
add
cmp
cmp
pop
mov
in
stos
inc
push
insl
jl
add
xor
add
inc
in
mov
mov
insl
insb
std
dec
dec
inc
dec
in
xchg
pushf
das
mov
dec
loop
push
pop
addr16
push
testl
dec
addl
mov
out
popa
push
xchg
imul
nop
daa
mov
notb
test
int3
fs
pop
int
jmp
leave
out
in
pushf
out
aaa
sbb
stc
test
fisubrs
shufps
in
int3
pusha
inc
cwtl
xlat
outsb
and
fwait
xor
mov
shr
je
sbb
pop
adc
cmp
xor
and
xchg
popf
xorl
cmc
movsl
mov
jne
lahf
add
pop
cmp
mov
lea
cmp
jae
cmp
pop
fbld
sbb
in
sbb
mov
mov
stos
inc
popf
adc
scas
mov
xchg
add
adc
push
inc
adc
orl
dec
fadd
iret
into
jno
into
out
lahf
push
outsl
ror
insl
shll
pop
ficompl
jns
inc
lcall
and
xor
lods
lds
and
or
cld
mov
ljmp
mov
or
xor
inc
sbb
cmpsl
adc
mov
pop
cli
in
mov
dec
mov
jae
cmc
mov
mov
fucomip
jg
test
or
ds
out
loop
lret
lea
mov
add
fidivrs
fsubrl
int3
sub
in
rcl
cli
popa
adc
shll
icebp
negl
adc
in
out
stc
ficoms
imul
pop
adc
ret
dec
jle
sub
rcl
sub
call
dec
xor
les
mov
popa
ss
enter
lret
push
sub
lods
adc
xchg
jmp
rorl
scas
pop
loopne
jnp
pop
inc
in
xorl
movsl
popf
inc
fxch
lds
adc
loope
pop
mov
mov
jp
sahf
jb
dec
lahf
loop
jno
add
ret
xchg
stos
imul
gs
adc
pop
ret
push
xchg
mov
fistpll
dec
mov
lret
pushf
push
or
scas
jg
cltd
mov
mov
mov
mov
cmpsl
dec
fiaddl
xor
cmp
jno
push
addr16
popa
dec
mov
call
xchg
movsl
jo
mov
sbb
inc
sbb
adc
mov
lods
aas
inc
loop
repnz
xor
xchg
test
jge
movsb
mov
adc
fwait
insb
aam
push
fwait
add
cmp
or
cltd
mov
mov
int3
or
add
shrl
pop
dec
pop
je
clc
out
loope
xlat
or
xor
shlb
push
mov
or
icebp
mov
and
out
adc
dec
ja
adc
imul
xchg
sub
xchg
dec
mov
ja
push
push
jae
cmp
mov
cmp
neg
lcall
add
lret
imul
xor
in
aaa
fisttpl
aad
mov
fistps
adc
pop
aaa
outsl
inc
fsubs
dec
pop
imul
popf
xchg
jle
jmp
xchg
rcr
test
movsb
inc
in
jge
push
scas
or
fildl
dec
call
pop
xchg
cmpsl
mov
stos
pop
add
out
push
negb
es
cmp
xchg
cmpsb
mov
mov
cmpsl
adc
and
pop
rolb
in
stc
repz
and
test
sbb
xor
sub
mov
lret
stos
sti
scas
sbb
pushf
lods
icebp
movsl
addl
js
and
lods
psubusw
xchg
add
fistps
xchg
xchg
aad
or
xor
call
xchg
daa
jo
sbb
jp
je
xorb
dec
pop
add
mov
jns
or
es
push
push
sub
adc
hlt
jp
xlat
cmp
in
pop
add
fwait
xor
pop
cli
or
cmp
test
inc
fistps
adc
inc
aam
stc
inc
bound
shlb
xchg
push
pop
or
mov
ljmp
mov
leave
idivl
add
lret
dec
sbb
nop
mov
nop
stos
xchg
dec
stos
addr16
lds
or
jmp
call
fisubs
sarl
fsubs
aas
fimuls
xor
jecxz
xor
mov
loop
mov
fwait
pop
cmpsb
sub
sub
stos
cmp
cs
push
test
or
inc
mov
insl
sbb
inc
mov
sub
cmp
je
lcall
int3
mov
mov
sahf
pop
add
hlt
push
mov
pushf
dec
pop
mov
stc
or
pop
lret
js
and
push
lock
in
pop
mov
test
dec
dec
mov
cmp
movsl
notl
mov
cwtl
xchg
mov
mov
mov
push
fdivl
in
clc
cs
test
into
or
push
lock
and
movsl
insb
leave
pop
out
jmp
pop
xchg
or
in
test
or
cmpsl
sbb
fiadds
mov
inc
loopne
adc
mov
cltd
fmuls
mov
in
mov
inc
fdivl
push
fdivrl
mov
rorb
xor
arpl
jmp
sbb
js
aaa
add
add
pushf
dec
dec
xchg
adc
jmp
aam
mov
push
fnstenv
pop
shlb
lret
dec
popa
push
cmp
stc
mov
push
xor
xchg
cmp
fs
or
and
js
pushf
xor
cltd
mov
inc
ss
push
mov
sbb
push
or
loope
xchg
popa
pop
add
xchg
fidivl
adc
stc
or
xlat
into
mov
mov
jmp
fistpl
and
xor
pop
mov
enter
dec
mov
sub
lret
jae
jae
or
cld
dec
addr16
jle
pop
sahf
push
outsl
test
arpl
push
scas
mov
lahf
insb
lret
scas
mov
mov
jle
xor
aas
cmp
ljmp
ret
push
mov
dec
add
sub
divb
sub
shr
cmc
lahf
or
ja
cmp
sub
jecxz
jbe
inc
fmull
push
ret
sbb
pop
sbb
or
popf
pop
sarb
mov
faddp
mov
push
mov
sbb
imul
dec
add
cmp
fnstsw
stc
cmpsl
ds
outsb
stc
mov
int
lcall
sub
push
lea
les
push
add
xchg
sub
stos
ds
lret
mov
sbb
push
adc
lock
sub
dec
aad
cmp
idivl
inc
jne
adc
pop
cmpsb
xchg
or
jns
outsb
stos
jge
out
sbb
push
jne
dec
and
mov
arpl
jmp
and
les
inc
pop
cmp
lea
pop
or
mov
adc
icebp
adc
mov
ret
and
nop
add
out
mov
movsb
cmp
mov
fsubrs
xchg
repnz
notb
adc
loop
ss
hlt
xchg
arpl
ds
sub
inc
jns
sub
shll
out
cmc
gs
loopne
push
xor
mov
jg
mov
leave
jae
jg
cmp
mov
pushf
add
cmp
pop
insb
mov
hlt
lcall
repnz
mov
in
pop
negl
icebp
aaa
into
loop
es
movsb
jns
scas
jo
inc
dec
xor
jnp
add
xchg
push
lock
loope
dec
adc
pop
rep
xor
imul
mov
in
out
lahf
inc
lds
insl
xor
mov
pop
or
sub
insb
dec
les
and
fdivl
push
into
mov
inc
and
inc
push
js
or
fcmovnbe
sbb
mov
scas
insb
mov
inc
lea
dec
loope
ret
arpl
jl
add
nop
hlt
popf
rolb
fistps
adcl
loopne
insb
stos
cmp
sti
inc
fsubrl
add
bound
push
mov
bound
xchg
loope
adc
inc
data16
dec
fdivl
cmc
out
in
jecxz
mov
adc
xor
and
lahf
and
fwait
and
dec
icebp
cmp
add
dec
jne
dec
push
fmulp
call
inc
and
add
fnstsw
xchg
mov
pop
out
stos
or
xchg
mov
fildll
xchg
add
subb
mov
insl
add
sbb
je
dec
mov
push
mov
push
jmp
sub
push
and
into
inc
test
cmp
subb
adc
sbb
mov
lea
leave
push
dec
xchg
insb
daa
sbb
cli
mov
sarb
jno
adc
push
lret
push
ds
pop
mov
xchg
dec
xor
cmc
dec
jns
jecxz
sahf
insl
out
add
dec
jge
in
fwait
js
dec
fmulp
adc
mov
test
aaa
jb
je
cmp
inc
in
lods
insb
shrl
in
shll
ret
lret
dec
adc
push
push
out
loope
xlat
mov
pop
cmp
cld
mov
cs
lea
xchg
pop
icebp
push
inc
adc
jmp
xchg
outsb
or
lea
pop
les
push
mov
or
add
aad
fidivl
notb
sbb
clc
stos
inc
pop
mov
inc
dec
sub
stc
lret
and
int
insl
inc
lods
rorb
repnz
fidivl
sub
jle
insb
mov
xchg
ljmp
inc
cltd
xor
gs
xchg
pop
mov
nop
mov
sub
mov
mov
cmp
inc
gs
dec
cmpsb
dec
mov
jo
xchg
xchg
sar
xchg
xor
adc
dec
shrb
push
loope
jae
dec
int
sub
pop
lret
sbb
sub
xchg
mov
loop
cmpsl
adc
and
push
pushf
mov
out
xchg
adc
cmpsl
shrb
sti
jo
loope
sbb
pushf
add
fbld
mov
scas
xor
negl
xchg
xchg
mov
add
mov
test
mov
sub
fwait
push
out
fwait
cmp
in
mov
cltd
out
ds
gs
xor
repz
push
xchg
sub
es
insb
mov
popa
aas
cmp
iret
adc
aam
mov
out
mov
add
repz
sbb
pushf
test
sbb
and
ss
mov
ds
imul
loop
out
cmp
cmp
and
push
mov
fs
cmp
cmp
inc
nop
push
cwtl
mov
or
cmp
out
out
aam
jo
mov
dec
inc
add
xor
popa
dec
rol
pop
imul
orl
jecxz
cmp
add
jle
push
mov
mov
repz
jbe
add
fidivs
mov
or
fnsave
adc
fdivl
xchg
push
in
xchg
jl
cmp
pop
cmp
pop
das
push
call
mov
and
sub
cmp
sti
mov
mov
mov
push
jo
jge
jb,pt
dec
jno
adcb
inc
lret
push
push
arpl
jge
insb
push
jns
jae
arpl
add
inc
sub
and
movsb
cmp
sub
mov
mov
push
sub
jmp
adcl
cltd
dec
xchg
int
scas
mov
out
test
jo
cmp
jge
ds
add
push
lds
sub
dec
ljmp
dec
aaa
jmp
xor
jne
daa
cs
push
push
inc
xchg
sub
daa
push
rcrl
mov
jnp
pop
loope
mov
dec
jno
push
fnstenv
xor
mov
aad
loopne
jl
pop
mov
addr16
mov
enter
imul
jmp
call
sub
cmp
repz
popf
aad
inc
lcall
imul
adc
loope
clc
mov
sub
mov
repnz
sub
loope
and
mov
inc
pop
inc
push
jmp
jo
add
pushf
icebp
insl
repnz
mov
sahf
lock
lcall
lret
clc
and
inc
jp
jae
popa
clc
outsl
ret
out
or
sub
mov
repz
repnz
iret
and
mov
mov
test
cld
lea
in
movsb
out
cs
in
jnp
les
insb
push
pop
jae
shr
rorb
lret
into
sub
rcrb
push
cmp
sub
or
mov
dec
fmulp
jbe
jbe
aam
cmp
sub
push
jne
enter
mov
mov
mov
xlat
lods
add
mov
lea
movsl
stc
push
repnz
dec
lods
orb
adcb
aas
pushf
xor
das
or
aad
inc
inc
cmp
push
out
sbb
les
mov
mov
ret
xchg
mov
xchg
inc
and
sbbb
jb
std
fldt
mov
jecxz
jmp
imul
jae
mov
xor
insl
data16
es
cmpsb
loopne
inc
loop
dec
insl
stc
jns
imul
sub
sub
repnz
imul
cwtl
jle
shrb
pushf
xor
sbb
outsb
add
clc
push
pop
lds
mov
mov
mov
movsb
mov
cmpsl
and
pop
repz
into
jmp
jmp
ds
int3
lret
jmp
clc
push
ljmp
fisubrs
out
fidivl
int3
push
hlt
mov
loopne
push
filds
rol
add
sbb
es
test
test
or
leave
pusha
cld
cs
sbb
mov
xchg
or
cmpsl
nop
jmp
addl
jae
into
dec
cmp
scas
bound
cmp
push
pushf
jb
xchg
mov
popa
cmpsb
xor
cmc
dec
mov
push
jmp
fldcw
xor
xlat
das
cmp
inc
inc
pop
jo
xchg
imul
dec
es
cld
sti
lock
adc
jno
pushf
sbb
cmp
push
push
xchg
in
push
or
and
cmpsl
mov
push
xor
lods
outsb
lahf
fldt
in
mov
mov
add
cli
rcrl
mov
cmp
lret
push
fists
ljmp
call
jmp
loopne
jo
rcrb
or
inc
jge
adc
mov
cmpsl
lds
pop
dec
loopne
inc
shl
inc
add
xorb
shlb
sahf
and
adcl
fidivs
and
jnp
ja
lcall
aam
mov
es
sbbb
xchg
jge
jp
orb
mov
filds
out
xchg
pop
lods
xchg
andl
dec
or
je
lods
add
and
push
mov
adc
shll
add
sbb
ret
or
mov
mov
sub
movsb
cmpb
inc
ljmp
out
mov
lods
ja
ds
bound
movsb
adc
pop
dec
pop
cmp
popa
loope
js
mov
push
dec
mov
leave
cmpsb
cmp
xchg
mov
arpl
pop
repz
jo
cli
loop
jno
test
lcall
and
iret
push
push
xchg
aam
data16
data16
cmp
inc
or
std
mov
add
ja
mov
jae
xor
sbb
xlat
cs
insl
cmpsl
rcl
repz
sahf
cmp
out
shll
cltd
imul
jle
ds
sahf
iret
movl
lret
arpl
push
ret
or
adc
scas
mov
xchg
or
popa
lods
test
inc
push
movsb
jg
lea
sbb
xor
lods
lds
and
fwait
lods
out
vmwrite
dec
lods
add
cmp
sub
out
push
mov
xor
or
or
mov
push
mov
ret
pop
mov
jnp
pop
pusha
pop
cmp
mov
les
sub
adc
into
and
xchg
fnstsw
daa
mov
push
dec
push
sub
push
icebp
sarb
or
jg
lcall
and
mov
push
dec
lahf
cmp
cmp
xchg
inc
fs
clc
sahf
loopne
cmpsl
jno
test
or
aaa
push
incl
push
xor
hlt
jns
sub
dec
lods
jae
nop
insl
ret
xchg
pop
push
sbb
pop
xor
mov
push
xor
cmp
out
mov
mov
sub
inc
popf
cmp
frstor
push
push
idivl
sbb
divl
push
cmp
and
je
int3
inc
fisubrl
andl
bound
push
test
inc
hlt
cmp
push
lahf
lcall
adc
adc
mov
out
test
aam
mov
lds
test
sbb
push
xor
rorl
sbb
push
int
and
cld
les
sahf
stos
cmpsb
leave
sbb
bound
ret
cmc
jp
sub
dec
pop
inc
cmp
sbb
ja
pop
xor
imul
and
adc
pop
scas
sahf
loopne
stos
sbb
cs
loope
in
xorb
cli
mov
mov
loopne
dec
out
xor
loopne
jl
mov
push
addr16
test
je
pushf
push
out
int
jno
mov
call
outsb
mov
dec
loopne
stos
cmc
adc
cmp
fs
pop
clc
xchg
dec
aad
mov
addps
push
mov
mov
jns
lret
adc
lcall
fs
es
jle
jmp
outsb
lahf
and
inc
mov
cmp
xlat
jo
dec
movsb
lds
into
daa
mov
pop
fistpl
cmp
cltd
push
mov
mov
jne
mov
push
popf
lret
pop
icebp
xchg
sub
movsb
inc
sub
pushf
mov
add
pop
out
inc
sub
sbb
leave
cmp
fs
mov
push
mov
sub
add
xchg
popa
mov
fistl
test
mov
mov
in
add
dec
push
pushf
stc
in
movsl
fsts
loope
jmp
bound
jg
cltd
xor
jmp
mov
add
sar
xchg
out
cmp
mov
pushf
daa
hlt
pop
imul
mov
xchg
xchg
adc
movsb
add
add
aas
and
jg
sub
jl
mov
xor
inc
dec
test
push
cli
xchg
aas
cwtl
sbb
movsb
or
rol
repz
daa
adcb
js
sbb
xchg
sahf
int
in
sti
and
je
cmc
pop
add
sub
xor
cmc
mov
jle
dec
mov
sbb
dec
cmp
xchg
iret
int3
mov
lock
mov
mov
fcoms
mov
sti
jb
data16
mov
testl
pop
sbb
jmp
or
jmp
fmul
sahf
pusha
movb
enter
incb
sub
pop
push
fs
cmc
xchg
push
inc
pop
sti
add
mull
aas
sub
imul
xchg
idivl
pop
lods
loop
pop
mov
repz
inc
insb
cmp
mov
lods
xchg
stc
sti
arpl
cmp
jl
add
bound
add
dec
stos
pop
movsb
cmp
mov
loop
jg
sbb
aas
push
inc
add
hlt
stos
gs
dec
sbb
and
sub
jbe
cmp
out
fs
in
out
push
hlt
inc
int3
xchg
jae
stos
leave
cwtl
dec
cltd
push
cs
and
mov
cmp
outsl
fbld
mov
push
jge
xor
jmp
or
jle
push
lock
mov
mul
pop
int
pop
inc
push
jmp
dec
cmp
cmp
pop
and
pop
std
mov
ret
addps
sub
push
jmp
pop
cmc
test
push
jns
sub
cmp
and
std
int
push
sbb
dec
scas
mov
repnz
aas
into
aaa
push
ss
lds
adc
cmp
divl
or
mov
fld
pop
bound
xlat
outsb
and
int3
adc
test
inc
jmp
out
and
cwtl
sub
nop
pop
xchg
in
rolb
mov
pop
push
cmc
pop
scas
pop
cmc
jmp
or
cld
fs
push
or
sbb
fsubl
call
mov
push
divps
inc
xchg
clc
xchg
mov
push
xchg
sub
inc
sub
adc
insl
scas
repnz
dec
popf
mov
mov
mov
std
mov
test
sbb
cmpsl
std
adc
xchg
jmp
mov
mov
mov
cld
lahf
pop
movb
push
cmc
and
test
add
jle
fisttpll
mov
jecxz
mov
cs
push
pop
adc
jle
fsubrp
xorb
cmp
test
cld
lahf
inc
stc
in
insl
cmp
cmpsl
pop
outsb
xor
hlt
in
aaa
scas
mov
mov
inc
dec
mov
jnp
rcll
adc
or
shlb
mov
xor
div
movsb
fadd
add
shlb
sahf
lret
popa
rcr
data16
push
hlt
call
or
inc
xchg
mov
mov
pop
loop
cmp
push
jp
hlt
mov
jne
iret
cmpsb
push
sbbl
xlat
lods
cmp
and
xlat
daa
clc
das
mov
ds
mov
aaa
fs
loope
aam
adc
mov
notl
sahf
adc
int
fidivs
lea
xor
mov
adc
loopne
inc
aam
xor
addl
hlt
cs
sub
pop
sbb
pop
cmc
sub
xor
xchg
dec
jl
lahf
stos
lods
cmp
ss
or
cmpsl
mov
lret
and
sbbl
lret
jecxz
std
dec
or
enter
push
stos
mov
pushf
jl
jne
shlb
dec
inc
cltd
movsl
mov
or
add
test
arpl
nop
fwait
push
in
int3
std
push
lods
mov
je
fidivs
adc
scas
jns
mov
sub
repnz
inc
mov
les
cmc
mov
cwtl
jecxz
pop
sub
inc
pop
jbe
loop
rcrl
mov
mov
adc
in
xchg
mov
sbb
sub
cmp
push
ja
cld
inc
xor
in
iret
inc
sahf
mov
push
push
out
es
or
out
arpl
out
call
loopne
mov
inc
pusha
jo
data16
lds
mov
test
cmpsb
fisubrl
sub
test
jno
jae
lock
outsl
mov
adc
aad
stos
call
mov
aad
pop
jmp
add
sub
push
sbb
enter
xchg
jb
dec
push
push
pop
movsb
inc
loop
xchg
stos
mov
xor
sbb
jno
adc
jnp
pusha
adcb
adc
xchg
and
rcr
lahf
mov
jge
das
adc
inc
inc
dec
jno
insl
mov
ds
xlat
fnstenv
cmpsl
inc
callw
test
mov
mov
sbb
inc
gs
inc
mov
xchg
das
add
fidivrs
jne
pop
mov
pop
je
std
xor
mov
sbb
xor
mov
push
pop
mov
dec
fadds
pop
ss
loop
mov
mov
jle
cwtl
and
in
jle
jmp
mov
cmp
jl
out
sub
xchg
sbb
push
movsb
sub
mov
cltd
loop
ret
out
ret
jns
pop
push
and
jae
xchg
or
in
ja
fidivs
add
mov
lret
lea
mov
imul
cld
xchg
mov
cmp
jnp
xchg
mov
pop
data16
dec
add
jecxz
repz
push
in
push
pop
xchg
jbe
push
mov
or
jp
insl
add
sti
push
out
xchg
cmp
add
jns
movsl
cmp
out
jo
xor
mov
daa
enter
add
dec
inc
or
jge
imul
jae
push
in
rorl
sarb
cwtl
jmp
shlb
aad
and
jae
fisubs
dec
pop
lods
divb
xor
sub
adc
out
out
test
test
hlt
test
lods
imull
aaa
std
jmp
inc
pop
xor
and
mov
inc
xlat
aas
xchg
push
inc
fwait
loop
lret
lock
and
xor
mov
push
mov
test
pop
popf
and
repz
test
adc
aaa
in
cmp
fisttps
ljmp
or
mov
pop
test
push
pop
out
movsl
cmp
dec
imul
jmp
jne
lret
fwait
and
sti
push
adc
dec
push
mov
dec
cmp
dec
pop
cmp
bound
mov
sub
test
aam
xchg
mov
or
xlat
insb
jle
adc
push
jb
mov
pusha
bextr
xor
jp
stos
out
nop
repz
dec
in
std
rcll
aas
or
dec
mov
mov
lods
lds
call
daa
js
sub
cwtl
incb
insl
ja
out
test
adc
jl
jmp
stos
std
mov
mov
jne
dec
mov
outsb
stos
inc
mov
jne
pop
movsl
outsb
fwait
lret
fistps
mov
and
out
xchg
or
adcl
xchg
les
iret
movsl
sub
icebp
sub
cwtl
cmc
dec
dec
pop
lea
jg
insl
or
pmulhw
mov
aad
mov
lahf
inc
jmp
data16
mov
pop
jg
stos
mov
pusha
mov
pop
sti
inc
mov
dec
int3
lret
xchg
mov
rcll
stos
aaa
test
shr
in
fcmove
arpl
nop
movsb
popa
pusha
ljmp
test
ja
jge
mov
adc
push
test
push
movsb
ret
bound
test
test
jo
bound
sbb
rorl
lock
jg
push
popa
push
in
cmpsl
xchg
pop
out
cltd
or
movaps
jae
das
gs
lds
adc
jge
xchg
lods
hlt
mov
mov
test
stos
fisubrs
lods
jl
je
pusha
add
cmpl
jns
push
sub
das
adc
jae
jno
fldcw
fnstcw
cmp
aad
ss
add
movsl
adc
sbb
ljmp
test
in
inc
push
push
pop
mov
das
and
push
sub
mov
pop
xchg
cmp
xor
aad
in
aaa
dec
pop
and
xor
ss
aas
xchg
sbb
inc
bound
scas
je
push
mov
xor
mov
out
jno
ret
loope
hlt
xchg
fs
pop
icebp
out
cmpsl
cltd
and
adc
popw
cmp
or
cmp
fs
popf
fdivl
das
mov
movsb
sbb
xor
aam
mov
addr16
pop
or
in
aad
setno
out
lret
pop
fsts
sar
pop
jb
pop
sbb
sub
cmp
shlb
aas
pop
sub
push
pop
inc
scas
inc
aaa
pushf
cmp
out
mov
mov
ja
push
stos
cmpsl
cmp
js
lcall
push
inc
cwtl
pop
xor
or
mov
push
insb
mov
arpl
cwtl
jbe
movsl
subl
lods
sbb
dec
mov
shll
cld
cmp
or
sbb
sub
ret
push
mov
repz
or
cli
pusha
push
loopne
mov
adc
inc
mov
add
sub
fidivs
xchg
inc
ljmp
cmpsl
push
pusha
aaa
cwtl
ret
add
sahf
jbe
inc
shlb
inc
and
and
imul
sub
sbb
shl
std
popl
xchg
xchg
mov
fistpl
sbb
cmp
jmp
or
mov
rcrl
mov
add
mov
jnp
outsl
push
xlat
pushf
std
add
out
mov
mov
mov
movb
pop
pusha
sbb
xchg
loope
inc
push
orl
jno
aam
addr16
mov
loop
inc
in
scas
mov
testl
stc
aam
icebp
adc
jno
cmp
add
mov
push
ss
fldenv
iret
cltd
icebp
pop
pop
pop
push
inc
int3
mov
jecxz
loop
fucomip
test
addr16
cmp
lock
and
outsb
aam
repnz
pop
jge
lret
daa
jge
lcall
xchg
fstpl
adc
push
cmc
xchg
bound
cmpsl
ds
cs
xor
or
pop
sub
add
out
sub
pop
cmpsl
jns
mov
leave
jns
jae
fwait
ret
mov
push
push
cmp
xor
adc
dec
cmc
mov
push
pop
test
pop
or
int3
cmc
dec
sbb
int
sub
add
cmpsl
lcall
mov
sarb
inc
bound
xchg
sbb
mov
sub
incb
push
cmpsl
inc
mov
jmp
push
sub
addl
adc
and
push
and
or
xchg
int
addr16
xchg
mov
aam
test
pop
insb
cmp
test
jge
cld
pop
daa
push
and
jnp
sbb
mov
cmp
jmp
fdivrp
cmp
add
pop
xchg
pop
cmp
lahf
push
ljmp
insb
and
lcall
pop
pop
xor
rcrb
cmp
mov
xchg
popf
lods
xchg
cmpsl
ret
mov
cmp
fildll
jl
mov
aam
dec
or
xchg
imul
sbb
xor
adcb
andb
xor
lret
adc
arpl
in
add
or
outsb
mov
cmc
sbb
outsl
shr
mov
lret
popa
setge
sbb
push
movsb
mov
in
xor
mov
fidivrl
inc
cmp
rorb
data16
sbb
dec
adc
xor
sbb
enter
inc
adc
push
mov
sbb
push
ficompl
out
ret
xor
cs
dec
push
out
andb
rorl
dec
loopne
cmp
jb
push
insb
pop
dec
pop
push
mov
mov
sahf
add
pop
cmp
sbb
pushf
xorl
inc
mov
leave
int
ror
jae
pop
jle
sbb
and
int3
inc
mov
test
and
mov
leave
pop
mov
fcoml
and
loope
out
dec
sbb
mov
imul
add
cmp
lds
dec
call
and
ss
jns
mov
adc
in
dec
arpl
call
and
mov
jo
pop
outsl
xor
int
mov
xchg
push
inc
fisttpl
add
jo
andb
cld
push
mov
clc
jp
scas
cmp
jno
add
dec
fisttps
and
movsl
mov
xor
dec
sbbl
xchg
repz
nop
mov
fmull
adc
pop
mov
pop
test
push
stos
mov
outsb
hlt
mov
in
movsb
rcr
out
pop
jecxz
add
inc
out
in
sahf
mov
rolb
lret
enter
into
and
dec
ficompl
mov
cmp
int3
mov
decb
cmp
loope
xor
fcos
rcll
adc
lods
fnstcw
sub
roll
int
in
icebp
mov
test
cmpsl
imul
jo
pop
nop
add
or
inc
rorl
dec
sbb
fistps
push
inc
int
jmp
cld
lcall
in
sbbb
rcrb
int3
loopne
int3
loop
icebp
stc
ret
adc
lcall
and
and
ss
addl
inc
lds
mov
enter
or
jge
push
daa
and
movsb
mov
or
je
imul
lds
pop
adc
push
hlt
mov
pop
or
int
mov
mov
jo
pop
xlat
mov
scas
and
sub
sbb
jmp
mov
mov
sarb
pop
add
mov
mov
or
jmp
cld
pop
jg
xchg
sbb
cld
cmp
aad
mov
sub
mov
divb
jb
ret
lock
adc
aad
cmp
js
je
fisubs
jecxz
jge
mov
stos
gs
add
mov
loopne
and
mov
jo
push
xor
pop
add
push
xchg
cmp
sub
xor
jbe
sti
test
jns
mov
xlat
jbe
pop
sub
lock
xchg
sbb
ds
lods
out
shll
push
add
inc
popf
lret
xor
pusha
popf
jmp
and
pop
jae
mov
lret
idivl
dec
cmp
movsl
stos
sarb
cmp
sbb
movsl
enter
in
data16
daa
xchg
mov
lods
or
jp
or
cmp
notl
sar
mov
and
mov
int3
imul
cli
or
ds
fsub
add
pop
imul
shrl
inc
pop
shrb
fdivr
repnz
data16
adc
inc
movsb
call
sub
in
out
aas
xchg
jno
dec
pusha
cmovle
out
push
sbb
xor
sub
pusha
movsb
adc
aaa
std
jb
test
loopne
arpl
test
jmp
cmc
test
ret
into
mov
ss
xor
cli
inc
jecxz
pop
push
xchg
js
test
and
xor
xchg
out
adc
daa
fwait
mov
jno
jp
adc
adc
xor
pop
jle
aad
add
outsl
mov
filds
nop
mov
mov
dec
cmc
sub
in
fimuls
scas
gs
mov
sbb
sub
cmp
cmp
pop
xor
inc
add
loopne
xchg
mov
out
ja
mov
xchg
jge
inc
and
icebp
loop
sub
and
adc
mov
cwtl
xchg
inc
mov
int
add
ja
loop
jmp
fdivr
insb
add
mov
jecxz
pop
lahf
mov
push
clc
and
ljmp
jmp
xor
pop
shlb
cmc
js
dec
out
aam
leave
in
mov
fcmovbe
dec
pop
pop
cld
jmp
test
xchg
sub
inc
popa
add
dec
scas
pop
movsb
lds
pusha
fsubrl
call
push
and
xor
pop
dec
mov
aaa
icebp
clc
out
insb
inc
fstpl
ljmp
pop
movsl
jmp
sbb
jo
jo
out
push
jmp
pop
dec
push
lods
jl
sbb
jecxz
push
lahf
fstpt
shrb
iret
mov
js
inc
cmp
in
lret
repz
sub
mov
dec
lea
stc
mov
lret
loopne
or
sar
mov
fs
xlat
loop
mov
clc
push
mov
mov
cs
push
add
mov
rolb
cli
adc
fisubs
insl
gs
cmp
jl
int
mov
mov
fldl
xchg
ljmp
hlt
sub
jns
mov
add
cli
xchg
sub
sbb
pop
xchg
icebp
dec
dec
jno
adc
cmp
dec
int
mov
xchg
and
cmp
push
popa
add
ret
insb
pop
or
popf
mov
repz
pop
sbb
mov
ja
sub
fisttpl
lahf
into
leave
dec
pop
xor
stos
push
inc
xor
push
fisubrl
fwait
in
mov
rolb
add
xor
adc
push
adc
lahf
sub
ss
mov
mov
stc
nop
ss
sub
idivb
add
pop
pop
xor
mov
push
fsubrl
sub
scas
sbb
ret
js
cmpsb
popf
push
insl
add
inc
mov
sahf
inc
dec
dec
loop
sbb
adc
in
xchg
mov
push
pop
pop
cmc
jp
xor
call
jno
xchg
int3
jbe
xchg
movb
sub
ja
dec
jg
cmc
notl
aam
push
and
idiv
inc
fwait
mov
fistps
pusha
in
mov
cmp
add
xchg
push
inc
and
stos
rolb
int3
pop
repnz
mov
mov
sbbl
rorb
cmc
stc
mov
shrb
dec
jge
jae
sub
or
orb
cli
jns
sub
xchg
ss
rclb
les
mov
jbe
ss
fstl
addr16
and
or
adc
sti
xchg
inc
out
mov
std
ss
std
fidivs
push
inc
std
add
jl
mov
push
adc
mov
push
or
loope
cli
adc
sub
jle
jp
or
lods
mov
add
jno
stos
in
fdivl
out
imul
icebp
pop
and
shrl
ret
aad
cwtl
adc
aam
and
iret
and
imul
test
mov
xor
repz
add
adc
xchg
movb
in
lahf
nop
aas
out
fwait
popf
clc
lret
xor
mov
iret
sbb
rorb
ljmp
stos
movsb
inc
pop
inc
and
jge
inc
sub
sbbb
cli
ljmp
fbstp
int3
add
test
lret
xlat
pop
out
js
inc
or
in
xchg
sahf
lahf
dec
sbb
mov
cltd
push
mov
adc
idivl
jo
out
pop
ljmp
jp
sbb
sub
enter
dec
sbb
sub
inc
jl
xchg
test
insl
sub
popa
or
pusha
call
jno
shr
scas
aas
orl
out
mov
xchg
mov
cmp
fld
mov
mov
push
aaa
fs
iret
fsubl
lods
mov
fnstenv
add
sahf
aad
scas
rorb
or
xchg
cwtl
mov
test
inc
pop
addr16
pop
imul
je
fdivrl
imul
shlb
pop
sbbl
mov
xor
pop
das
adc
ja
fnstcw
leave
ror
testb
jmp
mov
adc
jg
inc
mov
popf
stc
inc
jne
add
aas
sub
rorl
cmp
sbb
inc
pop
dec
dec
add
movsb
shlb
roll
sahf
cltd
adc
and
cwtl
mov
mov
xor
pop
incl
fcmovu
mov
inc
loopne
lret
mov
out
jbe
data16
imul
cli
xlat
mov
xchg
cmp
test
fdivs
adc
add
push
inc
sti
mov
fistpl
call
push
hlt
nop
dec
pop
ret
pop
shl
cwtl
and
scas
xor
sbbl
xchg
movsb
add
lcall
mov
mov
cmp
or
fs
cli
cli
into
outsl
je
pop
outsl
mov
push
insl
mov
jge
cmc
es
lret
inc
push
ljmp
repnz
mov
jg
loopne
cmpsl
mov
les
int3
lcall
xor
loop
or
mov
daa
mov
inc
in
bound
sub
leave
movsb
push
shl
xchg
data16
mov
call
aad
ljmp
cwtl
fmul
jl
cmpsl
out
fsts
push
or
cmc
mov
xor
out
fwait
out
sti
jmp
jmp
push
jle
or
inc
inc
ja
jle
or
or
lds
jns
lds
repz
and
add
add
cmp
dec
sbb
push
or
cmp
dec
lea
cmp
xlat
add
fdivr
lcall
dec
lock
fdivrs
cmpsl
xor
inc
popf
lods
ficoms
pop
push
dec
addr16
pop
fnstenv
push
mov
or
lods
outsb
popf
xor
leave
sub
sbb
cwtl
fstl
xchg
push
dec
rolb
add
mov
cmp
mov
fcoms
mov
or
js
cmpsb
call
scas
jge
jp
int
pop
xchg
dec
jecxz
shrb
cwtl
cmpxchg
call
in
mov
mov
inc
ret
sbb
sbb
sbb
dec
cmp
shrl
mov
out
out
or
jg
sub
jmp
test
fnsave
leave
adc
sbb
inc
pop
mov
ret
cld
cmp
xchg
xor
sub
cmpsb
sbb
inc
mov
sub
call
mov
fidivrs
test
jo
gs
xchg
xchg
cli
sbb
testl
jecxz
lock
dec
and
in
dec
fcompl
and
cmp
adc
iret
xchg
lahf
pop
test
cmpsb
push
movsl
loope
mov
ds
add
inc
xchg
xor
push
and
mov
adc
scas
lds
cmpsb
jae
cltd
xchg
cmp
cmp
movsb
cmpsb
push
adcl
cltd
jg
cmp
push
out
xchg
mov
repz
or
jle
mov
or
fst
xor
in
das
mov
fnstcw
out
imul
sbb
jp
mov
mov
xchg
cs
arpl
ds
cmp
les
arpl
mov
or
lea
cmp
sbb
out
or
icebp
aaa
mov
push
mov
or
mov
movsb
out
sbb
gs
loope
mov
xor
test
inc
pop
mov
xchg
and
adcl
xchg
or
addr16
xchg
or
test
lea
adc
push
xor
sbb
es
test
push
out
pop
cmp
mov
jb
in
aaa
into
pop
out
arpl
mov
rcr
fdivrl
es
jp
xor
icebp
and
inc
shlb
test
inc
push
imul
jno
dec
out
out
push
pop
inc
or
dec
cmp
dec
mov
xor
inc
mov
mov
and
je
inc
push
fldt
dec
bound
push
arpl
movsb
insl
adc
rorl
mov
popf
stos
imul
insb
roll
fiadds
testl
cld
bound
cltd
add
jne
sub
xor
mov
ficoms
addb
insb
lahf
sahf
mov
test
ljmp
pop
sub
dec
loope
arpl
fsubr
daa
or
daa
mov
inc
jmp
pop
mov
jp
fwait
bound
nop
and
sub
jb
sbb
ljmp
enter
sub
mov
mov
ss
pop
popf
jecxz
mov
push
add
xchg
out
mov
fnstenv
inc
stos
or
sub
mov
bound
stc
sub
jno
int
mov
add
into
jge
inc
fwait
xlat
in
jnp
jnp
sbbl
dec
fldcw
adc
dec
or
mov
sbb
mov
jnp
les
push
mov
in
rorb
add
shll
cmpsl
ret
xor
sbb
insb
aas
lcall
aad
dec
mov
lahf
lcall
int
sbb
aad
orl
or
xchg
mov
insl
add
mov
mov
sbb
rclb
pushf
aaa
dec
inc
es
push
insl
add
adc
mov
push
fsts
test
shlb
xor
push
xor
roll
sbb
out
cli
sbb
dec
jb
pop
scas
dec
xchg
jge
je
xor
repz
cmp
shlb
jno
mov
out
test
mov
lea
je
mov
andb
adc
mov
in
lea
imulb
out
mov
lock
popa
and
iret
ljmp
mov
inc
and
xor
push
xor
or
jnp
mov
mov
jnp
ret
pop
or
cmp
notl
mov
lcall
pop
cmp
push
inc
add
out
pusha
mov
sti
xchg
loope
hlt
cltd
jmp
aad
orb
dec
pop
lods
bound
and
pop
inc
xlat
in
or
scas
push
xchg
add
int3
ljmp
in
pop
pop
inc
scas
mov
jae
out
inc
loope
xchg
pushf
xor
loope
movsl
adc
sub
dec
pop
jg
ret
lds
js
push
mov
das
inc
xchg
fistl
dec
fistpll
jp
test
stos
adc
xor
and
imul
pushf
repz
fmuls
out
jbe
lahf
loope
cmp
movsl
cs
sbbl
mov
jg
sbb
sub
inc
in
dec
nop
pushf
cmpsl
dec
insb
jae
cltd
xor
jo
add
pop
test
pop
mov
xchg
mov
int
fsts
addr16
sub
or
or
xchg
mov
pop
push
and
outsl
jmp
stc
inc
mov
je
scas
fbstp
lea
sub
xchg
stos
in
xlat
fbstp
or
pushf
fucomi
inc
push
push
jnp
and
mov
dec
jne
xchg
mov
or
fldl
stos
push
dec
pushf
bound
fcompl
sbb
inc
fs
pop
sub
xchg
sub
ret
aad
scas
rcl
rcll
imul
loopne
mov
lahf
je
loope
xchg
lods
out
fisubs
jl
and
cmpb
js
push
nop
xor
je
iret
pop
mov
imul
insl
jae
or
xor
cld
cmc
sarb
push
mov
decl
and
xor
fidivrl
and
add
into
jge
mov
or
cmc
std
xchg
orl
cltd
sbb
mov
or
daa
into
bnd
dec
int
jge
xchg
mov
inc
jmp
push
stos
xor
push
or
jl
ja
pop
stos
jne
addr16
out
test
loopne
lea
je
jle
dec
jmp
and
xchg
dec
mov
xchg
pop
jl
mov
inc
mov
enter
lods
push
jle
pop
xor
stc
aas
inc
sbb
aas
jecxz
cli
cmp
add
cmp
cmpl
or
mov
repnz
jecxz
pop
inc
sahf
xor
or
mov
pop
pop
int3
push
jo
icebp
xchg
mov
jnp
push
lods
ficoms
jae
ja
lods
inc
lea
add
jle
adc
test
jp
xor
and
cs
sub
sbb
fmul
cmp
jecxz
arpl
popf
push
lock
stc
sar
push
shll
cmp
jno
pmuludq
repz
sbb
bnd
arpl
sbb
test
sub
jb
leave
int
sub
enter
ret
xchg
mov
mov
mov
loopne
jecxz
mov
mov
push
sarl
clc
nop
outsb
scas
stc
fsubrp
and
xor
aas
push
push
outsl
and
enter
mov
jecxz
jae
fstl
shr
ja
cltd
sub
pop
lods
inc
mov
or
or
jmp
cld
test
jns
aad
cmpsb
lea
push
and
xor
dec
out
scas
pusha
or
gs
jl
imul
jle
and
in
mov
arpl
cltd
ljmp
outsl
lret
or
mov
mov
js
sbb
and
push
push
sub
sbb
adc
aad
dec
mov
xor
pop
cmp
mov
mov
out
data16
sub
xor
jbe
inc
inc
cmp
mov
push
fiaddl
clc
fdivrs
sub
jecxz
ret
repz
loope
xchg
fs
mov
add
mov
xchg
xchg
fldcw
add
xor
loope
adc
movl
xchg
mulb
shll
out
push
gs
insl
adc
jle
pusha
sub
jle
inc
push
ret
push
sbb
pop
sbb
dec
ljmpw
insb
jb
fstpl
enter
fidivrs
cmp
iret
xor
shlb
add
jae
aaa
int
adc
sub
push
call
pop
sbb
dec
jle
in
arpl
arpl
jae
jp
ficoml
bound
in
cmpb
out
mov
inc
pop
dec
and
push
cmp
push
std
movsl
jns
out
rcl
fiaddl
jecxz
or
mov
push
lock
push
push
iret
cwtl
das
add
sub
mov
in
imul
dec
test
adcl
into
sbb
jo
sti
mov
jp
xor
pop
and
gs
and
ss
pop
fsubr
jge
int
pop
xchg
daa
xor
out
and
pop
pop
jo
jno
jmp
loopne
mov
lahf
add
dec
dec
lret
inc
ret
mov
xlat
nop
push
mov
nop
push
lods
adcb
sbb
lods
adc
dec
mul
jge
pop
scas
pop
test
ds
call
sbb
sbb
cmp
ljmp
jmp
ja
aas
cs
jb
scas
ret
aaa
dec
stc
jg
andl
mov
lsl
adc
divb
popa
jp
or
xchg
imull
and
jg
or
pop
pushf
jg
leave
lcall
outsl
insb
nop
incl
dec
sahf
cli
xchg
sarb
lcall
jns
push
adc
popa
push
dec
icebp
sbb
btr
cmp
or
pop
loope
stos
inc
sbb
push
pusha
es
fwait
adcb
jp
mov
cmc
mov
popf
jae
out
xchg
mov
inc
pop
mov
nop
pop
mov
pop
daa
lret
cld
xchg
fs
xchg
outsl
xchg
iret
repz
pop
subl
loop
mov
mov
add
stos
pop
daa
imul
ret
sbb
call
jmp
outsl
push
mov
or
sbb
xor
arpl
push
fcmovb
add
xchg
outsb
fldt
cmp
faddl
js
popa
das
mov
fwait
pop
sub
inc
dec
push
mov
movsl
add
jecxz
adc
cld
inc
xchg
push
lcall
push
out
cmp
sub
or
mov
pushf
ret
das
popl
cmp
adcl
scas
ret
push
xor
mov
enter
aas
pusha
pop
cmpsb
sbb
shr
xor
out
minps
inc
adc
lcall
sbb
jae
xlat
imul
sub
cmpl
mov
and
or
lods
inc
fildl
stos
cwtl
xor
jg
xchg
sbb
cli
orl
dec
mov
cmp
icebp
test
mov
xlat
scas
out
orl
shrb
xchg
mov
push
shlb
push
sti
inc
stc
xchg
xchg
mov
rcrb
fbstp
std
fwait
scas
xor
inc
lock
ljmp
cwtl
mov
mov
and
mov
xor
loopne
shl
add
add
jecxz
sbb
mov
aad
fistl
xor
pop
scas
rorb
cs
hlt
neg
add
aam
pop
loopne
cld
xlat
imul
push
ret
pop
lahf
mov
fbld
or
pop
jo
sarb
inc
fstpt
arpl
inc
pop
pop
cwtl
xor
and
jg
cmp
scas
nop
adcl
fbld
mov
cmp
or
mov
shl
out
cmpl
jnp
jae
shrb
xchg
dec
mov
movaps
daa
jge
test
loop
das
adc
push
jno
sub
cmpsb
dec
cmp
dec
and
aad
push
push
mov
cmpsl
cmpsl
sub
jp
xor
insl
arpl
sbb
aaa
lods
les
lock
mov
inc
jnp
ljmp
je
add
pop
jnp,pt
in
std
pop
lcall
mov
and
rcr
and
fdivrs
xor
enter
lods
out
jge
loope
xchg
and
sub
lcall
mov
fsubr
add
push
lods
inc
in
daa
dec
push
imul
movsb
imul
jns,pt
cltd
out
repnz
xchg
leave
stc
lret
xlat
negb
mov
ljmp
push
cmp
sub
xchg
out
cvtps2pi
aad
sbb
fcomps
fnstsw
sub
dec
ja
imul
inc
notb
pop
add
push
xor
int
dec
pop
mov
xor
aas
call
aaa
jno
sbb
sbb
xlat
sbb
aam
jo
cltd
cld
gs
out
mov
xchg
sbb
popa
rcl
jbe
sbb
inc
stos
sbb
sub
cltd
cld
data16
sbb
and
push
cli
and
inc
cmp
negl
cmpsl
in
aad
cmp
adc
arpl
std
mov
fcoml
test
xchg
mov
cmp
add
sbb
pop
mov
xor
cmp
imul
push
dec
out
testb
addb
xor
cs
popa
mov
inc
xchg
in
mov
mov
and
sbb
xor
shl
test
mov
push
xor
push
xchg
cmc
adc
dec
lods
idivb
arpl
pop
shl
dec
mov
rcrb
mov
dec
outsl
add
jae
jns
sbb
and
mov
mov
jmp
out
ja
cmp
cltd
cmc
add
cmp
pop
jg
mov
cmpsb
insl
pop
jmp
cmp
or
sub
cld
addr16
inc
fadds
dec
out
out
pop
neg
pop
outsb
add
test
mov
fcmovne
pushf
xor
cld
cmpsl
ds
mov
push
mov
pushf
xor
cmc
clc
daa
push
push
jmp
inc
testl
lret
lods
push
jmp
adc
fwait
xor
fincstp
mov
sub
stc
nop
inc
rcrl
repz
push
sub
lcall
mov
clc
xchg
cmpsb
scas
cltd
sub
mov
pop
std
xchg
imul
or
ds
loop
sub
lods
and
enter
ja
or
xchg
andb
sbb
lret
das
sbb
aad
mov
idivb
jae
adc
xchg
xchg
cmp
cmp
push
xor
es
xchg
sub
or
scas
mov
ds
inc
bound
pusha
in
in
mov
push
pop
or
cmpsb
stos
mov
nop
adc
ror
lds
jge
jle
lds
mov
outsl
pop
sarb
outsb
dec
push
loopne
pop
movsb
fmull
out
popf
orb
xor
cwtl
out
sbb
sbb
pop
fidivs
jnp
frstor
scas
out
or
jmp
push
and
sub
xor
shrl
fisttpl
cmpsb
pusha
scas
xlat
cmp
dec
fists
jne
testb
sbb
cmp
pop
cmp
inc
xor
jnp
jle
pop
addb
or
sub
stc
jnp
mov
in
jge
dec
xchg
test
gs
xchg
jmp
jo
sarb
test
fs
repnz
jl
inc
scas
jns
iret
adc
push
xor
imul
jecxz
and
lahf
sub
nop
xchg
xor
pop
push
movsb
push
subb
lea
or
lods
push
mov
or
sbb
inc
cmp
xor
mov
and
xlat
push
int3
outsl
ret
mov
inc
pop
mov
push
out
fmuls
dec
packsswb
aaa
xchg
push
cwtl
cli
add
lcall
aam
scas
dec
or
mov
push
mov
sub
repnz
ss
jnp
cmpsl
loope
enter
cwtl
repnz
and
jge
rorl
rcr
pop
lahf
nop
int
rcr
push
mov
into
push
loopne
mov
mov
adc
jnp
cmpsb
and
xchg
pop
xor
mov
popf
movsl
or
lret
mov
cmc
push
nop
dec
loopne
cmpb
pop
in
into
fs
xchg
add
fcmovnu
in
mov
iret
mov
jl
xor
les
in
cmp
cltd
gs
mov
or
paddsb
ds
mov
inc
daa
and
dec
es
outsl
mov
ret
pop
lods
push
int3
out
add
mov
rolb
fcomi
sub
xchg
push
dec
sahf
xor
lret
adc
inc
int3
and
int
mov
int
add
cmpsl
mov
jo
jmp
mov
inc
xor
xor
pop
ret
pop
xor
and
outsl
jmp
sahf
icebp
jno
mov
xchg
cs
jae
loope
and
cmpsb
ret
or
out
pop
leavew
out
cld
xor
cmpsb
cmpsl
aaa
aas
stos
dec
repnz
cld
xchg
icebp
adc
in
jle
xchg
mov
scas
cs
dec
int
lock
iret
sbbb
adc
lea
imul
or
jbe
jns
xchg
and
adc
shlb
out
jne
xor
scas
in
and
or
outsl
mov
or
in
push
mov
and
push
in
jns
cmp
mov
sbb
mov
daa
scas
sub
bnd
jb
ja
pusha
pop
lods
pop
push
call
sbb
xchg
dec
jl
in
mov
aad
push
and
fistpl
bound
xor
mov
outsl
inc
or
repz
adc
add
adc
and
in
dec
out
cmp
data16
lea
test
jb
dec
nop
sbb
mov
cld
shrb
push
mov
insb
fisubrs
mov
mov
out
in
push
adc
jno
xor
test
enter
and
adc
push
cmp
hlt
inc
and
pop
aaa
cmpsb
dec
in
push
pop
imul
les
push
push
xchg
pop
xchg
xchg
fdivl
sub
jmp
mov
fwait
test
rorb
clc
in
les
push
and
test
lcall
sbb
outsl
shr
xchg
insl
pop
repz
mov
dec
out
lahf
mull
ret
cmp
jae
and
sbb
or
ret
sarl
fdivrs
or
ret
dec
mov
push
in
ja
aad
inc
jns
cwtl
inc
in
sti
je
add
addl
sarl
mov
jb
push
jo
push
addps
out
scas
es
push
fs
add
ss
std
jo
mov
ret
shr
mov
pop
or
imulb
jge
and
mov
or
xchg
cmp
pop
pop
imul
scas
sbb
loope
xchg
sub
loope
in
inc
sub
push
sub
daa
loope
add
lret
iret
or
repnz
sub
in
or
in
dec
in
test
xchg
sub
popa
mov
dec
outsl
mov
push
cmp
sub
mov
mov
fisttpll
cwtl
das
and
lcall
cmpsl
fsubs
pusha
adc
addb
nop
pop
daa
inc
fs
dec
pop
xor
add
test
and
mov
lcall
stos
pop
lcall
mov
sbb
aad
sub
mov
lock
fnstcw
test
sahf
pusha
hlt
dec
outsb
shrb
jg
lret
test
repnz
lahf
push
das
lcall
sbb
in
ficoml
aas
pop
inc
inc
sbb
lretw
iret
cli
fs
jnp
lret
pop
jecxz
fwait
sbbb
mov
movsb
ljmp
mov
bound
cmp
std
xchg
enter
in
sub
adc
push
pop
movsl
in
pusha
inc
inc
loope
je
mov
sahf
repnz
push
lods
mov
xor
jge
sbb
inc
sahf
cmp
push
test
and
mov
icebp
inc
out
mov
mov
and
add
cmp
jecxz
data16
mov
sarl
jmp
repz
push
mov
xchg
sub
stc
pop
adc
inc
int
orl
adc
insl
jne
pop
rcrl
repnz
or
dec
jns
ja
mov
scas
inc
aas
dec
jecxz
cmp
leave
imul
inc
int3
subl
popa
pop
shll
aam
xlat
push
mov
lret
and
lods
fidivl
loopne
pusha
popf
add
nop
push
sbb
lahf
add
mov
ficompl
push
out
bound
fldl
mov
rcr
inc
add
mov
psrad
pop
push
jae
pop
sub
pop
mov
mov
cmpsl
cmpsl
cmp
mov
lret
roll
iret
jg
dec
xchg
mov
pop
sbb
loop
in
mov
mov
sbb
cmp
push
dec
mov
inc
and
mov
dec
pop
out
in
cmp
pop
xlat
ljmp
call
in
call
mulb
fs
lea
lods
test
mov
aas
jb
int3
std
mov
incb
jg
cmp
es
adc
repz
mov
and
popf
into
cmp
jbe
dec
ss
mov
jecxz
push
aam
jl
call
push
dec
pop
jle
push
icebp
adc
sarb
xchg
test
sbb
xchg
jle
hlt
mov
cmpsl
mov
or
arpl
test
enter
sbb
ret
pop
sbb
mov
mov
cmp
popa
push
mov
and
test
mov
cmpsb
int3
insb
test
adc
iret
adc
loopne
sti
xorb
xchg
bound
mov
fs
sbb
mov
ficompl
mov
shr
aaa
cmp
pop
iret
sahf
and
das
jmp
push
add
repnz
and
movsb
sarb
hlt
jl
jl
aas
popf
jnp
push
push
sbb
sbb
jne
fnstenv
and
fimull
pushf
das
aad
sub
mov
push
test
sub
aad
push
sub
out
mov
js
loope
xor
cmp
jl
fstp
mov
inc
adc
movsl
add
mov
pop
pusha
cmp
fdivr
js
mov
into
ret
arpl
pop
repnz
inc
or
faddp
rclb
in
push
dec
loopne
repz
lcall
xchg
jne
dec
add
add
lret
stos
sub
nop
lret
mov
and
push
js
test
sub
sub
adc
dec
jae
lea
in
add
add
movsb
sti
xchg
sbb
fisubl
iret
mov
mov
popa
push
pop
xchg
push
aaa
push
mov
inc
scas
imul
mov
neg
push
inc
mov
sub
dec
cmp
test
nop
popa
das
cmp
fmuls
in
cs
sbbl
ljmp
dec
mov
pop
pop
mov
cmp
daa
out
mov
stc
sub
cltd
dec
mov
std
push
xor
repz
lods
das
add
dec
adc
out
imul
test
sbb
bound
cmp
pushf
jbe
stos
jbe
ljmp
jb
iret
lock
notl
cmp
rcl
mov
and
dec
push
js
lock
dec
pop
js
cmp
cmp
out
mov
adc
mov
xlat
ror
shl
mov
arpl
and
mov
push
cltd
call
xor
adc
in
mov
lea
dec
cld
or
pop
and
lret
adc
dec
fs
cmp
lods
das
pop
addr16
or
inc
inc
adc
push
movsb
jbe,pn
js
imul
nop
push
mov
mov
mov
jbe
fcmove
xchg
mov
xor
psllw
xchg
clc
sub
pop
sahf
push
cvtps2pd
jae
push
pop
sub
dec
jmp
jo
insb
sbb
shlb
mov
loop
jo
xchg
in
ret
xlat
or
call
lret
insl
jae
push
icebp
iret
xchg
xor
dec
sbb
sbb
jae
sbb
push
les
daa
jbe
mov
jp
addr16
pushf
fidivrl
mov
imul
inc
out
in
hlt
addr16
mov
push
adc
pop
push
mov
mov
and
push
dec
push
paddsw
outsl
jnp
enter
imul
cmpsb
push
movsb
jg
imul
mov
popf
je
pop
add
pop
xor
pop
aaa
rol
loope
lea
xlat
stc
aam
out
push
mov
shlb
ret
daa
clc
or
dec
cld
push
adc
jns
and
gs
repz
xor
bound
pop
mov
xlat
mov
cmp
ja
and
mov
in
outsl
int
pop
dec
bound
movsb
lret
cltd
cmpsb
dec
mov
pop
in
push
or
lods
push
mov
or
scas
fdivrs
repz
jnp
insb
mov
push
mov
pop
and
inc
out
in
push
mov
push
rcrb
movb
cmp
sub
je
lcall
xchg
mov
lods
fldt
inc
faddl
scas
cmpsb
mov
and
ss
rcl
jo
jg
push
scas
cmp
jmp
fcmovu
imul
inc
adc
dec
xlat
and
mov
std
inc
test
sub
negl
pusha
add
xor
jbe
xor
mov
movsb
push
jge
cmp
xchg
rcrb
in
mov
iret
loope
add
sbb
test
push
lea
cmpsb
les
fisttpll
mov
pop
dec
arpl
fs
pop
dec
ja
mov
xchg
movsl
mov
arpl
sbb
pop
jno
stc
adc
inc
sarb
sub
incb
adc
xor
out
jmp
cmp
mov
shlb
add
rcr
js
mov
fwait
push
mov
cmp
imul
data16
lret
out
fmuls
das
es
mov
decb
cmc
and
cmpsb
sub
or
adc
cmp
das
mov
nop
inc
lods
adc
shll
jle
push
xchg
sub
add
xchg
adc
inc
nop
push
in
jb
lock
movsb
pop
loop
pop
shr
adc
lock
push
mov
loopne
pusha
test
cmp
inc
sarb
lret
inc
lea
lcall
dec
or
pushl
pop
sahf
adc
jbe
or
into
leave
adc
push
add
mov
and
cmp
ljmp
in
mov
in
cld
xchg
inc
cmpsl
out
out
mov
notl
cli
inc
in
mov
xchg
aas
ret
insl
push
inc
lods
filds
mov
mov
and
fsts
jbe
xor
pop
xchg
std
push
xchg
movsb
push
adc
cmpsl
inc
daa
sub
stos
popf
out
adc
in
and
ret
inc
test
gs
cli
dec
and
dec
arpl
hlt
mov
jnp
mov
lods
add
mov
sub
sub
cmp
push
loop
mov
xchg
xchg
push
lock
xor
cmpsl
loop
or
leave
shl
insl
ret
and
push
or
repz
jne
dec
jmp
jmp
lods
les
out
pop
fldl2t
test
inc
dec
lahf
pop
aaa
and
scas
ficoml
repnz
loopne
adc
push
and
movsb
insb
js
jo
push
jle
add
push
dec
test
ds
pop
lods
inc
fs
enter
movups
mov
sti
jmp
aaa
jno
out
loopne
mov
xchg
pop
pop
push
in
cltd
jb
sahf
in
ds
mov
push
es
pop
sub
mov
idiv
bswap
mov
shrb
inc
mov
mov
pcmpgtd
inc
pop
mov
mov
mov
cmp
sbb
pop
leave
push
jns
fdivl
popf
xor
stos
cmp
mov
push
stos
pushl
fnstenv
enter
adcb
sbbl
in
pop
dec
mov
lcall
push
icebp
pop
mov
insl
jg
add
mov
shlb
dec
fwait
orb
sbb
mov
into
or
popf
int
std
mov
std
or
sbbl
pusha
aam
jbe
repnz
lret
icebp
inc
fdivrl
push
push
outsb
pop
cmp
xchg
test
movsl
push
call
sbb
mov
cmovp
mov
scas
call
addr16
lret
stos
pop
sub
hlt
lods
push
mov
push
lcall
dec
mov
pop
jnp
shrl
clc
mov
sti
in
sti
inc
fisubrl
stc
push
xchg
dec
popa
shl
ret
imull
popf
pop
imul
mov
ficoml
sbb
scas
adc
jecxz
pop
xor
jno
xchg
imul
scas
xor
mov
mov
rorb
xchg
xor
enter
pop
lods
shrl
jle
mov
lahf
shrb
fisubl
jno
sbbl
adc
inc
lods
xchg
sub
pop
push
loope
mov
call
mov
add
pusha
rcl
cmp
xchg
xchg
add
xlat
scas
add
cld
xchg
pop
test
fiaddl
lcall
and
mov
lock
inc
scas
lea
jns
pop
je
cmpsl
push
sub
shlb
clc
mov
scas
fdiv
push
aaa
andl
pop
popf
aaa
jge
subl
std
movsl
aad
xchg
xchg
shrl
lahf
fidivs
add
or
adc
std
inc
int3
mov
mov
fs
insl
jno
push
movntq
hlt
inc
sti
leave
in
and
mov
mov
inc
inc
and
jnp
adc
aam
pop
sub
cmp
jge
push
jge
inc
or
aas
bound
cmp
ljmp
das
push
mov
sub
push
jo
jns
add
sbb
mov
fwait
pop
sbb
mov
mov
stos
sbb
adc
test
dec
and
pop
push
jp
inc
imul
dec
mov
inc
xchg
shr
scas
and
lcall
and
loope
ljmp
xor
xchg
das
icebp
int3
ficoms
jge
mov
pop
xchg
imul
shrl
test
addr16
loop
lods
dec
sahf
inc
rorb
pusha
xlat
add
jecxz
daa
jecxz
pop
js
add
ret
jnp
xchg
xor
adc
pushf
push
out
mov
or
inc
jae
fidivs
rcl
cmpsb
cmp
jo
lds
jmp
ficompl
lret
sbb
or
jg
xchg
leave
sbb
fwait
mov
jle
pop
adc
push
mov
fwait
mov
adc
xchg
in
dec
loopne
fucomp
and
dec
aas
mov
out
push
dec
in
nop
push
loop
push
dec
cmp
insb
sarl
out
jns
mov
or
out
xchg
cmc
adc
addr16
in
xchg
or
out
jmp
or
xchg
sub
sub
out
aam
aas
es
lods
or
test
cld
jo
outsl
jecxz
popa
rcl
pop
sub
or
fmull
sub
xchg
and
pop
mov
repnz
xor
mov
cld
outsl
inc
pop
pop
adc
fcmovnbe
mov
lods
and
xchg
or
mov
pop
jmp
or
sub
mov
les
dec
fstps
stc
mov
aas
dec
insl
orb
push
push
lods
add
js
je
cmp
lods
repnz
jb
testl
lods
out
dec
or
add
hlt
inc
pop
out
xchg
push
orl
adc
inc
icebp
mov
cmp
add
xchg
leave
ds
call
push
leave
mov
sbbb
mov
mov
sub
xchg
daa
lret
sub
sub
outsb
dec
lds
divb
add
stos
mov
lret
fs
fstps
iret
push
ljmp
adc
cltd
ss
test
mov
xor
dec
mov
inc
inc
and
cmc
gs
and
and
pusha
mov
lds
out
jns
clc
mov
xor
pop
in
sbb
sbb
or
mov
in
jle
pop
add
mov
fnstenv
imul
add
insl
jle
es
mov
data16
cwtl
outsb
test
cltd
mov
iret
stos
jbe
pop
fs
and
mov
mov
pop
dec
push
push
cmpsb
and
test
push
insb
adc
pushf
mov
dec
adc
pusha
jae
repz
inc
fwait
jnp
subb
dec
xor
cwtl
pusha
cs
aaa
orb
ss
insb
in
add
insb
sbb
inc
lret
and
adc
jnp
daa
jl
leave
cwtl
pop
jns
popf
lods
je
mov
adc
sbbb
jecxz
insl
mov
icebp
scas
pop
scas
push
notl
mov
and
arpl
mov
pop
call
dec
fidivrl
shl
jmp
fimull
adc
add
lret
sub
dec
loopne
jnp
stc
int3
pop
int3
cvtps2pd
mov
loop
pop
push
imul
cwtl
rclb
enter
fidivs
fcompl
insb
ja
inc
or
popa
mov
adc
mov
push
pusha
inc
int
repz
outsb
and
jno
les
and
mov
mov
pop
or
lcall
sbb
pop
adc
repz
in
test
ret
push
jo
push
mov
and
cmp
stc
cmp
sub
xchg
cld
mov
ds
in
pop
jne
aad
xchg
idivb
out
dec
shl
jo
xchg
inc
xlat
rcrl
or
inc
mov
dec
pop
mov
mov
test
jl
popf
push
and
mov
inc
outsl
iret
and
cmpsb
add
test
sub
adc
xor
jmp
dec
mov
loop
je
adc
jne
sub
inc
push
cwtl
pop
test
mov
rolb
rcll
sub
jb
lods
jecxz
inc
push
stos
cli
lods
out
and
mov
jne
push
push
jb
je
in
inc
orl
jae
or
cmp
sbbl
cli
idivl
fldt
testb
mov
mov
ds
pop
cmc
jl
scas
adc
jecxz
lcall
cwtl
test
ss
stc
adc
pop
add
iret
xor
dec
add
xor
outsb
adc
cs
cwtl
or
jb
imul
fldenv
inc
lods
pop
out
lcall
dec
sub
arpl
icebp
mov
xchg
pop
adc
ljmp
and
aaa
push
inc
ljmp
dec
inc
push
or
adc
loopne
and
dec
out
adc
sarl
fistps
in
add
scas
xor
out
dec
orl
shl
enter
test
and
das
xchg
xchg
pushf
addr16
clc
jp
movsb
jnp
scas
jns
js
nop
test
inc
daa
mov
and
push
adc
imul
stos
out
imul
xor
dec
sbb
in
mov
addr16
in
mov
sbb
sub
das
outsb
cmp
lret
jno
xchg
mov
xchg
sub
jbe
jne
insb
aaa
xor
and
lea
iret
push
aad
mov
mov
mov
setl
fs
xor
aad
aam
pushf
mov
cmc
add
aaa
mov
jb
and
rclb
cmp
jb
dec
mov
loopne
rclb
sbb
enter
adc
iret
movl
xchg
sub
leave
mov
addr16
adc
es
xchg
inc
faddp
mov
test
push
xor
icebp
cmpsb
push
mov
xchg
js
push
decb
or
cmpsl
fistpl
dec
fbstp
aam
or
inc
dec
imul
sti
xchg
subb
adc
sbb
shlb
aaa
mov
test
push
lods
xchg
cmpsl
out
addr16
fnstenv
adc
xor
lock
fnstsw
mov
pop
shrl
enter
xchg
push
mov
sbb
mov
out
repnz
cmp
or
lods
pop
ret
pop
xchg
int
cs
sub
lcall
jo
lea
mov
subl
pop
aas
adc
sbb
xor
or
cmpb
push
xchg
pop
stc
cmp
lea
add
mov
cltd
xchg
inc
push
lcall
fistl
mov
dec
loopne
shlb
push
in
jecxz
rorl
jo
test
pop
cmc
and
jl
out
pop
pop
repnz
cs
lret
sti
xchg
mov
ret
sbb
orb
cmp
hlt
sub
testl
ret
imul
hlt
lret
bound
xchg
or
jl
sub
fldcw
jge
push
dec
loopne
addb
movsb
addr16
fdivs
popf
mov
insb
add
outsl
mov
pop
sahf
jecxz
jne
dec
sub
push
mov
jle
dec
mov
push
in
icebp
jge
cs
adc
shlb
outsl
phsubsw
xor
and
rolb
daa
mov
dec
or
fnstsw
pop
push
popf
fildl
cmpsb
cmp
add
lods
cmpb
lret
insb
mov
cmpsl
mov
fisubrs
lds
fsubrp
test
cmp
shrl
xchg
add
cmpsb
loop
pop
adc
dec
in
and
add
inc
fisubrl
fdivl
adc
pushf
xchg
xor
mov
mov
jno
scas
mov
ret
xor
or
popa
pop
shrb
orb
mov
mov
faddp
ss
push
inc
fildl
cmpsb
stc
shrl
xor
ret
mov
and
dec
lea
pushf
fs
lods
cwtl
add
dec
mov
gs
pop
cwtl
mov
mov
popa
je
xchg
gs
pop
lds
cmpsl
lea
xchg
xchg
xchg
push
in
lds
xor
lea
cmc
xchg
xchg
pop
out
lds
cmpsb
cmp
xchg
nop
js
lds
ss
addr16
insl
mov
gs
daa
cwtl
pop
test
mov
mov
enter
fwait
push
aam
addb
rcl
insb
ss
dec
testb
sahf
mov
mov
out
mov
stos
xchg
inc
testb
cwtl
add
xor
push
xor
test
pop
push
ds
mov
shrl
jecxz
xor
cmpb
sub
xlat
mov
dec
sub
add
xor
call
push
fwait
adc
inc
mov
inc
push
jno
sub
xor
lods
aad
cld
pop
xor
gs
push
inc
fistl
nop
or
cmp
mov
pop
cltd
and
inc
pusha
test
xchg
mov
pop
cmp
mov
out
dec
addr16
fisubs
push
test
cmpsl
mov
insl
cli
xchg
mov
ja
scas
movsl
sbb
dec
jno
lods
mov
js
add
jns
subl
das
stos
sbb
fldcw
orb
fs
cltd
adc
lds
add
pop
cmc
mov
lock
adc
and
les
loopne
mov
cmpsb
es
xor
gs
add
fadds
xor
cmp
xchg
out
test
add
xor
sbb
fwait
adc
leave
add
pop
xor
lcall
fwait
insb
add
adc
addr16
push
nop
daa
sbb
arpl
pushf
movsb
cmp
sbb
addr16
dec
in
lods
pop
loopne
sub
xor
call
hlt
mov
push
lahf
ss
xor
ja
out
adc
out
nop
daa
inc
aaa
repnz
loopne
add
popf
xor
shlb
aam
mov
mov
xor
dec
and
push
fistl
or
jl
clc
sbb
negl
outsl
push
adc
fidivl
add
mov
adc
inc
loop
fists
sti
xchg
pop
add
test
sbb
jmp
pop
cmc
push
or
xchg
sub
icebp
rclb
push
call
pop
jecxz
inc
adc
mov
inc
push
stc
dec
int
loopne
ret
repnz
stos
arpl
test
outsl
lods
sbbl
aam
mov
gs
testb
lahf
adc
xchg
jns
xchg
sub
jbe
les
les
sub
int3
ret
insb
cmp
popf
sbb
js
mov
and
add
inc
pop
sti
bound
testl
test
pop
shrb
jg
in
jmp
fwait
xor
jnp
cli
test
js
pushf
test
js
stos
lods
in
out
and
test
jge
push
mov
ds
jo
mov
jnp,pn
jp
icebp
inc
xlat
and
shrb
stc
nop
lods
hlt
sbb
mov
xorb
sub
dec
fwait
clc
repnz
icebp
sub
and
test
mov
push
jmp
aaa
inc
fisubl
outsb
add
in
push
mov
xorl
jns
mov
push
jecxz
test
mov
repz
lcall
pop
sbb
arpl
jmp
ljmp
mov
push
lods
mov
mov
cltd
xor
adc
aam
das
add
dec
fistpll
daa
mov
lea
inc
movsb
scas
lock
enter
pushl
pop
xchg
sub
shlb
outsl
lea
mov
hlt
mov
inc
lret
gs
insl
xchg
xchg
sbbb
mov
or
call
movsl
cmp
cmp
nop
mov
dec
mov
stc
adc
push
in
push
xor
xchg
and
ss
lea
sub
stos
movsl
aas
ror
shlb
hlt
push
in
and
cltd
xor
add
iret
mov
ret
fisubl
or
xor
mov
mov
outsl
call
or
cmp
popf
mov
pop
mov
jns
scas
push
jmp
adc
xor
addr16
xchg
sub
test
xchg
mov
aas
fcmovbe
xchg
sub
and
mov
mov
mov
repnz
fidivs
pop
adc
xor
std
push
call
push
in
loopne
ja
out
or
popf
cmp
dec
stos
out
xor
cmpsb
or
jb
jp
cmpsb
stos
in
mov
add
xchg
sub
inc
enter
pop
inc
out
out
mov
or
imull
int3
jle
out
xor
aas
xchg
fistl
add
jp
sbb
scas
and
lret
mov
sti
dec
lock
fidivrs
cmp
loopne
mov
sub
dec
jb
inc
fmull
inc
mov
cmp
inc
mov
cmp
pop
mov
pusha
inc
adc
fisubl
cmp
sarl
push
enter
pop
cmp
push
sub
sbbl
dec
mov
dec
outsb
push
fwait
xor
je
jno
sbb
inc
mov
sub
mov
ret
xchg
ja
mov
scas
adc
outsb
cmp
lods
outsl
mov
xchg
mov
jo
mov
dec
loope
aad
ret
cmp
cmc
push
repz
and
mov
pop
lods
inc
cmp
fmuls
pop
mov
pop
movb
inc
fidivs
cmpsb
stos
mov
in
mov
cmpsb
popa
cmp
es
jae
lea
or
mov
outsl
push
add
xchg
jl
mov
cmp
mov
cs
mov
lret
js
lods
xchg
popa
jo
inc
mov
push
ret
xor
bound
fnstcw
or
aad
pop
xor
pusha
mov
in
sbb
std
das
jb
or
jp
loop
inc
sub
popf
pop
inc
cmp
jns
pop
dec
pushf
aam
sub
jne
fnstenvs
and
xchg
movsb
mov
outsb
mov
aad
dec
roll
cmp
mov
clc
aas
iret
addr16
dec
mov
xchg
xchg
paddw
aad
ja
jnp
cmp
add
and
hlt
xor
les
add
add
dec
xchg
mov
add
sbb
aas
jge
xchg
mov
sarl
xchg
imul
push
arpl
rorl
ficomps
jbe
mov
stos
xchg
push
call
addr16
pop
lock
aad
push
jnp
push
pop
cmpsl
shll
fidivs
jbe
dec
frstor
pop
mov
jp
push
mov
in
inc
pushf
lret
stos
in
and
loope
pop
mov
iret
cmp
sbb
js
fidivl
cltd
loopne
sbb
scas
bound
out
xchg
sub
jmp
orb
push
data16
xchg
lret
std
frstors
mov
fnsave
repnz
pop
popa
or
scas
jge
stc
xchg
mov
cmc
subl
out
hlt
sub
mov
push
call
leave
cmp
add
fidivrl
fstpt
aas
push
fnsave
jb
and
mov
mov
mov
xor
jl
out
xchg
js
mov
icebp
in
mov
pop
mov
imul
bound
fs
mov
cli
push
cld
mov
les
add
fldcw
xor
xchg
jmp
lods
add
rclb
pop
leave
bound
pop
int
daa
incl
push
mov
shrl
cli
fmuls
les
and
aam
cmp
mov
out
shrl
adc
es
inc
int3
lods
imul
and
out
stos
in
std
daa
rol
xchg
mov
cld
loop
in
push
orb
in
sbb
stos
faddl
aad
js
stos
mov
test
adc
test
dec
les
or
leave
pusha
in
movsb
shll
adc
or
xchg
jecxz
cli
rorl
mov
es
or
sub
push
cmp
jns
and
daa
add
pusha
fdiv
xor
and
jno
aad
sbb
ja
pop
dec
test
mov
sbb
sbb
lock
sahf
jbe
and
add
je
push
shlb
daa
sbb
idivl
fs
or
inc
mov
xchg
add
popl
imul
imul
jne
cwtl
xor
xchg
sub
sbb
push
loopne
sahf
push
add
lds
and
push
into
xchg
xor
xor
lret
sub
sarl
iret
inc
mov
dec
loopne
test
sub
pop
mov
cmp
hlt
movsb
push
adc
cmp
enter
add
dec
xlat
xchg
or
fidivrl
lahf
xor
mov
movsb
inc
arpl
fadds
pop
call
add
push
notl
mov
or
add
sub
sbb
dec
fwait
adc
and
daa
jp
cli
ss
mov
leave
and
xchg
mov
cmp
jge
sub
pushf
es
jns
iret
xorb
out
mov
mov
fdivs
xchg
xchg
mov
pusha
mov
leave
adc
stos
dec
mov
mov
repnz
cmpsb
lea
or
mov
dec
out
insl
adc
mov
divb
mov
lret
and
sbb
fildl
ds
rorb
mov
mov
lea
nop
xchg
out
lcall
cld
pop
shl
adc
sub
subb
andl
mov
push
adc
shrl
fabs
clc
out
sub
xor
fisttps
xor
xor
dec
scas
out
sbb
cli
divl
out
jmp
lret
into
and
mov
je
fistps
or
lock
mov
sbbb
aam
fucom
loope
inc
mov
sbb
cli
call
js
mov
out
sub
pop
jae
and
adc
jl
push
sahf
loop
sti
dec
jl
cmp
mov
add
lea
adc
adc
lcall
cmp
jge
int3
pusha
inc
sahf
sub
xchg
outsb
popf
or
and
xchg
imul
dec
push
push
imul
popa
pusha
mov
xchg
jge
outsl
mov
or
mov
pushl
push
mov
test
int
xlat
aad
sub
inc
cmpsl
cmp
adc
clc
xor
out
and
cmp
enter
in
and
and
es
fildl
pop
lret
mov
cmp
test
add
idiv
xor
jmp
das
dec
push
mov
dec
jle
ret
dec
dec
sbb
cwtl
insl
aaa
jmp
or
cmp
adc
outsl
mov
loope
cs
dec
push
sbb
push
push
adc
inc
and
movsl
dec
push
leave
push
ljmp
push
test
sbb
cltd
or
adcb
dec
fucomip
aas
push
stos
jge
adc
scas
adc
or
push
push
popf
jp
and
jnp
sti
pop
adc
or
repnz
sub
push
data16
and
cmpsb
pop
andb
inc
mov
mov
push
notl
dec
imul
mov
das
push
ljmp
push
sbb
fimuls
mov
int3
je
mov
pusha
adc
orb
and
mov
and
pop
aad
outsl
jge
dec
and
push
dec
pop
aad
ja
sahf
dec
sahf
sub
sbb
outsl
or
pop
or
pop
jge
sbb
pop
cmp
pop
js
das
dec
xor
movl
xchg
mov
insl
xchg
pop
cmp
mov
jns
out
cwtl
test
test
or
es
int3
inc
pop
xor
mov
insl
pop
sub
lods
or
sbb
ds
mov
mov
or
scas
pop
fs
out
sbb
sub
mov
xchg
aas
and
dec
or
inc
les
ficoms
mov
lret
pop
aam
push
data16
insb
mov
aam
lea
xor
adc
push
pop
inc
std
xchg
ja
xor
sbb
std
inc
mov
sti
pop
sbb
leave
dec
cwtl
fnsave
repnz
test
inc
push
mov
pop
add
outsb
add
xor
xchg
xchg
adc
or
jb
pop
roll
aas
pop
or
lret
lock
notl
jne
divb
dec
mov
test
xor
ficomps
rorb
sarb
mov
in
adc
jo
repz
cmp
xlat
ds
insl
cltd
mov
fildl
aad
mov
pop
ret
enter
inc
into
push
movsl
call
or
xchg
andb
add
arpl
dec
fs
pop
dec
jp
push
push
mov
cmp
inc
fwait
jbe
or
mov
addl
test
enter
data16
repnz
mov
or
daa
fnstenv
divl
sarl
and
int
int
adc
mov
xor
in
test
inc
std
das
addr16
dec
sub
inc
jp
xor
jo
mov
xchg
pop
fwait
mov
pop
rcrb
inc
mov
cmp
pop
lock
pop
arpl
repnz
lock
push
mov
ret
call
mov
push
and
mov
push
cwtl
mov
out
js
out
xchg
cwtl
inc
xlat
ret
psubd
aam
mov
add
int
push
bound
jle
dec
pop
cmp
push
test
pop
repz
sbb
in
test
ret
stos
outsl
aam
dec
ret
stos
inc
vmread
jmp
xchg
pop
add
mov
repnz
out
pop
ret
test
mov
loopne
out
ret
dec
loop
or
adc
sbb
cld
dec
stc
push
mov
clc
xor
aad
sti
xor
icebp
stos
pop
leave
cld
movsb
sbb
add
test
sbb
mov
cld
cs
les
insb
cmp
cmp
mov
mov
out
mov
jbe
jp
cli
inc
add
inc
sbb
std
test
fstps
push
lods
dec
das
inc
xchg
imul
mov
lock
int
push
enter
leave
aam
xor
ss
cmpb
sub
shrl
cmp
push
leave
xor
pop
lock
jb
mov
lcall
lds
jl
mov
or
mov
xor
mov
fdivl
stos
fcoms
dec
mov
imul
add
aas
mov
icebp
sti
ss
pushf
add
mov
lods
push
je
loopne
dec
jecxz
add
lock
repz
fldcw
loopne
iret
pop
add
sbb
jg
jns
inc
movsb
jae
push
mov
xchg
mov
cld
and
mov
mov
push
in
sbb
sar
testb
std
enter
push
xchg
push
in
xchg
test
loopne
mov
mov
out
add
push
ror
jae
test
int
cmpsl
pop
cmp
mov
dec
and
xorl
bound
cmpsl
jmp
sbbb
mov
subb
arpl
push
bound
es
jg
mov
pop
or
xchg
sub
mov
xchg
dec
lods
lahf
nop
negb
mov
jo
jecxz
stc
mov
lds
mov
or
stc
add
stos
jp
lods
jns
repz
hlt
dec
iret
add
call
int
push
aam
pop
scas
ja
in
ret
cwtl
out
inc
push
aad
inc
rorl
mov
std
mov
test
and
pushf
jne
jns
or
fmuls
or
xlat
sbbb
negb
push
or
lods
lods
and
mov
ljmp
icebp
mov
in
push
lds
test
sti
mov
mov
in
mov
adc
out
fldl
scas
inc
jecxz
add
incl
mov
sahf
int3
psubb
cli
and
push
shl
stc
mov
std
pop
or
lods
mov
adc
mov
filds
xchg
sub
adc
or
add
xor
add
pop
xchg
add
or
mov
mov
shr
jnp
mov
jmp
outsb
lret
mov
mov
hlt
addr16
aas
cmpsl
lds
pop
jb
or
mov
mov
ds
cmpsl
jp
xor
inc
cmp
pusha
rcll
push
xchg
mov
add
xor
stc
loop
int3
lcall
icebp
xchg
imul
adc
inc
ds
movsb
shrb
mov
mov
cmp
jecxz
dec
mov
or
mov
pop
lock
ret
daa
lahf
sahf
loop,pt
sbb
cmp
adc
clc
pop
ret
data16
sbb
loopne
imulb
jnp
das
lds
mov
adc
mov
clc
sub
mov
jp
mov
andb
js
pop
push
imul
insl
dec
les
cmp
lds
cmp
or
out
or
sbb
testb
leave
roll
xchg
mov
imull
mov
in
cmp
or
push
cwtl
fcmovnbe
imul
mov
sbb
sti
mov
out
das
call
inc
rcrb
xchg
js
pop
sub
das
rorl
stc
les
jne
test
or
scas
cmpb
incb
push
push
adc
xor
jnp
es
push
stc
xor
cld
xchg
mov
clc
dec
sahf
out
scas
inc
sub
push
shrb
lock
mov
test
push
pop
inc
mov
push
add
popf
pop
jmp
cld
mov
sbb
adc
out
adc
cld
dec
adc
push
push
dec
xchg
outsb
mov
gs
inc
lret
lds
aam
enter
adc
sub
aad
into
push
pop
lds
out
xchg
add
cmpsb
mov
fiadds
cmc
xor
out
mov
adc
xchg
cli
and
fwait
out
xor
stc
and
ret
pop
xor
inc
popf
gs
imul
or
cmpsl
in
sbb
push
cmp
sub
loope
es
xor
dec
xor
mov
mov
xor
xchg
daa
in
jg
arpl
xor
jne
es
sarl
lock
nop
mov
stos
pop
test
lahf
mov
ret
jmp
sbb
add
push
cmpsb
adc
sub
sahf
xchg
lds
sbb
shll
mov
add
outsb
fadds
fidivs
out
and
xor
inc
adc
mov
daa
clc
mov
bound
cwtl
das
rol
sbb
loop
sbb
int
and
add
pop
mov
ret
mov
xchg
mov
or
in
xchg
xchg
pop
mov
scas
test
mov
gs
sar
and
lret
push
jmp
fucomip
sbb
movsl
repz
ret
daa
call
sar
and
push
sbbl
jl
jnp
jmp
jmp
loop
push
rolb
jmp
out
adc
shlb
clc
sahf
or
shrb
ja
aas
sub
jo
xchg
nop
rclb
jp
shlb
lret
inc
aam
mov
out
cmp
mov
fcoml
repnz
lahf
cmpsl
cmp
mov
or
nop
mov
adcl
mov
rolb
xor
mov
je
jmp
fldcw
test
or
jb
dec
add
jnp
jg
fisttpl
mov
mov
mov
mov
nop
loop
ret
xchg
jmp
mov
lahf
sti
nop
jg
mov
pop
stc
mov
adc
out
stos
into
inc
repnz
mov
mov
rcrl
stos
adc
jno
push
dec
out
add
sub
or
movups
nop
push
das
inc
icebp
mov
mov
icebp
cmp
xchg
data16
repnz
xor
mov
lock
bnd
test
adc
cmpsl
popa
test
sbb
xor
pop
jne
outsl
dec
pop
or
dec
cmpsl
jge,pt
out
and
aad
mov
clc
int3
call
inc
mov
mov
fistps
jmp
arpl
xor
or
orl
rclb
or
out
movsl
push
mov
out
pop
inc
mov
ret
dec
pop
and
sbb
mov
and
popf
push
sub
xchg
jge
xchg
lea
insl
mov
js
push
lods
add
loope
jg
dec
scas
sbb
fsubrs
cmp
or
cli
hlt
sub
mov
jecxz
fdivl
xor
pop
mov
movsb
cli
xchg
push
mov
pop
sub
in
imul
pop
imul
pop
mov
inc
dec
dec
loop
dec
nop
pop
dec
outsl
aas
in
aas
mov
pop
pop
in
imul
loope
dec
lds
jecxz
jmp
js
test
ret
or
mov
lock
mov
mov
mov
inc
xchg
jae
enter
xor
test
mov
sbb
adc
or
inc
ds
in
push
insb
pop
xlat
dec
insl
dec
sahf
test
mov
movl
jg
add
pop
mov
or
test
insb
out
mov
lea
out
fisttps
in
dec
loopne
add
sub
jae
pop
sahf
cmp
cmp
das
ficompl
mov
iret
in
in
push
arpl
repnz
dec
lahf
cmpsl
add
sti
sub
test
mov
mov
hlt
data16
movsl
inc
movl
mov
adc
pop
inc
pushf
jg
pop
xchg
ja
sub
inc
nop
push
cltd
xor
test
mov
das
push
jns
mov
addl
pop
cmc
xchg
fnstsw
out
adc
jmp
or
or
scas
insb
sbb
cmp
in
and
jle
sbb
call
or
in
mov
repz
mov
stc
or
sub
push
pop
dec
or
push
xor
and
addr16
cmp
cmpsb
rorb
sub
aad
lds
fcmovnu
es
jmp
xor
test
sbb
daa
cmc
sbb
mov
out
repnz
leave
aaa
cmc
xor
repz
in
xor
sbb
adc
dec
es
cmpsl
ds
inc
iret
push
gs
and
jmp
js
repnz
nop
in
push
je
push
test
pop
iret
push
xchg
jl
enter
stos
jmp
jecxz,pt
fldenv
or
fisttps
mov
adc
in
sbb
loop
add
mov
hlt
xor
or
mov
lret
lods
mov
repz
jecxz
sbb
adc
lock
adc
push
scas
negl
or
ret
inc
sub
popf
jae
jae
aas
dec
push
cli
and
incb
pop
jmp
pop
and
inc
dec
mov
push
imul
xchg
adcl
loopne
sbb
subb
sbb
fbstp
and
in
aaa
xchg
idivb
xchg
repz
xor
leave
xchg
sub
test
push
cld
sbb
xchg
mov
or
lahf
mov
inc
sbb
and
out
xchg
jnp
mov
adc
mov
xchg
inc
fbld
addr16
sbb
pop
cld
push
test
lds
mov
daa
mov
shrb
inc
sahf
xlat
mov
orl
test
int3
jns
ds
push
pop
stc
inc
aas
fs
xchg
adc
jle
addl
add
inc
shlb
mov
or
push
push
cmpsb
imul
out
dec
das
lahf
xchg
loop,pn
xor
xchg
xchg
cmp
or
outsb
cltd
mov
lret
popa
inc
aad
movsl
fadds
pop
jae
push
into
out
cmp
lds
bound
insb
sbb
movsl
mov
in
aas
stc
xor
loope
jp
loop
and
in
js
add
dec
sahf
negb
mov
movsb
popa
addr16
mov
nop
fstpl
mov
orl
mov
js
loope
in
jg
push
int
popf
push
jmp
mov
mov
rcll
xor
add
or
adc
sbb
dec
int3
lock
inc
cmp
pop
adc
in
and
fsubrl
xchg
mov
mov
in
lods
mov
sbb
fiadds
cmp
mov
lods
pop
rolb
addr16
xor
mov
ret
push
cmc
sub
mov
push
jl
mov
lods
jo
mov
pop
loop
popf
jle
xchg
xchg
cwtl
dec
addb
pop
stos
pusha
pop
xchg
xor
jne
mov
out
pop
cmp
or
inc
mov
jle
test
pushf
cli
fmul
pusha
or
mov
pop
outsb
inc
fstps
shlb
shlb
mov
inc
and
push
popfw
xor
je
mulb
jge
clc
or
jno
sbb
xchg
insb
mov
lods
jecxz
fsubrs
add
int3
xor
push
push
ljmp
jno
sbb
jecxz
call
or
lcall
sbb
dec
fimull
mov
sbb
ds
jmp
aad
jecxz
dec
shrb
out
add
mov
lea
hlt
pop
mov
mov
mov
cmpsl
cmp
movsl
cmp
nop
pop
cmc
shll
adc
loop
sub
lcall
pop
rcrl
data16
int3
lods
cs
add
inc
inc
lret
bound
test
xchg
icebp
mov
mov
cmpsb
call
or
lds
cmp
in
mov
xchg
mov
xchg
sbb
mov
ss
xor
sub
test
repz
jecxz
imul
dec
std
mov
push
in
shlb
xor
lds
sub
jno
in
sbb
jge
dec
xchg
lret
sti
mov
mov
and
inc
fdivs
or
dec
lahf
fisubrl
fwait
inc
adcb
into
addb
out
inc
jo
or
cmpsl
pop
mov
push
xchg
das
aaa
jp
mov
jnp
ds
push
addr16
test
mov
pop
push
pop
mov
add
fstpl
xor
lcall
imul
movb
and
pop
mov
ret
leave
cli
add
int3
mov
and
lock
repz
cli
inc
clc
adc
jno
es
testb
mov
cltd
push
cmp
mov
clc
mov
cmp
inc
test
inc
add
jle
sbb
iret
jp
mov
inc
push
or
and
mov
cltd
movsl
mov
ret
and
cmp
gs
pop
xchg
repnz
jp
sub
xchg
add
orl
pop
pop
sbb
popf
std
sub
fidivrl
mov
call
add
out
cmp
inc
inc
adc
pop
jae
sbb
fs
outsb
push
cmpsl
add
jae
pop
gs
adc
push
xor
or
fdivrl
push
aaa
insl
push
fucom
shrl
xlat
pop
cld
pop
cmp
fwait
mov
shl
or
stc
mov
sbbl
rorb
mov
js
in
mov
xor
dec
push
addr16
mov
stos
out
jmp
sbb
std
dec
movsl
mov
or
notb
ss
or
cmp
push
repz
adc
cmp
sbb
dec
mov
cmp
dec
inc
cwtl
cmp
out
xor
popf
divb
mov
mov
loope
xor
clc
popa
out
mov
mov
cmpsl
or
imul
pushf
popw
fwait
mov
subb
inc
aam
sbb
imul
mov
inc
sbb
push
negb
add
outsl
sbb
imul
loop
mov
jg
cltd
mov
jae
sub
and
inc
jne
cwtl
cmp
or
xchg
sub
roll
ret
insw
fcmovbe
push
sbb
dec
and
jnp
push
test
xor
and
out
inc
xor
cmp
loop
int3
mov
pop
repz
mov
in
and
cmpsl
ds
pop
imul
cwtl
in
jnp
fidivrs
and
repnz
xor
cmp
fidivs
shrb
push
out
test
jbe
loopne
dec
shrb
and
mov
loop
test
cmpsl
popa
clc
sbb
call
cs
loope
mov
test
cld
fpatan
cmp
and
sbbl
push
push
in
xchg
dec
hlt
loopne
arpl
pop
cli
subb
in
fstpt
aaa
daa
dec
lahf
ss
ljmp
fsubs
loop
fdivrs
lcall
xchg
inc
mov
mov
pop
mov
push
jns
fs
push
sub
cld
cmp
in
inc
mov
repz
xlat
or
cmp
ds
in
mov
or
repz
jl
aas
scas
dec
leave
nop
je
ret
gs
jp
xor
hlt
pop
jl
push
push
mov
scas
push
test
jo
dec
popa
call
fsub
add
jnp
into
xchg
out
add
jg
add
test
outsl
mov
pushf
fidivrl
inc
test
or
lretw
je
jns
sbb
sub
mov
das
mov
jp
inc
or
cltd
aas
call
cli
orb
xchg
cmp
cmp
es
fdivs
fnsave
jnp
in
adc
mov
sub
iret
xchg
fnstenv
pop
adc
jne
shl
cmc
pop
adc
inc
movsl
and
adc
int3
xchg
fisttpll
cmp
jno
imul
arpl
rolb
mov
dec
inc
ret
xchg
fwait
xchg
cmp
stos
xor
adc
jo
pop
ret
xchg
dec
or
xchg
js
sbb
cs
xor
pop
lcall
loopne
push
sahf
dec
add
or
and
lahf
inc
cmp
sub
js
in
and
pop
dec
mov
fsub
rcll
loopne
hlt
pop
stc
imulb
mov
scas
mov
mov
dec
push
cmp
xchg
cmp
or
repz
call
sbb
dec
cmpsl
sub
lds
mov
scas
jmp
std
push
clc
mov
fwait
inc
mov
mov
out
jo
xchg
sarl
cmp
jle
mov
adc
ret
mov
sbb
cmc
orb
inc
adc
lret
pusha
into
adc
lods
call
icebp
mov
push
ja
or
rcll
or
fs
in
sub
out
jmp
dec
loope
call
dec
iret
or
lods
sub
mov
jne
sbb
jo
data16
mov
and
xchg
leave
loopne
movsb
inc
adc
jl
sahf
test
je
testl
inc
xchg
fs
inc
int
pop
jnp
adc
cmp
mov
and
jne
out
mov
add
xchg
xchg
out
testb
inc
std
lcall
cmc
sbb
jne
out
fidivrl
adc
or
mov
cmc
push
stc
pop
je
adc
push
jo
incb
pop
fnstcw
jno
add
pop
cmp
hlt
sub
pop
ja
fidivrs
mov
js
fdivl
test
xchg
and
pop
std
mov
adcb
or
push
data16
lea
jns
shl
outsl
dec
ljmp
mov
mov
xchg
inc
xor
sub
jb
pop
test
mov
jg
cltd
mov
cs
xor
je
test
jnp
cmc
jg
sbbb
pop
push
sbb
mov
cmpsb
push
repz
loope
int
clc
pop
cld
adc
arpl
clc
pop
cltd
ds
push
mov
jle
mov
addr16
addr16
hlt
nop
adcb
stc
pop
popa
mov
mov
mov
int3
fnstcw
mov
cwtl
iret
out
pop
hlt
adc
push
in
stc
pop
fimull
cltd
cmp
push
lret
fdivrs
mov
clc
pop
mov
mov
mov
aad
outsl
pop
mov
lea
lods
adc
test
sbb
xchg
jne
pop
lret
int
les
xor
xchg
xchg
cmp
out
das
stos
shll
xchg
enter
mov
daa
jno
aas
lcall
lds
aam
cmc
popa
pushf
or
jp
les
and
jne
pushf
jmp
sbb
les
pop
pop
int
cmc
popa
pushf
adc
les
outsb
mov
cmp
mov
xchg
dec
jge
mov
into
filds
repz
sar
or
or
jnp
rcrl
mov
lahf
sub
rcrb
negb
fdivp
pop
movsb
insl
addb
je
stos
push
or
mov
stos
mov
clc
adc
scas
ss
inc
jae
lahf
jmp
je
int
add
cmp
adc
xorl
cmpl
mov
push
outsl
cmc
int3
iret
cli
bound
test
rcrl
lret
or
fisttps
enter
ret
shrb
mov
push
cld
cmpl
or
filds
mov
mov
lret
push
jl
pop
xchg
jbe
mov
ret
das
fimull
rol
cmp
push
aam
ret
out
mov
cmpsl
sub
ret
scas
pop
mov
arpl
ret
outsl
cmp
cli
xchg
jge
jg
gs
movl
sbb
lcall
jle
dec
adc
insb
insl
lock
pop
cmp
xchg
pop
inc
jmp
rorb
sbb
sub
out
hlt
inc
dec
adc
loop
enter
sbb
in
orl
in
inc
or
cmp
jnp
inc
or
outsl
test
in
das
mov
loope
out
aad
pusha
cmp
aam
enter
ja
mull
mov
jg
stc
scas
outsl
out
and
push
jmp
aas
lahf
pusha
iret
xlat
ja
js
subl
adc
mov
jae
fcmovnbe
sub
mov
pop
cli
mov
mov
pop
mov
mov
bound
movsl
test
inc
loopne
add
dec
sti
mov
lcall
mov
es
leave
imul
in
xchg
lds
inc
mov
icebp
bound
lret
jmp
stos
mov
add
loopne
imul
shll
mov
enter
mov
mov
cmp
mov
movsl
roll
pop
insl
in
outsb
iret
xchg
mov
inc
mov
mov
fwait
cmp
sbb
inc
pop
arpl
adc
das
jmp
leave
mov
int
sbb
fimull
mov
mov
pop
iret
lock
mov
adc
push
enter
pop
pusha
push
sbb
lahf
add
and
pop
stc
jmp
insb
ljmp
cmc
popa
jnp
add
repnz
jns
mov
add
dec
mov
popa
call
push
pop
push
cli
lock
fincstp
push
clc
aam
dec
adc
fcmovnbe
jge
loopne
mov
push
in
outsl
movsl
cmp
lds
into
xchg
mov
lods
xor
fisubrs
std
fwait
decl
or
pusha
in
mov
addl
out
pop
push
fidivrs
mov
mov
icebp
pop
mov
movsl
mov
test
mov
push
xchg
inc
push
pusha
cmp
testl
add
pushf
popa
cld
fs
cmp
insl
jb,pn
xchg
adcb
cmp
adc
imulb
popa
aas
out
xchg
cvtps2pi
fwait
pop
pop
jl
data16
jno
xchg
aaa
cli
fistpll
and
pop
ss
mov
subl
insl
test
mov
es
push
aam
or
sbb
mov
scas
push
sti
mov
push
jne
push
or
mov
mov
test
adc
out
inc
flds
jmp
sti
inc
stc
insl
lock
fadds
fdivrl
lret
inc
or
movl
inc
fistpll
sub
xchg
sub
or
pop
mov
and
addl
mov
je
lods
jmp
fcoms
sti
mov
das
cmp
es
or
jne
enter
add
dec
cltd
cmp
mov
sar
enter
loope
pop
pop
into
aaa
mov
and
in
add
pop
mov
cmpsb
ja
jbe
mov
sbb
push
push
in
mov
mov
mov
mulb
scas
sub
jl
dec
dec
or
add
testb
dec
or
xchg
sub
sub
cmc
mov
iret
xchg
xor
push
idivl
cmp
jmp
cli
or
mov
mov
and
xchg
lcall
jp
jmp
jo
mov
int3
test
dec
sub
push
mov
dec
stos
push
push
cli
mov
pop
add
mov
cmp
aad
jno
out
lds
sahf
movsb
outsl
lea
mov
scas
sub
mov
mov
sbbl
aaa
inc
add
insb
out
push
mov
cmp
fwait
cmp
inc
mov
jl
insl
push
and
fdivrl
pop
iret
or
cmp
push
jne
and
jp
scas
xor
pop
shrl
sti
dec
xor
bound
js
jns
sub
mov
rclb
xlat
sti
mov
mov
jecxz
sbb
dec
in
insl
stos
fidivrl
lret
jnp
adc
mov
ss
sub
bound
inc
int3
lret
mov
sti
push
jp
mov
cmp
mov
mov
test
loopne
or
sbb
push
push
jmp
jecxz
push
int
hlt
jg
filds
jae
jl
or
stos
out
jae
les
lret
dec
cs
sahf
les
push
push
jno
mov
lods
push
testl
push
adc
inc
cmc
mov
lahf
xchg
les
xlat
popa
inc
push
out
add
dec
push
lcall
pop
add
mov
xchg
sub
and
pusha
inc
xor
aas
cmp
dec
or
and
mov
pop
push
call
cmpsb
subl
sub
addr16
aas
pusha
insl
testb
xchg
fiaddl
loop
movsb
sub
testl
out
inc
ds
cmp
push
leave
sub
in
push
loop
mov
add
std
cld
add
gs
xchg
cmp
ret
jbe
or
movsb
sub
mov
test
hlt
fs
loope
and
cmp
pop
stc
pop
push
sbb
mov
mov
in
sub
xchg
inc
arpl
aad
scas
jg
inc
dec
mov
cs
cwtl
mov
mov
das
aad
push
xor
mov
and
mov
sbb
mov
fists
mov
push
stos
add
and
cs
mov
mov
mov
movsb
xor
imul
xchg
rorl
mov
mov
scas
sbb
dec
adc
iret
inc
outsl
outsl
idivb
stos
jbe
data16
cmpsl
sub
jbe
decl
add
adc
dec
scas
xor
clc
fstpl
ss
mov
outsl
repnz
lcall
enter
push
mov
push
iret
fildl
inc
sub
mov
fwait
fs
icebp
sbb
push
dec
sub
es
lret
lods
rcll
inc
fs
insl
loopne
js
pop
or
add
notl
hlt
out
out
mov
dec
sub
fistpll
scas
mov
into
cmpsl
xor
sub
stos
cmp
jmp
cs
sbb
mov
test
fs
or
sbb
sbb
add
cmp
or
add
test
inc
mov
pop
popf
aam
jnp
add
mov
mov
push
leave
add
testb
push
std
out
cmp
mov
dec
xchg
or
pop
sub
mov
stos
popa
jmp
into
dec
adc
jl
mov
mov
lods
inc
mov
sbb
or
jbe
push
sub
insl
xor
xchg
jno
sbb
into
jl
ret
addr16
adc
inc
mov
jns
outsl
cmp
and
stos
xor
jb
out
push
xor
ret
andb
dec
lss
xchg
sub
jnp
push
jle
adc
fs
dec
and
lahf
lahf
int3
xchg
inc
lret
inc
xchg
mov
add
add
mov
lods
stos
sub
mov
xor
xor
test
add
insl
lret
or
jg
dec
push
cmpsl
outsl
mov
mov
push
xchg
jns
in
enter
mov
jns
sbb
loop
pop
or
test
cmp
mov
das
stos
jg
cltd
cmp
gs
stc
and
aaa
out
inc
mov
les
into
mov
push
movsl
adc
gs
push
data16
mov
dec
adc
sbb
adc
xchg
adc
inc
lods
xor
lods
int
xchg
mov
or
sub
mov
ret
mov
adc
mov
imul
cmp
cmp
pop
add
xor
outsb
sbb
dec
and
repz
pusha
out
xchg
aaa
aam
notb
add
jb
xor
daa
stc
dec
adc
pop
jmp
orb
jp
dec
movsl
xchg
inc
push
jno
xchg
mov
cmp
xor
scas
sub
sub
pop
pop
jp
outsl
mov
and
cmp
push
ja
cmp
outsl
push
xor
std
lods
push
sbb
sub
mov
popa
fwait
mov
jae
inc
dec
or
and
sbb
xor
sub
sub
inc
or
inc
xchg
pushf
inc
movsl
adc
mov
movsb
pop
daa
js
sub
movsb
xor
xchg
inc
dec
xorl
sub
mov
ljmp
adc
dec
pop
sub
xchg
pop
rcrl
fidivrl
inc
rolb
scas
cmc
pop
mov
cltd
int
ss
jne
clc
inc
mov
push
addr16
popf
inc
rcll
inc
xchg
add
lahf
inc
enter
xchg
sub
mov
imul
sub
mov
mov
mov
inc
int3
xor
aam
fidivrs
or
xchg
inc
sbb
lahf
cmp
mov
fistl
add
dec
inc
fnstsw
stc
add
xor
mov
mov
out
sub
cmp
stos
add
push
loopne
fidivrs
lea
or
push
cmp
sbbb
and
jp
or
shrl
std
lcall
add
lret
lods
sti
add
push
mov
imul
and
aaa
cmpsb
mov
sbb
lods
or
iret
mov
int
mov
call
repz
adc
movsb
cmp
pop
jge
js
pop
arpl
mov
sbb
dec
daa
lods
xchg
gs
data16
mov
iret
push
adc
clc
cli
mov
lock
rclb
imul
mov
adc
dec
or
pop
mov
insb
push
mov
mov
loop
cmpl
sub
fucom
je
adc
xchg
sbb
and
inc
dec
test
ss
stos
xor
mov
sub
and
mov
imul
cwtl
xrelease
roll
mov
je
inc
out
shl
idivb
sbb
clc
mov
mov
icebp
popa
inc
cmp
xchg
scas
lcall
xchg
aas
pop
stc
fxch
mov
add
pop
cmp
iret
add
pop
pop
push
scas
xor
dec
add
xchg
popf
mov
add
and
and
push
jae
out
inc
pop
lret
mov
lods
xchg
mov
das
xchg
inc
or
xchg
pop
cltd
inc
add
popa
out
dec
push
jae
xor
pop
add
jae
dec
push
add
adc
xor
sub
pusha
adc
enter
mov
dec
push
test
mov
lods
xor
adc
fildl
push
test
adc
inc
adc
outsb
std
insl
icebp
cltd
jp
stos
loop
loope
sub
ss
cmp
mov
xor
and
outsl
in
in
ja
pop
jle
pop
cld
out
cmpsb
xor
imulb
test
and
aad
imul
lea
jbe
xchg
test
lret
push
cld
cmp
ss
mov
sub
test
leave
mov
cs
jge
movsb
sbb
cs
dec
pushf
inc
cmpsb
mov
add
movsb
scas
cs
push
dec
or
jns
repz
fucomip
inc
adc
int
int
push
cmpsb
cmp
gs
pop
mov
lods
mov
mov
and
fisubl
sub
adc
lods
int
xor
pop
sbb
aas
mov
sub
sbb
les
imul
loop
dec
fs
cmp
cmpsb
ss
and
scas
and
inc
es
movsb
nop
inc
push
inc
sbb
enter
or
push
xor
into
pop
stos
inc
lea
pop
hlt
inc
sahf
leave
pusha
shlb
mov
xor
pop
add
push
add
lcall
sarb
rcrl
lds
sbb
pop
mov
lods
cwtl
inc
mov
scas
out
jae
aam
cmp
sahf
inc
sub
or
flds
scas
dec
and
xor
sbb
shll
jbe
and
or
mov
in
push
ja
lock
mov
in
sbb
and
subb
aaa
pushf
jp
mov
leave
mov
rclb
ljmp
dec
sahf
inc
jo
inc
or
les
imul
movl
inc
or
or
idivb
fldcw
mov
jae
xchg
mov
inc
sub
cmp
cmp
icebp
pop
xchg
cs
pop
rorl
bound
into
loopne
std
bound
clc
jnp
int
rorl
decb
test
shrl
mov
and
outsl
ljmp
cmpsl
test
hlt
inc
mov
rcll
negl
iret
lea
mov
sbb
rcrl
xchg
lahf
push
pushf
loope
gs
xchg
inc
add
pop
fidivs
mov
dec
or
scas
addr16
adc
mov
push
jb
dec
or
outsl
jbe
lahf
push
nop
daa
add
rcl
mov
cmp
inc
or
xchg
push
cli
iret
fisttps
sarb
stos
inc
pop
inc
sbb
mov
xchg
push
je
mov
movsb
fisubrs
rolb
inc
lods
inc
xchg
sahf
sbb
fldz
xor
xor
xchg
inc
stc
bswap
jno
shrb
outsb
sbb
mov
push
into
push
mov
ja
gs
xchg
int3
mov
in
outsb
js
sbb
inc
std
xchg
cwtl
jne
fcomps
mov
cmp
sub
fisubl
dec
and
rcrb
test
cmp
push
repz
lods
popf
inc
popl
sub
fidivrl
mov
sub
mov
inc
xchg
cmp
imul
jnp
test
outsb
sbb
nop
xor
loopne
sub
mov
lds
lock
jmp
ret
lahf
aas
cld
mov
mov
xchg
lods
xor
rcrl
ja
sub
add
lahf
aas
stos
push
jle
enter
test
lods
xor
rcrl
add
push
popf
cmp
cmp
jp
fdivs
arpl
inc
dec
mov
add
pop
inc
adc
movsl
and
mov
mov
scas
mov
mov
mov
cwtl
aaa
retw
push
jg
loopne
mov
or
inc
adc
xlat
movsb
xor
pushf
cmp
mov
cmp
cmp
push
jle
mov
pop
inc
or
jl
mov
jno
repnz
lods
out
jno
cmpsl
aad
sub
rorl
fildl
mov
std
add
jge
out
std
out
test
orl
aad
mov
sti
addr16
inc
das
icebp
popa
pop
lcall
pop
or
push
xchg
inc
adc
fcomi
bound
mov
mov
pop
fidivs
cmp
add
mov
dec
out
fstl
lds
scas
jge
into
imul
push
fldcw
pop
push
adc
jns
mov
xor
inc
adc
jo
cmpsb
dec
int3
xchg
or
cmpsb
cmp
jmp
dec
adc
sbb
outsl
pop
fsubrs
movsb
sub
in
xor
enter
mov
lea
mov
popf
ret
cltd
iret
inc
or
lret
fstpt
cs
push
cmc
xchg
sub
and
push
push
jns
test
ret
mov
sub
inc
push
dec
push
repz
or
arpl
adc
test
jbe
sar
pusha
repz
add
push
push
stc
mov
mov
out
jne
outsl
fdivs
sbb
push
push
sbb
ret
jge
rcrl
test
xchg
add
or
inc
mov
aad
out
scas
and
xchg
movsl
dec
outsb
dec
or
xchg
inc
push
imul
adc
mov
movsl
xchg
inc
mov
mov
pop
rolb
lcall
aam
sub
iret
or
inc
outsb
shrb
pop
add
filds
push
aam
loopne
dec
movsb
sub
arpl
jnp
je
mov
mov
inc
cmp
sub
iret
xchg
xchg
inc
flds
lods
in
jno
dec
or
jno
notl
insb
repnz
push
popf
inc
xchg
ja
aad
push
cld
cmpsb
inc
add
mov
lret
mov
movsb
movsb
add
aam
outsl
pop
pop
sti
dec
je
mov
aaa
mov
xchg
xlat
cld
pop
pop
lret
and
in
adc
loop
lods
sub
fdivrl
mov
imul
mov
scas
sub
ss
test
and
cltd
dec
mov
xor
jmp
loopne
add
movsl
and
push
xchg
fistl
fiadds
mov
lods
in
jb
push
sbb
xlat
ja
imul
sahf
adc
dec
mov
int3
cmpsb
push
push
cmpsb
adc
dec
repnz
popl
out
push
add
dec
pop
clc
sbb
mov
jp
leave
pusha
xor
icebp
mov
push
pop
push
xchg
aas
sbb
call
stc
sti
popa
ret
xchg
rorb
sub
inc
xchg
pop
mov
xor
mov
push
cli
shll
pop
ret
mov
adc
test
ljmp
cmp
addl
ljmp
inc
imul
dec
mull
rcrl
xor
std
sub
jns
daa
mov
popa
jmp
sahf
mov
shlb
mov
imul
daa
push
outsl
test
cmc
stos
cld
mov
xchg
mov
jae
sbb
daa
scas
dec
sbb
adcl
sub
cs
cmp
jl,pn
mov
sub
in
add
movsl
add
mov
ljmpw
xor
cld
arpl
or
addr16
leave
jle
shl
adc
sti
out
mov
out
adc
push
pop
sti
push
or
xlat
adc
dec
jp
and
outsb
sbb
iret
stc
add
mov
push
loopne
fstps
std
data16
cmc
sbb
dec
orl
repz
sbb
call
imul
inc
into
data16
pop
lea
jbe
fstps
adc
sbb
inc
fcomp
jp
lahf
rolb
or
dec
or
adc
mov
xchg
cmp
add
fstpt
and
leave
sbb
pop
popa
sbb
in
jbe
push
scas
cli
ret
mov
lods
lahf
inc
aaa
xorl
ljmp
lahf
xorl
repnz
fnstcw
add
jns
ret
jns
orl
add
repz
out
loopne
pop
std
or
or
jmp
push
xor
xchg
call
notb
sub
and
out
pop
stc
jno
add
cmp
hlt
loop
inc
out
or
sti
orl
push
jle
sbb
test
cmpsl
push
lea
mov
push
mov
push
std
fwait
mov
xchg
cmp
ljmp
push
mov
push
insb
mov
inc
mov
jo
fwait
sub
aas
xchg
rorl
inc
xchg
inc
mov
je
cmpsb
sti
mov
mov
add
cltd
inc
jmp
xchg
xchg
repz
ror
test
or
test
mov
scas
mov
jbe
mov
movsl
push
jb
in
pop
mov
xchg
pusha
inc
aam
sbb
xchg
sti
inc
mov
es
xor
jne
xorb
sub
jno
push
push
add
leave
pop
jge
xlat
adc
lock
repnz
mov
movsb
mov
ljmp
scas
sub
shr
imul
mov
in
icebp
cld
push
mov
sbb
imul
dec
add
mov
addr16
inc
mov
jns
out
test
lcall
jmp
stc
scas
xor
xchg
js
and
lds
sti
mov
mov
call
mov
popa
lock
mov
xchg
inc
mov
mov
jb
cmpsb
imul
jmp
hlt
int
jmp
jle
push
lock
std
mov
push
lods
mov
mov
sar
push
fistps
in
xchg
add
insb
out
addr16
cld
xor
das
cmp
shll
jnp
ljmp
jo
loop
idivb
out
cmpb
scas
fists
sarb
jmp
test
insb
add
repnz
jnp
in
clc
adc
lods
scas
cmpsl
sub
rolb
and
xor
fisubrs
ret
adc
std
inc
in
in
mov
jo
dec
xchg
cmp
cli
les
xor
xchg
cmp
daa
mov
push
lea
push
sbb
sbb
jnp
jns
and
pop
aam
lods
sbb
sbb
dec
dec
gs
mov
mov
test
xchg
ds
push
lock
push
mov
fadds
adc
jl
aas
out
lahf
xlat
sbb
ror
dec
xor
or
xchg
inc
movsl
outsl
into
lea
es
in
in
jno
cmpsl
push
not
test
cltd
cmp
mov
mulb
ficoms
adc
repnz
mov
jp
rorl
inc
mov
in
push
int3
dec
pop
sbb
loope
cmpsb
ds
out
mov
or
outsl
xor
test
fldenv
addr16
mov
sbb
lds
inc
sbb
out
mov
sar
aaa
lahf
in
jnp
imul
shrb
dec
mov
aad
sub
pop
lea
sbb
xor
inc
movsl
and
jne
mov
push
jle
lea
outsb
daa
stos
dec
mov
mov
aaa
lea
stos
pop
and
aad
mov
pop
in
lcall
popa
mov
mov
sbb
push
jp
pop
lods
inc
mov
jae
lahf
ss
xchg
mov
fdivs
rolb
insb
lods
xor
stos
sbb
stos
and
outsb
xor
mov
jle
pushf
push
add
test
jle
stos
enter
mov
repnz
sub
pop
mov
out
mov
rcl
push
in
jge
fnsave
stc
nop
sbbb
pop
rolb
pop
ds
push
mov
mov
jmp
imull
sti
inc
in
int3
lods
xchg
out
jb
mov
sbb
adc
adc
push
jle
es
scas
std
bound
sub
lock
mov
lods
push
mov
dec
test
aad
ss
xor
xor
movb
mov
fdivrl
stos
sahf
xor
int
rclb
ljmp
adc
cmp
int
jne
push
cmp
push
jmp
jns
add
sub
xchg
cmp
xlat
sbb
imul
cmpsb
inc
stos
mov
stc
pop
sub
scas
sub
into
xor
fmul
out
mov
jnp
cmpl
mov
test
or
mov
mov
xchg
push
jmp
test
rclb
pop
out
add
pop
test
mov
pop
icebp
dec
fadds
lret
out
cltd
into
lea
pop
stc
lock
call
rclb
mov
leave
fadd
jle
push
lret
mov
test
jnp
out
adc
ret
aas
dec
sbb
mov
xchg
orb
xchg
mov
and
sub
mov
jnp
xor
and
jno
inc
cmp
xchg
popf
inc
adc
pop
rol
pop
inc
sbb
aad
sbb
push
add
rclb
ds
add
mov
movsl
xor
xlat
push
pop
repnz
clc
pop
popa
sahf
pop
rol
adc
or
imul
xchg
sbb
addr16
xor
xchg
sbbb
rol
mov
mov
push
cmpsl
subl
mov
movsb
out
std
sti
pusha
push
test
das
fadds
sti
gs
mov
jno
pop
add
mov
mov
pop
jno
cmp
xchg
mov
jnp
mov
outsb
enter
jae
fiadds
pop
mov
inc
outsb
inc
stc
pop
push
sbbl
or
jns
mov
lods
mov
movsb
adc
aam
cmp
pop
in
mov
mov
lcall
cmc
pop
mov
scas
rorl
faddl
jp
int3
fidivl
sub
push
clc
xor
orb
dec
adc
test
dec
cli
ror
loop
stos
xor
lret
pushf
rol
mov
mov
and
sub
jg
iret
jg
jo
sbb
sbb
dec
dec
setge
xchg
sub
cmp
mov
sbb
mov
nop
jg
addl
xchg
ret
pop
push
cli
enter
lock
pop
out
in
add
jg
jg
xor
loopne
mov
iret
hlt
mov
pop
push
testl
psrlq
mov
pusha
jg
inc
mov
stos
inc
mov
int3
arpl
ljmp
jns
lahf
stos
jnp
fwait
lods
lret
es
sbb
inc
fcoms
arpl
mov
roll
cmc
adc
aaa
inc
push
pushf
xor
mov
push
fwait
mov
fsubrs
or
testl
xchg
mov
into
jecxz
xor
in
push
in
xor
push
je
mov
pop
mov
mov
ljmp
adcb
test
call
mov
sub
mov
jl
inc
popf
inc
fxch
in
fs
push
lock
mull
inc
sbbb
inc
jle
je
mov
xor
out
push
sbb
mov
jae
cmp
outsl
outsb
cli
xchg
mov
loopne
scas
adc
adc
adc
ss
xor
push
jmp
xchg
mov
fisubrl
or
nop
daa
pop
sub
scas
inc
mov
stos
inc
mov
int3
arpl
aam
pop
push
and
out
pop
js
lahf
test
lret
sti
int3
and
dec
push
inc
fmuls
arpl
lahf
jo
mulb
ret
hlt
adc
xor
mov
push
lcall
outsl
in
or
xchg
ds
testl
xchg
mov
into
loop
xor
in
push
in
xor
push
jmp
xchg
pop
mov
mov
sub
dec
into
adcl
adc
call
mov
sub
mov
jnp
inc
pushf
inc
fxch
in
fs
sbb
aas
sbbb
inc
jle
jae
mov
xor
in
push
pop
call
fdivl
cmp
outsl
insl
mov
xchg
mov
fistps
scas
adc
adc
adc
ss
xor
leave
test
xchg
mov
jb
or
outsb
add
pop
sub
and
scas
inc
scas
jg
inc
mov
int3
arpl
ror
pop
add
es
pop
ja
lahf
test
add
stos
leave
es
cld
sbb
dec
sbb
arpl
sahf
outsl
pop
mulb
sarl
adc
xor
mov
push
cltd
mov
fsubrs
or
xchg
cmp
pop
sbb
xchg
mov
into
loope
xor
jecxz
push
in
xor
jmp
xchg
pop
mov
mov
sub
lods
inc
das
dec
into
adcb
andb
jg
hlt
or
sub
mov
jp
inc
fwait
inc
fxch
jmp
sti
sbb
pusha
negl
sbbb
inc
jle
jb
mov
xor
in
push
push
out
push
sbb
fdivl
cmp
outsl
insb
mov
xchg
mov
ficomps
scas
psraw
adc
ss
xor
leave
adcl
push
out
aad
or
fsubrs
or
nop
daa
pop
sub
scas
jle
inc
mov
int3
arpl
ror
pop
add
ljmp
jbe
lahf
cmpsl
js
fwait
test
lret
sti
sbb
dec
sbb
fmuls
arpl
popf
outsb
pop
negb
sarb
adc
xor
mov
push
cwtl
mov
jae
mov
sti
xchg
cmp
testl
nop
scas
aaa
into
loopne
xor
loop
push
in
xor
push
jmp
test
pop
xchg
mov
sub
lods
inc
cs
into
gs
lret
mov
call
mov
daa
inc
sub
jns
inc
lcall
sbb
pusha
negl
cmp
jle
jno
mov
xor
jecxz
push
adc
aaa
fdivl
cmp
outsl
imul
lea
loopne
stos
adc
ss
xor
leave
arpl
push
out
aam
or
xlat
outsb
add
pop
sub
lods
jge
inc
scas
into
int3
arpl
ror
pop
add
ljmp
jne
lahf
cmpsb
ja
fwait
test
es
cli
sbb
dec
sbb
dec
imul
insl
pop
negb
mov
mov
xor
push
xchg
gs
jae
mov
sti
xchg
cmp
testl
scas
aaa
into
fbstp
push
in
xor
push
jmp
test
xchg
mov
sub
lods
inc
sub
dec
lret
lahf
in
adc
call
mov
es
sub
js
inc
cltd
inc
fxch
jmp
pusha
negl
jle,pt
jo
mov
xor
loop
push
adc
mov
jae
cmp
outsl
push
cli
xchg
mov
fcompl
scas
or
das
ss
xor
leave
bound
push
out
shll
add
daa
nop
daa
pop
sub
lods
jl
inc
scas
int
arpl
iret
enter
jmp
push
and
jge
je
mov
cmpsb
daa
mov
clc
sbb
dec
sbb
dec
push
sti
fwait
imul
mov
jge
out
pop
cmp
pushf
xor
mov
push
xchg
mov
je
mov
outsl
call
or
mov
pop
sbb
lea
xor
push
in
xor
push
jmp
adcl
test
and
sub
lods
inc
sub
into
gs
lret
sahf
in
adc
call
mov
and
inc
and
ja
inc
ffree
cwtl
inc
fxch
call
pusha
negl
sbbb
cmp
mov
xor
loope
push
adc
mov
jae
aaa
fsubrs
mov
xchg
mov
fistpl
scas
or
adc
ucomiss
int
xor
leave
popa
adcb
push
out
shlb
add
outsb
add
pop
sub
stos
jnp
inc
lods
int3
int3
arpl
into
enter
jmp
push
and
jge
jae
mov
movsl
lds
mov
notl
inc
fisttpll
inc
fmuls
fs
lcall
sbb
mov
mov
xor
mov
push
xchg
mov
je
mov
outsl
out
cld
xchg
cmp
testl
mov
lret
push
in
das
add
xor
or
mov
mov
sub
lods
inc
sub
gs
lret
popf
in
or
call
mov
and
sub
jbe
inc
ffree
xchg
inc
fxch
out
sti
sbb
pusha
negl
cmp
adc
mov
loopne
push
adc
mov
jae
fsubrs
xchg
xchg
mov
ficompl
scas
or
adc
push
sub
xor
pusha
jg
jmp
adcl
add
outsb
add
push
daa
mov
pop
js
inc
stos
jp
inc
lods
lret
int3
arpl
int
pop
lcall
jmp
push
and
jle
jno
mov
movsb
ret
daa
mov
notb
inc
fs
cwtl
imul
jmp
jle
in
or
cmp
push
popf
xor
pop
mov
push
xchg
mov
je
mov
jo
add
clc
cmp
mov
pop
push
lods
mov
xor
push
in
sub
dec
je
adcl
sub
movsb
mov
daa
clc
lods
inc
sub
gs
lret
pushf
in
or
call
mov
and
mov
jne
inc
ffree
xchg
inc
fld
out
sti
pop
jmp
sbbb
cmp
insl
mov
xor
fistpll
push
adc
fdivl
xor
cli
xchg
mov
fstps
scas
or
adc
or
cs
pop
jle
jmp
adcb
shlb
add
outsb
add
push
mov
pop
ja
inc
test
lret
cld
int3
enter
jmp
dec
pop
out
push
jo
mov
mov
les
mov
inc
push
inc
flds
fs
xchg
push
sbbb
mov
mov
xor
pop
mov
push
xchg
mov
je
mov
jo
add
xchg
ss
clc
cmp
mov
pop
push
lods
mov
xor
fdivr
push
in
sub
push
jmp
adcb
andb
and
imull
jp
lret
fwait
in
or
call
mov
and
mov
je
inc
ffree
xchg
inc
fld
in
sti
push
call
sbbb
cmp
insb
mov
xor
loope
push
adc
fdivl
xor
outsl
test
xchg
mov
testb
fistl
or
ss
sub
push
jmp
jg
out
iret
jb
add
outsb
add
push
and
scas
inc
test
stos
inc
stos
leave
int3
arpl
lret
enter
jmp
dec
push
out
push
outsl
or
mov
ret
and
inc
adc
fs
xchg
addr16
negl
mov
mov
xor
pop
mov
push
xchg
mov
je
mov
jo
add
xchg
xor
push
sbb
mov
xor
push
in
sub
push
jmp
jg
jo
andl
mov
and
inc
into
gs
lret
lcall
into
in
or
and
mov
jae
inc
ffree
xchg
inc
fld
in
sti
adc
aaa
sbbb
cmp
imul
xor
loopne
push
adc
fdivl
xor
outsl
gs
xchg
mov
testb
ficoml
or
ss
sub
leave
pop
jl
jmp
jle
out
into
jb
add
outsb
add
push
and
and
scas
inc
cmpsl
ja
inc
test
lret
cld
sbb
orb
jle
outsb
or
mov
ret
repz
inc
adc
flds
fs
xchg
pushaw
notl
mov
mov
xor
pop
mov
push
nop
scas
fnsave
fnstenv
add
xchg
xor
clc
ss
sbb
mov
xor
push
in
sub
push
jmp
jle
jo
sbbb
and
and
lods
inc
daa
inc
into
gs
lret
cltd
in
or
call
mov
and
sub
jb
inc
ffree
xchg
inc
fld
jecxz
sti
adc
pusha
notl
sbbb
cmp
push
mov
xor
fistpll
jae
xor
outsl
fs
mov
testb
fsts
or
ss
sub
leave
pop
jnp
jmp
jge
out
int
or
iret
outsb
add
push
and
cmpsb
jne
inc
cmpsl
int
stc
enter
sbb
orl
dec
insl
or
lahf
mov
and
inc
adc
inc
arpl
xchg
fs
notl
mov
adc
cmp
popf
xor
pop
rclb
mov
jne
scas
fnstenv
add
xchg
xor
clc
xor
sbb
xchg
xor
fdivr
push
out
sub
push
jmp
jge
jo
jle
xchg
sub
lahf
mov
and
lods
inc
and
inc
lret
cwtl
in
test
cltd
call
mov
push
ds
outsl
aas
and
jo
inc
faddp
xchg
inc
fld
loop
cld
adc
pusha
notl
ss
push
mov
or
das
fnsave
fsubrs
cmp
mov
testb
xlat
adc
or
aaa
into
pop
sub
leave
pop
jp
in
stos
jnp
out
int3
jae
dec
outsb
add
push
and
inc
movsb
jae
inc
movsl
test
in
test
call
mov
popf
mov
and
out
cmovs
inc
adc
inc
popa
data16
xchg
bound
xchg
mov
sbb
mov
push
out
mov
xor
mov
push
mov
jno
std
xchg
xor
stc
nop
xor
mov
push
pop
scas
test
int3
xlat
notb
daa
stc
push
ljmp
jno
jge
xchg
sub
sahf
es
mov
and
lods
inc
and
iret
data16
lret
bound
in
test
cwtl
jmp
mov
sbb
ds
fidivrs
loopne
cld
adc
popa
clc
adc
sbbl
xor
mov
xor
fnstcw
push
push
sub
fnstenv
cmp
mov
testl
pop
es
into
push
sub
lret
push
in
test
lret
cld
int3
outsl
push
sbb
mov
mov
ret
into
gs
notl
in
test
jmp
mov
pushf
mov
and
fistpll
cmove
inc
pop
data16
nop
popa
stc
xchg
mov
sbb
mov
pop
in
mov
cmp
pop
mov
push
mov
std
std
xchg
das
add
xchg
xor
mov
push
sbb
shll
push
out
and
inc
jne
jns
jb
jl
xchg
sub
popf
nop
daa
iret
in
mov
pop
icebp
scas
inc
and
data16
int3
arpl
in
test
xchg
ljmp
jmp
lahf
sbb
sub
imul
fidivrs
fisubs
psrad
adc
sbbl
xor
pop
data16
xor
or
mov
je
fidivl
jle
xchg
mov
clc
mov
sbb
push
and
into
push
daa
xor
pop
jbe
in
cmpsl
jns
jmp
cli
lret
jo
std
sbb
es
outsb
mov
mov
ror
repz
lret
notb
orl
or
ljmp
fistpll
inc
fdivrl
pop
data16
mov
cli
xchg
scas
test
loope
sbbl
xor
mov
pop
xchg
push
mov
fdivl
sti
std
xchg
sub
dec
sbb
andl
int
repz
out
and
push
jmp
inc
jne
js
jb
jnp
xchg
sub
pushf
nop
daa
into
in
mov
push
lock
inc
and
data16
int3
arpl
in
test
xchg
ljmp
ljmp
push
es
mov
frstor
push
loope
stc
adc
sbbl
xor
cmp
mov
push
or
fnsave
fidivl
jge
xchg
scas
cmp
mov
sbb
add
es
push
jne
in
cmpsb
js
jmp
stc
lret
cld
sbb
es
insl
mov
lahf
jo
inc
mov
ret
lret
cmc
adc
test
ljmp
imul
shr
es
cmp
data16
lea
cli
nop
scas
test
loopne
sbbl
xor
aaa
ss
rcrl
mov
jbe
stos
fdivl
cli
std
xchg
sub
cli
xchg
xor
mov
push
sbb
shll
push
out
and
push
jmp
inc
jne
ja
jb
jp
xchg
sub
fwait
nop
daa
int
mov
sbb
aas
iret
data16
int3
arpl
test
xchg
ljmp
jmp
sub
imul
inc
fidivrs
fsubl
or
das
sbbl
xor
cmp
mov
push
or
fnsave
fidivl
jl
xchg
scas
jg
mov
sbb
add
aaa
into
push
and
push
in
movsl
ja
jmp
clc
leave
jo
sti
sbb
es
insb
mov
sahf
outsl
lods
inc
mov
ret
hlt
adc
test
addl
or
call
or
cmp
std
mov
cli
lods
test
fbstp
mov
aaa
xor
push
mov
jbe
test
std
xchg
sub
cli
xchg
das
dec
sbb
sbbl
push
out
and
push
jmp
inc
jne
jbe
jb
jns
xchg
sub
lcall
sbb
scas
inc
and
iret
data16
int3
arpl
in
test
xchg
ljmp
call
sub
push
mov
mov
or
stc
adc
sbbl
xor
cmp
aam
push
push
fdivrs
pop
sub
jno
jnp
xchg
lods
jle
mov
sbb
add
cmp
push
and
push
jae
in
movsb
jne
jmp
test
xchg
sub
es
imul
lahf
mov
lret
adc
test
ljmp
data16
out
es
cmp
inc
fdivrl
pop
decb
cli
lea
sbb
jmp
aaa
xor
rcrl
mov
jbe
test
jae
clc
std
xchg
sub
cli
xchg
cs
sbb
sbbb
int
lock
out
and
push
jmp
inc
jne
jne
jb
js
xchg
sub
cltd
nop
daa
lret
jmp
scas
inc
pop
cmp
int3
arpl
in
test
xchg
ljmp
out
lahf
sbb
sub
cmp
mov
mov
fisubl
or
stc
cvtps2pi
pop
bound
sahf
xor
bound
pop
add
add
or
hlt
and
pop
dec
les
stos
sub
inc
add
adc
push
or
inc
push
xor
jo
cli
xchg
pop
jge
mov
inc
fcmovb
addb
dec
fsubp
insl
or
cmpsb
sub
jno
lea
push
mov
shl
pop
dec
lret
dec
ret
pop
mov
aas
mov
imul
lret
lods
in
int3
pop
sub
dec
sbb
arpl
mov
xlat
loope
int3
push
mov
cmpsb
testb
je
stos
lret
adcl
sbb
add
in
push
jo
sub
and
cs
lock
add
call
ss
fisubs
mov
divb
jno
mov
cld
insl
push
or
lods
xchg
sbb
mov
movsl
adc
jge
add
or
inc
scas
and
loope
out
mov
pop
addl
and
mov
dec
sub
push
sbb
xchg
fstps
lret
inc
gs
arpl
pop
and
js
imul
fdivrl
js
push
mov
pop
pop
push
int
jo
or
xor
mov
je
mov
or
fsubr
and
lock
sbb
inc
mov
cmp
stc
jl
or
mov
out
data16
pcmpgtw
es
mov
inc
daa
jae
xchg
pushf
mov
orb
in
loop
push
enter
je
inc
adc
xchg
lods
mov
fwait
pop
inc
pop
xchg
inc
cmp
popf
jb
jo
dec
pop
sbbl
sub
fcompl
cli
jns
lcall
insl
mov
imul
jmp
jl
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
addr16
jae
in
push
cltd
sbb
sub
dec
wrmsr
sbb
repz
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
sbb
push
out
sbbl
aas
mov
add
mov
loope
cltd
adc
mov
