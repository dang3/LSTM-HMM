xchg
dec
jmp
jne
dec
loopne
push
lea
push
push
push
pushl
call
jmp
cmp
sub
mov
outsl
add
pop
and
leave
pop
loopne
test
sub
adc
cld
jge
std
outsl
sub
sub
je
push
xchg
lcall
stos
or
push
sub
sub
call
imulb
dec
sahf
push
daa
mov
jge
mov
jg
loope
or
add
sub
fs
sub
pop
mov
pop
lret
fldt
shrb
aas
fwait
push
test
push
sub
cmc
sub
xchg
mov
sub
or
xor
ds
sub
std
fistpll
mov
add
inc
or
adc
push
insl
sub
dec
mov
xchg
xlat
das
ja
or
icebp
xor
fistpl
mul
pop
sub
test
lea
rorl
dec
test
iret
negb
push
or
xchg
pop
push
jmp
movsb
sbb
mov
push
xlat
inc
or
and
cmpsl
pop
in
das
xchg
sub
sub
sub
dec
sub
bound
sub
mov
xchg
push
ror
das
add
sub
cwtl
add
add
pop
mov
xor
adc
or
mov
add
sbb
inc
iret
sbb
es
out
mov
daa
call
or
lahf
sub
sub
mov
xor
pop
outsl
sahf
incl
sbb
mov
mov
comiss
ret
mov
je
add
insb
adc
iret
cwtl
std
sub
ret
adc
mov
sub
bound
jae,pt
sub
and
fstpt
or
sub
cmp
push
or
mov
inc
out
xchg
fdivrl
lock
sub
mov
loope
add
insl
xchg
movsl
xchg
call
fdivrs
movsl
imul
push
ja
push
mov
mov
or
add
sbb
lcall
ret
das
mov
xor
or
inc
testb
aam
sub
movsb
push
mov
dec
push
loop
inc
add
mov
jmp
push
add
dec
pop
add
mov
jno
xor
xor
aas
popf
scas
icebp
fstpt
push
popa
scas
das
jp
ja
mov
arpl
push
add
fdivs
mov
pop
inc
popa
pushl
fbstp
sbb
xchg
hlt
xchg
sub
mov
mov
cs
stc
xchg
filds
sub
push
xchg
jbe
subl
mov
push
clc
adc
jle
sub
inc
sti
or
subl
iret
outsl
mov
sub
imul
inc
cmp
mov
sub
inc
ds
in
push
mov
sub
arpl
jno
insb
loope
stos
mov
fistpl
fstl
lret
or
inc
fucomip
cld
aaa
or
mulb
xlat
jmp
xlat
cwtl
pop
sti
in
sub
or
pop
gs
jns
fildl
xlat
test
loopne
inc
push
popa
mov
add
aas
mov
xchg
repz
add
cmp
mov
mov
cmpsb
xchg
test
popa
adc
mov
sbb
nop
push
push
or
insb
mov
scas
dec
test
xchg
push
std
dec
fisttpl
pop
xchg
insl
mov
mov
out
ficoms
mov
and
fs
mov
aam
jnp
sbb
sbb
int
repz
xor
push
and
adc
mov
add
movsl
push
jb
loopne
out
nop
cmp
insl
pop
loope
jecxz
mov
in
call
enter
inc
fcmovbe
jmp
jno
cmpl
jnp
sahf
mov
mov
out
fdiv
dec
jne
dec
sub
sbb
not
mov
aaa
jmp
aam
lds
ja
out
cmp
popf
lret
frstor
rcl
dec
sub
jne
test
cmp
daa
xchg
ja
cld
outsl
les
gs
dec
cmp
xor
jb
stos
mov
ficompl
or
clc
xchg
in
jge
pop
loop
sbb
mov
arpl
lret
jl
ret
inc
ret
scas
in
ja
popa
and
jecxz
sti
fisubl
fsubs
lahf
add
jecxz
pop
aaa
loopne,pt
push
mov
sub
or
xchg
cmc
and
jl
pop
cmp
jb
xchg
aam
or
mov
and
fs
xchg
xor
mov
push
test
inc
sub
sarb
in
mov
lds
insl
jl
je
data16
push
xor
lds
inc
pop
addr16
cmp
dec
jg
xor
mov
xchg
push
mov
lods
add
clc
ret
outsl
xchg
mov
popf
cltd
ud1
repnz
mov
mov
subb
push
icebp
scas
insl
subl
and
aad
js
adc
pop
xlat
std
lock
ficoml
pop
pop
pop
sub
mov
xor
scas
divb
dec
push
xchg
jl
mov
mov
fsubs
mov
test
incb
ja
outsb
mov
mov
and
xlat
insl
cld
rolb
and
mov
or
jno
mov
int3
fstps
dec
xorb
dec
jne
cltd
cli
sub
pushw
pop
push
add
inc
xchg
imul
ret
pop
push
ret
jle
bound
push
sub
outsb
add
sbb
test
xchg
pop
cmp
sbb
xchg
push
cs
ret
ss
ljmp
mov
push
push
sub
flds
mov
xchg
ja
int3
mov
dec
jb
int3
add
mov
cmpl
inc
movsl
sbb
nopl
mov
sbb
push
jb
fwait
mov
add
inc
cmp
pop
ret
dec
cld
adc
in
mov
jnp
jecxz
inc
push
and
adc
pushf
sbb
lds
jo
ret
std
adcb
jecxz
add
icebp
push
dec
add
xchg
popl
pop
ljmp
lods
icebp
lock
and
xorl
hlt
mov
repz
repz
cmc
adc
add
arpl
cmc
out
dec
fstpt
mov
repnz
sarb
push
pop
mov
hlt
dec
pop
mov
mov
out
sahf
inc
ret
mov
xchg
adc
aaa
add
mov
cmp
xor
loope
cmp
loopne
pop
jecxz
pop
repz
fs
jmp
ds
cld
sbb
sub
rcr
in
cmpsl
test
and
pop
scas
insl
scas
pop
cmp
mov
insl
add
lret
js
push
cmpsb
add
test
pop
cmp
lcall
imul
pop
fstpl
and
push
sub
push
dec
pop
loopne
jo
adc
js
imul
xor
sub
cmp
add
lock
mov
lods
pop
lea
mov
xchg
jno
shrb
sti
fcmovb
imul
pop
jb
or
mov
xchg
fsubl
test
sub
adc
pop
test
mov
in
sbb
popf
aad
insl
sbb
cmpsl
shrl
int3
jge
cld
bound
push
push
in
fimuls
mov
lahf
push
cmpb
sahf
sbb
movsb
jl
push
lret
call
jecxz
gs
sub
jmp
push
xorb
xchg
out
loop
ja
insb
mov
dec
add
inc
or
enter
lea
add
orb
pop
clc
pop
add
cmp
add
adc
sbb
mov
xor
ja
mov
or
call
pop
adc
and
mov
cli
js
pop
test
rcrb
mov
jmp
pusha
test
andb
cli
push
push
insl
pop
bound
nop
mov
inc
sbb
push
dec
stos
push
ss
inc
test
mov
negl
iret
adc
and
push
xlat
sub
mov
imul
cwtl
dec
mov
testb
shr
cmp
sbb
lock
jno
add
add
cld
hlt
aam
loope
push
push
push
int
scas
jp
mov
sbb
pop
das
sub
mov
leave
in
cmp
xor
pop
cmp
adc
adc
cltd
fdivl
xor
orl
sbb
push
cmp
push
lds
jmp
inc
aam
test
outsl
push
in
insl
iret
pop
sbb
mov
bound
adc
mov
push
test
xor
xor
ljmp
mov
roll
xchg
in
js
mov
mov
les
dec
pop
fistpl
mov
lea
push
ds
xchg
cmpsl
xchg
cmpsl
stc
and
ret
hlt
gs
sub
xchg
outsl
cmp
xor
or
push
andl
fcompl
or
les
xchg
add
mov
shrb
jno
jecxz
inc
aas
std
dec
out
sbb
add
sub
andl
push
das
insb
sub
and
mov
jle
imul
fmuls
sbb
push
xchg
pop
mull
in
shlb
xor
in
addr16
xor
mov
add
mov
adc
test
sbb
mov
daa
repz
push
xor
shrl
iret
xor
inc
xchg
xor
and
sbb
inc
add
clc
loopne
fldt
push
cmc
adc
push
jecxz
call
shll
jp
leave
or
mov
push
mov
mov
jg
cmp
loopne
xor
mov
sub
or
mov
mov
xorb
xor
pop
xor
and
mov
sub
adc
or
ret
jnp
push
mov
mov
es
pop
inc
loope
xor
dec
ljmp
outsl
xchg
lret
lret
push
int
or
jae
dec
cmova
int
out
mov
cltd
fisttpl
pop
mov
out
orb
neg
cmpsb
mov
mov
or
xor
pushf
adc
sar
pop
mov
sub
rclb
jge
add
push
fisubrl
aam
pop
cmp
mov
or
xchg
shl
mov
mov
aad
adc
icebp
test
mov
test
jmp
outsb
stos
incb
xlat
inc
xchg
lds
cmp
jmp
add
ret
xor
sub
ljmp
ret
jnp
mov
mov
mov
or
movb
jge
ds
inc
dec
jmp
cmpsb
jecxz
push
inc
jo
aas
insb
jge
add
cld
push
jns
add
mov
rcrb
lods
xor
out
jle
lea
pop
mov
cmpsl
dec
jl
addr16
jl
push
scas
and
push
cmpsl
out
shlb
test
sti
or
mov
jge
xor
pop
popa
clc
push
jne
mov
add
mov
lods
daa
sub
pop
sbb
test
xor
hlt
mov
or
cmpsb
lea
fs
pop
mov
rclb
das
shlb
sub
iret
pop
in
jbe
fiadds
xor
adc
add
mov
adc
mov
add
cmpsb
lret
aam
imul
out
jg
gs
or
add
imull
xor
fstl
mov
jns
les
mov
rol
ljmp
sbb
movsb
insl
jmp
mov
pushf
sbb
shlb
leave
and
pop
in
mov
cmpsl
xchg
push
inc
and
xlat
fnstcw
pop
add
adc
nop
sbb
mov
icebp
xchg
out
stos
mov
mov
les
jecxz
adc
loopne
movl
ret
jmp
adc
push
push
repz
push
outsb
add
sub
pfrcp
xchg
xlat
in
sbb
mov
cmpsb
ja
enter
insl
add
cmp
leave
mov
cli
das
inc
movsl
push
fsubrl
adc
stos
push
sbb
or
scas
add
ljmp
and
dec
repz
push
sub
jg
mov
fcoms
jge
dec
mov
loop
sub
xor
call
push
pop
lcall
clc
call
adc
add
jecxz
test
je
in
sub
mov
nop
dec
jp
sub
gs
lret
dec
mov
mov
pop
xor
subb
or
fstl
mov
into
and
pop
lods
or
fdivrp
dec
xor
push
push
sub
in
scas
mov
jmp
fdiv
push
jecxz
loop
dec
push
mov
xor
mov
lret
pop
push
sbb
cmpsl
dec
push
into
in
repz
jl
loopne
not
adc
mov
mov
imull
cmc
push
jge
and
jmp
icebp
lock
lret
mov
pop
aam
pop
bound
pop
sbb
or
dec
xor
mov
dec
cmp
jo
ret
or
int3
in
pop
add
mov
cli
rolb
adcb
jbe
add
inc
ret
fldt
rclb
iret
dec
nop
bnd
mov
ds
shlb
jle
div
imul
or
std
lock
test
and
loope
ja
jecxz
pop
and
inc
adc
shlb
mov
jbe
xor
pusha
loopne
xlat
bound
push
mov
adc
or
mov
push
clc
push
push
cmp
repnz
add
xlat
dec
fisttpll
or
popa
fidivs
xchg
sti
sbb
fcmovbe
push
fmul
sbb
std
jb
mov
or
push
movsl
pop
lods
push
mov
in
loope
xor
pop
pop
sub
and
mov
sub
fisttpl
xchg
out
mov
les
mov
ret
sbb
push
mov
ret
add
stc
stc
rolb
cmp
imul
fistpll
add
and
je
dec
lahf
sub
js
or
xor
das
aam
mov
ss
mov
jns
inc
addr16
sbb
fldt
xchg
add
rorb
lahf
adc
mov
sti
in
cmp
jae
xchg
cmc
mov
fldcw
xor
dec
mov
clc
xlat
aas
movsb
icebp
mov
dec
pop
adc
pop
pop
pusha
imul
adc
andl
aad
and
cmp
in
xor
jnp
fcomps
or
push
sbb
ret
and
aad
pop
daa
popa
jns
cmpsl
fimuls
sbb
inc
and
cmpsb
push
insl
dec
shll
test
shlb
loopne
push
mov
cmc
or
aaa
pop
xor
mov
and
inc
inc
out
in
insl
mov
stos
jae
mov
push
sub
xchg
and
mov
sbb
imul
fnstsw
jne
shl
lret
pop
push
insb
movsl
mov
jno
js
ret
sbb
mov
insl
pop
loop
int3
fwait
pop
in
sahf
imul
imul
sub
fildl
int
sbbl
shl
shrl
pop
cmp
in
js
sub
cmp
jne
lret
xor
cmp
xor
push
mov
mov
cwtl
adc
dec
sbb
xchg
lds
pop
and
xchg
lcall
or
cmp
call
inc
dec
lahf
xor
int
inc
dec
push
adc
sbb
jnp
mov
jp
jmp
aas
jae
mov
dec
adc
test
xchg
lret
sarl
aaa
inc
or
int3
push
dec
mov
in
push
mov
stos
in
sub
out
adc
mov
inc
std
dec
push
loopne
pop
sub
sbb
mov
movsb
lcall
add
or
push
xchg
out
add
adc
pop
mov
xchg
rolb
jmp
pop
jecxz
outsb
push
rcl
mov
ss
cmp
lods
aas
and
jns
out
scas
mov
inc
in
cmp
hlt
sbb
xchg
mov
adc
pop
lea
sti
sub
mov
fnstcw
aam
mov
insl
imulb
push
mov
das
mov
xor
mov
cmpb
pusha
outsb
lock
shll
aam
inc
xchg
mov
insl
pop
ds
out
popf
dec
mov
sub
jecxz
jnp
xor
mov
dec
push
ljmp
push
dec
xor
push
jl
sbb
stc
rclb
cmp
jmp
inc
jl
mov
rcrl
std
lock
mov
xor
repnz
adc
mov
xorl
add
xchg
into
sbb
add
mov
cmp
pop
jo
cmp
insl
xchg
sbb
xchg
adc
mov
adc
popa
pop
inc
imul
outsl
test
sub
out
lods
mov
and
sub
loopne
rclb
mov
insb
push
adc
out
push
cmp
gs
into
xchg
addr16
ret
imul
inc
mov
xor
es
loopne
inc
pusha
and
fwait
dec
jg
ss
xchg
cmp
test
cmp
lods
push
fidivrl
test
cwtl
cmp
cli
mov
mov
sub
mov
jge
xor
cmp
lahf
mov
mov
xchg
mov
les
in
push
jl
inc
je
lret
add
icebp
mov
jno
pop
sub
lcall
rclb
fcmovne
cmc
pop
or
test
xchg
ret
sub
sar
mov
enter
mov
xchg
push
frstpm(287
jmp
mov
cmpsb
dec
push
inc
mov
imul
or
lret
daa
loop
mov
mov
jl
adcb
nop
push
add
jne
cltd
sbb
cwtl
sbb
xchg
movsb
mov
jmp
icebp
ja
js
popf
aam
fiadds
arpl
jp
xor
movsb
dec
lahf
sbb
ss
in
inc
jnp
adc
test
pop
lods
jecxz
sahf
pop
add
inc
fnstcw
sti
pop
aaa
cmpsl
cmp
insl
mov
add
shl
jb
out
sbb
jmp
push
jecxz
sbb
pushf
or
cmp
stc
cs
pop
sub
push
jne
inc
cwtl
je
insl
mov
je
rclb
cmp
popa
loope
add
mov
dec
pushl
xlat
iret
mov
js
dec
stos
add
xor
pop
push
stc
mov
or
in
pop
pop
add
js
or
sub
aas
inc
lock
negl
loopne
and
pop
sbbb
pop
test
ds
mov
mov
ss
das
mov
ss
lock
push
das
gs
in
jp
je
daa
shll
cwtl
ret
loope
mov
dec
add
lds
ret
outsl
cmp
outsl
fs
in
add
or
cltd
push
jns
or
push
add
clc
xor
pop
ss
pop
mov
inc
orl
push
mov
mov
adc
jmp
pop
pop
mov
pusha
lock
fists
aam
jne
les
dec
jo
fmull
gs
std
jns
das
mov
fsubrs
cmp
ss
repz
adc
fisubl
pop
sbb
ja
mov
or
pop
sbb
mov
sbb
mov
or
pop
xor
jmp
data16
js
xlat
pop
push
fidivrs
and
hlt
jmp
insb
out
dec
and
fcoms
or
adc
cs
xchg
in
pusha
mov
in
subl
jl
ffreep
lahf
insl
jo
flds
scas
add
jbe
cmp
in
aaa
adcl
push
leave
shll
lods
or
mov
hlt
fcomps
cmp
inc
loope
inc
mov
mov
nop
add
cmpsb
xchg
adc
or
cmpsl
lcall
sbb
int
mov
pusha
aam
lock
pusha
mov
gs
add
jmp
rorb
pop
in
outsl
push
loope
mov
cmp
ljmp
jmp
das
ss
xchg
icebp
subb
inc
cli
sar
mov
sahf
adc
mov
aas
mov
push
pop
insb
in
or
xor
mov
lods
int
aas
int3
add
or
in
call
jmp
jo
fisttps
incl
adc
mov
cs
jecxz
mov
jns
pop
sbb
inc
cltd
mov
test
jle
or
in
pop
jp
les
fstpl
orb
and
xchg
xor
push
push
inc
push
sub
sub
ret
mov
loope
shl
push
push
adc
jbe
mov
daa
mov
test
mov
out
stos
shl
mov
rcrb
in
gs
in
fdivs
ficomps
inc
stos
fstps
or
and
and
data16
push
out
rorb
sub
push
shr
scas
and
or
and
icebp
daa
xchg
pop
call
cmp
mov
lock
int3
add
push
mov
ss
stos
push
fwait
and
jne
jg
jg
mov
mov
mov
shrb
push
sbb
or
test
movsl
test
int
push
enter
ret
icebp
pop
jmp
jo
rorl
in
jo
insb
adc
bound
enter
xor
pushf
jg
sub
insl
cmp
dec
dec
adc
ret
sub
cs
sub
adc
mov
push
xlat
xchg
fcom
cmp
mov
jbe
lret
cmp
js
pop
dec
fwait
es
loop
cli
pop
fisubs
pop
xor
push
ss
push
adc
jbe
js
jno
inc
mov
into
and
mov
inc
inc
push
mov
in
lret
xchg
xchg
adc
push
adc
insb
les
insl
pop
or
adc
push
mov
lret
xchg
xor
cmp
cs
sbb
push
test
cmp
mov
sub
or
jne
inc
xlat
test
inc
cld
and
inc
ss
ss
push
jge
sub
sub
mov
ss
push
mov
cmpsl
push
jg
stos
mov
sbb
mov
push
mov
pop
js
sti
mov
mov
loop
sbb
popl
jmp
sbb
and
adc
xor
sbb
inc
outsb
test
mov
adc
mov
pusha
icebp
movsb
pop
rolb
clc
hlt
inc
mov
rorl
push
ss
js
cmpsb
xchg
jmp
imul
shlb
and
mov
fdivrs
push
mov
sub
insl
push
sahf
test
fs
stos
lods
jb
jge
adc
push
xor
mov
sub
lea
push
cmpsb
or
mov
fs
out
mov
adc
fsubr
cmp
xchg
js
sub
pop
push
loope
jmp
jl
es
les
mov
mov
jae
cs
add
dec
adc
lahf
cs
outsl
sarl
add
and
clc
sub
lock
out
or
das
mov
xchg
push
aaa
mov
cmp
int3
jb
dec
mov
mov
int3
loop
push
xchg
add
ffree
jb
mov
jno
xchg
and
loopne
das
in
pop
shlb
jge
out
pop
dec
sbb
jae
xchg
dec
cmpsb
cli
ret
cmpsb
dec
rcrb
pop
jg
sti
inc
push
or
aaa
loopne
andl
arpl
pop
jl
mov
lock
lret
xchg
out
pop
adc
aad
cltd
sub
outsl
xchg
xchg
rol
cld
sbb
inc
mov
push
outsb
or
xchg
test
xchg
pop
mov
jo
inc
pop
out
cmp
call
shl
lods
pavgw
out
in
cmp
inc
arpl
push
inc
jnp
pop
cmc
filds
dec
sub
int3
xchg
adc
ret
inc
sub
add
lea
ljmp
arpl
push
mov
outsb
cmp
outsb
mov
sbb
cmpsb
stc
or
adc
pop
cmp
outsb
mov
outsl
rcll
mov
push
insl
pop
insb
fcoml
push
test
jbe
mov
icebp
mov
sarb
stc
andl
cmp
push
and
shrb
bound
rclb
lock
adc
stos
dec
mov
push
adc
dec
pop
pusha
mov
cltd
and
xchg
outsb
movsl
sbb
push
lock
out
add
repnz
push
daa
subl
ss
subl
shlb
pop
daa
mul
add
dec
loop
inc
mov
rorb
iret
inc
pop
sbb
pop
or
or
xor
ljmp
add
jb
mov
aad
pop
ret
aaa
inc
lods
xchg
insb
test
push
sbb
jbe
or
xor
inc
sbb
and
mov
jno
xor
push
jo
cmp
pop
fcmovnbe
int3
fnstsw
pop
jmp
pusha
push
enter
test
mov
andb
xorl
sbb
push
mov
aam
aaa
push
hlt
dec
fmuls
xchg
sbb
jmp
xchg
inc
cmpsl
pop
push
sub
inc
jg
mov
push
jl
loopne
mov
les
lock
icebp
or
push
adc
cltd
stos
and
sub
jno
sahf
or
sbb
mov
jne
and
push
enter
inc
stc
jg
jecxz
fistl
insl
mov
mov
aam
and
call
sbb
jbe
movsb
or
push
dec
xchg
test
or
mull
rorb
cmp
fwait
cmc
push
out
insb
dec
and
daa
cmp
add
dec
jbe
mov
add
outsb
add
icebp
mov
xchg
sbbl
jmp
insl
mov
mov
push
pop
orb
das
mov
int3
pop
mov
sbb
lret
xor
outsb
shlb
mov
mov
jo
sbb
push
mov
cmpsl
fildl
dec
hlt
leave
mov
xor
imul
arpl
and
sbb
push
push
adc
std
imul
lods
ljmp
fucomip
adc
mov
bound
mov
and
loope
pushl
out
ss
xchg
popa
sub
js
cld
mov
insb
pop
orb
pop
les
adc
roll
pop
or
mov
enter
cmp
jg
sub
xor
or
popf
stos
inc
jg
or
movsl
mov
aam
pmaddwd
pop
mov
jnp
jmp
sbb
or
xor
jmp
sbb
mov
inc
test
sub
adc
mov
out
pop
popa
jecxz
xor
cli
pop
lahf
jg
xchg
fidivl
fidivrl
dec
pushf
inc
cmc
dec
sub
mov
add
ljmp
and
lea
xor
jne
mov
xor
and
inc
add
pop
cwtl
or
lahf
and
mov
cmpsl
lock
adc
mov
aad
cmp
sbb
aaa
ret
cwtl
loopne
sub
nop
dec
in
mov
out
inc
aas
bound
in
insl
inc
xlat
lock
stos
outsb
pop
jnp
add
mov
rcl
ljmp
xchg
gs
inc
push
xor
adc
sub
or
sbb
clc
mov
repnz
mov
xor
arpl
push
xor
sub
lds
jecxz
xchg
mov
inc
xchg
push
fbld
adc
frstor
push
cmp
push
inc
fdivrl
paddd
xor
pop
out
or
xor
inc
sbb
repnz
inc
lods
rcr
incb
daa
xchg
sbb
popl
fldenv
in
rorb
and
fdivs
dec
push
push
and
cld
cmpsl
pop
sub
sbb
adc
popa
mov
sbb
adc
rol
orl
jmp
mov
lea
add
sbb
sub
sbb
rol
adc
aam
inc
and
and
clc
lods
pop
scas
andb
inc
mov
dec
out
or
lods
imul
push
out
mov
mov
dec
setae
xor
push
nop
mov
dec
adc
jno
shl
sbb
stos
clc
test
pop
inc
mov
sbb
fidivrl
inc
shll
or
into
adc
mov
xor
test
outsb
mov
cltd
sbb
xor
mov
cmpsl
xchg
push
ds
pop
jge
xchg
xchg
mov
in
icebp
fsub
mov
xor
xor
loope
dec
repnz
push
fsubl
cmc
mov
imul
adc
pushf
and
sbb
cs
jnp
mov
andb
shrb
seta
in
mov
cli
jg
fdivl
xchg
pop
push
dec
dec
sahf
je
jp
push
ja
push
dec
sarl
test
sbb
dec
pop
sub
notb
mov
mov
loopne
xchg
movsl
fmulp
sarb
stc
fbstp
pusha
inc
sub
sub
sbb
adc
push
pop
jecxz
sub
sbb
ljmp
jne
push
jl
cli
mov
repz
shlb
jge
ret
mov
or
aaa
mov
test
lret
push
nop
leave
pusha
jmp
fidivrs
orl
dec
test
mov
bound
test
pop
les
popa
sbb
add
rolb
fistpl
jg
lret
sub
lds
in
or
mov
adc
inc
mov
fidivrl
ret
and
push
daa
pop
xchg
pop
pop
mov
jnp
push
mov
fsubr
mov
sbb
dec
pushf
mov
or
in
adc
fcompl
push
xchg
mov
sbb
mov
and
inc
cmp
xor
or
cli
jo
sti
popa
pop
adc
add
int3
inc
insb
adc
fiaddl
jle
iret
jecxz
inc
popf
mov
xor
cmpsl
inc
mov
mov
in
mov
loopne
push
pop
jecxz
jecxz
stos
add
movl
adc
cli
les
push
xchg
fisttpll
sub
and
dec
scas
inc
lea
mov
cmp
inc
mov
imul
fsub
das
stos
or
outsb
mov
call
orb
jno
inc
divb
sti
xor
xor
loop
js
sbb
inc
repnz
leave
mov
xchg
std
or
cmc
pop
sbb
inc
and
jnp
add
sub
stc
cmp
jp
cmp
inc
mull
int3
mov
cmp
and
aas
ret
enter
xor
icebp
xchg
mov
or
mov
push
fs
int3
xchg
movsl
sub
shll
icebp
xorb
sarb
outsl
inc
scas
or
leave
mov
mov
faddl
clc
push
inc
rorl
mov
test
in
jo
cmp
xor
out
idivl
loop
sbb
iret
dec
in
sti
xchg
adc
sub
inc
mov
in
cltd
ljmp
push
sbb
bound
test
lock
sbb
sub
outsb
ret
out
xchg
lea
xchg
cmpsb
loope
scas
inc
mov
call
std
fcompl
jmp
push
push
sarl
xchg
lods
not
pop
add
mov
jmp
push
nop
je
mov
sbb
xchg
in
pusha
pop
call
pop
jne
sahf
loope
in
cmc
mov
icebp
cltd
add
sahf
xchg
das
sbb
popa
sub
lock
aas
xchg
push
xchg
lods
push
cmp
cmp
or
cmp
cmpl
pop
jne
lds
cmp
pop
add
insb
or
or
mov
shlb
jp
sbb
sti
ret
loopne
xor
fildll
mov
jb,pt
mov
jb
pop
sub
cmpb
aas
imul
xlat
xor
sub
pushf
enter
push
cmc
or
dec
xlat
cltd
in
pop
mov
jecxz
outsl
lahf
popf
nop
cmp
cmp
cmpsb
jmp
orb
stos
inc
daa
mov
jns
insl
lods
jbe
pop
inc
out
cmpsb
xchg
pop
fdivs
mov
ljmp
mov
cli
dec
cs
lea
push
cli
mov
push
inc
dec
dec
xor
stos
pusha
pop
sbb
cmp
xor
xchg
push
int
sbb
mov
inc
popa
sbb
dec
push
xchg
mov
incl
inc
mov
inc
shrl
dec
adc
cmpsl
pop
xchg
popl
mov
jno
ret
jg
add
sub
jp
movsl
addr16
cmpl
jmp
call
xchg
mov
aam
add
adc
roll
in
fisttpl
movsb
popf
jns
int
sub
pusha
jmp
adc
scas
sub
fisttps
std
call
pop
sahf
mov
pop
or
inc
add
lds
fdivl
inc
jecxz
or
pop
push
pop
push
test
sbb
push
ss
or
insb
das
sub
inc
add
or
sbb
cs
repz
dec
scas
push
pop
aas
or
lods
pop
rorb
sub
not
and
lahf
loop
inc
ret
xor
inc
lods
jecxz
jbe
fsubr
xor
add
in
ret
add
jno
ffreep
nop
cld
mov
fildll
xchg
aaa
pusha
sbb
frstor
lahf
dec
daa
test
rorl
addr16
fisubrs
ds
aad
scas
add
or
je
or
mov
mov
pusha
in
xor
mov
sub
idivl
movsl
das
pop
mov
xchg
ljmp
std
dec
push
mov
sbbl
pushf
clc
adc
pop
scas
adc
dec
jno
hlt
jmp
xchg
cmp
pushf
lock
addb
rorl
cmpsl
push
lahf
ret
std
movsb
imull
in
mov
mov
pop
xchg
jb
or
sbb
mov
jle
iret
outsb
pcmpeqw
dec
aad
and
ja
pop
jg
xor
daa
lahf
pop
pop
pusha
cli
imul
push
and
adc
jmp
mov
cmc
and
xchg
inc
mov
fldcw
cmp
dec
pop
adc
pop
imul
dec
inc
mov
push
sbbl
jge
scas
ljmp
mov
push
fdivrl
pop
mov
mov
jl
mov
adc
mov
jl
sbb
jne
jg
add
das
sbb
lods
movsl
sbb
mov
lods
shlb
std
add
add
mov
inc
push
xor
dec
mov
in
mov
rclb
enter
mov
inc
pop
mov
idivb
adc
fsts
insl
jl
sub
in
jg
shlb
dec
add
test
mov
loope
mov
mov
movl
test
es
adc
push
enter
mov
sub
and
adc
aas
jno
sti
pusha
nop
jmp
xor
sbb
icebp
inc
sarb
or
movsl
mov
dec
popa
push
xor
sbb
sbb
in
cltd
lods
lss
add
xor
sbb
daa
in
pop
lock
sti
and
bound
or
js
sbb
testb
push
aam
inc
dec
sbb
aam
loope
incl
ja
push
cmc
stc
icebp
or
iret
xchg
fucomp
fdiv
aaa
fcoml
fstl
inc
bound
lock
xchg
pushf
js
decb
lods
xor
mov
je
std
xlat
lods
dec
dec
clc
lcall
cs
push
sub
mov
add
add
jno
repz
sub
pop
clc
ret
or
lds
adc
movsb
add
out
push
jmp
rolb
jl
test
sbb
mov
pop
hlt
fwait
push
es
add
outsl
xchg
sub
jmp
and
pop
inc
xchg
cmp
imul
sahf
aas
cmpb
sub
xchg
lret
mov
pushf
inc
xchg
test
jl
lahf
adc
inc
dec
push
inc
ja
test
sub
mov
add
addl
sub
mov
mov
mov
test
int3
xor
pop
xor
mov
mov
push
adc
clc
lds
pop
and
mov
je
mov
dec
xchg
lcall
mov
pminub
adc
fisubrs
ljmp
sbb
xchg
cmp
ss
pop
add
push
inc
or
pop
mov
std
adc
inc
pop
mov
lock
add
or
jge
mull
fucom
sbb
mov
stos
add
jb
pusha
push
in
sub
mov
sub
mov
sbb
out
arpl
mov
push
aaa
fdivl
test
fstpl
adc
mov
clc
cmpsl
mov
pop
out
pusha
xor
mov
jge
inc
pop
and
sbbb
cmc
xchg
pop
mov
push
push
mov
ja
into
push
xorb
cwtl
cld
adc
xlat
push
rorl
sub
lock
aad
dec
ds
mov
je
leave
mov
jge
jmp
dec
lret
lds
mov
mov
or
addl
or
je
sbb
mov
dec
sbb
add
sti
aaa
shrl
or
inc
sub
adc
mov
dec
mov
dec
push
xor
pop
push
mov
push
sub
jmp
inc
dec
int
ds
orl
cmpb
lea
sahf
jns
dec
and
jmp
arpl
jne
daa
in
sbb
mov
in
xlat
int3
mov
out
or
pop
jno
mov
mov
fisubrs
lds
jae
loopne
xchg
pop
gs
push
mov
xchg
mov
outsl
imul
int3
es
mov
mov
mov
adc
push
ss
in
scas
dec
pop
stc
mov
xor
sbbb
add
fwait
pop
adc
out
fsubrp
into
xor
jmp
or
dec
mov
jmp
mov
jbe
mov
shlb
ret
scas
xchg
rorb
sub
cmp
jne
mov
shll
sbb
int3
ret
pusha
popa
call
lret
cmp
jecxz
sub
les
pop
data16
je
sbb
pusha
mov
lods
xchg
add
shll
cmpl
jg
xchg
out
je
mov
and
mov
clc
xchg
push
dec
dec
scas
aaa
lock
inc
xor
int
in
push
lds
inc
daa
lcall
and
cmp
pop
mov
fwait
sbb
adc
cmc
aam
pop
push
pop
sbb
mov
and
mov
push
scas
xor
icebp
mov
ficoml
pushf
mov
inc
lds
cmp
jo
xor
aas
mov
insb
rorb
push
sbb
xor
pop
jne
test
pop
fnsave
fbstp
cld
mov
fldl
cld
push
xor
cmp
add
sub
dec
xchg
mov
data16
fnstsw
push
loope
mov
mov
in
stc
divl
xchg
or
popl
in
test
test
imul
jno
loope
or
cmp
inc
cmc
xchg
cli
roll
jno
ds
or
adc
imul
mov
mov
pop
in
or
dec
adc
mov
stos
mov
xchg
popa
int3
rolb
leave
and
or
xor
aaa
loop
sahf
or
clc
lret
repz
mov
clc
or
jecxz
or
mov
sub
add
imul
sub
loop
mov
xor
popf
pusha
add
shl
imul
and
jb
aad
xor
push
mov
push
inc
pop
xchg
shll
popf
inc
cmp
andb
loope
pop
jne
jae
rcrb
call
aaa
cmp
mov
ja
push
push
sbb
pop
pop
fdivl
dec
or
dec
out
hlt
rcrl
adc
inc
add
je
aad
cld
pop
adc
or
cmpsb
js
or
popf
int
adc
mov
mov
jo
pop
add
loope
push
sbb
mov
fdivl
aas
and
lea
aam
mov
mul
pusha
ror
adc
mov
lret
or
mov
jg
in
ficomps
add
adcl
es
sub
push
enter
pushf
ss
xor
nop
loop
xor
mov
inc
std
xchg
or
jl
loopne
loope
pop
adc
loope
mov
add
cmpb
push
xchg
arpl
mov
adc
dec
and
inc
push
dec
mov
xor
lret
jmp
fildl
pop
jg
jmp
xchg
inc
dec
xor
and
and
insl
xchg
pop
and
loopne
fiaddl
std
add
and
loope
dec
add
jl
pop
arpl
stos
mov
cmpsl
les
sbb
cltd
push
and
sahf
mov
xchg
xor
mov
mov
mov
lock
in
xchg
jl
mov
sub
out
mov
mov
cwtl
fdiv
les
sub
out
fwait
sub
pop
xor
add
xor
insb
pop
aam
inc
andl
in
lcall
xchg
lahf
push
mov
xchg
lock
and
outsl
popf
and
insb
mov
mov
daa
fidivrs
dec
jo
pop
xor
cmp
lds
sbb
dec
fsubrl
and
scas
adc
adc
add
lods
in
push
jle
mov
sub
mov
hlt
pop
fdivl
xchg
inc
sub
mov
ds
in
xchg
cs
fisttps
or
hlt
lds
adc
shll
insl
xor
aas
addr16
xchg
or
pop
int
mov
hlt
mov
popa
daa
lea
sahf
daa
and
sbb
inc
and
push
xor
inc
sbb
std
fs
cmp
pop
jg
call
adc
xor
dec
mov
lds
movb
inc
aad
pop
fsubr
dec
call
mov
loopne
jecxz
fcoms
sbb
push
mov
add
mov
add
loopne
fdivrs
inc
fdivs
xor
mov
jg
adc
push
into
push
dec
mov
das
hlt
add
jmp
jo
rolb
cmp
das
rorl
or
shr
jmp
adc
push
adcl
aaa
lcall
iret
gs
inc
mov
mov
cmp
add
scas
inc
jno
in
xor
push
or
push
test
inc
notb
ss
cmc
mov
sbb
adc
ret
sbb
and
cmc
popa
pop
sub
or
loopne
insl
icebp
daa
sbb
push
pop
sbbb
std
test
add
movsb
pop
xor
fisttps
rcll
shll
push
ljmp
sahf
mov
pop
sbb
xchg
and
and
inc
sub
xlat
inc
sub
or
aad
rolb
adc
xor
hlt
stc
pop
ret
lcall
dec
mov
gs
stos
arpl
inc
orb
aas
or
inc
mov
xchg
stc
inc
dec
or
bound
sahf
mov
or
loop
adc
jle
add
inc
jmp
or
loop
int
push
add
gs
test
rcr
fs
outsl
push
bound
ss
aam
jg
insb
ja
xchg
jp
int3
testb
and
adc
arpl
xchg
inc
scas
dec
and
mov
sub
dec
fimull
inc
add
and
and
faddp
jne
cmp
xor
aad
popa
sbb
jmp
and
insb
lods
std
jecxz
stc
je
mov
fdivrs
mov
add
popf
lahf
sarl
fisubl
sbbl
or
roll
ss
mov
pop
dec
adc
push
ja
or
add
mov
shll
shll
mov
mov
mov
ds
mov
pop
aaa
loop
mov
mov
icebp
aas
sbb
dec
sahf
cmp
mov
into
push
fnstcw
inc
add
xor
dec
xchg
mov
clc
mov
cmp
lcall
sahf
rclb
pushf
cmp
repnz
loope
in
mov
xor
inc
pop
or
or
std
rolb
icebp
inc
int3
movsb
lods
scas
xchg
xor
bound
inc
femms
cltd
jb
pop
aam
mov
scas
push
lds
cmpl
push
inc
xor
out
adc
or
cmp
adc
cmp
jbe
jmp
test
loopne
std
xchg
mov
int
icebp
and
mov
div
mov
int
sub
arpl
jne
lods
outsb
das
mov
pop
mov
adc
sub
xor
adc
nop
lods
xlat
push
mov
sbb
sarl
loope
das
xchg
xchg
lret
add
js
cmc
xchg
imul
lea
and
data16
call
mov
xchg
cwtl
mov
and
pop
inc
cmp
das
cmpsl
xchg
sub
lcall
das
mov
outsl
stos
and
loopne
jp
and
inc
rcrl
fiadds
mov
ret
shll
sarb
adc
or
push
lds
inc
push
cld
add
inc
js
mov
jmp
adc
add
xchg
pop
fwait
jle
jge
add
mov
sbb
inc
call
inc
in
dec
psubsb
pop
sub
dec
pop
inc
shl
sbb
loop
in
lcall
or
js
or
test
popa
cmp
add
imul
or
xlat
pop
mov
in
imul
mov
add
loopne
loopne
adc
cmc
leave
rolb
mov
and
pop
cmpsl
loopne
paddsw
pop
loopne,pt
dec
aad
sbb
test
mov
mov
ljmp
pop
fwait
sahf
stos
pop
dec
cmp
push
pushf
mov
loopne
pop
push
dec
fcmovnu
scas
pop
sbb
int3
dec
push
pop
mov
clc
xchg
xorl
jl
push
sub
orb
mov
ja
or
sbbb
cmpsb
addr16
inc
mov
add
movsl
iret
stos
fistpll
stos
sbb
lods
shr
sarb
ficomps
jg
sti
mov
xchg
mov
inc
sbb
sub
inc
xor
pop
test
sub
outsb
xchg
sub
add
inc
scas
and
sbb
cmp
mov
mov
popa
aaa
or
sub
mov
icebp
inc
scas
mov
cmpb
fildll
nop
add
notl
das
pop
pushf
and
and
lahf
inc
sub
mov
jge
mul
les
add
cmpsb
cmp
es
dec
fwait
mov
sti
shl
pop
aam
icebp
xor
out
mov
mov
sub
lock
sti
push
adc
mov
mov
cmp
nop
cwtl
mov
push
pop
movsl
pop
rolb
and
rorl
aad
into
jmp
lods
insl
fstl
xchg
dec
cmp
pop
repz
jmp
push
push
xor
nop
scas
add
cs
test
cmp
enter
add
ja
jge
psubsw
js
mov
movsb
ja
mov
fmuls
andb
in
subb
adc
das
lea
sarb
scas
xchg
jb
push
mov
and
mov
adc
sub
inc
ret
xor
js
add
addb
inc
aas
lods
cmpsb
aam
xchg
sub
cwtl
ss
mov
xorb
xchg
adc
or
dec
stos
shll
rolb
or
or
mov
adc
fldcw
push
push
and
subl
mov
sbb
mov
pop
pop
lock
pop
xchg
ljmp
xchg
mov
pop
imul
jbe
xchg
and
jb
sbb
xchg
out
dec
dec
loop
hlt
div
testb
gs
nop
add
sarl
int
std
fadds
in
or
mov
ja
decb
cmp
dec
int3
loopne
pop
sarl
popa
mov
sbb
jbe
cmc
test
sbb
rcrb
and
add
aad
dec
sbb
inc
push
add
adc
sbb
pop
cwtl
or
dec
lea
loopne
aaa
lods
jle
push
sbb
jle
or
xchg
loopne
add
xchg
je
pop
fidivl
sub
push
in
in
push
sti
push
cmpsl
mov
cli
js
js
or
lock
dec
testl
fmulp
test
and
jnp
imul
sub
incb
lea
inc
cwtl
call
cmp
mull
push
mov
mov
imull
adc
cmpsl
andl
pop
and
dec
call
mov
xor
pushf
mov
lcall
in
sub
xorl
pop
call
mov
or
jno
testb
lods
hlt
loopne
mov
shl
aam
ret
jo
lds
jle
outsb
loop
inc
or
push
mov
mov
aaa
icebp
pushw
sbb
cli
test
mov
mov
rcrb
fistps
aaa
push
mov
cmc
add
movsl
lods
fists
call
adc
dec
sbb
xchg
orb
mov
test
fisttps
mov
sub
jnp
loopne
aas
cmc
imul
in
sbb
cmpsb
shlb
mov
lods
adc
pusha
push
lret
daa
mov
negb
ss
std
repz
sbb
mov
int
rcll
xchg
and
jo
es
pmullw
push
inc
leave
cmpl
aad
sbb
mov
out
or
mov
cmp
out
dec
add
mov
lea
dec
ret
sub
gs
ljmp
jb
and
into
std
push
push
imul
fisttps
cmp
fcoms
stos
sub
outsl
lahf
mov
adc
cmp
call
movsl
push
jl
lahf
mov
pop
jb
in
dec
scas
adc
or
in
lods
push
psubsb
rclb
cld
mulb
ret
arpl
or
cmpl
and
sahf
mov
outsl
mov
inc
mov
sbb
pop
aaa
das
popa
sti
or
jae
sub
sbb
movsb
das
push
sbb
push
rolb
addl
out
pop
into
or
les
lock
add
and
rcl
fildl
subb
mov
xor
push
jb
pop
out
rolb
pop
dec
ror
das
pop
xor
cmpsl
xchg
or
mov
dec
xchg
enter
cmc
outsl
push
rcll
rcl
jecxz
fsubl
mov
inc
scas
jae
in
push
daa
xchg
repnz
inc
je
add
push
xchg
lcall
sbb
or
inc
test
fidivl
and
loop
dec
negl
sub
pop
adc
pop
ss
jmp
inc
mov
nop
push
popf
outsb
mov
and
movsl
test
pop
sub
inc
fwait
sbb
lret
rolb
out
jg
jecxz
xchg
cld
pop
fsubrs
clc
xchg
fbld
dec
xchg
ror
inc
or
add
jmp
jl
pop
movsb
ljmp
je
xlat
negb
cmc
je
bound
pop
adc
fdivrs
fidivrs
or
sub
mov
fstl
push
ret
pop
jecxz
lcall
dec
or
mov
sbb
imull
ret
loopne
or
fistpl
subl
jl
xchg
xor
jnp
mov
inc
and
in
lock
sub
fisttps
mov
mov
ss
and
sbb
fisttpl
jge
call
or
pusha
lods
ficomps
clc
sahf
sub
fwait
sub
push
sbb
insb
add
in
lea
dec
add
mov
add
mov
or
mov
cmpsl
outsb
jne
outsb
fstl
mov
xor
pusha
icebp
xchg
push
jno
jmp
insl
mov
inc
jns
nop
mov
push
push
sub
jmp
xor
fadd
xchg
sbb
or
cs
hlt
dec
push
test
xor
out
or
xor
jecxz
push
and
std
pop
outsb
nop
sbb
jne
gs
ret
or
xchg
mov
idivb
pop
outsl
mov
lock
inc
adc
sbb
cmpsb
fidivrl
jmp
rcll
call
and
das
icebp
jne
imul
shrl
mov
sub
mov
ss
mov
or
cmpsl
mov
pop
push
sub
mov
mov
lahf
inc
inc
adc
dec
jl
xlat
mov
shlb
sbb
jb
cwtl
popa
movl
dec
jecxz
mov
lret
inc
pop
test
inc
inc
aam
fwait
pop
dec
movsb
pop
or
sbbb
arpl
dec
mov
lods
pop
in
push
mov
sbb
add
into
leave
and
pop
std
jnp
mov
jns
mov
aas
out
cvttps2pi
cs
ss
data16
loope
push
cmp
mov
int3
pop
sub
or
call
dec
lcall
xchg
in
rorb
mov
ja
xchg
loop
push
inc
push
mov
add
pop
idivb
pop
ret
popf
mov
inc
mov
fcom
icebp
shll
mov
insl
pop
fimull
xchg
loope
mov
loop
and
dec
dec
cmp
sahf
mov
inc
sbb
jge
ret
sbb
push
push
mov
test
jne
xchg
or
mov
dec
ja
jo
mulb
or
adc
fimuls
aaa
stos
mov
inc
test
adc
scas
cld
pop
push
and
imul
push
into
cmp
inc
out
sub
xor
jbe
cli
mov
mov
push
add
add
data16
call
mov
in
cmp
dec
inc
es
data16
push
add
inc
pop
call
sub
leave
roll
cmpsl
push
mov
insb
outsb
loope
inc
xchg
clc
ja
and
andb
jmp
notb
fdiv
stos
movsl
ds
pop
sub
pop
test
call
xchg
or
xor
call
sbb
xor
mov
mov
rorl
popl
ret
outsl
add
sub
mov
jnp
fdivrl
adc
pop
or
repnz
fnstsw
sbb
lret
loope
pop
icebp
ret
xor
push
fidivrs
xor
xor
icebp
test
rcrl
repz
lds
xor
rsqrtps
sub
dec
into
cmp
or
loop
xor
mov
pop
cmc
sub
fisttps
inc
sub
int
aam
fistpll
mov
mov
or
mov
lds
sarl
mov
and
in
dec
adc
xchg
test
sub
dec
std
mov
sub
xor
sbb
bound
jae
or
hlt
inc
cmp
cmc
fisttpll
xchg
popa
sbb
adc
call
mov
mov
stos
inc
cmpsl
mov
fwait
jle
cs
out
leave
xor
ljmp
adc
mov
lds
mov
xchg
pop
shll
pop
dec
nop
mov
mov
xchg
xchg
jl
mov
outsl
cld
loopne
test
popa
movsl
or
sbb
imul
popa
stos
xor
sub
fwait
out
in
cmpsl
pushf
jnp
mov
xchg
mov
sub
lea
adc
or
dec
repnz
imul
and
mov
xchg
or
mov
sub
push
jg
jne
icebp
xchg
jl
adc
insl
cmpsb
je
push
pop
fwait
iret
shr
mov
idivl
add
popa
mull
xlat
movsl
outsl
sub
pop
jp
xor
pop
and
lcall
fisttpll
jbe
lds
test
aas
lret
movb
mov
sub
push
int
and
cmp
stos
fidivl
dec
push
xchg
shl
xchg
jbe
fadds
pop
pop
adc
mov
stos
dec
mov
inc
or
jbe
and
mov
out
lock
popa
or
mov
or
mov
dec
mov
sub
lds
mov
add
in
pop
in
xor
xchg
scas
popf
mov
imul
sub
subb
fdivs
rorl
dec
icebp
mov
mov
xchg
dec
xor
pop
sbb
cmp
call
iret
sbb
cld
pop
fwait
mov
je
ds
insl
in
mov
mov
adc
pop
das
cltd
or
mov
outsb
mov
je
shlb
add
xor
fdivp
and
jns
shr
xor
cmp
aaa
insl
mov
mov
dec
push
sar
fisubrl
jb
jg,pt
in
sub
cwtl
inc
xchg
push
outsl
and
call
mov
mov
or
adc
jg
outsb
sbb
mov
je
xchg
pop
outsb
dec
cs
incb
fbstp
add
add
outsb
ljmp
push
mov
leave
mov
enter
pop
adc
adc
adc
in
aad
mov
jne
int3
iret
shrl
mov
ss
sbb
add
dec
rol
lea
xor
gs
xchg
pop
mov
ficomps
enter
inc
call
cli
aas
and
dec
or
adc
add
mov
fnstcw
dec
rolb
mov
cli
ds
cli
dec
jmp
scas
lahf
push
bound
insl
fdivrs
push
mov
xchg
cmp
or
and
idivl
mov
push
mov
xchg
mov
or
or
rorb
push
movsb
mov
cli
jmp
add
adc
dec
aam
call
sbbl
aad
sahf
sub
lret
push
clc
dec
jl
inc
aad
inc
cwtl
lds
mov
mov
add
and
lock
sub
test
loopne
push
mov
lods
lock
aaa
pop
and
idivb
cmp
jp
xchg
std
jp
jbe
push
cmp
push
rorb
sarl
mov
and
mov
call
xchg
and
shrb
into
mov
inc
add
sub
dec
push
scas
scas
jo
xor
mov
rcrl
inc
and
cli
subl
sar
lret
lret
shlb
das
insl
clc
mov
out
je
decb
in
testb
push
push
sub
jo
testb
push
loop
jp
push
rcr
bound
jge
adc
fwait
ljmp
mov
imul
jb
fbstp
cmp
cli
pop
mov
aam
outsl
mov
adc
mov
adc
fwait
aam
fsubr
incb
jp
mov
shrl
adc
outsl
imul
call
sbb
ja
mov
in
add
push
push
imul
inc
push
pop
or
fildl
inc
mov
in
or
push
mov
mov
out
add
mov
ja
and
adc
das
sbb
add
xor
dec
and
mov
pop
mov
sbb
mov
xchg
ficoml
xchg
mov
add
icebp
dec
adc
insl
sub
movsb
sub
movsb
jnp
clc
xchg
sub
mov
imull
gs
and
cmpl
dec
sub
aas
mov
cli
in
push
in
or
or
mov
imul
mov
sti
add
mov
test
or
out
or
mov
inc
xchg
xchg
inc
pop
push
inc
or
cmc
stos
adc
jno
rorl
mov
aad
jbe
push
inc
test
in
push
es
mov
cmpsl
call
pop
sarb
add
test
test
and
mov
mov
out
mov
add
mov
mov
jno
xchg
adc
int
dec
xor
pop
jae
sti
cmpsl
fsub
imul
popa
adc
cmp
add
mov
cmc
push
pop
fwait
adcb
mov
icebp
or
cmp
jge
inc
sbb
xor
cmp
in
xor
lret
test
cmp
dec
add
scas
loope
clc
ss
pop
ffree
repnz
mov
das
js
cli
xor
loopne
je
ret
test
shl
flds
dec
adc
repz
das
das
mov
pusha
cmp
dec
test
adc
std
clc
out
sbb
pop
std
out
in
popa
mov
imul
clc
lock
mov
hlt
mov
xchg
sbb
aad
sub
test
arpl
xchg
addl
dec
xor
and
out
inc
cmp
mov
ja
cmc
repnz
add
cmc
daa
das
xchg
xor
inc
mov
outsl
fisubrl
adc
push
or
sub
ror
pop
lahf
inc
or
lock
xchg
and
mov
mov
xor
mov
testb
adc
push
andl
js
rorl
mov
aad
mov
addb
lock
xor
dec
daa
jno
repnz
das
movsl
mov
push
pop
aam
sub
adc
aam
push
rorb
movsb
jbe
adc
mov
outsl
sbb
sbb
ret
or
xor
cmpsb
loopne
add
sarl
push
add
adc
jo
aam
pop
add
xchg
lods
int
ja
push
shlb
test
sbb
cmpsb
xchg
xor
aam
loope
and
sbb
mov
mov
adc
aas
aaa
loop
hlt
hlt
dec
push
inc
mov
and
push
and
fs
sub
push
adc
cmp
fisubrs
xchg
xchg
cli
mov
mov
imul
je
outsb
adc
movsl
cwtl
insl
lods
pop
or
mov
lds
out
mov
xchg
jge
imul
pop
lret
fwait
mov
inc
push
pushf
and
ret
adcb
mov
pusha
pop
inc
adcl
xor
and
mov
in
cmp
stos
enter
sti
mov
fcompl
sti
lock
loop
cmp
or
mov
mov
jne
sub
cltd
loopne
scas
inc
outsb
dec
jecxz
frstor
cmp
or
jg
pop
test
xorl
rcrl
add
and
inc
adc
fwait
jno
call
lock
scas
inc
jne
lcall
rol
dec
popa
adc
ret
push
jne
stos
pop
cmpb
test
mov
sub
int3
mov
out
add
or
fisubs
addr16
inc
or
roll
ljmp
add
push
enter
cmpsb
jbe
xchg
sahf
cmp
dec
xor
mov
in
inc
fsubrl
push
fwait
int
push
adc
je
filds
shlb
push
rcl
push
jo
pop
rorl
repz
lahf
jp
mov
subl
js
cwtl
cwtl
cmp
xchg
jo
jo
pop
pop
pop
lea
test
xor
adc
pop
dec
xchg
jbe
pop
clc
insl
popf
xlat
int3
mov
scas
push
inc
push
jae
cmp
ss
es
std
pop
fcmovbe
cmp
cmp
mov
pushf
sub
mov
lahf
or
sbb
js
into
dec
daa
mov
lock
inc
mov
cmp
inc
mov
adc
mov
nop
rorl
push
cmp
jne
adc
push
out
cmpsb
jle
mul
mov
ljmp
dec
mov
xor
js
cmp
ret
int
adc
les
cmp
adc
mov
jmp
lcall
jo
lret
fnstsw
mov
cld
cwtl
adc
mov
lahf
mov
sahf
mov
fisttpl
cld
es
loopne
sahf
sahf
fistpl
pop
xor
popf
cld
outsl
inc
stos
imul
clc
mov
push
lock
or
out
shlb
sti
pusha
sti
and
pop
push
das
xor
out
push
rcrb
xchg
fistpll
das
mov
dec
repz
jecxz
push
mov
js
aas
mov
xor
popa
outsl
je
arpl
or
notb
push
dec
int3
popf
js
int
pop
xchg
push
fnsave
fwait
mov
cmp
mov
cmpsb
fcoml
je
adc
pop
mov
sub
jmp
pop
test
adc
adc
cmpsl
cmp
ret
mov
push
pusha
mov
and
lock
outsl
pop
mov
int
das
adc
std
dec
mov
xor
sbb
cmp
jno
sub
sbb
jnp
pop
push
lcall
push
cld
add
in
cmpsb
imul
outsl
ja
js
ja
or
clc
jne
fdivs
outsl
xchg
test
aas
push
cwtl
fistpl
or
out
push
xchg
adc
mov
lds
sub
sub
addl
jmp
int
mov
pop
push
movsl
push
sbb
xor
ss
out
push
gs
jne
inc
insb
sbb
call
in
mov
fiaddl
pop
mov
rcl
dec
lock
mov
popf
cmc
xchg
outsl
aas
adcb
mov
adc
mov
sbb
or
add
push
faddl
lea
sahf
ret
ljmp
and
or
sbb
call
mov
mov
push
add
add
push
mov
cmc
jl
add
add
mov
xchg
xor
gs
push
jmp
daa
icebp
jae
xor
test
add
or
adc
or
adc
push
cmc
mov
cltd
cltd
jle
sarl
xchg
mov
or
and
ja
in
xchg
gs
hlt
das
lret
and
fwait
sbb
xchg
enter
xor
xchg
mov
mov
jg
js
pop
ljmp
insl
aad
or
mov
and
mov
int3
mov
pop
pop
shrl
mov
ja
aaa
jle
and
addr16
dec
cmc
cmpsb
mov
cmp
dec
xor
orl
addb
sub
pop
add
sbb
pop
aad
or
pop
jae
lcall
call
pop
pop
sbb
adc
cmp
mov
fcmovbe
sbb
scas
std
mov
dec
sbb
sub
xor
add
loope
outsb
loopne
xor
and
iret
and
fcompl
or
mov
pop
push
add
push
int
mov
cmp
xlat
jb
outsl
dec
popf
into
insl
rcrb
and
andb
xor
xchg
sti
insl
push
aaa
pop
lock
pop
and
in
pop
xlat
adc
xchg
mov
mov
test
and
or
insb
shlb
cmp
outsb
xor
outsl
adc
or
cli
mov
sti
les
mov
fadds
xor
into
nop
fnsave
test
jmp
stc
inc
and
xor
push
mov
adc
movsl
fistps
xor
int
testb
push
add
and
mov
push
inc
xchg
add
mov
test
popf
jl
lret
mov
xchg
dec
imul
enter
lcall
das
mov
xchg
adc
mov
mov
mov
adc
dec
lahf
sub
and
push
pop
lcall
lret
xor
xchg
mov
xor
sahf
outsb
jge
sbb
lea
icebp
xor
sbb
inc
scas
sub
adc
jo
sti
test
insl
in
dec
aam
push
push
jnp
insl
lret
cmc
out
cmpsb
pop
and
lock
mov
and
push
or
pop
fistps
dec
movsl
pop
pushf
jle
mov
pop
ss
push
mov
mov
mov
outsl
in
jns
push
sbb
or
or
lahf
outsb
adc
sahf
in
adc
inc
enter
mov
fisubrs
fwait
add
mov
movsb
subl
imul
pushf
outsl
cmp
bound
ss
pop
mov
mov
push
insl
mov
adc
insl
call
mov
cmp
push
sub
mov
rcrl
push
sbb
lahf
lds
fmul
mov
jnp
add
pop
sbb
lcall
jge
fwait
or
and
icebp
int
icebp
ss
lea
out
jl
insl
fdivl
add
or
test
adc
add
outsl
mov
clc
and
inc
mov
jl
mov
mov
pop
test
lock
jle
iret
inc
jg
and
adc
inc
imul
add
mov
loopne
xchg
pop
sub
xchg
mov
and
inc
mov
rolb
adc
cmp
in
add
mov
dec
dec
int3
and
xchg
push
jne
loop
ja
dec
xor
lock
and
sub
dec
inc
mov
sbb
inc
pop
ss
push
add
sbb
in
dec
pop
xchg
fidivrs
in
pop
loope
add
out
xchg
dec
jle
sbb
dec
xor
pop
mov
add
or
cmp
inc
stc
pop
cmp
fucomip
xor
adc
inc
cli
cwtl
lods
jae
inc
xchg
lods
xor
cmp
cld
sub
mov
add
dec
or
or
dec
pusha
add
mov
add
mov
les
or
aas
jb
cltd
cmpsl
push
jge
push
not
sub
xchg
icebp
cltd
enter
clc
aaa
fnstcw
jle
sub
ret
inc
out
faddl
lret
mov
mov
ret
cmp
fcomip
jb
into
sbb
insb
mov
cmp
xor
imul
fimull
push
pushf
and
gs
mov
or
std
inc
mov
or
cmpsb
bound
jmp
jmp
out
rorb
cmp
lds
pop
mov
aas
rcrl
push
push
sbb
fcompl
mov
mov
jmp
cld
andb
test
inc
xor
hlt
sbb
shll
scas
adc
mov
push
scas
shrl
adc
or
pusha
mov
out
cld
dec
popa
imul
mov
fsubrs
mov
and
outsb
ja
xor
and
imul
stos
jbe
mov
sbb
and
aaa
sub
sbbl
mov
cltd
icebp
sar
cmp
dec
jmp
rep
dec
cld
add
not
js
sbbb
les
call
adc
outsl
push
dec
sbb
mov
pop
sub
int3
je
xchg
js
or
in
sub
and
add
stos
rclb
lds
in
stos
lea
inc
adcl
bound
and
pop
je
loope
clc
jge
inc
fisubrl
mov
inc
mov
fcmovb
jg
pop
repz
out
jmp
or
enter
pop
pop
das
cmp
ret
or
out
bound
arpl
push
pop
jl
dec
mov
movsl
fdivr
fs
cmpsb
outsb
in
sbb
outsb
mov
sbb
sbbb
dec
hlt
lds
jmp
sbbl
aad
add
jecxz
xchg
test
adc
sub
lahf
ud2
mov
sbb
mov
pop
int3
or
add
jp
adcb
dec
jp
test
ret
fistpl
fnsave
dec
jp
popa
inc
cmp
dec
insb
cmp
and
addr16
push
mov
cmp
push
mov
fldcw
int
orl
outsl
clc
jmp
sub
pop
popf
fidivrl
pusha
inc
insb
aad
mov
and
out
out
push
cltd
pop
sbb
adc
enter
rcll
sbb
jb
cmovle
add
pop
xchg
loopne
xor
jmp
pop
mov
xor
dec
and
mov
test
mov
data16
cmp
inc
ljmp
and
inc
mov
xchg
loope
pop
lds
push
sub
fnsave
adc
sbb
xorb
add
sbb
insb
iret
sbb
jle
mov
sub
dec
rol
xchg
clc
imul
jne
cs
and
or
xchg
fucomip
clc
testl
pop
andb
add
cmp
or
fidivs
ds
aam
pusha
or
pop
sbb
cmp
cltd
mov
fisubrl
aaa
add
fisttps
shlb
nop
jnp
mov
lock
fistl
fdivs
test
mov
sbb
jb
inc
ret
mov
test
lea
fistps
cli
cmc
out
or
sub
mov
mov
push
mov
test
lds
inc
cld
cmp
xorb
das
lea
push
and
mov
mov
sti
cmp
aam
dec
jl
mov
outsb
pop
test
and
dec
dec
sub
insb
mov
mov
jecxz
adc
mov
in
mov
sub
test
mov
scas
cld
adc
pop
pusha
fcoms
fildll
bound
rorl
fistpl
inc
jl
ret
in
inc
insb
xchg
sbb
pusha
cmp
mov
add
cmp
enter
dec
sub
in
adc
outsl
lret
jg
sub
sti
xchg
outsb
ss
sub
xorl
mov
jnp
fs
add
roll
fst
and
dec
mov
cld
insl
adc
stc
shl
push
cmp
mov
sbbb
push
or
sahf
adc
and
xchg
lds
xchg
adc
cmp
pusha
out
mov
std
push
lds
addb
sbb
stos
shrb
movsl
pop
ret
inc
dec
les
adc
jne
pop
sbb
idivb
pop
fistpl
cli
mov
dec
dec
pushf
rcr
fs
sbb
cmp
xor
or
pop
pop
mov
push
sbb
int3
sbb
popl
inc
push
jnp
mov
test
cmpsl
mov
sbb
mov
jecxz
jns
xchg
pop
fdivrs
lds
outsb
orb
dec
cmpl
and
in
daa
fs
test
out
fnsave
jmp
jg
lahf
shlb
xchg
pop
pop
push
inc
aas
adc
dec
in
and
adc
lods
adc
daa
fimull
or
mov
stos
and
add
pop
jb
js
sbb
adc
popa
in
or
icebp
adc
sarb
ljmp
scas
sub
mov
inc
mov
cmp
cmpsl
out
sub
je
sbb
bound
cltd
push
mov
rcrb
dec
and
inc
mov
aad
mov
jl
test
add
jge,pn
rcl
pushf
xor
pop
ret
or
shl
adc
fcompl
scas
notl
aad
mov
push
sub
test
mov
push
cs
sbb
jno
dec
mov
add
ja
call
and
xor
test
pop
fdivrs
movb
xchg
or
shll
test
js
test
fisubl
inc
xchg
xor
mov
faddl
mov
das
sbb
fistl
cmp
call
repnz
mov
jmp
loope
loope
sbb
cmp
loop
fwait
and
insl
add
rol
call
bound
andb
pop
cmpsl
jb
decl
out
popf
adc
icebp
jle
adc
add
sbb
mov
insl
lock
mov
sbb
xchg
mov
lods
mov
pop
pop
imul
fisttps
mov
dec
pop
inc
fildl
or
loopne
pop
sub
inc
mov
test
mov
push
push
inc
call
inc
pushl
std
jl
lods
xchg
add
out
mov
aaa
push
push
call
mov
loop
adc
pop
outsb
sbb
in
test
aad
sub
fistl
cmc
push
int
adc
inc
mov
outsb
push
xchg
inc
loopne
jmp
push
push
insb
rcrb
mov
xorb
inc
mov
lea
std
nop
pop
fmul
es
icebp
inc
mov
mov
pop
add
fists
pop
pop
test
je
imull
cwtl
cmp
mov
xor
js
or
addb
pop
rcr
xor
pop
ficompl
mov
sub
mov
jmp
outsb
jg
and
mov
pop
mov
sub
pop
inc
sbb
fcomi
bnd
pop
mov
pop
sbb
inc
mov
mov
fcmovbe
in
out
sub
shlb
fbstp
push
sbb
fistl
adc
sti
aam
mov
ja
add
mov
adcb
ficomps
mov
rolb
xor
xchg
jbe
ffree
rcrb
or
push
psrld
xor
roll
hlt
mov
sub
and
push
ss
inc
hlt
testb
sub
cwtl
add
roll
mov
and
lods
ss
inc
mov
sbb
mov
fbstp
mov
push
aas
loopne
push
ds
insl
shr
sub
stos
div
movsl
outsl
mov
iret
scas
movsb
push
sahf
out
dec
adc
fdivr
lods
mov
jno
and
sbb
fiadds
fadds
enter
insl
jg
add
jg
pop
in
call
cwtl
lods
mov
pop
jge
xlat
clc
and
ljmp
ss
jno
add
or
popa
sti
js
mulb
stos
pop
test
shll
aam
push
sbb
imull
push
pop
stos
bound
pop
lret
std
rolb
adc
or
je
cmp
arpl
xchg
aaa
ret
mov
icebp
ljmp
mov
push
jb
jmp
add
insl
pusha
add
popf
mov
js
xor
out
or
outsb
loop
scas
dec
js
fdivrl
xchg
dec
out
mov
sarb
popa
add
xlat
sub
mov
xor
psubb
data16
lahf
xchg
inc
and
sub
jmp
push
lock
sub
mov
rcr
mov
cmp
sub
add
sub
das
sub
xchg
or
cmp
mov
add
adc
test
xor
sub
sbbb
xchg
lds
or
enter
mov
jns
in
bound
lods
xor
fidivs
push
fstl
adcb
xchg
and
sub
xor
ret
fists
xchg
jle
cmp
fisttps
jns
and
outsl
dec
rcl
or
or
or
xchg
sub
in
out
push
or
fdivrs
stc
imul
cmpsl
orl
and
popa
aad
mov
xor
push
addr16
inc
pop
aas
inc
bswap
mov
dec
add
inc
xchg
icebp
addb
mov
add
add
and
xor
push
xchg
lock
test
out
mov
add
fists
shrb
bound
sub
loope
addr16
lock
mov
inc
mov
fwait
xor
xor
imul
jl
cs
adc
ss
rol
in
into
pop
lret
sub
stc
add
lea
push
xor
push
fucomip
jnp
xchg
nop
pop
pusha
adc
cltd
rorl
out
push
sub
jne
jb
out
test
or
jl
pop
scas
sti
pop
and
fisttps
fdivl
ret
jmp
lods
pop
sahf
aad
inc
ja
mov
scas
jmp
into
in
mov
mov
fbstp
mov
cmpsb
push
cwtl
pop
outsl
add
je
loopne
enter
jge
loope
jne
lock
inc
mov
mov
cmp
inc
lock
mov
add
movsl
out
or
fisubrl
cli
loope
mov
loop
aaa
sub
test
outsl
inc
sub
push
add
inc
out
cltd
add
cs
int
inc
mov
in
loope
aam
mov
lock
lods
fistpll
push
je
test
pop
jl
jne
dec
cmpl
or
and
ror
xchg
pop
rorl
inc
es
pushf
pop
and
xchg
cwtl
cmp
push
cmp
pushl
cli
push
js
fldenv
push
cltd
xchg
add
push
div
jecxz
lahf
push
jp
orb
jp
adc
outsl
popf
mov
hlt
xor
or
inc
mov
sub
jns
leave
inc
add
bound
stos
mov
jns
push
mov
leave
xor
cmpb
icebp
dec
jo
inc
sub
cmpsb
xchg
and
fs
sub
outsb
fsub
lret
add
push
xchg
dec
adc
in
jmp
or
xor
mov
mov
icebp
scas
dec
aad
dec
jnp
call
lods
dec
cltd
sbb
loop
icebp
out
push
add
popf
xchg
jb
ficoml
fsubrp
mov
jns
loope
cmpsb
mov
inc
cmpsl
sbb
and
bound
pop
lods
xlat
das
jmp
and
clc
xor
mov
mov
out
mov
lret
push
je
nop
sub
ljmp
push
push
inc
imul
insl
insl
add
test
push
shlb
push
push
mov
push
push
xor
roll
jno
xchg
pop
push
pop
pop
sti
mov
xor
stos
adc
and
inc
sbbb
dec
jno
leave
sub
xor
mov
nop
mov
xchg
dec
loop
es
arpl
mov
imul
cmp
nop
mov
call
movsb
jle
pop
add
jmp
jmp
and
shl
shlb
sbbl
aam
je
xor
pop
arpl
dec
pop
jbe
lea
dec
add
push
inc
jmp
sti
mov
ss
test
outsb
push
ror
jmp
scas
or
xchg
daa
stc
shll
mov
mov
divl
mov
scas
push
movsb
mov
mov
shl
js
test
fiaddl
lods
push
scas
fisubrl
in
lcall
push
subb
outsl
or
pop
in
bound
andb
xchg
cmpsb
or
cld
dec
jmp
sub
add
cld
call
mov
jmp
lods
inc
jmp
lods
clc
orl
clc
pop
je
out
inc
imul
or
inc
inc
sarl
mov
pop
incl
pop
sub
push
mov
mov
push
loope
addr16
sub
out
mov
and
popf
jmp
inc
test
lret
ret
cmc
rcl
out
inc
adc
push
rep
movsl
mov
inc
jecxz
mov
movsl
mov
jmp
push
sbb
xor
pushl
jge
add
dec
dec
sub
fnstsw
fldl
adc
xlat
roll
lds
stc
mov
dec
pop
dec
lahf
int3
mov
push
cmp
inc
sbb
dec
pop
fs
cmp
aas
sbb
out
js
sbb
loop
cmp
inc
insl
adc
sub
mov
ljmp
subb
notb
xor
xchg
xchg
lcall
into
jmp
add
mov
pop
jl
ret
fildl
mov
cli
sahf
movsb
mov
or
inc
dec
pop
jp
cmp
and
sbb
or
dec
add
negl
inc
fisttpl
jecxz
stos
cmpsl
rcr
incl
mov
mov
dec
mov
loop
icebp
xor
cmp
jp
push
insl
mov
push
mov
mov
mov
cs
mov
cmpsl
jbe
inc
adc
adc
jns
inc
orl
mov
cld
bound
mov
pop
xchg
jo
clc
push
incb
shlb
ffreep
negl
push
sbb
loope
push
std
sub
sbb
fstpt
cmp
jne
lea
jno
pop
sbb
dec
js
int3
or
mov
pavgw
jp
scas
or
jno
int3
xchg
movsl
adc
fldl
adc
fwait
dec
cli
jmp
jns
pop
ss
mov
sub
out
ret
or
lods
xor
jmp
cmpsb
outsb
imul
leave
pop
xchg
fstpt
in
fistl
pushl
scas
sbb
adc
xchg
sub
push
mov
test
sahf
xor
icebp
push
int
cwtl
filds
fcoml
movsl
mov
dec
lcall
sbb
ss
filds
in
and
cmpb
cmpsb
cld
ds
test
mov
fnsave
push
or
add
mov
scas
mov
sub
rorl
jecxz
loopne
or
ret
add
xor
mov
pop
xchg
pop
mov
lret
loopne
mov
push
je
mov
pop
adc
scas
sub
out
test
call
out
sbbb
arpl
pop
mov
pop
and
xchg
jmp
loope
mov
dec
test
lods
xchg
xchg
shrl
push
xor
xor
mov
and
gs
push
gs
push
and
rcl
xor
adc
adcb
ds
push
inc
fistpl
loop
filds
sub
jo
pop
push
nop
rorl
add
and
outsl
cltd
xor
add
cmp
xor
adc
ficomps
mov
jo
xchg
jno
inc
aaa
mov
rolb
add
ret
clc
fwait
xchg
pop
outsl
jb
addl
pop
lret
in
fistl
cli
leave
mov
xchg
pop
icebp
or
imul
js
test
cmp
cmp
xchg
or
fwait
sbb
pop
push
cli
mov
or
jne
xchg
sub
ds
inc
sub
movsl
or
imul
aam
inc
loope
and
dec
out
xor
out
bound
push
dec
aad
in
in
call
mov
or
icebp
mov
jl
ret
jns
sbb
xor
arpl
xlat
cmpsl
or
push
sbb
pop
push
test
push
mov
mov
ss
int3
mov
xor
fistpl
jl
mov
shll
dec
adcb
pop
mov
mov
fidivs
jne
rorl
cmp
cwtl
in
mov
pop
or
bsr
add
inc
std
jo
aaa
push
outsb
ds
jbe
jge
cmp
mov
xchg
sub
inc
jle
sbb
or
mov
fildl
pop
jne
stc
cli
sbb
adc
lods
pop
dec
repz
das
adcb
inc
out
es
aam
adc
jns
loop
mov
push
sarb
fsubrl
lret
xchg
bound
and
out
adc
loope
xor
fcomps
ret
popf
and
test
cs
push
mov
jecxz
pusha
xchg
mov
pop
sub
les
xor
leave
call
mov
pop
sti
ret
daa
push
js
inc
stc
cmpsl
dec
fs
ret
mov
shrl
or
loope
aas
cmpb
push
sbbb
adc
pop
shld
repz
xor
in
inc
adc
dec
movsl
mov
xor
push
jmp
std
lods
test
add
add
out
pop
je
cmp
sub
insb
ss
jecxz
lahf
lcall
aam
push
lods
inc
in
mov
inc
filds
sti
push
insb
cmp
fldcw
and
push
mov
aad
cmp
sbb
add
js
rclb
cwtl
jae
or
mov
ss
fnstcw
js
push
adc
les
popl
sbb
adc
push
in
mov
jp
outsl
fdivr
pop
sub
xchg
push
add
test
mov
sub
mov
cmp
int3
pop
lods
fdivs
std
sub
jne
dec
and
movsl
incl
movsl
inc
jo
adc
add
dec
ljmp
andl
icebp
mov
push
push
add
push
dec
jae
push
jmp
testb
movsb
xor
ja
aas
dec
mov
dec
xchg
je
push
aaa
add
mov
cmp
data16
pop
sbb
inc
cmp
mov
popa
iret
in
add
subl
mov
adc
popa
sbb
add
jecxz
mov
cld
les
js,pt
sbb
in
inc
xchg
pop
out
jecxz
add
pop
cmp
pop
lcall
ret
mov
or
jae
test
clc
mov
push
lds
adc
in
xchg
xor
cmp
in
ret
cmc
or
dec
xchg
inc
push
into
loop
mov
cwtl
add
sub
je
mov
jne
call
mov
cli
xor
shrb
mov
ss
aaa
sbb
or
pop
mov
mov
add
or
dec
jnp
sub
sub
pop
jp
cli
stos
stos
adc
xchg
push
add
shrl
dec
and
jbe
testl
mov
fstpl
push
xor
jne
mov
repz
jg
fisttpll
psubsb
in
outsl
jb
lret
xor
imul
out
or
inc
pop
fdivl
addb
test
or
fadd
incl
push
js
pop
aam
enter
and
xchg
outsl
adc
aad
cmp
cmp
in
or
jge
in
mov
xor
dec
ret
add
inc
fsubl
pop
ss
mov
ss
mov
inc
sbb
sbb
sub
outsl
notb
mov
test
cmp
pushf
mov
int
pop
and
pop
push
mov
push
or
sbb
xchg
mov
nop
or
pop
xor
xchg
std
and
pop
and
inc
orb
fdivrs
push
mov
subl
jo
push
bndstx
fiaddl
aaa
rolb
clc
push
push
int
and
insl
jecxz
test
sbb
loope
cld
das
sbb
xor
das
sahf
movsl
popa
cltd
fdivs
test
cli
addb
mov
mov
or
dec
pop
ret
inc
xor
sbb
push
lret
xor
popa
jb
insb
cmp
inc
or
adc
mov
sbb
dec
xor
jmp
cmp
loopne
pop
sarl
clc
ja
xor
iret
push
out
add
mov
inc
in
shll
add
cmp
push
push
mov
sarb
decl
loope
pop
pop
imul
mov
aam
mov
cmc
cltd
ss
dec
push
mov
push
pop
sub
into
push
in
push
push
leave
mov
adc
lods
add
lahf
fs
rcrb
outsb
push
nop
stos
pop
insb
jg
xchg
jge
sub
cmpsl
pop
adc
jb
adc
or
lds
cmpsb
cmp
jmp
xor
cs
aas
lock
cs
cmp
push
repz
push
imul
movsl
aad
jecxz
enter
inc
or
test
js
inc
push
stos
mov
out
jae
lock
gs
loopne
push
ljmp
aas
pop
cltd
jmp
pop
in
jl
mov
cli
or
mov
xor
sti
inc
divl
add
fiadds
cwtl
hlt
jns
fstpl
push
adc
bnd
mov
mov
mov
cmpb
sbb
mov
jle
sahf
xor
insl
ljmp
daa
stos
sub
out
movb
inc
subb
mov
add
sbb
push
in
fcom
and
jle
jmp
sbb
hlt
mov
aam
lret
or
xor
jl
aad
ljmp
mov
outsl
scas
xchg
stc
or
orl
sbb
test
out
cmpsl
arpl
ret
popf
mov
or
test
das
sub
push
negl
out
lret
jb
push
dec
dec
xor
inc
out
and
ret
jge
stos
shrl
pop
mov
add
and
and
add
jecxz
popa
push
push
fiadds
pop
mov
cltd
or
xchg
cmp
aaa
push
rorl
incl
mov
push
arpl
loopne
xchg
js
jae
sti
cvtps2pi
ret
add
pop
fs
pop
adc
add
ror
sub
pop
mov
push
je
lods
enter
add
sub
jle
cmc
imul
jmp
rcl
xchg
lds
popf
sub
dec
pop
inc
std
clc
cmc
loop
sub
sbb
outsl
and
loopne
and
xlat
popa
push
insb
fists
cmp
imul
mov
dec
subl
iret
mov
mov
mov
xlat
call
adc
aaa
fsubrl
mov
aam
xchg
rcr
pop
cltd
cmp
mov
movl
mov
std
add
mov
mov
insl
out
shll
icebp
jb
jnp
mov
add
shrb
sub
sbb
mov
shrl
fadds
mov
xor
mov
sbb
add
jge
je
movsl
jno
addl
add
cwtl
mov
and
cmpb
or
mov
aas
push
out
sarl
rorl
jmp
dec
sbb
cmp
fsubs
fisttpll
xchg
xor
or
sbb
call
jle
add
outsl
fucomi
test
pop
and
fs
mov
lcall
les
inc
enter
clc
mov
adc
xchg
jns
std
and
movsl
daa
pop
cmp
loop
or
and
push
adc
cmc
out
or
jb
mov
ljmp
jl
lock
push
pop
aad
lahf
loop
xchg
and
divb
add
inc
popf
fcmove
in
js
push
clc
inc
inc
das
popf
sbb
add
push
ss
out
in
pop
std
cmpsl
ss
rclb
hlt
scas
cmp
jg
std
pop
jmp
hlt
or
jecxz
mov
cwtl
mov
add
cli
inc
pop
outsl
xor
repnz
je
mov
xchg
or
xor
mov
mov
xchg
gs
jbe
js
adcl
xor
lds
push
mov
add
mov
dec
cmp
cltd
add
cmp
xchg
add
inc
xor
cmpsb
pop
add
nop
repz
inc
jl
sbb
push
loope
in
into
sahf
mov
pop
js
xorb
ss
leave
pop
mov
inc
sarb
stos
dec
dec
ds
adc
or
jmp
cmp
cmc
cmp
icebp
ret
insb
mov
jno
sub
mov
pop
cmpsb
stc
test
push
bound
mov
cld
or
adc
push
jo
push
sbb
or
mov
jnp
nop
int
dec
lods
push
mov
add
aas
lock
xchg
add
pop
cmp
imul
push
dec
xorb
mov
sub
add
popl
pop
aad
outsb
test
jo
dec
fcoml
inc
mov
test
xor
ret
ds
dec
stc
sbb
mov
cmp
mov
test
pop
filds
outsl
loope
adc
fstpt
inc
pop
cmp
ficoms
mov
ljmp
add
pop
push
xchg
and
mov
popa
arpl
inc
pushf
sbb
pop
add
ror
jne
pop
mov
or
out
push
jnp
inc
pop
sar
fistl
mov
push
je
insb
insl
aad
add
mov
ret
sti
ret
and
movsb
ret
push
dec
icebp
mov
push
pop
arpl
mov
in
jecxz
fsubrl
out
jge
pop
mov
aas
rorl
add
jb
xchg
fisttpl
fimull
cltd
add
cmpsl
orl
push
sti
stos
sub
int
test
dec
arpl
add
lods
inc
add
sbb
mov
testl
aam
xchg
nop
dec
int3
fldcw
inc
icebp
jle
pushf
aam
call
push
jnp
aaa
mov
test
xor
pop
sub
sti
test
push
out
jbe
pusha
cwtl
push
adc
dec
ljmp
imul
pop
push
or
dec
paddw
sbb
jg
add
jl
loope
ret
pop
lret
outsl
mov
push
xchg
shll
lret
pushf
fisttpl
mov
int3
loop
sti
mov
cmc
add
mov
pop
rcrl
xor
dec
fisubrs
inc
cmp
in
ror
push
es
push
ret
fst
outsl
adc
ficoml
ja
mov
sbb
and
scas
pop
arpl
ja
adc
push
sbb
xorb
push
inc
cmp
fs
mov
outsl
cmpsb
idiv
cmp
push
dec
push
data16
adc
in
shll
data16
pop
sbb
mov
cs
insl
in
jle
cmp
aad
xchg
pop
aas
cmp
je
and
imul
inc
fistps
movsl
mov
pop
sbb
jbe
cmpsl
ret
int3
and
out
outsl
mov
mov
loope
cmc
inc
inc
movsl
mov
testb
jp
push
shrl
mov
or
sub
push
fistpl
and
xor
jge
test
leave
mov
fadds
stos
adc
fstpt
out
out
outsb
add
jo
aas
loopne
xor
enter
test
cmpsb
sbb
xor
pop
inc
push
mov
icebp
xchg
push
inc
xchg
cli
call
outsb
ret
dec
in
cs
cmp
mov
je
and
and
aam
mov
mov
pop
mov
sbb
sbb
mov
mov
mov
sbb
xor
xchg
jp
and
pop
or
xorl
jp
addr16
dec
xor
and
sahf
cli
lahf
repnz
or
loope
mov
xor
push
cmpsb
dec
movl
das
icebp
sar
js
push
cltd
movsl
shll
out
or
hlt
shlb
fs
jl
shll
cmp
out
and
stc
in
sahf
push
ds
sbb
or
add
in
jae
inc
jb
insb
jg
scas
mov
and
push
adc
and
pop
adc
adc
fsts
xchg
lds
imul
add
popf
sti
push
imul
adc
pop
mov
rcll
mov
push
sti
shll
add
fnstenv
aad
mov
adc
xlat
pop
in
stos
pop
insl
sub
loop
mov
xor
filds
fsubs
add
aam
jmp
leave
daa
push
mov
aaa
push
xlat
xlat
leave
sbb
cmp
adcb
push
xor
fstpt
jp
pop
notb
dec
imul
ljmp
dec
into
cmp
or
test
push
pop
cmp
sub
dec
imul
dec
mov
ret
jecxz
dec
gs
jns
sbb
das
mov
or
outsb
inc
dec
adc
out
lock
enter
in
js
outsb
out
fsubs
stc
das
xor
push
xchg
dec
js
testb
pop
mov
add
push
sbb
lahf
ljmp
pop
sub
loop
fwait
adc
mov
cmpsl
daa
push
pop
bound
lahf
push
shll
and
and
js
aam
ljmp
clc
adcb
xor
rclb
or
mov
rclb
mov
lock
std
sub
or
jecxz
xor
jl
rcrb
inc
in
mov
lods
push
mov
aas
push
lock
xor
sub
dec
je
cmp
pop
lahf
in
jmp
cli
pop
mov
mov
stos
es
xor
je
pop
pop
or
add
sbb
icebp
addl
pop
or
test
arpl
setb
pop
ds
inc
out
dec
pop
sbb
sub
test
jne
loopne
xchg
mov
xchg
dec
dec
sahf
decb
hlt
mov
xchg
sahf
and
ds
xchg
cs
xchg
out
lock
mov
lcall
js
lods
adc
lods
out
into
inc
subl
mov
in
test
pop
xlat
inc
ret
lret
xchg
cmpsb
dec
inc
out
mov
outsb
loope
mov
or
out
bound
lahf
jg
pop
incl
and
mov
or
addr16
push
sub
mov
push
pop
mov
js
jle
das
sarb
sbb
push
jp
sub
pop
insb
nop
fdivs
dec
pop
sub
outsb
inc
loope
push
in
push
sbb
jmp
xor
dec
mov
inc
jns
cmp
pop
mov
fcompl
push
push
mov
inc
js
push
cwtl
pop
jle
lds
aam
xchg
mov
dec
insl
sbb
decb
ja
lahf
pop
dec
packsswb
jp
cmp
adc
and
in
jo
and
add
push
pop
push
ret
mov
jl
xchg
sub
and
cmp
rolb
xchg
mov
jbe
xor
pop
mov
jo
cld
mov
hlt
cltd
or
cmp
aaa
sub
inc
frstor
mov
mov
xlat
lock
lods
sahf
mov
shrb
xchg
xchg
jmp
imul
dec
sub
out
aam
adc
sbb
or
xchg
cmp
add
adc
pop
mov
sbb
nop
fnsave
jg
dec
arpl
rcrl
lods
and
inc
or
xor
fnstsw
call
sub
shrl
mov
sub
mov
mov
ljmp
pop
push
sbb
push
popf
pop
xabort
mov
gs
push
mulb
out
insl
mov
aam
sahf
sub
push
popa
inc
push
fisubrs
fstl
push
rcl
adc
aas
xchg
popf
mov
test
lcall
outsb
das
inc
adc
fisubl
sarl
subl
push
pop
clc
shrd
pop
dec
xor
inc
lcall
and
pushf
cmpsl
adc
jns
roll
rorl
movsl
out
push
loopne
mov
or
out
inc
cmpsl
cmp
popf
js
js
addr16
bnd
add
xchg
and
int3
push
cmpb
movsl
push
sub
jecxz
aaa
cmp
or
insl
add
ljmp
hlt
push
add
sti
movsb
add
out
subl
pop
mov
popa
sbb
dec
rcr
dec
in
dec
sbb
in
pop
mov
mov
pop
test
pop
xlat
pop
jmp
call
test
sbb
sbb
nop
jbe
inc
mov
push
jge
or
movsl
test
aam
jnp
pushf
xchg
mov
pop
out
aam
push
and
xlat
jecxz
ja
shrb
pop
jmp
push
sub
fdivrs
popa
in
or
mov
xor
xchg
mov
mov
sbb
dec
jl
cmp
movsl
into
jg
mov
jecxz
cmc
pushf
xchg
sub
sbbb
fcomp
mov
push
xor
insl
add
mov
bnd
fcoml
mov
clc
push
xchg
push
push
inc
push
push
pop
add
cli
xor
adc
pop
mov
push
orl
hlt
push
aad
push
push
jg
mov
mov
xor
mov
push
call
mov
leave
rolb
iret
rcrl
add
jno
jb
addl
imul
xor
pop
lods
add
xor
fdivr
shll
adc
cmpsb
rolb
daa
fcmovne
cmpsl
outsl
push
and
inc
push
or
test
pop
add
sti
dec
mov
adc
cmp
mov
xchg
xor
push
jae
xor
pop
mov
push
andb
fsubrs
sub
push
add
rcll
and
sbb
jne
cmp
js
aam
sbb
cmp
sub
jp
add
bound
inc
mov
mov
or
into
inc
adc
fimuls
mov
sahf
hlt
xchg
push
jg
into
sbb
addr16
lret
sbb
bound
scas
fwait
divl
jmp
outsb
xor
push
cmpb
inc
pcmpeqd
sbb
adc
push
sbb
inc
add
into
ror
or
ror
xor
add
xchg
outsb
pop
mov
cmp
add
adcb
sub
jle
mov
jmp
sbb
mov
mov
mov
loope
iret
push
fwait
cmp
and
lods
cmp
pop
and
or
mov
inc
mov
arpl
mov
sbb
test
adc
aaa
push
mov
push
mov
cli
jo
cld
cmp
in
lret
xchg
push
mov
insl
aaa
mov
sti
pop
sub
aas
jo
adc
ss
lcall
shll
push
sbb
pop
mov
dec
es
cld
jecxz
stos
xchg
and
cmp
mov
dec
cmp
pusha
cmp
in
das
xchg
mov
xchg
pop
ficoml
fcoml
or
add
loopne
mov
xchg
adc
lods
and
ja
cmp
sub
xchg
mov
jb
inc
sub
test
hlt
aad
dec
out
dec
adc
cwtl
aad
dec
fadd
xor
adc
jno
pop
aaa
aam
push
add
push
or
jne
and
cld
daa
mov
dec
mov
inc
or
pop
jmp
test
inc
fdivl
adc
add
lds
js
icebp
sbbb
sub
fs
int3
pop
jbe
std
mov
out
inc
and
adc
pop
fstpt
adc
pop
adc
loopne
mov
sbb
push
add
inc
xchg
out
arpl
push
ljmp
and
stos
push
and
insl
mov
es
test
pusha
jl
lock
lcall
cmp
mov
je
rolb
fstpt
xor
pop
cli
insl
xor
add
ds
outsb
lcall
xor
inc
cs
lds
xchg
add
jmp
test
lods
add
jne
popa
jg
or
sbb
pop
loope
xchg
mov
lock
xchg
pushf
mov
sti
mov
rcr
dec
xor
sbb
jne
mov
fdivs
mov
lret
mov
sbb
or
out
aaa
dec
and
js
add
pop
lcall
test
jmp
mov
push
push
add
jl
mov
sbb
inc
jno
mov
aas
push
shll
fdivl
lret
xor
xorl
xor
adc
jl,pn
pop
test
incb
ljmp
fs
xchg
lret
jl
insb
cld
mov
adc
xchg
cwtl
xlat
les
adcl
pop
inc
sahf
inc
and
outsl
ljmp
push
insw
dec
push
insb
sub
out
or
les
lea
sbb
push
cs
dec
mov
daa
add
mov
mov
xor
mov
and
icebp
jbe
jmp
jnp
lods
ds
mov
outsb
out
and
sub
sahf
sub
sub
mov
popf
sbb
outsl
jl
mov
mov
pop
jbe
xchg
mov
mov
cltd
add
pop
clc
ficoms
imul
adc
sub
aam
lock
int
scas
cs
pop
pop
add
inc
xor
clc
stc
rorl
test
or
mov
scas
clc
or
xchg
subb
inc
xlat
or
ret
mov
enter
cmp
mov
popf
dec
rcrb
fwait
ja
imul
inc
flds
pop
dec
test
jecxz
ss
sar
lock
pop
rorl
xlat
or
mov
mov
push
pop
pop
dec
inc
fs
incl
xor
adc
imulb
loop
daa
mov
orb
or
in
xchg
popa
inc
aaa
in
inc
adc
pop
std
insb
leave
aam
jge
loopne
mov
jo
subb
aas
xlat
dec
bswap
xchg
mov
dec
jge
lock
mov
sti
sub
sbb
mov
adc
into
sahf
sbb
sub
shrb
fwait
mov
arpl
lds
or
cmpsb
sbbl
inc
rcr
or
jecxz
test
leave
sbb
jl
dec
lods
cmp
das
std
popf
jns
sbb
out
arpl
mov
cmpb
addr16
dec
adc
mov
pop
sub
rcll
sbb
mov
xchg
sbb
movsl
jnp
out
mov
es
iret
add
pushf
mov
mov
dec
mov
mov
scas
cmp
sub
addb
sbb
ret
and
daa
mov
lret
jno
les
add
jle
inc
fwait
les
inc
test
push
scas
mov
rolb
xor
imul
sub
xchg
adc
cmp
rcr
dec
imul
add
mov
cld
stos
clc
aaa
shlb
aaa
jl
pop
ret
add
add
sub
idiv
jg
movsl
test
cmp
aad
in
stc
nop
jecxz
cmp
out
filds
ja
js
movsb
push
mov
imul
mov
mov
jge
out
push
sub
dec
pop
mov
push
dec
push
jbe
jmp
pusha
mov
push
cmp
dec
ss
in
out
ljmp
push
mov
pop
jbe
mov
inc
cmp
pusha
adcl
ret
xchg
fsubp
test
hlt
push
es
rolb
inc
push
stc
pop
xchg
xor
test
sbb
mov
inc
add
lods
roll
inc
dec
xor
pop
cmp
aad
sub
cmc
jecxz
mov
push
sbb
push
mov
int3
adcl
cld
nop
mov
lcall
mov
inc
jmp
mov
inc
push
mov
adc
ljmp
push
fwait
sbb
jno
mov
jmp
loopne
outsb
mov
push
cmpl
sbb
and
cld
pop
incl
mov
mov
xor
test
pop
dec
movsb
push
hlt
test
and
ss
mov
inc
cli
mov
mov
loope
mov
out
mov
insb
call
stc
adc
jle
and
loopne
push
gs
cmpsb
pop
push
or
add
decb
lahf
test
add
push
roll
xrelease
or
add
sbb
pop
mov
inc
jnp
push
adc
sub
insb
insb
or
add
adc
dec
lds
popf
jo
mov
pop
fsubrs
cmp
test
mov
mov
pop
push
jmp
and
mov
clc
jg
in
scas
ja
sbb
dec
in
scas
ds
mov
xor
mov
movsl
cltd
lret
xchg
out
mov
push
mov
xchg
ret
aad
sbb
inc
inc
lock
rolb
inc
inc
imul
test
mov
push
push
sbbl
jnp
cli
pop
sub
xor
outsb
shr
inc
mov
cld
jae
or
push
cmc
mov
mov
fldl
insb
xchg
rcl
lods
jge
stos
outsl
nop
lret
orl
sbb
inc
fnstsw
xchg
adc
icebp
mov
add
movsb
cmpsl
mov
aad
sbbl
jnp
sub
es
jne
mov
fimuls
or
dec
rolb
cld
shll
or
and
cld
movsl
jmp
lahf
mov
les
pop
cli
shrb
in
es
and
lret
aaa
lcall
and
inc
inc
ja
mov
pop
daa
loope
mov
fcom
mov
leave
movsb
shr
dec
stos
in
mov
popa
add
push
pop
mov
std
inc
dec
jb
xor
mull
xlat
mov
data16
and
test
dec
mov
ss
mov
add
pop
dec
xchg
stos
fildl
mov
fistpll
and
mov
in
xor
hlt
testb
in
lods
aas
or
sahf
fisubl
xor
ret
dec
mov
fadds
cs
movl
or
cmp
aaa
add
or
ss
lea
jge
das
rorl
mov
lds
ds
enter
imul
test
cmpsb
xchg
fildl
xchg
sahf
stos
in
pop
ljmp
mov
scas
cmc
jbe
cmpsl
xchg
inc
or
mov
fisttpl
jp
pop
ja
pop
sub
mov
mov
dec
pop
ss
mov
and
pop
add
push
sbb
add
add
dec
mov
jl
into
pop
mov
ljmp
jb
adc
fs
jne
adc
shl
mov
lea
mov
jno
jno
outsl
shr
scas
dec
mov
je
cmp
movsl
shll
adc
adc
adc
dec
add
stos
stc
add
mov
mov
inc
lahf
cmpsb
pushf
mov
add
test
test
loope
sti
pop
lods
or
adc
mov
and
jne
mov
adc
add
aaa
shlb
sub
shrb
or
mov
je
std
pusha
mov
leave
mov
out
sahf
xor
test
pop
push
and
pushl
pop
fldt
push
lods
push
repz
mov
fisttpl
jl
clc
mov
sub
lcall
mov
test
retw
xchg
jg
std
mov
nop
sbb
aam
adcb
mov
xchg
or
or
cmp
mov
mov
mov
fwait
les
es
sahf
jns
pop
hlt
sahf
test
cmc
lods
push
clc
nop
stos
push
sbb
imul
jle
mov
rcrb
jg
hlt
jp
ljmp
outsl
dec
mov
jo
movb
dec
daa
bound
or
jo
lahf
lret
adc
es
push
inc
dec
or
sub
cmc
pop
xor
es
lods
gs
jo
push
push
pop
sub
test
xchg
push
data16
jbe
pop
mov
dec
or
loope
jo
mov
cli
clc
addl
std
ret
jg
std
scas
xchg
jae
pop
mov
fwait
insl
mov
push
mov
cmp
mov
push
pop
sub
fmul
test
cld
mov
leave
xor
mov
adc
fldcw
aad
and
or
movsl
popf
mov
mov
jmp
daa
in
stos
std
sbb
in
mov
add
jne
std
mov
mov
loop
sti
je
lds
or
inc
sbb
adc
pand
fnstsw
sbb
pop
lret
lock
pop
imul
mov
in
ljmp
ret
div
inc
inc
and
push
xchg
mov
adc
jg
adc
loopne
data16
mov
cmp
ja
call
jnp
out
cs
rcrb
stos
mov
xchg
loope
sub
mov
fcompl
push
pop
in
push
mov
mov
xchg
or
mov
pop
mov
lods
aam
insl
ficoml
push
fimuls
sbb
push
mov
jge
mov
scas
add
mov
jge
mov
fsubr
stos
incl
inc
dec
jp
fisubs
and
cmp
roll
das
faddl
inc
pop
inc
movsb
push
sub
lods
mov
insl
insb
mov
jnp
imul
mov
in
fldt
loop
or
jo
sbb
sbb
push
fcom
xchg
and
cmp
pushl
stos
fs
inc
mov
mov
sbb
icebp
stos
and
rorb
add
push
sub
inc
adc
push
clc
insl
in
imul
jl
sahf
sub
and
out
xchg
add
sti
pop
pop
cmp
pop
iret
inc
int
xchg
lret
cmc
mov
mov
pushf
sub
push
test
mov
insl
or
loopne
mov
and
xchg
mov
call
mov
mov
les
outsl
insb
pop
cltd
dec
fstl
lcall
mov
jo
cmp
mov
dec
cli
mov
dec
popa
xchg
adc
ljmp
mov
xor
add
call
mov
push
pop
lea
gs
mov
ja
fcomi
shlb
adc
ret
sub
ljmp
lcall
scas
lock
push
mov
sbb
aas
sbb
push
xchg
pop
ljmp
fsubrs
dec
movsl
jbe
push
adc
jl
inc
push
mov
inc
push
popl
ja
clc
jbe
movsb
xlat
sahf
fildll
add
mov
repz
insb
loopne
add
pop
movsl
mov
in
rclb
fwait
xor
loopne
or
adc
and
and
jbe
sbb
dec
push
orl
mov
mov
adc
je
sub
sub
aaa
sarl
adc
aas
pop
lret
test
mov
hlt
xchg
loop
inc
cld
sbb
xchg
cltd
jecxz
rcrl
pop
aaa
mov
fstpt
pop
fistpll
jne
ret
dec
sub
or
inc
rcll
fdivrs
mov
inc
pusha
fs
adc
push
std
mov
inc
inc
or
push
xchg
aas
mov
mov
mov
loopne
or
js
jecxz
leave
cmpsb
mov
mov
je
lret
cli
cmc
xchg
out
pop
dec
fisttpll
mov
ret
ja
ret
dec
pop
cli
dec
mov
inc
xor
inc
xlat
scas
es
sub
push
sbb
jmp
adc
stos
dec
or
mov
xchg
cmp
push
dec
mov
xlat
cs
aaa
mov
loop
sbb
pop
lods
push
out
push
std
fistpll
aad
jno
leave
inc
cmp
inc
in
push
fnstsw
fnstsw
ret
ret
lret
imul
cwtl
pop
jmp
jl
sbb
inc
notl
push
xchg
lods
xor
lock
je
mov
mov
loopne
jle
pop
mov
sar
sub
jo
subb
push
test
inc
mov
clc
mov
movsl
add
mov
loop
das
jno
mov
ljmp
clc
shlb
addr16
pop
mov
loope
add
or
inc
aaa
fcompl
and
into
sbb
aad
shll
out
and
mov
add
dec
pop
and
loop
decb
cs
lock
in
sarl
out
fldl
jg
and
inc
mov
adc
jb
xor
mov
shlb
push
inc
fidivl
and
mov
popa
sti
scas
movsl
xchg
stos
lahf
cli
cli
cmp
mov
outsb
lds
cld
mov
shl
mov
icebp
lret
fbstp
sub
out
cld
push
insb
fs
popa
outsl
insb
push
pop
sub
mov
mov
test
cmpl
adc
mov
in
pop
imul
mov
orb
cmp
inc
xchg
and
push
out
loope
xchg
mov
js
ds
hlt
mov
imul
mov
js
pushf
fiadds
xor
mov
xlat
cmp
imul
add
incb
pop
cmc
aad
in
jg
mov
test
test
test
pop
adcl
jp
mov
lock
pop
mov
sub
dec
dec
iret
lret
jmp
push
outsb
adc
jecxz
andnps
sbb
inc
dec
push
mov
stos
jle
cmp
test
sub
icebp
inc
mov
xor
dec
test
or
mov
push
jecxz
fisttps
cmc
push
adc
pop
cmp
imul
loope
and
cmpl
xchg
adc
cmp
push
andb
ja
and
jmp
loop
lock
dec
xchg
cli
adc
ficoml
and
scas
rclb
add
jmp
inc
cmp
mov
sti
lock
mov
cltd
enter
lea
call
stos
stc
leave
ss
xchg
dec
outsl
add
xchg
pop
loope
pop
cmc
subb
add
dec
push
jl
test
or
cltd
shl
fisubrl
sub
aaa
int
ficompl
xor
fistps
mov
sbb
push
ja
sbb
adc
push
xchg
stc
pop
cltd
testb
rcll
lock
in
inc
push
and
int
aam
jge
or
push
pop
cmp
js
pop
cmp
mov
inc
xorl
xchg
int3
fldln2
test
call
sbb
push
sbb
pusha
dec
das
jo
inc
int
daa
adc
out
jbe
push
fwait
repz
push
aas
jno
sub
xlat
fwait
andb
add
adc
mov
mov
mov
mov
rolb
clc
icebp
sbb
mov
adc
fdiv
sub
or
cmp
inc
stos
or
out
ret
out
not
sbbl
int3
fwait
in
jmp
push
pop
jp
push
jns
fisttpl
pop
add
inc
inc
adc
adc
test
bound
xor
dec
mov
inc
loop
xor
mov
dec
push
pop
jl
mov
mov
mov
outsl
mov
in
leave
inc
push
pop
mov
fadd
xor
outsb
adc
dec
mov
xor
push
adc
mov
lods
and
inc
push
fst
xchg
mov
rolb
inc
rcl
pusha
and
idiv
push
or
shl
push
jp
cltd
xor
cmp
add
pushf
aaa
jg
nop
pop
outsl
roll
push
cmpsb
pushf
cmp
icebp
movsb
sahf
inc
addl
in
add
sub
push
pop
push
addr16
dec
xlat
bnd
xor
sbb
out
sbb
rorl
rolb
xchg
cld
or
jb
rclb
sbb
inc
das
pop
fidivl
movsl
pop
mov
sub
lods
mov
ret
mov
outsl
adc
aam
push
pop
cltd
jle
dec
into
leave
jle
cltd
stos
addr16
lods
call
xchg
daa
mov
xchg
pop
pop
shr
push
jmp
mov
and
mov
pop
cmp
xor
leave
sbb
pop
out
dec
add
pop
or
mov
jb
mov
icebp
mov
out
test
mov
pop
lea
mov
inc
aam
call
or
xchg
sbb
cwtl
mov
fsubrs
sbb
push
dec
mov
jg
mov
mov
fcmovbe
test
pop
cwtl
mov
mov
unpckhps
inc
sub
cmpsb
cmp
inc
xchg
aam
gs
ja
xlat
mov
ljmp
add
sub
xchg
sbb
fdivp
iret
jb
push
jle
sbb
and
syscall
mov
mov
incb
addr16
arpl
bswap
add
inc
popa
in
inc
mov
dec
adc
jo
test
or
dec
pusha
dec
or
out
xchg
add
mov
xor
inc
filds
mov
and
aas
sahf
aam
cmp
sbb
push
inc
sub
popa
mov
nop
add
jne
and
pop
fdivrs
lea
push
inc
popf
es
dec
or
ljmp
je
jbe
dec
adc
add
lock
mov
roll
sarl
add
clc
or
sbb
into
movsb
std
outsl
mov
popw
insl
imul
pop
aad
cmp
cmp
sbb
cmp
ret
push
pushf
sub
sub
mov
xchg
push
adc
in
cmovg
int3
fwait
sub
int3
push
mov
sbb
aaa
or
cmp
addr16
lds
insb
pop
out
les
mov
loope
add
adc
decb
sti
add
js
or
ljmp
mov
push
popa
sub
pop
xchg
inc
fcmovb
in
outsl
insl
stc
stos
jmp
shrl
mov
mov
dec
cli
clc
call
jo
fidivs
repnz
call
mov
mov
outsl
pop
push
dec
cmc
std
sub
sbb
lods
or
loope
fnstsw
ja
movb
fs
xchg
xor
xchg
sbb
fldln2
movsl
push
jmp
mov
mov
lcall
or
mov
cmp
inc
subl
movsb
xchg
dec
dec
lds
js
sub
push
inc
push
iret
test
cwtl
push
jb
sbb
push
clc
movsl
ds
jmp
jb
add
mov
cs
scas
outsl
xchg
mov
push
rcr
mov
aad
hlt
int
mov
jle
clc
movsb
addr16
nop
movsl
xor
dec
mov
mov
subl
lods
pop
cli
mov
lea
jne
mov
adc
mov
sbb
mov
sub
xchg
cmp
push
addb
mov
lods
fnstsw
rclb
or
imul
fstl
leave
mov
in
xor
xchg
ret
es
scas
outsb
cwtl
jb
sbb
cli
push
mov
mov
lods
dec
jo
outsb
sbb
lret
jmp
imul
outsb
mov
andl
test
in
loop
movsl
mov
jg
sub
inc
daa
movsb
sbb
mov
mov
sub
clc
ret
or
sbb
cld
out
stos
icebp
sbb
int3
pop
pop
sti
pop
mov
imul
fcomi
push
xchg
push
pop
outsl
jl
mov
out
xchg
or
mov
adc
mov
adc
outsl
dec
icebp
jno
subb
or
loopne
inc
es
push
jae
pushf
mov
rcrb
jno
pop
cmpsl
icebp
ficoms
dec
cltd
call
outsl
jp
mov
mov
fildll
dec
add
rol
hlt
or
mov
and
push
and
lret
push
jecxz
or
or
int
lock
ror
push
daa
jecxz
sub
pushf
es
popa
jl
xchg
jo
mov
cmp
in
divb
nop
or
mov
mov
aaa
loopne
cwtl
sbbb
mov
int3
jns
fistps
ss
jo
cmp
dec
and
shl
test
xchg
mov
jae,pn
pop
loopne
scas
fstps
and
push
push
xchg
xchg
mov
push
pop
or
jb
pop
adc
or
cltd
mov
shll
push
dec
adc
inc
pop
and
pop
nop
arpl
mov
or
sub
mov
adcl
clc
in
test
ret
sarb
jmp
les
jno
jb
xchg
or
aam
fcmovnu
jb
sub
imul
loopne
or
pop
out
loope
or
dec
test
add
xor
lea
daa
aam
jl
adc
outsb
fdivs
cmpl
pop
testl
out
sub
and
xor
jge
neg
push
mov
icebp
inc
int
aad
mov
rcr
int
test
mov
jbe
imul
push
fisttpl
xchg
mov
movsl
adc
cld
aaa
imul
mov
jl
incb
xorl
xchg
sub
xchg
jmp
dec
mov
ret
pop
xor
clc
inc
in
das
movsb
scas
adc
popa
and
test
outsb
outsl
or
aad
call
dec
dec
mov
inc
jg
hlt
movsb
jle
pop
movsb
stos
add
movsl
in
push
push
push
mov
inc
cmp
xchg
jg
cld
mov
mov
ret
sti
out
das
scas
cwtl
adc
cmpsb
pop
pop
popa
and
xor
jbe
arpl
aas
mov
mov
add
xchg
xor
stos
sub
pop
fidivl
mov
and
clc
out
bound
jl
mov
push
pop
pop
outsl
clc
pusha
mov
ja
pop
add
loop
mov
jne
ss
sbb
jecxz
or
test
add
add
dec
add
out
test
push
je
or
xor
mov
cmp
xchg
call
mov
jnp
sub
xchg
test
or
std
mov
xchg
or
mov
test
rclb
and
and
addl
mov
daa
dec
lock
inc
xchg
test
push
jle
das
scas
pushf
mov
xchg
jmp
sub
movsl
mov
mov
aaa
aam
lret
sub
addr16
dec
js
cmc
mov
adc
sub
and
cmp
mov
inc
sar
dec
popl
jecxz
push
xor
cld
mov
cmp
cmpsl
pop
xor
mov
in
and
add
mov
aaa
dec
fmulp
push
xchg
jle
imulb
pop
inc
arpl
ljmp
jno
push
repnz
addr16
bound
adc
sub
dec
loope
xlat
test
inc
push
loopne
push
sub
in
test
incl
ljmp
clc
push
and
in
into
mov
sbbl
dec
cli
shrb
ja
outsl
test
push
out
inc
scas
add
jbe
decl
mov
xor
inc
jo
or
xchg
movsl
push
xchg
cwtl
clc
stc
jg
xchg
leave
jg
repnz
jbe
lea
and
adc
dec
out
popf
stos
mov
fsubs
loopne
fsubr
inc
into
shl
rclb
into
mov
xchg
sub
ss
mov
sbb
js
imul
push
std
rcll
add
pop
dec
add
out
sbb
push
inc
test
ljmp
push
in
lods
cmp
cmpsl
jb
addb
cli
sub
xchg
fildll
xor
pushf
pop
les
mov
test
jnp
add
sub
mov
push
out
and
je
fsubr
in
push
movsb
cltd
adc
dec
inc
out
fsts
fld
clc
bound
idivb
mov
test
in
cmpsl
jbe
or
xor
ja
ret
xchg
push
jbe
insb
sub
mov
xchg
xchg
dec
adc
fcmovnu
aaa
cs
fwait
ss
push
test
sub
cmc
mov
ret
pop
lret
movsb
jl
ret
sbbl
in
jecxz
adc
dec
cmpsl
push
cli
lea
xor
repnz
mov
jnp
das
andb
pop
sbb
loopne
imul
mov
jno
fistpl
sbb
mov
xor
xor
push
aaa
mov
mov
xor
ja
fcmovnu
sbb
cltd
aas
mov
bound
xchg
add
pop
stc
ss
inc
lods
or
subl
mov
stos
cs
jns
fbld
jecxz
dec
inc
ss
and
sti
mov
push
aaa
push
xor
mov
hlt
movb
push
mov
icebp
ja
adc
mov
add
lds
mov
or
mov
popa
dec
jno
pop
idivb
mov
rorl
lret
and
nop
insb
outsl
stc
dec
enter
push
lea
xor
xor
subl
add
pop
dec
mov
rolb
test
or
inc
sbb
mov
and
inc
fcmovb
ret
push
inc
pop
movsl
pusha
lods
dec
mov
movsl
pop
cmp
pop
fcmovb
lods
mov
mov
pop
pop
dec
mov
outsl
pop
fsubs
insb
jl
add
push
mov
scas
fwait
enter
push
adc
cmc
clc
add
stos
loopne
jg
popfw
or
mov
mov
and
cmp
icebp
and
frstor
push
inc
inc
fwait
dec
sbb
xchg
jo
mov
jbe
add
pop
xchg
and
ffree
pushl
adc
dec
hlt
cmp
lods
icebp
mov
lock
xchg
dec
jno
hlt
lods
fidivrs
jge
dec
scas
in
je
push
pop
pop
sbb
sbb
dec
and
mov
fwait
imul
flds
jl
xor
sub
sub
xchg
cli
mov
fimuls
arpl
mov
outsb
outsl
sub
jae
jb
icebp
rcrb
fdivrs
adc
popa
push
scas
mov
pop
mov
cli
mov
fidivl
push
or
idiv
shll
jmp
mov
mov
xor
imul
cli
jnp
and
cmp
mov
sub
cmp
ljmp
cmc
jecxz
cmp
xorl
sbb
mov
fildl
icebp
mov
orb
xchg
jg
cld
int
rolb
mov
add
out
fdivrl
clc
or
mov
cmp
push
insl
pop
adc
rorb
lds
push
jo
sub
pusha
pop
cmc
pop
loopne
repz
js
fwait
inc
insl
rcll
jo
push
das
dec
cld
outsl
xchg
or
xchg
ds
add
sub
mov
add
adc
rcll
fildll
jl
adc
xchg
push
jmp
xor
lods
adc
cmp
adcb
cmp
and
clts
adc
lock
sbb
pop
sbb
das
cmp
xchg
dec
hlt
mov
ffreep
ret
pop
jo
add
add
out
cmp
dec
push
mov
and
idivb
sti
sbb
xor
mov
inc
jmp
push
push
inc
pop
push
insb
mov
cltd
sti
pop
nop
filds
sbb
dec
mov
dec
mov
push
fists
mov
aad
in
aaa
call
and
push
dec
cmp
push
stos
and
aam
push
jge
mov
adc
mov
cmpsb
push
pop
and
push
add
push
push
pop
sbb
rcll
outsb
and
cwtl
mov
gs
mov
xor
push
je
pop
stos
push
inc
lods
or
ret
andb
sahf
std
nop
jg
sub
ja
aas
ds
add
mov
push
bound
xchg
aaa
stos
mov
or
outsl
adc
mov
js
mov
push
sbb
mov
fmuls
out
pop
push
mov
imul
jae
push
mov
or
aaa
pop
jl
popf
ja
jecxz
dec
mov
flds
sbb
push
or
je
faddp
inc
adc
dec
pusha
addb
movl
data16
out
dec
dec
rcll
loop
push
or
dec
push
mov
addr16
mov
adc
mov
or
sbb
les
mov
xlat
test
std
xor
push
jge
std
fcmove
cltd
sbb
pusha
xlat
enter
outsl
add
dec
dec
pushf
xor
loop
dec
xor
test
pop
push
xor
lcall
call
xor
jp
mov
shrl
jno
mov
jecxz
cmp
sub
push
test
negb
push
inc
sbb
rol
in
scas
mov
shrb
add
xchg
xchg
icebp
xor
call
mov
sub
mov
push
iret
imul
pop
ss
shlb
jbe
xchg
push
xor
das
xchg
ficoml
pop
cmp
sub
hlt
jmp
mov
adcl
and
adc
pusha
je
mov
inc
cld
lds
neg
jle
lcall
enter
das
rcr
add
cmp
enter
jecxz
mov
bound
mov
pushw
sub
pop
jbe
mov
dec
fiadds
incl
pop
jg
shrb
lcall
sbb
inc
or
aas
mov
fidivl
mov
and
mov
xchg
aaa
or
sarb
xchg
sar
inc
jl
push
mov
adc
jg
or
mov
cmp
outsb
mov
into
pop
inc
pop
rcr
jecxz
add
mov
mov
aam
shr
bound
jl
push
mov
xchg
in
jp
mov
push
jl
mov
outsl
sub
or
gs
clc
out
sbb
negb
imul
stos
inc
in
outsl
rclb
add
test
adc
adc
pop
push
aam
and
jge
gs
sbb
add
jnp
push
cli
fwait
out
push
jne
or
mov
jge
sarl
or
movsl
js
scas
cmp
shlb
sub
test
mov
outsb
pop
inc
mov
mov
cltd
clc
or
bound
lods
mov
sbb
inc
jno
cld
cmp
lods
xor
dec
sbb
cli
cmp
mov
rorl
adc
push
cwtl
pop
jns
add
les
call
and
repz
mov
rcr
xchg
imul
andl
ret
xor
pop
jo
fistpl
into
lock
addr16
and
mov
push
mov
into
jno
pop
and
mov
call
push
add
mov
out
cmc
es
leave
fwait
mov
imull
jle
in
int
insl
and
push
mov
mov
or
adc
arpl
dec
mov
or
test
call
jl
stc
fsubrs
in
adc
or
push
mov
push
ja
inc
xchg
imul
inc
shl
push
pop
cmp
outsl
clc
ret
push
or
sahf
sahf
sbb
sbb
and
jb
or
jecxz
pop
sbbb
or
push
jecxz
adc
mov
pop
add
shrl
out
and
push
loop
or
shufps
adc
jge
jmp
out
and
xchg
nop
xlat
xchg
adc
pop
and
mov
pushf
xor
mov
imul
mov
mov
loop
inc
enter
jg
mov
icebp
and
and
icebp
xor
and
jge
adc
sub
mov
sbb
int
jmp
int3
sub
aas
inc
mov
sti
mov
jno
ret
jb
pop
push
scas
outsb
idivl
sub
push
mov
sub
dec
dec
xchg
mov
pop
call
in
and
insb
js
mov
shrb
xchg
or
push
jns
mov
cmpsb
adc
ret
pop
and
mov
sub
adc
mov
pop
jl
lock
jg
idiv
dec
dec
xor
loop
sub
lret
sbb
cmp
dec
scas
int3
shlb
sbb
push
sbb
and
je
ss
push
lret
shrl
clc
shlb
mov
add
inc
inc
in
das
or
into
xor
lret
jne
out
push
xlat
adc
dec
adc
aaa
mov
pop
jge
mov
cmp
mov
push
fldcw
mov
add
pop
js
mov
dec
cmp
hlt
mov
inc
adc
jecxz
repz
andl
push
mov
inc
sbb
sbb
sub
movb
std
in
rorl
and
mov
jl
mov
push
sti
es
xchg
mov
shrb
pop
mov
jg
fistpl
insl
inc
adc
jle
outsb
add
xchg
scas
pop
jo
mov
mov
xchg
jge
fidivrl
cmp
mov
cld
inc
jb
mov
and
sbb
dec
sti
stos
add
testb
repnz
rolb
paddb
andb
nop
dec
mov
xchg
and
mov
jne
mov
movsw
in
push
sbb
cmp
int3
xor
mov
cmp
popa
sub
adc
repz
mov
jo
mov
hlt
jns
and
jg
sti
data16
push
out
or
test
loopne
dec
dec
pop
addb
mov
pop
mov
xor
xchg
stos
cld
jg
inc
jg
mov
adc
adc
sbb
in
mov
push
jl
sub
movsl
dec
cmc
in
je
fs
dec
test
inc
adc
mov
xor
outsl
and
jne
out
out
push
std
mov
ljmp
and
mov
arpl
aam
scas
sub
cmp
lds
mov
and
sbb
sub
adc
and
lods
jbe
mov
xor
mov
xchg
sub
faddp
add
adc
jmp
inc
or
cmpsl
insl
mov
cmp
lcall
cli
xchg
arpl
repnz
mov
pop
push
cmp
aam
add
jo
pop
aas
pop
fs
pop
fdivrl
hlt
arpl
pop
and
cld
xchg
jns
jb
xchg
mov
adc
and
fisubrs
insb
jg
cmpsl
je
sbb
pop
out
mov
sbb
xchg
clc
aas
add
mov
fwait
dec
xchg
insl
aam
push
pop
mov
push
pop
inc
add
std
push
xchg
scas
data16
push
mov
add
repz
sub
sub
cmpsl
adc
std
mov
push
test
adc
stc
pop
pop
jno
push
pop
jp
mov
cltd
mov
out
leave
scas
cmp
mov
push
arpl
xor
cmp
lea
movsl
or
dec
ds
mov
loop
push
xchg
add
jp
cmpsl
stos
sub
cmp
xchg
hlt
inc
jae
mov
test
jg
mov
fisttps
cmp
mov
sbb
add
jmp
and
mov
ret
push
lds
pop
das
inc
sbb
or
loope
cmp
jecxz
or
mov
adc
das
push
loopne
pop
sub
pop
pusha
mov
jnp
orb
add
out
sbb
sti
jmp
pop
clc
cmp
sub
mov
push
movsl
mov
leave
inc
stos
rcl
nop
add
adc
insl
fwait
outsl
xor
xor
mov
test
mov
lcall
dec
gs
into
pop
test
outsl
mov
in
mov
sbb
push
scas
loope
push
jbe
daa
mov
xor
mov
test
sub
jae
mov
sbb
xchg
inc
xchg
add
data16
jp
jne
mov
fcmovnb
outsb
pop
jmp
jle
and
dec
idiv
test
adc
cmpsb
xchg
fs
pop
setg
or
jno
jg
rcll
mov
dec
mov
and
push
push
push
subl
test
push
aaa
lods
push
add
arpl
sti
test
push
dec
cmc
or
or
scas
rcr
xchg
inc
xchg
fisttpl
aaa
cld
sub
dec
arpl
push
cli
mov
incl
scas
jp
cs
jp
sub
cmp
rclb
incl
pop
mov
xchg
cmp
push
ljmp
mov
dec
and
dec
in
cs
stos
mov
adc
push
int
ret
faddp
pop
hlt
les
test
loopne
mov
sub
int
push
and
cli
lods
lock
cmp
push
cltd
cwtl
add
ljmp
add
adc
push
jnp
scas
push
fstpl
fsubrs
xor
std
test
ret
adc
icebp
sbb
popa
repnz
sarb
popa
scas
adc
xchg
pop
aad
inc
fwait
jle
std
or
stos
push
adc
mov
repz
add
lods
loopne
cmc
clc
ja
inc
pop
addb
or
add
inc
mov
test
add
inc
pop
hlt
das
mov
mov
inc
fcom
add
nop
cmpl
lret
xlat
adc
sub
stos
cwtl
lods
mov
nop
add
sti
and
stc
les
ss
pop
inc
adc
mov
jmp
lea
dec
jmp
lret
adc
loopne
out
rcl
ljmp
adc
aas
aad
andl
mov
xor
inc
jno
inc
test
jecxz
jge
mov
aam
pop
mov
jmp
or
out
xor
xor
xor
test
out
mov
adc
sti
stos
push
mov
int3
or
jp
pop
movsb
dec
jmp
xorl
fcom
push
ja
insl
scas
pop
mov
out
out
sahf
xchg
xchg
js
mov
lcall
or
clc
adc
aas
xchg
xor
and
push
push
fwait
or
scas
fdivr
add
sub
pop
aam
sbbl
mov
xchg
js
push
ret
inc
pop
shlb
cli
push
call
decl
jmp
jb
sub
push
mov
or
imul
jo
inc
pop
sbb
loope
je
push
in
sahf
stos
push
mov
pop
in
ljmp
add
and
mov
mov
aaa
in
mov
callw
cmp
cmpsl
adc
add
adcb
push
adc
mov
nop
fcmovnu
push
fcoml
lods
cli
sbb
js
fimull
aaa
sub
aam
arpl
aas
push
cmp
pop
sbb
sub
movups
jle
insl
push
sub
mov
loop
push
adc
pop
adc
lea
lea
pop
push
fcompl
xor
in
add
lcall
pop
add
push
adc
jno
pop
cmp
add
scas
pushf
dec
cmp
lret
cmc
jb
and
add
es
and
hlt
stos
pop
mov
pop
repnz
outsb
push
fs
push
std
stos
out
xor
and
dec
or
nop
jle
sbbl
mov
cld
add
lods
dec
sub
sahf
or
add
jbe
test
push
pusha
arpl
lods
inc
fistl
push
inc
xchg
imul
mov
adc
push
or
pop
jp
insl
int
lock
push
divl
out
mov
out
lods
add
aas
in
cmp
fbld
push
and
dec
es
jne
dec
inc
cmp
add
clc
add
add
loop
scas
inc
jg
leave
pop
fstpl
mov
pop
cmpb
mov
xor
push
xlat
pop
dec
dec
push
fisttpll
add
push
ret
cli
jmp
int3
cmc
cmc
and
and
push
jns
adc
ret
fsubrs
jbe
fisttpl
inc
mov
outsl
xor
mov
push
mov
sbb
pop
pusha
sti
mov
lcall
pop
pop
sbb
push
xchg
cs
or
test
mov
adc
jmp
test
and
push
jecxz
movb
pop
mov
mov
and
mov
fildll
xchg
leave
lret
adc
and
aaa
aaa
out
cmp
nop
mov
mov
dec
push
inc
pop
and
push
aad
adc
das
mov
mov
test
or
mov
mov
mov
jae
jo
and
loopne
cmpl
mov
movsl
pop
dec
in
aas
enter
rcrb
fnsave
decb
xchg
xor
es
ror
in
cmp
mov
pop
fadds
aas
in
cmp
sbb
das
ror
outsl
pop
add
sub
jo
add
add
jp
out
pop
mov
jge
and
inc
stos
ret
mov
and
push
scas
idiv
jb
test
pop
mov
xchg
mov
lcall
sub
push
xchg
sub
sbb
jne
je
mov
sub
mov
mov
mov
fstl
call
mov
mov
jne
rorl
loopne
stos
mov
in
sbb
push
inc
mov
out
push
xor
xor
adc
lods
stos
or
mov
add
mov
in
mov
test
repz
xchg
jbe
roll
stos
stos
jno
mov
and
or
or
dec
jmp
in
in
or
and
lret
js,pn
or
and
cmp
iret
test
push
sahf
inc
mov
add
adc
out
cmpb
shll
mov
mov
lret
lock
adc
dec
fldl
pushl
loop
lahf
sbb
add
push
in
addl
in
mov
and
mov
rorb
nop
mov
incb
pop
pop
or
adcl
mov
pop
sub
adc
mov
add
mov
adc
int
pushf
jl
fistpl
enter
jo
push
test
pop
mov
mov
mov
mov
aaa
sbb
sbb
pop
pop
mov
jne
in
push
xchg
inc
adc
add
ret
pop
push
enter
xchg
mov
outsl
add
sbb
insb
iret
int
xchg
sbb
loope
sub
mov
mov
jge
movb
aam
ret
mov
std
pop
add
mov
aam
imul
das
insb
pop
push
popa
sub
imul
lock
or
pushf
sub
cwtl
mov
dec
lea
loopne
lods
daa
out
stos
push
add
push
test
cmc
outsl
stos
jp
outsl
iret
push
adc
sbb
push
jge
loopne
jge
loopne
fisttpll
sbbb
xor
adc
push
mov
and
mov
jnp
call
add
notb
fldl
jge
mov
aaa
lret
or
shrb
pop
xchg
aaa
sbb
fdivr
into
add
push
ss
inc
repz
les
das
mov
push
inc
pop
mov
push
or
jp
and
aad
cmpb
push
pop
push
mov
push
mov
sub
sub
shrl
xchg
mov
std
adc
repnz
pop
pop
rcl
lret
leave
sbb
shll
addr16
movsb
andb
aam
test
fs
shl
in
add
add
es
adcb
mov
outsb
dec
mov
or
and
or
daa
dec
pusha
cmp
in
ss
fisttpll
adc
jbe
adc
xchg
nop
cmp
fiaddl
mov
pop
pop
pop
loope
add
mov
gs
mov
mov
sbb
mov
mov
call
popa
and
loope
stc
int3
into
lds
in
inc
or
shrl
pushf
or
lds
test
scas
cmp
pop
mov
sub
mov
xorb
fistpll
frstor
rcll
push
dec
and
movsl
and
shl
inc
out
rolb
rolb
mov
cmp
loop
rcrb
js
incb
inc
out
fdiv
out
lods
inc
sbb
push
sti
mov
mov
cmp
shlb
ucomiss
sbb
clc
out
stos
orl
push
dec
enter
mov
mov
int
scas
fildl
in
push
icebp
inc
dec
shrb
mov
je
xor
mov
out
jo
add
lea
shrb
aam
rcrl
xlat
aam
add
pop
loope
out
jg
fldcw
test
shlb
mov
ret
mov
inc
xlat
repnz
andl
xchg
or
mov
je
hlt
pop
lock
jmp
adc
das
cmpsb
jecxz
sub
pop
sub
mov
rorl
push
sbb
mov
nop
testl
nop
dec
cwtl
lret
mov
mov
subb
mov
mov
rcl
shlb
or
loopne
add
out
add
lcall
dec
adc
movsb
hlt
insb
mov
or
or
dec
hlt
jo
sbb
pop
mov
cld
dec
lods
imul
sbb
insl
test
inc
stos
push
into
push
cmc
outsl
sub
fldcw
aaa
sbb
mov
mov
pop
dec
cmp
rol
mov
test
xchg
ss
dec
add
pushl
rclb
cmp
testl
xchg
nop
sub
dec
ret
mov
sub
sbbl
sbb
adc
pop
sub
daa
adc
jne
icebp
mov
stos
push
add
fstpt
popa
out
icebp
mov
cmp
pop
push
mov
pop
scas
pop
into
xchg
pushf
lea
pop
mov
add
pusha
pop
scas
push
mov
lock
add
cli
mov
inc
dec
roll
or
popf
add
add
push
test
jno
jge
xor
aad
incb
add
stos
adc
jo
call
or
pushf
stc
and
aam
inc
push
in
je
adc
ret
repnz
mov
cmp
mov
or
inc
lret
shl
repz
nop
sub
adc
test
pop
xor
js
std
mov
mov
addl
mov
and
inc
jb
push
shl
push
xchg
aam
xchg
aad
arpl
or
data16
cli
mov
sub
movsl
dec
imul
imul
adc
sub
mov
outsl
mov
mov
pop
add
and
nop
push
xchg
das
std
outsl
adc
roll
adc
sub
pop
mov
pop
or
test
and
sub
mov
mov
mov
pop
clc
lahf
das
int3
xchg
push
add
inc
push
push
cltd
inc
mov
loopne
fists
or
xor
mov
shlb
sti
mov
mov
mov
in
add
pusha
inc
stos
mov
stos
ret
dec
mov
xchg
aad
jl
mov
fimuls
addb
aas
jne
scas
add
jge
ud0
sbb
add
xchg
sar
mov
xchg
or
adc
ss
sbb
push
sbb
jb
jno
mov
jl
hlt
sub
mov
movsb
push
das
sbb
je
xchg
cmpsb
jnp
test
mov
insb
jle
mov
int3
adc
loopne
stc
outsl
jl
in
cs
cmc
lods
or
in
testl
sbb
mov
js
test
pop
add
jo
mov
adc
mov
inc
and
sbb
pop
imul
mov
pop
mov
dec
outsb
push
sbb
scas
push
jg
insl
xchg
mov
loope
dec
jge
nop
nop
or
outsb
vmaxss
sbb
dec
add
movsb
cltd
add
or
cmp
mov
insl
and
mov
outsl
stos
pop
mov
sub
test
cmp
pushf
push
in
push
push
pop
xchg
out
and
xorl
xor
push
or
testl
std
mov
sbb
scas
push
inc
es
mov
sbb
ja
nop
and
cmp
adc
and
mov
ret
cli
add
cli
jle
inc
inc
popf
ret
inc
and
jmp
in
daa
push
jge
movsl
outsb
jge
sbb
cmp
xlat
mov
cmc
xor
aaa
mov
std
xchg
pop
sbb
xchg
dec
lret
icebp
mov
mov
mov
stc
and
push
jo
fldt
ror
je
cmp
pop
cmp
sbb
shrb
jne
aad
lcall
inc
push
hlt
ret
out
mov
inc
adc
out
lea
addr16
jle
jno
mov
inc
pop
pop
inc
imul
dec
inc
mov
adcb
std
push
scas
pop
pop
add
dec
jb
pop
shll
call
sbb
cmpb
rcrl
xor
adc
add
pushf
dec
jg
or
and
or
mov
mov
sti
dec
ja
jb
sahf
outsb
popa
push
mov
xchg
inc
mov
jecxz
mov
data16
jge
xchg
lds
shlb
into
stos
adc
shlb
jnp
pop
js
pop
jbe
ljmp
inc
in
out
ds
jns
and
pop
cmp
xorl
outsl
std
movsb
xchg
lds
mov
dec
adc
inc
adc
mov
cmc
mov
imul
cld
dec
push
outsl
aas
adc
leave
movsl
sub
pop
jne
fmull
pushl
repz
movsb
pop
mov
sub
das
cmp
loopne
inc
cwtl
lret
pop
xchg
hlt
es
adc
or
pop
jp
clc
add
mov
sbb
inc
cmpsb
sub
mov
or
sbb
and
jbe
ljmp
sub
aaa
pusha
mov
fisttps
adc
rclb
xchg
mov
inc
popf
mov
mov
xor
cmp
sbb
sub
jmp
jne
ret
out
add
jp
pop
lock
mov
push
or
jle
add
lret
push
push
int
in
add
je
das
pop
mov
test
mov
push
stos
mov
and
pop
add
push
jge
insl
xlat
lret
push
movsl
shlb
dec
and
mov
mov
iret
jne
enter
repz
je
inc
xchg
sub
inc
icebp
ja
xchg
negb
add
adc
arpl
jo
xor
ret
xor
inc
jle
inc
sahf
push
mov
jp
push
lock
dec
push
push
movsl
fimuls
cmp
ret
xchg
pop
gs
mov
cmc
cmpsb
ret
rolb
test
mov
sbb
cmp
pop
sbb
testb
and
push
enter
and
in
sbb
dec
lcall
jnp
cmp
xchg
shl
add
jge
in
pop
add
gs
ljmp
sub
inc
pop
stos
in
rolb
mov
jmp
in
mov
mov
dec
sub
jbe
call
jno
adc
jle
add
imul
les
push
dec
add
std
mov
pop
mov
sbb
dec
sbb
or
shr
imul
test
add
loopne
fs
sbb
mov
mov
sub
push
shl
test
add
or
add
adc
fistl
cmp
mov
fistpll
push
xchg
and
jge
test
push
adc
jmp
clc
add
push
dec
popf
in
jno
sub
aam
pusha
xor
and
mov
dec
sub
push
mov
xor
add
repnz
mov
dec
mov
ret
stos
or
movsb
jbe
std
pop
fdiv
add
dec
fidivrl
enter
push
mov
mov
cmp
mov
ja
cs
inc
mov
fistpl
pushf
push
int
jno
inc
cmc
sbb
int3
mov
lock
imul
in
fcmovne
xchg
sub
xchg
les
dec
pop
cmp
test
sti
sbb
les
stos
add
rcr
jbe
push
orl
jo
movsb
aas
out
or
test
mov
push
imul
cld
push
out
loopne
mov
or
add
out
scas
fidivrs
loop
mov
addl
push
add
xchg
aas
sub
fldcw
jg
mov
call
sub
jg
insl
cmc
dec
das
js
ss
or
daa
fistpl
or
sub
pop
sub
inc
add
pushf
add
fidivs
push
dec
or
cmpsl
mov
das
push
rcrb
mov
push
pusha
test
adc
stos
scas
call
shrl
jmp
adc
enter
sub
ret
mov
jl
adc
fs
call
mov
sbb
call
jno
xor
imulb
dec
leave
popf
sarl
add
mov
loopne
aas
jnp
inc
adc
icebp
mov
dec
cwtl
xor
cmp
push
sub
popa
dec
mov
icebp
jge
push
cld
rcrl
ljmp
mov
jne
lcall
jo
add
mov
cmp
dec
data16
adc
es
subl
inc
jbe
lds
dec
jmp
shr
adc
jmp
into
xchg
adc
pop
mov
add
cwtl
mov
push
fst
inc
jae
jmp
sub
ss
pop
lret
out
mov
mov
shll
in
not
or
xchg
cwtl
jno
push
hlt
in
xchg
psubsw
mov
push
arpl
stos
sbbl
pushf
push
pop
pop
insb
cld
pop
negb
lea
mov
roll
mov
pop
mov
sbb
mov
cld
xchg
ss
testb
mov
or
xorb
aam
ret
hlt
mov
push
loop
jl
cmp
jo
mov
and
xor
pop
test
subl
adc
jo
mov
dec
or
or
sbb
adc
inc
mov
push
inc
icebp
mov
es
cmpsb
cmp
js
mov
xor
sbb
or
lea
lcall
or
cmc
outsl
mov
inc
jb
cmp
jg
cs
cmp
push
xor
divb
ficomps
arpl
loop
in
fs
pop
push
cmpsb
pop
lcall
xchg
adc
faddl
dec
mov
sbb
mov
data16
mov
inc
out
outsl
loopne
clc
xchg
mov
andl
hlt
push
jl
mull
or
stc
pop
adc
andl
cld
enter
fcoms
hlt
jmp
mov
and
dec
rol
mov
mov
sbb
cmc
inc
mov
stc
cmp
sbb
sbb
in
inc
std
fucomi
jl
push
shlb
popf
push
test
imul
adc
movsl
pop
outsl
test
jmp
xchg
adc
inc
shl
dec
lods
je
adc
cli
test
cmp
mov
stos
mov
pop
in
in
xor
and
xor
out
mov
movsl
jp
int
fstpl
test
decb
cmpsb
hlt
ret
vpminsw
jno
incl
mov
inc
call
cmp
lds
imul
int3
std
ficoms
sbb
adc
out
mov
aam
cmp
pusha
push
nop
dec
cmp
add
adc
adc
dec
pop
pushf
test
inc
jno
mov
jbe
insl
push
mov
lret
lcall
or
sbb
xchg
scas
les
xchg
cmc
daa
xor
dec
mov
subl
adc
ds
cmp
mov
pop
or
movsl
outsl
scas
test
or
jno
mov
and
xchg
sbb
test
mov
sub
xchg
cmpsb
cwtl
mov
pop
outsb
cmp
lds
push
ljmp
jno
pop
xor
idivb
rcl
not
adc
xorb
std
jae
sbb
ljmp
cs
lret
adc
out
andb
stos
dec
jmp
push
bound
test
push
xchg
mov
into
sbb
std
lods
clc
or
out
lcall
push
in
jns
pop
mov
stos
std
dec
dec
mov
sarb
dec
inc
push
cli
inc
incb
mov
push
pop
cmpb
fsubrl
and
dec
inc
mov
jg
loopne
roll
lcall
push
js
cwtl
nop
mov
icebp
inc
and
mov
inc
gs
sbb
xchg
in
add
jae
mov
add
inc
cmc
push
push
fisttps
in
pop
sub
xchg
test
xchg
ss
jno
or
push
and
loopne
dec
cmpsl
outsl
lock
inc
shl
out
roll
push
lock
test
xchg
cli
mov
inc
call
push
or
call
cld
out
lods
out
ucomiss
and
cmpsb
rolb
and
aad
outsl
cmc
int3
mov
int3
iret
xor
sbb
mov
or
or
sbb
leave
arpl
mul
xchg
clc
dec
pop
mov
lret
push
nop
sarb
add
sbb
push
jecxz
out
inc
shlb
popa
xor
rclb
pop
inc
inc
or
mov
mov
enter
and
or
cmp
xchg
pushf
jle
in
or
cmp
inc
insl
mov
out
adc
cmp
pop
loop
mov
mov
fidivl
xor
andb
movsb
adc
call
and
mov
jp
dec
mov
sub
fistpl
mov
cmc
std
adc
insl
dec
fists
pusha
inc
xor
inc
pop
mov
inc
jbe
jno
fcmovbe
subb
clc
mov
xor
push
cmp
sbb
adc
inc
inc
cmp
mov
dec
shrl
mov
xchg
xchg
xchg
mov
enter
out
cmp
ljmp
shrb
cld
shrb
bound
call
pusha
jecxz
inc
test
comiss
xor
and
call
fwait
sub
sbb
test
clc
js
out
cmp
xor
sbb
insl
enter
fcmovnu
cmpsb
mov
pop
in
pop
dec
mov
and
push
dec
and
push
fnop
sahf
imul
jmp
imul
mov
clc
arpl
and
pop
cmp
sarl
clc
das
xchg
repnz
mov
mov
xor
cltd
jbe
or
dec
add
outsl
movsb
in
jb
inc
add
rclb
js
or
shl
xchg
clc
in
loope
cmp
sub
add
subb
inc
ljmp
cmp
add
je
inc
aas
mov
or
jb
mov
pop
nop
ss
jg
jno
ljmp
inc
imul
out
sbb
add
sti
lcall
mov
ds
mov
aam
je
ja
xor
cmp
ljmp
dec
cs
sbb
fiadds
repnz
andb
mov
dec
outsl
push
lahf
in
inc
sub
push
fcompl
inc
lods
or
movsb
xchg
inc
push
jle
sbbb
mov
and
pop
pop
fisttpll
repz
loope
jl
jecxz
cmp
test
data16
in
ffreep
adcl
and
or
lods
sub
fwait
dec
sysenter
arpl
jecxz
jge
daa
leave
push
push
aam
dec
adc
lea
push
insl
ja
js
push
jb
jbe
mov
call
xor
add
cwtl
and
inc
dec
outsl
mov
std
sbb
mov
mov
es
mov
xor
and
push
push
fldt
stos
dec
imul
ret
mov
je
std
sbb
pop
cmp
xor
jo
fimull
mov
int3
std
movsl
xlat
movsl
bound
xlat
xlat
stos
or
insb
jno
stc
cmpsb
mov
or
bound
jmp
cwtl
stos
dec
and
ret
dec
jmp
pop
mov
test
stos
sbb
xor
dec
scas
cmpsl
jecxz
shlb
jbe
dec
loopne
mov
stos
or
nop
xchg
xorl
mov
mov
xchg
pop
movsb
or
or
push
cmp
lock
and
cs
jnp
out
in
sub
xchg
mov
stos
cltd
les
loopne
mov
loop
mov
popa
mov
pushf
frstor
int
mov
pop
ret
push
xchg
in
xchg
lock
mov
mov
addr16
sbb
add
mov
stc
xchg
rcr
outsl
das
cld
sbb
call
jp
imul
xor
jg
arpl
inc
or
lret
movsl
sbb
pop
call
addb
cs
xor
dec
mov
decb
jmp
sbb
push
imul
xchg
mov
mov
mov
inc
nop
adc
imul
enter
imul
pop
add
and
push
test
jbe
in
cli
rclb
das
cmp
cltd
mov
jge
inc
xchg
sbb
das
cmpsb
jl
mov
pushf
xchg
jns
jnp
xchg
mov
cli
add
and
movsb
inc
lods
pop
or
mov
jl
rcrl
inc
xchg
mov
ljmp
lods
mov
xchg
dec
adc
aas
test
mov
xorb
adc
and
mov
add
sahf
push
lret
or
test
cmpsb
push
mov
push
or
js
clc
and
test
xor
loope
pop
inc
sti
fistpll
mov
and
lock
decl
and
sub
adc
push
push
mov
xor
add
pop
icebp
mov
adc
mov
dec
in
pushf
jge
dec
mov
fbstp
pop
adc
dec
mov
mov
out
inc
inc
jle
sub
push
ret
mov
and
pop
cli
add
dec
or
out
push
mov
push
sub
dec
int3
dec
dec
push
sub
inc
out
inc
cld
test
ljmp
popa
and
loopne
test
sbb
mov
jne
adc
and
hlt
cmp
pushf
ds
xchg
imul
or
lahf
popa
add
lods
xor
test
dec
mov
cld
xchg
mov
lret
push
cmpsb
mov
stos
shl
push
pop
jnp
mov
push
shlb
push
mov
adc
sub
bound
add
aas
sub
outsl
xor
pusha
push
out
and
jnp
pop
cwtl
movsl
mov
or
xchg
push
inc
mov
and
xchg
xchg
cmp
fisttpl
and
cli
inc
arpl
jo
hlt
mov
mov
inc
ss
arpl
mov
mov
adc
lret
idivb
out
mov
sub
mov
jnp
and
xchg
repz
push
sbb
inc
nop
mov
push
inc
loope
in
das
or
sbb
cmc
rcrl
xor
dec
rcrb
ss
inc
jl
mov
outsl
pop
out
into
push
enter
sbb
mov
inc
xor
fstpt
or
sbb
enter
cmpsb
cmp
xchg
add
pusha
push
pop
and
shrl
out
test
aad
repnz
lret
rcll
ret
icebp
sbb
xor
adc
sbb
ret
icebp
mov
mov
sub
mov
pop
jmp
stc
mov
inc
dec
sub
leave
ljmp
sbb
mov
lcall
or
adc
insl
imul
mov
cmp
icebp
xchg
push
xchg
popl
aaa
jb
sub
inc
cmp
mov
inc
es
push
jge
mov
xchg
pop
mov
in
jnp
in
adc
adc
sub
in
loope
sub
ds
out
sbbl
fnstenv
sahf
or
leave
out
cmp
cld
outsl
enter
cmp
mov
jo
jae
cwtl
scas
sub
sub
mov
cmp
lret
loopne
decl
push
jbe
mov
pop
jbe
movsb
jge
mov
xor
pop
les
dec
shlb
js
mov
cld
outsb
pop
pop
sub
repnz
and
popf
cmp
in
lahf
sbb
dec
inc
push
xchg
and
popa
push
pop
and
adc
out
sub
rolb
cld
xchg
das
fildll
loopne
in
add
mov
sub
mov
imul
test
inc
lret
and
dec
mov
std
fisttpl
sbb
rolb
xor
and
adc
xchg
mov
inc
or
outsb
cmp
mov
or
xchg
inc
cli
sub
sbb
stos
lods
call
add
aas
loope
scas
cmc
or
and
insb
pop
xchg
xchg
test
jmp
push
mov
imul
xchg
rcl
sbb
fidivrl
dec
shrb
cmc
mov
clc
scas
push
or
jmp
pop
mov
sbb
jge
ja
std
fistl
pop
mov
xor
mov
mov
xor
xchg
add
pop
jmp
imul
in
pop
inc
push
inc
outsb
cmpb
mov
xchg
mov
mov
xchg
leave
rorl
and
cmp
mov
pushf
enter
or
in
mov
mov
xchg
mov
arpl
xchg
imul
test
adc
pushf
and
add
xorl
lret
cmp
inc
sbb
sub
xor
shlb
ljmp
je
ss
orl
cld
inc
cmp
mov
xor
sub
lea
mov
ret
pop
pop
pushf
inc
jge
or
icebp
sti
adc
sub
scas
stc
jnp
out
push
push
xlat
dec
lods
clc
xorb
in
fisttps
adc
stos
out
lock
adc
outsb
pop
cs
add
jmp
decb
mov
and
sub
cmp
jne
xchg
push
sbb
test
out
push
scas
jno
mov
mov
movsl
xlat
clc
shrb
mov
incl
shl
aaa
push
jo
cld
hlt
iret
repnz
mov
mov
aam
fldcw
out
add
xchg
mov
jae
test
adc
and
dec
mov
xchg
test
xchg
popl
fcmovbe
lods
mov
mov
sub
inc
mov
inc
fs
and
add
xchg
mov
rclb
dec
pusha
mov
jbe
scas
les
jmp
xchg
mov
outsl
filds
cmpsl
xor
ret
in
and
pop
outsl
icebp
nop
pusha
lcall
add
mov
mov
enter
scas
push
and
fstp
mov
in
add
call
mov
sbb
lret
bound
cltd
dec
jne
mov
inc
jmp
sbb
or
jo
in
das
inc
rolb
icebp
add
and
sub
or
into
loop
pop
inc
shll
xchg
mov
in
sbb
add
xorl
jae
cltd
aam
add
xchg
std
pop
add
stos
xchg
sub
test
jbe
bound
cmc
not
adc
loop
push
xchg
sbb
inc
aaa
jl
cs
aad
pop
loopne
mov
jns
sbb
into
sbb
shlb
hlt
cwtl
enter
mov
js
mov
scas
stos
clc
jo
scas
mov
xlat
and
inc
and
repz
lea
cmp
cmc
or
inc
loope
push
inc
in
ret
xchg
test
cwtl
jo
pop
mov
pop
mov
inc
cmp
sub
incb
mov
popf
push
jb
dec
xchg
pop
fistl
sbb
out
mov
scas
loop
in
cmpsl
cs
fdivs
ficomps
clc
mov
cltd
in
ljmp
xor
test
mov
outsb
popf
xchg
push
ja
outsl
js
clc
jnp
push
adc
adc
stos
insl
jne
xchg
cmp
push
jp
cld
pop
rol
cmpsb
add
pause
insb
and
inc
jno
mov
sbb
cmp
fstp
mov
shll
test
cmp
mov
shrl
xor
pop
test
pop
sub
push
lahf
mov
rclb
adc
inc
mov
call
sbb
ficomps
add
sub
pop
jbe
fsubrs
pop
cmp
loopne
ds
jg
push
xchg
fcoml
xchg
jbe
in
cmp
sar
add
cmp
dec
xor
int3
adc
js
fmuls
dec
add
sub
dec
or
mov
jg
lock
cmp
or
add
pop
sbb
mov
pop
pop
jp,pt
sub
std
addb
addb
in
mov
inc
jge
mov
mov
ficoml
sub
lcall
xlat
cmc
mov
jmp
push
xchg
scas
jge
sbb
mov
sbb
shll
outsb
jnp
movsb
imul
xchg
shll
das
xor
or
jno
fdivs
subb
push
lock
or
cmpsl
lret
cmpsl
ret
enter
jle
loopne
lods
cwtl
cmp
or
addr16
int
clc
pop
test
jecxz
shll
adc
mov
and
cwtl
push
push
and
pop
jle
divl
xchg
add
sub
or
arpl
mov
outsb
jno
mov
xchg
ja
inc
pop
test
outsb
jnp
push
sti
shrl
mov
rorb
mov
jbe
int
inc
aad
ds
jbe
xor
jne
shl
cmp
fildl
pop
icebp
sbb
movsl
add
mov
out
or
adc
cmp
sbb
mov
jo
push
cli
fcomi
lods
or
cs
stc
pop
push
cmc
repz
mov
jmp
inc
dec
sbb
imul
cmp
pop
loopne
pop
and
mov
and
lcall
dec
repz
rol
insb
dec
aam
sub
in
xor
iret
add
sbb
and
out
inc
add
jne
in
jbe
add
ds
push
outsl
cmp
inc
js
xor
mov
ret
pop
ret
mov
dec
fstps
aas
add
lret
aad
push
push
mov
jg
pop
dec
out
pushf
mov
push
push
jae
fstpt
jecxz
xchg
push
inc
imul
dec
push
loopne
inc
mov
mov
cmc
sti
aad
sbb
enter
cmpsl
outsb
mov
aad
push
add
jmp
and
or
sub
sarb
popa
pop
js
mov
mov
dec
stc
and
jge
xchg
insb
movsl
xchg
inc
fidivrl
in
das
outsl
cli
movsl
ljmp
inc
cmp
cmp
push
bound
mov
cs
or
shlb
fnstsw
mov
test
mov
aaa
xchg
pop
add
aam
mov
mov
inc
ret
in
mov
cli
sub
in
fistps
xlat
les
mov
icebp
outsl
lcall
mov
jl
push
in
cmp
mov
sti
lods
and
out
fs
das
mov
and
mov
add
not
inc
inc
out
xchg
lea
cmp
lock
add
mov
pusha
clc
lret
scas
ficomps
mov
jmp
mov
add
insl
sbb
out
mov
jge
mov
pop
lahf
and
mov
cmp
adc
dec
mov
cmpsl
adc
je
push
sbb
stos
sbb
and
lcall
movsl
call
shl
ds
push
pop
adc
dec
sub
xchg
outsl
adc
mov
adc
sbb
push
shl
sbb
dec
out
mov
dec
test
adc
add
push
mov
sub
sub
inc
testl
outsb
popf
xchg
push
lods
icebp
push
fadd
lods
das
sbb
mov
pop
aas
push
pop
je
mov
pop
and
pop
sbb
xlat
mov
fadds
mov
sub
xchg
xchg
xchg
dec
jmp
jne
dec
loopne
push
lea
push
push
push
pushl
call
jmp
cmp
sub
mov
outsl
add
pop
and
leave
pop
loopne
test
sub
adc
cld
jge
std
outsl
sub
sub
je
push
xchg
lcall
stos
or
push
sub
sub
call
imulb
dec
sahf
push
daa
mov
jge
mov
jg
loope
or
add
sub
fs
sub
pop
mov
pop
lret
fldt
shrb
aas
fwait
push
test
push
sub
cmc
sub
xchg
mov
sub
or
xor
ds
sub
std
fistpll
mov
add
inc
or
adc
push
insl
sub
dec
mov
xchg
xlat
das
ja
or
icebp
xor
fistpl
mul
pop
sub
test
lea
rorl
dec
test
iret
negb
push
or
xchg
pop
push
jmp
movsb
sbb
mov
push
xlat
inc
or
and
cmpsl
pop
in
das
xchg
sub
sub
sub
dec
sub
bound
sub
mov
xchg
push
ror
das
add
sub
cwtl
add
add
pop
mov
xor
adc
or
mov
add
sbb
inc
iret
sbb
es
out
mov
daa
call
or
lahf
sub
sub
mov
xor
pop
outsl
sahf
incl
sbb
mov
mov
comiss
ret
mov
je
add
insb
adc
iret
cwtl
std
sub
ret
adc
mov
sub
bound
jae,pt
sub
and
fstpt
or
sub
cmp
push
or
mov
inc
out
xchg
fdivrl
lock
sub
mov
loope
add
insl
xchg
movsl
xchg
call
fdivrs
movsl
imul
push
ja
push
mov
mov
or
add
sbb
lcall
ret
das
mov
xor
or
inc
testb
aam
sub
movsb
push
mov
dec
push
loop
inc
add
mov
jmp
push
add
dec
pop
add
mov
jno
xor
xor
aas
popf
scas
icebp
fstpt
push
popa
scas
das
jp
ja
mov
arpl
push
add
fdivs
mov
pop
inc
popa
pushl
fbstp
sbb
xchg
hlt
xchg
sub
mov
mov
cs
stc
xchg
filds
sub
push
xchg
jbe
subl
mov
push
clc
adc
jle
sub
inc
sti
or
subl
iret
outsl
mov
sub
imul
inc
cmp
mov
sub
inc
ds
in
push
mov
sub
arpl
jno
insb
loope
stos
mov
fistpl
fstl
lret
or
inc
fucomip
cld
aaa
or
mulb
xlat
jmp
xlat
cwtl
pop
sti
in
sub
or
pop
gs
jns
fildl
xlat
test
loopne
inc
push
popa
mov
add
aas
mov
xchg
repz
add
cmp
mov
mov
cmpsb
xchg
test
popa
adc
mov
sbb
nop
push
push
or
insb
mov
scas
dec
test
xchg
push
std
dec
fisttpl
pop
xchg
insl
mov
mov
out
ficoms
mov
and
fs
mov
aam
jnp
sbb
sbb
int
repz
xor
push
and
adc
mov
add
movsl
push
jb
loopne
out
nop
cmp
insl
pop
loope
jecxz
mov
in
call
enter
inc
fcmovbe
jmp
jno
cmpl
jnp
sahf
mov
mov
out
fdiv
dec
jne
dec
sub
sbb
not
mov
aaa
jmp
aam
lds
ja
out
cmp
popf
lret
frstor
rcl
dec
sub
jne
test
cmp
daa
xchg
ja
cld
outsl
les
gs
dec
cmp
xor
jb
stos
mov
ficompl
or
clc
xchg
in
jge
pop
loop
sbb
mov
arpl
lret
jl
ret
inc
ret
scas
in
ja
popa
and
jecxz
sti
fisubl
fsubs
lahf
add
jecxz
pop
aaa
loopne,pt
push
mov
sub
or
xchg
cmc
and
jl
pop
cmp
jb
xchg
aam
or
mov
and
fs
xchg
xor
mov
push
test
inc
sub
sarb
in
mov
lds
insl
jl
je
data16
push
xor
lds
inc
pop
addr16
cmp
dec
jg
xor
mov
xchg
push
mov
lods
add
clc
ret
outsl
xchg
mov
popf
cltd
ud1
repnz
mov
mov
subb
push
icebp
scas
insl
subl
and
aad
js
adc
pop
xlat
std
lock
ficoml
pop
pop
pop
sub
mov
xor
scas
divb
dec
push
xchg
jl
mov
mov
fsubs
mov
test
incb
ja
outsb
mov
mov
and
xlat
insl
cld
rolb
and
mov
or
jno
mov
int3
fstps
dec
xorb
dec
jne
cltd
cli
sub
pushw
pop
push
add
inc
xchg
imul
ret
pop
push
ret
jle
bound
push
sub
outsb
add
sbb
test
xchg
pop
cmp
sbb
xchg
push
cs
ret
ss
ljmp
mov
push
push
sub
flds
mov
xchg
ja
int3
mov
dec
jb
int3
add
mov
cmpl
inc
movsl
sbb
nopl
mov
sbb
push
jb
fwait
mov
add
inc
cmp
pop
ret
dec
cld
adc
in
mov
jnp
jecxz
inc
push
and
adc
pushf
sbb
lds
jo
ret
std
adcb
jecxz
add
icebp
push
dec
add
xchg
popl
pop
ljmp
lods
icebp
lock
and
xorl
hlt
mov
repz
repz
cmc
adc
add
arpl
cmc
out
dec
fstpt
mov
repnz
sarb
push
pop
mov
hlt
dec
pop
mov
mov
out
sahf
inc
ret
mov
xchg
adc
aaa
add
mov
cmp
xor
loope
cmp
loopne
pop
jecxz
pop
repz
fs
jmp
ds
cld
sbb
sub
rcr
in
cmpsl
test
and
pop
scas
insl
scas
pop
cmp
mov
insl
add
lret
js
push
cmpsb
add
test
pop
cmp
lcall
imul
pop
fstpl
and
push
sub
push
dec
pop
loopne
jo
adc
js
imul
xor
sub
cmp
add
lock
mov
lods
pop
lea
mov
xchg
jno
shrb
sti
fcmovb
imul
pop
jb
or
mov
xchg
fsubl
test
sub
adc
pop
test
mov
in
sbb
popf
aad
insl
sbb
cmpsl
shrl
int3
jge
cld
bound
push
push
in
fimuls
mov
lahf
push
cmpb
sahf
sbb
movsb
jl
push
lret
call
jecxz
gs
sub
jmp
push
xorb
xchg
out
loop
ja
insb
mov
dec
add
inc
or
enter
lea
add
orb
pop
clc
pop
add
cmp
add
adc
sbb
mov
xor
ja
mov
or
call
pop
adc
and
mov
cli
js
pop
test
rcrb
mov
jmp
pusha
test
andb
cli
push
push
insl
pop
bound
nop
mov
inc
sbb
push
dec
stos
push
ss
inc
test
mov
negl
iret
adc
and
push
xlat
sub
mov
imul
cwtl
dec
mov
testb
shr
cmp
sbb
lock
jno
add
add
cld
hlt
aam
loope
push
push
push
int
scas
jp
mov
sbb
pop
das
sub
mov
leave
in
cmp
xor
pop
cmp
adc
adc
cltd
fdivl
xor
orl
sbb
push
cmp
push
lds
jmp
inc
aam
test
outsl
push
in
insl
iret
pop
sbb
mov
bound
adc
mov
push
test
xor
xor
ljmp
mov
roll
xchg
in
js
mov
mov
les
dec
pop
fistpl
mov
lea
push
ds
xchg
cmpsl
xchg
cmpsl
stc
and
ret
hlt
gs
sub
xchg
outsl
cmp
xor
or
push
andl
fcompl
or
les
xchg
add
mov
shrb
jno
jecxz
inc
aas
std
dec
out
sbb
add
sub
andl
push
das
insb
sub
and
mov
jle
imul
fmuls
sbb
push
xchg
pop
mull
in
shlb
xor
in
addr16
xor
mov
add
mov
adc
test
sbb
mov
daa
repz
push
xor
shrl
iret
xor
inc
xchg
xor
and
sbb
inc
add
clc
loopne
fldt
push
cmc
adc
push
jecxz
call
shll
jp
leave
or
mov
push
mov
mov
jg
cmp
loopne
xor
mov
sub
or
mov
mov
xorb
xor
pop
xor
and
mov
sub
adc
or
ret
jnp
push
mov
mov
es
pop
inc
loope
xor
dec
ljmp
outsl
xchg
lret
lret
push
int
or
jae
dec
cmova
int
out
mov
cltd
fisttpl
pop
mov
out
orb
neg
cmpsb
mov
mov
or
xor
pushf
adc
sar
pop
mov
sub
rclb
jge
add
push
fisubrl
aam
pop
cmp
mov
or
xchg
shl
mov
mov
aad
adc
icebp
test
mov
test
jmp
outsb
stos
incb
xlat
inc
xchg
lds
cmp
jmp
add
ret
xor
sub
ljmp
ret
jnp
mov
mov
mov
or
movb
jge
ds
inc
dec
jmp
cmpsb
jecxz
push
inc
jo
aas
insb
jge
add
cld
push
jns
add
mov
rcrb
lods
xor
out
jle
lea
pop
mov
cmpsl
dec
jl
addr16
jl
push
scas
and
push
cmpsl
out
shlb
test
sti
or
mov
jge
xor
pop
popa
clc
push
jne
mov
add
mov
lods
daa
sub
pop
sbb
test
xor
hlt
mov
or
cmpsb
lea
fs
pop
mov
rclb
das
shlb
sub
iret
pop
in
jbe
fiadds
xor
adc
add
mov
adc
mov
add
cmpsb
lret
aam
imul
out
jg
gs
or
add
imull
xor
fstl
mov
jns
les
mov
rol
ljmp
sbb
movsb
insl
jmp
mov
pushf
sbb
shlb
leave
and
pop
in
mov
cmpsl
xchg
push
inc
and
xlat
fnstcw
pop
add
adc
nop
sbb
mov
icebp
xchg
out
stos
mov
mov
les
jecxz
adc
loopne
movl
ret
jmp
adc
push
push
repz
push
outsb
add
sub
pfrcp
xchg
xlat
in
sbb
mov
cmpsb
ja
enter
insl
add
cmp
leave
mov
cli
das
inc
movsl
push
fsubrl
adc
stos
push
sbb
or
scas
add
ljmp
and
dec
repz
push
sub
jg
mov
fcoms
jge
dec
mov
loop
sub
xor
call
push
pop
lcall
clc
call
adc
add
jecxz
test
je
in
sub
mov
nop
dec
jp
sub
gs
lret
dec
mov
mov
pop
xor
subb
or
fstl
mov
into
and
pop
lods
or
fdivrp
dec
xor
push
push
sub
in
scas
mov
jmp
fdiv
push
jecxz
loop
dec
push
mov
xor
mov
lret
pop
push
sbb
cmpsl
dec
push
into
in
repz
jl
loopne
not
adc
mov
mov
imull
cmc
push
jge
and
jmp
icebp
lock
lret
mov
pop
aam
pop
bound
pop
sbb
or
dec
xor
mov
dec
cmp
jo
ret
or
int3
in
pop
add
mov
cli
rolb
adcb
jbe
add
inc
ret
fldt
rclb
iret
dec
nop
bnd
mov
ds
shlb
jle
div
imul
or
std
lock
test
and
loope
ja
jecxz
pop
and
inc
adc
shlb
mov
jbe
xor
pusha
loopne
xlat
bound
push
mov
adc
or
mov
push
clc
push
push
cmp
repnz
add
xlat
dec
fisttpll
or
popa
fidivs
xchg
sti
sbb
fcmovbe
push
fmul
sbb
std
jb
mov
or
push
movsl
pop
lods
push
mov
in
loope
xor
pop
pop
sub
and
mov
sub
fisttpl
xchg
out
mov
les
mov
ret
sbb
push
mov
ret
add
stc
stc
rolb
cmp
imul
fistpll
add
and
je
dec
lahf
sub
js
or
xor
das
aam
mov
ss
mov
jns
inc
addr16
sbb
fldt
xchg
add
rorb
lahf
adc
mov
sti
in
cmp
jae
xchg
cmc
mov
fldcw
xor
dec
mov
clc
xlat
aas
movsb
icebp
mov
dec
pop
adc
pop
pop
pusha
imul
adc
andl
aad
and
cmp
in
xor
jnp
fcomps
or
push
sbb
ret
and
aad
pop
daa
popa
jns
cmpsl
fimuls
sbb
inc
and
cmpsb
push
insl
dec
shll
test
shlb
loopne
push
mov
cmc
or
aaa
pop
xor
mov
and
inc
inc
out
in
insl
mov
stos
jae
mov
push
sub
xchg
and
mov
sbb
imul
fnstsw
jne
shl
lret
pop
push
insb
movsl
mov
jno
js
ret
sbb
mov
insl
pop
loop
int3
fwait
pop
in
sahf
imul
imul
sub
fildl
int
sbbl
shl
shrl
pop
cmp
in
js
sub
cmp
jne
lret
xor
cmp
xor
push
mov
mov
cwtl
adc
dec
sbb
xchg
lds
pop
and
xchg
lcall
or
cmp
call
inc
dec
lahf
xor
int
inc
dec
push
adc
sbb
jnp
mov
jp
jmp
aas
jae
mov
dec
adc
test
xchg
lret
sarl
aaa
inc
or
int3
push
dec
mov
in
push
mov
stos
in
sub
out
adc
mov
inc
std
dec
push
loopne
pop
sub
sbb
mov
movsb
lcall
add
or
push
xchg
out
add
adc
pop
mov
xchg
rolb
jmp
pop
jecxz
outsb
push
rcl
mov
ss
cmp
lods
aas
and
jns
out
scas
mov
inc
in
cmp
hlt
sbb
xchg
mov
adc
pop
lea
sti
sub
mov
fnstcw
aam
mov
insl
imulb
push
mov
das
mov
xor
mov
cmpb
pusha
outsb
lock
shll
aam
inc
xchg
mov
insl
pop
ds
out
popf
dec
mov
sub
jecxz
jnp
xor
mov
dec
push
ljmp
push
dec
xor
push
jl
sbb
stc
rclb
cmp
jmp
inc
jl
mov
rcrl
std
lock
mov
xor
repnz
adc
mov
xorl
add
xchg
into
sbb
add
mov
cmp
pop
jo
cmp
insl
xchg
sbb
xchg
adc
mov
adc
popa
pop
inc
imul
outsl
test
sub
out
lods
mov
and
sub
loopne
rclb
mov
insb
push
adc
out
push
cmp
gs
into
xchg
addr16
ret
imul
inc
mov
xor
es
loopne
inc
pusha
and
fwait
dec
jg
ss
xchg
cmp
test
cmp
lods
push
fidivrl
test
cwtl
cmp
cli
mov
mov
sub
mov
jge
xor
cmp
lahf
mov
mov
xchg
mov
les
in
push
jl
inc
je
lret
add
icebp
mov
jno
pop
sub
lcall
rclb
fcmovne
cmc
pop
or
test
xchg
ret
sub
sar
mov
enter
mov
xchg
push
frstpm(287
jmp
mov
cmpsb
dec
push
inc
mov
imul
or
lret
daa
loop
mov
mov
jl
adcb
nop
push
add
jne
cltd
sbb
cwtl
sbb
xchg
movsb
mov
jmp
icebp
ja
js
popf
aam
fiadds
arpl
jp
xor
movsb
dec
lahf
sbb
ss
in
inc
jnp
adc
test
pop
lods
jecxz
sahf
pop
add
inc
fnstcw
sti
pop
aaa
cmpsl
cmp
insl
mov
add
shl
jb
out
sbb
jmp
push
jecxz
sbb
pushf
or
cmp
stc
cs
pop
sub
push
jne
inc
cwtl
je
insl
mov
je
rclb
cmp
popa
loope
add
mov
dec
pushl
xlat
iret
mov
js
dec
stos
add
xor
pop
push
stc
mov
or
in
pop
pop
add
js
or
sub
aas
inc
lock
negl
loopne
and
pop
sbbb
pop
test
ds
mov
mov
ss
das
mov
ss
lock
push
das
gs
in
jp
je
daa
shll
cwtl
ret
loope
mov
dec
add
lds
ret
outsl
cmp
outsl
fs
in
add
or
cltd
push
jns
or
push
add
clc
xor
pop
ss
pop
mov
inc
orl
push
mov
mov
adc
jmp
pop
pop
mov
pusha
lock
fists
aam
jne
les
dec
jo
fmull
gs
std
jns
das
mov
fsubrs
cmp
ss
repz
adc
fisubl
pop
sbb
ja
mov
or
pop
sbb
mov
sbb
mov
or
pop
xor
jmp
data16
js
xlat
pop
push
fidivrs
and
hlt
jmp
insb
out
dec
and
fcoms
or
adc
cs
xchg
in
pusha
mov
in
subl
jl
ffreep
lahf
insl
jo
flds
scas
add
jbe
cmp
in
aaa
adcl
push
leave
shll
lods
or
mov
hlt
fcomps
cmp
inc
loope
inc
mov
mov
nop
add
cmpsb
xchg
adc
or
cmpsl
lcall
sbb
int
mov
pusha
aam
lock
pusha
mov
gs
add
jmp
rorb
pop
in
outsl
push
loope
mov
cmp
ljmp
jmp
das
ss
xchg
icebp
subb
inc
cli
sar
mov
sahf
adc
mov
aas
mov
push
pop
insb
in
or
xor
mov
lods
int
aas
int3
add
or
in
call
jmp
jo
fisttps
incl
adc
mov
cs
jecxz
mov
jns
pop
sbb
inc
cltd
mov
test
jle
or
in
pop
jp
les
fstpl
orb
and
xchg
xor
push
push
inc
push
sub
sub
ret
mov
loope
shl
push
push
adc
jbe
mov
daa
mov
test
mov
out
stos
shl
mov
rcrb
in
gs
in
fdivs
ficomps
inc
stos
fstps
or
and
and
data16
push
out
rorb
sub
push
shr
scas
and
or
and
icebp
daa
xchg
pop
call
cmp
mov
lock
int3
add
push
mov
ss
stos
push
fwait
and
jne
jg
jg
mov
mov
mov
shrb
push
sbb
or
test
movsl
test
int
push
enter
ret
icebp
pop
jmp
jo
rorl
in
jo
insb
adc
bound
enter
xor
pushf
jg
sub
insl
cmp
dec
dec
adc
ret
sub
cs
sub
adc
mov
push
xlat
xchg
fcom
cmp
mov
jbe
lret
cmp
js
pop
dec
fwait
es
loop
cli
pop
fisubs
pop
xor
push
ss
push
adc
jbe
js
jno
inc
mov
into
and
mov
inc
inc
push
mov
in
lret
xchg
xchg
adc
push
adc
insb
les
insl
pop
or
adc
push
mov
lret
xchg
xor
cmp
cs
sbb
push
test
cmp
mov
sub
or
jne
inc
xlat
test
inc
cld
and
inc
ss
ss
push
jge
sub
sub
mov
ss
push
mov
cmpsl
push
jg
stos
mov
sbb
mov
push
mov
pop
js
sti
mov
mov
loop
sbb
popl
jmp
sbb
and
adc
xor
sbb
inc
outsb
test
mov
adc
mov
pusha
icebp
movsb
pop
rolb
clc
hlt
inc
mov
rorl
push
ss
js
cmpsb
xchg
jmp
imul
shlb
and
mov
fdivrs
push
mov
sub
insl
push
sahf
test
fs
stos
lods
jb
jge
adc
push
xor
mov
sub
lea
push
cmpsb
or
mov
fs
out
mov
adc
fsubr
cmp
xchg
js
sub
pop
push
loope
jmp
jl
es
les
mov
mov
jae
cs
add
dec
adc
lahf
cs
outsl
sarl
add
and
clc
sub
lock
out
or
das
mov
xchg
push
aaa
mov
cmp
int3
jb
dec
mov
mov
int3
loop
push
xchg
add
ffree
jb
mov
jno
xchg
and
loopne
das
in
pop
shlb
jge
out
pop
dec
sbb
jae
xchg
dec
cmpsb
cli
ret
cmpsb
dec
rcrb
pop
jg
sti
inc
push
or
aaa
loopne
andl
arpl
pop
jl
mov
lock
lret
xchg
out
pop
adc
aad
cltd
sub
outsl
xchg
xchg
rol
cld
sbb
inc
mov
push
outsb
or
xchg
test
xchg
pop
mov
jo
inc
pop
out
cmp
call
shl
lods
pavgw
out
in
cmp
inc
arpl
push
inc
jnp
pop
cmc
filds
dec
sub
int3
xchg
adc
ret
inc
sub
add
lea
ljmp
arpl
push
mov
outsb
cmp
outsb
mov
sbb
cmpsb
stc
or
adc
pop
cmp
outsb
mov
outsl
rcll
mov
push
insl
pop
insb
fcoml
push
test
jbe
mov
icebp
mov
sarb
stc
andl
cmp
push
and
shrb
bound
rclb
lock
adc
stos
dec
mov
push
adc
dec
pop
pusha
mov
cltd
and
xchg
outsb
movsl
sbb
push
lock
out
add
repnz
push
daa
subl
ss
subl
shlb
pop
daa
mul
add
dec
loop
inc
mov
rorb
iret
inc
pop
sbb
pop
or
or
xor
ljmp
add
jb
mov
aad
pop
ret
aaa
inc
lods
xchg
insb
test
push
sbb
jbe
or
xor
inc
sbb
and
mov
jno
xor
push
jo
cmp
pop
fcmovnbe
int3
fnstsw
pop
jmp
pusha
push
enter
test
mov
andb
xorl
sbb
push
mov
aam
aaa
push
hlt
dec
fmuls
xchg
sbb
jmp
xchg
inc
cmpsl
pop
push
sub
inc
jg
mov
push
jl
loopne
mov
les
lock
icebp
or
push
adc
cltd
stos
and
sub
jno
sahf
or
sbb
mov
jne
and
push
enter
inc
stc
jg
jecxz
fistl
insl
mov
mov
aam
and
call
sbb
jbe
movsb
or
push
dec
xchg
test
or
mull
rorb
cmp
fwait
cmc
push
out
insb
dec
and
daa
cmp
add
dec
jbe
mov
add
outsb
add
icebp
mov
xchg
sbbl
jmp
insl
mov
mov
push
pop
orb
das
mov
int3
pop
mov
sbb
lret
xor
outsb
shlb
mov
mov
jo
sbb
push
mov
cmpsl
fildl
dec
hlt
leave
mov
xor
imul
arpl
and
sbb
push
push
adc
std
imul
lods
ljmp
fucomip
adc
mov
bound
mov
and
loope
pushl
out
ss
xchg
popa
sub
js
cld
mov
insb
pop
orb
pop
les
adc
roll
pop
or
mov
enter
cmp
jg
sub
xor
or
popf
stos
inc
jg
or
movsl
mov
aam
pmaddwd
pop
mov
jnp
jmp
sbb
or
xor
jmp
sbb
mov
inc
test
sub
adc
mov
out
pop
popa
jecxz
xor
cli
pop
lahf
jg
xchg
fidivl
fidivrl
dec
pushf
inc
cmc
dec
sub
mov
add
ljmp
and
lea
xor
jne
mov
xor
and
inc
add
pop
cwtl
or
lahf
and
mov
cmpsl
lock
adc
mov
aad
cmp
sbb
aaa
ret
cwtl
loopne
sub
nop
dec
in
mov
out
inc
aas
bound
in
insl
inc
xlat
lock
stos
outsb
pop
jnp
add
mov
rcl
ljmp
xchg
gs
inc
push
xor
adc
sub
or
sbb
clc
mov
repnz
mov
xor
arpl
push
xor
sub
lds
jecxz
xchg
mov
inc
xchg
push
fbld
adc
frstor
push
cmp
push
inc
fdivrl
paddd
xor
pop
out
or
xor
inc
sbb
repnz
inc
lods
rcr
incb
daa
xchg
sbb
popl
fldenv
in
rorb
and
fdivs
dec
push
push
and
cld
cmpsl
pop
sub
sbb
adc
popa
mov
sbb
adc
rol
orl
jmp
mov
lea
add
sbb
sub
sbb
rol
adc
aam
inc
and
and
clc
lods
pop
scas
andb
inc
mov
dec
out
or
lods
imul
push
out
mov
mov
dec
setae
xor
push
nop
mov
dec
adc
jno
shl
sbb
stos
clc
test
pop
inc
mov
sbb
fidivrl
inc
shll
or
into
adc
mov
xor
test
outsb
mov
cltd
sbb
xor
mov
cmpsl
xchg
push
ds
pop
jge
xchg
xchg
mov
in
icebp
fsub
mov
xor
xor
loope
dec
repnz
push
fsubl
cmc
mov
imul
adc
pushf
and
sbb
cs
jnp
mov
andb
shrb
seta
in
mov
cli
jg
fdivl
xchg
pop
push
dec
dec
sahf
je
jp
push
ja
push
dec
sarl
test
sbb
dec
pop
sub
notb
mov
mov
loopne
xchg
movsl
fmulp
sarb
stc
fbstp
pusha
inc
sub
sub
sbb
adc
push
pop
jecxz
sub
sbb
ljmp
jne
push
jl
cli
mov
repz
shlb
jge
ret
mov
or
aaa
mov
test
lret
push
nop
leave
pusha
jmp
fidivrs
orl
dec
test
mov
bound
test
pop
les
popa
sbb
add
rolb
fistpl
jg
lret
sub
lds
in
or
mov
adc
inc
mov
fidivrl
ret
and
push
daa
pop
xchg
pop
pop
mov
jnp
push
mov
fsubr
mov
sbb
dec
pushf
mov
or
in
adc
fcompl
push
xchg
mov
sbb
mov
and
inc
cmp
xor
or
cli
jo
sti
popa
pop
adc
add
int3
inc
insb
adc
fiaddl
jle
iret
jecxz
inc
popf
mov
xor
cmpsl
inc
mov
mov
in
mov
loopne
push
pop
jecxz
jecxz
stos
add
movl
adc
cli
les
push
xchg
fisttpll
sub
and
dec
scas
inc
lea
mov
cmp
inc
mov
imul
fsub
das
stos
or
outsb
mov
call
orb
jno
inc
divb
sti
xor
xor
loop
js
sbb
inc
repnz
leave
mov
xchg
std
or
cmc
pop
sbb
inc
and
jnp
add
sub
stc
cmp
jp
cmp
inc
mull
int3
mov
cmp
and
aas
ret
enter
xor
icebp
xchg
mov
or
mov
push
fs
int3
xchg
movsl
sub
shll
icebp
xorb
sarb
outsl
inc
scas
or
leave
mov
mov
faddl
clc
push
inc
rorl
mov
test
in
jo
cmp
xor
out
idivl
loop
sbb
iret
dec
in
sti
xchg
adc
sub
inc
mov
in
cltd
ljmp
push
sbb
bound
test
lock
sbb
sub
outsb
ret
out
xchg
lea
xchg
cmpsb
loope
scas
inc
mov
call
std
fcompl
jmp
push
push
sarl
xchg
lods
not
pop
add
mov
jmp
push
nop
je
mov
sbb
xchg
in
pusha
pop
call
pop
jne
sahf
loope
in
cmc
mov
icebp
cltd
add
sahf
xchg
das
sbb
popa
sub
lock
aas
xchg
push
xchg
lods
push
cmp
cmp
or
cmp
cmpl
pop
jne
lds
cmp
pop
add
insb
or
or
mov
shlb
jp
sbb
sti
ret
loopne
xor
fildll
mov
jb,pt
mov
jb
pop
sub
cmpb
aas
imul
xlat
xor
sub
pushf
enter
push
cmc
or
dec
xlat
cltd
in
pop
mov
jecxz
outsl
lahf
popf
nop
cmp
cmp
cmpsb
jmp
orb
stos
inc
daa
mov
jns
insl
lods
jbe
pop
inc
out
cmpsb
xchg
pop
fdivs
mov
ljmp
mov
cli
dec
cs
lea
push
cli
mov
push
inc
dec
dec
xor
stos
pusha
pop
sbb
cmp
xor
xchg
push
int
sbb
mov
inc
popa
sbb
dec
push
xchg
mov
incl
inc
mov
inc
shrl
dec
adc
cmpsl
pop
xchg
popl
mov
jno
ret
jg
add
sub
jp
movsl
addr16
cmpl
jmp
call
xchg
mov
aam
add
adc
roll
in
fisttpl
movsb
popf
jns
int
sub
pusha
jmp
adc
scas
sub
fisttps
std
call
pop
sahf
mov
pop
or
inc
add
lds
fdivl
inc
jecxz
or
pop
push
pop
push
test
sbb
push
ss
or
insb
das
sub
inc
add
or
sbb
cs
repz
dec
scas
push
pop
aas
or
lods
pop
rorb
sub
not
and
lahf
loop
inc
ret
xor
inc
lods
jecxz
jbe
fsubr
xor
add
in
ret
add
jno
ffreep
nop
cld
mov
fildll
xchg
aaa
pusha
sbb
frstor
lahf
dec
daa
test
rorl
addr16
fisubrs
ds
aad
scas
add
or
je
or
mov
mov
pusha
in
xor
mov
sub
idivl
movsl
das
pop
mov
xchg
ljmp
std
dec
push
mov
sbbl
pushf
clc
adc
pop
scas
adc
dec
jno
hlt
jmp
xchg
cmp
pushf
lock
addb
rorl
cmpsl
push
lahf
ret
std
movsb
imull
in
mov
mov
pop
xchg
jb
or
sbb
mov
jle
iret
outsb
pcmpeqw
dec
aad
and
ja
pop
jg
xor
daa
lahf
pop
pop
pusha
cli
imul
push
and
adc
jmp
mov
cmc
and
xchg
inc
mov
fldcw
cmp
dec
pop
adc
pop
imul
dec
inc
mov
push
sbbl
jge
scas
ljmp
mov
push
fdivrl
pop
mov
mov
jl
mov
adc
mov
jl
sbb
jne
jg
add
das
sbb
lods
movsl
sbb
mov
lods
shlb
std
add
add
mov
inc
push
xor
dec
mov
in
mov
rclb
enter
mov
inc
pop
mov
idivb
adc
fsts
insl
jl
sub
in
jg
shlb
dec
add
test
mov
loope
mov
mov
movl
test
es
adc
push
enter
mov
sub
and
adc
aas
jno
sti
pusha
nop
jmp
xor
sbb
icebp
inc
sarb
or
movsl
mov
dec
popa
push
xor
sbb
sbb
in
cltd
lods
lss
add
xor
sbb
daa
in
pop
lock
sti
and
bound
or
js
sbb
testb
push
aam
inc
dec
sbb
aam
loope
incl
ja
push
cmc
stc
icebp
or
iret
xchg
fucomp
fdiv
aaa
fcoml
fstl
inc
bound
lock
xchg
pushf
js
decb
lods
xor
mov
je
std
xlat
lods
dec
dec
clc
lcall
cs
push
sub
mov
add
add
jno
repz
sub
pop
clc
ret
or
lds
adc
movsb
add
out
push
jmp
rolb
jl
test
sbb
mov
pop
hlt
fwait
push
es
add
outsl
xchg
sub
jmp
and
pop
inc
xchg
cmp
imul
sahf
aas
cmpb
sub
xchg
lret
mov
pushf
inc
xchg
test
jl
lahf
adc
inc
dec
push
inc
ja
test
sub
mov
add
addl
sub
mov
mov
mov
test
int3
xor
pop
xor
mov
mov
push
adc
clc
lds
pop
and
mov
je
mov
dec
xchg
lcall
mov
pminub
adc
fisubrs
ljmp
sbb
xchg
cmp
ss
pop
add
push
inc
or
pop
mov
std
adc
inc
pop
mov
lock
add
or
jge
mull
fucom
sbb
mov
stos
add
jb
pusha
push
in
sub
mov
sub
mov
sbb
out
arpl
mov
push
aaa
fdivl
test
fstpl
adc
mov
clc
cmpsl
mov
pop
out
pusha
xor
mov
jge
inc
pop
and
sbbb
cmc
xchg
pop
mov
push
push
mov
ja
into
push
xorb
cwtl
cld
adc
xlat
push
rorl
sub
lock
aad
dec
ds
mov
je
leave
mov
jge
jmp
dec
lret
lds
mov
mov
or
addl
or
je
sbb
mov
dec
sbb
add
sti
aaa
shrl
or
inc
sub
adc
mov
dec
mov
dec
push
xor
pop
push
mov
push
sub
jmp
inc
dec
int
ds
orl
cmpb
lea
sahf
jns
dec
and
jmp
arpl
jne
daa
in
sbb
mov
in
xlat
int3
mov
out
or
pop
jno
mov
mov
fisubrs
lds
jae
loopne
xchg
pop
gs
push
mov
xchg
mov
outsl
imul
int3
es
mov
mov
mov
adc
push
ss
in
scas
dec
pop
stc
mov
xor
sbbb
add
fwait
pop
adc
out
fsubrp
into
xor
jmp
or
dec
mov
jmp
mov
jbe
mov
shlb
ret
scas
xchg
rorb
sub
cmp
jne
mov
shll
sbb
int3
ret
pusha
popa
call
lret
cmp
jecxz
sub
les
pop
data16
je
sbb
pusha
mov
lods
xchg
add
shll
cmpl
jg
xchg
out
je
mov
and
mov
clc
xchg
push
dec
dec
scas
aaa
lock
inc
xor
int
in
push
lds
inc
daa
lcall
and
cmp
pop
mov
fwait
sbb
adc
cmc
aam
pop
push
pop
sbb
mov
and
mov
push
scas
xor
icebp
mov
ficoml
pushf
mov
inc
lds
cmp
jo
xor
aas
mov
insb
rorb
push
sbb
xor
pop
jne
test
pop
fnsave
fbstp
cld
mov
fldl
cld
push
xor
cmp
add
sub
dec
xchg
mov
data16
fnstsw
push
loope
mov
mov
in
stc
divl
xchg
or
popl
in
test
test
imul
jno
loope
or
cmp
inc
cmc
xchg
cli
roll
jno
ds
or
adc
imul
mov
mov
pop
in
or
dec
adc
mov
stos
mov
xchg
popa
int3
rolb
leave
and
or
xor
aaa
loop
sahf
or
clc
lret
repz
mov
clc
or
jecxz
or
mov
sub
add
imul
sub
loop
mov
xor
popf
pusha
add
shl
imul
and
jb
aad
xor
push
mov
push
inc
pop
xchg
shll
popf
inc
cmp
andb
loope
pop
jne
jae
rcrb
call
aaa
cmp
mov
ja
push
push
sbb
pop
pop
fdivl
dec
or
dec
out
hlt
rcrl
adc
inc
add
je
aad
cld
pop
adc
or
cmpsb
js
or
popf
int
adc
mov
mov
jo
pop
add
loope
push
sbb
mov
fdivl
aas
and
lea
aam
mov
mul
pusha
ror
adc
mov
lret
or
mov
jg
in
ficomps
add
adcl
es
sub
push
enter
pushf
ss
xor
nop
loop
xor
mov
inc
std
xchg
or
jl
loopne
loope
pop
adc
loope
mov
add
cmpb
push
xchg
arpl
mov
adc
dec
and
inc
push
dec
mov
xor
lret
jmp
fildl
pop
jg
jmp
xchg
inc
dec
xor
and
and
insl
xchg
pop
and
loopne
fiaddl
std
add
and
loope
dec
add
jl
pop
arpl
stos
mov
cmpsl
les
sbb
cltd
push
and
sahf
mov
xchg
xor
mov
mov
mov
lock
in
xchg
jl
mov
sub
out
mov
mov
cwtl
fdiv
les
sub
out
fwait
sub
pop
xor
add
xor
insb
pop
aam
inc
andl
in
lcall
xchg
lahf
push
mov
xchg
lock
and
outsl
popf
and
insb
mov
mov
daa
fidivrs
dec
jo
pop
xor
cmp
lds
sbb
dec
fsubrl
and
scas
adc
adc
add
lods
in
push
jle
mov
sub
mov
hlt
pop
fdivl
xchg
inc
sub
mov
ds
in
xchg
cs
fisttps
or
hlt
lds
adc
shll
insl
xor
aas
addr16
xchg
or
pop
int
mov
hlt
mov
popa
daa
lea
sahf
daa
and
sbb
inc
and
push
xor
inc
sbb
std
fs
cmp
pop
jg
call
adc
xor
dec
mov
lds
movb
inc
aad
pop
fsubr
dec
call
mov
loopne
jecxz
fcoms
sbb
push
mov
add
mov
add
loopne
fdivrs
inc
fdivs
xor
mov
jg
adc
push
into
push
dec
mov
das
hlt
add
jmp
jo
rolb
cmp
das
rorl
or
shr
jmp
adc
push
adcl
aaa
lcall
iret
gs
inc
mov
mov
cmp
add
scas
inc
jno
in
xor
push
or
push
test
inc
notb
ss
cmc
mov
sbb
adc
ret
sbb
and
cmc
popa
pop
sub
or
loopne
insl
icebp
daa
sbb
push
pop
sbbb
std
test
add
movsb
pop
xor
fisttps
rcll
shll
push
ljmp
sahf
mov
pop
sbb
xchg
and
and
inc
sub
xlat
inc
sub
or
aad
rolb
adc
xor
hlt
stc
pop
ret
lcall
dec
mov
gs
stos
arpl
inc
orb
aas
or
inc
mov
xchg
stc
inc
dec
or
bound
sahf
mov
or
loop
adc
jle
add
inc
jmp
or
loop
int
push
add
gs
test
rcr
fs
outsl
push
bound
ss
aam
jg
insb
ja
xchg
jp
int3
testb
and
adc
arpl
xchg
inc
scas
dec
and
mov
sub
dec
fimull
inc
add
and
and
faddp
jne
cmp
xor
aad
popa
sbb
jmp
and
insb
lods
std
jecxz
stc
je
mov
fdivrs
mov
add
popf
lahf
sarl
fisubl
sbbl
or
roll
ss
mov
pop
dec
adc
push
ja
or
add
mov
shll
shll
mov
mov
mov
ds
mov
pop
aaa
loop
mov
mov
icebp
aas
sbb
dec
sahf
cmp
mov
into
push
fnstcw
inc
add
xor
dec
xchg
mov
clc
mov
cmp
lcall
sahf
rclb
pushf
cmp
repnz
loope
in
mov
xor
inc
pop
or
or
std
rolb
icebp
inc
int3
movsb
lods
scas
xchg
xor
bound
inc
femms
cltd
jb
pop
aam
mov
scas
push
lds
cmpl
push
inc
xor
out
adc
or
cmp
adc
cmp
jbe
jmp
test
loopne
std
xchg
mov
int
icebp
and
mov
div
mov
int
sub
arpl
jne
lods
outsb
das
mov
pop
mov
adc
sub
xor
adc
nop
lods
xlat
push
mov
sbb
sarl
loope
das
xchg
xchg
lret
add
js
cmc
xchg
imul
lea
and
data16
call
mov
xchg
cwtl
mov
and
pop
inc
cmp
das
cmpsl
xchg
sub
lcall
das
mov
outsl
stos
and
loopne
jp
and
inc
rcrl
fiadds
mov
ret
shll
sarb
adc
or
push
lds
inc
push
cld
add
inc
js
mov
jmp
adc
add
xchg
pop
fwait
jle
jge
add
mov
sbb
inc
call
inc
in
dec
psubsb
pop
sub
dec
pop
inc
shl
sbb
loop
in
lcall
or
js
or
test
popa
cmp
add
imul
or
xlat
pop
mov
in
imul
mov
add
loopne
loopne
adc
cmc
leave
rolb
mov
and
pop
cmpsl
loopne
paddsw
pop
loopne,pt
dec
aad
sbb
test
mov
mov
ljmp
pop
fwait
sahf
stos
pop
dec
cmp
push
pushf
mov
loopne
pop
push
dec
fcmovnu
scas
pop
sbb
int3
dec
push
pop
mov
clc
xchg
xorl
jl
push
sub
orb
mov
ja
or
sbbb
cmpsb
addr16
inc
mov
add
movsl
iret
stos
fistpll
stos
sbb
lods
shr
sarb
ficomps
jg
sti
mov
xchg
mov
inc
sbb
sub
inc
xor
pop
test
sub
outsb
xchg
sub
add
inc
scas
and
sbb
cmp
mov
mov
popa
aaa
or
sub
mov
icebp
inc
scas
mov
cmpb
fildll
nop
add
notl
das
pop
pushf
and
and
lahf
inc
sub
mov
jge
mul
les
add
cmpsb
cmp
es
dec
fwait
mov
sti
shl
pop
aam
icebp
xor
out
mov
mov
sub
lock
sti
push
adc
mov
mov
cmp
nop
cwtl
mov
push
pop
movsl
pop
rolb
and
rorl
aad
into
jmp
lods
insl
fstl
xchg
dec
cmp
pop
repz
jmp
push
push
xor
nop
scas
add
cs
test
cmp
enter
add
ja
jge
psubsw
js
mov
movsb
ja
mov
fmuls
andb
in
subb
adc
das
lea
sarb
scas
xchg
jb
push
mov
and
mov
adc
sub
inc
ret
xor
js
add
addb
inc
aas
lods
cmpsb
aam
xchg
sub
cwtl
ss
mov
xorb
xchg
adc
or
dec
stos
shll
rolb
or
or
mov
adc
fldcw
push
push
and
subl
mov
sbb
mov
pop
pop
lock
pop
xchg
ljmp
xchg
mov
pop
imul
jbe
xchg
and
jb
sbb
xchg
out
dec
dec
loop
hlt
div
testb
gs
nop
add
sarl
int
std
fadds
in
or
mov
ja
decb
cmp
dec
int3
loopne
pop
sarl
popa
mov
sbb
jbe
cmc
test
sbb
rcrb
and
add
aad
dec
sbb
inc
push
add
adc
sbb
pop
cwtl
or
dec
lea
loopne
aaa
lods
jle
push
sbb
jle
or
xchg
loopne
add
xchg
je
pop
fidivl
sub
push
in
in
push
sti
push
cmpsl
mov
cli
js
js
or
lock
dec
testl
fmulp
test
and
jnp
imul
sub
incb
lea
inc
cwtl
call
cmp
mull
push
mov
mov
imull
adc
cmpsl
andl
pop
and
dec
call
mov
xor
pushf
mov
lcall
in
sub
xorl
pop
call
mov
or
jno
testb
lods
hlt
loopne
mov
shl
aam
ret
jo
lds
jle
outsb
loop
inc
or
push
mov
mov
aaa
icebp
pushw
sbb
cli
test
mov
mov
rcrb
fistps
aaa
push
mov
cmc
add
movsl
lods
fists
call
adc
dec
sbb
xchg
orb
mov
test
fisttps
mov
sub
jnp
loopne
aas
cmc
imul
in
sbb
cmpsb
shlb
mov
lods
adc
pusha
push
lret
daa
mov
negb
ss
std
repz
sbb
mov
int
rcll
xchg
and
jo
es
pmullw
push
inc
leave
cmpl
aad
sbb
mov
out
or
mov
cmp
out
dec
add
mov
lea
dec
ret
sub
gs
ljmp
jb
and
into
std
push
push
imul
fisttps
cmp
fcoms
stos
sub
outsl
lahf
mov
adc
cmp
call
movsl
push
jl
lahf
mov
pop
jb
in
dec
scas
adc
or
in
lods
push
psubsb
rclb
cld
mulb
ret
arpl
or
cmpl
and
sahf
mov
outsl
mov
inc
mov
sbb
pop
aaa
das
popa
sti
or
jae
sub
sbb
movsb
das
push
sbb
push
rolb
addl
out
pop
into
or
les
lock
add
and
rcl
fildl
subb
mov
xor
push
jb
pop
out
rolb
pop
dec
ror
das
pop
xor
cmpsl
xchg
or
mov
dec
xchg
enter
cmc
outsl
push
rcll
rcl
jecxz
fsubl
mov
inc
scas
jae
in
push
daa
xchg
repnz
inc
je
add
push
xchg
lcall
sbb
or
inc
test
fidivl
and
loop
dec
negl
sub
pop
adc
pop
ss
jmp
inc
mov
nop
push
popf
outsb
mov
and
movsl
test
pop
sub
inc
fwait
sbb
lret
rolb
out
jg
jecxz
xchg
cld
pop
fsubrs
clc
xchg
fbld
dec
xchg
ror
inc
or
add
jmp
jl
pop
movsb
ljmp
je
xlat
negb
cmc
je
bound
pop
adc
fdivrs
fidivrs
or
sub
mov
fstl
push
ret
pop
jecxz
lcall
dec
or
mov
sbb
imull
ret
loopne
or
fistpl
subl
jl
xchg
xor
jnp
mov
inc
and
in
lock
sub
fisttps
mov
mov
ss
and
sbb
fisttpl
jge
call
or
pusha
lods
ficomps
clc
sahf
sub
fwait
sub
push
sbb
insb
add
in
lea
dec
add
mov
add
mov
or
mov
cmpsl
outsb
jne
outsb
fstl
mov
xor
pusha
icebp
xchg
push
jno
jmp
insl
mov
inc
jns
nop
mov
push
push
sub
jmp
xor
fadd
xchg
sbb
or
cs
hlt
dec
push
test
xor
out
or
xor
jecxz
push
and
std
pop
outsb
nop
sbb
jne
gs
ret
or
xchg
mov
idivb
pop
outsl
mov
lock
inc
adc
sbb
cmpsb
fidivrl
jmp
rcll
call
and
das
icebp
jne
imul
shrl
mov
sub
mov
ss
mov
or
cmpsl
mov
pop
push
sub
mov
mov
lahf
inc
inc
adc
dec
jl
xlat
mov
shlb
sbb
jb
cwtl
popa
movl
dec
jecxz
mov
lret
inc
pop
test
inc
inc
aam
fwait
pop
dec
movsb
pop
or
sbbb
arpl
dec
mov
lods
pop
in
push
mov
sbb
add
into
leave
and
pop
std
jnp
mov
jns
mov
aas
out
cvttps2pi
cs
ss
data16
loope
push
cmp
mov
int3
pop
sub
or
call
dec
lcall
xchg
in
rorb
mov
ja
xchg
loop
push
inc
push
mov
add
pop
idivb
pop
ret
popf
mov
inc
mov
fcom
icebp
shll
mov
insl
pop
fimull
xchg
loope
mov
loop
and
dec
dec
cmp
sahf
mov
inc
sbb
jge
ret
sbb
push
push
mov
test
jne
xchg
or
mov
dec
ja
jo
mulb
or
adc
fimuls
aaa
stos
mov
inc
test
adc
scas
cld
pop
push
and
imul
push
into
cmp
inc
out
sub
xor
jbe
cli
mov
mov
push
add
add
data16
call
mov
in
cmp
dec
inc
es
data16
push
add
inc
pop
call
sub
leave
roll
cmpsl
push
mov
insb
outsb
loope
inc
xchg
clc
ja
and
andb
jmp
notb
fdiv
stos
movsl
ds
pop
sub
pop
test
call
xchg
or
xor
call
sbb
xor
mov
mov
rorl
popl
ret
outsl
add
sub
mov
jnp
fdivrl
adc
pop
or
repnz
fnstsw
sbb
lret
loope
pop
icebp
ret
xor
push
fidivrs
xor
xor
icebp
test
rcrl
repz
lds
xor
rsqrtps
sub
dec
into
cmp
or
loop
xor
mov
pop
cmc
sub
fisttps
inc
sub
int
aam
fistpll
mov
mov
or
mov
lds
sarl
mov
and
in
dec
adc
xchg
test
sub
dec
std
mov
sub
xor
sbb
bound
jae
or
hlt
inc
cmp
cmc
fisttpll
xchg
popa
sbb
adc
call
mov
mov
stos
inc
cmpsl
mov
fwait
jle
cs
out
leave
xor
ljmp
adc
mov
lds
mov
xchg
pop
shll
pop
dec
nop
mov
mov
xchg
xchg
jl
mov
outsl
cld
loopne
test
popa
movsl
or
sbb
imul
popa
stos
xor
sub
fwait
out
in
cmpsl
pushf
jnp
mov
xchg
mov
sub
lea
adc
or
dec
repnz
imul
and
mov
xchg
or
mov
sub
push
jg
jne
icebp
xchg
jl
adc
insl
cmpsb
je
push
pop
fwait
iret
shr
mov
idivl
add
popa
mull
xlat
movsl
outsl
sub
pop
jp
xor
pop
and
lcall
fisttpll
jbe
lds
test
aas
lret
movb
mov
sub
push
int
and
cmp
stos
fidivl
dec
push
xchg
shl
xchg
jbe
fadds
pop
pop
adc
mov
stos
dec
mov
inc
or
jbe
and
mov
out
lock
popa
or
mov
or
mov
dec
mov
sub
lds
mov
add
in
pop
in
xor
xchg
scas
popf
mov
imul
sub
subb
fdivs
rorl
dec
icebp
mov
mov
xchg
dec
xor
pop
sbb
cmp
call
iret
sbb
cld
pop
fwait
mov
je
ds
insl
in
mov
mov
adc
pop
das
cltd
or
mov
outsb
mov
je
shlb
add
xor
fdivp
and
jns
shr
xor
cmp
aaa
insl
mov
mov
dec
push
sar
fisubrl
jb
jg,pt
in
sub
cwtl
inc
xchg
push
outsl
and
call
mov
mov
or
adc
jg
outsb
sbb
mov
je
xchg
pop
outsb
dec
cs
incb
fbstp
add
add
outsb
ljmp
push
mov
leave
mov
enter
pop
adc
adc
adc
in
aad
mov
jne
int3
iret
shrl
mov
ss
sbb
add
dec
rol
lea
xor
gs
xchg
pop
mov
ficomps
enter
inc
call
cli
aas
and
dec
or
adc
add
mov
fnstcw
dec
rolb
mov
cli
ds
cli
dec
jmp
scas
lahf
push
bound
insl
fdivrs
push
mov
xchg
cmp
or
and
idivl
mov
push
mov
xchg
mov
or
or
rorb
push
movsb
mov
cli
jmp
add
adc
dec
aam
call
sbbl
aad
sahf
sub
lret
push
clc
dec
jl
inc
aad
inc
cwtl
lds
mov
mov
add
and
lock
sub
test
loopne
push
mov
lods
lock
aaa
pop
and
idivb
cmp
jp
xchg
std
jp
jbe
push
cmp
push
rorb
sarl
mov
and
mov
call
xchg
and
shrb
into
mov
inc
add
sub
dec
push
scas
scas
jo
xor
mov
rcrl
inc
and
cli
subl
sar
lret
lret
shlb
das
insl
clc
mov
out
je
decb
in
testb
push
push
sub
jo
testb
push
loop
jp
push
rcr
bound
jge
adc
fwait
ljmp
mov
imul
jb
fbstp
cmp
cli
pop
mov
aam
outsl
mov
adc
mov
adc
fwait
aam
fsubr
incb
jp
mov
shrl
adc
outsl
imul
call
sbb
ja
mov
in
add
push
push
imul
inc
push
pop
or
fildl
inc
mov
in
or
push
mov
mov
out
add
mov
ja
and
adc
das
sbb
add
xor
dec
and
mov
pop
mov
sbb
mov
xchg
ficoml
xchg
mov
add
icebp
dec
adc
insl
sub
movsb
sub
movsb
jnp
clc
xchg
sub
mov
imull
gs
and
cmpl
dec
sub
aas
mov
cli
in
push
in
or
or
mov
imul
mov
sti
add
mov
test
or
out
or
mov
inc
xchg
xchg
inc
pop
push
inc
or
cmc
stos
adc
jno
rorl
mov
aad
jbe
push
inc
test
in
push
es
mov
cmpsl
call
pop
sarb
add
test
test
and
mov
mov
out
mov
add
mov
mov
jno
xchg
adc
int
dec
xor
pop
jae
sti
cmpsl
fsub
imul
popa
adc
cmp
add
mov
cmc
push
pop
fwait
adcb
mov
icebp
or
cmp
jge
inc
sbb
xor
cmp
in
xor
lret
test
cmp
dec
add
scas
loope
clc
ss
pop
ffree
repnz
mov
das
js
cli
xor
loopne
je
ret
test
shl
flds
dec
adc
repz
das
das
mov
pusha
cmp
dec
test
adc
std
clc
out
sbb
pop
std
out
in
popa
mov
imul
clc
lock
mov
hlt
mov
xchg
sbb
aad
sub
test
arpl
xchg
addl
dec
xor
and
out
inc
cmp
mov
ja
cmc
repnz
add
cmc
daa
das
xchg
xor
inc
mov
outsl
fisubrl
adc
push
or
sub
ror
pop
lahf
inc
or
lock
xchg
and
mov
mov
xor
mov
testb
adc
push
andl
js
rorl
mov
aad
mov
addb
lock
xor
dec
daa
jno
repnz
das
movsl
mov
push
pop
aam
sub
adc
aam
push
rorb
movsb
jbe
adc
mov
outsl
sbb
sbb
ret
or
xor
cmpsb
loopne
add
sarl
push
add
adc
jo
aam
pop
add
xchg
lods
int
ja
push
shlb
test
sbb
cmpsb
xchg
xor
aam
loope
and
sbb
mov
mov
adc
aas
aaa
loop
hlt
hlt
dec
push
inc
mov
and
push
and
fs
sub
push
adc
cmp
fisubrs
xchg
xchg
cli
mov
mov
imul
je
outsb
adc
movsl
cwtl
insl
lods
pop
or
mov
lds
out
mov
xchg
jge
imul
pop
lret
fwait
mov
inc
push
pushf
and
ret
adcb
mov
pusha
pop
inc
adcl
xor
and
mov
in
cmp
stos
enter
sti
mov
fcompl
sti
lock
loop
cmp
or
mov
mov
jne
sub
cltd
loopne
scas
inc
outsb
dec
jecxz
frstor
cmp
or
jg
pop
test
xorl
rcrl
add
and
inc
adc
fwait
jno
call
lock
scas
inc
jne
lcall
rol
dec
popa
adc
ret
push
jne
stos
pop
cmpb
test
mov
sub
int3
mov
out
add
or
fisubs
addr16
inc
or
roll
ljmp
add
push
enter
cmpsb
jbe
xchg
sahf
cmp
dec
xor
mov
in
inc
fsubrl
push
fwait
int
push
adc
je
filds
shlb
push
rcl
push
jo
pop
rorl
repz
lahf
jp
mov
subl
js
cwtl
cwtl
cmp
xchg
jo
jo
pop
pop
pop
lea
test
xor
adc
pop
dec
xchg
jbe
pop
clc
insl
popf
xlat
int3
mov
scas
push
inc
push
jae
cmp
ss
es
std
pop
fcmovbe
cmp
cmp
mov
pushf
sub
mov
lahf
or
sbb
js
into
dec
daa
mov
lock
inc
mov
cmp
inc
mov
adc
mov
nop
rorl
push
cmp
jne
adc
push
out
cmpsb
jle
mul
mov
ljmp
dec
mov
xor
js
cmp
ret
int
adc
les
cmp
adc
mov
jmp
lcall
jo
lret
fnstsw
mov
cld
cwtl
adc
mov
lahf
mov
sahf
mov
fisttpl
cld
es
loopne
sahf
sahf
fistpl
pop
xor
popf
cld
outsl
inc
stos
imul
clc
mov
push
lock
or
out
shlb
sti
pusha
sti
and
pop
push
das
xor
out
push
rcrb
xchg
fistpll
das
mov
dec
repz
jecxz
push
mov
js
aas
mov
xor
popa
outsl
je
arpl
or
notb
push
dec
int3
popf
js
int
pop
xchg
push
fnsave
fwait
mov
cmp
mov
cmpsb
fcoml
je
adc
pop
mov
sub
jmp
pop
test
adc
adc
cmpsl
cmp
ret
mov
push
pusha
mov
and
lock
outsl
pop
mov
int
das
adc
std
dec
mov
xor
sbb
cmp
jno
sub
sbb
jnp
pop
push
lcall
push
cld
add
in
cmpsb
imul
outsl
ja
js
ja
or
clc
jne
fdivs
outsl
xchg
test
aas
push
cwtl
fistpl
or
out
push
xchg
adc
mov
lds
sub
sub
addl
jmp
int
mov
pop
push
movsl
push
sbb
xor
ss
out
push
gs
jne
inc
insb
sbb
call
in
mov
fiaddl
pop
mov
rcl
dec
lock
mov
popf
cmc
xchg
outsl
aas
adcb
mov
adc
mov
sbb
or
add
push
faddl
lea
sahf
ret
ljmp
and
or
sbb
call
mov
mov
push
add
add
push
mov
cmc
jl
add
add
mov
xchg
xor
gs
push
jmp
daa
icebp
jae
xor
test
add
or
adc
or
adc
push
cmc
mov
cltd
cltd
jle
sarl
xchg
mov
or
and
ja
in
xchg
gs
hlt
das
lret
and
fwait
sbb
xchg
enter
xor
xchg
mov
mov
jg
js
pop
ljmp
insl
aad
or
mov
and
mov
int3
mov
pop
pop
shrl
mov
ja
aaa
jle
and
addr16
dec
cmc
cmpsb
mov
cmp
dec
xor
orl
addb
sub
pop
add
sbb
pop
aad
or
pop
jae
lcall
call
pop
pop
sbb
adc
cmp
mov
fcmovbe
sbb
scas
std
mov
dec
sbb
sub
xor
add
loope
outsb
loopne
xor
and
iret
and
fcompl
or
mov
pop
push
add
push
int
mov
cmp
xlat
jb
outsl
dec
popf
into
insl
rcrb
and
andb
xor
xchg
sti
insl
push
aaa
pop
lock
pop
and
in
pop
xlat
adc
xchg
mov
mov
test
and
or
insb
shlb
cmp
outsb
xor
outsl
adc
or
cli
mov
sti
les
mov
fadds
xor
into
nop
fnsave
test
jmp
stc
inc
and
xor
push
mov
adc
movsl
fistps
xor
int
testb
push
add
and
mov
push
inc
xchg
add
mov
test
popf
jl
lret
mov
xchg
dec
imul
enter
lcall
das
mov
xchg
adc
mov
mov
mov
adc
dec
lahf
sub
and
push
pop
lcall
lret
xor
xchg
mov
xor
sahf
outsb
jge
sbb
lea
icebp
xor
sbb
inc
scas
sub
adc
jo
sti
test
insl
in
dec
aam
push
push
jnp
insl
lret
cmc
out
cmpsb
pop
and
lock
mov
and
push
or
pop
fistps
dec
movsl
pop
pushf
jle
mov
pop
ss
push
mov
mov
mov
outsl
in
jns
push
sbb
or
or
lahf
outsb
adc
sahf
in
adc
inc
enter
mov
fisubrs
fwait
add
mov
movsb
subl
imul
pushf
outsl
cmp
bound
ss
pop
mov
mov
push
insl
mov
adc
insl
call
mov
cmp
push
sub
mov
rcrl
push
sbb
lahf
lds
fmul
mov
jnp
add
pop
sbb
lcall
jge
fwait
or
and
icebp
int
icebp
ss
lea
out
jl
insl
fdivl
add
or
test
adc
add
outsl
mov
clc
and
inc
mov
jl
mov
mov
pop
test
lock
jle
iret
inc
jg
and
adc
inc
imul
add
mov
loopne
xchg
pop
sub
xchg
mov
and
inc
mov
rolb
adc
cmp
in
add
mov
dec
dec
int3
and
xchg
push
jne
loop
ja
dec
xor
lock
and
sub
dec
inc
mov
sbb
inc
pop
ss
push
add
sbb
in
dec
pop
xchg
fidivrs
in
pop
loope
add
out
xchg
dec
jle
sbb
dec
xor
pop
mov
add
or
cmp
inc
stc
pop
cmp
fucomip
xor
adc
inc
cli
cwtl
lods
jae
inc
xchg
lods
xor
cmp
cld
sub
mov
add
dec
or
or
dec
pusha
add
mov
add
mov
les
or
aas
jb
cltd
cmpsl
push
jge
push
not
sub
xchg
icebp
cltd
enter
clc
aaa
fnstcw
jle
sub
ret
inc
out
faddl
lret
mov
mov
ret
cmp
fcomip
jb
into
sbb
insb
mov
cmp
xor
imul
fimull
push
pushf
and
gs
mov
or
std
inc
mov
or
cmpsb
bound
jmp
jmp
out
rorb
cmp
lds
pop
mov
aas
rcrl
push
push
sbb
fcompl
mov
mov
jmp
cld
andb
test
inc
xor
hlt
sbb
shll
scas
adc
mov
push
scas
shrl
adc
or
pusha
mov
out
cld
dec
popa
imul
mov
fsubrs
mov
and
outsb
ja
xor
and
imul
stos
jbe
mov
sbb
and
aaa
sub
sbbl
mov
cltd
icebp
sar
cmp
dec
jmp
rep
dec
cld
add
not
js
sbbb
les
call
adc
outsl
push
dec
sbb
mov
pop
sub
int3
je
xchg
js
or
in
sub
and
add
stos
rclb
lds
in
stos
lea
inc
adcl
bound
and
pop
je
loope
clc
jge
inc
fisubrl
mov
inc
mov
fcmovb
jg
pop
repz
out
jmp
or
enter
pop
pop
das
cmp
ret
or
out
bound
arpl
push
pop
jl
dec
mov
movsl
fdivr
fs
cmpsb
outsb
in
sbb
outsb
mov
sbb
sbbb
dec
hlt
lds
jmp
sbbl
aad
add
jecxz
xchg
test
adc
sub
lahf
ud2
mov
sbb
mov
pop
int3
or
add
jp
adcb
dec
jp
test
ret
fistpl
fnsave
dec
jp
popa
inc
cmp
dec
insb
cmp
and
addr16
push
mov
cmp
push
mov
fldcw
int
orl
outsl
clc
jmp
sub
pop
popf
fidivrl
pusha
inc
insb
aad
mov
and
out
out
push
cltd
pop
sbb
adc
enter
rcll
sbb
jb
cmovle
add
pop
xchg
loopne
xor
jmp
pop
mov
xor
dec
and
mov
test
mov
data16
cmp
inc
ljmp
and
inc
mov
xchg
loope
pop
lds
push
sub
fnsave
adc
sbb
xorb
add
sbb
insb
iret
sbb
jle
mov
sub
dec
rol
xchg
clc
imul
jne
cs
and
or
xchg
fucomip
clc
testl
pop
andb
add
cmp
or
fidivs
ds
aam
pusha
or
pop
sbb
cmp
cltd
mov
fisubrl
aaa
add
fisttps
shlb
nop
jnp
mov
lock
fistl
fdivs
test
mov
sbb
jb
inc
ret
mov
test
lea
fistps
cli
cmc
out
or
sub
mov
mov
push
mov
test
lds
inc
cld
cmp
xorb
das
lea
push
and
mov
mov
sti
cmp
aam
dec
jl
mov
outsb
pop
test
and
dec
dec
sub
insb
mov
mov
jecxz
adc
mov
in
mov
sub
test
mov
scas
cld
adc
pop
pusha
fcoms
fildll
bound
rorl
fistpl
inc
jl
ret
in
inc
insb
xchg
sbb
pusha
cmp
mov
add
cmp
enter
dec
sub
in
adc
outsl
lret
jg
sub
sti
xchg
outsb
ss
sub
xorl
mov
jnp
fs
add
roll
fst
and
dec
mov
cld
insl
adc
stc
shl
push
cmp
mov
sbbb
push
or
sahf
adc
and
xchg
lds
xchg
adc
cmp
pusha
out
mov
std
push
lds
addb
sbb
stos
shrb
movsl
pop
ret
inc
dec
les
adc
jne
pop
sbb
idivb
pop
fistpl
cli
mov
dec
dec
pushf
rcr
fs
sbb
cmp
xor
or
pop
pop
mov
push
sbb
int3
sbb
popl
inc
push
jnp
mov
test
cmpsl
mov
sbb
mov
jecxz
jns
xchg
pop
fdivrs
lds
outsb
orb
dec
cmpl
and
in
daa
fs
test
out
fnsave
jmp
jg
lahf
shlb
xchg
pop
pop
push
inc
aas
adc
dec
in
and
adc
lods
adc
daa
fimull
or
mov
stos
and
add
pop
jb
js
sbb
adc
popa
in
or
icebp
adc
sarb
ljmp
scas
sub
mov
inc
mov
cmp
cmpsl
out
sub
je
sbb
bound
cltd
push
mov
rcrb
dec
and
inc
mov
aad
mov
jl
test
add
jge,pn
rcl
pushf
xor
pop
ret
or
shl
adc
fcompl
scas
notl
aad
mov
push
sub
test
mov
push
cs
sbb
jno
dec
mov
add
ja
call
and
xor
test
pop
fdivrs
movb
xchg
or
shll
test
js
test
fisubl
inc
xchg
xor
mov
faddl
mov
das
sbb
fistl
cmp
call
repnz
mov
jmp
loope
loope
sbb
cmp
loop
fwait
and
insl
add
rol
call
bound
andb
pop
cmpsl
jb
decl
out
popf
adc
icebp
jle
adc
add
sbb
mov
insl
lock
mov
sbb
xchg
mov
lods
mov
pop
pop
imul
fisttps
mov
dec
pop
inc
fildl
or
loopne
pop
sub
inc
mov
test
mov
push
push
inc
call
inc
pushl
std
jl
lods
xchg
add
out
mov
aaa
push
push
call
mov
loop
adc
pop
outsb
sbb
in
test
aad
sub
fistl
cmc
push
int
adc
inc
mov
outsb
push
xchg
inc
loopne
jmp
push
push
insb
rcrb
mov
xorb
inc
mov
lea
std
nop
pop
fmul
es
icebp
inc
mov
mov
pop
add
fists
pop
pop
test
je
imull
cwtl
cmp
mov
xor
js
or
addb
pop
rcr
xor
pop
ficompl
mov
sub
mov
jmp
outsb
jg
and
mov
pop
mov
sub
pop
inc
sbb
fcomi
bnd
pop
mov
pop
sbb
inc
mov
mov
fcmovbe
in
out
sub
shlb
fbstp
push
sbb
fistl
adc
sti
aam
mov
ja
add
mov
adcb
ficomps
mov
rolb
xor
xchg
jbe
ffree
rcrb
or
push
psrld
xor
roll
hlt
mov
sub
and
push
ss
inc
hlt
testb
sub
cwtl
add
roll
mov
and
lods
ss
inc
mov
sbb
mov
fbstp
mov
push
aas
loopne
push
ds
insl
shr
sub
stos
div
movsl
outsl
mov
iret
scas
movsb
push
sahf
out
dec
adc
fdivr
lods
mov
jno
and
sbb
fiadds
fadds
enter
insl
jg
add
jg
pop
in
call
cwtl
lods
mov
pop
jge
xlat
clc
and
ljmp
ss
jno
add
or
popa
sti
js
mulb
stos
pop
test
shll
aam
push
sbb
imull
push
pop
stos
bound
pop
lret
std
rolb
adc
or
je
cmp
arpl
xchg
aaa
ret
mov
icebp
ljmp
mov
push
jb
jmp
add
insl
pusha
add
popf
mov
js
xor
out
or
outsb
loop
scas
dec
js
fdivrl
xchg
dec
out
mov
sarb
popa
add
xlat
sub
mov
xor
psubb
data16
lahf
xchg
inc
and
sub
jmp
push
lock
sub
mov
rcr
mov
cmp
sub
add
sub
das
sub
xchg
or
cmp
mov
add
adc
test
xor
sub
sbbb
xchg
lds
or
enter
mov
jns
in
bound
lods
xor
fidivs
push
fstl
adcb
xchg
and
sub
xor
ret
fists
xchg
jle
cmp
fisttps
jns
and
outsl
dec
rcl
or
or
or
xchg
sub
in
out
push
or
fdivrs
stc
imul
cmpsl
orl
and
popa
aad
mov
xor
push
addr16
inc
pop
aas
inc
bswap
mov
dec
add
inc
xchg
icebp
addb
mov
add
add
and
xor
push
xchg
lock
test
out
mov
add
fists
shrb
bound
sub
loope
addr16
lock
mov
inc
mov
fwait
xor
xor
imul
jl
cs
adc
ss
rol
in
into
pop
lret
sub
stc
add
lea
push
xor
push
fucomip
jnp
xchg
nop
pop
pusha
adc
cltd
rorl
out
push
sub
jne
jb
out
test
or
jl
pop
scas
sti
pop
and
fisttps
fdivl
ret
jmp
lods
pop
sahf
aad
inc
ja
mov
scas
jmp
into
in
mov
mov
fbstp
mov
cmpsb
push
cwtl
pop
outsl
add
je
loopne
enter
jge
loope
jne
lock
inc
mov
mov
cmp
inc
lock
mov
add
movsl
out
or
fisubrl
cli
loope
mov
loop
aaa
sub
test
outsl
inc
sub
push
add
inc
out
cltd
add
cs
int
inc
mov
in
loope
aam
mov
lock
lods
fistpll
push
je
test
pop
jl
jne
dec
cmpl
or
and
ror
xchg
pop
rorl
inc
es
pushf
pop
and
xchg
cwtl
cmp
push
cmp
pushl
cli
push
js
fldenv
push
cltd
xchg
add
push
div
jecxz
lahf
push
jp
orb
jp
adc
outsl
popf
mov
hlt
xor
or
inc
mov
sub
jns
leave
inc
add
bound
stos
mov
jns
push
mov
leave
xor
cmpb
icebp
dec
jo
inc
sub
cmpsb
xchg
and
fs
sub
outsb
fsub
lret
add
push
xchg
dec
adc
in
jmp
or
xor
mov
mov
icebp
scas
dec
aad
dec
jnp
call
lods
dec
cltd
sbb
loop
icebp
out
push
add
popf
xchg
jb
ficoml
fsubrp
mov
jns
loope
cmpsb
mov
inc
cmpsl
sbb
and
bound
pop
lods
xlat
das
jmp
and
clc
xor
mov
mov
out
mov
lret
push
je
nop
sub
ljmp
push
push
inc
imul
insl
insl
add
test
push
shlb
push
push
mov
push
push
xor
roll
jno
xchg
pop
push
pop
pop
sti
mov
xor
stos
adc
and
inc
sbbb
dec
jno
leave
sub
xor
mov
nop
mov
xchg
dec
loop
es
arpl
mov
imul
cmp
nop
mov
call
movsb
jle
pop
add
jmp
jmp
and
shl
shlb
sbbl
aam
je
xor
pop
arpl
dec
pop
jbe
lea
dec
add
push
inc
jmp
sti
mov
ss
test
outsb
push
ror
jmp
scas
or
xchg
daa
stc
shll
mov
mov
divl
mov
scas
push
movsb
mov
mov
shl
js
test
fiaddl
lods
push
scas
fisubrl
in
lcall
push
subb
outsl
or
pop
in
bound
andb
xchg
cmpsb
or
cld
dec
jmp
sub
add
cld
call
mov
jmp
lods
inc
jmp
lods
clc
orl
clc
pop
je
out
inc
imul
or
inc
inc
sarl
mov
pop
incl
pop
sub
push
mov
mov
push
loope
addr16
sub
out
mov
and
popf
jmp
inc
test
lret
ret
cmc
rcl
out
inc
adc
push
rep
movsl
mov
inc
jecxz
mov
movsl
mov
jmp
push
sbb
xor
pushl
jge
add
dec
dec
sub
fnstsw
fldl
adc
xlat
roll
lds
stc
mov
dec
pop
dec
lahf
int3
mov
push
cmp
inc
sbb
dec
pop
fs
cmp
aas
sbb
out
js
sbb
loop
cmp
inc
insl
adc
sub
mov
ljmp
subb
notb
xor
xchg
xchg
lcall
into
jmp
add
mov
pop
jl
ret
fildl
mov
cli
sahf
movsb
mov
or
inc
dec
pop
jp
cmp
and
sbb
or
dec
add
negl
inc
fisttpl
jecxz
stos
cmpsl
rcr
incl
mov
mov
dec
mov
loop
icebp
xor
cmp
jp
push
insl
mov
push
mov
mov
mov
cs
mov
cmpsl
jbe
inc
adc
adc
jns
inc
orl
mov
cld
bound
mov
pop
xchg
jo
clc
push
incb
shlb
ffreep
negl
push
sbb
loope
push
std
sub
sbb
fstpt
cmp
jne
lea
jno
pop
sbb
dec
js
int3
or
mov
pavgw
jp
scas
or
jno
int3
xchg
movsl
adc
fldl
adc
fwait
dec
cli
jmp
jns
pop
ss
mov
sub
out
ret
or
lods
xor
jmp
cmpsb
outsb
imul
leave
pop
xchg
fstpt
in
fistl
pushl
scas
sbb
adc
xchg
sub
push
mov
test
sahf
xor
icebp
push
int
cwtl
filds
fcoml
movsl
mov
dec
lcall
sbb
ss
filds
in
and
cmpb
cmpsb
cld
ds
test
mov
fnsave
push
or
add
mov
scas
mov
sub
rorl
jecxz
loopne
or
ret
add
xor
mov
pop
xchg
pop
mov
lret
loopne
mov
push
je
mov
pop
adc
scas
sub
out
test
call
out
sbbb
arpl
pop
mov
pop
and
xchg
jmp
loope
mov
dec
test
lods
xchg
xchg
shrl
push
xor
xor
mov
and
gs
push
gs
push
and
rcl
xor
adc
adcb
ds
push
inc
fistpl
loop
filds
sub
jo
pop
push
nop
rorl
add
and
outsl
cltd
xor
add
cmp
xor
adc
ficomps
mov
jo
xchg
jno
inc
aaa
mov
rolb
add
ret
clc
fwait
xchg
pop
outsl
jb
addl
pop
lret
in
fistl
cli
leave
mov
xchg
pop
icebp
or
imul
js
test
cmp
cmp
xchg
or
fwait
sbb
pop
push
cli
mov
or
jne
xchg
sub
ds
inc
sub
movsl
or
imul
aam
inc
loope
and
dec
out
xor
out
bound
push
dec
aad
in
in
call
mov
or
icebp
mov
jl
ret
jns
sbb
xor
arpl
xlat
cmpsl
or
push
sbb
pop
push
test
push
mov
mov
ss
int3
mov
xor
fistpl
jl
mov
shll
dec
adcb
pop
mov
mov
fidivs
jne
rorl
cmp
cwtl
in
mov
pop
or
bsr
add
inc
std
jo
aaa
push
outsb
ds
jbe
jge
cmp
mov
xchg
sub
inc
jle
sbb
or
mov
fildl
pop
jne
stc
cli
sbb
adc
lods
pop
dec
repz
das
adcb
inc
out
es
aam
adc
jns
loop
mov
push
sarb
fsubrl
lret
xchg
bound
and
out
adc
loope
xor
fcomps
ret
popf
and
test
cs
push
mov
jecxz
pusha
xchg
mov
pop
sub
les
xor
leave
call
mov
pop
sti
ret
daa
push
js
inc
stc
cmpsl
dec
fs
ret
mov
shrl
or
loope
aas
cmpb
push
sbbb
adc
pop
shld
repz
xor
in
inc
adc
dec
movsl
mov
xor
push
jmp
std
lods
test
add
add
out
pop
je
cmp
sub
insb
ss
jecxz
lahf
lcall
aam
push
lods
inc
in
mov
inc
filds
sti
push
insb
cmp
fldcw
and
push
mov
aad
cmp
sbb
add
js
rclb
cwtl
jae
or
mov
ss
fnstcw
js
push
adc
les
popl
sbb
adc
push
in
mov
jp
outsl
fdivr
pop
sub
xchg
push
add
test
mov
sub
mov
cmp
int3
pop
lods
fdivs
std
sub
jne
dec
and
movsl
incl
movsl
inc
jo
adc
add
dec
ljmp
andl
icebp
mov
push
push
add
push
dec
jae
push
jmp
testb
movsb
xor
ja
aas
dec
mov
dec
xchg
je
push
aaa
add
mov
cmp
data16
pop
sbb
inc
cmp
mov
popa
iret
in
add
subl
mov
adc
popa
sbb
add
jecxz
mov
cld
les
js,pt
sbb
in
inc
xchg
pop
out
jecxz
add
pop
cmp
pop
lcall
ret
mov
or
jae
test
clc
mov
push
lds
adc
in
xchg
xor
cmp
in
ret
cmc
or
dec
xchg
inc
push
into
loop
mov
cwtl
add
sub
je
mov
jne
call
mov
cli
xor
shrb
mov
ss
aaa
sbb
or
pop
mov
mov
add
or
dec
jnp
sub
sub
pop
jp
cli
stos
stos
adc
xchg
push
add
shrl
dec
and
jbe
testl
mov
fstpl
push
xor
jne
mov
repz
jg
fisttpll
psubsb
in
outsl
jb
lret
xor
imul
out
or
inc
pop
fdivl
addb
test
or
fadd
incl
push
js
pop
aam
enter
and
xchg
outsl
adc
aad
cmp
cmp
in
or
jge
in
mov
xor
dec
ret
add
inc
fsubl
pop
ss
mov
ss
mov
inc
sbb
sbb
sub
outsl
notb
mov
test
cmp
pushf
mov
int
pop
and
pop
push
mov
push
or
sbb
xchg
mov
nop
or
pop
xor
xchg
std
and
pop
and
inc
orb
fdivrs
push
mov
subl
jo
push
bndstx
fiaddl
aaa
rolb
clc
push
push
int
and
insl
jecxz
test
sbb
loope
cld
das
sbb
xor
das
sahf
movsl
popa
cltd
fdivs
test
cli
addb
mov
mov
or
dec
pop
ret
inc
xor
sbb
push
lret
xor
popa
jb
insb
cmp
inc
or
adc
mov
sbb
dec
xor
jmp
cmp
loopne
pop
sarl
clc
ja
xor
iret
push
out
add
mov
inc
in
shll
add
cmp
push
push
mov
sarb
decl
loope
pop
pop
imul
mov
aam
mov
cmc
cltd
ss
dec
push
mov
push
pop
sub
into
push
in
push
push
leave
mov
adc
lods
add
lahf
fs
rcrb
outsb
push
nop
stos
pop
insb
jg
xchg
jge
sub
cmpsl
pop
adc
jb
adc
or
lds
cmpsb
cmp
jmp
xor
cs
aas
lock
cs
cmp
push
repz
push
imul
movsl
aad
jecxz
enter
inc
or
test
js
inc
push
stos
mov
out
jae
lock
gs
loopne
push
ljmp
aas
pop
cltd
jmp
pop
in
jl
mov
cli
or
mov
xor
sti
inc
divl
add
fiadds
cwtl
hlt
jns
fstpl
push
adc
bnd
mov
mov
mov
cmpb
sbb
mov
jle
sahf
xor
insl
ljmp
daa
stos
sub
out
movb
inc
subb
mov
add
sbb
push
in
fcom
and
jle
jmp
sbb
hlt
mov
aam
lret
or
xor
jl
aad
ljmp
mov
outsl
scas
xchg
stc
or
orl
sbb
test
out
cmpsl
arpl
ret
popf
mov
or
test
das
sub
push
negl
out
lret
jb
push
dec
dec
xor
inc
out
and
ret
jge
stos
shrl
pop
mov
add
and
and
add
jecxz
popa
push
push
fiadds
pop
mov
cltd
or
xchg
cmp
aaa
push
rorl
incl
mov
push
arpl
loopne
xchg
js
jae
sti
cvtps2pi
ret
add
pop
fs
pop
adc
add
ror
sub
pop
mov
push
je
lods
enter
add
sub
jle
cmc
imul
jmp
rcl
xchg
lds
popf
sub
dec
pop
inc
std
clc
cmc
loop
sub
sbb
outsl
and
loopne
and
xlat
popa
push
insb
fists
cmp
imul
mov
dec
subl
iret
mov
mov
mov
xlat
call
adc
aaa
fsubrl
mov
aam
xchg
rcr
pop
cltd
cmp
mov
movl
mov
std
add
mov
mov
insl
out
shll
icebp
jb
jnp
mov
add
shrb
sub
sbb
mov
shrl
fadds
mov
xor
mov
sbb
add
jge
je
movsl
jno
addl
add
cwtl
mov
and
cmpb
or
mov
aas
push
out
sarl
rorl
jmp
dec
sbb
cmp
fsubs
fisttpll
xchg
xor
or
sbb
call
jle
add
outsl
fucomi
test
pop
and
fs
mov
lcall
les
inc
enter
clc
mov
adc
xchg
jns
std
and
movsl
daa
pop
cmp
loop
or
and
push
adc
cmc
out
or
jb
mov
ljmp
jl
lock
push
pop
aad
lahf
loop
xchg
and
divb
add
inc
popf
fcmove
in
js
push
clc
inc
inc
das
popf
sbb
add
push
ss
out
in
pop
std
cmpsl
ss
rclb
hlt
scas
cmp
jg
std
pop
jmp
hlt
or
jecxz
mov
cwtl
mov
add
cli
inc
pop
outsl
xor
repnz
je
mov
xchg
or
xor
mov
mov
xchg
gs
jbe
js
adcl
xor
lds
push
mov
add
mov
dec
cmp
cltd
add
cmp
xchg
add
inc
xor
cmpsb
pop
add
nop
repz
inc
jl
sbb
push
loope
in
into
sahf
mov
pop
js
xorb
ss
leave
pop
mov
inc
sarb
stos
dec
dec
ds
adc
or
jmp
cmp
cmc
cmp
icebp
ret
insb
mov
jno
sub
mov
pop
cmpsb
stc
test
push
bound
mov
cld
or
adc
push
jo
push
sbb
or
mov
jnp
nop
int
dec
lods
push
mov
add
aas
lock
xchg
add
pop
cmp
imul
push
dec
xorb
mov
sub
add
popl
pop
aad
outsb
test
jo
dec
fcoml
inc
mov
test
xor
ret
ds
dec
stc
sbb
mov
cmp
mov
test
pop
filds
outsl
loope
adc
fstpt
inc
pop
cmp
ficoms
mov
ljmp
add
pop
push
xchg
and
mov
popa
arpl
inc
pushf
sbb
pop
add
ror
jne
pop
mov
or
out
push
jnp
inc
pop
sar
fistl
mov
push
je
insb
insl
aad
add
mov
ret
sti
ret
and
movsb
ret
push
dec
icebp
mov
push
pop
arpl
mov
in
jecxz
fsubrl
out
jge
pop
mov
aas
rorl
add
jb
xchg
fisttpl
fimull
cltd
add
cmpsl
orl
push
sti
stos
sub
int
test
dec
arpl
add
lods
inc
add
sbb
mov
testl
aam
xchg
nop
dec
int3
fldcw
inc
icebp
jle
pushf
aam
call
push
jnp
aaa
mov
test
xor
pop
sub
sti
test
push
out
jbe
pusha
cwtl
push
adc
dec
ljmp
imul
pop
push
or
dec
paddw
sbb
jg
add
jl
loope
ret
pop
lret
outsl
mov
push
xchg
shll
lret
pushf
fisttpl
mov
int3
loop
sti
mov
cmc
add
mov
pop
rcrl
xor
dec
fisubrs
inc
cmp
in
ror
push
es
push
ret
fst
outsl
adc
ficoml
ja
mov
sbb
and
scas
pop
arpl
ja
adc
push
sbb
xorb
push
inc
cmp
fs
mov
outsl
cmpsb
idiv
cmp
push
dec
push
data16
adc
in
shll
data16
pop
sbb
mov
cs
insl
in
jle
cmp
aad
xchg
pop
aas
cmp
je
and
imul
inc
fistps
movsl
mov
pop
sbb
jbe
cmpsl
ret
int3
and
out
outsl
mov
mov
loope
cmc
inc
inc
movsl
mov
testb
jp
push
shrl
mov
or
sub
push
fistpl
and
xor
jge
test
leave
mov
fadds
stos
adc
fstpt
out
out
outsb
add
jo
aas
loopne
xor
enter
test
cmpsb
sbb
xor
pop
inc
push
mov
icebp
xchg
push
inc
xchg
cli
call
outsb
ret
dec
in
cs
cmp
mov
je
and
and
aam
mov
mov
pop
mov
sbb
sbb
mov
mov
mov
sbb
xor
xchg
jp
and
pop
or
xorl
jp
addr16
dec
xor
and
sahf
cli
lahf
repnz
or
loope
mov
xor
push
cmpsb
dec
movl
das
icebp
sar
js
push
cltd
movsl
shll
out
or
hlt
shlb
fs
jl
shll
cmp
out
and
stc
in
sahf
push
ds
sbb
or
add
in
jae
inc
jb
insb
jg
scas
mov
and
push
adc
and
pop
adc
adc
fsts
xchg
lds
imul
add
popf
sti
push
imul
adc
pop
mov
rcll
mov
push
sti
shll
add
fnstenv
aad
mov
adc
xlat
pop
in
stos
pop
insl
sub
loop
mov
xor
filds
fsubs
add
aam
jmp
leave
daa
push
mov
aaa
push
xlat
xlat
leave
sbb
cmp
adcb
push
xor
fstpt
jp
pop
notb
dec
imul
ljmp
dec
into
cmp
or
test
push
pop
cmp
sub
dec
imul
dec
mov
ret
jecxz
dec
gs
jns
sbb
das
mov
or
outsb
inc
dec
adc
out
lock
enter
in
js
outsb
out
fsubs
stc
das
xor
push
xchg
dec
js
testb
pop
mov
add
push
sbb
lahf
ljmp
pop
sub
loop
fwait
adc
mov
cmpsl
daa
push
pop
bound
lahf
push
shll
and
and
js
aam
ljmp
clc
adcb
xor
rclb
or
mov
rclb
mov
lock
std
sub
or
jecxz
xor
jl
rcrb
inc
in
mov
lods
push
mov
aas
push
lock
xor
sub
dec
je
cmp
pop
lahf
in
jmp
cli
pop
mov
mov
stos
es
xor
je
pop
pop
or
add
sbb
icebp
addl
pop
or
test
arpl
setb
pop
ds
inc
out
dec
pop
sbb
sub
test
jne
loopne
xchg
mov
xchg
dec
dec
sahf
decb
hlt
mov
xchg
sahf
and
ds
xchg
cs
xchg
out
lock
mov
lcall
js
lods
adc
lods
out
into
inc
subl
mov
in
test
pop
xlat
inc
ret
lret
xchg
cmpsb
dec
inc
out
mov
outsb
loope
mov
or
out
bound
lahf
jg
pop
incl
and
mov
or
addr16
push
sub
mov
push
pop
mov
js
jle
das
sarb
sbb
push
jp
sub
pop
insb
nop
fdivs
dec
pop
sub
outsb
inc
loope
push
in
push
sbb
jmp
xor
dec
mov
inc
jns
cmp
pop
mov
fcompl
push
push
mov
inc
js
push
cwtl
pop
jle
lds
aam
xchg
mov
dec
insl
sbb
decb
ja
lahf
pop
dec
packsswb
jp
cmp
adc
and
in
jo
and
add
push
pop
push
ret
mov
jl
xchg
sub
and
cmp
rolb
xchg
mov
jbe
xor
pop
mov
jo
cld
mov
hlt
cltd
or
cmp
aaa
sub
inc
frstor
mov
mov
xlat
lock
lods
sahf
mov
shrb
xchg
xchg
jmp
imul
dec
sub
out
aam
adc
sbb
or
xchg
cmp
add
adc
pop
mov
sbb
nop
fnsave
jg
dec
arpl
rcrl
lods
and
inc
or
xor
fnstsw
call
sub
shrl
mov
sub
mov
mov
ljmp
pop
push
sbb
push
popf
pop
xabort
mov
gs
push
mulb
out
insl
mov
aam
sahf
sub
push
popa
inc
push
fisubrs
fstl
push
rcl
adc
aas
xchg
popf
mov
test
lcall
outsb
das
inc
adc
fisubl
sarl
subl
push
pop
clc
shrd
pop
dec
xor
inc
lcall
and
pushf
cmpsl
adc
jns
roll
rorl
movsl
out
push
loopne
mov
or
out
inc
cmpsl
cmp
popf
js
js
addr16
bnd
add
xchg
and
int3
push
cmpb
movsl
push
sub
jecxz
aaa
cmp
or
insl
add
ljmp
hlt
push
add
sti
movsb
add
out
subl
pop
mov
popa
sbb
dec
rcr
dec
in
dec
sbb
in
pop
mov
mov
pop
test
pop
xlat
pop
jmp
call
test
sbb
sbb
nop
jbe
inc
mov
push
jge
or
movsl
test
aam
jnp
pushf
xchg
mov
pop
out
aam
push
and
xlat
jecxz
ja
shrb
pop
jmp
push
sub
fdivrs
popa
in
or
mov
xor
xchg
mov
mov
sbb
dec
jl
cmp
movsl
into
jg
mov
jecxz
cmc
pushf
xchg
sub
sbbb
fcomp
mov
push
xor
insl
add
mov
bnd
fcoml
mov
clc
push
xchg
push
push
inc
push
push
pop
add
cli
xor
adc
pop
mov
push
orl
hlt
push
aad
push
push
jg
mov
mov
xor
mov
push
call
mov
leave
rolb
iret
rcrl
add
jno
jb
addl
imul
xor
pop
lods
add
xor
fdivr
shll
adc
cmpsb
rolb
daa
fcmovne
cmpsl
outsl
push
and
inc
push
or
test
pop
add
sti
dec
mov
adc
cmp
mov
xchg
xor
push
jae
xor
pop
mov
push
andb
fsubrs
sub
push
add
rcll
and
sbb
jne
cmp
js
aam
sbb
cmp
sub
jp
add
bound
inc
mov
mov
or
into
inc
adc
fimuls
mov
sahf
hlt
xchg
push
jg
into
sbb
addr16
lret
sbb
bound
scas
fwait
divl
jmp
outsb
xor
push
cmpb
inc
pcmpeqd
sbb
adc
push
sbb
inc
add
into
ror
or
ror
xor
add
xchg
outsb
pop
mov
cmp
add
adcb
sub
jle
mov
jmp
sbb
mov
mov
mov
loope
iret
push
fwait
cmp
and
lods
cmp
pop
and
or
mov
inc
mov
arpl
mov
sbb
test
adc
aaa
push
mov
push
mov
cli
jo
cld
cmp
in
lret
xchg
push
mov
insl
aaa
mov
sti
pop
sub
aas
jo
adc
ss
lcall
shll
push
sbb
pop
mov
dec
es
cld
jecxz
stos
xchg
and
cmp
mov
dec
cmp
pusha
cmp
in
das
xchg
mov
xchg
pop
ficoml
fcoml
or
add
loopne
mov
xchg
adc
lods
and
ja
cmp
sub
xchg
mov
jb
inc
sub
test
hlt
aad
dec
out
dec
adc
cwtl
aad
dec
fadd
xor
adc
jno
pop
aaa
aam
push
add
push
or
jne
and
cld
daa
mov
dec
mov
inc
or
pop
jmp
test
inc
fdivl
adc
add
lds
js
icebp
sbbb
sub
fs
int3
pop
jbe
std
mov
out
inc
and
adc
pop
fstpt
adc
pop
adc
loopne
mov
sbb
push
add
inc
xchg
out
arpl
push
ljmp
and
stos
push
and
insl
mov
es
test
pusha
jl
lock
lcall
cmp
mov
je
rolb
fstpt
xor
pop
cli
insl
xor
add
ds
outsb
lcall
xor
inc
cs
lds
xchg
add
jmp
test
lods
add
jne
popa
jg
or
sbb
pop
loope
xchg
mov
lock
xchg
pushf
mov
sti
mov
rcr
dec
xor
sbb
jne
mov
fdivs
mov
lret
mov
sbb
or
out
aaa
dec
and
js
add
pop
lcall
test
jmp
mov
push
push
add
jl
mov
sbb
inc
jno
mov
aas
push
shll
fdivl
lret
xor
xorl
xor
adc
jl,pn
pop
test
incb
ljmp
fs
xchg
lret
jl
insb
cld
mov
adc
xchg
cwtl
xlat
les
adcl
pop
inc
sahf
inc
and
outsl
ljmp
push
insw
dec
push
insb
sub
out
or
les
lea
sbb
push
cs
dec
mov
daa
add
mov
mov
xor
mov
and
icebp
jbe
jmp
jnp
lods
ds
mov
outsb
out
and
sub
sahf
sub
sub
mov
popf
sbb
outsl
jl
mov
mov
pop
jbe
xchg
mov
mov
cltd
add
pop
clc
ficoms
imul
adc
sub
aam
lock
int
scas
cs
pop
pop
add
inc
xor
clc
stc
rorl
test
or
mov
scas
clc
or
xchg
subb
inc
xlat
or
ret
mov
enter
cmp
mov
popf
dec
rcrb
fwait
ja
imul
inc
flds
pop
dec
test
jecxz
ss
sar
lock
pop
rorl
xlat
or
mov
mov
push
pop
pop
dec
inc
fs
incl
xor
adc
imulb
loop
daa
mov
orb
or
in
xchg
popa
inc
aaa
in
inc
adc
pop
std
insb
leave
aam
jge
loopne
mov
jo
subb
aas
xlat
dec
bswap
xchg
mov
dec
jge
lock
mov
sti
sub
sbb
mov
adc
into
sahf
sbb
sub
shrb
fwait
mov
arpl
lds
or
cmpsb
sbbl
inc
rcr
or
jecxz
test
leave
sbb
jl
dec
lods
cmp
das
std
popf
jns
sbb
out
arpl
mov
cmpb
addr16
dec
adc
mov
pop
sub
rcll
sbb
mov
xchg
sbb
movsl
jnp
out
mov
es
iret
add
pushf
mov
mov
dec
mov
mov
scas
cmp
sub
addb
sbb
ret
and
daa
mov
lret
jno
les
add
jle
inc
fwait
les
inc
test
push
scas
mov
rolb
xor
imul
sub
xchg
adc
cmp
rcr
dec
imul
add
mov
cld
stos
clc
aaa
shlb
aaa
jl
pop
ret
add
add
sub
idiv
jg
movsl
test
cmp
aad
in
stc
nop
jecxz
cmp
out
filds
ja
js
movsb
push
mov
imul
mov
mov
jge
out
push
sub
dec
pop
mov
push
dec
push
jbe
jmp
pusha
mov
push
cmp
dec
ss
in
out
ljmp
push
mov
pop
jbe
mov
inc
cmp
pusha
adcl
ret
xchg
fsubp
test
hlt
push
es
rolb
inc
push
stc
pop
xchg
xor
test
sbb
mov
inc
add
lods
roll
inc
dec
xor
pop
cmp
aad
sub
cmc
jecxz
mov
push
sbb
push
mov
int3
adcl
cld
nop
mov
lcall
mov
inc
jmp
mov
inc
push
mov
adc
ljmp
push
fwait
sbb
jno
mov
jmp
loopne
outsb
mov
push
cmpl
sbb
and
cld
pop
incl
mov
mov
xor
test
pop
dec
movsb
push
hlt
test
and
ss
mov
inc
cli
mov
mov
loope
mov
out
mov
insb
call
stc
adc
jle
and
loopne
push
gs
cmpsb
pop
push
or
add
decb
lahf
test
add
push
roll
xrelease
or
add
sbb
pop
mov
inc
jnp
push
adc
sub
insb
insb
or
add
adc
dec
lds
popf
jo
mov
pop
fsubrs
cmp
test
mov
mov
pop
push
jmp
and
mov
clc
jg
in
scas
ja
sbb
dec
in
scas
ds
mov
xor
mov
movsl
cltd
lret
xchg
out
mov
push
mov
xchg
ret
aad
sbb
inc
inc
lock
rolb
inc
inc
imul
test
mov
push
push
sbbl
jnp
cli
pop
sub
xor
outsb
shr
inc
mov
cld
jae
or
push
cmc
mov
mov
fldl
insb
xchg
rcl
lods
jge
stos
outsl
nop
lret
orl
sbb
inc
fnstsw
xchg
adc
icebp
mov
add
movsb
cmpsl
mov
aad
sbbl
jnp
sub
es
jne
mov
fimuls
or
dec
rolb
cld
shll
or
and
cld
movsl
jmp
lahf
mov
les
pop
cli
shrb
in
es
and
lret
aaa
lcall
and
inc
inc
ja
mov
pop
daa
loope
mov
fcom
mov
leave
movsb
shr
dec
stos
in
mov
popa
add
push
pop
mov
std
inc
dec
jb
xor
mull
xlat
mov
data16
and
test
dec
mov
ss
mov
add
pop
dec
xchg
stos
fildl
mov
fistpll
and
mov
in
xor
hlt
testb
in
lods
aas
or
sahf
fisubl
xor
ret
dec
mov
fadds
cs
movl
or
cmp
aaa
add
or
ss
lea
jge
das
rorl
mov
lds
ds
enter
imul
test
cmpsb
xchg
fildl
xchg
sahf
stos
in
pop
ljmp
mov
scas
cmc
jbe
cmpsl
xchg
inc
or
mov
fisttpl
jp
pop
ja
pop
sub
mov
mov
dec
pop
ss
mov
and
pop
add
push
sbb
add
add
dec
mov
jl
into
pop
mov
ljmp
jb
adc
fs
jne
adc
shl
mov
lea
mov
jno
jno
outsl
shr
scas
dec
mov
je
cmp
movsl
shll
adc
adc
adc
dec
add
stos
stc
add
mov
mov
inc
lahf
cmpsb
pushf
mov
add
test
test
loope
sti
pop
lods
or
adc
mov
and
jne
mov
adc
add
aaa
shlb
sub
shrb
or
mov
je
std
pusha
mov
leave
mov
out
sahf
xor
test
pop
push
and
pushl
pop
fldt
push
lods
push
repz
mov
fisttpl
jl
clc
mov
sub
lcall
mov
test
retw
xchg
jg
std
mov
nop
sbb
aam
adcb
mov
xchg
or
or
cmp
mov
mov
mov
fwait
les
es
sahf
jns
pop
hlt
sahf
test
cmc
lods
push
clc
nop
stos
push
sbb
imul
jle
mov
rcrb
jg
hlt
jp
ljmp
outsl
dec
mov
jo
movb
dec
daa
bound
or
jo
lahf
lret
adc
es
push
inc
dec
or
sub
cmc
pop
xor
es
lods
gs
jo
push
push
pop
sub
test
xchg
push
data16
jbe
pop
mov
dec
or
loope
jo
mov
cli
clc
addl
std
ret
jg
std
scas
xchg
jae
pop
mov
fwait
insl
mov
push
mov
cmp
mov
push
pop
sub
fmul
test
cld
mov
leave
xor
mov
adc
fldcw
aad
and
or
movsl
popf
mov
mov
jmp
daa
in
stos
std
sbb
in
mov
add
jne
std
mov
mov
loop
sti
je
lds
or
inc
sbb
adc
pand
fnstsw
sbb
pop
lret
lock
pop
imul
mov
in
ljmp
ret
div
inc
inc
and
push
xchg
mov
adc
jg
adc
loopne
data16
mov
cmp
ja
call
jnp
out
cs
rcrb
stos
mov
xchg
loope
sub
mov
fcompl
push
pop
in
push
mov
mov
xchg
or
mov
pop
mov
lods
aam
insl
ficoml
push
fimuls
sbb
push
mov
jge
mov
scas
add
mov
jge
mov
fsubr
stos
incl
inc
dec
jp
fisubs
and
cmp
roll
das
faddl
inc
pop
inc
movsb
push
sub
lods
mov
insl
insb
mov
jnp
imul
mov
in
fldt
loop
or
jo
sbb
sbb
push
fcom
xchg
and
cmp
pushl
stos
fs
inc
mov
mov
sbb
icebp
stos
and
rorb
add
push
sub
inc
adc
push
clc
insl
in
imul
jl
sahf
sub
and
out
xchg
add
sti
pop
pop
cmp
pop
iret
inc
int
xchg
lret
cmc
mov
mov
pushf
sub
push
test
mov
insl
or
loopne
mov
and
xchg
mov
call
mov
mov
les
outsl
insb
pop
cltd
dec
fstl
lcall
mov
jo
cmp
mov
dec
cli
mov
dec
popa
xchg
adc
ljmp
mov
xor
add
call
mov
push
pop
lea
gs
mov
ja
fcomi
shlb
adc
ret
sub
ljmp
lcall
scas
lock
push
mov
sbb
aas
sbb
push
xchg
pop
ljmp
fsubrs
dec
movsl
jbe
push
adc
jl
inc
push
mov
inc
push
popl
ja
clc
jbe
movsb
xlat
sahf
fildll
add
mov
repz
insb
loopne
add
pop
movsl
mov
in
rclb
fwait
xor
loopne
or
adc
and
and
jbe
sbb
dec
push
orl
mov
mov
adc
je
sub
sub
aaa
sarl
adc
aas
pop
lret
test
mov
hlt
xchg
loop
inc
cld
sbb
xchg
cltd
jecxz
rcrl
pop
aaa
mov
fstpt
pop
fistpll
jne
ret
dec
sub
or
inc
rcll
fdivrs
mov
inc
pusha
fs
adc
push
std
mov
inc
inc
or
push
xchg
aas
mov
mov
mov
loopne
or
js
jecxz
leave
cmpsb
mov
mov
je
lret
cli
cmc
xchg
out
pop
dec
fisttpll
mov
ret
ja
ret
dec
pop
cli
dec
mov
inc
xor
inc
xlat
scas
es
sub
push
sbb
jmp
adc
stos
dec
or
mov
xchg
cmp
push
dec
mov
xlat
cs
aaa
mov
loop
sbb
pop
lods
push
out
push
std
fistpll
aad
jno
leave
inc
cmp
inc
in
push
fnstsw
fnstsw
ret
ret
lret
imul
cwtl
pop
jmp
jl
sbb
inc
notl
push
xchg
lods
xor
lock
je
mov
mov
loopne
jle
pop
mov
sar
sub
jo
subb
push
test
inc
mov
clc
mov
movsl
add
mov
loop
das
jno
mov
ljmp
clc
shlb
addr16
pop
mov
loope
add
or
inc
aaa
fcompl
and
into
sbb
aad
shll
out
and
mov
add
dec
pop
and
loop
decb
cs
lock
in
sarl
out
fldl
jg
and
inc
mov
adc
jb
xor
mov
shlb
push
inc
fidivl
and
mov
popa
sti
scas
movsl
xchg
stos
lahf
cli
cli
cmp
mov
outsb
lds
cld
mov
shl
mov
icebp
lret
fbstp
sub
out
cld
push
insb
fs
popa
outsl
insb
push
pop
sub
mov
mov
test
cmpl
adc
mov
in
pop
imul
mov
orb
cmp
inc
xchg
and
push
out
loope
xchg
mov
js
ds
hlt
mov
imul
mov
js
pushf
fiadds
xor
mov
xlat
cmp
imul
add
incb
pop
cmc
aad
in
jg
mov
test
test
test
pop
adcl
jp
mov
lock
pop
mov
sub
dec
dec
iret
lret
jmp
push
outsb
adc
jecxz
andnps
sbb
inc
dec
push
mov
stos
jle
cmp
test
sub
icebp
inc
mov
xor
dec
test
or
mov
push
jecxz
fisttps
cmc
push
adc
pop
cmp
imul
loope
and
cmpl
xchg
adc
cmp
push
andb
ja
and
jmp
loop
lock
dec
xchg
cli
adc
ficoml
and
scas
rclb
add
jmp
inc
cmp
mov
sti
lock
mov
cltd
enter
lea
call
stos
stc
leave
ss
xchg
dec
outsl
add
xchg
pop
loope
pop
cmc
subb
add
dec
push
jl
test
or
cltd
shl
fisubrl
sub
aaa
int
ficompl
xor
fistps
mov
sbb
push
ja
sbb
adc
push
xchg
stc
pop
cltd
testb
rcll
lock
in
inc
push
and
int
aam
jge
or
push
pop
cmp
js
pop
cmp
mov
inc
xorl
xchg
int3
fldln2
test
call
sbb
push
sbb
pusha
dec
das
jo
inc
int
daa
adc
out
jbe
push
fwait
repz
push
aas
jno
sub
xlat
fwait
andb
add
adc
mov
mov
mov
mov
rolb
clc
icebp
sbb
mov
adc
fdiv
sub
or
cmp
inc
stos
or
out
ret
out
not
sbbl
int3
fwait
in
jmp
push
pop
jp
push
jns
fisttpl
pop
add
inc
inc
adc
adc
test
bound
xor
dec
mov
inc
loop
xor
mov
dec
push
pop
jl
mov
mov
mov
outsl
mov
in
leave
inc
push
pop
mov
fadd
xor
outsb
adc
dec
mov
xor
push
adc
mov
lods
and
inc
push
fst
xchg
mov
rolb
inc
rcl
pusha
and
idiv
push
or
shl
push
jp
cltd
xor
cmp
add
pushf
aaa
jg
nop
pop
outsl
roll
push
cmpsb
pushf
cmp
icebp
movsb
sahf
inc
addl
in
add
sub
push
pop
push
addr16
dec
xlat
bnd
xor
sbb
out
sbb
rorl
rolb
xchg
cld
or
jb
rclb
sbb
inc
das
pop
fidivl
movsl
pop
mov
sub
lods
mov
ret
mov
outsl
adc
aam
push
pop
cltd
jle
dec
into
leave
jle
cltd
stos
addr16
lods
call
xchg
daa
mov
xchg
pop
pop
shr
push
jmp
mov
and
mov
pop
cmp
xor
leave
sbb
pop
out
dec
add
pop
or
mov
jb
mov
icebp
mov
out
test
mov
pop
lea
mov
inc
aam
call
or
xchg
sbb
cwtl
mov
fsubrs
sbb
push
dec
mov
jg
mov
mov
fcmovbe
test
pop
cwtl
mov
mov
unpckhps
inc
sub
cmpsb
cmp
inc
xchg
aam
gs
ja
xlat
mov
ljmp
add
sub
xchg
sbb
fdivp
iret
jb
push
jle
sbb
and
syscall
mov
mov
incb
addr16
arpl
bswap
add
inc
popa
in
inc
mov
dec
adc
jo
test
or
dec
pusha
dec
or
out
xchg
add
mov
xor
inc
filds
mov
and
aas
sahf
aam
cmp
sbb
push
inc
sub
popa
mov
nop
add
jne
and
pop
fdivrs
lea
push
inc
popf
es
dec
or
ljmp
je
jbe
dec
adc
add
lock
mov
roll
sarl
add
clc
or
sbb
into
movsb
std
outsl
mov
popw
insl
imul
pop
aad
cmp
cmp
sbb
cmp
ret
push
pushf
sub
sub
mov
xchg
push
adc
in
cmovg
int3
fwait
sub
int3
push
mov
sbb
aaa
or
cmp
addr16
lds
insb
pop
out
les
mov
loope
add
adc
decb
sti
add
js
or
ljmp
mov
push
popa
sub
pop
xchg
inc
fcmovb
in
outsl
insl
stc
stos
jmp
shrl
mov
mov
dec
cli
clc
call
jo
fidivs
repnz
call
mov
mov
outsl
pop
push
dec
cmc
std
sub
sbb
lods
or
loope
fnstsw
ja
movb
fs
xchg
xor
xchg
sbb
fldln2
movsl
push
jmp
mov
mov
lcall
or
mov
cmp
inc
subl
movsb
xchg
dec
dec
lds
js
sub
push
inc
push
iret
test
cwtl
push
jb
sbb
push
clc
movsl
ds
jmp
jb
add
mov
cs
scas
outsl
xchg
mov
push
rcr
mov
aad
hlt
int
mov
jle
clc
movsb
addr16
nop
movsl
xor
dec
mov
mov
subl
lods
pop
cli
mov
lea
jne
mov
adc
mov
sbb
mov
sub
xchg
cmp
push
addb
mov
lods
fnstsw
rclb
or
imul
fstl
leave
mov
in
xor
xchg
ret
es
scas
outsb
cwtl
jb
sbb
cli
push
mov
mov
lods
dec
jo
outsb
sbb
lret
jmp
imul
outsb
mov
andl
test
in
loop
movsl
mov
jg
sub
inc
daa
movsb
sbb
mov
mov
sub
clc
ret
or
sbb
cld
out
stos
icebp
sbb
int3
pop
pop
sti
pop
mov
imul
fcomi
push
xchg
push
pop
outsl
jl
mov
out
xchg
or
mov
adc
mov
adc
outsl
dec
icebp
jno
subb
or
loopne
inc
es
push
jae
pushf
mov
rcrb
jno
pop
cmpsl
icebp
ficoms
dec
cltd
call
outsl
jp
mov
mov
fildll
dec
add
rol
hlt
or
mov
and
push
and
lret
push
jecxz
or
or
int
lock
ror
push
daa
jecxz
sub
pushf
es
popa
jl
xchg
jo
mov
cmp
in
divb
nop
or
mov
mov
aaa
loopne
cwtl
sbbb
mov
int3
jns
fistps
ss
jo
cmp
dec
and
shl
test
xchg
mov
jae,pn
pop
loopne
scas
fstps
and
push
push
xchg
xchg
mov
push
pop
or
jb
pop
adc
or
cltd
mov
shll
push
dec
adc
inc
pop
and
pop
nop
arpl
mov
or
sub
mov
adcl
clc
in
test
ret
sarb
jmp
les
jno
jb
xchg
or
aam
fcmovnu
jb
sub
imul
loopne
or
pop
out
loope
or
dec
test
add
xor
lea
daa
aam
jl
adc
outsb
fdivs
cmpl
pop
testl
out
sub
and
xor
jge
neg
push
mov
icebp
inc
int
aad
mov
rcr
int
test
mov
jbe
imul
push
fisttpl
xchg
mov
movsl
adc
cld
aaa
imul
mov
jl
incb
xorl
xchg
sub
xchg
jmp
dec
mov
ret
pop
xor
clc
inc
in
das
movsb
scas
adc
popa
and
test
outsb
outsl
or
aad
call
dec
dec
mov
inc
jg
hlt
movsb
jle
pop
movsb
stos
add
movsl
in
push
push
push
mov
inc
cmp
xchg
jg
cld
mov
mov
ret
sti
out
das
scas
cwtl
adc
cmpsb
pop
pop
popa
and
xor
jbe
arpl
aas
mov
mov
add
xchg
xor
stos
sub
pop
fidivl
mov
and
clc
out
bound
jl
mov
push
pop
pop
outsl
clc
pusha
mov
ja
pop
add
loop
mov
jne
ss
sbb
jecxz
or
test
add
add
dec
add
out
test
push
je
or
xor
mov
cmp
xchg
call
mov
jnp
sub
xchg
test
or
std
mov
xchg
or
mov
test
rclb
and
and
addl
mov
daa
dec
lock
inc
xchg
test
push
jle
das
scas
pushf
mov
xchg
jmp
sub
movsl
mov
mov
aaa
aam
lret
sub
addr16
dec
js
cmc
mov
adc
sub
and
cmp
mov
inc
sar
dec
popl
jecxz
push
xor
cld
mov
cmp
cmpsl
pop
xor
mov
in
and
add
mov
aaa
dec
fmulp
push
xchg
jle
imulb
pop
inc
arpl
ljmp
jno
push
repnz
addr16
bound
adc
sub
dec
loope
xlat
test
inc
push
loopne
push
sub
in
test
incl
ljmp
clc
push
and
in
into
mov
sbbl
dec
cli
shrb
ja
outsl
test
push
out
inc
scas
add
jbe
decl
mov
xor
inc
jo
or
xchg
movsl
push
xchg
cwtl
clc
stc
jg
xchg
leave
jg
repnz
jbe
lea
and
adc
dec
out
popf
stos
mov
fsubs
loopne
fsubr
inc
into
shl
rclb
into
mov
xchg
sub
ss
mov
sbb
js
imul
push
std
rcll
add
pop
dec
add
out
sbb
push
inc
test
ljmp
push
in
lods
cmp
cmpsl
jb
addb
cli
sub
xchg
fildll
xor
pushf
pop
les
mov
test
jnp
add
sub
mov
push
out
and
je
fsubr
in
push
movsb
cltd
adc
dec
inc
out
fsts
fld
clc
bound
idivb
mov
test
in
cmpsl
jbe
or
xor
ja
ret
xchg
push
jbe
insb
sub
mov
xchg
xchg
dec
adc
fcmovnu
aaa
cs
fwait
ss
push
test
sub
cmc
mov
ret
pop
lret
movsb
jl
ret
sbbl
in
jecxz
adc
dec
cmpsl
push
cli
lea
xor
repnz
mov
jnp
das
andb
pop
sbb
loopne
imul
mov
jno
fistpl
sbb
mov
xor
xor
push
aaa
mov
mov
xor
ja
fcmovnu
sbb
cltd
aas
mov
bound
xchg
add
pop
stc
ss
inc
lods
or
subl
mov
stos
cs
jns
fbld
jecxz
dec
inc
ss
and
sti
mov
push
aaa
push
xor
mov
hlt
movb
push
mov
icebp
ja
adc
mov
add
lds
mov
or
mov
popa
dec
jno
pop
idivb
mov
rorl
lret
and
nop
insb
outsl
stc
dec
enter
push
lea
xor
xor
subl
add
pop
dec
mov
rolb
test
or
inc
sbb
mov
and
inc
fcmovb
ret
push
inc
pop
movsl
pusha
lods
dec
mov
movsl
pop
cmp
pop
fcmovb
lods
mov
mov
pop
pop
dec
mov
outsl
pop
fsubs
insb
jl
add
push
mov
scas
fwait
enter
push
adc
cmc
clc
add
stos
loopne
jg
popfw
or
mov
mov
and
cmp
icebp
and
frstor
push
inc
inc
fwait
dec
sbb
xchg
jo
mov
jbe
add
pop
xchg
and
ffree
pushl
adc
dec
hlt
cmp
lods
icebp
mov
lock
xchg
dec
jno
hlt
lods
fidivrs
jge
dec
scas
in
je
push
pop
pop
sbb
sbb
dec
and
mov
fwait
imul
flds
jl
xor
sub
sub
xchg
cli
mov
fimuls
arpl
mov
outsb
outsl
sub
jae
jb
icebp
rcrb
fdivrs
adc
popa
push
scas
mov
pop
mov
cli
mov
fidivl
push
or
idiv
shll
jmp
mov
mov
xor
imul
cli
jnp
and
cmp
mov
sub
cmp
ljmp
cmc
jecxz
cmp
xorl
sbb
mov
fildl
icebp
mov
orb
xchg
jg
cld
int
rolb
mov
add
out
fdivrl
clc
or
mov
cmp
push
insl
pop
adc
rorb
lds
push
jo
sub
pusha
pop
cmc
pop
loopne
repz
js
fwait
inc
insl
rcll
jo
push
das
dec
cld
outsl
xchg
or
xchg
ds
add
sub
mov
add
adc
rcll
fildll
jl
adc
xchg
push
jmp
xor
lods
adc
cmp
adcb
cmp
and
clts
adc
lock
sbb
pop
sbb
das
cmp
xchg
dec
hlt
mov
ffreep
ret
pop
jo
add
add
out
cmp
dec
push
mov
and
idivb
sti
sbb
xor
mov
inc
jmp
push
push
inc
pop
push
insb
mov
cltd
sti
pop
nop
filds
sbb
dec
mov
dec
mov
push
fists
mov
aad
in
aaa
call
and
push
dec
cmp
push
stos
and
aam
push
jge
mov
adc
mov
cmpsb
push
pop
and
push
add
push
push
pop
sbb
rcll
outsb
and
cwtl
mov
gs
mov
xor
push
je
pop
stos
push
inc
lods
or
ret
andb
sahf
std
nop
jg
sub
ja
aas
ds
add
mov
push
bound
xchg
aaa
stos
mov
or
outsl
adc
mov
js
mov
push
sbb
mov
fmuls
out
pop
push
mov
imul
jae
push
mov
or
aaa
pop
jl
popf
ja
jecxz
dec
mov
flds
sbb
push
or
je
faddp
inc
adc
dec
pusha
addb
movl
data16
out
dec
dec
rcll
loop
push
or
dec
push
mov
addr16
mov
adc
mov
or
sbb
les
mov
xlat
test
std
xor
push
jge
std
fcmove
cltd
sbb
pusha
xlat
enter
outsl
add
dec
dec
pushf
xor
loop
dec
xor
test
pop
push
xor
lcall
call
xor
jp
mov
shrl
jno
mov
jecxz
cmp
sub
push
test
negb
push
inc
sbb
rol
in
scas
mov
shrb
add
xchg
xchg
icebp
xor
call
mov
sub
mov
push
iret
imul
pop
ss
shlb
jbe
xchg
push
xor
das
xchg
ficoml
pop
cmp
sub
hlt
jmp
mov
adcl
and
adc
pusha
je
mov
inc
cld
lds
neg
jle
lcall
enter
das
rcr
add
cmp
enter
jecxz
mov
bound
mov
pushw
sub
pop
jbe
mov
dec
fiadds
incl
pop
jg
shrb
lcall
sbb
inc
or
aas
mov
fidivl
mov
and
mov
xchg
aaa
or
sarb
xchg
sar
inc
jl
push
mov
adc
jg
or
mov
cmp
outsb
mov
into
pop
inc
pop
rcr
jecxz
add
mov
mov
aam
shr
bound
jl
push
mov
xchg
in
jp
mov
push
jl
mov
outsl
sub
or
gs
clc
out
sbb
negb
imul
stos
inc
in
outsl
rclb
add
test
adc
adc
pop
push
aam
and
jge
gs
sbb
add
jnp
push
cli
fwait
out
push
jne
or
mov
jge
sarl
or
movsl
js
scas
cmp
shlb
sub
test
mov
outsb
pop
inc
mov
mov
cltd
clc
or
bound
lods
mov
sbb
inc
jno
cld
cmp
lods
xor
dec
sbb
cli
cmp
mov
rorl
adc
push
cwtl
pop
jns
add
les
call
and
repz
mov
rcr
xchg
imul
andl
ret
xor
pop
jo
fistpl
into
lock
addr16
and
mov
push
mov
into
jno
pop
and
mov
call
push
add
mov
out
cmc
es
leave
fwait
mov
imull
jle
in
int
insl
and
push
mov
mov
or
adc
arpl
dec
mov
or
test
call
jl
stc
fsubrs
in
adc
or
push
mov
push
ja
inc
xchg
imul
inc
shl
push
pop
cmp
outsl
clc
ret
push
or
sahf
sahf
sbb
sbb
and
jb
or
jecxz
pop
sbbb
or
push
jecxz
adc
mov
pop
add
shrl
out
and
push
loop
or
shufps
adc
jge
jmp
out
and
xchg
nop
xlat
xchg
adc
pop
and
mov
pushf
xor
mov
imul
mov
mov
loop
inc
enter
jg
mov
icebp
and
and
icebp
xor
and
jge
adc
sub
mov
sbb
int
jmp
int3
sub
aas
inc
mov
sti
mov
jno
ret
jb
pop
push
scas
outsb
idivl
sub
push
mov
sub
dec
dec
xchg
mov
pop
call
in
and
insb
js
mov
shrb
xchg
or
push
jns
mov
cmpsb
adc
ret
pop
and
mov
sub
adc
mov
pop
jl
lock
jg
idiv
dec
dec
xor
loop
sub
lret
sbb
cmp
dec
scas
int3
shlb
sbb
push
sbb
and
je
ss
push
lret
shrl
clc
shlb
mov
add
inc
inc
in
das
or
into
xor
lret
jne
out
push
xlat
adc
dec
adc
aaa
mov
pop
jge
mov
cmp
mov
push
fldcw
mov
add
pop
js
mov
dec
cmp
hlt
mov
inc
adc
jecxz
repz
andl
push
mov
inc
sbb
sbb
sub
movb
std
in
rorl
and
mov
jl
mov
push
sti
es
xchg
mov
shrb
pop
mov
jg
fistpl
insl
inc
adc
jle
outsb
add
xchg
scas
pop
jo
mov
mov
xchg
jge
fidivrl
cmp
mov
cld
inc
jb
mov
and
sbb
dec
sti
stos
add
testb
repnz
rolb
paddb
andb
nop
dec
mov
xchg
and
mov
jne
mov
movsw
in
push
sbb
cmp
int3
xor
mov
cmp
popa
sub
adc
repz
mov
jo
mov
hlt
jns
and
jg
sti
data16
push
out
or
test
loopne
dec
dec
pop
addb
mov
pop
mov
xor
xchg
stos
cld
jg
inc
jg
mov
adc
adc
sbb
in
mov
push
jl
sub
movsl
dec
cmc
in
je
fs
dec
test
inc
adc
mov
xor
outsl
and
jne
out
out
push
std
mov
ljmp
and
mov
arpl
aam
scas
sub
cmp
lds
mov
and
sbb
sub
adc
and
lods
jbe
mov
xor
mov
xchg
sub
faddp
add
adc
jmp
inc
or
cmpsl
insl
mov
cmp
lcall
cli
xchg
arpl
repnz
mov
pop
push
cmp
aam
add
jo
pop
aas
pop
fs
pop
fdivrl
hlt
arpl
pop
and
cld
xchg
jns
jb
xchg
mov
adc
and
fisubrs
insb
jg
cmpsl
je
sbb
pop
out
mov
sbb
xchg
clc
aas
add
mov
fwait
dec
xchg
insl
aam
push
pop
mov
push
pop
inc
add
std
push
xchg
scas
data16
push
mov
add
repz
sub
sub
cmpsl
adc
std
mov
push
test
adc
stc
pop
pop
jno
push
pop
jp
mov
cltd
mov
out
leave
scas
cmp
mov
push
arpl
xor
cmp
lea
movsl
or
dec
ds
mov
loop
push
xchg
add
jp
cmpsl
stos
sub
cmp
xchg
hlt
inc
jae
mov
test
jg
mov
fisttps
cmp
mov
sbb
add
jmp
and
mov
ret
push
lds
pop
das
inc
sbb
or
loope
cmp
jecxz
or
mov
adc
das
push
loopne
pop
sub
pop
pusha
mov
jnp
orb
add
out
sbb
sti
jmp
pop
clc
cmp
sub
mov
push
movsl
mov
leave
inc
stos
rcl
nop
add
adc
insl
fwait
outsl
xor
xor
mov
test
mov
lcall
dec
gs
into
pop
test
outsl
mov
in
mov
sbb
push
scas
loope
push
jbe
daa
mov
xor
mov
test
sub
jae
mov
sbb
xchg
inc
xchg
add
data16
jp
jne
mov
fcmovnb
outsb
pop
jmp
jle
and
dec
idiv
test
adc
cmpsb
xchg
fs
pop
setg
or
jno
jg
rcll
mov
dec
mov
and
push
push
push
subl
test
push
aaa
lods
push
add
arpl
sti
test
push
dec
cmc
or
or
scas
rcr
xchg
inc
xchg
fisttpl
aaa
cld
sub
dec
arpl
push
cli
mov
incl
scas
jp
cs
jp
sub
cmp
rclb
incl
pop
mov
xchg
cmp
push
ljmp
mov
dec
and
dec
in
cs
stos
mov
adc
push
int
ret
faddp
pop
hlt
les
test
loopne
mov
sub
int
push
and
cli
lods
lock
cmp
push
cltd
cwtl
add
ljmp
add
adc
push
jnp
scas
push
fstpl
fsubrs
xor
std
test
ret
adc
icebp
sbb
popa
repnz
sarb
popa
scas
adc
xchg
pop
aad
inc
fwait
jle
std
or
stos
push
adc
mov
repz
add
lods
loopne
cmc
clc
ja
inc
pop
addb
or
add
inc
mov
test
add
inc
pop
hlt
das
mov
mov
inc
fcom
add
nop
cmpl
lret
xlat
adc
sub
stos
cwtl
lods
mov
nop
add
sti
and
stc
les
ss
pop
inc
adc
mov
jmp
lea
dec
jmp
lret
adc
loopne
out
rcl
ljmp
adc
aas
aad
andl
mov
xor
inc
jno
inc
test
jecxz
jge
mov
aam
pop
mov
jmp
or
out
xor
xor
xor
test
out
mov
adc
sti
stos
push
mov
int3
or
jp
pop
movsb
dec
jmp
xorl
fcom
push
ja
insl
scas
pop
mov
out
out
sahf
xchg
xchg
js
mov
lcall
or
clc
adc
aas
xchg
xor
and
push
push
fwait
or
scas
fdivr
add
sub
pop
aam
sbbl
mov
xchg
js
push
ret
inc
pop
shlb
cli
push
call
decl
jmp
jb
sub
push
mov
or
imul
jo
inc
pop
sbb
loope
je
push
in
sahf
stos
push
mov
pop
in
ljmp
add
and
mov
mov
aaa
in
mov
callw
cmp
cmpsl
adc
add
adcb
push
adc
mov
nop
fcmovnu
push
fcoml
lods
cli
sbb
js
fimull
aaa
sub
aam
arpl
aas
push
cmp
pop
sbb
sub
movups
jle
insl
push
sub
mov
loop
push
adc
pop
adc
lea
lea
pop
push
fcompl
xor
in
add
lcall
pop
add
push
adc
jno
pop
cmp
add
scas
pushf
dec
cmp
lret
cmc
jb
and
add
es
and
hlt
stos
pop
mov
pop
repnz
outsb
push
fs
push
std
stos
out
xor
and
dec
or
nop
jle
sbbl
mov
cld
add
lods
dec
sub
sahf
or
add
jbe
test
push
pusha
arpl
lods
inc
fistl
push
inc
xchg
imul
mov
adc
push
or
pop
jp
insl
int
lock
push
divl
out
mov
out
lods
add
aas
in
cmp
fbld
push
and
dec
es
jne
dec
inc
cmp
add
clc
add
add
loop
scas
inc
jg
leave
pop
fstpl
mov
pop
cmpb
mov
xor
push
xlat
pop
dec
dec
push
fisttpll
add
push
ret
cli
jmp
int3
cmc
cmc
and
and
push
jns
adc
ret
fsubrs
jbe
fisttpl
inc
mov
outsl
xor
mov
push
mov
sbb
pop
pusha
sti
mov
lcall
pop
pop
sbb
push
xchg
cs
or
test
mov
adc
jmp
test
and
push
jecxz
movb
pop
mov
mov
and
mov
fildll
xchg
leave
lret
adc
and
aaa
aaa
out
cmp
nop
mov
mov
dec
push
inc
pop
and
push
aad
adc
das
mov
mov
test
or
mov
mov
mov
jae
jo
and
loopne
cmpl
mov
movsl
pop
dec
in
aas
enter
rcrb
fnsave
decb
xchg
xor
es
ror
in
cmp
mov
pop
fadds
aas
in
cmp
sbb
das
ror
outsl
pop
add
sub
jo
add
add
jp
out
pop
mov
jge
and
inc
stos
ret
mov
and
push
scas
idiv
jb
test
pop
mov
xchg
mov
lcall
sub
push
xchg
sub
sbb
jne
je
mov
sub
mov
mov
mov
fstl
call
mov
mov
jne
rorl
loopne
stos
mov
in
sbb
push
inc
mov
out
push
xor
xor
adc
lods
stos
or
mov
add
mov
in
mov
test
repz
xchg
jbe
roll
stos
stos
jno
mov
and
or
or
dec
jmp
in
in
or
and
lret
js,pn
or
and
cmp
iret
test
push
sahf
inc
mov
add
adc
out
cmpb
shll
mov
mov
lret
lock
adc
dec
fldl
pushl
loop
lahf
sbb
add
push
in
addl
in
mov
and
mov
rorb
nop
mov
incb
pop
pop
or
adcl
mov
pop
sub
adc
mov
add
mov
adc
int
pushf
jl
fistpl
enter
jo
push
test
pop
mov
mov
mov
mov
aaa
sbb
sbb
pop
pop
mov
jne
in
push
xchg
inc
adc
add
ret
pop
push
enter
xchg
mov
outsl
add
sbb
insb
iret
int
xchg
sbb
loope
sub
mov
mov
jge
movb
aam
ret
mov
std
pop
add
mov
aam
imul
das
insb
pop
push
popa
sub
imul
lock
or
pushf
sub
cwtl
mov
dec
lea
loopne
lods
daa
out
stos
push
add
push
test
cmc
outsl
stos
jp
outsl
iret
push
adc
sbb
push
jge
loopne
jge
loopne
fisttpll
sbbb
xor
adc
push
mov
and
mov
jnp
call
add
notb
fldl
jge
mov
aaa
lret
or
shrb
pop
xchg
aaa
sbb
fdivr
into
add
push
ss
inc
repz
les
das
mov
push
inc
pop
mov
push
or
jp
and
aad
cmpb
push
pop
push
mov
push
mov
sub
sub
shrl
xchg
mov
std
adc
repnz
pop
pop
rcl
lret
leave
sbb
shll
addr16
movsb
andb
aam
test
fs
shl
in
add
add
es
adcb
mov
outsb
dec
mov
or
and
or
daa
dec
pusha
cmp
in
ss
fisttpll
adc
jbe
adc
xchg
nop
cmp
fiaddl
mov
pop
pop
pop
loope
add
mov
gs
mov
mov
sbb
mov
mov
call
popa
and
loope
stc
int3
into
lds
in
inc
or
shrl
pushf
or
lds
test
scas
cmp
pop
mov
sub
mov
xorb
fistpll
frstor
rcll
push
dec
and
movsl
and
shl
inc
out
rolb
rolb
mov
cmp
loop
rcrb
js
incb
inc
out
fdiv
out
lods
inc
sbb
push
sti
mov
mov
cmp
shlb
ucomiss
sbb
clc
out
stos
orl
push
dec
enter
mov
mov
int
scas
fildl
in
push
icebp
inc
dec
shrb
mov
je
xor
mov
out
jo
add
lea
shrb
aam
rcrl
xlat
aam
add
pop
loope
out
jg
fldcw
test
shlb
mov
ret
mov
inc
xlat
repnz
andl
xchg
or
mov
je
hlt
pop
lock
jmp
adc
das
cmpsb
jecxz
sub
pop
sub
mov
rorl
push
sbb
mov
nop
testl
nop
dec
cwtl
lret
mov
mov
subb
mov
mov
rcl
shlb
or
loopne
add
out
add
lcall
dec
adc
movsb
hlt
insb
mov
or
or
dec
hlt
jo
sbb
pop
mov
cld
dec
lods
imul
sbb
insl
test
inc
stos
push
into
push
cmc
outsl
sub
fldcw
aaa
sbb
mov
mov
pop
dec
cmp
rol
mov
test
xchg
ss
dec
add
pushl
rclb
cmp
testl
xchg
nop
sub
dec
ret
mov
sub
sbbl
sbb
adc
pop
sub
daa
adc
jne
icebp
mov
stos
push
add
fstpt
popa
out
icebp
mov
cmp
pop
push
mov
pop
scas
pop
into
xchg
pushf
lea
pop
mov
add
pusha
pop
scas
push
mov
lock
add
cli
mov
inc
dec
roll
or
popf
add
add
push
test
jno
jge
xor
aad
incb
add
stos
adc
jo
call
or
pushf
stc
and
aam
inc
push
in
je
adc
ret
repnz
mov
cmp
mov
or
inc
lret
shl
repz
nop
sub
adc
test
pop
xor
js
std
mov
mov
addl
mov
and
inc
jb
push
shl
push
xchg
aam
xchg
aad
arpl
or
data16
cli
mov
sub
movsl
dec
imul
imul
adc
sub
mov
outsl
mov
mov
pop
add
and
nop
push
xchg
das
std
outsl
adc
roll
adc
sub
pop
mov
pop
or
test
and
sub
mov
mov
mov
pop
clc
lahf
das
int3
xchg
push
add
inc
push
push
cltd
inc
mov
loopne
fists
or
xor
mov
shlb
sti
mov
mov
mov
in
add
pusha
inc
stos
mov
stos
ret
dec
mov
xchg
aad
jl
mov
fimuls
addb
aas
jne
scas
add
jge
ud0
sbb
add
xchg
sar
mov
xchg
or
adc
ss
sbb
push
sbb
jb
jno
mov
jl
hlt
sub
mov
movsb
push
das
sbb
je
xchg
cmpsb
jnp
test
mov
insb
jle
mov
int3
adc
loopne
stc
outsl
jl
in
cs
cmc
lods
or
in
testl
sbb
mov
js
test
pop
add
jo
mov
adc
mov
inc
and
sbb
pop
imul
mov
pop
mov
dec
outsb
push
sbb
scas
push
jg
insl
xchg
mov
loope
dec
jge
nop
nop
or
outsb
vmaxss
sbb
dec
add
movsb
cltd
add
or
cmp
mov
insl
and
mov
outsl
stos
pop
mov
sub
test
cmp
pushf
push
in
push
push
pop
xchg
out
and
xorl
xor
push
or
testl
std
mov
sbb
scas
push
inc
es
mov
sbb
ja
nop
and
cmp
adc
and
mov
ret
cli
add
cli
jle
inc
inc
popf
ret
inc
and
jmp
in
daa
push
jge
movsl
outsb
jge
sbb
cmp
xlat
mov
cmc
xor
aaa
mov
std
xchg
pop
sbb
xchg
dec
lret
icebp
mov
mov
mov
stc
and
push
jo
fldt
ror
je
cmp
pop
cmp
sbb
shrb
jne
aad
lcall
inc
push
hlt
ret
out
mov
inc
adc
out
lea
addr16
jle
jno
mov
inc
pop
pop
inc
imul
dec
inc
mov
adcb
std
push
scas
pop
pop
add
dec
jb
pop
shll
call
sbb
cmpb
rcrl
xor
adc
add
pushf
dec
jg
or
and
or
mov
mov
sti
dec
ja
jb
sahf
outsb
popa
push
mov
xchg
inc
mov
jecxz
mov
data16
jge
xchg
lds
shlb
into
stos
adc
shlb
jnp
pop
js
pop
jbe
ljmp
inc
in
out
ds
jns
and
pop
cmp
xorl
outsl
std
movsb
xchg
lds
mov
dec
adc
inc
adc
mov
cmc
mov
imul
cld
dec
push
outsl
aas
adc
leave
movsl
sub
pop
jne
fmull
pushl
repz
movsb
pop
mov
sub
das
cmp
loopne
inc
cwtl
lret
pop
xchg
hlt
es
adc
or
pop
jp
clc
add
mov
sbb
inc
cmpsb
sub
mov
or
sbb
and
jbe
ljmp
sub
aaa
pusha
mov
fisttps
adc
rclb
xchg
mov
inc
popf
mov
mov
xor
cmp
sbb
sub
jmp
jne
ret
out
add
jp
pop
lock
mov
push
or
jle
add
lret
push
push
int
in
add
je
das
pop
mov
test
mov
push
stos
mov
and
pop
add
push
jge
insl
xlat
lret
push
movsl
shlb
dec
and
mov
mov
iret
jne
enter
repz
je
inc
xchg
sub
inc
icebp
ja
xchg
negb
add
adc
arpl
jo
xor
ret
xor
inc
jle
inc
sahf
push
mov
jp
push
lock
dec
push
push
movsl
fimuls
cmp
ret
xchg
pop
gs
mov
cmc
cmpsb
ret
rolb
test
mov
sbb
cmp
pop
sbb
testb
and
push
enter
and
in
sbb
dec
lcall
jnp
cmp
xchg
shl
add
jge
in
pop
add
gs
ljmp
sub
inc
pop
stos
in
rolb
mov
jmp
in
mov
mov
dec
sub
jbe
call
jno
adc
jle
add
imul
les
push
dec
add
std
mov
pop
mov
sbb
dec
sbb
or
shr
imul
test
add
loopne
fs
sbb
mov
mov
sub
push
shl
test
add
or
add
adc
fistl
cmp
mov
fistpll
push
xchg
and
jge
test
push
adc
jmp
clc
add
push
dec
popf
in
jno
sub
aam
pusha
xor
and
mov
dec
sub
push
mov
xor
add
repnz
mov
dec
mov
ret
stos
or
movsb
jbe
std
pop
fdiv
add
dec
fidivrl
enter
push
mov
mov
cmp
mov
ja
cs
inc
mov
fistpl
pushf
push
int
jno
inc
cmc
sbb
int3
mov
lock
imul
in
fcmovne
xchg
sub
xchg
les
dec
pop
cmp
test
sti
sbb
les
stos
add
rcr
jbe
push
orl
jo
movsb
aas
out
or
test
mov
push
imul
cld
push
out
loopne
mov
or
add
out
scas
fidivrs
loop
mov
addl
push
add
xchg
aas
sub
fldcw
jg
mov
call
sub
jg
insl
cmc
dec
das
js
ss
or
daa
fistpl
or
sub
pop
sub
inc
add
pushf
add
fidivs
push
dec
or
cmpsl
mov
das
push
rcrb
mov
push
pusha
test
adc
stos
scas
call
shrl
jmp
adc
enter
sub
ret
mov
jl
adc
fs
call
mov
sbb
call
jno
xor
imulb
dec
leave
popf
sarl
add
mov
loopne
aas
jnp
inc
adc
icebp
mov
dec
cwtl
xor
cmp
push
sub
popa
dec
mov
icebp
jge
push
cld
rcrl
ljmp
mov
jne
lcall
jo
add
mov
cmp
dec
data16
adc
es
subl
inc
jbe
lds
dec
jmp
shr
adc
jmp
into
xchg
adc
pop
mov
add
cwtl
mov
push
fst
inc
jae
jmp
sub
ss
pop
lret
out
mov
mov
shll
in
not
or
xchg
cwtl
jno
push
hlt
in
xchg
psubsw
mov
push
arpl
stos
sbbl
pushf
push
pop
pop
insb
cld
pop
negb
lea
mov
roll
mov
pop
mov
sbb
mov
cld
xchg
ss
testb
mov
or
xorb
aam
ret
hlt
mov
push
loop
jl
cmp
jo
mov
and
xor
pop
test
subl
adc
jo
mov
dec
or
or
sbb
adc
inc
mov
push
inc
icebp
mov
es
cmpsb
cmp
js
mov
xor
sbb
or
lea
lcall
or
cmc
outsl
mov
inc
jb
cmp
jg
cs
cmp
push
xor
divb
ficomps
arpl
loop
in
fs
pop
push
cmpsb
pop
lcall
xchg
adc
faddl
dec
mov
sbb
mov
data16
mov
inc
out
outsl
loopne
clc
xchg
mov
andl
hlt
push
jl
mull
or
stc
pop
adc
andl
cld
enter
fcoms
hlt
jmp
mov
and
dec
rol
mov
mov
sbb
cmc
inc
mov
stc
cmp
sbb
sbb
in
inc
std
fucomi
jl
push
shlb
popf
push
test
imul
adc
movsl
pop
outsl
test
jmp
xchg
adc
inc
shl
dec
lods
je
adc
cli
test
cmp
mov
stos
mov
pop
in
in
xor
and
xor
out
mov
movsl
jp
int
fstpl
test
decb
cmpsb
hlt
ret
vpminsw
jno
incl
mov
inc
call
cmp
lds
imul
int3
std
ficoms
sbb
adc
out
mov
aam
cmp
pusha
push
nop
dec
cmp
add
adc
adc
dec
pop
pushf
test
inc
jno
mov
jbe
insl
push
mov
lret
lcall
or
sbb
xchg
scas
les
xchg
cmc
daa
xor
dec
mov
subl
adc
ds
cmp
mov
pop
or
movsl
outsl
scas
test
or
jno
mov
and
xchg
sbb
test
mov
sub
xchg
cmpsb
cwtl
mov
pop
outsb
cmp
lds
push
ljmp
jno
pop
xor
idivb
rcl
not
adc
xorb
std
jae
sbb
ljmp
cs
lret
adc
out
andb
stos
dec
jmp
push
bound
test
push
xchg
mov
into
sbb
std
lods
clc
or
out
lcall
push
in
jns
pop
mov
stos
std
dec
dec
mov
sarb
dec
inc
push
cli
inc
incb
mov
push
pop
cmpb
fsubrl
and
dec
inc
mov
jg
loopne
roll
lcall
push
js
cwtl
nop
mov
icebp
inc
and
mov
inc
gs
sbb
xchg
in
add
jae
mov
add
inc
cmc
push
push
fisttps
in
pop
sub
xchg
test
xchg
ss
jno
or
push
and
loopne
dec
cmpsl
outsl
lock
inc
shl
out
roll
push
lock
test
xchg
cli
mov
inc
call
push
or
call
cld
out
lods
out
ucomiss
and
cmpsb
rolb
and
aad
outsl
cmc
int3
mov
int3
iret
xor
sbb
mov
or
or
sbb
leave
arpl
mul
xchg
clc
dec
pop
mov
lret
push
nop
sarb
add
sbb
push
jecxz
out
inc
shlb
popa
xor
rclb
pop
inc
inc
or
mov
mov
enter
and
or
cmp
xchg
pushf
jle
in
or
cmp
inc
insl
mov
out
adc
cmp
pop
loop
mov
mov
fidivl
xor
andb
movsb
adc
call
and
mov
jp
dec
mov
sub
fistpl
mov
cmc
std
adc
insl
dec
fists
pusha
inc
xor
inc
pop
mov
inc
jbe
jno
fcmovbe
subb
clc
mov
xor
push
cmp
sbb
adc
inc
inc
cmp
mov
dec
shrl
mov
xchg
xchg
xchg
mov
enter
out
cmp
ljmp
shrb
cld
shrb
bound
call
pusha
jecxz
inc
test
comiss
xor
and
call
fwait
sub
sbb
test
clc
js
out
cmp
xor
sbb
insl
enter
fcmovnu
cmpsb
mov
pop
in
pop
dec
mov
and
push
dec
and
push
fnop
sahf
imul
jmp
imul
mov
clc
arpl
and
pop
cmp
sarl
clc
das
xchg
repnz
mov
mov
xor
cltd
jbe
or
dec
add
outsl
movsb
in
jb
inc
add
rclb
js
or
shl
xchg
clc
in
loope
cmp
sub
add
subb
inc
ljmp
cmp
add
je
inc
aas
mov
or
jb
mov
pop
nop
ss
jg
jno
ljmp
inc
imul
out
sbb
add
sti
lcall
mov
ds
mov
aam
je
ja
xor
cmp
ljmp
dec
cs
sbb
fiadds
repnz
andb
mov
dec
outsl
push
lahf
in
inc
sub
push
fcompl
inc
lods
or
movsb
xchg
inc
push
jle
sbbb
mov
and
pop
pop
fisttpll
repz
loope
jl
jecxz
cmp
test
data16
in
ffreep
adcl
and
or
lods
sub
fwait
dec
sysenter
arpl
jecxz
jge
daa
leave
push
push
aam
dec
adc
lea
push
insl
ja
js
push
jb
jbe
mov
call
xor
add
cwtl
and
inc
dec
outsl
mov
std
sbb
mov
mov
es
mov
xor
and
push
push
fldt
stos
dec
imul
ret
mov
je
std
sbb
pop
cmp
xor
jo
fimull
mov
int3
std
movsl
xlat
movsl
bound
xlat
xlat
stos
or
insb
jno
stc
cmpsb
mov
or
bound
jmp
cwtl
stos
dec
and
ret
dec
jmp
pop
mov
test
stos
sbb
xor
dec
scas
cmpsl
jecxz
shlb
jbe
dec
loopne
mov
stos
or
nop
xchg
xorl
mov
mov
xchg
pop
movsb
or
or
push
cmp
lock
and
cs
jnp
out
in
sub
xchg
mov
stos
cltd
les
loopne
mov
loop
mov
popa
mov
pushf
frstor
int
mov
pop
ret
push
xchg
in
xchg
lock
mov
mov
addr16
sbb
add
mov
stc
xchg
rcr
outsl
das
cld
sbb
call
jp
imul
xor
jg
arpl
inc
or
lret
movsl
sbb
pop
call
addb
cs
xor
dec
mov
decb
jmp
sbb
push
imul
xchg
mov
mov
mov
inc
nop
adc
imul
enter
imul
pop
add
and
push
test
jbe
in
cli
rclb
das
cmp
cltd
mov
jge
inc
xchg
sbb
das
cmpsb
jl
mov
pushf
xchg
jns
jnp
xchg
mov
cli
add
and
movsb
inc
lods
pop
or
mov
jl
rcrl
inc
xchg
mov
ljmp
lods
mov
xchg
dec
adc
aas
test
mov
xorb
adc
and
mov
add
sahf
push
lret
or
test
cmpsb
push
mov
push
or
js
clc
and
test
xor
loope
pop
inc
sti
fistpll
mov
and
lock
decl
and
sub
adc
push
push
mov
xor
add
pop
icebp
mov
adc
mov
dec
in
pushf
jge
dec
mov
fbstp
pop
adc
dec
mov
mov
out
inc
inc
jle
sub
push
ret
mov
and
pop
cli
add
dec
or
out
push
mov
push
sub
dec
int3
dec
dec
push
sub
inc
out
inc
cld
test
ljmp
popa
and
loopne
test
sbb
mov
jne
adc
and
hlt
cmp
pushf
ds
xchg
imul
or
lahf
popa
add
lods
xor
test
dec
mov
cld
xchg
mov
lret
push
cmpsb
mov
stos
shl
push
pop
jnp
mov
push
shlb
push
mov
adc
sub
bound
add
aas
sub
outsl
xor
pusha
push
out
and
jnp
pop
cwtl
movsl
mov
or
xchg
push
inc
mov
and
xchg
xchg
cmp
fisttpl
and
cli
inc
arpl
jo
hlt
mov
mov
inc
ss
arpl
mov
mov
adc
lret
idivb
out
mov
sub
mov
jnp
and
xchg
repz
push
sbb
inc
nop
mov
push
inc
loope
in
das
or
sbb
cmc
rcrl
xor
dec
rcrb
ss
inc
jl
mov
outsl
pop
out
into
push
enter
sbb
mov
inc
xor
fstpt
or
sbb
enter
cmpsb
cmp
xchg
add
pusha
push
pop
and
shrl
out
test
aad
repnz
lret
rcll
ret
icebp
sbb
xor
adc
sbb
ret
icebp
mov
mov
sub
mov
pop
jmp
stc
mov
inc
dec
sub
leave
ljmp
sbb
mov
lcall
or
adc
insl
imul
mov
cmp
icebp
xchg
push
xchg
popl
aaa
jb
sub
inc
cmp
mov
inc
es
push
jge
mov
xchg
pop
mov
in
jnp
in
adc
adc
sub
in
loope
sub
ds
out
sbbl
fnstenv
sahf
or
leave
out
cmp
cld
outsl
enter
cmp
mov
jo
jae
cwtl
scas
sub
sub
mov
cmp
lret
loopne
decl
push
jbe
mov
pop
jbe
movsb
jge
mov
xor
pop
les
dec
shlb
js
mov
cld
outsb
pop
pop
sub
repnz
and
popf
cmp
in
lahf
sbb
dec
inc
push
xchg
and
popa
push
pop
and
adc
out
sub
rolb
cld
xchg
das
fildll
loopne
in
add
mov
sub
mov
imul
test
inc
lret
and
dec
mov
std
fisttpl
sbb
rolb
xor
and
adc
xchg
mov
inc
or
outsb
cmp
mov
or
xchg
inc
cli
sub
sbb
stos
lods
call
add
aas
loope
scas
cmc
or
and
insb
pop
xchg
xchg
test
jmp
push
mov
imul
xchg
rcl
sbb
fidivrl
dec
shrb
cmc
mov
clc
scas
push
or
jmp
pop
mov
sbb
jge
ja
std
fistl
pop
mov
xor
mov
mov
xor
xchg
add
pop
jmp
imul
in
pop
inc
push
inc
outsb
cmpb
mov
xchg
mov
mov
xchg
leave
rorl
and
cmp
mov
pushf
enter
or
in
mov
mov
xchg
mov
arpl
xchg
imul
test
adc
pushf
and
add
xorl
lret
cmp
inc
sbb
sub
xor
shlb
ljmp
je
ss
orl
cld
inc
cmp
mov
xor
sub
lea
mov
ret
pop
pop
pushf
inc
jge
or
icebp
sti
adc
sub
scas
stc
jnp
out
push
push
xlat
dec
lods
clc
xorb
in
fisttps
adc
stos
out
lock
adc
outsb
pop
cs
add
jmp
decb
mov
and
sub
cmp
jne
xchg
push
sbb
test
out
push
scas
jno
mov
mov
movsl
xlat
clc
shrb
mov
incl
shl
aaa
push
jo
cld
hlt
iret
repnz
mov
mov
aam
fldcw
out
add
xchg
mov
jae
test
adc
and
dec
mov
xchg
test
xchg
popl
fcmovbe
lods
mov
mov
sub
inc
mov
inc
fs
and
add
xchg
mov
rclb
dec
pusha
mov
jbe
scas
les
jmp
xchg
mov
outsl
filds
cmpsl
xor
ret
in
and
pop
outsl
icebp
nop
pusha
lcall
add
mov
mov
enter
scas
push
and
fstp
mov
in
add
call
mov
sbb
lret
bound
cltd
dec
jne
mov
inc
jmp
sbb
or
jo
in
das
inc
rolb
icebp
add
and
sub
or
into
loop
pop
inc
shll
xchg
mov
in
sbb
add
xorl
jae
cltd
aam
add
xchg
std
pop
add
stos
xchg
sub
test
jbe
bound
cmc
not
adc
loop
push
xchg
sbb
inc
aaa
jl
cs
aad
pop
loopne
mov
jns
sbb
into
sbb
shlb
hlt
cwtl
enter
mov
js
mov
scas
stos
clc
jo
scas
mov
xlat
and
inc
and
repz
lea
cmp
cmc
or
inc
loope
push
inc
in
ret
xchg
test
cwtl
jo
pop
mov
pop
mov
inc
cmp
sub
incb
mov
popf
push
jb
dec
xchg
pop
fistl
sbb
out
mov
scas
loop
in
cmpsl
cs
fdivs
ficomps
clc
mov
cltd
in
ljmp
xor
test
mov
outsb
popf
xchg
push
ja
outsl
js
clc
jnp
push
adc
adc
stos
insl
jne
xchg
cmp
push
jp
cld
pop
rol
cmpsb
add
pause
insb
and
inc
jno
mov
sbb
cmp
fstp
mov
shll
test
cmp
mov
shrl
xor
pop
test
pop
sub
push
lahf
mov
rclb
adc
inc
mov
call
sbb
ficomps
add
sub
pop
jbe
fsubrs
pop
cmp
loopne
ds
jg
push
xchg
fcoml
xchg
jbe
in
cmp
sar
add
cmp
dec
xor
int3
adc
js
fmuls
dec
add
sub
dec
or
mov
jg
lock
cmp
or
add
pop
sbb
mov
pop
pop
jp,pt
sub
std
addb
addb
in
mov
inc
jge
mov
mov
ficoml
sub
lcall
xlat
cmc
mov
jmp
push
xchg
scas
jge
sbb
mov
sbb
shll
outsb
jnp
movsb
imul
xchg
shll
das
xor
or
jno
fdivs
subb
push
lock
or
cmpsl
lret
cmpsl
ret
enter
jle
loopne
lods
cwtl
cmp
or
addr16
int
clc
pop
test
jecxz
shll
adc
mov
and
cwtl
push
push
and
pop
jle
divl
xchg
add
sub
or
arpl
mov
outsb
jno
mov
xchg
ja
inc
pop
test
outsb
jnp
push
sti
shrl
mov
rorb
mov
jbe
int
inc
aad
ds
jbe
xor
jne
shl
cmp
fildl
pop
icebp
sbb
movsl
add
mov
out
or
adc
cmp
sbb
mov
jo
push
cli
fcomi
lods
or
cs
stc
pop
push
cmc
repz
mov
jmp
inc
dec
sbb
imul
cmp
pop
loopne
pop
and
mov
and
lcall
dec
repz
rol
insb
dec
aam
sub
in
xor
iret
add
sbb
and
out
inc
add
jne
in
jbe
add
ds
push
outsl
cmp
inc
js
xor
mov
ret
pop
ret
mov
dec
fstps
aas
add
lret
aad
push
push
mov
jg
pop
dec
out
pushf
mov
push
push
jae
fstpt
jecxz
xchg
push
inc
imul
dec
push
loopne
inc
mov
mov
cmc
sti
aad
sbb
enter
cmpsl
outsb
mov
aad
push
add
jmp
and
or
sub
sarb
popa
pop
js
mov
mov
dec
stc
and
jge
xchg
insb
movsl
xchg
inc
fidivrl
in
das
outsl
cli
movsl
ljmp
inc
cmp
cmp
push
bound
mov
cs
or
shlb
fnstsw
mov
test
mov
aaa
xchg
pop
add
aam
mov
mov
inc
ret
in
mov
cli
sub
in
fistps
xlat
les
mov
icebp
outsl
lcall
mov
jl
push
in
cmp
mov
sti
lods
and
out
fs
das
mov
and
mov
add
not
inc
inc
out
xchg
lea
cmp
lock
add
mov
pusha
clc
lret
scas
ficomps
mov
jmp
mov
add
insl
sbb
out
mov
jge
mov
pop
lahf
and
mov
cmp
adc
dec
mov
cmpsl
adc
je
push
sbb
stos
sbb
and
lcall
movsl
call
shl
ds
push
pop
adc
dec
sub
xchg
outsl
adc
mov
adc
sbb
push
shl
sbb
dec
out
mov
dec
test
adc
add
push
mov
sub
sub
inc
testl
outsb
popf
xchg
push
lods
icebp
push
fadd
lods
das
sbb
mov
pop
aas
push
pop
je
mov
pop
and
pop
sbb
xlat
mov
fadds
mov
sub
xchg
xchg
push
lea
fsubrl
dec
fildll
push
xchg
ds
dec
pop
jb
loop
sbb
daa
mov
out
jp
inc
call
inc
add
fmul
rcll
adc
incl
inc
inc
lahf
cmp
movsb
sbb
shlb
sbb
push
push
inc
es
add
jle
push
add
jmp
mov
jl
cmp
shl
sbb
xchg
mov
dec
inc
sub
ret
mov
push
sub
cld
push
xchg
sahf
and
xor
mov
aad
ret
insb
sbb
lcall
or
xchg
repz
hlt
fwait
cli
add
imul
push
mov
sbb
loope
rcr
leave
push
jecxz
sub
fisttpll
addr16
inc
iret
push
icebp
fisttpl
aas
sbb
cli
sbb
mov
cs
mov
stos
fdivr
and
sbbb
or
rol
mov
in
dec
leave
stos
shlb
or
arpl
and
push
cmp
lds
or
jmp
shrl
js
or
es
das
je
mov
cmpsb
pop
sti
imul
jmp
sti
push
xchg
push
pop
push
sbb
push
mov
mov
jbe
dec
add
sbb
xor
mov
mov
xor
hlt
cs
andl
pop
mov
mov
mov
push
or
imull
jnp
lods
movsl
stos
pop
addr16
push
adc
mov
mov
pop
sbb
cmp
inc
ss
sub
sbb
aas
push
test
negb
loop
and
aad
xchg
or
fcmovnb
lock
and
in
int3
or
fs
xor
rcrl
xor
mov
addb
sbb
push
dec
sbb
pop
xchg
jbe
insl
lret
push
jmp
leave
jnp
andb
cmp
test
in
test
ret
xchg
cli
decl
mov
inc
or
lock
pusha
incb
fiadds
push
and
inc
jg
pop
std
orb
inc
and
dec
and
movsb
inc
or
in
push
vsubsd
jl
inc
pop
fiaddl
test
pop
push
push
xchg
leave
pop
add
xchg
pushf
divb
ljmp
das
shrb
push
lock
xchg
adc
adc
in
lods
sbb
mov
es
mov
ja
sub
aaa
push
stc
adc
ss
outsl
jae
adc
pop
jbe
jo,pn
adc
mov
sub
sub
std
xchg
ss
xor
fwait
rcrl
loope
or
outsl
inc
out
aam
aas
push
sub
inc
clc
call
add
es
loope
mov
jae
testb
les
cmc
pop
clc
bound
cld
pop
testb
insb
addb
mov
hlt
xchg
fisubrs
jl
mov
mov
jg
add
test
mov
insl
push
add
sti
ret
int3
xor
faddl
pop
mov
loopne
mov
outsl
mov
push
fucomp
incl
pusha
icebp
sbb
jge
xchg
clc
pop
xchg
pushf
ret
sub
inc
xchg
loopne
jo
push
scas
aas
test
out
stos
cs
adc
mov
mov
pop
gs
adc
sbbb
dec
aaa
inc
mov
hlt
aam
push
pushf
adc
rcl
ret
sub
mov
ffree
sarb
dec
cli
std
mov
out
ljmp
lds
imul
xor
pop
inc
test
add
mov
pop
cmc
movsl
sti
fcoms
or
iret
ret
fsubrs
sub
pusha
das
dec
xor
lcall
iret
inc
inc
cmp
mov
xchg
adc
loop
inc
pusha
js
in
pop
xchg
push
jno
leave
aad
dec
sbb
cmp
adc
push
addr16
mov
pop
pop
jecxz
out
jle
adcl
or
or
fistpl
push
test
in
loopne
rolb
out
inc
in
adc
lahf
rcll
das
mov
mov
cs
es
push
pop
mov
fdiv
push
rcrl
fistpll
adc
insl
fsubs
insl
mov
add
sbb
sub
outsb
andl
pop
rep
les
ja
inc
inc
fistps
cmp
or
lds
pop
nop
rol
std
jne
mov
popf
pop
xlat
imul
call
repnz
push
in
cmp
mov
jmp
mov
dec
mov
jmp
cld
inc
int3
cmc
sub
inc
or
pop
push
adc
rorb
add
clc
mov
enter
push
pop
sbb
cli
xchg
stos
cld
mov
ljmp
push
call
lds
mov
inc
notb
adc
sbb
and
fstpl
repz
popf
xor
call
fcomi
ja
mov
xchg
adc
xchg
mov
pop
mov
xor
cmpb
push
addr16
pop
sbb
sbb
sub
jge
mov
dec
daa
inc
push
dec
cmpsl
enter
push
jg
mov
jg
ror
cli
in
fwait
repnz
rcrl
out
mov
ret
sbb
movsl
mov
inc
jmp
add
lcall
jbe
ss
sbb
fs
mov
lcall
xchg
mov
cmp
into
pop
adc
xor
das
jo
les
cltd
or
loopne
push
pop
inc
adc
push
xchg
test
test
or
test
pusha
xlat
out
imul
mov
jmp
and
mov
xor
inc
xlat
adc
aad
lret
rcrb
pushf
into
jecxz
ja
jne
call
jne
fistpl
adc
or
and
push
ljmp
xor
add
fidivs
pop
mov
dec
sub
sarb
popf
pop
sub
fistps
repz
push
mov
mov
btr
jmp
std
fisubs
adc
add
icebp
cwtl
jbe
out
jg
data16
movsb
mov
adc
and
mov
cmpb
cmp
gs
fs
fdivrl
inc
std
rcr
push
lret
inc
dec
loop
lds
pop
decb
jbe
adc
test
aaa
lods
aad
pop
loop
cltd
xbegin
in
dec
je
inc
push
sarb
xchg
inc
or
out
bound
loope
mov
movups
jle
leave
rcrb
mov
sahf
xor
push
add
or
push
int3
adc
push
rcll
lock
inc
pop
inc
pop
loope
cli
aam
pop
jge
sbbl
mov
imul
mov
mov
inc
cmp
pop
test
mov
inc
add
adc
iret
popf
ljmp
pop
mov
inc
aad
jecxz
es
or
and
sbb
les
xchg
fs
pop
or
out
push
inc
leave
cmp
mov
mov
sbb
test
mov
cld
scas
icebp
icebp
or
pop
mov
inc
xchg
adc
push
ljmp
dec
js
insb
mov
orb
mov
push
xchg
and
das
dec
in
mov
ljmp
push
loopne
sub
adc
cmpl
or
les
and
sarl
lds
jnp
pop
mov
xor
lahf
sbb
std
in
in
scas
jle
addb
pop
ljmp
jns
sub
and
inc
ret
jbe
push
roll
adc
pop
adc
out
cmp
pop
jo
ljmp
and
inc
mov
lock
adc
subb
mov
pop
xor
shlb
loop
push
pop
pop
jne
insl
mov
cmpb
stc
dec
adc
test
dec
shlb
jge
fwait
dec
das
aam
ret
pop
mov
jne
and
mov
loope
repz
repnz
fcoms
fimull
stos
mov
and
jae
add
in
mov
cmc
fucomip
mov
insl
nop
lcall
mov
inc
movsb
movsl
push
xor
into
push
lcall
or
scas
sbbb
aad
xor
adc
pop
dec
mov
add
inc
enter
js
push
outsb
push
inc
loopne
or
and
pop
cli
scas
stc
inc
pop
rorb
ja
inc
andb
pop
enter
dec
cmp
inc
mov
or
pop
mov
rorb
mov
push
cmp
mov
sbb
lret
dec
std
adc
insb
xchg
push
mov
dec
scas
mov
push
jl
sbb
add
push
dec
and
xor
add
xlat
mov
mov
loop
push
push
faddl
sub
out
or
lods
lahf
push
or
fidivs
jl
in
lods
in
test
nop
push
jae
jo
out
out
adc
mov
test
jnp
push
xor
leave
notl
mov
jb
rolb
ret
mov
and
dec
dec
cld
jo
je
das
cld
lea
mov
cmp
sub
or
mov
mov
inc
cmc
adc
ja
insb
cwtl
movsl
inc
push
mov
in
stc
mov
add
mov
andl
lock
add
rcrb
pusha
push
add
dec
cs
adc
or
fildll
adc
push
cld
jg
add
verr
popa
mov
mov
hlt
or
and
sahf
rorb
inc
inc
inc
inc
fdivl
push
mov
fldl
jle
jg
outsl
sbb
jne
xor
andl
mov
les
lds
sbb
adc
aaa
es
push
das
in
cmp
inc
or
jbe
xchg
fdivrp
filds
lea
dec
push
pushf
rcl
ret
inc
xor
inc
hlt
in
cmp
and
jne
scas
inc
mov
js
lahf
repz
mov
cmp
movsl
mov
lods
inc
cmp
das
add
adc
xor
je
xchg
je
lea
stos
pop
inc
and
dec
ja
adc
dec
or
inc
lods
cmpsb
mov
in
jge
xor
aaa
cmp
pushl
jmp
rcl
pop
fwait
adc
test
loopne
or
pop
shrl
jge
xor
xor
inc
dec
dec
sbb
pop
cli
jmp
jl
or
mov
pop
pop
push
clc
adc
orl
xchg
jmp
out
scas
les
xchg
repnz
scas
inc
xor
scas
push
sbb
xchg
ret
js
lock
sub
fbstp
push
adc
scas
xor
adc
insb
insb
jmp
in
and
call
insb
pop
andb
xchg
icebp
popf
out
push
xor
dec
adc
and
imul
lods
mov
js
adc
idiv
rorl
frstor
mov
out
loopne
shl
mov
ret
mov
shll
push
jg
dec
or
mov
out
shll
or
jns
cmpsb
test
std
adc
inc
in
sub
xchg
xor
fadd
rcrb
or
mov
sbb
push
pop
xchg
stos
push
mov
mov
lea
lcall
pop
test
iret
lahf
cmp
negb
mov
loop
not
imull
subb
rcl
fdivrp
mov
negb
gs
fsts
pop
xor
xor
jbe
testl
loopne
push
jno
xor
xchg
aaa
adc
test
outsl
inc
dec
xor
lahf
leave
cmp
jecxz
push
cmpsl
adc
cld
ja
clc
mov
outsl
repz
add
dec
add
jge
je
testb
rcrb
jnp
add
cmpsb
jno
add
ret
or
mov
inc
adc
mov
rclb
add
rcll
outsl
out
call
dec
mov
sahf
mov
movsb
pushf
jmp
icebp
fstpt
and
aad
mov
and
pushf
inc
lock
pop
pushf
mov
aad
jb
outsb
cld
pop
fildl
dec
mov
inc
ret
or
lea
push
hlt
mov
jmp
adc
movsb
inc
aad
rorl
dec
icebp
cmp
mov
mov
add
mov
dec
mov
pop
pop
mov
jg
sti
outsb
sbb
inc
xchg
imul
out
mov
push
inc
or
ret
mov
add
sbb
test
mov
loope
jge
in
sub
fs
loope
lret
outsl
mov
test
stos
arpl
pop
xchg
out
lret
rclb
xchg
and
decl
add
dec
inc
xorb
adc
adc
add
sbb
mov
movsl
in
mov
add
sar
fistpll
scas
das
mov
xchg
sub
fldenv
mov
testl
pop
shlb
addr16
es
dec
cmc
test
jp
nopl
arpl
inc
lods
add
mov
mov
shll
arpl
out
lock
jecxz
jg
xorl
pop
xor
push
pop
das
mov
lds
pop
pusha
add
inc
sbb
mov
test
xor
test
or
js
add
cmpsb
push
movb
push
add
test
ljmp
jl
push
jmp
adc
cwtl
pop
inc
data16
cmc
andl
mov
add
sbb
pushf
aas
rcrl
hlt
lcall
aam
mov
in
and
inc
out
pop
cmp
or
mov
inc
mov
sbb
inc
dec
mov
xlat
jb
sbb
loope
and
aaa
addr16
test
cmp
lock
adc
xchg
adc
and
cmp
movsl
call
test
push
push
insb
les
add
cmc
xchg
pop
or
rep
insl
fwait
xchg
cmpsb
lcall
movb
outsb
loopne
loopne
sbb
add
insl
cmp
and
xor
fwait
mov
cltd
dec
ja
icebp
push
popa
xlat
ja
into
xchg
dec
push
cli
push
aaa
pop
sub
loop
mov
mov
adc
nop
ja
scas
mov
cltd
addb
call
or
or
xor
jno
sbb
add
shll
je
loopne
push
dec
and
pop
rcll
lods
lock
add
in
cmp
mov
add
outsl
mov
lcall
js
mov
outsb
mov
add
stos
imul
lods
mov
inc
pop
lret
mov
inc
push
cli
jb
add
push
lahf
stos
ss
sub
idivl
out
sbb
out
nop
mov
dec
lock
push
sbb
mov
jle
lcall
std
addr16
xchg
loopne
lea
inc
mov
jecxz
hlt
mov
sub
cmpsb
adc
jbe
jo
ljmp
pop
adcl
mov
test
add
insb
pop
jbe
add
pushl
and
jo
mov
jnp
inc
push
imul
jecxz
push
andl
mov
test
aas
sbb
cmpsl
adc
sahf
push
movsb
adcb
inc
xchg
inc
sub
lods
mov
pop
pop
repz
aam
out
inc
jg
pusha
sbb
mov
adc
push
scas
outsl
fst
clc
nop
xchg
xchg
out
std
outsl
aam
xchg
adc
pop
das
cs
nopl
mov
nop
test
mov
or
sub
inc
push
dec
adc
inc
mov
icebp
call
lds
lcall
std
adc
or
mov
xor
adc
das
cmc
shlb
add
clc
fimull
outsb
mov
pop
clc
das
adc
mov
xor
mov
add
mov
insb
hlt
mov
shll
cmp
mov
nop
decl
xlat
imul
std
mov
repnz
je
adc
cmpsb
mov
mov
jbe
adc
ficoml
jbe
cli
lods
xchg
inc
cwtl
pop
insl
popa
push
mov
sbb
call
add
outsl
sbb
movsl
repz
pop
adc
push
xlat
mov
ret
sbb
add
cmp
mulb
lods
and
pop
inc
xchg
push
and
add
hlt
jb
mov
in
jns
adc
sub
mov
imul
fldt
and
jns
das
dec
mov
aaa
fsubp
mov
aam
push
fwait
jecxz
dec
sbb
std
das
jl
pop
push
mov
mov
push
cmp
sti
shll
push
sub
das
push
mov
popa
sbb
loope
mov
out
or
shlb
cmp
int
sub
mov
mov
push
inc
stos
mov
push
aam
push
outsb
and
jl
int
jge
pop
push
add
cmpsb
lret
fsubrl
std
xchg
hlt
adc
mov
sbb
jl
fwait
iret
mov
xor
addr16
or
stos
push
jg
out
mov
mov
mov
xlat
dec
xor
mov
sbb
test
jo
lret
mov
stc
mov
sub
cwtl
push
les
mov
shrb
ret
pushf
xor
sti
push
cmp
jns
adc
inc
out
dec
dec
ficoml
mov
sbb
xor
and
push
pop
sub
xlat
add
add
or
fcomps
inc
jnp
call
ds
jne
adc
mov
add
ret
fistps
xor
je
jno
jl
pop
jp
pop
lcall
xor
mov
jg
test
pop
dec
push
inc
cmp
add
mov
jecxz
sbb
movsl
push
pushf
and
mov
inc
pushf
or
lock
xchg
ljmp
mov
lock
lock
js
aaa
std
push
lock
xchg
js
sbb
or
hlt
jnp
inc
mov
mov
cmpsl
das
xor
inc
sti
test
insb
stos
lret
push
aad
xor
mov
fcom
push
sub
and
repnz
mov
fcmovnbe
sbb
mov
mov
inc
cmp
push
ror
sbb
push
imul
inc
add
test
sbb
hlt
repz
out
ret
mov
mov
sbb
or
sub
js
scas
jmp
lods
cmp
fisttps
mov
mov
in
mov
test
pop
ljmp
sarb
inc
ds
subl
ja
lock
leave
aam
stc
adc
out
hlt
std
mov
mov
dec
lds
test
fdivrp
pop
clc
ret
cld
mov
dec
leave
ja
sub
adc
push
cmpsl
and
sahf
lock
and
mov
clc
loop
cmc
jmp
push
push
sub
mov
sub
xchg
jg
jle
sub
clc
xor
nop
gs
test
outsb
ljmp
mov
out
mov
shlb
aas
and
fmull
mov
rolb
sbb
mov
sub
fistps
aad
adc
xchg
mov
repnz
inc
add
xor
decl
pop
daa
mov
inc
jns
les
es
jg
and
sub
push
jo
imul
cltd
lcall
and
pop
jns
pusha
add
repnz
movsl
shrl
fucomp
jbe
data16
cmp
shlb
adc
outsl
leave
iret
mov
jns
xchg
add
add
testl
inc
sub
mov
and
sar
dec
mov
movsb
dec
mov
pop
jb
in
cmc
mov
mov
push
aas
sub
inc
scas
xchg
subb
jae
xlat
cmpsl
inc
ljmp
cli
add
mov
inc
or
and
xor
xor
jle
jbe
ret
or
scas
clc
repnz
mov
pop
cmpsl
jge
nop
xlat
push
mov
dec
popa
stos
dec
mov
pop
loopne
xor
cld
mov
jnp
pop
inc
sub
pop
scas
fldcw
or
in
in
pop
outsb
test
mov
out
in
aas
scas
dec
jno
aam
add
packsswb
movsb
mov
decb
or
push
fbld
sub
adc
sbb
mov
adc
inc
sbb
arpl
lods
pop
repnz
or
lret
inc
fidivl
mov
or
movsl
cmp
and
or
xor
call
pop
andl
mov
pop
pop
add
or
sub
jl
addr16
dec
das
push
enter
adc
inc
cld
jne
jno
mov
and
shrb
xlat
mov
lcall
sub
lods
cmc
ret
xlat
mov
sbb
jle
in
pushl
lcall
or
and
xchg
push
adc
push
lret
inc
jecxz
jl
fidivrs
nop
and
ffree
sbb
pop
jnp,pt
sbb
test
inc
notl
mov
mov
sbb
sub
scas
jg
imulb
jbe
sub
push
xchg
mov
ja
insb
call
pop
inc
aad
incl
jae
sarl
leave
add
pop
sub
stos
in
call
or
mov
mov
cmpsb
jne
pop
dec
sbb
ss
fidivrs
test
shl
iret
out
jle
jle
js
push
imul
jae
mov
pop
sti
fistl
aaa
mov
adc
cmp
mov
pusha
cs
lcall
and
or
sbb
xor
adc
fs
sub
push
imul
out
orb
je
add
loop
lcall
pop
call
and
cmpsb
and
cld
das
mov
subl
stos
js
dec
das
into
xchg
jecxz
popa
add
pop
xor
mov
push
iret
jbe
imul
iret
subl
decl
fmull
loope
and
pusha
push
icebp
sbb
jge
jno
movsb
mov
ja
sub
and
sbb
pushl
mov
hlt
mov
mov
pop
mov
clc
ja
xor
push
xor
pop
mov
rolb
cs
ds
stos
pop
fidivrs
pop
aas
lahf
inc
insl
nop
dec
jmp
pushf
loope
andl
out
mov
mov
hlt
lea
mov
mov
jp
scas
or
mov
loope
jae
cmp
jno
adc
xchg
and
xor
add
aaa
jle
testb
mov
scas
data16
imulb
fisubl
and
loop
push
jmp
add
in
aaa
jg
jae
xor
or
pop
stc
enter
lods
imul
mov
mov
inc
mov
xchg
inc
adc
fnstsw
pop
jl
pop
in
cmp
call
loopne
fbld
notb
mov
fs
push
inc
adc
push
cli
pop
sar
nop
mov
jg
sub
inc
xor
push
insb
fdivr
and
hlt
or
ja
clc
mov
or
sub
xor
imul
lds
js
fsts
jnp
mov
aas
adc
or
xchg
xchg
aad
cli
call
or
mov
shll
fdivl
das
les
push
popa
int
sahf
mov
jle
xor
mov
cli
xlat
rcrl
enter
sbb
ret
sar
dec
decl
jbe
dec
add
inc
add
push
rcr
dec
adc
das
mov
add
add
add
dec
xchg
pop
imul
sbb
les
dec
clc
inc
dec
pushl
aam
pop
ret
setg
xchg
icebp
adc
hlt
mov
mov
jae
push
xlat
pop
inc
pop
sbb
or
jo
xchg
add
outsl
push
ljmp
nop
mov
push
stc
insb
jge
mov
adc
aad
ror
loop
inc
ja
out
lcall
mov
add
fnstcw
xchg
pop
dec
jnp
jnp
fidivs
adc
and
dec
mov
loop
xor
arpl
ljmp
pop
sbb
fs
mov
xlat
scas
push
icebp
sub
cwtl
mov
push
das
fldl
out
inc
out
add
stc
testb
xlat
insb
imul
fdivrl
mov
lret
fildll
jmp
or
cs
lcall
insb
inc
ret
inc
stos
or
jbe
mov
subb
inc
dec
mov
mov
stos
fidivrl
aad
imul
add
test
dec
and
cmp
fcoms
pop
jnp
adc
cmpsb
dec
imul
xor
mov
jae
js
sbb
popa
inc
into
cli
movsb
cmpsb
movl
mov
and
jne
push
into
push
test
mov
jle
sub
and
mov
xor
les
testl
addr16
stc
dec
mov
std
inc
inc
test
pop
lcall
xlat
les
adc
push
pop
popl
sbb
std
lcall
mov
xorl
or
aam
sbb
or
ss
jle
outsl
mov
mov
and
dec
push
sub
je
sub
loopne
pop
pop
push
ss
mov
xchg
test
jg
mov
xor
movsl
test
loopne
dec
cmp
dec
xor
add
lea
pop
pop
sub
dec
sbb
imul
pop
andb
pop
insb
ret
mov
outsl
inc
xchg
fxch
mov
loopne
cmp
repnz
push
rcl
push
push
cli
loopne
mov
add
and
clc
sub
cmp
loopne
inc
and
sbb
int
add
or
int
inc
icebp
jg
inc
lods
sbb
es
pop
shll
mov
iret
pushf
push
dec
ret
add
and
lcall
fdivr
popf
push
sub
insb
sbb
push
test
lcall
pushf
adc
pop
std
in
jo
cmpsb
ljmp
outsl
test
pop
movsl
mov
adc
mov
pushf
push
mov
mov
pop
out
mov
cmc
cmp
xchg
pop
add
movsb
mov
ss
sbbl
pop
jg
clc
cld
ret
lret
add
repz
outsl
es
cmovg
pop
push
je
mov
mov
jecxz
ret
inc
clc
mov
push
jno
cwtl
jb
out
hlt
enter
sbb
ret
orl
push
lock
xor
jle
xlat
xlat
push
or
aad
iret
int3
shll
lds
jg
adc
inc
mov
lods
xchg
enter
push
ret
fucomi
cmp
out
pushf
scas
inc
xor
in
test
or
push
add
cwtl
or
clc
js
push
fisubrl
mov
jbe
add
sbb
sub
mov
aad
sbb
adc
js
jbe
jg
mov
and
mov
mov
ss
dec
fwait
push
fidivl
pop
outsl
add
rclb
sub
ljmp
mov
mov
test
xchg
fldt
ljmp
shl
shl
int
repnz
out
lods
add
xchg
cmp
mov
dec
add
xlat
adc
das
xor
stos
or
jo
sahf
cmp
mov
pop
ret
push
in
rorb
mov
cmp
jecxz
lock
fptan
movsb
sti
cmp
mov
mov
adc
das
jge
or
mov
mov
int
mov
cli
rcl
daa
fwait
cmpsb
sbb
fnstsw
xlat
in
sbb
mov
je
push
sbb
mul
cmp
jge
inc
xor
leave
and
lea
mov
and
xchg
jne
mov
imul
or
ljmp
jge
mov
clc
out
cmpsl
movsb
shld
sbb
sub
ds
jl
xor
andl
loope
add
dec
pop
daa
pop
ret
jne
sub
cltd
sti
mov
neg
mov
lock
test
ja
andb
and
sbb
mov
mov
sbb
addr16
mov
filds
jp
lea
dec
jmp
and
ja
mov
imul
jg
mov
cwtl
mov
lock
xor
cld
aam
push
movl
push
aam
rcrb
in
outsb
into
dec
movlps
mov
adc
repnz
inc
push
imul
mov
mov
out
xchg
dec
push
adc
pop
setl
inc
jne
sub
jnp
xor
test
cmc
scas
dec
cmc
push
imul
mov
add
inc
inc
jge
add
pop
mov
mov
pop
outsl
clc
push
mov
loope
push
adc
mov
or
jbe
pop
call
xchg
inc
movsb
inc
adc
iret
fs
inc
mov
stos
adc
xchg
jbe
mov
and
sarl
xchg
rcll
fldt
in
sub
cmp
adc
mov
lahf
repz
mov
rorl
hlt
mov
iret
sub
xchg
out
mov
mov
cwtl
jle
mov
and
push
sbb
sarb
sub
shlb
and
fsubrs
push
cmc
jle
repz
stos
in
pop
mov
xchg
jne
sub
xor
push
mov
inc
cmpsb
vmovdqu
dec
das
xchg
mov
dec
hlt
es
cmp
jle
push
push
pop
or
fstpl
fucomp
xor
sbb
cmp
sar
in
add
xchg
aas
in
xchg
sub
loopne
adcl
scas
mov
lock
addb
pop
or
inc
lcall
shrl
outsb
loop
into
movsl
outsl
in
outsb
jae
cmp
and
cmp
in
jl
mov
push
sbb
fmull
mov
jne
or
dec
popf
sbb
ficoms
add
rorl
fwait
loopne
icebp
fwait
mov
lcall
and
lahf
push
cmp
jl
xchg
clc
lods
mov
fsubl
sub
ja
adc
inc
dec
stos
sbb
test
loop
adc
xchg
lods
adc
cmc
aas
push
jne
jp
bnd
inc
popa
dec
mov
arpl
and
mov
inc
pop
sub
dec
adc
ljmp
in
push
pop
cmp
inc
enter
std
fcmovnu
cli
add
sbb
loope
stos
push
jo
sbb
inc
dec
outsl
pushl
pop
cmp
movsb
cmpsb
mov
iret
xor
and
imul
aam
sbb
xchg
sbb
out
rcl
fs
xchg
or
js
popf
jo
shrb
cmp
inc
jns
dec
addr16
sbb
jle
bound
repnz
sub
decl
jecxz
divb
dec
out
sub
es
lea
test
cli
cli
inc
movsl
out
cmp
pushf
mov
sub
in
xor
mov
mov
rorl
ljmp
stos
outsl
pop
jle
ljmp
adc
out
js
movsl
mov
xor
adc
or
mov
sbb
popf
sbb
push
je
and
dec
inc
popf
aad
clc
fbstp
std
inc
push
shl
test
mov
sbb
xchg
sbb
mov
sbb
imul
dec
jo
stc
xor
push
lret
dec
sub
inc
mov
mov
clc
push
mov
mov
ret
lds
mov
xchg
cmc
in
lcall
pop
popa
cmpsb
sub
pop
pop
scas
lods
push
pop
add
popf
mov
ja
add
bound
pop
stos
sbb
subl
ret
mov
imul
loope
mov
sbb
data16
xor
mov
cmc
inc
mov
inc
pop
stos
mov
mov
lods
mov
and
loopne
xchg
mov
loopne
nop
js
fldcw
outsl
pop
shl
inc
mov
rol
inc
ss
fdivrs
xchg
push
mov
jne
aad
push
xorb
push
addr16
jnp
lds
pop
shll
dec
mov
imul
mov
orb
fcoml
jnp
int
lods
rorb
xchg
jle
cli
and
cwtl
jg
test
xor
dec
loopne
push
add
and
cmp
cli
mov
or
je
xorl
shll
aas
inc
fdivr
add
adcb
pop
std
push
das
jl
mov
movsl
pushf
cmp
aaa
jmp
outsb
ss
cmp
xor
stos
insl
mov
push
mov
outsb
cmp
imul
insb
popf
ret
or
pop
je
fdivs
jae
es
cli
call
ficoms
shrl
ss
xlat
pop
js
and
pop
or
jle
pop
into
lcall
push
add
jne
fucom
mov
decl
in
add
pushf
add
mov
movsl
andb
ret
push
and
jbe
sub
mov
test
insb
mov
mov
inc
test
das
cmp
repnz
frstor
jge
inc
cli
andb
lea
dec
mov
scas
xor
cmc
rcrl
inc
hlt
outsl
xor
xchg
repz
arpl
mov
in
mov
loopne
pop
cltd
add
inc
push
mov
imul
pop
into
push
cmpsl
xor
div
mov
lcall
push
adc
mov
sub
cmc
push
xchg
rorl
jnp
sub
inc
notl
mov
sbbb
adc
lea
fdivrp
mov
je
jo
push
loopne
lret
xchg
mov
sbb
out
sub
adc
jl
nop
pusha
adcb
sub
std
jg
sub
movsl
or
outsb
sub
xor
test
jp
add
mov
add
jle
mov
jge
mov
lds
mov
adc
mov
pop
dec
xor
clc
test
js
out
mov
xchg
push
jne
push
pop
in
orb
adc
lock
hlt
fldt
mov
and
jmp
lods
push
subb
cli
testb
shrb
out
add
adc
cmp
and
test
xorb
jg
rcl
jg
xchg
pop
xchg
sub
adc
sarb
mov
sbb
mov
xchg
push
int
adcl
ss
push
fldenv
lahf
push
xor
or
jne
call
sub
sub
js
dec
lcall
inc
hlt
cmp
add
or
push
sub
adcl
cmpsl
cmp
mov
or
cli
repz
mov
cmpsl
mov
sub
inc
bound
ljmp
bound
stos
and
cmp
cmp
sub
scas
andb
adc
mov
out
mov
cmp
out
jo
loope
push
inc
sysret
mov
aas
add
push
aaa
mov
hlt
das
jbe
push
and
dec
or
les
sub
pop
inc
loope
out
fcoms
push
mov
or
pusha
sub
pop
lock
adc
sbb
jne
data16
jmp
sub
cmp
pop
dec
fwait
jmp
dec
cmpb
jns
clc
or
fcoml
inc
or
cltd
inc
push
cmpsl
ret
jo
cld
lcall
nop
mov
adc
fnsave
add
hlt
cmp
test
sbb
and
or
xchg
mov
mov
push
push
sub
mov
inc
outsl
cmp
outsl
inc
lret
sbb
clc
into
xchg
mov
and
push
test
push
push
pop
mov
xchg
and
push
in
setle
mov
pop
push
mov
mov
pop
mov
mov
mov
decb
mov
call
or
inc
cmp
test
les
add
pop
fdivl
movsl
testb
push
push
dec
in
cltd
mov
xorb
fstpl
push
push
sbb
les
add
push
jo
pop
adc
push
push
push
lods
push
or
dec
mov
push
add
mov
or
roll
hlt
mov
das
push
fstpl
dec
xchg
loop
or
lods
adc
jb
add
xchg
and
jp
movsl
sub
add
test
add
mov
incl
sub
adc
jle
jns
xor
push
outsl
inc
sbb
and
xchg
cmp
fdivrp
dec
or
loope
mov
add
daa
cmp
or
popa
adcl
mov
fnstcw
push
ja
pop
icebp
jle
jae
and
push
cli
lcall
adc
loopne
pop
das
out
xchg
xchg
fsubs
or
fisubrs
dec
xchg
xlat
push
xorb
mov
push
movsl
pushw
xlat
loope
jae
push
xchg
pop
xchg
cmp
lcall
ss
addl
xchg
lcall
sbb
xchg
in
and
mov
mov
fdivrl
adc
cmc
dec
sbb
lods
mov
pop
add
mov
leave
pop
add
dec
mov
jb
push
xor
mov
mov
mov
adc
decl
test
orb
inc
xchg
ret
bound
mov
xchg
dec
lret
push
cmp
orb
insb
dec
jg
hlt
test
sbb
leave
data16
push
pop
scas
sarb
iret
dec
cmp
in
or
mov
and
int3
scas
push
xor
sbb
js
outsb
jecxz
in
add
pop
dec
les
jbe
jle
ret
es
outsb
cmp
push
ds
push
pushf
cmp
gs
das
mov
icebp
mov
inc
daa
daa
dec
subl
outsb
call
fidivrs
fcmovnb
fisttpl
leave
sbb
add
push
inc
mov
inc
or
jb
mov
dec
mov
xchg
popa
and
inc
addr16
outsl
roll
fldcw
push
int
add
arpl
push
mov
inc
and
inc
pop
xchg
fdivrp
jbe
cld
insb
mov
sub
xchg
or
push
aaa
mov
jns
loope
ret
scas
insl
jmp
mov
fdivrs
leave
cli
jo
pop
pusha
add
lock
inc
dec
push
lcall
xchg
push
or
and
out
add
dec
ljmp
rcll
addr16
inc
roll
loopne
mov
mov
shrb
test
incl
inc
sub
dec
and
jmp
xchg
jg
les
fistpl
xorl
xchg
jl
pop
jb
adc
sub
dec
insl
loopne
add
sub
ficoml
dec
adcb
xchg
pushf
fiadds
shrl
mov
es
out
push
pop
push
or
data16
push
lock
push
pop
aas
loope
jne
adc
jle
sbb
push
add
loopne
xchg
xchg
hlt
dec
ja
sub
popf
cmp
mov
mov
iret
xchg
loop
mov
pop
sbbb
jnp
neg
outsl
and
xor
push
pop
cli
push
dec
push
stos
test
lret
add
jmp
jbe
dec
add
inc
out
inc
or
inc
push
lret
out
or
cmp
test
sti
lret
stos
inc
inc
aad
lock
filds
jne
xor
ret
inc
cmp
sbb
rolb
cld
insb
mov
jmp
xor
pusha
stos
sbb
lret
xor
push
xchg
sub
pop
cli
jg
lret
mov
push
xchg
icebp
enter
insb
ret
add
jge
jmp
out
adc
divl
pop
test
sub
test
mov
add
push
push
pop
cmp
or
cmpl
xchg
sahf
mov
roll
sbb
dec
sbb
call
aam
sub
stc
and
xor
repz
push
mov
push
jbe
pushl
pusha
adc
pusha
jbe
pusha
idivl
xchg
insl
js
rolb
js
stos
add
jo
sub
outsb
outsb
mov
stos
mov
mov
rcr
sar
movsb
jle
testb
sub
movsl
out
pusha
cwtl
lock
add
cmpsb
jno
inc
inc
xchg
push
insl
push
jecxz
pop
cltd
aad
mov
loopne
adc
enter
sti
or
push
and
or
filds
rol
lret
mov
les
dec
out
rcl
lcall
pop
clc
add
add
repnz
adc
mov
push
jb
mov
push
xor
mov
jmp
add
mul
fistl
push
movsl
stos
mov
lret
cmp
negb
jle
lock
pusha
es
pop
pop
loopne
push
sbb
fcomi
fwait
mov
mov
mov
orb
mov
je
js
cli
andl
mov
shrb
push
cmp
mov
andl
fistl
mov
fildl
pop
sub
dec
mov
jnp
sbb
or
mov
push
xor
jb
movsb
push
or
incb
or
test
leave
mov
jl
out
lods
orl
clc
xor
jle
push
add
cmp
jge
cli
inc
loope
ds
and
gs
inc
cmp
repz
or
bound
inc
rclb
gs
push
fidivrs
pop
pusha
pop
mov
scas
fbld
mov
xchg
inc
mov
into
test
ljmp
mov
mov
sub
push
and
arpl
or
pop
xchg
jl
xchg
das
add
jns
data16
fucomip
sub
insb
sti
loopne
orb
or
inc
shlb
ss
adc
xor
push
inc
shrl
xchg
out
or
push
fimuls
decl
cvtps2pi
out
jno
inc
mov
cmp
push
cmp
ss
fisubl
lock
push
pop
mov
sbb
rcll
push
and
stos
mov
fistps
sbb
hlt
testb
cmp
xchg
and
das
insl
in
in
lea
rorb
pop
insl
es
mov
and
inc
sahf
jbe
jne
loop
cli
jge
aad
inc
mov
mov
aad
sbb
test
insl
xor
sahf
xor
in
or
loopne
add
or
in
and
adc
add
roll
add
sbb
mov
cld
aaa
push
pusha
dec
scas
jle
aad
dec
dec
mov
lods
lods
push
outsb
leave
std
loop
add
scas
fs
pusha
jecxz
pop
loope
fimull
push
insl
mov
in
xchg
sub
pop
sub
testb
ret
fmulp
jge
sub
mov
jle
adc
shll
cltd
cs
andl
adc
outsl
int
cs
mov
dec
leave
sahf
jbe
adcl
or
adc
adc
outsb
imul
and
jb
mov
into
inc
jne
jno
sub
adc
pop
mov
insb
out
jmp
adc
mov
call
cmp
mov
aaa
mov
inc
cs
mov
jne
xlat
lods
lods
pop
repz
loop
addr16
gs
mov
mov
xchg
mov
loopne
lret
inc
dec
inc
mov
mov
ret
les
mov
mov
cld
or
mov
test
mov
pop
insb
adc
je
mov
mov
inc
adc
mov
mov
hlt
nop
dec
leave
or
and
das
add
add
roll
idivb
addr16
adc
push
and
test
jo
movsl
mov
or
inc
out
push
or
mov
incl
pop
ficoml
jmp
iret
dec
test
out
add
andb
push
lea
jae
bound
ret
sbb
jnp
inc
inc
mov
push
incl
lods
xor
call
cmpsl
add
clc
mov
test
adc
pop
or
fdivrl
lds
and
js
je
hlt
jp
add
jbe
les
xor
test
mov
pop
mov
popa
and
add
and
push
mov
xor
stos
fildl
loop
dec
add
pop
sbb
cmp
or
cli
mov
adc
lods
jb
mov
stos
out
sti
push
xchg
dec
sub
rcll
aad
ss
and
popl
push
mov
pop
aaa
jbe
adc
cld
mov
cmp
cs
push
or
mov
inc
clc
aaa
lock
test
xchg
imul
xchg
add
jg
pop
insl
adc
push
out
adc
jmp
sub
test
outsl
lret
insl
cmp
push
js
mov
lea
ljmp
sub
jl
mov
cmp
or
adcb
daa
cli
pop
jle
in
push
std
iret
xor
in
daa
fisubrs
cs
mov
push
push
jp
pop
sub
bound
cld
mov
movsl
ljmp
ss
sub
out
mov
cmp
mov
fdivs
fbld
dec
dec
push
pop
sbb
mov
add
rcrl
jl
push
es
ss
mov
jb
rcrl
mov
or
stos
push
add
jo
loop
movsb
xor
inc
and
lock
je
nop
pushf
inc
cmp
stc
add
mov
sbb
jb
jno
mov
mov
out
je
or
adc
movsl
pushl
rorl
push
sub
ds
adc
adc
mov
mov
test
jmp
pop
mov
subb
pop
movsb
xorb
dec
pusha
adc
or
leave
iret
add
and
into
mov
push
stos
pop
loopne
dec
dec
cltd
jp
loop
mov
sbb
jbe
jg
fistpll
iret
dec
jno
loop
popf
call
pop
aaa
pop
pop
iret
xchg
es
inc
mov
inc
xorb
pop
xchg
mov
dec
xor
sbb
dec
lds
andb
dec
inc
mov
movsl
inc
inc
xchg
inc
sub
mov
mov
add
mov
adc
inc
push
sbb
mov
loop
mov
scas
add
xchg
pusha
mov
xor
xlat
movsl
pop
add
movsl
mov
push
mov
je
jg
and
add
push
loopne
enter
insl
mov
xor
add
adc
gs
dec
push
mov
repz
sbb
adc
xor
hlt
aaa
test
dec
mov
sub
in
cltd
pop
adc
xchg
inc
push
mov
shll
rorb
push
or
adc
in
das
inc
insb
out
repnz
nop
rol
out
inc
das
sbb
ja
pusha
adc
adc
sub
push
add
or
ret
mov
mov
and
inc
dec
or
pop
push
add
add
or
inc
test
xchg
pop
hlt
pop
ja
pop
mov
stos
sarl
xchg
mov
jbe
jns
mov
jo
xchg
sbb
fsubs
and
jge
daa
inc
lret
cmp
ret
lret
fwait
iret
jb
and
pop
movsl
push
push
bound
imul
push
mov
inc
test
sahf
or
add
dec
add
cmp
mov
shrl
sbb
es
rorl
in
inc
ljmp
inc
call
and
mov
scas
in
lds
pop
sub
scas
or
lds
aaa
incb
ret
push
cmp
loope
arpl
nop
pop
cli
lock
out
test
mov
test
cmpsb
out
decl
scas
into
mov
xor
mov
loope
push
call
push
inc
mov
add
inc
icebp
ljmp
pop
mov
mov
adc
jo
adc
outsl
fnstsw
pop
sub
hlt
dec
les
jl
inc
pop
xor
pop
call
clc
mov
push
movsb
repz
add
lods
rcrl
sahf
sahf
aas
push
aam
adc
in
inc
pushl
and
jle
jo
pop
scas
mov
jmp
das
cld
pop
jns
inc
xchg
push
inc
std
les
adc
jp
push
sbb
ja
mov
dec
jo
sub
adc
nop
dec
subl
cmp
cmpsl
scas
push
push
pop
push
loopne,pt
mov
aad
fsts
and
in
push
add
jecxz
mov
outsb
into
xchg
add
push
fistps
rorb
xchg
aas
fsts
lret
push
mov
pusha
sti
enter
test
shll
out
pop
js
dec
and
insl
mov
sti
xchg
clc
int
in
test
pop
mov
and
mov
inc
cmc
lea
mov
mov
or
pop
fs
push
mov
xchg
jbe
notl
out
cli
ss
js
outsb
faddl
leave
out
int3
popa
and
gs
or
sti
dec
hlt
push
inc
adc
fwait
add
cmp
nop
jbe
dec
imul
in
push
shrb
popa
call
mov
loop
xor
faddl
inc
or
push
aam
imul
in
sbbb
xor
dec
xor
push
cmc
push
int
lea
lret
mov
push
sub
inc
insl
or
fwait
scas
mov
lods
icebp
push
sbbb
jmp
xor
push
adc
push
sbb
rcll
lcall
and
sub
sub
and
mov
imul
cwtl
push
lret
lahf
sub
insb
sub
incb
jne
ja
sti
adc
inc
mov
dec
es
stos
pusha
fs
clc
filds
scas
jbe
jns
cmc
call
inc
enter
xchg
push
fwait
xor
mov
mov
jp
sbb
lock
pop
inc
mov
sbb
cmp
adc
push
or
adc
stc
cmp
sub
lods
push
cmp
xchg
cmpsb
pop
dec
dec
mov
xchg
repz
pop
inc
sub
xor
and
jecxz
add
cli
xor
ljmp
sbb
sbb
dec
popa
mov
xor
sub
inc
in
loopne
out
mov
push
cmc
adc
adc
std
out
outsb
inc
fistl
imul
cmp
test
stos
insl
push
js
sti
sbb
adc
ret
mov
mov
test
adc
cmp
add
mov
clc
scas
enter
add
addb
sub
lret
hlt
lock
mov
fs
fistps
xor
add
mov
inc
loop
mov
or
or
push
jl
out
mov
and
out
inc
or
sub
pop
fbstp
bound
mov
cld
jg
inc
jns
push
mov
sub
fldcw
loope
xchg
stos
aaa
dec
fildll
push
imul
es
std
sbb
add
mov
fwait
cli
add
cmpsb
icebp
jbe
outsl
icebp
ljmp
addr16
mov
daa
pop
aam
add
or
loopne
mov
and
call
pop
ja
add
dec
shrl
pop
repnz
fildll
fldl
add
inc
adc
pop
adc
mov
sub
cmpsl
test
mov
aaa
push
sahf
test
shlb
dec
jg
inc
add
adcl
jns
and
push
loop
mov
pusha
pusha
push
rcl
mov
jp,pn
or
pop
mov
push
pushf
inc
pop
ficompl
ja
or
inc
xchg
popf
sbb
cwtl
clc
pushl
sub
test
push
push
data16
or
aaa
les
add
mov
and
sub
incb
push
lcall
stos
aas
dec
stos
mov
adc
aaa
clc
hlt
mov
fnstsw
add
pop
fstpt
mov
cwtl
jne
xchg
inc
cmc
mulb
lahf
test
jge
add
outsb
rorl
mov
adc
popf
dec
cmp
in
adc
sub
pop
popl
clc
push
or
fstp
clc
add
mov
out
int
xor
push
mov
nop
movsl
mov
mov
push
cmc
mov
pop
push
scas
xor
int
rcll
loop
mov
jb
xchg
xlat
test
or
test
or
jg
push
or
xchg
mov
lock
sub
cmp
mov
mov
sub
dec
add
or
cli
fisubs
mov
mov
ss
or
fidivs
dec
ret
sbb
or
and
imul
xor
pop
jg
das
sub
jbe
aaa
je
pop
dec
mov
dec
add
mov
ret
in
inc
daa
mov
int3
out
and
and
or
sbb
lods
test
fsub
sbb
ret
insb
cmp
ljmp
push
and
push
test
test
mov
mov
js
ret
mov
push
dec
iret
je
insb
into
mov
fdivs
jp
addr16
ds
dec
sbb
rorl
pop
sbb
popa
push
push
adc
test
inc
ja
dec
push
xor
out
add
add
pop
pop
push
xor
mov
mov
mov
pop
mov
ljmp
and
and
pusha
icebp
test
dec
cltd
shl
xchg
push
clc
add
push
push
pop
inc
fists
xlat
jbe
pop
inc
out
jo
jno
push
mov
sub
adc
and
adc
mov
es
dec
xchg
in
pop
insb
fsubrl
xor
ret
pushf
cltd
mov
jg
add
movsl
stos
ret
inc
stc
test
rorb
rcl
test
mov
fistpll
mov
cmp
pop
outsl
xchg
or
testw
pushf
xchg
div
pop
icebp
sbb
mov
loopne,pn
ljmp
pushf
ljmp
mov
dec
jecxz
lods
lods
add
sbb
ss
mov
jp
pop
mov
or
sbb
sti
push
incl
bound
mov
xlat
daa
sub
xor
push
loope
testl
dec
push
decb
and
push
leave
scas
cmpsl
dec
out
fimull
mov
mov
xor
sbb
add
add
fucomip
test
cwtl
andl
test
jg
les
dec
fs
scas
and
cmp
jge
jg
cmc
shlb
js
insb
cmp
pushl
and
sub
mov
or
fcmovnb
pop
push
inc
push
jl
add
mov
filds
incl
inc
js
clc
dec
in
out
in
movb
sub
sbb
addb
fstpt
inc
dec
mov
sub
dec
outsl
jg
aam
xor
sbb
jo
jns
pop
out
xchg
jle
jp
mov
sarl
mov
add
das
mov
or
js
push
lcall
int3
adc
mov
xchg
dec
push
and
mov
mov
jnp
out
jl
dec
push
xchg
in
inc
push
xchg
push
orl
push
loopne
xor
push
jle
push
push
pop
shlb
int3
les
dec
fldt
push
and
fs
mov
xor
movsl
testl
stos
call
push
xor
and
testb
stc
outsl
outsl
fistpll
ret
loopne
and
stos
sbb
insl
idivl
hlt
roll
adc
push
out
jbe
movsl
jg
sub
out
inc
push
pop
mov
mov
push
push
jo
inc
cs
stos
shlb
aad
sbb
aas
outsl
arpl
or
out
mov
inc
pushf
loop
inc
adc
cmp
mov
jl
and
dec
xchg
sbb
bound
ss
jmp
aaa
dec
aam
test
dec
cli
dec
add
mov
jge
jbe
jb
sub
stc
js
sbb
mov
addr16
lods
xor
lods
sbb
mov
jno
pop
mov
cld
xchg
and
cmpsb
mov
fadd
fistpll
in
inc
cmp
test
push
rcrb
movsl
in
push
loope
outsl
mov
or
push
mov
orl
es
jo
xchg
inc
sbb
mov
in
mov
push
sbbl
outsl
and
pop
aam
mov
loope
ret
popf
push
call
xchg
pushf
gs
mov
inc
add
jge
push
and
xor
push
xchg
inc
adcb
icebp
pop
inc
push
add
in
xchg
sub
sti
testb
inc
xchg
push
repz
ret
push
sub
push
je
xchg
sahf
mov
std
fadds
add
inc
or
jl
lret
fldt
mov
pop
dec
or
ss
loope
sbb
inc
mov
lds
mov
jmp
lock
outsl
or
add
adc
adc
sub
add
pushl
xchg
std
bound
or
inc
lock
call
adc
add
daa
pop
int
push
dec
push
syscall
jo
push
cltd
push
adc
js
movsl
pop
push
adc
mov
adc
cli
ficoms
dec
push
mov
call
stos
test
movb
outsl
cmp
pop
and
sbb
and
mov
jmp
stc
mov
sti
jl
cmpsb
push
pop
pop
sahf
xchg
pusha
mov
pop
ja
shr
pop
xchg
nop
inc
push
mov
hlt
mov
sbb
inc
push
cld
inc
pop
movsl
inc
add
dec
adc
cld
cmc
loopne
out
jbe
repz
or
sub
sbb
imul
push
lods
cmp
mov
jns
dec
in
outsl
pop
xchg
in
mov
fwait
dec
cmp
popa
adc
xor
cli
mov
push
lret
pop
fwait
mov
dec
push
pop
mov
push
test
sbb
test
sbb
adc
ljmp
sarb
xchg
ret
add
pop
daa
pop
rcrb
sbb
lods
cs
dec
ja
icebp
in
adc
jp
add
hlt
movsl
int3
push
stos
xlat
scas
push
mov
add
dec
test
insb
add
test
mov
sbb
push
xorb
mov
fisttps
movsl
lods
mov
dec
sarl
call
in
mov
cmpsl
push
push
je
pop
add
add
stos
mov
sbb
stos
in
out
call
push
dec
cmpsl
pop
imul
dec
dec
inc
xchg
ljmp
xor
test
in
adc
and
lods
test
ret
in
push
nop
push
call
xor
sbb
cli
fimuls
or
and
jnp
sbb
testb
pop
rcr
jno
xchg
xlat
xchg
lods
sub
jo
jae
stos
cmc
or
js
jl
cld
lds
mov
mov
shrd
add
les
cwtl
mov
push
das
je
and
icebp
fwait
push
js
and
mov
add
adc
add
or
xchg
mov
push
or
mov
push
cwtl
jns
cmp
shr
jno
jmp
in
sti
jg
loope
and
es
out
or
cld
inc
jge
mov
outsl
ja
push
push
fsub
sbbb
imul
sub
dec
pop
mov
push
je
into
inc
cmp
ret
dec
add
or
xor
mov
mov
cmpsl
leave
inc
dec
rcrb
adc
push
mov
xchg
inc
inc
ret
fs
das
jl
adc
jo
and
or
cmp
pushf
mov
or
les
rclb
ss
jecxz
adc
jg
lods
das
rclb
mov
ljmp
inc
in
fsub
mov
fildl
and
out
imul
loopne
dec
roll
sub
push
xor
shr
insl
insb
jne
or
into
cmpsl
mov
add
sbb
fnsave
jae
dec
gs
mov
adcl
xlat
dec
nop
popa
cli
adc
pop
cmp
xchg
stos
sub
cmp
cltd
push
mov
ret
xchg
adc
or
inc
and
sbb
cmp
loope
scas
or
sub
std
call
dec
ljmp
cmc
cmp
cmpsb
daa
shl
and
sbb
addr16
test
inc
inc
dec
pop
cli
jg
jbe
out
movsl
add
clc
mov
or
mov
sahf
adc
mov
nop
jp
sbb
jae
out
inc
fbld
cmp
inc
shl
adc
leave
cmp
jg
outsl
cmp
push
clc
xchg
clc
cmp
or
push
insb
pop
test
and
pop
or
and
cwtl
sbbl
dec
pop
call
inc
sub
cmp
rcr
or
clc
pop
pop
sbb
fistpll
adc
pop
orb
fsubrs
inc
sub
mov
or
dec
in
cwtl
iret
dec
xchg
icebp
ljmp
hlt
mov
xor
inc
ss
or
je
roll
loopne
sbb
aam
stos
hlt
fisubrl
nop
cmp
mov
and
das
cmp
cli
addl
dec
xor
fistl
lea
xor
into
hlt
or
arpl
jecxz
js
test
arpl
push
pop
mov
mov
or
pop
imul
mov
sahf
aad
mov
lahf
xchg
outsb
mov
aam
mov
xor
or
xchg
movsl
inc
mov
imul
mov
imul
loopne
pop
add
mov
ficompl
dec
sbb
add
push
adc
daa
xor
shll
ret
mov
xorb
mov
jbe
cli
movsb
rol
daa
jg
add
jmp
jo
and
jl
and
into
push
jb
push
daa
jge
adc
clc
stos
fisttpll
adc
and
and
push
lods
outsl
out
mov
std
and
mov
pop
xchg
xor
scas
andb
mov
ret
aam
jle
in
rcrl
sbb
fprem
idiv
test
repz
popa
mov
mov
mov
pop
ficomps
and
test
lock
je
mov
nop
std
lods
ljmp
movsl
sbb
fsubrs
ret
inc
add
mov
sbb
mov
std
push
ficompl
rcrb
mov
jl
adc
dec
pop
ss
sub
fwait
xchg
mov
call
popa
xor
mov
fistpll
jo
notb
and
arpl
cs
fdivp
das
add
xor
inc
iret
fcomi
mov
ficomps
sub
mov
ja
int3
pop
dec
inc
pop
mov
adc
push
jge
fs
int
movhps
mov
call
int3
xchg
mov
mov
and
leave
sbb
int3
or
jl
rol
adc
aaa
mov
cmc
cmpsl
mov
xchg
xor
js
jg
or
inc
xor
dec
mov
mov
mov
and
aam
movsl
jg
jmp
sub
and
arpl
loope
movsl
clc
cmp
insl
cmc
incl
xchg
push
cmovbe
sub
dec
pop
jno
xchg
or
leave
in
push
mov
nop
adc
push
or
adc
pop
in
xchg
xor
jecxz
jge
push
outsb
lock
mov
out
xchg
push
xlat
or
jp
sbbl
adc
inc
mov
xor
lret
test
nop
int3
mov
cltd
clc
inc
repz
scas
mov
decl
icebp
push
lock
mov
addl
add
fldt
or
clc
inc
pop
xor
test
test
push
daa
pop
push
mov
enter
or
dec
dec
or
sar
insl
and
sub
call
lahf
lock
notl
enter
rorl
rorb
xor
or
mov
add
mov
cmp
sub
push
dec
or
xor
inc
imul
mov
pop
out
dec
mov
icebp
loop
shr
jno
in
fisttps
movups
addl
test
test
pop
push
iret
jg
je
and
add
cmp
adc
mov
cmp
ljmp
sub
mov
xchg
jmp
jge
mov
mov
push
mov
add
nop
mov
mov
ljmp
mov
stos
xchg
cltd
or
stos
sarb
and
or
in
jl
call
and
cmp
add
pop
ret
cld
call
outsl
and
cltd
mov
inc
sbb
test
dec
ss
xchg
dec
sub
aam
push
aaa
pop
movsw
adcb
cwtl
out
adc
testl
dec
jae
adc
ljmp
cmc
adc
shll
cwtl
and
insb
mov
inc
mov
mov
pop
pop
aam
cmp
in
mov
pop
jge
fbld
imul
cmpsl
xlat
mov
call
xorb
cmp
int3
sbb
mov
in
adc
or
mov
sbb
sub
sarb
pop
mov
mov
orl
mov
rcrl
jmp
adc
inc
dec
and
lcall
push
out
adc
ret
gs
xchg
lcall
mov
rcrl
incl
sahf
lret
test
jecxz
and
add
mov
les
add
popa
in
mov
sub
mov
mov
mov
test
inc
in
adc
clc
pop
pop
popf
jae
dec
or
sbbb
sahf
sub
loopne
add
push
aas
cwtl
fs
outsb
subl
inc
and
dec
jl
xorb
or
pop
mov
movsb
ret
cwtl
cmp
lds
clc
aaa
push
rcrb
jnp
outsb
lret
push
push
push
fildll
pxor
enter
outsw
test
loopne
sub
mov
sbb
out
jnp
mov
outsl
call
in
cmpb
inc
xchg
ljmp
std
and
sub
adcb
fimull
les
test
bound
outsl
jl
xor
in
mov
loop
loope
icebp
and
pop
call
push
pop
fnstcw
inc
ror
mov
inc
outsb
imul
cld
mov
imul
sarl
ss
pop
dec
dec
jno
ds
vhsubpd
or
cs
mov
insl
out
jl
cmp
inc
ss
notl
mov
mov
push
pusha
ret
std
lcall
fidivs
inc
repz
jecxz
ja
inc
xchg
lcall
inc
fstpt
mov
les
jmp
out
cmp
pop
jp
in
ljmp
xor
jp
nop
xchg
shrb
mov
loope
sub
dec
aaa
sub
call
xor
xchg
pop
shl
ret
test
mov
ss
in
enter
push
or
mov
out
std
enter
adc
mov
mov
and
cmp
mov
xor
jb
xchg
rorl
je
inc
dec
push
push
adc
movsb
push
jl
rcr
jbe
rcrl
and
stos
imul
fldt
insb
cmp
xor
hlt
je
lea
mov
test
add
cmp
push
test
cwtl
xorl
mov
subb
adc
incl
mov
push
aam
push
cmpl
fistl
rolb
xor
pop
or
mov
and
and
pushf
xor
pop
ljmp
call
mov
adc
aaa
add
in
in
imul
negb
cwtl
mov
pop
inc
fs
adc
mov
shlb
rolb
popf
xchg
stos
hlt
decl
push
mov
adc
jo
nop
xor
or
push
and
dec
or
dec
push
mov
enter
or
push
mov
jmp
test
enter
xchg
movsl
movsl
cld
sbb
shlb
lea
daa
imul
fcomp
inc
ret
movsl
filds
inc
hlt
in
data16
test
test
mov
jmp
pop
inc
add
fidivrs
xchg
sub
jnp
xor
push
inc
das
sub
mov
sub
adc
xchg
jno
cwtl
in
std
loopne
pop
js
jg
inc
std
pusha
cmp
or
or
cmp
lock
hlt
loop
push
and
movsl
add
outsl
scas
jmp
pop
cli
outsl
lret
jne
dec
jbe
adc
out
adc
cld
add
mov
mov
scas
mov
fldcw
mov
mov
lock
add
and
dec
call
and
ljmp
mov
push
in
pop
aam
xchg
inc
dec
adc
scas
sub
lahf
lock
fisttpl
decb
xlat
iret
mov
sub
out
aaa
ss
imul
cmp
inc
and
inc
jg
mov
leave
lds
xor
pop
fsubr
inc
pop
pop
loopne
loope
insb
add
iret
sarl
cld
add
subb
fcmovnb
fildll
fildl
lea
xchg
jbe
add
sbb
jno
rol
fs
mov
or
mull
daa
pop
cmp
fbld
adc
sbb
orb
out
add
rsm
imul
sahf
xor
push
notb
cwtl
cmp
fwait
mov
adc
addr16
test
sti
inc
and
lea
imulb
aas
test
mov
leave
jb
add
inc
lret
xor
lods
out
xlat
nop
adc
sbb
stos
cmp
xlat
mov
sbb
or
or
pop
add
test
lods
mov
rclw
jo
aaa
call
push
aaa
add
loopne
push
inc
das
adc
fbstp
mov
es
or
inc
das
hlt
fabs
sub
lods
dec
outsb
cmp
movsl
mov
and
cmp
pusha
mov
mov
push
popa
cmc
pop
test
cs
push
xchg
pop
mov
cli
fisttps
lcall
mov
add
int
xchg
out
rclb
sbb
pushf
xlat
or
mov
sbb
pop
nop
orb
decl
movl
int3
outsl
rorb
and
andb
mov
mov
dec
mov
push
rcrl
xor
sub
sub
mov
test
add
dec
fstp
mov
or
and
ret
loopne
inc
outsl
or
outsl
mov
and
idivl
sub
mov
lods
dec
push
out
mov
aad
mov
cmp
insl
add
shl
push
ljmp
out
shrb
stos
sbb
movsl
dec
mov
in
mov
es
pop
and
test
rol
jmp
mov
add
int3
push
hlt
pop
test
xchg
mov
gs
movsl
inc
popa
icebp
add
js
and
ja
mov
cmp
cmp
or
mov
mov
jecxz
jmp
cmp
in
pop
or
mov
lock
out
inc
ret
xchg
pop
aad
mov
test
stos
jno
lock
test
jle
sbb
out
int3
jl
or
lods
scas
sbb
sbb
add
dec
aad
mov
decl
outsb
mov
push
sbb
fs
jl
fwait
clc
jb
js
sub
jo
mov
or
push
xor
mov
icebp
xchg
xor
aas
mov
imull
xor
loopne
xor
dec
pusha
mov
mov
sub
in
jg
jo
test
or
inc
jge
jbe
in
sbb
fnsave
jecxz
sub
addl
aam
inc
ret
sbb
jo
iret
adc
das
push
or
out
scas
decl
sbb
adc
fs
loope
mov
loopne
sbb
outsl
sbbb
adc
mov
sar
sbb
pop
push
pop
ret
mull
lds
das
lcall
dec
lcall
jno
mov
xor
aad
sub
push
and
and
in
das
mov
xchg
loopne
je
int3
cvtdq2ps
inc
test
mov
inc
imul
call
push
lcall
aaa
shll
xchg
in
or
mov
xlat
mov
clc
mov
push
incl
mov
and
loopne
push
in
cmpsb
dec
sar
in
incl
dec
out
sbb
daa
push
dec
cmc
pop
lahf
mov
mov
movsl
pop
into
out
xlat
dec
mov
fstp
sub
es
notb
mov
fcmovnbe
add
vorps
aam
mov
or
mov
jle
jmp
or
cltd
xchg
inc
fwait
inc
mov
sbb
out
loope
sbb
mov
mov
pushf
jns
aaa
clc
mov
lods
add
pop
and
shl
sub
push
cld
or
mov
movsb
imul
and
cli
sbb
in
adc
cli
and
insb
cmc
orb
xor
roll
stos
mov
js
add
div
and
fisttpll
adc
clc
jle
jg
push
mov
jp
sub
sarl
inc
gs
loopne
jp
or
enter
fildl
sbb
and
adcb
mov
mov
adc
outsl
js
adc
dec
loope
xchg
filds
icebp
pop
mov
or
test
adc
lsl
in
or
xlat
incl
lahf
lea
push
cmp
or
stos
leave
mov
push
ret
jne
out
push
and
sti
testb
int3
mov
and
out
fwait
outsb
mov
mov
outsb
cmpsb
ss
loopne
mov
cmc
or
aam
aaa
adc
incl
mov
adc
cltd
stos
pop
out
cmp
cmpsb
and
shl
mov
inc
jmp
bound
scas
mov
mov
fistpl
pop
js
or
movsb
adc
adc
inc
test
or
cmp
ficoml
incl
mov
adc
jae
jb
sub
mov
inc
loopne
and
dec
cmp
push
xchg
lcall
jl
jl
pop
or
push
push
jne
leave
loopne
mov
pushaw
mov
or
push
clc
pop
clc
xchg
test
das
dec
jae
sbb
idivb
outsl
inc
xor
inc
loope
in
cmp
pop
aam
icebp
adcb
pop
adc
cmp
loopne
hlt
fldcw
cmpsb
sub
mov
xchg
xchg
jb
mov
scas
mov
lods
adc
jle
ljmp
ds
push
add
and
sub
xor
sbb
push
sbb
jle
rcrl
int3
xor
pop
adc
mov
movsl
xchg
popf
fmul
rolb
lret
repz
lea
dec
jecxz
js
test
push
ss
xor
cmp
mov
std
jg
push
or
iret
adc
je
sub
cmpl
fcomps
mov
lea
add
incb
shrb
in
neg
ret
mov
sub
jb
and
inc
movsl
fwait
and
shrl
adc
mov
jp
test
push
mov
dec
fwait
pop
je
lds
ret
je
das
insl
out
das
in
movsb
sbb
mov
mov
out
in
jg
mov
mov
data16
push
sbb
or
adc
add
cmp
das
test
add
sub
ror
insb
orb
or
lods
test
cmp
cmp
adc
push
sub
mov
aas
jmp
je
mov
incl
in
and
jno
aad
mov
pop
jle
jo
adc
cmp
inc
dec
xchg
xchg
cli
aaa
ljmp
mov
sub
pop
mov
lret
push
sbb
ret
sub
or
cld
fbstp
js
lret
sbb
xchg
in
call
roll
sub
dec
sbb
pushf
or
adc
sbb
rorl
add
jmp
push
repz
mov
mov
xchg
jp
movsl
fildl
fisubrl
lea
loopne
jge
mov
adc
push
adc
daa
in
push
mov
push
add
adc
mov
enter
arpl
pop
repnz
mov
mov
sbb
mov
in
or
cmc
repz
adc
or
mov
mov
movsl
jbe
jmp
push
xchg
jmp
xchg
mov
mov
ss
les
decl
inc
loopne
outsl
and
icebp
xor
mov
push
insb
leave
dec
pop
pop
jecxz
mov
call
jnp
call
data16
mov
enter
mov
add
lcall
loopne
popf
stos
xor
fadds
pop
xlat
test
es
ror
test
sbb
call
aaa
fiadds
cwtl
ja
rcrb
dec
cmpsb
cmc
and
dec
jmp
and
iret
int
or
lret
mov
mov
cmp
adc
xor
inc
jge
hlt
andl
dec
xor
mov
enter
enter
xchg
clc
dec
repz
arpl
fmull
xchg
sub
push
xchg
sub
leave
jnp
xlat
fisttps
mov
hlt
out
sahf
cmp
das
sbb
add
mov
js
adc
in
sbb
xchg
inc
jp
les
pop
push
sub
test
aaa
adcb
jo
sbb
push
sbb
repnz
jg
mov
push
jle
andb
dec
fstpt
inc
inc
es
pop
into
mov
mov
push
adc
les
mov
push
loope
repz
jl
sbb
bnd
rol
adc
jecxz
fstpt
xor
sub
jg
push
shl
mov
addl
cmc
adc
add
xor
xchg
test
test
xor
addb
mov
fs
add
pusha
adc
je
int3
loopne
das
fcmovb
xorb
push
push
fs
mov
push
push
or
popf
adc
mov
dec
repnz
adc
dec
mov
roll
pop
or
aad
clc
cmp
cmp
xchg
jg
lock
dec
sub
mov
add
push
inc
stos
add
rcrb
hlt
sub
insb
cmp
iret
pop
ljmp
sbbl
lods
xor
cmpsb
sbb
subb
pusha
add
inc
inc
xchg
repz
imul
push
push
xchg
dec
and
lea
aaa
les
mov
mov
jbe
and
mov
iret
cmpsb
inc
fimuls
adc
mov
mov
or
push
adc
cmp
dec
push
mov
and
sbb
sub
das
icebp
sbb
jmp
aad
add
xor
rcrb
push
pop
push
push
outsb
inc
sbb
jp
fsubrp
add
outsl
ljmp
cltd
rclb
in
mov
adcl
insb
hlt
ror
jl
pop
pop
sub
std
icebp
dec
cld
loop
shlb
out
adc
mov
scas
sub
mov
fwait
jns
insl
sti
movsl
cmp
and
inc
out
out
aam
lods
mov
inc
xchg
push
test
adc
test
in
xchg
call
arpl
js
inc
pop
loopne
inc
cld
jno
or
push
lods
loopne
or
dec
sbb
xchg
or
das
std
or
pusha
lahf
ljmp
dec
mov
pop
aad
aad
and
test
inc
in
cmpsb
jle
sbb
sub
aaa
in
mov
push
adc
fbstp
lock
test
sub
cwtl
add
or
movsb
sub
lcall
cmp
pop
xchg
jecxz
in
out
popa
mov
mov
sar
push
push
ss
clc
mov
xchg
xor
call
push
cwtl
adc
in
faddl
or
cmc
mov
fwait
mov
jo
pop
jnp
push
jbe
mov
decl
mov
daa
addps
pop
nop
mov
outsl
inc
das
shlb
iret
push
sub
inc
pusha
cmp
outsb
cld
aam
mov
test
dec
stos
sbb
out
test
push
addr16
in
sbb
jno
cmp
xor
mov
mov
mov
pop
add
adc
rorl
andb
sbb
sbb
xor
rorb
clc
decl
addb
cmp
cmp
mov
xlat
mov
pop
clc
call
or
in
pushf
push
jo
fldenv
dec
dec
push
push
jnp
stos
enter
call
in
sub
or
push
push
push
push
lea
jbe
inc
cld
push
push
lcall
mov
call
or
push
jnp
jae
hlt
pushl
push
add
push
loopne
push
adc
call
add
flds
shll
cmp
inc
not
jmp
fwait
sub
pop
and
jns
jno
fstp
pop
mull
xor
cmp
add
popa
imul
cmp
jg
inc
sbb
add
push
neg
jmp
push
xchg
mov
in
outsb
clc
add
push
push
sub
pop
sbb
es
dec
test
push
cmp
sub
and
push
pushf
in
pusha
movsl
sub
sub
loopne
fsubr
jle
jae
jno
dec
push
dec
lock
outsl
add
jae
jg
out
ret
inc
adc
mov
adc
xor
clc
sarl
jmp
push
hlt
push
push
or
jo
arpl
dec
pushw
rclb
fisubrl
jmp
insl
jbe
neg
int
imul
push
dec
push
push
dec
xor
push
dec
imul
pop
add
pop
jo
adc
je
aaa
jl
push
add
hlt
insl
repnz
out
cs
and
fcmovu
fnsave
daa
inc
imul
aas
fistpl
les
in
push
js
call
aas
pusha
xchg
push
xorl
push
inc
cld
pop
rcl
dec
push
push
pusha
aas
mov
lret
adc
sub
inc
clc
or
outsb
xor
cmp
jb
xchg
mov
clc
data16
dec
jo
call
decb
icebp
inc
add
push
dec
jmp
mov
or
inc
push
push
and
popa
pop
pop
les
mov
sti
idivb
push
outsl
dec
imul
fildl
js
jb
add
and
cld
push
inc
dec
loopne
leave
mov
jmp
xlat
jbe
cmovo
push
dec
loop
call
test
icebp
sbb
not
dec
add
pop
mov
dec
testl
mov
fdivrl
insl
push
push
pusha
mov
mov
je
mov
sbb
push
scas
push
fwait
call
jge
jo
negl
jo
push
push
imul
dec
bound
xchg
call
lock
cmp
call
push
insb
push
push
mov
and
outsl
in
push
imul
xor
test
dec
stos
in
xor
dec
pop
sbb
sub
push
inc
sbb
popa
jns
jne
daa
gs
popa
xor
push
mov
in
test
rorl
pushf
mov
add
pop
in
add
or
xchg
in
sub
sbb
inc
push
jb
scas
push
pop
mov
inc
jb
movsl
push
jge
decl
in
mov
jo
push
gs
pop
mov
mov
xor
and
call
neg
not
pushl
adc
pushl
sbb
sub
adc
jmp
xlat
adc
mov
into
dec
fld1
push
out
imul
jmp
adc
xor
fbld
jno
insb
gs
lods
insl
aad
incl
stos
js
mov
btc
inc
push
sahf
clc
cmc
inc
mov
out
adc
jbe
pop
jo
mov
inc
js
dec
push
imul
cmp
call
or
leave
jp
jb
push
lock
imul
ds
xchg
ret
das
add
sub
mov
mov
push
outsl
add
xchg
call
inc
loopne
addr16
adc
sbb
addl
xor
push
scas
xor
pop
push
flds
push
add
adc
add
jne
or
pop
ja
std
out
dec
sbb
jmp
inc
adc
ret
icebp
inc
add
jmp
movsl
orl
mov
cmpsl
add
in
jno
inc
mov
mov
insl
dec
jbe
sbb
movsl
jae
fbstp
dec
imul
ja
push
call
mov
leave
adc
jae
sub
add
arpl
push
test
aaa
jmp
in
cmp
movsb
and
or
js
dec
mov
cmp
jb
adcb
push
sbb
jecxz
inc
jae
push
bound
push
xor
jg
js
insl
xchg
add
outsb
popa
push
push
andb
pop
loopne
pop
in
dec
clc
inc
into
xor
ja
call
jmp
icebp
adc
pop
jns
mov
dec
lahf
mov
xor
push
cmp
jno
xchg
cmp
daa
add
daa
push
pop
mov
pmuludq
add
xor
jns
fsubrs
test
pusha
xor
inc
lock
or
lfs
fwait
mov
out
outsl
imul
or
loopne
lods
push
cmp
pop
xor
dec
push
rolb
test
jge
adc
insb
dec
xchg
dec
dec
add
jecxz
shl
neg
dec
xor
pusha
and
dec
cmpl
call
inc
mov
jo
cld
push
in
mov
push
xchg
push
jne
outsl
xor
ja
in
jmp
mov
add
pop
push
pop
xchg
mov
sbb
xchg
mov
fdivl
xor
cmp
insl
push
insl
jno
fcmovnb
sbb
and
lcall
scas
hlt
in
pop
adc
sbb
mov
dec
outsb
lar
or
push
rcr
jmp
mov
in
push
pop
lret
adc
dec
jne
mov
dec
inc
fsubr
xchg
not
sbb
jb
sti
repz
fucompp
add
inc
cmp
xchg
insb
ficoms
add
in
xor
call
lret
lock
or
push
push
imul
sub
pop
xor
testb
push
xchg
imulb
pop
out
les
scas
jmp
in
lock
fdivr
dec
push
addr16
xchg
std
imul
iret
add
adc
xor
std
test
push
mov
xchg
add
fs
push
fisubl
int3
cwtl
or
adc
inc
pop
sbb
inc
aaa
adc
and
test
lret
leave
ret
push
enter
stc
pop
push
inc
xor
aaa
es
or
sbb
outsl
xor
xor
xor
hlt
mov
das
loope
dec
es
aam
push
dec
xor
xchg
push
clc
fdivs
sti
adc
imul
inc
outsl
fisttps
rcrl
lret
sub
dec
inc
add
cmc
push
sub
pop
push
add
inc
sub
fildll
dec
jmp
push
call
loop
test
dec
inc
inc
push
xor
push
ret
add
lods
bound
pop
sub
inc
data16
insb
cwtl
insl
inc
insb
mov
cmp
dec
jo
mov
packuswb
fcompl
jo
hlt
js
outsl
hlt
fwait
call
sbb
mov
out
mov
ret
add
and
rcr
sbb
inc
jmp
xor
cmp
lahf
insl
push
in
pop
insb
jnp
loopne
adc
xchg
jbe
mov
add
jge
and
incb
fcompl
cmp
call
dec
enter
clc
imul
dec
adc
xor
push
push
dec
push
sub
test
loope
sbb
jg
jle
call
pushl
sbb
inc
ret
lret
xchg
ficoml
jne
pop
pop
sbb
fsubs
bound
add
js
clc
or
adc
cld
jnp
xor
dec
call
dec
add
cmpb
push
enter
sbb
loop
or
sbb
push
push
pushf
ret
add
jae
sti
inc
xor
lcall
into
inc
push
xchg
scas
dec
lcall
pop
daa
ret
sbb
add
mov
push
xchg
inc
ja
inc
xor
stos
or
call
roll
arpl
add
cld
aad
movl
sbb
jmp
rcrl
cmpsl
dec
adc
jnp
jmp
dec
insb
or
loopne
jae
pop
imul
out
push
adc
cmp
lods
pop
dec
xor
or
loopne
in
call
sub
push
or
inc
pop
shll
mov
dec
clc
movsb
xorb
jne
pushf
ficoml
gs
jo
jbe
pop
js
jns
mov
sub
nop
lret
lock
inc
mov
fiaddl
aaa
jns
arpl
not
mov
jb
imul
push
mov
pop
sub
cli
mov
mov
push
cmp
call
mov
sub
sub
ret
sbb
mov
xor
mov
sub
add
jp
cli
sti
push
add
mov
aad
outsl
pop
push
jo
or
mov
mov
add
repnz
dec
inc
push
sbb
dec
xor
dec
inc
js
adcl
push
xchg
jle
out
push
add
mov
aaa
add
aam
bound
ret
mov
mov
sbb
je
bound
xor
and
or
pop
sub
mov
mov
cmc
dec
movsl
inc
mov
icebp
xor
cmp
addr16
movsl
popa
addr16
xor
inc
imul
xor
std
stos
xor
sbb
push
inc
push
add
xor
adc
fs
movsl
inc
adc
mov
fists
push
fcoms
inc
push
dec
inc
cmpb
sti
xor
pop
daa
pop
outsb
jbe
cmp
xor
jbe
sbb
js
adc
dec
jmp
xchg
push
dec
jbe
stc
loopne
lret
mov
push
cld
push
fiaddl
or
ja
sub
idivb
call
lahf
in
jecxz
icebp
dec
sub
mov
lea
sbb
dec
sarl
ret
movsb
inc
adcl
or
xor
mov
push
inc
pop
call
movsb
repz
inc
movsb
mov
mov
xor
sub
gs
stos
push
ror
or
shl
cmpsb
arpl
bound
mov
pop
or
es
insb
mov
filds
xlat
pushf
mov
xlat
pop
add
cmp
repz
mov
inc
in
push
jns
add
mov
in
sub
movsl
adcl
iret
call
dec
inc
incb
popa
aaa
sbb
jbe
pusha
out
icebp
fs
push
ret
xor
inc
outsl
data16
test
decb
mov
sbb
add
mov
pushf
hlt
pop
push
mov
loopne
sub
fdivl
mov
leave
fcom
jmp
insb
popl
cld
int3
cmp
cli
sar
cmc
or
jne
les
pop
jb
inc
ret
pop
sub
sbb
jnp
cmpsb
clc
mov
dec
push
pop
xchg
arpl
call
or
je
sub
and
movsl
dec
jl
test
and
sbb
mov
aam
fdiv
aad
add
sbb
inc
jecxz
imul
call
cmp
clc
ret
mov
adc
jecxz
fisttps
lods
add
and
dec
add
sub
jmp
rcrb
jno
ds
xor
sbb
bound
rcll
jmp
das
aad
fnstenv
test
jmp
nop
das
pop
bound
hlt
jae
push
xchg
push
push
nop
out
push
mov
adc
rclb
jecxz
jmp
add
repnz
push
fwait
inc
in
cmpl
jo
mov
push
ret
add
loop
sub
sub
mov
push
push
mov
int
imul
push
dec
lods
call
std
in
dec
sub
inc
ljmp
repnz
dec
jmp
add
rcll
or
outsb
iret
loope
gs
pusha
int3
imul
shlb
call
mov
push
sarl
jmp
inc
dec
xlat
hlt
imul
pushf
or
add
dec
imul
loopne
mov
stc
inc
inc
fyl2x
lods
cwtl
in
sbbb
cmc
inc
mov
mov
jmp
add
sbb
in
in
dec
jno
adc
stos
lds
jg
in
enter
mov
lock
push
sbbl
inc
dec
mov
gs
rorl
push
mov
pop
sub
es
lret
sbbl
outsb
dec
jmp
das
push
adc
test
pop
push
xchg
dec
sub
mov
test
adc
inc
mov
push
inc
mov
dec
mov
lods
clc
push
call
sbb
inc
cmc
add
mov
call
negl
xchg
mov
push
xor
je
js
xor
jno
pop
mov
addr16
movsb
adc
inc
jmp
imul
pop
icebp
or
sbb
jns
repz
aaa
popf
ss
inc
jbe
dec
xchg
push
jno
aaa
pusha
inc
pop
push
popa
xor
or
in
call
add
sbb
jbe
inc
mov
inc
dec
je
xor
push
xlat
mov
jne
jmp
loope
dec
je
in
lret
mov
cld
xchg
push
ror
push
adc
sub
outsl
jbe
push
movsl
jmp
shlb
and
es
jle
cmp
cmp
ret
jmp
js
inc
int3
add
cli
pushf
push
dec
popa
push
lcall
pop
cwtl
inc
push
into
scas
dec
and
iret
pop
mov
inc
jbe
inc
insl
fwait
outsl
add
in
aaa
cmpsb
incl
mov
sarl
push
bound
jns
cmp
cmp
xchg
pop
gs
sub
cmp
call
loopne
je
in
sahf
or
inc
int
adc
lea
and
push
xorb
xor
clc
call
lods
insl
jns
jno
mov
test
xor
popa
je
or
push
in
or
lea
jne
insb
out
shlb
lock
and
xchg
ja
rolb
cld
ja
loopne
and
bound
outsl
repz
les
push
hlt
xchg
lret
addr16
and
pushf
repnz
pop
jns
shrl
and
aaa
sub
pop
xchg
add
pop
jns
insb
adc
aaa
cmp
cli
mov
jo
or
movsl
pop
orb
pop
insb
stos
stos
stos
outsl
ja
rcrl
hlt
cli
jmp
pop
dec
shl
jmp
loope
addl
xlat
mov
cmc
ljmp
xorb
mov
test
dec
sbb
fldenv
pop
ret
jp
and
insl
cmp
sbb
push
sub
or
cs
imul
dec
insb
add
jmp
add
sub
adc
pusha
and
sbb
loopne
shlb
xor
inc
aam
arpl
dec
add
sbb
add
dec
daa
pop
cmp
mov
addr16
ss
addr16
pop
pop
cmp
rcll
icebp
pop
push
lahf
lock
add
repz
cmp
jne
js
push
mov
or
frstor
bound
inc
add
push
xor
aaa
xor
or
shrl
dec
shr
xchg
adc
inc
bound
stos
inc
mov
mov
addb
stos
push
es
dec
pop
push
subb
inc
pop
pop
or
push
leave
push
mov
hlt
cmp
mov
imul
iret
inc
xor
push
xor
ja
popl
bound
mov
jns
and
loopne
xchg
rorb
adc
mov
jmp
jne
test
and
pop
jmp
dec
jecxz
push
mov
push
fdivl
xor
inc
or
inc
shrl
inc
sub
push
lret
sub
mov
mov
cmp
adc
and
pop
aaa
aam
rcr
mov
test
lret
pop
dec
sbb
js
xor
test
js
jg
xor
js
xor
jb
push
dec
dec
or
and
adc
outsl
xor
sbb
lods
dec
js
test
sbb
sub
sbb
sub
movsl
push
dec
add
sbb
dec
in
mov
sub
jns
outsb
outsb
or
add
jg
nop
push
or
out
cmc
shlb
in
adcb
dec
or
inc
ljmp
call
fisttpll
imul
or
adc
repz
shll
dec
dec
addr16
jb
or
adc
outsl
movsl
add
push
pop
addr16
popf
fisubrs
xor
js
mov
sub
icebp
or
js
ret
cmpsl
bound
lea
cmc
inc
push
push
pop
loop
pop
dec
add
sub
inc
not
inc
add
adc
or
outsl
xchg
sub
test
lock
add
pop
pop
push
pop
insl
and
sbb
inc
push
mov
lods
out
pop
jmp
clc
mov
cmp
stos
in
mov
dec
mov
fisttps
xchg
bound
jge
push
jno
xor
jb
push
push
data16
iret
xor
inc
and
sub
insb
pusha
push
dec
outsb
jne
loopne,pt
xor
addb
push
push
sbb
arpl
sub
xor
in
lods
outsl
aam
adc
lock
jecxz
dec
inc
adc
hlt
out
sbb
cld
int
cmpsb
fsubr
addl
or
mov
jns
insb
cwtl
and
test
push
cmp
jno
data16
sub
sbb
inc
jnp
inc
push
jae
push
cmp
xor
dec
jno
int3
js
xlat
call
xor
insb
sbb
ljmp
push
add
pop
and
push
add
sbb
and
inc
mov
push
aaa
push
jmp
clc
sbb
out
push
cmp
mov
in
adc
fnsave
cmp
jno
in
xor
push
jae
mov
stos
test
push
push
add
sbb
rolb
mov
inc
push
push
cmp
sub
dec
jmp
cmpsb
daa
daa
bound
rolb
cmp
in
and
dec
imul
cmc
test
xchg
jbe
sbb
xlat
add
imull
sar
adc
lahf
repz
xor
inc
dec
jb
add
orb
dec
jo
popa
test
out
dec
xlat
push
or
cmp
dec
aaa
outsl
cmp
cmc
mov
imul
fistl
push
and
subl
inc
pop
daa
dec
addr16
adc
push
xor
add
icebp
lods
decb
mov
pop
jmp
call
dec
xor
dec
sub
mov
sar
fdivl
sbb
jmp
addb
jo
inc
int3
fstpt
dec
test
mov
mov
inc
pop
call
stos
add
addr16
loope
jbe
xchg
fstpt
mov
fiaddl
pop
xor
lods
mov
xor
push
ja
pusha
mov
xchg
push
mov
cli
sub
jl
dec
xor
and
sub
cmpsl
jnp
or
loop
loopne
mov
shlb
jl
mov
fsts
ds
sub
cwtl
adc
inc
addr16
arpl
fimuls
aaa
outsb
inc
cmp
push
mov
call
jge
add
xor
dec
push
xchg
dec
push
xchg
mov
popa
ja
clc
cmpsl
aam
mov
cwtl
add
lock
sti
inc
mov
adc
inc
dec
push
or
push
mov
fmull
sub
aam
xchg
xor
add
fcmovnb
div
lods
mov
adc
jno
js
nop
or
adc
addb
cmp
jmp
xchg
cmp
aas
sub
inc
dec
jne
loope
pusha
sbb
mov
mov
aas
sbb
push
xor
fdivs
cs
dec
push
adcb
inc
mov
sbbb
cmp
xlat
imul
pop
shrb
cmp
jbe
inc
dec
fwait
and
sub
out
je
fsubrl
cmp
xor
push
push
mov
mov
mov
push
fadd
lea
es
mov
and
out
push
movsl
inc
jmp
dec
adc
push
cld
insl
loope
mov
inc
adc
dec
jmp
sub
enter
or
inc
push
mov
dec
mov
push
xchg
sbb
inc
and
clc
pop
fistl
add
push
fdivrl
imul
cmp
loopne
divb
add
pop
bound
addr16
jge
dec
dec
xor
outsl
gs
fdivl
push
js
loopne
pop
xor
jmp
movsb
sub
rcll
mov
or
push
push
push
adcb
out
call
dec
pop
fiaddl
imul
imul
ss
and
push
pop
add
pop
push
stos
outsb
cmp
xor
fwait
inc
sub
ds
lret
dec
or
push
or
push
cmp
testb
or
pop
sub
or
xor
pusha
mov
imul
lods
popa
jl
jb
push
popa
inc
int3
dec
fadds
ja
mov
scas
cmp
xor
pusha
add
push
call
jo
mov
or
add
fldcw
fmull
imul
mov
dec
mov
pop
xor
sub
inc
inc
xor
dec
cli
sub
cmp
mov
not
or
dec
add
sbb
xor
add
int3
stos
sarb
or
mov
sub
xlat
inc
cmp
fdivl
inc
push
sub
cmp
sbb
sbb
dec
out
imul
mov
bound
pop
mov
in
cmpl
jle
jmp
js
retw
or
outsl
fbld
or
sbb
adc
dec
and
adc
jmp
pop
loop
pop
sub
sub
negl
into
jmp
nop
ljmp
mov
sbbl
mov
scas
mov
movsl
in
sbb
test
rorl
fnstcw
fwait
scas
pop
or
jno
insl
pop
push
inc
outsb
xchg
inc
outsb
cmp
aad
enter
aam
clc
cmp
cwtl
inc
pop
pushf
data16
sbb
insb
sahf
int3
cmp
int3
pop
jg
dec
fsubl
fs
gs
loopne
push
fsubl
bound
sahf
insb
aam
xchg
and
mov
dec
or
adc
mov
inc
add
xchg
loopne
mov
sbb
jp
push
das
mov
jl
in
sub
or
mov
imull
mov
cli
lea
inc
inc
inc
cwtl
jbe
push
scas
fs
mov
jp
mov
cmp
js
lods
test
incl
test
sarl
sahf
cltd
pushf
dec
xchg
adc
pusha
mov
cmp
add
xchg
pushl
push
scas
cltd
add
addr16
in
push
pop
adc
push
lahf
and
mov
push
and
cmp
insb
jae
inc
push
call
dec
mov
pop
adc
outsb
push
subb
js
int
jge
mov
call
push
jle
dec
mov
call
pushf
les
jmp
or
or
andl
pop
cltd
add
adc
fs
and
pop
adc
dec
incl
int3
jg
das
mov
test
test
icebp
jae
jb
mov
jns
jns
jg
push
mov
jge
inc
mov
lret
aam
xor
lods
repnz
and
clc
pop
adc
shlb
shll
aad
mov
push
repz
or
lods
pop
clc
jmp
and
in
pop
xor
scas
fisubrl
sahf
pop
fldl
fmulp
push
mov
incl
add
push
dec
in
cmpl
and
rcrl
adc
lcall
cmp
sub
mov
sbb
loopne
es
in
mov
loopne
outsb
fdivr
call
sbb
add
inc
mov
loope
sub
adc
and
std
pop
adc
fists
sub
cmp
ljmp
sbb
jbe
mov
lahf
mov
dec
jae
pusha
stos
popa
ja,pn
test
cld
jmp
popf
push
fldcw
out
sub
fdivrl
push
or
mov
pop
push
cmp
in
cltd
sti
jbe
cld
jg
xor
sti
and
mov
adc
or
inc
call
adcl
cmp
cmpsl
pop
pop
xchg
xchg
jne
sti
or
ds
push
int3
fcomps
sub
lds
cld
ja
repz
adc
inc
fnstcw
out
mov
mov
test
data16
decl
ret
mov
add
sub
adc
jmp
loope
pushf
push
lds
out
test
and
test
mov
xchg
call
call
leave
jg
add
repnz
sub
imul
hlt
add
push
xor
pop
mov
cmc
pushf
imull
test
jle
lret
rcll
push
xchg
bound
cli
int
and
ljmp
sub
jns
popa
pop
nop
xchg
adc
leave
rol
mov
jle
test
je
lods
out
push
jp
jno
in
push
aam
sbb
jp
xchg
jns
mov
iret
cmp
frstor
les
pop
aad
incl
xchg
or
sarl
cmpsl
outsl
push
int
mov
push
rcrl
sti
imul
mov
dec
mov
sub
call
sub
or
pop
cmp
pop
and
jo
add
lcall
bound
dec
mov
sub
jns
mov
stc
push
pop
jmp
xor
mov
jnp
stos
inc
stc
xchg
nop
jnp
xchg
push
push
iret
stos
insl
push
cmc
mov
jno
sub
jmp
mov
inc
in
ret
sbb
mov
cli
or
dec
inc
inc
jmp
jge
xchg
lret
call
rolb
test
push
xchg
jecxz
inc
ds
xlat
mov
arpl
int
cwtl
inc
movsb
pop
pushl
xor
loope
jmp
ficoms
mov
push
jbe
sbb
xchg
cmp
aas
inc
lods
out
mov
lret
movsb
push
sbb
xor
push
jl
pop
ljmp
xchg
pop
sub
cld
je
push
sbb
lcall
call
insl
push
add
dec
sub
fwait
dec
pop
aam
adc
fs
mov
jnp
adc
lcall
fucomi
adc
in
dec
add
jle
mov
lret
sub
push
inc
sar
push
jg
das
out
or
mov
mov
sarb
loop
movsb
sbb
inc
dec
xor
sbb
outsl
int
rcll
ret
ficoml
jae
or
jnp
out
insl
pop
aad
iret
jle
xchg
fisttpl
dec
dec
lds
sbb
push
or
or
cli
in
loop
fisubs
mov
sub
adc
test
push
adc
pushf
syscall
mov
bound
mov
rolb
xor
lea
sub
cmp
xor
pop
jg
aad
js
ret
sbb
pop
pop
aas
in
fs
inc
xchg
jns
scas
andb
mov
ljmp
insb
decl
inc
data16
mov
and
cmp
insl
pop
adc
cli
das
lock
das
out
cmp
jb
dec
pop
popf
scas
fbstp
ljmp
jmp
inc
pop
pop
gs
inc
cmp
lret
jl
xchg
inc
sti
cltd
icebp
fs
jg
incl
int
outsl
nop
dec
mov
fimuls
xor
popf
xchg
push
cmpsl
decl
jno
aad
out
inc
jl
insb
cld
jle
xor
icebp
inc
xchg
ret
cmpsl
outsl
cld
call
shll
jl
out
sub
sub
stos
int
jbe
ljmp
std
call
mov
test
mov
cmp
adc
lret
jo
inc
push
shll
push
es
lahf
mov
lds
push
xor
pop
mov
inc
and
loop
adc
sbb
movsb
jmp
out
popf
stos
lcall
insl
icebp
push
mov
push
push
daa
stc
fbld
fwait
incl
xchg
repz
test
xorl
insb
mov
loop
cmp
cwtl
add
das
lock
mov
loope
sbb
lcall
ljmp
jae
inc
jp
push
xchg
and
and
add
fs
les
push
incl
xor
jmp
jo
jb
enter
aas
inc
and
arpl
idiv
mov
sbb
sbb
icebp
call
clc
js
aaa
lahf
and
pop
push
xchg
push
mov
xchg
pusha
insl
mov
das
xchg
jb
or
cmp
enter
pop
or
inc
cmpb
mov
scas
gs
jg
add
sbb
nop
xorl
cli
mov
or
jb
pop
outsl
adc
loopne
add
hlt
shlb
clc
jg
xor
ss
imul
das
jo
mov
adc
ljmp
stc
xor
sub
or
inc
jb
cmpsl
imull
adc
cli
mov
xor
inc
incl
ss
out
ss
and
pop
pushf
and
pusha
push
mov
jmp
jle
mov
jbe
mov
mov
jae
and
inc
stos
loope
fs
ja
sbb
rcrb
insb
dec
adc
pop
fistl
cmp
inc
pop
jge
movsl
decl
dec
lcall
mov
pop
outsb
sub
cmpsl
pop
add
cmp
lcall
repnz
mov
push
and
out
pop
mov
loopne
and
mov
cltd
out
ret
out
mov
rol
aas
jmp
and
cmpsl
bnd
idiv
sar
lods
pusha
inc
decb
das
ljmp
cmpl
orb
xchg
jg
xchg
es
xchg
rcrl
rolb
inc
lds
cmpsb
jge
pushl
shrl
test
sub
sbb
xor
xchg
mov
push
imul
movsl
fmuls
stos
ja
pushf
fsubrl
in
jmp
das
mov
mov
push
xchg
mov
int
ds
sub
in
cmpsb
inc
fwait
loop
push
loop
xor
sub
xor
jl
xor
inc
jmp
mov
add
dec
outsb
add
cs
mov
insb
lret
push
push
out
insl
inc
pop
loopne
in
push
in
loopne
decl
fcoml
cmp
addr16
cmp
mov
push
mov
mov
dec
loop
getsec
movsb
push
mov
outsb
out
movsb
xchg
jbe
mov
adc
fisttpl
mov
xlat
sub
cmpsl
cli
mov
ljmp
pop
jno
jo
ds
clc
cmc
insb
mov
mov
fistps
fildll
lret
or
push
ds
jmp
ljmp
mov
ss
fwait
jns
pop
andps
daa
sbb
xor
cli
jg
je
lock
pushf
xchg
add
out
jo
gs
gs
or
xor
adc
call
adc
pop
stc
jbe
js
pop
mov
test
mov
decl
mov
pop
mov
lcall
pop
scas
fists
std
dec
cwtl
cmpsb
stos
push
loope
cmp
nop
mov
leave
jle
test
mov
call
xchg
mov
jp
iret
js
pushl
cltd
lock
imul
aas
aaa
inc
movsl
or
call
xchg
pop
push
ja
inc
or
push
outsb
or
mov
pusha
pop
dec
xor
mov
or
incl
mov
je
dec
mov
mov
cmp
mov
fidivs
inc
frstor
call
sbb
in
mov
mov
sub
stos
bound
push
and
jnp
sbb
pop
clc
decl
or
shr
mov
cmp
xlat
jp
mov
fld
scas
clc
call
mov
loope
pop
sub
jnp
and
xor
mov
test
inc
sti
popf
mov
sub
pop
sbb
pushl
into
inc
and
pop
push
xchg
xchg
or
andb
arpl
dec
mov
out
fsubp
data16
jg
outsl
addr16
test
lret
dec
notl
jl
int3
lcall
scas
mov
xlat
inc
push
int3
sub
xor
sub
int
popa
mov
dec
jmp
cmp
lock
jp
in
test
push
rcr
mov
icebp
add
lcall
sub
push
fs
jl
dec
ljmp
lret
push
sub
test
push
inc
fwait
cmpsl
xchg
inc
mov
ljmp
lds
aad
and
out
sub
scas
xor
call
and
mov
jmp
scas
sti
stos
or
jecxz
in
dec
fistps
jge
lahf
add
mov
mov
lds
repnz
pop
call
gs
mov
arpl
into
push
into
js
repz
int3
lock
ret
mov
mov
pop
and
fisubs
mov
mov
push
sbb
add
into
pop
mov
aam
iret
xor
stos
or
dec
push
lcall
rcrl
mov
push
decb
out
sub
gs
incl
lret
hlt
js
ds
cmp
mov
pop
cli
pop
or
pusha
adc
and
push
scas
sahf
xor
mov
mov
push
xchg
and
mov
jecxz
mov
pop
ret
icebp
movsbl
fisubs
cltd
and
andl
push
mov
rcrb
test
mov
cmpb
pop
sti
push
jb
xchg
test
xchg
clc
fisttps
xor
stc
or
xchg
and
andb
adc
pop
bound
inc
ljmp
inc
into
sub
xor
leave
cmp
jle
imul
adc
incl
rorl
xchg
dec
es
fidivs
es
lcall
lods
arpl
mov
or
cmp
mull
mov
sub
inc
xchg
sbb
cmp
lock
add
mulb
fstpl
fistpl
sub
xor
mov
jl
cmp
movsl
rol
or
ret
mov
lods
sub
fwait
sti
mov
movsb
push
nop
dec
dec
rorb
lods
inc
inc
movsl
or
or
daa
jmp
or
and
mov
test
push
xchg
dec
stc
into
cld
test
das
cld
push
ljmp
mov
fmull
cmp
fdivrp
push
pushl
sbb
cmp
dec
test
mov
mov
pop
sbb
icebp
and
jle
jge
movsl
test
push
push
dec
in
cld
imul
pop
xchg
cli
add
xlat
fs
mov
sbb
push
leave
aaa
cwtl
add
cmpl
cmp
sbb
lcall
inc
test
std
mov
adc
rcl
jne
lcall
std
das
inc
inc
ja
rclb
mov
sbb
shll
aas
insl
add
mov
imul
mov
aad
stc
inc
inc
lcall
aas
mov
xor
mov
pop
mov
push
pop
sbb
mov
decl
imul
pusha
nop
cmpb
dec
cmp
iret
flds
push
jnp
xchg
inc
outsb
cmp
das
pop
loop
or
pop
cltd
pop
push
add
dec
outsl
mov
lret
cmp
adc
or
ja
int
lods
test
decl
jge
cmc
fcmove
mov
sbb
xchg
icebp
push
into
andl
mov
xor
push
jb
jno
je
jne
aam
jle
or
fildl
pop
cli
xchg
pop
push
or
jbe
or
push
lock
adc
mov
stos
xor
sub
xor
mov
cs
mov
pop
adc
decl
push
stc
sbb
pop
out
cmp
test
mov
sub
ss
incl
arpl
mov
push
mov
mov
repz
ret
das
cld
outsl
call
out
push
loope
dec
call
inc
add
dec
pop
adc
inc
hlt
cmc
inc
les
inc
aaa
pop
ljmp
loope,pn
pop
fistps
and
sub
push
xchg
push
arpl
fnsave
ret
sbb
ror
clc
scas
sbb
lods
popa
or
jnp,pn
test
cmp
stos
out
jmp
js
cmpsl
lahf
mov
push
inc
mov
cli
movsl
xor
addr16
fcomp
mov
cmp
shrb
and
lret
add
and
lcall
xchg
xchg
push
mov
lock
push
xchg
pop
mov
addb
mov
and
mov
rcr
in
xchg
decl
es
out
std
daa
fisttpll
shl
push
mov
mov
fsubs
lock
sub
push
jb,pt
sub
sti
hlt
mov
rcl
or
cld
mov
jb
dec
sub
cmp
sahf
out
popl
je
gs
jp
loopne
sub
roll
es
push
sar
ljmp
mov
clc
ja
lcall
sub
aaa
xchg
sub
sub
push
scas
adc
pushf
dec
dec
mov
shll
bound
scas
pop
aad
fcomps
int3
or
imul
pop
xor
fcmovnu
and
repz
adc
fbstp
je
scas
inc
pop
arpl
cltd
jmp
xchg
mov
mov
loope
push
fists
cli
inc
popf
idivl
adc
xchg
and
std
mov
loopne
and
repz
push
xchg
and
lcall
push
xchg
int3
rol
mov
jne
dec
add
xchg
into
rcrl
or
fnstsw
or
xor
call
xor
shll
imulb
jmp
mov
inc
pusha
mov
adc
bound
pop
icebp
inc
test
mov
mov
ret
scas
sub
or
aas
pushf
dec
lret
seto
cmpsb
xchg
mov
incl
das
into
pop
lahf
shrl
xchg
scas
dec
mov
in
xchg
test
mov
add
lods
push
scas
mov
push
shll
xlat
push
jnp
add
mov
xchg
std
mov
pusha
jmp
add
in
cmp
pusha
pop
inc
sub
inc
popa
jmp
das
push
mov
decl
and
daa
aam
shlb
ficoms
sbb
addb
cmp
mov
jp
and
sub
fistpll
adc
adcb
lcall
fwait
mov
and
lcall
dec
or
xlat
cmp
jp
dec
or
frstor
or
out
in
adc
push
or
ret
iret
dec
xor
outsb
jo
popl
scas
mov
fistpll
xor
lods
jae
out
stos
jne
in
repz
push
insb
imul
repnz
mov
dec
jmp
push
incl
jmp
cmp
mov
xor
loopne
pop
sbb
decl
out
sub
and
sbb
aad
and
outsl
icebp
sbb
bound
inc
les
pop
mov
std
call
loop
xlat
mov
sub
sub
nop
dec
call
decl
and
jmp
add
cmpsb
pop
jp
mov
sub
stos
testb
sbb
jo
pushl
addr16
cld
rorb
dec
mov
std
mov
push
sti
xor
cli
and
pop
push
dec
cs
fistps
sub
rolb
mov
lret
je
outsl
hlt
mov
and
xor
push
dec
inc
shr
dec
mov
dec
xchg
test
lds
or
mov
hlt
add
sahf
jge
mov
leave
movsb
cli
repz
bound
icebp
pop
ljmp
and
setb
enter
das
hlt
incl
xchg
je
push
popa
inc
loopne
push
xor
fistps
jmp
nop
ss
insb
rolb
ljmp
push
dec
mov
call
dec
dec
rcl
pop
pop
aaa
cmp
push
ja
mov
std
repnz
sti
popa
dec
adcl
pop
sub
push
roll
pop
sub
lock
push
cmpsb
fs
movsl
mov
cmpsl
mov
das
jl
nop
add
xchg
mulw
movsl
pop
adc
mov
out
icebp
push
stos
loopne
pushl
das
jb
int3
xchg
nop
add
pop
call
push
mov
lcall
scas
popa
sbb
jb
enter
test
xchg
or
fcmovnbe
mov
icebp
mov
ja
lahf
xchg
fcomip
js
jns
cmp
ljmp
mov
les
jbe
int
add
pop
pop
in
xor
imul
pop
xchg
fdivl
addr16
movsl
call
cli
lret
cmp
pop
test
in
popa
ret
push
js
pop
outsl
sub
orl
add
jno
loope
or
ret
loop
cli
fistpl
push
lcall
call
mov
fcoms
stos
dec
xchg
iret
sti
outsl
sbb
loop
sbb
cmp
out
mov
mov
pop
or
cmpsb
sub
mov
sarl
shll
ja
add
lock
xor
pushf
sbb
pop
pop
sbb
ficompl
mov
inc
repnz
scas
lret
pop
jmp
inc
xor
orl
icebp
push
pusha
mov
movsl
insl
aam
jno
dec
lcall
mov
imul
rcrl
lock
insb
add
or
push
js
bound
rcrb
jle
rorb
leave
decl
add
cmpsb
icebp
enter
icebp
jg
jmp
push
mov
and
pop
loop
loope
xchg
je
and
paddw
mov
mov
js
aad
dec
mov
inc
loope
sbbl
push
jb
sub
push
dec
xor
mov
jp
push
cmp
pop
mov
test
dec
jmp
sbb
push
ja
inc
int3
xlat
mov
push
std
fisttps
dec
jno
jg
leave
sahf
jg
mov
jnp
pop
mov
mov
adc
in
mov
gs
hlt
inc
jg
jg
mov
jbe
inc
call
mov
dec
jp
rorl
js
shr
rorl
int
nop
pushf
int
call
mov
and
call
dec
int3
add
mov
xchg
xchg
add
insl
adc
das
mov
fnstsw
filds
addr16
mov
inc
jle
inc
pop
rorl
pop
or
ss
in
mov
jmp
jle
ss
xor
std
mov
fstl
push
mov
das
cmc
jmp
mov
imul
test
cmp
loop
sub
sbb
sar
jmp
inc
fldt
enter
ret
cltd
mov
ret
pop
pextrw
or
xchg
jle
jg
repnz
fwait
add
popf
daa
pop
add
outsl
jno
lcall
std
mov
inc
repz
stos
xchg
xchg
inc
jns
pushf
add
ljmp
jmp
cwtl
dec
cld
pushl
xchg
add
mov
shlb
or
clc
and
add
push
fstl
fucom
stos
call
and
pop
setp
add
iret
pop
ljmp
push
jns
sub
scas
mov
pop
jmp
cld
jae
jp
push
jecxz
add
loop
call
std
fistps
cmp
cmp
mov
fwait
mov
jno
stos
push
es
clc
sti
xchg
push
les
and
or
out
sbb
push
push
cld
mov
mov
jnp
loopne
call
mov
mov
ret
cli
scas
repz
mov
mov
and
icebp
pushl
in
les
lahf
jl
in
mov
test
or
stos
pop
sub
add
add
adc
call
mov
and
inc
stos
rcll
repz
pop
ljmp
dec
mov
cmp
insl
test
adc
cmp
ror
fwait
ret
ss
fadd
fstps
mov
adc
push
push
nop
repz
mov
inc
xchg
movsl
lcall
ficoms
push
daa
test
insb
cmp
pop
cli
call
pop
xor
lcall
gs
dec
sbb
xchg
fisubl
daa
mov
sbb
fstps
ljmp
cld
incl
xor
pop
cwtl
movsl
out
fstl
stc
or
dec
inc
dec
add
test
xchg
addr16
ret
loope
xchg
push
dec
push
test
dec
mov
mov
outsb
adcb
pop
xor
xor
sbb
xor
or
xor
or
rolb
aam
push
or
mov
mov
push
or
cld
jmp
loope
jl
ss
push
mov
lcall
std
mov
in
push
js
jmp
push
adc
inc
inc
mov
jmp
bsr
or
std
adc
pop
roll
jmp
call
xor
pusha
adc
cld
divb
lret
jmp
fbld
popa
cmp
test
popa
aam
test
jg
or
scas
jb
mov
nop
fs
scas
cmp
mov
jmp
inc
pop
push
push
or
add
push
jb
adc
xchg
inc
jnp
push
sti
test
in
aaa
imul
xchg
push
or
pop
jno
pop
pop
push
add
dec
jmp
fnstsw
fdivl
popa
dec
fstpl
pushf
and
mov
incl
mov
push
mov
add
or
cwtl
inc
cli
aam
xor
xlat
fldcw
call
mov
inc
inc
test
pop
add
dec
fucomip
push
sahf
push
mov
xchg
mov
out
cld
aam
call
movsl
pop
lds
lods
hlt
shll
inc
aam
cmp
jo
outsl
test
hlt
add
adc
stos
arpl
pop
adc
stos
stc
fidivrs
xchg
sahf
insl
stc
inc
push
incl
les
fidivl
push
mov
iret
and
jo
flds
outsl
hlt
sub
shll
bound
and
xchg
mov
jg
mov
popf
in
sub
or
ret
js
dec
jg
out
iret
xchg
in
xor
imul
xchg
or
mov
inc
xor
jl
xor
inc
lret
out
iret
mov
fistl
push
jmp
jp
in
insb
dec
push
pusha
rorl
imull
push
add
in
lcall
mov
push
sarl
cmp
jle
es
xor
jae
jbe
out
pop
out
fistpll
fiadds
sub
cwtl
movsb
in
aam
mov
fimull
cld
pop
mov
sub
mov
xor
push
das
hlt
push
push
push
jle
or
fidivrl
out
push
sub
add
kxorw
cld
roll
fwait
imul
popl
xchg
cmc
push
mov
mov
aam
out
cli
in
fistps
lcall
clc
jo
push
lea
mov
or
std
call
mov
aad
mov
sbb
cmc
call
ret
cli
jae
cltd
sub
dec
add
lods
dec
cmp
stc
stos
mov
push
ljmp
jmp
ds
inc
mov
aas
fmul
cmp
xor
xor
fidivrs
enter
mov
cwtl
das
and
lcall
pop
loop
fcoml
pop
jmp
sbb
roll
dec
mov
es
out
xor
decl
cmp
dec
mov
sub
js,pn
mov
jae
ja
incl
das
outsl
cmpl
mov
mov
mov
pushl
aad
and
sbb
fistpl
mov
push
mov
cmc
jp
lcall
mov
arpl
mov
pop
mov
push
call
cltd
cs
xchg
cli
es
mov
lret
call
mov
push
push
jmp
scas
lret
movsb
sbb
jmp
jmp
and
add
in
sub
inc
inc
dec
in
jl
bound
sahf
push
fucomip
repz
jo
fidivrs
inc
std
cs
addr16
pop
jge
inc
mov
enter
mov
movsl
cmpsl
aas
call
jle
pop
xchg
loopne
inc
jmp
jmp
jmp
loop
jmp
lret
dec
shll
jg
aam
dec
push
imul
je
imul
jne
pop
xchg
jle
call
cmp
jp
xchg
incl
loope
aaa
frstor
cli
in
das
mov
or
js
jne
and
shl
ja
and
push
fsub
negl
aaa
cli
push
push
mov
or
addr16
int
cmpl
cmp
xchg
mov
push
push
sahf
dec
push
xchg
add
lock
inc
jp
loopne
mov
mov
test
jne
shll
inc
pop
cmc
movsb
jmp
push
and
in
inc
mov
jnp
inc
jg
mov
cmp
xchg
lods
call
ret
jne
iret
xchg
imul
mov
adc
dec
add
pop
pop
mov
cmp
daa
sbb
pop
adc
xchg
mov
rclb
sub
fsub
mov
fsubrl
lahf
add
dec
mov
mov
push
adc
push
adc
jnp
jp
lcall
addb
mov
mov
cmpsl
pop
xchg
and
pop
adc
and
pop
std
inc
sbb
in
nop
addr16
test
sahf
mov
stos
sbb
pushl
in
jmp
lods
js
lret
or
cmp
or
add
and
lret
cmp
mov
sbbl
outsb
mov
addb
mov
mov
mov
aad
jne
hlt
sub
lret
mov
sbb
decl
inc
insl
jge
pop
mov
out
mov
aad
push
insl
xchg
xor
mov
clc
mov
add
jp
aam
mov
incl
aaa
sbb
xor
popl
lret
xchg
inc
mov
sahf
ljmp
ljmp
pop
xor
shlb
test
cmpsb
jno
ficoms
dec
fwait
sub
pop
das
lock
mull
mov
fistpll
dec
jle
mov
das
cmc
decl
movsb
xor
xchg
movsb
into
jmp
sub
icebp
cmpl
les
movsl
push
pop
in
inc
xchg
repnz
mov
lods
cli
sti
add
push
fsts
pop
pop
movsl
scas
push
aad
lods
sbb
fldl
in
loop
sarb
fimull
jp
arpl
pop
icebp
inc
jnp
data16
mov
mov
addr16
mov
mov
cmp
psubw
mov
mov
rcrl
fldt
inc
arpl
mov
sub
push
sbb
jg
jns
loope
xchg
jmp
aaa
hlt
sti
pop
cld
jg
aad
cmpsb
push
dec
add
pop
adc
arpl
dec
popa
repz
pop
aaa
cli
adc
xlat
dec
add
cmp
fidivrs
hlt
std
inc
inc
jno
mov
push
shrb
into
add
mov
adc
lret
or
fldl
popf
jbe
fucomip
jmp
and
rclb
loopne
mov
mov
sti
pop
mov
sub
bound
add
je
aaa
push
mov
or
addr16
scas
add
dec
call
mov
add
out
loop
mov
loop
decl
xor
cmp
xchg
rorb
and
xchg
rcr
cli
push
jno
jl
dec
ja
pop
pop
push
mov
std
fildl
mov
jge
sti
cmp
xlat
clc
mov
cmc
lods
mov
push
lock
ret
dec
daa
repz
mov
mov
in
jo
xchg
std
xchg
cmp
arpl
mov
das
sbbl
sbb
lods
mov
fwait
cs
ret
mov
scas
mov
and
jbe
mov
dec
lds
test
adc
mull
xchg
movsb
mov
mov
iret
test
iret
mov
pop
xchg
pop
pop
adc
testb
pop
push
xor
mov
adc
loopne
out
cmp
jnp
cli
ljmp
dec
mov
pop
inc
aam
insl
and
into
pop
add
sbb
lret
decl
xchg
jno
in
call
lret
jo
movsl
rcll
xchg
out
mov
mov
sbb
add
shll
xchg
into
xor
ljmp
inc
cmp
pop
sti
mov
leave
sahf
imul
pop
push
je
aaa
lods
bound
inc
fldt
cwtl
ljmp
sti
sti
or
incl
mov
shl
jns
aam
xchg
shrb
js
sbb
rcl
xchg
scas
mov
push
repz
leave
fs
cld
call
shrl
add
fsts
dec
adc
ss
call
mov
decl
ds
in
mov
jl
sub
jne
aaa
xorb
call
cli
cmpsb
push
mov
mov
xchg
cmp
dec
jno
popf
out
mov
aam
rorb
sbb
pop
aad
ret
or
test
push
loopne
pop
clc
call
push
aas
mov
and
daa
popf
scas
pop
adc
inc
push
pushl
mov
rolb
pop
jg
pushl
fsubrs
cmp
pop
jnp
mov
decb
mov
lock
ljmp
jmp
repnz
subb
mov
test
jo
sbb
pushl
mov
or
sub
jecxz
sbb
dec
std
clc
call
sub
mov
fcomps
movb
cmc
das
push
xor
lcall
lea
and
arpl
les
test
cmp
xorb
cmc
ljmp
push
mov
dec
jne
inc
cwtl
sub
cld
cmpsl
adc
das
icebp
aaa
mov
mov
add
and
dec
cmp
xchg
push
dec
jmp
push
adc
cmpb
xchg
mov
xlat
loopne
adc
sub
cmp
adc
jmp
andb
sub
jno
fimuls
mov
decl
pop
sub
lods
and
push
push
jbe
cmp
sahf
test
decl
pop
and
mov
add
out
sbb
sub
mov
jmp
xlat
dec
mov
xlat
aaa
out
jns
aad
xchg
jmp
pushl
les
shll
popa
add
iret
outsb
and
push
sbb
in
loopne
add
into
or
jecxz
inc
mov
fwait
clc
sub
mov
ljmp
push
lret
outsl
inc
add
ljmp
cmp
inc
or
sar
lods
sub
dec
out
shlb
xchg
incl
sbb
xchg
cmp
cmpl
test
add
dec
rolb
xor
in
mov
xor
dec
stc
divl
jl
xchg
int3
aas
cmc
pop
popa
aaa
dec
adcl
scas
mov
mov
div
sarb
imul
jp
scas
call
es
pop
adc
jecxz
js
mov
sub
data16
dec
es
inc
jg
jp
pop
jmp
lahf
cli
test
es
jp
jo
and
jg
test
add
cmp
push
in
and
jmp
pop
pusha
in
dec
inc
movl
enter
cld
je
leave
fwait
jge
mov
js
fildll
dec
xchg
scas
jg
ljmp
inc
mov
ljmp
lds
mov
lahf
iret
adc
mov
or
stos
dec
adc
sbb
jg
fdivrs
popa
ret
pop
or
sarb
movsb
cmp
mov
xor
sbb
outsl
cld
xchg
loopne
lods
sbb
cmp
dec
adc
lea
std
das
std
inc
inc
shlb
dec
ret
ss
cs
lods
data16
js
push
and
sarb
sub
aad
andb
xchg
mov
loop
out
xchg
xchg
lds
dec
std
hlt
or
cld
popa
shrl
lcall
addr16
clc
push
call
cmc
inc
bound
push
mov
ss
push
pop
push
xor
and
jnp
and
pushl
mov
sbb
add
lret
fcoms
cltd
mov
pop
mov
in
sahf
int3
mov
mov
add
in
fistl
inc
xchg
lcall
inc
lret
and
or
jp
pop
cli
sbb
adc
mov
inc
sbb
jle
xchg
cli
pushl
imul
jmp
aaa
xchg
hlt
xorl
ret
addr16
sub
mov
dec
pushf
mov
xchg
outsb
pop
push
sub
je
cli
jle
int
xor
das
std
add
loopne
fnstsw
lret
scas
sbb
jge
push
push
mov
add
adc
dec
add
sub
clc
sbb
cmpb
pop
and
xchg
or
incl
call
andl
out
repnz
scas
lods
filds
std
lods
mov
jg
and
adc
mov
lret
decl
pop
pop
rol
std
jg
jp
jmp
cmp
inc
bound
imul
movsl
ljmp
lock
xor
negb
arpl
lret
movsl
push
pop
ljmp
dec
es
lcall
out
mov
adcb
adc
pushl
xchg
rcrb
or
cmp
shll
jl
mov
push
push
sub
shrd
mov
xchg
jb
xchg
data16
shrl
std
idiv
push
mov
adc
sbb
add
loop
xor
shll
out
ds
mov
sub
mov
cs
jg
pop
or
jg
and
sbb
daa
in
ss
add
mov
movsb
mov
mov
ret
repz
push
pop
call
push
xor
xor
mov
call
jne
add
jp
cmp
sbb
outsb
mov
data16
shll
daa
xchg
sti
iret
lea
jp
mov
jg
dec
pop
in
repz
andps
or
jg
test
movsb
push
push
movsl
add
mov
jp
call
sbb
ret
push
ret
cmp
inc
leave
dec
lcall
es
mov
stc
mov
aaa
clc
das
aad
insb
push
outsl
je
inc
sbb
lods
ljmp
repz
xlat
data16
mov
enter
jbe
jmp
jne
adc
cmp
pusha
addl
lcall
pop
clc
call
or
pop
jo
push
shlb
pushf
push
dec
popa
pop
push
aas
jg
stc
call
out
popa
inc
out
mov
loopne
push
in
fadd
or
rorb
jae
inc
jl
std
push
sbb
jg
jo
into
ljmp
mov
call
push
xor
and
adc
loope
ficoml
cmp
push
stos
sarl
hlt
xor
push
arpl
les
movsl
mov
adc
fdivr
aaa
outsl
bound
xadd
add
push
and
aam
sbb
and
mov
call
jae
cs
fucomp
cmp
xor
movaps
insl
loopne
incl
pop
mov
ret
cmpsb
and
push
lret
stos
rcrl
cmp
jns
cmc
mov
incl
call
pop
gs
sub
pusha
cmp
shll
sbb
loopne
mov
cs
xchg
and
cmp
or
leave
pop
bound
lcall
lods
scas
dec
in
das
pop
mov
popf
mov
pushf
mov
or
and
dec
inc
push
leave
addr16
mov
sub
jo
jns,pn
addl
inc
scas
in
in
jmp
fisttps
insb
stc
inc
mov
push
mov
sarb
lds
add
movsl
mov
insl
mov
adc
cmp
cmp
int
adc
mov
jo
ja
sti
pop
mov
call
adc
dec
testl
outsb
cmpsl
push
std
pop
sti
sbb
jecxz
mov
rcll
call
testl
jle
cs
inc
out
mov
inc
jg
sub
ds
data16
jg
cmp
and
cmp
enter
stos
sti
mov
out
lock
jecxz
dec
popa
cld
push
imulb
leave
xorb
orl
loopne
mov
dec
and
inc
mov
pop
mov
lcall
std
jmp
iret
movsb
push
out
mov
cmp
inc
xchg
cltd
mov
outsb
sub
lcall
dec
clc
pop
dec
mov
xor
cwtl
in
adc
xchg
cmp
pop
aaa
fimuls
sbb
cmpsl
sub
jbe
jmp
push
xor
aam
jnp
jge
fs
cmp
dec
adc
and
sbb
int3
test
aaa
paddb
das
add
jl
push
and
jl
jb
push
aas
fldl2e
pop
loop
mov
adc
sbb
fucom
or
cli
mov
fists
push
adc
bound
cld
xchg
dec
out
xor
test
pop
or
test
nop
iret
push
je
cwtl
mov
pop
data16
or
mov
and
jmp
shl
stos
push
push
pop
clc
jmp
cld
mov
inc
jae
lret
adc
jo
daa
cmpsb
fucomip
jmp
sub
int
push
jg
int
je
je
test
fsubl
call
enter
call
jbe
inc
pop
js
into
or
stc
xor
mov
xchg
inc
sub
or
inc
paddsw
mov
xchg
jae
xchg
and
xorl
sub
fdivl
mov
cli
pop
mov
je
push
mov
xchg
ss
stc
inc
out
lds
adc
pop
jp
call
faddl
pop
jp
lock
xorl
mov
push
movsb
fwait
subl
cltd
xchg
or
xchg
push
inc
push
outsl
repz
push
pusha
cmp
outsl
pop
xchg
ja
out
out
push
cmpsl
andl
fmull
mov
mov
ret
filds
test
push
aad
loopne
mov
jbe
int
and
jg
dec
js
inc
inc
mov
addl
movb
sahf
movsl
enter
jg
dec
lods
adc
sub
xor
cmpsl
das
add
into
xchg
jg
popa
jmp
inc
pushl
mov
add
orb
mov
test
incl
sti
test
rcrl
mov
subl
inc
mov
mov
rolb
bound
in
cmc
cmpb
mov
cmp
sbb
decl
jmp
push
sbb
sbb
jmp
xlat
lods
mov
jle
das
add
std
add
outsb
call
hlt
lods
scas
xchg
cltd
push
jmp
insl
pop
daa
cmp
enter
pusha
in
xchg
cli
or
popa
retw
subl
ja
add
in
xchg
es
sti
and
add
push
sub
aam
xchg
js
dec
popf
repz
jns
in
outsb
negl
cmp
mov
mov
arpl
sub
nop
add
cli
jg
fcomp
add
test
cmp
stos
sahf
dec
mov
dec
jmp
xor
jp
xchg
icebp
mov
adc
dec
decb
stc
das
mov
jp
pop
add
inc
and
sbb
loope
call
fs
test
dec
push
or
sbb
shr
lcall
mov
fidivs
movsb
push
int
adc
ss
mov
ja
sub
cmp
leave
mov
mov
mov
adc
test
inc
lret
add
call
mov
ss
daa
leave
test
dec
mov
jmp
cmc
push
add
cmp
jne
xchg
insl
mov
mov
cmp
ja
lods
call
jg
in
push
cmp
ficomps
and
ljmp
rolb
cltd
and
xchg
xor
adc
orb
add
xchg
mov
and
shr
nop
mov
dec
rorb
sbb
icebp
jns
inc
sbb
xor
sub
aad
mov
call
ja
sub
enter
icebp
out
scas
clc
xlat
xor
jns
jg
pop
and
inc
jns
scas
jg
lods
adc
js
cmp
and
mov
jl
aaa
dec
insb
sub
mov
and
cmp
jnp
addr16
xchg
xor
orl
inc
dec
jbe
add
fnsave
sbb
mov
lret
mov
pushl
cltd
mov
adc
mov
ds
add
sbb
jg
ljmp
lcall
clc
lods
dec
movsb
icebp
test
push
rorl
jg
jnp
cs
rcrb
sub
test
adc
jg
xor
data16
fsubrl
mov
xchg
push
push
add
iret
mov
sub
mov
fnsave
pop
cli
xchg
andb
repnz
cmp
mov
push
loop
div
xchg
subl
mov
or
xor
loop
icebp
and
in
outsb
clc
cmpsl
pop
arpl
dec
sbb
cmp
mov
adc
fidivrl
clc
call
mov
fs
stos
fstpt
xor
cs
adc
mov
or
cld
pop
bound
mov
xchg
imul
lcall
dec
daa
movsl
leave
pop
pop
add
ja
test
cmc
iret
push
mov
push
sub
nop
aaa
lods
sbb
sbb
inc
mov
adc
ret
mov
decl
lds
cmpsb
cmp
pop
xlat
xchg
out
mov
sbb
decl
mov
aad
inc
out
in
jge
in
push
mov
add
cmp
je
adc
fnstsw
push
test
xor
fistl
clc
or
cld
hlt
out
push
or
lds
cld
adc
mov
mov
hlt
pusha
inc
pop
or
or
cld
fcmovbe
and
inc
dec
test
ljmp
dec
call
cld
jno
jle
je
fimull
mov
mov
sbb
xchg
fsubp
jnp
adc
rol
ljmp
mov
shr
pop
pop
lret
mov
ret
sbb
sub
adc
cwtl
mov
lcall
mov
cmp
lds
and
js
fadd
pusha
jbe
sbb
filds
push
popf
data16
add
lock
mov
loop
sbb
jle
jmp
scas
rorl
mov
jo
stc
shr
sbb
mov
sbb
int3
add
daa
lock
ss
aas
push
cmp
push
add
decl
nop
mov
loopne
jp
and
mov
repnz
decb
outsl
mov
mov
rorl
rep
jns
add
call
test
adc
ss
ret
outsl
cmp
mov
test
call
stos
mov
jbe
into
test
add
aad
popa
orb
dec
test
lret
mov
incl
pop
mov
mov
int3
xor
mov
pop
push
mov
add
incl
ljmp
movsb
nop
insl
and
push
mov
test
cmp
ret
nop
pop
jle
call
gs
out
adc
sub
mov
test
mov
insl
inc
xor
and
xchg
sub
pop
clc
jb
add
sbb
pop
insb
fidivl
adc
in
loopne
frstor
mov
xchg
js
arpl
xchg
sub
nop
push
test
sbb
outsl
pushl
push
int3
scas
add
in
nop
add
pushl
mov
lcall
push
jae
or
leave
xlat
inc
xchg
xchg
add
call
lret
mov
mov
xchg
lods
and
sub
mov
insl
add
ljmp
dec
repnz
sub
and
mov
inc
cmc
inc
addl
loop
rol
rcrl
sti
jmp
jg
filds
xor
pop
fs
insb
xor
jns
pop
adc
lods
sbb
pop
jp
jg
leave
mov
pop
ret
cli
scas
enter
sbb
scas
jne
repnz
imull
dec
add
dec
ljmp
in
cwtl
fsts
test
rcl
xor
adc
cs
add
jg
call
scas
addps
mov
sbb
call
cli
movsl
sub
int
xorl
int
outsb
icebp
inc
aas
dec
cld
mov
dec
push
ret
pop
jp
mov
mov
and
dec
shrl
dec
lahf
jle
hlt
mov
push
lods
pop
subl
sbb
leave
bound
pop
scas
ficoms
pop
push
decl
jmp
push
out
imul
inc
mov
das
ret
inc
imul
out
push
push
out
xchg
rol
das
hlt
daa
mov
jo
or
mov
sub
adcb
data16
mov
int
cmp
sbb
pop
test
stc
repz
jg
test
sbb
inc
xchg
rorl
pop
lcall
incl
loopne
scas
out
dec
test
in
mov
ds
loopne
arpl
lods
sbb
or
jae
dec
sbb
decl
fstpl
mov
in
inc
cmp
push
int3
xchg
pop
cld
cwtl
or
add
ret
imul
call
inc
sub
adc
mov
pop
xchg
decl
push
xlat
mov
sbb
mov
mov
sbb
decl
mov
arpl
lock
mov
sbb
jp
fidivrl
scas
cmp
ljmp
jle
pop
pop
sbb
sub
jo
push
mov
rorl
outsl
hlt
push
idivl
pop
or
dec
shlb
fistpl
cs
call
in
movsl
jge
jg
pop
aaa
stos
dec
cmpsl
ret
lods
and
int
mov
jg
incl
data16
repnz
xor
or
les
call
mov
out
fisttpl
or
jp
push
daa
cmc
sub
jmp
jecxz
ret
xchg
clc
sub
shrl
pusha
mov
aaa
inc
jle
movsb
in
mov
sbb
ss
or
jmp
xchg
ljmp
gs
ret
sar
int3
ljmp
or
jne
cli
in
mov
inc
mov
jg
sub
in
ljmp
inc
stos
cmpsb
daa
xchg
sar
call
adc
or
iret
les
and
xchg
shll
das
cld
mov
sbb
fxch
dec
outsb
popf
test
iret
xchg
pushf
sub
mov
sarl
das
sti
pop
test
outsl
jo
insb
cwtl
cmp
std
popf
cltd
lcall
std
mov
xchg
and
sub
js
outsb
mov
jle
loopne
mov
pushf
in
jbe
js
dec
jmp
incl
xor
ret
mov
rorl
fcoml
iret
jle
xor
and
test
test
push
and
jbe
jnp
dec
push
incl
lds
adc
test
sti
fwait
imul
gs
add
push
pushl
lret
mov
xor
adc
sar
int3
or
push
jno
test
pop
mov
xor
adc
aaa
mov
xchg
movsb
call
cmp
lea
in
inc
incl
add
push
xchg
cmc
jge
out
fidivrs
int3
mov
mov
pushf
sub
push
ret
jne
fiadds
inc
xor
add
int
rcr
mov
cld
dec
push
mov
pop
jb
std
mov
push
cmc
ljmp
stos
pop
bound
cmpsb
or
add
adc
das
sbb
inc
outsl
repnz
and
call
sbb
push
mov
outsb
ljmp
lahf
jns
pop
pop
addr16
pushl
mov
inc
jle
stos
xchg
sub
jnp
sub
push
dec
or
pushl
call
push
jle
sub
mov
xor
stos
jmp
or
mov
fsubl
cmc
sbb
test
dec
cs
lds
pop
imul
mov
into
das
pushl
adc
cli
mov
daa
mov
mov
aad
jnp
fcompl
shlb
mov
pop
mov
push
mov
xlat
xorl
popa
icebp
scas
mov
scas
pop
add
sbb
dec
shll
pushl
dec
enter
mov
and
dec
add
dec
nop
data16
mov
movsl
or
mov
vhsubps
sarl
jle
add
xor
jnp
sahf
push
or
mov
or
sti
gs
call
call
decl
lock
out
mov
push
ljmp
jmp
sub
sbb
push
add
push
inc
cmp
mov
rorb
jae
fcomps
ficompl
jecxz
push
inc
insb
fdivrl
mov
mov
test
out
pop
jne
add
movsl
scas
inc
stos
inc
xchg
lods
jo
sbb
jae
jnp
jae
jmp
cld
pop
cld
fstpt
sbb
je
push
mov
fldenv
add
xchg
push
dec
mov
in
pop
cs
inc
daa
sahf
jno
aad
int
ljmp
xor
add
cmp
ljmp
icebp
movsl
sub
pop
and
nop
idivb
mov
or
fdivrp
xor
fs
add
dec
xor
mov
dec
and
push
std
jg
decl
mov
push
xor
inc
les
std
cmp
dec
push
dec
mov
mov
mov
jmp
xchg
mov
push
jmp
mov
jl
xor
xchg
fnstenv
add
inc
sub
test
jo
xor
idiv
imulb
out
dec
scas
fisttpll
add
and
push
jmp
jo
outsl
stos
jle
std
pop
fsubrs
mov
loope
and
mov
fldl
bound
jnp
push
push
xchg
daa
fldl
jecxz
jmp
or
out
pop
add
push
mov
popa
or
incl
adcb
outsb
fcoml
jle
push
xchg
arpl
sub
cmp
add
in
int
and
adc
bnd
cli
jg
fcomip
lret
jns
xor
jg
and
cmp
call
mov
lahf
or
xor
mov
je
aaa
or
rorl
pop
jg
outsl
inc
aaa
push
lret
dec
in
pop
jecxz
sub
pop
incl
popf
lea
ret
rorb
nop
push
xor
mov
push
xchg
bound
push
pop
imul
mov
push
push
mov
in
ljmp
pop
bound
pop
lds
sub
js
out
rcrb
cmp
pushl
cli
sbb
jmp
andb
or
mov
sar
andl
ljmp
dec
out
jg
pop
xchg
lret
lcall
push
mov
int3
mov
subl
pop
dec
repnz
sbb
mov
xchg
cmp
push
sbb
nop
fimuls
xchg
jl
das
lock
in
cmp
jmp
fwait
push
push
add
out
pop
cld
sub
or
lods
push
or
mov
and
push
out
mov
ljmp
jg
out
cmp
pop
clc
mov
fcoms
ds
mov
mov
lods
dec
nop
ret
ds
loopne
sub
pop
les
xor
fbstp
xchg
call
outsl
cld
jle
fadds
jo
dec
pop
and
push
inc
and
xor
add
aam
pushl
push
aas
inc
shrb
xor
pop
push
jmp
push
pop
pop
gs
in
pop
call
mov
cmp
pop
sti
aad
int
loope
icebp
rcrb
jmp
imul
sbb
cmp
or
dec
jmp
pop
std
push
icebp
inc
loopne
xchg
add
jg
imul
pushf
ljmp
outsb
and
mov
test
rclb
sbbb
hlt
dec
rorb
pusha
sbbl
andb
lds
sarl
xchg
and
dec
dec
mov
sti
decl
out
xchg
mov
loope
jge
mov
add
fiadds
mov
jg
lods
sub
clc
insl
sahf
enter
cs
add
neg
and
nop
pushf
decl
std
pushl
mov
inc
pop
rcll
je
iret
jnp
jl
dec
int
xlat
lcall
pushl
and
xor
jp
mov
dec
repnz
cmp
imul
mov
or
ja
fidivrs
cld
push
pop
inc
xchg
inc
outsb
jbe
scas
lahf
pop
and
push
in
cmp
idiv
sub
ljmp
push
sbb
sub
jmp
inc
in
mov
test
mov
cwtl
insl
xchg
nop
mov
paddd
mov
push
lock
shrl
mov
lods
mov
das
loop
lds
inc
jl
jb
je
pop
shll
lds
cmp
push
inc
cmp
adcb
hlt
add
and
adc
or
test
mov
sbb
fwait
push
push
dec
sbb
das
lock
popf
xchg
xor
ss
sub
mov
addb
das
lock
fsubs
sbb
clc
mov
mov
in
adc
adc
movsl
mov
das
cld
mov
stos
nop
pop
fs
push
outsl
loopne
jmp
sbb
jo
lret
jg
test
push
and
test
bound
lcall
jp
call
xor
es
lods
dec
das
lret
das
mov
adc
lods
pop
loop
jmp
or
xor
push
adc
xchg
jae
in
mov
mov
ds
push
pop
pusha
xchg
mov
pop
jns
es
pusha
sti
in
insl
mov
adc
pushl
add
jp
loopne
adc
cmp
xor
incl
xchg
xor
aaa
andb
pusha
pop
mov
test
jg
xor
std
int3
subl
in
mov
ljmp
mov
dec
push
mov
cmp
xchg
jecxz
movsl
ret
loope
in
outsb
push
in
das
cmc
ret
stos
mov
loopne
fmuls
mov
loop
aad
mov
fisttpll
test
es
xor
ljmp
addl
mov
dec
sbb
sub
pop
mov
sar
xchg
js
call
fucomip
repz
fsubrp
pop
call
icebp
imul
sbb
add
stos
cmp
cmp
mull
xchg
clc
insl
gs
dec
sbb
mov
cmp
ljmp
incl
mov
add
aaa
cmovns
fs
pop
in
jnp
daa
cmc
dec
mov
mov
add
mov
pop
aam
hlt
lcall
jmp
ror
dec
or
xchg
and
sbb
cld
incl
daa
lods
adc
mov
mov
sub
jae
sbb
scas
push
hlt
or
lcall
adcb
adc
outsl
mov
dec
fisubl
adc
dec
pushl
test
or
loop
leave
mov
jle
sbb
je
ljmp
dec
aad
lahf
fsubs
jbe
mov
mov
xorl
xor
das
cmc
incl
and
jae
cld
scas
cmpsb
arpl
or
lcall
jne
xchg
push
call
enter
ror
loope
jmp
mov
xchg
dec
loop
pushf
shlb
out
lock
xlat
insl
ss
stc
push
jae
mov
adc
ljmp
negl
xorl
aam
inc
shrb
jns
push
insl
stc
xchg
and
shl
xchg
pop
stos
jle
xor
jmp
mov
jge
jg
lcall
lcall
ljmp
setp
push
cmpsb
mov
mov
dec
divb
cli
decl
pop
push
push
dec
lcall
jbe
sahf
fcoms
cmp
leave
inc
lcall
add
ja
in
push
jle
mov
out
sbb
jb
xchg
jg
cmp
jbe
add
ss
subb
idivl
mov
add
jae
adc
fwait
inc
mov
cmp
test
decl
jl
data16
fisubrs
pushf
fildll
xchg
repz
decl
adc
out
mov
mov
pop
push
ret
sbb
arpl
sar
ljmp
mov
imul
xchg
dec
in
push
outsl
and
jne
add
imul
xor
fs
call
push
mov
mov
outsl
dec
std
mov
sub
sub
popa
sbb
mov
ljmp
leave
mov
sub
stos
clc
insb
sti
dec
sub
shll
push
dec
outsb
ret
clc
out
xchg
orl
cmp
and
leave
mov
cmp
add
cli
pop
loop
mov
andl
flds
das
jo
ficoms
xor
aas
or
xor
outsb
mov
push
adc
call
shr
xor
dec
out
mov
mov
push
mov
push
mov
lret
decl
or
lahf
mov
mov
push
movsb
sbb
xchg
jg
out
jb
xchg
mov
jo
adc
cmp
jmp
pushf
ss
ret
call
push
or
test
dec
imul
pushl
sub
rclb
push
mov
aaa
cli
pushl
out
ja
add
mov
jmp
cmc
add
dec
jne
mov
popf
ljmp
fdivrs
and
xchg
or
lods
call
hlt
and
lahf
push
and
std
arpl
mov
and
inc
cld
fwait
mov
out
and
jo
mov
incl
jl
jno
imul
push
divl
jo
fimuls
mov
ljmp
rcr
adc
jp
sbb
outsl
lock
data16
lds
cmpsb
repz
or
incl
movsl
stos
outsb
adc
sbb
sbb
int3
jbe
mov
ret
mov
pushf
stos
je
xchg
popa
sbb
ret
sti
cmp
out
sbb
push
or
xchg
xor
ret
inc
dec
cld
mov
jg
call
out
mov
and
mov
adc
add
pop
and
sub
call
cmpsb
xchg
xchg
call
push
lret
xor
or
int3
shrl
fucomip
jg
cmc
lea
push
pop
mov
insb
push
ret
xchg
test
dec
out
int3
adc
nop
jg
call
shrb
aaa
test
data16
mov
stos
dec
mov
into
mul
fwait
dec
pop
into
inc
mulb
ud2
mov
add
call
mov
dec
inc
cmc
insl
mov
stc
xchg
sbb
rorl
cld
sbb
sub
andb
push
in
imul
pop
cld
movsl
adc
xlat
mov
xor
loop
lret
lcall
push
jg
subl
cmp
pop
jnp
dec
add
das
hlt
sar
les
mov
loopne
cmp
mov
adc
stos
sub
pop
popa
push
xchg
xchg
aam
in
cmc
mov
inc
cld
in
push
pop
popa
push
mov
pop
test
test
out
loope
loop
fidivrs
ret
aas
ljmp
and
and
add
scas
jmp
cmp
fiaddl
loopne
xor
adc
out
decb
jmp
shlb
jp
push
int
push
pop
mov
out
lock
mov
add
xor
jmp
xchg
or
ljmp
xor
stos
jbe
aad
sbb
mov
add
xchg
in
insl
cmc
cmp
pushl
arpl
fmuls
jg
movd
fcompl
lcall
cld
fists
std
cmc
mov
test
stos
dec
dec
ljmp
mov
mov
dec
xrelease
xchg
int3
nop
lds
sbb
stos
push
sbb
sti
cmp
dec
mov
imul
shll
xor
push
fs
lea
ds
lods
pusha
mov
std
pop
icebp
cmp
mov
xor
cmp
ret
cmp
jg
xor
movsb
dec
mov
add
jno
fwait
adc
fistl
stos
mov
ljmp
inc
inc
sbb
mov
lahf
mov
lock
decl
push
dec
inc
mull
das
or
daa
aas
lahf
pop
insb
rcrl
outsl
mov
ret
mov
sub
mov
int3
push
pop
ljmp
inc
inc
scas
push
mov
loopne
mov
sbb
xlat
clc
mov
pop
mov
imul
hlt
ljmp
sub
mov
clc
stos
mov
mov
lret
add
inc
push
mov
hlt
dec
cmp
lret
mov
adc
cmp
mov
faddl
inc
xor
call
lea
fidivs
mov
and
jge
aaa
jg
ljmp
fldcw
push
cld
mov
mov
in
xor
cli
jg
cli
js
outsl
pop
pop
lods
xchg
jo
fs
out
fisubrl
outsl
mov
out
jne
leave
fmulp
lea
mov
lcall
mov
dec
fisttpl
jne
in
mov
insb
cmp
movsb
pop
push
lods
or
lret
adc
int
ds
jmp
add
mov
mov
imul
movsb
xchg
inc
lcall
call
loope
test
cltd
or
mov
roll
sub
jmp
pop
xor
outsl
mov
pusha
inc
je
sub
jno
loope
sti
adc
ljmp
lret
mov
lds
call
ret
jg
jg
loope
dec
test
cmp
pop
sub
aaa
stos
inc
mov
sub
std
ljmp
adc
ret
cli
pop
xchg
dec
jmp
mov
push
aam
fldcw
and
mov
in
call
xor
inc
dec
dec
scas
adc
dec
add
into
mov
dec
cmpsl
lods
mov
sbb
fbld
cmp
ret
std
adc
mov
pop
js
idiv
das
add
idivb
mov
aas
sarl
call
js
or
mov
fstpl
mov
cmp
hlt
out
pop
mov
ret
jns
cmp
in
pop
cmp
in
add
scas
rorb
or
inc
fisttpll
nop
and
cld
fucomip
lods
cmpsl
adc
jp
and
xor
decl
std
or
push
es
xchg
subb
rcrl
sub
push
imul
idivb
sub
popa
pop
ret
in
pop
cli
addr16
xor
pop
xor
fadds
pop
push
cmp
mov
cmp
mov
push
pusha
dec
cmp
or
aad
mov
insl
cmp
pop
fwait
hlt
pop
push
inc
push
dec
leave
adc
pop
das
ljmp
push
ljmp
repz
xchg
pop
xchg
xor
negb
ds
add
orl
pop
rorl
add
mov
ljmp
pop
loopne
fcomp
inc
mov
adc
icebp
sbb
cmp
lcall
cmp
movsl
sub
sub
mov
mov
mov
iret
call
dec
push
idiv
shlb
push
or
mov
cmp
out
pop
xchg
mov
iret
add
int
mov
jp
incl
lods
mov
xchg
or
js
fistps
mov
outsw
loopne
mov
decl
sahf
jmp
leave
loop
out
fmull
mov
loopne
cli
outsl
repz
repnz
push
out
pop
icebp
inc
rcrw
mov
add
cmp
pop
mov
jecxz
outsl
cld
fbld
mov
sarl
adc
push
cwtl
push
cltd
and
jmp
sub
test
cmp
mov
rorl
dec
sti
or
pusha
call
lock
push
repz
and
jl
jg
fistps
mov
jmp
pop
repnz
nop
dec
test
enter
push
ss
or
and
stos
or
add
movsl
call
in
repnz
mov
sti
decl
fnsave
cmp
mov
loop
pop
lock
in
xor
cli
inc
xchg
add
lcall
jl
xor
adc
movsl
jmp
xchg
push
mov
das
mov
jns
decl
enter
pop
in
mov
jl
iret
or
fidivs
je
mov
adc
or
cwtl
ret
adc
sbb
movsb
push
js
das
icebp
and
cs
mov
dec
xchg
jnp
cltd
aaa
orl
mov
mov
call
outsb
es
scas
mov
xchg
loope
xor
outsl
add
orl
jb
in
mov
inc
ja
clc
outsb
dec
std
call
out
pop
mov
loopne
ljmp
bnd
cwtl
repnz
repz
push
sub
ljmp
lcall
mov
in
and
insb
mov
add
mov
imul
push
cld
xor
shrb
lock
sarl
mov
arpl
pop
std
fistps
stos
mov
test
out
xor
loop
iret
ret
outsb
mov
incl
fldcw
jbe
dec
daa
lea
inc
xchg
xchg
push
push
int3
inc
ds
aam
leave
dec
or
mov
test
dec
sub
jo
ja
push
sbb
dec
aam
hlt
pop
mov
or
nop
adc
pop
jo
mov
cli
ljmp
mov
xor
jbe
decb
jle
mov
es
xor
adc
decl
or
das
addr16
mov
cwtl
inc
in
mov
ljmp
mov
mov
mov
dec
sbb
mov
loopne
pop
pop
jg
andb
lds
out
inc
adc
mov
mov
out
ja
mov
stc
sbb
mov
or
stos
enter
ds
leave
scas
decl
lret
incl
mov
aam
mov
iret
mov
cmp
outsl
cmc
fisttpl
pop
sti
test
and
mov
fsubp
nop
inc
out
dec
adc
in
ljmp
push
pop
daa
scas
mov
jbe
shll
cmp
lcall
fdiv
in
bound
mov
push
jmp
ror
cli
jae
int3
mov
std
ljmp
leave
jg
aas
and
dec
and
in
lods
mov
xchg
sub
sarl
enter
and
adc
dec
mov
decl
fsub
lds
lret
xchg
add
fsubrp
decl
push
in
shl
repz
stos
ficoml
out
push
scas
nop
pushf
icebp
mov
lcall
fcmovu
push
clc
mov
push
test
std
mov
fists
outsl
sti
xchg
mov
jno
dec
cld
jmp
sbb
mov
sbb
bound
adc
push
xchg
cli
jg
decl
fwait
or
mov
int
xorl
idiv
decl
jae
pop
lods
popa
xchg
pop
inc
pusha
inc
test
aaa
pop
cli
inc
add
sar
outsl
lock
ret
add
adc
push
dec
std
je
addr16
jecxz
negl
jg
inc
sbb
mov
addb
insb
cmc
cmp
mov
pushl
dec
bound
das
lods
mov
cmp
fnstenv
pop
mov
divl
dec
mov
ffreep
jns
pop
loopne
lods
imul
shlb
das
inc
ror
adc
push
das
lock
lds
js
shll
adcb
add
call
imul
push
jbe
xor
mov
call
icebp
stos
dec
testb
sbb
xlat
jmp
imul
decl
and
or
or
les
pop
mov
icebp
ljmp
xor
out
pop
jmp
mov
int3
jbe
dec
lret
pop
push
scas
xchg
jle
xchg
lcall
in
jno
xlat
sbbb
cmp
inc
sbb
jnp
adc
outsl
xor
mov
mov
pusha
int3
lock
push
cli
dec
dec
xchg
and
pop
xor
add
call
outsb
fnstsw
add
jae
loopne
jae
push
loopne
add
inc
cmp
mov
cmpl
xchg
sub
jns
pushl
cli
loop
aaa
imul
xor
lea
xchg
std
or
or
decl
sarl
je
leave
cli
mov
or
repnz
pushl
clc
fs
rolb
push
stc
push
xchg
sti
push
cmpsb
mov
pop
enter
mov
xchg
in
adc
cmp
sahf
lods
xchg
push
ret
out
push
sarl
sub
arpl
lods
cmpsl
lahf
out
cmp
aad
fistpll
or
cld
les
jp
jbe
xchg
sbb
lds
adc
pop
aaa
jbe
push
gs
mov
jg
sbb
adc
fstpt
and
adc
arpl
jle
cld
call
mov
aas
push
out
div
popf
stos
sbb
inc
test
cmpsl
les
inc
cld
das
std
add
add
dec
and
cmpsb
daa
sub
mov
stos
pop
jg
lret
and
sbb
cltd
sbb
addr16
sahf
push
icebp
add
push
call
aam
push
add
mov
mov
jno
mov
call
inc
loope
cmp
mov
mov
ret
leave
and
sub
incl
mov
push
or
adc
pop
and
fidivs
mov
push
xchg
fs
pop
mov
lock
es
or
in
push
mov
jl
adc
insb
je
into
xlat
fadds
popf
inc
dec
ljmp
cld
pop
mov
mov
shrl
cltd
movsbl
cmp
leave
lea
pop
push
dec
std
lcall
insb
popl
jge
pop
cmp
test
push
lcall
jge
and
xchg
push
cmp
movsl
jb
repnz
in
mov
adc
das
icebp
std
cwtl
mov
sub
mov
outsl
sub
mov
std
fnstsw
fwait
lea
icebp
cmpsb
jne
sti
xor
push
ret
push
pop
xchg
icebp
cwtl
dec
in
sbb
das
pop
fcmovbe
das
lahf
sbb
pusha
lea
add
mov
pop
sub
inc
mov
pop
roll
bound
lods
movsl
mov
adc
or
cmp
push
mov
and
movsl
ret
cmpsl
clc
jmp
outsl
or
push
cmpsb
dec
add
sahf
adc
into
test
not
pop
icebp
push
sub
jns
lds
adc
xor
scas
das
hlt
mov
imulb
clc
inc
mov
cmp
pushl
test
jmp
fildl
lret
loope
ret
pushf
daa
push
mov
aaa
sar
jbe
dec
ret
cmc
jmp
jge
iret
decb
lods
ss
adc
outsb
inc
jg
mov
test
pop
std
test
ja
gs
push
es
pop
les
pop
mov
add
sub
fistl
add
jle
iret
xor
hlt
lods
lret
scas
xor
fistpll
ljmp
mov
popf
fsub
xchg
sbb
in
mov
jmp
lock
xchg
mov
sbb
out
out
inc
or
clc
sub
jg
pop
cmp
les
cld
jg
dec
sbb
and
inc
mov
pop
incl
mov
or
inc
inc
notl
push
bound
jge
std
test
pop
mov
ret
addr16
das
fcoml
inc
dec
in
test
sub
test
cli
pushl
int
xor
sar
dec
or
or
push
ljmp
icebp
pushl
movsb
mov
repz
add
outsb
les
movsl
out
repnz
push
outsl
mov
sub
mov
xchg
aas
or
mov
incl
mov
inc
mov
lret
jg
dec
lret
pop
fisttps
add
test
xchg
cmp
into
xchg
incl
add
ljmp
cli
mov
jle
testl
pop
jns
das
mov
loop
incl
mov
insb
loop
cmpsl
arpl
jbe
mov
decl
cld
push
clc
scas
mov
js
test
ret
push
rcll
jmp
push
sbb
dec
out
xor
or
jae
jo
into
jmp
ffreep
mov
icebp
arpl
xor
std
test
sub
xchg
lret
es
test
jns
xor
mov
xchg
mov
scas
adc
out
enter
jae
int3
xor
cmpsb
call
push
mov
add
mov
js
pop
cmpsb
out
mov
push
cmp
cld
outsl
jno
jge
rcrb
daa
icebp
stc
add
ret
arpl
lds
fildll
ret
pop
adc
das
cld
xchg
dec
add
xor
idiv
cmp
pop
adc
adc
mov
movl
sahf
or
sar
inc
inc
sbb
int
les
cmp
popl
jge
fdecstp
js
test
clc
call
sub
mov
xor
out
lahf
enter
pop
std
fbld
in
xchg
cmpsl
mov
fcoml
adc
aad
fneni(8087
sar
das
std
lcall
mov
dec
jnp
add
inc
jno
jl
cwtl
inc
clc
xchg
jecxz
iret
test
jg
mov
and
scas
fnstenv
lea
in
add
lcall
ja
mov
xor
xchg
movsb
lock
mov
mov
call
mov
loope
fucomp
and
cmp
das
aam
ljmp
hlt
aad
push
adc
inc
in
dec
idiv
sbb
mov
and
inc
dec
and
jecxz
xchg
and
jbe
incl
pushl
mov
mov
aaa
fmul
mov
jmp
inc
in
call
fsts
xchg
xchg
sub
divl
mov
in
cmp
or
jmp
push
cmp
pop
call
ljmp
push
cmc
jle
mov
imul
mov
out
cmp
push
dec
data16
sub
ljmp
and
inc
jnp
jo
and
dec
dec
mov
pop
inc
pushl
out
loope
pop
cmp
pop
pop
push
lret
xorb
test
and
pop
adc
arpl
jo
nop
mov
sbb
das
cld
jg
repnz
inc
pop
mov
and
pop
mov
xor
sub
std
les
popf
pop
sbb
xchg
dec
adc
scas
dec
jge
jbe
lcall
mov
adc
xorl
test
xchg
sahf
cli
js
inc
incl
lds
push
mov
jg
dec
sbb
insb
popf
das
fiadds
jne
xchg
dec
xor
dec
cmc
lock
test
dec
sbb
outsb
mov
mov
mov
lods
xlat
pop
pop
je
jg
lcall
mov
inc
cli
icebp
lcall
enter
aad
sub
add
jl
pop
popf
mov
cmp
in
aaa
pusha
scas
fcmovne
pop
loop
mov
cld
push
scas
jg
addb
sub
mov
push
dec
popf
ss
aam
rcrl
mov
jae
jne
inc
ljmp
mov
sub
scas
cltd
in
push
inc
cmpsb
inc
add
nop
fcomps
jb
call
imul
sbb
outsl
cmp
and
mov
add
fidivrs
adc
es
popa
adc
pop
sbb
xchg
xor
es
mov
cmp
and
fstps
outsl
je
push
mov
sub
outsb
in
xchg
lret
dec
addr16
into
out
fstl
sub
sub
pop
push
fwait
add
incl
sub
add
or
repz
outsl
negl
inc
stc
jecxz
rclb
push
lret
inc
fdivr
popf
inc
in
call
add
and
incl
faddl
dec
sbb
jecxz
ja
lock
dec
or
push
cli
repz
sbb
push
or
aaa
sub
mov
push
movsl
mov
push
fistpll
pop
arpl
rclb
add
or
cmp
jg
std
push
shlb
xchg
xlat
fdivrl
in
mov
xchg
fiaddl
sar
clc
cmp
in
xor
lret
push
mov
andl
loopne
mov
mov
int3
mov
push
mov
push
leave
test
adc
jno
mov
icebp
fisubl
fsub
sub
stos
xchg
outsl
es
add
pushf
cli
in
jg
mov
mov
mov
pop
out
push
dec
test
nop
das
mov
std
sbb
stos
mov
sbb
lds
mov
outsl
cld
pop
test
pop
jl
in
fstpt
popa
mov
cmp
test
sahf
mov
xchg
mov
add
pop
inc
fiadds
xor
fsubl
hlt
incl
mov
in
jge
adc
lock
add
xchg
mov
sbb
add
push
das
and
shlb
inc
icebp
push
std
mov
hlt
xor
push
sarl
outsl
pop
pop
mov
cs
loopne
push
jae
sbb
cmc
sbb
pop
outsl
and
ss
jp
or
xchg
icebp
sub
cmp
lret
mov
gs
insb
lods
pop
jp
adc
xlat
sbb
fstpt
pop
pop
incl
and
sub
popa
mov
repz
es
inc
xchg
loop
xor
stos
test
push
xchg
cld
outsl
icebp
into
mov
push
mov
push
ljmp
mov
pop
jl
in
and
adc
mov
lcall
shufps
push
out
adc
loopne
mov
testb
decl
divl
pushf
jns
pop
shll
imul
jnp
mov
inc
inc
mov
pushl
movl
fs
xchg
jge
jl
pop
xor
jg
jp
or
mov
ret
pop
ror
pusha
into
pop
std
mov
aaa
mov
movsl
outsb
es
add
push
inc
cmp
mov
repz
xchg
add
lock
sbb
aad
bnd
push
dec
gs
clc
ret
jb
divb
cwtl
jb
sar
stc
cs
incl
das
mov
cmc
mov
dec
push
lret
sbb
inc
in
jmp
mov
sbb
push
pop
cmc
dec
pop
int
lcall
fucomip
out
xor
adc
lods
clc
test
jae
fnop
outsl
cld
ss
inc
sub
jb
and
and
pop
xchg
mov
jg
and
mov
jno
dec
ja
das
xchg
cmp
mov
nop
sbb
add
xor
sbb
cmp
push
mov
bound
mov
js
mov
popa
or
popa
push
inc
sub
orl
add
mov
dec
inc
outsl
hlt
ss
sbbl
dec
int
xchg
and
xor
cli
call
hlt
push
inc
cld
es
mov
mov
je
mov
jl
adc
arpl
std
jg
cltd
cli
pusha
pop
call
add
in
mov
pop
je
loopne
pop
adc
or
jbe
ljmp
jg
mov
push
or
jbe
lods
arpl
aas
mov
mov
js
xor
insl
pop
inc
dec
mov
popf
cmc
out
outsl
lea
jo
cwtl
or
add
cmp
xor
push
dec
and
push
loopne
push
inc
aaa
lcall
inc
and
fstps
icebp
inc
movsb
inc
jecxz
orl
subb
cmp
jecxz
test
int3
mov
incl
arpl
loopne
adc
sbb
xor
outsb
out
dec
hlt
dec
jge
cmp
or
fucomip
mov
pop
lock
cmp
dec
mov
outsl
or
mov
mov
call
xchg
pop
inc
das
das
cli
push
pop
cs
nop
inc
push
pmovmskb
lret
pop
or
jmp
inc
jns
cld
pop
mov
sbb
add
leave
pop
jl
aad
cltd
push
pop
roll
sbb
decl
pop
cmp
les
cli
out
push
cmp
add
dec
aaa
dec
dec
test
cli
fnstsw
and
cli
cmpl
or
push
xor
and
pop
lods
push
adc
or
iret
or
add
and
jne
ljmp
sub
shrb
sbb
mov
push
incl
les
sahf
inc
sti
shll
in
fwait
or
ljmp
mov
popf
lret
or
mov
ljmp
xchg
sub
insl
call
xor
push
lcall
xor
ret
pop
movsb
addb
fidivrs
mov
pop
lcall
loop
mulb
mov
jns
or
fildll
ret
adc
bound
cmc
mov
push
cmp
jp
xor
std
call
and
add
rcrl
xor
bound
pop
repz
push
int
mov
cld
mov
pop
outsl
icebp
mov
adc
fs
test
sbb
pushf
mov
or
inc
sbb
and
xor
stos
ljmp
push
xor
repnz
cmp
fistl
adc
mov
dec
mov
jg
pop
add
mov
jae
sahf
push
dec
add
adc
mov
sar
sub
xchg
cmc
test
add
repnz
test
fidivrl
add
and
cmp
ljmp
out
pop
in
fisttps
xchg
scas
pusha
cld
mov
call
push
clc
fnstsw
popf
data16
dec
xchg
adc
gs
push
decl
pop
shrl
sub
add
dec
lret
clc
sarb
daa
loopne
aaa
cli
xor
daa
fiadds
cwtl
fidivl
stos
add
call
sub
mov
cmp
ss
rcrl
nop
adc
push
ja
push
insl
mov
in
cld
lods
in
sbb
mov
mov
enter
div
jns
ds
ret
cmpsl
out
test
cld
lcall
jnp
add
dec
cmpsl
inc
std
mov
rcr
xchg
fsubrl
push
sar
in
jmp
push
or
add
sti
lods
push
mov
imul
shrb
mov
std
aam
pop
subb
jg
jecxz
xchg
mov
ss
pushl
fstps
jb
mov
lock
bound
stos
outsl
hlt
loop
sub
fisubrl
xor
jl
pushf
jb
lcall
fdivrs
mov
out
repz
pop
ss
stos
lcall
mov
fs
scas
dec
mov
xchg
popf
test
xchg
stc
inc
mov
call
movsb
cli
inc
jle
add
movsl
mov
rcl
int3
mov
mov
scas
gs
test
icebp
cltd
dec
pop
adc
inc
notb
fistpll
test
clc
test
outsl
mov
inc
jl
cmpsl
pop
sbb
ljmp
out
imul
mov
js
fisubrl
push
mov
es
leave
rorb
push
or
adc
xchg
insb
shlb
call
lcall
cmp
sub
fs
out
popa
push
ljmp
mov
adc
xchg
xchg
insl
lret
mov
and
mov
and
pop
jb
or
dec
cmp
sbbl
dec
insl
and
pusha
pop
cmpl
cli
das
insl
jno
jg
sti
xchg
mov
decl
sub
xor
push
jns
fdiv
aad
test
cmp
fdivrl
push
or
aas
fisttps
cmp
mov
call
mov
sbb
mov
jmp
adc
jg
cli
mov
std
sub
or
pop
inc
imulb
xchg
jo
cmpsb
cmp
pushl
call
loope
adc
ss
jl
and
push
push
mov
fucomip
jg
test
cld
sbb
jae
or
xchg
inc
in
jg
lock
xor
jp
aad
pop
lret
lock
loope
popa
lds
mov
mov
mov
mov
xor
cmp
mov
dec
insb
push
jp
inc
fwait
dec
out
cmc
ljmp
loope
fisttpl
out
insl
push
aad
cmpsl
stos
dec
mov
or
cmp
lds
negl
jl
sti
je
lods
loop
std
push
push
jle
fnstsw
repnz
xchg
std
insl
sub
mov
decl
sub
jbe
push
ret
cld
shll
jno
xlat
mov
call
incl
stos
pop
cld
mov
shl
std
mov
cmp
cltd
pop
mov
push
or
enter
gs
push
xchg
jo
outsl
lock
jle
insl
xor
je
dec
add
in
cs
incl
push
sub
inc
mov
dec
std
mov
xor
cmp
subl
jg
add
mov
pop
xchg
cltd
hlt
or
aam
mov
pop
int
inc
movsl
movsb
pop
and
xchg
jmp
or
decl
add
jne
add
mov
filds
das
fsubrl
mov
sub
movl
mov
pop
loop
mov
cli
dec
cld
inc
cmpsl
adc
movsb
imul
jmp
inc
sub
test
push
fiadds
pop
mov
adc
das
std
mov
inc
pop
hlt
and
lahf
fisttpl
clc
sbb
in
and
and
push
call
jg
jnp
nop
cmpsl
iret
in
push
push
lods
xchg
dec
add
loopne
mov
add
and
push
cmp
divl
lcall
int3
loope
mov
xor
jo
pop
push
repz
lahf
inc
cld
pushl
popf
in
jl
xchg
hlt
xlat
and
mov
sub
cmpb
adc
pop
pop
xchg
xchg
dec
out
das
jno
mov
add
sar
adc
aas
repz
jl
or
adcb
pushl
mov
and
push
sub
bound
and
mov
xchg
and
lret
jno
jp
lret
data16
ljmp
arpl
addb
mov
inc
mov
loope
mov
cli
jg
jg
mov
out
pop
dec
out
pop
mov
dec
in
jne
push
outsl
outsl
xor
xor
xchg
pushf
cmp
inc
call
std
movsl
js
test
mov
sub
and
bound
in
and
pop
sti
cmp
push
pop
jae
movsl
fucomip
pusha
sbb
jg
cmp
fbld
or
sbb
clc
mov
std
push
cwtl
stc
dec
push
inc
xchg
out
lahf
sub
stos
jmp
addr16
incl
mov
fwait
push
jg
jp
or
pop
sub
iret
je
push
jmp
adc
push
int
das
cld
ret
loop
sub
push
out
jno
loop
jle
popf
pushf
jo
stos
push
sarb
xchg
cld
outsb
and
or
sub
mov
fdivp
lret
clc
aaa
mov
and
xchg
das
ljmp
pop
test
cmpsl
lds
push
aad
xchg
lds
or
enter
sbb
add
cmp
add
inc
push
sbb
test
adc
mov
inc
jb
ljmp
xor
hlt
xchg
popf
out
cs
daa
ffree
mov
test
push
dec
jl
pop
xchg
movsl
pop
mov
jae
mov
mov
sahf
or
mov
jl
outsb
push
pushf
fildll
cwtl
xchg
inc
into
mov
mov
outsl
hlt
dec
inc
stos
jnp
add
mov
jmp
jg
jg
and
push
mov
fcompl
pop
dec
xor
mov
ljmp
adc
mov
sub
fwait
ret
lcall
add
lock
lcall
jns
scas
fldt
jbe
int
sbb
push
lret
add
stos
xchg
push
add
das
push
jb
inc
clc
repnz
stos
mov
or
inc
stos
shrl
outsl
lock
xor
pop
cmpb
jge
jb
rcrl
cli
cmc
andb
leave
decl
std
outsl
push
imul
cmp
clc
push
subl
test
inc
icebp
int3
lcall
pop
cmp
mov
push
add
rorl
mov
jns
add
and
loop
cmc
shlb
std
mov
jp
jp
ret
ljmp
push
std
mov
movsl
jg
inc
sbb
mov
sbb
inc
sbb
mov
xorb
or
xchg
push
push
or
sbb
dec
jg
repz
in
test
sub
cmp
mov
adc
or
loopne
sbb
jmp
fdivl
fsubrl
icebp
outsb
dec
add
jb,pt
push
jo
mov
repz
ret
sar
inc
roll
fnstsw
push
pop
jmp
fildll
popa
or
les
xchg
and
jg
fistl
mov
negb
cwtl
jae
sub
call
pop
xchg
dec
outsb
pop
mov
or
add
cld
sbb
dec
jg
jge
shll
jae
add
das
sbbl
jecxz
stos
bound
imull
pushl
loope
xchg
in
jo
sbb
xor
ret
cltd
xchg
add
sub
mov
outsb
std
aaa
inc
pop
add
push
add
and
add
repz
std
icebp
mov
sub
pop
icebp
and
das
aaa
pop
ja
leave
scas
fs
mov
das
je
pop
xchg
push
imul
sahf
cmc
repnz
mov
xchg
dec
sub
loopne
push
sbb
cmp
call
ljmp
rcll
inc
xlat
aad
clc
xorb
mov
mov
xor
sub
rorl
adc
mov
mov
lds
fldcw
mov
ds
repnz
and
mov
repz
movsl
sub
cmp
stos
mov
push
dec
out
pop
pop
mov
es
mov
clc
push
rorb
imul
add
jmp
aaa
jle
bound
or
movsb
adc
or
iret
fwait
add
lds
and
test
jbe
lahf
notl
sbb
xchg
fadd
incl
sub
ret
movsl
psubq
xor
mov
cld
in
mov
stos
jg
pop
decl
mov
enter
fwait
arpl
sbb
cmp
das
std
push
xchg
inc
sub
mov
arpl
or
in
sbbl
mov
in
cmc
ja
jns
inc
test
aaa
negb
pop
lcall
push
adc
shlb
in
cmpsb
outsb
mov
pop
insl
imul
jecxz
cmpsb
adc
mov
xlat
sub
lcall
cs
test
or
cmp
iret
mov
movsb
shr
call
xor
shll
decb
add
ficomps
adc
nop
movsl
mov
push
inc
and
add
mov
mov
pushl
notb
inc
in
xchg
xchg
imul
push
xor
outsl
ljmp
in
pop
lea
mov
xchg
int
xlat
test
add
push
out
mov
nop
sahf
mov
xchg
sub
lods
or
in
cld
mov
movsb
lea
dec
push
lds
mov
or
fcmovnu
cmp
mov
pop
mov
int
push
push
mov
and
cli
xchg
jno
call
mov
mov
rcrl
xor
incl
ret
loop
dec
in
push
cld
mov
pop
jmp
xor
push
mov
jl
mov
mov
xchg
loop
cmpsl
dec
jmp
call
clc
aam
adc
lods
xchg
push
gs
loop
adc
repnz
mov
lret
jp
push
shl
push
xchg
shl
out
dec
call
arpl
dec
fldl
out
sti
and
lret
xchg
pop
je
inc
out
pop
decb
jecxz
sub
xchg
bound
pushf
push
inc
sub
lods
incl
call
pop
and
sub
dec
inc
rcl
movsl
mov
in
lcall
adc
jl
aam
call
lock
ss
inc
idiv
jg
sbb
sbb
out
lds
push
mov
sub
lahf
jmp
inc
pop
jge
pop
loop
movsb
cmpsb
or
bound
rclb
out
leave
cmp
or
out
cld
inc
jbe
push
inc
and
pop
stos
sti
sub
outsb
jmp
outsb
in
fs
aam
std
jmp
ds
das
inc
stc
jne
xor
push
cmp
ljmp
mov
int3
push
add
arpl
pop
or
pop
bnd
imulb
pop
and
sub
paddb
cli
sbb
lcall
enter
jp
inc
xchg
in
or
jns
mov
stos
cmp
pop
push
imul
icebp
jbe
shll
inc
inc
ja,pn
or
pop
shll
inc
sbb
xor
mov
cli
scas
push
movsl
nop
aad
int3
test
or
outsl
incb
test
out
pop
test
jbe
in
inc
pop
inc
mov
js
sbb
jae
popa
cwtl
clc
fisubrs
sbb
ljmp
sbb
pop
sub
mov
scas
sar
cld
fdivl
movl
mov
mov
mov
je
dec
pop
mov
jecxz
rcrl
rcll
fstl
push
sub
mov
and
fs
mov
fisttpl
mov
cmp
cmc
sbb
sar
subb
inc
add
cmc
orl
mov
jnp
jo
push
or
lods
incl
pop
rcll
jg
cltd
fwait
arpl
rcrb
pop
sbb
in
mov
and
movntq
out
sub
pop
inc
xor
stos
mov
sti
ss
scas
inc
pop
dec
ret
dec
incl
cmp
fnsave
popa
or
movl
cmp
adcb
cld
jg
leave
cwtl
push
sbb
int3
inc
mov
rcrb
inc
and
stos
xchg
das
push
jle
push
cmc
pop
movsb
pushf
or
jg
cli
call
mov
and
out
test
pop
bound
in
lods
mov
pop
cli
ds
xchg
adc
jne
scas
ret
enter
je
cld
imul
pop
ljmp
jg
lcall
and
add
out
lods
dec
repz
sbb
incl
add
mov
shrl
dec
push
sbb
inc
add
call
mov
lods
bound
imul
mov
aam
popf
decl
push
jb
arpl
inc
mov
add
iret
pop
neg
lds
inc
stos
and
lcall
imul
leave
push
adc
mov
mov
fisubl
or
fbld
sar
clc
fcoml
faddl
sbb
jno
jecxz,pn
into
add
decl
mov
fstpt
sub
cmpsb
notl
fmul
xchg
pop
mov
xor
xchg
insb
cmp
test
lds
call
sub
jno
fldt
and
imul
pop
jg
ljmp
loopne
jmp
das
or
mov
shll
movsl
ljmp
jnp
sub
adc
in
cmp
test
mov
or
sub
cltd
mov
jle
mov
mov
and
mull
pop
xchg
mov
inc
aaa
dec
or
lcall
push
sti
mov
or
test
cmp
sti
repz
pop
xchg
ljmp
push
add
adc
push
xchg
cmpsl
dec
ss
xor
lods
incb
pinsrw
pop
xchg
mov
nop
icebp
push
imul
xchg
sbb
jo
lret
cmpsl
pop
jecxz
push
dec
out
cmp
or
outsl
and
or
dec
lahf
test
rcl
jbe
ret
jmp
decl
lret
sub
jp
or
cmp
ret
lret
insb
mov
in
addr16
clc
jle
mov
imul
mov
int
mov
das
std
jecxz
dec
jle
mov
rorl
or
jg
rcrb
xor
cmp
cmpsl
ja
cmp
add
in
mov
and
scas
mov
adc
and
decb
cli
mov
jne
sub
push
icebp
incl
mov
cltd
shr
popa
ljmp
cli
loopne
ljmp
hlt
jbe
or
popf
pop
sbb
xchg
lock
mov
rorl
xchg
mov
cmp
fcomip
sub
push
dec
stos
xor
mov
repz
fnstenv
sub
test
incb
sbbb
inc
mov
mov
and
movsl
rcr
clc
iret
dec
mov
jmp
sub
push
pop
mov
js
inc
test
inc
inc
push
je
mov
movsl
addb
lds
cwtl
xor
jg
aaa
incb
add
leave
inc
das
bound
test
xor
cmp
lret
imul
out
or
fcmovnb
pushf
movsb
or
fstl
shrb
out
call
stos
nop
dec
aad
sbb
or
push
iret
mov
jno
aaa
insl
ja
and
aam
incl
hlt
test
adc
sbb
mov
mov
stc
mov
or
in
mov
loopne
cmc
xor
ljmp
cmc
repnz
cmp
inc
negl
add
jg
mov
outsl
mov
dec
dec
cmpsb
aaa
mov
inc
loope
cmpl
cld
test
jge
es
mov
sub
es
pop
xchg
outsl
jecxz
pushl
inc
sbb
push
or
push
movb
call
cmp
mov
mov
mov
out
mov
in
add
loope
std
or
stc
sbb
aad
call
jg
lds
sbb
inc
neg
repnz
sbb
sti
mov
leave
and
mov
mov
andl
data16
decl
in
or
jo
pop
jo
or
adc
mov
xor
movsl
xchg
pop
clc
incl
mov
inc
dec
cmp
ds
adc
xchg
clc
decl
and
daa
insl
lcall
sub
mov
mov
bound
lods
in
ret
push
mov
sbb
fsubp
pop
push
pop
into
jg
pop
lret
outsl
ljmp
bound
xor
sbb
and
int
out
sub
mov
xchg
outsb
lock
jecxz
pop
push
in
inc
leave
pop
add
mov
std
lods
mov
out
push
mov
ret
jg
mov
insb
fistpll
pop
inc
sub
hlt
scas
sbb
daa
pop
sub
lcall
lcall
filds
stc
pop
sub
cwtl
sbb
cld
or
decb
mov
sub
inc
call
inc
mov
ficompl
pop
dec
ds
and
int
fnstcw
out
movsl
pop
ljmp
cwtl
jge
scas
rcrb
sbb
loop
shrb
std
outsl
incl
aas
mov
fs
mov
clc
jg
mov
jo
push
jmp
dec
or
mov
mov
fistps
lret
pop
das
lds
pop
stos
js
jno
cmp
aam
ljmp
fmulp
adcb
and
xor
vdivpd
lock
cli
inc
js
push
repnz
add
adc
mov
mov
jg
inc
lahf
scas
mov
inc
dec
aaa
cmp
pop
mov
cld
pop
pop
mov
lcall
fiadds
lods
jle
mov
cmp
mov
push
xor
std
pushl
je
adc
cmp
adc
cld
iret
xor
lcall
fsubrl
and
jne
clc
or
mov
stc
call
test
ret
mov
or
jg
xchg
push
jl
jmp
jns,pt
xor
decl
testl
xor
cmp
das
lock
aaa
dec
xchg
shlb
pop
inc
sub
aas
push
int3
call
sarb
les
sbb
jg
repz
das
icebp
stos
push
or
mov
push
sahf
aad
jg
nop
inc
sbb
push
pop
lock
daa
fucomp
mov
roll
sbb
idiv
lods
aaa
mov
in
lods
sbb
and
pop
jmp
xor
pop
in
pop
stos
add
jmp
jecxz
jmp
sbb
jg
rolb
add
enter
cmpsl
mov
xchg
pop
loopne
adc
mov
mov
inc
icebp
xor
ljmp
jb
inc
ss
push
movsl
ficoms
and
cs
mov
sbb
add
iret
jp
loop
lock
repnz
into
popf
sub
mov
decl
icebp
test
cmp
cmp
addr16
clc
rclb
fs
inc
inc
pop
add
xchg
inc
pop
or
add
test
decl
incl
mov
mul
test
aam
out
sbb
ret
or
pop
pop
fildll
mov
aaa
add
mov
loopne
mov
mov
inc
data16
clc
sbb
ja
test
out
xor
push
jg
outsl
hlt
movups
mov
inc
insl
pop
mov
cs
sbb
ret
mov
sbb
push
int
inc
test
mov
lcall
adc
outsl
fildl
sbb
popf
imul
mov
inc
dec
adc
jg
andb
sub
outsl
test
cmpsl
jg
aam
mov
mov
iret
test
push
ret
dec
or
popa
sub
fildll
lock
add
xchg
lcall
mov
or
sub
inc
movsb
cli
fldenv
cmp
pop
arpl
pop
mov
and
xchg
mov
repnz
pop
mov
cmpb
adc
jg
xchg
push
fists
or
jo
adc
cmc
ljmp
hlt
imul
cmpsb
outsl
dec
adc
xor
addr16
mov
in
mov
outsl
test
sbb
jnp
out
mov
jge
mov
lods
inc
sub
les
sti
mov
dec
mov
ret
jmp
sbb
repnz
sub
repnz
jecxz
dec
into
sarb
jp
cmpsl
inc
mov
cmc
jmp
adc
das
in
push
add
es
sbb
jmp
cmp
jl
loope
negl
iret
enter
push
cmp
cs
loopne
push
les
in
pop
push
mov
fistpll
and
orb
ja
lds
es
cwtl
inc
or
inc
ss
lcall
loope
mov
out
xchg
mov
inc
adc
clc
jmp
fwait
push
and
push
cld
sbb
jg
inc
outsb
pop
lcall
les
inc
es
fidivl
adcl
sbb
adc
jecxz
xchg
int3
inc
sbb
test
outsl
icebp
inc
pushl
stos
sbb
mov
ljmp
hlt
cmp
ljmp
jns
lret
xchg
sub
in
sbbb
std
jg
incl
roll
adc
jle
int
movsb
lcall
fidivrs
sahf
xchg
pop
dec
ja
sub
jno
mov
add
jmp
dec
sti
adc
pop
dec
mov
test
cld
push
add
fsubs
insl
push
imul
add
insb
insb
outsl
arpl
add
sub
jnp
icebp
dec
sub
sub
cmpb
sub
inc
and
sub
subb
sbb
and
pop
loopne
jno
jp
add
mov
lea
std
mov
vmwrite
gs
mov
dec
push
rcrb
mov
push
dec
sub
mov
sub
adc
cmp
jmp
sub
inc
ret
incl
faddl
mov
clc
sub
pop
mov
or
mov
dec
std
add
bound
mov
testb
ja
mov
fadds
jne
ds
sub
mov
mov
lods
sub
dec
popf
cmpb
jg
and
xchg
sub
xchg
xchg
and
or
movsl
sub
mov
call
cmp
xchg
and
cmpsb
inc
aam
ljmp
decl
cltd
cmp
xchg
lret
pop
add
mov
cli
xchg
sub
sub
pop
sub
jp
mov
lods
mov
push
sbb
sub
call
imul
lock
push
xor
add
pop
cmp
push
add
add
push
mov
pop
sub
or
sti
incl
aad
out
push
inc
sub
xor
push
std
jg
lret
xor
or
clts
stos
mov
je
mov
xchg
add
dec
test
subl
mov
mov
xor
mov
inc
xchg
push
popa
rcrl
add
cmp
sub
lcall
in
mov
adc
mov
sub
xchg
ret
cli
int
sub
xor
fstl
jae
bound
loope
xchg
int3
push
sarb
loopne
les
add
out
cmp
adc
or
sbb
and
fistl
subl
mov
add
pushf
ret
scas
adc
add
and
or
sub
mov
cs
stos
cmpb
test
cmp
ljmp
xor
sub
push
mov
xchg
loop
ss
pop
dec
and
imul
decb
or
cmpsb
dec
inc
jle
das
push
jg
subb
in
dec
mov
sbb
stc
inc
or
daa
mov
or
subl
call
outsb
mov
cltd
lock
lds
movsl
cs
adc
jb
jne
insl
pop
jle
fldt
iret
lods
dec
sbb
sub
add
daa
dec
ret
push
js
adcb
and
inc
outsb
lods
imul
fnsave
xchg
call
div
pop
mov
mov
repz
cmp
fs
inc
ja
out
xor
jp
nop
or
or
jge
or
sub
pusha
fmull
aam
cmpsb
daa
or
sub
rorb
cmp
and
add
clc
in
mov
pusha
fcomps
andb
inc
jae
pop
in
notb
mov
test
or
in
pop
inc
pushl
sahf
in
into
sbbb
nop
push
mov
mov
mov
jle
xlat
out
push
and
or
add
and
rcrb
les
dec
jge
hlt
cmp
xor
call
pop
test
or
stos
lret
insl
cmpsl
sub
jg
add
xor
inc
fisttpll
pop
or
jle
mov
mov
mov
and
pop
push
inc
add
leave
fadds
cmp
push
cmp
gs
aam
mov
popa
cmp
push
leave
insb
add
outsl
movsl
shlb
mov
in
rclb
adc
jo
sub
daa
inc
iret
cltd
sub
in
add
in
test
hlt
mov
popa
das
je
xchg
jle
cltd
sub
dec
adcb
jecxz
jg
roll
mov
test
pop
test
outsl
jno
inc
rcrl
orb
cmp
enter
sbb
inc
cmpsl
push
dec
les
test
jmp
ret
or
mov
push
push
jb
pop
dec
scas
mov
xchg
sub
jmp
push
das
xchg
sbb
arpl
adc
mov
shll
add
adc
add
xchg
mov
popf
cmp
dec
adcl
js
movsl
mov
cltd
outsb
enter
add
pushf
aaa
loop
push
cld
sub
mov
or
adc
sbb
fnstcw
ret
loopne
es
ljmp
and
xor
sti
jb
jb
or
mov
test
testb
sub
ret
cld
imul
imul
loope
mov
jg
dec
jg
push
int3
xor
push
push
dec
loopne
jno
jmp
xchg
or
add
imul
shll
out
sub
ss
pop
sub
cs
sub
ficoms
fimuls
mov
add
sbb
test
mov
decl
out
or
sub
mov
dec
aad
aaa
ret
ret
cmpsl
xlat
push
lds
add
fisubs
mov
loope
dec
mov
and
stos
inc
mov
pop
clc
inc
dec
push
adc
pop
sub
add
cli
lahf
adcb
add
aad
aaa
ss
push
and
aam
shlb
jo
dec
adc
les
inc
xchg
testb
push
loope
jg
prefetch
add
popa
clc
pop
push
std
fadds
pop
loop
xchg
push
or
scas
stos
push
aad
jmp
sbb
pop
xchg
cmp
jg
mov
lods
cmpsb
push
dec
dec
out
daa
movb
test
pop
cmpxchg
mov
xor
inc
lock
sub
dec
sub
sbb
pop
popa
ja
jnp
jnp
and
shrb
sub
repnz
and
or
ljmp
in
lcall
repz
adc
pop
sub
cmc
mov
or
incl
pusha
loope
jge
mov
stc
cmp
pushf
add
std
mov
push
das
sub
fstl
cld
aam
dec
push
fistpll
aad
rcll
es
push
xchg
push
jne
stos
addb
cmc
and
testb
cmp
orl
fistl
jle
inc
or
xchg
pushf
lods
push
aad
mov
lahf
push
adc
and
ljmp
outsl
das
sbb
dec
popf
inc
in
or
lods
call
addr16
scas
fiaddl
sbb
je
pop
add
loopne
scas
das
xor
out
rol
shll
sahf
pop
push
pop
arpl
jmp
fidivs
lea
and
push
lea
mov
enter
incl
dec
out
inc
in
sub
xor
fwait
cs
jecxz
jns
jbe
fcmovnb
sbb
add
jp
sarl
lahf
shll
and
push
dec
inc
incl
ljmp
clc
mov
mov
lds
fisttps
xchg
cwtl
mov
rcrl
xor
xor
jecxz
nop
dec
cmpsl
enter
lods
dec
or
in
and
and
push
mov
cmpsl
in
rcrb
xchg
push
xlat
adc
cmpsb
jle
ret
test
out
push
es
mov
push
dec
das
xchg
or
adc
lahf
lcall
xchg
cmp
mov
sbb
pop
adc
mov
test
mov
outsl
sub
mov
mov
sub
pushf
push
cmc
or
mov
aaa
mov
and
popf
lock
xchg
mov
jp
mov
pop
stc
xlat
sub
jle
movaps
sub
outsl
pushl
in
inc
cs
pop
xchg
mov
test
daa
ljmp
shrb
clc
and
and
mov
lock
xchg
test
push
xor
pop
jg
push
fisttpl
ljmp
push
clc
mov
dec
lahf
test
jne
mov
lahf
cmp
sbb
sbb
fwait
add
stos
mov
adc
cs
and
mov
lcall
ja
cmp
add
or
mov
in
dec
inc
lds
sbb
mov
xchg
push
cli
ret
jp
mov
je
add
out
add
mov
xor
xchg
mov
sti
push
ljmp
mov
cmp
jne
popa
push
test
repnz
in
inc
mov
inc
dec
lret
dec
ljmp
pop
in
ret
std
out
xor
sub
inc
outsb
mov
mov
push
pop
xchg
stos
loopne
adcb
mov
mov
hlt
loopne
xor
rorl
mov
lcall
sbb
es
pop
sti
mov
fdivrs
adc
jle
mov
jo
xlat
fadds
adc
inc
hlt
sub
cmp
dec
inc
sub
xor
and
fwait
clc
cmp
inc
xchg
sbb
dec
and
test
inc
aad
fistl
push
push
ret
cltd
repz
mov
xchg
adc
sub
xchg
add
stos
decl
mulb
push
pop
or
icebp
sbb
and
add
adc
push
test
sbb
mov
or
pop
push
pop
inc
decl
aam
outsb
mov
or
dec
cmp
call
call
adc
out
xor
push
lods
jecxz
cmp
pusha
fldcw
loopne
jne
int
xchg
fs
in
or
xchg
pop
insb
dec
cmp
pusha
addb
ljmp
or
jno
lcall
sbb
mov
and
bound
outsb
roll
inc
adc
ss
mov
mov
adc
cmp
lods
lods
test
sbb
xchg
mov
bound
out
mov
inc
mov
mov
jge
jo
push
add
shll
mov
jle
sbb
pusha
pop
jecxz
jmp
push
icebp
pop
iret
cli
sbb
adc
outsb
test
mov
mov
and
mov
add
sub
fstpl
fildl
jmp
mov
add
rcl
cmpsb
add
cmp
jmp
cli
adc
pop
bound
jns
sbb
test
lahf
cli
inc
lds
or
and
push
nop
sahf
pop
int3
jg
stos
mov
sub
sbb
out
test
cs
or
pop
jo
fwait
mov
repz
repnz
and
adc
sub
icebp
aam
fs
push
inc
mov
shrb
pop
push
popa
cli
std
xlat
loop
mov
push
out
pop
repnz
stos
jmp
inc
and
mov
pop
and
sar
leave
mov
mov
jg
dec
push
out
mov
xor
jne
ja
jo
pusha
mov
or
enter
pop
pop
stos
vpmovswb
jns
xor
jbe
push
repz
or
ret
lods
andl
cmpb
andl
fistpl
fistpl
sub
jnp
sbb
jnp
push
stc
shrl
loop
and
icebp
add
jmp
in
arpl
neg
add
aad
jnp
daa
movsl
int
daa
sub
adc
dec
shrb
xor
pop
pop
inc
cmp
mov
cmp
mov
sti
mov
xor
roll
fidivrs
mov
in
gs
nop
int
shr
rcr
or
icebp
mov
dec
mov
dec
fnstenv
ljmp
mov
in
xorb
pop
cli
ret
filds
dec
les
inc
sti
movsl
mov
add
cmp
lret
add
inc
bswap
mov
mov
adc
mov
cmp
insb
jo
jecxz
test
add
fmuls
push
dec
lahf
pop
clc
mov
cwtl
mov
push
adc
arpl
insl
dec
aaa
stos
mov
shlb
rorl
pop
pop
push
xor
lds
pop
lcall
jno
aas
mov
adc
adc
sbb
aad
ja
sbb
movsl
enter
xchg
hlt
push
mov
lret
filds
xchg
movsb
lret
insb
insl
mov
sbb
xchg
ficoml
or
insb
mov
aas
push
adc
ret
sub
and
push
aad
pushaw
push
add
ljmp
cmpb
jecxz
int
adc
dec
fisubrl
icebp
fistpll
scas
adcb
or
mov
push
pop
ret
jecxz
ret
mov
pusha
popa
or
cs
push
pop
push
xor
sbb
push
jo
cmp
jge
jmp
out
fwait
cmp
push
scas
fwait
insl
or
outsl
lock
fwait
int
jb
jbe
inc
test
mov
jle
push
mov
inc
aam
lret
cwtl
push
push
ds
sub
shlb
mov
mov
aad
jae
add
dec
movsl
sbb
sub
fmuls
lret
or
mov
dec
xchg
pop
sbb
add
jbe
out
or
aaa
divb
hlt
mov
mov
inc
outsl
test
mov
out
bound
int3
mov
mov
sarb
xor
stos
cmc
inc
xor
or
push
and
or
push
push
jp
lods
sbb
mov
and
pusha
jns
dec
push
xchg
ret
or
inc
test
out
jmp
lods
sub
sub
xchg
imul
jg
push
push
pop
jb
cwtl
push
popa
sub
cmp
mov
add
push
inc
pop
cld
xor
and
lock
in
das
movsb
adc
mov
inc
push
cmc
adc
pcmpeqw
mov
shlb
xchg
js
fldt
insl
rol
das
pushf
loopne
mov
or
lods
push
xchg
icebp
mov
push
push
inc
inc
imul
adc
ret
push
inc
lods
push
test
push
decl
shrl
mov
add
xor
pop
fstp
fcmovnb
mov
mov
cmp
test
pop
mov
adc
xlat
dec
lds
inc
mov
mov
sahf
xor
pop
out
add
jmp
dec
mov
mov
add
xchg
xor
dec
int3
mov
dec
test
loope
icebp
jb
je
and
scas
sbb
add
shlb
lock
lcall
mov
lock
shll
inc
push
jbe
jae
cmp
outsb
filds
xchg
scas
and
mov
test
sti
mov
inc
sbb
int3
aaa
addr16
out
lods
sar
or
lahf
lods
adc
add
test
popf
cmp
push
add
ror
sbb
push
push
aam
sub
push
and
scas
aas
jne
test
mov
jl
stc
sub
fucomip
imulb
divb
ja
lds
jp
test
adc
ja
or
jge
std
pop
loopne
in
inc
sub
mov
and
outsl
or
pop
aaa
sahf
psubsw
movsl
jb
add
cwtl
out
movsl
cmp
xor
dec
and
cmp
cmp
xor
sub
lock
or
sti
xchg
shl
push
mov
pop
push
iret
mov
lcall
aaa
addr16
leave
stc
or
dec
cmp
mov
mov
data16
js
xor
dec
in
ljmp
adc
rolb
sub
cmp
and
dec
arpl
pushl
rorl
xor
pop
dec
or
cwtl
stos
outsl
movsl
lods
mov
std
mov
out
test
clc
loopne
pop
push
cli
ret
testb
mov
push
js
dec
clc
clc
ljmp
and
dec
jo
mov
lock
cld
jecxz
sub
mov
ror
into
adc
push
adc
incl
push
xchg
mov
repnz
xor
cmp
lcall
push
add
adc
jnp
call
cmc
sub
mov
or
push
jle
mov
mov
adc
bound
xchg
imul
push
xor
add
fwait
push
fadd
sub
add
sti
leave
pop
loop
nop
wrmsr
adc
push
dec
sbb
movsl
dec
jae
add
ljmp
pop
mov
pop
addr16
push
pushf
les
ja
sub
shl
sub
mov
sarb
and
cltd
es
mov
ret
inc
test
arpl
inc
adc
mov
roll
add
mov
mov
push
add
test
adc
add
jmp
andb
stc
add
nop
les
jp
sbb
mov
jmp
incl
jecxz
jns
mov
mov
push
rcr
cmp
repz
sbb
jecxz
mov
sub
notl
cmp
call
mov
push
and
or
dec
rep
inc
data16
inc
nop
addb
repnz
ja
sar
mov
ud1
daa
pusha
push
pushl
mov
mov
add
das
pop
jo
adc
js
lea
rcl
adc
cmpsl
xchg
cli
in
test
mov
fistpll
cwtl
and
and
cmpsl
inc
inc
inc
outsb
loopne
jbe
loope
mov
mov
mov
jge
adc
inc
xor
pop
add
xor
inc
mov
xor
insb
inc
jg
shll
inc
adc
push
push
ds
dec
inc
icebp
cmc
mov
inc
js
push
jecxz
ud2
xchg
jg
bound
imul
xor
lock
movsl
in
push
adc
popa
bound
xchg
lds
test
ret
pop
gs
popa
sti
dec
inc
and
adc
cld
dec
popf
xchg
and
cmc
jns
xchg
out
xor
mov
xchg
out
repz
jno
inc
jo
aam
mov
mov
sub
mov
popf
mov
push
imul
test
sub
in
sbb
insb
push
xchg
push
push
outsl
hlt
fcomi
loop
cmpsl
sub
xchg
adc
xor
mov
inc
shll
sub
inc
insb
shlb
or
into
pop
adc
lea
pop
incb
mov
sar
dec
jp
ret
add
or
xor
push
xchg
clc
fildll
je
sub
mov
adcl
cmc
out
pop
clc
pop
mov
xor
call
cwtl
out
sar
or
lock
inc
iret
insl
pusha
test
ss
je
dec
test
pop
ljmp
pop
jbe
xor
adc
add
ret
movsl
dec
mov
add
gs
adc
mulb
mov
stos
xorl
fstps
mov
jmp
movsl
pop
ss
bound
ljmp
push
test
push
in
dec
cs
mov
inc
or
fwait
xor
hlt
adcb
andl
psubw
clc
leave
lock
or
hlt
mov
jl
fsubl
mov
mov
mov
add
imul
xchg
adc
mov
shr
fsubrs
jle
mov
icebp
xor
shll
push
dec
add
shll
fs
mov
ret
cwtl
xor
jb
inc
mov
jp
lock
jp
add
loop
ljmp
fstp
mov
xchg
inc
mov
aaa
adc
jp
rolb
in
ret
xchg
cs
sbb
test
jbe
lods
and
inc
inc
jne
icebp
in
push
add
jns
jno
std
decl
sub
loope
mov
cwtl
iret
scas
add
cld
mov
xor
jg
mov
sub
cld
fmulp
popa
pop
loop
mov
inc
imul
in
lock
pop
cwtl
lods
add
clc
or
add
repz
mov
push
fistpll
adc
jge
push
inc
mov
fwait
cld
aaa
jle
test
sub
and
adc
js
or
sbb
pop
jno
into
cli
sbb
and
addb
jl
sbb
inc
sbb
inc
repnz
dec
call
push
sub
rol
je
mov
in
mov
pop
and
jge
into
and
imul
lea
insl
sti
jmp
enter
mul
lret
ret
and
inc
mov
add
pop
mov
fs
andb
ja
mov
mov
mov
fists
mov
jl
push
sbb
add
test
add
add
mov
pop
push
and
sbb
jns
jl
cmp
shrb
inc
lret
sahf
sub
test
or
sahf
push
or
fisttpl
mov
outsb
std
jg
fstpt
dec
add
in
roll
push
add
andb
incl
sub
adc
mov
lcall
jl
jle
push
sbb
and
fbstp
ret
pop
cmpsb
lcall
movaps
andb
adc
pop
js
decl
movsl
pop
adc
and
adc
les
or
lods
adc
ds
scas
jmp
jbe
push
xchg
fcmovne
inc
sub
cli
int
test
xchg
outsb
fmulp
sahf
lods
imul
call
outsb
int3
adc
add
lock
das
sub
mov
mov
ret
in
jp
mov
jecxz
pop
lods
data16
repz
dec
jnp
lret
inc
aad
icebp
pop
subl
cwtl
outsl
mov
jbe
inc
push
shll
std
test
jp
pop
mov
cltd
jl
mov
cmc
pushf
inc
jbe
or
into
cs
cmc
cld
adc
dec
les
loopne
xor
push
arpl
hlt
xchg
jle
imul
mov
and
std
jg
jno
lods
adc
js
fdivrs
ret
int3
fildll
cwtl
mov
fiaddl
mov
leave
jb
insl
arpl
stos
stos
sar
pop
pop
fdivrl
test
jno
popa
fs
popl
add
fisubrl
cmc
ja
jg
lods
rorl
mov
xor
inc
pop
sahf
sub
xchg
outsl
jne
jg
gs
mov
bound
mov
rol
aaa
jbe
mov
test
lcall
loopne
sub
adc
inc
aaa
ds
and
or
addb
je
scas
lods
xchg
andl
jmp
cmp
mov
popf
or
test
insl
je
mov
push
sbb
outsl
mov
movsl
dec
sbb
or
inc
int
scas
out
bound
test
xor
cmp
ljmp
rorl
inc
sahf
push
in
jecxz
andl
and
and
inc
in
lock
or
cld
icebp
xor
rorb
lret
add
mov
add
mov
sarl
push
mov
fcmovb
sub
sub
in
sbb
jmp
xor
add
jl
cltd
adc
js
or
test
pushf
xorb
pop
cs
test
cmp
adc
aad
pop
push
pushf
call
pop
subl
loopne
dec
add
cs
test
stos
push
jnp
push
testl
or
pusha
mov
push
push
leave
movsl
mov
jnp
outsl
mov
pusha
jnp
jle
iret
jo
sub
ljmp
dec
fwait
push
dec
outsl
inc
mov
mov
fsubrp
stos
mov
inc
gs
cmpsb
repnz
push
xchg
inc
ja
push
dec
or
cli
rorl
int3
scas
mov
sub
xlat
repnz
pop
enter
jns
lods
add
in
icebp
add
insb
ljmp
dec
in
fs
fsubl
push
testl
aam
pop
mov
lret
loope
or
mov
push
pop
lock
imul
mov
lahf
or
loope
add
jmp
push
jae
dec
cmc
mov
mov
sub
loopne
pop
push
in
mov
int
xchg
or
in
push
xorb
mov
std
mov
inc
lock
pop
jle
push
xchg
fiadds
sbb
fsubrs
jb
mov
mov
mov
xchg
jmp
jle
je
xchg
rolb
aam
sub
mov
movsb
ljmp
data16
dec
fimull
repz
lock
adc
clc
fiaddl
add
pop
outsb
dec
jae
cmpb
lea
dec
lea
iret
adc
fsubrs
cli
hlt
xchg
push
and
js
out
adc
pop
sbb
mov
jne
cmp
and
insl
add
clc
and
out
inc
and
cmpb
inc
inc
dec
sbb
lock
pop
jne
fdivs
sbb
push
push
das
bound
sbb
xor
sub
push
ds
test
mov
data16
and
dec
sub
js
nop
fistpl
addl
int
mov
mov
icebp
pop
mov
cs
ljmp
add
scas
mov
fcomps
jbe
push
push
rclb
test
stos
xor
cmc
shrb
sti
into
pop
xor
ficompl
gs
or
bound
pop
loop
dec
rorl
roll
pop
cmp
cli
inc
movsb
mov
hlt
inc
fs
test
dec
push
pusha
push
pop
cmp
sahf
out
js
adc
sub
and
jmp
stos
mov
sub
push
fiaddl
std
sbb
and
cs
je
jecxz
cmp
or
jbe
inc
mov
sbb
lret
pop
push
adc
scas
and
and
xchg
xor
jecxz
inc
test
mov
pusha
popf
insb
loope
lock
loopne
mov
fists
and
mov
dec
stc
xor
adc
sbb
ja
in
cmp
jo
mov
aad
popa
xchg
nop
and
jnp
mov
xor
pop
mov
xchg
out
mov
scas
inc
jl
dec
mov
outsl
cmp
mov
lahf
cmp
sub
insl
and
scas
ret
jl
push
cld
xchg
pop
out
push
fwait
inc
les
dec
inc
scas
stos
inc
jns
out
cmp
loope
or
dec
fisttpl
xchg
loopne
jg
pop
pop
testl
cmc
sbb
stc
notb
pop
fcom
adc
roll
mov
call
push
mov
jge
mov
fwait
xchg
xchg
jmp
sbb
outsl
mov
cmc
adc
je
mov
xor
push
cmpsb
fwait
xor
mov
inc
rorl
add
jb
rep
jae
mov
mov
lock
push
arpl
sbb
dec
add
pop
xor
inc
stos
or
sahf
sub
fstl
cs
and
sub
mov
or
pop
jbe
call
movsl
mov
jns
imull
sbb
push
iret
or
adc
jns
lods
aam
mov
loope
out
cmp
cld
inc
inc
fsubs
loope
sbb
add
cmpsb
mov
in
idiv
enter
or
ljmp
rolb
mov
dec
incl
dec
jbe
cltd
adc
subb
push
scas
jmp
lock
stc
mov
jmp
dec
dec
xlat
bound
add
xor
movsl
mov
jne
movsl
pusha
addr16
mov
adc
lods
fisubrs
sti
daa
nop
mov
fstp
inc
sarb
jb
inc
loope
pushf
adc
fiadds
std
sub
mov
das
xor
and
cmc
lea
adc
dec
outsb
sti
popl
mov
jnp
sbbl
ror
mov
test
outsl
jb
inc
xor
mov
and
scas
xchg
cmp
jno
loopne,pn
or
movsb
push
xlat
outsb
mov
or
ret
test
inc
jmp
cmp
push
sti
fistpll
sbb
les
jo
add
dec
jl
sbb
ja
lock
adc
repz
repnz
gs
outsb
xor
xlat
lcall
mov
or
lahf
push
mov
xchg
test
add
mov
jmp
or
not
jecxz
test
sub
out
lock
lea
cmp
sarl
sbb
mov
sub
and
pop
jge
leave
or
mov
imul
enter
notb
sti
dec
push
sub
mov
scas
lahf
imull
xchg
adc
jmp
mov
push
test
ret
aas
mov
fidivl
jl
jne
nop
xor
xchg
iret
xor
fcomi
xor
scas
push
mov
pop
and
loopne
adc
mov
js
cli
add
imul
sti
pop
pop
stos
dec
fbld
push
loop
syscall
aam
sbb
xchg
mov
out
jmp
rolb
push
jb
in
loop
and
fdivrp
xlat
add
jge
shrb
bound
mov
sbb
and
test
sbb
mov
arpl
sub
xor
pop
fildl
test
pop
push
stc
out
repnz
rorl
mov
test
sbb
xchg
dec
leave
mov
movsl
jb
add
fcoms
ljmp
imul
push
jg
jns
and
lods
dec
jmp
out
and
fmull
or
pushl
ret
dec
mov
repnz
mov
push
push
cmp
call
mov
xor
or
lcall
out
fldcw
test
mov
inc
sub
out
pop
stos
lds
jnp
xchg
pop
es
pop
sbb
test
das
mov
jecxz
movb
cmp
sub
add
jne
loopne
or
jbe
scas
stc
ljmp
and
jb
and
fstp
das
loopne
aaa
inc
jae
jmp
inc
lret
pusha
int3
jne
ss
sub
push
pop
or
jp
mov
mov
in
pop
ret
xor
cmp
dec
rcll
outsb
shl
mov
inc
add
shl
aam
adc
cmp
mov
adc
sbb
sub
cmp
add
jmp
jle
jb
xor
jge
cs
call
mov
imulb
jecxz
xor
jbe
cmpl
cmp
loope
ljmp
mov
pop
cmp
fildl
ds
cli
jge
and
test
popf
ret
and
jg
scas
jge
or
push
mov
inc
sbb
sarb
pop
insb
cmp
bound
mov
rcrb
adc
clc
adc
outsb
outsl
insb
insl
pop
mov
lret
cld
add
std
ljmp
bound
inc
pop
adc
call
inc
add
mov
inc
aas
jge
add
push
fcmovu
sbb
inc
insl
outsl
mov
pop
push
sbb
clc
lret
insl
fimuls
cld
push
nop
add
mov
roll
or
mov
xor
jns
aas
jl
int
dec
sbb
jg
inc
test
rcl
lret
stos
and
rcrb
or
pop
xchg
popa
push
cltd
push
enter
fs
fadds
or
adc
cmp
clc
lahf
sub
xor
cmp
ljmp
in
push
ret
test
out
mov
adc
xchg
ret
movsb
push
aad
dec
sub
mov
pop
jns
and
insb
pop
lds
add
int
and
je
cwtl
jno
sub
xchg
pusha
push
mov
ss
clc
ret
pop
adc
fdivrs
add
dec
mov
and
cltd
cwtl
add
dec
dec
out
cld
out
jo
dec
icebp
mov
adc
inc
aam
data16
mov
lea
sbb
sarl
fiadds
jae
xor
jmp
pop
clc
out
jecxz
aaa
add
dec
das
mov
jo
je
mov
pop
jge
and
lods
sbb
push
adc
loopne
hlt
and
pop
test
add
out
fisttpll
lahf
mov
outsl
xlat
mov
lods
add
loope
pushw
mov
out
lds
push
outsl
pop
cmp
loop
xor
jecxz
jae
lret
jl
loope
popf
mov
nop
je
test
jmp
cwtl
shrl
xchg
stos
mov
mov
imul
pop
adc
mov
aas
mov
dec
in
xchg
clc
cli
out
sbb
mov
cmpb
sbb
inc
jne
loop
ljmp
inc
sub
mov
out
cmp
mov
mov
cmpsl
mov
js
cli
and
cmp
pop
pop
xor
insb
outsl
out
clc
cmp
xchg
sbb
inc
into
inc
ficomps
lcall
and
inc
sti
inc
fadds
adc
arpl
mov
xchg
sbb
jnp
add
add
mov
jnp
outsl
cmc
xor
stos
mov
mov
sub
test
les
fldl
ret
movsl
ss
loopne
movsl
and
sbb
dec
inc
mov
dec
jge
pop
shrl
test
cli
outsb
outsl
ljmp
and
aaa
out
push
mov
mov
mov
jne
mov
pop
pop
fdivs
insl
out
test
jl
pop
sbb
add
mov
aaa
or
fimull
cmp
sarl
xor
popa
lret
pop
pop
cmc
inc
sbb
pop
push
fcomip
dec
mov
cmp
addl
inc
loope
mov
arpl
fisubrs
push
jge
mov
jmp
sti
adc
jb
cmp
inc
sbb
mov
or
lahf
repnz
fists
cmpl
push
sbb
enter
gs
cmc
pop
popl
jg
lea
push
into
icebp
mov
dec
or
mov
mov
sbb
xor
mov
out
sbb
inc
call
movb
lret
mov
fdivrp
outsl
hlt
and
je
mov
hlt
mov
fs
dec
adc
add
pop
mov
xchg
negb
ret
and
scas
in
aad
xchg
mov
outsb
arpl
in
dec
inc
pop
xchg
mov
pop
pop
pop
add
jmp
imul
lods
push
sbb
mov
pop
mov
aad
and
lcall
sbb
and
cmp
xor
mov
iret
arpl
jmp
nop
in
loopne
imul
lods
mov
sbb
fcmovb
stos
outsb
mov
lods
stos
lea
and
dec
pop
cmp
lcall
leave
nop
jnp
cmp
pop
sub
and
jp
sub
sti
sub
mov
ja
stc
int3
sub
lret
fiadds
subl
mov
push
test
out
mov
and
mov
rorl
push
push
loope
push
mov
mov
dec
sub
jb
mov
pop
push
push
push
jb
or
lods
sbb
rcr
scas
dec
pop
mov
shl
mov
adc
sbb
push
imul
jae
inc
sbbb
jbe
and
ds
lret
mov
call
arpl
sbb
ja
jbe
shlb
movsb
adcl
push
xchg
fpatan
pop
jl
loope
lcall
and
add
movsb
popf
stos
mov
cmc
sub
dec
shll
cld
jp
imul
es
sahf
stos
mov
add
mov
push
shrb
je
andb
push
pusha
insb
cmpb
out
mov
push
hlt
xor
xchg
lcall
and
es
and
xor
and
popa
loopne
sti
sarl
fdivrp
pop
inc
or
roll
int3
aam
adc
mov
adc
mov
call
lock
jmpw
or
out
cmp
sub
xchg
outsb
xor
loopne
in
jmp
push
or
imul
cld
mov
xor
and
out
cli
fwait
lcall
adc
stos
jbe
sbb
pop
jge
dec
je
andb
inc
adc
into
aas
adc
divb
fucomp
jge
fstpl
es
lret
test
clc
and
gs
jl
popf
mov
and
jbe
dec
scas
dec
scas
sub
cmp
dec
nop
ret
into
xor
push
cltd
scas
sub
mov
and
inc
xor
sbb
cltd
push
mov
jno
fdivs
pop
ds
jmp
cmp
das
icebp
push
mov
add
sub
sub
jmp
cs
call
test
push
and
sbb
outsl
shlb
in
add
out
negl
and
adcb
lock
mov
fimuls
jmp
mov
aam
int
cmp
js
cmp
xor
notl
test
pop
xor
int
jmp
jmp
xchg
scas
rorl
loop
int
xor
adc
and
mov
sbb
xchg
mov
xchg
mov
pop
jle
aaa
pop
out
jle
pop
in
cltd
jb
mov
jge
sbb
rorl
and
fstpt
inc
testl
sbb
fisttpll
dec
jae
adc
jnp
movsb
sub
push
loopne
outsl
xor
and
fcoms
or
push
imul
aam
dec
fdivrs
pop
adc
cmp
ret
mov
dec
das
mov
mov
lret
push
pop
imul
pop
xchg
out
push
sub
add
cmp
mov
arpl
sbb
cmp
int
bound
dec
or
sti
loop
sarl
add
or
sarl
js
cld
sti
jne
adc
or
pop
stos
leave
aaa
mov
xchg
imul
jp
icebp
adc
lret
loopne
xchg
and
xchg
add
out
sub
roll
cmpsb
cmp
jne
push
xchg
das
out
inc
xchg
cmp
into
inc
int
push
aas
jp
out
cmp
add
fistl
loop
sbb
pop
je
xchg
scas
dec
sti
je
sbb
push
ja
pop
rclb
add
negb
clc
jbe
leave
xor
mov
imul
adc
dec
xchg
sbb
dec
mov
nop
in
mov
mov
imul
lock
ficoml
adc
lods
icebp
in
adc
sub
cs
loope
or
rcr
and
adc
xor
add
push
adcb
xchg
jo
mov
in
adc
inc
sbb
mov
xor
mov
xor
test
mov
and
cmp
aaa
jmp
xchg
mov
rcll
shl
and
aad
jge
sub
fadds
mov
or
mov
push
adc
jl
mov
and
ficomps
xchg
pop
mov
mov
jge
addr16
out
xlat
lret
pop
jle
sbb
es
add
mov
in
push
xchg
jbe
dec
dec
or
jmp
into
or
jl
mov
jecxz
sub
pop
sbb
jne
lret
push
adc
lea
bound
cltd
pop
inc
mov
xchg
test
xchg
sbb
add
insl
ljmp
lds
inc
cmp
sbb
cs
fcom
mov
hlt
dec
push
inc
shrb
ss
in
xchg
dec
rorb
pop
cld
xchg
jg
add
int
jle
test
mov
scas
mov
pop
sub
and
mov
add
aaa
out
cmp
loope
outsl
rolb
inc
ret
mov
cs
mov
lds
mov
outsb
int
test
out
inc
outsb
add
fwait
xchg
or
xchg
outsb
ljmp
in
or
pop
inc
fisttpll
pop
out
cmp
clc
sbb
jo
nop
jp
test
lcall
sbbl
je
cmp
adc
mov
cmp
js
mov
lods
xor
cmp
sarb
add
mov
in
push
arpl
js
dec
sub
pop
dec
loope
sub
mov
aam
jns
dec
fists
push
in
jno
or
inc
or
pop
xor
je
bnd
cmp
sahf
dec
and
divb
jg
lock
cmp
test
dec
xchg
mov
rcrl
and
cs
mov
xchg
aam
ret
ds
lret
lods
push
push
daa
and
inc
imul
and
adc
dec
pop
xchg
pop
fdivs
ja
shr
push
nop
sub
cmp
ret
xlat
xchg
mov
ja
jb
fdivrl
mov
cmp
sub
pop
enter
adc
fcomp
pop
subb
test
dec
pop
add
sub
pop
dec
mov
scas
mov
push
push
repz
scas
fsts
ds
or
or
fmuls
rclb
xor
js
jl
push
fstl
stos
dec
xor
ret
sbb
das
int
xor
scas
pop
test
hlt
or
fsubrs
int3
cmp
mov
fimuls
je
gs
fldt
jle
adc
inc
push
pop
fcomip
imul
jle
pop
loopne
imul
lahf
mov
je
movsb
cmpsb
insl
addb
jo
xchg
or
stc
popa
push
pop
ljmp
jae
js
mov
push
lahf
mov
pop
pop
mov
sbb
inc
and
sbb
push
mov
inc
sub
add
mov
popf
addr16
bswap
xlat
or
test
dec
push
jl
xor
xor
jle
jl
pop
iret
not
insb
insl
insl
dec
mov
inc
sti
fcoms
or
mov
pop
aam
aaa
fdivl
imul
data16
push
push
cwtl
ljmp
pop
mov
outsb
cld
cs
hlt
push
fiaddl
insl
clc
push
jnp
je
loope
and
ss
inc
jl
ss
pop
push
sub
enter
pop
sub
stos
cmpsb
call
jbe
mov
adc
cli
inc
lods
lcall
aad
mov
popa
loopne
sbb
xchg
pop
and
imul
outsl
jb
inc
rolb
orb
xchg
pop
inc
mov
sbb
outsl
xor
ss
push
push
imul
lock
cmp
sbbl
mov
mov
mov
inc
pop
dec
icebp
xlat
cli
roll
pop
out
push
xchg
sbb
ss
adc
mov
clc
mov
rcll
cmc
pop
pusha
or
icebp
sbb
call
arpl
cmpl
xorl
js
xchg
ret
movsb
sub
jp
cmpsl
xchg
enter
jo
jbe
push
xor
lcall
inc
push
stos
sbb
add
mov
fcomps
frstpm(287
aad
push
int3
mov
push
add
mov
fstl
pop
cmpb
int
ret
mov
sub
push
cmp
push
enter
roll
call
and
leave
call
mov
lahf
xchg
movsb
cmp
stc
cli
nop
mull
lds
mov
arpl
push
xchg
mov
push
fdivl
fildll
sar
lock
inc
sbb
xlat
xor
pop
pop
mov
and
fld1
lahf
sbb
je
or
test
fwait
test
popf
pop
icebp
icebp
adc
xchg
les
pushf
ds
popf
cmp
pop
cld
and
lds
in
or
rcrb
xor
jle
cmpsl
pop
and
shrl
jbe
cmc
out
jne
ljmp
xlat
or
call
ror
mov
es
push
pop
push
scas
or
loop
in
xor
lods
bound
in
aas
xor
push
mov
xchg
mov
mov
push
daa
divl
and
and
fucomip
xchg
xor
xchg
lcall
ja
int
cmp
jecxz
xchg
out
dec
out
fucomip
sbb
fcmovnu
adc
add
test
xchg
mov
inc
xchg
sbb
lods
cmp
push
push
imul
lds
push
pop
int
out
imul
jecxz
add
and
add
roll
mov
scas
mov
jecxz
jo
hlt
dec
pop
fidivrs
push
dec
jecxz
orb
xchg
int
mov
cmp
xchg
roll
add
pop
lret
test
cmp
stc
xor
inc
mov
rolb
div
out
fisttpl
in
inc
pusha
mov
shll
int
ljmp
shll
xchg
jg
jno
add
loope
negb
out
add
popa
ljmp
lahf
cs
or
test
push
sahf
pop
mov
ret
mov
das
xor
push
insl
faddl
adcl
inc
cmpsb
mov
repnz
imul
lock
fadd
and
mov
push
mov
cmpsb
jno
sub
add
loope
dec
mov
jl
in
and
and
mov
adc
outsl
mov
cmp
rorl
jo
je
andl
pop
ja
xchg
popa
pop
repz
les
add
lea
scas
sarb
insl
aas
fdivl
jne
dec
jp
jl
or
divb
imul
or
push
loopne
dec
push
movsb
les
and
mov
lods
pop
lret
pop
js
mov
pop
push
adc
cmp
hlt
inc
fildl
mov
sub
outsl
adc
fdivl
bound
sar
bound
pop
jo
add
sti
dec
adc
psrlw
jne
roll
incb
cld
js
dec
pop
add
mov
jp
or
hlt
nop
mov
addb
stos
add
mov
push
enter
in
lds
dec
outsb
mov
mov
sbb
dec
stos
cmpsb
mov
cwtl
inc
mov
movzwl
jno
les
xor
call
inc
xchg
lcall
inc
push
iret
jne
pop
xchg
das
lods
lret
popf
and
pop
call
fistl
sbb
in
sub
data16
jle
mov
inc
imul
sbb
sarl
mov
push
mov
pop
scas
mov
dec
pop
cmc
fists
sub
or
fwait
loopne
inc
dec
inc
pop
push
repz
fnsave
lock
fldcw
mov
sub
pop
sti
lds
pop
adc
out
sub
add
out
rorb
xorb
lea
mov
add
insl
mov
jle
mov
mov
add
rcrb
xchg
js
add
stos
pop
lds
mov
cmp
cltd
bound
loopne
mov
stos
movq
push
mov
mov
push
fcomps
jmp
aad
add
dec
stos
xchg
sub
rorb
mov
xchg
ret
mov
fmul
jns
add
mov
test
add
rorl
fsubl
xchg
shl
and
add
cmpsb
out
dec
mov
cmp
outsl
mov
mov
cmc
lahf
add
add
scas
mov
add
inc
stos
test
add
lock
ficompl
repnz
pop
stos
sbb
out
es
jmp
les
out
mov
cltd
sarb
mov
repz
fldt
addr16
or
loope
filds
lods
cmp
mov
aas
scas
adc
jnp
shll
imul
push
mov
das
pop
mov
xlat
pop
pop
push
push
jns
pop
add
mov
jle
orb
dec
jl
mov
sbb
rcr
jae
xchg
js
push
adc
outsl
or
repz
clc
fiadds
les
pop
or
cmp
mov
adc
jecxz
insb
out
inc
jb
xchg
push
imull
push
dec
imull
inc
mov
sub
xchg
cli
sub
shl
stos
sbb
adc
hlt
pop
inc
std
stos
mov
or
push
and
xchg
and
fwait
push
add
or
ljmp
jecxz
mov
push
insl
mov
outsb
lods
lret
filds
mov
pop
and
aaa
jle
sbb
mov
cmp
inc
hlt
inc
mov
or
rep
popa
cmp
dec
cmpsl
subl
scas
pop
dec
adc
add
repz
subl
lcall
jmp
mov
pop
jns
xor
rcll
jmp
fnstcw
mov
xor
outsl
or
lret
push
cld
aad
pop
or
push
ror
lret
dec
int
cmp
pusha
aaa
cmpsb
aas
add
or
les
popa
or
fisttpll
shlb
jle
das
ss
stos
jp
dec
sbb
in
scas
inc
mov
pop
xchg
rcr
js
mov
mov
inc
push
daa
rcrl
lea
cld
mov
inc
lret
xchg
fisttpl
mov
loop
cmp
iret
pop
mov
in
js
and
dec
push
jmp
or
or
popa
cmpsb
and
mov
repnz
dec
jb
mov
mov
mov
enter
adc
sub
rcrb
adc
incb
outsl
push
mov
push
outsl
lods
or
pop
xor
inc
fistpll
pop
stos
stc
push
jmp
fsubs
inc
imul
aam
adc
aad
dec
mov
pop
fildl
mov
das
movsb
aaa
fstp
mov
sbb
fwait
jo
xchg
sbb
adc
inc
pop
jb
mov
orl
push
rcrb
lods
or
xchg
push
pushf
sahf
xor
orb
adc
and
add
xbegin
frstor
sbb
inc
es
sub
ret
mov
lds
test
loopne
sbbb
jns
add
sbb
cmpsb
mov
movb
cmc
mov
xchg
shlb
jle
push
lods
pop
adc
ret
orb
push
pop
dec
inc
jmp
cmp
loop
rcrl
cmp
out
icebp
iret
push
lock
mov
inc
mov
aad
icebp
out
outsl
mov
movsb
dec
push
clc
jmp
mov
mov
adc
bsf
inc
stos
mov
cmc
cmp
incl
fldcw
insl
jg
adc
imull
and
fcoms
clc
dec
shll
out
test
mov
mov
inc
stc
jge
inc
jge
insb
stos
or
mov
mov
cld
or
outsl
insl
out
add
cmc
lds
cmp
push
into
dec
in
sbb
cli
rolb
xchg
push
out
jl
mov
movsb
jp
jl
jg
icebp
mov
xlat
ds
mov
adc
cmp
clc
getsec
dec
xchg
fdivl
push
std
jg
mov
mov
sbb
int
mov
ja
aad
movsl
inc
cmpb
or
outsl
loopne
add
imul
test
mov
sbbb
xchg
stos
inc
xor
fs
jbe
jecxz
pusha
call
or
pop
sub
ljmp
test
mov
daa
dec
aas
loope
sti
pop
push
ror
dec
ret
testl
sub
popf
mov
loopne
inc
add
xlat
cmp
out
sub
or
xchg
in
das
movsl
mov
or
xor
ja
pop
mov
pop
xchg
dec
sub
imul
icebp
cmp
lcall
and
stos
xor
adc
dec
jo
inc
dec
aad
jmp
mov
sar
mov
pop
xor
fwait
mov
icebp
push
xor
or
xchg
cmp
test
lret
mov
mov
hlt
daa
inc
pop
scas
out
movsb
pop
fidivl
cmp
sti
pop
push
jecxz
mov
bound
fnsave
push
out
pop
nop
cwtl
lahf
sbb
pop
xor
cmp
add
adc
adc
and
add
push
das
bound
mov
insl
cmp
push
and
outsb
pop
and
mov
xor
or
cmp
pop
pop
xor
inc
call
mov
jbe
sub
mov
icebp
call
aaa
jl
push
and
fwait
gs
push
inc
jmp
sub
out
mov
or
inc
out
data16
add
pop
sbb
mov
ljmp
shll
add
adc
test
ficoms
gs
and
fwait
mov
mov
shlb
rcr
inc
sahf
adc
rol
and
mov
or
mov
icebp
and
daa
xchg
mov
or
mov
or
jl
pop
jo
push
jl
fcoml
scas
dec
pop
pop
loope
mov
dec
xchg
adc
incb
xorl
xchg
push
hlt
jg
mov
mov
cld
or
sbb
or
cmp
test
jno
push
lea
jecxz
lret
fxch
jns
sub
mov
pop
cmp
icebp
out
mov
lea
pushf
adc
xchg
fwait
out
imulb
add
pop
clc
or
mov
ds
xor
sahf
fsub
push
or
pop
fcoml
jecxz
push
xor
mov
xchg
cmp
rcll
mov
imul
je
push
pushf
adc
in
enter
push
add
aas
cmpsl
loopne
push
lahf
cmp
fdivs
inc
test
dec
enter
jbe
and
test
test
loope
inc
push
xor
xor
repnz
or
cs
inc
dec
stos
or
cmc
jns
add
mov
sti
aad
sbb
pop
lea
inc
jb
stos
loopne
stos
fiaddl
adc
sbb
sbb
xchg
lret
insb
popf
mov
sub
xlat
push
pop
pop
mov
ds
jg
and
mov
xor
sbb
mov
pop
sub
pop
add
int3
lret
mov
aad
js
stos
xor
ficoms
insl
ljmp
sbb
fidivs
pop
push
aam
mov
lea
fildll
es
ret
and
jne
aad
test
jnp
repnz
dec
inc
push
push
adc
iret
jb
std
jmp
and
mov
inc
push
stc
push
jmp
ljmp
pushf
int3
add
jmp
dec
aas
cmc
stc
js
lea
sar
int3
xor
rorl
sub
mov
fistpll
cmp
jnp
inc
add
push
pop
cs
lds
sbbb
push
add
mov
fwait
mov
movsb
ja
stc
cmp
pop
add
fndisi(8087
ret
test
loopne
xchg
xor
mov
add
jl
outsl
pop
orps
and
inc
adc
add
insl
cs
mov
mov
xor
mov
repnz
pop
mov
xchg
mov
fwait
loopne
lcall
add
loop
xchg
cmpsl
out
xor
cmpsl
lods
inc
call
scas
das
cmpsb
pop
mov
inc
jns
or
in
nop
js
outsb
mov
dec
data16
mov
and
cmp
jg
test
inc
jmp
sbb
lock
xchg
dec
sub
jle
push
out
jns
pop
sub
push
fdivrl
bound
fwait
mov
push
or
lret
or
insb
or
xchg
sarl
clc
loop
test
into
xchg
add
cmpsb
lahf
sub
pop
xor
cmp
xchg
loope
bound
inc
mov
fdivr
popf
cmp
xor
imul
mov
jle
dec
and
cmp
mov
push
or
test
mov
inc
lret
cmp
dec
in
sbb
in
push
pop
fucomi
pop
icebp
sbb
adc
in
add
xchg
paddsw
mov
leave
and
and
lock
int
pop
icebp
mov
inc
jb
lock
loopne
mov
and
mov
dec
lahf
or
add
mov
mov
es
and
pushf
cmpsb
cltd
push
push
je
frstor
mov
add
pop
push
inc
mov
adc
jg
popa
xor
hlt
iret
decl
pop
andl
movl
testb
ret
dec
dec
shll
stc
idivl
js
dec
dec
fbld
orb
rcrl
js
ljmp
push
lds
cmp
inc
bound
loopne
push
inc
jge
pop
xor
ret
fisubs
dec
cld
xchg
sbb
mov
je
pop
int
jmp
fdiv
pop
insb
addr16
in
pop
mov
add
insl
fwait
movsl
movsb
icebp
jl
into
sbb
xor
stos
and
lea
stc
push
jge
in
subb
lock
mov
aam
in
adc
xor
and
hlt
hlt
in
inc
push
outsb
fdivl
fmul
mov
fildll
xchg
sub
add
mull
mov
or
push
lock
bound
mov
fadd
ds
pop
jnp
ljmp
or
loop
dec
pop
aad
or
in
mov
mov
es
jo
ret
mov
dec
mov
push
in
lds
jo
lods
aaa
ret
aaa
cmp
in
adc
icebp
fadds
bound
xor
dec
pop
pop
jnp
sti
push
xchg
lret
loope
call
cmp
ss
loope
insb
aas
movsl
mov
inc
cld
inc
loopne
ja
nop
xchg
pop
xchg
jo
js
push
jl
mov
sub
adc
das
lcall
cmp
gs
adc
cmp
pusha
mov
inc
movsl
inc
mov
call
subb
sbb
insb
push
inc
js
dec
cwtl
adc
or
dec
xchg
addr16
dec
mov
lahf
mov
mov
lret
lock
cmp
mov
xchg
or
je
push
outsl
fildl
pushf
adc
sbb
js
arpl
or
enter
sub
xchg
mov
pop
cli
jnp
add
out
test
sahf
icebp
mov
dec
psubusb
inc
adc
cli
mov
pusha
shll
cmc
scas
mov
into
stc
jo
aad
push
ljmp
movsl
test
adcb
cmp
fbld
js
cmp
mov
xor
fxtract
sti
add
jae
imul
mov
xor
sbb
pop
test
and
in
es
pop
dec
std
mov
cmp
and
fnstenv
clc
push
sbb
scas
loop
jnp
inc
out
mov
fnsave
lods
dec
or
loope
loopne
xchg
imul
std
pop
popa
mov
cmpsb
pop
fsts
jbe
insl
sti
lds
sbb
add
imul
jo
xor
pop
gs
cmp
sub
ret
xor
int3
jb
cli
aaa
jnp
add
enter
dec
aam
lock
and
psrlw
mov
sub
imul
ret
pop
sbb
and
xor
fcmovnu
mov
out
jne
pusha
sti
inc
jmp
pop
push
fildll
jne
test
fs
subl
xchg
fcmovnb
pop
ljmp
xchg
xchg
inc
adc
cmp
fisubrl
xor
js
ja
cmc
cmpsl
xchg
cmp
push
dec
fcompl
inc
clc
push
add
lds
push
popa
or
add
cltd
insb
pop
loopne
outsb
and
xchg
dec
cmp
stos
inc
decl
test
lret
je
jecxz
scas
jmp
adc
push
inc
and
xor
push
mov
int
int3
push
add
std
xor
shll
lock
pop
daa
jecxz
cmp
pushf
xchg
notl
vaddsubpd
fwait
out
xor
adc
sub
push
adc
jp
sub
jle
in
shll
popl
test
leave
mov
xchg
int
jnp
add
lahf
sub
jne
mov
mov
loop
and
cmc
addl
or
mov
lds
out
jle
push
inc
jle
xchg
pop
ja
add
add
nop
push
add
adc
mov
lds
in
aas
add
ds
sbb
mov
or
mov
hlt
and
test
or
or
cmp
push
fdivr
test
int3
sbb
out
test
stos
adc
insb
call
outsl
jg
xor
xchg
jbe
je
jge
sahf
sbb
dec
outsb
xor
mov
xchg
repnz
je
dec
jl
mov
dec
js
cvtpi2ps
jno
mov
hlt
movsbl
in
out
nop
mov
inc
sbb
mov
add
sar
sar
add
dec
cmp
ds
mov
bound
jmp
outsb
mov
jl
test
mov
mov
loopne
jnp
sbb
popa
inc
into
xor
pop
sub
push
insb
adc
test
adc
lods
sub
mov
test
jl
mov
leave
adc
popf
daa
xor
adc
ret
jno
call
and
nop
and
sbb
orl
pop
fs
cs
mov
ljmp
orl
les
out
dec
int
mov
outsb
mov
sbb
stos
cmpl
add
scas
adc
int
jbe
filds
pop
ljmp
outsb
xor
cltd
push
or
loope
ss
stc
cmp
outsb
pop
fs
pushw
inc
sahf
inc
jmp
ret
mov
mov
xor
ja
js
sbb
sub
cmpsl
and
xor
push
or
or
xor
out
or
xlat
mov
sub
adc
mov
lret
dec
aam
mov
shll
pop
fwait
aaa
mov
shl
mov
xor
rorl
cmp
push
sub
pop
out
scas
pop
and
je
test
hlt
sub
push
test
jns
jno
pop
xchg
jp
das
push
jge
icebp
enter
push
cld
cmpsb
cmp
lods
jnp
jbe
inc
cmp
xchg
push
ds
repnz
mov
push
mov
cmpsb
or
arpl
in
xchg
sti
int
or
stos
js
sub
sub
add
inc
or
test
jne
bound
int3
arpl
rcr
xor
call
or
shlb
push
daa
movsb
das
loopne
and
enter
mov
ljmp
int
aas
xchg
test
pushf
dec
mov
loopne
fdivl
fwait
lods
jp
jnp
mov
inc
bound
fwait
loope
cmpb
pop
dec
cld
mov
jmp
jb
jmp
add
xor
jno
mov
add
setge
in
imul
or
cmc
push
inc
mov
inc
pop
push
mov
fstl
arpl
pop
ss
pop
into
outsl
add
stc
leave
cmp
pop
add
popa
nop
xchg
enter
or
jp
fs
xor
xlat
int3
mov
mov
rcl
mov
mov
cmpl
fsubr
dec
mov
jle
mov
ficoms
int3
xchg
scas
lea
les
data16
push
sbbl
jmp
xor
or
adcl
inc
inc
pop
pop
iret
mov
mov
push
push
es
dec
std
ljmp
mov
jns
bound
rep
add
inc
adcb
mov
cmpsl
dec
adc
cld
and
adc
js
dec
sbb
stos
hlt
or
pop
or
fsts
mov
sbb
and
push
aas
fstl
sbb
cwtl
insb
adc
mov
test
shll
and
mov
ljmp
push
je
sub
cli
push
mov
stos
jno
pusha
push
mov
sbb
in
stc
mov
mov
cmp
xchg
ljmp
jecxz
popa
repz
push
dec
aad
jae
fnstsw
inc
into
dec
rol
std
test
jbe
adc
sahf
mov
and
add
cmp
and
pop
adc
aas
inc
sbbl
mov
sbb
xchg
push
loop
xchg
mov
bound
repnz
adc
clc
push
inc
mov
dec
push
sarl
scas
pop
and
aaa
or
xor
and
jecxz
addl
xchg
mov
pusha
or
dec
add
bsr
fdivrs
aad
mov
dec
sbb
pop
icebp
push
mov
outsb
data16
or
and
aaa
test
loopne
and
scas
cmp
sub
lea
loopne
push
adc
int
sub
testl
sbb
cmp
fimull
xchg
js
mov
xchg
sbb
cmpsl
mov
jp
pop
and
add
filds
test
mov
or
push
dec
jg
clc
sub
test
and
pop
sub
shll
rclb
pop
adc
mov
movsb
ds
mov
insb
cltd
pop
push
add
out
ret
test
jecxz
cmp
insl
fnsave
movsb
scas
pop
sbbl
push
sub
add
rorb
xchg
dec
and
jecxz
fcmovu
mov
fs
repnz
ficomps
dec
inc
popa
mov
loopne
xor
lea
scas
int
cmpsb
shll
sbb
ja
adc
dec
icebp
mov
adc
fsubrs
mov
cld
inc
or
pop
xor
repnz
test
popf
pop
xlat
sbb
jne
cmp
mov
sbb
cmp
xor
mov
ljmp
dec
fwait
sub
fnsave
or
mov
lea
or
cmc
mov
out
out
xor
pop
mov
and
imul
ss
fdivl
mov
and
add
sti
aam
aaa
mov
mov
mov
in
aam
mov
fbstp
jbe
pop
popa
jle
int
mov
or
cmc
sbb
sbb
ret
ret
or
ret
jmp
mov
mov
jnp
dec
aaa
and
cmc
adc
out
movsl
mov
inc
or
or
adc
movsl
mov
fisttpll
sub
cwtl
out
call
add
test
pop
add
and
ds
das
push
mov
add
pop
fnstsw
sti
adc
add
mov
inc
add
mov
add
lods
xchg
push
addl
mov
insl
je
dec
or
mov
cmpsl
lods
and
pop
adc
cli
punpckhwd
mov
pop
pop
adc
insb
and
ret
bound
mov
das
mov
je
pop
or
fldz
out
aaa
inc
mov
sbb
orl
pop
jp
idivb
inc
jmp
gs
scas
fwait
aas
xchg
xor
cmc
and
dec
subl
or
rol
dec
ljmp
fucomi
cmpsl
pop
jmp
lahf
jb
loopne
mov
xchg
lock
cwtl
adc
subl
inc
aam
gs
pop
sarl
xor
scas
adc
loope
pusha
xchg
adc
pusha
popf
test
rorb
pop
clc
loope
sub
add
test
jp
lret
mov
aam
mov
cmp
cld
hlt
stc
psrlq
fadds
cmp
push
cmp
and
sbb
scas
sub
popa
sbb
jp
out
or
and
jle
loopne
fs
stos
lods
add
je
cmc
stc
daa
xor
sub
popa
negl
lea
fstpl
inc
test
xor
test
or
mov
push
jae
cmpl
add
mov
stos
fisttpl
mov
repz
xchg
aaa
imul
mov
cmp
out
scas
sbb
cmp
roll
adc
loop
ret
mov
mov
sbbb
aaa
cmp
push
pusha
mov
add
fldenv
psrlw
fimuls
and
mov
sub
arpl
in
out
out
sub
xchg
jmp
mov
shrl
fnstsw
add
inc
cmp
jecxz
sbb
iret
inc
cmc
ret
xchg
xor
imul
inc
cltd
jge
out
lods
scas
inc
mov
ss
dec
les
add
dec
lahf
sarb
loope
gs
aam
das
pop
push
lcall
mov
in
cli
and
dec
ret
jbe
clc
jno
adc
scas
sub
sub
adc
icebp
cltd
pusha
xchg
out
sbb
incb
fisttpl
clc
inc
pop
jecxz
nop
nop
cmp
or
jle
xchg
mov
dec
repz
push
dec
pop
mov
sti
xchg
outsb
pop
inc
jle
ljmp
cli
test
int
loopne
dec
cld
rcll
ja
adc
int3
mov
xlat
jge
leave
mov
rclb
fbld
cs
pop
les
pop
pop
imul
mov
bextr
je
icebp
cwtl
push
dec
pop
cmp
inc
addr16
pop
mov
jp
xorl
addr16
xor
sub
xchg
sbb
add
int
inc
int3
and
mov
pop
xor
mov
icebp
inc
cmp
lock
scas
lret
movb
mov
cmp
lcall
mov
fisubs
in
mov
clc
outsb
jle
cmp
stos
lcall
nop
jbe
jecxz
sbb
add
inc
test
outsb
bound
sub
icebp
jbe
sbb
xchg
xchg
xor
fdiv
push
adc
push
outsb
sub
push
push
mov
sbb
adc
dec
push
lds
mov
push
mov
sbb
dec
subl
cld
or
lock
jns
mov
or
dec
inc
adc
test
fs
test
xlat
nopl
mov
stos
push
and
xor
out
cltd
mov
dec
xor
xlat
call
popf
sub
push
push
cmp
nop
mov
mov
mov
xchg
sub
rolb
jecxz
loope
jo
mov
in
loope
bound
or
mov
or
push
xchg
xchg
ds
loopne
jmp
xchg
push
cmp
mov
outsb
in
movhps
mov
es
sbbb
rolb
jg
pop
stos
out
add
imul
adc
sbb
inc
dec
pop
cld
std
gs
adc
jg
std
aad
aaa
ret
pop
fildl
icebp
lock
mov
mov
outsb
pop
insl
shrb
mov
icebp
and
push
test
dec
gs
in
jne
fildll
arpl
pop
push
fwait
or
xchg
into
shrl
orl
cmp
jno
xor
add
xchg
clc
hlt
mov
popa
pop
out
and
test
mov
cli
movsl
mov
mov
test
lahf
jge
sbb
pop
pop
adc
lock
pop
push
mov
pop
mov
popl
jp
jae
xchg
sub
adc
ds
pop
xor
mov
pop
jle
aam
jbe
pusha
popa
add
dec
pop
xlat
getsec
sub
mov
in
adc
sidtl
mov
xlat
cmpsb
adc
in
or
pop
sbb
mov
xchg
mov
xlat
jecxz
mov
jmp
xor
nop
pop
das
das
jge
sub
mov
int3
sbb
outsb
sbb
ja
mov
jo
mov
and
shl
add
adc
dec
mov
jge
mov
inc
push
xchg
popf
jl
aaa
jle
mov
push
pop
xchg
mov
shl
mov
aas
gs
outsl
ljmp
or
pop
loopne
movsb
lock
inc
pop
adc
pop
test
dec
mov
mov
push
outsl
pop
mov
push
or
or
cld
sub
or
jnp
in
mov
lock
mov
in
mull
jge
mov
pop
sbb
dec
mov
je
loope
adc
xchg
dec
call
shll
test
jae
pop
mov
pop
sbb
lret
pop
xor
pushf
pusha
adc
fmull
test
pusha
aaa
mov
aam
push
nop
mov
dec
jns
cli
ret
jle
mov
fdivs
and
ret
and
pop
xchg
mov
sbb
cs
inc
nop
pop
jae
pop
ss
jmp
xchg
sbb
sub
xchg
or
jns
jnp
mov
mov
hlt
push
aam
lods
and
sbb
mov
push
lret
inc
and
mov
imul
test
in
pop
add
and
fwait
sub
or
sbbb
jecxz
out
sarl
mov
stc
mov
sbb
loopne
mov
jnp
in
call
xchg
das
std
sub
jg
addr16
adc
cmpsb
popf
fcom
rcrl
xchg
inc
stc
jae
enter
adc
xchg
insl
sbb
hlt
mov
sbb
cs
cmp
leave
inc
cld
pop
add
pusha
incb
insb
es
pop
mov
clc
cs
mov
cmp
xor
pop
mov
aaa
shl
repnz
cmp
and
ret
lock
test
mov
dec
adc
jns
xchg
push
enter
adc
rcll
push
js
push
ds
mov
push
mov
fstl
imul
and
sub
push
pushf
mov
push
out
dec
xor
int3
mov
or
dec
cwtl
jnp
movsb
outsl
std
stc
xchg
mov
adc
or
mov
out
sbb
lea
or
ja
and
lods
lcall
testl
cmp
rcll
mov
outsl
mov
lret
pop
xchg
call
insl
jg
dec
fs
sub
xchg
scas
mov
or
stos
and
mov
fldt
jle
jns
pop
jns
pop
stos
pusha
imul
aam
repz
incl
pop
mov
cmp
call
in
mov
repz
sti
inc
fwait
mov
adc
fistpll
sti
rcl
popf
sub
push
js
sbb
das
jl
cld
je
and
sbb
mov
out
push
adc
push
test
rol
scas
popf
xchg
xchg
xchg
lret
popf
sbb
out
faddl
int
mov
push
aaa
leave
mov
sahf
pop
ret
xchg
push
jbe
enter
xchg
add
loopne
inc
cwtl
les
shll
mov
xchg
jno,pn
mov
mov
cmp
lock
icebp
mov
fcoms
fadds
mov
or
test
lea
ss
nop
mov
test
pushf
cmpsl
sar
mov
cli
push
mov
and
inc
shll
enter
insl
rcll
ss
mov
fisubl
bound
in
repz
sti
push
popf
mov
jo
or
jbe
insl
orl
jmp
sbb
push
push
and
pop
mov
pop
jo
push
jg
xchg
and
xchg
outsb
push
add
sub
mov
stos
inc
cmp
cmc
movsl
aaa
and
pushf
stos
dec
leave
mov
cmp
fildl
add
mov
cmp
mov
fistpll
cmpsb
jno
push
ficompl
dec
sbb
add
mov
call
lock
mov
std
pop
lods
dec
adc
pushf
out
or
sub
arpl
paddusw
bound
test
outsb
pop
dec
sbb
mov
pop
scas
lret
lods
pop
out
out
mov
out
or
les
out
cmc
dec
test
test
scas
mov
pushf
sbb
mov
fidivrs
adc
js
cs
jp
add
es
xor
insb
dec
adc
mov
dec
repnz
mov
cmp
jno
sbb
loopne
mov
int3
rcrb
decl
xchg
fiadds
pop
pop
sbb
xor
ret
jb
insb
lds
sarb
rcr
pop
lods
pop
push
out
clc
add
ds
xor
mov
jecxz
pop
daa
cmp
dec
or
pusha
mov
cltd
dec
fstl
dec
jo
xchg
xlat
lock
adc
add
int3
and
and
dec
or
inc
mov
pop
jb
out
xlat
mov
xchg
or
sbb
movsb
pop
mov
mov
and
cmc
decl
je
inc
test
jns
jnp
add
mov
add
pushf
push
dec
mov
push
cmp
dec
adc
pop
cmp
xchg
arpl
movsl
jno
shll
mov
jbe
sub
xchg
adc
sbb
inc
fdivrl
jnp
into
sub
or
and
out
sub
cli
hlt
stos
jg
dec
jnp
cs
or
sub
pop
outsl
addr16
out
add
ss
mov
fstpl
scas
pusha
jo
adc
add
call
mov
push
es
and
xor
aaa
xor
jmp
adc
cmc
mov
stos
xchg
cmp
ret
xchg
fimull
call
cmp
test
stc
test
fwait
das
sub
jo
push
stc
dec
cmpsl
pop
mov
adc
or
xor
or
jo
xor
sub
push
fldcw
mov
or
negl
jno
xchg
pop
aad
mov
js
out
repz
add
getsec
inc
jge
sub
es
pop
push
mov
adc
push
xchg
lahf
mov
ljmp
out
mov
loopew
ljmp
pop
or
or
jne
or
cmp
aam
and
add
inc
incb
sbb
pop
add
repnz
sbb
inc
pop
cmpsl
sbb
rorl
sahf
loopne
adc
inc
fwait
push
insb
test
pusha
lea
lahf
ljmp
in
pop
xchg
jg
ret
fimuls
js
fists
out
inc
orb
fsubrp
outsb
les
test
dec
mov
push
ljmp
cld
lcall
cmp
stos
ret
dec
std
and
aaa
mov
cwtl
add
mov
cmp
fdivp
dec
push
ja
or
xor
in
mov
mov
test
in
inc
dec
out
loopne
repz
gs
and
or
jo
push
and
inc
daa
incl
dec
sub
jmp
loope
pop
sub
jge
mov
stc
push
and
movsb
push
in
push
dec
xor
mov
lret
icebp
pop
cltd
icebp
add
int
mov
adc
ret
aaa
das
lock
mov
insb
mov
aaa
aam
mov
shlb
test
add
mov
cmp
ljmp
sub
mov
xorb
and
test
add
pop
pop
xchg
inc
or
mov
lahf
ficomps
xor
sbb
cmp
adc
rorb
lock
repz
inc
xor
adc
addb
push
push
pop
aaa
stos
mov
push
ljmp
and
mov
iret
mov
adc
popl
sti
cmp
sub
sbb
icebp
cltd
rolb
aaa
dec
pop
arpl
xorb
inc
popf
mov
or
add
mov
xchg
xor
out
test
mov
arpl
pop
icebp
test
mov
add
call
scas
mov
and
add
adc
inc
pop
pop
adc
rcrb
sbb
pop
and
sbb
push
mov
mov
cmc
arpl
xorb
cmp
mov
mov
call
xor
add
jno
or
or
dec
mov
jg
adc
push
fisubl
jge
subb
shll
jb
push
dec
incb
clc
lret
cltd
jecxz
cli
mov
fisubl
das
rolb
inc
fnstsw
ret
jo
xchg
ret
push
inc
pop
pusha
jmp
mov
and
in
cmp
outsb
int3
xchg
mov
repnz
pop
adc
loope
jp
pop
sbb
xchg
mov
mov
dec
shlb
xor
out
cltd
je
sbbb
pop
adc
jmp
or
mov
mov
mov
iret
mov
mov
dec
adc
or
into
mov
icebp
daa
cmp
mov
rcl
fs
loop
jnp
push
cli
mov
in
xchg
fmuls
mov
push
lds
push
out
std
cmpsb
dec
imull
mov
outsl
or
in
dec
adc
inc
jno
push
mov
lock
mov
fdivr
lahf
orb
inc
jno
and
out
aad
mov
fsubrs
sbb
fld
imul
push
int
addr16
outsl
fistps
adc
pop
mov
cmp
call
or
subb
lock
jecxz
and
out
js
test
js
scas
cmp
ds
xchg
mov
lock
push
out
call
cltd
add
push
sbb
or
xchg
jp
sub
jmp
lcall
push
xor
addr16
data16
and
lods
arpl
fldl2e
xchg
pop
jl
pop
mov
stos
and
and
mov
loope
ficoml
jl
pop
sbb
out
in
push
mov
lret
pushw
adc
mov
lea
or
int3
xchg
ds
fiadds
dec
xchg
sbb
dec
xchg
xchg
mov
cmp
mov
mov
pop
add
sub
jno
int3
sbb
mov
mov
lock
lds
jecxz
xor
mov
out
xchg
roll
mov
xor
nop
jne
aad
mov
jecxz
xor
ror
lea
inc
xchg
fst
and
jecxz
pop
stos
xchg
lods
std
mov
sbbl
jae
lea
sbb
vandps
loop
xor
inc
mov
mov
cmp
sub
rorb
in
jmp
fbld
es
aad
dec
sbb
arpl
pop
pop
cld
adc
add
lods
icebp
test
filds
xchg
push
shlb
jne
jo
out
or
clc
push
fwait
adc
out
in
out
iret
cmc
pop
or
sub
movsb
aad
cwtl
sbbb
sahf
jl
sbb
scas
add
and
jl
inc
loope
jecxz
xor
iret
add
icebp
xchg
push
test
jecxz
inc
jo
outsb
dec
jmp
ds
loop
rclb
lea
jne
xor
repz
pop
ficoml
or
add
or
cld
cmc
mov
mov
insb
push
adc
xrelease
pop
xchg
xor
mov
das
mov
insl
mov
jno
popf
addl
fsubrp
in
mov
mov
subl
sbb
aaa
push
pop
xchg
mov
aad
je
outsl
jmp
push
test
cmc
adc
rorl
out
or
aas
add
ret
mov
negl
xchg
cmp
xchg
aam
lret
aas
push
and
sahf
sti
add
and
sbb
inc
aas
js
inc
sbb
scas
pop
mov
fwait
rorb
insb
mov
lret
add
insb
and
inc
sbb
lahf
outsb
ja
in
andnps
jne
push
push
inc
mov
fdivl
fildl
mov
movsb
mov
pop
cld
outsl
inc
inc
push
insb
cmpl
push
ss
fadds
test
push
nop
mov
and
call
sub
cli
ja
push
pop
mov
fimull
test
xchg
jecxz
sbb
xor
loope
xchg
shr
test
ret
dec
das
rorb
mov
aad
loopne
inc
and
mov
sub
pop
mov
mov
add
dec
test
scas
and
sbb
mov
sub
loopne
mov
xchg
divl
sub
loope
sbb
xor
add
scas
sarb
push
dec
stos
ret
sbb
inc
sahf
and
add
repnz
das
mov
divl
dec
call
rol
ret
ja
mov
jle
rol
or
mov
add
pop
mov
mov
mov
test
clc
xor
xor
inc
out
and
or
inc
cs
cmpsb
dec
filds
out
test
in
inc
push
jge
insl
fcom
or
std
xorb
ds
add
sbb
in
cli
sub
addr16
cld
shrl
mov
and
outsl
in
pop
sbb
push
and
and
pushf
dec
push
test
pop
inc
out
push
call
pusha
pop
ret
test
adc
cmp
fmuls
pop
gs
fidivs
iret
ljmp
inc
dec
outsl
lret
out
xlat
xor
rorb
cli
lcall
cltd
rcll
mov
adcb
movsl
sbb
sbb
aaa
inc
sbb
inc
mov
imul
shll
in
fcmovnbe
shrb
sub
pop
mov
imul
push
cwtl
mov
ja,pt
shll
ficoms
fcompl
xor
cmc
lea
js
repz
adc
mov
jne
jmp
aad
mov
jg
test
loopne
sbb
cmpsl
pop
fisttpll
hlt
sbb
fcoml
xor
dec
xchg
or
jnp
jmp
or
jle
cltd
and
pop
clc
out
mov
cmp
xchg
lret
push
mov
fsubl
xchg
aad
jle
cli
push
sbb
push
scas
or
jl
cltd
jae
and
aam
iret
xor
pop
dec
fists
sbb
and
cmp
in
mov
in
push
push
inc
or
sub
mov
ds
mov
pop
ret
sbb
das
jno
push
movsl
jle
negl
in
cmpb
rcll
fstp
mov
sub
sbb
inc
mov
sbb
nop
nop
shr
rcr
dec
ss
sub
nop
jmp
call
stc
ds
in
in
pop
jmp
mov
cli
push
jg
adc
out
add
pop
out
push
sbb
or
xor
je
cmp
ret
leave
sbb
dec
xor
adc
mov
sbbl
in
mov
cltd
dec
mov
or
xor
testb
cld
nop
jg
lock
inc
and
ljmp
nop
inc
icebp
cmp
in
pusha
in
lahf
mov
mov
and
mov
mov
hlt
jecxz
cmc
and
adc
mov
cmp
loopne
jl
in
cs
ds
aad
leave
add
cli
sbb
aaa
cwtl
and
pop
jl
in
adc
loope
push
xor
rcll
jecxz
bound
mov
pop
decl
mov
cmpsb
andb
sub
xor
icebp
aad
adc
inc
add
clc
mov
ja
nop
roll
jae
mov
in
add
pop
or
jge
inc
ljmp
cmp
push
mov
adc
out
push
sub
mov
out
cwtl
sub
mov
out
mov
mov
rcll
movsb
aam
rorl
test
mov
cmpsb
sub
sbb
pop
pop
push
int
les
scas
or
mov
or
punpckhdq
dec
fdivrs
pop
incl
enter
daa
push
cmp
out
ja
pop
movsb
cmp
xor
int
das
jl
or
dec
into
cmc
pop
stos
or
push
gs
shlb
shl
lods
jmp
adc
lods
xchg
sbb
int
outsl
dec
inc
and
add
test
lock
mov
std
lahf
push
stos
add
ficoms
add
jne
mov
ljmp
inc
pop
mov
notb
xchg
fldcw
movsb
sti
repnz
sbb
ret
mov
xchg
and
and
pop
mov
sbb
and
scas
mov
rolb
fisubrs
leave
mov
loopne
add
sar
and
fists
outsb
pop
fldt
fnsave
out
jecxz
scas
inc
movsl
out
test
cmpsl
adc
hlt
pop
bnd
test
out
aam
rolb
push
sarb
jbe
aam
adc
adc
test
lds
sub
test
inc
arpl
push
adc
xchg
shll
jg
and
sbb
out
cmp
leave
lods
jnp
lock
aaa
sub
call
or
adc
pop
lods
mov
lahf
clc
inc
or
ret
or
cmpsb
ljmp
mov
cmovb
sbb
mov
out
add
call
insl
scas
inc
stos
jb
imull
jmp
pop
sahf
es
cmpsb
loopne
pop
aam
or
adc
ljmp
mov
dec
mov
loope
cmc
jmp
jbe
xor
ja
sbb
imul
punpckldq
cmc
dec
in
mov
jo,pn
stos
and
scas
mov
mov
add
fadd
rorl
cld
js
xor
fdivl
push
xor
pop
cld
adc
adc
adc
js
fstl
pop
cli
xchg
push
jns
jecxz
cmp
inc
jmp
insb
sbb
mov
in
mov
cs
imul
sbb
or
and
pushf
jns
in
sub
aad
adc
xchg
insl
fnstsw
push
mov
ret
mov
ret
popf
add
sbb
add
mov
add
fnstsw
lock
leave
jle
and
dec
xchg
mov
ljmp
in
imulb
xchg
jle
insl
in
xchg
and
insl
add
pop
mov
fdivl
aad
shll
ja
aaa
rep
adc
int
shll
cmp
ss
jns
xchg
adc
lea
arpl
arpl
stc
push
hlt
adc
mov
push
hlt
cwtl
nop
aam
pop
pop
repnz
add
incb
jae
shlw
jmp
cmp
sar
xor
pushf
clc
je
iret
repnz
stos
pop
inc
xchg
cli
in
pop
arpl
imul
xchg
sahf
xor
out
and
outsb
fsubl
fnstsw
mov
xchg
mov
cli
lahf
mov
xchg
xor
js
adc
pop
cli
inc
pop
out
mov
sbb
inc
xchg
test
or
lods
lret
fldl
pop
cwtl
and
adc
pusha
mov
or
ss
dec
inc
adc
test
dec
int3
xchg
jl
loope
xor
clc
inc
jb
cmpsl
jbe
fistpll
dec
popf
call
lret
lods
xlat
cmpsb
xchg
test
rorb
in
mov
repnz
shlb
outsl
insb
sahf
test
jnp
cld
aam
ss
and
popa
addr16
add
mov
int
push
xor
ret
aas
fidivrs
rolb
fisubs
mov
or
insl
scas
pop
xor
call
pop
pop
mov
cld
ret
cmp
pop
fsubs
pop
fimuls
scas
mov
inc
xchg
daa
and
mov
mov
shll
sbb
dec
add
in
cmp
fcmovu
mov
call
cmp
jl
inc
aam
les
jmp
inc
or
call
lret
mov
mull
jb
loope
rorl
cltd
push
enter
mov
cli
arpl
push
icebp
stos
mov
fdivp
pop
pop
and
js
gs
mov
jl
into
cmp
sbb
mov
shll
clc
or
into
negl
out
enter
out
adc
incb
out
fucompp
mov
stc
and
pushf
int3
movsl
xor
pop
mov
lods
pop
add
lcall
sub
inc
leave
mov
inc
mov
lea
pop
mov
stos
and
jne
stos
aad
push
fcom
adc
push
cmpsl
movq
ret
or
mov
pop
xlat
cmpsl
cld
adc
jp
sti
add
push
insl
jne
jle
jge
xchg
mov
mov
into
xchg
das
add
lock
in
push
in
xchg
mov
xor
mov
call
mov
in
arpl
sub
loop
and
sbb
xorb
fdivr
mov
xor
in
outsl
and
lahf
or
nop
jnp
outsb
lea
and
js
aam
jp
stc
popa
xchg
cwtl
xchg
and
inc
aas
lock
clc
sub
daa
into
xchg
jecxz
test
xchg
or
shr
mov
mov
mov
neg
call
xor
lods
sbb
xchg
daa
dec
sbb
xorl
sarl
mov
jnp
movsb
adc
inc
sbb
ss
out
ljmp
push
in
arpl
lock
lcall
sbbb
sbb
pop
repz
popf
out
mov
js
sbb
mov
push
test
pop
jle
mov
cld
adc
loopne
or
mov
add
mov
sub
loop
sbb
jl
stos
xor
and
xchg
pop
fiaddl
lahf
fwait
or
cmpsl
out
xchg
push
test
sbb
leave
jns
cli
jnp
mov
ss
bound
shl
xor
shll
mov
pop
loop
xchg
push
add
mov
lret
push
ja
add
insl
icebp
out
fildll
stos
imul
scas
fdivr
rcrb
stc
shlb
lcall
aaa
push
adc
jle
pop
mov
add
addr16
push
aas
cli
mov
xchg
daa
mov
dec
adc
mov
bound
loope
push
cmp
imul
outsl
xor
test
scas
lods
mov
je
movsb
in
icebp
sti
xchg
inc
mov
ret
xor
mov
or
std
sbb
dec
or
scas
fwait
push
sbb
push
ret
inc
icebp
movsl
pop
imul
push
aaa
sbb
mov
cmp
mov
xchg
jmp
xor
flds
mov
cmp
leave
jp
outsl
dec
movsl
or
aas
ljmp
add
cld
and
addr16
cmp
lods
jp
test
imul
dec
sub
mov
mov
dec
hlt
jbe
inc
or
sub
sarb
push
in
mov
mov
jge
lock
unpckhps
pop
dec
sub
jge
orl
test
mov
add
sub
sub
mov
js
sbb
xlat
movsl
dec
jge
lock
fidivrs
aad
sti
mov
jbe
xchg
cwtl
sbb
lock
mov
enter
jmp
cmp
int
cmc
inc
mov
in
jge
jle
repnz
ljmp
lret
dec
add
sub
lods
aaa
in
sub
test
popa
test
pop
sub
mov
addl
mov
sub
pop
mulps
aaa
and
push
pop
in
movsl
adc
jmp
hlt
rorl
pop
lds
scas
cwtl
and
daa
out
pop
js
popf
mov
sbb
xadd
or
in
fcompl
mov
and
cwtl
ret
mov
dec
sub
cmp
cld
mov
mov
inc
out
insl
inc
mov
gs
mov
and
jg
xor
out
jp
xchg
dec
dec
repz
fisubrl
sbb
ljmp
push
push
filds
xchg
cmp
jecxz
xchg
pop
mov
aam
mov
repnz
rcrb
imul
lods
ljmp
pandn
dec
dec
ret
lahf
dec
or
mov
sbb
mov
call
fwait
stos
loop
dec
imul
outsl
std
rcr
inc
and
jne
mov
jge
cmpsb
push
or
sahf
movsb
push
shll
loope
xchg
xchg
arpl
imul
cmp
jecxz
out
jnp
lcall
jle
pusha
mov
mov
add
sti
popf
popf
nop
add
jno
outsl
adc
and
sbb
arpl
ds
push
out
stos
aad
test
inc
push
fdivrs
pusha
push
fstpl
sti
push
mov
outsl
mov
jp
xor
dec
push
pusha
into
and
aaa
jns
jns
cli
test
dec
scas
aad
idivb
xchg
sbb
add
loopne
xor
mov
ss
lret
aas
jp
inc
add
int
ret
add
ds
jp
xchg
lea
in
and
dec
mov
outsl
push
in
lock
pusha
je
jmp
mov
and
sub
mov
cli
or
sub
jl
leave
lds
sbb
cli
pop
add
filds
pop
mov
into
dec
in
rorb
add
bnd
adc
adc
jp
ret
int3
hlt
out
xchg
rolb
dec
in
ficoms
ret
orb
bound
out
mov
and
movsl
inc
lods
addr16
adc
push
shrb
mov
sahf
negl
rcrl
mov
fimull
inc
lret
xchg
pop
push
or
cmpsb
jo
mov
movsl
int
iret
and
cmp
insb
nop
add
sub
mov
data16
test
in
repz
mov
adc
pop
ret
xor
xlat
push
sub
dec
fwait
enter
outsl
pushl
xchg
lret
and
out
mov
incb
xlat
dec
rcrl
mov
xor
out
cwtl
xor
jne
and
jg
fidivrl
lds
rolb
jmp
out
pushf
add
inc
testl
test
das
test
cmp
scas
jecxz
or
push
pop
ret
sub
mov
and
pop
sbb
jo
push
lahf
lcall
mov
push
inc
fstl
sbb
stos
mov
add
xor
pop
mov
and
or
je
push
jp
push
aad
out
test
push
fstps
jo
jg
push
adc
outsb
jmp
dec
xor
cmp
inc
inc
xchg
xor
mov
fdivl
lret
out
aas
outsb
test
push
repz
cmp
fisubs
push
xor
andl
mov
dec
mov
jb
jbe
xor
ret
sbb
inc
out
int3
adc
mov
es
or
jbe
sbb
shlb
loope
clc
daa
test
push
inc
addr16
jns
adc
addb
addr16
mov
jl
xchg
or
xor
push
cmpsl
sub
dec
int
add
adc
or
pop
sbb
aam
iret
ret
repnz
inc
add
xchg
fnstenv
or
cmpsl
pushw
pop
sbb
dec
xchg
jbe
into
mov
cltd
aam
push
cli
roll
in
iret
xchg
push
stc
bound
push
fiadds
jecxz
in
adc
jnp
mov
adc
or
addb
inc
and
sarb
fidivrs
dec
xlat
lea
mov
mov
shll
cmc
mov
inc
adc
lods
fldt
xchg
inc
gs
pop
xchg
subl
int
test
test
or
fisubl
std
icebp
roll
movsl
xor
push
mov
jo
mov
stos
aad
or
mov
dec
or
xchg
xchg
sbb
mov
fnsave
aad
and
mov
cld
fisubl
popf
lret
dec
stc
mov
and
inc
push
js
das
mov
or
jmp
sbb
outsb
js
jl
mov
jge
sti
push
dec
dec
loope
mov
rep
mov
in
pop
dec
cmp
subl
push
rolb
std
fadd
adc
movsl
ss
mov
pusha
and
xor
add
xchg
xchg
insb
push
jg
pop
es
lds
inc
out
divb
popf
ret
fdivrs
add
sbb
add
cld
repnz
pop
pop
mov
mov
shrb
mov
dec
repnz
imull
pop
das
sbb
mov
mov
lock
sti
fnsave
push
xlat
or
adc
jbe
or
jbe
xchg
clc
push
insl
out
sbb
cld
and
test
sbb
in
jns
aaa
fucomi
int
je
push
inc
imul
adc
jg
mov
lahf
bound
lret
clc
cmp
movsl
lret
cmpsl
mov
hlt
pop
mov
dec
push
xor
or
dec
cmpsl
sbb
les
xlat
stc
test
insb
sbb
test
jl
cmc
xorl
arpl
call
dec
out
stos
add
ficompl
add
or
cmp
adc
or
into
sbb
mov
in
ja
cmc
lods
loope
inc
xchg
cwtl
jecxz
int3
cmpsb
mov
repz
out
mov
aas
popf
shl
mov
mov
lods
stos
mov
js
divps
jp
fimull
mov
aam
ja
loopne
xor
sub
imul
cli
push
mov
fimuls
jns
cmpsl
xchg
mov
push
push
mov
and
aas
pcmpgtb
fdivl
push
dec
mov
les
adc
pop
pop
loope
push
push
movsl
dec
scas
insl
xchg
rcr
inc
cmp
outsb
mov
push
inc
mov
js
xchg
lret
in
xor
sbb
fcos
mov
add
jl
adc
xchg
adc
mov
call
insl
adc
repnz
push
mov
out
enter
push
int3
nop
jb
mov
outsl
sbbb
pop
mov
push
fidivrl
lret
or
mov
mov
pop
or
add
push
mov
into
inc
jne
lods
lcall
mov
imul
jnp
ds
daa
jl
outsl
scas
mov
pop
sbb
jbe
add
adc
or
xlat
paddusw
or
sub
sarl
popa
roll
mov
push
cmpsl
sub
es
shrl
mov
in
cwtl
aad
adc
and
std
and
mov
sub
add
frstor
inc
inc
mov
arpl
call
sbb
and
and
cmp
movl
mov
mov
ja
cmp
lret
mov
dec
data16
popa
movsb
loopne
inc
or
js
mov
xchg
and
xchg
gs
jmp
push
stos
in
mov
sarl
insb
jle
mov
dec
pop
xchg
testl
stc
daa
sar
mov
out
xchg
adc
jle
ljmp
lea
push
dec
push
xor
jo
mov
pop
push
mov
dec
push
dec
sbb
pusha
loopne
xchg
daa
jae
mov
fcompl
clc
push
inc
xor
emms
pop
push
in
cmova
mov
add
fs
sbbb
adc
dec
fadd
and
mov
dec
ja
in
das
ss
loop
mov
mov
jne
fldl
insb
aaa
dec
aad
in
mov
clc
repnz
adc
pop
stos
fildl
fisttps
jecxz
dec
xchg
add
arpl
adc
sarl
sbb
lea
sysenter
pushf
incl
dec
push
push
inc
jge
push
push
and
pop
inc
aam
dec
dec
into
cwtl
aaa
pusha
mov
mov
lods
inc
cmp
and
cmp
cmp
fisubrl
test
dec
aad
sbb
sti
cmp
xchg
add
ds
mov
or
dec
or
adc
not
insb
gs
jno
int
rcr
sub
pop
cld
insl
jge
js
mov
lds
xor
jl
add
fwait
add
jmp
sbb
cmp
je
stos
mov
jmp
dec
lock
adc
jge
pop
add
mov
arpl
and
push
sbb
enter
jecxz
loop
iret
pop
lods
add
jle
pop
cltd
pop
cmp
fstps
int
mov
sbb
adc
adc
inc
decl
cld
cli
es
push
ds
jo
out
push
sub
push
fwait
outsl
lock
xor
ljmp
pop
jmp
xchg
or
shl
add
jmp
fdivrl
int
inc
push
pop
xor
sub
shll
mov
push
shlb
inc
pop
shrl
xchg
fistl
xchg
and
stos
mov
movd
mov
push
imull
jg
lods
push
es
mov
and
adc
ja
mov
lcall
push
lret
test
ret
mov
mov
fdivl
icebp
dec
jle
scas
in
xor
or
out
out
jp
int3
bound
aad
sub
dec
hlt
std
mov
enter
fcomi
add
imul
xchg
push
fisubrs
int3
jne
scas
scas
out
push
sbb
cmp
xchg
mov
inc
data16
adc
cmpb
loop
mov
insb
insb
push
ljmp
or
iret
sbb
nop
int3
and
das
mov
mov
mov
out
or
and
mov
mov
fwait
imul
sbb
arpl
mov
sub
mov
outsl
inc
jno
lcall
fwait
or
push
addb
lds
in
add
aaa
push
push
aam
or
jns
iret
int
mov
mov
or
aam
daa
jbe
mov
pusha
incl
push
and
aam
sub
pushf
fsubrs
out
push
out
sub
enter
push
sahf
xchg
inc
inc
je
mov
out
pop
in
adc
pop
cmp
rolb
outsl
in
fs
pushf
dec
inc
pop
sub
push
and
loop,pn
or
popa
stos
clc
lods
hlt
cli
sarb
jmp
fiaddl
add
and
fs
pop
jo
jbe
inc
adc
outsb
int3
rcl
pop
xor
or
mov
fs
mov
jg
sub
shll
mov
mov
pop
xchg
mov
je
sub
lock
push
add
adc
jl
xchg
mov
sbb
rorl
hlt
stc
ret
test
and
add
xlat
mov
lock
or
dec
rorb
test
mov
int
scas
mov
cltd
jecxz
in
ss
scas
pop
or
pop
mov
jbe
cmp
mov
stos
jl
pop
xchg
fdivrp
jmp
in
mov
mov
mov
ret
js
test
mov
pop
repz
inc
mov
test
jo
push
jb
xor
push
cld
sbb
jle
fimull
sbb
inc
inc
inc
repnz
mov
ljmp
sahf
or
and
stc
xor
cmp
sbb
push
pushf
pushf
into
fs
les
lret
inc
les
into
testb
clc
shr
mov
aam
hlt
sub
jo
mov
pusha
stc
nop
jecxz
jbe
push
mov
scas
shlb
mov
fiaddl
fwait
or
mov
xor
pop
dec
fs
xchg
mov
or
push
fidivl
fistpll
test
mov
mov
pop
stos
cmp
out
jle
mov
mov
ja
sub
ret
and
or
out
test
cmp
imul
loopne
inc
push
push
push
fdivrs
pop
inc
stos
cmp
insl
pop
mov
push
dec
jo
dec
xchg
repnz
adc
loope
addr16
xor
scas
nop
or
adc
xor
push
mov
scas
push
pop
cltd
fsts
push
movd
shll
sbb
rolb
scas
fsubr
mov
push
rolb
test
lods
dec
insl
and
imul
pusha
and
inc
dec
lea
mov
std
stos
jmp
xchg
sub
roll
std
shl
fwait
pop
fimull
out
mov
icebp
orw
sbb
fdivs
insb
gs
aaa
in
dec
xor
lea
sahf
std
cmc
js
pop
pop
xor
or
outsb
fistpl
add
les
inc
mov
jecxz
add
and
nop
push
push
stos
loopne
mov
iret
inc
or
rol
mov
jl
mov
jg
cld
mov
lahf
dec
xchg
xlat
negb
sbb
into
test
test
mov
xor
and
and
jge
icebp
mov
inc
add
movl
dec
add
ss
mov
fisttpll
in
scas
mov
pop
aas
dec
sbb
sub
ljmp
jl
jmp
xlat
in
and
je
pushf
dec
jle
sbb
xor
push
sbb
xchg
lcall
inc
or
fisttpl
loopne
push
mov
or
or
adc
fwait
insl
sub
cmp
mov
mov
jg
push
sbb
adc
ds
mov
jmp
adc
imulb
cmp
xor
sbbb
adc
sbb
popf
mov
repz
pop
jg
sbb
xor
loope
fldcw
adc
add
add
add
loope
fs
enter
sar
stos
jbe
sub
jb
in
adc
pop
rcpps
add
pushf
in
xchg
mov
fs
mov
inc
sub
cwtl
mov
adc
ret
push
jmp
jb
push
inc
jg
stos
ljmp
test
out
sbb
xchg
insb
pop
je
jae
sbb
xchg
sub
aaa
cld
lds
xor
sahf
add
subb
orb
and
push
fwait
or
adc
je
push
add
mov
adc
xchg
cmp
sti
call
stc
lods
sbb
and
sbb
pop
ljmp
sbb
int3
pop
sbb
es
jns
outsl
lock
mov
and
xor
and
sahf
call
jl
sbb
jo
xor
outsl
fcomps
inc
inc
fsubrl
and
fldl
cld
pop
arpl
add
xor
push
call
ljmp
outsb
mov
stos
mov
mov
lea
fsub
div
pop
push
mov
mov
mov
nop
xchg
mov
jge
mov
shlb
mov
xchg
out
dec
cmp
mov
push
inc
xadd
daa
in
adc
addl
inc
inc
cmp
imul
call
shrb
cmpsb
mov
bound
mov
inc
pop
jb
cmp
sbbl
mov
or
repnz
sub
mov
stos
cmpb
jl
clc
mov
dec
cli
std
aas
mov
aaa
ja
rolb
cmp
out
mov
popa
loop
mov
cmp
pop
sub
adcl
fbld
mov
movsl
ja
push
leave
jne
inc
stc
aas
scas
and
mov
stos
add
pop
mov
add
out
mov
jmp
jne
aas
xacquire
fisubrl
and
sarl
add
andl
test
xchg
or
inc
dec
adc
mov
xor
loop
cli
lods
mov
jle
push
dec
out
jo
pop
mov
and
sub
sti
sbb
lock
xlat
paddusb
pop
push
jge
pop
bound
outsb
dec
pusha
imul
push
outsl
xchg
mov
aaa
xlat
mov
mov
movsl
mov
inc
push
ja
out
mov
movsb
mov
xor
or
push
cli
add
das
mov
jo
cs
aaa
arpl
dec
push
sbb
add
int
jo
lret
and
xchg
push
jg
mov
mov
fistpll
test
mov
xchg
sub
insl
scas
outsl
clc
mov
push
aas
scas
mov
adc
cmp
ret
pop
addr16
fildl
js
adc
dec
push
inc
mov
orl
mov
in
fcomps
push
subb
mov
push
lock
push
fnstsw
adc
dec
adc
leave
das
insb
mov
adc
cmp
mov
sarb
pop
mov
lds
insb
pushf
fcmovnb
dec
push
sbb
pop
lock
xchg
scas
int3
test
adc
jg
dec
adc
or
icebp
pcmpeqd
mov
pop
dec
sub
adc
in
sub
push
popa
les
mov
lods
mov
test
rol
lds
shl
and
push
mov
pop
or
fnsave
sub
pop
cmpsb
fs
das
inc
je
cmp
xor
ja
out
push
xorl
fs
in
test
adc
or
jmp
shll
sub
les
or
insl
inc
jmp
shr
adc
sub
cmp
mov
inc
addb
pusha
jmp
adc
mov
inc
icebp
clc
imul
popa
stc
cmp
mov
lock
add
js
out
push
push
push
das
xchg
repz
andb
js
popf
lock
bound
mov
adc
test
fsubr
ds
lahf
rcl
es
add
mov
or
cmpb
sbb
pop
xor
cmp
inc
dec
pop
ret
scas
and
jno
fldcw
movsl
jmp
sub
add
mov
inc
jg
leave
cli
repz
pop
cmp
shlb
jmp
cltd
xchg
or
add
inc
mov
jno
ja
jns
xor
repz
dec
sub
aam
nop
loope
push
jge
mov
leave
mov
rolb
jnp
pop
gs
adc
jb
mov
fstl
mov
and
shlb
imull
cwtl
inc
and
xchg
stos
jmp
mov
mov
xchg
stc
icebp
or
insb
sbb
mov
jnp,pt
xchg
mov
sarb
jle
dec
jl
lock
mov
or
push
jg
xor
push
xchg
add
push
js
aaa
or
stos
jg
mov
inc
add
mov
sub
dec
subl
fidivrs
xor
sub
icebp
in
ds
outsl
test
mov
pop
pop
scas
dec
mov
mov
in
daa
lret
les
or
lret
adc
fsubrs
and
ds
mov
jle
push
adc
cwtl
jp
loopne
sub
shrl
mov
mov
pop
xchg
fmull
loop
loopnew
ret
movsl
and
std
or
mov
xchg
add
add
push
jae
clc
faddp
ret
dec
dec
mov
mov
sbbb
xchg
sub
cmpsb
aas
out
xchg
mov
jae
fists
jmp
movsl
aas
cmp
repz
and
js
cli
adc
addr16
data16
jbe
jbe
pop
aaa
pop
dec
mov
push
xchg
ss
ret
daa
sub
pop
xor
push
iret
mov
pop
ss
mov
or
push
mov
push
cmpsb
xchg
adc
or
dec
ret
andb
ficompl
mov
dec
jo
insl
aad
push
cld
push
fstl
mov
and
add
in
fisttpl
add
std
lock
nop
adc
lods
or
rcr
xor
or
scas
outsl
test
arpl
repnz
mov
fnstsw
push
jb
mov
mov
jbe
loop
mov
data16
ss
cwtl
mov
loope
fnstsw
sti
jno
clc
sbb
jp
lds
mov
call
cmp
and
scas
adc
or
or
lcall
xor
js
scas
inc
fwait
jbe
js
push
sbb
lret
mov
jne
pop
mov
in
cli
es
xlat
test
sbb
sbb
sar
push
add
xchg
xchg
add
inc
std
iret
jo
pop
add
mov
add
mov
jg
pop
orl
pop
cmp
sub
xchg
ss
add
or
inc
lahf
mov
inc
or
lods
xchg
sub
lods
cs
movsl
popa
xchg
inc
ljmp
mov
mov
jnp
push
ds
fwait
js
add
mov
push
adc
insl
sbb
push
pop
xchg
jno
insl
or
mov
mov
cmp
sbb
mov
and
push
xorl
ljmp
ret
sub
and
in
sbb
xchg
adc
cli
in
scas
push
adc
pop
sub
push
aam
fmuls
or
xchg
mov
jp
xor
clc
in
fdivs
in
add
push
rolb
xchg
aam
pusha
sbbl
rorl
ljmp
inc
inc
sti
xor
cmc
jle
mov
add
inc
loop
movsl
adcl
mov
bound
insb
clc
mov
jge
scas
call
push
in
jle
mov
into
clc
cmp
sarl
adc
adc
jo
aas
cmpsl
xor
js
inc
mov
ret
into
pusha
pop
mov
jl
in
loope
push
adc
stos
pop
std
mov
and
clc
pop
loop
sbb
and
cmp
loopne
outsl
pop
aam
mov
fisttps
bound
adc
or
in
mov
aas
outsl
xchg
xchg
mov
sub
fistps
jmp
std
loope
shlb
ljmp
rcr
or
dec
fdivr
add
jl
lock
leave
mov
inc
mov
jle
andb
mov
lock
lahf
jno
fimuls
aam
mov
cmp
hlt
push
mov
test
lcall
xor
cmp
push
mov
test
or
in
ret
dec
pushf
xchg
mulb
xchg
add
cmp
push
lds
pop
sbb
xchg
leave
ds
rorl
mulb
cmpsb
jecxz
and
sbb
std
mul
outsl
cli
adc
and
dec
push
fbld
xchg
cmc
ja
jl
aas
lea
jo
inc
lods
es
pop
mov
pop
aad
sub
mov
cwtl
test
pop
loop
cmc
lea
lock
push
mov
sbb
clc
das
or
lods
inc
dec
push
mov
push
in
mov
addb
divb
pop
or
cli
rcr
and
adc
adc
inc
rclb
scas
add
fucom
enter
add
dec
cmp
in
xchg
push
xor
inc
pop
sbb
inc
jno
push
fsubl
xor
dec
inc
aaa
fistpll
mov
decl
add
pop
sti
js
jo
sahf
ficompl
jb
rcll
in
rorl
lea
push
aaa
lock
jo
mov
xor
clc
and
or
clc
cltd
add
xchg
int3
inc
aas
ja
mov
cmpl
sub
inc
xor
fldl
mov
repz
inc
push
jne
add
inc
add
add
cld
aad
repz
loopne
jecxz
xchg
xchg
out
or
dec
outsl
xor
inc
aam
jns
lret
add
mov
jmp
jbe
push
xor
jge
mov
call
cmp
ffreep
gs
mov
sti
push
mov
jl
sti
cld
mov
push
fadds
movsb
sbb
int
sub
mov
nop
inc
jl
mov
pop
cmp
xor
call
sti
mov
mov
fisubrs
out
jle
lret
call
jecxz
mov
fistl
or
cld
in
fwait
insl
sbb
cltd
push
xchg
push
dec
lods
lea
enter
pop
cld
pop
out
mov
mov
mov
rorb
roll
jl
and
jg
loop
ds
mov
xchg
out
ss
dec
dec
inc
ficoms
daa
pop
movsb
rcrb
and
add
push
orb
jl
jns
mov
outsb
popa
push
dec
add
and
ss
push
mov
mov
mov
aad
aam
stos
add
pop
sti
addr16
inc
add
jo
out
adc
stos
add
mov
pop
jmp
clc
mov
dec
dec
sti
into
cwtl
mov
dec
push
sub
fsubrs
fs
test
inc
pop
and
pop
insl
fiaddl
jecxz
enter
pop
fidivrl
or
sarl
adc
or
or
stc
ret
xchg
jne
inc
movsb
sbb
sar
adc
cmc
cmpsb
mov
and
decb
sub
imul
ljmp
adc
jge
in
repnz
test
xchg
sub
cltd
dec
adc
rcrl
or
shr
shlb
fucom
scas
mov
data16
dec
jge
or
popf
jp
pop
adc
daa
ret
sbb
mov
mov
ljmp
mov
cltd
push
in
ret
mov
pushf
mov
cmc
test
add
pop
rcll
add
add
in
and
mov
shl
or
iret
cmp
push
adc
push
mov
mov
rcll
inc
in
sahf
cmp
js
sbb
fadds
data16
add
ljmp
jl
ret
and
push
outsb
addb
mov
xchg
scas
jno
aas
jp
xlat
pop
sub
ret
data16
dec
adc
aaa
clc
orl
jl
cwtl
cli
sbb
sbb
shll
mov
and
fstpl
add
jge
sbbb
in
push
pop
mov
enter
and
mov
jb
push
addr16
xor
fstp
dec
xadd
dec
sbb
inc
cmpsb
test
pop
imul
insl
sub
scas
and
inc
inc
xchg
mov
out
fwait
lea
add
jno
pop
lret
in
push
mov
movsb
sbb
jle
mov
add
sbbl
mov
dec
icebp
loop
mov
ljmp
cmp
test
in
mov
loopne
lret
mov
es
push
inc
push
inc
mov
sbb
cmc
mov
subb
pusha
cwtl
push
fists
cld
loopne
or
sbb
add
sahf
sbb
jb
js
xor
push
sub
dec
sub
cmpsb
movq
rolb
repz
pop
mov
cmpl
mov
int
aaa
mov
xor
push
ficomps
rclb
rol
inc
adc
jbe
or
jbe
xor
shrb
out
and
jbe
sti
in
or
pusha
inc
pop
lahf
xchg
fidivs
inc
mov
sub
loopne
dec
jg
xchg
leave
mov
mov
cmpsl
fldl
mov
jl
aaa
rorb
jecxz
rorb
add
pop
sbb
inc
mov
pop
outsb
das
adc
mov
jl
xchg
outsl
jb
xchg
into
aad
jp
add
stc
enter
add
fwait
sub
sahf
pop
ljmp
stc
inc
jae
in
stos
mov
push
loop
cmc
pop
js
fwait
das
ja
xor
int3
mov
jmp
pop
jnp
jmp
cli
inc
repz
xlat
hlt
inc
adc
pop
and
pop
mov
cwtl
xchg
repz
clc
cmc
sti
inc
add
cmp
cmp
shll
sub
std
add
ds
ds
jecxz
inc
jno
fwait
fwait
jmp
js
sbb
push
xchg
cmp
lods
xor
rcr
test
stos
nop
movsl
adc
adc
cli
dec
xor
jbe
jl
mov
les
jle
pop
add
or
or
sub
mov
inc
xlat
sbb
mov
jp
mov
jbe
pop
mov
inc
xchg
push
mov
pop
inc
sti
lret
jecxz
ret
in
ss
jge
adc
loope
jo
popa
xor
mov
pusha
push
cmp
cmp
scas
call
jbe
icebp
or
mov
and
add
int
notb
and
lret
cmp
mov
add
inc
lahf
push
dec
aas
dec
pop
sub
sub
cli
pop
int3
fldenv
mov
mov
xor
mov
out
sub
imul
add
std
add
push
mov
jo
test
lea
in
mov
cmp
loopne
leave
adc
std
or
pop
cwtl
jl
sahf
cmp
in
mov
pop
mov
or
sbb
or
cwtl
lahf
test
ds
mov
imul
out
sbb
push
int
push
gs
stc
inc
jg
out
xchg
adc
in
mov
or
mov
pop
lret
ljmp
ret
mov
add
jb
aas
test
arpl
adc
jge
fdivrl
cmp
add
ret
clc
imul
fcoml
xor
les
sbb
pop
or
mov
mov
mov
jnp
sbb
or
out
fstl
or
sahf
fidivs
fistpl
cld
ljmp
loop
dec
fwait
pop
daa
pop
mov
out
dec
xchg
cmp
add
das
mov
inc
test
or
outsb
outsl
mov
sbb
lods
ds
fimull
cltd
jl
les
and
add
je
ds
pushl
mov
or
mov
gs
xor
adc
lock
insb
adc
in
lahf
andl
add
push
jb
je
inc
imul
outsb
insl
popa
jo
imul
jns
sbb
imul
mov
or
push
gs
push
jb
popa
fs
inc
outsl
inc
jns
es
je
popa
bound
jae
adc
fs
mov
jae
push
adc
aaa
or
fwait
pop
inc
outsl
arpl
jae
fs
push
outsb
dec
pop
dec
jo
outsb
sub
insb
je
inc
jns
sub
push
imul
dec
outsl
arpl
inc
gs
addb
jbe
insl
dec
xorl
outsb
xor
pop
imul
jnp
gs
js
aaa
outsb
addr16
arpl
sub
xchg
adc
fsubr
divb
inc
imul
push
adc
mov
xchg
aas
push
or
inc
outsl
jne
jns
shll
inc
jae
cld
ret
push
dec
outsb
outsw
cmpxchg
jge
popa
fimull
inc
adc
cwtl
loope
fs
cmovge
push
gs
mov
fs
add
adc
insl
and
sub
xchg
out
xchg
jne
jb
pusha
outsb
pop
pop
mov
adc
adc
jo
or
and
mov
xlat
divb
adc
mov
sbb
inc
push
pop
mov
or
add
gs
ss
and
mov
subb
jbe
mov
jbe
push
popa
scas
jne
dec
mov
fnsave
jno
mov
test
arpl
mov
inc
outsb
jae
popa
push
push
fildll
out
jo
dec
jae
mov
sahf
shll
and
sub
ret
or
push
sti
pop
xor
jne
push
or
mov
fistpl
inc
sub
jb
fs
mov
divb
inc
fsubrl
sbb
mov
outsb
mov
sub
aam
fs
lods
rclb
lcall
push
das
pop
cmp
ja
arpl
inc
mov
rol
iret
sub
imul
pop
sahf
aad
cli
adc
or
lcall
repnz
int3
mov
add
add
add
sub
mov
jmp
daa
xchg
pop
adc
and
and
add
and
or
fwait
je
icebp
or
push
sub
pop
mov
clc
sarb
das
mov
cmp
push
clc
mov
pop
enter
fs
je
jns
nop
insb
fld
add
gs
pushf
sub
in
xchg
push
sti
add
add
xor
cs
js
daa
push
mov
cmp
fldt
pusha
cs
and
flds
add
rcrb
add
push
dec
or
xorl
daa
inc
inc
ja
jmp
lock
dec
ret
test
movsl
ja
push
movsb
xchg
testl
ja
sub
aas
add
add
or
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
fcoms
adc
scas
jp
or
ss
aaa
shl
or
and
add
mov
shll
notl
test
mov
sub
flds
add
iret
push
push
loope
popa
movsb
push
sbb
pusha
mov
mov
stos
call
aaa
xchg
stos
push
inc
jge
mov
push
cmp
jmp
xchg
dec
lods
and
cmp
cltd
and
daa
jle
mov
sbb
mov
xchg
add
mov
leave
pop
sbb
mov
push
xchg
sbb
push
cmc
pop
push
lods
xorl
lahf
jne
pop
pop
push
add
pop
xor
popa
hlt
xchg
enter
lea
outsl
push
pop
andl
lea
mov
addr16
fiaddl
jo
icebp
int
jae
gs
jns
dec
sbb
cmp
and
or
pop
push
jns
out
mov
pxor
adc
mov
mov
fiadds
dec
lock
sub
test
xchg
mov
fwait
pop
sbb
mov
jne
push
gs
aam
int
add
orl
pop
inc
mov
mov
repnz
dec
pop
lahf
and
scas
mov
or
push
mov
aaa
add
in
cwtl
add
cmpsb
and
add
push
int3
test
pop
xchg
rol
mov
or
rcrb
arpl
and
dec
jge
sub
nop
iret
push
sub
and
pop
add
jl
or
xor
pop
scas
mov
xchg
mov
dec
std
xchg
sub
aad
sbb
bnd
fimull
mov
pop
das
adcb
mov
dec
xlat
pop
scas
mov
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
inc
add
and
add
pop
adc
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
imul
add
add
add
push
outsl
add
imul
add
add
push
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
imul
add
add
push
insb
add
add
and
dec
add
push
jb
popa
add
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
and
add
add
and
xor
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
bound
add
imul
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
imul
add
add
add
push
outsl
add
imul
add
and
xor
cmp
cmp
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
imul
add
add
js
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
add
imul
add
add
push
insb
add
add
and
dec
add
push
jb
popa
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
and
add
add
and
xor
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
inc
add
mov
add
add
inc
add
aam
add
hlt
inc
add
add
adc
and
xor
ds
add
add
add
dec
inc
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
insl
gs
arpl
