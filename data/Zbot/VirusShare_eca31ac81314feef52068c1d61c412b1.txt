decl
les
mov
sub
and
and
ss
xor
mov
mov
inc
push
in
decl
insl
loope
xchg
test
stos
sub
enter
mov
stos
arpl
lret
iret
incl
add
jno
js
mov
outsb
lock
inc
jge
sub
or
xchg
push
lret
pushl
lret
adc
mov
shl
fisubrs
in
mov
pusha
or
inc
lret
cmpsb
mov
stos
sub
mov
ljmp
jmp
inc
pop
in
popa
xlat
mov
arpl
sti
cmp
cmp
insb
addr16
push
cltd
fadds
mov
js
mov
pop
sbb
mov
mov
pop
and
push
in
jmp
inc
fcmovbe
add
aad
and
cmp
mov
fdivrs
ds
shrb
inc
jge
lahf
sub
mov
into
add
jl
add
adc
pushl
inc
xor
scas
sbb
aaa
mov
in
push
icebp
mov
in
mov
add
addr16
decl
xor
jmp
mov
mov
adc
ret
cmp
dec
mov
pushl
sub
stos
dec
ss
add
mov
inc
loop
pop
xchg
scas
imul
fisubrs
push
jg
decl
sub
push
dec
popa
xchg
dec
mov
jo
and
push
cltd
push
sbb
lcall
push
add
loop
push
cli
aas
xchg
jbe
xchg
fmuls
sti
hlt
inc
movsb
push
cmc
xchg
lcall
cmp
jmp
xchg
cmpsb
enter
test
push
mov
sbb
add
jle
shlb
mov
push
mov
add
pop
rclb
iret
daa
pop
add
and
daa
es
addr16
and
into
jg
jns
sub
jle
sbb
dec
ljmp
call
mov
mov
in
nop
xchg
dec
inc
es
push
inc
mov
dec
or
inc
in
push
sbb
jle
test
pop
lods
push
stos
adc
jns
xor
insl
push
pop
sub
test
mov
call
gs
inc
insb
mov
sub
into
cwtl
stos
je
loope
fldl
adc
ljmp
decl
imul
fwait
cli
push
mov
jmp
int3
ljmp
lret
mov
jg
insb
cs
pop
in
sub
jno
inc
icebp
push
lods
push
dec
push
mov
mov
cmp
imul
sahf
cmp
ja
enter
cmp
nop
adc
call
mov
xchg
lock
insb
decb
xor
rcll
pop
je
sbb
xchg
mov
mov
push
sub
add
ret
stos
jb
cmp
adc
fcmovb
inc
adc
mov
sbb
pop
sbb
cld
loopne
mov
rcrb
or
jecxz
cwtl
push
sbbl
jb
incl
pop
xchg
int
xor
dec
cmp
mov
dec
mov
ds
clc
ja
cli
mov
cmp
mov
or
lcall
xchg
aad
push
sarb
inc
cmpsb
push
push
mov
or
loop
enter
mov
decl
cmpsl
dec
testl
cmpsl
icebp
popf
fimull
lock
pop
vpcmpgtb
call
adc
jb
mov
ljmp
mov
and
ljmp
push
xchg
mov
xor
mov
das
fmull
push
mov
dec
cmpsl
mov
pushl
mov
adc
mov
xchg
inc
iret
movsb
icebp
push
test
xlat
cmp
clc
cmp
jl
jle
es
and
es
mov
mov
inc
cmp
pop
add
decl
or
stos
dec
loope
and
insl
sbb
stos
hlt
adc
xchg
incl
adc
mov
loope
lods
outsl
scas
fimuls
int
clc
xchg
cmp
lea
pop
mov
jb
ret
ljmp
rclb
sub
and
xor
inc
insl
push
cs
jmp
sbb
movsb
xchg
mov
incl
and
sub
scas
int3
int
outsb
xlat
enter
jo
enter
ljmp
dec
jl
sub
fs
push
inc
sbb
mov
shrb
lods
mov
inc
sub
mov
insl
fimuls
cld
stos
gs
data16
shlb
rcrb
js
mov
jo
mov
lcall
push
idivb
andl
jnp
jl
cmovbe
lret
xor
mov
loopne
rcrl
nop
enter
stc
push
icebp
in
mov
pop
rol
xchg
mov
aaa
cld
decl
hlt
push
cltd
in
mov
cmp
and
adc
xchg
incl
test
cmp
and
sarl
mov
jle
iret
jg
rcrl
arpl
pop
sbb
sub
cmp
ret
repz
clc
daa
xchg
or
or
fildl
in
jecxz
gs
ret
out
pop
lds
dec
push
xor
mov
in
lret
dec
shrl
jbe
pop
inc
sbb
xor
ljmp
jecxz
mov
sub
sbb
mov
in
mov
xor
cmp
jb
addl
and
pop
mov
jmp
lret
push
xlat
xor
loopne
scas
out
sbb
aaa
mov
push
arpl
cmp
fnstsw
ja
je
mov
lea
dec
dec
imul
push
loopne
fprem
jg
push
xor
or
add
dec
or
shr
insl
out
mov
push
fdiv
pop
scas
ret
pop
jmp
fists
fs
scas
in
mov
movsb
insb
xchg
mov
andb
stos
das
and
rcl
dec
mov
cmp
mov
pop
pop
or
jmp
mov
mov
dec
sub
and
lods
add
adc
dec
xor
mov
dec
and
pop
xor
insb
sbb
cs
adc
popa
nop
xrelease
clc
cmpsl
pop
sub
and
sbb
aad
cld
jae
jo
lcall
icebp
sbb
mov
dec
movsl
test
xchg
loope
push
insb
mov
push
mov
and
jecxz
lock
dec
mov
call
lret
outsl
arpl
push
pop
lods
dec
movsl
popf
and
rol
cmp
mov
dec
sbb
pop
dec
dec
mov
ret
push
mov
gs
mov
mov
xchg
sub
cmpsl
xor
fildll
xor
and
test
inc
adc
insl
mov
lcall
dec
mov
fwait
pop
in
aas
in
dec
test
ljmp
test
push
iret
in
push
mov
adc
arpl
jge
jge
cwtl
mov
mov
jge
lcall
fucom
push
fistps
rcrb
ja
add
dec
iret
jle
pop
push
ud0
decl
loope
add
inc
adc
pusha
aad
fcompl
adc
cltd
or
aam
push
and
or
cmp
pusha
sarl
ret
addr16
mov
inc
pop
pushl
jne
cmp
pop
mov
jge
mov
pushf
fldcw
faddl
cmp
jmp
mov
fs
ret
jae
push
scas
imul
pop
push
jp
cli
xchg
ss
add
jmp
inc
push
xchg
mov
jmp
pop
dec
jle
in
fildll
lahf
xchg
test
pop
popa
jg
pop
xorl
mov
insl
or
int3
aam
mov
jo
and
incl
fwait
and
imul
dec
in
lret
or
jnp
scas
cmp
push
adc
pop
shrb
xchg
decl
subb
aas
ficoml
ja
ret
hlt
fildl
ds
cmc
dec
loopne
add
cmp
shll
pushf
adc
scas
sub
ret
inc
push
sbb
jl
mov
mov
clc
insb
shlb
mov
fsubs
scas
sub
jg
shrb
cmpsb
jb
dec
sbb
imul
mov
dec
ss
mov
xchg
pop
lcall
mov
scas
add
sub
adc
call
ret
mov
lret
nop
ss
ljmp
ljmp
dec
or
aas
loope
add
jns
jo
mov
push
inc
popf
insl
sub
xchg
ljmp
adc
sub
loopne
sti
dec
sbb
aas
adc
push
lcall
inc
scas
test
les
data16
pop
mov
jl
pop
fmulp
loop
scas
xchg
and
ret
call
sbb
xchg
sbb
inc
shl
mov
mov
js
sahf
arpl
test
pop
inc
lcall
pop
scas
popf
cmc
adcb
cmc
shlb
out
aam
jge
lods
stc
sbb
je
vmovaps
pop
cli
dec
imul
jle
ljmp
or
lock
add
imul
lea
aaa
stos
hlt
push
int3
cmp
push
pop
pop
sbb
jmp
int3
xchg
pop
cmpl
loop
ret
mov
mov
push
out
inc
lret
ljmp
mov
cmp
lret
lods
push
js
inc
mov
int3
inc
mov
push
mov
les
shl
sar
push
sbb
inc
je
es
pop
icebp
push
andl
mov
mov
dec
decl
mov
xchg
pop
fiaddl
subb
ds
pop
xchg
in
ja
inc
std
jmp
xlat
xchg
pushl
in
stos
leave
mov
cmpsl
les
fisttpl
fisttpl
push
jle
pushl
leave
pop
repnz
inc
cld
iret
cs
mov
lahf
pop
divb
cld
cli
jmp
ror
loop
adc
push
mov
xor
lock
sub
call
aam
lock
cli
inc
push
pop
add
mov
fs
mov
addr16
fsts
xchg
test
lcall
clc
pop
sbb
mov
dec
add
ficomps
int3
inc
movsl
sbb
decl
jo
inc
in
sbb
push
jno
jo
lahf
cmc
scas
pop
lods
outsb
es
sti
adc
jp
mov
stc
loopne
call
dec
cld
enter
jg
rcll
jmp
lcall
mov
mov
scas
cmp
adc
sbb
mov
sbb
aaa
andb
jno
ja
call
sbb
es
insb
sub
xor
lods
jle
cmc
fwait
repz
ss
push
lcall
in
adc
lret
int3
mov
mov
popf
inc
std
movsb
fistl
in
pop
out
cmp
incl
mov
or
add
push
imul
call
sub
flds
out
sub
or
ss
leave
mov
enter
push
sbb
sub
out
push
cld
pop
aam
sarl
push
ja
in
adc
cld
mov
xchg
pop
mov
outsb
dec
jecxz
mov
xchg
fwait
dec
cmp
or
ljmp
pop
adc
xchg
xorl
cmp
insl
imul
int
push
pop
add
add
xlat
sahf
jle
add
lahf
jle
cmp
mov
cwtl
jmp
inc
stc
pop
aad
inc
fstl
je
pushf
ret
insb
xchg
mov
outsb
fsubr
dec
jno
sar
pushl
lret
mov
scas
xor
lods
mov
xor
fnstcw
mov
out
and
fisttpl
inc
cmp
lret
aad
or
sbb
pop
cltd
je
js
out
jnp
or
jb
push
push
sub
rcrb
pop
rorb
ds
and
dec
push
xor
ljmp
es
jecxz
mov
sbb
mov
mov
xchg
sbb
cmpsb
push
mov
mov
mov
icebp
and
movsl
es
sub
and
arpl
xor
push
lcall
push
add
in
out
xchg
sarb
mov
pop
ret
mov
push
rclb
loopne
jecxz
pushl
cmp
mov
mov
adcl
adc
lahf
pop
cmp
insb
out
push
adc
fwait
stos
andl
dec
lcall
mov
call
xchg
ljmp
sbbl
adc
dec
enter
lcall
push
inc
dec
mov
or
rolb
push
inc
mov
xor
popa
or
incl
orb
and
jnp
pop
leave
test
decl
cmpb
out
fisubrl
lret
movsb
es
daa
cmpl
cwtl
dec
incl
inc
aad
fstpt
push
aaa
mov
cmpsb
or
popa
movsl
mov
sbb
mov
lcall
ss
aam
pusha
mov
test
int
xchg
mov
pushl
cmp
jecxz
loopne
push
loope
test
int3
pop
dec
mov
dec
push
insb
mov
lcall
push
jne
out
push
das
cmpsb
gs
adc
or
aam
or
ljmp
add
pop
inc
add
sub
insb
out
les
test
ret
fmuls
pop
mov
xlat
stc
fstps
dec
loop
sub
jmp
iret
int3
imul
leave
mov
in
ljmp
out
cld
lcall
and
sbb
cli
adc
xlat
push
mov
pusha
pop
fs
loopne
data16
pushl
pop
lret
mov
inc
sub
cltd
ljmp
mov
cld
or
mov
movsb
sub
and
add
or
xor
je
call
loopne
jmp
cmp
pop
and
cmp
test
les
cmp
incl
pushf
mov
push
loope
pusha
cmp
fsubs
scas
loope
test
mov
xchg
sub
call
push
mov
bnd
dec
jo
pop
inc
lea
jle
int
ds
pop
xor
aas
sti
jmp
sbb
mov
or
mov
adc
sub
ss
mov
or
inc
mov
call
inc
outsb
movb
adc
daa
loop
cld
jp
xor
movsb
sbbb
jl
pushl
or
and
adc
sub
or
xor
jle
xorl
pop
imul
aaa
pop
cmp
pop
push
cmp
mov
imul
xor
ljmp
jbe
cltd
and
push
xchg
jne
cmpsb
stc
adc
lcall
mov
incl
stos
jo
aaa
inc
subb
call
push
xor
and
mov
add
inc
call
or
cmp
clc
fbstp
lret
lock
jnp
jnp
pop
pop
inc
sub
mov
add
stos
sub
push
pop
pop
cmc
fidivrl
aad
movsl
insl
push
imul
xor
aad
push
out
and
adc
mov
in
cli
xor
sub
push
jp
int
xor
sbb
pop
mov
fwait
inc
xor
outsl
aam
jg
incl
imul
lret
sbb
dec
xor
pop
imul
stc
test
jno
flds
xchg
dec
mov
je
data16
jnp
cmp
add
dec
fists
xor
mov
fistpll
push
fs
dec
cld
std
fists
mov
call
cld
incl
outsl
icebp
daa
ljmp
and
ds
mov
push
into
jo
scas
cli
dec
xor
repz
fmulp
loope
fstpl
notl
dec
inc
cld
pushl
sub
mov
xor
stos
int
xchg
aas
mov
pop
cltd
or
fcomip
incl
inc
mov
pushf
cmp
push
adc
mov
cmp
call
mov
xchg
jg
mov
xchg
mov
xchg
sahf
add
sbb
jno
ljmp
jne
add
dec
aas
jbe
out
insb
div
mov
jecxz
push
lret
lds
call
int
outsb
cmpsl
sbb
stos
xchg
dec
push
cmpsb
lret
out
push
pop
movsl
lea
mov
aaa
xchg
test
cmpsb
push
clc
and
test
es
jb
lods
in
dec
das
loop
lcall
jp
fwait
jmp
inc
push
test
sbb
jge
push
data16
ljmp
cli
sbb
xchg
lds
dec
lcall
outsl
or
mov
incl
into
nopl
vmovlhps
repz
loope
cmpsb
cld
gs
push
sbbb
push
ss
inc
lret
add
and
cmpsb
cmovno
cmpsl
sbbb
xor
fstpl
dec
insb
sub
inc
or
xchg
dec
addb
xor
and
fiaddl
jmp
push
fmull
popf
sbb
outsl
fnstsw
cmp
call
mov
add
ljmp
jo
jnp
lahf
lcall
pop
push
in
or
iret
incl
mov
fcmove
push
in
cmp
inc
fbstp
or
jmp
adc
adc
fistpll
or
and
or
push
in
inc
iretw
mov
incl
sbb
cmp
mov
xor
sahf
dec
aad
rcl
sbb
jle
mov
stos
aas
cld
incl
icebp
or
lcall
xor
add
adc
cmp
sbb
daa
sbb
mov
xor
andl
push
dec
pop
fwait
sbb
scas
pop
dec
and
aad
out
ljmp
mov
jl
decl
jbe
movsb
cld
xchg
outsl
les
mov
mov
mov
mov
incl
sbb
adc
int
movsb
mov
dec
add
mov
lods
out
filds
lret
loope
loope
sbb
push
jp
or
jl
xchg
ret
jns
pop
adc
mov
sub
shll
lahf
mov
mov
pop
test
mov
incl
pop
push
xor
into
dec
mov
jmp
scas
xor
sahf
ljmp
push
add
pop
cli
out
ds
sbb
pop
in
leave
adc
push
xor
push
mov
mov
jg
aam
enter
xor
les
xchg
dec
stc
push
mov
cmp
insb
xchg
rolb
add
add
shrl
out
out
inc
xchg
xchg
cmpsb
pushl
mov
mov
jne
xlat
insb
cmp
insb
dec
aad
fisttpl
rol
lock
jp
incb
push
xchg
pop
inc
mov
ja
mov
test
jnp
push
pop
sub
mov
repnz
loope
or
jecxz
insb
xchg
cmp
mov
jg
es
popf
imul
test
add
lods
inc
mov
mov
into
loop
inc
insl
lods
call
dec
mov
adcl
stc
rcll
pop
pusha
inc
mov
xchg
ljmp
push
arpl
mov
in
push
lea
or
hlt
add
push
insl
fsub
rcrb
es
sub
lcall
mov
jmp
fs
shll
inc
sar
decl
aad
jp
sbb
cmp
jmp
outsb
inc
bound
stc
pop
ret
sti
loope
std
stc
add
nop
cli
lods
push
mov
shlb
loope
rcrl
mov
bnd
mov
lahf
call
push
sub
ss
es
sub
imul
push
push
das
mov
sbb
cltd
jecxz
fildll
fstl
jns
mov
aad
rcrl
mov
jbe
insl
pushf
jg
incl
cwtl
lea
sbb
jnp
xor
aam
or
dec
or
add
or
pop
xchg
fs
jp
and
jg
out
loopne
je
lds
or
mov
jl
out
aaa
adc
cli
xor
sub
fcomip
decl
hlt
cmp
and
or
push
cld
push
cmp
in
into
jmp
xorl
xchg
pop
cli
rol
or
sub
xor
sarb
cmp
cmpsl
and
pop
in
cmp
lret
mov
sahf
mov
call
cmp
mov
mov
call
sub
xchg
test
adc
out
cmp
decl
or
push
xor
mov
sbb
insl
jg
cli
or
mov
loope
cltd
jnp
rclb
insb
push
pop
inc
fs
insl
dec
gs
test
push
add
ljmp
mov
ret
mov
pop
mov
sbb
in
inc
mov
mov
ljmp
js
xchg
push
pop
mov
sub
xchg
out
cltd
jae
jae
cmc
adc
imul
mov
dec
sarl
dec
xor
sbbl
in
ss
insl
sarb
jg
fisubrs
mov
inc
pop
mov
std
mov
popf
inc
movsl
mov
push
lods
daa
fdivr
ljmp
mov
test
and
lcall
push
mov
incl
insl
mov
and
cmp
push
in
sub
xchg
mov
ljmp
inc
dec
mov
divl
cmpsl
mov
fcoml
aaa
les
sub
test
lcall
dec
push
jmp
dec
mov
rolb
xchg
inc
inc
cmpsb
and
ficoml
jmp
in
jnp
test
cmp
inc
hlt
xchg
jae
inc
cmp
add
dec
and
jmp
jecxz
sbb
dec
call
adcb
scas
mov
mov
xor
push
jl
or
push
lret
jg
int3
fnstsw
test
shll
xlat
loop
and
sbbb
mov
mov
adc
jg
scas
push
mov
insb
mov
pop
sti
insl
mov
and
adc
xor
ss
pushl
pop
add
ret
mov
insb
ret
mov
das
arpl
or
dec
mov
sarb
call
adc
fxtract
mov
mov
rcr
jns
pop
popa
mov
push
popf
xchg
jmp
xchg
xchg
inc
je
adc
shl
or
sub
cmc
pop
rcrl
imul
mov
loope
out
mov
push
popf
mov
enter
push
and
fisttps
jmp
out
pop
loop
pop
inc
jb
shlb
jmp
inc
inc
xchg
xor
incb
cli
incl
ret
lds
add
push
mov
xorb
pushl
adc
push
xchg
fnstenv
pop
push
or
aas
push
sbb
mov
sub
mov
incl
inc
jl
das
push
mov
pusha
add
stos
movsl
inc
push
push
add
dec
mov
jg
mov
jecxz
sbb
xor
push
aas
xor
outsb
ffreep
insl
or
adc
loope
loope
movl
aam
into
stc
inc
mov
loop
push
push
ljmp
xchg
and
fmull
ja
push
daa
or
lods
popf
jmp
in
jmp
push
push
xlat
mov
out
push
mov
fcoml
mov
or
mov
test
sti
push
mov
jo
outsb
push
pop
cmc
adc
cli
mov
dec
insl
in
xchg
repnz
xchg
mov
loop
je
mov
sbb
jmp
outsl
movsl
cmpl
test
xlat
cmpsb
jmp
adc
addl
incl
repnz
dec
jp
or
in
loope
rorl
add
mov
sbb
dec
aas
lcall
outsb
and
cmp
jae
mov
xchg
cld
fists
lock
inc
imul
lcall
jg
in
and
lcall
sub
inc
outsl
push
test
lcall
push
pop
cld
cmp
dec
inc
lods
gs
lods
das
jne
filds
sub
hlt
in
aam
pop
inc
incl
jnp
adc
roll
add
icebp
lret
das
pop
cld
push
and
jmp
jecxz
add
iret
mov
mov
outsb
mov
jae
mov
ljmp
sbb
lea
lret
add
xchg
shlb
clc
in
xor
mov
jo
or
mov
stc
cmp
add
daa
inc
icebp
decl
lods
mov
fucomip
xorl
pusha
aam
pop
icebp
mov
test
mov
out
mov
lds
mov
arpl
das
decl
pusha
inc
in
xchg
inc
or
lea
and
mul
jmp
and
rcl
cmpsl
pop
pusha
fcoms
stos
cmp
loop
icebp
mov
call
adc
adc
mulb
cs
aad
xor
sar
lcall
push
cmp
jne
fidivrs
int3
pop
sti
pushf
popa
test
nop
and
and
mov
mov
lock
scas
sub
push
into
out
out
jp
js
sbb
sbb
jmp
movb
lcall
dec
inc
xchg
push
addl
push
jae
je
out
out
out
aad
decl
pop
ss
sbb
add
stc
push
jl
ljmp
mov
mov
mov
mov
mov
push
fsubrl
cmp
jmp
repz
faddl
stos
mov
add
jb
mov
lock
gs
xchg
cmp
xor
loopne
sub
xor
mov
xor
jecxz
sar
pop
or
mov
sarb
call
loopne
test
les
loope
out
jns
mov
les
jg
fstl
lock
push
mov
mov
sub
cmp
iret
xor
and
and
or
sub
std
stc
add
sbbl
add
or
in
imul
xor
insb
cmp
mov
xor
jmp
sub
pop
aaa
and
cmp
loope
test
les
int
movsl
sarl
les
call
adcl
add
or
cmp
orb
jg
inc
mov
jg
ljmp
ja
inc
fstp
aas
aas
mov
jle
adc
faddp
lret
or
mov
fistpl
inc
jns
testb
out
pop
enter
lcall
and
xorb
popf
repz
mov
xchg
mov
lea
and
movsl
test
cmpsl
pop
insb
rcr
imul
shrl
pushl
xchg
loope,pn
in
mov
test
test
test
fmull
mov
call
fwait
mov
nop
push
pop
test
add
sbb
ret
jbe
and
xchg
jns
sub
call
mov
addl
pop
enter
pop
adc
int3
sub
dec
adc
mov
ljmp
cmp
fiaddl
add
push
add
aas
xchg
lahf
push
mov
in
pop
or
cmc
incl
dec
or
shrb
push
cltd
popf
ret
ljmp
ss
pop
push
push
sub
outsb
mov
jg
mov
cmp
push
push
popa
mov
rcr
mov
jmp
xchg
repz
mov
mov
xlat
fistpll
inc
jle
pushl
lahf
inc
lret
push
into
push
and
adc
or
mov
lea
pushl
pop
nop
jecxz
dec
xor
mov
add
pop
push
fnstenv
loop
mov
fs
sti
loop
lcall
cmp
jno
jl
or
add
adc
mov
mov
incl
xor
out
add
das
outsb
into
leave
inc
or
aas
je
push
mov
mov
ljmp
cmp
sbb
cli
cmp
popa
movsb
loope
xor
jns
dec
out
inc
jb
call
jp
pop
xchg
xlat
cmpsb
xchg
sbb
mov
js
dec
push
push
dec
test
jg
decl
repz
movsb
mov
sti
jecxz
and
fistps
incl
pop
add
in
mov
jb
or
popa
std
outsb
daa
int
jl
sahf
call
data16
ljmp
imul
stos
bound
mull
test
aam
test
add
lcall
add
sti
sbb
insb
imul
dec
xor
pop
out
daa
repz
lret
lcall
jo
int3
bound
cli
int3
out
cmpsb
aam
inc
shlb
test
push
call
test
pop
int3
jbe
cmpsl
jns
mov
fimull
icebp
cwtl
pop
xchg
mov
add
xchg
mov
and
fdivr
pop
pop
test
nop
cmp
sbb
add
lahf
gs
call
rorl
mov
jmp
das
repz
testb
outsb
xchg
pop
fwait
xor
xchg
bound
stos
lcall
inc
mov
cmp
and
fs
cs
jmp
xor
mov
fucomp
jle
fnsave
pop
fwait
addb
addr16
stc
sarb
outsl
data16
shrb
mov
call
fsubrl
idiv
jnp
bound
sbb
inc
jae
sbb
jmp
cmpsb
jbe
popa
not
outsb
enter
call
cmp
xor
jo
sbb
adcl
cmp
adc
pop
mov
repz
in
inc
jo
push
xor
and
ljmp
hlt
lahf
and
cmc
xchg
fistpl
pushl
mov
push
out
mov
mov
xchg
repnz
into
pop
imul
mov
mov
call
movsb
cmp
es
inc
sahf
cmp
inc
pop
leave
lock
call
cli
ficoml
sub
shll
divb
and
sbb
jb
jno
icebp
push
adc
lcall
ja
or
xchg
xor
pop
arpl
shll
cmc
and
cmp
incl
dec
fidivs
inc
testb
sub
movb
shl
cli
ljmp
test
lret
mov
imul
fisttpl
insl
sbb
adc
scas
test
test
mov
inc
xchg
xchg
add
sbb
pop
push
incl
cmp
pop
xchg
cltd
dec
daa
ja
mov
scas
mov
jbe
xchg
cmp
decb
lock
xchg
jo
test
jnp
es
jmp
xchg
xor
and
xor
add
cs
push
push
adc
pop
xor
push
push
jmp
cmpsb
jg
lock
insb
jno
push
fsubr
lret
popa
jae
mov
sahf
mov
pushl
xchg
outsb
loopne
addr16
cli
inc
pop
pop
sub
pop
inc
mov
cltd
push
nop
mov
jg
incl
cmpl
cmc
shlb
dec
shll
dec
imulb
jmp
cmp
notl
mov
in
fstl
pop
sbb
sbb
shll
imul
jg
es
fsubs
mov
adc
xchg
mov
aaa
lcall
sub
out
das
mov
sub
movsl
xchg
jmp
sub
inc
mov
pop
arpl
pop
scas
xchg
cmp
sbb
jo
push
xchg
cmp
ljmp
cmp
and
or
sub
outsl
cmpsb
push
insb
hlt
data16
loopne
imul
or
ljmp
loop
jbe
xor
nop
xchg
lret
repz
pop
jle
fs
popa
inc
xor
shrb
orb
stos
lcall
loopne
ret
dec
stos
les
decl
cs
mov
iret
out
cmpsb
mov
std
into
mov
nop
out
clc
and
test
and
mov
adc
jae
fsub
or
scas
fwait
inc
hlt
mov
call
rcrb
stos
adc
push
repnz
adc
cli
fisttps
shrl
lret
pop
ljmp
dec
neg
jg
mov
jne
mov
test
sub
pop
test
mov
adc
aaa
cmp
xchg
ljmp
outsb
add
sbb
xor
xchg
les
or
adc
decl
rcl
dec
popf
loop
rorl
sub
insl
jmp
add
add
cmc
jmp
fmuls
aaa
mov
test
aam
mov
sbb
sub
sbb
mov
sub
jge
cmp
gs
mov
jl
jbe
dec
mov
and
sub
xor
inc
lcall
adc
je
push
inc
movd
and
sbb
mov
stos
push
jp
ds
stos
pop
cmp
ljmp
rolb
sbb
je
fcompl
je
and
clc
lods
and
fcomip
fbld
push
sub
mov
mov
push
dec
mov
arpl
pop
cmpsl
in
jmp
sub
push
movsl
in
test
pop
or
dec
jne
mov
lret
incl
js
mov
mov
pop
stc
xchg
into
mov
in
mov
cmp
add
out
cli
lods
mov
test
dec
out
inc
sub
test
push
bound
jg
pushl
lahf
cmpsl
jno
xor
lret
dec
cmc
cs
or
movsl
into
mov
jnp
fcoml
adc
push
test
aam
xor
sub
daa
mov
mov
js
cs
fildll
dec
clc
jo
mov
push
push
xchg
es
xchg
fwait
pminub
je
ljmp
push
xor
cs
or
ret
rorl
imul
les
dec
aaa
in
xchg
je
daa
roll
ljmp
lock
mov
mov
cmc
insb
dec
outsl
cltd
int3
ja
xor
jno
je
jmp
xchg
fcmovnbe
adc
mov
add
scas
lods
xchg
cmpsl
or
ljmp
cmpb
stos
sbb
aad
jno
jge
xchg
rolb
ljmp
jl
lods
fistl
adc
lahf
ds
mov
je
gs
ljmp
add
mov
cmp
std
add
aaa
xchg
sar
decl
push
ss
cmp
mov
dec
inc
dec
mov
clc
sahf
lds
rol
add
incl
lds
inc
movsb
push
xchg
cmpsb
das
mov
pop
ja
jbe
dec
push
inc
call
cli
cmp
clc
adc
ret
mov
ret
insl
mov
mov
cld
dec
daa
hlt
jbe
xorl
mov
mov
aam
sub
or
out
stos
sub
sub
and
movsb
paddsb
ljmp
sbb
in
jne
jg
subb
bound
into
push
xor
lret
pop
fdivrl
mov
fcomip
mov
arpl
xor
cld
push
cmp
add
add
inc
inc
adc
and
sbb
cmpsl
sbb
xor
jle
pop
cmpsb
pop
lock
data16
roll
dec
cmc
or
push
divb
cmp
test
pop
cmp
rolb
mov
in
test
fucomi
lahf
rorl
push
mov
subl
dec
mov
push
mov
mov
aaa
decl
jae
mov
loope
cmc
mov
fisttps
or
fcomip
in
and
inc
inc
xor
scas
push
sahf
cltd
push
sbb
test
loop
pushl
pusha
test
cmp
fsubs
cmc
pop
adc
dec
cld
or
dec
adc
fidivl
mov
jmp
ljmp
jecxz
xor
cld
or
dec
pop
xor
andl
das
push
or
pushl
lock
popa
ja
testb
add
xchg
mov
xor
pop
cmp
xchg
shr
mov
push
jno
lcall
dec
dec
dec
mov
dec
push
mov
xchg
mov
mov
xor
sbb
dec
cmp
dec
jb
adc
inc
pop
outsl
sub
ret
mov
ja
inc
pop
jne
cmp
xor
jae
push
dec
pop
xchg
cli
call
clflush
ret
pop
xchg
mov
iret
movsb
shl
mov
ret
popa
and
push
or
ljmp
sbb
mov
cmc
jmp
imul
inc
adc
in
jl
in
outsl
orb
cmpxchg
xor
pop
leave
add
je
dec
call
push
insl
cli
jo
imul
mov
jbe
mov
jo
shrl
adc
test
add
xchg
int
pusha
in
ja
jg
inc
adc
adc
inc
test
je
inc
dec
push
jo
ror
out
mov
or
push
test
adc
clc
sub
loope
pop
outsl
mov
jmp
jbe
ret
aam
sbb
test
and
dec
pop
rorb
jns
stos
repz
cmpsl
fmull
xlat
push
inc
add
lret
push
push
lds
jmp
mov
mov
jmp
cmp
enter
xchg
pop
mov
xchg
aaa
jno
xchg
mov
push
jnp
in
or
fidivl
mov
mov
stos
decl
push
es
sbb
daa
test
adc
in
cmp
mov
lcall
out
push
mov
sbb
sbb
popf
mov
mov
out
lods
or
push
dec
std
lahf
xchg
ljmp
mov
jecxz
ret
mov
pop
aas
scas
mov
pop
jecxz
cwtl
out
mov
dec
gs
pop
adc
in
rorl
daa
addr16
in
mov
ss
push
in
mov
out
mov
xchg
pushf
mov
xor
call
cld
cld
mov
and
insb
xchg
pop
mov
sahf
mov
cmp
decl
repz
fnstsw
mov
cmp
mov
ret
pop
jb
popf
orl
pushf
mov
dec
ret
sti
cmp
in
push
popa
jbe
scas
pop
or
mov
xor
jg
aam
cmpsb
jg
pusha
pop
data16
out
mov
aad
and
dec
pop
jmp
and
and
and
cmpsb
xlat
mov
mov
shlb
push
xchg
call
mov
add
push
fists
jb
pushf
or
dec
jg
mov
mov
les
stos
xchg
dec
out
mov
insb
dec
pop
js
in
pop
or
in
xlat
pusha
jno
test
iret
add
in
out
xor
mov
cmp
push
push
and
fnstcw
jne
push
jne
sbb
lcall
mov
mov
mov
aaa
xor
pusha
xor
sbb
inc
js
mov
adc
and
dec
push
dec
sti
cmp
adc
mov
jp
jmp
cmp
dec
jns
fwait
idivl
std
jl
pushl
adc
or
adc
push
andl
cwtl
loopne
dec
movsl
hlt
and
jae
sbb
pop
pop
jmp
and
mov
call
das
mov
fsubp
inc
mov
inc
jno
stos
mov
pop
dec
sub
rorl
iret
or
mov
sub
pop
add
mov
jp
jbe
and
gs
and
ds
jo
jp
jns
push
push
leave
test
cld
call
mov
pop
lods
sahf
xchg
pop
mov
imul
popf
fdivrp
mov
rorl
sahf
mov
jle
fcmovnbe
das
pop
repnz
cmp
repnz
iret
sub
xor
cmp
repnz
cltd
sbb
roll
rolb
decl
or
stos
call
fistpll
sbb
sbb
bnd
adc
jg
lock
sbbl
dec
mov
movsb
pop
push
stos
xor
jle
lcall
loope
mov
lea
out
imul
mov
sar
in
inc
inc
pop
sub
imul
out
scas
cmp
pop
ljmp
xchg
adcl
inc
jo
xor
lds
jg
jg
cmp
enter
mov
out
and
jb
incl
sbb
jg
sahf
jge
sbb
faddl
pusha
xchg
sbb
jge
pop
xor
movb
rcrl
call
pusha
and
enter
or
or
push
jae
leave
pop
test
jmp
das
into
movsl
mov
aaa
or
arpl
add
mov
int
cmp
jmp
test
mov
les
jmp
or
ret
mov
hlt
imulb
pushl
in
xor
cmc
mov
js
mov
lcall
int
mov
lcall
icebp
sbbb
jp
je
add
push
scas
mov
pop
popa
xor
jns
xor
jb
mov
dec
icebp
and
inc
outsb
test
pop
sarb
cli
call
jbe
cs
popa
jecxz
js
lds
lods
fwait
jbe
stos
sub
rorb
mov
insb
test
mov
lret
popa
and
xchg
sbb
stos
jb
inc
dec
xchg
fs
xor
jmp
jne
sbb
out
rol
das
out
sub
dec
stos
cs
std
or
in
mov
sbb
popf
fwait
nop/reserved
push
sti
es
sti
jg
sub
dec
mov
xor
jmp
inc
bswap
sbb
jmp
pushf
aaa
lock
push
mov
inc
add
add
clc
cwtl
movsb
adc
mov
dec
push
pop
mov
xchg
outsb
rol
das
das
incl
mov
sub
enter
icebp
and
xor
idiv
dec
xor
cmp
sbb
xor
sbb
adc
adc
ja
jmp
xor
inc
dec
lock
movsb
or
mov
adc
frstor
std
inc
cltd
popa
or
adc
fs
lock
cli
pop
lret
sarb
jnp
hlt
mov
jecxz
pushl
mov
sub
jns
ds
push
push
movsl
xchg
cmp
cmp
push
in
mov
daa
shll
movsb
mov
leave
fists
in
jmp
clc
decl
and
dec
mov
lods
pop
imul
loop
xchg
xchg
into
repnz
clc
loopne
mov
or
mov
xor
jb
adc
out
dec
mov
lods
mov
cmp
sbb
add
aaa
pusha
mov
mov
aas
cmp
cli
in
jo
pop
push
test
subb
jecxz
jne
enter
xchg
fs
mov
dec
inc
sbb
pop
mov
push
or
sbb
cmp
push
ret
movsb
ret
cmc
pop
lahf
sub
mov
rcrl
cld
mov
leave
aaa
cwtl
imul
and
jo
ret
int3
pop
add
fs
fisttpl
pushf
mov
repnz
ljmp
add
aaa
rcrb
cld
and
mov
clc
nop
pop
push
adc
cmp
cli
mov
mov
xchg
xchg
mov
sbb
dec
mov
pop
imul
mov
jns
or
mov
pushl
les
mov
mov
and
pop
js
push
mull
mov
insb
mov
sbbb
pop
xor
pop
add
pushf
aaa
imul
xor
ja
sub
imul
jmp
sahf
ljmp
sbb
xor
adcl
add
xor
std
and
xor
js
jg
sarl
cmp
into
rclb
out
mov
mov
or
inc
mov
into
in
pusha
loop
pop
inc
sahf
push
data16
leave
addl
jb
pop
in
and
mov
out
cli
call
sub
mov
shl
cs
pop
ss
adc
sbb
ljmp
jo
inc
jmp
mov
fcoml
movsb
aad
test
push
pushl
ljmp
addr16
xchg
fisubrl
insb
hlt
pusha
fdivl
subl
adc
jb
and
jnp
and
mov
cmp
mov
mov
ret
sub
inc
rorb
or
test
cmpsl
mov
call
jmp
dec
pop
mov
into
adc
mov
lahf
addl
loopne
jmp
jg
lret
push
rcl
incb
ss
xchg
enter
call
das
push
and
xchg
popf
add
fs
ret
rorl
cwtl
loopne
scas
loope
jmp
andb
fmull
shrl
push
cmp
cmp
test
push
jl
lcall
jbe
push
jge
je
push
cmc
clc
outsb
mov
sub
or
xor
push
adc
jbe
pop
jmp
pop
test
cmc
lock
addr16
push
or
cmc
inc
int3
aas
in
test
push
dec
enter
pop
xchg
out
repz
das
xor
adc
dec
jne
insl
push
or
push
add
cltd
mov
movl
clc
jns
jmp
inc
or
pop
std
pushl
dec
pop
jp
test
mov
jns
icebp
mov
ss
decl
push
cwtl
orl
push
push
push
jg
and
jle
and
xor
dec
orb
pushl
les
adc
imul
daa
add
mov
mov
loope
xchg
jp
decl
lds
push
dec
outsb
sarl
mov
test
xor
mov
pop
daa
lock
jmp
xor
xchg
sbb
push
and
push
push
incl
arpl
mov
imul
pop
ljmp
push
mov
jmp
pushl
imul
in
xor
jecxz
and
mov
mov
push
xorb
xor
xchg
sub
dec
push
pop
aas
pop
adc
push
clc
push
sub
ljmp
or
cmp
jl
fldcw
in
xchg
mulb
popf
cltd
nop
call
lcall
aam
and
and
nop
cs
scas
cmp
mov
js
out
sub
lds
jge
sbb
cld
jge
idivb
sbb
out
pushl
jle
pop
aad
ds
in
std
sub
xchg
pop
lcall
ud0
mov
dec
aam
mov
loop
push
pop
jge
jno
out
inc
and
and
mov
jo
or
into
ja
mov
lret
call
fisttpl
cmp
inc
fwait
ja
gs
pop
hlt
int3
andb
test
lret
lds
test
decl
stc
xchg
fidivl
inc
xchg
pop
aad
aaa
ss
push
mov
fcoms
repnz
incl
loope
rcrb
mov
orb
xchg
sub
push
jns
push
fisubl
xchg
jb
xor
inc
pop
dec
mov
sbb
pop
sub
stos
test
das
dec
sar
hlt
ja
and
push
xchg
xor
push
insb
aad
daa
inc
sbb
push
xor
mov
orl
cwtl
dec
mov
fnstenv
jmp
adc
icebp
aam
leave
inc
and
sbb
push
or
dec
and
out
out
pop
in
fildl
loopne
cli
push
dec
dec
push
iret
incl
scas
or
filds
pop
leave
cmpsl
dec
mov
sarb
adc
ljmp
daa
outsl
sub
sbb
or
adc
imul
cmpsb
cwtl
mov
ljmp
mov
sbb
ja
test
xor
inc
pop
int3
addr16
pop
das
cli
popa
jg
xchg
rcrb
mov
fldcw
pop
xor
negl
ss
mov
xor
aad
jo
mov
shlb
gs
cltd
push
mov
sbb
inc
nop
or
incl
cld
popa
dec
insb
cmp
lahf
stos
jno
inc
gs
dec
inc
mov
add
or
or
xor
test
add
mov
push
push
xchg
adc
out
jo
or
in
popf
test
adc
adc
jmp
jg
enter
mov
inc
push
ret
popa
ds
insb
mov
mov
dec
jmp
mov
fstpl
les
das
cld
int3
dec
jns
iret
fbstp
xchg
inc
mov
jmp
sub
aam
orl
fwait
add
xor
stos
subb
sar
cld
add
jg
lcall
cmc
mov
cltd
daa
pop
enter
js
sub
dec
arpl
fidivs
push
cmpsb
mov
imul
mov
fistpl
mov
pop
or
or
pop
push
icebp
ret
xor
pop
loope
sbb
test
push
xor
jb
pusha
dec
add
std
xchg
jle
sub
imul
popf
out
fistl
mov
incl
mov
lcall
xor
popa
aas
jo
mov
and
repz
jp
jbe
xchg
push
or
mov
xor
div
jecxz
sbb
hlt
jle
stos
mov
push
gs
and
ljmp
pop
ffree
mov
movsb
xchg
jl
or
push
ret
fildl
xchg
jmp
mov
jnp
jne
jmp
pop
inc
mov
pop
pushf
jb
xor
add
push
or
mov
ret
jmp
inc
pop
mov
ss
mov
arpl
jle
push
cmp
pushl
inc
cmpsb
mov
inc
xchg
dec
xlat
sub
call
dec
lahf
cld
mov
lcall
jne
mov
pushf
add
and
lret
cmpb
and
fcmovbe
lea
inc
sbb
test
in
dec
jmp
test
push
dec
mov
push
mov
movsl
pop
mov
pushl
rol
lds
add
dec
pop
mov
aas
add
adc
jmp
mov
inc
jnp
xchg
fiadds
mov
mov
inc
into
mov
add
dec
mov
in
es
frndint
sub
sbb
jnp
cltd
stc
cmc
mov
popf
pusha
add
and
cmp
jne
mov
lods
dec
jb,pt
jb
adc
mov
loopne
decl
mov
inc
dec
jmp
mov
cld
inc
pop
jle
pop
xchg
cmp
sub
sub
call
enter
imul
mov
enter
loope
inc
or
push
ret
mov
call
push
adcl
jle
cmp
inc
loopne
sar
addl
sub
inc
inc
rorl
scas
ljmp
adc
cli
jp
test
mov
rcll
je
lds
incl
mov
fildl
out
testb
jae
dec
fwait
and
pop
out
inc
insl
cmpsl
icebp
jp
call
sub
lret
stos
clc
xor
int
icebp
dec
pop
test
xor
xchg
loop
cmp
jne
js
and
add
into
jbe
mov
into
pop
pop
repnz
pop
xchg
sbb
sub
pushf
push
iret
cltd
push
cld
ljmp
mov
sbb
lods
aad
bound
push
std
test
jb
jmp
pop
pop
and
jo
xchg
loopne
js
das
es
and
jo
or
shll
dec
shlb
call
seta
cmc
in
and
or
decl
lret
adc
pop
fwait
loopne
lock
xorb
addb
cltd
out
orl
lret
jmp
pop
cli
pop
push
dec
inc
add
into
adc
mov
scas
je
mov
hlt
jle
ud0
inc
pop
pop
lods
pop
jge
cmp
xor
jbe
xchg
sahf
and
jne
pop
outsl
loope
xor
decl
stos
fistl
jg
inc
adc
es
or
xchg
scas
mov
addl
jg
aas
and
mov
inc
lods
jbe
xor
insb
jns
cmp
jmp
cld
and
and
sub
jg
push
shlb
aas
mov
out
enter
rcll
ljmp
sub
loope
push
lcall
xor
xor
sti
outsb
push
in
mov
push
mov
out
jae
push
lret
xchg
xchg
repz
mov
sub
daa
aam
test
cmp
jle
aad
dec
aaa
roll
xor
js
and
outsl
or
xchg
mov
out
fwait
leave
xchg
and
mov
lods
adc
outsb
mov
dec
jge
mov
inc
call
leave
in
mov
mov
or
xor
mov
adc
lcall
in
in
add
divl
enter
stc
mov
scas
lds
cld
cmpsb
mov
bound
jmp
movsb
aas
cmp
sbb
xchg
cmp
cmp
pop
push
ret
inc
xorl
call
arpl
in
sub
lret
loopne
clc
or
add
jno
stos
pop
std
dec
cltd
cmpsl
pop
xchg
push
decl
in
mov
jle
xchg
lea
mov
inc
les
mov
jl
in
nop
and
aam
pop
cld
mov
mov
jg
sbb
ror
xor
addr16
inc
push
jmp
pop
adc
mov
mov
mov
test
cwtl
lahf
in
test
jne
cwtl
xor
call
jo
mov
shll
in
dec
popf
add
sbb
aam
data16
jnp
test
cld
js
nop
daa
mov
repz
cmpsl
sarl
ljmp
aas
call
ljmp
int3
mov
fnsave
cmpsb
jle
xor
in
lret
mov
push
sub
decl
inc
or
loopne
jmp
inc
add
xor
jp
xchg
mov
add
xor
jmp
push
or
popa
push
pusha
out
sub
sbb
jo
adc
jbe
fcomip
cmp
cmp
andb
jbe
jns
and
or
lock
push
cld
call
xchg
mov
cmp
movsb
popf
jmp
hlt
or
dec
jl
call
stos
lods
lea
ss
push
jnp
mov
in
add
ljmp
mov
sti
jne
adc
mov
pusha
aaa
push
push
mov
mov
outsl
or
mov
adcb
add
jge
dec
mov
lcall
les
stos
jne
add
mov
xchg
imul
cwtl
int
xlat
pop
lret
decl
sub
dec
stos
sbb
dec
cmc
mov
daa
in
lods
movsb
les
mov
push
cld
jl
fiaddl
mov
gs
add
js
in
adc
dec
in
pop
push
lods
out
daa
ljmp
xor
iret
nop
pop
push
mov
lret
mov
and
push
mov
clc
inc
adc
cmp
adc
sbb
test
mov
clc
mov
in
divl
adc
and
mov
mov
frstor
pop
jmp
add
arpl
cltd
test
push
or
mov
lret
testb
fmull
pop
sbb
lcall
cmpsl
lea
sahf
and
loope
lods
jecxz
das
addr16
in
pop
inc
xor
pushf
and
and
movsl
lcall
in
add
ss
dec
shll
mov
dec
xchg
or
mov
lods
push
and
cmpb
pop
std
ret
fdivr
jae
test
jp
nop
push
cmpsl
xchg
push
or
inc
jb
incl
or
push
pop
pop
inc
enter
xor
popl
pushl
add
mov
rolb
adc
dec
pop
adc
mov
push
push
das
icebp
jae
cld
lock
decl
cmpl
shrb
rcl
jmp
outsl
pop
bound
fcomip
inc
mov
movsl
ficomps
es
xchg
stos
jge
add
js
ss
sub
ljmp
sub
jl
stos
push
leave
or
testb
outsl
sbb
stc
roll
shll
jns
scas
mov
mov
fcom
jno
cmpsl
aam
adc
out
sub
and
jmp
sbb
repz
arpl
adc
push
push
ljmp
mov
fildll
addr16
push
loope
cmp
mov
push
ss
cmp
or
mov
ds
ret
das
and
cmpsb
cmc
push
mov
fwait
roll
mov
dec
mov
mov
xor
sti
lods
lock
pop
jp
lcall
cmp
push
or
adc
push
pop
sar
inc
es
rorb
mov
ljmp
cld
xchg
mov
cmp
push
xchg
push
mov
inc
movsl
and
leave
mov
and
call
jmp
mov
ja
subl
popf
xchg
aam
push
out
decl
xor
out
push
outsl
or
add
add
insb
or
test
xchg
outsb
push
leave
xchg
loope
icebp
push
insl
mov
push
pop
stc
imul
add
and
cli
ja
mov
addl
pop
ret
or
mov
and
hlt
imul
pop
pop
in
xchg
cmp
insb
ja
adc
mov
jo
sbb
repz
loop
ljmp
xor
push
pop
ss
and
push
out
pop
and
inc
aad
testb
popf
call
mov
push
mov
and
xchg
bound
push
inc
cmc
addb
or
add
adc
lock
lcall
stos
mov
and
mov
jno
push
jmp
cmp
pop
out
icebp
and
pop
clc
mov
pop
mov
imul
inc
dec
sahf
xchg
repz
cli
bound
jne
mov
pushf
or
pop
insl
jg
mov
adcb
mov
in
call
mov
test
adc
movsb
cmpsl
mov
test
decl
inc
mov
mov
jns
cmpsl
mov
test
cmpsb
stos
push
sub
xor
popa
aad
xchg
out
decl
xchg
sbb
fdivs
xchg
sbb
jmp
mov
pop
fdivr
shl
outsl
mov
pushf
mov
loopne
stos
movl
mov
or
sbb
cmp
inc
xchg
xlat
add
mov
jg
enter
jo
aaa
push
mov
mov
mov
out
or
jae,pn
fs
lcall
dec
inc
cmp
mov
sbbb
outsb
je
sub
popa
push
or
in
sti
mov
lret
daa
mov
pusha
outsl
adc
test
xor
pop
mov
clc
xor
movsb
cmpsb
mov
inc
add
outsb
scas
sub
ljmp
test
movsb
pop
insb
xchg
out
div
mov
sub
out
clc
push
sbb
repnz
int
mov
push
lods
stos
sub
testb
jno
dec
out
mov
sti
push
mov
js
sub
cld
cmpsb
ds
jecxz
jle
movsl
loop
mov
incl
mov
jmp
lods
test
leave
aam
sarb
mov
leave
mov
call
pop
outsb
cmp
cmp
cmp
iret
fwait
xor
lcall
test
or
data16
or
or
adc
adcb
leave
or
imul
loope
xor
or
jge
mov
sub
ljmp
inc
sahf
outsl
scas
jo
cld
adc
mov
out
dec
mov
dec
lods
xor
jp
les
imul
incl
push
sub
mov
push
push
aaa
imul
aas
xchg
loope
out
sub
decl
insl
imul
or
xlat
subb
movsb
les
lods
outsl
xor
int
or
decl
or
mov
push
aas
popa
cwtl
pop
xor
push
push
cmp
ss
lds
add
and
into
in
push
fildl
and
leave
sar
fistpl
sbb
push
fimull
pslld
adc
xchg
ja
mov
mov
faddp
aad
mov
or
fdivrs
jg
pushl
pop
pop
or
aaa
sahf
cmp
rolb
sbb
hlt
xchg
cmpsb
or
mov
loopne
ljmp
gs
mov
jae
mov
adcl
loopne
inc
dec
nop
call
outsb
mov
xchg
adc
jge
pop
inc
mov
jp
iret
repnz
bound
in
jbe
enter
pushl
iret
jp
rcrb
hlt
mov
outsl
fistps
mov
dec
push
in
nop
mov
mov
xor
std
mov
js
js,pt
mov
lds
pusha
push
rcrl
dec
outsb
cwtl
cmp
dec
mov
shll
jge
or
fbstp
mov
test
and
jecxz
dec
hlt
scas
fidivrl
mov
scas
int
jecxz
repnz
pop
xchg
push
pop
jnp
in
mov
xchg
fnstcw
mov
aad
cmp
or
arpl
sub
mov
push
push
lea
lock
jne
pop
insb
clc
and
jg
jmp
push
mov
loope
mov
aaa
jb
push
push
aas
xchg
cmpsl
adc
push
xchg
push
test
mov
push
ss
push
xchg
mov
cmp
fnstsw
jmp
std
adc
rcrl
aas
call
jo
pushf
icebp
sarb
xchg
or
fidivs
shll
sti
pop
inc
jle
in
je
jne
sahf
repz
mov
push
int
sahf
add
incl
jge
mov
in
sbb
adc
add
cmpsl
cmp
sub
lcall
xchg
lods
mov
sbb
mov
adc
or
loopne
mov
cmp
push
sarl
mov
mov
js
cmpsb
fnstcw
push
jmp
cmpsb
jo
jg
decl
aad
gs
or
in
sbb
mov
mov
or
icebp
idiv
lods
inc
das
out
dec
mov
dec
jg
cmpsb
xor
ret
push
decl
jecxz
and
xchg
in
rolb
push
stos
add
pop
xchg
ficompl
cwtl
jmp
loope
inc
xchg
cmp
std
in
ficoms
pop
adc
hlt
cli
ror
dec
xchg
adc
mov
inc
aam
jg
inc
movsl
inc
shrb
xchg
xchg
scas
and
mov
inc
fcomip
cmp
push
add
sbb
insb
push
xor
jmp
loopne
stos
pop
xlat
outsb
fsts
repz
cmp
mov
movsl
sub
jne
ret
xchg
jmp
inc
arpl
inc
adc
das
shl
adc
xor
cs
pushl
into
xchg
xor
sub
fadds
stc
mov
std
mov
pop
rclb
aam
test
incl
insl
sti
call
imul
adc
fmul
pop
mov
jg
aaa
in
xchg
sti
or
dec
mov
es
add
or
jge
add
push
sti
mov
test
iret
add
mov
pop
and
ljmp
fsubrl
fwait
notb
scas
lahf
imul
in
lods
cmp
repnz
iret
jg
jmp
mov
push
add
push
cltd
fistpl
dec
mov
call
popa
mull
or
clc
mov
lret
lods
pusha
lcall
cmpsb
stos
cs
fcomip
call
les
fistl
sbb
push
ss
lea
cmc
dec
xchg
lds
jmp
icebp
decl
adc
cmpsb
mov
pushf
jg
lret
inc
dec
stos
fdivp
inc
leave
sub
dec
rcll
mov
scas
pop
movsl
adc
fldenv
test
test
into
loopne
stc
jg
jg
adc
jcxz
mov
pop
std
fsubp
pop
daa
sbb
sub
ljmp
mov
les
cmp
lcall
pop
gs
decl
xchg
dec
sub
push
dec
jl
cli
xor
pop
or
sub
jg
lods
js
repnz
cmp
pop
outsl
loope
sbbl
sbb
dec
xor
mov
in
fimuls
ds
int3
mov
fimull
xchg
das
sub
call
or
mov
ss
aad
int3
test
cmpsl
cwtl
add
mov
mov
push
mov
js
out
mov
lahf
rcl
push
mov
fbld
adc
xor
push
and
jge
popa
out
es
mov
sbb
and
das
sar
adc
ja
pusha
mov
sarl
insb
sbb
xchg
push
cmp
outsl
dec
cwtl
pushf
dec
sbbb
test
dec
ret
cmp
jno
cmpsl
jne
pop
xchg
loope
lahf
decl
clc
jle
cmp
push
lds
movb
sahf
cmp
jecxz
decl
in
inc
pop
mov
sbb
mov
sub
movsb
mov
icebp
ljmp
loopne
mov
push
dec
adc
cmp
cs
enter
adc
push
loopne
incl
cld
jle
cmp
push
jnp
jmp
mov
andl
mov
ljmp
sbb
lds
mov
fiaddl
inc
inc
stos
push
mov
mov
add
fisttpl
xor
aaa
and
aaa
pop
test
ja
or
mov
incl
je
decb
aam
insl
mov
lock
inc
mov
loopne
mov
lcall
adc
daa
out
jl
mov
int
int3
or
call
and
fiaddl
push
pop
jbe
xor
mov
dec
lcall
lea
inc
je
out
cli
xor
sar
pop
outsb
stos
in
outsb
mov
pushf
xor
sbb
incl
xor
xor
jb
ja
adc
push
mov
sti
aad
jmp
lds
pop
outsb
lods
xchg
mov
jle
pop
leave
cmp
xor
push
mov
cmp
out
jbe
lcall
and
mov
and
stc
push
stos
in
xchg
dec
or
xchg
jmp
test
loop
xchg
xchg
leave
cltd
loope
ret
and
loope
test
lcall
push
push
jno
cmpsb
pop
mov
icebp
mov
aaa
sub
jb
pushl
subb
and
cs
mov
or
out
pop
in
mov
or
lcall
je
cli
xor
adc
pop
add
test
mov
xor
pop
mov
bound
jmp
or
mov
add
add
cmc
or
scas
sbb
xor
add
ljmp
lahf
sbb
movsb
imulb
fndisi(8087
adc
repnz
push
cmp
aaa
fcomps
imul
rcrb
out
movb
insb
outsb
scas
shlb
mov
fcoms
aaa
cld
daa
pop
imul
es
aaa
gs
cmp
dec
mov
sub
jns
dec
lret
or
ss
xchg
call
hlt
loope
and
dec
push
jmp
call
xchg
loopne
dec
aam
data16
insl
int
xor
negb
xor
mov
mov
dec
mov
mov
cmp
xor
jp
stos
pop
sub
call
stos
loop
mov
aas
and
scas
pop
mov
xor
test
jno
jmp
bound
push
xor
xchg
mov
inc
sub
xchg
cmp
adc
sbb
call
cmp
out
push
xorl
pop
push
xor
mov
dec
xchg
out
adc
std
cmp
mov
pop
dec
lcall
dec
cltd
push
incl
ja
inc
repnz
lret
or
pop
movsb
dec
mov
adc
add
ljmp
xor
push
jb
in
add
leave
lods
shlb
enter
fmull
ja
xchg
cmpl
adc
dec
or
cmp
cmp
push
sbb
mov
fs
lcall
or
movsb
out
mov
mov
or
incl
inc
jg
mulb
xor
sub
pushf
mov
outsl
jmp
int
dec
gs
push
sbbl
lods
sub
out
shl
orb
ja
push
mov
pop
dec
out
flds
push
mov
mov
jp
lea
mov
jns
das
jg
call
lea
jbe
jne
mov
popf
mov
dec
sub
push
jmp
pushl
nop
pop
jo
dec
bound
shll
out
scas
inc
cmp
movsl
jo
incl
cmp
xor
je
xchg
xchg
outsl
loopne
loop
xor
imul
cli
inc
pop
push
xor
lret
mov
sbb
push
mov
sub
cmp
jmp
jg
xchg
dec
jle
test
inc
scas
cmc
mov
scas
pop
lock
or
add
ljmp
fdivrs
sbb
inc
adc
add
and
push
cmp
jmp
jl
xor
cmpsb
adc
xchg
push
imul
hlt
sbb
dec
and
js
dec
xor
add
repz
push
mov
lea
data16
or
aas
cmp
mov
out
adc
jns
pop
in
mov
decl
mov
or
lods
fdivrs
jp
sarl
neg
jo
or
inc
mov
jmp
movsl
mov
in
and
pop
and
pop
dec
jnp
mov
dec
sti
cmc
and
pushl
lods
cmp
adcb
jle
adcl
call
sbb
or
sti
adc
roll
cmp
orl
dec
and
fnsave
andl
jge
mov
push
or
lcall
jge
incl
mov
adc
fcmovbe
push
or
ljmp
shlb
mov
add
and
popf
repz
adc
mov
ja
mov
push
xchg
movsb
xchg
sti
jnp
leave
xchg
pop
es
ss
push
dec
std
orb
pop
cld
call
cmpsl
mov
das
test
mulb
inc
push
sbb
pop
pop
incl
fcmovb
cmp
imul
clc
jae
aas
lock
fsubrs
xchg
xor
and
cmpsl
bound
cwtl
outsl
jb
jmp
and
mov
push
les
cmp
scas
adcl
ret
sbb
mov
xchg
cmc
mov
cmp
aas
xchg
call
stos
ljmp
cmc
addr16
jbe
movsl
xor
repz
in
dec
add
icebp
mov
testb
std
jmp
cmpl
hlt
xchg
cmp
loope
enter
push
daa
imul
les
mov
shlb
push
sub
mov
pop
fldl
xor
aas
mov
iret
pop
ljmp
jns
fsubrl
popf
or
int
jle
sbb
jge
mov
lods
mov
ljmp
jmp
test
rol
mov
and
and
xchg
pop
xor
jnp
sahf
je
inc
or
aad
in
pushl
decl
gs
pop
and
push
mov
rolb
mov
cld
lcall
scas
in
sub
movb
add
incl
pop
in
jg
cmpsb
repz
push
jmp
pop
les
daa
call
push
xor
in
mov
test
mov
addr16
into
sbb
xchg
sahf
mov
ret
jmp
push
pop
shll
push
cmpl
jnp
cmpsl
shrl
push
es
mov
mov
xor
and
xchg
pcmpgtd
rcrl
fists
js
sub
cmp
pushl
icebp
mov
cwtl
pushf
clc
outsb
push
lods
aaa
cmpl
rcll
test
bound
pop
cmc
incl
jae
outsb
sbb
mov
inc
xor
call
xor
imulb
adc
jg
les
mov
sub
dec
les
jmp
gs
pop
pop
out
out
out
mov
adc
or
arpl
sub
decl
ljmp
push
and
mov
push
cld
push
jp
and
sub
pop
stc
jno
dec
xor
jle
out
dec
or
pop
mov
lcall
inc
mov
jb
cmpsb
nop
mov
cmpsb
lret
xor
jo
mov
test
xchg
pop
lcall
imul
sbb
jmp
rclb
iret
jl
movsb
lods
daa
xchg
orl
lea
add
sti
dec
cmp
xor
mov
js
and
add
fldt
clc
sub
and
pop
repnz
nop
pusha
popa
xlat
lock
rolb
mov
sbb
pusha
push
cmpsl
cmc
pop
add
adc
mov
xor
or
decl
dec
dec
pop
jge
icebp
mov
mov
int3
ja
les
mov
mov
in
ljmp
jmp
fsubrl
aam
sub
adc
mov
icebp
mov
or
stos
sbb
mov
out
in
lcall
lahf
xor
cmp
fistpll
cli
pushl
es
imul
mov
inc
inc
jmp
and
ljmp
xchg
insl
fistl
dec
shr
stc
push
or
adc
cmpsl
inc
adc
call
push
pop
jge
sub
mov
push
adc
push
aad
into
jno
jge
in
jae
out
add
addl
lret
loopne
adc
pop
mov
test
push
jne
jmp
push
ja
sub
push
testl
push
clc
or
ret
mov
lcall
rclb
jae
xchg
sub
shr
andl
sbb
and
movsl
lock
ficoms
movsb
push
xchg
lods
sbb
push
pop
push
sbb
xor
lock
fcom
pop
std
decl
in
test
jne
cmpb
out
push
lret
std
sbb
inc
push
call
pop
adc
dec
push
lods
movsl
cmp
aad
lock
push
ss
mov
mov
ljmp
clc
incl
or
and
pop
lcall
xor
pushf
incl
sbb
sbb
test
stos
sub
xchg
push
repnz
ljmp
and
negb
sub
pop
jecxz
pop
imul
popf
cmp
push
mov
xor
fdivr
call
shll
scas
test
imul
sbb
notb
cltd
sub
pop
ficoms
pop
loopne
or
hlt
lcall
pusha
in
push
fld
cmpsl
shr
adc
je
fs
cmp
inc
xchg
push
jg
xchg
add
pop
and
cltd
dec
lds
popf
cmp
lcall
mov
cmc
insb
insb
sbb
scas
pop
pop
mov
mov
xchg
mov
cmp
in
out
testl
loopne
repz
jb
mov
fldenv
mov
jmp
mov
inc
es
sbb
sub
imul
lcall
aam
sub
int
das
adc
out
mov
adc
xor
push
aas
jo
arpl
jne
xor
js
fs
push
insl
mov
cmp
jno
mov
mov
lcall
shll
enter
decl
aas
dec
sub
in
lds
fildll
orl
cmpb
jmp
movsb
jo
rorl
dec
xor
dec
sub
arpl
out
xchg
push
data16
jnp
das
sar
ljmp
jg
stos
inc
or
inc
cmp
int3
insl
cld
std
sbb
mov
fidivl
mov
xchg
in
and
push
inc
xchg
enter
inc
mov
xchg
subl
mov
xchg
lods
dec
test
js
ds
scas
into
orb
ljmp
lds
mov
lods
cmp
outsb
pop
cld
mov
pop
pop
cmpsb
stos
xchg
ljmp
into
jns
cmp
test
sbb
addr16
mov
in
xor
sar
call
sub
cli
lds
sub
cs
sahf
imul
mov
jg
fmuls
loopne
jmp
cmp
mov
scas
jbe
std
or
push
popa
mov
sbb
inc
jmp
push
pop
add
mov
ficoms
insl
mov
lret
xchg
mov
fs
lock
jge
jae
mov
and
mov
sbb
out
test
call
mov
pop
xchg
cmp
xor
loopne
cmc
add
js
xchg
jge
mov
xchg
xchg
sub
mov
push
mov
cmp
inc
xor
hlt
fwait
sbb
out
jl
and
aad
popf
xchg
fadd
pop
or
jmp
sub
cltd
fcoml
ds
cmp
arpl
imul
mov
call
sub
ds
imul
bound
push
dec
ret
call
mov
jecxz
push
xlat
or
xchg
adc
testb
jmp
jne
jb
arpl
fwait
cli
jmp
stc
mov
enter
add
out
movsb
push
mov
mov
call
aam
push
in
mov
inc
cmpsb
ss
xor
js
daa
cld
stos
das
and
lds
pop
sti
xchg
loope
lea
imul
xlat
movsb
rdmsr
pop
lds
lods
ret
mov
ud0
pushl
int
xchg
fcmovne
add
lds
mov
negl
xchg
loop
or
bound
pop
jmp
sbb
lret
mov
add
inc
addr16
mov
dec
jmp
pop
call
outsl
loop
cmp
inc
dec
push
fldt
dec
ds
sub
insb
jns
jp
jnp
shl
or
cmp
ret
lods
out
rol
sti
lcall
test
mov
push
and
xchg
pusha
shlb
inc
repnz
mov
mov
loope
aas
or
cmp
movsl
fcmovne
in
and
push
mov
adc
call
and
add
into
scas
xchg
push
mov
or
xchg
dec
imul
mov
jl
inc
out
scas
jecxz
int
inc
sti
add
xchg
mov
addb
loope
mov
decl
bound
scas
pop
fxch
push
push
mov
push
adc
sub
or
int
aam
xchg
sti
int3
aad
mov
and
lods
xchg
xchg
bound
and
inc
lods
jne
push
loop
loopne
subl
stos
mov
cmp
inc
mov
xor
inc
bound
icebp
adc
das
push
in
or
call
inc
add
sbb
int3
addr16
mov
aaa
cmp
popl
and
adc
pushl
pop
hlt
leave
fnstsw
int
sbb
fldcw
cmp
punpckldq
jno
pop
sbb
or
pop
cmpsl
ror
sbb
inc
mov
call
cmpsb
icebp
mov
pop
iret
insb
dec
push
out
add
sbb
mov
jge
ljmp
scas
or
enter
ror
dec
dec
or
outsl
pop
cmp
movsb
sbb
ret
aad
sar
mov
lods
mov
popl
jne
jne
gs
arpl
jae
pop
jno
ret
lods
lcall
lret
test
ljmp
adc
loop
mov
lret
nop
xchg
jg
and
fisubrs
mov
cmpsl
mov
testl
fisubrl
in
or
insl
cmp
push
add
aas
xchg
sub
inc
sti
mov
xor
lcall
push
daa
out
mov
mov
nop
mov
xor
xchg
aaa
fisubrl
icebp
lahf
push
in
decl
mov
fxch
jmp
dec
ret
popa
mov
mov
outsb
cld
jmp
scas
sbb
inc
loope
jb
fs
fsts
dec
rcrb
sub
xor
pushl
push
adc
mov
cmp
mov
ja
xor
sbb
sti
dec
dec
sub
xchg
jle
test
call
out
loopne
and
fstps
sbb
inc
xchg
decl
sbb
ret
cmp
push
mov
cli
mov
stos
int3
loop
pop
test
and
or
xchg
cmc
sbb
out
or
andb
incl
dec
and
pop
inc
ja
jbe
jae
adc
lds
inc
out
add
es
decl
sahf
repnz
lcall
cltd
push
inc
mov
mov
aas
ljmp
movsb
pop
push
js
aaa
sub
push
mov
mov
cmp
lods
push
dec
jae
cwtl
and
and
or
inc
pop
xchg
pop
mov
inc
int3
adc
data16
mov
xorl
xchg
sub
jl
sar
pop
icebp
decl
dec
push
pop
in
rorb
and
mov
xor
dec
test
das
fidivl
mov
xlat
outsb
jle
jl
mov
js
inc
sub
testb
push
inc
aaa
cld
incl
or
rol
cmp
rcll
pushf
cs
adc
jmp
jge
inc
ja
and
shl
sub
and
fs
mov
fldl2e
xor
jnp
or
fmull
push
ja
push
test
xchg
cmp
insb
ret
pop
fcompl
mov
ret
push
jbe
not
aas
gs
cli
inc
stos
cld
pop
sbb
or
or
jno
sbb
jp
sarl
aad
or
jmp
clc
outsl
mov
mov
ss
or
or
dec
ljmp
sbb
enter
dec
out
jbe
aas
push
subb
mov
sub
ljmp
movsb
jb
daa
ret
and
mov
ss
inc
dec
addl
add
inc
movsb
xchg
aaa
mov
scas
mov
jnp
push
aaa
add
jb
xor
scas
pop
jns
xor
faddl
cmp
xchg
push
insb
xchg
sub
or
cld
incl
mov
arpl
mov
mov
mov
call
push
adc
dec
in
negb
outsb
notb
insb
cmp
loopne
aas
ret
shl
pop
jl
shlb
lcall
mov
outsb
cs
addr16
sub
pusha
and
mov
mov
decl
ss
dec
aas
sarl
out
incb
sahf
lods
vcvtss2si
insl
test
jmp
pushl
mov
inc
sub
jmp
test
push
icebp
repz
or
in
mov
call
sub
mov
xchg
jne
imul
rorb
sub
inc
pop
mov
jmp
mov
dec
into
fs
sub
jo
mov
rol
jl
in
mov
mov
clc
call
loopne
fucom
outsl
dec
sub
sarb
bound
sub
ret
lret
incl
mov
shl
loope
or
inc
movsl
pop
cmp
push
cld
mov
dec
sbb
jmp
sub
cwtl
movsl
data16
pop
fs
je
adc
loopne
fwait
ljmp
sar
in
mov
popf
ljmp
fisttps
arpl
incl
pop
and
imul
add
mov
les
xlat
mov
scas
dec
jmp
xchg
lds
pcmpgtb
das
lahf
fildl
test
out
xchg
movsl
ds
jmp
stos
lea
sahf
cmpsl
pop
pop
jl
movsb
lret
test
ds
aad
push
fs
cld
daa
stos
test
pop
adc
imul
inc
dec
mov
mov
jg
aam
daa
in
andb
add
orl
xchg
sub
dec
mov
insl
rclb
mov
decl
lret
lret
pop
add
mov
push
popa
stos
cmpsb
mov
adc
jg
and
mov
jg
hlt
mov
xchg
push
xlat
das
stos
pop
or
out
push
mov
fs
call
in
test
jge
xlat
or
mov
and
ljmp
sbb
or
push
aas
sbb
adc
out
in
in
hlt
xor
repnz
jns
xchg
sbb
fsub
aad
mov
and
fsubrs
xchg
sub
mov
cmp
in
sbbb
movsl
and
push
push
out
arpl
or
popa
fnstenv
inc
clc
cltd
loopne
repnz
push
imul
mov
sbb
outsl
xchg
cmp
pusha
test
mov
movsb
mov
mov
sub
or
syscall
rclb
hlt
sahf
or
aam
cmpsb
adc
mov
cmp
push
rcr
jge
int3
daa
lock
xor
lcall
aad
insb
push
mov
mov
frstor
and
decl
repz
lock
pop
nop
ror
int
jbe
and
fsub
cmp
dec
in
sub
pushf
outsb
loop
sub
lahf
jmp
test
jecxz
sbb
jle
lret
cwtl
sub
pushf
xchg
pop
mov
jle
and
and
incb
std
xchg
push
out
scas
sub
mov
lcall
adc
jecxz
xor
into
lahf
xorb
jg
imulb
lret
fcomip
jg
aam
mov
aam
andb
inc
xor
call
inc
and
dec
fistps
cli
cmp
and
test
mov
sub
decl
decb
sbb
cmp
push
movsl
iret
dec
outsl
mov
fwait
jb
push
in
bound
decl
and
sarb
sub
inc
cmpsl
push
mov
ret
shlb
insb
dec
jecxz
xchg
sti
add
mov
clc
clc
stc
jg
jmp
jns
loop
popf
xchg
add
jb
add
dec
loope
test
mov
or
inc
dec
cmc
xorb
mov
out
push
cli
jle
cli
mov
loop
and
jp
and
fwait
call
std
mov
leave
ror
xchg
call
or
mov
ja
cmp
mov
push
cld
push
pop
push
je
ret
repnz
hlt
push
cld
push
jge
lret
sub
rcll
mov
cmp
imul
fs
mov
xchg
dec
cmpl
cmp
lret
getsec
mov
and
lds
out
daa
sbb
jnp
inc
andl
xor
lcall
cld
mov
jl
pop
cmc
sub
push
pusha
dec
and
cwtl
outsl
outsb
sub
ljmp
lods
mov
int
lock
cmp
pop
icebp
fs
pop
pop
out
fdivs
ja
pop
scas
add
xchg
loope
sbb
xchg
sbb
cld
mov
jmp
call
push
sub
sbb
xor
div
lods
add
push
adc
ljmp
cli
decl
mov
fchs
or
roll
daa
call
mov
stos
pop
mov
idiv
xor
call
repz
push
pop
iret
div
jp
jecxz
cmc
dec
push
or
push
sub
cmp
shlb
xor
mov
and
lret
or
inc
mov
mov
jns
jmp
decl
ljmp
fnsave
rorb
push
xchg
inc
xlat
loopne
ja
jmp
bound
mov
jmp
cmp
insb
dec
inc
cld
lahf
mov
in
insb
ss
push
mov
jb
or
aas
aaa
xchg
xor
and
loope
mov
inc
cwtl
js
sahf
clc
xor
loop
xchg
cmp
test
jle
stos
push
and
mov
ds
jae
lods
daa
js
ss
push
iret
push
dec
sub
loopne
incl
push
test
cli
in
mov
xchg
fldenv
out
adc
cld
sub
inc
pop
sub
ret
fldl
out
cltd
mov
xor
iret
ss
push
or
in
repz
int
or
jg
out
stos
or
ljmp
je
sarl
and
cmp
rorb
add
out
jb
fwait
push
pop
int3
loope
negb
sar
clc
sarl
add
push
xchg
test
dec
xor
stc
adc
adc
aad
std
pop
cmp
push
jle
test
lret
xor
inc
mov
aam
dec
and
lcall
mov
stc
xor
test
lret
mov
les
cli
out
mov
clc
pushl
add
movsb
iret
outsl
mov
jno
pop
imul
out
xchg
xchg
das
jecxz
push
mov
cmp
pop
lods
jle
sbb
mov
sar
lcall
jmp
shll
jae
shl
pop
int
test
popf
mov
aaa
je
imull
decl
lock
inc
xor
xchg
cmpsb
mov
mov
pusha
jns
test
push
repnz
stc
xchg
inc
icebp
out
cmp
cmpsb
inc
shlb
inc
repz
cmp
xchg
mov
cs
decl
mov
bound
adc
ficompl
sbb
int
cld
xchg
dec
scas
test
popa
push
inc
je
incl
cmp
mov
test
mov
lods
cli
push
cmpsl
test
je
cli
incl
aas
push
adc
pop
xchg
cmp
rcrl
pop
mov
push
nop
call
je
jbe
sub
ja
mov
fwait
xchg
pop
inc
adcb
and
int3
sbb
test
inc
popf
xor
mov
mov
outsl
test
test
lods
push
mov
decl
or
not
scas
and
pusha
out
fadds
lret
hlt
or
and
mov
pushf
cmp
cli
decl
pop
sub
js
jbe
jge
jmp
sahf
pop
and
xchg
js
les
cld
pop
insb
lcall
xor
and
popf
fimuls
xchg
add
movsb
jl
out
add
fs
jmp
lcall
ljmp
push
sub
xor
sub
jp
sahf
lcall
stos
xchg
push
mov
add
and
pop
jmp
cwtl
sub
jmp
push
jnp
xor
mov
fistps
sbb
or
cmp
dec
push
inc
incl
push
adc
imul
ja
cmp
xor
mov
decl
add
jle
and
pop
push
pushf
or
out
xchg
fbstp
inc
outsb
mov
and
daa
popa
insb
les
add
dec
pop
negb
mov
leave
test
or
insb
mov
mov
push
push
cmp
cmc
and
imul
pop
sbb
cmp
decl
dec
sbbb
in
stos
out
data16
xor
sub
mov
xchg
call
out
test
push
pop
mov
push
or
and
fcoml
fwait
mov
fucomp
jp
mov
jp
call
add
adc
repz
inc
outsb
mov
and
fsts
inc
cmp
jb
ret
and
pop
jmp
shlb
or
scas
pop
inc
inc
nop
and
notb
adc
outsl
out
push
pop
incl
dec
xor
leave
xchg
add
inc
mov
add
fdivr
jge
stc
fwait
aas
pop
mov
xchg
cmp
jp
mov
dec
jl
xchg
cmpl
adc
mov
call
cmpl
jno
xor
push
mov
pop
out
push
xor
jecxz
or
sti
jmp
add
cltd
scas
sub
shl
in
negb
pop
mov
cmp
cmp
jp
push
ja
ljmp
sub
lahf
jbe
pushf
adc
stos
add
addr16
cltd
jo
sub
add
data16
fstps
jb
xor
adc
and
inc
mov
mov
xor
mov
rorl
sbb
jle
cmp
add
jmp
lcall
scas
enter
shr
cmp
jne
jmp
inc
out
stos
dec
pop
push
cmp
insb
imul
pop
stos
fsubl
int
cmp
push
sahf
xlat
pop
sub
pushl
sti
pop
mov
in
and
sbb
mov
hlt
push
addr16
frstor
jmp
add
sbb
push
mov
push
movsb
int3
push
mov
sub
ljmp
enter
call
fs
xchg
stos
stc
adc
aam
or
movsb
mov
stos
sub
movsl
dec
dec
shr
push
repz
daa
inc
adc
out
call
loop
and
jo
add
shll
es
loop
inc
cmp
or
call
inc
repz
rcrb
mov
mov
int3
sti
sti
mov
add
das
inc
aam
mov
es
fisubs
hlt
mov
adc
mov
mov
lea
lea
outsl
das
xor
ficompl
or
out
jmp
push
jo
out
idiv
js
mov
mov
lock
clc
rcr
xlat
scas
adc
movsb
cltd
nop
sbb
push
jmp
sbb
out
sbb
aam
imul
into
cmp
sahf
mov
cmp
jmp
ret
mov
mov
fbld
sti
test
push
pop
jmp
adc
push
inc
mov
repnz
lcall
clc
lret
dec
xchg
outsb
mov
mov
add
jmp
xchg
out
lea
call
scas
jo
insb
pop
aam
pusha
aam
jle
jg
pop
fnsetpm(287
loopne
test
test
pop
insb
xchg
inc
and
jp
mov
dec
imul
loope
js
or
sub
pop
popf
repz
lods
inc
xor
mov
in
jg
call
pop
ljmp
cmp
out
filds
stos
or
rcr
dec
sub
pushl
adc
sarl
or
and
mov
loopne
ret
cli
ja
cmc
sar
call
stos
xor
push
in
adcb
pop
dec
mov
jno
aaa
dec
mov
dec
lcall
jne
aad
dec
inc
dec
iret
push
repz
mov
sub
add
dec
push
cmp
cmp
sub
sarb
scas
in
jmp
dec
out
or
dec
jp
scas
loop
cmp
and
cwtl
xor
iret
hlt
ljmp
pushl
mov
inc
imull
out
jb
inc
and
pop
loop
sbb
mov
jmp
scas
fyl2x
out
xlat
adc
repz
lahf
out
outsb
pop
lahf
push
cli
pushl
cli
lock
add
jle
dec
stc
pop
mov
mov
push
push
cld
test
inc
push
shr
push
xor
out
pop
sbb
mov
lahf
call
pop
lahf
mov
dec
dec
fldt
out
cli
push
and
xchg
rol
push
or
xchg
or
cmp
pop
pop
shll
clc
inc
mov
incl
ss
xchg
in
sti
mov
and
test
mov
ficoml
call
add
xor
adc
mov
mov
cmpsb
dec
mov
push
arpl
pop
aam
pushl
std
idivl
lcall
shlb
jmp
stos
mov
lds
xor
in
scas
xchg
jns
xor
xlat
repz
mov
sar
incl
dec
aas
push
pop
ljmp
imul
xchg
aaa
leave
int
adc
jg
fmul
outsb
outsb
xchg
pop
arpl
fnstsw
scas
imul
xchg
data16
mov
jmp
fadds
push
rclb
out
dec
cli
lahf
xchg
mov
jl
ljmp
mov
data16
inc
fnstenv
xchg
mov
xor
push
ficomps
sub
leave
jmp
push
push
push
sti
dec
dec
call
and
xlat
stos
scas
addb
js
inc
pop
fildl
push
int3
ds
in
test
fildll
add
imul
mov
repz
mov
lods
or
incl
jo
out
inc
aaa
jp
in
test
mov
cmp
mov
in
test
stos
add
push
insl
fld
test
xchg
cmpb
lret
mov
mov
sub
inc
mov
mov
push
aas
daa
mov
mov
bswap
imul
cltd
cmp
sub
push
scas
inc
fsubrs
sub
mov
lcall
call
push
xlat
scas
rorb
adc
loop
push
scas
clc
lcall
mov
ja
or
ljmp
gs
vaddsubps
inc
call
decl
jo
pop
and
xchg
mov
add
pop
adc
sub
xor
aaa
jg
mov
out
sub
out
hlt
roll
cmp
out
faddl
call
mov
mov
mov
addr16
push
insl
hlt
in
scas
lcall
std
cmpsb
in
ljmp
xadd
pop
push
in
xchg
push
mov
and
push
sbb
jmp
or
dec
popf
ss
adc
movsb
lds
sub
mov
lods
jmp
aad
dec
in
cmp
sub
jae
push
xchg
mov
fisttpl
pushl
rclb
xchg
aam
notb
ret
pusha
pop
push
fnstsw
jmp
push
fsubrl
cmp
ljmp
add
push
aad
aas
sbb
sbb
jne
cld
sbb
pop
in
pop
sbb
sub
out
dec
sbb
fdivs
lods
dec
cmpsl
in
sbb
xchg
pop
outsl
out
sub
fimull
jmp
push
sar
mov
pop
push
jo
addr16
fcomp
push
dec
adc
mov
incl
out
add
cmpsb
pop
addb
loope
pushf
cmc
imul
and
ljmp
cmpsl
sbb
lcall
push
imul
fwait
insb
xor
add
inc
push
mov
mov
pop
idivl
cmp
call
xchg
dec
jno
std
outsl
repz
pop
mov
or
jg
hlt
adc
mov
and
js
in
mov
in
adc
cmpl
fidivrs
sbb
loopne
mov
outsl
mov
ficomps
sub
or
clc
push
call
sar
loope
fnsave
xor
mov
mov
adc
push
xorb
mov
les
in
sub
addr16
mov
cmpsb
push
mov
and
sbb
xchg
js
aad
mov
movsb
mov
mov
pushl
ljmp
push
push
dec
outsb
mov
int3
push
inc
mov
loope
push
arpl
add
incl
es
inc
jns
sub
shll
inc
push
or
lods
in
xchg
inc
movsl
and
ret
int
sbb
lcall
push
and
xchg
jbe
jns
push
sub
stos
into
cwtl
cwtl
or
incl
push
outsl
leave
inc
xlat
cld
mov
adc
hlt
cli
into
aaa
lahf
mov
mov
xchg
mov
jmp
adc
jno
cs
fisttps
out
add
mov
bound
xchg
jmp
or
sbbl
sbb
in
movsl
dec
inc
inc
lcall
cld
addr16
test
or
cli
mov
cmp
cmpsb
test
pop
out
cli
inc
in
push
inc
xor
outsb
cmc
es
test
test
out
add
sbb
decl
rcl
test
cld
std
test
cmp
add
pop
mov
outsl
dec
adc
call
ljmp
inc
aad
les
int3
lcall
cmp
inc
dec
int3
xlat
mov
std
jns
scas
jge
jmp
shl
fstpl
or
cltd
sub
sub
pop
mov
ror
and
mov
or
aaa
iret
insl
ret
add
adc
sub
movsl
ljmp
insb
sbb
pop
popa
jnp
shl
push
sbb
fldt
xchg
lcall
xchg
add
imul
cmp
leave
pop
inc
ss
or
cmp
pop
xlat
jle
jmp
adc
test
int3
or
push
inc
lret
incl
test
xchg
sbb
lahf
and
rolb
xchg
dec
js
xchg
test
sbb
fcomip
decl
xchg
mov
loopne
add
sti
xlat
inc
jno
pushl
and
loopne
fstpl
adc
stos
bound
andl
mov
es
cld
stos
das
push
push
lods
sahf
stos
adc
fadds
pop
decl
mov
inc
push
jo
js
hlt
push
lea
outsb
andl
mov
ret
jns
mov
push
add
lret
enter
leave
pop
or
inc
xchg
out
jno
inc
ss
jg
rcl
imul
into
loop
js
aaa
push
dec
jne
push
pop
mov
test
lret
ljmp
adc
xchg
call
fldpi
or
enter
dec
imul
inc
bound
aam
psrlq
adc
loopne
cltd
sbb
jmp
nop
pop
mov
add
fldt
mov
cmp
jbe
push
jle
jne
enter
mov
sub
lcall
dec
and
popa
loop
jns
shlb
mov
cli
push
call
jae
int
shlb
cmpb
jbe
add
ljmp
cmp
stos
pop
sub
aam
repnz
mov
leave
hlt
pushf
std
repz
xchg
pop
decl
jo
cmpsb
outsl
add
test
push
or
mov
dec
outsl
test
or
arpl
sar
decl
lock
jo
stc
sub
fs
pop
xchg
or
adc
pop
mov
mov
jo
mov
xor
push
lret
sbb
es
push
dec
xor
aad
cld
jmp
cmc
cmp
orb
imull
sub
jg
lahf
das
fsubrs
sub
adc
ljmp
mov
mov
inc
push
dec
inc
xchg
les
or
cli
clc
popa
popa
push
fcoml
jnp
push
test
inc
dec
in
add
xchg
loopne
mov
push
shlb
ret
pushl
cwtl
arpl
pushf
das
inc
push
rclb
outsb
stos
xchg
adc
pushl
cmp
aaa
loopne
shlb
lods
cltd
sbbb
lcall
call
adcb
test
adc
clc
push
not
mov
and
adc
sahf
std
cmpsb
ja
mov
pop
popa
imul
testl
js
out
sub
dec
bound
or
push
sbb
pop
jg
or
cmpsb
jg
pop
ss
sbb
aad
xor
cmp
mov
js
mov
in
fwait
ljmp
add
lods
mov
movsl
mov
incl
enter
or
pop
or
sub
xor
inc
dec
in
or
pop
adcl
lds
scas
fs
gs
sbb
mov
or
call
adc
cs
je
sub
shlb
scas
insl
aaa
xor
pop
cld
push
dec
inc
pop
stc
cmp
cmp
pop
pop
jae
aas
lods
sti
adc
sbbl
out
pop
lods
push
clc
sub
cld
insb
lret
push
sbb
xchg
in
dec
push
clc
lods
movsb
mov
clc
mov
incl
mov
lock
incb
out
cmp
leave
mov
cltd
mov
out
es
xor
shlb
cmpsl
mov
mov
cwtl
cld
movsb
in
out
imul
fsubrs
push
jne
push
outsb
fdivrp
push
push
insl
dec
cmp
lret
das
notl
insl
fistps
popa
mov
cli
mov
and
cmc
data16
xlat
dec
xchg
push
rol
subb
mov
mov
sahf
xor
adc
icebp
jmp
mov
sub
rep
sbb
pop
rorl
and
in
mov
addr16
int3
inc
jmp
movsl
mov
push
test
jmp
adc
lcall
fdivs
into
jno
jno
xchg
mov
nop
inc
add
and
add
test
mov
add
and
cs
mov
add
and
sub
add
adc
mov
mov
adc
mov
inc
add
adc
adc
nop
inc
mov
pusha
mov
aas
lods
lds
dec
push
int3
fbld
arpl
jmp
fimull
popf
in
mov
movsb
cmp
cmp
aas
jecxz
dec
in
fs
mov
sub
or
sti
insb
push
sub
decl
sbb
push
jb
es
dec
inc
out
pop
cmpsb
dec
sbb
adc
ja
jmp
ss
push
push
repz
mov
mov
jbe
mov
call
xor
mov
xor
je
push
rcrb
mov
pushl
ljmp
push
push
and
or
lods
jg
pop
add
add
call
popa
xor
sub
mov
mov
loope
call
push
addb
sub
mov
in
push
sub
jg
ljmp
add
pop
mov
dec
mov
add
inc
mov
call
aam
dec
mov
add
inc
mov
mov
mov
mov
add
cmp
test
mov
je
movl
fnsave
jge
inc
std
loopne
fistpll
out
mov
add
inc
dec
jne
add
repz
aas
testl
mov
add
paddd
mov
incl
cmp
cltd
cmpl
or
call
jo
dec
pop
pushf
loop
ljmp
idiv
cmp
enter
lock
jg
cli
adc
xchg
inc
insb
mov
mov
mov
fistl
mov
push
adc
stc
stc
xor
jp
sub
decl
je
out
push
into
nop
rcrb
les
adc
in
ljmp
ss
lods
cmpsl
fs
push
xor
or
out
mov
sbb
sbb
cmp
in
shl
idivl
decl
std
mov
inc
mov
pop
or
lock
mov
push
ja
pop
push
dec
push
sbb
or
insb
push
add
mov
aad
and
pop
xchg
dec
cmpsl
sbb
jne
ja
xchg
fsubrs
clc
dec
scas
cli
rcr
xor
pop
jmp
mov
mov
cmpsb
lret
inc
mov
in
mov
out
add
clc
lds
aas
pop
inc
xor
cmpsl
jp
repz
mov
cs
mov
or
decl
lret
or
sbb
mov
xchg
pop
ja
jmp
cmp
jb
and
lret
xchg
subl
jae
mov
cmc
lods
std
mov
call
jnp
ss
sahf
jl
outsl
aas
or
jnp
addl
pop
pusha
jae
xchg
fs
sti
popa
cmp
js
jae
jno
cmp
aam
jb
xor
popa
std
ret
cld
lcall
sbb
pusha
xchg
clc
mov
stos
pop
stos
lock
add
push
xor
andb
push
sub
addb
mov
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
adcl
popa
xor
cmp
test
mov
xchg
dec
faddp
sbb
shrb
in
outsl
stos
cli
ja
mov
in
aaa
inc
inc
fwait
test
mov
mov
sub
cmp
incl
push
ljmp
jno
xchg
int3
dec
pushf
scas
idivl
in
fwait
or
or
jmp
mov
repnz
adc
pop
stos
push
sbb
mov
gs
es
mov
and
lcall
mov
push
std
mov
popa
fsubl
sbb
mov
mov
pop
mov
or
sbb
jmp
out
cltd
outsb
add
test
cli
adc
in
jmp
out
and
incl
add
and
arpl
push
mov
fsubl
mov
aas
cmp
in
xchg
sub
stos
adc
outsl
xor
sbb
divb
mov
out
rcl
sub
mov
lahf
mov
mulb
test
inc
push
mov
sbb
dec
push
data16
decl
mov
jb
aam
xchg
push
add
rcrl
stc
xor
xor
incl
mov
xchg
adc
push
cwtl
push
fwait
inc
inc
sbb
je
stos
push
es
xchg
decl
insb
adc
mov
push
cmp
and
inc
jge
pop
or
incl
sahf
lret
pop
lret
cmpsb
adcb
scas
cmp
imul
adc
in
ret
mov
sti
mov
mov
ret
fsts
leave
inc
in
mov
or
jns
fstps
popf
inc
push
mov
arpl
movsl
xor
neg
gs
inc
push
or
xor
scas
sahf
mov
loopne
xor
insb
int3
cmp
arpl
jnp
negb
stc
and
stos
xchg
fsubr
adc
sbb
imul
call
mov
clc
out
cmpsb
push
mov
cs
cwtl
les
les
fstps
sub
pop
fsubr
repz
in
dec
mov
fisttpll
dec
adc
cmp
mov
decl
jp
mov
push
cmp
frstor
ja
add
lahf
aas
pop
int3
ja
jns
push
aaa
cmp
dec
cmp
or
outsl
push
sbb
sbb
push
xchg
lahf
adc
push
jg
adc
pop
pop
es
cld
pushl
and
sub
dec
cmp
push
out
sub
jnp
not
mov
adc
jmp
mov
pop
daa
pop
push
pop
jnp
xchg
add
rol
sub
sbb
out
and
jmp
popf
xchg
clc
rorb
loop
mov
add
dec
jnp
jecxz
fadds
out
xchg
pop
out
call
cmp
push
popf
push
in
cltd
adc
insl
pop
cmp
rcrl
pop
jae
in
ljmp
ss
jge
cmp
insl
arpl
cmp
imul
shlb
data16
jmp
adc
aaa
xor
adc
data16
or
mov
scas
pop
sbb
add
jg
jg
addr16
outsl
jo
xor
sbb
push
or
mov
mov
in
ljmp
xor
cmp
xor
lods
or
addl
popf
pop
addl
inc
fwait
ds
push
xor
outsl
mov
mov
fcoms
xchg
push
pop
jg
jmp
cmp
jle
sub
imul
add
xor
xchg
pop
imul
clc
add
push
aad
in
xchg
fbstp
cs
cmp
outsl
stc
cmp
sti
xchg
adc
xchg
sbb
jg
cmpsb
insl
mov
cmp
cmp
mov
jmp
iret
into
xor
cmp
aaa
outsl
mov
pop
cld
jmp
xor
add
sbb
lret
add
pop
call
fcompl
xchg
ss
das
ds
cmp
xor
jne
cmp
jae
xor
sub
out
or
pop
mov
lcall
mov
mov
jae
add
scas
clc
dec
aaa
push
mov
push
imul
cmp
fdivl
add
lds
mov
jb
ds
mov
push
cld
cli
cmp
push
or
clc
lock
fadds
inc
pop
lock
enter
cli
dec
in
das
clc
jg
xchg
inc
xor
or
fsubrs
clc
mov
add
out
mov
inc
pop
push
out
sti
cmp
outsb
iret
aas
lcall
fsubs
xor
out
pop
lea
stc
mov
pmaxsw
xor
fisttpll
not
aam
js
addb
xchg
push
pusha
shll
enter
push
clc
mov
xchg
das
clc
jmp
push
adcb
into
and
outsl
ds
and
fimuls
fcmovbe
mov
pop
inc
pop
jae
inc
push
arpl
mov
inc
sti
xlat
mov
xchg
push
fldcw
push
xchg
jnp,pt
scas
mov
push
mov
mov
out
push
pop
sbb
xchg
push
popa
lods
arpl
adc
cld
incl
sahf
mov
pop
add
loop
minps
pop
push
es
jmp
mov
test
pop
xchg
and
addb
aas
sub
int
pop
fsubp
pop
stc
lods
mov
pop
daa
cmp
mov
and
add
inc
jns
sti
adc
mov
movsl
jmp
int3
ds
fdivl
fwait
push
inc
mov
test
decl
pop
rol
inc
ficoms
call
clc
in
jge
ds
mov
lret
cmp
add
add
xchg
pushl
pop
xchg
ljmp
clc
jae
push
inc
or
iret
fs
pop
pop
sar
mov
aam
inc
dec
pop
decl
adc
jp
fidivrl
pop
xchg
popl
sbb
add
add
lods
jae
adc
repz
sahf
push
pop
sbb
lret
mov
loopne
adc
cmpsl
popf
and
leave
mov
call
sub
adc
push
push
xchg
lahf
nop
out
adc
and
jp
mov
adc
bound
int3
pop
xchg
aam
sti
inc
lock
mov
or
mov
dec
popa
pop
push
adc
lret
adc
push
in
jp
das
clc
jg
repz
or
push
pop
jmp
jle
fisubrs
or
push
mov
fiaddl
cmpsb
std
incl
adc
sbbb
mov
jp
sbb
jmp
and
jbe
fmuls
fdivl
lcall
incl
lds
jno
cmc
gs
rcl
in
xor
int3
popl
lcall
mov
pop
pop
xorb
xor
adc
sub
cwtl
jb
xlat
sbb
lock
fmuls
pop
mov
clc
fstps
loopne
jg
pop
push
pop
in
aad
mov
mov
call
mov
mov
in
adc
or
scas
cwtl
fadds
bound
xchg
mov
arpl
xchg
add
rol
lret
arpl
popa
pop
fcompl
xlat
or
push
add
inc
mov
push
aad
xlat
pop
push
push
mov
fmuls
adcb
rcrl
jg
push
pop
cmp
roll
rcrb
mov
pushf
push
insl
enter
incl
push
je
xlat
push
sub
in
and
repz
jno
fists
sbb
fnstenv
push
cmp
or
aas
jmp
and
inc
mov
or
cmpb
xor
mov
sub
in
push
inc
dec
idivl
outsb
insl
cmc
mov
mov
push
dec
mov
testl
mov
decl
mov
test
pop
icebp
xchg
xchg
or
push
pop
mov
incl
add
loopne
cmp
cmpsb
pop
xchg
inc
subps
mov
decl
mov
faddl
mov
sahf
dec
fs
or
xlat
stos
xchg
cmp
jmp
pop
adc
cs
sbb
ss
les
aam
out
jae
jmp
mov
add
push
insl
sbb
xchg
bound
arpl
jo
push
imul
inc
jb
adc
gs
imul
popa
ljmp
je
jb
jae
popa
or
jne
push
dec
gs
push
push
dec
push
pop
js
pop
bound
cmp
dec
inc
cmp
pop
pop
jp
xor
dec
pop
dec
addr16
data16
imul
jmp
push
imul
js
dec
inc
push
dec
dec
dec
gs
push
inc
push
pushl
js
push
jne
pop
arpl
inc
popaw
inc
dec
imul
xor
bound
inc
pop
lock
jmp
aaa
push
xor
push
xor
dec
outsl
insl
jno
dec
inc
adc
jbe
imul
js
inc
jne
xor
push
push
dec
push
insb
outsb
inc
push
jno
push
adc
ss
outsl
decl
xor
pop
je
inc
push
dec
js
pop
push
pop
fs
dec
js
ss
lock
jmp
popa
xor
dec
dec
cmp
push
dec
insl
jns
push
inc
push
inc
inc
imul
dec
push
ljmp
dec
inc
jo
pop
js
jne
dec
js
inc
jg
inc
and
push
ss
popa
pop
inc
pop
insb
push
jns
outsb
outsl
imul
addr16
inc
dec
mov
adc
jns
pop
bound
aaa
dec
jns
jbe
aaa
push
jp
decl
aaa
pop
or
dec
jo
pop
jns
jno
xor
xor
ret
mov
jae
jo
inc
inc
xor
dec
inc
jg
push
inc
insl
xor
aaa
aaa
jns
gs
dec
xor
xor
dec
dec
push
xor
pushl
jb,pt
xor
push
jae
jbe
xor
push
mov
jns
inc
dec
js
ja
insb
or
inc
push
inc
adc
inc
add
or
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
mov
incl
add
push
add
aaa
call
mov
add
stos
out
add
or
push
test
in
add
out
xor
add
lods
loope
push
orl
push
and
lret
add
cmpsl
addl
out
jg
std
push
xchg
addl
je
jecxz
push
add
jle
add
in
mov
push
addb
sbb
add
and
test
rorl
std
xchg
push
pop
or
xorb
xchg
sbbb
adcb
sarl
sub
add
mov
xchg
xchg
pop
ret
sarl
cmp
outsl
jg
addb
add
daa
leave
add
dec
jns
lds
shrb
popa
outsl
fistpll
add
sbb
inc
inc
adc
lods
jge
pusha
add
push
ja
inc
pop
sbb
idivb
pusha
mov
sbb
imul
push
cmp
stc
cs
mov
imul
imul
fisttps
sub
push
shll
outsl
add
pusha
or
test
sub
push
add
imul
xchg
add
out
push
inc
jecxz
inc
cmp
repz
inc
jl
cmp
arpl
imul
add
pavgb
das
or
mov
sub
cli
imul
sti
imul
jecxz
cmp
xlat
fnstenv
lods
jns
mov
andl
and
pop
adc
mov
dec
fnstenv
or
pusha
or
cmp
mov
adcb
loope
sbb
inc
int
fbld
sbb
dec
mov
andl
or
xor
ss
lcall
lods
movsl
ret
pop
popf
sbb
pop
add
dec
cmp
imul
psubusw
icebp
js
sbb
or
mov
sbb
cmpsl
imul
divl
sbb
stos
sub
adc
lea
fstps
loopne
pop
sub
cs
pop
pop
dec
shr
mov
stos
lea
or
pop
cs
sub
push
repnz
repz
jno
fwait
xchg
insb
lcall
jmp
psllq
add
sub
cld
pushl
loope
mov
loope
shlb
out
mov
lock
push
and
add
sbb
cmp
loopne
push
pushf
jg
cmp
ret
pop
imul
fnstsw
push
adc
pop
add
push
and
pop
pop
jl
push
fbstp
or
push
in
mov
jnp
roll
pop
xor
cmpxchg
das
arpl
insl
sbb
dec
xchg
stc
repz
xor
cltd
loopne
jne
mov
mov
insl
pop
inc
push
in
vandnps
roll
fcmovbe
lcall
arpl
lock
mov
lds
add
aas
in
ss
pop
in
stc
shll
push
push
mov
mov
out
sbb
mov
pop
sub
lcall
or
fisubs
inc
ja
jnp
lcall
icebp
jl
or
dec
loope
jo
mov
cmp
fisttps
dec
ror
jmp
or
xor
mov
test
pop
ja
into
mov
mov
and
pop
int
pop
cmp
aad
jg
jl
stos
scas
leave
iret
pop
lock
stos
add
fidivl
clc
mov
popa
inc
in
cmpsl
sahf
push
mov
std
jg
add
mov
pop
push
push
pusha
andl
xchg
aad
fistpll
aad
dec
rcrl
jp
addr16
jmp
xor
jo
icebp
cmp
jge
sub
addr16
push
pop
insl
repz
and
imulb
xor
cmc
fwait
jo
repz
loopne
mov
jg
pop
pop
push
lock
jno
popf
xor
xor
lock
dec
and
jg
mov
push
xchg
xor
jae
sub
stos
mov
aam
mov
pop
aam
rcrl
daa
test
pop
std
inc
flds
jb
add
push
xor
outsb
pop
pop
pop
add
std
decl
fidivl
mov
movl
sarb
pop
call
pop
pop
les
mov
adcb
popa
sbb
inc
mov
fsubrl
stos
inc
xor
rcr
sbb
adc
adc
push
aad
inc
or
adc
icebp
incl
dec
add
mov
testl
fistpll
cmpsl
jae
pop
hlt
pop
jmp
xor
add
xchg
xchg
incb
add
mov
movsb
xchg
and
movl
mov
loopne
je
adc
cmp
or
add
inc
mul
push
popa
mulb
loop
mov
bound
ds
sbb
push
fbstp
lcall
sub
add
iret
outsl
mov
xchg
imul
xchg
xchg
nop
add
adc
add
jo
mov
fisttpll
dec
add
fcoml
xor
mov
adc
jge
sub
mov
add
push
rcr
dec
xorb
add
outsl
mov
fildll
xchg
add
rclb
mov
movsb
mov
call
fdiv
add
add
add
movsb
movsl
insl
shll
add
inc
subb
imul
mov
js
add
sub
lods
fnstenv
je
push
xor
pusha
add
pop
xor
xor
dec
xor
aas
sbb
out
in
xor
out
pop
cmpsl
scas
test
int
mov
cs
cmp
pop
jo
or
rclb
adc
mov
xchg
push
adc
sub
fcoms
jl
add
or
in
and
push
out
xchg
jecxz
pop
jecxz
out
mov
lar
jecxz
add
mov
ds
in
adc
and
aam
add
jp
adc
mov
add
mov
ret
ret
filds
add
leave
enter
aad
rcl
rcl
filds
ficoms
lcall
test
mov
add
xchg
xchg
xchg
adc
decl
xchg
incl
testb
lcall
fistpll
add
add
nopl
add
in
jecxz
loope
imul
inc
add
in
jmp
cld
jmp
add
add
or
add
add
push
in
and
add
lock
mov
push
lret
stos
clc
jmp
or
mov
push
lret
fwait
decb
test
add
enter
sbb
stc
movsl
and
shrb
xor
call
subb
and
mov
popa
dec
andb
push
pop
pop
lahf
in
clc
call
mov
rorl
add
sub
mov
sti
pushf
jg
cwtl
sbb
dec
stos
insb
fmull
add
out
cld
mov
dec
stos
mov
jg
xchg
adc
ret
decl
sub
lret
shr
jbe
repnz
lea
pushf
cld
lcall
mov
fdivrp
in
sti
add
jbe
dec
lret
out
sti
pushl
sti
out
insb
in
lahf
cs
dec
add
push
inc
mov
pop
sub
jle
mov
mov
jg
dec
stos
mul
scas
sbb
mov
cli
add
mov
sti
or
js
pop
jno
push
bound
popf
fdivr
adc
and
jmp
inc
les
or
sbb
mov
cmpsb
cld
aam
jo
outsb
jnp
test
sbb
xor
jns
add
divb
xchg
pop
daa
xor
pop
scas
inc
or
mov
add
in
dec
ret
or
add
lods
mov
adc
push
adc
sbbl
mov
cmpsl
add
add
push
dec
sub
es
adc
add
rolb
decl
adc
les
scas
add
fldt
stos
rorl
add
add
mov
test
add
push
aad
enter
inc
push
daa
insb
in
adc
pusha
fisubrl
lods
mov
mov
aam
repz
adc
das
or
sub
lods
add
or
jne
in
shlb
add
push
inc
and
mov
push
cmp
imul
arpl
dec
rclb
fcmovnu
fwait
xchg
cmpsl
rorb
enter
or
add
pop
xchg
lret
iret
sub
shlb
repz
dec
out
nop
sub
leave
push
push
adc
subb
rorb
push
test
inc
hlt
decl
sub
jo
hlt
jno
lds
or
cwtl
cmp
adcb
add
enter
jg
sub
mov
pop
mov
out
add
in
cmc
and
push
fisubs
jo
jmp
loopne
sbb
or
or
pop
outsb
notl
sbb
mov
cmp
push
loope
in
push
fwait
out
cmpsb
cmp
xor
jle
cmp
jnp
in
addb
sbb
je
into
mov
adc
adc
sbb
shrb
cmp
ret
rolb
loopne
dec
cld
add
add
inc
mov
out
mov
jbe
push
mov
push
mov
into
test
add
push
add
add
push
hlt
loopne
jae
sbb
or
or
imul
fnstsw
loopne
scas
loop
mov
outsl
in
mov
or
stos
insb
sub
push
pop
pop
mul
cmp
insl
shrl
push
cs
jge
pop
imul
mov
xlat
arpl
dec
fistpl
sbb
or
loopne
mov
add
add
push
sbb
push
lret
or
push
pop
imul
loopne
or
mov
push
stos
cmpsl
pop
mov
and
std
rorb
mov
loopnew
orb
es
add
rorb
in
xor
ds
or
sti
add
out
xlat
adc
sbb
lods
mov
or
into
loopne
aas
or
xor
js
add
sbb
push
rorl
fs
adc
or
cmpl
push
mov
mov
sbb
push
cmpsb
mov
shl
aam
aas
mov
or
or
lods
nop
pop
sub
jge
mov
or
repnz
inc
lcall
iret
loopne
outsl
inc
loopne
arpl
in
loopne
xchg
fwait
sbb
add
mov
fdivrp
sbb
loopne
mov
ds
cmpsl
add
cmp
lock
xor
bnd
stos
and
push
or
pop
pop
sub
dec
push
add
scas
pop
or
push
jbe
or
jp
add
das
dec
fmul
fistl
shll
jg
cli
loopne
imul
imulb
divb
faddl
xchg
sbb
cmpl
mov
pusha
pusha
add
fidivrl
mov
leave
xchg
inc
add
test
dec
dec
pop
sti
pop
ret
inc
xchg
call
add
imul
scas
add
adc
nop
gs
outsl
add
pop
cmp
loopne
das
push
loopne
dec
cmp
inc
outsl
es
shll
adc
mov
into
mov
loopne
ret
mov
mov
dec
loope
ficoml
pop
inc
mov
cld
andl
test
xor
sub
ret
in
mov
pop
sbb
xchg
lcall
lahf
into
xchg
sti
loope
and
add
and
loopne
mov
loopne
stos
pop
lcall
jo
or
ds
push
icebp
or
repnz
jo
pop
adc
addb
shlb
sbb
lock
jmp
jnp
nop
jo
mov
push
push
lock
lahf
xor
jo
xchg
fsubrs
pop
scas
push
cld
pop
lock
jo
add
adc
test
jo
divl
lock
adc
mov
push
add
jo
lock
stos
and
jo
pop
outsb
cmpsb
imul
stos
dec
fisubs
jae
pop
stos
arpl
adc
push
sbb
mov
aaa
aad
fisubrs
adc
or
jo
icebp
subb
sti
inc
lret
jmp
mov
ficompl
mov
aaa
nop
lret
dec
mov
stos
jno
cmp
lock
adc
inc
xor
aam
add
sub
pusha
ljmp
adc
xchg
adc
sub
idivb
sub
sbb
fisubrs
xorps
mov
xlat
adc
sub
cmp
sti
inc
cltd
outsl
add
xchg
adc
add
movsl
fmuls
lcall
xor
adc
lods
sbb
sbb
add
pop
xor
sbb
push
jge
mov
add
or
or
mov
cmpsb
fildl
cmp
mov
fcmovbe
jb
adc
pushf
jno
jbe
mov
test
test
xor
cwtl
mov
mov
mov
insl
addl
add
jl
testl
add
rcr
mov
inc
push
daa
les
cmpsl
and
and
lock
jecxz
inc
out
in
out
adc
inc
out
jg
aaa
jg
out
out
out
dec
out
out
out
dec
out
out
out
divb
push
out
out
out
int3
push
out
out
out
and
mov
cld
int
and
xchg
pop
out
pop
out
out
out
adc
stc
fwait
mov
out
pop
out
out
out
and
in
and
fidivrs
out
out
out
sub
out
sub
jmp
mov
out
out
out
xor
mov
out
insl
mov
in
xchg
adc
out
out
out
add
in
add
in
dec
int
fldl
pop
out
out
adc
out
int
or
call
push
out
out
out
adc
mov
pop
pusha
int
mov
sbb
xchg
sbb
test
sbb
inc
in
in
ret
in
movhps
push
fsub
ror
in
scas
in
jo
jns
out
in
pushf
in
in
and
in
cs
das
pop
outsb
in
fdivs
in
adc
sti
push
or
adc
in
cld
insl
sti
insb
in
in
shl
enter
out
in
insb
mov
mov
fists
inc
in
mov
iret
fnstcw
scas
inc
in
in
in
in
insb
clc
insb
mov
in
in
js
hlt
mov
mov
in
in
in
outsb
in
adc
in
and
leave
or
in
dec
in
inc
fildl
in
xor
rorl
in
sbb
orb
cs
in
ss
lods
or
lock
int3
or
mov
sbb
in
add
xchg
adc
in
cmp
mov
ljmp
cltd
jecxz
movl
jecxz
xlat
inc
jecxz
inc
jecxz
xlat
inc
jecxz
aaa
jg
aaa
inc
jecxz
xlat
inc
jecxz
dec
jecxz
xlat
dec
jecxz
dec
jecxz
repz
jg
xlat
dec
jecxz
dec
jecxz
xlat
dec
jecxz
dec
jecxz
xlat
dec
jecxz
jg
aaa
jg
jecxz
xlat
push
jecxz
push
jecxz
xlat
push
jecxz
push
jecxz
xlat
push
jecxz
aaa
jg
aaa
push
jecxz
xlat
push
jecxz
pop
jecxz
xlat
pop
jecxz
pop
jecxz
repz
jg
xlat
pop
jecxz
pop
jecxz
xlat
pop
jecxz
pop
jecxz
xlat
pop
jecxz
jg
aaa
jg
jecxz
xlat
es
and
jecxz
and
das
xlat
and
sub
and
sub
and
sub
jecxz
xlat
jecxz,pn
sub
jg
xlat
sub
xor
sub
aas
sub
cmp
sub
cmp
aaa
jg
jecxz
xlat
ss
xor
jecxz
xor
add
xor
add
add
xlat
xor
push
aas
jecxz
xlat
jecxz,pt
cmp
jecxz
xlat
cmp
or
jecxz
xlat
cmp
adc
jecxz
xlat
cmp
jnp
sbb
pop
loop
loope
loop
loope
loop
adc
int
mov
loop
adc
loop
loope
loop
and
shl
loop
int
das
loop
loope
loop
sub
loop
sub
lret
loope
int
cld
int
lret
leave
loope
loop
aaa
loop
loope
loop
xor
loop
loope
loop
xor
shl
xor
shlb
loop
loope
loop
int
aas
loop
loope
loop
cmp
loop
push
loop
loope
int
cld
int
movsl
add
movsb
loope
loop
add
mov
out
int
cld
loop
loope
loop
push
loop
loope
loop
or
lods
loope
loop
int
or
stos
loope
loop
or
test
pop
loop
push
loop
loope
pop
jno
int
mov
loope
pop
loope
add
stos
mov
loope
pop
popa
stos
mov
je
out
loope
cmc
fwait
mov
adc
jecxz
loope
dec
loope
jecxz
loope
mov
mov
add
push
loope
jecxz
loope
repz
sub
jecxz
push
loope
jecxz
loope
jg
aaa
jg
loope
jecxz
loope
pop
loope
jecxz
loope
pop
loope
jecxz
loope
or
aaa
pop
loope
jecxz
loope
pop
loope
jecxz
loope
lds
ret
push
loop
xlat
jecxz
loope
xchg
loope
repnz
insl
lds
rcll
and
sar
loope
adc
loope
add
inc
insl
loope
adc
loope
push
loope
push
outsl
fwait
int
loope
loope
add
fndisi(8087
ficoml
sub
mov
out
loope
ss
and
cmpsl
adc
cmpsb
jecxz
loope
mov
out
xor
movsb
jecxz
loope
xor
aad
loope
adc
out
loope,pt
jecxz
loope
cmp
scas
jecxz
loope
cmp
scas
cmpsb
xchg
loope
loope
push
mov
mul
test
loope
mov
loope
adc
loope
jp
dec
jbe
cmp
loop
hlt
and
test
ljmp
outsb
cmp
loope
and
adc
loope
jecxz
outsb
out
loope
or
stc
jecxz
loope
push
loope
mov
xor
cld
or
jecxz
loope
adc
je
aaa
jg
loope
jecxz
loope
push
loope
jecxz
loope
sbb
iret
push
aaa
jg
mov
lret
loope
jecxz
loope
sbb
int
loopne
stc
popa
add
inc
loopne
in
loopne
adc
insl
in
loopne
inc
loopne
in
loopne
fistpl
imul
adc
in
loopne
add
push
in
scas
loopne
push
loopne
and
aas
push
loopne
in
loopne
in
loopne
in
loopne
mov
test
sub
pop
loopne
in
loopne
in
loopne
in
loopne
in
loopne
pushl
and
je
and
jae
and
jb
and
jno
and
jo
das
loopne
in
loopne
in
loopne
jge
sub
jl
sub
jnp
sub
jp
sub
jns
sub
js
aaa
loopne
in
loopne
in
loopne
add
inc
in
loopne
xor
lock
decl
lret
inc
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
or
or
add
push
in
loopne
add
mov
mov
in
loopne
in
loopne
in
loopne
or
jle
ss
or
or
lock
pop
in
loopne
pop
pusha
add
pop
loopne
push
loopne
in
loopne
in
loopne
jmp
adc
and
adc
and
adc
and
adc
and
pop
loopne
in
loopne
in
out
push
les
jmp
jg
ret
ret
mov
inc
out
in
inc
out
inc
les
inc
les
incl
dec
out
inc
les
les
jp
dec
out
jns
dec
out
inc
les
dec
les
dec
les
incl
lds
add
out
int3
lds
out
rol
es
cli
lds
out
loopne
das
out
fcmovnb
cs
movsb
lds
out
xor
sub
xor
lds
out
std
lds
out
lds
out
dec
lds
out
int
cmp
rol
out
iret
lds
test
out
jne
sbb
ja
sbb
jbe
pushl
out
je
cmp
out
and
push
out
jne
add
out
jmp
add
mov
ljmp
sbb
push
out
in
ret
or
out
test
out
incl
or
fcmovnb
or
pop
les
out
pop
les
out
mov
adc
pop
les
mov
sti
ret
ret
rol
adc
lret
ret
fiadds
in
inc
in
decl
inc
in
jecxz
inc
in
loop
inc
in
loopne
inc
in
and
out
dec
in
in
dec
push
std
in
repz
dec
in
hlt
dec
in
rol
in
ret
in
mov
in
mov
mov
call
mov
push
in
mov
push
in
mov
push
in
mov
push
in
mov
pop
in
decl
cmc
pop
in
into
les
cmp
int
and
mov
and
mov
outsl
in
mov
sub
es
push
ret
sub
sub
dec
ret
inc
ss
inc
xor
in
cli
xor
stc
xor
aad
xor
aam
ds
sarb
in
dec
ret
daa
ret
push
ret
sub
cmp
dec
ret
add
in
dec
mov
ljmp
dec
ret
push
ret
pop
ret
push
add
out
pushl
paddsw
push
in
pop
ret
rorl
or
test
or
add
mov
add
rclb
adc
push
rclb
in
push
rclb
mov
adc
mov
adc
movsl
rcrl
cmpsl
rcrl
jmp
les
jg
std
sub
in
ffreep
sbb
std
sbb
inc
in
flds
icebp
mov
jle
in
mov
in
dec
add
in
cld
ljmp
mov
in
pusha
and
mov
lds
in
jb
sub
inc
lds
in
jmp
xor
out
les
in
out
aas
in
fs
in
decl
lds
in
inc
push
jmp
movl
jmp
loop
jmp
loop
ljmp
loop
jmp
loop
jmp
push
xor
out
xor
por
loop
jmp
loop,pt
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
incl
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
decl
loop
jmp
loop
ljmp
inc
ljmp
inc
ljmp
inc
ljmp
dec
ljmp
dec
ljmp
ljmp
dec
ljmp
jmp
push
ljmp
push
ljmp
push
ljmp
std
jmp
push
ljmp
pop
ljmp
pop
push
lcall
sti
jmp
pop
ljmp
daa
ljmp
and
ljmp
and
and
shr
ljmp
cs
jmp
sub
lret
jmp
sub
leave
jmp
aaa
ljmp
xor
jmp
xor
shr
xor
shr
xor
shr
xor
shr
aas
ljmp
cmp
jmp
cmp
fsubr
pop
ljmp
add
ljmp
add
mov
jmp
out
mov
jmp
or
ljmp
or
stos
jmp
push
ljmp
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
jmp
push
ljmp
inc
jmp
aam
inc
jmp
rcl
inc
jmp
call
inc
jmp
dec
jmp
fst
dec
jmp
fcmovnbe
dec
jmp
fcos
call
dec
jmp
cmpsl
push
jmp
movsl
push
jmp
mov
push
jmp
call
push
jmp
scas
pop
jmp
lods
pop
jmp
stos
pop
jmp
test
pop
jmp
mov
es
mov
and
mov
and
mov
and
mov
and
mov
call
and
mov
das
jmp
mov
sub
mov
sub
mov
jbe
call
sub
mov
ss
test
xor
test
xor
divb
data16
insb
divb
divb
idivb
idivb
insb
ss
int
cmp
idivb
idivb
int
mov
idivb
testb
push
testb
add
add
add
add
out
int
mov
psadbw
testb
fildll
or
or
or
mov
pop
jmp
lahf
mov
call
jmp
arpl
adc
popa
adc
push
adc
imul
popa
adc
sbb
in
mov
mov
mov
pop
hlt
mov
pop
hlt
lahf
out
movl
cmp
inc
inc
inc
inc
repz
repz
dec
dec
dec
dec
scas
lods
or
out
sbb
cmp
repz
jmp
ljmp
cld
cld
sbb
out
jns
cmpsl
mov
mov
mov
out
sahf
shll
out
mov
mov
sahf
out
out
xchg
test
out
iret
jnp
ds
enter
push
sahf
in
dec
outsb
push
jnp
xor
jbe,pn
xchg
jne
xchg
je
iret
repz
jae
jb
repz
repz
jo
jg
repz
sarb
les
repz
push
jl
jp
out
fidivrs
lret
dec
lea
out
dec
mov
dec
repz
out
dec
mov
out
out
dec
push
xchg
xchg
jns
out
push
test
push
out
sahf
out
push
adcl
pop
pop
mov
out
in
in
daa
es
repz
xchg
and
pause
and
cmp
das
popf
cs
sub
cmp
lcall
repz
sub
iretw
repz
aaa
gs
cmp
bound
popa
xor
cmp
repz
push
inc
add
iret
add
add
sahf
out
sahf
inc
or
dec
repz
mov
mov
out
call
in
pop
inc
loope
or
fmull
inc
shrl
cmp
call
cld
enter
inc
jecxz
xlat
daa
imul
sbbl
scas
sbb
add
gs
call
mov
nop
out
jg
push
push
ja
sbb
push
test
add
nop
xchg
xor
pop
ljmp
mov
sub
ret
sbb
adc
mov
cmp
lahf
mov
fwait
pusha
or
jb
fs
insb
lret
ficoms
repnz
xchg
mov
cmp
ret
mov
push
stos
push
pop
cli
fldt
imul
mov
lds
cmp
bnd
jmp
inc
push
imul
sahf
xchg
iret
inc
cmp
lock
bound
jno
in
cs
int3
mov
in
sub
incl
mov
scas
and
lahf
xchg
sub
fwait
xchg
inc
outsl
repz
cltd
ljmp
aaa
cwtl
clc
ja
addl
cmpsb
lcall
adc
cmc
nop
lock
pushl
pop
stos
or
outsb
xorb
xchg
xlat
insb
add
sub
lods
push
lcall
push
cli
test
inc
inc
dec
into
aad
aad
aad
aad
aad
aad
aam
dec
popa
xor
sti
xor
add
cmpsl
stos
jbe
dec
arpl
xchg
rol
cltd
jns
sbb
scas
sub
mov
lcall
scas
mov
jne
cwtl
out
mov
or
dec
in
sarl
dec
mov
mov
and
and
aam
aam
aam
aam
aam
aam
aam
aam
mov
or
pop
gs
jge
ficompl
pop
mov
rcrb
sar
rol
ror
roll
fcmovnbe
mov
sarl
pop
lea
test
or
in
jae
mov
add
popa
pop
mov
mov
cmp
add
or
adc
sbb
jecxz
sar
shr
shl
icebp
jmp
lret
fwait
mov
subb
sti
pop
loopne
mov
inc
ret
arpl
imul
sarb
inc
rorb
push
rcrb
and
xlat
push
fst
mov
sar
jmp
sub
xor
cltd
cmp
rcr
shll
sarl
sar
lcall
daa
mov
lea
cwtl
mov
stos
icebp
gs
xchg
ret
and
int3
xor
decl
add
sbb
stos
mov
sbb
adc
decl
add
jns
push
int3
sub
fdivrl
fildl
lretw
lds
push
pop
negl
push
sub
mov
call
leave
lcall
fdivrs
push
fsubs
fdivrs
fmuls
fcomps
lret
sub
scas
cmpsl
ljmp
in
or
xchg
add
aaa
push
test
xor
push
xlat
fcom
mov
mov
call
scas
aad
push
mov
dec
dec
call
dec
rolb
mov
xchg
mov
sarb
xchg
mov
xchg
rcrb
shrb
push
int
xchg
sub
retw
incl
mov
and
sub
mov
shl
sar
sar
rcr
sub
call
jnp
push
iret
pop
mov
call
je
mov
rcrl
and
call
dec
rclb
pop
shlb
shlb
fbstp
js
cli
adc
ret
loope
notl
aaa
popa
call
xchg
arpl
ror
sbb
fstpl
fadd
fsubrl
call
cmp
push
cld
aam
movsb
mov
sub
nop
les
arpl
jmp
fldt
fnclex
fcmovb
fcmove
fcmovu
fisubl
push
mov
test
pushl
fwait
pop
xchg
js
fdivr
pusha
imul
push
jb
jl
inc
pop
flds
lret
pushl
jp
lods
int
jno
fwait
in
rorl
dec
faddl
pop
mov
fstl
shll
ljmp
rorl
rcrl
rcr
rcrb
jl
xlat
pop
push
mov
mov
xor
or
pop
mov
lcall
xchg
lcall
adc
out
jmp
fldl
addr16
push
lcall
call
aas
mov
fisttpll
les
xchg
sub
jle
xor
or
ficompl
ljmp
fiaddl
sbb
xor
cmp
test
aaa
stos
cmc
add
fistpll
push
push
lods
jl
call
dec
orb
lret
fsubrs
popa
cmc
lcall
pop
cmp
stos
mov
jnp
clc
je
fsts
xchg
jl
jle
dec
aam
inc
cmp
call
pop
and
push
aas
decl
inc
cmp
jmp
hlt
repz
lock
std
cld
sti
cli
adc
loope
clc
movl
loope
xchg
inc
aas
fcmovu
fsubs
inc
inc
adc
adc
inc
mov
sub
inc
aas
pushf
outsb
cwtl
addr16
jmp
arpl
pusha
outsl
outsb
insl
insb
imul
ja
jne
jae
jno
jg
jge
jnp
jns
inc
incl
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
daa
jmp
and
and
cs
sub
ss
xor
ds
cmp
incl
add
out
push
or
or
push
adc
adc
push
sbb
sbb
js
or
pop
mov
sbb
adc
movsl
movsb
mov
scas
scas
lods
lods
stos
stos
test
mov
mov
mov
add
popa
clc
adc
adc
adc
popa
pop
add
add
xchg
xchg
sbb
sbb
add
popa
daa
add
add
xchg
xchg
sub
decl
add
cltd
add
add
adc
sbb
adc
push
notb
and
mov
sbb
and
cwtl
xchg
xor
decl
addb
jo
pop
addb
lahf
lea
sbbl
jg
inc
insb
sub
or
in
dec
lahf
or
push
add
std
add
cmc
ljmp
addr16
pop
mov
aas
add
adc
test
add
scas
rolb
testl
rorb
or
orl
mov
sbbb
xchg
add
rolb
addl
lcall
adc
mov
ret
or
or
xchg
mov
test
or
push
sbb
in
adc
icebp
cmpsl
inc
invd
inc
inc
add
sub
mov
mov
enter
add
mov
mov
inc
pop
and
mov
mov
inc
dec
jle
nop
xor
cs
in
add
xlat
add
inc
ret
inc
add
fisttps
ret
mov
push
lret
orl
fucomi
fisttpl
bound
roll
adc
rclb
rolb
add
or
mov
loopne
or
and
and
push
fistpll
push
imul
ret
xchg
jle
inc
mov
mov
or
fwait
add
mov
fisttpl
idivb
sbb
add
subb
adc
and
mov
pusha
add
mov
xchg
add
mov
mov
inc
loope
pusha
push
fsubrl
mov
or
stos
add
and
cmp
mov
insb
xchg
xchg
xchg
enter
nop
and
call
test
call
addb
and
nop
addb
sbb
cmp
pusha
or
and
incb
mov
and
popa
or
pusha
add
pop
adc
ja
in
aam
mov
aam
pusha
sti
outsl
and
loop
loope
loope
sub
cmpsb
mov
mov
cli
loop
xor
out
clc
adc
popl
add
jno
pusha
jbe
dec
add
insl
dec
outsl
insl
gs
ljmp
insl
arpl
ja
push
jbe
mov
scas
lds
mov
sti
fs
xchg
fcomip
nop
xchg
mov
pop
mov
cltd
mov
loopne
lret
leave
int
ljmp
call
icebp
clc
stc
in
add
add
add
add
or
or
sub
or
adc
jg
jmp
add
add
nopl
adc
pop
or
sbb
rolb
dec
das
and
pop
inc
inc
or
loop
add
mov
lret
lret
cld
stc
fucomip
iret
add
test
rcr
dec
fxch
icebp
loope
int
decl
loopne
js
push
mov
sbb
push
or
sub
add
or
int
xchg
dec
dec
dec
add
adc
inc
sbb
push
sbb
dec
xchg
aad
in
testb
or
add
pop
cmp
out
inc
add
es
add
pop
adc
pop
add
sbb
jo
push
push
push
push
dec
push
pop
sub
pop
int3
fcmove
imul
lret
outsl
sub
incl
and
bound
arpl
push
jge
imul
jle
insb
loope
sub
adc
add
or
or
add
outsl
cld
sahf
lcall
mov
mov
mov
add
lea
add
pushf
orl
test
mov
mov
xor
cmp
andb
and
daa
cmp
fistl
nop
push
add
inc
int3
pop
sbb
add
loopne
cmpsb
adc
adc
inc
repnz
orb
sahf
enter
add
je
cmp
jg
cmp
jecxz
fnstsw
mov
fwait
adc
test
fstl
loopne
das
repnz
roll
pop
outsl
add
jg
pop
dec
shlb
imul
jge
inc
scas
jbe
jns
fs
dec
push
bound
mov
pop
pop
add
pop
in
jle
or
dec
add
imulb
ljmp
jecxz
decl
rcl
lods
add
xchg
add
hlt
mov
or
adcb
rol
xchg
mov
mov
xchg
xchg
add
scas
stos
insb
stos
test
jmp
lock
pop
push
push
push
sbb
inc
pop
pop
mov
mov
cmpsb
mov
cmc
out
jg
pop
and
test
movsl
cwtl
int3
mov
scas
out
mov
lcall
mov
popa
push
dec
add
inc
add
mov
stos
stos
mov
add
arpl
sti
pusha
jmp
cld
mov
repnz
stc
idiv
mov
cs
jmp
mov
dec
inc
inc
dec
dec
add
pop
dec
out
mov
mov
pop
push
push
push
add
push
adc
adc
insb
sub
cli
jg,pn
addb
mov
jecxz
out
test
incl
clc
cmc
hlt
clc
mov
incb
mov
jmp
pop
mov
xor
adc
add
sbb
mov
add
add
pop
jno
pop
aaa
das
jp
inc
xor
cmp
jl
cmp
or
ja
xchg
stos
mov
scas
movsb
mov
mov
stos
mov
jle
add
mov
adc
pop
or
cmpsb
push
sbb
or
pop
push
add
clc
mov
jle
lods
stos
scas
mov
inc
mov
test
in
add
or
ljmp
loope
enter
push
aam
inc
outsb
imul
bound
jb
dec
sti
incl
sti
data16
jo
sbb
pop
je
outsl
push
js
and
imul
outsl
push
sahf
lock
mov
movsb
clc
sub
lods
mov
sub
add
dec
pop
clc
decl
add
or
add
sub
cmp
mov
dec
pop
dec
pusha
pop
push
bound
push
inc
push
call
scas
test
stos
cmpl
mov
mov
sbb
mov
or
adc
es
icebp
fildl
and
out
in
mov
sub
xchg
popa
and
push
jge
ljmp
inc
inc
push
inc
inc
jbe
dec
adc
pop
dec
icebp
add
push
add
insb
jl
push
pop
cmp
rorl
jno
jo
jb
pop
insb
outsl
jge
fildll
push
mov
and
lock
incl
sar
loope
loope
pusha
cmp
aaa
cmp
daa
and
xor
jmp
ds
es
sub
movsl
push
lahf
push
mov
xchg
popf
pushf
test
nop
nop
sub
and
adc
sbb
adc
cld
sti
scas
cli
call
loope
ljmp
and
insb
js
add
stos
stos
sbb
sub
sbb
push
adc
adc
fadd
rol
jmp
lock
cwtl
shl
into
enter
push
adc
pop
adc
test
scas
addl
mov
in
in
mov
outsl
cli
xchg
in
cli
stc
mov
mov
mov
mov
ljmp
jecxz
into
mov
outsl
jae
jno
adc
jb
jo
in
outsl
inc
ret
cld
repz
loopne
ret
repnz
or
add
jle
imul
cli
adc
push
inc
pop
ja
pop
inc
dec
inc
pop
add
mov
out
rclb
jp
inc
push
outsb
jb
add
inc
jle
jno
add
add
aad
shl
repz
xchg
loopne
adc
testb
mov
add
lods
addl
xchg
xchg
sbbb
sbbl
mov
mov
mov
cmpb
mov
mov
xchg
mov
push
adc
stos
pop
jmp
clc
incl
jno
shl
jecxz
cmc
jno
push
outsl
mov
lods
inc
mov
jmp
mov
test
jb
pushf
cltd
int3
add
fiadds
add
and
pushl
push
inc
adc
add
xchg
mov
dec
cmpsb
mov
cmp
sub
cmp
sub
lock
or
sbb
sar
aaa
pop
je
adc
xor
mov
xchg
mov
xlat
incl
sub
pop
lods
lods
scas
mov
rcrb
popa
jecxz
cli
out
and
mov
jg
cld
mov
mov
or
fcoml
cld
dec
pop
icebp
int3
roll
rcll
ret
jmp
in
in
je
testb
add
mov
add
sub
mov
push
sub
lock
jno
lahf
popa
addr16
jle
push
loop
call
jp
jo
addr16
jbe
cli
dec
dec
push
incl
push
sbb
dec
dec
push
pop
jg
inc
add
dec
pop
or
dec
data16
js
sarl
add
mov
mov
add
nop
mov
mov
or
icebp
xor
sub
idivb
jg
cmp
mov
outsl
jb
sbb
push
lock
fildl
loop
pop
dec
inc
and
dec
pop
push
jns
add
push
fcomip
or
pop
push
add
inc
push
inc
pop
jnp
imul
insb
cmpsl
ss
add
ja
popa
gs
js
rol
jg
push
inc
push
ds
or
mov
loope
das
rolb
push
pop
adcb
pop
dec
dec
mov
xor
add
sti
fistl
pushf
mov
push
jne
repnz
pop
dec
pop
pop
and
or
ljmp
in
mov
out
pusha
fdiv
das
fs
bound
cmp
cmp
sub
cld
mov
jmp
or
or
pop
aas
and
xor
adcb
aas
adc
cmp
lcall
in
add
lea
test
adc
sub
adc
ja
bound
jo
cmp
jg
push
add
adc
push
xor
adc
adc
je
fadds
adcl
fcoms
xchg
popf
lahf
mov
inc
xor
dec
inc
inc
pop
incl
xchg
sahf
sbb
or
adc
imul
jns
xor
xor
fcomp
lret
fcmovne
call
in
in
lock
in
ret
add
bnd
clc
cmp
cmc
std
div
loop
call
jl
or
fisubl
es
inc
pop
dec
pop
inc
dec
inc
xor
xor
adc
fiaddl
cmpsb
outsl
ljmp
push
add
ljmp
xabort
mov
loopne
add
sbb
add
aaa
add
shl
pop
fcoms
push
pop
dec
adc
inc
inc
jo
pop
push
add
pop
push
push
pop
push
ds
mov
or
mov
nop
xchg
imul
sub
push
add
push
cmp
or
jo
loopne
fisubs
mov
cs
jne
pop
es
mov
mov
or
movsl
rolb
test
add
shlb
xchg
ljmp
aad
ret
aam
lea
idiv
pop
insl
clc
add
and
xchg
or
and
pop
sub
and
and
pop
mov
in
adc
test
std
pop
and
mov
or
pop
or
jo
call
push
push
xchg
sbb
das
jp
sub
xor
aas
cmp
push
adc
icebp
add
decl
add
jo
or
cmp
sbb
aaa
ss
mov
cmp
sub
test
and
add
test
jmp
loop
jmp
mul
mov
adc
sar
loop
ret
clc
mov
in
mov
and
add
adc
imul
jmp
adc
push
dec
dec
sbb
out
and
das
jp
add
mov
sbb
sbb
add
dec
dec
adc
xor
das
sbb
cmp
jbe
imul
add
shl
hlt
stc
add
cli
out
mov
insl
mov
icebp
mov
stos
xor
in
add
lcall
bound
xor
add
pop
sbb
xor
mov
adc
sbb
lods
add
mov
or
mov
rol
movsb
shl
fcmovnu
aad
rolb
leave
decb
jno
jle
imul
gs
pop
jbe
decl
stos
scas
movsb
es
in
stos
mov
aaa
adc
push
push
pop
add
sub
pop
adc
add
arpl
pop
inc
jnp
cmp
push
and
sbb
and
and
and
sub
mov
aam
pop
push
cmp
push
push
push
adc
sub
out
das
clc
call
xor
rol
xlat
loope
add
lret
xlat
enter
sahf
icebp
enter
jno
push
xchg
enter
add
ffreep
enter
rcr
fcomp
pushf
add
call
enter
aaa
push
push
add
push
insl
data16
mov
xchg
add
mov
mov
adc
add
mov
lcall
ret
jg
mov
adc
rcrb
ljmp
inc
add
inc
outsb
dec
add
jbe
dec
push
adc
add
incl
adc
push
add
ja
push
inc
cmp
jnp
sub
and
add
incl
fs
je
add
add
ljmp
push
aam
roll
lret
enter
orl
mov
jns
mov
add
adcb
push
lea
mov
mov
jmp
mov
movsb
mov
xorb
pop
and
cltd
test
add
sub
and
xor
daa
xor
or
jg
lcall
mov
pop
sbbl
jl
ds
movsl
mov
add
outsl
push
add
sbb
rclb
sub
sbb
jl
outsb
push
inc
gs
jl
mov
icebp
scas
clc
push
mov
jno
ja
mov
sbb
add
add
test
rolb
rcl
pushf
test
sbb
sbb
pop
roll
add
dec
cmp
call
pop
insl
jle
jge
pusha
dec
push
sub
imul
insb
inc
dec
je
jnp
data16
lcall
cmpsb
pop
jge
pop
pop
inc
jo
jl
dec
push
inc
push
dec
add
lcall
imul
push
inc
outsb
outsl
pop
pop
push
adc
adc
aas
rcll
movsb
scas
add
das
cli
jmp
mov
adc
insb
push
jne
xor
addr16
scas
clc
decl
jno
pop
inc
push
or
pop
rorl
jnp
and
jp
sub
add
clc
add
lea
mov
cld
outsl
aam
lcall
mov
movsb
mov
fcomip
ljmp
in
mov
add
nop
test
cltd
popf
pop
cmc
pop
rcrb
add
xchg
and
loope
and
daa
add
sub
fwait
cmp
sub
aas
add
adc
sub
sub
xor
add
incl
fs
sbb
push
pop
xadd
stos
movb
icebp
scas
test
divl
jmp
mov
mov
jmp
lods
test
clc
lcall
fldl
test
fmul
clc
cmp
pushf
mov
add
mov
lds
xchg
jl
jmp
scas
filds
hlt
repz
cmpsl
mov
add
pop
jbe
scas
mov
and
sub
jp
arpl
aas
jae
jns
jge
inc
dec
incl
jp
jo
je
popa
inc
xchg
inc
push
dec
dec
push
or
add
adc
and
in
push
inc
push
adc
dec
dec
push
dec
pop
and
push
and
and
add
lret
cmp
adc
mov
cmp
ds
jg
cmp
adc
add
push
adc
or
add
outsb
and
inc
adc
decl
add
out
push
add
sbb
mov
fucompp
loop
add
in
lods
mov
add
cmc
mov
jmp
out
cmc
outsl
xor
shrb
rcl
ret
jg
pop
jl
fmul
ffreep
in
les
shl
xlat
and
fcmovu
xchg
decl
call
lahf
test
cmpsb
mov
scas
mov
inc
mov
movsl
mov
popa
and
xchg
xchg
pushf
lret
fwait
clc
sub
xchg
sahf
fwait
test
cwtl
mov
pushf
rcr
lcall
or
jle
insb
jp
add
imul
xor
inc
data16
pusha
ss
jmp
or
inc
inc
pop
dec
dec
add
dec
sbb
popa
call
pop
pop
pop
sbb
pop
pop
push
xor
push
push
sbb
cmc
jecxz
rcrb
mov
movsl
stos
cmpsl
mov
lods
mov
push
jbe
je
jl
jo
cmp
fcmovnbe
in
adc
js
aaa
sbb
jae
add
sbb
popf
fsubs
aad
js
dec
pop
pop
ljmp
lcall
movb
stos
cld
mov
add
clc
popa
add
adc
adc
add
outsb
push
pop
mov
dec
jo
jo
sbb
xchg
add
das
pop
push
sbb
sbb
add
push
pop
inc
fs
insl
andb
inc
js
arpl
xchg
outsl
int
push
movsb
inc
pusha
jo
je
addr16
mov
xchg
fwait
xchg
jae
inc
jg
sub
pushl
jae
pop
dec
push
dec
add
pop
pusha
or
es
decl
std
loope
cli
decb
sbb
inc
add
and
sub
icebp
popa
add
pop
inc
pop
dec
pop
dec
or
push
add
call
push
inc
inc
loopne
test
xchg
xchg
loope
lock
ffreep
rcr
rcrl
xchg
jmp
ss
int
add
lret
in
fld
sbb
add
jo
sbbb
scas
decl
mov
mov
mov
sub
std
jg
and
arpl
pusha
andb
push
rcrb
out
add
add
fcmovnu
xchg
call
ret
scas
aaa
cld
in
push
mov
mov
or
jge
pop
pushl
je
add
add
sub
das
cmp
das
and
sub
and
aad
incl
pushf
add
rcr
cmp
aam
adc
lods
enter
enter
push
add
adc
jg
int3
or
prefetch
add
or
inc
adc
dec
scas
jg
and
fwait
mov
xchg
and
sub
lret
lahf
lcall
sub
xchg
ret
lds
or
cmpsl
inc
mov
lock
mov
push
sbb
loop
clc
adc
xor
insb
insl
int3
sub
jae
ja,pn
das
clc
mov
pusha
push
outsl
outsl
push
and
pushf
call
pop
jge
push
lds
jns
outsb
xor
jns
fdivl
jbe
das
imul
clc
jnp
sub
inc
imul
shrl
add
sti
icebp
test
jmp
mov
cmpsb
mov
outsb
gs
decl
add
sub
add
ret
mov
sub
lods
add
sub
fs
xchg
inc
pop
push
mov
pushf
vmovapd
mov
pusha
into
mov
repz
cmpsl
in
add
cli
cmpsb
mov
stos
incl
xchg
add
call
jecxz
add
fcmovne
flds
inc
jg
icebp
mov
cmp
adc
cmp
sub
dec
add
mov
sarl
add
bound
je
xor
imul
cli
fsubs
pop
pop
aam
fsubrl
cmp
push
push
mov
push
add
mov
test
mov
add
cld
add
sbb
test
xchg
cli
add
insb
bound
outsl
or
mov
pusha
or
inc
popl
add
je
ja
insl
xor
notb
into
xchg
add
fisttpl
fbstp
mov
push
add
inc
jo
mov
mov
cld
std
div
mov
mov
pop
out
std
or
jmp
clc
clc
add
stos
mov
popfw
pushf
xchg
call
push
rol
cmpb
pop
inc
inc
inc
inc
or
sbb
ret
mov
push
dec
push
pop
inc
dec
push
push
or
lcall
inc
dec
inc
add
ja
hlt
je
scas
int
adc
push
cmp
mov
imul
mov
xchg
or
sbb
add
add
adcb
addl
add
test
add
fwait
ret
add
test
push
add
cmp
push
pop
add
add
pusha
push
scas
inc
xchg
push
jno
lret
inc
cmpb
pop
mov
add
stos
test
arpl
push
int3
and
stos
insb
pop
add
add
sub
add
lods
mov
cmp
sub
ljmp
arpl
pop
mov
add
add
outsl
ljmp
adc
mov
add
mov
xchg
add
jb
pusha
callw
and
popa
add
mov
add
xchg
scas
mov
adc
stos
adc
hlt
mov
test
push
or
incl
cmpsb
and
pusha
add
stos
mov
sahf
cmpsb
inc
xchg
lcall
mov
outsl
push
xorl
adcb
mov
mov
sahf
scas
inc
orl
add
push
lock
and
push
xchg
mov
stos
xor
popa
push
lock
mov
and
cs
xchg
lcall
leave
or
adc
pop
xchg
sar
out
hlt
and
rcrb
inc
mov
mov
movsl
xorb
scas
movsl
je
jo
test
mov
inc
dec
and
pusha
fsubl
movsb
scas
clc
mov
movsb
lods
test
mov
or
lods
andb
mov
and
jmp
push
xchg
imulb
test
mov
cli
outsl
clc
cmpsb
mov
add
nop
movsb
jo
test
cwtl
sub
test
inc
stos
add
inc
push
pop
mov
mov
add
sbb
fbld
push
repnz
mov
and
fsubl
lock
cmp
add
test
adc
and
push
lret
add
pop
fsubl
lret
mov
inc
mov
cwtl
inc
xchg
adcl
mov
orl
addb
out
orb
addb
xchg
xor
dec
mov
pop
cmp
mov
add
mov
lcall
clc
shlb
test
cmp
xor
xor
xor
shlb
xchg
ljmp
enter
clc
or
mov
ffree
test
inc
ljmp
rcrl
cmpsb
cmp
icebp
sbb
test
sub
popa
push
cmpsb
and
mov
leave
add
xlat
repnz
in
jecxz
daa
scas
jo
mov
xor
or
lcall
sub
add
mov
test
and
pop
push
subb
pop
dec
xor
rorb
mov
cmp
lret
and
lcall
test
and
push
pop
movsl
xchg
xchg
mov
add
or
addb
or
cld
sti
sub
xchg
xchg
orl
push
das
movsl
mov
test
mov
cmpsb
or
sti
mov
add
push
scas
xor
inc
sub
repnz
pushl
mov
mov
push
popf
mov
adc
push
mov
xchg
adc
xor
addb
mov
push
add
jnp
mov
add
scas
push
fcompl
mov
movsb
mov
mov
xor
push
jno
mov
sub
sbb
mov
adcl
jg
shlb
mov
inc
roll
xchg
lock
lock
nop
push
inc
jno
mov
arpl
icebp
dec
mov
and
adc
push
hlt
aaa
add
pop
movsb
aas
mov
mov
call
dec
add
dec
cmp
in
cmp
popa
cwtl
aaa
mulb
mov
add
lock
cld
add
jmp
sbb
lock
adc
hlt
lcall
add
and
nop
pop
xchg
lock
push
jno
mov
aaa
test
jbe
adc
roll
lds
ret
dec
lds
fdivs
jo
es
orb
jb
xor
push
mov
fnsave
std
mov
ljmp
das
xchg
adc
mov
fldl
mov
sti
fwait
test
mov
add
loop
orb
inc
mov
inc
pop
cmpsl
movsb
lret
mov
call
arpl
enter
orl
or
nop
cs
jo
cli
in
adc
jne
repnz
mov
or
fs
setp
lds
punpckldq
xchg
in
mov
dec
stos
push
fildl
inc
arpl
xchg
movsl
mov
mov
push
dec
repnz
cmc
cs
js
rolb
insb
rclb
cmp
hlt
sbb
das
and
xor
pusha
cmp
or
pcmpgtd
mov
lret
mov
add
aam
mov
clc
cmp
insb
or
dec
jecxz
je
add
scas
cli
push
ltr
lods
cmp
mov
xchg
loope
push
pop
loopne
lret
mov
inc
push
fistps
add
pop
out
lds
add
push
mov
mov
test
xlat
sbb
aam
cld
loopne
clc
packsswb
inc
and
mov
addb
and
imul
pusha
orl
pusha
mov
add
mov
add
or
ss
adc
add
pop
das
add
add
push
fldl
jbe
aam
outsb
push
pushl
cmp
xchg
adc
bound
push
lea
jle
fildl
push
dec
xchg
xor
add
movb
cs
aas
push
insl
cld
fisubrl
xchg
es
shrl
aam
cvtpi2ps
aas
pop
adc
lock
loopne
loopne
pop
xchg
ret
cmpsl
and
and
xchg
test
incl
lods
cmpb
andl
aad
pop
xor
add
push
add
adc
mov
subl
outsl
addb
adc
xorb
mov
andb
adc
lcall
data16
add
pop
mov
and
push
xchg
jmp
sbb
xchg
inc
sub
dec
cs
out
add
jp
stos
jecxz
andl
lcall
and
sbb
dec
daa
loopne
out
out
cli
mov
shrb
push
add
aas
or
fs
fs
rcrb
es
adc
pop
fs
out
loope
add
xchg
sahf
cmp
mov
outsb
add
or
ss
movsb
xchg
andl
mov
lods
jmp
fdiv
cs
xchg
mov
mov
fs
in
int
ret
mov
cmpps
outsb
pop
bound
cmpsb
call
shl
mov
xchg
add
mov
cmp
nop
push
and
sbb
sbb
sub
inc
sub
pushl
sbb
pop
cs
sbb
push
push
paddb
negb
ret
jecxz
loop
xchg
jecxz
rolb
adc
adcl
fs
cmp
sbb
hlt
mov
mov
push
push
bound
call
sbb
inc
add
mov
push
inc
and
dec
mov
in
add
outsb
mov
cltd
lock
sarl
or
shlb
inc
incl
mov
rolb
add
jb
inc
push
sbb
addb
adc
and
inc
shll
fs
addb
insb
clc
jmp
jb
push
inc
xorl
outsb
mov
shlb
adcb
loop
pop
or
jecxz
mov
mov
fisttps
gs
add
adc
add
inc
ds
sub
or
mov
out
add
or
dec
adc
adc
sbb
pop
mov
fidivl
sahf
xchg
ret
incl
xchg
adc
add
loopne
enter
inc
bound
imull
xchg
mov
repz
xor
sub
add
add
mov
xor
imul
or
mov
mov
push
mov
sbb
inc
sub
ret
clc
pushl
adc
loopne
pop
rorb
bound
xchg
ljmp
fs
jg
out
pop
sbb
adc
jmp
loope
pusha
cmp
jecxz
outsb
mov
pop
cmp
adc
push
sub
fwait
ss
iret
fs
push
gs
cmp
inc
adc
mov
sbb
sbb
pusha
or
add
jmp
jle
lcall
pop
push
fildl
mov
add
inc
xadd
addl
push
pop
popf
xchg
enter
push
mov
pop
add
and
sbbb
mov
pop
ljmp
out
outsb
jecxz
push
decl
sbb
je
mov
jecxz
out
mov
push
std
sbb
mov
ret
push
xchg
cmc
xor
add
and
pusha
pop
ret
pop
pushf
cmp
xor
scas
ss
fs
push
jge
jp
gs
mov
or
bound
add
or
addb
lcall
fwait
push
fsubl
adc
adc
fiaddl
and
pop
je
addb
addb
hlt
mov
or
sub
adc
mov
or
sub
jp
in
push
pop
call
dec
movsb
xor
and
fwait
addr16
loopne
data16
mov
loopne
insb
pop
sbb
repnz
jmp
leave
adc
insb
pop
mov
and
inc
pusha
add
push
insb
mov
loop
dec
and
loopne
inc
lock
icebp
mov
cmp
mov
and
and
jp
dec
ss
or
fcos
incl
sti
loopne
push
and
and
and
inc
adc
mov
lcall
mov
mov
add
es
adc
mov
mov
push
mov
mov
mov
jecxz
push
add
inc
push
adc
loopne
addl
mov
shlb
dec
pop
add
mov
outsb
ljmp
sbb
stos
or
out
xor
or
out
stos
pop
mov
mov
decl
mov
mulb
add
add
and
cs
adc
in
mov
mov
cs
pushf
jmp
ret
cmpsb
outsl
aaa
push
stc
cmpb
pusha
mov
jecxz
mov
pusha
and
rolb
inc
add
mov
pusha
sbb
shll
cmpsb
aad
sbb
push
adcb
shr
fiaddl
cmp
cmp
mov
loope
and
rorb
or
jecxz
jg
ljmp
xchg
mov
lock
mov
aad
adc
js
sub
filds
add
cmp
fisubrs
ret
test
dec
scas
inc
xchg
int
jl
mov
jmp
mov
mov
add
mov
adc
push
pop
mov
in
popa
add
filds
pop
mov
testl
nop
adc
gs
xor
aam
daa
adc
adc
dec
aam
push
lcall
mov
mov
xor
push
mov
or
andb
insb
lcall
mov
add
nop
in
add
cmovns
mov
lock
mov
andnps
add
adc
or
jmp
insb
mov
mov
fcmovnu
and
lock
sti
shrb
push
outsb
dec
pavgw
shrb
loopne
test
xor
mov
nop
push
xchg
jnp
or
add
aas
loopne
inc
pop
adc
push
int3
sbb
test
add
add
repz
sar
in
mov
pop
rcll
add
mov
and
adc
ljmp
loopne
divb
push
jmp
inc
cmp
fiadds
clc
fisubrl
add
bound
ss
and
inc
jle
dec
lock
and
push
cli
push
inc
stos
bnd
adc
add
es
xor
adc
inc
je
push
clc
xlat
scas
cmpsb
mov
adc
cmpsl
or
adc
inc
cmp
push
add
xchg
int
jno
xchg
vmovsldup
roll
xchg
std
push
xchg
icebp
mov
rclb
pop
mov
xchg
pop
add
jno
adc
xchg
testl
and
lock
loop
or
nop
mov
push
lcall
add
dec
daa
rolb
loope
paddd
add
mov
and
add
push
insb
rolb
push
popa
aas
mov
ud0
jg
negb
daa
and
push
add
les
push
pusha
add
inc
nop
sarl
pop
loopne
cwtl
outsb
test
outsb
push
mov
cmpsb
adc
adc
push
iret
mov
decb
mov
inc
call
ds
mov
cmp
or
mov
filds
add
nop
insb
stos
add
ret
xchg
in
push
xor
mov
push
test
iret
popa
or
add
insb
js
pop
xor
shrl
add
jl
or
mov
xchg
prefetchwt1
or
test
call
pushl
push
scas
mov
and
push
inc
rcrb
lock
add
or
mov
outsb
mov
jmp
push
and
shlb
push
cmove
mov
popf
add
lcall
inc
pusha
inc
dec
mov
or
pushf
in
mov
pop
or
insb
adc
punpcklbw
fadd
sar
mov
sub
inc
push
and
mov
shlb
out
push
mov
dec
jo
push
pop
jno
or
add
push
sbb
repnz
mov
rcll
add
xchg
loope
ljmp
roll
mov
pop
fs
xor
push
lret
push
jno
mov
mov
pop
mov
clc
and
arpl
xor
cmp
lock
mov
mov
pushl
jb
jo
mov
icebp
adc
cmp
xor
adc
insb
add
xchg
xchg
mov
xchg
or
add
pop
sbb
or
sbb
adc
mov
mov
fists
pop
les
addb
mov
sub
jae
inc
fiadds
adc
mov
sbb
shrb
cs
fildll
cli
div
sbb
xlat
insb
pop
test
xor
lcall
icebp
jo
fneni(8087
pop
and
sbbb
push
lcall
es
out
ss
add
or
adc
jecxz
pop
add
cmpsb
data16
mov
xchg
ds
xchg
mov
cld
cmpsl
mov
in
sub
jg
scas
xlat
jae
mov
daa
loopne
lock
scas
scas
ljmp
adc
mov
xor
or
movl
push
mov
arpl
sub
jp
setge
add
ret
out
loop
add
cwtl
imul
adc
bound
call
or
outsb
jecxz
out
xchg
jmp
xchg
loopne
sub
jo
insb
jne
arpl
bound
dec
mov
scas
lcall
xchg
mov
xchg
mov
cltd
cld
incl
cmp
clc
xchg
xlat
pop
int3
add
jmp
xchg
mull
mov
dec
aaa
andl
es
icebp
scas
sbb
adc
pusha
jecxz
clc
or
loopne
xor
cmpsl
incl
sti
pop
js
adc
push
sub
leave
insb
loope
and
adc
sbb
pop
std
call
aam
add
es
jecxz
ret
stos
jmp
xchg
push
outsb
dec
clc
adc
push
test
mov
push
sbb
cld
jmp
sub
xor
out
shl
cld
das
sahf
xchg
sbb
mov
mov
and
lret
rolb
fistps
and
mov
adcb
cli
add
outsb
loopne
mov
nop
mov
jmp
mov
xchg
add
shlb
insb
and
xor
add
add
jg
ret
push
jecxz
mov
aad
clc
vmwrite
add
hlt
fisttps
ljmp
xchg
cmc
insb
repnz
mov
sar
pop
in
aad
in
cmpsl
fs
and
adc
and
mov
mov
jmp
sbb
or
or
sti
cmp
in
or
fsubrl
sub
stc
xchg
in
fs
push
rorl
adc
adc
iret
in
cmpb
cmpsb
adc
stos
hlt
xchg
mov
cmpsb
insb
push
sbb
inc
pop
in
push
add
cmc
decl
dec
iret
pusha
lods
mov
mov
and
fs
mov
dec
cmpsb
fs
push
pushl
and
mov
mov
add
mov
xchg
out
shrb
adcl
push
sbb
fisubs
repz
sar
ljmp
mov
mov
rorb
mov
psubd
inc
xor
pop
mov
incl
sbb
das
loopne
push
idivb
rcr
mov
stos
std
fildll
cld
loope
push
iret
test
pop
pop
xchg
shlb
jmp
test
ficompl
add
jg
incb
sete
in
outsb
add
mov
inc
adc
inc
dec
cmpsb
xor
imul
cmp
dec
pop
outsb
push
aad
arpl
pop
call
push
aam
rorb
mov
adcl
or
sbbb
cmpb
push
sbb
add
rcr
xor
add
divl
mov
mov
pop
sbb
mov
arpl
pinsrw
push
sub
xchg
sbb
mov
iret
add
mov
in
cmp
xchg
and
out
dec
jae
sbb
subb
arpl
xchg
or
divl
pushf
pop
and
add
jmp
lcall
fsubr
mov
jmp
cmpsb
ds
faddl
cmp
out
sub
shrl
xor
push
fmulp
add
std
mov
lock
adc
test
pop
subb
orl
stc
pop
shrb
outsl
ljmp
xchg
repz
ljmp
add
sub
push
ss
or
sub
ja
or
outsl
pop
lock
add
js
or
cwtl
mov
les
data16
mov
or
jbe
fcompl
sbb
in
pop
or
and
adc
adcb
fsubl
inc
rcr
icebp
mov
loope
cmp
out
mov
rcll
outsl
xchg
and
mov
xor
add
hlt
out
les
nop
stc
mov
push
insb
mov
mov
add
add
orl
arpl
out
xchg
mov
add
mov
aas
mov
adc
rolb
adc
cli
sahf
rcrl
adcb
out
cmovge
addr16
fwait
arpl
inc
add
or
ljmp
out
insb
in
pop
inc
sub
sbb
out
or
rol
sbb
push
outsl
or
cmp
sbb
inc
aam
mov
xor
jge
outsb
add
ret
stos
shll
add
test
out
icebp
clc
fs
mov
add
mov
add
call
adc
xchg
rolb
fstps
out
jo
and
fisubrl
push
push
add
adc
adc
push
inc
push
in
xor
mov
mov
or
fdiv
mov
and
cmpsl
adc
hlt
rorb
adc
or
jp
js
mov
mov
or
inc
xchg
xchg
mov
insb
cmp
mov
pop
rcrb
in
sbb
xchg
add
and
pop
push
mov
add
pop
lock
fs
sbb
movsl
aam
lock
pop
movsb
stos
mov
push
adcb
adc
xor
xchg
xchg
push
sub
cwtl
ljmp
inc
movsb
fildl
scas
pop
test
test
add
fcmovne
aam
add
add
outsb
mov
push
lea
rorw
adc
popw
lods
adc
mov
fisttps
js
inc
mov
pop
xchg
adc
loop
xchg
addb
test
pop
ds
fsubrl
add
cli
add
lcall
bound
add
subb
mov
adc
and
mov
test
stos
mov
dec
scas
call
and
or
fadds
mov
pop
mov
xchg
push
or
cmpsb
dec
and
cmpsb
orb
xor
xchg
push
in
adc
setg
add
dec
sub
movsb
push
mov
cld
outsl
mov
in
mov
xor
push
mov
or
cmpsb
push
testb
scas
adc
inc
or
inc
pop
mov
pop
add
aas
add
add
enter
jnp
add
outsl
sahf
mov
arpl
flds
movsb
add
add
stos
bound
inc
loope
fsub
add
and
jl
faddl
push
gs
mov
mov
in
out
bound
inc
adc
mov
fbld
push
inc
pop
test
pushl
adc
or
xchg
mov
psraw
out
push
xchg
test
and
lcall
hlt
sub
scas
pop
dec
pop
inc
push
int3
inc
push
test
add
fs
sbb
lock
sub
mov
mov
xor
add
adc
add
cmp
jg
or
adc
mov
adc
outsl
pop
test
test
add
push
adc
inc
mov
loop
mov
subl
loopne
xchg
scas
ds
add
xchg
mov
pusha
pop
inc
shll
adc
sub
add
stos
rcr
ljmp
xchg
jmp
push
cmc
insb
loope
in
out
mov
aaa
pop
in
xchg
rorb
pop
add
and
sbb
sub
cld
stos
jle,pn
sub
and
add
add
adcl
add
lods
push
ret
lret
adc
testl
ret
mull
rolb
push
je
sub
and
and
push
js
inc
fcomps
mov
xlat
hlt
and
andb
lea
test
in
inc
push
std
add
xchg
test
insb
loopne
mov
fwait
jbe
fbstp
ret
mov
ficompl
ret
lock
hlt
ljmp
ret
fisttpl
jbe
mov
mov
add
mov
cltd
push
test
fmul
pushl
add
pushl
popa
xchg
insb
adc
mov
addl
or
mov
popf
shlb
push
in
adc
lea
mov
aas
push
call
adc
xchg
aam
imul
inc
cmc
fistps
cvttps2pi
sbbb
sbb
bound
sbb
dec
jecxz
loopne
pop
sub
cmp
out
sbb
and
sub
xlat
cmp
mov
mov
xchg
jmp
add
dec
sub
sbb
mov
push
mov
movsl
or
pop
pop
mov
incb
pusha
or
addr16
mov
cltd
stos
outsl
push
outsb
xor
pop
or
jb
sbb
mov
ss
pusha
add
mov
call
pop
nop
add
ljmp
je
xchg
orb
insb
mov
hlt
push
add
add
decl
jb
pop
add
test
outsl
sarb
mov
add
xlat
les
dec
lock
push
add
sbb
cld
js
loopne
inc
and
mov
cli
inc
jle
add
pop
ds
rorb
movsl
mov
mov
das
dec
add
jg
rcll
fisubs
test
stos
cltd
insl
mov
mov
xchg
in
adc
outsb
pop
push
in
scas
cmp
es
in
out
inc
sti
mov
call
add
andl
mov
icebp
gs
and
out
sub
jle
and
pusha
and
in
aaa
add
adcb
lock
or
adc
cld
pop
out
inc
imul
mov
mov
mov
iret
in
rorl
lock
out
jo
mov
mov
push
ret
insb
loopne
sbb
sahf
add
add
add
lcall
fcmovnu
nop
push
in
pop
add
fiaddl
dec
xor
xchg
jno
push
jb
jg
rcll
add
push
mov
xchg
incb
jmp
mov
mov
add
add
push
sub
mov
push
jge
decb
sbb
cltd
subb
mov
pop
mov
cmpsb
sti
pmulhuw
add
add
fnsave
adc
icebp
je
and
cli
ja
nop
dec
mov
or
hlt
push
stos
outsb
outsl
stos
call
aaa
push
call
dec
xor
cld
xorb
lsl
sbb
cmp
add
rorl
adc
and
aad
cld
dec
mov
mov
fs
adc
and
cmc
add
push
adc
in
push
call
call
xchg
hlt
insb
inc
mov
jno
insb
clc
ljmp
out
lock
fbld
xchg
jo
xor
pop
pusha
popa
sbb
push
and
cmp
sub
mov
lock
aam
add
cli
ljmp
push
and
ret
ret
inc
ja
decl
add
adcb
outsl
jo
or
push
mov
or
mov
mov
ljmp
and
loope
xchg
push
jecxz
sbb
incl
push
cmp
lock
add
xchg
std
data16
or
fildl
loopne
or
faddl
sbb
getsec
sbb
fsubrs
ficompl
lcall
mov
jmp
push
mov
fsubl
adc
push
push
jle
mov
push
bound
add
loope
or
cmp
nop
mov
pop
push
mov
or
push
add
mov
fwait
and
fcomps
in
fisubrs
dec
aad
xchg
lcall
sbb
xchg
mov
ret
dec
outsl
or
fdivl
lock
sub
mov
pushw
mov
call
dec
adc
outsb
test
decb
push
iret
sti
jno
pusha
or
mov
into
cli
fimuls
or
xor
fildl
outsb
mov
fisttps
xlat
or
xchg
add
inc
and
inc
pop
fcmovu
fisttps
pop
mov
dec
inc
or
push
les
cmc
push
test
loope,pt
jnp
pop
fwait
jg
sti
sbb
cmpsl
push
pop
push
push
add
and
fwait
insb
mov
pop
and
inc
sbbb
or
push
loopne
stos
outsb
mov
test
mov
stos
faddl
lret
bswap
sti
adc
push
ja
mov
sbb
sbb
dec
in
scas
dec
mov
push
call
ret
jmp
das
clc
stos
pop
adc
sahf
jecxz
outsb
cmpsl
jo
cmpsl
mov
call
bound
or
into
bound
add
xlat
cs
les
aad
adc
pop
cmp
and
mov
jg
xorb
inc
rclb
xor
or
inc
es
mov
push
push
iret
mov
jle
shlb
std
sbb
cmp
adc
stos
mov
insl
cltd
or
nop
add
aam
sbb
pop
add
add
stos
call
leave
into
lock
jmp
lock
ficoms
jg
jle
repnz
xchg
adc
mov
mov
mov
and
sar
xchg
xlat
imull
xlat
sbb
shlb
push
fwait
and
sbbb
mov
xorb
mov
adc
outsb
stos
push
loope
ljmp
loopne
add
or
or
jo
lahf
insb
arpl
push
rol
bound
ret
fwait
mov
scas
cli
jmp
testl
and
add
rolb
mov
and
inc
loope
insl
aam
andb
adc
mov
xchg
pop
hlt
pop
mov
in
popa
es
jmp
bound
adc
pushl
pop
outsb
sbb
jmp
jno
ret
pop
mov
inc
div
js
test
add
xchg
cmpsl
lock
mov
mov
adc
xchg
testl
sbb
sub
pushf
mov
sbb
xor
jmp
mov
lock
adc
movzwl
mov
sbb
xchg
add
por
add
and
outsl
clc
mov
push
add
dec
lret
mov
cmp
repnz
dec
out
iret
mov
or
loopne
push
std
mov
dec
lock
ficoms
filds
testl
sbb
popa
pop
push
adc
add
add
pusha
jle
push
mov
or
push
mov
roll
fisubl
add
int
adcb
ss
xorb
test
xor
mov
or
out
add
cli
inc
lea
add
jmp
mov
repnz
icebp
pushaw
sub
loopne
out
jno
inc
xor
and
loop
ret
jg
sbb
and
add
notl
inc
in
cmp
push
or
push
add
mov
int3
outsb
cmp
add
mov
inc
add
mov
and
fmull
sbb
add
sbbl
adc
int3
or
lahf
pop
movsb
ret
js
xchg
pop
or
scas
add
lret
add
test
push
xchg
loop
pop
or
or
pop
mov
ficoml
and
mov
call
ss
rcr
or
cli
adc
test
pop
cmp
mov
cmp
jl
cmp
lods
adc
dec
dec
inc
mov
or
ret
in
sbbl
jbe
dec
and
add
push
ret
out
xor
and
bound
insb
out
mov
mov
pop
lea
and
loope
and
mov
imul
es
jge
add
shlb
cmp
add
in
cmp
mov
xchg
sub
xchg
xchg
add
lea
mov
leave
mov
jg
in
add
stc
or
loop
pop
add
ss
fs
lods
mov
scas
notl
pop
pop
lcall
dec
xchg
xorb
inc
adc
inc
fdivs
shlb
ret
leavew
add
add
add
jp
inc
jl
sbb
repz
testb
pushl
inc
or
or
je
out
push
and
stos
fcom
incl
vmread
insb
and
or
xor
sub
xchg
repnz
bound
and
adcb
add
sub
pop
add
and
add
add
push
cmp
or
loope
es
cmp
mov
daa
sbbb
mov
incl
inc
call
xchg
add
or
aad
and
and
or
mov
daa
jecxz
pop
add
jecxz
push
loop
sub
or
pop
ret
push
je
xchg
int3
push
das
rclb
js
or
ja
subb
test
aaa
and
mov
jl
and
and
mov
inc
push
in
js
jb
insb
nop
testl
loopne
clc
mov
test
shrl
add
scas
insl
repz
loope
notl
addl
imul
sbb
incl
jmp
add
mov
orl
inc
sub
fnstsw
rorb
add
jp
adc
in
mov
or
clc
cmp
sub
and
cli
das
clc
or
repnz
cli
int3
pop
insl
jmp
insl
into
sub
adc
fcomi
jg
add
call
or
mov
out
jp
imul
out
add
icebp
decl
loopne
xchg
cld
fsubrl
nop
xor
test
pop
loope
add
and
ss
in
and
push
adc
data16
addb
bound
push
pop
sbb
xlat
mov
insb
mov
adc
jle
negb
outsb
jp
push
call
inc
sbb
cmp
and
mov
inc
and
bound
sbb
loopne
stos
loop
pop
or
dec
call
pop
punpcklwd
loope
shrb
inc
pop
std
mov
orb
or
inc
fwait
hlt
test
or
xchg
pop
mov
mov
shlb
aad
ds
sbb
mov
cs
insb
lock
and
push
mov
push
sbb
jg
pop
pmulhw
outsb
cltd
loopne
call
and
inc
rclb
stos
adc
mov
ficoml
aam
mov
lock
cmp
popa
fwait
daa
test
or
pop
xchg
lock
ljmp
fs
mov
adc
cli
lcallw
aad
pop
push
xchg
popa
or
insb
nop
loopne
cmpsb
mov
ljmp
adc
add
and
rclb
fiadds
lods
outsl
mov
popl
rolb
add
sbb
testb
jl
sub
hlt
and
insl
es
cmpsb
cli
pusha
sub
cs
add
jg
and
xor
cs
mov
es
or
and
fmull
in
insb
test
sbb
out
outsl
clc
fistl
hlt
data16
xor
push
movups
inc
mov
fcomip
and
and
bt
and
mov
jmp
sub
sbbb
push
or
pop
in
xchg
out
lds
inc
add
adc
sub
in
loopne
std
and
inc
test
or
mov
mov
or
push
sub
sbb
ljmp
add
lcall
xchg
out
or
add
nop
xchg
and
mov
dec
aas
mov
mov
sbb
mov
mov
cli
ret
cmp
pop
shrb
inc
imul
in
mov
and
add
fsubrl
xchg
lcall
mov
mov
and
sub
jb
mov
xlat
pusha
push
lret
cld
cmpb
add
addr16
aam
and
adc
movb
and
nop
or
insb
ljmp
jb
push
bound
orb
add
xchg
add
xor
iret
mov
and
adc
mov
sarb
sub
add
jno
mov
push
nop
sbb
mov
movsl
adcb
mov
sbb
mov
jg
and
pusha
test
mov
mov
jl
and
and
mov
mov
ret
mov
or
insb
test
sbbb
adc
cwtl
sbb
or
xlat
testl
addr16
es
or
xchg
mov
call
jmp
movl
add
lcall
rcll
push
mov
push
add
lock
push
add
jle
pushf
mov
mov
incl
mov
or
mov
mov
call
xor
xchg
adc
jb
mov
or
sbb
lock
loope
or
sbb
inc
sarb
ljmp
pavgw
sahf
ja
idiv
stos
push
scas
in
pop
aaa
push
cli
mov
lea
fdivp
xchg
adc
aam
fcoml
xchg
or
mov
adc
cltd
es
loope
adc
fwait
add
insb
sbb
decl
pop
mov
mov
das
adc
repnz
hlt
xchg
push
clc
or
loope
mov
aaa
jl
adc
xchg
mov
pop
lock
pop
repz
xor
push
jmp
sbb
ljmp
inc
imulb
push
sub
divl
add
jle
test
sti
fsubrl
stos
js
clc
push
adc
loope
sbb
je
in
add
adcb
repnz
xchg
ss
andb
mov
xlat
mov
ds
or
push
inc
sub
pop
shlb
push
xchg
jmp
add
mov
xor
lock
xorb
dec
mov
sbb
mov
pusha
movsb
lock
lret
xchg
icebp
mov
hlt
xchg
cmp
mov
loop
popa
pop
in
adc
fs
pusha
mov
sub
mov
outsl
and
adc
jo
push
pop
call
nop
cmp
mov
mov
push
int3
inc
jg
cmp
mov
xchg
mov
sbb
or
mov
push
xchg
inc
ljmp
push
add
adcb
bound
movl
loopne
lea
dec
pop
adc
inc
loopne
mov
push
pop
inc
mov
mov
sub
add
or
pop
lock
sti
mov
add
aam
sub
test
ret
mov
mov
repz
movsb
inc
int
jo
adc
pop
lods
fdivrl
lret
cld
mov
push
fdivl
xchg
cmpsb
rolb
adc
cmpb
lcall
jecxz
and
adc
lock
dec
fs
test
cmp
pop
clc
push
icebp
push
push
std
decl
lock
daa
loope
call
bnd
icebp
dec
xchg
push
add
cmpsl
xorb
ret
inc
mov
loop
push
aad
jb
xchg
adc
scas
inc
or
inc
push
and
mov
scas
ja
ljmp
and
cs
icebp
xor
add
push
movsl
dec
hlt
rcr
popf
sbb
sub
pop
mov
jecxz
outsb
add
jo
rclb
dec
add
es
mov
mov
mov
adc
je
aaa
xor
pushl
pop
nop
jo,pn
and
mov
or
push
mov
sbb
lods
fisubrs
mov
and
stos
pop
packsswb
add
setb
jmp
or
bound
add
out
inc
loopne
sbb
lock
cli
dec
adc
cld
pop
je
cld
mov
sbb
push
mov
jo
or
xor
jmp
adcl
filds
lods
decl
enter
add
sbb
inc
sbb
in
loope
outsb
mov
push
add
pop
pop
lock
fnstsw
add
repz
xor
aaa
mov
clc
sti
add
les
call
cli
repz
add
pop
fwait
arpl
inc
or
cmp
mov
out
rol
add
nop
mov
movsb
pop
jl
cmp
fs
fsubl
sbb
fisubs
lock
test
inc
fidivl
adc
mov
adc
insb
dec
adc
stc
xchg
add
push
cmp
and
dec
jg
incl
jo
sbb
or
out
mov
test
inc
seta
and
sub
jg
loopne
inc
lock
mov
call
mov
insb
sub
adc
aad
push
and
fs
insb
decl
jg
pmullw
and
rclb
ret
add
shl
inc
adc
mov
enter
loopne
mov
pop
add
push
js
loopne
mov
rcrb
test
mov
pusha
in
shlb
dec
xor
arpl
fstp
cmc
or
adc
adc
push
pop
xor
lcall
mov
pusha
ret
insb
lods
xchg
insb
cmpsb
add
movsb
lods
adc
punpckhbw
dec
adc
xchg
nop
jg
or
das
xchg
dec
sbb
push
push
shrl
adc
incl
andl
mov
and
insl
xor
outsl
or
insb
lcall
cmpsl
fs
fwait
mov
dec
xchg
or
jecxz
setle
ljmp
bound
cs
jmp
pop
xor
pop
stos
jbe
cld
lock
clc
pop
cmc
and
punpcklbw
shll
out
nop
or
sbbl
mov
adc
cmc
cmp
sbb
add
adc
push
sub
dec
test
xor
lret
adc
call
fcomps
fisttps
call
mov
pushf
xchg
push
mov
je
daa
jle
test
mov
mov
mov
xor
cmp
in
jo
xor
and
inc
push
ret
cs
mov
lcall
mov
and
and
aad
add
pextrw
sub
call
xchg
aas
call
mov
mov
rorb
xor
outsb
loope
fistl
aas
pop
arpl
xor
adc
jnp
add
xchg
mov
mov
in
inc
loop
inc
adc
cmp
xchg
shlb
loopne
xchg
pcmpeqd
bound
cmp
or
out
add
adc
add
mov
movzbl
and
adc
cltd
inc
push
xlat
sbb
mov
xlat
subb
subb
cltd
jecxz
xor
pop
rorb
and
add
xor
insb
stc
in
ret
cmp
movsb
out
add
mov
fcomip
adc
clc
cmc
addr16
nop
or
xchg
or
outsl
hlt
nop
decl
or
xchg
or
or
in
pop
mov
add
add
sbb
fistps
xchg
pop
or
ss
repnz
jecxz
and
out
xor
xchg
mov
dec
and
push
add
push
lret
push
rorb
cld
stos
mov
push
push
add
mov
inc
imul
int3
jo
lret
lea
sbb
mov
cmp
mov
rorl
push
mov
je
inc
jp
or
mov
lcall
add
int3
jo
fiaddl
addr16
enter
pop
mov
ja
nop
lods
mov
mov
pop
fs
in
adc
in
xor
outsb
dec
rorl
movsb
inc
sub
xor
add
pop
mov
sub
add
jg
loope
push
or
mov
cmpsl
nop
cld
add
push
mov
and
jmp
push
test
add
mov
mov
into
shrb
mov
pop
inc
addl
add
and
mov
mov
mov
out
or
js
loopne
mov
or
in
das
add
mov
addl
imul
and
or
mov
sbb
add
out
and
clc
insb
add
adc
mov
shrl
fcoml
pop
xchg
jb
clc
outsl
add
mov
jmp
add
fs
ficomps
push
or
push
andb
pusha
subb
neg
aaa
test
inc
arpl
or
ficoml
in
aad
pop
scas
and
add
cmpsl
sbb
rcl
add
ss
or
in
pop
push
scas
xchg
adc
fimull
jns
sbbl
ret
or
xchg
lock
notl
lds
inc
add
cmp
xor
loopne
mov
or
adc
mov
mov
movsb
ret
bound
iret
or
adc
inc
incl
loope
insl
movsb
incl
sbb
jmp
out
xchg
mov
push
add
inc
pop
lock
icebp
add
xor
lret
icebp
aaa
push
and
xchg
ret
mov
lock
pop
pop
jmp
inc
sbb
inc
test
lcall
lahf
ljmp
int3
orb
into
mov
scas
xchg
jle
and
sbb
xchg
sub
add
pop
xchg
in
or
ja
fwait
sbb
pop
adcb
add
or
push
mov
cli
inc
mov
pop
mov
push
mov
lcall
popl
aam
inc
test
add
add
xlat
les
dec
pusha
sub
pop
add
lods
hlt
test
inc
xor
inc
sbb
rolb
fs
out
sbb
rolb
and
shr
cli
test
mov
insb
push
fs
insb
xor
pop
and
pop
push
cs
pop
jge
jmp
popa
pop
stos
or
push
por
inc
lods
loop
loopne
in
int3
sbb
push
mov
jecxz
rcl
sbb
sub
or
or
nop
out
sbb
jo
mov
out
cmpsb
mov
or
fdivrs
mov
sbb
sbb
mov
and
subl
add
jecxz
outsb
and
test
cwtl
lds
or
jle
subb
testl
push
fisttpl
inc
bound
add
lcall
iret
push
popa
loopne
cmpsb
mov
push
or
seto
xorb
mov
dec
mov
out
stos
adc
int3
in
and
movsb
ret
sub
adc
mov
mov
mov
cld
cmp
cmpsb
mov
sbb
xchg
or
fmuls
jecxz
adcl
andl
pop
loopne
addr16
lcall
add
andb
push
xor
mov
push
rorl
adc
ds
fwait
das
xor
push
adc
add
inc
add
lcall
ret
fs
into
test
add
psubb
andb
mov
fistps
in
aaa
fsubrl
adc
pop
inc
and
rclb
dec
aas
ret
dec
dec
lds
jecxz
inc
mov
push
cmpsl
loope
inc
scas
nop
cmpsl
mov
aas
jb
dec
rcrb
add
popl
adc
outsb
cmpb
insb
idiv
add
xchg
stc
fdivl
std
call
in
int3
cld
outsl
cli
mov
loope
ss
or
loope
add
movsl
sbb
mov
aam
fildll
es
push
nop/reserved
je
inc
or
sbb
movsl
or
and
mov
mov
xchg
push
das
fidivrs
sti
cltd
mov
push
in
push
jo
jmp
mov
sbb
mov
ljmp
fisttps
xor
shrl
andb
mov
jmp
loope
ds
lea
jge
data16
cwtl
mov
sbbl
add
mov
imul
icebp
sub
add
jle
fisttpl
cmp
loope
sbb
inc
push
mov
sbb
addb
mov
loop
cmp
movsl
orl
and
jg
add
push
lock
in
inc
inc
add
notb
xchg
sub
and
adc
fmulp
and
cld
daa
adc
jbe
mov
loop
sahf
mov
arpl
iret
add
fmuls
outsb
mov
je
add
orl
sbb
cmpb
sub
mov
mov
mov
js
mov
add
pop
adc
negb
addr16
out
xor
mov
add
push
popa
inc
sahf
loop
fs
mov
lret
add
sbb
adc
mov
dec
jle
sarb
dec
fs
nop
inc
sarb
rolb
dec
xor
dec
les
int3
hlt
loope
adc
and
inc
adc
push
lcall
inc
roll
jo
loop
adc
inc
cmp
sbbb
mov
push
aas
bound
mov
add
mov
mov
ja
mov
or
wrmsr
mov
sbb
inc
mov
xor
and
rorb
jo
call
inc
mov
fisttpl
push
add
push
insl
out
mov
or
rorb
add
pusha
add
fbld
or
xchg
jecxz,pn
notb
push
cmp
add
mov
dec
push
data16
clc
xchg
add
and
insb
sti
push
mov
rolb
sub
mov
or
rcrl
stos
dec
dec
push
mov
dec
int
inc
xor
mov
xchg
shlb
call
imul
movsb
xchg
dec
lock
shrl
adc
jecxz
shll
add
add
std
mov
adc
sub
sub
adc
xor
xor
xor
mov
gs
fdivrl
iret
clc
xor
test
inc
or
adc
rolb
outsb
aaa
xor
pop
mulb
sbb
dec
loope
loopne
insb
lcall
and
pop
lar
add
into
out
or
push
pop
subb
mov
mov
mov
pop
dec
jl
sbb
lock
pop
add
aaa
add
lock
xchg
shrb
adc
test
inc
push
inc
loop
out
cli
sarl
jge
pop
push
push
nop
insb
cmp
hlt
adc
xchg
adc
insb
mov
xchg
jmp
jl
mov
xchg
dec
shrl
fidivs
test
pop
add
jmp
xchg
and
lds
movsb
nop
xchg
stos
or
sbb
sub
jb
mov
sub
add
add
insb
das
call
aas
sub
aaa
mov
loope
ljmp
sbb
shr
icebp
push
sbb
repnz
loopne
add
cmovo
adc
adc
fs
jmp
jmp
lcall
sysenter
xor
aas
movsl
mov
add
aam
rcrb
movsb
outsb
or
jl
add
push
jle
add
shufps
sub
loope
out
fmuls
jo
bound
pop
das
jo
paddsb
adc
into
push
add
loopne
xchg
sti
fcmovne
xchg
repz
xchg
jecxz
clc
pop
sbb
or
push
jecxz
in
add
mov
in
push
out
insb
rcrb
xchg
jmp
xchg
out
mov
and
xor
punpcklbw
loop
into
call
push
inc
mov
mov
add
scas
insb
loope
mov
bound
out
sbb
xchg
jmp
hlt
lret
inc
daa
pop
cmp
mov
aas
push
push
pop
setle
add
movsb
out
adc
mov
pusha
insb
movsb
jmp
hlt
sbb
and
add
add
pushf
xchg
xchg
lret
std
out
outsl
cld
aaa
or
out
or
xchg
sti
lea
fbstp
loopne
cmpsb
jg
insl
mov
push
jecxz
sub
add
test
aam
push
adc
subb
lcall
sbb
cmc
filds
movsb
xlat
xor
jno
add
pop
jo
popa
adc
int3
add
pusha
sahf
add
xlat
insb
and
decl
and
ss
and
push
ja
add
mov
adcb
jae
popa
movsl
aam
push
cmp
sbb
mov
push
mov
jae
adc
es
or
ds
push
bnd
pop
nop
ja
outsl
mov
fs
add
cmpsb
mov
or
clc
mov
add
xor
movsb
add
mov
mov
mov
push
rcrl
decb
das
adc
jb
shl
and
or
add
jmp
cmpsb
out
adc
aam
inc
daa
jo
hlt
out
cmp
dec
inc
xor
fsubp
mov
sbb
fwait
test
je
out
adcb
xor
sub
sub
pushf
call
sbb
xchg
loope
adc
add
movsb
das
clc
fildll
es
adc
sbb
adc
adc
cmp
push
mov
nop
cmc
push
lcall
and
push
or
xchg
sbb
ljmp
inc
xchg
mov
les
push
jne
add
and
dec
mov
mov
rcll
shl
or
int3
mov
adc
mov
movsb
and
xchg
pop
or
mov
and
sub
inc
into
aam
out
or
cmp
add
cs
adcb
add
or
std
fists
mov
rolb
and
out
dec
bound
test
cmp
cmp
ret
mov
pop
int
repnz
mov
mov
mov
andl
mov
scas
aam
jl
scas
cli
cmpsb
fsubrl
icebp
ret
shlb
xchg
ds
clc
adc
cmpsb
mov
xor
fistpl
adc
sbb
xchg
cmp
mov
add
pop
xchg
xchg
and
hlt
test
aam
jmp
icebp
push
xchg
pop
test
add
inc
insb
lods
mull
adc
fsubs
int
cld
in
aaa
and
loopne
mov
test
dec
pop
push
mov
mov
mov
mov
adc
mov
adc
push
lods
pop
or
call
in
call
mov
outsl
mov
int3
add
add
les
or
jg
add
in
add
pusha
pop
icebp
fists
out
bound
mov
push
adc
adc
in
add
pop
push
push
pusha
ret
push
fbld
push
jl
inc
jmp
add
out
pop
in
add
jl
fisubl
add
pop
call
bound
adc
sar
fdivr
push
int3
push
adcl
call
sbbb
sbb
jmp
lock
fsubrp
pusha
mov
ljmp
cmp
pop
sbb
loopnew
push
call
scas
fsubrl
xchg
adc
push
and
xor
jbe
stos
mov
jecxz
push
or
clc
xor
push
or
mov
hlt
pop
cmc
filds
outsl
mov
imul
adc
into
stos
ja
jne
or
es
sbb
ds
cli
ljmp
add
jb
cmp
jno
pop
and
sub
aas
mov
adc
cmp
repnz
imul
or
insb
aas
repnz
pop
das
push
ss
or
push
int3
sub
negb
int3
pop
faddl
cmp
outsb
stos
lcall
stos
insl
stos
push
mov
adc
sub
inc
mov
push
in
mov
adc
add
or
call
repz
xchg
jmp
and
mov
adc
dec
pcmpeqb
scas
ss
push
outsb
fists
sbb
fistps
mov
push
xor
push
out
loop
incl
mov
test
add
adc
jl
and
pop
sub
insb
cmp
fdiv
sbb
mulb
adc
add
faddl
lcall
bound
fistpll
mov
xchg
push
rcl
mov
sbb
sbb
call
stos
mov
popa
pop
push
loope
adcl
cwtl
sbb
addb
or
sbb
into
xchg
xor
out
ret
cmpsb
es
inc
mov
les
scas
mov
testb
loopne
inc
pushf
sbb
or
sahf
jle
add
or
fidivs
or
push
outsl
aas
dec
fsubl
sub
sub
push
and
int3
andb
push
jecxz
rolb
jmp
mov
arpl
imul
in
rolb
jbe
mov
adc
clc
add
pop
in
js
push
pushf
shr
mov
int3
ss
mul
ss
jo
ret
adc
sub
enter
mov
outsb
movsb
add
xor
out
mov
in
shrb
mov
jg
pop
mov
and
jle
fdivl
lock
lea
adc
xchg
outsl
jmp
cld
repz
out
push
cmpl
in
testb
inc
inc
and
add
in
sbb
and
loopne
mov
popa
incl
add
insl
lret
test
push
xlat
or
in
orb
ficomps
pusha
jmp
mov
sbbb
lcall
sbb
mov
jb
or
adc
negl
add
or
jne
loope
mov
push
lock
inc
loopne
loope
in
orl
add
pop
mov
push
sbbb
lods
jecxz
and
repz
jae
push
addr16
mov
push
adc
cld
xor
mov
or
femms
cmp
fsubs
jmp
shlb
xor
aam
add
mov
or
mov
shrl
or
rorb
sub
lcall
xor
addb
pop
pop
mov
lock
outsb
push
movsb
jecxz
add
jecxz
data16
inc
dec
inc
sub
xor
sqrtps
sub
or
cwtl
xchg
test
pop
add
mov
inc
or
adc
rorb
xchg
in
add
lcall
mov
repnz
shll
add
xchg
inc
cmp
adc
sub
or
mov
cs
xor
test
lods
lods
ret
and
and
mov
push
outsl
rolb
xchg
scas
push
leave
loopne
jg
sbb
jmp
cwtl
mov
xchg
jmp
xchg
mov
jg
mov
ret
xchg
mov
add
mov
insb
ljmp
addb
nop
cmpb
fldl
in
add
inc
pop
mov
fisttpll
mov
test
adc
jmp
into
add
js
cmp
mov
fs
sbb
xchg
jl
pop
imul
fimull
add
mov
sarb
inc
int
ss
add
incb
mov
add
xchg
mov
xchg
out
sbb
sbb
ret
mov
or
jl
rorl
dec
inc
xor
cmpsl
shr
popf
inc
stos
inc
add
mov
push
and
fimull
rclb
fldt
xor
inc
xor
scas
add
test
xor
push
sahf
cli
ljmp
incl
test
pusha
adc
add
push
add
xor
xorl
or
cld
push
gs
out
push
inc
inc
jl
jge
dec
aam
andl
popa
inc
outsl
mov
adc
and
pop
xor
or
mov
loopne
enter
andb
fadd
push
cmp
push
adc
jo
jbe
fidivs
pop
lea
and
dec
inc
ret
pop
inc
xor
lock
pusha
add
push
loope
mov
inc
insb
xchg
addr16
jmp
pop
fwait
loopne
adc
call
sbb
in
call
data16
mov
pop
push
jecxz
mov
xchg
out
sub
subb
or
repnz
or
orb
mov
mov
andb
mov
adc
jmp
loope
sbb
adc
lock
push
fidivrs
mov
fcoms
mov
iret
inc
cmp
stos
hlt
push
cmp
pusha
xchg
fsubrl
std
les
mov
pop
mov
shr
mov
and
pusha
push
push
mov
sar
add
xchg
and
scas
shlb
shll
fistl
mov
repnz
cmpsb
popaw
or
outsl
lods
adc
inc
add
or
push
cmp
insl
and
sbb
stos
pusha
pop
fs
push
mov
or
or
mov
sub
mov
pusha
mov
xor
outsl
push
in
in
and
das
rolb
filds
mov
mov
add
jmp
sbb
mov
in
or
int3
adcb
dec
pop
cmp
pusha
inc
popa
aas
or
ljmp
stos
shr
das
adc
test
xor
sbbb
daa
lret
inc
fs
inc
jg
lcall
lret
lea
xlat
sub
pop
shlb
cmp
clts
inc
and
pusha
add
scas
xchg
sbb
loopne
sbb
and
into
scas
mov
xchg
in
sub
icebp
repnz
sbb
sbb
roll
adc
adc
lcall
inc
loopne
roll
xchg
lods
sahf
lcall
or
or
add
icebp
fistpll
pshufw
clc
push
mov
push
in
movsb
cli
ljmp
loope
outsb
cltd
out
sbb
pop
insb
pusha
mov
sbbl
mov
mov
add
inc
xchg
adc
incl
pop
icebp
and
jecxz
adc
mov
test
incl
add
scas
jmp
in
add
out
outsb
dec
hlt
mov
adc
pop
jmp
mov
fsubrl
call
std
mov
subb
xchg
cmc
insl
mulb
xchg
adc
notb
jbe
pop
add
jmp
outsl
add
sbb
insl
adc
fsubl
cltd
rclb
in
push
insb
aam
xor
pop
sub
filds
repz
xchg
mov
out
out
xchg
push
daa
in
push
inc
outsl
mov
push
or
add
inc
sub
ret
add
adc
cli
sbb
or
ss
out
jmp
popf
sarb
sbb
loopne
inc
mov
mov
cvttsd2si
sbb
jbe
scas
int3
loop
in
lock
loop
nop
cmpsb
out
mov
pop
repnz
add
loopne
repnz
jge
sbb
outsb
cld
add
adcl
testb
inc
xchg
cltd
mov
cli
decl
repnz
adc
dec
out
shrl
scas
shrl
test
inc
insb
cli
xchg
add
xor
lcall
pop
shlb
add
or
shl
aaa
push
stos
pop
and
jg
add
adc
addb
sbb
and
decl
popa
shlb
push
push
ljmp
sbb
mov
nop
add
xchg
xchg
cmc
insb
mov
adc
jmp
xor
adc
and
xchg
or
jge
lock
shrb
jae
dec
pusha
dec
daa
loopne
push
out
mov
rclb
adc
test
cmp
jg
mov
push
and
and
lock
pusha
push
mov
lock
inc
lock
out
adc
andl
cld
mov
cwtl
or
and
inc
adc
adc
pop
cmp
incl
push
push
add
jno
int3
push
push
adc
add
lcall
jbe
or
fbstp
icebp
inc
scas
nop
xor
jecxz
adc
add
shrb
fneni(8087
jo
xor
xlat
adc
xor
xor
mov
xor
or
bound
rolb
cmpsb
xchg
insb
sub
insl
dec
test
push
loope
adc
cmp
jo
dec
in
and
mov
lcall
dec
pop
or
pop
inc
sbb
in
add
sbb
lods
add
lcall
add
and
and
cmpsb
inc
push
inc
aaa
pop
and
push
lods
jecxz
dec
or
mov
mov
fs
inc
adc
sti
xchg
add
mov
push
add
fxch
add
cltd
lock
mov
outsb
movsb
rorl
push
jo
addr16
xlat
ja
mov
add
loop
add
mov
pusha
out
and
mov
xor
outsl
jg
std
mov
sbb
call
in
addr16
xor
jecxz
incl
or
test
mov
mov
fistpll
ljmp
jge
add
mov
insb
in
add
stos
mov
sub
pop
inc
mov
test
jg
icebp
fbld
lods
push
add
pusha
adc
push
scas
stos
add
jmp
es
out
test
in
das
mov
pushl
std
xor
and
cmc
pop
pop
add
out
inc
push
incl
aam
shrb
dec
xorl
ljmp
sbb
sbb
add
testl
mov
mov
testl
shlb
or
adc
jno
call
and
fistpll
mov
jb
or
or
pop
xchg
mov
je
rep
mov
test
pusha
push
cs
pop
idivl
out
dec
lock
sbb
call
xchg
sti
mov
or
add
xchg
loope
clc
ljmp
and
leave
rclb
stos
ret
adc
sbb
push
xchg
inc
push
pop
andb
clc
decl
and
sahf
mov
push
mov
into
mov
pop
adc
sbb
pop
lock
xor
into
adc
jl
jb
push
jnp
sbb
mov
xlat
push
add
hlt
cmpsl
and
fdivs
call
icebp
pushl
inc
push
add
and
add
push
outsl
xchg
adc
jge
lods
clc
jg
sub
cltd
xor
xchg
fwait
addb
add
and
stos
pushl
or
out
popf
mov
xchg
test
mov
push
stos
mov
or
cld
pop
movsl
daa
cmp
popa
add
add
in
add
mov
sbb
out
nop
or
mov
mov
inc
xor
sti
insb
shl
inc
sbb
and
mov
ret
es
filds
in
inc
add
data16
mov
jg
mov
orb
push
scas
mov
shl
adc
xlat
mov
cmpsl
cmc
decl
xlat
jno
cmp
and
add
cmpsb
xor
cmpsl
add
imulb
mov
ljmp
adc
push
loopne
xor
mov
arpl
push
adc
or
and
mov
pushf
lock
cmp
adc
mov
dec
xor
lock
lea
sarb
mov
jno
sti
push
or
clc
jmp
addl
rcrb
push
movsb
incl
push
xchg
lcall
lods
jne
outsb
fwait
mov
rolb
in
scas
xchg
add
adc
das
loope
rorb
xor
fcmovb
shlb
mov
xchg
add
sbb
add
rclb
mov
mov
jns
pop
call
mov
xchg
add
fbstp
call
cld
daa
lock
push
rolb
sbbb
xor
shll
sub
adc
bts
out
push
push
pop
sub
and
loopne
adc
imul
decl
call
pop
loope
sahf
push
and
xlat
add
loop
nop
add
inc
pop
push
pop
sti
add
fs
into
repz
icebp
mov
cmp
mov
rclb
pop
jne
push
into
add
mov
in
scas
scas
xchg
mov
push
adc
out
mov
add
pushl
push
adc
push
push
add
and
lock
inc
shl
pusha
mov
mov
pop
add
test
mov
stc
insb
inc
add
adc
add
and
sub
xor
loop
add
cs
jno
out
xor
sar
aaa
cld
pop
sbb
nop
and
rorb
and
nop
cmpsb
cmovp
xor
fisttps
pop
bound
out
add
xchg
pop
cmp
pusha
popa
adc
push
enter
adc
dec
jg
dec
add
fwait
mov
xor
in
push
sub
xor
orb
push
push
ret
xchg
jbe
stos
push
sub
and
out
push
movsb
cltd
add
inc
mov
dec
loopne
and
pop
add
push
inc
add
add
sbb
jg
fimull
jb
sub
lock
bswap
jp
adc
stos
loop
xchg
push
addl
xchg
xor
iret
subb
mulb
lock
jl
xchg
pop
inc
mov
test
cwtl
add
lock
push
es
pop
aam
pushf
lea
inc
pop
jo
sub
insl
fs
cli
xchg
mov
pop
subl
mov
pop
mov
mov
fs
and
repz
push
mov
adc
jl
cwtl
stos
xchg
clc
mov
mov
addr16
adc
cmpsb
clc
add
lods
push
pushl
xchg
cs
inc
push
enter
int3
jecxz
and
pop
xchg
xor
outsl
xor
das
sbb
into
inc
push
push
add
adc
xchg
scas
pop
repnz
sbb
jl
bound
dec
lea
pop
inc
inc
mov
jl
add
add
mov
and
scas
dec
push
rolb
pop
loopne
dec
call
sub
or
stc
scas
mov
push
jp
pop
iret
imul
xor
jb
push
aam
sub
aaa
adc
adcb
xchg
sbb
xor
xchg
mov
in
lahf
aam
aad
insl
loope
mov
addr16
add
pop
lock
icebp
mov
add
sbb
cs
dec
mov
addl
nop
shr
out
inc
push
or
jecxz
out
shlb
adcb
ret
and
orb
or
jmp
jle
rorb
pop
jle
loopne
mov
jmp
add
add
testl
rorb
push
in
movsb
xlat
mov
adc
and
les
cmp
mov
fisubrs
mov
pop
sub
fidivrl
fstpl
es
int3
fs
jg
pop
add
fs
test
adc
movsb
out
mov
pusha
scas
fucomi
xchg
cmp
cmpb
pop
fdivrs
stos
add
mov
shr
das
xadd
shll
addr16
mov
decl
mov
insb
pop
cmove
ret
test
mov
push
inc
or
add
clc
and
inc
push
inc
pop
pop
pcmpeqw
incb
ds
and
jp
test
adc
fs
mov
pushf
rorl
sarb
add
xchg
hlt
addl
in
adc
popf
sub
stos
lcall
fstp
xchg
inc
jmp
mov
fldl
push
adc
jecxz
and
call
sbb
inc
dec
shlb
push
aam
adc
cwtl
hlt
sub
cmp
add
inc
pop
insl
mov
add
loope
aad
cmp
mov
add
lods
bound
adc
gs
mov
arpl
mov
incl
xor
cs
push
or
das
pushf
pop
adc
sbb
mov
dec
mov
xchg
mov
push
add
testl
and
in
add
mov
leave
xor
dec
loop
add
js
add
scas
sub
or
add
out
inc
test
and
add
and
mov
insl
in
arpl
dec
sub
xchg
test
xchg
loop
xchg
mov
adc
push
int3
loopne
movsl
mov
cmpb
sbbb
hlt
in
adcb
std
add
sbb
mov
movsl
or
lcall
cmp
dec
in
loope
ljmp
rorb
call
and
mov
and
xchg
loop
cltd
xchg
in
or
xchg
insl
push
stos
mov
test
mov
sbb
xorb
add
lods
xchg
push
add
and
pop
shll
fdivl
xchg
inc
loop
xchg
in
subb
loop
pop
enter
lcall
jecxz
dec
push
cld
bound
ret
mov
dec
std
popf
push
jb
scas
add
test
shrb
aad
cmp
call
mov
push
scas
ja
push
mov
addr16
call
push
cld
push
add
xchg
loopne
pop
div
add
xor
xchg
into
or
neg
push
addr16
les
ds
and
mov
or
push
adc
jmp
lock
adc
jmp
jmp
es
sarb
or
add
or
mov
inc
inc
outsb
loopne
adc
cld
outsb
stos
mov
mov
lcall
xor
adc
addl
adc
decb
loopne
stos
mov
mov
shll
cmp
pop
ret
and
insb
ljmp
jg
fidivl
pusha
not
in
data16
outsl
rcrb
call
xor
or
sbb
add
mov
shrb
aad
icebp
mov
popa
add
ret
insb
lret
insb
cmp
jge
test
add
jmp
adc
add
adc
cs
adc
pop
and
inc
out
movsl
insb
cli
mov
clc
pushl
sub
add
inc
shll
lea
fsubp
mov
push
push
inc
maxps
in
fisttps
dec
sbbl
sarb
add
mov
rclb
add
insb
xchg
jmp
xor
mov
and
lods
and
or
mov
loope
loopne
xlat
in
pop
xchg
lds
and
adcl
add
and
sbb
add
push
out
pushl
std
jg
movsb
out
outsb
mov
in
pop
test
mull
std
insb
sahf
jecxz
push
push
ljmp
subb
lods
loopne
incl
or
addb
or
es
insl
loope
ja
sbb
call
xor
push
add
push
incl
int3
je
inc
paddsw
and
pop
fbstp
adc
psubw
lret
pop
push
popa
or
icebp
int3
xlat
ljmp
fidivs
and
in
and
pusha
push
mov
subb
mov
or
mov
or
or
add
addr16
xor
pop
inc
fdivrs
ficoms
jmp
adc
mov
movsb
fs
fmull
push
les
add
inc
and
sbbl
mov
cmp
imul
shrl
out
pushw
and
test
pushl
push
push
adc
mov
pushf
pusha
pop
movb
xchg
aam
add
dec
cmp
sub
add
fcmovb
or
mov
les
push
cld
mov
shrb
push
inc
or
jae
bound
xor
lods
mov
and
std
loopne
xlat
hlt
mov
test
pop
mov
addl
out
sarb
mov
orl
jle
std
mov
outsb
pop
adc
xor
push
xor
mov
data16
es
add
lret
push
jno
je
lock
xor
push
das
pop
sbb
mov
mov
dec
cmp
push
shll
inc
mov
add
add
cmp
or
cmpb
movsb
or
sbb
mov
mov
pusha
or
xor
lods
pusha
ss
les
pop
add
imul
movsb
inc
add
loopne
mov
mov
sbbb
sbb
and
enter
add
pop
mov
daa
xchg
xlat
xchg
or
inc
cld
add
ret
lret
adc
add
adc
dec
xchg
std
push
push
or
push
inc
loop
mov
call
or
xor
sbb
xchg
push
or
loopne
mov
mov
or
push
mov
pushf
add
dec
mov
sbb
sbb
ljmp
push
jo
popl
decl
in
nop
add
add
mov
nop
clc
mov
fsubrl
jnp
inc
and
adc
xor
test
decb
mov
bound
dec
and
sbb
xor
push
sbb
enter
or
stos
les
test
xchg
lcall
adc
sub
add
addl
cmp
mov
adc
int3
scas
pusha
add
nop
mov
push
or
loop
push
mov
aad
rolb
ffree
jg
std
cmp
jg
call
outsl
fsubs
fdivl
arpl
rcr
pusha
loopne
lahf
mov
repnz
das
dec
in
add
push
das
and
movsl
subb
adc
lock
mov
rorb
lcall
aas
clts
nop
and
inc
xchg
mov
and
iret
sub
jg
pusha
and
orb
add
mov
prefetchw
rclb
inc
add
or
pop
sbb
movsb
orl
or
decl
aam
cmp
push
nop
push
cmp
and
push
bnd
or
out
inc
sub
mov
jb
dec
or
sub
cli
in
inc
cmp
decl
ret
nop
dec
out
and
push
jo
pusha
sbb
clc
xchg
enter
ss
sbb
add
add
inc
movsl
add
jg
add
pop
jl
mov
stos
add
fiadds
inc
add
adc
ljmp
xchg
hlt
or
add
repnz
out
mov
outsl
es
mov
or
jo
mov
fmul
lcall
cmp
mov
pop
negl
sahf
les
mov
inc
insb
clc
int
inc
rclb
rorb
fs
xor
hlt
and
or
xorb
pushf
cmp
or
roll
dec
jo
sub
data16
getsec
in
mov
add
imul
sbb
cmp
pop
xor
mov
add
xor
or
sbb
xor
icebp
lcall
loopne
ret
add
rorb
repnz
sub
test
push
xchg
add
ficoml
clc
jbe
mov
inc
add
jp
or
add
jp
adc
pop
push
pop
scas
xor
xor
mov
test
mov
idivb
movsl
cmpsb
dec
or
cmp
pop
or
mov
ja
xor
call
fisttpl
mov
add
cmpsl
repz
loopne
pop
or
sub
aaa
or
movsb
roll
inc
and
sbb
cld
aaa
or
dec
addr16
and
ret
fisttps
sahf
and
cmpsl
xchg
in
xor
add
jno
mov
stos
or
mov
out
out
push
loop
mov
mov
xchg
sbb
addl
cltd
nop
pop
psrld
mov
dec
mov
ljmp
mov
loopne
jnp
add
ficomps
andl
enter
push
out
out
mov
outsb
call
es
mov
sete
into
add
out
add
incl
cmp
cmp
adc
mov
divl
mov
jb
repnz
pop
adc
jmp
pop
adc
xchg
sbbb
movsl
outsb
mov
jmp
pslld
movsb
jmp
andb
lock
xor
jmp
ret
mov
mov
test
push
nop
push
sbb
pop
add
sti
outsb
test
mov
nop
add
das
outsb
subb
ret
into
add
lcall
test
or
add
xchg
lds
xlat
mov
aam
lret
and
pop
orb
lock
add
idivb
inc
cmc
inc
push
add
es
je
cmpsl
mov
adc
mov
mov
xor
ljmp
lods
mov
xchg
xor
movntps
dec
sbb
add
daa
push
dec
inc
sbb
xor
mov
incl
adc
push
add
in
ret
popa
xor
adc
div
cmpsl
and
repnz
xchg
jecxz
int3
mov
mov
adc
cmp
or
and
out
sub
frstpm(287
int3
int3
add
add
mov
in
pop
jno
loopne
jge
cmp
in
sbb
cltd
cmc
jo
shr
sbb
add
enter
dec
jno
inc
ja
pop
jmp
cmc
sahf
mov
push
int3
jle
jbe
mov
aas
testl
arpl
arpl
inc
mov
mov
imul
sub
mov
subb
mov
inc
sub
adc
cmp
or
or
inc
daa
xchg
mov
push
add
insl
lret
mov
push
inc
xor
add
decl
adc
jmp
and
dec
insb
aas
mov
out
ficoms
rolb
loop
nop
mov
stos
cli
test
add
add
lahf
mov
dec
nop
adc
lea
addb
mov
int3
lahf
push
sbb
mov
call
in
lahf
mov
add
cmp
es
ljmp
addr16
add
mov
add
negb
fistps
fwait
cmp
xlat
pop
cmpb
outsb
cli
decb
clc
add
cmc
test
xchg
xor
cli
add
adc
mov
sbb
add
jb
rorl
inc
negl
insl
divl
ljmp
sbb
scas
or
and
xchg
jbe
sub
jl
shlb
out
mov
push
sbb
mov
inc
sub
iret
clc
dec
jo
inc
add
mov
mov
ss
or
mov
pushl
or
mov
lods
dec
adc
jbe
leave
mov
mov
adc
mov
add
imul
dec
rorl
or
out
pop
sub
xor
fadds
fstpt
inc
in
inc
and
insb
loope
loope
insb
icebp
insb
sub
pop
sbb
and
aad
lea
in
cmpb
mov
pushf
sar
dec
jp
mov
push
rol
add
xor
add
and
push
mov
cwtl
jg
mov
add
mov
xor
das
in
hlt
xchg
daa
ret
sbb
cmp
icebp
cmp
add
repnz
sbb
aam
sub
roll
cmpsb
idivb
popf
adcl
add
lret
mov
addr16
pop
pop
rdtsc
pop
lods
and
xor
or
fiaddl
ljmp
cld
es
popl
in
jg
shl
cmp
pop
lret
push
and
jecxz
adc
pop
xchg
test
and
or
inc
stos
js,pn
add
hlt
jmp
xorl
add
fsubrl
cmp
iret
pandn
pop
and
iret
outsb
mov
ret
repz
rcrb
adc
lea
daa
test
jecxz
inc
cld
outsl
shlb
addl
jmp
bound
sub
mov
gs
icebp
xor
dec
filds
inc
xlat
adcb
sarb
scas
push
jne
gs
sbb
faddl
push
jne
mov
shrb
add
dec
pop
ficomps
xor
int3
adc
adc
popl
sbb
adc
or
pop
insb
sub
add
fdivs
sbb
adc
mov
push
shrl
test
or
add
inc
jbe
jnp
adc
pop
inc
dec
je
dec
or
inc
dec
mov
in
fcomip
adc
mov
mov
add
ret
rcll
stos
pop
sbb
aam
mov
add
cmpsl
jmp
push
das
inc
sbb
adc
out
testl
adc
aas
add
pusha
dec
and
mov
nop
loope
xchg
add
mov
dec
and
jmp
add
jmp
loopne
ret
loop
mov
popl
xor
push
mov
sub
sub
jmp
mov
sbb
jmp
adc
mov
add
orb
pop
mov
add
dec
mov
and
lcall
js
cld
mov
sub
push
loope
in
jmp
orb
out
push
shr
adc
adc
in
and
ficompl
push
push
xchg
mov
cmpsl
pop
sub
pusha
cmp
sarl
mov
xchg
repz
adc
or
or
insl
ficoml
mov
mov
push
movsl
push
and
cmpsb
cs
jecxz
sahf
repz
aam
xor
ss
ret
adc
sub
pop
pusha
clc
sbb
subb
testb
add
pusha
shlb
les
or
lcall
mov
insb
es
adc
add
roll
adc
xchg
mov
adc
or
pop
out
int3
sti
push
inc
aad
out
mov
add
loope
cli
push
add
loopne
fisubrs
and
insb
or
mov
cld
mov
or
push
and
add
jg
fdivrl
mov
mov
lods
out
mov
push
adc
rclb
push
mov
dec
aaa
cld
mov
pusha
lfs
ret
mov
vmwrite
cs
mov
or
pop
cld
add
and
scas
mov
adcl
mov
rolb
sbb
cmp
mov
adc
and
jge
mov
in
dec
loopne
mov
mov
lods
push
mov
adc
xchg
mov
orl
arpl
mov
xor
mov
jo
inc
and
cmp
daa
outsl
int
add
loop
aaa
inc
int
xchg
add
inc
push
hlt
pop
insb
loope
rorl
lahf
mov
loope
pop
dec
movsb
adc
inc
cmpl
cs
and
inc
cld
adc
icebp
pusha
lcall
pmulhw
dec
dec
and
inc
lods
and
or
adc
arpl
add
or
mov
loope
and
sti
pop
sbbl
popa
outsb
bound
cs
lock
addps
fs
and
add
or
testb
pop
pop
push
cmp
ljmp
clc
mov
imul
call
outsl
mov
adc
pushf
cmp
or
rorb
xchg
push
sbb
push
std
pop
popl
insb
shlb
and
cs
mov
cmovbe
or
mov
fs
and
xchg
fisttps
pop
sbb
adc
sbb
adc
out
add
add
fdivrl
xchg
in
ljmp
mov
or
repnz
jl
cltd
mov
add
sub
repz
push
push
pushl
idiv
aaa
frstor
sbb
rorb
mov
adc
add
add
or
adcl
nop
sbb
mov
lahf
push
add
fmul
mov
popa
test
shrb
cli
add
cmpsb
mov
popa
sub
or
dec
ret
cmp
sub
mov
pop
shll
pop
pop
iret
shrb
cmpsb
xchg
cld
stos
hlt
ja
push
lret
mov
outsb
jo
mov
sbb
fmull
outsl
cmpsb
lcall
fsubrs
push
push
and
test
ficoms
inc
push
insb
rcrb
cmp
lock
mov
in
add
pop
adc
adc
mov
repz
inc
jge
cmpsl
ret
or
cmp
pop
enter
cld
sahf
dec
adcb
mov
addb
mov
jne
sarb
or
push
add
dec
sub
cmpsb
cli
pop
cld
test
fidivs
fcmovbe
or
scas
or
push
adc
mov
push
rcrb
add
mov
fucomip
push
out
mov
pushl
nop
pushf
and
push
xor
or
jmp
ss
push
int3
push
push
xor
mov
lock
popf
inc
xorl
test
xchg
hlt
fs
sti
and
in
aas
adc
inc
xlat
stc
cmp
into
lock
mov
hlt
incl
lock
pop
nop
mov
xchg
jg
adc
xchg
scas
cmp
test
aam
or
pop
push
orb
pop
addr16
mov
push
jne
int3
ds
nop
mov
nop
loopne
and
mov
mov
adc
or
int3
aas
orl
mov
and
xchg
insb
fdivrl
dec
adc
add
xchg
jg
push
or
std
or
test
mov
or
stc
pusha
mov
adc
mov
shlb
mov
mov
mov
cli
and
sub
ds
mov
insb
sbb
dec
shl
lcall
or
out
test
mov
imul
test
test
rcrl
les
dec
cmp
add
mov
aas
pushf
cmp
sarb
mov
mov
add
add
push
sarl
push
xor
aaa
and
xor
inc
lret
pop
inc
push
mov
xor
cmpsl
inc
add
push
sbb
push
mov
pusha
xor
lock
inc
xchg
xor
mov
sbb
push
jg
outsl
mov
inc
sub
push
jo
hlt
jmp
insb
int
and
inc
mov
cmc
sbb
xor
repz
les
mov
filds
and
and
mov
xchg
loopne
pusha
test
inc
xchg
fs
xor
icebp
add
cmp
mov
sahf
clc
push
add
cmovge
inc
ljmp
or
cmpsb
push
or
loopne
lea
pusha
push
adc
inc
rcll
lock
test
shrd
and
pusha
xlat
in
vmovhps
adc
xor
adc
decb
jmp
outsb
xchg
out
out
in
in
outsb
scas
and
decl
adc
orps
mull
cmc
and
xchg
and
add
jle
or
in
add
add
psubusw
fcmovb
movsb
xor
inc
stc
mov
adc
push
ret
mov
das
mov
outsb
lret
mov
pushf
arpl
incl
add
sti
test
or
cmp
inc
add
push
scas
inc
inc
add
mov
cmpsb
mov
sub
in
int
adc
add
testl
repz
rorb
xchg
sbb
ss
inc
dec
jl
jl
mov
fldl
sti
or
rorl
repz
add
adcb
rolb
mov
jg
push
test
adc
jmp
xor
add
inc
hlt
fsubl
lcall
and
mov
loopne
push
out
inc
adc
sbb
pusha
jno
dec
scas
xor
and
mov
incl
inc
cmp
repz
ljmp
jbe
outsb
cltd
orl
dec
xor
in
and
xor
push
movsb
xchg
dec
jg
ja
jecxz
pop
jo
loop
mov
rorl
mov
test
xchg
mov
test
xchg
aam
xchg
cwtl
cltd
cmpl
xchg
mov
adc
fs
inc
insb
rcrl
jbe
inc
dec
push
iret
sbb
incl
shrl
packssdw
rol
loop
sub
fwait
in
xchg
lcall
add
push
pusha
push
dec
xchg
or
popl
xor
add
daa
mov
add
lock
push
sbb
push
rcr
sbbb
or
push
ficomps
dec
push
call
jmp
aas
mov
adc
dec
add
xchg
in
cmp
andl
and
dec
xchg
lock
movsl
xchg
add
sahf
xchg
jp
mov
jg
push
sbb
cltd
rcrl
mov
push
clc
push
mov
rcrb
fldt
pop
sar
or
les
xor
sub
cmp
adc
inc
popa
add
add
std
out
xor
test
and
push
dec
or
out
add
mov
daa
mov
adc
mov
jecxz
pop
inc
adc
and
push
sub
cld
and
out
lahf
add
or
psrad
pushf
jb
jp
insb
inc
arpl
mov
int3
orb
or
adc
notl
pushf
pop
test
add
adc
mov
scas
push
push
mov
adc
int3
addr16
xor
jne
xchg
cmc
pop
aas
repnz
hlt
xchg
divl
and
fisttpl
fisttps
add
pop
add
jo
xorl
sub
es
dec
push
sbb
lret
add
pop
mov
add
lock
push
ljmp
out
jg
sti
seto
xor
xor
into
xor
sti
add
notb
cmpsl
std
mov
adc
jecxz
orb
inc
ljmp
outsl
dec
loope
push
insl
mov
add
push
into
cmp
clc
fildl
psubd
adc
or
xchg
es
arpl
inc
xchg
cmp
add
jbe
and
cmp
jecxz
fiadds
es
loope
mov
insb
sbb
add
test
xchg
add
stos
jo
dec
fistpll
add
fildll
mov
sbb
mov
mov
add
clc
test
je
mov
add
orl
adc
lods
sbbb
loopne
loop
mov
add
sub
test
adc
sbbb
jmp
notl
xor
or
mov
cmp
jbe
adc
add
add
test
mov
inc
and
pushf
inc
fsubrl
pop
and
rcr
inc
or
pop
shlb
rolb
add
add
adc
leave
and
pusha
push
push
rolb
fs
add
or
sarb
add
inc
push
sub
setp
pop
testl
aas
orb
or
sbb
cld
push
pop
hlt
or
orb
out
push
push
sbb
dec
push
cmp
adc
vmovups
rclb
fistl
or
dec
repz
icebp
test
add
jg
inc
push
outsl
jnp
add
and
cld
and
add
outsb
and
and
jecxz
xor
inc
or
xor
pop
loopne
or
insb
stos
push
fisubrs
cmpsl
inc
pushl
clc
and
cmp
or
imulb
add
testl
push
lret
adc
loope
or
or
fcmovu
incb
xor
inc
incl
jecxz
sub
das
jecxz
lock
sbb
sahf
pop
sbbl
aas
inc
push
sahf
inc
aaa
icebp
push
in
mov
rol
hlt
xchg
push
dec
adc
xchg
pushl
adc
aas
imul
mov
scas
movsl
sub
mov
insb
cmp
inc
sbb
in
inc
and
daa
test
add
cmc
mov
xchg
inc
push
sub
pusha
add
je
add
enter
stos
add
lret
outsb
mov
mov
je
bound
pusha
pop
call
repz
push
or
jp
cmpsb
jg
test
push
add
lock
pop
mov
outsb
jp
mov
repnz
or
setge
les
xor
in
das
add
xchg
jbe
pop
repnz
inc
dec
sbb
xchg
xor
pusha
xchg
add
pop
subb
stos
and
fs
push
cmp
hlt
jg
aam
add
insb
rorb
cld
fs
sbb
jg
adc
rolb
and
loopne
rcll
push
jmp
add
sti
fcomps
cmp
nop
jne
mov
decl
sti
decl
ds
and
pushl
mov
bound
and
adc
sub
push
jecxz
icebp
add
pop
mov
push
js
xor
push
xorb
dec
decl
mov
xchg
xor
adc
imul
or
hlt
pop
push
subl
roll
shll
mov
in
pop
lcall
fsubl
and
cld
jl
ljmp
popa
shll
es
sti
pusha
lock
or
mov
popa
das
xchg
sbb
in
and
insb
cmp
pop
fdivp
xor
add
es
inc
or
adc
loope
xchg
dec
lods
adc
or
add
dec
mov
out
adc
addb
push
mov
add
js
incl
dec
in
mov
jmp
inc
adc
pop
add
add
push
inc
imul
sub
bound
mov
mov
pusha
adc
jmp
call
mov
and
and
cvtdq2ps
push
test
in
insl
xor
popa
push
mov
sub
scas
loopne
xchg
mov
jo
int3
clc
adc
push
add
add
pop
mov
inc
das
cmp
mov
mov
sbb
mov
add
ret
jb
into
add
hlt
ljmp
fsubl
push
hlt
popa
jb
xchg
gs
push
loopne
hlt
aaa
cld
ja
divl
mov
inc
or
roll
push
shrl
sub
js
pusha
clc
pop
hlt
jg
call
pop
in
sbb
and
add
loope
dec
repnz
inc
xlat
clc
fs
mov
or
jo
lea
lds
outsb
dec
pop
and
mov
sub
cli
adc
shr
pusha
js
add
sbb
cmp
lock
cmp
nop
bound
mov
xor
loopne
xor
sar
cmp
mov
out
jo
ret
inc
xchg
pusha
adc
into
mov
cs
jg
pop
hlt
mov
arpl
adc
out
pop
and
lcall
cmc
fs
dec
push
push
xor
and
rolb
push
add
mov
fldcw
mov
stos
mov
loop
test
jo
test
gs
fdiv
in
jmp
sbb
addr16
in
sbb
add
and
xchg
in
and
lock
add
pop
outsb
or
adc
clc
aaa
test
push
add
roll
sbb
sbb
cmpsb
sbb
and
inc
mov
sbb
mov
cmp
cli
sub
mov
in
ds
loop
outsb
sbbb
push
cmp
std
fwait
mov
mov
pop
rcl
push
pop
fcoms
push
xor
out
and
dec
or
lock
pop
cmpsb
shrl
lock
psllq
faddl
cmc
decl
mov
push
addb
mov
dec
xor
sub
or
add
outsb
xchg
mov
jecxz
adc
out
popa
ds
mov
jb
xor
adc
ucomiss
adc
mov
cli
out
adc
rolb
rclb
insb
cs
mov
rolb
xchg
jb
push
fcmovbe
inc
add
pop
add
nop
das
sbb
inc
andps
int3
in
jbe
dec
add
je
push
adc
decl
aad
add
sub
mov
xchg
mov
sbb
inc
or
insb
sbb
repnz
and
inc
or
mov
shl
pusha
dec
pop
cli
push
mov
dec
ud1
xchg
in
lock
incb
add
pop
scas
aas
paddsw
insl
stos
mov
jmp
push
pop
push
out
lcall
out
or
mov
jmp
push
jb
add
fs
jmp
movl
lahf
sub
aam
lods
sar
lahf
or
mov
jecxz
or
bound
mov
pop
or
adc
xchg
adc
ja
rclb
push
sub
add
incl
xchg
jb
jb
xchg
filds
or
cmc
out
ror
adcl
mov
adc
jmp
mov
sbb
push
inc
and
xchg
call
fistps
test
mov
repz
nopl
add
or
inc
decb
insb
es
test
es
adc
or
es
imull
in
aaa
and
out
es
adc
mov
and
pusha
popa
rolb
sbb
adc
xchg
jno
and
das
mov
rolb
sub
sub
jmp
rorl
push
pushl
push
popf
loope
push
arpl
sbb
or
xchg
mov
loop
push
pop
or
fs
jecxz
out
insb
xchg
sti
clc
popf
jp
je
adc
cmc
xor
and
cmpsb
out
and
addb
icebp
dec
mov
jo
bound
and
shrb
mov
idiv
fcomip
push
inc
jb
push
jg
dec
pusha
pop
mov
mov
jo
lods
add
orb
adc
sub
and
add
outsb
lea
jg
sbb
mov
or
sub
mov
shll
hlt
mov
sub
ljmp
pusha
adc
mov
push
aam
sub
sub
xor
sbb
add
mov
icebp
bound
add
aam
call
push
sub
lock
add
inc
mov
shl
outsb
xor
loopne,pn
jge
iret
xor
ret
fnsave
ss
aad
sub
or
push
xchg
cmp
sub
fdiv
xor
xor
add
rolb
and
mov
rolb
scas
clc
pop
xor
inc
sub
xlat
insl
out
pusha
xlat
outsl
mov
insl
scas
scas
shlb
mov
push
push
mov
add
and
mov
fs
js
push
push
loopne
pop
je
test
push
and
arpl
out
adc
mov
cmp
sub
inc
loopne
xor
inc
insl
add
add
jecxz
add
call
or
popf
xchg
mull
dec
popa
jne
push
out
in
add
xlat
rcr
fistps
add
and
jmp
insl
mov
sbb
add
andb
sti
dec
sub
xor
xor
dec
call
xlat
leave
xor
lea
mov
fs
xor
scas
es
dec
in
cli
in
and
out
sbb
icebp
mov
xor
mov
loop
lcall
pop
adc
and
push
add
in
add
ljmp
or
in
add
adc
test
add
sbb
dec
test
sbb
fists
repnz
pop
cwtl
punpcklbw
mov
in
pop
cmp
jno
mov
jno
ret
lock
push
jb
es
outsb
adc
imul
sub
push
sub
rolb
inc
in
fiaddl
loopne
push
xchg
fsts
nop
je
cmovo
add
push
mov
sub
or
movsb
or
mov
sub
aaa
inc
push
mov
jmp
adc
adc
loopne
mov
mov
cld
cli
xor
lock
inc
insb
fldt
jbe
mov
cmp
xchg
in
adc
std
int3
fcompl
in
loope
jg
mul
mov
aad
sbb
std
insb
cmpsl
xlat
int3
push
sar
push
rep
lods
clc
jmp
test
in
stc
bound
cwtl
or
std
mov
add
xor
mov
jo
push
or
add
add
jo
fisttps
repz
lock
roll
push
lret
clc
loope
push
das
rol
pusha
call
inc
jo
ss
insb
sbbb
mov
mov
xor
outsb
mov
jg
mov
insl
call
or
cwtl
add
fs
xchg
call
xchg
rorb
ja
loope
cmpsb
test
mov
cmpsb
fisttpl
add
inc
xchg
in
es
in
inc
mov
push
jb
daa
test
std
dec
fiaddl
movsb
loopne
arpl
add
jecxz
test
mov
jmp
inc
or
int3
das
insb
fistpl
xchg
adc
insb
or
pusha
add
es
mov
or
stos
add
push
fsub
es
and
add
and
lock
shlb
mov
call
jl
jg
mov
out
dec
pop
push
add
mov
push
adc
sbbb
push
in
in
shrl
add
mov
xorb
add
adcl
or
sbb
jle
add
pop
push
add
and
cmpsl
mov
push
add
sahf
mul
bound
sub
jle
push
sti
int3
je
stc
sbb
jo
and
shl
repz
pop
and
push
mov
stos
js
xorb
adc
lcall
mov
mov
testb
in
xor
repz
or
add
add
pop
pop
cltd
lds
add
jl
sti
dec
mov
andb
pop
lcall
dec
ret
mov
mov
fwait
dec
ffree
mov
call
push
or
xchg
js
data16
xchg
subb
push
xor
add
or
add
dec
cli
dec
sbb
xchg
lret
cli
in
mov
dec
out
test
in
nop
push
add
cmpb
andb
incl
or
xor
xchg
cmp
xor
fistpl
or
sub
xorw
pusha
lock
fsubs
mov
jg
pop
test
rcrb
pop
ret
gs
sti
insb
xor
add
js
data16
push
pop
shll
out
push
shl
jno
add
fcomps
imul
ss
test
arpl
sahf
mov
and
aad
in
fsubl
and
pop
sbbb
xor
sbb
ret
mov
fwait
mov
sub
mov
es
repz
arpl
orb
pop
test
je
out
push
in
and
rolb
out
mov
or
shll
popa
push
sub
xor
add
inc
jl
cmpsb
clc
mov
xchg
es
imul
pop
sbb
xchg
push
xchg
adc
jo
mov
mov
mov
cmpsb
fmull
mov
scas
cli
push
ds
mov
and
or
dec
push
mov
jmp
in
add
mov
insb
inc
repz
mov
out
sarb
stos
mul
mov
addb
fdivr
mov
cmpsb
outsb
adc
xchg
and
pop
add
xor
add
add
test
bound
and
add
insb
mov
lcall
pop
and
pop
insb
adc
imul
rcr
fadd
mov
push
inc
sbb
jno
call
std
jg
pusha
add
in
and
jns
pusha
subb
and
cmpb
jecxz
dec
fiaddl
pusha
inc
xchg
ret
jns
push
cmp
and
or
cld
push
xchg
push
or
loope
xchg
shlb
fdivs
sbb
pop
pusha
mov
lcall
push
or
addr16
push
fs
fistl
ljmp
or
adc
jp
or
or
inc
idivb
sti
mov
roll
sub
std
or
jecxz
adc
fwait
ds
std
in
add
sub
push
sbb
push
and
out
int3
aas
fdivrl
loopne
fistps
xchg
dec
outsb
or
fisubl
lods
adc
jmp
push
jge
sbb
sbb
and
mov
fcomi
divl
jge
lahf
popa
add
out
bound
aaa
sbb
add
test
adc
xor
loopne
mov
sub
pushf
and
pop
mov
arpl
mov
and
movsl
cli
jmp
inc
xor
inc
test
push
leave
add
shrb
jg
cmp
test
addb
aas
jmp
or
mov
test
shll
push
xor
fstpt
xchg
xor
cld
mov
mov
loopne
or
mov
fs
fdivrl
adc
push
mov
cld
adc
xchg
call
dec
push
jmp
lcall
dec
mov
pushl
inc
call
and
sti
aaa
mov
mov
pusha
push
loopne
int
and
add
test
or
inc
movsl
mov
nop
sub
repz
pop
xor
inc
dec
shrb
pushl
add
fbstp
stos
mov
cmpsb
mov
loope
scas
pusha
mov
int
dec
xchg
add
xchg
and
addb
pop
adc
add
stos
adc
or
inc
mov
add
out
adc
mov
in
scas
inc
mov
add
out
jno
adc
in
sbbb
rcrb
mov
dec
fcmovnu
mov
arpl
add
mov
stos
lods
pop
int3
inc
or
xchg
hlt
push
test
xor
add
scas
mov
aam
or
cmp
clc
outsl
pop
and
sub
mov
dec
or
and
hlt
sbb
dec
mov
repz
add
and
cmp
mov
lret
mov
mov
arpl
xchg
lods
jecxz
dec
lock
fcom
insb
sbb
jecxz
xchg
dec
and
adc
push
loopne
mov
outsb
shlb
arpl
xorb
pop
push
push
out
mov
push
jo
and
icebp
jg
and
push
xchg
bound
mov
dec
adc
and
push
xor
decl
xor
push
std
lock
lds
fs
fisttpl
stos
aaa
sarl
cmp
cs
xchg
lea
mov
push
cmp
ds
mov
int3
push
add
addl
popa
incb
mov
adc
push
pushf
mov
rolb
inc
or
dec
sti
in
sbb
adc
neg
xlat
aaa
add
pusha
mov
psadbw
incl
lret
mov
addb
or
es
sbb
fdivrl
or
cld
imulb
add
or
mov
lock
filds
inc
pop
xchg
or
rolb
roll
insl
rolb
in
jl
xor
push
cmp
out
jb
adc
push
fiaddl
jne
rolb
cltd
mov
xchg
xchg
call
cld
add
add
mov
movb
rcrl
mov
inc
push
mov
loopne
push
std
adc
movsb
add
out
loop
inc
icebp
mov
mov
loop
fdivl
adc
mov
push
rolb
loop
mov
sub
and
mul
push
fstps
xchg
lret
mov
jnp
jo
push
test
loopne
outsb
rorl
pop
xchg
pop
add
out
push
or
or
adc
push
mov
push
push
inc
mov
fmull
cs
push
pop
nop
loope
push
cmp
push
movsb
sbb
fimuls
xor
add
and
rolb
out
add
lock
or
jo
ss
add
call
xor
and
and
pop
ficompl
fisttpl
pop
in
mov
jecxz
pcmpgtd
out
xor
das
cmp
mov
sbbb
mov
inc
loopne
jb
insb
and
pop
adc
push
jmp
xchg
jo
cld
nop
or
sahf
adcb
lds
add
test
sti
mov
dec
loopne
add
or
or
insb
and
fdivl
sbb
and
or
mov
or
push
sub
xor
test
mov
xor
adc
sub
mov
xchg
movsb
adc
add
dec
in
fcomip
add
pusha
rolb
add
add
out
push
hlt
add
or
jge
ljmp
xor
call
push
add
push
and
sbb
jae
add
outsl
call
add
movsb
fs
in
sub
mov
popa
xchg
cmpsb
push
push
pop
rorl
ljmp
xchg
icebp
fcmovb
dec
lock
popa
loop
push
into
mov
xchg
sbb
xchg
scas
les
movsb
push
cwtl
push
cmp
ds
fistpl
mov
adc
movsb
enter
or
clc
add
jmp
nop
lret
repnz
out
fildll
sbbb
pop
fiaddl
pop
insl
mov
stos
addr16
sub
and
gs
ror
in
sub
in
in
negb
arpl
add
sub
pop
push
add
pop
test
xlat
pusha
add
adc
xchg
cmpsb
mov
insb
jg
hlt
xor
lcall
add
adcl
cwtl
fidivl
or
mov
or
mov
gs
lock
adc
add
xchg
fimull
jns
leave
adcb
orb
inc
adc
add
dec
adc
loope
add
or
and
aam
mov
repnz
push
scas
xor
cmp
lock
jo
imul
scas
fisubrs
fdivl
hlt
lahf
loopne
mov
ss
inc
fidivs
gs
adc
movsl
jg
bound
mov
sbb
lods
xchg
xchg
jmp
pusha
sub
jg
sub
push
mov
or
jo
imul
in
es
xchg
out
pop
daa
push
sub
ljmp
xchg
lret
mov
push
pop
lock
lods
rcrl
andb
mov
pushl
dec
fldl
bound
into
pop
cmp
sub
add
repnz
and
jecxz
mov
arpl
mov
scas
cltd
aas
adc
in
subb
jmp
xor
fs
pusha
dec
mov
ret
leave
ret
mov
rcrl
jmp
add
add
mov
dec
dec
push
mov
pop
pusha
movb
mov
adc
fldt
and
cld
icebp
adc
lcall
and
pop
mov
dec
shll
jo
sbb
and
es
pop
or
push
lods
xor
lods
inc
cmpsl
mov
and
pop
pushf
cmc
add
out
xor
insb
add
incb
mov
jle
insb
sbb
in
pop
cmp
popa
das
xor
loopne
xor
js
stos
add
adc
insl
push
movsb
inc
arpl
orl
or
or
fisubrs
loop
add
xchg
int3
adc
out
sbb
movsl
and
repz
sub
ret
or
jb
cmp
push
scas
lcall
pop
or
adc
fiaddl
dec
push
xchg
mov
int
adc
cmp
and
and
adc
pop
jo
mov
insl
repz
inc
repz
adc
out
sbb
dec
or
add
sbb
fisttps
loopne
or
sbb
or
orl
stos
mov
insb
cld
add
inc
jg
mov
addl
pop
push
fs
dec
xor
lret
add
and
sti
jmp
shr
pushf
xchg
sbbl
fcompl
pop
push
sbb
mov
add
fwait
sarb
push
jmp
lcall
std
incl
subb
mov
in
movsb
xor
mov
outsl
push
hlt
push
mov
jno
add
mov
mov
lcall
xchg
std
jo
sub
movsb
add
and
push
adc
std
push
push
filds
incl
xorb
pop
push
filds
fadds
add
pop
inc
pop
ret
gs
insb
xor
add
sub
sub
pop
sbb
add
sysexit
or
lods
bound
adc
in
push
pop
or
das
cmpb
movb
xchg
das
andb
movsb
stos
out
or
test
shll
and
bound
hlt
pop
xorb
and
push
or
decl
inc
sbb
xor
xor
and
out
inc
or
push
xor
movl
dec
inc
add
inc
xorl
and
out
call
in
and
in
push
push
xchg
xchg
xchg
add
ret
add
push
bound
cmp
adc
cmpsb
lds
inc
decl
inc
stos
sub
jge
xor
push
cmp
outsl
fcmovnu
push
add
jge
testb
and
adc
push
inc
sbb
fdiv
cmc
lds
fisubrs
cmp
push
xchg
inc
test
sub
mov
pop
sub
les
add
arpl
adc
mov
adc
push
sub
rorb
addb
enter
out
adc
jg
pusha
and
iret
push
pop
sbb
push
sbb
sbb
push
mov
notb
add
sbb
xchg
xchg
add
xchg
loopne
add
lock
out
loopne
popa
popf
test
rorb
insl
test
decl
xchg
ret
loopne
mov
add
sub
add
fsubs
sbb
andb
mov
fs
aam
daa
pusha
mov
outsl
pop
aam
lret
sub
add
dec
xchg
add
movsl
dec
sub
or
loop
scas
add
sti
push
adc
data16
dec
outsb
jg
or
push
cs
jp
add
add
add
pusha
sbb
in
and
push
imul
cmpsb
adc
lahf
jo
xchg
mov
out
mov
fs
call
sbb
push
and
pusha
nop
xchg
lcall
enter
push
add
incl
in
or
insb
sub
sub
sti
sbb
pusha
xchg
repnz
and
int
insl
test
lret
pop
mov
add
js
cmp
in
iret
in
lcall
cmp
in
or
sub
lcall
sbb
pop
loopne
addb
movsb
sbbb
mov
shrb
stos
cltd
or
nop
xchg
les
bound
insb
je
xchg
test
out
and
scas
cltd
or
push
mov
or
movsb
or
sub
test
mov
and
add
or
sbb
mov
add
js
inc
popa
cmp
push
test
sub
cmpsb
adc
pop
xor
or
in
pop
push
add
mov
hlt
add
sub
xor
pop
and
sub
pop
or
mov
in
fwait
popa
push
adc
inc
jo
and
arpl
cmp
add
push
jnp
add
xor
jp
mov
adc
adc
mov
inc
test
pop
lods
rolb
jge
xchg
cmpsl
jo
ljmp
mulb
decl
xchg
out
mov
ds
sub
mov
mov
push
testb
mov
and
push
pop
rolb
inc
dec
cli
aas
dec
jno
mov
mov
pop
fwait
xchg
pop
mov
mov
add
inc
out
lret
inc
add
dec
inc
or
fistpl
pop
pop
push
and
mov
add
loop
adc
push
ljmp
inc
mov
xor
push
sahf
adc
loopne
shl
loopne
inc
jg
xchg
mov
fcoml
xchg
mov
loope
std
loop
insb
xchg
das
incl
aaa
xchg
mov
inc
add
shll
fdivrl
nop
rep
inc
in
mov
inc
xor
cmpsb
or
mov
rcll
ss
add
sbb
jg
subb
aaa
int3
xor
pusha
sub
iret
xchg
xchg
rcll
add
push
les
pop
pop
dec
int3
xchg
jmp
cmc
mov
or
rorl
xor
daa
mulb
push
cld
pushl
cmp
or
jno
sti
fs
mov
xorl
ret
aaa
adc
mov
push
or
push
xchg
push
adc
mov
cmp
movsl
std
das
mov
rcll
movsb
cmpsl
rcrb
add
outsb
out
mov
inc
mov
cmp
addb
fmuls
sbb
jo
inc
jbe
int
dec
jo
xor
mov
movsl
push
sub
add
or
fstp
int
in
nop
cmp
push
mov
pop
jae
incb
mov
rorl
pop
ljmp
add
sub
addr16
adc
xchg
dec
mov
jae
add
jno
mov
pusha
aaa
mov
cld
mov
adc
push
test
cmp
adc
sbb
scas
jnp
sub
xor
add
sti
sub
pop
sahf
mov
ret
xor
and
pop
xor
shll
push
pop
pop
ss
loopne
mov
das
pop
pop
dec
jne
outsl
pop
insl
push
add
jae
mov
das
pushf
call
rcrl
pop
mov
mov
loop
xchg
xchg
in
es
xor
in
call
in
xorb
push
je
sub
jo
in
jecxz
jp
js
add
fdivl
jo
xchg
add
add
movsb
test
add
xchg
push
mov
inc
jo
push
loopne
mov
call
mov
loop
mov
in
inc
mov
mov
mov
mov
adc
mov
bound
mov
add
or
in
rolb
lcall
inc
nop
addb
xor
mov
inc
sbb
inc
adc
in
push
fwait
mov
cmp
push
mov
jb
inc
or
loop
nop
add
and
punpckhbw
sub
add
rolb
test
mov
dec
push
sbb
mov
lea
test
dec
mov
loope
push
and
cmpsb
mov
popf
aam
aam
mov
or
push
fiaddl
mov
or
in
in
jb
pop
data16
rorb
sti
sbb
jmp
xchg
cli
sbb
sti
and
push
ljmp
push
lods
das
js
push
stos
mov
fs
jnp
pop
insb
insb
scas
xor
fsubrs
mov
push
scas
roll
add
incl
mov
popf
adc
popa
test
push
push
push
jge
or
mov
out
mov
xorl
adc
roll
mov
cmpsl
flds
ret
in
and
xadd
fistps
add
data16
and
les
or
pushf
lock
jo
and
and
mov
sahf
jge
sub
xchg
outsb
inc
fsubrl
sti
outsb
push
ss
adc
push
mov
sti
and
addb
and
mov
mov
sti
cmpsl
xchg
xchg
adc
out
add
in
cltd
xchg
mov
push
ss
mov
mov
mov
inc
push
fdivrp
mov
push
pop
stc
add
sub
or
inc
pop
add
int
jmp
in
repz
mov
or
pop
jle
int3
stos
adc
orl
or
add
push
jg
movl
mov
pop
cs
in
or
mov
arpl
in
clc
out
cmpb
addb
sti
addb
aaa
add
mov
stos
or
add
fldl
sahf
push
scas
outsb
dec
xor
lods
xchg
xchg
pusha
imul
add
adc
mov
mov
jmp
adc
testb
fwait
mul
adcl
pop
or
insl
add
xchg
iret
mov
add
add
adc
in
and
mov
sbb
push
pminsw
pop
lds
int3
dec
or
popa
outsl
rclb
shlb
mov
jl
loope
adc
push
mov
sub
pop
in
add
inc
sub
inc
aaa
sti
push
add
adcb
push
sbb
and
mov
sbb
xor
rolb
xchg
add
add
hlt
dec
and
dec
scas
and
push
push
cld
aaa
add
das
outsb
and
pop
dec
aaa
fildl
lock
aaa
outsb
push
add
fs
pop
add
sbb
sbbb
jle
cwtl
in
push
push
jo
cmp
push
add
scas
das
mov
adc
mov
inc
adc
sbb
adc
xchg
inc
xchg
cmp
test
cmpsl
subb
ret
outsb
jmp
pushf
jp
insl
add
xchg
adc
out
mov
inc
cmpsb
cmpsb
sahf
adc
outsl
in
push
mov
mov
mov
decl
ret
cmp
jg
adc
sub
incb
outsb
and
outsl
decl
ret
test
cs
xchg
cmp
and
orb
incl
inc
mov
jp
inc
inc
and
inc
fdivs
pop
cmp
pop
bound
pop
mov
out
push
repnz
add
ljmp
cld
scas
addb
inc
or
push
xchg
loope
ret
shl
push
imul
xchg
mov
add
sysenter
push
cld
ret
add
cmp
push
mov
ja
mov
cmp
sub
mov
push
add
loopne
mov
rolb
inc
sub
push
cmp
pop
sbbb
scas
cli
pushl
loopne
sti
insb
cs
orb
add
loopne
test
lcall
outsb
pusha
test
or
rcrb
stos
in
push
inc
ret
fwait
test
push
fwait
adc
incl
add
xchg
adc
rclb
jo
int
fists
xchg
pusha
dec
dec
int3
gs
adc
insb
xor
adc
addl
adc
add
add
xchg
xor
pop
cli
add
and
add
jbe
leave
add
cmp
bound
xchg
and
sub
xor
push
mov
test
add
out
add
decl
fs
out
dec
arpl
add
and
pop
icebp
mov
shlb
pusha
adc
xchg
iret
movsb
add
andl
add
out
ret
or
xchg
cld
add
push
and
mov
lods
shll
xor
add
xchg
or
push
je
aas
loopne,pt
sub
push
outsl
scas
cmpsb
adc
pop
add
mov
and
jg
or
mov
enter
popa
add
and
sbb
test
test
std
xchg
add
mov
and
dec
and
mov
or
add
push
orl
mov
mov
or
push
mov
or
pop
clc
fistl
cld
add
mov
or
and
pop
push
push
xchg
xor
imul
mov
loop
xor
jo
cmp
imul
lea
push
jge
insb
dec
loopne
jne
movsl
and
inc
add
push
cli
loopne
push
outsb
jb
mov
add
loopne
mov
jmp
movsb
mov
and
lock
in
and
aad
dec
or
std
pop
add
push
fadd
mov
push
xchg
repnz
xor
push
cmp
cs
outsb
add
fs
cs
fs
cli
xchg
mov
add
push
or
add
xor
inc
pop
inc
test
lret
cs
push
and
xchg
cld
fidivl
int
movsl
xchg
push
add
aaa
fs
sbb
mov
push
rcll
std
push
nop
arpl
mov
dec
xchg
push
sub
sub
jo
and
fwait
push
adc
add
pop
rorb
and
mov
xchg
les
loop
rolb
popa
ret
pop
or
add
gs
add
or
mov
in
decl
insb
inc
test
lds
test
push
or
dec
mov
and
outsl
dec
xor
xor
fldl
inc
xchg
mov
add
add
mov
jmp
in
pop
jle
ljmp
add
out
fcmovnu
bound
cmpsl
push
mov
xchg
imul
cmp
mov
cmc
cli
push
cmpsl
add
adc
or
cs
lods
pop
or
adc
add
adc
or
xor
aaa
mov
or
push
out
pushf
movsb
mov
xor
aaa
dec
mov
cs
xor
insl
daa
arpl
outsb
repz
xor
adc
scas
xor
jo
scas
add
int3
cmpsb
andb
inc
push
fistpll
push
movsb
push
add
sbb
xorl
adc
or
xor
mov
push
dec
rorb
jne
dec
cmp
mov
int
jns
sbb
push
sbb
insb
fcmovb
sbb
mov
xchg
and
roll
add
add
les
xchg
and
push
jmp
scas
add
cmc
hlt
andb
and
add
mov
add
lds
iret
outsl
mov
rcll
jnp
leave
scas
pushf
enter
les
mov
rcl
rol
test
lock
xchg
and
rcr
push
add
add
adc
loop
xlat
adc
fwait
inc
jnp
push
inc
lea
lock
adc
xchg
in
cmpsb
or
jnp
jecxz
lock
xchg
push
xor
xchg
or
fwait
div
fstpl
jo
jo
add
in
adc
rorl
lock
dec
bound
add
add
rcrl
and
test
lock
jecxz
stos
pop
mov
push
in
adc
cmp
cwtl
jbe
and
nop
inc
and
xor
fcmovnu
cmpl
push
inc
adc
push
fs
adc
repz
dec
nop
jge
cs
outsb
sub
pusha
xchg
pushl
pop
sbb
or
sub
insb
adc
and
mov
mov
lock
loopne
sbb
fcompl
jno
ss
in
pop
loopne
fsubrl
and
add
lcall
loope
inc
mov
bound
scas
push
xor
sarb
xchg
add
or
ficomps
movsl
out
and
mov
push
add
pop
cld
rcrb
xchg
pop
pop
data16
jmp
bound
inc
xor
arpl
jmp
fists
push
pop
inc
bound
xor
incl
lock
pmaddwd
sub
inc
push
jecxz
loopne
insl
jl
add
les
push
sarb
push
sti
rcrb
mov
loopne
in
in
mov
int
sub
mov
gs
add
add
jbe
adcl
add
ljmp
bound
add
out
popl
xor
shll
out
or
or
lcall
fadd
popf
mov
dec
fadd
cmc
loopne
insb
nop
add
out
clc
insb
outsb
and
mov
loop
and
sbb
mov
add
mov
les
outsb
pop
fwait
pop
and
pop
outsb
lcall
add
mov
xor
lea
push
std
lock
outsb
mov
addr16
rorb
xchg
movsb
pushl
lock
add
andl
ds
loop
neg
mov
and
xchg
andb
add
jl
daa
jmp
jbe
and
sahf
xlat
inc
nop
mov
lods
rolb
cs
and
movsl
test
stos
pop
inc
in
ljmp
sbb
push
or
out
and
stos
push
outsl
pushl
push
dec
add
mov
or
outsb
jb
inc
add
jmp
addl
in
push
jnp
ljmp
adc
xchg
pop
sbb
mov
mov
jle
in
push
lock
mov
sbb
int3
sbb
das
sub
add
mov
das
fwait
leave
push
decb
mov
cli
cmpsb
lret
add
mov
or
jg
dec
rolb
xor
ljmp
cmpsb
jecxz
mov
jo
push
pop
inc
mov
inc
adc
insb
xlat
dec
sub
in
test
add
mul
jmp
adc
fsubl
je
inc
add
xchg
adc
or
pop
je
pop
insb
cs
pop
mov
inc
ss
movsl
int3
aaa
nop
jbe
in
out
adc
or
sbb
pop
adc
incl
lret
in
rolb
repz
mov
cmpb
add
adc
out
nop
and
sub
aas
add
add
enter
adc
ljmp
xchg
cmp
mov
add
add
jg
call
add
lock
mov
add
jecxz
bound
inc
mov
test
icebp
inc
or
jmp
fcoml
mov
push
xchg
jmp
sub
scas
xor
cmpsb
out
adc
dec
adc
sbb
insb
push
fsubrl
and
mov
loope
push
sbb
loopne
popf
push
add
int3
mov
movsbl
aam
mov
imul
popa
cld
pop
mov
sbb
mov
insl
loopne
test
add
repz
call
jo
jbe
insl
mov
stos
sbb
xchg
js
add
jmp
push
pop
push
xor
popa
dec
loop
movsb
pop
fstps
orb
rorb
mov
xor
push
inc
push
sbbb
push
daa
xor
xchg
sbb
push
ja
pop
push
and
add
pop
pop
sbb
inc
push
dec
adc
pop
scas
dec
sti
add
adc
add
std
sarl
mov
and
inc
jne
cmovo
dec
shll
add
fbld
inc
adcl
xchg
stos
jo
cmp
or
jb
lods
adc
addl
add
fstl
add
filds
nop
or
fsubl
das
xchg
lcall
jge
xor
and
notl
repz
insb
fbstp
mov
stos
jmp
jge
addr16
sbb
xchg
movl
mov
sub
xchg
jecxz
adc
out
lcall
or
je
mov
xchg
add
lods
fimull
pop
add
outsb
and
add
jbe
inc
push
inc
add
xchg
sti
mov
popl
imul
rcrb
mov
mov
xor
pop
lock
or
orl
out
add
adc
insb
mov
adc
or
test
mov
fidivrl
rolb
add
lods
clc
mov
sarb
mov
insb
mov
or
subl
es
add
repz
adc
inc
pusha
lcall
aaa
fsubr
cmpsl
jo
arpl
cld
jl
add
sti
mov
test
call
add
test
or
adc
pop
incl
fcompl
in
pushf
out
pop
adc
jb
xchg
mov
jbe
add
sub
ds
lods
orb
andb
jmp
push
cltd
aas
inc
cltd
ret
in
mov
add
insl
adcb
lods
test
xor
loopne
sbb
mov
enter
addr16
pop
aad
pop
ret
xchg
clc
and
outsl
cli
aaa
lods
or
stos
in
jecxz
rorb
sbbb
and
push
add
or
add
jg
sub
ljmp
mov
lret
addb
movsl
lret
pusha
fimull
add
xor
push
push
subb
add
cmp
xchg
imul
mov
addb
cli
in
sub
or
lods
jecxz
insl
inc
add
lea
push
gs
scas
fimull
mov
jecxz
lds
pop
adc
mov
sbb
xchg
lcall
clc
adc
add
ficoms
bound
push
shlb
or
cmp
test
daa
or
and
and
fs
lcall
fidivl
out
jmp
outsb
testb
add
or
mov
aam
mov
dec
mov
movaps
and
xor
sbb
adc
inc
add
filds
pop
inc
or
scas
xchg
psubusb
sbb
pop
add
dec
xchg
mov
cmp
mov
xchg
add
xchg
xor
inc
shr
in
incl
cli
xor
arpl
imul
sub
addl
adc
mul
pop
sbb
xchg
sub
bound
cs
movsl
imul
loopne
sub
rcl
gs
push
and
repnz
sbb
cmovs
aaa
test
int3
shlb
popa
in
cli
add
push
add
and
push
out
inc
movlps
adc
add
and
pusha
cmp
lds
ret
dec
rorl
loopne
adc
sub
mov
rclb
sub
cmpsb
pushf
add
push
mov
xor
add
xchg
jecxz
mov
add
testb
xor
outsb
or
inc
shr
lods
orb
or
push
add
clc
jbe
and
pop
sub
int
inc
gs
lock
sbb
sub
adc
dec
loope
inc
daa
hlt
out
test
sub
or
hlt
sbb
xchg
push
aam
adc
mov
sub
in
mov
or
sub
ja
push
outsb
mov
and
lret
sub
sbb
hlt
sbb
push
ljmp
mov
shlb
aas
cltd
pop
and
pop
test
add
iret
and
xchg
jg
add
add
mov
push
jecxz
lcall
imul
push
movsb
fdivrl
mov
bound
outsl
ja
jo
or
sbb
ret
or
inc
aam
push
add
cmp
mov
inc
insl
mov
add
mov
push
push
sub
mov
sub
pop
cmc
decl
sub
sbb
out
jno
es
pop
call
cmp
dec
ret
dec
insl
adc
rcrb
std
or
pop
aam
jg
cmpsl
decl
cld
clc
or
add
push
fdivrs
xor
or
or
and
std
sub
addl
ljmp
add
fcmovb
mov
lods
paddw
aas
ja
fisttpl
and
sbb
jns
sub
add
jbe
shll
std
sti
mov
add
jnp
adc
xchg
add
push
adc
nop
adc
ja
jnp
sti
ja
mov
mov
cld
stos
mov
repz
push
in
pop
cmp
ljmp
dec
jno
jnp
and
lea
adc
mov
sti
pop
movb
pop
ljmp
pusha
push
add
es
aaa
jbe
call
sbbb
dec
sub
push
pusha
pop
sbb
out
mov
cmpsl
loopne
mov
mov
gs
imul
cmpsl
and
and
adc
cmp
push
aam
test
adc
mov
mov
sub
mov
adc
das
inc
mov
popl
mov
sbb
js
mov
add
jb
add
loop
test
sbb
cli
dec
mov
loope
pop
add
adc
cmp
movsb
decb
insb
testl
add
sbb
pop
push
rolb
sub
filds
shlb
std
mov
xchg
xor
stc
push
loopne
mov
ja
or
adc
jmp
lea
cmpsl
mov
pop
or
sub
adc
and
dec
ret
call
dec
dec
dec
mov
inc
loopne
or
outsl
add
mov
add
mov
out
mov
xchg
lods
jg
shrb
rorb
mov
or
push
inc
mov
jbe
add
mov
inc
add
or
adc
adc
cmpsb
xor
mov
and
shlb
sbb
xor
je
inc
add
or
mov
sar
rcl
insb
push
adc
inc
aam
jns
xor
int
cmpsl
inc
pop
dec
insb
xchg
bound
xchg
in
orl
or
imul
push
add
pop
mov
jb
fldcw
mov
jmp
sbb
in
inc
punpcklbw
add
and
xlat
bound
ds
pop
std
ljmp
mov
add
int3
bswap
mov
orb
mov
push
test
mov
sbb
add
pusha
add
add
pop
mov
push
mov
test
aad
sub
pusha
add
lock
loop
and
mov
pop
add
fdivrp
cwtl
mov
out
xor
shlb
push
lea
mov
mov
repnz
mov
mov
jo
jmp
or
addl
pusha
mov
imul
mov
cmp
cmovle
xchg
dec
add
cli
jg
pop
jle
and
popa
sbbb
scas
mov
or
push
mov
push
jno
ss
lcall
sbb
mov
push
insb
adc
xor
add
push
xor
and
lcall
insb
fmull
in
jo
das
push
jo
lock
or
mov
enter
mov
imul
in
in
fldt
addb
add
nop
push
pop
and
pop
pop
mov
xchg
mov
pop
nop
adc
sbb
push
lock
divb
adc
pop
aaa
mov
fsubrl
adc
hlt
clc
xlat
xchg
add
and
ficoms
lahf
add
and
mov
cli
jg
dec
mov
sbb
nop
out
in
adc
push
aaa
or
js
sti
ljmp
mov
add
cs
sub
js
in
adc
dec
inc
divb
pop
ret
and
lods
adc
cmp
and
out
outsb
adc
sub
jecxz
test
and
dec
clc
mov
pop
mov
xor
loopne
or
sbb
fisubrl
xchg
push
out
enter
mov
pushf
shlb
sahf
push
hlt
push
pop
xor
int3
outsl
jg
rolb
movups
cs
or
daa
mov
mov
inc
testl
aas
nop
bound
inc
mov
clc
outsl
andb
xor
mov
jo
repz
or
sub
fcomip
call
mov
aaa
sti
pop
and
sbb
cmp
xor
ud0
jge
cmc
lock
and
icebp
add
push
js
mov
mov
loop
divps
push
push
clc
add
mov
cmp
jge
jnp
ret
outsb
xchg
or
nop
inc
pop
fwait
mov
mov
subb
add
movhps
outsl
ret
push
ds
fistps
rolb
and
jp
lahf
fildll
pusha
or
js
xor
dec
dec
mov
add
popa
sub
push
add
mov
mov
and
push
add
decl
flds
divl
add
test
incl
and
sbb
adc
insb
and
sti
xorb
push
pop
push
sahf
adc
mov
push
inc
aad
mov
movl
lcall
mov
push
insl
pusha
adc
push
jns
sbb
movsb
jo
mov
lahf
jle
fwait
insb
xchg
xchg
or
mov
orb
test
stos
orl
and
in
loop
sbb
test
in
jl
mov
dec
and
sarl
scas
arpl
daa
jae
lcall
mov
adc
mov
adc
pop
icebp
ss
cltd
roll
lahf
sbb
xchg
inc
cs
dec
mov
stos
adc
mov
mov
adc
sar
push
inc
pop
andb
lcall
add
add
xlat
sbb
mov
fsubrs
cld
push
out
mov
push
add
or
xchg
scas
bound
daa
and
es
scas
xchg
cmp
or
shrd
notb
out
mov
xchg
mov
movsb
push
adc
inc
xorl
or
stos
or
add
adc
fs
and
hlt
jmp
adc
add
xchg
lret
aad
cwtl
bound
insl
repz
fs
outsl
mulb
jg
scas
lods
pop
and
adc
mov
in
mov
xor
std
aad
fiaddl
orb
in
fists
int3
push
shlb
adc
addl
push
inc
out
outsb
into
scas
movsb
test
fs
mov
clc
or
lods
adc
es
out
dec
lock
call
xor
cwtl
cwtl
cs
shlb
data16
ljmp
pusha
lcall
mov
push
cwtl
ljmp
xchg
clc
movb
push
les
inc
add
and
inc
divl
pop
subb
cmpb
mov
sbb
lahf
loope
jmp
out
cmpsb
adc
dec
fnsave
nop
cmpsb
jo
loop
inc
ret
jg
shlb
push
sti
scas
add
add
and
orb
shlb
incl
sbb
rolb
push
rolb
adc
jb
rol
shll
fidivrs
js
cmp
aad
add
and
lret
out
rcr
stos
or
out
pop
hlt
mov
out
xchg
mov
fistps
mov
push
out
imul
cld
mov
loope
dec
es
add
pop
mov
ret
add
push
dec
arpl
xchg
testb
fisubs
pop
push
jecxz
push
jecxz
add
lea
mov
adc
pushf
loope
pusha
fisubrl
mov
mov
push
xor
cmc
add
loop
ljmp
icebp
adc
jmp
xor
add
xchg
push
decb
mov
dec
pop
push
sbb
sub
and
xor
lods
dec
ret
es
cs
mov
scas
inc
and
add
insl
adc
dec
xor
repz
add
pop
add
jb
and
add
adc
or
push
enter
inc
or
jle
push
cmpsb
sub
or
fs
dec
out
test
pop
add
idivb
add
pop
insb
je
sbb
adc
pop
cmpl
enter
sbb
xchg
add
shrb
push
out
pop
add
testb
addb
add
and
inc
pop
rolb
ss
push
inc
daa
cld
push
push
add
out
ret
pop
push
add
xor
add
add
iret
xchg
fiaddl
and
dec
das
inc
and
daa
lret
or
xchg
sbb
push
push
nop
movsb
sbb
push
push
xorb
sbb
sbb
orb
jg
stos
mov
andb
or
orb
jecxz
sub
or
ljmp
and
mov
into
shlb
sub
sub
rcrw
inc
xchg
call
jmp
dec
add
jecxz
and
sarb
rcrb
leave
xchg
pushl
scas
in
jmp
daa
sbb
in
xorl
mov
ljmp
or
je
cmc
nop
xor
ljmp
push
mov
cmp
mov
inc
dec
cli
dec
add
mov
aaa
cmp
rolb
jmp
and
sbb
push
lret
test
push
mov
daa
dec
add
mov
nop
and
gs
rolb
rorl
ror
mov
add
pop
shlb
and
mov
sub
mov
addr16
dec
loope
jg
ss
xor
gs
add
sbb
rolb
push
push
jle
push
call
add
add
or
add
andb
addr16
add
daa
sbb
cli
lcall
dec
sbb
pop
lock
in
aad
and
or
lea
sub
incl
roll
push
inc
loopne
addr16
cmp
mov
adcb
incb
inc
add
sub
add
cmp
outsl
sbb
adc
or
sbb
xchg
nop
mov
insb
adc
loope
mov
fucomi
inc
or
xchg
loop
orb
insb
rcrl
xor
loope
lret
movsb
dec
ljmp
add
sub
dec
pushf
mov
push
push
lods
push
mov
in
pop
jne
mov
mov
popa
lds
aaa
cmpsb
add
mov
inc
inc
pop
pop
cwtl
ds
ret
pusha
dec
andl
and
xor
jne
sar
jg
add
and
and
fildl
xor
sub
and
sub
sub
pop
addb
addl
adc
or
in
push
sbb
sbb
and
insb
pusha
sub
das
mov
and
mov
sbb
add
add
addr16
push
repnz
loop
mov
test
call
ret
xchg
pop
addl
sbb
push
test
outsb
mov
cld
outsb
push
cmp
and
cli
loopne
sub
push
cltd
mov
mov
movb
and
rorb
inc
fdivs
ss
enter
lcall
daa
add
mov
add
or
cli
push
and
arpl
mov
inc
push
je
fs
loope
test
cli
xchg
sbbb
jecxz
fnstcw
fisubs
adc
call
mov
fisubrs
inc
out
mov
or
mov
movsl
aas
and
mull
xchg
aad
sbb
dec
dec
cmp
or
mov
lds
rorl
and
mov
add
push
insb
inc
sbb
ret
xchg
pusha
adc
or
sbb
pop
lcall
cld
outsl
les
push
sbb
and
mov
dec
jl
inc
sub
inc
mov
fisubl
and
add
inc
sub
pop
sbbb
sbb
in
loopne
icebp
inc
int3
pusha
addb
mov
and
push
xchg
cld
jg
call
lret
imul
jecxz
push
xchg
pop
movsb
fcoml
lcall
lcall
insb
in
mov
mov
pop
pushw
bswap
mov
orl
repz
inc
adc
les
ret
jo
jb
push
xor
sub
mov
xchg
sbbb
mov
sub
cmp
lea
pop
or
or
ret
mov
clc
add
mov
jb
mov
add
movsl
bound
sub
popa
add
add
int3
add
or
nop
scas
aaa
add
bound
push
mov
bound
call
repnz
xchg
lods
sbb
fcoml
push
orl
or
test
xchg
fisubrs
popa
add
bound
subb
dec
decl
add
add
adc
orb
mov
xlat
incl
rolb
or
xchg
or
add
test
mov
or
mov
xchg
sbb
decl
pop
inc
cmpsl
xor
bndstx
mov
and
mov
movsl
stos
shlb
push
invd
xor
outsl
loope
pop
sbb
mov
in
or
xor
or
inc
pop
ss
bound
insl
mov
or
into
adc
les
sub
push
mov
xchg
pop
and
lock
call
ja
sbb
jmp
cmp
inc
push
ret
iret
nop
inc
mov
sbb
fdivr
aaa
pop
clc
mov
inc
inc
pusha
sbb
pop
adc
mov
aaa
nop
or
and
mov
add
aas
nop
mov
xor
and
fsubl
xor
rcll
fidivl
cmpb
push
insl
mov
mov
shlb
rcrb
pop
pop
rclb
sbb
mov
and
out
loope
adc
scas
call
add
in
or
in
and
inc
or
js
sarl
add
scas
test
cli
jmp
mov
test
jg
or
mov
mov
xchg
or
adcb
in
or
add
jmp
loopne
pushl
inc
xor
cmpsb
aam
das
jecxz
loopne
les
add
pop
movsb
ficomps
adc
lods
cli
or
add
adc
sbb
add
mov
add
inc
mov
outsb
fisubrl
les
and
jo
mov
fadd
push
mov
aaa
je
lock
lcall
adc
ljmp
and
cmp
mov
mov
ret
add
inc
mov
push
and
adcb
loope
push
add
xor
or
push
jecxz
push
in
and
mull
sub
inc
aad
push
xchg
pop
add
rcrb
faddp
xchg
mov
push
loopne
call
addr16
and
pushf
fsubl
xchg
cmc
add
in
or
into
loope
jmp
and
loopne
dec
mov
out
lock
jno
ljmp
inc
push
out
or
cmp
xor
lea
pop
jl
dec
cmp
push
lods
cmp
out
out
into
mov
lds
scas
cli
or
mov
or
xorb
fdivr
test
or
jmp
inc
pop
xlat
add
or
inc
add
push
pop
rcll
mov
add
fwait
ret
out
sub
loopne
mov
lcall
in
sub
xor
jno
test
sbb
push
in
outsb
inc
jmp
icebp
push
mov
pushf
or
add
fildl
js
jp
cmp
test
int
inc
adc
out
add
add
sbb
aaa
repnz
cmpsl
loope
mov
je
mov
pushl
cltd
lock
push
jmp
jmp
sbb
add
cli
xor
and
insl
test
jo
mov
rol
aad
test
and
xorl
push
imul
sti
lock
push
clc
xchg
ljmp
fbld
cwtl
push
adc
into
fdivrl
cmp
outsl
inc
add
mov
mov
imul
jg
and
jecxz
push
dec
rorb
movsb
int3
and
xor
fcomip
mov
mov
pop
mov
push
lahf
ret
add
int3
pop
in
test
add
inc
es
xchg
or
call
xchg
or
mov
mov
test
lcall
cmp
or
or
ja
or
add
fwait
dec
in
hlt
xchg
stc
dec
add
add
pop
dec
sub
imul
movlps
or
rorb
insl
divl
jbe
cld
loopne
mov
cli
fistpll
rcrb
xor
clc
outsl
xor
and
and
stc
and
cmp
jecxz
pop
add
dec
outsb
fs
fisttpl
call
and
and
dec
mov
in
imul
push
sbb
rol
shll
outsb
add
push
and
sbb
jmp
push
sbb
in
cmp
add
xchg
xchg
js
sub
ret
or
mov
mov
in
mov
test
or
fucom
or
xor
stc
mov
ror
cmpsb
mov
cmpsl
push
shrb
dec
aas
add
dec
add
or
push
or
shll
nop
xor
fwait
mov
push
push
pop
idiv
lea
mov
andl
adc
outsb
jecxz
rcll
test
jecxz
jg
mov
jne
call
xchg
xchg
adc
jmp
mov
shlb
clc
lcall
lcall
cmovp
or
cld
lods
push
adc
add
push
cwtl
mov
push
mov
ljmp
aam
aad
orb
or
adc
mov
inc
push
rolb
jo
sbb
movsb
xor
xor
lahf
add
outsb
leave
out
mov
push
out
pusha
jbe
mov
lcall
add
lock
ret
mov
push
or
loop
mov
jp
mov
pop
dec
mov
paddusb
dec
incl
jb
and
jp
icebp
mov
add
xchg
cmp
push
push
pop
test
push
call
add
and
push
or
cmp
test
mov
cmpb
sbb
jmp
xor
pop
in
add
pop
fdiv
mov
jo
mov
xchg
ficoms
sbb
popl
cmpsb
cmpsl
data16
and
or
pusha
adc
add
loopne
out
xor
rclb
hlt
mov
xor
push
or
fstl
xor
jmp
or
add
or
xor
add
mov
or
add
movsb
fs
push
xchg
fsubrl
add
add
mov
loopne
pop
aam
daa
lahf
pop
add
sub
add
mov
cmc
lea
sbb
add
xor
je
jb
jbe
fwait
loopne
jg
xchg
adc
daa
inc
push
add
jmp
cli
incl
cli
cmpsl
std
mov
pop
mov
es
mov
in
add
pop
ljmp
xchg
jb
clc
divl
xchg
stos
rolb
sti
or
cmp
aam
pusha
cmpsb
lock
repz
mov
add
or
imul
je
cli
jle
xor
pop
adc
mov
add
fistpll
mov
inc
jg
jno
pop
inc
clc
cwtl
push
hlt
lahf
aaa
adc
pop
ds
push
jno
jnp
adc
in
in
pop
pop
add
dec
adc
mov
jo
loopne
fcmovb
lods
inc
pop
mov
mov
clc
jg
add
mov
addl
mov
fiaddl
or
js
outsl
out
stos
pop
add
fbld
inc
inc
repz
js
lock
push
aam
adc
mov
cmpl
push
scas
sbb
outsb
clc
fildll
pop
adc
stos
fadd
or
xorb
cmp
loopne
dec
push
in
pop
cld
or
or
movsb
sti
mov
dec
xor
dec
std
add
add
jns
pop
inc
lcall
mov
xor
xchg
jecxz
cmpb
jg
lahf
std
push
iret
add
push
testl
ss
inc
outsb
or
mov
ss
js
mov
dec
jno
xor
cwtl
xor
or
in
push
adc
push
sub
stos
fs
ret
sbb
xor
aad
ret
pop
mov
pusha
mov
dec
out
sub
decl
add
insb
add
jne
clc
jne
add
adc
lock
ja
cltd
lahf
jmp
add
add
fists
sub
jl
push
add
fdivrl
add
push
pop
mov
rcrb
sar
call
mov
test
cli
or
stos
in
int
add
mov
xchg
and
bound
insb
pop
ljmp
sbb
imul
push
decl
rolb
rcrl
jmp
push
sub
jmp
aam
add
mov
inc
mov
pop
jg
mov
jbe
add
mov
adc
dec
cld
inc
sub
outsl
sbb
mov
imul
pop
fs
mov
and
nop
xchg
or
and
or
inc
mov
mov
shl
or
cmp
mov
and
mov
push
or
xchg
jge
sub
cmp
repnz
mov
adc
bound
movsl
xorl
sbb
or
jle
js
aaa
jnp
sub
mov
push
call
xlat
xchg
add
decl
pusha
or
mov
test
add
add
mov
bound
fs
or
data16
add
mov
jns
js
add
jecxz
and
mov
xorl
mov
dec
insb
outsl
adc
je
and
pop
fstpl
loopne
or
mov
in
fisubl
push
add
adc
xchg
sub
add
pop
mov
mov
inc
add
lock
sbb
add
adc
push
je
inc
popl
add
nop
xchg
adc
mov
sbb
xchg
mov
sub
add
psubusw
inc
test
sbb
movsl
shl
jae
sub
in
ljmp
loopne
cwtl
int
les
pusha
add
mov
add
and
sbb
and
inc
adc
movb
xor
repnz
add
ja
lcall
or
shrb
jp
loopne
addr16
xor
out
push
call
test
unpcklps
ret
push
mov
add
adc
and
jecxz
paddb
ljmp
mov
call
aaa
inc
jb
cltd
dec
push
jae
inc
inc
mov
dec
or
fwait
rclb
ret
lret
pop
jg
test
and
xor
add
xor
fs
add
cmp
inc
mov
and
mov
cld
pop
push
add
rol
mov
or
xor
aaa
push
cwtl
mov
test
and
pop
inc
addr16
mov
and
stc
mov
int3
sub
rcll
or
push
push
das
es
mov
add
icebp
mov
cmp
adc
fs
inc
mov
mov
pop
pusha
add
ret
aam
ds
sub
out
aam
jge
mov
xchg
fcmove
and
and
in
sbbl
in
mov
cld
cs
inc
xor
dec
pusha
push
aaa
add
add
push
out
loopne
int3
icebp
outsl
or
outsl
and
xchg
ss
add
jg
add
and
loopne
jmp
sub
and
mov
pop
repnz
xchg
stc
add
das
and
mov
repnz
fbld
sub
repnz
sbb
add
fcmovb
mov
jg
and
or
mov
inc
adc
or
push
xchg
outsl
adc
and
clc
fistps
sbb
or
imul
and
cltd
or
sub
lods
xchg
testl
push
jns
push
movsb
lcall
inc
push
lret
adc
xchg
push
les
scas
adc
lea
xchg
rcll
fadds
mov
outsb
bound
shll
es
mov
cld
outsb
cmpb
fdivrs
add
in
jo
adc
cld
mov
bound
repnz
xor
xchg
test
push
je
filds
xchg
scas
incl
jo
outsb
and
or
push
ret
loopne
sarb
int3
mov
aad
aas
and
or
mov
or
repnz
imull
out
clc
lret
lock
and
xchg
lods
jmp
mov
movsb
hlt
and
in
add
push
dec
adc
in
out
mov
adc
loope
aam
adc
jno
mov
addl
mov
aam
lcall
loop
sub
add
lcall
stos
fisubs
and
xchg
scas
insb
imul
sub
pop
xchg
fisubrl
imul
jae
lret
cmp
ljmp
xor
jle
dec
out
xchg
decb
mov
popa
push
adc
clc
pop
xchg
jns
sbb
sbb
mov
push
shrb
add
lcall
xor
jo
xchg
mull
loopne
jno
out
or
add
inc
fsubrs
push
adc
adc
or
jns
pop
adcl
stos
notl
lods
push
and
inc
shlb
mov
or
dec
loopne
sub
adc
or
popa
or
pop
mov
ret
fdiv
push
fisubl
sub
sbb
push
cld
add
nop
and
out
vpmovzxbq
sub
add
dec
daa
push
add
sarb
lret
dec
mov
push
pop
cmp
pop
and
inc
fcompl
call
sbb
or
add
pop
lock
cmp
shrl
in
nop
or
xchg
mov
lods
sbbb
nop
mov
xchg
fiaddl
xchg
rcll
jno
xchg
enter
sbb
mov
xchg
iret
fiaddl
jp
orl
subb
hlt
mov
pop
addr16
push
add
sub
push
push
dec
and
jg
push
push
sbb
push
ret
out
inc
inc
std
sub
pushl
out
or
jb
loope
lea
or
or
pop
push
or
movl
pusha
or
es
xor
push
jo
mov
or
adc
jp
add
mov
cmpsb
sub
clc
xchg
or
out
push
mov
clc
or
fdiv
or
adc
fcomps
push
pop
pop
ficoms
add
cltd
push
shlb
lods
or
pop
xchg
shll
add
jle
inc
addr16
xor
jg
xor
adc
pop
stos
repnz
add
movsb
inc
lock
inc
sar
sahf
aaa
ret
or
aaa
loopne
cwtl
add
call
stos
nop
push
or
add
and
insb
adcl
fcoml
xor
addb
lea
mov
lcall
clc
fwait
mov
adc
es
xchg
sbb
adc
mov
shld
sbb
sbb
es
or
mov
cmp
pop
xchg
lock
pop
or
lds
dec
rorl
lock
fdivp
mov
daa
and
divb
mov
mov
and
adc
popa
dec
call
inc
testl
and
adc
mov
data16
and
in
mov
and
sub
mov
scas
jo
cmp
mov
cmpsl
mov
mov
push
inc
mov
imul
out
and
xor
jo
in
fildl
sbb
inc
push
push
pop
push
xchg
pop
lea
test
xchg
test
push
daa
adc
cld
jmp
loopne
rorl
dec
add
daa
js
test
aaa
inc
les
fdivl
adcb
cmp
or
push
push
dec
jo
loop
insl
push
das
add
xchg
lahf
mov
push
dec
cmpsl
push
pop
lret
push
add
adc
mov
mov
mov
nop
test
mov
push
adc
mov
push
adc
cmp
and
loope
loope
mov
add
cmp
lcall
loope
xchg
ljmp
rolb
sub
loopne
jbe
mov
les
jp
push
cltd
into
or
jo
xchg
push
and
pop
clc
out
loopne
add
add
aas
lock
out
subps
mov
sbb
xor
push
outsl
je
dec
jmp
in
es
inc
daa
in
pop
xchg
or
xchg
lcall
sub
mov
cmp
cmc
adc
cli
xor
mov
cmp
push
pop
push
pop
lock
cltd
andl
filds
lret
cltd
bound
cmpsl
xchg
popa
add
out
imul
std
insl
add
inc
push
or
mov
testl
xor
loop
ss
cmp
out
add
xchg
incl
pop
xor
mov
or
jle
dec
adc
lcall
popa
adc
sub
das
mov
in
mov
jp
inc
idiv
xchg
adc
loop
jecxz
cvtps2pi
pop
pusha
mov
popaw
and
lcall
and
push
and
ret
push
pop
adc
adc
enter
scas
pop
andl
les
adc
add
scas
inc
cmpsl
push
ljmp
xor
push
sbb
add
movzbl
sub
inc
jno
mov
sti
nop
xchg
and
push
xor
or
push
sti
mov
int3
ret
cwtl
loop
inc
jg
stos
test
pushf
xchg
mov
adc
pop
xchg
pop
insb
popa
dec
cmpsb
fdivrl
xchg
repnz
adc
enter
cmp
sbb
call
enter
and
out
je
mov
adc
inc
fwait
call
pop
mov
or
or
add
ret
loopne
pop
push
xchg
cmpsb
minps
add
mov
fiadds
data16
mov
mov
add
fs
or
sbbl
outsl
cmc
push
out
xchg
mov
test
mov
push
movsl
and
push
shrl
mov
adc
mov
aaa
bound
inc
mov
mov
mov
and
and
movsb
and
lock
adcb
xchg
inc
xchg
ficoms
inc
test
pop
stos
lcall
mov
add
call
repz
jecxz
xchg
mov
ljmp
hlt
dec
nop
mov
aas
pop
fcomps
rolb
outsb
test
je
cmp
xchg
adc
in
xchg
inc
or
xor
or
sub
fisttpl
sbb
subb
lods
test
adc
adc
repz
clc
add
push
rol
sub
and
std
pop
test
clc
insb
movsl
fnsetpm(287
and
out
inc
mov
loope
or
mov
fsubrs
sbb
std
jg
aam
sbb
inc
jge
pop
loop
js
add
xor
fsubrs
out
addl
mov
and
mov
jno
adc
mov
arpl
mov
inc
fadds
dec
lcall
jo
adc
mov
adc
inc
add
jmp
ds
push
test
insb
sti
push
adc
mov
ror
adc
insb
push
roll
dec
call
mov
add
fnstsw
fs
popf
xchg
or
notl
add
add
and
mov
cmpl
hlt
in
mov
add
icebp
int3
dec
inc
jecxz,pn
aaa
nop
jmp
insb
fucom
add
outsb
or
decb
and
mov
shll
push
bound
int3
mov
mov
mov
repz
jg
add
mov
mov
push
and
out
cmpsl
aaa
jb
inc
fmull
rorb
add
fsubl
xchg
mov
jle
test
mov
push
cld
or
or
dec
test
inc
xlat
adc
rolb
popf
into
orb
cmp
pop
add
add
mov
repnz
pusha
rclb
or
mov
mov
test
pop
dec
pusha
dec
cmp
mov
subl
inc
pop
mov
sahf
and
add
xlat
shlb
scas
cld
xchg
mov
fs
and
and
mov
in
mov
or
and
xor
push
insb
fdivrs
adc
and
mov
insb
add
addb
sahf
loopne
clc
lcall
lock
mov
mov
add
insb
stos
mov
adc
and
in
push
mov
ja
or
movsl
xchg
sub
mov
fisttps
and
rclb
sub
mov
insb
jae
sbb
fsubrp
out
arpl
inc
repz
adc
mov
adc
loope
sub
adc
add
rcr
clc
xchg
fcomps
test
add
idivl
push
or
and
pushf
and
daa
jne
mov
adc
fs
push
rcll
mov
fbstp
imul
pop
inc
mov
jne
es
add
mov
jg
fcompl
mov
aad
repz
xchg
inc
pop
arpl
add
sbb
out
add
jl
xor
jbe
ret
xchg
mov
inc
jg
mov
add
inc
dec
and
cltd
ljmp
inc
push
cli
mov
or
scas
push
sbb
aaa
loopne
inc
or
cmp
or
xchg
insb
and
and
das
push
cmpsb
cld
mov
add
push
scas
nop
cs
pusha
add
repnz
adc
pop
popa
in
popa
mov
xchg
pushl
clc
lret
or
out
movntq
out
loop
ret
ljmp
mov
roll
add
insb
sahf
inc
push
ret
adc
pop
push
or
adcb
xorb
pop
jecxz
sbb
movsl
mov
fisubrs
xchg
ljmp
mov
mov
lock
push
mov
add
xchg
pusha
es
incl
movb
and
popa
movsl
adc
shll
lret
pop
and
test
scas
mov
push
sbb
push
pop
and
out
addl
rol
pop
or
sbb
out
outsb
adc
pop
or
ret
inc
orl
xor
and
mov
adc
mov
inc
inc
adc
push
push
add
pusha
repnz
add
jge
cmpb
shll
and
inc
xor
or
add
pop
sub
adc
mov
js
dec
sbb
mov
sbb
xchg
mov
scas
rolb
or
inc
rorb
adc
xchg
out
mov
fisttps
call
ret
cltd
sub
cvttps2pi
cltd
inc
aaa
pop
jo
sub
and
in
mov
pushf
lret
adc
icebp
nop
addl
xchg
div
mov
in
stos
mov
in
ja
dec
ret
push
mov
jae
push
add
enter
mov
mov
in
stos
addb
decb
stos
shll
inc
das
mov
and
push
mov
lock
dec
push
xchg
mov
mov
sbb
inc
scas
sar
pop
or
inc
repnz
addb
mov
lea
mov
icebp
sbb
mov
add
jle
or
and
fistpl
sub
xchg
push
das
push
push
or
and
xor
mov
pushl
add
nop
push
adc
aam
xchg
cwtl
fsts
jmp
inc
pop
and
xchg
add
add
xchg
and
add
pop
add
pop
add
xchg
mov
icebp
data16
sbb
int3
xchg
loop
adc
adc
daa
jo
cmc
es
incl
xchg
add
dec
xchg
and
sub
push
in
add
clc
or
and
adc
xchg
add
mov
adc
and
and
cmp
xor
outsb
dec
shrb
mov
push
js
call
in
insb
icebp
outsb
jecxz
xchg
sbb
xor
inc
add
aad
mov
rcrb
mov
add
adc
into
int3
and
push
xchg
in
cmpsl
mov
jle
pop
and
data16
adc
addb
push
push
and
pop
inc
and
insl
scas
or
mov
push
in
add
adc
mov
add
movsl
sub
lds
cmp
jmp
cmpsl
cmpsb
xchg
in
adc
js
aas
out
adc
adc
pop
push
ss
add
mov
testl
push
jmp
pop
mov
cmpsl
mov
or
jmp
cmp
adc
push
ret
add
sub
push
daa
fsubrl
lock
xchg
loop
pusha
jg
push
repz
xorb
push
xchg
rorl
inc
jge
mov
mov
push
fmull
dec
out
lcall
jmp
adc
xchg
cmp
or
add
sahf
hlt
out
hlt
nop
jl
cli
lcall
fs
hlt
test
aas
inc
xchg
adc
frstpm(287
outsl
add
repnz
push
mov
push
in
rorb
jo
popa
and
mov
insb
adc
xlat
pusha
cmp
inc
aam
ret
mov
push
mov
or
jbe
sbbb
imul
mov
adc
lods
sbb
fcompl
add
insl
fiaddl
stos
sbb
stos
call
lret
data16
xorb
repz
adc
pusha
xor
adc
filds
fmull
lcall
ds
adc
movsb
add
cmp
lcall
mov
movsb
mov
sub
push
rolb
push
dec
xchg
fmuls
push
adc
add
int3
aaa
cmpsb
addb
mov
int3
sub
add
sbb
movsl
addl
push
adc
push
fwait
adc
popa
stos
pop
dec
cli
push
pop
and
pop
add
add
mov
in
testl
push
addb
aas
add
add
dec
insl
mov
mulb
and
shlb
push
jecxz
das
mov
adc
pop
sbb
inc
fldt
sarb
and
shlb
xchg
ret
outsb
mov
lcall
rcrl
mov
fmuls
std
lock
mov
out
mov
mov
call
cmpsb
fcompl
call
sbb
mulb
and
inc
xchg
lock
mov
mov
or
sbb
cmp
push
or
cltd
cmp
mov
hlt
out
shrl
jno
inc
cld
adc
adc
scas
pop
sti
xchg
les
cmp
fildll
pop
sbb
in
aam
jbe
pop
aad
sbb
jb
inc
pop
mov
and
push
and
int3
das
test
sub
clc
push
xorb
aaa
sub
mov
test
push
xchg
hlt
aaa
mov
mov
dec
rcll
and
dec
sub
add
cli
fwait
inc
hlt
cmp
or
sbb
xchg
outsb
and
and
nop
rcrb
jmp
mov
push
mov
mov
outsb
movsb
pop
add
je
adc
lock
fsubp
adc
out
ret
rcl
cltd
mov
mov
sbb
outsl
mov
subb
rclb
fcoms
loop
sahf
cmpl
lock
repnz
inc
push
xor
sbb
and
cwtl
and
int
mov
mov
add
cmp
add
add
lock
push
mov
stos
lock
add
and
call
push
out
fisubl
mov
popa
pop
imul
and
clc
dec
je
pusha
adc
add
pushf
mov
outsl
cmp
jecxz
or
outsl
repz
sbb
and
push
jmp
or
fnstenv
cmpsb
loopne
push
ja
add
mov
dec
shl
out
xor
pmulhuw
orb
adcb
add
adc
mov
pop
or
out
adc
sbb
add
jnp
pusha
loop
push
stos
test
lods
jbe
shrb
in
mov
aaa
mov
cmpsb
divl
mov
pushf
adc
sub
add
fcmovnbe
ficoml
sub
and
test
mov
ror
xchg
pop
inc
jg
cmc
lret
jmp
cmp
cmp
sbb
and
std
bound
push
loopne
sbb
bound
sbb
in
fstpt
inc
jmp
mov
fsubl
cmp
sbbl
je
pop
add
or
aad
xor
fdivrp
call
insb
sub
xor
std
outsl
sub
inc
cs
sahf
xchg
ret
cmp
les
aas
mov
fsubs
hlt
jo
cmp
sbb
rol
stos
std
outsl
pop
hlt
inc
mul
cs
pop
loop
dec
mov
pavgb
sbb
cmp
movd
int
add
mov
pmulhw
out
paddb
loope
lcall
adc
cmp
in
in
xor
cmp
insb
and
xor
sti
das
cli
cmp
mov
nop
sbb
addr16
cmp
pop
jnp
aad
xor
int
push
xor
or
sarl
cmp
nop
mov
cli
lcall
and
icebp
rolb
subl
subl
fwait
mov
dec
jo
pop
and
pop
and
test
imul
sub
mov
insb
pusha
mov
pop
add
adc
sub
or
cmpsb
or
push
sbb
sbb
jl
outsl
adc
popa
or
ret
add
dec
fwait
dec
popf
and
xchg
sbb
push
mov
mov
mov
int3
orb
xor
xchg
add
xor
mov
leave
cmp
xor
mov
mov
sub
in
inc
cmpsb
add
aas
sbb
sub
xchg
sub
sub
push
rcl
lcall
pop
mov
dec
punpckhbw
jo
insb
adc
push
add
jmp
je
leave
pop
push
lock
push
jp
and
aaa
mov
dec
push
mov
dec
add
and
in
xchg
cmp
adc
cli
push
xor
cli
or
orb
lock
into
add
xor
mov
int
ss
subb
js
xchg
jmp
nop
inc
mov
addb
add
inc
push
jo
and
xchg
add
xor
in
dec
aaa
rcl
sbb
mov
int
je
daa
sbb
lock
daa
aaa
in
push
jge
in
aaa
push
push
xor
pop
and
mov
sbb
inc
mov
add
into
subl
pusha
add
xchg
sbb
notb
mov
add
or
add
outsl
sbb
inc
daa
sub
aas
adcb
cli
lea
fildll
add
add
sub
or
stos
call
inc
bound
jno
ret
add
inc
push
int3
sub
rorb
pop
jo
pop
fnstsw
sub
pop
test
push
xor
or
lds
mov
sub
ljmp
xor
movsl
lret
nop
test
aad
jl
sbbb
add
out
jg
cmpb
add
add
addl
pop
sub
add
ret
xor
insb
jmp
fsubrl
fiadds
mov
add
ret
loop
xadd
pop
shrb
in
aad
jb
fildl
in
xchg
lods
aas
add
mov
out
xor
fsubrp
pop
xchg
sbbb
loope
push
fcomps
adc
push
sarl
and
in
jb
dec
jp
or
movsl
inc
daa
cld
out
in
in
orl
mov
sbb
sbbl
or
sbbl
adcl
cltd
mov
test
orl
and
mov
mov
push
rolb
push
fsubrl
rcl
sbb
fsubr
out
in
sbb
or
adc
lahf
push
cmc
lahf
scas
ret
sbb
add
stos
sub
cmpsb
ret
in
or
mov
mov
sbb
ds
outsl
int
push
sbb
std
rolb
xor
xchg
repz
pop
and
push
xor
pushf
or
je
rcl
or
test
fwait
es
sbb
mov
lds
ss
inc
xor
sub
imul
in
push
cld
push
xor
addl
pop
cmp
clc
pop
cmc
aaa
in
inc
sub
add
andl
ss
ljmp
pusha
cmp
sub
jg
imul
loopne
lcall
and
or
orl
pop
xor
xor
or
mov
inc
adc
push
lock
sub
add
ss
and
mov
jo
test
test
push
sub
mov
ljmp
daa
mov
inc
jge
dec
addl
test
test
fidivs
stos
dec
in
outsl
xor
adc
push
add
jg
loop
and
aam
mov
cmpb
es
out
div
fwait
mov
inc
add
in
in
movsl
and
in
jg
fsubp
hlt
pusha
orb
push
shlb
insb
stos
pop
mov
imul
inc
jg
jmp
es
and
or
push
sub
inc
push
jmp
fildll
or
ret
push
sub
stc
mov
loopne
push
and
incl
xor
movsb
lods
fldl
stos
dec
or
xchg
pop
sub
push
ret
test
out
and
push
mov
bswap
lret
mov
adc
je
inc
imul
push
jbe
sub
add
mov
mov
mov
call
bound
in
je
mov
aam
add
xchg
sbb
xchg
sub
add
xchg
ljmp
xlat
in
and
xchg
jp
mov
adc
cmpsb
in
jmp
add
insb
sub
cmpsb
fcoml
mov
icebp
outsl
incl
cmpsl
and
iret
sub
ljmp
in
add
mov
hlt
rcrb
jecxz
jmp
add
adc
mov
into
jmp
adc
inc
mov
mov
leave
push
xor
and
cs
sub
pop
repnz
rol
lods
cmpsb
push
adc
orb
push
mov
sub
aaa
and
jle
inc
mov
and
xchg
outsb
and
jg
lock
sub
and
lea
xchg
pusha
hlt
and
into
inc
popa
pop
add
pop
fdivrl
mov
insl
xor
xchg
daa
inc
add
and
data16
inc
subb
scas
mov
xlat
popa
iret
insb
adc
mov
or
mov
sbb
or
adc
int
inc
mov
adc
inc
stc
or
or
shrl
orb
mov
fwait
insl
mov
push
nop
inc
fs
or
movsb
aaa
mov
xchg
fiadds
xor
fcomip
inc
pop
arpl
push
sbb
insl
test
addr16
je
popa
pusha
push
and
pop
sarb
orl
daa
and
sbb
jb
shrb
mov
rolb
add
inc
daa
xchg
lss
or
in
jmp
xchg
aaa
push
add
js
cli
or
das
fdivl
add
xor
mov
andb
fsubl
push
sub
jbe
push
dec
pushf
push
subl
jb
mov
mov
xchg
or
push
ret
add
or
icebp
add
or
xchg
add
lcall
dec
mov
pop
hlt
adc
add
xor
fcoms
lock
adc
call
fbstp
in
cmp
inc
rcrl
add
in
xor
mov
pop
ljmp
mov
sbb
push
fdivrl
hlt
into
mov
pop
shlb
sbb
and
andl
mov
int3
mov
mov
pop
mov
adc
or
mov
scas
mov
add
push
push
jmp
call
rorb
jne
mov
out
cmp
mov
or
pop
iret
xor
loope
inc
or
and
roll
cmp
data16
sbb
push
cld
pop
add
xchg
jno
aad
hlt
dec
add
xor
or
sbb
sbb
pop
shrb
rclb
bound
dec
sbb
mov
sbb
pusha
xlat
pop
in
push
mov
pop
push
xor
rcll
icebp
sub
fdivp
ds
push
movsb
jmp
add
lea
push
pop
mov
push
loop
adc
sbb
aas
iret
adc
mov
and
insb
adc
cs
ss
pop
sbb
mov
jecxz
add
stos
xchg
ficoml
add
mov
sbb
mov
cld
or
cmc
cmpsl
pusha
jge
mov
adc
fisttps
inc
stos
outsb
stc
andl
mov
push
inc
movsb
loopne
inc
test
sub
push
jle
mov
iret
pusha
sub
mov
or
mov
add
or
dec
adc
fsubrs
inc
mov
jo
pusha
xchg
cwtl
test
mov
insb
push
dec
es
jmp
xor
and
pop
sbb
rcr
das
orb
push
outsl
adc
mov
add
mov
jmp
les
cmc
inc
repnz
shlb
lock
xchg
fwait
insb
hlt
pop
mov
mov
mov
or
repnz
xor
movsl
pushf
insb
push
push
les
or
add
mov
int
sub
shlb
jo
and
lock
add
push
mov
fucomi
in
cmpb
adc
push
or
test
rcrb
lods
data16
lock
mov
dec
das
xor
push
and
xchg
psrad
ret
adc
mov
outsb
ss
nop
sbb
add
push
adc
scas
call
jno
out
rcrb
das
xor
gs
adc
adc
repnz
mov
movl
sbb
mov
lret
mov
inc
add
or
push
rcll
jo
inc
or
jbe
sbb
cwtl
add
ljmp
jg
sbb
add
push
cli
es
imul
adc
outsb
ljmp
insb
xor
add
inc
jecxz
popa
sbb
cmpsl
cmpl
decl
divl
add
add
fadds
in
pop
movsb
xor
inc
inc
mov
inc
fmull
or
shll
add
add
pop
sub
ret
mov
or
inc
push
test
inc
bswap
je
out
jo
sub
stos
add
mov
mov
adc
mov
nop
add
sub
push
xor
lcall
sub
and
adc
push
dec
sbb
mov
pop
cld
stos
sbb
nop
mov
dec
loopne
loop
cmp
int
imul
cli
adc
in
loope
aam
cmpsb
mov
or
cltd
sbb
fdivs
cld
loop
and
xor
shrb
adc
xor
push
aaa
ss
or
loop
loopne
xor
out
popa
ss
jo
xor
or
or
add
pop
and
shrl
inc
mov
cmp
or
mov
scas
rorl
jecxz
xchg
and
adc
push
add
pop
pop
mov
pop
fildl
in
mov
adc
lcall
jg
sbb
adc
and
pop
and
lods
jb
or
outsl
insb
movsb
lock
inc
jnp
adcl
in
xchg
adc
add
jns
mov
inc
outsl
test
push
imull
imul
mov
test
incl
nop
unpckhps
sbb
mov
mov
cli
mov
jnp
and
mov
orb
xor
mov
xchg
inc
or
call
loopne
icebp
push
xor
adc
push
xor
test
and
ljmp
mov
or
bound
xor
lods
aas
rolb
ds
call
push
add
push
adc
pop
pusha
mov
outsl
sbb
call
addr16
popa
bound
lock
rorb
or
ud2
inc
imul
adc
test
outsl
repnz
adc
fisubrl
cmp
loop
bound
in
lea
icebp
xchg
rcrb
int3
repnz
mov
loopne
mov
inc
sub
icebp
fildll
out
adc
cli
push
out
subl
lods
rclb
loopne
mov
and
icebp
add
popa
push
arpl
or
rorl
add
clc
les
sbb
mov
out
insb
sub
or
pop
insl
clc
psubsb
lock
or
adc
outsl
or
xor
add
xor
bound
ret
loopne
jg
ss
push
cli
mov
xor
xor
aad
and
jecxz
pusha
adc
or
mov
sti
shlb
pop
mov
andb
mov
mov
scas
aam
popa
aam
ja
fwait
add
xchg
ja
cmp
cwtl
cli
int
bound
push
pop
jecxz
and
and
xchg
pop
adc
or
and
mov
lret
je
in
add
adc
jl
add
mov
pop
bound
push
std
add
fcoml
das
sahf
xchg
add
in
add
out
jg
push
xor
sti
sub
sbb
ss
outsl
sbb
pop
repnz
ds
aaa
xor
mov
nop
adc
lock
adc
xor
shlb
repnz
stos
or
and
lods
jae,pt
push
dec
and
or
or
xor
test
mov
insl
push
insl
adc
aaa
add
out
add
rcll
outsb
add
cmp
add
sarb
addb
outsl
mov
pop
or
or
mov
add
insl
add
sbb
or
sbb
sbb
or
sar
in
testl
ret
in
das
inc
out
test
xor
hlt
dec
ds
cmpsl
in
pop
adc
out
mov
or
lahf
inc
sub
mov
inc
cli
xor
outsl
add
lea
push
push
pusha
out
nop
lock
mov
mov
xchg
dec
outsb
pop
or
decl
cmc
mov
xchg
loopne
jae
dec
jecxz
incb
xlat
and
in
lcall
sbb
insb
mov
repnz
push
loopne
jge
add
jle
add
adcb
out
stc
aaa
inc
xor
sub
adc
push
pop
sbb
push
out
mov
pushl
enter
add
push
sbbb
pop
sub
add
add
adc
add
mov
pop
orl
incb
cwtl
or
addl
sbb
lret
mov
push
fmull
ds
mov
sub
cs
or
or
inc
sahf
sbb
or
in
jne
inc
or
ret
inc
movsb
push
iret
add
or
dec
and
add
sbb
mov
out
cld
test
push
jl
push
stos
xor
incl
test
mov
push
je
outsb
scas
pop
stos
add
andl
dec
pop
push
push
mov
xchg
add
sahf
rorb
sbb
jg
pop
push
adcb
and
ret
ds
add
loop
daa
pop
add
fdivl
mov
sbb
jo
jo
jb
push
jo
jl
add
insb
out
es
jo
loop
mov
mov
sahf
in
out
rol
add
and
pop
outsb
fidivs
push
jmp
loop
loop
loope
in
lods
stos
mov
mov
stos
push
faddl
scas
xchg
push
or
ret
movsb
stos
inc
addr16
outsl
neg
xchg
les
adc
out
adc
imul
sbb
mov
loop
lret
sti
xchg
mov
sbb
sbb
rolb
lods
jg
jno
and
movsb
sti
cmpb
or
sbb
push
dec
sarb
xchg
or
nop
aaa
js
je
adc
push
sbb
in
sub
lock
push
sbb
data16
sub
test
lret
push
icebp
inc
pop
xchg
lea
inc
add
inc
add
xchg
mov
and
push
xchg
mov
inc
pop
add
adcl
test
orb
push
loope
push
fimull
out
sbb
sbb
stc
cmp
pop
xchg
movsb
cmpsb
add
mov
adc
pusha
add
add
dec
adc
jle
setge
call
sbb
insb
mov
push
or
jp
and
mov
testl
insl
loope
nop
lods
aam
fcmovnb
mov
jecxz
scas
and
enter
jmp
lret
rorb
ret
outsb
sub
mov
in
lret
inc
xlat
loopne
into
lcall
clc
or
shlb
in
or
mov
popa
inc
mov
xchg
pop
mov
mov
jo
pop
in
fists
es
fmul
mov
in
xchg
sti
fs
clc
fistpl
ljmp
in
addr16
add
in
rorl
aaa
push
andb
inc
adc
decl
pusha
add
push
jmp
or
push
xchg
sub
dec
sbb
bound
xchg
jmp
rolb
into
add
repz
and
fbld
shlb
je
ljmp
loopne
sti
inc
psraw
repz
aam
daa
and
addb
cli
fbstp
movsb
cltd
fisubs
cltd
lret
mov
ret
test
sub
push
leave
mov
in
std
aaa
bound
decb
or
fsubrl
adc
leave
sbb
test
sbb
mov
inc
inc
jb
inc
pop
jecxz
jg
mov
inc
sub
cmp
inc
fstpt
mov
or
mov
jecxz
ret
clc
inc
inc
lcall
rcrb
movsl
pop
ret
mov
inc
push
push
call
in
movaps
cmpsb
pop
push
fldl
cmp
fs
mov
pop
push
loopne
jp
aam
dec
add
push
movsb
into
jno
cmc
fwait
push
cmp
adc
mov
push
lahf
in
and
push
fidivl
jnp
ror
hlt
cmp
sbb
mov
lock
jnp
sarl
cli
mov
pop
ss
or
aaa
cwtl
dec
lret
inc
fmul
ret
add
aam
pop
sbb
and
inc
add
add
ds
insb
sbb
adc
mov
dec
add
insb
testb
sbb
inc
lds
or
adc
fnstcw
push
insb
je
inc
xor
pop
xor
pop
sub
mov
xchg
shrb
ds
ret
cmp
sarb
mov
lea
jbe
adc
add
adc
pop
call
inc
rcr
aas
xchg
scas
pop
xlat
xchg
add
add
jmp
sub
rcr
jg
xor
sub
and
lar
loopne
xor
ret
nop
add
and
or
adc
cs
cmp
mov
ss
mov
sub
mov
int
dec
push
pusha
xor
adc
xor
pop
pop
in
xchg
jo
fadds
push
xor
es
xor
pop
push
nop
pop
shrl
sub
pusha
bound
fisttpl
mov
shl
cli
adc
add
adcb
lds
xchg
test
mulb
or
ljmp
mov
or
in
xchg
bound
enter
mov
testl
sub
pop
sar
mov
gs
dec
mov
sbb
xchg
jne
rcll
add
adc
inc
mov
push
cmpsb
nop
add
xchg
or
inc
xor
sbb
cld
cmp
out
add
and
jbe
dec
pop
je
cmc
and
or
movsb
shrl
pop
cmc
lods
mov
sbb
out
mov
nop
add
cld
inc
mov
xor
jecxz
push
xchg
add
jle
xorb
jo
mov
adc
fbstp
mov
jecxz
fcompl
or
and
add
mov
movsb
fcoml
sbbb
xor
push
out
mov
stos
push
movsb
inc
jecxz
sub
pop
fbstp
dec
jecxz
adc
add
xor
pop
mov
call
arpl
add
dec
call
movsb
mov
jo
shrl
pop
add
loope
lods
sub
push
inc
mov
sar
faddl
xor
sbb
sbb
test
outsl
or
pop
in
fwait
loop
ds
fs
dec
sbb
jo
call
pop
scas
and
push
add
push
out
mov
mov
or
outsl
pop
mov
and
sbb
cmpsb
ljmp
enter
push
mov
divl
xchg
shlb
and
adc
adc
add
xchg
or
xor
fsubl
pop
inc
loop
ficoms
xchg
pop
jg
scas
and
icebp
jl
and
push
or
xchg
faddl
sbb
hlt
es
mov
inc
sbb
or
and
or
add
xchg
test
adc
xchg
pop
and
or
and
sbb
pusha
mov
lret
out
fsubs
mov
in
xor
cmp
sub
dec
and
and
push
gs
int3
xchg
xchg
insb
fstpt
repnz
repnz
outsl
cmpsb
arpl
aaa
or
incl
ljmp
mov
or
xchg
movsb
adc
mov
movsl
sbb
sti
rclb
inc
ljmp
and
repz
divl
shlb
mov
ss
out
sub
insl
adc
das
outsl
adc
mov
pop
push
pop
mov
sbb
addb
ret
jb
sti
outsl
or
stos
sub
dec
sar
lock
insb
or
test
leave
insb
das
rorb
adc
icebp
les
pop
orb
mov
sbb
adc
jmp
add
icebp
jmp
fbld
add
mov
pop
push
pusha
jle
adc
and
sti
jmp
push
in
fs
and
icebp
xor
mov
add
push
inc
or
gs
fisttps
ss
inc
nop/reserved
sbb
lret
xor
out
mov
add
loopne
in
mov
mov
stos
push
mov
loope
cmpsl
fs
insb
sti
ja
push
mov
mov
or
add
and
mov
in
outsb
dec
mov
cs
addb
and
aaa
in
adc
lea
notl
or
adc
push
mov
in
out
jp
inc
lds
pop
pop
sahf
call
sti
xor
cwtl
aam
fidivl
pop
mov
dec
outsl
mov
outsb
inc
push
mov
mov
mov
ja
nop
jno
popa
sarl
in
pop
in
addb
and
rcrb
hlt
inc
add
cld
incl
adc
and
fbld
and
and
stos
imul
push
mov
insb
adcb
movsl
jp
push
add
push
add
stos
xchg
push
and
push
add
call
sbb
or
filds
push
xlat
insb
repnz
decl
outsb
pop
movsb
fdivrl
shlb
sbb
sbb
nop
cli
mov
sahf
push
loopne
push
inc
mov
addl
push
mov
rcpps
shl
ljmp
mov
add
add
js
jg
sbb
repz
mov
je
movsl
inc
adc
inc
shlb
dec
mov
mov
push
cmpsb
add
push
pcmpgtb
mov
int
lds
jb
push
lahf
add
mov
decb
push
pop
jo
fidivrl
sub
mov
xor
nop
dec
xor
sbb
cli
lahf
testl
call
cmp
cld
sbb
pop
inc
dec
nop
jbe
scas
fbld
adc
add
dec
xchg
test
movb
add
mov
fisubrs
insb
cmpsb
push
es
sub
rorl
pop
sub
add
or
inc
sub
outsl
mov
push
pcmpgtd
push
or
jo
shll
cs
mov
adc
push
add
cmc
decl
adc
inc
pop
inc
or
ret
nop
dec
cmc
ljmp
jb
and
sahf
pusha
inc
push
mov
push
xor
pusha
cmp
push
pop
pusha
adc
sbb
add
or
dec
loope
jb
inc
aam
fs
cmc
cmp
sub
loopne
jo
out
and
pop
add
cwtl
mov
outsl
cmp
mov
mov
mov
mov
gs
jmp
adc
loope
mov
rorl
aas
pop
xchg
jmp
sbb
icebp
push
ljmp
mov
jp
jmp
cmc
xor
addl
add
add
mov
inc
aam
xchg
mov
xchg
jnp
jmp
push
add
in
aas
mov
je
or
and
adc
nop
jmp
jecxz
pop
xor
nop
push
and
inc
cmpsl
and
ud0
aam
pusha
mov
es
sub
add
insb
aas
mov
test
cmp
in
and
clc
lea
mov
repz
mov
jecxz
lock
xor
and
ljmp
cmpps
bound
xor
push
add
lock
lds
adc
xor
daa
xor
mov
loope
jg
cmc
sbb
inc
insb
jl
push
add
movsb
push
nopl
sbb
and
xchg
fisubs
pushf
and
ret
or
pushf
push
adc
inc
or
ds
xor
es
in
andl
sbb
lcall
inc
mov
jp
add
sbb
add
add
pop
daa
punpcklbw
cs
psrad
sub
push
ret
aam
pop
xor
es
mov
pushf
add
aam
rcl
add
and
sbb
jecxz
orl
fadds
pop
jle
xorl
add
les
movsb
xchg
mov
add
mov
adc
imul
fcompl
or
add
subb
push
adc
ljmp
ljmp
add
orb
xchg
mov
add
add
xor
push
push
add
add
std
sub
adc
inc
add
mov
dec
leave
int
cmpb
andl
and
sbb
mov
sbb
xchg
or
inc
insb
or
orb
in
es
loopne
push
int3
call
es
decl
push
xchg
cwtl
jecxz
cltd
loopne
xchg
loopne
cltd
add
addb
roll
sub
xor
mov
andb
repz
inc
pop
aaa
push
inc
push
mov
push
mov
movsl
cwtl
inc
sbb
jno
mov
add
jmp
mov
add
or
rclb
and
sbbb
stos
pop
pop
scas
pusha
and
and
adc
cmp
sti
orl
mov
incb
dec
seta
imul
push
shrb
roll
cs
pop
mov
inc
pop
xor
fists
sbbb
jg
test
scas
add
adcb
rolb
push
jecxz
sbb
mov
mov
out
testl
fdivrs
jecxz
mov
les
mov
fucomi
xor
sarb
sarb
sti
inc
adc
push
push
or
add
sbb
ret
aaa
add
call
or
xor
or
test
xchg
divb
mov
add
adcb
xor
cmp
mov
push
add
jmp
ds
jbe
cmc
out
test
add
rorb
js
add
cwtl
mov
and
sbb
negl
pop
addr16
mov
scas
clc
xchg
add
xchg
cmp
mov
sbbb
mov
ret
add
push
mov
mov
sub
test
pushf
mov
inc
imul
add
push
fildl
mov
je
insb
nop
add
pop
clc
inc
or
push
aad
aas
mov
xchg
jecxz
cmc
jb
js
insb
mov
sbb
fdivl
inc
sarb
addb
inc
clc
mov
repz
push
fwait
add
insb
xchg
pop
adc
rcrl
and
jno
ficomps
jmp
pop
mov
add
gs
add
mov
fwait
or
mov
xchg
mov
pop
mov
mov
jmp
jmp
out
test
mov
stos
add
pop
xchg
pop
cli
outsl
mov
sbb
inc
sbb
cltd
iret
mov
xchg
test
inc
mov
push
add
imul
sub
loopne
popf
add
cmp
je
or
inc
jb
loopne
and
mov
lock
mov
movsbl
pop
setns
nop
repnz
cmp
test
sbb
adc
dec
mov
push
adc
jge
ljmp
call
and
inc
mov
push
lcall
in
sub
adc
mov
sbb
rolb
mov
and
shr
pop
xor
sti
out
movsl
xchg
in
or
push
loopne
sub
push
or
shrb
std
arpl
test
paddusw
loopne
cmp
jb
dec
ljmp
andl
sbb
scas
push
rclb
push
add
mov
jb
loop
mov
or
add
repnz
lret
dec
cltd
ret
and
jmp
mov
pusha
adc
std
loopne
or
jg
xchg
cmpsb
pop
insl
cmpsb
and
dec
mov
add
loop
cmp
faddl
inc
lahf
xchg
outsb
movb
or
sbb
inc
mov
mov
add
movsl
mov
jbe
adc
cltd
out
xchg
sbb
outsl
sti
xlat
mov
hlt
add
in
jbe
sbb
je
out
push
loopne
xchg
pop
jmp
clc
pushl
add
inc
and
cltd
lds
dec
es
dec
and
out
jbe
and
rcll
adc
mov
and
adc
adc
adc
adc
mov
adc
fwait
ret
jg
add
mov
xchg
adc
mov
pusha
aaa
cli
call
mov
push
mov
cltd
and
pop
insb
push
or
or
jecxz
add
fmull
mov
leave
pop
aam
outsb
inc
inc
jb
mov
data16
loopne
dec
mov
or
mov
movsl
orl
bound
xchg
inc
jbe
das
mov
or
pop
mov
loope
adc
lahf
les
xchg
popa
dec
add
pusha
rclb
sbb
mov
loop
sbb
adc
out
call
add
mull
loop
push
test
gs
add
jmp
faddl
add
or
daa
or
mov
adc
sbb
add
and
and
inc
mov
cmp
fs
and
add
in
mov
adc
push
into
mov
or
daa
mov
std
xchg
inc
or
loopne
dec
add
add
and
add
loope
or
inc
sbb
jb
mov
push
in
xchg
pushf
in
adc
mov
mov
jo
cmp
shll
cmp
adc
jg
repnz
sbb
jo
xor
adc
pop
mov
fcmovu
add
add
sub
cli
jg
push
pop
sub
xchg
enter
xor
sbb
nop
mov
enter
mov
push
out
in
lock
push
mov
xchg
sbb
jo
mov
xor
xor
mov
cld
mov
add
inc
cmp
and
aad
xchg
outsb
aas
shl
adc
jno
and
push
add
push
pop
push
or
test
add
adc
int
icebp
add
adc
in
add
mov
lods
or
mov
pop
ss
cmp
mov
in
rorb
adcl
aaa
rolb
sub
int3
es
test
push
lods
cmp
cmp
loope
mov
add
and
push
mov
adc
das
or
sbb
xchg
xchg
jo
push
mov
test
nop
mov
loop
push
icebp
fucomi
and
pop
rclb
nop
loopne
cs
es
jmp
test
loop
dec
inc
cmp
sub
sahf
inc
pushf
mov
movsb
into
mov
and
lock
mov
aas
sbbb
scas
inc
xorb
jmp
lods
fs
outsb
or
mov
ds
pop
push
add
dec
xchg
cmp
hlt
int
xchg
xor
or
add
sbb
inc
das
repnz
cmp
dec
pushf
inc
xchg
fdiv
fnsave
sbb
cmpsl
shlb
into
int3
cmp
mov
mov
cwtl
stos
push
push
adc
push
pop
pop
lock
andb
cmp
icebp
sbb
push
push
mov
mov
inc
sub
pop
inc
mov
push
add
sub
jecxz
jbe
adc
jne
push
into
not
mov
add
fcomps
or
mov
rcrl
adc
cmp
jbe
icebp
insl
jmp
dec
adc
lcall
mov
jmp
or
fcmovnbe
lock
out
mov
mov
lahf
repz
fstpl
lods
sahf
or
sbb
imul
and
push
or
outsb
mov
gs
cmpb
and
and
insb
mov
or
or
pop
add
fs
push
cwtl
and
xor
inc
mov
outsl
bound
add
out
adc
mov
fwait
leave
clc
mov
cwtl
out
mov
and
outsl
lods
mov
cmp
bound
std
ja
mov
or
xchg
lock
or
insl
call
mov
add
inc
add
add
iret
es
mov
mov
jmp
cmpsb
scas
fistpll
push
add
add
fmull
xchg
in
sub
add
cs
lds
jg
ret
fisttpll
xchg
adcb
popl
sbb
stos
adc
or
jmp
mulb
pop
xchg
icebp
xchg
cmpsb
mov
mov
rclb
or
pop
mov
fldcw
add
mov
dec
and
adc
and
mov
sbb
lods
xor
sub
and
push
cmp
fsts
mov
add
stos
sbb
xor
and
adc
call
sbb
mov
xchg
loopne
stos
mov
xchg
add
xor
fdivp
xchg
icebp
add
sbb
and
pop
cmp
xchg
adc
lret
fimull
je
cmp
sbbb
sbb
mov
loop
adc
les
push
xchg
adc
sbb
adc
rcll
mov
inc
pop
clc
cmpsl
nop
adc
adc
add
ljmp
push
mov
or
andb
adc
mov
movsb
inc
mov
notl
or
repnz
lret
mov
adc
sub
add
loope
ljmp
add
pop
mov
loope
add
mov
std
inc
fbstp
dec
out
push
xchg
scas
iret
cvttps2pi
repnz
mov
dec
test
dec
jl
sbb
ljmp
rcrl
test
add
jmp
mov
push
je
sub
das
sar
cs
rcl
adc
ds
xchg
pop
or
dec
out
jo
popa
add
push
dec
js
adc
xchg
push
mov
mov
gs
repz
add
jnp
and
xlat
adcb
inc
dec
aaa
or
push
outsb
cmp
lds
pusha
add
rclb
add
call
xchg
dec
mov
ljmp
nop
mov
add
sbb
add
pusha
pop
jb
adc
shl
add
mov
push
mov
orb
in
push
xor
bound
scas
bound
xor
clc
int3
adc
in
cmpsb
xor
mov
or
lcall
js
mov
inc
iret
mov
sbb
les
xchg
mov
or
adc
mov
and
or
add
repnz
xchg
loopne
add
int3
pop
xchg
mov
sbb
rcr
inc
and
decl
iret
or
ret
movb
or
loopne
jg
or
inc
in
add
or
adc
aas
add
jmp
mov
add
xchg
and
out
sbb
inc
ss
stos
push
pop
test
sbb
popl
add
inc
sbb
and
mov
cld
inc
xchg
shlb
cmp
out
negb
and
repnz
or
or
sub
fs
sbb
push
push
mov
or
push
out
push
mov
clc
xlat
mov
add
cmpb
and
stos
mov
add
or
xor
lds
mov
add
setle
pop
and
cltd
inc
add
add
pop
divb
fsubl
xor
std
bound
mov
adc
or
adcb
mov
stos
add
in
and
sub
and
mov
addb
pop
push
jecxz
push
mov
cmp
add
fmuls
and
bound
cld
out
aad
adc
cmpsb
filds
and
adc
sub
mov
in
mov
and
and
orb
jmp
dec
subb
xchg
fisubrl
in
bound
insl
add
addl
xor
add
xor
mov
jle
mov
cltd
or
dec
mov
push
pop
push
mov
and
insl
cmp
mov
xchg
and
les
mov
les
adc
sbb
add
mov
mov
push
sub
or
das
ss
out
sub
or
insl
out
add
xchg
out
add
sub
in
int
xchg
push
insb
es
mov
repz
into
fdivl
xchg
jmp
fsubrp
fisubs
popa
ss
xor
lds
addb
mov
mov
jbe
add
and
dec
add
xorb
mov
and
or
cli
subb
or
inc
inc
mov
add
les
pop
add
adc
lods
jmp
notl
mov
push
inc
or
adc
push
mov
pusha
sbbl
mov
fisubs
push
push
aam
push
push
push
test
test
xchg
hlt
adc
dec
inc
or
dec
decl
xor
fnstsw
mov
pop
pushf
rolb
lfence
insl
repz
inc
sti
inc
sbb
es
movsl
add
out
xchg
cli
push
pop
incl
or
in
and
add
lods
addb
push
sbb
loop
and
inc
or
xchg
jbe
shlb
cwtl
in
and
aas
nop
sbb
sbb
outsl
mov
sbb
fnstsw
in
insb
addr16
bound
xor
fcmovnu
xor
xorb
sbb
push
mov
and
andl
mov
fbstp
mov
adc
out
mov
push
popa
jecxz
fbstp
mov
inc
add
add
outsl
push
add
into
ljmp
sar
xchg
add
inc
add
test
adc
push
and
loopne
cmpsb
pop
cmp
sbb
adc
push
push
enter
insl
shrb
push
out
nop
xor
push
sub
push
gs
push
mov
rolb
add
ljmp
push
inc
mov
scas
shl
ljmp
and
and
add
lock
int3
mov
or
insb
pop
pop
push
in
das
test
dec
lea
es
int
sti
stos
mov
test
mov
fisubrs
fs
cmp
inc
push
cli
in
das
inc
jl
lcall
jl
mov
pushl
in
add
jno
fcomps
dec
jp
mov
scas
loopne
arpl
comiss
out
add
outsl
shll
lea
mov
fimuls
inc
inc
sbb
clc
mov
loop
loopne
loop
sub
adc
inc
push
test
shl
mov
pop
aam
push
pusha
adc
add
mov
dec
sbb
sbb
xchg
ret
out
xchg
pop
rol
hlt
into
push
mov
jp
pusha
jl
mov
inc
or
mov
sub
sbb
xorb
lret
add
iret
sub
or
inc
das
push
mov
lret
decl
add
adc
and
mov
lock
popa
inc
cmpb
xchg
inc
push
subb
mov
mov
sbb
sub
pop
arpl
lds
xchg
add
jns
push
add
push
add
jnp
mov
rol
bound
adc
sbb
adc
shrb
jmp
rclb
and
pusha
add
aas
stos
mov
adc
mov
inc
bound
loop
and
ret
and
aam
ret
jle
add
pop
push
outsb
dec
jecxz
in
pop
mov
sub
mov
mov
adc
ret
sub
rcrl
pop
and
or
xor
pusha
or
mov
push
ret
adc
sbb
es
add
shrl
push
repnz
mov
lahf
pop
pop
pop
nop
xor
int3
mov
outsb
or
pop
xlat
call
and
dec
or
scas
loop
and
xchg
movsl
aas
xor
sbb
mov
movsb
aad
mov
mov
inc
dec
loopne
ljmp
lock
sub
lods
and
pop
jle
jecxz
xlat
stc
add
rcr
mov
xchg
xchg
mov
outsl
pushl
add
aad
not
cmpsb
outsl
adc
sbb
add
je
in
inc
inc
add
push
pushf
mov
xchg
and
lahf
and
orl
xor
sub
ljmp
sbb
sbb
xor
les
test
ds
outsb
pop
or
mov
adc
xchg
in
movsb
sarb
adc
add
adc
scas
rorb
pop
sahf
sub
sbb
lods
and
push
mov
and
fsubrl
sti
loope
repz
jmp
sbb
sub
and
push
insl
jmp
aad
xlat
incb
mov
and
insl
stos
test
outsl
and
sbb
icebp
push
add
mov
stc
lods
and
popa
xor
mov
mov
int3
sub
add
and
xchg
lea
jmp
push
sbb
test
cmp
lcall
or
inc
in
pop
push
outsb
ss
mov
mov
push
fs
in
adc
fs
or
insl
mov
jp
jg
xchg
or
xchg
lock
sbb
or
pop
es
loope
fbstp
decb
add
xchg
call
cmpsb
fdivs
mov
fbstp
push
adc
xlat
loopne
adc
add
insb
out
mov
xchg
in
mov
or
mov
ljmp
adc
pop
add
scas
in
jb
or
clc
fists
int3
mov
inc
dec
subb
dec
out
out
mov
icebp
add
add
dec
or
test
rcr
lcall
in
push
xchg
in
pop
shrl
cmpsb
xor
nop
in
in
sbb
inc
pusha
push
xor
inc
and
xor
test
and
sbb
lds
jle
and
xchg
inc
ljmp
cli
loopne
sbb
outsl
sbb
pop
movsl
fs
jo
lods
adc
mov
daa
push
in
pop
mov
or
sbb
insl
insl
es
in
stos
add
add
add
and
mov
xchg
push
insl
mov
loope
jmp
faddl
sub
xchg
les
mov
mov
dec
push
mov
insl
hlt
out
repz
sub
pop
cs
push
push
lods
inc
and
mov
pop
hlt
call
and
mov
adc
xchg
repz
push
xchg
jle
fidivs
popa
push
cli
or
insl
stos
mov
xchg
adc
lods
push
add
ljmp
mov
jne
shlb
scas
sub
loopne
inc
fsubl
and
pop
pop
mov
jmp
push
mov
pop
insb
sbb
stos
sbb
ret
insl
icebp
in
mov
and
push
adc
stc
adc
stos
sbb
test
xchg
sub
add
inc
sbb
insb
mull
icebp
pop
xchg
in
push
sti
stos
scas
enter
dec
or
ljmp
sbb
adcb
push
out
or
add
pusha
test
in
xchg
xchg
repnz
mov
add
add
or
sti
pop
or
lea
and
lock
or
and
ss
in
push
sub
sti
mov
scas
and
and
pop
or
or
xchg
mov
pop
or
add
sbb
das
add
jo
jmp
cmp
nop
push
jb
pop
adc
sub
mov
lock
or
insb
shl
pop
hlt
out
mov
setl
or
or
or
jmp
test
and
mov
adc
subb
in
add
adc
cld
idiv
and
inc
cmpsb
add
and
or
in
xor
sub
stos
add
or
ret
jmp
push
or
or
loop
and
mov
add
sbb
mov
clc
inc
out
mov
incb
adc
cld
fildll
ror
xchg
mov
in
subb
xchg
scas
or
push
nop
shrl
pop
in
jmp
outsl
mov
mov
xchg
out
mov
or
outsb
nop
inc
jmp
insb
mov
mov
repnz
filds
mov
fldt
loopne
or
incl
jp
mov
insl
out
xchg
jmp
mov
in
sbb
mov
iret
popa
add
cli
pusha
xor
push
jmp
mull
icebp
sbb
es
pop
mov
cmp
iret
push
icebp
scas
test
ret
mov
cld
shll
hlt
fisttps
stos
adc
es
jp
rorl
adc
nop
popa
lret
test
loop
pop
mov
enter
add
push
push
clc
dec
pop
xchg
adc
nop
mov
push
pop
filds
lcall
dec
hlt
dec
in
ret
push
fs
nop
iret
adc
aad
mov
add
pop
add
add
add
push
add
and
das
xor
push
mov
sub
or
movzbl
add
xorl
jge
inc
lar
add
mov
fnsave
xor
fiaddl
mov
jecxz
loop
es
sahf
insb
sub
insb
ret
ss
pop
sub
pop
xchg
stos
adc
mov
mov
push
add
push
add
icebp
mov
and
mov
inc
add
push
push
in
push
push
cmp
mov
out
decb
add
push
sbb
or
filds
sahf
sbb
or
add
pop
call
outsl
jo
and
mov
cli
or
sti
inc
shlb
fstpt
adc
and
push
jecxz
inc
hlt
mov
fidivrs
lcall
add
shr
xor
push
adcb
pop
int3
pusha
or
adc
adc
push
lea
lcall
cmpb
jg
jo
add
insb
ficoml
mov
notb
mov
loopne
xor
mov
push
and
ljmp
or
pusha
movsl
mov
lock
lods
or
mov
mov
stos
mov
clc
dec
add
xchg
jmp
jnp
xor
ljmp
dec
jnp
testb
nop
pop
xor
lock
je
fisttps
add
and
je
adc
scas
xor
inc
mov
mov
data16
and
pop
fmulp
mov
decl
adc
push
or
adcl
push
add
push
pop
cmp
xor
jle
inc
lea
mov
loope
popa
pusha
add
cmpsl
hlt
push
cwtl
cwtl
add
fstpt
add
scas
or
mov
ret
adc
arpl
or
adc
jb
outsl
adc
mov
push
push
or
adc
push
jecxz
add
rolb
loopne
sbb
or
or
push
into
mov
mov
add
cmp
adc
jmp
jp
xchg
cmp
js
cmp
pop
add
adc
jl
or
aas
add
test
inc
lock
xchg
movsl
xchg
or
cmp
rolb
or
adc
nop
lret
inc
shr
push
test
sti
xchg
mov
push
cs
int3
or
fdivs
mov
fmul
fdivrl
lock
push
jo
adc
mov
fdivs
sti
or
jmp
and
add
adc
out
pusha
and
dec
add
rolb
mov
inc
js
gs
mov
fcoml
fcoml
loop
mov
cltd
or
inc
insb
mov
sub
rorb
lock
stos
pop
lock
push
push
inc
fcompl
mov
sbb
out
add
adcb
adc
push
or
or
dec
mov
add
fxrstor
cld
add
add
and
stos
cmpsl
lret
or
loopne
orb
js
addr16
pop
aaa
hlt
call
loop
cmpsb
add
adc
inc
inc
loop
jae
mov
mov
nop
add
orl
clc
mov
jo
test
fidivs
push
pop
pop
fdivs
inc
and
lret
loopne
xor
lea
inc
leave
mov
idiv
jno
and
xor
dec
das
clc
aaa
mov
imul
pop
pop
add
adc
inc
add
andl
mov
addb
jmp
push
lcall
dec
push
xchg
jmp
inc
insb
decl
dec
mov
enter
js
add
and
and
loopw
or
mov
mov
hlt
fwait
repz
inc
adc
in
xor
pop
stos
incb
push
fwait
adc
mov
lea
and
shll
ficompl
adcl
shl
loopne
push
and
loopne
push
bound
sub
jmp
pop
jo
jno
xchg
rolb
test
add
inc
push
mov
out
lcall
imul
jbe
adc
rcrl
xchg
mov
mov
inc
jo
jp
mov
adc
cmp
dec
test
roll
push
mov
pushl
sub
mov
pop
fcomps
sub
call
or
das
sahf
xor
push
test
das
pop
and
dec
cmc
mov
mov
enter
popa
test
adc
jb
pusha
sub
ljmp
popa
add
insb
rcrb
cmp
mov
fisttps
faddl
mov
addb
xchg
std
cmp
push
fcompl
inc
and
lahf
clc
rcrb
xor
inc
add
retw
mov
push
xchg
push
cmpb
aad
xchg
mov
dec
cmp
cs
mov
add
popa
adc
sub
mov
push
and
xor
dec
out
mov
test
xor
dec
addr16
adc
xor
push
mov
call
xor
mov
push
lahf
push
pusha
sub
add
sub
sub
cmpl
scas
pusha
mov
std
notl
jp
or
pop
mov
call
jp
mov
mov
push
mov
lea
push
add
pop
xchg
or
and
inc
pusha
mov
lds
mov
lcall
rolb
mov
out
push
push
outsl
andl
fildll
mov
loopne
addr16
and
out
insl
inc
push
mov
outsl
mov
clc
cmp
mov
loopne
cmpsl
inc
mov
xor
aaa
call
sbb
loopne
loope
mov
add
in
imul
xchg
aas
pusha
add
mov
inc
aaa
mov
adc
inc
xor
rorb
insb
outsb
stos
push
jg
das
ret
and
lret
insb
scas
ret
adc
ja
movsb
cmp
or
insb
stc
fs
add
push
sub
add
sub
mov
xchg
mov
rorb
daa
lods
cmp
push
pop
stos
mov
inc
lret
loopne
aam
shrl
and
mov
pop
loope
pop
add
or
xchg
aad
ret
jg
cmc
xchg
shll
imull
or
jecxz
popa
jmp
mov
mov
adc
rol
push
dec
loopne
or
add
xchg
enter
xor
xchg
push
inc
inc
cmc
mov
shlb
inc
sbb
nop
lret
add
enter
incl
add
or
loopne
imul
mov
movsb
add
ss
les
loopne
dec
cmc
fsubl
xchg
ds
das
mov
mov
mov
and
pop
mov
inc
and
loopne
test
imul
repnz
outsb
movsb
in
pop
lret
cmc
jmp
idivb
outsl
arpl
ljmp
inc
sub
divb
out
fsubl
inc
mov
sbb
cmc
or
add
hlt
add
sbb
push
inc
clc
xchg
add
rcrb
pop
sbb
ljmp
loopne
jo
outsl
lcall
adc
add
jg
js
and
iret
jbe
in
adc
pop
inc
fcoms
imul
pushf
mov
daa
test
add
incb
scas
xor
loope
fcoms
xor
xor
push
js
lock
nop
sbb
mov
aaa
mov
out
xorb
cmpb
fwait
outsb
push
lret
sbb
lods
lret
mov
pop
je
mov
repnz
push
sbb
outsl
adc
pusha
sub
xchg
cmp
inc
icebp
mov
in
outsl
fadds
sti
add
popa
push
xchg
sti
enter
jl
roll
addl
pop
int
fistps
cs
ja
pop
sbb
add
push
ljmp
inc
xor
push
pop
inc
jo
add
minps
and
or
sbbl
add
incl
jo
setae
lods
mov
addr16
popa
fsub
xor
inc
inc
pop
mov
call
jo
pop
push
bound
inc
paddsw
test
jg
mov
push
sbb
ret
pop
fs
fdivp
add
mov
sbb
stos
xchg
push
adc
push
or
outsb
fs
cmp
xchg
pusha
xlat
add
and
test
test
sahf
cld
idivb
lcall
mov
out
loopne
jno
pusha
inc
lock
shlb
in
sbb
sbb
xchg
imul
mov
inc
mov
and
sub
add
sbb
xor
adc
xchg
or
dec
add
jno
mov
push
clc
add
out
adc
xor
sahf
insb
popa
mov
xchg
jp
std
push
mov
adc
sbb
or
add
fwait
dec
cmp
lock
rorl
shr
and
jae
mov
sti
jb
cmc
inc
pop
cmc
dec
mov
and
jae
adc
mov
scas
testl
adc
push
dec
adc
int3
or
mov
sub
pop
shlb
sti
jmp
xchg
add
inc
xchg
inc
jmp
clc
fildl
test
jbe
inc
lock
jmp
inc
jno
jecxz
mov
sub
cmpsb
inc
cmc
or
and
movsb
add
add
or
push
add
push
inc
add
divb
xchg
out
or
xchg
in
fs
in
insl
xlat
add
jecxz
add
orb
insl
call
insb
pop
mov
cmpb
cld
rorb
push
nop
push
pusha
add
subb
cmp
xor
or
dec
hlt
shll
sbb
mov
loop
add
icebp
notl
sub
cld
fistpl
decb
sbb
xchg
mov
mov
je
rclb
out
fs
ljmp
je
dec
push
adc
sub
mov
sub
push
or
js
and
sub
loop
lret
int3
mov
notl
xlat
frstor
mov
insb
push
mov
or
divl
icebp
pop
pushf
push
ret
mov
adc
cmp
ss
in
sbb
push
xchg
call
or
popf
mov
in
shrb
add
out
push
mov
testl
sub
add
orb
sbb
out
sub
xor
shlb
or
adc
mov
fcmovu
xor
lock
js
das
clc
outsl
xorb
add
pusha
addr16
pop
sbb
jbe
xchg
push
xchg
mov
push
add
jbe
and
adcb
xor
adc
fs
adc
mov
add
push
xor
lods
add
loop
or
pop
in
lcall
daa
cltd
ret
mov
pop
add
arpl
sahf
divl
addb
mov
pop
movsb
fmull
cwtl
negl
or
and
mov
push
repz
jecxz
mov
inc
fcoml
xchg
add
add
inc
stos
loope
rclb
mov
mov
pusha
push
inc
xchg
add
add
and
lcall
xor
rorl
iret
jno
mov
not
xor
xchg
adc
sbb
jno
mov
pusha
xchg
pusha
je
jb
push
adc
adc
ret
lock
mov
push
adc
jbe
mov
adc
and
xchg
mov
push
fsubr
sbb
gs
shll
jo
xor
adc
std
scas
clc
incl
es
testl
ret
add
nop
jge
or
dec
pusha
fimuls
or
sarb
sar
and
repnz
lahf
out
mov
adc
mov
xchg
leave
test
and
ret
jnp
sub
fucomp
adc
mull
out
adc
call
add
aam
push
sti
mov
adc
xchg
add
adc
shll
mov
pop
push
sar
pop
fs
mov
movswl
push
cmpsl
and
negl
jbe
push
insl
mov
cltd
fisubl
adc
mov
decl
pop
add
add
pop
add
mov
push
sub
and
mov
jbe
and
fwait
or
or
add
xor
lods
sbb
mov
fcoml
cmpsl
cmp
repz
outsb
jp
mov
xor
or
cmpsb
movsb
inc
add
repz
mov
push
int3
icebp
xor
dec
jecxz
inc
sub
test
xchg
inc
adc
js
jp
iret
dec
inc
mov
fsub
insb
and
mov
nop
repz
std
in
loopne
push
nop
xorb
jge
in
add
pop
mov
dec
or
lcall
clc
mov
add
inc
mov
push
inc
fistpll
xlat
or
adc
add
lds
jmp
cwtl
fwait
andl
and
mov
fcomip
imul
xchg
mov
and
adc
out
fsub
add
xchg
xchg
loope
pop
jge
pusha
in
fildll
add
push
push
in
jl
push
add
sbb
push
int3
add
add
aaa
mov
dec
xorl
sarl
iret
xchg
and
xchg
rolb
push
inc
data16
sbb
cli
xor
daa
pop
dec
dec
loope
out
aas
mov
mov
adc
fsubs
sarb
mov
xor
call
xor
push
adc
or
stos
test
call
jmp
or
xlat
dec
es
aam
in
inc
dec
int
roll
gs
xchg
daa
in
mov
fisttpll
xlat
adc
xchg
pop
inc
pop
andl
mov
incl
xchg
xchg
dec
adc
push
adc
or
rep
mov
scas
incb
mov
scas
int3
add
mov
mov
lahf
insb
in
xor
ja
add
test
out
inc
add
addl
pop
shlb
mov
xchg
mov
testl
incl
call
pop
or
mov
repnz
fwait
icebp
sbb
inc
inc
xor
mov
mov
add
inc
sbb
inc
adc
stos
mov
test
aaa
adcb
jb
or
mov
cmovno
xchg
mov
enter
out
mov
lret
add
jp
rolb
incl
push
adc
addb
sbb
add
call
pop
xchg
sub
rclb
adc
test
cwtl
pop
or
mov
in
and
mov
inc
loope
sbb
inc
nop
sbb
sub
out
add
enter
inc
fcmovbe
xchg
fistps
movsb
mov
jecxz
add
insb
cli
add
in
fs
cmp
cmpb
fmull
cmp
add
loope
xor
call
or
or
inc
add
rcrb
pusha
lods
cmpsb
and
lret
pushl
test
mov
cs
jg
std
lcall
xor
adc
in
mov
add
mov
push
adc
add
xlat
loopne
rcll
out
loopne
test
and
xor
dec
inc
pusha
jb
add
jmp
adc
mov
insb
xorb
jmp
add
push
dec
fildl
mov
sub
in
pop
data16
lea
sub
xchg
ds
rorb
subps
inc
out
loopne
ja
clc
and
aaa
es
insb
call
paddd
shll
add
inc
and
popl
inc
cmp
dec
push
add
mov
addb
rorb
add
pushl
mov
sbb
rorl
pusha
adc
jmp
or
mov
decb
scas
insl
xchg
adc
aam
inc
jmp
out
movsb
lock
test
dec
pusha
or
rolb
xor
push
call
pop
add
insl
pop
sti
scas
jbe
xlat
daa
add
push
and
stos
or
or
cld
cmpsb
or
and
inc
ret
sar
cmpl
adc
add
xchg
neg
add
and
add
out
pusha
jecxz
and
mov
adc
inc
stos
push
fs
add
ljmp
jl
enter
fs
shl
or
fwait
pop
lret
mov
call
sbb
sub
cli
xor
sub
lods
jle
push
mov
and
popf
mov
in
mov
aaa
orl
and
das
pusha
add
xor
pop
jecxz
fcoml
xor
and
add
push
roll
ja
and
dec
fadds
shlb
mov
pop
test
add
clc
loope
sbb
pop
ljmp
data16
js,pn
ss
cmp
dec
out
adc
cmpl
popf
rcrb
gs
lret
inc
cmp
lcall
jl
orw
movsb
add
pop
inc
push
subb
dec
call
mov
dec
dec
cmp
add
outsb
cld
ja
jbe
push
or
and
add
bound
rcr
icebp
popa
rcrb
jg
mov
add
cmp
sbbb
call
and
pusha
ja
xorb
inc
mov
testb
clc
mov
adc
mov
int3
mov
xchg
int3
or
lret
lock
add
hlt
jb
inc
jle
xchg
loopne
push
addb
shr
idivb
pop
mov
call
addr16
add
out
inc
orb
pop
incb
data16
call
or
lock
xor
nop
sub
push
repz
push
push
xchg
ss
or
pop
hlt
pushf
or
ljmp
sub
movsb
jb
mov
mov
or
data16
xor
push
xor
cltd
jle
pop
add
prefetch
or
nop
xchg
test
addr16
pop
cmpsb
setbe
pusha
inc
idivb
lock
and
arpl
or
add
cld
cmp
cltd
int3
mov
lcall
mov
shlb
jle
andb
sbb
xchg
sbbb
add
lcall
dec
sbb
mov
inc
roll
add
push
mov
dec
loope
mov
xor
cltd
mov
add
ret
cs
dec
movsl
call
inc
aas
dec
popl
mov
sub
pop
push
add
add
or
jo
push
dec
fwait
dec
in
mov
incb
jmp
mov
jnp,pn
xor
xchg
mov
shrb
mov
jge
adc
outsl
mov
inc
loope
adc
pop
fs
or
sbb
loope
loope
data16
shll
dec
bsr
and
lds
mov
movaps
rorb
mov
ss
push
pop
inc
repnz
cli
rep
adc
lds
jno
out
pop
jmp
lock
scas
xchg
pop
xchg
mov
mov
sbb
mov
fsubp
shlb
outsb
cli
testb
stos
sub
and
loopne
sbb
imul
adc
dec
rolb
pushf
xchg
mov
or
mov
and
cmpxchg
shrl
mov
insl
rorl
hlt
push
outsb
push
xor
ja
xorb
mov
xor
push
bt
pop
hlt
aaa
sub
add
cli
adc
and
adc
dec
push
mov
inc
mov
call
shlb
xor
push
jg
test
add
psubd
icebp
push
insb
hlt
push
sub
add
pop
stos
mov
dec
das
sbb
mull
lar
lock
and
and
and
shlb
xor
cmp
lock
lcall
gs
push
setge
pop
push
push
and
hlt
sub
inc
roll
push
rolb
mov
rcr
sub
jle
push
dec
inc
aad
add
fists
scas
inc
sub
jg
mov
adc
jo
icebp
call
orb
ficoml
sub
andl
lcall
loop
insl
sbb
sbb
outsb
sbb
add
fdivrp
rclb
cmp
lock
pop
xlat
sbb
pop
mov
inc
push
xlat
das
cli
jg
inc
mov
push
push
adc
or
xchg
sbb
cld
mov
jmp
jo
xchg
xor
repnz
jmp
cmp
cmpsb
mov
mov
add
dec
ret
ds
jno
pop
cli
popf
inc
cmp
xor
and
pop
add
sub
jg
mov
out
sub
push
jnp
add
daa
adc
xchg
out
jno
jg
imul
mov
mov
pop
and
jne
pop
cmc
mov
jecxz
xor
jmp
loopne
das
adc
cmpsb
jle
in
jbe
pop
andl
jbe
push
cltd
sbb
jb
xor
pop
inc
jg
dec
mov
xorb
add
pop
xchg
sub
dec
mulb
loopne
popa
mov
loope
mov
lock
cmp
lcall
xchg
ljmp
and
mov
xor
inc
xorl
in
in
iret
nop
sysret
jo
and
xor
lods
push
movsb
jns
mov
push
dec
nop
enter
sub
rolb
xchg
ror
sub
dec
add
shll
popa
push
adc
add
mov
cmpsb
in
and
inc
jnp
incl
enter
xchg
imul
mov
movsl
mov
pushf
cmpsl
push
pop
adc
xchg
aaa
xchg
push
and
or
mov
mov
stos
jg
add
mov
cmp
pop
adc
add
icebp
xchg
int3
push
imulb
push
fsubrs
xchg
mov
lods
or
mov
filds
pop
jle
mov
or
unpckhps
add
push
stos
aaa
inc
add
in
es
adc
sub
shlb
mov
push
es
out
mov
push
dec
out
mov
adc
mov
xor
jp
shufps
adc
inc
fisubs
sbb
push
add
rol
xchg
mov
xchg
fwait
mov
adcb
xor
push
push
mov
lcall
pop
inc
add
xchg
and
clc
jbe
pushl
xor
mov
ljmp
cs
sub
sub
insl
repz
mull
call
jecxz
inc
jbe
xor
ret
xor
push
clc
lcall
xor
rcrl
mov
popa
popa
subps
or
jmp
andw
pop
sbb
sub
push
cwtl
adc
loopne
fisubrs
xor
push
sub
imul
andb
gs
dec
rcr
loope
inc
mov
inc
xchg
fsubl
xchg
pop
mov
adc
lgs
daa
pusha
xchg
add
mov
add
call
jb
jg
inc
sub
xor
loope
es
insb
sahf
add
in
pop
push
sub
sbb
jo
fdivrl
mov
pop
pusha
pop
mov
cltd
icebp
mov
or
add
mov
and
pusha
pmulhuw
std
fstl
lret
and
or
imul
push
loop
nop
add
mov
xor
jmp
insb
cli
xor
push
les
inc
repnz
les
xor
push
das
loopne
mov
cmp
jmp
jmp
push
aas
sbb
and
ja
cmovb
jo
mov
mov
fnsave
ss
data16
les
add
test
ret
sti
outsb
add
in
add
jmp
rol
sbb
pushf
xor
adc
or
push
les
mov
aad
subb
repz
insb
pop
or
sub
lahf
add
sub
clc
push
lret
or
dec
adc
cli
hlt
insl
stos
loop
xlat
imul
mov
add
and
xor
punpckhbw
fcom
shl
jbe
fstpl
orb
cld
add
sar
add
add
test
cli
insb
mov
pusha
sbb
cbtw
sbbb
push
add
jl,pt
imul
lcall
test
loope
jle
sbb
xorl
mov
cmp
cmp
push
rol
add
cli
lret
add
mov
push
sbb
pop
sahf
loopne
adc
cmpl
movsb
push
arpl
dec
lods
lock
nop
dec
xor
xchg
sbb
dec
push
mov
sub
cld
insl
and
cpuid
sbbb
sbb
scas
das
sub
movq
mov
inc
add
jo
loop
andb
inc
adc
insb
cmp
orb
add
mov
loopne
clc
adc
cmp
or
sub
mov
jl
cld
fbld
cmp
mov
orl
shrb
and
xchg
fcoml
icebp
cld
mov
push
xchg
cmp
mov
mov
push
push
sub
les
in
mov
enter
push
xchg
rolb
add
push
ljmp
jbe
clc
aaa
addr16
repz
pop
xor
je
int3
push
out
or
xchg
xchg
adc
cmp
add
sub
or
and
and
sub
and
adc
lods
pop
stos
add
ret
sahf
mov
les
data16
mov
push
mov
mov
dec
scas
sbb
data16
or
add
ja
add
push
adc
sbb
cmp
mov
sub
add
sub
mov
dec
cmp
push
roll
mov
or
push
mov
push
add
push
in
sbb
xchg
pop
add
or
cs
inc
jmp
pusha
aaa
in
bound
shlb
xchg
outsb
and
mov
cs
cmc
mov
add
roll
popl
subb
inc
add
sbb
push
cmpl
or
inc
outsl
add
mov
pop
xchg
andb
push
mov
loop
and
js
xlat
divb
jb
cmovne
lods
insl
ja
sbbb
orb
shlb
lods
shrl
push
cli
inc
inc
add
add
xchg
out
nop
fwait
cld
push
mov
pop
fwait
and
push
xchg
jecxz
test
loopne
dec
or
sbb
pop
hlt
mov
je
icebp
cmp
push
test
pusha
dec
pushl
adc
and
inc
cmp
add
negl
ljmp
ret
cmp
adc
mov
or
pusha
lds
push
xor
adc
fwait
push
cmp
clc
jae
adc
loopne
inc
cld
call
adcb
and
out
xor
cmpsl
loopne
test
adc
test
add
shrl
mov
rcl
adc
bound
adc
sbbl
loopne
mov
dec
or
push
call
inc
and
into
inc
shrb
icebp
inc
shrb
sahf
mov
add
xchg
mov
push
pusha
sub
and
push
and
sub
sub
rorb
inc
roll
xchg
and
pushf
roll
pusha
mov
sbb
cmp
gs
loopne
loope
lcall
ret
sbb
sbb
or
aas
es
stos
test
pop
ret
cmp
mov
inc
xor
mov
cmc
cmpsb
mov
pusha
inc
fs
cmp
adc
xorb
ljmp
pop
fs
push
push
push
shlb
or
xchg
test
sar
rorb
xchg
sarb
xor
and
dec
aam
or
scas
and
or
loopne
dec
rorb
mov
stos
dec
push
movups
sub
adc
mov
je
add
and
adc
cld
or
push
inc
adc
call
and
dec
pusha
or
jb
sbb
mov
popf
push
lcall
rcrb
adc
adc
add
mov
jbe
jg
mov
mov
inc
enter
sub
mov
push
fwait
subb
lcall
subl
faddl
sbb
sbb
inc
sub
fisubs
push
mov
mov
rcll
orl
sbb
mov
sub
xor
aad
mov
out
pushf
subb
or
rclb
les
and
add
adcl
xchg
pop
jle
stos
push
cmc
adc
inc
loopne
test
out
test
repnz
and
sbb
adcb
cmpb
ljmp
sbb
and
aaa
test
fsubl
fs
cmpl
inc
cmc
push
pop
loopne
out
scas
or
in
es
add
cmp
inc
or
loopne
mov
cmp
subl
ljmp
and
sbb
adc
in
jg
pop
daa
add
imul
movsl
mov
insl
aas
xchg
lret
inc
or
lds
mov
lds
or
insb
mov
mov
push
mov
pop
cltd
test
inc
add
punpcklbw
or
mov
pusha
arpl
cmp
repnz
mov
sbb
loope
inc
mov
xchg
test
daa
inc
and
cmp
jmp
or
loopne
xor
push
mov
and
shlb
cmp
push
jmp
insb
loopne
add
xchg
sub
mov
sub
popl
in
sti
pop
in
shrb
dec
loope
xchg
or
xchg
sub
insb
cmpsl
pusha
cmpsl
pop
les
jo
ret
pushf
xorb
mov
out
jo
mov
inc
add
cmpsb
cmp
mov
add
jo
jl
xor
loopne
and
dec
xchg
or
and
xor
mov
lock
scas
int3
out
addps
nop
cmpsb
mov
mov
xchg
rep
imulb
fisttps
loopne
add
sub
insl
mov
add
pop
inc
pop
xchg
or
add
enter
sbb
or
divb
push
jge
adc
mov
cmpps
inc
add
insl
and
mov
cs
push
sti
push
adc
popa
nop
sbb
add
and
clc
and
adc
ret
mov
loope
add
and
inc
add
call
push
pop
xchg
nop
inc
rorb
pop
or
xchg
mov
and
mov
out
inc
pop
loope
add
jge
and
and
dec
jg
lea
mov
xchg
mov
push
rolb
sti
stc
mov
xor
rcll
jae
daa
mov
add
popa
pusha
push
inc
or
test
loopne
scas
mov
sti
fbld
push
xchg
icebp
sub
clc
das
jo
pushf
sub
inc
push
pushf
push
test
push
jno
ljmp
push
popa
xchg
jmp
cs
cwtl
jo
popa
aas
mov
nop
or
add
arpl
mov
add
or
xchg
add
in
lcall
sbb
shlb
mov
mov
mov
mov
jp
jle
add
decl
ret
cs
cs
fidivrs
cli
mov
out
sub
pop
jp
adc
dec
bnd
add
fcom
adc
idiv
pushl
rclb
and
sbb
enter
rolb
mov
add
stos
or
das
mov
jo
inc
clc
push
lods
ljmp
fs
loope
test
aad
push
inc
leave
out
clc
fisttps
out
xlat
fisttpl
out
nop
fbld
repz
fildl
out
mov
pop
daa
jle
out
insb
loop
sub
out
xor
sbb
jl
and
add
cwtl
sub
xor
sub
loopne
adc
and
xorb
adc
add
data16
loopne
add
dec
pushf
loopne
lret
rcr
in
incl
xchg
aam
mov
push
nop
out
call
xlat
sbb
fcmovnu
nop
loop
cmpsl
push
add
xchg
mov
mov
jbe
adc
es
sub
xchg
inc
jg
test
jo
sbb
push
and
loopne
pop
add
insb
lret
inc
add
inc
fdivrl
les
sub
add
adc
xchg
loope
add
insb
dec
or
or
xchg
mov
jo
or
test
inc
xchg
repz
clc
stos
aam
pop
nop
mov
xchg
cmc
into
test
out
push
daa
add
mov
mov
push
add
scas
add
push
mov
push
xchg
in
pusha
cmp
push
inc
and
push
pop
jge
and
mov
and
jo
in
xchg
fdivrp
outsl
cmpsb
xor
jmp
test
push
mov
mov
xchg
push
daa
add
xchg
xor
cmpsb
leave
and
call
sbbb
push
and
push
sub
add
fcomps
push
das
fcompl
mov
push
rclb
inc
cli
and
mov
add
add
dec
cmp
packssdw
or
push
and
sbb
in
es
add
movsb
fadd
mov
ret
and
test
pop
imulb
add
dec
rcll
icebp
inc
in
wrmsr
xor
mov
loopne
popf
and
ljmp
mov
jl
mov
imulb
xchg
out
outsb
subb
mov
lods
pushf
js
add
and
jmp
dec
outsl
mov
xchg
push
out
pop
sarb
subl
jge
push
addb
aaa
mov
ljmp
repz
mov
dec
jnp
icebp
or
decl
decl
or
or
cmpsl
pop
sti
test
pop
pop
nop
enter
in
dec
lar
cmp
pusha
subb
or
mov
adc
iret
mov
push
iret
nop
mov
pop
push
and
rolb
adc
cltd
jecxz
imul
int
fistpll
andl
pop
or
das
and
mov
xor
lock
jle
pop
sbb
push
mov
stos
adc
pop
into
cmp
add
mov
mov
outsb
jmp
add
add
incl
je
repz
dec
jmp
rclb
call
dec
add
fsubl
push
scas
ja
mov
ds
and
sbb
inc
add
rolb
out
mov
xor
pushf
xor
mov
sub
and
hlt
orb
clc
test
inc
adc
sub
pushl
push
fcoml
add
or
mov
pop
mov
and
jl
clc
pushl
jno
and
pop
aam
test
jp
xor
lcall
add
fdivp
xchg
jno
mov
div
inc
and
jg
fdivrp
mov
fisubs
fs
fwait
shll
cmp
nop
sbb
out
test
fcoml
xlat
outsb
pusha
pushf
add
adc
rolb
adcb
std
lcall
mov
cmp
call
das
rolb
orl
add
pusha
xchg
aaa
adc
push
inc
adc
or
rclb
pop
push
add
mov
inc
adc
push
adc
jg
xor
mov
xor
shl
mov
adc
pop
shll
sub
in
fwait
xor
ret
mov
push
sbb
add
xor
push
mov
or
xchg
adc
pop
insb
mov
jbe
add
pusha
cmp
add
and
in
call
and
rcr
sbb
test
adc
enter
int
rcrb
jbe
sbb
sbb
add
push
sbb
xlat
psubusw
and
push
insb
pop
test
shl
mov
and
fiadds
and
loop
push
insb
mov
add
xor
lahf
add
jne
insb
inc
cmpsb
xchg
pusha
aas
xchg
push
push
push
test
dec
jmp
sub
and
pop
push
add
negl
test
cmp
dec
jecxz
enter
sub
dec
sub
call
or
dec
add
mov
dec
popa
js
dec
cmp
fsubrs
inc
add
cltd
add
clc
icebp
loop
push
and
and
mov
pop
imul
mov
add
hlt
faddl
inc
push
mov
cmp
mov
insb
hlt
fildll
lahf
push
add
into
cmpsb
test
orl
aas
lea
addb
mov
pusha
fsubl
orl
or
dec
test
lea
dec
jb
hlt
dec
adcb
sbb
pop
test
outsb
add
and
jp
or
cld
decl
movl
cmpsb
andl
test
and
xchg
inc
xor
jb
xchg
mov
orb
pop
call
aaa
sbb
push
add
test
aaa
ss
sub
insb
push
aaa
jb
adc
fbstp
adc
pop
mov
dec
cmpb
mov
and
mov
pop
push
mov
push
nop
sti
push
push
sti
mov
push
enter
push
repnz
inc
popl
or
test
xchg
ror
loope
data16
xchg
hlt
orb
pusha
jl
or
dec
rclb
movl
les
mov
roll
sbb
imul
xchg
je
sbb
cmpsl
je
fistpll
sbb
or
or
inc
adc
call
add
shlb
ljmp
loop
jmp
inc
cmp
faddl
ss
in
adc
mov
and
pop
test
xor
mov
shlb
sbb
jb
inc
inc
inc
shl
mov
xor
insb
inc
jbe
jmp
lret
mov
cltd
aam
dec
push
push
jl
loop
xor
or
jg
push
shlb
xor
xor
push
mov
mov
adc
adc
loopne
ret
inc
push
mov
loop
imul
push
cmp
scas
xor
mov
inc
mov
xchg
cmpb
fcmovnb
orl
xchg
cld
aad
mov
ljmp
push
repz
jmp
es
fbstp
rolb
adc
inc
out
daa
mov
sub
test
adc
mov
pop
movsb
aad
outsl
repz
cmpsl
test
jle
dec
shrl
xor
or
push
sti
inc
popa
add
mov
inc
lcall
or
push
pop
dec
sbb
push
aam
daa
test
sub
mov
add
dec
mov
mov
sub
repnz
cltd
jp
pushf
jnp
add
icebp
in
or
pusha
add
xor
lock
inc
or
dec
loopne
int3
adcb
mov
out
out
shrb
lds
mov
loopne
addl
subl
adc
scas
xor
mov
shlb
jg
arpl
adc
sbb
jmp
loope
and
stos
out
mov
add
add
pop
adcl
push
push
inc
cs
adc
mov
adc
inc
shlb
mov
leave
outsb
mov
xor
icebp
es
jecxz
mov
xchg
jmp
add
pusha
nop
mov
or
xor
insb
add
mov
sbb
stos
add
or
xbegin
lds
push
nop
cld
xchg
jbe
xchg
repnz
and
fwait
in
push
xchg
rclb
add
cmp
xorb
incb
dec
mov
mov
scas
jg
rolb
mov
lret
adcl
rcll
xchg
xor
orl
outsl
sub
inc
inc
repnz
mov
and
adc
in
outsl
clc
test
xchg
icebp
and
mov
roll
jmp
rclb
and
push
stos
test
sub
bound
adcl
add
mov
and
and
adc
in
cmc
dec
in
lods
add
scas
push
xlat
add
ljmp
pusha
inc
loope
pop
pusha
ja
lcall
into
fs
repnz
mov
and
add
push
mov
subl
call
loop
or
rolb
sub
sub
adc
sub
icebp
mov
shlb
add
out
jecxz
add
jle
sub
lcall
sub
sti
pusha
jl
pusha
mov
sub
jne
xchg
push
cltd
fs
in
jecxz
aaa
fmul
dec
or
xchg
cmc
or
inc
and
or
cmc
xchg
jo
xchg
les
sbb
xor
rcr
push
cmc
andb
push
add
xchg
decl
pop
add
inc
int3
add
adc
cld
testl
add
loopne
and
insb
fisubl
inc
or
and
cld
pop
out
mov
cwtl
into
mov
mov
or
jne
sub
nop
shrb
data16
pop
or
pop
pusha
or
dec
mov
imul
js
cmpsb
imul
and
adc
pop
hlt
aaa
xchg
pop
add
in
test
aad
inc
jbe
insl
loope
inc
cld
inc
mov
fmull
test
ret
sbb
push
cs
add
xchg
in
inc
scas
xor
sbb
out
andl
and
nop
roll
outsl
xchg
add
xor
push
call
jg
sub
adc
push
jo
cmp
pop
push
inc
pop
cmp
imul
outsl
pushl
add
xor
pop
dec
lock
and
loop
pop
push
add
in
incl
loope
add
add
push
loopne
sub
xchg
sub
out
adc
cltd
adc
enter
out
add
mov
sub
out
nop
mov
pop
inc
and
xchg
xor
xlat
mov
div
add
mov
leave
arpl
in
dec
add
xlat
fwait
ret
add
loope
mov
pushf
mov
in
and
add
and
add
out
fidivrl
in
add
jle
add
fbstp
nop
push
mov
jmp
add
adc
mov
ljmp
mov
push
mov
mov
jne
add
inc
or
popa
jecxz
mov
push
xchg
lds
mov
pop
dec
rolb
fists
repz
cmpsb
jo
nop
rol
sbb
int
cld
sbb
inc
rol
and
add
adc
fstl
and
adc
popa
shufps
push
lods
clc
mov
iret
addl
rcrb
mov
ljmp
or
adc
or
fisubrs
call
pusha
clc
push
ficomps
shlb
test
cwtl
mov
fdivr
mul
mov
adc
xchg
ret
inc
dec
add
and
cmpsb
push
int3
movsb
in
push
adc
or
out
inc
push
push
mov
popa
or
adc
loop
xchg
in
in
outsl
inc
repz
or
or
fwait
xchg
clc
decl
jecxz
jmp
mov
push
mov
push
leave
or
push
ret
cmp
insb
adc
rolb
insl
es
mov
insb
hlt
movups
xchg
lock
mov
add
call
mov
popa
add
sti
add
fnclex
xchg
mov
fwait
cmp
xchg
xorb
bound
addb
mov
adc
push
mov
fwait
shlb
mov
insl
lock
adc
xor
or
push
xchg
scas
xchg
xchg
add
pop
jo
outsl
xor
xchg
loop
rolb
in
push
das
or
shlb
cmc
push
pop
ja
mov
or
pop
push
mov
lock
push
andl
sarb
insl
es
adc
push
or
jmp
icebp
add
fnsetpm(287
repnz
rorb
cmp
xchg
xor
call
adc
jmp
test
add
rclb
pop
or
pushl
push
and
stos
mov
xchg
stc
push
add
fistl
jmp
add
fildl
mov
add
add
or
and
sbb
adc
push
lret
aam
mov
sbb
int3
push
inc
je
cmp
xchg
je
inc
cli
icebp
dec
fimull
es
ficomps
jae
enter
xor
int
stos
in
mov
addr16
sbb
mov
outsl
clc
mov
repz
adc
fninit
jg
scas
out
fistpl
lock
sbb
adc
mov
mov
push
aad
or
inc
sub
jb
rolb
mov
or
pop
mov
in
je
sbb
xor
jmp
sbb
sub
xchg
lock
sub
inc
cmp
jbe
mov
adc
idivb
sbbb
jbe
fisttpl
cmp
xchg
rorb
jp
inc
add
or
mov
ret
push
imul
add
add
push
fs
xchg
pop
add
aad
inc
lcall
addl
in
pop
or
pop
add
mov
lcall
add
or
les
jbe
stos
mov
ss
add
mov
pop
sti
sahf
adc
mov
je
in
adc
push
mov
rol
add
xchg
loopne
add
lods
mov
js
fldcw
mov
add
push
addl
jno
add
inc
pushl
dec
inc
fs
mov
and
inc
push
inc
adc
das
adc
cmpsb
or
bound
push
stc
push
xchg
movsl
add
movsb
add
das
push
mov
push
mov
add
push
xor
arpl
addb
shrb
pop
loopne
add
push
or
lock
stos
push
stos
and
pushf
arpl
test
out
cmp
mov
lds
or
sbb
decl
cmp
jo
cwtl
pop
mov
adc
adc
cld
mov
jl
mov
data16
add
mov
and
jecxz
shlb
in
pop
imul
decl
ffreep
or
sbb
lret
mov
lock
adc
insl
sarb
lahf
incb
add
add
aam
nop
repz
cld
sbb
mov
mov
pop
fildll
hlt
roll
shlb
cld
and
and
in
in
pop
add
add
stos
loopne
cmp
loop
ss
xchg
ss
or
lcall
outsb
int
push
ljmp
add
lods
mov
push
adc
xlat
popf
es
pushf
push
bound
cmpsb
into
sbb
jp
cwtl
out
ss
xlat
xor
je
cmpb
outsl
sub
cwtl
xchg
push
mov
push
in
hlt
inc
sti
or
cmp
pop
cmp
cld
js
jp
fwait
jmp
pusha
out
lods
add
add
ss
nop
jl
loopne
cmp
sub
in
nop
jne
cwtl
fstpl
mov
mov
xchg
popa
cld
push
out
jp
subl
inc
sbb
out
add
add
xchg
aaa
sti
or
test
push
mov
inc
subl
add
daa
jle
cmpsb
jge
rcrb
sbb
sbbl
jmp
subl
mov
jg
sbb
sahf
cmpl
js
in
fldl
xchg
incl
sahf
mov
add
subl
mulb
sub
sub
inc
lcall
ret
sbb
loop
dec
mov
fucomi
sbb
sub
loopne
push
test
or
ret
fsubs
loope
sbbb
ret
in
inc
push
cmpsl
mov
inc
adc
add
or
arpl
sar
mov
pop
jmp
inc
adc
add
repz
mov
stos
add
mov
mov
sub
jg
mov
push
xchg
adc
aas
dec
pop
repz
inc
or
adcb
lret
inc
and
adc
inc
femms
frstor
jp
sbb
inc
or
inc
add
add
or
dec
jl
mov
incl
sbb
in
faddp
or
enter
testb
xchg
insb
xor
cmp
push
pusha
orb
inc
jmp
mov
xchg
sub
dec
addb
or
scas
push
addl
fs
rolb
pop
loopne
inc
jl
hlt
mov
jmp
add
test
dec
clc
call
adc
inc
and
mov
add
cld
hlt
adc
rorb
xlat
jle
out
fidivs
rolb
test
xchg
ljmp
test
add
add
push
ret
mov
popa
sbb
adcb
inc
sub
loop
mov
aaa
ret
xor
clc
mov
inc
sbb
push
jp
push
outsl
loopne
insb
add
and
pusha
data16
adc
cmp
jbe
pslld
add
scas
sbb
adc
fdivrs
scas
jo
pop
xchg
add
push
mov
sbb
add
cmpsb
xchg
ds
aaa
sub
mov
xchg
iret
cli
test
ljmp
sbb
jne
pop
scas
je
mov
jg
ret
insb
std
jg
outsb
insl
or
pusha
or
pop
adc
or
daa
testl
mov
jmp
xchg
lcall
dec
inc
cmc
call
and
jmp
inc
push
jl
push
int
or
dec
inc
inc
sbb
push
ljmp
jecxz
mov
inc
add
xchg
loope
push
jae
sbb
outsl
pop
pop
arpl
push
bound
pop
fildl
sbb
test
sbb
push
movl
in
loopne
js
xor
out
pop
aam
fildl
aam
mov
jmp
decl
adc
add
jecxz
addb
push
inc
adc
mov
icebp
and
or
inc
and
and
push
inc
add
mov
and
std
in
ljmp
les
mulb
test
mov
xchg
jl
or
add
test
filds
dec
pusha
lcall
adc
loop
in
and
jg
shrb
add
add
xchg
jne
or
fs
mov
test
fs
ds
aas
ficomps
xchg
call
jecxz
add
add
add
rolb
hlt
arpl
or
mov
adcl
addl
push
add
add
and
add
jle
ss
jmp
xchg
push
rcrb
cli
push
movsb
dec
add
adc
loop
and
fisubl
inc
add
jg
call
ljmp
repnz
sub
test
lcall
push
test
add
mov
cltd
jmp
in
mov
dec
inc
pusha
push
fimuls
pop
shrl
cld
inc
sub
addl
mov
mov
and
jle
pusha
add
inc
add
and
or
cmp
adcl
std
mov
or
mov
push
jo
les
scas
sar
cld
mov
and
and
repz
adcb
ss
push
hlt
cmpsb
or
enter
inc
cwtl
rcll
sub
inc
sub
xor
outsb
push
rolb
and
mov
cmp
mov
icebp
or
lret
jns
add
inc
or
sbb
lock
cmpsl
sbb
fistpll
outsb
clc
push
lcall
subb
or
pop
jmp
lock
cli
sbb
adc
adc
push
into
loop
mov
jmp
push
xchg
or
xor
aam
add
adc
push
xchg
or
pop
fisubl
loopne
inc
and
not
adc
das
mov
lret
and
sub
dec
cli
push
sbb
aad
shlb
cwtl
and
cmp
xchg
and
dec
add
sbb
das
push
and
xchg
pop
movl
lock
gs
jns
add
push
hlt
push
mov
jl
scas
pop
add
or
or
outsl
add
in
pop
sbb
jp
add
jmp
sbb
sbb
pop
sti
cmpsb
add
test
add
jo
mov
pop
fisttpl
stos
addl
andb
cwtl
inc
repz
and
lret
xchg
ss
lods
sbb
sub
mov
je
xor
sbb
shrl
jo
cld
sub
lahf
testb
rolb
lahf
and
add
and
insl
adc
xor
sub
in
or
outsb
insl
mov
xor
add
movsl
adc
jo
mov
cmpsb
push
add
mov
mov
mov
in
jo
push
inc
add
sub
adc
data16
add
cmp
mov
sub
add
or
or
insl
add
mov
inc
in
fnstenv
dec
jbe
mov
xchg
aad
and
jmp
ss
mov
lret
add
mov
xchg
bound
sub
mov
in
mov
xor
push
add
lods
cmp
loope
out
mov
pop
mov
repz
hlt
mov
adc
fmuls
test
push
out
adc
lods
jl
push
push
cld
aam
mov
fildl
dec
mov
pusha
syscall
std
imulb
test
insb
cmpsb
xchg
inc
push
adc
xchg
inc
shlb
mov
push
clc
pushf
repz
loope
mov
adc
insl
aas
rolb
imul
mov
loope
stos
mov
push
and
aam
loop
jg
jl
mov
dec
mov
mov
loope
orl
add
in
xor
add
sbb
in
jno
mov
int
mov
lcall
in
adc
cmp
adc
inc
push
xor
lock
psubq
push
xchg
mov
adc
push
cld
sbb
jno
mov
sub
icebp
inc
rclb
lds
fsubp
push
rorl
pusha
push
mov
push
push
push
push
rolb
loopne
jmp
ljmp
push
jo
fs
sti
jmp
pushl
inc
loope
mov
cs
pop
mov
mov
or
mov
fidivl
scas
sbb
or
xor
xorb
rclb
shlb
out
and
test
hlt
cmpsl
orl
ljmp
adc
and
adcl
cmpb
sbb
mov
jo
cmp
inc
inc
leave
cltd
fs
xchg
cli
mov
nop
add
pop
or
addr16
xchg
mov
inc
add
andb
push
andb
mov
insb
test
ja
sub
adc
in
add
jmp
rol
cmpsb
and
in
cmp
add
and
and
cld
and
dec
fnstsw
adc
ss
mov
test
shl
stos
sub
loopne
inc
movzbl
mov
cmp
and
or
add
sahf
cmpsb
ds
lods
or
sub
pop
or
mov
fmuls
add
xor
add
add
jl
in
inc
jns
loopne
daa
pushf
or
add
sbb
cmp
push
js
into
push
je
mov
icebp
loopne
fdivl
and
mov
and
loopne
inc
pop
aad
add
loopne
add
pop
push
adc
out
insb
push
adc
mov
push
inc
add
aam
cli
rorb
inc
mov
cmp
mov
enter
loop
xlat
mov
stos
mov
jp
xchg
and
adc
lock
sbb
and
mov
sub
jmp
inc
cmp
icebp
fists
xchg
inc
lds
xchg
ljmp
das
adc
mov
pop
xor
adc
adc
rcrl
lea
adc
or
icebp
push
xchg
xor
fiaddl
lret
jo
imul
pusha
mov
cwtl
add
add
andl
insl
jne
sub
mov
add
adc
sti
and
popa
jl
cmp
ss
mov
cmp
add
push
add
aas
add
or
push
cld
aaa
adc
jmp
adc
jmp
jbe
xchg
out
or
xchg
idivb
sub
mov
or
mov
add
mov
jecxz
es
and
sub
cmpb
add
outsb
rclb
shrl
pop
repnz
outsb
push
in
pop
les
and
cmp
movsb
sbb
mov
mov
or
mov
adc
movsb
or
cmpsb
pop
push
xor
loopne
jle
es
aam
inc
add
or
inc
mov
jae
decl
push
outsb
ljmp
inc
popa
add
xchg
in
mov
mov
fwait
jle
test
pop
rcrb
loope
mov
mov
pop
aam
aas
aam
add
pop
ss
out
out
pop
mov
mov
movsl
outsb
add
add
add
mov
test
lcall
js
push
cmpsb
jecxz
pop
and
add
je
xchg
adc
sbb
cmp
in
cli
add
or
fwait
xor
ja
pop
inc
mov
ss
add
es
jo
push
push
push
jo
aam
out
or
mov
mov
push
es
inc
loopne
inc
xor
dec
shlb
ret
mov
mov
sub
jb
call
sbbb
xor
xor
insl
jbe
shrb
pushf
jnp
sub
lods
movsl
iret
xchg
sub
xchg
dec
sbb
loopne
mov
push
sub
push
inc
or
mov
jg
subb
mov
push
push
dec
or
leave
in
lret
test
inc
pop
decl
xchg
std
andb
lret
add
jno
adc
test
add
sub
add
scas
js
push
dec
inc
and
mov
mov
out
xchg
les
xor
push
add
push
xor
fcoms
or
mov
pop
mov
mov
pop
cmp
movl
sbb
jbe
movsl
mov
test
xchg
out
add
imul
jl
cli
or
pop
mov
subb
ja
sbb
lret
adcb
adc
jne
outsb
sbb
sahf
pop
int3
orb
add
inc
inc
jbe
loopne
add
adc
pop
es
inc
add
adc
das
mov
xor
shl
lock
xor
cwtl
shr
dec
pushf
leave
insb
and
fs
pop
out
pop
orb
inc
add
or
pop
out
push
les
lret
and
xor
outsb
fwait
or
mov
shrb
aam
mov
add
add
js
loop
cmp
push
xor
out
mov
inc
mov
je
andl
in
or
shlb
and
adc
mov
mov
and
scas
addb
dec
loop
fneni(8087
push
rorl
fs
inc
jp
inc
add
je
movsb
xor
sbb
or
call
call
les
out
add
pop
rcrb
loopne
pop
movsb
sbb
mov
adc
pop
add
cmpsb
push
adc
sub
mov
repnz
inc
and
data16
in
xchg
adc
xchg
jmp
bound
loope
js
pop
cs
xchg
cmp
add
push
dec
xchg
nop
insb
lock
or
mov
inc
add
mov
jno
fldl
inc
lods
xchg
cmc
outsb
dec
xlat
insb
mov
movsl
push
int3
repnz
add
ror
mov
push
and
xchg
nop
outsb
mov
inc
or
sbb
sbbb
ret
push
divb
adcl
stos
in
pop
inc
xor
xor
inc
icebp
aaa
sbb
adc
cld
out
push
jne
push
mov
aaa
mov
arpl
insb
adc
inc
add
add
lea
pop
adc
add
xchg
out
test
insb
roll
push
cmpb
add
lcall
cmpps
daa
in
and
pusha
sub
push
inc
add
testb
inc
add
sbb
mov
pusha
add
es
push
xor
gs
in
and
pop
fs
pusha
lock
mov
fildl
mov
dec
fucomip
jmp
and
inc
mov
sbb
push
into
dec
scas
icebp
das
push
xor
xorl
push
mov
and
pop
inc
mov
in
sbb
xor
add
adc
decl
fbstp
push
and
into
inc
and
orl
test
sbb
shll
add
in
aaa
pop
in
add
popa
and
and
loopne
cli
incl
andl
add
or
mov
or
stos
and
cmp
mov
arpl
pusha
pop
sarb
nop
add
push
test
cmp
scas
sbb
sbb
adc
out
push
push
std
sub
inc
jmp
cmc
or
cwtl
repnz
add
inc
or
or
push
loop
lret
loopne
push
sbb
cmp
movsl
fildll
popa
sbb
sub
xchg
negb
dec
pop
and
or
adc
cmp
incl
aaa
add
push
mov
sbb
sub
push
loop
shlb
mov
sbb
dec
sub
mov
and
les
imul
sti
jg
mov
testl
inc
nop
push
or
ffree
sub
and
inc
and
out
bound
and
cmovbe
test
mov
outsb
aas
lcall
cmp
mov
and
inc
pop
movsb
fwait
mov
cmp
popa
inc
mov
dec
jecxz
incb
cmp
cmp
decl
loopne
loope
ret
xor
sbb
pusha
add
arpl
shll
rcrl
push
mov
mov
inc
mov
test
xchg
pop
roll
loopne
ret
fadds
iret
adc
push
das
mov
sub
testl
add
sbb
mov
push
or
push
cli
jbe
cmp
sbb
rol
insb
push
add
fs
or
or
lods
call
mov
mov
xchg
or
mov
xchg
in
clc
pop
xor
data16
push
cli
decl
dec
cmp
push
xchg
icebp
aam
cs
mov
xchg
pusha
push
mov
outsl
mov
and
sbb
cli
xchg
loope
and
data16
sbb
sub
jo
inc
filds
icebp
shrb
xchg
mov
jge
jl
stos
mov
daa
test
sub
ret
mov
repnz
push
out
push
sbb
cmpsb
loopne
outsb
sub
lret
add
and
mov
pop
xor
bound
or
mov
dec
pop
lcall
add
or
jns
jmp
mov
data16
in
lcall
sub
clts
adc
adc
out
or
inc
xlat
xor
add
cmpsb
stc
dec
push
fs
mov
jbe
add
jmp
add
sub
mov
mov
add
mov
repz
call
add
loopne
pop
push
out
sbb
xchg
jbe
inc
in
xchg
cmp
insl
adc
push
testl
je
out
dec
scas
push
fsubs
jmp
ret
stos
push
xor
call
les
incl
jo
inc
idivl
and
repnz
and
sbb
bnd
shl
inc
lret
aam
pop
outsb
adc
shlb
ljmp
mov
lcall
push
call
dec
add
dec
inc
imul
dec
mov
hlt
push
inc
inc
aam
jo
push
xor
push
sbb
aam
ficompl
out
loop
or
in
popa
add
sbb
das
cld
sbb
daa
lock
jmp
adc
pop
add
mov
fdivp
jg
push
cld
or
jo
jle
mov
add
rclb
cmp
mov
and
mov
movsb
data16
mov
push
adc
xor
sub
out
jmp
adc
adc
sub
adc
mov
nop
lock
adcb
in
mov
sbb
jg
rclb
mov
fildl
push
sbb
pop
or
pop
and
inc
push
mov
mov
or
sahf
add
pop
mov
adc
pop
mov
cmp
mov
dec
xchg
std
mov
and
loope
or
push
mov
or
clc
pop
add
and
orb
out
mov
addr16
inc
repz
pop
mov
pushw
loope
xchg
and
mov
adc
sub
mov
adc
lret
inc
adc
cmp
mov
loope
je
loopne
nop
daa
push
ja
jg
rolb
lcall
xor
pop
push
inc
adc
je
push
jne
pop
add
mov
sub
lcall
pop
and
sbb
lea
xchg
fldt
shll
jl
int3
sbb
mov
xor
cmovg
add
cld
mov
sbb
aam
gs
or
pop
dec
sbb
inc
pop
insl
mov
not
repz
cmp
or
jg
add
jno
dec
jmp
cmp
xchg
pop
js
ljmp
jecxz
gs
inc
stc
loopne
mov
inc
push
inc
or
jmp
xor
jo
aad
push
jmp
add
icebp
addl
daa
loopne
and
popf
xor
imul
pop
les
add
cmpsb
sbb
out
ret
and
sti
popf
sbb
or
push
jecxz
sahf
sahf
and
mov
testl
movsb
cmc
or
shr
and
es
test
hlt
loopne
add
pop
or
or
push
jmp
cmpsl
jmp
jecxz
jmp
and
ficoms
push
add
or
insb
sti
or
add
mov
ret
sub
inc
adc
jl
pop
or
pop
or
loopne
xchg
mov
outsb
loope
mov
pusha
enter
jle
push
ja
mov
shll
addr16
push
popa
add
inc
sub
mov
pop
add
xor
sub
stos
xor
fdivs
js
add
push
xchg
mov
mov
mov
xor
pop
lcall
imul
xorps
mov
xchg
and
push
add
roll
jp
sub
mov
fwait
jb
pop
imulb
mov
push
add
add
mov
add
out
xor
in
mov
in
add
push
add
mov
jno
pinsrw
ret
ljmp
add
pop
xor
mov
cli
dec
loopne
fildll
add
pop
lock
add
decl
jp,pn
imul
in
mov
ret
push
pop
sub
jmp
xchg
loop
stos
arpl
dec
or
fld
data16
add
fwait
rcrb
out
loop
adc
fs
or
push
orl
fdivp
jo
jo
and
nop
or
mov
out
jo
xchg
jg
icebp
scas
add
mov
stos
xchg
out
mov
add
mov
adc
pusha
add
push
or
mul
adc
mov
pop
mov
ja
shlb
sbb
sti
xorl
clc
inc
and
xchg
or
stos
dec
push
xchg
jecxz
daa
shlb
ljmp
or
mov
pusha
sbb
dec
inc
call
and
cmp
add
ljmp
shll
add
pop
push
push
push
pop
ret
fidivl
je
shlb
pusha
or
dec
andb
js
cli
ja
pusha
push
xor
loope
test
mov
xor
jmp
mov
popl
push
scas
pusha
pop
dec
pushf
stos
dec
ss
xchg
aam
rolb
mov
sahf
in
das
pmaxub
sub
mov
loope
shl
orl
out
or
xchg
or
cs
pop
hlt
push
push
gs
add
clc
sbb
inc
mov
cmp
push
and
popl
mov
inc
pop
xchg
mov
cltd
push
call
scas
add
mov
pop
mov
add
mov
lock
dec
std
pop
or
push
divl
orb
ror
mov
shr
inc
pop
inc
mov
or
fidivrl
dec
cli
xor
dec
push
xor
out
sbb
je
add
add
mov
cmc
mov
aam
add
mov
sub
xor
push
jne
ljmp
mov
adc
cli
jmp
sbb
sub
adc
push
jp
pop
cmp
pop
paddw
das
push
jae
inc
mov
cmp
es
jecxz
or
sbb
jo
call
lock
call
mov
sbb
cs
sbb
outsb
pop
sub
add
xchg
and
jl
out
lock
dec
js
in
pop
or
cmpb
hlt
xchg
or
pushf
inc
incl
pop
insl
and
fdivrs
sub
out
and
ret
xchg
dec
sbbb
es
push
fs
xor
pushf
inc
mov
xor
repnz
mov
rcll
aam
and
or
fmul
sbb
ret
lahf
call
clc
jbe
jmp
xor
and
cwtl
fcom
dec
dec
push
movsb
and
sub
jbe
outsl
dec
jne
mov
sbbl
test
iret
lret
cli
add
lds
scas
fiadds
mov
push
addb
call
filds
sub
stc
andb
add
shll
cmpsb
and
dec
lret
or
mov
add
xchg
lock
jns
cmp
pop
sbb
popa
inc
sbb
inc
sbb
fldl
enter
andl
ret
xlat
push
nop
mov
sbb
js
sbb
xorb
jns
push
inc
cli
xor
xor
rcrb
adc
and
sti
push
loop
sbb
mov
call
enter
bswap
inc
in
frstor
test
adcb
adc
inc
adc
and
or
sbbb
cmpb
sbbl
imul
sbb
adc
repnz
sub
mov
sub
std
sub
push
dec
pusha
push
sub
adc
repnz
movsb
mov
or
shl
or
or
aas
inc
xchg
inc
inc
xchg
cmp
add
stos
xor
dec
push
sbbl
ljmp
shr
or
ret
cmp
lods
jecxz
jg
pop
shlb
push
jle
inc
or
cmp
or
cmp
insb
subl
orl
fwait
clc
movsb
rorb
shll
push
mov
shrb
pop
inc
mov
imul
push
xor
cs
inc
mov
lock
pop
dec
add
ss
jns
xchg
jecxz
int3
push
test
loopne
rcll
stos
aam
lret
adc
push
inc
mov
sar
sbb
popa
and
stc
ljmp
adc
fidivrs
push
fbstp
ret
push
xor
fdivrp
and
sub
add
ficompl
fcoml
xor
sbb
mov
sbb
mov
push
lcall
add
enter
dec
push
mov
add
push
shlb
sub
movb
imul
incl
mov
loop
push
loop
mov
xor
sub
and
xor
std
fwait
sub
orb
sbbb
add
stos
cltd
push
xor
xor
loop
ljmp
loop
leave
xchg
lcall
mov
movsb
mov
sbb
fucom
sub
adc
sti
rcrb
invd
dec
push
movsb
inc
jmp
ljmp
outsb
scas
or
insb
pop
pusha
xchg
adc
adc
fisubl
sbb
mov
test
add
inc
cmp
loope
mov
rolb
out
das
les
add
cs
xchg
into
in
and
dec
add
sub
jbe
mov
adc
loopne
adc
jmp
pop
xchg
pusha
xor
xor
sub
jnp
inc
shlb
or
dec
and
add
add
xchg
mov
inc
aam
jmp
or
adc
sbb
inc
cld
adc
inc
cwtl
fs
hlt
pop
fmull
fbstp
fdivrl
data16
mov
nop
ficomps
mov
ja
sub
push
dec
adc
jp
decl
mov
mov
mov
mov
loopne
mov
sbb
push
mov
loopne
mov
sub
and
and
sarl
pusha
cmpsl
aam
jmp
push
push
call
dec
fmuls
and
popl
ror
andps
and
test
pop
loopne
out
fcmovu
xchg
fistpll
sub
and
sbb
fwait
pop
loopne
pop
add
add
les
add
std
inc
lock
decl
cld
arpl
add
loop
psraw
adc
adc
pop
mov
pop
mov
xor
rcrb
mov
ja
add
and
stos
test
sarb
sub
mov
aam
adc
push
mov
loope
loop
add
clc
inc
push
in
sub
sbb
mov
pusha
imul
loopne
dec
dec
popa
in
mov
stos
clc
or
inc
es
mov
xchg
rolb
add
jmp
xchg
call
sbb
aam
les
js
test
fiaddl
mov
jno
add
and
rorb
nop
frstor
iret
sbbb
pop
sub
mov
es
ljmp
jno
xchg
jl
mov
das
sbbb
xchg
ljmp
dec
pop
mov
jo
loop
and
add
jmp
fsub
pop
jne
dec
in
mov
scas
push
test
adcb
lcall
jmp
sti
or
add
inc
subb
jb
inc
push
and
sti
bound
sbb
repnz
or
rolb
or
xor
sub
xor
and
add
add
stos
add
or
mov
mov
xchg
dec
arpl
lret
inc
mov
push
add
jne
dec
lock
es
add
subl
es
inc
fcoms
inc
push
mov
test
adc
js
xchg
test
add
xchg
pop
mov
push
out
xchg
adc
xchg
stos
adc
out
dec
out
push
push
call
and
inc
ss
adc
dec
xchg
push
jecxz
mov
xor
repnz
mov
daa
cltd
shl
or
and
add
push
lea
mov
loope
out
adc
pop
out
in
or
or
add
movsb
pop
dec
sbb
add
movsl
outsb
or
clc
add
in
ss
jmp
pop
cmc
push
xchg
int3
sub
cmpsb
packssdw
inc
dec
mov
mov
push
pop
cmp
and
adc
lahf
or
adc
insl
mov
adc
adc
stos
xchg
lcall
bound
or
inc
push
push
add
popf
inc
cld
addr16
ret
pop
rolb
push
jmp
out
stc
mov
sahf
xor
mov
dec
jmp
aaa
add
adc
cmp
mov
or
jmp
xor
or
js
add
loope
pop
xchg
sbb
cmp
stos
movsl
push
orl
lret
pop
mov
imul
inc
dec
loope
inc
push
jb
pusha
shlb
cwtl
ret
sbb
xor
xchg
sub
and
mov
add
fmuls
mov
mov
in
enter
or
insb
ja
cli
mull
loop
inc
add
and
xor
fdivr
fwait
add
cmpsb
push
loop
std
testb
cmpsl
xchg
loope
paddusb
out
inc
or
xor
lds
cmpsb
push
add
cmp
and
pusha
sahf
ret
je
ds
subb
push
clc
loopne
mov
pop
cwtl
dec
loop
aad
out
sahf
xchg
mov
mov
insb
sub
sub
out
insl
or
push
and
rclb
ljmp
sub
bswap
lock
insl
aas
insb
add
sbb
mov
incb
sbb
shl
mov
cmc
inc
xor
vmovlpd
aad
in
sti
xor
les
ror
sub
icebp
add
lahf
fsubrl
aas
adc
and
cs
push
jo
bound
dec
jo
or
inc
pop
call
int
and
xchg
insb
bound
or
mov
mov
push
insb
jp
add
mov
and
cmp
movnti
or
push
in
push
push
jo
pusha
mov
xor
xchg
add
ss
daa
and
mov
sbb
es
add
add
adc
pop
andb
add
test
sti
or
cmpb
outsl
add
jo
mov
sti
loope
loope
shrl
jne
xchg
add
and
or
stos
or
mov
sbb
add
fsubl
nop
add
sbb
rorb
pop
cmp
aam
imul
addb
repnz
rcrb
data16
push
jecxz
add
push
jl
andb
pcmpgtb
aas
jo
or
test
dec
clc
jg
cmc
pushl
fidivs
xchg
std
and
rclb
adc
add
stos
test
sti
cmp
push
adc
insb
shlb
and
test
adc
bswap
loop
aas
lret
rclb
and
xchg
sub
pop
rorb
mov
and
out
push
mov
jbe
je
fsubs
loope
nop
add
sbb
leave
sbb
aad
and
das
clc
pushl
or
and
stos
fsubs
and
popa
add
hlt
roll
arpl
mov
inc
jecxz
scas
popf
cwtl
push
bound
jno
popa
daa
ficoms
test
dec
loop
dec
lods
sbb
and
mov
lock
mov
jecxz
dec
insb
nop
or
jecxz
jne
loopne
loop
in
pop
push
and
mov
jge
cmpsb
or
jb
sarb
bound
pop
xor
mov
or
push
mov
cmp
dec
nop
xchg
bound
ucomiss
test
lcall
mov
daa
cmpsl
add
cmovp
sub
push
maxps
sbb
push
push
pop
pusha
movsb
pop
mov
xchg
mov
arpl
add
mov
loopne
jl
lods
inc
fucomp
lock
xchg
or
mov
or
mov
cmp
mov
ljmp
push
or
mov
outsb
leave
adc
wrmsr
cmp
shl
dec
pop
das
sbb
ss
lods
add
cmpsl
xchg
repnz
test
sub
aas
sahf
push
add
cmp
and
xor
dec
xlat
lock
cli
ucomiss
or
xor
ss
cli
mov
adc
pushf
and
in
loop
cld
idivb
sbb
out
add
or
mov
adcb
add
loop
stos
push
js
and
lock
xor
push
pop
pop
mov
cwtl
mov
lock
xlat
arpl
scas
sub
or
test
sahf
insl
lcall
push
inc
cmpsb
add
fcompl
test
push
pop
gs
dec
sbb
je
mov
mov
or
insb
xor
add
loope
ljmp
pop
jmp
xchg
repnz
inc
xchg
cli
add
lcall
adc
in
inc
add
mov
and
repz
mov
pop
push
or
imul
sahf
pop
mov
popa
xchg
push
push
mov
mov
add
pop
add
insb
jnp
dec
sti
jne
mov
bound
movsl
or
mov
add
mov
or
jle
fs
mov
popa
in
add
ds
dec
js
std
test
sbb
addb
insb
or
out
fdivl
push
add
adcb
pop
push
push
and
sub
cs
in
or
bound
add
insb
pop
mov
orb
movsl
add
clc
lret
subb
insb
sbb
add
sbb
out
bound
sbb
xor
adc
fisttps
xchg
in
orl
add
inc
or
scas
xchg
mov
movsb
or
dec
mov
jmp
lods
dec
sbbb
push
xchg
imul
jae
adc
mov
sbb
and
cli
nop
filds
or
add
inc
mov
dec
add
iret
shld
popa
inc
in
lret
inc
and
sub
and
sbb
aaa
in
and
cld
fistps
jge
inc
sbb
add
insb
pop
rolb
xlat
ds
push
dec
push
push
movlps
lods
push
inc
adc
mulb
bndldx
inc
or
les
rclb
out
cmp
andb
mov
or
inc
loopne
sti
setae
ss
insb
sbb
adc
rolb
sub
sub
adc
cmp
add
dec
pop
sti
mov
add
nop
xor
or
jbe
adc
push
pop
repz
mov
les
pop
mov
pop
das
xchg
cli
mull
insl
aas
rcrb
cmp
adc
imul
pusha
cmpsl
lahf
popa
cmp
enter
insl
decl
cltd
jle
repnz
ret
push
push
lods
out
ds
adcb
inc
mov
pop
xadd
push
rclb
in
add
pushf
jmp
jb
push
add
loopne
loopne
inc
xchg
push
dec
inc
sbb
inc
pop
pop
cmpsb
ds
or
pop
lods
xchg
mov
inc
adc
push
cwtl
addb
dec
rolb
add
adc
push
into
jmp
nop
add
inc
stos
or
mov
divb
inc
mov
cmp
cltd
testl
rclb
and
mov
sbb
aas
bound
xor
and
mov
sbb
xchg
push
sub
mov
rclb
scas
cld
es
add
inc
lret
mov
ret
jb
or
xor
cli
ss
ljmp
cmp
jg
xchg
shrl
aaa
loopne
pusha
cmp
ret
cld
cmp
sbbb
adcb
sbb
adc
pop
dec
in
ret
add
or
mov
add
pop
sahf
loop
or
outsl
lods
push
add
or
pusha
pop
or
or
cmp
push
loope
jno
xchg
decl
add
sub
loopne
jg
sub
push
inc
inc
jo
sub
int
out
adcl
sbbl
shll
push
out
andb
dec
mov
add
add
into
push
cmc
pushl
push
shrb
lock
repnz
pop
insb
adc
jg
sahf
mov
nop
test
mov
psrlw
mov
test
sub
das
aam
xor
sbb
xchg
pusha
push
dec
push
pop
divps
pop
lock
inc
and
and
in
mov
cli
or
sbb
adc
push
mov
push
and
loop
daa
sub
clc
mov
sbb
or
and
xor
lds
jp
inc
fiadds
mov
push
addb
or
push
fadd
lcall
mov
bound
inc
xor
mov
aaa
stos
fimull
adc
or
add
add
loop
addl
lock
inc
insl
mov
cmp
fs
pop
movsb
push
decl
dec
adc
dec
rolb
outsl
imul
add
cs
out
add
cmovle
inc
aas
xor
add
int
mov
outsb
or
add
mov
add
mov
or
sub
add
decl
pop
sbb
lock
sbb
inc
xchg
inc
inc
inc
andb
push
pop
jo
mov
fdivrs
scas
adc
sub
ret
jg
movsb
decl
test
shlb
fbstp
rorb
adc
dec
xchg
rcrl
dec
xchg
push
pop
and
pusha
scas
outsl
cwtl
lock
orb
mov
or
and
sahf
sbb
xchg
fstpt
mov
scas
dec
insl
loopne
add
daa
mov
popa
ljmp
add
aam
dec
mov
xor
mov
aam
and
mov
adc
dec
adc
add
inc
pop
rorl
xor
jle
les
filds
add
jecxz
mov
fldt
mov
and
test
insl
or
inc
cmp
push
xor
xor
andb
sbb
cmp
push
push
sahf
jecxz
xchg
push
inc
fwait
mov
add
test
scas
adc
cmp
xchg
mov
addb
add
cmpsb
decb
xchg
mov
push
nop
push
cmp
je
sbb
lret
sbb
inc
sbb
cld
mov
sti
xchg
icebp
and
jb
pushf
call
ds
sarb
pop
loopne
mov
mov
xor
sbb
mov
add
aad
add
jmp
push
lret
push
sbb
or
stos
adc
and
cmp
aad
mov
rolb
aaa
push
sub
addb
adc
pusha
mov
call
sbb
push
pusha
inc
sbb
dec
mov
sub
push
mov
add
add
jnp
sbbb
insl
xchg
lock
xchg
dec
addr16
xor
mov
push
mov
andnps
and
xor
pop
sub
shrl
jecxz
fistl
sbb
nop
add
push
mov
dec
inc
mov
outsl
or
out
shl
sbb
pop
or
les
push
or
lods
insl
mov
push
xchg
sarl
push
movsb
mov
test
loopne
pusha
lods
jl
loopne
push
jecxz
test
push
xor
xor
add
add
or
push
incl
pop
hlt
mov
add
mov
hlt
fs
or
testb
ret
in
push
or
fwait
adcb
insb
xchg
xor
pop
ljmp
inc
loope
push
in
das
call
insb
cmpb
and
sbb
sub
adc
insb
lock
mov
pop
add
add
mov
xchg
inc
mov
mov
sbbb
or
pusha
sub
pop
sbb
mov
sbb
jae
nop
mov
rolb
pusha
or
mov
popa
jnp
hlt
sbb
cld
xor
or
xor
stos
cmpb
jl
dec
and
lock
pop
or
sub
daa
pusha
add
aaa
lcall
out
cli
scas
cmp
subl
pop
mov
rcll
movsl
adc
out
sub
aas
adc
adc
push
push
out
xor
shl
dec
in
lock
aam
lock
inc
adc
push
xchg
push
dec
inc
adc
test
out
push
push
and
lea
jb
push
stos
mov
jo
insb
or
lods
push
stos
sbb
mov
lahf
xchg
hlt
lock
lcall
or
add
pshufw
push
xor
inc
mov
mov
cld
add
and
xchg
shll
cmpl
mov
cmp
or
jmp
and
sub
hlt
mov
into
sbb
loop
rcrl
jmp
es
dec
decl
jo
sti
adc
popa
push
push
bound
xchg
mov
test
outsl
nop
lea
das
call
arpl
psrad
shll
inc
mov
clc
sarl
inc
cld
inc
xchg
mov
lsl
push
rcll
rorl
jmp
mov
pop
push
nop
mov
loopne
scas
clc
cmpsl
mov
xchg
inc
daa
addr16
into
mov
and
pop
cmc
fildl
lahf
shl
loop
cwtl
in
cmp
loopne
lods
stos
inc
decl
incb
jbe
mov
push
out
mov
xchg
test
repz
or
js
test
addb
icebp
out
push
adc
pop
mov
or
or
lock
shrb
cld
outsb
ljmp
data16
cmc
decl
incb
mov
subl
divl
adc
cmpsl
getsec
xor
push
orb
pop
adcl
call
adc
add
add
xchg
sti
and
xor
cmpsl
call
sbb
xchg
nop
pushf
pop
or
or
add
inc
pop
lock
jnp
ficoms
xchg
push
push
loope
shlb
adc
call
add
js
dec
pop
and
pop
adc
pop
pop
lock
incl
mov
or
xor
push
sbb
inc
in
lock
mov
fidivs
inc
scas
orb
scas
clc
testl
inc
rcl
or
mov
or
xor
js
xor
test
aas
cmovl
sbb
adc
and
dec
ret
mov
call
cmp
add
push
cltd
loope
cmpb
pop
or
xchg
loope
or
shlb
inc
inc
and
out
movntps
nop
sbb
adc
adc
fdivp
push
xchg
nop
dec
out
bound
cwtl
pop
mov
ljmp
movsl
and
push
lock
pop
and
xor
adc
mov
xor
int
pop
in
xor
add
xor
xchg
icebp
jbe
int3
xchg
aaa
xchg
cli
cld
cmp
inc
dec
adc
orb
or
aas
aam
call
jbe
adc
popa
sub
mov
test
sbbl
bound
fwait
cmp
and
and
push
sbb
inc
cmpsb
out
cmpsb
add
pop
xchg
loop
mov
add
fs
in
sbb
jmp
sub
mov
cltd
bound
xor
jo
insb
pop
je
loop
sub
out
xchg
shlb
cli
stos
pusha
adc
int3
xor
aam
repnz
xor
pop
cmc
stos
pop
std
lock
dec
in
adc
xchg
pop
ljmp
push
push
lcall
and
mov
add
push
out
mov
in
orl
nop
or
leave
rolb
je
test
jg
sub
andb
bound
dec
or
and
lea
into
mov
adc
inc
mov
and
lcall
loopne
aam
rcrb
je
in
je
mov
pop
xor
insb
jns
mov
nop
je
push
outsl
add
xlat
add
pusha
std
cwtl
push
daa
insl
inc
pcmpeqw
or
rcrb
bound
adc
insb
xor
mov
mov
sbb
mov
inc
dec
xchg
aad
imul
mov
inc
add
les
lcall
adc
jmp
mov
pop
sbb
add
std
adc
hlt
dec
clc
decl
loop
mov
add
adc
mov
adc
out
add
sbb
lahf
mov
sbb
mov
pop
icebp
sub
outsb
shrb
rolb
sub
outsl
add
push
bound
cld
rcl
clc
outsb
sbb
xchg
rclb
addb
test
mov
pop
xor
jecxz
les
xchg
lret
lock
sbb
lock
xorl
fcoms
out
cmp
jo
pop
daa
rep
add
out
xchg
sbb
sub
in
shl
and
add
pmaddwd
sarl
add
rol
push
int
add
xor
pop
in
test
xor
movsl
and
jb
cwtl
test
lods
jbe
mov
int3
xor
movsb
sarl
cmp
xchg
aam
sahf
test
xchg
dec
setle
add
hlt
mov
pop
test
push
jp
aad
xor
outsl
push
jg
push
adc
rcrb
movsb
fisubl
dec
inc
add
aam
xchg
push
aam
add
dec
sbb
outsb
out
xchg
jg
mov
lds
lds
cmp
fs
adc
xor
mov
xchg
sbb
and
push
in
inc
cmp
adc
cmp
mov
aam
and
adc
or
loopne
jne
lock
test
add
iret
ret
xor
inc
fmuls
xor
ret
jmp
cmp
lret
lods
push
adc
rolb
or
xchg
aaa
sbbb
jne
or
xchg
sbb
fildl
call
test
mov
mov
nop
pop
add
popl
shrl
loop
iret
dec
add
std
mov
cs
pop
add
pop
ret
mov
pinsrw
in
and
jnp
xchg
xchg
mov
ret
outsl
mov
mov
mov
or
leave
lahf
rorb
or
shl
mov
pop
cli
rcrb
adcl
clc
pop
mov
cmpb
in
inc
pop
notl
jb
nop
push
call
outsb
xlat
rorb
xor
add
and
xchg
addb
fsubs
shlb
mov
push
scas
test
push
pop
inc
jbe
cmc
inc
inc
adc
xchg
sbbb
fmuls
cmpl
jo
adc
add
cs
and
jae
es
es
movsb
mov
cli
call
inc
push
push
inc
nop
push
push
pusha
xor
add
loop
and
pusha
rorl
mov
daa
sbb
mov
mov
push
pop
inc
outsb
ja
xchg
mov
outsb
inc
aam
or
in
jno
mov
and
addb
and
xlat
inc
sub
sub
lcall
lret
loopne
fsub
pop
cli
outsl
fwait
mov
lret
xor
push
and
mov
nop
sub
inc
add
or
maskmovq
imull
sbb
dec
push
jbe
inc
clc
fnstsw
rsm
ss
pop
and
inc
xorb
mov
loop
sub
pop
shr
or
jl
xchg
roll
mov
outsb
or
xchg
neg
add
fld
orb
shlb
inc
outsb
inc
or
jno
pusha
pop
out
mov
bound
mov
loopne
xchg
inc
jge
cmp
pop
andb
or
loopne
or
loopne
in
lock
int
sbb
std
bound
and
jmp
push
sub
outsl
xorb
mov
mov
push
and
jbe
icebp
cli
inc
inc
orb
adc
dec
incl
or
pop
add
roll
je
movsb
in
popf
call
inc
sti
sub
jns
push
xorb
adc
andb
pop
lods
aaa
push
and
in
outsl
clc
rorb
cmp
push
mull
add
sub
or
xor
in
loope
fistl
push
inc
or
in
outsb
fwait
sbbb
sbbb
or
xor
mov
add
adc
cmpb
clc
std
push
call
les
mov
dec
mov
or
sbb
mov
and
push
jg
pop
int3
mov
pmaxsw
inc
inc
jl
mov
xchg
testb
inc
insb
scas
mov
es
mov
adc
pop
clc
push
push
js
orb
cmp
nop
add
adc
hlt
add
push
xor
mov
int
loope
add
pop
sub
sbb
add
and
mov
shrb
xchg
inc
jg
fwait
cli
or
add
addl
incl
jmp
mov
mov
mov
xor
and
adc
in
mov
dec
push
push
inc
mov
add
xchg
mov
push
lock
add
out
sub
cmp
fwait
cmpsb
pop
and
movsl
dec
sub
add
dec
stos
dec
pop
push
or
sub
fimuls
fildll
xchg
out
addl
mov
sub
fbstp
push
and
push
rcrl
loopne
push
add
pop
lds
inc
mov
rclb
adc
js
push
shll
push
or
jg
push
nop
cmp
or
adc
mov
xor
adc
inc
push
cmp
outsl
sub
loop
les
nop
add
loop
stos
add
and
pop
inc
xchg
jmp
shl
pop
cmp
inc
jmp
cmp
lahf
lea
or
cmp
insb
mov
ucomiss
and
das
adc
cli
mov
xchg
jg
adc
inc
xor
es
inc
sub
jae
or
add
outsb
sbb
jg
push
pusha
and
push
mov
mov
jb
xor
mov
sub
cs
adc
movsb
xchg
pop
push
dec
into
add
incl
mov
cli
popa
mov
data16
daa
pop
push
lods
mov
and
stos
mov
pop
in
mov
mov
out
scas
ljmp
and
repnz
nop
call
mov
sbb
pop
cmpsb
push
fnsave
je
fnstenv
js
or
insb
push
jnp
stos
mov
xchg
adc
or
and
in
test
fistpll
adc
test
push
adc
sahf
aaa
push
cmp
mov
xchg
fstpl
adc
push
adc
ret
mov
jmp
jg
jb
push
gs
mov
cmp
push
and
dec
sub
sub
inc
adc
outsb
insl
loope
xor
lods
cmp
scas
aam
push
mov
incl
add
jb
or
bound
arpl
je
adc
mov
inc
inc
lock
pop
mov
or
pop
ret
shlb
test
mov
repnz
lahf
shlb
xorb
xor
inc
insb
inc
mov
add
dec
test
dec
cmp
aam
push
or
mov
mov
ret
ret
rolb
fdivl
adc
sbb
push
adc
les
jno
push
movsb
adc
dec
or
rclb
push
jge
adcl
sbb
shr
or
hlt
mov
dec
jmp
xchg
in
adc
pop
sub
sbb
inc
or
and
pop
xchg
cmp
outsb
cwtl
xor
test
outsb
lods
subl
jne
lods
xor
or
bound
cli
mov
lcall
jb
adc
outsb
mov
lock
add
push
or
std
aaa
dec
or
shrb
inc
mov
and
cltd
out
or
addr16
and
xchg
out
loopne
dec
xchg
dec
mov
sahf
and
incl
mov
shl
add
add
nop
add
xchg
je
or
push
jg
inc
pop
sti
xor
rolb
cmp
jo
pop
rorb
jb
or
mov
add
dec
inc
repnz
ljmp
cli
pop
test
cmc
mov
nop
xchg
push
shld
sub
jg
sub
repnz
sub
notb
enter
call
push
and
sahf
adc
push
int
rolb
lods
cmp
and
sub
mov
inc
andl
push
or
jae
or
jg
and
icebp
xchg
rolb
inc
fnstenv
push
inc
lock
adc
rorl
cmpsl
and
insl
add
ja
clc
and
movsb
jb
mulb
jg
std
push
inc
dec
adc
cltd
test
decl
mov
repz
aas
push
mov
jne
call
pop
add
pop
pop
lock
cwtl
sti
and
rolb
mov
xchg
ljmp
mov
or
add
mov
cmp
setnp
push
shlb
jmp
outsl
adcb
iret
bound
inc
add
sete
sub
inc
pop
enter
dec
in
and
and
inc
add
fsubrs
jg
xor
hlt
sbb
mov
bound
add
cld
mov
jno
arpl
fwait
loopne
adc
jp
mov
sbb
add
xchg
add
sub
mov
mov
inc
loope
nop
cs
mov
hlt
add
ljmp
push
add
loopne
sub
adc
sti
and
or
lds
dec
push
pusha
push
or
dec
sub
inc
lea
rorb
inc
pushf
ss
push
mov
sub
sub
sub
outsb
pop
loopne
jle
inc
add
out
and
pop
dec
adc
pop
sbb
sub
xorb
and
pop
pop
jg
add
xor
add
cwtl
repnz
cld
test
popf
jbe
pminub
jns
mov
nop
sbbb
push
sbb
mov
imul
add
cs
jle
mov
xor
jle
mov
add
push
cmp
push
add
inc
add
stos
or
push
loopne
les
push
dec
imul
jbe
mov
sahf
inc
out
cli
inc
add
xor
inc
cltd
add
adc
ljmp
push
add
out
mov
mov
or
or
andb
outsb
adc
imul
les
xor
adc
xchg
orl
xchg
adc
out
ds
insl
mov
pusha
xchg
cmp
sbb
xchg
and
pop
ret
sub
adc
ja
out
dec
mov
repnz
or
stos
mov
rol
jl
aad
jmp
cwtl
dec
stos
mov
adc
sbb
mov
adc
call
repz
push
add
pop
add
movl
inc
adc
cmp
outsb
mov
push
jb
sbbb
dec
nop
xorb
mov
cmpsl
loop
cmpb
xor
xchg
xor
das
fwait
inc
jo
adc
fnsave
cmpb
add
jmp
inc
bound
ljmp
mov
gs
and
pop
loope
xchg
and
ret
inc
cmp
add
or
jmp
mov
jne
mov
stos
add
loopne
or
loope
or
mov
sub
push
mov
inc
and
add
pusha
or
int
fadds
in
pushf
les
jle
xchg
jg
sbb
xorb
ret
add
testl
mov
js
xor
adc
out
sbb
dec
orb
add
sub
test
std
jmp
inc
push
ret
cmpsb
les
out
mov
fwait
and
add
pop
sbb
incl
adc
jno
stc
inc
xchg
cli
out
bound
xor
add
scas
xor
clc
jg
push
aam
das
popa
subb
jmp
sbb
or
sbb
rolb
cli
and
int
call
fs
andb
sbb
add
sbb
push
mov
or
fs
out
adc
inc
lea
jmp
adc
add
adc
lret
rclb
add
or
lods
clc
popf
add
int
sbb
sti
adc
add
pop
or
addb
hlt
pop
rolb
stos
cmpl
adc
pop
orl
add
inc
push
mov
inc
sti
xor
jmp
filds
fisttpl
roll
adc
jl
mov
or
cld
in
popf
roll
mov
xorb
push
cmpsb
daa
add
xchg
aaa
mov
add
lcall
add
stos
or
fisubl
pop
dec
lcall
xchg
fldenv
inc
pop
mov
pop
dec
pop
sbb
les
mov
mov
hlt
xorl
das
and
or
mov
push
insb
add
push
ret
and
dec
fs
sub
pushf
les
xorb
or
add
mov
or
push
jns
push
pop
pop
jle
adc
pop
ret
pop
es
jg
jno
popa
sub
pop
shrb
popa
cmpsb
sub
adc
mov
lds
cwtl
xchg
and
shrl
xchg
adc
dec
inc
dec
mov
mov
pusha
es
fisubl
cmp
hlt
add
or
add
mov
loope
cld
sub
mov
scas
push
push
inc
dec
pusha
or
movsb
sbb
movsb
repnz
mov
movsb
les
rolb
es
ret
adc
incl
cmp
adc
outsb
imul
adc
shlb
loopne
lcall
push
sbb
and
inc
and
addb
and
or
and
push
and
scas
pop
cmc
mov
or
jbe
roll
cmpb
frstor
mov
push
es
repnz
add
and
stos
rol
adc
shll
or
fbstp
into
outsb
dec
xor
test
xor
pop
push
lds
or
xor
mov
inc
add
clc
mov
shlb
xchg
pop
aaa
pusha
sbb
leave
xor
addb
loop
enter
xor
and
jg
pop
push
mov
dec
nopl
insb
xor
mov
jb
pop
dec
loopne
mov
add
inc
out
xchg
pop
xor
and
xor
pusha
xor
fsubp
nop
and
mov
add
inc
ds
jg
cmp
lods
and
arpl
scas
inc
mov
cld
sbb
mov
push
cmp
mov
mov
mov
divl
cmp
and
mov
push
shlb
push
daa
xor
sbb
add
add
adc
mov
cwtl
andb
dec
adc
filds
outsb
call
movsb
push
rclb
jle
mov
cmpsb
sub
or
repnz
xchg
in
aam
shrb
inc
in
mov
inc
js
stos
add
jns
jo
xor
or
xor
mov
pusha
pop
or
fmuls
imul
mov
fisubs
lcall
push
inc
pop
cmp
in
push
add
push
ficoms
loopne
adc
int3
stos
push
rolb
push
das
xor
jnp
scas
sub
mov
mov
xor
push
pop
adc
sbb
or
lcall
sub
nop
pop
pop
mov
jle
add
insb
mov
rolb
add
in
dec
or
cmpsb
test
pop
rcll
adc
aas
xchg
adcl
mov
mov
jp
xchg
lcall
xchg
test
push
roll
jnp
pusha
or
aad
pop
mov
int3
push
dec
dec
xor
bsf
adc
mov
les
add
fdivrl
and
jno
push
pop
and
jp
es
pop
inc
decl
cli
cmp
inc
lcall
or
add
adcb
loopne
leave
adc
add
iret
mov
mov
insb
jmp
xacquire
cld
dec
jo
and
jmp
or
xchg
ret
in
pushf
add
push
add
pop
add
add
mov
ret
xor
mov
mov
mov
nop
cmp
sub
push
push
and
and
mov
incl
call
add
push
mov
adc
sub
add
outsb
add
inc
nop
daa
lock
pop
xchg
pop
pop
andl
dec
xchg
push
rcr
sbb
arpl
mov
xchg
adc
push
decb
mov
sbb
outsl
push
cmp
aaa
icebp
or
popl
sbb
and
adc
and
sahf
push
mov
adc
mov
xchg
push
clc
outsl
add
cmpsl
xchg
loopne
adc
mov
xchg
add
insl
stc
mov
mov
insb
xor
insl
std
mov
test
add
int3
icebp
push
cmp
fistpl
and
xchg
loope
fists
and
xchg
inc
imul
mov
or
les
faddl
in
add
sub
jo
sahf
sbb
push
push
cmc
xchg
dec
push
jbe
shll
ret
aam
mov
add
sub
and
test
xor
inc
subb
cmp
cs
pxor
jecxz
sbb
sub
aad
out
mov
mov
adc
pop
js
out
testb
cmp
je
inc
negl
testb
mov
or
sub
fwait
rolb
imul
jp
xchg
in
data16
je
mov
adc
out
ljmp
mov
xor
rcrb
out
pusha
xchg
sub
lock
adc
nop
aaa
cmpsl
sarb
sahf
sbb
adc
sbb
mov
insb
sub
xchg
fmuls
sub
mov
outsl
sti
loopne
adc
push
subl
jmp
cmp
inc
and
lock
jge
mov
jmp
addl
rorb
add
mov
pop
outsb
ss
aas
mov
or
or
mov
and
inc
movsl
xchg
sbb
mov
ljmp
mov
or
cmc
inc
push
push
lret
fsubs
fs
or
add
cwtl
mov
insb
insb
shll
int
jp
jg
outsl
bound
cmp
cmp
mov
push
testb
scas
inc
or
pop
les
add
jb
cmp
mov
cs
pop
fistl
ljmp
xor
jmp
mov
jecxz
add
repz
xchg
neg
lock
xchg
jecxz
ljmp
adc
fadds
es
xchg
ss
mov
test
fistl
daa
and
xchg
test
inc
lods
shll
cs
idivb
fldenv
adc
ljmp
inc
clc
cmpb
bound
sbb
cmp
add
shll
out
int3
adc
push
fdivr
or
sub
pop
or
cmp
rclb
dec
loope
aas
inc
sbb
mov
cmp
push
adcl
loope
fcoml
xchg
lock
add
call
add
mov
xchg
hlt
jae
add
xchg
or
jnp
add
sbb
bound
inc
adc
mov
repnz
pushl
fidivl
mov
addr16
lock
xchg
ret
rorb
add
or
push
jo
shlb
decl
inc
inc
int3
mov
loop
pop
rcrb
xchg
clc
out
cs
ljmp
xor
loop
inc
cli
add
rorl
mov
cs
push
clc
lcall
fidivl
and
pop
mov
in
xchg
push
xorb
sbb
pop
jo
int3
push
jo
lds
cli
mov
in
add
outsl
or
cwtl
mov
xlat
xchg
adc
outsb
xlat
subb
shlb
sti
adc
ja
or
ficoms
sbb
add
clc
divl
daa
or
sbb
cmp
jg
jbe
addr16
in
cmp
sub
pushl
pusha
add
outsl
mov
xlat
add
ret
dec
sub
dec
cmpsl
fsubl
dec
mov
pushf
out
rorb
adc
loopne
mov
add
mov
popa
int
sub
loope
xor
popa
mov
add
scas
xor
push
shl
enter
jmp
pop
jecxz
sarb
add
sbb
loopne
adc
cmp
movb
mov
pop
js
push
cli
mov
mov
sub
adc
sbb
idivb
out
or
xchg
stos
inc
xchg
add
mov
add
jb
xchg
insb
pushf
addl
mov
add
in
pop
lcall
mov
divl
push
and
push
and
arpl
or
out
insb
adc
in
lock
cmp
ret
jmp
xchg
fadds
ljmp
les
mov
pop
mov
popa
add
xchg
and
add
fldt
adc
add
or
fcoms
addl
clc
sub
and
dec
mov
bound
in
insl
in
mov
lcall
add
clc
inc
mov
int3
sub
and
rcr
push
or
push
push
push
adc
pop
dec
bnd
push
xchg
add
and
pusha
mov
push
pop
test
rdpmc
mov
les
mov
sub
jmp
jns
mov
mov
mov
xchg
cli
cmpb
cmp
lcall
pmuludq
pop
mov
or
push
call
add
xorl
sbb
ret
sub
inc
mov
fcmovb
mov
mov
ja
dec
and
adc
fs
add
jmp
xchg
scas
or
out
clc
sbb
push
dec
inc
dec
pop
ret
mov
dec
ss
jb
mov
mov
push
and
sbb
rcll
bound
test
xchg
in
add
add
andb
stos
dec
inc
add
hlt
test
inc
movl
and
sbb
push
in
add
inc
mov
xlat
adc
pushf
mov
pop
or
imul
push
mov
cmpl
pop
pushf
xorl
pop
xorl
sbb
inc
sbb
test
decl
adc
inc
inc
adc
setne
pop
push
aam
xchg
xor
adc
sbbb
insb
inc
lock
or
push
sub
in
and
mov
clc
fmull
fildl
incl
inc
scas
and
in
outsl
call
rcrb
add
in
xor
inc
movsb
and
loopne
pop
in
add
inc
in
loopne
cmpl
popa
popa
add
and
inc
add
xchg
or
xor
out
mov
or
and
aam
push
xor
pop
sbb
das
call
adc
mov
fstl
xor
inc
inc
stos
add
adcb
sub
stos
mov
mov
popa
mov
add
mov
sub
data16
pop
ret
push
test
mov
out
dec
ss
pop
sar
adc
inc
sub
inc
xchg
mov
es
xor
push
rcr
sub
shrb
jmp
xchg
or
mov
xor
or
sub
out
adc
jbe
clc
and
or
das
clc
notb
inc
les
jmp
ret
push
aam
adcb
sub
pop
or
push
test
sbb
loopne
xor
or
or
int3
push
and
es
out
in
movsl
mov
decb
andb
pop
pop
add
fildll
or
or
das
and
loop
push
and
mov
sbb
out
test
lock
fisttps
pop
sbb
push
add
sbb
add
in
lret
or
add
mov
push
push
or
mov
in
add
mov
insb
adc
outsl
sti
cmpsb
sbb
movl
sbb
loopne
push
jle
jo
add
sbbb
xorb
jae
inc
sahf
mov
mov
loope
mov
jbe
icebp
cmpb
and
add
and
fsub
inc
dec
aaa
pop
dec
jle
fcomps
adc
fwait
sarb
into
inc
add
pusha
pusha
loop
aad
add
test
pusha
pop
fs
dec
push
add
add
and
loope
out
fdivrp
addl
sbb
es
inc
mov
loope
and
das
jp
cs
out
mov
lods
sbb
test
loopne
and
nop
adc
mov
mov
dec
and
in
adc
pusha
mov
inc
adc
and
hlt
or
fistps
lcall
adc
jae
dec
call
jmp
xor
push
pusha
dec
shlb
or
in
mov
shl
mov
sarb
and
xor
sub
add
or
mov
in
test
inc
adc
outsb
add
pop
stos
push
mov
stos
and
mov
push
mov
loopne
add
outsb
inc
mov
subl
cltd
repz
jne
hlt
cmp
or
and
mulb
add
mov
jmp
test
jecxz
jle
add
add
lcall
cwtl
mov
out
and
lea
enter
aad
in
pmulhuw
sbb
and
mov
sbb
rolb
lret
lret
add
mov
add
lock
or
sbb
push
aam
loopne
adc
add
or
xchg
xor
repz
pop
shlb
or
and
scas
int
add
xchg
or
in
and
icebp
cmp
sbb
push
mov
mov
adc
ret
or
test
rclb
add
iret
popl
mov
or
es
arpl
xor
mov
dec
iret
faddp
add
jp
cmp
pusha
je
ret
mov
imulb
and
enter
add
dec
stos
loope
add
or
mov
or
loope
xchg
stos
or
popl
mov
dec
mov
in
add
mov
pusha
pop
loop
mov
enter
inc
lds
push
sub
jo
xor
fistpl
cs
insb
js
lds
std
add
rolb
les
outsl
ljmp
loope
cmp
mov
adc
cmpsb
or
push
add
shrl
push
xlat
xor
xchg
and
testb
test
fsubrs
mov
push
xor
scas
adc
xor
ja
cld
pop
mov
cwtl
inc
nop
mov
inc
push
bound
add
pop
cld
add
scas
xor
daa
xchg
jo
xchg
pop
popa
mov
adc
xchg
fistpll
fwait
lock
dec
pop
sbbb
jecxz
mov
sti
and
mov
add
add
sub
dec
enter
dec
loop
cld
fisttps
push
pop
adc
and
xor
mov
inc
jo
push
daa
loopne
sub
repnz
out
adc
inc
pop
fbstp
sar
lods
and
and
push
repz
xor
push
sbb
push
in
mov
pop
dec
scas
xchg
xchg
mov
movsb
cs
outsb
or
push
xchg
cmpsb
incb
inc
fs
add
in
popa
jle
mov
mov
inc
mov
cmp
enter
or
jo
mov
xchg
xor
pop
hlt
and
hlt
test
or
push
pop
pusha
sahf
clc
mov
xorl
xchg
mov
cmp
dec
adc
nop
es
or
or
out
mov
std
inc
push
adc
shll
imul
add
daa
imul
inc
dec
xor
fidivrs
fcmovbe
xchg
mov
lock
andb
ret
es
cmp
jmp
popa
dec
mov
subb
andl
sahf
pop
sbb
mov
adc
push
mov
jo
sar
xchg
mov
or
dec
loope
mov
xchg
jecxz
sbb
popa
or
xor
push
add
add
mov
dec
mov
call
mov
in
fs
scas
push
mov
pusha
je
push
out
mulb
jo
sbb
rcrb
rorb
jmp
push
out
ret
or
xchg
lock
inc
repnz
push
out
xor
xchg
loopne
bound
jl
fwait
or
push
mov
lea
sbb
lahf
das
xor
and
xor
sbb
cltd
sub
jno
mov
idivb
cmp
jnp
sbb
lcall
mov
insb
pop
sub
std
mov
inc
cmp
jle
ja
cmpsb
dec
mov
dec
rcrb
or
push
lods
ja
cli
bound
mov
adc
add
lret
mov
push
sbb
or
cmpsl
lea
jmp
pop
push
aas
cs
daa
adcb
insl
sbb
lcall
outsb
stc
mov
jmp
push
hlt
shll
mov
enter
sar
mov
xchg
add
test
pop
mov
inc
adc
ja
movsl
orl
push
rorb
pop
mov
xorb
adc
out
and
ja
adc
adc
jecxz
ja
ja
pusha
inc
lahf
out
cmp
add
dec
std
lea
mov
mov
push
fs
test
cltd
and
mov
arpl
sub
movzwl
inc
rolb
aad
cli
daa
add
mov
jecxz
rcrl
in
mov
pop
cmp
mov
cmp
mov
xorl
or
jbe
fcompl
pop
or
in
orb
mov
aaa
push
cmp
inc
mov
sub
push
adcl
add
nop
sub
out
xchg
mov
sti
or
jb
mov
add
outsl
rorb
cmp
sbb
adcb
push
dec
cmp
loop
aam
fnstsw
loop
in
rorb
dec
inc
push
or
lods
jno
fldl
lock
xorl
dec
or
and
adc
xor
jo
add
jecxz
jbe
xchg
clc
adc
xchg
jb
xchg
imull
push
sub
add
les
mov
inc
push
or
push
rolb
shrb
dec
cmp
push
adc
pinsrw
fadd
shlb
lret
loop
or
xchg
push
xchg
daa
sbb
and
push
push
push
nopl
adc
cs
imull
mov
call
xchg
sub
inc
mov
sub
xor
mov
mov
repz
in
push
and
fwait
clc
out
mov
imull
xchg
adc
mov
adc
cwtl
hlt
sbb
jmp
or
sbb
decb
push
rcr
mov
lds
adc
xor
push
ds
insb
out
xchg
rorb
fs
dec
cs
push
fcoms
insb
testb
or
push
pop
fsubrl
push
add
out
in
fcoml
mov
or
je
outsl
add
or
xchg
cltd
pop
clc
push
nop
push
xchg
fidivs
mov
movsb
clts
inc
mov
add
out
stos
dec
pop
add
cmpsl
cmpsl
mov
aam
rcll
xor
mov
inc
stos
lods
adc
add
push
jecxz
xchg
fimull
pop
lcall
push
pop
xor
inc
add
insb
jo
sbb
jbe
cmp
pop
dec
fistl
mov
push
adc
xchg
fcmovbe
mov
and
loope
fbld
mov
mov
cli
add
cli
xchg
adc
xor
inc
sbb
pop
add
xchg
out
inc
pop
loop
add
pop
push
mov
movlps
mov
sbb
push
xor
ds
mov
push
mov
xchg
push
or
or
adcb
xchg
mov
cwtl
push
les
push
mov
adcb
add
imul
add
jmp
push
idiv
or
sarb
fs
push
add
es
inc
xor
mov
scas
jecxz
or
roll
and
dec
faddl
loop
mov
shrl
das
fdivp
shlb
shl
adc
mov
push
xlat
outsl
cltd
add
outsl
shrb
incl
cmp
or
or
mov
fcomps
mov
or
xor
das
add
mov
andb
pop
add
imul
repz
jp
add
jecxz
or
sbb
fidivl
pop
scas
jmp
test
wbinvd
int3
mov
push
negl
dec
mov
cmp
push
sbb
loope
push
mov
mov
dec
aam
imul
cld
xchg
ja
movsb
repz
and
pop
mov
out
aaa
mov
pushf
add
add
shrb
or
fs
dec
es
adcb
lea
sub
pushf
inc
bound
test
add
lods
sub
pop
test
add
addb
dec
jecxz
push
scas
lret
add
mov
cmp
dec
and
testb
nop
pop
lret
mov
adcl
ror
add
pop
mov
fwait
outsb
adc
and
add
gs
comiss
test
xchg
adc
mov
fwait
repnz
aaa
push
idivl
xorb
add
adcb
fidivl
je
pusha
cmp
nop
jo
insb
cmp
cltd
add
inc
aas
push
orb
xlat
leave
and
xchg
add
or
add
movsb
orb
fsubs
add
xchg
or
cmp
mov
add
pop
sbbb
inc
aaa
es
ljmp
push
sar
sarb
ret
or
cmp
daa
shlb
rcrl
mov
fs
pop
pop
inc
dec
and
and
lahf
inc
xor
pusha
push
or
int3
push
test
or
and
mov
xchg
fbld
add
push
push
cmpb
add
ljmp
andb
sbb
or
mov
jbe
push
mov
or
mov
push
xor
adc
mov
xor
push
xlat
rorb
lcall
adc
incl
push
test
dec
daa
dec
jne
ljmp
add
ja
or
adc
fsubrl
out
cmp
adc
je
and
mov
call
adc
rclb
dec
jb
mov
sub
ds
or
add
and
cmp
dec
pop
inc
add
jecxz
inc
jecxz
push
cmp
sub
je
xchg
jl
pop
mull
addb
lock
xchg
insl
repnz
loop
insb
ljmp
ja
out
pop
adc
fidivrs
dec
jo
or
outsb
pop
roll
mov
sub
xchg
or
mov
pop
outsl
jp
mov
xchg
decl
adc
mov
sbb
outsl
jmp
sbb
mov
les
sahf
cld
das
ret
mov
shrl
test
mov
xchg
xor
add
push
dec
mov
movsl
sbbb
jle
push
outsb
ftst
pop
sbb
adc
outsl
addb
xchg
xor
aam
outsb
and
mov
loopne
mov
add
jbe
jmp
loop
adc
xchg
pop
inc
mov
inc
pop
hlt
fisttpl
lret
mov
push
inc
mull
add
in
add
mov
mov
xchg
push
cmpsl
and
adc
addr16
ja
jnp
lahf
xor
scas
add
int
mov
push
ja
sbb
fcmovbe
daa
xchg
add
addl
adc
popa
ficoml
add
sub
lock
adc
add
and
jg
push
sti
mov
jle
xor
jg
adc
mov
add
jnp
mov
pop
stos
fcomps
mov
daa
jns
into
sti
pop
stos
fcomps
dec
fmuls
divl
clc
adc
adc
aam
push
xlat
cmp
shrb
push
stos
or
add
sar
in
stc
mov
popa
pop
pop
mov
sub
lahf
mov
shr
xor
inc
xor
shlb
xchg
or
gs
lret
rolb
iret
xchg
out
mov
stos
push
jmp
add
mov
addr16
repz
dec
rorb
dec
jnp
and
fisttps
clc
dec
loopne
pop
dec
clc
inc
mov
stos
cmpsl
pusha
push
xor
pop
movb
mov
imul
addl
or
or
daa
push
dec
stos
mov
aaa
insb
inc
dec
shr
sub
lock
pushf
fwait
shll
mov
popf
movsb
in
mov
femms
adcb
sub
mov
and
inc
mov
adc
mov
xchg
into
stos
sar
inc
or
loope
stos
inc
add
mov
lahf
sub
push
pop
leave
inc
xlat
xchg
aad
jl
or
mov
xor
mov
ja
add
inc
clc
decl
dec
fcompl
or
mov
add
pop
jmp
or
insb
in
dec
cmp
orb
stos
data16
adc
sub
fs
sbb
adc
popf
mov
enter
mov
jecxz
dec
and
psrlw
mov
cli
outsb
inc
roll
loopne
lret
or
or
pop
xlat
jmp
or
mov
add
call
xlat
mov
adc
test
rorl
inc
dec
lret
lcall
mov
sbb
push
push
cmp
push
adc
loope
xlat
pop
lcall
aam
repz
or
add
pushf
mov
test
xchg
add
ret
pusha
incl
add
cld
sbb
in
and
lods
xchg
or
xchg
aam
out
add
or
mov
lock
or
lods
mov
pushaw
add
ficoml
or
sub
mov
adcl
fildll
adc
cmpl
mov
loope
dec
push
mov
cld
call
roll
mov
add
leave
fsubp
sbb
fsubl
xchg
jmp
sub
or
inc
repz
adc
dec
lret
push
add
mov
fcoml
dec
sbb
add
popa
or
mov
pusha
add
jg
pushf
sbb
sbb
adc
call
test
jo
xchg
adc
scas
ljmp
es
notb
and
xchg
jo
adc
xcrypt-ofb
cmpsl
das
hlt
sbb
adc
cmovle
or
xlat
xadd
add
out
mov
xchg
pusha
out
shl
push
lock
rolb
adc
mov
in
pop
mov
movsb
sbb
mov
xor
add
insb
insb
push
dec
mov
mov
and
or
std
and
pusha
push
or
in
mov
add
cld
cld
insb
add
clc
pop
add
sub
xchg
inc
adcl
push
sub
int3
outsb
mov
andl
icebp
lock
rclb
fimuls
ret
in
bound
pop
mov
push
xor
mov
addb
mov
or
push
pusha
inc
push
out
pavgw
push
add
aam
xchg
add
adc
jns
or
iret
push
and
push
inc
rcrb
add
xor
inc
imul
push
add
pop
icebp
fcomip
lock
xorb
jo
push
push
jno
ss
jecxz
add
mov
inc
or
or
push
and
pusha
in
nop
andl
push
pop
in
push
stos
lods
xchg
repnz
cld
inc
orl
adc
sbb
in
jbe
push
fnstsw
xchg
or
add
icebp
and
inc
pop
and
fdivl
loopne
xchg
cltd
insl
adc
loopne
mov
out
lds
or
int3
pop
and
pop
add
loopne
popa
mov
sbb
aam
sub
lret
pop
dec
loopne
add
repnz
loopne
mov
and
pop
jg
inc
sub
test
js
jl
lock
inc
clc
cmp
xchg
add
or
mov
mov
push
pop
jb
call
adc
movsl
cmp
sbb
popl
or
and
stc
add
insb
mov
push
jo
xchg
mov
adc
cmovae
push
clc
ss
jbe
pop
push
jbe
and
xorl
xchg
and
call
mov
adc
or
adc
pusha
adc
xchg
jecxz
cmpsb
xor
push
mov
shlb
push
sbb
mov
sub
out
and
clc
push
jne
add
decl
inc
and
pushf
bound
cmp
or
out
das
and
outsl
fimull
scas
or
lock
add
add
mov
adcb
pop
lcall
ds
lods
add
cltd
imul
rclb
movlps
orl
add
and
cltd
subb
nop
in
xadd
sbb
addl
xchg
into
das
mov
fsubs
mov
adc
add
add
addr16
pop
out
inc
sub
loopne
andl
cld
jecxz
dec
ljmp
sub
mov
movsb
cs
and
insb
push
movsl
inc
insb
push
inc
in
fstl
fisubs
inc
dec
popa
pop
push
jg
push
mov
inc
jb
es
scas
sub
xchg
or
pop
add
js
and
jl
mov
push
outsb
xchg
dec
or
push
mov
fsubrs
fbld
adc
pop
mov
sub
push
and
push
adc
cmpsb
mov
ss
add
pop
sar
pop
ds
jb
mov
fldt
repnz
push
xchg
add
sub
es
cli
fisttps
loopne
mov
push
lock
out
lcall
insb
dec
jle
add
fiadds
mov
xor
mov
sar
fwait
push
lret
loopne
jecxz
xor
xor
scas
bound
mov
xor
lock
in
sbb
pop
add
push
or
and
and
xchg
hlt
loopne
shrd
add
lock
je
mov
mov
add
int
add
push
dec
es
xorb
addb
xchg
mov
movsb
jl
je
mov
roll
pop
mov
and
pop
jecxz
loope
jo
or
and
xor
pop
outsb
or
add
loop
lcall
xor
inc
cmpsb
out
outsl
mov
bound
inc
mov
in
lock
outsl
mov
call
push
sub
add
mov
in
sub
shr
jo
pusha
cmp
pusha
or
outsb
loope
popa
dec
cmp
xchg
jmp
loopne
gs
push
addr16
add
mov
xchg
jmp
imulb
test
lret
adc
push
mov
mov
sub
add
jmp
mov
add
push
out
or
pop
push
call
pop
loopne
call
push
test
mov
mov
scas
inc
icebp
pop
loop
sbb
jmp
cwtl
test
lret
add
and
das
adcb
loop
movsb
add
icebp
mov
sub
adc
add
sub
push
push
cmp
sub
inc
adc
hlt
jg
sahf
out
cmp
out
and
push
ret
ja
pmulhuw
shl
inc
jnp
mov
cmp
xchg
and
mov
mov
enter
pop
adc
cmp
ret
xor
mov
dec
int3
push
pop
add
pusha
or
inc
mov
xchg
mov
pusha
ficomps
sbb
insb
sub
dec
pop
fs
dec
add
add
push
add
pop
or
jbe
sbb
xlat
lret
add
rcrl
outsb
scas
pop
loope
mov
add
es
push
lock
jg
push
add
pushf
aas
add
ja
ja
aas
ficompl
and
addb
add
test
pop
in
lcall
push
add
dec
decl
cmp
enter
sbb
xor
sbb
xor
push
add
add
fsub
idivl
enter
or
push
pop
push
pop
xchg
cmc
ja
dec
in
addb
addb
adc
jecxz
add
dec
pop
pop
aam
mov
stos
lea
or
sti
mov
in
jle
push
fs
andb
inc
lods
cs
fdiv
and
or
xor
ljmp
and
or
int3
mov
sbb
push
es
adc
js
add
fiadds
es
adc
mov
push
xchg
adc
fs
adc
cmp
or
pushf
shrb
dec
add
jbe
adc
push
mov
add
subb
loopne,pt
cmpsb
add
push
xchg
sub
xchg
push
dec
push
and
add
call
xor
pusha
loopne
jb
push
cmp
mov
add
rorb
mov
xor
popa
cmp
sbb
xchg
inc
stos
or
fucomi
or
fidivrl
push
insb
jecxz
or
sub
loopne
sbb
mov
ds
or
or
mov
push
call
into
subl
shrb
or
cmp
sbb
incl
dec
sub
cmp
inc
or
xchg
inc
mov
xchg
cli
push
inc
das
out
movsb
sbb
pop
and
call
mov
repz
fsubrp
rclb
jne
cmp
sub
push
inc
jg
cmpsb
or
add
add
add
sbb
dec
inc
dec
popa
movaps
jecxz
mov
out
inc
add
jb
inc
aas
or
inc
rorl
sub
or
xchg
xchg
loop
xorl
stos
or
mov
and
inc
pusha
fs
addps
cltd
inc
lds
lahf
fadd
dec
mov
daa
add
cmp
inc
xor
pusha
cld
outsl
lret
inc
iret
cmpb
and
adc
mov
or
mov
pop
rorb
xor
shlb
jl
clc
or
or
dec
push
dec
cmp
inc
es
jbe
mov
mov
add
push
divl
js
and
inc
cli
or
rcll
sub
call
jle
mov
sarb
push
repnz
aaa
mov
shlb
mov
inc
lods
adc
push
mov
roll
in
or
add
jl
add
shlb
add
dec
push
sti
mov
subl
sbb
and
scas
shrb
andl
push
or
cmp
inc
cmp
sbb
mulb
sbb
rcrb
push
and
xor
mov
outsb
inc
ljmp
insb
push
add
pop
pop
jo
pop
pop
fildll
mov
xchg
imul
sbb
or
push
test
push
xchg
inc
mov
aad
add
or
inc
roll
xor
push
fwait
adcb
mov
sbb
xor
sub
loopne
and
ret
loop
cmp
mov
test
mov
add
push
outsl
cs
lock
and
mov
pushf
push
pop
shrb
sub
repz
xchg
hlt
mov
jnp
movsb
xor
dec
out
mov
adc
ja
jle
sub
testl
and
push
stos
call
sub
xchg
in
or
testb
add
or
sub
sbb
pusha
sub
lods
sahf
rcrb
cmp
std
pushl
or
adc
out
xchg
shl
es
inc
mov
mov
loopne
push
add
shl
repz
adcb
fidivrs
nopl
addl
push
and
fcoml
xchg
add
add
cmpsb
jle
scas
sbbb
mov
fsubrl
mov
push
sub
imul
adc
fwait
test
add
cwtl
dec
add
cmp
jp
aam
loope
and
loopne
std
add
inc
push
sarb
push
mov
push
decl
push
daa
mov
lods
insb
xor
scas
test
inc
ljmp
and
or
loopne
jg
jg
das
and
and
enter
test
movsb
jo
call
dec
sbb
adc
outsb
adc
in
push
and
add
sub
imul
sub
and
inc
jne
xor
lea
or
mov
pop
clc
pop
fs
loope
and
jmp
aam
pusha
xlat
mov
push
mov
testb
or
jle
adcb
mov
jbe
in
and
sub
sbb
test
cmp
xchg
in
and
push
cmpsl
jp
jnp
je
push
iret
add
shlb
cmp
inc
pop
fadd
pop
inc
cld
push
add
divl
daa
popl
jae
stos
adc
cmp
setne
mov
and
mov
mov
ret
cmp
in
cli
rcrl
adc
adc
insb
and
mov
push
arpl
outsl
mov
roll
mov
jmp
lea
loopne
mov
mov
mov
mov
push
cld
mov
mov
fsubl
sbbb
test
push
cli
div
pusha
ret
or
rcrb
pusha
adc
out
test
loop
xor
stos
and
add
rep
and
mov
or
sets
nop
adc
std
lahf
sub
addl
movsl
or
aaa
inc
add
jno
or
pop
mov
rorl
xor
add
popa
adc
aad
and
sub
mov
ret
outsb
add
cmp
xchg
mov
inc
sub
mov
subb
addl
adc
and
mov
out
inc
adc
adc
adc
add
xor
ljmp
adc
sbb
sbb
and
fwait
push
mov
mov
add
cmp
and
and
jle
mov
psraw
or
repz
xchg
mov
loope
dec
xchg
loope
sub
add
or
mov
aam
cmpsb
mov
pop
or
lock
inc
sti
aaa
test
add
lock
movsb
pmaddwd
jo
adc
std
jbe
add
push
insb
pop
xor
hlt
dec
loope
add
push
xchg
jecxz
adc
sub
inc
add
add
andl
incb
sbb
pop
add
fcoms
add
andb
inc
adc
pusha
jge
das
xchg
loopne
pcmpgtd
xor
jmp
rorb
xchg
mov
pusha
push
sbb
and
mov
xor
addl
jmp
add
jo
jg
sbb
add
pop
sti
rcrl
arpl
cmp
adc
push
std
bound
sbb
addr16
pop
sbb
out
aam
cltd
nop
mov
ja
cli
pop
push
pop
out
sarb
bound
push
out
jo
aad
mov
popa
push
or
jmp
ret
outsl
push
and
xor
push
inc
faddl
jo
adc
jo
bound
ljmp
mov
add
mov
add
sbb
nop
adc
fisttpl
mov
in
shl
mov
rcrl
adc
jg
mov
inc
cmp
cld
mov
pushf
dec
adc
test
jecxz
or
fs
sbb
add
push
test
ds
andb
dec
int
ss
aaa
clc
in
sbb
inc
shrb
das
scas
push
xchg
xorb
cmp
sub
push
jmp
add
push
xor
testb
ret
mov
adc
cltd
push
shlb
bound
mov
sbbb
and
sbb
xchg
in
aam
mov
and
ja
or
add
cmc
sbb
jle
add
push
in
jp
jg
rorb
or
add
add
and
xchg
and
xlat
adc
push
sub
pushf
push
mov
notb
jmp
add
out
and
int3
dec
cld
cmpsl
sti
fcmove
repz
push
xchg
leave
or
iret
repz
jle
mov
cmp
rcrb
jg
xorb
lcall
rcrl
scas
sbbb
icebp
push
xor
dec
push
stos
cli
pop
and
loopne
mov
inc
and
popa
xor
cmovg
aas
sar
int
pop
add
iret
mov
add
jb
sub
in
aaa
jl
lods
popa
push
nop
jmp
push
nop
push
jbe
jo
cmp
aad
sbb
addr16
addr16
in
jmp
and
add
jo
shr
mov
jmp
aam
loop
lock
adc
bound
push
adc
xchg
ret
cld
mov
adc
and
xor
or
fsubl
push
mov
xor
nop
daa
add
jmp
add
add
adc
mov
decl
or
add
sbb
xchg
int
mov
inc
sbb
mov
jbe
lcall
pop
mov
mov
test
js
add
push
and
and
and
mov
nop
test
cltd
xchg
or
xor
add
subl
dec
popf
jo
stc
lods
aaa
subb
sti
loop
ret
icebp
aas
dec
xor
mov
sar
gs
mov
rcrb
jns
lock
movsb
insb
inc
xchg
or
adc
insb
xor
mov
nop
std
rorb
clc
out
push
xor
add
inc
push
outsl
add
les
or
inc
pop
adc
les
loopne
cmp
xor
das
mov
aam
mov
das
adc
mov
loopne
mov
fstpt
jle
or
popa
xchg
inc
testb
push
or
adc
aas
ret
and
push
sarb
xor
mov
lgs
cmp
lods
or
and
movsl
push
insl
imul
mov
jae
pop
and
dec
outsl
pop
adc
mov
scas
xor
mov
add
mov
aaa
nop
pop
xor
test
jo
sub
push
es
bound
add
or
call
les
mov
and
inc
add
inc
sti
roll
add
sbb
loopne
es
and
or
dec
cs
cmpsb
jbe
cmp
rorl
mov
lock
and
int
xor
mov
aam
pop
pop
mov
xor
inc
or
clc
add
xor
xor
clc
xor
or
fucomip
push
fisttps
pop
push
aas
mov
push
add
andps
das
push
jo
inc
push
mov
or
or
mov
mov
cmp
fdivrl
ret
les
imul
add
inc
mov
mov
sub
add
pop
lods
xor
xor
icebp
mov
xchg
inc
cmp
or
jp
bound
cwtl
in
aad
out
inc
adc
decb
add
mov
and
lods
adc
inc
mov
mov
aas
dec
xor
mov
inc
cli
lea
mov
flds
or
shll
dec
sbb
xor
mov
stos
sbb
cmp
or
push
iret
xor
ret
es
mov
sbb
push
js
adc
cwtl
push
mov
xchg
test
out
jns
out
adc
sub
jecxz,pt
and
push
adc
sbb
pop
rolb
jns
hlt
add
push
dec
fwait
movsb
jecxz
cwtl
and
inc
xchg
push
je
mov
fisubs
mov
cwtl
out
inc
mov
and
sbb
fsubl
into
dec
add
sbb
adc
mov
pusha
mov
sub
loop
add
or
daa
mov
dec
inc
adc
mov
pop
movsb
xchg
mov
jl
sbb
in
mulb
in
data16
xor
test
xor
and
mov
ret
cmpsb
loopne
or
hlt
sub
shlb
loop
mov
push
incl
push
and
sbbb
jb
sub
dec
add
adc
cmpsb
xchg
test
imul
mov
cwtl
mov
sub
outsl
nop
cmp
mov
jnp
lahf
bound
adc
sbb
mov
lods
dec
push
loop
or
push
es
repz
sarb
aaa
orl
mov
and
adc
orb
and
aaa
out
cmc
cmpsl
or
inc
gs
sub
dec
fs
imul
inc
add
fcoms
pushf
aaa
jne
push
and
aas
mov
mov
mov
dec
fadd
call
push
sahf
movl
loop
xor
mov
add
cmc
pop
mov
or
js
orl
rcll
mov
loopne
mov
inc
or
inc
inc
push
cmovno
das
mov
ret
and
mov
mov
inc
adc
add
ret
incl
add
test
xchg
out
adc
push
test
popa
jo
sub
test
lcall
cmp
add
add
xlat
xchg
sahf
scas
xchg
lea
fdivrs
pop
sti
pop
lock
sbb
push
addps
fisttps
adc
push
cmpsl
rolb
pop
and
lock
pop
adc
adc
fwait
hlt
inc
add
inc
jmp
add
xor
in
adc
dec
in
mov
adc
ror
push
repnz
or
fsubl
fwait
test
mov
cmp
fs
test
sub
andl
testb
stos
mov
mov
cmpb
cmp
jge
je
scas
pop
jp
add
add
or
cmpb
fistl
js
insb
pop
mov
rcrl
pushl
shlb
and
add
and
pop
adcb
and
das
ss
adc
rol
addb
mov
inc
mov
jecxz
and
xchg
mov
inc
add
sub
add
mov
add
jmp
xor
mov
enter
add
into
out
cmp
dec
push
pop
inc
mov
add
pop
cmpsb
jmp
sbb
ljmp
dec
mov
push
repz
add
dec
jecxz
int3
loope
pop
mov
ja
sbb
adc
rcr
nop
stos
pop
sbb
in
adc
jle
xor
rcll
repnz
or
or
sbb
test
nop
repnz
imul
aaa
add
mov
mov
sahf
jb
pusha
push
sbb
sub
inc
loopne
xor
add
and
subb
xchg
mov
add
data16
push
cmpsl
xchg
hlt
sub
rolb
addl
pushl
in
sub
addb
add
movhps
mulb
mov
daa
cmp
ja
pusha
push
in
inc
ret
pop
sbb
and
lcall
push
xchg
rolb
repz
lcall
adc
je
andl
pop
inc
loopne
and
and
inc
aaa
mov
inc
adc
push
rolb
push
jecxz
cmp
lods
add
inc
pop
xchg
rcrl
mov
inc
adc
ds
sbb
jg
test
hlt
or
xor
jg
decb
loopne
in
scas
repnz
sbb
cmp
or
inc
inc
sbb
mov
add
dec
loop
loopne
or
add
xchg
outsb
lret
cmc
clc
rclb
push
sti
loopne
por
sub
xor
ss
xor
and
jo
call
stos
inc
mov
and
or
xchg
subl
xchg
pop
cld
or
pop
insl
jecxz
add
and
jg
and
insl
jae
roll
sbb
int
fldl
push
jle
cmpsb
mov
aaa
aam
inc
xchg
aam
pop
cmp
loop
xor
stos
mov
imul
add
fs
sbb
and
lahf
mov
mov
adc
add
cmp
push
dec
andl
loopne
das
test
inc
lods
in
mov
dec
dec
sub
and
aad
add
sahf
mov
jle
add
ret
outsl
inc
sbb
mov
pop
mov
cmp
andb
gs
repnz
jle
incb
mov
mov
jg
sbb
cmp
pop
inc
push
orl
insb
and
add
sub
and
addl
sub
add
rorl
mov
inc
ss
add
pop
jmp
rorb
repz
in
data16
lods
add
add
outsl
push
movl
fistpll
shlb
mov
scas
pushf
cmpsl
mov
add
inc
push
test
popf
mov
cmp
sbb
arpl
push
mov
add
nop
sub
mov
orb
mov
push
enter
or
pushl
xor
roll
iret
and
or
pop
scas
ficompl
mov
fistpll
ja
add
movl
adc
call
add
test
mov
mov
lods
imul
or
stc
shl
insb
or
das
push
push
rorb
clc
mov
add
pop
imulb
mov
adc
lock
add
add
ficoml
pusha
lock
mov
jecxz
fld
fbld
inc
ret
mov
push
subb
pop
sub
lcall
add
rcrb
inc
incb
mov
or
pop
inc
xchg
stos
cmc
in
arpl
xchg
lods
mov
push
add
pushf
pop
mov
in
jo
lea
cli
add
jecxz
mov
decb
ja
divb
or
xchg
ret
inc
xchg
xor
addr16
cmp
mov
adc
jle
add
push
fistpl
adc
int3
je
adc
push
jbe
std
bound
adc
nop
cwtl
add
test
adc
ljmp
stc
pusha
es
and
jno
adc
pop
or
or
lret
xchg
push
and
xchg
cmc
and
ror
shlb
add
mov
rorb
cli
mov
xchg
inc
pop
shlb
inc
popa
aas
pop
or
sbb
incl
dec
push
mov
xor
dec
call
mov
fs
lock
adc
and
add
call
or
mov
test
inc
cmpb
sti
fwait
ss
inc
push
cs
movl
jbe
and
clc
cmp
sub
adc
sub
orb
inc
mov
into
sahf
pop
repnz
jnp
add
in
clc
mov
cmp
inc
add
sbb
pop
popl
mov
add
mov
add
mov
test
stc
sarl
mov
add
sarl
nop
add
xor
add
cld
notb
je
pop
add
push
xchg
arpl
cs
or
mov
add
xchg
xor
in
cmpsb
jns
adc
pop
mov
pop
arpl
adc
push
pop
and
decb
cmp
aaa
xor
or
sbb
sti
iret
fbld
inc
xchg
cmp
xor
ss
add
rclb
imul
jmp
push
aas
xchg
xor
adc
sarb
lea
xchg
inc
mov
lcall
xchg
cli
add
pop
dec
mov
loopne
outsl
ljmp
pop
fs
and
add
jmp
cmp
sbb
gs
push
and
and
icebp
push
cmp
xchg
jno
daa
bswap
xor
movsl
jg
lods
cmpsl
pop
out
mov
fs
or
or
mov
or
inc
xchg
ss
out
adc
cli
or
pop
pusha
jmp
int
mov
mov
cmp
xor
lea
jmp
jle
bound
pusha
cs
jo
jg
lret
fisttps
fadd
cmpsb
pop
jecxz
sbb
xorl
decl
and
pusha
adc
cmp
mov
pushf
bound
shlb
ret
cmp
adc
xchg
mov
mov
pop
loopne
lock
ljmp
ret
jo
andl
push
push
aam
mov
pop
or
pop
inc
icebp
push
imul
mov
add
test
inc
int3
sbb
add
lds
cmp
sub
inc
inc
add
xchg
inc
mov
ljmp
inc
sti
inc
insb
xchg
pop
cmp
icebp
push
xor
mov
lret
fdivrs
rcrb
ret
xchg
std
inc
dec
pop
mov
int3
emms
and
loope
lock
pushl
mov
inc
jae
rolb
xor
inc
cltd
cmpb
push
dec
dec
ljmp
decl
xor
pusha
xchg
into
mov
or
adc
lock
add
adc
xchg
clc
push
inc
mov
lcall
adc
sahf
adc
mov
shl
repz
push
adc
and
repz
insb
loope
sbb
add
movsl
dec
pusha
repz
dec
shlb
test
adcl
inc
jl
jb
aaa
lea
pop
shl
mov
sbb
cmpb
add
xor
push
jns
adc
insb
add
addl
fstl
mov
xor
pop
cld
add
xorb
sbb
fcomi
xorb
mov
mov
jns
lcall
pop
push
adc
pop
imul
rcl
add
cmpsb
fistpl
jnp
aam
rcrl
dec
ret
mov
ret
testb
loopne
repnz
inc
add
add
or
or
and
adc
pop
les
push
mov
adc
adc
pop
mov
and
push
adc
js
add
je
adc
ret
std
fstpt
pusha
jne
or
mov
jp
or
xchg
incl
cmp
decb
std
cmpsl
or
add
jb
add
scas
lea
xchg
pushf
mov
movsb
xchg
movl
adc
pop
mov
add
xchg
push
mov
mov
lahf
add
sldt
sbb
xor
shlb
leave
lock
lods
and
ret
add
ja
sbb
paddb
and
add
addl
mov
cmp
adc
add
inc
imul
rcl
jo
push
out
andb
leave
fwait
xchg
ljmp
xchg
imul
jbe
adc
xlat
sub
aas
pop
add
pop
add
add
shrl
cli
add
imul
shrl
adc
or
add
pop
adc
sub
add
mov
arpl
lahf
inc
pop
pop
movsb
clc
pop
inc
add
add
sbb
and
hlt
pop
jae
sub
subb
std
sbb
mov
out
pop
les
bound
shlb
aam
adc
pop
fisubrl
sub
push
sbb
fcomi
inc
fwait
lock
add
add
add
sub
dec
add
xor
adc
roll
push
inc
dec
pop
sub
adc
xorl
inc
add
ss
cmp
adc
dec
inc
sub
push
or
or
in
ret
push
push
cmp
or
js
push
mov
rclb
bound
decl
push
fstl
shrb
jno
adc
cmp
pop
and
data16
mov
sbb
push
and
mov
ret
and
push
xlat
orb
fcomps
xlat
add
subl
shll
loopne
sbb
jo
or
jbe
push
add
xchg
pushf
aam
es
ffree
fldt
mov
jmp
enter
xor
ret
addl
psllw
aaa
test
adc
or
pop
pop
popa
lahf
inc
je
insb
test
loop
lods
add
lock
stos
repz
gs
mov
add
add
push
pop
xlat
cvtps2pi
add
orl
mov
or
push
ret
inc
mov
ljmp
aas
add
insl
decl
sarl
adc
or
mov
push
pop
lret
repz
or
mov
sahf
add
sbb
push
mov
insb
rcrb
fs
adc
add
aam
cltd
ds
fistl
xchg
add
mov
cli
decl
in
icebp
subb
xchg
in
or
idivb
out
and
jmp
pusha
push
sub
jg
push
xchg
ret
enter
mov
mov
jg
adcl
rcrl
test
add
test
mov
cmpsb
jo
enter
pushf
jmp
push
mov
or
inc
bswap
mov
mov
fistps
mov
psubw
loopne
pusha
xor
enter
cmp
mov
add
lea
add
filds
jnp
push
test
push
fwait
sub
stos
push
jecxz
adc
mov
inc
loopne
shrb
or
inc
inc
in
lcall
or
inc
mov
loopne
pop
cmpxchg
jp
pop
loopne
mov
jo,pt
add
sbbb
imul
dec
les
dec
ljmp
orb
sbb
and
dec
addb
insl
push
cs
push
insl
jb
adc
cli
sub
cs
fldl
rorl
rcll
sub
mov
mov
add
test
adc
xor
ja
or
lret
sbb
push
outsl
jo
xchg
jmp
inc
xchg
dec
dec
cmp
mov
push
xchg
scas
or
jns
adc
testb
and
std
add
push
pop
and
js
push
inc
loopne
aas
stos
jecxz
aaa
mov
push
jg
inc
andb
sbb
push
outsb
lods
ljmp
push
addb
inc
adc
arpl
js
pusha
sbb
push
push
push
pop
mov
in
push
inc
inc
aam
decl
scas
adc
loopne
incb
cltd
call
fdivl
mov
or
mov
or
adcl
mov
aaa
cld
jg
test
adc
mov
dec
or
jbe
mov
sub
popa
subb
les
add
cmpsb
cmp
iret
loopne
daa
jmp
mov
sub
or
subl
pop
enter
push
mov
add
add
pop
xchg
hlt
mov
or
movsb
test
mov
adc
rcll
add
xchg
andb
xchg
fisubl
orl
in
adc
sbb
add
and
push
ret
lock
add
pusha
add
cmp
mov
mov
or
inc
loop
sub
data16
and
inc
sub
pusha
cmp
pop
or
xchg
push
scas
push
lcall
sbbb
mov
sub
inc
sub
sar
call
popa
inc
lock
mov
cmp
lsl
pop
popa
push
sub
mov
push
jnp
incl
sbb
andb
mov
pusha
or
mov
jo
or
fwait
and
movsb
lock
clc
loop
cs
insl
jp
nop
popa
pop
loopne
or
aam
inc
fcmovnu
jb
or
push
shll
test
push
pop
sub
or
mov
cmpsl
mov
add
xor
nop
aad
add
mov
lret
pop
loope
loope
stos
out
fcoml
xor
dec
add
call
mov
cli
jg
push
adc
pop
push
daa
pop
nop
insb
mov
sti
push
xor
and
jle
sbb
lcall
or
jo
add
pop
je
aas
add
shll
mov
adc
inc
xor
push
mov
dec
dec
fimull
xor
addr16
clts
nop
xor
xor
and
jnp
lcall
outsl
decl
mov
ret
pop
adc
cwtl
ret
pop
dec
xchg
add
js
xor
xor
movb
ljmp
lods
ja
mov
pcmpeqd
jmp
add
andb
orb
mov
xor
sub
push
test
shrl
adc
jmp
add
add
and
fildl
mov
cmpsb
and
ss
add
loopne
scas
js
in
xor
inc
sbb
nopl
and
add
and
xor
data16
push
dec
adc
mov
mov
ljmp
jo
add
pop
and
push
sub
subb
push
xor
jg
scas
mov
sbb
mov
lahf
xor
xor
cmp
das
sbb
insb
out
into
sbb
inc
unpckhps
sbb
xor
in
test
cmp
mov
xchg
push
faddl
imul
ljmp
out
mulb
xchg
jae
and
sub
xchg
adc
and
lcall
popa
push
xchg
push
in
pusha
xchg
dec
xchg
xlat
mov
popa
add
idiv
dec
cmp
arpl
popa
sbb
nopl
cmpsb
addl
inc
mov
add
data16
xor
stos
add
bswap
sbb
rorl
inc
inc
sbb
shl
bound
mov
dec
sbb
push
dec
in
inc
sub
xor
push
jne
adc
fimuls
adcl
arpl
in
push
mov
xorl
lods
popa
jo
and
adc
jl
inc
inc
sti
cmp
xchg
rcr
stos
mov
idivb
xor
repz
mov
adc
push
xlat
insb
loope
adcl
lahf
movsb
mov
arpl
inc
xor
sub
cmc
or
sti
adc
in
jo
or
push
test
subb
sub
int3
in
shlb
insb
jecxz
and
addl
call
pop
dec
lahf
add
and
insb
sbb
psubb
mov
insl
loope
dec
into
fcmovnbe
xchg
ljmp
sub
mov
xor
fs
ret
outsb
lock
rcrb
add
xor
sti
nop
outsl
mov
push
pop
mov
fildll
xchg
rorb
add
xor
insb
out
adc
mov
addr16
incb
adc
add
or
mov
out
lock
rcll
sbb
jae
les
lret
and
sbb
iret
adcb
mov
add
iret
fcoml
sbb
ret
push
jmp
sbb
mov
fcomip
jg
xchg
rorb
pop
lea
xchg
and
xchg
das
pop
sti
or
clc
push
add
ds
or
mov
and
lds
daa
push
daa
xchg
stc
add
or
and
xchg
inc
and
push
pop
and
pop
xor
cmp
lcall
rorl
fs
and
mov
divps
dec
arpl
lock
andb
add
add
push
scas
sub
pop
pop
push
adc
xor
push
or
push
pop
push
cmp
inc
out
fstp
call
push
pop
pop
push
push
add
call
in
xor
xor
and
mov
mov
rolb
pop
push
jne
lock
adcl
out
inc
push
std
outsb
mov
and
push
push
aad
incl
daa
mov
pop
rclb
lock
pop
sub
test
add
int3
cwtl
sbb
or
insl
mov
sbb
sub
jmp
pop
dec
cmp
xchg
push
add
and
adc
add
sub
test
movsb
in
sbb
and
jle
mov
jle
orb
mov
dec
loope
insb
xchg
adc
aam
or
es
test
mov
insl
inc
data16
and
int3
push
popa
adc
pop
inc
adc
pop
rorb
jecxz
xor
xor
add
sahf
and
out
es
xor
or
out
sub
push
notb
or
scas
in
loopne
loop
mov
decb
and
sub
fcomps
scas
add
sbb
dec
decl
push
iret
jo
jg
xchg
and
or
add
pop
rcl
xchg
pop
or
adc
add
mov
pop
fwait
push
or
pop
mov
cmp
or
test
fimuls
pop
jno
or
ja
cmpsl
pop
or
pop
jae
add
jae
add
outsl
mov
ds
jg
out
sbb
rcrb
jnp
lea
andl
pop
xor
pop
div
int
inc
inc
jo
inc
pop
xchg
inc
pop
lret
xor
or
and
aas
outsl
mov
jle
mov
pop
mov
jecxz
insl
outsl
ja
es
jp
push
pop
xchg
or
lcall
ja
mov
adc
pop
or
or
outsb
xor
mov
pop
or
ss
xor
or
pop
cmp
and
pop
out
or
pop
and
outsl
outsl
fwait
das
xchg
cs
adc
pop
int
or
popa
ss
in
mov
cwtl
aam
xor
mov
and
pop
cs
cmp
mov
cmp
inc
or
pop
loop
icebp
pop
jns
imul
sbb
add
jo
pop
sub
aas
or
xchg
or
pop
fadds
mov
mov
push
sub
stc
adc
add
xchg
xchg
imul
fisubrs
inc
cmp
and
out
fwait
dec
in
push
loope
jb
fimull
mov
std
mov
pop
push
inc
push
jmp
add
call
dec
adcl
jp
and
repz
jns
inc
inc
sti
idiv
icebp
pop
xchg
subb
out
es
pop
mov
sti
ss
call
inc
push
or
pop
push
add
das
addb
xadd
stos
lds
in
pop
fstp
xor
pop
inc
ss
push
rcrl
mov
iret
pop
mov
jbe
adc
lret
pop
and
pop
roll
or
sarb
fistpl
jl
add
push
add
or
pop
pop
push
sbb
aas
fisubl
mov
pop
or
sub
cmpsb
daa
rclb
pop
stos
lahf
push
pop
cmc
nop
inc
mov
push
loop
scas
push
fisubrl
jge
lock
pop
ds
cmp
mov
add
mov
jle
or
mov
push
mov
mov
add
xor
mov
mov
xchg
cltd
pusha
xchg
adc
xorb
lods
dec
loopne
and
push
add
mov
fst
or
pop
cmpsb
inc
and
mov
or
xchg
adc
outsb
push
xchg
scas
push
lock
cs
xchg
rcrb
xchg
lcall
sub
sub
mov
mov
mov
in
fisubl
sbb
xor
mov
icebp
imul
inc
adcb
in
jl
or
shlb
mov
outsl
nop
mov
out
andl
push
add
clc
mov
sbb
jg
rorl
cmpsl
fcoml
and
jecxz
jne
loope
add
mov
daa
scas
test
or
dec
or
add
call
xor
adc
outsb
lock
ss
xor
pop
push
data16
and
xor
adc
sub
stos
js
test
inc
or
or
cld
push
add
or
dec
add
adc
lret
pushf
inc
adc
enter
lock
xchg
shlb
add
pcmpgtw
push
loope
sub
bound
jle
or
mov
rorb
inc
test
add
mov
add
and
sub
and
or
push
mov
push
push
adcb
or
addb
ljmp
and
xchg
call
loopne
mov
pop
add
sbb
xchg
pusha
add
shll
call
xor
jbe
add
ljmp
add
int3
xchg
inc
js
rcrb
outsl
add
addr16
aas
outsb
push
sub
bswap
bound
or
push
mov
pop
loope
add
imul
insb
dec
sbb
xchg
add
sbb
xor
ja
cli
lcall
and
xor
scas
or
cmp
push
xorb
add
out
or
pop
or
rolb
ficoms
fists
mov
rolb
int
loop
fcoml
loope
rclb
push
enter
mov
dec
loopne
pusha
jle
cs
adc
push
add
push
bound
adc
pop
mov
inc
xchg
decl
into
and
sub
pop
push
in
and
ret
add
call
cmovns
or
inc
adc
out
rolb
inc
shrb
jg
jo
xor
jb
inc
sbb
pusha
mov
or
sub
add
and
aam
sub
or
or
push
aas
push
add
pop
leave
test
decb
ret
mov
cmovb
dec
pop
pop
roll
push
mov
adc
inc
xchg
es
es
add
fsubrl
daa
shll
xor
je
stos
push
jg
adcb
pop
popa
sub
push
insb
aaa
nop
lcall
add
addr16
inc
ljmp
fs
lret
shlb
and
shrb
cmp
push
add
add
rcrb
rcrl
inc
xchg
push
cld
push
sti
decl
adcl
adc
sub
mov
adc
sbb
xor
push
sbb
mov
das
jg
cli
xorl
inc
insl
rcrl
mov
pop
xchg
out
inc
fsubrl
or
lcall
adc
xchg
mov
mov
or
xchg
pop
nop
lret
mov
and
ret
movl
js
je
jmp
aaa
lea
add
push
and
fcomps
xchg
movsb
pop
adc
movb
clc
adc
xor
add
shlb
icebp
or
insb
jo
fimull
in
cltd
rcl
daa
adc
in
iretw
adc
shll
xchg
icebp
or
cmpsb
in
cld
adc
add
jae
daa
inc
or
xchg
jle
rorb
inc
inc
or
lods
popf
dec
push
xchg
lock
add
sbb
mov
mov
sbb
adc
fs
xlat
xchg
repnz
movsl
in
lahf
dec
add
add
pop
add
arpl
ja
inc
clc
in
mov
adc
adc
fdivl
xchg
mov
jg
sub
jnp
mov
adc
xchg
adc
fldl
repnz
sub
jmp
add
shrb
xlat
xchg
in
dec
lret
dec
test
loopne
or
cwtl
adc
pusha
add
push
out
sbb
int3
rorb
pusha
movsb
pop
push
lods
pop
or
out
add
sub
push
add
mov
push
aaa
shr
pusha
ljmp
aaa
ret
inc
and
sub
daa
add
mov
xchg
add
incl
and
or
mov
sub
push
pop
lods
mov
and
icebp
or
shrb
push
or
mov
cmp
push
or
loopne
or
ds
sbb
in
lea
in
int
add
nop
adc
xchg
out
and
adc
or
insb
mov
add
mov
or
xor
stos
enter
movhps
stos
adc
xchg
adc
xchg
push
mov
or
dec
pop
arpl
repnz
ljmp
sub
add
add
push
in
fidivrl
ljmp
xor
dec
ljmp
insb
push
pop
add
in
xor
inc
jmp
cmp
adc
jo
lock
dec
or
add
xchg
in
loope
mov
shlb
lock
sub
jle
mov
jo
out
jbe
sub
pushf
lcall
or
stos
mov
inc
inc
sub
lret
inc
mov
lock
jmp
inc
pop
out
dec
divl
das
mov
adc
sbb
add
inc
test
inc
inc
aaa
stos
mov
or
push
sbb
mov
add
filds
pop
fcoml
add
cmpb
sarb
or
repz
push
push
out
xchg
out
ret
push
adc
or
scas
or
mov
xchg
nop
sbb
mov
and
jg
rcll
cmp
nop
add
repz
mov
lcall
sub
add
xchg
and
mov
and
ljmp
inc
pop
adc
add
mov
inc
mov
push
insb
cmp
movb
mov
sub
push
add
add
orb
and
push
mov
bound
fs
lret
arpl
imul
pop
sbb
icebp
adc
adc
add
jo
xchg
adc
adc
shlb
es
aad
xchg
mov
adcb
push
fwait
mov
dec
or
mov
push
fcomp
sbb
or
or
sbb
incl
xchg
inc
iret
jl
popa
add
or
sbb
push
and
cmp
and
in
and
in
lret
addb
subl
orb
or
or
shlb
and
push
and
aaa
test
shl
or
adc
shlb
popa
xchg
add
les
sets
xchg
cmp
std
lea
push
adc
mov
sub
pusha
push
dec
push
mov
mov
sbb
xchg
and
insb
shrb
subb
orb
add
dec
call
jo
not
push
int
notl
xor
or
xchg
cli
testl
mull
loopne
jle
mov
mov
adcb
mov
loop
add
or
test
aaa
rolb
ljmp
jbe
add
or
dec
push
and
jmp
pop
in
decl
repz
add
add
negl
cltd
cld
and
clc
add
xchg
fdivr
rolb
push
cmp
pmulhw
pop
pusha
sub
cld
add
bound
xchg
mov
pop
pop
addb
dec
call
jge
orb
test
push
lock
xor
nop
imul
rcrb
xchg
push
jnp
jb
sar
sub
mov
rorb
ds
movsb
sbb
inc
jecxz
ss
movsb
xchg
jmp
je
xchg
jg
test
and
dec
inc
ficoms
xchg
dec
call
push
jle
lock
pop
mov
rcrb
add
filds
inc
inc
add
or
sbb
and
pop
adc
adc
sbb
sub
rclb
adc
fsubs
cmc
fcmovu
xchg
int3
dec
xor
pop
dec
mov
push
add
stos
andb
rorb
addl
xchg
mov
adc
addb
pop
lea
push
nop
or
jmp
pop
add
mov
data16
ret
cmp
jl
mov
ja
cpuid
push
or
loop
sbb
push
push
xorb
add
add
mov
push
call
ja
maxps
enter
sbb
push
scas
repz
adc
inc
cmp
push
mov
loop
movsl
and
pop
pop
push
sbb
pusha
bound
ja
dec
xchg
or
xchg
decb
std
push
bound
push
xchg
pop
add
cmp
adc
mov
inc
outsl
orb
add
notl
insl
push
sbb
rolb
xchg
lcall
and
mov
subb
roll
add
pop
jae
or
cmp
and
orl
adc
mulb
arpl
fcmove
nop
mov
mov
les
loop
add
ret
push
xchg
mov
mov
imul
cmp
inc
mov
add
adc
std
or
add
enter
insl
in
mov
xor
cmpl
aaa
sub
jmp
rolb
pushf
xchg
pop
inc
pusha
adc
mov
or
adc
subb
dec
inc
stos
shrb
test
cmp
push
mov
xchg
jo
add
or
sbb
sub
cwtl
mov
cmp
add
add
and
add
mov
sub
mov
and
mov
pop
xchg
xor
mov
add
bound
push
lcall
cs
mov
test
inc
and
xchg
or
mov
xor
mov
out
enter
mov
je
ss
cli
popf
nop
adc
xlat
orl
lds
repnz
inc
adc
sub
jnp
and
mov
loope
push
pop
add
andb
cmp
push
add
pop
fsub
pop
add
sti
adc
idivb
pop
sarb
push
add
mov
shlb
and
je
push
or
cwtl
ror
push
test
xchg
add
orl
inc
xlat
sub
leave
rclb
rol
movsb
cld
adc
inc
punpckhdq
xor
cli
adc
sbb
add
insb
xchg
and
xchg
sub
sbb
test
rcrb
sub
movsb
mov
push
ds
sbb
xchg
in
adc
das
sahf
mov
add
pop
aam
adcl
or
sub
cli
jg
sub
push
aas
movsb
adc
sub
push
rcrb
addb
sbb
repnz
sbb
insb
mov
cmp
inc
loopne
mov
xor
shlb
and
mov
lods
nop
mov
fcmovb
cmp
pop
cld
ja
xchg
fiadds
andl
mov
arpl
pusha
jl
je
and
mov
sub
outsb
mov
and
push
mov
and
popa
ljmp
fdiv
dec
mov
mov
pusha
pop
out
inc
outsl
mov
cmp
insb
pop
popa
fbld
xchg
ficompl
pusha
or
xchg
inc
mov
add
mov
or
push
popa
add
push
cwtl
rolb
sub
mov
or
push
out
mov
and
pop
out
clc
or
and
mov
sub
test
adc
sahf
mov
pop
and
mov
cld
mov
jecxz
mov
pop
mov
test
jp
fsubs
repnz
add
mov
lods
inc
movsb
or
adc
mov
mov
outsb
and
and
and
orb
rcl
sub
mov
loope
dec
adc
subl
add
push
push
add
out
loop
out
mov
insb
jecxz
dec
or
adc
imul
xchg
xor
cmpsl
bswap
inc
mov
lcall
pop
out
jmp
mov
sbb
inc
xor
adc
lods
inc
mov
add
inc
cmp
aad
loope
lea
lea
in
pushf
xor
lock
fldl2t
bound
inc
inc
xchg
in
add
cmp
jne
sub
enter
pmuludq
or
or
mov
xchg
lock
mov
mov
das
push
mov
pushf
inc
sub
sub
fisttpl
add
loop
rclb
addl
es
popa
mov
inc
adc
lahf
adc
ret
add
push
adc
mov
fs
clc
fildll
sti
andb
lds
arpl
cld
add
pop
mov
loopne
mov
push
or
jbe
jecxz
push
pusha
add
inc
pop
push
test
std
dec
sbb
les
addl
add
pushf
push
cs
push
and
push
inc
adc
add
sbb
inc
adc
jl
mov
add
push
hlt
mov
fnstcw
outsl
dec
rcrb
adcb
data16
clc
pop
push
hlt
adcl
out
jb
add
sbb
or
adcl
mov
bound
fadds
ljmp
pop
inc
and
mov
or
push
dec
dec
pop
sbb
push
stos
decb
iret
out
sbb
je
daa
out
aaa
fisttpll
ret
mov
in
daa
jbe
ja
pusha
sahf
or
pusha
push
repnz
jecxz
movsl
rcrb
pushf
into
adc
inc
daa
jbe
shl
adc
or
popf
or
or
adc
fcomps
shll
mov
mov
scas
pusha
xlat
mov
or
icebp
push
mov
push
xchg
add
add
loopne
adc
lcall
jmp
mov
add
es
add
popa
dec
out
cltd
jmp
inc
orl
jecxz
outsb
pop
and
xchg
mov
or
movzbl
sar
nop
loop
sub
and
bound
jg
insb
cmp
pop
xor
mov
mov
adc
or
add
sub
lock
cmp
sbb
in
mov
pushf
mov
cmp
ja
xor
call
nop
or
or
and
sub
outsl
adc
adc
mov
test
std
mov
sbbl
jp
add
icebp
or
jo
in
mov
ds
call
mov
cs
or
sub
dec
in
ficoms
push
add
sub
out
roll
or
mov
in
cli
das
nop
xchg
nop
fsubs
lret
shlb
inc
and
jo
divl
aam
xor
xchg
xchg
sbbb
repnz
push
jg
or
add
cltd
rclb
shl
sub
push
aaa
sbb
test
inc
inc
clc
fwait
incb
int3
shrl
sarb
in
xchg
jmp
pop
clc
or
jbe
loopne
or
fimuls
adc
mov
fildl
mull
pop
loopne
iret
add
je
or
sub
cli
aam
mov
scas
jecxz
jp
dec
sbb
or
adc
cltd
xchg
lahf
mov
jne
rorb
fsubr
mov
insb
xchg
out
sbb
shlb
or
pusha
lock
or
gs
in
out
mov
xchg
pushf
loope
xchg
sub
or
aaa
or
xchg
adc
loopne
outsb
fwait
add
loopne
icebp
fs
fs
decl
fadd
into
jmp
push
push
or
or
push
mov
clc
daa
or
mov
dec
mov
adc
loope
ljmp
jp
or
daa
inc
xor
icebp
add
jo
jb
sbb
and
test
add
mov
clc
or
xor
and
pop
test
push
rcll
je
std
sub
andnps
mov
cmpsb
mov
push
pop
add
or
push
inc
ss
pop
or
icebp
add
pusha
faddl
nop
sar
sbb
push
adcl
lock
push
or
add
push
jnp
repnz
insl
std
push
icebp
sahf
nopl
call
call
setno
call
stos
or
adc
add
pop
inc
jg
sub
jne
dec
in
jo
mov
jmp
lods
xchg
push
jbe
push
cltd
roll
out
aaa
add
lock
mov
mov
rorb
xor
add
or
adc
sbb
and
enter
int
call
xchg
insb
sub
sub
xchg
std
sub
ss
mov
sbb
mov
loopne
enter
andb
adc
and
pop
pushf
push
jae
int3
pop
adc
add
and
mov
ror
mov
cmp
jb
dec
or
push
push
aaa
pop
inc
sub
push
mov
imul
inc
mov
fdivs
jp
rolb
xchg
and
inc
daa
push
dec
pop
inc
cmpsl
and
jnp
mov
push
mov
clc
jecxz
mov
push
and
xlat
insb
hlt
add
lret
cld
cmpsl
out
shlb
adc
push
lar
lock
cli
scas
cli
push
stos
sbb
sub
and
or
mov
fsubr
loope
and
addb
mov
mov
and
xchg
pop
jne
subb
mov
pop
insl
add
aaa
pop
aam
test
cmp
test
push
mov
add
add
aad
push
inc
sbb
push
push
and
in
mov
mov
add
cmpb
adc
nop
shrl
xor
scas
stos
jbe
and
add
loopne
in
pop
loopne
daa
out
inc
xchg
out
add
push
inc
insb
in
scas
pop
lods
and
clc
mov
cld
lret
ja
in
repz
ljmp
add
push
fcompl
add
or
repnz
and
push
or
fcmove
adc
push
mov
mov
jno
xor
subl
insb
out
xor
and
mov
movsl
or
adc
enter
inc
pop
add
add
adc
mov
xchg
adc
lcall
in
and
mov
jl
push
int3
and
inc
std
and
adc
cmp
mov
dec
ljmp
add
push
jns
xor
in
pushl
and
push
pop
ss
ds
add
repz
cmp
push
or
mov
add
add
incb
clc
lds
mov
adc
pop
sub
add
and
inc
adc
xchg
push
repz
jmp
cli
mov
mov
repnz
add
fldln2
sbb
lcall
mov
pusha
sbb
incl
cmp
xchg
les
lods
inc
or
es
and
sbb
mov
or
add
adc
cmp
outsb
call
push
mov
bound
adc
sbb
in
add
add
lds
mov
fstpt
inc
cmc
test
or
fcompl
xchg
hlt
sub
xchg
add
xchg
pop
mov
sub
jno
and
fwait
int3
pop
aam
mov
or
lahf
push
push
outsb
pop
push
dec
or
xchg
cmpsb
mov
xchg
and
pusha
mov
inc
mov
and
cmp
jae
add
fs
and
mov
imul
hlt
add
call
add
inc
arpl
aad
or
sub
insb
mov
movsl
xor
push
xchg
clc
and
sub
dec
add
xchg
or
loop
mov
call
add
sbb
add
icebp
mov
and
subl
add
push
mov
icebp
mov
sbb
add
push
xchg
fs
xchg
jecxz
adc
xchg
mov
push
mov
pushf
jp
pop
adc
or
sarb
pusha
sbb
jmp
inc
andl
push
sub
add
jbe
cli
add
out
pop
push
jecxz
cmpsb
adc
add
mov
outsl
out
mov
shrb
mov
call
jg
psubusw
mov
call
and
outsb
inc
in
pop
push
xor
sbb
push
iret
adc
adc
ret
or
ljmp
push
pop
adc
sbb
pop
loopne
push
pop
mov
dec
es
out
cmpxchg
or
pop
test
xor
add
xchg
into
and
jp
or
loopne
push
add
xorb
ret
ret
cli
das
sarb
push
bound
addl
add
insb
add
add
or
rorl
insb
xchg
je
enter
sub
rolb
outsl
inc
rclb
or
nop
pop
lock
jmp
stos
jmp
les
out
addl
mull
jecxz
lods
andb
outsb
lods
jmp
mov
cmc
enter
sbb
cmpsb
cmp
sub
jl
mov
test
stos
jno
dec
jno
jo
sbb
out
mov
bound
and
xchg
clc
sub
fwait
add
cwtl
movsb
push
aaa
cmp
sbb
and
rolb
inc
sub
add
or
inc
lods
data16
into
ficoml
insb
test
daa
sahf
adc
xor
add
js
add
inc
int3
or
roll
dec
add
repz
pop
jno
mov
xor
mov
inc
add
hlt
mov
xor
nop
or
fidivs
aam
test
push
cmpsb
stos
outsb
in
adc
out
rclb
xchg
xchg
or
inc
arpl
pop
lock
adc
movsl
nop
scas
ljmp
insl
mov
push
and
arpl
shlb
fwait
and
mov
repnz
addb
jnp
cli
lahf
push
loop
sbb
dec
ret
or
sbb
aas
mov
mov
inc
or
inc
jae
add
jecxz
jg
add
inc
add
add
sbb
out
and
loop
adc
sbb
inc
outsb
pop
test
daa
adc
jno
lcall
fldt
aas
orb
adc
adc
addb
push
adc
repnz
sbb
test
addl
add
lods
push
cs
fisubrs
and
mov
shl
movl
mov
lret
decb
jnp
addl
cld
inc
and
addl
das
cmp
mov
ss
adc
and
fldl
mov
add
ss
or
outsl
and
adc
or
mov
cld
adc
xchg
cli
mov
lcall
adcl
add
jb
pushf
add
adc
out
adc
mov
loopne
add
mov
mov
mov
pop
xor
pusha
mov
insl
in
into
sub
cmpb
add
lcall
sub
mov
and
aaa
and
insb
sub
ss
cmp
pop
stos
and
arpl
add
fstpt
pop
jl
ret
sub
pop
in
loopne
add
mov
cmp
scas
lcall
and
int
outsl
mov
mov
adc
adc
fisubrl
adc
lcall
notb
ds
movsl
fs
or
and
pop
lea
add
or
add
loopne
lcall
add
mov
xchg
pop
dec
or
int3
and
add
ljmp
push
clc
adc
dec
xor
sbb
push
or
orb
ficomps
test
push
pusha
aas
popf
inc
mov
popf
rorb
aaa
lret
js
in
das
and
adc
add
mov
enter
and
cmp
dec
cmp
in
xor
add
xor
cli
inc
fs
fildll
int3
push
pop
adcb
inc
cmpsl
add
outsb
sahf
lods
mov
in
ljmp
and
cmpsb
inc
loopne
cs
adc
es
and
andb
mov
mov
push
jg
jp
fsubl
mov
pinsrw
fs
dec
in
and
loope
mov
popa
or
movzwl
sbb
fcomip
jg
nop
mov
or
push
loopne
popa
shll
or
rep
clc
mov
push
pop
jmp
xor
cmpsb
orb
xlat
add
ljmp
or
adc
loopne
jmp
out
test
pop
popa
sub
sbb
negl
mul
add
cltd
pusha
adc
push
sbb
movsl
or
mov
in
add
adc
mov
add
xor
and
push
add
xor
pop
imul
sub
pop
sub
xchg
out
xor
movsb
ljmp
sbb
in
popa
add
fs
loopne
pop
mov
mov
jbe
mull
xchg
mov
inc
jnp
addl
push
mov
arpl
fcmovnu
jb
test
test
or
std
inc
jo
sti
aad
nop
mov
repz
icebp
add
scas
and
out
pop
push
sbb
pop
mov
jecxz
adc
and
cmp
xor
add
lock
push
inc
pop
sbb
push
and
pop
stos
je
popa
inc
sub
mov
mov
pop
inc
sub
push
fwait
nop
lahf
ficoml
dec
arpl
jmp
out
push
lods
inc
loope
std
or
push
xor
push
stos
sarb
add
sbb
sti
shll
divl
imul
addb
sbb
jb,pn
add
fstpl
fucomip
lock
sub
mov
dec
sbb
or
sub
or
mov
sub
jo
daa
cmp
add
add
jmp
inc
xchg
jnp
out
shl
ja
imul
and
xchg
lahf
cltd
add
add
mov
scas
or
sub
mov
js
xchg
add
mov
in
sbb
sbb
and
or
roll
outsb
ud0
outsl
stos
mov
scas
add
push
sub
mov
push
icebp
add
push
in
add
push
jg
push
imul
test
push
add
jbe
push
imul
push
or
out
sbb
mov
mov
jo
call
mov
xchg
jo
push
sti
push
xchg
add
lea
add
call
js
fwait
dec
int
sbb
xor
pop
mov
adc
sbb
out
xor
insl
into
add
and
lock
stos
jno
fidivs
ficoms
nop
shl
push
or
sub
adc
mov
addr16
and
mov
iret
mov
rcrl
mov
hlt
stos
push
pushf
and
pop
insb
mov
mov
or
lret
fbstp
xchg
jo
jo
pop
jae
jne
repz
sbb
lock
out
push
jns
sub
lock
jl
fldcw
bound
mov
out
pop
sbb
int3
push
imul
ljmp
adcb
mov
add
add
cmp
xchg
mov
jae
scas
call
sbb
jae
es
push
mov
xorb
inc
xchg
cmp
stc
push
adc
push
imul
dec
sub
xor
mov
mov
push
icebp
imul
xor
lock
stos
outsl
or
stos
shlb
pop
les
aas
dec
repz
or
mov
add
outsb
jo
fiaddl
stos
aad
xor
lahf
loop
and
loopne
cmpl
addl
in
xorb
shrd
pop
xor
lods
lock
mov
scas
jl
mov
cld
aaa
xchg
push
icebp
mov
mov
or
stos
adc
addr16
jo
push
sbb
jo
popa
pop
sub
ret
icebp
sub
xor
jo
fdivs
xor
ds
jl
push
add
or
dec
loopne
out
std
pusha
leave
dec
dec
stos
or
xchg
mov
mov
add
jo
je
cmp
push
mov
xorb
mov
in
push
fwait
push
xchg
mov
ret
lea
mov
xor
out
bound
test
stos
mov
push
filds
jg
fbstp
jge,pn
or
jno
jne
fiadds
dec
insl
add
sti
mov
gs
push
ret
stos
xchg
add
cli
add
mov
sbb
addl
les
push
xrstor
add
ret
adc
cmp
inc
pop
xlat
add
bound
sarl
ss
or
lret
or
add
add
stos
std
sbb
cmc
pop
push
mov
shll
inc
push
adc
stos
jp
lcall
jb
jbe
int3
shll
lcall
and
and
ss
addb
add
stos
dec
push
dec
sbb
jns
cmpsb
jns
jge
jne
cmpsb
jns
cmpsb
insl
popa
gs
popf
lcall
lea
jns
mov
jns
cmpsb
lods
mov
cmpsb
jns
rcl
leave
int
lds
cmpsb
jns
std
icebp
cmc
jmp
in
loope
sbb
rcr
rcll
add
xor
xor
dec
shll
and
xor
sahf
push
dec
sbb
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
rcl
leave
int
sahf
cmpsb
imul
cmpsb
imul
jb
adc
mov
xor
or
or
shll
sub
add
and
inc
and
mov
stos
cld
int3
mov
sbb
mov
stos
shl
push
mov
push
xor
sbb
mov
dec
lret
xorb
sahf
or
test
mov
iret
fwait
out
mov
imul
cmpsb
jns
fsubl
rcl
enter
xor
repz
dec
mov
loopne
in
loopne
repz
mov
add
sbb
rcrl
dec
vpaddw
cmc
add
mov
or
and
loope
dec
int
xor
sbb
add
fisubl
sub
or
bound
push
fs
arpl
pusha
cmpsl
cmpsl
imul
cmpsl
imul
cmp
mov
adc
mov
add
mov
loopne
pushf
mov
insb
sbb
cmpsb
add
dec
rcr
adc
adc
sbb
fcoml
cmpsl
loope
cmpsl
loopne
mov
stos
movsl
mov
cmpsb
sbb
sub
out
mov
or
mov
mov
mov
mov
or
mov
clc
xor
repz
pusha
lds
pusha
dec
aas
rcll
into
push
orb
push
bnd
insb
pop
fldt
push
loop
out
add
push
insl
adc
push
push
imul
sahf
jbe
cmpsl
xor
pop
dec
js
imul
push
xchg
dec
repnz
push
roll
mov
push
ja
and
push
and
add
popa
jp
ss
stos
aam
mov
dec
test
jb
sub
daa
push
sbb
movsb
aaa
in
call
add
mov
mov
sarb
add
negb
add
pop
add
add
enter
xchg
shlb
ds
mov
addb
out
incl
or
inc
push
ja
add
mov
push
fs
fildll
mov
or
mov
lcall
cmc
loop
or
add
jae
inc
push
or
jo
ds
js
call
nop
pop
push
adc
pop
and
les
sbb
loop
ja
cmp
jb
or
aad
mov
mov
add
out
cvtps2pi
xor
enter
xor
adc
mov
incl
cli
fwait
loop
add
popa
add
in
add
fildl
out
mov
movsb
add
addr16
cs
push
jg
adc
mov
incl
or
adc
mov
clc
ljmp
addr16
pusha
and
cmp
roll
out
add
add
push
shrb
or
push
or
and
movq
add
or
scas
popa
add
xchg
mov
mov
push
lock
orb
lret
sub
push
std
cmp
fimull
fimull
add
je
sarb
add
dec
ss
add
testl
and
test
push
pop
adcl
sbb
adc
mov
xchg
hlt
sbb
or
inc
xchg
add
test
jg
loope
nop
and
adcl
cld
stos
in
mov
xchg
ret
push
loope
cmp
and
add
jno
mov
dec
call
lock
mov
leave
arpl
and
add
mov
or
les
jle
add
adc
fldl
cld
adc
test
pushf
sbb
out
add
repz
xor
pop
xchg
in
ret
mov
in
out
icebp
adc
fs
pop
mov
adc
aad
popa
fnsave
sub
ja
loope
push
jb
rorb
fst
add
add
fstpl
adc
out
cltd
das
clc
mov
js
or
and
pop
sbb
aaa
sub
inc
jmp
pop
test
push
das
cli
pop
and
test
enter
add
in
add
cmpsl
add
test
sub
jmp
push
inc
sbb
pusha
push
out
add
add
sub
gs
add
pusha
xchg
imulb
ljmp
div
add
add
jo
adc
add
leave
push
lcall
mov
jo
shlb
inc
push
push
loope
add
bswap
hlt
add
cs
mov
aam
push
sub
add
xchg
jmp
jmp
loope
imul
sbb
data16
push
or
lcall
push
dec
in
sub
imulb
mov
add
xor
pop
mov
aad
ss
or
jo
inc
jno
push
add
adc
outsl
pop
flds
pop
mov
add
adc
je
xor
and
rsm
and
push
lcall
add
fisubrl
mov
and
int
add
movups
push
xchg
pop
std
and
and
jg
sub
sbb
push
leave
mov
push
mov
pusha
mov
xor
or
inc
mov
sub
sbb
and
or
mov
mov
or
imul
xchg
mov
adc
aaa
mov
outsb
pop
inc
mov
rcll
rorb
pop
and
inc
add
outsl
clc
or
pushf
shll
fs
xchg
cli
adc
dec
dec
lods
add
clc
icebp
add
xchg
mov
mov
add
or
or
neg
lods
add
push
mov
sha1rnds4
lock
and
lds
enter
add
addl
add
push
push
mov
jo
dec
pop
push
push
in
cmpsb
pop
std
outsl
or
lods
punpckhbw
lock
push
xchg
add
cmp
in
push
mov
or
inc
push
fbld
add
jecxz
out
sar
jbe
mov
and
push
ljmp
ret
es
jmp
add
push
loopne
jmp
and
dec
test
sbb
shlb
adc
les
fistpll
movaps
es
inc
subps
outsl
fisttpl
push
pushf
in
xorb
add
push
add
adc
ljmp
add
fwait
xchg
push
add
call
imul
das
sub
add
adcl
jbe
push
mov
adc
add
test
xchg
adcb
push
or
aaa
add
mov
push
fwait
jle
mov
and
sbb
push
cs
scas
jmp
sti
dec
xchg
in
fisttpl
loope
call
mov
decb
pop
push
add
jnp
push
inc
dec
inc
sbb
ja
flds
lods
fstp
inc
xchg
rcr
fstpt
adc
fisttpl
int
dec
xchg
rcr
xchg
lds
dec
cmpsb
stc
pop
aad
stc
dec
std
add
push
fisttpl
adc
mov
sbb
nop
mov
xchg
subb
pop
hlt
incl
inc
aad
es
mov
out
xchg
rolb
scas
mov
xchg
clc
or
inc
cmpsl
out
pop
aad
xchg
cmpsb
xorb
push
add
or
jg
inc
test
push
or
adc
xchg
add
sbb
add
fiaddl
in
mov
xchg
xorl
es
call
mov
xchg
in
dec
xchg
movsl
jp
add
push
xchg
jno
jns
xchg
shrb
scas
xorl
jb
sbbb
loopne
or
push
rcrl
push
decb
es
mov
es
push
shrb
and
inc
andl
lds
inc
sbb
sub
sahf
ds
lea
xchg
xor
jmp
adc
xchg
out
or
in
mov
sar
cmpsb
packuswb
jecxz
shr
and
ljmp
jne
pop
cld
test
mov
loopne
pushf
pop
inc
add
inc
jg
mov
mov
fisttps
mov
ret
punpcklbw
lds
call
ja
sar
adc
daa
adc
cmp
add
in
and
mov
or
loop
sbb
and
dec
daa
jmp
daa
pusha
subb
mov
jae
add
daa
outsb
mov
fwait
aas
or
and
cltd
rorb
mov
or
subl
and
aad
or
ret
stos
fcmovnu
or
lds
out
sbb
aas
fs
sbbl
and
fadds
push
or
testl
pop
xor
add
cs
inc
add
adc
dec
sub
pop
inc
add
nop
fcmovnu
add
pushf
pushf
or
add
inc
jnp
fisubrs
mov
mov
cmp
popf
adcb
cmp
fists
or
lahf
push
iret
pusha
add
adc
in
fisttpl
jae
push
arpl
out
pop
or
icebp
or
pop
dec
jecxz
adc
test
push
push
das
out
dec
jnp
add
sbb
outsl
repnz
stc
push
faddl
ja
shll
pushf
fwait
adc
lret
sub
int
imul
mov
mov
mov
aad
push
add
ret
jg
pusha
adc
xchg
pusha
and
mov
shl
adc
push
pop
sub
jmp
test
ss
das
lods
adc
push
lods
sbb
or
out
adc
loopne
push
mov
in
mov
or
pop
in
fbld
jo,pt
repz
jo
adc
lahf
add
pop
jmp
test
loopne
push
add
or
pop
mov
fsubrl
inc
je
dec
int3
daa
inc
add
add
cs
xor
cs
sti
fidivl
and
pop
fsub
sarb
dec
fnstenv
push
fs
mov
mov
loope
adc
addb
ljmp
mov
inc
or
mov
or
subb
jp
sub
test
outsl
lock
shll
loope
lods
and
or
adc
sub
push
sahf
sahf
push
es
rclb
lods
movsl
loope
sbb
test
sbb
stos
push
rsqrtps
iret
add
push
adcb
popa
xor
jo
pop
sub
pop
imul
dec
dec
pop
lea
loope
decl
cmpsl
adc
inc
sbb
sub
jno
fwait
adc
mov
jno
xor
int
stc
jmp
incl
daa
es
and
mov
mov
sbb
inc
test
addr16
das
clc
sarb
push
out
es
cmp
add
mov
sbb
pop
xlat
cmp
sub
and
mov
ret
mov
xchg
rcrl
lods
lods
mov
inc
sti
dec
adc
stos
add
xor
mov
cmp
insl
cs
lret
je
jp
sub
add
pavgb
inc
add
cmc
pop
fbstp
popf
das
xchg
jno
icebp
stc
outsl
cltd
loope
pop
push
outsb
jne
mov
loopne
cmc
xor
xor
dec
mov
pop
mov
inc
movsb
aas
mov
loop
jo
push
push
push
js
jne
fisttpl
mov
test
pop
ffree
ret
fistl
mov
sub
fisubl
lock
mull
sti
jge
pop
ja
fwait
mov
sbb
sbb
jl
clc
addb
fistl
loope
rol
fistpl
pop
sarl
sbb
loopne
lahf
mov
addb
sub
add
pop
add
xchg
imul
stos
fldl
ret
imul
inc
push
sub
rcr
or
mul
rol
imul
loopne
mov
sub
fimull
shlb
sub
frstor
addr16
popa
addr16
cli
mov
in
push
in
test
loopw
push
test
or
pop
mov
sbb
xor
addb
js
mov
mov
push
jl
add
xor
or
cli
xchg
mov
mov
orb
xchg
ljmp
cmp
xchg
xchg
xchg
orb
jle
adc
jecxz
inc
adcb
xchg
xchg
mov
mov
jle
sbb
mov
mov
mov
incl
xchg
and
mov
and
pop
rolb
jo
stos
xchg
jmp
test
in
mov
sahf
out
mov
popf
xchg
jo
scas
mov
mov
mov
int3
xchg
add
inc
xorb
test
pop
test
stos
add
fisubrs
scas
inc
xchg
cmpsb
mov
mov
mov
add
mov
or
test
in
mov
shlb
orb
loopne
fbld
bound
add
add
add
add
mov
xor
pop
mov
popl
jle
dec
fcoms
sbb
add
mov
xchg
or
movsb
mov
jg
adc
mov
mov
cmp
or
adc
push
scas
mov
cmp
aas
xchg
loopne
movsl
sahf
add
push
adc
xchg
adc
push
cmp
inc
mov
pop
fimull
mov
mov
adc
sbb
ljmp
xor
and
test
add
add
pop
or
add
dec
add
mov
je
lock
incl
je
loop
invd
pop
nop
pop
int3
and
inc
fs
cmp
inc
sbbl
lret
xor
mov
xor
cltd
add
shll
xlat
pusha
mov
into
xchg
xchg
fdivs
fwait
mov
xchg
xchg
or
and
adc
clc
jg
adc
push
test
pusha
je
cmpsb
xor
mov
mov
out
push
movsb
mov
repnz
xor
add
sub
xor
and
push
lock
mov
add
mov
adc
mov
pop
mov
add
add
jecxz
ds
xchg
cli
add
and
add
jl
push
aad
add
jg
shrb
add
into
pop
jg
es
mov
test
jmp
mov
mov
ljmp
ja
popa
orl
addb
loopne
andb
sbbl
xchg
xchg
sahf
or
sbb
ret
loopne
nop
orl
loope
icebp
dec
xchg
lods
mov
aam
andl
lock
mov
gs
mov
negb
or
mov
mov
fistpll
or
test
cmp
pop
test
add
sbbb
adcl
sub
xchg
mov
add
inc
jge
mov
inc
adcb
movb
testb
xor
xchg
mov
loop
les
mov
push
inc
outsb
sub
leave
popa
add
cmp
lds
mov
shrl
lds
sbbl
xchg
or
adc
lds
adc
inc
repnz
lret
hlt
ss
ret
inc
test
scas
mov
adc
jbe
test
cwtl
cmp
push
int
inc
xor
mov
add
movsl
and
inc
xor
ret
inc
inc
je
add
mov
lods
addb
scas
inc
inc
or
ljmp
sbb
inc
lods
inc
or
mov
stos
outsb
pop
nop
subb
scas
xchg
movsl
mov
add
mov
scas
or
push
leave
or
mov
mov
aaa
inc
push
je
test
cld
and
inc
add
mov
shr
adc
adc
ds
stos
xchg
mov
shr
sub
jecxz
jbe
inc
push
xlat
add
sahf
mov
cs
fsubs
or
insl
xchg
nop
loop
xchg
add
cmp
mov
xchg
cs
jle
mov
mov
sub
cmc
call
add
inc
ja
popa
and
mov
ja
es
pusha
idivb
mov
cmp
data16
fs
or
stos
loopne
mov
and
mov
xchg
mov
mov
fs
mov
out
jp
ret
outsb
and
outsl
push
sub
dec
and
push
dec
in
and
mov
and
test
add
add
push
xorb
test
mov
and
and
sbb
add
fsubs
cmp
xorb
mov
mov
dec
xchg
xor
aas
sbb
and
bound
pop
add
fdivp
and
pop
xchg
dec
popa
or
jg
push
ss
aaa
addl
add
cmp
inc
in
and
pop
mov
sub
shlb
loop
and
dec
mov
loope
push
mov
ljmp
pushf
adc
loope
fisubs
push
orb
les
insb
or
adc
insb
jp
mov
es
mov
addl
lcall
adcb
popa
push
jecxz
stos
inc
cmpsb
imul
push
dec
clc
cltd
cmpsl
aaa
arpl
hlt
add
push
dec
cli
ffreep
xchg
test
and
inc
add
mov
and
out
inc
mov
mov
mov
lret
sbb
mov
scas
into
add
sbb
adc
xor
in
movsb
ret
mov
loope
adc
push
lods
clc
adc
fbld
adc
mov
and
xchg
add
cld
pop
loopne
xchg
sahf
call
pusha
mov
cmp
mov
jl
or
push
add
out
arpl
outsl
cmpsb
sub
nop
xchg
inc
daa
adc
jg
pop
pop
xchg
and
inc
push
cli
pushf
test
sbb
mov
adc
imul
xchg
movsl
mov
pusha
cmp
mov
mov
xor
aam
jmp
cmpsb
rolb
inc
sub
jno
mov
ljmp
aam
loope
call
out
mull
ret
add
call
add
dec
dec
mov
and
adc
cmp
cmpsb
daa
rorl
adc
loopne
fadds
xchg
adc
mov
mov
pop
or
movsb
mov
addl
insl
adc
xor
mov
xchg
imul
sub
push
push
push
sbb
mov
cltd
push
mov
pushl
mov
jbe
lock
jmp
push
rclb
jnp
bound
push
sbb
in
mov
ja
push
les
in
mov
or
jb
arpl
xchg
fcompl
lret
mov
test
xor
testb
pop
andb
add
rclb
mov
push
adcl
add
in
jb
jmp
rolb
enter
cli
xorl
xchg
adc
rolb
inc
add
jne
incb
sbb
push
push
outsl
cmpsb
xor
orb
or
adc
sahf
jne
push
add
mov
cmpsb
xchg
movsb
popa
sbb
pshufw
or
xchg
pusha
dec
and
stc
xchg
mov
hlt
add
add
add
add
mov
ljmp
jo
xor
lods
test
or
scas
mov
xchg
addb
scas
pusha
xor
roll
loope
stos
pop
mov
scas
sub
or
loope
mov
jecxz
mov
adc
add
in
nop
lcall
jl
mov
add
add
pop
loopne
mov
jl
je
xchg
add
and
xor
sbb
jg
adc
jecxz
or
ret
and
sub
adc
sbb
mov
and
sub
xchg
xchg
xchg
orl
add
or
push
cmp
sbb
lods
push
loop
inc
in
cmp
mov
in
test
or
or
repnz
clc
mov
test
sbb
adc
inc
sbb
pushf
popf
icebp
add
add
adc
push
jno
decl
or
scas
mov
inc
sub
add
mov
mov
or
xchg
add
adc
out
add
adc
add
in
ss
xchg
das
or
or
and
loope,pn
clc
incl
add
push
adc
or
mov
ret
loopne
loopne
xor
pop
cli
add
push
rcrl
jae
add
dec
hlt
mov
jg
and
and
jo
imul
loope
inc
addr16
mov
je
lret
in
push
or
rcrl
sar
mov
sub
push
push
mov
hlt
jg
mov
push
pop
arpl
rcrb
and
push
mov
jns
lea
and
add
xlat
mov
push
sub
mov
gs
aaa
std
repnz
pop
movsl
xchg
nop
mov
dec
jo
xchg
adc
movsb
inc
sahf
xor
sub
push
push
xchg
or
cltd
decb
bound
repz
fwait
xchg
hlt
xchg
jae
mov
aas
pop
loopne
add
stos
adc
lahf
mov
mov
std
mov
and
jo
scas
loopne
shr
mov
xor
jo
add
xor
push
sub
add
sbb
into
push
push
insb
pop
inc
add
push
sub
jo
mov
mov
fwait
mov
sahf
add
pop
or
push
addr16
or
hlt
adcb
mov
lock
addw
fistpll
add
loopne
out
arpl
pusha
xor
pop
mov
sub
xor
or
mov
stos
icebp
shlb
fdivl
adc
mov
lret
jo
inc
jb
or
sub
inc
xchg
lock
insb
test
push
adc
xchg
test
mov
mov
test
xchg
mov
addb
ljmp
and
das
or
shlb
adc
and
nop
pop
inc
push
pushl
mov
and
jne
add
or
sbb
lds
fidivrl
sahf
les
ret
call
add
mov
xchg
mov
insb
jl
add
add
mov
mov
dec
cwtl
addb
inc
xorb
xchg
xchg
lods
add
mov
cmp
scas
xor
mov
outsb
add
mov
mov
push
aam
mov
or
enter
dec
sub
scas
and
push
adc
push
and
push
test
stos
inc
into
outsl
insb
mov
xchg
add
addb
out
movsb
sub
test
pop
mov
mov
add
and
cmp
sbb
scas
jg
add
mov
xchg
add
or
sub
movb
rorl
mov
xchg
js
orl
pusha
push
cmpsb
loopne
sbbb
pop
test
les
adcb
push
movsl
rorl
cmpsb
mov
orb
xor
or
test
mov
les
mov
cmpb
rcrb
mov
mov
outsb
add
adc
scas
sbb
adc
rcr
das
fidivs
and
mov
cltd
add
ror
push
ret
and
lods
jp
mov
daa
scas
fisubs
add
add
orb
movsb
and
jae
or
mulb
clc
cmpsb
xchg
addb
out
push
je
mov
lock
shlb
enter
add
fimuls
incb
test
inc
test
stos
inc
or
fadds
or
jg
jle
inc
and
push
sahf
inc
and
add
rclb
rcrb
mov
mov
push
fwait
roll
pop
cld
je
mov
cli
mov
push
fadds
scas
movb
xor
popa
les
loop
add
inc
xor
pusha
pop
popa
pop
jo
pop
nop
add
fsubrl
sbb
pop
inc
xchg
lds
mov
in
mov
rclb
xchg
sub
xlat
les
test
inc
add
and
clc
xchg
mov
adc
push
outsl
je
mov
sbb
out
push
inc
dec
push
dec
inc
or
or
ss
mov
sub
into
adc
inc
mov
out
dec
mov
push
adc
sub
push
dec
loopne
pop
push
mov
mov
xor
lds
hlt
cld
orb
mov
aad
add
fisttps
addl
int3
dec
mov
xchg
sbb
ret
inc
add
xor
pop
enter
push
and
add
mov
add
subb
orl
or
pop
call
andb
aad
test
lcall
outsl
cmp
rorb
inc
jo
cmp
push
ret
push
mov
mov
ss
inc
sbb
cmc
loop
add
xor
xchg
movsb
lock
jo
mov
movsb
add
loop
mov
mov
add
ret
push
jecxz
push
loop
dec
add
mov
stos
jecxz
cmp
stos
inc
aaa
cmp
sub
add
xchg
scas
inc
or
shlb
sbb
test
xchg
push
xchg
mov
aaa
fadds
mov
mov
and
mov
push
add
xchg
or
jp
int3
dec
adcb
test
cs
jl
add
or
cmc
cmpsb
xchg
adc
inc
pop
and
and
xor
vmread
push
dec
data16
mov
adc
adc
xor
movsb
sbbb
mov
push
sub
mov
adc
push
mov
lcall
sbb
mov
or
test
add
es
add
mov
nop
clc
inc
dec
ja
jp,pn
movsb
out
xchg
cmpsl
add
out
mov
jb
or
andb
xor
or
loopne
jo
out
and
add
and
outsl
pushl
shrb
sbb
mov
xor
mov
add
pop
insb
les
xor
mov
les
sbb
hlt
sbb
jle
test
mov
mov
ja
jecxz
xor
fstpl
test
sub
clc
stos
rorb
and
sbb
cwtl
mov
dec
loopne
push
loope
add
pop
push
hlt
add
add
inc
inc
sti
mov
xchg
push
nop
sbb
scas
mov
cs
in
pop
js
je
xchg
hlt
dec
ljmp
mov
push
adc
jecxz
xchg
shlb
adcb
daa
xchg
dec
mov
xor
je
xor
rorb
add
aaa
sub
sub
inc
hlt
jg
cwtl
jecxz
adc
add
push
adc
mov
sub
test
sbb
jg
sub
lcall
add
mov
loop
push
jecxz
out
test
inc
add
add
push
outsb
in
inc
jo
decl
xor
ja
push
and
adc
sahf
add
mov
cmpsl
jnp
or
fidivrs
cmc
mov
jno
icebp
and
pop
pop
cld
mov
cs
imul
sub
sub
and
pop
fcomip
aaa
cs
xchg
int3
dec
dec
and
cmpsl
aaa
mov
add
decb
push
jmp
jb
jmp
inc
cmpsl
push
pop
inc
mov
push
pop
fistl
xor
sbb
cmpsl
mov
pop
imul
pushl
je
mov
pop
bound
mov
xchg
pop
add
cmp
dec
std
cmpb
mov
inc
ficoml
enter
pop
jbe
mov
pop
dec
add
add
and
inc
ret
adc
lods
popf
jb
sub
pop
cmpb
dec
inc
push
mov
xchg
push
aad
jmp
xchg
add
inc
je
add
rcrb
xchg
nop
mov
insb
jns
jne
sbb
mov
imul
sbb
insb
mov
outsb
push
add
dec
jb
adc
pop
add
mov
cmp
stos
mov
insl
in
xchg
test
xchg
rcll
add
negb
xor
xchg
xor
lock
fdivrs
add
incl
cmc
fs
and
lret
cmp
mov
push
fdivs
test
rolb
mov
dec
jecxz
inc
or
inc
push
ss
loop
cmpb
aam
pop
movsl
popf
and
lock
cld
xor
xor
fdivs
sbb
sub
dec
add
enter
adc
mov
jb
fdivs
mov
xchg
cli
pop
lock
jge
fdivrs
sbbb
mov
jae
ret
add
ljmp
das
jo
pop
insb
popf
fadds
add
mov
cmc
pop
mov
push
pop
jne
repnz
mov
push
fadds
push
rorb
adc
pop
sbbl
cmp
sub
add
data16
popf
push
cld
fbstp
dec
fcmovnb
outsb
fbld
mov
fcoml
cld
dec
mov
mov
add
mov
dec
push
push
push
arpl
xchg
sarb
fst
add
add
xchg
sti
xor
cmp
mov
daa
mov
inc
gs
inc
push
aad
cwtl
testb
mov
lret
ret
pop
mov
add
mov
mov
push
push
fwait
jo
and
jns
outsl
mov
push
fistpl
fs
jg
ja
push
fs
lcall
xor
mov
in
icebp
adc
ret
decl
arpl
and
outsl
in
mov
sti
add
push
adc
sub
int
pusha
push
jmp
xchg
ret
fcmovnu
mov
jle
sar
dec
daa
sbb
test
mov
imul
scas
push
imul
xor
jnp
add
fdivrl
imull
jo
sub
mov
insb
sbb
fnstenv
jno
xor
imul
mov
dec
fs
add
bound
incl
push
xor
or
mov
or
cmp
or
xchg
sub
frstor
jmp
or
out
cmpsl
or
jg
or
scas
and
test
mov
movzbl
jne
mov
arpl
xor
add
fwait
add
push
add
add
in
cmpsb
mov
sub
push
testl
pop
imul
dec
das
fbstp
cmpsb
pop
push
sbb
add
push
out
cmpsb
xor
jecxz
cmpl
addb
ja
add
insl
lcall
add
xchg
cmp
mov
test
in
mov
shl
add
sti
ffreep
adc
cld
int
cld
fbld
mov
fists
imul
push
int
jnp
inc
fisttps
push
pop
fbld
fildll
es
pminub
fiaddl
fldcw
divb
ret
adc
fnstcw
push
push
fwait
arpl
imul
fnstcw
in
es
push
fstps
and
sub
xor
cmp
fsts
jle
clc
int
sbb
fsubr
fdiv
fdivr
ret
rcr
int
pop
aam
fcomp
stos
fdivs
fmuls
out
cmpsb
or
mov
inc
fmuls
push
fsub
outsl
push
fsubs
fsubrs
fdivs
fcomp
aam
fcoms
fcomps
add
dec
mov
dec
add
decl
xlat
jmp
repz
mov
xlat
repz
jg
ret
xlat
stos
xlat
mov
mov
xchg
xlat
fwait
jg
aaa
jg
xlat
imul
xlat
jnp
xlat
dec
xlat
push
xlat
pop
and
sub
xor
cmp
jle
aaa
add
or
adc
sbb
jmp
repz
mov
ret
lret
int
cld
int
mov
adc
xchg
cld
int
cld
arpl
imul
inc
dec
push
and
sub
xor
fdivr
int
add
or
adc
jecxz
jmp
repz
ret
stc
xchg
aad
aad
aad
aad
aad
stc
fwait
mov
aad
aad
arpl
imul
aad
inc
aad
aad
fwait
mov
and
sub
xor
aad
aad
aad
aad
jecxz
fwait
mov
repz
ret
aam
aam
aam
mov
aam
cltd
dec
mov
adc
ss
add
aaa
jg
sahf
aam
aam
aam
aam
aam
aam
add
or
adc
push
xor
jecxz
jmp
repz
add
sarl
sub
xchg
rorl
rorl
roll
dec
rcll
shll
shl
push
call
out
lahf
dec
mov
mov
ret
ror
rcl
shrb
outsl
shlb
rcl
adc
ret
lock
mov
fwait
mov
shlb
rorb
aaa
jg
or
adc
shl
shr
shl
rcl
ret
ror
rcl
rcll
ss
mov
and
pusha
xor
push
adc
loopne
pop
push
pusha
cmp
inc
sub
sub
shlb
add
xor
xor
loopne
aam
and
mov
mov
cmpsb
lock
loopne
aaa
xchg
fsubl
push
je
js
ss
ret
add
jg
fists
and
sub
xchg
scas
fidivrl
inc
flds
mov
dec
loope
repnz
inc
fdiv
pop
jecxz
and
inc
popa
inc
xchg
cmpsl
pusha
inc
in
clc
xlat
cwtl
mov
xlat
xlat
lcall
xlat
and
add
fwait
ret
or
and
xchg
test
cld
aam
aam
jns
sub
fidivrs
fwait
ret
sbb
in
shrb
loop
pushl
test
int
and
add
inc
rorb
mov
and
shrb
and
or
push
rcrb
loop
add
add
mov
aaa
jg
sub
aaa
shll
adc
rorl
or
adc
sbb
rcl
inc
push
cwtl
fsts
add
add
push
fistps
adc
fidivrs
ficoms
jg
mov
adc
jb
add
sbb
add
mov
xchg
mov
fmull
push
faddl
fcoml
fdivr
xor
fcmovne
fcmovnu
fucomi
insb
or
push
out
add
push
icebp
and
xlat
popf
repz
xchg
es
ficompl
and
fimull
addr16
js
and
jns
sbb
in
hlt
adc
test
testl
stc
flds
xchg
decl
xor
les
cs
aam
aam
and
add
repnz
cli
add
loopne
add
lcall
or
ss
push
dec
filds
test
jl
add
imul
je
fidivs
fisubrs
js
incb
add
dec
loope
add
inc
fucom
fnstsw
xchg
fsub
fildl
sarb
fistpl
aaa
mov
or
cs
push
or
sbb
dec
or
decl
sub
fstps
mov
sub
xor
or
adc
in
fcoms
insl
or
add
add
xlat
pop
cld
mov
mov
lahf
push
mov
cmp
rcl
imul
sbb
sbb
cmp
rolb
push
or
mov
sub
xor
fildl
outsb
in
jg
fistpl
idiv
fcmove
fcmovbe
fcmovbe
fiaddl
mov
ljmp
pushf
xlat
and
xlat
in
sbbb
and
ret
call
cmpsb
shlb
mov
popf
rclb
shr
loopne
add
filds
fistps
mov
add
fidivs
jnp
dec
fiadds
fadd
push
incl
fcom
fadds
mov
adc
mov
or
xlat
inc
xlat
xlat
aas
adc
xlat
push
push
scas
add
pusha
pop
sbb
incl
lret
aam
adc
add
or
out
sar
add
jge
shll
rcrl
shr
shlb
adc
shlb
dec
cld
and
shlb
fistps
incl
cmp
jmp
fdivrp
faddp
fmulp
add
xor
call
fnstsw
add
push
fnstsw
paddusb
es
call
add
pop
xchg
fldt
xor
pushf
fsincos
idiv
ljmp
push
xor
stos
shlb
jbe
push
out
or
xlat
lret
adc
jle
and
cmp
or
mov
sti
aam
aam
aam
adc
or
or
aaa
dec
jno
pop
rorb
rcrb
shll
std
rcr
shrl
sbb
shr
icebp
shl
aaa
jg
stc
rol
ror
adc
shlb
mov
xchg
shlb
ja
inc
rorb
dec
rclb
or
and
xor
fcomi
pushl
rcr
fcmovnu
fldt
mov
xchg
fldt
or
ss
fisubrl
push
pop
fsts
xor
add
mov
xlat
xchg
fcomip
aaa
mov
aad
jbe
aad
aad
aam
lods
mov
aam
rorb
rclb
and
subb
int3
ret
stc
ror
mov
xchg
adc
push
rcrl
cmp
mov
and
call
cwtl
cltd
shlb
inc
rcrb
inc
shrb
int3
add
loop
fcoms
fwait
mov
test
fisttpll
ret
faddl
add
xchg
inc
adc
push
scas
fsubrs
sbb
cld
push
jmp
lock
xlat
movsl
dec
xlat
jbe
ljmp
sub
inc
aad
nop
adc
sarl
cmp
mov
rcrb
rolb
xorb
fldl
dec
cld
fsubl
cmpsl
call
fnstenv
add
xlat
dec
fstps
sbb
shlb
xor
jg
fwait
or
xlat
fwait
aad
fs
rcl
xor
fldl
lret
fmull
pop
xor
pushf
fistpl
xor
hlt
xchg
pop
aas
mov
addb
fcoms
cmp
cs
jo
lods
mov
dec
lcall
adc
lock
add
cwtl
rcrb
in
adc
rolb
jo
jl
js
inc
rorb
inc
nop
dec
push
adc
pop
push
pop
or
jp
shlb
shrb
adc
shlb
mov
jo
and
rorb
enter
or
adc
adc
dec
sar
lcall
shl
shl
rorl
dec
lock
jo
and
rol
ror
nop
push
aam
stc
fildl
shll
test
mov
fisttpl
mov
mov
mov
xchg
adc
dec
push
sbb
mov
shr
push
call
cld
adc
rol
rol
sarb
enter
add
adc
fwait
mov
shlb
rolb
sar
fstpt
rcrb
insb
shrb
je
jo
jl
js
cmp
mov
push
mov
push
fucomp
mov
jge
mov
fcoms
or
out
pop
jo
jecxz
jle
icebp
aaa
jg
xlat
or
fwait
fs
adc
ds
push
mov
aad
and
or
nop
aam
ljmp
dec
aam
adc
add
aam
aam
shrl
cmpb
shlb
push
xor
adc
mov
cwtl
and
scas
rolb
dec
rcrb
or
icebp
mov
mov
xchg
insb
sbb
mov
xor
lcall
test
fsubrl
dec
fcompl
sbbb
repz
mov
fldt
fistl
hlt
adc
cld
fiaddl
into
mov
pusha
fisubrl
xor
push
shl
fxch
fxch
xor
nop
insl
fadds
add
mov
mov
cmp
out
xlat
xlat
fadds
cmp
xlat
loope
push
rcl
mov
sub
pushl
add
ja
test
rcrl
inc
add
jle
or
call
or
sbb
sbb
shr
shll
adc
and
addb
rcrb
cmp
fistps
mov
outsl
fildll
bound
adc
outsl
out
fisubrs
fimuls
add
or
sbb
loope
add
adc
fisttpll
rcr
xchg
imul
aad
sub
jg
test
fisubrl
cld
pop
std
fiaddl
ljmp
flds
inc
sbb
adc
shlb
in
enter
fists
mov
xlat
pop
add
jp
js
and
int3
add
sbb
aad
inc
mov
cmc
scas
ljmp
aad
aam
lock
adc
inc
aam
mov
adc
sahf
shrl
sarl
inc
shrl
fildl
xchg
sarb
shr
jo
push
jg
ja
cli
push
test
xchg
fidivs
pop
fsubrp
frstor
incl
sbb
fsubl
test
fsubrl
fdivrl
fcoml
and
in
jg
fucomi
fcmovne
push
jae
inc
fstpt
xor
adc
dec
fildl
stos
mov
fildl
lock
or
add
ss
push
fiaddl
fnstcw
fdivrs
add
mov
loopne
cld
decl
enter
test
mov
jg
xor
enter
add
add
push
adc
sbb
loope
jmp
mov
aad
xchg
dec
aad
aad
aad
inc
aad
aad
aad
xor
sbb
aam
aam
aam
adc
rol
push
push
pop
std
adc
popf
mov
dec
shr
stos
test
outsb
sbb
xchg
aad
rcrl
mov
xchg
sub
shr
fcomip
test
mov
hlt
fists
add
fucom
fcompl
mov
sarb
adcb
data16
jo
mov
lahf
add
push
mov
lret
push
shl
jecxz
push
call
mov
rclb
xchg
mov
push
nop
xchg
pop
add
ficoms
and
xor
jecxz
fbstp
push
sahf
les
adc
test
test
push
inc
sti
inc
nop
sbb
jo
sbb
jbe
mov
fcomip
pop
icebp
push
xchg
xlat
add
aad
add
mov
jg
aam
sahf
loop
int
mov
jno
das
sar
lock
cmp
sbb
pop
mov
scas
add
leave
push
dec
mov
addr16
fidivl
pusha
cld
ficompl
out
adc
out
sbb
add
cwtl
sahf
jl
sub
or
mov
fdiv
cmpsb
jge
pop
sub
cmp
add
jmp
ror
aad
aad
aad
nop
jle
repnz
dec
aad
aad
aad
xchg
mov
aam
jo
mov
out
rcl
xor
outsb
push
fsubp
jg
fwait
roll
insb
adc
push
fldl
adc
mov
fsubrl
or
dec
xor
and
shlb
fldt
and
rdmsr
pop
orb
mov
out
inc
or
call
xchg
ficoml
rorb
fiaddl
sar
jg
pop
mov
fnop
flds
fnstcw
dec
xor
in
jo
fcmovu
mov
dec
fsubs
fadds
movsl
xchg
ret
ds
lock
cli
icebp
xlat
rcl
fisubrl
xchg
mov
fistl
fisubrs
jno
out
ret
jo
adcb
add
clc
jmp
aad
scas
pushf
aad
cli
aam
aam
aam
xchg
cwtl
jg
lock
xor
rcl
push
and
add
jmp
test
call
shrb
pop
push
push
mov
out
rol
jo
adc
add
mov
push
jg
mov
add
shlb
shlb
filds
cmpsl
mov
add
fdivrp
fisubs
fisubrs
push
and
mov
adc
cmp
repz
lret
fstp
push
mov
lods
push
adc
fnsave
fstpl
loopne
cli
fsubrl
and
sub
outsb
dec
aas
orb
scas
mov
data16
pop
xor
and
push
mov
call
fisubl
lods
jae
jl
inc
adc
movsb
xchg
fisubrl
jecxz
repnz
mov
rcll
push
push
ljmp
adc
jp
push
inc
xor
push
jecxz
add
aaa
jne
mov
mov
jg
ficoms
gs
dec
pop
daa
das
dec
xor
lcall
add
fwait
pop
inc
and
aad
add
lds
iret
aad
aad
aad
aad
je
repz
mov
adc
inc
aad
pop
adc
aad
aad
aad
mov
aad
aad
aam
in
aam
aam
aam
adc
inc
aam
sbb
inc
add
insl
sbb
add
ror
lret
adc
rcll
cltd
shll
roll
mov
pop
test
pushf
lea
xchg
rcrb
xchg
pop
adc
shl
je
adc
out
out
outsb
adc
rol
je
adc
pop
adc
shll
adc
scas
clc
stos
stc
roll
roll
or
andb
rorb
cld
in
jae
inc
adc
sarb
shl
fucomip
cmp
leave
cs
adc
adc
sub
push
mov
aas
adc
fists
fmulp
cmpsb
aam
jbe
pusha
xchg
fidivrs
repnz
cmp
clc
out
clc
jp
xor
cld
cmp
fidivl
pop
repz
cld
xchg
or
adc
sbb
out
f2xm1
fxch
mov
aaa
jg
fnstenv
fld
xchg
fdivrs
data16
and
test
add
mov
test
sbb
cmp
fcoml
or
adc
xchg
mov
daa
pop
fimull
in
aad
lods
pop
movsl
imul
outsb
ret
pop
aad
mov
xchg
mov
aam
cli
add
aam
adc
outsb
dec
cs
shll
sbb
int3
mov
sub
sbb
inc
loopne
incl
cwtl
fsubl
fisttpl
cwtl
rolb
leave
fld1
shrb
sub
out
and
hlt
sub
bound
mov
jge
pop
adc
xlat
sub
xor
adc
push
loop
sbb
mov
je
jg
dec
enter
add
ljmp
mov
ficoms
dec
dec
cmc
or
pop
fldt
fcmove
into
lds
aaa
fists
repnz
pop
cld
xlat
scas
xlat
adc
mov
movsb
jle
pop
cld
in
add
jnp
and
sbb
dec
shll
push
mov
push
rcrb
pop
cs
adc
shlb
shlb
rclb
test
rolb
rolb
rorb
or
rcrb
loop
call
sub
shlb
js
sarb
and
sar
addb
clc
pushl
rcl
rcr
adc
shll
roll
mov
mov
js
xchg
add
mov
xchg
cmp
shll
cmp
out
shll
sarl
jp
inc
jp
rolb
scas
inc
repz
push
rclb
filds
in
mov
jle
or
dec
push
adc
imul
jb
and
js
inc
jnp
xor
fmul
fdivl
push
test
fistpll
or
fdiv
fcmovnb
fisttpl
rcr
faddl
mov
xchg
add
imul
fildl
dec
fistl
pop
fildl
adc
jmp
int
incb
lret
fcmovbe
fcmovu
adc
test
ficoml
fprem
fnstenv
outsb
xchg
inc
fsubrs
clc
out
adc
xchg
loopne
dec
mov
std
or
scas
xor
rcl
inc
loopne
or
adc
clc
ror
pusha
arpl
cmp
inc
rcll
shl
shlb
enter
daa
mov
or
and
scas
in
test
sub
das
rcrb
mov
fdivp
and
sbb
or
rcr
fmulp
fiadds
lock
mov
add
sub
adc
es
movsb
fnsave
jno
fstl
adc
pop
cld
lcall
fcmovnu
cmp
call
leave
nop
cmpsb
fisubl
fisubl
jno
push
fld
fsts
fldenv
fldln2
fsubs
fcoms
aaa
stos
jecxz
ds
pusha
sbb
xlat
pop
push
loope
ret
xchg
ret
stos
jg
aam
aam
imul
rcl
rcrb
ja
shr
lret
ret
subb
je
imul
fisubrs
js
fisubs
xchg
fsub
stc
loopne
test
ljmp
fisubrl
movsl
fldenv
cmp
subb
jnp
cltd
inc
scas
loope
fadds
loopne
jb
mov
aas
pop
aad
push
ljmp
push
dec
rcll
sarl
mov
adc
shrl
shll
rcrl
out
shr
shl
rol
add
mov
fcmovu
sarb
dec
hlt
mov
adc
test
clc
adc
enter
rclb
sbb
cmpsb
inc
fbstp
mov
adc
fcomp
pushf
inc
jecxz
lcall
inc
add
and
xor
cmc
fstp
inc
pusha
inc
or
fucomp
faddl
mov
fmull
cli
inc
cli
inc
stos
fcompl
dec
hlt
add
fcmovnb
std
lea
mov
fistl
fstpt
jnp
inc
mov
sub
fnsave
mov
or
inc
mov
pop
clc
into
fidivl
sub
test
fidivrl
fiaddl
adc
adc
jecxz
sti
aaa
fldcw
fstps
testb
incb
loop
repnz
cmp
pusha
sub
add
fcomip
or
lods
and
xorb
or
aam
loopne
and
mov
ljmp
popf
adc
add
mov
rorb
clc
mov
jae
inc
fildll
pusha
iret
pop
mov
pop
cld
stos
mov
sbb
sbb
faddl
push
test
enter
mov
fstps
fldcw
dec
fcomps
loope
mov
push
add
xlat
scas
aam
xlat
cmp
imulb
push
xchg
add
or
lods
aad
aad
aad
mov
stc
sub
repnz
aam
aam
push
aam
aam
lcall
shr
loopne
cmpsb
shll
adc
fists
sar
ds
ror
ja
sub
cs
add
shl
shll
roll
push
lods
not
pop
shll
adc
pop
push
push
mov
rcl
rolb
adc
fidivrs
sub
data16
xchg
fldl
dec
jbe
xchg
pop
mov
int
add
fiaddl
test
adc
out
fmuls
incl
mov
popa
push
and
pusha
test
aad
aad
aad
icebp
mov
aam
xor
ljmp
cmpsb
xchg
rcll
inc
xor
adc
insb
cwtl
or
shlb
dec
fcomip
and
add
fisttpll
pusha
jmp
lock
mov
ficompl
ret
fsubs
mov
call
cmpsl
loopne
pusha
fwait
int
insl
cmp
and
scas
adc
mov
loopne
xorb
xchg
add
call
mov
xlat
jae
je
xlat
inc
adc
dec
dec
push
lock
call
push
xlat
pop
xlat
es
push
push
sub
jbe
nop
pop
cmp
xor
sub
xlat
adc
pop
inc
daa
inc
movsb
and
loopne
mov
sbb
icebp
cld
ret
loop
cmpsl
in
rcl
ficoms
movsb
scas
stos
inc
xchg
sub
mov
xchg
xchg
popf
adc
jg
inc
sbbb
jp
inc
inc
xor
out
cli
sbb
sarl
enter
xor
cmp
pushl
sbb
jnp
out
aad
aad
xor
aad
jbe
mov
into
aad
add
aam
pop
fcmovbe
movsl
aad
and
aad
aad
aad
fcomip
mov
jo
mov
pushf
inc
adc
aad
aad
sarb
mov
aad
aad
aad
hlt
ss
or
aad
mov
push
adc
sarl
rolb
shrl
shl
pushl
rorb
rolb
sbb
loop
ffreep
or
fisttps
adc
add
movsl
lcall
into
outsl
mov
lods
fisubl
fnstcw
fyl2x
es
mov
xlat
iret
xlat
pusha
push
push
jg
pop
sahf
jo
push
xchg
inc
aad
aad
aam
adc
ret
mov
rcl
adc
loopne
rcrb
rcll
mov
mov
inc
test
push
mov
aaa
inc
fs
sub
ja
cli
xchg
movsb
mov
add
ja
aas
pop
aam
and
aam
aam
loopne
mov
or
rcl
shll
xchg
dec
rcrb
fiaddl
mov
shll
and
lcall
rcr
shlb
inc
jg
or
fidivrs
add
ret
adc
jg
fdivr
adc
sbb
lock
leave
fisubl
fiaddl
ficompl
std
call
std
scas
mov
out
lds
aad
jns
xorb
mov
mov
rclb
sarl
lock
in
cmp
fcomip
fbld
lea
je
or
cmp
out
out
mov
into
stos
jae
mov
sbb
lods
loop
incl
or
dec
adc
fbld
xchg
fbstp
inc
fbld
push
fistpll
fbstp
rclb
fmulp
jo
mov
and
adc
cmpsb
loop
in
fnstsw
fnsave
mov
add
fsubl
adc
xor
cmp
mov
nop
mov
and
fisttpl
nop
pop
mov
outsl
push
sub
fsubr
test
sbb
fiaddl
xor
mov
lock
push
shrb
cmp
xlat
nop
aaa
xor
sbb
decl
test
cwtl
aad
adc
ljmp
inc
mov
shl
fisttps
data16
xchg
jp
sub
and
lock
fiaddl
imulb
add
add
xchg
out
cmc
fdivr
fadds
clc
lock
orb
scas
fdivs
xchg
mov
xchg
fdivs
pop
pop
jae
dec
and
fcomps
and
sub
mov
push
inc
sub
rclb
pop
and
outsb
xor
push
enter
int3
jge
sti
adc
aam
inc
loopne
pop
addr16
cmpsl
inc
ss
mov
pusha
mov
lock
imul
or
push
aam
adc
aaa
aam
add
pop
jb
lcall
lcall
subl
push
xchg
dec
and
add
adc
addl
rorl
or
xchg
adc
jae
push
rcll
xor
shl
inc
repz
adc
sar
mov
xor
jp
rclb
call
add
xor
add
jecxz
shl
xor
mov
mov
addl
test
shll
jae
inc
inc
mov
sarl
negb
push
xor
rcll
rcll
rcrl
cmp
jmp
shr
or
shl
shl
sar
loop
rol
rol
shrb
lret
cld
in
outsl
and
rcl
rcr
rcr
adc
sarb
xchg
jg
and
rclb
clc
shlb
or
add
dec
in
sbb
jmp
aas
adc
push
mov
add
add
mov
incl
and
mov
loope
mov
sub
cmp
dec
push
ljmp
dec
scas
and
mov
cld
jbe
xchg
mov
xlat
imul
pushf
add
pop
test
jmp
loop
xor
mov
add
sub
xchg
das
iret
addr16
lods
mov
lock
int3
insb
arpl
push
scas
pop
xlat
pop
nop
xor
xchg
insl
push
and
insl
pushl
stos
inc
test
sbb
jae
mov
shrl
pop
add
mov
insb
cli
and
fcompl
adc
js
add
or
jmp
pop
iret
insl
rolb
sti
jno
sahf
out
test
push
mov
ss
dec
mov
adc
push
insb
rol
cwtl
popf
sar
sti
into
aaa
or
xor
stos
mov
inc
les
dec
loope
cmp
lock
icebp
cmc
ljmp
push
push
xchg
push
mov
call
cli
mov
mov
add
mov
mov
or
fcomps
add
sar
pop
dec
or
inc
pop
cltd
add
push
push
jo
mov
mov
inc
mov
jne
push
lods
clc
xchg
sar
js
jne
in
xor
pop
add
mov
xor
sbb
in
orb
sbbb
xlat
sbb
mov
xor
and
lahf
in
movsl
add
fwait
cmp
fcoms
sahf
aaa
cmpsb
int
jbe
scas
jg
cmpsb
adc
dec
out
enter
add
repz
mov
add
inc
scas
sub
or
sbb
lea
xor
sahf
add
in
mov
and
jb
push
nop
test
xlat
pop
pop
outsb
push
ljmp
mov
xor
dec
dec
inc
out
mov
add
insb
pushl
cld
dec
fsubs
loop
mov
inc
adc
jb
and
js
dec
inc
fnstenv
sti
sub
scas
out
std
pop
mov
gs
or
sti
iret
dec
xor
incl
adc
or
and
insl
lahf
adc
xchg
xchg
push
inc
iret
ljmp
xlat
add
jg
lods
ja
xlat
adc
xchg
movsb
add
inc
cld
dec
imul
roll
pushl
nop
hlt
sub
add
je
outsl
arpl
push
imul
pushl
popa
jo
jne
gs
je
arpl
push
push
jb
xor
std
jg
jb
insl
jo
adc
imul
insb
gs
bound
arpl
fidivl
inc
jo
push
pop
lods
push
sbb
jge
pop
sti
sbb
mov
pop
push
or
gs
cmp
insb
pop
fsubl
xchg
gs
popa
or
jb
pop
jnp
data16
pop
jae
cltd
loopne
jnp
push
imul
adc
fwait
pusha
inc
inc
outsl
outsb
fs
or
imul
push
outsb
sti
jb
inc
outsb
je
inc
jb
xor
xchg
cmp
or
push
dec
imul
fwait
mov
push
push
push
pop
and
push
push
cmp
sbb
outsl
dec
gs
outsl
jle
ja
xor
insl
push
push
jbe
xor
sub
imul
lock
push
out
scas
es
pop
inc
imul
inc
inc
push
push
data16
popa
outsb
sub
sub
jns
mov
loop
push
lods
jbe
inc
push
inc
je
mov
mov
mov
cmp
sahf
into
jo
sbb
fs
sub
and
sahf
push
outsb
ja
mov
adc
inc
xchg
out
dec
jne
inc
sub
adc
push
cli
arpl
jl
imul
imul
adc
push
and
dec
pop
lods
imul
popa
cmp
mov
pop
gs
xchg
pushf
loope
push
and
test
ret
lahf
jecxz
pop
adc
jecxz
mov
outsb
push
dec
sbb
mov
imul
fs
insl
cmp
push
outsl
push
imul
inc
cwtl
jb
push
popf
adc
in
jbe
xor
or
pop
and
adc
les
sbbl
repz
out
inc
xchg
jne
push
clc
sbb
sbb
jnp
inc
jae
mov
inc
mov
and
and
and
mov
test
mov
pop
mov
xor
mov
rcrb
das
cmp
dec
mov
add
mov
movsl
lea
or
data16
sbb
pusha
je
fbld
mov
andb
xchg
xlat
xchg
ret
cmp
xchg
outsb
pusha
sbbl
adc
inc
dec
inc
mov
cmp
fs
or
mov
add
mov
add
dec
inc
sahf
push
jmp
dec
inc
jg
cmp
push
cmp
jae
fwait
pusha
adc
adc
push
dec
fwait
mov
and
inc
insb
and
mov
xor
imul
or
sbb
jns
loop
pxor
outsb
insl
rol
inc
cmc
dec
daa
push
mov
mov
or
or
or
popa
pop
mov
pop
adc
inc
imul
and
dec
mov
rcrb
xchg
dec
xlat
je
xchg
out
xor
push
push
pop
outsl
inc
mov
inc
adc
insl
imul
jbe
sti
push
or
cmpb
aas
sbb
jo
jae
pusha
pcmpeqd
int
jo
scas
mov
inc
pop
dec
jns
adc
xor
hlt
sub
gs
xor
mov
push
cmp
adc
sbb
shll
bound
or
mov
shll
push
loope
repz
or
xchg
add
clc
push
jns
sbb
pop
inc
jo
lock
cltd
lods
cmp
test
or
aad
inc
mov
add
imul
sbb
lds
pusha
push
popa
fildl
inc
add
jle
mov
andb
andl
mov
sub
pop
mov
push
adc
jno
lahf
pop
pop
pop
and
ja
inc
adc
mov
test
and
or
fidivs
xchg
fists
pop
ret
and
lock
adc
pop
leave
pop
mov
add
push
dec
jo
mov
test
mov
neg
push
add
out
sbb
push
ss
mov
inc
inc
pop
and
psubq
fistpl
xor
jae
add
push
fistpl
lea
int3
jle
les
and
test
pop
add
loopne
jecxz
lock
loop
add
loopne
mov
jb
xor
jge
ret
stc
push
add
add
outsb
cmp
push
push
sub
cld
dec
shrb
and
mov
dec
xor
dec
jo
and
jb
jb
mov
loop
daa
pcmpeqb
dec
js
rcl
xor
das
fwait
cs
add
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
