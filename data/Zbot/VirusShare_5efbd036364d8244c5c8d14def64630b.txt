sbb
add
dec
mov
js
arpl
jp
inc
jne
cmp
icebp
adcl
jo
sub
push
daa
xor
loopne
lahf
inc
cmpsl
push
pop
negb
add
mov
rcl
adc
xchg
mov
jp
mov
sahf
add
jl
cmpb
aas
call
push
clc
cltd
jae
loope
ljmp
cmp
imulb
lods
xor
das
push
mov
sub
inc
dec
adc
ret
pop
scas
adc
mov
dec
pop
push
mov
pop
mov
xchg
repnz
pop
jge
repnz
or
pushf
in
push
fnsave
inc
imul
sbb
mov
fdiv
aas
jmp
repnz
cmp
hlt
add
lret
mov
mov
sar
enter
std
icebp
pop
lret
cmp
rclb
mov
inc
dec
sahf
test
rolb
fdivr
xlat
jnp
rorl
test
add
adc
cmp
imul
fcoms
mov
repz
loop,pn
jns
sahf
push
or
loope
add
pushf
inc
loope
xchg
cmpsl
insb
push
xchg
arpl
out
xchg
xchg
pop
sub
movsb
or
add
fists
shrb
xchg
pushf
mov
fmull
cmpsl
xchg
dec
test
sub
inc
movsl
xor
dec
ljmp
jne
jl
sti
cmp
insl
rorl
sub
cmc
pop
mov
xchg
sbb
lcall
pop
xchg
test
mov
rorb
add
xor
loopne
pop
popa
jo
hlt
add
cmpsb
mov
mov
mov
push
jmp
sub
mov
pop
sbb
pop
push
lea
cli
sbb
mov
jae
dec
lods
cmc
stos
fisubrl
or
push
imul
gs
jge
addr16
pop
fldenv
cmp
cmpsb
mov
nop
inc
enter
sbb
jmp
adc
clc
inc
movsl
pop
faddl
mov
sbb
inc
pop
jnp
addb
adc
jae
xchg
imul
jnp
mov
dec
shlb
mov
or
cmp
and
mov
add
mov
mov
xor
loope
sbb
in
xlat
cwtl
add
arpl
mov
xchg
jge,pt
loopne
std
into
xchg
outsb
sub
xchg
cmp
xchg
cmp
push
mov
mov
xchg
or
xor
push
popa
cmp
push
mov
pop
dec
ret
cmc
xlat
jmp
adc
mov
mov
sbb
xchg
inc
repnz
mov
je
nop
sbb
lea
lcall
stos
mov
pop
pop
adc
pop
or
ret
cmpsb
xor
mov
mov
jne
mov
jp
fdivr
mov
add
ja
jns
dec
add
sbb
xchg
ljmp
addl
ror
jo
stc
ss
in
push
mov
or
xchg
aad
stc
mov
mov
sub
xor
mov
test
test
cmp
xor
aas
sub
ret
gs
cmp
add
mov
xchg
push
stos
outsb
add
or
jg
scas
clc
cmp
lcall
xchg
pop
pop
sub
gs
mov
daa
mov
add
pop
data16
or
sub
ja
xchg
je
adc
js
in
sub
insl
imul
xchg
add
inc
testl
ret
scas
mov
sti
test
push
xchg
lret
pop
addr16
push
cmp
ret
jge
nop
es
jae
jge
shrl
pop
inc
movsb
or
outsb
or
icebp
jns
add
fldt
repz
shl
or
arpl
adc
nop
dec
test
mov
xchg
cmp
lret
dec
cmp
and
mov
shrb
rclb
idivl
arpl
jmp
in
or
scas
scas
adc
jne
mov
adc
pop
dec
lahf
ljmp
cwtl
repnz
sti
cmc
aam
xchg
lret
loopne
add
dec
mov
jg
jnp
mov
cld
sbb
sar
sahf
jnp
andb
push
daa
sub
add
or
and
lods
aas
jge
pop
in
fdivl
xor
cs
aam
test
addr16
loope
cmp
bound
push
subb
lea
std
push
or
dec
jmp
inc
pop
dec
add
dec
pop
pop
les
xor
cmpb
in
jg
stc
push
jp
add
cli
mov
adc
pop
lcall
pushf
sub
out
hlt
sub
xor
xlat
push
push
ret
sahf
and
outsb
sbb
fsubr
mov
call
out
icebp
lock
jl
ret
ret
enter
cs
adc
lods
xor
nop
popa
daa
imul
pop
and
sub
push
inc
imul
mov
cmovs
xchg
fsts
xchg
push
pop
or
repnz
adc
stc
aaa
pop
add
and
pusha
or
xorl
and
and
ljmp
sbb
xor
jb
jl
mov
js
in
dec
cmc
mov
cld
sbb
inc
push
insb
mov
jo
xchg
outsl
out
rorb
popa
pop
inc
push
in
andb
adc
rolb
les
and
cld
mov
mov
xchg
cmc
pusha
lcall
stos
daa
sbb
ljmp
adc
cmp
jp
pop
sbb
jne
cmp
or
stos
jg
cmpsb
sub
wrmsr
or
jp
sub
lahf
sahf
adc
dec
mov
lds
cmp
xchg
pop
js
cmp
aad
js
mov
inc
cwtl
pop
mov
inc
inc
popf
ficoml
popa
pop
adc
add
ss
push
pop
push
jle
test
mov
push
leave
lock
sub
dec
iret
pop
mov
xchg
inc
dec
sub
lods
std
repz
dec
sub
mov
sbb
lret
dec
jmp
in
cmp
dec
mov
jge
jle
adc
xor
cmpsb
cmp
imul
or
clc
sbb
jo
pop
popf
dec
cmp
nop
or
xor
xchg
loope
xchg
xlat
cltd
sub
mov
das
dec
xchg
daa
xchg
stc
sub
aad
roll
sbb
dec
insb
mov
mov
std
jmp
inc
lret
sub
mov
sub
adc
les
jl
pop
enter
mov
push
jmp
jle
pop
stos
xor
sbb
call
imul
xchg
pop
jns
or
cmp
and
and
mov
popf
inc
xchg
decb
jnp
std
nop
dec
call
cmp
sub
std
mov
sti
lret
or
adc
in
sbb
jno
mov
stos
jno
xlat
sbb
mov
fistpl
lret
rclb
stos
jecxz
xchg
pop
loopne
dec
jl
icebp
add
adc
push
add
push
jno
leave
divb
cmc
lret
inc
jecxz
jne
call
int
cmp
int
stos
scas
sub
out
inc
cmpsl
mov
out
push
std
mov
sub
cld
lods
fndisi(8087
ja
push
and
sub
mov
inc
jns
popa
xor
sub
js
icebp
jne
push
std
stos
pop
mul
xorb
xchg
lahf
jg
repnz
mov
xchg
sbb
out
loop
leave
xor
adc
adc
mov
repnz
aaa
jmp
add
or
loope
pop
xor
fcom
mov
pop
test
lods
incl
shrb
test
pop
repnz
cmc
enter
inc
lahf
out
cmp
sub
xchg
add
ja
cld
adcl
mov
std
fildll
jnp
fwait
add
cmp
xor
push
loope
movsb
fcompl
xchg
roll
lret
out
mov
cmp
je
jae
rcrb
mov
jno
insl
push
jne
jle
dec
and
aam
in
imul
insb
adc
adc
push
sahf
push
cmpsb
mov
push
pop
push
popa
push
shlb
lahf
push
xchg
fbld
mov
cld
add
push
test
insl
test
push
dec
in
sbbb
mov
jb
inc
xchg
push
std
push
mov
jecxz
dec
sub
addr16
add
stos
mov
jecxz
popa
nop
in
push
mov
pop
mov
das
arpl
and
add
lds
adc
mov
sbb
out
xor
leave
xchg
cmp
out
pop
lcall
mov
movsl
fnstsw
fisttps
xor
loope
scas
into
mov
jo
inc
aam
xchg
push
ret
enter
jno
out
out
rolb
push
movsl
std
sbb
stos
bound
push
aaa
or
mov
add
lret
insb
pop
jb
scas
adc
push
or
pop
fidivl
arpl
insb
xlat
rcl
and
add
imul
sub
divb
cmpsb
outsb
imul
add
js
mov
inc
mov
ret
pop
jns
pop
cs
popa
loopne
repz
repz
cmp
pop
push
pop
mov
iret
cs
and
push
lea
pop
in
cmpsl
mov
icebp
xor
cmp
mov
popf
and
lret
jb
pushf
cmpsb
push
sbb
fcmovbe
mov
mull
int3
push
jae
ret
frstor
fdivr
jae
lea
add
mov
adcb
out
adc
dec
call
in
adc
push
outsb
test
lea
je
jo
pop
int3
pop
push
sbbb
jns
push
xor
fs
xor
out
fdivs
test
mov
in
jne
jns
inc
icebp
push
rorl
in
scas
test
xor
jne
jbe
int
mov
arpl
loop
ja
jne
gs
cmp
xor
inc
dec
jno
lods
mov
mov
xor
outsb
ljmp
into
out
enter
sub
pop
mov
jge
and
stos
inc
movsl
test
leave
jne
push
not
lret
jmp
test
xor
jl
pop
stos
adc
add
pop
add
adc
stos
fistpl
and
pop
mov
aam
pop
cmc
cmp
sbb
and
cmc
xchg
fisttpl
les
in
clc
lret
sub
mov
test
dec
ret
lds
dec
sbb
fwait
sub
in
mov
int3
fsin
xchg
test
pop
push
test
push
mov
rclb
rcll
jbe
xchg
pop
insb
cmp
hlt
sub
shrl
pop
push
jp
mov
js
cmp
cmc
ljmp
xchg
sbb
or
es
pop
cmp
adc
lcall
cmp
dec
subb
pusha
aam
pop
ret
xchg
mov
inc
mov
sbb
stos
or
mov
adc
movsb
cmp
push
dec
ljmp
mov
out
ss
aas
aas
push
inc
mov
inc
arpl
push
mov
fistps
inc
jmp
jge
inc
jmp
xor
push
jnp
imul
out
out
arpl
stc
pop
jne
or
mov
outsl
mov
nop
add
sbb
push
scas
xchg
ja
inc
mov
cmp
mov
ret
xchg
xor
daa
push
add
shll
mov
lock
orb
lahf
inc
push
jg
nop
jmp
hlt
loop
mov
jl
push
sbb
ljmp
mov
mov
mov
divb
pop
cmc
push
lcall
scas
mov
mov
aas
mov
cmp
imul
push
aad
js
sub
outsb
fbld
mov
pushf
jnp
jge
jnp
xchg
dec
lock
hlt
sub
dec
movsb
mov
add
in
adc
inc
movsl
adc
sub
or
test
pop
and
fcompl
fbstp
outsl
cmp
and
push
loope
scas
fldcw
xchg
jge
movsb
cmp
xchg
add
and
mov
mov
fiadds
pop
fmull
dec
xchg
xor
out
inc
push
out
mov
jns
movsl
popf
aad
repnz
inc
cmp
sub
imul
daa
movsb
mov
in
pop
stos
test
mov
or
cmp
dec
push
sahf
cwtl
mov
xchg
mov
clc
mov
and
mov
lods
sub
cs
orps
movsb
fdivrs
mov
fisubrl
sbb
inc
add
enter
popa
jmp
xchg
jae
adc
mov
and
sub
shrb
cmp
call
pushf
push
mov
nop
push
pop
jge
add
inc
sub
or
xchg
pop
xor
fnstcw
cmp
negb
push
rclb
test
mov
idivl
pop
jne
dec
xchg
mov
add
cs
pop
test
xchg
mov
popf
jge
jae
pushf
stos
out
cmp
adc
sar
and
mov
mov
cmc
push
into
jmp
ss
mov
imul
sbb
sub
or
cmp
dec
and
adc
adc
sbb
aaa
push
dec
push
push
test
jb
pop
push
frstor
mov
adc
mov
ficoml
cmpb
jns
test
incb
je
fs
insl
dec
and
pop
daa
in
xor
xor
enter
pop
ljmp
getsec
pop
aaa
stos
dec
movsb
add
aad
cmp
pop
std
mov
fs
cmc
xchg
mov
adc
fidivrs
push
pop
cli
lods
inc
add
inc
push
xchg
jno
jmp
adc
les
test
arpl
lds
push
stos
paddusw
dec
out
fbstp
or
pop
out
mov
mov
push
mov
test
sub
xor
sub
dec
xchg
cld
cmp
adc
in
push
push
mov
lcall
adc
call
mov
pop
mov
int3
adc
pop
orb
xchg
push
mov
out
outsl
das
addr16
pop
jecxz
out
scas
pop
movsl
fwait
adc
add
pop
cld
stos
std
in
sub
out
dec
mov
hlt
jmp
mov
mov
ret
jb
push
pop
xchg
lods
stos
add
xchg
outsl
mov
nop
scas
fiadds
jl
aaa
push
lods
bound
pop
jo
loop
push
sbb
jl
movsl
xchg
shr
in
pop
shlb
mov
hlt
mov
in
sub
stos
mov
mov
sbb
popf
pop
imul
pop
insl
pop
ret
adc
sbb
inc
fdivl
mov
lock
adc
sub
cmp
pop
or
addr16
cmp
xor
or
pop
dec
mov
sub
mov
scas
sbb
test
pop
xor
add
movsb
orb
pop
pop
ret
into
mov
shrb
mov
xor
mov
push
jno
idivl
roll
mov
inc
out
pop
xor
ret
pop
ljmp
xchg
fwait
sub
adc
lahf
push
std
adc
insb
sahf
cli
sub
push
xor
dec
orl
rcrb
movsb
fildl
cli
jge
out
mov
call
inc
push
pop
in
arpl
sub
add
mov
fisubrl
push
dec
cld
stc
mov
stc
fldenv
dec
push
pop
fcomip
gs
pop
aad
mov
mov
xor
negb
stos
lret
mov
sub
xchg
mov
cmp
popf
inc
sub
cmpsb
test
jno
mov
dec
pop
loop
mov
jle
mov
push
dec
aaa
incb
rcll
sbb
fistl
sbb
clc
rclb
enter
sahf
cmp
out
sub
out
fs
sti
sub
xchg
ret
jns
test
cmpsl
out
int3
add
sbb
xchg
andl
xor
data16
aaa
mov
cld
popf
inc
bnd
arpl
or
or
inc
imul
insl
addr16
cmp
mov
push
repnz
lahf
repnz
sahf
sarb
call
loop
movsl
xchg
or
push
mov
mov
cli
mov
sahf
and
orl
inc
adc
jno
in
push
push
mov
clc
or
lock
les
xchg
mov
dec
jns
mov
push
mov
dec
or
mov
aaa
outsb
jno
cltd
ljmp
xor
lret
int
jle
dec
push
repz
or
xchg
inc
push
in
rcll
add
out
add
addr16
cmp
jne
push
jmp
and
sbb
or
mov
mov
sub
jp
cmp
cmpsb
dec
mov
ret
es
roll
movsb
xor
popa
adc
outsl
fildl
iret
hlt
pop
mov
and
sbb
jp
mov
and
movsb
or
cmp
sub
cli
mov
push
int3
shrb
pop
sub
xchg
mov
add
test
cmc
icebp
push
push
cmp
inc
repnz
cli
into
imul
xor
test
das
sub
in
xchg
mov
dec
sar
mov
fcmovu
dec
popa
cmp
push
jecxz
cmp
or
xor
xchg
push
ret
dec
out
out
and
push
js
mov
jmp
mov
xchg
dec
pop
push
and
jb,pt
mov
sbb
test
mov
stc
xlat
scas
push
or
pop
mov
je
mull
mov
mov
pusha
cmp
mov
and
int3
or
imul
call
pushf
xchg
mov
andl
fistpll
push
push
imul
ljmp
dec
sbb
dec
sbb
fcmovb
xchg
test
pop
pushaw
or
xlat
cmpl
lds
mov
add
adc
mov
adc
and
adc
sub
mov
mov
lods
aaa
pop
clc
int3
scas
jo
xchg
dec
popa
mov
loop
adc
js
xchg
jecxz
or
or
push
stos
insb
sbb
les
test
xchg
jne
scas
rorb
arpl
out
push
jb
mov
jg
fs
push
mov
scas
cmpsl
push
jp
stc
pop
mov
xor
jl
pop
push
cmp
jo
fdivr
notl
xchg
adc
shlb
dec
jns
or
insb
xlat
inc
dec
mov
repnz
ffree
ret
xchg
mov
movl
and
rolb
jp
xor
and
xchg
pop
inc
push
mov
inc
mov
add
xor
stos
and
gs
add
sbb
imul
dec
enter
daa
int
movsl
aaa
js
mov
cmp
out
pushf
outsb
fsincos
mov
enter
xchg
loop,pt
pop
or
stc
lret
mov
dec
mov
push
adc
repnz
lods
out
outsb
in
inc
stos
xor
mov
lret
jno
xor
cmp
popa
pop
or
rcrl
lea
push
add
dec
fists
or
fucom
loopne
sahf
adc
sbb
bound
mov
daa
clc
aaa
je
cmp
cmp
subb
ficomps
movl
lock
jle
in
and
rolb
sahf
fstp
call
dec
adc
or
in
ret
sahf
xchg
and
and
movl
cmp
in
icebp
mov
or
in
or
add
fistpl
push
inc
mov
test
pop
pop
aad
movsb
push
inc
xchg
mov
nop
jae
fsub
nop
mov
lock
shll
bound
cwtl
and
dec
dec
cmp
sub
outsl
fwait
mov
test
fldenv
cltd
pop
pop
push
mov
outsb
dec
or
xor
push
lods
arpl
xor
or
mov
and
out
push
xchg
out
ds
or
mov
cmpsl
xchg
js
push
dec
xor
adc
imul
popf
cltd
or
jb
cmp
and
mov
adc
dec
xor
insb
repnz
dec
imul
push
fnstcw
cld
or
or
jp
sti
orb
pop
and
fidivl
clc
pop
xlat
sbb
mov
jmp
sub
and
fs
add
inc
mov
inc
sub
hlt
push
mov
jge
fs
jmp
cmc
xor
mov
dec
scas
sahf
js
inc
icebp
mov
sub
stc
ret
pop
xchg
fndisi(8087
add
ds
in
cmpl
sbb
popa
jb
xchg
mov
mov
mov
cltd
pop
or
and
adc
ljmp
inc
push
sub
and
rcll
mov
in
sahf
adc
and
dec
es
mov
je
mov
cmp
sbb
scas
jge
cmpsl
mov
jmp
dec
into
insb
lea
adcl
mov
rorb
jmp
out
inc
in
xchg
push
and
scas
in
sbb
ds
nop
inc
fidivl
push
mov
cwtl
je
sub
jae
js
bswap
aam
mov
pop
shl
test
jp
pushf
pop
mov
xor
mov
jno
roll
sbb
pop
mov
adc
icebp
sbb
fwait
imul
dec
dec
movsl
sbb
jg
inc
xor
dec
jno
data16
inc
cli
add
ret
add
xor
ret
nop
add
fwait
cmp
aaa
or
and
test
mov
inc
dec
push
xor
jbe
aad
mov
adc
cmp
loope
std
mov
pop
outsb
fsts
sub
lds
out
ljmp
push
daa
mov
add
out
mov
fcmovnbe
pop
adc
dec
cmpsb
sub
pop
es
push
hlt
ret
push
repz
sbb
push
or
sbb
and
add
sbb
cmc
push
mov
cwtl
push
roll
cmp
enter
or
push
pop
dec
jmp
clc
cmp
fbstp
cmp
lret
out
sub
insb
pop
jmp
dec
les
xchg
int3
pop
xchg
cld
push
ror
hlt
int3
mov
pop
imul
jge
in
and
out
in
jno
mov
fs
dec
sbb
mov
sub
inc
cwtl
rcl
inc
fsubs
sbb
mov
movsl
sti
sbb
divl
sbb
cltd
mov
add
jmp
test
aam
cmpsl
fldcw
xchg
or
fimull
pop
rcrl
jno
fdivrs
insl
xlat
pop
or
push
xchg
xchg
shlb
stc
fisttps
idiv
jno
jmp
dec
pop
add
cmp
stos
or
arpl
fs
test
mov
subb
dec
or
aad
bnd
enter
or
push
shr
rorb
mov
inc
aaa
les
mov
jp
shlb
jecxz
dec
xchg
push
js
mov
aam
mov
roll
sub
mov
push
stc
add
iret
inc
mov
icebp
xor
sti
in
jp
dec
pusha
dec
sub
daa
push
rolb
movsl
push
jne
xor
pusha
das
out
fwait
add
pop
mov
or
and
xor
std
xlat
repz
cmp
pushf
or
aad
les
icebp
shlb
roll
inc
leave
sub
scas
mov
mov
fimuls
fwait
outsl
lahf
adc
xor
leave
mov
pop
aas
cwtl
and
fs
out
int3
mov
out
cmp
xor
dec
push
loopne
int3
xor
adc
cmc
sbb
aam
mov
cltd
jbe
adc
inc
insb
adc
xchg
xchg
cltd
push
mov
mov
jg
push
aad
ss
and
pop
mov
mov
fst
or
cmp
std
loope
stos
xor
mov
andl
ja
cmp
sub
in
jg
pop
pop
leave
stos
rcll
inc
in
fdivrl
mov
sahf
je
mov
adcl
inc
or
arpl
mov
in
lods
cmp
sub
shlb
mov
cli
int
cmp
push
push
popa
lods
nop
sbb
arpl
xchg
or
mov
js
dec
jmp
and
and
and
sub
lea
in
bound
mov
stos
test
in
fists
pushl
aam
add
cmpsl
jmp
pop
js
mov
loopne
mov
dec
or
fldt
imulb
adc
push
cs
push
push
push
jnp
divl
lock
jle
dec
leave
and
and
test
push
push
dec
andl
xchg
or
test
push
sbb
sub
in
mov
jecxz
dec
loope
rcll
dec
cltd
cli
cmpsl
int3
cmp
mov
sbb
imul
xchg
iret
enter
sbb
or
adc
cmp
add
stc
inc
jp
pop
movsb
lds
or
sub
jne
in
xchg
jns
jmp
sub
leave
andl
lcall
and
sub
and
sbbb
in
xchg
sub
mov
xor
imul
cmp
mov
fs
stos
lahf
cmp
mov
xchg
js
and
gs
daa
sub
aam
test
insl
jp
jno
jecxz
addb
push
enter
adc
jmp
cmp
lcall
xlat
into
mov
sahf
ret
rolb
mov
adc
jp
fildll
hlt
push
jb
jecxz
sbb
outsb
aad
adc
loop
pop
adc
push
imul
adc
push
jb
lret
icebp
clc
pop
lret
mov
wbinvd
cmp
leave
or
lea
test
out
pop
inc
pop
out
mov
sar
push
pop
in
dec
push
or
int
fmuls
ds
sbb
aam
push
or
arpl
mov
lds
cmp
adc
cld
pop
cmpsl
xor
mov
cmpsl
xchg
mov
jmp
adc
push
jae
xor
and
mov
jnp
cli
push
xchg
orb
xor
sub
inc
dec
rorb
push
push
mov
mov
stc
int3
sbb
pop
data16
fnsave
sub
push
pop
add
xchg
adc
push
data16
out
sarl
mov
outsl
es
aad
aaa
or
dec
xchg
outsl
push
dec
es
out
xor
outsb
cmp
es
mov
xchg
xor
sti
push
xchg
mov
sub
das
and
loopne
in
int
cmc
mov
je
xchg
mov
testl
xchg
pop
lret
pop
sbb
fst
stos
imull
xor
mov
sbb
lcall
jb
inc
call
and
cmp
xor
in
and
insl
push
int3
ds
test
movb
out
cmp
cmp
jmp
mov
dec
sbb
ljmp
pop
mov
adc
out
mov
stc
pop
xchg
ds
lcall
ds
sbb
pushf
loop
cmpsl
jmp
mov
sub
aad
and
fidivrl
or
inc
fstpt
xchg
dec
pop
testb
sti
mov
mov
mov
adc
xor
sub
inc
rolb
movsl
iret
lds
int
dec
mov
mov
push
cmp
sahf
clc
pop
movsb
sbb
pop
out
icebp
in
push
cmp
jge
or
or
jmp
js
xor
and
imul
and
lahf
loopne
iret
dec
lods
inc
js
dec
and
xor
test
data16
fstl
inc
cltd
aas
in
sub
sub
nop
aam
xorb
shl
mov
jb
mov
das
cwtl
mov
fnstenv
and
popf
mov
and
dec
fcmove
movsl
pop
push
mov
pop
dec
sub
ds
dec
into
dec
inc
dec
mov
hlt
mov
fiadds
fwait
inc
mov
xor
rorb
xchg
loop
data16
dec
aad
cmpsl
test
lcall
push
mov
cmp
loop
cltd
mov
push
cmp
fmuls
ja
xchg
movsl
in
rorb
inc
jg
or
cld
loopne
inc
dec
repz
mov
inc
push
es
sahf
fstp
sub
xlat
pop
mov
ss
mov
int3
mov
mov
add
imul
dec
pop
mov
and
push
jnp
in
pop
or
push
sbb
pop
mov
add
cmp
rcrl
aam
pop
xor
adc
add
and
cld
push
add
inc
mov
cmpb
xor
ljmp
fs
or
xor
iret
mov
clc
scas
mov
and
out
push
jb
icebp
jns
dec
stos
aam
popf
cmpsb
shlb
cs
adc
mov
popf
arpl
mov
lods
xchg
mov
jmp
jl
outsb
lods
int3
pop
pop
aaa
popf
test
jb
mov
mov
cmp
into
lds
push
pop
cmp
cltd
xor
sbb
aaa
sub
mov
cli
fisubl
scas
shrb
xchg
jmp
inc
or
mov
iret
sbb
inc
in
mov
mov
pop
movl
mov
pop
xchg
jl
jl
mov
mov
pop
mov
sub
dec
xchg
lds
ret
sub
mov
xchg
fs
sbb
lea
or
lret
rclb
sub
pop
and
cmpb
iret
vrcpps
sti
push
rolb
loopne
and
fadd
pop
je
adc
pop
les
fwait
pop
cli
mov
pop
test
and
rorl
out
and
cli
sub
jle
jle
xchg
inc
jne
adc
or
jbe
shll
dec
js
mov
lret
or
push
jb
mov
push
xor
xchg
xchg
sub
xchg
lret
mov
xchg
pushf
push
sbb
add
jecxz
fstpl
scas
or
data16
mov
fwait
sbb
mov
icebp
pop
movsb
popf
mov
dec
icebp
mov
movsb
adc
pop
xor
xor
sbbl
pusha
aaa
push
dec
cmc
xchg
or
xchg
dec
jecxz
imul
jo
stos
mov
mov
jp
out
scas
push
jns
xchg
mov
out
push
imulb
mov
pushf
jbe
pushf
pop
cld
movsl
stos
sbb
jge
add
insb
push
hlt
ror
cmp
mov
jbe
je
mov
inc
imul
repz
test
mov
lods
sub
je
or
ja
aas
mov
inc
outsl
push
lret
push
sub
loope
rcrl
jo
push
inc
cltd
and
in
ret
xor
xchg
test
sbb
repnz
fwait
sbb
ret
adc
pop
push
int
lds
dec
stc
mov
leave
lea
loopne
push
xor
xchg
pop
mov
test
lods
sub
push
mov
mov
add
fstp
push
jnp
or
std
xlat
sbb
arpl
or
xor
and
imul
shlb
add
negl
lahf
data16
popa
fcomps
mov
mov
mov
test
xor
mov
mov
push
js
fdivrl
test
je
xchg
cmp
popf
clc
jno
xor
add
fldcw
push
popa
andb
stc
inc
movsl
popa
gs
cltd
cmp
int
push
sub
xchg
mov
mov
xor
fnsave
dec
jo
push
daa
lcall
or
xor
pop
popf
xorl
or
xchg
jo
filds
mov
arpl
xchg
push
insb
rcrl
jecxz
sub
mov
or
in
pop
push
pop
adc
xchg
push
adc
out
in
cwtl
lds
sbb
dec
push
test
sbb
nop
inc
xor
mov
xchg
push
xchg
or
pop
ds
ljmp
cltd
sub
ret
hlt
leave
adc
mov
hlt
and
lods
sub
mov
jp
inc
jno
push
add
aaa
inc
push
or
pusha
mov
out
pusha
mov
out
mov
int
int3
mov
push
jno
inc
cli
frstor
popa
or
jae
inc
pop
test
xchg
test
repz
jle
outsb
je
shrl
cmp
sbb
popl
in
pop
pushf
negb
mov
mov
jge
cmp
in
jnp
dec
mov
mov
clc
mov
push
sub
mov
cmp
ret
pushf
aas
cmp
jnp
pusha
movsb
cmp
and
les
add
cmc
bnd
cmc
sti
insl
mov
mov
push
pop
mov
push
call
cmc
mov
xor
or
sbb
lret
pusha
bts
mov
adc
push
ror
inc
pop
je
scas
xlat
jmp
shlb
cwtl
cmc
cmp
jne
jmp
leave
push
push
call
adc
out
pop
dec
mov
dec
test
cmp
dec
add
dec
aad
sub
jns
mov
in
mov
daa
add
xlat
sub
ss
popf
frstpm(287
and
stos
ja
inc
mov
loope
push
cli
xchg
ret
push
lahf
jnp
pusha
or
aad
ljmp
cmpsb
pop
cmpb
xor
fs
xchg
dec
rorb
jmp
and
shll
nop
insl
dec
mov
scas
dec
out
adc
and
mov
nop
loop
mov
inc
lea
pop
sub
jne
inc
sbb
hlt
adc
mov
imul
ss
out
das
test
pushf
rol
fstl
shrl
pop
inc
push
jge
mov
cmp
jbe
push
cltd
xchg
xchg
jae
repnz
mov
cmp
adc
xlat
inc
movsl
mov
mov
sub
xorb
adc
mov
in
loopne
loop
int
in
mov
mull
gs
sub
sbb
sbbl
push
push
and
fstp
pop
in
mov
or
adc
fistpl
pop
cmpsb
add
cmpsb
inc
or
xchg
aad
sbb
flds
fidivrl
fnstcw
jbe
leave
jbe
orb
sbb
leave
and
sub
cmp
mov
mov
dec
and
shl
sub
enter
scas
xor
dec
nop
je
sbb
jecxz
xlat
test
or
cs
mull
push
int
in
mov
loope
fidivl
add
jb
scas
fcoms
xchg
adc
movsb
stos
xchg
test
dec
pop
inc
leave
out
xlat
or
cltd
jmp
lcall
mov
mov
fstl
push
int
pop
in
rorl
pop
enter
xlat
js
fidivs
xlat
outsb
sub
iret
inc
pop
and
stos
sbb
test
adc
gs
or
or
out
shlb
test
cmpsb
adc
imul
roll
outsb
je
cli
sarl
je
clc
pop
aaa
test
jb
ja
adc
sub
push
and
fldt
repz
and
add
push
xchg
inc
lock
sbbl
jle
inc
add
sbb
shlb
outsl
mov
aas
pop
mov
addr16
inc
dec
inc
aam
mov
and
ret
mov
sub
push
imul
cmp
pop
cmpsl
jb
out
movsl
mov
pop
int
insl
mov
lahf
add
push
dec
jmp
pop
inc
mov
pop
cmp
arpl
fwait
xchg
xchg
rolb
fidivrs
div
and
cmp
mov
sbb
mov
es
icebp
inc
sbb
adc
mov
dec
sbb
imul
int
test
add
xlat
add
into
pop
outsb
cli
jnp
mov
mov
inc
jb
mov
add
push
mov
mov
cld
mov
inc
mov
scas
jb
pop
cmp
mov
xor
out
mov
rcll
push
insl
mov
lds
popa
hlt
jp
or
loopne
mov
stc
shl
xchg
rcrl
outsl
sub
mov
movsb
sub
adc
scas
clc
jno
in
stos
push
xchg
ficomps
pop
pop
or
inc
shr
mov
and
inc
xor
xchg
cmc
jmp
ds
lahf
ds
aam
jae
and
sarl
inc
repz
push
movsb
daa
jle,pn
add
rorb
pop
imull
adc
out
or
add
sub
and
fstpl
push
jbe
sti
cmp
dec
xchg
adc
sbb
xor
cmp
aas
xor
inc
insl
cwtl
lret
push
sti
adc
sbb
sbb
jne
mov
cli
inc
sub
imul
into
and
test
sti
push
fstl
mov
test
cmp
pop
mov
add
test
and
pop
rclb
dec
and
stos
aam
ja
ror
xchg
movsb
jl
gs
pusha
test
xchg
jnp
shrb
and
ljmp
int3
xor
sbb
push
xor
push
or
daa
fs
xor
es
lock
push
icebp
jge
mov
clc
mov
push
mov
stc
add
mov
push
dec
pop
sarb
jmp
in
pop
lret
cmp
scas
push
insl
inc
ficomps
andb
jns
and
mov
mov
leave
jl
outsl
mov
xlat
repnz
mov
daa
mov
sbb
mov
lods
inc
push
cmp
xchg
data16
sbb
fadd
fsubrs
pop
fcoml
adc
aaa
mov
out
loopne
lds
ffree
lods
mov
jmp
jns
xchg
orl
cli
cmpb
outsl
and
or
mov
xchg
adc
jnp
sbb
jnp
fs
insb
ret
mov
in
imul
fisttpll
and
arpl
and
popf
out
test
mov
imull
jle
cmp
or
inc
out
mov
ja
mov
jge
sbb
mov
enter
xor
ljmp
cld
xlat
push
push
cwtl
je
sub
dec
dec
rcr
mov
cs
icebp
xor
gs
pop
xor
push
sub
clc
ljmp
push
lcall
pop
dec
add
leave
xchg
xor
xchg
lods
mov
js
aas
movsl
xchg
test
pop
xor
mov
movsb
sbb
xor
dec
idivb
popa
shll
sahf
loope
inc
cltd
in
fistps
mov
or
lahf
jbe
and
cli
ret
fwait
mov
push
stos
or
xchg
adc
jp
mov
and
std
cmpsb
pushf
mov
scas
add
daa
adc
jne
aas
scas
int3
jb
dec
or
mov
pop
stos
cmp
test
pop
hlt
mov
jmp
ret
add
adc
into
push
in
cwtl
add
push
xchg
bound
push
sbb
mov
sub
arpl
mov
dec
jge
sti
lcall
add
pusha
adc
mov
and
mov
mov
or
adc
mov
fdivrs
dec
pop
jecxz
lahf
inc
mov
js
mov
sub
mov
push
inc
push
or
adc
mov
fdivrs
aad
push
dec
scas
je
mov
push
out
lods
adc
jle
xor
fs
push
cltd
popf
bound
pop
mov
adc
adc
push
test
inc
push
ss
loop
pop
adc
mov
sub
mov
mov
int
add
mov
icebp
test
add
notl
lods
rolb
pop
daa
inc
clc
sub
ldmxcsr
mov
mov
sarl
andb
cwtl
dec
mov
ja
inc
push
add
bound
addr16
je
je
sub
add
sub
in
adc
add
adc
fildl
stos
cmp
loopne
aad
adc
fwait
ljmp
cltd
sub
cs
int
pop
and
mov
lds
out
mov
xchg
dec
je
out
dec
ss
out
xor
pushf
add
inc
inc
push
mov
fimuls
cmp
arpl
popa
xchg
or
cmp
dec
mov
pushf
ret
push
aas
push
mov
jnp
add
pop
xchg
cltd
je
mov
inc
fs
movsl
sub
mov
andl
imul
push
cmp
inc
push
push
out
mov
gs
lret
pop
and
or
sbb
adc
inc
xor
adc
or
xor
sbbl
inc
fs
insl
fnstcw
test
mov
inc
dec
pop
outsl
xor
cmpsb
ret
pop
push
lahf
add
mov
insb
mov
or
jl
and
dec
fwait
mov
adc
adc
jp
das
or
aad
mov
push
add
pop
call
ja
stos
jb
pop
mov
lock
and
mov
roll
lret
lcall
xchg
dec
repz
push
lret
fldcw
imul
jp
mov
add
cmpl
push
cmp
jnp
sbb
ja
ficoms
fbstp
divl
sahf
test
enter
loope
into
mov
popa
pop
sbb
imul
jg
mov
pop
lahf
jle
pop
pusha
cmp
je
push
jp
jp
push
pop
push
into
pop
add
outsl
push
test
imul
ffree
aam
pushf
pop
jbe
jne
sub
mov
out
mov
pop
xchg
jo
xor
adc
mov
pop
mov
push
xchg
into
or
insb
jg
xor
xchg
sbb
shlb
mov
lcall
rolb
ret
nop
sbbl
test
fcmovnu
in
pcmpeqb
int
mov
sarb
mov
rcrl
xchg
repz
mov
fcmovnbe
mov
jl
pop
inc
jne
mov
xor
pop
mov
or
and
leave
mov
cmpsl
inc
jnp
stos
popa
push
cld
enter
sbb
xor
int3
fisttps
cmp
in
stos
pop
cltd
clc
cld
fisttpl
dec
ja
xchg
aad
cmp
sub
xor
loopne
xor
dec
sahf
lret
xchg
sbb
dec
pop
pop
cmp
cld
in
out
in
lds
imul
imul
jge
unpckhps
hlt
std
mov
out
imul
into
std
dec
mov
data16
push
scas
fldcw
cmp
jmp
mov
and
lret
sbb
insb
jbe
jmp
dec
dec
sti
call
out
aaa
push
jg
xchg
fdivs
xor
xlat
sbb
xchg
lret
loope
divl
xchg
dec
mov
jge,pt
loope
int
sbb
std
shl
movsl
jnp
dec
mov
xor
int3
mov
lods
xor
or
jecxz
std
bound
pop
fimuls
adc
mov
inc
out
mov
push
stc
push
mov
and
addb
inc
add
dec
pop
js
loopne
sti
xlat
fwait
pop
cmp
mov
rol
fldenv
sbb
jbe
notl
xor
mov
adc
xor
xchg
loope
cltd
and
mov
clc
lods
fsts
loopne
sbb
dec
mov
test
xchg
mov
xchg
mov
roll
jmp
ret
fldcw
outsl
arpl
ja
dec
int
xchg
ds
inc
inc
pop
repz
lahf
and
jp
pushf
ret
jne
movsl
mov
loopne
inc
cmp
xor
jbe
lods
push
sbb
leave
lock
imul
push
sbb
xor
cmc
dec
das
mov
sti
adc
push
cltd
ret
jge
jns
push
sahf
int
xor
add
push
out
inc
nop
jae
or
push
pop
pushf
sbb
nop
mov
lock
mov
shll
stos
icebp
adc
data16
sbb
pop
add
shrb
packuswb
aas
pop
adc
sahf
call
cmp
sarb
or
shrb
push
ret
inc
or
jo
add
lahf
xchg
push
xor
mov
ja
lods
sbb
sub
cmp
dec
mov
jle
movsb
cmp
sub
enter
iret
jge
in
ret
mov
cs
imul
add
jge
xchg
mov
loop
inc
int3
sbb
sbbb
adc
es
rorb
xchg
and
test
popf
mov
cmpsl
test
xchg
pop
and
in
xor
stc
subb
push
jg
pop
pop
out
jge
sbb
dec
inc
sub
xor
push
mov
in
xor
inc
jb
sbb
sbb
mov
xchg
push
jge
adc
insb
adc
mov
flds
push
in
mov
push
jne
fwait
xchg
fwait
pusha
movsb
inc
sub
dec
xchg
dec
es
ss
out
mov
data16
aaa
jp
pop
outsl
fcomp
insl
sub
jns
rcr
pop
jl
nop
call
push
loop
in
int
pop
and
mov
dec
add
or
pop
push
arpl
pop
cmpl
mov
pop
sub
fidivs
frstor
imul
pop
mov
flds
push
dec
mov
mov
addr16
popf
data16
ljmp
int
xor
xor
flds
rcl
inc
arpl
dec
imulb
negl
or
pop
pop
jmp
lea
inc
inc
mov
add
xor
test
sbb
loopne
inc
popf
cld
icebp
adc
data16
dec
lret
scas
ret
imull
dec
icebp
xlat
fldenv
sbb
pop
das
clc
outsb
or
popf
roll
sbb
mov
mov
nop
jae
mov
div
daa
into
mov
ret
ja
jbe
jnp
mov
out
out
dec
rcrb
mov
xor
mov
divl
loope
maxps
add
or
pushf
es
xor
clc
sub
dec
sbb
loopne
adc
sti
mov
popa
nop
incb
rclb
arpl
push
inc
push
les
pop
dec
or
lods
dec
add
pusha
ss
mov
push
insb
cmp
cld
or
pushf
xchg
sahf
dec
mov
push
or
dec
mov
fldcw
ficomps
es
add
packssdw
outsl
insb
xchg
push
cmpsb
pop
in
mov
movsb
adc
decl
or
inc
shll
sbb
and
jns
mov
rorb
lea
push
or
scas
lret
pop
adcl
loopne
jno
gs
hlt
cmp
in
pop
and
dec
mov
jecxz
in
push
andl
jno
mov
cli
sbb
shll
or
in
andb
enter
sub
pop
rcr
jle
or
mov
test
jo
adc
sbb
mov
cmp
call
xor
push
popf
movsl
pop
mov
adc
movsb
dec
jno
xor
dec
rcr
jo
pusha
loope
movsl
inc
popa
sub
imul
mov
aaa
loopne
cli
pop
mov
aam
arpl
and
andl
loope
jb
pusha
int
push
int3
and
ret
mov
fs
jae
lods
push
push
testl
in
cltd
jno
fwait
icebp
sbb
fisubrs
mov
stos
sub
push
cmp
mov
sub
sub
stc
enter
jns
and
xchg
imul
fwait
cmp
push
dec
jbe
clc
insb
inc
xor
jno
insl
xchg
adc
cmpl
jnp
xlat
xor
inc
pop
testb
in
out
call
mov
and
jle
xchg
fsubr
cs
mov
inc
orb
js
fst
mov
loop
adc
jns
push
scas
mov
inc
imul
dec
scas
stos
push
les
fdivrp
psubsw
add
push
cld
jmp
push
imul
pop
aam
cltd
shl
ds
add
xchg
inc
stos
pop
xchg
dec
mov
frstor
xor
or
sub
ss
iret
xor
push
out
mov
pop
jecxz
mov
fs
xchg
inc
mov
sub
xor
mov
ja
cmp
jg
push
out
mov
repz
sbb
scas
xchg
fwait
dec
lods
bound
iret
add
es
fidivl
lods
xchg
mov
shrl
dec
cmc
xchg
stc
roll
mov
movsl
notb
xchg
fcmovne
jnp
and
clc
dec
push
inc
insl
and
pop
xchg
iret
sub
push
lret
loope
add
sub
xchg
cmp
mov
mov
les
mov
int3
pop
push
jae
lcall
aad
sahf
adc
rcl
adc
adc
jl
jp
or
xor
xadd
test
loop
aam
xchg
inc
jecxz
jo
lcall
mov
sub
sbb
fsubrl
add
lods
dec
inc
add
add
xchg
push
test
sbb
out
stc
pop
test
cli
addr16
in
jbe
les
sbb
mov
fwait
jg
out
divl
test
pop
cli
inc
sti
add
not
add
test
out
mov
cwtl
iret
les
sbb
adc
xor
in
movsb
repz
adc
xchg
add
add
mov
cmp
mov
scas
outsb
and
pop
xchg
cwtl
sti
cld
mov
cs
or
stos
cmc
push
js
sahf
push
adcb
xor
iret
jnp
adc
aad
adc
mov
cmp
mov
lock
adc
dec
adc
clc
xor
push
dec
jle,pt
xor
xchg
mov
cltd
fldcw
pop
and
or
mov
icebp
imul
lods
sub
scas
xor
divb
enter
rcll
mov
mov
push
pop
fcom
testb
lds
add
mov
push
sub
pop
lahf
xchg
jne
lret
xchg
lahf
and
ret
pop
shlb
adc
fwait
stos
cmc
push
enter
xchg
and
pop
imul
movsl
test
push
push
in
xor
and
adc
or
or
pop
cltd
mov
jecxz
cmp
push
xchg
jne
fisttpl
sbb
xchg
xor
add
scas
jae
ficompl
add
je
cmp
test
or
testb
mov
mov
test
sub
jbe
mov
add
inc
inc
int3
ficoms
sub
jbe
dec
jno
or
gs
or
inc
adc
lds
mov
mov
lahf
inc
nop
imul
mov
jl
daa
shlb
cmp
test
int3
mov
xchg
inc
int3
or
fwait
int3
mov
sarb
mov
and
mov
push
mov
insl
adc
repnz
pushf
sub
jp
mov
or
lock
push
lock
push
stos
cmp
and
fwait
fwait
cld
jle
loop
nop
mov
inc
ss
orl
and
and
mov
sub
movsl
mov
jp
jne
fcmovb
or
lock
add
sub
sub
push
and
out
mov
ja
add
mov
lock
mul
inc
cmp
sbb
dec
xchg
jbe
pop
test
cmp
in
jb
add
test
push
test
push
out
sub
add
jb
cmp
aaa
repz
lret
inc
stc
mov
push
push
ss
test
out
pop
cmp
iret
jne
insb
mov
fistpll
jo
push
inc
fcompl
aaa
or
fs
addb
cmpsl
stos
aaa
inc
xlat
add
subl
xor
lods
movsb
add
aad
jg
add
push
sub
sub
loop
add
sarl
cmc
insl
mov
cmp
dec
daa
mov
mov
gs
cmp
or
jb
outsl
adc
push
push
adc
xchg
push
loopne
or
adc
mov
rorb
arpl
arpl
inc
xor
ud1
and
inc
push
jle
pushf
xlat
scas
subb
pushf
xor
xchg
add
mov
pop
mov
sub
dec
pop
hlt
jecxz
imul
shrl
jns
xor
lret
test
fstps
inc
xor
jg
sub
lods
jae
pop
hlt
mov
adc
mov
cmpsb
jb
add
movsb
cli
cmpl
mov
xchg
lea
dec
xchg
xchg
int
mov
sub
jns
rorl
xchg
cmp
mov
jo
cmp
mov
outsl
jl
scas
fnsave
cli
push
fcoms
std
pop
lret
xchg
icebp
loope
jb
dec
cmp
or
cltd
add
push
or
dec
dec
dec
jl
fsub
sbb
pushf
adc
clc
dec
lret
mov
std
sbb
outsl
cld
xchg
pop
cmp
lods
in
test
xor
cmp
mov
cmp
popf
or
out
lock
pop
es
pop
jg
cmpsb
xor
hlt
mov
ret
lret
dec
mov
imul
filds
pusha
and
fnsave
jmp
xchg
sbb
dec
xor
dec
ljmp
aas
lods
pushl
adc
ss
mov
pop
sub
insl
andb
fcmove
stos
dec
xlat
loopne
iret
mov
cmp
xchg
es
jle
cmp
cmpl
int
xor
sub
lret
cltd
mov
push
lods
mov
fsubrl
cmp
roll
pop
mov
mov
das
jbe
inc
std
add
sbb
cli
les
out
dec
dec
mov
rcll
dec
ljmp
or
mov
out
mov
mov
xor
sub
xor
jecxz
lret
ss
ficompl
inc
ja
add
push
push
cld
lods
inc
insl
pop
mov
outsl
and
ret
insl
push
jbe
xchg
int
imul
sbb
fdivrl
mov
sbb
pop
and
div
loopne
fldl
jnp
sbb
mov
sub
mov
cmpsl
imul
dec
mov
lods
or
mov
leave
jge
outsb
xor
aaa
into
sub
add
ds
div
cmp
ds
sbb
roll
jno
aas
adc
cmp
in
xchg
cli
ja
es
pop
push
pop
stos
push
pop
mov
sbb
and
rcll
fisttpll
mov
push
adc
adc
jg
scas
mov
push
inc
mov
xchg
iret
push
gs
cmp
mov
sbb
cmp
mov
cmp
xor
enter
cmp
xchg
icebp
std
shlb
fnstenv
pushf
fisubl
add
push
imul
mov
icebp
or
mov
and
fisubs
sub
push
int3
shl
int
clc
int
push
xchg
jmp
aam
and
cmpb
movsl
dec
and
sub
push
jae
pop
jmp
les
cmp
js
lock
sarl
xchg
dec
inc
inc
ds
xchg
imul
loopne
push
sub
xchg
cmpsb
scas
mov
sub
ret
pop
inc
leave
xchg
das
adc
sbb
sbb
rcll
clc
je
xor
sub
clc
cmc
sbb
pushf
cwtl
jg
xor
mov
mov
push
or
jne
lds
mov
dec
xor
loop
mov
fucom
ret
sub
xchg
scas
dec
mov
fs
sub
push
mov
xchg
iret
xchg
lods
dec
ds
and
out
mov
imul
pop
xchg
imul
arpl
lods
mov
das
lcall
pop
push
jmp
cmp
adc
stos
sbb
fcomps
out
je
stc
arpl
test
inc
mov
stos
dec
enter
push
pop
mov
add
add
mov
or
rorl
out
or
or
insb
imul
cld
stc
fmull
xchg
lock
test
in
xchg
rdpmc
pop
adc
shlb
push
adc
cmp
jnp
stos
ret
adc
int3
or
push
push
dec
push
imul
mov
inc
fmul
dec
call
ficomps
pop
push
test
and
adc
inc
imul
push
sbb
and
mov
dec
jg
and
leave
jae
inc
int3
mov
inc
movsb
jg
jg
dec
imull
sarl
mov
adcb
ficoml
or
imul
test
pop
mul
iret
mov
lds
popa
insb
mov
xor
mov
ss
xor
mov
add
pop
test
nop
adc
cmp
out
mov
sbb
pusha
mov
sbb
xor
and
popa
inc
ds
jne
xchg
push
test
or
lcall
xlat
sbb
add
mov
or
mov
cwtl
dec
je
test
sarl
test
add
or
xchg
enter
cli
xchg
cmc
nop
mov
in
jle
and
add
lcall
inc
sbb
jnp
in
or
ss
lcall
ja
dec
movsb
loope
push
and
jg
push
int3
mov
inc
int3
pusha
lds
fsubrl
pop
and
mov
dec
es
andb
adc
shlb
enter
pop
pusha
xchg
sbb
je
jno
and
cmpsl
sub
ljmp
mov
int3
cltd
in
insb
push
fidivrs
test
insb
enter
test
repz
fisttpll
hlt
adc
in
mov
add
cld
mov
or
xor
jecxz
cs
imul
faddl
adc
adc
sarl
cltd
mov
pop
jmp
insl
pop
lds
xor
inc
cmpsb
jbe
cmp
mov
cmp
mov
jne
mov
leave
hlt
inc
xchg
ds
addb
in
ss
fnstenv
cwtl
pop
adc
pop
pop
cmp
inc
push
xchg
pop
mov
xor
jle
push
sahf
and
xchg
jbe
pop
es
call
sub
push
push
aas
and
in
popa
adcl
insl
ret
sub
mov
cld
add
sub
lea
sarb
in
pushf
inc
pop
dec
dec
je
outsl
filds
fwait
aam
pop
inc
cmc
or
sub
rcl
push
jae
mov
push
divl
mov
push
test
and
gs
xor
sub
js
jecxz
in
fs
lods
aaa
inc
stos
mov
or
rol
rorb
xor
xchg
inc
add
inc
fbld
dec
jne
inc
jp
das
fwait
and
test
push
inc
fldcw
mov
jle
rcll
outsb
or
nop
xchg
adc
adc
inc
xchg
test
je
lock
push
xor
in
out
pushf
jnp
mov
push
clc
pop
jge
aas
fwait
jne
dec
jle
cmp
jne
lcall
scas
mov
mov
pop
push
loop
cmc
pop
movsl
jp
sub
mov
das
ficoml
pop
xor
sub
lods
xchg
jnp
pop
mov
aad
jnp
mov
insl
mov
jo
mov
sub
adc
dec
push
pop
in
cmp
inc
lret
mov
cmp
movsb
ljmp
std
leave
push
es
lcall
cs
or
addb
jne
hlt
cmp
push
add
decl
or
cwtl
int3
sbb
push
xlat
out
sbb
in
mov
pop
das
jp
mov
cld
test
push
ficompl
mov
mov
sbb
cmp
jmp
or
or
imul
ret
mov
lock
mov
mov
loopne
dec
push
or
les
or
adc
addl
fcmovnbe
out
sbb
xchg
cmp
cmc
lahf
int3
mov
add
push
mov
dec
sub
mov
in
enter
daa
and
mov
stos
mov
xor
les
pop
stos
jne
jns
push
xor
lret
loop
push
cmpsl
pop
xor
sbb
add
enter
and
out
adc
push
add
fmuls
movsl
jno
rclb
loopne
es
dec
mov
xor
lahf
jmp
stos
lock
fdivrp
cwtl
les
sbb
or
into
lds
sub
pop
sub
leave
test
xchg
shl
add
gs
cmc
fs
jbe
repnz
xor
add
mov
push
dec
jo
inc
out
inc
dec
les
jb
inc
jae
lock
add
add
pushf
mov
cmpsl
dec
rorl
push
sbb
push
jecxz
jl
outsb
lret
jo
lods
push
push
xchg
push
pop
cmp
mov
push
ret
gs
xchg
out
add
sbb
cmp
xorl
xchg
mov
xchg
pop
sub
pop
shl
adc
mov
shl
loop
sbb
push
pop
shll
or
out
scas
dec
or
mov
mov
lret
sbb
cmc
ljmp
pop
jl
add
pushf
adc
add
cmp
dec
push
es
cmpsl
pop
mov
sbb
cmc
mov
xor
inc
cmp
lcall
std
fwait
mov
jno
mov
sbbb
addr16
jg
inc
int3
xlat
mov
sti
xchg
jmp
or
mov
jns
jb
cmc
push
out
dec
repz
mov
subl
push
ret
adc
mov
xor
ficomps
lea
push
daa
aad
cltd
sbb
stos
adc
and
sbb
loopne
push
mov
daa
cld
repz
popf
pop
mov
imul
pop
mov
sahf
bound
in
inc
out
xchg
or
jae
mov
cld
sub
inc
cmp
fsubr
push
mov
dec
mov
pop
push
add
mov
push
xchg
xchg
xlat
ret
out
stc
add
cwtl
dec
mov
push
lods
adc
jp
fisttpll
jmp
pop
test
pop
xor
lret
lret
je
popf
pop
xchg
push
out
adc
call
cmp
xor
ficompl
lock
pop
cmp
push
push
fcmovu
push
stc
xor
fadds
pusha
mov
clc
mov
mov
leave
push
or
inc
push
repz
fwait
lock
lcall
loop
cmp
enter
push
imul
mov
jp
inc
add
add
cmp
jecxz
mov
fsts
imul
scas
dec
daa
lods
in
int3
das
arpl
pop
in
test
shll
or
inc
inc
adc
adc
sbb
lcall
mov
in
je
aaa
outsl
icebp
mov
jbe
je
add
cmp
in
mov
inc
xor
dec
dec
xchg
hlt
mov
cltd
ficompl
mov
adc
repz
lods
and
pop
in
adc
mov
call
dec
inc
outsl
dec
adc
xchg
xor
mov
mov
sbbl
ja
out
imul
fidivl
sub
jb
sbb
arpl
inc
pop
aaa
jl
shrb
sti
arpl
js
aam
mov
jecxz
or
jns
dec
addr16
or
pop
fst
push
sub
cld
xchg
lods
dec
jns
fsubrs
mov
dec
pop
rol
stos
hlt
inc
push
adc
mov
jecxz
mov
fprem
out
sub
cmc
mov
pop
in
push
and
xchg
std
nop
or
mov
mov
hlt
cmp
add
dec
aaa
cmp
mov
mov
add
jo
xchg
push
jnp
xchg
mov
cmc
stos
xor
dec
inc
mov
cltd
popf
stos
dec
add
and
push
es
out
adc
int
mov
test
pop
cmp
aas
repz
jmp
xchg
bndstx
dec
pop
and
aad
std
push
dec
or
sub
xor
sbb
lcall
jno
repnz
popa
rcr
daa
add
jl
xor
sbb
sti
lock
ljmp
cmpsl
ds
in
sbb
xor
inc
imul
lret
mov
js
jbe
clc
lea
push
leave
or
jns
je
add
or
xor
sti
negl
adc
sahf
push
add
cmp
add
mov
mov
movsl
xor
xlat
lcall
push
push
mov
or
or
nop
mov
xchg
jl
add
or
pushf
jne
dec
aam
jmp
mov
pop
in
jmp
mov
cmpsl
insl
out
imul
cmp
add
loopne
fiadds
iret
mov
push
out
in
or
inc
movsb
lcall
or
sbb
xlat
cli
add
dec
aad
and
shll
sbb
xchg
rcrl
ljmp
add
iret
mov
and
sbbl
scas
es
jo
pop
cmc
mov
jmp
cmpsb
adc
xchg
mov
mov
mov
mov
jns
pop
lcall
mov
add
mov
xchg
enter
fstl
je
adc
pop
ds
ss
cmp
aad
mov
incl
idiv
mov
mov
in
shlb
inc
sahf
mov
lds
ja
aas
arpl
scas
mov
dec
jmp
mov
out
int
inc
sub
or
pop
hlt
loop
jg
into
addr16
loop
aad
pop
jge
ja
xchg
or
push
inc
inc
xor
dec
inc
cmpsl
lcall
fisubrl
xor
push
pop
sub
or
fwait
ljmp
enter
pop
imul
pop
sbb
mov
xchg
push
in
xchg
fsubrl
jae
sahf
cmp
or
cmp
and
cmp
lret
sbb
jge
std
cmpb
pop
jle
xchg
push
fnclex
mov
and
adc
mov
loopne
aaa
or
cmp
fcoms
xchg
data16
push
sti
mov
sti
sbb
aaa
lock
xchg
sbb
movsb
loope
push
dec
add
mov
shl
imul
lods
hlt
jg
cmp
popf
jns
fldt
repz
dec
xchg
push
test
mov
pop
stc
stc
fldl
adcb
addr16
xlat
scas
push
scas
cmp
pop
cmpsb
int
xor
incl
mov
enter
repz
out
popa
mov
popa
xchg
mov
fdivr
js
mov
pop
or
movsb
out
or
inc
dec
cmpsb
shrl
iret
loopne
mov
sbb
mov
ds
test
pop
orl
mov
testl
xchg
mov
aas
inc
pop
cmpb
jmp
xor
push
adc
sti
pop
cli
pop
and
add
and
sub
out
push
dec
mov
dec
lret
pop
cmpsl
sub
add
ss
inc
mov
mov
pusha
imul
hlt
ljmp
addr16
jne
icebp
xor
mov
icebp
nop
dec
pop
imul
in
add
xchg
inc
dec
mov
sbb
addr16
and
mov
push
or
sti
fwait
scas
test
jmp
dec
repnz
add
icebp
outsl
mov
movsl
mov
dec
lcall
pop
pop
mov
push
xchg
pop
xor
loope
sbb
xor
cltd
fisubs
sbb
push
jno
lea
mov
cmovne
out
adc
xchg
loopne
mov
pop
cmp
mov
outsb
roll
out
mov
dec
xchg
arpl
dec
inc
hlt
mul
int
frstor
xor
fwait
shll
add
xchg
imul
pushl
jge
fidivrs
cmpsb
mov
adc
js
imul
frstpm(287
fcmovnu
stos
xchg
cli
cmc
rcrl
fbstp
push
lahf
xchg
test
jecxz
pop
mov
roll
lea
dec
pop
rcl
test
jle
mov
pop
add
add
movsb
cwtl
and
insl
fdivl
ljmp
stos
dec
aad
pop
out
les
movsl
jno
fs
push
call
out
sub
push
adc
push
clc
aaa
negb
sbb
mov
les
aas
sbb
mov
push
xchg
hlt
mov
cwtl
adc
int
test
ja
and
add
pushf
ljmp
divl
jl
or
push
ret
lods
jl
lods
push
sbb
sbb
lds
insl
inc
lcall
mov
gs
aad
xchg
adc
loop
sbb
mov
aaa
inc
cmp
pop
es
das
aam
popl
cmp
test
andb
mov
inc
mov
pop
sub
fs
jo
fwait
imul
addr16
cltd
mov
jne
int
and
addr16
popf
mov
rorl
movsb
ss
stc
dec
ljmp
popa
out
mov
jne
inc
adc
cmpsb
sarl
push
shrb
jns
jbe
mov
dec
inc
push
adc
mov
stos
push
daa
aas
daa
adc
pop
sub
lods
fdivrl
jge
mov
pop
and
icebp
les
adc
sbb
rolb
cwtl
mov
or
cmp
xor
dec
out
fcmovu
fidivs
test
mov
gs
jae
or
sbb
mov
push
add
loopne
jmp
test
and
gs
push
inc
cli
cltd
das
aam
jbe
push
fistps
popa
push
jae
repnz
sub
mov
xor
pop
icebp
push
jl
or
lretw
adc
mov
add
cmp
cmp
xor
repnz
call
clc
push
pop
jo
test
mov
repz
loope
sbb
jns
jge
orb
xor
lcall
loope
incl
lods
add
lock
sub
fisttps
mov
dec
frstor
out
ljmp
shlb
loopne
mov
pop
mov
pop
or
fisubs
xchg
inc
jb
dec
xchg
sti
bound
cmp
lods
jb
add
lods
sbb
sbb
loope
das
addr16
loopne
sysenter
pop
bound
ds
pushf
dec
gs
jp
jb
rcll
or
icebp
pop
fcmovu
jb
lret
sub
popf
loope
adcb
outsb
addr16
mov
aad
mov
jb
dec
iret
inc
decl
or
inc
addb
mov
lret
sub
xor
push
sbbb
gs
popl
push
ds
scas
stos
in
repnz
or
push
xchg
add
imul
out
xchg
daa
cli
subb
push
pop
jp
push
outsl
xlat
xchg
cmp
and
mov
je
inc
pusha
mov
mov
mov
xor
mov
cmpsl
add
cmp
mov
mov
pop
adc
push
and
sub
or
repz
out
add
or
cwtl
push
add
and
xchg
sub
gs
frstor
adc
mov
jle
movl
pop
fildll
pusha
or
bound
daa
adc
das
sub
stc
rcll
out
pop
pop
repz
mov
pop
xor
jmp
and
mov
test
hlt
jmp
cmp
das
push
mov
and
pop
cmp
fstps
outsb
push
mov
jnp
in
adc
scas
push
clc
jne
into
adc
std
cmc
sub
sbb
in
lret
cltd
fwait
das
cmp
pushf
mov
clc
lea
inc
xor
rcr
add
adc
pop
mov
out
stc
pop
stos
repnz
push
in
les
scas
clc
xchg
fsubr
aam
jne
sbb
add
adc
ljmp
mov
nop
pushf
jbe
or
ss
std
lds
test
sti
cmp
inc
rorb
jno
cmp
add
scas
cli
xor
jmp
fwait
jp
in
xor
ret
int
test
sbb
sub
sbbb
bound
ss
gs
inc
insl
ret
and
dec
push
mov
in
ljmp
or
cli
add
enter
and
inc
mov
popf
jg
cmc
clc
cltd
fdivl
std
test
jecxz
in
loopne
add
leave
and
pushf
lret
into
mov
push
jp
mov
xchg
mov
pop
in
shlb
popl
stc
push
cmp
int
cld
iret
inc
pop
mov
add
repnz
add
cli
mov
ja
hlt
cmp
dec
jb
fsubrs
sarb
add
push
imul
popa
or
pop
sub
repnz
pop
add
jae
clc
xor
sbb
jecxz
lret
or
imul
xor
mov
out
call
add
repz
lods
ret
into
xor
jg
sbb
loop
xchg
push
nop
popf
lret
push
xor
stos
sbb
mov
gs
or
pop
xlat
jle
sbb
add
xor
shlb
mulb
inc
imul
or
pop
lock
xchg
pusha
pusha
add
outsl
sub
dec
ds
addr16
mov
push
leave
push
cmp
cs
mov
mov
data16
shlb
jle
dec
adcl
call
sub
repz
pop
cmp
xchg
and
ja
xchg
mov
test
mov
push
xlat
push
ja
push
fs
rcll
shlb
sub
add
fsts
jb
leave
dec
lods
call
insl
imul
aam
outsb
xor
leave
out
dec
cmp
mov
repz
cmp
decb
jae
inc
inc
mov
cmpsl
cmpsb
dec
xchg
inc
adcb
stc
xor
push
test
jbe
add
lds
jnp
push
popf
cwtl
lret
rcl
mov
movsl
pop
sbb
test
mov
mov
imul
mov
cmpsl
pop
or
cli
xor
jb
int
sub
sbb
hlt
mov
adc
mov
fmull
mov
mov
xor
outsb
adc
std
fildll
mov
mov
fildl
js
mov
mov
adc
pop
xchg
xchg
add
daa
call
push
rcrl
bound
adc
movsb
jmp
sub
pusha
lods
pop
adc
in
test
pop
adcb
mov
stos
test
push
nop
nop
fistps
sbb
cmpsb
int
sbb
out
in
scas
push
xchg
sahf
push
mov
jne
outsb
add
mov
stos
in
test
inc
inc
arpl
out
ret
rcl
add
sbb
jns
cmpsl
int
cmp
dec
imulb
cli
lods
inc
push
imul
pushf
push
or
jns
cmc
xor
pop
or
roll
pop
lret
imull
aaa
sub
lds
inc
clc
dec
in
or
out
repnz
mov
xchg
mov
adc
cmp
imul
mov
cmp
imul
jecxz
lea
dec
psraw
cli
add
xchg
cmpb
popf
mov
xor
xor
int3
mov
test
lods
vaddpd
mov
into
jno
jo
movsl
or
pop
mov
cltd
jo
sub
adc
pop
loope
push
dec
pushf
sbb
ret
pop
xor
jnp
jle
inc
add
or
popa
addl
mov
lds
add
and
add
out
lahf
ss
lahf
mov
out
lret
adc
xchg
rolb
jmp
add
or
mov
jmp
pusha
add
push
adc
cmc
sbb
mov
movsb
mov
jmp
mov
ljmp
xor
cmc
add
cmpsb
orb
xchg
aas
stc
scas
jecxz,pt
call
aas
xor
aas
jo
or
mov
pop
pop
pop
pop
scas
jecxz
outsb
std
cmp
sub
movsb
aad
adc
push
xchg
sbb
test
mov
lds
rcr
add
inc
pop
jl
dec
push
aas
mov
pop
xor
push
push
shll
add
out
adc
pop
xor
stc
xor
jne
sub
push
dec
jg
sub
mov
insl
int3
lds
cmp
shrl
pop
dec
jecxz
loop
cmp
add
or
sub
dec
jae
icebp
mov
lea
pop
xor
jb
rcrl
mov
les
outsl
test
repnz
dec
xchg
fwait
jno
je
inc
adc
push
mov
imul
nop
test
xchg
xor
mov
shrb
fwait
pop
sub
mov
repz
mov
sbb
jmp
lret
xchg
push
xlat
jbe
add
mov
scas
movsl
addl
xchg
mov
pop
xchg
jp
mov
jl
js
int3
xlat
cltd
icebp
fs
repz
jle
imul
or
cmc
add
ficoml
sbbl
popa
mov
add
jb
lcall
fcoml
push
push
movsb
pop
and
mov
mov
pop
push
mov
push
jno
out
push
mov
js
dec
mov
mov
int3
nop
aam
push
add
push
fildl
ds
add
hlt
jnp
xchg
or
sbb
inc
sub
cmp
rcl
mov
js
loope
jno
lea
out
or
jno
push
andb
cmp
enter
hlt
dec
jecxz
inc
push
dec
push
fisttps
inc
cmpsb
leave
inc
dec
test
neg
dec
dec
clc
add
cmc
sub
leave
pop
mov
xor
arpl
movsb
pop
and
mov
mov
andb
sub
adc
out
inc
movsl
stos
js
push
into
jns
xchg
mov
and
sbb
cmp
pop
push
int3
lret
repnz
sub
xchg
out
xor
jae
lods
sar
in
punpckhdq
xchg
jnp
cs
cmpsb
mov
das
icebp
xor
mov
push
movsb
mov
dec
sub
mov
aas
movhlps
shl
pop
ret
movsb
test
std
push
out
movsb
and
mov
mov
add
and
fnstsw
add
push
sbb
fmull
lret
lea
mov
sub
enter
lods
data16
rcrb
inc
push
in
imulb
pop
cmp
xor
pop
sbb
bound
fnstsw
out
bound
les
rcrl
repz
adc
mov
ror
jno
andb
dec
jg
mov
icebp
lretw
iret
outsb
je
imul
adc
sti
addr16
mov
xchg
push
jmp
cmc
pop
test
inc
arpl
jo
add
das
ficompl
popa
or
roll
aam
les
mov
insl
out
mov
inc
sbb
ret
out
xchg
ss
mov
pop
pushf
pop
fldt
sub
sub
hlt
ss
jp
mov
aam
or
fisttpll
sbb
sbb
test
pop
add
mov
cld
fwait
out
xor
mov
rol
loope
xchg
adc
popa
ret
xchg
and
ja
lahf
xchg
and
mov
mov
add
sbb
ja
inc
aaa
lods
fstpt
cmp
or
mov
es
xchg
mov
or
cmp
call
cltd
jge
orl
stc
dec
mov
mov
dec
jo
in
js
dec
lahf
movsb
mov
inc
cltd
sub
sub
xlat
dec
xchg
repnz
lcall
push
push
dec
mov
push
movsl
fcom
or
ljmp
xchg
mov
lods
xor
imul
adc
fs
pop
dec
pop
ljmp
movsl
lret
outsl
arpl
repz
jnp
xchg
icebp
es
xor
and
ss
ffree
mov
adc
cmc
inc
push
push
adc
aas
push
inc
xor
jbe
push
xor
adc
push
and
mov
movsl
sub
stc
sub
inc
xor
imul
mov
std
fmull
lock
mov
lret
rep
sub
ss
mov
push
hlt
cld
cli
bound
mov
addb
mov
mov
mov
jb
shr
stos
cmp
add
ficoms
jge
cmc
test
daa
pop
js
xor
and
or
mov
loope
fcoml
rolb
and
leave
imul
inc
sbb
inc
popf
pop
rorl
push
mov
aad
das
add
minsd
mov
ss
adcl
enter
pop
mull
cmc
movsb
inc
fdivrs
adc
and
jae
sahf
xor
fsin
xlat
loope
push
int
lds
out
adc
clc
jle
jb
mov
adc
xchg
sub
jp
push
aad
push
jmp
cmp
leave
loop
jbe
iret
bound
loop
outsl
pushf
mov
test
test
add
repz
cmp
jp
fs
jnp
lea
xor
mov
out
adc
lods
stc
and
mov
pusha
cmc
or
lds
rorb
cmp
push
lret
repnz
cmp
lret
push
dec
daa
lahf
xchg
dec
movsl
daa
cli
sbb
stos
sub
mov
xchg
repz
fistpll
pushf
inc
mov
icebp
xor
clc
jp
cmpsb
leave
popf
test
lea
ss
cmc
push
inc
sti
push
dec
rolb
imul
inc
cmp
push
data16
ss
mov
aad
gs
mov
inc
int
stos
int3
lods
mov
and
rdtsc
sbb
idivl
adc
lret
push
add
ret
es
push
mov
int
js
xor
pop
sbbl
and
adc
mov
add
outsl
cltd
repz
cli
scas
loopne
outsl
or
xor
dec
push
xchg
and
aad
dec
fwait
dec
sbb
insb
cmp
or
dec
lods
ljmp
sbb
clc
jo
mov
mov
jnp
add
das
cmp
jno
and
es
ret
gs
frstor
dec
je
sbb
mov
mov
lret
cmpsl
jmp
bound
jp
mov
cmc
ret
test
pop
lret
or
std
inc
sub
test
and
xor
mov
xchg
inc
rcll
inc
xor
dec
xor
jg
fdivl
in
jno
imul
sub
mov
pusha
aas
ja
scas
xchg
jns
pop
xor
mov
mov
xchg
sarb
fisttps
in
adc
adc
cwtl
sbb
mov
jmp
ds
leave
in
push
adc
fisubl
out
insl
mov
jnp
pop
mull
jmp
fiadds
mov
sub
jno
jg
stos
les
stos
js
cwtl
jno
out
subl
imul
inc
pop
or
pop
rcrl
xchg
jge
dec
imul
ss
enter
mov
ret
pop
bound
scas
pop
sbb
movsl
fs
mov
push
xchg
rorl
ljmp
cs
or
add
pop
insb
push
repz
lock
add
xor
push
adc
and
pop
mov
xlat
jl
pop
or
daa
sub
or
sub
cwtl
sub
mov
or
out
lods
fistpll
repnz
cwtl
sbb
xor
loop
sub
mov
cwtl
mov
xchg
repnz
stos
fnstcw
clc
xchg
test
xor
xchg
in
ret
sub
lds
xchg
enter
dec
mov
lcall
or
mov
mov
mov
push
sbb
dec
cmpb
imul
insb
dec
adc
mov
outsl
push
shl
xor
pop
daa
ret
xchg
xchg
push
rolb
in
out
xor
sub
inc
sbb
push
scas
out
test
sub
mov
pop
leave
sbb
push
iret
xchg
cmp
lock
popa
jg
xor
bound
in
push
cld
int
inc
popa
cmp
jnp
mov
sub
pop
lret
sub
and
lods
movsb
cmpsb
std
in
lds
cli
adc
add
push
jbe
xor
or
fidivrs
mov
sub
push
mov
jo
adc
out
xchg
pop
bound
scas
push
call
inc
pop
dec
into
into
jg
jnp
push
push
outsb
cwtl
mov
ds
imul
mov
sbb
fwait
out
xor
or
sbb
adc
les
mov
arpl
js
std
jmp
adc
lahf
xor
fidivrs
insl
push
lahf
pop
insb
cmpb
lret
jae
out
adc
negb
ss
rcll
sub
clc
sbb
aaa
xor
jo
inc
fsubrs
cmp
pushf
test
test
aad
inc
popa
add
jne
and
shr
pusha
jecxz
cmp
outsb
ficoms
fiadds
stc
inc
imul
lret
inc
cmpsb
mov
icebp
data16
loopne
rcll
push
mov
aas
jo
jb
ret
pushf
insl
stc
aam
adc
xchg
nop
jecxz
loop
pop
mov
jmp
iret
cmp
shlb
adc
ds
fwait
mov
incw
pushf
mov
int3
dec
mov
fcmovbe
inc
aas
xchg
dec
ret
ljmp
mov
fisttps
xor
cltd
stc
fists
lods
adc
xchg
xchg
popf
ror
arpl
sbb
icebp
aas
lock
mov
jp
ret
xor
popa
mov
sbb
jne
scas
dec
cmc
dec
inc
xchg
inc
sbb
jne
rcrl
jp
imul
pop
cld
dec
cwtl
add
jae
xor
shrl
mov
xchg
fdivr
fdivp
es
cmp
loop
mov
inc
mov
test
lds
sub
push
mov
cmpsl
icebp
enter
loope
mov
sub
lcall
xchg
test
out
cmp
cld
ds
enter
and
jne
mov
ret
outsb
cltd
fcompl
and
and
xchg
orl
adc
sub
lea
xor
xchg
dec
sub
add
test
pusha
dec
mov
mov
pushf
and
scas
fwait
les
lods
and
scas
cli
jb
scas
scas
in
movl
and
xchg
fld
movsl
add
sub
mov
mov
or
ds
loopne
rcl
aad
inc
mov
out
jle
cmpb
fisubs
mov
push
fsubrp
push
sub
lret
dec
sti
push
bound
adc
cld
mov
fwait
hlt
pushf
cmpsl
lds
out
shlb
neg
leave
bnd
mov
pop
jle
xor
jbe
add
ret
je
inc
jae
addb
insl
pop
xlat
mov
ds
cli
les
mov
mov
add
cmp
roll
or
cmp
lea
pop
mov
fs
lock
loope
data16
sbb
popl
aad
xor
lahf
lret
lods
ss
pop
daa
dec
or
daa
fdivrp
aam
cmp
lods
in
stc
cmp
push
or
shll
and
popa
push
test
sub
mov
repnz
xor
imul
inc
adc
orl
pop
cmp
es
sbbb
cmp
adcl
xchg
mov
adc
das
lods
jmp
cmpsl
subb
lods
fs
aad
loopne
xor
dec
mul
mov
lcall
es
lret
mov
jmp
sbb
loop
push
imul
dec
or
in
pop
dec
out
sub
adcl
dec
pop
inc
dec
adc
add
out
sti
jge
adc
stos
pop
data16
push
jmp
sub
stc
or
push
sub
push
out
icebp
cmc
in
dec
lcall
enter
cmp
jns
into
push
fstl
nop
inc
sub
lods
pop
repnz
popf
jp
xor
setnp
cltd
mov
mov
push
nop
cmpsl
test
in
add
cwtl
mov
orl
sahf
addr16
adc
xchg
xor
pop
pop
xchg
data16
jg
cmp
sahf
in
mov
mov
xorl
mov
sub
jge
inc
cmp
lods
aad
lret
xchg
pop
rcll
mov
jno
test
popl
pop
mov
inc
sahf
mov
addb
mov
xchg
js
out
jbe
loop
pop
js
push
jne
addr16
pop
lret
incl
enter
xchg
push
xor
fs
and
mov
and
fsubrl
add
fmulp
inc
dec
flds
jg
push
push
cs
adc
movb
xchg
xchg
fisubrs
insb
nop
cmp
xchg
shll
scas
punpckhdq
fsts
mov
add
and
xor
dec
push
sub
andl
fistpll
adc
nop
mov
or
jne
cli
push
adc
test
xor
push
inc
clc
cltd
testl
sti
add
inc
mov
jp
out
mov
movsb
aam
push
push
testb
imul
mov
imul
ss
xchg
pop
aam
cmp
stos
inc
arpl
mov
js
jno
jl
repz
test
int3
cld
lock
xorl
pop
cmp
sbb
movsb
jns
xchg
push
fs
inc
and
imulb
mov
aad
nop
out
subl
pop
xchg
fildl
les
and
xor
ss
nop
inc
lret
mov
cmpsl
lahf
test
dec
cli
iret
popf
mov
pop
pop
mov
ljmp
pop
popf
daa
mov
inc
jmp
outsb
dec
xor
and
leave
das
jb
enter
sahf
sbb
aad
xor
jb
push
cmp
xchg
fstl
lret
popf
popa
addr16
xchg
sbb
push
push
inc
and
out
cmp
push
loope
xchg
flds
jle
sbb
addb
out
push
jg
push
sbb
push
mov
rolb
pop
aam
jle
xchg
add
and
pop
cmp
mov
sbb
popf
rclb
mov
lock
icebp
and
sbb
push
push
inc
cltd
mov
sbb
xor
push
dec
xorl
idiv
repnz
sbb
aam
incb
xor
arpl
dec
ja
divl
cmp
loope
orb
jmp
mov
and
je
mov
movl
fs
push
inc
in
jne
adc
ret
pop
data16
xor
mov
test
lahf
movsb
xchg
inc
pushf
pop
ret
jecxz
lahf
fs
sub
mov
add
pop
sti
add
push
push
fldt
cmp
jp
xorl
pop
sub
add
xor
in
xchg
sbb
inc
push
xlat
mov
je
enter
js
adc
adc
pop
sbb
test
jne
pop
mov
hlt
or
inc
lods
mov
dec
mov
cmpsb
or
fstp
pop
sbb
inc
bound
mov
pop
inc
stc
sbb
lea
cmp
mov
aad
pushf
cmp
xchg
stos
pop
pop
stc
mov
jnp
fdivp
and
dec
jae
adc
mov
lods
pop
jmp
nop
repz
xchg
and
in
or
mov
push
jle
loop
mov
lea
mov
xor
int
out
pop
and
shlb
mov
mov
pop
das
push
mov
inc
dec
push
ret
inc
arpl
cmp
xor
mov
in
pop
cli
idivl
inc
sarb
std
inc
out
mov
call
js
mov
repnz
xchg
jmp
iret
xchg
dec
mov
pusha
sbb
xor
jg
dec
and
daa
imul
nop
dec
sub
and
aas
int3
mov
or
fdivrs
out
fwait
xchg
rcrb
xchg
sbb
or
sbb
insb
lods
es
cmpb
dec
jl
outsl
mov
fistpll
gs
scas
sub
pop
lcall
imul
mov
sub
cmpsb
into
nop
add
or
gs
jecxz
lahf
sub
rclb
pusha
lret
pushf
testl
lea
or
xchg
loope
fisttps
leave
or
imul
inc
loope
ret
ss
mov
cmc
sarb
popf
rep
xchg
mov
sub
loopne
mov
cwtl
xor
jge
cmp
or
clc
push
mov
imulb
iret
sub
shl
dec
pop
mov
and
mov
xchg
inc
inc
mov
xchg
call
scas
stos
fsubr
scas
dec
aam
imul
sbb
in
jmp
insl
xchg
inc
or
sbb
mov
cs
rcrl
sarb
sbb
and
mov
xor
adc
fnstenv
or
adc
push
jae,pt
add
aas
sub
jae
scas
mov
xchg
dec
aam
sbb
pop
mov
imul
or
in
ljmp
mov
jnp
jb
or
fwait
testl
arpl
xor
xchg
ret
dec
mov
mov
test
mov
repz
adc
in
pop
ret
in
push
dec
cmp
pop
test
pop
rcr
adc
or
sbb
mov
mov
clc
cmp
mov
mov
cmp
inc
dec
mov
mov
dec
rolb
mov
jns
mov
sarb
mov
sub
mov
rcrl
cmp
enter
stc
cwtl
inc
insb
or
fsts
jle
cld
dec
cltd
jne
cmp
mov
mov
bound
mov
mov
and
mov
xlat
cmp
fsubrs
and
jb
arpl
and
sub
dec
es
add
fildll
xchg
notb
push
xor
outsl
mov
add
shll
int3
dec
fimull
aad
inc
lret
jecxz
std
cmp
stos
dec
mov
in
sahf
out
xlat
fwait
mov
dec
xchg
pop
sbb
cmpsb
xor
loope
scas
hlt
push
fwait
test
sti
into
repz
ds
pop
mov
sbbb
inc
push
adc
fdivrp
adc
out
mov
push
lods
xor
push
aam
pop
jmp
clc
push
jb
sub
mov
sbbb
loope
push
sbbb
add
cmpsl
pushf
stc
cmp
movsb
test
cmp
inc
xor
aaa
pop
test
cmpsb
lret
ret
fisubl
mov
sbb
ljmp
xchg
clc
xchg
pop
jae
call
je
lahf
mov
adc
jge
pop
popf
flds
sbb
pop
movsl
aas
ds
call
add
loop
push
data16
push
les
pop
loope
mov
aaa
push
pop
xchg
clc
xchg
mov
pushf
sub
push
inc
popf
dec
jmp
stos
subb
pinsrw
fs
data16
jbe
dec
fs
and
push
and
mov
xchg
outsb
fistpll
aam
lods
pop
es
es
dec
in
add
stos
cmp
dec
sbb
mov
ds
aas
jmp
mov
fnstcw
inc
xchg
popf
inc
clc
mov
fdivrl
int3
mov
nopl
inc
or
clc
lods
mov
xchg
jmp
sbb
outsl
dec
mov
rcll
push
rcrb
cmpsl
mov
dec
jl
pop
fwait
xor
and
xchg
xorb
or
fs
adc
mov
pop
daa
sub
lret
ret
shrl
mov
loop
dec
sbb
in
ret
cmpsl
scas
inc
out
faddl
jp
jmp
push
xor
cwtl
sub
mull
xor
jecxz
scas
mov
and
fmul
jg
mov
outsb
xchg
xchg
or
call
add
jg
test
xchg
mov
push
scas
test
mov
xlat
add
mov
xchg
sbb
mov
das
adc
ljmp
mov
pop
aad
add
sub
sbb
dec
dec
push
out
or
jp
mov
js
dec
dec
bnd
out
fs
std
in
rorb
cmpsb
adc
xchg
sbb
or
addb
push
test
add
cmp
loope
push
pop
sbbb
pop
fstpl
mov
jl
mov
xor
and
cmp
inc
and
decb
sbb
jno
testl
jmp
jnp
ds
movaps
and
movsb
jecxz
xor
jbe
sub
lcall
lds
lds
int
jnp
mov
dec
mov
test
idivb
push
sub
outsb
addr16
stos
cmc
jbe
mov
es
lcall
rclb
sub
rcrl
and
insb
sbb
addr16
loop
jb
leave
mov
je
pop
inc
out
inc
in
mov
adc
je
cmp
add
push
add
outsl
out
xchg
pop
jbe
imul
aaa
or
ss
mov
pushf
lods
xchg
jns
movsl
mov
sbb
cmpsb
dec
icebp
sbb
mov
or
xchg
frstor
nop
lock
mov
lods
test
pop
sub
shl
loop
cltd
out
out
sbb
pop
push
mov
insb
fdiv
jnp
adc
bound
or
and
jge
push
ret
ss
or
test
push
mov
sub
cs
adc
ret
jl
push
push
enter
mov
mov
lret
popa
pushf
call
stos
fisubrs
adc
jne
push
test
sub
push
push
cmp
std
mov
push
sub
inc
add
repnz
sbbb
fildl
jno
mov
insl
mov
mov
js
nop
sub
mov
pop
xor
add
jge
pop
pusha
lret
mov
dec
ljmp
inc
das
std
lods
mov
fcoms
sbb
and
pop
leave
jne
ret
jl
push
jp
or
and
push
lds
cltd
daa
es
enter
daa
jo
and
mov
cmc
xor
dec
mov
aad
pop
mov
int3
jae
adc
pop
fxam
repnz
xchg
mov
psadbw
xor
cmp
ljmp
pop
rolb
cmc
lret
pop
mov
xor
xchg
push
or
out
push
jnp
xchg
out
mov
fstps
xlat
inc
ljmp
ret
mov
outsl
push
mov
aad
dec
pop
pop
push
inc
cmp
mov
sbb
xor
psrld
rclb
js
add
cltd
shr
xchg
mov
lret
dec
or
lods
imul
sub
aas
adc
pop
mov
adc
loopne
mov
cld
jmp
mov
insb
cli
loop
push
lods
dec
jmp
dec
scas
ret
xchg
imul
aam
mov
inc
xchg
jecxz
jae
dec
push
addr16
xchg
push
jge
jb
push
push
pop
xchg
or
idivb
or
sub
pusha
xlat
mov
ds
push
hlt
imul
adc
dec
cmp
cmp
mov
iret
lcall
sbbb
adc
mov
icebp
pop
mov
stc
xlat
out
repnz
jae
lock
push
lods
sub
sbb
call
or
cwtl
adc
mov
lcall
push
lock
or
xchg
jmp
decb
push
popf
ss
inc
jecxz
clc
movsl
mov
les
out
addb
lods
stos
pop
mov
insb
adc
dec
xchg
std
jnp
push
xchg
or
enter
push
outsb
mov
adc
pop
lock
fists
jg
sbb
mov
addr16
dec
pop
mov
fld
dec
mov
dec
jno
ss
xchg
aad
cmp
lock
rolw
push
sbb
jne
xchg
dec
dec
sub
sub
lahf
mov
add
and
sub
rclb
mov
cmp
imul
int3
fwait
mov
or
mov
and
pop
sbb
mov
not
dec
mov
psadbw
aad
or
dec
addb
sbbb
ljmp
mov
mov
push
andb
or
mov
mov
outsl
int3
test
pop
popa
mov
test
ljmp
into
jg
lret
sub
mov
sub
rcr
ja
mov
dec
push
bnd
daa
pop
leave
popf
and
repnz
ds
into
or
es
mov
mov
int3
jo
xchg
mov
imul
outsl
adc
scas
pop
cmp
sbb
ja
sub
aas
sbb
arpl
and
sbb
daa
aam
out
pusha
out
fisubrs
pop
lea
stc
lret
call
stos
and
cmpsb
rorl
ror
ljmp
cmp
add
into
fnstenv
lods
inc
and
inc
rcrb
or
inc
and
stos
push
aad
mov
dec
pop
ja
aaa
movsb
fimull
add
and
ja
test
jnp
sbb
cltd
jle
sbb
repz
inc
popf
int3
aad
pop
pushf
add
sub
adc
mov
test
shl
adc
pop
mov
adc
mov
inc
pop
or
jno
popf
nop
fidivrs
and
mov
in
dec
push
fisubs
aaa
mov
fs
or
daa
stc
cmc
cli
lcall
sbb
in
test
push
ljmp
jmp
mov
add
pusha
data16
mov
test
je
sarb
mov
cli
std
push
inc
inc
fucomi
repz
lret
insb
loop
pop
mov
or
movsb
adc
fcoms
dec
mov
out
rorb
mov
sub
inc
stos
outsb
mov
in
out
sub
sub
adc
scas
cmpsl
daa
jb
mov
push
orb
loop
jl
fwait
fwait
iret
adc
das
xor
xor
movsl
in
push
inc
adc
repnz
add
decb
xchg
and
xor
pop
mov
mov
aad
enter
clc
mov
xor
ljmp
out
ja
push
cmp
mov
bound
es
cmpsb
ficoms
lea
dec
clc
mov
insl
mov
mov
pop
xchg
mov
mov
jne
or
or
mov
mov
shl
shlb
fstcw
cmp
ficoml
enter
xchg
mov
in
mov
and
repnz
jne
push
xchg
repz
inc
sbb
ficomps
mov
fwait
cwtl
mov
leave
add
lods
xchg
jno
mov
vpmulhuw
sysret
aad
jmp
cmp
shr
inc
xor
test
jl
cmpl
dec
ret
jmp
inc
cmp
mul
dec
jbe
mul
imull
adc
push
sub
leave
loopne
xlat
dec
pusha
bound
stos
shrl
inc
in
sub
mov
and
mov
mov
xlat
nop
movsb
mov
add
mov
sar
sbbl
jns
jb
les
mov
jbe
mov
jne
stos
fldl
in
out
xchg
pop
xor
mov
jo
push
lds
push
in
shrb
xchg
insl
mov
loope
into
int
and
push
inc
cwtl
loopne
xlat
add
mov
add
in
cmc
inc
sub
and
in
in
push
pop
pop
int3
lgs
ret
lret
jmp
adc
stos
lods
mov
push
or
adc
adc
divl
ds
lods
ficoms
dec
pop
cmpsl
arpl
sbb
xlat
sbb
imul
jbe
mov
cwtl
negl
cld
push
and
sub
fnstenv
aas
adc
xor
popf
pop
lods
push
outsb
daa
iret
mov
jnp
filds
arpl
dec
jne
ret
fistps
jnp
add
inc
insl
test
stos
jo
dec
cs
cmp
arpl
or
mov
aaa
push
mov
and
jge
jns
outsb
movsb
mov
ljmp
mov
je
jnp
jbe
ja
mov
xor
stc
adc
icebp
xor
xor
es
call
cld
jle
mov
ror
outsl
mov
movsb
mov
imul
jno
xchg
jb
lods
sub
cmp
data16
hlt
cmp
mov
cwtl
shlb
mov
pushf
sti
paddq
dec
dec
ds
sbb
mov
push
sbb
add
xchg
fstl
pop
inc
icebp
out
mov
andl
insl
mov
call
lahf
out
dec
jg
popa
xchg
add
adc
cld
adc
repz
scas
vmwrite
cmp
test
ja
adc
test
sub
dec
loope
sbb
std
andb
lock
scas
mov
outsb
push
cmp
loope
test
sti
ret
dec
test
test
jno
mov
rolb
and
xor
loopne
aad
lds
jae
xchg
pop
jl
icebp
test
std
adc
pop
repz
or
xchg
add
test
insl
dec
sbb
dec
sbb
or
add
mov
mov
fcoml
mov
in
imul
loope
rcrl
cmp
add
push
in
aad
inc
insb
inc
setl
sbb
jne
and
imul
out
add
jbe
jnp
add
push
decb
mov
out
push
icebp
adc
inc
jns
je
sub
jbe
aad
push
cmpsb
stos
imul
bound
lods
and
mov
into
cmp
mov
mov
pop
xchg
xchg
mov
sub
adc
dec
testb
repnz
rdpmc
icebp
lret
inc
push
xor
push
xlat
jno
cli
mov
pusha
stos
je
xor
mov
lods
push
shll
mov
xchg
adc
push
add
or
pop
rolb
fbld
jle
jmp
ret
shlb
test
dec
xchg
inc
sti
lods
aas
lods
dec
out
jmp
mov
sub
aam
add
and
fstpt
nop
movsl
addl
inc
pop
pop
sub
inc
lret
and
add
in
xchg
fisttps
add
outsl
fsubr
xorl
lods
loope
adc
push
stos
stos
xor
std
inc
cld
mov
lods
add
into
add
push
xchg
scas
lret
mov
rcl
pop
sub
dec
repnz
outsb
push
add
xorb
push
ja
out
mov
or
mov
mov
adcb
arpl
iret
push
xchg
loopne
mov
xchg
jb
and
in
mov
test
ret
add
lahf
mov
iret
push
xchg
xor
in
pop
popa
fisubrs
adc
std
shll
ljmp
movd
clc
repnz
add
call
push
shrb
shll
ja
andl
dec
clc
inc
pop
shll
jae
sub
pop
xchg
mov
and
mov
xchg
or
mov
in
xor
mov
sahf
xchg
lcall
xor
loopne
shrl
mov
adc
lret
jne
data16
inc
fidivrs
sbb
fistpll
or
push
push
sub
in
mov
je
sub
orb
and
lret
push
dec
addr16
std
aam
mov
dec
adcb
sub
stos
repnz
or
xchg
push
stos
fwait
pop
sub
call
fwait
lcall
xchg
pushl
sbb
sbb
push
lods
or
adc
sub
icebp
mov
inc
dec
jno
call
sbb
cmp
pop
jl
outsb
dec
push
sub
mov
sub
jnp
stos
sub
jne
pop
mov
sarb
mov
mov
mov
mov
cltd
or
sbb
nop
out
mov
pop
fldenv
adc
or
jmp
cld
inc
mov
jl
ret
out
fbstp
cmpsl
int
dec
or
jmp
scas
popf
shl
call
cmp
or
std
ret
shlb
dec
sbb
daa
loopne
inc
jp
xchg
pop
popf
jmp
or
pop
daa
popa
movsb
fimuls
mov
cmp
in
dec
fimull
mov
and
cmc
sub
sub
cwtl
xorb
outsl
fiaddl
test
adc
mulb
cli
fcoms
and
pop
ds
call
cmpl
cmpsb
scas
mov
jg
jecxz
adc
mov
pop
jle
jnp
push
fsubrl
push
inc
or
or
cld
arpl
arpl
xchg
push
ljmp
inc
jmp
pop
insb
lahf
adc
sbb
and
jl
xor
daa
pop
jg
in
push
xchg
lea
mov
pop
out
jbe
xchg
sub
insb
add
cld
add
push
cmp
lahf
sub
xchg
aaa
mov
push
mov
fldenv
nop
sub
jbe
aam
push
pop
outsl
andl
pop
cmpsb
daa
popa
lcall
adcl
sub
sahf
test
int
adc
mov
bound
cmpl
aam
mov
mov
mov
mov
mov
add
leave
mov
icebp
pop
rorl
repz
in
dec
sbb
cmpsb
gs
inc
push
inc
inc
in
sahf
xchg
lret
leave
sbb
add
mov
xor
cmp
dec
shlb
mov
loopne
insb
decb
pusha
cmpsb
lods
ret
xor
hlt
pop
test
dec
mov
xchg
xlat
mov
andl
adc
nop
xor
jge
jb
mov
mov
or
sub
xor
popf
add
filds
mov
leave
es
test
pop
push
jp
pushf
or
push
push
test
imul
gs
lcall
int3
repnz
adc
sbb
aaa
js
daa
inc
push
push
or
lret
cmp
jecxz
aam
adc
out
add
jp
les
jo
mov
lret
add
push
lcall
cwtl
push
int
sub
cld
mov
push
fs
xchg
rolb
pop
lea
xor
mov
sub
xor
gs
into
cmp
mov
lahf
inc
add
mov
lcall
in
fwait
test
inc
cwtl
fdivrs
lods
imul
leave
cmp
ret
sub
mov
cmp
leave
sub
das
aam
cmpsb
jae,pt
ds
stc
insl
add
aaa
fs
shlb
fstp
jl
jge
outsb
inc
mov
in
xlat
sbb
xlat
iret
xchg
mov
xchg
push
pusha
incb
clc
shlb
dec
and
xor
gs
aaa
adc
adc
cmpsb
cld
xchg
cmp
out
jmp
iret
loopne
or
dec
push
cmpsb
std
sbb
cltd
inc
pop
cmc
lcall
cmp
scas
andb
add
dec
lcall
ret
ja
or
xor
sub
fldt
pop
movsb
mov
cmp
les
mov
push
movaps
loop
das
push
sub
dec
scas
bnd
mov
jecxz
addr16
inc
sub
dec
pop
push
lds
adc
cltd
scas
xor
lret
xchg
and
lahf
roll
jbe
adc
sub
xchg
movhps
pushl
xchg
out
clc
das
mov
fisubl
mov
and
cmp
adc
orb
dec
lods
sbb
sub
cld
inc
xchg
jle
lods
call
mov
shlb
mov
test
jl
aad
sbb
adc
mov
xchg
shll
cmpsl
ret
push
or
dec
gs
dec
aam
fidivs
cmpsb
pop
in
lods
lret
push
xor
call
ds
and
cwtl
mov
jno
sub
mov
lds
test
hlt
and
scas
lcall
mov
jecxz
hlt
and
mov
add
adc
inc
mov
and
mov
lahf
dec
cmp
or
sbb
push
fimuls
xchg
pusha
mov
mov
inc
adc
inc
pop
add
push
je
frstor
mov
or
xor
mov
jle
pop
dec
shrl
add
ret
mov
bound
das
lods
rorb
or
pop
iret
lret
ds
xchg
jmp
lods
jae
scas
jp
data16
push
mov
jo
js
fists
mov
movsb
xchg
fnsave
hlt
dec
xor
inc
out
sub
push
jns
rolb
push
add
in
loop
sbb
sub
jae
jp
insl
fstpt
push
mov
inc
hlt
in
shrb
addl
nop
mov
je
mov
in
cmp
lahf
mov
cli
jecxz
daa
loopne
adc
out
std
rcr
xchg
jae
pop
les
pop
inc
or
mov
rcll
in
rolb
mov
lret
arpl
xor
sbb
xchg
das
int3
add
push
fwait
adc
dec
mov
pop
int3
clc
xor
mov
adc
nop
cmp
pop
sbb
sub
imul
and
push
in
inc
mov
pop
add
cmp
jp
adc
lret
mov
add
fwait
pop
jns
or
jg
dec
rcrl
leave
lods
movsb
mov
ja
int
inc
inc
out
dec
psllq
xchg
fwait
call
scas
mov
scas
mov
jmp
jge
sub
jmp
add
les
xlat
inc
es
dec
lcall
mov
inc
xchg
cmp
cmp
mov
or
test
mov
sub
jo
xchg
adc
testl
ja,pt
pop
jne
mov
into
inc
aam
jecxz
jge
jo
adc
call
sbb
and
xchg
mov
inc
xor
es
push
pop
stc
pop
outsl
push
push
cs
and
lret
adcb
inc
addr16
jl
scas
arpl
xor
repnz
jl
outsl
cmp
lods
je
in
adcl
roll
imul
fnsetpm(287
sub
ss
lock
in
mov
or
jecxz
ret
push
sub
hlt
test
jmp
sbb
shrl
jns
sbb
or
jae,pt
adc
into
outsl
popf
xchg
loope
jns
jne
jmp
sbb
stc
es
popfw
fisttps
addl
pop
xor
sbb
lods
stos
or
jns
jae
inc
adcl
nop
test
or
ljmp
mov
adc
push
push
and
jecxz
les
cmp
or
xor
lahf
push
pusha
pop
mov
mov
pusha
inc
mov
inc
dec
adc
jne
xchg
dec
jecxz
inc
push
cmpsl
mov
pusha
push
sub
mov
in
scas
mov
sti
xlat
cmp
and
inc
insl
inc
push
mov
cli
lods
and
push
leave
jge
std
inc
leave
inc
js
push
add
fadds
clc
sub
hlt
jmp
jbe
pop
jno
aad
cmpsl
or
rcll
dec
fbstp
xor
mov
dec
sub
mov
iret
jb
xchg
jp
lcall
pushw
sub
dec
sub
mov
mov
mov
movsb
inc
mov
sbb
jne
adc
jmp
push
cltd
mov
pop
mov
inc
test
jbe
int3
test
inc
or
aas
inc
movsl
mov
cmp
mov
daa
ret
fistpll
jmp
cltd
xlat
leave
movsb
hlt
adc
mov
mov
or
or
filds
aas
inc
out
addr16
scas
aaa
jp
adc
jg
push
mov
mov
add
out
jmp
cmpsl
call
jne
pop
or
adc
cmp
lea
mov
rcll
or
jp
out
aas
outsl
xchg
fs
push
adc
hlt
pop
xchg
sub
clc
and
shlb
jnp
aaa
mov
mov
repnz
xchg
inc
aam
pop
bound
test
mov
mov
imul
and
in
sub
loop
out
lret
mul
xor
test
pop
mov
adc
nop
call
call
adc
jns
test
xchg
xchg
fs
pusha
imul
push
push
rcl
orb
cltd
adc
in
xchg
and
push
pop
xor
jne
mov
lret
gs
inc
jge
sbbl
mov
add
es
mov
xor
insl
push
push
sub
xor
mov
cwtl
ss
mull
popf
mov
mov
jo
sub
xchg
test
dec
lahf
mov
mov
or
loop
ficoml
inc
cmpsl
addr16
adc
clc
mov
addr16
and
hlt
ret
js
jns
mov
dec
mov
xor
fnstenv
lods
in
lret
cmc
lock
xor
lods
repz
xchg
fs
and
push
clc
mov
cmp
jge
pop
cmc
dec
and
cli
push
dec
or
es
and
push
pop
push
push
imul
in
xchg
mov
aas
add
dec
hlt
mov
ja
movl
in
das
cwtl
test
shl
rorl
adc
ss
cwtl
mov
dec
popa
iret
xor
sub
push
or
jo
xchg
mov
mov
bound
adc
cmp
movsb
in
dec
clc
out
dec
add
dec
jp
xor
dec
add
cmpsl
fldenv
movsl
ss
loop
lds
mov
and
xlat
cld
and
clc
je
das
push
in
nop
mov
and
mov
jle
je
in
sti
jecxz
inc
push
mov
rorb
or
xchg
pop
fstl
mov
xchg
mov
pusha
lahf
les
test
lcall
jno
cmp
pop
sub
jecxz
mov
adc
sub
jmp
aam
fmuls
pop
fs
jbe
rolb
cmp
dec
sarb
pop
xor
mov
btc
mov
stos
xchg
xorb
ret
pop
jo
pop
mov
mov
inc
inc
inc
cmpsl
sbb
mov
pop
lcall
cltd
scas
ja
dec
cmp
loopne
add
xchg
loop
daa
nop
or
xchg
stos
mov
xchg
mov
sbb
push
add
lahf
mov
lea
rorl
pop
cld
lahf
xor
pusha
mov
mov
sti
jp
pop
push
mov
fistpl
xchg
fdivl
sub
aaa
ja
cmc
popa
jle
and
rcrb
xor
dec
mov
stc
inc
jecxz
outsb
fwait
push
enterw
mov
call
or
push
movsb
aaa
mov
mov
mov
jbe
xor
jo
adc
xor
test
jmp
jo
sahf
cmpsl
mov
repnz
mov
push
inc
jl,pt
and
jmp
orb
mov
notb
xchg
lods
mov
ret
push
push
sub
jns
ret
int3
jne
and
cltd
sahf
push
fnstcw
sbb
imul
push
sub
mov
mov
mov
test
jae
push
out
jo
rcr
jbe
addl
push
add
sub
popl
sti
divl
add
out
pandn
inc
sbb
mov
movsl
mov
xchg
leave
dec
icebp
int3
and
push
cmc
cmpsb
sar
push
scas
pop
lcall
or
aaa
or
out
inc
iret
outsl
adc
mov
cmp
and
loop
adc
lea
jp
mov
rclb
es
pusha
addr16
and
xchg
or
mov
xchg
mov
aad
mov
js
pop
adc
stos
sbb
jp
pusha
fwait
test
loope
xor
jne
loope
xchg
mov
inc
je
aas
fistpl
movsb
ret
test
test
pushf
dec
lcall
sub
testl
xchg
mov
pop
xor
jecxz
adc
ljmp
incb
add
leave
movsl
push
add
mov
inc
cmp
lahf
push
push
out
shlb
popf
mov
ja
fsub
addl
jle
leave
xchg
mov
nop
and
jle
divl
arpl
and
adc
xchg
xchg
adc
shll
fistl
adc
int3
sahf
inc
sbb
loopnew
int
insb
jg
sarl
jl
mov
jecxz
loopne
jns
xchg
mov
dec
cli
xchg
loope
scas
push
in
out
add
jp
aam
stos
outsb
push
and
pop
or
cli
scas
and
sub
shlb
sub
pop
fildll
and
dec
jp
jecxz
xchg
or
add
inc
aaa
fidivrs
testb
adc
or
stos
dec
fldcw
xchg
push
push
imulb
mov
lret
aam
sbb
pop
push
fstpl
sbb
dec
xor
add
nop
sbb
fstl
mov
fstps
add
xchg
mov
cltd
and
mov
add
jp
jp
hlt
adc
mov
sub
stos
mov
cmc
ljmp
pop
lcall
xchg
sahf
mov
jae
lret
gs
mov
nop
mov
xor
aaa
xchg
repz
loopne
sbb
ljmp
adc
xor
clc
call
pop
daa
xchg
sahf
leave
mov
incl
and
mov
and
fucomp
imul
mov
lock
dec
test
mov
enter
lret
into
fsubr
adc
inc
mov
xor
xchg
fwait
mov
pop
movsl
popa
pop
push
pop
push
xchg
push
sub
mov
mov
fcmovnb
jmp
cmp
inc
aaa
int
imul
adc
int3
outsl
mov
ret
mov
lock
push
mov
aam
mov
mov
or
xchg
push
push
cmpsl
das
loop
fwait
cmc
test
cmp
add
cmp
cmp
mov
adcl
nop
das
inc
sub
aas
int
ret
add
push
or
leave
xor
ljmp
inc
cmp
and
lcall
inc
adc
js
mov
movl
sbb
mov
add
cmpsl
sbb
mov
add
popa
pop
push
iret
clc
sbb
in
mov
stos
push
and
push
push
es
push
add
stos
stos
push
adcl
or
int
cmp
lock
mov
icebp
lods
cmp
xchg
xchg
cld
shl
cli
dec
lods
insl
adc
int
pop
jns
fcomps
mov
jne
dec
dec
lret
xchg
into
jne
bound
clc
call
mov
popf
ret
enter
xchg
sahf
mov
add
mov
sub
jl
xchg
or
imulb
cli
xchg
out
cli
inc
mov
adc
fs
sub
push
mov
bound
mov
imul
xchg
popf
push
jmp
mov
cli
iret
pop
inc
testb
sub
add
push
dec
rolb
inc
test
mov
pop
sbb
inc
imul
inc
or
mov
mov
mov
xor
lea
imul
pop
pop
stos
repnz
data16
scas
push
adc
nop
addr16
aas
xchg
mov
fwait
int
inc
rcrb
sarl
add
out
add
fdivrs
sub
nop
or
aam
sub
xchg
fstps
int
dec
and
and
push
aad
sbb
push
out
ljmp
out
inc
push
dec
xor
imul
mov
cltd
lret
outsb
loope
repz
dec
or
inc
inc
mov
stc
mov
sub
lock
cltd
rol
fcomip
xchg
push
dec
mull
sub
inc
into
xchg
sub
lahf
jnp
or
add
mov
add
push
mov
push
pop
iret
imul
mov
daa
cld
hlt
hlt
nop
int
lds
xchg
clc
pop
popa
leave
jno
mov
clc
idivb
sbb
inc
adc
testb
sub
jbe
sub
xor
xchg
inc
and
pop
andl
jecxz
push
insl
push
mov
mov
sahf
sub
push
or
push
ljmp
or
dec
lret
add
inc
mov
lret
dec
or
adc
cmpxchg
adc
cld
or
es
negb
mov
dec
cmc
jge
imul
out
je
cmp
mov
dec
into
ficoms
or
cmc
lds
push
outsb
mov
daa
leave
fwait
aad
adc
loope
mov
push
das
cltd
loopne
rcl
mov
imul
and
outsb
insb
ret
mov
mov
and
push
jno
test
rcll
aas
xchg
gs
xchg
lock
mov
xor
xchg
fcom
push
jge
in
or
lock
mov
mov
add
adc
lea
push
dec
lahf
mov
or
inc
xchg
and
pushf
out
jecxz
and
popa
shlb
leave
les
filds
dec
fdiv
out
sbb
arpl
les
pop
mov
dec
cs
aam
nop
mov
inc
inc
clc
shl
mov
fxch
data16
xlat
fnclex
mov
ss
pop
mov
ja
jle
jae
pop
cmpsl
adc
xor
dec
mov
insl
pop
ss
aam
mov
adc
push
lea
ret
cmp
fisttpll
mov
inc
lods
ss
jo
rorl
pop
sub
popa
mov
out
inc
dec
jne
test
cwtl
in
mov
inc
hlt
mov
inc
mov
dec
and
loop
mov
data16
sahf
loop
sbb
mov
mov
ret
and
mov
popa
paddq
out
pop
dec
shlb
pusha
pop
sti
pop
rep
adc
cwtl
data16
xchg
stos
dec
dec
or
and
stos
es
stos
rorb
xor
mov
ficompl
imul
out
push
dec
add
mov
mov
add
xor
fcom
ljmp
jo
vcvtpd2psx
fistps
inc
pop
loop
push
test
out
push
jne
stos
rolb
dec
push
jo
mov
aaa
xchg
mov
nop
pushf
xlat
push
cmpsb
mov
mov
gs
push
or
rcrb
aad
daa
or
fs
xchg
push
xor
enter
cmc
movsl
int
icebp
jnp
sahf
fbld
mov
sti
popa
into
vcvtps2pd
cmc
cmpl
jb
lea
cmp
sbb
and
sub
test
add
loopne
lds
out
sbb
sub
xor
and
outsl
je
jnp
sbb
lea
in
sbb
cwtl
jmp
lcall
iret
sub
popf
sbb
xchg
fimull
dec
movsl
js
cmpsb
scas
add
stos
inc
orl
int3
fists
fisttpl
in
dec
iret
xor
enter
adc
jp
push
in
and
adc
push
call
dec
inc
call
mov
jecxz
jg
gs
int
mov
xchg
and
mov
out
scas
shl
nop
pop
inc
push
mov
sti
jp
pop
in
frstor
ret
ret
push
adc
fs
and
inc
fcompl
pop
int
mov
mov
nop
outsl
in
adc
loop
mov
dec
or
lea
insl
lds
aas
sbb
arpl
out
ret
push
push
ret
inc
adc
xor
adc
dec
inc
mov
ret
jmp
sbb
ja
sub
ficoml
sahf
test
xchg
stc
test
inc
nop
pop
xchg
fisttpll
sbb
les
aad
cmpsb
xor
mov
ds
and
loop
stos
cmpsb
sbb
mov
fwait
cltd
adc
aam
pop
gs
sahf
inc
sub
add
test
sub
dec
decl
shl
pop
lahf
mov
ret
sbb
push
sbbl
cld
gs
cmpsl
and
adc
rcrl
mov
inc
rol
inc
sbb
icebp
sbb
jl
mulb
sbb
iret
js
and
icebp
int3
test
jb
lods
test
cmc
adc
mov
or
and
push
mov
and
push
sub
add
pop
das
lods
pop
add
mov
inc
fwait
inc
and
fldt
rorl
imul
call
dec
jmp
outsb
loopne
mov
adc
test
inc
adc
jns
cmp
insl
std
and
cmpb
ja
add
movsb
aas
dec
jbe
fs
jle
into
adc
inc
enter
sbb
inc
lock
in
out
mov
inc
ljmp
outsl
or
cmpsl
push
dec
push
int3
or
insl
push
loop
push
fldcw
rorb
add
push
lock
add
data16
jbe
pop
test
aaa
pop
mov
call
pop
insl
xor
outsb
adc
fdivrl
iret
jne
push
jge
and
xchg
sub
pushl
clc
dec
loop
gs
cld
outsb
loopne
and
push
daa
sbb
jns
mov
pop
mov
mov
stos
lahf
push
scas
pop
or
sub
mov
iret
dec
jg
cmp
mov
jmp
cmp
and
outsl
add
push
sti
or
pop
data16
mov
fucom
dec
xor
cli
mov
jnp
mov
jle
xchg
jae
push
jl
stc
push
xor
jo
pop
insl
xor
mov
push
adc
mov
mov
ror
fbld
cltd
es
adc
xchg
adc
or
jnp
inc
mov
hlt
into
sub
pusha
push
add
ficompl
fisttps
xchg
stos
pop
imul
test
xchg
xor
or
xchg
inc
dec
fildll
jmp
or
xchg
adc
leave
ficompl
mov
js
add
add
and
sbb
mov
push
pop
cmpsl
mov
fildll
aam
sarl
and
lods
jle
xor
sub
mov
xchg
xchg
or
and
adc
fscale
jb
lcall
dec
add
out
lods
push
scas
jle
roll
ljmp
pushf
push
insl
inc
xor
into
add
jnp
ja
adc
and
xor
add
mov
and
sbb
stc
fistps
arpl
loope
sbb
popa
cli
push
sti
mov
lods
dec
mov
aam
stos
ds
xor
cld
adc
popf
jne
out
xor
or
sub
fcom
outsl
int3
testb
rcll
lret
lods
daa
pop
ds
mov
mov
cmp
xor
push
insb
cmp
int3
outsb
mov
js
enter
xor
sbb
shll
mov
aad
out
mov
int
fsubrl
mov
aad
and
nop
in
rorl
dec
daa
aad
lds
pop
ss
cmpsb
outsb
inc
repz
mov
lds
test
add
ja
in
dec
adc
sub
dec
fimuls
lahf
mov
lret
cmp
push
aaa
popl
push
or
sbb
cmp
push
cmp
fmuls
call
push
pop
add
inc
cld
cmp
sbb
push
je
and
add
pop
enter
inc
sub
loopne
xor
repnz
movb
pop
enter
pop
jecxz
sahf
aad
dec
movsb
xchg
rorb
lds
movsb
in
ficompl
or
sbb
repz
xor
arpl
ret
cmp
sarl
test
enter
rcll
es
cmp
aas
fildl
and
mov
rcrb
sbb
cmc
jecxz
test
and
jns
xorb
mov
xor
mov
and
mov
sub
dec
mov
pop
iret
loopne
inc
bound
jg
lcall
sbb
sub
pop
push
cmpl
pop
xchg
dec
adc
icebp
out
add
or
mov
out
sbb
icebp
mov
es
pop
ret
cmpsb
jp
push
popf
enter
cmc
xor
aam
fwait
ja
sub
stos
fildll
push
xor
jno
cmp
jae
hlt
xlat
in
or
jae
insb
ret
xchg
ds
dec
mov
mov
dec
pop
lret
shrb
rcr
aad
lret
and
jle
dec
popf
aam
js
pop
call
ficoms
cli
fs
mov
out
rcrl
int3
cs
mov
arpl
out
aaa
mov
jg
loopne
or
adc
pop
mov
jle
shll
lods
fwait
xchg
mov
xchg
jbe
and
aad
and
clc
stc
jae
adc
cmpsb
push
cmp
jmp
out
shrb
xchg
add
scas
pop
fcoms
pop
xchg
cmp
mov
mov
jle
out
in
adc
jge
pop
mov
fsubrs
and
jnp
adc
inc
shl
pop
dec
xor
push
and
or
push
popa
xchg
stos
movsl
test
pavgw
rcrb
lock
into
cmpsl
outsl
xchg
mov
jecxz
xchg
push
adcl
mov
or
jl
jbe
add
sub
adc
mov
inc
and
sub
mov
call
pop
rclb
test
lret
test
pusha
jp
mov
popf
sarb
sub
xlat
aas
mov
repz
lods
test
push
cmp
xchg
pushf
outsb
cmp
arpl
adc
push
jg
lock
sbb
mov
pusha
rorl
lods
shr
add
leave
cltd
aad
int
push
xchg
inc
and
movsb
les
fsubl
rcr
xchg
and
xor
inc
or
popa
pop
lods
mov
lret
jbe
or
jbe
pop
inc
ja
add
xchg
xlat
mov
or
jle
ss
push
clc
mov
mov
adcb
dec
mov
test
insl
xchg
stos
mov
xor
je
cmp
cltd
ja
jnp
xchg
mov
cmp
stos
push
jge
mov
das
imul
sub
outsb
lock
stc
xchg
or
dec
pop
xchg
cmc
xchg
sbb
div
push
mov
dec
mov
xor
or
sub
lea
cmp
mov
lahf
data16
mov
jle
xchg
out
fldl
lods
shll
das
pop
jnp
arpl
popa
jecxz
rdpmc
data16
cmp
cmpsl
add
add
push
jno
cmp
push
aad
jl
ficomps
jno
mov
dec
or
mov
sbb
es
or
jae
cli
rcl
xchg
cmpsb
pushf
or
inc
inc
xchg
fwait
xchg
sub
mov
sar
inc
pop
mov
pop
shll
out
mov
inc
or
and
test
mov
arpl
popf
scas
xor
inc
or
out
shl
xchg
addb
jae
mov
push
push
enter
pop
out
ss
mov
lock
sbb
ret
das
es
js
add
push
mov
sub
mov
shrl
mov
shll
pushf
or
dec
loopne
rcrb
or
jnp
mov
nop
data16
xor
push
std
fwait
push
int3
scas
leave
push
daa
retw
jl
add
leave
scas
cltd
pusha
cmp
enter
fnstenv
ss
cli
je
mov
xchg
and
or
movsb
mov
xor
xlat
imul
cmpsl
enter
cmp
add
or
xor
cli
xchg
mov
cmp
pop
sub
mov
std
cmpsb
xor
mov
popf
shrb
clc
sahf
iret
xor
mov
insl
clc
xchg
test
or
pop
lds
gs
and
dec
data16
mov
ret
xchg
bound
sar
jnp
pusha
int3
es
loopne
subb
mov
dec
push
sbb
jnp
pusha
aaa
inc
mov
outsl
mov
sahf
ja
xchg
mov
push
dec
cs
jae
gs
sbb
adc
fnstsw
inc
dec
xor
int
mov
and
subl
addb
inc
arpl
cmp
push
inc
call
sub
es
adc
sbb
vmwrite
loop
cmpsl
xor
xor
mov
push
xchg
push
pop
cmp
sahf
push
cmpsl
lock
cmp
and
js
mov
xchg
cltd
js
jb
sub
and
add
pop
cmpsl
pop
mov
adc
jb
push
sub
mov
gs
jnp
push
and
test
dec
popf
or
or
pop
stos
test
idivl
mov
dec
outsl
and
cmc
fwait
mov
ret
popf
xor
mov
loopne
adcl
mov
inc
push
cmpsl
sarl
inc
cld
mov
mov
cmpsb
sub
cld
jb
adc
xchg
mov
aaa
hlt
and
arpl
cmp
and
inc
dec
cmp
cmp
aas
adc
ds
pop
cmp
cmc
inc
ret
orb
popf
xor
dec
popa
jbe
cmp
shr
call
adc
aas
and
ljmp
ret
inc
push
xchg
hlt
sbb
or
fisttpl
repnz
or
mov
enter
enter
in
adc
int
sub
fsubl
add
push
inc
sbbb
out
rcrl
rcll
xor
push
mov
inc
xor
out
imull
pop
dec
pop
das
addr16
jno
cmp
lret
lea
gs
aam
jl
rcrb
jg
sub
xor
dec
sbb
insl
pusha
lds
jae
jno
lods
fmuls
in
push
sti
sbb
cmp
xchg
movsl
in
test
inc
loope
imul
js
push
sub
dec
pop
inc
and
inc
push
pop
sub
out
xchg
add
arpl
cmp
cmp
popf
sti
out
push
add
mov
mov
mov
lcall
add
xor
std
jecxz
std
cmp
andb
add
ffreep
add
adc
xor
jne
dec
add
in
popa
xchg
ss
xchg
cld
push
add
sti
int
sahf
stos
push
pop
and
repz
decl
sub
outsb
jns
push
jmp
popa
fisubl
jle
adc
into
pushf
push
fwait
outsl
rol
bound
repz
cmp
jge
sub
push
mov
xchg
out
adc
notb
inc
incl
pop
fsubs
sbb
ljmp
sub
leave
push
xchg
and
pop
out
jns
addl
mov
shrb
mov
ss
lret
test
add
sub
inc
inc
incb
mov
sbb
sub
jp
data16
mov
xchg
push
add
ds
sub
lods
dec
scas
xchg
jge
fs
add
stos
mov
rclb
out
movsb
adc
fimull
jle
xchg
test
push
iret
adc
fists
insl
dec
sub
xor
int3
mov
mov
aaa
adc
mov
mov
jmp
mov
sbb
cs
pop
mov
jb
mov
pop
aaa
je
pop
pop
imul
add
inc
movsb
sti
clc
shl
pop
sbb
dec
stos
jo
jmp
popf
fisttpl
sbb
lret
cli
loope
cli
adcl
mov
in
stos
stos
mov
mov
jae
stc
test
jge
mov
aam
xor
sbb
push
xor
ljmp
loop
mov
mov
push
push
inc
lock
jnp
faddp
push
cmp
mov
xor
push
loope
inc
mov
xchg
sub
jecxz
mov
lods
pop
mov
sub
daa
iret
inc
xchg
xor
add
add
pop
call
lret
xor
xor
mov
leave
xlat
cwtl
dec
gs
xor
xchg
imul
sti
jns
mov
sbb
out
pushf
mov
add
push
xchg
cltd
jno
mov
cmc
pop
out
mov
movsl
mov
cli
stos
inc
push
mov
sub
ret
mov
pusha
in
lcall
iret
jmp
mov
faddl
xor
test
lcall
popl
stos
movsl
cwtl
xor
cmp
lcall
xlat
out
sahf
jno
mov
push
mov
xor
jp
jp
les
les
arpl
push
or
pextrw
insl
sbb
loope
rcrl
mov
sbb
negl
dec
sub
cli
xchg
adc
mov
lahf
icebp
cs
mov
mov
aaa
pop
mov
dec
jo
xor
cmp
rcl
loopne
jl
push
test
test
pop
aas
test
mov
notb
shl
fcom
or
test
jmp
jle
cmp
ds
mov
jmp
dec
adc
insl
lahf
stos
sarb
mov
mov
pop
pop
jecxz
add
push
imul
inc
cs
lods
rclb
in
mov
shrl
int3
pop
lea
lea
jle
outsl
ret
icebp
fcom
xor
or
jle
push
aam
cmpl
stos
push
cmpsl
and
push
adc
fs
push
fucomip
sub
imul
dec
pusha
push
inc
pop
sub
fisttpl
add
mov
lcall
add
sub
int
adc
insl
addr16
pusha
aam
test
movsb
jb
ret
loopne
gs
test
lcall
add
or
loopne
sbb
add
xor
jno
stc
lods
pusha
or
jge
ret
arpl
sub
mov
and
rep
sahf
mov
mov
xlat
aad
mov
vminsd
test
jp
xor
movsl
mov
lret
in
into
loopne
xchg
and
imul
sub
iret
or
xor
daa
jmp
push
jle
jns
in
sti
sbb
ljmp
fwait
xchg
pop
push
xor
mov
shl
push
cmp
fisubl
dec
fidivrl
pop
jbe
int3
arpl
decb
mov
mov
sub
rclb
adc
pop
int3
data16
test
inc
push
xor
int
adc
adc
xchg
add
es
cmp
sub
repnz
cmc
xchg
xor
incw
push
rcll
das
int3
and
int3
jne
jae
adcb
push
sbb
aad
mov
mov
cmp
jp
out
mov
push
lods
sahf
gs
push
repnz
mov
jns
mov
test
xor
adc
xchg
test
arpl
and
sbb
push
pop
addl
fisubs
ret
mulb
notb
arpl
arpl
je
add
pop
xor
inc
pop
out
out
mov
inc
test
mov
mov
lea
lea
das
stos
xchg
xchg
dec
je
pop
lods
rorb
sub
pop
sub
std
daa
lcall
adc
repnz
int3
xor
cmp
jp
jb
iret
dec
xor
das
data16
dec
mov
and
sub
pop
sub
mov
outsb
jle
jmp
bound
sub
xor
outsl
icebp
sub
xchg
imul
sub
cld
and
lcall
pop
dec
inc
sbb
jo
pop
fwait
pusha
jp
aaa
inc
mov
xchg
jle
xor
add
data16
push
lret
insb
mov
add
push
je
imul
add
push
ret
mov
cs
push
cmp
add
repnz
hlt
mov
jle
leave
cmp
loop
test
xor
sbb
mov
loop
or
lcall
or
lds
xchg
loopne
push
dec
xor
loop
lods
cwtl
rorl
mov
jmp
out
insl
or
pusha
in
cmc
jnp
sahf
xchg
aaa
std
mov
rorb
imul
and
sbb
pusha
jg
test
add
inc
outsb
mov
dec
xor
add
add
dec
and
iret
jge
nop
cmp
repz
ss
ja
dec
mov
sbbl
int3
cwtl
adc
sub
add
insl
mov
inc
das
and
ss
rcrl
xor
dec
repnz
adc
lcall
add
fwait
int
mov
imul
lcall
int3
scas
out
frstor
mov
dec
ret
mov
aad
mov
push
fidivrs
mov
nop
jb
cmp
xor
or
lods
sub
mov
add
sub
xchg
test
pop
sbb
sbb
xchg
push
xor
enter
inc
sub
cmp
je
pop
mov
das
sbb
inc
inc
push
mov
pop
xchg
test
inc
lods
cs
mov
lcall
into
std
loopne
cltd
les
inc
popa
pop
ss
dec
into
repz
pop
xchg
sbb
mov
and
xlat
inc
arpl
aad
xor
push
cwtl
inc
pop
das
rorl
xchg
shll
aaa
pop
push
dec
mov
cmpsb
es
pop
xchg
repnz
aad
and
adc
int3
xlat
popf
in
dec
outsl
cmp
inc
jecxz
jge
adcb
lock
test
xchg
push
imul
fldcw
ret
pop
mov
mov
aad
inc
push
xlat
adc
shrb
mov
insb
push
cltd
test
movsb
lcall
or
pop
imul
int
add
jp
xchg
int
xor
and
xor
add
dec
notl
dec
cmc
std
lcall
test
lahf
add
test
jg
xchg
pop
adc
sbb
cmp
ljmp
jo
add
inc
fildll
pushf
push
out
sub
xchg
popa
mov
shll
dec
rclb
mov
cmp
pop
cli
es
push
popf
daa
pop
popf
adc
scas
into
adc
cwtl
loop
sub
ret
sbb
pushf
popa
inc
lds
push
pop
jecxz
jns
jne
sbb
lods
stos
ljmp
mov
fs
xchg
aam
jmp
or
adc
ficomps
shlb
jmp
mov
or
test
pusha
xchg
push
jne
imul
push
mov
mov
inc
repnz
mov
mov
gs
filds
test
dec
push
sahf
xchg
mov
pusha
out
das
jno
push
jb
ljmp
stos
push
xor
push
mov
push
lock
cmp
sahf
xchg
cmp
shrl
fisttps
jbe
mov
push
iret
sti
imul
and
ret
leave
imul
lret
jge
xchg
fisttpl
mov
and
enter
orl
pop
jo
adc
call
andb
out
imul
neg
into
and
sti
cwtl
insl
mov
push
pop
arpl
arpl
dec
sub
jmp
sbb
push
cmp
jmp
xor
outsb
mov
testb
jbe
sahf
sbb
push
dec
dec
sbb
into
sbb
xor
repz
ficomps
cmp
rcrl
daa
insl
neg
xor
xor
mov
and
or
cmc
les
bound
push
loop
cmp
into
cmp
test
push
push
push
cmpsb
sub
or
enter
cmp
stc
fisubs
lods
fadds
dec
je
movsl
stc
js
repz
out
pop
xchg
lcall
fdivr
mov
inc
push
lds
cmp
sub
sbb
int3
shll
ret
mov
ja
sbb
inc
xchg
inc
mov
scas
cmp
leave
inc
ds
hlt
nop
xchg
aam
and
xchg
pushf
lock
rorl
fcomps
aaa
mov
lret
sub
cmp
arpl
cmp
popf
xor
xor
add
popf
ss
inc
xor
dec
mov
jo
icebp
add
cmp
clc
push
mov
fbld
mov
add
in
pop
xchg
cmp
cld
and
mov
sub
jge
cltd
imul
sbb
inc
and
inc
push
scas
jge
iret
insl
jns
stc
les
lret
pop
lret
lds
jmp
xlat
out
sbb
stos
rcrb
fstpt
or
add
lea
mov
jg
jo
mov
jae
sbb
divb
mov
icebp
jb
inc
push
pop
andl
mov
lea
add
xchg
mov
push
insb
push
jnp
pop
lea
or
arpl
mov
fwait
sbb
mov
cld
cmpb
cmp
xor
imul
xchg
jns
and
in
jp
jbe
mov
int3
mov
outsl
and
xchg
insb
add
test
lret
cmpsl
sti
or
adc
mov
ret
imulb
sbbb
icebp
and
and
xchg
push
ljmp
jb
and
pop
roll
adc
push
sub
mov
dec
or
pop
and
test
mov
dec
or
dec
mov
sahf
jmp
xor
add
shll
mov
xchg
mov
movsl
ss
repnz
xchg
fdivl
lahf
fists
sub
jne
pop
lods
pusha
cmpsl
lcall
sub
mov
jmp
mov
arpl
sti
movsl
push
mov
iret
sub
sub
mov
mov
xor
cmp
int
xorl
sub
push
clc
clc
dec
push
xchg
ljmpw
hlt
inc
sbb
push
mov
xchg
test
mov
jae
imul
es
xlat
fidivs
out
sbb
aas
shlb
xchg
fs
add
test
add
outsb
inc
imul
and
in
xor
ds
jnp
or
sbb
pop
push
adc
push
pop
push
mov
push
out
pop
push
test
push
and
rorl
mov
jp
rcr
shlb
sub
cwtl
cli
push
into
push
mov
jle
adc
xchg
xorb
cmp
sub
mov
adc
jo
dec
push
cwtl
mov
push
jg
cmp
cmc
nop
lret
jle
xor
mov
imul
and
shrb
pop
mov
dec
mov
test
sahf
lahf
decb
push
into
push
pop
mov
push
lods
negb
mov
jns
inc
cmp
pop
inc
xchg
js
gs
out
xor
imul
mov
jno
lret
cli
xchg
jne
mov
repnz
roll
popa
push
push
push
ljmp
test
lret
fwait
out
cmpsb
int
cs
movl
aaa
aam
lret
and
dec
arpl
mov
rclb
xor
inc
mov
repnz
in
sub
add
or
negb
push
scas
lahf
mov
jno
inc
scas
add
out
jbe
mov
mov
mov
sub
xor
jmp
cmp
push
cmp
stos
in
dec
outsl
pop
cmp
notb
loope
test
jae
or
dec
shlb
inc
and
dec
dec
sub
sub
ljmp
or
out
mov
add
mov
add
mov
jge
xchg
sbb
inc
jb
lret
je
or
divb
in
test
hlt
rorl
pushf
inc
xor
subw
ss
divb
adc
xor
cmp
add
int
xchg
ja
movsl
mov
sub
xchg
sub
test
jg
scas
test
jmp
and
pop
xor
push
add
mov
rclb
stos
push
or
mov
pushf
xor
ljmp
xchg
shrl
daa
jns
out
jbe
jp
scas
int
add
mov
fcomi
imul
jne
jmp
call
ja
jg
xchg
cmp
out
xor
pop
mov
mov
mov
dec
popa
cld
jne
dec
xchg
arpl
xchg
fwait
cmpsb
aad
and
adc
out
rcll
xor
mov
popa
sub
jbe
or
pop
mov
cmp
ljmp
pop
int3
shrl
in
or
pushf
into
inc
push
xor
in
jp
pop
les
fsts
mov
aam
add
ss
xor
jne
mov
dec
push
xlat
std
pop
and
cwtl
mov
scas
pop
jl
push
fwait
push
add
sbb
call
repz
loop,pn
push
push
adc
inc
sahf
ret
sbb
sub
mov
mov
aas
sub
pop
aaa
jmp
cltd
sbb
lret
insb
cltd
incl
cmp
testb
stos
stos
inc
jecxz
mov
aaa
adc
aaa
pusha
adc
xor
mov
rclb
mov
outsl
dec
mov
popf
out
push
negb
addr16
cmp
jmp
shlb
lcall
push
test
cmp
fdivs
mov
in
pop
add
std
jno
mov
out
sub
out
and
ret
mov
jl
cmc
out
pop
std
aad
cmp
xchg
push
dec
or
mov
mov
sub
dec
lods
popf
push
jge
cmp
push
and
and
sahf
fucom
push
sub
mov
adc
stos
test
add
frstor
xchg
lock
cltd
lods
pushf
cmc
ja
pop
sub
cmp
push
cmpsl
mov
mov
aad
out
adc
rcl
push
imul
ret
aad
jnp
sbbb
shlb
movsb
in
jge
jnp
or
jge
into
in
ret
into
pop
mov
add
jbe
adc
filds
cs
ret
call
cld
aas
sub
jge
ss
push
fs
sbb
aaa
or
out
leave
mov
adc
xchg
mov
or
xchg
mov
mov
fstpt
push
mov
push
jno
dec
movb
sub
dec
fstpl
push
xlat
sub
push
xor
mov
mov
pop
or
int3
jmp
or
and
in
and
mov
dec
outsl
ficompl
jmp
mov
cmp
hlt
icebp
xchg
daa
xchg
add
or
dec
or
addb
mov
stc
adc
rcrl
in
mov
push
cmp
pop
loope
sub
stos
gs
sti
mov
xchg
xor
pushf
cmpsb
sbb
add
and
aam
lods
addr16
sti
cmp
in
popf
imul
xchg
insl
test
sub
push
out
mov
cmpsl
xor
enter
push
mov
aad
or
out
cmp
rcl
out
hlt
jb
xchg
cmp
or
fstl
dec
movsl
dec
sub
fmull
jnp
dec
push
cmp
dec
cwtl
xor
jae
das
pop
fildll
insl
imul
jecxz
push
pop
out
or
sbb
or
ret
ficoms
sub
push
movsb
mov
outsb
adc
into
rcr
fwait
mov
xor
outsb
push
outsl
mov
mov
jle
jae
lret
ffreep
scas
mov
push
cmp
das
push
loop
ret
mov
add
cld
inc
lcall
inc
dec
stc
fisttpll
cmp
in
xlat
jmp
mov
stos
xchg
adc
fstps
sbb
int3
and
in
outsl
sbb
iret
jp
cmc
mov
loopne
pop
pop
sub
lock
stos
jno
popf
in
cwtl
add
ret
iret
xlat
or
popa
sti
fwait
or
dec
or
xor
sub
mov
sub
lahf
fdivl
push
inc
std
or
lret
jnp
scas
aam
xchg
jmp
mov
push
push
orb
xchg
push
mov
cmpl
into
push
bound
xor
dec
mov
sub
shrl
sub
sub
mov
movsb
mov
lock
sub
sub
test
push
insl
lahf
outsb
cmp
ret
imul
and
jns
xchg
cld
je
mov
cmp
das
aad
dec
xchg
push
or
sbb
mov
mov
xor
jp
sub
push
push
cld
xchg
sbb
dec
hlt
sbb
lcall
sarl
sub
int3
out
adc
sub
dec
xchg
sbb
aam
je
dec
sub
jge
and
cmp
das
das
jecxz
mov
cmp
insl
pop
push
cwtl
scas
dec
push
push
jg
pop
cmp
popa
fcoms
bound
int
and
in
sbb
sub
xor
jmp
push
fists
sarb
mov
enter
and
cmp
xor
mov
cld
idivb
xchg
shr
cmpl
sbb
or
inc
xor
dec
adc
push
arpl
dec
fwait
insl
jge
cli
mov
cmp
lret
mov
jnp
aad
push
lret
inc
jbe
jecxz
aam
pop
adc
mov
mov
pusha
mov
jp
xchg
in
sar
out
cmp
push
stos
or
int3
pop
movsl
jge
mov
add
cmp
lock
jb
or
ret
jno
pop
dec
rcrb
sbb
or
sti
fadds
aam
xchg
xor
shl
xor
cli
into
adc
mov
inc
daa
xchg
cmp
add
out
mov
mov
sbb
jno
fsubs
insb
bnd
jns
rcll
mov
adc
dec
jbe
cmpl
ds
or
sbb
mov
xor
mov
sub
adc
push
imul
iret
or
pop
bound
jge
mov
repnz
cld
xchg
out
mov
stos
jg
out
imull
xchg
mov
inc
cmp
cmp
outsb
repnz
movsl
aas
bound
pop
cmp
mov
in
pusha
imull
xlat
addr16
loopne
icebp
mov
pop
pop
hlt
sti
adc
jle
sbb
jge
aad
jno
xor
inc
inc
fmul
sbb
movsl
inc
shlb
lret
pop
mov
ljmp
inc
test
jmp
fucom
outsb
lahf
ds
in
adc
cltd
stos
and
pop
jno
mov
clc
xor
nop
xchg
pusha
mov
popf
enter
ss
in
and
jno
inc
es
test
test
jge
ret
dec
gs
loope
les
pop
jl
cmp
jmp
insl
loopne
xlat
or
mov
sbb
lret
xchg
fidivrl
and
sarl
push
mov
lret
and
aaa
bound
jmp
sbb
cmp
xor
mov
stc
dec
int
xor
stos
or
andnps
cmp
add
shlb
mov
inc
inc
je
mov
es
inc
daa
pop
add
adc
out
fldpi
add
xchg
insl
movsb
xlat
fldlg2
shll
call
cmpsl
jecxz
jno
es
arpl
sbb
pop
mov
pop
rclb
push
jge
repz
out
xor
clc
inc
es
dec
js
cmp
mov
or
int3
mov
sbb
stc
xchg
xchg
and
add
inc
dec
leave
fisttpll
mov
rcrb
cli
adc
inc
je
jg
xor
xchg
dec
insl
popa
scas
mov
inc
push
jge
jns
xchg
sbb
mov
rclb
mov
stos
daa
inc
pop
dec
inc
mov
push
mov
scas
mov
lods
lods
xor
push
test
fcomip
xor
or
and
outsl
mov
and
sbb
call
ja
iret
dec
fsubl
insb
mov
in
push
outsb
test
dec
sbb
push
leave
xorb
jno
pop
mov
pop
mov
imul
and
cmp
mov
and
sti
pop
int
repnz
sbb
xor
fiadds
hlt
push
std
xchg
ds
push
js
out
add
test
das
sar
mov
add
push
or
jecxz
das
repnz
aam
dec
jbe
mov
arpl
into
mov
dec
sbb
push
sbb
int3
cmp
or
fnstenv
movaps
popf
arpl
pop
frstor
je,pt
jo
fstpl
pop
inc
loopne
pusha
and
mov
fwait
leave
mov
sub
clc
jae
fnstenv
aad
cmp
data16
jns
arpl
xor
lcall
xchg
ss
dec
inc
movsb
icebp
mov
in
addl
movsb
or
into
cld
jle
cltd
into
mov
xor
xor
xchg
pop
xchg
mov
jge
add
js
imul
push
adc
xor
fisubl
rcll
jno
ret
jbe
iret
out
ds
adc
cmp
sub
adc
ss
inc
and
push
sub
ljmp
add
ficomps
add
pushf
imul
push
mov
cli
cld
dec
nop
pop
fildll
lret
orb
and
and
addb
lcall
int3
test
mov
jl
sbb
mov
movsb
ljmp
rcrl
enter
jle
rclw
testl
fistl
call
dec
mov
cwtl
adc
ret
roll
lahf
inc
or
arpl
mov
ret
cmp
fdiv
ljmp
pop
and
mov
rcrl
mov
outsl
jle
mov
in
aam
stos
aam
imul
and
mov
icebp
cmp
inc
pop
cli
scas
mov
repnz
sbb
lret
push
adc
rorb
insb
in
mov
sub
test
aam
pop
inc
aas
scas
pop
mov
adc
sub
bound
mov
push
mov
mov
jmp
outsb
jns
push
mov
inc
adc
add
lahf
shrl
enter
xchg
or
cmp
push
in
jae
mov
sti
sahf
lret
mov
sbb
dec
sub
mov
xchg
add
adc
push
xchg
inc
jnp
cmp
jle
scas
sbb
or
cwtl
scas
dec
mov
movsl
add
adc
inc
xor
xchg
sub
subl
dec
pop
aas
loopne
ja
add
cmp
cmp
sbb
es
fsubl
push
push
andb
fisttpl
jne
sub
jns
jge
fs
xor
push
sbb
and
sub
jns
and
sti
clc
push
pop
adc
lret
mov
mov
cltd
xchg
jno
test
out
test
mov
jns
popa
and
lds
pop
gs
xchg
in
xor
cmp
aad
popf
les
pop
adc
gs
dec
jae
jl
dec
mov
add
dec
daa
sti
cmpsb
ja
mov
pop
jb
rorl
lret
mov
repz
ss
xor
rclb
xchg
inc
push
mov
sub
stos
push
rclb
pop
pop
sub
das
xchg
mov
jp
jp
ja
sub
sub
pop
xchg
es
adc
into
repz
mull
cmp
inc
xor
sarb
aaa
mov
fmulp
je
jb
dec
test
cmc
pop
mov
aas
repnz
sub
aam
out
inc
jne
ret
lret
insl
mov
xchg
or
ret
aaa
pushf
out
jno
push
in
rolb
popa
and
movsl
sti
mov
ficoms
pusha
mov
mov
mov
cmp
mov
notb
and
inc
add
fs
push
shrl
or
lods
cmp
inc
roll
pusha
jle
sarb
jl
inc
cld
mov
add
out
and
add
mov
xor
dec
xor
lcall
shl
cltd
stos
das
pop
cwtl
arpl
pop
icebp
les
cmc
mov
cmp
aas
dec
push
call
mov
mov
mov
adc
mov
aad
sbb
fcomps
push
cmp
hlt
pop
scas
ss
loop
sub
enter
cmp
sub
fldt
aam
mov
push
and
cmpb
or
ret
jg
jl
jg
pop
aad
mov
xchg
mov
leave
mov
pop
xor
scas
insb
pop
pushf
jae
lahf
scas
xchg
xlat
shll
test
mov
ja
cmpsb
ja
push
sbb
imul
cmp
inc
pop
or
cmp
mov
xor
pop
in
cmp
in
sub
sbb
popa
arpl
add
mov
push
add
in
cli
lds
mov
out
xor
pop
jge
out
es
fidivl
into
ud2
add
jbe
cmp
mov
and
jp
pop
xchg
idivl
in
sub
shl
add
sub
call
push
popf
cmp
push
lods
pop
pop
ret
inc
insb
jns
fcomip
mov
mov
sbb
ljmp
popa
sub
dec
xor
mov
outsb
das
sar
jle
mov
pop
jecxz
mov
pop
pop
ljmp
data16
lret
enter
mov
in
repz
adc
jns
pop
mov
lret
scas
add
movl
jmp
and
popa
pop
shll
inc
mov
lock
add
mov
adc
fwait
aaa
mov
mov
and
jb
or
out
sbb
xor
or
or
pop
out
mov
pushf
cmpsb
jle
mov
xchg
add
clc
call
push
imul
fmull
push
stos
push
imul
outsb
dec
sar
into
dec
inc
mov
bound
cli
sub
xchg
push
sbb
les
jae
stos
mov
pop
lds
data16
mov
jge
clc
inc
or
or
sub
cmpsl
fsubl
or
inc
test
pop
movaps
inc
mov
sub
adc
loope
sub
fcomp
pop
xchg
jb
add
lahf
pop
jb
jmp
mov
sahf
dec
fsubs
push
fmuls
addb
pop
push
or
js
inc
fs
mov
cmp
sbb
loopne
pop
sub
aad
lea
jb
sbb
test
adc
sbbb
call
mov
out
int3
bound
ret
jo
jl
sbb
dec
xor
ret
dec
mov
ret
pusha
lea
popl
inc
cmp
xor
cs
sub
xchg
cmp
and
in
test
stc
ret
mov
shrl
lea
mov
sbb
subb
loop
clc
jge
adc
fcoml
not
push
add
fwait
add
out
mov
inc
cwtl
cmc
dec
add
fs
jbe
jbe
or
mov
mov
and
push
cltd
mov
int3
enter
mov
pop
cs
jae
push
loopne
cmp
jle
test
movsl
ja
pushf
dec
push
push
mov
and
mov
dec
and
cmp
mov
arpl
lds
roll
orl
mov
and
push
xchg
stos
insl
cwtl
test
and
inc
mov
cltd
pop
mov
out
out
gs
add
inc
jmp
mov
mov
clc
xchg
in
aas
inc
repz
call
mov
in
ljmp
dec
push
fmuls
xchg
cmc
loope
add
sbb
aam
aas
in
jecxz
push
pushf
inc
inc
adc
icebp
out
shll
push
xor
jl
or
jb
pushf
mov
inc
or
shrb
inc
push
and
sbb
lcall
push
adcl
pop
test
add
aaa
lahf
mov
ja
hlt
out
add
ja
lods
dec
fsubrs
inc
adc
adc
sbb
lcall
sub
cmp
lds
lock
mov
loope
lahf
roll
icebp
pop
xchg
mov
dec
imul
in
add
sar
daa
arpl
xchg
in
enter
mov
pop
fisttps
pop
jg
push
push
or
mov
enter
imul
push
xlat
je
nop
insb
adc
sbb
push
lcall
cmp
test
rcll
push
mov
out
sbb
sub
adc
sub
sahf
push
add
mov
les
dec
dec
dec
pushf
insl
mov
jmp
jle
mov
jae
mov
gs
xor
jl
cli
push
pop
dec
lods
imul
or
push
jno
ds
or
int3
adc
adc
mov
push
mov
pusha
std
shll
and
jns
xchg
jecxz
lret
jb
ljmp
int3
dec
pop
js
jg
mov
xor
in
imul
pop
clc
movsb
cmp
ss
mov
pop
in
and
add
int
sub
sub
fnstcw
or
stos
pusha
dec
sub
push
jne
stc
imul
sub
push
icebp
or
push
fisttps
or
loop
idivl
adc
rol
repz
mov
test
mov
pop
pop
or
xor
inc
movsl
hlt
cmp
ja
jl
jecxz
and
bound
repz
sbb
adc
dec
imul
xlat
fnstsw
xchg
jo
leave
mov
push
push
mov
mov
cmp
sbb
test
movsb
mov
out
and
lods
jmp
pop
push
mov
and
pop
into
aad
mov
cmp
insb
mov
mov
ljmp
xorb
dec
xchg
fdiv
push
sbbb
jp
pop
test
outsl
test
ret
ret
push
fcompl
pop
pop
sbb
ljmp
fld
sbb
mov
sub
mov
test
cwtl
daa
add
fwait
mov
fst
leave
jge
add
add
gs
xchg
sahf
repz
scas
mov
fucomp
mov
push
inc
or
push
adc
ja
ljmp
pop
inc
sbb
rorl
cmp
jae
in
mov
and
inc
dec
jp
jecxz
arpl
xor
jp
adc
jnp
xlat
popf
add
add
shr
insb
dec
and
jl
or
xor
enter
int
inc
push
jns
enter
sub
pop
mov
mov
inc
jno
xor
push
xorb
dec
mov
ss
jle
aaa
sub
pusha
mov
movsb
xlat
jbe
stos
sbb
dec
mov
shlb
lds
xchg
repz
addr16
cltd
mov
add
insb
mov
ret
int3
sti
popa
call
fwait
adc
inc
cmpsb
push
jbe
pop
sti
sub
xchg
inc
xor
sub
sbb
inc
sub
loope
or
dec
testl
adc
sahf
jne
cmpsb
mov
xor
mov
jge
fwait
decb
stos
xor
aad
add
adc
ret
hlt
es
mov
lds
xchg
push
cmp
nop
jbe
and
fidivs
pushf
fdivs
jecxz
jle
push
sbb
or
jnp
fwait
jnp
pop
lods
stc
aad
outsl
scas
loopne
cld
sti
shrl
sbb
insl
or
popa
inc
dec
loopne
and
and
loopne
stos
adc
repnz
ret
hlt
movsb
stos
xchg
sti
ljmp
xchg
mov
pop
rorb
clc
xor
aaa
repz
lds
sysexit
jbe
cld
lret
cmp
dec
or
jmp
push
add
sbb
add
hlt
lret
or
mov
int3
jno
xchg
lret
jnp
add
push
jno
addr16
repz
jmp
dec
jns
pop
jbe
jl
xchg
lds
xchg
xor
movsb
sub
xor
xor
adc
out
jns
fs
mov
shlb
in
jb
nop
enter
daa
cli
pop
or
cmpsl
repnz
fidivl
shlb
pushf
nop
mov
push
xor
jae
dec
or
push
je
xor
popa
xor
mov
jae
inc
fdivrs
std
push
sbb
test
aad
mov
outsl
in
xlat
outsb
fs
test
ljmp
sub
sbb
fistpll
ljmp
add
mov
dec
ljmp
xchg
push
pop
pushf
or
pop
lret
loopne
sub
rol
sti
sbb
popa
xchg
out
xchg
daa
cmp
lret
inc
push
and
jmp
dec
pop
loopne
aaa
sbb
loope
cmp
and
mov
cld
jns
nop
push
cmpsb
xchg
push
mov
sub
add
aad
and
fcoms
int3
mov
loopne
and
je
nop
xchg
add
ja
fidivrs
ljmp
mov
mov
mov
lock
pop
les
fdivrs
sbb
xchg
lds
xchg
mov
rcrl
lock
or
cld
mov
mov
cmc
jmp
jne
fisubrs
push
ja
sub
cld
sbb
outsb
fucomip
outsl
ds
push
adc
jnp
aam
or
nop
pop
xor
xorl
ss
test
push
adc
imulb
pusha
ljmp
add
in
or
insb
cmp
pushf
mov
fstpt
sbb
fldenv
arpl
sub
lahf
lds
xchg
and
or
adc
jae
aad
inc
adc
scas
leave
pop
les
pop
scas
cltd
adc
xchg
cli
sub
add
cmp
inc
stc
or
stos
rorb
mov
jo
int3
add
sub
and
adc
cmpsb
cmp
add
xchg
test
fmuls
inc
xchg
testb
je
call
jno
popf
iret
scas
leave
inc
xchg
mov
mov
sub
xor
adc
lods
jne
jl
add
call
sbb
out
out
subl
cld
ja
xorl
insl
jmp
es
sub
pop
into
jbe
push
out
clc
sbb
mov
test
cmp
fdivrs
mov
xchg
and
dec
fnstenv
in
or
insl
xchg
cs
psrld
sub
push
mov
gs
daa
movsb
xchg
test
stc
daa
push
dec
pusha
loope
push
repz
test
xchg
jnp
add
push
xor
stos
rcrb
pop
mov
cld
jbe
mov
jp
mov
and
xchg
pop
mov
imul
movsb
lds
cwtl
jle
xor
adcl
xlat
add
jbe
push
sbb
dec
inc
out
aas
or
pop
jmp
icebp
or
and
loopne
add
or
jmp
lahf
mov
lcall
cltd
aaa
in
gs
mov
aaa
das
mov
pop
adc
or
mov
jmp
or
enter
jle
xchg
dec
pop
jge
sub
and
out
cmp
pop
shrl
push
cwtl
xor
push
xor
jmp
jbe
test
push
hlt
imul
sbb
sbb
imulb
out
dec
mov
mov
xchg
push
rclb
or
mov
das
loopne
mov
lods
mov
fisttpl
xor
or
cwtl
imul
imul
adc
lret
add
push
jae
add
xor
fsubrs
cmp
cmpl
xchg
or
jne
subl
nop
inc
pop
adc
mov
lods
and
ss
mov
mov
int
test
fcomps
cmp
mov
inc
add
push
inc
push
fcom
clc
test
pop
cmp
jae
pop
mov
adc
push
inc
mov
idivl
mov
dec
inc
sub
xchg
dec
dec
cmp
jmp
pop
adc
movsl
movsl
repz
je
ja
mov
push
adcl
and
pop
clc
push
add
je
adc
mov
mov
ret
adc
incb
mov
xor
inc
mov
ftst
inc
adc
xlat
mov
cmp
fstpl
xchg
je
arpl
adc
scas
mov
cmp
xchg
sbb
jnp
and
rcl
dec
dec
repz
shr
add
or
sarl
test
shlb
xor
xchg
adc
mov
int
cmpsl
add
pop
mov
jbe
hlt
mov
test
xchg
sub
ja
test
mov
and
push
inc
mov
jge
xor
mov
fsave
mov
pop
mov
xchg
bswap
push
sub
inc
les
sar
xor
adc
mov
mov
jp,pt
iret
addr16
xor
stos
leave
pusha
adc
aas
insl
sbb
push
loopne
sbb
aas
pop
adc
push
or
mov
insb
and
mov
aad
hlt
cltd
mov
jbe
neg
ja
inc
sub
mov
xchg
jl
enter
into
outsb
fwait
aas
imul
insb
dec
enter
cmp
mov
das
sub
push
lock
pop
mov
jnp
add
push
mov
inc
sbb
out
pop
push
adc
out
loop
mov
cmc
dec
movsl
pop
adc
push
mov
fucom
or
adc
adc
inc
push
in
mov
ds
xchg
popa
andb
outsl
push
das
mov
cli
lds
sbb
sbb
pop
imul
dec
dec
repnz
fld
cs
jmp
xor
xchg
inc
xor
rsqrtps
mov
xchg
mov
loopne
dec
jecxz
lret
mov
iret
sbb
jp
loop
push
dec
loopne
mull
test
movl
cltd
sbb
cbtw
add
jle
mov
mov
xchg
pop
rcrl
add
dec
out
clc
clc
sub
push
jae
cmp
cmc
pop
xlat
push
loopne
xchg
jp
xchg
cmp
pushf
cmp
cld
push
mov
ss
pushf
pop
fsubr
cli
cmpsl
out
mov
add
adc
call
or
repnz
lods
xchg
push
fidivs
cmp
test
xor
lock
mov
outsl
sub
ljmp
clc
popl
lock
jle
je
into
xchg
ds
mov
push
fucomip
adcl
pop
mov
dec
xor
xchg
addr16
nop
imull
stos
push
or
pop
mov
int3
mov
jb
push
jns
mov
adc
jbe
and
inc
cmpsl
out
mov
sahf
xor
sub
xor
pop
pop
inc
jg
mov
or
xchg
das
jbe
insl
bound
mov
popl
jae
push
xchg
std
mov
dec
inc
mov
mov
popf
popf
and
insl
and
adc
pusha
jp
hlt
jns
jmp
lods
adc
inc
mov
sub
sbb
dec
and
scas
cmpb
sub
jb
flds
push
xchg
cmp
lock
pusha
xor
xor
push
cs
fxch
bound
inc
push
gs
sub
adc
mov
sbb
pushf
mov
sbb
xchg
add
ret
sub
add
sub
inc
cmp
or
test
mov
dec
sbb
loope
add
mov
cwtl
cmp
ja
cmpsb
movsl
insb
mov
fisttps
loop
fwait
pop
sahf
add
sbb
jecxz
fstpt
test
sub
dec
mov
clts
fimull
sbb
adc
jecxz
daa
lahf
push
add
pushf
mov
std
xor
xchg
imull
out
clc
xor
jb,pt
seta
xchg
push
cli
adc
fs
pop
jnp
popa
adc
xlat
cmp
inc
pusha
xor
jbe
js
xchg
arpl
sbbb
pop
les
imul
cs
pop
push
cmc
or
adc
testb
gs
enter
fstps
cs
cli
test
inc
ljmp
push
ja
sub
add
inc
push
cmp
sub
adc
test
sbb
push
mov
or
fs
and
adc
int3
outsb
sub
ror
adc
mov
mov
into
cmp
mov
roll
fnsave
inc
stos
cmpsb
in
pop
cwtl
jb
inc
mov
add
dec
cmp
adc
dec
insl
out
xor
cmp
sbb
js
and
cmc
xchg
shlb
pop
in
mov
push
and
dec
add
jp
andb
adc
pop
mov
call
mov
add
test
shrl
scas
notl
sub
jns
shl
pusha
loope
lods
xchg
xchg
jle
andb
push
inc
pop
push
test
and
loope
sbb
rorl
sbb
pop
fsubrl
pop
jne
cmpsl
xor
or
push
test
outsl
add
arpl
push
cmp
dec
adc
pop
mov
gs
addl
dec
mov
pop
daa
fwait
adcb
mov
aam
lahf
cltd
cmp
inc
int3
int3
in
and
test
adc
jo
dec
sti
cmp
lcall
cld
dec
outsl
cmp
subl
ret
inc
test
jnp
mov
push
addb
call
add
mov
and
pop
insb
add
push
add
js
jns
push
sbb
fnstcw
jbe
bound
and
mov
sahf
lods
sbb
sbb
add
stc
sbb
movups
stos
pop
imul
sub
cmp
fisubrs
jmp
in
icebp
scas
mov
outsb
pushf
dec
mov
test
sbb
out
in
cmpl
insl
loop
mov
xchg
xlat
cwtl
mov
into
out
enter
in
lahf
dec
pop
loop
test
push
inc
cltd
fadds
mov
adc
mov
pop
hlt
adc
in
in
mov
jb
xchg
int3
insl
es
push
sbb
pop
mulb
mov
pop
iret
aam
jb
cmp
jg
les
dec
loopne
sbb
ds
jl
mov
in
sub
pop
or
mov
das
dec
in
jl
xchg
mov
movsb
dec
movsb
mull
push
rorl
sub
push
insl
xchg
aaa
mov
push
jno
push
movsb
mov
or
push
lahf
sub
xchg
xchg
js
sbb
outsb
push
mov
cmp
pop
lcall
sub
sub
xlat
outsb
in
jge
jp
sbb
scas
mov
pop
mov
ja
xor
cmpsl
cmp
out
mov
sahf
shll
push
cwtl
outsb
xor
or
sbb
xor
mov
arpl
fdivl
push
pop
adc
or
movsl
sti
sbb
ret
cmpsl
or
mov
popf
out
xchg
sub
loop
cli
testb
mov
mov
push
xor
popf
int
mov
pop
cld
mov
adc
into
add
cmp
pop
cmp
aas
rclb
or
inc
sub
cmc
sub
and
and
movsl
add
xchg
inc
sbb
scas
aas
jbe
lahf
lcall
mov
push
mov
push
push
outsl
add
stos
inc
outsb
push
dec
pop
movsl
inc
cmp
fnstenv
bound
out
cld
mov
mov
xchg
jmp
sti
out
jbe
sub
push
or
jg
adc
fdivl
addb
cmc
or
adc
jmp
cld
jp
lods
pusha
das
jle
iret
sti
lds
xchg
xchg
leave
adc
pop
jns
add
jns
int3
lods
or
call
xor
ja
jge
roll
imul
in
or
loope
xchg
scas
outsl
std
pop
popf
mov
dec
mov
pop
xor
hlt
imul
in
and
pushf
sbb
dec
push
repnz
inc
in
inc
es
sbb
iret
fcom
aam
sbb
loopne
pop
xchg
cld
mov
ds
push
addl
and
xorb
sbbb
in
iret
sarl
scas
adc
aas
ficompl
lahf
popa
mov
jnp
aas
stc
test
cmpsl
jb
pushl
mov
push
nop
js
mov
pop
push
stos
add
stc
add
xchg
push
outsb
inc
loope
cmp
jne
dec
repz
cld
mov
shll
stos
in
int
mov
push
imul
mov
mov
out
jle
roll
add
add
leave
in
xchg
jmp
xchg
ss
xor
stos
jbe
mov
jge
push
or
testb
rcrb
shlb
call
xchg
in
pop
mov
add
mov
cmc
std
mov
movsb
sarb
in
lock
insb
pop
adc
repz
xlat
cmc
xor
inc
hlt
and
cmp
mov
fisubl
dec
jp
mov
jecxz
adc
or
jne
pop
daa
push
adc
ds
cmp
dec
or
dec
inc
pusha
leave
push
pop
jbe
push
dec
mov
shrb
cld
imull
sahf
adc
dec
push
lahf
sub
loopne
xor
test
jecxz
mov
mov
hlt
and
fdivrp
mov
sbb
ds
inc
xor
enter
lret
jl
scas
cmp
and
dec
ja
adc
mov
lret
fldcw
fs
shrb
aam
add
sub
leave
inc
mov
mov
dec
push
adc
pushf
cmpsb
sub
and
test
lret
aaa
jecxz
push
mov
lods
add
cmp
adc
in
movsb
daa
addr16
and
mov
xchg
jae
stc
rcrb
adcl
mov
cmp
xchg
sub
push
sub
mov
out
clc
or
pop
popa
popf
mull
test
into
pushf
xor
das
in
pop
jle
pop
cltd
rcrl
mov
cmp
pop
sahf
push
mov
adc
outsb
daa
sbbl
dec
and
cmp
fdivrs
sbb
jb
xor
icebp
arpl
sub
stc
pop
clc
out
pop
push
into
arpl
aam
lahf
push
loope
mov
jnp
iret
sbb
arpl
add
jge
mov
jbe
adc
mov
mov
ss
jno
sbb
add
aad
mov
test
jae
popf
imul
aaa
in
mov
add
push
pop
xchg
sub
adc
jne
ret
outsb
pop
pop
movsb
into
xor
outsl
cld
test
inc
mov
mov
sbb
loope
adc
mov
insb
cmpl
imul
and
xor
push
in
jge
fsubs
ss
xor
jmp
adc
les
movsl
xchg
es
insl
lods
sbb
daa
js
andb
aaa
mov
or
aam
aaa
adc
arpl
cmpsl
test
adc
scas
push
sub
and
jbe
and
adcl
adc
xchg
jmp
out
xor
mov
in
pop
sbb
and
add
inc
jle
out
sbb
loop
loop
xorl
fmul
dec
lods
pop
cwtl
and
add
and
dec
call
push
pop
enter
adc
movsl
or
mov
ret
imul
push
jnp
fs
enter
incb
lods
lahf
lret
push
and
dec
pop
dec
add
mov
popw
add
sbb
push
dec
pop
mov
out
stos
mov
mov
push
subl
outsl
mov
and
pop
or
jg
lret
ret
adc
inc
into
sti
lret
cmpl
sub
add
jecxz
push
fildll
shrl
int
lret
and
xor
cltd
add
out
mov
cmp
lds
clc
pop
dec
xchg
lcall
cmp
xor
xor
lock
enter
enter
ss
push
imul
or
cmpsl
cmpsb
in
sti
jns
pop
or
fmuls
jnp
dec
fiaddl
mov
pop
aaa
and
mov
lock
xchg
inc
mov
or
add
sub
jg
xor
pop
sbb
fwait
movsb
lods
enter
sahf
mov
outsl
or
mov
test
rclb
xor
test
fisubl
call
pop
jle
inc
repz
pop
imul
mov
mov
daa
shl
lods
or
mov
push
out
dec
lds
mov
add
and
mov
dec
clc
ljmp
outsb
addr16
push
shll
jge
loopne
push
and
push
pop
jp
jl
mov
aas
imul
and
and
cmpsb
jbe
pop
arpl
shlb
in
sub
cltd
repnz
aam
sub
jmp
iret
loop
dec
loope
outsl
mov
fwait
in
sub
jb
leave
inc
addr16
movsl
add
push
dec
shll
mov
dec
ss
push
movl
jbe
int
cmp
push
lock
adc
push
adc
push
push
push
int
divl
add
and
icebp
mov
xchg
insl
idivl
loope
pop
jg
mov
daa
outsb
cltd
ret
mov
test
pop
popf
cmp
movsb
int3
and
sub
aas
call
xchg
dec
jmp
or
ret
adcl
or
and
pop
and
rcrb
fcomps
jl
out
cs
or
out
loopne
pop
imul
cmp
in
or
and
add
cmp
sbb
adc
repz
and
pushf
fiaddl
xor
jne
push
xor
insb
cmpsb
mov
inc
fcmovb
and
adc
sbb
sub
xchg
xchg
rorb
in
mov
pop
es
mov
insl
in
mov
and
movsl
cmp
inc
mov
jae
sbb
jg
ljmp
xchg
or
out
mov
fwait
sub
and
sarb
or
xorl
stc
shlb
stc
mov
xchg
fcompl
popa
and
cli
xchg
and
sti
lds
out
add
cmp
scas
in
dec
add
mov
mov
pop
mull
or
sub
xor
sbb
cmp
mov
jmp
iret
mov
scas
fidivs
stos
mov
sub
aad
jnp
in
scas
jae
pop
jmp
stos
in
add
or
lret
push
sub
jmp
mov
jne
jnp
cwtl
mov
cld
xor
mov
clc
test
aad
cmp
mov
bound
dec
xchg
movsl
in
fnstenv
sbb
pushf
shrb
dec
imul
mov
sub
cmp
pop
in
int3
inc
rcll
lods
test
add
mov
aas
mov
lret
roll
testb
xchg
xor
and
addr16
adc
mov
add
test
cmp
je
out
xor
cltd
jno
pop
dec
cmp
xor
cltd
xchg
mov
xchg
dec
lods
or
mov
push
test
daa
xchg
pop
mov
push
mov
enter
fistps
adc
xor
into
adc
rolb
jecxz
add
leave
imul
cmp
jecxz
cltd
pop
fistpl
mov
mov
jnp
ss
daa
and
repz
dec
sarl
fwait
inc
sti
jbe
pop
movsl
stc
stos
idivl
fcompl
add
bswap
ss
call
pushf
std
fistps
push
fnstenv
shlb
fdivrs
adc
xor
jle
ret
imul
inc
adc
test
dec
inc
repnz
push
repnz
enter
ret
in
out
loope
rcr
fs
mov
in
lret
cmpsl
jmp
in
cs
jmp
js
jecxz
or
dec
mov
fldenv
loopne
ror
sub
inc
test
mov
sbb
cli
pusha
js
clc
or
lods
jne
shll
jnp
xchg
sbbl
xor
push
movsl
adc
or
mov
xlat
push
dec
mov
cli
fisttpl
cmp
xchg
sahf
jnp
add
xlat
and
xchg
sbb
push
adc
scas
arpl
xor
test
imul
jmp
add
jne
gs
sbb
pop
ret
rcl
movsl
adc
push
scas
ljmp
out
daa
xor
xchg
add
cld
dec
ficomps
shrb
jo
or
stos
xorb
movsb
push
push
lret
out
fisubl
and
stc
dec
scas
aam
add
ljmp
movsl
push
pop
pop
xorl
bound
addr16
call
xor
mov
mov
sti
outsl
shll
cmp
pop
bound
imul
daa
dec
adc
sub
cs
cmpsb
inc
sbb
in
lods
mov
sarl
movb
paddsw
lahf
clc
push
je
in
mov
cld
jl
mov
out
mov
adc
scas
daa
add
and
inc
sub
rcll
loopne
xchg
sub
mov
mov
popf
add
push
aaa
push
xchg
ret
add
pop
addb
addr16
jbe
cmpl
and
push
cmp
sub
decl
imul
jle
pop
mov
jmp
push
xor
std
imul
mov
jne
cld
sbb
pop
xchg
adc
xchg
inc
inc
dec
cmpsl
xchg
jns
aaa
xor
pop
lahf
in
jl
mov
inc
jbe
pop
sbb
push
cmpsb
ret
stos
mov
pop
mov
jge
popa
push
in
ljmp
add
pusha
xchg
fincstp
in
pop
cmp
ret
mov
adc
lea
fmulp
movsb
scas
dec
testl
aad
pop
ret
popf
dec
jno
lahf
fnstcw
add
or
test
sarb
mov
and
mov
jno
lods
out
jge
cmpsb
stos
cmpb
stos
jmp
mov
push
outsl
shll
dec
ja
mov
jns
iret
adcl
adc
pop
xor
pop
sub
pop
mov
test
adc
pop
jmp
mov
sbb
jae
out
jne
jl
daa
mov
cmpsb
push
xor
mov
xchg
add
out
shlb
lods
mov
mov
push
xor
add
mov
mov
dec
aas
lahf
pusha
mov
int
andb
stc
xor
add
mov
add
jno
or
xchg
mov
stos
jo
jp
adc
jb
mov
jecxz
adc
fildll
sbb
fisubl
mov
jp
jb
push
mov
xchg
mov
mov
xor
push
and
stc
call
push
lock
mov
jg
js
mov
cmp
outsl
xor
insl
fsubl
inc
daa
in
or
pop
or
je
xchg
repz
fsubs
or
lahf
fmull
pusha
xchg
cwtl
jp
daa
lret
test
movb
fdivrl
or
mov
push
pop
notl
sti
push
fistpll
pop
je
push
xchg
pop
xchg
and
clc
or
push
pop
adc
in
jl
test
sbb
mov
pop
lds
in
pop
mov
xorl
stos
inc
jmp
fldt
mov
stos
movsl
scas
stos
xchg
jo
js
adc
ss
xchg
pop
adc
inc
pop
stc
mov
call
fimuls
daa
movsb
cmpsb
insb
clc
subb
mov
xchg
test
add
push
inc
sbb
dec
cmpsb
fwait
subl
repnz
pusha
ret
mov
scas
mov
or
ja
or
lods
test
push
add
jmp
aad
sbb
cld
push
ljmp
ja
cld
les
clc
adc
xor
xor
jno
mov
pop
or
cmpsl
add
enter
jg
inc
pop
mov
and
mov
pop
mov
or
sbb
jge
mov
mov
dec
inc
fld
mov
scas
push
sub
arpl
aam
adc
test
out
loopne
cmpsl
gs
xlat
push
test
mov
cmp
jno
enter
loop
mov
loopne
dec
fnstenv
inc
pusha
inc
mov
fdivrl
shll
ret
daa
xlat
addr16
loopne
fimull
pop
add
mov
pop
jnp
insb
mov
hlt
das
mov
movsb
add
cmp
push
push
push
mov
sarl
push
xor
cmpsb
mov
pop
ret
xor
jecxz
icebp
cmp
xchg
popf
xchg
push
or
add
dec
push
jns
pop
push
push
xor
xorl
xlat
cmp
mov
das
cmp
add
xor
std
loop
dec
aas
in
rcl
subl
adc
rolb
aaa
or
add
xor
icebp
push
or
xorb
dec
aam
or
sbb
out
inc
rolb
lock
sub
jecxz
and
dec
mov
out
ljmp
sti
cmp
out
pop
mov
mov
lds
cltd
xchg
pop
int3
mov
inc
pop
pop
pop
mov
out
cmp
sbb
clc
dec
ret
int3
push
roll
mov
push
mov
or
mov
xchg
test
lds
pop
pop
paddsb
mov
test
inc
jne
out
dec
rcrl
mov
jno
push
subl
fidivs
push
inc
cmp
mov
push
rcrl
aas
ja
je
add
mov
push
cmpsl
enter
mov
push
fmull
push
sbb
cmp
test
push
add
dec
add
add
mov
push
leave
pop
aam
xchg
or
in
fwait
cmpsl
aam
adc
jmp
push
mov
mov
pop
pop
ja
mov
mov
lock
mov
fld
adc
jecxz
push
pop
lods
inc
rcrl
dec
cld
es
out
ret
sub
sti
mov
cmp
pop
and
dec
cltd
addr16
aam
sbb
jno
dec
je
stc
mov
push
dec
insb
int
xchg
adc
in
xor
aas
mov
xchg
movsl
cwtl
mov
fs
or
rorb
das
push
faddp
push
mov
pushf
mov
aas
enter
scas
and
add
jp
xchg
out
xchg
std
push
iret
or
adc
scas
mov
cmc
xor
hlt
insl
jl
lret
and
mov
adcl
pop
jb
loopne
test
loop
scas
pop
pop
jo
mov
pop
xchg
add
dec
loop
cwtl
enter
add
sub
out
test
lea
push
mov
jb
inc
fisubrl
mov
fildll
aam
in
jo
mov
out
mov
mov
push
scas
sbb
lods
mov
insl
ljmp
pop
sub
push
decb
sahf
mov
in
test
icebp
fsub
cwtl
test
fiaddl
xor
push
out
in
int
inc
xor
ret
sbb
jp
push
xchg
stos
mov
std
cmp
jmp
xchg
sahf
cmpsl
mov
push
pop
push
mov
lods
inc
adc
scas
ds
movsl
inc
or
jb
outsl
xor
dec
cmp
push
dec
xchg
add
pop
data16
lahf
shlb
mov
data16
or
push
lret
mov
jmp
or
nop
insl
aad
lcall
xor
and
or
xor
mov
mov
bound
cltd
outsl
les
orb
sub
loopne
andl
pushf
or
sub
add
mov
in
mov
dec
mov
sbb
outsl
xor
sbb
loop
cmpsb
push
ljmp
cmc
ret
inc
jmp
pop
xchg
and
xchg
jae
fcmovne
cmc
and
mov
fucomp
xchg
mov
sbb
cld
insl
int
outsl
jmp
inc
inc
xchg
mov
std
pop
hlt
pop
push
in
mov
fdivrs
rorb
ss
and
es
arpl
daa
xor
inc
push
mov
cmp
mov
dec
mov
sbb
push
mov
dec
sub
lret
adc
cltd
jmp
aam
or
popa
lcall
push
mov
push
les
roll
gs
jns
into
push
pop
mov
daa
test
into
xor
dec
hlt
and
scas
add
cld
nop
mov
shlb
fisubl
out
loopne
cmp
xorl
sbb
fldenv
push
movsb
cmpsb
insb
cs
sub
push
adc
xor
and
cmp
and
cmpsl
add
lods
or
testb
mov
mov
jle
jl
ret
imul
ja
imul
cmp
pop
lret
and
cmp
push
mov
sbb
data16
ret
jecxz
out
hlt
ja
xchg
mov
mov
jmp
out
adc
pop
fwait
push
and
popa
fcmovnu
sub
mov
mov
xchg
mov
bound
mov
fdivp
in
ja
pop
inc
xchg
cmp
jnp
xchg
mov
outsb
cld
xchg
pop
jns
push
xrelease
jmp
jmp
fldcw
ss
aam
jno
out
pop
ret
call
xchg
mov
sahf
and
insb
lcall
out
push
mov
xchg
call
jle
pop
dec
xor
pop
inc
mov
sub
arpl
pop
std
inc
inc
ret
das
out
xchg
jnp
or
inc
sbb
push
sahf
lock
or
insb
jg
faddl
mov
ljmp
mov
pop
ret
jb
push
pop
pop
push
enter
subl
mov
es
jns
add
ror
aad
jnp
into
aas
mov
rorb
out
inc
repz
loope
cmp
ficoms
mov
pop
popf
sahf
and
add
jae
jae
pop
xchg
insb
pop
xor
xchg
loopne
or
or
fcmovu
xchg
in
pop
mov
cmpsb
test
in
mov
fldt
loop
jbe
cmp
jg
leave
flds
dec
sbb
hlt
repnz
and
and
adc
sbb
sbb
push
jae
jae
adc
je
mov
pop
adc
mov
inc
insl
cmpsb
call
stc
xlat
adc
or
mov
push
in
arpl
jmp
mov
or
mov
push
add
inc
adc
or
inc
push
push
clc
push
in
push
cmp
and
loop
jo
mov
push
sti
fcoml
adc
jg
jecxz
cmp
insl
cmp
xchg
and
cmpsb
mov
mov
nop
aaa
push
aam
inc
int
lock
loopne
xchg
and
cmpsb
adc
test
adc
loope
inc
jp
xor
push
arpl
xchg
mov
and
cmc
cmp
jnp
iret
mov
out
xchg
sti
mov
mov
cmp
add
addr16
gs
add
adc
mov
push
stos
sbb
mov
loop
lahf
addr16
loop
cli
test
rolb
pop
leave
inc
mov
sub
mov
sti
dec
rcrb
dec
sbb
vpaddusw
mov
lods
or
push
idivl
enter
sbb
mov
and
xorl
loopne
test
mov
xchg
mov
sbb
mov
push
loop
insl
and
andl
or
fisttpl
aas
nop
movsl
ja
mov
adc
add
lds
sbb
aas
add
fiaddl
xor
movsl
add
pop
inc
add
add
xor
jae
ds
loop
aam
daa
ss
cwtl
xlat
ret
cltd
test
fidivrs
test
xchg
lods
xor
pop
xchg
xchg
pop
xor
mov
mov
das
cli
imul
or
popa
inc
mov
xlat
cli
fidivl
mov
fwait
decb
popf
andb
mov
repz
stc
mov
fdivrl
movl
aam
mov
lahf
insb
add
lea
shll
jnp
or
pop
dec
addr16
fmull
ljmp
leave
jo
mov
fistl
push
sbbl
mov
jmp
inc
int3
sarl
cli
shrl
jo
mov
cmp
xor
inc
add
inc
mov
fsubs
ficoms
in
ret
inc
into
fucomp
jmp
mov
js
in
or
mov
ds
mov
shr
rorb
or
sahf
out
shll
xor
mov
mov
inc
fs
movsb
int3
cltd
mov
lahf
cmp
sahf
push
xor
cmp
push
mov
lahf
add
jae
push
mov
jmp
xchg
sti
push
add
dec
hlt
orb
jl
cmc
sarb
les
cmp
mov
xchg
and
dec
mov
gs
cmp
lds
cmp
in
into
test
mov
leave
hlt
sbb
mov
movsl
push
negb
bound
dec
lcall
sub
mov
adc
in
jmp
sbb
add
aaa
fsub
loopne
sbb
mov
and
stc
add
inc
das
inc
and
dec
mov
mov
push
enter
mov
daa
jnp
add
addl
mov
xchg
loopne
test
mov
stc
jnp
jge
mov
inc
repz
inc
dec
dec
fs
mov
inc
rdpmc
fdivr
xchg
loope
out
ror
inc
lods
sbb
mov
add
mov
sub
ds
mov
mov
jmp
mov
add
lods
adc
in
shl
push
ret
mov
inc
jae
fidivrs
xor
test
mov
mov
cmp
cmc
adcb
xchg
jge
xchg
pop
pop
lds
lods
jp
int3
jmp
pop
dec
add
adc
add
xchg
or
and
repnz
or
adc
not
pop
ljmp
movsl
mov
aam
lret
movsl
into
dec
mov
mov
lock
enter
stos
xchg
leave
cmc
add
lock
mov
fisubrl
bound
fildll
lea
dec
mov
lods
jge
inc
mov
stc
movsb
xchg
int
into
add
push
jge
inc
xor
je
loope
push
aad
xchg
movsl
mov
pusha
cltd
cmp
jmp
pop
fwait
add
mulb
and
mov
insl
inc
xchg
sub
fxch
or
aaa
orl
mov
sbb
in
xchg
jae
xor
or
jo
inc
sub
or
pop
xlat
pusha
sbb
pushf
pusha
adc
or
sub
mov
daa
stc
xchg
xchg
mov
adc
stc
scas
sbb
sbb
cmp
cwtl
sbb
xchg
pop
sub
xchg
out
fadd
rol
fcmovu
clc
inc
mov
test
and
sbb
sub
in
bswap
xchg
rolb
icebp
mov
push
add
jae
sub
int
movb
pop
cwtl
push
sbb
dec
movsb
aad
test
push
jge
aaa
dec
push
dec
jbe
adc
fistpl
es
aad
jo
cmpsb
adcl
xor
dec
lods
negb
movsb
fdivrs
push
ret
int3
in
add
in
fisubrs
popa
mov
insb
aam
fs
pop
dec
mov
in
xor
in
cltd
scas
dec
lods
out
inc
cmp
pop
lock
sahf
jle
mov
fs
icebp
arpl
sti
jg
inc
mov
jb
lock
cmp
icebp
and
shr
jns
nop
jle
and
pop
and
jl
xchg
push
cmp
cltd
inc
inc
std
or
push
mov
xor
or
sbb
test
mov
out
push
loope
loop
jmp
cmp
into
jbe
pushf
and
or
jae,pt
loop
cmpsl
hlt
sbb
xor
xor
jp
notb
xchg
mov
outsl
sbb
outsl
fwait
les
clc
or
and
outsb
roll
and
sahf
fsubrl
cmp
or
adc
push
inc
std
shll
inc
pop
pop
neg
dec
mov
inc
adc
xrelease
out
mov
fbld
push
inc
mov
imul
jbe
sbb
ja
sahf
pop
jp
pop
mov
xor
bound
sarl
bound
jle
rcrl
xchg
adc
push
cmc
lret
int3
or
dec
xor
pop
or
or
dec
add
sub
inc
out
shl
jmp
shll
cmpsb
mov
jp
shrb
in
sbb
shr
push
movsw
mov
repz
xchg
fnstsw
add
out
aas
adc
fwait
dec
mov
xchg
int3
orb
sub
adc
jg
rorl
aaa
sahf
sub
insb
sub
or
sub
mov
or
xchg
icebp
dec
cmp
aas
xchg
adc
xchg
movsl
xchg
leave
push
pop
mov
and
aam
dec
push
ficomps
mov
jne
jle
cwtl
sbbl
push
adc
sahf
jle
add
dec
test
jg
jnp
insb
add
inc
sbb
jge
sbb
push
fwait
xorb
scas
sbb
jmp
adc
push
sti
add
inc
jp
add
push
out
add
leave
dec
movsb
clc
xchg
jle
mov
sbb
mov
mov
subl
hlt
pop
pop
rol
jl
imul
in
repz
add
outsb
int
ss
jb
stos
aam
mov
sbb
and
dec
outsl
sub
pop
push
popa
mov
mov
roll
add
scas
sbb
out
mov
daa
push
pop
jg
aad
pop
sti
mov
movsb
jne
test
cmp
dec
mov
rorl
ret
inc
sub
ffreep
pop
sub
adc
insb
pop
movb
xchg
cmp
mull
test
outsl
inc
xor
cmp
pop
xchg
push
pop
ret
rolb
out
and
cli
cmp
adc
mov
mov
cmp
iret
movsl
inc
dec
fstpl
pop
pop
adc
dec
fidivrs
inc
lcall
call
mov
repnz
cmp
pop
gs
hlt
lcall
sub
loopne
cmc
sbb
stos
ret
sub
mov
mov
cmp
inc
fldl
push
sub
sbb
sub
gs
adc
sti
in
gs
adc
rclb
test
lahf
dec
xchg
xchg
and
push
add
das
lea
shrl
imul
cmp
mov
jnp
jb
outsl
sub
negl
popf
xchg
popa
or
inc
jg
xchg
out
mov
sarb
outsl
sbb
iret
jmp
cmpsb
call
and
mov
xchg
loopne
jae
incb
xor
fwait
push
sbb
ret
loopne
jmp
in
in
iret
ljmp
cwtl
mov
insb
dec
imul
divl
rorb
add
sub
minps
imul
push
aam
mov
mov
loopne
lret
xor
jl
rcl
push
das
in
shl
dec
cmpsl
shlb
or
and
xchg
lahf
lods
int
pusha
add
adc
call
push
jecxz
inc
scas
jg
lcall
mov
btr
mov
fcos
mov
fisubs
insl
cltd
lock
push
sbb
leave
sub
loope
xor
int
bound
into
fwait
clc
insl
inc
dec
les
push
jbe
ret
xchg
jle
mov
bound
xchg
pop
jne
fiaddl
testb
push
rorb
hlt
push
dec
sahf
pop
cmpsl
xor
ss
xor
sbb
sub
aaa
pop
rcrb
inc
inc
imul
daa
pop
jns
push
aad
aad
inc
jb
push
jmp
lahf
xchg
mov
and
daa
push
jns
or
and
cltd
mov
sbb
add
sub
add
mov
push
jno
xchg
mov
ror
sub
inc
js
inc
cmp
inc
jns
cmpsb
xchg
cmp
lret
in
mov
loope
int3
push
lock
sbb
es
mov
xchg
adc
fs
mov
outsb
xchg
sbb
mov
dec
pop
test
dec
adc
std
mov
xchg
fnstenv
xchg
and
sbb
dec
imul
fstps
popa
bound
add
mov
repnz
popa
dec
pop
in
or
shl
xchg
ja
jbe
push
stc
clc
loop
aas
fdivrs
sub
push
daa
ret
mov
cltd
aad
fimuls
je
jle
loope
insb
dec
or
add
jecxz
xor
imul
pop
mov
es
xchg
es
push
push
aas
mov
cmpsl
xchg
fcomi
testb
movsb
jmp
jne
xor
dec
in
mov
cmp
pop
cli
js
sub
adc
dec
mov
lock
loopne
nop
cmp
xor
lret
mov
jo
pop
or
movsl
insb
pop
aas
sub
jnp
mov
or
jecxz
pop
mov
sarl
lret
add
xor
ret
sub
stos
pop
push
mov
lret
xchg
jp
ficoml
cs
xor
pop
leave
psraw
push
je
mov
jns
mov
movsb
inc
stc
movsb
adc
xor
mov
notb
pop
test
fsubr
inc
mov
pop
mov
xor
fists
mov
xor
sarb
or
test
imul
or
pop
sub
testb
enter
sahf
or
sahf
mov
loopne
add
xchg
adc
xchg
cld
xor
push
lahf
sub
andl
sbb
jne
int
fs
xor
das
test
mov
cmp
decb
das
fstl
inc
insb
cmp
gs
dec
mov
out
pusha
outsl
jns
aad
in
sub
sub
out
or
or
push
lret
into
sub
adc
je
pop
adc
pop
adc
movsl
test
jle
xchg
fucom
call
pusha
in
mov
movsl
sbb
shl
cmp
js
addr16
mov
inc
sub
mov
ret
test
in
or
and
push
push
out
rclb
pop
notl
jmp
sbb
cmpsb
xchg
lock
mov
push
in
ret
mov
lods
pop
jp
xor
mov
pop
sti
push
pop
in
cmc
hlt
outsb
imul
add
mov
push
int3
das
movsb
or
add
jecxz
cwtl
int3
in
loop
add
lds
shll
mov
imulb
mov
mov
rol
jp
sbbb
push
repnz
pop
sub
inc
xlat
xchg
mov
int
sbb
sub
or
xchg
adc
dec
pop
adc
mov
sub
inc
rolb
leave
pop
mov
loope
adc
out
fcomp
arpl
movl
or
fadd
sub
jg
xor
and
or
add
rcl
cmp
imul
cli
scas
fs
in
adc
inc
and
fnstcw
mov
cmc
int3
das
int
ja
inc
out
dec
cmp
push
sub
and
stc
jp
push
fwait
jg
cs
test
sub
mov
std
push
cld
sbb
sbbl
dec
mov
clc
sub
and
jle
or
in
sahf
cmp
push
scas
sti
enter
jecxz
ja
mov
cwtl
cwtl
jnp
and
lcall
mov
mov
lea
mov
inc
cs
dec
cli
inc
jmp
and
dec
cmp
loope
push
test
or
mov
adc
rolb
adc
sub
mov
enter
xor
xor
jle
outsl
notb
xchg
jae
push
out
adc
pop
mov
mov
mov
pushf
push
and
sub
gs
out
push
push
mov
loop
scas
int3
inc
jle
test
mov
dec
or
in
sbb
scas
loop
addb
xchg
jno
int
pop
loop
inc
cmp
xor
fs
sahf
lds
idiv
cmpsb
outsb
ror
inc
lock
push
pop
push
mov
lds
push
mov
fcoml
dec
loope
test
push
icebp
mov
inc
in
jo
loope
cltd
lock
insb
push
ret
call
data16
sbb
sbb
test
subb
orl
push
push
dec
pop
cwtl
mov
dec
out
jp
rol
xor
push
loop
mov
jno
or
mov
push
cld
xor
lea
cmpsl
repz
mov
push
aam
lock
andb
xchg
sbb
js
mov
and
mov
push
lahf
adc
jg
push
aam
mov
stos
aaa
inc
inc
inc
roll
ficomps
in
aad
xor
in
pop
or
out
lods
mov
icebp
pop
nop
adc
dec
test
push
cmp
daa
fdivrs
aaa
sbb
xor
andl
test
jne
rcl
xchg
stos
daa
pop
adc
popa
push
mov
sti
imul
xor
fdivrs
popa
mov
jns
arpl
sub
jl
mov
inc
call
mov
pop
cs
aaa
xchg
rep
lahf
adc
xchg
push
mov
xchg
out
and
sbb
jmp
lret
jae
dec
cmp
and
inc
xor
xchg
dec
arpl
lds
lahf
or
sarl
sbb
sti
mov
add
pushf
sti
cli
mov
call
iret
shll
rorl
dec
mov
clc
pop
jp
xchg
or
stos
pop
push
xchg
adc
subb
adc
icebp
daa
call
out
dec
mov
repnz
or
jmp
push
fistpll
sbb
ljmp
imul
clc
xchg
cmp
push
fistl
pop
adc
ret
out
push
jmp
pop
sub
fistl
cwtl
xor
adc
cmpsb
lds
shlb
pop
xchg
movsl
out
ret
xchg
mov
bound
cld
push
int3
push
mov
adc
adc
push
in
ud0
imul
push
add
rol
iret
xchg
mov
dec
out
or
xchg
push
and
out
sub
imul
sbb
popl
mov
imul
push
push
pop
xchg
inc
push
mov
dec
mov
push
repnz
fmuls
pop
sub
cmpsl
enter
fsubp
inc
and
mov
sbb
sub
mov
icebp
shrl
jae
lcall
mov
daa
pushf
jmp
jns
cmp
scas
push
addl
inc
or
je
pop
xchg
adc
pop
jns
cwtl
cmpsb
or
mov
or
jecxz
lcall
and
sti
in
faddl
dec
or
dec
mov
or
in
lar
add
xor
mov
fimuls
mov
adc
cmpps
setnp
add
ret
xchg
mov
shlb
dec
mov
sbb
std
pop
mov
mov
push
jg
jno
pop
xor
xor
icebp
push
repz
dec
xchg
cwtl
repnz
out
stos
mov
bound
jae
ds
add
cwtl
movsb
es
cmpl
dec
push
push
lods
dec
sub
loope
inc
mov
insl
shlb
and
sub
fcomps
sbb
mov
scas
dec
cmp
mov
adc
dec
int3
sbb
adc
lret
shl
push
mov
les
or
aaa
daa
int
in
jnp
mov
mov
fnstenv
push
aas
sbb
pop
dec
dec
js
xchg
mov
inc
mov
cmp
jae
cmp
cli
and
sti
add
or
imul
mov
dec
pop
inc
rcrl
lret
push
mov
push
stos
ds
jmp
out
pop
divl
cmc
dec
fstp
mov
mov
cmpsb
rorb
dec
push
lcall
and
notb
cmpsb
pop
sbb
mov
push
mul
push
pop
sti
xor
arpl
jle
es
push
dec
shl
dec
cmpsl
xchg
lcall
fucomp
dec
stos
ljmp
mov
add
mov
lods
mov
loop
inc
fs
mov
cltd
hlt
popa
xchg
jmp
jge
and
and
scas
jg
repz
imul
xchg
jge
mov
in
push
rcl
aad
fbld
mov
xor
jb
js
mov
jecxz
or
sbb
jbe
push
fsts
clc
fbld
movsl
cmc
cwtl
adc
mov
inc
lods
fwait
sbb
push
and
cmc
shlb
std
and
mov
mov
aas
add
test
sbb
imull
mov
in
fidivrs
adc
jmp
movsb
rorb
fisttpll
ret
fidivrs
inc
aaa
pop
nop
pushf
int3
add
push
push
mov
or
cmpb
lods
clc
ds
inc
inc
push
pop
add
xchg
mov
sbb
outsl
mov
sbb
mov
cld
std
mov
dec
sub
lea
sbb
sbb
dec
test
inc
xchg
shll
or
cld
dec
jo
sbb
mov
mov
or
mov
fsubrl
fcmovu
scas
jae
ljmp
in
inc
xorl
cmp
xor
sbb
cmc
repnz
les
insl
inc
bound
into
inc
jo
adc
inc
inc
push
int3
lahf
mov
cs
mov
in
pop
ret
adc
out
pop
sub
mov
sbb
pop
xchg
mov
jo
jnp
jnp
insl
sub
jg
mov
and
outsb
ret
call
scas
push
int3
jae
sbb
or
sub
push
ja
outsl
sbb
push
xor
insl
pop
xchg
sub
jnp
add
pop
push
mov
xchg
loope
loop
daa
mov
xchg
mov
mov
movswl
cmp
push
cs
jecxz
loop
int
dec
pop
cmp
xorb
mov
cmp
incl
rolb
movsb
subl
xchg
mov
repz
icebp
dec
pop
pop
xchg
adc
xlat
test
and
lock
jecxz
dec
or
push
push
lret
mov
push
decl
ror
fwait
mov
vcvtsd2usi
sti
fldenv
imul
mov
adc
xchg
cld
xor
xchg
ss
lods
push
mov
mov
lcall
jmp
add
scas
xor
ret
imul
xor
in
aad
mov
or
adc
or
aas
add
mov
xchg
je
insb
inc
mov
push
inc
mov
call
and
sub
pop
cmp
in
xor
arpl
fdivs
jo
push
mov
sti
and
sbb
negl
dec
mov
xor
outsb
fisubs
jne
lea
sbb
jmp
hlt
icebp
std
adc
or
scas
sti
aad
or
sub
sub
loop
mov
jo
xchg
pushf
inc
dec
sahf
pop
outsb
xchg
xchg
aaa
cmp
into
stc
imul
clc
idivb
mov
movsl
int
add
fisubs
mov
and
mov
fsub
mov
add
jg
or
add
adc
les
lea
jbe
or
mov
and
les
xchg
subb
and
daa
mov
mov
push
repz
lcall
lret
sbb
xchg
call
cltd
shlb
dec
xor
loop
outsb
inc
loope
daa
sbb
pusha
lds
mov
stos
stos
and
dec
shrl
sarl
fwait
ljmp
fwait
aad
lock
push
jmp
bound
jns
repz
sbb
ret
int
push
push
sub
xchg
add
cmpsl
xchg
inc
sub
stc
add
out
push
and
fs
imul
or
push
movsl
lahf
sbb
not
push
add
xor
mov
imul
sub
fsts
inc
iret
jp
and
xchg
in
cwtl
sub
in
dec
lods
scas
dec
imul
push
test
xor
cmc
xor
inc
lcall
dec
rcrb
mov
dec
xchg
out
icebp
out
imul
ficoms
in
test
pop
mov
cmp
ret
dec
jbe
xor
into
sti
mov
jp
fiadds
inc
push
in
aaa
loope
or
lock
es
inc
je
scas
add
sbb
inc
fnstenv
dec
push
xchg
inc
cmp
or
sbb
push
jle
push
flds
dec
pop
cmp
addr16
xor
add
stos
pushf
lahf
sub
ret
jle
inc
notl
loop
out
xlat
inc
sti
ds
and
inc
sbb
inc
loopne
fldenv
sub
mov
stos
adc
sar
js
mov
mov
fucomp
pusha
pop
lock
sbb
adc
dec
lods
sbb
xor
sar
sbb
jmp
fldl
xchg
rorb
mov
sub
cltd
push
pop
enter
xlat
mov
fistpll
sub
mov
ss
mov
iret
loopne
lahf
jne
pop
test
xchg
xchg
adc
insl
cmp
xor
xlat
enter
mov
sub
dec
mov
adcb
stos
aaa
adc
mov
js
xlat
lldt
and
pop
inc
push
adc
push
pop
jbe
mov
shrd
adc
pop
mov
or
sbbl
mov
mov
aam
negb
adc
push
ror
push
xchg
mov
inc
outsl
es
add
fmulp
cli
mov
xchg
mov
lcall
jo
pushf
fidivl
data16
loop
in
sub
push
sub
notl
inc
outsb
ret
push
sub
pop
test
ja
das
push
dec
mov
xor
sub
data16
xchg
rorl
ret
loop
xchg
mov
and
inc
es
dec
mov
sub
lret
jbe
push
mov
inc
or
stos
outsl
pop
pop
bound
cs
push
dec
jg
testl
je
xchg
mov
dec
pop
jne
lods
xchg
dec
and
cltd
mov
clc
xor
mov
xchg
out
fildl
das
mov
movsl
scas
push
pop
sti
sub
lock
dec
mov
add
add
jb
fdivl
int3
mov
cmpsl
xchg
cmp
call
inc
and
push
test
in
sbb
jecxz
daa
mov
pop
push
or
lds
cltd
and
stos
adc
or
addr16
sbb
jmp
lret
dec
push
cmp
dec
data16
jl
mov
fdivl
mov
jnp
loope
cs
mov
lret
aas
ret
push
fs
mov
shrl
mov
shl
movsb
push
jle
sbb
int
ljmp
dec
imul
in
jmp
adc
push
call
movsb
cltd
arpl
call
inc
mov
mov
push
adc
xorb
adc
sbb
dec
mov
mov
ljmp
sub
je
sub
mov
iret
jp
sub
pop
pusha
fs
sbb
or
sub
cmp
cmp
cmc
pop
add
test
cltd
pop
or
mov
mov
aaa
jae
add
out
xlat
mov
shrl
icebp
push
rcll
and
push
inc
nop
dec
nop
es
push
sub
cltd
add
fucomp
int3
add
push
sub
into
test
lret
xlat
xchg
divl
lret
movsl
clc
scas
dec
ja
ja
xor
addr16
leave
lcall
shrb
mov
test
movq
lods
rol
movsl
mov
mov
dec
mov
mov
aam
push
mov
dec
int
pop
inc
sbb
and
mov
dec
data16
cmpsb
aad
popa
pushf
mov
pop
cli
add
mov
lret
insl
int3
jge
out
ljmp
or
jb
mov
cmc
sub
lret
mov
scas
xor
cmp
pop
addr16
push
adc
add
sahf
jp
lret
outsl
mov
nop
das
loopne
test
and
cwtl
xchg
sbb
rcr
fdivl
loopne
fdivp
icebp
pop
enter
nop
addr16
mov
jp
sbb
adc
repz
mov
cli
pop
cmpsl
jmp
mov
jne
jecxz
cmp
lcall
jnp
and
je
sbb
or
call
pop
add
mov
mov
pop
pop
std
ljmp
xor
xchg
leave
loopne
xor
xor
sti
bound
enter
rcrl
sub
outsl
jbe
dec
push
movb
cmpsb
pushf
inc
loope
inc
sub
test
insl
shrb
inc
das
test
ret
pusha
sbb
jg
add
pusha
add
push
negb
pop
aam
jno
cmp
rclb
pop
push
pop
sbb
mov
mov
in
cmc
cwtl
scas
dec
mov
aam
or
fs
sbb
dec
adc
fwait
bound
or
rolb
jns
cmp
push
pop
jno
jg
inc
call
jge
pop
sub
mov
mov
les
fs
inc
hlt
dec
js
out
adc
jae
inc
les
data16
or
es
adc
hlt
out
jge
repnz
repz
outsb
fwait
jne
fisubrl
xchg
jle
mov
out
cs
fucom
rcll
test
aaa
lret
ja
nop
adc
sub
sti
lea
in
jne
mov
inc
cli
xchg
sub
and
push
xchg
push
pop
out
das
sbb
adc
adc
push
sub
xchg
adc
xchg
add
inc
or
jo
and
and
push
ret
xchg
xlat
lahf
sarb
push
loop
or
aaa
add
test
sub
cli
dec
push
rclb
jno
xor
xchg
lods
or
xchg
test
mov
sbb
fistpl
mov
fadds
sub
pop
cmp
and
sub
ret
jp
in
clc
push
jno
icebp
je
popa
jmp
add
push
adc
mov
in
aam
xor
sub
test
add
adc
hlt
loopne
jle
add
pop
mov
jmp
xor
fidivs
and
orb
bound
pop
sahf
and
push
addr16
mov
aaa
aad
rolb
mov
mov
xlat
dec
cmp
test
dec
pop
ss
adc
cmp
xchg
xchg
mov
fsubr
das
push
addr16
in
sbb
movsl
mov
or
mov
xor
mov
shrl
adc
mov
sarl
js
movsb
xchg
mov
lds
mov
pop
mov
dec
sub
xor
lcall
stos
lods
adc
cmp
xlat
mov
fldpi
stos
xor
jne
push
or
pop
pop
andl
xor
testl
jecxz
outsl
daa
daa
push
push
push
sbb
popa
test
mov
push
fistpl
insl
adc
out
movsl
sub
jg
addl
jl
pop
mov
and
es
into
cmp
je
movsb
addr16
ficomps
sbb
jg
loopne
mov
test
aad
fwait
xchg
imul
std
aad
dec
rcrl
sarl
mov
lahf
mov
inc
aas
cwtl
sub
xor
int
rol
hlt
xchg
jno
jge
or
repz
inc
imul
xorl
fnsave
jo
sbb
mov
je
push
push
xchg
xlat
push
push
pop
xchg
andl
push
popa
mov
mov
inc
mov
insl
das
adc
jnp
inc
lea
mov
out
xchg
cmc
je
arpl
dec
adc
lods
lret
imul
mov
mov
sub
or
pcmpeqw
hlt
hlt
out
inc
ret
push
xor
jbe
inc
sbb
std
rolb
loop
imul
iret
push
hlt
pop
roll
xor
push
mov
inc
dec
popf
rclb
int3
jecxz
aaa
lret
subl
stos
ds
popa
rclb
mov
pushf
xor
xor
xchg
jo
or
loopne
jp
add
cmp
mov
je
into
xor
inc
loop
pop
shll
mov
fmull
xor
in
sbb
lret
aas
nop
sti
out
das
ffreep
cmp
or
cmp
ret
cmc
in
jecxz
fcomp
lcall
xchg
in
add
adc
inc
dec
int
enter
mov
imul
xchg
pushf
int3
lahf
and
adcb
outsb
aam
sub
test
out
cld
pusha
and
push
cwtl
popa
xchg
add
cltd
sti
mov
mov
or
int
insl
mov
sub
das
fcoms
lret
les
and
jl
sbb
push
fstp
jae
sahf
orl
add
push
xor
mov
in
inc
add
lock
push
mov
lods
jmp
cs
or
nop
push
ror
enter
mov
inc
xor
enter
mov
aas
bound
mov
out
pop
ja
and
dec
push
stc
test
data16
insl
imul
aam
xchg
fsubrs
and
jp,pt
mov
je
push
rolb
mov
cmp
shlb
subb
jmp
sbb
arpl
test
repz
mov
fwait
cmp
enter
insl
pushf
cmp
jl
ss
in
sti
add
push
or
and
inc
and
xor
sub
jns
outsl
ja
xchg
jnp
pop
mov
and
xchg
pop
mulb
mov
stc
and
sahf
cmp
push
mov
adc
loop
cli
loope
pop
out
pop
fisttps
scas
sahf
mov
lods
or
jbe
les
jp
ds
loopne
xchg
mov
data16
aas
pop
pop
mov
flds
sbb
inc
dec
and
dec
jae
dec
xchg
add
arpl
inc
cmpsl
aam
pop
shlb
push
rorl
cmp
nop
int
xchg
in
cmp
ret
mov
xchg
into
or
jp
adcb
cmpsl
clc
orl
mov
shll
inc
roll
mov
inc
and
dec
push
gs
jnp
lcall
pop
les
push
jle
repnz
inc
dec
outsb
insb
in
xchg
sub
movsb
push
inc
iret
mov
dec
mov
inc
pop
pop
or
mov
and
mov
test
fstl
mov
mov
movsb
xor
and
and
leave
inc
pop
push
sub
arpl
bound
ljmp
scas
mov
add
add
push
stos
test
xor
cmp
and
cld
jno
lods
out
dec
test
aad
dec
movsl
shlb
xor
cmp
jae
push
pop
and
dec
and
ljmp
jmp
aaa
add
sub
pop
ss
inc
fwait
pop
imul
aam
push
or
shr
and
out
cmp
ss
outsl
out
cvtdq2ps
bound
inc
push
sub
push
mov
push
and
dec
iret
test
scas
mov
daa
fndisi(8087
mov
movb
cmp
cli
mov
leave
testl
out
dec
or
lret
mov
stos
mov
emms
or
push
push
dec
or
into
sub
subb
jns,pn
fdivs
and
xchg
outsb
push
sub
inc
and
cmpsb
dec
mov
out
in
es
xchg
repz
in
inc
inc
fnsave
adc
cmp
dec
or
jg
adc
dec
repnz
jg
movsl
insl
jb
imul
imul
pushf
pop
movsl
jmp
adc
arpl
xchg
xchg
bound
stc
int3
insl
fnstenv
dec
jo
xor
add
int
or
cmpl
inc
movsl
mov
adc
adc
adc
xor
std
fwait
repz
pop
lods
cmp
nop
or
adc
loopne
inc
int
divl
shr
jmp
jge
add
enter
or
sbb
stos
lods
pop
cwtl
out
ja
imul
test
imul
xchg
sub
mov
xchg
or
icebp
mov
cltd
xchg
add
add
xlat
lods
scas
fnsave
and
sbb
sarl
cmpl
rcr
push
xlat
pop
jmp
and
sub
lret
pop
mov
or
pop
hlt
nop
mov
daa
ret
xchg
stos
xchg
dec
mov
push
sub
push
push
outsb
daa
fsubl
adc
xchg
pushf
add
inc
int
lock
stos
xor
lea
jno
stos
int3
insl
lock
cmc
addl
data16
jno
push
loopne
jge
mov
adc
mov
jo
fs
fs
xchg
sub
ss
mov
popf
jmp
mov
lahf
mov
outsb
les
in
mov
and
or
aad
iret
jb
push
push
push
or
cmpsl
in
pop
jmp
lds
stc
les
in
mov
in
aam
push
mov
mov
push
mov
daa
mov
xlat
mov
adc
hlt
jae
arpl
xchg
mov
dec
inc
loope
mov
sub
leave
jne
xor
mov
leave
xchg
sub
cmpsl
dec
aam
das
insl
add
jge
fdivl
adc
inc
fidivrs
pop
sbb
stos
out
int
test
insl
add
xor
stos
cmp
pop
pop
push
call
stc
lret
movsb
stos
fmuls
test
adc
loopne
push
imul
mov
out
mov
cmp
rol
lock
mov
andl
dec
insl
jge
pop
and
sbb
rclb
inc
jle
lret
mov
sub
or
xchg
jbe
pop
or
stc
sbb
int3
mov
adc
mov
lock
cli
std
loope
sub
inc
pop
jp
mov
cmp
and
iret
add
adc
test
clc
inc
test
rcrb
fs
aad
mov
cmp
sub
cmc
pop
mov
inc
cmp
dec
or
call
out
notl
and
adc
push
push
in
sbb
imul
adc
lret
aas
scas
loope
fsub
pop
sbb
pop
imul
loop
cs
lods
cmp
xor
push
popa
xchg
leave
fucomip
or
pop
outsb
and
dec
in
je
test
jnp
fimuls
push
or
dec
push
xchg
push
mov
jmp
xchg
outsb
das
xchg
sub
insb
adc
or
sub
int
cwtl
or
adc
fadds
imul
add
or
mov
hlt
add
sub
jl
adc
jnp
sbb
lds
or
shll
fadds
mov
inc
pop
insl
iret
xor
ror
insb
ret
or
je
jp
pop
sub
pop
ja
sbb
int
pushf
xor
cs
insl
negl
fistpll
dec
xchg
cmp
and
nop
adc
cmp
dec
inc
jl
inc
test
mov
insl
popf
rorl
xchg
jae
and
popf
imul
mov
icebp
sub
jbe
cmp
push
jmp
cmp
subl
dec
cmpsb
repnz
sti
add
leave
sbb
pop
fwait
jne
push
inc
in
or
je
mov
js
push
insb
sbb
je
mov
daa
fidivrs
arpl
fcmovnb
adc
out
cmp
cvtps2pi
pop
sbb
pop
mov
dec
imul
jmp
push
pop
dec
repz
and
and
les
call
int3
sbb
mov
in
mov
stos
sub
fsubrl
push
or
add
xchg
fstpt
icebp
dec
push
adc
iret
loopne
negl
jbe
sbb
leave
loopne
idiv
push
push
inc
push
insl
lea
icebp
mov
and
cmp
addl
scas
sub
add
add
lahf
xchg
or
ja
iret
sbb
sbb
nop
push
or
add
mov
mov
adc
add
mov
inc
xchg
fildl
test
pusha
mov
enter
das
or
das
xchg
add
push
add
add
xor
dec
cmpsl
lahf
cmc
out
push
or
data16
sahf
data16
into
je
sub
cwtl
iret
xlat
or
js
bound
popf
xorl
stos
adc
or
stc
xor
sbb
and
je
mov
mov
xor
cmpsb
clc
fisubl
lahf
call
or
js
pop
lret
xchg
jo
cmp
arpl
jle
movsb
xor
xchg
lock
pop
stos
fwait
outsl
mov
cmp
fnstenv
lock
cli
push
loopne
sub
xchg
push
dec
jge
jg
je
xchg
push
pop
jns
es
aad
pop
nop
add
nop
rclb
stos
into
mov
aad
scas
push
xchg
pop
sub
jae
mov
push
inc
jecxz
and
rol
movsl
sub
leave
adc
pop
jb
ret
fmuls
push
ljmp
jns
jno
mov
ljmp
flds
mov
cli
xor
jmp
repnz
jbe
or
dec
cmp
inc
cmpb
pop
leave
daa
mov
out
int3
cmp
push
cmp
push
or
add
jbe
insl
cmp
out
pushf
test
out
in
inc
lods
or
leave
push
icebp
fists
out
gs
aam
jmp
jns
mov
cmp
not
sahf
call
clc
out
xchg
jl
cmp
push
push
lods
outsl
mov
mov
inc
clc
loopne
inc
push
mov
push
cmp
insb
push
add
xchg
arpl
outsl
cmp
pop
das
adc
mov
xchg
or
mov
xor
lahf
push
and
xorl
aad
pop
mov
lahf
mov
and
movsb
stos
dec
loop
stc
sarl
push
enter
addr16
cltd
leave
ss
sbb
into
dec
or
aas
lock
int3
out
sbb
fildl
jmp
outsb
addr16
mov
cmc
in
push
orb
mov
js
cmp
pop
aam
mov
mov
outsb
dec
mov
jo
jge
loopne
xchg
lods
lea
inc
or
inc
aas
call
sbb
repnz
mov
bound
fsubrs
or
lods
xchg
divb
popl
sbb
inc
sub
cwtl
loopne
sub
sahf
jno
stos
dec
out
fistpll
out
mov
notl
push
and
jmp
popa
cli
in
sub
mov
ljmp
mov
and
and
les
call
or
in
adc
lret
aaa
testl
test
in
xor
gs
arpl
inc
out
push
leave
movsb
add
imul
jg
mov
jge
mov
aam
shll
xchg
mov
mov
shrl
or
lret
pop
sahf
dec
out
push
mov
into
test
int3
add
jnp
negb
bound
sub
or
nop
ret
mov
sbb
add
mov
mov
xor
inc
sub
pop
xor
fdivrl
out
movsl
cmp
pop
xchg
pusha
insl
sub
outsb
je
jp
fidivrs
test
dec
dec
push
cmp
or
in
gs
jo
cs
movsl
xor
mov
ret
ja
and
sbb
add
cmc
mov
push
jns
mov
cli
jns
adc
jo
push
mov
push
xchg
push
adc
das
xorb
adc
mov
mov
mov
adc
mov
push
dec
repnz
cltd
sub
mov
or
stc
sub
mov
jmp
cmp
pop
xchg
jmp
roll
jno
sub
mov
repnz
scas
xchg
xlat
and
mov
frstor
daa
out
test
dec
fstps
imul
and
outsl
inc
cmp
mov
jg
movsl
xor
and
movsl
xor
mov
pop
mov
add
fistpll
xchg
inc
sti
popf
sarl
mov
push
aas
or
out
jae
mov
lret
push
mov
in
int
inc
fisttps
les
in
cli
mov
add
sbb
push
call
adc
cmpsb
push
push
test
scas
inc
lahf
xchg
mov
sbb
cmp
ds
inc
dec
cmpsb
and
jae
popa
mov
lahf
loop
ds
in
jmp
jl
push
sar
adc
jns
clc
ret
sbb
cld
aas
out
jp
ss
lds
rcll
inc
pop
or
push
cmp
rclb
shl
imul
sbb
push
inc
adc
push
lret
out
cmpsl
loop
mov
ficoml
jp
repz
sti
jne
sub
notl
inc
or
push
cld
dec
mov
test
cmpsl
xchg
push
cs
stos
out
push
andb
mov
call
mov
bound
sbb
adc
lahf
push
pop
jnp
xchg
cld
loop
sub
sub
iret
jb
cli
lods
cli
fcoml
lret
in
jle
push
sub
and
push
out
mov
or
aam
jecxz
sbb
mov
cmp
cmpsl
cmp
sub
adc
mov
push
inc
cmpsl
das
push
pushf
je
cmc
cmp
outsb
mov
int
pop
lea
aaa
dec
out
and
test
cltd
inc
adc
push
mov
push
inc
pop
sub
fsubrs
repnz
pop
push
mov
subb
data16
lret
jge
pop
sub
xchg
push
inc
or
pop
jo
mov
mov
arpl
mov
test
add
pop
stos
add
mov
or
xbegin
add
xchg
fisubl
mov
pop
mov
ja
out
push
xchg
jl
testl
mov
fstps
adc
insb
dec
push
inc
mov
icebp
xchg
ds
mov
sbb
xchg
cli
int3
xor
push
push
cmp
out
test
scas
mov
add
jl
clc
inc
mov
dec
sbb
popa
sub
sti
xchg
sbb
ja
popf
mov
push
testl
shrl
out
push
adc
push
repz
pushf
cmp
lret
push
inc
mov
cltd
inc
cwtl
cmpsb
adcl
aam
lds
pop
in
hlt
xchg
inc
push
inc
adc
pop
lahf
xor
mov
mov
adcb
les
scas
mov
testl
int3
jg
mov
out
adc
sar
std
test
std
fdivl
dec
je
inc
fistpl
and
fiaddl
or
dec
pop
icebp
iret
ficomps
out
les
adc
and
or
inc
insl
xor
lods
push
jecxz
lret
jns
jp
xor
loopne
mov
lods
popa
xchg
aam
xor
das
adc
popf
add
lcall
mov
in
jne
hlt
sub
jbe
cmpsb
pop
mov
imul
jg
js
pop
fisttpll
and
or
inc
fs
mov
and
mov
xchg
xor
pop
sub
js
popf
jne
imul
push
in
pushf
xchg
clc
ror
adc
fdivs
pop
mov
test
arpl
mov
push
sub
test
inc
jg
push
ret
call
fsts
iret
lcall
cld
fiadds
outsl
adc
aad
xchg
movsb
pop
mov
cmp
aad
inc
jmp
sbb
scas
push
sub
mov
cmp
fs
enter
mov
jge
sub
inc
inc
push
mov
fmul
cmpsb
fwait
sub
js
in
xchg
mov
les
pop
arpl
insl
mov
fwait
shrb
sbb
rcrl
outsl
lea
push
popf
mov
adc
sbb
mov
inc
lret
scas
mov
sub
fs
mov
mov
adc
movsl
jecxz
push
add
sub
clc
sbb
dec
cmc
nop
lea
imul
imul
daa
sti
mov
jg
jo
mov
arpl
xor
repnz
arpl
xchg
inc
mov
pop
fsub
sub
mov
loope
or
dec
add
out
pushf
jge
mov
push
stos
insb
xchg
push
mov
push
cmpsl
movsb
pop
push
sub
cmpsl
xchg
jg
jl
out
or
movb
adc
xor
push
push
imul
out
cmpsl
push
adc
cmp
xor
sub
in
sarb
sahf
xor
jbe
or
sahf
test
ljmp
dec
pop
dec
stos
adc
fists
push
or
dec
sar
pop
inc
shll
cmpsb
jmp
pop
jmp
mov
mov
or
js
call
push
xchg
js
dec
adc
mov
and
lcall
jg
cmp
das
jg
mov
mov
das
ljmp
push
and
pop
cs
ljmp
sub
sub
add
and
mov
and
inc
pop
out
add
push
xor
loop
jo
lcall
ret
dec
cmp
ffree
sbb
std
dec
leave
out
jb
lods
cwtl
dec
adc
push
aas
mov
cwtl
cwtl
mov
add
sti
push
fistpl
adc
cmp
mov
xor
xor
movsl
enter
movl
aam
in
lds
popa
jg
or
iret
mov
aad
aad
sub
enter
jecxz
xor
sbb
push
add
pop
mov
sub
jg
std
ror
cmpsb
sbb
das
xchg
pop
mov
sub
adc
inc
xor
mov
push
inc
dec
xchg
push
hlt
lea
inc
fdivrl
test
mov
push
add
pop
dec
fistl
jp
movsb
sub
test
ds
popa
sahf
or
inc
and
xchg
in
in
or
mov
addr16
shr
add
dec
fisttpll
sti
dec
ret
sti
lea
pop
cltd
pushf
ss
cltd
push
mov
mov
xchg
mov
pop
mov
shlb
cmpsb
xor
inc
jno
out
mov
repz
idivl
push
wrmsr
ret
test
jl
xchg
push
das
adc
push
jl
jle
and
in
mov
xchg
mov
cmpsb
pop
aad
arpl
std
ja
or
cltd
or
add
mov
sub
xor
sbb
loopne
jle
rolb
notl
jmp
fimuls
dec
mov
rcrl
lcall
mov
popa
sarb
std
add
lods
jnp
lcall
xor
dec
loop
mov
xchg
and
addr16
xchg
leave
inc
pop
mov
lds
pop
xlat
sbb
add
js
sbb
and
divl
insl
mov
inc
sbb
leave
std
mov
test
xor
lret
mov
mov
test
adc
cltd
cmp
imul
sahf
jecxz
mov
pop
mov
sar
dec
cs
gs
cli
lcall
daa
and
fs
es
int
or
inc
cmp
push
mov
sbb
add
in
xchg
dec
or
lods
gs
and
arpl
cmp
fwait
stos
mov
pop
inc
sub
cs
rcrb
int3
fildll
stc
push
lret
jne
dec
in
or
adc
xlat
adc
or
mov
repnz
pushf
xor
rcrl
xor
pop
inc
cmp
clc
cmp
leave
nop
pusha
into
movsb
xchg
jecxz
cwtl
cvtps2pd
adc
inc
out
mov
jo
or
int3
xchg
jb
jbe
jo
pop
sti
jae
mov
sti
pop
add
repz
imul
pop
xor
xchg
decb
sbb
aam
bound
fisttps
jbe
ret
pop
das
xchg
cmp
jb
add
in
mov
into
adc
fsubl
pop
jge
jle
ljmp
loop
xorl
rorb
inc
push
or
xor
rolb
nop
pop
adc
adc
lret
push
inc
mov
loope
jb
lea
fsts
out
push
gs
sbbb
fs
clc
mov
dec
iret
mov
fmuls
lcall
cld
clc
mov
in
fisttpl
mov
sahf
out
out
insl
ret
push
int
notl
xor
gs
pop
addl
aas
xchg
cli
cs
inc
les
push
push
ja
dec
sbb
sbb
sub
mov
mov
xchg
cld
pusha
je
jae
fmul
out
add
cld
sub
sti
inc
in
ss
push
xor
mov
adc
in
scas
insl
push
mov
inc
in
test
and
imul
js
aam
mov
in
or
dec
mov
out
jo
lock
mov
mov
xchg
notb
xor
inc
fwait
outsl
jp
mov
cltd
lahf
mov
mov
pop
xlat
punpcklbw
lea
fs
mov
cwtl
enter
lret
jl
xchg
insb
icebp
into
int
nop
mov
insl
mov
mov
nop
scas
stc
repnz
in
mov
pop
pop
lock
fpatan
pushf
stc
dec
jne
rolb
mov
test
and
pop
inc
or
pop
jns
test
mov
mov
enter
fwait
xchg
idivl
or
imul
mov
fistl
insb
popa
lret
cld
movsb
and
add
adc
hlt
gs
mov
scas
cmc
je
and
sbb
mov
cwtl
hlt
test
lds
incl
cmpsb
ret
sbb
loopne
fstps
loopne
ficomps
sahf
aas
aas
inc
jg
pop
pop
outsb
cmp
fildll
jae
dec
rcrl
andl
jecxz
or
out
inc
les
shll
cld
jne
push
lods
fistpll
dec
lahf
les
outsb
inc
icebp
rorl
ret
scas
xchg
repnz
or
xchg
idivb
sbb
stc
push
jge
jmp
dec
xchg
scas
xchg
pop
stos
add
in
adc
aaa
push
jne
adc
dec
sbb
sahf
dec
lret
sbb
test
sbbl
mov
icebp
mov
pop
xlat
pop
test
pop
push
mov
add
sub
inc
and
jns
lret
add
sti
cli
mov
push
push
xchg
cmpl
stc
outsl
jmp
insb
push
lods
pop
push
ret
insb
data16
lock
shlb
push
mov
call
lahf
aaa
jl
out
adc
add
push
outsl
sbb
jbe
sahf
fisubs
cld
cltd
or
pop
pop
das
mov
dec
out
stc
int
mov
xor
rorb
sub
inc
and
jle
and
orb
add
mov
in
push
gs
int
sub
daa
pop
add
cwtl
loopne
sti
sarl
pop
inc
dec
mov
mov
loop
jp
mov
jbe,pt
hlt
cmp
jns
jae
inc
pop
push
dec
and
test
int
jno
out
fs
xor
in
popf
sti
mov
push
pusha
adc
add
sbb
adc
cmp
arpl
cmp
idivb
test
mov
mov
push
xor
nop
test
inc
mov
and
adc
cli
inc
jae
divb
jns
and
fildll
sti
in
into
dec
pop
fistl
mov
add
sub
andl
ljmp
in
dec
int
push
sbb
inc
mov
fldenv
mov
aam
fiadds
xchg
sbb
stc
icebp
loope
ljmp
cli
xor
scas
enter
xlat
sub
mov
mov
pop
aam
jb
movsl
fldl
xchg
repz
xchg
xchg
mov
sub
xor
or
jle
cmp
or
push
sti
dec
mov
mov
mov
push
adc
mov
xchg
inc
into
in
sub
bound
jnp
adc
mov
addr16
pusha
pop
js
jmp
sub
popa
xor
ljmp
xor
dec
loopne
mov
add
mov
and
mov
pop
pushf
test
imul
mov
test
inc
xchg
jno
jl
jbe
and
jl
movsl
es
stos
or
imul
adc
mov
xchg
push
pop
sub
pop
sub
lret
fwait
and
xchg
xor
cmp
lock
jo
ja
aam
cli
scas
lret
push
in
xchg
adcl
or
call
ja
mov
push
je
or
fs
adc
inc
dec
bound
sbb
jnp
mov
repnz
loopne
push
mov
incl
xor
cmp
mov
adc
insl
jge
adc
mov
enter
fbld
repz
insl
xlat
push
mov
mov
adc
scas
mov
ret
mov
xlat
and
mov
test
mov
jae
adc
xor
sbb
sub
cs
dec
rcl
hlt
inc
sbb
mov
inc
lret
and
imul
int
sti
xor
push
fildll
mov
xchg
dec
imul
jp
xor
ljmp
mov
loopne
fcmovu
sbb
xchg
nop
xchg
adcb
ljmp
aaa
cmp
sti
stc
inc
xchg
ja
adc
daa
test
js
push
popf
ljmp
jb
pop
dec
pushf
aaa
sub
inc
ret
lock
sub
imull
fwait
cmp
cmp
or
fsubrl
pop
cmpb
jae
setno
js
mov
repnz
jg
dec
add
shl
stc
sub
nop
mov
mov
rcl
outsl
xchg
sbb
je
fcoms
sub
and
xchg
add
movsb
or
adc
jle
pop
loope
and
add
inc
inc
mov
sub
add
scas
push
dec
jo
adc
and
out
add
jo
mov
inc
push
cmpsl
out
push
pop
lcall
loope
mov
sub
push
pop
scas
popa
test
xor
mov
push
cltd
adc
outsl
pusha
mov
js
scas
sbb
fists
test
mov
ret
xchg
adc
fisubs
push
notb
popa
pop
and
pop
xor
call
cli
les
xchg
sbbl
mov
xor
xchg
sbb
jmp
pushf
filds
cmp
jg
bound
adc
into
xor
mov
and
cli
ds
scas
data16
sbb
std
sub
orl
add
loope
call
dec
test
jmp
popa
push
cmp
mov
stc
jecxz
or
jecxz
mov
push
dec
icebp
outsl
jle
xor
in
call
cmc
mov
dec
push
lret
aam
add
mov
hlt
js
xchg
and
push
scas
add
and
test
mov
pop
jp
xorb
pop
leave
ss
subl
adc
jp
or
mov
or
fimuls
xchg
mov
push
dec
inc
and
jo
push
push
xchg
in
push
mov
arpl
push
adc
cmp
out
arpl
xchg
xchg
push
outsl
xchg
subb
int
out
jns
test
insb
mov
pop
test
xadd
imul
xor
popa
push
dec
subb
mov
xlat
inc
xor
pop
bound
dec
jb
jne
or
test
fildll
xlat
out
pop
test
mov
push
pusha
fisttpll
dec
aam
mov
lret
pop
add
sbb
mov
js
loope
mov
call
sti
cli
pop
decl
pushf
roll
daa
xor
movsb
mov
scas
mov
or
inc
inc
cmp
cmp
repnz
push
aaa
into
xchg
pop
add
cmp
pop
push
jnp
je
dec
jns
int
mov
stos
xor
mov
cmp
jae
popf
mov
jb
and
popa
fs
daa
scas
ds
lcall
or
ljmp
lods
xchg
or
push
jl
out
sub
sbb
pop
and
clc
fistpll
xchg
loopne
repz
cltd
inc
xor
sbb
xor
popa
adc
pop
mov
push
mov
or
mov
mov
imul
or
js
pop
and
mov
mov
sti
and
cmp
push
and
xchg
js
shrl
xchg
pop
rorl
pop
ret
xor
lods
inc
or
jno
ror
ftst
lcall
inc
rcr
outsl
in
mov
fdivrl
sbb
mov
test
dec
test
ret
push
or
movsl
outsb
push
out
mov
mul
sbb
dec
ret
pop
mov
jbe
pushl
cli
imul
test
ret
jle
outsb
pop
xchg
mov
lods
mov
push
cmpl
add
push
std
push
je
adc
sbb
push
sbb
cmp
jmp
sbb
pop
mov
push
fcomip
adcl
cmp
and
cmp
leave
mov
imul
jg
add
stos
pop
mov
push
add
rorl
das
cld
xchg
or
push
lods
mov
jbe
adc
test
adcl
into
mov
mov
push
popf
mov
ret
call
cwtl
jns
ja,pn
cmp
mov
mov
in
push
incb
adc
adc
adc
shlb
mov
cld
sub
vcmpfalse_ossd
mulb
dec
or
or
aaa
mov
clc
jo
cmp
movsb
addr16
std
imul
jg
ds
aad
add
fidivl
test
or
insl
inc
daa
xchg
cmp
cmp
jb
push
push
jo
shrl
test
mov
test
and
pop
add
fs
pop
movsb
movsb
xlat
call
and
pop
jne
fcompl
or
sub
popa
int3
enter
pop
sub
add
pop
decl
sti
inc
ja
dec
in
add
adc
lcall
in
lcall
not
jg
bound
sub
aad
jns
dec
scas
xchg
xchg
cmpsb
mov
fiaddl
xlat
mov
mov
add
nop
xor
sbb
fldcw
lret
xchg
and
mov
in
fidivrl
adc
hlt
rorb
adc
jbe
and
mov
cs
sti
lret
pop
fldenv
mov
inc
call
fiadds
sub
and
aam
sub
jg
jmp
nop
adc
movsl
push
outsl
ss
pop
sub
call
xor
push
hlt
lea
pop
inc
or
enter
jmp
or
jg
sarb
fimuls
fucomip
shl
adc
cmp
out
xor
add
mov
sbb
arpl
push
add
xor
pop
lea
sub
in
shrb
xor
mov
pop
enter
dec
inc
cmp
roll
inc
pop
xchg
aad
ret
xor
xchg
pop
ffreep
inc
xchg
xchg
inc
mov
mov
mov
xor
imul
adcl
mov
das
pop
adc
inc
pop
ds
lea
bound
movl
inc
mov
and
dec
es
inc
mov
movsb
and
xor
push
rorb
pushf
cld
inc
lods
outsl
jo
mov
inc
pop
xchg
push
jns
into
push
xchg
xor
dec
imul
push
mul
mov
jbe
push
ds
imul
rcrl
mov
lcall
push
mov
xchg
sub
and
fnsave
push
shrl
out
sub
insb
jge
fiaddl
aam
lock
cld
sub
mov
mov
xchg
out
movb
dec
push
or
xchg
lcall
xor
pop
and
cmp
push
push
repz
dec
insb
mov
ds
call
ret
bound
dec
pop
cmc
and
es
mov
pop
mov
xchg
xchg
in
hlt
pop
push
mov
dec
push
cmp
jl
sbb
add
push
sub
icebp
add
push
dec
pop
out
and
cmp
ds
push
and
notl
movsb
push
mov
cs
push
jns
addr16
repz
inc
enter
outsl
jge
ja
sahf
sbb
xor
xchg
or
test
scas
cmpsl
or
divl
jecxz
in
add
js
mov
jl
cltd
ljmp
dec
push
pop
mulb
repnz
repz
shll
xor
or
loop
xchg
pop
jmp
call
in
shl
dec
lods
or
pop
cli
fiadds
hlt
push
pop
and
and
lahf
push
sti
mov
push
add
cs
xor
push
and
roll
and
adc
je
nop
push
pop
jne
push
and
lret
xchg
jnp
lret
std
mov
sti
icebp
dec
sti
and
in
arpl
cmc
outsb
xchg
lcall
fmull
pop
jne
out
cwtl
in
stc
pop
aad
sbb
or
push
ror
add
in
cwtl
idivl
loope
xchg
les
out
shl
cmpsl
dec
inc
shlb
arpl
aas
add
enter
push
add
jp
adc
jb
shrb
sbb
out
xor
shll
fisubrl
pcmpeqb
sub
pop
dec
sbb
dec
xor
add
xlat
inc
xchg
jb
aad
loopne
lock
pop
jle
xlat
jbe
inc
mov
push
lcall
imul
popf
or
out
out
stos
jae
xchg
cmp
or
decl
jnp
pop
xor
sbbb
sti
jl
popf
jbe
dec
add
or
mov
mov
int3
sub
jo
cli
cmc
and
mov
movsl
jecxz
sbb
pop
and
les
push
sub
rcr
mov
data16
xorb
stc
sub
dec
mov
xchg
movsb
and
jns
stos
loop
lret
push
and
mov
cmp
into
lods
inc
xchg
movsl
or
clc
cmpsl
sub
pop
jns
xchg
lds
stos
inc
fbld
cmp
adc
or
test
leave
out
mov
lock
push
addr16
movb
fcmovnbe
pop
outsl
sarb
leave
sarb
sub
orl
stc
stc
or
xor
mov
push
push
pop
push
jns
cmp
or
cmp
xlat
in
leave
daa
jge
adcb
and
das
je
mov
or
mov
dec
pop
jne
pop
repnz
pop
push
pop
scas
pop
loop
cltd
shl
add
das
inc
xchg
mov
xchg
mov
decb
pop
mov
sub
enter
and
adcl
popf
jns
inc
mulb
xchg
lret
push
sub
out
outsb
imul
adc
pop
loop
jg
popa
in
add
orl
int3
cmpsl
test
mov
inc
and
repz
mov
inc
mov
mov
aam
sbb
in
fwait
sbb
inc
mov
pop
sub
xchg
jecxz
lret
in
lahf
mov
mov
cli
mov
aaa
push
push
loopne
movsb
jo
xchg
ja
fs
sbb
cmp
pop
xchg
adc
mov
je
clc
push
daa
jno
push
aam
pop
mov
cltd
pop
and
pop
arpl
mov
sbb
inc
lods
cmp
xchg
rep
cltd
xchg
mov
adc
pop
es
lock
lret
xchg
das
ljmp
arpl
in
aaa
or
jp
mov
add
pop
popa
dec
ret
adcl
adc
cmp
pop
mov
in
lret
shl
fwait
or
mov
pop
ds
sbb
rcrl
sub
sbb
iret
push
mov
loopne
inc
stos
push
pop
add
dec
mov
inc
dec
inc
add
add
xchg
inc
mov
test
shlb
pop
loop
ret
push
ret
repz
adc
mov
imul
stos
roll
dec
mov
mov
cmpsl
jecxz
push
cld
mov
lcall
leave
adc
sbb
fiadds
test
mov
gs
ljmp
inc
pop
mov
cmp
pop
sub
stc
aam
sti
jmp
out
xchg
jno
and
xor
pop
inc
lcall
dec
pop
das
fidivs
xor
sbb
in
jmp
pop
jnp
sbb
xor
cld
adc
jns
pop
mov
xor
roll
insb
mov
mov
mov
aam
out
push
loopne
pop
or
sahf
jne
sub
fcomp
inc
stos
xchg
mov
in
mov
loope
mov
push
jns
jne
cmp
cmp
stos
push
pop
out
scas
in
scas
push
add
in
push
cmp
sbb
js
or
lret
ret
imul
ja
imul
pushf
sub
inc
jbe
in
hlt
jo
cwtl
jns
int
sub
in
das
mov
pop
mov
xchg
mov
cltd
jmp
inc
mov
out
xchg
xor
sbb
mov
adc
cmpsl
push
adc
stc
xchg
clc
inc
mov
xor
test
mov
fwait
popa
lcall
cmp
or
jne
add
push
and
dec
mov
shlb
push
push
adc
inc
push
sub
lock
stos
ret
mov
xchg
xchg
jp
push
xor
jne
jns
in
adc
xor
daa
xchg
je
pop
sbb
daa
sbb
loope
sbb
cmp
je
mov
mov
out
or
in
repz
out
jnp
cmp
and
sbb
loopne
mov
mov
mov
inc
ffree
jns
xor
leave
pop
pop
cmc
mov
and
inc
lret
jg
pusha
test
popa
adc
sbb
jge
popa
out
inc
add
lret
adc
flds
fcomps
lds
out
inc
incl
push
out
inc
adc
push
aaa
mov
stos
pop
sub
dec
xchg
in
jnp
jmp
pop
sbb
add
add
cld
mov
sbb
lods
mov
test
jg
dec
out
mov
xchg
jo
mov
or
outsb
sar
jle
pop
sub
sub
mov
xor
or
or
inc
clc
popa
stos
das
int
in
or
dec
or
enter
adcb
mov
insb
jns,pn
and
inc
clc
popa
cli
mov
or
fwait
jae
push
add
inc
lods
pop
test
nop
ljmp
scas
insl
orb
xchg
ror
or
pop
orl
insl
out
xor
adc
lock
std
inc
testb
push
outsb
aad
sahf
pop
ror
stos
dec
pop
dec
cmpsl
mov
popa
pop
sub
or
rcr
movsl
sbb
enter
push
xor
fcoml
jnp
pop
mov
cwtl
lea
inc
or
xchg
scas
mov
sahf
fs
in
xchg
dec
inc
jo
scas
push
jo
jnp
pop
mov
and
loopne
int
inc
int3
or
fwait
cld
or
cltd
test
subb
jle
popf
push
test
inc
xchg
ljmp
test
scas
out
jg
jo
das
adc
mov
aad
loopne
xor
inc
xchg
mov
pushf
movsl
shrl
je
arpl
into
push
push
jg
movsl
jp
jecxz
push
push
add
push
mov
push
and
jno
xor
sub
sbb
add
push
push
inc
xchg
out
mov
or
fisubs
dec
mov
jmp
jb
mov
pop
daa
and
mov
jl
daa
mov
inc
into
cmp
mov
push
mulb
push
sub
loop
clc
push
cmp
ret
pop
mov
cli
adc
outsb
scas
ret
sarb
lret
mov
sbb
jl
jge
cs
jnp
xchg
push
dec
nop
inc
lcall
pop
mov
pop
xchg
pop
loop
pop
jae
insb
dec
mov
int
sti
jae
add
mov
xchg
mov
int3
bound
dec
outsw
add
dec
inc
shll
popl
mov
cmpsb
jbe
cs
xchg
ss
jae
mov
push
jecxz
aam
jle
push
out
stos
das
stos
and
fidivrs
mov
inc
out
insl
lods
clc
int3
lds
push
dec
dec
adc
jns
mov
aaa
jmp
sub
and
and
into
jno
add
shll
les
add
sub
adc
push
out
clc
cltd
mov
cmp
fdivl
aad
cli
dec
xchg
cmp
add
movsl
dec
insb
mov
jmp
or
aam
fwait
dec
sti
lahf
add
xchg
and
push
jo
pop
xchg
out
inc
jo
or
dec
push
sub
sahf
cmp
adc
or
iret
xor
add
lock
aaa
sti
fcomps
xchg
sub
shl
and
aad
xor
dec
stc
out
repnz
ja
pop
nop
sub
dec
testl
daa
push
dec
dec
sti
popf
jb
sbbb
fidivl
cmp
or
movsl
mov
addr16
push
scas
dec
insl
mov
imul
movsl
andl
xor
add
jge
inc
cld
xor
call
mulb
out
incl
mov
gs
iret
mov
into
into
mov
mov
cmp
movsl
mov
or
sbb
inc
aam
xor
iret
mov
les
outsb
cld
or
cmp
mov
stos
cmp
jne
dec
fsubrl
stos
adc
fcompl
inc
push
mov
stos
aad
stos
push
jle
enter
loop
imul
and
pop
ret
testl
inc
icebp
rorl
repz
push
cmc
sbb
mov
push
inc
jbe
pop
sub
sub
fdivrl
cli
mov
xchg
or
addr16
sahf
arpl
jno
movzwl
mov
mov
or
aad
int
andl
cmp
and
loope
mov
lcall
mov
mov
ret
aas
daa
jp
cli
stos
pop
dec
mov
inc
jmp
rcrb
adc
mov
leave
adc
addr16
push
sbb
iret
inc
xchg
xor
add
xor
loopne
xchg
xchg
or
mov
mov
inc
out
stos
cmc
dec
sbb
mov
sub
or
popf
cld
cmp
adc
sbb
sbb
repnz
jb
pop
push
push
int
mov
pop
push
sbb
scas
push
sub
ds
and
call
push
rcl
es
xchg
call
popf
cmp
mov
ljmp
dec
pop
inc
imul
cs
pop
sti
hlt
adc
mov
pop
jns
out
dec
jmp
arpl
inc
ja
or
xor
xorl
pop
stos
clc
xchg
push
and
jge
jo
adc
dec
or
popf
aam
inc
into
jl
cmpsl
into
lods
clc
mov
inc
jnp
pop
mov
lea
sub
push
pusha
fwait
or
mov
push
lea
or
mov
or
test
jmp
fstl
aam
in
js
hlt
sti
das
in
xchg
in
push
or
gs
ror
jb
movsb
imul
adc
nop
lcall
sahf
push
and
faddp
xor
es
mov
repnz
cmp
subb
push
aad
lahf
fwait
adc
ret
mov
push
mov
test
movsb
inc
sub
sbb
int3
fdivp
cmp
into
loopne
lds
popf
pop
cs
or
inc
fldt
adc
sbb
mov
inc
cmp
or
inc
movsb
cmp
pop
add
mov
cmp
addr16
push
pop
jbe
ret
pop
or
cmpsb
fiaddl
or
jb
push
jbe
out
mov
cmpsb
outsl
testb
dec
imul
lret
jnp
and
cld
fsub
outsb
pop
lret
cwtl
repnz
dec
fstps
pop
out
push
dec
orb
xor
repnz
mov
sub
pop
jb
add
out
jnp
mov
push
push
addr16
clc
mov
adc
adc
mov
jo
addr16
lock
xor
repz
push
and
dec
adc
push
push
addl
mov
push
inc
jno
sub
mov
or
lods
arpl
imull
add
lret
adc
mov
mov
add
push
mov
pop
mull
sub
adc
clc
cmc
mov
rorl
cld
add
out
sub
or
jecxz
rclb
jns
out
add
fmul
arpl
stos
stos
push
scas
scas
xchg
dec
push
loopne
or
cmp
cli
in
ret
mov
lret
inc
loope
clc
pop
fs
xchg
fs
sbb
call
cmpsb
data16
out
cmp
cli
adc
dec
sub
test
shl
or
out
sahf
cli
xchg
imul
sub
ret
add
adc
mov
or
xor
daa
pop
repnz
push
push
aas
add
insl
dec
roll
mov
mov
iret
arpl
nop
std
test
sbb
aad
loop
inc
push
lock
push
dec
stos
loopne
repz
cmp
xor
pusha
mov
inc
cld
hlt
dec
push
pop
out
pusha
sub
adc
mov
jnp
nop
ret
xchg
notb
mov
fdivrs
xchg
mov
shlb
mov
mov
ret
rorb
jle
jle
mov
inc
jmp
mov
fcomi
jb
jge
jg
xor
pop
xor
stos
sub
push
dec
sbb
add
fldl
aam
outsl
clc
rclb
xchg
jo
sub
je
aad
fcmovu
pop
dec
in
test
in
mov
and
push
scas
divl
int
in
sbb
frstor
fs
cmpsb
jb
in
sub
aam
jae
call
add
imul
pop
stos
mov
lret
clc
out
lock
xlat
adc
popa
cmp
push
in
dec
adc
clc
fisubrs
int3
out
sarb
les
lcall
xchg
push
xor
lods
mov
jl
movsl
adc
mov
roll
fsubrp
push
int
inc
ja
imul
stos
ljmp
ljmp
repnz
jbe
gs
xlat
or
push
jne
enter
push
mov
sahf
inc
test
fimuls
lods
pusha
cmpsl
into
sti
inc
jne
mov
mov
cld
repz
repnz
push
mov
mov
xchg
cmp
mov
pop
fmulp
cmc
mov
push
adc
in
xor
and
daa
xor
mov
push
push
aad
xor
js
push
cmp
fiaddl
insl
popf
push
fld
test
pop
les
test
testl
es
add
jmp
add
sbb
cmp
inc
and
jo
push
xchg
cli
xchg
cli
fcmovnu
ja
cmp
negb
cmp
sub
sub
mov
jle
es
adc
mov
lock
dec
lahf
fsubl
bound
dec
sarb
jl
push
pusha
je
in
out
call
shlb
ficoms
pop
mov
push
xor
push
mov
jo
cmp
rcll
push
fwait
arpl
cmp
adc
insb
imull
push
push
fdivl
ljmp
mov
or
xor
or
je
ds
adc
adc
pusha
xchg
push
adc
scas
cmp
sahf
pop
repz
mov
loop
lods
fimuls
test
dec
in
and
inc
sub
jl
xchg
push
xor
outsl
sbb
cld
pop
popa
dec
push
add
sbb
mov
cmc
xchg
xlat
ret
aaa
mov
popf
out
mov
sysret
stos
xchg
mov
imul
inc
xor
sbb
mov
sbb
popa
shlb
pop
inc
pop
inc
pop
repz
xorb
push
das
dec
xchg
pop
lret
jle
cmp
out
jmp
mov
mov
jne
std
jbe
icebp
repz
xlat
out
add
jne
test
jae
out
mov
gs
xchg
ja
hlt
mov
test
hlt
dec
sbb
inc
mov
in
sub
cwtl
jp
scas
std
out
sarl
push
sub
punpckhbw
pop
andl
sub
pop
divb
aas
lds
adcl
popa
push
jp
add
push
imul
or
mov
je
adc
loope
cmp
sti
pop
test
cmp
push
sbb
jbe
pop
lea
add
mov
out
stc
push
jp
enter
mov
cmp
mov
mov
jle
mov
jbe
push
cld
into
xchg
clc
xor
fdivl
lods
xor
inc
push
xchg
ds
lcall
lock
pop
mov
jno
inc
popf
imul
adc
mov
jo
test
int3
jbe
push
popa
lcall
stc
push
xchg
jmp
shll
push
dec
pop
cmc
and
jns
xlat
jb
lcall
shrl
notl
dec
mov
pop
mov
mov
xor
xchg
dec
insl
xchg
lods
xchg
mov
rorb
mov
ds
cltd
ss
aas
nop
inc
push
aam
xchg
jge
aam
hlt
pusha
insb
mov
call
lret
shlb
push
scas
sahf
and
shll
fwait
out
or
jns
and
dec
data16
push
cmc
adc
xor
stos
out
or
outsl
sarl
lock
xchg
inc
mov
dec
popf
in
lds
or
pop
bound
insl
pop
inc
cmp
scas
pop
in
addr16
dec
repz
cmp
scas
xchg
xor
mov
jmp
out
jo
or
mov
leave
loop
xor
xor
and
ss
cmp
pop
xor
pop
sbb
xor
and
or
fsubrl
sti
xor
xchg
add
test
popf
les
jle
and
mov
test
xchg
loop
sub
lock
jae
xchg
mov
mov
jg
movsb
sub
push
lds
sub
mov
movsb
sti
xor
mov
jle
cld
loop
push
jecxz
lods
testb
dec
popf
in
ret
xor
sub
and
mov
pop
jmp
push
std
out
jge
in
or
xchg
mov
jecxz
fdivs
sbb
jg
xor
cmp
mov
test
cwtl
div
sarl
ljmp
in
bound
pop
fwait
imul
data16
xchg
test
xchg
adc
xchg
xor
dec
pop
cs
insb
call
roll
push
sbbl
fnstsw
mov
mov
jle
fdivl
mov
aad
std
popf
vmaskmovdqu
ret
adc
nop
or
jl
add
cmc
mov
xchg
sbb
xor
pusha
in
lcall
mov
cmpsl
xor
push
flds
jne
sub
adc
mov
out
cmp
out
loope
sarl
cmp
cmp
ret
xchg
arpl
mov
mov
adc
mov
cmp
cmp
mov
loopne
jno
xchg
stos
enter
jp
loope
icebp
add
adc
loop
pop
xor
mov
je
lret
mov
pop
gs
insb
fs
ja
pop
rorl
add
shll
and
jg
inc
mov
sti
enter
cmc
sbb
xchg
movsb
pop
and
imul
cs
sub
sbb
flds
js
lods
adc
sti
aaa
dec
ds
dec
out
aam
mov
sar
js
sub
xor
mov
orl
insl
cmc
mov
in
mov
xchg
mov
jbe
inc
cmp
es
aad
lds
and
adc
mov
jns
mov
jp
insb
repnz
pop
mov
mov
pop
xor
and
repnz
sbb
and
cmp
fiaddl
movsb
repz
repnz
push
adc
aas
adc
dec
pop
lret
test
mov
enter
xor
loop
iret
add
sbb
xor
shlb
cmp
cwtl
leave
orb
rcll
adc
fwait
xchg
jecxz
jnp
add
jno
subl
add
sar
inc
or
push
sbb
int3
cli
test
or
adc
rorb
or
jmp
xchg
jae
adc
fists
lds
movsb
test
fcmovbe
fwait
insl
xor
jmp
or
lahf
cmpsl
jg
movsl
out
mov
rcrl
popa
jb
inc
test
mov
mov
jg
in
lods
aas
popf
ja
inc
lods
rorl
sbb
and
repnz
push
xor
xor
fildll
out
test
shll
push
xlat
fidivl
mov
in
pop
mov
mov
xchg
jne
scas
stc
aaa
lcall
push
imul
mov
ss
dec
mov
leave
shl
push
push
pop
notl
pop
rcrb
cmp
add
jb
cli
out
jbe
pop
inc
test
cmp
inc
test
mov
push
js
cmp
lods
addl
sbb
adc
cmp
pushf
xchg
fldt
mov
or
imull
repnz
fisttpl
push
pop
xchg
test
dec
jmp
sarl
xchg
call
sub
in
mov
ds
xchg
inc
mov
xor
mov
mov
mov
or
jno
data16
inc
pop
mov
insl
pusha
aaa
mov
pop
insb
xchg
push
call
sbbl
mov
aaa
inc
daa
cmp
lcall
flds
mov
push
sbb
push
push
pushf
mov
std
leave
ret
leave
pause
mov
lods
and
fnsave
cmpsl
mov
fsubl
add
pop
out
das
jl
ljmp
mov
loop
jbe
popf
dec
sub
loop
imul
lods
sub
in
pusha
test
sub
data16
rep
push
mov
lcall
and
dec
inc
pop
xor
lea
mov
cmpb
adc
cmc
mov
xchg
adc
test
ja
jbe
dec
inc
inc
hlt
test
mov
addr16
jecxz
cmp
imul
mov
outsb
mov
std
dec
pop
int
int3
loop
or
adc
mov
push
mov
jg
int
mov
push
test
ret
shlb
lretw
add
mov
shlb
xor
push
push
sbb
pop
daa
mov
lret
add
fnstsw
pop
aaa
fistl
lods
scas
aas
std
mov
rorl
movsl
adc
cmc
es
jbe
sub
aad
nop
jns
add
pusha
data16
pop
jno
add
adc
or
dec
pop
frstor
and
mov
in
rcl
xchg
cmp
idivb
jbe
fstps
mov
push
sub
in
and
push
ss
pop
lods
fisubs
test
mov
ret
cld
and
xor
mov
ror
cmp
imul
arpl
jo
sbb
out
cmp
push
xchg
sbb
loope
push
jge
mov
jmp
inc
add
fistl
inc
stc
sub
dec
or
cmp
int3
in
es
ds
fucomi
movsb
mov
pushf
lds
inc
gs
sub
dec
cwtl
adc
das
sbb
mov
pop
rcl
fidivrl
mov
push
and
adc
fcmovne
std
lock
fldcw
cld
dec
fcomip
out
popa
and
ljmp
mov
cmp
sbb
jne
sbbb
sbb
sbbl
cmp
test
mov
jg
mov
leave
dec
andb
or
arpl
inc
je
push
movsl
mov
cwtl
push
or
sub
nop
popf
push
idivl
fidivs
rcl
xchg
jl
or
xor
lahf
lret
mov
pushf
push
popa
sub
mov
dec
mov
mov
adc
dec
data16
xor
stos
in
fidivrl
pop
fists
cltd
and
add
sub
pop
imul
push
add
cmpsl
hlt
shrl
xlat
cmp
lea
add
jmp
stos
je
jne
sbb
mov
lea
hlt
cmp
faddl
mov
xchg
or
xchg
pop
push
addl
mov
push
jecxz
mov
jecxz
or
lods
adc
faddp
out
hlt
inc
pushf
shr
mov
or
pop
xchg
add
mov
and
or
dec
sub
fucomi
lds
cs
arpl
fiaddl
outsb
add
andl
jle
push
dec
out
lret
xchg
dec
js
xchg
inc
hlt
imul
repz
cmpsl
js
aam
xchg
push
aad
ret
jl
mov
out
dec
mov
dec
js
mov
xchg
mov
mov
inc
in
addr16
je
stos
and
cltd
pop
inc
shlb
xlat
and
popa
out
div
movsb
into
mov
outsl
mov
loop
and
mov
out
fnsave
pop
mov
dec
inc
fistl
call
stc
add
and
sti
fstpl
and
lret
pop
mov
mov
push
adc
cmc
shr
imul
cmp
xchg
mov
jno
xchg
insl
pop
rcrb
jle
aas
test
push
bnd
dec
dec
mov
xor
aaa
cmc
hlt
xchg
xor
std
fs
xchg
xchg
test
out
inc
sbb
fistpll
cmp
js
jns
decb
pop
inc
sbb
mov
aad
daa
xor
inc
das
inc
inc
dec
ficomps
inc
insl
insl
xchg
aad
shr
fwait
dec
mull
pop
pop
jnp,pt
sbb
xchg
dec
lea
add
imulb
in
adc
ficoms
enter
inc
aas
and
scas
mov
mov
jmp
and
jg
testb
jle
nop
outsb
addr16
pushf
dec
push
mov
cmp
inc
pop
adc
xor
pop
cmpsl
mov
mov
adc
xchg
daa
xor
jmp
sbb
push
jo
or
daa
push
sub
ds
pop
into
jb
insl
add
push
xchg
jl
popf
loop
push
cmc
insl
scas
sahf
ret
jp
xlat
jg
push
push
mov
jg
or
orl
mov
ffreep
fisubs
sub
loopne
insl
lods
aaa
pop
mov
jb
xchg
aaa
scas
aaa
and
push
imul
ret
icebp
mov
cld
aam
cmp
jns
mov
mov
les
sarl
out
jp
add
mov
cmp
rcrl
test
dec
repnz
mov
stos
mov
mov
outsb
inc
pop
push
cmp
dec
clc
dec
inc
push
push
inc
mov
jmp
shll
sub
loope
gs
mov
pop
or
adc
in
and
sbb
jno
outsb
and
rorl
adc
push
dec
mov
jo
inc
pop
movsb
mov
loope
mov
or
xor
sahf
lea
pushf
pop
clc
xor
cmp
movsl
jb
dec
ret
mov
mov
mov
mov
ficoms
sub
cmc
xchg
aad
push
sbb
icebp
js
insl
pushf
mov
in
or
mov
pushl
xor
hlt
push
test
loop
sbb
or
mov
mov
xor
shll
mov
push
inc
lea
xor
xchg
outsb
sub
test
gs
mov
leave
xchg
addb
cwtl
loopne
xor
xchg
sub
sbb
aad
aas
add
movsl
push
shr
mov
in
adc
pop
mov
clc
mov
mov
adcl
lcall
sub
cmc
add
ficomps
dec
sbb
push
scas
rclb
jl
or
hlt
stos
sahf
pop
scas
aam
cmp
cmp
lock
movsl
xchg
sahf
cmc
outsl
xchg
mov
sbb
push
xchg
sahf
orl
out
out
movsl
xor
inc
mov
lea
int
stc
and
stos
call
in
push
frstor
imul
shlb
xor
andl
add
sbb
das
fbld
mov
pop
pop
add
xchg
xchg
mov
lret
mov
das
jnp
or
dec
add
sbb
scas
adc
dec
adcl
rcrl
or
jno
rcll
icebp
xor
into
jle,pn
jae
pusha
adcl
cmp
outsb
pusha
add
popa
popa
pusha
jo
adc
movsl
pop
adc
dec
mov
xchg
and
in
mov
cmp
enter
in
adc
mov
fs
mov
lods
xor
push
mov
adc
hlt
pop
sbb
aaa
add
daa
das
mov
xor
mov
inc
data16
xor
inc
fstpl
js
push
into
cmp
je
mov
xchg
aam
mov
mov
xor
mov
loop
test
and
arpl
shll
ljmp
or
push
inc
mov
js
ljmp
inc
insb
xor
iret
lds
mov
dec
dec
dec
sarl
inc
aas
sub
pusha
mov
lds
cltd
mov
fcmovb
pop
pusha
mull
movsb
or
imulb
cmp
adc
sahf
gs
push
sbb
inc
es
cld
pop
inc
nop
outsb
lret
push
mov
push
add
cwtl
lds
repz
sti
leave
cli
loop
cmp
sbb
and
int3
insl
push
sbb
sub
call
push
out
sarl
into
adcb
dec
jmp
adc
sti
jne
aam
sbb
cs
add
mov
out
jae
gs
neg
add
push
lds
popa
gs
and
mov
inc
and
out
sub
sti
push
loope
test
test
jno
add
shr
les
mov
hlt
cmp
pop
hlt
leave
lahf
lods
xchg
mov
pop
jo
cld
xchg
mov
popa
xor
out
daa
into
or
xorb
mov
in
daa
loop
dec
andl
test
vmovntps
mov
jecxz
movsb
sbb
dec
mov
adc
mov
loop
add
cli
dec
ficompl
push
flds
dec
nop
push
mov
jae
push
aad
adc
or
sub
or
adc
or
push
adc
xor
and
std
insb
stos
enter
xchg
fcoml
sbb
jmp
out
push
fwait
pop
push
sub
adc
dec
outsb
mov
lea
iretw
loop
iret
in
js
lds
mov
sbb
lea
xlat
adc
roll
adc
mov
hlt
fidivs
mov
shrb
mov
out
inc
cmp
dec
mov
repnz
repnz
or
ret
add
or
rclb
mov
in
push
jbe
outsl
xor
and
push
clc
mov
jbe
lock
test
sahf
add
add
in
jno
jle
fcmovnb
cmp
cwtl
sbb
lods
xor
subw
int3
mov
push
rcl
push
pop
lock
insb
mov
scas
pop
out
push
mov
dec
test
mov
push
neg
mov
lret
mov
add
cmp
int3
or
js
jo,pn
dec
mov
in
out
outsb
fstpt
mov
aad
sbb
sbb
rclb
clc
adc
add
rcrb
mov
or
and
xor
ret
popf
jg
pop
call
mov
cmp
push
loope
sbb
test
mov
sahf
push
out
int3
mul
jnp
leave
ja
push
jge
mov
jecxz
or
xlat
pop
lds
jnp
loop
dec
loope
add
dec
xchg
out
push
pop
nop
mov
push
enter
nop
gs
pop
cmp
pop
pushf
pusha
sbb
addr16
arpl
jns
cmp
mov
dec
mov
push
or
adc
neg
popa
dec
xchg
push
lret
aaa
shll
es
andl
mov
lret
mov
stos
xchg
push
movd
adc
cs
fadd
aam
out
add
jmp
in
js
ror
ficomps
lahf
mov
outsb
cmp
xor
dec
adc
pop
in
mov
dec
out
lahf
cmpsb
stc
jns
inc
repz
test
jmp
js
jae
aas
cmp
rol
popf
out
or
loopne
adc
inc
pop
popf
imul
out
cmp
popa
pop
lods
popl
aaa
dec
subl
xor
mov
addr16
dec
leave
mov
lcall
mov
pop
push
and
adc
jb
jle
aad
adc
mov
xor
cmp
mov
ljmp
jl
imul
pop
xor
int3
sarl
test
pop
adc
imul
cmp
and
add
into
or
push
sub
inc
das
lret
notb
notl
aaa
adcb
dec
pop
je
mov
add
fcomp
adc
std
outsb
test
add
hlt
leave
sub
cld
pusha
cmp
ret
fidivs
in
sar
jns
popf
cli
rep
push
or
int
aaa
outsl
pop
mov
pop
dec
jns
outsb
into
pop
fidivl
add
pop
jae
aad
test
mov
xor
inc
in
aas
out
scas
sbb
pop
addr16
inc
into
and
mov
pushf
dec
xor
add
pushf
cmc
dec
cmp
pop
pop
out
in
mov
mov
clc
jmp
mov
outsl
jp
in
or
lds
stos
lea
out
adc
add
jo
icebp
loop
cmpl
jge
pop
shll
inc
inc
ja
sti
xor
xor
dec
jecxz
cmp
xchg
pop
add
in
mov
test
sbb
sbb
inc
sti
jb
dec
cmpsb
adc
dec
scas
out
test
push
test
sbbb
mov
lock
test
adc
pop
ret
xchg
mov
movsl
add
pop
aad
or
dec
mov
fistpl
shrl
push
xor
fidivrs
ret
cmpsl
ja
cs
dec
inc
fnstenv
jg
aam
xor
mov
ljmp
shll
stos
adc
mov
icebp
push
je
push
push
lea
xchg
or
scas
lds
idivb
xchg
push
push
sub
adc
push
adc
push
fmulp
mov
dec
sahf
jae
testb
and
push
aas
dec
add
mul
and
pop
ror
movsb
test
xlat
fcompl
sub
add
push
sti
push
sti
push
test
fmuls
sti
xlat
test
pop
movsb
push
push
imul
push
test
data16
pop
mov
push
dec
pusha
push
add
xchg
cli
cli
cmp
in
mov
mov
push
cli
aaa
divl
cltd
inc
jns
or
lods
pushf
lret
ja
nop
jnp
stc
cmp
pop
shl
hlt
adc
adc
add
xchg
call
je
lret
out
jns
dec
and
mov
jnp
sar
fwait
dec
loopne
insb
xchg
std
sbb
and
mov
inc
out
test
and
ja
sti
dec
fcoml
xchg
xchg
inc
adcb
jbe
outsb
negb
aad
jns
pop
inc
push
mov
pop
add
pushf
mov
xchg
xchg
add
imul
or
sub
std
fisttpl
cld
sbb
dec
sub
and
out
jl
lock
xor
inc
push
movsl
lods
sub
and
pop
enter
cmpsb
clc
fstp
push
cld
xchg
sub
mov
inc
pop
dec
mov
xchg
adc
arpl
fldenv
icebp
cld
inc
mov
std
gs
mov
hlt
push
pop
out
cmc
sub
mov
mov
or
test
pop
jae
adc
mov
fildll
rolb
cmp
and
push
mov
cmp
mov
jno
mov
inc
push
out
sbb
ror
sti
in
loop
fidivrl
xlat
pop
add
mov
push
movsb
jle
sbb
aam
push
in
js
in
sbb
into
stc
insl
sub
aaa
inc
and
or
mov
push
mov
push
sbb
pop
mov
xor
loope
jmp
cmp
mov
sub
lods
push
add
sub
lock
mov
add
fcompl
mov
test
gs
mov
pushf
ret
cs
sub
inc
inc
xorl
xchg
rclb
repnz
out
and
lea
mov
and
inc
repnz
sahf
jb
test
test
xchg
nop
out
outsl
mov
mov
stos
leave
jg
lods
mov
imul
xor
call
or
hlt
ljmp
jne,pn
inc
movsl
cwtl
sub
jg
ds
dec
or
into
sbb
leave
lea
stos
sub
arpl
mov
fnstenv
mov
or
mov
or
sbb
jge
cs
jp
add
ret
inc
test
sbb
sarl
inc
mov
push
outsb
jo
mov
scas
sub
and
jmp
xor
pop
shl
sahf
push
add
xchg
rcrl
nop
clc
in
insl
mov
dec
mov
scas
push
sub
cmp
je
jae
dec
and
in
lock
fistpl
mov
into
mov
and
adc
dec
or
inc
mov
xor
out
cwtl
pushf
push
lea
cld
xchg
pop
xor
imul
jae
in
outsb
xor
call
mov
ret
dec
fcmovb
push
ret
mov
sbb
loopne
jecxz
mov
or
jne
aad
cmp
xchg
xchg
lods
mov
js
ljmp
iret
std
ljmp
add
dec
mov
push
arpl
add
mov
bound
and
xchg
inc
inc
sbb
add
ret
outsb
jle
rorl
mov
scas
rcll
addb
rcrb
cmp
ljmp
sbb
inc
and
repnz
adc
inc
push
cli
mov
gs
xchg
pushf
cmc
dec
cs
fsubs
in
or
ret
pcmpeqd
pushf
ds
out
daa
xor
sub
bound
sbb
into
and
insl
fcmovnu
test
fxch
ret
data16
mov
cmp
pop
stos
lods
ljmp
xchg
push
jbe
hlt
sub
movsb
movsl
xor
add
sbb
push
mov
xchg
inc
dec
int3
inc
or
outsl
nop
andl
cmpsb
cmp
mov
nop
sub
mov
sahf
adc
mov
and
sbb
pop
in
push
dec
dec
or
xchg
fisubl
aad
fdivrl
lea
adc
adc
shrb
or
mov
mov
cld
pop
mov
inc
mov
out
aad
inc
sub
or
cmp
hlt
dec
xor
jmp
mov
add
push
or
sbb
jae
fisubrl
cmpsl
adc
xchg
pop
pushf
das
std
jp
or
fdivl
sbb
mov
fidivrs
popf
sub
das
or
sub
fisttps
xchg
inc
mov
sti
cmp
jecxz
add
test
subl
sub
stc
popa
jmp
dec
repnz
add
pop
push
or
jb
pop
xor
inc
sub
pop
mov
in
push
das
je
and
jp
repz
add
imul
clc
clc
push
bound
sbb
inc
dec
dec
nop
dec
bound
neg
push
mov
aad
or
out
fsubr
in
leave
test
aam
mov
mov
and
aad
divb
jge
add
lret
lods
test
and
int3
imul
and
cmp
push
xchg
pop
and
cmp
jo
repnz
pushf
shll
dec
call
and
fadds
and
adc
pop
lea
ficompl
popf
xchg
mov
pop
scas
lret
xchg
icebp
dec
jns
pushf
fsubrs
pop
xor
mov
jno
jne
mov
dec
xchg
jae
mov
inc
mov
jbe
mov
std
aad
fstpt
lret
pop
sbb
pop
pop
mov
hlt
mov
popa
lods
adc
inc
fnstcw
cwtl
add
fmuls
dec
bound
out
fs
pop
push
fadds
mov
sti
test
aaa
addl
sub
cmpb
loop
mov
data16
sub
jae,pt
fidivrl
push
push
jl
rcll
jg
loope
lret
xor
sbb
jecxz
arpl
add
sbb
xchg
jg
lret
mov
fs
cs
scas
fldt
in
and
xchg
mov
mov
jmp
cmpxchg
inc
add
andb
mov
inc
dec
xor
lds
cmpsb
or
push
push
hlt
daa
jecxz
jge
addl
add
pop
inc
dec
rol
xchg
xor
xor
sahf
imul
scas
movsb
out
adc
adc
ss
stc
arpl
inc
xchg
pop
xchg
ret
pop
pop
out
mov
lods
add
imul
inc
das
out
jns
pop
bound
cmp
mov
les
xor
nop
push
mov
repz
aaa
inc
jns
mov
dec
hlt
cld
popf
arpl
hlt
dec
add
inc
out
sti
ljmp
out
rcrl
aas
and
dec
jb
aad
or
ds
pop
and
lock
fbstp
das
hlt
mov
dec
xor
test
push
in
cmp
popa
lds
push
mov
pop
pop
inc
jns
daa
jne
pusha
in
mov
inc
fcoms
dec
into
dec
nop
lods
mov
mov
testb
test
sarl
mov
imul
dec
js
popf
or
push
jbe
sbb
cmp
add
leave
push
xchg
push
test
mov
xor
pop
cwtl
adc
pop
adc
push
adc
or
add
sub
loopne
mov
xchg
inc
incb
neg
push
addl
mov
mov
loop
jae
add
dec
xchg
xchg
cmp
lock
mov
ljmp
xchg
and
and
sbb
aam
xor
push
sarl
icebp
test
rorb
mov
das
ja
add
mov
out
jl
push
imul
add
sub
dec
loopne
cmp
sbb
cltd
not
lods
add
frstor
rcrl
test
xchg
adcb
jge
push
mov
inc
icebp
lret
aaa
data16
adc
sbbl
std
outsl
jns
sub
jbe
fistps
ja
sahf
pop
jbe
xchg
dec
pop
jno
add
xchg
lds
add
cmp
xor
test
xchg
pop
ja
or
int
dec
mov
jne
ljmp
movsb
push
push
jnp
and
cltd
cli
shlb
push
dec
jge
mov
xchg
sbb
call
mov
call
mov
and
outsb
scas
pop
xchg
shrb
and
pop
push
add
dec
xchg
push
enter
and
mov
jg
enter
push
dec
jl
cmc
fimuls
and
jmp
mov
or
xchg
add
ja
add
js
jmp
or
inc
decl
clc
pop
repz
cmpsb
xchg
shll
adcb
test
in
pop
push
mov
inc
sub
leave
jbe
in
sti
inc
and
jg
lret
inc
lahf
jmp
out
in
aas
mov
jl
enter
xchg
mov
pop
fadds
xor
or
popf
dec
iret
dec
in
lea
pop
push
mov
mov
nop
cli
push
mov
jecxz
mov
inc
inc
lahf
mov
andb
sub
pop
std
mov
and
lods
push
lret
mov
add
loopne
je
sub
mov
jecxz
ret
rcl
fwait
cmp
adc
loopne
xor
mov
fcomi
cltd
aas
sub
rolb
popf
push
leave
arpl
pop
mov
and
push
cltd
dec
mov
dec
inc
ja
out
int3
repnz
cmpsb
fstl
lret
out
inc
std
lea
push
mov
mov
or
jecxz
cmp
jns
push
pop
out
xchg
mov
and
jge
sub
mov
gs
add
sahf
sbb
dec
cwtl
dec
cmp
or
xorl
lods
mov
mov
add
mov
xchg
push
mov
inc
imulb
add
ja
shl
mov
jo
push
mov
pushf
and
xor
dec
sbb
push
xchg
xor
int
dec
jno
xor
and
inc
sub
shll
inc
in
in
push
out
pop
add
sub
outsl
mov
rorl
push
cmpsb
cmpsb
pushf
dec
inc
xchg
imul
mov
mov
cmp
das
adc
sti
popf
movsb
xchg
jbe
adc
add
aam
jne
stc
mov
insl
mov
cmp
or
pop
adcb
js
stos
lcall
jg
sub
lds
mov
push
test
sti
cmc
mov
rolb
shll
lahf
cld
dec
sub
andb
add
into
fildl
hlt
jl
mov
outsb
std
notl
pop
enter
ds
xor
call
addl
cmp
adc
xchg
dec
jecxz
mov
fdivrs
mov
addl
mov
mov
mov
adc
and
or
xor
add
add
dec
and
lods
inc
clc
lods
cmc
fidivl
xchg
js
js
dec
stos
pusha
or
aam
xor
incb
bound
and
xor
lods
jns
scas
adc
int3
jae
and
jo
fcompl
cmpsl
mov
sahf
sbb
or
fsub
popfw
or
pop
push
cmpsb
stos
rcl
lahf
imul
mov
shrb
sub
jmp
ret
mov
test
add
xchg
popa
xchg
aas
push
pop
sbb
out
jae
data16
jmp
jno
mov
int
mov
clc
fildll
mov
enter
xor
mov
inc
sub
inc
adcl
cli
xchg
out
mov
add
in
inc
test
push
or
pop
loop
inc
or
mov
pushf
into
add
sbb
push
add
test
mov
mov
imul
movsl
add
or
xchg
cwtl
in
ja
sub
adc
jno
cmpsb
push
lds
cs
xchg
nop
jmp
bound
pop
sbb
in
test
mov
pop
insl
jge
xlat
std
loop
pop
cli
and
cmp
mov
or
fidivs
in
sahf
sbb
pop
xchg
sar
stc
sahf
or
jmp
jle
dec
out
push
sub
ret
adc
std
pop
xor
cmp
pusha
jecxz
xor
es
mov
cmp
pop
jo
xlat
add
add
cmp
paddw
iret
scas
mov
push
popl
jmp
les
aad
mov
mov
inc
cs
rcrb
movsl
rorw
mul
ret
cmpsb
loop
mov
dec
or
lock
and
cmp
sbb
push
out
add
sub
adc
adc
push
pop
ja
mov
inc
pop
loope
mov
fucomi
cmp
xchg
test
jbe
mov
lock
jp
jns
int
outsb
or
push
cmpsb
ror
or
cs
push
or
push
sub
pop
adc
jp
inc
push
and
fdivrp
cwtl
lret
cmp
adc
out
fisttps
add
adc
inc
adc
sub
cmp
fnsave
adc
push
cs
dec
pop
dec
mov
mov
gs
movb
loop
cmpsl
push
adc
and
and
shlb
push
ret
clc
jo
or
mov
mov
fiaddl
data16
fldt
das
loop
add
dec
dec
out
movsb
jbe
cmp
dec
mov
pop
mov
aad
xor
add
fcmovne
xchg
sti
dec
popf
xchg
jbe
aaa
mov
loope
adc
dec
or
mov
sti
cmpsb
lret
mov
enter
pop
jb
incl
sahf
jb
int3
push
sub
subb
inc
add
sbb
dec
push
jo
mov
lds
mov
hlt
xchg
sbb
pop
sub
test
push
xor
das
pop
and
dec
mov
xlat
cmp
out
andb
scas
pop
xor
jnp
mov
xor
scas
fsubrs
icebp
jg
pop
testb
add
sbb
int3
sti
movl
adc
scas
dec
mov
bound
dec
int3
xor
in
jg
sub
nop
add
aas
and
lahf
out
push
aaa
movsb
out
pop
movsb
mov
add
lds
ret
xchg
negb
xlat
dec
aaa
popa
bswap
loop
add
aad
or
sahf
orb
mov
lock
dec
pop
dec
aas
inc
mov
add
inc
add
fsts
arpl
mov
push
ds
int3
fsubrs
hlt
andb
or
cmp
fdivr
ja
sahf
mov
inc
call
xchg
stos
xor
xchg
loope
iret
insl
dec
push
pop
nop
push
pop
mov
popf
cmpsl
mov
clc
mov
mov
xchg
dec
inc
push
cmp
jns
mov
add
dec
inc
pop
cmp
jmp
into
mov
push
daa
jno
pop
mov
dec
stos
sar
repnz
loop
cld
mov
enter
dec
imul
in
outsl
pop
iret
lret
js
into
push
mov
mov
ds
cmp
repnz
cli
or
jnp
int
incb
lds
jbe
ja
jb
adc
out
xchg
mov
pop
jae
sub
jg
cwtl
movsl
loop
ja
xchg
cwtl
test
mov
ljmp
adc
inc
jle
insl
es
pop
inc
iret
sub
sub
xor
mov
fdivrs
inc
pop
ljmp
dec
cmp
xorl
push
in
test
hlt
sub
es
inc
dec
les
out
faddl
scas
in
pop
pop
xor
adc
aad
outsl
repnz
xlat
inc
outsl
xlat
inc
xor
test
test
adc
inc
sub
out
adc
inc
and
cmpsb
orb
fsubrl
add
fisubrl
mov
ja
xchg
xor
notl
fnstcw
gs
dec
cmp
out
sub
ficompl
aas
lcall
sbbl
dec
or
pop
aam
fbld
adcb
sub
outsl
js
dec
jg
mov
mov
bound
cmp
and
aaa
stos
pop
pop
movsb
cwtl
loop
jecxz
adc
pop
push
pop
xchg
in
imul
outsl
jbe
in
cltd
arpl
in
dec
mov
pop
pop
sbb
jle
into
jno
sahf
into
outsl
and
adc
sbb
loopne
pop
nop
data16
push
call
add
scas
dec
push
jae
mov
fiadds
add
sub
les
mov
pop
dec
call
push
fbstp
popl
push
or
test
test
call
lea
jne
add
push
dec
cmp
sub
jecxz
fwait
sbb
sbb
sub
pop
cltd
nop
movsb
and
mov
xchg
mov
je
jno
rcrl
jg
mov
jp
sub
fildll
adc
sub
and
pop
push
ds
lods
clc
dec
pushf
or
pop
mov
sub
adc
aad
add
fnstcw
int3
dec
cmpsb
out
mov
imul
or
repz
cmpsl
mov
nop
xchg
sbb
cltd
lret
cmpb
add
adc
xor
jle
adcb
loopne
fwait
movsb
sub
repnz
loop
mov
or
mov
inc
cmc
cmp
insl
std
xor
cs
cli
je
or
ret
loopne
push
jb
lret
fnstcw
dec
mov
jge
push
out
repnz
in
leave
leave
lea
fildl
jp
jecxz
mov
dec
sbb
movsb
xchg
int
or
js
xchg
lods
xor
cmpsb
inc
aam
pop
in
out
cmpsb
sbb
int3
push
jnp
arpl
push
xchg
scas
pop
lds
cmp
imul
call
sahf
popa
loop
jg
adc
adc
push
pop
or
ja
out
jle
lock
clc
fs
dec
dec
dec
shr
fisubs
lds
pusha
and
cmc
popf
inc
out
psubusw
rep
cli
stos
push
stos
jle
lods
jg
jle
jno
fsubl
push
sarb
mov
je
mov
lea
or
nop
jnp
mov
dec
inc
aam
mov
jbe
das
push
out
and
inc
cmp
mov
xchg
and
mov
in
into
sub
jmp
push
das
xlat
pop
dec
jb
mov
push
in
adc
cmp
lods
jecxz
adc
test
push
and
les
fsubrs
push
scas
mov
cltd
lret
add
ss
mov
sahf
cmp
or
rcll
jge
xor
fildll
shrb
mov
dec
sub
add
outsl
daa
push
sub
clc
pop
fsin
stc
jmp
cwtl
or
lahf
insb
test
push
mov
movb
pop
pop
outsb
out
mov
addr16
xor
adc
in
lret
subb
push
add
mov
mov
cld
adc
imul
jmp
daa
push
sbb
mov
stos
jns
push
sbb
inc
lcall
add
icebp
push
cmp
out
pushf
jbe
addr16
sti
jae
push
lods
aaa
inc
pusha
in
lock
mov
cmp
cmp
stos
pop
inc
push
inc
stc
xor
cli
and
and
insb
incb
sbb
add
test
cltd
mov
lret
test
subl
inc
in
cmp
sub
rol
bound
rorb
addr16
aaa
xchg
mov
or
push
fs
nop
addr16
clc
mov
and
adc
js
cmc
jns
adc
fdivrl
xchg
pop
xor
loope
cltd
sbb
sub
pop
sub
xor
fidivrs
xor
fnsave
push
pop
aaa
push
repnz
mov
jb
pop
rorl
pop
dec
pop
popf
jecxz
jg
push
adc
sahf
xor
notl
adc
and
push
cmc
mov
push
add
scas
mov
sub
dec
int
int3
icebp
imul
add
inc
sub
xchg
push
ds
cld
arpl
inc
arpl
outsb
xchg
mov
sub
std
sbb
jno
outsl
xlat
mov
cmc
mov
js
xor
shll
mov
xchg
and
sahf
sub
or
shll
ja
inc
outsb
cwtl
jg
test
jg
dec
int3
and
xor
mov
out
dec
add
sub
nop
mov
ficomps
xchg
enter
arpl
in
mov
mov
loopne
pop
xchg
sbbb
outsb
cmpsb
out
scas
dec
call
scas
mov
lcall
mov
push
sbb
ds
int
bound
lret
xchg
test
loop
fnstcw
popf
pop
adc
mov
jae
pop
mov
iret
jno
lock
les
inc
shl
jg
dec
out
popl
imul
xor
aad
addl
and
push
and
jmp
out
mov
ret
mov
xchg
iret
jbe
stos
mov
aam
or
add
in
stc
xor
jmp
pushf
shlb
sub
clc
lcall
das
test
mov
int
sub
mov
sarb
popa
add
outsl
dec
mov
test
cmpsb
pop
nop
xlat
ss
mov
inc
mov
push
iret
lds
out
push
dec
int3
out
mov
xor
xchg
fs
mov
xchg
mov
and
arpl
in
fistps
repz
pop
enter
jnp
push
sub
imul
add
ljmp
pop
in
adc
xchg
es
mov
lds
mov
lea
in
xor
cmp
push
ljmp
rorb
xor
jne,pn
out
lock
lea
jne
fisubrs
jmp
push
cwtl
mov
sub
stc
lds
mov
mov
aad
in
aad
das
hlt
pop
in
std
stc
test
scas
jns
sub
mov
pop
xchg
and
movsb
add
dec
sub
mov
adc
mov
mov
data16
pop
scas
pop
pusha
mov
mov
xor
cld
mov
and
cld
lods
mov
mov
mov
es
and
xchg
test
cmc
cmp
inc
dec
push
mov
cwtl
shlb
add
xor
push
stos
sahf
ljmp
sbb
fisttps
pop
rcr
push
jl
cli
shl
dec
pop
fstpt
mov
and
out
in
jecxz
mov
add
inc
dec
adc
dec
repnz
or
mov
push
lods
dec
jno
sbb
jl
or
testl
jbe
sub
das
xchg
add
and
test
mul
lds
insl
dec
pop
xchg
jbe
xor
mov
lahf
add
aad
jl
or
pop
cwtl
roll
frstor
xor
lret
bound
dec
inc
inc
mov
std
imul
mov
loop
mov
push
shlb
jns
add
nop
mov
lahf
mov
push
sub
mov
and
jb
xor
ja
cltd
add
enter
jo
xchg
imul
xchg
shll
cmp
and
push
xchg
shll
xorl
stc
int3
cmp
lea
ss
popa
leave
mov
shll
xchg
sbb
push
pop
mov
sbb
push
mov
mov
fadds
test
cmpsb
rol
pop
xor
outsl
mov
fistl
pop
lret
xor
outsb
in
dec
imulb
out
cs
cli
adc
insl
cmp
nop
push
cs
sbb
jbe
fwait
insb
or
call
or
or
sub
jnp
mov
sbb
xchg
call
jbe
push
scas
cmp
out
sub
dec
fistps
jno
mov
repnz
xchg
jl
scas
sub
iret
fstps
aaa
pushl
pop
cmp
test
sahf
out
push
mov
aaa
lock
je
pop
imul
dec
mov
andb
bound
mov
jae
sub
inc
adc
aad
cmpsb
test
mov
jae
push
sub
mov
movsb
push
pop
cltd
or
inc
test
xchg
push
sbb
jo
fcom
mov
xchg
mov
jle
sub
cltd
gs
add
push
addb
adc
or
mov
movsb
scas
call
inc
mov
xor
lret
xchg
inc
mov
jmp
cmp
mov
addb
pop
cwtl
hlt
inc
mov
mov
xchg
jle
int3
loopne
sub
adc
mov
sub
repz
push
mov
pop
shrb
les
push
ja
mov
ljmp
fbld
dec
sub
mov
imul
mov
pusha
lret
inc
sub
pop
cmp
popa
xchg
sbb
sbb
jge
into
insl
jle
out
jno
aas
dec
lods
pop
sbb
clc
inc
or
les
iret
jb
mov
mov
or
jbe
jp
shl
and
daa
sbb
or
sti
cmpsl
icebp
xchg
jo
ja
push
mov
fsubs
adc
pusha
jb
test
push
mov
cmpsb
cld
jge
inc
ja
pcmpeqb
shlb
lea
mov
mov
test
fnstcw
lret
hlt
mov
or
xchg
sub
nop
shlb
mov
pop
int3
cwtl
lods
adc
dec
stos
loope
sub
and
add
add
adc
repnz
loopne
stos
arpl
out
js
movsl
mov
and
fstpt
into
fpatan
mov
sbb
and
out
fdivl
inc
insb
lds
sti
out
std
mov
or
lock
sbb
and
icebp
dec
inc
ss
fdivl
lahf
jge
pop
inc
lock
arpl
mov
xchg
fstpt
add
mov
jno
xchg
shrd
mov
iret
sbb
into
orb
inc
cwtl
out
pop
pop
cwtl
mov
mov
jmp
aam
sub
pop
jns
scas
ss
cmp
roll
mov
inc
dec
cmc
lock
jns
lock
jae
add
dec
mov
xor
jecxz
pop
mov
add
bound
jge
or
jmp
mov
or
dec
inc
in
jecxz
or
cld
bound
pop
sbb
bound
shl
mov
pop
sub
pop
push
or
insb
jne
dec
in
and
insl
jp
cwtl
xchg
push
fsubl
test
leave
sub
push
mov
lea
ljmp
jl
outsl
clc
sbb
inc
popf
jnp
and
adc
dec
test
add
addl
mov
adc
int
mov
or
lret
and
iret
pop
fidivrl
into
jb
cmp
mov
dec
sti
jne
or
xchg
xor
or
idivb
jge
rolb
add
push
inc
pop
scas
je
adc
cld
jecxz
or
inc
mov
add
je
in
sub
nop
and
inc
sub
out
cs
xor
mov
jno
inc
cmp
xchg
cld
and
jb
movsb
cmp
arpl
lea
adc
cmpsb
pop
push
sbb
jae
ret
mov
push
cmp
mov
mov
ret
ret
mov
faddl
or
inc
sti
pop
jno
sub
les
lahf
inc
jecxz
cli
cs
loopne
push
sub
push
daa
mov
xchg
cmp
dec
jle
cs
xchg
iret
sub
data16
inc
insl
les
push
mov
jg
dec
jae
ret
xor
insb
jmp
jmp
xor
pushf
test
jmp
imul
les
xchg
jecxz
insb
inc
add
sbb
mov
leave
out
ljmp
jmp
inc
sahf
add
sbb
arpl
aad
jne
movsb
insl
sub
sbb
adc
push
or
in
fdivrp
pop
movsl
xchg
sbb
mov
in
xor
push
scas
mov
xor
lcall
mov
in
movsl
xchg
pop
jecxz
fisubl
out
out
ret
mov
and
dec
jo
push
push
insl
jg
scas
xchg
mov
ljmp
jge
mov
mov
imul
push
mov
pop
and
mov
test
sbbb
mov
jns
jnp
pop
jo
lret
cmp
mov
mov
adc
into
cmp
sub
in
dec
sbb
enter
cmpsl
int
jne
in
push
pusha
loope
cmp
out
shlb
xchg
fiaddl
xor
sbbb
jg
repnz
insb
adc
ss
pop
in
out
add
sti
mov
xor
cmpb
ffree
shrl
push
lret
mov
push
or
pop
adc
pop
out
fmull
cmp
scas
mov
je
mov
andl
fbld
pop
or
mov
jmp
push
push
lock
xor
inc
mov
adc
scas
push
push
pop
cli
dec
scas
enterw
stc
adc
jbe
sets
mov
outsl
or
cmp
sub
adc
add
jb
jae
and
mov
or
sbb
mov
pusha
push
sub
aaa
lock
arpl
jns
or
test
std
xor
pusha
out
and
lock
push
dec
out
cltd
push
repnz
cmp
inc
sti
pop
in
lahf
popf
pushf
push
ja
sub
mov
iret
call
dec
xchg
insl
push
or
pop
dec
jb
jnp
lock
lahf
ss
pop
xorb
bound
xor
jl
push
mov
ss
push
enter
ficomps
and
sbb
xor
gs
movsb
sub
popf
lahf
jb
xchg
sahf
int
loopne
push
hlt
inc
ds
loope
sbb
sub
lahf
sbb
xor
iret
sbb
pop
sbb
dec
push
stc
jnp
or
mov
fistpl
xorb
sub
in
ljmp
ss
outsl
test
sbb
ljmp
ret
adc
movsb
in
sub
test
push
lahf
pop
mov
inc
std
insb
outsb
int
int
push
leave
test
inc
mov
mov
add
rorb
mov
repz
leave
jmp
cwtl
mov
imul
cmp
setbe
sarl
fsubrl
pop
das
dec
dec
jo
xlat
lds
push
fcomi
out
aas
mov
stc
gs
scas
jg
xchg
clc
stc
dec
sub
cmp
cmp
pop
out
cmp
aad
xchg
mov
xchg
mov
xchg
mov
lcall
je
shrl
lcall
rorb
sbb
adc
cvtpi2ps
movb
push
sub
mov
ret
push
aaa
lods
jge
jbe
pusha
daa
mov
aad
push
rorl
ret
mov
inc
push
mov
out
dec
sti
adc
and
or
xor
mov
hlt
dec
das
cmpsl
sub
inc
mov
ret
filds
adc
cmp
sub
hlt
pop
adc
out
inc
out
xor
sbb
pushw
mov
cmp
pushf
lcall
std
mov
push
sbb
lcall
fs
test
ja
pop
mov
mov
sbb
outsb
mov
jns
imul
push
xchg
clc
adc
push
into
xorl
lods
mov
es
jno,pt
testb
mov
lods
add
mov
cs
cwtl
rcrb
fmuls
fnstenv
jge
nop
aam
lds
sub
mov
jl
lock
fsubp
inc
addr16
mov
gs
idivl
hlt
xor
inc
loop
or
xchg
sbb
cwtl
fsts
jno
fdivrl
aam
shlb
ret
cmpsl
pusha
dec
dec
aas
mov
jns
sbb
add
test
dec
movsb
xchg
jmp
jne
movsb
shrb
insl
sbb
out
nop
testl
or
mov
mov
movsl
jmp
or
or
repnz
mov
cmc
ret
xchg
pop
arpl
adc
pop
cmpsb
andl
dec
or
out
xchg
in
sub
jmp
out
xchg
stc
fstl
pop
jnp
sbb
or
sbb
test
mov
mov
mov
test
call
xor
add
arpl
adc
xchg
fmull
jae
mov
shrl
inc
jmp
add
mov
cmp
xor
or
mov
xor
leave
test
push
rorb
and
xor
aad
xor
cmp
xor
test
mov
stos
scas
iret
jne
pop
and
pop
dec
xchg
js
icebp
xor
fsubrs
lea
aaa
adc
xchg
push
inc
hlt
push
loop
test
pop
out
inc
inc
leave
adc
je
rcll
pop
dec
sub
aam
push
loope
mov
mov
lahf
xchg
call
or
xchg
nop
inc
sub
dec
test
popa
sub
daa
cmp
int3
pop
outsb
mulb
ds
push
lahf
push
idivl
push
xchg
pop
dec
cmp
ja
lods
test
ror
push
rol
cmp
pop
mov
pop
fucomip
js
cmp
xchg
seto
push
inc
push
lock
orl
fisttps
add
and
dec
add
call
mov
xchg
in
stos
aas
std
jmp
fwait
jnp
mov
repnz
sbb
addl
cli
cld
lahf
pop
xchg
sub
stos
or
lods
jmp
add
lea
mov
mov
push
push
mov
rcrl
in
mov
xchg
inc
jecxz
fcmovnbe
lret
fcmove
lock
push
inc
pop
out
ret
les
jae
adc
sahf
mov
mov
xor
mov
push
in
cmp
mov
jg
pop
push
ret
mov
in
mov
ss
int
mov
add
push
mov
push
dec
int3
test
pushf
pusha
pop
add
inc
mov
popl
pop
sahf
clc
gs
movsl
lods
jne
das
mov
cmp
aaa
mov
xor
mov
out
pop
jp
and
lcall
sbb
or
jns
in
mov
push
pusha
mov
in
sub
loop
xor
pop
dec
shll
scas
jecxz
jmp
rclb
lcall
mov
loopne
jle
sbb
outsl
cwtl
mov
jp
ret
fsts
insl
dec
xchg
div
pop
jp
cmc
inc
cmp
or
lcall
lods
loope
lret
aad
sbb
aas
dec
sub
xor
sbb
ret
lds
aas
jge
mov
in
pop
cld
into
cmp
shrb
ljmp
lea
sbb
out
repnz
add
mov
into
push
outsb
mov
neg
push
sti
dec
pop
out
mov
add
sbb
fwait
sub
fisubl
in
fwait
out
roll
inc
xor
push
inc
mov
adc
jno
or
mov
pop
inc
es
jmp
mov
inc
cmp
or
dec
imul
jne
imul
movsl
or
inc
mov
sti
notb
mov
push
add
outsl
mov
or
dec
in
inc
pop
sub
mov
int
pusha
ret
icebp
mov
lea
fwait
shlb
cmc
jl
sub
shrl
dec
mov
lret
pop
popa
sub
mov
adc
pop
aas
adc
imul
jo
mov
enter
popf
mov
push
jbe
mov
inc
inc
jmp
mov
mov
jnp
xchg
insl
lcall
and
push
mov
sbb
xchg
sbb
mov
xor
dec
arpl
out
test
xchg
xor
imul
iret
pop
inc
add
jo
idivl
push
or
outsb
mov
aaa
lock
insb
fcmovbe
cmp
or
nop
mov
mov
xor
xchg
mov
mov
push
leave
pushf
loop
cltd
mov
and
enter
push
or
add
pop
dec
je
mov
jae
mov
sbb
or
sbb
mov
sbb
xor
dec
sbb
out
bnd
out
or
mov
loope,pt
and
dec
faddl
cwtl
lret
scas
sbb
dec
loope
pop
test
cwtl
stos
mov
pop
cmp
repz
push
sti
jmp
cld
mov
push
leave
std
test
push
fidivrs
mov
in
fdivr
push
shrb
xchg
push
stos
adc
imulb
sar
or
xor
mov
xchg
push
sbb
push
clc
mov
enter
lcall
repnz
or
sbb
xchg
jns
fiaddl
test
adc
jle
stos
xor
or
xor
mov
cmc
add
jo
lret
xor
bound
push
sbb
xor
push
hlt
out
pushf
enter
sbb
cmp
nop
pop
out
and
jg
xchg
mov
scas
je
sbb
and
push
pop
movsl
fistl
jmp
pop
cmc
adc
rolb
fsubr
or
ljmp
or
out
outsl
adc
movsb
sbb
lret
stos
fidivrl
add
fbld
mov
lahf
mov
xchg
inc
stos
push
in
ljmp
dec
push
mov
mov
test
xor
sti
and
adc
jmp
push
dec
test
jns
jbe
fdiv
jmp
mov
and
inc
dec
mov
push
mov
xchg
mov
into
mov
and
addr16
rcrb
ljmp
mov
mov
scas
xor
lods
jg
mov
sub
jge
lds
inc
les
test
jae
pop
js
jle
jae
xchg
cmp
or
lcall
das
sub
sub
push
push
push
mov
lcall
pusha
inc
out
inc
aam
sti
daa
push
xor
sbb
pop
nop
jmp
and
push
ret
movsb
mov
inc
cld
cmpb
and
mov
fiadds
cmp
in
inc
and
out
dec
push
or
inc
and
faddp
sbb
fidivl
and
movsl
pop
daa
jae
ret
pop
jmp
ret
aam
mov
inc
pop
push
cmpsl
push
out
jo
mov
dec
subb
xor
xchg
lret
add
or
and
mov
fldt
shrb
xchg
aas
mov
out
pop
pop
gs
mov
sub
shrb
icebp
int
lods
cld
xor
sub
pop
mov
daa
test
pop
pop
dec
and
push
pop
cld
outsl
rorl
cs
int3
sub
insl
cmpsb
pop
std
mov
lock
and
sbb
or
mov
adc
pop
jecxz,pn
shrb
mov
fbld
mov
xor
jp
xor
cltd
mov
push
jge
mov
ja
xor
in
nop
pop
mov
pop
and
pop
add
stos
xor
into
loop
lods
mov
xchg
in
mov
inc
ret
sbb
inc
imul
mov
cli
xchg
and
dec
enter
push
aam
mov
pandn
mov
or
pop
leave
test
jecxz
lcall
fnstenvs
dec
ret
jp
mov
mov
rorb
push
jno
mov
mov
aaa
inc
jmp
daa
mov
fdivl
cmc
and
and
dec
mov
xor
jns
rclb
sar
ret
in
adc
push
stos
popl
outsb
scas
loopne
jmp
in
aas
enter
iret
sahf
jnp
loopne
dec
out
dec
aaa
add
jno
cmovl
ret
or
xor
lretw
int3
xchg
cmp
adc
lock
and
mov
jmp
or
popf
roll
cmovns
sbb
add
enter
dec
add
push
lret
jmp
bound
pop
mov
jmp
daa
imull
setns
aam
or
pop
mov
push
test
inc
adc
cmc
adc
stc
jp
xor
push
inc
pop
dec
push
test
pop
repnz
sar
hlt
mov
pop
jmp
lcall
clc
pop
mov
cmp
sub
mov
movsb
xor
xchg
pop
das
push
and
outsb
sbbl
dec
jp
inc
push
xchg
jno
push
in
and
bound
sbb
adc
xchg
das
mov
cmp
or
fucomp
aam
test
and
jp
xor
adc
repnz
aas
mov
les
push
push
lcall
arpl
xchg
and
and
or
in
gs
cmp
mov
hlt
jns
orl
push
popa
maxsd
in
mov
mov
clc
ss
or
sbb
cmp
fmul
cmp
mov
ljmp
sub
push
add
es
dec
pop
xchg
sahf
popf
jecxz
cmc
adc
aaa
xchg
and
push
inc
mov
jns
pop
loope
nop
lea
clc
mov
xchg
sub
jg
cli
stos
fidivrs
test
scas
push
and
in
mov
sub
fcoml
dec
scas
test
pop
les
lds
aam
lods
call
stc
jae
das
scas
je
dec
pop
das
icebp
jg
fmulp
mov
and
shlb
inc
in
leave
jge
in
das
iret
xchg
push
jno
jp
cmpb
mov
push
decb
xchg
and
mov
dec
pop
xlat
pusha
mov
and
repnz
cmp
shll
inc
int3
cmpb
daa
mov
sbb
push
xchg
inc
mov
or
sbb
fisubl
mov
negb
movl
call
in
jo
out
in
inc
pop
sbb
pusha
and
pop
shl
xor
jmp
js
scas
mov
repnz
pop
sub
out
ret
hlt
ds
movsb
mov
popf
aas
mov
mov
sub
cmp
into
bound
dec
jge
pop
and
jmp
icebp
sub
xchg
daa
mov
jno
lock
dec
lret
xchg
cmp
scas
and
in
jge
push
out
push
jl
sub
dec
mov
xor
jbe
jle
dec
and
test
fimull
clc
mov
lahf
popa
cli
aaa
xchg
inc
gs
sub
mov
sbb
or
fstpl
inc
inc
loopne
dec
mov
sub
add
inc
pop
mov
sub
jle
push
hlt
and
fwait
cmp
jmp
dec
fadd
jecxz
sub
ret
sub
sbb
jecxz
sbb
insl
and
stos
insl
or
cmpsl
mov
ds
mov
test
psrad
shl
sub
repz
xor
and
xor
mov
xor
mov
cmp
mov
xchg
push
out
out
jecxz
stos
sbb
test
cmp
daa
frstor
jle
in
xor
pop
jge
add
in
mov
popa
xor
pop
cmpsb
outsl
js
cmp
outsl
push
xchg
fmuls
mov
pop
inc
mov
mov
pop
sti
sarb
sbb
arpl
sti
sti
fistl
mov
pop
stos
fs
push
push
loope
xchg
mov
ss
cmpsb
out
mov
xor
push
mov
cmpsb
mov
aaa
push
xorb
dec
xchg
xchg
repnz
or
pop
jge
xchg
dec
dec
xorl
or
stos
cs
mov
aad
mov
andb
xchg
aad
xchg
or
and
inc
push
in
jl
xor
jp
adc
add
cmp
or
divb
insb
push
pop
cwtl
lahf
mov
fcoml
or
mov
clc
pop
cmpsl
aam
enter
push
cmpsl
mov
add
jl
inc
push
les
mov
fs
in
sub
xchg
loop
dec
sub
inc
das
sub
scas
mov
inc
jnp
mov
loop
inc
shl
xchg
mov
mov
cmpsb
cmp
sbb
add
inc
outsl
add
adc
lock
popa
adc
fdivs
cli
ret
xchg
lds
pop
in
pusha
or
iret
mov
stc
mov
lods
gs
push
test
fwait
dec
sbb
push
rclb
mov
int3
movsl
push
sti
mov
rcrl
sub
scas
daa
fwait
std
shlb
mov
lods
or
xorl
jnp
ror
lea
pop
or
pop
cld
push
xchg
cmc
enter
aas
stos
mov
jno
inc
sbb
mov
cs
call
stc
jg
loopne
dec
arpl
popa
pop
lahf
ljmp
xor
mov
sbb
arpl
mov
pushf
push
pop
or
lock
pop
sbb
push
in
inc
fldl
or
in
lret
jns
xchg
pop
xchg
in
popf
outsl
lret
cwtl
xor
test
aaa
push
and
inc
xor
jbe
test
add
jg
call
out
adc
mov
fcomp
insl
mov
mov
lret
loope
dec
dec
into
cmc
ror
cld
xor
pop
rcll
rcl
mov
push
pop
nop
xlat
add
cmp
lahf
enter
or
push
and
add
xor
mov
xor
adc
clc
add
push
push
or
or
or
jmp
insl
cld
or
push
roll
mov
notb
xchg
rcl
sub
scas
mov
cmpsl
inc
push
sarb
loope
mov
mov
data16
lcall
or
and
xor
orl
inc
subb
rcrb
inc
pop
andb
sbb
stos
testl
push
stos
push
aaa
mov
ret
or
cmpsb
xlat
incl
mov
test
push
aaa
outsl
mov
js
rorb
int3
or
xor
sbb
stos
test
std
popf
inc
sbb
ds
leave
arpl
out
ss
shlb
cltd
lret
loop
fldcw
in
push
cwtl
cmp
and
call
jle
arpl
xor
fs
adc
cwtl
and
js
mov
subl
lcall
scas
jb
cld
addr16
pop
pop
push
mov
mov
adc
lock
js
jnp
out
ja
adc
pop
mov
sub
movsl
push
push
cmpsl
movsb
std
pop
call
mov
mov
or
dec
and
jmp
movsl
popa
xor
pushf
in
sti
js
stos
addr16
negl
dec
adc
dec
outsb
es
inc
sub
notb
scas
xlat
adc
cmp
adc
loop
fsubr
dec
add
sbb
xor
fwait
add
jle
aaa
xor
inc
jecxz
mov
mov
fs
mov
cmp
jb
push
repz
cltd
idivl
stc
das
jge
and
xor
push
ret
push
push
insl
cltd
adc
repnz
cmp
sbb
pop
das
sub
imul
test
add
xchg
arpl
call
into
sbb
pop
jecxz
outsl
cld
mov
cmc
mov
sub
dec
push
fwait
lods
push
fbld
mov
scas
dec
push
pop
mov
jnp
sarl
inc
stos
dec
sbb
sub
daa
es
and
push
cwtl
xchg
mov
aas
dec
cs
std
int3
call
stc
and
mov
push
add
inc
inc
xchg
out
dec
out
jecxz
stc
gs
out
and
ret
or
mov
shlb
insb
adc
cld
fsts
and
daa
fs
mov
jnp
aam
cmp
lret
or
pop
iret
shll
in
movsb
popa
dec
rorb
pop
int3
push
ret
sbb
dec
lret
dec
in
cmp
ljmp
in
data16
arpl
in
cmpb
add
push
in
out
leave
call
or
fcoml
and
sti
xor
push
out
jg
pop
arpl
push
mov
jne
jecxz
imul
inc
jnp
push
xchg
pop
xchg
pop
xchg
jecxz
les
mov
pop
cmp
mov
sub
roll
push
xor
cmp
push
adc
or
mov
stos
mov
xorl
test
and
std
aaa
ljmp
xor
aas
in
pop
sbb
int
xor
fcmove
mov
xor
push
or
stos
adc
bound
push
xchg
xor
sub
pop
pop
lea
sbb
mov
dec
mov
fdivl
stc
mov
es
fstpt
insb
outsl
cmp
or
push
shll
mov
fsubrs
xlat
sub
fimuls
ret
out
dec
pop
divb
sub
or
outsb
add
out
repnz
out
inc
sub
pusha
fcmovnbe
ffreep
xchg
fwait
ret
jecxz
imul
adc
ret
sbb
inc
add
js
push
inc
xchg
das
insb
clc
lods
cmpsl
dec
jb
nop
pop
icebp
cltd
rol
les
clc
in
imul
pusha
mov
jns
shlb
daa
add
adc
cmp
inc
insl
inc
cmc
sbb
adc
and
mov
jp
daa
lock
fwait
int3
xor
popa
fbstp
es
push
adc
dec
movsl
xlat
and
cmc
fisubrl
loopne
fcomps
sbb
aas
nop
call
mov
mov
xor
insb
adc
notb
icebp
jmp
popf
call
jl
adc
pop
push
lcall
sub
and
dec
sti
testl
adc
cli
xchg
cmc
jecxz
lods
jo
push
add
lds
xor
pusha
js
adc
sti
sub
loop
mov
arpl
xor
int
stos
push
addr16
jg
adc
xor
mov
push
ljmp
push
jns
xor
test
sbb
lret
add
call
out
subl
xor
pushf
clc
jecxz
test
dec
dec
mov
cmpsl
dec
pusha
add
mov
inc
repz
fimuls
jbe
test
jb
movsl
inc
inc
in
stos
sub
cmpsb
dec
test
repnz
out
repz
sbb
xor
addr16
mov
mov
into
mov
fnstenv
jge
repnz
jno
adc
lret
or
pop
inc
add
cmp
hlt
jmp
add
and
rol
sahf
push
push
addb
fstps
push
leave
add
mov
call
xor
out
imul
mov
inc
push
pop
push
ret
hlt
jl
lahf
lods
leave
cwtl
pop
mov
and
movl
cwtl
loop
sbb
pop
jne
inc
pushf
lahf
xchg
pop
lods
pop
and
sub
mov
mov
inc
push
mov
cwtl
ja
jne
and
jmp
imul
fnstenv
rcrl
push
faddl
jge
gs
xchg
scas
lods
shrl
and
out
push
xor
inc
sahf
out
prefetchw
xchg
leave
or
repz
xchg
jg
mov
lret
loope
and
or
dec
push
jne
lret
stos
jge
inc
repz
pop
pop
add
mov
xor
mov
pop
sbb
rcrb
push
and
mov
popf
jl
lahf
icebp
imul
or
negb
in
jg
sbb
test
icebp
sbb
cmp
test
sub
loope
pop
ror
dec
sub
notl
rcll
sbb
ljmp
cmp
mov
mov
fildl
jge
xor
loopne
mov
aaa
lahf
mov
adc
jp
push
arpl
repz
cltd
adc
rcll
enter
mov
add
stos
pop
das
xchg
cmp
xchg
repnz
jecxz
cmp
or
cli
dec
inc
test
das
aas
or
mov
icebp
mov
mov
clc
ja
flds
iret
xchg
lret
repz
sub
jno
loop
gs
push
inc
sbb
mov
xchg
inc
xor
scas
push
inc
mov
imul
dec
lock
inc
movsb
mov
in
popa
data16
cli
add
pop
andl
adc
jmp
loop
stc
fcmovbe
stos
shlb
pop
mulb
and
incb
pop
or
xchg
push
sbb
xchg
mov
scas
ss
nop
jp
mov
call
fbld
sub
daa
testl
pop
imul
pop
xor
sti
push
repnz
or
cmp
loopne,pt
in
xchg
add
sbb
into
jge
out
jne
in
ss
aam
mov
mov
loopne
pop
pushl
inc
push
push
mov
enter
pop
and
test
xchg
mov
aaa
mov
push
adc
cmp
aas
fbstp
xor
aam
sub
sbb
sbb
xor
int
inc
mov
mov
imul
adc
jg
push
mov
xor
mov
lods
adc
sbb
jp
in
leave
fwait
and
push
ss
sub
mov
xchg
jae
test
dec
call
mov
cld
in
sub
dec
push
aas
lods
cmp
xchg
stc
sar
xorb
inc
lret
or
push
outsb
push
outsl
and
inc
jge
popa
mov
mov
and
divl
scas
ljmp
cmpsl
shlb
es
mov
outsl
das
movsl
or
mov
movsl
popf
and
xchg
insl
shrb
jecxz
adc
int
shr
add
push
push
push
or
popf
shll
addl
pop
mov
ret
xchg
movsl
lock
insb
daa
loop
ds
arpl
popa
or
clc
inc
scas
jge
pop
mov
ss
inc
mov
fdivrl
aam
mov
mov
lods
xor
cmp
pop
cmp
mov
cld
adc
lods
sbb
xchg
cmpsb
fsubs
aas
xchg
xchg
decb
gs
shlb
push
jnp
and
mov
out
jmp
mov
lret
mov
fcmove
xor
into
repnz
lods
sub
and
lret
andb
leave
insb
push
in
add
adc
and
cmp
sahf
cmpsb
ret
mov
push
pop
popf
scas
lods
push
mov
aad
lret
aad
clc
push
int
cwtl
pop
dec
xchg
jmp
movb
scas
dec
js
popf
cmpsb
js
out
push
jle
push
sub
mov
mov
pop
call
or
test
ret
jl
fsubr
mov
mov
lret
fs
lea
mov
xlat
mov
xor
mov
mov
mov
ljmp
lahf
mov
xchg
out
faddl
imul
aas
jo
mov
push
dec
jle
cmpl
xor
mov
movsb
stos
and
clc
sub
aam
push
and
loopne
and
in
sbb
add
insb
lret
push
pop
xor
je
cmpsl
inc
xor
pop
inc
sbb
mov
pop
xchg
pop
sbb
sbb
insb
xor
inc
cmp
nopl
or
inc
or
fstps
and
ss
jae
ficomps
jnp
fs
adc
sti
adc
xor
dec
mov
mov
xor
addr16
push
outsl
push
dec
cmpsl
into
repnz
mov
out
or
jmp
ret
fbstp
jae
and
pop
dec
fst
sbb
fwait
call
push
add
pop
shl
in
cmp
arpl
bound
lretw
bound
jecxz
jl
jbe
jge
ss
mov
mov
in
cltd
call
mov
and
dec
out
pop
movl
mov
and
pop
mov
mov
ror
lret
in
inc
adc
sbb
push
cmpsl
or
inc
xchg
adc
pop
stos
mov
xor
out
mov
jno
pusha
mov
mov
mov
insb
xchg
and
mov
lret
popf
mov
sar
mov
out
es
iret
sbb
cmpsl
mov
pop
pop
mov
pop
sahf
xchg
pop
stos
add
xor
inc
je
fld
and
pop
jg
mov
push
test
add
ss
inc
mov
insb
fisttpl
popf
lods
xchg
xchg
outsl
push
insl
or
cld
cmp
cli
jge
mov
lods
jo
scas
push
mov
out
pop
lcall
pop
cmpsb
pop
mov
mov
pusha
mov
jo
jge
jge
mov
sbb
jns
jmp
mov
test
jbe
aam
lcall
sub
jmp
cmp
cli
sbb
insb
in
sbb
pop
xlat
mov
movsl
cmc
jge
mov
les
repz
jle
out
fstpt
ret
or
pop
lret
dec
ljmp
cld
fxch
pop
ja
mov
mov
or
xchg
movl
xor
cs
aaa
in
arpl
cli
stos
add
loopne
or
aas
lds
mov
push
pop
jnp
push
sbb
call
xchg
js
aad
fwait
lahf
cltd
ss
popa
pop
daa
mov
insl
insb
push
inc
jl
xor
cmc
pop
mov
dec
mov
cmp
lock
adc
push
insb
jb
mov
mov
add
xor
cmp
mov
lcall
les
outsl
cmp
xlat
or
add
and
lock
push
stos
adcl
aam
jmp
fnstcw
les
adc
je
lahf
jp
stos
xchg
aas
rcr
adc
outsl
std
xchg
rcll
mov
add
loopne
sbb
xchg
mov
fiadds
dec
sahf
xor
in
movsb
push
mov
push
lret
lds
sbb
mov
dec
cltd
fnstcw
dec
ret
mov
cmp
outsl
lret
xchg
mov
stos
lds
ret
push
fbstp
sub
js
jle
sarb
adc
push
faddl
inc
inc
mov
ficompl
push
test
pop
cmp
mov
scas
movsb
push
loope
inc
les
mov
hlt
xorl
pop
xchg
ficoml
pop
jge
jb
test
int3
add
mov
push
push
mov
push
cmp
xchg
jae
mov
fsubrl
and
xchg
movsb
or
inc
outsb
cwtl
add
arpl
push
cmpl
jbe
lret
mov
mov
xor
mov
out
cmp
mov
mov
lock
mov
mov
or
xor
lea
movsb
cld
or
inc
jae
call
cmp
mov
pop
jge
imull
add
mov
into
out
sbb
or
ret
mov
and
loopne
insl
stos
and
push
and
jp
fucomp
jbe
xchg
sub
mov
mov
sbb
rorb
push
xor
push
arpl
sub
adc
lahf
rorb
push
lcall
das
xor
inc
mov
mov
icebp
test
dec
xor
mov
aam
mov
pop
into
lock
rclb
inc
mov
or
cld
outsl
cwtl
mov
scas
sahf
test
les
repz
lret
mov
sub
out
and
fdivl
and
mov
je
les
into
in
int3
dec
loope
xchg
test
cli
int3
jns
inc
cmp
pop
test
enter
bnd
lcall
sti
push
push
lcall
pop
cmp
xchg
inc
fldl2e
pop
mov
mov
sub
adc
popf
xor
jnp
lods
xchg
fwait
insb
out
mov
ss
lea
adc
mov
xchg
adcl
add
jge
or
ds
fwait
clc
mov
addr16
mov
popa
cli
popa
jbe
imull
cmpsl
sar
scas
xlat
in
lods
imull
pop
mov
mov
cmp
out
or
divl
inc
jae
lods
xchg
jne
stc
aam
shlb
ret
xchg
add
ljmp
ret
sti
add
inc
sbb
loopne
out
insw
stos
cmp
insb
jno
cmp
add
in
ljmp
cli
aam
sub
cld
lret
fstpt
mov
pop
jae
lods
iret
pop
mov
inc
ljmp
mov
cwtl
sub
sbb
scas
mov
dec
imul
pop
inc
in
xor
pop
mov
out
xor
cmc
sub
icebp
sti
cmp
xchg
xchg
mov
rcll
xchg
and
cmpb
mov
push
add
inc
sub
cld
jmp
sub
pop
fld
shr
xlat
push
imull
fistpll
ret
insl
in
push
je
aad
imul
adc
sbb
sub
iret
xor
adc
mov
dec
ret
stos
sahf
cmp
mov
in
cmp
xor
shlb
pop
dec
cwtl
loopne
jle
sbb
popa
fwait
cmpsb
xorl
mov
jle
jno
jo
imul
jp
nop
and
push
scas
xor
pop
hlt
cmpsl
cltd
sbbl
xchg
adc
cwtl
push
dec
cmp
cmp
jg
mov
mov
sub
call
out
jl
ds
pop
xor
daa
mov
jbe
ja
push
aam
out
xchg
xchg
mov
pop
repz
sbbl
push
cmp
inc
xor
aaa
add
pop
sbb
pusha
sbb
add
outsl
int3
aad
xchg
iret
and
in
xchg
push
mov
cs
out
inc
outsb
mov
test
mul
movsl
aad
mov
sahf
add
je
sbb
aaa
pusha
mov
mov
lock
fisubrs
cmp
pusha
in
and
in
cmpsl
cmc
in
pop
ds
ljmp
push
data16
push
or
test
sub
mov
push
test
cmovl
push
stos
cmp
mov
lret
push
jnp
fsts
and
pop
xchg
add
pop
out
or
jp
lret
dec
int3
arpl
mov
icebp
gs
insl
iret
jecxz
push
imul
insb
xlat
or
or
add
push
mov
or
xchg
mov
aad
add
rclb
push
int3
adc
jl
rclb
mulb
cmp
xchg
xor
mov
loopne
sub
mov
loope
aad
cmp
mov
jg
insb
sbb
cmp
add
ret
sub
out
not
mov
mov
xor
outsb
fsubrl
insl
pop
dec
pusha
xchg
cmp
sub
adc
ja
inc
orb
mov
std
push
jge
lods
jb
cmpb
int3
cld
sub
jo
in
mov
pop
fbld
sub
cmpb
imul
sbb
shlb
mov
jmp
mov
test
fdivs
pop
fisttpl
popl
fcoms
add
das
pop
mov
push
add
mov
cmp
xchg
rorb
sbb
cmp
and
lret
rolb
fs
jp
or
stos
fmull
jl
rcl
inc
xor
out
imul
mov
inc
clc
jae
imul
sar
or
call
or
ds
push
negb
cmp
sbb
lret
sti
mov
cmpsl
xchg
outsl
cmpsl
das
ja
shl
and
add
dec
push
pop
xchg
movsl
xchg
mov
add
ja
daa
mov
pop
les
jmp
add
or
sub
hlt
mov
and
sbb
sub
popf
add
mov
bound
fs
cmp
or
add
mov
popa
mov
ja
mov
cwtl
cld
xor
mov
add
test
mov
dec
cltd
push
aam
jle
ret
add
mov
jge
sub
imul
es
mov
push
sub
test
in
repnz
push
push
mov
sahf
lods
shr
clc
dec
xchg
pop
outsb
mov
xor
dec
out
cltd
lods
not
mull
lret
mov
imul
adc
jno
imul
popa
xorb
or
xchg
mov
push
lock
cmovns
scas
mov
pop
mov
cmpsb
lds
pop
inc
popa
adc
lret
sbb
movsl
ss
mov
dec
sbb
stos
inc
inc
fwait
pop
sub
add
or
dec
in
adc
call
rorb
clc
clc
sbb
xchg
sarl
adc
inc
and
cmpsb
fs
mov
out
jae
and
cmp
sbbb
jno
out
xchg
xchg
add
idivl
addr16
fisttpll
aad
dec
inc
loope
xor
out
ficoms
mov
ss
dec
scas
or
add
pop
pusha
jb
mov
add
lods
pop
pop
mov
dec
roll
mov
mov
jmp
lods
adc
mov
hlt
pop
aaa
or
aaa
inc
fbstp
and
outsl
fildll
aad
mov
xchg
insb
cmp
jo
xchg
call
inc
in
ss
pop
push
jmp
rcrb
call
mov
lcall
push
mov
pop
mov
rcll
pop
jecxz
add
outsl
cwtl
test
sub
scas
test
push
lods
cmp
xchg
into
mov
xchg
jmp
mov
sti
mov
jmp
out
and
dec
push
jecxz
test
add
sbb
dec
mov
clc
mov
adc
adc
ds
insb
mov
lcall
faddp
dec
loop
sbb
inc
das
icebp
mov
ret
cmpsl
lock
push
cmp
in
sbb
es
shlb
push
data16
inc
push
sar
adc
shll
inc
xor
ror
xor
mov
cs
sub
add
and
push
or
fs
neg
arpl
xchg
mov
and
ror
xchg
mov
mov
rcr
mov
mov
scas
push
mov
mov
aaa
out
inc
ds
cmp
mov
xor
loopne
xor
fildll
scas
push
pop
cmp
mov
add
ficoml
cmpl
sar
sbb
fwait
testb
imull
mov
push
clc
and
inc
and
lret
push
sbb
jg
pop
xchg
mov
inc
pop
int
icebp
mov
int3
add
sub
lahf
dec
sti
inc
cmp
ret
cmp
pop
lds
fadd
lock
push
dec
cmp
and
dec
push
out
ret
xor
inc
mov
lods
es
pushw
std
js
pop
sub
xchg
mov
scas
repz
iret
push
sub
nop
loop
xchg
test
sub
cli
jg
loop
iret
into
adc
sbb
arpl
sbb
sbb
mov
adc
lock
lea
daa
pop
mov
sbb
push
insl
lret
mov
aad
scas
aam
pop
mov
sub
in
rcll
mov
cld
test
les
stc
insl
aam
loop
xor
ja
push
inc
mov
arpl
stos
cmp
lds
insb
sub
ficoms
pop
mov
out
xchg
add
xor
lea
jp
jmp
rcll
loope
es
std
cmp
outsl
cwtl
lods
mov
std
pop
fwait
push
cmp
jns
or
dec
sub
adc
fwait
scas
stc
push
dec
xor
mov
lods
movsb
inc
ja
xchg
in
lods
shlb
cmc
movsl
rolb
push
out
mov
aas
xchg
pop
pop
bound
xor
xor
cmc
mov
pop
shr
pop
lods
test
jecxz
out
xchg
xor
adcb
push
add
lods
repz
xchg
adc
dec
cmp
sub
das
or
adc
cmc
cmpsl
cmp
inc
fwait
call
inc
dec
dec
cmp
stos
roll
sub
cmp
push
mov
movsb
popf
and
das
movsl
cmpb
fildll
mov
xchg
pushf
out
les
aaa
sahf
push
out
mov
andl
xchg
lock
insl
les
repnz
jmp
xchg
pop
xor
cmp
popf
lahf
rol
or
lea
fldenv
mov
xorl
cld
jb
jae
push
mov
ss
hlt
sbb
push
adc
idiv
mov
mov
arpl
ret
push
pop
ds
je
movsl
xor
pop
sbb
mov
ret
fldt
fimuls
sti
ret
push
fsubl
scas
push
adc
jp
push
dec
jp
cltd
pop
push
repz
mov
sarl
cwtl
das
test
push
scas
push
mov
jne
inc
adc
and
push
push
xchg
push
add
add
pop
dec
insl
jecxz
js
int
out
test
pop
adc
dec
push
inc
out
add
add
outsb
xchg
decl
push
add
subl
cmpl
dec
mov
jns
inc
cmpsb
add
fistpl
pop
subb
sub
sbb
inc
into
mov
outsb
mov
fstl
sbb
imul
mov
mov
cld
test
insl
xchg
fsubrl
adc
data16
push
mov
or
cmp
add
jp
cmp
les
lods
gs
mov
shl
xor
inc
je
pop
icebp
loopne
dec
xchg
and
sub
stc
and
lret
xchg
cld
push
cwtl
mov
ds
testb
mov
jb
and
es
pop
jecxz
decb
fwait
das
fsubp
jecxz
adc
inc
fistps
mov
jnp
jecxz
lret
int
out
ds
sbb
sub
shll
mov
adcb
in
mov
mov
jno
jb
addl
scas
and
pop
xorl
pop
bound
dec
loop
lahf
dec
inc
cmc
daa
enter
dec
idivl
cmpsl
test
data16
pop
mov
cmpsl
je
add
adc
outsl
xchg
or
xor
inc
adc
hlt
mov
lahf
ret
sbb
xor
push
test
push
pop
cs
jae
adc
jp
xor
shlb
pop
cmc
inc
into
aad
xchg
mov
xchg
cmpsb
xchg
add
aas
je
or
mov
jbe
push
xlat
push
mov
cmp
stos
mov
iret
es
jl
jae
mov
fsubr
es
inc
sbb
sti
pop
push
jns
rclb
je
addr16
sub
sub
filds
inc
lea
in
adc
popa
ficompl
std
mov
sbb
cld
lcall
or
cmpsl
cmpsl
jp
adc
add
mov
push
notb
popf
sub
mov
fisttpl
xchg
call
or
into
je
dec
cmp
shrl
jle
leave
or
lret
pop
push
je
pop
stc
shlb
call
ret
mov
mulb
addr16
and
movsb
mov
les
int3
xchg
loope
jne
jo
fsubrl
mull
pop
mov
mov
nopl
adc
or
negb
dec
push
pop
daa
je
fnstsw
pusha
or
jmp
xchg
push
add
movsb
lds
pop
pop
lret
addb
cmp
and
mov
fsts
pop
dec
and
mov
popf
sub
lret
xchg
aad
out
imul
fidivl
and
insl
mov
and
jne
xchg
loope
pop
push
or
pushf
insl
xchg
popf
xchg
jae
sarl
sar
sub
sub
out
pop
inc
adc
divb
cwtl
sbb
popa
imul
js
xchg
mov
and
xchg
add
sahf
and
repz
adc
scas
imul
lea
stos
mov
insl
test
test
mov
lahf
or
push
xor
sub
test
pop
inc
in
cmp
testl
jo
popf
cld
ljmp
xor
push
mov
rorl
mov
cmp
mov
jg
cmp
movsl
mov
xchg
stc
mov
push
mov
sbb
insb
enter
push
in
mov
fwait
std
shrb
push
test
out
add
repz
and
mov
xchg
jge
data16
cld
push
stos
xchg
out
xchg
into
out
mov
or
xchg
and
scas
inc
lret
pop
lods
or
cmp
mov
lock
mov
push
in
jo
dec
mov
mov
sarl
xchg
into
fst
fwait
or
insl
and
rorl
inc
das
aaa
add
fdivrl
mov
aad
dec
in
add
orb
fidivrs
xchg
fisubs
mov
mov
das
scas
mov
fs
std
or
pop
cmp
cltd
das
cmp
enter
jo
push
mov
test
pop
ljmp
neg
mov
mov
dec
mov
add
or
popa
shl
outsl
xor
js
and
mov
ss
ljmp
pop
sbb
or
cltd
loope
adc
xchg
inc
lods
and
in
inc
jle
loop
daa
das
out
inc
adc
jmp
hlt
das
xchg
add
dec
mov
or
filds
gs
fisttpll
jbe
mov
cmpsl
cmp
xor
add
popf
lods
mov
sub
scas
adc
repz
mov
push
jne
movsl
das
nop
and
loopne
pop
shlb
loope
test
loop
push
idivb
stos
jo
jmp
hlt
xor
jbe
jmp
insl
sahf
data16
xor
data16
sti
adc
pop
lret
jl
adc
outsl
subb
fmuls
mov
jb
div
push
pop
adc
mov
jle
out
mov
loope
mov
lds
mov
aad
sub
arpl
ror
push
sub
notb
loope
xor
cld
imul
adc
xchg
mov
push
shrl
test
nop
sub
insb
adc
mov
daa
add
and
ret
cmc
cmp
test
add
sub
and
test
sub
outsl
sub
push
imul
mov
loope
sbb
aam
or
sbb
hlt
dec
mov
pop
jecxz
addb
ja
ss
lahf
jns
sbb
in
cs
in
xchg
dec
or
fs
xor
aam
and
pop
scas
test
hlt
add
and
xchg
loopne
dec
cld
cmpsl
je
cmp
lock
adc
int
jae
call
popa
pop
pop
xor
or
jmp
sarl
xor
cld
and
and
cmp
int3
iret
inc
fcmovnbe
sahf
gs
loope
xchg
ss
xchg
arpl
aas
sub
xor
cwtl
sahf
es
mov
cltd
cmp
add
and
fmull
mov
pusha
inc
fdivs
sarb
mov
testb
pop
fisttps
jp
push
pop
in
jnp
push
or
les
loop
add
dec
jl
mov
jp
flds
stos
not
test
inc
push
dec
jmp
mov
subb
cmpsl
sbb
or
lods
stos
xchg
sahf
dec
inc
sbb
fwait
int
push
push
inc
stos
pop
mov
jmp
mov
inc
sub
pop
es
push
imul
daa
mov
loopne
sub
jne
rcrb
hlt
sbb
mov
in
jbe
inc
xchg
xchg
int
inc
mov
or
pop
lods
xor
mov
mov
xor
xchg
jge
repz
mov
jmp
jns
hlt
daa
mov
mov
icebp
xchg
dec
jo
or
mov
xchg
push
lahf
and
and
les
idivb
jno
aas
je
ljmp
lahf
jl
pop
iret
mov
daa
dec
sbb
adc
pop
or
mov
add
int3
into
hlt
aas
subb
fistps
xchg
push
je
xor
or
sub
test
stc
add
adc
mov
add
fisttpl
aas
stc
out
mov
xchg
dec
xlat
mov
shl
mov
push
sahf
xchg
jmp
inc
push
lock
push
mov
jmp
cmp
inc
imul
mov
mov
push
roll
outsb
sahf
add
or
or
ss
into
aad
hlt
enter
pusha
out
repz
data16
cmpsl
pop
dec
orl
flds
mov
fimuls
insl
mov
jle
out
mov
inc
xor
mov
into
ret
push
sbb
fucomip
outsl
pop
js
or
scas
and
or
push
inc
cmp
repnz
ja
cmpsb
add
add
jmp
ljmp
sbb
mov
add
push
or
out
push
out
icebp
jns
pop
pop
inc
mov
test
js
adc
and
push
jae
cmp
repnz
aam
xor
push
xor
ds
fistpl
sub
testb
jp
sub
mov
mov
ljmp
into
push
lea
bound
cmc
sbb
insl
test
sbb
mov
mov
out
sbb
adc
pop
cmpsb
mov
fisubrl
push
insb
out
xor
jecxz
adcb
push
jo
pop
add
in
jg
mov
aaa
js
dec
lods
jbe
mov
and
mull
jecxz
imul
adc
in
push
push
sarl
and
jle
inc
push
pop
sub
mov
subb
fistl
mov
jns
xchg
cmp
fsincos
cmp
xlat
mov
push
adc
gs
or
lea
iret
cwtl
cmc
jae
push
mov
add
test
lods
pop
outsl
adc
mull
cmpsl
inc
pop
cli
inc
push
loop
fldt
cs
and
stos
xchg
push
adc
add
iret
mov
pop
dec
jnp
popa
pop
bound
xlat
in
out
add
sub
jb
pop
mov
in
mov
inc
fidivrl
out
push
jmp
movsb
shrb
pop
movsb
jnp
push
hlt
scas
dec
mov
mov
xor
repz
iret
xor
adc
mov
fildll
dec
sbb
insb
mov
dec
pop
xor
mov
into
insl
lea
pusha
je
adc
jecxz
jns
jge
add
cmpsl
dec
stos
pop
mov
roll
mov
adc
push
movsl
arpl
mov
xchg
fidivrs
or
mov
adc
jmp
lret
push
scas
mov
mov
out
popf
add
jl
int
or
and
test
xchg
dec
xchg
jl
aad
mov
and
adcb
dec
cmp
out
pop
in
in
mov
xor
test
inc
movsb
xor
in
xchg
sub
in
dec
daa
pop
mov
xor
sbb
push
jge
ss
cwtl
orb
cmp
push
sub
jmp
rcll
dec
and
and
mov
mov
mov
int3
stos
add
mov
cmp
punpcklwd
add
cmp
mov
fidivs
cwtl
and
es
inc
inc
cs
out
inc
arpl
sub
or
lock
sbb
xchg
add
jae
xchg
xchg
stc
jns
xchg
and
pop
cwtl
movsl
lret
out
loopne
lea
xor
outsb
adc
xchg
push
insb
fwait
jb
test
shlb
inc
pop
icebp
bound
mov
mov
cmp
xor
xchg
and
fstpt
mov
clc
pop
fnstsw
aad
loopne
ret
pop
out
mov
add
mov
mov
mov
out
test
add
cmc
lret
rcr
lea
cli
adc
daa
mov
les
bound
mov
xchg
xchg
adc
cmc
daa
rolb
mov
mov
ficoms
cwtl
insl
xchg
in
stos
push
jae
add
sar
adc
jb
inc
mov
orb
pop
push
push
sub
pop
sbb
lea
out
test
popa
shrl
cld
push
sub
mov
gs
cmpsb
cli
arpl
mov
cmp
lahf
push
mov
mov
dec
or
test
pop
ljmp
cmp
jno
sahf
dec
and
mov
dec
cltd
sbb
add
push
fucomi
cltd
sbb
pop
pushl
test
and
add
sub
sahf
subl
cld
pusha
mov
fmuls
mov
imul
or
sbb
shll
mov
mov
jecxz
jle
pop
dec
fbld
xor
pusha
xchg
xor
cmp
cmpsb
bound
stos
ljmp
and
scas
scas
fbld
out
fs
je
cmpsl
add
mov
jae
pop
mov
add
jo
push
out
popf
lahf
filds
dec
enter
push
psubq
frstor
sti
xor
jg
ud2
mov
xchg
sub
mov
xchg
sbbb
and
mov
loop
push
lret
mov
pusha
daa
mov
adc
dec
and
pop
xchg
out
loope
xchg
sub
dec
fs
pop
cmp
sbb
sub
daa
lock
nop
or
pop
sbb
and
inc
xor
movsl
insb
adc
stc
leave
pusha
test
and
dec
mov
out
aam
inc
out
in
sbb
mov
dec
repnz
add
jae
xor
jno
fstpt
or
sti
movsb
sbb
imul
imul
in
add
add
and
push
mov
icebp
pop
jnp
jns
jle
sbb
jae
cmp
cs
xchg
pop
ss
mov
push
jb
dec
mov
sbb
cmpsl
inc
cmpxchg
mov
push
mov
mov
cmp
stos
jmp
inc
adc
das
jecxz
sub
mov
mov
in
fstpt
sbb
arpl
loope
out
insl
add
push
add
sahf
rolb
pop
adc
cmc
lods
jp
jbe
and
outsl
cmc
jns
dec
or
mov
pop
std
ficompl
and
jb
xchg
pop
mov
sbb
lcall
add
fnstenv
push
xchg
add
lret
test
xchg
push
mov
stos
push
sbb
lcall
stos
ljmp
or
cmp
andl
hlt
shrb
jae
lods
hlt
shl
or
movsl
in
jle
popa
test
pusha
add
push
lahf
loopne
adc
mov
ss
jmp
inc
nop
xchg
pop
adc
xor
sbb
inc
push
repnz
movsb
jle
imul
out
data16
outsl
aam
inc
outsl
test
cmp
or
call
call
jg
dec
mov
or
les
inc
sbb
xchg
inc
out
test
adc
cmpsl
lret
sub
jecxz
jnp
cmpsb
mov
pop
sub
fstpt
xchg
lret
aad
jge
inc
or
dec
movsb
int
jne
sbb
mov
push
int
sub
mov
stos
mov
mov
mov
mov
mov
mov
inc
or
cltd
or
scas
jmp
cmp
es
and
insb
movsb
in
outsl
xchg
mov
fwait
cmp
add
mov
push
xchg
add
or
fwait
adc
clc
enter
aaa
mov
shlb
clc
cmp
decb
call
xor
pop
into
cmpsl
sub
pop
popa
and
fdivs
sub
pushf
sbb
notl
cmp
int
outsl
xor
xchg
pop
pop
bound
scas
fstps
divl
lods
jecxz
cmp
insl
dec
imul
cli
xor
pop
push
out
mov
or
scas
jne
or
dec
pop
or
lock
push
outsl
push
cmp
xchg
push
pop
mov
cmpsb
aad
mov
lret
cltd
addr16
cltd
repnz
call
addl
imul
addr16
das
inc
lods
mov
pop
mov
icebp
popf
xor
xor
sbb
loopne
mov
adc
mov
inc
pop
mov
sbb
cmp
and
mov
lret
xchg
insl
daa
sbb
jmp
mov
add
push
push
pop
cmp
mov
enter
mov
arpl
jae
add
test
inc
add
push
cli
cmp
inc
adc
cmp
push
sub
dec
stc
arpl
pop
stos
cmp
popa
push
and
inc
or
scas
outsb
stos
inc
idivb
adc
ja
mov
sbb
cmpsl
mov
mov
pop
lods
push
xor
imul
inc
mov
pop
pop
insl
jb
push
pop
fstpl
shll
mov
mov
sbb
pop
lock
fs
cmp
cmpsb
mov
xchg
mov
loop
sbb
pop
int
add
in
push
push
add
cld
xchg
jp
mov
or
mov
orl
jmp
mov
mov
mov
push
dec
jg
xchg
xlat
lret
fwait
dec
and
pop
fistpll
jp
ret
rol
data16
xor
or
sarb
lcall
hlt
push
xor
fnstcw
das
repnz
dec
xchg
fsts
or
pop
call
aad
inc
in
adc
jb
add
cmpsb
cmp
in
iret
jb
cld
stc
test
movsb
mov
xor
jmp
sbb
or
mov
add
les
ror
or
mov
out
test
or
and
mov
dec
push
adc
xor
push
xor
xchg
pop
movsb
imul
xchg
cltd
jo
test
cmp
sub
and
inc
outsb
fmull
pusha
roll
mov
xor
mov
inc
in
mov
lret
cmp
rorl
cltd
sti
xor
push
pop
fs
stos
mov
xchg
stos
inc
mull
adc
les
imul
sub
scas
ja
cltd
sub
loope
lret
push
sti
mov
sub
mov
cwtl
movsl
inc
or
cmp
xchg
sbb
fidivs
cmp
or
mov
je
nop
adc
pop
scas
jmp
nop
push
out
push
aad
jecxz
and
test
pop
outsb
add
xchg
stc
cmc
mov
xor
jg
sti
xor
dec
adc
lcall
mov
stos
inc
sti
out
pop
loopne
mov
out
push
and
jb
xchg
loopne
xor
adc
call
shll
lock
lret
leave
incb
pop
pop
mov
ljmp
lods
daa
xchg
jne
mov
dec
push
in
dec
popa
sub
popf
pop
in
or
pop
or
imul
add
aaa
or
dec
jb
inc
pop
cmpsb
mov
and
push
ror
xchg
jmp
fs
xor
daa
mulb
test
and
push
adc
fdivrl
xchg
xor
inc
sub
loope
inc
clc
inc
dec
fnstenv
loopne
xor
shrb
add
sbb
mov
pop
int
jno
shlb
mov
cmp
inc
xchg
arpl
mov
sbb
and
push
js
push
jp
mov
push
addr16
xor
les
sub
inc
xchg
ss
jge
pop
push
pushf
ret
sbb
shrl
cmp
adc
dec
and
xor
mov
vcomiss
mov
or
add
pop
mov
mov
jge
call
add
les
jno
add
icebp
mov
xchg
cmp
xchg
mov
stos
or
dec
cmp
in
xor
loop
mov
mov
or
scas
adc
xchg
ret
jge
and
stc
fdivrl
movsl
cmp
xchg
outsb
pop
xchg
out
mov
or
test
out
cmp
lret
insb
xor
in
push
mov
and
in
jno
push
test
xor
cmp
popf
cmpsl
adc
aaa
and
fidivs
arpl
add
inc
fyl2xp1
imul
es
ljmp
cmp
mov
inc
mov
mov
add
push
cmp
mov
pop
jge
mov
push
push
cmp
push
cli
cmp
cli
dec
ret
mov
int
repnz
fldl
ret
adc
shlb
xchg
data16
pop
dec
loop
and
jnp
and
jmp
dec
sbb
rclb
xor
fbld
cmp
dec
or
stos
out
je
enter
mov
ret
lea
dec
add
mov
mov
inc
push
fmull
rorl
fsubrl
inc
cwtl
outsb
rcll
dec
and
ljmp
fdivrs
fsubrs
sbb
leave
cmp
cmc
mov
xchg
jnp
dec
movsb
mov
xchg
lret
aaa
sub
enter
shlb
imul
outsl
jp
sbb
pop
inc
or
xor
push
fimull
mov
sub
frstor
out
data16
xor
jl
daa
add
data16
enter
xchg
fwait
push
add
jecxz
fstps
subb
xchg
imul
mov
cmp
xchg
fwait
pop
mov
insb
andb
lock
fsubl
sbb
adc
out
mov
aaa
xchg
lahf
outsb
adc
add
sub
sub
xchg
popf
int3
jg
pop
dec
adc
std
pop
adc
andb
inc
push
jle
lea
lret
into
out
ljmp
mov
mov
adcl
or
xchg
mov
jle
data16
jno
popf
dec
jae
xor
xchg
add
mov
ss
xor
lock
sti
adc
insl
xor
pop
lock
and
imul
loop
bnd
out
push
sbb
leave
adc
lcall
xor
push
pop
adc
xchg
sub
stos
inc
dec
cmp
mov
adc
sar
cld
out
das
shrl
test
sub
sbb
mov
test
pop
rorl
xor
aam
adc
shll
subl
out
push
aad
cmc
mov
mov
sbb
xchg
push
fs
in
xor
leave
movsl
push
getsec
loopne
mov
in
sub
dec
roll
int
sub
fs
ret
add
lahf
test
inc
push
pusha
xchg
repnz
popf
dec
and
or
in
insb
push
lock
lcall
subl
and
test
pop
sbb
int3
fwait
test
xor
outsb
or
mov
xor
inc
sbb
ficoml
mov
lds
scas
idiv
fistpll
call
ljmp
ret
test
cli
jge
inc
sahf
daa
sub
and
faddl
jne
push
jno
cmpb
xor
xor
lods
mov
sub
lds
jg
xor
push
jl
loopne
repnz
and
stos
or
xchg
cmp
jb
shlb
popa
sub
jl
and
mov
mov
mull
sbb
int3
push
jecxz
pop
imul
roll
mov
pop
cltd
lock
hlt
xor
pop
pop
pusha
pop
jne
into
xchg
iret
loope
sti
repz
es
pop
jmp
mov
xchg
or
les
shlb
ja
adc
xchg
pop
outsl
adc
daa
fucomp
mov
cmpsl
push
xchg
and
dec
js
adc
test
loop
hlt
mov
jge
mov
xor
sub
mov
and
push
xchg
and
stos
ret
push
dec
int
jns
inc
xor
movsb
popf
lahf
in
sbb
lcall
mov
hlt
into
in
inc
data16
idivl
mov
xchg
cmp
xor
hlt
xor
ds
mov
int
call
inc
mov
jmp
stos
in
in
add
jno
push
int3
ret
rorl
mov
and
sub
aaa
cltd
dec
cmpsl
stc
mov
mov
jp
or
xchg
xchg
call
test
outsb
js
mov
aad
or
lret
movsl
mov
dec
adc
out
aas
pop
xor
ljmp
cmp
sub
sbb
into
mov
push
pop
cmpsb
jg
and
mov
push
imul
xchg
adc
sarb
bound
sub
fs
hlt
or
popf
imul
insb
ret
cmp
cmp
push
out
inc
mov
mov
cltd
sub
jb
inc
test
pop
hlt
xchg
or
add
loopne
enter
xor
movb
push
rcll
pop
inc
cmpsl
or
xchg
cld
cmc
in
xchg
fistpl
add
jmp
mov
ds
or
aas
test
lods
scas
repnz
xor
movsb
sbb
push
cmpb
roll
sbb
in
mov
and
pop
addr16
pop
or
in
leave
mov
mov
pop
cmp
fbld
jns
insb
mov
imul
xchg
dec
inc
xor
js
xor
cltd
mov
mov
lahf
xor
arpl
mov
pop
mov
mov
and
xlat
test
cli
push
adc
repnz
push
les
mov
mov
addl
daa
mov
hlt
rcrl
inc
and
scas
shrl
jns
test
mov
fdivrl
pop
and
push
adc
int3
sbb
pop
push
adc
and
rcll
mov
mov
mov
pop
stc
cld
lock
push
xchg
imul
dec
adc
sub
sub
sti
jb
shrb
ret
lock
test
push
push
jns
push
inc
add
mov
sti
je
in
arpl
int3
mov
or
xchg
add
cltd
jmp
test
sub
ds
scas
arpl
mov
es
jbe
push
outsl
int
mov
or
testb
mov
test
clc
push
pop
in
adc
mov
xchg
jae
andb
stc
subb
ficoml
les
mov
xchg
mov
inc
inc
xor
or
das
xor
jno
push
insb
or
pop
inc
sbb
in
dec
jg
mov
pushf
dec
mov
and
cmp
jnp
pop
into
dec
fldt
mov
push
and
add
sbb
pop
loop
fiaddl
add
push
adc
sbb
in
popf
mov
stos
inc
fnstcw
mov
add
adc
jno
lods
dec
jnp
pop
jb
or
out
push
movsl
cmpsb
lock
cwtl
inc
cmp
pop
cmp
js
cmp
pop
dec
in
push
je
lcall
pushf
inc
int
push
call
subb
jb
mov
xor
cmpsb
dec
sub
push
test
and
adc
outsl
push
jmp
pop
les
out
rclb
adc
lods
enter
and
sti
lock
adc
dec
inc
mov
jge
in
bnd
xchg
cld
imul
and
in
mov
jb
call
clc
adc
int
mov
repz
cli
icebp
out
adc
add
movsb
aaa
xchg
pushl
xchg
sub
jmp
push
adc
lods
push
push
nop
cmpsl
cmp
pop
addr16
inc
inc
notb
cwtl
ret
push
jae
fistpll
inc
xchg
aad
fs
lea
adc
lods
jno
sub
sub
ret
push
inc
loop
aam
hlt
add
mov
pavgb
ficomps
push
jo
fildll
pcmpgtb
insb
loop
adc
push
or
jge
push
pusha
cmpsl
adc
insl
cmp
xchg
dec
ljmp
je
pop
pop
inc
movsl
sub
pop
pop
adc
jg
cmpsl
sub
rcll
jcxz
add
stos
pushf
cli
js
fs
pop
cmp
or
inc
insb
and
in
out
es
hlt
rcrl
xor
push
sub
and
mov
push
mov
imul
repz
out
push
adc
negl
push
sbb
hlt
mov
popf
mov
fistl
pop
mov
xlat
mov
fcompl
and
call
push
sbbl
push
push
rorb
out
cmp
pusha
sbb
pop
aaa
insl
and
mov
push
xchg
push
in
xor
xchg
and
cltd
fimull
test
cli
gs
mov
mov
cmp
testl
lea
or
lods
scas
bound
push
mov
addb
outsb
cmpsl
sbb
pusha
dec
sbb
mov
inc
push
cmpb
out
fmull
call
cwtl
adc
fisubs
sarb
loope
pop
xor
lds
xor
push
or
or
inc
jl
push
jno
pop
mov
pop
push
pop
xchg
fdivs
mov
scas
jle
dec
inc
xchg
shll
mov
inc
mov
subb
fmull
adc
sbb
rclb
fnstenv
xchg
pop
ret
dec
dec
fidivl
sub
dec
mov
sub
jg,pt
sbb
aaa
or
xor
xor
pop
inc
add
imul
into
xchg
adc
lret
mov
cmp
fcomps
in
jg
cmp
mov
out
lods
push
xlat
roll
pop
or
pop
xor
xor
in
pop
loop
xchg
imul
adcl
xchg
lods
icebp
rorl
push
data16
jnp
stc
stc
pop
lods
cwtl
mov
das
jge
inc
imul
xchg
nop
add
test
cmc
shlb
movsb
cltd
pop
xor
jns
or
cs
sbb
push
push
ret
repz
mov
mov
pop
cli
sbb
rorl
ror
rdpmc
ljmp
sbb
mov
fsubl
pop
jl
adc
mov
sub
pop
negb
lcall
js
loopne
push
mov
jne
pop
shlb
or
push
lods
fmulp
adc
hlt
pop
jecxz
cli
test
in
outsl
pop
cmpl
rcll
or
out
pop
ja
fsubr
pop
repz
and
call
test
inc
xorl
xchg
xchg
imulb
js
jae
ret
inc
xor
push
xor
and
mov
dec
push
add
adc
mulb
adc
jo
mov
push
cs
dec
mov
movsb
lcall
loopne
or
jns
xchg
repz
lret
das
les
bound
arpl
or
jl
push
cmp
xchg
xor
jnp
pop
push
roll
int
imul
jmp
push
aam
push
js
cmpsb
mov
xor
xor
mov
pop
out
loop
push
out
jb
inc
jg
pushf
popa
rol
sub
sub
jae
out
cmc
insb
sub
mov
repz
fldt
movsb
scas
in
xchg
push
aam
mov
and
imul
or
lahf
cltd
inc
stos
movb
cltd
push
insb
push
sbb
lods
cwtl
fsubrl
rcl
jb
add
adc
or
adc
mov
idivl
out
ds
xchg
sbbl
xchg
mov
mov
lods
ljmp
cmpsl
scas
sub
sbbl
pop
mov
mov
cmp
scas
push
and
mov
jae
out
sub
sbb
xchg
or
mov
mov
test
enter
pop
mulb
jno
int
or
jae
push
xlat
cwtl
pop
decb
out
stos
movsb
lret
or
mov
or
inc
testb
xchg
int3
dec
sbb
call
into
mov
das
dec
dec
faddp
lds
and
sub
jb
cli
fwait
xor
xor
ss
push
push
gs
lcall
mov
mov
mov
movsb
inc
cmp
fldcw
fwait
inc
test
aam
xlat
call
into
stc
lret
push
sbb
mov
and
add
xor
adc
cmp
lea
cld
dec
out
inc
rorl
sbb
inc
loope
int
hlt
inc
in
jmp
mov
les
in
sbb
xor
mov
xor
mov
mov
cwtl
call
pop
mov
push
mov
mov
mov
pop
and
popf
mov
mov
daa
mov
mov
mov
cmpsl
aaa
push
dec
dec
loop
dec
sti
cli
sbbb
in
dec
mov
and
mov
mov
std
sbb
and
pusha
add
add
sahf
push
fdivr
xchg
jno
sarb
rorl
cmpb
cld
in
outsb
adc
or
fcomps
test
cmpsb
push
rorb
data16
jbe
dec
js,pt
push
xor
inc
sub
jecxz
test
cmp
lret
aas
pop
and
test
cmp
sub
sbb
in
fmull
aaa
sub
outsb
push
sub
pop
iret
mov
mov
inc
jnp
pop
pop
dec
mov
mov
sub
mov
insb
pop
fsubr
cmp
aad
cs
fdivp
dec
push
fst
and
push
arpl
cmpsb
aad
out
lock
jp
push
mov
or
pop
lods
pop
pop
xchg
inc
js
xchg
sub
testb
stos
sbbl
bound
push
push
sahf
push
in
xchg
pop
xor
cwtl
pop
out
cwtl
push
mov
call
xchg
jae
adc
mov
shrl
add
dec
cmpl
sbb
mov
ret
lahf
xor
fwait
mov
cmp
lock
pop
pop
xchg
lret
mov
into
pop
or
loope
xor
psubw
mov
sub
add
bound
xchg
cmp
push
inc
hlt
inc
sbb
clc
cmpsb
xchg
insl
rorl
cmpsb
adc
add
lods
mov
sti
sub
jbe
and
jge
add
insl
loopne
add
stos
icebp
fidivl
dec
cmp
cmpb
inc
imul
inc
pop
jmp
shl
xchg
lea
add
jle
cmpsb
inc
lds
fdivrs
xor
jp
adc
mov
mov
add
rol
xchg
lret
sub
or
cmp
test
xchg
clc
or
cmp
in
jmp
mov
dec
or
imulb
ret
ss
mov
fiadds
xchg
cs
imul
add
out
pop
xchg
xor
pop
mov
pop
sbb
cmp
mov
and
adc
xor
xor
int3
jbe
leave
cld
mov
jmp
js
call
sub
cmp
movsl
je
cs
jg
leave
pop
xchg
jne
in
sbb
mov
subb
pop
adc
sub
notl
lock
arpl
mov
rorl
inc
fmul
or
pop
cli
cmp
adc
popf
add
xor
mov
jl
in
decb
inc
push
je
test
xchg
sbb
mov
cmp
cld
dec
dec
xor
add
test
hlt
push
cmc
cwtl
repz
mov
iret
adc
test
ja
stos
mov
sahf
adc
les
pop
cmpsb
negl
daa
iret
dec
enter
lret
out
xchg
xor
mov
mov
ret
adc
push
fnstsw
push
cmp
out
iret
lds
shll
mov
out
cli
jge
outsl
fldt
popf
lods
mov
sub
dec
and
jecxz
scas
cmp
add
xor
cmpsb
mull
nop
movb
adc
orb
jns
repz
std
and
jb
in
jne
inc
in
pop
pop
pop
push
es
jns
loopne
or
pop
mov
inc
loop
adc
sbb
ljmp
jb
int3
mov
push
mov
jns
xor
and
add
and
jp
lds
or
cli
xchg
mov
sbb
push
and
andb
mov
or
repz
cmc
ret
fiadds
dec
jge
imul
xor
lret
jnp
dec
inc
or
xchg
pop
adc
xchg
repnz
jle
mul
sub
dec
push
in
mov
mov
les
gs
mov
pop
es
xchg
pop
stc
fildll
mov
dec
sub
add
sahf
add
stc
fidivl
jp
rcl
or
mov
test
pop
xchg
jne
xchg
cli
out
sub
sbb
cmp
and
cmp
push
mov
mov
mov
adc
sarl
push
sbb
mov
xchg
inc
and
rol
jo
and
into
push
add
cli
sbb
mov
dec
mov
inc
ja
movb
test
adc
push
mov
sub
jmp
mov
or
jecxz
xchg
cs
jno
and
mov
add
push
sbb
cmp
call
lret
lods
inc
pop
adc
scas
dec
std
jge
or
add
dec
push
xchg
and
stos
arpl
pop
push
in
ret
sti
das
movsl
lcall
incb
aaa
and
jmp
add
rclb
or
sub
nop
xchg
xor
cs
mov
dec
cmp
bound
mov
lds
mov
pop
xor
test
push
lods
push
aas
add
inc
or
xchg
sub
push
adc
fcoml
push
fwait
add
add
push
aad
add
ljmp
sub
sub
movsl
std
push
shr
xchg
shrb
mov
push
and
xorb
sbb
mov
mov
sbb
push
cmp
or
in
hlt
neg
lock
outsb
adc
dec
adc
out
mov
test
push
adc
adc
fildll
and
bswap
sbb
shlb
push
xorb
ret
mov
enter
xchg
loop
add
nop
and
mov
mov
pop
mov
popf
int3
jbe
and
fildll
or
mov
mov
lret
outsl
xchg
pop
inc
xor
pop
addl
pop
bound
stos
adc
mov
mov
scas
rcrb
push
insl
stc
andl
addr16
sbb
sbb
xchg
pop
mov
mov
in
leave
push
psraw
in
jp
or
gs
stos
mov
ja
and
cmp
pop
sti
push
mov
sbb
mov
pop
test
and
and
mov
dec
scas
xlat
mov
push
loopne
xlat
adc
push
loopne
test
adc
xchg
jnp
out
mulb
mov
pop
arpl
in
push
inc
mov
addb
stc
sbb
cmp
mov
dec
lahf
or
bound
sub
ret
xchg
lret
or
xor
inc
pusha
pop
pop
notl
cmpsl
pop
neg
movsl
lcall
sub
sbb
negl
xchg
aaa
jns
lcall
xor
inc
sub
sub
mov
icebp
xchg
sbb
xchg
pop
mov
std
mov
sub
or
inc
ret
dec
inc
mov
cld
cwtl
sub
ficompl
icebp
and
dec
leavew
xchg
andl
pop
dec
decl
das
movsb
cmp
push
jmp
mull
movsl
rcr
test
jns
cmp
in
ret
popf
ja
xchg
sbb
repz
pop
xor
mov
jb
negl
push
inc
pop
insb
sarb
ds
cmpsb
and
inc
push
and
rcrb
push
push
pop
inc
fcoml
sbb
vorpd
xchg
leave
cmp
enter
shl
dec
fmulp
xlat
push
sbb
jmp
fdivs
xchg
sbb
es
pushf
out
insb
xchg
or
movsl
pop
fbld
jl
xchg
addb
stc
aad
insl
and
mov
mov
scas
addr16
xorb
xlat
nop
popf
sub
sub
clc
or
and
mov
lea
scas
cmp
ret
add
jnp
jnp
inc
dec
mov
mov
pop
data16
icebp
inc
std
sub
lret
fildll
imul
push
cmp
sbb
or
mov
lea
insl
push
aaa
test
push
addb
lds
and
into
or
iret
lds
fistpll
sbb
lret
or
imul
out
fcomip
cmp
inc
xor
rcll
shl
dec
sub
fadd
ret
jne
jecxz
std
punpckhwd
mov
std
push
clc
and
sub
jp
pop
daa
ficompl
and
inc
dec
xchg
dec
mov
call
cs
adc
ret
xor
repz
ret
mov
cmpb
ljmp
call
iret
inc
mov
xchg
pop
add
outsb
cmpsl
ret
andb
inc
fs
mov
aaa
shlb
push
loope
cmp
inc
inc
repnz
fldcw
or
push
xor
ret
ficoml
dec
lods
mov
or
lods
sub
jge
or
out
or
fs
test
movsb
icebp
mov
push
enter
fldl
movsb
mov
cld
dec
js
adcl
test
pop
add
imul
mov
lret
mov
outsb
cli
dec
xorl
fwait
mov
scas
in
lock
call
xchg
add
stos
push
pop
sub
loop
xchg
and
iret
jecxz
in
add
mov
dec
testl
into
and
adc
dec
or
testb
ljmp
jmp
inc
add
test
loop
movsb
adc
andl
xor
scas
dec
test
push
test
inc
push
rcrl
xchg
jecxz
cmp
jne
lret
test
fs
jns
adc
add
push
sub
test
pop
push
ja
add
add
sub
loopne
testb
xchg
nop
mov
jge
mov
pop
cltd
jne
push
insb
addl
cmp
scas
mov
or
ja
mov
mov
popf
push
mov
inc
sbb
lods
lods
mov
shrl
sub
sbb
pop
pushf
and
clc
sbb
pop
rolb
inc
inc
fstl
in
out
pop
adc
lret
inc
pop
inc
cmp
xor
aaa
xor
inc
jecxz
movsb
fdiv
add
and
cmp
aas
ja
ss
push
mov
ret
mov
xchg
sbb
jecxz
jge
or
push
stc
xchg
jge
add
mov
cmp
mov
call
adc
jg
lock
push
mov
mov
mov
cld
inc
aaa
jmp
pop
neg
dec
lock
or
movsl
mov
sbb
sarb
inc
fsubl
or
fwait
ret
insb
and
mov
ljmp
push
fldcw
fcmovb
push
popf
mov
fstpl
icebp
push
pop
jbe
nop
leave
andl
inc
lret
repnz
cld
in
push
mov
dec
in
cmp
push
xchg
stos
xor
jnp
dec
stc
inc
std
inc
jno
fisttpll
mov
test
enter
enter
inc
push
xchg
mov
cmp
pop
repz
out
push
fxtract
push
adc
pop
mov
push
add
je
outsl
fisttpll
jecxz
fimull
fimull
and
jne
sbb
and
imul
mov
call
clc
or
stos
divl
push
pop
fs
xlat
xor
adc
mov
add
imul
pop
fistl
mov
rcl
ss
bound
push
mov
or
push
shlb
inc
mov
aas
shll
xchg
btc
les
jb
negl
aad
imul
mov
xor
sub
lcall
pushf
ljmp
test
add
xchg
rol
add
inc
push
cmp
movl
push
mov
rolb
incl
jno
dec
mov
jo
repnz
push
ss
and
movsb
addr16
mov
icebp
fs
sbb
fucomi
dec
fisttpll
outsl
gs
push
shrb
divb
shll
js
push
pushf
bound
jne
add
ds
pop
mov
and
imul
mov
pop
xchg
xor
jb
mov
ret
out
xchg
fsub
clc
pop
xor
inc
test
add
dec
in
sbb
adc
push
cmp
and
xchg
stos
pop
in
add
pop
xchg
lcall
popa
loop
jle
pop
repnz
pop
cmpsb
push
inc
sbb
mov
or
pop
add
mov
aam
mov
xor
fstpl
sbb
xchg
pop
xchg
mov
xchg
cmp
out
test
xchg
sbb
movsb
jmp
int3
push
lret
dec
test
or
leave
repz
shrb
in
jecxz
sbb
xchg
shlb
inc
cmp
jns
inc
bound
arpl
bound
mov
out
pop
add
ljmp
in
repz
and
cmp
xchg
sbb
inc
pusha
push
mov
lods
or
jbe
mov
clc
xor
xlat
sub
fbld
cli
cltd
pop
mov
das
adc
pop
xor
mov
bound
imul
sbb
sub
lahf
mov
push
pushf
dec
clc
mov
mov
cmp
dec
in
jnp
jae
inc
or
clc
loop
adc
arpl
outsb
push
insb
sub
mov
imul
xchg
imul
sub
aas
lahf
ljmp
stc
mov
popa
shrb
inc
add
add
outsl
inc
cli
clc
adc
fwait
xchg
dec
cld
mov
sbb
xchg
and
stc
es
repnz
gs
outsb
nop
mov
das
dec
cmp
pop
dec
dec
arpl
jecxz
pop
pushf
push
cmp
add
pop
inc
mov
mov
cmpsb
ret
lds
stos
cmc
xchg
sahf
cmpsb
movsl
enter
xchg
decl
add
fistpll
pushl
mov
pop
sbb
sub
or
add
cmp
mov
sbb
ss
fmulp
lock
iret
mov
pop
jmp
adc
sbb
or
int3
xor
sub
ljmp
mov
fcomp
mov
adc
out
xor
inc
push
cmpsb
scas
sti
mov
sub
outsb
jno
push
pusha
mov
out
neg
xchg
jnp
aas
jg
scas
into
out
enter
adc
movsl
sub
mov
in
adc
incl
jmp
cld
insl
cmp
lods
add
push
mov
or
jl
xor
cmp
or
roll
cmp
lahf
and
sar
jle
mov
lea
jle
in
jns
inc
pop
jnp
test
dec
inc
cli
cltd
sbb
pop
pop
pop
jb
int3
xchg
or
sbb
lahf
jecxz
popa
dec
aad
cmp
es
mov
push
cmp
loop
mov
lcall
popf
jecxz
mov
int
push
in
fdivs
addr16
and
scas
xchg
push
cs
push
adc
outsb
call
mov
test
push
pop
jb,pt
aaa
dec
cwtl
in
das
add
cltd
xchg
leave
xor
out
push
push
negl
xor
fadd
mov
sbb
mov
xchg
xor
dec
sbbl
push
mov
fdivrl
mov
jo
or
out
push
inc
mov
mov
add
out
pop
mov
cmp
push
pop
cs
push
pop
mov
push
add
cmpb
pop
xchg
push
sahf
or
iret
pusha
clc
push
int3
xor
andb
jae,pn
mov
mov
dec
mov
add
sub
push
dec
xor
lahf
mov
loopne
adc
adc
cli
dec
pop
jl
adc
movsl
xchg
xor
dec
in
or
lods
jae
mov
ret
xlat
push
or
test
mov
cwtl
shll
pop
js
insl
add
push
ret
movsl
sbb
loopne
sub
xor
mov
push
loopne
jmp
mov
xor
test
std
xor
inc
mov
sub
push
add
imul
xor
inc
es
lds
aam
jb
adc
in
pop
outsb
push
inc
xor
adc
loopne
in
sub
scas
and
sti
xchg
bound
lret
add
dec
fisttpll
push
mov
push
movsl
insl
call
insl
cmpsb
lock
xor
daa
clc
push
cmpsl
mov
pop
push
pop
das
lea
pop
jecxz
lods
jmp
bnd
sbb
cmp
push
pop
mov
xor
cs
push
and
pop
jo
das
fcmove
in
clc
jge
mov
ss
pop
call
and
shlb
sarb
outsb
pop
outsb
fiaddl
addl
push
fcmovbe
mov
jbe
mov
jnp
add
jl
cmp
and
repnz
mov
loope
cmc
add
dec
imull
popa
out
fidivl
int
test
popf
aad
stc
out
sub
jmp
jmp
shlb
dec
and
incb
push
sar
clc
xchg
push
sbb
push
and
add
idiv
in
xor
jg
mov
mov
mov
pop
rcl
jmp
test
push
icebp
shl
pop
lea
call
push
repnz
mov
les
aaa
addb
ret
inc
lds
jle
popa
xlat
icebp
push
cmpxchg
xor
idiv
das
sbb
xchg
aas
imul
fiaddl
pop
or
in
add
rolb
and
mov
cmpsl
dec
pop
or
icebp
lret
test
mov
xadd
jmp
dec
add
or
dec
xor
mov
xor
cmc
add
popa
negb
add
popf
je
pushf
pop
test
es
push
iret
mov
xchg
adc
ret
pop
xchg
addb
mov
xor
pop
xchg
push
fidivrs
bndstx
pop
xchg
icebp
cmpsb
test
push
dec
jb
hlt
in
mov
sub
inc
or
mov
xchg
xor
sub
repz
mov
xchg
cwtl
fistpl
add
xor
nop
outsb
out
and
sub
inc
stc
adc
leave
xchg
lret
add
sub
jnp
test
dec
std
xorl
sti
inc
push
jns
insb
ds
pop
inc
push
push
hlt
testb
mov
xor
sbb
mov
mov
sbb
fmuls
es
sahf
mov
cli
xor
ret
nop
out
add
xchg
jb
aaa
xor
adc
push
mov
cwtl
fdivrl
imul
mov
mov
mov
int3
jge
xlat
mov
pop
mov
imul
xchg
test
cmp
test
mov
bound
loop
in
add
filds
out
jno
push
insl
sub
cmp
mov
mov
out
fs
loop
mov
sub
faddl
enter
leave
imul
sub
ret
mov
mov
mov
aas
pop
fsincos
sahf
sbb
and
int3
push
shll
jl
xor
ret
or
jmp
imull
pop
psubd
dec
je
sar
lods
fucomip
inc
mov
mov
push
push
pop
clc
and
or
sbb
jns
sub
cltd
push
mov
fbstp
gs
push
dec
shlb
addb
loope
and
xor
fsubrs
push
jo
aad
mov
jb
jecxz
jno
adc
jge
mov
inc
leave
pop
pop
mov
and
out
push
mov
or
xor
pop
jge
ljmp
inc
jae
mov
xchg
add
leave
addr16
and
or
repnz
sub
adc
xchg
adc
xchg
js
mov
pop
aaa
xlat
popl
insb
paddsb
sbb
dec
js
scas
stc
adcl
and
dec
cmp
and
stos
loope
jmp
or
jmp
daa
mov
xor
rorb
ljmp
cmp
cli
dec
pop
out
dec
and
sbb
and
test
sub
cmp
into
sub
jmp
fisubl
andb
sbb
hlt
xchg
add
or
leave
xchg
pop
xchg
sub
mov
xor
outsb
jp
dec
scas
into
mov
cmp
mov
jo
fs
xorb
cltd
imul
mov
test
adc
test
mov
mov
pop
mov
xor
sahf
pop
cmpsl
sbb
addr16
imul
cmpsb
es
stos
movsb
insl
das
out
fs
mov
or
jge
xchg
inc
mov
pusha
shlb
xor
cmpsb
fcmovbe
add
nop
jbe
ret
fwait
lret
out
and
mov
adc
fildll
jp
cltd
push
mov
fistpll
push
add
sbb
lahf
aaa
mov
test
test
inc
push
sti
add
mov
mov
mov
ss
sbb
sahf
in
dec
sbbl
sbb
pop
repz
lds
int
out
rcl
call
or
addr16
pushf
cmpsb
mov
mov
push
sbb
jns
mov
push
and
lds
test
loop
jns
lahf
cli
pop
pop
sarb
xchg
jo
xchg
ficoms
test
sbb
adc
ljmp
and
imul
mov
mov
xchg
mov
or
sub
and
shl
icebp
push
int3
xchg
pushf
fidivl
jl
adc
incl
jns
repnz
stos
xchg
imul
jo
add
sbb
mov
pop
cmp
addr16
cwtl
dec
or
aam
xchg
pop
inc
ss
inc
imul
into
jae
int
pop
int3
lods
sbb
sahf
mov
ss
add
mov
cmp
cmpsb
out
dec
lahf
aaa
shr
push
pop
sub
pop
cmp
shll
out
push
pop
shr
in
sub
push
ret
in
fdivrs
jecxz
ljmp
xchg
xchg
sarb
and
dec
xchg
inc
iret
lods
jecxz
push
fnstenv
and
clc
mov
stos
inc
dec
mov
ficoms
mov
mov
lods
jecxz
dec
ds
add
lods
sbb
adc
repnz
push
xor
cltd
es
pop
pop
int
jo
lcall
insb
pushf
mov
daa
repz
pop
movsl
jbe
movsl
test
loopne
add
jns
cmpl
lret
cld
jbe
lods
les
mov
xchg
in
das
xchg
pop
push
ficoms
daa
add
sub
cmp
push
inc
out
mov
cld
and
push
movsl
in
aaa
js
rcr
sbb
pop
clc
and
data16
aas
pop
notl
enter
pop
ljmp
mov
dec
push
ficoml
mov
dec
jmp
jne
push
in
push
popf
jl
in
and
add
lods
adc
mov
aas
shlb
std
mov
adc
and
popf
ret
or
push
pop
mov
adc
pop
out
loopne
or
and
mov
push
push
jnp
jo
lret
cmpsb
mov
fwait
sub
loope
mov
adc
push
pop
sahf
or
out
xchg
in
push
lea
xchg
lret
lahf
push
ds
out
or
inc
mov
add
ret
daa
jge
cmp
xor
push
dec
xchg
cmp
std
xchg
mov
insb
or
pop
cld
dec
mov
imul
add
jae
incl
inc
lods
sarl
xchg
pop
nop
imul
sub
repnz
xor
adc
shl
add
cwtl
jp
outsl
or
insl
push
lret
xchg
add
push
fildll
sbb
sbb
jl
add
aaa
pushf
movsl
pop
mov
outsl
cltd
cltd
jns
cmp
and
cmpsl
dec
push
push
pop
push
movsl
lcall
cmp
cmp
xchg
push
inc
lcall
push
pushl
das
insb
xor
pop
push
std
outsl
fwait
jle
dec
pusha
inc
sub
sub
jl
arpl
sub
mov
je
and
mov
jl
fistps
pop
sti
xor
and
loopne
push
jmp
mov
faddl
std
loope
push
push
pop
xor
sbb
daa
mov
dec
lods
inc
add
dec
xor
inc
cmp
add
arpl
ss
in
cld
outsl
xchg
stc
mov
adc
push
cmp
dec
sbb
pop
aaa
lret
es
inc
and
lds
push
fxtract
sbb
mov
outsb
outsb
fs
sbb
repz
cmp
icebp
and
sbb
aam
addr16
mov
sbb
lcall
sti
xchg
mov
dec
sub
and
clc
lahf
xchg
inc
sbb
jbe
dec
sbb
xor
xchg
lds
sbb
inc
aas
stos
mov
js
popa
mov
pop
mov
sbb
push
jl
sbb
mov
lea
push
icebp
and
sbb
xor
orl
mov
jp
jp
icebp
pusha
test
adcb
cmp
adc
in
int
mov
mov
add
sbb
mov
jecxz
push
push
imul
pushf
rol
test
lea
mov
or
ret
outsb
xchg
sub
scas
fwait
pop
stc
dec
cmc
push
pushf
arpl
mov
aaa
push
add
mov
adc
pop
push
arpl
sbb
lret
dec
repz
je
push
pop
xor
push
push
pop
pop
dec
popa
das
adc
bound
sub
scas
aam
or
lods
inc
mov
sub
jo
rorl
xor
inc
jbe
sub
dec
and
sub
inc
ficoms
out
monitor
cmpsl
sub
or
inc
pusha
aas
pop
fistl
sub
xchg
mov
or
mov
jnp
push
sar
sub
pop
pop
pop
jno
mov
jbe
mov
xchg
das
rclb
jecxz
sti
rorb
iret
xor
mov
push
loope
xchg
dec
push
loope
sbb
push
xchg
xchg
fs
jne
lcall
mov
pop
ds
cmp
adc
lcall
mov
or
jg
je
fcomi
lcall
dec
loop
cwtl
or
das
in
jb
popf
repnz
jmp
jnp
js
jbe
repnz
sub
sub
lock
test
movsb
xorl
add
popa
shl
or
cwtl
fsubrl
loopne
out
stc
leave
mov
add
jae
dec
loope
inc
ss
and
pop
jae
push
bound
jns
in
pop
xchg
mov
cmp
mov
out
in
divb
push
bound
scas
in
or
sub
arpl
fldl
cmp
out
inc
mov
ljmp
js
ficompl
into
jle
lahf
inc
pop
xchg
pop
xor
fimuls
insl
addr16
outsb
in
inc
mov
imul
imul
adc
jo
in
test
pop
xor
mov
jge
xchg
xchg
mov
xchg
es
jb
roll
add
cmpsl
fwait
div
pop
call
jle
fists
xchg
xchg
mov
orl
sub
pop
out
div
je
mov
leave
fwait
lret
add
ja
jo
fnsave
js
int3
int3
fstps
pop
and
dec
addr16
inc
jl
gs
adc
push
mov
jae
mov
jmp
sahf
pop
xchg
adc
enter
sbb
add
subb
push
add
ja
in
iret
mov
jae
mov
cwtl
int
pushl
data16
sti
fmul
repz
mov
lret
outsl
push
jg
mov
mov
push
cltd
jecxz
test
cwtl
mov
addl
ja
mov
cs
sub
jo
inc
clc
int3
out
js
lcall
pop
lds
cwtl
test
add
pop
and
push
inc
loop
jge
or
loopne
pop
mov
xchg
iret
leave
jl
push
jle
mov
enter
int
fwait
in
xor
sahf
neg
mov
mov
mov
mov
sbbb
or
nop
repnz
sbb
stos
push
ret
pop
in
mov
sub
into
inc
push
imul
es
cmp
sub
adc
and
or
jle
adc
lods
mov
outsl
mov
mov
rcl
sub
inc
cmp
movsb
stos
lcall
xor
and
lret
mov
rclb
mov
mov
dec
push
lret
adc
and
mov
imul
pop
outsl
enter
cltd
jne
fimuls
jno
ficoml
lods
stc
xor
jecxz
out
icebp
push
push
negl
clc
fwait
mov
push
testb
not
inc
sbb
jbe
inc
mulb
push
daa
shrb
push
popf
inc
cmpsl
and
mov
out
fnstenv
fs
shll
shrl
jecxz
fisubl
add
scas
inc
xor
decl
fildl
jb
sahf
cmpsb
and
xchg
cmp
mov
mov
jnp
pop
out
std
hlt
aad
imul
stos
xorb
stos
mov
ret
xor
lock
mov
out
xor
inc
lds
sbb
xchg
mov
fisubrs
notl
pop
sahf
or
inc
xor
ja
out
jp
mov
mov
and
adc
in
adc
mov
outsb
xor
hlt
push
add
out
inc
jmp
or
jge
jp
mov
pop
stc
xchg
add
fs
not
jl
jmp
hlt
dec
xchg
movsb
dec
add
cmp
dec
mov
push
sub
mov
outsb
or
dec
fs
js
sbb
xchg
inc
mov
test
inc
mov
stos
push
xlat
cmpsl
call
pop
cmp
imul
ja
subl
jl
test
out
mov
adc
pop
pop
jae
and
out
cmp
jne
push
fcompl
and
mov
pop
orl
or
add
divb
loop
mov
les
in
mov
mov
leave
mov
sbb
or
jg
cmp
js
testb
mov
mov
cmp
cmp
repz
push
aaa
inc
dec
dec
cmpsb
sarl
jne
pop
mulb
inc
push
adc
add
and
outsl
xchg
and
addr16
pop
mov
pop
fucomp
lods
cli
or
push
leave
sbb
mov
xchg
fildl
xchg
dec
jecxz
sbb
bound
xchg
jmp
mov
dec
fcos
lret
insl
dec
test
mov
clc
or
jo
pop
adc
fs
into
mov
out
mov
mov
gs
divl
adc
iret
sahf
test
mov
shl
sub
and
popf
cmp
inc
test
add
mov
and
jnp
mov
and
mov
mov
stos
lcall
xchg
and
movsl
dec
gs
mov
push
movsl
movsb
xchg
push
aaa
inc
int3
cltd
int3
lcall
ficoms
sub
push
jo
ljmp
cmp
push
rclb
sub
aam
andl
rolb
mov
xor
pop
pop
lock
iret
lcall
fldenv
sbb
fisubrs
dec
or
lret
in
dec
or
rolb
mov
movsl
out
xor
mov
in
cmp
adc
add
pusha
push
xor
fmul
jb
dec
add
add
pop
jae
xorb
sti
outsl
idivb
leave
jns
or
adc
flds
iret
jo
lahf
les
and
loope
insl
mov
sbb
mov
jecxz
sub
shl
sbb
xor
xor
xor
xorl
xchg
add
daa
in
outsb
and
mov
and
push
cmp
pop
iret
xchg
cmp
xchg
or
xchg
xchg
fidivrl
stos
lret
cmp
cmp
js
and
loopne
icebp
lods
mov
imul
pop
lret
adcb
ljmp
lods
test
dec
aaa
or
enter
inc
out
dec
fisubl
sbb
jge
out
in
dec
xchg
dec
mov
pop
add
hlt
add
clc
mov
addr16
pop
mov
fisubrs
and
jmp
sub
jb
xchg
push
js
fcmovnb
outsb
or
mov
dec
fildll
pop
push
add
in
cmp
enter
cmp
daa
and
inc
dec
sub
pop
fsts
cli
sub
pusha
jno
incb
jnp
and
mov
push
mov
leave
mov
scas
imul
stos
sbb
jg
cmc
mov
fwait
add
add
test
aaa
fmuls
push
adc
xor
sub
jbe
sbb
and
mov
int
cmc
sub
cmp
shlb
dec
or
js
jmp
aas
and
push
icebp
imul
mov
jne
sahf
imul
mov
cltd
loope
arpl
xchg
pop
daa
xchg
mov
cwtl
sahf
mov
jne
mov
sub
pop
lcall
dec
pop
cmp
js
mov
ret
and
jp
push
xchg
test
test
mov
mov
sub
mov
sahf
cmpsl
sbb
stos
bound
mov
cmp
jmp
sarl
cmc
fwait
xchg
lahf
mov
xchg
imul
sub
xchg
lret
arpl
or
ja
mov
xchg
mov
rol
in
push
stc
or
sub
sub
cli
inc
mov
sbb
and
inc
pushl
out
add
jae
enter
inc
loopne
in
dec
mov
call
adc
movsb
sbb
je
cmp
mov
cmp
aad
sub
lcall
fbld
pop
adc
or
cmp
ds
xor
sub
rclb
and
cmpsb
mov
push
scas
inc
les
ljmp
mov
dec
aad
or
jo
mov
fstps
mov
in
movsl
pushf
adc
iret
test
repnz
sbb
out
sub
mov
cmp
jb
jo
rcrl
test
mov
js
addb
jge
lods
rcll
sbb
sub
xchg
jae
mov
loopne
xchg
lcall
cmp
and
aad
and
mov
subl
loop
or
xchg
mov
cltd
inc
icebp
mov
scas
sbb
ds
jne
lock
fs
int
push
adc
xchg
rorl
sub
jo
or
xlat
stos
sbb
andb
mov
js
mov
lods
inc
incl
xor
pushl
xchg
xchg
je
lret
mov
xor
xchg
dec
jge
inc
and
jo
pushf
mov
cli
fidivrl
mov
jg
mov
dec
fucompp
cmc
or
sub
inc
dec
pop
push
stos
pop
adc
rorb
dec
fdivs
insl
jae
mov
cs
mov
push
stos
cmc
incb
and
lret
pop
mov
aad
insl
ljmp
fs
push
scas
test
out
out
ret
cwtl
lock
inc
out
xor
jbe
mov
mov
popa
jecxz
rorl
lods
push
xchg
cmpsb
inc
cmp
cltd
jle
outsb
clc
mov
popf
sub
rcll
jb
scas
movsl
lods
mov
jno
lahf
sbb
push
rcrl
cmpsb
add
scas
and
iret
xchg
mov
dec
jmp
loopne
cmp
lret
mov
iret
jae
cmp
dec
mov
adcb
divb
sahf
or
lret
add
fimull
popa
in
inc
xor
arpl
inc
je
lock
xchg
dec
pop
mov
jnp
and
cs
dec
pop
imul
add
fldenv
icebp
mov
insl
jne
mov
xorl
adc
add
mov
adc
xor
mov
test
aaa
fnstcw
jbe
push
xchg
mov
and
call
mov
cmc
hlt
sbb
insl
pop
test
adc
btcl
addb
push
stos
inc
pop
jge
adc
cmp
xlat
mov
rcrb
push
fistl
lahf
cs
imul
inc
cmp
xchg
pop
xchg
pop
hlt
sbb
cmp
xor
ds
shrl
mov
shrb
xor
jb
jnp
pusha
add
insl
ret
sbb
sbb
pushf
ljmp
scas
mov
mov
loop
and
cmp
andb
je
cmp
out
cltd
mov
inc
int
sti
and
xor
ljmp
cld
ja
cwtl
inc
js
andl
loopne
outsb
cli
mov
mov
xor
lea
and
xchg
std
mov
xchg
jb
mov
cltd
jns
fsubs
adc
paddusw
loop
sub
in
push
jmp
xchg
xor
push
jb
inc
cltd
xlat
mov
mov
lea
lods
xor
std
daa
bswap
push
mov
test
mov
cmp
sbb
cmp
mov
insl
jmp
mov
xor
dec
outsb
push
clc
lds
inc
mov
ss
sbb
xchg
lcall
sbb
leave
xor
loopne
and
pushf
push
fmull
sub
xchg
loop
cltd
icebp
fxtract
hlt
jmp
cs
ret
xor
inc
inc
jle
cwtl
xchg
pop
rcrl
xchg
leave
pop
loope
es
mov
sahf
dec
cmp
pop
repz
pop
sub
aas
cmp
push
mov
pop
xor
js
int
xor
inc
aas
leave
iret
fisttpl
or
pop
jnp
lea
jmp
orb
lcall
cmp
mov
in
adc
dec
aad
mov
fsubl
pop
cmp
adc
mov
jecxz
inc
enter
and
aas
mov
sub
out
and
rcrl
out
lock
inc
insb
faddl
repnz
inc
lret
mov
js
xchg
mov
mov
push
xchg
ds
jbe
inc
and
or
or
push
sub
xchg
cmp
cwtl
mov
mov
gs
loop
or
scas
xchg
scas
repz
out
push
cmc
lcall
lahf
ljmp
jp
cwtl
mov
add
mov
mov
add
inc
mov
mov
xchg
in
popf
dec
xchg
into
xor
iret
pop
cmp
test
push
outsb
stos
cmp
movsl
mov
lea
popf
loopne
or
dec
fldl
inc
aas
popa
jo
push
outsl
lret
imul
sahf
lret
fwait
movsl
pusha
xor
lahf
inc
ss
nop
pop
js
or
mov
push
pop
test
mull
cs
div
aam
iret
in
mov
sub
inc
int
push
mov
xchg
movsl
cmp
hlt
clc
cmp
in
icebp
mov
shl
xchg
and
nop
xchg
icebp
sub
or
adc
inc
pop
jl
addb
mov
out
mov
mov
push
je
into
ret
pushf
mov
jge
aas
or
sub
lds
push
dec
adc
movsb
dec
stos
xor
dec
je
and
pop
xor
cmp
aaa
add
ret
cs
adc
xchg
std
push
or
mov
jmp
mov
or
pop
dec
roll
pop
aam
fimull
aas
loopne
jno
pop
mov
xchg
ret
hlt
pop
xchg
xchg
xchg
xor
fs
xchg
or
cmc
and
bound
push
mov
test
lock
lret
add
dec
jnp
or
dec
lcall
or
push
data16
jbe
or
fistl
cmp
xchg
fs
ljmp
or
lock
fstpl
sbb
pop
push
push
add
insl
xlat
xchg
repnz
sti
inc
andl
xor
arpl
mov
mov
inc
xchg
fisttps
loope
mov
push
jle
jp
push
and
mov
xchg
xrelease
xchg
std
sub
push
in
mov
fisttpl
dec
push
or
add
fldcw
lahf
xor
push
jne
pop
in
jb
leave
add
scas
and
sbbl
cwtl
inc
add
xchg
enter
cmpsb
jno
icebp
je
or
subw
mov
andl
pop
jge
mov
pop
scas
lock
fdivp
mov
adc
sbb
insb
inc
add
mov
lock
and
lret
jae
mov
rclb
stos
rorb
lock
add
daa
sub
dec
fsubs
jmp
loope
jno
and
mov
mov
fstpl
sbbb
xor
mov
in
vmovss
movsb
xor
call
fisttpl
push
jnp
push
adc
adc
scas
lcall
repz
dec
jbe
cmp
nop
lret
outsb
adc
sub
cli
pop
mov
faddl
xor
call
push
enter
rorl
adc
cmp
gs
aam
jne
ss
idiv
sub
shlb
rcr
negb
dec
mov
add
dec
stos
pushf
xchg
aad
dec
shrb
dec
mov
xchg
mov
lcall
repnz
jge
inc
jns
ljmp
mov
push
sub
mov
push
jl
add
push
sub
sub
aas
xchg
leave
mov
fbld
or
xlat
repnz
mov
push
mov
add
xlat
movsl
add
push
mov
add
sub
lahf
pop
add
push
std
sahf
into
nop
sahf
mov
popf
mov
addb
xor
aam
mov
lds
push
xchg
xchg
clc
pop
jne
pop
call
add
cs
inc
dec
lcall
cs
loop
mov
push
fwait
xchg
and
cmc
fidivrl
les
repz
pop
inc
nop
pop
jb
clc
mov
aam
mov
inc
shll
push
loop
push
cmp
daa
cld
out
shll
jo
cmp
push
add
sub
jae
ss
jle,pn
incl
rclb
jns
movsl
out
rorl
and
subl
adc
sarb
inc
pop
popf
sbb
insb
adc
xor
sbb
repz
lock
js
pop
inc
sbb
mov
pop
sbb
loop
das
cmp
add
or
add
adc
lods
dec
repnz
sbb
das
mov
sbb
and
out
adc
add
or
rcrb
jecxz
ljmp
ljmp
sbb
rorb
pushf
repnz
divl
leave
fcoms
jecxz
inc
adc
sub
jl
into
test
lahf
hlt
xor
xorl
jge
fdivrs
dec
paddusw
cwtl
mov
daa
loopne
mov
sbb
push
lods
mov
pop
mov
test
in
mov
mov
mov
pop
push
psraw
cli
xchg
jb
xchg
pop
dec
lret
outsl
mov
sarl
pop
test
xor
pop
adc
ud2
outsb
sbb
jmp
les
sub
loope
jne
xchg
inc
sbb
mov
mov
rorb
je
inc
jae
ror
xor
jnp
inc
sbb
xor
in
push
xor
xor
fs
int
xor
inc
bnd
fsubl
xchg
dec
push
inc
pushf
icebp
arpl
xor
add
cld
shr
mov
dec
cmc
jns,pt
aas
or
rcrl
sahf
push
call
mov
or
loope
stos
jae
outsb
cmp
in
out
test
mov
or
sahf
cmp
push
jo
pop
mov
inc
and
pop
rcr
icebp
jnp
stos
les
push
jno
sar
sahf
or
jo
jmp
cmp
iret
pop
sbb
test
cvtps2pi
adc
sub
insl
pop
and
dec
push
push
ret
repnz
outsl
pop
xchg
mov
lods
mov
daa
xor
sub
insl
mov
mov
fdivl
fs
xor
inc
xchg
loop
insb
repz
movsb
sbb
or
sbb
test
fstp
and
or
mov
in
pop
inc
xchg
mov
test
jne
int
jb
or
rol
mov
filds
xor
push
fwait
add
ds
add
leave
dec
ja
sub
pop
inc
scas
fcompl
pop
inc
add
mov
vorps
into
dec
cli
mov
mov
stc
pop
rorb
rorb
jo
aaa
mov
push
scas
pop
dec
shlb
int
jno
mov
ficoms
fwait
inc
sbbb
mov
sbb
dec
adc
mov
xor
xorb
mov
jnp
jae
jb
inc
cmpsb
or
lock
or
repz
push
pusha
xchg
dec
sub
jb
popf
cli
sbb
cmp
adc
and
rcrl
fstpl
ret
jae
adc
stos
sbbb
adcl
gs
mov
sahf
aaa
push
add
insl
xor
and
scas
rol
jnp
in
or
xchg
insl
cmc
xor
add
cmp
fxch
inc
jae
les
inc
fcoms
push
orl
cmc
push
into
loope
pushf
or
in
leave
mov
push
adc
push
jmp
add
sarb
out
mov
or
inc
xlat
push
mov
hlt
faddp
xchg
dec
or
movsl
in
pop
jo
mov
andl
sahf
jp
pop
mov
adc
int3
sub
mov
test
adc
sbbl
arpl
sbb
test
adc
push
cltd
sub
adc
pop
pop
dec
add
sahf
cltd
leave
xchg
xor
xchg
sbb
in
mov
sbb
movsb
or
in
lcall
les
mov
or
rcll
int
mov
movl
aad
dec
push
insb
das
and
cltd
ds
cmp
int
sub
inc
sub
mov
repz
jb
gs
ret
imul
lods
rcrl
cmpsl
dec
add
lods
sub
adc
imul
push
test
push
imul
mov
add
test
pop
push
xlat
dec
mov
xor
sub
cmp
cmc
or
jae
push
jge
les
frstor
push
icebp
mov
daa
ror
mov
inc
jb
jecxz
xchg
nop
lret
push
push
stos
or
sbbb
mov
push
push
lock
aaa
cs
repnz
inc
movntps
mov
data16
or
xor
xchg
movsb
orl
jne
mov
add
mov
add
and
jbe
mov
insl
aad
pop
lea
sbb
addr16
icebp
sbb
lds
add
aas
jo
xlat
stc
gs
inc
in
les
cmp
jg
mov
ret
jns
sub
cwtl
inc
stos
ret
mov
sahf
and
addr16
jns
movsb
cmp
stc
pop
ljmp
insl
les
js
mov
mov
jg
loopne
int
add
mov
jbe
jmp
loop
xor
pop
adcl
adc
push
js
jno
clc
mov
imul
fsubrs
int3
addb
jmp
pop
test
mov
jns
cmp
inc
mov
mov
sbb
and
mov
xor
shrl
loope
jne
or
dec
push
jns
xor
push
popa
xchg
push
aad
stc
pop
test
mov
out
and
push
pop
sub
add
imul
fimuls
cmp
mov
sbb
xlat
ds
push
push
inc
xchg
popa
pop
lea
sbb
xchg
push
mov
sub
sub
and
xor
cmp
mov
and
push
xchg
adc
in
xchg
xchg
les
push
pop
sbb
cmp
lea
fistps
ret
pop
test
inc
push
xor
in
and
dec
les
pop
jl
xchg
flds
sbb
sub
adc
fcoml
lret
xor
and
fnsave
dec
adc
xor
sarb
cld
fsubl
cmpsl
pop
inc
jb
ljmp
add
sbb
jae
in
mov
hlt
mov
movsl
ja
mov
hlt
push
sub
fwait
cmpsl
mov
aas
fldl
inc
cmp
ja
adc
rorb
pop
pop
add
push
loopne
mov
das
push
mov
xchg
dec
adc
or
fwait
push
shlb
mov
mov
jo
daa
xor
enter
js
arpl
ljmp
jmp
sbb
xchg
jo
adc
xchg
mov
jb
sub
test
dec
jns
out
out
inc
push
xor
aam
mov
fiaddl
sbb
in
es
loopne
cmp
cmc
imul
cli
lahf
xchg
dec
sti
mov
in
addr16
xchg
lret
jg
sub
jmp
push
movsb
sbb
push
xchg
cmp
mov
xchg
mov
movsl
popl
jle
xor
cmp
cmpsb
lock
iret
pop
jb
fyl2x
loope
xchg
mov
add
mov
aaa
sub
rcrl
stos
fistl
cmp
scas
push
cmc
or
add
das
mov
pop
lods
xchg
cmp
fwait
inc
int3
lods
inc
subl
xchg
aaa
xchg
nop
fcmove
sti
xchg
xchg
mov
add
je
and
ror
add
add
and
int3
cmp
mov
jnp
xchg
dec
sub
mov
cmpb
push
or
dec
scas
das
jns
fidivs
pop
xchg
bound
lds
sub
stos
sub
ss
xchg
cli
xchg
add
fcoml
xchg
sbb
stos
int
mov
lods
icebp
data16
lret
insb
adc
int
or
test
cli
repz
gs
cmpsb
push
ljmp
xor
cmp
inc
lods
sub
sub
or
cmpsl
mov
aad
outsl
cmp
push
cmp
and
cmp
icebp
testl
xor
inc
pop
push
sahf
popa
fcomps
push
gs
leave
inc
enter
jne
jle
cmp
mov
xchg
ret
subb
fsubs
add
or
jle
lahf
fisubrl
sub
repnz
lea
push
test
cmpsl
neg
fadds
out
test
or
jns
add
roll
fnsave
mov
arpl
cmp
je
idivl
lcall
mov
enter
add
enter
dec
and
mov
aas
dec
jae
xchg
xlat
pop
in
mov
stos
inc
inc
pop
xor
popa
pushf
sub
cmpsb
aad
out
stos
add
iret
dec
mov
sbb
int3
lea
popa
jns
scas
daa
loope
imul
js
cmp
push
lahf
sbb
xor
rclb
mov
pop
dec
adc
or
aas
push
sbb
push
pop
loopne
lret
mov
outsb
rorb
lahf
cmp
stc
pop
mov
add
cmpsb
add
faddp
in
push
ss
add
mull
cld
js
and
xchg
sub
cmp
sbb
in
cmp
push
shll
xchg
jno
push
xchg
nop
loopne
popf
lods
mov
mov
pusha
outsl
cmp
dec
out
loopne
cli
adc
push
pop
and
mov
push
out
out
aas
ljmp
or
ja
inc
push
or
pop
cmpsl
mov
sub
enter
movsb
mov
into
daa
ret
fisubl
aaa
call
mov
mov
sbb
inc
stos
pop
rcl
mov
push
lret
sarb
call
xor
arpl
sbbb
and
pop
adc
jecxz
push
mov
ds
pusha
mov
cmp
fcmovne
mov
sti
orl
nop
stos
sti
dec
cs
adcb
push
and
imul
jne
stc
xchg
add
jp
push
aad
rdpmc
in
stos
jno
ret
loop
jle
enter
out
cmp
push
push
inc
mov
fiadds
xor
lret
shl
push
xor
dec
icebp
inc
add
or
xchg
adc
push
inc
pop
das
out
movsl
push
dec
leave
test
mov
pop
adc
es
mov
test
leave
imulb
aad
xor
or
dec
sbb
adc
cmp
jb
sub
aaa
mov
lcall
jl
fsts
ret
lea
and
inc
test
mov
fsubr
jno
into
cwtl
sbb
shll
add
int3
sub
and
jle
lea
xchg
cmp
or
xchg
icebp
and
pop
das
test
lea
in
rcll
mov
mov
sbb
fisubl
adc
idiv
mov
inc
iret
push
cmpsl
movsl
or
mov
mov
cmp
iret
lods
ror
pop
inc
insl
fwait
std
maxps
xchg
push
sbb
push
call
sub
and
arpl
sub
adc
mov
pop
popa
adc
jl
cs
test
gs
sbb
mov
push
dec
gs
fcomps
in
fstps
inc
loopne
ss
popa
push
scas
lahf
es
jno
movsl
lret
cld
daa
das
outsl
repnz
mov
iret
pop
push
daa
outsb
fs
cmp
mulb
jmp
fxch
mov
test
jmp
or
vpmaxub
mov
jns
mov
pop
cmp
xchg
xchg
push
cwtl
addr16
fstpl
in
adc
test
push
push
fwait
adc
addb
repnz
pop
pop
add
pop
mov
add
lret
cmp
out
xor
daa
lahf
jae
mov
or
push
int3
cmp
stc
jl
sub
mov
and
adc
mov
je
imul
push
cld
bound
or
ja
or
and
push
xor
es
aaa
gs
add
dec
jns
jg
sbb
flds
sti
and
out
adcb
xor
test
mov
and
add
cmp
mov
sbbb
nop
lret
inc
sub
je
int
add
pop
add
jmp
xor
mov
inc
fwait
sbb
and
out
clc
repz
sbb
mov
cmp
and
mov
sbb
push
jmp
sub
cmp
jno
out
dec
ds
sbbb
sbb
je
pop
fnsave
and
aas
inc
test
mov
int3
jmp
mov
arpl
fiaddl
inc
repnz
adc
cmp
andl
mov
mov
lcall
lret
addr16
jl
aam
adc
stos
push
mov
or
outsl
lret
test
lods
clc
ss
lahf
mov
aad
lods
xchg
sub
mov
ss
pop
mov
sarb
jmp
jmp
push
cld
push
add
xchg
sub
loop
xor
sub
or
mov
sbbb
adc
jg
inc
jne
test
add
out
mov
pop
stos
sub
xor
pop
push
lahf
scas
push
and
cltd
fsubl
or
pop
jl
push
cs
xor
test
and
sbbb
xchg
push
xorb
stos
mov
add
add
jo
lea
imul
sti
pop
sub
aam
push
mov
pop
and
sar
sbb
pop
push
xchg
jne
inc
dec
mov
and
push
mov
jo
mov
push
pop
out
in
xchg
fwait
mov
fbstp
dec
shrl
xchg
test
inc
fildl
loopne
mov
daa
lcall
sub
pop
dec
or
and
jo
push
aas
bound
bound
loop
jmp
sbb
pop
cmp
inc
mov
dec
or
dec
mov
xchg
cmpl
daa
call
rcl
mull
out
test
cli
lods
jo
mov
mov
sub
and
fldcw
lock
mov
dec
not
loop
mov
jns
inc
negl
movsl
pop
pop
mov
cmp
mov
imul
lea
xchg
mov
insb
mov
testl
push
lods
enter
inc
xor
daa
clc
cmc
dec
add
push
add
pop
shr
fldenv
xor
inc
jne
mov
mov
mov
in
mov
mov
daa
mov
jp
mov
adc
dec
mov
xchg
out
xchg
sbb
mov
push
lds
or
fnstcw
fs
push
push
es
cld
ja
mov
jo
mov
cmp
xchg
ret
sbb
dec
and
pop
addr16
imul
push
pop
push
int
jo
xchg
pop
inc
subb
sbb
imul
inc
inc
push
dec
cmpsl
adc
sub
xlat
mov
xchg
jns
std
aad
mov
xchg
push
cmc
aam
adc
add
sub
jecxz
repnz
cmp
mov
or
int
pop
rcll
movsb
or
sub
cltd
scas
stos
xor
and
sbb
out
pushf
call
pop
mov
jnp
push
jp
es
stos
sub
xchg
jo
add
push
push
mov
xchg
and
xor
add
rcl
mov
mov
adc
add
xor
test
or
mov
inc
inc
jnp
xchg
sub
push
and
push
cmp
push
inc
sub
adc
xor
pop
jno
not
into
lock
stos
sub
movsl
stos
mov
js
lcall
jle
cmp
icebp
fstpt
lret
les
iret
clc
popa
inc
dec
cmp
and
sbbb
pop
add
imulb
imul
pop
push
cmp
loop
lds
in
inc
mov
rclb
popl
xchg
pushf
inc
adc
out
mov
enter
or
call
sar
jecxz
or
pop
mov
outsl
jo
mov
daa
lahf
shlb
aaa
and
sub
inc
pop
sbb
pop
mov
jnp
pop
sub
ss
sahf
jnp
stos
pop
push
sub
mov
popf
in
rcrb
jge
mov
or
fildll
or
inc
into
push
insl
adc
decl
fdivrl
jns
insl
movsb
ds
das
sti
leave
add
or
ret
mov
sub
dec
xchg
adc
icebp
es
fcmovnb
add
cmp
int
mov
stc
and
negl
xchg
gs
lret
or
aaa
jge
adc
rorl
push
jb
fisttpll
inc
ficoms
fsubl
mov
mov
inc
push
adc
ljmp
fmuls
mov
mov
loope
push
xor
inc
in
sub
pop
shr
shrb
mov
inc
adc
sbb
js
cld
jle
loope
pop
fiadds
aaa
into
inc
push
xchg
sub
loop
cmpsl
jecxz
in
pushf
mov
xorb
loopne
or
fldl
out
into
rclb
imull
xchg
pushf
mov
sub
aaa
pop
inc
xchg
or
inc
pop
imul
and
mov
rorb
decl
in
aad
lret
jo
leave
mov
rclb
sub
imul
pop
mov
in
inc
push
xor
inc
xchg
dec
inc
pop
mov
mov
shl
xchg
push
aas
and
dec
stc
rcll
in
cmp
test
cmp
mov
and
xchg
dec
dec
push
stos
jae
out
hlt
pusha
inc
sub
enter
and
jns
ds
push
or
cmp
and
mov
outsl
dec
mov
decl
adc
push
or
shrl
aam
sub
fwait
xchg
add
popa
mov
inc
jbe
jl
dec
adc
repnz
int3
imul
mov
cmpsl
mov
idivb
out
xchg
sub
or
insl
push
cmpsb
mov
cltd
adc
stos
and
add
mov
mov
push
fcmovb
test
jno
or
addr16
psadbw
sbb
pop
xchg
cmpsb
mov
aas
je
fdivs
ds
bsr
dec
push
test
xlat
setno
jmp
push
mov
sarl
jle
push
loop
ja
xchg
or
sbb
into
and
sub
call
pop
adc
mov
dec
and
aaa
jg
gs
xor
fdivp
add
mov
rcrl
movsl
xor
ja
push
call
inc
jne
dec
and
insb
aad
mov
dec
testb
iret
sbbb
dec
mov
cmpsb
push
les
imul
mov
xor
mov
push
mov
cmpb
push
push
sub
push
shlb
in
or
enter
mov
ljmp
pop
jo
adc
xchg
mov
sbb
jecxz
fs
jae
dec
push
call
rorl
dec
movsb
aaa
cs
inc
bnd
ljmp
jecxz
xchg
jmp
mov
fdiv
scas
push
dec
cmp
push
mov
shlb
mov
shrl
or
pop
outsl
or
xchg
arpl
scas
sarb
fldl
insl
xchg
ljmp
mov
lea
test
inc
or
push
pop
lret
xchg
enter
insl
outsl
or
xchg
scas
out
mov
push
push
or
and
mov
rcl
sub
mov
lcall
je
cmp
fdivrl
nop
pop
jecxz
jl
sahf
cmp
adc
dec
jg
addr16
shll
andl
pushf
outsl
jnp
mov
mull
push
dec
loop
popa
mov
out
jne
lret
cmpb
mov
out
cmp
out
insb
loope
push
xor
or
xor
js
daa
inc
cmc
lahf
hlt
ss
ret
lods
add
inc
push
or
and
and
fwait
orb
pushf
cli
mov
ss
xchg
insb
rclb
inc
ds
call
aad
add
je
xor
gs
sub
mov
dec
js
hlt
push
push
sub
fs
shlb
mov
in
sahf
jnp
loopne
call
mov
adc
xor
mov
pop
loope
insb
and
shlb
xor
js
cmp
sub
inc
ds
jae
mov
imull
rcrb
imul
sub
add
push
adc
dec
sbb
ret
dec
push
and
xchg
push
rorb
xchg
lea
stos
cltd
outsb
or
in
and
cmpsl
insl
pop
test
sar
cmpb
push
push
out
and
les
pop
or
adc
jne
xchg
movsl
mov
pop
lds
cmp
xchg
cld
in
and
push
and
in
sbb
mov
sbb
lods
loop
scas
mov
mov
or
pop
arpl
sub
es
in
aam
lret
stos
dec
dec
xchg
sub
ja
push
mov
stc
xchg
xchg
adc
in
cli
xchg
xor
outsb
sahf
daa
jl
jmp
outsb
adc
pushf
pop
jno
int
sbb
imul
mov
xor
hlt
inc
pop
insl
xchg
jp
loope
add
repnz
dec
scas
fdivs
das
xor
inc
fcmovnbe
mov
inc
aas
fidivl
je
xor
mov
shrb
test
jbe
movsl
jnp
jb
adc
fcmovu
mov
out
push
sub
mov
jle
cmpsl
int3
xchg
ucomiss
lods
rclb
lret
cmp
lds
pmaxub
jmp
test
fstpt
sub
jo
sahf
sub
xor
pop
xchg
mov
mov
mov
testb
xlat
xchg
adc
rcrb
lcall
xchg
xchg
repz
icebp
sbb
mov
loope
inc
lea
sub
rcl
push
mov
test
int3
data16
ds
mov
cmpb
push
xor
pushf
enter
add
out
nop
add
pop
or
loope
jg
mov
in
jae
lock
cmp
mov
sub
cmp
fcomip
popf
shrl
decb
fistps
dec
mov
scas
pop
sub
cmp
in
dec
je
or
and
mov
adc
aaa
pop
sbb
cmp
mov
movb
out
mov
jne
jmp
insl
and
pop
push
mov
ja
pop
ljmp
test
sbb
fcmovnu
divps
adc
sarb
enter
xchg
ja
fucom
shr
or
out
cltd
jns
movsl
jge
pop
sub
lret
ds
movsb
xchg
rcll
mov
adc
jecxz
and
and
cmp
je
or
push
stos
sbb
mov
mov
cmp
scas
xchg
test
jmp
jnp
cmp
repnz
jbe
pop
or
mov
sbb
sti
adc
jns
in
sbb
repnz
push
ds
dec
mov
push
adc
inc
mov
ja
xor
scas
fildll
adc
add
xchg
sti
xor
mov
aaa
push
pusha
cmp
xchg
xrelease
add
xchg
cmp
dec
je
xor
or
sub
mov
ds
adcl
lret
or
ret
adc
inc
lret
xor
dec
cmc
mov
fs
rcrb
jp
pop
push
sbb
mov
movsb
cltd
test
or
jbe
lret
je
insb
xchg
pop
outsb
std
out
imul
sub
mov
lock
cld
fdivl
and
insb
call
test
cmpsl
sbb
lods
dec
mov
call
gs
sub
mov
out
xlat
not
hlt
cmp
in
push
in
vpmullw
and
imul
push
dec
scas
inc
pop
enter
jl
ror
pop
daa
pop
sbb
jo
mov
pusha
loop
cmp
xchg
test
repz
mov
in
stos
xor
ret
mov
push
cmc
nop
jp
insl
jbe
mov
cwtl
insb
xchg
pop
push
push
pusha
aas
mov
pop
mov
stos
sbb
pushf
sbb
or
clc
outsl
mov
cmp
fcomps
in
push
and
dec
into
lock
inc
movsb
frstpm(287
mov
add
pop
cmpsb
adc
clc
outsb
scas
test
repnz
clc
xor
inc
add
and
daa
dec
sbb
adc
lods
add
xchg
int3
nop
inc
or
push
ja
cmp
loope
adc
in
cld
lods
and
inc
or
repz
in
xchg
jbe
push
xchg
mov
dec
shll
cmp
jp
mov
jmp
xor
icebp
outsl
mov
cmp
clc
mov
aas
cmpsb
std
scas
mov
sub
out
rclb
cmpsb
xchg
and
mov
fadds
xor
dec
sbb
repnz
push
add
sbbl
mov
dec
xorb
cmp
repz
pop
adc
cltd
pop
pop
mov
dec
in
push
jmp
fsubr
xchg
leave
mov
add
add
pushf
push
test
sub
adc
and
int3
xchg
es
neg
sbbl
xchg
and
sub
popa
add
icebp
inc
aam
sbb
fimull
adc
popa
inc
mov
cld
lcall
jb
push
lods
out
ds
inc
sbb
adc
mov
and
mov
std
setno
adc
lock
and
cmpsb
push
jg
ljmp
cmp
int3
jnp
jmp
rolb
das
faddp
les
insl
add
add
outsl
sti
mov
push
sub
push
sarl
mov
or
jb
pop
dec
mov
popf
jbe
push
loope
andl
pop
pop
or
cwtl
lea
pusha
in
pop
mov
divb
pusha
mov
mov
divb
inc
mov
xor
xor
inc
gs
loope
pop
pushf
push
inc
mov
rcll
sub
dec
scas
int
dec
dec
es
cmpsl
jle
repz
test
icebp
faddl
insb
xor
popa
outsb
sbb
pop
push
and
sub
mov
mov
add
or
lret
and
pop
in
popf
scas
subl
jmp
xor
lret
mov
sbb
sub
mov
mov
notl
fiaddl
int
xor
hlt
ja
clc
push
push
into
pushf
cwtl
dec
mov
jge
lods
mov
fbld
dec
dec
movsl
ljmp
and
jne
imul
xchg
leave
scas
fstpt
dec
and
cltd
jbe
js
scas
inc
dec
dec
dec
call
sbb
cmp
xor
sahf
jno
jl
pop
sbb
pop
dec
out
xor
mov
xor
mov
xor
outsb
pop
pushf
iret
mov
sub
outsb
xor
inc
mov
jle
jecxz
call
fisubrl
pop
xor
clc
lods
cmp
add
or
leave
jns
loope
icebp
fwait
out
xlat
sub
cmp
or
mov
adc
xchg
dec
out
das
ret
adc
xlat
xchg
test
sbb
jmp
fidivs
jno
mov
and
mov
adc
test
ss
sub
leave
inc
bound
cli
dec
xchg
mov
push
or
or
hlt
insb
fs
or
jp
imul
sbb
shll
and
fnsave
dec
div
inc
push
pop
pop
mov
shrb
test
scas
push
mov
sbb
mov
add
aad
in
inc
sub
cmp
dec
seto
dec
mov
cmp
pushf
lds
xlat
in
daa
dec
sbb
sti
inc
jg
into
fistl
add
jno
inc
stos
adc
popf
cmp
sub
xchg
lods
enter
lret
sub
sub
and
pop
sbb
loopne
mov
js
mov
icebp
mov
sti
mov
inc
clc
push
cmp
jp
cltd
movntq
and
int3
lret
mov
aam
addl
jmp
sub
int3
jl
cmpsb
dec
ljmp
adc
aas
test
push
xorb
es
pop
mov
sbb
shll
in
imul
mov
sub
mov
mov
imul
iret
cmp
lret
add
jnp
jp
aas
xrelease
repz
xchg
cmp
pop
mov
or
sbb
jbe
mov
jnp
push
call
ds
xor
cmp
sbb
push
cmp
popa
pop
addr16
cmp
in
sub
std
xchg
data16
pop
fwait
stos
fmull
jnp
jecxz
lret
add
mov
sbb
dec
das
ror
adc
aad
jno
sub
fidivrl
xchg
cmovns
nop
lahf
dec
pop
imul
fucom
mov
mov
mov
ljmp
lock
fldcw
jno
or
add
cmp
ss
movsb
sub
inc
pusha
add
cwtl
dec
addr16
dec
les
faddl
lahf
out
mov
test
sbb
or
xor
addr16
or
jbe
mov
pop
push
dec
out
lock
xor
lds
nop
cmp
sahf
and
call
cmp
dec
add
ljmp
xchg
xor
inc
pop
lret
out
sbb
mov
add
sub
xchg
cmp
loopne
dec
cmc
insl
sahf
mov
mov
add
outsl
jp
and
mov
mov
inc
cmp
xchg
mulb
sub
jnp
xchg
mov
cwtl
add
mov
fwait
adc
mov
test
aas
fmuls
sbb
cmp
adc
enter
push
rcrb
addps
mov
dec
sbb
xchg
stos
pop
popa
ja
mov
push
and
push
std
imul
sarb
in
xchg
xchg
mov
into
out
lods
stos
ret
pop
out
mov
mov
shlb
loop
inc
mov
stos
clc
pop
loope
jp
add
adc
lret
into
js,pn
loopne
loope
sahf
pop
adc
mov
and
adc
cwtl
cli
in
cmp
push
aam
push
pop
mov
cmp
mov
or
ds
jl
loop
sbb
cmp
imul
in
bound
fs
push
dec
push
je
orb
and
pop
stos
andb
insl
out
scas
push
add
xor
lea
xor
repz
popa
and
ljmp
ficomps
sarl
lret
aam
push
daa
and
pop
incb
mov
sub
sbb
int
add
enter
cmp
ja
mov
lods
shll
fdivr
outsl
pop
sub
adc
imul
jb
rorl
andb
and
pop
jp
sub
jle
or
mov
std
sub
fs
leave
mov
xor
pop
das
stc
sub
sub
rclb
aaa
xchg
fnsave
xor
js
pop
stos
mov
or
jne
out
jne
aad
inc
xlat
mov
push
add
inc
cmpsl
cmpl
lret
movsl
push
int
cld
lcall
cmpsb
fwait
cld
and
cwtl
adc
sbb
int3
mov
mov
mov
loope
jbe
add
sbb
sub
xor
insb
orb
ret
andl
movsl
cmp
pusha
ret
push
push
filds
jns
mov
es
adc
sahf
jnp
mov
mov
mov
or
loopne
addb
jp
and
and
aam
or
pop
leave
or
jge
filds
push
or
push
js
int3
or
aad
add
sbb
ss
cs
cmp
or
das
out
ror
xor
sub
xchg
gs
mov
sub
cltd
cmp
jecxz
sub
jmp
inc
sbb
ljmp
or
pop
adc
inc
int3
sbb
scas
or
movsb
aam
mov
and
mov
pop
insl
xchg
add
inc
xchg
jmp
stc
incl
add
inc
je
push
jb
xchg
mov
jge
push
mov
test
sub
add
int
mov
adc
incb
add
sbb
sub
push
loop
sbb
mov
jl
pop
insl
ret
mov
lods
adc
or
add
and
pop
cmp
stos
stos
and
lods
xchg
add
mov
cmp
push
out
aam
stos
scas
dec
sub
push
int3
fiaddl
mov
or
hlt
es
xchg
jae
jecxz
icebp
mov
cmp
addr16
sbb
fldt
sub
jp
call
fnstcw
cli
mov
rcl
movsb
xor
mov
nop
sbb
scas
in
loope
or
std
imul
or
add
inc
inc
imul
arpl
inc
and
add
or
mov
mov
pop
ror
mov
dec
sarl
jg
mov
lret
leave
ret
ds
pop
push
fisttps
or
leave
xchg
out
ror
mov
in
add
mov
mov
movsl
or
lods
lds
cmc
lret
hlt
repnz
test
mov
pop
jl
mov
fs
icebp
inc
xor
fisttpl
jns
mov
jb
dec
outsb
in
dec
sarb
adc
inc
cmpsb
inc
and
adc
jp
fstpl
mov
mov
inc
fsts
je
mov
mov
loop
or
fildl
rcrl
data16
and
or
xchg
add
adc
jecxz
cmp
mul
fisubrl
jge
adc
lahf
mov
int3
fwait
xchg
or
adc
xor
dec
hlt
lcall
cs
add
aad
repz
sub
cltd
outsb
adc
data16
out
data16
mov
cmpb
mov
or
mov
ljmp
dec
sub
call
dec
and
mov
scas
or
xor
popf
das
repnz
xchg
mov
cs
dec
lcall
mov
mov
and
ds
xchg
xor
cld
sub
call
xor
add
sahf
xor
xchg
and
nop
popa
or
ret
and
pop
out
and
mov
inc
int3
sub
xor
sbb
out
cmp
ds
sub
jno
mov
nop
loop
jge
inc
test
dec
es
popf
dec
pop
sbb
pop
fisttpll
icebp
inc
jbe
test
lods
lock
aam
jnp
pop
lds
in
fcoml
rcrl
or
adc
fwait
sbbb
push
pop
lock
mov
and
xchg
leave
lods
sub
cmp
nop
mov
decl
adc
das
mov
mov
pop
or
sbb
xchg
int
or
bound
mov
call
xchg
xor
add
mov
sti
fidivl
minps
daa
insl
in
push
call
jno
mov
jb
pop
jge
jno
lock
sub
push
xchg
loope
shrb
adcl
cltd
adcl
sub
mov
fistpll
insl
in
inc
pop
mov
mov
cld
push
mov
pushf
sbb
daa
cmp
jmp
sub
xchg
test
sub
adc
je
test
pop
sub
cs
outsb
jnp
dec
dec
cmovno
sub
sbbl
std
sahf
fwait
cmp
sub
jge
jg
rorl
adcb
jecxz
inc
orl
inc
add
sub
push
jne
inc
clc
mov
mov
imul
fnstsw
pop
mov
push
sbb
lahf
sub
insb
js
addr16
jo
icebp
loope
mov
ljmp
test
sbb
adc
je
cmp
sbb
shrl
test
cmp
xchg
adc
sahf
sbb
cmpsb
jmp
aaa
mov
fimuls
in
push
xchg
cltd
or
lahf
rorb
push
push
adc
cmp
scas
cmp
daa
mov
addb
mov
in
xchg
sub
orb
pop
mov
fs
stos
xor
adc
sub
sub
jle
out
xor
mov
and
pop
cmc
add
out
inc
hlt
or
add
push
loope
mov
xor
add
add
lea
enter
sbb
add
sub
and
xor
xchg
fwait
shlb
xor
sarl
lcall
aaa
xchg
repnz
gs
mov
jecxz
dec
in
xchg
xchg
sub
nop
mov
cltd
iret
xlat
icebp
mov
shlb
xorl
outsl
cmp
dec
mov
dec
fwait
test
cs
mov
int
in
cmp
imul
fdivl
ljmp
mov
xchg
adc
add
dec
data16
push
mov
adcb
jmp
xlat
xor
lcall
pop
bnd
imul
pop
imul
inc
xlat
push
sahf
js
je
leave
cmpsl
dec
loope
lret
out
or
pop
fwait
sub
xchg
mov
inc
lods
cmp
push
push
aas
sub
push
loope
add
and
test
shll
xchg
fmulp
mov
iret
sub
pop
test
pop
sbb
push
and
fsubrl
and
aas
push
out
sbb
test
js
adc
ret
dec
sbb
jnp
jmp
out
jns
pop
jmp
dec
out
xchg
icebp
jmp
mov
insb
xchg
xchg
ret
fwait
aas
xor
mov
ljmp
mov
out
outsb
lea
movsb
adc
add
subb
sub
mull
lahf
push
sbb
pushf
repz
lahf
and
andl
inc
sub
jmp
sahf
pushf
pop
pusha
test
in
dec
xor
dec
sahf
sub
pop
movsb
roll
cmp
cld
ds
xor
repz
adc
mov
leave
add
aad
or
inc
cmc
push
pop
xchg
div
cmp
mov
fsqrt
jle
out
inc
and
inc
cmpsl
and
xchg
mov
add
sbb
adc
or
scas
jne
adc
pop
aad
movsb
adc
pop
or
lods
add
dec
mov
scas
pop
lock
mov
pop
ror
sub
loopne
mov
bnd
aam
jg
push
xor
imul
push
adc
fs
sbb
jg
sbb
adc
xor
and
jbe
lcall
andb
adc
lahf
fildl
cltd
repz
jl
add
xor
sarl
mov
jno
xor
and
push
xchg
popa
push
mov
xchg
dec
repz
idivb
loopnew
sub
or
pop
mov
icebp
or
add
mov
push
ret
pop
sahf
cmp
sti
sbb
dec
xchg
push
jne
subb
jl
nop
js
xchg
xchg
add
jg
subb
lea
xchg
adc
test
mov
sub
sub
and
or
push
aad
ret
pop
cltd
inc
dec
lods
dec
push
int3
sar
aas
jb,pn
adc
dec
or
sahf
push
mov
jo
js
cmp
nop
pop
inc
sbb
xchg
sbb
out
iret
cmpsb
mov
test
xchg
mov
shrb
popf
sahf
cmp
xorl
bound
xor
jle
mov
pop
test
xor
bound
aaa
adc
subl
jno
adc
or
loop
imul
aad
push
xchg
jno
cmp
or
ljmp
cltd
sub
sbb
mov
push
inc
pop
sbb
push
xchg
out
xchg
dec
xchg
xor
movsb
fmull
fbstp
inc
jo
or
in
sti
subl
lcall
daa
cld
mov
in
sbb
outsl
jge
mov
je
jge
repnz
sub
addr16
mov
or
inc
lcall
test
jmp
mov
pusha
popf
dec
push
or
outsl
ds
push
or
cwtl
sub
mov
popf
ss
sub
sbb
js
dec
push
cmp
sbb
push
mov
sbb
fimull
xor
cmp
mov
adcb
lret
push
pop
mov
addr16
test
and
lods
pushf
fwait
xchg
fs
dec
dec
xor
arpl
inc
mov
adc
mov
jns
push
xlat
shrb
ds
es
lds
js
stc
add
in
dec
push
and
enter
mov
int
fmull
inc
sti
call
pop
push
adc
popf
sub
int
push
add
out
mov
and
test
outsb
insb
jge
into
aaa
fstpt
in
cld
push
pop
jae
lock
fs
xchg
sbb
push
xor
outsl
cmp
notb
fcoms
xchg
mov
push
push
loope
dec
insb
in
dec
mov
pop
loop
dec
mov
mov
lock
mov
test
push
sbb
mov
inc
or
fisttps
out
xchg
and
int3
sbb
cmpsl
ljmp
and
popa
ret
cmp
push
ret
push
sub
jge
jp
inc
push
aad
push
sbb
mov
gs
cmpsb
rol
mov
gs
mov
or
mov
pop
sub
jp
pop
nop
mov
fbld
pop
aad
mov
mov
popf
sarb
out
fimull
or
push
push
pop
jmp
arpl
adc
jns
jne
popf
lods
in
repnz
aaa
shll
lcall
das
dec
lods
jle
aad
mov
cmp
jns
xlat
jge
push
inc
xchg
subl
into
call
scas
sbbb
xchg
inc
and
test
sub
inc
or
xor
xchg
and
enter
mov
int3
cmpsl
xor
icebp
push
fdivrl
mov
icebp
shll
idivb
add
mov
mov
sbb
shrl
fists
or
push
adc
stos
arpl
inc
lds
in
xchg
pop
and
fidivs
imul
cli
pop
test
xchg
xlat
push
sub
dec
xor
cmp
push
pop
insl
stos
mov
sti
lcall
stos
push
dec
test
shl
xor
sbbl
ret
cmp
mov
xor
shrl
mov
mov
cmp
fmulp
loop
push
sub
ret
enter
adc
out
test
jmp
insb
into
fldenv
imulb
and
hlt
inc
or
orl
push
and
mov
out
xor
cld
arpl
dec
imul
push
inc
sbb
mov
enter
mov
scas
jmp
push
aaa
mov
jecxz
leave
mov
insb
fistpl
mov
out
outsl
inc
xor
ja
jl
cmp
lret
pop
xor
or
sbb
stos
gs
mov
addl
xchg
and
in
cwtl
incb
movsl
loope
push
lahf
scas
int
push
push
and
inc
roll
mov
pop
sub
or
add
sbb
fistpll
inc
sub
nop
xor
out
repnz
add
int
stos
pop
jns
mov
fidivrs
int
jg
inc
sbb
jle
sub
sbb
aad
xchg
cmp
and
aad
xlat
push
xlat
push
xchg
jge
cmp
pop
inc
outsb
daa
xchg
insl
inc
mov
inc
sbb
jge
add
mov
imul
adc
jge
jge
pop
fdivrl
subb
lds
jns
mov
inc
iret
test
ret
mov
sbb
add
lds
repz
mov
imul
jnp
outsl
adc
cld
rclb
scas
push
push
push
cmp
push
sti
mov
rolb
dec
sbb
mov
sub
cmp
cmc
mov
nop
lods
or
jb
movsb
mov
pop
fs
out
xor
fs
sbb
ljmp
in
outsl
dec
adc
pop
imul
dec
and
ret
inc
out
add
xor
fisttpll
rep
and
test
jnp
inc
sub
and
jbe
js
cmpl
aaa
push
mov
push
call
hlt
dec
into
dec
aam
fs
xor
dec
call
mov
adc
xchg
pusha
jae
and
mov
cwtl
mov
mov
push
jo
shrb
sbbl
sbb
push
adc
xor
aas
mov
and
xchg
xor
fidivrs
jle
lods
xor
add
lahf
cmp
dec
aas
sub
popa
cmpsb
jno
mov
inc
mov
ljmp
fmull
mov
sbbl
fisubrl
inc
xchg
sar
and
lock
push
xor
xor
mov
cld
jp,pn
cmp
hlt
push
cmpsb
jmp
mov
ret
xchg
gs
repz
mov
pop
into
in
sub
inc
add
fnstcw
fldl
sub
push
test
xchg
add
test
ljmp
xor
mov
add
dec
stos
push
pushf
sub
dec
xor
test
notl
dec
shl
xor
shlb
mov
adc
and
adc
call
decb
mov
jecxz
lds
push
jmp
je
insb
fdivrl
or
jnp
call
jo
imul
cwtl
fs
sub
push
dec
stos
push
and
push
test
push
out
lea
imul
enter
out
jb
mov
mov
mov
mov
in
inc
popf
xchg
sbb
ja
push
pop
movsl
inc
mov
dec
add
mov
aam
imul
dec
cmpsl
inc
jae
add
add
cld
jmp
sub
push
jecxz
repz
fdivrs
inc
dec
loop
or
aaa
sub
mov
sub
xor
xchg
cmp
cmpsl
icebp
adc
ret
sbb
mov
scas
lret
xchg
fwait
sti
pop
test
test
decb
mov
icebp
icebp
in
add
inc
repnz
sarb
xor
push
add
mov
gs
mov
xchg
sbbl
add
dec
stos
push
mov
push
pop
mov
adcb
mov
scas
xor
outsb
mov
xchg
mov
add
mov
or
fwait
stos
mov
cmpsb
push
pop
cmc
dec
xor
cmp
sbb
jecxz
cltd
popf
mov
push
mov
test
push
inc
mov
cmpsl
cmpsb
test
movsl
es
ds
jb
inc
jecxz
mov
arpl
std
fadds
xor
and
cmpsb
jo
out
lret
dec
mov
mov
fisubl
mov
dec
mov
push
push
lret
loopne
lret
les
jp
xchg
leave
adcl
and
dec
pop
mov
sbb
out
dec
cmp
adc
xor
and
mov
mov
mov
xor
aaa
jg
cld
insl
mov
lret
and
and
das
adc
lret
movsb
call
and
ret
and
cmp
aam
or
mov
pop
cmp
and
adc
xchg
or
dec
lock
add
dec
mov
add
or
dec
cs
rorb
faddl
adc
dec
mov
cld
imul
inc
ret
das
xchg
sbb
xor
in
loop
push
pop
sub
mov
adc
and
jne
out
rcrb
xchg
jns
lea
cmp
ds
loope
add
call
loopne
cltd
push
adc
xchg
sub
push
fwait
pushf
stos
jb
sub
mov
mov
pop
adc
out
jp
rcr
dec
push
testb
mov
sbb
cmpl
aaa
add
fstl
adc
call
test
ss
subl
jns
clc
loope
dec
push
jmp
sbb
aad
adc
jg
cmp
and
cmp
in
mov
dec
jno
jp
or
sbb
lods
xor
xchg
gs
cli
adc
repz
lea
mov
xchg
or
mov
stc
adc
mov
lret
add
fdiv
out
jge
sub
mov
mov
and
or
enter
shll
pop
repz
push
push
insb
mov
fisttps
jns
inc
sbb
rcl
gs
and
jne
sbb
and
lret
push
dec
add
popf
lock
push
sbb
sub
insl
xor
cli
test
rcll
add
and
jne
dec
push
jnp
addr16
mov
mov
push
iret
mov
js
xchg
cld
sub
imul
inc
xor
xchg
xor
movsb
jns
sahf
push
mov
lcall
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
xor
inc
nop
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
mov
add
add
add
adcb
add
push
add
addb
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
nop
roll
add
add
add
or
add
add
sub
add
add
add
rolb
addb
add
call
add
add
add
add
add
add
fildl
add
add
add
add
add
add
add
fildl
add
add
push
add
add
add
addb
add
or
add
add
xor
add
fiadds
add
add
add
push
add
add
add
add
add
add
loop
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
pop
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
popa
add
outsl
add
and
push
add
data16
add
jb
add
add
jb
outsl
add
jo
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
js
je
and
inc
add
jne
insb
add
add
insb
add
bound
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
add
outsl
add
outsl
add
add
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
jno
je
je
outsb
add
ja
jb
push
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
popa
bound
jb
arpl
add
dec
outsb
jne
je
insl
inc
jb
insl
push
outsl
imul
