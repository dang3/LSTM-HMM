xchg
jb
decl
inc
add
in
sub
pushl
push
lea
push
push
push
stc
fucomi
dec
cld
push
add
push
sbb
dec
add
xor
ret
data16
xchg
add
push
or
or
mov
pop
fldt
add
pop
pop
or
mov
push
push
push
inc
hlt
add
dec
push
push
push
call
mov
add
ss
dec
ss
cmovge
mov
sub
push
inc
clc
push
fcmovu
mulb
push
push
push
pop
call
mov
dec
jp
inc
pop
or
int
mov
jbe
dec
or
jo
fucomp
mov
dec
idiv
ds
lock
fwait
hlt
lock
mov
dec
push
loope
outsb
jne
jns
and
xor
ret
pop
mov
add
ss
lods
push
push
add
in
push
aaa
imul
or
add
not
sbb
add
mov
incl
inc
hlt
cmpsl
int3
inc
add
lret
inc
neg
not
mov
rorb
xlat
dec
scas
sbb
jmp
add
sahf
mov
in
fistpll
push
dec
mov
dec
inc
xor
xor
arpl
in
std
call
pusha
sbb
pop
add
shrb
insl
xchg
xor
dec
imul
clc
xchg
call
aaa
xor
or
mov
repz
jnp
adc
mov
imul
push
int3
sub
sbb
cltd
test
call
cld
call
cs
cmove
push
hlt
push
dec
dec
mov
mov
loopne
aaa
hlt
or
loopne
cmp
repnz
jae
pusha
sbb
push
push
pop
jge
mov
inc
push
outsl
cmp
outsl
aaa
xor
or
call
cmp
or
out
lahf
in
push
sbb
dec
add
call
or
scas
push
ret
mov
add
cld
int3
stos
fstpt
mov
push
xor
fimull
in
sti
icebp
mov
cmp
ficomps
push
and
sub
push
push
or
fs
fnsave
xchg
pop
in
cwtl
icebp
out
je
push
push
test
inc
arpl
mov
pop
push
and
loopne
mov
xor
xor
clc
pushf
sbb
ret
ss
loopne
dec
cmp
pop
dec
call
mov
popa
clc
iret
ss
fadds
in
jnp
jbe
sbb
clc
mov
dec
sti
jmp
icebp
add
add
inc
jecxz
imul
cmpsb
pop
and
mov
inc
dec
add
jecxz
adc
jmp
add
push
dec
push
imul
push
push
inc
sti
iret
dec
dec
pop
mov
insb
punpckhwd
pusha
push
xchg
ss
jne
inc
mov
mov
or
nop
int
rcrl
rolb
cmp
int
scas
fstp
ljmp
jae
push
push
dec
jne
cmp
out
pop
or
xor
xor
sbb
add
push
push
sub
lock
jmp
fs
mov
pop
cmp
call
aaa
fs
insb
cmpl
jb
xor
push
xchg
aaa
inc
je
sbb
or
insb
pushf
xor
sti
std
push
push
imul
sbb
sub
pusha
xchg
add
shl
pop
les
call
adc
test
call
jg
iret
cmc
mov
js
insl
mov
gs
cld
and
imul
test
stc
jno
lret
dec
jae
add
data16
je
rcl
or
stos
in
outsl
dec
push
push
or
jne
sub
iret
or
and
negl
out
scas
inc
or
adc
push
popa
dec
mov
push
jbe
or
dec
add
jne
fildll
fisttpll
adc
add
sbb
or
and
xor
outsl
jae
dec
pushf
add
fmuls
push
and
jle
test
add
dec
shlb
icebp
cmp
cwtl
xchg
push
bound
xorl
sub
cmc
jl
mov
dec
and
inc
je
in
mov
sub
push
cmpl
push
xchg
pop
pop
in
adc
sub
outsb
sbb
jmp
scas
or
arpl
mov
orl
jae
inc
inc
loopne
jecxz
imul
leave
cmp
jg
pop
cld
mov
add
lret
ret
adc
adc
add
dec
and
fadds
fucomip
mov
inc
stos
adc
aaa
adc
dec
add
dec
sub
repz
shrl
jmp
je
inc
and
js
jae
cld
jg
pop
xor
dec
and
outsb
jl
roll
sub
inc
ja
or
jecxz
push
call
mov
and
mull
imul
pusha
push
add
push
push
dec
je
inc
xor
inc
ficompl
mov
das
shll
push
insb
xchg
cld
pop
in
sub
xchg
ret
pop
mov
fistps
ret
pop
jmp
cmp
cmp
mov
popa
dec
push
cmpxchg
add
lcall
add
mov
xchg
push
pushf
fcmovnbe
mov
imul
xlat
jbe
xor
cmp
inc
dec
sbbl
popa
cmp
out
insb
pop
xchg
cwtl
mov
in
sub
push
fs
incb
xor
dec
incb
cmp
push
sar
sahf
scas
add
repz
or
bound
mov
arpl
dec
cwtl
inc
jns
lret
push
xorb
stos
fwait
add
jb
lea
not
lahf
pop
jno
and
outsl
push
sub
not
arpl
dec
andl
mov
and
outsb
dec
dec
outsl
mov
dec
fisubrl
or
bnd
or
fstp
int
jo
xor
adcl
test
test
add
pop
adc
add
js
jb
push
dec
bound
loope
and
sbb
cltd
mov
xor
inc
adc
lea
in
loopne
sbb
pop
xor
adc
jne
cmp
jns
hlt
das
inc
mov
adcb
jbe
jo
cmp
xchg
mov
popa
push
or
push
loope
inc
pusha
test
fld
mov
xor
ss
sbb
pop
cltd
mov
sti
pop
xor
lcall
les
cmp
sbb
ret
imul
dec
or
stc
int3
rcl
out
imulb
incb
stc
xor
lods
push
pop
sbb
jbe
shll
in
cmp
mov
dec
or
push
daa
dec
push
stc
cld
add
shll
xor
fsubr
add
mov
cmp
fs
pop
push
jle
dec
iret
adc
out
push
jbe
out
pop
cli
jb
push
rcl
or
imul
mov
iret
loop
ret
inc
push
dec
jae
icebp
dec
ja
dec
dec
in
out
lods
fildl
loope
and
jno
and
js
not
dec
add
in
movb
jmp
push
loope
notl
xchg
clc
add
adc
adc
pusha
sbb
mov
je
rorb
mov
jecxz
loopne
sbb
fmul
sbb
or
shlb
loopne
adc
jl
ds
lea
mov
add
pop
or
push
xor
inc
mov
lahf
inc
inc
push
push
popa
loopne
mov
dec
enter
mov
das
rorb
jmp
sub
add
popa
arpl
mov
and
add
lock
push
pop
xor
insl
adc
pop
and
enter
bound
push
jb
dec
out
insl
and
push
inc
pushl
inc
inc
jb
loop
add
mov
dec
ret
clc
xor
mov
movsb
jnp
rorb
insl
cli
pop
movsb
cmp
or
lcall
clc
adc
not
add
neg
js
aaa
pop
rorb
mov
jo
jg
sbb
out
jne
arpl
aaa
inc
cs
dec
call
inc
popl
jge
notl
cmp
ja
jl
push
in
mov
js
push
icebp
inc
and
jp
fisubrl
mov
movsl
inc
test
xor
xor
ss
rorl
movsl
adc
add
push
inc
dec
push
mov
das
js
das
add
add
push
push
pop
js
repz
jno
and
shl
call
aaa
sub
pop
add
inc
push
dec
inc
lods
aas
sub
repz
jne
inc
jne
js
imul
xchg
lcall
pop
mov
sbb
inc
ja
in
shr
out
aaa
dec
add
cli
call
imul
insl
incl
lock
pusha
sub
add
adc
cld
in
inc
mov
push
cmc
neg
faddp
add
inc
or
inc
and
cli
test
or
lcall
xchg
add
pop
insl
add
xchg
push
fwait
xchg
arpl
cld
pop
ja
sbb
inc
imul
dec
push
push
add
adc
pop
jmp
jae
imul
inc
xchg
fcomps
dec
mov
jo
test
mov
jo
pop
mov
sbb
mov
push
inc
es
icebp
push
mov
dec
es
dec
insl
push
xor
insl
ror
pushf
in
shl
xchg
xor
cmp
mov
loopne
and
sbb
xchg
orl
sbbl
jne
push
cs
cld
mov
ss
or
jbe
bound
pushl
sahf
aad
xor
jmp
xor
jecxz
lock
ja
gs
dec
xor
or
xor
xor
sbbl
js
cmp
inc
push
gs
sbb
dec
neg
jg
hlt
rol
cld
nop
and
push
fmul
push
inc
jbe
or
jb
int
ficomps
mov
push
inc
push
xor
push
adc
js
test
cmp
push
add
and
lock
or
arpl
push
push
ss
rcr
lds
je
inc
mov
sbb
sbb
mov
push
inc
inc
out
push
cs
cmp
dec
ds
dec
sahf
or
call
or
and
outsb
or
add
out
hlt
cmpl
mov
mov
mov
pop
test
sti
and
testb
pop
incl
mov
sub
jmp
or
push
ss
lock
ja
mov
mov
pusha
std
cmp
sub
aam
inc
add
loop
adc
jle
xor
jno
jb
ds
stc
push
dec
xor
addl
into
lods
sub
pop
dec
sub
mov
ss
cld
cmp
movsl
fistpl
fwait
sub
add
sub
jmp
add
sarl
test
in
test
ret
cwtl
subb
xor
cmp
sub
add
pusha
insb
lcall
xchg
or
das
lods
cmp
das
push
mov
ret
add
dec
cmp
je
inc
and
jno
jmp
inc
ja
mov
mov
dec
sbb
ret
out
cmp
push
ss
or
in
xchg
call
adc
dec
sub
dec
cmp
jne
jle
mov
outsl
gs
ja
out
notl
dec
imul
jg
and
cld
add
imul
mov
pop
jbe
ja
cmp
or
sub
loope
fwait
sahf
mov
push
enter
xchg
push
movsl
dec
clc
call
jmp
adc
jmp
push
int3
push
jb
inc
js
rorb
jno
cmp
cmpsl
shll
mov
jg
in
pop
test
daa
ja
dec
xor
dec
popa
dec
outsb
cmp
dec
xor
jo
rolb
movsl
std
push
or
mov
hlt
dec
sbb
cmpsl
mov
or
cli
testl
dec
lock
cs
mov
orl
sbb
dec
out
push
ja
push
mov
fcoms
or
xchg
or
pop
push
sbb
sub
push
pushl
push
xor
sbb
out
outsl
icebp
lret
adc
push
add
loop
cmpsl
jne
add
inc
nop
lret
fisttps
popa
jmp
push
loop
sub
mov
add
mov
sbb
lahf
push
inc
pop
pop
ljmp
imul
pop
leave
ja
pop
xor
mov
outsl
add
stc
or
outsb
jmp
hlt
aas
jo
insl
lods
push
xor
dec
shlb
mov
ss
push
sbb
cli
lods
or
sbb
inc
pop
lock
jmp
les
loopne
or
js
dec
or
mov
xor
inc
mov
loopne
inc
rcrl
sbb
dec
inc
sbb
or
insl
or
push
std
jns
lds
aaa
inc
pop
push
jg
xor
call
push
cltd
push
cmp
jne
lea
dec
std
sub
mov
jmp
push
inc
jge
xchg
pop
ds
inc
mov
or
fidivs
out
or
ds
pusha
cs
push
mov
cmp
mov
repz
mov
or
testl
frndint
pusha
fmull
imul
push
mov
dec
push
ja
push
fnstsw
movsl
dec
pop
ja
dec
ss
insl
gs
sub
fs
add
mov
loopne
xchg
jae
dec
loop
psrlq
scas
lods
jnp
cmpl
push
or
cmpl
inc
inc
lahf
jp
cmp
inc
imul
add
fstpt
add
bound
sbb
mov
pop
pop
push
jbe
sub
jns
in
cmpsb
adcl
pop
sub
ds
or
or
nopl
fcomip
sbb
je
dec
lcall
sbb
sub
lods
js
or
add
xchg
push
loop
xor
sbb
adc
js
sti
sbb
sub
jmp
aam
fbstp
jmp
or
not
mov
or
inc
jne
sbb
sub
jmp
test
mov
cmp
je
sub
adc
dec
jo
xor
jb
rcrl
enter
add
xchg
sarl
inc
shrb
mov
add
inc
mov
mov
ss
dec
movsb
insb
repz
sbb
pop
aam
mov
enter
push
xchg
mov
cmp
adc
loopne
and
push
mov
push
inc
call
push
inc
xor
test
add
outsl
sbb
dec
inc
or
jno
roll
scas
pop
push
jge
std
in
arpl
or
sub
sub
lock
pop
fistpll
test
cmp
adc
push
inc
mov
fstpt
test
fisubl
mov
cmpl
adc
sub
mov
add
filds
xor
jl
in
notb
arpl
rcrb
sub
mov
push
add
sub
cld
lods
sub
inc
inc
sub
gs
ja
fwait
out
jp
sub
cmpsl
inc
sbb
add
inc
out
idiv
cs
or
sub
sub
cmovns
mov
inc
addb
ret
mov
outsl
inc
fsts
stc
jg
sbb
inc
xor
loopne
xchg
inc
and
in
pushl
inc
addr16
push
xchg
out
pop
out
fwait
std
inc
inc
inc
adc
in
incl
inc
mov
inc
mov
xchg
and
sti
lea
sbb
cs
mov
inc
push
inc
cmp
sub
inc
adc
mov
jns
pop
inc
int3
mov
mov
inc
push
nop
scas
mov
ret
xor
in
xchg
dec
mov
inc
or
and
idivl
int3
push
cmpsb
inc
loope
pop
mov
mov
push
pop
push
fstl
jae
push
mov
mov
inc
test
ret
movl
jl
pop
inc
lahf
mov
into
inc
fldl
fists
add
push
loopne
push
repz
imul
das
inc
in
or
adc
ret
icebp
mov
out
and
sbb
lds
adc
cli
rol
dec
inc
ret
mov
jl
aad
shufps
jg
mov
sub
xlat
inc
adc
inc
test
fs
mov
or
mov
xchg
pop
adc
inc
cmpsb
push
push
mov
jle
test
fs
inc
addb
xor
stc
mov
out
mov
adc
arpl
or
jne
xchg
das
inc
add
or
cwtl
xchg
fdivrs
xchg
outsl
sbb
cmp
fsubrl
cmc
or
fnsave
inc
pop
lret
mov
inc
or
mov
mov
notl
cltd
inc
and
sub
xor
and
mov
push
outsb
mov
and
pop
jo
test
bnd
inc
cmp
lea
jle
out
pop
jge
mov
addr16
xor
inc
clc
push
xchg
mov
push
popf
or
addl
imul
aaa
ret
inc
cmp
jo
fildl
add
stc
mov
fiaddl
mov
and
jl
jbe
insb
add
xor
sub
push
lcall
pop
pop
popa
xchg
popa
jne,pn
ds
decl
call
aam
push
cli
push
pusha
push
mov
and
mov
fnstcw
mov
aas
jo
sbb
mov
push
das
sub
jle
xor
not
or
insb
adc
adc
cmpsb
hlt
mov
dec
jb
cmp
test
push
inc
mov
and
inc
mov
mov
outsb
popa
xchg
adc
push
outsb
das
fstpl
daa
push
and
push
mov
mov
pop
inc
sub
jns
call
cli
ss
or
mov
lea
lret
sub
rcr
neg
inc
ja
sbb
mov
mov
xor
loopne
inc
dec
repnz
outsb
add
add
or
cmpsl
outsb
aaa
ret
push
and
jmp
inc
test
xor
repz
add
push
lret
sub
inc
sbb
mov
push
dec
mov
push
push
push
adc
or
imul
cmp
inc
jge
pop
push
add
jl
fnstsw
incl
and
xchg
loop
ja
outsb
int
add
and
add
push
int
pop
mov
movb
cmpsb
and
repnz
add
mov
jbe
xchg
in
pop
mov
pause
fwait
movsl
scas
testb
jge
or
sbb
rcr
cmp
jo
addr16
dec
adc
xorb
add
inc
imulb
mov
mov
xchg
add
in
pop
mov
cld
scas
push
sbb
cmp
pop
ss
mov
sbb
inc
lods
pop
xchg
and
mov
or
loope
jecxz
add
inc
orl
adc
call
mov
pop
xor
dec
pop
clc
scas
mov
in
add
or
popf
inc
mov
push
mov
popf
rcrl
adc
xor
xor
mov
call
inc
jb
out
or
pusha
loopne
push
aaa
push
jmp
add
sub
jle
xor
gs
jle
pusha
push
and
nop
and
adc
xchg
into
sub
mov
sti
loopne
stc
inc
cli
push
cli
xor
dec
xor
mov
jp
adc
pop
and
xchg
or
int
ds
ss
mov
or
lock
pusha
aam
cmp
add
test
lahf
clc
fsub
pop
inc
dec
jmp
lods
inc
and
pop
fs
testb
lret
mov
xlat
mov
sub
lahf
rolb
lea
inc
fdivp
pop
bound
mov
pop
inc
cwtl
jns
loope
ret
mov
popa
daa
pop
cltd
les
outsb
sahf
or
cmp
lcall
dec
xor
inc
inc
jnp
sbb
sbb
sub
lcall
jmp
fists
mov
push
pop
adc
inc
dec
cmc
shrl
mov
jmp
icebp
jne
aad
sbbb
sub
or
adc
fildl
dec
aam
insl
rorl
mov
and
push
iret
insb
int
jecxz
jns
out
ja
adc
imul
fwait
das
nop
aaa
mov
lahf
fisubl
xor
mov
jle
aaa
rorl
and
sub
add
sbb
pop
xchg
inc
jle
cmpsl
xor
pusha
cs
push
xor
and
xchg
mov
call
push
dec
mov
movsl
inc
xor
mov
sarb
and
jmp
pop
jb
jno
cltd
test
inc
sub
lods
push
mov
fisttpl
dec
sbb
pop
or
inc
add
jmp
and
inc
sub
roll
out
cmp
or
imul
outsl
fcmovnbe
or
ja
inc
jle
dec
sbb
pusha
jmp
mov
adc
sbb
icebp
ret
ds
divl
adc
push
push
fdivs
js
clc
inc
repnz
pushf
ss
pop
lods
subl
ret
mov
in
movsl
sbb
mov
xorl
and
aad
sub
xchg
xor
cltd
sub
push
iret
es
loope
cs
add
fistpl
jecxz
add
sbb
enter
mov
inc
jo
insl
push
repz
pop
in
shl
out
das
sbb
push
pop
add
mov
mov
ss
push
neg
jno
hlt
ret
into
cs
sbb
push
roll
mov
or
xlat
loopne
jge
sbb
lret
das
mov
mov
cmc
jne
addr16
pop
pop
out
fcomp
nop
sbb
aaa
sub
repnz
pop
inc
arpl
xchg
in
pop
push
lds
push
pop
ljmp
pop
push
movb
add
add
in
jp
adc
sub
repnz
pop
mov
pop
inc
ljmp
loopne
and
mov
or
clc
inc
or
or
fwait
lea
add
insl
cmp
cmp
dec
inc
ljmp
adc
adc
js
jle
in
out
andb
out
pop
pusha
outsl
mov
lcall
and
sub
sub
in
push
test
jae
mov
iret
add
and
jno
sub
dec
xchg
incl
mov
fimull
xchg
ljmp
mov
xchg
or
loop
sbb
jb
push
sahf
xchg
les
dec
test
fstps
lret
lahf
arpl
clc
popf
adcl
nop
stos
outsb
xchg
imull
mov
je
mulb
sbb
or
popa
lret
mov
aas
bsr
push
into
or
ja
pop
adc
add
movsb
out
jb
ret
js
push
sbb
ja
mov
lds
and
push
fisubrs
das
cmc
sub
cmp
scas
inc
sub
stos
sub
lods
jb
dec
pop
imul
jno
inc
imul
jle
xor
adc
xchg
daa
and
fbstp
adc
cmp
call
adc
xor
add
ds
add
fdivs
mov
cltd
test
mov
cmpb
pop
cli
push
andb
repz
ret
sbb
icebp
cmp
jge
popf
loope
or
test
xor
mov
jl
mov
adc
lcall
or
xor
je
xor
jle,pn
adc
and
inc
shll
adc
int
push
push
test
in
or
rcrb
mov
test
rcrb
pusha
xlat
mov
push
fldcw
aam
dec
cltd
mov
sub
aad
add
int3
mov
test
stos
push
lock
call
mov
negb
cmp
je
mov
adc
das
and
pop
add
xor
mov
mov
add
or
sub
ror
push
jne
sbb
fwait
data16
pusha
cvtdq2pd
sbb
dec
dec
cld
mov
adc
leave
xor
repnz
lea
mov
mov
loopne
roll
notl
nop
mov
jb
test
jbe
cmp
or
mov
testb
push
pop
jbe
mov
pop
cmpl
mov
xchg
dec
mov
fildll
ficoml
or
out
cmp
push
lea
lret
dec
mov
psubb
cmpsl
es
shr
test
aam
push
test
cmp
inc
inc
sub
push
out
xor
push
cmc
or
inc
adc
cmpsb
and
inc
sbb
jge
xchg
nop
outsl
push
xchg
push
add
in
int
push
sub
xchg
jae
and
sub
jae
xchg
sub
test
das
les
and
pop
fnsave
sbb
push
dec
push
icebp
les
ret
cmp
notb
lcall
add
adc
xor
and
cmp
add
mov
sbb
loopne
adc
outsb
jmp
loope
fwait
les
inc
and
mov
adc
cmc
shl
inc
mov
ss
adc
jl
lds
dec
outsl
push
sbb
sub
sub
or
daa
mov
or
lods
jae
sbb
xlat
xlat
lds
mov
test
push
lcall
pop
add
rolb
daa
loope
mov
in
pop
mov
and
shlb
mov
sbb
add
stos
sahf
add
jbe
mov
and
lods
mov
adc
cmp
in
leave
fdivrs
clc
push
mov
rorl
in
scas
stc
xor
jb
test
mov
jecxz
out
shll
jecxz
iret
and
xchg
jb
subl
les
pop
iret
lea
adc
and
pusha
lcall
sub
ja
call
in
scas
jne
sbb
mov
pop
pop
dec
loope
mov
in
std
insb
pop
lcall
add
mov
ja
sahf
jbe
in
sub
ret
or
es
push
jae
push
mov
xchg
pop
mov
xor
or
fistpll
jbe
jl
in
xor
cmp
or
sub
jl
and
ljmp
aas
shl
fbstp
xor
cwtl
cmc
hlt
and
jnp
mov
or
sub
pop
popa
movsb
mov
rclb
xor
test
mov
mov
push
repnz
insl
cmc
cmp
das
sub
cwtl
mov
mov
cmp
bound
je
adcb
leave
mov
popf
shr
cmp
dec
cmp
sub
mov
fiaddl
mov
fcom
hlt
insl
mov
rorb
inc
insb
or
mov
loope
or
xchg
shl
push
dec
mov
adc
push
ja
rcrl
loop
pop
add
jle
jne
lods
popa
imul
das
stc
jge
xchg
mov
sbb
push
ds
ds
imul
xor
xor
jb
push
mov
mov
add
mov
sbb
loop
fdivr
adc
outsb
inc
mov
jbe
notl
call
xchg
fsubs
popf
movsb
lret
loopne
inc
or
mov
cmp
adc
in
mov
je,pt
xchg
mov
push
add
add
push
insl
mov
mov
shlb
pop
mov
fisubrl
imul
popa
daa
fwait
cli
jbe
loope
inc
xor
scas
addr16
movsl
cmp
cs
mov
dec
sub
or
adc
call
or
pop
pop
push
xchg
pop
cmp
das
inc
xlat
loopne
out
cmpsl
dec
andl
outsl
fisttpl
test
lahf
inc
mov
cmc
pop
out
add
movsb
in
js
pop
mov
xchg
and
xor
or
sub
jo
test
nop
jae
mov
xlat
leave
mov
lods
push
ffreep
push
jne
mov
clc
push
scas
lds
sbb
mov
sahf
imulb
fnstsw
push
inc
imul
loop
mov
cmp
cli
nop
or
dec
xor
fidivl
nop
dec
js
cmp
movsl
pusha
fbld
push
xchg
sbb
das
lock
out
push
and
xchg
or
or
xor
sub
jmp
push
cld
mov
mov
jbe
inc
je
add
xchg
jge
out
fcoms
add
push
clc
into
inc
jnp
add
jle
push
test
inc
insb
outsl
mov
pusha
fcomp
int3
cmpsb
shr
xlat
jl
sarb
es
fs
inc
push
mov
mov
pop
aas
inc
loop
aam
adc
lods
mov
mov
inc
dec
jecxz
dec
icebp
int
or
add
shrb
movb
not
in
shrb
movsl
fidivrl
mov
data16
das
lret
pusha
cmp
pushf
add
xchg
xor
dec
inc
pushf
outsb
mov
filds
sbb
ret
adc
pop
inc
push
xor
mov
pop
pop
scas
or
enter
jo
aas
icebp
mov
push
setnp
sub
cmp
sbb
in
jne
imul
lods
orl
aad
mov
lock
sbb
fstl
jle
sub
xor
inc
ret
repz
aad
sbb
pusha
and
in
icebp
lock
mov
das
subb
sub
inc
addr16
dec
js
imul
mov
sub
stc
or
ret
scas
push
sbb
mov
addr16
in
pop
sbb
mov
and
and
adc
lahf
std
aam
daa
xor
sub
xchg
testl
mov
rol
jo
aam
fidivrs
in
xchg
cwtl
sbb
adc
insb
outsl
insl
pop
or
inc
mov
arpl
into
mov
imul
mov
inc
cmp
data16
push
and
rcrb
dec
jb
xor
stos
out
ja
out
push
sbb
je
popa
lods
jbe
hlt
xchg
or
bound
cmp
dec
dec
loope
dec
scas
divl
sbb
ss
insb
pop
stos
jne
or
pop
sub
mov
push
mov
lahf
xchg
test
add
pop
sub
repnz
arpl
or
xor
lock
lods
jg
fdivr
retw
movb
inc
pop
dec
adc
scas
and
loop
icebp
pusha
push
push
mov
test
pop
mov
loopne
dec
xchg
sbbb
int
push
out
cmp
or
inc
call
adc
not
out
js
pop
in
pushf
mov
jge
inc
arpl
and
add
in
dec
cmpsl
sbb
sub
loope
pop
mov
add
popf
fcompl
ds
int3
xchg
orb
xor
mov
rcll
outsb
ja
scas
jne
lea
xchg
or
out
imul
mov
jb
sub
jae
mov
mov
xor
pop
inc
arpl
mov
das
pop
xchg
fwait
mov
gs
cmp
lahf
push
pop
mov
lods
dec
push
jbe
fiaddl
ss
std
popf
sbb
pop
fisttpl
or
sti
andb
call
add
test
mov
mov
insb
pushf
ret
cmp
out
push
inc
outsb
mov
insb
loopne
jbe
dec
outsb
sti
mov
cmpxchg
push
sub
lahf
jae
test
or
lea
sbb
ja
insl
jnp
xor
mov
js
or
pop
xlat
adc
loope
stc
xor
mov
inc
fidivrl
inc
xlat
negl
bound
in
mulb
mov
push
arpl
out
aas
shl
mov
inc
pop
fsts
loopne
pop
iret
or
fisubl
jmp
jb
ret
sbb
xor
hlt
je
xor
pop
pop
inc
fs
and
les
sar
or
jb
push
push
and
and
add
repz
or
pop
push
or
lds
push
repz
xchg
push
cs
es
aas
jge
pop
add
push
jmp
lret
sub
outsl
in
shrl
sbb
push
inc
jnp
cmp
xor
pop
std
mov
mov
fwait
jnp
in
jno
popf
es
fwait
xchg
jae
jp
mov
ret
push
mov
mov
fs
rolb
cmp
in
mov
test
jne
cmp
gs
inc
sbb
xchg
pop
arpl
add
lock
add
in
sar
or
or
aam
jmp
fistps
insl
mov
and
xor
jle
adc
in
mov
lods
jp
and
enter
add
lock
xlat
inc
ja
push
xor
push
pushf
rolb
sbb
push
adc
js
pop
xor
dec
fwait
je,pn
loopne
fistpl
dec
sub
loop
lahf
adc
adc
jg
jb
mov
ss
pop
inc
enter
adc
mov
rcrl
arpl
in
mov
loopne
dec
leave
add
and
add
jno
mov
inc
jecxz
aaa
jl
mov
pop
pop
mov
stos
pop
in
cltd
push
lret
push
mov
mov
outsl
gs
popf
jmp
in
shlb
ret
scas
aas
shr
leave
sti
xor
add
add
mov
xor
dec
adc
jbe
pusha
xor
xchg
mov
xchg
and
enter
stos
in
jp,pn
outsl
mov
shrb
xor
add
mov
adc
dec
data16
sbb
js
mov
mov
arpl
xlat
mov
out
cmpsb
mov
xchg
flds
popa
rcll
cmp
or
cmp
pop
push
mov
xchg
data16
jge
pushf
or
das
sbb
jno
ja
jle
fst
aaa
push
pop
testl
push
lds
xchg
pop
mov
xchg
pushf
xchg
mov
loope
xchg
ret
cmp
ret
dec
int
pop
clc
andb
pop
cwtl
cmp
imul
sbb
orb
mov
shl
or
xchg
mov
clc
and
sub
clc
shr
roll
jecxz
out
outsb
xor
sbb
or
adc
jge
lret
mov
insb
mov
mov
test
mov
or
inc
cltd
rcrb
loope
mov
arpl
pop
mov
stos
aas
push
jo
lods
add
jae
and
pushf
or
aad
jg
pop
mov
push
pop
mov
movsb
sbb
mov
mov
pop
aas
pop
sbbb
pop
push
cmp
mov
pop
fmull
jle
xchg
or
addl
outsl
jbe
lock
pop
mov
aaa
inc
stos
andb
and
add
das
loopne
sbb
lea
and
sub
add
or
inc
push
dec
inc
lahf
xor
outsb
pop
mov
inc
add
dec
xchg
rcr
xchg
inc
push
mov
pop
push
nop
int3
lret
jb
xchg
sub
enter
sub
ret
scas
lods
push
inc
jo
in
lret
lods
mov
divb
cmc
std
arpl
mov
hlt
pop
pop
mov
clc
in
and
ds
scas
ret
jbe
xchg
push
mov
fucomip
outsb
push
pusha
cli
mov
outsl
mulb
push
lods
adc
scas
cld
mov
lods
nop
es
push
iret
shrl
xchg
lock
mov
imul
icebp
movsl
lods
popf
pop
mov
mov
jl
mov
in
cmpb
ss
int3
push
adcb
jne
adc
fsubrl
ret
fdivr
aaa
push
imul
rcr
fistpll
adc
push
mov
and
push
in
pop
pop
ss
sbb
cli
push
stos
pop
inc
adc
mov
pop
js
mov
iret
cmp
xlat
fmull
addr16
pushf
xchg
xchg
test
add
xlat
movsb
jo
adc
add
sub
out
aaa
mov
cs
in
leave
mov
repnz
mov
sbb
inc
fwait
pop
fwait
or
lea
jbe
inc
fdivr
push
lods
ljmp
sbb
lods
push
xor
mov
sub
subb
jge
loop
jle
mov
clc
add
xor
mov
pop
je
pop
xor
jno
fstps
ret
sbb
adc
lcall
xchg
mov
int
push
stos
into
cmp
shl
pop
cmpsb
push
pop
xchg
lcall
in
mov
outsb
loopne
push
je
mov
sub
mov
filds
arpl
adcb
jb
sbb
or
loope
xor
jbe
sbb
cli
push
rorl
jb
sarl
jg
mov
stos
xchg
mov
xchg
shlb
push
into
out
cmpsb
insl
addr16
push
dec
dec
pop
dec
mov
mov
and
je
insb
cmp
or
lret
inc
sbbl
jbe
rorl
out
pop
push
jge
mov
repnz
adc
adc
imul
rorl
movsb
inc
push
xchg
je
xor
mov
stos
arpl
fsubl
fdivr
lods
add
or
push
push
or
mov
adc
jne
mov
pop
daa
stos
pushf
sub
aas
inc
xchg
mov
adc
inc
and
subb
push
mov
inc
mov
cs
jp
fmuls
cmp
orb
xchg
cmpsl
popa
push
rcr
adc
loope
sub
or
or
add
mov
std
in
add
inc
or
out
sub
int3
icebp
fs
xchg
lret
pop
pop
dec
mov
out
in
rolb
pop
out
xor
push
mov
js
fistpl
sub
push
cltd
hlt
push
lock
shrl
inc
aas
sub
clc
rclb
mov
xchg
or
jge
lods
lret
leave
test
inc
out
cs
rcr
out
pop
sbb
lods
es
push
out
xor
push
int
jp
pop
mov
inc
jns
stos
std
je
xchg
sub
bound
fsubr
push
call
scas
std
pop
rorb
sbb
dec
sub
rorb
cmp
adc
mov
pop
xor
and
fwait
adc
sbb
push
pop
shll
cmp
mov
sub
jp
loop
push
dec
cmp
sbb
mov
filds
aad
xor
mov
sub
in
adc
or
and
dec
arpl
xor
xor
in
cmp
arpl
mov
add
add
xor
jo
push
jno
jo
mov
mov
cmp
lea
lock
test
shlb
data16
sarl
stos
adc
mov
call
and
aaa
imull
inc
loop
xor
out
call
jecxz
and
pop
call
and
das
shlb
fnstenv
fcomps
sbb
mov
fists
pop
cvtps2pd
cmp
dec
pusha
ret
sbb
cmp
call
adc
jbe
xor
in
mov
inc
pop
loope
pushf
cltd
jo
test
lds
dec
in
lock
lods
pop
jo
mov
es
push
mov
inc
adc
mov
and
mov
pop
loopne
mov
mov
sbb
stos
into
cli
push
pusha
mov
sub
rcrl
jnp
in
xchg
jmp
mov
mov
mov
icebp
cmc
mov
mov
int
nop
or
xchg
test
cwtl
lods
sbb
push
sub
push
leave
imul
or
sbb
cmp
mov
jg
cmp
arpl
pusha
retw
push
arpl
imul
dec
cmp
das
out
jecxz
arpl
pop
pop
jb
call
sub
sti
ja
pop
sub
dec
stc
push
out
pop
or
mov
xchg
pop
jg
repnz
cmp
loope
fstpl
mov
ror
mov
stos
mov
sbb
mov
mov
xor
insb
mov
scas
lahf
pop
dec
je
mov
pop
rclb
or
add
jg
daa
dec
stos
jp
mov
sub
jnp
mov
mov
fdiv
iret
lods
enter
mov
mov
pusha
push
jge
jns
bound
rcll
sub
icebp
jno
cli
loope
loop
push
aas
jnp
stc
inc
enter
mov
aas
cmpb
jno
pop
inc
aas
mov
add
lods
and
mov
test
aas
enter
ss
fldl
push
nop
inc
pop
push
fwait
imul
into
inc
pop
dec
pop
insl
or
popa
leave
mov
and
jmp
ret
xchg
sbb
js
rcr
add
ret
sbb
cmpsl
scas
sbb
jnp
fdivs
insl
mov
mov
sbb
test
mov
ss
cmp
cmpsl
mov
pushf
cld
push
push
xchg
xchg
jnp
jle
not
in
adc
pusha
mov
nop
adc
cmp
movsl
inc
cld
xor
lret
fmull
pop
imul
jnp
sub
divb
insb
lds
fcmovnb
repnz
je
lock
pop
add
sub
dec
aas
decb
and
andb
gs
stos
popa
mov
push
sub
popf
xor
shlb
sub
roll
mov
fcmovne
xchg
sbb
js
push
or
push
push
fdivrs
cmp
cwtl
pop
popl
mov
or
clc
shrb
cmpsb
fs
dec
jle
lods
jnp
cli
push
imul
lods
mov
jo
sbb
sub
clc
mov
fwait
enter
add
pusha
inc
xchg
add
les
xor
enter
jp
ljmp
sbb
or
xor
je
lcall
push
movsb
push
jo
xor
xchg
fcom
stc
lods
out
inc
add
cmp
jp
sbb
mov
jge
add
mov
pop
add
cmpsb
rcll
cs
ds
aaa
hlt
scas
out
adc
mov
mov
mov
sub
mov
xor
adc
aas
push
loope
xor
cmp
lea
in
outsl
loop
xchg
cmc
add
or
out
daa
sub
or
mov
sbb
add
cmp
and
inc
test
inc
iret
push
mov
push
xchg
std
notb
pop
jmp
stos
lds
aaa
push
push
mov
jns
xor
loope
das
sub
into
loope
ret
sbb
push
pop
mov
mov
jp
mov
or
jg
push
fldl
lods
jge
dec
loopne
mov
aas
jne
in
test
testl
pop
fidivrl
cmp
jle
pop
or
fcmovu
adc
xchg
in
dec
fbld
lret
lock
icebp
dec
jns
ret
add
dec
out
lods
test
jmp
rorl
or
scas
int
pop
cli
ret
push
mov
mov
cmp
out
mov
les
cmp
push
xor
push
sbb
jne
mov
ret
add
imul
arpl
mov
cmp
int3
adc
sub
loop
jns
das
cmp
pop
dec
iret
fcomps
jmp
pop
clc
movsl
xchg
push
arpl
push
jo
scas
icebp
cmp
mov
andl
cwtl
popf
mov
int
sti
aas
out
mov
mov
add
dec
insl
pusha
out
lods
add
and
add
fstp
xchg
add
xor
mov
push
inc
test
push
cli
xchg
ret
movsb
pop
xor
push
or
xchg
or
les
pop
and
lock
pop
push
je
lds
or
imul
shl
push
cmpsl
scas
sahf
clc
daa
lods
test
outsb
pop
xor
cmpsb
ffree
mov
cmove
int
insl
mov
xchg
xchg
and
das
sahf
pop
pushf
leave
iret
mov
jmp
pop
and
bound
fists
mov
mov
sub
inc
pop
xor
je
pop
iret
dec
fwait
lods
pop
jb
push
mov
adc
and
fidivrs
inc
mov
push
pop
fisttpl
mov
push
lret
add
ret
out
push
fdivs
icebp
clc
pushf
jmp
and
mov
or
fsub
pop
sahf
cmp
shll
aad
or
inc
test
shlb
aas
ret
sbb
out
adc
fwait
push
pusha
xlat
adc
fstpt
cwtl
xor
pop
test
push
or
push
mov
test
mov
aam
das
loopne
fcomps
inc
push
sbb
add
popf
and
mov
xchg
dec
push
clc
inc
pusha
mov
xor
or
aad
dec
popf
mov
mov
js
dec
ss
and
push
addr16
das
jne
pushf
bound
adc
push
insl
scas
fidivs
ss
cmc
mov
inc
cltd
mov
mov
rcll
and
pop
fidivl
or
iret
mov
inc
addr16
lods
adc
stc
jb
add
mov
push
mov
dec
shl
rcll
in
test
or
stos
mov
mov
sbb
add
sub
imul
loopne
lret
jno
js
jns
ds
add
cs
pop
push
dec
sahf
mov
sbb
ret
or
addr16
cmp
arpl
sub
sbb
or
pop
scas
loopne
sahf
outsl
imul
ss
mov
xchg
xchg
inc
jge
mov
pop
call
scas
pop
arpl
jb
push
aad
xorb
fstl
jns
js
in
stos
fs
andb
cli
std
push
cmp
lods
sbb
mov
push
scas
das
imul
adc
xchg
or
addr16
mov
push
cmp
xor
and
test
loop
sub
clc
test
ficoml
fcom
shl
sti
lea
adc
cltd
push
inc
adc
pop
pop
pusha
inc
dec
addb
int
inc
sbb
jnp
mov
mov
arpl
or
imul
jle
dec
out
mov
out
loopne
and
jl
mov
outsl
mov
jge
adc
sbb
popf
imull
xor
inc
or
lret
andb
xchg
mov
hlt
push
insb
loopne
ficoml
cmp
xor
pushf
cmp
push
gs
xor
pop
mov
jo
cmp
shl
mov
aas
add
xor
mov
sahf
push
repz
jg
cmp
insl
adc
push
push
sbb
sub
loope
fnstsw
mov
sub
jl
pop
mov
subl
in
jge
ret
mov
mov
out
and
ffree
movsb
mov
fiadds
mov
ss
orb
mov
std
add
hlt
outsl
movsl
loop
and
add
nop
mov
push
or
les
ror
adc
sub
fdivs
ret
pop
aaa
jbe
int
mov
jb
cli
pusha
or
pop
cmc
sbb
push
jne
or
icebp
mov
fdivs
mov
cwtl
sub
arpl
sbbl
addr16
outsl
push
sbbl
aas
imul
or
xchg
nop
inc
cs
ds
pop
ret
pop
mov
sbb
in
shrl
hlt
ja
enter
js
jg
push
mov
pop
movsl
cmpsb
js
cmp
or
fcmovnb
mov
les
jmp
fldt
jge
aam
jns
sbb
dec
add
push
ret
inc
fidivs
fnstcw
lret
andl
add
in
stc
add
out
jbe
mov
xor
sbb
add
mov
aam
shll
scas
dec
dec
mov
into
pushf
cmc
pop
mov
enter
out
pusha
in
push
andl
jne
xor
sahf
ljmp
jbe
outsb
movsl
test
dec
inc
lea
rorl
add
add
xchg
mov
lahf
dec
int
je
call
mov
pop
sbb
fucomip
subb
add
clc
test
or
incb
imul
sbb
jne
lret
sbb
aas
out
stc
adcb
mov
push
fdivl
pop
sbb
push
jp
jmp
out
idiv
movsl
int
insl
mov
and
scas
mov
aaa
jge
jmp
rcr
int
divb
dec
add
ret
fisttps
jmp
ret
fstps
repnz
add
gs
lcall
jmp
mov
pop
imul
xor
in
mov
rorl
adc
std
mov
mov
jo
and
fdivp
filds
push
jno
test
scas
ja
mov
cmp
dec
imul
jmp
mov
movsb
push
push
lods
aas
in
sbbb
fs
sub
iret
pushl
mov
xchg
xor
mov
js
dec
jbe
cmp
repz
sbb
jle
mov
int
mov
lret
xchg
or
cmpsl
lret
fimull
pop
sbb
push
imul
cmp
inc
inc
insb
xchg
jns
mov
cmpsl
into
and
push
fimuls
inc
and
push
mov
ficoms
push
dec
pop
push
clc
mov
hlt
icebp
jle
mov
sbb
adc
cmp
rep
sub
scas
hlt
xchg
fstp
xor
add
mov
pop
pop
push
pop
lock
jno
inc
pop
fnstenv
fwait
hlt
imul
aaa
fsubrs
mov
out
fdivl
paddusb
mov
pop
push
adc
push
out
cmp
cs
lsl
pusha
in
xchg
push
push
test
jo
push
sbb
inc
lret
and
pop
lds
or
mov
gs
out
or
lret
add
mov
cld
mov
jl
inc
mov
ljmp
outsb
dec
sbbl
aam
mov
cmc
dec
xchg
movzbl
mov
pop
sbb
fprem
scas
and
dec
inc
cmp
aaa
mov
inc
or
push
xor
scas
in
xchg
insb
mov
clc
or
mov
jg
imul
mov
popl
push
jne
mov
scas
jecxz
bnd
popf
push
scas
jg
adc
lret
xchg
xor
inc
jmp
cmpl
adc
xor
mov
or
jae
and
xchg
xor
xchg
into
or
in
insl
loop
insb
and
loopne
push
fldt
mov
add
push
setns
int
pop
push
jne
lret
lds
sub
mov
mov
lret
call
pop
cmp
jno
inc
pop
pop
aaa
adcl
xchg
fwait
ror
cmp
inc
lcall
mov
ss
pop
aaa
sbbb
cmp
cmp
jg
xchg
add
dec
adc
dec
pop
push
stos
cli
fcomps
lret
jle
mov
fsubr
and
mov
call
out
adc
mov
xlat
push
divl
nop
inc
fdivrs
testb
adc
orb
xchg
dec
lods
nop
pushf
push
mov
sub
mov
int3
sub
adc
dec
inc
pop
imul
nop
sti
mov
in
in
adc
jg
add
cmp
pop
jns
inc
inc
dec
adc
inc
mov
cmovb
call
sub
rcl
pop
push
xlat
shll
les
fwait
popf
adc
mov
cltd
inc
repz
jg
shrb
shl
lock
testb
out
sbb
daa
fsubrl
shrl
nop
mov
mov
out
enter
into
push
push
sbb
jb
push
and
xchg
pusha
mov
enter
loope
pop
and
mov
add
in
fadds
std
out
xchg
pop
mov
fwait
outsb
sbb
xchg
or
xchg
insb
dec
loopne
xorl
pop
mov
js
dec
sub
add
and
mov
arpl
movsl
jmp
test
xor
push
es
cld
xor
outsl
roll
pop
test
mov
push
cld
jo
inc
xchg
or
insl
arpl
lods
xchg
add
and
out
test
inc
lea
insl
lea
xor
sahf
iret
leave
pop
cmc
fcmovbe
jmp
decl
or
sbb
mov
shr
lods
and
test
mov
mov
cs
xchg
push
clc
repnz
rorb
div
add
les
insb
movsl
add
xchg
icebp
pop
outsb
cwtl
fcmove
pop
sbb
jg
xor
pop
xchg
cmpsl
rolb
jle
nop
dec
jle
movsl
pop
loopne
push
fwait
movb
insl
mov
ficoml
xor
cmp
mov
sub
fbstp
cmp
inc
jge
ja
aaa
xor
xchg
pop
popa
bound
push
mov
pop
xor
inc
mov
sbb
mov
lock
cmp
inc
xor
cwtl
ret
das
mov
xchg
adc
mov
sub
adc
lahf
daa
gs
mov
nop
repz
pop
cmpsb
mov
loope
cs
roll
xchg
shlb
shll
data16
sar
xor
out
out
mov
or
or
mov
mov
and
outsb
test
add
imul
mov
dec
mov
movl
sub
popa
int
inc
push
lods
and
in
in
ljmp
dec
dec
sub
mov
mov
push
inc
cmp
movsl
push
inc
js
ja
test
mov
bound
xchg
jl
lock
in
je
or
loopne
mull
cmpsb
pop
arpl
mov
aam
nop
mov
rcrb
stos
cli
and
paddw
imul
adc
cmp
and
adc
insl
mov
shl
mov
jge
mov
addl
jo
je
enter
fsin
jne
mov
ss
dec
inc
dec
lds
mov
lock
mov
repnz
stos
and
xor
gs
lret
xor
jge
lcall
stc
inc
sarl
or
ffree
scas
stc
jmpw
clc
sub
cli
push
scas
mov
or
fadds
ds
dec
xchg
in
pop
xlat
lock
ss
lock
or
rcll
popf
dec
lods
gs
lea
mov
dec
xchg
push
mov
cmp
scas
or
rcrb
jno
insl
mov
push
dec
or
jo
fbstp
aam
xlat
in
jl
mov
aaa
or
xchg
adc
out
insb
sub
mov
sbb
cmp
lcall
push
mov
in
int
mov
jl
jnp
sub
in
mov
pop
pop
icebp
fisttpl
dec
aad
pop
cmp
inc
mov
sti
and
xchg
int
xchg
aad
dec
in
addb
shlb
movsb
sahf
mov
mov
nop
movsl
adc
push
leave
hlt
inc
push
xor
lret
or
sarl
push
test
aad
lock
into
cmp
insl
fildl
cmp
push
jmp
mov
sub
xchg
dec
mov
ss
push
cwtl
roll
mov
dec
lea
jbe
lock
fnsave
and
push
andb
sbb
inc
pushf
push
sbb
out
or
cmp
lock
push
mov
cmpsl
repnz
pop
xchg
mov
movsl
pop
pop
pop
xchg
xchg
test
mov
inc
loopne
jnp
cld
pop
in
or
add
hlt
in
jge
or
jno
pop
sub
pop
push
outsb
dec
jne
ret
pop
sub
lea
std
aaa
mov
push
mov
in
nop
sbb
clc
dec
or
cmp
dec
cmp
mov
imul
push
pop
adc
test
pop
adc
or
push
cmp
xchg
sbb
dec
cltd
stos
and
outsb
dec
fucomi
jo
push
sbb
sub
outsl
xchg
icebp
iret
cli
xor
inc
pop
jp
sbb
mov
jne
sbb
dec
scas
out
or
add
xorl
fnstcw
rolb
pop
xchg
adc
cmp
in
jo
sub
shrl
mov
cmpsl
aaa
add
inc
popa
mov
outsb
dec
movsb
arpl
or
shrb
mov
lock
sbb
adc
xchg
jge
inc
xchg
sarb
mov
jg
jmp
mov
popa
in
mov
mov
sub
aam
loop
add
cmp
sar
call
loopne
push
push
jo
pop
jge
mov
fisubl
mov
mov
mov
mov
loopne
stc
fldl
xor
rcrb
dec
sbb
imul
push
lret
insl
in
jle
shll
add
ljmp
push
xor
dec
cli
test
arpl
inc
cmp
push
push
sub
push
pop
mov
sub
mov
add
mov
daa
ss
sub
xlat
divl
inc
loope
dec
orb
rep
or
xchg
mov
jns
push
and
dec
sbb
jno
mov
mov
ja
in
mov
cmp
mov
idiv
pop
push
fwait
idivl
stc
pop
xor
mov
jmp
and
andl
insl
pop
fcoms
adc
or
push
push
mov
inc
call
add
mov
sub
xchg
pop
je
sbb
or
sub
stos
push
dec
sbb
loopne
mov
aam
mov
lods
lock
push
mov
adc
scas
sti
outsl
pop
sbb
pop
push
jmp
movsl
add
push
jle
dec
xor
fbstp
icebp
inc
lahf
stos
add
adc
imul
jbe
mov
add
jmp
mov
andb
xor
and
aad
dec
dec
nop
sub
sahf
add
xchg
sub
adc
jmp
xor
sti
mov
and
lock
sub
mov
sahf
daa
sbb
mov
dec
sbbb
loop
or
sarb
and
sbb
das
scas
push
nop
addr16
and
jo
mov
rcrl
mov
push
cwtl
mov
cmp
mov
out
daa
add
and
arpl
and
dec
jnp
lahf
aad
aaa
data16
sbb
gs
dec
xlat
and
xor
dec
insb
fisttpl
sub
inc
sub
and
adc
mov
push
mov
fsubrs
mov
add
lds
add
rclb
mov
sarb
sub
ja
outsb
lods
mov
cmp
xchg
loope
add
cmc
inc
add
jecxz
subb
js
shll
out
lock
int
mov
pop
sbb
jo
hlt
testl
adc
xlat
mov
fcoml
mov
cmp
stos
mov
mov
sbb
out
xchg
test
adc
movsl
in
xchg
sbb
cmp
shlb
push
in
andl
adc
xchg
mov
lcall
inc
jmp
xor
pop
ficomps
pusha
xor
insl
andl
push
fsubrs
out
and
pop
jno
inc
shlb
je,pn
fisubs
or
adc
mov
insl
pusha
sub
sbb
or
mov
dec
push
or
lret
mov
fcmovne
adc
stos
adc
or
fisttpl
xor
insl
ret
sub
cmp
jle
push
mov
leave
pop
push
outsl
je
and
dec
jp
test
add
pop
test
add
add
lods
test
jnp
mov
add
jne
push
or
das
push
pop
les
sub
cmp
xor
xchg
call
ds
pushf
fsubrl
ret
ss
and
add
xor
inc
adc
mov
add
loop
mov
test
pushf
or
fistpll
pusha
in
in
mov
mov
lock
call
shll
out
push
cmp
xchg
or
mov
pop
sbb
mov
inc
and
xchg
lock
jo
sti
push
aas
jp
pop
mov
inc
jle
dec
insl
dec
mov
sub
jge
lock
out
repz
sarl
jbe
addr16
mov
daa
into
inc
in
int3
insl
imulb
lds
xor
or
mov
add
enter
ja
adc
xor
icebp
lcall
xorb
fwait
ss
and
orl
loopne
add
mov
mov
ja
mov
lret
fsubl
shr
jbe
push
mov
call
add
in
nop
dec
data16
pop
ja
push
leave
rol
ljmp
or
sbb
mov
fwait
mov
fisttps
orl
idivb
outsb
mov
test
lods
jmp
sbb
push
orb
fldt
aad
adc
loop
loop
aam
andl
xchg
cmp
movsb
mov
lods
shll
inc
jp
ljmp
int3
enter
pop
push
scas
xchg
cmp
fwait
imul
bound
push
fcmovnu
lods
cmp
xor
jecxz
rorl
dec
test
fsubrs
int3
outsl
sub
gs
inc
and
jne
fildll
sar
push
pop
mul
xlat
sarb
mov
movsl
pop
aas
and
aas
cli
push
std
mov
pop
out
in
inc
add
js
sbb
fdivp
jbe
inc
test
cmc
aad
jecxz
icebp
stos
mov
xor
fidivs
mov
icebp
dec
adc
popf
sbb
push
cli
in
add
sbb
out
or
mov
mov
fdivrs
xor
dec
cli
jmp
lret
mov
push
ss
sbb
les
outsl
shrl
sbbb
ret
aaa
andb
scas
js
orps
xchg
sbb
inc
adc
pop
cli
ret
mov
outsl
cmp
cmp
mov
jmp
push
mov
inc
aam
xlat
push
push
notl
mov
jne
fiadds
jp
or
call
xor
es
test
data16
sbb
inc
lods
dec
sub
xchg
xchg
fistl
cltd
fimuls
xchg
add
aas
fsubrl
jnp
sar
js
mov
jb
jmp
pop
popf
mov
adc
sub
insb
sbbb
and
xchg
jl
push
inc
loope
cmpsb
or
testb
xchg
inc
mov
lea
loopne
mov
push
cmpsb
cwtl
lret
cmp
in
pop
loopne
mov
hlt
movsb
adc
popa
jmp
hlt
stos
sbb
jl
jne
in
fwait
cli
mov
xchg
scas
adc
and
shrb
in
into
push
inc
ds
xor
aam
mov
inc
push
sub
ljmp
into
xchg
ja
or
inc
ja
mov
push
push
out
imul
dec
aas
add
xchg
int
add
test
pop
and
inc
mov
mov
mov
je
jmp
jae
mov
lea
mov
jne
mov
xchg
lret
xchg
jnp
shlb
adc
add
les
jmp
movb
inc
das
js
test
aad
fcmovb
imul
fs
or
dec
ds
mov
lret
sbb
lret
lods
add
push
and
inc
push
pop
dec
lcall
fdivr
das
adc
sbb
mov
adc
adc
inc
popa
and
psllq
dec
das
adc
push
ds
or
test
insb
ret
xchg
dec
push
mov
or
rolb
jne
add
push
daa
cmc
cmpl
pop
push
add
rol
jmp
pusha
shl
mov
push
clc
xchg
aam
mov
mov
or
and
pop
jae
ret
lds
fiaddl
jg
repz
mov
addr16
jnp
js
dec
push
and
mov
jg
sar
inc
jge
push
add
xor
insl
subb
push
sbb
stos
mov
in
push
jmp
mov
and
jg
jnp
xchg
cmp
jecxz
lahf
les
sahf
ljmp
dec
push
adc
insl
add
mov
mov
cmp
insb
push
aam
or
pop
int3
mov
xchg
mov
xchg
aas
in
cs
xor
mov
popf
popa
repnz
cmp
dec
mov
out
sbb
mov
sub
xor
and
repnz
sbb
call
gs
aam
and
dec
pusha
jno
mov
lds
xor
xor
aaa
xor
je
mov
fs
dec
adc
dec
lahf
sti
fstpt
pop
loope
pusha
xchg
add
jecxz
push
xor
jecxz
je
sbb
mov
aad
adc
mov
sbb
jno
insb
insl
fsubrl
lret
std
stos
sbb
call
xchg
dec
mov
sub
icebp
dec
cmpsl
ret
cmpsl
les
mov
cli
push
adc
or
xchg
adc
pop
or
mov
pop
and
scas
xchg
and
mov
call
imul
aas
sbb
cs
mov
inc
cli
rcr
loopne
je
jl
sub
sub
aas
cmp
scas
hlt
dec
pop
fnstenv
loope
push
jmp
jns
dec
insl
pop
sbb
fwait
ss
mov
mov
push
mov
arpl
ljmp
pop
iret
pop
push
xor
imul
xor
outsb
jnp
scas
sbb
dec
test
mov
pop
jbe
test
out
cmp
mov
inc
xchg
sbb
test
sbb
inc
xor
mov
push
clc
dec
add
push
mov
mov
shlb
dec
mov
rcr
mov
fs
stos
mov
shlb
xor
push
mov
jle
cs
mov
sbb
ljmp
mov
jl
fildl
mov
stos
mov
insl
push
fwait
pop
xchg
sbb
out
mov
push
aam
cmc
stc
pop
or
inc
enter
or
popf
adc
popa
mov
lret
dec
inc
mov
sbb
sbb
sahf
shr
jo
cs
je
fwait
xlat
nop
mov
mov
fnstcw
sub
stc
xor
xor
add
and
call
push
clc
loop
and
sbb
mov
pusha
scas
repz
cmp
fsubr
fldt
dec
pop
rcrb
jo
mul
arpl
in
in
std
mov
mov
cli
in
add
dec
sbb
cmp
insl
xlat
ja
andl
xchg
push
bound
fs
movb
cmp
xchg
adc
push
mov
das
mov
sub
pop
imul
mov
and
dec
xchg
stc
mov
xor
sbb
or
and
inc
sub
or
xor
daa
adcb
mov
and
xor
jmp
or
sahf
sbb
pop
mov
add
jmp
jmp
cmp
mov
lea
mov
cli
sub
mov
in
pop
or
inc
lock
pop
cli
push
insb
inc
push
sub
inc
fwait
add
orb
hlt
fnstsw
adc
in
cmp
inc
dec
sbb
adc
adc
call
or
repnz
hlt
push
xchg
lret
daa
add
mov
cmp
adcb
xchg
ret
inc
push
mov
and
xchg
cmp
out
sub
and
push
cmp
adc
lret
mov
mov
in
xchg
add
push
dec
mov
xchg
popa
dec
mov
push
imul
gs
cli
orb
push
push
mov
xor
add
loop
cmp
mov
popf
fs
pop
movl
push
sbb
cmp
lret
rolb
lcall
stc
jns
sbb
or
push
pop
push
ja
out
add
jns
or
rcr
insl
mov
ljmp
xorl
pop
mov
adc
lahf
jecxz
add
mov
gs
add
lock
inc
rol
xchg
mov
mov
aam
repnz
stc
mov
jmp
mov
fwait
or
mov
mov
pushf
test
and
jne
test
outsb
push
sbb
push
daa
test
add
push
adc
pop
divl
aam
stos
lock
arpl
fwait
xchg
sbb
dec
inc
ja
aad
mov
mov
mov
inc
jecxz
mov
pop
dec
sbb
daa
fcmovb
pop
insb
push
dec
push
dec
popf
pminsw
mov
cmc
push
in
ret
xchg
movsl
mov
movsl
fistpll
dec
cmovns
mov
sub
sub
das
mov
mov
in
sti
leave
pop
lods
pop
das
test
inc
decb
test
rcl
into
test
dec
push
mov
insb
sbb
or
inc
push
sub
mul
divb
lds
aas
xchg
out
cmp
fsubs
pop
ret
cmp
xor
outsb
mov
xor
popa
pusha
or
sub
and
push
add
adc
repz
push
iret
sbb
inc
iret
test
adc
movsb
xchg
sub
pop
sbb
adcb
daa
and
scas
push
mov
jle
xchg
inc
faddl
pop
dec
cld
add
stos
lock
jl
data16
or
out
inc
push
fsubrs
lret
arpl
sbb
movb
fstl
loope
out
call
mov
call
xchg
fisttps
and
outsw
xor
fwait
inc
sub
test
xor
test
or
out
xor
rcr
jp
dec
mov
xor
movsl
mov
shrl
test
xchg
pop
pop
or
test
fadd
xchg
repnz
sbb
flds
test
and
ja
test
pushl
call
mov
sbb
xchg
inc
push
xchg
stos
mov
hlt
xor
xchg
xchg
shl
ja
push
clc
fdivrl
add
shrl
pop
mov
push
mov
das
push
scas
mov
inc
jbe
mov
push
adc
xchg
mov
mov
mov
sarb
bound
dec
rorb
aad
sarb
idivb
jle
or
mov
jo
add
adc
mov
pop
shlb
xor
and
aam
and
dec
stos
xor
test
ds
or
or
push
movsl
pusha
and
xchg
stos
addr16
inc
lds
xor
sub
sti
ss
sbb
aas
leave
in
dec
or
adc
push
imul
mov
sub
outsl
jecxz
test
add
sub
sub
ja
loopne
js
cmp
fwait
or
mov
repz
or
iret
sub
das
js
outsl
jns
std
mov
pusha
test
call
sbb
cmp
dec
popf
add
and
inc
out
xchg
ja
jne
lea
popa
xchg
popa
rclb
pop
sbb
data16
dec
hlt
jp
cld
addb
push
ljmp
adc
inc
imul
inc
mov
jmp
dec
lahf
push
test
cmp
stos
cmp
jp
js
push
inc
loope
mov
pop
pop
shl
mov
aad
test
xchg
mov
lret
fdivrs
push
mov
and
jmp
and
cs
faddl
mov
ror
push
rcl
fwait
or
cmp
mov
mov
iret
sub
fnsave
call
outsl
stc
inc
aaa
outsb
pop
pop
fistpl
adc
jns
mov
call
xchg
fcmovb
fists
mov
leave
cmp
and
stos
mov
or
or
cmp
lods
ficompl
mov
insl
cs
rcl
lock
dec
movl
aas
mov
les
jmp
xor
xchg
test
fmull
das
pop
cmp
in
sahf
sbb
mov
ret
jb
push
pop
dec
push
jecxz
bound
jmp
mov
sti
mov
lock
in
nop
mov
push
adc
jno
pusha
adc
sub
icebp
aam
js
push
fimuls
mov
adc
sub
mov
sbb
loopne
inc
xor
sbb
das
invd
mov
cs
xchg
lods
sti
orb
icebp
orl
cli
cmpsb
repnz
add
inc
mov
or
imul
push
rcrb
push
insb
ja
sub
mov
ljmp
rorl
lods
or
add
outsl
imul
jg
test
xchg
test
outsb
outsl
mov
or
mov
sbbb
sbb
mov
adc
mov
popf
sbb
pop
add
mov
mov
stos
js
and
rol
mov
sub
jno
data16
fs
faddl
rcrl
aas
cwtl
addr16
repz
repnz
push
xor
xchg
ss
mov
xchg
jge
sti
sbb
sbb
clc
xchg
push
test
lds
insl
int
jecxz
mul
test
mov
cmpsl
pop
cld
sub
mov
xor
je
push
dec
pop
adc
stos
add
sub
push
jp
jp
push
jo
adc
mov
xor
pushf
xchg
out
pop
xor
dec
shll
aad
dec
push
cmp
cmp
push
ljmp
ret
idiv
fbstp
sbb
inc
mov
and
mov
clc
mov
je
sbb
inc
inc
mov
mov
insl
ret
aad
shll
clc
pop
mov
pushf
loopne
push
in
jp
mov
push
fs
loope
jae
out
mov
ficoms
fiadds
xchg
add
inc
jmp
pop
outsl
les
lods
pop
in
jno
mov
daa
pop
push
xor
out
fiaddl
adc
pop
pop
in
int3
xchg
xchg
add
mov
hlt
test
addr16
mov
cmp
mov
push
loope
pusha
jbe
stos
test
inc
pop
aaa
xor
mov
addb
ret
dec
insb
add
cmpsl
outsb
dec
lea
dec
xchg
shrb
jne
fucomi
jmp
scas
add
ss
je
mov
push
repz
xchg
call
jbe
clc
int
and
adc
xor
xchg
sbb
sbb
pusha
lahf
push
bound
mov
add
ret
sti
jno
inc
mov
out
lock
aas
dec
mov
push
adc
sub
in
call
sub
push
xor
test
xchg
stc
lea
jo
das
sbb
mov
mov
outsb
int3
out
xchg
pushf
and
add
xor
in
push
xchg
add
sahf
jae
or
insb
mov
cltd
pop
imul
imul
into
into
test
mov
mov
pop
jo
out
stc
inc
xor
call
sbb
ljmp
int
cmp
enter
lock
in
in
mov
sbb
dec
push
sub
and
cmp
adc
jne
and
mov
mov
iret
mov
adc
jae
pop
ljmp
pop
insl
pop
sbb
xor
pop
xchg
aas
shlb
test
xchg
icebp
fnsave
or
or
mov
mov
dec
mov
xor
inc
iret
js
xchg
jo
ficomps
int
sub
and
imul
inc
jmp
mov
fisttpl
ffree
pop
and
jbe
fisubs
pushf
cmp
and
mov
outsb
add
sub
sbb
mov
push
and
sbbl
inc
jge
jmp
push
inc
inc
jge
test
mov
xor
mov
dec
ds
loop
ret
jle
cltd
xor
mov
out
lods
into
inc
es
mov
mov
or
or
sbb
and
adc
sbb
iret
lods
lea
sub
roll
inc
and
jle
aam
insl
add
jge
push
ds
cld
sub
lahf
push
jecxz
dec
inc
add
jo
data16
ret
mov
lcall
mov
mov
dec
mov
jl
mov
sub
mov
in
or
mov
push
adc
ljmp
fcmovnu
mov
xchg
call
mov
frstor
loope
xchg
add
ret
loop
call
jnp
xchg
fsubrs
fwait
data16
pop
iret
fdivp
dec
or
adc
inc
sbb
cmpsb
xchg
xchg
push
rorb
jge
data16
dec
and
or
mov
ss
aam
hlt
jo
cltd
aas
jl
cltd
les
insl
jnp
jbe
sbbb
sub
leave
sbb
jge
dec
xor
lock
xchg
dec
dec
xor
fbld
sbb
sbb
push
xchg
into
daa
mov
adcb
dec
cmp
cmp
fisttpl
das
inc
incb
test
adc
stos
jns
popa
add
add
mov
jge
push
xor
dec
cltd
pushf
fsubr
mov
call
adc
sarl
or
dec
cmp
and
xchg
adc
shll
push
pushf
mov
sbb
shll
jo
jnp
push
jo
jae
movsb
fistpl
push
pop
sbb
pop
jb
sub
lods
fsub
ret
outsb
push
xchg
mov
xor
shrb
test
mulb
mov
sub
ret
scas
inc
sub
aaa
push
pop
xor
pop
test
insl
sbb
test
mov
cwtl
ret
fwait
push
dec
xchg
lods
fsubp
lock
mov
mov
xor
sarb
call
rcrb
lods
dec
inc
fbstp
mov
push
sbb
ret
mov
sbb
daa
and
mov
jno
arpl
enter
test
repz
mov
sbb
mov
adcb
bound
test
xchg
mov
outsb
mov
mov
or
sub
mov
jg
inc
dec
mov
rol
cwtl
cwtl
xchg
mov
subl
adcb
pop
lret
stos
add
mov
js
mov
mov
mov
inc
out
xchg
fistl
es
sbb
inc
inc
pusha
mov
outsb
call
loop
mov
bt
pop
in
mov
cmc
out
push
mov
and
es
cmp
rolb
sarb
daa
fsubrl
dec
les
mov
mov
cli
inc
pop
ljmp
pop
jp
hlt
pop
and
fwait
cmc
ret
out
aas
add
push
stos
stos
and
rorl
push
cltd
clc
mov
inc
std
inc
dec
mov
incl
loopne
jmp
xor
sarb
adc
mov
mov
sub
outsb
pop
lahf
mov
pusha
cli
les
lods
sub
pop
cs
aas
stc
test
cmpsb
lods
inc
pop
aas
mov
lcall
push
sbb
pop
mov
stos
bnd
leave
mov
dec
cmp
cmpsl
mov
shl
adc
pop
xchg
pop
pushf
cli
mov
add
pop
mov
cmp
mov
add
cltd
popa
fs
ss
mov
lods
addl
mov
fadds
sbb
sbb
lods
popf
das
cli
and
rcl
addl
addr16
clc
pop
stc
clc
rcrb
fcmovu
idivl
cmpsb
cmp
stos
das
sbb
jo
les
xchg
cvttps2pi
mov
mov
in
adc
mov
and
je
sub
or
push
pusha
jmp
decl
adc
frstor
sbb
xchg
ret
pop
cli
and
mov
cmpsb
mov
push
jecxz
mov
xor
jg
movb
add
and
loope
xchg
xor
lahf
fisubrl
sti
mov
mov
repnz
push
test
push
addr16
dec
mov
mov
loopne
xchg
and
popa
cli
in
push
clc
or
sub
orl
pushf
cmp
rcrb
add
or
rorb
or
in
cmpb
inc
gs
jbe
add
clc
adc
dec
xchg
test
push
in
clc
outsl
cld
out
stos
mov
stos
in
xchg
pop
mov
jmp
xor
mov
ret
xchg
mov
and
mov
mov
lods
mov
in
pop
sub
movsl
ss
jecxz
cmp
out
mov
bound
stos
hlt
add
adc
dec
arpl
push
call
mov
jo
xor
int3
xor
fs
sbb
adcl
ds
inc
rdtsc
pop
jne
rclb
push
ljmp
iret
cmp
xchg
mov
or
mov
adc
lods
loop
pop
pusha
leave
xor
mov
aaa
inc
dec
test
or
pop
mov
sbb
jle
mov
jecxz
add
rorb
outsl
into
jbe
cmc
push
pushf
sbb
xor
mov
push
js
mov
mov
or
mov
aam
mov
add
in
push
xor
xor
xor
stos
stos
ds
shlb
push
icebp
sub
fnstcw
adc
int
inc
sub
movsl
mov
daa
add
das
cmp
aam
push
aas
dec
lods
lahf
xor
out
xor
push
jnp
cmc
stc
pop
or
push
gs
dec
shll
out
push
mov
push
mov
mov
jge
das
mov
loop
and
pop
dec
outsb
push
mov
jno
push
popa
dec
ljmp
call
mov
mov
mov
xchg
and
mov
aad
rcl
mov
insb
jl
pop
push
inc
ss
loope
inc
rolb
shr
fdivl
movsb
pop
jno
outsb
cmpsb
pusha
xchg
xlat
mov
sub
clc
std
dec
lods
sub
out
push
sub
xor
or
test
inc
mov
cmp
mov
call
pop
fucomp
inc
js
es
hlt
and
inc
and
cmp
cmpsb
lcall
push
xor
and
add
ds
inc
add
push
push
faddl
dec
addl
mov
xor
popa
adc
mov
shlb
les
lret
fs
and
orb
or
sub
cmpsb
mov
mov
fidivs
lea
adc
adc
jne,pn
sarl
fwait
cli
movsl
push
pop
inc
pusha
xor
inc
add
call
inc
mov
aas
xlat
mov
cld
push
push
enter
mov
ss
xchg
je
adc
or
shlb
mov
push
incb
stos
or
and
lds
imul
incl
stos
adc
pop
push
out
pop
xor
je
repnz
add
mov
mov
cs
adc
loope
ds
inc
add
pop
lods
jl
dec
insl
pop
cli
pop
mov
fstpl
sbb
and
lret
das
jb
sub
rol
dec
enter
lods
ss
dec
fsubrl
sub
mov
push
pop
inc
pusha
sbb
sbbb
jmp
and
add
push
ds
and
movsl
enter
nop
sbb
jmp
push
xor
xlat
or
scas
jecxz
repz
lea
or
es
push
call
push
cmp
sbb
dec
call
rcrl
mov
jnp
shrl
or
xchg
cwtl
rcll
loopne
sbbb
ja
dec
mov
cmpsl
adc
or
mov
test
sub
cmpsl
inc
je
cmc
mov
pop
fsubr
imul
leave
test
in
jmp
add
fadd
and
js
lds
adc
pop
mov
fwait
adc
outsb
and
nop
inc
adc
push
cmp
cs
cmp
push
in
mov
lea
stos
push
jne
and
clc
cs
jbe
sbb
notb
adc
and
mov
arpl
xchg
pop
push
or
mov
sahf
adc
mov
or
push
dec
cmp
clc
pop
js
fdivs
sub
sbb
dec
jle
push
push
sub
xchg
ret
jae
mov
sbb
ss
sbb
cmp
ret
hlt
pop
fildl
and
xchg
dec
inc
mov
jae
mov
mov
sbb
popa
or
mov
jmp
push
or
mov
mov
adc
or
orl
mov
loopne
andb
clc
or
loopne
adc
inc
and
jmp
loopne
adc
xchg
test
hlt
mov
fnstcw
dec
jnp
call
orb
stos
mov
sbbb
xchg
leave
enter
testl
div
sbb
clc
and
mov
into
out
xlat
push
shlb
lock
jp
in
xchg
in
push
and
out
or
adc
je
daa
push
test
pop
jae
ss
movsl
xlat
movsl
pop
jae
add
js
rorl
mov
or
loop
inc
jg
mov
imul
gs
in
lret
ljmp
rcl
lcall
outsb
les
mov
pusha
stos
add
push
outsb
insb
icebp
repnz
dec
lock
mov
lahf
pop
sbb
sub
mov
or
sahf
ret
lret
xchg
inc
pop
ds
iret
stos
negb
inc
loope
ficoml
jecxz
lret
push
cmp
dec
insl
sub
mov
shl
mov
jae
mov
sub
test
push
xor
test
mov
repnz
jbe
sbb
data16
inc
bound
xor
and
ret
and
jne
xor
std
fstpt
push
nop
cmp
dec
fnsave
aam
das
ffree
pop
xchg
ret
in
pop
nop
mov
test
cmpl
std
jne
xchg
mov
xchg
sub
xor
mov
lea
mov
aaa
push
mov
cmpsb
lods
sti
jo
loope
mov
test
pop
dec
mov
je
mov
andl
push
xor
xchg
jl
cld
and
pop
addr16
jo
test
pop
pop
push
xlat
add
loopne
xor
adc
outsl
in
mov
loop
xchg
cmp
adc
dec
adc
push
pushf
jae
test
xor
rolb
xor
outsb
mov
sahf
cmpsb
cmpsb
mov
jo
pop
mov
mov
shrb
dec
xchg
pop
shlb
stos
sbb
ds
scas
rcl
or
fidivrs
iret
test
lock
mov
jne
test
xchg
scas
mov
mov
iret
or
clc
iret
scas
pop
js
repnz
pop
fldt
fsubrl
cld
add
adc
orl
push
les
jecxz
mov
pop
adc
stc
jg
xchg
mov
mov
jge
adc
lcall
mov
and
inc
sub
stc
pop
call
xchg
and
add
push
jne
mov
or
jl
fdivl
cmp
into
adc
call
ret
jp
je
xor
push
pop
fwait
pushf
jecxz
fdivs
je
leave
in
pop
mov
dec
rorb
cs
insl
out
push
sti
sbb
shrl
std
fistpl
xor
xor
jo
repnz
jne
fdivl
test
jnp
bound
push
aaa
dec
rorl
push
jle
jl
std
cwtl
xorl
es
fisubrs
rorl
je
push
inc
mov
sub
mov
pop
clc
ja
addr16
sahf
mov
test
stos
aad
aas
mov
ret
and
subb
push
and
xor
jmp
pop
call
jnp
in
out
and
test
cltd
call
xor
push
outsl
mov
lds
push
and
lods
mov
jmp
cmp
xsha1
cmpsb
mov
lods
jmp
ret
lahf
ret
hlt
mov
jmp
push
or
pop
pop
and
fcomps
inc
inc
scas
or
or
roll
ret
lret
sub
or
and
addr16
inc
das
hlt
cmp
iret
jnp
add
in
mov
inc
popa
rcl
cmp
es
jmp
xchg
jle
ljmp
dec
lret
jno
pop
test
pop
incl
outsb
adc
aad
xlat
add
jl
or
sbb
cmpsb
int3
sarb
add
mov
and
push
push
sub
daa
push
test
dec
in
call
add
in
fwait
push
pop
inc
out
inc
pop
dec
scas
filds
xchg
mov
sbb
sub
insl
fsubs
into
aad
lahf
xchg
aam
in
icebp
add
mov
adc
adc
dec
xchg
cmp
lcall
mov
cwtl
sub
in
notl
fimull
repz
xchg
test
fiadds
push
mov
pop
cmp
dec
cmp
in
je
xchg
je
and
int
pop
and
outsl
shll
pop
sub
addr16
jl
decl
or
mov
jge
outsl
mov
or
sub
mov
in
adc
loopne
shr
js
mov
test
sbb
or
xor
mov
push
stc
movsl
movsl
rorb
push
cs
shl
xor
or
push
dec
mov
cld
push
sbb
sbb
jl
mov
stos
aad
add
mov
cmp
adc
or
cld
and
jb
andb
push
sub
ret
xchg
dec
mov
test
jae
sbb
mov
enter
das
dec
sub
lods
sbbb
mov
push
cmp
lret
loopne
jmp
test
ret
aaa
cli
out
jp
aad
test
lahf
test
mov
movsl
sbb
pop
pop
aad
pop
adc
mov
mov
mov
add
mov
pop
or
lea
popl
mov
jo
daa
jecxz
fistpll
in
out
cmp
clc
aas
sbb
xchg
pop
roll
int
mov
js
aas
mov
shrb
ljmp
ret
lea
push
fcoml
adc
dec
adc
push
jmp
cs
repnz
sub
jbe
inc
mov
fstpt
mov
xor
leave
movsb
push
ss
sahf
cmpsl
inc
sti
mov
jp
or
imull
mov
insl
imul
clc
repnz
push
pop
rcrb
ss
rorl
cmp
leave
int
call
ss
mov
adc
cmp
sti
repnz
jg
int
cmp
or
icebp
push
dec
dec
lret
sub
inc
cmp
cmpl
adc
ds
mov
scas
push
or
out
cs
sbb
psrlq
dec
sub
inc
push
aas
pushf
loopne
sub
cli
sarb
pop
rcll
jbe
cmp
push
adc
cmpsl
mov
or
jle
out
xor
jbe
shlb
cmpsb
pop
ja
and
sbb
or
aas
add
repnz
push
sti
push
inc
inc
in
or
loope
hlt
repnz
jmp
add
movsl
jmp
push
inc
repz
aas
and
add
mov
dec
sbb
sbb
pop
inc
mov
iret
arpl
decb
or
mov
jno
gs
cld
adc
pop
idivl
cmp
dec
iret
mov
gs
cs
jmp
xor
sti
fwait
push
in
pop
and
cltd
xchg
or
mov
xor
xchg
or
mov
and
jbe
sbb
mov
roll
or
adc
jb
inc
add
pusha
sbbl
lret
mov
push
mov
cmc
jae
jae
xchg
dec
sbb
into
test
je
push
jbe
fdiv
pushf
and
and
fwait
mov
fdivrp
outsl
shlb
shrb
xchg
mov
movsl
pop
hlt
and
decb
mov
aad
ljmp
rorb
mov
stos
push
xor
popf
cmp
stos
lock
jg
fisttps
lods
push
xchg
xlat
divl
mov
and
mov
xchg
leave
je
add
in
aam
rcr
call
and
lock
mov
jecxz
cld
pop
xor
js
cli
xchg
xor
adc
clc
jns
mov
xchg
jge,pt
or
xor
push
das
lcall
js
add
test
sbb
xorb
out
cmpsb
cmpsb
mov
cmp
dec
std
mov
lods
test
and
ffree
sub
lret
or
cmp
inc
movsb
adc
sbb
adc
pop
loop
mov
pop
or
mov
add
fs
and
and
call
mov
push
fsin
ljmp
std
inc
add
sbb
mov
sub
inc
jae
mov
inc
adc
test
mov
pop
out
aas
aad
fwait
inc
ficompl
std
insl
or
push
stos
std
pop
cmp
sbb
lock
mov
lock
test
ffreep
stos
sbbl
popa
call
dec
dec
xor
outsl
cltd
and
pop
cmp
aas
xorl
add
in
fucomi
aas
mov
sti
jmp
fistl
lods
ss
fucom
jb
cmp
iret
leave
mov
fdiv
lret
jno
rcrb
addb
jecxz
dec
adc
push
ljmp
add
xchg
lahf
mov
sbb
fidivrs
inc
test
jp
sar
or
sarb
rcr
pushf
ja
scas
ret
xor
jge
ss
xchg
dec
cmp
or
push
xchg
push
pusha
es
ret
rcll
test
and
les
inc
stc
movsb
sbb
push
sbb
insb
jo
mov
and
push
push
gs
cmp
jg
push
jnp
jmp
or
stc
and
sub
mov
insb
ja
in
dec
cli
movsl
pop
sub
push
lret
cmp
in
fwait
push
lret
mov
pop
aad
jge
js
mov
insb
adcb
pop
outsl
js
mov
ss
pop
nop
adcb
jmp
xor
negb
pop
dec
pop
mov
rcrl
clc
std
and
add
mov
mov
mov
dec
ss
subb
out
outsb
mov
movsb
mov
inc
mov
sbb
data16
stos
mov
mov
insb
imul
repnz
dec
shrl
test
hlt
loopne
pop
cs
lret
adc
push
mov
iret
and
sub
jns
std
xor
pop
rorl
xor
sbb
je
sbb
mov
add
lds
add
mov
or
mov
out
lret
in
xor
mov
add
pop
push
pop
cmpsb
and
adc
insl
imul
inc
mov
adc
pop
xor
rclb
scas
daa
neg
call
negl
add
fmuls
cmp
or
cmpsl
cmpl
and
jle
scas
mov
mov
push
pop
pop
mov
inc
add
and
test
stos
xchg
decb
shlb
xchg
scas
cmp
dec
in
inc
mov
push
mov
daa
sbb
xchg
dec
lea
pop
andb
pop
leave
push
xlat
in
xchg
bound
lahf
pop
jecxz
add
test
add
push
cmp
lret
jmp
imul
in
js
cmp
pop
adc
in
pop
test
leave
call
mov
outsl
inc
sub
and
pop
incl
les
pop
xchg
in
sub
jmp
fidivs
push
cmpl
test
xor
movsl
cmpsb
mov
loopne
push
push
xlat
xor
jno
out
mov
test
icebp
rorl
adc
fidivl
and
fmuls
clc
hlt
and
sbb
xor
movsb
popa
rcll
cmp
shl
sbb
push
fsts
mov
or
and
mov
ret
shlb
and
rcll
push
fwait
jp
add
or
cwtl
ret
jne
push
daa
jle
imul
cmp
mov
loopne
jecxz
jo
pop
aas
mov
mov
ret
mov
mov
jp
mov
inc
push
scas
xchg
xchg
movsb
cs
aaa
lock
aaa
sbb
fs
data16
fnstcw
ljmp
push
insb
push
mov
iret
in
add
dec
fwait
inc
jmp
and
outsb
pop
fstl
shlb
inc
pop
lret
sbb
mov
dec
mov
aas
lcall
cli
xchg
push
add
testl
jmp
and
or
push
pop
in
and
idiv
imul
test
mov
rol
stos
mov
mov
cmp
idivb
loopne
push
sub
je
jle
add
shll
shl
daa
cmp
loopne
jl
push
shlb
push
xlat
inc
mov
and
push
pop
mov
jmp
mov
xchg
mov
xchg
mov
addl
into
adc
fbld
scas
ss
pop
cmpsb
lods
mov
mov
rolb
jo
inc
pop
jg
test
lods
punpcklbw
dec
cli
andb
pop
or
pop
or
roll
fcoms
loop
sub
sub
dec
push
xorb
fdivl
mov
mov
or
rorb
aaa
xchg
or
cmp
popf
dec
lcall
jg
mov
inc
fdivs
mov
inc
push
jnp
shrl
das
cld
push
ljmp
mov
bound
xor
aas
scas
sbb
or
loope
outsl
and
addb
add
mov
sbb
je
in
fdivrl
mov
push
int3
arpl
lock
jle
decl
add
arpl
rorb
jo
push
fiaddl
mov
out
rolb
jbe
jle
cmp
inc
push
cs
mov
and
add
xchg
mov
xor
mov
inc
scas
test
lds
push
stos
pop
or
fcom
cmp
cmpl
cmp
dec
jl
negb
ds
out
lds
fistl
test
jp
fsts
sub
jne
in
add
add
jne
mov
or
or
pusha
mov
jg
loope
outsb
mov
insb
mov
mov
dec
jg
mov
loop
jg
int3
or
jle
cmp
jp
push
inc
pop
lea
jns
sbb
or
in
pop
xchg
in
fldcw
push
shrb
icebp
scas
add
shrl
jg
call
testb
cmp
jg
fs
outsb
pop
or
and
fidivrs
shr
xor
ret
sbb
fldt
loop
mov
ds
ret
mov
stc
cmp
jne
pop
aas
pop
in
sub
cwtl
daa
sbb
adc
mov
aad
outsb
sbb
pop
lret
stos
test
addl
mov
lahf
popa
push
cmp
lea
dec
adc
add
filds
stc
inc
jg
mov
add
cwtl
cli
mov
mov
push
into
xchg
and
dec
paddb
xchg
mov
in
dec
repz
pop
mov
subl
xor
addr16
dec
lods
scas
stos
aaa
lds
andb
sti
sbb
test
mov
mov
jnp
fdivs
das
dec
int
iret
cmpsl
push
std
cmp
and
pusha
scas
jmp
in
je
dec
fdivs
jecxz
cmpsb
add
bound
roll
mov
pop
pop
jbe
cltd
cmp
pop
insl
xor
pop
aam
mov
cmpsb
ss
clc
shrl
popf
bound
stos
fcompl
das
pop
test
aaa
cs
in
xchg
pop
mov
jb
cmp
decb
pop
js
shlb
and
mov
mov
dec
or
gs
push
dec
cltd
mov
pop
cmp
dec
add
addr16
sahf
dec
add
imul
or
dec
inc
faddl
and
xchg
adc
and
data16
push
fidivrs
icebp
sets
arpl
mov
mov
push
push
pop
sbb
sbb
aas
sbbb
insl
rcll
mov
add
adc
push
xor
incb
xor
pop
inc
mov
orb
stos
or
jmp
jo
jb
adcl
lea
mov
mov
les
stos
sti
mov
movsl
das
or
cmp
or
outsl
sub
push
adc
ja
sbb
outsl
mov
mov
repz
sub
xlat
or
fsts
adc
movsl
out
icebp
cwtl
push
sbb
push
xchg
incl
xchg
mov
mov
mov
or
mov
ja
leave
dec
je
movsb
cli
jp
xorl
fdivl
scas
mov
mov
jp
xor
popa
testb
push
call
dec
sbbb
clc
ret
mov
mov
xor
shlb
movsb
mov
add
jno
popf
xchg
fsubrl
jl
loop
add
fildl
decl
mov
jge
sub
ljmp
std
pop
mov
fucomi
testb
cmc
fstpt
leave
jns
xchg
shrl
nop
popf
dec
out
mov
ficompl
pop
out
dec
sub
adc
test
and
adc
lea
xor
lock
cmp
xor
add
inc
mov
data16
add
movsl
icebp
ret
into
js
sub
mov
lea
call
and
sbb
pop
ss
add
pop
int3
or
or
jbe
in
xor
xor
sbb
push
cwtl
mov
inc
push
test
icebp
cmp
aaa
in
cli
mov
fwait
ljmp
add
outsb
pop
jb
sbb
cli
pop
xor
imul
xchg
fcomip
xor
std
fwait
mov
sahf
xor
test
mov
adc
push
mov
xchg
or
sbb
jl
data16
ljmp
lea
mov
cmp
add
sbb
push
lea
sti
push
xor
rcr
call
sbb
sub
das
push
subl
push
inc
insb
movsb
jo
pop
fadds
cmp
add
js
rclb
mov
fidivrs
cmpsb
xor
popa
xchg
xchg
or
adc
adc
sbb
mov
sbbl
scas
xchg
adc
stos
jnp
int
jno
ffree
pusha
ret
mov
xor
ja
mov
push
aas
adc
or
mov
in
call
add
mov
mov
mov
test
xchg
mov
or
pushl
stc
pop
rorl
jbe
pop
idivl
mov
fistpll
cmp
hlt
xchg
sbb
mov
sbb
roll
mov
outsl
dec
xchg
jne
or
imul
jmp
mov
sbb
jb
adc
add
fnstenv
scas
movsl
gs
lahf
add
sbb
add
inc
mov
out
sbb
sbbl
pop
push
fstpt
nop
pusha
movsb
xor
icebp
testb
cwtl
xor
aas
xchg
or
xchg
callw
out
clc
xlat
push
mov
orb
ja
or
test
jnp
ror
out
mov
mov
cmp
jno
aad
leave
loope
mov
andb
xor
bound
ret
nop
sub
out
lock
cmovg
sbbl
jne
fbld
sar
lret
xor
lcall
js
jmp
bound
lcall
jle
lea
add
lcall
lret
or
mov
xor
bound
stos
mov
rol
iret
loop
iret
shlb
dec
cmpsb
sbb
adc
push
mov
add
daa
or
jecxz
and
inc
jbe
insb
sbb
sbb
xchg
fsubs
clc
subb
pop
xlat
mov
cmp
jp
and
imul
add
in
cli
sbb
in
iret
sub
xchg
loope
or
les
mov
push
es
push
aad
add
push
fildll
cld
neg
mov
arpl
femms
pop
fisubrl
add
lock
incb
inc
lea
fisubrl
js
or
cmp
sub
pushf
inc
fimull
cmp
sub
cmpsl
lds
pusha
imul
rcrb
test
icebp
or
mov
hlt
and
popl
mov
inc
test
outsb
out
fwait
and
nop
jae
in
add
lds
adc
fs
mov
xor
ljmp
inc
mov
adc
jbe
test
je
inc
popa
inc
or
inc
or
scas
or
sbb
scas
in
dec
outsl
mov
and
aaa
add
inc
inc
sub
mov
xchg
adc
cmp
lret
call
mov
adc
cmpsl
mov
fldenv
ret
sti
outsb
inc
btsl
lahf
push
sub
xor
mov
xchg
mov
loope
repz
jecxz
mov
push
mov
pavgb
data16
cld
mov
push
insb
xor
xor
pop
aam
dec
add
pop
ds
inc
mov
pusha
sub
sbb
jp
inc
jg,pn
pop
lds
cmp
fbstp
sub
fidivs
mov
jo
outsb
outsl
and
sbb
xorb
mov
pop
unpcklps
and
stos
addl
and
lcall
popl
or
inc
icebp
mov
push
jo
or
adc
repnz
int3
push
in
pop
jb
movsl
push
mov
and
and
xchg
popa
jle
leave
popf
push
decl
add
pushf
orb
mov
dec
inc
cltd
pop
icebp
mov
xor
sbb
aaa
or
push
scas
cmovne
jl
popa
jmp
inc
jnp
nop
outsl
dec
or
mov
testl
mov
stos
dec
or
push
push
adc
lock
andl
and
lcall
xchg
rorl
lods
shll
mov
jbe
add
loope
outsl
push
add
fucomp
and
jg
mov
punpckldq
ret
enter
xlat
leave
pop
cwtl
xor
jecxz
aaa
or
lods
or
mov
jo
cmp
lcall
adc
xchg
aam
xchg
and
and
or
dec
scas
dec
in
dec
or
mov
dec
fs
dec
xlat
sbb
pop
imul
or
lcall
aam
adc
push
out
add
xchg
jne
bound
mov
sbb
dec
mov
inc
jb
out
aaa
mov
jne
iret
and
std
je
add
lods
hlt
pusha
stos
push
out
dec
dec
push
mov
ret
aam
push
pop
mov
adc
jg
mov
mov
mov
andl
jge
and
jl
push
jb
dec
push
fcompl
dec
outsb
pop
mov
add
and
fldenv
lret
jno
fstpt
dec
jge
ljmp
push
sub
pop
inc
icebp
mov
fsubrl
call
sbb
jg
je
outsb
pop
jne
rclb
adc
mov
dec
and
xor
jl
pop
shl
es
inc
inc
cli
aaa
and
jns
into
sti
mov
jae
add
loopne
adc
sub
inc
std
dec
into
sub
adc
cli
mov
stos
sbb
and
rcl
mov
mov
xchg
jns
cmp
mov
mov
lods
inc
inc
out
mov
stc
je
bound
shrb
jne
out
nop
cmpsb
stc
mov
or
jno
pop
aaa
jle
std
mov
sub
stc
push
inc
loope
cli
fwait
xchg
push
aam
jno
jae
lods
and
fcmovb
mov
mov
imul
aaa
popa
mov
bound
lret
ror
in
scas
xchg
leave
ret
mov
and
xchg
inc
add
sbbb
xchg
fcompl
pop
fisttpl
jp
sahf
push
dec
scas
xchg
cmp
inc
xlat
add
bound
pusha
fcmovb
out
mov
jle
sbb
fwait
pop
jo
popa
add
cmc
push
dec
notb
outsb
popa
insl
enter
mov
dec
testb
sbb
int3
gs
push
outsl
shll
dec
outsl
or
jg
xor
inc
mov
pop
cmp
mov
ja
movsl
fnstsw
popl
int3
xchg
fsubr
fidivrl
fs
rcll
xchg
fcoms
pop
aaa
jbe
enter
dec
jg
negl
sbb
pop
mov
jp
jl
das
addb
cmp
addb
mov
xchg
add
sbb
xor
xchg
mov
sahf
mov
or
and
jge
add
insb
sbb
lock
push
loope
mov
nop
cs
or
adc
cmp
test
mov
orb
out
mov
xor
adc
jb
in
pop
mov
in
testb
enter
test
out
ljmp
cmp
out
jae
push
fisttpl
aam
aad
jge
lods
cltd
ret
xchg
mov
ret
inc
incl
rcr
repnz
movsb
mov
jp
xor
hlt
xchg
cmpsb
arpl
lea
pusha
fucomi
push
adc
push
add
lret
fadds
fdivrl
stos
push
adc
aaa
loopne
test
rcr
jle
lock
or
test
ret
jle
mov
sahf
mov
mov
les
xor
xchg
add
push
or
mov
mov
sahf
jno
jl
pop
sub
mov
scas
cmp
dec
dec
mov
push
push
push
dec
xchg
mov
xor
pop
and
arpl
fcmovnu
mov
pusha
adc
jg
out
sbbb
jecxz
sub
sub
xor
xor
test
rcr
js
or
rorb
pop
shrl
jecxz
or
into
adc
in
mov
add
push
lods
orl
roll
out
mov
jae
js
mov
or
xor
mov
adc
mov
dec
pop
sti
adc
xchg
cmp
test
mov
cmp
cmp
sub
push
mov
push
icebp
push
scas
dec
mov
outsb
std
xor
fimuls
cmpsl
scas
pop
rorb
cmp
sahf
or
pop
mov
dec
add
jl
mov
scas
ret
stos
orb
outsl
lock
je
ja
cmp
sbb
faddl
cmp
or
add
and
add
mov
aas
sbb
mov
insl
pushf
orl
pop
out
stos
inc
pop
add
dec
lret
pushf
scas
ret
icebp
rcrl
mov
inc
mov
dec
fucom
or
fcomps
xor
mov
or
test
pop
mov
mov
call
pop
lock
mov
dec
and
sti
jmp
fwait
ret
push
imul
aaa
push
adcb
xlat
idivb
pop
movd
outsb
ljmp
push
orb
inc
fisttpll
sub
mov
pop
fiadds
or
jmp
imul
inc
dec
je
sbb
jno
lds
imul
jmp
adc
mov
mov
or
xchg
sub
pop
lods
or
mov
insl
xor
mov
push
pop
pop
aad
pop
ret
dec
add
push
pop
js
cmpsl
call
push
and
sbb
je
inc
adc
mov
sub
adc
movsb
pop
xor
mov
mov
ja
cmc
add
in
pop
inc
out
lret
jmp
das
outsb
call
mov
mov
cmpsb
jecxz
iret
rol
mov
xlat
aam
mov
pusha
jp
jbe
in
pop
je
rclb
int3
xor
mov
sbb
and
std
insl
popa
ret
cvtpi2ps
lcall
or
int
adc
xchg
add
outsl
aaa
fsubrl
inc
jl
cmp
push
push
out
enter
cmpsl
test
dec
out
jbe
addb
xor
push
mov
int3
outsl
rol
or
adc
jne
sbb
dec
ret
out
aam
jp
inc
add
xchg
mov
adc
jg
inc
dec
mov
sti
ffreep
sbb
movsl
scas
fbld
lret
sbb
mov
jg
cmp
push
push
rorl
js
fiadds
mov
icebp
cmp
adc
or
jno
fsubrl
push
pop
ret
das
insb
das
lcall
xchg
cmp
test
mov
sbb
mov
adc
mov
lret
ss
xchg
mov
adc
outsl
je
mov
sub
subl
cmp
or
jmp
jmp
adc
pop
sub
or
push
int3
mov
xchg
mov
xorb
and
push
push
cmp
ret
sub
or
cmp
lret
int
stos
outsb
adc
jne
inc
idivl
and
cmp
insb
adc
or
enter
sbb
push
repnz
push
movsb
cmp
clc
mov
mov
lahf
mov
jl
sub
sbb
jp
loop
sbb
dec
mov
sub
rolb
mov
add
mov
jnp
mov
cmp
loope
icebp
inc
aaa
sbb
adc
jbe
jg
je
rol
or
xor
jp
add
jecxz
jecxz
xchg
mov
rclb
ffree
dec
hlt
mov
jg
sub
outsl
arpl
mov
or
cld
push
pmaxub
cmp
je
xchg
cltd
xor
sbb
out
insl
lcall
movsl
jle
push
adc
sub
mov
xchg
pop
and
cmp
out
or
dec
xchg
imul
imul
or
and
call
mov
adc
jecxz
inc
out
and
std
pop
adc
jo
adc
imul
xchg
xor
fisubrl
js
jp
add
pop
push
incl
jmp
lret
add
leave
in
aam
dec
lock
lahf
inc
pop
push
das
ja
sub
pop
insl
xor
loope
jmp
fidivs
add
jb
fs
dec
jns
pop
mov
cmp
scas
mov
jmp
js
rol
pop
outsb
test
mov
ja
pop
push
push
jmp
cmp
sbb
mov
mov
mov
or
es
fs
in
mov
mov
xor
rcll
loopne
insb
out
clc
lcall
in
ret
ds
call
cld
dec
iret
aas
cltd
es
mov
rcl
ss
xchg
and
fildl
out
pop
test
sub
add
sarb
lcall
pop
dec
fdivl
jnp
insb
dec
aas
fs
dec
fnsave
inc
ss
xchg
dec
push
xor
adc
out
js
pop
sbb
subl
or
jle
mov
sub
cwtl
cmp
mov
push
aaa
les
xchg
jo
shll
xchg
es
je
add
in
outsb
enter
es
push
in
addb
cmpsb
scas
mov
and
orl
cmp
xchg
cmp
test
mov
dec
imul
in
jle
pop
fistpll
lcall
jns
loope
pop
push
mov
and
clc
mov
jg
adc
inc
cmpsl
jo
xor
jecxz
pop
scas
test
push
cmp
mov
jg
fs
imul
pop
jo
sbb
sti
add
outsl
sti
add
jae
pop
sbb
testl
mov
icebp
outsb
in
fwait
mov
ret
xor
fisttpl
xchg
adc
das
test
insl
fcmovnu
mov
cmp
dec
pop
cld
mov
popf
push
addr16
mov
dec
mov
repz
stos
xor
and
jg
jo
mov
cmp
sub
add
jle
cs
push
dec
sub
mov
adc
mov
ja
mov
inc
inc
push
ret
or
clc
call
popf
fdivrs
pop
xchg
out
out
inc
inc
push
jp
fbstp
adc
xchg
and
xor
xlat
loopne
push
pop
mov
repz
fildl
mov
xor
icebp
inc
loopne
not
pop
cmpsl
inc
jmp
es
or
gs
in
or
test
shll
inc
lret
in
fwait
sub
ret
mov
add
pop
sub
sbb
xor
in
mov
or
fbld
cmpsl
add
popf
mov
mov
sbb
sbb
mov
pop
mov
xor
push
cmp
js
or
frstor
test
cli
pop
clc
mov
push
test
lds
dec
push
stos
inc
pop
inc
mov
lods
insb
push
pop
leave
sbb
jmp
mov
jae
push
or
sub
fldl2e
push
mov
add
das
mov
in
and
xchg
adcl
outsl
jo
dec
or
sbb
sti
jb
jbe
sub
insl
fadd
xor
or
jo
std
in
or
jne
loopne
or
clc
aaa
jbe
cltd
popf
lds
jl
icebp
mov
js
sub
je
stos
xchg
movsb
push
push
aas
shll
jg
xchg
mov
popf
js
push
fistpll
test
jp
cmp
adc
sub
in
mov
mov
ljmp
popa
pop
add
and
mov
jl
leave
mov
cmpb
mov
and
test
lods
in
fdivr
std
sbb
jl
rcrb
outsb
dec
cmp
cmc
mov
sbb
and
fwait
xchg
jecxz
fistpl
js
pop
pop
incl
push
js
adc
pop
in
jmp
ja
ficompl
add
scas
push
adc
pop
push
dec
jo
dec
hlt
and
stos
mov
or
fiaddl
sahf
mov
mov
cmp
mov
rclb
cmp
cmp
jae
orl
mov
mov
dec
out
imul
out
movsl
cmp
addl
add
das
notl
stos
test
loope
hlt
test
fst
add
adc
pushf
mov
outsb
inc
inc
mov
mov
xchg
icebp
sbb
push
jne
pop
icebp
push
xor
test
mov
or
mov
scas
icebp
xchg
rcr
mov
mov
cs
sbb
push
jns
fsubrs
sti
and
adc
fs
jmp
fidivrs
incb
lret
mov
aas
in
mov
inc
mov
pop
mov
and
les
and
lea
add
sbb
dec
adc
jp
idivl
lods
sub
scas
or
arpl
cmc
jecxz
push
sub
cmpsb
dec
stos
dec
push
or
mov
lods
xchg
xchg
comiss
pusha
cmp
mov
and
loope
or
dec
xlat
sbb
xor
int
mov
scas
fistps
push
ret
xor
lret
loop
enter
cvtps2pd
call
cmpsl
test
pop
cmc
inc
imul
lret
push
fistl
in
xchg
in
jge
or
inc
mov
mov
or
cmp
cs
push
sbb
mov
sub
xlat
test
lahf
mov
enter
sub
lret
pop
pop
clc
mov
pusha
pop
std
test
aaa
xchg
xchg
or
fildl
call
sbb
sub
mov
xchg
mov
lea
xchg
xchg
lods
psadbw
lea
inc
gs
orb
mov
fidivs
inc
subl
dec
push
or
mov
out
test
enter
mov
fcoml
outsl
out
push
or
fcmovb
sarb
jbe
sub
or
and
jo
mov
les
add
cli
or
pop
stos
add
loopne
xor
inc
scas
addr16
and
scas
pop
fnstenv
mov
and
cmpsl
fldenv
or
mov
push
shlb
add
js
leave
or
loopne
push
push
cwtl
pop
mov
jl
out
cmp
imul
fsubrl
in
insl
pushf
cmpsb
insl
orl
pop
fstp
dec
and
loope
xor
jne
and
sub
inc
shrl
mov
data16
mov
sbb
push
shr
test
loope
dec
fstpl
aas
outsl
les
decb
adc
aad
mov
stos
mov
cli
jbe
movl
xor
in
pusha
adc
pusha
ds
lahf
orl
inc
cmpsb
ss
pop
sbb
mov
cwtl
mov
adc
push
dec
test
cld
out
mov
popf
popa
push
cmp
pop
subb
sbbb
loope
xchg
subl
add
mov
mov
out
adc
cmp
add
pop
repnz
loop
pop
outsb
enter
stc
adc
push
imul
lret
or
das
adc
mov
arpl
cmp
insb
aaa
add
dec
pop
sarl
cli
or
fs
out
dec
ja
or
inc
mov
jp
int3
icebp
sub
pop
push
fcmovu
push
push
or
insl
orl
sti
fxch
mov
dec
outsb
inc
icebp
dec
mov
sub
xlat
or
pop
in
push
sbb
aam
fcomip
fwait
dec
or
mov
mov
aam
mov
fdivs
jb
adc
or
fmull
arpl
gs
jns
jg
test
subl
mov
jbe
outsl
hlt
sbb
or
insl
mov
add
test
into
jno
mov
in
ret
mov
shlb
test
dec
adc
outsb
loop
aad
and
dec
xor
or
cmc
mov
test
lcall
insb
ljmp
outsb
mov
jbe
xor
mov
push
mov
jp
adc
shlb
and
push
add
add
pusha
mov
sub
fcmove
pop
dec
dec
aam
or
xchg
out
or
in
mov
mov
mov
add
je
call
inc
fistpll
sar
pop
xchg
push
mov
nop
icebp
push
cs
lret
bound
subl
fs
hlt
aaa
jne
jnp
mov
pop
mov
sbb
inc
leave
pop
enter
stos
in
add
add
mov
mov
fcmovnu
loopne
popa
fsubl
pop
dec
or
lret
cmpsl
mov
and
hlt
fwait
xchg
mov
ret
xchg
mov
sub
mov
sub
scas
pop
inc
lret
jno
fadds
xor
enter
mul
mov
cwtl
aam
movsb
dec
enter
fdivs
adc
xrelease
js
je
inc
adc
sbb
mov
fnstsw
ljmp
mov
push
nop
sub
lcall
sbb
mov
push
push
cwtl
mov
lock
mov
out
xor
adc
popa
add
sti
decb
adc
arpl
mov
xchg
cs
enter
mov
fcoms
iret
call
enter
test
gs
sub
je
icebp
and
mov
jecxz
pop
xchg
outsb
mov
sub
mov
pmuludq
leave
push
adc
sbb
sub
push
mov
cmc
inc
test
test
jp
jecxz
outsb
pop
sbb
pop
in
xlat
and
or
cmc
jno
pop
rolb
cmp
stos
cmp
xchg
in
xor
pop
sub
ss
mov
dec
outsb
pushf
jns
mov
aad
out
mov
rolb
inc
imull
icebp
div
jmp
and
fimuls
jne
repnz
mov
mov
ljmp
jae
dec
test
shll
or
mov
mov
mov
cmp
mov
shlb
outsl
insb
and
pop
pop
or
fcmovbe
pop
lret
mov
mov
dec
or
cmp
frstor
pop
test
jecxz
push
lock
mov
mov
ret
pop
add
leave
aad
rorl
or
and
sbb
in
push
xchg
pop
mov
sub
sarb
xlat
dec
inc
orl
xor
push
pop
and
stos
leave
in
pop
push
cmp
pop
sbb
outsl
insl
insb
cmp
gs
clc
adc
mov
or
fstl
fcmovnbe
rcr
shl
cwtl
scas
repnz
inc
dec
aaa
rcrl
inc
hlt
inc
adc
mov
mov
shl
push
pusha
pop
loop
dec
lea
jl
jbe
repz
shll
and
mov
or
insb
imul
inc
shl
jae
xchg
mov
jo
lds
mov
sbb
add
sub
sub
ja
xchg
sbb
pop
sbb
fwait
and
cmp
sbb
arpl
arpl
ret
imull
push
push
clc
pop
xlat
fsubl
jne
or
out
mov
sub
ljmp
add
jae
je
loope
cld
aaa
jle
pushl
test
fimuls
adc
test
cld
repz
fwait
sti
adc
ljmp
dec
pusha
pop
fs
sbb
jp
hlt
or
repnz
enter
fildl
push
arpl
arpl
std
adc
or
decb
int3
push
fiaddl
cltd
sub
mov
roll
mov
push
and
hlt
sbbb
and
add
clc
adc
mov
rorl
test
mov
jp
sbb
psrad
test
fnsave
aad
subl
pop
pusha
sti
cmpb
loopne
dec
cmpsb
pop
or
lea
scas
loope
mov
mov
inc
pop
mov
scas
pop
rcrb
andb
bswap
dec
mov
mov
mov
pop
fs
mov
sub
sti
mov
mov
sbb
testl
add
inc
dec
or
push
inc
int
push
jo,pn
sbb
fsubp
push
stos
test
and
jno
arpl
dec
mov
dec
mov
sub
js
shl
xchg
cs
roll
pop
mov
out
mov
mov
adc
int3
cmp
fisubl
fwait
lcall
adc
call
adc
stc
aaa
lods
mov
imul
cmpsl
sub
mov
fdivrs
pop
test
mov
in
dec
xchg
mov
dec
rcr
dec
sbb
ret
data16
js
lea
add
fisubs
call
or
push
nop
add
mov
rcl
popa
ret
dec
ljmp
add
shr
xor
stos
push
mov
bound
mov
mov
loopne
or
lock
mov
fmuls
in
mov
jl
jge
xchg
cmp
mov
movsl
adc
mul
shl
cmp
mov
add
cmpsl
sbb
xchg
push
pop
scas
mov
lret
mov
cli
inc
pop
mov
repz
jne
pop
js
xchg
js
push
icebp
loop
orb
cmp
add
dec
movb
jg
pop
sbb
stos
sub
and
xor
mov
push
xchg
sahf
xor
incl
add
or
ret
movsl
xchg
xchg
add
xchg
xchg
jp
mull
jne
sbb
push
mov
jle
imul
shrl
shrl
sbb
mov
add
mov
notl
sahf
mov
and
push
test
pop
xchg
loope
les
and
sub
push
addr16
fs
jb
pcmpgtw
push
xor
rcrl
arpl
push
push
pop
lods
in
ds
push
andb
in
sub
ss
adc
cmp
inc
jne
mov
sub
pop
push
iret
pop
jae
pop
mov
lods
filds
and
insl
dec
test
inc
mov
pop
push
mov
jle
inc
xlat
pop
pop
mov
and
js
jnp
mov
xor
mov
adc
pop
fadds
jne
or
movsl
outsb
lret
add
pop
cwtl
sub
mov
je
and
mov
testl
pop
pop
aas
out
xchg
or
lret
jg
insl
cld
sbb
add
cld
test
adc
pop
insl
ret
fwait
loopne
lds
adc
sub
adc
cmp
mov
dec
mov
sbb
jbe
insl
mov
loop
fadds
mov
shrb
leave
psignd
shl
cmpsl
inc
fistpll
mov
das
mov
mov
and
and
dec
mov
icebp
push
jg
xchg
jbe
insb
inc
adc
popa
jns
jmp
outsl
mov
or
xchg
movsb
fcmovnbe
adc
ret
testb
push
xor
mov
mov
sub
call
jge
bnd
das
jl
fisubl
sub
mov
push
sarb
fdivrp
pop
pop
in
sbb
fstp
fwait
rcr
nop
sti
mov
inc
mov
lds
aam
dec
xor
jnp
sahf
mov
pop
sbb
pop
mov
xchg
adc
lds
mov
pop
pop
pop
cli
in
add
cmp
inc
jecxz
and
push
cltd
data16
into
add
pop
rcrl
jno
sbb
div
leave
xchg
sbb
and
or
movsl
jge
xchg
xchg
lcall
pop
rcrb
inc
lock
jno
std
aam
lock
adc
and
push
clc
xlat
incl
add
rclb
mov
popa
ret
add
inc
repnz
push
popa
xor
pusha
es
push
jge
mov
sub
push
jns
sub
add
fcomps
lea
fistpl
dec
int
inc
dec
push
imul
outsb
fisubl
lahf
out
dec
popf
cmp
faddl
cmpsl
in
pop
test
aad
ljmp
scas
loopne
loop
shrb
arpl
outsb
scas
popw
pop
pop
jg
int
cmp
inc
push
enter
or
ja
inc
push
lahf
movsl
jmp
or
jle
jno
jno
std
and
test
insl
mov
in
push
adcl
jo
dec
add
jae
dec
jb
icebp
fiadds
push
lock
inc
xchg
add
push
jmp
mov
add
call
or
fisttpl
pop
mov
imul
cmp
mov
adc
pop
mov
sbb
mov
add
dec
pop
xchg
add
push
add
mov
xor
jmp
jmp
push
sbb
test
mov
out
cmp
xor
dec
jp
daa
out
ds
lea
pop
pop
mov
mov
idivb
popa
fidivrl
or
mov
dec
push
add
push
mov
jbe
add
js
in
inc
popf
loope
fildll
mov
xor
lea
fstl
push
and
fistpl
out
and
pop
mov
adc
add
out
jg
pop
stos
fdivl
pop
mov
scas
loop
and
or
out
mov
std
jmp
lods
mov
out
addr16
stos
cmp
iret
sarl
sbb
dec
dec
ficoms
adc
inc
pusha
popl
sub
mov
and
fidivrs
icebp
push
fidivrl
imul
sub
daa
inc
add
xlat
mov
dec
xchg
sbb
lret
popf
jp
dec
hlt
adc
les
cmp
testb
adc
mov
sbb
mov
iret
pop
das
out
dec
push
ret
shlb
inc
jl
imul
dec
bnd
mov
repnz
inc
inc
not
sub
rcr
pop
aaa
ret
inc
outsl
clc
adc
xchg
cmp
out
rorb
adc
push
lret
push
sbb
les
pushl
push
jge
and
inc
data16
ja
mov
xchg
les
and
cs
rclb
ljmp
mov
mov
int
shlb
push
mov
add
or
xor
ret
aaa
adc
fstps
stos
or
and
xlat
jne
mov
and
jno
adc
sub
negl
jb
std
ret
push
popf
jb
sarl
aad
and
adc
hlt
push
inc
fbstp
out
popa
adc
cmpsl
jg
andb
call
xchg
mov
test
add
nop
int
mov
in
ljmp
lahf
je
rol
push
push
jg
and
jmp
jne
cmp
cmp
or
inc
cmp
outsb
sub
insb
pusha
lret
mov
push
ds
xor
sbb
test
jge
mov
imul
push
add
mov
pop
adc
inc
mov
inc
cmpsl
cli
mov
hlt
push
movb
add
in
jnp
fdiv
add
push
ret
add
push
dec
adc
push
mov
ja
fsubl
test
or
adc
frstor
imul
sbb
cld
or
mov
aas
or
shrb
xchg
jle
aam
sub
mov
aaa
push
adc
loop
jno
outsb
imul
and
xor
or
outsb
inc
fisubrs
or
jo
movsb
xchg
push
or
jne
jecxz
cld
aaa
pop
sahf
adc
mov
sub
cmp
sbb
aam
jmp
jp
push
aas
xchg
nop
xlat
fld
add
inc
and
imul
stos
or
jecxz
into
stos
mov
push
xchg
stc
and
jecxz
sbb
or
scas
js
add
call
mov
sbb
nopl
mov
fbstp
sbb
ret
xor
mov
in
hlt
jle
xor
dec
xlat
lods
dec
stc
sbb
int3
mov
xchg
movsb
pop
mov
mov
lods
fs
and
xchg
out
or
pusha
mov
pop
into
in
pop
mov
dec
cmp
xchg
int
mov
je
jmp
xchg
rclb
mov
push
and
pop
test
popf
repnz
call
jg
sub
pop
xchg
jle
fadd
cmp
call
cmp
ljmp
pop
out
cltd
mov
test
loopne
cmc
inc
jge
jge
jmp
adc
andl
icebp
mov
rolb
cmpsl
stos
pop
rorl
inc
insb
push
mov
mov
lret
add
fbstp
sarb
adc
test
inc
or
jo
adc
mov
clc
jbe
and
in
xchg
dec
pop
or
adc
jmp
jbe
mov
sub
jecxz
pop
lock
pop
mov
bswap
into
and
jmp
stos
add
xor
mov
sti
movsl
outsl
fistps
in
or
push
jp
adc
hlt
sti
in
cmp
pusha
xchg
lock
cmp
in
mov
adc
push
jp
iret
push
push
lds
mov
int
push
leave
mov
mov
inc
xchg
cmp
out
or
inc
out
leave
jg
imul
dec
inc
mov
popa
xlat
aad
jmp
or
mov
loop
ljmp
pop
mov
mov
cmp
stos
jno
sbb
ficompl
jl
or
ret
dec
push
push
stos
push
rcrb
or
pop
push
in
cmpl
cmp
dec
aas
push
push
dec
adc
pop
add
add
or
bound
fdivp
and
and
in
or
pop
adc
in
fiadds
push
jne
pop
or
es
xor
lods
sub
mov
mov
jecxz
adc
je
or
stos
mov
pop
stos
incb
sbb
pop
call
and
fcmovbe
pop
das
std
lods
rol
or
add
fadd
xchg
mov
xor
fadds
mov
popf
sbb
sbbb
inc
adc
push
and
insb
mov
aaa
icebp
iret
loope
dec
or
xor
out
cmp
and
xchg
lea
jle
stos
mov
mov
dec
add
push
outsb
pop
in
sub
push
inc
push
popf
adc
mov
clc
pop
add
and
les
mov
add
loopne
insl
inc
pop
sub
aam
sbb
xchg
jo
push
or
jno
ljmp
andl
xchg
ja
rol
inc
mov
sbb
in
es
xchg
test
mov
mov
push
sub
movsl
cmp
js
cltd
or
push
pop
outsb
mov
jnp
pushf
outsb
add
data16
dec
xchg
jmp
mov
push
repz
hlt
pop
fdiv
icebp
pop
sbb
or
sahf
mov
mov
xor
jne
push
push
mov
outsb
mov
stos
dec
cmpsb
push
data16
or
fidivrs
jl
sbb
cmp
mov
fildll
incb
repz
cmp
push
pop
lea
jo
add
les
out
clc
in
push
shl
lahf
add
xchg
mov
lea
cmp
mov
cli
inc
int3
push
mov
in
pop
inc
push
push
lds
adc
mov
mov
or
push
aas
jg
mov
imulb
ret
cwtl
rcr
stos
adc
add
jnp
jp
mov
outsb
gs
and
mov
and
add
outsb
pusha
or
mov
std
jl
xor
clc
stc
push
lahf
lcall
and
push
call
mov
sub
mov
std
stos
lock
and
movsb
and
push
xchg
loopne
rclb
outsl
inc
mov
shlb
ds
into
inc
add
lods
xchg
mov
push
pop
scas
clc
repnz
add
ss
xchg
and
jo
ret
add
push
sub
insl
dec
and
xchg
add
setnp
add
in
test
xchg
sub
sbb
lock
jl
or
mov
pop
xchg
into
push
cmc
jl
push
lock
jle
add
push
cmp
insl
js
test
adc
repz
clc
add
sarb
je
addb
sbb
inc
sbbl
xor
pop
cmp
mov
test
or
or
or
push
or
jbe
in
lret
nop
cmp
dec
add
pop
or
dec
pop
mov
shr
mov
jp
pop
ljmp
adc
jne
sarl
aad
mov
shl
aam
xor
test
scas
push
jmp
sbbl
xor
or
lret
dec
aad
and
xlat
push
and
ret
ret
and
mov
je
push
sbb
mov
pop
and
mov
scas
or
les
ret
pop
inc
in
mov
and
jns
adc
adc
cs
lcall
xor
and
and
nop
pop
loopne
shr
insl
ret
subb
icebp
andl
push
fisubrl
pusha
repz
inc
adc
push
mov
inc
lret
mov
mov
mov
or
dec
or
cmp
adc
stc
adc
rorb
arpl
setns
mov
loop
mov
mov
adc
mov
fwait
int
pop
mov
xor
xchg
mov
shrd
icebp
mov
add
sbbl
lret
jg
inc
rcll
add
xchg
dec
notb
insl
fnstsw
stc
xor
mov
aam
repz
sti
adc
push
cmp
mov
inc
lahf
sti
or
insb
or
pop
mov
mov
sub
imul
or
imul
test
pop
jp
mov
mov
pop
cmp
faddp
cmpsb
int
aaa
dec
push
sahf
rcrb
adc
sub
lret
invd
cmp
push
mov
or
jmp
in
inc
out
dec
or
ret
adc
xchg
push
ds
cld
xchg
inc
mov
push
hlt
jp
pop
sub
adc
dec
jg
jmp
xlat
xlat
out
xchg
dec
mov
dec
test
outsl
std
xor
and
inc
jno
shll
pusha
sbb
lahf
in
imul
insb
adc
sqrtps
or
mov
ds
mov
jae
ret
cltd
clc
jp
test
push
inc
inc
jle
pusha
ss
mov
xchg
mov
push
mov
insb
or
js
movsl
loope
fwait
mov
call
or
mov
loope
push
mov
aas
fisubrl
mov
cld
rcrl
test
cmpsl
pop
xchg
lock
fs
adc
comiss
int
xor
jnp
sbb
jbe
mov
pop
sub
aaa
pop
add
js
adcl
scas
push
aam
ror
je
and
xchg
sbb
inc
cmp
aad
mov
xchg
out
mov
inc
in
ficomps
mov
pop
cld
sbbb
inc
mov
jmp
push
in
mov
push
testb
stc
rolb
arpl
xchg
mov
orb
fisttps
fstpt
lock
jle
cmp
pop
xlat
jmp
adc
mov
gs
xchg
rcl
adc
lea
or
fists
mov
pusha
andb
jl
lock
insb
imul
push
pop
dec
adc
roll
dec
pop
adc
push
cltd
xchg
cmp
shrl
mov
cmp
mov
jl
lods
scas
js
ret
inc
or
in
mov
cmpsl
mov
faddl
sbb
inc
dec
xlat
add
rclb
jge
sub
lahf
imul
imul
pusha
cli
xor
add
in
sbb
sbb
xor
mov
cmp
sbb
sbb
aad
jne
orb
lock
lcall
repnz
pusha
roll
aaa
out
mov
pop
sbb
mov
sbb
push
loope
mov
sbb
mov
das
leave
lahf
xor
pusha
adc
sti
mov
cmpsb
xchg
lods
hlt
inc
push
mov
cmp
outsb
push
jge
jle
ss
mov
or
or
sub
icebp
mov
dec
fst
imul
mov
out
adc
cs
in
xchg
xchg
pop
push
cltd
sub
ja
pop
cli
add
loope
enter
lods
adc
js
cmp
cmp
jge
sub
stc
lret
pusha
shlb
das
cmp
dec
push
push
movq
cmpsl
jl
sbb
xor
add
lret
out
push
dec
shlb
xor
mov
mov
add
or
pop
fst
ret
push
jp
dec
mov
push
jnp
dec
cmc
push
pop
sub
dec
cmc
cld
es
fcmovnbe
cmp
inc
pop
ljmp
dec
inc
insb
mov
clc
enter
lods
or
sahf
sub
out
cld
sub
fstps
push
xor
sbb
mov
mov
xchg
pop
jno
mov
sbb
or
cltd
insb
stos
sbb
aaa
aad
sbb
out
stos
mov
mov
idiv
incl
inc
sub
call
sub
mov
pusha
pushf
scas
pop
inc
mov
xlat
push
xchg
cmc
ret
push
pop
imul
jl
or
adcb
es
mov
std
sbb
lea
pop
pop
mov
movsl
mov
movsb
push
test
dec
pop
pusha
imul
roll
outsl
sbbb
sub
and
inc
mov
fildl
adc
jno
mov
wbinvd
push
push
jb
fdivrs
mov
or
push
cmpsl
pusha
cwtl
or
or
les
or
loop
sbb
clc
rcrb
aam
sub
mov
mov
jbe
pop
mov
mov
mov
cmc
bound
shll
push
adc
push
and
fildl
and
incl
stos
sbb
pop
jno
fwait
xor
sbb
push
mov
cmp
lea
test
push
mov
testl
gs
add
adc
dec
loope
shll
cmpsl
es
mov
test
mov
adc
ja
dec
pop
push
inc
sbb
outsl
cmp
xchg
sub
jns
invd
mov
call
push
repnz
std
inc
jno
mov
sbb
int3
aaa
scas
mov
dec
sbb
or
mov
popl
orl
shll
pop
pop
mov
inc
jmp
arpl
cltd
addr16
inc
fsubrl
arpl
or
mov
jb
aas
cmp
icebp
pop
pop
fadds
and
pop
mov
jle
or
mov
jbe
leave
xor
mov
or
fistps
xchg
les
fists
mov
xchg
mov
inc
jno
aaa
faddl
icebp
call
mov
inc
cmp
dec
add
mov
push
lcall
cmp
cmp
ss
mov
aam
jno
mov
pop
push
pop
and
xchg
xchg
xchg
mov
aaa
fcompl
hlt
movsl
push
mov
andl
mov
inc
aam
pop
jne
push
adc
cs
aam
lret
xchg
cmp
pop
inc
jg
loopne
jmp
pop
js
hlt
fldcw
ljmp
mov
fisttpll
aam
xor
outsl
rolb
fldcw
call
movsl
pop
pusha
aad
rcll
cwtl
int
sub
sub
out
test
xchg
inc
imul
cmp
cmp
scas
or
cmp
mov
sbb
cmp
cmpsl
icebp
pop
mov
adc
aam
fnstsw
mov
mov
jle
mov
mov
nop
jp
jnp
dec
or
fwait
sub
ljmp
mov
mov
mov
adc
cli
and
ret
xchg
dec
mov
mov
std
fiaddl
mov
addl
sub
mov
testb
call
jmp
sub
out
push
lds
cwtl
test
icebp
sbb
loop
sub
cs
neg
or
jne,pn
dec
sbb
enter
add
shlb
nopl
mov
addl
xchg
in
in
jne
mov
adc
icebp
dec
incb
das
outsl
pop
sub
fisubl
cmc
push
dec
sarb
imul
and
cltd
loopne
es
loop
sbb
mov
vpshuflw
push
out
xchg
adc
mov
sub
je
xchg
aad
rcll
push
cmp
mov
mov
or
not
ljmp
and
in
ret
sbb
je
cli
lods
xor
jp
outsl
inc
adcl
cmpb
icebp
adcl
mov
out
sub
pop
pusha
out
adc
enter
add
jbe
mov
sti
cld
scas
inc
fistpl
and
test
cmc
test
das
loop
outsb
cltd
xlat
or
aaa
jmp
or
lret
test
mov
mov
test
pop
xchg
shll
xor
or
imul
imul
ljmp
pop
inc
clc
addr16
push
jno
pop
fcmovu
adcb
adc
inc
xlat
mov
mov
pop
insl
sub
mov
lret
push
std
aaa
push
in
das
call
daa
xor
mov
int3
sbb
sub
pushf
mov
push
add
ss
adc
cmpsl
jle
sbb
push
mov
arpl
push
lods
ss
xchg
push
adc
setns
adc
mov
cmc
adc
sub
dec
push
push
inc
pop
aaa
pop
cs
dec
push
fnsetpm(287
pop
fmuls
into
jns
call
inc
sbb
dec
inc
sub
sbb
test
clc
inc
add
sbb
or
call
sar
movsl
and
and
ret
ret
insl
adc
popa
xor
or
call
lahf
xor
lods
cmpsb
inc
enter
cmp
add
mov
adc
iret
mov
sbbl
sub
adc
fcoms
rcrl
fsubs
cmp
inc
cmp
sbb
xchg
xor
bound
push
iret
aaa
inc
fisttpl
push
xchg
sbb
out
mov
inc
push
ds
int3
inc
or
jne
inc
mov
fiaddl
adc
adc
test
xchg
pop
add
fstl
sahf
xchg
insb
pop
aam
jno
cmp
jae
mov
notb
and
push
outsl
testl
cmc
inc
and
arpl
call
inc
arpl
xor
mov
inc
fsubl
push
fsubrl
rcrb
les
mov
inc
movsl
mov
fldenv
cmp
inc
pop
sbb
mov
cwtl
leave
stc
push
test
call
pop
js
outsl
and
push
rcrl
pop
jnp
lret
cltd
sub
sbb
mov
xlat
inc
xchg
lret
outsl
mov
std
out
jnp
push
fldt
adc
inc
jno
jmp
into
jg
andl
mov
fucomp
push
and
xchg
sbb
fsubrl
rol
add
cli
ss
or
pusha
das
sub
cmp
repnz
pop
pop
inc
jl
pop
mov
pushf
pop
ffreep
inc
add
pop
fstl
and
pop
mov
out
xchg
outsb
fldt
push
pop
daa
fisubrl
cmp
push
dec
pop
gs
rcll
sbb
mov
stos
stos
fcomi
sbb
mov
notb
dec
sub
inc
js
add
lds
fwait
sti
jmp
ret
mov
insb
cld
push
gs
enter
cmp
add
pop
push
sbb
or
mov
pusha
sbb
push
mov
int3
or
sbb
push
lea
mov
pop
mov
jb
rcrl
xchg
fdivrl
inc
leave
xlat
jno
dec
sbb
mov
xor
jo,pt
mov
pop
mov
cltd
mov
or
dec
sbb
and
imul
loope
out
test
mov
in
out
imul
fadds
sub
repz
xchg
sbb
jo
loope
add
icebp
out
pop
cli
lea
insl
sbb
sbb
hlt
push
pop
cmp
xor
test
pop
std
out
fbstp
scas
push
push
push
adc
mov
sub
pop
std
insl
mov
pop
lock
xchg
adc
mov
push
mov
mov
inc
xchg
icebp
out
mov
push
pop
jp
roll
sub
jnp
in
sub
scas
and
and
insl
mov
nop
jg
cmpsl
in
out
sbb
fimuls
lcall
fs
ret
stos
addr16
repnz
sub
insl
mov
cmpsb
in
lea
call
fidivl
imull
inc
pop
jp
dec
pop
xor
cld
add
or
jecxz
fstpl
xchg
and
sbb
aaa
std
sub
mov
leave
lahf
in
shlb
mov
insl
incl
adc
cmp
lahf
movsb
je
les
sbb
mov
jle
sbb
or
rolb
mov
mov
fbstp
jne
jg
mov
push
insb
faddl
pop
and
jno
or
pop
xor
and
or
je
outsl
pop
cmp
hlt
popa
shl
aam
cltd
mov
push
je
js
add
mov
loopne
cmp
ss
shr
or
pop
fwait
mov
and
push
in
mov
push
xchg
jmp
xor
mov
and
test
cmp
mov
test
mov
arpl
dec
lret
sbbb
fistpl
adc
les
mov
or
mov
insb
xor
sbb
push
hlt
mov
fnsetpm(287
ret
sbb
mov
ss
aaa
xor
and
push
pop
sbb
jl
push
xchg
cmp
cmp
in
dec
insb
cli
sub
add
mov
jbe
mov
clc
mov
jb
sti
test
add
fiadds
jns
icebp
cltd
clc
mov
daa
fidivs
mov
adc
rorb
pop
jno
mov
xchg
mov
gs
std
or
mov
fimuls
sub
cmpsl
mov
xchg
dec
inc
jae
mov
or
xor
imul
ljmp
insl
jae
aad
mov
cli
jle
mov
je
xlat
pushf
into
or
push
jmp
mull
xchg
add
sub
dec
dec
push
mov
sub
cli
cs
mov
idivl
xor
xor
sbb
mov
sti
fcomip
and
loopne
adc
xchg
mov
push
ror
inc
daa
sbb
mov
out
cmpsb
adc
or
rcrb
imul
gs
sti
lea
ja
sahf
cmc
outsl
cld
push
ficomps
repnz
add
stos
or
scas
xchg
pop
andl
push
mov
push
icebp
pushf
dec
daa
push
inc
in
loop
and
jg
push
cwtl
mov
jl
sar
jns
bound
idiv
scas
mov
push
jns
in
lock
add
jg
cmp
shll
pop
mov
aaa
adc
and
mov
push
ret
loope
add
xor
inc
sbb
cltd
in
sti
mov
lret
dec
and
add
push
fdivl
push
lret
sub
sarb
js
and
mov
xlat
aas
adc
sbb
out
rorb
mov
jb
out
mov
lret
inc
pop
pop
inc
sarl
test
loop
or
jb
sbb
std
mov
push
mov
jl
in
jbe
fsub
loopne
adc
sahf
aaa
mov
mov
movsl
mov
aad
mov
cmpsb
dec
cld
mov
mov
sub
fidivrl
or
fistpl
ss
xor
or
adc
push
mov
or
xchg
inc
bound
inc
aam
jmp
roll
xchg
sub
idiv
int
jl
mov
or
mov
push
stc
jmp
and
mov
shrl
mov
add
mov
lods
jg
int
jns
pop
sahf
and
lret
cli
shlb
xchg
inc
xchg
pop
leave
ficompl
lods
mov
jbe
adc
or
ss
adc
cmpsb
fwait
repnz
addr16
dec
push
mov
in
inc
jl
cltd
sbb
rorl
loop
mov
jnp
adc
xchg
test
adc
btc
aaa
pusha
notl
inc
mov
dec
push
cmovl
imull
je
lock
adc
xor
xchg
mov
push
fucomi
mov
dec
adc
push
cwtl
xlat
and
lea
adc
fistpll
mov
pop
mov
and
push
xchg
or
fbstp
pop
mov
bound
pop
in
push
push
in
sbb
sub
mov
fnstenv
cmpb
sti
mov
inc
xlat
xor
mov
push
pop
orl
mov
push
sub
inc
subl
push
jo
int3
fidivs
xchg
and
cld
mov
adc
jnp
iret
mov
mov
mov
ljmp
add
jb
xchg
adc
cmc
pop
dec
cmp
cmc
aaa
sahf
xchg
nop
mov
mov
jae
sti
mov
lds
push
insl
fidivl
inc
push
dec
add
insl
add
mov
daa
sub
mov
out
incl
mov
push
dec
nop
cmp
aad
imul
mov
push
stc
dec
sub
fwait
xchg
fimull
sbb
xor
or
mov
sbb
cmp
shr
mov
icebp
pop
xor
es
mov
jg
dec
fdivrs
outsb
aam
cmp
xor
nop
es
dec
mov
xor
jg
into
xor
sub
sub
push
es
outsl
mov
jge
in
jmp
into
xchg
out
mov
jp
int
sub
ss
push
sbb
xorb
add
add
enter
xor
pop
xchg
or
mov
outsl
push
hlt
clc
daa
leave
sbb
ss
mov
or
call
mov
aaa
rclb
loopne
dec
add
mov
adc
pushl
push
scas
xor
add
dec
mov
test
pop
pop
mov
std
jbe
cmp
xchg
clc
pop
push
jge
mov
ljmp
add
sub
sub
and
outsb
inc
leave
jle
loop
enter
adc
dec
fistps
pop
outsl
das
mov
jle
push
push
pop
adc
mov
icebp
jl
jns
push
xchg
adc
lock
push
std
not
lea
sbb
aas
xorl
loopne
mov
insb
sub
popf
jae
aad
sbb
push
mov
mov
sbb
adc
std
or
stos
rcll
push
shlb
ljmp
and
push
add
inc
or
stos
xchg
pop
xchg
cli
dec
adc
stos
or
sbb
push
xor
inc
pop
cld
fwait
lds
jno
pop
ficomps
ljmp
ret
and
cmp
mov
add
dec
and
call
or
out
jo
in
mov
outsl
cmpsl
xor
mull
or
xor
icebp
pop
cmpsb
add
fildl
test
adc
or
pop
mov
jle
adc
dec
pop
in
insl
enter
outsl
or
rorb
test
jecxz
outsb
adc
sarl
lcall
aaa
sbb
mov
jecxz
cmp
pushf
mov
mov
or
sub
lods
fidivrl
inc
sub
inc
xor
fisttpll
add
mov
xchg
loope
xor
push
mov
cmpsl
insb
js
rorl
sub
je
shl
jl
inc
out
movb
jo
inc
hlt
jg
pop
xchg
xchg
mov
sbb
mov
mov
inc
xchg
sbbl
leave
mov
out
pop
jp
lods
sub
repnz
xchg
out
js
sbb
dec
adc
or
sbb
push
loope
pusha
cwtl
mov
rcrb
test
js
mov
aaa
jge
popa
dec
push
jp
dec
rclb
mov
add
scas
or
mov
add
mov
fcomps
mov
xlat
sbb
or
xchg
ror
aaa
out
cs
pop
sahf
sbb
popa
adc
and
fisttpl
sbb
add
xor
addr16
lahf
iret
mov
push
adc
pshufw
jne
aam
pop
popf
pop
and
movl
add
test
lret
roll
dec
data16
sbb
pushf
add
jg
cld
out
ret
mov
pusha
rol
test
cmp
xchg
push
mov
jmp
xchg
add
mov
xorl
out
sub
push
xor
pushf
adc
fcompl
jns
mov
and
in
jge
mov
push
stos
fidivs
push
ja
cs
cs
push
fsubrl
add
sahf
nop
mov
outsl
repz
insb
mov
xchg
shll
xchg
lods
repz
fidivrl
mov
gs
pop
and
add
ret
ja
test
cmp
sub
sbb
jecxz
inc
lahf
dec
sbb
js
call
cmp
jno
mov
add
outsb
roll
ret
testl
loopne
pop
cmp
adc
repz
shll
lcall
cmp
mov
or
ja
adc
mov
shl
jmp
sbb
mov
mov
ljmp
push
jne
or
jnp
cli
fbstp
scas
or
xorl
call
insl
das
call
stc
jbe
pop
lahf
in
mov
lds
xchg
ds
or
push
and
or
std
mov
ret
movsl
in
or
adc
ret
dec
mov
ds
ja
dec
mulb
dec
add
ret
mov
in
xor
mov
push
cmp
pop
adcl
pop
fistpl
push
in
out
aam
push
adc
or
or
sbb
outsb
fistl
mov
out
mov
imul
push
out
or
pusha
mov
dec
and
cwtl
or
pop
pop
test
inc
pop
mov
push
lds
jmp
mov
add
dec
scas
cmp
xor
jle
mov
pop
sub
int3
cli
sbb
mov
sub
fnstenv
or
mov
sbb
jne
fs
add
xor
mov
sub
dec
jne
scas
movaps
jecxz
add
inc
lods
sub
in
cmp
xchg
addr16
or
ret
insl
add
mov
inc
pop
inc
jecxz
or
jmp
aad
dec
ss
sbb
dec
das
mov
xor
mov
mov
das
icebp
sub
cmpb
and
fs
pop
mov
lock
inc
rclb
inc
cld
lods
or
xor
jns
mov
out
and
push
jmp
sbb
pushf
test
repz
mov
mov
arpl
aam
xor
sahf
repz
lock
mov
xchg
pushf
adc
iret
ja
lret
mov
test
push
jo
xlat
cld
mov
add
rorl
adc
mov
jns
dec
dec
lds
cwtl
loopne
pop
inc
or
rcl
xchg
add
bound
cmp
scas
xor
lret
add
popf
mov
adc
divb
arpl
mov
jmp
std
in
pop
cmc
and
sub
scas
xchg
mov
xchg
cmp
pop
outsl
insl
push
lods
and
pushf
dec
or
in
xor
sarl
xchg
pop
xchg
imul
push
mov
sub
iret
sti
cwtl
cmp
outsb
lcall
push
jle
sub
xchg
push
les
mov
and
ss
arpl
ds
lret
dec
shlb
repz
lods
out
hlt
lods
xor
stos
xchg
cmp
mov
pusha
and
cmpsl
movzbl
dec
out
cmp
mov
pusha
imul
test
in
stos
xchg
sbb
xor
test
movsb
pop
mov
mov
pop
mov
arpl
sub
push
aam
jo
mov
sbb
pop
gs
and
cld
jecxz
pushl
xchg
adc
pop
jle
pop
mov
mov
fnstcw
sbb
call
push
js
jecxz
mov
icebp
das
pusha
pop
mov
outsl
lock
push
sbb
aam
fdivl
mov
sub
stos
push
nop
xchg
fwait
mov
sbb
jmp
mov
aaa
jecxz
mov
int
or
dec
pop
clc
mov
shll
sub
mov
sbb
xor
in
xchg
cmc
push
loop
pop
mov
sub
sbb
je,pt
mov
mov
pop
adc
mov
add
notb
das
add
shr
mov
xchg
add
jg
popa
fbstp
jne
aaa
sbb
jl
xchg
jl
popa
enter
outsl
lahf
daa
mov
or
jno
mov
hlt
in
adc
jl
push
int3
inc
sub
mov
leave
data16
movsb
lahf
dec
mov
fcom
in
cmp
mov
or
push
shlb
dec
cmp
sbb
jmp
pslld
lahf
cs
push
xor
inc
pop
in
ret
and
xchg
test
or
mov
movsb
push
jb
mov
push
mov
dec
aad
mov
add
loopne
sub
popa
imul
fldt
andb
hlt
sub
mov
aam
in
cmc
jnp
enter
push
mov
clc
cmp
testl
or
je
incb
mov
adc
fs
adc
sbb
cli
out
sbb
push
xchg
cwtl
mov
fdivr
sbb
sbb
in
xchg
mulb
mov
btsl
mov
sbb
test
fistl
es
insb
mov
jb
cmp
outsl
insb
adc
nop
nop
test
lret
mov
sbb
adc
lahf
xchg
in
inc
pusha
and
adc
inc
loopne
pushf
cld
xchg
lret
pop
xor
test
das
nop
or
call
jno
je
rolb
cwtl
lds
mov
and
xchg
xor
and
mov
mov
cli
sbb
pop
das
sub
ret
adc
add
lcall
jmp
rclb
jb
push
mov
pop
mov
mov
ret
jg
xor
bswap
fcoms
add
pop
add
gs
imul
mov
mov
divl
js
mov
adc
fsts
mov
push
jle
mov
loope
icebp
insb
push
jbe
lret
aad
leave
rol
add
mov
xchg
push
push
adc
pop
fwait
les
stc
and
gs
mov
arpl
xchg
lods
adc
inc
inc
scas
call
mov
sbb
arpl
pop
in
sbbb
dec
add
push
lahf
mov
pusha
add
std
push
test
fdivrs
and
sbb
popa
pop
mov
sbb
inc
addl
sub
ret
dec
mov
data16
or
out
aaa
pushf
jg
mov
jb
sub
icebp
mov
mov
in
faddl
push
add
clc
dec
xor
and
sbb
test
pop
jge
je,pn
fisubl
push
cmp
lods
inc
push
xor
mov
or
add
pop
push
insl
mov
stos
rorl
mov
push
outsb
push
ss
test
aas
dec
outsb
push
and
xchg
xor
movsl
dec
push
inc
add
sbb
daa
fdivs
out
xchg
or
fdivs
jmp
and
push
sbb
call
inc
dec
fnstenv
fnsave
pusha
dec
or
sbb
loopne
xchg
pop
data16
das
mov
add
into
dec
xchg
add
or
in
mov
jne
sbb
aam
push
imul
stos
test
mov
aaa
lock
push
xlat
add
pshufw
xchg
or
outsb
inc
and
cli
fildl
xchg
stc
divb
and
out
adc
xor
inc
push
inc
mov
cmp
inc
ret
not
data16
rolb
js
ljmp
insb
and
cs
fistps
stos
subl
mov
sbb
adc
adc
cli
js
mov
enter
xlat
mov
cmp
das
mov
shlb
fnstcw
lea
jecxz
cmp
sarb
push
xor
shlb
insl
int3
mov
jae
cwtl
and
shr
movsl
add
das
outsb
mov
xchg
js
cmc
mov
mov
push
hlt
mov
das
cmc
add
test
push
push
loope
fistpll
rclb
stos
mov
inc
push
test
jg
mov
push
or
add
fwait
iret
stos
nop
xchg
lds
shl
inc
lods
cmc
push
jp
test
mov
xchg
sub
push
push
sub
in
and
les
push
insb
sub
add
mov
insl
popf
movsb
cmc
pop
ljmp
ret
and
out
loope
sub
in
push
push
loope
jmp
push
fwait
cs
es
scas
lcall
ss
dec
pop
mov
ss
sbb
ja
cmc
call
loope
int3
mov
xor
jg
mov
inc
bound
bound
adc
pop
shrb
out
loop
lret
or
add
aam
mov
xchg
and
dec
dec
outsl
jne
push
fistpll
mov
or
dec
pop
and
loope
mov
mov
stos
dec
sub
test
lea
mov
sub
xchg
das
shl
popf
pop
and
lea
call
mov
mov
or
xor
outsb
negl
pop
scas
mov
or
addb
jecxz
je
mov
and
push
js
mov
xor
adc
jmp
ret
dec
shrb
add
add
outsb
insb
jne
imul
subl
sbb
inc
sbb
push
hlt
mov
jmp
or
les
pop
call
mov
dec
in
inc
adc
ret
jns
mov
rol
pop
loope
int
scas
rolb
xlat
adc
push
mov
mov
out
jbe
jo
pop
push
adc
ret
sbb
test
mov
sbbb
insl
imul
lahf
idiv
mov
std
hlt
lea
jp
inc
add
cmpsl
ja
cmpl
xor
sbb
hlt
lahf
jae
jp
dec
test
add
dec
sub
push
push
and
outsb
aad
xchg
icebp
ljmp
sbb
push
cmpsb
addb
jmp
rclb
bound
mov
mov
jno
jne
imul
faddp
pop
dec
int
push
mov
push
cmp
lcall
fnsave
shlb
push
clc
es
or
movsb
or
ffreep
pop
jle
adc
or
mov
aaa
jbe
outsl
cli
pop
aam
scas
or
mov
push
mov
xchg
arpl
lods
sub
rcrl
negb
leave
data16
xchg
add
outsb
or
inc
jns
repnz
and
in
mov
push
inc
sbb
xlat
push
jae
fisubs
dec
sbb
ja
mov
je
pushw
add
adc
xor
pop
jecxz
test
out
shll
arpl
inc
arpl
lds
jbe
loopne
sub
add
xor
lock
xchg
xchg
push
mov
xorl
fsts
push
xor
jnp
lock
jo
js
ja
dec
int3
mov
jge
mov
sub
jmp
xchg
call
adc
ret
outsl
rclb
sub
lahf
mov
push
lods
mov
inc
mov
or
cmpsl
testb
testb
mov
iret
pop
mov
insb
ret
pop
mov
push
mov
push
jne
inc
mov
sub
sub
rep
cs
mov
test
adc
cmp
sbb
add
fucomi
sbb
mov
decl
sbb
dec
bound
test
jns
xchg
scas
or
imull
test
pushf
pusha
dec
stos
nop
mov
mov
popa
pop
add
imul
jp
jmp
and
outsl
mov
xor
add
jbe
ds
int3
jbe
sbb
xchg
fwait
sub
fdivrl
lock
cmp
jle,pn
or
adc
or
sahf
jne
das
insl
insb
inc
ret
mov
mov
outsl
adcl
mov
push
push
fs
jle
mov
inc
shl
sub
stos
or
fwait
call
mov
pushf
mov
mov
jmp
call
or
shlb
loope
loope
push
push
loopne
or
and
and
fildl
jb
mov
sub
xchg
push
test
or
mov
mov
pop
dec
push
xchg
xchg
mov
lret
lds
lret
pop
and
jb
test
jg
clc
add
xlat
push
test
sbb
xor
mov
ret
and
loope
or
jne
jne
inc
adc
sub
sub
sbb
inc
dec
mov
push
push
pop
ficompl
push
cmp
mov
cwtl
inc
cmp
fst
idiv
ja
jo
fiaddl
xor
pop
or
fldt
data16
cld
add
mov
dec
fistpl
add
jl
push
das
fidivs
xchg
lea
insb
dec
bound
push
or
mov
xor
jl
stos
mov
fisttps
and
dec
cmp
ficoms
mov
outsb
jns
push
icebp
addb
sti
rorb
call
jns
fstl
pop
int3
fdiv
xchg
xor
push
push
jno
aad
pop
and
xor
enter
add
push
mov
or
das
pop
fiaddl
imul
lea
jecxz
negb
push
inc
fildll
stos
adcl
sub
sbbb
fisubs
rclb
insl
mov
jge
popa
sbb
sti
jns
inc
push
cwtl
loopne
in
je
sbb
inc
outsl
add
mov
xchg
popa
into
jg
das
jl
cld
test
stos
arpl
and
jb
sbb
mov
xor
mov
mov
fdivrp
add
mov
sbb
lahf
js
sub
aas
sbb
push
pop
aaa
mov
int3
adc
cwtl
loopne
push
addl
imul
mov
loop
shl
mov
addr16
or
imul
mov
jecxz
xor
push
notb
dec
aam
mov
and
fldl
iret
lock
pop
in
scas
clc
push
jl
cld
push
mov
xchg
popf
imul
cmp
xchg
push
bound
or
dec
sub
rorb
rolb
cli
sub
jge
cmpsb
enter
adc
movsb
loope
push
sbb
mov
adc
mov
jmp
bound
dec
or
jecxz
push
add
mov
xorb
pushf
aam
push
and
test
jp
clc
push
cld
jno
and
or
jp
popf
dec
mov
mov
mov
outsl
sbb
adc
mov
cltd
in
xorb
mov
dec
pop
mov
bound
inc
inc
gs
rol
xor
in
lahf
int3
outsl
jecxz
out
ss
rcrl
aam
adc
testb
inc
cmpsb
sub
pop
icebp
push
pushf
aas
sbb
cmpsb
adc
bound
inc
sub
mov
or
call
mov
xchg
out
jae
insl
push
hlt
sbb
lahf
mov
push
mov
mov
pop
jp
rcl
jp
xor
test
scas
fldcw
outsl
loopne
mov
cmpsb
xchg
mov
ret
and
push
pop
test
jne
stos
lret
icebp
aaa
push
cmpsl
outsb
mov
mov
repnz
pop
dec
inc
inc
aaa
xchg
pmaxsw
adc
jo
insl
fs
pop
test
ret
mov
fldt
cltd
addb
pusha
xchg
mov
push
ja
cmp
es
jmp
insl
fdivr
mov
gs
fcoms
mov
insl
imul
inc
fistl
jne
xchg
xlat
xchg
pop
flds
push
aam
xlat
xchg
dec
push
add
fs
push
pop
js
mull
jnp
add
cmp
inc
popa
leave
push
push
push
adc
and
jmp
push
jns
push
pop
add
js
cmpb
decl
mov
push
jge
pop
mov
shrb
inc
aam
popa
adcl
mov
push
mov
mov
ret
push
or
cmpsb
and
jne
fstpl
push
xor
xor
mov
mov
hlt
jmp
mov
mov
sbb
movsl
leave
push
testb
cmp
pop
into
stc
fcoms
inc
loope
fwait
sbbl
push
cmp
das
sarb
std
and
xchg
stos
dec
or
std
sarl
and
inc
test
inc
xlat
fldt
and
ja
or
cmp
test
sti
leave
fcmovnbe
and
mov
jecxz
in
ret
js
mov
inc
mov
sbb
sbb
adc
cmpsb
add
leave
xchg
push
adc
stos
mov
add
cli
test
icebp
lods
int
stos
sbb
leave
dec
xor
ja
fisttpl
movb
movsl
fs
adc
xchg
test
test
add
dec
lea
mov
scas
lea
lods
adc
pop
stos
mov
mov
sub
aaa
pop
inc
add
xor
je
frstor
sub
mov
mov
fnsave
xor
in
in
and
lock
mov
push
shl
mov
int3
fs
sub
jbe
push
sbb
cld
fdivr
jecxz
ret
pop
daa
leave
lock
imul
test
add
xchg
loop
xchg
inc
sub
nop
test
mov
cmpsb
loopne
pop
jns
sahf
pushf
decl
fisubs
data16
and
push
sbb
xor
cmp
and
or
call
pop
or
mov
stos
scas
out
push
cltd
mov
loope
stos
insl
loope
addr16
popa
push
rorl
push
inc
and
inc
fildl
jo
loope
xchg
adc
add
xchg
rclb
inc
mov
aas
and
popa
test
lods
dec
mov
ret
lahf
mov
adc
mov
insl
pop
push
jle
cli
aad
loope
repz
push
or
orl
mov
inc
jge
push
pop
ret
push
cmp
es
lret
rcll
pop
icebp
sbb
cmp
jno
xchg
xor
je
inc
bound
arpl
lock
or
insl
dec
xchg
sub
loopne
mov
outsl
push
jo
insb
test
mov
jp
inc
js
push
int
cwtl
in
in
jae
mov
out
lahf
dec
into
roll
push
xor
in
mov
into
addr16
sar
lods
cmp
jle
das
rorl
cltd
sbb
sbb
or
cltd
cltd
mov
outsl
mov
inc
rcrl
mov
call
inc
add
outsl
xor
sub
sub
pop
aad
lock
mov
mov
pop
fidivs
sub
test
arpl
test
sbb
lds
or
jl
lods
cld
cmpsb
scas
incb
pop
rorl
push
icebp
pop
xor
out
sub
and
clc
mov
sbbb
mov
adc
push
ret
fildll
xorl
pop
cli
lea
adc
cmp
lret
mov
sbb
jle
roll
mov
mov
mov
pop
sbb
inc
sbb
and
fisubs
pop
jp
fists
jo
or
mov
xlat
test
sub
into
shl
mov
cli
out
push
adc
pop
adc
outsb
fs
loopne
mov
xor
inc
mov
sar
mov
rcl
imul
std
adc
sbb
push
pop
jo
or
pop
mov
pop
cld
mov
add
lahf
and
or
ret
ljmp
rcrb
pop
fistpl
pusha
rcll
clc
jecxz
fidivl
pushf
adc
js
mov
outsl
add
add
inc
and
pop
mov
xor
pop
icebp
stos
js
outsb
jns
xchg
int3
test
insb
shr
inc
loopne
jl
cmp
sbb
or
rclb
pop
pop
jecxz
std
aaa
xlat
fldl
leave
mov
sarb
clc
or
mov
dec
jae
push
mov
sti
fists
xlat
xchg
lret
lea
or
xlat
push
adc
pop
push
cli
cs
data16
enter
push
mov
icebp
dec
sub
call
mov
adc
test
push
mov
pop
pop
hlt
push
inc
or
ficompl
test
test
cs
dec
shlb
nop
std
insb
imul
xor
inc
mov
add
mov
sbb
mov
or
mov
sbb
pop
adc
push
call
mov
sbb
aam
mov
testl
mov
rclb
adc
or
repz
cld
pop
add
aaa
pop
pop
jb
lods
outsl
pop
addl
aam
push
addb
sbb
push
arpl
fisttps
adc
mov
xchg
ficoml
loop
push
sti
add
enter
add
ret
mov
in
mov
mov
jmp
shrb
sbb
lcall
dec
test
or
ljmp
lcall
outsb
jge
push
subl
xlat
js
test
add
fxch
orl
dec
jbe
push
add
lahf
mov
out
pop
mov
lret
cmp
xchg
lods
mov
fnstsw
inc
mov
dec
movsl
fistpl
inc
in
loopne
adc
lcall
mov
fbld
mov
pop
in
in
xor
inc
divl
lock
mov
iret
and
inc
mov
adc
std
ja
imul
push
and
flds
adc
ja
and
arpl
icebp
in
aad
or
ret
jl
das
lock
rclb
les
and
loope
ss
and
mov
mov
je
jg
fstp
xor
jns
fiaddl
pop
hlt
shlb
pop
pushf
add
call
addb
outsb
aaa
rcrb
sbbb
mov
in
stos
jg
fdivrs
je
add
lret
pop
test
or
int
sbb
dec
fdivl
add
mov
lret
or
outsl
imul
cmp
and
adc
push
movsl
insl
xorl
push
dec
mov
xchg
pusha
pop
pusha
push
dec
daa
movsl
xchg
or
pop
jno
jbe
shlb
add
imul
pushf
jne
jp
xchg
mov
lcall
das
std
jg
ror
pushf
iret
xor
bound
cmp
test
push
jge
test
es
fimuls
test
mov
stos
sbb
add
aaa
push
pop
xchg
js
pop
inc
mov
repz
test
xchg
xor
jecxz
push
fs
sbb
mov
sbb
daa
pop
bound
mov
aad
lcall
jl
pop
push
hlt
inc
jecxz
push
bound
fwait
orb
and
xchg
loope
jmp
cmp
push
add
jge
mov
sbb
mov
hlt
inc
jge
call
outsl
cmp
adc
dec
mov
mov
lds
jmp
lods
adc
subb
inc
inc
and
cld
fcomip
cmpsl
out
cmp
ss
inc
jmp
mov
adc
add
cmp
loope
pop
dec
hlt
mov
pop
loopne
mov
lods
movsl
lock
aas
mov
in
movsb
cmp
push
outsl
mov
aam
dec
cld
js
add
mov
loopne
fildl
out
dec
jne
loopne
test
stos
push
movsl
sub
rcrl
inc
adc
push
sub
push
xchg
call
sbb
fdivrs
mov
jbe
xor
daa
ds
pushf
and
es
mov
jns
aam
shl
fidivrl
xor
rcrl
jp
jo
sub
loope
xchg
fiaddl
sub
sub
mov
addb
add
pop
fcomi
out
and
and
dec
and
pop
insl
push
addb
pop
jnp
push
sub
inc
add
cwtl
std
ffreep
out
push
mov
xchg
mov
in
cmp
push
call
les
loopne
aaa
inc
fstpl
cmp
enter
sbbb
and
cmp
pop
clc
dec
inc
ret
mov
cld
test
cmpsb
ja
ds
lds
push
or
in
das
cmp
into
sub
jo
sbb
aam
mov
cmpb
push
sarb
mov
mov
shll
pop
mov
fwait
fiadds
loope
add
mov
and
rcrb
inc
mov
and
jle
shlb
xor
cld
dec
cmp
push
shr
popf
ret
int3
mov
test
notb
inc
hlt
repz
mov
jbe
mov
lods
int
out
sbb
jne
jg
dec
std
jbe
stos
jno
xchg
cmp
dec
mov
lods
in
jno
jmp
xor
shlb
xchg
lds
cmp
pop
icebp
repnz
xor
or
mov
xchg
jbe
rorl
std
out
addb
jnp
add
lods
inc
arpl
out
mov
add
test
add
arpl
pusha
mov
pop
mov
fldt
push
mull
movsl
lahf
int
fwait
inc
or
pop
or
cld
das
add
mov
sarl
inc
push
fistl
xchg
add
outsb
clc
adc
fldt
lret
ret
push
add
mov
mov
inc
rcl
dec
pop
frstor
or
in
out
and
cmp
push
lods
outsl
adc
loopne
cmp
les
insl
mov
sbb
xchg
jns
pop
lock
aaa
mov
pop
stos
decb
daa
cmp
jmp
fsubs
addr16
xor
inc
test
sbb
mov
pop
sub
push
push
sub
push
inc
es
and
std
addr16
push
or
imul
in
pop
inc
aad
std
pop
shl
mov
aad
sbb
jle
jg
mov
fdivs
add
popf
ja
cmpsb
lret
imul
aaa
push
fidivs
fistpl
mov
fs
pusha
sbb
rol
cmp
jo
sar
mov
lods
addl
pop
add
test
push
lods
in
outsl
jmp
testb
shlb
jmp
dec
cmc
adc
jmp
pop
outsl
fistl
sahf
imul
das
adc
clc
mov
xchg
mov
movsl
pop
mov
push
pop
fwait
cmpsl
cmp
aam
dec
cld
mov
push
in
lea
and
push
roll
js
inc
or
lds
rclb
xchg
push
lret
inc
sahf
pop
sub
sbb
inc
jno
mov
inc
daa
add
add
adc
sbb
sub
pop
ja
jp
pop
nop
test
pop
adc
in
jmp
add
pop
xchg
xor
call
jp
xor
data16
cmpsb
jae
cmp
bound
roll
add
push
push
mov
adc
jg
xchg
push
call
and
adc
loopne
rorl
adc
shll
mov
sarl
adc
add
daa
dec
and
jo
fsubp
cmc
lret
inc
pop
fcomp
insl
test
addr16
inc
dec
arpl
add
movsl
in
ljmp
sbb
sbb
sbb
out
mov
test
cli
or
outsb
sbb
pop
mov
stos
bound
jge
add
xchg
and
sub
mov
or
mov
inc
cmp
and
dec
call
add
pushl
outsl
inc
inc
ljmp
or
xchg
ret
mov
or
adc
cs
cmpsl
scas
cmp
loop
mov
nop
pop
xchg
sub
cmp
aam
les
sbb
sbb
pop
es
aaa
jnp
sbb
insl
xchg
mov
mov
idiv
in
lahf
popf
pushf
xor
cmp
push
call
sub
sbbb
mov
sub
mov
neg
and
pop
xor
shl
xor
sub
outsl
arpl
push
ret
lock
leave
outsl
jb
fnstcw
mov
cmp
add
ret
rolb
stos
mov
cmp
and
outsl
loopne
repnz
dec
out
add
inc
add
mov
dec
push
sub
add
mov
test
xchg
lock
std
rclb
mov
add
pop
mov
mov
outsb
mov
ds
jae
outsl
lods
dec
pop
dec
add
add
or
mov
outsl
mov
rcll
add
mov
leave
clc
mov
jo
sub
mov
pop
or
push
inc
sbb
mov
add
inc
lock
sbb
inc
xor
test
adc
jmp
pop
movsb
jns
fdivs
lods
dec
in
in
sti
outsl
jecxz
shlb
push
or
aaa
test
mov
or
xchg
pop
mov
fisubrs
mov
bound
mov
mov
xlat
bound
out
stos
add
lahf
or
mov
or
adc
inc
mov
dec
push
data16
fstpl
jno
jmp
call
sbb
xor
lods
mov
dec
sub
aad
sub
sub
ret
xchg
push
add
sub
je
ror
inc
xlat
pop
pop
pop
add
sub
sub
test
imul
jge
lock
daa
mov
rclb
or
sbb
std
jl
mov
pop
decb
xchg
inc
inc
into
jge
pop
out
or
sub
call
aaa
xchg
and
cmp
neg
clc
push
sub
xchg
sbb
inc
dec
fistpl
jns
jl
adc
iret
and
push
jmp
push
inc
aaa
mov
dec
push
stos
movsl
ljmp
xlat
push
inc
lock
cmp
push
mov
adc
je
pop
mov
push
lock
outsl
jl
add
pop
fwait
js
fidivs
jle
aam
cmp
mov
mov
push
insl
jbe
mov
cmp
or
fidivrs
cmp
jmp
cwtl
pushf
xor
mov
jmp
sbb
add
xor
int3
jecxz
cmp
pop
call
popa
stos
cli
add
sbb
std
loop
lret
into
cltd
sar
pop
fmulp
movsl
mov
add
adc
add
mov
fistpll
xor
xor
sti
add
cld
clc
pushf
jne
pop
or
sub
jnp
sub
ret
mov
outsb
rcrb
push
imulb
cmc
std
add
nop
mov
or
sub
push
sbb
rclb
insb
fildl
out
xor
jne
or
adc
cmp
ds
mov
pop
and
add
inc
loopne
test
fcoms
cli
sbb
or
push
add
sbb
loop
dec
push
cwtl
adc
mov
je
jb
and
jle
cmp
call
add
rorl
xchg
dec
xor
cmp
pusha
add
xor
movsb
jbe
lahf
ljmp
cli
pop
sbb
and
imul
in
mov
pop
adc
mov
dec
inc
push
aaa
outsb
and
and
bound
int3
fistl
and
movsb
mov
mov
fs
fstl
adc
add
sbb
outsl
push
imull
in
test
in
mov
rorl
nop
mov
mov
scas
lods
xorb
cli
imul
cld
inc
movsl
imul
lods
inc
cltd
fdiv
sbb
jg
fists
in
inc
sbb
and
inc
test
mov
and
outsb
mov
push
jl
pusha
push
mov
jno
push
je
xchg
xor
std
mov
push
loop
negl
insl
sbb
fcomps
push
outsb
sbb
mov
aam
xchg
mov
and
repz
scas
into
daa
imul
pop
pop
insl
loopne
xor
fmuls
and
ja
and
rorb
or
lcall
lahf
push
jno
into
push
sbb
mov
lock
incb
push
adc
loope
add
or
push
sub
jbe
mov
xchg
xchg
arpl
inc
fstpl
jp
cmpl
fistps
mov
sbb
push
aas
jae
push
ljmp
ret
ljmp
jno
and
and
stos
fidivrl
xchg
jg
subb
je
push
pop
cmc
pop
sub
out
gs
inc
adc
loop
sub
cmp
fidivs
add
push
sbb
add
jmp
lahf
jns
push
mov
sbb
cmc
sub
lahf
sub
xor
sbb
dec
inc
and
iret
xchg
loope
pop
jp
stos
push
popf
sbb
outsl
lahf
test
add
push
push
xlat
gs
stos
sub
lds
pop
scas
mov
push
inc
int
fucomi
shll
ss
popa
mov
int3
andl
js
jb
or
pop
icebp
imul
out
xor
jne
adc
pop
paddb
js
mov
mov
das
lcall
mov
lock
imul
out
scas
js
mov
mov
jl
dec
and
sti
loop
jge
fildl
insb
fisttpll
arpl
faddp
pusha
push
jl
inc
fisubrl
jne
rcrb
adc
std
test
cmp
mov
pop
jo
dec
sub
popa
pop
sbb
insl
pop
mov
call
mov
das
stos
add
push
xchg
mov
xor
aas
sbb
pop
lahf
pop
mov
loop
pop
push
pusha
pop
cmc
lret
pop
sbb
cmp
mov
adc
sub
das
push
rorw
xchg
mov
rsm
inc
cmc
inc
mov
ljmp
ljmp
pop
sbb
cmp
shrl
xchg
jb
jge
ficoms
pop
aaa
jne
mov
int
push
jg
outsb
push
push
call
test
fists
mov
mov
mov
jmp
push
addb
mov
cltd
fisttpll
push
mov
dec
rolb
dec
std
fs
decl
mov
dec
fs
das
pushf
inc
pop
les
jecxz
xchg
pop
movsb
orb
push
sbb
cmp
mov
push
push
je
cmp
cmp
jecxz
pop
sub
sahf
mov
shrb
js
mov
mov
mov
mov
pop
xchg
ja
adc
pop
xchg
xchg
test
daa
add
sbb
cmpsb
aad
insl
inc
frstor
adc
movsb
sub
in
icebp
and
ja
int
jae
nop
mov
out
jmp
add
sahf
dec
xor
out
addr16
and
jle
ret
mov
fs
outsb
mov
js
popa
cld
push
hlt
push
in
data16
push
xchg
push
insl
call
ret
mov
iret
jb
sbb
rcrb
inc
in
insl
xor
xchg
lret
ror
mov
or
xchg
into
adcl
mov
jmp
ret
pop
fadd
daa
fisubrs
add
add
in
movsl
lret
lcall
scas
inc
pop
add
fldl
shlb
lret
jns
hlt
cmpsb
sub
fcomp
aam
fwait
iret
mov
push
jae
fildll
fidivl
into
sahf
mov
push
dec
or
or
mov
push
add
sub
xchg
mov
arpl
add
pop
mov
fs
call
pop
cs
sub
imul
dec
dec
enter
jno
sbb
or
push
add
cmp
jbe
sti
jno
or
mov
stos
lea
mov
jae
or
push
add
sti
jbe
mov
pop
out
push
xchg
mov
test
in
emms
loope
pop
jg
jl
insl
adc
add
sti
ret
scas
push
nop
cmp
mov
mov
loope
adc
repz
scas
movsl
addl
jbe
dec
xchg
loopne
jae
jbe
icebp
test
aad
dec
aam
mov
mov
nop
clc
xor
out
jo
dec
mov
movsb
adcb
mov
loopne
mov
in
inc
dec
lahf
and
push
shl
das
addr16
push
sbb
sub
daa
call
stos
test
cmpsl
mov
jns
pop
mov
clc
xchg
sub
xor
iret
sbb
sarl
jg
dec
mov
pop
jns
icebp
jbe
call
inc
test
xor
test
fcompl
popf
xor
pusha
adc
mov
or
andb
jg
fistpl
push
sbb
add
imul
stc
push
ljmp
mov
jle
dec
and
cmc
jno
mull
push
mov
push
subl
push
or
repz
pushf
movsb
test
out
test
test
sti
or
leave
or
inc
jp
push
adc
dec
mov
jmp
out
loopne
test
fmul
insl
jne
in
pushl
jb
xchg
loopne
or
cmp
or
mov
rorb
rcl
aaa
in
test
popa
mov
cmp
jne
lock
fcmove
push
mov
mov
cmc
shlb
call
and
jae
or
loope
or
mov
cmovb
bound
movsl
test
push
sbb
outsl
in
out
sahf
push
stc
andl
loopne
pop
push
add
mov
loopne
sbb
imulb
test
insb
xchg
fcompl
mov
xor
cmp
pop
cld
inc
inc
mov
pusha
pusha
sahf
stos
dec
lods
test
sub
in
outsl
adc
xchg
lea
xchg
loop
or
clc
add
bound
add
cld
add
fisubs
mov
pop
pusha
loope
inc
into
cmp
add
fsubrs
push
pop
inc
lods
decb
aaa
cmp
inc
cmp
sbb
mov
daa
adcl
mov
or
mov
loopne
xor
mov
popa
les
or
push
adc
jno
hlt
add
push
hlt
push
adc
jo
mov
lock
push
xchg
ret
fs
xor
les
sbb
inc
xchg
scas
stos
inc
sbb
pop
outsb
lahf
bound
xchg
mov
dec
cwtl
xor
push
ret
arpl
mov
ret
mov
shll
je
lods
jle
mov
stos
fdivrp
mov
mov
push
or
shl
jg
imul
dec
je
sub
mov
jle
ret
push
es
xor
out
fmuls
rclb
fdivp
iret
cmp
je
pusha
push
mov
movl
or
mov
jle
shrb
add
shl
xor
pop
adc
or
push
lahf
mov
mov
sub
push
fstps
push
mov
ret
rol
pop
pop
xor
rcrb
bound
mov
cmp
clc
in
ja
data16
and
ds
cmp
lods
xchg
mov
push
dec
call
mov
push
das
push
aaa
popa
shl
jge
js
push
jbe
out
loop
lret
and
adc
cmp
jo
push
mov
jne
inc
lods
aaa
mov
push
fisttpl
aam
jp
outsl
cld
cli
outsl
xorl
fcmovbe
or
pop
clc
mov
enter
and
fimuls
push
icebp
jecxz
jmp
into
push
shlb
test
in
rclb
mov
add
and
mov
xor
outsl
outsl
sbb
xchg
mov
loope
icebp
push
ljmp
popa
jle
mov
cld
dec
insl
sub
push
push
inc
movl
adc
ja
cltd
push
pop
mov
mov
dec
popl
outsl
jbe
pop
and
fsubs
sbbl
mov
ret
pop
adc
push
ss
mov
mov
int
jne
or
nop
or
bound
mov
adc
mov
leave
sti
int
aaa
sbb
push
xor
out
mov
scas
adcl
push
nop
mov
sbb
pop
sbb
pop
cmp
push
in
cmp
sarb
movsb
push
cmp
and
jl
mov
cwtl
loop
mov
lcall
mov
mov
push
cld
rol
mov
or
sbb
inc
sbb
or
je
xchg
lcall
mov
push
sti
enter
sub
xor
movsl
xchg
sbb
insb
imul
jb
mov
dec
sti
pop
jl
adc
es
adc
adc
xorl
dec
flds
scas
cmpsb
add
inc
push
fldt
sub
mov
icebp
hlt
ret
cld
adc
inc
repnz
aas
sarb
into
into
movsb
pop
push
ret
lret
or
cld
mov
sub
add
xor
dec
mov
jecxz
cmc
or
xchg
sbb
jmp
add
jge
sub
jl
ja
and
cs
inc
jmp
popf
jp
add
add
rorb
push
dec
fldcw
jp
sbb
clc
test
jmp
sbb
out
ret
sbb
lcall
or
jne
popf
xor
cmc
movsl
or
add
jno
insb
or
dec
push
pop
out
mov
jle
xlat
cmp
dec
lds
fsubs
aaa
mov
push
rol
mov
fdivr
or
popa
fsubrs
sub
pop
sub
fcmovne
mov
shlb
jmp
rcrl
fmull
dec
jb
dec
push
dec
mov
fsubs
hlt
ds
push
mov
mov
rorl
movsb
out
cmp
pop
or
outsl
sbb
decl
repz
add
cmc
lcall
adc
decb
mov
add
out
int3
subl
popf
jl
lahf
repnz
movsb
testl
mov
inc
inc
and
inc
ret
in
lock
call
movsb
stos
xor
std
sub
push
sbb
mov
push
push
outsl
or
in
out
cmp
nop
scas
ja
mov
xchg
scas
dec
scas
and
mov
ficompl
inc
clc
mov
jbe
mov
pop
and
loopne
adc
je
int3
call
push
ss
push
xlat
in
mov
test
sub
jns
jnp
ret
push
lcall
cmpl
out
mov
cli
movsl
jge
nop
mov
sub
jno
jp
add
mov
call
sbb
xor
mov
aam
push
fisttpl
dec
cltd
adc
xor
sub
add
mov
je
je
jo
pop
xchg
mov
sub
pop
mov
daa
push
aam
imul
fmull
xorb
fwait
call
jns
sub
push
cld
jle
lret
outsl
adc
fcomps
je
arpl
lods
push
lea
mov
std
js
shll
inc
into
test
insb
mov
iret
sub
xorb
cs
ret
push
loop
sbb
negl
out
pop
add
push
test
shlb
mov
stc
inc
cs
out
filds
adc
xchg
add
jecxz
xor
fwait
in
fdivs
pop
mov
mov
imul
lods
dec
cmp
sbb
inc
inc
inc
inc
push
and
ret
dec
bound
clc
xor
pop
jae
cmp
cmp
clc
cmp
sbb
or
int
outsl
jl
loopne
enter
stos
stc
test
or
mov
orb
pusha
jns
pop
mov
dec
inc
in
push
and
xchg
dec
fisubrs
mov
add
iret
int
dec
es
imul
jne
movsl
mov
adc
xchg
add
sbb
loope
in
in
push
movsl
outsl
test
lods
es
sub
into
rorl
push
repnz
das
leave
inc
int
or
cwtl
ret
sbb
loopne
mov
sbb
sub
lea
fstl
or
jno
in
dec
in
mov
mov
ret
and
inc
loope
lods
adc
add
push
fsubrp
and
pusha
sub
push
les
push
dec
arpl
sbb
jl
outsl
sbb
test
add
mov
jno,pt
adc
decl
adc
xchg
add
dec
mov
pusha
sti
ret
push
adc
aaa
pusha
mov
sub
aad
xchg
add
sbb
inc
xchg
pushf
cs
sahf
adc
pop
out
xor
imul
and
in
push
inc
shrb
popf
test
inc
or
pusha
lds
fs
pop
aad
out
call
cmp
repz
add
dec
mov
stos
mov
cmp
jnp,pn
stos
mov
xorb
inc
lock
in
lock
stos
push
call
fs
popf
mov
sbb
cmp
ret
orb
int3
mov
inc
aam
cmpsl
mov
or
jo
outsb
call
mov
test
test
push
sub
insl
insb
mov
add
sub
or
sti
xchg
or
jb
test
sub
leave
lock
pop
lds
stos
mov
add
pop
clc
ret
mov
and
ss
sub
mov
hlt
test
dec
pop
iret
xchg
xor
out
xchg
mov
insb
lock
mov
push
sbb
lahf
push
adc
fsubrs
in
add
mov
stos
xor
or
insb
or
nop
or
xchg
add
adc
pop
in
pop
mov
and
fildl
or
pop
inc
inc
loopne
pop
cmp
dec
push
ja
add
imul
jg
push
stos
pushf
adc
loope
pop
cmp
cmpl
icebp
lret
xchg
jle
push
mov
or
add
jns
out
adc
xorb
rol
insl
ficompl
jmp
or
xlat
out
and
insb
mov
push
push
mov
fidivrl
jae
insl
sub
xchg
std
push
les
pcmpeqb
mov
fmull
push
popa
mulb
mov
xor
cmp
xchg
fwait
and
pushf
push
mov
jecxz
dec
scas
mov
mov
js
outsl
cld
ret
cli
mov
mov
movsb
hlt
movsl
lods
mov
pop
mov
jp
js
repz
dec
sar
movb
out
repz
or
mov
jge
adc
test
popa
lock
jl
or
add
fidivrs
aad
mov
jl
rclb
or
or
in
lock
cli
add
cmpsb
inc
xchg
mov
insb
xchg
jno
insl
or
loope
sub
mov
inc
stos
inc
mov
je
inc
jge
test
scas
lods
enter
loopne
cmp
mov
xchg
xchg
or
sbb
mov
icebp
sbb
cmpsl
pshufw
push
pop
fiaddl
mov
xchg
fimull
shrl
add
dec
inc
outsb
sar
mov
aaa
lret
cmp
inc
or
mov
adcl
mov
mov
or
push
jns
xchg
or
dec
mov
mov
jg
rolb
lret
dec
push
lret
lea
add
jg
subb
lock
loopne
and
mov
fcmovnu
xchg
outsb
sahf
outsb
lret
into
addb
lods
dec
mov
fdivl
or
mov
mov
fwait
pusha
dec
movsb
mov
push
imul
add
xor
bound
aas
test
pop
or
stos
jbe
mov
mov
inc
pop
sub
dec
inc
cmp
insl
sbb
add
popf
xor
jecxz
adc
and
pop
push
ret
or
mov
outsl
ljmp
rcrl
inc
mov
mov
std
lock
sbb
daa
pop
and
mov
fstpl
aaa
jo
insb
dec
adc
xchg
mov
fs
ffreep
out
dec
sub
popa
mov
incb
fsubrl
fbstp
cmc
stos
sbb
xor
add
insl
lret
divl
mov
inc
cmp
out
in
push
lock
inc
push
mov
and
fbstp
xor
push
push
sbb
sub
out
inc
icebp
or
je
add
in
outsl
mov
shrl
ret
push
mov
cld
jg
cmp
xchg
hlt
inc
xor
jno
rcr
inc
call
rolb
cltd
inc
je
adc
add
out
or
sub
xor
in
mov
aaa
mov
ror
pushf
cmp
into
or
xor
sbb
sbb
jo
sub
jecxz
cmc
jg
aas
cmpsb
stos
or
xlat
adc
orb
push
imul
jmp
mov
test
data16
or
ljmp
test
ret
cmpsl
sub
or
subl
jbe
xor
push
xchg
rorb
jns
jg
mov
sub
or
call
jge
gs
xor
pop
mov
lock
call
outsb
sub
addr16
xor
andl
xor
mov
mov
add
subl
mov
push
pop
add
add
dec
int3
cs
mov
es
adc
mull
mov
fidivs
bound
dec
push
xlat
push
xchg
or
mov
dec
and
adc
or
out
jns
lock
and
jle
stc
loop
pop
decl
ljmp
mov
inc
mov
dec
std
push
es
mov
icebp
sti
fists
roll
lods
in
mov
pop
mov
repz
enter
std
inc
arpl
roll
insb
push
js
daa
xor
cld
aaa
incb
mov
add
or
orl
mov
push
fimuls
cmp
pop
sbb
mov
lock
sar
push
test
dec
imul
mov
dec
fcmovnu
lods
or
mov
mov
adc
mov
rorb
cmp
fisubl
push
sbb
push
xor
inc
aam
push
enter
jmp
cmc
mov
adc
sysenter
frstor
cmpsl
pop
subl
or
sub
sub
sub
sarl
sbb
pop
xchg
cmp
mov
cmp
push
sub
movsl
sbb
lods
shl
push
cmp
repnz
dec
lea
les
test
xlat
sbb
dec
loope
cli
inc
popl
mov
inc
rcr
jg
and
gs
nop
sahf
xor
jbe
aaa
ffreep
fbstp
push
pusha
xchg
lahf
add
pop
add
outsl
mov
jnp
in
es
xor
fcmovu
incl
xchg
inc
fadds
sbb
cmpsb
dec
mov
dec
sbb
rcrl
shlb
jge
jp
arpl
pop
pop
push
add
lcall
push
mov
add
push
loope
jno
test
aas
cwtl
fnsave
sti
imulb
movsl
xor
in
stc
popa
add
adc
loop
ljmp
sbb
cli
js
jbe
sbb
sbb
out
dec
test
popa
sub
jecxz
sub
adc
jmp
rolb
add
xchg
cmpb
fmull
rorl
xor
and
mov
adcl
lods
sbb
cmp
xchg
push
lea
mov
mov
inc
loopne
jb
pop
add
aad
mov
xchg
lds
add
mov
and
sub
jo
cs
mull
pop
or
sub
cmp
mov
stos
sahf
mov
dec
repnz
rorl
and
jmp
add
scas
dec
and
fs
out
pusha
add
pop
hlt
pop
das
popf
cmp
pop
clc
addl
cmp
xchg
leave
push
in
mov
xchg
jge
int
sub
shll
jg
inc
add
sub
mov
testb
lods
popa
push
adc
dec
pop
mov
inc
or
lods
nop
stc
adc
sub
out
lret
inc
inc
push
fimull
lea
and
lds
arpl
and
lret
xchg
ljmp
call
inc
lcall
in
lods
lret
mov
jle
xchg
pop
es
mov
enter
cli
push
adc
and
jne
mov
inc
mov
outsb
inc
aas
xchg
dec
sbb
adc
jae
outsb
or
pushf
mov
popa
mov
jo
clc
add
jl
fcom
sbb
fwait
scas
and
inc
or
popa
icebp
aas
stos
cmc
mov
inc
sbbl
sub
pop
or
sbb
and
mov
es
mov
test
das
jl
ds
lret
adc
inc
inc
ss
mov
jo
cwtl
and
adcl
daa
jge
inc
rclb
jl
stos
idiv
ja
inc
or
stc
mov
mov
add
push
push
jecxz
gs
roll
mov
pop
pop
das
cld
out
push
daa
repnz
rorl
in
cmp
push
fnstsw
nop
sbb
insl
movsl
cltd
lock
push
inc
stos
add
mov
decb
add
xor
jb
cmp
lcall
or
ljmp
mov
sub
in
test
cli
outsl
das
in
out
dec
call
mov
jne,pt
and
add
mov
pop
mov
loope
mov
dec
push
mov
fstl
cmp
fdivl
subl
aaa
test
ret
add
mov
or
pop
xchg
push
push
outsl
mov
add
add
jbe
test
cmp
inc
shlb
cmp
ss
fdivs
dec
mov
rolb
mov
mov
insl
pop
push
subl
xchg
ficomps
and
retw
fcomps
aaa
mov
mov
aas
btc
data16
mov
test
js
jnp
test
cli
call
icebp
pop
push
sbb
inc
test
ret
cmpsl
jg
call
sub
mov
jne
divb
add
and
andb
jno
sahf
shrb
stos
leave
test
pusha
imul
jle
adc
rorl
add
sub
adc
sub
cld
hlt
lea
fcoms
sbb
mov
mov
sub
or
or
jbe
pop
mov
pop
lret
pop
loopne
push
or
dec
add
popf
mov
decl
movsb
sub
lock
push
outsb
addb
movsl
jbe
mov
push
jl
mov
xchg
pop
jmp
jmp
sbb
stos
pusha
arpl
or
sub
mov
xlat
icebp
xor
icebp
mul
mov
xchg
bound
adc
mov
fdivrl
push
testl
mov
sub
cmpsb
hlt
into
xchg
xor
and
in
mov
mov
out
sub
std
dec
pusha
loopne
fdivr
mov
push
jmp
xchg
adc
daa
or
test
inc
stos
mov
leave
xor
int
push
or
cld
stc
daa
das
add
fldl
jb
inc
jecxz
cltd
mov
jp
ret
out
ret
ret
jo
mov
aam
in
lea
and
lahf
adc
dec
pop
shl
push
aad
jp
scas
sub
icebp
pushl
aam
inc
push
scas
addr16
test
popa
xchg
sbb
or
add
mov
sub
shll
inc
call
xchg
ljmp
ret
aad
fldcw
sarb
mov
hlt
push
sub
pop
sub
sbb
push
sbb
ljmp
roll
hlt
or
mov
fadd
mov
push
test
pop
or
dec
loope
sbb
push
mov
stc
inc
subb
sub
mov
dec
sub
clc
xor
push
cli
out
loop
xchg
xchg
push
and
and
pusha
push
test
inc
sub
fwait
lea
stos
or
in
lea
stc
movsb
pushf
dec
inc
pop
call
cmc
mov
and
outsb
mov
insb
hlt
pushf
jo
in
xor
testl
push
aas
test
out
loope
ja
adc
dec
cld
add
or
or
add
orl
loopne
push
cltd
cmc
pop
cmp
outsb
js
pop
pop
fwait
call
pop
clc
std
mov
ficompl
das
cmc
sbb
add
les
jbe
movsb
fs
scas
call
popa
jl
adcb
fadds
add
jg
or
fwait
data16
test
add
sbb
lea
xor
pop
vandps
mov
pop
jle
xchg
loopne
mov
rcr
jns
into
mov
cmp
insl
fcmovnbe
out
in
aas
xor
ret
and
inc
aas
sti
xor
mov
inc
out
insb
jge
leave
cmc
sub
call
pusha
dec
or
aas
and
jle
lcall
pop
rcrb
xor
push
jmp
decl
es
loopne
adc
into
cmp
dec
rorl
jge
pusha
inc
aaa
jbe
arpl
and
subl
sub
jo
shrb
sub
mov
test
shll
or
test
jl
mov
nop
add
mov
cs
and
das
adc
pop
cmp
in
jmp
or
push
ret
cli
insl
rol
ret
or
adc
xorl
or
xor
mov
jmp
rcrb
nop
add
push
adc
lret
out
pop
push
add
mov
cmp
mov
mov
outsl
pop
mov
stos
cmp
cmp
hlt
dec
rcr
push
les
add
ret
mov
sbb
cmp
adc
push
lahf
ljmp
jne
mov
sub
mov
addr16
test
in
lods
mov
daa
cwtl
sbb
dec
inc
imul
ficoml
xchg
stos
test
mov
roll
outsl
sbb
xor
cmpsb
dec
mov
cmp
lret
mov
mov
js
mov
sbb
cmp
mov
mov
inc
xor
lahf
cmc
and
or
jae
xchg
stos
mov
or
aam
mov
mov
and
adc
and
mov
sbb
and
xchg
ss
dec
frstor
call
mov
fwait
or
inc
pop
inc
lock
andb
into
int3
mov
ret
cmpsl
mov
fld
xor
mov
lock
sub
rcrl
aad
dec
bound
or
xchg
ljmp
es
int
into
jle
rcr
xchg
fdiv
push
adc
jno
mov
fimull
adc
fiaddl
mov
je
fisttps
into
cmpsl
ret
xchg
or
mov
and
cld
faddl
or
loopne
cmp
pop
imul
adc
sbb
flds
push
push
shll
dec
mov
hlt
movsb
out
xchg
je
cli
pop
add
pop
mov
mov
repnz
leave
fucomi
or
mov
mov
jecxz
xchg
andl
xchg
lcall
popa
pop
add
and
sbb
push
popa
mov
notb
popf
popa
xchg
out
push
test
cmp
dec
ljmp
mov
jge
leave
pushl
jp
add
xlat
and
cltd
mov
sub
nop
fucomp
push
mov
aad
je
scas
and
jmp
das
ds
aam
inc
mov
and
inc
inc
ljmp
sbb
push
and
and
pop
ret
cld
dec
lret
mov
je
adcl
repnz
adc
fistps
lea
push
and
pop
cltd
mov
ja
shlb
cmpsl
sub
fs
inc
lock
in
mov
shlb
adc
ss
fwait
add
inc
cmp
fistpll
lock
and
ret
fmulp
jecxz
loopne
out
js
cmp
xor
dec
and
jg
and
popa
and
jbe
aaa
mov
subb
xchg
jns
out
imulb
incb
add
leave
xchg
test
pop
mov
test
stos
sti
dec
stc
pop
insl
mov
mov
jg
pop
jl
lock
in
or
mov
les
repz
mov
outsl
adc
pop
les
dec
add
or
xor
movsb
cmp
adc
pop
add
lahf
sbb
or
cltd
aam
in
mov
mov
lret
mov
sbb
lods
lea
adc
pop
cmp
sahf
push
ja
call
pop
or
dec
fnstcw
cmp
std
cwtl
jbe
lret
lret
xchg
stos
fisubl
sub
inc
dec
adc
inc
scas
dec
loop
sbb
loopne
xor
jae
gs
test
js
cld
jle
ljmp
sub
xchg
das
mov
push
stos
fisttps
or
mov
int
lods
outsl
shlb
mov
lock
aam
mov
cmpsl
test
int3
outsl
xor
mov
in
cmp
mov
addr16
enter
notl
rorl
push
mov
sarb
dec
mov
imul
or
stos
icebp
adc
inc
out
rorb
xor
cmc
stc
cmpsb
ret
add
mov
aam
scas
cmp
ss
mov
cmpsb
movsl
xchg
or
xchg
cltd
sub
xchg
and
mov
shl
xlat
dec
pop
sahf
fstps
int3
mov
jo
xor
push
rcrl
shrb
or
inc
scas
jmp
jp
push
movsl
out
cmp
jno
shl
mov
and
adc
scas
cwtl
lcall
in
push
sahf
mov
cmpb
cs
bound
dec
inc
dec
insl
rolb
lds
mov
xor
loope
imul
fildll
mov
mov
decb
mov
push
mov
inc
jmp
and
xor
lock
pop
jecxz
mov
aad
jg
shll
mov
loopne
ss
push
jmp
dec
dec
dec
enter
pop
cli
movsl
lods
dec
jecxz
sbb
das
neg
adc
das
mov
stos
xor
jecxz
jge
and
test
or
and
aaa
aaa
and
nop
mov
fidivrl
fldl
rol
sbb
sub
test
aad
mov
fcomi
popl
push
and
call
and
and
es
ljmp
and
lods
xor
xchg
push
mov
push
in
icebp
cmp
popl
rorl
add
add
aaa
out
call
jne
add
mov
les
pop
sahf
and
and
xlat
mov
dec
xchg
and
test
fs
pop
mov
inc
rcr
mov
sub
jne
push
sti
push
sbb
fstpt
jle
jecxz
cmp
push
test
das
fistpll
xor
aam
mov
ljmp
pop
scas
arpl
icebp
sbb
in
lods
out
pop
mov
lret
mov
lds
cmp
inc
rcrl
cld
rorb
jmp
or
repnz
popf
pushf
mov
loop
rol
sub
stos
mov
pusha
scas
cmp
and
push
aam
sti
xchg
fisttpl
mov
or
mov
sbb
jmp
movl
mov
push
rcrb
fistpll
sbb
pushl
add
adc
and
add
mov
dec
sub
mov
ret
fisubrl
imul
or
or
xchg
cmp
jp
mov
jge
push
sbb
shlb
insb
fildll
xchg
sub
clc
push
add
popa
mov
push
sti
fsubrl
mov
outsb
add
movsb
repnz
xor
adc
ret
imul
inc
adc
push
stc
loop
leave
test
mov
sub
and
pop
mov
jbe
mov
pop
jle,pn
mov
gs
mov
push
mov
fisubrs
sbb
clc
inc
shrb
cmp
lods
mov
in
mov
jge
jg
pop
clc
mov
xlat
pop
sub
lret
dec
xor
outsb
lds
rol
lea
sahf
gs
in
icebp
lods
aaa
outsb
subl
imul
xor
shrb
adc
outsl
fistl
outsl
test
dec
or
je
mov
into
add
lcall
jmp
or
sbb
sahf
enter
add
nop
pop
shl
sbb
pop
ret
pop
loop
jmp
push
lock
or
in
push
mov
aaa
aaa
or
inc
das
aad
lcall
pop
das
ja
xchg
loope
sub
bnd
shlb
ret
inc
adc
adc
cmpb
pusha
addb
dec
sub
fsubrs
dec
outsb
outsl
inc
push
jg
add
ffree
aam
test
in
or
sub
sti
stc
cmc
int3
rorl
push
addr16
adc
jmp
rol
jg
test
je
mov
mov
ret
sarl
or
push
inc
mov
or
mov
call
daa
stos
fdivrl
movsb
xchg
cmp
shrl
mov
fildl
xchg
ds
mov
mov
mov
dec
mov
mov
mov
out
or
and
fistpll
movsl
inc
popf
mov
ret
adc
out
add
adc
sub
mov
push
jp
out
push
sub
rorb
and
aad
das
lock
mov
lods
lahf
pop
push
sub
mov
lods
daa
popa
adc
test
movsl
int3
jbe
test
sbbb
sbbl
cmpsl
lods
notb
aas
notb
in
dec
xor
aaa
sarl
adc
xchg
add
sub
mov
fcomps
lahf
adc
and
cmp
orb
mov
loopne
sti
or
adc
dec
and
lcall
pop
sub
das
pop
std
xor
add
sar
fsubrl
push
cli
or
jl
cs
mov
mov
or
pusha
jo
add
cltd
inc
lea
pmuludq
add
orb
xchg
push
stos
jo
inc
push
dec
fisttpll
cli
ret
les
dec
jp
sbb
push
xchg
mov
repz
sub
js
std
fdivl
lea
mov
mov
cs
adc
cmpsb
inc
sub
pop
mov
fdivs
aad
mov
lret
testb
adc
orb
lods
leave
mov
add
mov
and
xor
jg
pop
push
lods
adc
or
sub
lds
addb
sub
movsb
fwait
sbb
and
js
mov
imul
and
loope
loope
das
dec
sbb
in
xor
mov
mov
push
outsl
dec
mov
das
or
outsb
cs
mov
cli
xchg
test
loop
test
adc
jb
repnz
ret
push
mov
xlat
and
movsb
int
les
sbb
out
adc
mov
test
mov
fsubl
leave
cwtl
push
idivb
mov
in
mov
orl
mov
nop
test
jnp
push
call
pop
mov
mov
aam
in
rolb
outsb
mov
xor
inc
xchg
pop
lea
mov
out
sbb
push
inc
fsub
mov
xor
in
mov
mov
jnp
lret
addr16
in
in
xchg
or
mov
in
push
xchg
jle
icebp
adc
adc
add
mov
insb
dec
mov
in
jge
push
insl
loopne
push
sbb
mov
sub
fiaddl
or
in
fcomi
mov
stos
xchg
dec
fwait
xchg
cli
jo
jno
les
inc
or
js
je
lods
inc
xchg
cmp
test
mov
push
push
xor
repnz
mov
jg
mov
stos
imull
incl
fwait
or
dec
icebp
rol
int3
xchg
in
pop
pusha
mov
lcall
jmp
dec
sbb
mov
and
and
pop
xchg
aaa
fstl
push
das
inc
or
inc
dec
out
in
incl
mov
pop
subb
les
cmp
jmp
xchg
cmpsl
and
and
jle
leave
icebp
or
loop
push
cmpsl
xor
in
insl
sbbl
mov
xlat
xor
jo
xchg
cmp
into
or
push
pop
jl
inc
sub
mov
mov
cs
push
mov
inc
dec
sti
imulb
mov
dec
cmp
fbstp
cs
roll
mov
push
stc
pop
xor
shll
add
jo
dec
fcmovnb
cmpsl
test
scas
mov
cli
in
add
dec
mov
sbb
jo
mov
mov
jg
ja
xchg
push
mov
jbe
jnp
std
dec
mov
cld
pop
scas
clc
cmc
fidivrs
loope
jg
cs
sub
jnp
arpl
int3
das
cmp
jl
adc
jmp
mov
bswap
les
iret
lods
filds
test
or
ljmp
int
mov
out
sub
inc
mov
add
lods
lea
insl
mov
push
jg
jno
sbb
sub
negl
dec
mov
andb
xor
leave
adc
pop
jo
cli
scas
mov
loopne
leave
loopne
add
jo
cwtl
pop
scas
scas
pop
outsl
mov
fisubl
add
pop
sub
pop
pop
clc
push
sub
jae
cmp
roll
outsb
push
push
or
scas
out
push
jo
mov
jns
lret
adc
cli
dec
rolb
mov
aad
and
test
ljmp
mov
popf
mov
enter
dec
inc
notl
sbb
lea
stos
pop
sbbl
outsl
insl
pop
mov
aam
rcl
mov
xorl
xor
cltd
faddl
add
test
sub
cmp
mov
mov
in
xor
lods
cs
fcompl
mov
jmp
int3
push
ds
sub
cld
mov
sub
push
lea
xchg
push
pop
add
push
pop
and
xor
mov
sbb
mov
inc
fmull
or
je
test
dec
xchg
notb
mov
ret
mov
aam
sub
aas
dec
mov
mov
ret
sbb
in
xchg
push
lods
mov
lods
mov
xor
mov
sbb
and
push
decb
adc
jnp
xchg
dec
pop
cwtl
mov
cmovbe
adc
sub
icebp
or
popl
jecxz
add
pop
or
std
and
push
cld
and
push
sub
fiaddl
mov
push
sub
push
jl
and
shrb
adc
outsl
cmp
call
outsl
cld
inc
pop
mov
lods
add
cs
pop
mov
test
cmp
out
out
sti
decl
sahf
mov
sub
mov
or
push
sub
in
movsl
mov
in
nop
dec
mov
adc
movsl
mov
scas
lea
hlt
pop
js
ljmp
stc
cwtl
call
fldenv
mov
jbe
fsub
dec
cmc
jecxz
loope
enter
pop
or
or
rolb
push
mov
dec
push
cmp
push
nop
sbb
fwait
mov
ss
inc
insb
mov
in
lods
sub
mov
iret
rorl
test
sub
inc
jb
adc
inc
sti
pop
enter
lcall
push
xchg
ret
push
fstl
xchg
push
mov
push
xchg
and
nop
les
loope
movsl
sub
insl
aaa
pop
bound
push
xchg
sub
mov
add
movb
push
pop
or
leave
xor
imul
jmp
sub
inc
mov
sbb
xor
movsl
mov
sbb
jp
and
mov
add
lods
pushf
mov
push
pop
stos
aaa
fidivrs
push
pop
xor
and
pop
sub
imulb
push
xchg
adc
into
push
scas
adc
or
sub
fs
adc
jo
xchg
or
sbb
pushf
movsl
subl
add
test
test
mov
in
sarl
imul
xchg
sub
mov
or
sbb
outsb
pop
jecxz
dec
aas
ffreep
mov
push
mov
rcrl
gs
out
clc
lea
adc
lret
pop
popa
test
sbb
mov
and
inc
les
das
fidivrs
aaa
sbb
sbb
mov
mov
fs
mov
pop
inc
ljmp
cmp
fcmovu
inc
sbb
cs
mov
icebp
pop
imul
cmp
mov
dec
mov
push
sbb
sar
movsl
ljmp
mov
aam
das
sbb
sti
rcl
call
sbb
fstl
adc
jecxz
cmp
aaa
les
ss
inc
dec
inc
les
add
or
xchg
imul
adc
push
shll
scas
aaa
mov
adc
pop
test
sarb
addr16
andl
or
lock
mov
xor
xchg
sarb
adc
lds
or
add
jae
jbe
push
dec
lds
jae
in
xchg
push
xchg
or
shl
iret
ret
pop
sub
mov
stos
bound
jnp
lret
jg
sti
add
push
mov
sbb
and
adc
dec
fldt
or
dec
orb
and
xchg
mov
nop
int3
fildll
in
notb
clc
cmp
jnp
pop
in
xlat
loope
inc
mov
sbb
sbb
push
loope
shrl
xor
aam
mov
and
push
orl
insl
inc
cmp
sub
ss
fcoml
mov
sub
xchg
pop
pop
cli
loop
jnp
inc
aaa
scas
test
dec
jge
adc
push
lea
mov
xchg
mov
xlat
cmp
mov
popa
add
iret
sbb
sbb
add
fisttpl
lock
add
pop
outsb
and
aaa
fstl
movsl
pop
xchg
mov
cmpl
je
or
bts
pushl
ljmp
jo
xor
adc
inc
jmp
or
mov
sahf
dec
push
or
aas
ljmp
lcall
lret
pop
dec
cmp
push
outsl
jl
xorb
jo
fwait
les
mov
add
stos
mov
imul
pop
call
xchg
mov
fchs
cmpsb
outsb
xchg
das
or
xor
add
shlb
in
fists
dec
fnstsw
xchg
test
lret
dec
fmull
sub
cli
ret
scas
mov
mov
push
int
ljmp
jge
jecxz
adc
add
and
mov
pop
xchg
inc
mov
scas
addr16
and
addb
test
shr
sub
int3
cmpsl
pop
std
movsl
xor
mov
ljmp
cmpb
mov
lds
mov
push
jg
and
push
mov
out
dec
outsl
push
sbb
inc
pusha
dec
and
dec
and
sub
aaa
out
or
xor
insl
dec
das
mov
push
add
pop
ficoml
les
jne
loop
adc
ret
jecxz
popa
mov
movl
pop
fcmovbe
sahf
push
rclb
jle
test
and
push
xchg
add
and
ss
add
mov
or
pop
imul
pop
pop
cli
lea
or
xor
repnz
push
mov
or
inc
pop
xor
mov
pop
lods
xchg
sbb
sub
repz
mov
fwait
sub
xor
in
outsl
add
call
in
shll
sub
xor
mov
jg
xchg
ret
adc
ret
mov
aam
fistpll
cld
pop
in
loopne
cmp
sbb
dec
push
loope
xlat
ret
pushf
aam
xchg
cs
repnz
mov
cmp
test
and
adc
icebp
pop
or
xchg
std
or
inc
xchg
not
pop
outsb
xchg
cmp
prefetch
mov
repnz
rcll
test
loopne
jmp
std
aaa
add
inc
mov
adc
lahf
subb
xchg
dec
cld
mov
jmp
add
inc
fcoms
pop
add
out
mov
hlt
sbb
cld
adc
adc
mov
push
das
dec
inc
or
cmp
loopne
xchg
push
xchg
push
ret
pop
int3
cmp
and
inc
imul
jmp
pop
push
je
add
or
mov
xor
or
push
add
insb
adc
movsl
xchg
aam
and
lock
cmp
fs
add
es
rcll
and
lock
popa
lret
out
in
inc
lock
mov
push
sbb
jecxz
fistps
push
aam
inc
mov
xchg
jne
mov
add
cmpl
insl
loope
push
arpl
push
negl
out
cmpsb
call
push
clc
es
pop
mov
dec
and
loopne
lret
hlt
testl
in
push
das
cmp
sub
or
push
add
aas
dec
shlb
je
cmpsl
data16
mov
movsb
inc
inc
mov
out
jge
dec
mov
sbb
jecxz
aas
or
fisubrl
test
mov
shlb
mov
mov
xor
roll
aad
aad
lds
shl
add
lret
push
in
adc
mov
in
pop
insl
enter
mov
pusha
pop
out
test
mov
out
clc
push
fistpl
stos
adc
or
ds
jp
adc
mov
adc
popa
popa
stos
mov
mov
mov
in
lock
fisubs
add
adcb
nop
xchg
pop
aas
rcr
mov
bound
movsl
jp
in
mov
inc
and
mov
fs
add
into
cmp
mov
notb
add
pop
fistpll
dec
adc
pop
push
lds
mov
add
sub
jg
fnsave
lods
scas
mov
out
aaa
dec
rcrl
push
xchg
outsl
xchg
pop
sbb
mov
mov
das
jbe
icebp
jecxz
cmp
xor
cmpsb
ljmp
pop
jg
add
cmp
jl
and
fcompl
lds
mov
xor
mov
subl
xchg
pop
mov
stos
adc
jbe
push
leave
dec
lock
in
push
test
mov
je
mov
add
cmp
mov
aad
xchg
repz
rcrl
push
int3
sbb
out
fnstcw
outsb
js
adc
mov
mov
dec
adcb
imul
and
pop
lods
mov
sub
je
aad
shr
mov
fisttps
popa
movsl
push
imul
lods
or
mov
clc
pop
dec
aaa
fdivl
cmp
add
adc
push
dec
adc
ret
shrb
test
mov
adc
fadd
inc
test
lahf
adc
inc
and
dec
or
out
leave
sbb
lds
xor
addl
in
sbb
mov
repnz
dec
cld
sbb
dec
sub
mov
out
or
incb
sub
and
dec
or
cli
pop
and
mov
jg
popa
lcall
fdivs
inc
sbb
leave
pop
push
and
stos
lock
outsb
ffreep
outsl
mov
repnz
inc
xchg
jecxz
fstps
cmpsl
mov
fldl
ljmp
mov
cmc
xor
loope
das
cmpb
dec
fdivrl
pop
test
dec
or
add
loope
mov
fidivrs
jns
cli
inc
mov
aas
shr
ffreep
call
mov
dec
test
arpl
sahf
repz
and
hlt
push
adc
adc
mov
push
enter
shlb
imul
push
xchg
cli
inc
push
push
mov
jp
lret
jo
mov
nop
decb
sbb
mov
lahf
sub
sbb
pop
push
pop
imul
dec
lods
mov
lods
adc
pop
insl
pop
js
or
or
sub
mov
pusha
jecxz
in
ret
shll
sub
insl
into
push
xorb
jle
out
cmpsl
gs
les
xchg
ret
and
xchg
mov
or
inc
daa
in
movsb
jge
imul
std
std
es
xor
mov
lock
test
sbb
lods
xchg
xchg
xor
inc
neg
mov
jb
cmp
mov
fstpt
sub
addl
aad
dec
imul
xor
mov
into
and
inc
test
out
xchg
loop
mov
mov
inc
mov
pusha
and
pop
jge
fs
adc
sbb
filds
sti
adc
les
insb
mov
rcl
sbb
fdiv
add
adc
lds
shll
outsl
enter
inc
jmp
pop
fsubp
mov
mov
jo
pop
mov
xor
inc
cmpsb
ja
les
mov
xor
add
adc
sbb
mov
cmpsb
out
stc
inc
dec
jle
xor
in
push
pop
xor
dec
mov
jg
mov
mov
lcall
push
orl
jmp
pop
clc
cmp
out
mov
popf
int3
adc
mov
mov
das
lea
inc
and
es
ja
mov
ja
xor
cmp
cmp
clc
sbb
cmpb
adcb
add
cs
ret
jecxz
js
aas
adc
add
cmp
inc
mov
adc
mov
dec
xor
mov
ret
aad
loopne
loop
hlt
test
inc
mov
loopne
arpl
dec
sarb
jnp
xor
add
add
lea
add
scas
mov
mov
sbb
or
sub
lods
or
xor
cmp
cwtl
add
fbstp
dec
jae
mov
sub
mov
mov
scas
adc
fbstp
mov
pop
imul
clc
movb
pop
fsubp
rorl
int
movsl
pop
mov
lds
sbb
jl
sub
rol
ja
push
aaa
lret
sub
ja
jne
daa
popf
add
int3
jb
fucomi
adc
and
ja
jp
shrb
cld
repz
iret
adc
loop
imul
xor
test
push
mov
pusha
or
or
insb
dec
insl
pop
in
mov
sbb
mov
sbb
pop
loopne
cmpsl
mov
and
daa
sbb
and
adc
int3
aad
xor
inc
add
push
push
add
les
or
sbb
cmp
jmp
or
inc
pop
mov
sahf
das
mov
imull
push
push
mov
mov
mov
ror
imul
inc
mov
es
push
aam
mov
add
or
pop
jge
nop
loope
lods
sbb
fistpll
mov
or
jo
mov
les
call
xchg
sbb
and
ficoml
test
cmp
push
and
and
mov
inc
xchg
mov
inc
xchg
add
adcb
mov
mov
fimuls
jo
lods
daa
inc
mov
push
pop
mov
push
fidivs
pop
cmp
mov
mov
imul
xor
jecxz
popa
xorl
cmp
mov
push
push
les
sbbb
adc
out
in
lret
cmp
push
mov
fstpl
das
pushf
jmp
cmp
mov
jmp
call
mov
mov
push
test
int3
iret
popa
jecxz
push
stos
clc
pop
mov
mull
pop
aad
cmova
stos
pop
cli
dec
xchg
xchg
ret
stos
xorb
inc
push
mov
push
lret
mov
inc
arpl
lds
inc
xor
mov
loopne
push
xchg
fistpl
rorb
mov
data16
insl
sti
div
sub
shll
and
pop
iret
push
test
outsl
shlb
dec
mov
jmp
push
sbb
sub
inc
or
cmc
mov
xchg
cmp
movsl
mov
test
shrb
mov
mov
dec
or
mov
jl
into
movsl
testb
ret
leave
gs
in
cli
popa
lods
sbb
loop
pop
and
dec
mov
sub
pushf
dec
cwtl
push
or
or
mov
jmp
push
or
add
sbb
mov
fldl
mov
addb
cmp
adc
mov
ret
mov
sbb
cmpsb
jle
arpl
mov
mov
jmp
inc
jno
mov
push
sarl
add
mov
jmp
dec
mov
xor
mov
adc
loope
pop
add
loopne
cmp
into
xchg
stos
mov
icebp
aas
cwtl
jle
repz
sbb
call
sub
sbb
inc
sahf
loope
stos
pop
cmp
xchg
cmpsb
or
test
and
fbstp
inc
pop
push
idivb
and
add
inc
loopne
add
inc
and
or
inc
cmp
fdivr
push
add
mov
adc
mov
inc
out
les
mov
rolb
imul
icebp
sub
mov
inc
xor
mov
mov
mov
sarb
or
cld
jg
mov
mov
xchg
ja
mov
mov
and
sbb
out
flds
js
loopne
fstp
les
imul
test
roll
in
push
in
sub
out
clc
negb
sbb
push
adc
out
test
pop
xor
scas
sub
aaa
sbb
lcall
push
mov
mov
enter
mov
and
push
xchg
mov
insb
lret
or
jle
loop
xor
push
aam
repnz
movsb
push
pop
pop
fcomps
aam
frstor
aam
insb
pop
mov
inc
inc
sbbl
clc
adc
jg
dec
les
xor
jl
ljmp
or
notl
lods
aad
in
xor
push
sti
push
vcvttsd2si
mov
cmpsb
xor
sbb
pop
incl
icebp
mov
scas
pushf
ret
xchg
rcrl
movsl
jg
icebp
cmpsb
clc
mov
xor
push
das
push
and
push
out
sub
adc
xchg
loop
jns
mov
pop
xchg
pop
incb
imul
leave
addl
daa
clc
iret
or
ffree
push
divb
pop
adc
cwtl
add
push
popf
adc
push
lret
arpl
into
mov
aaa
js
flds
mov
adc
test
je
aas
xchg
jns
jp
mov
sbb
inc
int3
test
in
insl
cmp
push
out
jns
or
movsb
and
lods
mov
repz
add
aam
jbe
mov
or
xchg
and
lea
inc
movsb
pop
dec
out
lock
push
in
sahf
movsl
cwtl
ds
jg
inc
outsl
std
pop
outsb
insb
mov
cmp
out
movsl
pop
pop
jo
push
test
pop
incl
sub
dec
pop
xchg
fsubs
cmpsb
pop
jg
xchg
mov
fstpl
roll
push
mov
inc
push
sbb
cmp
add
or
fiadds
cs
dec
adc
cmp
sbb
xor
fwait
pop
jp
mov
xchg
out
pop
mov
ret
sarl
jae
movsl
mov
xor
rcr
fiaddl
imul
jo
push
cld
add
mov
js
sahf
fistpll
test
add
ret
and
in
aaa
push
jecxz
sub
std
scas
cli
out
popa
pop
rcrb
fldt
add
xchg
jbe
jg
mov
add
jle
mov
test
insl
stc
mov
jae
push
mov
xchg
xchg
jb
decl
inc
add
in
sub
pushl
push
lea
push
push
push
stc
fucomi
dec
cld
push
add
push
sbb
dec
add
xor
ret
data16
xchg
add
push
or
or
mov
pop
fldt
add
pop
pop
or
mov
push
push
push
inc
hlt
add
dec
push
push
push
call
mov
add
ss
dec
ss
cmovge
mov
sub
push
inc
clc
push
fcmovu
mulb
push
push
push
pop
call
mov
dec
jp
inc
pop
or
int
mov
jbe
dec
or
jo
fucomp
mov
dec
idiv
ds
lock
fwait
hlt
lock
mov
dec
push
loope
outsb
jne
jns
and
xor
ret
pop
mov
add
ss
lods
push
push
add
in
push
aaa
imul
or
add
not
sbb
add
mov
incl
inc
hlt
cmpsl
int3
inc
add
lret
inc
neg
not
mov
rorb
xlat
dec
scas
sbb
jmp
add
sahf
mov
in
fistpll
push
dec
mov
dec
inc
xor
xor
arpl
in
std
call
pusha
sbb
pop
add
shrb
insl
xchg
xor
dec
imul
clc
xchg
call
aaa
xor
or
mov
repz
jnp
adc
mov
imul
push
int3
sub
sbb
cltd
test
call
cld
call
cs
cmove
push
hlt
push
dec
dec
mov
mov
loopne
aaa
hlt
or
loopne
cmp
repnz
jae
pusha
sbb
push
push
pop
jge
mov
inc
push
outsl
cmp
outsl
aaa
xor
or
call
cmp
or
out
lahf
in
push
sbb
dec
add
call
or
scas
push
ret
mov
add
cld
int3
stos
fstpt
mov
push
xor
fimull
in
sti
icebp
mov
cmp
ficomps
push
and
sub
push
push
or
fs
fnsave
xchg
pop
in
cwtl
icebp
out
je
push
push
test
inc
arpl
mov
pop
push
and
loopne
mov
xor
xor
clc
pushf
sbb
ret
ss
loopne
dec
cmp
pop
dec
call
mov
popa
clc
iret
ss
fadds
in
jnp
jbe
sbb
clc
mov
dec
sti
jmp
icebp
add
add
inc
jecxz
imul
cmpsb
pop
and
mov
inc
dec
add
jecxz
adc
jmp
add
push
dec
push
imul
push
push
inc
sti
iret
dec
dec
pop
mov
insb
punpckhwd
pusha
push
xchg
ss
jne
inc
mov
mov
or
nop
int
rcrl
rolb
cmp
int
scas
fstp
ljmp
jae
push
push
dec
jne
cmp
out
pop
or
xor
xor
sbb
add
push
push
sub
lock
jmp
fs
mov
pop
cmp
call
aaa
fs
insb
cmpl
jb
xor
push
xchg
aaa
inc
je
sbb
or
insb
pushf
xor
sti
std
push
push
imul
sbb
sub
pusha
xchg
add
shl
pop
les
call
adc
test
call
jg
iret
cmc
mov
js
insl
mov
gs
cld
and
imul
test
stc
jno
lret
dec
jae
add
data16
je
rcl
or
stos
in
outsl
dec
push
push
or
jne
sub
iret
or
and
negl
out
scas
inc
or
adc
push
popa
dec
mov
push
jbe
or
dec
add
jne
fildll
fisttpll
adc
add
sbb
or
and
xor
outsl
jae
dec
pushf
add
fmuls
push
and
jle
test
add
dec
shlb
icebp
cmp
cwtl
xchg
push
bound
xorl
sub
cmc
jl
mov
dec
and
inc
je
in
mov
sub
push
cmpl
push
xchg
pop
pop
in
adc
sub
outsb
sbb
jmp
scas
or
arpl
mov
orl
jae
inc
inc
loopne
jecxz
imul
leave
cmp
jg
pop
cld
mov
add
lret
ret
adc
adc
add
dec
and
fadds
fucomip
mov
inc
stos
adc
aaa
adc
dec
add
dec
sub
repz
shrl
jmp
je
inc
and
js
jae
cld
jg
pop
xor
dec
and
outsb
jl
roll
sub
inc
ja
or
jecxz
push
call
mov
and
mull
imul
pusha
push
add
push
push
dec
je
inc
xor
inc
ficompl
mov
das
shll
push
insb
xchg
cld
pop
in
sub
xchg
ret
pop
mov
fistps
ret
pop
jmp
cmp
cmp
mov
popa
dec
push
cmpxchg
add
lcall
add
mov
xchg
push
pushf
fcmovnbe
mov
imul
xlat
jbe
xor
cmp
inc
dec
sbbl
popa
cmp
out
insb
pop
xchg
cwtl
mov
in
sub
push
fs
incb
xor
dec
incb
cmp
push
sar
sahf
scas
add
repz
or
bound
mov
arpl
dec
cwtl
inc
jns
lret
push
xorb
stos
fwait
add
jb
lea
not
lahf
pop
jno
and
outsl
push
sub
not
arpl
dec
andl
mov
and
outsb
dec
dec
outsl
mov
dec
fisubrl
or
bnd
or
fstp
int
jo
xor
adcl
test
test
add
pop
adc
add
js
jb
push
dec
bound
loope
and
sbb
cltd
mov
xor
inc
adc
lea
in
loopne
sbb
pop
xor
adc
jne
cmp
jns
hlt
das
inc
mov
adcb
jbe
jo
cmp
xchg
mov
popa
push
or
push
loope
inc
pusha
test
fld
mov
xor
ss
sbb
pop
cltd
mov
sti
pop
xor
lcall
les
cmp
sbb
ret
imul
dec
or
stc
int3
rcl
out
imulb
incb
stc
xor
lods
push
pop
sbb
jbe
shll
in
cmp
mov
dec
or
push
daa
dec
push
stc
cld
add
shll
xor
fsubr
add
mov
cmp
fs
pop
push
jle
dec
iret
adc
out
push
jbe
out
pop
cli
jb
push
rcl
or
imul
mov
iret
loop
ret
inc
push
dec
jae
icebp
dec
ja
dec
dec
in
out
lods
fildl
loope
and
jno
and
js
not
dec
add
in
movb
jmp
push
loope
notl
xchg
clc
add
adc
adc
pusha
sbb
mov
je
rorb
mov
jecxz
loopne
sbb
fmul
sbb
or
shlb
loopne
adc
jl
ds
lea
mov
add
pop
or
push
xor
inc
mov
lahf
inc
inc
push
push
popa
loopne
mov
dec
enter
mov
das
rorb
jmp
sub
add
popa
arpl
mov
and
add
lock
push
pop
xor
insl
adc
pop
and
enter
bound
push
jb
dec
out
insl
and
push
inc
pushl
inc
inc
jb
loop
add
mov
dec
ret
clc
xor
mov
movsb
jnp
rorb
insl
cli
pop
movsb
cmp
or
lcall
clc
adc
not
add
neg
js
aaa
pop
rorb
mov
jo
jg
sbb
out
jne
arpl
aaa
inc
cs
dec
call
inc
popl
jge
notl
cmp
ja
jl
push
in
mov
js
push
icebp
inc
and
jp
fisubrl
mov
movsl
inc
test
xor
xor
ss
rorl
movsl
adc
add
push
inc
dec
push
mov
das
js
das
add
add
push
push
pop
js
repz
jno
and
shl
call
aaa
sub
pop
add
inc
push
dec
inc
lods
aas
sub
repz
jne
inc
jne
js
imul
xchg
lcall
pop
mov
sbb
inc
ja
in
shr
out
aaa
dec
add
cli
call
imul
insl
incl
lock
pusha
sub
add
adc
cld
in
inc
mov
push
cmc
neg
faddp
add
inc
or
inc
and
cli
test
or
lcall
xchg
add
pop
insl
add
xchg
push
fwait
xchg
arpl
cld
pop
ja
sbb
inc
imul
dec
push
push
add
adc
pop
jmp
jae
imul
inc
xchg
fcomps
dec
mov
jo
test
mov
jo
pop
mov
sbb
mov
push
inc
es
icebp
push
mov
dec
es
dec
insl
push
xor
insl
ror
pushf
in
shl
xchg
xor
cmp
mov
loopne
and
sbb
xchg
orl
sbbl
jne
push
cs
cld
mov
ss
or
jbe
bound
pushl
sahf
aad
xor
jmp
xor
jecxz
lock
ja
gs
dec
xor
or
xor
xor
sbbl
js
cmp
inc
push
gs
sbb
dec
neg
jg
hlt
rol
cld
nop
and
push
fmul
push
inc
jbe
or
jb
int
ficomps
mov
push
inc
push
xor
push
adc
js
test
cmp
push
add
and
lock
or
arpl
push
push
ss
rcr
lds
je
inc
mov
sbb
sbb
mov
push
inc
inc
out
push
cs
cmp
dec
ds
dec
sahf
or
call
or
and
outsb
or
add
out
hlt
cmpl
mov
mov
mov
pop
test
sti
and
testb
pop
incl
mov
sub
jmp
or
push
ss
lock
ja
mov
mov
pusha
std
cmp
sub
aam
inc
add
loop
adc
jle
xor
jno
jb
ds
stc
push
dec
xor
addl
into
lods
sub
pop
dec
sub
mov
ss
cld
cmp
movsl
fistpl
fwait
sub
add
sub
jmp
add
sarl
test
in
test
ret
cwtl
subb
xor
cmp
sub
add
pusha
insb
lcall
xchg
or
das
lods
cmp
das
push
mov
ret
add
dec
cmp
je
inc
and
jno
jmp
inc
ja
mov
mov
dec
sbb
ret
out
cmp
push
ss
or
in
xchg
call
adc
dec
sub
dec
cmp
jne
jle
mov
outsl
gs
ja
out
notl
dec
imul
jg
and
cld
add
imul
mov
pop
jbe
ja
cmp
or
sub
loope
fwait
sahf
mov
push
enter
xchg
push
movsl
dec
clc
call
jmp
adc
jmp
push
int3
push
jb
inc
js
rorb
jno
cmp
cmpsl
shll
mov
jg
in
pop
test
daa
ja
dec
xor
dec
popa
dec
outsb
cmp
dec
xor
jo
rolb
movsl
std
push
or
mov
hlt
dec
sbb
cmpsl
mov
or
cli
testl
dec
lock
cs
mov
orl
sbb
dec
out
push
ja
push
mov
fcoms
or
xchg
or
pop
push
sbb
sub
push
pushl
push
xor
sbb
out
outsl
icebp
lret
adc
push
add
loop
cmpsl
jne
add
inc
nop
lret
fisttps
popa
jmp
push
loop
sub
mov
add
mov
sbb
lahf
push
inc
pop
pop
ljmp
imul
pop
leave
ja
pop
xor
mov
outsl
add
stc
or
outsb
jmp
hlt
aas
jo
insl
lods
push
xor
dec
shlb
mov
ss
push
sbb
cli
lods
or
sbb
inc
pop
lock
jmp
les
loopne
or
js
dec
or
mov
xor
inc
mov
loopne
inc
rcrl
sbb
dec
inc
sbb
or
insl
or
push
std
jns
lds
aaa
inc
pop
push
jg
xor
call
push
cltd
push
cmp
jne
lea
dec
std
sub
mov
jmp
push
inc
jge
xchg
pop
ds
inc
mov
or
fidivs
out
or
ds
pusha
cs
push
mov
cmp
mov
repz
mov
or
testl
frndint
pusha
fmull
imul
push
mov
dec
push
ja
push
fnstsw
movsl
dec
pop
ja
dec
ss
insl
gs
sub
fs
add
mov
loopne
xchg
jae
dec
loop
psrlq
scas
lods
jnp
cmpl
push
or
cmpl
inc
inc
lahf
jp
cmp
inc
imul
add
fstpt
add
bound
sbb
mov
pop
pop
push
jbe
sub
jns
in
cmpsb
adcl
pop
sub
ds
or
or
nopl
fcomip
sbb
je
dec
lcall
sbb
sub
lods
js
or
add
xchg
push
loop
xor
sbb
adc
js
sti
sbb
sub
jmp
aam
fbstp
jmp
or
not
mov
or
inc
jne
sbb
sub
jmp
test
mov
cmp
je
sub
adc
dec
jo
xor
jb
rcrl
enter
add
xchg
sarl
inc
shrb
mov
add
inc
mov
mov
ss
dec
movsb
insb
repz
sbb
pop
aam
mov
enter
push
xchg
mov
cmp
adc
loopne
and
push
mov
push
inc
call
push
inc
xor
test
add
outsl
sbb
dec
inc
or
jno
roll
scas
pop
push
jge
std
in
arpl
or
sub
sub
lock
pop
fistpll
test
cmp
adc
push
inc
mov
fstpt
test
fisubl
mov
cmpl
adc
sub
mov
add
filds
xor
jl
in
notb
arpl
rcrb
sub
mov
push
add
sub
cld
lods
sub
inc
inc
sub
gs
ja
fwait
out
jp
sub
cmpsl
inc
sbb
add
inc
out
idiv
cs
or
sub
sub
cmovns
mov
inc
addb
ret
mov
outsl
inc
fsts
stc
jg
sbb
inc
xor
loopne
xchg
inc
and
in
pushl
inc
addr16
push
xchg
out
pop
out
fwait
std
inc
inc
inc
adc
in
incl
inc
mov
inc
mov
xchg
and
sti
lea
sbb
cs
mov
inc
push
inc
cmp
sub
inc
adc
mov
jns
pop
inc
int3
mov
mov
inc
push
nop
scas
mov
ret
xor
in
xchg
dec
mov
inc
or
and
idivl
int3
push
cmpsb
inc
loope
pop
mov
mov
push
pop
push
fstl
jae
push
mov
mov
inc
test
ret
movl
jl
pop
inc
lahf
mov
into
inc
fldl
fists
add
push
loopne
push
repz
imul
das
inc
in
or
adc
ret
icebp
mov
out
and
sbb
lds
adc
cli
rol
dec
inc
ret
mov
jl
aad
shufps
jg
mov
sub
xlat
inc
adc
inc
test
fs
mov
or
mov
xchg
pop
adc
inc
cmpsb
push
push
mov
jle
test
fs
inc
addb
xor
stc
mov
out
mov
adc
arpl
or
jne
xchg
das
inc
add
or
cwtl
xchg
fdivrs
xchg
outsl
sbb
cmp
fsubrl
cmc
or
fnsave
inc
pop
lret
mov
inc
or
mov
mov
notl
cltd
inc
and
sub
xor
and
mov
push
outsb
mov
and
pop
jo
test
bnd
inc
cmp
lea
jle
out
pop
jge
mov
addr16
xor
inc
clc
push
xchg
mov
push
popf
or
addl
imul
aaa
ret
inc
cmp
jo
fildl
add
stc
mov
fiaddl
mov
and
jl
jbe
insb
add
xor
sub
push
lcall
pop
pop
popa
xchg
popa
jne,pn
ds
decl
call
aam
push
cli
push
pusha
push
mov
and
mov
fnstcw
mov
aas
jo
sbb
mov
push
das
sub
jle
xor
not
or
insb
adc
adc
cmpsb
hlt
mov
dec
jb
cmp
test
push
inc
mov
and
inc
mov
mov
outsb
popa
xchg
adc
push
outsb
das
fstpl
daa
push
and
push
mov
mov
pop
inc
sub
jns
call
cli
ss
or
mov
lea
lret
sub
rcr
neg
inc
ja
sbb
mov
mov
xor
loopne
inc
dec
repnz
outsb
add
add
or
cmpsl
outsb
aaa
ret
push
and
jmp
inc
test
xor
repz
add
push
lret
sub
inc
sbb
mov
push
dec
mov
push
push
push
adc
or
imul
cmp
inc
jge
pop
push
add
jl
fnstsw
incl
and
xchg
loop
ja
outsb
int
add
and
add
push
int
pop
mov
movb
cmpsb
and
repnz
add
mov
jbe
xchg
in
pop
mov
pause
fwait
movsl
scas
testb
jge
or
sbb
rcr
cmp
jo
addr16
dec
adc
xorb
add
inc
imulb
mov
mov
xchg
add
in
pop
mov
cld
scas
push
sbb
cmp
pop
ss
mov
sbb
inc
lods
pop
xchg
and
mov
or
loope
jecxz
add
inc
orl
adc
call
mov
pop
xor
dec
pop
clc
scas
mov
in
add
or
popf
inc
mov
push
mov
popf
rcrl
adc
xor
xor
mov
call
inc
jb
out
or
pusha
loopne
push
aaa
push
jmp
add
sub
jle
xor
gs
jle
pusha
push
and
nop
and
adc
xchg
into
sub
mov
sti
loopne
stc
inc
cli
push
cli
xor
dec
xor
mov
jp
adc
pop
and
xchg
or
int
ds
ss
mov
or
lock
pusha
aam
cmp
add
test
lahf
clc
fsub
pop
inc
dec
jmp
lods
inc
and
pop
fs
testb
lret
mov
xlat
mov
sub
lahf
rolb
lea
inc
fdivp
pop
bound
mov
pop
inc
cwtl
jns
loope
ret
mov
popa
daa
pop
cltd
les
outsb
sahf
or
cmp
lcall
dec
xor
inc
inc
jnp
sbb
sbb
sub
lcall
jmp
fists
mov
push
pop
adc
inc
dec
cmc
shrl
mov
jmp
icebp
jne
aad
sbbb
sub
or
adc
fildl
dec
aam
insl
rorl
mov
and
push
iret
insb
int
jecxz
jns
out
ja
adc
imul
fwait
das
nop
aaa
mov
lahf
fisubl
xor
mov
jle
aaa
rorl
and
sub
add
sbb
pop
xchg
inc
jle
cmpsl
xor
pusha
cs
push
xor
and
xchg
mov
call
push
dec
mov
movsl
inc
xor
mov
sarb
and
jmp
pop
jb
jno
cltd
test
inc
sub
lods
push
mov
fisttpl
dec
sbb
pop
or
inc
add
jmp
and
inc
sub
roll
out
cmp
or
imul
outsl
fcmovnbe
or
ja
inc
jle
dec
sbb
pusha
jmp
mov
adc
sbb
icebp
ret
ds
divl
adc
push
push
fdivs
js
clc
inc
repnz
pushf
ss
pop
lods
subl
ret
mov
in
movsl
sbb
mov
xorl
and
aad
sub
xchg
xor
cltd
sub
push
iret
es
loope
cs
add
fistpl
jecxz
add
sbb
enter
mov
inc
jo
insl
push
repz
pop
in
shl
out
das
sbb
push
pop
add
mov
mov
ss
push
neg
jno
hlt
ret
into
cs
sbb
push
roll
mov
or
xlat
loopne
jge
sbb
lret
das
mov
mov
cmc
jne
addr16
pop
pop
out
fcomp
nop
sbb
aaa
sub
repnz
pop
inc
arpl
xchg
in
pop
push
lds
push
pop
ljmp
pop
push
movb
add
add
in
jp
adc
sub
repnz
pop
mov
pop
inc
ljmp
loopne
and
mov
or
clc
inc
or
or
fwait
lea
add
insl
cmp
cmp
dec
inc
ljmp
adc
adc
js
jle
in
out
andb
out
pop
pusha
outsl
mov
lcall
and
sub
sub
in
push
test
jae
mov
iret
add
and
jno
sub
dec
xchg
incl
mov
fimull
xchg
ljmp
mov
xchg
or
loop
sbb
jb
push
sahf
xchg
les
dec
test
fstps
lret
lahf
arpl
clc
popf
adcl
nop
stos
outsb
xchg
imull
mov
je
mulb
sbb
or
popa
lret
mov
aas
bsr
push
into
or
ja
pop
adc
add
movsb
out
jb
ret
js
push
sbb
ja
mov
lds
and
push
fisubrs
das
cmc
sub
cmp
scas
inc
sub
stos
sub
lods
jb
dec
pop
imul
jno
inc
imul
jle
xor
adc
xchg
daa
and
fbstp
adc
cmp
call
adc
xor
add
ds
add
fdivs
mov
cltd
test
mov
cmpb
pop
cli
push
andb
repz
ret
sbb
icebp
cmp
jge
popf
loope
or
test
xor
mov
jl
mov
adc
lcall
or
xor
je
xor
jle,pn
adc
and
inc
shll
adc
int
push
push
test
in
or
rcrb
mov
test
rcrb
pusha
xlat
mov
push
fldcw
aam
dec
cltd
mov
sub
aad
add
int3
mov
test
stos
push
lock
call
mov
negb
cmp
je
mov
adc
das
and
pop
add
xor
mov
mov
add
or
sub
ror
push
jne
sbb
fwait
data16
pusha
cvtdq2pd
sbb
dec
dec
cld
mov
adc
leave
xor
repnz
lea
mov
mov
loopne
roll
notl
nop
mov
jb
test
jbe
cmp
or
mov
testb
push
pop
jbe
mov
pop
cmpl
mov
xchg
dec
mov
fildll
ficoml
or
out
cmp
push
lea
lret
dec
mov
psubb
cmpsl
es
shr
test
aam
push
test
cmp
inc
inc
sub
push
out
xor
push
cmc
or
inc
adc
cmpsb
and
inc
sbb
jge
xchg
nop
outsl
push
xchg
push
add
in
int
push
sub
xchg
jae
and
sub
jae
xchg
sub
test
das
les
and
pop
fnsave
sbb
push
dec
push
icebp
les
ret
cmp
notb
lcall
add
adc
xor
and
cmp
add
mov
sbb
loopne
adc
outsb
jmp
loope
fwait
les
inc
and
mov
adc
cmc
shl
inc
mov
ss
adc
jl
lds
dec
outsl
push
sbb
sub
sub
or
daa
mov
or
lods
jae
sbb
xlat
xlat
lds
mov
test
push
lcall
pop
add
rolb
daa
loope
mov
in
pop
mov
and
shlb
mov
sbb
add
stos
sahf
add
jbe
mov
and
lods
mov
adc
cmp
in
leave
fdivrs
clc
push
mov
rorl
in
scas
stc
xor
jb
test
mov
jecxz
out
shll
jecxz
iret
and
xchg
jb
subl
les
pop
iret
lea
adc
and
pusha
lcall
sub
ja
call
in
scas
jne
sbb
mov
pop
pop
dec
loope
mov
in
std
insb
pop
lcall
add
mov
ja
sahf
jbe
in
sub
ret
or
es
push
jae
push
mov
xchg
pop
mov
xor
or
fistpll
jbe
jl
in
xor
cmp
or
sub
jl
and
ljmp
aas
shl
fbstp
xor
cwtl
cmc
hlt
and
jnp
mov
or
sub
pop
popa
movsb
mov
rclb
xor
test
mov
mov
push
repnz
insl
cmc
cmp
das
sub
cwtl
mov
mov
cmp
bound
je
adcb
leave
mov
popf
shr
cmp
dec
cmp
sub
mov
fiaddl
mov
fcom
hlt
insl
mov
rorb
inc
insb
or
mov
loope
or
xchg
shl
push
dec
mov
adc
push
ja
rcrl
loop
pop
add
jle
jne
lods
popa
imul
das
stc
jge
xchg
mov
sbb
push
ds
ds
imul
xor
xor
jb
push
mov
mov
add
mov
sbb
loop
fdivr
adc
outsb
inc
mov
jbe
notl
call
xchg
fsubs
popf
movsb
lret
loopne
inc
or
mov
cmp
adc
in
mov
je,pt
xchg
mov
push
add
add
push
insl
mov
mov
shlb
pop
mov
fisubrl
imul
popa
daa
fwait
cli
jbe
loope
inc
xor
scas
addr16
movsl
cmp
cs
mov
dec
sub
or
adc
call
or
pop
pop
push
xchg
pop
cmp
das
inc
xlat
loopne
out
cmpsl
dec
andl
outsl
fisttpl
test
lahf
inc
mov
cmc
pop
out
add
movsb
in
js
pop
mov
xchg
and
xor
or
sub
jo
test
nop
jae
mov
xlat
leave
mov
lods
push
ffreep
push
jne
mov
clc
push
scas
lds
sbb
mov
sahf
imulb
fnstsw
push
inc
imul
loop
mov
cmp
cli
nop
or
dec
xor
fidivl
nop
dec
js
cmp
movsl
pusha
fbld
push
xchg
sbb
das
lock
out
push
and
xchg
or
or
xor
sub
jmp
push
cld
mov
mov
jbe
inc
je
add
xchg
jge
out
fcoms
add
push
clc
into
inc
jnp
add
jle
push
test
inc
insb
outsl
mov
pusha
fcomp
int3
cmpsb
shr
xlat
jl
sarb
es
fs
inc
push
mov
mov
pop
aas
inc
loop
aam
adc
lods
mov
mov
inc
dec
jecxz
dec
icebp
int
or
add
shrb
movb
not
in
shrb
movsl
fidivrl
mov
data16
das
lret
pusha
cmp
pushf
add
xchg
xor
dec
inc
pushf
outsb
mov
filds
sbb
ret
adc
pop
inc
push
xor
mov
pop
pop
scas
or
enter
jo
aas
icebp
mov
push
setnp
sub
cmp
sbb
in
jne
imul
lods
orl
aad
mov
lock
sbb
fstl
jle
sub
xor
inc
ret
repz
aad
sbb
pusha
and
in
icebp
lock
mov
das
subb
sub
inc
addr16
dec
js
imul
mov
sub
stc
or
ret
scas
push
sbb
mov
addr16
in
pop
sbb
mov
and
and
adc
lahf
std
aam
daa
xor
sub
xchg
testl
mov
rol
jo
aam
fidivrs
in
xchg
cwtl
sbb
adc
insb
outsl
insl
pop
or
inc
mov
arpl
into
mov
imul
mov
inc
cmp
data16
push
and
rcrb
dec
jb
xor
stos
out
ja
out
push
sbb
je
popa
lods
jbe
hlt
xchg
or
bound
cmp
dec
dec
loope
dec
scas
divl
sbb
ss
insb
pop
stos
jne
or
pop
sub
mov
push
mov
lahf
xchg
test
add
pop
sub
repnz
arpl
or
xor
lock
lods
jg
fdivr
retw
movb
inc
pop
dec
adc
scas
and
loop
icebp
pusha
push
push
mov
test
pop
mov
loopne
dec
xchg
sbbb
int
push
out
cmp
or
inc
call
adc
not
out
js
pop
in
pushf
mov
jge
inc
arpl
and
add
in
dec
cmpsl
sbb
sub
loope
pop
mov
add
popf
fcompl
ds
int3
xchg
orb
xor
mov
rcll
outsb
ja
scas
jne
lea
xchg
or
out
imul
mov
jb
sub
jae
mov
mov
xor
pop
inc
arpl
mov
das
pop
xchg
fwait
mov
gs
cmp
lahf
push
pop
mov
lods
dec
push
jbe
fiaddl
ss
std
popf
sbb
pop
fisttpl
or
sti
andb
call
add
test
mov
mov
insb
pushf
ret
cmp
out
push
inc
outsb
mov
insb
loopne
jbe
dec
outsb
sti
mov
cmpxchg
push
sub
lahf
jae
test
or
lea
sbb
ja
insl
jnp
xor
mov
js
or
pop
xlat
adc
loope
stc
xor
mov
inc
fidivrl
inc
xlat
negl
bound
in
mulb
mov
push
arpl
out
aas
shl
mov
inc
pop
fsts
loopne
pop
iret
or
fisubl
jmp
jb
ret
sbb
xor
hlt
je
xor
pop
pop
inc
fs
and
les
sar
or
jb
push
push
and
and
add
repz
or
pop
push
or
lds
push
repz
xchg
push
cs
es
aas
jge
pop
add
push
jmp
lret
sub
outsl
in
shrl
sbb
push
inc
jnp
cmp
xor
pop
std
mov
mov
fwait
jnp
in
jno
popf
es
fwait
xchg
jae
jp
mov
ret
push
mov
mov
fs
rolb
cmp
in
mov
test
jne
cmp
gs
inc
sbb
xchg
pop
arpl
add
lock
add
in
sar
or
or
aam
jmp
fistps
insl
mov
and
xor
jle
adc
in
mov
lods
jp
and
enter
add
lock
xlat
inc
ja
push
xor
push
pushf
rolb
sbb
push
adc
js
pop
xor
dec
fwait
je,pn
loopne
fistpl
dec
sub
loop
lahf
adc
adc
jg
jb
mov
ss
pop
inc
enter
adc
mov
rcrl
arpl
in
mov
loopne
dec
leave
add
and
add
jno
mov
inc
jecxz
aaa
jl
mov
pop
pop
mov
stos
pop
in
cltd
push
lret
push
mov
mov
outsl
gs
popf
jmp
in
shlb
ret
scas
aas
shr
leave
sti
xor
add
add
mov
xor
dec
adc
jbe
pusha
xor
xchg
mov
xchg
and
enter
stos
in
jp,pn
outsl
mov
shrb
xor
add
mov
adc
dec
data16
sbb
js
mov
mov
arpl
xlat
mov
out
cmpsb
mov
xchg
flds
popa
rcll
cmp
or
cmp
pop
push
mov
xchg
data16
jge
pushf
or
das
sbb
jno
ja
jle
fst
aaa
push
pop
testl
push
lds
xchg
pop
mov
xchg
pushf
xchg
mov
loope
xchg
ret
cmp
ret
dec
int
pop
clc
andb
pop
cwtl
cmp
imul
sbb
orb
mov
shl
or
xchg
mov
clc
and
sub
clc
shr
roll
jecxz
out
outsb
xor
sbb
or
adc
jge
lret
mov
insb
mov
mov
test
mov
or
inc
cltd
rcrb
loope
mov
arpl
pop
mov
stos
aas
push
jo
lods
add
jae
and
pushf
or
aad
jg
pop
mov
push
pop
mov
movsb
sbb
mov
mov
pop
aas
pop
sbbb
pop
push
cmp
mov
pop
fmull
jle
xchg
or
addl
outsl
jbe
lock
pop
mov
aaa
inc
stos
andb
and
add
das
loopne
sbb
lea
and
sub
add
or
inc
push
dec
inc
lahf
xor
outsb
pop
mov
inc
add
dec
xchg
rcr
xchg
inc
push
mov
pop
push
nop
int3
lret
jb
xchg
sub
enter
sub
ret
scas
lods
push
inc
jo
in
lret
lods
mov
divb
cmc
std
arpl
mov
hlt
pop
pop
mov
clc
in
and
ds
scas
ret
jbe
xchg
push
mov
fucomip
outsb
push
pusha
cli
mov
outsl
mulb
push
lods
adc
scas
cld
mov
lods
nop
es
push
iret
shrl
xchg
lock
mov
imul
icebp
movsl
lods
popf
pop
mov
mov
jl
mov
in
cmpb
ss
int3
push
adcb
jne
adc
fsubrl
ret
fdivr
aaa
push
imul
rcr
fistpll
adc
push
mov
and
push
in
pop
pop
ss
sbb
cli
push
stos
pop
inc
adc
mov
pop
js
mov
iret
cmp
xlat
fmull
addr16
pushf
xchg
xchg
test
add
xlat
movsb
jo
adc
add
sub
out
aaa
mov
cs
in
leave
mov
repnz
mov
sbb
inc
fwait
pop
fwait
or
lea
jbe
inc
fdivr
push
lods
ljmp
sbb
lods
push
xor
mov
sub
subb
jge
loop
jle
mov
clc
add
xor
mov
pop
je
pop
xor
jno
fstps
ret
sbb
adc
lcall
xchg
mov
int
push
stos
into
cmp
shl
pop
cmpsb
push
pop
xchg
lcall
in
mov
outsb
loopne
push
je
mov
sub
mov
filds
arpl
adcb
jb
sbb
or
loope
xor
jbe
sbb
cli
push
rorl
jb
sarl
jg
mov
stos
xchg
mov
xchg
shlb
push
into
out
cmpsb
insl
addr16
push
dec
dec
pop
dec
mov
mov
and
je
insb
cmp
or
lret
inc
sbbl
jbe
rorl
out
pop
push
jge
mov
repnz
adc
adc
imul
rorl
movsb
inc
push
xchg
je
xor
mov
stos
arpl
fsubl
fdivr
lods
add
or
push
push
or
mov
adc
jne
mov
pop
daa
stos
pushf
sub
aas
inc
xchg
mov
adc
inc
and
subb
push
mov
inc
mov
cs
jp
fmuls
cmp
orb
xchg
cmpsl
popa
push
rcr
adc
loope
sub
or
or
add
mov
std
in
add
inc
or
out
sub
int3
icebp
fs
xchg
lret
pop
pop
dec
mov
out
in
rolb
pop
out
xor
push
mov
js
fistpl
sub
push
cltd
hlt
push
lock
shrl
inc
aas
sub
clc
rclb
mov
xchg
or
jge
lods
lret
leave
test
inc
out
cs
rcr
out
pop
sbb
lods
es
push
out
xor
push
int
jp
pop
mov
inc
jns
stos
std
je
xchg
sub
bound
fsubr
push
call
scas
std
pop
rorb
sbb
dec
sub
rorb
cmp
adc
mov
pop
xor
and
fwait
adc
sbb
push
pop
shll
cmp
mov
sub
jp
loop
push
dec
cmp
sbb
mov
filds
aad
xor
mov
sub
in
adc
or
and
dec
arpl
xor
xor
in
cmp
arpl
mov
add
add
xor
jo
push
jno
jo
mov
mov
cmp
lea
lock
test
shlb
data16
sarl
stos
adc
mov
call
and
aaa
imull
inc
loop
xor
out
call
jecxz
and
pop
call
and
das
shlb
fnstenv
fcomps
sbb
mov
fists
pop
cvtps2pd
cmp
dec
pusha
ret
sbb
cmp
call
adc
jbe
xor
in
mov
inc
pop
loope
pushf
cltd
jo
test
lds
dec
in
lock
lods
pop
jo
mov
es
push
mov
inc
adc
mov
and
mov
pop
loopne
mov
mov
sbb
stos
into
cli
push
pusha
mov
sub
rcrl
jnp
in
xchg
jmp
mov
mov
mov
icebp
cmc
mov
mov
int
nop
or
xchg
test
cwtl
lods
sbb
push
sub
push
leave
imul
or
sbb
cmp
mov
jg
cmp
arpl
pusha
retw
push
arpl
imul
dec
cmp
das
out
jecxz
arpl
pop
pop
jb
call
sub
sti
ja
pop
sub
dec
stc
push
out
pop
or
mov
xchg
pop
jg
repnz
cmp
loope
fstpl
mov
ror
mov
stos
mov
sbb
mov
mov
xor
insb
mov
scas
lahf
pop
dec
je
mov
pop
rclb
or
add
jg
daa
dec
stos
jp
mov
sub
jnp
mov
mov
fdiv
iret
lods
enter
mov
mov
pusha
push
jge
jns
bound
rcll
sub
icebp
jno
cli
loope
loop
push
aas
jnp
stc
inc
enter
mov
aas
cmpb
jno
pop
inc
aas
mov
add
lods
and
mov
test
aas
enter
ss
fldl
push
nop
inc
pop
push
fwait
imul
into
inc
pop
dec
pop
insl
or
popa
leave
mov
and
jmp
ret
xchg
sbb
js
rcr
add
ret
sbb
cmpsl
scas
sbb
jnp
fdivs
insl
mov
mov
sbb
test
mov
ss
cmp
cmpsl
mov
pushf
cld
push
push
xchg
xchg
jnp
jle
not
in
adc
pusha
mov
nop
adc
cmp
movsl
inc
cld
xor
lret
fmull
pop
imul
jnp
sub
divb
insb
lds
fcmovnb
repnz
je
lock
pop
add
sub
dec
aas
decb
and
andb
gs
stos
popa
mov
push
sub
popf
xor
shlb
sub
roll
mov
fcmovne
xchg
sbb
js
push
or
push
push
fdivrs
cmp
cwtl
pop
popl
mov
or
clc
shrb
cmpsb
fs
dec
jle
lods
jnp
cli
push
imul
lods
mov
jo
sbb
sub
clc
mov
fwait
enter
add
pusha
inc
xchg
add
les
xor
enter
jp
ljmp
sbb
or
xor
je
lcall
push
movsb
push
jo
xor
xchg
fcom
stc
lods
out
inc
add
cmp
jp
sbb
mov
jge
add
mov
pop
add
cmpsb
rcll
cs
ds
aaa
hlt
scas
out
adc
mov
mov
mov
sub
mov
xor
adc
aas
push
loope
xor
cmp
lea
in
outsl
loop
xchg
cmc
add
or
out
daa
sub
or
mov
sbb
add
cmp
and
inc
test
inc
iret
push
mov
push
xchg
std
notb
pop
jmp
stos
lds
aaa
push
push
mov
jns
xor
loope
das
sub
into
loope
ret
sbb
push
pop
mov
mov
jp
mov
or
jg
push
fldl
lods
jge
dec
loopne
mov
aas
jne
in
test
testl
pop
fidivrl
cmp
jle
pop
or
fcmovu
adc
xchg
in
dec
fbld
lret
lock
icebp
dec
jns
ret
add
dec
out
lods
test
jmp
rorl
or
scas
int
pop
cli
ret
push
mov
mov
cmp
out
mov
les
cmp
push
xor
push
sbb
jne
mov
ret
add
imul
arpl
mov
cmp
int3
adc
sub
loop
jns
das
cmp
pop
dec
iret
fcomps
jmp
pop
clc
movsl
xchg
push
arpl
push
jo
scas
icebp
cmp
mov
andl
cwtl
popf
mov
int
sti
aas
out
mov
mov
add
dec
insl
pusha
out
lods
add
and
add
fstp
xchg
add
xor
mov
push
inc
test
push
cli
xchg
ret
movsb
pop
xor
push
or
xchg
or
les
pop
and
lock
pop
push
je
lds
or
imul
shl
push
cmpsl
scas
sahf
clc
daa
lods
test
outsb
pop
xor
cmpsb
ffree
mov
cmove
int
insl
mov
xchg
xchg
and
das
sahf
pop
pushf
leave
iret
mov
jmp
pop
and
bound
fists
mov
mov
sub
inc
pop
xor
je
pop
iret
dec
fwait
lods
pop
jb
push
mov
adc
and
fidivrs
inc
mov
push
pop
fisttpl
mov
push
lret
add
ret
out
push
fdivs
icebp
clc
pushf
jmp
and
mov
or
fsub
pop
sahf
cmp
shll
aad
or
inc
test
shlb
aas
ret
sbb
out
adc
fwait
push
pusha
xlat
adc
fstpt
cwtl
xor
pop
test
push
or
push
mov
test
mov
aam
das
loopne
fcomps
inc
push
sbb
add
popf
and
mov
xchg
dec
push
clc
inc
pusha
mov
xor
or
aad
dec
popf
mov
mov
js
dec
ss
and
push
addr16
das
jne
pushf
bound
adc
push
insl
scas
fidivs
ss
cmc
mov
inc
cltd
mov
mov
rcll
and
pop
fidivl
or
iret
mov
inc
addr16
lods
adc
stc
jb
add
mov
push
mov
dec
shl
rcll
in
test
or
stos
mov
mov
sbb
add
sub
imul
loopne
lret
jno
js
jns
ds
add
cs
pop
push
dec
sahf
mov
sbb
ret
or
addr16
cmp
arpl
sub
sbb
or
pop
scas
loopne
sahf
outsl
imul
ss
mov
xchg
xchg
inc
jge
mov
pop
call
scas
pop
arpl
jb
push
aad
xorb
fstl
jns
js
in
stos
fs
andb
cli
std
push
cmp
lods
sbb
mov
push
scas
das
imul
adc
xchg
or
addr16
mov
push
cmp
xor
and
test
loop
sub
clc
test
ficoml
fcom
shl
sti
lea
adc
cltd
push
inc
adc
pop
pop
pusha
inc
dec
addb
int
inc
sbb
jnp
mov
mov
arpl
or
imul
jle
dec
out
mov
out
loopne
and
jl
mov
outsl
mov
jge
adc
sbb
popf
imull
xor
inc
or
lret
andb
xchg
mov
hlt
push
insb
loopne
ficoml
cmp
xor
pushf
cmp
push
gs
xor
pop
mov
jo
cmp
shl
mov
aas
add
xor
mov
sahf
push
repz
jg
cmp
insl
adc
push
push
sbb
sub
loope
fnstsw
mov
sub
jl
pop
mov
subl
in
jge
ret
mov
mov
out
and
ffree
movsb
mov
fiadds
mov
ss
orb
mov
std
add
hlt
outsl
movsl
loop
and
add
nop
mov
push
or
les
ror
adc
sub
fdivs
ret
pop
aaa
jbe
int
mov
jb
cli
pusha
or
pop
cmc
sbb
push
jne
or
icebp
mov
fdivs
mov
cwtl
sub
arpl
sbbl
addr16
outsl
push
sbbl
aas
imul
or
xchg
nop
inc
cs
ds
pop
ret
pop
mov
sbb
in
shrl
hlt
ja
enter
js
jg
push
mov
pop
movsl
cmpsb
js
cmp
or
fcmovnb
mov
les
jmp
fldt
jge
aam
jns
sbb
dec
add
push
ret
inc
fidivs
fnstcw
lret
andl
add
in
stc
add
out
jbe
mov
xor
sbb
add
mov
aam
shll
scas
dec
dec
mov
into
pushf
cmc
pop
mov
enter
out
pusha
in
push
andl
jne
xor
sahf
ljmp
jbe
outsb
movsl
test
dec
inc
lea
rorl
add
add
xchg
mov
lahf
dec
int
je
call
mov
pop
sbb
fucomip
subb
add
clc
test
or
incb
imul
sbb
jne
lret
sbb
aas
out
stc
adcb
mov
push
fdivl
pop
sbb
push
jp
jmp
out
idiv
movsl
int
insl
mov
and
scas
mov
aaa
jge
jmp
rcr
int
divb
dec
add
ret
fisttps
jmp
ret
fstps
repnz
add
gs
lcall
jmp
mov
pop
imul
xor
in
mov
rorl
adc
std
mov
mov
jo
and
fdivp
filds
push
jno
test
scas
ja
mov
cmp
dec
imul
jmp
mov
movsb
push
push
lods
aas
in
sbbb
fs
sub
iret
pushl
mov
xchg
xor
mov
js
dec
jbe
cmp
repz
sbb
jle
mov
int
mov
lret
xchg
or
cmpsl
lret
fimull
pop
sbb
push
imul
cmp
inc
inc
insb
xchg
jns
mov
cmpsl
into
and
push
fimuls
inc
and
push
mov
ficoms
push
dec
pop
push
clc
mov
hlt
icebp
jle
mov
sbb
adc
cmp
rep
sub
scas
hlt
xchg
fstp
xor
add
mov
pop
pop
push
pop
lock
jno
inc
pop
fnstenv
fwait
hlt
imul
aaa
fsubrs
mov
out
fdivl
paddusb
mov
pop
push
adc
push
out
cmp
cs
lsl
pusha
in
xchg
push
push
test
jo
push
sbb
inc
lret
and
pop
lds
or
mov
gs
out
or
lret
add
mov
cld
mov
jl
inc
mov
ljmp
outsb
dec
sbbl
aam
mov
cmc
dec
xchg
movzbl
mov
pop
sbb
fprem
scas
and
dec
inc
cmp
aaa
mov
inc
or
push
xor
scas
in
xchg
insb
mov
clc
or
mov
jg
imul
mov
popl
push
jne
mov
scas
jecxz
bnd
popf
push
scas
jg
adc
lret
xchg
xor
inc
jmp
cmpl
adc
xor
mov
or
jae
and
xchg
xor
xchg
into
or
in
insl
loop
insb
and
loopne
push
fldt
mov
add
push
setns
int
pop
push
jne
lret
lds
sub
mov
mov
lret
call
pop
cmp
jno
inc
pop
pop
aaa
adcl
xchg
fwait
ror
cmp
inc
lcall
mov
ss
pop
aaa
sbbb
cmp
cmp
jg
xchg
add
dec
adc
dec
pop
push
stos
cli
fcomps
lret
jle
mov
fsubr
and
mov
call
out
adc
mov
xlat
push
divl
nop
inc
fdivrs
testb
adc
orb
xchg
dec
lods
nop
pushf
push
mov
sub
mov
int3
sub
adc
dec
inc
pop
imul
nop
sti
mov
in
in
adc
jg
add
cmp
pop
jns
inc
inc
dec
adc
inc
mov
cmovb
call
sub
rcl
pop
push
xlat
shll
les
fwait
popf
adc
mov
cltd
inc
repz
jg
shrb
shl
lock
testb
out
sbb
daa
fsubrl
shrl
nop
mov
mov
out
enter
into
push
push
sbb
jb
push
and
xchg
pusha
mov
enter
loope
pop
and
mov
add
in
fadds
std
out
xchg
pop
mov
fwait
outsb
sbb
xchg
or
xchg
insb
dec
loopne
xorl
pop
mov
js
dec
sub
add
and
mov
arpl
movsl
jmp
test
xor
push
es
cld
xor
outsl
roll
pop
test
mov
push
cld
jo
inc
xchg
or
insl
arpl
lods
xchg
add
and
out
test
inc
lea
insl
lea
xor
sahf
iret
leave
pop
cmc
fcmovbe
jmp
decl
or
sbb
mov
shr
lods
and
test
mov
mov
cs
xchg
push
clc
repnz
rorb
div
add
les
insb
movsl
add
xchg
icebp
pop
outsb
cwtl
fcmove
pop
sbb
jg
xor
pop
xchg
cmpsl
rolb
jle
nop
dec
jle
movsl
pop
loopne
push
fwait
movb
insl
mov
ficoml
xor
cmp
mov
sub
fbstp
cmp
inc
jge
ja
aaa
xor
xchg
pop
popa
bound
push
mov
pop
xor
inc
mov
sbb
mov
lock
cmp
inc
xor
cwtl
ret
das
mov
xchg
adc
mov
sub
adc
lahf
daa
gs
mov
nop
repz
pop
cmpsb
mov
loope
cs
roll
xchg
shlb
shll
data16
sar
xor
out
out
mov
or
or
mov
mov
and
outsb
test
add
imul
mov
dec
mov
movl
sub
popa
int
inc
push
lods
and
in
in
ljmp
dec
dec
sub
mov
mov
push
inc
cmp
movsl
push
inc
js
ja
test
mov
bound
xchg
jl
lock
in
je
or
loopne
mull
cmpsb
pop
arpl
mov
aam
nop
mov
rcrb
stos
cli
and
paddw
imul
adc
cmp
and
adc
insl
mov
shl
mov
jge
mov
addl
jo
je
enter
fsin
jne
mov
ss
dec
inc
dec
lds
mov
lock
mov
repnz
stos
and
xor
gs
lret
xor
jge
lcall
stc
inc
sarl
or
ffree
scas
stc
jmpw
clc
sub
cli
push
scas
mov
or
fadds
ds
dec
xchg
in
pop
xlat
lock
ss
lock
or
rcll
popf
dec
lods
gs
lea
mov
dec
xchg
push
mov
cmp
scas
or
rcrb
jno
insl
mov
push
dec
or
jo
fbstp
aam
xlat
in
jl
mov
aaa
or
xchg
adc
out
insb
sub
mov
sbb
cmp
lcall
push
mov
in
int
mov
jl
jnp
sub
in
mov
pop
pop
icebp
fisttpl
dec
aad
pop
cmp
inc
mov
sti
and
xchg
int
xchg
aad
dec
in
addb
shlb
movsb
sahf
mov
mov
nop
movsl
adc
push
leave
hlt
inc
push
xor
lret
or
sarl
push
test
aad
lock
into
cmp
insl
fildl
cmp
push
jmp
mov
sub
xchg
dec
mov
ss
push
cwtl
roll
mov
dec
lea
jbe
lock
fnsave
and
push
andb
sbb
inc
pushf
push
sbb
out
or
cmp
lock
push
mov
cmpsl
repnz
pop
xchg
mov
movsl
pop
pop
pop
xchg
xchg
test
mov
inc
loopne
jnp
cld
pop
in
or
add
hlt
in
jge
or
jno
pop
sub
pop
push
outsb
dec
jne
ret
pop
sub
lea
std
aaa
mov
push
mov
in
nop
sbb
clc
dec
or
cmp
dec
cmp
mov
imul
push
pop
adc
test
pop
adc
or
push
cmp
xchg
sbb
dec
cltd
stos
and
outsb
dec
fucomi
jo
push
sbb
sub
outsl
xchg
icebp
iret
cli
xor
inc
pop
jp
sbb
mov
jne
sbb
dec
scas
out
or
add
xorl
fnstcw
rolb
pop
xchg
adc
cmp
in
jo
sub
shrl
mov
cmpsl
aaa
add
inc
popa
mov
outsb
dec
movsb
arpl
or
shrb
mov
lock
sbb
adc
xchg
jge
inc
xchg
sarb
mov
jg
jmp
mov
popa
in
mov
mov
sub
aam
loop
add
cmp
sar
call
loopne
push
push
jo
pop
jge
mov
fisubl
mov
mov
mov
mov
loopne
stc
fldl
xor
rcrb
dec
sbb
imul
push
lret
insl
in
jle
shll
add
ljmp
push
xor
dec
cli
test
arpl
inc
cmp
push
push
sub
push
pop
mov
sub
mov
add
mov
daa
ss
sub
xlat
divl
inc
loope
dec
orb
rep
or
xchg
mov
jns
push
and
dec
sbb
jno
mov
mov
ja
in
mov
cmp
mov
idiv
pop
push
fwait
idivl
stc
pop
xor
mov
jmp
and
andl
insl
pop
fcoms
adc
or
push
push
mov
inc
call
add
mov
sub
xchg
pop
je
sbb
or
sub
stos
push
dec
sbb
loopne
mov
aam
mov
lods
lock
push
mov
adc
scas
sti
outsl
pop
sbb
pop
push
jmp
movsl
add
push
jle
dec
xor
fbstp
icebp
inc
lahf
stos
add
adc
imul
jbe
mov
add
jmp
mov
andb
xor
and
aad
dec
dec
nop
sub
sahf
add
xchg
sub
adc
jmp
xor
sti
mov
and
lock
sub
mov
sahf
daa
sbb
mov
dec
sbbb
loop
or
sarb
and
sbb
das
scas
push
nop
addr16
and
jo
mov
rcrl
mov
push
cwtl
mov
cmp
mov
out
daa
add
and
arpl
and
dec
jnp
lahf
aad
aaa
data16
sbb
gs
dec
xlat
and
xor
dec
insb
fisttpl
sub
inc
sub
and
adc
mov
push
mov
fsubrs
mov
add
lds
add
rclb
mov
sarb
sub
ja
outsb
lods
mov
cmp
xchg
loope
add
cmc
inc
add
jecxz
subb
js
shll
out
lock
int
mov
pop
sbb
jo
hlt
testl
adc
xlat
mov
fcoml
mov
cmp
stos
mov
mov
sbb
out
xchg
test
adc
movsl
in
xchg
sbb
cmp
shlb
push
in
andl
adc
xchg
mov
lcall
inc
jmp
xor
pop
ficomps
pusha
xor
insl
andl
push
fsubrs
out
and
pop
jno
inc
shlb
je,pn
fisubs
or
adc
mov
insl
pusha
sub
sbb
or
mov
dec
push
or
lret
mov
fcmovne
adc
stos
adc
or
fisttpl
xor
insl
ret
sub
cmp
jle
push
mov
leave
pop
push
outsl
je
and
dec
jp
test
add
pop
test
add
add
lods
test
jnp
mov
add
jne
push
or
das
push
pop
les
sub
cmp
xor
xchg
call
ds
pushf
fsubrl
ret
ss
and
add
xor
inc
adc
mov
add
loop
mov
test
pushf
or
fistpll
pusha
in
in
mov
mov
lock
call
shll
out
push
cmp
xchg
or
mov
pop
sbb
mov
inc
and
xchg
lock
jo
sti
push
aas
jp
pop
mov
inc
jle
dec
insl
dec
mov
sub
jge
lock
out
repz
sarl
jbe
addr16
mov
daa
into
inc
in
int3
insl
imulb
lds
xor
or
mov
add
enter
ja
adc
xor
icebp
lcall
xorb
fwait
ss
and
orl
loopne
add
mov
mov
ja
mov
lret
fsubl
shr
jbe
push
mov
call
add
in
nop
dec
data16
pop
ja
push
leave
rol
ljmp
or
sbb
mov
fwait
mov
fisttps
orl
idivb
outsb
mov
test
lods
jmp
sbb
push
orb
fldt
aad
adc
loop
loop
aam
andl
xchg
cmp
movsb
mov
lods
shll
inc
jp
ljmp
int3
enter
pop
push
scas
xchg
cmp
fwait
imul
bound
push
fcmovnu
lods
cmp
xor
jecxz
rorl
dec
test
fsubrs
int3
outsl
sub
gs
inc
and
jne
fildll
sar
push
pop
mul
xlat
sarb
mov
movsl
pop
aas
and
aas
cli
push
std
mov
pop
out
in
inc
add
js
sbb
fdivp
jbe
inc
test
cmc
aad
jecxz
icebp
stos
mov
xor
fidivs
mov
icebp
dec
adc
popf
sbb
push
cli
in
add
sbb
out
or
mov
mov
fdivrs
xor
dec
cli
jmp
lret
mov
push
ss
sbb
les
outsl
shrl
sbbb
ret
aaa
andb
scas
js
orps
xchg
sbb
inc
adc
pop
cli
ret
mov
outsl
cmp
cmp
mov
jmp
push
mov
inc
aam
xlat
push
push
notl
mov
jne
fiadds
jp
or
call
xor
es
test
data16
sbb
inc
lods
dec
sub
xchg
xchg
fistl
cltd
fimuls
xchg
add
aas
fsubrl
jnp
sar
js
mov
jb
jmp
pop
popf
mov
adc
sub
insb
sbbb
and
xchg
jl
push
inc
loope
cmpsb
or
testb
xchg
inc
mov
lea
loopne
mov
push
cmpsb
cwtl
lret
cmp
in
pop
loopne
mov
hlt
movsb
adc
popa
jmp
hlt
stos
sbb
jl
jne
in
fwait
cli
mov
xchg
scas
adc
and
shrb
in
into
push
inc
ds
xor
aam
mov
inc
push
sub
ljmp
into
xchg
ja
or
inc
ja
mov
push
push
out
imul
dec
aas
add
xchg
int
add
test
pop
and
inc
mov
mov
mov
je
jmp
jae
mov
lea
mov
jne
mov
xchg
lret
xchg
jnp
shlb
adc
add
les
jmp
movb
inc
das
js
test
aad
fcmovb
imul
fs
or
dec
ds
mov
lret
sbb
lret
lods
add
push
and
inc
push
pop
dec
lcall
fdivr
das
adc
sbb
mov
adc
adc
inc
popa
and
psllq
dec
das
adc
push
ds
or
test
insb
ret
xchg
dec
push
mov
or
rolb
jne
add
push
daa
cmc
cmpl
pop
push
add
rol
jmp
pusha
shl
mov
push
clc
xchg
aam
mov
mov
or
and
pop
jae
ret
lds
fiaddl
jg
repz
mov
addr16
jnp
js
dec
push
and
mov
jg
sar
inc
jge
push
add
xor
insl
subb
push
sbb
stos
mov
in
push
jmp
mov
and
jg
jnp
xchg
cmp
jecxz
lahf
les
sahf
ljmp
dec
push
adc
insl
add
mov
mov
cmp
insb
push
aam
or
pop
int3
mov
xchg
mov
xchg
aas
in
cs
xor
mov
popf
popa
repnz
cmp
dec
mov
out
sbb
mov
sub
xor
and
repnz
sbb
call
gs
aam
and
dec
pusha
jno
mov
lds
xor
xor
aaa
xor
je
mov
fs
dec
adc
dec
lahf
sti
fstpt
pop
loope
pusha
xchg
add
jecxz
push
xor
jecxz
je
sbb
mov
aad
adc
mov
sbb
jno
insb
insl
fsubrl
lret
std
stos
sbb
call
xchg
dec
mov
sub
icebp
dec
cmpsl
ret
cmpsl
les
mov
cli
push
adc
or
xchg
adc
pop
or
mov
pop
and
scas
xchg
and
mov
call
imul
aas
sbb
cs
mov
inc
cli
rcr
loopne
je
jl
sub
sub
aas
cmp
scas
hlt
dec
pop
fnstenv
loope
push
jmp
jns
dec
insl
pop
sbb
fwait
ss
mov
mov
push
mov
arpl
ljmp
pop
iret
pop
push
xor
imul
xor
outsb
jnp
scas
sbb
dec
test
mov
pop
jbe
test
out
cmp
mov
inc
xchg
sbb
test
sbb
inc
xor
mov
push
clc
dec
add
push
mov
mov
shlb
dec
mov
rcr
mov
fs
stos
mov
shlb
xor
push
mov
jle
cs
mov
sbb
ljmp
mov
jl
fildl
mov
stos
mov
insl
push
fwait
pop
xchg
sbb
out
mov
push
aam
cmc
stc
pop
or
inc
enter
or
popf
adc
popa
mov
lret
dec
inc
mov
sbb
sbb
sahf
shr
jo
cs
je
fwait
xlat
nop
mov
mov
fnstcw
sub
stc
xor
xor
add
and
call
push
clc
loop
and
sbb
mov
pusha
scas
repz
cmp
fsubr
fldt
dec
pop
rcrb
jo
mul
arpl
in
in
std
mov
mov
cli
in
add
dec
sbb
cmp
insl
xlat
ja
andl
xchg
push
bound
fs
movb
cmp
xchg
adc
push
mov
das
mov
sub
pop
imul
mov
and
dec
xchg
stc
mov
xor
sbb
or
and
inc
sub
or
xor
daa
adcb
mov
and
xor
jmp
or
sahf
sbb
pop
mov
add
jmp
jmp
cmp
mov
lea
mov
cli
sub
mov
in
pop
or
inc
lock
pop
cli
push
insb
inc
push
sub
inc
fwait
add
orb
hlt
fnstsw
adc
in
cmp
inc
dec
sbb
adc
adc
call
or
repnz
hlt
push
xchg
lret
daa
add
mov
cmp
adcb
xchg
ret
inc
push
mov
and
xchg
cmp
out
sub
and
push
cmp
adc
lret
mov
mov
in
xchg
add
push
dec
mov
xchg
popa
dec
mov
push
imul
gs
cli
orb
push
push
mov
xor
add
loop
cmp
mov
popf
fs
pop
movl
push
sbb
cmp
lret
rolb
lcall
stc
jns
sbb
or
push
pop
push
ja
out
add
jns
or
rcr
insl
mov
ljmp
xorl
pop
mov
adc
lahf
jecxz
add
mov
gs
add
lock
inc
rol
xchg
mov
mov
aam
repnz
stc
mov
jmp
mov
fwait
or
mov
mov
pushf
test
and
jne
test
outsb
push
sbb
push
daa
test
add
push
adc
pop
divl
aam
stos
lock
arpl
fwait
xchg
sbb
dec
inc
ja
aad
mov
mov
mov
inc
jecxz
mov
pop
dec
sbb
daa
fcmovb
pop
insb
push
dec
push
dec
popf
pminsw
mov
cmc
push
in
ret
xchg
movsl
mov
movsl
fistpll
dec
cmovns
mov
sub
sub
das
mov
mov
in
sti
leave
pop
lods
pop
das
test
inc
decb
test
rcl
into
test
dec
push
mov
insb
sbb
or
inc
push
sub
mul
divb
lds
aas
xchg
out
cmp
fsubs
pop
ret
cmp
xor
outsb
mov
xor
popa
pusha
or
sub
and
push
add
adc
repz
push
iret
sbb
inc
iret
test
adc
movsb
xchg
sub
pop
sbb
adcb
daa
and
scas
push
mov
jle
xchg
inc
faddl
pop
dec
cld
add
stos
lock
jl
data16
or
out
inc
push
fsubrs
lret
arpl
sbb
movb
fstl
loope
out
call
mov
call
xchg
fisttps
and
outsw
xor
fwait
inc
sub
test
xor
test
or
out
xor
rcr
jp
dec
mov
xor
movsl
mov
shrl
test
xchg
pop
pop
or
test
fadd
xchg
repnz
sbb
flds
test
and
ja
test
pushl
call
mov
sbb
xchg
inc
push
xchg
stos
mov
hlt
xor
xchg
xchg
shl
ja
push
clc
fdivrl
add
shrl
pop
mov
push
mov
das
push
scas
mov
inc
jbe
mov
push
adc
xchg
mov
mov
mov
sarb
bound
dec
rorb
aad
sarb
idivb
jle
or
mov
jo
add
adc
mov
pop
shlb
xor
and
aam
and
dec
stos
xor
test
ds
or
or
push
movsl
pusha
and
xchg
stos
addr16
inc
lds
xor
sub
sti
ss
sbb
aas
leave
in
dec
or
adc
push
imul
mov
sub
outsl
jecxz
test
add
sub
sub
ja
loopne
js
cmp
fwait
or
mov
repz
or
iret
sub
das
js
outsl
jns
std
mov
pusha
test
call
sbb
cmp
dec
popf
add
and
inc
out
xchg
ja
jne
lea
popa
xchg
popa
rclb
pop
sbb
data16
dec
hlt
jp
cld
addb
push
ljmp
adc
inc
imul
inc
mov
jmp
dec
lahf
push
test
cmp
stos
cmp
jp
js
push
inc
loope
mov
pop
pop
shl
mov
aad
test
xchg
mov
lret
fdivrs
push
mov
and
jmp
and
cs
faddl
mov
ror
push
rcl
fwait
or
cmp
mov
mov
iret
sub
fnsave
call
outsl
stc
inc
aaa
outsb
pop
pop
fistpl
adc
jns
mov
call
xchg
fcmovb
fists
mov
leave
cmp
and
stos
mov
or
or
cmp
lods
ficompl
mov
insl
cs
rcl
lock
dec
movl
aas
mov
les
jmp
xor
xchg
test
fmull
das
pop
cmp
in
sahf
sbb
mov
ret
jb
push
pop
dec
push
jecxz
bound
jmp
mov
sti
mov
lock
in
nop
mov
push
adc
jno
pusha
adc
sub
icebp
aam
js
push
fimuls
mov
adc
sub
mov
sbb
loopne
inc
xor
sbb
das
invd
mov
cs
xchg
lods
sti
orb
icebp
orl
cli
cmpsb
repnz
add
inc
mov
or
imul
push
rcrb
push
insb
ja
sub
mov
ljmp
rorl
lods
or
add
outsl
imul
jg
test
xchg
test
outsb
outsl
mov
or
mov
sbbb
sbb
mov
adc
mov
popf
sbb
pop
add
mov
mov
stos
js
and
rol
mov
sub
jno
data16
fs
faddl
rcrl
aas
cwtl
addr16
repz
repnz
push
xor
xchg
ss
mov
xchg
jge
sti
sbb
sbb
clc
xchg
push
test
lds
insl
int
jecxz
mul
test
mov
cmpsl
pop
cld
sub
mov
xor
je
push
dec
pop
adc
stos
add
sub
push
jp
jp
push
jo
adc
mov
xor
pushf
xchg
out
pop
xor
dec
shll
aad
dec
push
cmp
cmp
push
ljmp
ret
idiv
fbstp
sbb
inc
mov
and
mov
clc
mov
je
sbb
inc
inc
mov
mov
insl
ret
aad
shll
clc
pop
mov
pushf
loopne
push
in
jp
mov
push
fs
loope
jae
out
mov
ficoms
fiadds
xchg
add
inc
jmp
pop
outsl
les
lods
pop
in
jno
mov
daa
pop
push
xor
out
fiaddl
adc
pop
pop
in
int3
xchg
xchg
add
mov
hlt
test
addr16
mov
cmp
mov
push
loope
pusha
jbe
stos
test
inc
pop
aaa
xor
mov
addb
ret
dec
insb
add
cmpsl
outsb
dec
lea
dec
xchg
shrb
jne
fucomi
jmp
scas
add
ss
je
mov
push
repz
xchg
call
jbe
clc
int
and
adc
xor
xchg
sbb
sbb
pusha
lahf
push
bound
mov
add
ret
sti
jno
inc
mov
out
lock
aas
dec
mov
push
adc
sub
in
call
sub
push
xor
test
xchg
stc
lea
jo
das
sbb
mov
mov
outsb
int3
out
xchg
pushf
and
add
xor
in
push
xchg
add
sahf
jae
or
insb
mov
cltd
pop
imul
imul
into
into
test
mov
mov
pop
jo
out
stc
inc
xor
call
sbb
ljmp
int
cmp
enter
lock
in
in
mov
sbb
dec
push
sub
and
cmp
adc
jne
and
mov
mov
iret
mov
adc
jae
pop
ljmp
pop
insl
pop
sbb
xor
pop
xchg
aas
shlb
test
xchg
icebp
fnsave
or
or
mov
mov
dec
mov
xor
inc
iret
js
xchg
jo
ficomps
int
sub
and
imul
inc
jmp
mov
fisttpl
ffree
pop
and
jbe
fisubs
pushf
cmp
and
mov
outsb
add
sub
sbb
mov
push
and
sbbl
inc
jge
jmp
push
inc
inc
jge
test
mov
xor
mov
dec
ds
loop
ret
jle
cltd
xor
mov
out
lods
into
inc
es
mov
mov
or
or
sbb
and
adc
sbb
iret
lods
lea
sub
roll
inc
and
jle
aam
insl
add
jge
push
ds
cld
sub
lahf
push
jecxz
dec
inc
add
jo
data16
ret
mov
lcall
mov
mov
dec
mov
jl
mov
sub
mov
in
or
mov
push
adc
ljmp
fcmovnu
mov
xchg
call
mov
frstor
loope
xchg
add
ret
loop
call
jnp
xchg
fsubrs
fwait
data16
pop
iret
fdivp
dec
or
adc
inc
sbb
cmpsb
xchg
xchg
push
rorb
jge
data16
dec
and
or
mov
ss
aam
hlt
jo
cltd
aas
jl
cltd
les
insl
jnp
jbe
sbbb
sub
leave
sbb
jge
dec
xor
lock
xchg
dec
dec
xor
fbld
sbb
sbb
push
xchg
into
daa
mov
adcb
dec
cmp
cmp
fisttpl
das
inc
incb
test
adc
stos
jns
popa
add
add
mov
jge
push
xor
dec
cltd
pushf
fsubr
mov
call
adc
sarl
or
dec
cmp
and
xchg
adc
shll
push
pushf
mov
sbb
shll
jo
jnp
push
jo
jae
movsb
fistpl
push
pop
sbb
pop
jb
sub
lods
fsub
ret
outsb
push
xchg
mov
xor
shrb
test
mulb
mov
sub
ret
scas
inc
sub
aaa
push
pop
xor
pop
test
insl
sbb
test
mov
cwtl
ret
fwait
push
dec
xchg
lods
fsubp
lock
mov
mov
xor
sarb
call
rcrb
lods
dec
inc
fbstp
mov
push
sbb
ret
mov
sbb
daa
and
mov
jno
arpl
enter
test
repz
mov
sbb
mov
adcb
bound
test
xchg
mov
outsb
mov
mov
or
sub
mov
jg
inc
dec
mov
rol
cwtl
cwtl
xchg
mov
subl
adcb
pop
lret
stos
add
mov
js
mov
mov
mov
inc
out
xchg
fistl
es
sbb
inc
inc
pusha
mov
outsb
call
loop
mov
bt
pop
in
mov
cmc
out
push
mov
and
es
cmp
rolb
sarb
daa
fsubrl
dec
les
mov
mov
cli
inc
pop
ljmp
pop
jp
hlt
pop
and
fwait
cmc
ret
out
aas
add
push
stos
stos
and
rorl
push
cltd
clc
mov
inc
std
inc
dec
mov
incl
loopne
jmp
xor
sarb
adc
mov
mov
sub
outsb
pop
lahf
mov
pusha
cli
les
lods
sub
pop
cs
aas
stc
test
cmpsb
lods
inc
pop
aas
mov
lcall
push
sbb
pop
mov
stos
bnd
leave
mov
dec
cmp
cmpsl
mov
shl
adc
pop
xchg
pop
pushf
cli
mov
add
pop
mov
cmp
mov
add
cltd
popa
fs
ss
mov
lods
addl
mov
fadds
sbb
sbb
lods
popf
das
cli
and
rcl
addl
addr16
clc
pop
stc
clc
rcrb
fcmovu
idivl
cmpsb
cmp
stos
das
sbb
jo
les
xchg
cvttps2pi
mov
mov
in
adc
mov
and
je
sub
or
push
pusha
jmp
decl
adc
frstor
sbb
xchg
ret
pop
cli
and
mov
cmpsb
mov
push
jecxz
mov
xor
jg
movb
add
and
loope
xchg
xor
lahf
fisubrl
sti
mov
mov
repnz
push
test
push
addr16
dec
mov
mov
loopne
xchg
and
popa
cli
in
push
clc
or
sub
orl
pushf
cmp
rcrb
add
or
rorb
or
in
cmpb
inc
gs
jbe
add
clc
adc
dec
xchg
test
push
in
clc
outsl
cld
out
stos
mov
stos
in
xchg
pop
mov
jmp
xor
mov
ret
xchg
mov
and
mov
mov
lods
mov
in
pop
sub
movsl
ss
jecxz
cmp
out
mov
bound
stos
hlt
add
adc
dec
arpl
push
call
mov
jo
xor
int3
xor
fs
sbb
adcl
ds
inc
rdtsc
pop
jne
rclb
push
ljmp
iret
cmp
xchg
mov
or
mov
adc
lods
loop
pop
pusha
leave
xor
mov
aaa
inc
dec
test
or
pop
mov
sbb
jle
mov
jecxz
add
rorb
outsl
into
jbe
cmc
push
pushf
sbb
xor
mov
push
js
mov
mov
or
mov
aam
mov
add
in
push
xor
xor
xor
stos
stos
ds
shlb
push
icebp
sub
fnstcw
adc
int
inc
sub
movsl
mov
daa
add
das
cmp
aam
push
aas
dec
lods
lahf
xor
out
xor
push
jnp
cmc
stc
pop
or
push
gs
dec
shll
out
push
mov
push
mov
mov
jge
das
mov
loop
and
pop
dec
outsb
push
mov
jno
push
popa
dec
ljmp
call
mov
mov
mov
xchg
and
mov
aad
rcl
mov
insb
jl
pop
push
inc
ss
loope
inc
rolb
shr
fdivl
movsb
pop
jno
outsb
cmpsb
pusha
xchg
xlat
mov
sub
clc
std
dec
lods
sub
out
push
sub
xor
or
test
inc
mov
cmp
mov
call
pop
fucomp
inc
js
es
hlt
and
inc
and
cmp
cmpsb
lcall
push
xor
and
add
ds
inc
add
push
push
faddl
dec
addl
mov
xor
popa
adc
mov
shlb
les
lret
fs
and
orb
or
sub
cmpsb
mov
mov
fidivs
lea
adc
adc
jne,pn
sarl
fwait
cli
movsl
push
pop
inc
pusha
xor
inc
add
call
inc
mov
aas
xlat
mov
cld
push
push
enter
mov
ss
xchg
je
adc
or
shlb
mov
push
incb
stos
or
and
lds
imul
incl
stos
adc
pop
push
out
pop
xor
je
repnz
add
mov
mov
cs
adc
loope
ds
inc
add
pop
lods
jl
dec
insl
pop
cli
pop
mov
fstpl
sbb
and
lret
das
jb
sub
rol
dec
enter
lods
ss
dec
fsubrl
sub
mov
push
pop
inc
pusha
sbb
sbbb
jmp
and
add
push
ds
and
movsl
enter
nop
sbb
jmp
push
xor
xlat
or
scas
jecxz
repz
lea
or
es
push
call
push
cmp
sbb
dec
call
rcrl
mov
jnp
shrl
or
xchg
cwtl
rcll
loopne
sbbb
ja
dec
mov
cmpsl
adc
or
mov
test
sub
cmpsl
inc
je
cmc
mov
pop
fsubr
imul
leave
test
in
jmp
add
fadd
and
js
lds
adc
pop
mov
fwait
adc
outsb
and
nop
inc
adc
push
cmp
cs
cmp
push
in
mov
lea
stos
push
jne
and
clc
cs
jbe
sbb
notb
adc
and
mov
arpl
xchg
pop
push
or
mov
sahf
adc
mov
or
push
dec
cmp
clc
pop
js
fdivs
sub
sbb
dec
jle
push
push
sub
xchg
ret
jae
mov
sbb
ss
sbb
cmp
ret
hlt
pop
fildl
and
xchg
dec
inc
mov
jae
mov
mov
sbb
popa
or
mov
jmp
push
or
mov
mov
adc
or
orl
mov
loopne
andb
clc
or
loopne
adc
inc
and
jmp
loopne
adc
xchg
test
hlt
mov
fnstcw
dec
jnp
call
orb
stos
mov
sbbb
xchg
leave
enter
testl
div
sbb
clc
and
mov
into
out
xlat
push
shlb
lock
jp
in
xchg
in
push
and
out
or
adc
je
daa
push
test
pop
jae
ss
movsl
xlat
movsl
pop
jae
add
js
rorl
mov
or
loop
inc
jg
mov
imul
gs
in
lret
ljmp
rcl
lcall
outsb
les
mov
pusha
stos
add
push
outsb
insb
icebp
repnz
dec
lock
mov
lahf
pop
sbb
sub
mov
or
sahf
ret
lret
xchg
inc
pop
ds
iret
stos
negb
inc
loope
ficoml
jecxz
lret
push
cmp
dec
insl
sub
mov
shl
mov
jae
mov
sub
test
push
xor
test
mov
repnz
jbe
sbb
data16
inc
bound
xor
and
ret
and
jne
xor
std
fstpt
push
nop
cmp
dec
fnsave
aam
das
ffree
pop
xchg
ret
in
pop
nop
mov
test
cmpl
std
jne
xchg
mov
xchg
sub
xor
mov
lea
mov
aaa
push
mov
cmpsb
lods
sti
jo
loope
mov
test
pop
dec
mov
je
mov
andl
push
xor
xchg
jl
cld
and
pop
addr16
jo
test
pop
pop
push
xlat
add
loopne
xor
adc
outsl
in
mov
loop
xchg
cmp
adc
dec
adc
push
pushf
jae
test
xor
rolb
xor
outsb
mov
sahf
cmpsb
cmpsb
mov
jo
pop
mov
mov
shrb
dec
xchg
pop
shlb
stos
sbb
ds
scas
rcl
or
fidivrs
iret
test
lock
mov
jne
test
xchg
scas
mov
mov
iret
or
clc
iret
scas
pop
js
repnz
pop
fldt
fsubrl
cld
add
adc
orl
push
les
jecxz
mov
pop
adc
stc
jg
xchg
mov
mov
jge
adc
lcall
mov
and
inc
sub
stc
pop
call
xchg
and
add
push
jne
mov
or
jl
fdivl
cmp
into
adc
call
ret
jp
je
xor
push
pop
fwait
pushf
jecxz
fdivs
je
leave
in
pop
mov
dec
rorb
cs
insl
out
push
sti
sbb
shrl
std
fistpl
xor
xor
jo
repnz
jne
fdivl
test
jnp
bound
push
aaa
dec
rorl
push
jle
jl
std
cwtl
xorl
es
fisubrs
rorl
je
push
inc
mov
sub
mov
pop
clc
ja
addr16
sahf
mov
test
stos
aad
aas
mov
ret
and
subb
push
and
xor
jmp
pop
call
jnp
in
out
and
test
cltd
call
xor
push
outsl
mov
lds
push
and
lods
mov
jmp
cmp
xsha1
cmpsb
mov
lods
jmp
ret
lahf
ret
hlt
mov
jmp
push
or
pop
pop
and
fcomps
inc
inc
scas
or
or
roll
ret
lret
sub
or
and
addr16
inc
das
hlt
cmp
iret
jnp
add
in
mov
inc
popa
rcl
cmp
es
jmp
xchg
jle
ljmp
dec
lret
jno
pop
test
pop
incl
outsb
adc
aad
xlat
add
jl
or
sbb
cmpsb
int3
sarb
add
mov
and
push
push
sub
daa
push
test
dec
in
call
add
in
fwait
push
pop
inc
out
inc
pop
dec
scas
filds
xchg
mov
sbb
sub
insl
fsubs
into
aad
lahf
xchg
aam
in
icebp
add
mov
adc
adc
dec
xchg
cmp
lcall
mov
cwtl
sub
in
notl
fimull
repz
xchg
test
fiadds
push
mov
pop
cmp
dec
cmp
in
je
xchg
je
and
int
pop
and
outsl
shll
pop
sub
addr16
jl
decl
or
mov
jge
outsl
mov
or
sub
mov
in
adc
loopne
shr
js
mov
test
sbb
or
xor
mov
push
stc
movsl
movsl
rorb
push
cs
shl
xor
or
push
dec
mov
cld
push
sbb
sbb
jl
mov
stos
aad
add
mov
cmp
adc
or
cld
and
jb
andb
push
sub
ret
xchg
dec
mov
test
jae
sbb
mov
enter
das
dec
sub
lods
sbbb
mov
push
cmp
lret
loopne
jmp
test
ret
aaa
cli
out
jp
aad
test
lahf
test
mov
movsl
sbb
pop
pop
aad
pop
adc
mov
mov
mov
add
mov
pop
or
lea
popl
mov
jo
daa
jecxz
fistpll
in
out
cmp
clc
aas
sbb
xchg
pop
roll
int
mov
js
aas
mov
shrb
ljmp
ret
lea
push
fcoml
adc
dec
adc
push
jmp
cs
repnz
sub
jbe
inc
mov
fstpt
mov
xor
leave
movsb
push
ss
sahf
cmpsl
inc
sti
mov
jp
or
imull
mov
insl
imul
clc
repnz
push
pop
rcrb
ss
rorl
cmp
leave
int
call
ss
mov
adc
cmp
sti
repnz
jg
int
cmp
or
icebp
push
dec
dec
lret
sub
inc
cmp
cmpl
adc
ds
mov
scas
push
or
out
cs
sbb
psrlq
dec
sub
inc
push
aas
pushf
loopne
sub
cli
sarb
pop
rcll
jbe
cmp
push
adc
cmpsl
mov
or
jle
out
xor
jbe
shlb
cmpsb
pop
ja
and
sbb
or
aas
add
repnz
push
sti
push
inc
inc
in
or
loope
hlt
repnz
jmp
add
movsl
jmp
push
inc
repz
aas
and
add
mov
dec
sbb
sbb
pop
inc
mov
iret
arpl
decb
or
mov
jno
gs
cld
adc
pop
idivl
cmp
dec
iret
mov
gs
cs
jmp
xor
sti
fwait
push
in
pop
and
cltd
xchg
or
mov
xor
xchg
or
mov
and
jbe
sbb
mov
roll
or
adc
jb
inc
add
pusha
sbbl
lret
mov
push
mov
cmc
jae
jae
xchg
dec
sbb
into
test
je
push
jbe
fdiv
pushf
and
and
fwait
mov
fdivrp
outsl
shlb
shrb
xchg
mov
movsl
pop
hlt
and
decb
mov
aad
ljmp
rorb
mov
stos
push
xor
popf
cmp
stos
lock
jg
fisttps
lods
push
xchg
xlat
divl
mov
and
mov
xchg
leave
je
add
in
aam
rcr
call
and
lock
mov
jecxz
cld
pop
xor
js
cli
xchg
xor
adc
clc
jns
mov
xchg
jge,pt
or
xor
push
das
lcall
js
add
test
sbb
xorb
out
cmpsb
cmpsb
mov
cmp
dec
std
mov
lods
test
and
ffree
sub
lret
or
cmp
inc
movsb
adc
sbb
adc
pop
loop
mov
pop
or
mov
add
fs
and
and
call
mov
push
fsin
ljmp
std
inc
add
sbb
mov
sub
inc
jae
mov
inc
adc
test
mov
pop
out
aas
aad
fwait
inc
ficompl
std
insl
or
push
stos
std
pop
cmp
sbb
lock
mov
lock
test
ffreep
stos
sbbl
popa
call
dec
dec
xor
outsl
cltd
and
pop
cmp
aas
xorl
add
in
fucomi
aas
mov
sti
jmp
fistl
lods
ss
fucom
jb
cmp
iret
leave
mov
fdiv
lret
jno
rcrb
addb
jecxz
dec
adc
push
ljmp
add
xchg
lahf
mov
sbb
fidivrs
inc
test
jp
sar
or
sarb
rcr
pushf
ja
scas
ret
xor
jge
ss
xchg
dec
cmp
or
push
xchg
push
pusha
es
ret
rcll
test
and
les
inc
stc
movsb
sbb
push
sbb
insb
jo
mov
and
push
push
gs
cmp
jg
push
jnp
jmp
or
stc
and
sub
mov
insb
ja
in
dec
cli
movsl
pop
sub
push
lret
cmp
in
fwait
push
lret
mov
pop
aad
jge
js
mov
insb
adcb
pop
outsl
js
mov
ss
pop
nop
adcb
jmp
xor
negb
pop
dec
pop
mov
rcrl
clc
std
and
add
mov
mov
mov
dec
ss
subb
out
outsb
mov
movsb
mov
inc
mov
sbb
data16
stos
mov
mov
insb
imul
repnz
dec
shrl
test
hlt
loopne
pop
cs
lret
adc
push
mov
iret
and
sub
jns
std
xor
pop
rorl
xor
sbb
je
sbb
mov
add
lds
add
mov
or
mov
out
lret
in
xor
mov
add
pop
push
pop
cmpsb
and
adc
insl
imul
inc
mov
adc
pop
xor
rclb
scas
daa
neg
call
negl
add
fmuls
cmp
or
cmpsl
cmpl
and
jle
scas
mov
mov
push
pop
pop
mov
inc
add
and
test
stos
xchg
decb
shlb
xchg
scas
cmp
dec
in
inc
mov
push
mov
daa
sbb
xchg
dec
lea
pop
andb
pop
leave
push
xlat
in
xchg
bound
lahf
pop
jecxz
add
test
add
push
cmp
lret
jmp
imul
in
js
cmp
pop
adc
in
pop
test
leave
call
mov
outsl
inc
sub
and
pop
incl
les
pop
xchg
in
sub
jmp
fidivs
push
cmpl
test
xor
movsl
cmpsb
mov
loopne
push
push
xlat
xor
jno
out
mov
test
icebp
rorl
adc
fidivl
and
fmuls
clc
hlt
and
sbb
xor
movsb
popa
rcll
cmp
shl
sbb
push
fsts
mov
or
and
mov
ret
shlb
and
rcll
push
fwait
jp
add
or
cwtl
ret
jne
push
daa
jle
imul
cmp
mov
loopne
jecxz
jo
pop
aas
mov
mov
ret
mov
mov
jp
mov
inc
push
scas
xchg
xchg
movsb
cs
aaa
lock
aaa
sbb
fs
data16
fnstcw
ljmp
push
insb
push
mov
iret
in
add
dec
fwait
inc
jmp
and
outsb
pop
fstl
shlb
inc
pop
lret
sbb
mov
dec
mov
aas
lcall
cli
xchg
push
add
testl
jmp
and
or
push
pop
in
and
idiv
imul
test
mov
rol
stos
mov
mov
cmp
idivb
loopne
push
sub
je
jle
add
shll
shl
daa
cmp
loopne
jl
push
shlb
push
xlat
inc
mov
and
push
pop
mov
jmp
mov
xchg
mov
xchg
mov
addl
into
adc
fbld
scas
ss
pop
cmpsb
lods
mov
mov
rolb
jo
inc
pop
jg
test
lods
punpcklbw
dec
cli
andb
pop
or
pop
or
roll
fcoms
loop
sub
sub
dec
push
xorb
fdivl
mov
mov
or
rorb
aaa
xchg
or
cmp
popf
dec
lcall
jg
mov
inc
fdivs
mov
inc
push
jnp
shrl
das
cld
push
ljmp
mov
bound
xor
aas
scas
sbb
or
loope
outsl
and
addb
add
mov
sbb
je
in
fdivrl
mov
push
int3
arpl
lock
jle
decl
add
arpl
rorb
jo
push
fiaddl
mov
out
rolb
jbe
jle
cmp
inc
push
cs
mov
and
add
xchg
mov
xor
mov
inc
scas
test
lds
push
stos
pop
or
fcom
cmp
cmpl
cmp
dec
jl
negb
ds
out
lds
fistl
test
jp
fsts
sub
jne
in
add
add
jne
mov
or
or
pusha
mov
jg
loope
outsb
mov
insb
mov
mov
dec
jg
mov
loop
jg
int3
or
jle
cmp
jp
push
inc
pop
lea
jns
sbb
or
in
pop
xchg
in
fldcw
push
shrb
icebp
scas
add
shrl
jg
call
testb
cmp
jg
fs
outsb
pop
or
and
fidivrs
shr
xor
ret
sbb
fldt
loop
mov
ds
ret
mov
stc
cmp
jne
pop
aas
pop
in
sub
cwtl
daa
sbb
adc
mov
aad
outsb
sbb
pop
lret
stos
test
addl
mov
lahf
popa
push
cmp
lea
dec
adc
add
filds
stc
inc
jg
mov
add
cwtl
cli
mov
mov
push
into
xchg
and
dec
paddb
xchg
mov
in
dec
repz
pop
mov
subl
xor
addr16
dec
lods
scas
stos
aaa
lds
andb
sti
sbb
test
mov
mov
jnp
fdivs
das
dec
int
iret
cmpsl
push
std
cmp
and
pusha
scas
jmp
in
je
dec
fdivs
jecxz
cmpsb
add
bound
roll
mov
pop
pop
jbe
cltd
cmp
pop
insl
xor
pop
aam
mov
cmpsb
ss
clc
shrl
popf
bound
stos
fcompl
das
pop
test
aaa
cs
in
xchg
pop
mov
jb
cmp
decb
pop
js
shlb
and
mov
mov
dec
or
gs
push
dec
cltd
mov
pop
cmp
dec
add
addr16
sahf
dec
add
imul
or
dec
inc
faddl
and
xchg
adc
and
data16
push
fidivrs
icebp
sets
arpl
mov
mov
push
push
pop
sbb
sbb
aas
sbbb
insl
rcll
mov
add
adc
push
xor
incb
xor
pop
inc
mov
orb
stos
or
jmp
jo
jb
adcl
lea
mov
mov
les
stos
sti
mov
movsl
das
or
cmp
or
outsl
sub
push
adc
ja
sbb
outsl
mov
mov
repz
sub
xlat
or
fsts
adc
movsl
out
icebp
cwtl
push
sbb
push
xchg
incl
xchg
mov
mov
mov
or
mov
ja
leave
dec
je
movsb
cli
jp
xorl
fdivl
scas
mov
mov
jp
xor
popa
testb
push
call
dec
sbbb
clc
ret
mov
mov
xor
shlb
movsb
mov
add
jno
popf
xchg
fsubrl
jl
loop
add
fildl
decl
mov
jge
sub
ljmp
std
pop
mov
fucomi
testb
cmc
fstpt
leave
jns
xchg
shrl
nop
popf
dec
out
mov
ficompl
pop
out
dec
sub
adc
test
and
adc
lea
xor
lock
cmp
xor
add
inc
mov
data16
add
movsl
icebp
ret
into
js
sub
mov
lea
call
and
sbb
pop
ss
add
pop
int3
or
or
jbe
in
xor
xor
sbb
push
cwtl
mov
inc
push
test
icebp
cmp
aaa
in
cli
mov
fwait
ljmp
add
outsb
pop
jb
sbb
cli
pop
xor
imul
xchg
fcomip
xor
std
fwait
mov
sahf
xor
test
mov
adc
push
mov
xchg
or
sbb
jl
data16
ljmp
lea
mov
cmp
add
sbb
push
lea
sti
push
xor
rcr
call
sbb
sub
das
push
subl
push
inc
insb
movsb
jo
pop
fadds
cmp
add
js
rclb
mov
fidivrs
cmpsb
xor
popa
xchg
xchg
or
adc
adc
sbb
mov
sbbl
scas
xchg
adc
stos
jnp
int
jno
ffree
pusha
ret
mov
xor
ja
mov
push
aas
adc
or
mov
in
call
add
mov
mov
mov
test
xchg
mov
or
pushl
stc
pop
rorl
jbe
pop
idivl
mov
fistpll
cmp
hlt
xchg
sbb
mov
sbb
roll
mov
outsl
dec
xchg
jne
or
imul
jmp
mov
sbb
jb
adc
add
fnstenv
scas
movsl
gs
lahf
add
sbb
add
inc
mov
out
sbb
sbbl
pop
push
fstpt
nop
pusha
movsb
xor
icebp
testb
cwtl
xor
aas
xchg
or
xchg
callw
out
clc
xlat
push
mov
orb
ja
or
test
jnp
ror
out
mov
mov
cmp
jno
aad
leave
loope
mov
andb
xor
bound
ret
nop
sub
out
lock
cmovg
sbbl
jne
fbld
sar
lret
xor
lcall
js
jmp
bound
lcall
jle
lea
add
lcall
lret
or
mov
xor
bound
stos
mov
rol
iret
loop
iret
shlb
dec
cmpsb
sbb
adc
push
mov
add
daa
or
jecxz
and
inc
jbe
insb
sbb
sbb
xchg
fsubs
clc
subb
pop
xlat
mov
cmp
jp
and
imul
add
in
cli
sbb
in
iret
sub
xchg
loope
or
les
mov
push
es
push
aad
add
push
fildll
cld
neg
mov
arpl
femms
pop
fisubrl
add
lock
incb
inc
lea
fisubrl
js
or
cmp
sub
pushf
inc
fimull
cmp
sub
cmpsl
lds
pusha
imul
rcrb
test
icebp
or
mov
hlt
and
popl
mov
inc
test
outsb
out
fwait
and
nop
jae
in
add
lds
adc
fs
mov
xor
ljmp
inc
mov
adc
jbe
test
je
inc
popa
inc
or
inc
or
scas
or
sbb
scas
in
dec
outsl
mov
and
aaa
add
inc
inc
sub
mov
xchg
adc
cmp
lret
call
mov
adc
cmpsl
mov
fldenv
ret
sti
outsb
inc
btsl
lahf
push
sub
xor
mov
xchg
mov
loope
repz
jecxz
mov
push
mov
pavgb
data16
cld
mov
push
insb
xor
xor
pop
aam
dec
add
pop
ds
inc
mov
pusha
sub
sbb
jp
inc
jg,pn
pop
lds
cmp
fbstp
sub
fidivs
mov
jo
outsb
outsl
and
sbb
xorb
mov
pop
unpcklps
and
stos
addl
and
lcall
popl
or
inc
icebp
mov
push
jo
or
adc
repnz
int3
push
in
pop
jb
movsl
push
mov
and
and
xchg
popa
jle
leave
popf
push
decl
add
pushf
orb
mov
dec
inc
cltd
pop
icebp
mov
xor
sbb
aaa
or
push
scas
cmovne
jl
popa
jmp
inc
jnp
nop
outsl
dec
or
mov
testl
mov
stos
dec
or
push
push
adc
lock
andl
and
lcall
xchg
rorl
lods
shll
mov
jbe
add
loope
outsl
push
add
fucomp
and
jg
mov
punpckldq
ret
enter
xlat
leave
pop
cwtl
xor
jecxz
aaa
or
lods
or
mov
jo
cmp
lcall
adc
xchg
aam
xchg
and
and
or
dec
scas
dec
in
dec
or
mov
dec
fs
dec
xlat
sbb
pop
imul
or
lcall
aam
adc
push
out
add
xchg
jne
bound
mov
sbb
dec
mov
inc
jb
out
aaa
mov
jne
iret
and
std
je
add
lods
hlt
pusha
stos
push
out
dec
dec
push
mov
ret
aam
push
pop
mov
adc
jg
mov
mov
mov
andl
jge
and
jl
push
jb
dec
push
fcompl
dec
outsb
pop
mov
add
and
fldenv
lret
jno
fstpt
dec
jge
ljmp
push
sub
pop
inc
icebp
mov
fsubrl
call
sbb
jg
je
outsb
pop
jne
rclb
adc
mov
dec
and
xor
jl
pop
shl
es
inc
inc
cli
aaa
and
jns
into
sti
mov
jae
add
loopne
adc
sub
inc
std
dec
into
sub
adc
cli
mov
stos
sbb
and
rcl
mov
mov
xchg
jns
cmp
mov
mov
lods
inc
inc
out
mov
stc
je
bound
shrb
jne
out
nop
cmpsb
stc
mov
or
jno
pop
aaa
jle
std
mov
sub
stc
push
inc
loope
cli
fwait
xchg
push
aam
jno
jae
lods
and
fcmovb
mov
mov
imul
aaa
popa
mov
bound
lret
ror
in
scas
xchg
leave
ret
mov
and
xchg
inc
add
sbbb
xchg
fcompl
pop
fisttpl
jp
sahf
push
dec
scas
xchg
cmp
inc
xlat
add
bound
pusha
fcmovb
out
mov
jle
sbb
fwait
pop
jo
popa
add
cmc
push
dec
notb
outsb
popa
insl
enter
mov
dec
testb
sbb
int3
gs
push
outsl
shll
dec
outsl
or
jg
xor
inc
mov
pop
cmp
mov
ja
movsl
fnstsw
popl
int3
xchg
fsubr
fidivrl
fs
rcll
xchg
fcoms
pop
aaa
jbe
enter
dec
jg
negl
sbb
pop
mov
jp
jl
das
addb
cmp
addb
mov
xchg
add
sbb
xor
xchg
mov
sahf
mov
or
and
jge
add
insb
sbb
lock
push
loope
mov
nop
cs
or
adc
cmp
test
mov
orb
out
mov
xor
adc
jb
in
pop
mov
in
testb
enter
test
out
ljmp
cmp
out
jae
push
fisttpl
aam
aad
jge
lods
cltd
ret
xchg
mov
ret
inc
incl
rcr
repnz
movsb
mov
jp
xor
hlt
xchg
cmpsb
arpl
lea
pusha
fucomi
push
adc
push
add
lret
fadds
fdivrl
stos
push
adc
aaa
loopne
test
rcr
jle
lock
or
test
ret
jle
mov
sahf
mov
mov
les
xor
xchg
add
push
or
mov
mov
sahf
jno
jl
pop
sub
mov
scas
cmp
dec
dec
mov
push
push
push
dec
xchg
mov
xor
pop
and
arpl
fcmovnu
mov
pusha
adc
jg
out
sbbb
jecxz
sub
sub
xor
xor
test
rcr
js
or
rorb
pop
shrl
jecxz
or
into
adc
in
mov
add
push
lods
orl
roll
out
mov
jae
js
mov
or
xor
mov
adc
mov
dec
pop
sti
adc
xchg
cmp
test
mov
cmp
cmp
sub
push
mov
push
icebp
push
scas
dec
mov
outsb
std
xor
fimuls
cmpsl
scas
pop
rorb
cmp
sahf
or
pop
mov
dec
add
jl
mov
scas
ret
stos
orb
outsl
lock
je
ja
cmp
sbb
faddl
cmp
or
add
and
add
mov
aas
sbb
mov
insl
pushf
orl
pop
out
stos
inc
pop
add
dec
lret
pushf
scas
ret
icebp
rcrl
mov
inc
mov
dec
fucom
or
fcomps
xor
mov
or
test
pop
mov
mov
call
pop
lock
mov
dec
and
sti
jmp
fwait
ret
push
imul
aaa
push
adcb
xlat
idivb
pop
movd
outsb
ljmp
push
orb
inc
fisttpll
sub
mov
pop
fiadds
or
jmp
imul
inc
dec
je
sbb
jno
lds
imul
jmp
adc
mov
mov
or
xchg
sub
pop
lods
or
mov
insl
xor
mov
push
pop
pop
aad
pop
ret
dec
add
push
pop
js
cmpsl
call
push
and
sbb
je
inc
adc
mov
sub
adc
movsb
pop
xor
mov
mov
ja
cmc
add
in
pop
inc
out
lret
jmp
das
outsb
call
mov
mov
cmpsb
jecxz
iret
rol
mov
xlat
aam
mov
pusha
jp
jbe
in
pop
je
rclb
int3
xor
mov
sbb
and
std
insl
popa
ret
cvtpi2ps
lcall
or
int
adc
xchg
add
outsl
aaa
fsubrl
inc
jl
cmp
push
push
out
enter
cmpsl
test
dec
out
jbe
addb
xor
push
mov
int3
outsl
rol
or
adc
jne
sbb
dec
ret
out
aam
jp
inc
add
xchg
mov
adc
jg
inc
dec
mov
sti
ffreep
sbb
movsl
scas
fbld
lret
sbb
mov
jg
cmp
push
push
rorl
js
fiadds
mov
icebp
cmp
adc
or
jno
fsubrl
push
pop
ret
das
insb
das
lcall
xchg
cmp
test
mov
sbb
mov
adc
mov
lret
ss
xchg
mov
adc
outsl
je
mov
sub
subl
cmp
or
jmp
jmp
adc
pop
sub
or
push
int3
mov
xchg
mov
xorb
and
push
push
cmp
ret
sub
or
cmp
lret
int
stos
outsb
adc
jne
inc
idivl
and
cmp
insb
adc
or
enter
sbb
push
repnz
push
movsb
cmp
clc
mov
mov
lahf
mov
jl
sub
sbb
jp
loop
sbb
dec
mov
sub
rolb
mov
add
mov
jnp
mov
cmp
loope
icebp
inc
aaa
sbb
adc
jbe
jg
je
rol
or
xor
jp
add
jecxz
jecxz
xchg
mov
rclb
ffree
dec
hlt
mov
jg
sub
outsl
arpl
mov
or
cld
push
pmaxub
cmp
je
xchg
cltd
xor
sbb
out
insl
lcall
movsl
jle
push
adc
sub
mov
xchg
pop
and
cmp
out
or
dec
xchg
imul
imul
or
and
call
mov
adc
jecxz
inc
out
and
std
pop
adc
jo
adc
imul
xchg
xor
fisubrl
js
jp
add
pop
push
incl
jmp
lret
add
leave
in
aam
dec
lock
lahf
inc
pop
push
das
ja
sub
pop
insl
xor
loope
jmp
fidivs
add
jb
fs
dec
jns
pop
mov
cmp
scas
mov
jmp
js
rol
pop
outsb
test
mov
ja
pop
push
push
jmp
cmp
sbb
mov
mov
mov
or
es
fs
in
mov
mov
xor
rcll
loopne
insb
out
clc
lcall
in
ret
ds
call
cld
dec
iret
aas
cltd
es
mov
rcl
ss
xchg
and
fildl
out
pop
test
sub
add
sarb
lcall
pop
dec
fdivl
jnp
insb
dec
aas
fs
dec
fnsave
inc
ss
xchg
dec
push
xor
adc
out
js
pop
sbb
subl
or
jle
mov
sub
cwtl
cmp
mov
push
aaa
les
xchg
jo
shll
xchg
es
je
add
in
outsb
enter
es
push
in
addb
cmpsb
scas
mov
and
orl
cmp
xchg
cmp
test
mov
dec
imul
in
jle
pop
fistpll
lcall
jns
loope
pop
push
mov
and
clc
mov
jg
adc
inc
cmpsl
jo
xor
jecxz
pop
scas
test
push
cmp
mov
jg
fs
imul
pop
jo
sbb
sti
add
outsl
sti
add
jae
pop
sbb
testl
mov
icebp
outsb
in
fwait
mov
ret
xor
fisttpl
xchg
adc
das
test
insl
fcmovnu
mov
cmp
dec
pop
cld
mov
popf
push
addr16
mov
dec
mov
repz
stos
xor
and
jg
jo
mov
cmp
sub
add
jle
cs
push
dec
sub
mov
adc
mov
ja
mov
inc
inc
push
ret
or
clc
call
popf
fdivrs
pop
xchg
out
out
inc
inc
push
jp
fbstp
adc
xchg
and
xor
xlat
loopne
push
pop
mov
repz
fildl
mov
xor
icebp
inc
loopne
not
pop
cmpsl
inc
jmp
es
or
gs
in
or
test
shll
inc
lret
in
fwait
sub
ret
mov
add
pop
sub
sbb
xor
in
mov
or
fbld
cmpsl
add
popf
mov
mov
sbb
sbb
mov
pop
mov
xor
push
cmp
js
or
frstor
test
cli
pop
clc
mov
push
test
lds
dec
push
stos
inc
pop
inc
mov
lods
insb
push
pop
leave
sbb
jmp
mov
jae
push
or
sub
fldl2e
push
mov
add
das
mov
in
and
xchg
adcl
outsl
jo
dec
or
sbb
sti
jb
jbe
sub
insl
fadd
xor
or
jo
std
in
or
jne
loopne
or
clc
aaa
jbe
cltd
popf
lds
jl
icebp
mov
js
sub
je
stos
xchg
movsb
push
push
aas
shll
jg
xchg
mov
popf
js
push
fistpll
test
jp
cmp
adc
sub
in
mov
mov
ljmp
popa
pop
add
and
mov
jl
leave
mov
cmpb
mov
and
test
lods
in
fdivr
std
sbb
jl
rcrb
outsb
dec
cmp
cmc
mov
sbb
and
fwait
xchg
jecxz
fistpl
js
pop
pop
incl
push
js
adc
pop
in
jmp
ja
ficompl
add
scas
push
adc
pop
push
dec
jo
dec
hlt
and
stos
mov
or
fiaddl
sahf
mov
mov
cmp
mov
rclb
cmp
cmp
jae
orl
mov
mov
dec
out
imul
out
movsl
cmp
addl
add
das
notl
stos
test
loope
hlt
test
fst
add
adc
pushf
mov
outsb
inc
inc
mov
mov
xchg
icebp
sbb
push
jne
pop
icebp
push
xor
test
mov
or
mov
scas
icebp
xchg
rcr
mov
mov
cs
sbb
push
jns
fsubrs
sti
and
adc
fs
jmp
fidivrs
incb
lret
mov
aas
in
mov
inc
mov
pop
mov
and
les
and
lea
add
sbb
dec
adc
jp
idivl
lods
sub
scas
or
arpl
cmc
jecxz
push
sub
cmpsb
dec
stos
dec
push
or
mov
lods
xchg
xchg
comiss
pusha
cmp
mov
and
loope
or
dec
xlat
sbb
xor
int
mov
scas
fistps
push
ret
xor
lret
loop
enter
cvtps2pd
call
cmpsl
test
pop
cmc
inc
imul
lret
push
fistl
in
xchg
in
jge
or
inc
mov
mov
or
cmp
cs
push
sbb
mov
sub
xlat
test
lahf
mov
enter
sub
lret
pop
pop
clc
mov
pusha
pop
std
test
aaa
xchg
xchg
or
fildl
call
sbb
sub
mov
xchg
mov
lea
xchg
xchg
lods
psadbw
lea
inc
gs
orb
mov
fidivs
inc
subl
dec
push
or
mov
out
test
enter
mov
fcoml
outsl
out
push
or
fcmovb
sarb
jbe
sub
or
and
jo
mov
les
add
cli
or
pop
stos
add
loopne
xor
inc
scas
addr16
and
scas
pop
fnstenv
mov
and
cmpsl
fldenv
or
mov
push
shlb
add
js
leave
or
loopne
push
push
cwtl
pop
mov
jl
out
cmp
imul
fsubrl
in
insl
pushf
cmpsb
insl
orl
pop
fstp
dec
and
loope
xor
jne
and
sub
inc
shrl
mov
data16
mov
sbb
push
shr
test
loope
dec
fstpl
aas
outsl
les
decb
adc
aad
mov
stos
mov
cli
jbe
movl
xor
in
pusha
adc
pusha
ds
lahf
orl
inc
cmpsb
ss
pop
sbb
mov
cwtl
mov
adc
push
dec
test
cld
out
mov
popf
popa
push
cmp
pop
subb
sbbb
loope
xchg
subl
add
mov
mov
out
adc
cmp
add
pop
repnz
loop
pop
outsb
enter
stc
adc
push
imul
lret
or
das
adc
mov
arpl
cmp
insb
aaa
add
dec
pop
sarl
cli
or
fs
out
dec
ja
or
inc
mov
jp
int3
icebp
sub
pop
push
fcmovu
push
push
or
insl
orl
sti
fxch
mov
dec
outsb
inc
icebp
dec
mov
sub
xlat
or
pop
in
push
sbb
aam
fcomip
fwait
dec
or
mov
mov
aam
mov
fdivs
jb
adc
or
fmull
arpl
gs
jns
jg
test
subl
mov
jbe
outsl
hlt
sbb
or
insl
mov
add
test
into
jno
mov
in
ret
mov
shlb
test
dec
adc
outsb
loop
aad
and
dec
xor
or
cmc
mov
test
lcall
insb
ljmp
outsb
mov
jbe
xor
mov
push
mov
jp
adc
shlb
and
push
add
add
pusha
mov
sub
fcmove
pop
dec
dec
aam
or
xchg
out
or
in
mov
mov
mov
add
je
call
inc
fistpll
sar
pop
xchg
push
mov
nop
icebp
push
cs
lret
bound
subl
fs
hlt
aaa
jne
jnp
mov
pop
mov
sbb
inc
leave
pop
enter
stos
in
add
add
mov
mov
fcmovnu
loopne
popa
fsubl
pop
dec
or
lret
cmpsl
mov
and
hlt
fwait
xchg
mov
ret
xchg
mov
sub
mov
sub
scas
pop
inc
lret
jno
fadds
xor
enter
mul
mov
cwtl
aam
movsb
dec
enter
fdivs
adc
xrelease
js
je
inc
adc
sbb
mov
fnstsw
ljmp
mov
push
nop
sub
lcall
sbb
mov
push
push
cwtl
mov
lock
mov
out
xor
adc
popa
add
sti
decb
adc
arpl
mov
xchg
cs
enter
mov
fcoms
iret
call
enter
test
gs
sub
je
icebp
and
mov
jecxz
pop
xchg
outsb
mov
sub
mov
pmuludq
leave
push
adc
sbb
sub
push
mov
cmc
inc
test
test
jp
jecxz
outsb
pop
sbb
pop
in
xlat
and
or
cmc
jno
pop
rolb
cmp
stos
cmp
xchg
in
xor
pop
sub
ss
mov
dec
outsb
pushf
jns
mov
aad
out
mov
rolb
inc
imull
icebp
div
jmp
and
fimuls
jne
repnz
mov
mov
ljmp
jae
dec
test
shll
or
mov
mov
mov
cmp
mov
shlb
outsl
insb
and
pop
pop
or
fcmovbe
pop
lret
mov
mov
dec
or
cmp
frstor
pop
test
jecxz
push
lock
mov
mov
ret
pop
add
leave
aad
rorl
or
and
sbb
in
push
xchg
pop
mov
sub
sarb
xlat
dec
inc
orl
xor
push
pop
and
stos
leave
in
pop
push
cmp
pop
sbb
outsl
insl
insb
cmp
gs
clc
adc
mov
or
fstl
fcmovnbe
rcr
shl
cwtl
scas
repnz
inc
dec
aaa
rcrl
inc
hlt
inc
adc
mov
mov
shl
push
pusha
pop
loop
dec
lea
jl
jbe
repz
shll
and
mov
or
insb
imul
inc
shl
jae
xchg
mov
jo
lds
mov
sbb
add
sub
sub
ja
xchg
sbb
pop
sbb
fwait
and
cmp
sbb
arpl
arpl
ret
imull
push
push
clc
pop
xlat
fsubl
jne
or
out
mov
sub
ljmp
add
jae
je
loope
cld
aaa
jle
pushl
test
fimuls
adc
test
cld
repz
fwait
sti
adc
ljmp
dec
pusha
pop
fs
sbb
jp
hlt
or
repnz
enter
fildl
push
arpl
arpl
std
adc
or
decb
int3
push
fiaddl
cltd
sub
mov
roll
mov
push
and
hlt
sbbb
and
add
clc
adc
mov
rorl
test
mov
jp
sbb
psrad
test
fnsave
aad
subl
pop
pusha
sti
cmpb
loopne
dec
cmpsb
pop
or
lea
scas
loope
mov
mov
inc
pop
mov
scas
pop
rcrb
andb
bswap
dec
mov
mov
mov
pop
fs
mov
sub
sti
mov
mov
sbb
testl
add
inc
dec
or
push
inc
int
push
jo,pn
sbb
fsubp
push
stos
test
and
jno
arpl
dec
mov
dec
mov
sub
js
shl
xchg
cs
roll
pop
mov
out
mov
mov
adc
int3
cmp
fisubl
fwait
lcall
adc
call
adc
stc
aaa
lods
mov
imul
cmpsl
sub
mov
fdivrs
pop
test
mov
in
dec
xchg
mov
dec
rcr
dec
sbb
ret
data16
js
lea
add
fisubs
call
or
push
nop
add
mov
rcl
popa
ret
dec
ljmp
add
shr
xor
stos
push
mov
bound
mov
mov
loopne
or
lock
mov
fmuls
in
mov
jl
jge
xchg
cmp
mov
movsl
adc
mul
shl
cmp
mov
add
cmpsl
sbb
xchg
push
pop
scas
mov
lret
mov
cli
inc
pop
mov
repz
jne
pop
js
xchg
js
push
icebp
loop
orb
cmp
add
dec
movb
jg
pop
sbb
stos
sub
and
xor
mov
push
xchg
sahf
xor
incl
add
or
ret
movsl
xchg
xchg
add
xchg
xchg
jp
mull
jne
sbb
push
mov
jle
imul
shrl
shrl
sbb
mov
add
mov
notl
sahf
mov
and
push
test
pop
xchg
loope
les
and
sub
push
addr16
fs
jb
pcmpgtw
push
xor
rcrl
arpl
push
push
pop
lods
in
ds
push
andb
in
sub
ss
adc
cmp
inc
jne
mov
sub
pop
push
iret
pop
jae
pop
mov
lods
filds
and
insl
dec
test
inc
mov
pop
push
mov
jle
inc
xlat
pop
pop
mov
and
js
jnp
mov
xor
mov
adc
pop
fadds
jne
or
movsl
outsb
lret
add
pop
cwtl
sub
mov
je
and
mov
testl
pop
pop
aas
out
xchg
or
lret
jg
insl
cld
sbb
add
cld
test
adc
pop
insl
ret
fwait
loopne
lds
adc
sub
adc
cmp
mov
dec
mov
sbb
jbe
insl
mov
loop
fadds
mov
shrb
leave
psignd
shl
cmpsl
inc
fistpll
mov
das
mov
mov
and
and
dec
mov
icebp
push
jg
xchg
jbe
insb
inc
adc
popa
jns
jmp
outsl
mov
or
xchg
movsb
fcmovnbe
adc
ret
testb
push
xor
mov
mov
sub
call
jge
bnd
das
jl
fisubl
sub
mov
push
sarb
fdivrp
pop
pop
in
sbb
fstp
fwait
rcr
nop
sti
mov
inc
mov
lds
aam
dec
xor
jnp
sahf
mov
pop
sbb
pop
mov
xchg
adc
lds
mov
pop
pop
pop
cli
in
add
cmp
inc
jecxz
and
push
cltd
data16
into
add
pop
rcrl
jno
sbb
div
leave
xchg
sbb
and
or
movsl
jge
xchg
xchg
lcall
pop
rcrb
inc
lock
jno
std
aam
lock
adc
and
push
clc
xlat
incl
add
rclb
mov
popa
ret
add
inc
repnz
push
popa
xor
pusha
es
push
jge
mov
sub
push
jns
sub
add
fcomps
lea
fistpl
dec
int
inc
dec
push
imul
outsb
fisubl
lahf
out
dec
popf
cmp
faddl
cmpsl
in
pop
test
aad
ljmp
scas
loopne
loop
shrb
arpl
outsb
scas
popw
pop
pop
jg
int
cmp
inc
push
enter
or
ja
inc
push
lahf
movsl
jmp
or
jle
jno
jno
std
and
test
insl
mov
in
push
adcl
jo
dec
add
jae
dec
jb
icebp
fiadds
push
lock
inc
xchg
add
push
jmp
mov
add
call
or
fisttpl
pop
mov
imul
cmp
mov
adc
pop
mov
sbb
mov
add
dec
pop
xchg
add
push
add
mov
xor
jmp
jmp
push
sbb
test
mov
out
cmp
xor
dec
jp
daa
out
ds
lea
pop
pop
mov
mov
idivb
popa
fidivrl
or
mov
dec
push
add
push
mov
jbe
add
js
in
inc
popf
loope
fildll
mov
xor
lea
fstl
push
and
fistpl
out
and
pop
mov
adc
add
out
jg
pop
stos
fdivl
pop
mov
scas
loop
and
or
out
mov
std
jmp
lods
mov
out
addr16
stos
cmp
iret
sarl
sbb
dec
dec
ficoms
adc
inc
pusha
popl
sub
mov
and
fidivrs
icebp
push
fidivrl
imul
sub
daa
inc
add
xlat
mov
dec
xchg
sbb
lret
popf
jp
dec
hlt
adc
les
cmp
testb
adc
mov
sbb
mov
iret
pop
das
out
dec
push
ret
shlb
inc
jl
imul
dec
bnd
mov
repnz
inc
inc
not
sub
rcr
pop
aaa
ret
inc
outsl
clc
adc
xchg
cmp
out
rorb
adc
push
lret
push
sbb
les
pushl
push
jge
and
inc
data16
ja
mov
xchg
les
and
cs
rclb
ljmp
mov
mov
int
shlb
push
mov
add
or
xor
ret
aaa
adc
fstps
stos
or
and
xlat
jne
mov
and
jno
adc
sub
negl
jb
std
ret
push
popf
jb
sarl
aad
and
adc
hlt
push
inc
fbstp
out
popa
adc
cmpsl
jg
andb
call
xchg
mov
test
add
nop
int
mov
in
ljmp
lahf
je
rol
push
push
jg
and
jmp
jne
cmp
cmp
or
inc
cmp
outsb
sub
insb
pusha
lret
mov
push
ds
xor
sbb
test
jge
mov
imul
push
add
mov
pop
adc
inc
mov
inc
cmpsl
cli
mov
hlt
push
movb
add
in
jnp
fdiv
add
push
ret
add
push
dec
adc
push
mov
ja
fsubl
test
or
adc
frstor
imul
sbb
cld
or
mov
aas
or
shrb
xchg
jle
aam
sub
mov
aaa
push
adc
loop
jno
outsb
imul
and
xor
or
outsb
inc
fisubrs
or
jo
movsb
xchg
push
or
jne
jecxz
cld
aaa
pop
sahf
adc
mov
sub
cmp
sbb
aam
jmp
jp
push
aas
xchg
nop
xlat
fld
add
inc
and
imul
stos
or
jecxz
into
stos
mov
push
xchg
stc
and
jecxz
sbb
or
scas
js
add
call
mov
sbb
nopl
mov
fbstp
sbb
ret
xor
mov
in
hlt
jle
xor
dec
xlat
lods
dec
stc
sbb
int3
mov
xchg
movsb
pop
mov
mov
lods
fs
and
xchg
out
or
pusha
mov
pop
into
in
pop
mov
dec
cmp
xchg
int
mov
je
jmp
xchg
rclb
mov
push
and
pop
test
popf
repnz
call
jg
sub
pop
xchg
jle
fadd
cmp
call
cmp
ljmp
pop
out
cltd
mov
test
loopne
cmc
inc
jge
jge
jmp
adc
andl
icebp
mov
rolb
cmpsl
stos
pop
rorl
inc
insb
push
mov
mov
lret
add
fbstp
sarb
adc
test
inc
or
jo
adc
mov
clc
jbe
and
in
xchg
dec
pop
or
adc
jmp
jbe
mov
sub
jecxz
pop
lock
pop
mov
bswap
into
and
jmp
stos
add
xor
mov
sti
movsl
outsl
fistps
in
or
push
jp
adc
hlt
sti
in
cmp
pusha
xchg
lock
cmp
in
mov
adc
push
jp
iret
push
push
lds
mov
int
push
leave
mov
mov
inc
xchg
cmp
out
or
inc
out
leave
jg
imul
dec
inc
mov
popa
xlat
aad
jmp
or
mov
loop
ljmp
pop
mov
mov
cmp
stos
jno
sbb
ficompl
jl
or
ret
dec
push
push
stos
push
rcrb
or
pop
push
in
cmpl
cmp
dec
aas
push
push
dec
adc
pop
add
add
or
bound
fdivp
and
and
in
or
pop
adc
in
fiadds
push
jne
pop
or
es
xor
lods
sub
mov
mov
jecxz
adc
je
or
stos
mov
pop
stos
incb
sbb
pop
call
and
fcmovbe
pop
das
std
lods
rol
or
add
fadd
xchg
mov
xor
fadds
mov
popf
sbb
sbbb
inc
adc
push
and
insb
mov
aaa
icebp
iret
loope
dec
or
xor
out
cmp
and
xchg
lea
jle
stos
mov
mov
dec
add
push
outsb
pop
in
sub
push
inc
push
popf
adc
mov
clc
pop
add
and
les
mov
add
loopne
insl
inc
pop
sub
aam
sbb
xchg
jo
push
or
jno
ljmp
andl
xchg
ja
rol
inc
mov
sbb
in
es
xchg
test
mov
mov
push
sub
movsl
cmp
js
cltd
or
push
pop
outsb
mov
jnp
pushf
outsb
add
data16
dec
xchg
jmp
mov
push
repz
hlt
pop
fdiv
icebp
pop
sbb
or
sahf
mov
mov
xor
jne
push
push
mov
outsb
mov
stos
dec
cmpsb
push
data16
or
fidivrs
jl
sbb
cmp
mov
fildll
incb
repz
cmp
push
pop
lea
jo
add
les
out
clc
in
push
shl
lahf
add
xchg
mov
lea
cmp
mov
cli
inc
int3
push
mov
in
pop
inc
push
push
lds
adc
mov
mov
or
push
aas
jg
mov
imulb
ret
cwtl
rcr
stos
adc
add
jnp
jp
mov
outsb
gs
and
mov
and
add
outsb
pusha
or
mov
std
jl
xor
clc
stc
push
lahf
lcall
and
push
call
mov
sub
mov
std
stos
lock
and
movsb
and
push
xchg
loopne
rclb
outsl
inc
mov
shlb
ds
into
inc
add
lods
xchg
mov
push
pop
scas
clc
repnz
add
ss
xchg
and
jo
ret
add
push
sub
insl
dec
and
xchg
add
setnp
add
in
test
xchg
sub
sbb
lock
jl
or
mov
pop
xchg
into
push
cmc
jl
push
lock
jle
add
push
cmp
insl
js
test
adc
repz
clc
add
sarb
je
addb
sbb
inc
sbbl
xor
pop
cmp
mov
test
or
or
or
push
or
jbe
in
lret
nop
cmp
dec
add
pop
or
dec
pop
mov
shr
mov
jp
pop
ljmp
adc
jne
sarl
aad
mov
shl
aam
xor
test
scas
push
jmp
sbbl
xor
or
lret
dec
aad
and
xlat
push
and
ret
ret
and
mov
je
push
sbb
mov
pop
and
mov
scas
or
les
ret
pop
inc
in
mov
and
jns
adc
adc
cs
lcall
xor
and
and
nop
pop
loopne
shr
insl
ret
subb
icebp
andl
push
fisubrl
pusha
repz
inc
adc
push
mov
inc
lret
mov
mov
mov
or
dec
or
cmp
adc
stc
adc
rorb
arpl
setns
mov
loop
mov
mov
adc
mov
fwait
int
pop
mov
xor
xchg
mov
shrd
icebp
mov
add
sbbl
lret
jg
inc
rcll
add
xchg
dec
notb
insl
fnstsw
stc
xor
mov
aam
repz
sti
adc
push
cmp
mov
inc
lahf
sti
or
insb
or
pop
mov
mov
sub
imul
or
imul
test
pop
jp
mov
mov
pop
cmp
faddp
cmpsb
int
aaa
dec
push
sahf
rcrb
adc
sub
lret
invd
cmp
push
mov
or
jmp
in
inc
out
dec
or
ret
adc
xchg
push
ds
cld
xchg
inc
mov
push
hlt
jp
pop
sub
adc
dec
jg
jmp
xlat
xlat
out
xchg
dec
mov
dec
test
outsl
std
xor
and
inc
jno
shll
pusha
sbb
lahf
in
imul
insb
adc
sqrtps
or
mov
ds
mov
jae
ret
cltd
clc
jp
test
push
inc
inc
jle
pusha
ss
mov
xchg
mov
push
mov
insb
or
js
movsl
loope
fwait
mov
call
or
mov
loope
push
mov
aas
fisubrl
mov
cld
rcrl
test
cmpsl
pop
xchg
lock
fs
adc
comiss
int
xor
jnp
sbb
jbe
mov
pop
sub
aaa
pop
add
js
adcl
scas
push
aam
ror
je
and
xchg
sbb
inc
cmp
aad
mov
xchg
out
mov
inc
in
ficomps
mov
pop
cld
sbbb
inc
mov
jmp
push
in
mov
push
testb
stc
rolb
arpl
xchg
mov
orb
fisttps
fstpt
lock
jle
cmp
pop
xlat
jmp
adc
mov
gs
xchg
rcl
adc
lea
or
fists
mov
pusha
andb
jl
lock
insb
imul
push
pop
dec
adc
roll
dec
pop
adc
push
cltd
xchg
cmp
shrl
mov
cmp
mov
jl
lods
scas
js
ret
inc
or
in
mov
cmpsl
mov
faddl
sbb
inc
dec
xlat
add
rclb
jge
sub
lahf
imul
imul
pusha
cli
xor
add
in
sbb
sbb
xor
mov
cmp
sbb
sbb
aad
jne
orb
lock
lcall
repnz
pusha
roll
aaa
out
mov
pop
sbb
mov
sbb
push
loope
mov
sbb
mov
das
leave
lahf
xor
pusha
adc
sti
mov
cmpsb
xchg
lods
hlt
inc
push
mov
cmp
outsb
push
jge
jle
ss
mov
or
or
sub
icebp
mov
dec
fst
imul
mov
out
adc
cs
in
xchg
xchg
pop
push
cltd
sub
ja
pop
cli
add
loope
enter
lods
adc
js
cmp
cmp
jge
sub
stc
lret
pusha
shlb
das
cmp
dec
push
push
movq
cmpsl
jl
sbb
xor
add
lret
out
push
dec
shlb
xor
mov
mov
add
or
pop
fst
ret
push
jp
dec
mov
push
jnp
dec
cmc
push
pop
sub
dec
cmc
cld
es
fcmovnbe
cmp
inc
pop
ljmp
dec
inc
insb
mov
clc
enter
lods
or
sahf
sub
out
cld
sub
fstps
push
xor
sbb
mov
mov
xchg
pop
jno
mov
sbb
or
cltd
insb
stos
sbb
aaa
aad
sbb
out
stos
mov
mov
idiv
incl
inc
sub
call
sub
mov
pusha
pushf
scas
pop
inc
mov
xlat
push
xchg
cmc
ret
push
pop
imul
jl
or
adcb
es
mov
std
sbb
lea
pop
pop
mov
movsl
mov
movsb
push
test
dec
pop
pusha
imul
roll
outsl
sbbb
sub
and
inc
mov
fildl
adc
jno
mov
wbinvd
push
push
jb
fdivrs
mov
or
push
cmpsl
pusha
cwtl
or
or
les
or
loop
sbb
clc
rcrb
aam
sub
mov
mov
jbe
pop
mov
mov
mov
cmc
bound
shll
push
adc
push
and
fildl
and
incl
stos
sbb
pop
jno
fwait
xor
sbb
push
mov
cmp
lea
test
push
mov
testl
gs
add
adc
dec
loope
shll
cmpsl
es
mov
test
mov
adc
ja
dec
pop
push
inc
sbb
outsl
cmp
xchg
sub
jns
invd
mov
call
push
repnz
std
inc
jno
mov
sbb
int3
aaa
scas
mov
dec
sbb
or
mov
popl
orl
shll
pop
pop
mov
inc
jmp
arpl
cltd
addr16
inc
fsubrl
arpl
or
mov
jb
aas
cmp
icebp
pop
pop
fadds
and
pop
mov
jle
or
mov
jbe
leave
xor
mov
or
fistps
xchg
les
fists
mov
xchg
mov
inc
jno
aaa
faddl
icebp
call
mov
inc
cmp
dec
add
mov
push
lcall
cmp
cmp
ss
mov
aam
jno
mov
pop
push
pop
and
xchg
xchg
xchg
mov
aaa
fcompl
hlt
movsl
push
mov
andl
mov
inc
aam
pop
jne
push
adc
cs
aam
lret
xchg
cmp
pop
inc
jg
loopne
jmp
pop
js
hlt
fldcw
ljmp
mov
fisttpll
aam
xor
outsl
rolb
fldcw
call
movsl
pop
pusha
aad
rcll
cwtl
int
sub
sub
out
test
xchg
inc
imul
cmp
cmp
scas
or
cmp
mov
sbb
cmp
cmpsl
icebp
pop
mov
adc
aam
fnstsw
mov
mov
jle
mov
mov
nop
jp
jnp
dec
or
fwait
sub
ljmp
mov
mov
mov
adc
cli
and
ret
xchg
dec
mov
mov
std
fiaddl
mov
addl
sub
mov
testb
call
jmp
sub
out
push
lds
cwtl
test
icebp
sbb
loop
sub
cs
neg
or
jne,pn
dec
sbb
enter
add
shlb
nopl
mov
addl
xchg
in
in
jne
mov
adc
icebp
dec
incb
das
outsl
pop
sub
fisubl
cmc
push
dec
sarb
imul
and
cltd
loopne
es
loop
sbb
mov
vpshuflw
push
out
xchg
adc
mov
sub
je
xchg
aad
rcll
push
cmp
mov
mov
or
not
ljmp
and
in
ret
sbb
je
cli
lods
xor
jp
outsl
inc
adcl
cmpb
icebp
adcl
mov
out
sub
pop
pusha
out
adc
enter
add
jbe
mov
sti
cld
scas
inc
fistpl
and
test
cmc
test
das
loop
outsb
cltd
xlat
or
aaa
jmp
or
lret
test
mov
mov
test
pop
xchg
shll
xor
or
imul
imul
ljmp
pop
inc
clc
addr16
push
jno
pop
fcmovu
adcb
adc
inc
xlat
mov
mov
pop
insl
sub
mov
lret
push
std
aaa
push
in
das
call
daa
xor
mov
int3
sbb
sub
pushf
mov
push
add
ss
adc
cmpsl
jle
sbb
push
mov
arpl
push
lods
ss
xchg
push
adc
setns
adc
mov
cmc
adc
sub
dec
push
push
inc
pop
aaa
pop
cs
dec
push
fnsetpm(287
pop
fmuls
into
jns
call
inc
sbb
dec
inc
sub
sbb
test
clc
inc
add
sbb
or
call
sar
movsl
and
and
ret
ret
insl
adc
popa
xor
or
call
lahf
xor
lods
cmpsb
inc
enter
cmp
add
mov
adc
iret
mov
sbbl
sub
adc
fcoms
rcrl
fsubs
cmp
inc
cmp
sbb
xchg
xor
bound
push
iret
aaa
inc
fisttpl
push
xchg
sbb
out
mov
inc
push
ds
int3
inc
or
jne
inc
mov
fiaddl
adc
adc
test
xchg
pop
add
fstl
sahf
xchg
insb
pop
aam
jno
cmp
jae
mov
notb
and
push
outsl
testl
cmc
inc
and
arpl
call
inc
arpl
xor
mov
inc
fsubl
push
fsubrl
rcrb
les
mov
inc
movsl
mov
fldenv
cmp
inc
pop
sbb
mov
cwtl
leave
stc
push
test
call
pop
js
outsl
and
push
rcrl
pop
jnp
lret
cltd
sub
sbb
mov
xlat
inc
xchg
lret
outsl
mov
std
out
jnp
push
fldt
adc
inc
jno
jmp
into
jg
andl
mov
fucomp
push
and
xchg
sbb
fsubrl
rol
add
cli
ss
or
pusha
das
sub
cmp
repnz
pop
pop
inc
jl
pop
mov
pushf
pop
ffreep
inc
add
pop
fstl
and
pop
mov
out
xchg
outsb
fldt
push
pop
daa
fisubrl
cmp
push
dec
pop
gs
rcll
sbb
mov
stos
stos
fcomi
sbb
mov
notb
dec
sub
inc
js
add
lds
fwait
sti
jmp
ret
mov
insb
cld
push
gs
enter
cmp
add
pop
push
sbb
or
mov
pusha
sbb
push
mov
int3
or
sbb
push
lea
mov
pop
mov
jb
rcrl
xchg
fdivrl
inc
leave
xlat
jno
dec
sbb
mov
xor
jo,pt
mov
pop
mov
cltd
mov
or
dec
sbb
and
imul
loope
out
test
mov
in
out
imul
fadds
sub
repz
xchg
sbb
jo
loope
add
icebp
out
pop
cli
lea
insl
sbb
sbb
hlt
push
pop
cmp
xor
test
pop
std
out
fbstp
scas
push
push
push
adc
mov
sub
pop
std
insl
mov
pop
lock
xchg
adc
mov
push
mov
mov
inc
xchg
icebp
out
mov
push
pop
jp
roll
sub
jnp
in
sub
scas
and
and
insl
mov
nop
jg
cmpsl
in
out
sbb
fimuls
lcall
fs
ret
stos
addr16
repnz
sub
insl
mov
cmpsb
in
lea
call
fidivl
imull
inc
pop
jp
dec
pop
xor
cld
add
or
jecxz
fstpl
xchg
and
sbb
aaa
std
sub
mov
leave
lahf
in
shlb
mov
insl
incl
adc
cmp
lahf
movsb
je
les
sbb
mov
jle
sbb
or
rolb
mov
mov
fbstp
jne
jg
mov
push
insb
faddl
pop
and
jno
or
pop
xor
and
or
je
outsl
pop
cmp
hlt
popa
shl
aam
cltd
mov
push
je
js
add
mov
loopne
cmp
ss
shr
or
pop
fwait
mov
and
push
in
mov
push
xchg
jmp
xor
mov
and
test
cmp
mov
test
mov
arpl
dec
lret
sbbb
fistpl
adc
les
mov
or
mov
insb
xor
sbb
push
hlt
mov
fnsetpm(287
ret
sbb
mov
ss
aaa
xor
and
push
pop
sbb
jl
push
xchg
cmp
cmp
in
dec
insb
cli
sub
add
mov
jbe
mov
clc
mov
jb
sti
test
add
fiadds
jns
icebp
cltd
clc
mov
daa
fidivs
mov
adc
rorb
pop
jno
mov
xchg
mov
gs
std
or
mov
fimuls
sub
cmpsl
mov
xchg
dec
inc
jae
mov
or
xor
imul
ljmp
insl
jae
aad
mov
cli
jle
mov
je
xlat
pushf
into
or
push
jmp
mull
xchg
add
sub
dec
dec
push
mov
sub
cli
cs
mov
idivl
xor
xor
sbb
mov
sti
fcomip
and
loopne
adc
xchg
mov
push
ror
inc
daa
sbb
mov
out
cmpsb
adc
or
rcrb
imul
gs
sti
lea
ja
sahf
cmc
outsl
cld
push
ficomps
repnz
add
stos
or
scas
xchg
pop
andl
push
mov
push
icebp
pushf
dec
daa
push
inc
in
loop
and
jg
push
cwtl
mov
jl
sar
jns
bound
idiv
scas
mov
push
jns
in
lock
add
jg
cmp
shll
pop
mov
aaa
adc
and
mov
push
ret
loope
add
xor
inc
sbb
cltd
in
sti
mov
lret
dec
and
add
push
fdivl
push
lret
sub
sarb
js
and
mov
xlat
aas
adc
sbb
out
rorb
mov
jb
out
mov
lret
inc
pop
pop
inc
sarl
test
loop
or
jb
sbb
std
mov
push
mov
jl
in
jbe
fsub
loopne
adc
sahf
aaa
mov
mov
movsl
mov
aad
mov
cmpsb
dec
cld
mov
mov
sub
fidivrl
or
fistpl
ss
xor
or
adc
push
mov
or
xchg
inc
bound
inc
aam
jmp
roll
xchg
sub
idiv
int
jl
mov
or
mov
push
stc
jmp
and
mov
shrl
mov
add
mov
lods
jg
int
jns
pop
sahf
and
lret
cli
shlb
xchg
inc
xchg
pop
leave
ficompl
lods
mov
jbe
adc
or
ss
adc
cmpsb
fwait
repnz
addr16
dec
push
mov
in
inc
jl
cltd
sbb
rorl
loop
mov
jnp
adc
xchg
test
adc
btc
aaa
pusha
notl
inc
mov
dec
push
cmovl
imull
je
lock
adc
xor
xchg
mov
push
fucomi
mov
dec
adc
push
cwtl
xlat
and
lea
adc
fistpll
mov
pop
mov
and
push
xchg
or
fbstp
pop
mov
bound
pop
in
push
push
in
sbb
sub
mov
fnstenv
cmpb
sti
mov
inc
xlat
xor
mov
push
pop
orl
mov
push
sub
inc
subl
push
jo
int3
fidivs
xchg
and
cld
mov
adc
jnp
iret
mov
mov
mov
ljmp
add
jb
xchg
adc
cmc
pop
dec
cmp
cmc
aaa
sahf
xchg
nop
mov
mov
jae
sti
mov
lds
push
insl
fidivl
inc
push
dec
add
insl
add
mov
daa
sub
mov
out
incl
mov
push
dec
nop
cmp
aad
imul
mov
push
stc
dec
sub
fwait
xchg
fimull
sbb
xor
or
mov
sbb
cmp
shr
mov
icebp
pop
xor
es
mov
jg
dec
fdivrs
outsb
aam
cmp
xor
nop
es
dec
mov
xor
jg
into
xor
sub
sub
push
es
outsl
mov
jge
in
jmp
into
xchg
out
mov
jp
int
sub
ss
push
sbb
xorb
add
add
enter
xor
pop
xchg
or
mov
outsl
push
hlt
clc
daa
leave
sbb
ss
mov
or
call
mov
aaa
rclb
loopne
dec
add
mov
adc
pushl
push
scas
xor
add
dec
mov
test
pop
pop
mov
std
jbe
cmp
xchg
clc
pop
push
jge
mov
ljmp
add
sub
sub
and
outsb
inc
leave
jle
loop
enter
adc
dec
fistps
pop
outsl
das
mov
jle
push
push
pop
adc
mov
icebp
jl
jns
push
xchg
adc
lock
push
std
not
lea
sbb
aas
xorl
loopne
mov
insb
sub
popf
jae
aad
sbb
push
mov
mov
sbb
adc
std
or
stos
rcll
push
shlb
ljmp
and
push
add
inc
or
stos
xchg
pop
xchg
cli
dec
adc
stos
or
sbb
push
xor
inc
pop
cld
fwait
lds
jno
pop
ficomps
ljmp
ret
and
cmp
mov
add
dec
and
call
or
out
jo
in
mov
outsl
cmpsl
xor
mull
or
xor
icebp
pop
cmpsb
add
fildl
test
adc
or
pop
mov
jle
adc
dec
pop
in
insl
enter
outsl
or
rorb
test
jecxz
outsb
adc
sarl
lcall
aaa
sbb
mov
jecxz
cmp
pushf
mov
mov
or
sub
lods
fidivrl
inc
sub
inc
xor
fisttpll
add
mov
xchg
loope
xor
push
mov
cmpsl
insb
js
rorl
sub
je
shl
jl
inc
out
movb
jo
inc
hlt
jg
pop
xchg
xchg
mov
sbb
mov
mov
inc
xchg
sbbl
leave
mov
out
pop
jp
lods
sub
repnz
xchg
out
js
sbb
dec
adc
or
sbb
push
loope
pusha
cwtl
mov
rcrb
test
js
mov
aaa
jge
popa
dec
push
jp
dec
rclb
mov
add
scas
or
mov
add
mov
fcomps
mov
xlat
sbb
or
xchg
ror
aaa
out
cs
pop
sahf
sbb
popa
adc
and
fisttpl
sbb
add
xor
addr16
lahf
iret
mov
push
adc
pshufw
jne
aam
pop
popf
pop
and
movl
add
test
lret
roll
dec
data16
sbb
pushf
add
jg
cld
out
ret
mov
pusha
rol
test
cmp
xchg
push
mov
jmp
xchg
add
mov
xorl
out
sub
push
xor
pushf
adc
fcompl
jns
mov
and
in
jge
mov
push
stos
fidivs
push
ja
cs
cs
push
fsubrl
add
sahf
nop
mov
outsl
repz
insb
mov
xchg
shll
xchg
lods
repz
fidivrl
mov
gs
pop
and
add
ret
ja
test
cmp
sub
sbb
jecxz
inc
lahf
dec
sbb
js
call
cmp
jno
mov
add
outsb
roll
ret
testl
loopne
pop
cmp
adc
repz
shll
lcall
cmp
mov
or
ja
adc
mov
shl
jmp
sbb
mov
mov
ljmp
push
jne
or
jnp
cli
fbstp
scas
or
xorl
call
insl
das
call
stc
jbe
pop
lahf
in
mov
lds
xchg
ds
or
push
and
or
std
mov
ret
movsl
in
or
adc
ret
dec
mov
ds
ja
dec
mulb
dec
add
ret
mov
in
xor
mov
push
cmp
pop
adcl
pop
fistpl
push
in
out
aam
push
adc
or
or
sbb
outsb
fistl
mov
out
mov
imul
push
out
or
pusha
mov
dec
and
cwtl
or
pop
pop
test
inc
pop
mov
push
lds
jmp
mov
add
dec
scas
cmp
xor
jle
mov
pop
sub
int3
cli
sbb
mov
sub
fnstenv
or
mov
sbb
jne
fs
add
xor
mov
sub
dec
jne
scas
movaps
jecxz
add
inc
lods
sub
in
cmp
xchg
addr16
or
ret
insl
add
mov
inc
pop
inc
jecxz
or
jmp
aad
dec
ss
sbb
dec
das
mov
xor
mov
mov
das
icebp
sub
cmpb
and
fs
pop
mov
lock
inc
rclb
inc
cld
lods
or
xor
jns
mov
out
and
push
jmp
sbb
pushf
test
repz
mov
mov
arpl
aam
xor
sahf
repz
lock
mov
xchg
pushf
adc
iret
ja
lret
mov
test
push
jo
xlat
cld
mov
add
rorl
adc
mov
jns
dec
dec
lds
cwtl
loopne
pop
inc
or
rcl
xchg
add
bound
cmp
scas
xor
lret
add
popf
mov
adc
divb
arpl
mov
jmp
std
in
pop
cmc
and
sub
scas
xchg
mov
xchg
cmp
pop
outsl
insl
push
lods
and
pushf
dec
or
in
xor
sarl
xchg
pop
xchg
imul
push
mov
sub
iret
sti
cwtl
cmp
outsb
lcall
push
jle
sub
xchg
push
les
mov
and
ss
arpl
ds
lret
dec
shlb
repz
lods
out
hlt
lods
xor
stos
xchg
cmp
mov
pusha
and
cmpsl
movzbl
dec
out
cmp
mov
pusha
imul
test
in
stos
xchg
sbb
xor
test
movsb
pop
mov
mov
pop
mov
arpl
sub
push
aam
jo
mov
sbb
pop
gs
and
cld
jecxz
pushl
xchg
adc
pop
jle
pop
mov
mov
fnstcw
sbb
call
push
js
jecxz
mov
icebp
das
pusha
pop
mov
outsl
lock
push
sbb
aam
fdivl
mov
sub
stos
push
nop
xchg
fwait
mov
sbb
jmp
mov
aaa
jecxz
mov
int
or
dec
pop
clc
mov
shll
sub
mov
sbb
xor
in
xchg
cmc
push
loop
pop
mov
sub
sbb
je,pt
mov
mov
pop
adc
mov
add
notb
das
add
shr
mov
xchg
add
jg
popa
fbstp
jne
aaa
sbb
jl
xchg
jl
popa
enter
outsl
lahf
daa
mov
or
jno
mov
hlt
in
adc
jl
push
int3
inc
sub
mov
leave
data16
movsb
lahf
dec
mov
fcom
in
cmp
mov
or
push
shlb
dec
cmp
sbb
jmp
pslld
lahf
cs
push
xor
inc
pop
in
ret
and
xchg
test
or
mov
movsb
push
jb
mov
push
mov
dec
aad
mov
add
loopne
sub
popa
imul
fldt
andb
hlt
sub
mov
aam
in
cmc
jnp
enter
push
mov
clc
cmp
testl
or
je
incb
mov
adc
fs
adc
sbb
cli
out
sbb
push
xchg
cwtl
mov
fdivr
sbb
sbb
in
xchg
mulb
mov
btsl
mov
sbb
test
fistl
es
insb
mov
jb
cmp
outsl
insb
adc
nop
nop
test
lret
mov
sbb
adc
lahf
xchg
in
inc
pusha
and
adc
inc
loopne
pushf
cld
xchg
lret
pop
xor
test
das
nop
or
call
jno
je
rolb
cwtl
lds
mov
and
xchg
xor
and
mov
mov
cli
sbb
pop
das
sub
ret
adc
add
lcall
jmp
rclb
jb
push
mov
pop
mov
mov
ret
jg
xor
bswap
fcoms
add
pop
add
gs
imul
mov
mov
divl
js
mov
adc
fsts
mov
push
jle
mov
loope
icebp
insb
push
jbe
lret
aad
leave
rol
add
mov
xchg
push
push
adc
pop
fwait
les
stc
and
gs
mov
arpl
xchg
lods
adc
inc
inc
scas
call
mov
sbb
arpl
pop
in
sbbb
dec
add
push
lahf
mov
pusha
add
std
push
test
fdivrs
and
sbb
popa
pop
mov
sbb
inc
addl
sub
ret
dec
mov
data16
or
out
aaa
pushf
jg
mov
jb
sub
icebp
mov
mov
in
faddl
push
add
clc
dec
xor
and
sbb
test
pop
jge
je,pn
fisubl
push
cmp
lods
inc
push
xor
mov
or
add
pop
push
insl
mov
stos
rorl
mov
push
outsb
push
ss
test
aas
dec
outsb
push
and
xchg
xor
movsl
dec
push
inc
add
sbb
daa
fdivs
out
xchg
or
fdivs
jmp
and
push
sbb
call
inc
dec
fnstenv
fnsave
pusha
dec
or
sbb
loopne
xchg
pop
data16
das
mov
add
into
dec
xchg
add
or
in
mov
jne
sbb
aam
push
imul
stos
test
mov
aaa
lock
push
xlat
add
pshufw
xchg
or
outsb
inc
and
cli
fildl
xchg
stc
divb
and
out
adc
xor
inc
push
inc
mov
cmp
inc
ret
not
data16
rolb
js
ljmp
insb
and
cs
fistps
stos
subl
mov
sbb
adc
adc
cli
js
mov
enter
xlat
mov
cmp
das
mov
shlb
fnstcw
lea
jecxz
cmp
sarb
push
xor
shlb
insl
int3
mov
jae
cwtl
and
shr
movsl
add
das
outsb
mov
xchg
js
cmc
mov
mov
push
hlt
mov
das
cmc
add
test
push
push
loope
fistpll
rclb
stos
mov
inc
push
test
jg
mov
push
or
add
fwait
iret
stos
nop
xchg
lds
shl
inc
lods
cmc
push
jp
test
mov
xchg
sub
push
push
sub
in
and
les
push
insb
sub
add
mov
insl
popf
movsb
cmc
pop
ljmp
ret
and
out
loope
sub
in
push
push
loope
jmp
push
fwait
cs
es
scas
lcall
ss
dec
pop
mov
ss
sbb
ja
cmc
call
loope
int3
mov
xor
jg
mov
inc
bound
bound
adc
pop
shrb
out
loop
lret
or
add
aam
mov
xchg
and
dec
dec
outsl
jne
push
fistpll
mov
or
dec
pop
and
loope
mov
mov
stos
dec
sub
test
lea
mov
sub
xchg
das
shl
popf
pop
and
lea
call
mov
mov
or
xor
outsb
negl
pop
scas
mov
or
addb
jecxz
je
mov
and
push
js
mov
xor
adc
jmp
ret
dec
shrb
add
add
outsb
insb
jne
imul
subl
sbb
inc
sbb
push
hlt
mov
jmp
or
les
pop
call
mov
dec
in
inc
adc
ret
jns
mov
rol
pop
loope
int
scas
rolb
xlat
adc
push
mov
mov
out
jbe
jo
pop
push
adc
ret
sbb
test
mov
sbbb
insl
imul
lahf
idiv
mov
std
hlt
lea
jp
inc
add
cmpsl
ja
cmpl
xor
sbb
hlt
lahf
jae
jp
dec
test
add
dec
sub
push
push
and
outsb
aad
xchg
icebp
ljmp
sbb
push
cmpsb
addb
jmp
rclb
bound
mov
mov
jno
jne
imul
faddp
pop
dec
int
push
mov
push
cmp
lcall
fnsave
shlb
push
clc
es
or
movsb
or
ffreep
pop
jle
adc
or
mov
aaa
jbe
outsl
cli
pop
aam
scas
or
mov
push
mov
xchg
arpl
lods
sub
rcrl
negb
leave
data16
xchg
add
outsb
or
inc
jns
repnz
and
in
mov
push
inc
sbb
xlat
push
jae
fisubs
dec
sbb
ja
mov
je
pushw
add
adc
xor
pop
jecxz
test
out
shll
arpl
inc
arpl
lds
jbe
loopne
sub
add
xor
lock
xchg
xchg
push
mov
xorl
fsts
push
xor
jnp
lock
jo
js
ja
dec
int3
mov
jge
mov
sub
jmp
xchg
call
adc
ret
outsl
rclb
sub
lahf
mov
push
lods
mov
inc
mov
or
cmpsl
testb
testb
mov
iret
pop
mov
insb
ret
pop
mov
push
mov
push
jne
inc
mov
sub
sub
rep
cs
mov
test
adc
cmp
sbb
add
fucomi
sbb
mov
decl
sbb
dec
bound
test
jns
xchg
scas
or
imull
test
pushf
pusha
dec
stos
nop
mov
mov
popa
pop
add
imul
jp
jmp
and
outsl
mov
xor
add
jbe
ds
int3
jbe
sbb
xchg
fwait
sub
fdivrl
lock
cmp
jle,pn
or
adc
or
sahf
jne
das
insl
insb
inc
ret
mov
mov
outsl
adcl
mov
push
push
fs
jle
mov
inc
shl
sub
stos
or
fwait
call
mov
pushf
mov
mov
jmp
call
or
shlb
loope
loope
push
push
loopne
or
and
and
fildl
jb
mov
sub
xchg
push
test
or
mov
mov
pop
dec
push
xchg
xchg
mov
lret
lds
lret
pop
and
jb
test
jg
clc
add
xlat
push
test
sbb
xor
mov
ret
and
loope
or
jne
jne
inc
adc
sub
sub
sbb
inc
dec
mov
push
push
pop
ficompl
push
cmp
mov
cwtl
inc
cmp
fst
idiv
ja
jo
fiaddl
xor
pop
or
fldt
data16
cld
add
mov
dec
fistpl
add
jl
push
das
fidivs
xchg
lea
insb
dec
bound
push
or
mov
xor
jl
stos
mov
fisttps
and
dec
cmp
ficoms
mov
outsb
jns
push
icebp
addb
sti
rorb
call
jns
fstl
pop
int3
fdiv
xchg
xor
push
push
jno
aad
pop
and
xor
enter
add
push
mov
or
das
pop
fiaddl
imul
lea
jecxz
negb
push
inc
fildll
stos
adcl
sub
sbbb
fisubs
rclb
insl
mov
jge
popa
sbb
sti
jns
inc
push
cwtl
loopne
in
je
sbb
inc
outsl
add
mov
xchg
popa
into
jg
das
jl
cld
test
stos
arpl
and
jb
sbb
mov
xor
mov
mov
fdivrp
add
mov
sbb
lahf
js
sub
aas
sbb
push
pop
aaa
mov
int3
adc
cwtl
loopne
push
addl
imul
mov
loop
shl
mov
addr16
or
imul
mov
jecxz
xor
push
notb
dec
aam
mov
and
fldl
iret
lock
pop
in
scas
clc
push
jl
cld
push
mov
xchg
popf
imul
cmp
xchg
push
bound
or
dec
sub
rorb
rolb
cli
sub
jge
cmpsb
enter
adc
movsb
loope
push
sbb
mov
adc
mov
jmp
bound
dec
or
jecxz
push
add
mov
xorb
pushf
aam
push
and
test
jp
clc
push
cld
jno
and
or
jp
popf
dec
mov
mov
mov
outsl
sbb
adc
mov
cltd
in
xorb
mov
dec
pop
mov
bound
inc
inc
gs
rol
xor
in
lahf
int3
outsl
jecxz
out
ss
rcrl
aam
adc
testb
inc
cmpsb
sub
pop
icebp
push
pushf
aas
sbb
cmpsb
adc
bound
inc
sub
mov
or
call
mov
xchg
out
jae
insl
push
hlt
sbb
lahf
mov
push
mov
mov
pop
jp
rcl
jp
xor
test
scas
fldcw
outsl
loopne
mov
cmpsb
xchg
mov
ret
and
push
pop
test
jne
stos
lret
icebp
aaa
push
cmpsl
outsb
mov
mov
repnz
pop
dec
inc
inc
aaa
xchg
pmaxsw
adc
jo
insl
fs
pop
test
ret
mov
fldt
cltd
addb
pusha
xchg
mov
push
ja
cmp
es
jmp
insl
fdivr
mov
gs
fcoms
mov
insl
imul
inc
fistl
jne
xchg
xlat
xchg
pop
flds
push
aam
xlat
xchg
dec
push
add
fs
push
pop
js
mull
jnp
add
cmp
inc
popa
leave
push
push
push
adc
and
jmp
push
jns
push
pop
add
js
cmpb
decl
mov
push
jge
pop
mov
shrb
inc
aam
popa
adcl
mov
push
mov
mov
ret
push
or
cmpsb
and
jne
fstpl
push
xor
xor
mov
mov
hlt
jmp
mov
mov
sbb
movsl
leave
push
testb
cmp
pop
into
stc
fcoms
inc
loope
fwait
sbbl
push
cmp
das
sarb
std
and
xchg
stos
dec
or
std
sarl
and
inc
test
inc
xlat
fldt
and
ja
or
cmp
test
sti
leave
fcmovnbe
and
mov
jecxz
in
ret
js
mov
inc
mov
sbb
sbb
adc
cmpsb
add
leave
xchg
push
adc
stos
mov
add
cli
test
icebp
lods
int
stos
sbb
leave
dec
xor
ja
fisttpl
movb
movsl
fs
adc
xchg
test
test
add
dec
lea
mov
scas
lea
lods
adc
pop
stos
mov
mov
sub
aaa
pop
inc
add
xor
je
frstor
sub
mov
mov
fnsave
xor
in
in
and
lock
mov
push
shl
mov
int3
fs
sub
jbe
push
sbb
cld
fdivr
jecxz
ret
pop
daa
leave
lock
imul
test
add
xchg
loop
xchg
inc
sub
nop
test
mov
cmpsb
loopne
pop
jns
sahf
pushf
decl
fisubs
data16
and
push
sbb
xor
cmp
and
or
call
pop
or
mov
stos
scas
out
push
cltd
mov
loope
stos
insl
loope
addr16
popa
push
rorl
push
inc
and
inc
fildl
jo
loope
xchg
adc
add
xchg
rclb
inc
mov
aas
and
popa
test
lods
dec
mov
ret
lahf
mov
adc
mov
insl
pop
push
jle
cli
aad
loope
repz
push
or
orl
mov
inc
jge
push
pop
ret
push
cmp
es
lret
rcll
pop
icebp
sbb
cmp
jno
xchg
xor
je
inc
bound
arpl
lock
or
insl
dec
xchg
sub
loopne
mov
outsl
push
jo
insb
test
mov
jp
inc
js
push
int
cwtl
in
in
jae
mov
out
lahf
dec
into
roll
push
xor
in
mov
into
addr16
sar
lods
cmp
jle
das
rorl
cltd
sbb
sbb
or
cltd
cltd
mov
outsl
mov
inc
rcrl
mov
call
inc
add
outsl
xor
sub
sub
pop
aad
lock
mov
mov
pop
fidivs
sub
test
arpl
test
sbb
lds
or
jl
lods
cld
cmpsb
scas
incb
pop
rorl
push
icebp
pop
xor
out
sub
and
clc
mov
sbbb
mov
adc
push
ret
fildll
xorl
pop
cli
lea
adc
cmp
lret
mov
sbb
jle
roll
mov
mov
mov
pop
sbb
inc
sbb
and
fisubs
pop
jp
fists
jo
or
mov
xlat
test
sub
into
shl
mov
cli
out
push
adc
pop
adc
outsb
fs
loopne
mov
xor
inc
mov
sar
mov
rcl
imul
std
adc
sbb
push
pop
jo
or
pop
mov
pop
cld
mov
add
lahf
and
or
ret
ljmp
rcrb
pop
fistpl
pusha
rcll
clc
jecxz
fidivl
pushf
adc
js
mov
outsl
add
add
inc
and
pop
mov
xor
pop
icebp
stos
js
outsb
jns
xchg
int3
test
insb
shr
inc
loopne
jl
cmp
sbb
or
rclb
pop
pop
jecxz
std
aaa
xlat
fldl
leave
mov
sarb
clc
or
mov
dec
jae
push
mov
sti
fists
xlat
xchg
lret
lea
or
xlat
push
adc
pop
push
cli
cs
data16
enter
push
mov
icebp
dec
sub
call
mov
adc
test
push
mov
pop
pop
hlt
push
inc
or
ficompl
test
test
cs
dec
shlb
nop
std
insb
imul
xor
inc
mov
add
mov
sbb
mov
or
mov
sbb
pop
adc
push
call
mov
sbb
aam
mov
testl
mov
rclb
adc
or
repz
cld
pop
add
aaa
pop
pop
jb
lods
outsl
pop
addl
aam
push
addb
sbb
push
arpl
fisttps
adc
mov
xchg
ficoml
loop
push
sti
add
enter
add
ret
mov
in
mov
mov
jmp
shrb
sbb
lcall
dec
test
or
ljmp
lcall
outsb
jge
push
subl
xlat
js
test
add
fxch
orl
dec
jbe
push
add
lahf
mov
out
pop
mov
lret
cmp
xchg
lods
mov
fnstsw
inc
mov
dec
movsl
fistpl
inc
in
loopne
adc
lcall
mov
fbld
mov
pop
in
in
xor
inc
divl
lock
mov
iret
and
inc
mov
adc
std
ja
imul
push
and
flds
adc
ja
and
arpl
icebp
in
aad
or
ret
jl
das
lock
rclb
les
and
loope
ss
and
mov
mov
je
jg
fstp
xor
jns
fiaddl
pop
hlt
shlb
pop
pushf
add
call
addb
outsb
aaa
rcrb
sbbb
mov
in
stos
jg
fdivrs
je
add
lret
pop
test
or
int
sbb
dec
fdivl
add
mov
lret
or
outsl
imul
cmp
and
adc
push
movsl
insl
xorl
push
dec
mov
xchg
pusha
pop
pusha
push
dec
daa
movsl
xchg
or
pop
jno
jbe
shlb
add
imul
pushf
jne
jp
xchg
mov
lcall
das
std
jg
ror
pushf
iret
xor
bound
cmp
test
push
jge
test
es
fimuls
test
mov
stos
sbb
add
aaa
push
pop
xchg
js
pop
inc
mov
repz
test
xchg
xor
jecxz
push
fs
sbb
mov
sbb
daa
pop
bound
mov
aad
lcall
jl
pop
push
hlt
inc
jecxz
push
bound
fwait
orb
and
xchg
loope
jmp
cmp
push
add
jge
mov
sbb
mov
hlt
inc
jge
call
outsl
cmp
adc
dec
mov
mov
lds
jmp
lods
adc
subb
inc
inc
and
cld
fcomip
cmpsl
out
cmp
ss
inc
jmp
mov
adc
add
cmp
loope
pop
dec
hlt
mov
pop
loopne
mov
lods
movsl
lock
aas
mov
in
movsb
cmp
push
outsl
mov
aam
dec
cld
js
add
mov
loopne
fildl
out
dec
jne
loopne
test
stos
push
movsl
sub
rcrl
inc
adc
push
sub
push
xchg
call
sbb
fdivrs
mov
jbe
xor
daa
ds
pushf
and
es
mov
jns
aam
shl
fidivrl
xor
rcrl
jp
jo
sub
loope
xchg
fiaddl
sub
sub
mov
addb
add
pop
fcomi
out
and
and
dec
and
pop
insl
push
addb
pop
jnp
push
sub
inc
add
cwtl
std
ffreep
out
push
mov
xchg
mov
in
cmp
push
call
les
loopne
aaa
inc
fstpl
cmp
enter
sbbb
and
cmp
pop
clc
dec
inc
ret
mov
cld
test
cmpsb
ja
ds
lds
push
or
in
das
cmp
into
sub
jo
sbb
aam
mov
cmpb
push
sarb
mov
mov
shll
pop
mov
fwait
fiadds
loope
add
mov
and
rcrb
inc
mov
and
jle
shlb
xor
cld
dec
cmp
push
shr
popf
ret
int3
mov
test
notb
inc
hlt
repz
mov
jbe
mov
lods
int
out
sbb
jne
jg
dec
std
jbe
stos
jno
xchg
cmp
dec
mov
lods
in
jno
jmp
xor
shlb
xchg
lds
cmp
pop
icebp
repnz
xor
or
mov
xchg
jbe
rorl
std
out
addb
jnp
add
lods
inc
arpl
out
mov
add
test
add
arpl
pusha
mov
pop
mov
fldt
push
mull
movsl
lahf
int
fwait
inc
or
pop
or
cld
das
add
mov
sarl
inc
push
fistl
xchg
add
outsb
clc
adc
fldt
lret
ret
push
add
mov
mov
inc
rcl
dec
pop
frstor
or
in
out
and
cmp
push
lods
outsl
adc
loopne
cmp
les
insl
mov
sbb
xchg
jns
pop
lock
aaa
mov
pop
stos
decb
daa
cmp
jmp
fsubs
addr16
xor
inc
test
sbb
mov
pop
sub
push
push
sub
push
inc
es
and
std
addr16
push
or
imul
in
pop
inc
aad
std
pop
shl
mov
aad
sbb
jle
jg
mov
fdivs
add
popf
ja
cmpsb
lret
imul
aaa
push
fidivs
fistpl
mov
fs
pusha
sbb
rol
cmp
jo
sar
mov
lods
addl
pop
add
test
push
lods
in
outsl
jmp
testb
shlb
jmp
dec
cmc
adc
jmp
pop
outsl
fistl
sahf
imul
das
adc
clc
mov
xchg
mov
movsl
pop
mov
push
pop
fwait
cmpsl
cmp
aam
dec
cld
mov
push
in
lea
and
push
roll
js
inc
or
lds
rclb
xchg
push
lret
inc
sahf
pop
sub
sbb
inc
jno
mov
inc
daa
add
add
adc
sbb
sub
pop
ja
jp
pop
nop
test
pop
adc
in
jmp
add
pop
xchg
xor
call
jp
xor
data16
cmpsb
jae
cmp
bound
roll
add
push
push
mov
adc
jg
xchg
push
call
and
adc
loopne
rorl
adc
shll
mov
sarl
adc
add
daa
dec
and
jo
fsubp
cmc
lret
inc
pop
fcomp
insl
test
addr16
inc
dec
arpl
add
movsl
in
ljmp
sbb
sbb
sbb
out
mov
test
cli
or
outsb
sbb
pop
mov
stos
bound
jge
add
xchg
and
sub
mov
or
mov
inc
cmp
and
dec
call
add
pushl
outsl
inc
inc
ljmp
or
xchg
ret
mov
or
adc
cs
cmpsl
scas
cmp
loop
mov
nop
pop
xchg
sub
cmp
aam
les
sbb
sbb
pop
es
aaa
jnp
sbb
insl
xchg
mov
mov
idiv
in
lahf
popf
pushf
xor
cmp
push
call
sub
sbbb
mov
sub
mov
neg
and
pop
xor
shl
xor
sub
outsl
arpl
push
ret
lock
leave
outsl
jb
fnstcw
mov
cmp
add
ret
rolb
stos
mov
cmp
and
outsl
loopne
repnz
dec
out
add
inc
add
mov
dec
push
sub
add
mov
test
xchg
lock
std
rclb
mov
add
pop
mov
mov
outsb
mov
ds
jae
outsl
lods
dec
pop
dec
add
add
or
mov
outsl
mov
rcll
add
mov
leave
clc
mov
jo
sub
mov
pop
or
push
inc
sbb
mov
add
inc
lock
sbb
inc
xor
test
adc
jmp
pop
movsb
jns
fdivs
lods
dec
in
in
sti
outsl
jecxz
shlb
push
or
aaa
test
mov
or
xchg
pop
mov
fisubrs
mov
bound
mov
mov
xlat
bound
out
stos
add
lahf
or
mov
or
adc
inc
mov
dec
push
data16
fstpl
jno
jmp
call
sbb
xor
lods
mov
dec
sub
aad
sub
sub
ret
xchg
push
add
sub
je
ror
inc
xlat
pop
pop
pop
add
sub
sub
test
imul
jge
lock
daa
mov
rclb
or
sbb
std
jl
mov
pop
decb
xchg
inc
inc
into
jge
pop
out
or
sub
call
aaa
xchg
and
cmp
neg
clc
push
sub
xchg
sbb
inc
dec
fistpl
jns
jl
adc
iret
and
push
jmp
push
inc
aaa
mov
dec
push
stos
movsl
ljmp
xlat
push
inc
lock
cmp
push
mov
adc
je
pop
mov
push
lock
outsl
jl
add
pop
fwait
js
fidivs
jle
aam
cmp
mov
mov
push
insl
jbe
mov
cmp
or
fidivrs
cmp
jmp
cwtl
pushf
xor
mov
jmp
sbb
add
xor
int3
jecxz
cmp
pop
call
popa
stos
cli
add
sbb
std
loop
lret
into
cltd
sar
pop
fmulp
movsl
mov
add
adc
add
mov
fistpll
xor
xor
sti
add
cld
clc
pushf
jne
pop
or
sub
jnp
sub
ret
mov
outsb
rcrb
push
imulb
cmc
std
add
nop
mov
or
sub
push
sbb
rclb
insb
fildl
out
xor
jne
or
adc
cmp
ds
mov
pop
and
add
inc
loopne
test
fcoms
cli
sbb
or
push
add
sbb
loop
dec
push
cwtl
adc
mov
je
jb
and
jle
cmp
call
add
rorl
xchg
dec
xor
cmp
pusha
add
xor
movsb
jbe
lahf
ljmp
cli
pop
sbb
and
imul
in
mov
pop
adc
mov
dec
inc
push
aaa
outsb
and
and
bound
int3
fistl
and
movsb
mov
mov
fs
fstl
adc
add
sbb
outsl
push
imull
in
test
in
mov
rorl
nop
mov
mov
scas
lods
xorb
cli
imul
cld
inc
movsl
imul
lods
inc
cltd
fdiv
sbb
jg
fists
in
inc
sbb
and
inc
test
mov
and
outsb
mov
push
jl
pusha
push
mov
jno
push
je
xchg
xor
std
mov
push
loop
negl
insl
sbb
fcomps
push
outsb
sbb
mov
aam
xchg
mov
and
repz
scas
into
daa
imul
pop
pop
insl
loopne
xor
fmuls
and
ja
and
rorb
or
lcall
lahf
push
jno
into
push
sbb
mov
lock
incb
push
adc
loope
add
or
push
sub
jbe
mov
xchg
xchg
arpl
inc
fstpl
jp
cmpl
fistps
mov
sbb
push
aas
jae
push
ljmp
ret
ljmp
jno
and
and
stos
fidivrl
xchg
jg
subb
je
push
pop
cmc
pop
sub
out
gs
inc
adc
loop
sub
cmp
fidivs
add
push
sbb
add
jmp
lahf
jns
push
mov
sbb
cmc
sub
lahf
sub
xor
sbb
dec
inc
and
iret
xchg
loope
pop
jp
stos
push
popf
sbb
outsl
lahf
test
add
push
push
xlat
gs
stos
sub
lds
pop
scas
mov
push
inc
int
fucomi
shll
ss
popa
mov
int3
andl
js
jb
or
pop
icebp
imul
out
xor
jne
adc
pop
paddb
js
mov
mov
das
lcall
mov
lock
imul
out
scas
js
mov
mov
jl
dec
and
sti
loop
jge
fildl
insb
fisttpll
arpl
faddp
pusha
push
jl
inc
fisubrl
jne
rcrb
adc
std
test
cmp
mov
pop
jo
dec
sub
popa
pop
sbb
insl
pop
mov
call
mov
das
stos
add
push
xchg
mov
xor
aas
sbb
pop
lahf
pop
mov
loop
pop
push
pusha
pop
cmc
lret
pop
sbb
cmp
mov
adc
sub
das
push
rorw
xchg
mov
rsm
inc
cmc
inc
mov
ljmp
ljmp
pop
sbb
cmp
shrl
xchg
jb
jge
ficoms
pop
aaa
jne
mov
int
push
jg
outsb
push
push
call
test
fists
mov
mov
mov
jmp
push
addb
mov
cltd
fisttpll
push
mov
dec
rolb
dec
std
fs
decl
mov
dec
fs
das
pushf
inc
pop
les
jecxz
xchg
pop
movsb
orb
push
sbb
cmp
mov
push
push
je
cmp
cmp
jecxz
pop
sub
sahf
mov
shrb
js
mov
mov
mov
mov
pop
xchg
ja
adc
pop
xchg
xchg
test
daa
add
sbb
cmpsb
aad
insl
inc
frstor
adc
movsb
sub
in
icebp
and
ja
int
jae
nop
mov
out
jmp
add
sahf
dec
xor
out
addr16
and
jle
ret
mov
fs
outsb
mov
js
popa
cld
push
hlt
push
in
data16
push
xchg
push
insl
call
ret
mov
iret
jb
sbb
rcrb
inc
in
insl
xor
xchg
lret
ror
mov
or
xchg
into
adcl
mov
jmp
ret
pop
fadd
daa
fisubrs
add
add
in
movsl
lret
lcall
scas
inc
pop
add
fldl
shlb
lret
jns
hlt
cmpsb
sub
fcomp
aam
fwait
iret
mov
push
jae
fildll
fidivl
into
sahf
mov
push
dec
or
or
mov
push
add
sub
xchg
mov
arpl
add
pop
mov
fs
call
pop
cs
sub
imul
dec
dec
enter
jno
sbb
or
push
add
cmp
jbe
sti
jno
or
mov
stos
lea
mov
jae
or
push
add
sti
jbe
mov
pop
out
push
xchg
mov
test
in
emms
loope
pop
jg
jl
insl
adc
add
sti
ret
scas
push
nop
cmp
mov
mov
loope
adc
repz
scas
movsl
addl
jbe
dec
xchg
loopne
jae
jbe
icebp
test
aad
dec
aam
mov
mov
nop
clc
xor
out
jo
dec
mov
movsb
adcb
mov
loopne
mov
in
inc
dec
lahf
and
push
shl
das
addr16
push
sbb
sub
daa
call
stos
test
cmpsl
mov
jns
pop
mov
clc
xchg
sub
xor
iret
sbb
sarl
jg
dec
mov
pop
jns
icebp
jbe
call
inc
test
xor
test
fcompl
popf
xor
pusha
adc
mov
or
andb
jg
fistpl
push
sbb
add
imul
stc
push
ljmp
mov
jle
dec
and
cmc
jno
mull
push
mov
push
subl
push
or
repz
pushf
movsb
test
out
test
test
sti
or
leave
or
inc
jp
push
adc
dec
mov
jmp
out
loopne
test
fmul
insl
jne
in
pushl
jb
xchg
loopne
or
cmp
or
mov
rorb
rcl
aaa
in
test
popa
mov
cmp
jne
lock
fcmove
push
mov
mov
cmc
shlb
call
and
jae
or
loope
or
mov
cmovb
bound
movsl
test
push
sbb
outsl
in
out
sahf
push
stc
andl
loopne
pop
push
add
mov
loopne
sbb
imulb
test
insb
xchg
fcompl
mov
xor
cmp
pop
cld
inc
inc
mov
pusha
pusha
sahf
stos
dec
lods
test
sub
in
outsl
adc
xchg
lea
xchg
loop
or
clc
add
bound
add
cld
add
fisubs
mov
pop
pusha
loope
inc
into
cmp
add
fsubrs
push
pop
inc
lods
decb
aaa
cmp
inc
cmp
sbb
mov
daa
adcl
mov
or
mov
loopne
xor
mov
popa
les
or
push
adc
jno
hlt
add
push
hlt
push
adc
jo
mov
lock
push
xchg
ret
fs
xor
les
sbb
inc
xchg
scas
stos
inc
sbb
pop
outsb
lahf
bound
xchg
mov
dec
cwtl
xor
push
ret
arpl
mov
ret
mov
shll
je
lods
jle
mov
stos
fdivrp
mov
mov
push
or
shl
jg
imul
dec
je
sub
mov
jle
ret
push
es
xor
out
fmuls
rclb
fdivp
iret
cmp
je
pusha
push
mov
movl
or
mov
jle
shrb
add
shl
xor
pop
adc
or
push
lahf
mov
mov
sub
push
fstps
push
mov
ret
rol
pop
pop
xor
rcrb
bound
mov
cmp
clc
in
ja
data16
and
ds
cmp
lods
xchg
mov
push
dec
call
mov
push
das
push
aaa
popa
shl
jge
js
push
jbe
out
loop
lret
and
adc
cmp
jo
push
mov
jne
inc
lods
aaa
mov
push
fisttpl
aam
jp
outsl
cld
cli
outsl
xorl
fcmovbe
or
pop
clc
mov
enter
and
fimuls
push
icebp
jecxz
jmp
into
push
shlb
test
in
rclb
mov
add
and
mov
xor
outsl
outsl
sbb
xchg
mov
loope
icebp
push
ljmp
popa
jle
mov
cld
dec
insl
sub
push
push
inc
movl
adc
ja
cltd
push
pop
mov
mov
dec
popl
outsl
jbe
pop
and
fsubs
sbbl
mov
ret
pop
adc
push
ss
mov
mov
int
jne
or
nop
or
bound
mov
adc
mov
leave
sti
int
aaa
sbb
push
xor
out
mov
scas
adcl
push
nop
mov
sbb
pop
sbb
pop
cmp
push
in
cmp
sarb
movsb
push
cmp
and
jl
mov
cwtl
loop
mov
lcall
mov
mov
push
cld
rol
mov
or
sbb
inc
sbb
or
je
xchg
lcall
mov
push
sti
enter
sub
xor
movsl
xchg
sbb
insb
imul
jb
mov
dec
sti
pop
jl
adc
es
adc
adc
xorl
dec
flds
scas
cmpsb
add
inc
push
fldt
sub
mov
icebp
hlt
ret
cld
adc
inc
repnz
aas
sarb
into
into
movsb
pop
push
ret
lret
or
cld
mov
sub
add
xor
dec
mov
jecxz
cmc
or
xchg
sbb
jmp
add
jge
sub
jl
ja
and
cs
inc
jmp
popf
jp
add
add
rorb
push
dec
fldcw
jp
sbb
clc
test
jmp
sbb
out
ret
sbb
lcall
or
jne
popf
xor
cmc
movsl
or
add
jno
insb
or
dec
push
pop
out
mov
jle
xlat
cmp
dec
lds
fsubs
aaa
mov
push
rol
mov
fdivr
or
popa
fsubrs
sub
pop
sub
fcmovne
mov
shlb
jmp
rcrl
fmull
dec
jb
dec
push
dec
mov
fsubs
hlt
ds
push
mov
mov
rorl
movsb
out
cmp
pop
or
outsl
sbb
decl
repz
add
cmc
lcall
adc
decb
mov
add
out
int3
subl
popf
jl
lahf
repnz
movsb
testl
mov
inc
inc
and
inc
ret
in
lock
call
movsb
stos
xor
std
sub
push
sbb
mov
push
push
outsl
or
in
out
cmp
nop
scas
ja
mov
xchg
scas
dec
scas
and
mov
ficompl
inc
clc
mov
jbe
mov
pop
and
loopne
adc
je
int3
call
push
ss
push
xlat
in
mov
test
sub
jns
jnp
ret
push
lcall
cmpl
out
mov
cli
movsl
jge
nop
mov
sub
jno
jp
add
mov
call
sbb
xor
mov
aam
push
fisttpl
dec
cltd
adc
xor
sub
add
mov
je
je
jo
pop
xchg
mov
sub
pop
mov
daa
push
aam
imul
fmull
xorb
fwait
call
jns
sub
push
cld
jle
lret
outsl
adc
fcomps
je
arpl
lods
push
lea
mov
std
js
shll
inc
into
test
insb
mov
iret
sub
xorb
cs
ret
push
loop
sbb
negl
out
pop
add
push
test
shlb
mov
stc
inc
cs
out
filds
adc
xchg
add
jecxz
xor
fwait
in
fdivs
pop
mov
mov
imul
lods
dec
cmp
sbb
inc
inc
inc
inc
push
and
ret
dec
bound
clc
xor
pop
jae
cmp
cmp
clc
cmp
sbb
or
int
outsl
jl
loopne
enter
stos
stc
test
or
mov
orb
pusha
jns
pop
mov
dec
inc
in
push
and
xchg
dec
fisubrs
mov
add
iret
int
dec
es
imul
jne
movsl
mov
adc
xchg
add
sbb
loope
in
in
push
movsl
outsl
test
lods
es
sub
into
rorl
push
repnz
das
leave
inc
int
or
cwtl
ret
sbb
loopne
mov
sbb
sub
lea
fstl
or
jno
in
dec
in
mov
mov
ret
and
inc
loope
lods
adc
add
push
fsubrp
and
pusha
sub
push
les
push
dec
arpl
sbb
jl
outsl
sbb
test
add
mov
jno,pt
adc
decl
adc
xchg
add
dec
mov
pusha
sti
ret
push
adc
aaa
pusha
mov
sub
aad
xchg
add
sbb
inc
xchg
pushf
cs
sahf
adc
pop
out
xor
imul
and
in
push
inc
shrb
popf
test
inc
or
pusha
lds
fs
pop
aad
out
call
cmp
repz
add
dec
mov
stos
mov
cmp
jnp,pn
stos
mov
xorb
inc
lock
in
lock
stos
push
call
fs
popf
mov
sbb
cmp
ret
orb
int3
mov
inc
aam
cmpsl
mov
or
jo
outsb
call
mov
test
test
push
sub
insl
insb
mov
add
sub
or
sti
xchg
or
jb
test
sub
leave
lock
pop
lds
stos
mov
add
pop
clc
ret
mov
and
ss
sub
mov
hlt
test
dec
pop
iret
xchg
xor
out
xchg
mov
insb
lock
mov
push
sbb
lahf
push
adc
fsubrs
in
add
mov
stos
xor
or
insb
or
nop
or
xchg
add
adc
pop
in
pop
mov
and
fildl
or
pop
inc
inc
loopne
pop
cmp
dec
push
ja
add
imul
jg
push
stos
pushf
adc
loope
pop
cmp
cmpl
icebp
lret
xchg
jle
push
mov
or
add
jns
out
adc
xorb
rol
insl
ficompl
jmp
or
xlat
out
and
insb
mov
push
push
mov
fidivrl
jae
insl
sub
xchg
std
push
les
pcmpeqb
mov
fmull
push
popa
mulb
mov
xor
cmp
xchg
fwait
and
pushf
push
mov
jecxz
dec
scas
mov
mov
js
outsl
cld
ret
cli
mov
mov
movsb
hlt
movsl
lods
mov
pop
mov
jp
js
repz
dec
sar
movb
out
repz
or
mov
jge
adc
test
popa
lock
jl
or
add
fidivrs
aad
mov
jl
rclb
or
or
in
lock
cli
add
cmpsb
inc
xchg
mov
insb
xchg
jno
insl
or
loope
sub
mov
inc
stos
inc
mov
je
inc
jge
test
scas
lods
enter
loopne
cmp
mov
xchg
xchg
or
sbb
mov
icebp
sbb
cmpsl
pshufw
push
pop
fiaddl
mov
xchg
fimull
shrl
add
dec
inc
outsb
sar
mov
aaa
lret
cmp
inc
or
mov
adcl
mov
mov
or
push
jns
xchg
or
dec
mov
mov
jg
rolb
lret
dec
push
lret
lea
add
jg
subb
lock
loopne
and
mov
fcmovnu
xchg
outsb
sahf
outsb
lret
into
addb
lods
dec
mov
fdivl
or
mov
mov
fwait
pusha
dec
movsb
mov
push
imul
add
xor
bound
aas
test
pop
or
stos
jbe
mov
mov
inc
pop
sub
dec
inc
cmp
insl
sbb
add
popf
xor
jecxz
adc
and
pop
push
ret
or
mov
outsl
ljmp
rcrl
inc
mov
mov
std
lock
sbb
daa
pop
and
mov
fstpl
aaa
jo
insb
dec
adc
xchg
mov
fs
ffreep
out
dec
sub
popa
mov
incb
fsubrl
fbstp
cmc
stos
sbb
xor
add
insl
lret
divl
mov
inc
cmp
out
in
push
lock
inc
push
mov
and
fbstp
xor
push
push
sbb
sub
out
inc
icebp
or
je
add
in
outsl
mov
shrl
ret
push
mov
cld
jg
cmp
xchg
hlt
inc
xor
jno
rcr
inc
call
rolb
cltd
inc
je
adc
add
out
or
sub
xor
in
mov
aaa
mov
ror
pushf
cmp
into
or
xor
sbb
sbb
jo
sub
jecxz
cmc
jg
aas
cmpsb
stos
or
xlat
adc
orb
push
imul
jmp
mov
test
data16
or
ljmp
test
ret
cmpsl
sub
or
subl
jbe
xor
push
xchg
rorb
jns
jg
mov
sub
or
call
jge
gs
xor
pop
mov
lock
call
outsb
sub
addr16
xor
andl
xor
mov
mov
add
subl
mov
push
pop
add
add
dec
int3
cs
mov
es
adc
mull
mov
fidivs
bound
dec
push
xlat
push
xchg
or
mov
dec
and
adc
or
out
jns
lock
and
jle
stc
loop
pop
decl
ljmp
mov
inc
mov
dec
std
push
es
mov
icebp
sti
fists
roll
lods
in
mov
pop
mov
repz
enter
std
inc
arpl
roll
insb
push
js
daa
xor
cld
aaa
incb
mov
add
or
orl
mov
push
fimuls
cmp
pop
sbb
mov
lock
sar
push
test
dec
imul
mov
dec
fcmovnu
lods
or
mov
mov
adc
mov
rorb
cmp
fisubl
push
sbb
push
xor
inc
aam
push
enter
jmp
cmc
mov
adc
sysenter
frstor
cmpsl
pop
subl
or
sub
sub
sub
sarl
sbb
pop
xchg
cmp
mov
cmp
push
sub
movsl
sbb
lods
shl
push
cmp
repnz
dec
lea
les
test
xlat
sbb
dec
loope
cli
inc
popl
mov
inc
rcr
jg
and
gs
nop
sahf
xor
jbe
aaa
ffreep
fbstp
push
pusha
xchg
lahf
add
pop
add
outsl
mov
jnp
in
es
xor
fcmovu
incl
xchg
inc
fadds
sbb
cmpsb
dec
mov
dec
sbb
rcrl
shlb
jge
jp
arpl
pop
pop
push
add
lcall
push
mov
add
push
loope
jno
test
aas
cwtl
fnsave
sti
imulb
movsl
xor
in
stc
popa
add
adc
loop
ljmp
sbb
cli
js
jbe
sbb
sbb
out
dec
test
popa
sub
jecxz
sub
adc
jmp
rolb
add
xchg
cmpb
fmull
rorl
xor
and
mov
adcl
lods
sbb
cmp
xchg
push
lea
mov
mov
inc
loopne
jb
pop
add
aad
mov
xchg
lds
add
mov
and
sub
jo
cs
mull
pop
or
sub
cmp
mov
stos
sahf
mov
dec
repnz
rorl
and
jmp
add
scas
dec
and
fs
out
pusha
add
pop
hlt
pop
das
popf
cmp
pop
clc
addl
cmp
xchg
leave
push
in
mov
xchg
jge
int
sub
shll
jg
inc
add
sub
mov
testb
lods
popa
push
adc
dec
pop
mov
inc
or
lods
nop
stc
adc
sub
out
lret
inc
inc
push
fimull
lea
and
lds
arpl
and
lret
xchg
ljmp
call
inc
lcall
in
lods
lret
mov
jle
xchg
pop
es
mov
enter
cli
push
adc
and
jne
mov
inc
mov
outsb
inc
aas
xchg
dec
sbb
adc
jae
outsb
or
pushf
mov
popa
mov
jo
clc
add
jl
fcom
sbb
fwait
scas
and
inc
or
popa
icebp
aas
stos
cmc
mov
inc
sbbl
sub
pop
or
sbb
and
mov
es
mov
test
das
jl
ds
lret
adc
inc
inc
ss
mov
jo
cwtl
and
adcl
daa
jge
inc
rclb
jl
stos
idiv
ja
inc
or
stc
mov
mov
add
push
push
jecxz
gs
roll
mov
pop
pop
das
cld
out
push
daa
repnz
rorl
in
cmp
push
fnstsw
nop
sbb
insl
movsl
cltd
lock
push
inc
stos
add
mov
decb
add
xor
jb
cmp
lcall
or
ljmp
mov
sub
in
test
cli
outsl
das
in
out
dec
call
mov
jne,pt
and
add
mov
pop
mov
loope
mov
dec
push
mov
fstl
cmp
fdivl
subl
aaa
test
ret
add
mov
or
pop
xchg
push
push
outsl
mov
add
add
jbe
test
cmp
inc
shlb
cmp
ss
fdivs
dec
mov
rolb
mov
mov
insl
pop
push
subl
xchg
ficomps
and
retw
fcomps
aaa
mov
mov
aas
btc
data16
mov
test
js
jnp
test
cli
call
icebp
pop
push
sbb
inc
test
ret
cmpsl
jg
call
sub
mov
jne
divb
add
and
andb
jno
sahf
shrb
stos
leave
test
pusha
imul
jle
adc
rorl
add
sub
adc
sub
cld
hlt
lea
fcoms
sbb
mov
mov
sub
or
or
jbe
pop
mov
pop
lret
pop
loopne
push
or
dec
add
popf
mov
decl
movsb
sub
lock
push
outsb
addb
movsl
jbe
mov
push
jl
mov
xchg
pop
jmp
jmp
sbb
stos
pusha
arpl
or
sub
mov
xlat
icebp
xor
icebp
mul
mov
xchg
bound
adc
mov
fdivrl
push
testl
mov
sub
cmpsb
hlt
into
xchg
xor
and
in
mov
mov
out
sub
std
dec
pusha
loopne
fdivr
mov
push
jmp
xchg
adc
daa
or
test
inc
stos
mov
leave
xor
int
push
or
cld
stc
daa
das
add
fldl
jb
inc
jecxz
cltd
mov
jp
ret
out
ret
ret
jo
mov
aam
in
lea
and
lahf
adc
dec
pop
shl
push
aad
jp
scas
sub
icebp
pushl
aam
inc
push
scas
addr16
test
popa
xchg
sbb
or
add
mov
sub
shll
inc
call
xchg
ljmp
ret
aad
fldcw
sarb
mov
hlt
push
sub
pop
sub
sbb
push
sbb
ljmp
roll
hlt
or
mov
fadd
mov
push
test
pop
or
dec
loope
sbb
push
mov
stc
inc
subb
sub
mov
dec
sub
clc
xor
push
cli
out
loop
xchg
xchg
push
and
and
pusha
push
test
inc
sub
fwait
lea
stos
or
in
lea
stc
movsb
pushf
dec
inc
pop
call
cmc
mov
and
outsb
mov
insb
hlt
pushf
jo
in
xor
testl
push
aas
test
out
loope
ja
adc
dec
cld
add
or
or
add
orl
loopne
push
cltd
cmc
pop
cmp
outsb
js
pop
pop
fwait
call
pop
clc
std
mov
ficompl
das
cmc
sbb
add
les
jbe
movsb
fs
scas
call
popa
jl
adcb
fadds
add
jg
or
fwait
data16
test
add
sbb
lea
xor
pop
vandps
mov
pop
jle
xchg
loopne
mov
rcr
jns
into
mov
cmp
insl
fcmovnbe
out
in
aas
xor
ret
and
inc
aas
sti
xor
mov
inc
out
insb
jge
leave
cmc
sub
call
pusha
dec
or
aas
and
jle
lcall
pop
rcrb
xor
push
jmp
decl
es
loopne
adc
into
cmp
dec
rorl
jge
pusha
inc
aaa
jbe
arpl
and
subl
sub
jo
shrb
sub
mov
test
shll
or
test
jl
mov
nop
add
mov
cs
and
das
adc
pop
cmp
in
jmp
or
push
ret
cli
insl
rol
ret
or
adc
xorl
or
xor
mov
jmp
rcrb
nop
add
push
adc
lret
out
pop
push
add
mov
cmp
mov
mov
outsl
pop
mov
stos
cmp
cmp
hlt
dec
rcr
push
les
add
ret
mov
sbb
cmp
adc
push
lahf
ljmp
jne
mov
sub
mov
addr16
test
in
lods
mov
daa
cwtl
sbb
dec
inc
imul
ficoml
xchg
stos
test
mov
roll
outsl
sbb
xor
cmpsb
dec
mov
cmp
lret
mov
mov
js
mov
sbb
cmp
mov
mov
inc
xor
lahf
cmc
and
or
jae
xchg
stos
mov
or
aam
mov
mov
and
adc
and
mov
sbb
and
xchg
ss
dec
frstor
call
mov
fwait
or
inc
pop
inc
lock
andb
into
int3
mov
ret
cmpsl
mov
fld
xor
mov
lock
sub
rcrl
aad
dec
bound
or
xchg
ljmp
es
int
into
jle
rcr
xchg
fdiv
push
adc
jno
mov
fimull
adc
fiaddl
mov
je
fisttps
into
cmpsl
ret
xchg
or
mov
and
cld
faddl
or
loopne
cmp
pop
imul
adc
sbb
flds
push
push
shll
dec
mov
hlt
movsb
out
xchg
je
cli
pop
add
pop
mov
mov
repnz
leave
fucomi
or
mov
mov
jecxz
xchg
andl
xchg
lcall
popa
pop
add
and
sbb
push
popa
mov
notb
popf
popa
xchg
out
push
test
cmp
dec
ljmp
mov
jge
leave
pushl
jp
add
xlat
and
cltd
mov
sub
nop
fucomp
push
mov
aad
je
scas
and
jmp
das
ds
aam
inc
mov
and
inc
inc
ljmp
sbb
push
and
and
pop
ret
cld
dec
lret
mov
je
adcl
repnz
adc
fistps
lea
push
and
pop
cltd
mov
ja
shlb
cmpsl
sub
fs
inc
lock
in
mov
shlb
adc
ss
fwait
add
inc
cmp
fistpll
lock
and
ret
fmulp
jecxz
loopne
out
js
cmp
xor
dec
and
jg
and
popa
and
jbe
aaa
mov
subb
xchg
jns
out
imulb
incb
add
leave
xchg
test
pop
mov
test
stos
sti
dec
stc
pop
insl
mov
mov
jg
pop
jl
lock
in
or
mov
les
repz
mov
outsl
adc
pop
les
dec
add
or
xor
movsb
cmp
adc
pop
add
lahf
sbb
or
cltd
aam
in
mov
mov
lret
mov
sbb
lods
lea
adc
pop
cmp
sahf
push
ja
call
pop
or
dec
fnstcw
cmp
std
cwtl
jbe
lret
lret
xchg
stos
fisubl
sub
inc
dec
adc
inc
scas
dec
loop
sbb
loopne
xor
jae
gs
test
js
cld
jle
ljmp
sub
xchg
das
mov
push
stos
fisttps
or
mov
int
lods
outsl
shlb
mov
lock
aam
mov
cmpsl
test
int3
outsl
xor
mov
in
cmp
mov
addr16
enter
notl
rorl
push
mov
sarb
dec
mov
imul
or
stos
icebp
adc
inc
out
rorb
xor
cmc
stc
cmpsb
ret
add
mov
aam
scas
cmp
ss
mov
cmpsb
movsl
xchg
or
xchg
cltd
sub
xchg
and
mov
shl
xlat
dec
pop
sahf
fstps
int3
mov
jo
xor
push
rcrl
shrb
or
inc
scas
jmp
jp
push
movsl
out
cmp
jno
shl
mov
and
adc
scas
cwtl
lcall
in
push
sahf
mov
cmpb
cs
bound
dec
inc
dec
insl
rolb
lds
mov
xor
loope
imul
fildll
mov
mov
decb
mov
push
mov
inc
jmp
and
xor
lock
pop
jecxz
mov
aad
jg
shll
mov
loopne
ss
push
jmp
dec
dec
dec
enter
pop
cli
movsl
lods
dec
jecxz
sbb
das
neg
adc
das
mov
stos
xor
jecxz
jge
and
test
or
and
aaa
aaa
and
nop
mov
fidivrl
fldl
rol
sbb
sub
test
aad
mov
fcomi
popl
push
and
call
and
and
es
ljmp
and
lods
xor
xchg
push
mov
push
in
icebp
cmp
popl
rorl
add
add
aaa
out
call
jne
add
mov
les
pop
sahf
and
and
xlat
mov
dec
xchg
and
test
fs
pop
mov
inc
rcr
mov
sub
jne
push
sti
push
sbb
fstpt
jle
jecxz
cmp
push
test
das
fistpll
xor
aam
mov
ljmp
pop
scas
arpl
icebp
sbb
in
lods
out
pop
mov
lret
mov
lds
cmp
inc
rcrl
cld
rorb
jmp
or
repnz
popf
pushf
mov
loop
rol
sub
stos
mov
pusha
scas
cmp
and
push
aam
sti
xchg
fisttpl
mov
or
mov
sbb
jmp
movl
mov
push
rcrb
fistpll
sbb
pushl
add
adc
and
add
mov
dec
sub
mov
ret
fisubrl
imul
or
or
xchg
cmp
jp
mov
jge
push
sbb
shlb
insb
fildll
xchg
sub
clc
push
add
popa
mov
push
sti
fsubrl
mov
outsb
add
movsb
repnz
xor
adc
ret
imul
inc
adc
push
stc
loop
leave
test
mov
sub
and
pop
mov
jbe
mov
pop
jle,pn
mov
gs
mov
push
mov
fisubrs
sbb
clc
inc
shrb
cmp
lods
mov
in
mov
jge
jg
pop
clc
mov
xlat
pop
sub
lret
dec
xor
outsb
lds
rol
lea
sahf
gs
in
icebp
lods
aaa
outsb
subl
imul
xor
shrb
adc
outsl
fistl
outsl
test
dec
or
je
mov
into
add
lcall
jmp
or
sbb
sahf
enter
add
nop
pop
shl
sbb
pop
ret
pop
loop
jmp
push
lock
or
in
push
mov
aaa
aaa
or
inc
das
aad
lcall
pop
das
ja
xchg
loope
sub
bnd
shlb
ret
inc
adc
adc
cmpb
pusha
addb
dec
sub
fsubrs
dec
outsb
outsl
inc
push
jg
add
ffree
aam
test
in
or
sub
sti
stc
cmc
int3
rorl
push
addr16
adc
jmp
rol
jg
test
je
mov
mov
ret
sarl
or
push
inc
mov
or
mov
call
daa
stos
fdivrl
movsb
xchg
cmp
shrl
mov
fildl
xchg
ds
mov
mov
mov
dec
mov
mov
mov
out
or
and
fistpll
movsl
inc
popf
mov
ret
adc
out
add
adc
sub
mov
push
jp
out
push
sub
rorb
and
aad
das
lock
mov
lods
lahf
pop
push
sub
mov
lods
daa
popa
adc
test
movsl
int3
jbe
test
sbbb
sbbl
cmpsl
lods
notb
aas
notb
in
dec
xor
aaa
sarl
adc
xchg
add
sub
mov
fcomps
lahf
adc
and
cmp
orb
mov
loopne
sti
or
adc
dec
and
lcall
pop
sub
das
pop
std
xor
add
sar
fsubrl
push
cli
or
jl
cs
mov
mov
or
pusha
jo
add
cltd
inc
lea
pmuludq
add
orb
xchg
push
stos
jo
inc
push
dec
fisttpll
cli
ret
les
dec
jp
sbb
push
xchg
mov
repz
sub
js
std
fdivl
lea
mov
mov
cs
adc
cmpsb
inc
sub
pop
mov
fdivs
aad
mov
lret
testb
adc
orb
lods
leave
mov
add
mov
and
xor
jg
pop
push
lods
adc
or
sub
lds
addb
sub
movsb
fwait
sbb
and
js
mov
imul
and
loope
loope
das
dec
sbb
in
xor
mov
mov
push
outsl
dec
mov
das
or
outsb
cs
mov
cli
xchg
test
loop
test
adc
jb
repnz
ret
push
mov
xlat
and
movsb
int
les
sbb
out
adc
mov
test
mov
fsubl
leave
cwtl
push
idivb
mov
in
mov
orl
mov
nop
test
jnp
push
call
pop
mov
mov
aam
in
rolb
outsb
mov
xor
inc
xchg
pop
lea
mov
out
sbb
push
inc
fsub
mov
xor
in
mov
mov
jnp
lret
addr16
in
in
xchg
or
mov
in
push
xchg
jle
icebp
adc
adc
add
mov
insb
dec
mov
in
jge
push
insl
loopne
push
sbb
mov
sub
fiaddl
or
in
fcomi
mov
stos
xchg
dec
fwait
xchg
cli
jo
jno
les
inc
or
js
je
lods
inc
xchg
cmp
test
mov
push
push
xor
repnz
mov
jg
mov
stos
imull
incl
fwait
or
dec
icebp
rol
int3
xchg
in
pop
pusha
mov
lcall
jmp
dec
sbb
mov
and
and
pop
xchg
aaa
fstl
push
das
inc
or
inc
dec
out
in
incl
mov
pop
subb
les
cmp
jmp
xchg
cmpsl
and
and
jle
leave
icebp
or
loop
push
cmpsl
xor
in
insl
sbbl
mov
xlat
xor
jo
xchg
cmp
into
or
push
pop
jl
inc
sub
mov
mov
cs
push
mov
inc
dec
sti
imulb
mov
dec
cmp
fbstp
cs
roll
mov
push
stc
pop
xor
shll
add
jo
dec
fcmovnb
cmpsl
test
scas
mov
cli
in
add
dec
mov
sbb
jo
mov
mov
jg
ja
xchg
push
mov
jbe
jnp
std
dec
mov
cld
pop
scas
clc
cmc
fidivrs
loope
jg
cs
sub
jnp
arpl
int3
das
cmp
jl
adc
jmp
mov
bswap
les
iret
lods
filds
test
or
ljmp
int
mov
out
sub
inc
mov
add
lods
lea
insl
mov
push
jg
jno
sbb
sub
negl
dec
mov
andb
xor
leave
adc
pop
jo
cli
scas
mov
loopne
leave
loopne
add
jo
cwtl
pop
scas
scas
pop
outsl
mov
fisubl
add
pop
sub
pop
pop
clc
push
sub
jae
cmp
roll
outsb
push
push
or
scas
out
push
jo
mov
jns
lret
adc
cli
dec
rolb
mov
aad
and
test
ljmp
mov
popf
mov
enter
dec
inc
notl
sbb
lea
stos
pop
sbbl
outsl
insl
pop
mov
aam
rcl
mov
xorl
xor
cltd
faddl
add
test
sub
cmp
mov
mov
in
xor
lods
cs
fcompl
mov
jmp
int3
push
ds
sub
cld
mov
sub
push
lea
xchg
push
pop
add
push
pop
and
xor
mov
sbb
mov
inc
fmull
or
je
test
dec
xchg
notb
mov
ret
mov
aam
sub
aas
dec
mov
mov
ret
sbb
in
xchg
push
lods
mov
lods
mov
xor
mov
sbb
and
push
decb
adc
jnp
xchg
dec
pop
cwtl
mov
cmovbe
adc
sub
icebp
or
popl
jecxz
add
pop
or
std
and
push
cld
and
push
sub
fiaddl
mov
push
sub
push
jl
and
shrb
adc
outsl
cmp
call
outsl
cld
inc
pop
mov
lods
add
cs
pop
mov
test
cmp
out
out
sti
decl
sahf
mov
sub
mov
or
push
sub
in
movsl
mov
in
nop
dec
mov
adc
movsl
mov
scas
lea
hlt
pop
js
ljmp
stc
cwtl
call
fldenv
mov
jbe
fsub
dec
cmc
jecxz
loope
enter
pop
or
or
rolb
push
mov
dec
push
cmp
push
nop
sbb
fwait
mov
ss
inc
insb
mov
in
lods
sub
mov
iret
rorl
test
sub
inc
jb
adc
inc
sti
pop
enter
lcall
push
xchg
ret
push
fstl
xchg
push
mov
push
xchg
and
nop
les
loope
movsl
sub
insl
aaa
pop
bound
push
xchg
sub
mov
add
movb
push
pop
or
leave
xor
imul
jmp
sub
inc
mov
sbb
xor
movsl
mov
sbb
jp
and
mov
add
lods
pushf
mov
push
pop
stos
aaa
fidivrs
push
pop
xor
and
pop
sub
imulb
push
xchg
adc
into
push
scas
adc
or
sub
fs
adc
jo
xchg
or
sbb
pushf
movsl
subl
add
test
test
mov
in
sarl
imul
xchg
sub
mov
or
sbb
outsb
pop
jecxz
dec
aas
ffreep
mov
push
mov
rcrl
gs
out
clc
lea
adc
lret
pop
popa
test
sbb
mov
and
inc
les
das
fidivrs
aaa
sbb
sbb
mov
mov
fs
mov
pop
inc
ljmp
cmp
fcmovu
inc
sbb
cs
mov
icebp
pop
imul
cmp
mov
dec
mov
push
sbb
sar
movsl
ljmp
mov
aam
das
sbb
sti
rcl
call
sbb
fstl
adc
jecxz
cmp
aaa
les
ss
inc
dec
inc
les
add
or
xchg
imul
adc
push
shll
scas
aaa
mov
adc
pop
test
sarb
addr16
andl
or
lock
mov
xor
xchg
sarb
adc
lds
or
add
jae
jbe
push
dec
lds
jae
in
xchg
push
xchg
or
shl
iret
ret
pop
sub
mov
stos
bound
jnp
lret
jg
sti
add
push
mov
sbb
and
adc
dec
fldt
or
dec
orb
and
xchg
mov
nop
int3
fildll
in
notb
clc
cmp
jnp
pop
in
xlat
loope
inc
mov
sbb
sbb
push
loope
shrl
xor
aam
mov
and
push
orl
insl
inc
cmp
sub
ss
fcoml
mov
sub
xchg
pop
pop
cli
loop
jnp
inc
aaa
scas
test
dec
jge
adc
push
lea
mov
xchg
mov
xlat
cmp
mov
popa
add
iret
sbb
sbb
add
fisttpl
lock
add
pop
outsb
and
aaa
fstl
movsl
pop
xchg
mov
cmpl
je
or
bts
pushl
ljmp
jo
xor
adc
inc
jmp
or
mov
sahf
dec
push
or
aas
ljmp
lcall
lret
pop
dec
cmp
push
outsl
jl
xorb
jo
fwait
les
mov
add
stos
mov
imul
pop
call
xchg
mov
fchs
cmpsb
outsb
xchg
das
or
xor
add
shlb
in
fists
dec
fnstsw
xchg
test
lret
dec
fmull
sub
cli
ret
scas
mov
mov
push
int
ljmp
jge
jecxz
adc
add
and
mov
pop
xchg
inc
mov
scas
addr16
and
addb
test
shr
sub
int3
cmpsl
pop
std
movsl
xor
mov
ljmp
cmpb
mov
lds
mov
push
jg
and
push
mov
out
dec
outsl
push
sbb
inc
pusha
dec
and
dec
and
sub
aaa
out
or
xor
insl
dec
das
mov
push
add
pop
ficoml
les
jne
loop
adc
ret
jecxz
popa
mov
movl
pop
fcmovbe
sahf
push
rclb
jle
test
and
push
xchg
add
and
ss
add
mov
or
pop
imul
pop
pop
cli
lea
or
xor
repnz
push
mov
or
inc
pop
xor
mov
pop
lods
xchg
sbb
sub
repz
mov
fwait
sub
xor
in
outsl
add
call
in
shll
sub
xor
mov
jg
xchg
ret
adc
ret
mov
aam
fistpll
cld
pop
in
loopne
cmp
sbb
dec
push
loope
xlat
ret
pushf
aam
xchg
cs
repnz
mov
cmp
test
and
adc
icebp
pop
or
xchg
std
or
inc
xchg
not
pop
outsb
xchg
cmp
prefetch
mov
repnz
rcll
test
loopne
jmp
std
aaa
add
inc
mov
adc
lahf
subb
xchg
dec
cld
mov
jmp
add
inc
fcoms
pop
add
out
mov
hlt
sbb
cld
adc
adc
mov
push
das
dec
inc
or
cmp
loopne
xchg
push
xchg
push
ret
pop
int3
cmp
and
inc
imul
jmp
pop
push
je
add
or
mov
xor
or
push
add
insb
adc
movsl
xchg
aam
and
lock
cmp
fs
add
es
rcll
and
lock
popa
lret
out
in
inc
lock
mov
push
sbb
jecxz
fistps
push
aam
inc
mov
xchg
jne
mov
add
cmpl
insl
loope
push
arpl
push
negl
out
cmpsb
call
push
clc
es
pop
mov
dec
and
loopne
lret
hlt
testl
in
push
das
cmp
sub
or
push
add
aas
dec
shlb
je
cmpsl
data16
mov
movsb
inc
inc
mov
out
jge
dec
mov
sbb
jecxz
aas
or
fisubrl
test
mov
shlb
mov
mov
xor
roll
aad
aad
lds
shl
add
lret
push
in
adc
mov
in
pop
insl
enter
mov
pusha
pop
out
test
mov
out
clc
push
fistpl
stos
adc
or
ds
jp
adc
mov
adc
popa
popa
stos
mov
mov
mov
in
lock
fisubs
add
adcb
nop
xchg
pop
aas
rcr
mov
bound
movsl
jp
in
mov
inc
and
mov
fs
add
into
cmp
mov
notb
add
pop
fistpll
dec
adc
pop
push
lds
mov
add
sub
jg
fnsave
lods
scas
mov
out
aaa
dec
rcrl
push
xchg
outsl
xchg
pop
sbb
mov
mov
das
jbe
icebp
jecxz
cmp
xor
cmpsb
ljmp
pop
jg
add
cmp
jl
and
fcompl
lds
mov
xor
mov
subl
xchg
pop
mov
stos
adc
jbe
push
leave
dec
lock
in
push
test
mov
je
mov
add
cmp
mov
aad
xchg
repz
rcrl
push
int3
sbb
out
fnstcw
outsb
js
adc
mov
mov
dec
adcb
imul
and
pop
lods
mov
sub
je
aad
shr
mov
fisttps
popa
movsl
push
imul
lods
or
mov
clc
pop
dec
aaa
fdivl
cmp
add
adc
push
dec
adc
ret
shrb
test
mov
adc
fadd
inc
test
lahf
adc
inc
and
dec
or
out
leave
sbb
lds
xor
addl
in
sbb
mov
repnz
dec
cld
sbb
dec
sub
mov
out
or
incb
sub
and
dec
or
cli
pop
and
mov
jg
popa
lcall
fdivs
inc
sbb
leave
pop
push
and
stos
lock
outsb
ffreep
outsl
mov
repnz
inc
xchg
jecxz
fstps
cmpsl
mov
fldl
ljmp
mov
cmc
xor
loope
das
cmpb
dec
fdivrl
pop
test
dec
or
add
loope
mov
fidivrs
jns
cli
inc
mov
aas
shr
ffreep
call
mov
dec
test
arpl
sahf
repz
and
hlt
push
adc
adc
mov
push
enter
shlb
imul
push
xchg
cli
inc
push
push
mov
jp
lret
jo
mov
nop
decb
sbb
mov
lahf
sub
sbb
pop
push
pop
imul
dec
lods
mov
lods
adc
pop
insl
pop
js
or
or
sub
mov
pusha
jecxz
in
ret
shll
sub
insl
into
push
xorb
jle
out
cmpsl
gs
les
xchg
ret
and
xchg
mov
or
inc
daa
in
movsb
jge
imul
std
std
es
xor
mov
lock
test
sbb
lods
xchg
xchg
xor
inc
neg
mov
jb
cmp
mov
fstpt
sub
addl
aad
dec
imul
xor
mov
into
and
inc
test
out
xchg
loop
mov
mov
inc
mov
pusha
and
pop
jge
fs
adc
sbb
filds
sti
adc
les
insb
mov
rcl
sbb
fdiv
add
adc
lds
shll
outsl
enter
inc
jmp
pop
fsubp
mov
mov
jo
pop
mov
xor
inc
cmpsb
ja
les
mov
xor
add
adc
sbb
mov
cmpsb
out
stc
inc
dec
jle
xor
in
push
pop
xor
dec
mov
jg
mov
mov
lcall
push
orl
jmp
pop
clc
cmp
out
mov
popf
int3
adc
mov
mov
das
lea
inc
and
es
ja
mov
ja
xor
cmp
cmp
clc
sbb
cmpb
adcb
add
cs
ret
jecxz
js
aas
adc
add
cmp
inc
mov
adc
mov
dec
xor
mov
ret
aad
loopne
loop
hlt
test
inc
mov
loopne
arpl
dec
sarb
jnp
xor
add
add
lea
add
scas
mov
mov
sbb
or
sub
lods
or
xor
cmp
cwtl
add
fbstp
dec
jae
mov
sub
mov
mov
scas
adc
fbstp
mov
pop
imul
clc
movb
pop
fsubp
rorl
int
movsl
pop
mov
lds
sbb
jl
sub
rol
ja
push
aaa
lret
sub
ja
jne
daa
popf
add
int3
jb
fucomi
adc
and
ja
jp
shrb
cld
repz
iret
adc
loop
imul
xor
test
push
mov
pusha
or
or
insb
dec
insl
pop
in
mov
sbb
mov
sbb
pop
loopne
cmpsl
mov
and
daa
sbb
and
adc
int3
aad
xor
inc
add
push
push
add
les
or
sbb
cmp
jmp
or
inc
pop
mov
sahf
das
mov
imull
push
push
mov
mov
mov
ror
imul
inc
mov
es
push
aam
mov
add
or
pop
jge
nop
loope
lods
sbb
fistpll
mov
or
jo
mov
les
call
xchg
sbb
and
ficoml
test
cmp
push
and
and
mov
inc
xchg
mov
inc
xchg
add
adcb
mov
mov
fimuls
jo
lods
daa
inc
mov
push
pop
mov
push
fidivs
pop
cmp
mov
mov
imul
xor
jecxz
popa
xorl
cmp
mov
push
push
les
sbbb
adc
out
in
lret
cmp
push
mov
fstpl
das
pushf
jmp
cmp
mov
jmp
call
mov
mov
push
test
int3
iret
popa
jecxz
push
stos
clc
pop
mov
mull
pop
aad
cmova
stos
pop
cli
dec
xchg
xchg
ret
stos
xorb
inc
push
mov
push
lret
mov
inc
arpl
lds
inc
xor
mov
loopne
push
xchg
fistpl
rorb
mov
data16
insl
sti
div
sub
shll
and
pop
iret
push
test
outsl
shlb
dec
mov
jmp
push
sbb
sub
inc
or
cmc
mov
xchg
cmp
movsl
mov
test
shrb
mov
mov
dec
or
mov
jl
into
movsl
testb
ret
leave
gs
in
cli
popa
lods
sbb
loop
pop
and
dec
mov
sub
pushf
dec
cwtl
push
or
or
mov
jmp
push
or
add
sbb
mov
fldl
mov
addb
cmp
adc
mov
ret
mov
sbb
cmpsb
jle
arpl
mov
mov
jmp
inc
jno
mov
push
sarl
add
mov
jmp
dec
mov
xor
mov
adc
loope
pop
add
loopne
cmp
into
xchg
stos
mov
icebp
aas
cwtl
jle
repz
sbb
call
sub
sbb
inc
sahf
loope
stos
pop
cmp
xchg
cmpsb
or
test
and
fbstp
inc
pop
push
idivb
and
add
inc
loopne
add
inc
and
or
inc
cmp
fdivr
push
add
mov
adc
mov
inc
out
les
mov
rolb
imul
icebp
sub
mov
inc
xor
mov
mov
mov
sarb
or
cld
jg
mov
mov
xchg
ja
mov
mov
and
sbb
out
flds
js
loopne
fstp
les
imul
test
roll
in
push
in
sub
out
clc
negb
sbb
push
adc
out
test
pop
xor
scas
sub
aaa
sbb
lcall
push
mov
mov
enter
mov
and
push
xchg
mov
insb
lret
or
jle
loop
xor
push
aam
repnz
movsb
push
pop
pop
fcomps
aam
frstor
aam
insb
pop
mov
inc
inc
sbbl
clc
adc
jg
dec
les
xor
jl
ljmp
or
notl
lods
aad
in
xor
push
sti
push
vcvttsd2si
mov
cmpsb
xor
sbb
pop
incl
icebp
mov
scas
pushf
ret
xchg
rcrl
movsl
jg
icebp
cmpsb
clc
mov
xor
push
das
push
and
push
out
sub
adc
xchg
loop
jns
mov
pop
xchg
pop
incb
imul
leave
addl
daa
clc
iret
or
ffree
push
divb
pop
adc
cwtl
add
push
popf
adc
push
lret
arpl
into
mov
aaa
js
flds
mov
adc
test
je
aas
xchg
jns
jp
mov
sbb
inc
int3
test
in
insl
cmp
push
out
jns
or
movsb
and
lods
mov
repz
add
aam
jbe
mov
or
xchg
and
lea
inc
movsb
pop
dec
out
lock
push
in
sahf
movsl
cwtl
ds
jg
inc
outsl
std
pop
outsb
insb
mov
cmp
out
movsl
pop
pop
jo
push
test
pop
incl
sub
dec
pop
xchg
fsubs
cmpsb
pop
jg
xchg
mov
fstpl
roll
push
mov
inc
push
sbb
cmp
add
or
fiadds
cs
dec
adc
cmp
sbb
xor
fwait
pop
jp
mov
xchg
out
pop
mov
ret
sarl
jae
movsl
mov
xor
rcr
fiaddl
imul
jo
push
cld
add
mov
js
sahf
fistpll
test
add
ret
and
in
aaa
push
jecxz
sub
std
scas
cli
out
popa
pop
rcrb
fldt
add
xchg
jbe
jg
mov
add
jle
mov
test
insl
stc
mov
jae
push
mov
xchg
lods
int3
jl
movsl
push
fwait
imull
mov
sbb
pusha
and
push
add
mov
sbb
sahf
jge
push
push
jmp
clc
cvtdq2ps
outsl
jnp
sub
push
icebp
add
mov
sub
stos
shll
movsl
loopne
mov
sbb
cs
push
push
and
mov
pop
and
sti
in
das
xor
fsub
je
dec
das
or
dec
andb
pop
nop
add
xor
pop
test
rcl
sub
mov
push
add
and
mov
sbbb
mov
mov
sarb
mov
rcll
rcl
enter
add
push
fstp
add
iret
xchg
popf
outsb
outsl
cld
test
mov
das
or
sbb
pop
mov
inc
pushl
daa
adc
mov
xchg
call
pop
xor
test
cmp
stos
add
lods
das
std
sbb
pop
arpl
jns
cmp
sbb
dec
inc
rcll
sbb
inc
xor
sub
or
push
mov
lods
and
mov
aam
mov
sahf
ret
cmp
outsl
dec
cmp
insb
mov
pop
or
inc
mov
out
imul
ret
in
lret
mov
adc
add
fildl
xor
add
stos
out
add
push
mov
push
aas
push
jge
clc
jecxz
jnp
hlt
add
mov
mov
das
xchg
mov
daa
aas
movsl
add
out
stos
push
mov
daa
push
push
movsb
push
ret
and
mov
ljmp
addb
inc
outsl
or
in
jg
mov
or
inc
out
ror
dec
pusha
mov
mov
arpl
rol
sti
pop
xor
out
mov
in
and
pop
dec
roll
inc
rorb
push
rorb
out
add
adc
mov
adc
pop
push
sbb
mov
mov
add
lret
push
xchg
ret
xor
dec
outsl
outsl
fcom
push
mov
or
mov
pop
xchg
idivb
sub
fstpt
test
repnz
outsl
lds
je
add
add
mov
icebp
cmp
cmp
or
mov
mov
and
icebp
jge
ffreep
push
test
push
pop
pusha
aad
adc
xchg
ss
mov
mov
pop
mov
loope
je
mov
popa
inc
add
cmpsb
sub
loopne
and
xor
roll
in
mov
jecxz
testb
dec
lock
icebp
dec
fisttpl
sbb
jne
add
sbb
add
fcoml
mov
pop
pushf
mov
sarl
cli
rcll
jno
and
ret
outsl
xchg
mov
sub
adc
dec
mov
fidivs
or
add
xor
test
and
xor
mov
jle
dec
out
aas
cs
or
add
daa
push
xchg
mov
cmp
fsubl
xor
rorl
mov
mov
dec
adc
mov
ja
lahf
xchg
cmp
repnz
mov
call
out
xor
sbbb
mov
and
ljmp
sbb
cmp
lds
lock
dec
dec
repz
jbe
mov
ja
pop
and
rcl
in
icebp
clc
or
mov
shrb
xchg
inc
cmp
cmp
pop
adc
mov
fdivs
jae
or
sahf
adc
fsts
push
rclb
inc
pop
adc
jge
imul
icebp
hlt
popf
lret
cmc
sbb
pop
adc
clc
adc
pop
arpl
aaa
add
mov
insb
pop
inc
cmp
test
mov
stc
mov
loopne
or
jl
out
dec
mov
or
adc
or
push
sub
xchg
mov
jnp
clc
or
push
mov
addr16
mov
test
scas
lcall
aad
xor
mov
lret
inc
pop
jl
mov
outsb
fisttps
push
and
add
pop
cmp
adc
xor
imul
stos
stos
data16
push
mov
mov
loope
popf
inc
clc
es
cmc
push
mov
jo
lods
daa
adc
and
inc
fs
aad
jo
xlat
push
sub
pop
inc
sbb
inc
adc
dec
cmp
ret
add
push
stc
jecxz
outsb
mov
fisttpl
movsb
jmp
dec
sarl
and
faddl
xchg
fidivs
mov
adc
std
xchg
lock
adc
push
add
pushf
stos
fwait
jecxz
fcmovu
bound
push
fisttpl
clc
test
and
xchg
pushf
push
addr16
jns
mov
outsb
or
mov
jl
and
sbb
enter
sbb
push
and
iret
pop
jp
jb
inc
jge
data16
std
ret
dec
jae
outsb
xor
push
aam
lock
add
cmp
add
outsb
in
xchg
push
ja
push
mov
outsl
pop
sub
mov
nop
adc
jmp
jne
int
iret
xor
mov
std
je
sarb
pop
rclb
sti
mov
int
mov
roll
push
mov
lods
mov
outsb
pop
pop
mov
or
sbb
icebp
xchg
lock
nop
ljmp
adc
jl
or
aaa
ret
mov
js
mov
sbb
inc
ret
stos
ficomps
out
mov
jle
clc
xchg
repnz
data16
jle
dec
call
repz
mov
js,pt
cmc
shll
mov
fwait
push
jo
lock
mov
pushl
inc
xchg
test
sahf
mov
cli
inc
mov
dec
fsubrl
dec
and
fisubrs
xchg
jo
inc
and
sbb
mov
push
add
js
mov
mov
mov
clc
movsb
xor
clc
call
fildll
cld
jne
pop
je
gs
mov
aad
fs
call
movsl
pop
into
mov
sbb
jle
popfw
imulb
imul
mov
pusha
push
push
add
cmp
xchg
adc
mov
das
jg
inc
mov
jbe
xchg
mov
imul
mov
mov
fldenv
decl
mov
sbb
xchg
in
push
fs
or
mov
sbb
call
cmp
pop
loop
mov
mov
clc
xor
push
or
jge
pop
mov
adc
bound
or
mov
icebp
pusha
mov
ljmp
sub
pop
inc
and
ret
shl
xchg
fimuls
push
mov
pushl
hlt
outsl
dec
inc
icebp
xchg
adc
fbld
xor
ret
and
mov
cmp
sbb
das
or
scas
jno
insb
mov
ja
pop
jg
icebp
push
les
fsts
out
jp
mov
add
inc
aam
cli
sub
push
insl
pop
mov
ljmp
pop
or
inc
insb
int
pop
movsl
mov
incl
std
mov
mov
bound
xchg
and
jmp
mov
test
and
or
sbb
out
sti
inc
shlb
in
ud2
sarl
cltd
cltd
mov
xchg
int
lahf
cs
filds
dec
or
or
fs
push
adc
imul
cmpsb
push
out
add
shrl
mov
push
add
pop
test
push
adc
lods
add
rolb
mov
adc
mov
push
push
fcoms
xchg
aaa
inc
lret
add
and
mov
jg
fsubrl
add
sub
mov
xor
rclb
cs
lcall
mov
dec
outsl
adc
and
and
push
push
jecxz
push
aam
sub
lods
pop
push
decl
and
xor
mov
lods
inc
aam
push
mov
pop
mov
mov
xor
outsl
call
mov
sbb
js
mov
pop
clc
mov
push
adc
mov
mov
fcmovnbe
rcr
add
mov
aam
fwait
jmp
fdivs
int3
jge
orl
mov
jle
xlat
xchg
lret
jae
lahf
lods
fcom
adcb
jle
mov
cld
push
or
imul
aas
invd
clc
je
ja
cmp
leave
mov
cmc
sub
cs
sbb
fldt
clc
outsl
aad
or
xchg
pop
pop
or
add
adc
repnz
jecxz
pop
pop
pop
test
pop
and
cs
xor
imul
sbb
loopne
push
ss
mov
fucomi
mov
sbb
rclb
sti
cld
pop
or
sbb
sbb
test
test
shlb
pop
sarb
ljmp
gs
rcll
or
je
mov
subb
repnz
loopne
mov
rolb
fiaddl
dec
xchg
bound
movsl
divb
sub
xor
movsb
adc
push
in
ret
cmp
andb
dec
push
lds
mov
js
mov
push
scas
jmp
jl
sub
dec
dec
test
pop
je
mov
mov
or
push
jg
mov
nop
sub
xchg
xchg
ja
pop
outsb
fisubrs
push
ja
sub
mov
sub
call
inc
jle
call
imul
scas
adc
pop
and
lock
out
dec
adc
mov
mov
lret
push
xchg
clc
aad
cmp
notl
jbe
js
mov
imul
ljmp
dec
mov
mov
cmp
adc
and
fstpl
adc
lods
in
mov
popf
js
pop
into
shrb
mov
stos
mov
into
mov
rcrl
popf
cmpl
movsl
mov
ficomps
sahf
push
sbb
in
call
cmp
jl
sbb
add
pop
add
adcl
mov
aam
insl
dec
jp
fwait
adc
pop
stos
imul
cmc
adc
xlat
int
imulb
pop
out
dec
xor
stos
add
or
fwait
jle
ret
fdiv
sbb
or
or
jge
adc
and
mov
into
or
std
push
or
inc
dec
jecxz
adc
clc
test
or
sub
daa
rolb
jno
pop
fcomps
mov
jno
mov
test
push
xor
push
add
or
in
stos
add
add
adc
or
mov
cvttps2pi
fs
push
jmp
mov
test
pop
push
cwtl
jb
and
loope
adc
pop
clc
call
mov
adc
lahf
scas
popf
loop
push
inc
inc
shlb
or
pusha
or
outsb
or
jl
scas
mov
je
mov
mov
ss
fdivl
faddl
scas
cmp
into
add
mov
or
stos
bound
out
cmp
scas
mov
lods
or
lds
add
ret
inc
add
mov
push
pop
add
test
call
call
popf
or
cmp
in
or
sbb
in
add
and
push
and
mov
fcmove
add
dec
iret
cltd
mov
aaa
mov
nop
out
mov
mov
clc
pop
test
cmp
shl
add
cmp
sbb
sub
push
sbb
ret
or
add
lock
lods
lods
push
lahf
adc
int
loope
fcomip
repnz
inc
ds
fstl
aam
test
pushl
rol
and
stos
imul
pop
aaa
cmc
sbb
popf
fidivl
out
add
sub
lods
icebp
mov
call
mov
int3
shll
test
sub
jmp
sbb
fsubr
std
dec
out
adc
in
out
jecxz
adc
add
addl
cmp
arpl
cmp
js
mov
fiaddl
mov
dec
insl
cld
fldt
inc
or
or
pop
xchg
std
lds
test
aaa
mov
cmp
push
std
fidivs
add
mov
std
scas
call
adc
adc
cmpsb
in
lock
js
sub
pop
mov
pop
inc
jne
inc
mov
mov
aad
or
in
pop
inc
push
bound
cmpsl
loope
mov
in
jns
pop
aam
leave
fwait
push
jge
jmp
loope
ret
mov
add
or
pop
mov
xor
lea
out
cwtl
jle
jge
mov
loope
aas
imulb
dec
or
test
sbb
ss
push
push
pop
lods
xor
and
pop
ret
mul
sub
outsl
jns
andl
cld
mov
ja
sbb
dec
mov
cltd
sti
pop
lock
lcall
pop
push
out
scas
scas
pop
mov
push
or
or
mov
in
adc
nop
sbb
xor
xor
sti
loop
fucomi
push
and
in
xor
movsl
push
clc
sub
mov
sbb
lds
divps
dec
add
stc
shlb
fildll
ds
in
rolb
sbb
lea
pop
lcall
xor
aaa
ficompl
mov
jl
xor
push
cmp
fisubrl
lds
movsl
xor
jle
push
sti
inc
call
shlb
hlt
add
outsl
cmc
and
sub
inc
mov
cmpsb
or
fs
jb
cs
jge
push
sub
sti
sub
jnp
aam
or
push
dec
jo
push
mov
push
mov
cmp
mov
mov
push
pop
lcall
or
outsl
jno
cmc
imul
and
addr16
js
pop
mov
test
loope
insl
pop
mov
negb
xchg
pop
adc
lods
je
xchg
adc
loopne
shll
imul
test
aas
xor
or
lock
mov
sbb
xchg
int3
jg
push
dec
cli
test
push
sub
and
mov
cmp
nop
addb
xchg
js
les
in
sbb
mov
repz
test
jae
cmovno
int
push
int
and
rcl
add
cmp
inc
mov
mov
sub
shrl
pop
mov
and
lods
fldt
cltd
daa
in
jno
fnstsw
mov
mov
jl
inc
dec
hlt
cmpsl
jl
mov
jle
ds
movsl
cs
add
adc
push
jne
cld
inc
cmp
mov
jge
inc
pop
and
popa
and
xlat
xchg
pop
jb
scas
idiv
push
sbb
dec
imul
je
adc
adc
imul
mov
xchg
xchg
jb
cld
add
icebp
pop
xor
pop
inc
mov
paddq
inc
sbb
jne
and
sbb
lret
adc
ficomps
hlt
push
jb
inc
pop
xor
mov
xor
and
mov
aad
mov
mov
aaa
jle
mov
adc
pop
repnz
outsb
outsl
fstpt
pushf
nop
mov
mov
pop
add
and
scas
dec
sbb
mov
lcall
cmp
xor
cltd
insb
icebp
pop
sub
xchg
popa
test
in
in
ja
xchg
fcoms
js
bnd
rcrl
movsl
lcall
jne
mov
and
mov
cmp
xchg
adc
xchg
xchg
pusha
stos
lea
push
lcall
cmp
push
xchg
inc
or
mov
in
les
adc
cmc
inc
hlt
pushl
jge
push
adc
and
jmp
mov
aaa
adc
lock
cltd
test
call
lea
sbb
lea
jg
adc
add
push
sub
sub
fucomip
je
ljmp
mov
add
sbb
arpl
xor
fidivs
clc
movsl
add
ret
dec
xor
pop
and
mov
push
lahf
cwtl
pop
dec
mov
clc
cs
or
mov
loope
pop
pop
push
aas
xchg
xchg
mov
sbb
nop
push
xchg
sub
in
test
loopne
mov
or
or
pop
or
ds
bound
add
lahf
mov
lahf
mov
mov
or
out
call
inc
pop
sbb
jl
xchg
cmp
xchg
ret
ss
add
lcall
mov
int3
pop
es
xchg
mov
outsb
das
pop
test
xor
sbb
sbb
jecxz
jmp
mov
inc
notb
mov
mov
int3
push
lcall
xchg
cmp
dec
loope
jle
cmpsb
sub
test
shr
or
loope
adc
mov
cmp
dec
jecxz
jo
movsl
rcrl
rcr
xchg
mov
xchg
adc
add
lods
std
cmpsl
aaa
jl
mov
adc
and
jp
adc
or
scas
mov
dec
pop
pop
cld
mov
xchg
push
and
in
inc
xchg
sbb
fbstp
add
aaa
rclb
sub
pop
es
sbb
add
mov
fnstsw
inc
dec
inc
mov
loop
test
push
mov
sub
inc
and
sarb
push
or
push
pop
shr
cmp
pop
std
nop
sub
xor
cld
push
andb
jno
shl
or
scas
push
pop
outsl
hlt
popa
stos
sub
scas
cltd
mov
dec
and
xchg
mov
xor
add
aam
mov
cld
mov
cmp
loop
add
adcl
popa
int3
pop
mov
sub
fwait
mov
sbb
mov
or
in
lcall
mov
loopne
adc
cs
sub
sbb
cmp
push
push
iret
subb
ljmp
lahf
rorb
imul
or
and
addl
push
aam
mov
lea
push
in
ljmp
fistps
cs
fdivrl
inc
xchg
fnstsw
sbb
push
lea
stos
push
in
test
fadds
popa
sub
incb
mov
loope
mov
lret
ja
pop
and
unpckhps
pop
xor
shll
insl
jbe
jae
fstl
xchg
mov
push
test
in
out
loopne
adc
push
xor
xchg
add
sbb
push
jne
inc
std
fistps
nop
xchg
mov
mov
pop
and
push
cmpl
mov
cmp
cmp
loopne
movsb
or
or
cwtl
popf
sub
dec
or
cltd
sbbb
daa
mov
lcall
popa
mov
ljmp
fsubl
mov
imul
shrb
mov
fnstsw
add
cli
movsb
pop
fwait
rclb
dec
pop
mov
mov
and
mov
test
mov
lods
sub
xchg
jno
adc
mov
push
sub
inc
add
sub
push
fwait
arpl
mov
stc
sbb
addr16
into
inc
and
push
sbb
jne
data16
add
stos
pop
or
push
or
sti
mov
movsb
mov
adc
or
in
dec
adc
inc
jmp
mov
bound
out
popf
and
popf
aas
je
stos
jle
pop
dec
mov
or
push
sbb
jne
pusha
imul
and
xor
inc
gs
add
mov
shll
xor
mov
push
adc
jge
test
xchg
lcall
lock
ret
cld
pop
das
insl
arpl
xchg
cmp
inc
imul
pushf
push
push
andl
dec
inc
mov
sti
jno
push
sub
xorb
mov
imul
aad
imul
jge
push
pop
dec
fs
sti
outsl
cmp
xchg
fnsave
or
or
mov
addr16
xor
movsb
lret
push
nop
ret
push
lcall
mov
mov
test
shll
fistl
insl
adc
dec
jle
xchg
mov
mov
sub
test
adc
xchg
mov
inc
push
jae
mov
mov
inc
adc
adc
cwtl
into
enter
cwtl
xor
sbbb
lret
pop
sub
pop
sub
mov
and
movb
iret
adc
cmp
outsb
pop
inc
dec
pop
inc
inc
int
xchg
adc
push
inc
insl
ja
scas
mov
lds
frstor
sbb
sarb
mov
popf
sub
pusha
mov
cmc
pop
or
cmp
mov
lock
fwait
sysenter
or
leave
push
out
orb
inc
mov
dec
mov
test
pop
mov
lret
mov
rcrl
adc
push
movmskps
rcrb
jecxz
push
mov
pop
mov
sbb
jne
mov
cs
imul
inc
sbb
cmp
push
pmaxub
pop
adc
stos
incl
pop
sarb
and
cmp
out
ficoml
adc
ds
jecxz,pn
aad
pop
div
push
cs
sahf
aaa
sbb
mov
sbb
int3
pmullw
or
iret
mov
sbb
lea
pop
sbbl
sub
leave
adc
pop
mov
push
fldl
test
mov
stc
and
and
testl
fs
jmp
jnp
jns
mov
lea
lods
pop
add
scas
cmp
pop
sarl
sub
fstpl
sahf
xchg
ret
inc
dec
mov
testl
inc
or
rcrl
inc
hlt
nop
add
nop
push
push
mov
call
lea
jno
xor
rcrb
cmp
scas
sbb
stc
and
xor
mov
pop
stos
cwtl
inc
test
add
add
pop
push
cmp
jnp
mov
fcmovnu
pop
stos
inc
or
xor
mov
mov
pop
pop
cld
inc
mov
xor
cmpsl
mov
push
jns
add
and
mov
mov
in
inc
fcomi
cmpsb
call
pop
mov
mov
movsb
ret
aas
xchg
xchg
and
popa
mul
inc
or
jp
jle
rcll
loop
stc
add
lock
push
cmp
pop
push
pop
roll
loope
ja
push
pop
js
loopne
pushf
insl
sub
jo
mov
and
aam
and
jbe
je
lahf
in
adc
pop
js
sub
jle
mov
push
pushf
nop
dec
jne
into
or
xor
adc
sbb
paddq
push
sti
test
cmp
ret
or
cmp
lods
scas
sbb
mov
int3
xor
sbb
mov
pop
xlat
pop
inc
nop
add
push
fisttpl
cmp
es
test
icebp
aaa
mov
push
sbb
xor
jp
ss
dec
lods
dec
push
loop
mov
enter
sbb
dec
xchg
push
jp
aam
std
xor
push
call
push
sub
and
mov
clc
jg
aam
nop
dec
push
popf
sbb
jno
xchg
pop
push
mov
shr
ja
fidivrl
pop
adc
iret
adc
xor
testb
lock
imul
mov
mov
das
fdivr
es
fistpll
mov
in
popl
jmp
push
test
cmp
rcrl
js
shll
sub
push
adc
push
sbb
and
movsl
jae
dec
mov
xchg
xchg
mov
xchg
pop
cmc
ret
jb
test
je
cli
fisttpl
dec
dec
or
inc
mov
add
inc
mov
out
dec
ret
mov
stos
in
xchg
mov
pop
mov
es
fldt
dec
leave
inc
sbb
pop
pop
je
std
mov
pop
dec
mov
push
inc
notb
das
popa
clc
or
or
mov
mov
mov
inc
addl
inc
jge
jnp
inc
rcll
insb
mov
jno
ret
aaa
jp
hlt
mov
inc
outsl
dec
fs
jae
ds
push
enter
jmp
sub
mov
in
lea
bound
in
and
les
push
mov
cmpsb
sbb
addr16
test
aaa
jo
add
xchg
cwtl
push
adc
mov
shr
inc
negl
mov
dec
popa
add
or
push
add
xchg
mov
and
inc
pop
sub
pop
mov
ss
fcomps
add
inc
idiv
cmc
lcall
inc
push
or
imul
ds
sti
daa
dec
xchg
std
cltd
outsb
mov
arpl
cltd
xchg
add
push
test
pushf
test
and
jbe
aaa
dec
pop
cli
pop
arpl
sarb
into
cmpl
outsl
jle
das
cld
sub
xor
fisubrs
cld
mov
test
xchg
xchg
push
orb
daa
and
mov
xor
jnp
adc
daa
or
aaa
jbe
push
add
and
outsb
cmpsb
test
stos
jl
sub
mov
aas
aaa
push
xchg
pop
push
sbb
mov
aas
bound
and
mov
mov
add
xor
rcl
jg
in
inc
dec
test
sbb
add
popf
lcall
push
movsl
gs
cmp
dec
adc
sub
es
pop
pop
push
popf
xor
cld
scas
fwait
lock
sub
mov
jge
pop
add
orb
addl
rcrl
push
xlat
and
bnd
add
ds
mov
jno
cmc
cwtl
ret
test
add
leave
lcall
les
and
jp
add
and
ds
mulb
outsl
loopne
dec
jnp
pop
js
or
sbb
popa
cmp
mov
fsts
fisubrs
aaa
ljmp
stc
add
adc
ja
pop
outsb
into
inc
lds
sbbb
repz
test
fcompl
mov
push
adc
and
repnz
cmpb
mov
inc
fucomp
push
fists
or
fmuls
mov
mov
or
hlt
lods
sub
out
bound
adc
mov
push
add
mov
popf
add
loopne
pop
fmuls
or
repz
inc
mov
stos
inc
out
cmpb
mov
icebp
scas
icebp
popf
bound
pop
rcl
inc
mov
lea
daa
cmp
fwait
mov
je
mov
addl
fisubrs
mov
jne
adc
mov
insb
sbb
cmp
add
inc
lret
sbb
sub
aas
shll
jecxz
loop
pop
fstpl
outsb
cmp
sbb
adc
addr16
xchg
sbb
pop
rcrl
stos
popa
leave
jecxz
push
dec
aaa
std
pusha
mov
popl
jg
cmp
sbb
das
rorb
je
rorb
fucomi
push
dec
add
add
das
movsb
mov
imul
enter
test
hlt
data16
or
std
push
lock
xlat
xchg
pop
or
rolb
sbb
xor
aaa
insb
pop
dec
jbe
mov
xor
pop
mov
int
js
or
cli
mov
aad
and
dec
inc
push
mov
test
shlb
addl
dec
cli
incb
jne
ss
jle
jg
out
roll
add
pop
mov
jo
mov
mov
int
movsl
dec
push
int3
mov
dec
push
jge
push
push
pop
das
js
and
aas
imul
cmp
inc
adc
iret
push
out
ds
rclb
call
mov
adc
insb
loop
test
test
and
imul
inc
enter
mov
fbstp
push
jo
xor
test
arpl
insl
push
jae
paddusw
ljmp
cwtl
lret
add
add
cmp
mov
adc
lret
and
sbb
outsl
movsb
hlt
cld
lahf
pop
sub
xorl
out
bound
sub
jo
add
sbb
sbb
aas
mov
dec
pushf
add
fdivl
adc
pop
mov
jne
mov
popf
adc
and
jmp
push
lods
in
xor
pop
xor
mov
mov
push
je
leave
jno
jnp
stc
subb
and
cmpb
cmpsl
cld
mov
mov
mov
ffree
sti
in
outsb
pmovmskb
filds
inc
in
scas
dec
orb
xor
popf
and
pop
mov
rep
insl
sbb
xchg
push
mov
fidivs
inc
iret
mov
mov
mov
imulb
das
pop
daa
or
add
jb
xor
ljmp
clc
inc
fcomp
scas
sbb
ret
dec
es
add
or
decb
sbb
in
push
lahf
mov
cmp
stos
lcall
xor
inc
das
mov
inc
add
sub
push
add
pop
mov
xor
mov
aam
cmp
push
addb
icebp
mov
mov
lret
xchg
jmp
sub
adc
imul
and
lcall
ja
insl
loop
or
add
loop
rcll
or
fldl
dec
cmp
xchg
inc
loopne
ret
mov
daa
push
js
jmp
pusha
jmp
lock
int
sbb
cwtl
lock
daa
repnz
xchg
arpl
decl
or
add
sub
out
mov
inc
adc
sub
xor
add
imul
mov
push
push
stos
push
mov
xor
xchg
xchg
fidivrs
pop
popf
mov
inc
mov
adc
lea
call
add
or
pop
jl
daa
adc
add
mov
mov
push
ja
lods
fstl
mov
roll
std
fcomps
pusha
cmpsl
mov
sbb
adc
adc
mov
pushf
into
sbb
mov
loop
mov
outsl
lds
cmp
sub
pop
loopne
icebp
lret
out
mov
dec
xor
rorb
jp
jne
sub
sbb
incl
jl
fimuls
fsubrs
shl
xor
fstpt
push
cltd
fisubs
cmp
popl
je
pop
cmp
mov
divl
pop
mov
adc
data16
hlt
push
rcrl
dec
pop
xor
fld
jbe
adc
jecxz
add
mov
cmp
push
inc
sbb
cmc
jmp
lods
sarb
push
lods
pop
mov
add
sbb
cltd
in
cmp
dec
das
and
and
mov
sub
xor
aam
ret
or
stc
adc
dec
jp
cmc
mov
ja
loope
push
push
lcall
sub
inc
pop
ficoml
jmp
cld
loopne
push
sbb
shlb
stc
adc
mov
js
mov
jmp
inc
inc
call
inc
adc
inc
test
pcmpeqd
xchg
arpl
mov
ds
loop
adc
sti
cmpsb
jge
push
sbb
icebp
in
jg
push
test
pop
clc
jl
movsl
scas
in
test
xchg
mov
test
mov
lock
add
jo
mov
add
cmpsb
sub
sub
mov
cmpb
dec
std
inc
vmovaps
inc
aad
js
lcall
dec
push
imul
popa
adc
push
lahf
dec
add
lea
test
aaa
in
sbb
dec
adc
cmc
fnstsw
mov
and
or
int3
adc
sbb
push
mov
cli
sub
cmp
sti
mov
cmp
mov
add
sbb
cltd
dec
mov
add
cmc
fimuls
push
imul
push
sbb
or
pushf
rorl
mov
cmp
fcmovb
enter
stos
fs
js
jo
pop
add
cmp
push
inc
jmp
dec
lods
call
outsl
pusha
cmp
rol
xor
bound
lock
adc
fcmovne
cmp
mov
adcl
or
orl
mov
jge
movsl
orl
lods
das
outsl
sbb
stos
repz
mov
pop
sub
or
cld
out
sub
inc
mov
lock
pusha
jns
jno
fucomi
jp
pop
xorl
pop
xor
push
push
mov
out
or
sbb
push
loope
dec
fdivs
aaa
imul
jle
or
push
arpl
dec
iret
cld
xchg
cltd
mov
or
push
lahf
jno
ja
pop
or
pop
cs
xchg
mov
adc
das
xlat
mov
shrl
mov
es
pop
push
insb
fcoms
in
jo
popf
and
pop
incl
mov
push
sbb
jb
lret
ds
arpl
pushf
pop
sarl
mov
pop
outsb
add
mov
jle
push
add
jno
test
adc
in
fsubrs
sarl
dec
mov
rol
and
lahf
xor
or
xchg
test
inc
and
pop
cld
add
std
push
rcl
push
jbe
popa
fsubl
sub
dec
aad
and
lock
daa
arpl
std
js
xchg
fdivrs
cmp
push
movsb
cmp
and
scas
rolb
and
push
xchg
jb
cmp
or
lods
dec
outsl
dec
pop
sub
aam
ds
mov
jbe
gs
movsb
cmp
mov
xchg
aaa
jl
ss
test
mov
repz
call
mov
cmc
sti
lods
push
sbb
dec
into
and
xor
movsl
mov
imul
jb
mov
jnp
je
negl
outsb
pop
aam
mov
gs
cmp
or
xchg
shlb
or
je
stos
in
mov
rclb
std
inc
arpl
jbe
xlat
inc
cmp
cmc
dec
ss
cltd
cmc
jle
pop
insl
cmp
stc
jmp
sub
outsl
aaa
mov
pop
xchg
jg
sahf
jge
push
inc
test
sub
std
call
je
arpl
inc
xor
or
enter
mov
cmpsb
pop
sbb
test
xchg
jmp
xor
inc
lea
lods
cmp
orb
inc
jp
push
sbb
enter
mov
or
mov
jae
aaa
pop
push
sub
testb
inc
jmp
jbe
test
dec
jbe
aam
push
cmpsl
xchg
nop
hlt
fsubl
fsubs
das
mov
sti
inc
subl
cmp
in
call
in
sub
push
sub
mov
dec
pusha
in
jle
ds
jns
outsl
fdivrp
test
or
fs
sub
add
and
aam
jl
mov
scas
cmp
cmp
pop
shlb
cwtl
outsb
test
out
pop
aaa
lock
jmp
push
inc
mov
arpl
add
mov
rorl
push
jae
mov
fcmovnbe
iret
lods
fcoms
scas
cmc
push
jne
inc
hlt
push
out
push
push
jp
ss
add
xor
add
loope
out
aas
into
sahf
adc
movsb
inc
inc
pusha
or
cmp
dec
hlt
xchg
pushw
and
rorb
icebp
loope
mov
pop
sahf
mov
mov
es
mov
inc
or
or
loop
dec
pop
fidivrs
add
jb
mov
aam
inc
fs
jne
mov
dec
inc
insl
imul
pop
cli
inc
cmc
push
sub
pop
cli
movsb
flds
jg
adc
or
add
mov
add
fisubl
mov
ljmp
sub
jae
lods
test
in
lods
popl
adc
test
sbb
cs
push
clc
popa
test
inc
pop
js
xchg
mov
xchg
pop
mov
push
add
or
push
and
pop
cmp
data16
out
int3
sbb
add
sbb
push
out
ds
mov
mov
sbb
xchg
popf
dec
out
in
popf
add
test
addr16
add
mov
sbb
and
enter
scas
and
or
mov
sarb
inc
pop
push
sbb
xchg
adc
adc
mov
jp
dec
sub
fldt
flds
ljmp
xor
adc
aad
pop
pop
mov
pop
es
ss
mov
aaa
ret
int
push
aam
sub
mov
rolb
xor
jge
call
jno
mov
ss
cmp
jge
dec
adc
add
ret
inc
add
mov
icebp
call
scas
pop
inc
push
mov
mov
adc
xorb
push
lock
sub
inc
mov
ret
out
push
or
push
les
stos
jg
addl
xchg
and
insb
loop
mov
xor
dec
outsb
ljmp
sbb
fmull
das
push
fs
das
mov
add
or
in
sub
pusha
test
sbb
fistl
cwtl
and
mov
inc
cmp
cltd
sti
das
or
jb
scas
mov
into
push
das
adc
fistpl
cld
cmpsb
cmpsb
or
es
fwait
in
and
jne
insl
imul
hlt
pop
mov
inc
mov
pop
rolb
xchg
cmp
cmp
dec
push
imul
pop
add
xor
sub
push
sub
cmp
push
ds
shrl
shrl
sub
mov
aad
mov
mov
divb
loopne
adc
aad
aaa
shrl
or
fwait
sti
out
pop
push
into
enter
pop
out
inc
rclb
mov
sub
jo
sub
inc
pop
jle
ja
or
mov
sub
sub
pop
vcmpps
loopne
cltd
or
xor
iret
mov
and
cmp
inc
lea
lods
cli
fs
ja
add
xor
lock
sbb
fidivrs
inc
xor
cmp
push
inc
adc
cmp
pop
mov
or
pop
popf
jne
xor
xor
das
rorl
push
aaa
sbb
add
or
clc
mov
leave
mov
sti
orl
repz
mov
std
add
mov
jmp
xor
dec
mov
push
fildl
addr16
fldt
sbb
imul
sub
fwait
inc
mov
sbb
jmp
pop
pushf
jnp
insb
push
pop
add
mov
or
or
lock
mov
ljmp
pop
sub
call
push
icebp
aam
xor
or
int3
push
test
lret
lock
insb
pop
jl
push
std
daa
adc
decl
pop
decb
or
jne
test
pop
sub
jne
jo
sub
dec
sbb
rolb
adcb
pop
jl
fstpt
shll
sar
xor
shlb
mov
or
cs
rorl
sub
or
loopne
pop
and
push
cld
dec
adc
mov
aaa
adc
and
ljmp
inc
sarl
int
inc
inc
into
xchg
jb
push
js
adc
and
daa
mov
adc
fildl
adc
pop
jne
and
push
jecxz
add
and
jge
sbb
mov
js
jp
flds
ljmp
mov
adc
dec
mov
imulb
lret
sahf
and
faddl
mov
pop
adc
push
shrb
subb
adc
jns
int
dec
push
adc
xor
aaa
jle
mov
ss
lods
xchg
pop
popf
in
stc
adc
call
daa
jno
lret
icebp
mov
fcmovnbe
hlt
push
jle
cmpsb
popf
xchg
add
out
or
mov
mov
push
and
mov
stos
sbb
test
push
mov
jbe
inc
jp
js
dec
jo
xchg
movsb
add
dec
sbbb
mov
ds
and
in
xor
ja
or
add
jp
add
push
lret
sub
roll
int
jmp
mov
push
mov
push
lock
mov
fsubrs
fisubrl
outsl
orl
jne
mov
add
jne
push
icebp
inc
push
inc
add
rorl
mov
sub
pop
scas
ljmp
xchg
sbb
sub
lahf
mov
cmpsl
xor
adc
insb
adc
fwait
testb
mov
gs
mov
sti
scas
cmp
clc
pop
pop
mov
jecxz
xor
fists
loop
imull
mov
pop
enter
mull
cmc
cmpsl
or
movsb
add
ja
aam
pop
dec
mov
jo
sbbl
scas
call
push
jae
mov
xchg
push
jne
call
lcall
xor
in
jg
std
mov
hlt
inc
pop
sbbb
jge
loopne
and
cmp
push
pop
dec
leave
and
mov
add
pop
addb
ret
push
cmpb
mov
add
ret
jmp
mov
mov
mov
sbb
aaa
mov
imul
mov
rolb
pop
imul
out
adc
enter
pusha
or
lods
hlt
lea
inc
imul
push
enter
aam
sbb
jl
cmp
outsl
jmpw
fistpll
mov
jmp
cmp
pop
adc
nop
inc
cmp
adc
loopne
and
sarb
dec
or
adc
outsl
hlt
xchg
adcb
xor
add
cmpsl
sti
ret
inc
or
cmp
mov
addr16
call
cmp
ret
shlb
or
orb
or
mov
sub
pop
pop
push
shlb
sub
xor
jb
sbb
dec
adc
cmp
cmpsl
out
nop
imul
test
push
dec
outsb
fsts
xor
icebp
mov
xor
jo
adc
mov
rcrl
pop
aas
and
sti
pop
add
mov
cmp
or
and
imul
mov
adc
popf
es
or
andb
popa
test
bswap
inc
sbb
dec
je
aas
jge
mov
popa
das
xchg
mov
adc
shrl
pop
sbb
pop
outsb
psrlw
cld
jecxz
popa
shll
rcr
loope
outsb
mov
add
adc
push
jnp
outsb
test
xlat
pop
dec
sti
dec
and
mov
add
fistps
jno
add
fldt
jns
sbb
cmp
mov
fdivrl
test
mov
mov
xor
xor
aad
xor
fwait
inc
add
cmpsl
test
mov
and
lcall
movsb
fwait
ja
inc
xchg
xchg
sbb
or
xchg
outsl
inc
cmc
pop
lret
stc
inc
es
cmp
and
cli
test
or
cli
data16
inc
hlt
jp
add
xchg
daa
lods
aad
ss
inc
mov
and
in
fists
add
cltd
aas
movsl
or
lea
and
insb
mov
sti
movsl
lock
and
iret
mov
insl
sbb
movzbl
loope
adc
dec
pop
fucompp
push
rcll
imul
inc
mov
ds
sbb
inc
or
mov
push
xor
lds
mov
ficompl
lcall
push
sbb
popa
push
js
fdivrs
addb
lods
jmp
xchg
shl
pop
insb
xor
cwtl
cltd
pop
imul
xchg
pop
fists
adc
push
in
push
int3
push
inc
inc
pop
call
sub
xchg
jg
add
ss
pushf
dec
or
add
movsl
mov
and
inc
ss
adcb
add
mov
in
fadds
mov
pop
ja
sub
sahf
clc
mov
dec
test
mov
inc
xor
sbb
mov
stos
pop
fcomip
ds
jge
js
mov
or
call
imul
or
xor
loop
and
xlat
leave
shlb
into
inc
mov
mov
or
push
in
jmp
jbe
test
repnz
orl
sub
mov
subb
pop
mov
jg
insl
cmpsl
pop
dec
add
bndldx
bound
mov
add
sbb
inc
push
imul
cmp
sub
xor
arpl
xchg
cmpsb
jbe
inc
in
pop
sbb
xor
inc
lahf
pop
push
or
out
sub
and
jp
mov
mov
cmpsl
mov
loopne
cmpsb
and
ret
and
aam
pop
leave
xchg
xchg
pushf
in
cs
add
sub
push
jp
pop
pop
pusha
jb
xlat
fisttps
lcall
sbb
pusha
mov
inc
bound
jmp
add
enter
aad
jne
jnp
stos
in
lea
mov
sbb
int3
pop
bndldx
or
pop
xchg
push
js
pop
and
jb
or
lock
mov
add
into
sbb
adc
bound
outsb
test
je
jg
icebp
mov
cmp
out
hlt
cmp
dec
aad
adc
out
std
adc
lcall
mov
xchg
push
or
arpl
fbstp
and
sbb
mov
inc
jne
shl
inc
jmp
xor
iret
push
jmp
jmp
mov
mov
cmpsl
into
mov
sub
push
popf
js
sbb
sti
mov
pop
xor
and
lock
loopne
sbb
add
xorb
cwtl
and
sub
sub
test
sub
andl
sbb
stos
push
shrb
push
mov
stos
mov
sti
cwtl
add
cld
xchg
xchg
loop
sub
fimuls
pop
cmp
fistps
inc
repz
push
pop
pop
add
fucomi
icebp
lret
jl
push
fsts
out
push
xchg
push
xor
mov
in
ret
lods
jmp
shl
scas
cmp
dec
ja
in
adcb
or
add
sbbl
inc
idivb
js
sub
push
mov
sbb
sbb
cli
btc
dec
mov
mov
lds
pop
sub
rcrl
add
notl
incb
or
hlt
cwtl
push
dec
rclb
cmp
mov
enter
subl
inc
xchg
stos
or
ljmp
rolb
push
cwtl
push
or
pop
or
daa
adc
sbb
and
lods
ret
lods
add
rorl
js
dec
push
aad
and
pop
adc
aam
test
and
fldt
mov
movsl
imul
cmp
pop
daa
add
sete
or
stos
jmp
insl
insb
xlat
loopne
rcrb
clc
jl
or
push
stos
mov
mov
sub
mov
pushf
push
sub
xorps
push
mov
push
cmp
mov
dec
hlt
xor
dec
mov
cwtl
lea
mov
lret
aam
push
jmp
stos
mov
pop
test
cmp
xor
push
add
jg
movsl
fcompl
jmp
inc
cltd
mov
mov
enter
rcrb
test
push
les
out
stc
mov
or
dec
jns
imul
mov
incl
cmp
fdivr
push
xor
pop
sub
jecxz
aad
mov
ret
pop
xchg
pop
lahf
je
cs
xchg
jl
cmp
lds
sub
imul
cmp
fs
push
mov
call
or
les
pop
movsb
push
leave
cltd
inc
aad
nop
inc
xor
jmp
inc
add
push
addr16
test
pop
xchg
xor
push
xor
ffreep
outsb
dec
push
adc
sub
nop
and
mov
mov
xchg
ljmp
sbb
pop
mov
js
out
mov
cmc
fildl
call
and
pushf
sbb
rcrb
lret
js
aaa
inc
jecxz
jge
push
stos
arpl
cmc
lcall
shr
adc
das
daa
mov
lods
test
test
mov
cli
mov
es
rorl
add
inc
int3
das
jo
in
ret
fnsave
xchg
xor
jbe
inc
scas
loope
in
bnd
jle
sbb
cmovae
shll
rclb
add
push
shlb
inc
cmp
adc
popf
inc
adc
xchg
mov
inc
imul
pop
mov
jno
stc
and
arpl
roll
leave
and
xor
adc
insl
push
popf
push
push
push
jbe
and
loopne
add
add
lds
pop
cld
sbb
shlb
pop
movsb
adc
das
push
lock
stos
sub
out
lahf
sbb
xchg
jno
int3
add
sbb
mov
mov
push
mov
sub
pop
cmp
push
inc
cmpsl
adc
jg
mov
fnstsw
push
adc
jle
xorb
mov
leave
cmpsl
lds
xchg
in
sub
inc
push
in
xchg
in
into
add
out
cli
das
or
push
shrb
push
xor
add
mov
push
jnp
xchg
jle
pop
jg
dec
subl
inc
push
mov
sub
cli
mov
push
mov
cwtl
jg
inc
jae
inc
fwait
lahf
call
cltd
cmp
pop
pop
and
aad
pop
add
insb
inc
sti
push
subb
push
and
lods
mov
in
jae
lea
cmp
je
dec
inc
or
jl
mov
cmp
and
pop
out
faddl
or
or
inc
arpl
mov
movsl
push
add
lss
in
faddp
fcomps
lods
mov
dec
ss
lahf
adc
push
mov
sub
dec
inc
cmp
sbb
shrb
push
mov
or
stc
mov
inc
pop
mov
fisubrs
shrl
divb
or
je
pop
inc
orb
lods
jl
inc
sbb
test
ficompl
sti
adc
jnp
insb
fstpl
loopne
jg
mov
pop
jmp
dec
es
mov
and
inc
pop
les
add
jp
xor
mov
cld
cmp
arpl
sbb
aaa
lods
mov
add
push
fistpll
loopne
mov
mov
jo
cmp
dec
or
les
inc
sub
mov
add
sbb
pushf
fadds
sti
in
nop
dec
mov
or
filds
aam
arpl
aaa
adc
aad
mov
sbb
ror
cmc
xor
xor
cmp
aam
loope
or
outsl
addr16
sub
adc
pop
clc
ja
and
stos
ss
add
xlat
mov
or
cmpsl
adc
xor
cmpsl
addr16
xor
ja
sarb
outsl
inc
jno
nop
pop
cmp
cmp
cs
mov
adc
jge
cmp
jae
in
rcr
adc
in
sub
dec
shrl
clc
push
cltd
fidivl
mov
inc
push
lea
push
xchg
imul
xor
jp
loop
mov
mov
add
add
loopne
mov
cmp
dec
sti
test
sub
fisubrl
fidivrl
scas
gs
jmp
out
dec
jecxz
mov
fcmovu
fidivrs
fisubl
mov
negb
adc
jnp
pop
push
xchg
cmpsl
add
xor
pop
inc
sbb
inc
push
jl
cmp
add
aas
xor
jg
push
js
sub
lret
adc
outsl
mov
stos
or
xor
sahf
adc
add
dec
sbb
mov
sbb
sub
cmp
mov
xchg
push
xchg
mov
loopne
push
xchg
sub
in
add
std
nop
or
cmp
mov
sub
mov
fstpt
addb
outsb
dec
add
lock
jno
xor
aaa
lock
jecxz
out
outsb
or
jne
adc
lock
fadds
dec
popa
pop
adc
aad
mov
xchg
xchg
cmp
dec
dec
popf
push
outsl
mov
jle
out
xchg
ds
ret
xor
jl
inc
sbb
out
lods
or
or
mov
scas
and
jp
fimull
mov
push
fistpll
lret
adc
in
or
int
or
cmc
pop
xchg
rol
push
ja
popf
and
inc
bound
add
repnz
movsb
imul
jle
add
xchg
stc
and
shr
mov
and
and
jnp
sbb
cmpb
pop
inc
loope
out
jne
icebp
lret
test
push
ret
adc
adc
push
xor
cmp
fistpll
pop
xchg
and
mov
or
lea
imul
mov
or
xor
sub
pop
push
add
mov
add
push
jge
and
push
cmpsl
add
loop
xchg
icebp
cmp
jno
dec
in
gs
mov
or
cmp
jl
push
loop
out
mov
mov
mov
cmc
test
std
adc
adc
in
out
mov
or
mov
xorb
mov
cs
jg
andb
pop
scas
xor
mov
cli
sub
insb
xchg
pop
pop
orl
aad
scas
in
sub
je
inc
lods
cmc
fs
movsb
jb
int3
frstor
out
test
lahf
fsubr
sbb
mov
popa
pushf
ljmp
outsb
mov
adcb
jns
push
clc
pop
jp
movsb
popa
add
mov
xor
idiv
aaa
fucom
pop
lret
sbb
or
cld
jecxz
mov
jns
dec
mov
mov
fistpll
mov
in
jb
add
ret
add
leave
xor
jmp
testb
mov
inc
mov
aaa
push
inc
addb
mov
pusha
std
cmpsb
pop
call
or
add
sbb
scas
mov
lret
and
xchg
mov
jp
inc
mov
cmp
mov
psllw
test
in
scas
stos
jbe
push
lret
inc
cmp
dec
cmpsl
push
ret
clc
testb
jp
push
pushf
adc
lods
sub
addr16
sahf
hlt
jp
hlt
mov
addr16
adc
push
sahf
andl
mov
cltd
push
adc
sub
adc
xor
fdivrl
or
cld
push
ret
icebp
icebp
pop
jl
inc
jl
mov
sahf
push
and
cmp
sbb
aas
rcrl
or
xchg
sub
inc
daa
jmp
cld
add
aas
push
ja
flds
js
jle
les
dec
ror
push
daa
icebp
inc
in
xchg
aam
mov
je
add
dec
or
xchg
sbb
jne
stc
inc
inc
pusha
sbb
jno
sbb
es
xor
mov
xor
mov
mov
cmp
jg
dec
arpl
mov
popf
or
add
push
pop
inc
and
pop
sbb
pop
fistpl
lret
in
mov
adc
sbb
pop
cs
xlat
int
mov
daa
xchg
filds
or
dec
cmpsl
out
es
push
test
dec
xchg
cmc
pusha
push
push
jbe
and
ret
and
mov
push
cmpsb
das
sbb
adc
inc
cmpsb
aad
mov
jo
insb
inc
jp
es
gs
inc
mov
sub
repnz
or
sbb
or
dec
sbb
add
pusha
mov
xchg
inc
int
jno
add
and
xchg
test
sbbb
stos
pushl
insb
xor
mov
push
cwtl
jb
scas
jge
xchg
inc
test
mov
ljmp
mov
pop
scas
cmp
xlat
xor
jbe
pop
jp
movsb
jle
sub
aaa
sbb
mov
mov
shrl
sbb
adc
fbld
pop
sbb
mov
sub
inc
repnz
addl
fstpt
push
sbb
sbb
lock
lret
xor
jle
pop
push
xor
jns
mov
sub
negl
pop
cs
shll
test
aad
mov
mov
mov
iret
xchg
sbb
insl
shrl
push
cltd
mov
loop
ss
or
fdivrs
push
shl
jae
dec
inc
mov
jp
test
jecxz
jno
xchg
and
push
dec
jg
cmp
sbb
imul
scas
in
in
sti
in
out
add
insl
xchg
inc
inc
adc
aaa
repnz
add
out
ret
clc
outsl
jg
cmpsl
inc
test
jmp
ret
xchg
stos
push
cmp
data16
rorl
bnd
or
lret
mov
jp
int3
scas
and
push
xchg
xor
lahf
outsb
mov
pushf
lods
loope
pop
inc
push
loop
push
shll
sub
filds
add
jg
shrl
lock
or
outsb
jo
adc
push
dec
mov
sub
pushl
popa
push
in
fistl
fsubrl
fisubl
daa
ljmp
cmp
pop
mov
cmp
std
mov
jg
adc
loop
std
mov
or
sbb
cmc
pop
inc
lock
push
push
adc
les
xchg
lock
push
xor
es
jb
decb
and
sub
lds
out
and
jae
rolb
arpl
push
in
gs
lods
push
test
or
mov
lods
rcrb
aaa
pop
xchg
xchg
lcall
jae
add
mov
mov
inc
ljmp
into
push
into
sbb
push
push
cmp
dec
loope
jge
push
add
insl
sbb
sub
mov
mov
in
nop
cltd
aas
dec
mov
fistl
test
pop
insb
lods
adc
pop
addl
pop
ret
sub
idivb
fistpll
je
and
ljmp
pop
pop
pop
mov
loope
sbb
pop
mov
pop
jae
pop
adc
pushf
adc
dec
pusha
adc
add
adc
inc
adc
das
mov
rclb
xor
mov
popf
dec
pop
inc
pop
jo
scas
popa
into
add
add
dec
mov
xchg
mov
jbe
jbe
or
mov
xchg
jb
add
inc
pminsw
movsl
xchg
xor
ffree
pop
ret
jo
push
mov
inc
add
sbb
dec
dec
sbb
adc
add
xor
into
lds
inc
out
hlt
mov
mov
test
inc
jle
jecxz
xchg
adc
push
xchg
in
mov
loope
jb
jp
add
stos
mov
daa
mov
cs
mov
jnp
cli
pop
rorb
or
pop
mov
push
xchg
aas
rclb
jb
pop
and
les
mov
fistl
adc
jecxz
or
fbld
lea
sbb
nop
pop
stos
loop
imul
clc
fisttpll
outsb
sbbb
jnp,pt
push
mov
insl
cmp
inc
inc
out
shrl
lods
jbe
xor
movsl
inc
mov
inc
push
push
push
add
add
push
and
or
sbb
aam
xlat
jl
push
inc
jno
push
js
lock
or
sbb
adc
add
pop
jbe
rcrl
sub
adc
aas
pop
pusha
ja
jle
mull
mov
adc
mov
loope
add
pop
push
or
or
adc
jmp
sbb
cmp
dec
fs
divb
movsb
pop
shll
addr16
in
pop
ret
lea
mov
add
jl
mov
mov
not
incl
not
mov
sbb
push
ret
cmpsl
ret
flds
mov
lret
ljmp
inc
inc
faddl
push
sbb
xchg
rolb
push
fsubrl
imul
ss
imul
push
adc
jbe
int
mov
loop
jo
sub
stos
xor
imul
ljmp
dec
mov
dec
push
or
ss
add
loope
add
scas
adc
cwtl
aad
and
xlat
xor
ss
sarb
sti
incl
mov
lret
addr16
push
cmp
push
inc
sub
pushf
in
std
sbb
xor
push
xchg
fldl
pop
sbb
mov
loop
or
das
fwait
imul
or
lcall
xchg
cltd
decb
add
imul
sub
fwait
mov
mov
sbb
mov
jl
jmp
insl
lcall
and
mov
adc
mov
xchg
mov
adc
add
mov
jne
loope
aad
and
icebp
mov
fildll
and
xor
ds
inc
pop
mov
cmc
jne
add
xchg
sbb
dec
outsb
shr
outsl
fmull
xchg
nop
leave
or
sub
inc
divl
dec
dec
shrl
jmp
pop
jge
ret
pusha
pop
cli
andl
push
push
ds
imulb
les
pop
ret
jb
pop
mov
insb
inc
lea
fdivp
or
out
loope
mov
inc
adc
sub
mov
and
cltd
and
inc
aas
jp
fdiv
sbb
pop
insl
ret
mov
in
mov
loopne
jecxz
and
or
jne
mov
testb
fisubrs
fists
mov
mov
jo
nop
pop
stos
mov
mov
das
fisubrl
fimull
rolb
inc
sub
xchg
pushf
sbb
ja
mov
push
xchg
loope
fistpl
pop
js
mov
stos
push
jno
mov
or
popf
jae
inc
dec
js
inc
andb
cltd
jle
fadd
in
mov
aam
inc
xlat
jecxz
xlat
sbb
inc
mov
jle
jbe
pop
cmp
or
lcall
jbe
lods
leave
mov
adc
loope
pop
cmpsl
add
cmc
dec
lds
mov
jp
dec
call
lods
mov
shrb
mov
pminub
inc
pop
push
fadds
stos
mov
cltd
mov
push
cmp
sub
jo
setbe
push
daa
add
and
pop
xchg
repz
push
ljmp
imul
fsubrs
lock
inc
out
adc
mov
mov
mov
insb
or
in
add
div
sbb
push
iret
push
mov
outsb
mov
pop
in
ljmp
fisttpll
and
out
pop
sbb
test
fst
nopl
lods
popa
jecxz
arpl
mov
cld
sahf
xchg
lahf
stos
inc
mov
scas
dec
mov
scas
and
sahf
leave
xor
pop
movl
push
fcmovbe
pop
jnp
push
sbb
pop
pop
mov
shll
ds
or
mov
stos
sub
pop
and
mov
imul
inc
mov
ficoms
push
leave
mov
add
xchg
lods
or
outsb
pop
in
insb
jnp
pop
out
jecxz
mov
mov
mov
push
push
mov
dec
lods
mov
in
inc
mov
dec
push
inc
shll
mov
mov
mov
cmp
aad
int
scas
and
xchg
and
test
push
pop
test
out
enter
das
jl
mov
inc
push
mov
dec
sarl
shlb
fsubrs
cmp
adc
fnstcw
push
mov
fdivs
xchg
into
hlt
mov
mov
push
push
xor
inc
mov
mov
or
gs
lahf
in
imul
push
lea
add
cmc
in
lahf
mov
in
je
xlat
lahf
sbb
pop
push
xchg
pop
or
nop
ds
pop
arpl
mov
add
mov
mov
pop
and
mov
lahf
push
lgs
xchg
mov
aas
cmp
pop
pop
mov
mov
push
cmp
xchg
inc
enter
icebp
mov
scas
shrl
xchg
or
aam
pushf
mov
dec
or
push
stos
xchg
cld
sbb
int
daa
jmp
fdivrs
sarl
mov
lret
jne
xchg
ljmp
push
lods
adc
ret
push
xchg
and
add
lock
lods
dec
outsl
push
fbstp
fs
lret
in
push
call
jecxz
sub
daa
in
xor
clc
in
int
sbb
jl
xchg
dec
jge
inc
ja
shll
mov
jge
add
inc
xlat
jge
mov
aas
dec
mov
decl
arpl
faddl
cwtl
and
and
sub
cwtl
lock
cmp
sub
shr
scas
jmp
pop
or
mov
aaa
adc
and
cmp
addb
into
insb
push
lahf
lds
outsb
fsubrs
push
push
das
imul
addr16
or
sub
mov
stc
inc
cld
cmc
mov
mov
les
sub
out
or
shrl
or
push
stos
pop
lods
dec
divb
inc
mov
ret
insb
push
xor
out
lds
fldcw
xor
jae
popa
lret
sahf
lcall
inc
push
sub
lods
sahf
adc
fdivs
out
nop
nop
ret
or
or
push
ja
jae
cld
shrb
cmp
in
sbb
jecxz
shll
decb
iret
mov
add
int3
call
push
aad
jg
add
ret
pop
shlb
data16
cmp
sub
imull
inc
mov
je
fwait
ror
or
mov
sub
jns
adc
div
aad
inc
jl
mov
dec
aad
cmp
mov
mov
push
sbb
lret
mov
hlt
dec
dec
mov
push
sub
jmp
repz
inc
outsl
mov
ret
inc
into
ja
loopne
push
test
jne
adc
sub
push
pop
orl
mov
sub
imul
jae
scas
dec
imul
lea
adc
pop
xchg
pop
in
cltd
in
add
mov
stc
inc
lret
dec
inc
push
movsl
leave
push
dec
dec
pop
sbb
dec
cli
xchg
or
lods
jo
addr16
popa
xchg
mov
dec
shrl
xor
mov
mov
je
subb
std
cmp
dec
xchg
mov
pop
add
push
and
mov
xchg
fst
les
xchg
in
mov
adc
fidivrl
or
push
sti
or
sub
push
sub
sarb
push
sarl
mov
add
scas
xchg
test
ret
inc
xchg
jno
xchg
movsb
push
fdiv
popf
xor
in
test
rcll
push
pop
decl
stos
or
add
or
mov
imul
idivb
iret
stc
aad
push
pop
jnp
aam
lahf
lret
fstpl
ja
xchg
jo
mov
mov
inc
pop
push
ret
jae
cmpsb
jecxz
cmp
les
out
sub
call
lods
dec
mov
aas
jecxz
xchg
lods
add
repnz
ficompl
xchg
dec
pop
xchg
aaa
push
mov
ljmp
and
test
cmc
push
sbb
or
sti
cmpsl
inc
xchg
or
inc
shrb
xchg
or
jne
imulb
cmp
das
mov
les
adc
xlat
orb
int
push
iret
adc
add
lahf
ret
je
and
mov
orb
add
ret
mov
inc
negb
jle
mov
sbbb
push
xchg
sub
inc
or
xchg
mov
xchg
adc
push
mov
add
cs
fwait
imul
or
jbe
aaa
lret
in
nop
mov
jge
rolb
shll
rorl
aam
mov
sub
add
or
pop
dec
mov
shll
fcomps
mov
outsl
aaa
into
cmpsl
push
mov
jae
inc
loope
pusha
ljmp
xor
popf
icebp
outsl
jl
gs
imul
xor
inc
fildl
fs
push
inc
into
and
mov
inc
insl
xchg
mov
into
in
sbb
add
push
fs
ret
and
test
lods
mov
push
pushf
bound
ret
push
xchg
leave
hlt
mov
icebp
out
call
adc
and
mov
xchg
in
push
jb
push
imul
pop
addr16
sub
jmp
es
push
mov
jo
pop
mov
jle
jecxz
aad
data16
cmpsb
cmp
sbb
das
lcall
loope
sub
adcb
hlt
or
pop
dec
mov
aam
imul
call
fcmove
clc
lods
data16
addb
mov
dec
xchg
ss
sbb
xchg
sbbb
ret
adc
add
cs
jb
arpl
pusha
cmp
push
jp
push
into
sbb
sbb
sub
setg
sbbb
and
mov
push
rolb
shrl
mov
adc
movsl
lahf
mov
ljmp
xor
mov
pop
loope
dec
inc
xor
mov
mov
xor
adc
adc
sbb
test
pop
mov
out
ja
mov
pop
imul
inc
outsb
stos
cmp
mov
loop
cwtl
or
in
cld
push
push
inc
int3
test
popa
dec
ja
jnp
add
outsb
sub
rolb
adc
adc
cmp
push
fstps
add
les
push
dec
scas
push
fwait
push
inc
cmp
jle
pushf
sbb
addb
out
cmp
cmpsl
mov
xchg
or
or
mov
pop
aam
lods
hlt
lods
aas
adc
pop
and
add
arpl
shr
xor
pop
int
mov
aam
add
mov
xchg
inc
ljmp
pop
mov
repz
and
outsb
push
mov
das
pushf
sub
adc
xor
aas
push
cmp
mov
repnz
jmp
jne
out
mov
pop
mov
sub
dec
xor
add
out
or
ret
ret
fcomip
jo
fistpl
shlb
mov
cmpsl
ss
add
add
jb
adc
mov
push
leave
xlat
push
xlat
xor
or
js
adc
and
shll
mov
aas
mov
lret
call
les
arpl
xorl
andl
je
dec
jecxz
loop
sahf
movsl
push
sbb
mov
xor
fldt
mov
push
add
mov
lods
mov
mov
ljmp
or
fwait
ljmp
pop
out
rcrl
pop
xchg
addr16
pop
clc
xor
movsb
ret
adcl
pusha
rclb
fstl
mov
lds
jge
orl
aam
arpl
std
lret
aad
das
cmpsb
js
imul
shll
ret
xchg
or
sbb
orb
incl
push
or
test
shlb
fs
ret
lret
fsubrs
adc
lret
mov
es
fiaddl
aas
pop
xchg
imul
in
fwait
int
out
loop
add
ret
or
mov
jg
push
xor
add
pop
mov
mov
dec
call
push
aaa
jl
or
lcall
and
xorl
sub
loop
lods
sahf
xadd
nop
and
call
xor
cltd
adc
mov
fildll
inc
in
call
call
jp
push
pusha
add
movsl
sbb
jbe
imul
mov
or
sahf
dec
or
mov
fidivs
shll
push
fcomps
inc
inc
mov
lds
mov
mov
or
jmp
sbb
mov
pop
push
mov
jae
xor
jle
outsl
das
fnsave
jo
jl
add
mov
fildl
into
in
stos
nop
add
popa
dec
call
jmp
jmp
lock
icebp
shrb
iret
add
mov
scas
and
sti
pop
aam
add
dec
jne
mov
hlt
jno
fcomip
push
push
je
in
das
popw
mov
jno
das
jbe
in
push
pop
test
enter
imul
scas
vpmadcswd
fwait
jnp
push
mov
inc
dec
add
dec
sti
mov
lahf
repnz
cltd
xlat
xchg
enter
pop
pop
mov
hlt
push
mov
xchg
or
jmp
cmp
pop
mov
xchg
pushf
and
sti
jnp
xchg
jne
aaa
outsb
sahf
inc
cltd
scas
xlat
enter
pop
clc
test
fs
pop
lcall
scas
rcrb
fisubl
push
pop
add
adc
mov
mov
daa
jo
pop
stos
dec
or
repnz
inc
mov
enter
push
rcrl
lcall
sbb
pop
adc
stos
adc
jp
push
popf
test
add
sub
sbb
aam
stos
mov
loopne
inc
shl
cmp
sbb
mov
jo
or
dec
jae
sub
push
add
loopne
jns
jg
sub
ja
clc
movsl
stc
push
cmp
scas
cmp
scas
push
data16
or
sub
adc
mov
inc
lods
mov
and
jae
and
mov
lods
dec
sub
or
pop
int
icebp
les
xchg
push
lods
lea
inc
adc
add
test
subl
shrl
pop
dec
shr
fwait
call
scas
movsl
inc
movsb
ret
ljmp
or
mov
add
xchg
fwait
xchg
dec
xor
jb
mov
mov
leave
rorl
jne
gs
jmp
push
cmp
inc
mov
lret
jp
in
lahf
js
jns
xor
cli
stos
xchg
mov
popf
into
push
dec
outsl
mov
outsl
iret
ficompl
mov
fistpl
stc
mov
sbb
out
sub
fcoms
sbb
mov
jno
ljmp
sbb
push
shll
jne
es
clc
fdivs
outsl
pop
mov
jo
lret
cwtl
mov
or
pop
mov
cmpb
mov
mov
dec
movsl
repnz
xchg
scas
aaa
cmp
ds
xchg
push
mov
xor
jo
dec
ss
sbb
sbb
aad
lret
insl
shlb
divl
or
lock
mov
out
mov
jns
jge
fbld
data16
lds
jle
push
call
jae
mov
dec
adc
mov
mov
movsl
xchg
xchg
pop
add
or
les
stos
sbb
inc
loop
call
xchg
fs
fdivrs
xchg
imulb
mov
ljmp
or
jg
pushf
shlb
out
test
xor
lea
rorb
out
es
sti
inc
fistl
into
loope
jbe
add
ret
int
pusha
iret
cmp
mov
mov
inc
sti
and
orl
fldenv
add
adc
xor
ja
test
aad
jb
lods
fidivl
sub
mov
mov
adc
xor
fcmovu
and
cmp
in
sbb
insb
pop
adc
insl
cmp
xchg
aad
pop
jecxz
mov
cli
adc
push
shll
inc
cmp
inc
mov
mov
ret
lret
xchg
les
or
mov
rcr
fstpt
popf
xchg
test
stos
sub
jg
mov
bound
mov
xchg
cmpl
xchg
xor
movl
aas
lds
test
inc
out
sbb
stos
bound
inc
jnp
adc
cmp
xchg
roll
dec
pop
fidivl
xchg
pop
aad
or
cmp
fbstp
jne
jno
adc
push
movb
aaa
fsubs
fidivrs
or
push
in
xchg
in
sub
pop
nop
add
js
sarb
mov
inc
neg
call
push
mov
fistpll
outsl
rorl
stc
fwait
sub
and
inc
std
std
mov
cmpsb
cmp
sahf
outsl
insl
mov
sub
sar
and
andb
cmpsb
fsubr
cld
mov
lods
sbb
mov
int3
ljmp
insl
jne
sbb
jbe
or
or
mov
scas
repnz
push
pop
js
jb
cmp
mov
jne
test
xor
mov
add
mov
in
dec
inc
out
iret
xor
stos
addl
pop
imul
into
jnp
push
pop
ret
pop
mov
jne
adc
mov
mov
and
test
jno
mov
test
ret
inc
int
mov
shll
int3
cmp
nop
xor
in
sbb
adc
cmp
clc
rorb
inc
aaa
mov
push
pop
arpl
or
pop
push
mov
lea
push
dec
out
popa
or
mov
js
pop
aas
mov
cmp
dec
mov
mov
movsl
mov
inc
or
popa
mov
xchg
lods
add
jmp
movsb
sbb
or
pop
inc
daa
push
pop
pop
jbe
loopne
dec
or
mov
pop
mov
mov
add
pop
stc
mov
out
insb
rcll
inc
lahf
sbb
mov
pusha
sti
aad
mov
movsb
push
pop
xor
xchg
fisttps
lds
leave
mov
xor
jmp
push
dec
adc
and
adc
mov
xor
pop
inc
dec
outsl
aas
jbe
or
and
sub
sub
sub
mov
in
push
cmp
stos
inc
dec
sbbb
pop
jne
add
aaa
add
test
popf
jnp,pt
subl
sti
push
test
cmp
mov
call
rcll
pop
lcall
or
in
sub
lods
xchg
pop
popa
xor
jge
xor
jbe
flds
test
and
add
pop
clc
scas
loop
cs
movsb
stos
stos
bound
lret
in
cli
scas
dec
mov
andl
adc
mov
mov
mov
cmp
push
outsb
ljmp
or
sbb
lods
insb
xor
imul
lea
xlat
notb
jo
xchg
sub
mov
adc
dec
scas
shlb
or
outsl
push
fstl
clc
in
daa
xchg
aam
fdivr
push
push
sub
pop
push
sbbl
xor
mov
cmp
rclb
pusha
adc
addr16
mov
outsb
mov
popf
cwtl
push
lock
lods
mov
dec
lcall
test
inc
nop
cmpsl
pop
push
cld
fldt
dec
shll
lret
fsubrl
dec
cmp
roll
loope
mov
inc
xchg
ret
pop
shlb
sbb
cmp
inc
mov
xchg
and
mov
rorb
test
inc
in
loopne
mov
outsb
jb
mov
dec
pop
inc
pop
and
sbb
cmpsb
sti
mov
arpl
icebp
adc
mov
sub
inc
jno
push
ret
outsb
movl
ljmp
inc
sbb
aam
adc
int
fldcw
cmp
inc
jo
mov
scas
cmp
xor
lock
iret
ja
and
test
lock
stos
addl
inc
xor
jge
and
adc
sbb
out
mov
pusha
adc
jp
add
fmuls
or
lret
inc
adc
aad
jb
jg
or
add
sub
adc
pop
lock
inc
jb
insl
cmp
mov
in
jmp
mov
pop
fidivrl
cli
pusha
jg
ss
fcomps
lcall
pop
and
fdivrl
adc
imul
aaa
movsb
cmp
cmp
dec
xor
gs
or
popa
inc
ja
insl
inc
mov
xor
pop
xchg
dec
cmpsl
pop
cmp
inc
pop
es
mov
mov
sub
aad
or
ja
jg
pushf
pusha
cmpsb
add
ss
in
les
psllw
push
out
int
dec
mov
mov
sbb
xor
inc
jp
xor
inc
fdivrl
push
inc
out
mulps
pop
jno
xlat
mov
mov
cmp
fsubs
orb
pusha
fdiv
dec
adc
mov
sbb
jae
loopne
jmp
mov
lret
clts
mov
rep
jbe
iret
loopne
test
sahf
rclb
in
inc
xor
lcall
sub
jle
mov
xchg
inc
jmp
push
sub
aam
aaa
mov
and
pushf
jno
add
loop
in
shlb
arpl
jne
mov
inc
inc
mov
pusha
jo
rcrb
jecxz
and
scas
call
jno
dec
and
push
push
fwait
sub
xchg
movsb
xlat
mov
test
jne
sbb
andl
xchg
xorb
sub
pusha
jmp
mov
aad
sbb
inc
hlt
inc
stc
repz
sbb
cltd
pop
enter
fstl
pop
mov
movsb
push
es
inc
push
loopne
jecxz
fmuls
into
pop
adcb
idivb
sbb
popf
fcmovbe
jg
movsb
daa
imul
test
xor
lods
lods
xor
rcl
les
xor
cld
pusha
mov
add
rcrb
orb
xor
jnp
hlt
fcomip
sbb
inc
sahf
insb
shl
xorb
pushf
test
add
fists
mov
mov
popf
mov
outsl
push
mov
icebp
test
mov
test
pop
data16
pop
cmpsl
adcl
jb
movsl
fildl
mov
mulb
mov
pop
inc
cs
sbb
ja
sub
sbbl
insl
rorb
pop
push
adc
vsqrtps
or
in
int
lock
lods
fwait
stc
inc
and
das
test
es
ljmp
jo
cmp
and
cltd
sbb
les
mov
imul
imul
iret
push
or
dec
idiv
xchg
insl
fsts
push
rcll
xchg
cltd
mov
mov
lock
mov
push
jne
sbb
jecxz
popa
mov
pop
cwtl
adc
adc
mov
ja
add
cmp
je
mov
xchg
jle
test
dec
pop
push
mov
insl
cwtl
push
inc
mov
cmp
dec
dec
lds
jl
stc
faddl
addb
sub
push
call
mov
stos
mov
mov
out
rcrb
movsl
in
xchg
mov
mov
data16
xor
aaa
jb
mov
cmpsl
pop
add
mov
es
mov
ds
test
hlt
xor
adc
inc
out
pop
in
pop
push
add
ret
mov
popf
es
adc
xchg
call
test
out
push
cmp
xor
aas
loopne
dec
push
pop
jl
cmpsb
mov
jno
sti
cmpsb
loopne
dec
hlt
rolb
mov
insl
or
sbb
pop
test
or
dec
cmc
inc
cmp
pop
shr
xchg
lret
add
cmp
push
add
cmp
pusha
xchg
shl
movsb
std
loopne
xchg
enter
or
imul
sbb
fmull
adc
fimull
imull
mov
mov
sbb
fiaddl
dec
xchg
add
loop
or
dec
cs
jg
dec
shlb
stos
add
adc
arpl
aam
es
das
pop
sbb
fimuls
cltd
pop
mov
mov
pushf
lea
and
subl
jmp
fwait
add
or
imul
aam
popf
or
ret
or
sbb
into
in
arpl
mov
or
data16
adc
or
mov
sub
and
out
and
lcall
insl
clc
lds
or
jb
imul
pop
je
lds
sbb
adc
mov
jle
and
cli
jne
lods
push
inc
pushf
cli
inc
sbb
jno
push
mov
pop
add
mov
xor
ja
push
push
loope
and
icebp
cmc
popf
adc
mov
lods
inc
sub
mov
mov
and
sbb
sbb
pop
pushl
add
loope
sahf
mov
jo
cmp
mov
pop
scas
mov
ss
fildl
leave
mov
adc
test
in
sbb
mov
outsb
mov
test
inc
ja
xchg
insb
push
add
jne
lods
and
jo
outsb
jg
cwtl
shrb
pop
cmp
sub
pop
cmpsb
or
pusha
stc
leave
push
aad
fcmovnb
sub
lds
pop
pusha
iret
icebp
cmp
call
cmp
sar
mov
int3
pop
test
arpl
sahf
insl
aas
pop
adc
test
jo
jecxz
daa
push
jnp
add
rcrb
push
into
jecxz
stos
xchg
or
movsb
int
inc
and
ds
sbb
and
inc
inc
cmp
jne
test
sub
xchg
stos
mov
lahf
xor
in
sbb
cwtl
sbb
dec
add
sub
hlt
jae
nopl
sbb
mov
xchg
call
popf
test
ret
loop
mov
in
xor
out
out
in
add
iret
xor
inc
jge
pop
idiv
mov
sub
mov
adc
sbb
in
mov
jge
arpl
mov
punpckhbw
daa
lcall
lret
adc
sbb
fnsave
sbb
pop
push
mov
or
out
or
adc
call
pop
dec
enter
test
and
cmp
out
sahf
dec
jno
aad
mov
flds
ds
mov
mull
xchg
xchg
mov
jl
cmp
out
inc
push
mov
orl
push
cmc
add
mov
sbb
and
sub
pusha
arpl
fsubr
mov
sbb
xor
xchg
jne
mov
orb
sar
push
insl
fs
mov
ud1
xchg
push
xlat
lea
add
jge
int
mov
rcll
aad
mov
xchg
mov
stc
xor
cmp
cmp
adc
cmp
out
pop
and
or
xor
fildll
mov
mov
cmp
in
test
jle
xchg
fmuls
adc
cmp
pop
outsb
xchg
and
jo
xchg
movsl
in
out
mov
dec
mov
dec
push
ret
cmpb
xor
aad
leave
iret
cmp
sbbb
jecxz
cmp
fwait
cmp
adc
mov
and
pusha
add
mov
push
mov
push
std
sub
xor
cmp
jmp
insb
call
leave
adc
insb
xchg
sbbb
inc
push
repz
sbb
dec
sbb
mov
imul
ljmp
mov
mov
mov
push
dec
sub
push
xchg
aam
xchg
mov
sbb
clc
cmp
insl
push
sub
inc
mov
pushf
jnp
jmp
and
fnsave
add
mov
mov
in
lods
loopne
fisttpll
dec
rolb
pop
push
test
push
movsb
cmp
sub
dec
inc
cmpsb
adc
cli
mov
lods
xor
jp
adc
pop
loop
mov
dec
push
sbb
or
rcrl
xchg
roll
outsl
jnp
inc
vmovsldup
sub
cli
inc
fsubr
inc
add
aam
out
xlat
imul
fistps
call
inc
inc
je
mov
into
adc
and
fisubrs
jns
xorl
mov
test
cli
lock
dec
xchg
mov
imul
pop
loop
push
add
fstpt
enter
xor
dec
ljmp
cmp
aas
ds
or
inc
mov
in
lea
jle
mov
stos
mov
mov
into
mov
adc
jge
push
pop
jl
std
ret
outsb
in
dec
int3
mov
fdivrs
loopne
movsb
rcll
and
push
and
cmp
push
xchg
add
jle
sub
mov
mov
inc
add
fisttps
mov
or
inc
or
in
mov
xor
cmp
jns
xor
mov
lahf
mov
in
add
ljmp
push
daa
xor
mov
pop
inc
and
test
adc
fsubrl
mov
pop
cmp
inc
imul
cli
jnp
push
test
sbbl
lcall
outsb
in
mov
imulb
pusha
inc
mov
repz
cmp
test
test
cmc
lods
mov
xchg
and
je
fucomi
push
adc
xchg
push
add
cmp
pop
mov
outsb
sub
leave
mov
push
das
mov
jmp
sbb
mov
insl
test
add
cmpsb
sbb
push
and
sub
xor
and
imul
rcr
or
pop
or
mov
jbe
jbe
or
xchg
clc
fimuls
or
sub
push
and
mov
sub
push
sub
mov
sbb
sahf
inc
subb
mov
mov
bnd
movsb
xor
sub
xor
gs
mov
inc
mov
adc
test
sbb
sbb
pop
divb
dec
and
xlat
jg
cs
pop
test
add
add
icebp
das
xchg
xorl
and
dec
jl
push
aad
and
outsl
pop
loop
mov
lods
and
imul
jle
and
xchg
push
fsubr
fadds
push
pop
mov
jge
push
inc
pushf
ror
jge
pop
sbb
jge
js
stos
fcoms
cmp
mov
xorb
pop
frstor
mov
test
fsqrt
dec
sub
ret
mov
sbb
xchg
aaa
lea
pop
js
jo
test
cwtl
push
add
inc
push
test
test
sbb
jl
push
push
mov
les
mov
mov
aaa
sub
push
in
add
dec
addr16
repnz
cld
and
int3
or
pop
mov
jge
sub
pop
in
cmc
ds
pop
mov
or
dec
pop
lea
jnp
std
jo
lret
inc
mov
arpl
jns
xchg
aad
int
jne
inc
xchg
fstp
push
sbb
mov
lcall
das
lds
aas
fdivs
imul
pusha
insb
not
adc
clc
pop
xor
mov
adc
mov
rclb
inc
aam
push
mov
jmp
std
inc
notb
xchg
fistl
cld
test
or
lock
and
and
pushf
mov
sub
pop
scas
pusha
movsb
js
stos
pusha
iret
sub
inc
and
pop
out
ret
sbb
xchg
pop
fcmovb
cmp
out
jo
test
ret
pushl
fcmovnbe
je
pop
pop
lret
push
sub
shrl
jbe
sub
mov
loopne
mov
enter
daa
mov
and
repz
mov
imul
mov
adc
dec
rcrb
add
stos
push
lods
xchg
mov
mov
push
test
mov
and
xor
cmp
aad
test
imul
xchg
popa
jne
ret
fnstcw
bound
push
je
lods
les
aad
mull
xor
xchg
push
xchg
ljmp
or
mov
mov
cli
nop
add
dec
hlt
mov
mov
sbb
jecxz
and
inc
adc
xlat
mov
fiaddl
fsubrp
shll
xchg
lods
leave
and
mov
add
lcall
jg
aas
pop
mov
loope
mov
loope
insl
inc
mov
sbb
imul
out
arpl
call
xchg
es
inc
cmpsb
jae
repz
lahf
rolb
repnz
hlt
scas
loope
and
pop
push
fnsave
std
or
addr16
paddusw
pop
cmp
or
aam
pop
jle
mov
mov
ret
pushf
xchg
aad
push
sub
and
pop
dec
icebp
mov
rorl
push
or
decl
inc
push
sti
leave
jecxz
adc
cltd
cmp
in
test
sbb
lock
push
out
insl
inc
fsubl
mov
cli
lods
mov
popf
add
int3
sbb
aam
lods
call
and
pop
jns
cmp
dec
sbb
fistps
mov
mov
inc
adcl
xor
imul
inc
les
ss
cmpb
xor
sar
sbb
dec
mov
test
pushf
mov
push
or
aas
push
add
push
mov
xchg
and
das
mov
loope
sbb
test
insb
dec
pop
fisttps
sahf
or
push
nop
mov
mov
popf
adc
xlat
push
js
out
rorb
out
cs
outsb
add
inc
filds
adc
pop
enter
loope
adc
sbb
cltd
and
jl
cmc
adc
cs
pop
mov
jge
cwtl
xorl
ljmp
jge
push
out
push
mov
sbb
pop
pop
adc
push
testb
subl
lds
jbe
sbb
mov
sarb
mov
lock
lcall
jge
fnstsw
outsb
pop
jmp
sub
and
pop
int
fwait
test
jo
lret
dec
mov
into
repz
outsb
call
push
das
cmp
pop
nop
fsubs
pop
fistpl
pop
ret
test
adc
loope
sbb
cmp
adc
test
ja
ljmp
bnd
mov
lret
push
icebp
adc
loop
ja
and
sbb
shlb
xchg
fldcw
fisubrl
mov
mov
inc
dec
imul
push
les
loopne
out
lcall
mov
int3
pop
add
mov
loope
and
call
sub
stos
push
pop
shlb
cwtl
lods
dec
aam
outsl
cwtl
inc
aas
sbb
sbb
mov
test
pop
pushf
orb
sbb
pop
call
or
push
xlat
jl
inc
movsb
idivb
aas
jg
enter
cmpsb
sub
enter
cmc
mov
add
pop
or
and
nop
fsts
mov
mov
xor
mov
cmp
daa
lret
lock
dec
mov
xchg
jmp
popf
lock
jl
pop
decb
push
ret
pop
add
jne
daa
pop
mov
inc
xlat
fwait
je
xlat
in
inc
push
cmp
add
test
xchg
jne
dec
or
adc
iret
cmp
pop
mov
jae
inc
inc
jns
pop
dec
xchg
lret
cmp
sbb
inc
orl
cli
aad
sbb
or
lods
or
mul
sbb
dec
jl
test
push
pop
mov
pop
ret
sbb
mov
xchg
add
mov
sub
ret
pop
ffreep
xchg
test
cs
push
sub
ret
popf
popa
dec
mov
outsb
test
stos
jnp
shll
add
sub
test
arpl
call
mov
jecxz
and
into
sub
test
xchg
cmp
cmpsb
sub
loop
lods
in
and
lods
jg
sbb
jg
add
jb
jb
inc
outsl
adc
ljmp
cmpsb
mov
xor
scas
dec
mov
xchg
mov
xchg
mov
and
loopne
mov
popa
sahf
jmp
pop
roll
jl
les
cmp
dec
hlt
add
loope
mov
xchg
dec
sub
rolb
push
mov
je
add
scas
mov
mov
jno
mov
cmp
in
adc
or
push
jle
pop
cmpsb
lcall
in
stos
xor
or
ds
sub
icebp
jnp
out
or
sbb
jle
ret
outsb
arpl
orb
sbb
jl
test
popf
cmpsl
dec
in
mov
adc
sbb
inc
mov
xor
jo
sbb
ss
divb
or
inc
jge
fidivrs
or
arpl
mov
or
fcoms
mov
jb
loopne
push
dec
fwait
push
jb
cmc
jne,pn
cs
shlb
nop
jns
xchg
inc
add
jo
sbb
idiv
adc
add
cmc
add
xchg
cmpsb
dec
addr16
in
push
js
sbb
push
cmp
sbb
push
popa
xlat
cvtpi2ps
fldt
out
mov
fs
cmp
outsl
dec
cli
xchg
push
stos
ljmp
jl
push
and
push
adc
loopne
ljmp
lahf
mov
adc
adc
jno
jo
imul
jmp
fisubrl
sub
sub
cmp
jnp
dec
sbb
mov
insl
test
jle
add
loope
testb
fsubr
aas
outsl
mov
popf
cmp
mov
sbb
and
mov
xchg
imul
out
sbb
and
mov
sbb
aaa
jmp
enter
push
es
xchg
mov
out
jne
add
or
xchg
rolb
mov
mov
mov
cltd
jecxz
mov
imul
add
lods
in
dec
mov
ret
nop
push
add
repz
dec
pop
or
pop
fwait
push
hlt
mov
add
jmp
test
sbb
dec
and
cltd
js
loope
mov
frstor
mov
repz
push
faddp
mov
dec
loop
push
jae
arpl
bound
or
mov
addr16
xchg
aam
mov
clc
int
add
sub
adc
movsb
and
and
mov
arpl
adc
and
jecxz
and
lock
and
pop
loop
xchg
sub
lods
jge
fsubs
adc
ret
mov
rcl
int3
and
mov
push
mov
fdiv
scas
stos
mov
push
mov
loopne
stos
jbe
dec
enter
nop
and
or
out
add
setb
xchg
js
inc
dec
int
fcmovbe
std
lahf
mov
std
inc
sbb
push
mov
push
pushf
fsts
push
push
mov
mov
adc
imul
aaa
or
cmc
dec
inc
lds
dec
pushf
cmp
in
movsb
aas
sub
xor
dec
inc
mov
sub
les
into
jb
test
xchg
dec
test
les
mov
mov
jne
lock
xor
jnp
roll
jnp
or
lock
xlat
mov
mov
jbe
sbb
sub
fisttpl
dec
mov
cmp
mov
fwait
sbb
cli
outsl
insl
fwait
mov
jae
ror
imul
outsb
loopne
jg
xor
in
cmp
in
or
or
inc
addl
cmp
icebp
scas
loopne
mov
cwtl
mov
popf
add
xor
arpl
mov
jp
and
mov
push
loope
insb
mov
lret
pop
mov
cwtl
mov
pushf
bound
add
addl
push
test
imul
jbe
imul
insb
mov
add
int3
popa
mov
xchg
push
mov
push
repnz
repz
aam
fisttpl
pop
push
mov
mov
cwtl
pop
jecxz
adc
cmp
mov
jno
mov
das
std
push
pop
pop
push
cmp
shrl
fsubs
mov
jg
cmp
inc
sub
lods
sub
aam
fnstcw
xor
ds
shll
push
les
mov
xchg
push
adc
push
js
xor
aad
jno
dec
in
push
pushf
vpandq
gs
cmp
clc
dec
push
in
icebp
cmpsl
sbb
jne
xor
inc
mov
jo
pop
cli
in
bound
adc
pop
clc
loopne
sbb
or
ja
jbe
andb
pop
insl
sub
subl
jbe
cmp
lds
jle
jo
movsl
cmp
test
push
push
jmp
push
or
dec
xor
aam
or
push
jl
mov
mov
jp
cld
push
sub
jl
jbe
lahf
sbb
ljmp
inc
jne
shr
push
lock
pushl
add
repz
adc
jbe
mov
loop
cmp
subl
gs
fmulp
int3
pop
add
outsb
out
jbe
popa
enter
in
call
xchg
jle
add
jge
cmp
or
bnd
pop
fidivl
insl
outsb
mov
in
addl
and
mov
fnsave
sarl
adc
mov
dec
fmuls
outsb
and
push
xchg
es
daa
mov
dec
sti
shrb
mov
cltd
pop
outsl
adc
push
xchg
pop
out
xchg
lock
jnp
adc
mov
scas
or
insl
shl
or
outsl
movsb
lock
data16
imul
in
sub
dec
notl
jl
mov
xchg
in
out
fidivrl
out
lret
aam
or
push
test
loopne
ret
fbstp
iret
xchg
mov
daa
mov
jmp
incb
fdivl
arpl
outsl
aaa
jno
shr
popa
lock
inc
in
or
or
stc
and
push
mov
decl
pop
shll
test
popa
jp
andb
push
ds
jle
fnstsw
sub
leave
aas
sub
js
jbe
xchg
or
stos
jne
dec
outsl
outsb
insb
insb
arpl
pop
sub
mov
ret
sar
fsubrs
mov
sub
rcrl
xchg
fistpl
movsl
int3
jl
imul
sbb
aas
scas
pop
push
mov
insl
pop
lret
in
fadds
mov
pop
inc
pop
push
sub
push
rolb
and
push
mov
ret
or
outsb
xor
jbe
push
lahf
or
cmpsb
cmp
subl
mov
repz
xor
jp
add
jl
adc
mov
mov
mov
hlt
jmp
fidivrs
jecxz
jb
jno
faddl
cs
mov
pushf
dec
dec
orb
push
rorb
sbb
std
fidivrl
test
cs
loopne
xchg
mov
fstpl
imul
mov
jno
lret
cmpsb
pop
jecxz
dec
sbb
roll
clc
mov
inc
jmp
imul
clc
test
jp
jge
dec
inc
shlb
cwtl
dec
stos
add
int3
and
inc
ja
adc
out
cmp
pop
sub
xor
addr16
xchg
test
cli
adc
sbb
insl
sub
push
sub
fisubs
out
aaa
add
adc
sub
add
nop
daa
jmp
inc
push
dec
inc
and
cmp
pushf
dec
push
mov
add
inc
call
inc
jmp
xchg
in
int
stos
outsl
aaa
icebp
dec
call
jl
test
sub
test
stos
add
lahf
jnp
in
cltd
iret
andb
mov
adc
add
sub
push
ja
sub
jmp
or
enter
inc
or
mov
lahf
sbb
mov
arpl
imul
inc
movsl
mov
iret
rolb
call
sub
inc
sahf
jl
jno
jp
push
cmp
enter
xchg
subb
call
into
dec
cmpsl
bound
into
mov
jbe
int
jge
fwait
ss
xchg
and
lea
outsl
xor
aad
xchg
aas
adc
mov
hlt
or
push
jp
xchg
jle
inc
push
lock
popa
inc
das
ja
popa
cmpsl
movsl
scas
fbstp
repnz
daa
ljmp
and
sub
roll
lds
adc
insb
and
sub
cmp
add
jmp
stos
mov
sub
xchg
and
mov
jb
jae
stc
popf
adc
mov
dec
loopne
lock
add
shrl
outsb
mov
push
repnz
fs
adc
rorb
mov
incb
mov
sub
xor
fildll
js,pt
aad
lea
or
pop
popa
cmpb
clc
or
ret
out
push
mov
sbb
mov
scas
sbb
jp
jge
inc
nop
incl
int
leave
sbb
shll
test
push
les
mov
mov
not
stc
test
push
int
sub
je
xchg
add
adc
and
fldt
xchg
les
jnp
pop
cmp
cs
jecxz
xchg
push
cmc
fcompl
xor
cwtl
shlb
lock
nop
push
pop
fldcw
xorb
cmpsl
in
push
mov
in
mov
fwait
push
mov
fwait
adc
or
and
xor
call
sbb
xor
out
push
xchg
imul
aas
leave
int
std
or
and
mov
pop
movsl
je
mov
ret
cwtl
pusha
aas
in
pop
scas
fistpl
mov
cmp
sbb
sahf
out
stos
or
idivl
mov
cmpsl
scas
dec
mov
stos
pop
add
ficoms
stos
jns
scas
mov
insb
insl
lds
adc
cli
add
psrad
xchg
pop
and
shlb
push
leave
ror
pop
loop
test
hlt
dec
pop
int
ljmp
xor
adc
ja
mov
jns
movsl
test
xlat
outsl
mov
xor
mov
xchg
in
pop
fdiv
ds
mov
mov
sbb
jle
sbb
lret
fists
pusha
in
div
xchg
mov
pushf
xchg
push
or
adc
mov
push
jmp
adc
push
imul
add
adc
mov
mov
push
fsubl
add
inc
ret
das
push
cmp
push
mov
and
jb
loop
js
cmp
mov
sbb
sbb
inc
inc
aam
jmp
dec
and
int
jnp
lahf
inc
jmp
mov
repz
lret
xchg
push
lret
cli
shlb
adc
call
inc
or
adc
outsb
scas
and
lds
pop
scas
pop
jno
jecxz
mov
je
cmp
pop
pop
adc
je
cmpsb
aam
pop
jbe
and
jp
rolb
mov
xchg
das
popf
pushf
cmp
push
cmp
mov
add
sbb
dec
dec
mov
rorb
jo
test
lcall
mov
loopne
sub
outsl
sbb
ret
scas
adc
xor
shll
test
jl
add
dec
fldcw
hlt
clc
out
hlt
push
push
lods
sbbl
into
jbe
xor
bound
ret
mov
jmp
pop
jo
loopne
ror
mov
or
push
ds
arpl
pop
cltd
sbb
or
cmp
cmpsl
std
sub
mov
lock
clc
pop
icebp
inc
insb
in
xor
jnp
dec
popa
sub
sbb
mov
cmp
or
mulb
and
pop
sti
fucomp
jno
mov
jmp
icebp
adc
push
cmp
sbb
xchg
inc
leave
repz
out
loop
fcmovne
dec
popa
and
jb
iret
imul
movsb
push
dec
push
pop
adc
sarb
mov
pop
mov
adc
call
push
dec
or
inc
test
enter
inc
pusha
pop
int
loopne
mov
ret
lret
jne
and
jg
dec
and
mov
bnd
xchg
in
sub
sarl
ja
dec
stos
sbb
cs
jb
push
sub
jnp
fbstp
fcoms
jmp
sbb
imul
lock
sti
jecxz
or
lock
hlt
xchg
jnp
add
fsubs
mov
cmpsb
jmp
fsubs
andb
cwtl
imul
shl
sarb
xchg
add
imul
inc
scas
gs
mov
fadds
jp
in
mov
push
jg
shl
imul
and
vpaddq
jb
mov
cmp
adc
cs
addr16
arpl
loope
lret
test
dec
push
daa
pop
adc
stc
idivb
xorl
loop
mov
push
sbb
or
mov
xchg
test
mov
cmpb
dec
rolb
lret
mov
fstpt
cmpsl
cmp
cmp
jp
and
enter
jge
pusha
inc
fdivs
js
sbb
test
fimuls
inc
mov
aaa
and
sbb
xor
shl
jo
mov
add
and
inc
xlat
jp
mov
or
mov
nop
and
adc
sub
out
pusha
stc
push
inc
xchg
in
out
test
pop
cmp
sub
dec
adcl
push
insl
stos
dec
int
jecxz
adc
mov
xchg
aaa
or
or
and
scas
xchg
out
mov
hlt
inc
fst
mov
filds
movsl
and
test
mov
shlb
push
push
pop
xchg
mov
mov
scas
mov
pop
aad
jo
pushl
mov
ret
scas
dec
insl
fdivs
or
sbb
js
fs
lea
aam
aas
or
fwait
mov
pop
or
repz
mov
sbb
sub
cld
in
lock
mov
punpcklbw
cmpsl
seta
sbb
into
rclb
or
xor
mov
mov
inc
inc
pusha
fcompl
jns
inc
stos
jg
ljmp
xor
loop
or
cmp
lods
jg
and
sbb
and
lds
mov
cmp
xlat
subb
pop
sub
sbb
pop
push
jecxz
notl
in
push
mov
mov
jecxz
or
pop
cmp
addr16
adc
cmp
movsl
push
lock
shr
inc
or
orl
pop
cmp
jnp
inc
push
inc
shll
dec
jnp
test
leave
in
sahf
insl
rorb
xor
in
out
or
sub
les
inc
daa
push
insl
js
bound
mov
or
out
xchg
shrb
mov
push
xchg
and
mov
lea
movsb
aaa
call
repz
pop
dec
out
out
pop
and
dec
mov
subb
xor
xchg
fwait
andb
aad
pop
cs
jae
pop
cltd
or
sub
lods
add
aaa
inc
divl
cltd
dec
add
loopne
mov
out
sub
add
cmp
xchg
push
cs
jnp
fidivrs
aam
mov
cmp
add
scas
mov
jae
and
jp
dec
shlb
repz
insb
mov
pop
das
mov
cwtl
adc
paddw
cs
stos
pop
repnz
sbb
pop
mov
cmp
js
icebp
cmp
or
das
dec
insb
xor
loop
scas
mov
jp
push
xor
fsubl
push
cmp
inc
inc
das
jge
dec
shlb
ds
or
cli
pop
fcomip
daa
xchg
pop
icebp
add
jbe
mov
mov
inc
ja
mov
xchg
pusha
sub
adc
rcrl
dec
lds
es
push
incl
in
cltd
les
pop
ret
push
push
cld
repnz
mov
inc
insl
sub
cmpsl
ja
cmpsb
rorb
xchg
xchg
lsl
clc
mov
add
cs
out
push
or
push
xorb
cmp
je
es
mov
add
scas
pop
lods
or
mov
jle
xor
pop
mov
mov
cmp
xchg
test
dec
and
mov
jge
fldt
cmp
fistpl
mov
movsb
test
mov
pop
mov
pop
push
adc
push
fldl2e
lret
in
popf
into
mov
mov
sbb
xchg
mov
mov
sbb
insb
mov
lock
adc
push
sbb
xchg
or
jl
repnz
or
incb
scas
test
in
int3
dec
mov
add
aam
js
inc
sub
lods
ficomps
jbe
xchg
stc
jg
rcrl
loope
ss
xchg
int3
or
jbe
js
aas
inc
idivb
int3
adc
mov
push
adc
inc
ja
xlat
push
leave
lea
ds
push
add
shrl
icebp
in
inc
aaa
and
ret
pop
xchg
inc
xchg
mov
inc
xlat
lret
addb
sbb
push
les
test
fadd
mov
sti
stos
sbb
xchg
rorl
stos
inc
test
les
xchg
dec
and
inc
inc
push
aaa
inc
imull
cs
cmp
dec
sahf
leave
mov
mov
outsl
xor
dec
adc
call
dec
xor
or
ror
cmpsl
jp
mov
fsubrp
mov
call
mov
cmp
mov
lcall
fcmovnb
cmp
enter
sti
jle
inc
je
arpl
add
cmp
mov
mov
ret
fidivl
fs
test
xchg
cmp
mov
movsb
lcall
subl
stos
loope
outsb
xchg
out
fsts
xchg
add
sbb
mov
inc
mov
loope
fstpl
sbb
call
call
pop
mov
fldln2
jnp
in
sbb
faddp
push
stos
out
aad
int
ficoml
inc
or
mov
xor
xlat
and
pop
ljmp
and
call
mov
mov
aam
and
mov
push
mov
pop
mov
js
fists
push
inc
add
push
loopne
or
and
xchg
xchg
pop
ljmp
push
sbb
cli
fninit
and
fisubl
or
xchg
mov
loopne
cmc
inc
in
add
icebp
dec
mov
push
sbb
push
int
push
or
pop
lret
aam
sub
adc
cmp
xorb
mov
test
fstpl
xchg
sbb
add
adc
inc
mov
jp
addb
xchg
jg
dec
hlt
adc
mov
inc
es
push
icebp
aad
scas
lods
jmp
dec
es
jecxz
jno
stos
ret
xchg
and
jb
and
cli
push
inc
add
xchg
sbb
popa
push
shlb
mov
inc
out
adc
repz
push
in
ss
in
insl
movsl
cli
sub
sbb
je
push
adc
ret
dec
popa
cmc
sti
rorb
sub
sbb
insb
mov
or
add
jl
sbbl
cs
sti
icebp
add
mov
jg
clc
pop
sub
in
add
adc
aaa
mov
imul
cmp
or
sub
xor
sbb
ja
or
fistps
loop
test
jg
test
ss
fimull
rolb
or
cmp
fs
out
sub
fdivs
mov
lock
mov
cli
sbb
mov
add
outsl
mov
or
jbe
sub
mov
cmp
sub
incb
mov
sti
js
je
lret
loopne
cmc
push
add
loopne
mov
sub
jecxz
stc
cmp
sbb
xchg
mov
lods
jae
frstor
lret
xor
shlb
icebp
fisubrs
pop
inc
cmpsb
jo
pop
scas
mov
cmp
test
cli
je
dec
add
adc
lds
popf
jbe
mov
push
or
pop
jb
cmp
shrb
xchg
shlb
and
adc
lods
in
loop
aaa
jg
dec
dec
mov
movsb
icebp
mov
arpl
add
adc
mov
popf
lea
stos
adcl
mov
jp
inc
sub
icebp
cmc
pop
rorl
pushf
aam
aad
xchg
add
mov
scas
filds
fstps
sub
and
inc
insb
out
sub
mov
stos
mov
sbbb
hlt
movsb
push
dec
insl
nop
sti
pushf
mov
jns
pop
fwait
lea
sub
adc
test
decb
jmp
orb
and
movsl
inc
les
aam
lds
mov
and
out
jne
jnp
adc
lahf
div
xchg
fstpt
mov
xchg
pop
mov
test
imul
dec
rorl
outsb
add
mov
xor
push
pop
xor
sbb
xchg
iret
pusha
dec
mov
iret
in
xchg
andb
call
out
inc
and
xchg
jle
mov
cmp
mov
insb
lods
xchg
xor
jns
cs
sti
push
inc
inc
hlt
and
mov
xchg
cli
jae
and
jge
hlt
or
rcrb
or
jae
sbb
mov
sub
sbb
imul
inc
roll
jle
fisubs
xor
inc
testl
and
rclb
pop
lods
mov
insl
dec
sbb
mov
mov
mov
rorl
sti
pop
adc
scas
test
out
leave
mov
leave
push
cwtl
sbb
sarl
push
shr
inc
pusha
rcr
dec
pop
cs
ss
mov
sbb
xchg
sub
sub
inc
imul
imul
test
xchg
inc
iret
push
insl
mov
push
mov
inc
mov
fistps
aaa
test
fisubrs
sub
loopne
pop
dec
out
js
inc
cmc
mov
xchg
cli
ja
js
add
insl
or
orb
mov
shr
sub
xor
cli
push
cmpsb
mov
mov
repnz
jnp
sub
call
add
pop
dec
mov
cmc
out
add
cmp
inc
out
jmp
mov
xchg
push
inc
loopne
hlt
loope
inc
fcompl
scas
dec
adc
cmp
pusha
test
out
sbb
jns
fimuls
iret
xchg
rorl
xor
cmp
cmp
or
in
inc
je
in
jge
cmp
xor
sub
mov
out
cmc
arpl
jl
cld
cmpsl
push
popa
jbe
sub
jbe
mov
lock
inc
dec
mov
jge
push
cwtl
xchg
and
mov
cmpl
ss
sub
mov
lret
mov
sbb
cs
dec
fwait
cs
cmp
cltd
adc
mov
or
mov
lret
cmp
imul
lock
ret
bound
sbb
mov
jne
imulb
mov
negl
in
adc
in
clc
mov
nop
scas
test
pop
imul
xlat
xchg
xchg
lods
loope
addr16
sub
add
pop
jns
in
aas
mov
mov
and
stc
push
push
fildll
je
insl
es
mov
lea
xchg
mov
repz
adc
mov
mov
jno
into
movb
adc
neg
loop
popf
imul
or
jb
add
jbe
pop
cltd
out
xchg
pop
rcll
js
or
cmp
js
jge
mov
outsb
mov
ljmp
xchg
or
cmpsl
jp
lahf
add
inc
inc
sbb
cmp
in
mov
imul
sbb
inc
lock
rcrb
jne
xchg
cmp
fsts
fdivr
aas
adc
mov
jp
icebp
xor
adc
enter
aaa
insl
push
nop
jmp
pop
or
mov
push
lahf
rorb
scas
insl
ret
jp
jo
dec
or
lcall
clc
loop
cmp
shrb
fchs
insl
test
add
mov
lret
mov
dec
add
cli
leave
xchg
add
inc
popa
jb
cmp
scas
add
or
pushl
cwtl
or
fldenvs
int3
rcl
lods
es
xchg
leave
sbb
push
lock
shll
xor
mov
mov
dec
xor
test
pushf
mov
loopne
mov
jns
nop
add
in
in
sbb
dec
mov
dec
push
jae
dec
int3
cmpl
sahf
jp
sub
fldl
jb
ret
inc
cmc
mov
xchg
mov
das
jl
push
imul
icebp
jns
scas
fdivrl
cli
nop
mov
dec
add
ret
std
cmpsl
mov
add
test
mov
push
jl
sar
add
or
filds
lahf
popa
pop
js
pop
outsb
icebp
sti
daa
mov
and
aam
setl
push
push
push
jns
jb
js
loope
jbe
fnstcw
adc
xchg
xor
lcall
jb
inc
sbb
divb
jmp
mov
push
inc
dec
lahf
cwtl
dec
cmp
sti
pop
sbb
sbb
jecxz
rolb
mov
int3
ror
mov
int3
shlb
sbb
rclb
mov
cltd
xor
mov
push
pop
dec
dec
mov
jecxz
je
or
jo
mov
insb
popa
pop
jbe
lds
mov
pop
sti
test
sbb
fldenv
xor
inc
popf
mov
jecxz
cli
popf
xor
shl
adc
sub
add
js
xchg
das
mov
mov
decl
insb
inc
xlat
lods
add
push
cmp
mov
insl
sub
test
sahf
jmp
xchg
test
cli
adc
adc
fwait
dec
stos
fsubrl
or
or
out
aam
or
movl
imul
push
andl
ret
orl
mov
or
dec
std
testb
inc
jo
lahf
dec
jecxz
pop
lock
cwtl
xchg
mov
fneni(8087
aaa
mov
xchg
and
das
jl
add
rorb
cmpsb
out
push
scas
push
mov
roll
cs
daa
aad
mov
lds
mov
mov
iret
sub
mov
in
mov
ja
add
dec
push
mov
daa
cmp
add
testb
xchg
xor
jge
addr16
mul
xchg
shl
int3
cmp
in
cld
inc
pop
or
ret
jo
xor
adc
cli
sub
cmp
test
and
insl
xchg
dec
ss
mov
test
lea
inc
and
repz
cli
add
fwait
sbb
dec
enter
jae
ror
mov
inc
test
sub
inc
mov
xor
pop
mov
stos
or
add
inc
cld
and
lods
into
xorb
inc
leave
mov
inc
fistps
mov
aad
adc
add
adc
mov
arpl
dec
sub
insl
test
xchg
push
out
push
mov
int3
shlb
cmp
adc
out
mov
inc
dec
leave
push
xchg
mov
xchg
mov
pop
loop
jns
scas
jne
loope
jbe
sbb
fidivrs
in
xchg
js
out
pop
or
or
jne
movb
sbb
sbb
adc
jge
inc
mov
jo
ficompl
test
push
xor
mov
inc
add
lret
insl
rcll
and
add
push
xlat
test
jo
sbb
out
lahf
dec
sub
xchg
sub
jge
jnp
add
mov
adc
jp
adc
and
pop
add
aad
in
sub
push
imul
and
ret
ret
in
call
pushf
std
out
mov
mov
imulb
sbb
pop
or
xor
rcll
movsl
or
lahf
push
or
push
mov
push
pop
and
punpckhdq
sbb
xor
repz
mov
cs
inc
add
cmp
mov
fwait
mov
mov
and
movl
push
imul
and
mov
inc
mov
dec
je
jnp
add
push
test
adc
loopne
adc
sbbl
ret
lea
in
and
xor
imul
cmp
mov
mov
fwait
sbb
es
andl
pcmpeqd
jmp
out
test
jg
xchg
cld
pop
and
loopne
aam
xor
jns
add
mov
inc
mov
jne
push
ret
pushf
fisttpll
daa
adc
adc
insb
mov
jnp
xchg
pop
sub
mov
loop
ds
jbe
sub
sbb
or
inc
test
mov
inc
adc
jp
xchg
sbb
sub
xchg
sti
mov
stos
push
fadds
ja
push
dec
loop
add
mov
cmp
in
cwtl
mov
imul
ret
pop
rolb
add
fildll
cmc
ljmp
mov
push
mov
rcll
dec
scas
jmp
mov
inc
fcomps
push
and
hlt
stos
pop
jo
sbb
cmpb
fstps
sub
movsl
cmp
mov
jle
ljmp
inc
dec
sub
add
push
aaa
mov
pop
inc
cmp
loopne
jp
pop
lock
lret
shlb
loop
mov
push
imul
cwtl
push
sub
jns
aam
xor
push
dec
mov
cmp
stos
add
pop
test
arpl
xor
lods
mov
out
cli
mov
xor
call
bound
pop
hlt
aaa
ds
loopne
mov
inc
mov
push
mov
mov
pop
cs
popa
sbb
ds
jle
pop
cld
lahf
in
std
fistpll
adc
popa
mov
and
add
jmp
ret
rolb
jo
fimull
js
cmpl
sub
je
pop
push
xchg
or
sub
lock
adc
xor
imul
dec
stos
xor
mov
das
andl
je
stos
cli
dec
call
jmp
jecxz
sti
sbb
mov
dec
loop
mov
xlat
pop
jmp
mov
xchg
arpl
pop
loop
repnz
dec
mov
lahf
hlt
mov
shll
push
subb
jnp
call
dec
add
call
dec
add
and
push
or
jle
lcall
decl
or
loopne
ljmp
ss
xor
mov
inc
inc
xlat
loop
mov
aaa
arpl
lea
adc
incl
sub
lods
call
test
or
jecxz
jle
leave
or
sub
inc
daa
mov
sbb
in
into
scas
mov
mov
add
cmp
insb
mov
sub
jg
loope
fadd
lods
subl
sahf
jae
loop
dec
filds
loope
fsubp
mov
ss
outsb
or
test
add
test
xor
stos
lea
cmc
jp
cltd
outsb
daa
inc
idiv
adc
sti
cld
pop
enter
les
testl
cmp
and
mov
jmp
andb
out
aad
adc
aas
add
nop
lea
inc
mov
or
or
out
inc
mov
int
enter
xchg
and
clc
push
inc
lcall
add
inc
mov
xor
push
movsb
dec
and
mov
or
or
cmp
stc
pop
ja
xor
mov
aaa
adc
mov
push
jne
xor
inc
stc
popf
sub
sbb
scas
je
adc
lahf
fimull
add
push
mov
mov
fsts
adc
sub
sahf
ljmp
fwait
rcrl
dec
mov
mov
xor
push
inc
je
sub
mov
test
arpl
jmp
dec
popf
cmp
or
ret
jge
cld
leave
lcall
cmpb
mov
fbld
mov
xchg
xorl
outsl
stos
daa
push
jl
adc
clc
or
aad
dec
movsb
or
ret
loopne
shlb
add
or
je
mull
ror
inc
or
pop
into
pop
jg
push
subb
adc
mov
add
mov
imul
cmpsl
jo
xchg
rcll
push
roll
xchg
dec
test
test
cmp
stc
mov
loop
cmp
in
std
popa
add
sbb
popf
mov
jle
mov
add
add
mov
shrl
imul
dec
xchg
lret
ljmp
mov
dec
pop
fistps
mov
mov
xor
or
ja
adc
xor
or
outsb
jl
sbb
mov
aad
mov
jp
or
add
add
in
adc
ja
shlb
sarl
mov
mov
incl
mov
test
rolb
pusha
jmp
fwait
ja
test
stc
xor
call
jbe
cmp
inc
mov
sbb
scas
lahf
js
adc
mov
scas
iret
fisttpl
or
cmp
push
jl
out
push
xchg
roll
test
std
or
movsb
int
push
adc
sub
je
cmp
sub
dec
pop
mov
sub
pop
cltd
clc
pop
shll
into
and
jo
fistps
mov
push
sub
or
mov
loope
inc
add
or
inc
or
std
cmp
cmpsb
add
mov
pushf
push
dec
insl
add
or
or
je
imul
loopne
inc
js
call
lods
repz
add
or
mov
addb
inc
add
push
push
or
inc
and
outsl
jns
call
xorl
pop
not
jne
call
push
ss
lock
add
mov
cmp
shr
std
dec
add
add
cmp
imul
lcall
push
call
inc
in
add
data16
push
in
and
cmp
mov
divb
inc
mov
or
fldl
stc
add
jb
push
imul
ss
push
add
inc
xor
push
in
xor
and
jns
cmp
je
add
lods
sbb
inc
push
mov
ret
jecxz
fstps
into
dec
adc
dec
not
adc
testl
push
fisttpl
xor
push
pop
push
gs
or
jg
inc
sbb
lss
cmovs
fisubrs
aam
aaa
ja
push
mov
inc
jb
aaa
or
fstp
sub
xor
xor
push
pop
je
mov
fsubrs
enterw
gs
lods
cmp
insb
and
js
fimuls
cmp
js
push
fistl
cmovno
data16
push
or
repnz
arpl
adc
fcoml
sti
aaa
add
loopne
xor
xor
call
sarl
je
mov
push
sub
or
not
data16
call
sub
adc
neg
jmp
or
test
lock
cmp
push
pop
ljmp
lds
notl
pop
aas
mov
js
inc
add
addl
dec
pop
dec
xor
js
adc
push
mov
movsl
dec
push
scas
call
jl
dec
jns
icebp
sub
mov
jg
pop
neg
adc
dec
add
sub
sbb
fcompl
fists
and
mov
loop
sub
outsl
mov
and
dec
sbb
call
jo
decl
sbb
leave
ret
push
xchg
mov
outsb
ja
fs
mov
out
cmp
imul
pop
mov
fs
xchg
push
fldt
inc
push
pop
inc
xchg
xor
jno
adc
cmp
jg
add
or
jae
or
bound
jnp
mov
lds
jno
scas
call
lahf
dec
pop
mov
iret
adc
insl
push
enter
dec
sbb
push
add
add
xor
lock
or
subl
xor
mov
gs
xor
call
or
pop
popf
insl
xor
shll
repz
push
loope
mov
je
jb
or
fldlg2
ds
icebp
xorb
or
cmpsl
jge
sub
mov
add
dec
sbb
jmp
pop
shlb
decl
sub
imul
scas
pop
jp
stos
clc
incb
jle
push
aas
scas
push
sar
push
jae
sub
xchg
dec
addr16
dec
dec
jb
hlt
inc
outsb
das
pop
pop
hlt
aas
push
bound
xor
and
xlat
icebp
outsb
adc
dec
ret
subps
xchg
les
and
cmp
jno
mov
cmp
data16
sti
jmp
or
out
add
enter
add
sub
aad
std
aam
insb
xor
dec
push
pusha
mov
jecxz
in
fisttps
jne
in
jle
xor
inc
mov
mov
pusha
cmp
xor
into
incb
push
add
mov
mov
xorl
push
outsl
push
repnz
and
push
inc
call
popl
jmp
or
xor
inc
dec
imul
addr16
fnstenv
out
adc
dec
pop
data16
mov
or
inc
dec
mov
or
mov
fwait
sub
xor
insl
insl
dec
shrl
jmp
mov
lock
aad
test
sub
jae
add
mov
test
iret
insl
add
ret
arpl
inc
or
addl
jp
out
popf
rcll
dec
insb
cwtl
icebp
cmp
add
sub
ds
push
sub
addr16
add
repnz
test
cld
call
sbb
in
clc
fnstsw
push
loopne
mov
cwtl
shrb
cmpsb
fwait
push
sub
pop
push
jl
fwait
mov
jp
idivl
aaa
cwtl
imul
fsubr
cmp
adc
or
push
add
jmp
aam
adcb
add
jo
sub
jne
arpl
lods
addr16
jg
call
repnz
push
sti
sbb
push
adc
dec
pop
sbb
andb
xchg
in
fldt
pop
fldl2t
and
jmp
mov
mov
lock
push
add
stc
dec
push
not
ss
outsl
ffreep
mov
push
dec
inc
inc
pop
add
add
sbb
sarl
mov
mov
inc
and
add
je
shrb
push
aaa
push
inc
inc
sar
push
pop
clc
sub
push
cmp
jg
outsl
orl
adc
sub
dec
loop
sub
mov
inc
pop
push
repz
pop
pop
mov
sub
mov
sub
mov
cld
mov
adc
inc
les
ficompl
mov
mov
rorb
fsts
or
mov
and
mov
add
dec
adc
inc
add
sbb
adc
fisttpl
test
aaa
sbb
pop
pop
or
xor
dec
dec
xchg
call
jo
ds
pop
popa
xchg
mov
add
jo
xchg
xor
and
mov
in
pusha
pop
sbbb
pop
pop
jo
dec
das
jae
dec
dec
push
jb
lods
lret
jo
jne
xor
iret
inc
push
es
inc
inc
sbb
jae
icebp
pop
mov
mov
cmp
aam
dec
inc
xchg
or
ja
push
mov
leave
clc
pop
dec
push
js
mov
sbb
daa
fwait
les
add
mov
inc
bound
gs
add
push
imul
out
xor
jo
sub
addl
push
and
fstpl
fdivl
ss
outsb
push
test
mov
imull
sbb
dec
call
mov
lret
add
clc
pop
bound
mov
xor
je
loop
psubusb
sbb
xor
pop
mov
add
add
pop
dec
mov
add
inc
pop
inc
inc
mov
sti
jg
js
jp
inc
fsubs
movsb
dec
dec
cld
fmulp
test
fsave
mov
nop
sub
pop
mov
bswap
add
ret
roll
fwait
es
push
sub
fldlg2
or
or
mov
cmp
cmpsb
clc
adc
mov
mov
or
imul
cmp
in
and
out
fdivs
dec
popa
push
cmp
in
xorl
mov
mov
push
or
ljmp
add
sub
sub
cmp
call
or
dec
jg
jbe
outsl
jno
outsl
lock
jge
jno
push
cmp
jno
or
dec
sub
pushf
and
inc
cwtl
or
dec
ltr
cli
push
or
xor
stos
movsb
leave
push
sar
xor
push
xchg
jne
cmp
mov
fs
jo
and
jp
jns
mov
outsb
mov
lods
in
xor
jmp
insb
andl
out
pop
es
adc
inc
pusha
sbb
aaa
xchg
jb
push
xchg
cmpsl
sti
les
push
pop
add
addb
adc
xchg
pop
ret
jmp
outsb
push
aad
add
movsl
popa
mov
jecxz
mov
daa
idivl
aad
xor
jecxz
fdivp
dec
or
pusha
pop
faddl
addb
inc
mov
repnz
out
gs
fs
dec
les
jbe
ja
cli
pusha
xor
adc
insl
and
das
sbb
aas
xor
ss
ja
clc
add
fldt
jae
mov
cmp
xor
js
xchg
mov
pop
push
dec
mov
mov
pop
repz
sbb
push
mov
repz
sar
test
jge
insb
sbb
outsb
rcr
mov
pop
pop
ja
std
out
incl
xor
bound
mov
push
inc
mov
int3
dec
cmp
xorl
pop
icebp
pop
cmp
in
in
xor
cld
fidivrl
inc
imul
lock
jbe
call
lahf
inc
fs
arpl
xchg
cmp
fs
pop
or
aam
dec
or
or
xor
push
js
call
sbb
xor
das
jo
mov
inc
jmp
fistps
fiadds
push
sbb
mov
in
inc
mov
add
add
add
rorb
loopne
cmp
xor
call
push
xor
call
mov
sub
push
stos
lea
ret
cs
dec
mov
jmp
mov
in
in
add
ljmp
push
xor
mov
int
jp
push
push
sub
or
pop
inc
aaa
inc
add
inc
sub
lcall
mov
lods
or
cmp
and
add
dec
cmpb
mov
inc
inc
cmp
push
pop
dec
inc
call
test
mov
pop
mov
les
and
pushf
scas
ret
aam
inc
je
push
add
call
pop
ss
mov
push
dec
mov
lret
repz
idivb
jp
inc
fs
je
jb
push
sub
and
jmp
xchg
call
inc
mov
outsl
jb
insb
js
loopne
push
cwtl
sarb
mov
push
je
dec
push
xchg
and
aas
sub
dec
adc
call
mov
cmp
loopne
shrb
outsl
icebp
sub
pop
mov
pop
pop
inc
stos
push
dec
mov
cmpsb
dec
push
or
pusha
pop
dec
push
stos
std
jecxz
lds
mov
push
jg
jnp,pt
sbb
cmp
sub
push
add
lahf
jo
sub
flds
lret
push
rorl
out
lods
fisubs
inc
fucomi
lahf
out
push
add
dec
xchg
xor
popl
push
lods
jne
or
push
cmc
push
add
js
push
les
inc
sbb
aas
and
or
shrb
inc
push
jne
frstor
pop
push
jb
or
jl
add
inc
enter
push
jg
mov
arpl
jne
fs
loope
enter
jle
fldcw
testb
dec
std
into
jmp
ss
int
and
inc
add
push
leave
add
imul
lods
add
jns
push
xchg
cmp
and
pop
mov
xor
push
lcall
in
jbe
pop
ja
dec
push
jno
imul
mov
cmpsb
call
xor
leave
adc
hlt
push
sbb
sub
fdiv
pop
sub
aam
rcll
sbb
add
pop
fnstsw
in
dec
call
mov
push
or
neg
dec
inc
dec
push
dec
insb
jno
xor
pop
xchg
loop
mov
fsubrs
cmpxchg
aam
fsubr
adc
or
call
out
fistps
imul
push
inc
push
cmpsb
or
jg
loop
push
mov
lret
int3
or
lcall
jno
sahf
inc
push
addr16
arpl
mov
loope
in
dec
xlat
out
popa
push
mov
lea
sub
or
shl
xchg
outsb
icebp
shlb
sub
cmp
adc
jle
outsl
outsl
les
xchg
jecxz
push
fldl
ds
mov
leave
cmp
daa
pop
dec
je
xchg
dec
data16
pop
dec
inc
or
pusha
sbb
mov
or
xor
add
mov
sub
dec
xor
cld
shrb
orl
insb
js
jmp
add
stc
testb
push
cwtl
dec
int3
popa
push
or
je
inc
xor
jo
aaa
or
clc
cmpsb
push
xchg
dec
xor
ret
test
lods
or
insb
or
push
insb
push
adc
lea
and
xor
ss
push
jae
dec
inc
scas
pop
call
cmp
aad
daa
mov
pop
push
fdiv
push
push
dec
push
xor
inc
mov
cmp
insl
xor
fisttpll
lock
in
add
hlt
imul
arpl
sub
loop
mov
xchg
dec
int
dec
jae
pop
call
push
cmp
stos
rcrb
cmp
push
xor
pop
pop
sub
mov
dec
sbb
sub
shl
ja
push
mov
sub
sbb
js
ror
divl
jmp
jmp
jne
add
add
cli
sbb
dec
divl
xchg
nopl
ss
in
push
bound
pushl
fistpll
fiaddl
fsubrp
xor
jl
idiv
and
and
dec
jge
dec
add
add
add
andb
and
or
adc
add
jbe
mov
adc
add
or
or
add
addb
fldt
add
add
in
mov
imul
js
add
or
and
inc
or
inc
jns
insb
mov
dec
dec
push
and
sub
dec
adc
add
fnsave
add
or
pop
inc
adc
mov
mov
add
add
pop
dec
dec
push
push
push
inc
lods
mov
mov
addb
and
jae
fnsave
orb
sub
adc
sub
cmp
lcall
adc
fnsave
and
or
and
je
mov
cmp
out
mov
inc
outsl
xchg
add
notb
mov
lret
adc
andb
xlat
loop
pop
sub
jae
imul
inc
mov
adc
sbb
addr16
ljmp
push
pop
mulb
inc
shll
sbb
or
pop
enter
sarb
fwait
xchg
jbe
inc
add
cs
fistl
pop
and
adc
lods
mov
dec
sbb
inc
adc
imul
push
cmp
addl
push
repnz
push
adc
mov
cmp
mov
fisubs
push
push
lods
sahf
in
jns
cmpb
pop
nop
xchg
add
sub
inc
and
and
add
xor
stos
lock
jle
insb
mov
inc
push
sti
mov
mov
cmpb
mov
idivl
push
ja
incb
test
add
and
mov
mov
lret
and
inc
das
xchg
add
inc
div
push
inc
dec
sub
jle
std
cltd
inc
mov
jo
jle
fucomp
roll
sbb
out
sti
arpl
mov
add
rclb
sahf
push
or
cmp
adc
add
xchg
addb
mov
pop
test
nop
xor
sub
sbb
ss
orl
or
or
sub
call
fisttpll
out
cmp
in
jo
mov
add
mov
stc
jmp
pop
movsb
add
or
or
enter
cmc
lock
adc
testl
test
push
pop
cltd
jae
fmuls
mov
mov
outsb
push
lock
aam
sub
or
xor
shlb
add
in
out
inc
add
mov
mov
testl
cmp
bound
sbbl
out
rolb
int
cwtl
aaa
or
std
pop
jbe
add
std
in
cwtl
aaa
aad
or
jle
lret
imul
push
orb
sti
or
inc
adc
lds
mov
arpl
dec
inc
inc
jae
mov
inc
test
inc
gs
jb
xor
inc
orl
bound
daa
outsl
pop
mov
std
adc
sbb
sub
and
fs
lea
test
push
or
iret
or
ror
ja
or
or
inc
in
and
mov
enter
jo
xor
inc
std
subb
ss
fcoml
push
and
jp
push
mov
subl
shll
negl
loope
lods
jb
jae
jb
lcall
in
aam
adc
out
jne
loop
fistpl
push
cmp
xchg
shld
cmp
pop
jg
fldcw
lea
fdivp
push
outsb
adc
stos
pop
mov
mov
repz
outsb
pop
mov
fldcw
inc
mov
dec
adc
ret
sbb
cwtl
movsl
pop
jp
mov
cmp
fmulp
gs
leave
mov
dec
mov
sub
fisttps
mov
dec
cwtl
sub
sti
add
xchg
and
popa
jno
in
or
and
xchg
add
push
paddb
push
mov
dec
and
imul
add
jnp
ret
mov
mov
mov
mov
xchg
lcall
ja
pop
imul
mov
cmp
mov
lds
lods
fiaddl
movsb
ja
lods
push
jno
adcl
or
dec
inc
inc
stc
cmp
incb
dec
test
xor
lock
lock
mov
xchg
adc
xchg
aas
roll
inc
std
dec
lds
jecxz
test
dec
push
xor
pop
sbb
pop
xchg
in
mov
je
lods
mov
push
add
xchg
andl
mov
and
rolb
jl
mov
push
mull
sbb
xchg
add
mov
in
push
popa
xchg
addr16
aad
jmp
sbb
add
fisubrl
psubusw
enter
push
outsl
imul
rclb
adc
inc
in
mov
or
sbbl
fldl
sbb
and
les
xchg
mov
and
jge
and
mov
jmp
rolb
js
lock
cmpl
mov
fdivr
leave
jns
incl
fdivl
jns
insl
adc
dec
dec
in
dec
pop
lahf
pop
jmp
mov
movsl
outsl
push
cmp
pop
ss
cmp
cld
das
fimuls
jne
inc
pop
cwtl
aam
pop
scas
push
lahf
sub
jae
mov
loope
adc
dec
into
sub
push
mov
ljmp
adcl
and
inc
and
mov
ret
or
mov
pop
cmp
clc
xchg
sbb
lods
dec
outsb
rol
dec
out
fstps
adc
push
and
inc
mov
clc
xchg
dec
popf
mov
xchg
in
cmp
sbb
out
mov
sar
xchg
out
aad
jp
jbe
adc
pop
push
aas
popa
inc
fdivs
or
sub
jo
insl
out
xor
in
sbb
dec
aad
cld
pop
mov
js
push
and
loop
leave
call
jno
inc
js
jg
aas
mov
lock
lcall
dec
or
push
insb
or
add
jmp
inc
mov
cwtl
sbb
xchg
inc
sti
out
cmpb
iret
frstor
jecxz
adc
scas
lea
and
aam
push
cmpl
xchg
lds
and
in
lds
mov
loop
arpl
xchg
mov
mov
dec
sub
push
pop
mov
loope
aas
andl
adc
roll
mov
sub
ret
sarb
clc
pop
and
or
jmp
inc
and
in
aam
add
xchg
xchg
inc
mov
out
pop
or
orb
out
adc
js
aam
mov
mov
or
iret
and
out
cwtl
mov
ret
mov
dec
pop
negb
sub
or
aaa
inc
je
mov
daa
mov
rclb
lock
mov
leave
stos
or
xchg
jmp
mov
ljmp
jae
mov
inc
and
repnz
pop
sahf
sbb
out
gs
add
dec
mov
insb
ja
insb
adc
out
push
and
mov
loop
out
das
test
xchg
pop
into
fs
push
inc
jecxz
or
jae
aaa
mov
sbb
mov
stc
insl
sbb
adc
dec
inc
sbbl
jbe
cmpsb
shr
pop
addr16
rolb
mov
sti
int3
call
xchg
shlb
add
and
cmpl
hlt
add
mov
xchg
lcall
pop
ficomps
outsb
int3
push
mov
mov
ret
movsl
pop
test
sahf
insl
ljmp
pop
push
mov
cmp
fistpl
arpl
cli
and
and
cmp
or
xor
jbe
into
imul
fisubrs
test
jp
sub
lcall
xchg
push
mov
adc
sub
mov
ficoml
rcr
loop
mov
or
dec
fmull
mov
cmpsl
fcmovne
xchg
mov
rolb
xor
jg
add
add
jb
pop
loop
inc
loope
fnstcw
xor
insb
add
cmp
incl
inc
cmp
mov
loope
popa
js
adc
pop
outsl
inc
movsl
data16
ret
in
push
mov
dec
clc
ss
xchg
jl
add
fcomip
jo
xchg
ror
and
loope
aaa
repz
pusha
test
fidivrs
cmp
lds
pop
xor
in
sub
lods
push
xor
aam
je
lds
xor
ss
out
pop
mov
jge
lahf
dec
or
xlat
fisttpll
xchg
popf
add
or
dec
adc
jne
fsubr
xchg
or
jmp
mov
xchg
bound
mov
bound
loop
push
scas
sub
push
or
jo
push
lcall
xchg
push
insb
cmc
add
hlt
lahf
insb
push
inc
aam
fidivl
inc
xchg
sbb
pop
cmc
mulb
testl
xchg
sahf
and
adcb
gs
sub
repnz
xchg
xchg
mov
out
or
loope
and
out
and
ror
adc
push
cs
in
out
xchg
push
or
stos
sahf
inc
and
addr16
stos
add
cs
in
mov
jmp
rolb
lahf
aaa
mov
in
mov
inc
int3
cmc
or
cltd
data16
imulb
mov
pop
mov
xor
loop
decb
inc
repnz
int3
and
mov
add
push
mov
fdivp
jbe
mov
add
insb
sbb
imul
outsb
pop
je
jne
loop
cmp
loopne
iret
mov
shll
pop
pop
jb
and
jno
cs
add
inc
mov
sbb
dec
call
int
stos
rol
insb
adc
icebp
fnstsw
pop
jns
inc
push
push
test
mov
test
adc
aaa
xchg
arpl
insb
mov
clc
push
in
test
aad
ja
jecxz
ret
repnz
mull
and
sub
push
mov
adc
add
push
clc
sbb
fistpl
inc
lods
pop
xchg
or
lods
mov
pop
add
and
pop
dec
mov
fistps
fisttpll
push
rcl
insl
dec
pop
test
aas
call
mov
jl
lea
test
fcompl
hlt
mov
ds
loop
call
divb
push
push
xchg
test
je
sbb
sub
adc
out
adc
aas
into
das
add
inc
jb
pop
sysret
xchg
outsl
xor
movsb
sarb
movsb
fidivrs
stos
and
adc
sub
ss
dec
cmp
roll
adcl
inc
andl
test
pop
sti
stos
or
sbb
pop
push
push
shll
loop
xchg
repz
add
sbb
hlt
addl
cwtl
jae
xor
lods
sahf
xor
into
jb
and
outsb
pop
jnp
adc
shrb
rcrb
sbb
data16
and
cltd
scas
mov
pop
inc
loop
rcll
jp
xchg
icebp
dec
popa
adc
pop
or
push
sub
sbb
mov
sbb
adc
xchg
ret
push
aam
add
xor
fwait
or
or
jbe
sbb
aas
jne
pop
jnp
jae
xor
mov
or
mov
mov
cmpl
stc
rorl
test
cmc
sub
mov
push
dec
mov
scas
pop
aam
mov
xlat
pop
add
mov
lcall
xor
or
inc
sti
mov
jo
xor
mov
shrl
dec
mov
jns
push
jo
fsts
outsl
xor
shrb
nop
dec
adc
cmp
push
mov
lds
sbb
ds
fmull
xor
fidivrl
mov
pop
xchg
add
sarl
mov
adc
pusha
cmpsl
addr16
leave
inc
sub
or
jecxz
pop
mov
adc
mov
rorb
cmpsl
mov
mov
daa
pusha
pop
mov
add
xor
adc
fwait
aam
xor
adc
add
fwait
jo
imul
xchg
scas
lods
loopne
xchg
shr
aaa
xor
mov
push
lods
lods
outsb
call
into
pushf
das
fcompl
pop
mov
xor
cltd
outsb
fsubp
jmp
and
scas
xor
addb
adc
rorb
les
pop
inc
inc
push
iret
shrl
pop
mov
fldenv
or
add
lret
mov
push
pop
push
aas
cwtl
rolb
imul
push
push
and
popa
jle
shll
xor
or
mov
mov
cmp
push
andb
or
test
pop
shl
movups
into
lock
mov
xchg
lcall
shr
and
add
jmp
mov
rclb
sahf
jae
jecxz
sbb
pop
push
xchg
mov
mov
cltd
ljmp
sbb
mov
mov
filds
push
push
dec
mov
loopne,pt
mov
jecxz
fdivrl
or
cmp
cmpsl
cmp
arpl
mov
scas
and
mov
shlb
mov
imul
nop
fmull
adc
das
xor
out
lret
mov
mov
mov
or
xchg
ss
outsl
lahf
add
inc
decl
std
ret
repz
ss
ja
pop
fisttpl
sbb
imul
and
dec
mov
lret
scas
ret
sti
call
js
into
push
ret
test
ficompl
mov
pop
mov
js
xchg
movsb
push
inc
mov
lock
cmp
jle
sahf
inc
repnz
repz
adc
jge
cmp
mov
fdivs
fbstp
pop
inc
movsb
ljmp
pusha
mov
add
popf
xchg
cmp
mov
push
sbb
fs
addr16
adc
pop
ret
dec
push
decb
mov
inc
test
out
sbb
push
sbb
loopne
xchg
xchg
xor
int3
xchg
cwtl
notb
pusha
mov
shll
add
add
roll
push
jecxz
shll
or
adc
imul
stos
jmp
subb
ds
fwait
cmp
lret
insb
and
cmc
jmp
cmpsl
subb
or
mov
gs
pusha
sub
xlat
sbb
jg
pushf
push
mov
imul
hlt
adc
int
and
aas
test
mov
icebp
stos
js
push
mov
call
repz
lret
testl
mov
bound
insl
and
inc
fisttpll
mov
dec
es
stos
loop
mov
lock
and
loopne
test
stos
mov
out
fcompl
movsb
jge
sub
sbb
dec
adc
adc
loope
psllw
and
and
xlat
insl
xchg
clc
push
pop
je
adc
sbb
dec
xchg
daa
movl
mov
pop
pushf
sub
out
incl
mov
mov
je
lock
cmp
movsl
clc
rcl
cld
call
inc
sub
lahf
pop
mov
xchg
mov
aas
adc
cmpsl
adc
dec
xchg
fildl
pop
and
cli
subl
mov
fildl
loope
cmp
fmul
rorb
aas
add
cmp
ljmp
push
push
mov
add
lock
sbb
mov
mov
dec
add
xchg
rcrb
cmp
roll
pop
mov
xor
push
pop
pop
cmp
enter
arpl
xchg
rclb
dec
xchg
push
roll
xchg
in
ja
jnp
inc
dec
movl
jns
les
ss
sahf
add
adc
loope
movsb
push
je
dec
inc
jg
jg
jo
cmp
or
fstp
stos
and
das
mov
pop
jns
rolb
jecxz
shll
movsb
repnz
pop
stos
or
mov
mov
rol
or
fbld
in
js
jg
shll
mov
mov
xchg
add
mov
nop
loop
add
cmpl
adc
inc
decb
push
push
ljmp
cmpl
lcall
dec
loop
adc
jecxz
test
repnz
sbb
hlt
inc
push
aaa
fcompl
jb
push
movsl
es
stc
out
enter
shrl
mov
push
movb
jmp
movsb
inc
inc
dec
in
inc
ja
inc
mov
adc
inc
push
jl
hlt
add
loop
and
mov
mov
and
pop
popw
vpsubsw
jne
cmpsl
cmpl
cs
jp
cmp
adc
xor
sub
icebp
lods
add
lods
sbb
das
jle
xorl
xor
inc
aad
xchg
push
sbb
mov
sub
pushf
aaa
mov
pusha
clc
and
or
mov
pusha
sub
and
icebp
imulb
ljmp
testl
and
inc
jae
into
or
xchg
stos
xor
mov
push
jnp
inc
movsb
mov
gs
data16
aaa
test
ss
inc
or
enter
bound
outsl
out
das
movsb
inc
js
nop
jle
adc
sahf
cmp
xor
scas
or
push
sbb
sti
stos
rorl
ret
es
dec
lods
xchg
mov
ja
and
in
jne
lahf
ret
dec
add
inc
jge
vpavgb
mov
mov
jbe
mov
pop
stos
les
lea
mov
jbe
sub
arpl
andl
sub
lock
xchg
mov
inc
je
xchg
pop
cmp
add
mov
jg
push
dec
bnd
mov
adc
dec
aaa
icebp
fmull
cmp
pop
add
and
aaa
fdivp
or
sti
ja
clc
pop
jle
vmread
mov
mov
aad
das
stos
jp
out
lahf
clc
cltd
mov
mov
sbb
xor
sub
mov
and
sbb
adc
les
jle
sbb
jmp
andb
nop
std
sbb
movsb
lea
sbb
mov
clc
iret
pop
jle
sahf
je
lret
mov
lcall
dec
pop
mov
sbb
jp
fdivrs
push
and
xor
jecxz
bound
sahf
aam
ret
ljmp
lcall
jo
mov
movl
out
sbb
pop
ret
mulb
sbb
clc
xchg
pop
mov
fs
bound
js
pop
mov
iret
pop
mov
mul
es
lods
jno
sbb
jnp
inc
fstps
bound
cltd
sub
pop
xor
sti
in
popf
xchg
and
into
xorl
ss
pop
pop
ret
imul
mov
inc
mov
sub
inc
mov
add
mov
jno
fwait
mov
sbb
sub
cmp
push
pusha
sbb
xchg
ds
sbb
push
xchg
adc
dec
mov
pop
andl
xchg
roll
pop
add
fwait
sub
cmp
mov
arpl
mov
scas
iret
mov
mov
mov
push
bound
fistl
pop
popa
ret
or
adc
ss
add
nop
imulb
add
inc
dec
jb
stos
inc
data16
movsl
or
test
xchg
mov
sbb
or
stc
jbe
fwait
into
jle
dec
lahf
insl
pop
or
dec
test
ret
repz
lea
jne
imul
add
mov
movsl
lock
loop
test
mov
xchg
lea
add
pop
mov
roll
lods
jmp
add
repz
outsl
adc
sbb
and
mov
add
jle
push
insb
adc
cs
ljmp
call
es
orl
or
lahf
in
cmp
es
scas
jmp
mov
fxtract
xor
jne
sti
cmpsl
jmp
arpl
push
and
cld
leave
xchg
push
add
mov
popf
mov
push
inc
jae
lock
sti
int3
mov
add
sub
xlat
and
into
lods
pop
and
nop
xlat
loope
mov
int3
test
shr
addr16
jb
dec
jp
xchg
or
pop
dec
aas
mov
jg
or
rorw
push
mov
loop
mov
ljmp
push
test
sub
or
inc
in
xchg
test
mov
lret
subl
xchg
mov
adc
push
insl
cld
aam
cmc
fwait
rorl
jmp
movsl
add
roll
mov
lods
and
in
ficompl
ret
add
addr16
fisttpl
aad
mov
rcrb
or
jp
inc
and
jle,pt
enter
or
or
cli
lcall
adc
fwait
ja
sub
adc
push
outsl
hlt
andl
inc
sbb
imul
ds
int3
test
pop
subb
movsl
mov
push
in
sbb
faddl
cli
fs
xor
test
and
mov
out
in
mov
cmpsl
push
mov
add
daa
int
xchg
scas
adc
loop
add
daa
in
mov
ss
pop
in
inc
fwait
jmp
mov
mov
cli
shr
pop
add
push
fisttpl
pop
mov
xorb
mov
movlps
xchg
lcall
test
add
pushf
push
dec
scas
add
orb
cwtl
add
push
mov
fistpll
ds
adcb
xchg
fidivrs
mov
outsl
fdivs
push
lcall
pop
testl
ds
rorl
pop
sbb
cmp
push
lock
lcall
jo
into
incb
movsb
pop
and
out
pop
pushf
je
ja
mov
add
or
test
and
data16
or
inc
add
data16
add
add
mov
mov
xor
mov
cmp
push
adc
dec
fisubs
out
mov
sub
std
jg
inc
and
mov
cld
rcrl
pop
push
jle
rolb
test
adc
add
or
inc
pop
subb
out
ficomps
adc
cmc
jbe
xor
cmp
in
adc
mov
in
cmpsb
or
pop
rcrb
decb
lret
jno
cmp
cwtl
sahf
inc
jo
hlt
mov
push
ret
lret
daa
xor
cmp
loop
insb
in
xchg
dec
dec
sbb
push
push
inc
pop
push
mov
popf
dec
cmc
sub
sub
and
and
mov
mov
stc
xor
sti
mov
push
std
outsl
push
rclb
sbb
add
jnp
addr16
pop
int3
loop
test
fs
loopne
out
xor
mov
mov
adc
jno
outsb
mov
call
jg
xchg
cltd
scas
mov
rclb
xchg
fcmovne
imul
fucom
fadd
pop
dec
inc
pushf
and
xchg
sub
push
sub
rclb
lds
sbbb
pop
sub
rcrl
xor
lds
jg
js
jp
dec
adc
call
add
fsubrs
or
insl
aad
std
mov
dec
insl
add
and
js
clc
outsb
loop
xchg
ss
inc
iret
stos
and
dec
lock
add
cmp
clc
jp
sarb
into
cmp
scas
dec
dec
push
mov
xor
and
mov
dec
dec
dec
inc
dec
testl
clc
push
inc
sub
dec
push
mov
fst
push
icebp
sbb
test
pop
lods
rcr
leave
add
ja
insb
dec
and
jge
popf
imul
ds
jo
dec
xor
dec
jmp
add
sub
int
add
push
and
aas
iret
add
movsb
dec
sti
mov
notb
mov
jno
fldcw
dec
ret
dec
mov
call
orl
jae
push
or
je
sbb
cmp
test
movsb
testl
push
sub
jecxz
push
shlb
adc
inc
shlb
mov
or
add
lock
lock
sbb
xor
ja
mov
pop
outsl
shll
inc
jl
cmp
add
cmp
add
adc
sbb
jbe
test
std
movsl
inc
mov
aas
aam
or
sbb
xchg
sub
cmp
push
jge
lret
testb
call
sub
push
jno
rcll
mov
push
push
repnz
xor
incl
xor
cltd
imul
cmpsb
and
arpl
sub
lret
mov
call
adc
into
mov
dec
scas
ss
inc
les
cmp
dec
adc
clc
mov
jno
mov
xchg
test
inc
icebp
cmp
pushf
les
and
test
pop
adc
add
push
fmull
ljmp
movsbl
insl
sbb
inc
out
lret
int
ret
mov
bound
cli
cmpsl
mov
fcmovb
enter
roll
insl
sti
inc
mov
xchg
add
sub
jl
cwtl
mov
leave
sub
inc
xchg
sub
ficoml
jmp
cli
mov
rorb
stos
ljmp
fcmovnu
or
hlt
xchg
mov
in
loope
xlat
mov
outsl
loopw
sti
add
push
loop
jne
outsl
aas
js
cwtl
in
sarb
push
xor
lods
push
frstor
ds
sub
push
jae
mov
mov
rolb
pusha
dec
pop
sub
pop
cmpl
push
mov
cwtl
or
js
nop
mov
lock
mov
cltd
mov
xor
mov
jecxz
pop
jge
adc
sub
stos
mov
aam
sub
ds
es
jbe
outsl
sub
int3
cmpsl
jp
or
das
jbe
push
cmp
jo
adc
insl
sbb
popf
cmp
jo
push
or
fs
pop
outsb
xor
cld
sub
jb
mov
std
notl
lods
mov
stos
cwtl
mov
lock
mov
add
inc
ret
pop
jns
int3
sub
mov
ret
aaa
cmp
pop
clc
push
aas
mov
mov
repnz
add
mov
jnp
dec
rol
clc
jo
adc
addr16
lock
pop
sbb
or
add
clc
lds
int3
xchg
jb
test
jb
jmp
nop
adc
in
rcll
dec
pop
mov
add
xchg
shll
test
es
adc
pop
mov
aas
mov
and
or
decl
xchg
jecxz
inc
xlat
push
test
pop
inc
insb
jle
cmp
std
lds
into
lea
stos
arpl
aad
lret
jo
sbb
ljmp
push
mov
jp
or
mov
xor
or
sbb
push
dec
sub
lods
int
dec
dec
cmp
cltd
enter
lods
std
push
shr
mov
pop
mov
xor
mov
test
add
jbe
cs
rorl
mov
fdivs
in
mov
mov
lret
lret
insb
call
jno
lahf
mov
adc
clc
or
inc
xchg
in
dec
or
test
xor
cmp
das
cld
rcrb
inc
cmp
inc
out
sub
jge
pusha
mov
icebp
mov
sbb
faddl
dec
xlat
shrb
inc
inc
cmp
aam
and
and
lahf
in
dec
or
sub
pusha
sbb
out
mov
int3
mov
popa
mov
add
jbe
dec
mov
test
aaa
mov
insb
bound
fwait
aad
das
cmp
fwait
mov
aad
in
repz
clc
bound
insb
sbb
and
fldl
cmp
aas
jp
xchg
jb
mov
fmull
push
call
ss
mov
test
cmc
mov
outsl
sbb
push
arpl
mov
pop
lar
bound
mov
push
jne
mov
je
push
xchg
jle
pop
inc
int3
mov
fdivrp
leave
xor
fwait
enter
pop
xor
inc
and
mov
notb
sub
ret
gs
js
pusha
jns
xchg
adc
shlb
inc
dec
jl
sbb
imul
or
aas
sahf
pop
or
pop
add
cmp
filds
dec
aas
aam
sub
in
xor
inc
cmp
outsb
pop
jp
mov
divl
push
dec
loopne
adc
enter
js
imul
pusha
js
mov
stc
jecxz
add
inc
push
cmp
xchg
adc
xchg
out
adc
jmp
mov
daa
mov
xor
stos
ja
dec
mov
jle
loop
jge
pop
pop
leave
pop
mov
aad
ret
and
pushf
adc
jg
pop
pop
xor
mov
mov
push
xchg
or
or
cmpsb
mov
dec
in
inc
adc
add
jbe
lds
aaa
test
mov
jecxz
mov
gs
out
and
sbb
mov
mov
imul
push
add
stc
aad
mov
push
adc
jb
push
or
cmp
inc
cmp
daa
jp
push
jecxz
jl
stos
imul
aam
dec
rorb
push
add
add
fcoms
sti
daa
incb
out
js
lahf
insb
cmpsb
inc
or
mov
add
inc
loop
add
int
mov
outsl
jbe
adc
stos
add
xchg
pop
int3
adc
imul
xchg
cmc
adc
icebp
mov
gs
pusha
ret
or
pop
bound
sbb
loopne
and
movsl
cmpsl
mov
idivb
cmp
jp
shrb
lahf
sub
inc
sbb
fistpl
xchg
mov
pmulhw
out
add
jno
push
push
or
sub
mov
aam
call
stos
subb
aam
addr16
iret
mov
mov
mov
push
jbe
jle
push
outsl
add
jge
sub
dec
fstpl
test
shl
pop
xor
imul
mov
and
adc
mov
adc
jnp
jb
or
sar
iret
sub
je
std
push
insl
mov
sar
pop
add
ljmp
shlb
pop
xchg
xchg
mov
lock
lods
cmp
or
cmc
mov
xor
fstl
push
jno
push
pop
inc
mov
lock
mov
insl
dec
mov
inc
movsb
cli
mov
xor
jns
mov
test
jo
xchg
movsb
je
lahf
sbbb
dec
aad
roll
cs
imul
sahf
in
lods
push
fcomi
pop
sbb
dec
enter
mov
mov
es
std
fwait
mulb
xchg
mov
repnz
xor
js
mov
cmpsb
out
fsubs
int3
adc
repnz
mov
add
lahf
stos
cwtl
sub
xor
dec
hlt
mov
xor
pop
dec
or
cltd
fwait
iret
subb
add
add
repz
sti
lret
dec
pop
jno
int
int3
movsb
es
fwait
sbb
out
cwtl
push
mov
imul
pop
in
jl
adc
pop
and
mov
aad
cwtl
ret
inc
mov
sbb
and
xor
stc
lea
mov
adc
je
sbb
sbb
jecxz
cmpsb
dec
mov
xchg
shrl
nop
cmp
out
ret
add
jp
lods
daa
cmpsb
mov
lods
cmpsl
mov
popa
adcl
enter
sahf
movsb
mov
jecxz
mov
ret
and
fldenv
pop
and
jno
aas
or
cmp
cmp
or
mov
jnp
or
xor
je
xor
nop
jge
mov
test
shll
xorb
shrl
adc
fsub
xor
xchg
bound
jecxz
pop
and
sbb
pop
cwtl
push
pushf
pop
jne
xlat
fcompl
ret
test
sub
fcomps
or
add
popa
push
outsl
xchg
add
pop
icebp
aaa
mov
lods
subl
popf
pop
imul
inc
pop
loope
pop
icebp
xchg
dec
lahf
lock
or
mov
sub
pop
jp
loope
and
cmp
mov
pop
dec
daa
call
fmull
inc
dec
jnp
lds
scas
in
inc
out
sbb
xchg
lock
adc
sub
mov
lahf
stos
push
fadds
pop
dec
add
inc
or
xor
sub
push
push
andb
subb
les
mov
jo
pop
push
dec
ret
jl
or
andb
jle
imul
cmp
add
lret
jge
or
lods
in
or
in
and
mov
loope
jl
and
mov
sub
add
sbb
cs
mov
pusha
daa
outsb
adc
je
popf
ret
sub
push
mov
test
jno
addb
mov
inc
idivb
scas
hlt
mov
daa
pushf
in
push
adcb
repz
jmp
pop
mov
xor
and
xorl
js
movq
sub
hlt
and
jmp
mov
inc
loopw
inc
fcomi
add
mov
sub
dec
dec
je
inc
mov
pusha
mov
cs
sbb
out
pop
lcall
lods
sub
dec
bound
cmp
or
testb
pop
xor
nop
pop
sbb
pop
sbb
or
test
xor
aas
enter
loope
jmp
cmp
lods
test
shlb
or
sbb
cmpsl
je
mov
outsl
fiaddl
mov
jae
sahf
pop
fistpll
push
and
pop
mov
adc
mov
jo
jnp
mov
or
sub
or
aam
xchg
aad
lret
mov
insb
mov
inc
sub
fsubr
bound
repz
mov
insl
pop
xchg
add
adc
lock
mov
enter
mov
mov
adc
ror
jo
or
nop
sub
pop
mov
jp
adc
mov
subb
popa
adcl
xchg
movsb
ret
pop
test
jmp
std
sub
pop
out
rorb
es
repnz
shll
and
test
xor
push
inc
jb
or
push
das
mov
push
fistps
and
lret
sbb
loopne
sub
cmp
xchg
sub
fldcw
sub
push
popa
jne
push
rcrb
pop
sbb
in
ds
fadd
loop
sbb
xchg
push
popf
in
jae
inc
xlat
mov
popf
mov
sub
cmp
sbb
and
jge
add
push
sub
jle
sub
je
cmp
and
scas
fnstcw
push
pop
pop
cmpb
jmp
sahf
je
xchg
pop
in
push
faddl
stc
and
adc
call
cmp
jno
int3
xchg
cwtl
mov
imul
decl
ja
stc
mov
xchg
ljmp
or
movsl
xchg
dec
mov
xor
xchg
sbb
xlat
fwait
ds
nop
sar
leave
call
cli
push
xor
ja
add
xchg
push
sbb
addr16
lahf
clc
add
fs
jle
aad
mov
bound
in
dec
sub
mov
pusha
sub
test
jnp
jbe
ds
stos
dec
shrb
clc
push
or
outsl
adc
sti
inc
aaa
cs
test
pop
dec
jmp
scas
mov
cli
push
cmp
loop
orb
jecxz
adc
pop
lods
loopne
movsl
insl
add
sahf
mov
andl
jge
loop
xor
and
sub
pop
divl
int
adc
jbe
adc
repnz
fisttpl
cmp
adc
sarb
inc
fistpll
mov
jmp
or
fiadds
ret
or
sbb
sbb
push
push
cmp
fimull
xchg
stc
pop
mov
mov
inc
inc
pop
mov
cmp
mov
movsl
aam
cmp
inc
or
push
pop
call
nop
pop
jae
mov
lods
adc
loop
addb
inc
gs
imul
mov
shll
xchg
push
jo
or
out
orl
leave
jmp
mov
out
inc
mov
dec
inc
outsb
aam
jle
paddw
mov
cltd
add
pusha
cmp
lret
or
add
jecxz
add
ds
test
repnz
or
es
or
jo
insb
clc
aad
adc
imul
rcl
lods
add
dec
or
cld
jo
pop
test
pop
movzwl
cwtl
fsubrl
bound
clc
jo
int
cmpl
fisubl
inc
push
or
mov
pop
mov
sub
jl
loope
mov
mov
inc
rcl
jae
pop
xchg
or
call
sbb
dec
mov
leave
xchg
push
mov
sbb
imul
sbb
xor
adc
sbb
or
movsl
or
call
std
ret
ds
test
xlat
cmpsl
ja
or
shl
iret
popf
jno
fcmovbe
add
cmp
rcrl
mov
push
jns
dec
insb
pop
xchg
fucom
je
fsubl
sahf
xchg
pop
or
pop
cli
test
test
das
stc
out
lret
ret
push
and
out
lods
and
popa
sub
cmpsb
ret
or
sarl
add
lahf
shr
jmp
xor
les
icebp
lods
mov
jge
pop
shl
in
sbb
loope
pushf
or
ret
push
movsl
cmpl
or
pop
mov
cmp
fistpl
cmp
loopne
pop
stos
pop
mov
orl
orl
test
jo
push
push
enter
and
mov
mov
fsts
and
in
in
sub
pop
in
jmp
test
jbe
roll
pop
xchg
iret
inc
mov
mov
insb
mov
mov
and
or
or
frstor
rorl
in
popa
pop
xorb
pop
into
or
cmpl
adc
xor
sarl
loop
mov
fs
and
push
adc
push
jo
in
and
loop
push
cmpsl
clc
scas
mov
daa
pusha
jl
cmc
and
movsb
jmp
sbb
xor
dec
popa
loopne
movsl
stos
adc
dec
inc
icebp
push
pop
hlt
out
mov
iret
cwtl
xchg
sti
psubsw
sahf
shll
push
cmp
lret
sbb
outsb
or
adc
and
clc
jno
insb
outsl
outsb
arpl
push
xlat
mov
pop
test
enter
lea
push
inc
addr16
pushf
aaa
repz
mov
xchg
cmp
mov
cmp
les
and
pop
cmpsb
daa
xor
or
not
or
jae
pop
mov
inc
roll
sahf
pop
push
add
movsl
lock
mov
cmp
jo
enter
or
mov
jo
mov
push
ret
jb
ljmp
sub
mov
inc
faddp
add
js
mov
jo
cmpsl
xchg
pop
lea
fisubs
pop
je
js
xchg
jno
push
imul
cs
dec
fcomps
cmp
ds
in
sbb
ret
mov
jl
pop
int
push
shrb
sub
xchg
in
push
push
sbb
cmpsl
mov
mov
gs
pop
ljmp
int3
mov
lahf
push
push
push
dec
dec
sub
xor
sbb
mov
add
dec
cs
outsb
mov
fiaddl
lods
push
das
push
pop
push
cmpsl
hlt
xor
sti
mov
hlt
pop
and
jge
jne
lock
adc
inc
cmp
dec
jecxz
sbb
mov
cmp
inc
cmpsl
movl
push
sbb
cmp
vprotb
and
and
lret
adc
cmovge
mov
lahf
pop
xchg
outsb
xchg
cmp
mov
mov
pop
cmp
push
push
jno
add
push
int
push
stc
and
cld
negb
call
xor
mov
out
jbe
cmpsb
mov
rcrb
dec
sbb
roll
add
xchg
mov
lahf
lock
xchg
ret
and
aas
mov
add
add
xor
orl
outsl
jnp
repz
sbb
mov
pop
sbb
pop
cmc
iret
clc
inc
pop
xchg
hlt
jmp
and
mov
lds
cmp
sbb
rcl
cmp
ds
cli
ja
jne
popa
cwtl
cmp
pop
or
les
inc
std
out
mov
hlt
sbb
and
pop
dec
push
xchg
ret
mov
xor
sub
in
fimull
aas
imul
je
push
lods
push
outsb
or
mov
bound
pop
nop
xor
push
bound
inc
lock
ja
jl
loope
cmp
roll
mov
add
cmp
or
fmull
cmp
lods
xor
lods
and
fstl
cld
idivb
add
xchg
xor
mov
arpl
pop
pop
pushf
jbe
xor
mov
movsl
repnz
pop
clc
xor
lods
or
mov
shlb
rorb
rol
shlb
arpl
push
pop
fimull
push
xchg
dec
ret
lock
and
dec
jmp
push
in
mov
dec
xchg
push
insb
out
out
push
incl
push
sti
enter
stos
adc
push
sbb
scas
pop
in
xchg
ror
xor
insb
sti
rcrb
popf
push
std
fiaddl
pusha
cmp
cli
lea
mov
mov
scas
inc
jnp
ss
cmp
cmp
xor
or
inc
clc
adc
pop
aas
cmpb
roll
mov
inc
rclb
shrb
scas
xchg
lock
mov
lods
xchg
mov
xchg
pop
rcr
mov
das
xlat
insb
mov
mov
cmp
add
pop
adc
xchg
sbb
cmc
mov
js
mov
mov
arpl
rolb
cmp
jb
and
sub
jb
addl
jmp
mov
lock
inc
pop
mov
jecxz
push
imul
xor
push
fidivs
ss
push
adc
ret
xor
xchg
cmp
pop
loope
xchg
sbb
jne
shlb
xor
cmp
mov
xlat
call
lret
sub
lock
fsub
test
out
jno
idiv
mov
lods
ljmp
pextrw
mov
cmc
pushf
iret
mov
into
cmp
pushf
mov
adcl
loopne
sbb
pop
repnz
sub
inc
in
or
pop
jp
lret
push
push
enter
in
lcall
aas
cld
in
inc
mov
pop
xor
adc
mov
fbstp
dec
mov
gs
xchg
lcallw
popl
call
mov
jo
mov
hlt
lret
movb
cmc
mov
sbb
add
sbb
mov
sahf
int
data16
iret
push
in
add
xor
sbbl
sti
mov
cs
inc
xchg
imul
ret
or
subl
rorl
or
xlat
pop
insb
lret
sub
data16
in
call
lcall
mov
mov
xor
scas
js
es
aaa
xor
cld
mov
shrl
push
lds
inc
pop
add
fstl
fstl
mov
mov
push
aas
xchg
jbe
ljmp
dec
adc
mov
scas
and
orl
mov
insl
pusha
sub
sti
xor
inc
rorb
addr16
mov
insl
roll
test
scas
xchg
xchg
xchg
xchg
das
sarl
mov
lret
fidivrs
and
dec
add
icebp
inc
and
and
mov
imul
in
js
inc
sub
add
enter
sarl
addr16
lds
mov
loopne
inc
jmp
cld
jl
jle
sub
clc
xor
inc
jl
dec
pushf
and
sub
and
mov
movsb
addr16
pop
jns
orl
gs
adc
dec
and
sub
fnstenv
es
cmp
rcrl
lahf
adc
jne
jl
and
mov
pop
adc
mov
fidivrs
ret
fs
hlt
cmp
or
orb
outsb
xor
lret
xchg
test
pop
push
push
and
push
adc
and
mov
cli
jo
scas
add
cmp
test
mov
insb
bound
fisttps
add
jne
cs
push
xchg
push
inc
xor
inc
ss
adc
push
sbb
adc
sub
rolb
outsl
outsb
aam
out
fdivrs
adcl
lock
xchg
in
mov
rorl
movsl
xchg
mov
mov
outsb
inc
add
arpl
jnp
imul
icebp
adc
and
push
mov
sbb
adc
ret
fwait
stos
scas
movsb
and
testl
stc
and
mov
or
adc
mov
push
lods
sbb
and
jnp
rcrl
jg
rcl
mov
mov
test
xchg
xor
and
xchg
addr16
add
push
pop
and
in
test
add
mov
adc
mov
push
adc
test
aas
or
ja
call
dec
xchg
dec
dec
xchg
mov
jl
cmpl
and
arpl
or
pop
lods
shll
inc
push
leave
adc
std
ret
loopne
adc
add
sub
lret
iret
adc
cmp
mov
negl
mov
sarb
testb
inc
cmp
call
mov
pop
push
xor
mov
mov
arpl
mov
aad
sub
pop
std
add
push
leave
punpckhdq
jle
icebp
nop
in
sbb
adc
or
sbb
xor
xchg
xchg
stc
push
pop
shlb
pop
mov
sahf
push
inc
cmpsb
or
es
mov
addr16
test
mov
jae
je
mov
mov
popf
pop
ret
sbb
sbb
outsl
enter
aam
mov
bound
add
pusha
mov
pop
mov
stos
add
mov
orb
enter
add
jb
xchg
loop
xchg
xor
mov
repnz
fdivs
push
push
adc
sbb
inc
and
jl
cld
pop
lds
xlat
fucomi
sub
and
jb
sbb
pop
inc
nop
js
movsb
adc
scas
sbb
jnp
jmp
ret
xchg
hlt
push
decl
add
rolb
shll
and
arpl
push
out
fisttpl
scas
lret
fistl
cmpsb
in
push
movsb
jnp
sub
jle
jns
je
jmp
or
imul
mov
imul
ficoml
std
dec
mov
daa
lods
adc
jae
sub
xchg
push
and
test
and
pop
std
and
xor
xor
aad
sbb
pusha
sarb
icebp
imulb
mov
addb
xchg
jecxz
pop
add
lret
fbld
mov
test
mov
js
gs
jp
out
sbb
mov
mov
lea
or
ds
ret
mov
dec
pop
or
lods
inc
and
lock
add
pop
stos
rcl
lcall
ret
pop
jle
adc
arpl
int
cs
adc
xchg
mov
xchg
and
pushf
bound
dec
jne
loope
dec
rclb
jae
test
push
push
mov
hlt
inc
pop
push
pushf
popf
xchg
or
into
push
dec
xchg
xor
cld
pushf
cmpb
fs
out
dec
adc
pop
mov
mov
cmp
add
iret
add
cs
rclb
adc
clc
jge
mov
sbbl
mov
aaa
adc
ret
pop
and
int3
cli
push
sbb
mov
stos
or
adc
sbb
mov
addr16
rcl
mov
mov
push
aad
dec
fsts
add
or
jecxz
cli
imul
in
sub
sbb
mov
dec
sbb
push
mov
fwait
stos
arpl
pop
and
iret
ret
lods
data16
xor
and
fisubl
lock
movhps
push
adc
and
rcrl
leave
into
jg
lds
adc
pop
or
adc
adc
or
stos
jmp
dec
cwtl
adc
cld
lock
lret
inc
adc
cli
adc
sti
popf
outsl
nop
mov
into
hlt
packuswb
imul
cmp
inc
stos
sbb
mov
jge
lret
stos
sub
jne
imul
mov
add
sbb
or
into
ret
sub
jl
mov
xor
mov
sbb
or
cmp
mov
mov
pop
xchg
or
or
rcrb
in
mov
dec
pop
aad
aaa
je
xchg
pusha
les
jmp
mov
enter
mov
pop
cmpb
in
out
enter
repz
in
je
mov
cmc
and
mov
pushf
or
push
or
dec
inc
pop
jmp
test
inc
pop
mov
inc
out
jo
mov
call
mov
sarb
xchg
push
mov
or
pop
xchg
add
cmp
xlat
mov
lock
and
ret
xchg
daa
cs
call
or
adc
push
mov
shl
adc
call
xor
sub
dec
cmc
ror
mov
out
jno
testb
decl
jge
mov
xor
sbb
out
add
jmp
or
sbb
dec
aas
lods
inc
sub
mov
sbb
add
or
mov
mull
lock
test
pop
xor
push
push
iret
inc
in
sbb
sbb
ror
jno
mov
daa
xchg
mov
jg
sub
movsb
arpl
std
xchg
inc
test
pop
cs
call
adc
es
fwait
arpl
les
ds
nop
xor
pushf
jo
add
sbb
arpl
mov
jp
mov
lret
cli
outsb
test
dec
push
arpl
add
aaa
cmp
mov
cmp
mov
sahf
clts
xor
stos
es
insl
enter
in
add
enter
cmpsb
mov
dec
mov
mov
pop
add
sti
ret
xor
mov
enter
jno
rcrb
mov
iret
push
outsl
inc
cmpsl
pop
jecxz
arpl
fs
fiadds
stos
pop
and
outsl
and
fdiv
mov
jb
mov
sbb
idivb
test
fisubl
xchg
sbb
clc
pop
mov
sub
add
push
and
add
sti
into
fiaddl
mov
cwtl
xchg
mov
aad
out
add
fadds
inc
icebp
mov
mov
ficomps
jno
mov
enter
jg
pop
add
mov
jp
xchg
mov
aas
hlt
cltd
jae
scas
lret
rclb
push
push
movsb
adc
sbb
fwait
imul
jo
jne
cmpb
ljmp
dec
ret
shll
xchg
dec
pop
sub
je
sub
in
movsl
jg
js
push
xchg
and
call
or
movsb
out
les
jno
jne
lret
leave
leave
add
pushf
popw
and
stc
pop
aas
loope
test
pop
jne
scas
mov
dec
dec
cmp
data16
dec
or
cmp
jae
iret
bound
repz
stos
pop
mov
xchg
adc
int
sub
dec
and
into
inc
pop
or
jmp
jns
mov
sbb
lods
inc
fwait
mov
add
bound
dec
pop
popa
push
mov
outsl
jno
sub
sti
and
sbb
loop
sahf
nopl
mov
insb
dec
or
les
sub
add
push
mov
mov
nop
test
sbb
lds
push
pmuludq
jno
popa
in
dec
cs
lea
lahf
jmp
push
rolb
loopne
pop
push
jg
add
cmp
xchg
pop
daa
pop
cmp
je
inc
stos
xchg
or
mov
lods
mov
mov
add
mov
sbb
icebp
add
aaa
ja
mov
movsl
cmovnp
mov
pop
cmp
adc
jnp
pushf
sbb
ja
mov
jae
fistpll
rorb
adcl
hlt
adc
jb
lret
dec
andnps
in
popf
aaa
fldenv
push
addr16
sub
ljmp
dec
mov
mov
inc
out
lahf
add
inc
in
push
jne
mov
scas
or
stos
pushf
add
aas
dec
jge
aam
sbb
xchg
inc
sub
lahf
out
ret
and
and
jl
nop
push
lods
pop
xchg
out
shl
jmp
and
mov
out
jbe
lret
ret
scas
icebp
enter
aad
stos
jecxz
add
les
add
mov
in
jae
scas
xchg
sbb
push
sub
insb
mov
movsb
dec
arpl
pop
pop
dec
jmp
ja
lahf
sbb
push
sub
pop
push
fs
pop
sbb
call
pop
dec
in
loop
xor
jmp
or
inc
mov
ret
ljmp
movsl
sar
shlb
push
xchg
jg
repz
fdiv
shlb
add
push
or
pop
xor
mov
mov
shlb
dec
sub
pop
les
dec
sbbl
pop
xlat
mov
idivl
jbe
adc
les
dec
adc
or
pop
push
adc
add
mov
mov
outsb
repnz
sub
or
bound
jns
movsl
fisubl
xor
push
aaa
mov
rorb
out
add
push
ret
ret
jp
outsb
cmpsl
push
sub
fsts
cmp
jmp
pop
xchg
pmuludq
movhps
pop
ret
push
popf
insb
iret
mov
mulb
add
xchg
outsl
out
pusha
push
mov
mov
mov
scas
lds
or
es
mov
js
push
and
mov
add
sub
shl
les
in
leave
je
das
pop
stos
add
aad
out
mov
mov
mov
int3
ja
fstpt
and
or
or
mov
ret
lahf
adc
loop
in
lret
mov
outsb
lods
repnz
imul
mov
in
imul
loop
adc
aad
test
notb
nop
std
mov
push
add
and
jg
sti
insb
push
loopne
outsb
outsb
add
push
jp
icebp
mov
sub
pop
mov
mov
cwtl
push
sub
xchg
pop
push
in
clc
mov
loopne
lret
es
inc
mov
inc
arpl
mov
cmp
test
xchg
mov
loop
jbe
sahf
lret
out
pushf
es
jb
hlt
sub
addr16
mov
shlb
cmpsl
in
xlat
dec
outsb
jg
cmc
scas
shl
mov
or
adc
and
push
adc
test
sbbb
xchg
cli
cmc
mov
and
lock
cmp
mov
imul
xchg
cmp
test
call
enter
cli
hlt
dec
xor
je
nop
popf
mov
sbb
or
sub
jg
mov
insl
sbb
pop
repnz
pop
jns
xchg
cmp
sahf
es
pushl
xchg
cmp
cld
iret
lcall
lret
adc
dec
add
xchg
push
add
inc
push
add
mov
mov
adc
mulb
in
cwtl
mov
insl
push
fs
xchg
push
shr
call
sti
dec
clc
ja
xorb
inc
ja
dec
and
insl
mov
sub
xchg
dec
test
push
shrl
xchg
lcall
inc
xlat
ss
push
xor
sti
or
dec
cld
adc
push
int3
shlb
mov
dec
cmc
adc
push
jmp
movsb
mov
xor
enter
into
sbb
mov
or
or
lods
outsb
lahf
ss
in
mov
jg
xchg
add
pushf
sub
cwtl
add
outsb
jp
pop
aam
mov
cmpsl
mov
mov
xor
test
stos
jge
hlt
mov
jecxz
xor
mov
sub
enter
sbb
add
mov
pop
fsubl
xor
xchg
jbe
cmp
jbe
pop
hlt
xchg
xchg
stos
mov
test
nop
fdiv
inc
call
or
imul
cs
clc
ljmp
fwait
sbb
pop
pushl
cmp
lea
or
pop
fwait
rclb
fcmovne
mov
sub
lahf
les
int
popf
cwtl
aam
pop
cs
cmp
mov
inc
push
add
hlt
jg
jb
push
inc
int3
pop
mov
mov
enter
dec
xchg
dec
pop
pusha
lcall
or
push
mov
call
lcall
sub
outsl
es
daa
arpl
mov
icebp
mulb
outsl
dec
nop
xchg
inc
push
loopne
push
or
dec
add
in
jne
jbe
out
xchg
mov
stos
xor
faddl
popa
js
jo
mov
dec
stos
adc
pop
xchg
sahf
mov
clc
and
add
lea
cld
sub
or
jge
add
xlat
xchg
xchg
inc
xlat
xchg
dec
xor
ja
jle
inc
test
adc
or
cmp
orl
xor
loope
ret
and
in
xorb
adc
sbb
jle
mov
cmp
inc
sbb
push
adc
mov
push
insl
push
imul
dec
pop
xor
mov
aad
xor
mov
xchg
les
sbb
jg
jge
nop
cmp
pushf
mov
clc
clc
mov
push
mov
ret
sbb
dec
or
std
mov
nop
aad
push
jmp
cmpb
mov
seto
bnd
test
sbb
cmc
jge
inc
adc
sub
fidivrs
shll
pop
les
int3
mov
lahf
mov
mov
and
mov
sub
inc
arpl
pop
push
or
fwait
pop
sub
daa
xor
sahf
jnp
aaa
mov
and
sub
dec
add
ss
out
cmp
bswap
cmp
stc
mov
push
rorb
dec
mov
insb
push
lods
jns
xor
dec
mov
rorl
cwtl
fwait
xor
ja
shll
lea
add
loopne
cmp
scas
orb
sbb
push
sbb
jae
orb
push
inc
pop
sub
mov
jb
mov
lock
fmul
sbb
insl
mov
pop
jle
add
insl
roll
lea
add
mov
cmc
add
mov
lret
addb
jecxz
arpl
or
pop
cmpsb
sub
cmp
mov
das
stos
std
rorl
jp
inc
push
loopne
fsubr
mov
add
push
or
dec
add
popa
cld
pop
xor
and
sub
ja
and
rorl
push
jge
dec
dec
mov
insb
xor
sbb
stos
cmovp
mov
daa
cltd
pop
test
dec
loop
in
adc
mov
mov
add
rol
xor
addr16
xor
mov
lock
add
xor
sbbb
jnp
or
mov
fsubrs
ljmp
pop
and
pop
loop
xchg
sbb
ds
push
data16
aam
nop
cmp
jl
fdivrs
mov
add
cmp
rcrl
mov
fisubrl
ret
xor
mov
shl
xor
lds
stos
ret
loope
dec
or
mov
addr16
sbb
xchg
jne
aam
movswl
dec
jbe
xchg
cmp
fadds
sbb
adc
and
je
ss
int
leave
push
add
popa
inc
js
cmpb
scas
fs
pop
dec
stos
inc
daa
pop
test
test
jge
adc
loop
insb
test
sbb
push
repz
lcall
dec
xor
scas
nop
ljmp
jo
push
fsub
mov
or
pushf
jge
pop
adc
jl
cmp
je
stos
popa
sub
pop
aaa
decb
loop
cs
xor
push
pop
scas
adc
jge
hlt
push
xchg
mov
loop
mov
out
or
cmp
add
notb
pop
or
cmp
imul
pushf
or
outsl
push
adc
sbb
sbb
aad
adc
sbbb
dec
int
adc
iret
fnstenv
scas
fisubs
xor
pop
fdivrp
xchg
aad
adc
and
frstor
and
and
aas
packssdw
mov
repz
sbb
mov
pop
dec
sub
adc
push
cmp
rolb
cmp
out
ret
cmp
ljmp
jae
sub
andb
cmp
pushf
sbb
jns
ds
daa
mov
sbb
and
outsl
cltd
ja
xor
adc
jg
xchg
dec
out
in
outsb
jno
push
jecxz
and
add
rcll
jnp
shll
outsl
mov
fsubs
pop
push
mov
adc
mov
adc
popf
and
inc
addr16
push
test
lock
add
cli
je
dec
shrb
or
push
pop
es
popf
test
add
sub
push
add
pop
mov
pop
mov
gs
lods
sbb
js
scas
or
xor
out
dec
mov
dec
aam
mov
aaa
xchg
cmp
and
sub
mov
bound
jmp
sbb
mov
dec
push
add
les
push
fdivp
or
pop
jg
inc
ss
jle
ja
jbe
xchg
cmpsb
sbb
lcall
imul
push
lock
mov
lods
mov
or
pop
cmp
lahf
shlb
hlt
pushf
jge
mov
movsl
jg
pusha
push
je
into
and
jns
mov
pop
jge
xor
int
cmc
mov
mov
add
cli
ret
daa
mov
gs
aam
out
cmp
pop
add
mov
jne
inc
inc
cld
cmp
mov
mov
or
mov
mov
push
loope
lcall
outsb
inc
mov
push
hlt
dec
popf
inc
ds
mov
sbb
xor
icebp
sbb
cmp
jge
mov
jecxz
into
add
push
mov
outsb
inc
lahf
xchg
inc
popa
adc
test
fisubrs
push
pop
arpl
or
jnp
lock
fnstcw
cmpsb
jnp
decl
das
enter
lea
adc
inc
pusha
dec
lods
jo
mov
mov
outsb
lock
cli
sub
mov
call
imul
xchg
out
lock
xlat
mov
ret
subl
xchg
xchg
inc
xlat
adc
cmp
in
fcmovnu
dec
loopne
das
or
add
setnp
sub
lcall
pop
and
push
mov
inc
add
lret
iret
or
loop
mov
leave
rclb
jp
je
inc
icebp
cmpsb
mov
jmp
or
sbb
shlb
and
bound
es
int3
xor
subl
and
mov
jno
lods
push
sub
insb
movsl
lret
add
push
stc
jae
or
add
rcrl
ret
incb
test
or
inc
ret
or
movsl
aas
push
negl
adc
clc
pusha
ja
inc
das
push
dec
xchg
sahf
js
jne
xor
jnp
inc
push
or
and
mov
ljmp
mov
rcll
mov
popf
xor
xchg
repz
and
inc
adc
shll
sar
les
xchg
pushf
std
jmp
lds
movsb
or
popa
daa
cmp
pop
lods
call
in
out
or
and
inc
mov
cmpsb
mov
out
pop
xchg
sahf
cmpsb
sub
dec
jp
xchg
inc
and
orl
pop
aas
pop
mov
push
xchg
jns
fdivl
testb
lods
pop
enter
into
dec
dec
mov
xchg
cmp
dec
add
iret
pop
fdivp
cld
adc
push
pushf
push
mov
xor
push
mov
inc
push
push
xor
sti
les
push
cmpsl
ret
jmp
leave
and
stos
xchg
mov
sarb
scas
cmp
sahf
movsb
mov
mov
and
xor
shrl
lods
push
test
sbb
mov
fabs
cmp
stc
stc
fwait
mov
addr16
shll
test
adc
push
pushf
mov
and
sbb
cld
ret
jnp
adc
jno
xchg
sahf
fwait
push
and
or
and
xchg
adc
ja
push
adc
loopne
pop
ds
icebp
xlat
mov
sbb
sbb
cmpsb
fnstsw
aad
dec
jmp
cmp
jl
mov
ss
jle
push
out
inc
rolb
icebp
loop
andl
cmp
sub
or
pop
daa
mov
push
sub
dec
repz
sti
mov
mov
or
adc
mov
push
sub
pop
xor
fisubl
es
add
imul
aas
add
push
test
mov
sub
mov
js
push
mov
aaa
arpl
xchg
cmp
aas
mov
ss
nop
mov
sbb
sbb
lret
rorb
lock
dec
andb
lock
int
jmp
loopne
cli
xchg
mov
sbbl
nop
xorb
or
loope
ficompl
je
mov
idivl
inc
xchg
fucomip
sub
mov
shrl
xlat
lock
mov
pop
call
mov
into
jp
jle
mov
jp
jge
mov
enter
outsb
jp
jle
mov
xor
adc
jg
cs
lds
push
imul
in
jecxz
std
jg
dec
sbb
xchg
sbb
lcall
scas
mov
bound
lods
call
bound
pushf
sub
notl
pusha
test
adc
aaa
cmp
cmp
adc
or
gs
sarb
dec
push
cmpsb
lods
ja
pop
cwtl
xor
fsubl
enter
mov
inc
outsl
shll
scas
loope
nopl
push
stos
jmp
insl
cld
mov
mov
mov
mov
lock
mov
test
lcall
push
shr
inc
ljmp
lock
data16
lods
inc
inc
mov
adc
loopne
insl
test
dec
pop
sbb
mov
pushf
push
sub
cmp
mov
and
jecxz
test
ficompl
xor
aas
data16
mov
cmp
lret
js
push
call
in
pusha
push
insl
std
add
cwtl
and
jns
sbb
mov
adc
leave
cli
jg
add
movb
ljmp
hlt
mov
inc
daa
pop
aaa
and
mov
sbb
jle
sti
inc
mov
and
lcall
cld
loop
mov
mov
sbb
insb
mov
mov
jecxz
movb
pusha
nop
cwtl
popa
xor
add
ss
ss
test
loop
cmp
outsl
pop
cmp
jae
push
dec
insb
push
sahf
sahf
and
sbb
mov
sub
pop
js
jg
or
lock
inc
and
xchg
xchg
cld
xor
sbb
js
lock
push
out
setg
loop
aam
test
lods
fnstcw
and
cmpl
xchg
xchg
dec
out
pop
sbb
add
or
int
icebp
add
xchg
pop
mov
shll
mov
aam
negb
cmpl
jb
out
out
ret
push
mov
adc
add
mov
nop
mov
rorl
fwait
loop
out
sub
jecxz
cmp
fprem1
adc
or
aas
xor
push
sarl
mov
sti
adc
adc
xor
pusha
jnp
mov
loope
jbe
iret
or
lds
push
inc
xchg
lret
xor
out
cmp
inc
imul
cmp
cli
push
push
mov
aam
lcall
cmpsl
ror
repz
js
ror
adc
ret
mov
lds
adc
push
jl
pusha
mov
inc
push
or
cli
loop
data16
insb
into
cwtl
cmovg
and
out
in
or
ficoms
imul
add
or
jge
pop
jo
add
sub
repnz
mov
inc
movsl
mov
daa
daa
pop
cmp
cmp
shlb
mov
cmpsb
lods
mov
sub
cwtl
push
out
je
mov
lret
mov
sub
inc
pushf
test
inc
mov
stos
sbb
pop
or
cmp
sbb
xchg
fnsave
or
popa
push
add
fs
shl
mov
int3
adc
push
fistl
mov
or
and
pop
sub
add
test
cltd
pop
cmc
cmp
add
adc
sbb
and
mov
xor
addr16
fiaddl
inc
add
aas
jae
sbbl
outsb
sub
je
cmp
cli
xchg
aad
jbe
or
adc
enter
push
or
pop
clc
test
mov
mov
or
inc
test
adc
or
add
mov
clc
mov
mov
subl
mov
test
mov
pop
jnp
push
mov
pop
jp
mov
movsl
mov
push
or
in
ret
mov
cli
mov
aam
lret
sbb
iret
icebp
imul
sub
rorb
sub
clc
ds
pop
sub
xorb
mov
in
inc
adc
xchg
push
jmp
insl
adc
icebp
or
in
ljmp
into
ds
lock
push
inc
inc
or
dec
adc
lods
push
xor
pop
push
pop
xorb
dec
or
pushf
in
imul
inc
sbb
fdivr
and
xchg
or
jmp
pminub
xchg
or
mov
jae
pop
inc
dec
negl
nop
rolb
adc
or
aaa
dec
and
imul
add
cmp
gs
nop
hlt
mov
mov
ret
mov
loope
in
daa
inc
in
pop
pop
xchg
push
pop
mov
mov
jne
cmp
clc
loopne
outsl
imul
rolb
mov
dec
lahf
rorb
dec
popa
fimull
and
stos
pop
ljmp
mov
test
or
push
dec
rolb
outsl
or
data16
jmp
push
mov
dec
nop
ret
push
dec
or
insb
xor
cmp
inc
add
jmp
mov
mov
stc
repnz
test
push
leave
adc
push
lret
add
rorb
mov
sbb
mov
jnp
push
shll
jp
insb
mov
dec
adc
cmc
or
sarb
jmp
mov
mov
into
mov
clc
xchg
push
xor
adc
push
pushf
shrb
add
mov
lds
or
mov
sub
test
cmp
and
push
leave
push
sbb
test
addr16
shll
push
lahf
lods
inc
mov
cltd
mov
pop
and
lods
iret
sub
add
jg
pop
mov
sbb
pop
mov
inc
fbstp
out
lret
in
in
clc
or
sbb
stos
and
les
fs
repnz
fisubl
sub
rclb
dec
inc
int
pop
add
jbe
mov
push
cmpsb
pop
lcall
mov
fcomp
dec
gs
je
adcb
xor
xor
scas
xchg
sbb
ror
ficoml
xorl
push
shlb
int
push
roll
and
push
cmc
adc
ret
cmp
decl
mov
add
ljmp
adc
inc
pop
push
stos
mov
aas
and
out
test
in
out
loope
or
mov
cmp
push
and
or
fbld
inc
mov
cld
data16
jge
sub
mov
jl
inc
push
pop
adc
mov
bound
in
sbbb
mov
in
mov
add
aas
daa
and
inc
or
inc
push
hlt
pusha
decl
jbe
xchg
decl
sahf
rolb
or
push
add
sbb
mov
inc
jmp
out
leave
add
xor
into
pop
xor
or
lret
jno
xlat
sub
cmc
fistpll
jp
add
int
repz
dec
inc
jns
test
ss
xor
jns
mov
cmpb
xor
adc
pop
repz
push
repnz
add
mov
cwtl
add
push
rolb
mov
mov
jmp
pop
int3
or
cmp
xchg
iret
or
jne
repz
sbb
sub
xlat
push
or
add
adc
and
fisubrl
hlt
sbb
loope
lea
inc
dec
push
fnsave
mov
ds
push
jne
loopne
jl
sarb
inc
ss
lahf
mov
fdecstp
iret
ds
add
arpl
popf
and
inc
mov
xor
ficoms
adc
add
inc
adc
push
push
daa
scas
push
inc
mov
mov
jo
or
ds
jge
scas
inc
sub
aaa
popf
jns
stos
shll
adc
pusha
mov
mov
out
adc
mov
popa
inc
js
call
aad
and
rcrl
repnz
push
mov
mov
pop
ret
les
test
jg
test
ret
shll
mov
bound
xchg
dec
stc
adc
jmp
and
rcll
jg
xchg
sbb
jg
orb
test
push
mov
dec
mov
addr16
xchg
sub
sbb
xchg
add
dec
das
fwait
lods
and
pop
xor
or
or
enter
mov
mov
sbb
sub
add
sub
daa
in
mov
mov
clc
jle
popa
filds
push
push
mov
sbb
dec
cwtl
cmp
cltd
js
cmpsl
and
fstps
sti
daa
adc
repz
outsl
add
std
mov
out
cmpsb
jo
xchg
adc
mov
push
mov
es
push
cmc
inc
fiaddl
arpl
loope
sub
cmc
je
hlt
jecxz
arpl
lcall
dec
sbb
hlt
add
fstl
sbb
adc
out
scas
sarb
hlt
or
lods
xor
mov
mov
pop
mov
subl
pop
adc
pop
pushf
push
pop
mov
popa
sub
bound
sbb
xor
mov
jl
dec
jg
xchg
mov
pop
or
or
lock
sbb
inc
add
xchg
jo
repnz
and
jne
add
lea
xchg
push
xlat
in
je
mov
and
sarb
into
push
iret
push
lahf
sbb
sti
mov
hlt
mov
pusha
adc
outsb
sbb
dec
loopne
xchg
xchg
mov
push
add
test
in
int3
jbe
aas
or
repnz
pop
ja
icebp
rclb
mov
jmp
or
stc
xor
fdivrl
nop
andb
out
stos
out
adc
mov
sbb
mov
pop
mov
jae
add
sub
push
and
or
std
sub
cmp
push
arpl
loop
push
and
and
xor
xchg
pop
xchg
or
test
movd
scas
std
leave
scas
aas
clc
adc
inc
sub
xchg
mov
std
sub
cwtl
into
movsl
fisttpl
in
lods
mov
icebp
inc
push
jae
psubsb
cmp
aam
fwait
dec
mov
push
lock
add
in
ljmp
mov
mov
push
jg
adc
incb
addr16
xlat
mov
call
flds
sbb
jnp
loopne
inc
pop
pusha
int3
in
out
lea
mov
inc
add
mov
sub
add
stc
xlat
push
hlt
cmp
dec
dec
mov
sbb
mov
loop
in
daa
loope
xor
mov
push
push
inc
fisubs
movsb
mov
sbb
out
adc
mov
out
adc
push
ds
adc
insb
sub
mov
and
je
imull
je
andl
mov
inc
jp,pn
out
repnz
mov
pop
loop
adc
cmp
cmp
jnp
push
sar
roll
pop
icebp
sub
or
mov
out
mov
gs
insl
xor
std
and
jbe
aam
jno
mov
inc
cmp
push
std
out
clc
test
mov
test
iret
push
dec
fadds
out
or
add
jnp
fnstenv
out
test
stos
sub
shrl
repz
jno
and
push
mov
leave
dec
inc
push
test
jns
rcr
out
fdivrl
jbe,pt
jne
leave
mov
push
rclb
mov
adc
sbb
sbb
ljmp
push
inc
leave
test
popa
mov
lds
int3
int
cli
ljmp
adc
mov
mov
xchg
cs
cmpsb
jl
lret
or
insl
loopne
inc
aas
frstor
pop
fsubrl
mov
mov
mov
mov
pop
cmp
xchg
or
jl
and
fisubs
dec
xor
and
outsb
mov
in
cmpb
lock
jne
sbb
sbb
ret
pop
pop
outsl
push
mov
cmp
mov
fmull
and
les
in
popf
test
cmpsb
icebp
and
ds
or
test
jb
ljmp
jno
mov
iret
sub
xor
loopne
std
jb
call
fnstenv
sbb
into
loopne
lods
xchg
nop
daa
pop
sub
nop
pusha
lods
pop
and
push
mov
add
adc
pusha
repnz
or
frstor
dec
push
xor
sarl
and
mov
insl
push
shrl
sub
and
sub
insl
leave
pop
xchg
insl
xor
into
icebp
clc
aas
xchg
mov
call
cli
daa
inc
xchg
add
aam
ja
inc
orb
mov
mov
mov
dec
pusha
pop
cmp
cmp
int
aad
mov
xor
mov
out
mov
pushw
jno
push
xor
fs
mov
ljmpw
lock
icebp
inc
in
or
shl
xchg
add
cmpsb
ret
loope
pop
loop
test
sahf
cmpsl
gs
pop
mov
or
or
call
mov
xchg
lods
xchg
add
es
inc
mov
not
insl
and
xor
lods
loop
jb
call
mov
or
mov
ja
loopne
stos
or
xchg
mov
sti
cmpb
xor
or
aas
pop
and
repnz
xchg
xor
inc
sub
js
mov
sbb
outsl
notb
pop
cmp
into
call
inc
jno
frstor
inc
imul
jnp
fdecstp
ret
out
fs
dec
inc
and
lret
movsb
aaa
pop
xor
ret
mov
aad
jge
jo
xchg
dec
scas
pop
and
stos
imul
fisubl
cld
outsl
xchg
xor
or
xor
jae
or
inc
sub
stc
inc
pop
xor
add
mov
out
shlb
xorb
or
cmpsl
out
add
mov
inc
mov
in
xchg
test
pop
jnp
ffreep
mov
and
mov
cmpsb
pop
sahf
jne
inc
shll
mov
pop
loope
pop
jg
clc
ja
mov
cmp
push
mov
adc
cmp
test
out
out
mov
daa
nop
fdivs
movsl
test
mov
pop
cmp
add
or
loop
std
js
rcrb
testb
xor
cmpsb
push
loop
sbb
insb
fdivl
adc
into
and
lret
dec
mov
mov
sbb
and
mov
xchg
mov
xchg
sub
xchg
jecxz
dec
fdiv
push
repz
cmp
xchg
js
bound
push
mov
xor
push
add
mov
scas
cmpsl
push
cmpsl
sbb
sub
push
dec
pusha
mov
jp
loope
push
jg
arpl
roll
or
insl
adc
fisttpll
test
push
pop
movsb
xchg
sbb
adc
jne
int
lcall
mov
fwait
je
stos
xchg
inc
sbb
mov
xchg
push
test
das
lock
bound
arpl
out
bound
ss
mov
inc
cmc
scas
test
call
ret
push
nop
sub
mov
loop
mov
adc
pop
daa
add
push
or
jbe
iret
imul
orl
sub
add
sahf
dec
adcb
push
push
sbb
fadd
and
ficoms
sbb
sub
stc
add
jns
cmp
inc
jle
test
cltd
jmp
jmp
mov
sbb
or
add
jns
mov
outsl
sar
outsl
inc
inc
fistl
je
jb
and
jecxz
in
pop
gs
push
xchg
inc
sub
jecxz
or
adc
in
faddl
mov
je
jbe
ss
aad
push
inc
push
and
rorb
dec
ljmp
mov
adc
sbb
mov
push
mov
cs
adc
loop
sub
mov
or
fdivrl
push
lock
or
sbb
clc
mov
dec
mov
or
dec
std
inc
aaa
cwtl
enter
sahf
aaa
jbe
fistl
fisttpl
inc
aad
cmpsb
cmp
insl
rol
ja
adc
jl
and
shll
fsubr
push
mov
movsb
xor
mov
pop
out
xchg
insb
adc
pop
movsb
inc
add
mov
jno
scas
jb
enter
fidivs
sbb
push
incl
ret
push
sub
xchg
scas
jb
and
inc
mov
add
clc
lret
and
fwait
mov
cmc
insl
rolb
scas
loope
jle
dec
mov
or
pop
push
out
or
and
cmp
mov
sbb
cmp
int3
xor
into
mov
inc
daa
jae
sarl
lcall
pop
adc
cmc
ss
mov
mov
and
scas
out
scas
movsl
jmp
push
arpl
repz
movsl
ffreep
movb
jecxz
dec
aas
and
clc
sbb
sub
iret
popf
mov
out
sarb
dec
popa
push
insb
test
cli
rep
jle
and
cltd
shr
test
ja
lahf
test
lea
fdivr
mov
in
cltd
lahf
lcall
dec
mov
adc
mov
dec
push
add
pusha
mov
cli
push
jno
out
lock
outsb
iret
or
das
in
mov
pop
shr
fnsave
ret
lret
push
stos
lcall
clc
or
ds
pop
or
mov
dec
add
or
or
and
into
insl
jp
sub
pop
cli
fisubrl
inc
push
sub
and
sbb
test
out
mov
hlt
pop
ret
cmp
jle
mov
gs
orl
xchg
jne
push
xchg
dec
add
mov
jg
or
lret
nop
jle
imul
fisttps
and
imul
cmp
ds
fdivrl
lods
push
fcmovbe
mov
mov
pop
arpl
cmp
mov
cmp
mov
arpl
mov
in
int
fildll
insb
scas
sahf
jp
pop
dec
mov
mov
in
movl
mov
movsl
outsl
jno
push
push
ret
sub
mov
subl
cwtl
add
sti
clc
scas
mov
jo
das
cmp
mov
rcr
push
mov
mov
insl
inc
rcrl
jb
push
push
xchg
jnp
adc
inc
xlat
inc
jmp
jge
sti
jl
jae
test
adc
or
or
pop
and
sti
pop
inc
int3
pop
sub
mov
aad
subl
int3
out
in
adc
push
sbb
call
mov
lahf
push
dec
pop
inc
inc
loop
mov
lods
jo
xor
add
dec
or
mov
pop
insl
mov
jb
push
arpl
sbb
pop
sbb
fbstp
outsl
ja
repz
mov
mov
adc
sbb
pop
adc
cmp
lods
sbb
outsl
shr
shlb
mov
mov
pop
jl
xchg
daa
in
fcmovu
jg
push
xchg
clc
call
lea
icebp
mov
mov
jb
jge
shll
jmp
mov
xchg
xor
lret
mov
push
and
loop
shrl
inc
mov
push
pop
mov
gs
test
mov
or
xchg
sbb
int
xchg
mov
ljmp
rolb
lods
ror
push
test
adc
outsl
mov
negb
sti
xor
cwtl
addr16
loop
adc
daa
xchg
lret
mov
test
cmpsl
lds
inc
hlt
mov
fisubrl
add
int3
sbb
inc
xchg
ja
fcomi
fldl
sub
mov
enter
js
bt
push
xchg
rolb
ja
aas
das
mov
and
shrb
push
or
cmc
xor
leave
cwtl
andl
pop
push
mov
fsub
push
pop
fdiv
push
arpl
jmp
or
imul
and
xchg
arpl
mov
in
ja
aad
or
in
push
add
lock
out
mov
push
in
mov
movsb
push
inc
ffreep
and
mov
pop
clc
test
adc
adc
cmp
fstl
mov
lock
inc
lcall
mov
xchg
imul
xchg
add
mov
dec
loop
stos
add
mov
outsl
lds
and
lods
sti
mov
imul
cmpsb
jb
mov
ljmp
test
pushf
sub
pop
in
in
loope
ss
loope
xor
nop
lret
fistpl
lods
fnsave
xchg
push
jl
xchg
ljmp
jno
mov
js
lds
mov
loop
sbb
add
jbe
lock
xor
xchg
sahf
cwtl
jecxz
fs
aam
fidivrs
sahf
inc
add
in
jb
icebp
enter
xor
and
gs
jp
loope
xor
in
sarb
jl
mov
pop
push
ret
sar
pop
jne
pop
xchg
das
cld
pop
mov
mov
nop
adc
out
nop
mov
mov
sub
clc
idivb
mov
xchg
xchg
jb
bound
xchg
stos
shlb
ja
popl
pop
pusha
aas
iret
or
pusha
jbe
test
in
shll
jmp
or
push
adcl
dec
testb
pop
or
js
jmp
orl
add
pushf
mov
mov
in
in
mov
and
jecxz
and
cli
or
pop
pushf
push
fstl
lret
sub
sti
shrl
adc
sbb
jl
push
jmp
pop
inc
insl
pop
sti
mov
lcall
into
lods
sti
fwait
sub
push
in
movsl
mov
lods
dec
rep
add
adc
repz
ss
add
call
lea
das
sub
je
divb
popa
pop
xchg
sarb
xchg
jmp
shll
or
sub
and
jne
push
pop
jno
jbe
pop
sbb
jnp
movsb
shrb
adc
cmp
test
xchg
xchg
mov
mov
ret
pusha
jecxz
idivb
mov
mov
push
and
popf
push
mov
leave
inc
int
int3
stos
jecxz
bound
das
mov
dec
nop
xchg
dec
lahf
shr
cli
rcll
pop
notb
xor
adc
sub
lods
sub
sti
mov
aam
dec
and
stos
into
mov
aaa
xlat
jge
out
mov
xchg
int
ja
jmp
fsubrs
pop
lock
push
pop
sub
imul
mov
sub
push
lods
je
in
mov
ret
push
mov
cltd
xchg
outsl
dec
pop
pop
inc
out
ror
jo
out
push
scas
mov
scas
mov
mov
jno
jmp
out
fildl
pop
fcomps
adc
jno
pop
mov
push
jp
test
popa
iret
xchg
add
pop
ja
outsl
mov
sbb
adcb
enter
rcrl
scas
cmp
orl
es
mov
idivb
push
pop
dec
jmp
jle
je
mov
or
notb
inc
sub
data16
or
rorl
adc
or
ret
push
sub
aas
jl
pop
jg
sub
fstl
mov
ja
gs
mov
std
mov
lea
or
adc
or
outsl
mov
pop
nop
push
ds
sbb
jg
fcomps
negl
js
les
in
inc
fnstsw
lds
in
or
pusha
or
sti
inc
movsb
sbb
push
pop
inc
stc
hlt
bound
les
mov
add
aad
test
cs
jp
mov
popa
jmp
add
icebp
shl
test
enter
adc
imul
jp
test
push
ljmp
inc
jno
sahf
dec
bound
mov
sbb
ffree
push
mov
pusha
add
das
cmp
push
mov
aad
imul
cs
push
jp
test
add
pop
loopne
xchg
jl
or
test
lods
and
push
cmp
mov
jecxz
loopne
dec
out
or
shll
addb
xchg
outsb
mov
and
in
int3
sahf
push
jno
mov
pop
mov
mov
das
fstl
mov
sub
inc
sbb
and
lea
mov
mov
sbb
mov
sbb
xor
call
nop
sbb
ret
test
pop
push
test
lret
pop
jl
mov
mov
sti
cmpsb
cmp
adc
jle
mov
mov
adc
and
pop
jae
mov
push
xor
subl
jae
sbb
mov
inc
mov
leave
fisttpl
ret
outsl
inc
pop
inc
enter
mov
fcmovnbe
inc
pop
scas
sbb
mov
fdivr
test
insb
mov
inc
cmpsb
adc
rcll
jb
mov
pop
mov
sbb
shrl
jge
mov
xlat
pop
fsubrs
cltd
sub
push
push
in
lret
aad
sbb
movsl
sbb
add
push
sub
inc
push
movsl
xlat
outsl
mov
nop
cmp
jg
pop
imul
add
pop
cwtl
add
pushw
dec
add
inc
and
mov
inc
xor
out
sbb
outsl
push
inc
dec
adc
cmp
icebp
fnsave
mov
sub
pop
outsl
mov
fildll
mov
js
jno
addl
add
mov
dec
mov
outsb
aam
push
mov
je
je
int
xor
ret
mov
inc
inc
rcll
fmull
cltd
lock
enter
push
bound
add
sub
push
pusha
dec
xchg
imull
cmp
xchg
xor
jp
inc
push
orb
imul
fnsave
push
loopne
mov
mov
dec
xorb
inc
jae
or
scas
das
mov
add
xchg
jno
imul
mov
loope
aas
and
cmp
mul
cmpsl
jg
popf
cmp
js
and
into
fisttpll
jo
mov
shlb
mov
out
stos
mov
test
lock
sub
test
addl
pusha
gs
xchg
xor
add
aaa
test
mov
sbb
and
arpl
xchg
adc
popf
lods
add
mov
stos
mov
jno
rclb
jl
rorl
movlps
xor
js
insb
shlb
aas
or
and
stos
ss
sbb
mov
popa
mov
push
jl
inc
cs
incl
pop
mov
les
popa
push
add
sbb
fists
subl
or
mov
aaa
mov
mov
scas
mov
lock
fcmovnb
push
inc
and
aam
adc
mov
mov
jecxz
inc
outsl
xor
push
out
stc
add
cmc
cmp
lds
mov
mov
xchg
pop
fildl
mov
je
push
sub
mov
je
mov
xchg
mov
pop
jle
mov
mov
adc
pop
lds
mov
stos
ret
dec
jne
xchg
and
xlat
lock
fmul
cwtl
push
adc
lcall
sbb
insl
xlat
add
popf
and
adc
fsubrs
clc
call
mov
and
push
jnp
jo
loopne
outsl
ds
and
daa
dec
sub
test
mov
ret
push
repz
jmp
add
add
push
or
jo
ss
fidivl
insb
mov
rcll
mov
push
movsl
mov
shr
lods
add
lcall
xor
add
mov
repz
mov
inc
sbb
fs
push
in
call
jne
test
adc
bound
sbbb
mov
push
mov
mov
fnsave
xchg
mov
stos
imul
pop
lds
pop
push
pop
mov
jle
in
ret
inc
imul
lock
cmc
adc
fistpll
mov
test
test
adc
stos
dec
inc
mov
dec
scas
mov
push
sbb
jmp
test
insl
cmp
call
mov
pop
fisttpl
jg
mov
enter
mov
add
push
mov
dec
movsl
gs
dec
inc
pop
into
jo
mov
fsub
and
inc
test
les
fwait
cmp
add
pop
hlt
fwait
push
mov
repz
sub
test
and
adc
inc
in
stos
adc
mov
pop
xchg
jb
dec
push
aam
pop
jp
sahf
inc
bound
pop
mov
int
insl
aam
xlat
xchg
int3
jle
out
mov
cltd
ret
pusha
rcr
mov
mov
pop
adc
cmp
inc
inc
xor
fsubrs
sbb
push
jno
sbb
dec
jmp
pop
mov
fidivrs
ljmp
dec
shll
sub
outsl
ljmp
or
in
je
sub
mov
movl
fdivrs
fldl
outsb
lds
shr
movsl
mov
mov
in
out
mov
mov
fiadds
int3
xor
cs
outsl
pop
js
sub
push
bound
jl
shlb
sti
loop
test
int
insb
push
data16
add
arpl
push
adc
imul
and
aam
adc
jg
jl
mov
mov
inc
cmp
push
mov
rcl
fistpl
add
or
and
js
rcll
xor
ljmp
sbb
adc
jle
fbstp
xchg
push
cld
cmp
sub
je
pop
push
xchg
xchg
add
in
and
sbb
pop
sub
xchg
xchg
cmp
adcl
cmp
test
add
repz
inc
cmp
loopne
pop
add
push
in
inc
in
shl
inc
je
test
mov
adc
jle
dec
scas
dec
jo
push
mov
push
cmp
push
pop
xchg
xchg
pop
call
mov
lret
jmp
jecxz
mov
or
cmpsb
add
sbb
and
std
lock
iret
xor
loopne
dec
sbb
mov
cmp
jnp
xorl
movsl
xor
pop
lahf
pop
out
jle
mov
adc
jecxz
mov
icebp
add
pop
cmc
roll
sti
jae
jbe
add
and
test
pop
mov
sub
stos
clc
add
add
ja
mov
stos
movsl
lock
ror
mov
cmp
dec
push
cmp
pushf
xor
nop
sti
adc
fcom
mov
and
push
mov
inc
mov
or
pop
inc
adc
subb
xchg
add
and
ljmp
add
lds
fisttpl
scas
lods
int
xchg
jns
sti
inc
ret
push
jle
adc
subb
js
pusha
outsb
pop
push
lds
jne
pop
les
dec
sub
xor
into
sahf
jp
cli
das
fistl
hlt
jl
sub
and
add
cld
lea
xor
ret
into
add
std
stos
das
sub
pop
jle
push
push
jns
jae
inc
adc
or
call
push
sbb
inc
push
ja
sub
mov
notb
add
mov
or
adc
mov
sti
mov
and
ja
jp
test
mov
scas
xchg
rclb
sub
rorl
je
mov
adc
lock
xchg
push
and
shll
xchg
or
ss
pop
sbb
adc
repz
fadd
push
and
hlt
add
scas
jbe
ret
push
inc
cmp
cmpsb
mov
mov
jmp
cmp
mov
mov
xchg
cltd
push
or
adc
in
adc
movsb
sbb
addb
mov
sub
jg
imul
aam
pop
rclb
cli
adc
hlt
mov
aad
xor
das
jmp
out
xchg
inc
cmpsl
xchg
sub
lock
cmpsb
adc
mov
fwait
sub
subb
jo
pop
fcomp
adcb
push
loope
ret
sub
ds
jmp
mov
mov
mov
add
les
adc
inc
aad
xchg
mov
out
sbb
inc
fstl
sbb
mov
inc
xchg
xchg
rcrb
xor
in
arpl
and
inc
and
testb
push
cmpsl
lret
lods
int3
push
ds
ds
pop
movsl
test
add
aad
adc
jnp
in
add
je
inc
xor
montmul
cmpsb
rcrl
mov
inc
in
andb
fsubrl
inc
popf
xchg
clc
xchg
mov
dec
leave
push
jno
repz
inc
push
mov
in
sub
xor
popa
into
icebp
popf
les
sub
add
and
iret
inc
xchg
dec
mov
add
mov
pop
test
xor
mov
icebp
inc
jmp
leave
mov
mov
ds
or
in
jl
aad
pcmpeqw
leave
mov
ss
mov
in
inc
out
adc
mov
lret
iret
and
jno
ret
xor
sbb
scas
pop
mov
aas
xchg
popf
jno
insl
inc
mov
imul
daa
subb
pusha
aam
mov
sbb
les
shl
mov
push
movsl
jns
xchg
inc
dec
leave
xchg
jae
orb
push
push
add
sti
lret
cltd
mov
addb
cmc
jne
addr16
ficompl
mov
insl
enter
shll
push
mov
in
add
push
cmpsb
add
test
jno
sahf
sub
out
mov
icebp
add
xchg
push
popa
push
mov
mov
cmp
dec
and
pop
jle
hlt
data16
lea
lret
xchg
out
mov
pop
push
jmp
jecxz
push
into
mov
clc
shll
inc
adc
shrl
pop
sub
fdivrl
cmp
lock
rolb
les
push
push
xor
sub
adc
lea
mov
jo
lcall
adc
add
mov
js
push
or
scas
aaa
pusha
movl
xor
pop
sub
les
int
adc
in
xchg
scas
mov
or
mov
dec
lea
adc
scas
loopne
inc
push
aam
pop
rorb
adc
pop
popf
mov
push
cmp
shrl
lret
push
sub
jnp
adc
cmp
or
fs
pop
bound
sar
fistpl
sub
imul
cld
pop
cmp
mov
dec
mov
jbe
shlb
mov
test
mov
xchg
jg
sahf
cs
jb
push
in
and
hlt
cwtl
adc
imul
push
daa
pop
rolb
fstl
dec
jbe
adcl
and
pop
sbb
mov
in
mov
dec
jnp
mov
sti
arpl
lret
cli
sbb
sbb
mov
dec
jl
popf
lcall
push
js
in
jmp
cwtl
add
inc
sbbb
mov
loop
mov
data16
cmp
jl,pn
mov
outsl
mov
and
daa
mov
mov
and
sbb
fstpl
and
add
ret
movsb
lret
rcrb
xchg
xor
and
out
daa
adc
sti
js
add
shrl
mov
fnstenv
sbb
cmpsl
jnp
sub
xor
xor
pop
shl
mov
inc
dec
pop
mov
xor
sar
push
scas
stc
sub
stos
sbb
jl
pusha
repnz
das
fstl
pop
push
dec
inc
inc
outsb
xor
mov
icebp
sbb
mov
dec
cmp
dec
hlt
orb
shll
ds
incl
fucomip
loopne
clc
pop
scas
mov
ror
inc
mov
ret
int
es
add
pop
and
dec
xchg
fwait
pop
lods
loop
pop
cmpsl
mov
push
arpl
sbb
pusha
mov
sub
push
mov
fucomi
mov
roll
cmp
hlt
push
jae
xchg
push
add
jle
sbb
jb
out
scas
or
mov
inc
sub
add
shrb
ja
xor
mov
add
aam
test
rcll
or
fstps
xlat
lea
dec
push
add
int3
push
mov
add
out
inc
dec
lret
shlb
enter
jge
xor
pusha
lock
stos
in
and
loope
mov
enter
sub
lods
ret
pop
adc
and
pop
xchg
subl
out
push
mov
adc
cmc
pop
sub
push
sbb
sahf
and
ret
push
cld
les
arpl
push
jne
movsb
push
mov
popa
xor
jo
lcall
popf
fldcw
js
icebp
pop
out
int
lds
push
sub
out
scas
inc
jns
xchg
mov
insl
mov
aaa
faddl
aam
js
insb
adc
cmp
lret
idivb
out
pop
fs
mov
sub
pshufw
sub
popa
add
in
sub
mov
cmpsl
leave
add
add
or
or
or
pop
mov
in
lcall
or
jp
scas
add
or
into
xchg
repnz
mov
xchg
nop
pop
andl
jns
stc
in
sub
push
addb
jle
test
adc
mov
lahf
pushf
lcall
mov
sbb
inc
je
mov
test
movq
fildl
test
pusha
push
push
jb
bound
aad
inc
and
push
in
cmp
mov
sub
add
ret
mov
outsl
cwtl
and
gs
lret
fnop
mov
call
andb
jns
inc
jne
cmp
pop
test
push
xlat
shlb
mov
adcb
adc
cs
call
adc
and
xor
cmpsb
adc
sub
imul
call
mov
inc
sbb
mov
cwtl
inc
jns
adc
imul
or
jp
mov
fsubrl
shl
xchg
fistl
cli
cmpsb
dec
call
adc
push
sub
fprem
pop
push
mov
mov
outsb
sahf
ds
fistl
shr
and
call
ja
loope
js
jb
adc
mov
mov
sahf
data16
imul
add
sub
and
push
sub
ljmp
into
push
sarb
daa
adc
cli
adc
lret
mov
jns
adc
mov
je,pn
push
and
dec
xchg
sbb
mov
and
mov
loope
sub
sbbb
mov
les
loop
pop
add
sub
popa
pusha
adc
and
jne
jo
rcrl
div
pop
jne
push
mov
sbb
sbbl
jg
cli
in
sti
pop
mov
adc
inc
inc
in
in
lock
imul
or
add
mov
add
rolb
popf
xchg
ret
je
dec
sub
test
aam
in
mov
xorb
sbb
lock
mov
push
mov
inc
loopne
and
xor
or
sbb
es
fcmovnbe
notb
iret
lds
dec
dec
pop
lret
popa
sti
outsb
mov
mov
rep
popa
das
pop
clc
xchg
pop
decl
ffreep
cmp
lahf
scas
js
inc
addb
test
ljmp
inc
xor
cld
testb
leave
popf
mov
jmp
jl
mov
dec
test
pop
mov
dec
hlt
js
mov
xchg
pop
xchg
pop
push
mov
add
stc
mov
rcl
inc
or
test
pop
jb
pop
call
notb
mov
inc
pop
call
cld
cmp
mov
repz
sbb
sub
mov
loop
repz
sbb
push
push
js
push
push
pop
insl
sub
or
push
pushf
inc
lods
jb
popa
cmp
test
sbb
cmp
clc
jle
fnstsw
roll
sub
test
ss
cmp
pop
jo
pop
xor
outsl
addr16
add
aam
fisubl
push
push
cld
or
sbb
fs
sub
loop
lret
fstl
sbbl
pop
insb
sbb
jmp
sbb
xchg
inc
into
insl
jp
fdivl
dec
mov
fistps
sub
sub
jae
adc
add
ja
add
xlat
call
mov
lret
fadds
push
jne
out
ja
sti
test
pop
or
xor
cmp
push
jp
jg
cmpsb
es
hlt
or
xor
and
int
push
imulb
lret
fcmovnb
mov
jmp
data16
cld
and
fnstcw
push
or
lret
rclb
dec
mov
pop
into
add
mov
inc
jae
cmp
sub
imul
std
adc
shrl
or
cmp
push
rcr
les
je
cld
or
fcompl
dec
dec
rclb
and
mov
jmp
add
test
in
cmpsl
dec
jne
sub
ret
scas
movsl
scas
rorb
mov
jo
mov
mov
aas
add
mov
fstpl
int3
cs
js
sbb
cmp
fsubl
mov
pop
sub
ds
orl
aad
pop
cmp
insl
push
outsl
cmpsl
cmp
add
xor
xchg
ds
insl
lock
or
pop
dec
shl
in
loopne
or
pop
jge
stc
jle
add
dec
mov
icebp
orl
mov
push
pop
fdivs
loop
arpl
dec
sahf
lods
inc
jg
mov
outsb
aaa
fsubr
ret
arpl
les
pushf
popa
dec
sbb
repnz
int
inc
repnz
inc
xchg
les
xor
jo
inc
in
mov
jecxz
enter
lret
pusha
xlat
lods
in
add
pushf
out
stos
mov
jno
mov
gs
mov
jecxz
dec
push
push
repnz
lahf
fdiv
pop
jo
ss
lods
leave
aaa
cmp
jno
js
xchg
adc
pop
xor
unpcklps
ja
xchg
mov
fwait
or
inc
jne
sbb
push
adc
jns
add
decl
cmp
ja
cmc
cli
or
sarl
js
icebp
cwtl
repz
ljmp
mov
xchg
imul
jnp
mov
mov
xchg
ror
pusha
or
out
fiaddl
sbbb
popf
or
repnz
cltd
adc
lock
ret
cmpsb
or
loope
sub
popf
andb
xor
push
mov
or
add
das
jo
in
fbstp
sbb
scas
pushf
or
add
icebp
decl
repnz
jmp
nop
shrl
mov
rcr
or
flds
repz
sbb
pop
clc
and
sbb
lods
cmp
icebp
lahf
mov
out
addr16
mov
cmpsl
xor
and
sahf
dec
add
xor
lea
iret
pushf
add
fistpl
movsl
lock
adc
mov
push
jno
mov
dec
mov
jbe
insl
pop
ja
rclb
adc
add
std
adc
jge
loop
jo
or
out
xor
mov
dec
mov
xor
daa
push
scas
xor
mov
add
jg
aaa
jp
scas
dec
test
add
push
repnz
movsb
add
fstpt
xchg
pop
repz
add
call
in
clc
or
movsl
out
dec
mov
mov
in
xor
xchg
icebp
or
dec
push
shll
xchg
test
xchg
adc
dec
push
jnp
pop
daa
subl
mov
fiadds
cmc
add
push
mov
rcl
and
mov
xor
lahf
or
cmp
lret
dec
sub
pop
jecxz
dec
cmp
mov
sub
aam
pop
cmp
adc
movsb
jecxz
test
outsl
ret
in
fists
sub
movsl
jnp
or
or
test
xor
addr16
hlt
xchg
add
lods
aam
loope,pt
mov
test
push
mov
js
test
stc
xchg
jne
iret
syscall
movsl
pop
mov
rclb
push
jnp
xor
sbb
scas
and
mull
push
jle
ffree
scas
mov
cmp
lahf
popa
push
add
push
mov
fcompl
lock
mov
jg
nop
sbbb
jecxz
add
xchg
mov
clc
stos
pop
pop
mov
imul
iret
dec
ja
lcall
aam
cmp
divl
and
or
jae
push
adc
inc
sub
clc
ret
ss
and
mov
stos
call
lods
sbb
in
and
adc
cmp
std
push
negl
adcl
jl
icebp
dec
push
stos
frstor
enter
adc
adc
lods
les
pusha
jg
pop
xchg
lahf
add
jno
lea
xchg
lahf
out
clc
mov
sub
push
lret
pop
dec
out
xor
pop
sbb
mov
xchg
daa
xor
loope
daa
cmpsb
mov
js
notl
cld
hlt
in
jg
repz
add
adc
pop
add
jo
pop
jl
adc
xlat
cmp
and
and
adc
out
or
das
cld
xor
call
shl
fidivs
inc
mov
lock
mov
icebp
inc
mov
mov
push
mov
and
lea
pop
lret
rol
iret
push
xchg
add
popa
xor
insl
sti
and
cmp
jle
ret
jg
sbb
jge
adc
mov
lcall
sbb
mov
and
hlt
in
cmpb
fwait
pop
aad
imul
insl
jmp
jae
jnp
or
mov
cmp
adc
fistpl
sbb
push
gs
js
xchg
mov
pop
jbe
jne
mov
jnp
xor
cmp
fnstenv
adc
xchg
add
jnp
mov
sbb
sub
xor
es
scas
ficomps
loopne
ret
pop
iret
subb
cs
jge
ret
adc
xchg
cmp
adc
adc
cmp
outsl
sub
push
fiadds
icebp
sub
inc
mov
iret
stos
cli
mov
push
daa
or
push
sti
idivl
pop
loop
xorb
xor
cmc
cmpsb
out
push
arpl
and
enter
out
sbb
push
out
push
mov
push
mov
aas
xchg
jne
add
call
adc
test
cmp
add
insb
pop
adc
shl
inc
sbb
mov
jle
movsl
and
rorl
iret
aad
xchg
sahf
xor
xchg
xor
fxam
pop
into
rcrb
xchg
in
mov
cltd
mov
jg
xchg
dec
mov
ret
jp
nop
jl
ret
ljmp
sarl
ja
mov
out
cmpsl
mov
mov
fistl
jp
pop
xchg
mov
icebp
lods
jo
movsb
sbb
lock
outsb
push
sbb
jbe
pusha
loope
fistps
incb
arpl
in
stos
mov
mov
pop
test
xchg
add
mov
cmp
jb
mov
in
dec
adc
das
jmp
cli
xchg
bound
sub
ret
mov
fcomp
inc
mov
jecxz
dec
and
dec
cmp
inc
cmp
push
cli
ret
jp
lea
ja
fbstp
jecxz
xchg
js
mov
cmpsb
and
test
jmp
jnp
or
jle
and
test
popa
mov
adc
xlat
rclb
lret
mov
add
ljmp
jl
pushf
aam
and
jae
shlb
push
jecxz
arpl
mov
xor
adc
push
adc
icebp
xor
in
mov
or
and
xchg
jbe
xor
jg
jnp
call
jl
pop
pop
mov
insb
mov
popa
sbb
adc
fisttpl
test
and
xor
bswap
pop
mov
das
aas
and
dec
xchg
push
sub
clc
jp
jge
outsb
aam
enter
sub
dec
mov
mov
xchg
jns
mov
push
imul
dec
fistl
push
xor
popa
adc
and
jnp
dec
scas
cmp
pop
xchg
pusha
lcall
mov
push
push
loopne
lret
iret
and
mov
mov
pop
mov
or
aad
shrl
sbb
rclb
mov
mov
add
sbb
sbbb
lahf
int3
fwait
xor
scas
outsb
adc
xor
imulb
dec
sbb
add
dec
sarl
cmp
xor
fbstp
mov
xchg
xor
loop
adcb
push
cmp
add
mov
ret
and
fldl
cmp
xor
cmpsb
push
pop
dec
test
push
aas
sbb
or
pop
movsb
ret
repz
add
or
sbb
das
jp
insl
sub
mov
inc
jbe
aad
and
and
ret
inc
ret
call
stos
fdivr
andb
inc
test
sbb
jb
cltd
jns
in
sub
fcmovne
mov
movsl
inc
or
mov
jecxz
xor
loopne
sub
adc
dec
xchg
cltd
jbe
push
shrb
ret
pusha
stos
sbb
orl
or
aas
decl
fildl
lret
fs
ret
orl
or
ss
push
cmpsl
pop
iret
xchg
icebp
shl
pop
inc
enter
test
xor
add
pop
mov
leave
mov
andb
rorl
sub
insl
inc
sub
xlat
int3
dec
test
data16
add
roll
ret
or
dec
addb
adc
jo
pop
mov
aad
push
push
addl
xorl
mov
and
dec
inc
dec
pop
sbb
adc
pop
cmp
xor
aad
adc
ljmp
add
or
pop
ret
fcoms
mov
push
mov
adc
out
fwait
test
pop
fsubrs
and
andb
add
jle
shl
mov
insb
mov
inc
movsl
ret
jecxz
mov
shr
decl
repz
jge
sbb
dec
ljmp
iret
arpl
or
inc
push
mov
ja
mov
pop
cli
inc
pop
dec
add
adc
sub
inc
xlat
mov
add
inc
adc
and
pop
push
push
push
push
ret
enter
stos
test
cltd
mov
movsl
fwait
and
pop
out
cmp
push
mov
push
sahf
xchg
inc
cmpsb
and
dec
and
sbb
jb
mov
nop
aad
lahf
xor
jmp
leave
mov
adc
popf
dec
nop
pop
cltd
xor
push
fld
pop
inc
das
pop
jne
dec
xchg
xchg
jb
pop
clc
or
fs
mov
mov
fwait
xchg
mov
adc
lret
adc
insb
pop
mov
mov
out
movsl
nop
and
rolb
repnz
imul
fildl
test
cmp
pop
rol
ret
mov
adc
xchg
pop
adc
push
movsl
sbb
jne
push
movsb
outsb
or
mov
test
sbb
sub
mov
aaa
call
push
sub
cmp
rep
pop
aam
movsl
mov
addr16
or
cmp
sub
sbb
sbb
cmp
fwait
add
movsl
adc
pushf
or
add
mulb
lds
xor
call
mov
lods
jnp
jb
in
mov
and
dec
daa
ret
xchg
hlt
in
push
sbb
fbstp
shll
ror
repz
mov
inc
xor
sub
sub
mull
test
mov
xchg
jo
add
icebp
mov
fldl
push
sbb
call
mov
push
fldl
mov
cli
jno
aad
mov
or
jbe
in
outsl
mov
scas
in
outsl
loop
and
stc
int3
lds
or
pop
popa
mov
cmpb
mov
daa
sbb
sub
in
je
jnp
paddusw
test
cmp
jl
lahf
jecxz
push
xor
test
loop
dec
mov
add
popf
testl
cs
xor
jmp
stos
icebp
sbb
cld
add
mov
loop
fisubrs
leave
data16
jno
shrl
or
inc
xchg
dec
mov
ja
push
jbe
divl
loope
mov
pop
add
popf
imul
mov
push
sub
mov
insl
add
fnsave
mov
jno
xchg
dec
add
mov
lock
ret
rcrl
mov
dec
bound
mov
cmpsl
xlat
in
lds
bound
push
mov
pushf
shll
xor
mov
inc
mov
push
sub
pushf
add
pop
sub
inc
push
cs
clc
mov
out
in
cmp
xor
lds
pop
movsl
mov
jl
mov
push
in
sbb
pop
jg
push
shlb
jmp
cmp
or
jle
lods
pop
fdivl
xchg
out
lds
cld
mov
add
outsl
clc
xchg
mov
mov
sbb
and
mov
xor
fnsave
fldt
and
add
jne
push
cld
in
push
and
push
mov
pushl
jp
cwtl
lods
dec
sub
insb
test
es
aam
inc
cwtl
or
jecxz
lahf
dec
test
add
daa
lret
xor
mov
sbb
into
stos
mov
loop
push
mov
je
pop
or
xchg
jne
int3
ret
xor
sete
sbb
dec
idivl
fsubrs
cli
add
aam
test
jle
or
inc
lds
lock
sbb
nop
or
scas
pop
bound
adc
or
adc
cltd
cmp
inc
call
rcrl
xor
xor
ja
xor
les
push
add
or
or
and
sbb
leave
inc
cmp
pop
add
cmpsl
mov
das
jl
outsb
clc
xchg
and
xchg
push
pusha
js
inc
lcall
push
dec
push
bound
add
in
imul
and
stos
sub
jp
add
in
subb
mov
mov
or
arpl
pop
call
ds
test
ljmp
sbb
rcl
xor
sbb
xor
ret
xchg
add
adc
jnp
adc
imull
xlat
mov
fbld
dec
jae
cmpsb
xchg
into
cmpsl
mov
outsb
je
sub
popf
scas
sahf
xchg
jmp
mov
loope
adc
nop
stos
cmpsl
xor
dec
and
push
push
es
or
cmp
cli
stos
aad
pusha
mov
jmp
jmp
je
cmp
out
dec
aaa
cmp
inc
cmpsl
loope
sub
test
mov
repz
cli
loopne
bound
mov
cwtl
insb
stos
fs
clc
push
inc
sbb
add
mov
inc
inc
mov
inc
into
mov
xor
add
icebp
call
and
add
or
adc
ficompl
ja
or
add
sbb
adc
orb
or
outsb
in
add
push
and
outsb
outsl
lods
sbb
add
and
inc
or
incl
imul
gs
xor
cs
insb
add
xor
add
mov
mov
add
or
adc
xor
fidivl
or
inc
push
sti
push
adc
in
mov
adc
and
push
mov
mov
subb
ss
and
test
pop
inc
add
and
lods
xchg
insl
addr16
add
aas
cmp
lcall
adc
xor
ss
out
mov
jo
insl
js
outsb
push
inc
add
add
or
adc
mov
sbb
iret
inc
add
je
add
adc
sub
lods
mov
add
or
lods
je
rolb
addb
inc
sub
jne
jo
jb
jns
pop
and
jb
loopne
pop
imul
and
jbe
movups
add
add
inc
inc
nop
loope
inc
push
inc
inc
push
inc
inc
push
push
push
push
adc
test
imul
aas
mov
out
repnz
sahf
call
xor
inc
fisttps
pop
jae
sub
or
push
push
jbe
insl
jmp
icebp
jl
in
sbb
call
icebp
fstl
cltd
xor
and
call
lret
lret
sahf
sub
jmp
imul
sub
xor
lcall
push
jge
data16
pushf
xchg
xchg
xor
inc
mov
idiv
call
or
ds
mov
push
je
int3
ja
jne
daa
mov
in
and
mov
jmp
fdivrl
fiaddl
popa
popa
mov
stc
jp
insl
xor
or
scas
sub
dec
push
popf
jg
mov
pop
data16
in
or
push
bndstx
cmp
or
xor
js
sub
out
mov
or
or
jl
jle
inc
adc
popa
sets
adc
repnz
jne
xor
sub
rolb
dec
xor
cmpsb
xchg
xlat
dec
mov
push
aaa
jecxz
ljmp
mov
xchg
jge
icebp
or
mov
sub
inc
repz
pop
xchg
xchg
icebp
sti
scas
decl
mov
or
mov
xchg
shll
fistps
pop
outsl
sbb
mov
test
outsb
ljmp
and
mov
sub
addr16
inc
push
outsb
xor
hlt
imul
xor
dec
add
lock
incl
scas
cli
and
fdivrp
icebp
mov
insl
roll
test
push
pushl
stc
sbb
leave
enter
or
push
cld
fsts
xchg
mov
push
xchg
fdivrl
pushl
stc
push
or
jp
outsl
out
in
test
js
jmp
inc
aaa
cmp
pushf
sbbb
dec
in
inc
sbbb
js
out
sahf
inc
push
mov
inc
sub
outsl
add
mov
jnp
pop
andb
and
mov
lea
repz
fcompl
loop
xchg
lds
mov
cmp
xchg
lcall
adc
shl
out
leave
push
mov
pushf
std
pop
mov
test
jmp
pusha
decl
cmc
inc
sbb
mov
lds
xchg
dec
movsl
dec
ljmp
jge
mov
xchg
or
pushf
rcr
movsb
pop
lcall
decl
movsl
pop
bound
and
xor
xchg
dec
imul
test
sub
inc
repz
incl
jle
stos
dec
mov
mov
push
mov
xor
ja
inc
cmp
mov
std
mov
xchg
mov
int
pop
jae
mov
aam
mov
xchg
repnz
mov
incl
jle
fxch
push
push
out
call
sbb
pop
daa
repnz
popf
sbb
cmpsl
mov
and
incl
je
addb
sub
mov
jmp
fiaddl
test
mov
pop
mov
mov
gs
or
jo
pop
add
call
sbb
and
cmc
sub
lcall
loop
daa
xor
es
loopne
sahf
stos
fidivrl
lock
pushl
inc
pop
sbb
in
scas
popf
fbld
orb
testb
sub
push
or
data16
lea
mov
adc
imul
jg
dec
mov
out
lods
add
js
test
dec
dec
iret
test
loopne
cmp
xor
push
addr16
test
xchg
arpl
stos
mov
or
neg
inc
sbb
inc
mov
dec
iret
mov
lcall
xchg
popf
out
mov
scas
pusha
pushl
lea
cld
pushl
call
inc
xor
dec
jbe
cltd
lea
call
out
ljmp
pop
jmp
sub
ljmp
rcrl
lcall
xchg
push
adc
mov
lods
rorb
pop
sbb
stos
inc
sub
jmp
mov
sbb
add
add
pop
push
mov
les
shrb
jl
pushf
ret
stos
adc
sahf
mov
cs
xlat
dec
stc
adc
loop
ljmp
cli
mov
cltd
push
lret
pop
inc
pop
inc
repz
mov
pop
repz
in
leave
out
push
clc
xor
mov
fsubrl
movsl
jmp
lods
jmp
push
inc
and
adc
mov
decl
in
imul
movsb
shrl
cmp
sbb
in
cltd
test
jg
lcall
mov
push
mov
cltd
scas
dec
sub
aad
cli
push
xchg
jp
mov
rcr
mov
xchg
mov
cltd
ss
push
add
mov
fs
ljmp
jne
jle
pop
xchg
sbb
pop
jo
and
and
add
lcall
dec
test
cmp
mov
sbb
aas
or
ljmp
mov
enter
xchg
inc
int3
in
lret
or
or
lcall
mov
jbe
add
rep
mov
pop
and
xchg
mov
movlps
cwtl
xchg
out
lods
cltd
scas
inc
push
out
adc
add
jmp
dec
cld
test
mov
push
sub
sbb
mov
mov
test
jle
out
movsl
pop
les
aad
and
mov
mov
inc
jp
ds
and
ds
outsb
pop
lds
icebp
pop
in
das
inc
ret
loopne
data16
mov
xor
loop
pushl
lret
add
xorl
aad
aad
mov
out
loope
lcall
pop
xchg
into
mov
jnp
test
mov
daa
inc
cmp
jg
js
ret
sub
pop
mov
sub
sub
sbb
cltd
mov
inc
in
fs
call
or
leave
dec
std
int
mov
sti
js
test
scas
ja
jno
mov
test
jmp
pop
in
mov
shlb
lcall
dec
enter
jg
sub
loop
mov
mov
call
push
add
lahf
add
jg
paddusw
jae
pop
push
sub
push
xchg
adc
add
incl
incl
xchg
ss
cmp
aas
js
cmp
enter
jg
inc
adc
lahf
push
loop
ja
cltd
arpl
aas
subl
mov
ficompl
std
jmp
dec
fldenv
out
mov
mov
sti
dec
xchg
scas
cwtl
pop
loopne
fst
and
pop
shlb
sub
push
int3
ret
add
add
dec
push
cltd
adc
inc
lahf
aaa
jp
dec
ret
cs
push
or
mov
cmp
dec
movsb
push
mov
jle
into
push
clc
incl
push
mov
add
notl
push
insb
mov
seta
jo
adc
test
jo
das
call
enter
pushl
fmuls
ljmp
lock
inc
in
pop
or
clc
loop
pushl
push
xorb
fnsave
sub
sbb
cmp
lcall
and
mov
es
aad
fucomi
scas
adc
movb
nop
out
lret
into
imul
mov
xor
das
mov
mov
pop
xlat
jae
mov
xchg
andl
jmp
mov
movsl
pop
aas
lock
mov
mov
xchg
adcb
sub
inc
push
push
jo
dec
fucomip
fistpll
pop
inc
fistpl
stc
movsl
jno
rol
push
add
decb
sbb
ljmp
icebp
leave
pop
push
adc
lret
icebp
pop
lea
out
cwtl
inc
arpl
int
push
or
call
xchg
push
je
cmp
arpl
adc
pop
gs
testb
decl
aaa
mov
xor
xor
mov
push
xor
jo
das
std
pushl
adc
and
push
in
bswap
out
xchg
aas
aad
ja
cwtl
jb
dec
cmp
push
mov
pop
adc
das
mov
enter
je
or
mov
xchg
addr16
in
fadds
ret
sub
dec
fildll
and
outsl
jmp
adc
call
mov
cmpsl
testb
jne
mov
xor
sbb
lret
and
inc
inc
and
dec
repz
mov
push
jbe
scas
das
xor
xor
mov
mov
mov
aam
cltd
cmc
jo
mov
mov
call
mov
out
jecxz
jne
push
ret
in
shl
fisttps
fdivr
jno
cmp
or
addr16
pop
insl
loopne
das
icebp
pop
pop
inc
sub
cmp
or
in
into
push
pushl
orl
test
cld
out
xor
pop
sti
out
mov
test
push
test
pop
mov
sub
decl
test
mov
or
cmp
xchg
dec
mov
mov
xor
icebp
jmp
xor
enter
adc
dec
add
lret
xchg
ja
mov
out
adc
movsl
movsb
mov
fsubrl
cmp
push
jne
cmc
pop
or
mov
cltd
push
inc
pop
cmovno
pop
andb
and
mov
jp
lahf
sub
dec
cmp
imul
add
lcall
xchg
cld
jbe
shl
xor
adc
mulb
push
stos
push
into
sub
jg
adc
jp
sar
les
jns
xlat
pop
jecxz
or
dec
or
xchg
mov
and
mov
inc
fistl
jb
cmp
sbb
mov
xchg
xchg
fdivrl
in
pop
mov
xchg
adc
jl
lcall
add
js
jb
das
cld
clc
and
or
stos
push
xor
test
adcl
cld
push
outsl
xbegin
dec
pop
xchg
pop
xchg
mov
hlt
movsl
jae
mov
dec
popa
jecxz
loope
inc
sub
insb
cwtl
rol
out
mov
lcall
sti
mov
imul
pop
fs
and
sarb
incl
movsl
sub
call
daa
aad
mov
ret
lds
mov
loopne
cwtl
stos
mov
test
xor
sarl
xchg
jae
testl
and
cmpsl
pop
pop
mov
adc
or
js
mov
das
sbb
push
les
sub
dec
mov
jns
add
pop
mov
xorl
jmp
subl
sti
add
inc
jae
xchg
imul
flds
cmp
test
jmp
enter
jne
arpl
mov
push
lcall
lods
fisubs
sar
stos
pop
pop
enter
in
xor
jg
jp
call
inc
or
orl
lea
out
mov
imull
cmpb
adc
icebp
ljmp
test
in
push
mov
dec
negl
jge
stos
jle
dec
inc
sbb
pop
mov
sub
pop
pop
sub
jle
dec
outsl
adc
loop
testb
xor
ja
adc
stos
push
les
dec
push
mov
movsl
lcall
adc
cmpsl
ss
xchg
fldt
je
mov
ljmp
cmc
out
adc
dec
test
mov
movsl
lods
rorl
sbb
mov
aaa
sti
incl
inc
iret
jl
sub
xlat
jnp
int
cltd
inc
mov
loope
pop
shlb
jg
inc
bound
movsl
sti
jne
outsl
ds
xchg
es
jne
mov
xor
aas
dec
push
jg
aas
lods
xor
pop
stos
cltd
fstl
leave
leave
fdivs
jle
xchg
clc
shlb
lret
fistl
lret
pop
mov
out
xor
inc
sti
stos
pop
cld
and
outsb
outsl
or
mov
aad
ljmp
add
push
movsl
and
les
incl
mov
aam
rol
xchg
enter
xchg
iret
divb
pause
stos
mov
jmp
cmp
or
or
lea
sarl
pop
gs
loopne
push
insb
out
jb
mov
hlt
mov
andl
sbb
push
inc
lret
ja
push
sub
xchg
leave
fnstsw
jbe
push
rorb
mov
dec
dec
pusha
in
dec
ja
or
pushl
sbb
ret
mov
or
fistpll
inc
jle
mov
lods
inc
cmp
jecxz
std
lahf
or
mov
jno
ret
fcoml
pushl
loopne
sbb
fists
cmc
mov
cmp
push
add
mov
push
orl
scas
decl
std
pushl
dec
insb
mov
adc
je
test
cmp
fmul
and
inc
add
sbb
jp
mov
mov
aam
cmp
sub
incb
hlt
fcmovnbe
mov
inc
shll
cli
add
xor
inc
ja
loop
aad
lds
les
lret
jge
xchg
mov
mov
jg
xchg
dec
out
dec
pop
sbb
es
es
push
push
push
xchg
dec
jle
aas
pushf
dec
inc
nop
inc
std
xchg
icebp
jg
call
insb
jae
popf
mov
push
out
push
icebp
insl
insl
lea
addl
mov
lock
fsub
or
leave
or
push
mov
inc
ficompl
sub
jg
fcmovu
and
sti
cwtl
xlat
test
xchg
movsb
push
int3
dec
xchg
mov
ljmp
xchg
cltd
add
mov
adc
decl
jg
stos
orl
sub
inc
scas
lcall
pop
mov
sub
out
adc
scas
pop
popa
imul
daa
es
mov
decb
add
iret
pop
std
push
push
sbb
or
cs
int3
add
mov
xor
jae
xchg
mov
cmpsb
aaa
adcb
or
or
jg
mov
lahf
mov
ljmp
cmp
call
clc
lea
call
mov
push
xchg
sbb
and
pop
jb
sub
addr16
enter
ljmp
push
mov
shr
decl
shrl
cmp
scas
inc
pop
push
and
icebp
int3
ficoms
das
inc
pop
out
les
jecxz
mov
popf
lods
in
movsb
xorl
into
cmp
pop
push
iret
jmp
mov
mov
inc
and
adc
icebp
aaa
pop
jg
mov
popa
hlt
jno
outsl
aam
pushf
dec
jg
das
jge
lea
out
dec
or
je
cmp
call
mov
mov
jge
fisttpll
jg
cmp
aaa
test
movsb
addr16
sbbb
mov
adc
lcall
jle
ljmp
cmp
stc
mov
out
mov
jg
decl
mov
mov
mov
fnstsw
mov
jo
and
aam
mov
decl
lcall
and
repz
bound
fnstsw
jae
add
aas
test
mov
mov
mov
or
mov
add
clc
call
dec
scas
jo
jecxz
lret
arpl
dec
js
lods
sbb
repnz
sarl
dec
repz
inc
cmp
sbb
mov
sar
cmc
or
std
mov
ljmp
mov
adc
mov
lods
lods
in
pop
std
push
push
sbb
jmp
mov
add
pop
cld
lock
pop
adc
adc
and
addr16
aaa
mov
rol
int
cwtl
push
hlt
imul
movsl
xchg
jb
enter
mov
cmc
pushl
mov
in
sahf
push
insb
cmp
decl
clc
pop
push
pop
adc
fwait
loopne
jmp
add
cmp
ffreep
out
sbb
ja,pt
pop
or
loop
arpl
das
jle
xlat
js
iret
mov
sub
int
out
scas
mov
xor
mov
jl
adc
mov
pushl
subb
mov
jge
jno
int3
xchg
popf
dec
sti
xchg
dec
or
fildl
mov
dec
xor
outsl
or
xchg
pusha
xchg
fnstsw
xchg
clc
cmc
fdivl
cmp
mov
fcoms
sqrtps
decl
jns
xchg
lds
add
rorb
out
fwait
jg
ficoml
in
ljmp
lock
mov
pop
xchg
mov
xchg
daa
pop
push
cli
je
jmp
push
scas
fmuls
les
fcos
decl
int
sbb
ljmp
mov
mov
cmp
xlat
push
inc
fimull
call
ljmp
cli
scas
pop
hlt
sub
inc
enter
lds
cmpsl
xchg
lods
mov
xchg
mov
add
in
call
scas
push
pop
pop
cmp
les
call
xor
jg
sub
lods
jp
adc
std
jg
mov
or
sbb
ret
cmp
cmp
das
icebp
ljmp
add
sahf
adc
bound
jl
dec
sbbb
dec
aam
mov
jle
pop
mov
cmp
lods
pop
in
sbb
adc
cmp
adc
jnp
shlb
aam
aad
adcb
orb
cli
inc
adc
pusha
or
fcoms
pop
gs
fs
push
subb
mov
jg
jno
xchg
mov
dec
aam
outsl
xor
movsl
mov
or
call
cli
jnp
cmpsl
pushf
call
jne,pn
pop
ficoml
clc
movsb
cmp
sbb
mov
and
and
fists
push
pop
sub
ret
mov
cltd
repz
pop
xchg
clc
sahf
dec
loope
test
pop
xor
sbb
cmp
pushf
push
lods
pop
dec
pop
push
addr16
sub
mov
cmp
dec
pop
xchg
cmpsl
xchg
clc
pop
idivb
adc
push
pop
pop
sub
sub
lea
mov
fiaddl
dec
or
mov
mov
movsl
sbbb
and
outsb
pop
clc
jg
jmp
adc
stos
pop
push
daa
outsb
sbb
loopne
scas
jge
sbb
add
push
pop
cli
mov
in
cmc
call
pop
jnp
mov
cmp
test
in
std
imulb
mov
jl
or
in
cmp
jmp
pop
cmp
pop
ljmp
and
stos
out
leave
jbe
aaa
sub
clc
test
add
cs
push
cmp
pop
sahf
add
cmp
pop
add
jg,pt
push
sbb
fsubrs
test
lret
push
out
loope
or
add
lods
aad
inc
test
xchg
push
ret
imul
adcl
in
jg
pop
lock
adc
jmp
inc
xor
lret
cmpsb
cmpsl
adc
push
mov
roll
push
ss
in
adc
call
jnp
xor
popf
icebp
jl
push
pop
ds
ja
mov
hlt
inc
test
xchg
rclb
les
sub
pushl
sbb
rclb
jnp
lcall
call
bound
inc
mov
push
push
cmp
jge
and
jo
lcall
jg
jae
push
jmp
mov
sbb
sbb
jl
ds
pop
push
fisubs
addb
decl
outsl
jmp
pop
add
mov
jp
or
out
xor
in
jecxz
bound
xor
jno
mov
dec
inc
cmpb
outsb
imul
loop
push
lret
ljmp
in
in
or
lret
lods
xor
pop
insl
dec
mov
xor
subb
xor
push
dec
jg
std
sbb
outsb
out
std
push
mov
pop
sarl
out
push
pop
jge
inc
push
jle
fcompl
inc
push
xchg
mov
mov
push
mov
test
mov
cwtl
arpl
ret
mov
push
cmpsl
test
fbld
jae
jle
dec
arpl
sbb
pop
xor
mov
jo
in
mov
decl
out
pop
out
jns
mov
cmpsb
sub
or
int
daa
mov
adc
iret
icebp
and
icebp
test
mov
outsl
inc
jbe
xor
cmp
jp
pop
pop
inc
dec
jge
jp
and
jne
cmp
mov
push
jg
jnp
dec
into
mov
jge
testl
xor
cmp
and
ljmpw
xchg
pop
xchg
hlt
pop
cld
in
ljmp
and
imul
pop
adc
xor
push
enter
sub
lcall
andl
inc
adc
and
orb
add
mov
pushl
jle
xchg
sub
xlat
into
and
mov
sahf
fcomi
fwait
mov
clc
jg
dec
outsl
lea
imul
ss
mov
outsb
ja
std
jnp
sub
xchg
jge
stos
xchg
mov
imul
mov
lods
sub
clc
ljmp
jecxz
lea
nop
pop
stos
and
test
dec
mov
mov
ret
jb
inc
inc
aad
or
fstpt
dec
push
xlat
sub
mov
icebp
sahf
xor
push
mov
jecxz
push
pop
hlt
dec
cmpl
push
add
xor
decl
decl
test
shr
mov
or
add
sti
js
iret
clc
fmull
gs
xchg
out
loopne
lea
icebp
mov
mov
lcall
sub
or
mov
ljmp
jge
push
aam
push
pop
repz
push
xor
cmp
decl
lret
jg
add
fnclex
movsb
pop
cmp
ret
mov
fwait
repnz
jl
lahf
imul
lret
adcl
push
sbb
push
and
adc
xor
loop
jne
decl
and
faddl
mov
jg
sbb
inc
mov
mov
call
sub
arpl
jno
ss
jnp
std
cwtl
inc
push
add
cmp
push
incl
imul
sub
push
jbe
data16
mov
mov
lods
imulb
lret
mov
xchg
sub
jo
xchg
test
std
roll
pop
cld
mov
xor
sbb
fiaddl
or
popf
test
jg
ljmp
adcl
dec
in
lea
push
push
mov
es
xchg
repnz
cli
lcall
cltd
jns
scas
in
cmp
mov
sbb
stos
addr16
gs
decl
in
nop
cmp
lds
sub
sbb
mov
fucomi
add
je
cld
lods
xchg
xor
pop
repnz
ds
addr16
jle
mov
out
inc
jge
push
movsl
lods
aad
pop
push
mov
jno
shlb
iret
stc
mov
lret
mov
mov
xlat
lcall
std
in
inc
fldl
mov
sarb
inc
ljmp
mov
adcl
add
int
jg
mov
xchg
cvttps2pi
pop
cmp
push
pop
or
sub
jl
sbb
inc
outsl
faddl
pushf
mov
jle
jl
dec
sbb
lods
sub
mull
out
mov
hlt
lea
push
ss
xor
jg
rorl
ljmp
pop
jmp
imulb
scas
xor
outsb
roll
mov
jg
jg
mov
ret
sbb
enter
ds
incl
pop
scas
pop
push
rol
xor
daa
mov
xchg
jno
mov
xor
sahf
js
jmp
rol
add
mov
int
ret
stos
adc
popa
xchg
jge
dec
repz
pop
mov
push
and
adc
rorb
cld
aad
dec
or
call
sbb
je
or
notb
adc
add
ret
jmp
mov
js
adcl
sar
clc
add
dec
testl
outsl
hlt
lods
mov
mov
pop
sub
sub
incl
jnp
pop
dec
lock
mov
push
mov
gs
cmc
cmp
fcomi
sub
sar
inc
adc
das
fsubrl
ret
gs
fnstcw
mov
mov
jle
das
cmc
call
fsts
int
sbb
pop
lea
pop
lods
mov
mov
std
dec
icebp
popf
aas
sub
xor
repnz
fistpll
hlt
stc
dec
repz
das
std
out
jp
clc
xchg
sti
mov
fs
pop
movsl
push
xchg
sahf
in
adc
push
xchg
mov
movl
sbb
xlat
ss
fs
mov
pop
mov
pusha
pop
cmp
or
mov
jmp
in
xor
aad
inc
jo
xchg
sbb
sub
push
cmpsb
push
stos
adc
decl
cmp
sahf
adc
je
inc
mov
inc
in
xchg
repnz
sbb
mov
gs
idivl
pop
xchg
pop
rcl
idivb
adc
lcall
fisttpl
out
or
and
add
sbb
stos
add
cli
lcall
jo
cmp
int
cmp
jae,pn
dec
clc
ja
or
add
decl
and
stos
add
cmp
mov
aas
sub
jnp
push
adc
add
lock
jmp
lods
call
jne
enter
xlat
test
adcb
mov
lcall
push
mov
mov
aaa
sbb
and
fisttpll
xlat
mov
push
sub
call
xor
scas
fcomip
xchg
out
insl
movsl
sti
jo
inc
cmc
jecxz
decl
ret
rorl
sub
lcall
adcl
inc
pushf
out
xchg
out
fimuls
pusha
jle
jle
daa
insb
pusha
das
std
decl
mov
dec
mov
shl
dec
push
inc
imul
push
cltd
in
fs
mov
mov
enter
lods
mov
out
std
jg
dec
pop
sbb
pop
dec
inc
addr16
int3
lock
lods
cmp
jle
xor
jmp
mov
decl
or
in
push
inc
fldl
out
jle
imul
test
inc
cmpsl
add
in
stc
mov
outsb
mov
lea
cli
mov
jg
mov
test
in
cwtl
lret
push
scas
int3
pop
in
into
js
push
repnz
jp
push
add
inc
xor
lock
cmc
mov
ja
outsb
sub
decl
pop
lret
mov
jl
stos
rcrb
incl
das
xor
hlt
mov
outsl
je
fcos
incl
pop
lods
pop
test
jle
dec
mov
push
test
aam
sbb
dec
push
fidivrs
popa
notb
xchg
jp
mov
sub
xchg
pop
cli
ljmp
mov
lods
dec
rcl
mov
xchg
xor
mov
scas
jb
jb
repz
dec
adc
fisttpl
sbbb
xchg
xchg
clc
cmp
es
adc
pop
xor
jmp
lods
inc
movsl
sub
dec
push
leave
push
xor
xor
ja
stc
xchg
inc
clc
jg
jmp
xchg
mov
cmp
add
fldt
jmp
ss
fadd
xor
inc
sbb
mov
mov
xchg
jg
js
adc
mov
fs
xor
jmp
push
jae
push
inc
insl
imul
ljmp
shrb
or
data16
jg
fcompl
mov
dec
sbb
inc
movsl
lcall
cmc
in
xchg
cs
push
fstpt
pop
cmc
lods
push
stos
daa
in
jmp
push
mov
cld
pop
push
push
js
in
es
sub
mov
adc
or
in
inc
inc
mov
shl
push
lock
jge
dec
jp
mov
incl
test
xchg
inc
and
lcall
cld
fdivs
mov
popf
rolb
sbb
and
xchg
xchg
jle
push
mov
and
sti
decl
xor
outsb
jne
sbb
sub
adc
sbb
inc
mov
mov
rcr
js,pn
push
jg
push
dec
not
push
sti
es
sbb
add
sbb
adc
addr16
incl
mov
jl
mov
xlat
or
iret
icebp
jp
pop
pop
add
push
or
das
ret
sbb
jmp
scas
or
sbb
sahf
cmp
xchg
lock
mov
mov
fmuls
inc
or
jmp
push
sbbl
jp
roll
xchg
stc
cmpsb
icebp
pushl
aad
jmp
test
loop
stos
push
inc
test
rclb
push
insb
movsl
push
mov
cwtl
ja
out
sub
cmpsb
jg
incl
sbb
add
ret
jnp
rcrl
xchg
into
insl
pop
in
cwtl
pop
movsl
sar
repz
dec
xchg
pop
xchg
mov
sbb
lcall
std
pop
adc
insl
bnd
jmp
repnz
mov
nop
sar
lods
pop
mov
popa
xchg
cli
mov
push
popf
andl
and
sarb
jmp
fsubl
in
shll
stc
inc
xchg
jg
scas
inc
cmp
mov
push
jns
pop
and
shrb
icebp
or
mov
mov
push
daa
into
int
fmuls
fisubl
xchg
loopne
out
incl
xchg
sub
sbb
enter
sbb
push
fcoml
pop
popf
xchg
fsubrl
mov
sahf
mov
jecxz
inc
cmp
aaa
jo
pop
loop
movsl
push
aam
push
mov
sbb
and
and
adc
lea
mov
lods
mov
out
cltd
jmp
xchg
push
imul
mov
popa
lcall
jg
jg
and
and
inc
jmp
int3
pop
pushf
test
repz
cmp
mov
sub
mov
fs
leave
test
ss
insl
or
push
mov
sar
insl
mov
mov
or
mov
mov
bound
fdivrs
lods
loop
sub
cmp
cmc
mov
fcos
mov
incl
mov
jno
cmpsl
aas
sbb
fldt
out
stos
or
call
iret
and
and
loop
dec
cwtl
mov
incl
pop
flds
jnp
xchg
jno
ss
jae
ljmp
sbb
push
addr16
xchg
test
mov
push
and
inc
cwtl
flds
ud0
sub
mov
xchg
filds
cltd
sub
das
lcall
popf
gs
mov
pop
cli
xor
hlt
ljmp
mov
dec
adc
pop
push
lcall
cmp
dec
mov
pop
sbb
lahf
ficoms
pop
or
and
imul
mov
pop
sarb
xchg
cmpsl
repz
jle
outsl
cld
jmp
sub
add
js
es
loopne
xchg
xchg
adc
and
xor
test
mov
mov
inc
jae
out
clc
test
lock
xchg
or
fcomip
arpl
add
mov
inc
shlb
outsb
cmp
dec
pop
push
test
repnz
mov
jmp
pushl
jp
mov
dec
sbb
mov
xchg
inc
push
ljmp
fistpll
push
fwait
and
fsts
je
push
iret
sbb
les
cmp
jmp
psubb
mov
iret
add
jg
cmp
les
icebp
mov
mov
movsl
aaa
ja
fdivrs
cmp
xchg
pop
add
xchg
and
adc
jmp
cli
decl
mov
mov
mov
sti
inc
mov
jmp
cmpsb
jns
xlat
add
iret
jl
cmp
test
jg
ljmp
arpl
xor
xchg
mov
test
adc
xchg
icebp
add
mov
scas
jg
pop
arpl
lea
lahf
lret
pushf
fucomi
push
popa
cmc
mov
or
in
jmp
es
mov
outsl
jg
push
dec
loop
cmp
xchg
outsb
and
testl
mov
cli
xchg
clc
decl
jnp
cmp
shl
daa
fldl
cltd
shlb
aaa
adc
mov
jne
mov
fwait
in
vmread
mov
dec
fucomip
jg
xchg
int
xlat
push
scas
jne
gs
dec
mov
inc
lods
cld
sar
sbb
adc
mov
fiadds
int
dec
es
xchg
dec
stc
jl
test
fs
pushf
mov
jg
fistps
cmp
push
inc
xor
inc
push
jg
cltd
das
mov
jl
or
cld
movsl
call
add
mov
jmp
jmp
repz
in
xor
cld
push
sbb
fwait
rcll
aad
mov
pushl
mov
or
sahf
xor
out
pop
jl
pushl
cli
xchg
ja
push
push
or
add
mov
mov
adc
cmpsl
mov
sub
mov
idivl
mov
das
insb
pop
bound
sbb
xor
pop
cmp
adc
das
xor
fnsave
cmp
cli
adc
mov
repnz
pop
sti
ret
ljmp
push
pop
mov
jp
and
mov
adc
out
cmovle
inc
out
ljmp
xorb
loope
pop
xor
sub
mov
loopne
gs
cld
pop
mov
repnz
xor
inc
xchg
aas
sbb
pop
inc
mov
shl
or
sar
adc
fbld
flds
xchg
test
or
lcall
rclb
dec
orl
push
subl
imul
call
mov
in
dec
xchg
jg
mov
hlt
mov
cmp
bound
adc
enter
xchg
xchg
mov
mov
decl
inc
loope
inc
ret
pop
lds
mov
mov
pushl
add
mov
out
xchg
add
mov
mov
and
mov
jp
jo
call
subb
out
cltd
lret
jmp
mov
rcll
pop
cli
sbb
loop
sti
push
mov
pop
loope
adc
jo
outsl
mov
shr
ss
not
adcb
lods
adc
roll
cltd
sbb
mov
push
and
fucomip
pop
cmp
cwtl
scas
in
mov
mov
and
push
dec
dec
pop
xchg
cmp
fwait
test
repnz
jp
je
cli
adc
jg
inc
sti
jge
call
call
je
imul
or
xchg
fldcw
push
jmp
decl
or
cmp
pop
push
lea
or
das
dec
loopne
fildl
dec
or
jb
sbb
cmp
or
jae
fwait
nop
jecxz
xor
or
and
sub
push
aas
sub
imul
dec
or
pop
clc
lcall
out
adc
stos
insb
sbb
xchg
cmp
cmp
xchg
ss
call
sub
mov
stos
pop
xor
sarb
or
pushf
adc
jmp
mov
loope
xchg
ret
sbb
adc
add
or
mov
pushl
pop
cwtl
pusha
lret
cmp
mov
addr16
xor
add
decl
fcomps
pop
mov
pop
cld
dec
xchg
mov
sub
lret
outsl
hlt
ljmp
hlt
add
push
popf
cmp
and
mov
pop
jge
mov
sbb
xchg
mov
into
dec
pop
stc
dec
imul
jae
mov
mov
sub
adc
xchg
movb
pop
jne
adc
jle
cmp
fdivrs
jge
push
pop
jp
mov
push
xchg
fstpt
sub
out
or
decl
ret
fildl
sbb
jmp
test
jp
lret
adc
lcall
and
cmp
orb
and
sbb
inc
xor
jg
mov
xor
sub
inc
xchg
pop
inc
or
cmpb
lcall
pop
clc
mov
decl
jno
std
out
sbb
gs
pushl
cmp
inc
xlat
xor
test
cmp
mov
push
call
cmpsb
fadds
pop
insb
or
clc
sub
in
inc
add
mov
decl
jo
test
adc
mov
ja
repz
sti
call
xchg
push
and
or
outsb
push
fidivrs
sub
push
pop
ljmp
xor
lock
jge
sub
clc
pushl
jge
sub
sahf
jb
shr
outsb
mov
adc
and
mov
pop
cli
fidivl
dec
pop
scas
bound
inc
jg
jg
or
out
dec
pop
into
xorb
xlat
jle
inc
addb
mov
clc
fdecstp
lahf
sbb
add
decl
negb
pop
jmp
ja
lcall
add
lcall
mov
jmp
leave
test
mov
int3
push
jle
jmp
outsb
or
cld
inc
cmp
fdivs
mov
std
lcall
or
and
xor
js
in
xor
sub
je
push
jne
mov
pushl
mov
xor
xchg
popa
mulb
dec
pusha
pop
xchg
shll
pop
xchg
fcomi
shr
mov
call
add
ss
sbb
ds
arpl
pop
mull
cmc
pushf
dec
add
xchg
clc
andb
inc
add
fidivs
jmp
xchg
push
idivb
xor
in
jle
fldt
jmp
or
jp
push
xchg
out
cmp
in
notl
aam
pop
bound
jnp
xchg
in
inc
repz
sbb
cmc
jg
jmp
repnz
ret
test
data16
lea
xchg
adc
inc
push
incl
out
in
out
nop
rcrl
lret
pusha
dec
shl
adc
call
test
fmull
and
lret
mov
adc
mov
mov
ss
test
incl
sub
push
sub
sub
xchg
or
pushl
sbb
fidivrs
and
jbe
nop
ljmp
lcall
jbe
jne
pop
in
fbld
rcl
dec
frndint
lret
inc
sbb
js
dec
clc
sar
das
lock
adc
cmpsb
cmp
xchg
xor
int
inc
cltd
popf
pop
or
pop
pop
dec
addr16
push
and
push
mov
push
data16
jmp
or
xchg
mov
jg
insl
mov
pop
mov
decl
fdivrp
add
es
movsb
jmp
lahf
dec
mov
rorb
mov
inc
sub
push
sbb
jle
dec
nop
mov
mov
insl
hlt
pop
orl
xor
cwtl
sbb
rcrl
or
adc
nop
hlt
jae
push
xchg
and
push
pop
incl
lods
pop
cmp
adc
pop
test
push
mov
jmp
shlb
push
in
jecxz
mov
scas
pop
or
popf
enter
cmp
sbb
das
icebp
call
mov
dec
movsb
imull
xchg
mov
inc
push
mov
in
std
bound
pop
iret
add
test
outsl
popf
and
jnp
icebp
cltd
inc
sub
inc
lock
xor
lret
sahf
sti
mov
cltd
inc
sti
movsl
add
lcall
test
fisttps
xchg
into
push
fcoml
jo
jp
sub
ret
incb
mov
adc
cmp
xor
loopne
jnp
aam
popf
mov
call
das
push
pop
sarb
push
jns
shlb
jg
lcall
push
xchg
pop
xor
shrl
pop
xchg
mov
jle
popa
pand
cmc
jg
ljmp
mov
and
rcrl
add
inc
ljmp
cmp
fsin
push
in
jo
or
dec
xor
ds
outsl
dec
ljmp
outsl
mov
ret
jmp
outsb
in
rol
or
outsl
outsl
mov
push
lret
addr16
or
daa
out
data16
imul
iret
sbb
ds
jecxz
jae
fwait
push
arpl
or
adc
jno
push
out
inc
and
call
fdivr
fwait
dec
adc
movsb
in
sarb
mov
jmp
or
int
loopne
movsb
pop
jecxz
mov
pop
jmp
mov
lret
push
push
or
sbb
push
scas
pop
icebp
mov
testb
inc
test
or
mov
pop
int3
xchg
inc
jns
std
movsb
lcall
push
pop
inc
shrl
cltd
or
inc
into
rorb
pushf
mov
adc
mov
xlat
decl
inc
rorl
ljmp
std
int3
jecxz
xor
add
dec
mov
mov
call
lcall
mov
add
push
ret
cltd
ljmp
pushl
sbb
inc
jns
mov
bound
or
pop
sti
mov
lea
jmp
push
popa
mov
outsb
pushf
dec
std
in
jle
decl
xchg
fsubrs
mov
orl
xchg
pop
lret
and
jp
mov
add
jecxz
sbb
mov
fisubrs
push
or
mov
mov
aas
insb
dec
inc
and
cltd
fistpll
adc
fucomip
jmp
push
xchg
pop
mov
and
or
xlat
adc
pushl
mov
jne
inc
cmpsb
cli
movaps
mov
lcall
sbbl
push
lods
mull
icebp
subl
pop
and
jno
xchg
mov
mov
jns
xor
add
push
pop
aas
mov
adc
gs
cltd
push
inc
push
pop
mov
jg
mov
fildll
sbbb
hlt
add
cmpb
cmc
div
pushl
clc
mov
insb
aam
lods
pop
ror
lret
dec
rsm
sub
mov
outsl
repnz
and
push
jecxz
and
pop
mov
and
call
addr16
xchg
add
shl
addr16
in
and
mov
and
fnstsw
decl
jmp
mov
ljmp
shr
mov
call
lcall
daa
jbe
mov
adc
mov
ljmp
sbb
in
mov
ret
lock
lods
xchg
test
lods
aaa
arpl
mov
mov
imul
sub
cld
out
jg
outsl
mov
repnz
dec
iret
popa
sub
insl
xchg
mov
mov
fildll
lock
or
call
mov
inc
inc
sti
call
pop
daa
pushf
in
in
or
mov
dec
shll
decl
test
mov
ret
adc
push
out
outsl
sbb
stos
in
lcall
push
scas
je
add
aam
in
xchg
cmp
fimuls
pushl
popa
mov
xor
jge
call
fnstenv
sti
dec
pop
jb
fdivrl
stc
cmpsb
js
ljmp
popf
call
adc
push
clc
push
lret
std
sbb
xchg
cmp
bound
div
xor
pop
dec
inc
test
popf
jae
fisttpll
mov
xchg
pusha
sub
jle
or
incl
inc
push
sub
xchg
sub
cmp
inc
and
jmp
loop
push
dec
sub
aaa
pop
pushf
cmp
incl
cmpsl
push
jmp
cmp
fucomi
sub
daa
cmp
outsl
popa
mov
add
in
jle
pop
cmc
call
adc
pop
pop
ljmp
mov
scas
sbb
inc
mov
decl
xor
push
int3
sbb
dec
out
sub
test
sar
dec
add
and
sbb
lret
ja
sbb
inc
pop
or
movsl
cmp
lcall
mov
dec
mov
push
mov
pushl
jle
xor
icebp
xor
sbb
push
cmp
or
rorb
test
add
ds
push
ss
inc
adc
outsl
cmc
clc
sarl
xchg
fs
inc
xor
dec
divb
dec
aam
lock
ljmp
pop
lds
add
fstl
xchg
lcall
outsl
pop
push
pop
stos
shrb
push
jo
arpl
hlt
cli
xchg
clc
jg
jl
pop
dec
shll
adc
mov
adc
mov
sub
int
pop
std
test
ljmp
mov
imul
cmp
nop
fcompl
xchg
cmpsl
cmp
mov
insl
ds
mov
hlt
mov
push
imul
fldenv
xor
jo
sbb
mov
mov
repnz
cmp
mov
out
ds
sti
push
pushl
pop
repnz
push
jp
pop
and
xchg
lea
clc
or
jl
jg
push
cmpsb
inc
decl
imul
cwtl
pop
jnp
push
sbb
inc
es
mov
xchg
clc
cs
push
jecxz
xchg
pop
shll
add
lea
and
mov
clc
incb
xchg
pop
movsl
push
scas
loope
ja
xor
repz
in
test
hlt
sbb
decl
push
dec
mov
sbb
jb
jmp
ja
ljmp
mov
mov
add
mov
cmpsb
xchg
and
cltd
orb
outsb
lock
lcall
std
dec
add
dec
int3
sub
adc
add
loop
pushl
fstp
imul
mov
jge
frstor
dec
insl
jno
mov
pop
ljmp
jb
xor
popa
in
pop
and
xor
dec
aaa
rolb
xchg
leave
call
mov
xchg
sarb
add
push
and
fistps
mov
pop
cmp
push
mov
push
pusha
aas
test
out
sub
jg
adc
jge
ret
add
das
fsubr
lahf
and
lcall
jmp
nop
inc
mov
or
lea
mov
mov
fcompl
xor
ljmp
cmp
push
shr
cmp
int3
int
neg
push
adc
sub
inc
mov
in
dec
xchg
inc
fimuls
pop
cli
fistpll
push
adc
jmp
in
mov
popa
rcll
outsb
sbb
cmpsb
add
in
mov
loope
and
ds
xchg
mov
or
and
push
sub
sbb
pushl
pusha
lret
xchg
ja
imul
aaa
dec
jno
cmp
lahf
ss
push
add
or
pop
sar
fisttpl
pop
stos
roll
or
sbb
lds
jecxz
mov
mov
or
pushf
jecxz
lret
push
jb
lds
cmp
pop
out
js
rcrl
das
lret
pop
cld
and
aas
in
mov
adc
mov
enter
inc
movsl
sbb
pop
loop
lret
xchg
fdivrs
clc
or
add
fnstsw
mov
adc
mov
shl
sub
pushl
loopne
sbb
inc
iret
fnstsw
lcall
insb
cwtl
ljmp
jecxz
bound
and
out
cmp
dec
hlt
mov
jbe
arpl
mov
dec
sti
into
fs
mov
xor
cmp
cmp
xchg
mov
sub
iret
cmp
ljmp
push
call
push
xchg
adc
cmpb
mov
adc
lea
xchg
jl
arpl
mov
test
arpl
xchg
lcall
ljmp
dec
sbb
mov
call
loopne
cmpsb
sarb
dec
or
ljmp
adc
or
stos
rcrl
xchg
mov
pushl
out
fwait
sbbl
inc
jo
in
in
data16
adc
int
mov
jg
and
jecxz
int
jae
push
fadd
dec
mulb
jno
inc
xlat
cmp
mov
loop
jp
es
lea
mov
sbb
sbb
jmp
adc
xchg
shlb
subl
pop
cwtl
mov
dec
dec
je
outsl
pushl
gs
sbb
dec
xor
adc
xlat
test
das
arpl
pushl
sub
add
jle
rcrl
fcmovnb
push
shrl
loope
dec
insl
lock
sub
jle
xchg
test
sbb
push
jg
scas
xchg
lcall
fildll
jb
sti
mov
clc
or
jg
call
xchg
cltd
dec
outsl
add
data16
int
xlat
stos
push
lret
jmp
movsl
xor
push
xchg
mov
and
adc
mov
imul
mov
mov
inc
shr
clc
das
cmc
clc
xchg
lock
mov
xchg
jge
mov
movsl
stos
mov
loop
jecxz
outsl
xchg
mov
jo
cmpb
rcrl
icebp
rcrb
jnp
jnp
mov
imul
out
inc
lock
call
cmp
rcrb
jecxz
pop
pop
push
xor
mov
or
mov
mov
xchg
and
jge
es
lods
jecxz
mov
pop
sub
sub
out
add
jg
loop
incb
jae
mov
out
push
jae
mov
xor
pop
jbe
cmp
pop
call
sar
jg
lock
insl
mov
cmp
jl
mov
xlat
inc
sbb
aam
daa
call
mov
mov
andl
rcll
dec
pop
cmpsl
in
sbb
fcomp
push
je
cwtl
ret
xchg
inc
enter
sub
dec
inc
lret
addr16
cmp
mov
mov
lds
xchg
sar
call
sahf
testl
fcompl
adc
aam
push
inc
mov
push
push
sub
frstor
test
ljmp
pop
out
jno
and
enter
call
cld
jg
push
pop
sub
data16
jmp
dec
mov
shr
adcb
outsb
cmp
inc
cltd
lcall
cli
jmp
xchg
sub
inc
repnz
addb
repz
push
fcomip
mov
push
sbb
pop
out
add
cmp
jbe
fidivrs
cmp
shr
jbe
lret
push
pop
mov
movsl
call
mov
iret
inc
imul
incl
hlt
andb
scas
or
push
in
xor
test
sbb
outsl
cmp
xchg
decl
add
adc
mov
pusha
mov
das
mov
sarl
or
mov
jge
xor
mov
pop
sar
and
ljmp
sub
jmp
add
shrb
mov
xchg
sbb
sbb
mov
pop
loop
sub
cmpb
icebp
sbb
push
jae
insb
in
cmp
je
or
imull
out
lcall
loopne
push
xchg
leave
xor
dec
mov
imulb
mov
pusha
add
push
cmpsl
sbb
xchg
sub
pushl
mov
xor
imul
test
xlat
ja
das
icebp
inc
dec
dec
daa
dec
ret
mov
mov
and
mov
test
jo
cmp
and
and
dec
cwtl
cwtl
or
bound
and
in
lret
xor
sub
out
push
pop
out
and
arpl
sub
sub
or
mov
dec
repnz
into
in
sub
adc
jo
jp
inc
cli
xchg
adc
inc
mov
sub
pop
mov
mov
pop
sti
mov
idivb
scas
pop
xor
mov
cmp
cmp
pop
sub
call
xchg
push
rolb
or
and
clc
mov
xor
add
test
hlt
inc
lcall
add
rorb
mov
adcl
jmp
cld
adc
rorb
pop
enter
outsl
and
arpl
xchg
fstpt
ss
xor
dec
mov
js
popa
frstor
data16
lods
ja
push
es
clc
pushl
outsb
cld
adc
ja
loop
divb
cmp
jp
sbb
aaa
movl
sub
rcrb
or
daa
aam
sub
mov
or
call
jp
sbb
sbb
call
add
in
insl
sbb
inc
outsb
jg
sbb
loopne
inc
adc
jns
aas
mov
jg
inc
pop
push
stc
cmpsl
mov
cs
pushf
dec
cli
mov
push
repnz
jg
or
std
mov
and
inc
lods
inc
mov
ljmp
sub
mov
jnp
and
cwtl
cmp
iret
test
cmp
setge
cld
mov
sbb
push
mov
lcallw
cs
inc
outsl
jno
outsl
mov
adc
arpl
sbb
lcall
movsl
sub
adc
and
fdiv
pop
stos
mov
dec
jne
xor
imul
outsl
daa
repnz
sub
inc
pop
jl
loop
xchg
cli
adc
xchg
lea
lcall
or
or
xchg
inc
or
xlat
icebp
dec
mov
jbe
cmc
ljmp
push
ficompl
or
test
insb
insb
add
mov
fmulp
jg
das
lods
daa
mov
pop
mov
mov
ljmp
mov
inc
pop
xchg
inc
xorb
int3
std
adc
xchg
fidivrs
push
cmp
clc
xchg
iret
fldenv
xor
jg
and
loope
clc
pop
lret
ljmp
aad
repnz
clc
jne
insl
lods
sub
jle
dec
mov
aaa
xchg
xchg
mov
mov
lea
incl
pop
aad
jbe
xchg
push
cmp
js
dec
jnp
cwtl
inc
and
lcall
js
cmpsl
shrb
or
jg
pop
insb
sbb
mov
adc
pop
inc
icebp
mov
sahf
adc
dec
mov
mov
nop
and
inc
cmp
sub
xchg
decl
dec
add
jp
jbe
in
jp
ret
pop
jmp
mov
std
ljmp
je
aam
dec
leave
jno
jo
out
push
xchg
sub
push
pop
push
pop
outsl
jnp
cwtl
push
lahf
push
stos
mov
test
jge
cld
mov
push
gs
mov
pop
loop
xchg
or
insl
and
xchg
pop
mov
push
pushl
sub
ret
jo
jb
inc
push
or
mov
shl
sbb
incl
and
rol
mov
aam
or
ljmp
cltd
jl
sbb
pop
xchg
fdivr
mov
cmpsb
std
fisttps
mov
lahf
in
inc
outsl
std
incl
mov
pop
repz
pop
es
push
jb
and
imul
ret
pushl
test
cmpsl
sbb
and
xchg
sbb
jmp
inc
mov
adc
fwait
loopne
sbb
mov
lea
pushl
into
or
sub
mov
push
jb
inc
and
call
cmp
xchg
jnp
jle
pushf
dec
loope
lock
mov
out
aad
mov
pushl
pusha
push
cli
xchg
sahf
aam
inc
jnp
pop
xchg
fists
loopne
les
sbb
aaa
cli
jg
adc
push
xchg
mov
jge
push
sti
xchg
and
push
mov
xchg
lock
stc
mov
mov
add
mov
jle
xchg
xchg
clc
push
ret
sbb
push
push
cmp
push
int
xchg
fnstcw
push
jns
xchg
inc
lods
stos
clc
bound
add
insb
fmull
jb
adc
xchg
xor
jg
cmp
jno
loope
push
push
sbb
mov
sub
pop
mov
jg
sti
mov
int3
mov
outsb
sub
xchg
adc
mov
pop
jecxz
aas
inc
ljmp
xchg
test
jge
mov
nop
sarl
int3
pushf
add
gs
in
lcall
xor
jnp
dec
push
in
adc
pop
inc
adc
repz
lcall
sarl
mov
call
mov
loope
sti
inc
incl
fbld
mov
test
push
cmp
mov
jg
xchg
push
div
cmp
mov
std
mov
sbb
jp
movsb
cmc
arpl
jg
call
sbb
ss
xlat
cwtl
aas
xchg
loope
cmp
stos
mov
mov
movsl
fiaddl
and
sbb
and
sarb
jmp
and
cmpl
cltd
lcall
loope
cli
sarb
pop
xchg
insb
popf
add
push
cld
ljmp
hlt
loope
cmp
sub
jp
lods
xchg
enter
pop
mov
lcall
or
loopne
imul
aad
cmp
lods
ficompl
or
dec
insb
jmp
mov
mov
dec
cmp
rolb
idivl
xchg
cli
fisttpll
ljmp
add
aaa
xchg
push
mov
jmp
xlat
jno
fwait
aas
divb
push
popf
xor
das
push
fwait
jmp
subl
mov
leave
out
push
mov
stos
rolb
loope
pop
xor
enter
pop
cli
outsl
hlt
js
data16
mov
jno
out
insb
call
lcall
cmp
sub
test
out
xchg
fistpll
das
insb
mov
sbb
fwait
or
movsl
js
ret
mov
decl
outsb
and
pop
outsb
push
fisttpl
sti
inc
mov
dec
call
sub
pop
cli
mov
jecxz
push
fwait
lea
icebp
mov
or
dec
in
add
incl
pop
pop
sub
stc
shll
inc
imul
push
ds
cmp
mov
jmp
push
mov
pop
mov
outsb
and
adc
dec
xor
fbstp
or
and
jnp
out
mov
cs
mov
cs
pop
loop
mov
imul
flds
and
jbe
mov
int
cwtl
scas
add
lret
fucomip
add
icebp
sub
add
xchg
movsb
jg
or
push
push
mov
cmp
jno
cltd
push
inc
fcom
pop
push
in
sbb
jg
pushl
out
ds
cpuid
aaa
inc
push
in
jl
mov
dec
mov
pop
gs
out
sub
imul
jle
leave
mov
or
mov
xchg
popa
gs
jge
dec
je
or
stc
or
hlt
imul
push
jmp
decl
and
inc
aam
xchg
mov
dec
dec
mov
adc
jp
mov
mov
inc
or
jns
xor
popa
dec
hlt
xchg
incb
addr16
push
jns
cltd
add
pop
arpl
mov
into
lea
push
je
sub
pop
cmp
lods
push
add
and
jns
xchg
stos
inc
jae
ret
inc
outsl
inc
cmp
outsl
jp
loope
lea
ret
push
mov
mov
push
fbstp
pop
and
movntq
jg
and
popl
test
sbb
adc
jne
push
shrb
jecxz
ret
push
lds
pop
add
decl
ljmp
nop
stos
xchg
scas
loop
mov
cs
pushl
hlt
jmp
popl
pop
addr16
mov
jmp
ja
adc
call
sar
fildll
lds
cmp
sub
cmp
mov
pop
pusha
sti
pop
push
pop
ficompl
inc
add
fmul
std
call
push
xchg
imul
cmp
popl
push
xchg
lcall
std
int
sbb
repnz
lcall
cmp
adc
icebp
stos
mov
cmc
xor
or
jg
lahf
cli
and
pop
xor
enter
mov
subl
pop
ljmp
jne
xchg
pop
movsl
out
pop
fdivp
sbbb
mov
inc
push
jmp
or
sbb
frstor
adc
jg
or
pop
adc
movsl
cwtl
lods
std
xorl
add
cmp
shlb
fs
mov
mov
data16
cmp
sbb
pop
sub
fucomip
push
sahf
jnp
xor
fdivrs
filds
sahf
stos
jmp
repnz
adc
mov
cmp
out
rolb
mov
decl
adc
push
sti
mov
shlb
push
ljmp
xor
and
in
shrl
movsb
sar
aaa
fidivrl
push
test
adc
or
lods
nop
sbb
cmc
in
decl
fmuls
les
cmpsl
inc
lea
mov
iret
mov
push
test
ja
hlt
xchg
mov
sub
fcmovu
insl
enter
addr16
add
outsl
das
std
das
insl
addr16
mov
pop
or
xchg
and
leave
in
ljmp
mov
into
ljmp
adc
lds
loope
repnz
aaa
push
call
sbb
loop
pop
movsl
sbb
scas
movsl
mov
loope
mov
test
sub
hlt
fildll
lods
xchg
fstl
aad
dec
test
out
xchg
fucomip
outsl
pop
mov
xchg
cltd
scas
pop
fildl
data16
mov
and
std
inc
mov
es
mov
mov
mov
das
sub
mov
or
ljmp
add
test
sar
lods
dec
adc
push
test
add
mov
hlt
push
decl
xchg
cli
mov
mov
xchg
aaa
loopne
in
dec
mov
mov
js
arpl
or
lcall
push
adc
push
lock
mov
jle
loope
add
call
push
aaa
cmpsl
lahf
inc
lock
in
insb
mov
jle
repnz
jle
pop
int
or
popa
mov
mov
outsl
jno
sub
les
int3
int3
dec
pop
xchg
jg
test
lds
or
ja
mov
inc
decl
push
cmpsb
lea
pop
jae
sub
pop
daa
mov
and
mov
jge
jmp
lods
scas
lods
sub
inc
popf
je
sub
mov
sbbl
cli
jns
jbe
and
decl
notb
cmp
adc
adc
jg
or
out
ret
sub
je
clc
mov
push
cld
lcall
sbb
mov
enter
in
adc
gs
mov
push
fstps
call
andb
pop
cmc
dec
dec
adc
mov
ret
lahf
mov
cmpsb
es
mov
int
mov
sbb
inc
lea
ljmp
mov
push
into
sub
adc
out
and
cmc
decl
dec
stc
or
lcall
jmp
jo
or
jnp
xchg
fcomps
mov
call
lcall
shl
jp
sbbb
add
call
mov
call
incl
and
inc
mov
mov
or
gs
insb
rcrb
popl
lock
ljmp
aas
pop
mov
call
icebp
loopne
stos
mov
xor
add
outsb
pop
or
dec
cmp
out
jecxz
or
mov
std
decl
adcl
adc
mov
mov
mov
neg
das
push
or
test
mov
mov
adc
fistps
inc
je
lods
into
out
sarl
jecxz
jecxz
sahf
das
mov
mov
outsl
icebp
dec
jno
dec
pop
add
sub
jmp
mov
mov
mov
and
add
jnp
std
decl
popa
addr16
daa
mov
shll
bound
pop
popf
sub
push
xchg
mov
call
sbb
insl
add
outsb
sbb
addb
stos
sbb
roll
sbb
loop
das
xchg
or
mov
decl
mov
cmpb
lcall
and
or
lock
bsf
cli
or
sbb
mov
jo
sti
aam
jmp
pushf
pop
fucomp
cmp
mov
andb
call
push
ljmp
xlat
jle
in
std
mov
jnp
push
ret
test
daa
mov
jg
xchg
mov
ss
mov
imul
loopnew
lcall
test
mov
cmpsb
mov
mov
mov
and
or
push
xchg
das
fstpt
cli
push
lds
sub
push
xchg
popa
ljmp
cld
mov
insl
cmpsb
shl
sub
pop
xor
out
out
sar
call
popa
mov
pop
or
pop
loope
lods
test
cwtl
mov
int3
loop
mov
das
pop
jp
jg
je
aas
popa
adc
fwait
pop
dec
pop
add
addr16
mov
cwtl
cmp
frstor
loopne
add
jle
pop
std
jmp
inc
hlt
loope
adc
fstpt
jb
push
adc
ljmp
aad
xor
lcall
and
cmpsl
push
mov
imull
stos
scas
push
jmp
int3
js
mov
daa
cltd
xchg
sub
or
cltd
sbb
mov
popa
jle
mov
xchg
cli
mov
xchg
mov
movsb
push
fdivl
pop
lret
imul
arpl
pop
into
bound
call
mov
push
filds
std
test
xorl
in
and
mov
sbb
jecxz
jg
mov
loope
mov
js
jle
dec
into
mov
cmpsl
jl
xchg
pop
sub
xchg
out
mov
mov
dec
or
pop
add
decl
std
incl
cmp
in
imul
cld
enter
loop
cmpb
xchg
jp
or
mov
pop
push
inc
xchg
mov
lods
inc
lret
xchg
lret
mov
push
mov
rcll
in
ret
and
lock
xor
cltd
mov
xlat
jo
cs
dec
ljmp
cltd
icebp
cmp
scas
fbld
cmc
xchg
sub
pusha
and
ss
repz
clc
mov
dec
and
sbb
xchg
arpl
pop
loop
xor
pop
ljmp
and
or
inc
xor
fucomi
outsl
xchg
aad
or
mov
and
mov
lods
pusha
xor
sbbb
stos
inc
xchg
cmpsl
pop
or
cmc
shrb
pop
int
movsl
pop
cli
or
inc
adc
xor
into
add
jp
push
sub
incl
bound
mov
lahf
push
daa
mov
je
mov
inc
cmp
movsb
es
das
les
rorb
cmp
mov
pushl
push
into
xchg
pop
stos
mov
rclb
fidivs
les
fistpll
addr16
enter
int
push
mov
sti
nop
ds
imul
aaa
repnz
arpl
out
pusha
add
cmpsb
idiv
and
jae
sub
loopne
push
lock
jmp
sahf
test
jmp
fs
arpl
js
test
stos
and
enter
std
adc
cmpsb
cmp
mov
xchg
bound
pop
and
xor
orb
sub
sbb
dec
mov
repz
jle
sub
inc
push
call
pop
imul
wrmsr
or
adc
mov
add
bound
cmp
aas
cmp
in
dec
outsl
outsl
cmp
ljmp
mov
mov
xor
shlb
lahf
mov
das
mov
call
jge
inc
daa
repz
jb
movsl
call
fs
mov
xor
and
mov
cmc
push
xor
sahf
sub
add
adc
jmp
jg
xor
sbb
or
nop
enter
shrb
mov
cmc
call
sub
pop
push
imul
adc
test
repnz
push
repz
mov
loopne
adc
bound
push
mov
out
xchg
xor
sbb
and
xchg
push
hlt
mov
call
xor
les
icebp
mov
mov
sbb
push
pop
call
jmp
pop
adc
sub
push
mov
cmp
out
call
popa
shll
pop
dec
cmc
mov
pop
icebp
dec
dec
icebp
dec
mov
xchg
scas
outsb
cltd
push
sub
push
hlt
in
movsb
xor
cmp
mov
negl
rcrl
std
dec
push
in
scas
inc
std
lea
lcall
sbb
fstl
add
popa
adcl
call
and
cli
cltd
ud2
mov
lods
inc
outsb
stc
xor
cli
sarl
add
mov
insl
xchg
das
lock
mov
out
stos
movsl
lahf
sub
scas
jle
fisubrl
aaa
cli
jg
std
jmp
movsb
fstl
mov
call
xchg
imul
icebp
test
sub
pop
rolb
jle
mov
or
mov
inc
aas
push
icebp
call
mov
pop
inc
lahf
dec
in
dec
jbe
ljmp
add
mov
pop
shlb
cmp
hlt
mov
jge
sarb
jecxz
fadd
cld
push
push
stos
lret
push
add
ret
sarl
in
inc
pop
incl
pushl
es
jecxz
ljmp
xchg
jle
sbb
dec
jg
jecxz
dec
xchg
fcmove
adc
aas
fisubs
jg
pop
stos
pop
movsl
push
repnz
in
lcall
mov
mov
mov
int
dec
xchg
adc
rcr
rclb
mov
decl
daa
push
pop
and
mov
add
fdivr
mov
into
push
push
push
stc
sarb
mov
lods
outsl
jbe
pop
fcomp
push
pop
aam
mov
js
into
dec
aaa
mov
mov
inc
icebp
inc
mov
shl
dec
ds
mov
xchg
mov
cld
add
subl
jne
sbb
decl
mov
movsb
scas
mov
push
leave
out
ljmp
call
or
ds
fsubr
shlb
mov
jmp
dec
icebp
call
pop
xchg
adc
adc
scas
pop
das
insb
testb
or
lcall
movsb
out
jle
add
xor
ljmp
aaa
ret
enter
fwait
add
cmp
jae
sar
call
popa
xor
jnp
cmp
fs
push
cmp
push
cmc
fdiv
lods
add
jg
shlb
add
in
popf
pop
or
imul
imul
pop
cmp
mov
adc
iret
xlat
or
push
dec
nop
in
and
mov
mov
mov
pop
mov
int
push
ja
in
pop
and
or
outsl
jo
sub
sbb
in
jnp
ja
leave
imul
les
dec
add
cmp
leave
icebp
mov
jge
dec
outsl
pop
daa
loope
into
adcl
aas
xor
fsubrl
scas
mov
xchg
jge
push
sbbb
repz
cmp
flds
add
cmp
dec
jns
pop
sarl
inc
mov
dec
icebp
dec
and
jge
push
cmc
pop
cwtl
mov
adc
xor
lods
pushl
popa
sar
outsb
inc
mov
pop
test
xchg
push
push
xchg
outsb
sub
dec
scas
mov
std
mov
jmp
out
xlat
ficompl
mov
loop
ljmp
in
cltd
mov
lock
popf
xlat
ja
cmp
loope
popf
or
fistpll
mov
out
push
fsubl
pop
xchg
jmp
lods
pop
in
dec
add
mov
mov
leave
ja
lahf
xor
dec
pop
jecxz
mov
in
shlb
dec
lods
cs
jp
arpl
xor
mov
xor
mov
and
pop
clc
in
cltd
and
jne
and
mov
lahf
outsl
std
ficomps
pop
movsb
xchg
clc
xor
cmp
push
lret
out
into
add
sbb
imul
jmp
in
push
in
sub
mov
pop
lahf
adc
das
cld
xchg
push
fmulp
pop
ror
mov
mov
jbe
ret
add
mov
fists
adc
add
mov
xchg
outsl
icebp
and
or
ljmp
sub
or
inc
xchg
lea
inc
jns
arpl
or
mov
and
aam
sub
in
js
add
lds
xlat
ds
insb
lahf
inc
or
adc
outsl
std
jp
mov
cli
dec
sub
scas
mov
jbe
insb
or
cmp
add
cmp
pop
cli
jmp
fcompl
cmp
jns
inc
dec
push
aaa
addb
and
lock
hlt
idivb
sub
lret
mov
mov
or
ret
dec
dec
cmp
aas
pushl
aas
adc
adc
or
and
mov
push
loopne
jno
mov
ds
stos
into
lods
stos
xchg
and
ljmp
add
mov
ljmp
arpl
mov
das
fadd
je
test
xor
sahf
cmp
iret
sub
sbb
jg
dec
aaa
into
sub
lret
mov
fadds
xchg
mov
cmp
push
sbb
xchg
aas
xchg
shrb
or
jl
aad
in
repnz
push
push
out
pushf
repz
loop
lret
js
cs
clc
sub
aad
lret
pop
or
sub
lcall
sub
test
and
push
shrl
es
push
pop
mov
sbb
mov
jns
ffreep
scas
pop
add
sbb
inc
mov
adc
mov
cmp
mov
mov
pop
sub
xchg
mov
mov
loope
incl
mov
outsb
nop
sub
fmull
insb
mov
xor
ds
xchg
inc
std
mull
xor
jg
rcrb
jmp
jl
stos
dec
sbb
mov
xlat
aam
decl
scas
mov
pop
int3
lods
pop
arpl
push
xchg
mov
movsb
sbb
jnp
sbbl
lods
movq
aad
push
pop
lods
lahf
shlb
mov
notb
adcl
mov
pop
sub
leave
sub
xchg
lahf
xchg
daa
push
aas
fimull
in
mov
xchg
sbb
lahf
sub
in
scas
pop
lds
lods
shlb
popa
pop
gs
stc
movsl
lcall
or
call
lret
push
pop
leave
test
push
enter
call
xchg
ljmp
jecxz
cmp
scas
repnz
in
sbb
cmp
cwtl
jo
pop
popf
jbe
in
les
push
aaa
fistps
mov
cwtl
incl
incl
loop
insl
add
lahf
xchg
cli
inc
clc
push
fs
cmp
repnz
xlat
xor
and
ljmp
xor
incl
ficompl
and
dec
xlat
ljmp
cltd
jg
nop
lret
pop
hlt
mov
fistl
mov
mov
lahf
das
cmp
out
mov
mov
test
lcall
dec
cld
sbb
xchg
fisubl
sbb
outsb
mov
mov
pop
xor
jp
in
and
pushl
and
pop
roll
cli
xor
push
out
loope
sbb
test
out
mov
xchg
add
cmc
xchg
aas
aas
js
outsl
and
adc
test
ja
cli
shll
js
mov
dec
cmc
sub
jg
dec
jl
or
mov
shrl
orb
lock
mov
push
imul
call
call
mov
add
cmpsb
xor
dec
rcrb
push
bnd
jmp
jbe
cmp
mov
stos
adcb
dec
mov
jle
push
mov
mov
ljmp
sub
lds
mov
ret
push
add
pop
sbb
call
movsb
jmp
lods
pop
stc
pop
sbb
jnp
adcb
decl
cli
and
addr16
test
cs
movsb
xlat
pop
incl
pop
ljmp
push
movsl
insl
in
mov
pop
cli
mov
sub
xor
js
decb
mov
mov
mov
add
cli
jg
arpl
dec
pushf
jno
jns
orl
aas
adc
subl
push
out
jae
inc
sub
call
pushl
cltd
mov
cmp
enter
fcomip
dec
mov
xor
dec
mov
daa
cmp
mov
dec
jmp
call
adc
ljmp
icebp
add
dec
jge
imul
int3
adcb
loopne
mov
mov
lcall
pop
jo
adc
imul
je
cs
lods
and
scas
fdivrp
dec
std
decl
and
stc
push
fwait
loope
inc
cmp
and
pop
cmp
and
je
inc
pop
insb
push
xchg
iret
stos
pop
lods
push
pop
stos
std
leave
fucomp
sub
mov
ljmp
lcall
push
cmp
sbb
xchg
ss
mov
pop
dec
decl
xchg
mov
filds
xchg
lds
aam
decb
and
in
or
loopne
aad
in
aam
cmp
mov
in
xor
mov
adc
es
in
shlb
leave
and
or
test
int
frstpm(287
xor
addl
shlb
fwait
lods
popf
xor
mov
mov
xchg
jecxz
decb
cwtl
daa
rolb
mov
xchg
cld
call
sbb
fnstcw
or
pop
add
idiv
xchg
sbb
dec
mov
xchg
jle
incl
fwait
xchg
mov
and
scas
nop
or
jge
xlat
lods
dec
push
and
lret
addl
jg
fucom
xor
inc
jmp
test
cmc
ret
out
and
push
adc
pushl
decb
push
xor
stos
xchg
test
push
add
lcall
call
pop
into
jbe
mov
jb
or
jno
popf
mov
add
mov
cmp
decl
jmp
leave
in
loopne
cmpsl
mov
insb
jb
in
mov
add
fisttpll
cmpsb
mov
jg
mov
inc
jmp
daa
adc
ljmp
icebp
mov
imul
adc
pop
fisubs
dec
stos
cmpsb
push
fldcw
dec
es
xchg
testb
ret
jmp
call
inc
das
call
scas
inc
add
cwtl
mov
mov
fcomp
sub
mov
loop
jge
out
mov
in
jl
std
and
notl
inc
pop
jno
xor
ja
pushf
pusha
lea
std
pushl
dec
mov
loopne
stc
je
sbb
jl
decl
xchg
and
jmp
js
and
fcos
lret
dec
gs
in
mov
lds
lret
xorb
fsubrs
mov
test
adc
fnstenv
pop
fsubrl
xlat
insl
push
stos
or
or
sti
dec
xchg
mov
pop
lea
push
test
and
dec
rolb
mov
xchg
bound
push
pop
xchg
icebp
imulb
xlat
xchg
mov
sub
xor
das
cmc
lcall
sti
sarl
lcall
stos
loopne
int
std
cmp
xchg
in
push
cmc
inc
jb
sub
ja
push
mov
mov
out
sub
nop
call
cld
xchg
mov
inc
stos
sub
lcall
mov
lock
or
mov
dec
cld
lcall
mov
sbb
mov
or
dec
decl
pop
jecxz
mov
sbb
xchg
rorl
and
fwait
push
and
lds
or
sbb
movsl
adc
rcll
push
shlb
xor
out
mov
ljmp
mov
fcompl
adc
lock
jg
jle
imul
push
xchg
mov
jb
inc
cli
lods
mov
hlt
sbb
sub
pop
fs
stos
jg
aaa
test
cmc
or
sub
mov
jp
and
jo
sbbb
pop
push
jmp
in
daa
sarb
imul
cmpsb
lcall
push
mov
out
pop
int3
aaa
xor
test
jecxz
push
stos
repz
fcmovne
mov
int3
mov
incl
hlt
das
icebp
incl
push
pushf
lods
in
mov
jg
cmp
fisttpll
jae
fmull
jmp
mov
inc
cmp
ret
test
jge
mov
data16
sbb
mov
mov
cmc
pop
cli
fbld
fsubl
cmp
lods
pop
mov
mov
outsb
dec
call
call
stos
jnp
orl
mov
ljmp
push
push
push
mov
movsb
xor
jne
rorl
push
andl
pushl
dec
stc
mov
push
lock
inc
and
idivl
lcall
cmpsl
sub
xlat
insb
call
jecxz
in
orb
mov
add
add
push
and
push
in
div
dec
stos
jl
es
mov
xchg
mov
and
push
jmp
cmp
popl
sarl
in
jmp
sahf
or
jecxz
lods
jnp
add
mov
jg
sub
or
insl
cmc
mov
orb
std
dec
movsb
mov
add
call
das
int3
pop
xor
and
popa
insl
cltd
pop
daa
push
gs
mov
in
or
lahf
dec
rorl
mov
sahf
xchg
out
push
mov
pushl
lahf
aas
mov
pushf
inc
addr16
clc
mov
or
push
dec
xchg
in
or
mov
jl
fdivr
jg
mov
xchg
inc
mov
mov
imul
movsl
aad
ret
outsb
cmc
subb
rcl
sub
fbstp
pop
cli
jg
arpl
cli
lea
cmp
movsl
jmp
insl
dec
mov
push
lcall
sub
addr16
test
mull
push
xor
incl
into
js
push
cmpsb
repnz
inc
subb
lods
xchg
out
outsl
das
std
dec
cmp
jbe
cmp
jb
lea
push
mov
cmc
decl
dec
in
ds
pop
jmp
xchg
test
sub
ljmp
icebp
pushl
movups
xor
inc
das
sbb
ja
sbb
je
sbb
lds
inc
ret
push
loope
mov
jne
imul
shrl
andb
in
je
jg
inc
movsl
mov
in
mov
pop
scas
ret
and
lret
in
jle
jge
call
testl
pusha
cld
or
sahf
icebp
clc
mov
push
sbb
adc
mov
loop
scas
adc
sti
pop
and
push
out
xchg
aad
ss
and
add
call
cmc
aam
scas
subl
xor
or
jg
icebp
push
pop
jb
add
push
in
outsb
imul
hlt
sbb
dec
repnz
pushl
scas
pop
jo
mov
push
cmp
sbb
ja
hlt
jnp
jmp
daa
aam
sbb
pop
subl
adc
jle
popf
xor
mov
sub
adc
daa
test
inc
adc
lds
xchg
jp
xor
sti
out
test
sbb
add
mov
inc
js
mov
add
std
addl
test
jnp
mov
add
out
jae
push
sub
pop
clc
add
jp
jmp
and
adc
dec
push
incl
repz
movsb
cmp
cld
ja
enter
xchg
lcall
jecxz
mov
scas
les
pop
xor
ds
jle
decl
out
cmc
pop
or
push
push
mov
cmpsb
xchg
imul
call
ljmp
xchg
bound
pop
push
dec
adc
clc
test
mov
inc
stos
adc
xchg
push
popf
or
outsb
mov
jmp
push
daa
dec
push
dec
xor
sti
xchg
das
cmc
sub
pop
stos
push
sub
mov
adc
ljmp
cmp
movsb
sub
sahf
xor
mov
aam
orb
decl
imul
subb
aam
and
mov
call
and
repz
data16
mov
sbb
xchg
pop
xchg
jp
and
mov
cmp
mov
rcrb
xchg
adc
mov
cltd
inc
into
ljmp
sbb
jbe
jp
sub
enter
cli
mov
mov
dec
incl
stc
gs
and
lahf
push
arpl
outsl
sbb
xchg
fstl
and
mov
cltd
movsl
adc
add
je
xor
and
mov
fwait
xor
in
push
sti
xchg
call
repnz
mov
mov
movsl
jp
decl
jo
xchg
insl
xchg
mov
dec
mov
pop
jb
xchg
mov
push
in
sbb
call
xchg
xchg
js
xchg
or
mov
lods
pop
dec
stos
jl
decl
pusha
daa
lods
roll
mov
test
cld
or
xor
divb
clc
cmpb
ret
xor
shr
std
mov
mov
cmpsb
inc
cltd
inc
lret
cmp
mov
jmp
popf
cmp
in
cwtl
decb
jg
testb
enter
cld
xchg
pop
aam
mov
cli
xchg
mov
iret
cltd
dec
das
imul
mov
rcrb
fbstp
dec
sti
cmpsl
test
cmovg
ret
dec
mov
xchg
jecxz
mov
ret
push
ljmp
cmpb
fs
movups
repnz
jne
push
pop
mov
das
std
ljmp
mov
addr16
clc
call
mov
add
jge
pop
fisubs
cld
test
loopne
das
icebp
mov
xlat
popf
add
imul
loopne
pushf
push
call
jle
or
pop
inc
out
jge
sahf
lcall
and
mov
aad
cmpsl
outsb
cmpb
cmpsb
or
inc
js
aam
out
dec
push
mov
or
xchg
jne
push
fwait
lods
push
into
fs
aaa
cli
sahf
aas
call
mov
push
mov
jbe
xchg
jg
adc
lret
aaa
loop
icebp
cmpsl
fistl
mov
jg
outsl
call
jae
jne
dec
xlat
xor
mov
mov
adc
in
jae
and
imul
test
and
push
inc
out
in
fldcw
jp
imulb
xchg
pop
adc
mov
mov
daa
inc
mov
jne
mov
dec
xorb
incl
push
add
sahf
imul
lcall
outsl
inc
hlt
pushl
mov
fwait
dec
test
rolb
dec
lcall
imul
mov
adc
je
pop
push
ficomps
cmp
and
cltd
ljmp
add
imul
mov
add
or
xor
mov
lret
movsb
shll
pop
and
cmp
test
cmpl
push
xchg
sub
iret
enter
mov
xor
jmp
test
mov
mov
fsubs
cmp
lcall
mov
mov
xor
test
int
ljmp
lret
packssdw
jne
pop
mulb
mov
lock
push
mov
dec
inc
lock
push
mov
out
stos
dec
sti
nop
repnz
mov
and
mov
mov
fwait
mov
test
push
sahf
shlb
jg
mov
pop
xchg
in
xor
insb
xor
adc
pop
sarb
mov
xchg
lds
mov
ss
outsb
movsl
movsb
scas
not
incl
adc
inc
icebp
push
aad
mov
mov
out
or
and
add
mov
mov
xchg
pop
add
les
jge
das
aad
jg
sbb
mov
lret
add
rorl
or
sbb
fnstsw
add
in
ds
sub
mov
cmpsb
lea
push
jmp
mov
vsubss
data16
xor
jg
ljmp
or
int
inc
push
mov
test
loope
sub
incl
leave
jne
cmp
fisubrl
lcall
aad
cmp
lahf
push
in
ja
out
pop
in
mov
push
movsl
mov
outsb
movsb
or
pop
icebp
outsl
mov
outsb
cli
cmpsl
or
js
or
test
pop
pop
or
decl
sti
xor
xor
dec
mov
bound
xchg
jo
repz
add
and
jg
jge
cmp
jb
jecxz
xchg
enter
push
invd
loop
mov
movsb
popf
imul
pop
or
xchg
jp
call
adc
out
jecxz
dec
adc
pop
mov
jg
sub
jb
push
push
pushf
adc
jmp
mov
push
jp
cmp
jl
add
mov
adc
decl
mov
xchg
insl
pop
gs
leave
xchg
lret
jmp
cmp
mov
movsl
fmuls
repz
xchg
fiaddl
jae
aam
lcall
loope
sbb
mov
ja
inc
mov
inc
test
rolb
incl
rcrl
cmp
dec
fstpl
mov
das
js
repnz
test
xchg
idiv
stos
scas
xchg
jmp
sub
xchg
sahf
cltd
bnd
fs
and
stos
cli
add
cmp
ret
or
loop
push
sbb
imul
enter
xchg
jge
test
lods
imul
jge
adc
xchg
inc
cmp
in
cld
xlat
xor
mov
incl
cmp
sti
addr16
lds
jp
jb
jo
mov
clc
call
test
push
mov
in
push
and
cmp
jle
shrl
or
addr16
jbe
das
and
shll
and
mulb
lahf
jbe
xor
dec
pop
sahf
and
cs
lcall
add
aam
sbb
add
call
dec
dec
nop
call
lcall
xchg
sub
jne
int3
pop
scas
popa
repz
pop
ds
call
dec
loope
icebp
cs
sbb
sub
mov
inc
mov
mov
lcall
mov
int
xchg
jo
ja
cmp
popf
xchg
inc
adc
rcrl
imul
dec
insb
icebp
roll
dec
aam
mov
lea
add
jmp
fisttpl
inc
jle
xor
shlb
push
std
lahf
pop
sub
jge
inc
dec
call
fsubrs
in
pop
out
mov
and
pop
mov
and
pop
mov
add
not
shl
push
clc
sbb
cli
test
lret
ss
xchg
out
jmp
xchg
std
fnstcw
cli
sbb
jl
xchg
cld
int3
push
or
fucomi
ret
shl
dec
std
movsl
fisubs
lds
adc
cli
ljmp
cmc
inc
outsb
jo
sbb
cli
cmp
pushf
add
mov
and
jmp
cmpsl
xor
arpl
or
pushl
push
stos
test
add
enter
adc
mov
ljmp
loop
push
and
mov
jo
jl
imul
lret
mov
sbb
adc
into
cltd
add
test
call
in
jg
loope
sbb
idiv
fstpt
and
es
jg
dec
sub
fistl
pop
stc
movsl
cmp
test
pop
enter
arpl
or
inc
aam
or
inc
sub
mov
lcall
or
add
mov
cli
mov
sbbb
pop
pushl
sub
jg
pusha
clc
insb
je
test
pop
hlt
clc
movsl
sub
push
dec
adc
lods
lcall
mov
fwait
cli
adc
insl
cmp
xor
add
in
movsl
mov
movsl
ret
dec
mov
push
repnz
out
ss
mov
aad
ds
lock
aad
push
lcall
add
mov
mov
xor
push
or
sbb
add
jae
cld
mov
pusha
or
mov
xchg
icebp
jp
je
mov
add
hlt
mov
movsb
imulb
sarb
xor
pop
loope
fmuls
mov
lcall
inc
dec
push
add
stos
lcall
push
mov
jg
jb
repz
adc
xchg
push
add
mov
dec
mov
jbe
dec
cs
pushf
int
cmp
cltd
inc
fisubrs
jp
dec
xchg
pop
dec
push
sbb
ljmp
mov
outsl
fucomip
lcall
mov
cmp
orb
imul
ljmp
mov
loopne
push
cmc
jp
sahf
daa
repnz
xor
push
call
cltd
scas
cmp
add
movsb
cmpsb
rorb
test
jbe
cmp
ret
outsl
in
mov
insb
inc
sarb
cmp
sar
jle
aad
add
sarb
rcrl
lahf
fcoms
pop
push
cltd
test
mov
mov
cmp
stc
out
adc
push
test
fs
cmp
sbb
loope
imul
call
loopne
xor
sub
loop
xchg
int3
stos
dec
and
cmc
outsl
icebp
mov
inc
mov
bound
mov
mulb
shr
push
mov
test
xchg
mov
jbe
add
loop
js
mov
mov
sub
loopne
adc
mov
cmp
ljmp
cmc
jo
push
add
xchg
inc
pop
sbb
add
and
int3
call
mov
in
jmp
and
fidivrl
sub
fldl
mov
adc
mov
divb
ret
int
sbb
fiaddl
stos
sub
jecxz
mull
lret
xchg
loope
mov
cli
mov
inc
inc
in
jns
mov
arpl
xchg
nop
decl
in
stos
push
and
test
mov
int3
jp
rcl
lods
call
push
insl
lret
mov
xchg
imul
in
fsubp
and
mov
or
ret
and
sti
loop
xor
inc
or
cld
push
call
decl
mov
mov
mov
mov
pusha
xchg
jg
incl
out
pop
aas
stos
ljmp
in
insb
jmp
scas
fistpll
jp
int3
push
repz
mov
das
xchg
lret
xor
notb
xchg
es
or
clc
fildll
sbb
jecxz
in
jo
mov
sar
pushl
mov
test
data16
add
mov
mov
fs
adc
stc
xor
subl
sub
gs
mov
xor
dec
cld
call
xchg
enter
je
mov
lret
mov
iret
xchg
test
mov
ret
in
mov
sub
mov
fmull
sub
jg
add
add
mov
pop
loop
add
movb
dec
ljmp
and
xor
and
fidivrl
fildll
jp
lcall
je
cmp
clc
push
cmp
pusha
xor
cmp
fsubrl
add
aam
xchg
mov
adc
scas
sbb
pop
push
js
lcall
push
dec
cmc
fwait
outsl
mov
sbbb
loopne
cmc
adc
adc
inc
xchg
push
hlt
fisubrl
lds
out
in
sub
scas
xchg
cmp
arpl
jg
decl
mov
divl
pop
popa
fwait
repz
movsl
jg
enter
adc
mov
mov
xor
out
ud0
fistl
push
fisubrs
mov
jb
ljmp
loope
daa
popa
pushf
cs
loopne
cmp
or
repz
pop
xlat
push
xchg
sbb
jge
xchg
pushl
int
mov
adc
mov
or
push
stos
sahf
mov
push
lcall
cmp
ret
lods
inc
xchg
jl
lret
push
xchg
add
push
mov
mov
ja
dec
mov
stos
rcr
or
into
inc
sbb
jae
sub
call
aaa
xchg
pushf
push
add
push
mov
cmp
loopne
inc
idivb
decl
fbld
push
push
inc
in
pop
pop
xor
fs
out
call
or
pop
xorl
ss
xchg
sar
aaa
cli
dec
lret
xlat
jp
dec
push
rol
sarb
fs
sub
fbld
in
sbb
sbb
lcall
pushl
fimuls
mov
ds
and
push
ja
fucomip
sub
int3
mov
js
dec
test
mov
loop
test
jnp
test
adc
data16
xlat
das
mov
icebp
nop
sbb
leave
jns
inc
inc
xchg
pop
out
ljmp
mov
pop
aas
and
pop
sub
es
inc
fwait
or
or
js
test
aam
test
neg
xchg
je
orl
mov
das
clc
inc
popa
mov
mov
cmp
inc
jb
mov
ja
lods
je
cmp
test
or
sub
ljmp
lods
or
inc
daa
aam
xor
push
pop
lcall
push
push
cmp
dec
outsb
mov
cmc
popf
xor
mov
call
dec
cwtl
repnz
subl
fiaddl
dec
and
push
rorb
dec
mov
test
das
add
or
lods
inc
xchg
adc
call
addl
cwtl
dec
dec
cld
lcall
bound
daa
rclb
stos
pop
push
gs
dec
je
fisubrs
outsb
dec
test
std
aas
cld
push
dec
adc
shl
imulb
cmpsl
movups
mov
cmc
cmp
divb
xchg
push
decl
push
and
sbb
push
lahf
fcoml
je
add
incl
jp
sub
ljmp
fs
call
clc
jb
inc
sbbl
add
ds
call
daa
test
fists
lock
out
or
push
outsb
sub
inc
mov
sbb
lret
ljmp
jecxz
shll
call
xchg
jge
jo
jae
mov
mov
pop
pop
jno
popa
shr
lahf
pop
arpl
dec
dec
mov
xor
pop
in
add
pop
push
jne
popa
pop
fistpll
mov
xor
push
adc
in
mov
cmpxchg
xor
adc
push
and
jbe
repnz
repnz
fisttps
inc
into
rcr
xchg
jae
mov
mulb
mov
call
insl
push
ret
loope
and
test
xor
outsl
cld
and
push
ds
adc
cld
push
mov
ret
cmp
jnp
jno
pop
mov
scas
mov
cli
lcall
ja
outsb
das
ljmp
gs
xor
jo
decl
sub
mov
into
xor
or
inc
arpl
jle
and
lcall
jnp
fisubrl
ss
or
sbb
inc
add
aaa
rcl
notb
and
movsb
clc
or
outsb
movsl
cltd
jmp
iret
mov
push
outsl
jno
stc
jg
mov
fidivrs
cltd
push
or
fldcw
push
mov
arpl
add
sarl
inc
inc
cli
xor
lahf
jmp
cmp
mov
inc
fs
inc
call
sub
imul
fwait
or
mov
in
or
push
stc
sbbl
lcall
jge
add
loopne
cmp
ljmp
add
je
push
dec
and
add
mov
lcall
jae
or
and
xchg
push
cmpb
ja
ja
inc
fsubrs
sub
pop
sbb
ja
add
js
ret
push
hlt
incl
add
mov
push
lea
lods
aas
push
push
jmp
adc
or
lcall
xor
fisttpl
arpl
jle
xchg
neg
iret
xchg
cltd
mov
mov
ret
jg
mov
dec
mov
fcom
jg
and
mov
outsl
icebp
mov
cld
test
inc
scas
sub
pop
lods
mov
jg
add
push
cmp
jne
ljmp
xlat
imull
and
cmc
xchg
test
inc
xchg
inc
jmp
mov
or
jg
xchg
insb
jae
sub
out
fwait
outsb
sbb
stc
loopne
add
jg
out
adc
cltd
stos
idivl
decl
xor
aad
mov
jae
fdivs
jg
cmp
adc
inc
cld
scas
xor
ret
push
lds
cmp
bnd
stos
ret
pop
adc
fidivrs
mov
or
jns
jl
mov
cltd
cmpsl
adc
sub
push
mov
ret
ljmp
rcrb
adcl
ret
jae
sbb
call
lahf
adcl
push
push
lock
dec
movsb
std
mov
pop
aas
imul
add
or
lea
out
mov
or
imul
fisttps
mov
les
xor
fbld
cmc
mov
dec
ljmp
test
out
mov
stos
pop
aaa
inc
lret
inc
icebp
call
neg
fstp
jno
mov
mov
sbb
ficoms
ljmp
or
dec
jns
mov
sub
push
loop
and
stos
aad
adcb
sar
push
mov
push
rcrl
gs
orb
loopne
pop
or
sub
push
add
stos
mov
loop
leave
stos
and
call
js
popa
loope
insl
popa
mov
mov
pop
mov
cmp
popf
mov
push
jle
jg
decl
pushf
lock
testb
xlat
fs
popf
sahf
test
ror
mov
call
ljmp
inc
mov
sub
push
lea
outsb
add
xchg
xchg
int
call
add
and
push
cmpl
pushl
sub
ret
or
outsb
cwtl
mov
inc
pop
nop
jno
das
out
ljmp
mov
repz
sub
adc
call
mov
sub
jmp
xchg
aas
aad
inc
repz
xchg
inc
add
push
in
cmpsl
nop
movsl
jmpw
xor
jbe
lret
wrmsr
cmp
iret
dec
and
lods
inc
jg
pop
aas
jno
pop
pop
jae
jbe
xchg
adc
inc
mov
jl
mov
loope
hlt
jmp
mov
bound
cmpsb
or
cltd
push
in
fistl
jg
ja
in
popf
jmp
inc
scas
fimuls
mov
cs
mov
dec
hlt
incl
adc
dec
xor
dec
xchg
mov
movsl
sti
pop
aaa
jp
clc
outsl
cld
mov
mov
add
loope
mov
mov
jecxz
and
insl
push
or
lea
fs
xor
cmp
lcall
bound
xchg
mov
jno
sub
stos
insb
sbb
das
mov
jmp
cli
sbbl
adc
call
hlt
lahf
daa
xor
cld
hlt
out
loopne
or
mov
scas
test
push
lcall
movsb
inc
or
ljmp
cli
jmp
jecxz
xchg
cmp
push
inc
es
push
out
fiadds
pop
pop
pop
dec
dec
sub
jecxz
dec
pop
les
ficoms
mov
call
cli
mov
xor
mov
das
fistpll
and
pop
mov
cmpsb
imul
inc
push
lret
push
movsb
ljmp
std
das
sub
xchg
mov
shll
test
lock
add
aaa
cli
mov
dec
mov
repnz
cmp
sbb
push
lret
pop
call
sbb
cld
adc
and
xor
iret
adc
arpl
cmp
loope
ljmp
lock
test
mov
jae
cld
cmp
dec
dec
sahf
pusha
ret
pushl
inc
add
sub
scas
mov
jne
es
and
mov
push
xchg
jle
sahf
dec
fidivs
pop
push
jns
push
jae
push
incl
and
aad
cli
daa
add
mov
inc
jmp
imul
add
mov
out
pop
das
pop
cmp
jle
loop
gs
cmp
jecxz
push
out
push
incl
imul
imul
mov
mov
jl
sahf
sbb
loopne
dec
incl
sub
test
push
mov
int3
in
push
inc
call
pop
pushf
je
aam
or
ret
inc
push
xchg
pop
or
mov
mov
add
call
subl
rcrb
add
cltd
idivl
incb
add
push
cld
jmp
cld
dec
dec
pop
xor
dec
mov
adc
pop
dec
cmpsb
jecxz
fcmove
lods
fiaddl
mull
xchg
add
pushf
inc
sbb
cwtl
rcrb
jecxz
lock
clc
xchg
pop
mov
sub
dec
inc
paddq
pop
mov
mov
sbb
andl
mov
je
jg
jmp
rorb
lods
add
movsb
cmpsl
xor
movsl
mov
int3
mov
or
pop
loop
je
fwait
sbb
fistpll
lahf
jns
cmp
dec
cmp
dec
xlat
stos
xlat
or
xor
cltd
add
jg
incl
cmpsl
dec
mov
fdivr
push
push
xchg
and
adc
aaa
pop
and
popw
or
mov
cmc
incl
or
ljmp
xor
lods
mov
movsl
cmpb
aas
push
push
dec
mov
mov
pop
in
mov
or
cmp
pop
xlat
mov
inc
sbbb
push
scas
outsl
sbb
xchg
out
iret
jl
pop
icebp
push
subb
cwtl
dec
incl
ja
pop
pop
mov
xchg
inc
push
mov
ret
jns
jb
sub
fildll
jno
aaa
insb
ror
push
xor
movsl
cmp
popa
xchg
rorb
sbb
in
sub
pop
dec
icebp
add
dec
sub
mov
jnp
xchg
cltd
inc
test
sub
out
inc
scas
into
adc
jmp
or
or
jno
fisubl
cwtl
test
jns
aad
mov
incl
leave
cmpsl
push
add
jmp
lods
out
mov
ss
push
popf
addr16
pushf
mov
and
call
sbb
scas
cmpsl
mov
jmp
hlt
or
adc
pop
jne
ror
dec
loop
xor
inc
ss
jmp
testb
xchg
inc
hlt
mov
cmp
dec
lods
sahf
add
mov
das
pop
es
or
in
in
out
cltd
mov
mov
push
repnz
sub
lock
fwait
xor
jmp
jmp
ficoml
jle,pt
fwait
out
add
xorl
jmp
das
scas
push
mov
push
mov
or
jle
test
jmp
pop
decb
sub
into
adc
adc
das
mov
sbb
or
negl
adc
mov
and
jmp
mov
xor
and
test
sub
call
cmp
mov
sbb
ja
cvttps2pi
fcos
pop
cli
incl
imul
mov
je
data16
pop
jns
movsl
sub
das
adc
mov
dec
jno
scas
mov
je
outsl
test
lcall
lcall
jo
jnp
lcall
xor
sub
inc
insb
xchg
enter
mov
and
ljmp
fmuls
mov
mov
pop
jo
loope
jp
cli
pop
clc
pushl
std
je
mov
int
push
inc
int3
jle
mov
nop
pop
loop
mov
int
test
inc
push
js
pop
push
shll
das
cmc
adc
xlat
push
shrl
shr
sub
sub
loop
clc
in
xchg
or
add
mov
jno
jle
outsl
outsb
imul
push
jbe
add
adc
adc
and
xlat
scas
sub
cmp
test
mov
sbb
sbb
test
xchg
mov
add
add
add
xor
and
add
push
aam
or
insl
lods
imul
or
xor
shlb
outsb
or
mov
and
subl
out
jb
jb
dec
xor
jb
mov
or
mov
and
imul
mov
push
dec
insb
inc
jbe
add
dec
movsb
imul
push
mov
pop
mov
imul
push
push
add
cwtl
dec
scas
xchg
push
mov
imul
orb
mov
and
inc
inc
or
xchg
sbb
shrb
and
add
add
pop
imul
imul
stos
push
inc
insl
adc
or
fidivrl
and
push
outsl
jne
xor
std
mov
cmpsb
add
xor
xor
xor
add
and
xorb
dec
push
push
mov
mov
push
dec
add
addl
inc
aad
imul
jb
add
xlat
sbb
add
pop
mov
divl
out
add
insb
popa
popa
std
rclb
or
lcall
pop
inc
imul
and
insl
jb
ret
pop
push
pop
dec
add
mov
cmp
imul
xchg
add
sub
lahf
push
imul
pop
sbb
mov
sbb
subb
outsl
add
or
pop
bound
nop
pop
rcrb
xchg
pop
mov
cmc
punpckldq
and
pop
dec
inc
insl
int
or
mov
or
mov
inc
das
and
pop
imul
sbb
inc
pop
xor
mov
mov
push
adc
or
xchg
and
sbb
mov
roll
jl
fmull
int
or
into
fwait
or
push
xchg
fsubl
scas
mov
mov
ret
pop
imul
or
loope
push
add
dec
cmp
jbe
fs
pop
jno
jo
xchg
jecxz
add
repz
or
mov
push
inc
inc
push
inc
sub
or
sahf
inc
stos
pop
mov
aad
or
push
push
fs
out
lods
mov
aaa
test
adc
out
test
aam
ret
mov
dec
or
mov
adc
push
imul
insb
insb
outsl
arpl
xchg
fwait
mov
leave
and
int
cld
fildll
push
insl
addr16
inc
jne
jbe
jae
call
add
add
add
lds
push
cltd
outsb
pushf
sbb
fwait
loope
xchg
sarl
or
rcr
jnp
ret
fs
pop
mov
pop
mov
ficoml
notl
out
jb
xor
xor
sar
inc
ss
inc
dec
inc
jo
dec
and
inc
jne
cltd
sbb
cmp
out
push
adc
and
inc
je
cmp
int
mov
jns
js
insl
cmp
jae
lea
mov
dec
jae
dec
jae
and
jo
cltd
pop
mov
pop
jmp
mov
fdiv
add
mov
push
in
outsb
add
push
jb
push
push
mov
xor
xor
je
jmp
mov
cmpsb
rcr
and
inc
dec
dec
push
push
dec
inc
scas
loope
xor
or
xor
and
addr16
cmc
lea
xorl
xor
and
inc
arpl
pop
add
and
shll
sbb
in
dec
insb
outsl
push
xlat
push
sarl
lods
add
fs
ret
aam
dec
ja
cmpsb
inc
inc
popa
add
ret
jae
push
pusha
jo
add
inc
gs
test
push
jns
je
insl
push
imul
jo
inc
jne
jb
outsb
pop
sti
imulb
push
push
adc
fs
inc
imul
adc
imul
jmp
jb
arpl
jae
adc
jo
mov
inc
sub
imul
jge
dec
dec
popa
outsb
fs
xchg
out
xchg
imul
push
jo
je
jb
dec
ss
bound
jae
sub
dec
ss
mov
outsl
ja
fldl
fldt
cmp
popa
jne
je
inc
dec
inc
push
dec
outsl
mov
outsb
or
pop
inc
fs
xlat
pop
ja
mov
jo
jb
loop
xchg
insl
popa
jo
imul
mov
jnp
insl
jge
mov
push
imul
testb
outsl
cli
push
test
or
lock
popl
xchg
or
and
dec
imul
outsl
push
pop
imul
fiadds
sub
xchg
inc
data16
add
out
mov
scas
popf
mov
fildl
mov
xlat
cmpsl
jmp
packsswb
addr16
xchg
adc
push
aas
or
or
jae
ds
inc
imul
arpl
fldt
mov
imul
inc
push
mov
and
adc
and
push
ret
rclb
jb
xor
subl
and
mov
xor
out
pop
in
and
rorb
mov
popa
data16
or
nop
jae
insb
dec
test
loope
insb
pop
inc
insb
addr16
push
insb
push
dec
arpl
int3
cmp
je
bound
xor
xchg
mov
mov
lahf
fs
and
mov
jo
adc
mov
push
dec
push
mov
std
mov
insb
movl
inc
imul
and
push
mov
jae
roll
addr16
and
inc
inc
xchg
pusha
lods
dec
ss
inc
sub
jle
xchg
or
add
xchg
mov
push
sub
imul
fcoms
outsb
dec
mov
cmp
ret
cmc
mov
outsl
jbe
jae
scas
lock
test
data16
pop
push
inc
dec
add
add
add
jb
call
add
add
push
add
sahf
cmpsb
cmp
cmp
and
jge
fistpl
add
add
lock
popa
add
add
jnp
xor
pop
push
add
repnz
das
sub
cmpb
mov
rolb
push
sub
push
xchg
mov
jae
arpl
or
mov
inc
shrb
xor
in
or
add
or
inc
inc
push
pop
mov
je,pn
js
and
and
or
or
and
bound
ret
and
es
inc
add
movsb
jnp
ret
popa
or
lret
daa
or
xor
lods
lahf
inc
cs
in
mov
dec
add
out
dec
fsts
mov
dec
sbb
add
testl
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
xchg
jo
ljmp
lock
adc
jle
stc
jne
lods
shll
lcall
push
add
xor
add
int3
jmp
rcr
ja
ret
jmp
loop
les
inc
adc
mov
push
jmp
xor
jle
xor
mov
ljmp
sub
mov
jge
ficoms
test
xchg
insb
jb
pop
mov
add
mov
cmp
pop
ljmp
pop
rclb
sbb
fldl2t
xor
push
jno
sbbl
out
mov
mov
das
loope
xchg
cli
add
jg
or
cmp
sbb
pop
repz
mov
mov
mov
add
js
xor
mov
fnstsw
jae
push
out
xchg
mov
shlb
stos
mov
iret
mov
dec
fbld
inc
aad
test
pop
push
sahf
xor
sbb
imul
cmp
push
sbb
xchg
dec
mov
or
cs
mov
setle
fildl
lock
js
mov
push
test
pop
test
inc
add
jb
in
popa
xchg
mov
dec
insl
sub
lcall
mov
arpl
jno
adc
pop
xor
test
or
scas
and
and
jnp
mov
push
test
out
mov
mov
pop
push
faddp
ds
test
rcrb
xchg
cmpsb
sub
mov
lods
add
cmp
inc
mov
xor
or
rclb
adc
or
jns
insb
je
and
mov
pop
insb
adc
into
rcll
bound
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
adc
sub
add
pop
loopne
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
bound
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jbe
arpl
jne
imul
add
je
jo
je
push
jno
bound
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jbe
arpl
jne
imul
add
insb
add
add
outsl
add
jb
add
add
jne
arpl
jns
js
jo
jne
add
cmp
or
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
and
xor
add
add
and
xor
cmp
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
ja
jbe
arpl
jne
imul
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jbe
arpl
jne
imul
add
je
jo
je
push
jno
bound
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jbe
arpl
jne
imul
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jbe
arpl
jne
imul
add
insb
add
add
outsl
add
jb
add
add
jne
arpl
jns
js
jo
jne
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
and
xor
add
add
and
xor
cmp
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
adc
rclb
add
adc
fcoml
add
cld
adc
or
add
adc
add
adc
add
adc
add
add
add
add
push
adc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
jb
jo
