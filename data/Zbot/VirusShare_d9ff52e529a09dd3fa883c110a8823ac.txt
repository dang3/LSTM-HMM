dec
and
incl
sub
scas
jno
insb
or
and
sbb
dec
notl
test
les
sahf
lock
idivl
lret
sahf
cld
inc
add
sbb
dec
sbb
notl
cmc
addr16
loopne
popa
cmp
push
les
push
lds
jle
mov
and
call
add
mov
test
xor
nop
or
cmp
outsb
out
dec
repnz
sbb
dec
addr16
movsb
test
inc
pop
add
js
mov
push
clc
cmp
jns
std
test
pop
dec
movsb
mov
hlt
aam
cmp
ja
adc
or
cli
cmpsb
repnz
adc
insb
mov
sub
pop
cwtl
pop
mov
sub
add
add
push
pop
out
add
ja
push
imul
pushf
and
std
mov
mull
ljmp
fs
scas
and
arpl
ficompl
push
scas
jge
add
addr16
fwait
inc
push
mov
lods
fsubrs
outsb
mov
jnp
add
add
add
jne
into
fsubrl
sahf
gs
fwait
xchg
test
aad
aas
push
cmp
inc
xor
cltd
mov
mov
mov
inc
cwtl
in
shrl
mov
popa
push
adc
dec
lret
cmpb
mov
inc
fwait
stos
loope
mov
push
mov
pushl
jno
or
pop
fdivrl
mov
pop
stos
jecxz
cmp
int3
leave
loope
xor
mov
adc
or
push
addr16
cmp
jmp
stc
fisttpl
cltd
or
xchg
popa
testb
add
sbb
loope
pop
imul
rol
sbb
in
mov
cmpsb
subl
shrl
inc
add
and
lea
loope
jmp
adc
iret
lret
lret
mov
mov
decl
pop
sbb
mov
pop
adc
test
test
cli
dec
test
call
and
and
push
mov
push
hlt
jno
mov
inc
xchg
inc
cmp
pop
and
cli
pop
sahf
jp
aad
mov
fistps
lahf
push
fcoms
ds
push
push
push
arpl
testl
inc
faddp
jbe
cmovne
daa
out
xor
sbb
subb
dec
sub
cs
andb
or
or
adc
inc
sbb
stc
sbb
add
pop
std
addr16
and
dec
imul
xchg
aaa
pop
adc
mov
push
clc
fimull
xlat
and
lcall
dec
inc
xor
sub
leave
pop
dec
cmp
sahf
aas
sbb
add
imul
out
mov
adc
mov
mov
mov
xchg
mov
xor
data16
inc
aaa
mov
loope
aas
push
nop
aaa
push
nop
pop
nop
xchg
or
lcall
ret
adc
pop
jns
cmc
jb
loop
adc
ret
add
add
add
mov
loop
std
xor
jle
jne
lods
stos
pop
les
sub
mov
xchg
repnz
jns
jle
ja
pop
fsubr
lds
iret
subl
lret
mov
movsl
int3
dec
mov
jb
mov
fldcw
ret
xchg
mov
jmp
outsb
scas
mov
ret
shl
mov
xchg
out
ss
jl
pop
jecxz
rol
test
test
adc
add
add
mov
push
or
jb
popa
and
sub
xchg
mov
fmulp
sbb
mov
sti
sub
shlb
sbb
or
stos
mov
dec
lock
jcxz
ljmp
cld
push
xchg
hlt
idivl
jbe
mov
mov
adc
in
push
addl
and
sub
mov
dec
sub
enter
out
and
out
fcompp
pop
int
or
imul
lahf
or
int3
add
stc
jns
ret
jnp
mov
shlb
sbb
cmpsl
add
in
adc
insb
into
adc
inc
xchg
dec
cmpsl
insl
or
xchg
pop
pusha
sbb
add
scas
pushf
adc
cmp
xchg
jg
lcall
fwait
mov
loope
and
frstor
pop
rclb
cmp
test
shll
je
push
out
out
adc
in
call
call
int3
jbe
sahf
pop
inc
fsubs
test
inc
mov
pop
pop
and
cld
jge
jp
ss
xchg
fsubl
sub
outsl
das
jmp
lret
clc
popf
lret
inc
cmc
jbe
aaa
sbb
mov
add
xor
lret
push
je
xor
rcll
in
or
lret
xor
cmovg
mov
inc
pop
xor
adc
imul
mov
pop
add
cmc
fwait
addl
mov
lock
or
mov
jns
stc
insl
in
cmp
cmp
dec
call
xchg
fcoml
gs
xor
loop
bound
pop
aam
cwtl
dec
pop
cmp
adc
cmpsl
inc
gs
sub
mov
mov
cmp
lock
cli
xchg
shll
xchg
fildll
xchg
test
pop
ja
popa
xchg
mov
cs
sbb
cmc
aad
cmp
inc
push
fnsave
cmc
pusha
icebp
inc
dec
call
movsb
xchg
pop
mov
push
fdivs
ret
mov
mov
dec
and
push
xor
inc
ja
jno
ficomps
and
into
cmp
inc
pop
mov
pop
push
adc
mov
rcl
rcll
mov
xor
sub
mov
es
scas
mov
bound
mov
xchg
pushf
push
fadd
leave
dec
daa
and
xor
iret
repz
xor
pop
jmp
and
std
lods
ret
lahf
xor
int3
call
lret
xchg
repz
xchg
fxch
cltd
mov
xor
dec
xor
hlt
or
in
cli
mov
popa
fbld
rcr
sbb
dec
adc
mov
or
mov
pop
lahf
add
xor
jne
xlat
movb
mov
imul
sub
mov
inc
push
negl
add
push
test
daa
in
jg
ss
stc
fucom
stos
xchg
dec
addl
incl
incl
incl
je
adc
jle
shl
loope
add
icebp
mov
and
sbb
in
mov
fisubrl
daa
mov
sbb
clc
dec
daa
pop
mulb
dec
ret
cmp
call
loopne
scas
push
jno
xchg
xchg
sbb
mov
int3
add
push
scas
shr
mov
in
sbb
sbb
jne
xor
cld
mov
and
lret
call
add
fistl
iret
pop
loope
add
dec
nop
jb
jmp
stc
out
mov
inc
popf
dec
and
and
fwait
push
jmp
jl
lds
mov
mov
mov
pop
enter
sahf
mov
or
ss
inc
or
mov
mov
mov
pop
loopne
imul
test
push
push
sbb
cli
inc
pop
shll
fadd
incl
incl
out
or
stos
in
push
and
jge
jmp
lods
mov
push
dec
out
xchg
stos
cmp
adc
sarb
daa
cli
lcall
les
iret
or
sub
adc
pop
div
lahf
add
in
addr16
jae
aad
and
xchg
sbb
roll
iret
mov
std
leave
rorl
add
lcall
fdivrp
dec
lock
idivl
movsb
and
js
sti
das
jge
popa
dec
xchg
les
jo
pop
dec
mov
outsl
jnp
add
add
inc
mov
idiv
cltd
jns
lea
lock
sbb
xchg
inc
in
test
rolb
sbb
sbb
orl
adc
test
outsl
test
shll
jmp
ret
xlat
xchg
shrb
decb
call
ret
push
movsl
inc
or
popa
fsubrl
addr16
ret
inc
and
and
jp
adc
jb
ret
add
ror
xor
imul
add
mov
scas
xor
mov
pop
aad
pop
push
fsubrl
mov
mov
and
sar
shlb
dec
and
test
add
xor
inc
jge
mov
lods
out
cli
pushf
rorl
inc
lods
int
sahf
icebp
repz
hlt
test
lds
out
pop
call
mov
push
inc
in
mov
or
fldl
xchg
sbb
jp
cmp
ficoml
mov
ret
push
subb
out
add
leave
add
loopne
in
movsb
shl
and
mov
dec
mov
push
fistps
clc
mov
sub
int3
add
add
mov
mov
pop
sarb
ret
ret
adc
sahf
ds
call
and
sub
hlt
in
adc
test
ret
aas
ja
adc
mov
pop
inc
and
les
fstpl
pop
xor
dec
insl
fxch
xlat
pop
and
push
cmp
scas
aaa
sub
pop
out
push
push
and
mov
jo
cmp
mov
aad
orl
shll
outsl
push
test
and
mov
nop
cmp
or
out
movsl
mov
lret
loope
cli
int3
movsl
subl
pop
in
clc
lds
or
nop
idivl
ds
sbb
mov
lret
shl
sbb
ret
lods
jg
out
in
mov
lock
lea
aas
int3
clc
fsts
sbb
or
or
push
push
cmp
fiadds
inc
je
test
mov
cmc
mov
imul
ss
dec
adc
mov
fistpl
add
cs
mov
push
incl
repnz
mov
incl
incl
incl
imul
sbb
fmul
jno
aad
adc
daa
dec
or
ret
ljmp
mov
ror
mov
mov
jg
insb
ret
dec
incl
lea
xor
lea
in
xchg
xchg
xchg
jae
inc
lcall
xchg
addr16
insb
into
inc
aad
pop
adc
rorb
imul
and
mov
sti
out
rorb
xchg
pusha
test
pop
sub
cmpsl
mov
mov
es
sti
shlb
decl
inc
lods
jmp
jns,pt
stos
or
push
xorb
lret
jl
add
add
adc
jne
jnp
inc
mov
ret
and
out
dec
aaa
pushf
pop
sbb
xchg
lods
pop
arpl
clc
or
adc
bnd
mov
mov
fsubrs
js
lret
inc
int3
mov
out
push
in
insb
xchg
sbb
cmpsb
sub
test
adc
fistpll
jmp
xchg
mov
mov
dec
popa
and
inc
shl
mov
lret
cmp
adc
jb
repz
sub
fs
push
and
sbb
call
cmc
ret
or
mov
push
dec
insl
stc
stos
insb
out
or
xchg
pop
fwait
xchg
inc
push
mov
cmp
xchg
jnp
dec
nop
adc
adc
ljmp
cmp
fiadds
xchg
cwtl
dec
stos
test
fisttps
icebp
push
pop
mov
mov
or
call
in
and
push
cmpsb
inc
fidivrl
pushl
cs
clc
sbb
fadds
mov
jae
inc
dec
pop
dec
push
pop
sbb
shrb
popa
xor
fdivs
mov
fwait
pushf
lret
add
lock
mov
sub
adc
stos
mov
pop
xor
pop
mov
call
and
test
call
inc
icebp
adc
stos
pop
lret
or
sub
cld
lds
jo
ljmp
out
scas
in
sahf
ds
stos
stos
dec
cmp
fimull
repnz
movsl
xchg
or
xchg
movb
pop
mov
inc
imul
je
cmpsl
and
dec
enter
sub
jle
imul
je
aad
lret
sbb
mov
lahf
adc
sbbl
idiv
and
test
mov
xchg
pop
fucom
cmp
pop
pop
fnstcw
pop
and
sbb
mov
iret
incl
incl
incl
adc
xchg
inc
mov
sbb
je
jmp
ret
or
jnp
and
lret
ret
xchg
mov
fwait
jg
dec
push
hlt
mov
mov
mov
mov
mov
mov
mov
imul
ret
out
in
leave
mov
pusha
jg
sbb
add
insl
loope
jge
xchg
in
dec
and
inc
dec
jne
xlat
imul
dec
sbb
addr16
popa
lret
cmp
mov
pop
push
mov
mov
push
or
adc
cmpl
mov
xchg
js
mov
repnz
add
setno
jb
cmp
add
add
add
lret
mov
xor
xchg
xchg
aas
cmpsl
bound
jecxz
fisubl
inc
insb
sub
add
pop
jp
test
sub
inc
out
jg
jae
mov
fcoms
pop
fcmovb
or
int3
add
add
add
pushf
xchg
mov
arpl
push
and
lret
adc
out
xchg
lea
or
mov
lea
int3
ja
out
mov
pop
xlat
daa
fsts
jnp
sbb
push
inc
dec
ret
fdivl
mov
imul
mov
mov
aas
pop
cld
ja
test
and
scas
nop
popf
mov
je
cmp
into
rcl
xor
add
out
cmpsl
popa
xor
int3
add
mov
lcall
je
add
lahf
xchg
sub
mov
jmp
mov
arpl
xchg
mov
sbb
fs
sbb
stc
mov
aad
aam
icebp
sub
sbb
fistl
dec
int3
cmp
call
mov
out
cs
data16
es
call
fucompp
mov
push
jl
push
inc
push
mov
mov
mov
stc
inc
jne
outsl
stc
mov
jle
int3
xor
int
movsb
out
scas
lret
sarl
scas
enter
imul
push
mov
dec
or
pop
pop
je
cs
rclb
push
sub
cmp
dec
lea
push
cmpsl
push
dec
xor
stos
ljmp
ja
shlb
jno
lcall
mov
sub
push
sbb
add
ret
cs
mov
int3
or
enter
addl
movsl
insb
sbb
jns
mov
mov
mov
in
das
jl
xchg
arpl
aad
add
jp
sbb
push
iret
das
mov
shl
test
cmpsl
xorb
fsubrl
in
lret
push
lds
mov
push
dec
push
jge
mov
mov
hlt
int3
jge
pop
push
jg
push
cltd
repz
jmp
mov
in
loopne
repz
jecxz
insl
aad
and
add
add
add
subb
bound
nop
xlat
jae
dec
fndisi(8087
fcmovbe
cli
out
jb
lahf
mov
or
or
xor
xor
test
push
jg
add
sbb
mov
cmc
addr16
bound
sub
stos
lea
mov
fisubrl
jae
mov
mov
mov
push
hlt
sbbl
clc
mov
jbe
orl
fdivrs
mov
int
xchg
pop
adc
xchg
jmp
adc
fs
hlt
mov
mov
sub
push
jno
push
call
mov
jbe
clc
hlt
add
hlt
inc
ret
cwtl
mov
repnz
stc
jnp
and
aam
dec
fcoms
mov
js
std
out
and
push
jmp
outsb
fnstcw
pop
sub
es
mov
mov
and
das
scas
xor
pop
cmpsb
scas
out
lcall
jecxz
jo
adcb
je
adc
out
scas
ds
cld
or
outsb
rcl
scas
adc
addr16
call
popf
aaa
xor
sbb
aas
mov
jge
shll
incb
loope
mov
cmp
pushf
jl
out
xor
sub
call
sbb
je
shl
lret
mov
fcompl
frstor
clc
add
dec
and
loopne
add
add
add
push
and
add
int3
int3
call
jns
pop
sbb
sub
sbb
nop
nop
inc
jns
inc
cmp
add
cmp
int3
int3
add
add
nop
nop
push
adc
pop
sbb
add
sbb
push
add
adc
xor
nop
jge
int3
lcall
lea
jb
push
mov
add
int3
int3
pop
pusha
call
popa
cmp
sub
add
add
lcall
int3
add
push
xorb
int3
nop
nop
nop
nop
int3
lcall
add
and
add
add
outsl
mov
incl
inc
cmp
add
nop
nop
ljmp
inc
push
adc
pop
outsl
mov
add
nop
dec
insb
daa
add
add
add
dec
mov
push
dec
int3
int3
int3
int3
int3
and
call
inc
int3
int3
add
add
nop
dec
addl
daa
add
sbb
xorb
nop
nop
add
adc
int3
int3
add
nop
jb
addb
cmp
nop
dec
int3
ja
pop
add
int3
add
jge
inc
sub
add
add
and
jg
incl
add
push
cmp
aaa
cmp
int3
inc
add
add
xchg
pop
addr16
cmp
push
sub
add
pop
add
mov
incl
add
int3
int3
nop
int3
outsb
pop
insl
add
add
and
add
incl
add
sbb
pop
int3
push
cmp
sub
push
pusha
adc
incl
add
nop
nop
jo
adc
int3
int3
jle
nop
int3
int3
add
add
incl
sbb
cmp
and
mov
add
push
adc
push
jp
add
add
lcall
and
nop
add
int3
int3
add
dec
int3
ljmp
push
push
adc
nop
nop
int3
int3
incl
add
int3
int3
and
mov
add
add
add
nop
nop
jbe
push
xor
js
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
mov
pop
ret
int3
int3
push
mov
sub
push
movb
movl
mov
mov
mov
mov
movl
movzbl
movzbl
lea
mov
movzbl
movzwl
imul
cmp
je
movzbl
mov
lea
mov
jmp
movzwl
movzbl
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
mov
lea
cmp
jb
movzbl
movzbl
lea
mov
movzbl
movzwl
sub
movzwl
sub
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
movzwl
mov
lea
mov
jmp
movzwl
sub
sub
mov
jmp
movzwl
add
movzbl
sub
mov
jmp
movzbl
sub
movzwl
sub
mov
lea
inc
add
sub
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
jmp
mov
sub
mov
cmpl
jle
movzbl
mov
lea
movzwl
cmp
jne
movzwl
sub
sub
mov
movzwl
movzbl
cmp
jne
movzbl
mov
lea
movzwl
cmp
jne
movzwl
sub
sub
mov
movzwl
mov
lea
mov
movzwl
cmp
jne
movzbl
sub
cmp
jle
movzbl
movzbl
lea
mov
movzbl
movzwl
lea
cmp
jl
movzbl
mov
lea
mov
jmp
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movzbl
cmp
jne
jmp
movzbl
movzbl
lea
mov
movzbl
cmp
jne
jmp
movzbl
movzwl
lea
cmp
jl
movzbl
mov
lea
mov
movzbl
movzwl
cmp
jne
jmp
movzwl
mov
lea
mov
jmp
pushl
movzbl
movzwl
lea
cmp
jne
mov
sub
movzbl
sub
mov
mov
mov
lea
mov
ret
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
movzwl
mov
lea
mov
jmp
mov
sub
movzwl
sub
mov
jmp
mov
add
sub
mov
jmp
movzwl
mov
sub
movzwl
sub
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
movw
movl
mov
sub
mov
sbb
movzbl
cltd
add
adc
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
movzwl
mov
imul
sub
xor
mov
mov
push
mov
push
push
mov
push
mov
push
call
add
movzwl
mov
movzbl
lea
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movzwl
cltd
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
mov
sub
mov
sbb
movzbl
cltd
add
adc
mov
cmpl
jne
cmpl
jne
jmp
movzwl
cltd
add
mov
adc
sub
sbb
mov
mov
jne
cmpl
jb
movzwl
movzbl
lea
cltd
mov
mov
movzwl
cltd
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
movzwl
movzwl
lea
cltd
mov
mov
jmp
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
movzwl
mov
lea
xor
mov
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
movzbl
sub
sub
mov
jmp
movzwl
cltd
mov
mov
add
adc
add
adc
movzwl
cltd
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
movzwl
sub
movzwl
sub
mov
movzwl
movzwl
lea
cltd
mov
mov
mov
push
call
add
movzwl
sub
cltd
mov
mov
sub
sbb
movzwl
cltd
add
adc
mov
movzwl
movzwl
lea
cltd
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movb
mov
sub
mov
mov
sub
mov
movzbl
mov
lea
mov
movl
movzwl
sub
sub
mov
push
mov
push
call
test
jne
movzwl
sub
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
movzwl
imul
mov
sub
mov
mov
add
mov
mov
movzbl
test
jne
movzwl
imul
mov
sub
mov
mov
add
mov
movb
jmp
movb
movzwl
imul
mov
sub
mov
mov
sub
mov
mov
add
mov
mov
movzbl
mov
lea
mov
jmp
mov
imul
mov
sub
mov
mov
imul
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movw
mov
mov
lea
mov
movzwl
mov
lea
cmp
jb
movzwl
movzbl
lea
mov
mov
sub
movzwl
sub
mov
movl
mov
imul
mov
sub
mov
mov
imul
mov
sub
mov
movzwl
push
mov
push
call
add
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
movzwl
mov
lea
mov
jmp
mov
sub
movzwl
sub
mov
jmp
mov
add
movzwl
sub
mov
jmp
movzwl
movzwl
sub
movzwl
sub
mov
mov
mov
movzwl
movzbl
lea
mov
xor
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
pop
ret
push
push
call
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
movl
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
call
movl
push
lea
push
call
add
xor
jmp
mov
jmp
push
call
pop
orl
call
xor
inc
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
push
call
mov
mov
push
mov
call
pop
pop
mov
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
jne
pushl
call
push
call
mov
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
jb
mov
cmp
je
call
jmp
push
mov
call
pop
push
mov
call
pop
orl
call
cmp
jne
mov
pushl
call
xor
xor
inc
cmp
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
mov
xor
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
inc
inc
jmp
cmp
ja
inc
inc
mov
test
jne
ret
push
push
mov
push
xor
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
jmp
push
call
mov
inc
cmpw
pop
je
lea
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
lea
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
push
mov
mov
mov
xor
cmp
mov
movl
mov
je
mov
addl
mov
push
pop
cmpw
jne
mov
xor
test
sete
push
add
mov
pop
jmp
incl
test
je
mov
mov
add
mov
add
test
je
test
jne
cmp
je
cmp
jne
test
je
andw
andl
xor
cmp
je
mov
cmp
je
cmp
jne
add
jmp
sub
jmp
cmp
je
cmp
je
mov
addl
mov
mov
incl
xor
inc
xor
jmp
add
inc
cmpw
je
cmpw
jne
test
jne
cmpl
je
lea
cmpw
jne
mov
jmp
xor
xor
cmp
push
sete
pop
mov
shr
test
je
test
je
movw
add
mov
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
mov
add
mov
incl
add
jmp
test
je
andw
add
mov
incl
jmp
mov
cmp
pop
pop
pop
je
mov
mov
incl
pop
ret
push
mov
push
push
push
push
push
push
mov
xor
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
lea
push
lea
push
push
push
xor
call
mov
mov
lea
shl
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
push
lea
push
call
mov
add
dec
mov
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
cmp
pop
jne
xor
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
mov
je
push
push
push
push
push
push
call
cmp
je
push
add
call
lea
cmp
pop
jne
inc
lea
push
mov
call
cmp
pop
mov
je
cmp
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
push
call
test
je
push
call
push
lea
call
cmp
pop
pop
lea
jne
push
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
pushl
call
pop
push
call
jmp
mov
push
xor
cmp
push
mov
jne
call
test
je
movl
jmp
call
cmp
jne
movl
jmp
xor
jmp
cmp
jne
call
jmp
cmp
jne
push
push
call
mov
push
push
push
mov
push
push
push
call
mov
cmp
je
lea
push
call
mov
test
pop
je
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
jmp
mov
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
ret
mov
cmp
je
push
call
orl
jmp
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
mov
mov
mov
cmp
je
decl
jne
cmp
je
push
call
pop
orl
call
push
call
pop
movl
mov
mov
cmp
je
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
mov
decl
cmp
je
cmp
je
cmp
jne
push
call
pop
orl
call
push
call
pop
call
ret
xor
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
cmp
je
mov
test
jne
push
call
push
call
push
pushl
call
ret
jmp
jmp
call
test
jne
call
xor
ret
push
push
push
call
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
jne
mov
mov
mov
mov
mov
movl
mov
push
call
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
mov
call
orl
mov
mov
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
call
add
ret
call
add
ret
push
call
mov
mov
xor
cmp
je
inc
cmp
jb
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
mov
pop
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcompl
add
pop
inc
add
pop
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
pop
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
pop
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
mov
cmpw
mov
je
inc
inc
cmpw
jne
push
mov
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
ret
mov
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
fs
add
gs
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
andl
jo
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pushf
gs
add
inc
add
gs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fsubl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addr16
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
mov
ret
mov
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
mov
sub
push
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
xor
cmp
je
mov
decl
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
decl
mov
mov
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
mov
incl
cmp
je
cmp
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
mov
test
jle
push
lea
add
pushl
pushl
call
dec
pop
pop
jne
pop
pop
ret
push
mov
push
push
mov
push
push
push
call
mov
mov
add
test
je
cmp
jne
lea
cmpb
je
push
push
lea
push
call
add
movb
xor
jmp
andl
push
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
add
push
push
call
add
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
xor
jmp
push
mov
push
pushl
call
lea
cmpb
pop
pop
je
push
push
push
pushl
call
add
lea
cmpb
pop
je
push
push
push
pushl
call
add
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
mov
push
xor
inc
test
jne
push
call
test
pop
mov
jne
pop
ret
push
push
push
movb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
add
pushl
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
test
pop
pop
pop
jne
mov
pop
ret
pushl
call
andl
mov
pop
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
mov
jne
xor
jmp
cmpb
jne
cmpb
jne
mov
mov
cmp
movb
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
push
push
push
call
mov
cmp
pop
mov
jae
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
je
lea
push
push
call
test
pop
pop
jne
lea
push
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
call
cmp
pop
jb
mov
push
push
push
movb
call
add
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
mov
push
pushl
call
pop
pop
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
mov
push
lea
push
lea
push
lea
push
pushl
call
add
test
je
push
lea
shl
pushl
lea
push
call
test
pop
pop
jne
mov
jmp
lea
push
call
inc
push
call
test
pop
pop
mov
je
mov
push
mov
lea
mov
mov
lea
lea
push
push
mov
lea
push
call
mov
mov
lea
push
pushl
call
mov
movzwl
mov
push
lea
push
pushl
call
add
cmp
jne
mov
mov
andl
mov
mov
mov
mov
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmp
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
call
add
test
je
xor
andb
inc
cmp
jb
push
lea
push
push
call
add
neg
sbb
inc
jmp
xor
mov
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
call
test
je
mov
pushl
mov
call
mov
mov
mov
mov
pop
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
mov
call
add
leave
ret
push
lea
sub
mov
push
push
mov
xor
cmp
push
mov
mov
je
cmp
je
push
call
pop
jmp
lea
mov
jmp
cmp
movl
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
test
pop
pop
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
test
pop
pop
jne
cmpb
jne
mov
cmp
jg
push
lea
push
push
call
lea
push
movb
call
add
test
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
call
mov
mov
mov
pop
pop
pop
call
add
leave
ret
xor
jmp
push
push
push
lea
push
push
call
mov
add
cmp
je
mov
xor
mov
cmp
je
pushl
lea
push
call
test
pop
pop
je
lea
push
call
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jne
xor
jmp
push
push
call
mov
xor
cmp
jl
cmp
jg
push
call
pop
mov
cmp
jne
xor
mov
call
mov
push
lea
push
call
pop
pop
mov
jmp
push
call
pop
mov
mov
cmp
jne
mov
jmp
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
cmp
jg
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
push
call
pop
mov
call
cmp
jne
cmp
je
push
call
pop
orl
call
mov
jmp
push
call
pop
ret
xor
call
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
push
call
push
call
pop
andl
call
mov
mov
mov
mov
cmp
je
test
je
decl
jne
push
call
pop
mov
mov
mov
mov
incl
orl
call
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
push
push
mov
xor
xor
pushl
call
pushl
mov
call
add
inc
cmp
pop
pop
lea
jb
inc
push
call
mov
test
pop
je
mov
xor
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
inc
cmp
jb
movb
pop
pop
mov
pop
pop
ret
push
mov
push
push
andl
push
push
push
mov
lea
movl
pushl
call
pushl
mov
call
add
pop
lea
add
decl
pop
mov
jne
inc
push
call
mov
test
pop
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
movb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
mov
movl
mov
pushl
call
pushl
mov
call
addl
pop
pop
mov
add
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
pushl
lea
push
call
andl
lea
mov
add
sub
mov
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
add
incl
cmpl
lea
jb
lea
mov
lea
mov
movl
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
add
pop
pop
mov
pop
leave
ret
cmpl
push
mov
je
push
mov
test
je
mov
mov
incl
inc
decl
cmpl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
je
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
dec
lea
test
je
push
cltd
pop
idiv
mov
add
incl
mov
dec
cmp
jne
mov
add
sub
jmp
mov
pop
pop
leave
ret
push
mov
movsbl
cmp
push
mov
push
mov
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
cltd
push
pop
idiv
mov
test
jne
push
pop
jmp
pushl
mov
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
movb
incl
decl
jmp
pushl
mov
push
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
pop
mov
call
pop
jmp
pushl
push
push
push
push
pushl
call
add
test
jne
xor
jmp
mov
test
jne
push
pop
jmp
lea
jmp
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
cmp
jl
jmp
pushl
mov
push
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
pushl
mov
inc
push
jmp
pushl
mov
push
jmp
cmpl
pushl
push
push
push
je
push
pushl
call
add
test
je
cmpl
je
mov
movb
incl
decl
jmp
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
inc
pushl
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
xor
cmp
setne
mov
jmp
pushl
mov
cltd
push
pop
idiv
mov
jmp
cmpl
pushl
push
push
push
je
push
jmp
push
jmp
pushl
mov
xor
inc
jmp
cmpl
mov
jg
mov
jmp
mov
mov
mov
call
xor
inc
pop
pop
pop
ret
push
push
call
mov
xor
sub
je
dec
mov
je
mov
jmp
mov
jmp
mov
mov
mov
mov
cmpl
je
cmpl
mov
jne
mov
mov
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
lea
push
push
pushl
call
mov
cmp
je
mov
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
xor
cmp
jne
pushl
call
pop
mov
cmp
je
movl
mov
pushl
push
pushl
lea
push
push
mov
pushl
call
dec
cmp
jle
mov
mov
cmpl
jbe
mov
mov
mov
mov
incl
incl
decl
dec
test
jg
cmpl
je
push
call
pop
xor
inc
lea
call
ret
mov
mov
mov
test
je
mov
mov
jmp
mov
cmpl
je
movb
xor
mov
mov
inc
inc
cmp
je
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
push
call
pop
pop
test
jne
add
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
pop
test
jne
add
mov
movb
jmp
add
test
je
mov
jmp
mov
test
je
cmp
je
movzbl
mov
mov
testb
je
cmp
jbe
mov
inc
cmpb
je
mov
mov
incl
mov
decl
jmp
mov
mov
mov
mov
incl
inc
mov
decl
mov
test
jne
jmp
incl
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
jg
mov
jmp
mov
cmp
jne
cmpl
jbe
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
decl
jmp
cmpl
jbe
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
mov
test
jne
mov
mov
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
mov
test
je
pushl
pushl
pushl
pushl
mov
mov
call
add
test
jne
xor
jmp
mov
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
mov
decl
mov
mov
test
jne
jmp
push
mov
push
mov
test
push
mov
jne
mov
mov
mov
test
je
test
push
push
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
jmp
inc
xor
cmpb
jne
inc
inc
push
pushl
mov
pushl
lea
push
lea
call
add
test
je
inc
cmpl
ja
cmpl
jbe
mov
movb
mov
sub
jmp
cmpl
jne
decl
mov
movb
xor
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
call
pushl
pushl
pushl
pushl
pushl
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
mov
ret
mov
ret
mov
ret
push
mov
push
push
test
movzwl
movzwl
mov
mov
jne
or
leave
ret
push
push
lea
push
push
xor
push
inc
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
mov
or
lea
push
push
push
push
call
add
or
mov
mov
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
cmpl
push
je
push
push
call
mov
test
pop
pop
jne
xor
inc
pop
ret
call
test
je
push
call
push
call
pop
pop
jmp
mov
mov
jmp
andl
movl
xor
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
push
xor
cmp
push
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
je
mov
push
pop
mov
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
xor
inc
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
jmp
mov
movzwl
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
pop
or
push
call
pushl
call
pop
pop
mov
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
test
je
cmpl
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
leave
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
jne
cmp
jne
mov
mov
movl
mov
jmp
push
push
call
mov
cmp
pop
pop
je
push
call
mov
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzwl
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
push
call
pushl
call
add
xor
inc
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
push
pop
mov
mov
rep
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
push
call
mov
mov
movl
call
mov
movl
call
cmp
pop
mov
je
cmp
je
cmp
je
mov
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
cmpb
jne
xor
push
push
push
lea
push
push
pushl
mov
push
call
add
test
je
lea
andw
cmpl
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
jg
lea
movw
movzbl
inc
inc
inc
cmp
jle
mov
inc
inc
cmpb
jne
push
lea
push
push
call
mov
add
mov
mov
mov
xor
pushl
call
pop
mov
pop
pop
jmp
mov
pushl
call
push
call
pop
xor
pop
inc
jmp
movl
mov
mov
xor
mov
pop
call
leave
ret
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
add
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
orw
call
mov
mov
ret
push
mov
sub
mov
push
mov
test
mov
je
cmpb
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
pushl
call
test
je
lea
push
call
pop
mov
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
mov
push
push
push
push
xor
pop
mov
lea
cltd
sub
sar
mov
imul
mov
cmp
je
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
xor
add
movb
inc
jmp
xor
jmp
inc
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
mov
test
jne
ret
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
mov
and
push
or
push
call
test
je
lea
call
cmp
je
cmpl
je
push
pushl
call
mov
pop
mov
call
cmp
pop
jne
xor
jmp
xor
inc
mov
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
push
push
lea
push
pushl
call
test
pop
pop
mov
mov
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
test
pop
pop
jne
orw
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
mov
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
pop
xor
test
pop
jne
orb
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orb
cmp
jne
mov
mov
shr
not
and
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
pushl
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
testb
jne
andl
ret
push
xor
cmp
push
jne
cmpl
jne
mov
mov
jmp
movl
mov
cmp
je
lea
cmp
mov
mov
mov
je
cmp
je
push
push
push
call
mov
mov
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
jne
xor
jmp
push
lea
call
mov
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
je
cmpw
jne
push
push
call
pop
pop
jmp
push
push
push
push
call
test
je
push
lea
push
push
pushl
call
test
je
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
mov
push
call
pop
mov
mov
mov
mov
orl
orl
push
call
pop
mov
mov
cmp
je
cmpb
je
mov
cmp
je
push
push
call
pop
pop
test
je
mov
cmp
je
push
call
pop
push
call
inc
push
call
pop
pop
mov
cmp
je
push
push
call
pop
pop
orl
call
push
push
pushl
call
add
mov
movb
add
cmpb
jne
movl
inc
push
call
pop
imul
mov
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
mov
cmp
je
push
call
pop
mov
push
call
cmp
je
xor
inc
mov
mov
imul
mov
cmp
je
mov
imul
add
mov
cmp
je
mov
cmp
je
mov
sub
imul
mov
jmp
mov
mov
lea
push
push
push
pushl
push
push
push
push
mov
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
lea
push
push
push
pushl
push
push
push
push
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
push
lea
push
call
pop
pop
jmp
mov
xor
push
call
pop
ret
cmpb
jne
inc
push
call
pop
imul
add
jmp
cmp
jg
inc
mov
cmp
jge
cmpb
jne
inc
push
call
pop
add
jmp
cmp
jg
inc
mov
cmp
jge
cmp
je
negl
movsbl
mov
cmp
je
push
push
pushl
call
add
mov
movb
jmp
mov
movb
call
ret
push
mov
push
push
push
push
push
mov
mov
mov
push
cltd
pop
idiv
cmpl
jne
test
mov
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
shl
mov
jmp
mov
shl
mov
mov
lea
cltd
lea
mov
idiv
push
pop
inc
push
mov
mov
cltd
idiv
mov
pop
push
sub
mov
dec
mov
cltd
idiv
mov
mov
imul
add
add
lea
cltd
pop
idiv
mov
imul
sub
add
cmp
jg
lea
jmp
add
cmpl
jne
cmpl
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
mov
jmp
mov
mov
cmp
jle
sub
jmp
test
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
jmp
mov
add
imul
add
imul
cmpl
jne
add
mov
imul
add
mov
mov
jmp
add
mov
add
imul
add
mov
jns
add
dec
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
leave
ret
push
xor
cmp
jne
xor
pop
ret
push
xor
push
mov
inc
cmp
jne
cmp
je
cmp
je
cmp
movzwl
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
jmp
movzwl
push
push
push
push
push
movzwl
push
call
movzwl
movzwl
add
cmp
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
movzwl
push
call
add
jmp
movzwl
push
push
push
push
push
jmp
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
add
mov
mov
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
xor
jmp
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
push
call
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
incl
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
call
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
call
mov
orl
call
mov
call
ret
push
call
pop
ret
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
xor
cmpl
mov
push
jne
push
lea
push
mov
push
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
cmp
pop
je
push
push
push
pushl
movl
pushl
call
mov
add
cmp
je
push
call
cmp
pop
mov
mov
jne
cmp
je
push
call
pop
or
mov
pop
pop
pop
call
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmp
jne
push
push
mov
push
pushl
pushl
call
add
test
je
mov
mov
mov
movzbl
push
call
test
pop
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
xor
jmp
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
jne
pushl
pushl
call
pop
pop
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
mov
mov
inc
test
je
cmp
je
pop
sub
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
jmp
push
push
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
inc
decl
mov
je
cmpl
je
cmp
je
mov
pop
sub
pop
jmp
xor
pop
leave
ret
cmpl
je
movb
inc
neg
push
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
push
mov
push
xor
cmp
mov
mov
push
je
movb
inc
neg
adc
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
mov
push
pushl
pushl
pushl
call
mov
pop
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
cmpl
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
push
call
pop
andl
pushl
call
pop
mov
orl
call
mov
call
ret
push
call
pop
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
cmpl
sbb
neg
ret
mov
and
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
push
push
call
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
xor
inc
cmp
jne
pushl
call
pop
mov
cmp
je
mov
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
mov
cmp
jne
xor
jmp
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
push
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
jmp
pushl
pushl
pushl
pushl
call
lea
call
ret
mov
add
ret
push
mov
push
push
mov
push
mov
cmpl
push
je
cmpl
je
cmp
jbe
xor
inc
cmp
jae
cmp
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
mov
mov
sar
movzbl
testb
je
push
mov
mov
movb
pop
jmp
mov
movb
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
jmp
cmp
jl
cmp
lea
jle
mov
pop
pop
pop
leave
ret
call
mov
cmp
je
call
pushl
push
call
pop
pop
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
call
mov
cmp
je
call
pushl
pushl
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
pop
mov
je
push
push
pushl
push
push
pushl
push
push
call
test
je
lea
push
push
call
test
pop
pop
jge
cmp
je
pushl
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
pushl
call
pop
or
jmp
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
mov
mov
xor
xor
inc
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
pushl
mov
call
pop
mov
mov
cmp
jle
push
mov
call
pop
mov
mov
push
pop
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
jmp
cmp
jg
cmp
jle
push
pop
jmp
lea
push
pushl
call
test
je
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
andl
orl
mov
xor
inc
xor
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
mov
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
test
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
mov
test
jne
lea
push
call
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
cmpl
je
push
call
pop
cmpl
je
pushl
call
pop
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
push
push
lea
push
pushl
push
push
call
add
mov
test
jne
push
call
pop
jmp
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
test
je
push
call
pushl
call
pop
pop
mov
lea
mov
call
call
ret
push
mov
jmp
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
pop
sar
neg
ret
mov
sub
pop
sar
ret
push
mov
push
xor
test
mov
jne
leave
ret
cmpl
je
add
inc
cmpl
jne
push
lea
push
push
call
mov
test
pop
mov
jne
push
call
pop
mov
mov
jmp
push
call
mov
add
add
mov
pop
test
jne
and
mov
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
push
mov
jne
or
jmp
push
mov
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
cmp
je
xor
cmp
mov
sete
cmp
mov
jne
mov
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
je
xor
jmp
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
mov
sub
pushl
mov
call
mov
cmp
pop
jl
cmp
je
lea
pushl
call
cmp
pop
jne
mov
mov
mov
mov
jmp
mov
mov
inc
add
cmp
jne
mov
shl
push
pushl
call
cmp
pop
pop
je
jmp
cmp
jne
cmp
jge
neg
lea
push
pushl
call
cmp
pop
pop
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
pushl
call
inc
inc
push
call
mov
cmp
pop
pop
je
pushl
push
call
mov
sub
pop
add
pop
mov
mov
inc
neg
sbb
not
and
push
push
call
test
jne
orl
push
call
pop
cmp
je
pushl
call
pop
mov
jmp
pushl
call
mov
pop
mov
jmp
push
mov
test
je
push
call
inc
push
call
test
pop
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
pop
jmp
mov
push
push
jmp
movzbl
testb
je
inc
mov
test
je
movzwl
movzbl
shl
or
cmp
jne
lea
jmp
movzwl
cmp
je
inc
movzbw
test
jne
mov
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
add
loopne
add
into
cmc
add
mov
cmc
add
lcall
add
add
pop
cmc
add
dec
cmc
add
cmp
add
es
add
adc
add
add
add
repnz
add
fdiv
add
lret
add
add
nop
hlt
add
jbe
add
pusha
hlt
add
push
hlt
add
ss
add
sub
add
push
hlt
add
adc
add
or
add
clc
repz
call
repz
repz
stos
repz
pushf
repz
mov
add
test
add
jo
add
pop
repz
dec
repz
repz
sub
add
push
repz
or
add
cli
repnz
call
repnz
mov
repnz
mov
add
jbe
add
pop
repnz
inc
repnz
sub
add
adc
add
dec
lock
pop
lock
push
lock
xchg
add
xchg
lock
lods
lock
mov
lock
loop
add
out
lock
add
add
adc
add
xor
add
inc
icebp
add
dec
icebp
add
data16
add
jbe
add
mov
add
sahf
icebp
add
lods
icebp
add
mov
icebp
add
fdiv
add
lock
add
add
add
add
add
xor
add
sbb
add
push
lock
hlt
out
add
fsubr
add
mov
out
add
xchg
out
add
sub
add
add
add
add
mov
add
in
add
fsubrp
add
hlt
in
add
or
add
push
in
add
xor
add
inc
in
add
push
in
add
in
add
jb
add
test
add
out
add
push
out
add
inc
out
add
cmp
add
sub
add
push
out
add
or
add
clc
in
add
out
add
add
enter
mov
in
add
xchg
in
add
jl
add
add
add
pop
out
add
dec
out
add
ss
add
into
out
add
in
add
hlt
out
add
or
add
and
add
add
add
mov
add
cmpsb
out
add
mov
add
jp
add
jl
add
add
add
add
add
add
jmp
add
cmp
data16
movsl
mov
jecxz
sar
aad
insl
divl
cltd
or
mov
rcr
lods
and
call
add
popa
cmp
pminub
incl
incl
inc
sub
jb
lcall
test
add
adc
pop
adc
xchg
inc
adc
int3
push
in
pop
xchg
lds
std
xchg
popf
xchg
ja
adc
movsl
mov
in
bound
mov
push
aaa
movsb
arpl
popa
lcall
daa
stos
mov
push
xor
and
sub
imul
imul
stc
mov
fists
mov
pop
std
cmp
xor
pop
mov
sbb
enter
xchg
mov
xchg
cmc
mov
mov
sub
mov
stc
aad
cwtl
arpl
cmpsb
push
les
xchg
jae
inc
pop
jb
xchg
xorb
cmp
call
cmp
add
arpl
cmp
mov
adc
xchg
sub
cmpsb
pop
xor
jae
bound
adc
and
adc
outsb
push
cmp
mov
cmp
adc
mov
push
mov
mov
cmp
push
imul
mov
add
jnp
pop
xor
rcr
cmpsb
adc
loopne
out
mov
lcall
cmp
sbb
adc
fcomps
jle
lret
cmpsb
imul
sbb
orl
jmp
shrl
mov
pop
cmc
jp
std
and
adc
call
push
js
mov
incl
incl
mov
xlat
dec
mov
ss
es
add
nop
test
inc
sub
aad
xchg
mov
mov
aad
pop
mov
dec
xor
push
ds
ds
mov
sub
push
cmpsb
push
ljmp
ds
dec
cmp
mov
xor
cmp
lahf
insl
sub
add
dec
incl
incl
iret
stos
inc
mov
sub
cwtl
sub
and
call
sbb
test
push
aad
int3
mov
jnp
sahf
cmp
or
xchg
or
add
inc
jg
or
jo
push
mov
sub
faddl
inc
mov
fildll
pop
mov
icebp
fstp
jbe
inc
and
dec
incl
fdivrp
jmp
xchg
add
out
in
jmp
jb
popf
cmp
dec
lret
lods
imul
incl
sub
loopne
repnz
fs
sti
push
mov
inc
adc
arpl
leave
dec
sbb
test
ljmp
push
pop
aad
pop
pusha
xor
dec
and
mov
pop
mov
imul
pop
out
pop
xchg
in
hlt
leave
lret
movl
xchg
call
sbb
sub
test
rorl
aas
and
mov
mov
repz
stos
divb
push
xchg
out
loope
decl
inc
mov
sub
and
fmul
inc
mov
and
inc
dec
or
dec
sbb
push
inc
aaa
xor
in
pop
mov
jno
pop
sub
int3
call
pop
dec
mov
movsl
or
push
orl
cmp
add
dec
add
call
call
pushf
sahf
mov
sbb
scas
jno
pop
bound
push
mov
imul
jno
cmp
dec
mov
jle
sbb
imull
cwtl
pop
int3
add
xchg
out
mov
inc
add
or
dec
pop
repnz
mov
mov
lock
adc
scas
jne
xchg
add
or
pop
imul
incl
incl
scas
cmp
inc
cmp
icebp
jns,pn
add
ret
push
aam
cmp
xchg
mov
and
test
mov
xor
stos
sahf
mov
sub
hlt
ss
cmpsb
mov
mov
pusha
mov
mov
sbb
ficomps
inc
mov
mov
mov
mov
mov
sub
imul
cwtl
notl
xchg
bound
movsl
repz
fstpt
adc
loopne
sub
daa
dec
push
mov
movsl
dec
cld
xor
int3
dec
jo
roll
pusha
popa
inc
mov
dec
pushf
lcall
cwtl
mov
fsubrp
ljmp
call
add
or
outsl
xchg
shlb
pop
leave
pop
or
adc
push
lcall
jae
sub
daa
dec
std
out
aam
mov
adc
call
mov
aaa
pop
push
mov
cmpsl
and
lret
push
pushf
popa
cli
repnz
pop
push
jle
daa
cmp
test
pop
pop
mov
enter
pop
mov
mov
mov
rcr
in
cmp
pop
repz
pop
insb
xor
and
dec
ljmp
hlt
or
sbb
fsubl
xchg
pop
push
dec
pop
jno
scas
fs
fcoms
out
sub
insl
fbld
sbb
cld
lea
movl
scas
mov
inc
or
ja
adc
jge
popf
sahf
push
nop
ljmp
add
cmp
notb
adc
inc
out
adc
insb
in
cmpsb
or
add
or
mov
fs
out
pop
mull
cli
repz
insl
mov
fidivrl
int
sahf
nop
out
adc
std
cmp
jp
add
cmp
pop
xor
daa
cmp
push
fdivrs
cwtl
mov
lea
sbb
frstor
out
out
or
shl
lods
sti
dec
imul
in
iret
inc
enter
pop
mov
cmpsl
in
out
dec
mov
orl
jns
iret
dec
divb
add
outsb
js
loopne,pt
cmp
movsl
mov
mov
hlt
cs
in
mov
cs
fwait
mov
int3
call
dec
rorl
pop
jl
andl
bound
ror
mov
data16
test
mov
aam
mov
sub
repnz
jl
xchg
push
dec
popf
dec
aam
cmp
fisttpl
sub
mov
movsb
lock
xchg
mov
mov
mov
test
inc
add
add
inc
mov
pop
pusha
jnp
push
pop
cmp
lea
mov
adc
pop
cmpsl
cmc
sbb
lods
dec
in
add
dec
push
stos
fldenv
cmpsb
pop
int3
lods
xchg
pushl
mov
divl
fwait
add
dec
call
out
data16
xor
mov
scas
mov
pop
inc
in
sub
jne
test
ss
scas
push
testb
sub
add
lret
xchg
es
pop
popf
mov
fidivrs
adc
lock
inc
and
adc
insb
mov
ja
sbb
mov
pop
insb
dec
jecxz
sbb
lret
addl
or
pop
add
xchg
bound
mov
push
pop
pop
or
xor
adc
cli
xlat
call
ret
mov
in
push
pop
xchg
dec
gs
and
insl
rcrl
xchg
sbb
pop
stos
jl
and
shlb
push
popa
lods
fcoms
insb
popf
jno
mov
mov
mov
inc
adc
pop
jmp
jp
test
lret
int3
jmp
sbb
enter
fsts
add
jmp
icebp
je
and
rolb
sbb
mov
mov
adc
popa
lods
xor
cmp
fcmovnu
das
repz
inc
or
push
and
lret
das
jb
mov
das
or
mov
ss
adc
push
adc
lds
xor
mov
mov
xchg
xor
push
mov
aad
pop
daa
push
cmp
and
inc
into
aaa
sbb
lcall
push
test
mov
test
sahf
sub
rcl
fisubs
xchg
push
ffreep
jge
mov
dec
fstps
and
ret
popa
ss
out
push
subb
call
cmp
push
lret
xor
popf
sub
jo
arpl
in
mov
add
lcall
mov
sbb
pop
jb,pn
fstps
shlb
pushf
xchg
outsb
fnstsw
sub
jg
gs
ljmp
jnp
push
or
sti
cmpb
mov
shlb
adc
xchg
mov
jno
inc
mov
arpl
mov
cmp
repz
cmpsb
imul
outsb
push
jl
jle
loopne
in
sbb
fisttps
lea
test
sub
data16
jmp
or
push
mov
adc
js
push
loope
loop
sarl
sub
negb
adcl
inc
xor
sub
call
dec
xchg
cmp
push
xchg
lock
sub
pop
inc
rcl
lret
jge
lods
inc
or
dec
mov
imul
jge
dec
outsb
outsb
ja
cmpsb
scas
sub
mov
xchg
fists
sub
xor
aas
js
jl
enter
sbb
mov
mov
pushf
int
leave
xchg
jl
shl
mov
dec
mov
mov
adc
dec
out
mov
ret
add
inc
fsubrl
mov
mov
mov
or
popa
jbe
jmp
jl
mov
test
popf
test
xor
cmp
insb
xor
xchg
movsb
xor
adc
xchg
lock
dec
mov
jmp
push
xchg
test
nop
xor
outsl
mov
orb
cmp
or
int3
add
add
pop
dec
insb
enter
jne
mov
sub
test
push
mov
ds
hlt
inc
sbb
xchg
lret
add
call
ss
dec
mov
push
cli
sub
add
cli
mov
arpl
jp
jae
hlt
mov
xchg
cs
lahf
mov
sbbl
mov
add
xchg
mov
fdivrs
xchg
push
adc
fsubr
cmpsb
xchg
xchg
punpckldq
stos
pop
subl
push
cmp
mov
mov
fistpll
dec
jne
jb
lret
nop
push
pop
sarl
leave
test
push
or
lods
mov
repz
stos
ret
adc
call
ja
mov
and
push
jle
ds
mov
dec
gs
leave
fisubl
or
mov
sub
pop
out
shrl
out
add
int3
call
std
aaa
addl
pop
cmpsl
add
sahf
fbld
cmp
enter
imul
dec
cmpb
lds
in
sbb
data16
or
sar
sub
aaa
mov
mov
mov
xorb
adc
lods
xchg
dec
ja
add
dec
rcl
or
push
cmpsb
call
push
or
in
lahf
push
push
mov
cld
dec
cmp
incl
call
sub
inc
dec
cmp
pop
inc
dec
mov
int3
jo
subb
jb
outsb
fwait
insl
lcall
sbb
les
push
das
sbb
cmp
xor
fisubrl
ret
imul
notb
sub
xchg
pop
std
dec
pop
data16
fcmovu
xchg
sbb
and
sub
sbb
or
dec
pop
scas
aam
lods
mov
mov
and
add
int3
call
push
xchg
pop
mov
cwtl
sub
adcb
repnz
mov
sbb
in
add
sbb
aad
add
add
add
add
gs
insl
pop
imul
adc
mov
inc
inc
pop
xor
adc
xor
and
sbb
stos
cmc
inc
sbb
xorl
inc
cmp
jns
into
mov
sbb
dec
mov
jg
mov
leave
cli
jle
push
adc
ds
gs
pop
add
test
popa
out
cmp
cmp
imul
sub
mov
repz
lods
dec
je
ljmp
cmp
cmp
mov
out
inc
jo
and
mov
call
and
in
in
mov
dec
add
call
ja
xchg
stc
adc
dec
iret
into
aam
cmp
fildll
fcomps
and
mov
sub
out
pop
aam
adc
adc
add
rclb
push
rclb
pop
xchg
in
inc
bound
pushf
lahf
pop
lahf
fidivs
cmpsl
imul
les
loope
in
call
mov
out
or
or
mov
repnz
mov
pop
pop
imul
int3
mov
in
push
stos
mov
sub
rcrl
mov
or
rcl
scas
inc
adc
insl
adc
ljmp
mov
lds
mov
jg
mov
mov
pop
movsb
pop
ficomps
push
xchg
fs
cmpsb
sbb
lahf
xor
cmp
jae
mov
pop
out
je
lds
test
stc
inc
xor
pusha
insl
je
sbb
push
fidivrl
stos
dec
loope
adc
pop
je
loop
test
popa
std
mov
incl
ljmp
push
xchg
icebp
push
sub
or
jbe
jb
jmp
fsubl
and
jo
xchg
movsb
cmpl
jl
insl
lds
inc
dec
cld
sub
push
mov
je
rcrl
and
or
push
and
xchg
icebp
mov
leave
stc
lret
add
add
mov
mov
and
subl
call
stos
into
imul
jmp
mov
in
int3
call
sahf
sarl
xor
and
mov
les
cmp
ret
fcoml
je
mov
or
mov
pextrw
mov
pop
pop
xor
mov
mov
mov
leave
mov
sbb
mov
into
repnz
adc
js
push
jae
xchg
stos
push
nop
mov
out
dec
movb
fisubs
mov
mov
roll
scas
test
int3
xchg
inc
xorl
lods
mov
ja
lods
fidivrs
cmpsl
adc
ja
push
xor
daa
dec
cmpsb
js
xorl
test
int3
or
jnp
testb
pop
mov
xor
cs
mov
int
rcll
icebp
dec
mov
movsl
sbb
insb
lock
fstl
and
mov
cltd
mov
push
sar
inc
mov
mov
mov
ljmp
test
clc
mov
nop
insl
push
std
in
test
mov
pop
mov
jbe
hlt
enter
lret
fnsave
or
xor
out
sarb
repz
inc
shlb
bound
int3
fisttpll
xor
mov
fs
lock
xor
dec
add
std
push
incl
incl
incl
shl
add
adc
xor
icebp
lods
addb
push
arpl
push
movsb
push
insl
sbb
fdivrs
insl
push
fisubrs
ss
cmovbe
imull
repnz
mov
mov
fnstsw
fdivl
jmp
jae
into
stos
test
pop
xchg
push
pop
pop
ss
sub
popa
cli
dec
repz
sti
or
dec
xchg
addr16
xchg
rcll
cld
lret
or
xchg
xchg
sub
inc
ja
sub
sarl
cltd
scas
js
pop
jg
push
test
cmpps
aam
push
mov
push
lods
insl
aam
stos
movsl
pop
in
mov
das
or
xlat
ret
fwait
pop
je
cmp
pop
fildll
cmpsl
sbb
jae
lahf
lods
or
incl
call
and
ret
push
hlt
push
icebp
iret
in
ss
dec
sahf
pop
jno
incl
pushl
pushf
mov
jns
sub
xlat
pop
push
lahf
fildl
lahf
loope
cli
and
and
xchg
out
lods
in
pushf
dec
fnsave
outsl
or
or
jmp
pop
insb
push
inc
fstl
aam
ds
ljmp
cmp
cmp
hlt
push
pop
sbb
push
mov
and
repz
or
es
test
inc
test
and
pop
nop
and
sbb
add
pop
jno
je
mov
das
and
das
mov
pushl
into
loop
dec
int3
pop
and
add
enter
mov
stc
lods
scas
imul
mov
mov
push
jnp
mov
mov
bound
and
dec
xchg
mov
jae
mov
data16
push
cmc
in
push
mov
aam
scas
dec
fdivs
shll
lret
out
add
add
add
repnz
xchg
xchg
pop
into
and
xor
lds
aas
jl
out
sbb
ja
jno
sbb
lahf
pop
push
addr16
xor
test
xorb
adc
inc
lahf
xchg
lahf
or
lods
sbb
mov
testb
pop
jno
and
dec
xor
out
mov
mov
ds
fistpll
stos
imul
jbe
add
push
std
dec
add
shll
push
push
mov
inc
sbb
pop
inc
insl
push
out
loopne
xor
call
in
sarb
test
shr
mov
inc
mov
mov
bound
cltd
or
mov
mov
in
shr
lahf
mov
mov
mov
imul
sbb
inc
add
call
xor
jb
aam
sbb
push
movsb
mov
inc
dec
test
out
push
and
sar
xlat
ret
jecxz
xor
stc
sbb
sub
loop
jae
xor
int3
call
jb
cmpsb
jp
lds
add
mov
inc
dec
cmpl
sub
insl
add
insl
xchg
rcl
fsubr
addr16
xchg
pop
inc
sub
fdivs
arpl
test
push
xchg
ds
jmp
mov
mov
jmp
xor
pop
repz
jmp
dec
bound
jp
pop
xchg
aad
out
jnp
call
xchg
add
gs
imul
in
pop
mov
in
xor
mov
lret
push
loop
lds
push
subb
and
out
jbe
nop
push
das
icebp
inc
leave
xchg
mov
xlat
dec
call
or
notb
imul
sub
clc
fdivs
lcall
stos
loop
in
cmp
call
pop
mov
stos
xchg
fadds
sarb
fwait
xor
sbb
popf
pusha
cld
sbb
and
adc
test
adc
push
outsb
xchg
pop
mov
mov
mov
or
mov
push
gs
mov
xchg
sti
push
push
adc
push
idivb
cs
je
push
insl
popf
push
mov
sub
inc
push
insb
pop
or
cmp
popa
pusha
jne
cmpsl
dec
mov
fnstenv
cmpsl
test
ljmp
ss
pop
fsub
ret
mov
adc
mov
mov
call
pop
pop
cld
gs
adc
push
cld
repnz
jae
mov
orl
insb
ja
test
mov
rcl
imul
ja
mov
pop
movsb
jl
cld
cmp
arpl
or
test
adc
jmp
repnz
push
cld
std
stos
movsb
outsl
mov
lret
sahf
dec
aaa
cmpsl
rorl
lea
mov
push
je
dec
adc
pop
mov
es
std
sahf
cmpsb
out
ret
ror
leave
sbb
dec
push
mov
mov
outsl
addr16
ret
aam
int3
add
add
pushf
dec
fstpl
shlb
cmpsl
sbb
sbb
outsb
add
jl
and
inc
mov
int3
add
add
fbld
jno
fwait
add
adc
lret
jne
movsl
xchg
mov
call
in
and
addr16
or
negb
jb
push
inc
mov
insl
dec
cmpsl
roll
inc
lds
pop
push
xchg
movsb
jl
les
out
cld
js
pushf
cld
mov
not
push
xchg
pop
rcrb
in
sub
inc
or
mov
dec
xor
xor
xchg
inc
pop
push
sarl
pop
dec
mov
jo
frstor
and
mov
in
sub
cs
jbe
xchg
pusha
data16
arpl
dec
mov
mov
dec
data16
inc
int3
sti
jns
icebp
std
push
xor
aas
addb
ret
ficomps
mov
lret
add
hlt
lcall
call
push
repnz
out
xchg
popf
repz
sbb
pop
fcmovnbe
lahf
es
and
xor
test
mov
lock
and
rclb
jnp
or
push
filds
xchg
and
sub
mov
pushf
adc
subb
popa
adc
std
and
icebp
cmp
dec
pop
and
and
sahf
sbb
push
mov
call
xchg
inc
push
sub
outsl
rorl
mov
int3
mov
push
xchg
subb
mov
jecxz
leave
sahf
hlt
pop
inc
jbe
aam
and
push
lahf
jae
dec
sub
mov
sbb
mov
stos
jno
cmp
cmp
lea
add
adc
mov
mov
cmp
ret
shll
ds
and
lods
hlt
and
orl
push
fdiv
pop
pop
adc
imul
xchg
sbb
and
push
add
adc
and
icebp
inc
sbb
test
xor
call
xchg
mov
mov
inc
test
out
fimuls
and
in
std
mov
in
iret
mov
dec
and
mov
int
lods
dec
jmp
imul
out
cwtl
je
pop
push
rcrb
xor
stos
roll
clc
leave
add
dec
into
xchg
sbb
loopne
mov
sbb
pop
out
insl
adc
cli
or
dec
insb
push
icebp
pop
fcoms
adc
add
push
mov
cltd
xchg
out
loope
push
loope
inc
push
or
mov
lret
mov
mov
mov
in
dec
cmp
adc
push
push
ret
pop
or
jmp
jno
enter
mov
mov
lahf
pop
ja
dec
in
flds
xor
lock
mov
repnz
jno
repz
testl
shr
pop
mov
mov
mov
mov
iret
pop
mov
mov
dec
push
adc
aas
mov
xacquire
sbb
xchg
xchg
and
popa
mov
mov
out
pop
push
cltd
leave
popf
jl
mov
out
fcomps
icebp
xchg
mov
adc
mov
nop
bound
mov
xchg
stos
push
das
inc
cmc
bound
sbb
jne
xchg
shll
jmp
call
enter
sarb
or
cmp
xchg
jnp
pcmpgtb
cmp
jle
int
lret
test
stos
clc
movsb
cli
mov
and
lcall
fnstenv
cwtl
popa
incl
incl
incl
pusha
ds
outsl
mov
lahf
and
xchg
les
sub
pop
fwait
mov
test
mov
aas
clc
dec
sarb
sub
jg
mov
xor
dec
icebp
ja
fcomp
mov
xchg
jge
jg
sbb
sub
mov
pop
or
xor
push
cmp
inc
mov
and
dec
test
mov
bound
push
jne
jg
xchg
clc
push
dec
arpl
push
jb
call
add
repnz
sbb
out
ret
popa
hlt
shl
out
call
push
inc
lods
lods
lock
push
sub
push
and
je
xchg
dec
cs
or
mov
mov
mov
mov
cmp
mov
lods
xor
sbb
dec
and
mov
mov
or
mov
pop
sub
addr16
jnp
fs
leave
jmp
cmp
pop
cwtl
lods
iret
mov
sbb
or
pop
jb
test
push
fnstsw
cmpsl
test
shr
add
add
sub
fcompl
insb
mov
cli
ljmp
and
popf
add
push
mov
jo
sbb
test
daa
and
in
lea
test
mov
nop
clc
mov
push
loopne
mov
xlat
add
xchg
sub
xor
test
lods
mov
add
js
in
pop
xor
std
dec
jbe
add
out
or
pop
push
jno
jge
std
xchg
mov
jne
or
iret
pop
ja
arpl
cs
jle
sbb
cmc
sahf
int3
add
add
call
cmc
pop
sub
loop
lret
lea
icebp
cmp
testl
mov
aas
cs
outsb
push
and
dec
popf
jbe
pop
inc
push
sti
push
shl
push
mov
push
sbb
dec
rcl
std
incl
incl
incl
pop
aad
push
mov
inc
or
fidivrs
cmpsb
pop
inc
sahf
push
and
fwait
push
mov
loop
mov
repz
addr16
push
stc
ret
and
add
movsl
or
insl
xor
jge
cli
and
push
and
les
nop
mov
inc
sub
fdivrl
push
push
out
in
xchg
mov
or
mov
dec
or
test
sarb
push
imul
pop
jb
push
orl
dec
xchg
sbb
jo
xor
xchg
mov
hlt
xor
jbe
inc
mov
xchg
out
lcall
sub
and
mov
adc
fsubr
cmp
and
std
in
dec
out
dec
out
cld
loope
call
scas
inc
push
push
pop
inc
dec
pusha
mov
cli
jno
int3
add
add
pop
or
dec
adc
xchg
repnz
dec
jl
or
mov
pop
dec
rcrl
ljmp
inc
clc
adc
xchg
sahf
add
movsl
test
add
fimull
movsb
xchg
add
adc
xor
push
sub
pop
xor
mov
cld
cmp
incl
jae
jb
mov
mov
jns,pn
test
jg
sti
fldt
pop
ret
loope
mov
cmc
dec
adc
mov
adc
mov
sub
mov
sub
xor
jne
sbb
cs
pop
in
lea
and
cltd
jne
mov
jne
mov
daa
xchg
push
pop
cmc
xor
mov
dec
lcall
int
cli
popa
repnz
jl
sbb
sub
mov
icebp
scas
xchg
imul
int3
add
aad
mov
and
insb
mov
push
and
and
pushf
movlps
aam
out
mov
pusha
pop
fwait
pop
inc
sbb
ljmp
shl
inc
sub
sti
std
orb
and
mov
lret
xor
iret
add
mov
inc
sbb
jo
mov
rcll
out
sub
lret
addr16
push
rcr
in
test
dec
popa
mov
and
sub
cmpl
leave
push
xor
and
pusha
sub
cmp
dec
pushf
mov
incl
incl
mov
out
clc
xchg
ljmp
cmpsl
xor
inc
cmc
mov
adc
insl
inc
and
dec
out
jnp
pop
jecxz
int3
bound
adc
jecxz
out
xchg
mov
ret
dec
into
xchg
push
sbb
jnp
mov
pushf
mov
adc
jnp
xor
cmp
jo
inc
sub
int3
call
testl
jp
stos
rorb
mov
icebp
filds
je
out
imul
in
mov
xor
xchg
dec
push
pop
sub
or
ret
pop
and
nop
dec
incl
incl
lods
in
dec
push
inc
inc
adc
movsl
xor
call
lret
adc
pop
adc
inc
mov
es
int3
and
pop
movsl
and
xchg
cli
ficoms
mov
mov
call
push
mov
dec
jno
into
stos
inc
mov
hlt
mov
pop
out
fisubrs
movsb
mov
mov
pop
nop
or
pop
gs
rcrb
or
sbbb
sarb
pop
mov
fwait
lea
jecxz
int3
push
cmp
adc
in
push
stos
enter
mov
nop
xchg
push
add
push
push
jg
add
add
add
sub
and
pusha
lret
push
fildll
leave
inc
lret
or
push
pop
add
dec
cmpsl
arpl
clc
pop
xor
add
adc
inc
push
adc
daa
sbb
fwait
adc
loope
dec
aas
push
popf
and
ds
xchg
add
nop
ja
mov
dec
adc
sbb
or
popa
lret
scas
int
negl
aam
je
icebp
scas
push
jae
fstl
fisttpl
int3
je
sbb
mov
int3
add
vhsubpd
nop
pop
xchg
rolb
lods
jl
dec
enter
inc
testb
cmp
rorl
mov
add
pop
jge
xor
mov
adc
push
shrb
xchg
adc
je
repnz
int3
add
add
add
mov
mov
push
push
popf
jo
fldl
fistpl
cmp
popa
dec
lcall
icebp
jnp
insb
insl
iret
cmp
pushf
inc
call
movsl
cmp
arpl
gs
push
xor
into
call
add
loope
xchg
popa
mov
sub
mov
add
icebp
clc
fnstenv
sub
imul
sahf
nop
sbb
or
mov
mov
cli
sub
dec
inc
lea
xchg
or
ja
sbb
mov
adc
mov
pop
mov
mov
mov
movsl
std
dec
cmp
jecxz
out
aaa
je
aad
mov
mov
mov
and
jmp
mov
lcall
les
loop
out
ds
jbe
enter
inc
lret
mov
arpl
dec
mov
adc
clc
lcall
cmp
jb
jae
xchg
aam
push
add
add
add
and
stc
inc
push
push
les
sbb
lock
ss
xchg
daa
fisttpll
mov
mov
mov
loop
out
mov
sub
test
adc
out
xchg
imul
jbe
mov
jbe
test
adc
jo
jl
jmp
mov
int3
rep
lea
mov
adc
push
insl
xor
mov
bound
std
sahf
out
sub
xchg
xor
data16
add
xchg
arpl
push
sbb
mov
mov
mov
pop
cmp
jae
mov
or
pop
add
dec
mov
mov
decl
mov
push
add
add
in
aam
scas
adc
mov
push
xor
cmp
mov
jl
adc
cmpsb
dec
aad
cmp
cmp
xchg
pushf
inc
xchg
and
xlat
repz
push
mov
mov
mov
dec
xchg
mov
fsubrs
and
movsl
fnstcw
mov
call
push
sub
mov
pop
subl
add
push
jg
and
sub
pop
dec
call
mov
cli
jle
enter
mov
sub
xchg
xchg
dec
call
inc
adc
mov
cmc
pop
sub
cmc
mov
xchg
or
imul
pop
sub
int3
call
imul
outsb
cld
xchg
jge
jae
hlt
out
in
out
stos
je
pop
xchg
jecxz
loope
cmp
bound
mov
out
aad
shr
lcall
xor
mov
repz
jl
ljmp
mov
mov
mov
push
mov
or
sbb
pusha
adc
jl
cmpsl
inc
mov
mov
dec
xor
mov
jns
decl
mov
or
rorl
loopne
jo
sahf
repnz
int
lock
push
jmp
and
xor
adc
dec
jl
std
insl
test
or
mov
je
ret
mov
fwait
insb
pop
sbb
sbb
stc
jecxz
adc
xor
movsb
sub
inc
dec
cs
add
shrl
imul
xchg
shlb
inc
sbb
or
loop
and
lea
sbb
xchg
sub
add
push
jnp
and
div
and
cmp
xchg
cmpsb
push
inc
outsl
cld
adc
mov
xchg
out
or
jle
mov
or
xor
scas
out
jb
test
scas
lock
mov
mov
adc
adc
jnp
in
or
insb
jg,pt
dec
jne
add
out
aam
add
and
pushf
inc
sti
adc
mov
xor
inc
fwait
jns
cs
cld
mov
das
jne
andb
sbb
lret
arpl
mov
lock
add
mov
loop
aas
in
mov
das
cld
or
sub
push
ss
andb
mov
cmp
outsb
mov
mov
mov
or
call
sbb
mov
jb
js
mov
and
imul
and
aad
insl
in
data16
sbb
jp,pt
popa
and
dec
pop
repz
pop
xor
daa
xchg
sbb
xor
and
push
sbb
push
in
mov
pop
adcb
add
mov
loopne
scas
into
lret
mov
sub
mov
mov
lret
loop
and
xchg
cmp
or
inc
rolb
xchg
ds
in
pop
adc
test
repz
lret
scas
pusha
pop
nop
inc
pop
sub
fimull
mov
rcr
dec
or
xchg
lods
scas
testb
add
es
xchg
or
dec
mov
mov
sub
dec
jl
dec
pop
inc
mov
cwtl
dec
jle
push
xchg
inc
or
xchg
cmp
fcompl
sub
cs
xor
xchg
popf
fldt
mov
lret
lret
cltd
ljmp
mov
scas
and
jne
cmp
scas
std
dec
insl
push
into
push
ds
adc
in
int3
repnz
popf
daa
jmp
xchg
loopne
call
ret
pop
add
xorb
flds
and
add
mov
cmpsb
in
add
mov
mov
adc
push
mov
xor
and
call
add
sti
aas
mov
push
adcl
out
sbb
imull
popf
or
cmp
mov
xor
pop
inc
xor
push
ds
dec
outsl
stos
xor
inc
incl
mov
pop
push
rol
jo
pop
je
or
cmp
and
push
fdivrs
dec
daa
call
push
sub
mov
jle
sub
mov
testb
jno
fstpl
adc
mov
mov
ror
popa
loop
sub
or
lret
ja
mov
rcrb
add
add
xlat
jle
movq
lods
jnp
push
pushf
or
ss
mov
mov
divb
and
mov
incl
lcall
push
xor
lea
jno
cld
lar
jns
ficomps
icebp
aad
mull
call
jecxz
arpl
nop
fidivrl
pop
les
mov
add
lahf
sbb
outsb
xor
scas
rcl
and
sbbl
jmp
sbb
lock
stc
pusha
xchg
mov
decl
es
or
lret
inc
pusha
adc
mov
push
pop
mov
int3
add
add
dec
fimull
es
lahf
lahf
lret
mov
add
xlat
and
fisttpl
cmp
adc
les
pop
jns
into
mov
cmp
lahf
jne
lods
push
fmulp
push
or
mov
mov
rcr
pop
inc
inc
iret
jo
ljmp
add
or
jns
sahf
mov
jno
xchg
filds
pop
jg
mov
dec
outsl
cltd
imul
jp
cmp
stc
add
cmpsl
jbe
pop
adc
add
aam
mov
fnstenv
mov
mov
std
les
mov
cld
jp
test
push
inc
movsl
xchg
shll
cmpl
fcompl
xor
test
imul
push
call
push
out
out
test
sub
cmp
xchg
mov
jge
inc
push
mov
jne
mov
ret
sbb
iret
jbe
mov
and
jb
add
cmp
and
dec
mov
sub
push
in
movsl
outsl
cmp
psubb
jp
clc
mov
cmc
cs
jl
jle
js
add
fwait
adc
and
int3
call
cld
loop
loope
mov
fwait
pushf
cmpsb
push
fsub
xlat
push
arpl
xlat
sub
adc
xchg
mull
inc
testb
dec
clc
in
dec
mov
ds
adcb
loopne
cs
sahf
pushf
icebp
cmp
inc
mov
stos
xchg
aas
add
js
push
out
inc
std
aas
cmpsl
mov
int
shr
xchg
mov
mov
mov
rclb
sub
cli
arpl
imul
shll
push
pop
aad
popl
xorb
mov
cltd
ljmp
xor
sub
dec
xor
xchg
pop
mov
mov
mov
sbb
or
xlat
cmpsb
call
adc
fnstenv
call
ret
adc
test
sbb
sub
and
enter
pop
dec
cmp
clc
pop
or
push
adc
icebp
out
and
cmp
pop
test
stos
xchg
es
mov
ljmp
xchg
jb
mov
ror
int3
add
rclb
es
out
mull
insl
pop
addr16
jae
pop
mov
jb
cmp
cmc
movsl
arpl
pusha
movsb
dec
fdivrs
aas
or
sbb
cmp
stc
ret
inc
or
inc
push
or
lcall
jmp
mov
cmp
faddp
mov
jno
or
enter
mov
adc
pop
mov
mov
cltd
mov
adc
push
jl
add
jecxz
lret
ja
xor
mov
dec
sbb
out
das
inc
int3
jge
scas
mov
mov
mov
mov
add
inc
or
out
push
test
mov
sub
gs
ret
xor
dec
test
fisttps
aam
lea
repnz
incl
incl
incl
ljmp
stos
xchg
sbb
sbb
xchg
mov
in
sbb
jno
adc
cmp
adc
xor
pushl
test
mov
sub
stc
test
outsb
clc
rcrl
ja
mov
cmp
ljmp
cwtl
cmc
xor
xchg
and
xchg
add
or
imul
pop
divb
loopne
add
or
adc
cltd
sti
push
outsb
sahf
fldenv
cld
das
xchg
mov
fimull
std
sub
fwait
jae
jb
call
lret
cmc
and
in
xchg
enter
fmul
add
add
mov
shrd
call
sarl
inc
daa
jp
sar
lret
dec
xlat
iret
cld
out
outsl
out
add
dec
loope
hlt
lods
jecxz
ds
mov
mov
shlb
cmp
jmp
mov
cmp
sbbb
fsubs
and
push
aad
and
inc
push
inc
xchg
clc
je
mov
cmpsb
in
dec
cmpsl
int
imul
mov
push
call
push
and
and
mov
pushf
movl
inc
push
jb
mov
test
je
xchg
pop
cmp
adc
lcall
mov
or
xchg
sub
mov
fisubl
xor
pop
loop
fnstcw
ja
xchg
repz
pop
pop
cmpb
or
or
cmp
push
dec
js
fisttpl
xchg
mov
int3
call
inc
mov
mov
xor
jg
fcmovnu
lret
or
xor
loopne
sub
mov
rolb
fs
aam
int3
call
add
out
cmp
nop/reserved
xchg
stos
add
sahf
pushl
test
sti
cmc
pop
mov
jb
pop
cltd
ficompl
xor
test
mov
scas
mov
xchg
mov
daa
stc
dec
data16
mov
or
pop
push
dec
or
loop
ds
mov
fwait
lock
test
iret
test
mov
std
mov
pop
inc
das
mov
sub
xor
lods
and
push
mov
mov
mov
mov
push
sbb
mov
out
bound
jne
pop
fildll
js
dec
xor
icebp
fwait
mov
out
cmp
push
inc
js
ljmp
imul
and
add
sbb
sti
xor
aam
push
jge
outsl
rorb
loop
xor
inc
fs
xor
add
into
xchg
into
aas
test
mov
and
lret
loopne
in
sbb
xor
aaa
aam
roll
adc
adc
pop
mov
outsb
mov
fld
adc
lock
push
pop
cmp
lcall
cmp
mov
cmpsb
mov
cmpsb
jmp
std
mov
add
add
push
les
rolb
sbb
bound
push
push
jp
sbb
addr16
pop
orl
and
comiss
jge
scas
sub
aam
sub
in
push
xor
jp
push
mov
mov
cld
mov
inc
inc
imul
pop
cmp
xchg
ss
leave
call
mov
mov
mov
clc
scas
fstpl
out
sahf
cmp
mov
nop
cwtl
mov
cmp
mov
mov
and
adc
add
mov
pop
push
xlat
ret
pusha
jbe
inc
int3
ret
xor
dec
scas
shlb
add
add
pop
dec
stos
daa
or
inc
xor
insl
pop
add
outsb
pop
mov
mov
mov
cmpsl
xchg
icebp
test
cmp
jp
ret
pop
lods
mov
dec
mov
push
mov
mov
jle
push
mov
into
out
in
or
inc
push
or
mov
fdivr
add
add
fs
jge
add
or
loop
mov
mov
sbb
lock
add
sarb
testl
sti
mov
cmpl
loope
call
lds
xlat
stc
fiadds
sub
fnsave
out
add
xchg
mov
aas
test
inc
call
int3
aad
gs
fidivrs
insl
sbb
loopne
rcrb
fidivl
rorb
outsb
sbb
ficomps
insl
add
stc
adc
dec
adc
orb
das
lret
inc
pop
mov
sbb
sahf
xor
lcall
xor
ret
loop
mov
inc
clc
incl
incl
incl
xchg
jne
repz
aas
lahf
ret
mov
and
test
repz
cmp
arpl
xchg
xor
dec
std
inc
cld
test
cli
int3
inc
push
cltd
inc
inc
and
cmp
add
pusha
shll
cmp
stos
push
sub
dec
out
cld
xchg
add
aam
adc
xchg
push
fdivrs
sub
mov
jecxz
repnz
pop
aaa
pop
dec
or
adc
aaa
and
push
push
aaa
or
dec
and
lock
adc
out
dec
jge
int
lds
pop
sbb
stos
push
push
inc
addr16
add
add
add
jp
inc
shlb
popa
jne
leave
sub
push
imul
mov
mov
mov
cmp
fucomip
inc
push
imul
sub
mov
adc
out
push
fsub
push
or
cmpsl
push
lods
out
lds
cld
mov
cmp
idivl
sbb
add
gs
mov
daa
mov
cmp
movsb
dec
sbb
jo
test
adcb
sbb
pop
adc
pop
out
cmc
movsb
xchg
ret
ljmp
jne
loop
xchg
push
icebp
xlat
loopne
xchg
insb
stc
cld
mov
mov
mov
add
stos
sbb
in
lds
pusha
out
or
lods
fsubl
mov
std
or
sub
jne
add
insl
rcrb
jae
mov
into
call
fcoml
aaa
push
dec
std
arpl
xorl
push
inc
ds
jae
int3
lock
push
mov
int3
add
dec
lea
std
ljmp
addr16
inc
mov
les
cmpsb
fsubs
cltd
xchg
shlb
sbb
xchg
sbb
xchg
inc
and
es
mov
push
movsb
rorb
jg
cld
inc
inc
jle
out
xchg
hlt
and
jmp
inc
insb
add
imul
push
push
test
cs
xchg
cmpb
ret
xor
sub
pop
or
jae
jno
in
pop
lock
int3
add
add
orl
lea
dec
jmp
call
fidivl
rcrl
in
popf
push
mov
adcl
xor
lock
sti
lret
pusha
xchg
imul
cmc
push
packssdw
movsl
mov
jmp
mov
push
movsb
imul
lret
fld
mov
lcall
lahf
and
jecxz
xchg
stc
dec
xchg
adc
aaa
mov
inc
adc
inc
adc
incl
inc
mov
insl
sub
push
stos
and
sub
dec
pop
aad
fcmove
add
fmul
sub
repnz
push
adc
cmp
cs
cmp
enter
std
sub
mov
cmpl
out
mov
int3
add
add
test
nop
xor
adc
adc
cmpsl
daa
imull
xchg
in
pop
or
jbe
cmpsl
fdivr
or
jne
lea
daa
fnstsw
or
push
push
inc
test
fdivrl
das
shlb
jp
pop
addr16
pop
out
int3
push
xchg
inc
in
int3
adc
push
in
sbb
in
add
mov
xor
test
sbb
pop
push
insl
ret
pop
out
add
add
dec
push
into
inc
orl
cs
int3
add
mov
popf
push
cli
lret
pop
sub
mov
jmp
jno
in
xor
iret
adc
dec
mov
sub
jp
fmul
xorb
test
inc
or
lods
pop
inc
mov
or
ret
into
fsts
loope
cltd
and
inc
and
mov
cmpsl
sti
movsb
movsl
ljmp
in
fwait
mov
call
push
ret
cmpsb
testb
lcall
push
push
mov
mov
idiv
lds
or
sbb
fstps
das
pop
call
lock
jle
jg
dec
data16
aaa
pusha
mov
aas
cmp
mov
and
xchg
call
repnz
pop
mov
xchg
xlat
jp
push
mov
mov
xchg
xchg
aam
addb
out
test
cmp
in
cmp
push
incl
dec
and
push
int3
or
bound
push
mov
sub
lea
mov
out
rcl
clc
lret
xor
xor
jle
leave
inc
adc
stos
xor
stos
fidivrl
and
cmp
lahf
push
or
mov
mov
inc
cmp
sub
adc
sbb
mov
pop
addb
fcomps
xor
incl
outsb
push
loope
cltd
add
push
sub
mov
mov
push
and
das
push
fdivl
or
xchg
loopne
jo
xorb
repnz
jmp
mov
ss
cmp
add
add
push
mov
pop
jle
fbstp
loop
ljmp
mov
mov
mov
or
addl
push
cmp
int3
inc
pop
es
pop
ficoms
pop
rcrb
fidivl
mov
pop
int
cmp
call
imul
adc
push
lret
std
push
jne
in
cltd
push
pop
movsl
clc
nop
push
mov
pop
inc
xchg
inc
ja
lcall
call
mov
dec
pop
pop
push
lahf
insb
cli
push
inc
pop
mov
mov
mov
push
dec
lods
scas
adc
int
or
push
and
xchg
out
fdivr
dec
into
mov
fsts
dec
imul
pop
xor
inc
mov
cmpl
cmpsb
pop
rol
jne
adc
sbb
add
lret
jecxz
test
gs
lret
cltd
and
mov
jl
sahf
dec
mov
sub
leave
cs
mov
mov
test
inc
xchg
stos
in
orb
adc
jg
sub
pusha
cs
idivb
jp
in
mov
call
gs
cmpl
outsl
xchg
or
decl
pop
cmc
sub
cmp
xchg
aad
xor
sub
outsb
adc
dec
adc
sbb
jge
pushaw
pop
sub
cli
and
flds
test
cmp
pop
repnz
aaa
pusha
or
push
dec
scas
pop
sti
mov
jecxz
cmpsl
mov
loopne
xchg
adc
fstpt
push
leave
mov
dec
arpl
mov
test
pop
enter
pop
xor
and
pop
scas
jno
add
xor
push
jecxz
dec
out
fiaddl
add
gs
mov
inc
mov
lret
jl
push
cmp
dec
pop
movsl
shll
mov
jl
int
xor
pop
pop
aam
mov
mov
mov
cld
mov
ret
fldt
mov
pop
cmp
pop
stos
mov
mov
cli
fs
inc
sub
mov
mov
mov
ret
inc
aaa
in
shrl
push
pop
nop
cs
adc
fdiv
test
xchg
mov
push
push
mov
loope
xchg
mov
fbld
mov
push
cld
ds
jno
jge
jl
cmp
loope
gs
test
push
fcmovbe
loopne
pop
cmpl
add
add
mov
inc
pushf
and
dec
frstor
nop
sbb
fwait
fwait
scas
cltd
lcall
fcomps
jo
out
imul
sbb
cmp
mov
and
push
pop
mov
inc
jne
xchg
testb
push
pushw
enter
add
fimuls
xchg
inc
jbe
out
jp
testl
xchg
mov
sbb
rcl
mov
test
out
aam
push
and
loop
add
sub
ljmp
inc
loop
scas
js
les
add
cmp
out
adc
fistpl
pop
in
adc
movsl
and
lret
call
mov
stos
arpl
loope
mov
and
dec
xchg
ljmp
aas
push
repnz
mov
jno
incl
incl
decl
xchg
mov
in
mov
cmc
sub
pop
inc
push
inc
les
int3
add
add
add
fwait
pop
aaa
cmpsl
xchg
or
inc
into
in
andl
push
jbe
ja
out
mov
leave
xchg
xor
out
xchg
adc
jl
sti
dec
pop
xchg
mov
ret
lret
enter
mov
iret
mov
pushf
js
jmp
cmpsl
mov
or
xor
push
cmp
cmp
and
jnp
jbe
xor
out
fwait
xchg
test
int3
add
pop
mov
in
xchg
stos
mov
call
sbb
sbb
arpl
push
mov
inc
xor
dec
in
pusha
pushf
jle
push
ds
mov
mov
xor
and
adc
mov
adcb
jbe
imull
xchg
pop
jge
in
jae
push
mov
pop
fs
test
sbb
fisttps
sub
fwait
sahf
dec
xchg
ja
mov
ret
add
pop
lds
imul
cmp
ret
negb
mov
mov
mov
inc
mov
xor
push
mov
mov
adc
sbb
adc
sbb
mov
pop
loope
cmp
cld
mov
cwtl
xchg
or
arpl
dec
pushf
mov
cmp
push
sbb
xchg
decb
sub
sbb
jl
mov
sub
sbb
loopne
adc
or
nop
push
push
mov
js
cmp
cmc
ss
xchg
mov
divb
and
xchg
outsb
js
cmpsl
fmul
stc
fimull
test
loop
psubb
sub
pop
lret
adc
repnz
push
dec
sub
cmp
xchg
div
icebp
push
pop
dec
pop
adc
movsb
jmp
aam
pop
sbb
filds
aam
jmp
xlat
fistl
cmpps
aam
lods
mov
stos
pop
mov
push
cld
or
icebp
enter
icebp
xor
push
inc
cmc
pop
add
hlt
enter
xor
xchg
xchg
testb
inc
adc
sub
dec
call
fs
daa
test
insb
sbb
insb
dec
jl
popf
inc
mov
popa
js
test
call
push
push
or
das
stos
or
nop
jecxz
shll
adc
les
orl
dec
xor
pop
sar
xchg
or
xor
repnz
gs
incl
incl
movsl
dec
pop
leave
gs
int3
cwtl
push
xor
mov
mov
test
xchg
es
maskmovq
divl
add
mov
dec
enter
xor
add
iret
daa
cmp
mov
in
jle
add
leave
imul
xor
call
xchg
aad
loope
jmp
shll
fwait
popa
cmp
inc
adc
fldl
mov
mov
mov
push
imul
test
mov
mov
loop
jle
xchg
icebp
dec
xchg
push
ret
inc
adc
ficompl
and
push
and
adc
repz
lods
mov
fimull
add
rcrl
test
xchg
jge
arpl
icebp
insb
jae
cmp
lods
call
dec
sub
int3
sub
out
sar
sub
cs
in
adc
cwtl
xchg
bound
xor
scas
pusha
loop
ret
pop
adc
pop
fidivrs
scas
and
addl
movsb
cmc
mov
loope
data16
pop
mov
mov
rolb
enter
push
push
mov
inc
cmp
fwait
out
and
fstl
push
sub
movsl
lods
out
div
int3
add
add
xor
sub
stc
xlat
lea
mov
mov
ja
movsb
sti
sub
xchg
jmp
clc
xor
popf
cmpsl
push
arpl
sbb
je
inc
fadd
into
mov
pusha
jbe
jmp
sbb
cwtl
push
add
jecxz
cs
outsl
in
dec
sub
out
add
imul
shlb
cmp
mov
xor
add
stos
xor
loop
mov
adc
inc
mov
inc
cmc
mov
sahf
ret
xlat
dec
or
and
mov
adc
inc
jg
mov
int3
in
mov
mov
and
test
ficoml
and
ljmp
sub
cmp
idivl
int3
add
add
push
stos
pop
loopne
inc
adc
pop
scas
sbbl
das
cmp
and
loope
mov
fbld
pop
pusha
mov
je
stos
push
outsl
xchg
ss
and
ja
lcall
cvtdq2ps
pop
xlat
fs
ds
push
jmp
mov
dec
or
mov
sub
in
rcrl
pop
out
scas
rorb
mov
push
sbb
sar
ja
inc
repz
jmp
mov
fs
push
jns
stc
jmp
push
imul
push
mov
mov
outsl
sbb
adc
clc
mov
cmp
mov
pop
adc
xchg
enter
call
push
jle
push
push
mov
rcrb
sbb
xorb
cwtl
aad
call
call
ljmp
jle
xor
jp
clc
fnstcw
std
adc
sub
insb
push
das
jb
mov
xchg
stc
mov
lods
jmp
pop
ret
inc
push
subb
mov
sbb
add
std
pop
lahf
adc
and
pop
cmp
lcall
mov
mov
jge
add
add
pop
movsb
cmpsl
mov
shlb
or
sbb
or
sub
pop
call
sbb
add
add
jmp
push
cltd
iret
jecxz
inc
loope
fistpl
xchg
faddp
adc
push
cmc
sbb
fs
adc
adc
mov
sub
jecxz
xchg
pop
mov
jmp
lods
dec
inc
lock
test
ffreep
mov
cs
mov
int
add
ljmp
or
mov
mov
mov
xor
or
mov
mov
mov
outsb
stos
bound
fldcw
mov
cli
subb
add
hlt
clc
mov
test
jns
daa
ljmp
mov
imul
movsb
xor
filds
out
loopne
push
int3
add
add
jp
push
mov
loop
mul
inc
sti
lds
aad
dec
push
or
ret
sub
inc
cld
pop
hlt
mov
xor
repnz
xor
lods
push
xlat
jle
fwait
lret
sar
mov
inc
shrl
out
cmpsl
ss
outsl
repnz
sub
imul
push
jne
shrl
fs
imull
sbbl
pusha
cmp
mov
mov
sub
in
shl
jg
mov
dec
insl
popa
adc
cmc
test
cmc
icebp
pop
std
int
sbb
cmp
jae
push
fsubr
mov
push
mov
pop
outsb
fidivl
loopne
loopne
insw
into
jmp
gs
sbb
sbb
sub
dec
les
aam
int3
ss
mov
inc
int3
add
add
add
icebp
xchg
insl
sub
pop
testl
negl
cld
in
cmp
xchg
dec
dec
scas
scas
jg
pop
fcomip
cmova
daa
lcall
fistps
das
mov
push
out
data16
sub
mov
lret
push
jb
popf
in
pop
movsl
cld
jmp
test
dec
or
ss
getsec
inc
hlt
loop
pusha
std
mov
sarl
or
add
call
fildl
dec
xor
or
cmp
rolb
pusha
les
subl
cs
in
sub
adc
incl
incl
jmp
xchg
in
int
or
add
add
das
subb
dec
pop
cmp
mov
outsl
call
jnp
rolb
fcomip
inc
popf
push
scas
daa
inc
pusha
push
jb
or
mov
mov
cld
pop
pop
ret
rcrl
sbb
mov
xchg
scas
or
mov
aaa
and
and
cmp
lahf
xchg
in
sub
mov
shrl
enter
push
jns
call
adc
notl
popa
adc
enter
rolb
jb
outsb
out
mov
mov
mov
or
ja
dec
xlat
stos
or
sbb
imulb
daa
ficoms
fwait
inc
jb
dec
outsl
xor
mov
adc
in
lock
dec
dec
sbb
and
int3
loop
in
push
push
test
sub
mov
mov
mov
js
sbb
outsb
js
inc
lret
shl
dec
pop
insl
dec
mov
jnp
out
xchg
outsb
or
xor
roll
xchg
jae
mov
cli
out
mov
mov
mov
and
add
jl
inc
mov
push
pushf
mov
cmpsl
das
pop
imul
cmpsl
mov
push
cmp
xchg
mov
pop
xchg
int3
js
cs
cwtl
pop
inc
ret
into
aaa
cmp
mov
sbbl
xor
mov
and
rorl
jge
mov
das
adc
inc
jecxz
fstps
inc
pop
cs
fimuls
xchg
and
xor
jae
iret
cmp
adc
decl
mov
or
xor
or
aam
frstor
cmp
stos
orb
cmp
fs
mov
mov
enter
shll
sbb
xor
js
xchg
das
call
push
in
in
pop
or
xchg
insb
sarb
push
dec
sub
mov
or
sti
push
xchg
lds
cmp
out
pop
xor
mov
mov
add
push
jl
jb
mov
or
popf
add
jge
cmpsb
daa
sub
inc
push
xchg
ficoml
inc
and
insl
mov
inc
mov
cld
push
sbb
testb
mov
adc
push
call
out
aas
insl
jae
sbb
cmp
or
js
jp
jl
sti
jecxz
ret
cld
jbe
cmp
mov
pop
int3
test
int
xchg
call
icebp
adc
pop
pop
mov
lea
lock
test
hlt
add
cmp
in
xlat
dec
sub
cmp
sbbb
mov
rcrb
cmp
mov
mov
pop
xor
and
xlat
lock
or
mov
adc
cwtl
enter
out
addb
int3
mov
ret
sub
std
cmp
sub
pop
pushf
rcll
mov
pop
sbb
lods
sbb
shlb
mov
arpl
cmpsl
sahf
stc
pop
push
xlat
fimuls
ret
sub
mov
adc
call
aam
sub
insb
scas
fidivl
and
add
repz
arpl
add
stc
bound
cli
mov
sub
aam
call
adc
mov
shr
adc
add
add
add
xchg
sbb
incl
incl
js
std
hlt
cmp
imul
sbb
jo
mov
dec
pop
out
icebp
dec
lahf
xlat
lret
mov
outsl
jp
add
fwait
test
inc
mov
es
cwtl
push
ja
xor
int
ret
ss
add
jae
repnz
jp
cmp
jle
cld
ret
call
outsl
rcrl
roll
nop
sbb
adc
aad
into
int3
or
cli
push
mov
xor
jmp
mov
pusha
or
xchg
dec
sti
mov
ljmp
pop
sub
sahf
xor
jae
test
call
cli
jp
clc
jl
cmpsb
push
dec
inc
icebp
fdivrs
icebp
push
dec
dec
cmc
stos
mov
push
push
jbe
adc
addl
pop
xor
sub
cld
leave
lcall
leave
and
popa
data16
jae
adc
mov
pmaddwd
add
add
mov
shll
jp
adc
sub
cwtl
hlt
jl
jo
ds
xchg
in
xlat
mov
mov
xor
ret
shlb
mov
xor
test
lret
test
fnstenv
stos
inc
insb
inc
mov
add
dec
lahf
dec
imul
decb
mov
lret
int
inc
xchg
jmp
in
lret
cli
or
sbb
decl
push
les
cmp
mov
dec
sub
inc
int3
xchg
push
lds
mov
and
cmp
orb
sbb
int
shlb
dec
popa
jmp
add
push
and
mov
xchg
cwtl
call
add
or
jge
dec
stos
cmpsb
adc
stos
push
and
cmp
aaa
add
ret
adc
or
dec
lret
jg
aas
jl
pop
pop
pop
pop
leave
mov
dec
and
mov
pop
enter
mov
sub
jp
jp
in
sub
push
pop
stc
int
xchg
dec
pop
adc
jl
cwtl
cli
movsl
add
mov
jg
mov
mov
cld
lods
or
mov
repnz
sub
mov
mov
and
fadds
push
cs
test
ja
add
mov
stc
cltd
in
mov
sti
loopne
push
ret
repnz
dec
mov
repz
mov
mov
sbb
sbb
pop
sarb
and
lret
adc
sbb
push
sub
mov
mov
jns
incl
incl
sbb
inc
jl
and
xor
fs
xor
sarl
aas
push
andl
repz
sbb
push
int3
push
jb
or
shl
sub
in
cmpsl
pop
shll
xchg
pushf
mov
jbe
sub
add
add
icebp
inc
pop
cltd
sub
xor
cmp
int
push
repnz
jmp
loop
push
loopne
stc
jp
ja
lds
pop
mov
dec
xchg
imul
dec
jnp
jmp
fmull
sti
rol
mov
jae
pop
int
cli
pop
jbe
cwtl
push
mov
or
call
jne
in
pusha
jae
jl
mov
iret
jae
pusha
aad
mov
into
xchg
sub
mov
test
xor
mov
inc
fsubs
test
jo
xchg
iret
repz
pop
dec
out
rcll
mov
pop
add
xchg
dec
insb
push
shlb
mov
lods
nop
dec
jb
dec
push
shlb
mov
xchg
push
push
mov
ret
pop
rorb
fucomip
add
add
pop
cli
dec
test
scas
mov
in
xorl
int
fucom
rcll
lea
and
pop
pop
inc
cmc
iret
loopne
xchg
xchg
loopne
imul
push
inc
and
jmp
jg
add
add
mov
sub
mov
sti
cmpsl
aaa
scas
out
rcrl
in
arpl
sbb
mov
push
in
movsb
xchg
lds
shr
inc
adc
push
fcompl
cmpsl
and
cmpsb
dec
in
leave
out
hlt
and
and
or
jnp
cmp
rcl
jnp
sub
arpl
mov
mov
int3
add
sub
arpl
scas
jno
dec
dec
dec
and
mov
mov
ret
aas
xchg
sbb
push
inc
std
lea
inc
mov
xchg
push
adcb
test
push
test
mov
push
and
test
add
fistps
stos
push
movsl
pop
sub
jmp
sti
xchg
rcrl
lret
cwtl
sahf
xlat
or
or
sarb
push
into
pop
sbb
std
add
iret
test
int3
add
add
xchg
xchg
daa
jle
addr16
insl
outsb
sub
adc
pop
dec
jmp
sub
pop
and
movsl
daa
sbb
inc
movsl
xor
fidivrs
mov
and
ror
imul
push
movsl
xchg
decb
mov
insb
xchg
insb
shrb
push
inc
iret
and
sbb
mov
cmp
fmull
cmpsl
outsl
push
xchg
lods
xchg
mov
gs
xchg
divl
adc
cmpsl
fwait
inc
mov
aam
int3
call
scas
out
test
shlb
add
add
mov
fbld
mov
dec
je
or
loop
scas
fcoml
and
pop
nop
pop
movsb
cmp
xor
pusha
mov
push
fdivrl
inc
cmpsl
scas
jge
leave
out
add
ja
pop
jnp
cli
int
fisubrl
and
add
imulb
iret
add
in
jg,pn
or
daa
push
aas
or
push
fnstsw
dec
pop
popa
rolb
daa
dec
inc
js
add
add
mov
add
int3
lahf
mov
aam
lods
jns
cs
lea
out
mov
movsl
nop
dec
and
imul
lods
hlt
or
push
call
ret
popf
rcrb
mov
sti
gs
mov
xorb
pop
push
leave
xchg
fs
repnz
decl
sbbb
insb
popl
ret
add
loop
frstor
bound
int
enter
jp
cmp
call
inc
add
and
add
add
inc
mov
outsb
fcoms
movsl
jg
xorb
test
and
loopne
jne
xor
popf
stc
or
push
out
pop
xchg
in
pushf
sahf
cli
ret
jnp
sub
jecxz
scas
pop
and
push
cmpsb
xor
mov
xchg
xor
adc
mov
or
push
incb
hlt
add
sbbl
insl
or
rolb
push
jmp
cmp
test
popf
lcall
add
enter
mov
jecxz
sub
jp
arpl
repnz
adc
pop
add
mov
notb
add
mov
mov
jae
lret
pushf
xchg
les
dec
push
dec
mov
jbe
xlat
cwtl
lret
dec
hlt
xchg
xlat
sub
cmpsb
mov
mov
pop
lock
lea
lds
dec
sar
incl
push
jae
movsb
cmp
dec
cs
or
dec
jle
dec
cmc
dec
cli
inc
push
rcrl
ljmp
fs
push
sbb
mov
adc
mov
mov
mov
push
cltd
push
pop
and
pusha
sbb
adcl
insl
adc
or
leave
inc
adc
or
ja
shrl
cld
jle
call
je
mov
mov
jg
pop
nop
enter
imul
push
mov
in
inc
cltd
sub
in
xor
dec
loopne
pop
loopne
push
lods
ljmp
sarl
add
add
add
adc
test
jge
jmp
mov
mov
xchg
sub
incl
pop
dec
aaa
pop
pop
sbb
jmp
xor
dec
popa
xchg
fiaddl
jmp
loop
lods
ljmp
add
xor
mov
in
pusha
dec
sbb
jle
pop
mov
pop
add
jg
push
notb
shll
iret
jle
push
clc
dec
push
das
and
jns
in
xor
push
push
mov
and
cmc
cmp
push
sbb
test
jp
lcall
cmp
sub
mov
sbb
test
add
mov
jl
orl
pop
lea
xor
inc
movsl
ret
xchg
sti
lret
movsl
lods
xlat
inc
fdivs
hlt
pop
mov
das
and
mov
popf
add
mov
daa
push
and
nop/reserved
sahf
fisttps
xchg
ret
pop
mov
adc
add
hlt
lea
sti
js
jbe
inc
enter
std
popa
cmp
add
mov
addr16
push
iret
js
lods
sbb
add
add
stos
fucom
jbe,pt
add
sti
push
mov
add
inc
fs
xchg
jae
sbb
test
outsb
or
cmpsb
cmp
mov
adc
pop
push
sub
icebp
pop
xchg
icebp
jg
cmp
pop
outsb
cmc
mov
mov
fsubrs
mov
decb
xchg
jns,pt
jns
adcl
xchg
jge
inc
jo
add
add
push
cmp
movsl
mov
shll
mov
imul
dec
ljmp
insb
call
adc
cld
stos
sub
out
cmp
jle
cmp
ficomps
int3
mov
cmp
mov
mov
shll
and
fsubl
movsb
add
aaa
jle
outsl
jbe
ja
jp
call
cmp
mov
imul
call
fstl
int3
push
loope
push
ljmp
cmpsl
or
pop
cmp
decl
andl
mov
popaw
push
movsl
xor
ficoms
leave
mov
mov
inc
es
push
fstps
outsl
loopne
fsubrp
test
dec
insb
and
xchg
cmp
mov
dec
ljmp
mov
xor
stc
lcall
sarb
or
sbb
xchg
jle
mov
insl
lods
pop
iret
into
imul
inc
and
rclb
cmc
in
or
adc
out
add
jb
cmp
jne
push
loopne
outsl
into
or
and
lret
int3
add
aam
sbb
inc
daa
sarl
xor
and
incb
dec
mov
or
cmpsb
inc
push
mov
fs
jo
mov
lock
mov
inc
mov
cltd
call
mov
sub
adc
pop
push
imul
ja
rcrb
jl
pop
fnstsw
and
xchg
nop
cld
adc
int3
add
pop
jo
test
and
outsb
subb
adc
push
mov
dec
dec
push
mov
push
xchg
cli
aas
mov
add
insl
sti
ja
mov
xor
sar
add
data16
sbb
in
movsb
cmp
or
mov
mov
mov
mov
inc
mov
popa
rol
jno
push
pop
pop
mov
or
push
int3
mov
ror
enter
dec
fisubrs
mov
ja
cmp
mov
lods
lcall
cmpsb
adc
aas
push
scas
lock
pop
push
add
insb
inc
mov
dec
add
jno
sahf
mov
sar
xor
fsubl
mov
insb
sub
jecxz
sti
adc
mov
test
dec
or
jp,pn
popa
test
adc
popf
movsb
aad
imul
ds
pop
pop
fisubs
dec
xchg
push
enter
dec
iret
cmc
dec
jbe
mov
mov
mov
mov
jbe
or
addr16
jno
push
add
inc
adc
fcomps
pop
mov
into
clc
inc
add
pop
cld
movsb
sub
mov
sub
inc
mov
sahf
cs
and
pop
adc
rclb
jle
int
cmp
mov
in
fistpl
pop
scas
mov
cmpsb
pop
mov
sub
incl
lcall
lret
dec
imul
jo
aaa
xchg
fdivs
stos
mov
or
fdivp
push
xchg
mov
scas
stos
fstpt
cmp
fs
adc
dec
lret
xchg
xlat
ds
sbb
int3
call
hlt
push
adc
push
inc
in
jge
xor
pop
xor
mov
std
pop
roll
jl
loopne
test
dec
cmpsb
xchg
mov
lods
out
add
es
xchg
ss
lds
es
cmp
inc
pop
cmp
test
dec
test
and
enter
add
push
lahf
rcrl
mov
gs
mov
mov
shrl
push
in
fistps
js
test
int3
mov
mov
mov
sbb
ja
scas
dec
mov
fldenv
call
pop
dec
in
pop
ja
xor
or
repnz
lds
sbb
cmp
fs
enter
cmpsb
dec
push
fldt
and
dec
aam
cld
fwait
add
xchg
out
lock
inc
fs
das
lahf
pop
or
fwait
mov
scas
loope
popf
incl
lcall
adc
daa
mov
icebp
add
mov
jo
leave
daa
push
scas
mov
je
andl
incl
les
xchg
lcall
mov
out
jmp
mov
push
fiaddl
pop
iret
jp
loope
mull
dec
call
pop
cmpsb
cmpsb
lds
test
mov
add
outsl
outsl
sub
sbb
mov
dec
push
xlat
in
cmp
add
inc
rcrb
and
sbb
inc
les
dec
sub
imul
dec
pop
sub
xchg
arpl
addr16
adc
mov
pusha
jmp
push
lock
incl
fistpll
or
or
test
xchg
mov
push
das
shrb
push
in
xchg
aas
shrb
mov
out
cmp
inc
cmp
cmpsl
pop
daa
clc
jp
fcmovnbe
jae
mov
cmc
out
pop
addl
or
rcr
xchg
repnz
fbstp
call
rorb
add
jo
jg
xchg
fs
popa
push
jno
jl
ljmp
push
push
notl
xlat
das
cwtl
xchg
js
mov
mov
out
or
pop
lcall
xor
mov
mov
add
push
popf
sub
cmc
outsb
mov
sbb
push
dec
pop
push
pop
cld
xor
mov
push
shll
and
fistps
in
test
mov
ret
imull
ja
or
js
adc
dec
lea
in
insb
mov
cltd
mov
inc
dec
or
inc
push
aaa
push
out
add
xchg
hlt
jae
or
or
rcll
loop
call
dec
aam
cmc
les
jnp
inc
data16
call
js
in
leave
jo
dec
pusha
into
je
testb
inc
lahf
cmp
int3
cli
mov
jmp
std
jne
add
add
mov
enter
bound
xor
mov
movsl
lds
push
outsl
enter
insb
or
inc
mov
das
clc
in
inc
popf
add
call
push
iret
jns
mov
aam
push
jl
lret
cmpsl
fmuls
std
mov
fdivs
jb
add
imul
rclb
or
add
push
mov
dec
out
fstl
xor
jne
adc
aad
xor
repnz
in
scas
aas
pop
jmp
rcll
sbb
add
pop
cltd
fsubrs
or
inc
popa
fucomip
int3
call
pushf
pusha
mov
test
mov
idivl
lahf
sbb
clc
arpl
xchg
clc
fiadds
cmova
mov
out
inc
xchg
mov
fucomp
sbb
or
imull
mov
imul
out
es
jno
imulb
inc
outsb
jns
cmpsl
xor
lcall
stos
in
mov
pop
cmp
loopne
cmpsb
call
jl
dec
push
xor
fcomps
cmp
scas
loop
or
daa
data16
incl
incl
xchg
repnz
stc
iret
or
out
xchg
or
hlt
xchg
outsb
pop
sbb
push
sub
add
fwait
imul
push
jle
daa
cld
mov
cmp
or
mov
cmp
incl
incl
lcall
inc
es
pusha
dec
repnz
inc
ret
data16
iret
mov
pusha
out
repz
mov
aad
adc
int3
add
add
add
jl
divl
sub
shl
sarb
push
jnp
and
inc
pop
sub
imul
push
push
insl
jne
sub
fwait
inc
sbb
xchg
inc
ret
jns
add
xor
movl
call
int3
leave
out
loopne
or
push
jmp
clc
or
leave
and
enter
imulb
nop
inc
mov
cmc
outsb
cmp
les
test
adc
nop
add
orl
addr16
out
xor
push
sub
cs
jge
mov
add
sbb
cmp
xchg
xchg
jg
enter
push
jae
mov
or
call
xchg
scas
scas
and
sti
lcall
loope
mov
mov
mov
dec
out
mov
data16
out
cwtl
sti
pop
iret
leave
mov
pop
sti
aad
dec
shll
inc
xchg
xchg
test
sub
into
lods
dec
lret
cmp
sbb
pushf
xchg
in
mov
inc
ja
dec
adc
mov
add
iret
ja
xchg
pop
mov
sti
adc
cmpb
movsl
popf
jae
stos
pop
sbb
ret
push
into
jmp
ss
dec
faddl
mov
lock
frstpm(287
mov
push
js
or
aaa
sub
mov
popf
lea
sbb
maskmovq
divl
and
aam
xor
push
flds
out
mov
mov
xorb
lods
fcmovu
and
xchg
ds
cmp
nop
mov
push
sarb
adc
xchg
lcall
mov
dec
mov
pop
pop
mov
int3
call
mov
les
insb
cmp
lea
sbb
cmp
clc
jl
ror
adc
mov
out
jle
mov
call
cmpsb
push
jmp
inc
jmp
adc
test
add
lods
jle
cmc
mov
push
mov
and
jg
cs
mov
lock
push
out
jno
pop
xor
rcrb
xor
fsubrl
adc
test
outsl
xor
imul
inc
jl
mov
mov
xchg
xor
int
dec
or
fistps
xor
aas
pop
outsb
xchg
leave
mov
aas
outsb
sbb
push
inc
nop
sti
scas
cmp
xchg
test
xchg
push
shl
dec
xlat
ja
mov
sbb
push
jnp
outsl
mov
ss
inc
xchg
mov
cli
inc
inc
mov
sub
fwait
mov
jo
das
pop
std
cmp
call
gs
sub
mov
push
lods
repz
mov
push
arpl
lahf
or
inc
imul
sbb
mov
dec
sub
in
in
pop
enter
lds
sarb
call
add
pop
insb
xor
mov
pop
xor
xor
or
mov
sub
xchg
out
lret
adc
pop
jmp
xor
push
scas
test
cmp
mov
pop
dec
sub
xchg
and
incl
decl
and
icebp
dec
mov
les
shll
jg
or
daa
mov
sbb
filds
pop
dec
aas
mov
call
je
lods
aam
ja
add
mov
insb
push
and
mov
cli
das
imul
dec
enter
imul
addr16
loop
lods
fistl
inc
xchg
and
push
incl
incl
ljmp
mov
mov
jg
out
cmpsl
sub
adc
sub
outsl
lods
fdivrs
dec
pop
push
pushf
adcb
add
out
pop
es
test
jo
ds
adc
movd
mov
or
inc
bound
xchg
lcall
add
add
and
lods
mov
jge
push
sahf
mov
ret
outsl
aas
dec
jp
loope
outsl
call
mov
into
je
sub
loop
leave
repz
push
out
mov
test
push
push
dec
mov
mov
xchg
dec
push
mov
xchg
ljmp
aaa
push
fwait
cmp
mov
filds
fld1
or
mov
int3
mov
mov
stos
lods
popf
add
cmp
lds
mov
test
dec
pop
sbb
arpl
pop
or
int3
call
int
jp
js
jns
cmp
jns
sbbb
aas
call
int
mov
scas
push
imul
jp
add
cwtl
cmp
movsb
in
test
cmp
call
add
add
cli
adc
icebp
or
idivl
lahf
or
aaa
and
loope
add
add
mov
ret
inc
cli
and
mov
push
popf
xlat
xchg
int3
add
xchg
jne
gs
int
adc
dec
sahf
jbe
lea
jle
stos
jp
int
rcl
and
xchg
into
cmp
sbbl
jle
rol
jno
loope
jnp
lods
sbb
out
pop
push
lods
push
movsl
xchg
or
je
stos
loope
cmpsl
rcr
mov
loop
clc
sub
clc
pop
dec
sub
sub
jo
int
ror
cmp
mov
fcomi
pop
cli
cmp
xchg
mov
inc
cmc
pop
pop
mulb
insl
push
insl
sbb
mov
cmp
sbb
lods
add
int3
add
pop
jp
jnp
andb
aam
jge
xchg
mov
push
and
mov
push
sbb
pop
and
lds
test
add
add
add
hlt
cs
and
stos
rcrl
shlb
iret
dec
mov
pop
and
sub
cmp
mov
sub
repz
or
xchg
dec
stos
lds
cmp
rcr
inc
sbb
cmpsb
cs
lods
jg
jbe
daa
std
jns
add
push
add
xlat
jne
push
add
add
adc
lea
inc
test
sbb
jg
test
sbb
mov
cmp
sbb
cltd
mov
orb
rol
popf
sahf
inc
cmp
dec
mov
lret
int3
pushf
in
cltd
addr16
sahf
or
mov
xchg
pop
into
les
sbb
adcb
mov
mov
xchg
lret
ja
adc
int3
loop
mov
js
and
adc
and
test
xor
fwait
int3
into
mov
xchg
fdivs
inc
outsl
mov
pop
pusha
jae
add
stc
inc
lahf
mov
push
les
pop
add
mov
addr16
push
and
or
add
add
add
mov
insl
inc
mov
push
cmpsl
mov
mov
movsb
sub
push
hlt
sub
jo
adc
and
xchg
xor
sub
jne
cmpl
mov
adc
lods
and
loop
iret
dec
call
lcall
fldt
int3
xchg
ret
lods
stc
dec
and
inc
out
jg
loope
jno
add
or
mov
or
push
push
jecxz
mov
xchg
aad
mov
mov
pop
icebp
test
mov
fbstp
sub
jl
cmp
push
fcmovu
lahf
out
test
adc
movsb
push
push
xchg
inc
movsl
outsl
and
test
mov
cmp
jmp
fadds
lahf
daa
xor
sbb
bound
test
push
mov
divl
addr16
pop
jecxz
enter
adc
mov
cmp
adc
dec
std
push
fdivrs
cwtl
clc
and
addl
out
jb
ss
adc
shll
xchg
subl
cld
fmuls
lds
add
inc
stos
sub
push
popa
inc
push
int3
and
test
add
xor
fidivl
mov
out
fistpll
push
hlt
fcmovb
ss
fcompl
in
adc
xchg
mov
sub
push
in
lods
in
pushf
mov
jno
std
add
loop
arpl
mov
in
fs
imul
int
xor
or
push
test
or
push
pop
xchg
lds
xchg
ret
pop
xor
int3
add
scas
insl
and
cmpsl
push
shrl
sbb
mov
ret
mov
xor
shll
lock
sbb
testb
mov
pushf
xor
mov
repnz
iret
decl
add
cltd
jle
fdivl
movsb
movsl
xchg
call
int3
mov
shlb
jae
dec
icebp
and
jmp
clc
mov
movsb
dec
ret
pop
mov
into
iret
loope
mov
es
loop
xor
inc
insl
inc
arpl
ret
stc
xchg
pop
iret
test
movsl
xor
int3
xor
test
ficompl
mov
int3
test
inc
push
add
fisttpl
std
out
iret
mov
mov
push
adc
call
int
xchg
and
daa
aad
decl
mov
inc
mov
addr16
mov
stos
xlat
push
adc
pop
inc
jmp
xor
jmp
enter
mov
repnz
and
xor
xchg
pop
dec
sbb
test
fcompl
sahf
test
and
fimuls
lcall
jge
ja
dec
stos
mov
cs
cs
push
jns
cmc
xor
sub
rorl
rol
dec
adc
mov
push
icebp
enter
cs
call
jnp
cmp
insb
jne
addr16
jb
fs
in
lea
in
jno
adc
push
bound
push
loope
mov
mov
call
push
jns
je
mov
push
icebp
fsincos
and
mov
dec
fwait
movsb
popf
popf
jp
addr16
call
mov
ljmp
out
sbb
je
mov
ret
xchg
sbb
push
filds
repnz
rol
xor
das
hlt
push
in
test
lahf
rcll
mov
in
aaa
add
pop
repnz
mov
loope
enter
adc
loop
fwait
pop
ljmp
pop
loope
stos
pop
arpl
ret
cltd
cli
pop
ret
mov
add
add
jecxz
pop
cmpl
sbb
dec
sbb
pop
testb
cs
fcmove
xchg
dec
push
test
mov
jno
dec
or
inc
cwtl
addr16
lret
dec
lahf
ret
sbb
decl
sub
sub
mov
in
sbb
insl
pop
or
arpl
lcall
sub
xor
test
dec
mov
inc
add
dec
mov
mov
stc
jno
jne
xor
les
and
daa
push
mov
fidivrl
cmp
mov
pop
cmp
adc
jg
cmp
pop
shrl
inc
ret
or
add
xor
lahf
rcll
daa
fdivrs
leave
vdivps
mov
cmpsb
pop
push
dec
pop
xchg
adc
inc
inc
loopne
push
lods
leave
fisttpll
mov
pushf
mov
js
xchg
pop
lcall
or
add
js
sub
mov
cmp
lods
cwtl
add
inc
pop
cmp
fiadds
mov
mov
mov
jp
xchg
add
cli
and
push
cs
jle
xchg
xorl
outsl
xchg
repnz
daa
arpl
lcall
out
cmp
xor
jl
movnti
inc
pop
ret
sub
or
dec
mov
enter
addl
sbb
das
lret
scas
lret
das
dec
cmovb
and
xor
sub
test
jb
icebp
push
sub
in
bound
or
lock
call
loope
inc
sar
inc
push
mov
shlb
cmp
movsb
inc
mov
repnz
inc
jno
out
fldt
ret
int
or
testb
push
dec
hlt
mov
pop
mov
xor
xchg
int3
mov
pop
movsb
mov
xchg
sbb
fs
fidivl
test
or
nop
mov
sub
stos
cli
xchg
pop
sbb
sbb
dec
inc
dec
sti
dec
inc
and
btc
nop
cmpsl
je
imul
cs
ret
and
js
mov
mov
mov
scas
jo
and
clc
jg
inc
repz
int3
mov
xor
repnz
xor
pushf
fisubl
xchg
cmp
das
lahf
jns
in
loop
out
ret
or
xchg
hlt
push
mov
xchg
repz
push
jmp
and
mov
js
cmpsl
popa
adc
aas
or
popf
sub
xchg
or
push
cmp
movsl
push
lock
mov
push
inc
mov
mov
add
add
push
mov
mov
mov
rol
adc
in
push
xchg
aaa
jnp
lods
loopne
out
je
pop
out
addb
arpl
jecxz
test
les
rorl
sub
dec
jae
add
lods
pop
fucomip
cmp
push
decl
bound
mov
imul
inc
add
les
sub
fisttps
sbb
movsb
mov
ljmp
jp
inc
rcl
imul
dec
lds
scas
push
mov
jmp
pusha
bound
inc
fistpl
adc
mov
mov
mov
ljmp
xor
mov
cld
in
mov
or
mov
xor
arpl
jp
ja
outsl
iret
shrl
sbb
call
hlt
movl
jne
push
xor
xchg
push
cmpb
cld
lods
repnz
stos
cltd
xchg
jb
mov
mov
dec
jbe
decl
bnd
inc
mov
pop
je
or
lcall
scas
sub
add
push
mov
lcall
test
jg
push
adc
mov
mov
cmp
add
xchg
cmpsl
repz
dec
mov
jmp
hlt
sub
sbb
sbb
jb,pn
or
adc
in
imul
add
push
rcrl
movl
push
popf
pop
push
call
lret
insl
in
pop
aaa
xor
mov
xor
lock
in
xor
movsl
fs
mov
inc
push
cmp
movsb
push
xlat
jns
xor
xor
xor
adc
add
dec
xchg
jbe
push
cmpsb
mov
mov
push
jnp
mov
lcall
ljmp
xchg
push
mov
mov
fsts
mov
mov
mov
ficompl
outsb
pusha
js
cli
out
sbb
sbb
cmp
data16
inc
fs
xchg
jbe
jns
jmp
fidivs
sub
inc
lret
out
iret
adc
pop
sar
dec
push
jmp
cmp
outsb
mov
ret
cmp
sbb
push
outsb
push
stc
fisttpl
std
call
xor
add
add
cs
and
mov
ja
out
jecxz
into
adc
filds
insl
and
cmp
jge
add
movsl
stos
je
adc
dec
subb
mov
pop
mov
xlat
xor
xor
je
in
sub
aad
add
add
add
add
inc
outsb
pop
repnz
push
call
test
aam
push
pop
addr16
mov
push
je
cmp
xchg
iret
lcall
xor
mov
fs
stos
aas
ret
xchg
pop
cmc
xchg
fimull
int
insb
stos
dec
pop
push
not
cmp
mov
int3
call
push
adc
push
xor
jp
imul
stos
cmp
ja
pop
xlat
pop
mov
mov
xchg
sub
dec
mov
jge
or
xchg
fdivrl
mov
jo
jno
pusha
adc
and
inc
dec
fwait
mov
mov
jg
addr16
mov
xchg
mov
clc
push
stos
mov
fbstp
das
in
cmpb
xchg
jmp
or
xlat
pop
jb
cmp
pop
mov
adc
addr16
stos
sbb
xor
push
cli
xor
and
xchg
sbb
loopne
sbb
movsl
jbe
shld
pop
insl
push
and
cmpb
fldl
xchg
ret
push
push
negb
mov
aaa
mov
cmp
lahf
and
fyl2xp1
push
jb
cmp
xor
cmp
adc
lret
lds
dec
dec
cmp
es
adc
out
testb
data16
ficoml
aaa
test
mov
stos
sbb
xchg
out
shrb
ficoml
mov
aam
cmpl
scas
mov
out
adc
mov
mov
mov
call
pop
cs
inc
test
sub
cmp
dec
push
insl
enter
ljmp
jmp
add
fld
mov
pop
dec
pop
pop
imul
xor
push
outsb
lret
iret
cld
andb
lret
xchg
rorl
dec
push
inc
and
jge
loop
push
push
repz
bound
test
repz
sahf
pop
ss
sbbl
andb
jecxz
sbb
mov
int3
jle
mov
pushf
roll
outsl
mov
sbb
adc
push
sub
xlat
pop
pop
jp
inc
jmp
mov
jne
jg
mov
mov
jle
sarb
clc
data16
cmpsb
out
add
jno
aas
mov
repnz
xchg
adc
jno
pop
push
inc
xchg
lret
das
mov
loop
sub
adc
je
daa
add
insl
cs
jecxz
push
imul
mov
call
enter
sub
add
add
push
pop
nop
mov
test
orl
sbb
or
das
bound
xchg
repnz
pop
push
adc
xor
lods
call
add
daa
push
test
imulb
fisubrl
inc
into
ja
div
mov
bnd
sbb
add
cmpsb
outsl
orb
fwait
lret
nop
movsb
cmp
pop
jo
mov
clc
and
mov
xor
add
test
out
fdivrl
fists
jg
mov
jl
mov
jg
scas
movsl
repz
sub
fcomps
leave
orl
cmp
mov
in
mov
and
xchg
pop
out
popa
bound
bound
call
push
sub
dec
xchg
fst
stos
jnp
enter
fists
imull
push
ss
jg
add
dec
repnz
adc
mov
out
jo
mov
insl
xlat
or
dec
or
push
cmp
call
aad
test
sahf
jecxz
push
dec
idivl
mov
mov
pop
lds
push
adcl
outsb
push
repz
arpl
popf
push
mov
in
adc
sti
push
mov
mov
in
call
sub
int3
pop
incl
incl
lcall
xlat
fs
imul
into
sbb
cmp
pusha
push
xor
pop
push
jl
add
mov
and
loop
ret
insb
aad
xlat
lods
lods
out
shl
mov
push
ja
push
jo
or
cmpsl
sbb
lahf
cmc
call
lea
cmp
cs
test
push
movsb
loop
hlt
inc
sub
outsb
addl
adc
adc
mov
mov
xchg
call
xchg
stos
sub
call
cmp
xor
adc
jle
mov
out
cmc
sbb
lahf
scas
jle
adc
dec
jbe
adc
imul
int
push
mov
inc
repnz
sbbb
sub
je
xor
xchg
dec
push
mov
pop
pcmpeqd
xor
mov
cli
pop
add
cmp
ss
add
add
mov
mov
cli
fstpl
xchg
fucom
or
pop
mov
roll
inc
std
push
test
call
int3
mov
mov
fcompl
push
jb,pt
dec
cmc
enter
dec
xchg
sub
mov
cmpsb
cmp
mov
xchg
cmpl
movsl
pop
cmpsb
xor
lods
out
xor
push
rorl
test
scas
jbe
lret
mov
pop
or
popa
push
cs
movsl
mov
sbb
stos
adc
test
xchg
pop
imul
push
xor
xchg
addr16
or
sarl
jne
fists
call
int3
ss
pop
enter
xchg
scas
push
clc
lahf
pop
cwtl
xchg
xchg
iret
dec
adc
mov
jmp
sub
xor
pop
mov
jecxz
sbb
rolb
xchg
push
dec
scas
add
dec
push
cmpsb
int
and
sbb
xor
jmp
mov
push
pop
data16
mov
xchg
mov
dec
fcoml
lods
ds
or
ret
in
roll
rol
rorl
add
push
xchg
fwait
das
call
mov
add
jae
jbe
push
mov
push
xchg
or
mov
xchg
xor
sti
pop
cmp
ffree
ret
cltd
and
mov
mov
or
push
inc
mov
lds
and
sbb
and
imul
pop
cmp
nop
or
add
je
loopne
shl
inc
ret
add
pop
mov
icebp
ret
stos
aas
sub
jp
add
ror
pop
cli
lahf
fnstcw
adc
in
add
inc
or
jle
in
es
stos
mov
pop
push
push
in
fidivs
sub
shlb
mov
nop
inc
lret
mov
xchg
loop
mov
movsl
cmp
shll
adc
in
mov
in
ret
push
scas
in
sub
fisubrl
aad
rcr
cmp
xor
repz
add
fidivrs
test
mov
jmp
fwait
ds
jle
mov
ds
or
andb
push
jae
addr16
into
mov
pop
sahf
js
jno
inc
pop
outsl
jge
out
push
lret
cwtl
je
out
inc
jle
push
push
adc
mov
adc
pop
fidivrs
sbb
cmp
std
loop
mov
push
jle
hlt
cmpsl
daa
ds
mov
cs
inc
cmp
add
add
add
mov
mov
mov
aad
inc
out
xchg
push
xchg
jmp
icebp
out
sbb
or
test
aaa
hlt
fiaddl
or
int3
call
mov
jb
lcall
xchg
stc
sub
jne
test
add
mov
test
sub
fprem
jp
inc
dec
cmp
dec
xchg
ret
cmp
sub
and
adc
fisubrs
fcmovnu
inc
xor
sbb
ret
mov
ljmp
aad
cmp
push
dec
cmc
shrl
test
xchg
bound
or
push
sub
imul
lock
addb
xchg
int3
call
js
inc
dec
jo
sbb
rcrb
inc
ret
cmp
insb
ss
call
push
mov
mov
insb
stos
mov
mov
mov
daa
lahf
fidivrs
aaa
xor
adc
inc
xchg
jl
mov
jns
ss
pop
hlt
xor
ficoms
inc
sbb
outsl
push
ret
cmp
test
push
jns
mov
leave
push
mov
mov
and
cmpsb
xor
les
cmp
mov
jo
insb
loopne
inc
pusha
mov
dec
pusha
add
mov
or
scas
pop
dec
pushf
pop
fidivs
stc
shlb
lret
mov
fsubs
xor
jge
movsl
xchg
pop
dec
pop
addr16
lret
cli
pop
xor
mov
or
sub
push
adc
and
int3
add
jg
pop
push
xchg
push
inc
js
add
push
mov
jge
scas
mov
xchg
mov
push
inc
mov
cmpsb
push
and
pop
out
jmp
and
dec
pop
and
add
push
jecxz
cmp
movsl
xor
jb
mov
das
test
daa
popa
out
jp,pn
rorb
adc
or
or
adc
dec
xor
jns
or
adc
inc
mov
or
dec
int3
bound
mov
mov
dec
dec
xor
inc
cwtl
cli
jne
into
arpl
orb
xchg
mov
aas
sbb
testb
movsl
ja
fcomp
pop
loopne
jmp
mov
mov
mov
pushf
mov
adc
in
jmp
mov
stos
push
std
in
xor
stos
dec
mov
rol
ja
mov
lea
dec
push
jge
push
jne
icebp
shrb
sbb
push
mov
mov
mov
enter
and
sub
and
in
incb
dec
sub
pop
popa
inc
sbb
mov
pusha
mov
imul
lahf
je
in
xchg
decl
mov
inc
xchg
push
rcrl
sbb
push
cmp
enter
mov
enter
aam
jns
lods
ret
add
enter
jmp
xchg
xchg
sub
mov
sarl
dec
adc
subb
int3
add
out
xacquire
xchg
dec
pop
push
pushf
add
dec
addr16
jmp
out
out
mov
jecxz
sti
jbe
inc
lock
jno
mov
decl
pusha
int3
pop
sbb
sbb
repnz
out
cmp
mov
lret
mov
inc
adc
xchg
andb
lea
stos
gs
mulb
aad
mov
dec
pop
scas
lods
and
mov
mov
std
sbb
jo
xchg
inc
ret
adc
std
dec
andl
mov
aas
sarb
lock
ss
and
jnp
adc
iret
jg
les
fwait
jb
lds
decl
push
mov
lods
insb
aam
mov
push
fxch
push
sub
shl
fs
nop
push
cli
testb
xchg
call
or
ror
add
in
scas
dec
push
pusha
js
cwtl
mov
movlps
sbb
mov
mov
inc
out
adc
adc
sbb
inc
add
aaa
jnp
test
mov
in
or
int3
call
sbb
or
cltd
push
sub
xchg
insb
jge
pusha
sub
jb,pn
xor
sti
jp
jg
jp
pop
aaa
pop
hlt
pop
fwait
xor
sti
js
jns
lea
fnstenv
popf
call
aas
mov
int3
add
adcl
sahf
in
inc
mov
mov
mov
int3
call
xchg
mov
movsl
add
sub
push
arpl
ffree
xor
and
adc
mov
inc
filds
scas
dec
inc
pop
push
mov
push
loope
push
jecxz
mov
jle
leave
sub
add
mov
nop
jns
mov
or
jmp
pushf
lcall
pushf
lret
jle
js
icebp
mov
mov
mov
pop
rorb
pop
inc
cld
inc
adc
loope
xchg
icebp
insb
daa
daa
scas
xchg
mov
ss
push
ret
push
or
nop
jne
cld
jo
sti
pop
nop
sub
fisttps
fucomip
int3
call
adc
loop
fldl
push
and
sbb
or
je
fldl
dec
arpl
dec
out
inc
test
xor
or
bound
adc
xchg
dec
jnp
jae
push
incl
incl
incl
inc
mov
xchg
fs
ds
jmp
push
fiaddl
dec
filds
cmp
inc
xchg
dec
sti
cmp
jecxz
inc
jo
movsb
and
subb
pop
xchg
cmp
dec
xorb
pop
daa
pusha
cmp
add
icebp
add
int
cmp
aam
ljmp
call
loopne
popa
pop
xor
ss
movl
call
sti
jno
stc
ficomps
cmp
scas
mov
dec
xor
push
pop
jmp
and
push
mov
xchg
xchg
or
pop
adc
imul
call
out
add
add
sub
xor
pushl
push
leave
loop
scas
dec
test
lods
out
decl
xor
push
out
es
lea
das
rorb
into
test
jmp
fs
adc
scas
fcmovnbe
lds
movsb
mov
mov
mov
enter
int3
in
mov
test
sub
xor
pop
loop
mov
or
aas
arpl
jge
inc
sub
add
mov
pop
cwtl
lcall
cmp
popa
and
xor
nop
jmp
inc
iret
adc
sbb
hlt
jns
push
ss
testl
xchg
push
mov
call
lods
xor
rorl
movsl
mov
inc
roll
add
in
in
xor
dec
sbb
dec
hlt
add
jno
cs
sahf
enter
mov
lea
adc
dec
push
adc
sub
cmp
xchg
cwtl
rol
push
cmp
pop
push
rcr
jne
imul
mov
inc
add
cli
or
xchg
sub
jg
test
imul
dec
push
push
xor
or
dec
mov
mov
mov
arpl
jae
xlat
shl
xlat
push
adc
aad
in
push
adc
dec
dec
mov
mov
mov
xor
scas
jmp
jmp
mov
pushf
dec
dec
sbb
push
push
inc
jno
nop
out
mov
sub
in
icebp
mov
jg
mov
ja
mov
psadbw
inc
add
js
mov
pop
or
add
fidivs
push
xor
jo
sbb
cmp
sub
fcomps
and
push
push
mov
mov
push
push
inc
pop
call
mov
pop
cmp
std
push
faddl
dec
or
cmp
push
xor
and
xchg
fdivrs
call
add
jmp
sub
mov
jbe
aam
xlat
xchg
and
sub
rolb
jne
xor
int3
sub
or
push
fisubl
dec
and
jo
pop
scas
push
and
mov
mov
or
fsubl
repnz
dec
pop
adc
insb
adc
hlt
sbb
mov
mov
inc
dec
pusha
pop
inc
incl
incl
lcall
adc
ds
sarb
xor
pop
cmp
jmp
lods
ret
pop
das
xor
dec
jp
mov
call
mov
cwtl
dec
add
mull
sub
fs
push
pop
cwtl
mov
cwtl
sub
roll
iret
xchg
cs
imul
dec
std
and
int3
call
mov
sbb
pusha
mov
xor
inc
out
jno
data16
movsb
js
push
lcall
into
incl
movl
ror
aas
das
loope
jecxz
sub
sub
out
add
ror
xor
xchg
loopne
cmp
ljmp
jo
push
pop
ret
sub
clc
add
je
lcall
jns
push
fidivrs
rolb
test
lods
aam
mov
lods
addr16
adc
adc
test
rcll
fsub
aam
pop
lds
call
jns
mov
push
mov
loopne
into
lds
xchg
daa
test
ljmp
call
lret
cmc
mov
inc
mov
testl
push
fiaddl
shlb
push
cmp
lods
and
fadds
inc
dec
fildl
pop
mov
or
push
push
in
popa
loopne
add
ljmp
dec
inc
and
xchg
fwait
mov
int
dec
mov
push
sub
mov
arpl
xor
ss
mov
mov
dec
leave
dec
and
int3
call
sub
adc
js
or
jno
mov
jmp
xchg
loope
xor
adc
loop
cmova
push
xchg
xlat
daa
inc
adc
cs
mov
add
insl
sbb
out
scas
fdivrp
mov
pop
out
adc
aad
fdivrl
scas
push
mov
popa
test
jle
mov
gs
pop
mov
ret
pop
inc
xchg
mov
ja
mov
inc
leave
repnz
jge
fwait
mov
and
push
or
and
movsl
insb
mov
call
and
xchg
jae
incl
incl
xchg
es
ret
inc
ret
test
or
xchg
mov
add
push
es
ret
jmp
lret
and
nop
mov
fcomps
fidivl
ds
cmp
outsl
adcl
les
or
fistpll
dec
rcrb
sbb
jle
sub
mov
cld
xor
mov
ret
incl
aas
fdivrl
pop
mov
imul
loop
pop
arpl
jecxz
sbb
pop
and
xchg
inc
push
xchg
pop
or
mov
div
imul
sti
incb
push
fcoml
lcall
push
inc
cmpsl
sbb
out
xchg
das
cwtl
sbb
dec
ret
push
orb
popa
imul
sub
dec
inc
sbb
fs
push
pop
cmp
icebp
pop
enter
scas
jecxz
imul
xor
int3
add
add
rclb
adc
mov
and
pop
jne
pop
loope
popf
test
mov
dec
cmp
mov
movsb
add
mov
sarl
repz
xchg
mov
ret
shrl
mov
add
aaa
ljmp
push
test
push
pop
push
dec
cmp
mov
ret
jmp
sub
fcomps
fwait
jo
mov
mov
and
sbb
cmpsb
enter
stc
pushf
cmpsl
add
movsb
outsl
rorl
xchg
push
daa
lock
push
negl
test
les
les
out
push
cmpsl
lcall
shrb
mov
je
outsb
out
jl
or
popa
xchg
cmc
popa
pop
push
mov
jl
add
add
add
outsl
add
sub
cmp
shll
and
pop
push
and
lret
in
or
mov
into
scas
addr16
neg
adc
test
pop
addr16
push
js
mul
xchg
sub
cmp
mov
jns
mov
lahf
cmp
xor
in
data16
xchg
add
iret
js
clc
mov
int3
add
add
add
std
inc
jns
fdivrs
daa
sbb
mov
rorb
push
xor
cmp
xor
roll
push
dec
xchg
dec
inc
std
jnp
sub
shll
push
or
cmp
pop
cld
mov
test
cmp
es
in
cmp
jmp
mov
mov
xor
jbe
mov
pop
fdivrs
mov
jmp
xchg
add
xlat
or
jns
xor
mull
fsts
aaa
cld
cmp
in
shlb
int3
jne
out
push
cmp
cmpb
xchg
insl
sbb
push
popa
lcall
int3
call
mov
jp
inc
or
pop
notl
sti
clc
sarl
fs
mov
data16
das
popf
frstor
push
lock
mov
pop
fdivl
push
pop
pushf
lods
scas
cmp
cmpsl
pop
stos
push
sbb
xchg
fcoml
pusha
sti
jo
pop
push
lahf
movsl
popf
pop
pop
mov
popf
stos
call
fwait
pop
and
push
fs
cmp
jo
inc
iret
push
js
xor
in
jne
test
push
sub
fs
sbb
adcl
pop
jno
push
lret
test
cld
int3
add
sub
imul
add
or
fstpt
lea
mul
mov
dec
add
xchg
push
sahf
xor
lock
mov
jge
add
inc
sbb
incl
incl
mov
sar
sti
inc
jg
pop
test
inc
lods
adc
movsb
push
call
add
jb
jb
inc
shr
add
adc
cmp
push
pop
gs
xor
call
loopne
xchg
stc
pop
xchg
test
push
xlat
mov
mov
pusha
dec
jne
mov
inc
pop
and
mov
jmp
xchg
inc
rcr
pop
add
loope
pushf
mov
jecxz
es
loopne
push
mov
push
je
inc
fld
outsb
pushf
xor
pop
mov
mov
andl
stc
cltd
lahf
pop
inc
or
push
cmc
push
mov
add
mov
movsl
aas
mov
cmp
push
mov
loop
mov
fistpll
dec
or
cmpsl
ja
outsl
push
sbb
fmull
and
in
outsb
mov
cltd
inc
test
dec
push
xchg
xchg
cmp
adc
fbstp
ds
xchg
sub
incl
incl
fdivl
jecxz
cmp
rclb
call
xchg
inc
fwait
bound
mov
out
mov
lods
cltd
adc
add
shrl
jae
push
shlb
pop
dec
inc
insl
paddb
adc
pop
out
xchg
cmpsl
call
sub
cltd
inc
aam
xchg
mov
pop
ret
sbb
lret
xlat
xor
outsb
xchg
mov
inc
pop
lods
pop
xor
fwait
loope
mov
pop
popf
test
mov
mov
cmpsl
ss
test
inc
adc
add
mov
ret
ja
or
imul
mov
jno
xchg
dec
movsb
jmp
incl
incl
mov
mov
jg
mov
insl
inc
fisttps
lods
dec
add
bound
mov
or
es
test
icebp
inc
imul
lea
adc
stc
lods
cs
lock
outsl
es
inc
bound
push
xchg
insb
adc
mov
adc
jb
out
add
cld
mov
jb
mov
mov
mov
out
fcmovb
rep
pop
popf
ret
mov
icebp
dec
hlt
pushf
xchg
jo
ret
lods
xchg
jo
data16
lock
icebp
push
jle,pt
dec
cli
mov
sub
mov
sub
add
add
sbb
or
xlat
jge
jge
mov
push
je
mov
fs
fiadds
test
xlat
call
js
cmp
dec
pop
mov
daa
clc
adc
jns
pop
sub
push
xor
sbb
jge
or
aaa
addr16
push
out
aaa
or
lret
fwait
mov
jno
mov
repz
hlt
insb
aam
mov
pushf
orl
hlt
cmp
adc
mov
aaa
ret
mov
sub
push
sbb
insl
pop
add
sub
fidivrs
cmp
push
fldenv
pop
lock
sub
shr
scas
mov
call
xchg
push
faddp
adc
jmp
in
js
ds
repnz
push
mov
inc
and
jnp
mov
mov
push
stc
popf
and
enter
rcll
gs
call
arpl
sbb
sbb
jo
repz
mov
into
jb
mov
adc
xchg
data16
fcmovnu
cld
fdivrs
xor
mov
in
sti
pop
addr16
out
push
fistpl
lcall
add
mov
jnp
movsb
movsb
movsl
push
mov
mov
leave
sbb
mov
es
add
mov
jle
push
les
mov
mov
cli
cmp
pop
mov
fdivr
push
scas
mov
dec
lds
mov
shll
mov
shlb
xor
popa
cwtl
loopne
dec
add
hlt
ljmp
fiadds
and
in
fisttpl
test
iret
sub
add
dec
sbb
jl
ret
sbb
dec
mov
pop
or
jge
jns
add
into
sbb
mov
popa
out
push
ficoms
pusha
adc
adc
call
jmp
sbb
jle
pop
lock
iret
dec
repnz
sub
mov
adc
push
pop
mov
jb
mov
test
ljmp
stc
lds
inc
sbb
cmp
mov
in
inc
pushl
jmp
scas
add
fnstcw
mov
punpcklwd
int
cmp
pushf
lahf
test
dec
test
add
pop
decb
push
and
mov
int
repz
pop
and
sbb
jg
xorb
stc
mov
sbb
adc
mov
mov
add
loope
test
ret
out
imul
cmpl
out
add
add
pop
jbe
xor
dec
add
and
push
shlb
shrb
pop
mov
push
roll
xor
movsb
sbb
inc
addl
fmul
cmp
sub
push
ficoms
aad
movsb
mov
std
mov
add
stos
push
and
or
sti
mov
mov
mov
cld
mov
push
pop
jmp
into
pusha
out
dec
fisttpll
xchg
mov
pop
add
or
stc
or
ja
xchg
and
aam
int
repz
or
add
push
or
jge
sbb
xor
aas
fsub
or
popa
mov
dec
add
pop
jp
into
add
jp
mov
in
push
mov
cltd
mov
mov
mov
xor
in
jae
jne
call
pusha
orl
clc
xor
call
test
push
mov
rcrl
sbb
add
nop
cs
jnp
icebp
stos
add
jmp
cld
xchg
jmp
rcr
in
jp
gs
rcrb
jne
cmc
pusha
cmpsl
push
mov
cmp
mov
inc
mov
enter
push
insb
sbb
jns
xchg
ds
in
flds
shlb
inc
outsl
inc
gs
or
popf
shrb
test
lret
in
insb
in
push
fisttpll
fstps
mov
outsb
jg
pop
inc
popa
jnp
sar
mov
adc
mov
mov
mov
mov
pop
int
jmp
mov
add
in
repnz
out
adc
jne
inc
xor
ss
dec
jge
sbb
xchg
pop
arpl
add
add
mov
ret
iret
hlt
inc
insl
dec
int3
ror
call
test
sbb
stc
mov
dec
stos
insl
fcomi
add
in
std
test
or
or
fildll
add
cmc
jecxz
lret
mov
add
leave
fwait
xchg
pushf
cmp
add
or
dec
in
popf
sti
out
mov
mov
pop
pusha
cltd
test
push
movsl
cmp
sahf
ret
inc
push
sub
push
mov
and
rorb
xchg
repnz
pop
push
xchg
dec
jp
fistl
add
cmpsl
pop
popa
mov
xchg
mov
jl
in
lods
jbe
jns
mov
pushf
repnz
xor
das
inc
mov
les
insb
push
dec
scas
cmp
cmc
enter
mov
or
xchg
or
jmp
aad
lods
cwtl
aam
xor
jnp
add
aaa
idivl
pop
aaa
inc
incl
call
push
enter
and
cs
mov
pushf
jp
sbb
stos
mov
int3
stos
dec
pop
incl
pushl
cltd
in
add
inc
fwait
pop
pop
push
loopne
scas
jae
pop
movsl
mov
addr16
out
push
ds
sarl
lock
out
xor
out
repnz
xlat
in
mov
aaa
mov
iret
ss
pop
nop
mov
cmpsb
pusha
push
mov
das
jecxz
jae
inc
jmp
out
movl
inc
xchg
leave
leave
mov
scas
dec
cmc
mov
enter
in
pushf
insb
jno
xchg
sub
arpl
cmp
repz
shr
cmc
push
cmp
add
cltd
inc
mov
mov
sub
push
and
adc
mov
lds
rolb
and
jo
push
das
inc
fwait
jo
pop
int
ret
es
imul
mov
mov
jle
cmp
mul
test
add
add
jo
mov
mov
fdivrs
add
wbinvd
jecxz
and
ds
jmp
mov
dec
mov
cmpl
jmp
push
sbb
aad
aad
pop
push
sbb
adc
fwait
vmwrite
cmp
add
add
out
sbb
push
fsubrs
dec
inc
push
jge
adc
insb
dec
xlat
aad
int3
xor
scas
notl
cltd
ret
out
add
cmpsl
xor
sub
and
add
jno
stc
pop
stos
push
xchg
sub
daa
fcmovne
ss
bound
or
ret
inc
fstpt
and
and
bound
int
frstor
and
mov
mov
lock
mov
pop
or
ret
jae
jbe
fildll
mov
push
jecxz
jno
mov
imul
dec
arpl
mov
lods
push
jnp
faddl
insb
xor
and
mov
movsl
xor
inc
xchg
adc
mov
dec
sarb
stc
push
jno
xchg
push
and
dec
loop
adc
jnp
call
rolb
xor
add
add
pop
push
xchg
pop
push
jne
push
fs
push
popa
xchg
cmp
lds
add
rolb
cmp
pop
xorl
xchg
and
xor
xor
push
pusha
scas
xchg
lret
imul
add
add
sbb
push
push
sub
pop
lods
imul
lcall
std
into
pop
jecxz
cmpsb
cmc
pop
imul
xchg
nop
jae
in
mov
js
adc
add
out
pop
xlat
mov
fstps
xchg
jg
push
mov
cmp
push
das
sbb
push
xor
mov
mov
mov
push
in
fadds
pop
cmc
aad
add
pop
jge
das
lods
mov
xchg
daa
out
or
sub
xchg
shll
jb
add
mov
cmpsl
jo
lcall
or
pop
mov
call
ret
jmp
xor
push
cmc
fucomip
mov
xchg
and
push
fsubrl
aas
adc
xor
push
jne
iret
jecxz
call
insb
cs
xchg
add
shlb
inc
xor
mov
jbe
add
add
aas
into
mov
xchg
es
mov
das
xchg
lret
jnp
add
mov
rcll
fst
jmp
test
clc
fisttpll
sbb
xchg
mov
movsl
icebp
or
xor
jo
rol
rcrl
lret
leave
inc
inc
xor
das
cwtl
push
call
sbbl
jge
outsb
cltd
pop
cld
shrb
push
mov
jl
arpl
cmp
mov
int
pop
loope
push
cld
inc
push
sbb
imul
xchg
dec
mov
pusha
jg
aad
adc
in
jge
insb
dec
dec
inc
push
call
mov
movsb
push
inc
jo
add
out
mov
incl
clc
cmp
add
mov
mov
insw
in
push
je
insb
mov
sbb
adc
jno
addb
call
pushf
and
pop
fiadds
adc
add
mov
and
stos
pop
jno
lock
xchg
xor
sbb
popa
fidivl
jnp
pop
inc
aad
decl
cli
popa
dec
adc
jle
pushf
mov
xchg
les
sbb
pop
cmpsb
je
int3
fstl
insl
in
pop
jb
inc
cmp
int3
add
adc
stc
out
xchg
fsubrs
sub
push
daa
gs
sbb
pop
js
jae
ss
or
into
xor
mov
lods
lcall
pop
pop
pop
jno
repnz
in
xchg
and
dec
push
jmp
ja
sbb
in
mov
outsb
fs
int3
call
mov
adc
xchg
mov
sbb
outsb
cmpsl
jg
sub
jmp
sub
cmp
call
iret
rolb
jge
adc
sbb
loope
arpl
scas
and
dec
or
test
xchg
call
mov
ficoml
xlat
xor
xor
xchg
inc
xlat
xlat
testb
mov
or
mov
ret
ret
jbe
lcall
pop
and
cmp
push
mov
pushf
jne
mov
cmpsl
inc
pop
mov
add
mov
enter
stos
inc
add
les
mov
push
stc
aas
mov
fwait
in
popf
fabs
xor
fcomip
mov
mov
mov
or
incl
insl
lods
fistpll
ret
cmp
ss
scas
jno
adc
rcr
out
dec
adc
pop
into
push
jle
jne
in
and
scas
mov
push
aam
or
fidivl
int
xlat
cmp
int3
call
and
or
pusha
cltd
cmp
mov
push
aaa
jo
scas
repnz
pop
mov
add
repz
das
cltd
cmpl
jmp
insb
jae
faddp
cmp
clc
pop
movsb
dec
mov
stos
jne
mov
call
gs
mov
pusha
lret
dec
out
jp
jno
jl
fwait
adcb
ss
lods
and
pop
les
pop
jg
sub
xchg
test
mov
daa
clc
pop
sti
lahf
in
adc
in
mov
call
or
pop
movl
arpl
dec
mull
cmp
lcall
ss
mov
bound
mov
cmp
mov
sti
sub
insl
cld
sti
inc
out
cli
cld
mov
xor
iret
cwtl
cmc
jle
fdivl
test
add
mov
scas
test
fldenv
xchg
loop
fs
insl
fists
jle
add
inc
lret
scas
jbe
imul
sub
in
mov
lods
or
push
cmpb
sarl
imul
mov
cs
or
loop
push
xor
arpl
mov
into
push
sahf
repz
inc
shlb
xor
add
add
sarb
sub
cmp
fstpt
xor
xchg
pop
adc
stc
xchg
sbb
sbb
data16
hlt
add
pop
shlb
xchg
push
cmc
inc
rcll
leave
push
fwait
mov
jl
cld
pop
cmpsb
mov
push
jno
out
jae
imul
mov
scas
mov
jmp
lods
out
call
lds
mov
mov
insl
lcall
lods
xlat
fwait
push
les
xlat
pop
xchg
and
push
scas
jbe
icebp
mov
pop
gs
incl
jge
add
xchg
sbb
call
int3
jl
mov
std
mov
cmp
mov
or
mov
mov
out
xorl
jbe
ja
lock
jo
mov
stos
inc
lds
mov
mov
jp
mov
cmp
mov
mov
in
jp
dec
cmc
and
ss
out
ret
inc
out
mov
out
mov
adc
leave
dec
test
or
call
cmp
sbb
andb
mov
sub
out
or
lret
ficomps
clc
inc
cld
push
int3
add
frstor
and
or
mov
arpl
pop
mov
xor
iret
cmp
repnz
mov
hlt
mov
pop
push
and
test
icebp
jbe
sub
jecxz
jno
lods
aad
aaa
pop
or
iret
mov
mov
xchg
jge
add
xor
lahf
rcrb
cmpsb
xchg
inc
ret
popa
data16
aam
jnp
sub
dec
fs
add
call
add
subb
adc
push
mov
stos
xchg
and
pushf
adc
lds
lahf
ja
inc
movsl
pop
daa
add
cmp
mov
xchg
mov
mov
mov
dec
push
addr16
xor
cmpsl
insl
fnstsw
aad
mov
test
jg
jne
scas
hlt
roll
xchg
shrb
sbb
mov
call
ljmp
dec
shlb
mov
push
jmp
or
xor
adcb
dec
push
or
ds
enter
mov
xchg
sub
mov
cmp
jmp
orl
shl
rcrb
hlt
add
fst
into
mov
jg
scas
sub
or
and
pushf
cmp
add
add
add
ror
invd
inc
int3
and
shr
roll
xor
cmp
jno
in
insl
xchg
add
lret
add
pop
lahf
lock
lods
ret
adc
pop
sub
pop
xchg
xchg
push
and
test
or
je
lret
repnz
fs
movsl
or
add
mov
in
inc
fpatan
lea
mov
shrl
inc
in
nop
xchg
sub
mov
cmpsl
call
mov
sub
inc
ljmp
mov
adc
int3
aam
movsl
mov
mov
mov
arpl
int3
mov
cmp
mov
and
mov
int
mov
inc
push
mov
ss
int3
call
shlb
push
gs
popa
pop
xor
rcll
push
mov
dec
xor
push
jge
inc
mov
lahf
sub
test
or
mov
pop
cmpsl
stos
leave
jp
mov
or
in
loopne
add
inc
mov
shr
fcoml
in
dec
sub
jns
and
outsl
mov
movsl
xor
add
ret
dec
xchg
jmp
out
leave
cltd
mov
add
inc
nop
lea
sub
inc
dec
xchg
mov
xchg
shll
add
add
aas
mov
or
ftst
sub
fiadds
xchg
cmp
ret
rorl
dec
mov
stos
or
pop
add
rcl
push
aad
mov
mov
dec
test
jecxz
push
jo
test
outsl
pop
or
push
mov
mov
push
outsl
mov
js
xor
popf
jnp
roll
mov
mov
push
clc
aad
inc
mov
mov
shll
shr
popa
push
mov
push
adc
call
int
cmp
push
mov
mov
mov
daa
sbb
cltd
insl
pop
mov
push
cmp
outsl
sub
lods
les
hlt
mov
add
jg
shrb
jp
call
call
imul
jno
shlb
roll
stos
in
jns
and
inc
lcall
lods
insl
jne
pop
inc
movsb
xchg
std
mov
test
out
mov
jo
jo
mov
imul
sbb
cwtl
inc
lods
aad
cltd
std
fidivrs
jnp
xor
jle
lock
mov
enter
xor
sbb
aam
insb
shlb
daa
testl
mov
rorb
int3
push
sub
lret
mov
sbb
lahf
sub
rcll
sbb
pop
outsb
in
add
mov
jns
loop
xchg
outsl
ja
ljmp
stos
dec
jmp
call
addr16
aam
inc
or
pop
pop
in
jg
or
nop
fwait
jo
fiaddl
movsl
pop
push
xor
adc
jne
sti
fsub
and
jg
out
sub
and
divl
push
push
push
mov
dec
rcrb
fnsave
jne
aas
lock
hlt
pop
mov
mov
push
sub
xchg
mov
xor
ret
mov
add
movb
sbb
cmp
addr16
lcall
cmpsl
fwait
cmp
add
cmc
adc
push
data16
push
in
mov
testl
repz
aaa
out
cmc
leave
mov
addr16
cmp
xor
xorb
pop
jmp
dec
or
inc
jbe
mov
mov
mov
gs
sub
cmp
xor
cwtl
data16
jecxz
inc
mov
dec
xchg
pop
push
es
mov
sub
or
cmovns
mov
inc
cmp
insb
mov
test
sar
ret
cmpsl
mov
movsl
push
pop
mov
in
ret
insl
stos
arpl
mov
les
stos
mov
push
repnz
cmp
call
inc
loope
jb
push
dec
add
or
jle
gs
pop
rorb
lret
int
pop
nop
setne
xchg
sbb
fs
dec
sub
or
in
push
mov
jne
dec
mov
xor
adcl
mov
call
in
and
adc
inc
cwtl
sbb
push
mov
sarl
add
loop
ds
inc
lret
push
enter
and
adc
push
mov
movsl
dec
in
sub
lcall
pusha
rclb
shll
pop
mov
add
xchg
inc
icebp
out
cli
xorl
mov
std
jmp
addl
xchg
inc
test
scas
bound
or
mov
adc
sbb
jne
test
and
dec
dec
fwait
dec
mov
imul
and
jecxz
mov
in
dec
repz
pop
test
lods
fadds
mov
int3
add
add
cmp
rclb
clc
dec
add
gs
in
fnstcw
jge
in
ljmp
lock
cltd
test
daa
js
repnz
lret
adc
sbb
js
enter
cs
out
and
mov
xchg
lock
mov
decl
movsl
pop
jp
sbbb
int3
jbe
and
mov
sub
test
pop
mov
repnz
rolb
sub
pop
loope
sub
loop
in
imul
xchg
adc
out
sti
js
push
or
xchg
out
jle
inc
jb
into
call
push
inc
mov
subb
lods
and
xchg
fs
xchg
lds
dec
adc
add
das
cmp
push
pop
xchg
mov
push
out
xor
je
arpl
iret
xchg
rcrl
jp
gs
sbb
lods
movzwl
shll
aad
xchg
mov
mov
mov
sbb
pop
or
add
addr16
mov
push
icebp
xchg
arpl
mov
outsl
leave
mov
icebp
sti
dec
mov
les
loopne
push
sbb
add
add
add
dec
rolb
fistpl
leave
jp
sbb
xchg
xchg
mov
ljmp
pop
addr16
adc
adc
push
xor
cmp
popf
mov
mov
lcall
ds
pop
jnp
pop
sahf
in
test
dec
test
mov
imul
jmp
jmp
mov
sbbl
loopne
xchg
out
mov
into
or
fld
fildl
lock
sub
xor
sbb
call
andb
push
jne
fstpt
push
pop
mov
mov
les
adc
nop
dec
add
icebp
imul
ljmp
mov
fcoml
cmpsb
dec
cmp
sar
cmp
mov
ss
cmp
fs
dec
inc
stos
fnstenv
cmc
adc
xor
xchg
sub
and
sbb
decl
stos
xchg
popa
lret
mov
or
mov
cld
je
int
loop
jle
xchg
mov
push
aam
call
stc
movsl
shr
mov
jae
aas
in
out
mov
jnp
adc
scas
aam
outsl
pop
jnp
aam
shl
in
call
mov
mov
mov
ja
xor
aam
mov
mull
mov
sbb
iret
int3
inc
adcl
push
inc
xchg
cli
push
jo
inc
xchg
jg
or
fmuls
scas
movsb
add
cmp
sti
dec
jbe
es
repz
push
mov
or
jno
incl
int3
call
aas
test
cmp
fwait
aaa
pushf
inc
jmp
inc
xor
mov
leave
popa
push
fildll
call
xchg
popa
mov
add
and
aaa
pop
jle
dec
sahf
jno
sub
ror
xor
insl
gs
xchg
mov
sub
mov
int3
call
pushf
sub
incl
incl
dec
lret
stos
mov
inc
into
xor
outsl
lock
add
dec
and
sbb
pop
int
push
sbbb
cmp
mov
mov
mov
and
xor
clc
pop
cs
testl
xchg
jo
or
pushf
call
pop
enter
mov
adc
lahf
shll
cli
cli
inc
sub
clc
mov
in
sub
xor
pop
repnz
push
mov
shl
movsl
adc
adc
dec
add
cmp
subl
jnp
lods
cmp
mov
ss
in
push
xor
sbbb
out
rorb
jmp
cmp
xlat
fiaddl
and
bound
jns
mov
lcall
xchg
xacquire
or
lea
outsl
insb
xchg
int3
add
add
paddq
adc
pushf
bound
orb
and
xor
pop
adc
decl
aas
in
or
sbb
rclb
fucomi
enter
or
int3
call
xchg
mov
dec
sub
jbe
testl
mov
lret
orl
lret
and
std
in
xchg
and
js
mov
mov
jg
pushf
rcll
or
subb
xchg
aas
jmp
movsl
inc
cmp
mov
and
mov
jae
add
outsl
jp
pop
fbstp
lcall
pop
loop
test
mov
cvtps2pi
imul
sti
filds
dec
or
fstp
add
in
mov
call
mov
push
xchg
mov
jae
daa
jmp
push
inc
adc
pop
xchg
ljmp
mov
pop
add
int3
call
jnp
jne
rcrb
xchg
es
pop
xchg
xor
add
je
int
inc
fwait
test
xchg
roll
mov
push
popf
xor
add
mov
push
addr16
je
mov
bound
inc
fsubrl
movsb
jno
shrl
out
aaa
dec
sahf
out
aaa
call
push
xchg
lahf
nop
test
xor
inc
pushf
iret
inc
pop
adc
sub
lods
pushl
lock
int3
add
add
pop
pop
repnz
test
int3
out
sub
subb
inc
lea
inc
fmuls
cwtl
pop
popf
aaa
repnz
or
mov
repnz
xchg
xchg
mov
subb
out
push
sbb
mov
sar
insl
rcrl
adc
push
inc
call
add
dec
fsubrl
inc
orl
mov
lods
push
cmp
dec
xchg
faddl
lock
dec
mov
lahf
push
mov
fistpl
notl
and
or
pop
dec
sbb
xor
mov
pop
jmp
push
push
mov
xlat
jne
outsl
pop
push
testl
dec
je,pt
addr16
in
sbb
into
fstpt
push
arpl
mov
inc
mov
and
in
movsl
in
sub
xchg
call
cli
push
push
add
pop
jecxz
scas
aam
cmpb
scas
mov
test
movsb
ret
jbe
fcompl
xchg
add
xchg
rcrb
cmp
or
and
lock
adc
aas
cmp
cmp
lret
sub
decl
enter
idivl
ja
ret
adc
std
and
lcall
insl
imul
mov
pop
sbb
idivb
js
dec
gs
fwait
xchg
cwtl
mov
mov
int3
add
add
add
insl
dec
mov
scas
and
jg
cmp
fdivr
xor
ds
pop
add
dec
mov
jmp
mov
mov
in
jns
mov
outsl
mov
inc
fldenv
mov
push
mov
xchg
inc
pop
mov
push
xor
ljmp
mov
jmp
fistpl
outsl
lret
pop
clc
fldcw
shlb
mov
enter
mov
xchg
ljmp
dec
or
shlb
test
scas
xchg
imul
push
adc
ret
add
add
add
out
in
mov
loopne
mov
dec
jle
sbb
cmp
push
mov
mov
loope
xchg
pop
loopne
jle
scas
jmp
mov
incl
das
out
loopne
fdivl
sar
and
mov
adc
out
inc
lret
pushf
das
popf
dec
push
ret
or
jnp
push
outsb
popa
mov
inc
subb
lods
sub
stos
jle
lods
aam
sub
jecxz
sub
cwtl
sub
mov
mov
mov
into
xor
add
xchg
mov
cmp
mov
inc
sub
add
fs
test
je
pop
rorb
pop
inc
imul
xchg
cmpl
std
outsl
cmp
aaa
shr
ljmp
imul
les
fst
notl
pop
cltd
dec
int3
iret
push
test
xchg
lret
incl
call
jl
leave
mov
sbb
out
dec
cmpsb
insl
push
fiaddl
pop
xchg
fidivrs
cmp
scas
sbb
pop
pop
push
in
xchg
fstpl
aas
std
aas
push
dec
adc
jle
out
iret
xor
lcall
pushf
sar
jmp
mov
mov
mov
call
movsl
je
sub
ret
repnz
inc
mov
les
adc
mov
push
subl
pop
xor
jno
mov
inc
addl
xlat
call
int3
test
mov
jecxz
nop
jno
imull
pop
lods
incl
inc
inc
lret
int3
jns
push
pop
push
fadds
jae
outsb
lock
mov
mov
shlb
dec
inc
mov
ret
sub
mov
pop
mov
je
test
jp
mov
push
and
repnz
ficoml
dec
inc
imul
sbb
das
cmp
xchg
js
mov
test
sub
mov
lock
inc
pop
xchg
push
lahf
xchg
rcrb
add
loopne
and
test
lods
incl
incl
sub
mov
out
xor
pop
and
jge
mov
int3
push
or
and
test
insl
xchg
ds
sarl
decl
enter
sbb
mov
dec
push
aam
in
sub
dec
fnstenv
xchg
cli
jb
jb
cmp
fimuls
fs
mov
pushf
out
xchg
xor
in
push
cmp
mov
addl
idivl
push
xchg
push
push
cwtl
jb
add
xor
lds
cmp
stos
es
sbb
enter
pop
xchg
mov
in
push
repnz
jge
mov
mov
dec
mov
mov
repz
scas
addl
push
sbb
rorb
or
cmpb
scas
push
dec
into
cmp
cmp
jo
push
push
adc
enter
fs
sti
fwait
test
fistpl
icebp
sbb
adcl
in
stc
rcll
mov
dec
scas
call
add
int3
mov
out
imul
loopne
push
dec
sub
cwtl
jo
pop
and
push
jne
fiadds
filds
inc
out
ret
mov
ret
imul
sbb
js
mov
rolb
mov
fiadds
call
lods
mov
inc
xchg
inc
sbb
inc
scas
out
jo
pop
or
ss
incl
pushl
js
mov
fadds
jecxz
pop
sbb
adc
add
xchg
jo
lret
cmp
xor
test
mov
iret
andb
jns
subb
sbb
inc
repnz
push
adc
lea
xor
pop
xor
movsl
out
out
lods
pop
cmp
ret
imul
add
add
shrb
jns
lcall
ret
test
not
jge
lock
in
xor
mov
jae
test
int3
add
add
jl
jnp
inc
mov
xchg
dec
add
push
sbb
loopne
repz
mov
mov
cmp
fiaddl
mov
add
dec
push
mov
int3
call
mov
fiaddl
add
dec
and
lock
sbb
mov
xchg
adc
test
xchg
cmp
jp
xchg
iret
xor
sbb
lahf
add
adc
mov
pop
pop
ljmp
or
cmp
add
call
mov
sub
nop
hlt
pop
insb
fwait
or
mov
adc
mov
cvtpi2ps
adc
jl
mov
jnp
push
cmp
ljmp
pop
jo
mov
je
imul
mov
pushw
fsts
dec
repz
cld
add
xor
and
jge
push
imul
ljmp
stos
pop
aam
data16
sub
sub
add
ret
and
jb
aas
mov
xor
in
xchg
out
aad
lcall
push
in
loope
mov
mov
out
jl
inc
cmc
add
cmp
mov
mov
pop
mov
and
push
add
dec
lahf
ljmp
mov
add
mov
push
call
jbe
add
mov
out
int
negb
mov
xchg
ss
ds
scas
fcmovne
pop
addr16
popf
outsl
scas
nop
icebp
xor
int3
add
es
dec
fcmovbe
incl
mov
or
sahf
xchg
popf
movsb
ficoms
addb
cmp
jbe
and
dec
dec
mov
mov
xchg
dec
cmpl
and
adc
adc
xchg
insb
push
push
mov
add
mov
stos
mov
jnp
cwtl
push
xor
pop
adc
pop
andl
jae
add
iret
cmp
sub
insl
aaa
mov
cmp
popa
test
cmp
cwtl
int
jl
dec
test
popf
adc
adc
es
sbb
push
xlat
test
sub
adc
mov
rcr
test
test
fs
fwait
pushl
ds
pop
cmp
movsb
in
cwtl
in
mov
jbe
mov
int3
add
jmp
iret
mov
push
or
shrl
daa
lds
mov
push
sbb
mov
mov
mov
mov
out
fstps
push
repnz
mov
bound
outsb
sbb
jecxz
dec
jmp
mov
lea
dec
fnstcw
lock
jp
loope
idivb
pop
push
sub
or
cmp
dec
aad
xchg
jbe
mov
cmpsl
mov
lret
test
mov
movsb
and
jno
mov
sub
cmp
xchg
mov
mov
push
pop
jne
or
mov
xchg
cmp
xchg
movsb
out
xor
dec
scas
shll
mov
fs
outsl
pop
js
dec
je
inc
push
jae
jge
ret
mov
test
or
cld
aam
je
cmp
push
test
xchg
and
push
dec
es
add
and
and
or
shr
add
add
add
push
pop
scas
test
mov
push
cmp
scas
push
inc
lds
inc
adc
and
sub
jmp
jg
sbb
fildll
rcr
cmp
inc
idivb
add
add
test
push
addr16
outsb
xchg
jbe
add
lea
adcb
daa
jmp
mov
or
int
test
sub
mov
mov
lods
push
scas
inc
fsubl
call
inc
jbe
dec
adc
ficoml
or
in
fbld
in
jbe
mov
imul
cwtl
fdivrp
xchg
mov
rcrl
shl
add
add
ret
or
in
fwait
add
test
imul
push
shlb
or
sub
cmp
push
fwait
outsl
cmpb
clc
cwtl
push
hlt
int3
pop
or
add
add
cld
or
add
outsb
mov
pop
icebp
mov
push
sbb
add
ja
cmp
mov
mov
scas
sar
sbb
popf
test
jo
nop
loopne
popa
cmp
mov
xchg
aaa
fdiv
add
arpl
outsb
add
and
test
or
ds
das
test
out
mov
out
xchg
fisttpll
jae
mov
adc
xchg
aaa
xlat
push
cmp
dec
movsb
xlat
add
mov
mov
syscall
call
data16
lds
jmp
jno
and
gs
mov
in
push
xlat
add
hlt
mov
lea
test
lods
jno
cmpsl
adc
jl
inc
pop
sub
movsl
add
push
and
in
mov
sub
xor
or
pop
sahf
add
scas
lds
lea
loopne
dec
mov
in
jns
insl
lcall
movsb
or
test
call
inc
adc
rcll
jmp
cwtl
clc
jne
int3
call
add
mov
inc
jg
jge
scas
sar
stos
jg
aas
cmpsb
mov
in
mov
pop
xchg
stos
add
pop
inc
jnp
and
dec
dec
xor
mov
out
dec
or
and
out
xor
cmc
popa
scas
mov
pop
in
imul
xchg
dec
xchg
fistps
ret
push
incl
ljmp
mov
je
jp
dec
sbb
jo
insb
mov
sbb
mov
sub
incl
call
xchg
xor
dec
cmc
aad
fbstp
lahf
sbb
adc
jmp
mov
and
and
movsl
jle
mov
xlat
push
out
dec
test
jns
push
jp
jecxz
out
incl
mov
pop
add
mov
repnz
rclb
pop
sahf
and
jecxz
push
add
add
and
and
negl
mov
cwtl
pop
xchg
pop
movsl
incl
call
mov
mov
dec
jge
les
pop
push
loope
mov
test
inc
rolb
and
mov
in
push
ret
hlt
les
addr16
lea
je
aaa
cld
scas
in
xchg
insb
push
pop
mov
sbb
mov
shrb
mov
cmc
jp
test
dec
jne
add
insl
mov
mov
insb
jo
imul
pushf
test
mov
sbb
pop
jne
sti
adc
int3
add
mov
test
mov
into
call
and
and
scas
cli
cwtl
sub
sbb
mov
mov
cmpsl
aaa
mov
xchg
jecxz
movsb
push
fmul
dec
jae
sahf
pop
addb
loopne
xchg
int3
add
add
rcrb
and
adc
push
out
test
xor
sub
stos
adc
or
sub
add
test
mov
std
bound
mov
aad
push
jecxz
out
repz
mov
adcb
loope
das
push
rcrl
pop
stos
out
inc
cmpb
loop
out
inc
adc
out
sahf
xchg
lds
push
int
pop
cmp
pop
stc
test
in
sarb
mov
insl
sub
cs
test
adc
incl
incl
out
addr16
int
mov
pop
cmp
xchg
mov
push
sarl
or
cmp
daa
int
xchg
jecxz
pop
ljmp
repnz
mov
bound
rorb
dec
mov
ss
inc
pop
rclb
call
add
mov
inc
rep
mov
mov
inc
xchg
mov
mov
je
pop
add
nop
push
adc
out
out
jmp
pop
xchg
add
jecxz
and
testb
mov
fisubrl
popf
imul
lea
call
sub
cmp
sub
xor
inc
jns
cmpsb
gs
rorb
popf
lock
imul
movsl
lods
pop
push
hlt
inc
cmp
mov
push
shll
jg
cmpsl
mov
dec
mov
jge
push
push
orb
popa
mov
fadds
int3
sets
outsl
repnz
pop
clc
icebp
jl
xor
sub
mov
loop
cwtl
jle
mov
js
addr16
inc
hlt
sbb
sub
ds
movsb
bound
loop
mov
stc
pop
es
pusha
addb
dec
cmc
pop
xchg
ret
idivb
mov
mov
dec
adc
cld
push
cmp
jae
shrl
movsl
mov
lods
es
dec
jns
pop
idivl
mov
pop
rcrl
int
push
aas
call
dec
insb
xchg
rolb
ret
lcall
pop
in
shrb
and
xchg
pop
dec
xchg
ljmp
push
test
push
adc
mov
jl
mov
outsl
out
jns
sbb
jp
dec
or
int
lret
push
lahf
sarb
in
xchg
mov
mov
clc
mov
imul
insl
repnz
cmc
pop
lea
pop
in
rorl
mov
mov
mov
lret
cmp
adc
lds
or
jno
and
repnz
jg
lcall
jno
mov
cmp
shll
in
dec
xchg
and
dec
xchg
test
out
add
and
push
outsb
je
or
rorl
push
xorb
or
cmp
and
add
and
add
icebp
mov
mov
pop
stc
push
out
shll
call
ja
cmp
mov
lods
flds
jge
out
jbe
push
and
cmp
icebp
loop
add
mov
in
faddl
jp
dec
je
pop
xor
xlat
stos
aaa
xchg
jp
pop
dec
sbb
push
call
loopne
insl
nop
ret
mov
jle
aaa
les
xor
ficompl
lret
xor
aaa
fisubrs
sub
rcrl
clts
add
add
add
cmpsb
lods
pusha
iret
dec
iret
cmp
jp
mov
ret
mov
clc
fwait
psllq
test
aad
adc
call
xchg
sbb
inc
mov
test
push
fildl
fldt
pop
push
in
es
add
add
sbb
sbb
dec
lds
add
add
cltd
cmpsl
fidivs
test
push
stos
cs
clc
outsb
or
inc
sbb
jecxz
pop
xor
loopne
mov
fcoms
jge
ja
push
lret
xchg
cmp
xchg
mov
cmp
add
add
add
mov
push
or
es
dec
jmp
jg
xchg
mov
push
xlat
bound
sbb
roll
das
flds
adc
rclb
fdivs
adc
pop
loopne
cmp
push
xlat
test
es
jge
inc
xchg
mov
int3
mov
add
fstp
roll
out
loop
dec
cwtl
dec
out
fucomip
mov
push
sbb
add
cmc
lds
in
xchg
xchg
jg
imul
jp
daa
jecxz
rcll
xor
and
ficoml
int3
call
std
cld
xchg
pop
push
or
push
mov
jg
add
repz
in
pop
sbb
push
cmpsb
mov
sub
aad
stos
repnz
and
sbb
je
mov
cwtl
stos
adc
push
mull
dec
iret
bound
dec
ret
sub
sbb
ljmp
shlb
int3
call
adc
push
xorl
sar
ja
in
sbb
bound
dec
mov
orl
mov
hlt
sbb
das
push
fimuls
rol
mov
ficoms
pop
xor
jg
pushf
sbb
rcll
push
mov
popf
xchg
xchg
add
add
mov
out
rol
xor
in
mov
sahf
pop
sets
push
adc
arpl
dec
jle
add
add
add
dec
sbb
bound
repz
mov
es
pushf
push
cmp
add
or
lahf
push
sub
popf
cli
mov
fstl
gs
sbb
je
pop
jns
cmpsl
mov
xchg
rol
lcall
jle
mov
mov
cmpsl
sbb
stos
sbb
divb
cmpsl
mov
push
add
iret
push
shl
mov
pushf
xchg
in
mov
ret
lret
mov
mov
jne
ret
gs
add
jp
cld
test
fwait
ja
cmp
mov
lret
in
jmp
push
jmp
push
cs
daa
pop
xor
cli
into
lret
ds
jo
mov
lret
ja
ljmp
call
cli
push
out
outsb
pushf
push
adc
inc
pusha
out
shll
jbe
or
stos
jno
jnp
out
lea
aas
ljmp
cs
repnz
fimuls
imulb
dec
add
je
mov
ss
mov
mov
ficompl
and
repnz
jb
ss
shr
stos
iret
fsubs
movsb
out
es
call
int3
dec
xorb
cs
pop
int
dec
aad
add
xchg
mov
ficompl
out
hlt
push
push
mov
cmpsb
cmp
adc
sub
sub
or
xorb
sub
adc
incl
push
rcrb
mov
lret
aam
push
test
aam
gs
xchg
mov
push
dec
js
lret
mov
fisttpl
enter
imul
mov
push
adc
int
mov
xchg
mov
cmp
cmp
fmul
pop
lds
inc
mov
loope
sahf
les
jge
clc
push
inc
dec
jno
mov
roll
fidivrs
pop
rolb
mov
push
xchg
dec
pop
or
add
jle
push
out
in
push
dec
pop
jg
add
pusha
lret
xchg
sarb
les
ss
jno
cmp
fadds
lods
pop
std
fcmove
mov
mov
shr
pop
lods
popaw
xchg
inc
mov
jb
cmpsl
js
mov
fimull
jmp
rcrl
sub
xchg
xlat
cmc
cltd
inc
xchg
sbb
pop
testl
out
js
shlb
push
mov
call
adc
jge
mov
cmp
mov
pop
jo
aam
scas
mov
push
mov
jge
outsl
filds
nop
out
arpl
sub
mov
pushf
cmpl
gs
shrb
dec
mov
popa
mov
fwait
xchg
pop
and
outsl
dec
inc
pop
xor
xor
pusha
dec
push
mov
inc
ficomps
test
or
jmp
lods
jmp
inc
inc
xchg
in
or
mov
fwait
js
decl
loopne
pop
out
inc
add
or
push
or
jp
subl
pop
popf
push
add
aam
and
push
pushf
inc
popf
mov
push
pushf
ja
dec
lods
divb
fnstsw
sub
inc
ss
or
push
mov
pop
mov
push
xchg
inc
hlt
mov
std
mov
mov
mov
mov
call
mov
mov
loopne
jle
aam
test
mov
sbb
xor
add
mov
push
add
xorl
jge
and
push
sahf
movsb
adc
inc
je
insl
rcrl
jbe
ljmp
scas
call
mov
test
and
and
outsb
and
int3
call
clc
mov
adc
jge
aas
adc
nop
daa
lret
dec
mov
xchg
xlat
push
adc
lods
repz
cltd
xchg
cmp
inc
inc
arpl
mov
call
in
rcll
and
int3
call
mov
mov
lret
and
enter
ret
push
add
das
mov
or
sbb
hlt
cli
mov
ucomiss
iret
mov
mov
push
push
xchg
cwtl
pusha
sbb
ds
xor
and
xchg
loope
or
mov
jns
bound
cltd
popf
push
xchg
roll
cmpsb
call
mov
inc
bound
iret
leave
and
jno
and
lahf
out
shll
pop
dec
jo
mov
add
clc
pusha
ljmp
jns
add
inc
push
sub
add
repz
adc
in
mov
and
lcall
idiv
sti
outsl
inc
cld
ja
ljmp
lods
pop
call
das
mov
push
call
cmp
daa
daa
sub
les
lds
cmp
add
mov
xor
add
push
out
enter
jbe
push
ljmp
add
mov
push
inc
rcrb
aad
movsb
push
cmc
mov
adc
mov
and
sbb
inc
or
cwtl
push
mov
mov
inc
xor
sub
add
sub
aaa
or
popf
fs
sbb
xchg
insl
xlat
mov
popf
pop
movsb
fbstp
sbb
mov
mov
loop
or
sbb
fists
pop
sbb
scas
and
xchg
inc
jb
mov
pop
xchg
xchg
leave
mov
into
add
in
push
xchg
pop
cmp
xor
sbb
sub
popa
xchg
jmp
fimuls
cld
or
inc
jp
dec
mov
and
add
xchg
scas
insb
mov
fsubs
fldt
int3
add
add
add
push
into
cmp
inc
movsl
ljmp
jns
out
js
mov
mov
loope
mov
adc
mov
or
popf
jmp
scas
and
shrl
or
mov
add
mov
mov
xchg
or
adc
or
jnp
mov
inc
mov
lret
call
cmp
aaa
push
mov
mov
stos
shlb
addr16
mov
dec
sarl
pushf
hlt
xor
or
testl
push
mov
inc
push
xor
lret
call
pop
lahf
pop
sti
or
ss
xor
xor
push
jmp
bound
out
sub
sbb
jl
aad
sub
push
sub
mov
je
pop
add
sub
cmpsb
jne
rorb
mov
inc
fsubrs
daa
outsl
mov
mov
sahf
inc
jge
sbb
push
mov
mov
loope
pop
sbb
mov
mov
scas
scas
adc
lock
jle
mov
xchg
push
mov
mov
popa
cmpsb
in
pop
mov
jae
aas
mov
ret
mov
mov
jmp
dec
or
jl
les
fiaddl
or
arpl
mov
and
jnp
mov
xchg
xchg
sub
mov
jb
and
lret
shll
cmpps
xchg
loop
and
mov
data16
or
sub
mov
mov
dec
and
xlat
inc
rol
lcall
mov
ljmp
xchg
mov
push
mov
sbb
pop
stc
and
push
into
sub
ficompl
push
sbb
xor
fnstcw
pop
mov
dec
lret
ds
mov
pop
mov
lods
pop
les
les
pop
pop
fimuls
repnz
fdivrl
pop
cli
sbb
xchg
lock
shrl
push
ljmp
xchg
loope
cld
mov
mov
mov
mov
cmp
push
in
int3
xor
push
out
cli
adc
and
enter
jae
push
pop
mov
adc
adc
fcomip
lock
xor
sbb
scas
sub
fs
or
push
fcoml
push
xchg
and
dec
cs
shl
mulb
push
cmp
mov
mov
sub
in
pop
cli
js
dec
sbbb
cld
jmp
scas
testl
and
mov
enter
xchg
push
in
sub
decl
ret
push
fs
and
cmp
pop
sbb
pop
dec
pop
and
pop
sbb
mov
icebp
mov
pop
sub
mov
fldl
ffreep
movsl
nop
add
jnp
outsb
add
iret
pop
dec
pop
mov
cwtl
sti
cmp
cltd
mov
fisttps
push
xor
cmp
adc
repnz
pop
mov
xor
adc
inc
xchg
arpl
mov
testb
lds
cli
test
cmpsb
lcall
and
mov
xor
cwtl
insb
rol
movsl
test
pop
lds
add
add
add
aas
mov
jl
aam
jbe
add
inc
in
xchg
testl
fdivp
mov
mov
cmp
jecxz
mov
jle
push
xchg
adc
je
and
rorl
daa
lcall
lret
test
pop
call
call
lcall
outsl
mov
int3
add
lods
in
shl
es
lea
fdivs
enter
mov
subb
insb
aam
push
xchg
arpl
dec
inc
xlat
rclb
jge
aam
xor
movl
or
pop
push
xchg
gs
imul
pop
and
aad
adc
repz
call
arpl
ljmp
sub
jne
fcomps
jecxz
mov
xor
push
add
clc
shl
imul
xor
div
sti
push
pop
pop
add
dec
repz
add
pop
jb
test
incl
incl
add
sti
mov
pop
dec
mov
bound
pop
pop
add
inc
sub
fs
sub
lds
push
ror
je
jo
mov
fmuls
mull
jb
test
lods
test
in
cmp
imul
mov
js
fstps
push
add
mov
cmc
cmp
incl
pop
outsl
mov
outsb
pop
daa
cmpl
arpl
mov
fwait
mov
sti
add
jecxz
and
add
pop
pop
mov
xor
mov
mov
popf
rcl
jecxz
xchg
inc
shr
addr16
out
push
sarl
test
xor
dec
pxor
push
je
inc
ja
ja
insb
inc
cmp
xor
sub
pop
repz
ss
fisubrl
xor
rclb
add
add
andb
or
sub
sbb
sub
dec
pop
incl
mov
repz
fwait
xchg
out
pop
and
data16
scas
daa
pop
mov
or
enter
stos
xlat
mov
sbb
and
in
sahf
cltd
xchg
jae
adc
dec
dec
pop
fiadds
inc
mov
scas
in
lock
pop
ret
pop
call
and
xchg
mov
call
add
fisttpll
mov
sbb
in
mov
lret
inc
push
sub
scas
sub
cli
dec
inc
enter
ret
out
fstpt
xchg
outsb
pop
xchg
cmp
iret
jp
push
jmp
sar
sbb
icebp
pop
in
and
sub
lcall
push
mov
mov
xor
jns
adc
xchg
les
push
inc
lahf
sarl
dec
test
daa
mov
test
call
add
cltd
xchg
test
mov
ret
les
mov
push
xchg
pushf
imul
mov
mov
inc
das
jne
aas
inc
fldcw
mov
ja
pop
pop
leave
mov
lea
mov
mov
cmp
sete
f2xm1
push
pop
daa
ffree
insl
mov
fs
sub
iret
jbe
or
out
jmp
and
negl
movsl
mov
call
add
rolb
push
and
les
adc
pop
push
aam
sub
xor
ja
es
lret
jne
and
cmpb
pop
jns
pop
dec
test
add
add
add
lret
adc
fildl
adc
ja
pop
jle
pop
xor
and
xchg
imul
out
or
jge
jb
dec
scas
jge
jnp
sub
mov
dec
adc
data16
fdivs
add
add
add
mov
pusha
cmpb
adcb
stos
pushf
loopne
pop
push
movsl
mov
mov
aam
sub
rolb
std
sub
cmp
add
add
aad
dec
pop
popf
sti
cwtl
xchg
dec
call
add
sub
jp
mov
pop
enter
sbb
enter
add
add
je
sbb
test
repz
mov
daa
jns
cmc
aam
sbb
imul
sbb
ja
clc
sub
pop
push
xor
mov
or
mov
mov
nop
jmp
and
divl
or
mov
aas
xlat
mov
dec
fimull
into
mov
jp
test
jb
cmp
xlat
loope
outsl
inc
repz
cmpsb
js
sub
call
add
sub
idivb
fwait
scas
or
rcrb
mov
popa
test
loopne
mov
loope
mov
outsl
pusha
outsb
pop
dec
lods
xor
sub
call
popf
ds
mov
mov
insl
popf
adc
add
jae
out
sub
jp
xchg
popf
iret
pop
mov
dec
and
call
movsb
call
xchg
sbb
pop
cld
mov
test
dec
push
dec
pop
mov
jo
mov
scas
rcrb
cs
mov
rcll
in
dec
cltd
sub
cmp
lahf
sbb
mov
sub
and
pop
adc
inc
or
nop
call
lcall
mov
jne
dec
insb
pushl
jno
fdivs
sbb
out
xchg
imul
cmp
mov
rcrl
out
mov
push
sub
lds
mov
dec
ljmp
in
lods
lea
mov
stos
mov
popa
mov
dec
out
jge
xorl
xor
out
lcall
cmp
ss
nop
hlt
cs
jecxz
sbb
push
imull
movsb
mov
dec
lret
aaa
adc
and
jl
mov
and
or
push
mov
js
fimuls
dec
mov
lret
stos
mov
push
xor
pop
loope
int3
outsb
xor
rcll
adc
arpl
xor
pop
fidivs
jo
loope
mov
pop
jbe
inc
push
push
js
shrl
cli
push
stc
aaa
ja
cld
test
add
fisttpl
ljmp
adc
arpl
fstpt
mov
push
inc
pop
pop
xchg
cmp
popf
ret
jne
and
loopne
pop
sbb
add
add
add
mov
xor
in
pop
popa
or
mov
or
mov
dec
and
push
and
pop
enter
mov
rcll
lods
out
ds
xchg
nop
cmpb
adc
mov
into
dec
mov
xchg
sbb
pop
fdivp
mov
out
in
cmp
xchg
incl
incl
cwtl
shlb
and
mov
out
cmc
mov
repz
daa
xchg
lock
je
in
inc
xor
aas
push
shl
scas
xchg
cli
pop
in
jp
jmp
fnstsw
add
sbb
ret
data16
inc
jbe
decl
mov
lea
jge
jmp
cltd
lods
mov
stos
dec
mov
clc
pop
pop
fs
and
push
stc
add
jne
sbbb
cld
dec
mov
sbb
pop
in
rcll
xchg
out
push
mov
add
jl
add
xchg
aam
rclb
fs
pop
jne
sbb
mov
mov
pop
enter
sub
ja
mov
cld
scas
test
mov
outsl
aam
jbe
sbb
gs
std
out
lahf
push
inc
data16
push
fucomp
mov
jg
xchg
sbb
lcall
jb
push
add
jo
orl
dec
fidivrl
mov
inc
imul
incl
incl
cmovg
inc
jbe,pn
add
rcrb
jg
push
jmp
and
dec
in
fdivr
leave
aas
push
ret
ds
inc
scas
xchg
xchg
mov
pop
movsb
daa
divl
dec
pop
add
mov
fildl
sahf
cltd
pop
add
loope
mov
mov
mov
mov
jecxz
shll
ret
inc
xlat
jecxz
ja
ror
cwtl
fcomps
fwait
and
hlt
clc
sbb
jle
testl
mov
xor
mov
dec
mov
loopne
inc
repz
sub
push
push
jbe
fistpl
mov
sbb
cmp
repnz
into
add
sbb
fwait
pop
ret
fsubr
outsl
hlt
sub
ret
sbb
es
ss
jge
call
fmulp
add
add
dec
xlat
ficoms
cmp
int3
sar
enter
shll
inc
and
xor
je
xchg
int3
add
add
add
je
xchg
mov
notl
outsl
movsb
dec
sub
sub
cmp
add
inc
jns
xlat
xchg
dec
xchg
shrb
call
and
loop
je
push
dec
sbb
adc
test
cltd
xor
lods
and
adc
and
xchg
lods
lcall
sbb
inc
dec
mov
pop
adcb
aad
dec
sub
jl
clc
mov
jp
dec
adc
int3
add
aas
mov
adc
add
add
lods
push
mov
jb
xchg
mov
and
jo
mov
sub
jecxz
dec
xor
mov
call
loope
enter
addb
negb
clc
iret
sti
loop
bound
bound
fildll
lods
in
push
dec
jl
call
daa
mov
in
shr
lret
hlt
cmp
mov
pop
sub
int3
call
mov
hlt
das
inc
popa
add
push
aaa
scas
pop
sar
cmp
fisttpl
pop
aad
std
pop
fs
dec
push
lahf
in
dec
out
imul
add
adc
test
mov
lea
jge
inc
mov
inc
dec
out
mull
in
inc
je
mov
int3
add
add
out
sbb
mov
lret
es
faddl
inc
cmpsb
enter
scas
mov
mov
add
insb
sahf
aaa
iret
ljmp
sbb
daa
repnz
dec
push
xor
jae
xrelease
and
adc
lret
es
mov
add
repz
scas
jne
movsb
push
pop
jmp
adc
push
dec
cltd
scas
and
inc
insl
mov
mov
xchg
xchg
xchg
leave
xor
mov
lock
mov
lock
dec
in
sub
cmpsl
dec
sti
movsb
popa
lods
loope
insb
std
jmp
adc
mov
push
or
dec
inc
jnp
push
jle
test
inc
fiaddl
addr16
arpl
sbb
sti
jmp
call
mull
and
ss
jg
lock
test
cmp
xchg
cld
cmp
dec
ffree
ret
rcr
andb
lahf
inc
rolb
dec
lds
int3
call
mov
sti
lods
add
sbb
jbe
std
inc
lcall
test
mov
fnstsw
add
lea
pop
lahf
adc
stos
sub
sub
sub
cltd
clc
sti
mov
xor
mov
std
push
xor
push
sbb
aad
fnstenv
inc
push
sbb
mov
inc
movsl
push
add
sbb
pop
ficomps
or
cmp
mov
pop
xchg
inc
inc
sbb
add
add
add
jp
data16
cmp
fcomps
and
xchg
aad
sarb
into
dec
add
pop
and
jbe
adc
xor
pop
nop
call
test
inc
jno
je
inc
push
call
add
test
scas
out
xor
cmp
roll
xor
pop
xchg
outsb
leave
stc
sub
pop
xor
sahf
push
test
mov
dec
push
test
mov
mov
hlt
jno
cmp
add
sbbl
xor
mov
je
pushf
mov
fwait
aaa
imul
push
adc
xlat
cmp
sti
movl
cs
adc
jmp
and
stos
cmp
cmc
in
dec
jmp
add
lcall
mov
mov
out
pop
mov
mov
mov
sub
aad
mov
jbe
mov
dec
mov
jp
xchg
aaa
push
cmp
lahf
add
cmp
or
push
inc
popf
dec
les
add
add
add
iret
lock
out
fimuls
adc
sbb
inc
sub
xor
sbb
out
jl
jge
xor
loop
lret
push
adc
insl
sbb
jns
lret
outsl
lcall
pop
andl
in
cmpsb
ljmp
push
xor
inc
dec
mov
rcrb
cmp
pop
lcall
notl
xchg
mov
shll
movsb
jns
aas
popa
sahf
imul
push
ljmp
mov
mov
xor
pop
data16
popf
gs
out
pop
xorb
dec
into
sub
push
ds
daa
mov
sarl
mov
std
adc
mov
mov
mov
sysret
mov
inc
dec
clc
gs
adc
sbb
xor
add
movsb
and
jle
mov
sahf
repz
in
jne
mov
and
pop
gs
sbb
sbb
lods
xchg
sti
inc
push
push
and
pop
out
or
push
mov
sbb
adc
dec
cli
cmp
dec
arpl
hlt
adc
dec
jns
xor
push
dec
xor
adc
xchg
jne
mov
mov
dec
fsubrl
inc
mov
jno
jle
cs
mov
mov
cltd
jge
mov
mov
orb
lock
arpl
scas
stc
shrb
xor
in
popa
xchg
ret
leave
mulb
iret
jb
xlat
pushf
add
shll
jns
or
nop
inc
mov
enter
popa
lods
outsl
push
inc
dec
call
xchg
loopne
ffree
dec
inc
pop
popf
cmp
cmpsl
aas
pop
push
or
ror
add
add
data16
pop
fcoml
xadd
cwtl
pop
mov
lcall
jmp
repnz
mov
ss
fldl
cmp
frstor
jo
inc
test
xchg
stos
orl
xchg
flds
inc
xor
push
or
sbbl
call
int3
pop
daa
outsl
enter
mov
pop
insb
add
sti
pop
fisubrs
xor
jmp
xor
paddb
in
jmp
dec
rcrb
mov
xor
in
and
out
fsubl
sbb
sub
sub
popf
out
lods
fsubr
test
push
scas
and
sub
outsb
sbb
or
test
inc
mov
dec
hlt
push
add
decl
add
mov
sub
mov
notl
and
adc
or
mov
mov
mov
cmp
pop
out
jp
mov
jb
test
xlat
scas
test
add
adc
jb
xchg
push
ficoml
and
mov
add
lea
sahf
rolb
sub
in
ss
call
add
iret
inc
leave
ss
out
loop
adc
fdivl
scas
add
mov
pushf
or
adc
and
or
mov
gs
jbe
hlt
cli
push
addr16
sbb
mov
addr16
mov
jl
sbb
add
pop
mov
movsl
lea
repz
call
test
test
and
es
lahf
loop
push
dec
xlat
add
in
out
mov
incl
incl
sbbl
xchg
shrl
ficoms
mov
xchg
jmp
jmp
lods
das
lods
dec
shlb
cmp
dec
int
ja
ljmp
fs
aas
mov
pop
xchg
cli
sbb
xchg
ljmp
imul
or
hlt
leave
repnz
jno
xor
fldl
fmull
cmpsl
push
loopne
mov
repnz
bound
test
lahf
dec
inc
aas
mov
mov
enter
loop
adc
fcmovnu
clc
pop
fbstp
add
mov
imul
divl
pop
dec
mov
adc
loop
pop
mov
jae
adc
jg
push
ss
lea
add
dec
mov
push
xor
subl
lds
xchg
dec
or
push
fld
sbb
leave
and
cmp
cmp
lret
sub
iret
add
call
outsl
pop
sub
or
xor
mov
sbb
or
flds
mov
dec
xchg
push
inc
inc
decl
xor
jo
jle
sbbl
xorb
pop
aam
sbb
imul
sahf
dec
xchg
mov
or
push
repnz
dec
pop
mov
cmp
xor
or
adc
mov
jne
push
jns
mov
fists
push
dec
push
pop
mov
xor
cmc
lret
mov
jp
je
xchg
popf
mov
mov
popa
push
jg
ss
in
sahf
adc
xchg
xchg
or
sbb
outsl
push
adc
fs
xor
jmp
xchg
mov
lret
test
rcr
test
imul
inc
jp
movsl
adc
push
lret
enter
jo
sbb
leave
sub
call
jge
jle
pop
sbb
add
rcrl
lret
push
cmp
in
inc
cmp
data16
inc
jb
mov
add
adc
add
push
inc
ret
jns
enter
add
inc
aad
push
mov
sub
fcomi
scas
mov
mull
mov
aas
lret
dec
call
call
outsb
add
stc
pop
or
scas
mov
insb
les
aaa
stos
xor
push
iret
imul
jle
js
fcmovb
xchg
lret
out
clc
sub
mov
add
dec
dec
push
xchg
aad
xchg
push
dec
jns
and
mov
mov
mov
mov
sub
ret
repz
or
jecxz
clc
mov
mov
inc
xchg
xchg
xor
stos
dec
mov
and
and
mov
mov
out
stos
lret
mov
leave
cmp
cwtl
mov
stos
cmp
lds
push
test
data16
inc
aam
aam
in
jl
les
cmp
pop
js
enter
cmp
aad
cmp
in
fistpl
mov
bound
jl
lea
das
scas
ljmp
in
fisubl
mov
into
je
dec
lods
faddl
int
xchg
jp
dec
cmp
scas
shlb
dec
call
pop
pushw
push
cmpsb
mov
ja
dec
or
push
cmp
ret
inc
out
mov
fmull
dec
cwtl
push
lret
add
scas
mov
fiadds
xchg
xorl
push
pop
testb
insb
xor
jb
inc
jg
sbb
les
dec
dec
and
add
add
mov
arpl
in
dec
and
nop
adc
xor
xor
mull
arpl
mov
xor
outsl
aad
addl
push
adc
test
fistps
jb
pop
dec
mov
jmp
and
mov
bound
scas
add
int
push
sub
lods
loopne
outsb
scas
inc
pop
scas
sbb
repz
sbb
into
or
fwait
mov
mov
push
fbld
cli
andb
jecxz
insb
push
jbe
leave
scas
shrb
add
leave
jae
mov
adc
xchg
pop
or
std
subl
xor
dec
dec
mov
jnp
test
mov
lea
xchg
and
sbb
cld
lock
mov
push
or
mov
add
push
xor
ljmp
ficoms
and
mov
mov
xchg
shr
aad
sub
add
repz
sbb
mov
jo
int3
cld
add
mov
cmp
jmp
addr16
cltd
cmp
into
loopne
mov
or
ret
out
sub
imul
cmpsb
add
out
and
mov
in
add
mov
mov
aad
and
mov
out
and
cld
ja
sub
cmp
dec
cmc
call
call
mov
or
aad
call
mov
jle
push
add
xchg
cltd
push
dec
jle
add
into
into
sub
mov
inc
add
ret
lods
enter
push
or
lods
lea
rorl
cs
sbb
pop
and
enter
sti
and
ret
les
mov
aas
roll
in
jbe
repnz
jge
sti
inc
pushf
divl
rcrb
add
dec
mov
or
roll
data16
mov
mov
adc
decl
ljmp
mov
pushf
lret
cmc
xchg
fnstenv
xchg
cmp
or
add
add
jne
add
inc
fildl
xor
movl
into
dec
or
xchg
into
test
inc
dec
hlt
xor
adc
jns
js
sbb
fwait
cld
fildl
push
jae
pop
insl
pushl
mov
xchg
pop
push
or
icebp
push
imul
dec
daa
jecxz
fildll
loopne
dec
or
icebp
cmp
sub
and
cwtl
adc
fs
mov
push
ss
pop
add
insl
sub
incl
xchg
in
shll
dec
push
mulb
enter
sub
orb
and
mov
pop
and
mov
jae
inc
mov
sbb
and
and
mov
enterw
dec
jp
arpl
mov
fisttps
bound
push
push
mov
jg
sahf
out
dec
lods
sub
cmc
adc
xchg
mov
xor
icebp
loope
or
dec
xchg
mov
mov
movsl
push
dec
cmp
test
fcmovb
sub
test
pop
sub
add
popf
sbb
fiadds
fbld
arpl
xlat
cltd
lods
loopne
dec
and
jo
cmp
fistpl
sbb
and
mov
jecxz
call
xchg
repnz
jmp
ds
lahf
mull
mov
sub
mov
add
add
and
xchg
push
inc
mov
pop
ret
xchg
xlat
pop
out
inc
inc
inc
movl
mov
push
pop
push
push
shlb
and
adc
or
int3
call
push
rorb
mov
adc
mov
decl
shlb
cwtl
iret
cwtl
inc
mov
aaa
jns
mov
mov
daa
dec
das
sbb
mulb
mov
stos
jg
mov
jae
scas
cli
bnd
push
outsl
push
outsb
ret
lcall
push
test
das
lea
dec
sbb
movsb
add
dec
movsl
rorb
and
jne
push
repnz
popf
sbb
sbb
push
mov
mov
mov
sub
rolb
and
xchg
ret
pop
fs
mov
add
add
add
or
js
push
cmpsl
mov
adc
shr
sbb
outsb
mov
addr16
push
insl
pop
lcall
les
adc
leave
dec
mov
dec
cwtl
fidivs
xchg
faddl
mov
xor
out
mov
dec
push
inc
cltd
sbb
jnp
int3
inc
dec
pusha
xchg
stc
add
jne
addb
sbb
js
fwait
mov
mov
lock
inc
stos
ja
push
aaa
mov
popf
in
fiaddl
in
mov
nop
adc
mov
leave
jp
pop
stc
add
xchg
adc
enter
lea
jbe
dec
mov
call
and
dec
cmp
inc
push
inc
lods
push
mov
mov
push
adc
lods
cwtl
mov
adc
jge
les
lcall
loop
call
call
arpl
repz
rcrb
scas
out
mov
mov
mov
stos
push
add
and
xor
ja
fs
outsl
pop
pop
les
outsl
lds
loope
mov
imul
movsb
andb
fildl
divb
xor
xchg
jnp
mov
pushf
mov
shrb
sbb
aaa
repnz
sbb
xor
dec
sbb
cmp
push
sbb
push
cmp
call
adc
in
inc
or
out
mov
mov
mov
jg
adc
jl
jg
frstor
dec
lret
cmpsb
inc
pop
adc
cli
sbb
enter
out
xor
mov
pushf
out
cmp
xorl
cmp
sbb
mov
sbb
lods
idiv
sub
insl
jle
je
inc
test
add
ret
sub
cli
mov
cmp
insb
sub
sub
mov
pop
repnz
pop
in
push
sub
call
mov
pop
mov
data16
rcr
dec
pushf
lds
lret
lahf
mov
orl
gs
rorb
dec
adc
fwait
icebp
push
insb
dec
or
andl
xchg
cltd
hlt
push
xchg
cld
test
enter
or
lea
add
negb
cmp
loopne
fildl
mov
jl
add
and
in
jmp
sbb
ljmp
lahf
ucomiss
mov
fwait
lods
push
push
mov
fnstcw
fistps
and
mov
out
lret
mov
adc
stos
loop
xchg
sbb
adc
ss
mov
mov
push
fsubrl
sub
add
push
repz
sbb
or
sub
pop
push
sbb
sbb
fbld
xor
xchg
add
mov
dec
or
mov
clc
mov
mov
pop
push
pop
mov
shlb
mov
jl
pushw
pop
mov
mov
int3
add
ret
scas
mov
mov
mov
shrb
out
ljmp
xorb
cmp
pop
mov
xchg
fdiv
dec
daa
sub
lock
xchg
or
pop
dec
movsb
popf
out
add
adc
incl
incl
incl
push
sbb
pop
lods
in
cmp
mov
in
int3
add
jle
add
test
aaa
test
test
ret
iret
pop
push
add
lock
mov
push
and
hlt
stos
dec
xchg
cmp
rcll
cs
scas
xchg
test
jmp
scas
or
xor
add
int3
call
outsb
cmpsl
mov
or
lods
aam
sub
loopne
pop
xor
loop
ljmp
aas
adc
jl
scas
jae
mov
mov
xchg
pushf
stos
pop
imul
int3
add
add
xor
mov
es
test
lea
pop
add
fwait
gs
decl
jecxz
jnp
out
icebp
insb
mov
nop
jmp
jne
loop
jbe
js
push
and
out
jmp
jmp
fsubs
sbb
mov
loopne
push
cmpsl
test
test
jg
xchg
push
lret
push
add
ljmp
fsubrs
xor
cmpsl
and
mov
pop
ret
push
dec
sbb
xor
repnz
pop
or
addr16
add
add
out
cmpsl
lret
les
dec
jl
xchg
imul
mov
out
popf
pop
xor
jno
ljmp
call
jmp
fucomp
and
pushf
cwtl
jo
mov
pop
mov
scas
lret
insl
movsl
add
and
aaa
add
xchg
insl
xchg
push
aaa
rcr
xchg
notb
and
daa
test
lock
inc
ljmp
jbe
hlt
je
bndstx
xor
pushf
loop
pop
cli
mov
int3
add
sub
clc
push
or
stos
and
jecxz
lcall
or
dec
ds
js
out
lods
sbb
push
inc
or
adc
dec
je
mov
imul
xlat
sub
lret
sbb
mov
pop
ds
fsubl
inc
imul
jbe
ljmp
push
xor
jmp
out
repz
push
or
push
or
pop
add
mov
mov
mov
ret
sbb
push
jne
test
and
or
nop
sub
scas
out
lock
push
xchg
inc
mov
sbb
call
int3
test
andb
inc
adc
mov
cmc
push
outsb
sbb
jmp
sarb
push
xchg
adc
cld
dec
fstpt
adc
lock
lret
xlat
mov
shr
int3
call
xchg
adc
jns
daa
mov
mov
je
stos
adc
stc
push
xchg
xchg
xchg
fmul
movsb
push
es
add
mov
xor
mov
xchg
or
xchg
bound
test
incl
jle
cld
sbb
push
in
mov
fisttpll
inc
sub
stos
mov
add
pop
cld
and
mov
cli
cmc
iret
add
cmc
mul
movsb
and
scas
sub
mov
cmp
mov
enter
lret
popf
fldl
adc
adc
incl
mov
lcall
adc
cmpsb
jns
push
adc
xor
mov
daa
xor
hlt
out
cmp
cmp
call
cwtl
jns
movsl
add
fmul
mov
pop
jge
mov
jmp
stos
test
pop
or
inc
inc
jg
lds
dec
pop
mov
out
xor
cmp
xor
adc
pop
mov
mov
int3
jb
popf
negl
roll
lods
push
mov
adc
scas
add
movsb
lods
mov
leave
fs
cwtl
arpl
or
stc
stos
fisubrl
out
iret
xor
jnp
mov
outsb
sti
cld
push
lds
xor
sarb
fidivs
out
add
xchg
daa
insb
movsl
add
pop
sahf
ret
sbb
mov
xchg
push
mov
mov
imul
aas
movsl
idivb
and
repnz
jns
sbb
shl
sub
ffreep
incl
jmp
test
push
cmc
cmc
nop
mov
dec
out
push
lods
xchg
stos
or
pushf
int
dec
jno
cld
push
push
mov
fistl
shll
adc
dec
xor
add
lret
cli
inc
insb
ljmp
imul
and
fidivl
in
cmp
pop
test
pop
inc
inc
ljmp
int
add
ficomps
cmp
call
and
outsl
jne,pn
cmp
mov
xchg
sub
push
inc
add
ds
daa
sub
jae
cmpsl
movsl
xor
stos
jle
push
jns
push
mov
shlb
stc
xor
add
add
jns
lcall
jmp
into
cmpsb
cmp
mov
imul
jmp
sarb
lods
les
add
add
add
addr16
addl
in
dec
popf
mov
mov
mov
mov
push
shrb
xchg
xor
pop
dec
mov
xchg
adc
lret
push
mov
pop
incl
add
add
das
xchg
pop
jecxz
dec
les
mulb
mov
and
mov
cld
push
stos
int3
add
add
call
arpl
sti
xor
or
cmp
fsubrl
pop
push
cltd
pushf
fldenv
push
pushf
sub
jae
sbb
push
xor
xchg
insb
out
clc
ffree
inc
xchg
add
push
cmp
jbe
mov
pop
push
mov
mov
sub
clc
jl
mov
push
popf
inc
loop
adc
decl
dec
or
into
jno
mov
idivb
out
add
mov
mov
repz
xchg
in
xlat
mov
mov
enter
repz
push
js
jmp
pop
mov
jb
push
or
sbb
leave
mov
inc
mov
cmp
lahf
push
cmp
into
jno
pop
cmpsb
iret
jo
stos
aad
inc
xor
pusha
sbb
das
adc
add
add
mov
pop
iret
push
mov
push
mov
test
cmc
sub
les
push
adc
push
cltd
jae
in
xchg
popa
xchg
inc
shll
or
popf
add
inc
mov
push
or
jo
shlb
cmpb
adc
inc
push
andb
lahf
shrl
or
cmpl
xor
imull
sub
cmp
adcb
mov
outsb
jno
out
rcrb
in
sbb
fdivs
sbb
arpl
fsin
arpl
cmp
cs
jno
shlb
mul
jge
fdivl
out
movsl
sub
int
mov
sub
ss
jbe
xchg
fistpl
adc
or
insb
and
add
add
fisubl
jbe
xchg
inc
pop
lahf
xchg
in
sbb
xor
andl
mov
cmp
dec
aas
out
pop
fsts
cmp
push
cs
inc
push
add
ret
mov
or
and
mov
gs
not
jo
lcall
cli
mov
sub
dec
mov
frstor
call
ljmp
cli
pusha
scas
pmaxsw
cmp
stc
xor
cli
fwait
xchg
lret
pop
aam
in
push
xchg
inc
stc
int
adc
test
movl
jne
push
sbb
loope
ud2
add
orl
and
ja
push
add
lods
js
fwait
adc
loopne
xor
dec
daa
test
xchg
jmp
movsb
sti
adc
lret
push
mov
jle
xor
adc
loope
clc
incl
incl
test
loope
sahf
jae
stos
cmpsl
lret
sub
lret
adcb
add
int3
mov
insl
jae
hlt
sbb
icebp
jg
outsl
mov
inc
and
add
aad
inc
popa
fmull
mov
or
scas
lahf
cli
test
jge
or
pop
cmp
adc
out
popa
daa
adc
or
in
inc
frstor
and
jne
aad
cltd
mov
call
enter
into
xor
inc
in
cmp
outsb
mov
in
mov
in
cmc
call
sbb
sbb
popf
xchg
subl
call
ret
push
xchg
ss
push
xchg
cld
rorb
xchg
push
and
ds
cmc
lods
xchg
dec
jle
sub
imul
std
lahf
xchg
outsl
call
mov
push
xor
insl
mov
mov
xor
cmp
sbb
xor
ljmp
jl
in
inc
dec
pop
fbstp
incl
jmp
imul
jae
ljmp
rcl
jae
test
xor
out
dec
incl
incl
pushl
sbb
call
xchg
ja
out
and
xchg
sub
fwait
lret
fs
stc
xchg
call
int
fs
fidivl
ret
sbb
outsl
cmp
cmpsb
outsl
mov
cmc
xlat
lods
lahf
mov
sub
xchg
dec
lret
daa
out
fwait
or
or
nop
mov
inc
xchg
xorl
bound
cmpsb
push
sub
loop
mov
out
cs
stos
push
shlb
jno
scas
pop
jns
shrb
xor
aam
dec
dec
ds
and
jb
popf
int3
jo
les
fistl
mov
pop
xchg
xor
add
lahf
fcoml
fs
push
stos
and
pop
aad
add
lods
das
fwait
add
sbb
iret
mov
inc
inc
xlat
aas
dec
fcmovnb
mov
inc
push
mov
std
cmp
out
mov
in
pop
mov
gs
out
mov
rcr
clc
cmp
cmp
lret
jp
call
int3
mov
sbb
push
repz
dec
jae
movsl
xchg
xchg
lods
cs
pop
int3
call
sub
pop
pop
dec
rclb
add
mov
adc
dec
mov
and
stos
pop
pop
dec
dec
cld
sbb
sbb
cmp
decl
ljmp
pushf
out
or
inc
incl
incl
incl
lds
adc
push
mov
pop
xchg
inc
push
jmp
insl
ficomps
xor
out
fsubp
pop
lahf
andl
cmp
ficomps
or
aas
xor
jae
cmp
xchg
fs
mov
cld
int3
fildll
stc
and
sbb
mov
push
mov
mov
stc
jne
push
stc
push
movsl
pop
call
aad
outsl
add
mov
or
ja
mov
add
scas
imul
xor
mov
mov
les
subb
sahf
fsts
popf
fwait
jns
sbbl
mov
sahf
lcall
dec
repz
mov
mov
sub
xchg
icebp
popf
rclb
insb
inc
sarl
cmp
xor
cmc
aas
dec
scas
sbb
stos
mov
int3
add
add
add
iret
ret
cmp
shlb
insl
mov
int3
call
hlt
outsl
xchg
ffreep
sbb
cmpsb
mov
repz
pop
aaa
adc
mov
sti
mov
movmskps
stc
int3
cmp
clc
repnz
mov
test
inc
push
push
scas
lret
mov
add
ret
outsb
lods
inc
insb
mov
stos
outsb
adc
jmp
lods
out
fucomi
imul
incl
incl
lcall
xor
jno
and
inc
cmp
data16
jne
jle
push
popa
pop
mov
sub
push
roll
dec
add
in
out
push
mov
xchg
data16
sub
cmpsl
lods
add
inc
pop
les
mov
cvttps2pi
mov
pop
gs
clc
idivw
test
in
cld
mov
pop
pop
mov
int3
call
xor
inc
xchg
insb
push
cmp
fisttpl
scas
pop
ja
sahf
adc
lret
dec
insl
enter
mov
ljmp
test
push
iret
mov
imul
cmp
adc
movl
push
imul
roll
jne
xor
iret
ret
lods
inc
mov
incl
incl
jae
in
aaa
jo
enter
pop
dec
fwait
sahf
jle
insl
js
and
pusha
pop
scas
and
mov
dec
sbb
std
ja
hlt
cmp
cmpl
xchg
sti
sub
mov
shll
jmp
dec
pop
dec
arpl
or
in
cmp
movb
adc
dec
sarb
pop
rclb
and
ss
xchg
aam
mov
mov
repz
jle
jg
test
adc
or
mov
cmpb
push
sub
inc
outsb
dec
and
mov
popa
or
or
inc
fisubs
cmp
mov
int3
add
add
dec
outsw
leave
cld
or
mov
sbb
aas
faddp
in
fisttps
imul
inc
bound
push
add
mov
mov
pop
dec
jmp
outsl
jo
xchg
or
jns
cmp
call
int3
pop
dec
cmpl
adc
int3
call
int3
stos
lock
or
sbb
xchg
mov
add
sahf
jmp
jno
fists
adc
jns
outsl
jae
repz
adc
adc
pop
mov
cmp
mov
dec
test
adc
xor
xchg
outsb
and
xchg
dec
pop
sti
add
ds
loop
hlt
add
imul
lock
and
or
sub
and
push
or
add
int
aam
nop
cld
lods
addr16
push
ss
xor
es
add
add
lahf
imul
mov
fs
mov
and
fsubrs
jae
jecxz
lods
insl
xchg
adc
cmpsl
lahf
addl
hlt
outsl
loop
sbb
call
pop
sti
adc
gs
mov
add
cmc
mov
push
test
mov
mov
sub
xchg
push
sub
lds
add
js
adc
das
mov
xor
cwtl
shrb
inc
sahf
leave
stos
cmp
fcmovnb
jbe
sahf
xchg
popf
add
bound
push
hlt
std
inc
cmc
inc
xor
stos
jns
popa
outsl
mull
xor
stc
or
mov
add
mov
cmp
lock
pop
pop
repz
in
int3
lods
lock
out
call
lcall
data16
mov
or
lea
les
cmc
mov
test
jmp
xchg
push
xchg
mov
cltd
mov
mov
mov
sub
shl
mov
dec
push
or
mov
sub
jle
test
mov
pop
jns
adc
js
imul
pushf
dec
into
fdivr
adc
loope
jne
repnz
hlt
pop
cltd
xor
jecxz
dec
push
ficompl
sbb
mov
enter
mov
pop
imul
hlt
in
shlb
outsl
xor
xchg
shl
jo
sarb
sub
xchg
loopne
or
ljmp
pop
jle
iret
xchg
add
xchg
dec
cltd
mov
pop
scas
dec
jnp
incl
incl
incl
inc
push
ficomps
pusha
add
sub
xchg
rolb
sbbb
pop
cltd
mov
mov
mov
cmpsl
inc
repz
adc
data16
in
leave
xchg
mov
pop
cli
sbb
pop
data16
out
mov
xor
test
into
xchg
xor
negb
dec
notb
scas
jg
add
inc
in
loopne
repnz
jmp
decl
out
test
sarb
dec
adc
les
push
xor
xlat
sub
in
roll
pop
repz
cmpsb
lret
adc
xor
and
mov
jle
add
pop
ja
xchg
mov
stc
or
dec
jg
ret
scas
and
dec
test
lds
dec
dec
sbb
or
push
lret
lret
push
cmpsb
sbb
gs
pop
subb
fstpl
sbb
les
outsb
push
dec
fs
mov
push
pop
mov
jg
js
mov
icebp
sub
and
jbe
aad
lret
jno
push
frstor
jo
xor
cmp
mov
cmpsl
mov
inc
pop
test
test
mov
pop
inc
mov
jmp
mov
call
jl
sbb
push
pop
sub
lahf
cli
lret
lock
adc
ss
mov
mov
pop
popa
jns
lods
or
popf
jle
push
pop
int3
add
add
and
jge
cmp
sbb
jnp
sbb
jle
popa
out
mov
imul
mov
and
jl
mov
jle
mov
ja
shr
stos
xlat
rcll
sbb
repnz
push
push
xor
sub
mov
into
cmp
sub
rsqrtps
test
int3
loop
dec
icebp
xor
mov
or
sub
movsb
ffree
push
imul
add
and
pop
in
test
loopne
pushf
call
pop
mov
mov
cmp
repnz
and
adc
notl
sbb
mov
shll
ljmp
mov
push
or
add
mov
xor
push
mov
mulb
sub
stc
cwtl
push
xor
xchg
test
push
jae
push
mov
iret
sub
aaa
mov
mov
movsl
loopne
push
test
jo
repz
jmp
notl
xchg
dec
lret
out
subb
jne
xchg
jecxz
add
int3
push
out
inc
xchg
add
sub
cmc
dec
lret
pop
outsl
xchg
sarb
sub
leave
xchg
mov
sub
push
jl
sub
ret
jne,pn
mov
mov
add
icebp
dec
sub
push
push
sbb
xchg
and
popf
or
pop
rcll
push
push
ljmp
ret
adc
jnp
and
rcll
arpl
lea
dec
dec
ds
dec
cmp
jmp
pusha
adc
xchg
shrb
jb
movsb
imul
adc
or
insl
xchg
xchg
jecxz
mov
popf
clc
or
xorb
add
fstl
subl
or
inc
dec
mov
mov
mov
mov
in
pop
add
mov
push
pushf
pop
and
test
jl
mov
hlt
pop
in
insb
and
into
nop
cmp
mov
in
push
es
andb
push
out
mov
xchg
filds
mov
aas
mov
pop
mov
mov
popa
inc
pop
cld
repnz
mov
jg
imul
sub
and
sti
dec
mov
mov
rcrb
int3
outsb
les
aam
mov
roll
fistpll
int
stos
outsb
lods
mov
hlt
push
fs
push
or
push
jle
mov
mov
cmp
aam
outsb
test
ficomps
inc
rcr
inc
and
arpl
popf
lret
add
lds
je
aam
stos
data16
aam
push
loop
push
add
jne
xchg
jnp,pt
jmp
jns
popa
jl
mov
jbe
or
nop
and
sbb
iret
cmp
push
ret
and
rolb
xlat
mov
push
mov
mov
mov
xor
and
push
nop
mov
lret
adc
mov
inc
scas
dec
into
inc
sbb
pop
inc
jmp
dec
xchg
mov
xor
cld
std
or
and
lock
xor
aam
jg
scas
mov
inc
jecxz
mov
mov
pusha
mov
jae
cmp
lods
mov
dec
push
fistpll
inc
in
xchg
test
jle
leave
push
dec
sub
int
fwait
call
cltd
arpl
xor
ret
jle
inc
and
and
add
adc
outsl
jno
mov
bound
jo
fmuls
lretw
ds
mov
xchg
stos
shlb
lods
sub
in
add
stos
icebp
std
adcl
ss
and
into
xchg
mov
mov
mull
dec
add
mov
mov
adc
sbb
xchg
dec
inc
xchg
mov
movsl
mov
mov
and
aaa
sub
stc
sub
dec
dec
mov
bound
jmp
loopne
xchg
es
repz
imul
push
rcll
lods
pop
fsts
popa
xor
mov
call
aas
repz
mov
cmp
or
cmp
or
in
cld
sub
mov
cmp
push
dec
xchg
jl
call
sub
sbb
imul
movsb
mov
mov
adc
leave
xchg
jmp
jmp
push
add
jle
pushf
cmc
cmp
pop
or
xchg
stc
ss
int3
cmpsl
or
push
xchg
inc
sbb
jmp
xchg
mov
je
mov
and
jl
int3
add
add
cltd
ja
mov
adc
das
dec
mov
jg
cmpsl
in
mov
pop
pop
mov
push
pop
into
or
loope
jmp
or
push
mov
pop
cli
adc
stos
mov
fstpl
icebp
cmp
or
js
int3
call
adc
test
fsubl
sub
push
call
cmpsb
insb
pop
push
mov
xchg
pop
sahf
push
add
repnz
sub
push
sub
fldl
bnd
adc
andb
mov
cmp
mov
and
dec
mov
and
sti
dec
mov
out
ret
sub
jp
ljmp
cmc
dec
movhps
or
jo
and
decl
xchg
icebp
cld
pop
je
mov
add
and
pop
xchg
popa
testb
movsl
or
out
aaa
loop
dec
fbld
inc
jne
mov
cmp
xlat
loopne
shlb
daa
xlat
aaa
pop
rcrb
ds
fsubs
ja
shlb
cmp
mov
jb
outsl
ret
sbb
push
test
aas
aad
xor
fisubs
push
repz
dec
xchg
sub
jp
lods
pop
add
sbb
cltd
sbb
rclb
xor
lds
sub
incl
incl
incl
cmp
add
jae
daa
int
or
dec
fsubrp
pop
sub
jmp
add
xchg
xchg
push
jl
je
in
push
or
lods
dec
pusha
sbb
cmpsb
push
jecxz
sbb
push
xor
loopne
shlb
js
lcall
loopne
or
inc
mov
xor
mov
cmpsl
adc
dec
sahf
mov
sarl
mov
mov
arpl
lahf
iret
inc
mov
mov
mov
inc
mov
mov
cmp
cmp
out
lock
mov
rep
scas
movsl
cltd
sub
js
cmp
mov
repz
mov
imul
sub
out
bound
xchg
cs
pop
pop
xchg
movsl
sbb
out
jmp
inc
stos
sbb
aam
shrl
mov
dec
or
dec
cmp
inc
stos
loopne
push
xchg
mov
movsl
incl
lcall
sub
or
ret
call
mov
jae
scas
and
xor
test
dec
pusha
adc
imull
out
inc
xchg
movsb
adc
mov
aam
shlb
loop
icebp
push
insl
loope
cmc
test
cmpsl
fisubs
pop
pop
pop
fisttpll
jp
lcall
call
inc
cmp
mov
xchg
cmp
aad
pushf
xchg
cmpsb
jno
test
xor
loop
jge
add
sub
push
idivl
int3
call
pop
outsl
or
mov
mov
inc
dec
int3
dec
add
incl
lcall
in
sarl
aad
cs
leave
outsb
cld
mov
repz
mov
mov
dec
jo
in
inc
xchg
out
push
in
imulb
test
sub
add
add
add
in
pop
in
jp
fildl
shll
mov
and
enter
sub
mov
cmp
cld
mov
inc
div
mov
sbb
roll
adc
stos
incl
incl
incl
inc
aas
dec
inc
pop
sub
and
or
in
mov
jnp
imul
nop
out
mov
inc
push
pop
aas
sub
int
or
pop
in
mov
scas
mov
inc
hlt
int3
cld
sub
cmp
ljmp
cmpsb
or
rcrb
je
xchg
jnp
push
lods
xor
test
xlat
ficoml
pop
in
jge
popa
fiadds
adc
stos
das
loopne
mov
lea
cmp
xchg
jne
jl
mov
mov
mov
mov
mov
jae
inc
add
subl
mul
out
mov
mov
push
enter
adc
dec
push
or
xchg
adc
fiadds
popa
int3
push
in
pop
pop
shrb
xchg
and
pop
scas
xchg
lods
dec
out
cmpb
addr16
jne
mov
mov
imul
mov
pop
mov
dec
stos
lods
push
stos
add
xchg
mov
sbb
xchg
mov
scas
or
jns
jmp
jg
int3
call
xor
jl
inc
fstpl
ficoml
pop
add
xor
add
jnp
scas
jb
adc
mov
call
mov
xor
fcmovu
inc
dec
push
cwtl
data16
filds
dec
iret
xchg
sub
lds
ljmp
adc
jb
jmp
lret
out
mov
dec
fwait
xor
and
jno
scas
leave
stos
sub
in
or
iret
rcr
aas
fisubs
test
jp
push
out
jmp
sbb
js
das
call
jns
outsl
data16
popa
jb
arpl
jns
popa
bound
add
xor
xor
xor
add
add
add
incl
add
add
das
inc
add
add
add
incl
add
add
inc
add
add
add
inc
add
xor
add
add
incl
add
add
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
pushl
push
inc
add
add
add
push
push
inc
add
push
inc
add
add
add
incl
add
add
push
inc
add
incl
add
add
push
inc
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
gs
xor
cs
insb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
add
add
ficoml
add
push
inc
add
add
add
incl
add
add
pop
inc
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
mov
arpl
add
add
incl
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pop
cs
add
add
add
add
add
incl
add
add
inc
add
add
add
cmp
add
incl
add
add
add
add
incl
add
add
jne
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
jp
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
jmp
jnp
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
lcall
test
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
popa
add
add
or
inc
add
push
add
loopne
add
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
filds
inc
dec
dec
add
filds
inc
dec
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
filds
inc
push
inc
add
filds
inc
push
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
aam
inc
add
dec
add
filds
dec
push
dec
add
xor
add
xor
xor
add
xor
add
add
filds
push
push
inc
add
inc
add
xor
add
xor
xor
add
xor
add
add
mov
inc
add
push
add
loopne
add
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
lods
filds
inc
push
dec
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
filds
inc
push
inc
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
xchg
filds
inc
inc
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
inc
add
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
pusha
filds
inc
push
dec
add
loopne
add
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
filds
inc
push
inc
add
inc
add
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
lods
filds
inc
push
inc
add
add
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
filds
inc
push
push
add
inc
add
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
lods
filds
inc
push
inc
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
filds
inc
push
dec
add
filds
dec
push
pop
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
lods
filds
inc
push
inc
add
filds
push
inc
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
push
add
filds
pop
inc
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
lods
filds
inc
push
inc
add
fiadds
inc
dec
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
lods
filds
inc
push
push
add
fiadds
push
inc
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
lods
filds
inc
push
dec
add
fiadds
inc
dec
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
lods
filds
inc
push
push
add
fiadds
push
inc
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
lods
filds
inc
push
push
add
fiadds
inc
push
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
lods
filds
inc
push
inc
add
fiadds
inc
inc
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
lods
filds
inc
push
dec
add
fiadds
inc
dec
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
lods
filds
inc
push
pop
add
push
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
lods
filds
inc
push
pop
add
pop
add
xor
add
xor
xor
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
or
sbb
adc
add
or
adc
or
add
inc
add
loope
add
push
add
loope
add
dec
add
loope
add
inc
add
push
add
push
add
inc
add
dec
inc
add
dec
add
pop
dec
add
add
dec
add
inc
add
dec
add
add
dec
add
add
dec
add
add
inc
add
inc
add
push
add
loope
add
inc
add
inc
add
push
add
loope
add
add
jecxz
add
push
add
loope
add
push
add
loopne
add
inc
add
jecxz
add
inc
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
add
add
clc
out
add
push
add
out
add
push
add
out
add
push
add
out
add
inc
add
inc
add
dec
inc
add
dec
add
dec
dec
add
dec
push
add
dec
add
inc
add
push
add
add
dec
add
inc
add
push
add
inc
add
inc
add
inc
add
push
add
out
add
inc
add
out
add
dec
add
inc
add
inc
add
out
add
inc
add
out
add
dec
add
out
add
dec
add
out
add
pop
add
dec
push
add
push
add
dec
inc
add
add
push
add
inc
add
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
inc
add
push
add
inc
add
add
out
add
add
in
add
add
in
add
add
in
add
dec
add
in
add
push
add
dec
push
add
push
add
dec
dec
add
inc
add
inc
add
add
push
add
add
inc
add
add
dec
add
in
add
dec
add
inc
add
in
add
inc
add
in
add
inc
add
in
add
inc
add
in
add
inc
add
dec
add
dec
add
dec
add
push
dec
add
inc
add
inc
add
add
pop
add
add
push
add
in
add
push
add
in
add
pop
add
inc
add
push
add
inc
add
inc
add
jecxz
add
add
jecxz
add
inc
add
jecxz
add
push
add
jecxz
add
push
add
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
jb
imul
outsl
jb
imul
add
jmp
mov
inc
add
add
add
jmp
cmpsb
inc
add
jmp
movsb
inc
add
pushl
inc
add
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
lods
inc
add
add
add
incl
add
add
add
add
sti
mov
add
mov
add
add
add
incl
add
add
add
add
decl
inc
add
inc
add
add
add
pushl
inc
add
inc
add
add
add
incl
roll
jmp
ret
and
clc
inc
add
jmp
add
push
push
inc
push
stos
int3
add
pushf
sub
cltd
lds
add
add
pop
push
imul
jno
push
jns
pop
pop
jno
jo
jo
bound
add
je
add
mov
add
int3
jmp
add
add
insb
roll
add
add
ret
add
rolb
add
add
add
roll
add
add
add
add
inc
lock
inc
roll
add
add
cli
cmc
add
add
add
and
add
loopne
add
into
cmc
add
mov
cmc
add
lcall
add
add
pop
cmc
add
dec
cmc
add
cmp
add
es
add
adc
add
add
add
repnz
add
fdiv
add
lret
add
add
nop
hlt
add
jbe
add
pusha
hlt
add
push
hlt
add
ss
add
sub
add
push
hlt
add
adc
add
or
add
clc
repz
call
repz
repz
stos
repz
pushf
repz
mov
add
test
add
jo
add
pop
repz
dec
repz
repz
sub
add
push
repz
or
add
cli
repnz
call
repnz
mov
repnz
mov
add
jbe
add
pop
repnz
inc
repnz
sub
add
adc
add
dec
lock
pop
lock
push
lock
xchg
add
xchg
lock
lods
lock
mov
lock
loop
add
out
lock
add
add
adc
add
xor
add
inc
icebp
add
dec
icebp
add
data16
add
jbe
add
mov
add
sahf
icebp
add
lods
icebp
add
mov
icebp
add
fdiv
add
lock
add
add
add
add
add
xor
add
sbb
add
push
lock
hlt
out
add
fsubr
add
mov
out
add
xchg
out
add
sub
add
add
add
add
mov
add
in
add
fsubrp
add
hlt
in
add
or
add
push
in
add
xor
add
inc
in
add
push
in
add
in
add
jb
add
test
add
out
add
push
out
add
inc
out
add
cmp
add
sub
add
push
out
add
or
add
clc
in
add
out
add
add
enter
mov
in
add
xchg
in
add
jl
add
add
add
pop
out
add
dec
out
add
ss
add
into
out
add
in
add
hlt
out
add
or
add
and
add
add
add
mov
add
cmpsb
out
add
mov
add
jp
add
add
add
lcall
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
popa
insl
gs
arpl
add
imul
arpl
outsb
add
sbb
push
imul
popa
jae
inc
js
add
jns
inc
gs
imul
js
dec
outsb
addr16
push
add
push
add
je
outsl
jb
addr16
jne
fs
imul
add
arpl
popa
imul
outsb
add
aaa
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
insb
imul
inc
popa
je
add
inc
add
outsb
fs
gs
popa
addr16
add
cltd
add
je
outsl
jns
imul
add
je
insb
imul
inc
popa
je
add
sub
push
gs
gs
jae
inc
inc
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
imul
push
add
inc
gs
imul
outsb
addr16
add
sbb
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
add
jne
push
imul
clc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
arpl
imul
gs
imul
js
push
add
addl
imul
outsb
addr16
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
je
insb
addr16
je
insl
add
push
inc
gs
imul
add
outsb
fs
imul
inc
add
je
popa
jb
outsb
je
xor
push
arpl
insb
insb
push
imul
imul
gs
jb
jo
add
push
push
inc
push
xor
cs
insb
add
adc
push
push
inc
inc
insb
outsl
jae
inc
jbe
outsb
je
inc
add
inc
push
popa
imul
je
jo
gs
jbe
outsb
je
add
inc
add
inc
push
outsl
arpl
je
add
adc
push
push
inc
inc
outsl
outsb
outsb
arpl
push
push
xor
xor
fs
insb
add
imul
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
gs
gs
jo
outsb
push
add
je
jo
outsb
fs
gs
gs
push
add
push
add
je
inc
fs
gs
gs
dec
gs
fs
push
add
push
add
je
dec
jo
outsb
push
gs
gs
push
add
lcall
outsb
gs
gs
fs
imul
outsb
je
jb
gs
outsl
outsb
outsb
arpl
add
gs
gs
gs
jo
imul
dec
dec
dec
dec
inc
push
cs
insb
add
push
popa
imul
jo
imul
jo
push
gs
gs
imul
add
push
gs
gs
imul
add
arpl
insl
je
gs
gs
gs
je
arpl
imul
pop
push
jo
inc
imul
jae
insb
imul
popa
insb
add
dec
fs
gs
gs
popa
insb
insb
xor
add
push
gs
jb
push
outsl
push
gs
data16
push
jo
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
imul
jb
outsb
addr16
add
inc
push
push
xor
fs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
gs
imul
je
imul
add
push
gs
outsb
fs
inc
imul
jb
popa
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
je
inc
outsl
outsb
jae
insb
gs
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
dec
gs
jo
jb
add
push
add
popa
jo
insb
insb
outsl
arpl
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
gs
imul
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
inc
popa
je
insb
inc
jo
inc
js
je
add
gs
jb
je
arpl
push
arpl
outsb
add
jae
push
imul
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
sub
dec
jae
popa
fs
jb
je
push
je
add
je
jb
arpl
jae
cwtl
add
je
jb
arpl
fs
jae
add
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
insb
jae
insb
insb
outsl
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
cmp
inc
jne
jb
outsb
je
push
add
push
add
inc
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
dec
add
fs
imul
add
cmc
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
popa
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
imul
popa
je
add
aas
add
je
popa
je
inc
outsl
jb
popa
je
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
aaa
add
push
popa
insb
imul
add
popa
insb
imul
add
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
cmp
dec
inc
dec
popa
jo
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
popa
jo
je
imul
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jns
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
xor
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
add
or
add
inc
add
js
add
arpl
jns
arpl
jns
jae
add
jns
add
push
add
jo
add
add
or
add
add
in
lock
pusha
pop
out
add
mov
les
stos
jl
shl
es
test
or
test
pop
test
sub
nop
jnp
scas
shrl
addl
idivl
repz
scas
imul
enter
test
cmc
popf
xor
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
test
push
add
pusha
mov
flds
xlat
xor
cmpsb
daa
movsbl
in
lea
or
mov
cmp
cmp
inc
push
mov
out
das
clc
cld
xor
jne
mov
or
cmp
adc
and
sbb
ss
bound
jmp
ss
lret
cmp
test
out
imul
jae
mov
jmp
in
xlat
adc
and
arpl
fwait
and
mov
shll
stc
xchg
mov
leave
mov
push
notb
das
or
mov
lods
sbb
adcb
sbb
inc
ror
xchg
mov
das
jnp
xchg
repz
inc
pusha
cmp
xchg
movsl
sub
or
or
jne
pop
mov
divb
movsb
inc
jg
into
inc
fdivrs
jb
inc
jecxz
mov
lret
pop
add
adc
mov
lcall
adc
xor
cltd
or
lret
mov
shll
push
add
ret
add
push
test
mov
push
inc
cli
hlt
jne
ljmp
repnz
inc
imul
popa
lcall
cs
cmpsl
mov
jg
or
stos
aad
stos
fisttps
in
vrsqrtss
or
sbb
add
sbb
push
mov
pop
pop
mov
movsb
pop
xchg
je
sub
outsb
sbb
fcomip
mov
push
sub
stos
xchg
dec
pop
lret
movsl
repnz
or
cmp
inc
pop
arpl
push
inc
call
inc
nop
push
in
pop
aam
cmp
dec
cmpsb
iret
nop
mov
add
out
mov
pop
imul
scas
pop
pop
sbb
icebp
cmp
into
arpl
cmp
inc
and
adc
pop
movb
popl
sbb
aam
lock
negb
xor
jecxz
pop
or
pop
cmp
cli
or
cmpsl
mov
and
push
adc
mov
pop
das
repz
and
out
es
pushf
inc
stos
arpl
stos
xchg
pop
insb
inc
mov
mov
push
jg
out
call
pop
mov
sbb
dec
jl
sbb
ffreep
cs
unpcklps
dec
xchg
loopne
dec
pop
outsl
scas
dec
cmp
loop
cmp
mov
pop
sub
mov
jmp
orl
and
pop
aad
out
mov
xor
sbb
loope
pop
shl
push
cs
push
adc
mov
pop
test
add
jb
mov
ficomps
fsub
call
mov
jbe
out
imul
loop
mov
and
add
jge
out
bound
ja
fwait
adc
aaa
popa
or
dec
pop
cwtl
and
adc
or
mov
add
adc
xor
sub
mov
ret
pusha
lret
cmp
pop
rclb
xor
shll
ret
das
fstpt
cs
mov
jmp
mov
pop
mov
lcall
pop
in
incl
mov
cmp
lds
out
push
dec
inc
into
sbb
mov
cmc
pop
pop
or
in
or
xchg
fucomi
cmp
into
and
pop
sub
jecxz
push
loop
xchg
xor
push
xor
es
mov
inc
or
inc
das
into
jp
ljmp
into
ss
xor
dec
clc
stos
push
in
fcomip
ret
jnp
je
mov
sub
mov
xor
lods
pop
js
push
jnp
ficoms
lods
dec
mov
cmp
in
fildll
add
xor
mov
cmp
dec
jl
ljmp
jne
mov
adc
xor
inc
jb
shl
dec
imul
addr16
pop
fwait
jb
xorb
xor
push
rorb
movsl
hlt
inc
iret
imul
sub
aas
enter
xchg
jp
inc
pop
and
jnp
sub
clc
pushf
call
imul
pop
enter
push
fistpll
and
lds
xor
das
sub
mov
imul
out
lcall
xor
mov
xor
adc
aad
push
cli
insl
jp
xor
add
in
jbe
xor
movsl
int3
js
adc
fwait
iret
scas
adc
xchg
pop
jbe
pop
xchg
pop
aam
dec
mov
xchg
repz
mov
insb
cmp
out
sbb
and
cltd
add
mov
dec
cwtl
xor
cltd
in
mov
mov
pop
sbb
icebp
and
xlat
jp
rorb
sbb
mov
sbb
shl
push
std
xlat
sbbb
jl
popa
push
pop
gs
jns
popf
pop
xchg
insl
sarl
adc
jb
rcll
call
mov
mov
les
in
and
sbb
adc
aam
add
lods
pushl
pop
fistpl
mov
mov
enter
xor
pop
jl
push
int3
xchg
and
xlat
add
dec
dec
imul
fistps
insl
addr16
add
fcoml
adc
lods
test
stos
movsl
mov
and
add
cmp
addr16
lods
jg
dec
cwtl
and
inc
cmp
insb
xorl
fstpl
pusha
dec
xor
push
pop
xchg
inc
adc
pop
inc
out
jns
mov
pop
xchg
test
int
stc
mov
ljmp
pop
add
mov
lds
ret
mov
outsb
adcl
mov
enter
mov
daa
pop
push
and
or
xchg
mov
sarb
sub
sbb
pop
call
call
adc
pop
jmp
or
add
dec
pop
or
aam
lcall
pushf
push
pusha
sarb
mov
and
hlt
mov
xlat
cmp
pop
enter
leave
pop
insl
stos
or
inc
popf
push
std
shlb
mov
push
stos
and
stos
and
fmuls
pop
in
inc
xor
call
js
daa
cmp
mov
ret
lret
or
mov
add
insb
ret
mov
xchg
test
int
mov
stc
je
xchg
xor
dec
mov
inc
dec
inc
sbb
xor
es
mov
adc
fwait
xor
sbb
mov
cmpsl
fistpl
pop
sbb
sbb
pop
movsb
dec
push
out
les
cmpsl
pop
xor
movsb
mov
nop
pop
movsb
cld
inc
cmpsb
pop
int3
call
pop
adcl
pop
push
mov
lods
das
test
mov
jbe
pusha
mov
jbe
add
pushl
jae
daa
ss
movsb
mov
pop
into
adc
xor
test
fisttpll
lcall
xor
inc
xchg
pop
push
addr16
icebp
jne
cli
arpl
push
aam
pusha
xor
or
iret
pop
xchg
push
movsl
movsb
inc
jnp
shlb
cmp
mov
sbb
adc
enter
and
push
mov
ljmp
leave
dec
and
add
add
add
mov
add
xchg
imul
scas
mov
push
fsubrp
popf
push
dec
lret
sub
data16
out
mul
jne
dec
pop
rcl
xchg
cmp
ds
mov
adc
mov
loope
pop
sub
jo
adc
lahf
cmpsb
inc
shl
xchg
mov
mov
popa
xchg
mov
insb
cmp
enter
or
sub
push
or
js
inc
pop
aam
nop
ret
and
adc
push
mov
lgdtl
pop
lock
sbb
fdivrl
cmpl
hlt
movsl
mov
rclb
or
or
data16
and
add
decl
and
iret
pushl
or
mov
repz
xchg
mov
fs
add
shl
cmc
jnp
push
inc
mov
mov
lods
add
sub
out
cmp
dec
dec
push
aad
insl
pop
push
mov
mov
dec
pusha
fiadds
xor
je
out
lret
mov
int3
call
inc
push
or
cwtl
movsl
push
push
popa
mov
dec
jne
mov
push
cmp
jp
jl
imulb
xor
psrad
lods
popa
pop
jg
das
lret
pop
stc
icebp
shrb
dec
jle
push
fmul
nop
stc
or
pop
pop
xchg
xor
cmp
pop
dec
test
imul
xlat
imul
push
pushf
and
test
mov
test
push
ret
mov
dec
add
xor
lds
xor
sbb
loopne
mov
mov
and
jge
mov
lret
jno
clc
push
mov
xor
cmp
inc
cmp
dec
cmp
vmaxpd
adc
mov
pop
ds
push
push
xor
mov
into
inc
movsb
push
push
insl
cwtl
adc
je
jg
or
dec
dec
test
sub
inc
adc
push
ret
call
testb
pop
xchg
imulb
mov
cli
aas
jbe
mov
cmpsl
loopne
lahf
pop
xor
iret
leave
jmp
pop
push
fs
adc
out
mov
mov
sahf
outsb
pop
adc
mov
dec
insl
mov
pop
jecxz
adc
mov
push
repnz
fadd
cltd
pop
jg
decl
jne
and
inc
ds
insb
stos
mov
out
xchg
jle
test
daa
push
or
mov
iret
cbtw
pop
mov
cld
insl
addl
stos
or
xor
popa
rcll
sub
testl
xlat
fisttpll
push
and
add
mov
jmp
sbb
aad
insl
xchg
aam
add
pop
adc
cmp
ja
scas
rol
push
loope
or
or
or
fcompl
xor
loope
stos
inc
lret
jo
addr16
mov
and
int3
adc
add
or
cmp
addr16
add
mov
mov
movsb
imul
and
iret
movsl
int
repnz
loope
xor
mov
adc
jb
das
pop
pop
cld
xor
idivb
mulb
mov
mov
loope
sub
mov
div
or
cld
stc
movb
and
adc
test
cmp
adcb
inc
mov
xchg
out
out
mov
fstpl
inc
cltd
inc
loopne
rcll
ds
xor
shlb
js
leave
aas
popa
pop
pop
adc
cwtl
pop
lods
nop
push
jge
xchg
test
cmp
pop
jle
int
jle
jecxz
mov
stc
pusha
cmp
sub
out
or
loopne
sbb
cmpsl
js
mov
mov
mov
rolb
aas
mov
fcoms
stos
test
cmp
daa
fcmovnu
rorb
pop
dec
mov
add
mov
inc
cs
stos
sub
iret
shll
gs
imul
add
je
push
std
pop
les
pop
sbb
mov
das
inc
test
adc
inc
pushf
call
sbb
jno
imul
cmpsl
jo
jne
mov
hlt
stos
xchg
add
adcl
in
xchg
xchg
int3
fdivrs
push
jns
xchg
mov
bound
xor
insb
mov
out
es
mov
inc
cmp
and
pop
jmp
xor
pop
iret
push
mov
xor
sbb
roll
mov
jge
popf
stc
loop
icebp
xchg
and
add
pop
push
iret
adc
fadds
fmul
stos
ja
push
xchg
shrb
pop
jecxz
cmp
lcall
xchg
inc
sub
mov
cltd
push
das
sub
sbb
mov
pushf
call
cmp
add
stos
inc
loope
mov
imul
push
fisubrs
pop
sub
test
pop
pop
in
int3
cmc
in
jecxz
mov
mov
mov
les
mov
jns
les
xor
pop
mov
sar
push
sbb
dec
imul
xor
cmpsb
jge
pop
andl
sbb
insl
outsb
jmp
cmp
mov
mov
fidivs
push
ds
xor
pop
adc
movsb
or
add
add
flds
cmpsb
cmp
adc
dec
sbb
std
dec
shll
and
adc
movsl
pop
mov
mov
inc
cwtl
ljmp
sub
xor
rol
inc
dec
xor
scas
add
mov
call
je
inc
inc
adcl
or
pop
add
lock
mov
test
mov
fsubrp
push
out
ret
out
jno
orl
lcall
pop
mov
mov
xor
pop
loop
or
imul
test
or
and
sub
push
ret
fsubs
add
or
mov
fbstp
test
dec
pop
stos
or
dec
dec
xor
inc
aaa
cmc
out
mov
popf
aaa
rcrl
xlat
dec
pop
mov
xor
insb
aad
push
sbb
pusha
ljmp
jge
test
lret
imul
sbb
js
cmp
cmp
bound
int
stos
push
rcrb
mov
call
sti
push
cmp
xor
adc
mov
push
cld
scas
scas
iret
jns
dec
and
add
insl
test
lret
scas
popf
cmc
mov
mov
xchg
and
cltd
push
cltd
mov
mov
imul
xor
mov
icebp
sahf
inc
dec
sbb
jns
int3
add
add
add
mov
mov
xor
into
jno
push
je
fldl
dec
push
dec
int3
jno
adc
ds
data16
jne
sbbl
test
and
mov
repnz
adc
insl
ret
test
cltd
cmp
add
add
add
sub
mov
mov
out
shr
imul
pop
or
call
jle
popa
pop
aam
and
lods
pop
es
imul
and
mov
dec
rol
dec
mov
xchg
mov
mov
mov
iret
sbb
push
push
dec
cmpb
mov
movsb
mov
in
sub
sub
negb
aas
sbb
add
arpl
neg
xchg
shrl
in
mov
ss
lods
xchg
mov
out
sub
out
mov
mov
mov
and
push
shrb
xor
mov
mov
addr16
fst
pop
add
push
incl
lcall
pop
rorl
xor
xlat
mov
jno
mov
shrb
out
sub
mov
shrb
pop
pop
cltd
incl
incl
lcall
std
jae
lock
lea
fadd
fst
pop
sarl
cltd
pushf
popl
mov
mov
pop
data16
mov
cltd
in
jg
jp
movsb
xor
push
rcll
add
dec
je
lret
leave
mov
je
aad
xchg
stos
fs
lods
adc
fdivrl
mov
add
pop
mov
mov
mov
mov
lods
pop
fwait
stc
push
sbb
fnstsw
nop
test
dec
mov
push
push
inc
mov
in
adc
out
pop
das
aas
jmp
fmull
test
filds
rclb
mov
lcall
jmp
mov
pop
decb
sbb
mov
cltd
inc
orl
mov
fcompl
fdiv
fcomp
int3
add
add
fldl
data16
sub
dec
xchg
push
daa
pusha
xchg
cld
inc
sbb
jecxz
loopne
mov
adc
push
and
dec
cmp
ret
inc
mov
adc
push
push
fs
mov
sub
sarl
daa
inc
add
adcb
pop
pop
int3
pop
pop
add
xchg
push
sti
dec
or
cmpsb
inc
in
dec
inc
xor
mov
add
add
jno
and
jmp
enter
popa
daa
jl
mov
andb
jmp
fldl
xchg
and
aas
data16
fcomip
fs
mov
xor
inc
xchg
dec
pop
outsb
mov
mov
nop
std
and
push
std
and
imul
lods
shl
or
sub
sbb
xchg
andl
or
inc
pop
stos
cs
xchg
mov
cwtl
xchg
jae
push
ret
rcrb
cmp
push
cmp
int3
call
outsb
dec
outsl
mov
cwtl
mov
jae
xor
imul
xchg
sbb
push
mov
push
loope
clc
mov
push
out
sbb
or
daa
cmp
push
push
stc
pop
add
fsts
push
leave
sbb
loope
mov
dec
mov
int3
aam
call
std
hlt
mov
aas
pop
dec
sub
xchg
jecxz
ja
lcall
subb
add
sbb
and
push
mov
dec
loopne
inc
adc
cs
inc
xchg
mov
rorl
sub
jne
cld
lea
lcall
xor
movsl
dec
aad
mov
pop
int3
ljmp
fisubrs
scas
mov
cltd
mov
insb
and
add
jp
je
mov
pop
out
test
jg
sub
or
cli
aaa
jno
ficoml
cmc
mov
sbb
aaa
mov
mov
cmp
mov
or
fldenv
fwait
cltd
mov
jg
inc
inc
fstpl
jo
jno
enter
push
sub
xor
mov
xchg
jo
adc
pop
scas
out
pop
es
outsl
cmp
out
mov
xor
push
xchg
sub
repnz
and
xor
jo
push
mov
push
lock
mov
decl
inc
pop
aas
sbb
test
fistps
xchg
std
daa
dec
adc
cwtl
ret
sub
aad
aad
repnz
mov
mov
ret
add
pop
fnstcw
test
jmp
cmp
dec
inc
fmuls
in
iret
bound
int3
sbbb
sbb
mov
jp
inc
out
mov
mov
mov
mov
pop
outsl
or
stos
pop
and
xor
push
add
scas
xor
rorl
fiaddl
and
push
pop
adc
xor
adc
adc
dec
cmp
cmp
xchg
mov
orb
jge
call
les
int
or
sbb
in
rcl
icebp
inc
popf
jae
ror
ljmp
cmpsb
es
or
mov
js
ror
add
add
dec
pop
aam
loopne
scas
mov
mov
push
inc
aaa
and
and
aas
jnp
test
mov
imul
sahf
into
xchg
xchg
inc
adc
add
js
movsb
push
mov
push
adc
jle
aam
sub
add
mov
jge
pop
dec
mov
mov
or
pop
xchg
les
arpl
xchg
int3
inc
pop
popf
mov
addb
inc
les
adc
sahf
sbb
jnp
mov
dec
push
fucomip
xor
int3
mov
add
add
add
adc
ljmp
sbb
add
in
sub
xor
xchg
es
or
cmp
insb
lret
xchg
je
in
pop
sarb
mov
or
mov
lret
stc
data16
lcall
pusha
and
rolb
cmp
addr16
adc
repnz
sti
inc
add
fnstsw
jb
movsb
cmpsb
xchg
jmp
add
sub
scas
jae
mov
dec
dec
std
lods
iret
test
jecxz
xchg
pop
inc
sbbb
nop
lds
outsl
sbb
test
lret
sub
pop
cmp
jo
xchg
xor
and
sti
imul
or
mov
bound
int3
pusha
adc
ss
test
and
mov
int3
add
pop
loope
repnz
aas
mov
repnz
clc
adc
add
and
rclb
pop
jno
xor
ss
xchg
mov
gs
xor
shlb
loopne
push
cmp
daa
adc
add
add
andb
scas
decb
jns
lret
mov
flds
lcall
shrb
sub
and
sub
adc
in
sbb
shrl
jl
and
ret
adc
mov
cld
outsl
mov
xchg
mov
shl
sbb
push
rcrb
add
mov
gs
dec
dec
xchg
mov
pop
int3
add
add
adc
pop
or
in
sbb
jp
mov
add
xchg
in
cld
sub
sbb
pushf
jno
dec
repnz
fcmovnb
outsl
scas
das
fcoms
lret
into
adc
call
dec
fst
xchg
incl
incl
incl
loope
in
lods
cmp
pop
je
push
incl
incl
incl
mov
mov
imul
jg
xor
mov
mov
adc
jl
sbb
data16
and
dec
cld
or
or
not
cmp
cmpsb
add
xor
shrl
jecxz
pop
jbe
xor
test
int3
call
push
sarl
test
sub
aaa
hlt
jb
inc
shl
pop
test
pop
mov
and
sti
pop
jno
dec
pop
push
mov
jns
cmc
sub
jns
sbb
dec
cmp
or
nop
outsb
dec
jb
add
setp
loopne
sub
nop
sbb
cmp
imul
inc
push
sbb
popf
adc
jmp
outsl
cmp
jmp
enter
sbb
icebp
ljmp
int
mov
lea
test
push
mov
insb
cmp
and
lds
pop
add
or
add
fiadds
ret
xchg
xor
add
add
add
arpl
adc
rorb
loop
mov
jnp
mov
in
ror
imul
enter
sbb
cmpsl
pop
ds
mov
mov
icebp
subl
negl
add
push
sbb
ret
push
dec
hlt
xchg
jae
xor
lret
stc
pop
and
aas
and
fsts
cmp
es
int
popf
jmp
xor
gs
call
rcl
in
loop
test
xor
mov
in
test
or
lahf
pusha
jbe
push
sbb
into
fistl
xor
imul
jmp
add
dec
cmp
lret
test
sbb
xorps
mov
ljmp
cli
shll
and
test
xchg
pop
xor
pop
sub
call
and
enter
xchg
jge
pop
ret
aad
add
outsl
cmpsl
push
and
stc
into
jecxz
data16
inc
adc
cmpl
loopne
lods
push
sar
sub
dec
dec
and
lret
inc
mov
gs
rol
mov
jle
push
sbb
cs
dec
mov
and
xor
sbb
std
lret
xor
imul
push
nop
pop
insb
inc
mov
fnstcw
hlt
add
fisttps
inc
dec
push
aaa
dec
js
inc
je
xor
pop
lahf
mov
call
jno
loop
xor
adc
pop
mov
subb
in
ja
jnp
jp
addb
xchg
mov
outsb
adc
insl
sarl
fxtract
xchg
in
adc
jle
pop
lcall
dec
cmpsb
mov
add
pop
sub
sub
js
push
int
testl
jne
sub
inc
push
mov
mov
add
xor
xor
call
int3
mov
push
or
pop
inc
add
dec
pop
test
jae
or
out
push
icebp
cwtl
lcall
xor
pop
stos
dec
cmp
mov
stc
and
jp
aas
jae
xor
lcall
sbb
test
jb
imul
jl
jg
push
mov
inc
lock
lret
dec
add
stos
scas
jo
inc
cmp
call
xor
xchg
xchg
fs
loope
ljmp
sub
sub
cmp
sub
xchg
sbb
push
pop
xor
je
jnp
insb
jmp
adc
imul
test
shrl
incl
pushl
fdiv
xor
clc
repnz
push
sti
xchg
rcll
out
push
test
jno
icebp
in
jbe
sub
loope
stos
test
mov
or
and
mov
lods
aaa
sahf
mov
mov
mov
lcall
sbb
cmp
cmc
stos
push
mov
fstpt
jbe
dec
loop
dec
cmp
adc
add
add
add
pop
inc
sti
sbb
jg
ret
jmp
mov
jmp
jnp
pop
mov
outsb
fxch
idiv
jae
xor
ds
outsb
fistps
inc
scas
mov
dec
xor
test
push
pushl
add
fs
adc
adc
mov
pushf
or
jnp
fwait
andl
mov
dec
out
add
jg
sbb
mov
pop
iret
mov
xor
adcl
test
mov
mov
mov
xor
dec
inc
inc
cmp
lret
ret
jge
add
inc
mov
jbe
adc
and
xchg
ficompl
sti
mov
lahf
aad
cld
stos
stos
shlb
int3
call
or
test
cltd
pop
adc
push
sub
mov
pop
dec
adc
test
mov
adc
aad
xor
mov
sbb
add
xor
push
mov
adc
dec
bound
data16
mov
push
test
jp
int3
add
add
add
imul
lods
ret
xor
jb
or
icebp
rcrb
idiv
mov
in
jnp
pop
aam
xchg
or
jle,pn
mov
inc
inc
push
cs
idivb
mov
fisttpl
jmp
mov
in
nop
arpl
pop
shl
flds
dec
bound
addr16
inc
adc
push
fscale
add
dec
enter
mov
push
lea
inc
xchg
xor
jno
int3
call
frstor
out
hlt
in
out
cld
sbb
push
mov
les
xor
cli
mov
and
sarl
xchg
mov
cmp
mov
jp
and
insl
or
nop
in
push
ja
movsb
ss
cmp
adc
ljmp
cld
rorl
push
push
jae
mov
dec
jae
das
mov
jl
adc
decl
add
xchg
cltd
lock
mov
cli
popf
xchg
stos
sbb
pop
sub
in
push
sub
inc
add
push
outsb
fcoml
pop
pop
stos
pop
and
jb
and
int3
add
add
pushf
sub
pop
jge
sbb
jg
sub
clc
scas
insb
mov
mov
pop
dec
xor
das
pop
daa
dec
mov
or
dec
mov
lds
ds
sub
dec
mov
sub
mov
aaa
sbb
hlt
push
psllq
xchg
jp
dec
fbld
popa
inc
rol
shll
shr
out
sub
cli
push
and
add
mov
cwtl
shrb
or
pusha
outsb
adc
repnz
int3
add
mov
jnp
jno
rclb
call
int3
test
dec
jmp
adc
frstor
inc
rcll
into
cmp
pusha
push
xor
inc
xorl
pop
push
mov
dec
stos
push
xor
push
lcall
pop
xchg
call
dec
xchg
or
dec
adcl
xchg
popf
xor
and
aaa
cld
mov
push
iret
jg
pop
pop
cmp
int3
jecxz
nop
addr16
inc
xor
imul
pop
and
pop
xchg
cmp
cmp
nop
pop
jecxz
adc
out
shl
sub
mov
incl
cmp
fmuls
cltd
mov
sti
loope
ja
sub
pop
mov
shlb
cmpsb
data16
jp
push
icebp
push
inc
loopne
pusha
sbb
idiv
dec
aad
pop
shl
out
fnstcw
sub
add
lock
mov
pop
mov
jbe
imul
test
cld
jne
inc
sar
stc
lods
push
cli
inc
aas
popf
fucomp
ss
and
mov
pop
mov
sbb
xchg
jmpw
xchg
sub
movsb
xchg
ficomps
xor
mov
and
sbb
pop
dec
in
adc
stos
outsb
les
test
scas
xchg
jns
aaa
mov
cld
and
and
push
insb
add
dec
cs
mov
and
rorb
jecxz
sbb
mov
mov
mov
mov
or
push
loope
out
sbb
or
sarl
movsl
push
jp
mov
sahf
out
divb
shll
int
xchg
outsl
xor
mov
jmp
jle
ss
jo
jae
push
xchg
into
test
call
int3
pop
push
stc
stos
das
iret
gs
inc
into
loopne
insl
cmpsl
sar
and
adc
movb
scas
pop
ljmp
cmc
mov
jb
cmp
jle
sub
scas
je
movsl
leave
mov
xchg
mov
into
pop
add
cltd
mov
add
dec
push
pop
lea
cmp
xor
pop
mov
mov
jb
add
js
leave
inc
cmc
dec
in
ret
int3
add
push
ret
sbb
xchg
sti
sbb
arpl
fsubs
stc
loop
xchg
pop
mov
and
xchg
ds
inc
imul
sti
hlt
and
neg
loop
bound
pop
and
dec
aas
dec
leave
xchg
push
cmp
cmp
leave
stos
xor
out
and
add
add
add
stos
inc
inc
dec
out
push
outsb
subb
or
sbb
aad
mov
fdivl
movsb
in
mov
push
xorb
test
push
aam
and
pop
stos
jb
fisttpl
pop
jmp
xor
ja
mov
decl
mov
pop
push
sarb
jo
rorl
dec
adc
movsl
ret
or
in
dec
jmp
test
test
subl
dec
adcl
jecxz
jns
and
fs
and
cld
cmp
xlat
push
jo
sahf
cli
loopne
and
sub
fldenv
aad
jnp
mull
movsl
and
call
mov
adc
jnp
test
add
mov
mov
call
into
cltd
arpl
xchg
fdivl
mov
mov
or
dec
add
dec
xor
aad
nop
add
sub
jno
push
xchg
and
mov
adc
shll
sbb
out
push
fnstenv
jns
jns
push
call
add
add
add
mov
out
lods
pop
dec
or
inc
or
call
out
loop
cmp
shlb
jnp
pushf
pop
xchg
push
inc
sbb
mov
loope
xchg
add
dec
icebp
jp
inc
add
insl
pop
leave
outsl
and
ja
xchg
call
inc
jno
movsl
subb
pop
add
jecxz
add
cmpsl
sti
jnp
cltd
dec
sub
adc
out
std
sub
and
fidivrl
push
test
dec
sbb
movsb
scas
shrl
pop
int
pop
cmp
xchg
mov
dec
lods
loope
pop
sbbb
adc
jge
icebp
pop
call
xor
sarb
fcomps
les
aas
xchg
es
int
out
in
in
push
push
jmp
and
mov
imul
pop
dec
cmp
stc
sbb
clc
pop
adc
int
cltd
rolb
loop
adc
loopne
mov
push
sbb
and
push
ja
leave
jbe
incl
insb
and
jg
and
cld
bound
mov
xchg
mov
jb
mov
loope
outsb
dec
fimuls
xchg
test
xchg
xor
mov
mov
adc
call
in
jo
clc
jo
push
addr16
pop
xchg
fstpl
in
mov
mov
jg
popf
xor
fcmovnbe
daa
ja
int
and
leave
mov
pop
xchg
mov
inc
imul
push
xor
and
sub
in
push
pop
insb
pop
mov
fwait
xlat
lock
push
arpl
dec
repnz
mov
pop
cmp
push
push
int
xor
fdivr
fldl
and
mov
and
pusha
jle
or
jnp
decl
subb
aad
lods
out
test
cmc
push
out
into
iret
lods
popf
ljmp
mov
adc
test
cli
xor
mov
jle
adc
push
dec
shl
cmp
icebp
test
jne
adc
mov
xor
out
jo
and
cmp
notl
out
xor
sbb
or
or
push
loope
xchg
push
testl
adc
lock
cltd
scas
push
nop
pop
sub
lock
mov
movsl
ljmp
call
add
stos
shll
jno
and
into
fs
pushf
incl
incl
decl
stos
pop
adc
mov
mov
bound
xchg
mov
lods
cmp
or
xchg
jmp
mov
xchg
cmp
adc
push
inc
leave
jbe
dec
pop
jb
dec
inc
adc
jnp
addb
mov
int3
call
xchg
jnp
add
xchg
cmp
insl
mov
xor
bnd
push
dec
ficoms
test
add
test
jle
test
and
ljmp
adc
lret
dec
adc
shrl
rorl
sub
flds
and
jbe
push
mov
mov
xor
aam
sbb
outsl
sbb
mov
jle
rcrb
jl
push
pop
adc
inc
adc
mov
jo
jnp
sbb
iret
shll
ror
jmp
incl
decl
sub
mov
push
sub
outsb
std
out
pop
test
sub
dec
lods
sub
incl
incl
mov
test
push
xlat
inc
enter
jmp
arpl
call
mov
push
add
fcmovnbe
sub
gs
inc
mov
sub
xchg
cmp
arpl
mov
and
jae
clc
fsub
dec
add
std
jle
in
push
mov
addl
lock
mov
int3
call
pop
fisttpl
adc
jno
int
dec
bound
lahf
cmp
xlat
mov
sti
notl
cmp
mov
jmp
std
scas
lock
or
lds
or
mov
movsb
les
sti
iret
lds
lcall
jno
inc
jge
cwtl
push
int3
xor
xor
lea
adc
mov
mov
mov
fwait
or
jmp
into
lret
ljmp
aad
xchg
push
aad
pop
mov
cmpsl
les
scas
scas
fisttps
sub
rcll
sarb
fs
je
inc
out
mov
lock
bound
lret
adc
or
push
add
dec
mov
fdivr
arpl
jbe
pop
loopne
lock
cltd
inc
call
cmpsb
insl
sub
xchg
xlat
ss
mov
mov
mov
mov
inc
and
jle
aas
pop
mov
pop
sbb
mov
mov
stos
aas
or
ja
sbb
push
or
sti
jbe
nop
mov
test
pushf
push
mov
push
cmp
in
out
into
loopne
or
hlt
push
inc
sub
imul
fidivs
adc
in
push
mov
add
jnp,pt
push
sbb
fcmovnb
jbe
mov
mov
addr16
cmpsb
clc
mov
ret
dec
in
int
ljmp
int3
add
add
out
outsl
movsb
xchg
in
imul
dec
mul
xchg
mov
mov
dec
faddp
and
inc
ret
mov
sub
cwtl
and
cmp
mov
ret
inc
push
je
dec
jmp
dec
call
daa
popa
or
fisubrl
pop
jns
dec
add
shrb
sub
cld
fsubrs
pusha
into
fisttpll
push
fmul
mov
xor
cmp
mov
and
xor
or
jne
aas
inc
pushf
pop
stos
fcomp
outsl
inc
ja
and
imul
ljmp
sti
mov
arpl
lock
aam
cwtl
cld
test
inc
call
insl
negl
mov
or
pop
repnz
je
sub
leave
sbb
xor
scas
inc
pop
shl
inc
scas
pop
jg
push
popa
and
inc
xchg
test
icebp
rol
mov
and
hlt
sub
sub
push
push
scas
out
sub
mov
add
ja
cmp
imul
pushf
add
fwait
adc
xchg
jo
mov
mov
mov
aaa
daa
shll
mov
inc
jge
hlt
jae
jbe
add
lret
jae
xor
add
push
adc
gs
enter
stc
mov
cmpb
mov
sbb
xorb
add
push
fimull
mov
cmp
sbb
mov
pop
ds
push
dec
jp
xlat
loopne
arpl
mov
xor
ds
test
adc
into
gs
xchg
mov
sbb
shrb
push
lret
sbb
push
pop
loopne
in
inc
roll
mov
inc
sahf
dec
push
aad
lret
sar
roll
rcll
lcall
pusha
adc
pushl
inc
jns
adcl
hlt
rol
rclb
jmp
popf
push
jbe
pop
cli
ljmp
xor
mov
stos
cli
ret
mov
jno
xor
jbe
fnstcw
shll
add
cwtl
xchg
and
ficomps
inc
push
mov
in
jns
out
xor
jbe
mov
jl
adc
in
out
pop
notl
mov
fdivr
push
and
inc
pop
das
add
out
das
popa
lea
add
sub
das
call
out
aad
in
adc
mov
daa
push
into
and
cmp
fucom
das
loope
mov
push
pop
mov
pushf
cmp
xchg
inc
adc
call
push
std
adc
sahf
ficomps
stc
add
cmp
in
jle
and
out
fadds
outsb
jg
cmp
cmpsb
fdivp
inc
jno
mov
shlb
xchg
cmp
repnz
or
das
push
in
mov
iret
jl
dec
jge
mov
add
outsb
and
std
stos
fldcw
mov
xchg
loopne
jnp
mov
subl
lea
jge
mov
push
mov
add
mov
sub
push
ret
cmp
sub
and
sbb
mov
out
jmp
clc
pusha
push
cmp
adc
mov
fisubl
hlt
mov
pop
imul
mov
cmpsl
dec
or
jge
mov
sub
cli
push
pushf
mov
sahf
add
sbb
test
lahf
into
jle
adc
mov
call
call
int3
and
ja
loopne
loopnew
orb
add
loop
add
inc
sti
jno
mov
out
pop
pushf
jns
mov
mov
lds
mov
lock
imull
fcmovu
push
daa
stos
mov
out
lds
add
jne
or
rclb
jo
push
cmc
lock
out
cltd
mov
data16
pop
lret
les
adc
outsl
jge
sub
call
jg
cmp
adc
fimull
imul
push
push
xchg
js
ljmp
int3
mov
adc
adc
add
mov
xor
push
xchg
sarb
cmpb
jmp
test
mov
mov
sub
xchg
stos
sarb
mov
jbe
push
cmc
aaa
mov
fwait
or
jno
insb
sbbl
add
dec
mov
and
push
xor
mov
mov
les
sub
or
popa
out
ljmp
add
add
fxch
jp
es
out
pop
lock
fndisi(8087
outsb
cmp
call
add
cmpsl
cmc
nop
aas
sub
pop
in
xchg
add
adc
ljmp
lods
test
jb
loope
mov
hlt
inc
std
xor
inc
and
inc
gs
cld
sbb
icebp
push
test
add
mov
movsb
test
decl
sti
mov
pop
sbb
movsb
sub
loop
xor
add
je
ret
lea
fnstcw
jbe
push
fcoml
fs
or
nop
dec
xchg
cltd
mov
mov
pop
aam
fnstcw
arpl
cmpsb
inc
fdivl
adc
push
nop
mov
mov
sub
pop
cltd
imul
lods
shr
clc
jecxz
shlb
push
shlb
decl
es
aad
inc
mov
mov
dec
mov
fisubrl
scas
inc
mov
mov
jmp
xchg
stc
std
inc
mov
int
jb
mov
ss
and
js
imul
icebp
aad
or
outsb
mov
push
mov
mov
pop
aaa
push
mov
mov
fcomps
loope
xor
inc
jo
dec
daa
sarl
out
mov
insb
xchg
enter
cmp
int3
scas
rolb
dec
mov
cli
fstps
test
jnp
insl
test
add
mov
je
sbb
icebp
cmp
mov
or
jge
mov
bound
out
rcrl
jno
repz
repnz
lret
into
jae
je
adc
jg
or
xor
mov
cmpsl
and
hlt
cmp
aas
jns
popf
sub
mov
add
add
jg
and
movsl
outsl
pop
mov
pop
and
aaa
and
mov
mov
cltd
cld
clc
in
int3
push
lds
mov
dec
lock
lds
and
sbb
rorb
pusha
xchg
incl
incl
incl
loop
cmpsl
inc
push
ja
dec
sarb
movsb
xchg
push
inc
and
jmpw
mov
incl
incl
lock
mov
scas
push
std
push
out
imul
pop
sub
push
orb
mov
jnp
add
scas
adc
inc
inc
xlat
cwtl
shll
add
cmp
das
push
out
test
and
or
imul
fs
mov
xor
dec
dec
sbb
lods
dec
jnp
mov
incl
incl
incl
rol
push
and
fildll
cmpsl
ret
loop
xchg
addr16
sub
sahf
mov
push
sbb
inc
cs
movsb
dec
mov
mov
pop
popa
dec
rcrl
divb
xchg
or
test
cli
inc
lock
popl
sub
call
ss
xor
pop
adc
xchg
jmp
push
or
enter
inc
ret
or
dec
push
xchg
mov
lcall
push
test
icebp
jmp
jl
jmp
and
xorb
mov
xchg
int
ss
jns
in
push
add
rcll
cli
or
enter
sbb
adc
int3
add
add
out
dec
test
fdivs
push
rclb
xor
sub
lahf
add
push
jmp
sub
fisubrs
aam
fsubl
mov
rolb
mov
push
je
adc
stos
pop
js
push
movsb
hlt
xchg
xor
mov
rolb
jb
ds
es
xlat
subb
jns
pop
adc
int
pusha
dec
nop
mov
cmc
repnz
dec
mov
adc
shlb
call
jmp
cmp
daa
cmp
repz
sbb
and
lods
and
xor
iret
loope
pop
xor
fisttpll
sub
sbb
leave
cmc
pusha
jb
pop
cmp
int3
call
xchg
ja
and
or
stos
sub
cld
repnz
or
cmp
xor
xchg
push
pop
pop
xchg
mov
out
mov
rorl
and
in
fs
int
or
mov
xor
inc
and
mov
js
dec
lret
rcl
mov
sbb
adc
fistl
adc
add
into
xchg
adc
daa
idivb
rcrl
pop
mov
int3
push
roll
mov
pusha
xor
lock
dec
popa
ret
bound
adc
imul
in
jnp
jp
mov
pop
fdiv
mov
std
cli
mov
cmp
add
add
jbe
pop
aas
adc
xor
stos
movsl
and
jp
fdivr
daa
xchg
adc
sub
add
sub
das
dec
mov
jle
pop
call
outsb
aas
std
or
pop
out
ljmp
mov
int3
mov
cltd
mov
cmp
imul
addl
adc
ret
rol
sub
fsubl
jns
jns
out
mov
mov
add
loopne
hlt
add
or
push
push
outsb
es
xchg
int3
mov
int
jo
ds
fdivrp
inc
jns
xchg
jns
cmp
and
or
test
lea
pusha
sbb
mov
arpl
aam
inc
inc
inc
loop
lods
pop
insb
xor
int3
add
add
add
cmp
mov
sbb
or
inc
sub
ja
stc
pop
ds
adc
aad
mov
cmpsl
decb
jmp
xor
jge
add
inc
push
into
inc
jge
push
dec
pop
sbb
adc
je
fsubr
hlt
sbbl
mov
lods
mov
fs
incl
decl
sub
popf
dec
pushf
sbb
cmp
mov
xchg
mov
in
cmc
pop
dec
jno
mov
icebp
sbb
daa
repnz
dec
out
sbb
rcrl
movsb
in
daa
pop
and
sbb
lahf
jl
rorb
fwait
call
pop
lock
xchg
fstps
js
pop
xchg
test
pop
arpl
mov
add
outsl
shll
xlat
shrb
outsl
xor
inc
leave
sbb
xor
cwtl
clc
jne
mov
mov
mov
dec
cltd
jecxz
shl
and
push
repnz
int3
add
add
add
shlb
fs
aas
fdivs
mov
fwait
lea
adc
decl
mov
popa
outsl
insl
add
xor
sub
and
inc
push
mov
mov
jmp
fistpll
mov
test
jecxz
sub
in
cwtl
cmp
inc
shll
pop
scas
mov
enter
sub
mov
pushf
mov
lahf
mov
out
movsl
bound
or
addr16
mov
imul
mov
add
in
push
xchg
orb
loop
andl
lock
adc
out
mov
pop
xor
scas
sbb
aaa
dec
push
insl
insl
add
add
in
and
fucomi
jnp
xchg
ret
insb
sbb
fsubs
sbb
loope
push
xorl
mov
bound
filds
or
or
and
rclb
or
mov
notb
shrl
fsub
mov
sbb
dec
icebp
pushf
call
loope,pn
sbb
jae
js
inc
dec
push
out
scas
cmpl
push
cltd
pop
inc
dec
jno
xor
inc
int3
jns
sbb
xchg
mov
out
in
cltd
jnp
xchg
jno
aas
sub
jmp
or
call
into
or
dec
mov
loope
rorb
movsb
int3
sti
mov
inc
pop
fnstsw
add
mov
push
inc
jge
test
popf
ja
xor
insl
adc
push
sub
xchg
shlb
ljmp
ret
add
fcoms
pusha
shll
add
add
icebp
sbb
pushl
out
test
scas
push
out
cs
mov
in
mov
insl
add
xchg
push
dec
sahf
lahf
inc
movsb
dec
or
jg
sub
xchg
fcmovb
std
idivb
test
fdiv
mov
ds
xchg
inc
adc
shlb
and
out
adcl
pusha
or
insb
adc
dec
cmp
outsb
cmc
inc
js
shll
outsb
and
ret
lods
call
pusha
bound
pop
out
push
cmp
into
int3
data16
push
leave
lds
dec
in
mov
push
push
pop
fwait
inc
pop
orl
push
jno
xchg
push
das
lret
data16
push
imul
in
push
mov
pop
jle
push
loopne
jg
sti
xchg
pop
jb
fnstcw
aam
cmc
notl
loopne
leave
jne
jp
inc
imul
fldenv
push
xchg
lahf
jae
inc
jge
mov
repz
xor
mov
test
jno
pop
dec
pop
nop
add
call
mov
imul
mov
aas
cli
mov
test
add
xchg
add
in
dec
lret
mov
pop
lcall
dec
jo
rol
call
ror
and
int3
call
lahf
dec
xchg
jo
ljmp
test
mov
fwait
or
sub
call
xor
dec
nop
fdivr
int
imul
lea
mov
rorl
ret
jns
and
cmp
push
push
cs
and
cmp
push
repnz
or
dec
fstpl
nop
lcall
push
daa
lods
inc
xchg
pop
add
mov
mov
cmp
sti
subl
pop
inc
sub
or
jne
loopne
push
jns
jle
loope
mov
and
rclb
adc
push
pop
scas
dec
jp
adc
rorb
jl
inc
out
xchg
inc
xchg
gs
cmp
cltd
call
inc
jne
pop
mov
pop
fsubr
out
das
inc
cs
adc
enter
cwtl
test
dec
das
int
jae
sub
pop
mov
lcall
pop
aas
and
pop
lods
loopw
icebp
sub
push
ja
jo
mov
xor
mov
cmp
xor
rolb
inc
xchg
in
cli
and
repz
int
test
mov
call
gs
adcb
mov
dec
aad
pop
mov
popa
sbb
add
jnp
mov
xchg
push
add
hlt
push
lods
ret
arpl
movsl
mov
mov
fs
sub
rcrb
dec
dec
scas
jmp
push
movb
pusha
pextrw
pop
jge
jo
sbb
and
lods
sub
add
shlb
xor
inc
iret
call
in
cmc
and
mov
movsb
js
cmpl
dec
cmpsl
inc
mov
xlat
cmpsb
mov
push
fstpt
jnp
adc
sub
dec
dec
addr16
sbb
ror
or
sub
add
cmpsl
aas
add
xor
sub
sub
out
mov
rcrb
sbb
pop
sbb
out
xor
cld
push
aas
ss
jmp
movsbl
hlt
movl
sub
mov
and
je
add
add
adc
mov
dec
stos
out
push
out
and
mov
movsl
stos
or
sbb
addb
add
jbe
rcrl
out
mov
mov
into
mov
ret
in
and
enter
push
std
xstore-rng
cmpsl
test
sub
adc
mov
or
inc
dec
aas
pusha
mov
mov
and
in
dec
lahf
adc
ja
in
and
jo
ret
jb
cli
out
dec
push
sbb
test
add
mull
xchg
cmp
out
cmp
jle
sbb
iret
mov
mov
mov
arpl
fdivs
pop
inc
pop
in
xchg
aam
add
in
ss
push
xlat
add
cmc
pop
add
hlt
lods
fucomp
pop
dec
andb
popf
scas
mov
fnstenv
adc
stos
push
sbb
mov
dec
add
pop
cmc
mulb
adc
scas
jno
mov
xor
movl
in
and
pop
push
xor
cmpsb
mov
add
sti
gs
cli
addl
jno
mov
adc
pop
fwait
popa
mov
jo
test
push
xor
mov
add
push
cmpsb
js
dec
xor
xchg
inc
mov
sbb
xchg
inc
incl
incl
incl
xor
stos
mov
aaa
add
and
xor
pop
mov
mov
hlt
xor
mov
sbb
mov
sbb
orb
sarb
pop
loop
pop
xor
int3
pop
lds
pop
push
and
jno
or
out
xchg
je
mov
or
xor
jns
sub
mov
mov
sub
incl
decl
icebp
jecxz
jnp
cmp
mov
adc
in
xchg
mov
jbe
jno
lret
out
sarl
xchg
mov
cs
sub
inc
lcall
dec
and
pop
faddp
add
jecxz
adc
loope
push
mov
aas
std
push
out
lock
and
add
add
add
jne
iret
xchg
adc
inc
aad
sbb
and
lods
xor
lret
inc
ds
adc
and
sbb
fdivs
mov
pushf
or
int3
pushf
fdivrp
lock
hlt
or
mov
mov
mov
jae
shlb
push
mov
mov
mov
mov
das
sbb
ja
sbb
je
ret
repz
mov
xchg
jmp
addl
adcl
cmp
jmp
in
and
out
cmp
pop
dec
lahf
pop
pushl
adc
shlb
call
int3
loope
adc
xchg
jno
lcall
jne
outsl
popa
dec
cmpsb
int3
imul
daa
in
jmp
mov
aam
dec
mov
lret
sbbb
lds
adc
call
cmp
jmp
adc
cwtl
sub
xchg
mov
fstps
mov
inc
xor
imulb
lods
loop
lods
pop
or
xchg
clc
mov
xor
outsb
and
in
pop
lret
and
inc
adc
add
adc
pop
mov
jle
cmp
fisubs
in
jge
fmuls
fnstsw
arpl
rolb
or
pusha
or
out
push
or
jg
out
pop
cld
inc
push
arpl
fmull
cmc
fisubrs
lcall
add
cmpsb
popf
inc
clc
mov
movb
cs
cltd
aam
push
rcrl
fidivrl
sahf
lods
stc
sbb
rcrb
push
into
scas
inc
inc
loopne
int3
call
mov
or
hlt
cmpsb
cmc
stos
ret
fucomp
mov
cltd
inc
inc
cmp
mov
incl
incl
call
addr16
push
inc
and
scas
jae
enter
jge
or
lret
mov
adc
cmp
and
mov
in
sub
enter
dec
xchg
pop
cmpl
test
lahf
insl
sbb
repnz
and
out
js
int3
pop
xor
leave
ss
ss
hlt
pusha
or
sub
mov
cmc
mov
mov
mov
imul
fists
sbb
clc
insl
and
mov
int3
call
repz
lcall
adc
dec
hlt
jo
add
pop
lret
sbbl
sbb
pop
int
call
mov
in
mov
mov
sbb
dec
test
sbb
xor
inc
push
imul
loopne
leave
lret
pushf
fldcw
pop
add
divl
incl
incl
push
cmpsb
testl
sti
divb
push
icebp
add
ljmp
bound
or
cmp
and
mov
jns
sbb
sbb
cwtl
or
sbb
cmp
pop
pushf
loop
adcl
sub
call
or
and
mov
decl
stos
mov
int3
repnz
jle
repnz
int3
ret
dec
imulb
pop
bnd
pop
push
hlt
cmp
sarb
mov
jp
pop
or
stos
enter
scas
mov
leave
and
jle
sub
push
inc
imul
adcb
jmp
bnd
push
jns
in
dec
stc
lock
xlat
mov
incl
incl
lcall
push
addr16
push
fsub
add
div
mov
inc
mov
bound
std
mov
rcrb
arpl
rorl
mov
xor
das
mov
incb
add
add
sbb
js
xchg
lahf
mov
add
shrl
push
jb
add
and
aam
pop
enter
or
arpl
bound
cld
mov
mov
xor
xchg
adc
xor
imul
jne
add
dec
daa
cmp
das
inc
dec
inc
repnz
data16
sbb
push
sbb
jmp
call
or
xor
pop
out
jne
jg
sbbl
mov
or
stos
pushf
hlt
mov
push
cmp
imul
mov
iret
pusha
add
std
sub
addr16
or
sti
xchg
push
mov
loop
xchg
inc
outsl
imul
dec
ss
and
dec
loopne
sub
lret
adc
and
ret
stc
fs
mov
iret
pop
dec
or
pop
mov
pop
test
stos
or
mov
push
or
rol
fdivrs
cmp
leave
test
sub
call
clc
adcl
fwait
not
adc
jl
add
std
xchg
pushf
test
rorl
push
mov
cmpsb
adc
int3
enter
jg
mov
sahf
inc
mov
xchg
push
sub
pusha
inc
out
notb
or
sbb
dec
ss
gs
shll
xchg
mov
xor
xchg
mov
aas
xchg
lea
sbb
iret
call
lcall
loop
cmp
pop
in
push
stos
enter
sbb
repnz
dec
jg
mov
les
mov
jbe
cs
cmpsl
pop
movsb
xchg
push
fisubl
movsb
in
cld
inc
and
in
xchg
xchg
xchg
inc
mov
pop
lahf
xchg
aam
mov
mov
cli
movsl
sbb
jo
aad
jae
mov
sbb
bound
call
xor
fdivrs
adc
lret
cwtl
idivb
adc
arpl
into
pushf
push
pop
movsb
cmp
mov
mov
mov
mov
orl
add
cmpb
xlat
das
jmp
or
dec
pop
jbe
fbld
and
sub
call
inc
fs
test
decl
mov
mov
ret
arpl
xchg
lock
inc
mov
xor
cmp
push
cmp
xchg
call
loop
dec
cmpsl
ljmp
stos
les
pop
insl
push
xchg
stos
pop
repz
hlt
mov
jge
rcll
in
push
negb
jg
repz
movsb
jl
jnp
pop
fs
mov
mov
lret
ficompl
xor
inc
xchg
cmp
sub
and
sbb
test
and
andl
mov
xchg
shl
filds
push
mov
or
int3
call
mov
std
or
sbb
mov
jo
call
add
jecxz
aad
shlb
pop
mov
mov
mov
dec
cmpsb
daa
mov
sysenter
iret
cmp
icebp
add
lret
mov
dec
nop
xchg
pop
gs
cmp
dec
pop
sbb
adc
dec
add
push
shlb
inc
dec
popf
or
int3
add
repz
sbb
popf
orl
leave
pop
add
sub
enter
mov
addr16
push
jmp
popf
clc
inc
inc
xchg
mov
add
pushf
and
pop
dec
xchg
mov
cmp
cmpsb
stos
push
jp
jge
mov
aas
lock
sbb
or
lods
add
cmp
cmp
xchg
mov
push
aaa
aad
incl
incl
incl
fldl
adc
data16
stc
stc
cmpsl
dec
ljmp
loop
addl
sub
lret
fisubrs
hlt
push
hlt
dec
aam
xor
jne
outsl
fmuls
arpl
and
incl
jmp
inc
push
or
xchg
call
pop
outsl
add
rcll
inc
inc
jecxz
je
sub
sti
and
add
add
add
stos
out
loopne
sub
jae
adc
cmp
roll
fucomip
in
mov
jecxz
cwtl
xor
psubsb
call
out
or
leave
cmpsb
mov
loopne
in
inc
call
jp
or
jb
lret
lret
push
testb
dec
stos
dec
xchg
add
cmpsl
loopne
lds
mov
pop
fucomi
scas
adc
pop
movl
mov
fwait
jne
xchg
dec
cltd
fisttpll
jl
cmp
test
xor
mov
mov
adc
mov
mov
mov
dec
ror
imul
fisubl
jo
scas
adc
xlat
bound
scas
lock
sub
push
mov
jno
sub
jmp
pop
mov
call
test
ficoml
lods
sub
ljmp
push
imul
out
dec
xchg
inc
ret
push
data16
lsl
stos
js
dec
cmp
gs
ret
add
gs
mov
in
call
mov
lods
or
nop
jp
popf
shl
lods
fnsave
jmp
or
inc
inc
sbb
imul
insb
or
or
add
iret
hlt
out
mov
pop
cwtl
mov
mov
add
add
add
cmc
roll
sbb
push
lods
push
push
or
cmpsl
add
sbb
scas
xlat
jbe
aam
shr
and
gs
push
lret
xor
lods
enter
iret
mov
in
das
in
andl
adc
lahf
imul
xor
sbb
jmp
sahf
pop
mov
out
and
pop
fisttps
cmpsl
push
pushf
dec
inc
jbe
dec
push
and
lods
dec
mov
int3
jle
add
pop
dec
cmovnp
pusha
inc
cmp
jnp
jg
sub
in
add
inc
cmp
or
jns
mov
insl
lcall
pop
sub
pop
rol
jmp
jle
pop
shl
divl
out
mov
xor
pop
aad
add
notb
aaa
push
jmp
push
lock
stos
jp
bound
andl
pop
mov
sbb
mov
lahf
adc
inc
inc
sub
into
lock
ss
pushf
cli
test
in
sahf
and
and
movsl
and
ja
and
fbstp
jp
pop
fs
add
je
mov
pop
push
daa
sub
and
in
test
mov
pop
in
cwtl
jb
lcall
or
int3
call
push
mov
insl
loopne
loopne
mov
pop
xor
insl
insl
stc
or
jno
cmpsb
mov
xchg
sahf
xchg
fadds
ret
adc
stos
or
mov
ja
inc
mov
push
stos
ja
rcl
mov
out
push
pop
inc
decb
jp
out
mov
in
ljmp
cmpsl
int
cs
xor
dec
cmp
dec
aad
leave
repz
incl
incl
incl
adc
int3
cmp
sbb
movsb
xlat
mov
ljmp
jne
pop
inc
imul
xlat
cmp
out
and
jle
in
pop
ss
mov
sarb
pop
sahf
push
push
stos
or
and
mov
lret
loop
mov
rsm
and
leave
hlt
call
jecxz
cli
cltd
insl
push
dec
mov
and
adc
xlat
imul
mov
adc
dec
push
mov
call
scas
jns
or
mov
pushf
std
adc
call
or
imulb
out
cmc
cmp
lods
nop
jecxz
mov
pop
ror
xchg
lods
lret
int
cmp
mov
out
jl
lret
test
mov
nop
imul
add
fs
outsl
xor
sbb
hlt
icebp
ss
popf
mov
dec
pop
cld
jl,pn
jo
add
sub
loop
repnz
cmpsl
into
push
and
data16
adc
mov
add
and
sarb
adc
mov
shlb
mov
movsb
or
addr16
and
add
jle
dec
inc
je
push
lcall
sbb
shll
jecxz
les
je
icebp
stos
mov
aaa
ret
pushf
aaa
ss
jp
in
dec
insb
push
cmp
rclb
les
cli
call
add
pop
dec
stos
pop
mov
sarb
movsl
sbb
shrl
xchg
mov
fisubrl
xlat
sti
negb
ja
adc
push
call
lret
sbb
xchg
push
enter
test
pop
out
or
imul
aas
pop
ja
xchg
in
or
adc
pop
es
std
fwait
jg
mov
jmp
adc
fwait
mov
push
pop
nop
cmp
fs
dec
cmpsb
out
jbe
jb
pop
sbb
adc
out
cmp
lret
adc
popa
inc
loope
movsb
cltd
stos
mov
cs
fwait
adc
clc
xchg
in
sbb
add
add
add
std
cld
dec
inc
aam
add
mov
out
imul
loopne
sahf
mov
mov
cmp
stos
mov
jg
xor
mov
and
fidivl
int3
add
inc
adc
lahf
pushf
mov
sbb
cmp
lcall
xchg
test
sub
sti
push
and
sub
sub
js
ficoml
adc
push
rcr
cmp
adc
lret
cmp
push
lret
lcall
fisttpl
lock
int3
mov
decl
js
push
in
mov
add
or
lret
mov
dec
fldenv
in
outsb
push
jae
adc
movsb
adc
xchg
sub
clc
pop
inc
jl
dec
pop
xchg
mov
movsl
adc
cmp
push
mov
add
lds
push
scas
mov
jmp
push
or
in
dec
xchg
arpl
and
fld
pop
fisubrl
dec
dec
sbb
add
pop
dec
or
or
mov
pop
aas
iret
xchg
ret
outsb
std
mov
add
add
dec
rcrl
sbb
xor
negl
jno
cltd
pop
push
pop
cwtl
cmp
sub
pop
fucomi
aad
mov
xor
fistps
ss
sbb
jmp
push
inc
mov
arpl
dec
add
adc
xchg
cmpsl
ja
rcrl
pop
mov
int3
call
mov
cmp
dec
adc
dec
fwait
stos
cmp
das
inc
cli
mov
lods
stos
pop
mov
mov
out
cmc
orl
push
iret
jno
dec
xchg
bound
icebp
scas
pop
pop
adc
xchg
and
rcl
jge
or
xor
jbe
adc
sub
adc
arpl
fbld
testl
sti
dec
lock
adc
mov
xlat
repz
call
mov
dec
add
dec
call
les
push
mov
ret
out
mov
jmp
inc
addr16
mov
cmp
push
sbb
dec
nop
out
clc
mov
push
std
dec
movsb
movsl
aas
sahf
dec
scas
arpl
nop
rorl
mov
stc
enter
mov
jmp
push
shld
push
pusha
adc
call
jl
pop
push
jg
sbb
insb
dec
jg
out
or
fsub
lret
or
out
int3
adc
mov
decl
adc
stos
inc
xchg
sbb
sahf
adc
push
add
rcll
cld
adc
xchg
sub
loopne
out
repz
mov
into
and
call
aad
cmp
xchg
js
mov
std
rcl
mov
inc
shrl
add
xor
add
cmp
int3
add
or
inc
stos
scas
mov
inc
mov
aad
xor
nop
mov
jne
test
stos
nop
ja
push
add
outsl
arpl
sub
inc
jge
clc
lcall
sti
rorb
aaa
mov
adc
and
and
jns
xchg
mov
mov
or
mov
lods
cmp
mov
ficomps
addl
incl
ljmp
sub
cmp
movsl
lock
repnz
pushl
pop
mov
dec
jl
stos
or
jp
pop
aam
push
lock
aas
inc
rolb
inc
inc
add
js
jbe
fcomip
pop
test
hlt
std
repnz
mov
data16
aas
mov
shlb
call
outsb
mov
jb
loop
lods
mov
daa
fdiv
or
out
movsl
or
sbb
fistl
push
call
add
out
rorb
imul
jo
mov
sbb
push
lea
int
inc
mov
xchg
push
sbbl
cmpsb
mov
push
mov
ret
lock
adc
dec
scas
dec
out
jge
daa
ret
dec
sti
movsl
mov
icebp
jmp
and
int3
add
add
ljmp
repz
or
mov
ficomps
mov
pop
jbe
jg
or
loope
xor
jl,pt
push
jp
sub
loopne
scas
xchg
out
mov
and
sub
mov
push
sbb
sub
stc
lods
cmp
ret
or
pushl
loop
out
js
jmp
push
and
sub
sahf
xchg
adc
imulb
enter
lods
pop
xchg
inc
inc
and
mov
mov
lahf
ds
add
sub
jae
jns
andl
inc
mov
add
je
inc
push
shrb
sbbl
loope
pusha
std
mov
fimuls
mov
mov
mov
mov
mov
pop
in
mov
add
add
rcll
xor
nop
add
pop
scas
and
push
insb
xchg
nop
ret
ja
and
fs
push
push
in
enter
lret
ljmp
adc
fdivs
aas
dec
ja
pop
cmp
outsl
or
lock
xchg
inc
dec
push
in
das
cmpsl
imul
pop
push
inc
jb
pop
xor
mov
pop
push
xor
insb
sbb
sub
cmp
loope
decl
cmp
jp
outsb
mov
push
std
shll
add
les
or
pop
scas
popa
adc
lret
cmc
in
and
cmp
lock
mov
mov
out
test
ret
xchg
mov
and
mov
inc
or
dec
mov
and
xlat
jne
inc
pop
fwait
push
test
movsl
inc
pusha
sub
mov
push
cmp
adc
es
popa
ret
call
mov
lcall
data16
mov
xor
mov
shr
inc
dec
push
movsb
xor
mov
addr16
cmpsl
pop
sbbb
aam
repz
xchg
out
jg
pop
or
xadd
cmp
sahf
mov
int
icebp
jo
mov
sbb
dec
lock
mov
mov
sbb
dec
dec
adc
mov
out
lods
out
add
jp
js
pop
dec
ljmp
cwtl
push
dec
or
pop
out
sub
int
sbb
push
aad
mov
sub
in
subb
jge
push
loopne
mov
shll
js
sub
adc
cwtl
push
adc
mov
pop
and
cs
shll
jb
loop
xchg
out
sbb
pushf
popa
sub
mov
bound
sahf
add
jb
dec
movsb
arpl
dec
cmp
fldt
decl
dec
dec
pop
cmp
mov
cmp
push
push
mov
inc
stc
mov
shr
shrb
in
inc
inc
mov
mov
inc
dec
inc
repnz
mov
add
lahf
push
enter
mov
and
insl
mov
inc
stos
jbe
or
dec
fisttps
mov
ret
xchg
int3
add
add
add
mov
lret
das
inc
add
xor
jbe
rcll
inc
adc
and
gs
sti
lahf
sbb
mov
jecxz
je
movsb
jmp
cltd
addps
roll
addr16
add
add
loopne
ret
push
add
and
push
jp
or
ljmp
les
ja
jno
push
pop
fdivs
cmc
iret
sbbb
adc
mov
mov
int3
iret
leave
adc
test
cmp
push
out
mov
fmuls
out
loope
cmpsb
inc
push
rclb
and
cmpsl
mov
loopne
sahf
or
jmp
mov
cld
xchg
cmp
add
inc
orl
incl
dec
ds
sbb
lods
mov
dec
mov
je
push
iret
test
pop
fnstenv
aam
ja
cmp
xchg
adc
call
xchg
mov
dec
jmp
pop
fnsave
int3
add
add
xlat
daa
lea
insl
pop
lret
shl
loop
jmp
inc
xchg
scas
rolb
inc
mov
xchg
mov
jge
xchg
fnstcw
push
jbe
and
popf
arpl
cs
pop
inc
movsb
cmp
xchg
ret
std
sub
dec
mull
jno
inc
sub
and
jmp
enter
mov
mov
xchg
cmp
lea
push
in
mov
aam
mov
dec
mov
ret
call
push
sbb
shrb
sbb
push
in
mov
cmp
sbb
mov
xor
incl
incl
repnz
sbb
dec
adcl
inc
imul
fisttpl
setno
and
mov
lahf
inc
out
push
inc
es
mov
cltd
adc
test
scas
pop
insb
test
sbb
dec
dec
call
add
add
mov
jl
pushf
ret
adc
ss
negl
data16
pop
mov
movsl
out
aam
push
imul
lahf
mov
fs
xor
aaa
xchg
push
mov
enter
jge
cmpsl
sub
clc
and
mov
fidivrl
add
dec
aaa
push
mov
ss
loopne
outsb
popa
jne
sub
popa
cmpsl
mov
mov
mov
js
add
push
stos
mov
rorb
pop
jp
pop
inc
sbb
out
fldl2e
and
and
sub
mov
adc
adc
mov
add
add
add
mov
ficompl
push
outsl
pop
into
add
push
sub
sbb
mov
stos
mov
lods
mov
orl
add
imul
mov
fistl
cmp
jb
sbb
mov
add
mov
hlt
test
movsl
jb
push
sub
inc
xchg
add
xchg
add
dec
xchg
into
mov
pop
loopne
lds
inc
cmpb
add
mov
adc
insb
push
fs
rcrl
es
lods
inc
insl
movsl
cmp
mov
sub
sbb
push
sub
push
ret
fnstenv
fcompl
test
call
push
shrb
add
loopne
adc
mov
xor
xchg
add
std
in
pop
mov
or
int
inc
dec
adc
decl
cmp
inc
cs
mov
lcall
jnp
cwtl
mov
arpl
and
mov
in
imul
cmp
jle
cmp
sbb
sahf
int3
jmp
fincstp
lods
mov
subb
dec
or
lret
jns
jo
dec
fdivrp
jbe
push
inc
pop
dec
sub
xor
add
mov
inc
cmp
mov
pop
mov
repz
in
dec
xor
pusha
call
iret
aam
fisubrs
add
ficoms
xor
fistl
push
fistpll
push
add
mov
cmp
cmp
sarl
gs
dec
jp
ja
scas
xchg
int3
jp
inc
xchg
mov
insl
ret
xchg
pop
pop
add
mov
mov
xchg
and
sub
mov
movsl
mov
cltd
and
sbb
sbb
in
push
out
xor
and
push
mov
call
jb
mov
enter
mov
aas
ret
decl
dec
test
lea
mov
das
mov
lods
test
std
sarb
jecxz
out
ss
mov
or
and
jmp
call
xor
push
mov
mov
mov
pushf
fwait
movsl
enter
sbb
or
sbbb
push
out
jne
mov
fistpll
scas
out
lcall
xorl
jns
iret
int3
add
mov
pop
stc
popa
and
adc
ljmp
or
js
xor
add
jl
loop
push
pushf
inc
ljmp
scas
xor
push
jmp
stos
lods
neg
or
dec
cmp
pop
int3
add
add
lahf
xchg
mov
inc
add
add
jmp
and
icebp
mov
cmp
mov
sub
addb
js
daa
xlat
xor
cmp
aaa
pop
aaa
sub
bnd
aas
gs
js
inc
xchg
movsb
or
sub
jno
pop
std
cmp
pop
call
xchg
jns
cmp
add
int3
add
add
add
sti
cmp
dec
xchg
xor
or
or
add
lds
hlt
mov
stc
mov
add
pushf
ret
xor
int
test
in
les
icebp
icebp
adc
xchg
mov
mov
mov
jne
sub
jns
ficomps
insb
outsb
xchg
cs
testl
int3
add
sti
dec
aaa
xchg
add
imul
out
arpl
into
mov
je
ret
xchg
push
mov
popf
dec
xchg
mov
mov
cmp
sbb
lods
test
stos
test
xor
loopne
popa
inc
lods
dec
shrl
and
ret
loope
mov
scas
jne
fmuls
cmpb
lock
pop
xor
sahf
stc
pop
push
xchg
mov
mov
test
add
out
sbb
ret
jecxz
push
dec
jmp
lret
loopne
xor
jae
pop
and
cmp
push
add
out
cltd
std
inc
xor
mov
cmp
bound
mov
dec
mov
jp
lahf
lret
notb
dec
scas
push
imul
les
shlb
imul
aaa
hlt
sub
call
add
sar
adc
scas
repnz
insl
push
repz
xlat
push
and
dec
sub
xlat
jge
pop
insb
adc
add
addr16
xchg
insb
subl
sub
stc
xor
leave
out
aad
cwtl
add
cmc
scas
inc
inc
repnz
jge
jno
or
lret
movsl
or
cmp
and
sahf
bnd
push
jnp
dec
fidivs
mov
pop
lods
mov
mov
into
push
xchg
inc
and
in
enter
sti
dec
in
das
lea
and
add
add
add
or
jae
clc
mov
dec
pusha
popa
outsb
push
sti
lret
inc
push
inc
es
push
fiadds
mov
out
jo
push
stos
and
lret
ss
loopne
dec
fidivs
push
repz
fistps
mov
jo
mov
mov
scas
cwtl
xor
stos
push
cld
xchg
mov
clc
xor
lea
add
xchg
inc
xchg
push
inc
push
popf
xchg
xchg
sti
dec
jle
scas
jmp
aaa
push
adcl
out
sub
lds
push
rorb
pop
mov
mov
test
mov
fwait
xchg
cmpsb
or
dec
pusha
mov
outsl
or
pop
and
mov
cli
xchg
push
adc
push
pop
cmp
xchg
addr16
movsb
xchg
int
jae
xchg
fadds
push
incl
cs
inc
mov
push
je
jmp
jns
xor
sub
xchg
ret
ljmp
call
jle
in
dec
sub
jg
mov
mov
jg
or
shrb
in
out
fdivrs
shlb
mov
mov
mov
dec
lds
pop
in
inc
xor
sbb
ds
shrb
int3
add
testl
add
fwait
inc
cs
lods
into
hlt
fdivs
jnp
inc
jp
ja
jne
in
jbe
and
xor
test
les
xchg
das
popa
loopne
fcompl
sarl
xchg
mov
and
pop
pop
movsl
gs
adc
sub
insb
push
ds
insl
jne
add
and
jns
lcall
pop
in
dec
xchg
mov
or
loop
ror
stos
lret
test
movsl
cmpsb
incl
incl
into
ds
cld
das
icebp
aam
icebp
and
test
dec
mov
jnp
and
dec
mov
mov
dec
mov
cmp
dec
loopne
movsl
les
mov
mov
mov
add
ret
wbinvd
cmp
inc
sub
xor
clc
clc
lret
dec
mov
cmp
xchg
gs
outsl
lcall
sbb
ds
or
jnp
mov
inc
imul
adc
mov
outsb
xor
inc
test
fcmovb
aaa
push
jns
adc
mov
stos
or
pushf
mov
inc
push
jecxz
push
sbb
inc
ud0
sti
fstl
mov
add
sbb
inc
cli
jb
icebp
or
sbb
pop
xchg
and
int
push
pop
cmpsb
jge
sub
jecxz
mov
dec
add
or
int
roll
out
lods
mov
jo
ljmp
sub
jl
jl
xchg
mov
mov
sub
or
pop
mov
xor
cmp
clc
pop
adc
scas
pop
xchg
mov
shr
mov
std
push
inc
xchg
loop
dec
pusha
push
push
fwait
push
leave
add
jmp
xor
push
xor
push
add
sub
fs
inc
aad
std
jp
aaa
dec
int3
in
sub
cmp
inc
cmp
inc
and
xchg
shr
mov
push
xlat
cmpsb
push
shrb
pop
xor
jmp
xor
pushf
cmp
dec
xor
fs
dec
pop
outsb
xor
testb
lock
add
mov
add
xor
test
adc
sbb
out
push
in
les
inc
mov
call
pop
sbb
imul
hlt
cs
lods
lods
cltd
inc
mov
lock
pushf
mov
outsb
xor
test
aam
jnp
nopl
adc
push
hlt
fwait
incl
incl
cmpsb
jp
adcl
outsb
int
mov
xor
inc
jne
jno
jae
xor
clc
inc
push
cmp
aaa
rcrb
add
adc
lock
jne
shrl
dec
or
mov
stos
sbb
pop
jno
je
lahf
rcrb
or
incl
xchg
outsb
mov
xchg
movsl
inc
fidivrl
inc
push
xchg
loope
mov
lods
movsb
sub
pop
pop
js
or
xorb
bnd
cs
adc
clc
int3
std
dec
ja
adc
call
xor
push
mov
dec
mov
int
idivl
cmp
xor
adc
pop
mov
mov
or
jno
jle
std
jl
stos
jno
fidivrl
cs
jo
xor
add
mov
mov
add
mov
int
cmpsl
sarl
ficoms
popa
mov
pop
in
orb
pop
add
mov
enter
xor
call
xchg
jp
lods
bound
ficompl
sbb
test
addr16
scas
jecxz
xor
jo
enter
fidivrl
sahf
mov
ret
fisttps
in
xchg
mov
mov
ljmp
or
xor
movsl
pop
xchg
cltd
sbb
out
shr
sbb
incl
incl
incl
in
cmp
xchg
ss
lret
in
test
xchg
ds
push
dec
std
jns
mov
out
fwait
out
fmuls
add
rcrb
pop
jno
mov
cmp
test
adc
push
mov
cmp
movsl
inc
ss
stos
sbb
pop
xor
das
inc
leave
xor
repnz
pop
sarb
dec
jbe
int
clc
and
mov
sub
mov
lods
movsl
cmp
cs
popa
jae
ret
push
cli
cmpsl
loop
xor
pop
gs
in
pop
xchg
jge
pop
or
scas
mov
in
cli
adc
add
add
add
shrl
inc
push
fs
les
push
std
or
jl
mov
dec
xor
lock
fs
test
sub
jg
inc
stos
sbb
mov
in
sahf
rcll
in
cmc
and
repz
mov
or
xchg
lods
aam
jbe
or
outsl
xchg
jecxz
xchg
out
mov
pop
inc
jnp
in
fcomps
sbb
cmp
nop
lahf
aad
bound
mov
outsb
dec
aaa
jne
cmp
add
add
icebp
ljmp
clc
push
mov
js
inc
jb
addr16
add
and
ficoms
and
cwtl
incl
incl
call
pusha
and
xor
push
cwtl
xor
xor
lea
or
fldlg2
jns
orb
jnp
or
fnstcw
jle
lock
cmp
pop
and
xchg
sub
sub
mov
push
iret
xchg
pop
imul
addr16
lods
mov
or
mov
xchg
sahf
pop
out
enter
pop
sub
loop
out
ss
aad
xchg
shlb
in
jno
cmp
pop
cmp
add
add
insl
push
or
jb
xchg
push
xlat
hlt
or
add
nop
int3
testl
in
jle
add
sbb
or
fs
inc
inc
je
mov
int3
call
in
arpl
je
cmp
dec
es
mov
adc
fiaddl
dec
push
call
imulb
adc
mov
pop
pop
and
dec
adc
out
or
scas
pop
cmp
cwtl
loope
sub
cmc
popf
jne
pusha
xchg
enter
xchg
mov
lods
call
dec
inc
xor
jo
cmp
add
inc
add
push
sbb
popf
mov
adc
call
pop
dec
push
hlt
stos
xchg
pop
or
ror
les
fnstenv
add
cwtl
push
xor
das
pushf
sbb
out
out
out
sti
vmptrst
loopne
pop
jge
lock
lret
add
sub
clc
xlat
incl
test
mov
mov
push
mov
cmpsl
arpl
jno
pop
jae
ret
sub
jle
sarb
mov
movsb
mov
int
sub
cmp
bnd
les
cmp
and
mov
ds
aam
out
repnz
xchg
insb
xchg
xlat
aaa
mov
movsl
jl
inc
and
fcoms
outsb
call
mov
sub
push
or
fs
sbb
lea
outsb
mov
loop
mov
int
int
mov
mov
mov
jmp
imul
mov
popa
gs
or
std
or
xchg
xchg
mov
mov
data16
movsl
dec
add
add
push
jge
and
mov
out
inc
imul
mov
rcll
jne
push
test
leave
xchg
and
xlat
popf
pop
in
popa
dec
xor
in
fldt
jmp
lahf
pop
inc
out
xor
jle
loopne
gs
pusha
enter
inc
cmp
enter
int3
add
add
add
pop
sbb
nop
fs
gs
dec
mov
fs
adc
fcoml
mov
sub
repz
and
aam
mov
push
add
cmp
mov
mov
xchg
fistl
pop
or
dec
ljmp
int3
call
mov
mov
sub
mov
sub
sbb
scas
add
cmpxchg
sbb
mov
pop
dec
pop
adcl
cmp
push
pop
std
std
test
outsb
sbb
stos
or
sbb
or
add
add
aad
arpl
xchg
sbb
jo
pop
xchg
inc
fiadds
sbb
roll
mov
mov
mov
sub
mov
sub
into
loope
add
sahf
add
loopne
or
dec
jo
cmpsb
mov
fimuls
inc
ds
sub
cmp
xchg
scas
sub
sub
mov
in
andl
push
mov
and
mov
sub
adc
hlt
es
dec
mov
xor
ljmp
call
jae
lods
fldt
scas
lods
insl
or
ljmp
cltd
push
push
dec
mov
nop
repnz
xchg
pop
repz
mov
or
pop
ret
jge
and
scas
nop
icebp
add
call
add
cmp
sti
shlb
lahf
jl
fidivrl
loope
mov
stc
xchg
push
icebp
test
push
xchg
ret
movsb
mov
outsb
rcll
push
ss
js
xlat
and
pop
mov
arpl
jbe
daa
test
and
cltd
add
roll
cmp
test
pop
lds
repz
lods
stos
pop
adc
jmp
lods
adc
dec
adc
push
scas
xchg
push
jcxz
cld
xor
repz
or
xor
jae
das
cltd
insl
pop
call
mov
pop
repnz
imul
scas
cmc
subl
sub
fnsave
adc
shll
call
stos
loope
push
xchg
dec
shlb
adc
shl
cmpb
mov
mov
dec
repnz
sub
sti
jp
push
dec
add
out
fcomp
push
jp
mov
pop
push
and
xchg
loop
mov
lea
lods
clc
and
inc
or
stos
pop
dec
dec
jnp
jge
mov
outsl
sub
mov
es
imul
push
addr16
mov
dec
lret
inc
scas
in
xor
jp
je
push
hlt
push
jne
int3
xor
scas
in
popa
lds
dec
hlt
gs
sub
je
mov
mov
mov
jmp
cwtl
pusha
and
mov
movl
and
and
data16
adc
rcl
outsl
add
cmp
inc
push
jbe
fcoms
pop
stos
test
movsb
ja
mov
mov
insl
and
bound
pop
call
shr
sbb
scas
xchg
push
pop
fucomi
call
cmp
mov
sub
incl
pushl
lcall
pop
push
sub
push
pop
cmp
mov
fcmovbe
push
lods
jg
ja
jecxz
xchg
jmp
cmp
psrld
inc
xor
hlt
or
or
stc
movzbl
push
add
mov
mov
cmp
sub
cli
dec
mov
push
in
inc
fmull
mov
mov
mov
jne
inc
or
sub
notl
js
jnp
rorb
jge
movsb
aaa
fs
test
jg
cmp
adc
push
call
cmpb
push
fiaddl
xchg
cmp
jno
pop
jo
dec
in
dec
test
mov
add
shr
adc
xchg
sbb
dec
jg
fsubp
add
add
int3
dec
cmp
pop
test
jns
inc
mov
push
and
push
mov
jbe
or
test
pop
push
iret
inc
test
xchg
add
pop
xchg
add
sub
jmp
out
mov
fld
mov
xor
or
rorb
insl
jbe
js
cmp
popf
jb
int3
cmp
xchg
fimull
push
lock
jns
imul
das
mov
mov
mov
cwtl
hlt
jp
jnp
jecxz
nop
js
enter
pop
lods
enter
xchg
xlat
mov
iret
sbb
jns
std
pop
daa
lock
stos
pop
cmc
dec
mov
dec
std
jne
repz
std
and
push
sbb
or
ljmp
scas
loopne
sbb
sti
cvtps2pi
loop
pop
cmp
inc
adc
out
cmc
arpl
push
dec
test
outsl
out
fwait
push
jne
lock
jp
fdivr
ljmp
add
pop
fdivl
cmpsb
mov
push
stos
xlat
xchg
in
ljmp
jp
cmp
xor
popl
cmp
in
popf
insb
scas
dec
dec
add
xchg
ljmp
or
jb
out
lods
insl
sarb
and
and
sbb
lret
mov
pop
mov
decl
repz
call
inc
fsubs
scas
pop
mov
push
pop
dec
mov
mov
sbb
gs
xor
xchg
dec
inc
push
mov
cld
lcall
xor
insb
lods
scas
into
jno
mov
adc
mov
adc
mov
dec
mov
hlt
mov
add
ret
bound
inc
xor
add
adc
mov
jae
fsubs
sbb
mov
lret
mov
movsb
push
ds
pop
mov
xchg
ret
dec
xchg
popf
shlb
add
sub
les
aam
test
push
test
mov
push
gs
rcll
rcrl
orb
out
sub
mov
enter
ficoms
insb
xchg
loopne
jb
mov
mov
mov
xchg
sub
stos
mov
inc
into
pushf
test
outsl
mov
dec
mov
jne
jmp
add
push
inc
jp
adc
lahf
popf
pop
icebp
and
sbb
icebp
fnsave
dec
mov
add
fmulp
sub
ret
pop
jecxz
scas
dec
dec
sti
pop
stos
xlat
jg
int3
xor
push
out
mov
push
mov
insb
cmc
xchg
push
push
stc
push
xchg
sub
bound
out
mov
test
inc
sub
test
mov
xchg
fists
insb
fdivp
mov
orb
leave
pop
cmp
lods
mov
imul
or
in
repnz
fcos
mov
xor
adc
out
je
cltd
sbbl
sbb
sub
mov
je
jae
jo
cmpsb
sbb
inc
enter
int3
pop
ret
lcall
jge
hlt
jg
rcrl
std
sbb
and
inc
xchg
dec
mov
or
rorl
ret
xlat
mov
and
in
lret
and
ret
stos
or
lret
sub
enter
aam
sbb
jo
jg
in
rcrb
cmp
sub
push
js
rcrl
xchg
shrb
dec
mov
sbb
adc
mov
call
int3
cmp
insl
dec
push
inc
xor
mov
sub
or
sbb
int
add
add
sub
fsub
iret
sarl
outsl
cmp
fstl
mov
cmp
lock
push
lock
dec
inc
cmp
rclb
inc
mov
lahf
xlat
xchg
mov
js
gs
aas
xor
cmpsb
dec
sub
out
movsb
rcrl
push
sbb
xchg
dec
jg
int3
add
add
pusha
xor
je
in
ljmp
fdivrl
fdivl
into
push
pop
pop
jle
mov
mov
in
and
cld
push
stos
add
int
jle
mov
and
mov
jb
ja
push
mov
repnz
or
push
gs
fstpl
xchg
lahf
cmp
push
or
pop
sub
cmpl
insb
add
dec
and
rcrb
sbb
pop
ja
outsl
int3
add
add
jmp
fstps
push
inc
and
lret
shlb
mov
adc
sbb
cmpsb
ret
mulb
rorl
pusha
cmp
add
xchg
add
cmp
out
cltd
dec
cli
xchg
pusha
imul
sbb
push
push
pop
mov
mov
repz
iret
cmp
outsl
testb
in
jnp
mov
imul
dec
mov
or
cmp
out
popa
mov
and
add
insb
inc
decl
xchg
xor
test
mov
daa
outsb
cmp
hlt
pop
jle
push
cli
or
inc
mov
call
adc
and
cmpsl
je
adc
jle
sub
jge
adc
rorl
and
push
jge
les
mov
test
fcoms
iret
sub
and
add
cmp
movl
add
out
stc
test
inc
and
sbb
stos
fucom
sbb
xchg
jne
jns
int
inc
lcall
mov
mov
cmp
dec
or
inc
test
mov
lods
dec
mov
mov
das
cmp
ficompl
mov
sbb
das
fdivrl
out
dec
stos
mov
jnp
out
jo
sub
out
xchg
test
mov
adc
jg
xchg
sbb
ja
cmpsb
mov
mov
xchg
imul
std
addr16
inc
push
or
jecxz
test
loope
in
jnp
sub
int3
call
enter
das
nop
nop
pop
subl
lcall
push
insl
jecxz
int3
call
ret
adc
jge
movsb
jno
and
imul
outsl
cmp
xchg
mov
fsubl
imul
and
pusha
mov
cli
cld
hlt
adc
test
daa
pushf
dec
imul
or
xchg
dec
mov
bound
cmp
lahf
and
sbb
outsl
lods
sub
ja
movsb
sbbl
fadds
mov
dec
cmp
mov
scas
cmp
cmc
ja
add
add
lcall
pop
sahf
mov
bound
adc
adc
adc
pop
pop
jae
cmp
add
add
in
daa
ljmp
cmc
das
sbb
adc
shll
les
jg
jne
hlt
xchg
jp
jg
ret
jmp
jecxz
xor
imul
pop
xor
mov
mov
mov
mov
mov
sub
fstpt
int3
cmpsl
int3
insb
push
pop
dec
push
adc
mov
push
mov
stos
pop
inc
push
in
add
adc
dec
pop
jne
pop
xlat
sub
mov
add
pop
pop
mov
push
push
mov
mov
inc
mov
leave
pop
inc
rcrb
fwait
lods
jnp
push
sbb
mov
lret
shr
xlat
adc
add
add
cmpsb
inc
jnp
and
or
es
sbb
inc
jl
repnz
lock
sbb
mov
jne
sub
sarb
and
add
adc
std
inc
out
mov
into
xor
int3
push
jecxz
push
stc
mov
js
inc
mov
pop
mov
sti
roll
pop
subb
in
mov
call
dec
aaa
fwait
jg
xlat
insl
inc
in
jno
sub
add
xor
rorb
aam
cmove
and
or
loopne
mov
sub
inc
int3
add
add
push
xchg
jmp
rcrb
loop
in
cmc
xchg
xchg
push
dec
push
pop
popf
or
adc
insb
push
or
sar
push
jle
arpl
cmp
mov
sbb
add
dec
jb
imul
jmp
mov
mull
cs
xor
cltd
or
adc
loopne
push
es
xchg
xchg
loope
cmp
out
push
mov
int3
call
or
out
cli
or
and
adc
pop
and
xlat
test
push
in
mov
mov
adc
enter
add
cmp
or
adc
scas
pop
or
adc
mov
repnz
add
mov
jge
xchg
jne
mov
imulb
sub
scas
mov
pop
cmp
rol
fiaddl
out
insb
decb
adc
sbb
hlt
idivb
sub
push
in
sub
cmpsl
ds
adc
dec
stos
shll
fisttpll
scas
push
adc
push
cmp
jo
loope
push
jns
out
jmp
pop
scas
vpslld
cld
sbb
inc
mov
mov
call
pop
or
xchg
pop
incb
int3
call
pop
call
fsts
push
mov
pop
cwtl
out
pop
lea
imul
call
push
nop
push
decl
divl
call
cmpsl
mov
rcll
jge
fisubrl
movsl
insb
sbb
add
ss
mov
sub
into
sub
aaa
mov
jecxz
inc
fucomip
rolb
pop
push
fptan
stos
dec
stos
in
in
sub
sbb
cmp
push
jb
add
add
pop
and
mov
mov
xlat
sub
xlat
insl
jmp
rep
ret
insb
jge
js
adc
dec
pop
jge
sbb
popa
push
sub
fwait
lcall
or
pop
enter
cmp
jnp
lret
pop
dec
xchg
cld
sub
pop
or
movsl
or
cmpsl
jb
mov
movsb
pop
call
mov
xor
sub
push
sub
shrl
pop
shrb
daa
dec
ja
mov
rol
pop
push
xor
push
pop
out
mov
push
dec
pushl
std
adc
add
call
add
cltd
pop
jl
lods
and
pop
inc
adc
addl
lret
mov
in
jg
xchg
push
dec
pusha
loop
dec
and
call
ja
adc
adc
sbb
fcmove
pop
mov
jg
repz
jecxz
test
mov
lods
sub
and
popf
cmp
cltd
addr16
iret
sub
xchg
push
leave
loope
xchg
pushf
cmpsl
out
inc
incl
jl
inc
jge
pop
add
jne
pop
mov
pop
rcrb
gs
jne
add
fldcw
push
xor
call
imul
jne
xor
push
je
mov
or
cmp
push
jle
add
das
stos
les
adc
xor
xlat
nop
lcall
int3
inc
sub
dec
mov
add
pop
xchg
inc
lcall
fwait
push
add
sub
lcall
and
pop
daa
inc
xor
pop
in
pop
xchg
mov
in
pop
lock
fwait
jl
xchg
sti
insb
sar
pop
rcl
jns
stos
adc
fidivrs
in
mov
xor
xchg
cmp
xchg
pop
jle
jbe
test
cltd
mov
negb
scas
and
call
sbb
iret
mov
push
popf
test
mov
lret
mov
add
inc
mov
out
push
or
xchg
or
in
jbe
push
jne
enter
add
sub
lret
xor
add
jns
cmpsl
mov
fists
adc
in
mov
mov
adc
in
and
mov
xchg
add
rcrl
xchg
stos
adc
and
cmpsl
mov
jae
xchg
jne
ja
mov
sarb
movsl
insb
push
push
xor
xor
cmp
lods
jb
mov
cmp
aad
push
cmp
sahf
inc
xor
mov
sub
dec
fisubrs
push
call
fisttpll
and
leave
jae
ror
gs
int3
call
jo
mov
cmp
cli
add
or
lret
inc
mov
orl
cmp
and
sub
dec
xor
arpl
push
jg
dec
dec
imul
daa
jl
pop
add
cli
stos
jno
pushl
aam
into
add
fsubl
decl
ret
mov
and
mov
add
ds
cmc
mov
mov
xor
idivl
xlat
add
and
cld
imul
pop
lcall
fisttpll
pop
pop
sub
or
mov
mov
int
adc
cmp
into
nop
sahf
stos
daa
jns
mov
dec
scas
test
call
int3
call
xchg
sar
imul
sub
push
dec
hlt
xchg
mov
push
fs
pop
or
and
cli
pop
and
adc
xchg
cmc
xor
add
jp
test
xorl
jmp
jge
inc
in
cli
xchg
mov
jae
std
sbb
call
rolb
aam
mov
inc
stos
pop
jne
cmp
push
ljmp
mov
add
add
add
aas
mov
jl
lods
pop
out
arpl
jmp
xlat
in
or
mov
mov
push
or
arpl
stc
loope
int3
cmp
imul
jo
inc
add
sbb
push
loope
aas
test
jmp
pop
movsl
push
shrb
or
in
sub
int
clc
fstl
cmpsl
jg
fmul
sub
std
push
test
imulb
aas
int3
add
add
std
xor
addr16
jge
pop
int3
dec
pop
pusha
inc
es
add
rclb
movsb
or
je
mul
ret
xor
xor
int3
call
in
mov
dec
dec
sub
jno
mov
sub
stc
and
roll
cmc
enter
inc
pop
mov
push
sbb
notb
inc
pop
ret
push
pop
sub
add
pop
into
cmp
psllw
inc
push
test
lods
out
sbb
gs
rcl
cmp
sbb
xor
jbe
pop
sub
shr
cmp
xlat
je
add
adc
insb
and
pop
add
jge
xor
add
lret
adcl
push
push
in
and
jl
inc
shll
imul
decl
and
jg
pushf
jge
imul
sbbl
push
int
ss
mov
mov
mov
or
adc
scas
bound
sbb
and
enter
gs
ljmp
or
ljmp
addr16
flds
nop
dec
inc
pop
lods
push
or
out
iret
sahf
adc
xchg
scas
cmp
aas
jl
jb
addr16
push
lret
int3
call
mov
int
or
push
clc
daa
mov
pop
out
cmpsl
roll
dec
add
or
push
popf
insb
out
xor
cwtl
jl
leave
add
icebp
xchg
push
cmp
ret
int3
lods
add
bound
scas
xchg
ret
std
add
push
mov
jo
add
mov
cmp
jg
repz
sub
int3
add
sub
sti
jnp
jb
pop
outsl
popa
fucomip
sbb
inc
sahf
sub
add
mov
lods
test
mov
in
loope
aad
fwait
addr16
lods
or
sub
testb
mov
aas
inc
in
cwtl
mov
xor
ret
push
and
popf
or
sub
repz
dec
outsl
nop
fnsave
adc
hlt
outsb
ja
xor
fisttpl
incl
fwait
cld
inc
push
lods
test
inc
int
mov
rcrl
inc
and
or
daa
lea
push
enter
cmpsl
cmp
push
dec
sbbb
fs
mov
inc
negl
mov
and
cmp
sbb
into
sti
lods
mov
loopne
xor
jmp
dec
adc
add
loopne
sbb
xchg
gs
jge
bound
fnsave
add
inc
mov
xchg
ret
push
jl
pop
mov
and
mov
cmpl
arpl
inc
call
into
xor
stos
jmp
es
sub
pop
test
test
std
popf
and
cmpsb
fldt
adcb
xchg
std
int3
out
dec
jno
pop
xchg
push
scas
jl
es
sub
sub
mov
ljmp
jle
iret
lods
inc
adc
fstl
inc
mov
ret
ds
test
mov
pop
jmp
add
subb
daa
in
lahf
mov
cmp
repz
cmp
fimull
test
add
inc
sti
outsb
adc
lea
adc
mov
push
or
loopne
jne
and
mov
vxorpd
lock
add
add
add
mov
sub
cmp
dec
cmp
adc
jb
cmp
sub
fildll
insl
cli
xor
lods
mov
scas
int
cs
mov
incb
lgs
lods
jp
add
mov
add
add
add
sbb
push
jmp
imul
xchg
int
into
imull
mov
mov
leave
xor
pop
das
testl
push
mov
nop
js
adc
jo
outsl
jmp
cmp
mov
mov
inc
in
jns
mov
lds
push
xchg
xchg
inc
out
sbb
dec
fildll
mov
inc
les
sbb
dec
hlt
push
push
inc
push
xchg
arpl
std
mov
mov
sbb
xchg
popa
cli
cmp
jnp
sbb
add
sub
cwtl
push
pop
sub
rcrl
add
xchg
pop
sub
jnp
cmpsl
es
cmpsb
cmp
or
jbe
loopne
in
test
pop
inc
add
xor
lods
out
mov
int3
add
add
pop
loope
sub
or
mov
adc
push
insb
inc
std
hlt
incl
incl
incl
sbb
insb
addr16
push
loopne
adc
jbe
aaa
popf
and
inc
rcll
js
inc
xchg
cwtl
fcom
sbb
scas
clc
adc
mov
add
add
cmp
ds
sbb
ret
int
vpmulhw
xchg
or
xchg
mov
jmp
loope
pop
jo
aam
xchg
stos
mov
fcomps
lret
int
mov
stos
int3
add
mov
xor
orb
push
jl
jb
jle
cmp
cmp
loope
jp
into
idivl
jle
call
or
rorl
mov
pushf
sub
lods
xlat
inc
xchg
movsb
cmp
xor
dec
and
add
hlt
clc
loop
bound
lods
insb
test
xchg
jb
out
dec
loope
jg
xlat
fstps
loope
pop
and
dec
lea
clc
in
or
jp
and
enter
add
adc
pop
push
cld
movsb
int
mov
and
cltd
push
push
inc
push
xchg
xchg
cmp
adc
loope
in
sbb
jb
pushf
int3
int
jo
push
sub
aaa
nop
pop
dec
pop
mov
bswap
add
add
jae
mov
ret
dec
add
cmp
int
out
in
add
jge
jl
add
scas
mov
add
dec
sub
stos
and
push
scas
sbb
int3
jo
inc
out
sub
pop
aaa
or
inc
sbb
add
add
add
lret
iret
push
out
shl
xchg
and
adc
sub
stos
mov
movsb
out
fcompl
aad
jno
outsb
addr16
repnz
dec
jle
shll
std
cmp
jbe
orb
shrb
push
dec
mov
fs
daa
push
inc
aam
add
shll
dec
ja
adc
lahf
add
sbb
loop
int3
popf
shlb
shll
int3
add
add
push
es
stc
arpl
sahf
mov
ret
inc
sbb
fistpll
test
out
dec
xor
and
outsb
in
fisubl
xchg
js
and
stc
push
fstp
lods
add
imul
iret
pop
and
lret
and
add
cmc
dec
jne
movsl
pop
jns
shl
decb
incl
jns
mov
sub
movsb
add
jecxz
adc
frstor
daa
mov
pusha
push
repz
addr16
push
ljmp
icebp
jle
add
mov
push
dec
adc
js
xor
add
pop
repnz
ljmp
popa
mov
bound
sub
outsb
es
dec
or
call
jbe
mov
jnp
sar
adc
imul
jne
dec
dec
inc
inc
xchg
or
cmpsl
cld
stos
subb
cmp
push
ljmp
dec
mov
or
outsl
adc
es
mov
fsubs
pop
dec
xor
sub
cmpsb
into
aas
popa
pusha
mov
mov
sbb
in
cmpsb
incl
incl
incl
clc
push
mov
js
dec
sbb
lds
pop
mov
test
jne
ja
les
adc
fbld
sub
int3
jp
and
add
jnp
ja,pn
fmuls
or
pop
das
mov
fdivrp
xchg
pop
incl
incl
push
add
cmp
cmp
pop
mov
mov
mov
cmp
es
inc
outsl
cmp
xchg
fildll
fs
outsl
loopew
cli
mov
mov
cmpsl
jne
cmp
popa
daa
cmpsl
jp
stos
adc
xchg
sub
ret
insb
jnp
add
add
adc
movsl
in
popa
inc
test
inc
in
mov
std
mov
xchg
outsb
daa
jne
and
adc
mov
mov
sub
lods
stos
mov
movsl
mov
sub
add
and
push
subb
xchg
cld
insb
mov
pop
cmpb
cli
push
cmp
jmp
mov
arpl
sarl
add
fldl
sub
call
sahf
fldl
cld
xor
daa
rcl
call
loope
add
lret
pop
mov
push
or
hlt
sti
add
cmp
icebp
push
pop
and
aam
dec
inc
pop
out
cmp
pop
xchg
call
push
jbe
xchg
flds
pop
test
je
fs
cs
lods
jl
ret
cmp
xor
into
mov
add
add
dec
ljmp
mov
fs
adc
lret
cs
mov
in
mov
or
mov
cmp
in
insb
cmp
aas
xchg
icebp
cwtl
aad
mov
mov
push
enter
adc
xchg
jmp
ljmp
inc
in
ljmp
mov
jbe
jl
pop
pop
adc
jno
push
jmp
mov
clc
inc
cltd
cs
jl
sub
rol
mov
into
ja
sub
repz
test
bound
icebp
jbe
loopne
cmp
imull
shrl
loop
in
jge
in
jecxz
outsb
jmp
fcmovnb
mov
and
lock
insb
jp
stos
addr16
testl
loopne
in
loope
or
cs
xchg
sti
fidivrs
movsb
stc
inc
lods
or
mov
je
mov
jns
sub
or
add
jnp
pop
sbb
fcmovne
fwait
xchg
test
inc
or
adc
fs
sbb
lds
add
add
jmp
xor
aaa
or
dec
push
inc
in
xchg
dec
xlat
lret
jge
cld
loop
lahf
gs
int
aad
jns
cld
clc
pop
cld
pop
into
mov
xchg
int
adc
or
popa
push
shlb
and
int
hlt
repnz
testl
fwait
mov
cli
test
cs
jle
sub
push
ss
insb
int3
add
adc
jp
xor
mov
popa
rclb
xchg
stos
jnp
leave
push
dec
and
jle
leave
xchg
shrl
or
shrl
ret
sar
test
dec
lret
out
jbe
inc
fs
mov
in
mov
dec
jl
imul
in
pop
pushf
xchg
addr16
cmp
mov
jbe
xor
lods
popf
cmpsb
jp
cmp
and
sbb
jb
cmp
and
dec
cld
mov
mov
mov
into
sahf
ss
mov
push
ficoml
cmc
leave
mov
scas
and
data16
fwait
sub
sbb
xor
xchg
xchg
lcall
push
sub
mov
mov
call
add
push
inc
pop
sbb
fnsave
fidivrs
mov
test
mov
pushf
pop
shll
leave
jg
pop
pop
lcall
add
add
mov
sub
daa
pop
jae
outsl
adc
aam
xor
jl
mov
cmp
dec
ja
cmpsl
frstor
dec
push
lock
fadds
adc
loope
insb
xor
out
rolb
mov
cmp
rorb
call
dec
jo
repz
add
fists
dec
out
pop
arpl
out
mov
mov
cmp
xchg
insb
pop
es
mov
push
bound
orb
test
call
xlat
loop
pop
cmpsl
push
jae
lods
dec
add
mov
incl
lock
push
aad
dec
sbb
cmpsb
out
addl
imul
push
data16
push
mov
lods
stos
mov
shrb
out
push
xchg
pushf
add
adc
stc
sub
xchg
cmp
dec
int
and
mov
mov
imul
and
sub
stos
mov
xor
lcall
add
mov
ds
sbb
push
or
inc
mov
or
and
repz
scas
mov
mov
mov
xchg
lea
lea
insb
mov
out
sbb
sti
cmp
jae
hlt
outsl
stos
mov
inc
in
ret
mov
leave
sahf
test
movl
sub
adc
and
lods
jno
xor
mov
xor
bound
icebp
cmc
dec
call
push
pusha
arpl
xchg
stos
mov
in
xchg
xchg
test
mov
inc
gs
shl
sub
pop
sahf
insb
repz
mov
add
add
testb
lret
jbe
adc
pop
aam
mov
xor
out
inc
sbb
push
cmpsl
cmp
mov
mov
lahf
xor
sbb
lahf
shlb
lea
hlt
scas
mov
cli
int
arpl
dec
xchg
loopne
push
bound
push
and
mov
xchg
adc
xlat
ss
mov
inc
notl
xor
jp
push
cmpsl
add
rcll
or
in
or
int3
add
ret
call
out
aam
inc
sbb
movsl
xor
dec
mov
push
pop
and
xchg
incl
incl
out
sub
sub
adc
out
push
daa
add
test
add
dec
push
imul
out
pushf
test
jo
divl
fstpt
cmp
add
mov
dec
lahf
movsl
mov
lcall
pop
stos
cmp
das
inc
sbb
sbbl
fistl
lahf
jns
sub
cli
pusha
cld
cmpsl
mov
mov
mov
stos
insl
mov
or
or
call
lahf
xchg
jp
mov
repz
cld
xchg
cs
sbb
mov
push
add
in
shll
es
sub
dec
adc
xlat
fwait
js
lahf
push
mov
dec
xchg
rol
add
sub
in
xchg
dec
enter
mov
cwtl
idiv
mov
or
push
add
fisubrs
xchg
lea
inc
jle
repz
rorl
jmp
adc
push
xchg
cmpsb
lods
jg
loop
cmc
jge
jle
ss
cmpsb
mov
dec
loop
ret
adc
and
fldl
jne,pn
cs
xor
jecxz
lahf
and
in
ret
and
scas
xor
incl
push
xorl
xlat
pop
iret
inc
pusha
sub
inc
mov
mov
sub
push
aam
jmp
xchg
test
pop
cmp
imul
lock
add
outsb
mov
or
add
add
mov
std
shr
xlat
push
pop
pop
dec
xchg
out
stos
out
cmp
mov
cmp
pop
lods
mov
push
xchg
dec
lret
mov
sub
sbb
xchg
cli
inc
push
add
popf
cs
fnsave
ror
jne
lcall
or
lds
leave
cmc
dec
clc
lret
gs
push
pop
jp
andl
fiaddl
cmpsl
adc
push
lcall
cmp
movsb
xor
int3
call
cmpsb
rorb
ja
sub
xchg
pushf
stc
jp
sub
js
aas
lcall
adc
sub
or
out
push
or
movsb
mov
xchg
lahf
es
pop
test
adc
add
aaa
xchg
inc
jno
xchg
xchg
ret
into
adc
stos
adc
dec
mov
mov
mov
adc
mov
fs
sub
movsb
insl
inc
push
inc
mov
add
lea
jo
pop
enter
cltd
out
xchg
sub
mov
mov
mov
lds
cmpsb
stos
mov
mov
shll
data16
and
cwtl
inc
sub
pushf
mov
mov
inc
pop
cmp
fistpll
mov
inc
neg
lods
ja
xchg
mulb
ret
clc
movsb
bnd
jl
aas
cmc
mov
fidivrl
fs
setno
pop
shl
ljmp
or
mov
adc
inc
and
fistl
int
dec
sti
and
sbb
inc
and
add
cmp
and
mov
xchg
hlt
shl
jecxz
sbbb
mov
decl
fnstsw
xor
or
test
fimull
pop
mov
scas
ret
test
jno
cmc
xchg
call
add
xchg
cmpsb
or
jmp
fsubrs
movsl
inc
push
push
xchg
in
adc
cmp
push
xchg
inc
jmp
je
shl
pop
pop
pop
outsl
adc
mov
push
mov
test
inc
jnp
inc
js
push
enter
pop
or
sahf
mov
cli
cmp
lcall
lahf
pusha
pop
mov
rorl
test
popa
mov
pop
daa
addr16
or
arpl
mov
mov
mov
call
push
pop
mov
aam
ret
and
jnp
fmulp
add
push
call
inc
mov
xchg
jbe
or
mov
push
xor
push
mov
stc
das
fwait
dec
or
push
scas
lock
shrl
push
stos
or
mov
jle
in
inc
or
clc
adcl
mov
ja
adc
and
cmp
bound
push
fdivr
ljmp
enter
fisubs
jp
stos
loopne
fnstenv
jmp
mov
clc
mov
repnz
mov
cmp
aaa
cld
movsb
rcrl
push
xchg
jbe
div
xchg
xchg
je
jp
icebp
rcl
inc
lahf
inc
xor
push
and
jae
dec
stc
inc
addl
inc
adc
gs
mov
mov
inc
xor
mov
pop
in
call
add
int3
pushf
mov
and
dec
in
arpl
add
xor
push
sub
add
inc
sub
addr16
cmpsb
cmc
rcr
mov
mov
mov
fstp
lock
cs
xchg
addl
enter
fwait
cmp
dec
cmp
mov
sub
dec
clc
scas
mov
ss
hlt
int3
add
add
jb
push
push
les
popa
cmpsl
cmp
xchg
daa
cmp
stc
pop
inc
adc
dec
jo
daa
xchg
push
sbb
lods
movsb
jns
pushf
daa
insb
or
orb
xchg
insb
and
sbb
add
xchg
or
into
pop
enter
jmp
jp
cmp
xchg
arpl
push
xor
insb
test
shrl
jle
insl
fs
inc
dec
mov
or
subb
inc
push
xor
cs
xchg
ret
negb
push
mov
ss
mov
xchg
scas
daa
cmpsl
ds
push
jne
imul
pop
icebp
and
jno
jp
jb
int
fwait
aaa
dec
scas
addr16
inc
neg
fwait
leave
xchg
cmpsb
sahf
movsb
dec
addb
pop
mov
mov
data16
add
add
add
mov
ds
pop
test
dec
or
pop
pop
and
push
adc
subl
fldcw
repz
jmp
fwait
adc
scas
mov
cmpsb
mov
xor
jbe
stos
inc
adc
mov
cmp
call
sub
jecxz
adc
mov
int3
add
arpl
add
insl
push
mov
dec
pop
add
bound
sub
add
arpl
sbb
mov
push
pushf
sub
sbb
rclb
fwait
sti
lock
xor
pop
add
out
nop
sbb
fists
cld
jecxz,pn
outsl
xchg
mov
incl
pushl
loop
adc
mov
loop
push
shll
cmp
mov
adc
out
shlb
push
sub
ss
out
mov
mov
orb
lods
rcll
dec
test
and
jae
cmp
add
xchg
sub
ljmp
xor
les
imul
jnp
int3
call
mov
loopne
jmp
scas
pop
lret
add
call
pop
inc
rorl
mov
loope
mov
mov
mov
xchg
ret
jb
lock
jb
int3
lds
aas
js
je
loope
push
mov
xchg
cmp
scas
jg
loopne
add
js
call
js
cwtl
sbb
ret
adc
xchg
lock
push
mov
mov
mov
mov
repnz
decl
mov
repnz
inc
enter
and
mov
push
jge
xchg
mov
xchg
incl
incl
incl
or
es
dec
and
sbb
js
pop
mov
mov
mov
jp
dec
enter
xor
loop
adc
or
cmpsb
testb
outsl
pop
xor
pop
cli
iret
lcall
add
jnp
pop
cmp
add
and
enter
mov
jmp
pop
mov
push
cbtw
sub
in
xor
rorb
cli
inc
jbe
stos
cmp
call
xlat
rorb
inc
ja
push
lea
outsb
bound
es
add
jp
inc
in
inc
lcall
adc
pop
mov
jge
sub
or
mov
mov
mov
sbbl
imul
jnp
jb
dec
mov
jmp
int
js
sbb
iret
ret
jp
imul
pop
xchg
push
xor
add
add
frstor
shl
sahf
xor
jg
jnp
pop
sub
das
jl
mov
outsl
cmpsl
cs
mov
xor
xor
lea
iret
test
call
push
pop
int3
leave
mov
scas
shl
jbe
mov
jmp
fdivs
xor
cwtl
dec
cmc
xchg
lock
dec
sti
imull
ret
popa
test
cmc
cli
mov
jbe
and
or
push
testl
sbb
lds
adc
adc
cmp
xor
enter
popf
mov
mov
add
js
jae
jb
ret
xor
ficoms
fistpll
mov
out
test
xchg
test
sbb
xor
cltd
mov
xchg
sub
adcb
mov
jne
leave
test
pushf
xchg
cmp
mov
sub
adc
cmc
cmpsl
mov
imul
test
lods
xor
push
lcall
dec
and
int3
call
out
xor
es
jo
adc
fs
sbb
sar
and
sahf
jg
xchg
mov
mov
add
shll
lock
mov
jnp
xchg
fildl
mov
ror
aas
pop
mov
int
icebp
push
stos
and
int3
add
add
xor
adc
xchg
pop
aam
jnp
jb
sbb
or
lock
imul
fs
cmpl
fidivl
cmc
fldcw
test
shll
lcall
call
aaa
or
mov
fwait
cmpsb
sahf
pusha
mov
add
push
pushf
jb
sbb
aad
sbb
pop
mov
testb
cmp
mov
test
xchg
jg
jo
out
xchg
xor
xchg
mov
or
sub
mov
mov
mov
je
fisttpl
add
call
adc
hlt
incl
incl
incl
pslld
test
mov
dec
add
add
jae
lret
pop
les
jne
or
imul
push
push
inc
mov
andl
popf
pop
or
ss
push
int
out
xchg
scas
inc
adc
sbb
or
jne
out
sbb
sbbl
pop
pop
mov
ds
xlat
sbb
stos
push
xor
cmp
xchg
or
add
into
scas
cmpb
jge
jae
sbb
xor
xor
fnstenv
insl
out
in
or
mov
loopne
sbb
mul
jp
leave
xchg
imul
inc
inc
jp
shlb
enter
in
sub
ja
outsb
fildl
aas
lods
lahf
lret
pop
sar
mov
mov
mov
rcll
scas
push
push
jmp
mov
popa
orl
adc
or
daa
sbb
or
loopne
jp
mov
loopne
pop
fdivrp
out
xchg
or
pop
jge
or
pop
enter
dec
push
xor
decl
add
push
xor
dec
inc
or
or
or
pop
cmpsb
cwtl
push
sarb
push
ja
dec
movsl
sbb
push
enter
jbe
sbb
shrl
out
cmp
push
jno
and
xchg
insl
dec
push
adc
out
add
add
mov
push
dec
jnp
daa
xor
add
repz
mov
lock
mov
mov
mov
cmpb
stc
addr16
jmp
jg
std
lcall
cltd
pop
insb
outsl
frstor
aad
lods
out
jp
push
xchg
pop
mov
xor
jmp
cmp
mov
daa
hlt
sub
inc
xchg
movsb
ret
sub
shll
lods
out
addr16
cmp
sar
scas
xchg
xchg
movsl
test
popf
push
pop
mov
cli
sub
imul
lock
push
cmp
mov
out
in
jge
sbb
movsl
int3
das
cmp
data16
inc
push
mov
jmp
mov
fucomi
frstpm(287
loop
mov
push
and
jge
xchg
leave
jo
lahf
adc
add
jne
stos
push
cmp
mov
aaa
aaa
xchg
insl
ja,pn
add
add
sub
mov
repnz
popf
inc
in
std
push
inc
pop
pop
jns
leave
jbe
subl
or
dec
call
daa
push
popa
inc
add
test
sbb
lock
dec
subb
pop
in
mov
dec
cli
in
subb
call
cmp
jmp
sbb
jle
repz
in
movsb
mov
fldt
mov
shl
push
mov
pop
loopne
rorb
xchg
sub
fisubrs
sar
sub
mov
sub
aad
mov
xor
mov
mov
mov
icebp
sbb
adc
lahf
mov
mov
addr16
fadds
xor
mov
cmpsb
ss
sbb
xchg
sbb
push
arpl
sbb
push
into
sub
dec
mov
cmp
pop
ljmp
scas
imul
mov
lock
mov
dec
inc
iret
or
in
dec
cltd
pop
bound
mov
sub
push
pop
in
out
mov
pop
iret
cs
pop
mov
cmp
mov
call
pop
std
dec
sahf
dec
push
dec
test
adc
jg
out
sbb
xor
inc
xor
inc
sbb
mov
aam
lods
mulb
std
mov
jns
jp
jo
je
push
jae
xor
xchg
cwtl
enter
incl
pushl
mov
xchg
cwtl
add
dec
cli
cmpsl
and
jns
std
lds
je
or
lods
popa
pop
or
aas
push
mov
decb
mov
sub
cld
int
or
sbb
je
inc
in
fisubrs
fcompl
addr16
mov
mov
fcomps
pop
pushf
fstpl
arpl
jae
dec
pop
mov
dec
dec
add
mov
rorb
dec
ret
shrl
sub
aas
sbb
add
add
je
xor
fdivr
leave
and
pushf
xor
pop
push
in
stos
adc
cmpsb
insl
xchg
jg
pop
jmp
xor
mov
movsl
adc
enter
bound
xor
aas
xlat
xchg
lahf
dec
ss
adc
mov
das
lea
xor
push
xchg
mov
or
les
sub
in
cli
hlt
insb
pop
daa
hlt
into
mov
mov
sahf
mov
sub
add
cmpsb
outsl
inc
out
and
or
out
adc
pop
movsl
out
std
ret
push
push
das
pusha
jg
dec
sub
dec
or
adc
xchg
pop
jl
add
enter
jo
lock
enter
pop
mov
dec
jge
sub
rol
jle
in
pop
enter
xchg
ret
in
fists
xchg
test
mov
clc
loopne
or
jns
jo
push
xchg
cmc
sbb
lea
shlb
incl
inc
xor
adc
jmp
cs
jns
inc
push
or
push
jb
push
push
mov
lods
js
xchg
dec
and
repnz
pushf
test
bnd
sbb
aas
insb
int3
add
add
repnz
dec
mull
adc
and
in
pop
in
cltd
out
out
adc
imul
ret
pushf
sbb
andl
shrb
cmpl
dec
addr16
xchg
lret
inc
jnp
cmp
hlt
rorl
call
imul
pop
pusha
push
xor
sarl
lahf
sbb
mov
into
or
and
push
ljmp
into
stos
add
pop
imul
fs
out
mov
mov
and
movl
std
jle
in
adc
and
out
inc
pop
testb
fisubrs
sbb
stos
dec
cmp
add
xchg
cmp
shlb
je
sbb
rol
xorl
ficoml
push
ds
dec
add
mov
add
aad
bound
ret
dec
mov
icebp
test
mov
adc
xor
shll
jnp
pushf
popf
fistpll
pusha
jno
addr16
call
mov
push
jg
hlt
out
and
and
lods
cld
cltd
inc
mov
inc
fiaddl
adc
hlt
xor
iret
js
sub
pop
jl
ja
fists
dec
std
push
cmp
pop
jae
imul
shl
fdivrl
adcb
incl
incl
decl
lods
mov
adc
imulb
fs
int
push
push
out
and
gs
testl
jns
sahf
pop
scas
cmp
int3
call
clc
outsb
push
stc
sub
pop
mov
jne
or
cs
mov
shr
add
nop
xchg
test
fistps
loopne
mov
jp
xchg
lea
adc
jno
cmpsb
int
push
in
enter
cmp
lret
xor
fs
cs
jnp
in
mov
andl
inc
ss
pop
les
xchg
lock
push
jle
pop
inc
in
cmpsb
xor
iret
xchg
out
ret
xchg
stos
ret
aas
popa
ja
pushf
mov
cwtl
sub
cmpsl
stos
jl
cmp
mov
leave
sbb
mov
popa
push
pop
jg
ja
in
arpl
int3
add
aad
cmp
subb
and
loopne
fstpt
adc
mov
stc
mov
mov
jno
mov
dec
jmp
in
or
loop
sub
dec
inc
fadds
mov
inc
dec
or
mov
testl
add
inc
mov
ljmp
movsl
dec
add
pushf
push
jmp
test
in
int3
inc
pop
ds
xor
lret
xchg
sbbb
fs
ljmp
cwtl
mov
pop
andl
sahf
in
cs
scas
mov
inc
shll
sti
xor
mov
xchg
jg
mov
mov
sub
je
test
mov
jmp
add
add
xchg
lock
nop
fwait
imul
inc
pop
nop
rcr
lock
sahf
sbb
mov
inc
test
mov
inc
or
push
jae
sub
fcomip
ljmp
test
add
add
sub
push
xchg
out
and
xor
lods
pop
int3
sub
neg
int3
add
add
adc
aaa
cmp
gs
frstor
stos
cmp
cwtl
fidivrs
dec
xor
inc
mov
mov
mov
mov
mov
cld
sbb
ficoms
rcrl
cmpsb
or
push
inc
addr16
mov
mov
filds
dec
icebp
test
add
inc
inc
xchg
out
and
mov
jle
jecxz
lahf
cmp
imulb
fcmovu
mov
es
or
or
and
xchg
adc
xchg
mov
out
mov
add
lcall
push
cs
push
cmp
cld
cmpsb
adc
mov
daa
dec
push
mov
paddsb
and
rcl
mov
xor
outsl
cmp
bound
inc
call
ja
dec
or
xchg
mov
inc
jo
nop
mov
inc
in
addr16
incl
incl
incl
stc
js
sub
rolb
dec
pusha
daa
aad
jnp
ss
jne
push
lret
mov
rcrl
or
mov
mov
mov
jb
leave
adc
outsb
inc
jp
fisttpll
mov
fstp
or
push
mov
and
test
fistps
arpl
iret
test
cli
mov
jge
xlat
bound
push
mov
aaa
fbld
push
mov
or
jp
sti
stc
sarl
dec
and
gs
movsb
ds
dec
scas
jnp
xor
mov
mov
mov
jp
push
fcompl
enter
lock
pop
xchg
xchg
mov
xor
push
add
and
and
out
inc
push
call
inc
sti
jecxz
dec
push
fldt
popf
pop
xchg
sub
lea
dec
pop
lret
mov
lock
sbb
sahf
shll
mov
iret
dec
jns
and
dec
mov
cmp
int3
call
mov
fwait
stc
rolb
incl
fsincos
mov
and
call
int3
sti
aas
js
xchg
mov
rcr
pushf
les
aas
inc
loope
jle
dec
iretw
loopne
pop
jns
adc
pushf
gs
ja
lret
int3
add
add
into
aas
jp
in
fisttps
mov
movsb
ja
call
call
cmc
leave
sbbl
jae
lods
mov
rolb
jmp
pop
cltd
stc
scas
ja
cmp
mov
imul
cld
pop
jb
leave
pop
ja
sbb
int3
inc
cmp
pop
pop
fiadds
mov
fcomps
leave
push
jbe
mov
call
lret
jno
xchg
lahf
sub
mov
cmpl
mov
jo
mov
insl
add
pop
ja
imul
iret
lock
mov
cmp
pop
test
xor
adc
nop
xor
in
xchg
xchg
push
jle
mov
mov
lods
push
shrb
sub
inc
add
pop
cmp
in
xor
fcompl
movsl
pusha
in
xor
lock
xchg
inc
jnp
xchg
jg,pt
inc
out
mov
movsb
mov
call
ss
jg
loopne
fwait
inc
mov
cli
mov
outsb
out
sqrtps
js
jne
les
incl
fisttpl
iret
lods
lahf
add
outsb
cli
cs
test
sbb
lds
and
push
pusha
sub
and
incl
in
pop
sti
and
push
in
adc
enter
iret
pop
push
cmp
sub
insb
mov
pop
jge
stos
and
hlt
push
dec
ljmp
jns
call
int3
pop
add
bnd
dec
jb
test
jnp
mov
pop
mov
mov
ja
pop
push
xchg
test
jmp
or
pop
mov
mov
and
mov
jo
cmp
xor
dec
cltd
adc
daa
mov
fsubs
pop
stos
dec
arpl
aaa
ja
dec
arpl
aas
lds
push
mov
ds
dec
adc
and
xchg
arpl
ds
mov
and
int3
call
and
xlat
rcrl
sbb
notb
xlat
push
add
lds
sub
icebp
repz
mov
push
test
pushf
add
or
insb
out
dec
xlat
jno
xchg
xor
aas
pop
push
dec
xor
mov
rol
adc
adcl
mov
in
mov
jo
jmp
xchg
insl
mov
lea
mov
sub
fidivs
fidivrl
test
add
add
add
push
jbe
jl
in
mov
push
in
or
in
cmp
in
adc
int3
call
faddl
addr16
xchg
sbb
fdivs
add
add
mov
jnp
cmpsl
jecxz
subl
outsl
std
cli
fimuls
jbe
jge
xchg
or
cmp
adc
sub
cwtl
mov
jg
and
pop
xchg
cmp
out
outsb
and
mov
incl
decl
or
push
adc
lcall
cli
adc
lds
mov
mov
addr16
xor
fistps
xchg
into
in
mov
mov
and
stc
out
sbbb
rclb
add
pop
js
enter
arpl
mov
mov
xchg
arpl
jp
sbb
mov
dec
mov
cld
outsb
loopne
xor
sub
scas
movsl
daa
cmp
sub
int3
sbb
ss
mov
loop
inc
in
and
mov
outsl
test
sbb
inc
cmp
inc
cmc
or
fists
rcl
pushf
xor
dec
es
xchg
icebp
test
out
decl
sbb
into
cwtl
inc
push
jge
xchg
es
pop
xor
lods
shl
test
or
jae
les
jge
sub
movl
inc
add
cmp
mov
mov
int
outsl
out
xchg
jmp
lret
add
or
ud0
jmp
jb
and
movsb
movsb
outsl
inc
sahf
iret
adc
call
jg
inc
push
insb
clc
xchg
stos
jae
mov
mov
ret
push
nop
mov
cmpsl
adc
andb
mov
mov
ret
mov
repz
cmp
dec
jb
iret
push
pop
call
out
stos
mov
mov
cmp
sbb
inc
lcall
insb
add
and
adcb
mov
rclb
push
cwtl
subl
xor
popa
inc
inc
jmp
lds
sbb
mov
mov
mov
repnz
rcl
mov
xchg
cltd
mov
cmp
pop
insl
pushf
mov
or
mov
ret
push
lods
jne
sub
in
sahf
jae
nop
js
inc
jnp
mov
fdivr
push
jp
aam
imul
bound
in
bound
lcall
jne
dec
test
inc
outsb
arpl
sbb
loopne
rorl
jb
das
pushf
sub
jl
pop
repz
jl
lret
cltd
ret
or
int
xchg
ds
mov
test
or
pop
sub
cltd
nop
xor
fildl
adc
jae
orl
mov
test
pop
jnp
xor
leave
mov
pop
stc
push
rcll
dec
or
js
mov
dec
adc
stos
add
rorl
aam
ds
mov
addr16
adc
ret
mov
addr16
in
repz
adc
test
push
push
pop
adcl
mov
call
hlt
xor
iret
nop
jge
mov
inc
loopne
or
popf
lea
cmp
adc
lea
inc
das
es
nop
movsb
fldt
xchg
xor
lcall
jp
sbb
int
scas
push
fcmovnbe
cmpb
pop
bound
cmc
or
enter
mov
es
gs
sub
rolb
push
xchg
test
pop
clc
bound
cmp
add
pop
int3
test
xchg
ror
pop
add
shlb
int3
mov
std
neg
jecxz
daa
and
pop
jge
rorb
scas
loope
cs
mov
xchg
push
in
enter
inc
aaa
int3
add
add
push
dec
lahf
and
cmpsb
add
xor
xlat
adc
ljmp
insb
pop
out
jnp
sub
jmp
sahf
sub
fbstp
xorb
aam
dec
lods
add
mov
mov
stc
sub
mov
adc
xchg
pushf
popw
fists
pop
test
push
push
add
push
jge
jmp
data16
jno
sbb
pop
push
fldt
daa
xchg
movsb
int3
add
mov
nop
or
mov
nop
cs
and
faddl
cld
sub
imul
out
add
add
xchg
jge
jp
pop
xor
test
jp
fwait
int3
jp
jp
or
inc
cmp
pusha
icebp
sub
ret
addr16
mov
lds
ljmp
pop
pop
mov
pop
jno
scas
push
js
stc
fnsave
scas
cmp
add
repnz
xchg
shll
mov
inc
push
repnz
sti
xchg
adc
test
rol
cmp
es
jmp
or
and
pop
cli
int3
add
add
xchg
add
dec
outsl
mov
push
lods
pop
xchg
xchg
sub
std
dec
rclb
mov
pusha
les
dec
pop
xor
mov
fldln2
leave
enter
mov
popf
jecxz
stc
shll
cli
movsl
or
lret
add
mov
sbb
arpl
jo
mov
mulb
data16
fldl
adc
incl
incl
cmc
xchg
mov
pop
fisubrl
cmp
sub
cwtl
sbb
dec
add
ret
xor
cmpsl
incl
incl
incl
xor
fwait
adc
mov
xlat
dec
xor
mov
orb
js
sub
mov
xchg
push
lcall
cli
cmpsl
insb
xchg
cli
imul
sti
fcomip
xchg
cmpsb
mov
adc
and
dec
mov
repz
pushf
sbb
jo,pn
dec
outsl
in
jnp
cmp
pop
repnz
repnz
xchg
dec
ret
or
push
or
rclb
adc
movsl
data16
mov
cwtl
xchg
scas
dec
mov
sbb
bound
cmp
inc
and
sub
loopne
push
push
sbb
push
mov
shrb
xchg
inc
xchg
in
sbb
stos
call
jo
in
add
or
or
enter
mov
inc
pop
mov
add
inc
lock
or
shll
add
bound
jmp
and
inc
out
fidivl
adc
frstor
sub
out
dec
push
adc
add
sub
push
not
mov
nop
jg
mov
and
je
xchg
fdivs
xchg
mov
pop
in
inc
add
dec
mov
or
fdivs
icebp
pop
adcl
fmul
incl
decl
test
das
mov
repnz
stos
pop
loopne
data16
and
aas
test
cmc
mov
xor
sub
xor
dec
scas
adc
xchg
xchg
or
sbb
inc
rcrl
outsl
popa
fistpll
aas
ljmp
or
into
int3
dec
mov
mov
stos
loopne
mov
mov
jg
hlt
int3
add
pop
and
dec
jne
mov
in
adc
xchg
and
pop
hlt
xor
cli
mov
dec
imul
or
shlb
xor
repz
mov
cwtl
insl
push
push
add
dec
pop
xor
add
add
add
sub
inc
and
pop
mov
insl
pop
icebp
imul
cwtl
shrb
fdivrl
jg
neg
pop
jge
cmp
inc
xchg
mov
loop
cmpsb
fistpl
sbb
je
iret
inc
dec
jnp
mov
mov
sub
inc
pop
movsl
sub
vmwrite
icebp
mov
lods
pushf
sarl
repnz
in
or
and
addr16
movsl
clc
jl
repz
rcll
mov
fildl
js
mov
push
in
cltd
and
push
out
cmp
add
mov
aaa
inc
dec
cltd
xchg
lock
push
mov
fisttps
lds
pop
xor
or
cmpsl
arpl
or
adc
daa
add
les
ret
push
aad
ret
adc
mov
lret
enter
ljmp
dec
jg
mov
mov
push
lock
cwtl
pop
ljmp
jl
xchg
in
push
push
int
int
fstl
cmc
daa
pop
jl
incl
and
adc
clc
add
and
xchg
aaa
clc
fcmovnu
fcoml
xor
dec
addb
push
xor
inc
mov
stos
adc
add
imull
pop
mov
daa
sbb
test
int3
add
dec
ja
and
sti
outsl
and
mov
sbb
dec
push
dec
mov
ret
popf
pop
iret
out
push
scas
popa
arpl
mov
addr16
aad
sbb
int3
call
push
movsb
imul
cmpsb
ret
into
in
jb
mov
xor
cmp
adc
stos
repz
add
scas
push
popa
push
shll
sbb
outsl
icebp
addr16
or
pushf
ficoml
rcrl
popf
aaa
rclb
sbb
flds
mov
testl
cmp
cmpsb
call
and
call
xor
mov
ret
sub
xrelease
pop
jnp
nop
shl
test
ror
mov
dec
xchg
divl
push
rorl
cmp
xor
add
add
test
ss
dec
or
add
mov
sti
inc
mov
imul
or
popl
xchg
nop
cltd
lret
cmp
in
push
cmp
js
pop
push
ficoml
pop
jb
push
test
xor
outsl
push
scas
aaa
movsb
xchg
mov
jne
sbb
sbb
outsb
fnstsw
outsl
je
enter
lock
mov
loop
outsb
mov
out
fldcw
lret
in
mov
mov
jl
mov
or
inc
es
pop
movsl
cli
nop
inc
popf
insb
test
adc
dec
sbb
xlat
jo
mov
push
adc
mov
xchg
lcall
popa
pusha
roll
popa
jle
fs
jno
inc
popa
pop
mov
call
ror
jl
pop
pop
sbbb
int3
shrl
push
ja
fcompl
jl
rorl
adc
cmpsl
loope
push
and
add
arpl
fisubrs
es
aad
xor
fcomps
push
outsl
les
and
xchg
and
cmp
inc
ds
cmp
push
sbb
cmp
jp,pn
into
push
fistpll
sub
scas
je
dec
pop
add
mov
popa
cmp
xor
shll
lret
lret
sub
push
jnp
xchg
in
sub
adc
push
fdivrl
mov
call
jns
arpl
test
push
and
sub
movsl
cmc
imul
aad
std
lock
imul
sbb
add
jmp
aad
or
pop
lahf
in
cmp
ret
sarl
jmp
mov
sub
out
pop
test
lahf
out
mov
or
jmp
std
fisttps
mov
mov
mov
xor
mov
dec
or
cmp
lcall
into
hlt
in
sub
mov
dec
lds
push
xchg
ds
sbb
sarl
incl
incl
incl
lock
push
sbb
sbb
mov
das
jle
dec
add
sbb
xor
int
push
mov
pop
rcll
jnp
test
sbb
test
mov
pop
das
das
test
cwtl
in
mov
pop
inc
push
mov
aaa
aaa
mov
push
fnsave
mov
cmovge
jb
pusha
mov
sub
push
ret
in
ficomps
scas
sub
sbb
mov
mov
int3
call
push
popf
test
nop
add
xchg
push
iret
outsl
fisttps
xchg
std
inc
scas
inc
nop
fwait
mov
xchg
inc
push
insl
pusha
out
ret
mov
call
lret
cmpsb
ljmp
push
mov
jo
fcmovnu
fists
dec
pop
push
in
pop
mov
out
je
pop
repz
jmp
xchg
jmp
jmp
sbb
ja
hlt
inc
mov
mov
mov
adcl
rclb
inc
out
xchg
or
xchg
adcl
test
test
decl
and
pop
adc
mov
cmp
pushf
fsubrl
adc
lahf
loopne
in
mov
add
ror
cmp
pop
icebp
xchg
test
cmc
outsb
jno
pop
lods
mov
bound
dec
fs
mov
cmp
jecxz
mov
icebp
roll
sbbb
negb
loope
cmp
xor
xchg
mov
iret
cmpsb
jg
xchg
pop
mov
dec
test
and
rcl
xchg
mov
movsb
jb
adc
lret
pop
xor
sub
inc
rcrb
mov
cmp
xor
fadds
pop
inc
mov
fists
call
lea
in
jecxz
lds
cmc
mov
out
jp
fbld
or
nop
mov
jecxz
lcall
inc
mov
adc
push
int3
xchg
add
mov
mov
add
add
add
dec
push
add
sahf
aas
or
ffree
push
mov
jle
repnz
jbe
mov
sub
popf
mov
pop
int3
add
add
add
push
sub
jnp
sbb
sahf
loop
pop
lret
fldt
nop
jne
xor
lds
mov
in
call
dec
xchg
jo
icebp
cmp
inc
fistps
incl
incl
in
mov
ret
push
pop
jp
xor
scas
push
roll
outsb
xor
ret
jae
sub
fs
cmpsl
ss
fdivr
pop
xor
movsl
jmp
fbld
mov
int3
call
test
xor
scas
fimull
imull
in
cmp
mov
rcrl
dec
fadds
push
enter
adc
mov
lock
mov
scas
cld
in
jno
ror
add
out
push
leave
inc
test
outsb
sub
scas
xchg
add
pop
jle
lods
leave
out
mov
imul
xchg
insb
pop
mov
movsl
mov
xchg
mov
and
addb
xor
xchg
cmpsb
and
and
fs
fcomp
call
adc
rcrl
mov
loope
mov
shll
fs
add
add
out
imulb
pop
fisttps
stos
mov
imul
pushf
cs
or
std
mull
int3
popa
repnz
dec
jmp
push
lods
hlt
xchg
and
adc
cs
sbb
in
sbb
popa
inc
sub
and
lret
scas
xchg
aad
sbb
clc
negb
test
mov
sarl
mov
xchg
int3
add
add
add
xor
out
inc
jl
pop
out
loope
xchg
addr16
xchg
mov
shl
and
insb
xor
xor
sti
icebp
stos
clc
fwait
push
iret
add
mov
mov
flds
push
inc
pop
leave
sbb
xor
jl
push
mov
mov
movsb
xchg
stc
xchg
push
shlb
dec
jae
push
push
cs
jle
call
add
shlb
mov
mov
mov
jge
dec
movsb
jbe
pop
lcall
icebp
das
xor
and
mull
mov
inc
dec
mov
dec
cltd
lcall
xor
fsubrl
xor
mov
icebp
fcmovne
imul
insl
pop
jle
into
rcrb
xchg
inc
ffree
push
pop
aam
adc
hlt
xchg
adc
sbb
inc
rorl
sub
xchg
nop
adc
rorl
stc
ljmp
jg
mov
jmp
ljmp
mov
repnz
imul
or
or
mov
lods
mov
mov
jle
push
mov
cmpsb
into
dec
lods
inc
adc
dec
loop
jmp
pusha
rcrl
scas
popa
pop
shl
lds
or
push
outsl
xor
aas
adc
repz
aad
fs
or
pop
add
jns
dec
mov
jecxz
xor
call
adc
xchg
std
mov
idivl
jmp
orl
addr16
adc
dec
jecxz
orb
lods
sub
cli
ficomps
shr
mov
xor
mov
add
jle
push
dec
mov
pop
pop
rcr
push
je
test
mov
or
lret
push
jne
mov
mov
sbb
rcl
pop
pop
or
or
mov
push
xor
dec
icebp
into
fildll
push
ds
mov
cmp
jp
jne
or
mov
pop
ficoms
lea
stos
sub
mov
leave
xchg
mov
sub
mov
push
fwait
push
dec
cld
sbb
jo
mov
incl
data16
test
inc
adc
mov
push
call
subb
enter
cli
xchg
xchg
pop
inc
sub
jbe
pusha
or
sbb
lahf
mov
bnd
sbb
popa
or
fstps
add
jmp
loope
lret
pop
lds
cltd
cmc
scas
jae
mov
inc
pop
add
xchg
dec
or
stc
mov
test
int3
add
add
push
xchg
cs
pop
jo
dec
jge
stc
push
mov
xor
call
pop
cmp
sbb
cmp
lret
movsl
int
movsb
pop
push
ret
stc
inc
adc
sub
mov
and
or
and
jmp
inc
in
lret
mov
cmpsl
lahf
fs
lods
push
sbb
ja
aam
add
xchg
lret
adc
ds
mov
clc
mov
rclb
add
push
repz
out
les
imul
mov
mov
lea
test
ja
jne
subl
sbb
xchg
leave
mov
inc
sbb
rcll
jno
sahf
xchg
mov
xlat
jo
lock
dec
fcmove
in
pushf
daa
addl
pop
adc
data16
es
pop
out
pop
mov
jl
call
gs
hlt
push
int
dec
cltd
popf
adc
mov
add
xor
fcoml
scas
mov
aas
subl
mov
mov
insl
xor
xor
sbb
addl
mov
loope
ds
mov
mov
aas
call
outsl
ret
or
in
in
inc
ficompl
into
fisttpll
jno
jl
stos
es
call
sub
sahf
fwait
inc
into
push
rcl
jmp
sbb
flds
dec
sbb
jge
out
push
loopne
cmpsb
xor
mov
cld
cmpsb
push
cmp
cmp
rolb
jle
add
fdivl
add
imul
or
inc
aaa
or
sbb
or
repz
rcrb
stos
xchg
scas
push
jl
and
lahf
gs
cmp
int3
push
mov
les
in
dec
pop
jecxz
fsubrp
xchg
sahf
xor
rorb
test
and
mov
mov
call
push
and
fsubrp
inc
lcall
out
sbb
loope
mov
ret
aaa
or
sub
int3
call
push
jecxz
jmp
jo
sbb
pop
nop
mov
lods
int3
mov
lcall
int3
mov
lock
and
jmp
lret
push
lret
jecxz
aam
data16
or
outsb
pop
ds
inc
mov
fsubr
sub
cmp
push
aad
test
mov
cmp
and
mov
add
sbb
dec
imul
push
sarb
mov
xor
adc
mov
into
das
enter
cmp
shll
fadd
enter
faddl
mov
filds
fsubrp
jae
aam
inc
in
jnp
xlat
shl
es
add
les
jecxz
push
es
or
add
leave
popa
mov
in
divb
push
mov
mov
mov
pop
sbb
sbb
insb
cld
pop
or
fidivs
out
adc
ja
imul
lret
mov
shrb
xlat
sbb
or
jmp
mov
add
add
jg
pusha
or
pop
pop
add
repz
push
loopne
sub
xchg
ljmp
mov
int3
call
aam
jle
cmp
mov
mov
jb
fstpt
fsts
jb
fnsave
les
mov
shll
shr
dec
test
add
push
scas
mov
ljmp
pop
std
jp
adc
sub
add
add
add
jb
dec
jmp
inc
adc
lret
sub
hlt
jb,pt
mov
cwtl
jb
insl
shrl
dec
dec
cld
clc
jbe
mov
andl
popf
inc
ret
jmp
mov
push
mov
add
or
cmpsb
call
sbb
fs
inc
mov
fs
fstl
add
cld
pusha
lret
testl
push
insl
repnz
out
loopne
pop
lret
pop
dec
jno
fcoms
cmp
cmp
cmp
mov
rcll
or
add
cs
xor
inc
pop
mov
call
popf
daa
add
jl
fdivr
sub
jb
mov
and
mov
inc
mov
jne
stos
cli
jne
inc
aad
xchg
call
jne
cli
mov
push
stc
mov
out
addr16
sbb
sub
add
mov
ret
pop
adc
mov
xchg
mov
add
mov
hlt
adc
xorb
xchg
sub
push
add
movsl
jbe
idivl
iret
mov
fsubrs
mov
cmpsl
adc
cmpsl
and
lods
dec
into
cmp
add
sub
cltd
push
and
movsb
push
lret
xor
cmp
sbb
jbe
mov
add
sahf
ds
cli
mov
lods
push
sub
mov
cmpsb
push
pop
daa
ds
xor
inc
jmp
push
sbb
pusha
repz
xchg
cmp
adc
lret
xor
sbb
xor
test
dec
lret
stos
js
push
pop
test
outsb
stos
jno
into
mov
jp
aad
push
es
clc
pushw
lock
stc
push
mov
sub
inc
cmp
xor
fdivrl
rcrb
andb
xchg
movsl
or
add
jmp
mov
and
inc
popa
mov
movsl
jge
push
cmp
fdiv
test
push
cli
lea
push
xchg
jns
aaa
je
lds
or
mov
inc
mov
mov
pusha
jns
xor
mov
jmp
push
mov
add
dec
pop
aad
xchg
cmp
outsb
push
loope
dec
popa
inc
fistpll
mov
clc
ds
add
ljmp
hlt
jg
inc
sbb
sbb
arpl
decb
call
jmp
dec
or
push
jne
pop
cld
pop
xchg
lock
push
iret
sbb
in
mov
adc
je
in
push
imul
and
movsl
fnsave
mov
sub
lock
push
lods
mov
cwtl
sahf
fwait
ret
xor
imul
jb
incl
push
incb
jl
add
loopne
or
imul
push
fldt
hlt
xchg
test
test
in
jecxz
pop
sbb
pop
xor
pop
clc
lea
stos
push
inc
jp
insl
loopne
mov
bswap
mov
sub
dec
mov
xor
fucomi
push
pushf
stc
iret
jns
xchg
inc
shr
mov
pop
sbb
int3
jmp
lcall
lock
das
xor
in
jns
push
add
addr16
inc
pop
and
xchg
sbb
fsubp
leave
repz
xchg
mov
sub
cmp
add
cmp
mov
mov
cmp
mov
int3
call
xlat
pop
cld
sub
push
sub
inc
and
add
int3
jb
dec
push
lret
insb
dec
push
jne
mov
scas
jo
outsl
adc
test
push
pop
inc
xor
pop
loop
test
inc
dec
fidivrs
cmpsb
sarl
mov
rolb
cmp
bound
and
sub
dec
fbstp
aam
out
sub
aad
sbb
out
dec
pop
popf
xchg
pushf
movsb
out
sub
inc
sarl
mov
decl
cs
hlt
insl
mov
dec
mov
out
add
push
add
int3
add
add
nop
cld
int
lds
sub
enter
jne
shll
push
mov
outsb
xchg
je
aaa
pop
inc
rcl
fadds
cmpsb
fdiv
push
das
incl
incl
stos
movsl
in
inc
out
push
jl
mov
pop
lret
aad
les
mov
mov
sbb
xor
jne
push
jecxz
fstpl
mov
iret
enter
outsb
pop
push
jg
xchg
and
pop
mov
mov
cmp
and
and
aaa
ljmp
pop
int3
mov
adc
inc
dec
dec
test
jg
xor
jmp
lret
clc
ds
inc
jg
lret
into
imul
decl
les
dec
addl
mov
stos
mov
stc
push
insb
mov
cwtl
mov
mov
mov
cmp
mov
jecxz
movsb
sahf
iret
out
mov
das
rcr
addr16
xor
in
fisubrs
mov
inc
arpl
test
xchg
shll
iret
mov
sub
inc
stc
cmp
hlt
in
sub
int3
pop
adc
xchg
lock
fidivs
push
xor
add
lahf
xor
fmuls
xorl
fidivs
sbb
in
add
add
int
cmp
das
insl
ja
xchg
mov
xor
dec
xor
and
mov
stc
push
xchg
mov
dec
roll
sbbb
mov
push
hlt
dec
lods
call
test
mov
sbb
loope
orb
das
mov
lods
stc
icebp
nop
sbb
pop
mov
outsl
in
add
add
clc
call
sbb
nop
mov
nop
addr16
call
repz
sub
jecxz
jmp
push
inc
fisubrl
scas
int3
add
add
add
pop
js
adc
out
test
cmp
xchg
insb
das
gs
cmp
mov
cld
pop
fucomp
add
add
out
cmpsw
or
and
aad
clc
insl
push
sub
movb
push
je
cwtl
sahf
xor
fwait
jne
pop
inc
imul
pop
pop
hlt
outsl
shll
push
mov
int
stos
subb
nop
scas
mov
out
push
lods
insl
aad
mov
jb
enter
mov
mov
xor
xchg
leave
dec
sti
loope
das
rol
ficoms
aam
xchg
jae
jge
mov
jae
pop
int3
add
gs
sbb
and
or
xchg
cmc
sbb
pop
mov
push
mov
adc
or
roll
fstl
push
je
cli
and
adc
lock
lock
decl
dec
mov
sbb
mov
xchg
pop
jns
push
sub
in
cmpsl
mov
fisttpll
ret
and
mov
or
fldt
aad
push
pop
sbb
or
mov
pop
add
lcall
cmp
es
and
mov
enter
ret
mov
dec
inc
ja
je
cli
dec
testb
flds
in
mov
or
sub
int3
sbb
sbb
sub
ficoml
push
lret
aad
in
mov
sub
das
xchg
in
cmc
insl
mulb
fnstcw
pop
mov
repnz
imull
rcl
or
cwtl
inc
mov
adc
incb
jle
add
xor
pop
inc
and
popa
mov
or
xchg
clc
mov
imul
repnz
mov
insl
in
lret
orb
popf
jne
xor
sbb
lret
aas
dec
mov
or
les
into
jg
subb
sub
inc
inc
inc
test
negb
mov
cmp
mov
add
jns
cmpsl
fwait
mov
testl
leave
outsl
mov
mov
fxch
pop
pop
in
cmp
jl
add
pop
out
xchg
fisubrs
mov
mov
mov
mov
mov
push
test
cmp
pop
clc
pop
nop
fnsave
lods
cld
adc
dec
push
xchg
outsl
jae
shlb
daa
call
dec
xchg
ds
pop
push
push
scas
xchg
inc
pop
pop
loopne
in
pusha
sbb
insl
pop
movl
pop
or
push
test
and
test
inc
mov
mov
hlt
add
xchg
movsl
jae
ljmp
lods
adc
insl
insl
adc
pop
add
xchg
scas
add
and
call
xlat
scas
ss
lods
test
mov
mov
pop
mov
call
xor
add
cld
lock
or
pop
loope
sbb
dec
pop
cltd
dec
daa
dec
hlt
into
test
les
inc
stos
push
scas
sub
fistpll
xchg
and
int
stc
jnp
jmp
addb
mov
std
lods
dec
or
fidivrl
push
cmp
fstpl
dec
mov
mov
mov
jmp
nop
aas
test
test
push
pushl
popa
sub
or
xor
dec
sbb
dec
mov
mov
call
cmc
cmp
pop
adc
or
in
fwait
cli
and
inc
jmp
mov
push
sub
cwtl
std
xor
jge
dec
pushf
insl
mov
lret
mov
inc
jg
int3
mov
jl
mov
add
add
jle
inc
inc
movsb
int
incl
repnz
stos
push
insl
xchg
xchg
xlat
cmp
cmpsb
cmp
push
mov
sbb
push
lock
ror
lods
idiv
xor
jo
cmp
dec
dec
mov
int3
mov
dec
cmp
fs
or
loope
sub
fcmovnu
jbe
inc
ds
mov
jns
in
addr16
es
fdivr
imul
dec
adc
xor
mov
cmp
lcall
cli
mov
fdivrs
aas
mov
ret
nop
mov
hlt
push
out
add
add
push
das
movups
lret
out
jle
mov
imul
add
mov
mov
jg,pn
mov
mov
movsl
inc
jmp
insb
imul
aad
aam
insl
mov
push
xor
jle
xchg
adc
mov
sub
fs
scas
je
pop
mov
jbe
sar
in
stc
cwtl
mov
inc
push
jbe
out
and
cwtl
outsb
mov
popa
or
inc
negl
ret
inc
sub
fisttpl
fbstp
sbb
std
sbb
or
add
dec
rcr
mov
xchg
mov
cs
dec
movsb
icebp
adc
inc
fwait
push
jae
push
sub
lahf
cmp
divb
lcall
aas
insb
je
iret
xchg
aas
pop
sub
rorb
adc
faddl
sbb
movsb
and
inc
fbld
pop
pop
and
out
ret
out
push
mov
cwtl
inc
insl
xchg
into
test
rorb
xorl
cwtl
xchg
fildl
add
jne
inc
andl
sti
ror
inc
out
popf
js
fadd
xchg
push
repnz
and
and
sub
subl
push
jmp
xor
iret
gs
out
imul
add
add
add
ds
add
or
out
stc
lds
lahf
pushf
add
je
jp
out
inc
xchg
inc
adc
repnz
cmp
push
fs
outsl
into
rcll
popa
lahf
mov
dec
mov
lea
add
andb
jo
negb
mov
pusha
xor
add
loopne
sarb
add
fidivl
jg
int
fstps
dec
mov
xorl
rol
pusha
inc
shll
xorl
cs
mov
leave
and
inc
mov
cmp
icebp
and
xlat
in
insl
loope
call
ret
fidivrl
mov
insb
cmp
bound
imul
ljmp
jno
inc
repnz
inc
data16
push
je
jge
pop
jb
inc
out
push
xor
in
out
mov
pop
divl
cwtl
push
lret
dec
movsb
fisubl
adc
pop
cmp
add
add
add
xchg
push
ret
hlt
jae
pushl
test
and
xchg
das
pop
push
fldcw
repnz
out
cmp
sbb
or
outsb
cmpsl
mov
bound
ljmp
dec
inc
lret
movsb
dec
cmp
or
lods
je
mov
loop
test
xor
cmp
pop
cmp
icebp
mov
cmpsb
pop
or
popa
add
add
mov
push
shr
add
push
mov
dec
popf
mov
inc
jecxz
fnsave
jbe
in
adc
insl
repnz
arpl
ret
pop
xchg
push
pop
add
push
fwait
outsb
mov
mov
add
into
pop
add
das
nop
or
rcrl
or
cmp
add
adc
mov
xchg
cli
jle
sbb
xchg
pusha
pop
adc
add
mov
push
cmc
mov
jle
add
fnsetpm(287
adc
xor
sbb
stos
test
and
fbld
push
data16
imul
scas
shr
sub
loopne
xor
cwtl
aam
cmp
xchg
scas
test
mov
or
push
dec
enter
lret
sub
outsb
inc
sub
call
add
jmp
mov
mov
out
push
mov
or
pop
push
out
ret
xchg
mov
flds
cmpsl
pushf
mov
add
cld
fwait
lds
push
cmp
mov
adc
xor
pop
sub
sub
sahf
dec
cmpsb
mov
add
pop
test
inc
cmp
jo
add
xchg
xchg
divb
ljmp
ss
xchg
aad
aas
rcrl
js
icebp
je
and
add
add
pop
fld
shrl
or
push
push
insb
lds
jno,pn
or
push
stc
push
inc
push
mov
xlat
daa
fcomps
arpl
enter
daa
pushf
adcl
adc
xor
mov
xchg
rorb
cmc
xor
xor
aaa
or
int3
call
dec
in
mov
adc
jmp
adc
dec
in
lcall
pop
lcall
lret
int3
call
xchg
jne
loope
pop
dec
hlt
jbe
fadds
push
mov
add
incl
incl
popl
fwait
jb
stos
and
push
test
sbb
inc
leave
cli
popf
push
fstl
ss
or
call
into
je
mov
sti
push
pusha
push
std
aam
divl
clc
repnz
sbb
push
dec
pop
sub
nop
jl
adc
std
xchg
lret
jne
push
mov
inc
repz
dec
xor
addl
inc
or
out
xchg
mov
jg
mov
lods
cmp
repnz
mov
add
loop
rol
cli
xor
xor
fldcw
cmpsl
xchg
sub
jae
add
movsl
xchg
mov
mov
pop
cmp
fisubs
mov
sti
nop
aad
or
or
shrl
aad
mov
stos
neg
not
dec
mov
inc
enter
or
dec
subb
sub
repnz
adc
cmp
push
shll
mov
mov
xor
lret
dec
jle
cmp
mov
pushf
rorl
imul
popf
jbe
sbb
out
push
dec
push
fistps
decl
jbe
pop
pop
fcomi
scas
sahf
stc
pop
imul
xor
aas
dec
cmp
fwait
ljmp
jnp
jge
push
fs
mov
dec
push
pop
bound
clc
or
inc
adc
outsl
lahf
dec
push
inc
scas
xor
cld
fldt
mov
push
inc
shll
mov
enter
cltd
push
jle
xchg
mov
lahf
dec
dec
into
pop
mov
mov
arpl
mov
xor
test
movsl
mov
xchg
jp
mov
mov
int3
inc
and
mov
stos
cmp
int3
ja
ror
adc
int3
mov
dec
out
jmp
xchg
je
pop
push
sub
push
xchg
cltd
test
mull
jne
xor
jns
insl
pop
into
push
push
mov
insl
out
outsb
push
xor
jo
push
negl
adc
or
ljmp
xorb
mov
ja
mov
xchg
les
sbb
arpl
cmp
int3
call
inc
jmp
or
inc
aaa
adc
sbb
sbb
aas
dec
inc
xor
jge
ret
in
leave
sbb
out
mov
mov
pop
jmp
push
mov
pushf
stos
mov
and
xor
xchg
subb
sub
jmp
pop
popl
or
lret
add
mov
jno
jl
mov
shrl
push
repnz
xor
enter
clc
fidivrl
divb
jecxz
jb
movsb
inc
mov
pusha
add
adc
lahf
mov
fcmovnb
jle
aaa
xchg
ret
fisubrs
aaa
or
lods
inc
mov
lds
mov
cmp
or
cmp
sbb
sbb
cli
stos
push
ljmp
int3
outsl
lea
std
xlat
pop
push
and
idivl
clc
jns
ret
inc
lret
mov
das
push
sub
shr
fdivrp
call
fstl
js
mov
ss
cltd
aas
mov
int
and
outsl
popf
orl
xor
aas
sub
adc
arpl
mov
int
xchg
sbbb
xorb
lret
cmp
and
sub
outsb
std
cmp
rorl
out
adc
enter
xchg
push
scas
mov
or
sub
lahf
data16
ret
or
push
aad
fwait
and
xchg
call
out
cli
je
enter
adc
test
jae
sub
roll
add
sub
in
insb
int
pop
aad
push
je
inc
ret
xchg
in
xchg
or
clc
jnp
test
dec
js
push
shlb
add
scas
gs
and
movsl
jmp
mov
stos
push
test
and
xchg
push
and
inc
mov
in
addr16
aam
in
xor
push
das
imul
xor
movsb
and
mov
xchg
jle
out
lds
lods
pop
mov
adc
stos
in
fsubl
push
fildll
incl
mov
outsb
shl
lahf
cmpsl
pop
or
repnz
jmp
fcmovnbe
or
call
push
inc
or
cmp
jae
push
xorb
mov
lods
das
sbb
rcrb
inc
and
pushf
dec
xor
ljmp
mov
push
mov
hlt
jl
cltd
rcll
enter
jae
mov
mov
mov
popa
and
loope
je
jno
cmc
and
push
adc
push
inc
mov
lcall
aam
fnstcw
dec
adc
mov
mov
pushf
xor
outsl
fstpl
fcmovne
loop,pn
xchg
fisttpll
fildll
jg
or
mov
lahf
xchg
fldt
mov
adc
mov
xorl
ror
mov
call
pushw
lock
call
fcmovne
lods
and
sahf
push
sarl
movsl
sub
or
jmp
mov
push
mov
jb
outsb
jo
lock
int3
add
add
inc
enter
cltd
sbb
mov
xchg
xchg
pushf
sti
popa
into
pop
popf
sbb
xor
std
jbe
xor
dec
sbb
mov
popf
push
or
cmp
jmp
stc
andl
mov
inc
jl
mov
mov
fsubr
int3
call
or
mov
scas
sub
cs
scas
pop
mov
stc
enter
sub
inc
mov
inc
pop
mov
push
orl
jne
sti
cmpsb
fimuls
inc
nop
dec
fildl
sbb
or
divb
mov
jmp
sbb
divps
inc
xchg
pop
stos
or
scas
cmp
add
add
lods
das
cmp
xor
xchg
int3
add
add
add
rol
data16
jnp
stos
mov
dec
jo
add
add
add
cmp
roll
ss
stos
add
rclb
daa
ret
mov
aas
adc
outsl
out
js
fidivl
out
or
call
rcll
xchg
roll
xor
or
sub
lds
dec
nop
rolb
and
fldcw
incl
sti
repnz
mulb
add
sub
and
fcmovb
call
movsb
push
and
out
inc
movsl
dec
jecxz
or
mov
add
push
mov
fistl
aad
cli
imul
mov
mov
scas
jl
sub
fimull
daa
lahf
mov
add
repz
icebp
add
fistpll
jne
push
jecxz
sahf
cmpsb
fistl
sbb
out
sbbw
sbb
addr16
in
enter
shrb
lret
push
and
cli
fwait
inc
push
mov
mov
mov
cmpsl
cmp
push
incl
incl
cltd
add
jo
cmp
pop
mov
jae
and
scas
std
sbb
fsubl
call
lea
call
pop
aaa
mov
cmc
pop
out
mov
mov
mov
outsb
rcll
mov
mov
xor
dec
xor
aam
push
and
jecxz
pop
sbb
dec
mov
sbb
mov
pop
inc
ds
xchg
mov
decl
call
mov
cmpsb
adc
loopne
xchg
jl
sub
call
add
movsb
pop
xchg
xchg
xor
or
pushf
cmp
cli
test
imul
int3
call
inc
ss
lods
mov
jge
shll
fmull
shll
push
mov
nop
mov
jl
mov
ja
xor
push
mov
sbb
gs
cmp
push
loopne
dec
popa
push
in
loope
rcrl
xlat
jns
push
cltd
ud2
xor
xor
call
dec
icebp
push
and
popf
adc
xor
add
lret
xchg
out
stos
pop
or
adc
test
jp
call
push
add
pop
lods
cmp
adc
cli
pusha
sti
mov
int
outsb
mov
xor
and
ja
or
jae
std
fists
dec
popa
jb
inc
addb
gs
push
outsl
lods
dec
aas
mov
xor
xchg
movsb
fwait
shll
cwtl
sbb
or
inc
shlb
cmpsb
jle
sbb
dec
imul
movsb
pop
xchg
or
sbb
divl
inc
ljmp
mov
mov
loope
cwtl
aaa
repnz
imul
cmp
xor
mov
lds
pop
sbb
lds
popf
fsubrs
mov
stos
int
xchg
outsb
outsb
addr16
pop
aaa
enter
fcomi
adc
push
call
popa
push
sbb
call
inc
adc
adc
rclb
add
add
cmp
sahf
mov
rorl
cvtps2pi
repnz
scas
push
lods
loope
add
add
add
mov
popa
mov
aad
and
addb
pop
push
xor
imul
or
lret
push
cmpsb
jno
sbb
push
inc
add
push
mov
xor
enter
jmp
mov
adc
bound
arpl
lret
and
addb
mov
mov
mov
int
inc
inc
xor
shlb
or
cmpsl
sarl
adc
test
test
repnz
add
add
cli
mov
inc
sbb
mov
cmp
lods
insb
sub
ljmp
sti
stc
iret
mov
cmc
push
cltd
mov
imul
push
adc
mov
xor
stos
data16
adc
add
sbb
sbb
mov
xor
ss
mov
mov
cmp
orb
incl
incl
jmp
or
les
xor
and
stos
int
iret
in
pop
fdivrs
insb
sbb
sbb
adc
call
popf
sbb
inc
pop
loope
mov
mov
mov
shlb
or
inc
xchg
sbb
pop
fsubr
loop
add
lods
adc
add
sahf
int3
inc
jno
pop
mov
push
xchg
mov
push
cmpsl
or
pop
jo
rcrl
filds
pop
push
sub
scas
ljmp
enter
xor
mov
xlat
aaa
ljmp
dec
cld
adc
mov
add
mov
and
adc
mov
stos
mov
pop
jl
fnstcw
cmc
adc
pop
mov
mov
popa
push
out
xor
fs
pop
mov
xchg
dec
aad
outsl
stc
repz
sub
dec
call
jae
xchg
cltd
jno
out
les
pop
leave
out
jbe
cmp
pusha
mov
lret
std
ja
add
sbb
ret
pop
push
repz
addl
clc
cmp
mov
lods
cmc
push
mov
jecxz
cmpsl
push
inc
popf
or
dec
sbb
decl
mov
or
pushl
dec
mov
jecxz
int3
mov
and
add
sbb
in
es
data16
inc
xchg
cmc
cmp
sub
inc
loopne
pushf
xlat
sbb
add
lds
in
rcll
and
out
dec
mov
lahf
inc
xchg
iret
leave
xor
push
call
add
pushf
repnz
hlt
js
test
sub
aad
mov
mov
sbb
roll
ficoms
sbb
jnp
pop
call
xorb
pop
pushf
test
or
jae
cs
cltd
or
and
out
jno
sbb
mov
add
lret
jbe
dec
fbld
ds
jecxz
fmuls
adc
repnz
idivb
push
test
sub
dec
dec
sbbl
add
add
cwtl
ficomps
loopne
mov
push
xchg
pop
sbb
xchg
lods
int
pop
inc
inc
insb
or
xchg
pusha
sub
or
stos
cli
call
jb
lods
and
lods
scas
outsl
dec
imul
xchg
int3
add
add
idivb
mov
sbb
aaa
xchg
mov
and
stc
inc
insb
add
fisubrl
sti
dec
push
push
mov
scas
jl
xlat
and
rcr
add
jp
ret
mov
dec
negb
add
jno
scas
add
cmp
into
insl
stc
fs
clc
xchg
lcall
or
push
ja
mov
xchg
sub
fnstenv
mov
mov
add
adc
mov
push
fs
xchg
dec
cmp
std
push
mov
mov
es
xor
mov
cmpsl
sbb
push
enter
dec
and
lcall
ror
outsl
push
add
and
shlb
daa
test
popa
pop
repz
or
mov
call
int3
mov
or
icebp
aaa
pop
mov
add
mov
adc
mov
sub
insl
pop
negl
cld
or
icebp
xlat
pop
xor
jp
stos
subb
add
ret
mov
outsb
clc
push
fldenv
cmp
xor
outsb
lret
adc
fisubrl
xchg
test
add
add
add
into
lahf
mov
mull
pusha
mov
mov
icebp
mov
lea
sbb
lahf
jle
xchg
mov
hlt
adc
push
mov
xchg
das
test
xchg
in
lds
cmpsb
sahf
das
or
or
and
negl
ja
fldenv
daa
cmp
push
loope
xchg
adcb
lods
fisttpl
mov
pop
push
pop
lds
insl
scas
jnp
shlb
mov
outsl
xor
pop
es
add
mov
gs
sbb
jno
negb
dec
xchg
mov
call
call
mov
shrb
xlat
and
lret
push
xchg
or
pop
sahf
cld
out
stos
mov
mov
sbb
shrb
cmpsl
mov
cltd
popa
out
xchg
fnsave
jns
fistps
out
sbbb
cltd
xchg
add
push
jge
leave
movb
outsl
rcr
fcmovbe
ss
mov
mov
mov
es
std
inc
dec
cltd
or
lret
sbb
test
cld
ret
dec
dec
jl
cltd
cmp
sub
stos
cld
icebp
aas
add
sbb
int
mov
jmp
pop
sub
xchg
fnstcw
or
inc
xlat
xor
jg
rorb
fs
pop
and
imul
cli
loop
int3
call
loopne
insb
fwait
in
lret
jmp
and
push
or
outsb
loop
out
push
dec
xchg
and
sub
dec
int3
sbb
cmp
std
test
out
call
andl
mov
loop
enter
addr16
sub
repnz
sbb
cmp
mov
mov
lahf
xchg
data16
push
inc
dec
adc
lahf
incl
incl
decl
cli
push
mov
arpl
aaa
add
cmpsb
rorb
insb
push
mov
push
nop
dec
dec
sbb
iret
outsl
xorl
aas
shll
call
mov
shr
adc
mov
int3
dec
sub
xor
fisttpll
negl
lret
fsubl
leave
mov
dec
mov
ja
outsb
xchg
cmp
call
int3
add
lods
lods
jne
in
sbb
dec
push
iret
and
js
mov
push
jp
add
dec
ja
cmpsl
xor
mov
dec
sbb
mov
mov
imul
imul
jnp
cs
push
mov
pop
adc
xchg
ss
cmp
in
jns
cmp
icebp
in
cltd
sub
inc
js
inc
in
cld
inc
mov
outsb
lods
adc
idivl
mov
mov
inc
sbb
sti
lret
loope
sti
repz
data16
sbb
jle
xor
rorl
sbb
sbb
out
addr16
add
andb
jne
xor
dec
insl
xor
xor
packuswb
or
push
mov
pop
push
loop
jbe
adc
adc
fnstcw
out
mov
sub
lds
subb
divl
call
int3
test
mov
ficomps
mov
mov
out
cmpsb
scas
jle
xchg
fnsave
xor
scas
lret
and
aad
outsl
in
scas
and
pop
xor
adcl
mov
jns
push
mov
lods
xor
jge
outsl
ror
xchg
xlat
jno
cmp
adc
cld
sub
inc
insb
out
stos
xchg
xchg
lcall
pop
sub
lahf
stos
mov
je
pop
iret
lods
std
mulb
call
jge
pop
mov
adc
stc
or
repz
xlat
jno
pushf
jecxz
stc
xchg
sub
mov
es
jmp
movsl
aaa
xchg
xchg
lret
jbe
lea
or
mov
popf
mov
or
pop
mov
lret
ss
jmp
cmp
and
testl
jbe
test
decl
mov
aaa
pushf
je
jnp
mov
icebp
jecxz
xor
cmpsb
mov
std
sub
int
or
sbb
mov
fwait
inc
testl
in
jb
inc
scas
mov
dec
iret
leave
xor
jl
push
and
shr
sub
rcrb
add
dec
pop
add
pop
jno,pn
dec
fcoml
inc
sub
iret
addr16
dec
xchg
or
push
das
xchg
inc
lahf
dec
xchg
or
cmp
jo
inc
shrl
pop
fldenv
call
mov
fldcw
mov
mov
sub
xchg
cmpb
push
test
notb
mov
stos
jo
push
ret
jb
push
inc
dec
mov
jmp
add
lcall
ja
out
sbb
arpl
or
cmpsl
dec
dec
jmp
cltd
adc
push
sbb
jbe
xor
mov
inc
cmp
pop
fs
lahf
sub
mov
ja
and
sahf
and
neg
and
push
loop
mov
adc
adc
or
jbe
enter
add
in
leave
gs
adc
jp
std
je
es
mov
inc
std
test
jge
or
int3
call
mov
rorb
pop
or
mov
mov
push
cmc
push
or
mov
push
add
adc
pop
aas
repnz
push
negb
push
fwait
add
lods
lret
jmp
movsl
or
pop
js
dec
dec
cli
cltd
xor
arpl
add
inc
add
leave
inc
mov
dec
cmp
call
inc
mov
repz
cmc
shlb
cmp
fs
pop
sub
lods
cmc
cmp
int3
add
aam
xor
mov
inc
icebp
pop
push
loop
and
xchg
subb
xchg
loope
imul
int3
call
enter
cmpsl
je
lds
or
in
jge
mov
mov
movsb
loop
jnp
push
popa
mov
insb
sbb
mov
jl
out
testl
jno
fnstsw
std
ret
sub
movl
push
and
lahf
cmc
adc
add
enter
jmp
lds
sahf
int
bound
mov
dec
or
mov
ret
cwtl
jbe
mov
scas
push
lock
sub
adc
pop
pop
xor
jg
fisubrs
lods
sti
les
int3
call
inc
cwtl
in
sub
in
jl
inc
aas
iret
mov
imul
test
insb
cmpsb
aad
cs
mov
frstor
dec
jecxz
push
pop
mov
stos
in
jnp
push
dec
test
sti
xchg
push
loope
mov
mov
lcall
sbb
loop
stc
push
fisubrs
push
or
bound
cmc
mov
jl
xor
insl
push
or
adc
mov
ret
pop
sub
xchg
sbb
ss
or
jmp
pop
lret
popa
jne
int
arpl
push
pop
jae
outsl
dec
jle
jbe
nop
inc
cwtl
aad
outsb
or
inc
pop
fs
sub
and
xchg
and
bnd
lds
or
shll
mov
fcoms
loop
xor
scas
bound
shlb
add
dec
push
dec
sub
inc
inc
je
mov
and
mov
clc
dec
sub
ret
int3
in
mov
pop
inc
jnp
ja
jo
push
xchg
cmp
sub
add
jo
inc
repnz
ror
fiadds
loope
cli
in
push
jne
adc
push
stos
sbb
cmp
or
sub
scas
jmp
dec
ljmpw
rcrl
fildl
push
ss
mov
int3
call
pop
insl
hlt
into
inc
xchg
and
je
push
loope
mov
push
imul
out
cmp
push
push
cmp
mov
fmulp
adc
adc
mov
xor
add
mov
and
aas
repz
fsubs
inc
xchg
push
pusha
test
scas
sub
jmp
xchg
shll
pop
xchg
xor
dec
xchg
xchg
and
xchg
and
pop
push
jecxz
add
add
andl
cmovo
xchg
stos
ljmp
push
and
add
push
pop
and
adc
cmc
fisubl
into
jbe
pushl
int
jo
xor
call
mov
outsb
push
fsubrs
lds
mov
mov
xor
cmpsl
cwtl
push
addr16
das
outsl
data16
mov
scas
push
add
and
add
jo
push
icebp
xchg
lds
incl
incl
incl
dec
mov
andl
aas
jno
inc
dec
ss
mov
sahf
mov
jle
sub
imul
inc
add
mov
or
filds
addb
pop
popf
lods
in
subb
cmc
mov
dec
in
icebp
mov
mov
mov
mov
xchg
and
cmp
inc
mov
mov
pop
xorl
mov
inc
push
mov
pop
xchg
cmc
cmc
ret
adc
mov
adc
stc
mov
in
ret
sub
jno
aam
or
jmp
mov
ret
cmpsl
into
add
xchg
or
xlat
mov
loopne
fidivrl
add
cli
xorb
add
loop
xchg
pop
sahf
jmp
jle
pop
stos
and
setg
out
popf
nop
pop
jmp
fimuls
movsb
insl
sti
stos
or
int
sub
jmp
in
in
mov
add
sbb
ret
mull
jmp
outsl
inc
cli
push
jae
call
xchg
fwait
xchg
aam
test
repnz
aam
mov
adc
stc
sub
addb
cmpsb
rorl
add
ds
push
xor
lock
dec
push
out
xchg
sbb
jb
mov
cld
fistpll
xchg
call
sbb
jb
add
clc
loopne
sbb
jg
aad
rcll
sub
add
dec
js
pop
outsl
or
mov
fs
into
push
mov
jmp
xchg
dec
repz
jp
dec
jg
cmp
xor
pop
in
negl
icebp
clc
jl
pop
out
aam
aad
cmpsl
or
int3
add
add
js
data16
lods
pusha
cli
addr16
data16
push
test
mov
cwtl
es
incl
incl
mov
mov
xchg
popa
mov
cmp
mov
jge
ret
and
or
enter
shlb
jl
cmp
lret
rcll
adc
push
jne
pop
push
mov
dec
roll
stos
hlt
sub
xchg
jns
lock
add
add
and
pop
ja
movl
pop
pop
mov
add
outsb
sbb
out
or
nop
dec
icebp
test
das
shl
or
das
add
mov
popa
push
add
data16
ljmp
mov
loope
lcall
rol
jbe
pop
or
jecxz
mov
std
push
mov
push
in
clc
push
jl
lea
xor
lcall
xor
fucomp
sub
pop
cmc
mov
mov
orl
gs
popf
adc
mov
and
fwait
in
pop
lahf
mov
aam
xor
das
icebp
lea
dec
pop
popa
int3
stos
and
add
xchg
mov
popa
mov
push
in
push
call
push
enter
sub
jno
xchg
repnz
push
adc
jle
add
call
xchg
lods
into
aam
fwait
xchg
in
mov
fdivs
push
mov
repnz
popa
or
lcall
xchg
fnsave
pushf
inc
xchg
adc
jbe
out
lods
les
xorl
push
xor
add
push
push
sbb
insl
lahf
fisttpl
xchg
cmpsl
jecxz
jg
in
jns
inc
notl
mov
push
and
rorl
jne
push
jno
hlt
dec
lret
rorb
mov
inc
sub
pop
mov
add
xor
pushf
iret
lds
push
movsb
or
sbb
sub
outsb
call
icebp
pop
lahf
std
xor
sub
loopne
lods
push
std
sbb
in
pop
add
jmp
jb
or
sbb
addr16
and
xor
lea
adc
add
jp
push
xorl
imul
and
test
enter
xorl
test
cmc
movsb
sbb
stos
or
cmp
faddl
xor
sbb
fs
enter
das
cwtl
mov
dec
add
sarb
inc
stos
pushf
es
lods
nop
and
add
filds
jl
aas
dec
stc
sbb
sub
call
xchg
jp
push
bound
jb
sbbb
aas
popa
jno
out
enter
jns
add
lcall
js
in
pop
icebp
dec
lret
mov
xchg
loop
dec
in
push
pop
mov
mov
mov
aas
sub
cmc
movsl
stos
repz
or
daa
pop
jp
jmp
shlb
or
add
add
inc
push
xchg
dec
add
xlat
xor
jno
mov
push
mov
cmp
mov
aas
adc
sbb
dec
faddp
add
mov
lds
test
fbld
aas
sti
and
cmp
lds
dec
xchg
xor
cs
mov
adc
mov
push
std
push
or
outsl
sub
shr
clc
call
lea
xchg
mov
push
rep
cli
in
cmp
jmp
jbe
lret
scas
adc
and
aam
push
cmp
adc
dec
xor
and
inc
push
inc
fidivs
mov
mov
subl
pop
xor
out
bound
out
in
pop
and
ja
sbb
int3
call
mov
xor
xor
jp
adc
cld
lods
pop
add
sahf
sbb
addb
xchg
bound
loop
mov
adc
lods
xchg
dec
jnp
pop
cmp
rcrb
lret
xlat
xor
xchg
sbb
inc
jle
xchg
aas
pop
pop
jp
sbb
pop
jne
dec
cmp
mov
xor
add
dec
pop
inc
enter
mov
jno
mov
push
cmp
mov
mov
mov
into
movsl
fildll
dec
call
jno
in
sbb
mov
sbb
idivb
pop
bound
iret
dec
mov
loop
add
add
sub
andb
stos
dec
mov
inc
sub
add
pushf
addb
dec
popf
cwtl
xchg
adc
lret
pop
daa
and
in
aaa
inc
sbb
ds
add
or
jg
sbb
je
pop
jbe
push
js
shl
fwait
sbb
add
add
xchg
dec
adc
pop
push
pop
pop
pop
out
add
add
cld
xchg
dec
dec
fdivp
push
pop
out
dec
lret
mov
add
testb
fsub
push
cmp
scas
out
std
jbe
pop
cltd
lds
cwtl
je
push
sbb
cmpsb
lret
push
aam
jb
and
hlt
aam
les
pop
or
test
xchg
cs
pop
inc
addr16
call
sbb
mov
addl
ds
mov
mov
movsl
lret
adc
int3
call
loop
cwtl
sbb
jns
mov
std
outsb
sti
test
xor
jnp
mov
lcall
mov
call
cmp
aad
xchg
in
mov
movsl
xchg
dec
mov
add
gs
mov
jb
addr16
sbb
int
mov
pop
push
pushf
mov
or
jge
mov
sub
xchg
scas
cli
dec
lock
sub
rcll
push
lea
xor
jg
in
mov
dec
mov
or
inc
les
xlat
xor
lea
mov
lret
test
shrl
mov
call
add
movsl
loope
add
mov
mov
mov
dec
dec
cmpl
xor
adc
out
jbe
pushl
leave
xor
enter
sbb
iret
dec
imul
adc
xor
icebp
rorl
mov
imul
out
sbb
int3
call
out
nop
cmp
subb
ret
pushl
and
movsb
enter
jb
lock
pusha
mul
inc
adc
mov
lcall
mov
xorb
out
or
incl
outsl
enter
xchg
and
cwtl
test
mov
mov
sbb
pusha
mov
or
int3
inc
jge
jmp
lret
push
inc
sbb
add
push
cmpsl
nop
cs
filds
xlat
cmpsb
fxch
add
jno
inc
mov
xchg
fs
jecxz
scas
and
xlat
adc
leave
cld
dec
and
jmp
cli
lds
mov
sub
pop
xchg
sbb
incl
incl
fsubl
push
pop
sbb
movsb
imul
call
lea
push
lret
mov
inc
dec
pushf
testl
enter
push
pop
test
xor
push
andl
das
xchg
lahf
inc
and
xor
imul
mov
lods
fbstp
and
les
push
in
jl
sbb
shll
push
xor
gs
adc
in
loope
mov
int3
add
inc
jecxz
dec
movsl
sar
xlat
sub
sbb
dec
dec
xor
pop
fs
xchg
add
aaa
lahf
mov
xor
xstore-rng
cmpsl
inc
loopne
pop
push
sbb
bnd
mov
cmc
hlt
aam
lea
push
xor
xchg
shlb
dec
xor
ja
cltd
lret
fs
pop
add
jle
xchg
aas
popf
adc
rclb
in
push
mov
lods
repnz
popf
scas
sub
adc
pop
mov
in
roll
sahf
pop
mov
clc
in
ficomps
jno
out
and
xor
or
popa
testl
outsl
ds
div
and
fiadds
sub
and
pusha
std
mov
mov
mov
aam
fistps
out
lcall
xchg
mov
add
and
push
subl
out
outsl
std
push
out
xchg
out
push
ds
scas
sbb
cmp
shlb
pop
dec
jle
and
ja
xchg
mov
ss
inc
imul
iret
imul
je
pop
push
cmp
int
inc
pop
call
add
inc
inc
xchg
push
stc
adc
out
mov
adc
out
push
mov
cli
test
mov
addr16
dec
lret
jp
push
enter
rorb
sbb
xchg
pop
push
xchg
insb
out
cmp
xor
sub
pop
mov
pop
out
jle
jecxz
das
iret
lcall
mov
call
pusha
cmpsb
add
scas
cmp
push
cmp
ret
push
push
popf
rorl
inc
mov
push
xchg
iret
xchg
inc
lcall
aaa
sbb
popa
daa
mov
andb
xchg
inc
and
pop
fwait
ljmp
jno
inc
testl
test
xor
or
fcomi
pushl
xor
mov
mov
mov
xchg
dec
ds
sub
adc
stos
test
add
inc
stos
sub
js
mov
sub
movl
xor
das
insb
push
dec
push
cmp
call
mov
push
cmp
push
icebp
jecxz
insb
cmp
or
ds
mov
or
lock
sbb
call
add
xor
push
in
mov
push
or
pushf
bnd
repnz
pushw
dec
loop
pop
and
push
hlt
fucomp
adc
mov
fsubs
leave
repnz
add
inc
sahf
loope
sbb
mov
and
mov
cltd
mov
pop
mov
mov
xchg
mov
push
lea
pop
je
cmp
or
mov
jge
into
lahf
adc
jge
iret
pop
sbb
out
popf
stc
dec
push
scas
out
jge
mov
lcall
add
jle
dec
scas
push
add
add
inc
mov
into
pop
arpl
mov
bnd
stos
pop
movsb
cmp
and
pop
test
sahf
roll
movsl
fs
call
and
enter
cmp
stc
ss
push
pop
sbb
push
pop
jb
enter
loop
andb
add
lret
in
fs
int3
add
add
sbb
scas
sub
int3
add
add
cmp
and
cltd
mov
pop
mov
and
xchg
dec
mov
ret
cmc
push
int3
jl
mov
aad
aad
xchg
outsl
pop
dec
sbb
into
out
adc
fstps
mov
call
mov
stc
mov
mov
sahf
fimull
es
sti
sahf
sbb
dec
cmp
xchg
shlb
inc
int3
aaa
mov
out
int3
add
jmp
jb
or
cmpsl
jmp
jnp
bound
mov
pop
sbb
push
stc
les
xchg
insl
mov
fcompl
or
ds
pushf
sub
int3
push
fsubrs
neg
call
cli
rcll
dec
aas
sbb
push
icebp
and
push
imul
jae
test
inc
aad
adc
leave
outsb
and
xor
mov
mov
jne
fadds
pop
sub
mov
mov
cmpsb
jg
ror
pop
inc
dec
inc
ret
lret
rclb
pop
fdivrs
sbb
pop
mov
stos
jle
and
dec
leave
push
negb
jne
jae
mov
adc
enter
adc
xor
mov
into
dec
dec
jge
cltd
aad
out
dec
mov
rcrb
mov
jbe
out
testb
shl
push
out
add
push
rolb
cmpsl
jmp
fidivrs
stos
jne
mov
or
loop
sbb
lret
arpl
out
lret
mov
cmpsl
jae
xor
in
xchg
lods
and
fbld
jne
mov
xchg
push
mov
repnz
stos
out
ljmp
add
add
add
out
jp
cld
jle
and
jbe
xchg
pop
filds
std
loop
mov
jno
or
and
arpl
inc
add
add
add
movsl
inc
outsb
sti
jp
std
rorl
and
test
test
ljmp
jns
dec
mov
add
ficoms
stos
jne
insl
mov
or
fimull
pop
xor
pop
or
aam
jp
out
and
aam
lds
jb
mov
mov
pop
adc
or
push
ds
sub
rolb
mov
sub
jae
push
sar
and
rclb
mov
mov
or
mov
mov
mov
add
push
dec
sub
std
int
sbb
loop
int3
jl
xchg
out
enter
insb
lret
rcrl
sbb
fdivrs
lods
jb
dec
inc
cmpsb
fisubrs
fsubrl
jl
mov
xor
fmuls
cmp
or
pop
call
cmpl
jnp
nop
mov
add
add
arpl
pop
mov
pop
mov
mov
mov
repnz
stos
or
mov
data16
or
jp
adc
jnp
dec
outsb
pop
lock
push
aad
int
ret
adc
sub
mov
movsl
pop
xor
xor
ja
xchg
fs
das
sbb
sub
mov
push
pop
sar
lret
jp
das
testb
xchg
and
je
cmp
popa
cmp
rorl
dec
bound
popf
mov
jg
test
add
xor
int3
call
mov
mov
addr16
and
mov
cmp
popa
loopne
pop
stos
test
testl
xchg
mov
and
and
popf
cmpsl
fucomp
xchg
cmp
push
inc
insb
jmp
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int
add
add
add
int
add
add
add
add
add
int
add
add
add
int3
inc
add
add
add
add
or
add
add
add
add
add
add
inc
add
add
add
lret
inc
add
add
add
add
test
inc
add
add
pop
lret
inc
add
lret
js
add
test
inc
add
add
cwtl
lret
jp
add
mov
inc
add
add
add
add
je
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
and
add
dec
out
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
cli
inc
add
add
add
clc
inc
add
add
add
add
add
add
inc
add
add
add
add
imul
adc
inc
add
roll
adc
inc
add
inc
add
add
clc
inc
add
xchg
inc
add
inc
add
clc
inc
add
inc
add
inc
add
clc
inc
add
inc
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
cli
inc
add
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
inc
add
inc
add
inc
add
aam
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
aam
add
aam
add
roll
call
roll
loopne
inc
add
roll
rcl
add
add
add
add
add
add
add
inc
add
fadds
add
add
fwait
dec
add
add
add
add
add
add
add
add
add
jg
jg
jg
mov
add
add
add
add
add
add
add
add
add
add
add
add
icebp
incl
add
add
push
add
push
add
cld
inc
add
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
