mov
sub
and
mov
add
mov
aas
sub
mov
push
mov
in
inc
sbb
or
mov
mov
and
pushf
in
mov
or
add
add
sub
push
sub
adc
xor
ret
cmp
push
ds
add
pushf
push
inc
sbbl
add
lahf
pop
mov
ret
mov
push
gs
push
sbb
push
insl
cmp
adc
ss
mov
and
dec
sub
jb
fisttpl
mov
inc
xchg
scas
rcll
inc
dec
jnp
push
mov
je
das
xchg
dec
fstl
fs
pop
sahf
push
js
add
ret
mov
mov
imull
fsubs
out
mul
loop
mov
add
cmpl
mov
cmp
xchg
adc
clc
pusha
pushf
in
push
aas
xor
mov
test
aas
jnp
lods
cmp
ja
mov
pop
jb
jp
lds
jb
jbe
cwtl
adc
mov
add
jne
arpl
and
imul
and
mov
cmpsl
loopne
fdiv
cmp
fstps
ds
mov
mov
mov
push
decl
jns
rorl
bound
fdivrs
clc
imul
jmp
mov
mov
jmp
xor
push
xlat
jo
lods
out
add
mov
cmpsb
mov
dec
mov
leave
xchg
mov
movsb
push
scas
jmp
movsb
sub
loope
daa
cmp
xor
mov
sub
xchg
mov
test
dec
pop
movsb
mov
js
xchg
push
out
ljmp
push
out
ljmp
inc
mov
sarb
out
sub
in
lahf
out
int3
mov
insb
shl
insl
popa
mov
ret
sarl
arpl
std
scas
stc
out
lods
ss
imul
lds
imul
lock
and
add
pop
mull
je
jge
cmp
orb
adc
jge
in
jmp
cmpsl
add
inc
inc
fidivl
mov
or
idivl
stc
test
lcall
and
outsl
mov
or
call
xchg
out
loop
jmp
mov
jl
lds
jle
mov
sbb
cmpsb
cmp
test
mov
xchg
push
jne
rcr
push
jne
mov
cmp
push
cmpsl
call
scas
cmc
cmpsb
into
bound
cmp
lock
xchg
push
dec
xchg
or
or
and
or
mov
mov
or
mov
sbb
dec
cmp
and
xchg
lahf
ja
sbb
push
scas
and
pop
cmp
xor
pushf
in
cmpsl
ljmp
test
sub
push
jne
add
mov
add
popa
adc
aas
jle
cmpsb
jno
fsubr
int
cmp
mov
repnz
cmp
or
mov
jecxz
insl
mov
sbb
stc
cmp
test
cs
mov
in
test
adc
sbb
push
je
mov
pop
lret
lcall
shlb
xchg
movsb
ret
push
loopne
jecxz
fldt
loop
push
mov
pop
push
push
push
lock
push
mov
lds
imul
pop
mov
stos
ja
bound
xor
jmp
rclb
inc
aaa
mov
insl
mov
dec
daa
dec
or
pop
jne
lods
jo
inc
mov
xchg
cmp
rorl
sbb
adc
dec
push
stos
aaa
adc
xor
call
vrcp28ss
xlat
aad
fldt
stos
mov
stos
int3
aas
test
in
sub
mov
xchg
pop
sbb
dec
fsubrs
mov
cmp
push
sarl
in
inc
cmp
and
dec
inc
inc
insl
lods
mov
add
lods
stos
jg
mov
cmp
gs
stos
imul
sbb
dec
lods
je
mov
insl
lods
and
scas
outsl
lods
aas
mov
pop
stc
push
dec
xor
inc
jno
lods
push
ja
xchg
mov
lds
movsl
xchg
inc
add
ret
ret
mov
add
lods
loope
movsb
pusha
push
pop
mov
xor
and
cmp
dec
scas
cmp
xor
adc
ja
cli
popf
add
mov
mov
sub
push
addl
out
jmp
cmpsb
xchg
arpl
push
std
fwait
out
loope
pop
sbb
scas
sbb
xor
loope
jns
cmp
cmp
shrl
scas
xchg
call
out
scas
mov
popf
scas
scas
sbb
rcr
sub
scas
in
popa
cmp
scas
clc
xor
insl
mov
and
shlb
push
adc
fbstp
scas
mov
inc
add
mov
or
add
shrb
fmulp
cmp
mov
and
pop
or
mov
xchg
xchg
adc
mov
or
cmp
cmp
fistpl
cmp
into
orl
call
push
lods
push
cmp
popf
lods
jno
pop
push
jne
in
pop
jmp
mov
jmp
ljmp
dec
shll
mov
inc
push
das
es
cwtl
lahf
mov
lret
mov
mov
xchg
push
dec
mov
outsl
cmp
nop
mov
pop
mov
pop
mov
pop
mov
add
cltd
in
mov
cli
xchg
out
mov
mov
fisubl
cmp
pop
out
dec
sub
jecxz
out
sbb
xlat
jne
test
jae
mov
lods
fcmovb
mov
add
jno
fidivs
cltd
jno
cld
jmp
mulb
pop
mov
xor
jo
xchg
ret
mov
div
push
sbb
sbb
popa
mov
xchg
insb
cmp
mov
sahf
sub
stos
mov
mov
push
push
xchg
adc
fistpl
nop
sbb
adc
das
in
dec
sbb
sbb
jno
push
lds
mov
mov
mov
cmpsl
mov
pop
mov
inc
mov
jno
jecxz
jo
xchg
jecxz
pushf
xchg
push
jae
mov
cmpsl
scas
loopne
cmp
repz
sti
cli
repnz
pop
xor
mov
sub
pop
mov
xchg
mov
pop
mov
in
push
enter
mov
cmp
add
aaa
pop
mov
sub
pop
cmp
stc
in
cmp
fsub
mov
pcmpeqb
xor
cmp
leave
sbb
jmp
add
es
mov
shll
mov
shll
mov
mov
mov
movsl
ret
adc
cltd
pushf
jno
pushf
stos
inc
mov
push
sub
jecxz
add
call
cmp
lods
lret
incb
mov
repz
jecxz
lret
mov
xchg
les
jne
mov
pcmpeqw
mov
inc
adc
mov
mov
cmpsl
pop
test
pop
repnz
mov
cli
imul
and
xchg
adc
mov
jecxz
shlb
mov
push
das
push
cmp
scas
jmp
outsl
mov
dec
mov
cld
xchg
fistl
jl
push
sbb
cmpsb
dec
pushl
fbld
scas
lahf
mov
outsl
or
stos
cmp
negl
cs
cmp
stc
fidivl
rclb
cmp
xor
mov
lods
lods
mov
xchg
mov
xchg
xor
push
mov
cmp
mov
loope
push
mov
xor
sarl
xor
dec
test
push
sbb
mov
xlat
dec
inc
mov
cmp
mov
adc
insl
cmp
leave
mov
pop
in
cmp
jo
shlb
jecxz
add
mov
or
clc
mov
sti
nop
outsl
pop
enter
dec
ret
or
mov
outsl
mov
call
jno
mov
mov
inc
int
mov
mov
jg
mov
mov
xchg
lods
hlt
loope
pop
test
push
stos
push
mov
stc
test
mov
movsl
mov
sbb
xor
mov
xchg
mov
jbe
jecxz
xor
add
mov
inc
pop
and
mov
sbb
mov
cmp
mov
mov
sub
stos
mov
lods
jge
enter
nop
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
inc
dec
sub
mov
jmp
addl
add
or
pushf
sub
filds
pop
outsb
or
arpl
dec
inc
dec
jbe
imul
cli
sbb
das
sti
sahf
push
cmc
add
inc
add
lret
mov
xchg
add
cmp
push
mov
sub
add
into
dec
imul
movsl
xor
stc
sub
lods
enter
imul
cmp
jmp
xlat
inc
inc
gs
or
push
and
and
outsb
testl
mov
dec
add
sub
rcrl
out
movsl
pop
jecxz
add
stos
loopne
inc
ds
loop
xor
test
out
pop
jno
and
out
fldl2t
adcl
gs
cmp
repz
and
ds
xrelease
jbe
jns
out
push
mov
out
mov
and
iret
imul
mov
pop
push
icebp
ja
iret
repz
in
lret
cmp
sti
cmp
repz
dec
xchg
mov
ja
inc
loop
rorl
rolb
push
popa
iret
repz
ja
pop
and
repz
jmp
sahf
cmpsl
stc
inc
fstl
jg
out
xor
mov
mov
xor
out
push
xchg
movsl
mov
fcompl
cmp
repz
sub
repz
aas
leave
out
mov
jne
filds
jae
sub
repz
push
out
xchg
xchg
mul
out
sahf
out
lds
sbb
sahf
jae
inc
stos
shlb
cmp
jmp
xlat
repz
repz
and
cmp
jne
dec
mov
push
cmpsl
repz
jnp
push
cmp
sbb
out
cmp
jae
dec
inc
mov
sahf
out
sahf
lahf
mov
out
sarl
jns
daa
or
repz
out
dec
mov
repz
stc
out
xor
fbld
push
fisttps
add
out
out
xor
popw
adc
ds
and
daa
add
or
push
push
outsl
mov
repz
repz
ffreep
iret
repz
sub
movq
sahf
cmpsl
stc
cmp
mov
data16
out
cmc
ffreep
xor
mov
fmulp
adc
pop
inc
jns
jns
fadds
xchg
repz
out
sahf
cmp
popf
idivl
dec
fsubs
push
xchg
mov
jmp
lret
int
and
push
jmp
mov
fildl
sahf
sbb
dec
iret
repz
push
xor
leave
cmp
repz
xor
jns
divl
addr16
inc
mov
jns
idivl
popf
repz
repz
out
stc
mov
mov
pushw
sbb
rep
pop
dec
inc
mov
out
sahf
cmpsl
mov
mov
aad
cmp
jns
out
rol
sub
jnp
jne
mov
inc
push
push
push
addr16
repz
jne
pop
sbb
add
out
scas
lahf
xor
iret
repz
sub
cmp
jl
jg
pop
mov
push
xor
cmp
repz
xor
gs
push
mov
or
movd
inc
cmp
pop
push
addr16
push
push
dec
push
xor
out
inc
ss
push
push
inc
or
sub
mov
cmp
push
inc
push
push
push
lods
loop
cltd
icebp
cmp
jnp
push
repz
aas
in
mov
cli
jbe
jae
xchg
push
testl
rcrb
pop
ja
inc
mov
adcb
pop
cmpsl
fnstsw
call
lret
call
dec
gs
jge
bound
add
mov
repz
lret
and
pop
jbe
mov
pop
inc
inc
add
adc
sub
int3
mov
add
sbb
out
addl
add
add
pop
in
ss
mov
adc
mov
cmpsl
stc
inc
into
push
add
mov
jns
out
push
mov
xchg
in
out
sahf
out
xchg
adcb
xchg
nop
xchg
xchg
out
sahf
out
movsl
popf
scas
pushf
iret
repz
jg
lahf
pop
sahf
adc
cmp
cwtl
pop
fwait
and
cmp
repz
ds
mov
pusha
or
ljmp
add
sbb
push
rolb
push
iret
jnp
jbe
or
packuswb
push
sub
push
sbb
dec
rcll
out
dec
xlat
mov
push
ljmp
push
mov
repz
jecxz
sahf
ds
sub
repz
rorl
dec
mov
sub
cmp
push
or
jns
jae
mov
jne
fs
shl
mov
sahf
movsb
inc
imul
out
push
out
dec
push
pop
mov
ja
push
and
pop
iret
mov
pop
sahf
push
xchg
dec
gs
dec
and
shrl
dec
pop
outsl
add
add
mov
jns
fwait
pop
pop
add
cltd
push
cmpsl
in
sbb
test
and
push
sbb
out
out
or
ds
aad
jns
mov
add
sub
lock
inc
bound
out
loopne
sahf
fimuls
xchg
jne
scas
pop
push
sbb
push
push
pop
jle
sbb
cmc
jnp
sbb
outsb
movsl
push
adc
mov
push
jb
stc
push
test
cmc
push
push
jae
lcall
add
inc
and
jle
push
fiadds
cltd
adc
xchg
push
mov
js
mov
push
sahf
rorl
dec
mov
pop
div
fisubrs
sbb
push
xor
add
jnp
sarl
push
into
test
jnp
loopne
cwtl
cs
adc
push
push
aad
mov
push
scas
in
into
out
mov
sbb
xor
sub
adc
jo
jno
ss
sub
repz
fisubl
dec
rep
cltd
adc
jge
adc
fimuls
scas
scas
fisttpll
js
push
sahf
lds
pop
fimuls
in
pop
iret
loope
sahf
push
pop
pop
imul
cmp
push
out
ror
dec
fiadds
loop
sub
mov
push
rcrb
push
fwait
orl
xchg
clc
push
ljmp
and
cmp
notl
push
dec
add
jle
push
sahf
out
shrl
push
insb
push
mov
dec
lods
scas
inc
mov
ret
adc
fs
mov
stos
add
push
pusha
into
in
testl
mov
ror
mov
cmp
push
loopne
cmp
jle
push
lods
out
or
mov
div
cmp
aas
sahf
jno
mov
repz
sbb
outsb
push
push
hlt
jns
xor
dec
test
push
pushf
mov
sahf
neg
rcr
mov
push
xchg
jns
jmp
ja
out
loopne
dec
leave
push
in
cmp
add
sahf
negl
ljmp
sahf
push
icebp
outsl
scas
adc
jns
sarl
insl
jle
pop
js
out
loope
pop
push
push
inc
pop
psllq
jl
adc
cs
repz
mov
jnp
lock
xchg
mov
cmp
lea
and
push
jecxz
out
loopne
ds
pop
cmp
repnz
outsb
pop
sub
mov
js
andb
pop
fisttps
iret
loope
cs
push
xchg
dec
push
add
fidivrs
mov
push
xor
push
add
cmp
jnp
xchg
jl
push
rolb
cmp
shlb
push
xor
faddp
cmp
jmp
cmp
push
sbb
and
xchg
adc
mov
out
loope
cli
ret
jno
insb
outsl
lock
outsb
push
ljmp
or
mov
rcr
fdecstp
fidivrs
js
push
rorl
push
dec
int
jae
ja
es
cs
mov
lea
imul
sahf
mov
push
push
cmp
dec
jb
mov
mov
scas
add
ljmp
push
std
push
movsl
out
cmp
loop,pt
push
inc
int
or
ds
sub
adc
ds
xchg
cmp
mov
jle
cmp
push
xor
cwtl
add
neg
jnp
test
push
cmc
pop
orl
pop
mov
rorl
int3
mov
push
iret
sar
pop
repnz
push
in
jb
ljmp
pop
adc
arpl
pop
stc
push
ficomps
icebp
push
mov
das
pop
push
test
out
loopne
rcl
cmp
adc
cmp
xor
insl
push
mov
cs
out
xorb
jb
push
jne
push
cmp
into
aad
lret
push
cmp
out
cmp
shlb
sahf
adc
push
insl
fsubl
pop
push
sub
out
out
mov
lea
jae
push
mov
mov
out
in
push
and
pop
scas
pxor
xor
ja
and
cmp
mov
jg
fs
mov
ret
or
jnp
dec
test
leave
scas
test
stos
pop
out
jecxz
fdivp
cs
in
les
inc
add
inc
inc
inc
out
popf
inc
out
add
loopne
js
jecxz
pop
inc
in
inc
and
incl
out
inc
and
cmp
jmp
cmp
ds
hlt
inc
inc
inc
testl
lock
incl
repz
push
inc
repnz
addb
and
incl
incb
stc
inc
aas
inc
clc
inc
cwtl
inc
sti
cmp
incl
cli
inc
cmp
adc
addb
inc
inc
inc
lea
decl
popl
mov
mov
xchg
inc
push
inc
xchg
inc
push
inc
xchg
inc
add
adc
adc
pushf
inc
sub
inc
xor
inc
movsl
inc
adc
out
add
inc
inc
inc
lods
inc
dec
inc
scas
inc
pop
inc
test
inc
dec
inc
mov
push
inc
sti
pushl
or
inc
mov
inc
sub
xor
mov
lcall
inc
arpl
cmpsb
inc
pop
loopne
sub
inc
jno
inc
bound
pusha
inc
cld
inc
je
mov
mov
inc
pop
inc
jo
inc
dec
inc
dec
pop
jo
mov
inc
and
sub
inc
sbb
in
aaa
dec
inc
dec
mov
inc
mov
mov
cld
xchg
outsb
inc
jge
out
adc
inc
jle
cld
data16
push
mov
inc
testb
inc
insb
fldcw
inc
jns
inc
push
inc
inc
and
xchg
fnstenv
push
insb
jb
ret
retw
inc
imul
push
inc
outsl
push
inc
inc
sub
push
cld
inc
or
jae
inc
aaa
testb
inc
das
fwait
add
inc
push
inc
push
inc
outsb
pop
lock
add
or
jb
inc
subb
push
inc
sub
fiaddl
gs
sar
mov
out
dec
jne
inc
dec
jne
lods
jne
inc
mov
jne
inc
in
in
inc
out
pushl
inc
loopne
out
inc
loop
out
inc
in
jne
inc
cmpsb
jne
inc
mov
jne
inc
xchg
inc
mov
jne
inc
out
testl
jne
inc
in
jne
inc
out
jne
inc
out
jne
inc
call
pushl
inc
hlt
jne
inc
divb
inc
lock
inc
bnd
inc
cld
jne
inc
jne
inc
clc
jne
inc
cli
pushl
inc
test
inc
xorl
inc
lea
inc
jne
inc
mov
inc
mov
inc
mov
pushl
inc
mov
inc
mov
inc
xchg
jne
inc
nop
jne
inc
popf
jne
inc
sahf
jne
inc
fwait
jne
inc
lcall
inc
movsl
jne
inc
movsb
jne
inc
cmpsl
jne
inc
mov
jne
inc
lods
jne
inc
lods
jne
inc
scas
lock
pushl
inc
scas
jne
inc
test
jne
inc
stos
jne
inc
mov
fwait
inc
fidivs
inc
fcos
lcall
inc
dec
inc
incb
inc
cli
inc
pop
inc
test
inc
xchg
inc
xchg
inc
addl
jmp
addl
addb
lea
inc
mov
inc
popl
inc
mov
inc
mov
inc
mov
ljmp
mov
inc
mov
inc
xchg
inc
jne
xchg
inc
je
xchg
inc
ja
xchg
inc
jbe
xchg
inc
jno
nop
inc
pushl
xchg
inc
jae
xchg
inc
jb
popf
inc
jge
pushf
inc
jl
lahf
inc
jg
movsl
inc
add
inc
cmpsl
inc
incl
inc
cmpsb
inc
push
inc
mov
inc
inc
inc
mov
inc
add
inc
or
inc
scas
inc
decl
inc
scas
inc
push
inc
test
inc
or
inc
or
inc
or
inc
adc
inc
mov
sub
clc
pop
inc
in
pop
cli
inc
push
dec
inc
adc
inc
adc
mov
inc
adc
adc
lods
pop
mov
inc
sbb
inc
pop
inc
push
inc
jmp
mov
and
inc
jmp
sbb
inc
sbb
inc
push
fs
inc
inc
inc
scas
js
loop
inc
inc
cmp
inc
icebp
inc
inc
inc
inc
inc
inc
repz
mov
adc
inc
inc
inc
std
inc
dec
push
inc
dec
inc
incl
pop
mov
dec
inc
stc
inc
dec
bound
inc
sti
inc
dec
push
dec
inc
test
push
in
clc
adc
xchg
adc
addb
clc
adc
jo
inc
add
inc
jbe
inc
inc
inc
mov
data16
lods
lcall
inc
jns
mov
int
js
jnp
xchg
inc
jp
xchg
inc
or
inc
add
xchg
mov
pop
mov
inc
jae
xchg
inc
ja
inc
or
inc
push
lods
clc
pop
icebp
inc
lahf
inc
jb
inc
or
inc
cwtl
inc
or
inc
add
data16
inc
cmovae
push
inc
push
sub
arpl
inc
push
xor
cli
inc
popa
insb
cmp
cmp
add
inc
pop
inc
pop
cmp
flds
inc
pop
inc
pop
inc
stos
inc
pop
or
decl
inc
pop
inc
mov
push
inc
and
inc
mov
addr16
mov
fcomip
inc
inc
mov
inc
mov
push
inc
mov
inc
outsb
inc
mov
pop
mov
inc
insl
rolb
inc
mov
inc
bound
inc
outsl
cmp
stos
incl
inc
out
int
out
int3
inc
loope
iret
inc
loopne
xchg
loop
leave
inc
in
inc
lret
inc
stos
jg
in
inc
mov
jmp
rolb
push
gs
inc
mov
call
inc
icebp
inc
ljmp
inc
aad
repnz
xchg
std
inc
mov
incl
inc
incl
inc
incb
inc
test
inc
xchg
inc
xchg
inc
addl
inc
cmp
incl
inc
addb
lea
inc
mov
inc
popl
inc
mov
inc
mov
inc
mov
inc
mov
scas
incl
inc
mov
inc
xchg
inc
in
xchg
inc
in
xchg
inc
ret
loope
nop
inc
ljmp
lret
xchg
inc
loop
popf
inc
in
inc
pushf
inc
in
inc
movsb
inc
hlt
inc
cmpsl
inc
testl
inc
fisubl
inc
loop
inc
mov
jmp
inc
lods
inc
std
inc
lods
inc
cld
inc
scas
inc
cli
scas
inc
test
int
inc
stos
inc
sti
inc
stos
inc
add
incl
mov
xchg
inc
addl
inc
addl
mov
inc
mov
dec
repnz
dec
pusha
out
add
dec
gs
fs
incl
loop
in
in
dec
out
in
dec
loope
out
dec
jecxz
out
dec
fisubs
dec
fsubs
dec
dec
jmp
ljmpw
dec
jmp
addr16
dec
and
addr16
dec
outsb
test
test
lcall
xchg
orb
lea
mov
mov
mov
mov
addr16
dec
in
lcall
lahf
dec
addr16
dec
addr16
dec
insb
addr16
dec
outsl
addr16
dec
bound
dec
insl
stos
mulb
jg
pushl
dec
aad
mov
push
fs
dec
addr16
movsl
dec
andl
in
call
pusha
cmpsl
dec
dec
popa
cmpsb
dec
dec
popa
mov
dec
dec
popa
lods
sbb
lods
dec
dec
popa
scas
dec
pop
pusha
lock
jg
scas
dec
push
pusha
test
push
pusha
stos
dec
jns
stos
dec
jmp
dec
data16
outsl
lcall
mov
stc
data16
clc
data16
pop
pusha
mov
pusha
mov
jno
mov
imul
or
in
inc
gs
inc
gs
gs
inc
gs
inc
gs
incl
dec
gs
dec
dec
gs
dec
push
gs
dec
push
gs
dec
arpl
ljmp
gs
dec
push
cs
adc
adc
adc
adc
sbb
fs
sbb
repnz
pop
fs
mov
push
gs
dec
insb
data16
dec
imul
dec
outsl
data16
idiv
decl
orl
orl
mov
fs
scas
arpl
dec
repnz
jmp
dec
mov
dec
ljmp
dec
pop
gs
dec
pop
gs
dec
pop
gs
dec
pop
fs
dec
ja
mov
jbe
pushf
push
bound
dec
test
dec
repz
fwait
dec
mov
dec
jmp
movsl
cli
jmp
dec
mov
call
pusha
mov
dec
jg
loopne
mov
dec
mull
dec
stc
pusha
scas
cmpsb
arpl
jg
test
dec
and
dec
and
les
push
gs
fs
jg
gs
bound
dec
sub
dec
sub
dec
pop
arpl
dec
fdivrs
mov
ss
jge
mov
mov
push
cld
aaa
dec
jns
jecxz
jnp
in
dec
jle
dec
mov
ljmp
dec
mov
dec
pusha
orl
dec
pop
sub
decl
dec
loope
mov
xchg
dec
dec
xchg
dec
out
popf
dec
out
clc
fwait
mov
push
dec
cltd
dec
out
mov
push
movsl
decl
inc
movsb
dec
xchg
inc
cmpsl
dec
xchg
inc
cmpsb
dec
xchg
inc
mov
dec
nop
inc
mov
dec
xchg
inc
lods
decl
inc
lods
dec
pushf
inc
scas
dec
lahf
inc
scas
dec
sahf
inc
test
dec
cwtl
inc
stos
dec
fwait
inc
stos
dec
lcall
dec
movsl
inc
mov
movsb
inc
mov
cmpsl
inc
mov
cmpsb
inc
mov
mov
inc
mov
mov
inc
mov
dec
lods
inc
mov
dec
scas
inc
in
inc
dec
out
inc
dec
out
inc
dec
loope
inc
dec
loopne
inc
dec
jecxz
cmp
dec
inc
dec
loop
inc
dec
in
dec
dec
dec
in
dec
dec
dec
out
dec
lock
dec
dec
dec
jmp
jg
call
add
ljmp
dec
hlt
dec
push
dec
testl
dec
icebp
dec
call
lock
push
dec
repz
push
dec
repnz
push
dec
std
dec
pop
dec
cld
dec
pop
dec
decl
dec
decb
dec
stc
dec
lcall
clc
dec
pop
dec
sti
dec
pop
dec
cli
dec
pop
dec
test
dec
test
dec
xchg
dec
xchg
dec
cmp
dec
orb
orl
orb
lea
dec
mov
dec
mov
decl
dec
mov
dec
mov
dec
mov
dec
mov
dec
xchg
dec
jne
xchg
dec
je
xchg
dec
ja
xchg
decl
dec
xchg
dec
jno
nop
dec
jo
xchg
dec
jae
xchg
dec
jb
popf
dec
jge
pushf
dec
jl
lahf
dec
jg
fwait
decl
dec
lcall
dec
movsb
dec
add
cmpsl
dec
pop
dec
cmpsb
dec
push
dec
mov
dec
inc
dec
mov
dec
add
dec
add
dec
or
dec
scas
dec
cmovnp
dec
or
dec
or
decl
dec
mov
adc
mov
pop
dec
mov
push
dec
mov
adc
dec
adc
dec
adc
dec
adc
decl
dec
mov
dec
je
out
ja
out
jbe
loope
jno
loopne
jo
jecxz
jae
loop
decl
je
dec
jge
in
dec
jl
out
dec
jg
out
dec
jle
jmp
dec
js
jmp
jnp
ljmp
je
dec
add
je
dec
pop
je
dec
push
je
dec
add
inc
je
dec
add
decl
je
dec
or
je
dec
pcmpeqb
dec
push
je
dec
or
or
or
decl
je
dec
adc
je
dec
pop
je
dec
push
je
dec
adc
adc
adc
decl
je
dec
sbb
je
dec
pop
je
dec
push
je
dec
sbb
sbb
sbb
icebp
decl
je
dec
and
je
dec
daa
je
dec
es
add
int
mov
xchg
push
xchg
push
popf
push
pushf
push
lahf
mov
insb
ss
sahf
push
cltd
push
cwtl
push
ss
fwait
int
push
lcall
push
cmpsb
data16
insb
push
mov
push
mov
push
lods
push
lods
push
scas
push
scas
push
test
push
test
stos
push
stos
dec
sub
xor
mov
cmp
cmp
les
shll
je
dec
enter
lret
je
and
roll
push
mov
pop
dec
push
jmp
clc
push
push
inc
sti
push
cmp
in
cmp
repz
loope
jecxz
repz
loop
in
out
out
jmp
dec
mov
push
dec
dec
jns
out
dec
dec
dec
push
push
sarl
pop
pop
mov
repz
popa
adc
pop
arpl
cmp
repz
adc
idivl
repz
and
into
repz
insb
and
imul
fs
repnz
addb
gs
idivl
aam
xor
jns
xor
aaa
shll
sarb
out
popa
shll
arpl
jns
out
fsubrl
out
push
sahf
data16
fisubs
repz
push
iret
repz
out
cs
repz
iret
jnp
out
inc
cmc
and
cmp
repz
mulb
icebp
and
cmp
repz
and
iret
repz
and
sub
leave
leave
add
sahf
out
fiadds
xorl
xorb
cmp
out
lea
mov
sahf
out
sahf
cmp
sahf
out
mov
mov
mov
jns
out
xchg
xchg
sahf
out
sahf
xchg
rcll
out
nop
ret
cmpsl
repz
out
cmpsb
out
out
iret
repz
lods
loope
loopne
push
jnp
out
test
inc
ss
adc
dec
add
and
mov
cmp
xor
gs
pusha
arpl
cld
push
ljmp
ja
jno
jae
jge
ja
daa
and
and
sub
sub
sub
jle
xor
xor
cmp
sbb
mov
add
inc
inc
inc
inc
inc
inc
dec
dec
jno
dec
dec
dec
add
leave
dec
dec
add
adc
add
inc
add
add
mov
std
testb
adc
push
push
adc
ljmp
pop
cmp
nop
pusha
je
cmp
jp
mov
testl
in
push
pushl
out
cmpsb
inc
mov
add
push
in
mov
dec
mov
push
movsl
mov
into
pushf
pusha
sbb
outsl
push
jl
push
xchg
sub
outsb
add
pop
fs
jmp
ret
add
test
cs
lret
cld
ss
mov
int
insb
sbb
push
in
sbb
ds
push
enter
inc
ljmp
jg
faddl
pop
pop
fcomi
cld
ret
imul
xor
push
in
xor
sahf
jmp
ss
shrb
loopne
dec
loopne
pop
fbld
dec
scas
ret
cmp
incl
xchg
jl
sub
mov
pop
rorl
add
xchg
pop
repnz
insl
cmpsb
insb
call
sub
dec
or
pop
pop
xor
pop
aam
pop
push
aaa
mov
jmp
cmp
sub
add
push
movsl
inc
imul
sbb
clc
sub
popf
add
mov
aas
cmc
sub
out
push
inc
sub
mov
out
push
dec
pop
pop
mov
add
out
imul
add
imul
push
pop
or
cmp
aas
sub
call
push
adcl
push
push
pop
imul
pop
pop
pop
pop
pop
out
insl
insb
imul
jp
push
sbb
cmp
cmp
mov
int
iret
into
leave
dec
lret
lret
xlat
rcl
rcl
fstp
fcmovnu
in
out
loope
jecxz
in
in
out
out
jmp
call
div
icebp
lock
cld
stc
clc
sti
cli
test
orb
decl
xchg
xchg
xchg
nop
xchg
xchg
popf
pushf
lahf
sahf
cltd
cwtl
fwait
lcall
mov
scas
test
test
stos
mov
mov
mov
mov
mov
mov
decl
cmpsb
add
or
or
or
adc
and
adc
sbb
repnz
cmp
cmp
iret
push
mov
sarb
ret
pop
bound
loope
xchg
or
or
push
mov
lds
push
dec
insl
and
mov
inc
lds
adc
jge
mov
out
pop
add
lds
push
stos
push
or
adc
dec
lods
adc
fwait
ss
sub
and
sub
and
xor
fildll
xor
lock
adc
dec
aaa
mov
sbb
sub
aaa
sub
sbb
xor
xor
jg
push
lock
add
sub
xor
push
adc
mov
lods
scas
jp
inc
mov
add
inc
movb
mov
insb
int3
xchg
movb
sti
cmpsb
push
pushf
sub
ss
addr16
out
outsb
mov
and
push
inc
push
xchg
sbb
fsubrp
iret
add
xchg
push
mov
inc
push
push
lods
mov
rcrb
or
insb
imull
iret
push
mov
mov
dec
mov
pushl
into
or
jns
insl
jge
jmp
mov
into
xor
add
sub
das
inc
sbb
loope
and
xor
ja
add
pop
add
push
mov
out
xchg
xchg
jg
adc
loop
dec
repnz
cmc
test
and
mov
mov
enter
fnop
lods
or
enter
mov
or
cwtl
shlb
or
pop
mov
mov
mov
xor
insl
mov
push
cmp
pop
sub
sub
scas
gs
or
sahf
aaa
cli
scas
clc
decb
xchg
sbb
adc
add
jg
std
adc
ss
pop
dec
add
into
aaa
insl
das
pop
sbb
mov
and
incl
test
mov
mov
into
pop
push
into
push
xor
sarl
lcall
cld
add
mov
addb
cmpl
mov
in
pop
push
std
jp
enter
shlb
dec
sub
mov
sbb
dec
or
popa
dec
sub
adc
pop
xor
enter
mov
call
jb
inc
dec
into
xor
cmp
gs
mov
add
inc
sub
dec
repz
jge
xor
mov
xchg
add
dec
xor
popa
and
into
dec
push
test
mov
xor
dec
mov
dec
sbb
out
jo
xlat
mov
das
inc
add
sub
loopne
inc
add
xchg
mov
mov
mov
stos
rcrb
xchg
out
scas
lret
movsb
cmp
jle
clc
pop
pop
xor
adc
push
inc
inc
sti
addr16
cmp
sub
cmp
push
orl
adc
pop
test
rclb
mov
notb
daa
mov
xlat
dec
divl
pop
adc
fs
ljmp
or
dec
iret
dec
lds
or
loopne
add
adcb
movsb
mov
inc
int3
or
scas
inc
rol
jne
sbb
test
xor
push
push
in
fcomi
je
adc
cmp
mov
xchg
cli
push
lods
xor
xchg
int
sbb
inc
sub
add
cmp
add
or
test
push
sbb
push
adc
ret
int3
cmp
insb
arpl
inc
imul
and
mov
sub
inc
dec
pop
jns
in
dec
jl
xor
sbb
pusha
test
jmp
shrl
lds
mov
fcomps
loopne
lods
sarl
dec
int
popa
dec
and
inc
and
aas
xor
pop
mov
loope
dec
inc
dec
mov
movsl
sbb
imul
inc
jg
lahf
pop
mov
mov
xor
mov
xchg
xchg
cmp
inc
daa
sub
add
jns
in
inc
xor
sub
and
inc
scas
outsb
fs
repz
pop
inc
sub
and
fsubp
pop
add
js
mov
pop
test
and
aam
icebp
lods
addb
popf
inc
pushf
push
arpl
mov
xor
es
add
inc
hlt
adc
mov
mov
xchg
lods
cmp
cli
pop
insb
lea
push
lods
inc
adc
popf
mov
lods
cmpsb
mov
inc
ret
and
fsubrs
sub
stc
mov
outsl
int3
push
inc
mov
dec
shlb
ss
cmp
pop
int3
cmp
insl
out
adc
cmp
inc
mov
shrl
js
inc
sub
inc
cmp
scas
movsl
lods
pop
xor
lds
shlb
dec
fwait
pop
mov
mov
add
pusha
push
mov
lahf
repnz
das
outsb
mov
add
imul
stc
int3
iret
mull
sub
sbb
ljmp
aam
and
and
add
push
push
adc
push
jb
jecxz
inc
lret
mov
jg
ljmp
sub
aad
or
push
fisubrl
push
adc
lods
pop
cltd
jb
pushl
xchg
cmpsl
fwait
arpl
push
adc
sub
xor
xor
jne
lcall
inc
jge
cmp
mov
push
fdivrl
jge
mov
repnz
test
nopl
pushl
stos
arpl
stos
mov
mov
repnz
cwtl
lcall
decl
or
les
cmpl
jnp
xchg
add
or
jnp
push
xchg
add
andb
jg
jg
jg
jg
jg
mov
pop
sbb
jmp
mov
mov
shlb
dec
jo
lcall
mov
cwtl
jg
jg
sbb
mov
dec
or
xor
sub
mov
mull
cli
inc
dec
pusha
das
jae
orb
add
mov
cs
fcomi
or
jmp
pusha
xchg
inc
mov
fs
lock
rcr
xchg
scas
jb
jp
pop
push
repnz
jg
pushl
adc
daa
cmp
je
add
xor
push
push
xchg
shrb
inc
in
stc
lcall
sub
iret
hlt
push
sbb
sbb
xchg
adc
pushf
popf
mov
dec
mov
fdivl
inc
dec
lock
push
data16
jns
in
jg
push
or
leave
call
repz
xchg
mov
inc
mov
inc
dec
mov
leave
sbb
mov
cmp
ret
sti
pop
iret
push
and
std
ret
fildl
xchg
and
sarb
and
hlt
int3
int
jg
sbb
inc
aad
pusha
mov
sbb
enter
dec
clc
add
push
jmp
arpl
jl
incb
add
aad
inc
xchg
inc
movsl
push
lahf
mov
jmp
push
shrl
jmp
fisubrs
shrl
adc
ret
fwait
hlt
pushl
in
jns
cmc
fildl
data16
ss
daa
sub
sbb
mov
imul
adc
mov
cwtl
jle
punpckhbw
push
pop
lret
mov
nop
xor
mov
imul
mov
sahf
add
stos
aaa
add
or
mov
and
sub
or
adc
xor
sarb
jno
aaa
sub
and
nop
addr16
xor
gs
xor
and
and
xor
mov
mov
adc
and
sub
sub
sub
pop
lcall
xor
cmp
neg
decl
and
sub
pusha
adc
and
cmp
lock
and
xor
gs
and
cltd
fstp
cmpsl
add
sub
and
insl
push
scas
loopne
mov
das
push
push
push
add
xchg
and
fs
les
xchg
or
imul
mov
cmp
xchg
mov
add
fistps
ljmp
es
cld
iret
dec
mov
and
sub
xor
add
gs
jbe
mov
out
loopne
ja
aas
push
lret
clc
pop
jmp
adc
adc
rcl
jbe
testl
or
subb
shl
adc
nop
sub
es
cld
das
push
lea
add
daa
xor
sub
sub
xadd
rclb
lock
sub
xor
jae
fisttpl
jne
pusha
dec
adc
mov
push
jo
jecxz
sahf
jno
ja
mulb
sub
mov
mov
push
daa
lds
repz
xor
repz
inc
inc
dec
gs
pop
adc
ss
xor
xor
pop
dec
and
sub
gs
rol
das
hlt
add
mov
adc
mov
mov
add
sub
sub
push
fsubr
cmp
fbld
adc
adc
push
adc
sub
ret
inc
sub
inc
sub
sbb
inc
jl
sti
xchg
and
ss
iretw
jb
mov
pop
pop
or
in
pop
add
xchg
and
movsl
outsb
clc
lahf
and
sub
and
cmp
xchg
test
or
arpl
sub
in
es
sbb
in
mov
fsubrl
aaa
sub
xor
sub
jge
lods
xor
int
or
push
add
or
push
jmp
and
and
mov
fdivrs
fidivl
jbe
xor
decl
adc
push
push
pop
or
xchg
adc
push
addl
or
test
push
push
or
inc
inc
pop
add
sbb
push
or
adc
push
add
fldt
or
push
pop
inc
adcb
cmpsl
or
inc
jo
cmpsb
and
adc
in
sahf
std
insl
pop
or
or
inc
ja
or
push
pop
int3
cltd
pop
mov
adc
inc
sbb
mov
shlb
or
mov
in
dec
push
scas
hlt
add
pop
or
es
dec
data16
jmp
and
xor
push
adc
sub
mov
push
cwtl
push
xor
aaa
ret
jg
sub
push
push
and
pop
dec
xchg
jp
decl
cli
scas
jecxz
andb
adc
inc
sbbl
or
mov
mov
outsb
mov
daa
push
xchg
pop
adc
outsl
jo
pop
and
adc
fiadds
out
dec
dec
imull
inc
outsl
repnz
sbb
ja
cmp
mov
mov
sub
movsb
inc
sti
ja
decl
enter
push
std
push
popf
pop
icebp
les
add
out
clc
add
lcall
ret
cmp
pop
adc
sbb
pusha
pop
nop
aas
in
xlat
dec
mov
iret
shlb
cld
adc
out
jp
push
cmp
pushf
or
inc
daa
fbld
mov
pop
dec
add
or
pop
mov
and
add
and
pop
divb
ss
fnstenv
dec
mulb
xor
adc
adc
pop
dec
or
ja
sub
xor
pop
roll
mov
xor
pop
adc
add
aaa
add
in
xor
ljmp
pop
inc
std
or
sub
into
push
bound
das
push
and
mov
sub
mov
movsb
lock
push
div
sti
call
mov
stos
lods
out
cmpsb
scas
mov
ljmp
fwait
cmpl
popf
or
iret
fisubrs
decl
lods
mov
mov
mov
mov
mov
mov
mov
cmpsl
mov
icebp
mul
cmp
push
in
hlt
lods
call
xchg
xchg
nop
mov
mov
lahf
mov
cmpsl
test
icebp
mov
cmpsb
xchg
addl
es
push
out
in
jmp
ret
out
mov
sti
jg
jg
out
movsl
mov
repnz
mov
dec
pop
pop
dec
ljmp
jnp
push
push
addr16
jae
dec
pusha
push
push
inc
push
jmp
ljmp
pop
push
jge
jle
insl
jle
and
add
add
clc
dec
shrb
mov
jg
pop
sub
test
mulb
push
push
push
sbb
or
jecxz
call
pop
add
inc
dec
inc
push
sbb
pop
inc
push
pop
push
xor
add
inc
mov
cs
ljmp
hlt
dec
add
cs
inc
dec
sub
neg
fld
xlat
ftst
leave
aad
int
fwait
cmp
lret
lahf
jno
dec
dec
pop
push
push
jnp
xchg
js
fistl
mov
xor
outsl
dec
pop
dec
push
dec
pop
dec
and
out
ljmp
clc
pop
push
inc
inc
adc
jbe
jns
insb
data16
push
outsb
ja
mov
stos
ljmp
mov
inc
lock
pushl
cld
ds
daa
das
mov
aaa
imul
sub
out
ljmp
pop
push
xor
and
jp
dec
das
add
mov
movsl
mov
pushl
lods
mov
lods
mov
add
mov
hlt
or
adc
or
or
ds
ss
xor
aas
ja
das
dec
pop
dec
push
push
push
dec
dec
sbb
sub
out
jp
in
pop
adc
push
sar
in
mul
lock
cld
lcall
icebp
cli
in
lock
repnz
out
jmp
aam
sti
xchg
call
loope
aam
fstp
aam
ljmp
rcll
lcall
fwait
int3
subb
mov
fisttpll
mov
in
mov
mov
movsb
loope
loope
stos
out
hlt
in
sti
rcl
xlat
cmpb
xchg
cwtl
mov
inc
pop
push
pop
push
jl
pop
pop
mov
pop
dec
jnp
jns
pusha
fs
jne
jae
pop
dec
push
push
dec
push
inc
push
and
add
pop
or
pop
gs
addr16
je
insb
ja
jb
ja
incl
imul
imul
sub
mov
cli
mov
dec
mov
out
imul
add
mov
xorl
mov
fcmovbe
nop
leave
mov
call
stos
push
mov
data16
scas
mov
mov
push
cs
lcall
sbb
pop
push
sbb
adc
sbb
sub
lcall
inc
dec
sbb
cmp
aaa
cmp
jle
aas
jno
sub
and
sub
call
popa
and
sub
sub
scas
mov
lcall
call
adcb
fists
lds
mov
mov
mov
incl
lahf
mov
mov
xchg
sahf
lahf
xchg
fcomps
xchg
addb
jbe
mov
mov
dec
mov
push
ljmp
test
mov
mov
mov
dec
call
mov
mov
mov
mov
scas
std
ljmp
mov
mov
outsb
js
push
outsl
jb
jae
fs
je
jg
je
cld
pop
daa
mov
test
lods
mov
push
inc
xchg
inc
xchg
cmp
incl
mov
add
iret
fpatan
vcmppd
aas
jmp
aad
mov
push
jnp
pusha
pop
ja
sti
ljmp
movsw
in
ljmp
iret
repz
cld
idiv
inc
dec
jg
int3
fxch
in
ret
xlat
lret
sahf
cltd
mov
xchg
inc
ficoml
xlat
fstp
rol
in
rcl
rcr
add
sti
jmp
mov
mov
lods
mov
mov
mov
ljmp
cmp
and
sub
es
insb
jg
cld
outsb
jns
jbe
jg
and
xor
push
sub
xor
sub
xchg
xchg
xorb
rcl
std
lret
mov
mov
push
mov
mov
mov
mov
cmp
adc
jmp
and
xor
ds
es
nop
aam
shr
fisttps
ret
fcmovnbe
ror
fbstp
add
adc
inc
inc
aas
inc
or
add
aas
cmp
xor
pusha
rcrl
pop
jb
add
push
cli
dec
dec
out
lcall
out
stc
div
loop
outsl
inc
pop
inc
inc
push
push
dec
push
add
loop
loopne
jmp
pop
pusha
sbb
xchg
jo
ljmp
das
xchg
int3
fwait
mov
xchg
mov
movsl
fmul
ret
sbb
xchg
roll
das
add
push
sbb
out
pop
add
es
adc
xchg
pushl
or
xchg
test
test
mov
lods
scas
mov
in
jmp
out
xchg
mov
lahf
inc
stos
xchg
xchg
cwtl
xchg
call
push
sbb
push
adc
adc
add
mov
and
adcb
xchg
xchg
lcall
stos
test
add
mov
inc
xchg
stos
movsb
cmpsb
dec
stos
fwait
mov
push
cwtl
xor
divb
sub
fisubrs
add
pop
ja
out
cli
lcall
xchg
mov
inc
pop
imull
cltd
stos
mov
loope
sbb
dec
pop
out
push
jge
cli
filds
call
mov
cld
pushl
sbb
hlt
xchg
mov
sbbl
addr16
adc
repnz
pop
pop
push
add
dec
dec
cmpsl
mov
mov
mov
lods
cmc
jle
int
fld1
fcmovnb
xchg
ret
shr
movsb
mov
or
adc
es
mov
push
inc
inc
pop
pop
inc
inc
sbb
dec
add
imul
fs
jo
ja
aas
loope
jp
xlat
out
mov
mov
mov
mov
psubsw
mov
push
jmp
in
in
sti
fbstp
roll
in
loop
test
loopne
cld
int
ljmp
stc
jmp
stos
cli
aam
ror
iret
iret
sar
out
pushf
fcmovnbe
fnop
mov
movl
xlat
leave
fiadds
ja
add
pop
ja
outsb
push
cld
push
sbb
cmpsl
mov
mov
mov
xchg
push
mov
orb
add
data16
data16
jbe
dec
pop
loope
push
push
pop
adc
inc
add
push
dec
dec
jl
mov
inc
jg
push
pop
addr16
add
lahf
fwait
xchg
cwtl
shr
sbb
into
dec
loopne
rol
dec
jle
pop
jecxz
pushl
adc
push
adc
cmp
imul
jbe
or
and
bound
jns
js
sub
ret
mov
hlt
mulb
ja
lcall
pop
inc
pop
dec
pop
outsl
inc
inc
imul
xchg
sbbl
and
imul
sub
sub
pop
popa
je
sub
bound
mov
mov
mov
mov
inc
push
std
mov
repz
mov
add
es
movsl
mov
mov
out
mov
lods
scas
mov
decl
jle
push
push
dec
dec
dec
dec
inc
inc
fld
loop
dec
fstp
into
fmulp
faddp
call
test
mov
mov
repz
out
in
cld
mov
jp
push
clc
call
dec
ret
lret
mov
xor
cmp
inc
jne
jg
pushl
jp
imul
inc
rcl
mov
rolb
push
pop
dec
push
jl
mov
push
cwtl
cld
rol
int
add
sbb
fisttpl
mov
jg
pushf
mov
mov
mov
stc
add
fcmove
iret
sbb
je
pop
daa
xor
inc
inc
pop
shld
pop
inc
pop
push
push
inc
inc
push
add
fcoml
incl
mov
push
mov
jmp
sahf
aad
cltd
xchg
adc
das
clc
out
aad
push
call
mov
fcomip
aas
sbbb
add
push
pop
dec
dec
inc
xor
lcall
lcall
jne
popa
sub
cmp
and
push
cmp
add
or
pop
or
jle
incb
xor
sbb
mov
into
stc
cld
mov
jecxz
ds
getsec
sub
aaa
mov
idiv
lret
xor
fcomp
std
loop
leave
enter
rcl
ret
lcall
cmpsb
mov
cmp
sbb
cmp
and
mov
testb
pusha
les
ljmp
lret
adc
push
add
cwtl
shl
out
mov
mov
lock
xchg
mov
mov
imulb
xchg
into
mov
scas
aaa
scas
mov
movsl
cld
out
mov
inc
mov
fwait
xchg
mov
jb
xlat
int
loopne
shll
mov
xchg
out
push
jg
call
sub
lock
cli
dec
shl
repnz
clc
stc
push
andl
stc
cwtl
xchg
addl
cwtl
pushf
nop
fbstp
inc
dec
inc
pop
pop
dec
push
inc
add
inc
dec
push
out
inc
idivb
movsb
notb
sahf
rclb
push
push
dec
movaps
sub
cmp
mov
sbbl
adcl
stos
mov
bound
mov
mov
stos
addr16
jg
sahf
out
pop
dec
push
jge
add
jo
jae
popa
xor
call
jbe
jns
cltd
lcall
mov
pushf
xchg
xchg
xchg
xchg
xchg
mov
mov
xlat
cwtl
add
jnp
addr16
cli
in
add
sub
ja
fs
dec
jns
imul
mov
xor
xor
cmp
xor
testb
mov
nop
cltd
fwait
mov
nop
fimull
std
decl
incb
mov
bound
mov
repnz
decl
lods
dec
iret
ror
add
and
add
jg
aas
xor
and
je
xor
sub
jbe
cli
ljmp
inc
push
pop
add
ds
and
xor
adc
push
mov
push
adc
and
and
and
inc
push
cmp
outsb
sar
sbb
or
pop
daa
push
or
mov
jno
insb
jo
xchg
insl
jo
cmp
mov
outsb
jle
insb
insb
outsb
addr16
adc
jb
aas
dec
jno
bound
add
or
scas
ljmp
pop
in
xchg
jmp
mov
cmpsl
mov
lahf
lahf
xchg
xchg
adc
push
fwait
sahf
mov
mov
push
lahf
lahf
scas
clc
inc
iret
lea
cmpsl
in
fdiv
cmpl
cmpsl
mov
je
dec
sahf
pop
or
into
shl
push
cmpb
jecxz
pmuludq
inc
data16
pop
dec
push
dec
push
add
ja
loop
decl
scas
pop
pop
jne
pop
pop
pop
dec
jge
inc
jne
gs
jne
push
incl
jb
and
jb
insl
gs
jp
push
popa
arpl
cs
fisttps
aaa
in
rol
loope
iret
enter
jb
gs
pushl
je
push
jne
push
jae
dec
insb
ja
jae
push
sub
pop
add
outsb
cmp
aas
arpl
dec
pop
pop
inc
mov
sub
and
sub
popa
push
jns
lcall
jle
je
jecxz
aam
ret
aam
shl
hlt
rcr
into
sar
call
ljmp
fimuls
jmp
mul
enter
jmp
repz
push
sti
fcomi
repz
in
add
cmp
sub
cmp
mov
mov
mov
mov
movsb
or
test
mov
xchg
cmpsb
mov
cltd
cmpsb
mov
jbe
fcom
aad
mulb
pop
and
push
incl
add
pop
push
pop
pop
dec
pop
repnz
push
dec
dec
dec
inc
push
jnp
pop
std
pop
std
jge
xor
cmp
sbb
push
add
and
and
outsb
jno
ja
or
or
or
popf
mov
push
pop
push
pop
inc
push
fs
or
or
sbb
jg
call
pop
push
sbb
inc
inc
sbb
add
add
add
inc
or
sbb
std
cmp
xor
bound
inc
lcall
cmp
sub
push
daa
pop
inc
adc
dec
jle
pusha
pop
inc
inc
out
cmpb
mov
push
add
inc
inc
dec
push
xor
adc
push
je
dec
bound
jno
sub
imul
je
ja
mov
popf
mov
cwtl
mov
nop
mov
dec
call
loop
xchg
xchg
xchg
lock
test
sar
mov
mov
mov
mov
lods
and
mov
int3
adc
rcl
xchg
pushf
xchg
aam
fadd
roll
fdivr
rcl
ss
mov
incl
call
out
loope
lret
add
call
in
cld
jmp
fcomip
cmc
icebp
out
mul
sbb
pop
push
inc
jb
add
push
inc
sub
sbb
pop
cld
decl
bndldx
adc
dec
adc
fidivs
xor
mov
and
mov
and
and
sub
adc
xor
adc
int3
jne
cmpsl
push
aad
in
loope
jmp
jmp
pop
sbb
push
ucomiss
and
and
sub
cmpsl
popaw
and
loopne
cmp
mov
test
popf
inc
xchg
lahf
out
mov
rolb
mov
jb
mov
cli
jns
jo
and
sbb
xchg
push
dec
jmp
rorl
cli
data16
dec
dec
inc
pop
jg
dec
jbe
mov
popa
pop
arpl
mov
mul
ljmp
lock
add
mov
adc
push
and
or
out
cmc
jmp
cs
es
sub
cmp
cmp
mov
mov
cmpsl
mov
xor
or
rol
faddp
fcmove
fmul
aam
sti
adc
sub
push
dec
dec
aas
pop
jb
imul
rclb
ss
insb
data16
dec
dec
push
inc
dec
push
or
inc
cmpsb
fwait
out
dec
pop
inc
mov
mov
lret
push
cmp
mov
push
into
rol
mov
xor
xor
xor
cmp
xor
aaa
out
dec
cs
push
outsb
dec
fstpl
outsl
daa
pop
gs
outsb
sub
sbb
push
lock
jo
cmpb
mov
xchg
div
repz
mov
cli
lock
add
sbb
add
or
inc
dec
out
pop
lret
cmc
mov
jge
add
ja
cwtl
rolb
inc
pop
inc
dec
dec
pop
pop
pop
pop
pop
sbb
pop
pop
pop
or
pop
lods
mov
push
push
test
mov
add
in
test
mov
stc
lods
test
cmpsl
mov
sahf
into
ret
cld
add
cwtl
cltd
mov
xchg
fbstp
in
mov
mov
mov
mov
mov
lods
cmpsl
add
mov
sbb
ljmp
mov
xchg
ror
lahf
loopne
push
pop
pop
add
or
mov
insb
add
jp
out
enter
and
dec
mov
aam
lret
fdivrs
push
decb
dec
inc
sub
dec
xor
sub
cs
loope
decl
dec
cmp
jns,pn
jnp
pop
push
jb
and
mov
je
arpl
sub
xor
push
pop
jns
jl
or
sbb
xlat
sti
out
iret
in
jmp
idiv
push
pop
enter
jecxz
ror
add
pusha
insb
cmp
ss
bound
incl
and
lea
test
dec
pop
pop
dec
mov
jl
dec
inc
push
dec
push
dec
pop
dec
xchg
test
lods
ret
out
clc
mov
loop
test
in
sahf
add
add
iret
int3
leave
test
std
ljmp
rol
add
cmp
int3
rorl
jle
gs
jp
jns
fstl
push
mov
gs
push
fcomip
adc
dec
pop
adc
insl
jge
jle
std
scas
ljmp
inc
push
dec
add
sub
sub
jecxz
js
add
insl
cmp
mov
push
xor
jnp
sbb
outsl
cmpsl
movsb
mov
decl
mov
repnz
div
call
icebp
jmp
lods
mov
fxch
mov
lahf
mov
sahf
xchg
xchg
scas
dec
fiadds
jg
or
sbb
mov
inc
pop
inc
add
pop
push
add
adc
lcall
or
push
push
pop
xor
add
pop
and
es
ds
and
das
es
pop
insl
adc
cwtl
xor
xor
sbb
push
pop
lock
nop
xor
sub
or
and
call
daa
mov
cli
out
xchg
or
cmp
jnp
jle
or
adc
mov
or
insb
xlat
adc
mov
xlat
lahf
push
ud2
mov
or
scas
add
into
test
xor
jbe
push
sub
mov
in
cmp
mov
dec
lods
push
inc
push
mov
jo
jle
xor
pop
fiaddl
inc
push
aas
xchg
adc
mov
pop
in
int3
inc
dec
jle
xor
push
push
ljmp
pop
adc
aad
inc
mov
pop
adc
in
loopne
push
sbb
adc
test
xor
mov
jo
cmp
into
rorl
sbb
mov
shl
xor
rcl
in
adcb
data16
outsl
enter
mov
movsb
push
dec
or
fs
jbe
jl
xor
adc
in
idivl
inc
mov
loope
inc
int3
lods
jle
sub
loope
test
xchg
sbb
adc
sti
sbb
clc
adc
outsb
pop
mov
xor
and
fsin
jo
inc
lods
inc
xor
mov
push
movsl
add
into
dec
adc
add
jecxz
pushl
add
or
xchg
xor
int
lock
shr
mov
lods
loope
outsl
cmpb
aam
lods
or
and
inc
scas
adc
xchg
sbb
pop
sub
and
fisubrs
cmpsb
xchg
hlt
or
mov
aas
pop
cli
xor
pop
gs
cmp
xor
xor
fs
shlb
jbe
pushf
lods
jnp
dec
and
lods
mov
cmc
inc
test
lods
add
das
sub
jle
cmp
pop
push
sub
mov
push
cmp
push
jnp
ret
aaa
inc
je
inc
ja
jnp
mov
addb
andl
loopne
sbb
xchg
sti
inc
fdivrs
addb
ret
fucomp
add
mov
cmp
std
lods
test
and
and
mov
repnz
out
pop
repz
xor
or
mov
cmpsl
adc
xchg
out
subb
std
les
fdivrp
or
popa
dec
jl
push
xor
into
inc
push
movb
jbe
xor
fsubrs
pop
mov
push
cmp
data16
or
decb
and
cmp
in
jle
mov
and
lods
mov
jo
into
nop
push
sahf
gs
push
aaa
out
int
push
fs
pop
mov
xor
shl
in
lods
inc
mov
xor
ss
loop
into
mov
fs
sbbb
in
push
mov
cmp
sub
lods
rorl
mov
inc
add
mov
lods
leave
adc
lds
mov
cmpl
movsb
cmpsb
push
sahf
inc
sbb
pop
lret
sbb
lock
testl
mov
sbb
fstl
pop
jno
adc
or
lods
popf
jg
jl
mov
fisubs
loop
pop
adc
out
mov
sbb
push
sbb
push
cmp
xor
cld
shl
pop
repnz
sbb
xor
scas
push
mov
push
sbb
add
aad
xchg
movsl
rolb
xor
and
data16
pop
dec
and
or
push
jae
jo
test
or
inc
stos
push
into
sbb
or
adc
pop
adc
mov
notb
int
stc
cmp
dec
jmp
push
scas
cwtl
in
nop
mov
and
pop
or
cmp
push
pop
xchg
push
inc
arpl
lods
sbb
imul
int
push
out
xchg
push
or
inc
iret
lea
push
and
cmp
test
jp
call
gs
push
dec
jno
dec
lock
dec
mov
mov
inc
aaa
hlt
scas
adc
adc
add
xor
imul
push
or
call
jno
sub
mov
sarl
push
sub
sbb
loope
sti
into
mov
cs
jmp
mov
shlb
push
jl
cmp
mov
mov
push
iret
jecxz
jno
pop
scas
add
sbb
add
mov
lock
mov
sahf
mov
pop
push
test
jp
gs
add
adc
adc
rcr
bound
adc
out
jne
cmp
sahf
test
or
jle
std
xchg
mov
or
cmp
adc
adc
outsb
push
aaa
mov
jne
jne
dec
cmp
push
loopne
inc
enter
adc
add
es
xor
test
xor
shrb
sbb
cmpsl
iret
clc
mov
or
sbb
mov
xor
add
fildll
jl
add
inc
adc
je
mov
idivl
rolb
mov
add
std
mov
mov
fcomip
and
cmp
inc
adc
adc
pushf
pop
scas
sbb
add
sbb
xor
sbb
lods
mov
push
adc
push
cmp
dec
jecxz
push
orl
mov
subb
imul
xor
sbb
aaa
std
inc
subb
add
stc
dec
inc
mov
aaa
push
jbe
fmulp
xor
sarb
xor
lods
and
inc
call
mov
and
pop
rdpmc
inc
fisubs
ja
hlt
jp
push
or
push
sbb
loop
lock
orb
les
dec
add
loope
jle
add
mov
adc
jo
mov
das
add
mov
mov
xor
iret
adc
jne
jge
or
lock
inc
cmp
mov
lea
or
lds
js
inc
xor
into
add
sti
pop
sub
adc
adc
xor
or
adc
push
push
xor
xchg
imul
sbb
inc
xor
movsl
or
and
pop
sub
bound
push
jl
cmp
imul
mov
leave
in
jmp
mov
fwait
fwait
pop
add
leave
add
hlt
mov
adc
xchg
dec
aam
and
fwait
aad
adc
pop
or
push
or
or
data16
icebp
jle
xor
rcll
or
jle
xor
jo
lcall
jno
pop
push
dec
xadd
mov
mov
mov
out
fbstp
dec
mov
xchg
inc
adc
jle
test
loopne
fs
and
out
or
and
adc
or
xchg
mov
and
or
arpl
or
movsb
mov
add
lock
rorl
jge
fsubrl
rcll
jle
into
xor
push
push
pop
jl
dec
int3
xor
mov
mov
or
into
lahf
cs
lret
into
push
dec
into
push
push
inc
push
dec
ss
inc
inc
mov
rorb
test
out
xor
into
repnz
test
or
or
fsts
into
ret
into
jns
adc
xchg
dec
or
shr
cmp
or
or
and
arpl
enter
mov
xor
push
cmp
pop
inc
mov
cmp
mov
insb
xor
sbb
dec
inc
cmc
test
loope
cld
movsl
into
mov
outsb
adc
or
add
test
add
enter
test
mov
jmp
dec
sbb
xchg
push
lret
outsl
cld
xor
jge
pop
das
inc
rcrb
adc
imul
scas
sbb
and
lahf
cmp
lods
inc
add
add
push
push
xor
enter
adc
lea
inc
mov
data16
sbb
fs
cld
adc
add
dec
int3
or
or
sub
inc
insb
addl
push
mov
call
xorl
lods
out
lea
fisubs
dec
roll
imul
xor
sahf
fs
pop
cmp
push
add
or
cwtl
add
jp
push
sbb
pop
sub
push
fs
js
cmp
jecxz
loopne
lea
outsb
cmp
fwait
xor
jle
pop
aas
lock
adc
aas
xchg
sub
xlat
ds
push
push
add
inc
andb
out
shll
lods
test
or
roll
xchg
pop
add
clc
dec
clc
inc
lods
xorl
mov
imul
pop
imul
push
xor
and
movsb
dec
int
fwait
jo
mov
xchg
cmp
icebp
pop
or
repz
aaa
push
mov
adcl
inc
test
inc
push
ljmp
sahf
mov
lea
stc
jo
pusha
mov
sahf
sub
aaa
ret
inc
insl
push
inc
lds
mov
inc
xor
jae
or
mov
inc
push
and
dec
inc
adc
call
jp
lock
cld
mov
call
sbb
sub
rolb
movb
out
jg
imul
sub
sbb
into
xchg
enter
outsl
loope
mov
mov
inc
adc
lods
pop
xchg
cmpsl
mov
mov
es
push
mov
jne
sbb
dec
dec
aaa
rorb
jl
or
lret
movb
pop
jl
rorb
lea
xor
lods
mov
or
iret
xchg
or
sarb
add
insl
dec
testb
cmp
outsb
inc
push
inc
pop
lods
dec
inc
cwtl
push
shrl
cli
mov
push
je
ss
push
pop
enter
mov
inc
inc
ficompl
inc
inc
cmpl
jle
ljmp
push
sub
lods
cmpsl
daa
inc
data16
fdivs
inc
push
bound
fadds
dec
inc
xchg
ss
xchg
xor
cli
pop
pop
nop
fnstcw
dec
push
sbb
stc
xchg
pop
dec
inc
testb
mov
lods
inc
loopne
push
add
or
xor
sbb
add
stos
pop
pop
inc
push
lods
sub
loop
mov
mov
cmpsb
stos
push
pop
inc
jnp
and
push
xor
sub
lods
push
std
das
andb
sub
sub
inc
sti
sbb
loopne
mov
out
inc
mov
popa
or
pop
aam
adc
roll
sbb
popa
mov
and
pop
punpckhbw
xor
int3
push
cmpsl
xor
mov
push
imul
push
jl
xor
jae
xor
arpl
outsl
sbb
jp
dec
shrl
mov
das
ret
ds
int3
adc
pusha
sbb
fwait
adc
shrl
enter
cld
push
test
aam
jnp
push
adc
or
subb
shl
rorl
adc
add
add
sbb
mov
orb
and
pop
in
mov
mov
sbb
and
mov
pop
dec
ss
enter
jge
fstpt
xor
ret
jbe
and
mov
push
stos
and
ja
hlt
vpmovzxwd
into
ss
lods
ja
pop
dec
jne
fdivs
dec
fstpt
movsb
mov
push
lods
sbb
push
mov
or
sub
insb
clc
inc
add
ret
test
pop
pop
cmp
push
nop
aas
pop
xor
push
add
mov
sbb
jbe
mov
cli
sub
mov
or
sbb
cmp
pusha
push
gs
cs
loopne
mov
push
push
lods
add
insl
xchg
mov
mov
adc
mov
jge
das
inc
push
jnp
mov
xchg
daa
popa
ficoms
add
imul
dec
shrb
je
lock
enter
xchg
sbb
jns
or
jne
sub
call
add
sbb
push
mov
popf
out
xor
mov
nop
ljmp
lcall
test
push
sbb
pop
push
xchg
inc
jle
xchg
fldcw
dec
sbb
test
stc
sbb
sub
lret
fcomps
lahf
lock
mov
sub
dec
mov
in
mov
popfw
call
or
ret
es
ja
mov
jle
xor
or
push
and
es
xchg
jnp
adc
mov
xchg
sbb
and
and
pop
inc
int3
cmp
lods
les
mov
mov
xlat
ljmp
cmp
icebp
fdivs
dec
push
dec
call
xor
pop
aaa
dec
cmp
shr
cmpsl
faddp
inc
movsb
sbb
aaa
bound
std
mov
fadds
scas
dec
dec
or
sub
adc
xor
lods
jmp
add
mov
add
mov
or
popa
adc
mov
mov
inc
lods
andb
mov
shrl
inc
xor
scas
push
push
push
hlt
xchg
lds
movsb
scas
dec
push
mov
fstpl
jne
adc
cmp
cmpsb
loopne
lods
jg
sar
mov
lods
lds
adc
jne
cmp
sbb
pop
aaa
jg
fwait
cmp
sbb
xor
inc
inc
int3
sti
imul
adc
add
das
dec
ret
testl
mov
and
add
adc
dec
xor
push
je
jmp
inc
cmp
clc
mov
lods
cmp
orb
mov
sub
pop
int3
inc
xlat
incl
push
fwait
inc
push
push
add
dec
mov
jl
cmp
outsb
inc
roll
add
add
add
cmp
dec
ret
das
pop
cmp
inc
adc
pusha
xor
inc
sbb
adc
adc
sbb
xor
ficompl
pcmpeqb
pop
je
adc
aad
xor
add
adc
xor
xchg
dec
mov
iret
fisubrs
into
cs
jle
fdivl
lods
dec
mov
and
add
cmp
push
leave
mov
push
add
inc
mov
mov
sahf
adc
popa
addr16
cmp
mov
push
mov
or
add
enter
pop
shr
mov
mulb
push
sub
orl
push
inc
aad
ds
inc
sti
ficomps
in
sub
inc
and
decl
mov
pop
test
movsl
mov
adc
add
nop
push
lret
arpl
mov
jb
xchg
mov
dec
jbe
add
test
pop
sbb
inc
jecxz
adc
mov
xor
scas
je
cmc
sub
movl
sub
adc
add
or
and
xor
inc
in
lods
loop
jp
mov
pop
jg
fdivs
pop
inc
sbb
sarl
inc
lods
xlat
mov
pop
mov
sub
pushf
mov
lods
mov
andl
inc
xlat
dec
inc
in
ret
loopne
cmp
dec
dec
dec
imul
dec
insb
pop
jae
mov
int3
test
addr16
mov
sbb
xchg
rcr
pop
xor
testl
xchg
sub
sbb
xlat
push
sub
jle
push
insb
sub
push
xorl
mov
mov
jne,pt
mov
mov
dec
add
sub
es
mov
lods
cmp
push
loope
cmp
push
jo
mov
inc
fisttpll
lods
in
jo
mov
dec
jl
xor
repnz
jb
add
push
adc
add
icebp
inc
adc
in
pop
push
ss
or
adc
cld
mov
sub
pusha
add
jl
std
fs
shlb
jb
mov
ja
inc
fisttpl
pop
dec
outsb
pushf
add
mov
xlat
pop
and
ljmp
loopne
dec
push
push
test
shlb
mov
out
jbe
jmp
call
sbb
js
ja
jp
mov
mov
mov
mov
into
xchg
lock
popa
int3
mov
mov
adc
pop
shl
fs
or
and
xor
flds
pop
dec
imul
fistps
scas
fsubr
shrb
and
clc
inc
and
pop
inc
fisttps
jo
push
bound
comiss
xorb
adc
nop
xchg
mov
std
int
adc
mov
add
loope
pop
into
dec
test
pop
push
push
stos
pop
sub
push
stc
push
jl
add
aaa
mov
pop
mov
faddl
dec
adc
sub
add
jle
in
sar
in
xchg
jle
xor
mov
pop
xor
adc
pop
loopne
mov
mov
xor
jbe
mov
lods
imulb
ja
into
js
mov
in
or
mov
jo
xor
or
sub
imul
sbb
or
stos
pop
push
mov
add
push
rorb
cmpsb
pop
gs
in
sbb
push
arpl
lret
pop
ss
jge
xor
outsb
push
adc
add
fdivl
add
sub
sbb
loopne
bound
xor
sub
jo
mov
mov
sbb
pop
dec
popf
jl
xor
push
ret
pop
pop
lods
insl
or
mov
mov
pop
lods
and
cmp
or
adc
mov
pop
push
or
adc
mov
in
push
push
adc
pop
cmp
add
ja
xor
xor
xor
dec
gs
add
dec
lea
stos
lock
shr
or
in
insl
mov
sub
outsl
mov
sbb
test
sbb
xor
xor
ds
dec
dec
dec
or
mov
repnz
out
enter
mov
pop
or
loopne
jbe
jle
cmc
out
and
enter
xlat
dec
jg
sbb
push
jl
frstor
xor
adc
inc
xor
cmp
in
jle
xor
pop
lock
or
into
cmp
aaa
and
sub
mov
jo
das
into
jo
scas
out
into
icebp
scas
push
data16
pop
les
adc
and
sbb
dec
and
and
into
push
addl
cmp
inc
incl
inc
sub
jo,pt
dec
xchg
jns
and
data16
pop
sbb
jnp
ret
adc
sub
xchg
stc
jne
pop
xchg
add
loope
inc
gs
inc
or
loop
popf
sbb
test
int3
cmp
inc
jo
lods
dec
jp
pop
inc
mov
nop
mov
adc
or
into
sbb
cmpsb
xchg
in
cmp
jne
or
loopne
movl
popa
adc
mov
xor
cli
decl
mov
jl
xor
lcall
lods
sub
es
push
bound
outsb
rcrb
mov
inc
or
cmpsb
push
lcall
push
adc
mov
xor
ja
imul
adc
sub
xor
push
sar
ret
into
jnp
xchg
test
inc
inc
push
in
ljmp
fidivrl
les
mov
mov
xor
xchg
das
inc
mov
ret
imul
lcall
pop
xchg
cmp
sbb
nop
push
fsubrl
adc
lods
mov
or
mov
shlb
and
push
call
movsl
imul
stos
ss
add
in
dec
push
imul
sbb
jno,pn
add
mov
pop
dec
aaa
loopne
in
pop
enter
pop
push
jbe
inc
sbb
rorb
add
rcl
ss
stc
mov
sbb
in
cmp
popl
rorb
xor
cmpb
and
pushf
ficompl
mov
sbb
pop
xchg
enter
addr16
add
lods
or
and
mov
dec
in
cld
add
dec
jbe
xchg
sbb
mov
xchg
dec
shr
add
enter
popl
push
mov
xor
dec
ret
mov
fadd
pushf
fstpl
into
jno
lea
nop
pushf
add
jo
inc
popf
cmp
inc
sub
scas
cmp
add
in
jp
sbb
dec
rclb
leave
jle
pop
lock
into
xchg
fildll
in
movd
adc
lock
mov
outsb
pusha
shrl
sbb
mov
or
xchg
addr16
sub
inc
or
clc
into
into
xchg
je
add
bound
movb
pushf
out
movb
je
sbb
pop
or
dec
jo
jecxz
fcoms
call
and
sbb
repz
mov
xchg
and
pop
and
add
inc
xor
lods
sbb
loopne
divl
lods
cltd
test
out
enter
rclb
sub
inc
inc
add
cmpb
cmp
scas
dec
sahf
popa
adc
lcall
dec
popf
lea
cld
inc
cmc
vfnmaddsd
dec
iret
stos
inc
stos
imul
shll
jbe
shrb
inc
adc
jne
dec
xor
dec
sbb
insb
popa
mov
adc
hlt
lds
inc
push
pop
push
cld
sahf
lret
or
sbb
pop
jne
imul
pop
pop
mov
and
bound
pop
push
loopne
cmpsb
test
inc
insb
shlb
insl
or
inc
inc
mov
or
sbb
mov
adc
into
subb
xchg
shrl
jl
inc
add
sbb
lds
sbb
mov
mov
bound
sti
jl
out
xor
nop
imul
push
jne
insl
pop
pop
in
jg
js
mov
out
int3
ret
fistl
mov
lds
push
add
push
ret
pop
andl
mov
lock
cs
das
add
call
mov
push
pop
inc
mov
and
inc
dec
fadd
ja
mov
scas
repz
sbb
outsl
and
xor
sbb
fdivrl
fsubrl
push
xor
mov
mov
mov
or
imul
lret
jmp
jb
adc
sbb
sub
enter
jne
cmp
bound
inc
xor
fldt
adcl
int3
push
popa
int3
inc
lods
nop
lods
insl
mov
mov
int3
inc
inc
pop
add
push
fdivrl
addl
jle
dec
adc
test
mov
pop
adc
and
lods
lret
mov
sub
js
popf
invd
xchg
mov
mov
sbb
mov
fbld
into
fwait
movsb
add
push
leave
bnd
popa
xchg
fcompl
enter
movsl
sub
jp
repz
jno
pop
call
add
mov
rorl
fldenv
loop
popw
jne
subl
pop
add
adc
and
dec
into
pop
aas
test
lea
into
dec
cli
push
jnp
adc
fstp
adc
jbe
std
dec
jno
cmp
test
dec
in
jp
adc
inc
sarb
inc
into
add
in
dec
rol
jge
push
and
fisubrs
fldcw
adc
sbb
insl
in
push
or
pop
jo
cwtl
ds
or
ljmp
or
negb
jbe
sub
dec
pop
push
jb
ss
lock
inc
pop
rorb
jle
mov
test
ds
xchg
inc
lods
jnp
sbb
inc
fnsave
sub
mov
pop
push
clc
movsb
add
and
in
inc
addl
inc
lock
mov
repnz
rcl
adc
or
aas
sub
int
loope
inc
lret
jp
cmpb
mov
mov
mov
mov
jp
add
jl
scas
movsb
pop
mov
fidivrl
sbb
sbb
pop
out
and
fsubl
cmpl
arpl
mov
lock
pusha
and
fs
aad
push
push
xchg
push
addr16
cmp
dec
sub
int3
pop
jl
xor
mov
out
push
mov
mov
aas
jge
fwait
add
gs
pop
ror
or
lods
les
dec
add
dec
pop
or
fcompl
inc
int3
push
popa
xor
das
pop
mov
shrb
jp
jecxz
mov
das
pop
inc
xchg
sub
jp
jge
sub
imul
sbb
in
loopne
push
sub
sbb
cmpsl
sbb
sbb
push
sahf
mov
jbe
lods
sub
jl
sbb
sarb
inc
loopne
or
je
add
repnz
stos
pop
test
popa
dec
sti
jae
pop
and
inc
ds
rol
adcb
xchg
push
lahf
rclb
cmp
mov
dec
pop
lods
pop
test
cld
ffreep
push
mov
xchg
push
sub
btc
mov
test
cmp
popf
jb
push
and
or
xor
stos
outsb
add
cmp
add
add
add
pop
cld
inc
aam
fwait
xor
dec
inc
bts
sub
ficoml
daa
ds
mov
adc
ficoms
adc
mov
sbb
cmc
lock
jp
pushf
pusha
sti
ret
inc
gs
rcr
cltd
pop
pusha
jns
sub
fcmovnu
int3
pop
pop
aad
js
jge
cmp
dec
ss
adc
add
out
sbb
push
roll
fidivs
movsb
ss
fistl
inc
fistpl
sbb
mov
or
addr16
jmp
adc
sbb
cmp
loope
nop
push
push
popa
scas
xor
jp
lods
cmp
adc
inc
xor
loopne
xor
mov
xor
jno
inc
fidivs
adc
fwait
sub
mov
xchg
xchg
mov
inc
pop
sahf
add
fadds
test
dec
dec
int
lods
lea
add
lods
lret
mov
jl
xor
mov
shlb
cmpsb
adc
cmpsb
lret
imul
aam
push
mov
xchg
mov
mov
cs
dec
lods
push
jb
and
sbb
mov
lock
pushf
mov
and
data16
insl
push
push
adc
add
dec
scas
jbe
cmp
imul
lock
cmp
mov
iret
adc
inc
mov
push
push
mov
add
or
stc
xor
shl
cwtl
cmp
sbb
das
push
pop
and
xchg
insl
xchg
mov
xchg
pop
test
push
inc
iret
icebp
loopne
popa
arpl
mov
lods
sti
mov
je
xor
sub
fidivl
data16
mov
fmull
push
xor
pop
adc
js
divb
fidivl
js
push
cli
inc
jo
or
mov
into
adc
xchg
sahf
mov
outsb
push
mov
das
inc
test
sbb
add
jge
cmpsb
pop
stc
and
adc
dec
push
sti
mov
inc
mov
pop
adc
adc
pushf
imul
mov
jecxz
js
into
or
cmp
inc
into
add
fldenv
fdivl
dec
notb
insb
jne,pn
push
out
and
or
adc
push
inc
xor
dec
dec
das
mov
fmull
jge
xchg
idiv
arpl
into
adc
push
into
pop
mov
repz
xor
xchg
dec
ljmp
xchg
push
into
xor
ficomps
jl
adc
sub
mov
xor
int3
adc
std
int
push
scas
inc
cmp
gs
sbb
outsb
sbb
mov
movsb
xchg
jl
push
iret
xchg
jns
or
lods
dec
dec
pop
push
jns
iret
dec
int
ljmp
dec
add
inc
mov
inc
mov
scas
adc
xor
pop
sub
jg
lea
and
push
movb
mov
scas
loopne
push
lcall
pop
inc
sahf
cmpsb
mov
push
push
inc
inc
mov
dec
imul
dec
je
push
mov
insb
mov
shll
in
and
mov
fwait
xchg
xchg
or
sbb
push
add
pusha
clc
pop
lea
shlb
mov
sbb
adcb
loope
je
xor
jmp
and
and
in
dec
rolb
xchg
mov
or
shrb
je
inc
outsb
test
and
add
ds
inc
adc
xor
mov
xor
mov
int
push
scas
add
xor
inc
push
jge
xor
cmp
lods
xor
dec
lods
mov
fcomp
cli
std
pop
mov
sarl
xchg
cwtl
sub
js
jo
mov
mov
mov
outsb
fdivl
mov
ds
mov
outsb
dec
sbb
pop
call
sbb
pop
xor
push
rcl
addb
cltd
outsb
dec
push
mov
push
cmc
movsl
clc
std
push
add
sbb
or
lods
shll
cwtl
in
add
push
fbstp
inc
into
js
out
xor
jo
inc
sbb
int
test
rcr
mov
test
xor
add
jecxz
test
push
aam
mov
shlb
sbb
daa
je
mov
ffreep
mov
inc
sub
mov
jbe
bound
mov
movsl
aad
mov
shlb
fiaddl
lret
testb
shll
divb
sub
mov
cmp
lods
xchg
ficompl
imulb
push
iret
xchg
lods
jb
lret
mov
mov
xor
dec
push
inc
nop
inc
imul
ret
add
mov
inc
xor
sub
daa
rolb
dec
stos
sub
mov
sub
mov
lock
cmp
lcall
jmp
lods
addr16
mov
xchg
pop
sub
push
loopne
or
adc
add
push
xchg
jmp
lret
je
aas
loopne
das
add
or
and
adc
pop
inc
or
stos
jle
inc
das
push
enter
testb
adc
cmpsl
mov
pusha
inc
scas
nop
jl
pop
jae
sbbb
lods
int
push
pop
int
adc
in
dec
jle
enter
mov
out
leave
cmpb
pop
jb
push
adc
mov
pop
jle
mov
push
or
push
sbb
icebp
or
sub
pop
inc
push
popw
add
pop
xor
pop
mov
or
shrb
pop
mov
icebp
inc
jge
leave
add
sbb
xor
inc
shlb
xor
jns
sub
adc
int3
inc
sysexit
or
aaa
mov
ja
pop
jne
cmp
and
lret
add
divl
push
je
pop
cmp
adcl
pop
sbb
inc
mov
popl
xor
cmp
inc
or
cwtl
pop
dec
push
arpl
add
bswap
aad
mov
dec
lea
adc
add
rcr
mov
pop
idivb
out
pop
pop
add
clc
jge
outsl
jecxz
add
lcall
add
insb
lods
cmpsb
pushf
inc
dec
and
in
adc
inc
mov
ds
mov
cmpl
enter
pop
xor
fstl
inc
je
adc
lods
inc
xor
addb
call
xor
or
mov
xchg
rcrl
ret
js
out
ret
mov
jo
add
inc
filds
inc
adc
push
mov
addr16
sbb
xlat
sbb
pop
mov
les
jnp
mov
mov
icebp
fstpt
fsubr
jbe
mov
dec
sarl
lods
lock
push
popa
daa
xchg
jo
or
mov
dec
rolb
ljmp
inc
pushf
inc
enter
notb
push
or
enter
or
ja
adc
lds
push
dec
add
cwtl
push
push
cmpsb
scas
xor
std
insl
jmp
push
xor
pop
xchg
lret
push
or
movsl
push
dec
test
mov
mov
dec
adc
ss
jecxz
push
cmp
lock
das
and
mov
adc
adc
clc
imul
test
xchg
mov
ja
sbb
xor
std
arpl
push
mov
fs
loopne
js
pop
adc
xchg
adc
mov
mov
inc
pop
rclb
or
lret
dec
daa
in
mov
jno
pop
push
pop
and
mov
addb
ss
cmp
adc
mov
ja
enter
or
xor
iret
jle
hlt
scas
inc
into
pop
movb
pop
adc
push
lds
xchg
xchg
cmpsb
xor
inc
or
je
repnz
pop
and
popa
dec
pusha
and
jae
jle
arpl
lods
scas
scas
rcr
popf
cmc
sbb
push
insl
mov
add
adc
icebp
insb
add
inc
shlb
sbb
sub
cmp
test
popa
cmp
sbb
pop
or
push
xchg
xorl
push
pop
test
jo
push
popf
cmpb
lds
jl
fidivs
pop
pop
adc
or
add
add
adc
inc
rol
inc
lea
lds
xchg
in
in
lcall
add
enter
pop
xor
cwtl
push
fadds
jnp
jbe
mov
fisubrs
cmc
insb
js
push
inc
xchg
adc
sbb
push
xor
dec
jnp
mov
bound
jne
dec
xor
cmpsb
jbe
cmp
pop
mov
pop
sub
inc
ret
aad
add
sbb
cwtl
out
dec
into
test
stc
int3
push
push
das
or
cvtps2pd
stos
sbbb
into
adc
pop
add
xor
adc
push
jnp
int
mov
dec
mov
and
or
inc
lods
push
push
test
sbb
mov
xlat
sub
mov
xor
aad
mov
adc
sub
push
iret
mov
sbb
add
push
push
js
mov
enter
addb
xchg
or
popl
mov
dec
stos
jg
add
mov
and
xor
stos
inc
pop
xor
inc
pop
jle
rclb
insb
dec
arpl
aaa
movsb
mov
loopne
pop
sub
sbb
push
add
mov
pop
imul
imul
cmpsb
or
sbb
push
inc
xor
push
xchg
daa
mov
rorl
test
inc
pop
jne
xor
ja
pop
pop
les
push
adc
cmp
imul
xchg
loopne
lods
add
xchg
cld
test
sbb
and
add
mov
outsb
test
int
sbb
or
xorl
cmc
roll
xor
addl
nop
les
add
test
mov
daa
fcoms
pop
add
in
xor
and
push
sbb
insl
add
mov
test
sbb
inc
sbbl
cltd
shll
xor
xor
and
pop
jbe
nop
inc
or
push
pop
hlt
sub
add
ja
mov
cmpsl
out
leave
inc
into
mov
rcrl
bound
inc
and
shlb
mov
and
inc
shll
adc
rorl
lcall
inc
jnp
adc
mov
jp
push
int3
sti
sbb
adc
into
pushf
std
insl
mov
stos
inc
call
cmp
bound
gs
mov
pop
in
cmpb
inc
in
cmc
jge
mov
dec
enter
sbb
into
ds
push
lods
pop
jnp
or
push
mov
adc
push
lahf
into
mov
mov
push
pusha
cmc
cmp
movsb
ja
and
mov
lahf
push
pop
lods
imul
rorl
xor
bound
ds
pop
rorb
dec
pop
scas
nop
sbb
xor
aam
xchg
aas
sbb
add
add
cmp
movsl
scas
inc
movsb
lret
pop
fs
push
xor
jmp
pop
loopne
xor
jno
aad
jnp
and
das
adc
push
hlt
pop
movsb
adc
rorb
dec
xor
cmp
lcall
rcll
pop
test
push
mov
lods
daa
push
cltd
dec
repz
jne
pop
into
push
jmp
aam
leave
popa
xor
out
and
fdivs
lds
jne
hlt
lock
push
shl
pop
dec
test
cmp
adc
adc
popa
iret
xchg
lods
push
push
sbb
test
in
mov
xor
ljmp
lods
and
out
sub
sub
inc
call
cld
and
lock
adcl
push
jle
push
subb
inc
or
or
inc
fiaddl
sbb
mov
outsl
xchg
call
inc
inc
xchg
inc
xchg
jle
cmp
or
outsb
adc
pop
lods
in
into
xchg
mov
je
sbb
testb
push
scas
jmp
scas
out
sub
out
inc
fiadds
sbbl
adc
lret
push
add
cmp
or
int
jne
stos
push
into
popf
jl
mov
push
add
sarb
adc
push
movsb
out
xchg
push
sbb
mov
jmp
outsb
cmpsl
push
dec
push
inc
jne
dec
xchg
les
xorl
lods
pop
jb
dec
int3
cmp
lcall
cmp
adc
fs
push
enter
pop
mov
fs
jb
cld
add
inc
jp
pop
sbb
test
out
and
mov
jp
add
dec
leave
stos
fcmovb
add
les
test
fstl
sub
mov
inc
mov
std
jb
fs
enter
inc
paddsb
or
inc
loopne
push
ret
sarb
lods
jne
mov
fldln2
xor
popf
pop
lret
push
lret
mov
fadds
mov
adc
jle
cmp
pushf
mov
iret
xchg
out
sar
scas
inc
dec
repz
das
dec
sbb
jle
pop
mov
mov
divb
inc
mov
test
es
pop
xchg
cmpsl
xchg
push
lock
ss
adc
sbb
add
fbstp
xsave
ret
xor
mov
pop
xchg
je
or
outsl
inc
dec
test
cmp
jbe
dec
rolb
fildl
jno
rclb
sbb
outsl
rolb
cmpsl
xchg
push
xor
sbb
push
push
pushf
sub
xor
adc
outsb
jno
mov
mov
popf
mov
lods
loope
cld
movl
xchg
dec
pop
enter
mov
mov
cwtl
pop
push
cs
adc
ficoml
inc
xchg
aaa
push
dec
scas
fdivrl
dec
lods
mov
jo
lods
flds
add
movsl
or
enter
sahf
sub
xchg
xchg
push
arpl
fisubrs
jge
scas
lret
adc
push
jns
mov
push
xor
xorb
fwait
inc
clc
sbb
cmp
or
call
add
cmovno
jle
xor
dec
dec
sbbl
mov
std
add
adc
aaa
dec
jge
add
lds
xor
fstpt
add
mov
xchg
sbb
sahf
mov
outsb
out
outsb
adc
inc
jl
adc
xor
ds
cld
cmp
sbb
xor
xor
xor
sbb
std
cmpsl
jne
xor
jl
sbb
inc
xor
test
popf
out
push
sub
dec
and
imul
test
scas
xchg
mov
xchg
dec
sub
jg
cmp
enter
shll
mov
lahf
into
xchg
pop
adc
iret
ljmp
xor
or
imulb
cmp
inc
add
adc
inc
lds
xchg
sub
adc
mov
mov
sbb
iret
scas
pop
push
fisubl
cmp
scas
dec
sbb
pusha
std
mulb
sbb
mov
cs
or
dec
xchg
scas
cmp
inc
sbb
inc
pop
and
dec
scas
fwait
push
test
test
xchg
sub
das
dec
sbb
mov
loopne
push
jne
inc
add
decl
test
and
sbb
pop
iret
push
int
or
push
add
aaa
mov
pusha
xchg
inc
enter
sti
repnz
bound
push
das
insl
xchg
scas
dec
push
ficompl
mov
inc
inc
dec
mov
movsl
inc
shlb
inc
cwtl
incb
pushl
lea
sub
sbb
movsl
or
dec
pop
dec
pusha
add
xchg
mov
cmp
xchg
mov
cld
add
mov
mov
fmuls
xor
inc
ss
iret
push
jg
push
cld
or
fidivl
hlt
bound
push
dec
push
mov
ret
pusha
shll
dec
adc
adc
jle
xor
les
mov
into
dec
into
in
cmp
cmp
mov
sbb
clc
sub
sbb
jg
jl
xor
into
push
into
lods
or
cmpl
jbe
sub
lcall
sbb
dec
sti
xchg
fs
sbb
add
cmp
enter
imul
sbb
cmp
jle
xor
xchg
pop
mov
adc
ljmp
nop
int3
jbe
dec
mov
add
adc
cmp
and
xor
sub
lods
jne
xchg
mov
cmp
mov
in
cmp
cmp
dec
or
cmpsb
int
dec
dec
cmp
das
pop
mov
and
bound
xor
scas
fs
dec
imul
dec
cmp
jle
aaa
scas
into
mov
jge
xor
cmp
mov
icebp
ret
xor
lods
ljmp
push
out
and
ret
dec
mov
mov
in
loopne
push
out
xchg
add
ljmp
sahf
and
iret
int
or
ljmp
ja
pusha
fcmovnbe
or
data16
inc
scas
rcl
ds
mov
sbb
xlat
jp
aas
movsl
shlb
xor
inc
movb
jo
inc
loope
inc
xor
das
adcb
ficompl
inc
jmp
repnz
add
jns
call
mov
cmp
adc
jl
js
shlb
rclb
dec
ret
out
pop
rorb
mov
scas
mov
ss
mov
mov
or
jne
mov
inc
lods
out
cmp
pusha
push
insb
jge
jbe
imul
jne
test
sti
pop
lock
and
dec
das
gs
xchg
sbb
pop
shl
inc
mov
jmp
cmp
data16
out
mov
jle
jb
adc
sbb
sub
test
and
ror
sub
cmp
loope
push
out
mov
dec
sub
push
fsubrl
push
push
pusha
add
xor
cmp
iret
inc
testl
lea
xor
mov
inc
test
outsl
push
jb
xor
int
and
xchg
rorb
sbb
jecxz
xor
bound
loope
insl
or
push
xchg
dec
dec
add
mov
loopne
cmp
xchg
dec
fiaddl
test
repz
rorl
dec
andl
lods
scas
pop
jne
mov
add
outsb
xchg
xor
outsb
mov
outsl
mov
sub
sub
test
pop
or
and
pusha
gs
pusha
add
pop
nop
add
dec
sbb
and
scas
jnp
fidivs
out
jg
xor
rorl
mov
xchg
push
inc
adcb
ret
scas
push
xor
sbb
xchg
cmp
push
xchg
push
addl
mov
adc
inc
or
push
pop
je
test
push
lods
daa
or
subl
cmpb
xchg
fistpll
js
stos
adcl
je,pt
outsb
lods
push
jb
jne
xchg
adc
lods
xor
xor
adc
sbb
insb
mov
jne
call
sbbl
dec
push
dec
movb
pop
fisttps
shlb
pop
inc
lods
adcb
bsf
push
mov
dec
jne
inc
sub
and
scas
mov
dec
outsb
and
or
xor
inc
xchg
imul
mov
test
adcb
pop
or
cs
dec
fs
scas
icebp
adc
mov
adc
test
lods
mov
es
xor
cmp
dec
lret
jne
hlt
fdivrp
add
ret
push
add
push
lds
mov
adc
inc
or
push
jmp
push
cmp
pop
negl
jp
cs
ud1
sbb
ss
insb
mov
jle
or
arpl
inc
push
xor
repnz
data16
push
pushf
insb
mov
mov
scas
imul
dec
push
push
jge
sbb
lock
pop
mov
into
inc
adc
test
adc
je
ds
scas
dec
iret
inc
jns
stos
jns
xor
ret
mov
aaa
mov
push
cld
outsl
xor
pop
enter
xchg
ss
lds
lds
faddl
mov
int3
dec
jae
shll
arpl
add
adc
clc
xor
jbe
loop
subb
incl
xor
add
cmp
cs
subb
lret
sti
scas
jmp
cmp
fwait
pop
scas
sub
mov
js
test
shlb
push
rclb
lret
pop
push
pop
sub
mov
lods
out
jg
or
pop
dec
jg
xor
dec
shlb
das
xchg
push
fcmovnu
xor
iret
push
dec
or
adc
pop
sti
jg
aam
dec
push
push
cli
lds
gs
jne
incl
xchg
pusha
dec
scas
pop
movb
int
iret
popf
push
inc
mov
pop
enter
jg
xor
inc
ret
or
into
lds
cmp
or
or
xor
mov
add
dec
inc
dec
sbb
bound
movsl
imul
add
test
stc
inc
jge
inc
jb
cmp
pop
into
imul
push
out
int3
xor
jmp
add
rcrl
iret
or
cmpb
mov
xchg
cmc
jo
fisubrl
adc
push
add
insb
inc
popf
andb
loop
insb
sub
pop
fsubl
or
cmp
fdivrs
mov
fimull
out
and
or
inc
lret
push
int3
adc
lods
mov
sbb
xchg
sub
push
daa
in
jp
aas
cmp
cmp
pop
inc
xor
ds
inc
and
fs
cmc
icebp
gs
pusha
dec
mov
inc
push
popa
mov
clc
push
dec
jae
cltd
inc
imul
dec
add
sarl
cwtl
imul
sahf
jo
orb
and
add
test
xor
mov
stc
lods
adc
sbb
pop
push
xchg
andb
mov
insb
outsb
push
xor
mov
mov
nop
pop
cmp
lods
inc
adc
mov
xor
les
mov
mov
inc
loopne
pop
test
xor
mov
xor
inc
dec
shlb
xor
cmp
aas
pop
push
sub
sbb
xchg
mov
cli
add
lret
aas
xor
call
fwait
xchg
lcall
or
jg
rcll
jmp
add
xor
add
cmpb
sub
push
into
pop
adc
scas
dec
js
out
lock
mov
sbb
xor
loopne
adc
ja
sbb
sub
lock
clc
lock
arpl
sbb
sub
jl
jne
into
or
jae
adc
add
mov
nop
adc
pusha
mov
scas
sub
push
jle
xor
pcmpeqb
cli
pop
pop
adc
int
das
jl
adc
fmulp
lea
sbb
adc
sbb
bound
pop
add
gs
or
dec
sbb
mov
filds
ret
pop
push
push
lcall
jae
dec
lret
into
mov
sub
push
push
cwtl
inc
pop
mov
ljmp
lcall
pop
sub
sub
ret
icebp
and
xchg
sbb
pop
xchg
sub
jo
or
test
push
orb
xchg
adc
mov
stos
loopne
lahf
shlb
inc
adc
pop
mov
mov
incb
in
not
adc
fnstsw
in
mov
paddusb
dec
xor
adc
pop
cmpsl
xor
jle
push
adc
inc
dec
push
rorw
cltd
mov
push
fistpl
or
xor
repnz
fnstenv
cld
rorl
xchg
lahf
add
dec
out
mov
xchg
xchg
into
inc
pop
dec
push
insb
adc
in
sbb
fmuls
push
fcmovnu
and
ret
adc
or
dec
inc
inc
fistpll
cmp
test
inc
xchg
dec
sbb
add
adc
outsb
enter
loopne
push
xor
add
stos
pop
push
dec
daa
sub
mov
mov
aaa
icebp
mov
inc
lahf
or
adc
sub
sub
sbb
sbb
jmp
adc
mov
jno
push
in
push
addr16
dec
cmp
xor
jecxz
jg
lods
js
fcomps
dec
dec
daa
jo
adc
inc
push
dec
dec
into
ds
sarl
sbb
cmp
cmp
rcl
outsb
push
push
push
xchg
or
jmp
add
adcl
push
outsb
imul
shlb
xorb
dec
rorl
dec
movsb
push
inc
dec
inc
add
daa
push
ja
daa
add
das
in
mov
xchg
enter
daa
fiaddl
mov
mov
xor
xor
and
jg
xchg
daa
jl
inc
sbb
xchg
popf
xchg
mov
inc
inc
sub
sbb
or
mov
ds
mov
mov
lods
and
test
scas
or
jno
es
lods
into
sub
jne
or
lock
inc
jg
xchg
rolb
das
inc
jbe
xchg
inc
loopne
sub
je
or
xchg
cltd
xor
adc
push
inc
mov
ret
stos
mov
ret
xchg
inc
aam
inc
sbb
pop
fst
cli
das
or
inc
and
in
pop
jne
ss
pop
cmp
test
pop
mov
and
shlb
fcompl
test
dec
mov
dec
push
cmp
inc
dec
adc
mov
int3
test
enter
jmp
cmc
inc
das
inc
sbb
and
pop
inc
lea
push
ds
sbb
movl
fs
ret
jo
into
sbb
and
repz
mov
imull
mov
jecxz
rcll
jno
int3
outsb
hlt
enter
lods
mov
jno
in
fxam
push
arpl
rorl
lods
or
ljmp
std
sbbl
inc
mov
cmp
stc
ds
or
popa
sub
popa
cmp
jbe
mov
sbb
add
or
xor
and
mov
and
xchg
or
mov
push
ja
adc
jge
or
push
dec
inc
mov
lock
inc
inc
push
cmpl
inc
and
nop
mov
add
jnp
rcrl
test
out
and
scas
sbb
jb
enter
jno
jge
jns
jnp
sbb
add
inc
or
mov
mov
cmp
popa
out
fsqrt
push
xor
jg
fs
lods
jne
into
jbe
push
in
push
pop
push
inc
xchg
inc
movsl
mov
insl
push
jne
xor
rorb
mov
aad
and
sbb
test
ss
ss
add
test
inc
loope
jno
push
push
jns
pop
dec
pop
push
mov
scas
pop
loope
cmp
es
push
aaa
outsl
fstpl
lods
xor
inc
in
mov
xchg
ds
out
clc
inc
xchg
jg
pop
je
int3
push
mov
inc
inc
or
lds
cs
addl
cltd
push
cli
lcall
int
cld
add
imul
fcomp
and
dec
mov
imul
fldenv
test
pushf
call
pop
push
rcll
add
mov
popf
stos
lds
ret
sti
lds
outsb
iret
das
inc
sbb
push
cmp
movsl
add
xor
pop
pop
push
pop
lahf
pusha
or
xor
push
dec
push
xor
xor
pop
cld
or
bound
shrl
stos
outsb
icebp
jne
test
or
sbb
int3
pop
into
adc
inc
adc
repz
rclb
xchg
jb
cmpsb
lods
stc
shlw
jnp
pop
outsb
jg
adc
jecxz
mov
jne
outsl
cmp
ret
outsl
nop
daa
xor
sub
cs
mov
out
mov
cwtl
outsl
jp
nop
icebp
clc
push
lock
cmpsb
movl
out
out
push
popl
sub
call
and
cmp
call
xor
push
push
mov
lods
push
xchg
sahf
sub
fdivl
mov
sbb
sbb
icebp
dec
inc
movsl
in
xchg
cmpb
jmp
nop
adc
jns
into
xor
sbb
mov
mov
xchg
bound
pop
jmp
cmp
push
or
sarb
mov
sub
mov
aas
xchg
out
pop
dec
cmp
jp
push
jp
cmp
addr16
pop
add
pop
les
es
sub
mov
pusha
repnz
arpl
leave
insb
xlat
lock
cmp
push
cmp
inc
mov
mov
dec
mov
jp
xchg
pop
sarl
mov
sbb
in
call
pop
cmp
add
xchg
jo
shll
adc
or
adc
mov
clc
stos
xchg
jb
or
imul
lods
ds
or
int3
mov
sub
lock
adc
iret
inc
test
lds
test
inc
mov
dec
ficoml
in
incl
mov
add
dec
mov
add
or
or
dec
sub
cmpsl
sub
and
incl
cmc
addb
or
xchg
cld
shrl
jo
cmp
pop
mov
push
pushf
orb
dec
insb
jbe
sbb
xchg
jp
xor
stos
loopne
gs
adc
sbb
jmp
pop
pop
mov
mov
jno
xor
sahf
mov
push
add
adcb
daa
add
mov
push
cmp
jg
add
adc
in
xchg
lods
inc
adc
mov
insb
dec
rcll
dec
sti
and
bound
and
or
push
sbb
jnp
mov
popa
cmpsb
scas
enter
sbb
mov
shrl
nop
outsb
push
daa
into
adc
test
push
ljmp
arpl
push
fcoml
push
insl
sub
push
ds
jo
adc
push
dec
mov
repnz
decl
push
into
xchg
inc
and
xorb
cmpsl
ret
push
sbb
int
xor
test
xor
mov
push
or
mov
js
dec
jp
add
cmpsb
or
and
cmp
mov
or
push
out
add
outsw
sub
pop
push
out
enter
dec
imul
pop
mov
int3
stos
enter
js
xchg
xchg
push
fistpl
dec
xor
dec
jg
lods
mov
addr16
cmp
scas
push
sub
sub
adc
adc
lock
dec
into
cwtl
add
mov
je
adc
mov
push
mov
jo
mov
lods
pop
or
ss
loopne
push
int3
push
aam
mov
or
loope
mov
add
jne
sar
gs
mov
pop
test
int3
mov
push
js
jmp
lods
xchg
and
pop
ret
sbb
push
aam
xchg
je
lods
into
pop
inc
jne
test
adc
jle
push
ja
mov
mov
jnp
cltd
jne
dec
je
aam
daa
pop
add
cmp
insb
pop
mov
xchg
or
scas
dec
imul
loopne
cmp
cmp
xor
mov
push
dec
mov
fcomip
adc
popa
add
data16
xchg
into
adc
xchg
jp
dec
ja
push
xchg
fs
jns
sbb
sbb
add
scas
push
movsb
dec
jb
nop
in
and
dec
push
jb
ror
xor
push
jmp
mov
cmp
ljmp
sbb
popa
scas
pop
xorb
add
les
shl
pop
adc
cli
add
mov
cmp
or
mov
rorl
or
sbb
sub
mov
adc
mov
inc
cs
jnp
pop
mov
pop
pusha
sbb
cmp
movsb
inc
flds
push
aaa
add
loopne
in
add
sysexit
mov
push
inc
mov
inc
scas
pop
sbb
js
lcall
inc
loopne
sub
jmp
lods
test
xor
ffreep
outsb
sbb
sbb
sbb
sub
data16
sub
dec
pop
mov
in
lcall
and
pop
imul
cmp
lods
std
push
inc
xor
inc
mov
push
test
loope
fs
xor
lock
and
lahf
ja
dec
scas
cltd
dec
inc
push
or
xor
addr16
ljmp
xor
sub
lret
add
mov
lea
fstl
jmp
jbe
push
cmp
push
push
dec
roll
jb
cs
sbb
ds
ss
imul
sbb
adc
mov
fcmovne
push
inc
rorl
dec
or
lods
add
cmp
js
mov
movsl
xor
in
inc
and
inc
mov
hlt
iret
cltd
or
imul
jg
scas
xor
xchg
mov
cmp
mov
sbb
cmc
negb
mov
push
pop
filds
inc
insb
inc
add
int3
mov
fmull
push
dec
int3
xor
dec
stc
rclb
sbbb
movsl
adc
and
xor
out
insb
dec
inc
add
mov
es
push
js
in
sbb
or
gs
shr
js
lret
add
popa
pushf
mov
add
lods
or
xchg
cmpsl
cmp
mov
ds
inc
pop
and
add
xor
outsb
inc
cwtl
xor
lea
push
dec
sarb
cmp
sub
mov
inc
dec
ja
xchg
or
mov
dec
cld
push
pop
and
orl
std
jl
inc
xor
les
inc
aaa
mov
push
call
mov
inc
xchg
add
xchg
xchg
aaa
adc
mov
xor
inc
mov
mov
adc
mov
aad
adc
inc
imul
jo
call
xor
inc
add
inc
js
inc
jecxz
imul
dec
test
mov
loope
sbb
and
into
lret
fisttpl
mov
mov
push
ret
fildl
mov
std
push
aad
mov
fs
sbb
dec
das
jl
fs
dec
sbb
in
jmp
out
or
fadd
imul
fdivrs
jnp
enter
add
inc
movsl
sbbb
std
sub
jbe
push
das
inc
xor
push
adc
jl
and
notb
lods
inc
xor
les
ja
push
mov
lods
push
enter
sbb
ret
cltd
subb
stc
lock
popf
mov
adc
pop
or
clc
cmp
push
sub
adcl
std
lret
adcl
pop
imul
mov
test
jg
loope
ljmp
sahf
xor
mov
inc
imull
js
cmp
cli
pop
jp
daa
loope
xchg
xchg
jl
xor
jle
cmpsl
push
sbb
scas
pop
es
jno
loop
inc
ficoml
movsl
pop
addr16
dec
xor
push
adc
pop
adc
or
ja
arpl
bound
push
ffree
pop
or
adc
les
inc
frstor
add
into
jnp
inc
imul
xchg
inc
or
jmp
xor
push
cwtl
out
push
hlt
pop
add
pop
ds
inc
pop
mov
pop
repz
inc
push
lods
or
xchg
dec
fmul
cmp
sub
or
out
add
or
jnp
shlb
lods
xchg
sbb
dec
inc
adc
cwtl
je
stos
movsb
in
movsb
mov
inc
test
mov
sbb
push
subl
xor
push
rorl
mov
xchg
lret
push
push
lock
shrl
dec
push
dec
decl
mov
fwait
roll
push
push
or
mov
push
inc
jle
adc
add
jl
lods
xchg
rclb
pop
and
ficoms
daa
cli
cli
jmp
inc
aaa
add
adc
imul
ss
mov
cmp
test
push
insb
xor
push
test
outsb
xchg
inc
lcall
rorl
rorl
cmpsl
xor
add
push
loopne
outsb
xorl
lock
enter
mov
int
inc
push
jg
ret
mov
mov
mov
xor
xor
push
je
sbb
jo
push
lds
imul
test
and
and
jl
dec
rolb
cmp
add
mov
or
in
xor
rorl
lret
int3
enter
in
mov
movsl
stos
andl
mov
xlat
sbb
and
js
vmovaps
es
sub
adc
sbb
add
ret
pop
shr
add
mov
jecxz
pusha
add
jo
inc
dec
mov
out
arpl
in
popa
mov
iret
popf
orb
lea
xchg
jbe
pop
xchg
add
push
scas
repz
sahf
adc
or
xor
pop
sbb
mov
fstps
xorb
lret
sub
mov
cmp
inc
sub
inc
ljmp
cmp
jg
mov
adc
rclb
sub
xor
sbb
pop
arpl
cmp
jns
clc
mov
push
cmp
sahf
mov
loope
adcb
fdivrl
lret
ret
cmp
ret
mov
adc
adc
es
scas
inc
sub
or
mov
inc
insb
mov
push
orl
cs
cld
or
scas
jge
or
lods
xchg
sub
cmp
inc
sbb
push
dec
and
cmp
lret
mov
sbb
push
adc
ds
scas
fwait
adcb
cmp
neg
decb
test
les
sbb
lods
dec
test
dec
sub
pop
shrb
shl
mov
shrd
hlt
stos
mov
shll
dec
xchg
xor
jp
cmp
push
lock
adc
aaa
int3
mov
fbld
push
scas
jbe
sbb
dec
cmp
repnz
mov
push
push
mov
add
mov
mov
push
dec
and
push
pop
es
adc
rolb
inc
adc
loopne
or
lods
shr
add
lods
xor
push
mov
test
sbb
ret
adc
arpl
pop
mov
push
add
lods
dec
sub
inc
jno
aam
mov
adc
enter
xchg
adc
and
shrb
push
lea
dec
lret
scas
sub
loopne
push
insl
inc
pusha
mov
outsl
mulb
lods
outsl
sub
inc
jo
cmpsl
data16
cwtl
test
xchg
out
mov
das
dec
mov
std
push
cmpsb
mov
sbb
xorl
jo
je
adc
push
adc
or
ljmp
aam
mov
cwtl
xchg
out
add
loopne
sbb
or
hlt
mov
pop
push
dec
arpl
shll
push
lods
dec
add
sbb
mov
cs
gs
xchg
jno
xchg
jne
pop
clc
push
ljmp
push
jne
lods
adc
or
xchg
rclb
in
loopne
fidivrl
adc
and
push
jg
stos
hlt
jg
into
jnp
xor
mov
or
inc
add
out
xchg
inc
mov
fadds
push
adc
inc
jmp
rcrl
pop
ds
push
dec
push
mov
push
aam
jmp
sbb
or
xchg
orl
aas
cld
dec
int3
adc
call
push
push
les
rcl
add
mov
fcomps
lahf
ss
sahf
add
push
xchg
mov
mov
std
xchg
popf
into
inc
into
push
in
mov
mov
inc
jl
pusha
or
iret
push
std
xchg
push
mov
xor
jne
insb
inc
imul
loop
xor
adc
push
outsb
sbb
insl
addb
sub
test
inc
mov
std
jbe
xor
lods
mov
cmp
addr16
inc
sub
pop
cli
aam
push
fadd
idivl
int3
jb
dec
cmp
shrl
ficomps
adc
scas
and
push
adc
pop
daa
lret
dec
sbb
push
pop
push
ret
xor
push
jl
add
xor
aas
push
add
dec
or
dec
mov
lea
mov
push
and
pop
lock
xor
xor
mov
xor
adcb
lret
icebp
std
inc
fiadds
movsb
enter
daa
sbb
or
adc
ret
cltd
ret
jne
jno
testb
lods
test
push
aas
xor
inc
inc
sahf
inc
push
aaa
mov
cmc
add
add
push
jmp
push
pop
xchg
scas
dec
mov
push
mov
andb
sarb
sbb
fildll
and
pop
inc
and
sub
inc
pop
and
dec
and
scas
add
cmc
push
adc
adc
in
loop
mov
cmp
jbe
xor
xor
fs
sbbb
scas
adc
and
dec
inc
sbbb
dec
xor
jo
data16
dec
xor
clc
xchg
test
fcoms
sti
ret
add
or
addr16
out
sbb
cmp
inc
mov
and
std
lods
pop
jo
sti
xor
lods
aam
adc
ret
adc
sarb
stos
xor
into
sbb
push
cmp
jo
jbe
arpl
dec
cmp
out
test
scas
or
dec
inc
pop
push
dec
lock
dec
in
mov
add
je
add
push
sbb
cmp
shlb
jmp
iret
rorb
mov
cmp
pop
hlt
dec
pop
js
push
lret
into
push
xor
cmc
push
cld
hlt
jle
xor
or
jne
jne
mov
sbb
cmp
inc
or
js
imul
lret
sbb
jne
sub
sbb
sti
out
pop
inc
call
movsb
enter
xchg
mov
repnz
sbb
lods
dec
mov
vpaddb
aam
pop
mov
push
pop
lock
or
xor
pop
jl
pop
inc
xlat
or
pop
loop,pn
fidivrs
and
in
ja
insb
es
mov
add
mov
rcl
dec
xchg
push
add
pop
push
cltd
incb
mov
into
insb
popf
lret
cmp
test
insl
lods
xor
xchg
or
or
ss
sti
out
daa
xor
lea
push
add
add
adc
inc
cli
or
xchg
es
faddp
dec
mov
inc
pusha
or
sbb
add
data16
jle
pop
or
dec
xchg
adc
mov
dec
inc
or
add
in
add
push
and
fdivrl
lods
out
pop
rclb
test
sbb
add
jbe
jbe
xchg
inc
sbb
xchg
jno
js
inc
push
mov
xor
inc
mov
sbb
dec
adc
lods
xchg
lods
setno
adc
sbb
roll
scas
mov
lods
data16
add
add
push
sahf
or
xchg
pop
add
pop
pop
or
loopne
cmp
push
adc
push
scas
stos
xchg
les
dec
cli
into
xchg
dec
adc
sbb
test
mov
sub
xchg
inc
push
sbb
add
and
xchg
inc
push
mov
test
popa
jb
push
add
rcl
inc
mov
pusha
dec
addl
inc
shl
sub
mov
cmp
or
lods
nop
jl
aaa
push
push
and
imul
cmp
movsl
pop
xchg
xor
fwait
pop
pusha
cs
mov
push
and
sbb
mov
sub
or
xchg
je
mov
fstpl
inc
movsl
jg,pt
push
sti
test
xchg
lcall
nop
cli
daa
loope
sbb
sub
mov
dec
sub
orb
cs
mov
in
bound
adc
popa
addb
negl
adc
add
pop
cltd
les
or
lods
mov
push
add
jp
das
or
dec
push
in
sub
adc
push
loopne
add
cmovle
mov
lahf
test
and
push
nop
outsl
jae
rclb
push
mov
pusha
lds
cmp
lds
inc
insl
mov
enter
push
aaa
adcb
cmp
fs
xorb
test
sbb
push
js
mov
jbe
jbe
jbe
mov
inc
mov
dec
xor
or
adc
jo
jno
xchg
gs
jle
mov
into
pop
inc
adc
fiaddl
les
iret
into
mov
mov
cmpb
push
and
inc
bound
ja
push
sbb
test
popa
cmpsl
adc
mov
insb
jmp
cmp
std
xchg
push
dec
repnz
or
and
adc
dec
inc
lret
sub
jbe
les
inc
xchg
cs
les
int
addl
mov
xor
gs
cs
xchg
repz
mov
mov
ja
sbb
lret
inc
test
ret
call
jbe
xor
jae
mov
inc
xor
dec
pop
jne
adc
inc
outsl
adc
leave
sar
dec
xchg
cmc
mov
ja
xchg
mov
out
mov
mov
pusha
adc
and
out
inc
sub
xlat
jmp
arpl
out
cmp
sti
pop
jle
xor
cld
add
loopne
test
ds
add
subb
push
add
dec
pop
enter
xchg
push
dec
out
inc
push
and
mov
pop
lods
lret
mov
or
jp
dec
pop
lods
xchg
dec
xchg
pushf
dec
push
movsb
inc
inc
jae
inc
pop
sbb
or
jo
gs
push
inc
addr16
mov
add
xchg
mov
and
scas
mov
pushf
adc
loop
out
adc
adcl
inc
mov
rol
loope
js
shll
inc
shrb
inc
sub
cmpsb
inc
dec
push
loope
aam
add
fldt
stos
add
call
sub
push
in
bswap
inc
cld
lcall
std
test
stc
sub
mov
sbb
stos
stos
mov
xchg
shl
push
dec
pop
lods
mov
mov
cmpl
mov
popa
int
dec
mov
pop
mov
lods
lods
clc
fildll
and
push
dec
insl
or
dec
jmp
xor
ds
pop
daa
stos
or
iret
cmp
outsl
loope
das
mov
push
incl
dec
cli
push
dec
pusha
jp
jp
daa
inc
dec
cmpl
outsb
ss
adc
popa
push
stos
push
cmp
xor
sub
push
gs
push
lret
add
test
lcall
orl
lea
sbb
insb
pop
xlat
int
subb
xchg
test
inc
hlt
and
clc
or
dec
adc
adc
mov
inc
lods
inc
xor
pop
adc
jbe
in
mov
xchg
mov
pop
push
subb
lods
mov
push
and
mov
inc
and
loop
sbbb
outsl
push
int3
repnz
cwtl
rcll
sbb
add
lds
sarb
mov
fcoml
adc
lods
sahf
cmpb
jp
pop
cs
dec
dec
add
add
jae
std
mov
enter
push
ja
repnz
mov
sub
xchg
cmp
movsl
sbb
pushf
sbb
in
test
sub
mov
sbb
mov
mov
mov
movsl
fincstp
xchg
fdivl
push
int
lods
push
dec
sbb
nop
cli
inc
dec
repz
adc
push
pop
popa
pushf
outsb
imul
dec
fldl
mov
aaa
ret
clc
cmp
dec
js
mov
mov
mov
xor
cmp
push
xchg
dec
adc
mov
pop
fwait
mov
lods
inc
decl
jo
mov
cmc
lods
push
inc
ljmp
mov
icebp
mov
movsl
sub
add
cltd
sub
mov
lods
mov
ljmp
icebp
sbb
cmp
jmp
in
xor
mov
sar
sti
cmp
aaa
and
inc
or
mov
test
jg
push
aad
xor
roll
mov
lds
fsubp
inc
sub
sbb
pop
add
and
xor
xor
aaa
pushf
sub
inc
sub
mov
or
push
outsl
sbb
rolb
mov
pop
dec
mov
xor
popf
xchg
popf
xor
push
xor
je
sbb
call
cmp
addb
inc
dec
icebp
into
test
push
sbb
xchg
sahf
fsubs
sub
sarb
and
adc
jno
jle
sub
dec
or
repnz
xchg
fsubrp
xchg
cld
inc
xchg
or
mov
insl
dec
lcall
sti
filds
mov
lods
pop
fwait
cmc
dec
cmp
jge
es
or
ljmp
cs
adc
es
std
lahf
clc
and
ljmp
int3
xorb
mov
cmp
xchg
push
xor
sub
insb
loopne
je
ja
dec
ljmp
and
xor
jl
xor
push
in
inc
clc
sbb
inc
das
cmp
das
mov
add
xor
push
and
add
or
imul
adcb
mov
inc
cmp
js
inc
xchg
scas
popa
fdivl
or
pop
xor
testb
adc
or
nop
std
addb
fistps
push
mov
loopne
es
mov
mov
test
xchg
shlb
pop
mov
xchg
dec
sti
dec
out
ja
xchg
pop
and
mov
inc
sbb
pop
dec
out
and
cld
pop
ss
dec
popl
clc
loopne
pushf
movsb
mov
adc
shlb
into
jns
clc
in
lret
dec
or
add
lahf
and
adc
push
or
inc
pop
mov
jg
adc
adc
and
movsl
pop
lea
repnz
cli
inc
or
mov
mov
xchg
adc
push
adc
jno
push
adcl
inc
cmp
jmp
js
or
and
cli
cmpsl
sbb
jb
test
xchg
mov
inc
fldl
addr16
mov
loope
call
scas
or
adc
fs
lret
cs
and
add
into
push
jp
ret
lret
icebp
popa
mov
mov
jne
mov
add
imul
es
cltd
clc
lock
pcmpgtd
xchg
es
mov
xorl
mov
xchg
scas
sub
sbb
test
xor
jg
or
pop
loopne
dec
sub
or
sbbl
ds
dec
dec
scas
cmpl
clc
stc
sub
repnz
adc
loope
shl
lods
sub
cmp
and
mov
mov
jp
divb
sbb
pop
inc
sarl
dec
adc
dec
dec
sub
pusha
pop
bound
loopne
ljmp
add
push
add
imul
inc
pop
xlat
loope
push
dec
or
sub
pop
push
adc
cltd
test
sbb
adc
mov
push
fiadds
mov
sbb
sub
inc
dec
outsb
mov
mov
iret
push
inc
int
xor
pop
mov
lods
add
int
in
and
dec
clc
enter
xchg
dec
dec
aas
inc
inc
push
inc
dec
mov
inc
pop
imul
push
into
mov
mov
dec
inc
fildll
or
jle
aaa
stos
int
fldl
nop
dec
jo
test
xchg
sbb
rorl
and
aam
out
sbb
decb
movsb
aaa
data16
sub
jbe
adc
adc
pop
jno
cwtl
int3
add
stos
mov
int3
push
mov
jle
push
xor
jge
mov
js
xor
xor
fidivrl
cmp
into
inc
enter
or
cmp
fbstp
mov
icebp
cmp
mov
int3
cmp
mov
push
sub
fcmovnu
dec
shlb
add
addb
jns
ficoms
jbe
int3
jl
les
subl
xchg
into
dec
pmulhuw
test
into
fsub
xchg
out
movsb
enter
insl
sbb
dec
ja
pop
sub
rclb
mov
test
dec
jbe
scas
call
movsl
inc
pop
leave
lcall
cmp
sahf
inc
mov
das
inc
insb
inc
jbe
jmp
das
loopne
adc
add
lock
inc
mov
sbb
mov
xlat
das
dec
cmp
inc
push
ret
push
dec
add
sbbl
inc
mov
xor
adc
scas
sbb
push
mov
std
or
loope
lock
sub
and
inc
sub
int3
xor
adc
cld
imul
loop
add
jle
pop
lods
jecxz
aaa
sub
xchg
outsb
adc
mov
mov
into
call
into
movsb
inc
mov
data16
mov
xor
ljmp
loop
fdivs
std
test
ja
adc
wrmsr
stos
scas
mov
add
das
jmp
add
pushf
addl
pop
push
das
cmp
xor
xor
push
jbe
or
lock
je
push
movsb
jle
mov
lcall
mov
mov
jo
or
decl
int
add
fdivs
mov
push
shrb
pop
iret
push
inc
outsl
mov
push
and
push
pop
int
inc
imul
je
and
cmc
sahf
imul
cmp
cmp
jl
cltd
cmp
jle
mov
mov
inc
movsl
jno
addr16
cmpsl
fsub
inc
mov
mov
sub
jne
jl
sbb
mov
push
data16
mov
pop
aam
jp
notb
lock
aad
rorl
jl
sbbb
jle
dec
sbb
sbb
xchg
ss
mov
mov
mov
sbb
lds
or
dec
decb
inc
xor
popa
ss
mov
clc
mov
jo
sub
sbb
or
pop
jg
add
in
cmp
add
mov
adc
or
inc
dec
out
es
xchg
test
inc
test
cmpsb
stos
xchg
int
mov
lock
sbb
mov
sub
cmp
popf
ds
or
or
add
lock
push
xor
mov
push
shll
pop
inc
sbb
sbb
jl
cwtl
sbb
rcrb
pop
lret
xchg
shrb
or
and
dec
daa
outsb
subb
mov
mov
and
aaa
cmpsl
ljmp
add
cmp
ret
out
in
dec
cmp
xchg
lods
ss
cmp
dec
aad
push
rcrb
dec
push
inc
sub
movsl
lock
xor
sbb
add
loop
outsl
xchg
pop
aam
enter
jle
ss
fidivrs
dec
iret
push
int
iret
or
int
or
inc
pop
adc
mov
add
lea
addb
aaa
sub
test
dec
aad
cld
jno
cmc
mov
pop
add
sbb
lods
jl
mov
clc
stos
in
repz
lods
roll
pop
jns
jp
in
inc
dec
push
in
sub
add
push
add
fisttpl
adc
mov
ret
pop
data16
scas
mov
adc
inc
xor
rcrl
nop
push
xor
add
xor
sbb
pop
mov
jmp
push
xor
std
xchg
push
xchg
repz
lods
sar
stos
jno
repnz
xor
inc
adc
xor
popa
jg
popf
jne
and
push
pop
das
dec
fcoms
sbb
je
jne
scas
and
je
shrb
cmp
shlb
mov
out
sub
lods
outsl
bound
inc
movsl
fiadds
push
dec
adc
insb
push
sbb
add
lods
cmc
test
imul
xor
xchg
jle
daa
adc
lea
aas
push
push
push
xor
call
adc
and
dec
pusha
sub
sub
push
add
push
fsubs
cmp
mov
jg
aas
xor
xchg
or
or
mov
test
jg
push
adc
ss
add
cld
jg
ss
iret
test
cmp
mov
xor
push
add
sbb
adc
push
dec
enter
or
outsb
xchg
rcrb
sbb
sub
adc
ret
orb
sarb
adc
into
sbb
sbb
add
nop
shrb
stos
adc
xor
inc
les
shrb
scas
jns
inc
xchg
or
dec
cmp
aaa
lahf
into
or
iret
cs
pushf
jns
push
xchg
pop
push
sub
push
les
jle
aaa
mov
imul
add
push
sub
aam
and
cwtl
sub
cs
sub
push
movsl
mov
cmp
pop
inc
ljmp
mov
int3
adc
mov
lret
cmp
lcall
adc
adc
and
sbb
dec
push
xchg
jg
xchg
les
pop
push
enter
mov
push
sbb
push
cmp
sbb
roll
jge
push
lcall
cmp
sbb
mov
int
add
adc
push
cmp
push
movsl
add
dec
sbb
shlb
fwait
mov
inc
lea
cmp
outsb
adc
loopne
sahf
outsb
xchg
add
sub
push
mov
and
xchg
or
jle
adc
and
adc
xchg
imul
dec
bound
es
inc
or
or
inc
hlt
orb
pushf
lret
inc
or
popf
cmp
ja
lcall
movsb
inc
dec
lea
adc
mov
ljmp
inc
popf
int
jb
jb
jmp
jno
mov
cmp
int3
xchg
adc
fsubrs
loop
push
mov
push
cmp
outsl
mov
inc
int
ja
jle
xchg
cmp
sahf
xchg
inc
mov
ds
out
xchg
cmp
adc
fistpl
ss
add
add
test
adc
pop
adc
pop
dec
dec
xchg
mov
pop
xor
xor
fidivl
inc
lea
mov
lods
mov
add
std
sbb
sbb
in
mov
inc
outsb
lea
mov
inc
movsl
jns
test
inc
mov
shr
or
push
sbb
cltd
data16
mov
push
and
adc
stos
xor
lods
push
insb
pushf
push
imul
inc
fsub
mov
and
add
loope
push
popf
jbe
and
data16
inc
andl
xchg
push
pusha
xor
xor
adc
aam
push
sbb
jecxz
push
dec
mov
insb
push
or
lock
popf
add
add
ss
js
adc
fwait
rolb
push
insb
cli
cmpsb
push
xor
stos
lcall
in
pushf
mov
inc
addl
jnp
not
cs
sbb
mov
popa
adc
inc
int
bound
push
add
push
xchg
sub
je
or
insl
mov
cmp
sub
xor
push
rorl
sahf
mov
add
lods
fnstcw
mov
jb
mov
sub
test
lcall
mov
or
xor
lcall
dec
xor
movsl
lods
loop
mov
lahf
cs
mov
mov
sub
mov
test
repnz
pusha
je
pushf
jb
mov
and
mov
pop
or
jl
dec
xor
adc
push
xchg
dec
sub
xchg
sub
mov
test
jo
imul
lcall
rclb
lods
mov
sahf
pop
inc
inc
xchg
mov
mov
dec
mov
imul
stos
lods
mov
inc
push
lods
xchg
inc
mov
mov
pop
push
scas
xlat
and
cmp
data16
ret
inc
and
jno
mov
aad
cltd
lret
cmp
mov
mov
orb
mov
daa
cltd
iret
nop
dec
xor
dec
sarl
xchg
out
stc
mov
mov
rcrb
mov
int
lea
ljmp
mov
jns
xchg
out
cltd
les
es
in
mov
push
xchg
cmpsl
mov
push
jo
jp
ret
inc
and
mov
xor
and
xchg
sbb
movsl
xor
push
xchg
lods
out
shrb
les
jmp
mov
sub
mov
lods
sahf
xlat
add
adc
test
mov
iret
xor
lods
pop
mov
dec
inc
jg
test
sub
xor
pop
xchg
xchg
je
add
in
adc
jl
std
xor
fisubrs
mov
mov
gs
ret
or
and
jge
xchg
dec
xlat
cmp
pop
cmp
xor
inc
sahf
push
and
pop
push
mov
stos
mov
mov
sub
or
lea
xchg
xor
push
cmc
addr16
add
or
out
sbb
lds
movsl
test
mov
dec
or
es
or
dec
xor
in
lahf
mov
stc
mov
adc
xchg
mov
pop
std
lods
test
stc
out
test
mov
test
test
test
mov
xlat
mov
mov
inc
push
inc
int
pop
enter
lods
imul
pop
mov
push
cmp
inc
mov
loope
mov
adcl
adc
lret
cmp
fcoml
mov
jp
and
aad
mov
mov
inc
xor
lret
fimuls
popf
add
or
and
mov
sarb
inc
decb
mov
inc
into
inc
movl
push
xchg
inc
dec
aam
aad
xlat
cltd
cmp
xchg
jns
mov
lea
or
push
cltd
or
icebp
xor
fwait
stos
xchg
sub
scas
adc
push
mov
js
pop
sbb
cmp
xchg
mov
pop
inc
push
inc
push
out
push
fiaddl
stc
xor
fstl
jmp
xchg
adc
xor
pushf
hlt
ret
pop
pop
mov
pushf
jg
adc
addr16
bswap
mov
outsb
jae
pop
fcompl
clc
adc
mov
jnp
mov
jbe
mov
icebp
jne
adc
mov
dec
ret
and
adcb
xor
data16
jp
in
push
sub
enter
jle
aaa
xor
lock
add
iret
sbb
sub
mov
cmp
mov
jno
pop
int
add
or
insl
sub
dec
repnz
xor
outsl
pushf
loopne
mov
dec
int3
sbb
xor
mov
inc
inc
in
pop
dec
add
cmp
add
jle
mulb
andb
sbb
rolb
loop
lea
into
adc
and
popa
rolb
sbb
call
sahf
shll
and
inc
push
xchg
sti
mov
popf
xor
outsb
jb
cmp
and
adc
repz
aad
dec
adc
cmp
mov
outsb
sbbl
faddl
xchg
mov
xchg
insb
push
sbb
mov
mov
adc
push
mov
sbb
add
loopne
cmp
inc
sbb
xchg
push
subl
out
sub
mov
mov
xor
fcmovb
das
lods
lds
ss
addl
push
push
jp
sbb
sbb
push
xchg
inc
mov
cld
xlat
add
push
popf
pop
test
stos
inc
xor
and
aaa
mov
shrb
into
lea
xor
test
xchg
pop
push
sbb
add
outsb
mov
xor
mov
jne
push
cmp
test
or
mov
mov
enter
imul
mov
stos
xchg
dec
push
dec
jae
sub
pop
in
js
hlt
hlt
or
dec
sarb
jb
sub
in
inc
je
pop
ret
mov
or
xor
or
cltd
cld
xor
lcall
ficoml
mov
mov
mov
test
or
enter
lods
insb
fs
adc
pop
ljmp
jge
sub
push
lods
and
jle
xchg
in
mov
fadds
pushf
lods
sarl
sti
subl
mov
push
ret
mov
dec
insb
and
mov
addl
inc
mov
sbb
or
ljmp
scas
jl
dec
add
clc
jle
mov
les
sbb
jge
push
inc
pop
adc
jge
add
clc
and
adc
ljmp
mov
test
add
mov
add
ljmp
jb
scas
mov
insl
int3
movsb
and
xchg
jp
cmp
push
dec
cmp
sub
fwait
and
dec
lock
jmp
mov
insl
sub
xor
push
and
push
pop
dec
pop
stos
movsb
or
pop
jg
incb
mov
inc
int
jne
push
nop
push
or
add
pushl
cs
add
sbb
inc
push
int
addl
stos
adc
cmp
cmp
mov
ljmpw
sbb
cmp
xor
aam
ret
add
cwtl
or
dec
ficomps
push
ss
add
mov
flds
push
outsl
xchg
popa
lahf
cmpsl
sbb
lcall
mov
xchg
mov
mov
stc
ja
outsl
push
rcrb
lods
cmp
add
addb
incb
or
dec
sub
add
inc
cmpsb
sub
push
or
and
icebp
xchg
push
ja
inc
rcl
mov
xor
hlt
and
ja
lods
mov
adc
add
dec
pop
repz
fisttpll
add
mov
repnz
lcall
out
pop
mov
ss
fs
stos
or
movsb
sbb
enter
test
sub
loopne
les
sbb
adc
jge
scas
xchg
imulb
push
fldenv
adc
push
cmp
pop
mov
cmc
ret
scas
push
shl
les
pop
add
jge
je
jo
loopne
inc
insl
hlt
pop
clc
pop
into
xchg
test
pop
sbb
mov
jbe
mov
rolb
out
popf
mov
cmpsb
insl
shlb
dec
xchg
test
dec
clc
inc
aas
xor
cld
and
lds
pop
mov
adc
or
jbe
add
repnz
pcmpgtd
fcoms
cwtl
ret
add
mov
and
or
test
add
cmpsb
inc
fdivrp
test
mov
cmp
jno
mov
xor
mov
pop
pushf
hlt
dec
daa
std
inc
sub
cmp
sub
mov
adc
adc
sbb
test
in
or
add
add
sub
push
or
sbb
xor
test
dec
and
inc
mov
lds
call
sbb
jp
loope
or
shl
lret
dec
das
pop
add
sub
xchg
test
push
push
mov
jge
movsl
xor
xchg
inc
xor
je
inc
pushl
xchg
add
movsb
jo
rol
int
jmp
add
push
mov
sub
pop
and
adc
or
fwait
dec
ret
mov
adc
jno
lcall
rol
std
test
js
int3
sub
scas
push
adc
jl
push
aam
push
orb
or
and
fcmovnbe
or
mov
lods
lcall
add
sahf
push
or
cmp
int
pusha
xor
or
add
inc
mov
test
nopl
sbb
xor
cs
mov
xchg
push
mov
les
je
mov
mov
loopne
mov
test
xchg
and
shll
push
repnz
sbb
sti
das
dec
push
fmull
andb
adc
rcpps
xchg
dec
inc
inc
sahf
or
push
repnz
data16
sub
mov
and
sbb
int3
sub
inc
push
mov
ljmp
inc
test
sbb
lods
and
xchg
popf
fs
mov
pop
lock
fwait
sub
outsl
icebp
mov
mov
pusha
lods
jnp
divb
inc
sbbb
push
jno
xchg
mov
dec
add
push
sti
adc
inc
cld
in
loope
mov
and
dec
sbb
sti
inc
push
jle
incl
inc
popf
iret
or
sbb
popa
fwait
sub
roll
movsb
repnz
scas
dec
pop
dec
and
dec
mov
inc
inc
rorb
xor
out
popa
inc
jg
push
test
pop
or
push
push
movsl
dec
dec
mov
sbb
mov
dec
les
mov
int
outsb
loop
sahf
inc
stc
lods
ret
add
push
scas
mov
ds
mov
mov
and
dec
rorl
fidivl
or
rorl
test
rclb
lea
mull
jo
pop
lea
jb
sub
push
lods
xchg
mov
inc
cmc
imul
or
mov
dec
xchg
js
fidivs
pop
lea
xor
inc
mov
or
dec
push
sbb
push
aaa
test
or
pop
sarb
les
xchg
and
jo
jp
inc
jo
stc
push
lret
fwait
js
pusha
lock
push
cs
inc
jmp
push
daa
or
xor
pusha
add
mov
push
outsl
add
or
jnp
popf
test
jbe
cmc
push
inc
int
lods
lret
js
jae
adc
xchg
sub
jle
ss
xor
lock
adc
inc
ficoml
xor
cmpsb
mov
dec
sub
and
int3
je
add
mov
pop
insl
add
or
mov
daa
insb
outsl
data16
or
cld
inc
sbb
dec
xchg
xchg
data16
xchg
or
je
loopne
jns
sbb
adc
sub
imul
pusha
imulb
outsb
dec
cmpsb
repnz
fidivrs
xor
fs
push
lods
inc
mov
imul
scas
cwtl
push
lcall
icebp
xor
aas
aaa
jo
or
sbb
sub
stc
repz
test
dec
out
inc
repz
insl
movl
lods
mov
or
jg
icebp
test
lods
lret
rcrb
mov
mov
ret
inc
jp
dec
filds
es
cmp
push
pop
pusha
hlt
jns
enter
fdiv
add
pop
dec
jo
dec
ret
mov
jle
sub
and
jge
cmpb
and
pop
aaa
movsl
mov
inc
or
out
outsl
inc
pop
sbb
into
adc
rolb
mov
jmp
push
push
mov
xor
mov
mov
mov
dec
movsl
add
or
mov
or
mov
and
hlt
dec
xchg
popf
inc
add
cs
dec
mov
mov
inc
fs
push
aam
fbld
xor
icebp
inc
frstor
mov
shrl
jge
add
cmp
inc
adc
adc
ja
add
cld
movsl
mov
cld
lods
fcompl
sub
push
dec
push
or
adc
incb
shrb
ret
inc
jbe
gs
dec
cli
test
ret
out
xor
sbb
jb
sbb
mov
gs
popa
jmp
push
out
mov
adc
gs
adc
xchg
pop
inc
cltd
popa
into
cmp
scas
sub
fld
mov
add
jo
jp
js
cld
pop
xchg
inc
scas
mov
movl
ja
shlb
pop
adc
pusha
add
cmp
call
inc
mov
dec
rorb
cli
dec
or
fdivrs
sbb
scas
xor
jge
sbb
mov
xlat
xchg
mov
jns
jnp
cld
dec
adc
int3
inc
inc
lea
call
ljmp
movsb
lods
push
mov
inc
xor
xor
pushf
test
ficoms
inc
jle
adc
mov
push
xor
push
sub
push
adc
sarl
dec
dec
cmp
and
add
jns
lea
or
xor
sbb
xor
dec
rcl
push
xchg
fwait
adc
sbb
or
add
pop
mov
xchg
lds
test
ljmp
ljmp
ss
scas
pop
dec
mov
push
jge
dec
insb
leave
add
and
loopne
push
xchg
push
adc
mov
aaa
mov
add
inc
mov
xchg
insl
mov
int3
or
sarb
add
or
xor
xchg
xchg
adc
mov
push
inc
adcl
clc
sbbl
push
or
jb
jmp
or
inc
stos
sbb
pop
into
pop
aad
jl
sbb
dec
adc
fdivrl
pop
leave
fmull
push
add
fucomi
push
adc
repz
insb
cld
popl
das
movsl
lcall
jno
xor
sub
popa
add
pop
push
sub
mov
insl
adc
adc
mov
xchg
leave
enter
jge
movsb
inc
test
pop
inc
jne
movb
mov
shrb
adc
adc
lds
push
xlat
xor
mov
clc
mov
outsb
cltd
sub
mov
cli
add
mov
and
arpl
and
or
sub
add
pop
sbb
icebp
xchg
cli
add
mov
add
test
int
push
and
xchg
data16
aam
in
mov
push
aam
enter
inc
xchg
sbb
pop
and
xor
movsl
mov
mov
adc
push
mov
add
sbb
and
jns
xchg
test
adc
xor
mov
inc
and
int3
int3
ljmp
xchg
mov
mov
dec
xor
aas
mov
enter
sub
sbb
mov
sbb
jo
insl
cmp
lret
mov
pop
outsb
xchg
call
xchg
lods
dec
xchg
insl
arpl
jo
addr16
jb
jp
mov
fbstp
inc
xor
dec
add
arpl
lods
in
nop
xor
fdivs
pop
adc
push
ret
inc
cmp
cmp
cmpsl
rcrb
outsb
movsl
pop
and
int3
pop
scas
jb
sahf
imul
adc
leave
rcr
pop
adc
push
addl
xchg
mov
mov
fmuls
sti
cmpsl
mov
into
inc
add
push
push
push
mov
loope
dec
mov
insb
lods
aaa
xlat
push
push
iret
jp
push
rcll
adc
shl
dec
ds
pusha
aad
add
push
imul
rclb
xchg
fadds
aad
xchg
std
movsl
jno
pusha
inc
fimuls
adc
loopne
cmp
stc
das
inc
fs
dec
mov
mov
dec
pop
orl
mov
mov
lock
mov
cli
xorl
push
jg
add
rolb
aaa
in
push
clc
sub
inc
inc
mov
xor
mov
sti
aam
add
lods
aam
roll
into
pop
mov
dec
sarb
pop
jo
mov
inc
or
pop
push
lahf
scas
sbb
je
inc
add
add
dec
lea
jge
inc
adc
mov
test
cmpsl
jg
es
xor
pop
into
ss
add
ss
xchg
mov
push
adc
mov
scas
dec
test
add
inc
lods
dec
or
sbb
jnp
add
sbbl
inc
inc
or
cmp
aam
lock
fisubs
outsb
adc
cmp
or
xchg
jl
sbb
pop
ds
stos
inc
push
lds
mov
scas
push
jmp
loop
mov
mov
ljmp
ret
mov
cli
lods
mov
lods
mov
lods
lods
pop
je
jl
lods
movsb
das
jne
pushf
inc
addl
push
add
mov
add
jbe
mov
pop
imul
pslld
out
push
ret
pop
add
push
into
xor
lods
add
push
movb
repnz
js
in
call
push
jecxz
lea
leave
push
cmp
adc
dec
les
sarl
fs
enter
xchg
push
js
lods
adc
lods
imul
or
pop
sti
xchg
jo
in
sbb
pop
sahf
push
and
jle
mov
xor
fcoms
lods
sahf
iret
imul
bound
xchg
out
movsl
aad
mov
inc
fmuls
sub
insb
mov
rcll
adc
popf
or
push
les
dec
push
adc
push
adc
inc
std
in
sbb
inc
dec
leave
icebp
add
push
rorb
scas
pop
decb
fimull
lods
inc
mov
push
cwtl
ret
frstor
mov
inc
add
test
pop
pop
and
out
and
xor
push
mov
adc
sbb
test
and
mov
int3
popf
enter
inc
add
cmp
xchg
pop
sbb
inc
mov
add
mov
outsb
sbb
je
arpl
das
jl
sbb
push
les
lea
movsl
aaa
mov
mov
sbb
daa
addl
lcall
fldenv
test
cmp
outsb
test
icebp
adc
inc
loopne
cli
add
je
add
enter
sarl
sbbb
outsl
addr16
lods
ret
enter
jbe
add
adc
dec
and
push
or
test
inc
loopne
adc
adc
mov
dec
wbinvd
dec
mov
mov
movsl
sub
adc
dec
ret
loope
add
add
add
ljmp
and
or
incb
inc
sbb
mov
xchg
cmp
adc
and
aaa
sub
fwait
add
das
jp
push
sbb
and
subb
sti
addr16
xchg
shlb
insb
cmove
orb
inc
cmpsl
pop
cmp
int3
pop
cmpsl
int3
mov
mov
inc
push
or
sbb
dec
out
jge
xchg
das
push
out
push
out
sbbb
out
shrb
shll
lods
into
jo
daa
outsl
loop
shlb
xor
xchg
ja
test
dec
aaa
sahf
lcall
out
sub
test
jno
stc
scas
xor
movsl
in
jo,pt
mov
pop
push
xchg
sbb
dec
push
pop
push
inc
xchg
or
sarl
cs
adc
and
sub
imul
adc
lea
fisubl
std
xor
xchg
adc
jle
mov
insb
fs
fwait
xchg
sti
add
lahf
sub
enter
fs
subb
imul
addb
subb
xrelease
inc
movsl
add
push
enter
nop
mov
adc
lods
xchg
cmpsl
in
mov
inc
rolb
add
insb
sub
pusha
mov
add
or
add
pop
jns
push
pop
push
mov
mov
clc
int
mov
xchg
int
push
mov
jle
lods
adc
in
add
outsb
jle
dec
sbb
dec
insb
inc
rclb
lcall
lds
xchg
jno
sub
inc
mov
das
jo
mov
cmp
pop
es
dec
inc
and
inc
jg
or
sub
push
adcl
enter
mov
popf
orl
lods
sub
cmp
lods
xchg
sub
push
inc
or
mov
mov
mov
sub
inc
add
mov
jl
sbb
ret
adc
aam
lods
push
sub
or
outsb
xor
push
add
das
imul
cmc
lds
hlt
ljmp
push
test
sub
pop
int
mov
aam
xchg
push
jle
dec
dec
outsb
inc
or
scas
add
add
popf
imulb
add
push
leave
and
outsl
shr
pushf
pop
jp
push
push
cmc
ret
fcoml
int3
jbe
and
fnstsw
or
insl
das
push
adc
leave
outsl
insl
in
xor
pop
clc
inc
push
imul
inc
cmp
xor
push
leave
jno
test
mov
add
add
or
pop
lods
lret
movb
std
jnp
push
lods
fdivrl
and
jle
repz
xchg
dec
xchg
out
hlt
cltd
jno
mov
mov
pop
add
ret
jp
or
outsb
adc
mov
aaa
or
test
or
pop
in
rcrb
sub
aas
iret
sub
out
mov
ljmp
cs
adc
mov
test
and
sbbl
sbb
jmp
rol
pop
sbb
mov
jl
leave
push
push
andb
loopne
mov
js
sbb
mov
lock
ja
and
sbb
mov
mov
sbb
or
lea
jno
xor
jge
mov
pusha
push
push
and
push
mov
fisubs
cmpsb
cmp
jge
clc
std
add
dec
or
inc
or
push
stc
mov
pop
lock
lds
and
dec
outsl
jg
cmp
cli
int
xchg
lret
pop
lods
je
hlt
enter
aam
xor
imul
mov
push
sbb
sbb
mov
enter
adc
push
jle
or
stos
push
adc
pushf
cmp
lods
push
lret
gs
popa
mov
iret
add
jne
dec
dec
or
add
les
add
mov
push
adc
int3
push
shlb
je
pop
cltd
mov
loopne
popf
xchg
and
scas
jne
jno
and
lods
mov
int
cs
adc
jl
mov
mov
outsb
xor
mov
lods
ficomps
pop
mov
inc
std
mov
imul
popf
fstps
xor
adc
cmpl
push
lods
orb
and
mov
rcll
sub
fidivs
push
pop
jns
sbb
cmp
js
leave
shll
into
mov
ja
inc
enter
mov
dec
das
nop
ficompl
rcrb
xchg
jge
lods
lcall
dec
sbb
xchg
mov
inc
inc
inc
xchg
lret
or
jle
not
fnstsw
lods
pop
cmp
add
or
dec
andb
ficoms
bnd
pop
and
lds
dec
sub
mov
xor
pop
orb
push
adc
nop
ss
mov
fsts
push
adc
sbb
lods
xchg
mov
andb
pop
scas
cmpsl
or
outsl
inc
dec
aad
fidivrl
adc
pop
or
or
fucomi
popa
mov
adc
jno
pop
cmpsb
lods
stos
sbb
pop
push
insl
adc
mov
dec
xchg
retw
pop
pandn
fldcw
jnp
add
mov
repnz
jge
and
out
leave
dec
js
popa
xchg
lcall
mov
mov
addl
pop
dec
inc
mov
adc
sub
loopne
add
cmp
dec
adc
mov
popf
dec
push
inc
jmp
or
inc
push
lods
mov
push
sub
inc
cltd
mov
cmpsl
hlt
dec
sub
push
add
jae
outsl
divl
sbb
insl
or
sahf
dec
mov
inc
inc
add
xor
inc
mov
ret
mov
addl
mov
xchg
shlb
xor
cwtl
punpcklbw
test
loop
enter
fnstcw
cmpb
or
sbb
push
test
mov
sub
ss
cmp
orb
loop
push
mov
shlb
cld
sbb
lods
mov
test
mov
or
inc
fdivrs
add
fdivrs
xor
mov
and
xor
sub
or
scas
lahf
aam
lahf
lods
xor
xor
imul
rorb
pop
repnz
xor
add
notb
pop
adc
sbb
mov
andl
adc
test
fs
mov
negb
gs
aam
or
loope
gs
xchg
popa
subl
lea
adc
adc
mov
jle
sbb
cmp
xor
stos
test
or
lcall
sbb
je
lret
sbbb
sub
pop
sbb
fcomps
cmp
int
sar
ja
mov
xchg
addb
xor
xchg
stos
popf
std
jb
cmp
sbb
popa
push
xor
add
push
pop
cli
pop
and
rorl
lods
lock
mov
or
lods
inc
mov
int3
push
sbbb
push
sub
adc
mov
fadds
ret
cld
fisttpll
ljmp
add
push
sbb
jne
mov
push
ja
addr16
mov
push
inc
lods
roll
in
add
fmul
lds
sahf
pop
inc
addr16
xchg
dec
adc
popf
roll
lahf
push
lods
hlt
int
and
xchg
sbb
jge
mov
cmp
jge
jnp
xor
into
rcr
movsl
xchg
jae
sub
lods
xchg
cltd
mov
outsb
orl
jge
pop
push
and
repnz
xor
push
push
test
pusha
sub
inc
dec
outsb
mov
push
pusha
rcrb
inc
sbb
lret
test
sbbb
add
jle
xor
enter
into
xchg
lods
cli
inc
fsubrl
inc
push
adc
sbb
das
ljmp
inc
jno
rcll
adc
das
xchg
out
mov
imul
sub
inc
dec
ret
call
mov
cld
sbb
xor
sub
sahf
sub
mov
insl
fimull
lret
mov
add
pop
imul
cs
or
outsb
ja
sbb
add
inc
cs
std
andb
outsb
cli
mov
pop
mov
test
mov
push
mov
adc
dec
iret
adc
in
icebp
dec
lods
mov
std
adc
lods
lds
adc
iret
or
and
sub
mov
push
xchg
icebp
jbe
or
jl
xor
dec
pop
add
leave
inc
mov
xor
sbb
push
add
jge
mov
pop
mov
pop
push
ja
arpl
int
adc
or
pop
int
sbb
adc
outsb
mov
addr16
sub
xor
dec
pop
mov
sbb
xchg
jbe
push
xchg
dec
popf
icebp
scas
ja
sub
arpl
and
enter
mov
sub
and
jecxz
sub
out
add
daa
mov
js
cmc
aaa
pop
add
outsb
out
scas
inc
outsb
dec
pop
and
add
das
lds
xor
jo
push
leave
xorl
dec
xor
dec
or
mov
insb
sbb
js
shll
out
in
mov
fsub
add
push
imul
sub
cmp
xor
xchg
mov
sbb
sahf
pop
xor
xor
pop
shll
adc
sub
cmpsl
ljmp
add
pop
sub
lods
inc
mov
ret
imul
imul
pusha
scas
mov
ret
call
sub
rcr
shrb
push
dec
outsl
aas
or
scas
jns
pand
rclb
pop
sbb
jne
rcll
out
icebp
loop
push
fidivrs
mov
bnd
jle
sbb
jl
inc
sub
enter
stc
dec
xchg
int
pop
jl
lods
sub
and
mov
mov
or
shrb
and
jne
ja
sbb
and
insl
fisubrl
test
and
dec
loop
xchg
je
push
sub
push
sub
inc
test
fwait
les
push
sub
loopne
mov
lods
or
mov
movsl
xchg
lods
mov
cmpb
std
add
out
out
scas
push
xor
fs
clc
jnp
cld
push
sbb
addr16
insb
or
jle
mov
xchg
faddp
aaa
scas
sub
push
fcompp
rol
xor
popa
mov
mov
lret
fildl
mov
test
rolb
dec
inc
add
test
shlb
cmp
scas
inc
hlt
enter
into
mov
in
mov
sbb
popf
out
lods
lods
xchg
and
dec
jle
fnsave
push
scas
dec
sbb
test
cmp
inc
loop
mov
lds
pop
lcall
or
loope
sbb
mov
mov
ret
and
xchg
sub
dec
addl
push
add
cmpsl
push
cmp
inc
xchg
fisttpl
inc
or
xor
sarb
mov
call
inc
jns
inc
pusha
cld
xor
lea
cmc
push
fidivl
arpl
sti
jg
cmpsb
and
push
int
aas
enter
inc
aam
push
vaddpd
cmp
mov
subb
push
dec
loop
or
add
ljmp
fdivs
inc
lds
in
ficoms
dec
and
push
xor
push
dec
and
jge
xchg
outsb
jno
add
mov
pop
sub
and
adc
pop
mov
adc
dec
lcall
int
xchg
js
sbb
daa
pop
push
adc
sbbl
mov
out
call
and
adc
or
mov
insl
inc
les
sbb
data16
out
add
dec
jg
dec
mov
xchg
cmc
push
dec
xor
sub
scas
testl
xchg
xchg
bound
int
add
xchg
adc
cltd
test
adc
cmp
mov
sub
repnz
mov
in
fsubrs
xor
fsubrl
js
xor
outsl
in
fnstenv
dec
jmp
xchg
scas
sbb
sbb
xor
repnz
in
cltd
dec
push
jmp
mov
push
pop
lods
mov
ss
imul
ds
sub
jle
mov
or
lods
addl
pop
push
push
sub
js
or
adc
jbe
dec
sbb
pop
clc
add
pop
rcrl
gs
cmpl
pop
cmc
aaa
push
popa
lods
jge
mov
mov
jle
xor
sub
fldl
divb
pop
arpl
mov
loope
imul
xor
jmp
not
imull
and
or
add
jg
into
mov
js
add
pop
jns
subb
dec
fidivrs
cs
imul
adc
gs
or
sahf
in
ss
xchg
dec
dec
xchg
jp
imul
scas
filds
fsubrl
pop
aaa
xor
xchg
loope
or
mov
or
inc
adc
loop
scas
stos
ljmp
test
sub
jo
cmp
lods
mov
ret
inc
stos
dec
inc
jl
clc
lret
xchg
pop
in
adc
icebp
ret
fdivrs
js
popa
aad
mov
cmp
bound
aas
lock
push
dec
adc
push
flds
nop
push
cwtl
cmp
loope,pt
sbb
das
or
mov
cmp
cmp
jmp
lds
sbb
jnp
push
cmp
jp
ss
arpl
fwait
cmp
and
mov
or
les
int3
cmp
adc
pop
outsl
xor
pop
outsl
stos
lock
test
fwait
cli
gs
sbb
xchg
or
or
jae
fidivrs
lods
pop
adc
mov
add
js
sub
lea
sar
cmp
xchg
push
imul
in
fcomp
js
jne
sbb
das
sub
add
sub
jmp
mov
das
addl
jo
into
es
scas
rol
jmp
das
mov
popa
jnp
fisubrs
es
inc
mov
ja
inc
jbe
mov
sub
jle
sbb
and
push
dec
push
lahf
and
xchg
pop
jbe
in
rcll
in
fsubrl
xor
ror
imul
mov
add
dec
push
out
mov
dec
sub
jl
ret
mov
sahf
cmp
arpl
sub
out
inc
mov
push
mov
incb
test
clc
mov
inc
xor
cmp
jae
sub
xor
adc
lret
and
dec
pop
or
pop
ret
adc
or
cmp
sarb
and
cmpsl
pop
dec
shll
mov
sbb
inc
dec
xor
jne
adc
cmpsl
sbb
push
sub
add
dec
jno
or
mov
das
or
scas
das
mov
dec
xchg
in
call
mov
jae
incl
sarl
pop
sbb
inc
into
or
loopne
adc
and
and
cmp
ficompl
push
or
dec
and
inc
push
and
aaa
pop
cmpsb
nop
out
stos
sbb
inc
push
push
jg
fs
out
rcr
shlb
pop
dec
add
mov
xor
loope
xchg
bound
jnp
xlat
mov
push
push
xor
inc
adc
sbb
fadd
add
pop
push
jo
and
je
or
ret
lods
stc
je
scas
mov
add
xor
pop
in
cs
es
adc
fmull
xor
mov
aas
cmp
mov
sbb
ljmp
pushf
pop
addr16
fadd
ret
push
lods
pop
outsl
int3
jge
xchg
js
enter
jne
insl
xchg
jo
das
pop
inc
mov
or
and
mov
xor
aas
jmp
dec
outsb
xor
pushf
and
mov
mov
adc
sbb
add
mov
inc
imul
gs
adc
pop
push
mov
add
xchg
cmp
pop
sbb
in
pop
pop
dec
jns
loopne
fcoml
mov
xchg
adc
jne
or
push
leave
ljmp
inc
lods
xor
inc
aam
add
loopne
ret
fists
push
enter
lcall
cmpsb
subl
loop
cmp
inc
int3
add
adc
dec
adcl
push
mov
xchg
lods
ds
cmp
outsb
xchg
je
cmpsl
lods
jl
xor
loopne
pop
mov
sub
add
pop
dec
pop
add
dec
sub
sub
rcll
nop
add
test
mov
and
jp
jae
pop
into
mov
into
lods
mov
mov
push
iret
pop
or
ja
sahf
jne
mov
clc
push
jge
xor
push
insl
add
pop
pop
mov
jbe
xchg
mov
enter
js
dec
jle
std
inc
lds
aas
mov
loop
xchg
scas
fwait
enter
mull
ret
sahf
iret
xor
or
out
mov
push
and
cmp
cmc
in
adc
jns
pop
fcmovnb
hlt
pop
add
or
scas
sub
push
aas
adc
mov
mov
cmp
in
cmp
outsb
xchg
mov
lret
sub
jno
mov
lds
push
les
inc
pop
mov
test
mov
scas
mov
enter
ljmp
dec
pop
dec
loopne
add
xor
imul
jbe
cmpsb
ficompl
jo
cmpsb
test
ja
addl
int
xchg
sbbb
pop
int3
test
push
and
fdivrp
test
addl
inc
scas
inc
or
aaa
popa
fidivl
push
pop
and
clc
in
aaa
pop
mov
add
jp
or
inc
scas
mov
dec
inc
xchg
jb
out
jbe
out
lea
les
xor
cmp
sti
adc
imull
mov
ljmp
push
sub
cmp
in
mov
jns
inc
add
push
pop
jns
inc
dec
xchg
popa
pop
iret
inc
jnp
push
or
jns
xor
dec
aaa
inc
jns
xor
jnp
push
push
fs
lods
add
xchg
popa
and
or
sub
je
mov
mov
in
insb
mov
out
adc
loopne
pop
jns
jnp
adc
dec
nop
add
inc
jns
dec
sarb
cmp
je
out
add
mov
in
pop
out
pushf
pusha
dec
add
add
cmp
or
jge
inc
nop
lods
jg
lret
jge
xchg
fisubrl
mov
push
and
imul
rcll
jbe
push
std
icebp
inc
push
mov
cs
fisubrl
jl
mov
jno
aaa
xchg
scas
sbb
lds
dec
scas
rsm
or
sub
scas
push
scas
xor
jns
xor
andb
or
inc
sub
mov
cmpsb
inc
js
or
inc
addl
scas
dec
cld
mov
sbb
mov
subl
sub
push
nop
inc
xor
adc
inc
cld
les
ret
test
dec
or
pop
lcall
add
dec
sub
imul
adc
std
fcmovnb
jg
xor
adc
mov
cli
or
xor
lds
aas
sti
push
shlb
jne
lahf
cmp
xchg
int
cmpsl
xchg
pusha
inc
xchg
int
jne
int
cmp
imul
dec
jne
push
nop
push
mov
jg
jns
push
add
popa
popa
sbb
dec
pop
inc
adc
push
loop
push
jge,pt
cmpb
test
das
sbb
adc
pop
push
les
push
add
int3
sbb
add
mov
jle
or
mov
dec
xor
push
xor
push
dec
add
inc
xor
mov
lods
xchg
in
dec
clc
add
inc
jg
cmp
cwtl
fwait
aaa
fsubp
ficompl
inc
xor
scas
xor
scas
mov
mov
popf
ss
iret
dec
es
mov
int3
dec
cmp
pavgw
incl
inc
int3
xor
mov
add
aaa
movsl
sbb
repnz
outsl
in
pop
add
push
ret
dec
mov
lahf
push
adc
mov
hlt
adc
inc
inc
iret
inc
dec
imul
jns
inc
inc
stos
les
sbb
xchg
icebp
mov
rol
sub
into
lahf
and
xchg
or
adc
lods
shlb
stc
xchg
les
add
xor
add
add
data16
xor
popf
andb
cmp
inc
in
lods
sbb
push
adc
cmpsl
dec
add
push
repnz
out
sbb
dec
add
adc
dec
push
mov
fstps
ljmp
lods
ss
sub
sbb
and
ds
jg
xchg
inc
sub
into
mov
outsb
mov
xor
outsb
pop
enter
push
inc
jle
xor
sbb
pusha
add
fs
mov
xchg
adc
lods
in
adc
mov
stos
fisubl
cmp
pop
sub
dec
xor
mov
xchg
lahf
inc
mov
cmp
mov
mov
imul
inc
sbb
push
out
adc
mov
stos
lods
rcrl
test
ret
mov
into
test
scas
jl
xlat
fmul
ss
push
popf
inc
jbe
lods
cld
in
mov
filds
mov
lods
fsubr
filds
bound
jbe
or
sahf
jnp
shr
and
xor
xor
sbb
dec
xor
mov
add
test
aas
sub
mov
sub
enter
xor
push
add
push
scas
insl
ds
outsb
test
lods
sahf
call
jg
adc
jg
push
sub
bound
sti
add
sub
in
es
lds
push
fwait
adc
in
test
pop
sbb
mov
fs
jo
dec
push
or
add
movsl
lock
adc
cmp
mov
inc
mov
inc
popa
test
xchg
mov
adc
inc
pop
inc
sbb
mov
jbe
pusha
mov
adc
pusha
cmp
popa
fs
ss
inc
cld
or
scas
hlt
popa
lock
std
cs
push
push
jmp
and
lock
add
jo
jp
in
adc
pop
out
or
push
cvtpi2ps
xchg
imul
mov
xor
sbb
fcompl
sahf
cltd
outsw
adc
add
xchg
int3
pop
add
aaa
rclw
lock
ret
push
inc
je
mov
sub
pop
dec
pop
inc
dec
or
punpcklbw
sub
mov
into
fwait
sbb
jmp
sar
fadds
sbb
mov
je
sub
jnp
cwtl
cmc
xor
je
ficompl
jge
jbe
cmp
mov
cwtl
inc
loop
mov
aaa
push
rorl
push
jb
sbb
and
cs
clc
xlat
inc
scas
sbb
mov
test
cmp
inc
loop
adc
pop
sbb
data16
aam
lock
jecxz
adc
push
push
mov
lods
pushf
aad
jne
and
and
and
imul
jecxz
cmpsb
or
inc
and
pop
std
dec
cmp
mov
add
gs
add
lods
inc
xor
jge
push
jne
clc
shrb
loope
or
pop
add
dec
and
xchg
loopne
addb
gs
addb
lcall
add
es
hlt
cmc
inc
cli
sub
dec
adc
sbb
stos
rol
and
or
add
movb
rclb
aam
push
push
jecxz
sbb
dec
repz
adc
mov
and
das
call
lea
shll
dec
js
orb
push
adc
xor
clc
adc
fndisi(8087
dec
shrb
lret
loopne
mov
loop
jmp
push
mov
dec
mov
ret
adc
addr16
add
add
rorb
lds
mov
jmp
pop
stos
inc
sbb
adc
mov
mov
adc
inc
fimull
xchg
imul
addb
rorb
pusha
repz
orl
imul
test
add
aad
mov
pop
or
shlb
push
fdivrl
xor
sbb
mulb
and
sti
or
fs
hlt
push
popa
into
push
insl
scas
insb
push
xor
pop
call
push
pop
ljmp
xlat
insb
movb
gs
jg
mulb
inc
xor
push
xor
xorb
adc
adc
cs
in
call
dec
mov
inc
inc
xor
into
inc
insb
mov
mulb
pop
cwtl
jno
pop
js
or
and
cmc
inc
fcompl
add
cltd
xlat
xor
jbe
out
mov
and
xchg
xchg
scas
nop
js
cwtl
mov
push
test
mov
inc
cmpsb
inc
fisubl
inc
inc
inc
test
inc
aad
inc
add
xchg
push
mov
mov
js
icebp
mov
xor
es
das
inc
out
pop
xor
inc
or
pop
mov
sub
adcb
clc
lods
inc
lods
shrl
adc
inc
jae
dec
aam
stos
mov
mov
add
aam
jbe
pop
cmp
std
lret
mov
push
ret
dec
sbb
test
push
ret
push
mov
cmp
test
test
lea
push
jns
inc
or
movsb
cmp
das
mov
mov
adc
cmp
out
add
jne
lods
xor
out
loopne
ret
cmp
push
fadd
jp
loope
and
push
das
sbb
push
aaa
stos
das
shrl
shrb
aam
adc
pop
mov
clc
inc
sub
movsl
into
les
shlb
xor
adc
lods
test
adc
and
dec
push
pop
cmp
aas
ljmp
enter
movsb
arpl
jbe
add
cmpsb
xchg
arpl
xor
add
add
adc
adc
clc
movsb
add
xchg
sub
mov
fwait
push
das
xchg
inc
aaa
pusha
into
out
or
jle
xor
add
or
mov
xchg
loopne
rolb
inc
push
mov
or
and
inc
sbb
fwait
test
popf
adc
push
lods
push
push
or
add
sahf
xorl
push
lods
idivb
addl
js
mov
xorl
enter
dec
cli
ja
add
or
xchg
mov
xor
mov
test
test
inc
inc
add
adc
into
mov
in
add
mov
push
xchg
aam
jno
xchg
lods
btcl
lods
and
insl
aaa
jo
xor
into
pop
int3
add
push
mov
scas
pusha
out
pusha
pop
jp
mov
adc
insb
and
jns
in
or
adcb
xor
mov
mov
lds
xor
mov
roll
insl
sub
mov
mov
out
movsl
addl
leave
fistps
out
cltd
lods
pop
and
cmp
adc
add
cmp
push
mov
sub
rolb
sbb
inc
out
das
gs
push
mov
lods
xor
arpl
or
bound
movsb
dec
hlt
lods
out
or
jo
inc
aaa
adc
xchg
sbb
repz
jle
xor
lret
mull
pushf
cmp
test
xor
imulb
jo
jmp
inc
int
mov
mov
sbb
mov
scas
adc
iret
dec
pop
lds
mov
test
push
add
pop
ds
xor
mov
stc
ret
test
ret
adc
cmp
dec
insl
inc
popf
inc
jecxz
and
adc
mov
cmp
aaa
ljmp
sub
sub
dec
int
lock
adc
imul
jp
xor
imull
add
dec
sbb
fs
mov
test
push
push
sbb
adc
mov
fs
cmp
sub
sbb
adc
xchg
data16
xor
shl
push
add
sub
mov
out
push
into
pop
push
test
jle
inc
or
ja
xor
push
outsb
pop
adc
or
das
and
enter
lea
xor
dec
fildll
cmp
pop
insb
push
inc
popf
les
addb
out
push
mov
adc
mov
sub
test
or
jo
and
aam
lods
in
mov
mov
sbb
inc
jns
jns
push
ret
les
xor
jns
xor
ja
sbb
dec
test
inc
movb
push
pop
mov
ljmp
or
cmp
mov
outsb
sub
or
sub
pop
insb
mov
lods
popa
adc
cld
jg
testb
testb
testb
flds
or
pushf
pop
cmp
inc
dec
mov
insb
rorb
add
cmp
dec
xor
add
adc
add
mov
push
or
popf
roll
pushf
adc
sarb
test
or
cmp
stc
rol
sarb
leave
inc
xchg
cmp
aaa
push
and
incb
pop
jle
int
add
dec
iret
add
pop
fs
push
shrb
push
mov
inc
jl
mov
cmp
pop
daa
add
shl
adc
popa
leave
ret
pop
ljmp
jo
xor
mov
lods
xchg
and
mov
lret
cmp
dec
cmp
cmpb
dec
sub
adc
add
sub
mov
nop
xlat
mov
sub
inc
aaa
adc
lods
mov
std
shlb
popf
and
lods
mov
jno
sub
jge
push
pop
enter
jo
sub
outsl
xchg
and
jno
jns
push
cmp
inc
lahf
cmp
insl
mov
pcmpgtd
sbb
dec
pop
in
add
mov
loopne
popa
and
lds
aam
sbb
sbb
repnz
or
ret
inc
jae
es
adc
scas
add
das
push
hlt
std
enter
movsb
mov
mov
call
add
mov
inc
adc
mov
cmp
mov
and
jge
aaa
subb
inc
sahf
outsl
mov
mov
gs
scas
sbb
push
inc
or
dec
adc
mov
repz
cli
xor
addl
mov
imul
push
xchg
test
shr
push
cs
adc
imul
push
xchg
xor
test
jp
gs
xchg
ss
addl
or
js
cld
mov
mov
adc
scas
push
fistl
mov
loope
stos
lods
adc
pop
push
rol
loop
rclb
das
push
xchg
mov
mov
lea
xor
jecxz
mov
inc
push
std
inc
cmp
lret
xchg
sbb
andb
pop
js
mov
fs
adc
rcrb
xabort
fadds
lcall
add
sub
jmp
inc
je
lods
divl
outsl
cmpsb
fsubl
push
pop
mov
sbb
mov
pop
cmp
jp
mov
mov
push
shl
jl
inc
cwtl
push
mov
lock
fistpl
mov
pusha
fcmovnu
into
jne
pop
into
jbe
inc
xchg
inc
push
jl
loopnew
pusha
mov
iret
xor
mov
loopne
dec
cmp
inc
ret
pop
into
dec
sbbb
mov
jge
xor
sbb
xor
xor
inc
pusha
xor
int
mov
test
test
sti
out
adc
mov
into
xchg
or
outsb
pushf
inc
pushf
or
add
push
faddl
xor
add
adc
adcl
stos
and
test
nop
mov
xchg
pop
int
mov
clc
mov
pop
cmp
mov
lcall
sub
mov
add
pop
or
call
push
xor
jge
add
daa
push
jbe
les
mov
jge
les
fcmove
jge
mov
in
jge
add
xchg
scas
xlat
jge
push
aaa
pop
mov
ret
scas
mov
repz
or
test
mov
push
or
and
adc
sarb
xchg
inc
ss
test
mov
cmpsl
orb
mov
push
stos
push
sbb
push
imul
pop
sbb
mov
pop
in
lea
mov
sub
outsb
call
addr16
lods
inc
fsubs
sub
ficoms
aaa
xchg
sbb
mov
jns
rcl
popa
jecxz
push
outsb
pop
jb
mov
movsb
cmpsb
sar
push
xor
dec
adc
rclb
dec
jge
xor
cmp
push
data16
dec
mov
je
pop
or
xchg
xor
out
mov
add
lods
shr
mov
add
adc
js
je
sbb
insl
dec
loop
je
push
cld
mov
dec
fists
test
cld
push
clc
mov
test
sbb
mov
scas
rolb
add
lds
ficompl
inc
jle
xchg
pop
addl
add
jle
adc
repnz
dec
jne
aas
ret
sub
into
add
add
int3
add
pop
adc
inc
roll
push
dec
das
xchg
sbb
sub
pop
cmp
push
bound
out
std
push
fs
add
sbb
sub
inc
adc
mov
push
inc
mov
add
shl
ja
dec
es
pushf
pop
mov
movsb
lods
outsb
add
add
fs
mov
sub
testb
xor
orb
add
sbb
mov
pusha
mov
adc
xchg
inc
and
ror
call
rolb
call
fiaddl
outsb
add
lods
or
pop
xchg
add
push
movsb
mov
cli
inc
fdivr
push
xor
cmp
scas
inc
lods
pusha
repz
jo
enter
mov
mov
pop
dec
jge
xor
add
mov
cli
sarl
or
mov
sub
xchg
xor
lods
cwtl
ljmp
push
lcall
xor
sub
cmp
inc
pop
jmp
jle
xor
jl
xor
xor
xor
dec
or
pop
sbb
rcll
jb
and
adc
loopne
loope
pop
rcl
inc
sbb
xchg
mov
cli
dec
ss
jbe
call
pop
jle
pusha
mov
mov
test
mov
push
loope
popf
inc
pusha
pop
xchg
jle
repnz
lods
push
mulps
jne
mov
push
jno
mov
lods
test
lods
mov
outsb
and
cltd
nop
xchg
mov
mov
lret
push
adc
inc
dec
stos
pop
lods
mov
adc
sub
sbb
lods
in
xchg
inc
or
clc
ret
mov
push
jno
and
add
ret
mov
or
inc
pop
and
and
jl
cmc
daa
jecxz
repnz
mov
adc
or
add
inc
gs
mov
xchg
cmp
mov
jg
adc
invd
aam
out
mov
mov
dec
ja
xchg
mov
cmpb
xor
jns
shl
outsl
cmpsb
icebp
pusha
pop
hlt
and
add
or
cmp
pop
pop
hlt
cmp
pop
ds
aam
lea
cmp
lret
test
push
jp
fsubrs
xlat
inc
fldl
stos
pop
movsl
pop
and
xor
popa
out
push
sub
bound
mov
lods
lods
and
bound
sub
lahf
insb
fs
pop
sbb
lods
push
xorb
pop
les
xor
mov
fildl
popf
fildl
mov
sbb
push
and
test
push
fnstcw
adc
add
rclb
ffree
fwait
adc
adc
adc
inc
inc
insl
add
pushf
pop
popa
inc
js
daa
mov
movl
adc
xor
roll
and
sbb
xchg
arpl
scas
add
adc
xor
mov
push
outsl
loop
cmp
jno
adc
ss
sbb
cwtl
xchg
das
pop
int3
sbb
rol
movq
daa
sbb
insl
push
scas
mov
lcall
or
cmp
lods
sar
jne
scas
rcl
and
mov
xor
out
or
outsl
and
outsb
xchg
adc
mov
ss
inc
xchg
xchg
or
inc
shl
jne
and
or
stos
js
movsl
bound
mov
jbe
or
icebp
mov
inc
jl
or
xlat
test
sti
lcall
jge
xor
shufps
es
pop
lock
enter
clc
insb
xor
daa
and
push
inc
xor
das
inc
scas
push
xor
das
inc
scas
jp
inc
xor
xor
jo
dec
andl
scas
pop
adcl
push
rcr
sbb
je
sub
add
lock
fwait
mov
or
xor
jnp
cmp
xchg
sbb
pop
int
or
xchg
xor
adc
test
xchg
cmpsb
repz
int
inc
cmpl
mov
adc
or
inc
or
gs
std
adc
ret
js
add
sbb
xor
enter
ds
mov
inc
mov
icebp
push
add
xchg
push
or
mov
sub
push
pop
sti
inc
adc
lods
mov
mov
rcrb
sub
dec
mov
movsl
je
std
pop
cmp
or
mov
sahf
and
xor
test
cmp
js
sti
cmc
daa
lods
fs
ljmp
mov
inc
pop
push
adc
push
inc
push
das
dec
sbb
mov
loopne
imul
call
add
sbb
sbb
lsl
outsb
push
dec
lret
test
fptan
fsubs
mov
push
and
test
xor
push
push
push
push
pop
enter
push
push
test
repnz
pop
pop
bound
or
pop
pop
jle
sub
push
loope
mov
push
das
dec
loopne
pop
sbb
lcall
xlat
mov
sbb
dec
pop
adc
shlb
pop
popa
sbb
lds
inc
jecxz
and
cmpb
and
lret
lds
aas
into
ret
rcrl
push
in
xor
adc
call
mov
cs
into
ret
scas
test
xchg
fisubrl
mov
test
cmp
sub
jno
push
lea
sub
or
shr
fmul
roll
sbb
xchg
mov
sbb
push
lods
dec
in
dec
pushf
das
inc
inc
push
idivb
cli
sub
cmc
and
movsb
dec
push
ljmp
pslld
insl
push
push
leave
out
fisttpll
std
leave
lods
and
mov
and
sbb
call
sub
daa
andnps
insl
mov
adc
call
mov
and
sbb
mov
scas
add
fwait
mov
imul
imull
lea
push
xor
push
js
add
mov
jae
pop
push
dec
jl
adc
mov
push
push
je
dec
and
inc
sarb
test
sti
pop
ljmp
xchg
adc
sub
adc
testl
cmp
pop
sbb
xor
adc
sub
mulb
jns
dec
outsb
into
sarb
or
fldenv
adc
stos
leave
hlt
frstor
sub
xchg
push
inc
int3
ret
das
or
das
ficomps
pushl
xchg
or
inc
cltd
push
ret
in
movsl
adc
imul
cmp
cmp
or
dec
je
mov
push
sbb
daa
push
into
pop
icebp
dec
or
pop
mov
arpl
jo
movsl
xchg
push
sub
sub
and
inc
sub
sbb
out
stc
es
daa
into
push
sarl
xchg
cmp
rcrl
imul
dec
je
push
lods
xor
pop
or
ret
gs
jne
mov
adc
and
adc
pushl
addr16
int
dec
dec
jns
aaa
push
in
jnp
out
pop
jns
xor
rcl
xchg
testb
rolb
xchg
add
scas
jno
out
sbb
dec
repz
scas
pop
in
or
pop
add
add
movsl
mov
push
inc
push
push
ss
imul
pop
inc
and
icebp
sbb
mov
popf
sub
adc
rol
adc
or
inc
out
rorl
dec
rcll
or
pop
xor
mov
fs
dec
sbb
test
xchg
insb
scas
dec
jbe
mov
test
adcb
xor
push
std
mov
addb
push
into
adc
outsb
adc
pop
and
insl
cmp
les
sbb
or
mov
pop
dec
movsb
lods
dec
loopne
inc
jecxz
dec
pop
mov
sbb
sbb
dec
dec
lods
mov
inc
data16
clc
test
xor
rcr
int3
into
mov
jle
pop
inc
pop
pop
ja
ljmp
and
mov
pop
lods
js
xor
loopne
xor
mov
fs
xchg
pop
ret
jns
mov
cmp
push
sbb
shrb
nop
push
adc
xor
push
sti
ss
ret
lahf
popa
adc
and
je
fisttpl
movb
jle
cmp
orl
test
mov
jae
aaa
idivb
xchg
mov
dec
pop
mov
mov
cmp
lods
out
sbbb
call
xor
icebp
les
xchg
aas
add
xor
gs
sub
add
sub
ljmp
lds
push
sbb
add
dec
test
subl
push
mov
das
and
test
add
push
fmuls
push
or
fildll
lock
jo
int3
push
push
or
sbb
jecxz
bound
ja
and
add
lods
cmp
mov
outsb
fsts
inc
dec
or
lea
push
cmp
orl
outsb
or
and
xchg
popa
adc
dec
lods
push
adc
pusha
xor
pop
add
xor
pop
jle
push
les
sbb
and
push
push
addl
push
leave
adc
dec
sub
inc
cmp
and
enter
mov
dec
ds
push
pop
fcomps
push
nop
sub
stc
xchg
rcll
sub
inc
mov
mov
and
jbe
or
pop
mov
and
cmpb
and
cmp
adc
xchg
jae
inc
pop
sbb
jle
sbb
iret
ret
jle
dec
and
add
sub
push
lahf
and
daa
outsb
inc
lea
cmp
jecxz
cmovge
inc
punpcklbw
lods
shr
push
das
insl
and
adc
jle
push
add
cltd
pushf
scas
inc
adc
push
xchg
ret
push
test
cltd
repz
or
and
in
fsts
inc
inc
lret
add
sub
sahf
fisttpl
xor
jne
leave
dec
jae
fcomps
and
push
out
jne
pop
enter
sbb
cmp
cmp
ljmp
test
inc
das
mov
pushf
mov
popa
fsubrs
xchg
outsb
inc
or
pusha
cmp
mov
scas
and
xchg
scas
cmp
xor
scas
add
sub
push
scas
sub
inc
test
sbbl
sub
dec
mov
or
lahf
fbld
hlt
push
scas
jnp
jl
pop
scas
jbe
scas
pop
add
push
pusha
addb
add
mov
dec
cld
mov
cwtl
xor
add
sbb
mov
sbb
jo
and
fadds
loop
test
cmp
out
xchg
cmpsl
lods
stos
fdiv
xor
mov
push
mov
or
push
hlt
pop
xchg
clc
xor
inc
mov
xor
sbb
lcall
into
dec
xchg
push
lods
push
push
leave
inc
add
out
push
mov
inc
pop
pop
or
jle
pop
sbb
jg
loopne
nop
add
inc
or
movsl
test
sub
enter
adc
scas
movsl
int3
sub
clc
push
fwait
mov
das
inc
pop
add
js
add
shll
cwtl
pop
outsl
inc
sbb
mov
jnp
shll
roll
adc
pop
xor
xor
adc
cmp
rclb
and
mov
js
cmpsb
inc
out
punpckhdq
lds
mov
adc
sti
ret
mov
nop
clc
add
sbb
push
xchg
dec
jg
mov
jle
jno
movsl
adc
add
aaa
lcall
ja
mov
inc
lea
daa
je
jns
xor
xor
sahf
mov
std
and
data16
jns
sarb
repnz
pop
push
divb
mov
sub
inc
push
mov
lds
loope
adc
cli
add
dec
jecxz
dec
fsubr
into
add
mov
adc
and
push
and
shlb
and
loopne
into
xor
add
loope
test
nop
loope
lcall
add
mov
fldl
xchg
mov
pop
popa
add
sbbb
ret
lock
lret
imul
bnd
or
outsb
aaa
cmpl
fcoml
lods
jp
aas
mov
mov
xchg
mov
xor
subb
hlt
push
push
adc
fldcw
jg
adc
dec
jno
push
xor
les
gs
and
aaa
mov
cmp
adc
xor
jmp
loope
adc
int3
pop
lea
or
clc
imul
in
cmp
js
or
enter
les
or
sbb
or
and
or
js
dec
and
shlb
or
mov
aas
dec
or
jo
push
dec
roll
shll
loop
sbb
xchg
mov
jecxz
xor
push
adc
xlat
loopne
jmp
orl
cs
pop
dec
shlb
adcl
sbb
mov
fcomps
mov
pop
mov
fcmovbe
mov
daa
js
and
cwtl
es
push
js
loop
pop
loop
lods
pop
or
fldenv
sub
or
in
adc
cmp
mov
mov
lock
pop
xor
lea
jl
xor
fldl
mov
jp
pop
js
dec
inc
addb
or
call
push
jb
popa
inc
inc
stos
pusha
push
mov
outsl
inc
xor
push
xor
add
lret
imul
inc
loopne
add
js
cld
xor
cmpsb
fidivrs
and
inc
and
add
punpcklwd
fcmovbe
sub
lods
mov
inc
out
daa
sbb
mov
and
dec
add
mov
insl
dec
out
or
adc
mov
xor
movsb
push
push
dec
dec
lahf
jp
popf
pop
xor
fsubr
ret
push
push
fs
in
add
dec
push
xor
mov
xchg
adc
fstpl
mov
stc
xor
add
outsl
daa
hlt
adc
mov
shlb
xchg
arpl
dec
push
adc
mov
cwtl
sub
lret
imul
cmp
or
mov
pusha
gs
push
lods
lea
pusha
shll
or
xchg
add
out
ret
shrb
imul
mov
roll
popf
xor
pop
or
and
inc
lods
sahf
inc
mov
dec
mov
or
dec
fcomp
js
scas
mov
pusha
mov
push
shrl
loopne
mov
into
pop
jne
mov
jns
icebp
or
out
push
pop
stc
pop
jne
movsl
mov
jmp
mov
sbb
js
call
ja
in
sbb
cmp
cmp
scas
cld
cwtl
in
and
faddl
lret
addb
imull
mov
mov
push
add
dec
sub
outsl
dec
xchg
sub
mov
add
adc
inc
adc
and
call
push
pop
xor
fmuls
les
push
mov
mov
dec
sbb
xchg
in
jge
arpl
icebp
out
hlt
push
push
dec
push
pop
orl
out
adc
popa
pushf
xor
add
or
adc
dec
sahf
add
test
mov
pop
mov
scas
or
push
add
lods
fsubrl
pop
lahf
sbbb
mov
push
dec
ror
clc
nop
subl
rol
movsl
push
dec
cmp
xchg
movsl
push
std
and
cwtl
add
ja
inc
jl
fs
in
xor
sbb
jb
movsl
test
and
in
lods
stos
pushl
movsb
loope
mov
xor
xor
mov
sub
add
pop
hlt
add
lods
jecxz
leave
or
pop
jbe
sbb
mov
add
dec
enter
stos
push
jbe
jmp
lcall
xchg
pop
int3
fmuls
into
push
lret
dec
inc
push
fiaddl
add
adc
xor
std
lret
sbb
std
mov
jnp
aad
cli
inc
fnsave
fdivrl
and
lahf
shll
pop
inc
sub
pop
push
adc
xchg
int3
xor
test
xor
xor
lret
leave
sub
cmpb
cmc
inc
push
inc
xor
imul
std
push
inc
xor
and
mov
popf
sti
loop
push
cmp
dec
adc
sub
cmp
jns
aam
pop
and
sbb
dec
test
sub
ljmp
add
xchg
test
mov
cmp
fnstcw
pop
jp
je
cmp
ja
xchg
in
jo
cltd
cmp
hlt
inc
pop
sub
aaa
sahf
rol
fcomps
cld
xor
aaa
out
inc
aaa
mov
lahf
inc
rcrb
dec
inc
das
dec
es
and
sbb
push
inc
jp
jne
xlat
cmp
adc
inc
clc
gs
inc
adc
or
jnp
xchg
enter
mov
sub
enter
push
testl
xchg
xor
push
orps
inc
outsb
cwtl
mov
hlt
sub
pop
je
ss
jno
pop
xchg
into
loope
ret
das
adc
adc
outsl
mov
mov
mov
ret
dec
andl
fs
iret
test
das
or
shrb
mov
and
and
shlb
out
rclb
xchg
jl
int
cmp
sub
push
roll
xor
pop
push
pop
aam
movsb
les
inc
jl
lret
xchg
mov
add
cmp
pusha
enter
mov
jnp
into
popf
pop
inc
pop
mov
adc
and
push
add
mov
fisubl
adc
and
sub
sbb
add
push
jg
inc
dec
fld
mov
lea
lock
xchg
test
push
rcrb
lock
cmp
add
dec
sub
add
andl
xchg
cmp
adc
ss
dec
dec
sbb
clc
fs
inc
xor
std
inc
iret
lock
push
pop
cld
sbb
adc
les
insl
sub
outsl
push
js
addr16
ret
aas
inc
imul
fwait
enter
push
push
push
push
call
pop
das
ja
hlt
and
sbb
xorb
and
xchg
outsb
inc
bound
cmp
push
test
in
inc
popf
movsl
add
gs
inc
cmp
sbb
inc
cmp
push
sub
xchg
mov
push
scas
xchg
repnz
mov
adcl
and
push
push
or
lods
or
arpl
pop
popa
lods
sbb
sbb
pusha
mov
rorb
xor
sbb
pop
pusha
mov
dec
imul
mov
dec
aam
add
adc
dec
cmp
or
dec
sub
imul
or
jge
sahf
jbe
jns
push
adc
test
dec
dec
bswap
fimull
dec
mov
and
adc
sub
sbb
mov
inc
xchg
stos
sbb
mov
je
adc
mov
xor
push
dec
adc
repz
aam
pushw
addb
mov
and
push
push
sub
adc
divb
incb
mov
inc
test
lods
popf
sub
dec
or
jne
jnp
test
jle
aaa
sub
xchg
int3
add
and
inc
dec
push
push
and
mov
out
test
push
daa
sti
in
bound
sbb
shl
adc
ja
out
rorb
jle
js
cmpsb
int
add
loope
sub
insl
push
out
cmp
cmp
cmp
cmp
pop
sub
and
and
push
aas
lds
rcr
dec
aas
lods
ljmp
stos
xorb
daa
dec
ja
ds
in
jo
mov
arpl
xchg
addr16
mov
into
mov
sub
pop
push
test
dec
mov
mov
cmpsl
popa
pop
in
adc
sbb
push
xchg
je
imul
std
dec
inc
sahf
sub
arpl
xchg
outsb
add
xlat
jne
daa
inc
add
stc
mov
std
mov
dec
scas
push
inc
cmp
mov
dec
je
insb
mov
inc
push
lods
inc
add
and
adc
ljmp
lea
mov
xor
test
mov
dec
jnp
pop
add
push
xorb
outsb
or
xorb
add
mov
cs
sahf
nop
imul
mov
std
or
mov
push
andb
mov
cmp
sti
adc
or
mov
jo
cmp
enter
xchg
pop
lret
dec
cmp
push
pop
lods
lcall
and
addb
add
or
aam
push
sbb
inc
dec
sti
inc
xor
sub
ljmp
imul
into
mov
cmp
and
dec
xchg
jle
aas
sbb
or
add
movsb
dec
xchg
les
cmc
adc
inc
or
aam
movsb
inc
hlt
iret
mov
cltd
test
xchg
pop
xor
and
mov
and
dec
inc
test
mov
cmp
lret
sub
mov
add
dec
or
mov
andl
jo
loope
mov
popa
xor
or
into
in
cltd
addl
push
cmpsb
pop
mov
push
jnp
jnp
sbb
addb
lods
mov
popa
dec
adcl
inc
push
dec
repz
jb
fidivl
pop
js
pop
lods
xchg
testb
mov
adcl
fsubr
cmp
jge
xor
out
daa
adc
rcr
sbb
mov
mov
xchg
jle
sahf
int
cli
jnp
adc
test
daa
enter
add
arpl
jae
imul
lods
sbb
aam
aam
jne
pop
inc
add
pop
cli
test
inc
aam
mov
outsl
lods
movsb
mov
jno
aad
cmp
xor
mov
pop
xchg
lods
insb
cli
xlat
es
lods
inc
sub
mov
daa
push
xchg
xchg
add
mov
inc
dec
aaa
cmpsb
sbb
dec
psubd
jecxz
adc
add
jno,pt
ret
in
jno
inc
sub
mov
lods
add
inc
mov
stos
shll
jne
js
and
pop
add
das
push
pop
js
scas
push
rcrb
ret
clc
lods
call
dec
leave
scas
xchg
sub
das
push
push
jns
dec
lods
mov
sbb
dec
data16
mov
mov
xor
and
dec
lret
lgs
add
inc
cli
cmp
add
sbb
cmp
or
loopne
sub
or
shr
dec
push
mov
xor
imul
out
mov
outsl
cs
adc
pop
pop
dec
js
je
mov
adc
or
repnz
scas
jno
sub
xlat
lret
inc
push
adc
js
iret
mov
test
int
dec
outsb
imul
scas
dec
adc
sub
jmp
pop
or
adc
xchg
cli
rcrb
adc
xchg
gs
movsb
cmpl
mov
test
sbb
dec
out
sub
jl
int3
inc
lods
and
shlb
js
mov
lock
mov
ljmp
xor
aad
jne
sbb
cs
adc
pop
or
push
jae
outsl
mov
xor
mov
dec
push
scas
dec
inc
xor
or
or
inc
les
adc
push
inc
ret
scas
push
sbb
add
loope
in
loop
fcomp
push
clc
jae
iret
popf
xor
std
sbb
and
pop
into
xchg
mov
xor
test
lahf
lret
pop
pop
cmp
push
jae
push
push
and
les
cwtl
sahf
fsubrs
lock
mov
insl
jbe
inc
out
loop
mov
push
inc
fmull
sahf
xchg
sbb
int3
cmp
das
add
dec
orb
xor
outsb
xor
and
cmp
cmp
push
loope
and
jae
push
in
jbe
cmp
clc
dec
xchg
inc
jl
sarb
movsl
push
sub
pop
fiaddl
adc
outsb
pop
roll
iret
sub
mov
xor
hlt
into
test
mull
or
mov
push
inc
adc
add
jnp
or
xor
dec
les
jp
add
and
pusha
or
jo
sbb
popa
enter
lcall
adc
adc
aam
in
iret
inc
sub
fsubrp
mov
je
popa
mov
inc
popa
adc
dec
inc
popa
mov
push
scas
and
sarb
gs
fmuls
pop
push
push
inc
adcl
sar
fdivl
jmp
adc
pop
cld
push
gs
stc
sub
out
adcl
enter
pop
sub
adc
cmp
test
dec
sub
aaa
fwait
mov
xor
and
mov
dec
or
es
jg
cmp
pop
sub
or
and
and
test
add
insb
sub
jg
inc
dec
or
push
filds
iret
dec
jecxz
outsb
inc
mov
xor
dec
movsl
dec
gs
sbb
dec
mov
icebp
dec
dec
leave
push
push
scas
xlat
test
xchg
push
dec
into
xor
out
cltd
sub
sbb
pop
fcoml
lcall
xor
sahf
jp
or
pop
jne
dec
dec
movsb
mov
dec
push
sub
popf
ret
inc
popa
rcrb
insl
push
cld
icebp
test
mov
dec
jbe
sub
dec
leave
xchg
dec
adc
orl
imul
or
sbb
sbb
mov
pusha
cld
in
popf
push
jb
or
cld
std
fs
lods
fnstsw
inc
lods
ret
or
iret
or
cmp
inc
lods
xor
fbld
orl
add
jo
or
jnp
test
dec
lods
or
lods
add
dec
xchg
inc
push
dec
lods
imul
push
pop
ds
jno
mov
iret
pop
ja
cli
inc
repz
ljmp
js
push
inc
lds
adcl
pop
sub
pop
dec
sbb
pop
mov
mov
push
push
xchg
fidivs
mov
sub
inc
adc
add
xchg
test
leave
fisubl
movsb
repnz
xor
dec
cmp
jl
fildll
lods
jnp
hlt
xchg
xchg
cmp
ret
add
mov
sarb
into
push
lods
mov
je
jns
dec
mov
ja
xor
dec
scas
es
stos
mov
fucomip
sub
scas
or
jns
inc
xchg
lods
jns
mov
insb
inc
sbb
pop
fidivl
std
hlt
adc
dec
push
in
adc
in
fisubs
fs
push
fcmovu
dec
rcl
push
pop
shrl
mov
dec
mov
insl
scas
and
pop
ljmp
clc
stos
and
xchg
and
aas
dec
lret
adc
sub
jnp
inc
push
add
imul
push
sbb
cwtl
jne
fnsave
inc
push
jo
ffreep
dec
scas
push
mov
dec
sub
stos
add
mov
imul
push
cs
mov
adc
fs
mov
pop
jge
subl
aas
mov
pop
push
cmp
vandnpd
test
push
rcrl
xor
jns
dec
sub
pop
jp
sbb
inc
inc
call
push
fisubl
hlt
mov
cmp
inc
and
mov
lods
sub
pop
mov
and
movsb
dec
out
mov
insl
xor
mov
mov
jmp
cmpb
cld
shll
jbe
sbb
ss
fbstp
cs
ret
jne
leave
loop
negl
sub
xchg
or
cmp
pop
push
pop
test
mov
sub
addr16
mov
dec
xchg
sub
nop
jo
or
movsl
mov
hlt
imul
add
daa
pusha
fimuls
ds
cwtl
nop
lds
arpl
dec
rcrl
bound
in
loopne
jge
aas
je
rcrb
jg
shll
iret
lds
loopne
in
xchg
push
mov
neg
arpl
jbe
fsubs
adc
popa
jge
or
orl
push
sub
cltd
push
ret
dec
jb
cltd
pop
dec
sbb
inc
in
in
xchg
inc
orl
add
movsl
in
dec
inc
addr16
psubd
call
dec
xchg
jg
add
xor
sbb
sbb
dec
inc
inc
xchg
lods
cmp
mov
inc
scas
lcall
clc
mov
inc
clc
mov
dec
pop
inc
jo
das
add
xchg
pop
jl
xor
aaa
inc
add
dec
xor
cltd
iret
push
add
fwait
pop
push
ret
jle
inc
dec
dec
push
xchg
test
jne
or
into
aaa
dec
xchg
push
mov
pop
lahf
gs
push
cmpsb
lcall
outsl
push
dec
dec
mov
xchg
inc
jno
cmp
fs
push
dec
cmp
sub
in
add
xchg
sbb
add
push
dec
in
xchg
pusha
pop
dec
dec
and
and
sub
inc
ss
lret
sbb
ja
xlat
enter
fwait
cld
inc
cmc
inc
jnp
add
sub
inc
pop
je
add
xchg
movsb
adc
mov
mov
adc
add
in
xor
pop
stc
sub
mov
jb
jnp
push
jg
push
mov
filds
lods
mov
add
lock
lea
dec
dec
adc
popf
outsb
arpl
xchg
push
xchg
xchg
fwait
sahf
je
roll
pop
sbb
inc
loopne
add
xor
loop
and
sti
lahf
push
dec
scas
dec
xor
rdtsc
bound
setno
adcl
mov
push
jns
xor
nop
dec
dec
pop
inc
jp
movsb
inc
jb
mov
fcompl
jo
sahf
clc
aad
cs
dec
int
jge
mov
push
ret
iret
loopne
push
gs
pusha
pop
pop
lcall
mov
pop
inc
cmpsb
fidivl
pcmpgtw
cmp
mov
int3
lret
pop
add
imul
dec
cmp
popf
push
add
inc
mov
pop
xlat
push
mov
dec
daa
add
mov
out
das
cmp
lods
and
in
mov
and
jmp
or
mov
jnp
cmpsl
dec
fdivrl
xor
dec
xor
dec
or
dec
lret
test
and
lcall
insb
cs
xor
leave
inc
les
xor
xchg
mov
sub
cld
mov
outsb
pop
cmp
xor
xchg
or
lods
push
sbb
ja
dec
or
lods
mov
dec
lods
test
inc
lods
mov
iret
push
iret
xchg
test
pop
hlt
xor
xor
js
dec
sbb
fiaddl
adc
push
pop
movsl
pop
mov
lret
sbb
pop
in
push
out
es
push
cmp
add
mov
push
in
ljmpw
gs
in
inc
push
pop
into
adc
dec
popf
ss
fstpl
push
cmp
mov
mov
and
jbe
xchg
pop
mov
sub
push
cmpsl
rorb
dec
lcall
cmpsb
mov
xchg
cmp
popf
inc
adc
cmp
push
add
mov
lea
sahf
cmpsb
js
jbe
xchg
roll
push
push
cld
push
pop
mov
cmpb
xor
fcomps
dec
dec
push
cmp
inc
popf
jle
xchg
fstp
out
bound
lods
sbbl
lock
xor
ds
mov
out
push
rcll
inc
mov
jne
jns
push
pop
adc
testb
jne
jae
popa
mulps
mov
fwait
lods
mov
gs
cltd
inc
push
add
pop
fildll
inc
int3
sbb
mov
dec
and
dec
outsb
bound
ds
fisttpl
test
mov
or
dec
lods
cmp
ja
add
mov
xor
jmp
test
xor
mov
mov
pop
mov
xor
sub
mov
cwtl
and
mov
test
bound
divl
lods
lahf
dec
adc
push
jecxz
subb
rorl
js
cmpsb
fisubs
cmp
aas
add
dec
repz
rclb
or
inc
or
imul
sbb
hlt
les
sbb
push
fcompl
inc
push
pop
push
je
adc
out
xor
ds
repz
in
popa
sar
iret
rcrl
fdiv
sti
pop
ret
push
mov
in
mov
iret
repz
shr
test
jge
int
bswap
mov
push
mov
int
insb
mov
leave
lret
push
ss
mov
jnp
sti
inc
aam
cwtl
ja
fadds
cmc
idivb
sti
mov
ss
int3
push
pop
pop
leave
jno
out
xchg
dec
iret
and
dec
mov
jne
sbb
push
push
inc
pop
jecxz
xchg
in
jp
je
add
or
int3
loop
push
int3
rol
dec
cmpsl
push
pop
addl
xchg
pop
into
incb
adc
int
inc
and
subb
int
push
pop
add
dec
enter
mov
test
ja
sbb
push
jne
jbe
push
cmp
dec
push
inc
test
enter
pop
lods
inc
rcrb
in
inc
mov
mov
inc
cltd
scas
xor
sbb
test
xorl
lods
sarl
aam
inc
fdivl
fbld
dec
imul
xchg
dec
adc
xor
jne,pt
dec
jns
xor
add
aaa
mov
sbb
jnp
xor
inc
and
xorl
mov
or
lods
adc
daa
mov
sar
cmp
pop
mov
dec
push
inc
mov
mov
inc
adc
test
out
push
push
inc
cmpb
orb
push
dec
shrb
push
xor
xchg
outsb
mov
insb
xor
add
add
enter
data16
push
aaa
mov
dec
inc
inc
xchg
mov
icebp
enter
out
pop
nop
jo
outsl
dec
movsb
mov
ljmp
add
push
test
inc
jl
mov
mov
sbb
std
cs
decb
ret
inc
mov
adc
cmp
les
mov
pop
sub
mov
dec
adc
push
push
ret
xor
lods
dec
lods
fwait
mov
lock
pop
das
imul
mov
cmc
inc
push
iret
lea
push
adc
push
xor
mov
lea
pop
sub
xor
adc
adc
test
inc
lods
add
inc
adc
xchg
jl
push
adc
or
add
adc
addb
pop
xor
jne
pop
loope
leave
adc
rcrl
add
lds
inc
xor
inc
arpl
and
push
bound
and
dec
rolb
or
push
adc
mov
add
xlat
pop
out
push
and
adc
add
adc
aam
lds
pop
push
aad
xor
aaa
je
ds
mov
mov
sbb
push
jo
ficompl
xchg
jle
mov
add
mov
pop
pusha
pop
dec
les
in
mov
loopne
sub
mov
pop
scas
lods
xchg
or
or
ja
jl
or
sbb
fwait
cmpl
push
out
les
test
sti
imul
sub
add
fisttps
or
pop
add
test
ljmp
adc
jo
mov
dec
xchg
jo
cmp
sub
inc
mov
testl
out
cmc
or
xor
fildl
popf
cmp
xchg
dec
in
sub
aaa
cs
std
dec
aad
ja
push
sub
cmp
sbb
out
cmp
ror
pop
mov
adc
popa
adc
xchg
repnz
mov
push
and
xchg
push
sbb
push
movsb
cmpsb
push
sahf
add
outsb
xorb
inc
xchg
ds
outsb
jge
push
or
and
pop
mov
push
sbb
dec
call
daa
fimuls
push
mov
int3
xor
dec
jmp
mov
out
clc
adc
lret
mov
mov
xchg
pushf
mov
xor
inc
sbb
ds
daa
scas
stos
in
xor
push
inc
int3
jmp
popf
leave
inc
push
add
and
mov
decl
nop
xor
ret
lods
mov
dec
pushf
and
mov
inc
push
pop
mov
mov
push
enter
fcomip
andb
mov
push
sbb
sub
lds
out
gs
xrelease
push
push
xor
insl
jg
mov
jl
inc
fwait
sbb
sahf
mov
mov
or
xchg
mov
jbe
mov
lods
push
cld
xor
jbe
cmp
mov
jae
aas
xchg
mov
mov
push
in
mov
dec
dec
jo
fcmovu
mov
cs
ss
jg
loopne
pushf
xchg
push
das
cli
xor
cmp
mulb
mov
fs
hlt
mov
and
mov
lcall
mov
sbb
mov
enter
out
nop
sahf
jmp
cs
bound
mov
cmp
ss
inc
inc
cwtl
les
into
push
js
xor
mov
int
mov
and
cmp
inc
call
cli
int
int
mov
fisttps
jb
cmp
push
fadds
fxch
inc
addr16
or
push
xor
sbb
adc
jbe
lret
adc
jle
jle
sti
idivl
test
xchg
test
jge
cmpsl
icebp
inc
xchg
push
xchg
dec
enter
daa
sbb
lahf
xchg
cmp
testb
push
jle
ret
push
inc
bound
aam
faddp
int
mov
pop
push
xor
push
vpshuflw
ja
leave
ljmp
pop
popa
scas
mov
cs
add
lock
mov
and
popf
lods
mov
cmpsb
aam
cmpl
lods
les
cli
inc
daa
repnz
fmull
fildl
xchg
mov
push
dec
int3
pop
outsb
fs
xor
and
mov
xlat
xchg
outsl
jno
int
in
mov
adc
dec
scas
xchg
cmpsb
mov
outsb
test
push
lahf
sub
dec
xchg
shlb
sbb
xor
ja
loopne
mov
inc
inc
add
add
or
or
in
jno
cs
sbb
insb
push
adc
add
inc
adc
or
sarl
das
cmp
daa
jmp
subl
cli
gs
and
lret
cmp
mov
mov
push
cmp
cmp
into
mov
mov
mov
lds
call
add
cmp
mov
lods
xchg
dec
push
sti
pop
fsubrs
out
mov
inc
pop
sbbb
iret
out
shlb
mov
mov
jg
sub
pop
in
scas
outsb
and
lret
adc
jle
jnp
es
xor
call
test
dec
out
and
sti
out
pushf
inc
test
fidivs
xlat
inc
mov
popa
mov
mov
aas
sbb
scas
and
scas
shlb
pop
leave
out
jns
xor
xor
cmp
fwait
out
enter
mov
xchg
cmp
mov
hlt
scas
stos
fistpll
test
jns
and
data16
hlt
and
sbb
call
repnz
int3
sahf
jbe
and
jle
jle
mov
inc
or
fmulp
test
scas
mov
push
andb
fidivrl
lahf
loopne
or
fdivs
cmpsb
push
loope
int
mov
rorb
out
lock
jo
inc
ret
xor
int3
xchg
pop
push
stc
jmp
bound
daa
jbe
jg
cmpsl
arpl
sub
dec
sbb
daa
ret
push
int3
push
insb
int
mov
scas
jae
push
jmp
mov
mov
xchg
scas
sbb
sbb
inc
std
xchg
cmp
aaa
scas
loopne
sarb
mov
add
addb
adc
addb
lods
int
gs
or
rcrl
inc
add
jg
rolb
jnp
or
add
jmp
jae
ret
adc
or
adc
jae
ds
xor
repnz
movsl
repnz
leave
and
push
sub
xchg
dec
notl
xchg
pop
repnz
inc
jo
cmpl
sbb
lods
inc
xchg
mov
sub
cmp
mov
or
int3
dec
sbb
push
sub
dec
inc
xor
test
movsb
faddl
out
cmp
add
rcrl
mov
std
dec
and
in
pop
das
mov
sub
pop
cmpb
repnz
push
js
or
add
xor
cmp
repz
mov
xor
cmp
subb
outsl
dec
out
leave
or
jmp
js
push
pop
pop
adc
jge
mov
jno
mov
fld
test
scas
xlat
mov
loope
cld
cmp
stos
push
out
data16
scas
fldenv
jno
mov
add
add
jbe
dec
ret
std
test
sbb
inc
add
test
mov
adc
rolb
sbbb
popa
sub
adcl
enter
mov
lock
clc
and
cmp
mov
sub
inc
jle
iret
mov
jecxz
sub
and
into
xor
lock
les
lret
xchg
add
xchg
jns
or
cwtl
jp
xchg
ret
rorl
adc
or
dec
out
insl
jmp
inc
in
push
xor
lret
lret
mov
lods
lods
inc
cmpsb
repz
inc
jl
fdivs
mov
lahf
js
add
mov
inc
lea
pop
aam
scas
lods
test
fstpl
xchg
clc
jns
mov
lcall
and
incb
adc
jo
mov
sbb
add
psubsb
sbb
out
ficomps
xchg
xlat
insl
mov
jecxz
cmp
sub
out
mov
rcrb
leave
inc
pop
dec
stos
sbb
imul
lods
ss
sbb
sahf
cwtl
leave
sarb
xorl
test
ret
cmp
mov
aaa
lods
data16
daa
into
xor
dec
inc
pop
sbb
sarl
lods
pop
aaa
add
mov
xor
pop
es
xchg
popa
orl
xchg
add
pop
xchg
ss
pusha
adcb
enter
rorl
or
in
xor
inc
inc
fwait
es
call
cmp
insb
enter
jns
jg
push
nop
pop
dec
jle
xor
push
mov
arpl
push
jp
stos
cmp
inc
cltd
sbb
and
outsb
add
sub
aaa
scas
shlb
je
adc
mov
jg
mov
dec
jl
mov
sub
sbb
mov
mov
sbb
stos
lock
xor
iret
push
leave
fcmove
iret
add
add
add
jne
std
push
dec
fst
sbb
jmp
mov
int3
jnp
int
jne
test
xchg
mov
jmp
jecxz
aaa
xchg
repz
aam
dec
scas
dec
adc
movsb
je
mov
mov
inc
push
cmc
jae
jo
adc
stos
scas
dec
in
and
push
adc
out
adc
jle
gs
sub
add
jno
adc
dec
movsl
or
push
test
add
cmc
add
xchg
out
adc
movsl
repnz
add
sub
push
test
std
add
xor
jmp
xor
daa
aad
dec
movsl
push
or
sarl
mov
mov
test
add
shlb
lret
sbb
xor
xchg
scas
jne
xchg
add
xchg
lret
and
push
test
test
in
cmc
cmc
xchg
dec
movsl
push
test
xchg
stc
movsl
pop
test
add
imulb
xchg
dec
in
push
std
gs
jne
add
dec
adc
xor
daa
lds
test
fstpl
jg
jbe
in
mov
push
adc
ss
fistpl
add
lret
cmp
test
and
lods
mov
sbb
pop
stos
mov
mov
movsl
pusha
mov
ja
mov
push
lods
or
js
push
pop
cmc
push
cmp
mov
push
idiv
sub
dec
mov
jle
cmp
int
pop
mov
mov
imul
into
add
add
dec
iret
pushw
cs
add
pop
insb
xor
sub
cmp
push
icebp
jle
fcmovne
inc
add
cld
cs
mov
hlt
and
push
fstps
rclb
es
xor
imul
mov
adc
orb
xor
pop
enter
insb
fwait
adc
inc
and
mov
and
dec
ret
aas
or
xchg
add
push
add
test
js
add
ret
lds
inc
push
push
icebp
addr16
popa
cmp
js
xchg
mov
rol
sub
sub
adc
fldenv
jnp
cltd
out
in
sbb
inc
loope
jmp
into
mov
dec
inc
xchg
sbb
cmpsb
inc
mov
addl
inc
cmp
mov
cmpsl
mov
mov
std
fstl
mov
addb
and
or
cli
mov
dec
cld
int
insl
sarl
sbbl
adc
mov
mov
xor
jle
adc
das
dec
and
and
adc
pusha
mov
lods
lds
rcrb
add
daa
movsl
inc
pop
mov
repz
inc
jmp
in
jg
add
insl
xor
inc
cmp
adcb
inc
adc
inc
jbe
jo
push
cmp
jns
xor
imull
loopne
fiadds
incb
xor
push
push
add
outsl
dec
dec
sub
arpl
test
imul
inc
jle
xor
popa
mov
fmulp
add
test
cmp
inc
mov
sbb
xor
push
push
outsb
add
mov
push
ja
lods
movsl
test
test
mov
ja
inc
push
mov
lock
cmpsl
inc
jbe
xchg
aad
adc
rclb
mov
test
and
in
fcoms
xchg
idiv
test
test
xor
sahf
adcb
shlb
sbb
sub
mov
sti
sbbl
xor
lods
mov
dec
add
shll
or
or
mov
xchg
push
mov
mov
xor
dec
and
mov
sub
inc
and
pop
sbb
adc
mov
add
inc
or
adc
movups
inc
add
pop
pop
subl
mov
xor
or
add
dec
lcall
cli
xchg
dec
mov
mov
dec
push
dec
repnz
push
into
lret
movl
div
lods
aaa
bound
lods
xor
adc
test
jle
push
cmp
add
mov
aam
push
out
pushf
adc
sbb
aam
push
dec
adc
aam
or
jo
inc
push
cli
dec
cmp
call
xor
sub
push
lea
adc
or
sahf
adc
dec
int3
popa
mov
or
pop
int
ss
or
and
cmp
scas
mov
testl
dec
pop
push
push
lods
bound
mov
sbb
and
xor
pop
and
inc
pop
aad
xchg
jmp
mov
sbb
hlt
into
or
push
xor
fnstcw
mov
pop
ds
andl
jg
fdivl
pusha
fnstsw
fimuls
adc
pop
cmp
nop
sbb
js
or
pop
add
scas
push
and
jo
pop
sub
outsb
popf
jle
or
sub
adc
scas
xchg
mov
filds
fdivs
add
in
lret
pop
dec
out
xchg
and
push
lcall
inc
nop
xchg
or
aad
inc
shll
in
ror
cs
add
jecxz
loopne
fwait
dec
pop
stc
mov
adc
push
sarb
aad
pop
pop
test
mov
std
add
nop
repnz
mov
inc
pop
dec
icebp
dec
and
jecxz
sbb
rcll
adc
incb
mov
add
jge
cs
fadd
dec
push
repz
movsb
mov
xor
adc
pop
push
sbb
inc
push
jno
jo
popf
sub
test
daa
or
int3
push
or
rolb
mov
pop
mov
mov
andl
add
and
or
adcb
or
adc
leave
ror
lods
adc
lods
ja
cmpb
sub
add
lcall
bound
dec
int
ds
cmp
pop
out
adc
cs
sbb
pop
negl
and
sbb
sbb
mov
inc
push
push
andb
jle
js
add
push
lret
jg
scas
imul
push
cld
jno
movsl
add
int
outsb
add
inc
mov
enter
adc
lock
inc
imul
mov
enter
xor
scas
ret
push
and
enter
push
and
push
sbbb
sub
loope
adc
mov
jecxz
bound
cmp
mov
pop
lcall
pop
ret
out
outsb
out
ror
pop
scas
fs
lods
pop
inc
in
or
sub
lcall
gs
rcr
dec
ret
pop
sbb
adc
add
inc
pop
mov
adc
xor
outsb
push
dec
push
mov
adc
mov
adc
mov
in
dec
rolb
and
mov
push
ret
cmpsb
pop
push
mov
xchg
scas
cmpsl
mov
or
scas
cmpsb
or
jge
ficomps
jmp
outsb
jmp
std
pop
ret
dec
jg
sarb
out
push
inc
scas
rcrb
dec
xlat
or
and
adc
xor
pop
add
mov
cmp
mov
sbb
and
popa
pop
fwait
push
insb
fcmovnb
mov
push
sub
lods
jle
call
mov
enter
lock
adc
fstl
adc
push
xor
test
xor
fsts
jmp
xor
or
mov
jo
sub
scas
pop
sub
inc
enter
test
hlt
jno
push
xchg
push
inc
or
mov
jo
enter
dec
xchg
xor
pop
int3
adc
in
mov
testb
clc
inc
lods
fs
inc
mov
sbb
test
xor
mov
jbe
inc
adc
xchg
xchg
mov
lods
js
jae
enter
jae
rcll
pusha
lahf
pop
and
xor
jle
aaa
mov
mov
add
cmpsl
sbb
mov
cmp
nop
decb
sbb
lret
das
mov
lods
cmp
rorl
sub
xchg
jbe
push
mov
dec
inc
lods
mov
sub
xchg
fildll
sahf
fs
lods
lock
sub
mov
and
push
lods
iret
xor
scas
ficompl
les
iret
cs
push
or
add
fidivl
pop
pop
dec
jl
addr16
xor
push
sti
xor
icebp
xor
bound
inc
js
adc
ret
push
sbb
lods
cltd
jmp
mov
xchg
dec
push
lods
cmpb
xchg
cld
dec
hlt
insb
test
xchg
mov
mov
adc
gs
scas
push
movsl
cmp
sub
mov
lcall
movsl
pop
mov
sbb
and
pop
mov
cmp
jne
bound
fdivp
push
mov
cmp
and
mov
lods
mov
adc
push
addr16
mov
xbegin
rol
icebp
push
mov
fldt
jb
outsb
scas
lock
mov
in
vmwrite
mov
and
test
addr16
sbbl
push
scas
push
xor
mov
ss
cli
inc
outsb
xchg
scas
dec
hlt
adc
xchg
adc
pop
iret
inc
js
mov
ljmp
or
and
adc
add
mov
push
popa
and
adc
hlt
xor
inc
jmp
int3
addl
mov
imul
fmuls
imul
push
adc
lcall
mov
addl
out
jge
faddl
cmc
inc
mov
insl
imul
cmp
adc
push
ljmp
popa
pop
popa
adc
test
jb
pop
pop
lods
cmc
push
ret
mov
jbe
mov
push
js
and
pop
jb
ret
scas
xchg
push
scas
dec
test
test
mov
scas
mov
jae
into
mov
or
inc
pop
xchg
cmpsl
lods
mov
xchg
les
push
rcll
sbb
cmp
rcl
and
add
js
push
sub
outsb
xchg
mull
add
in
jge
rorb
push
data16
mov
mov
and
sti
iret
push
inc
push
push
or
inc
or
loopne
insb
or
mov
add
aaa
adc
dec
jmp
pushf
add
arpl
xor
push
add
or
inc
cmp
bound
movsb
stos
mov
nop
lods
rclb
cs
sbb
and
fmuls
dec
push
call
loope
fwait
push
pop
push
ret
int
dec
movsl
dec
dec
push
jo
rclb
out
push
add
add
lea
jns
es
jg
xor
jbe
add
cmpsb
scas
pop
sti
push
add
cltd
xor
mov
mov
cmp
mov
in
or
xchg
je
jecxz
icebp
mov
or
sub
loopne
insb
ss
lods
sub
pop
push
ljmp
and
push
add
dec
lahf
push
mov
pusha
enter
xchg
push
ja
and
lahf
push
jo
scas
in
inc
xchg
test
nop
stos
dec
inc
fisubrl
inc
in
jae
mov
cltd
mov
aad
dec
dec
and
mov
push
jbe
xor
mov
mov
orb
scas
add
and
adc
mov
popa
inc
push
sub
int3
scas
fildll
xchg
cltd
pop
leave
and
push
sarl
pop
test
mov
es
dec
cmpsb
mov
repnz
pushf
or
mov
imul
pushf
inc
dec
hlt
xor
sub
dec
push
leave
xchg
shr
jo
dec
and
xor
mov
jns
or
inc
repnz
mov
xchg
orb
ds
dec
mov
int
cltd
sbb
je
cmp
test
jp
inc
push
dec
inc
cmp
sub
cmp
dec
mov
sahf
insb
in
loope
and
neg
cltd
sub
lods
jns
fisttpl
fmulp
pop
insl
faddp
add
dec
or
adc
out
outsb
call
xor
or
outsl
pop
fsubs
incb
inc
psubsb
mov
in
push
sbb
add
lods
leave
or
arpl
shlb
pushw
dec
pop
jle
add
out
mov
and
push
sub
imul
cmp
push
inc
and
les
dec
mov
test
fisubrl
enter
adc
cmp
popf
lods
es
mul
sbb
lcall
dec
out
in
or
jl
lods
dec
xor
cwtl
adc
sti
ljmp
les
into
mov
adc
roll
stos
nop
cmpl
scas
mov
xor
addr16
ret
mov
enter
lods
gs
push
mov
jo
cmp
jg
sub
repnz
js
enter
std
dec
cmp
sub
shrb
ror
xchg
lods
fldenv
xor
jns
scas
sub
mov
dec
xchg
inc
faddl
pushf
sbb
sbb
cmp
adc
mov
sub
push
push
jb
dec
shlb
pushf
lods
pop
dec
xchg
jl
pop
push
rorl
nop
add
mov
and
aam
in
jb
pop
rcr
shll
sub
and
rolb
imul
je
sbb
and
addr16
ret
dec
lret
in
add
std
xor
divl
aas
test
cmp
mov
adc
pop
pop
xchg
lahf
hlt
into
out
jecxz
outsl
shl
pop
cmpsl
pop
flds
inc
jg
fmuls
dec
pop
jmp
jno
or
imulb
scas
and
pop
xchg
jle
xor
into
popf
and
push
addr16
lea
xchg
mov
mov
aaa
lea
test
adc
xor
sbb
pop
popa
scas
fs
pop
push
xor
mov
push
dec
dec
xor
xadd
jle
sti
lods
and
sti
loope
adc
mov
jae
add
outsb
imul
pop
xchg
jbe
mov
movsl
jne
push
sub
dec
adc
push
sub
xchg
adcb
shll
pop
dec
shl
xor
push
lds
mov
pushf
xchg
lods
lds
enter
inc
cmp
inc
push
inc
ficoml
fwait
lods
or
sbb
or
shrl
in
xchg
push
stos
mov
les
lcall
roll
call
imulb
js
daa
fs
add
mov
stc
enter
scas
dec
push
popa
xor
daa
sarb
adc
sbb
rolb
inc
mov
or
add
push
mov
jge
and
or
pop
or
pop
cmpsb
fs
inc
ja
data16
push
add
ss
xchg
aaa
and
mov
and
or
adc
ljmp
loope
pop
jnp
insb
push
in
mov
push
push
push
scas
mov
jne
dec
xor
dec
icebp
adc
outsb
dec
push
add
adc
or
popa
push
pop
mov
sub
mov
das
mov
das
scas
lods
loopne
xchg
adcb
test
cmc
mov
out
adc
in
mov
lcall
les
shrb
xor
icebp
push
ja
dec
int3
sbb
stc
sti
push
sbb
mov
mov
add
mov
push
mov
mov
pop
jp
xchg
pop
xor
sahf
jns
lcall
sbb
inc
sbb
mov
jns
add
cmp
lods
insb
add
cmpsl
lods
sub
in
or
jl
enter
std
pop
pop
xchg
scas
pop
daa
imul
or
mov
pop
imul
faddl
or
or
or
jbe
jo
mov
into
push
sbb
inc
inc
add
pusha
cli
sahf
or
mov
mov
into
dec
xchg
loopne
xor
and
lods
push
mov
daa
int3
dec
xor
inc
dec
es
inc
movsb
mov
test
cwtl
out
xor
pop
cwtl
js
daa
data16
enter
std
pop
sbb
out
cmp
or
push
lret
push
dec
cmp
pop
sti
adc
mov
pop
add
bound
cwtl
roll
outsl
jne
pop
and
lods
testb
push
out
or
xor
or
adc
dec
inc
or
and
sub
fsubrp
imul
out
lods
or
sbb
addr16
lods
inc
inc
popf
test
pop
outsb
and
cwtl
gs
adc
cmpb
xchg
cwtl
pop
add
xchg
jns
xchg
jle
add
cmp
clc
pop
cmp
enter
insl
xor
sbb
icebp
pop
imul
inc
loopne
cltd
cmp
into
push
lahf
pusha
pop
add
out
lods
inc
ss
fnsave
jnp
cli
dec
les
test
and
cmp
sbb
test
adc
loopne
test
push
imul
inc
inc
or
scas
inc
xor
jno
pop
lahf
andb
ss
and
int3
sbb
push
cmp
xchg
pop
xor
push
jb
enter
adc
shrb
mov
adc
xchg
sbb
inc
das
pusha
lods
leave
fcoms
dec
scas
jg
jl
sarb
push
popf
mov
lods
test
mov
mov
add
cmp
dec
enter
gs
in
clc
lahf
cli
add
mov
push
xor
lods
lods
dec
daa
and
loop
or
sub
mov
adc
loopne
minps
or
ret
add
sub
mov
rolb
sub
enter
das
popa
enter
mov
addl
fldl
add
mov
js
sbb
mov
fimull
sahf
pushf
neg
movsl
pop
loop
xchg
inc
sub
sbb
cmpsb
xor
cmp
test
mov
bnd
adc
enter
sahf
mov
xorl
xchg
add
lea
in
popa
js
scas
push
shll
mov
test
xchg
dec
push
je
cmp
jg
popf
out
inc
xor
xchg
add
xor
sub
enter
adc
in
cmpsb
cmpsb
scas
mov
pop
inc
cs
push
gs
and
push
ret
mov
cmp
jl
jg
mov
filds
int
xor
lret
add
lock
cmp
push
sbb
inc
fdivl
test
xchg
rcrl
movb
push
add
add
clc
or
out
add
repz
push
pop
js
lret
cmpsl
pushf
inc
fdivl
xlat
rclb
mov
push
jnp
mov
sbb
xchg
xor
xor
xor
xor
je
and
sbb
jp
data16
pop
mov
add
rorl
push
jns
fsubrs
scas
notb
adc
in
xchg
movsb
xchg
cmc
add
dec
xchg
and
push
cmc
inc
das
mov
cmp
ret
mov
push
adcb
mov
lock
jo
sbb
fidivrs
xor
mov
into
push
mov
xor
cmpsl
lods
imul
not
jne
imull
cmpsl
mov
pushf
push
test
es
divl
pop
push
outsb
push
jae
sahf
idivl
and
in
dec
jnp
out
test
xchg
ds
jnp
pop
push
addr16
std
divb
stc
xor
in
imul
cmpsl
fnstcw
jbe
push
ret
int
jnp
enter
cmp
lds
out
repz
mov
mov
or
xor
notb
jmp
xor
orl
movsl
or
jl
adc
das
xchg
mov
addr16
and
gs
mov
mov
add
or
mov
jo
out
xor
jns
xlat
add
or
jl
test
cmp
inc
mov
cli
dec
test
xchg
gs
sahf
notl
movl
push
xorb
out
push
cmp
push
xchg
aaa
insl
imul
addl
jns
dec
push
sti
xchg
push
adcb
cmpsl
scas
mov
or
cmp
in
and
mov
jl
inc
inc
mov
mov
mov
ficoms
jbe
inc
xchg
dec
roll
sbb
xchg
pop
dec
cmpsl
lods
mov
adc
orl
fwait
or
cmpsl
sti
jl
hlt
or
fstpt
mov
lret
pop
cmp
lods
jecxz
fnsave
cli
int3
rorb
pop
adc
lock
add
popa
loop
insl
push
gs
push
sahf
and
xchg
les
dec
xchg
inc
cmp
adc
xor
lods
jo
call
sub
mov
pop
or
add
sub
sub
inc
ret
lods
inc
push
add
sbb
ljmp
adc
inc
test
shll
inc
outsb
in
imul
mov
mov
cltd
mov
dec
scas
movsl
and
xchg
popa
frstor
pop
cmp
in
shrb
xchg
inc
sbb
xchg
lret
dec
xor
shlb
add
rcrb
or
lret
add
add
les
gs
movsb
data16
clc
testl
js
xor
push
add
inc
shrb
das
lods
lods
pop
inc
faddp
scas
push
popa
dec
sti
pop
pushf
test
dec
stos
push
and
lcall
xor
mov
xchg
sbb
adc
or
fiadds
push
in
add
in
or
dec
dec
rcll
and
imul
jnp
mov
enter
dec
loope
rorb
and
xchg
out
pop
das
dec
scas
mov
dec
push
jns
dec
jl
fnstenv
mov
mov
les
decb
cmp
movsl
inc
call
inc
sbb
mov
enter
cld
lcall
fcompl
mov
jle
cmp
cmp
cs
mov
push
xor
dec
mov
xor
jg
push
cltd
sbb
cmp
sbb
sbb
clc
xor
mov
push
push
or
dec
sbbb
lods
mov
setbe
pusha
into
orl
cmp
add
mov
outsb
xchg
mov
mov
fs
push
xor
mov
jbe
mov
inc
xor
repnz
les
loope
inc
in
mov
popf
cwtl
rcrl
adc
xor
daa
ret
gs
pop
pop
lret
mov
add
dec
adc
sub
and
shrl
inc
into
sub
push
in
sbb
insl
cli
stos
xorb
ss
outsb
mov
inc
add
sub
add
xchg
mov
xor
leave
sbb
cmp
sbb
out
cmpsl
fdivrl
jbe
incl
push
cmp
jle
xor
inc
jg
pop
pop
loope
xor
daa
jbe
iret
add
adc
mov
aaa
loope
xchg
adc
mov
mov
inc
adc
inc
sahf
cmp
stos
subl
mov
xchg
inc
out
fnstsw
lods
sbbb
xor
js
jb
test
push
xor
dec
inc
add
or
mov
dec
ss
add
call
cmp
outsl
cmpsb
int
lret
lods
fiadds
and
lea
push
add
mov
in
shrb
jge
adc
mov
mov
adc
dec
aaa
ffreep
cmp
dec
xor
dec
fldenv
cs
orb
cmp
dec
lds
inc
push
and
cmp
adc
xor
mov
sbb
dec
loop
nop
js
cmp
adc
jo
mov
test
sahf
dec
fimuls
xor
sub
cmp
sahf
mov
or
mov
aaa
stos
scas
pop
aaa
or
shr
sub
scas
inc
or
out
push
jno
pusha
adc
push
adc
shlb
push
mov
aad
and
subb
loope
popaw
cmp
jecxz
addb
add
push
leave
mov
nop
sub
xor
xor
adcb
out
cmp
jmp
cmpsl
inc
xchg
xor
jl
jbe
add
inc
and
or
fcomp
lret
lret
dec
pop
out
jge
lret
sub
mov
push
daa
leave
xchg
mov
fisubl
aam
ja
adc
cmp
push
outsl
lds
pusha
xor
push
cld
mov
pop
cmp
inc
cld
stos
cmp
and
add
ss
imul
xchg
mov
test
mov
xchg
sub
dec
and
mov
mov
cmp
xor
push
incl
stos
adc
cmovno
cmp
xchg
aam
pop
jl
xor
jge
in
jp
inc
cmp
mov
pushf
inc
sub
or
jl
in
dec
add
inc
and
pusha
test
and
sub
mov
sub
or
adc
test
push
adc
add
adc
or
sbb
cmp
movsb
scas
or
add
cli
hlt
inc
lods
out
jmp
sbb
add
xchg
and
fistl
add
dec
sbb
lret
lds
enter
ss
inc
lret
xor
xchg
or
sbb
add
aaa
cmp
insl
and
push
lret
int3
icebp
cmc
inc
popf
add
orl
loop
test
insb
inc
xor
insb
jecxz
pop
pop
mov
mov
dec
je
dec
adc
andl
sbb
clts
inc
xor
movsb
xchg
sbb
pop
or
popa
push
ss
sbb
mov
mov
leave
push
ret
and
cmp
add
add
sbb
xchg
ss
ds
xor
test
and
frstor
push
xchg
xor
in
sub
pop
stos
lods
mov
sub
repz
test
push
lods
dec
dec
pop
xor
push
push
sar
js
mov
iret
adc
jne
dec
mov
mov
sahf
aaa
scas
dec
test
lods
jnp
xchg
sub
sahf
push
clc
lods
xlat
dec
and
lods
pop
and
movsl
sbb
cld
mov
push
mov
sbb
lods
jbe
out
ja
clc
enter
insl
adc
xchg
pop
sub
jo
shll
mov
mov
or
into
adc
test
mov
ret
adc
mov
cmpsb
adc
pop
dec
push
add
test
fcmovnu
adc
dec
inc
mov
pushf
sub
sbb
push
xchg
cmp
sti
std
into
pop
int3
pop
jb
int3
dec
or
xchg
enter
inc
dec
sub
cmp
xor
jne
mov
add
dec
adc
sbb
lcall
sbb
std
cli
xchg
mov
sldt
negb
in
or
jl
adc
ja
push
pop
adc
adc
sbbb
movsl
cltd
int3
adc
cmp
sbb
or
lods
dec
std
xlat
popa
or
push
in
cmp
push
dec
cld
jbe
pop
in
or
sbb
or
and
dec
sub
fcompl
jns
or
mov
cmpsl
mov
pop
into
or
add
or
mov
mov
push
mov
ja
jle
xor
push
fs
adc
or
mov
cmp
test
sbb
in
inc
sbbb
mov
dec
sarb
add
mov
jno
lods
insl
sbb
inc
push
inc
pop
push
fdivl
dec
xlat
out
ret
dec
popa
jo
and
push
iret
shrb
in
mov
pop
adc
xchg
fwait
adc
sbb
inc
xorb
lods
mov
or
push
or
mov
je
shlb
cwtl
lods
ret
xchg
push
test
ror
and
bound
cmp
jge
xor
push
jb
push
je
loopne
pushl
adc
push
jg
xor
iret
adc
inc
xor
enter
mov
pop
inc
pushf
ds
iret
pop
add
push
pusha
loop
xor
pop
insl
ljmp
cmp
mov
dec
ss
adc
xor
outsb
js
pusha
add
adc
inc
pushf
xchg
fisubl
sub
subb
mov
inc
out
in
push
jbe
or
or
sbb
nop
ret
aaa
test
bound
sbb
sahf
leave
add
inc
dec
test
clc
xchg
cmpsb
in
jg
and
adc
add
insb
pop
cmc
scas
imul
or
adc
lret
insl
ficompl
push
mov
jno
sbb
pop
xor
sub
push
mov
int3
pop
push
dec
xor
lea
dec
sbb
push
les
int3
add
sbb
add
adc
jmp
and
inc
inc
iret
scas
pop
jp
ss
dec
clc
sbb
dec
into
insb
sbb
fcomps
das
dec
jg
data16
sbb
gs
mov
push
inc
push
dec
push
add
into
imul
or
mov
ljmp
inc
stos
jge
mov
add
add
in
mov
les
hlt
push
push
xor
mov
sbb
xchg
pop
inc
lock
ficompl
jle
popa
ss
mov
pop
push
add
xor
rorb
sahf
jle
push
push
jle
xor
int3
push
sbb
inc
repnz
jl
mov
adc
sbb
xor
add
xchg
cmpsb
cmp
jne
jne
in
cmc
mov
jno
sbb
jns
xor
push
and
or
xchg
adc
or
inc
xchg
pushf
adc
and
or
add
inc
mov
jae
mov
push
int3
dec
add
push
adc
pusha
jne
lock
sub
pop
test
xchg
add
loop
enter
pop
mov
xor
and
add
dec
icebp
inc
ss
pop
adc
or
rorl
addr16
mov
mov
inc
mov
push
dec
lods
sub
and
pop
xor
adc
mov
add
add
push
push
push
cltd
or
xchg
loop
les
or
les
in
xor
or
lcall
mov
push
outsb
lcall
imul
lock
push
fmuls
dec
sbb
and
xchg
lods
xor
sub
and
addr16
cmpsb
cmpsb
xchg
movsb
pop
movsb
jno
insl
push
or
insl
enter
jle
adcb
inc
dec
insl
into
xchg
in
jne
test
xor
sbb
mov
sahf
or
push
inc
cmp
or
test
cmp
sub
push
test
and
ss
jb
or
aam
int
mov
sbb
dec
cli
stos
fiaddl
mov
aaa
adc
mov
pop
xchg
leave
xchg
add
jb
cwtl
xor
pop
xchg
clc
mov
into
pushf
inc
cmpsb
sbb
or
jb
inc
frstor
shl
ss
mov
push
lods
arpl
add
cmpsb
or
divb
cli
xor
lods
dec
sub
sbb
iret
adc
xor
sbb
mov
mov
jle
mov
jno
inc
adc
mov
lea
adc
aaa
jo
mov
sbb
mov
mov
jae
loop,pt
pop
adc
add
pop
push
nop
cli
mov
inc
sbb
inc
pusha
out
sbbl
or
ljmp
aam
ds
cwtl
loopne
jl
sub
sbb
xor
mov
pop
inc
push
int
push
ret
mov
fiadds
pop
inc
int
sahf
and
push
add
or
jl
pop
lods
mov
mov
jle
sbb
xorl
pop
jp,pt
test
mov
or
inc
lea
sbb
xchg
sub
pusha
test
dec
daa
add
push
insl
inc
push
in
or
add
add
pop
and
fldt
mov
std
mov
fidivrs
sbb
pop
xor
aam
testl
and
push
inc
inc
jg
xor
mov
inc
test
inc
lcall
add
mov
test
pop
rcrb
inc
and
or
dec
xor
test
enter
pusha
dec
pusha
adc
loope
shrb
inc
imul
lock
lcall
mov
cmp
cmp
add
mov
data16
and
jl
imul
push
fiadds
imul
cmp
mov
js,pt
popa
rolb
insl
test
inc
add
std
xor
scas
push
and
dec
mull
pop
cmp
xor
ret
test
sub
lods
sub
sarl
mov
pop
enter
and
lods
iret
mov
jno
pop
sbb
outsl
jae
adc
pop
daa
adc
push
and
outsb
push
pop
push
add
adc
add
ret
inc
inc
adc
jle
cmp
jle
aaa
lret
or
sbb
js
pop
rorb
fidivrl
loope
adc
emms
fstps
adc
fcomp
xor
mov
xacquire
into
fwait
loopne
lods
mov
rclb
inc
mov
or
and
adc
xor
mov
mov
andb
lods
orl
xor
fwait
cmp
cld
xlat
adc
sti
pop
lods
pusha
xor
loope
test
sbb
mov
mov
sub
pop
pop
rclb
cmp
cmpsb
fwait
inc
mov
aad
push
dec
test
loope
loop
xchg
cltd
call
in
or
or
jbe
imulb
jp
pop
das
pop
push
fisubrs
sbb
dec
pop
addb
mov
dec
ficoml
pop
mov
sub
xchg
sub
push
inc
repnz
mov
or
rcll
dec
fs
mov
and
mov
xchg
dec
shl
and
lea
xchg
dec
fisubrl
xor
fidivrs
je
or
adc
add
add
mov
xor
movb
adc
pop
incb
and
fdivrs
sarl
in
xchg
int
je
insl
shrl
sbb
sub
sbb
add
adc
int3
dec
cmp
sbb
jne
loopne
loop
movsl
int
xorb
lods
sahf
sub
and
pop
xchg
mov
adc
gs
mov
push
shr
andl
add
js
push
cltd
lock
add
inc
gs
cmp
sub
jo
add
loopne
sub
add
mul
mov
push
dec
and
cmp
test
push
add
push
or
and
mov
dec
sbb
mov
xchg
negb
lahf
out
loop
mov
rorl
mov
pushw
movsl
cwtl
or
xchg
dec
outsb
sub
pusha
mov
sbb
xor
adc
sbbl
xor
push
test
fs
loopne
sahf
sbb
ja
ret
jno
movsb
cld
addr16
dec
in
cmp
les
ret
rcrl
test
sbb
push
inc
es
or
mov
xorl
orl
test
mov
push
adc
mov
sub
xchg
mov
mov
xor
gs
divl
xor
daa
add
lea
add
es
sbb
daa
push
cwtl
jge
fadds
loope
enter
add
sbb
nop
push
test
mov
mov
imul
mov
aam
xlat
clc
dec
mov
inc
repnz
inc
ss
inc
xorb
inc
inc
mov
pop
sub
add
push
ss
fcomip
pusha
inc
xchg
push
outsb
test
insb
inc
cmp
adc
ljmp
push
push
imul
pop
and
lods
out
sbb
inc
pop
scas
push
inc
rclb
fs
sahf
xor
or
and
fsubrl
pop
scas
inc
adc
inc
adc
cmp
pop
nop
ret
aaa
negb
scas
jle
or
inc
test
faddl
adc
sahf
loope
adc
xchg
clc
mov
lods
and
sbb
add
iret
loopne
add
push
fld
sbb
pusha
pop
iret
push
adc
aaa
dec
fcoms
lds
repz
dec
psllq
mov
cmp
dec
mov
and
movsb
mov
popf
pop
sub
int3
fimuls
fisttpl
add
mov
cmpsl
inc
pop
push
aam
inc
mov
sbb
mov
sub
sbb
add
xchg
xor
cmpsb
cmp
jae
and
xchg
movsb
insb
loopne
popa
into
inc
lcall
mov
mov
shl
test
or
jne
xchg
push
dec
sbb
pop
push
dec
fs
mov
mov
ret
fldcw
jb
add
dec
add
push
jne
cmp
mov
sub
pop
bound
or
cmpl
pushf
rcl
mov
or
testl
fwait
dec
push
es
push
mov
shlb
enter
sbb
loopne
push
fxch
addb
loopne
add
mov
je
lods
outsl
mov
rol
push
rclb
and
aas
orl
mov
aam
out
push
lock
rclb
or
jge
mov
mov
xlat
add
cmp
lea
jne
adc
test
mov
pop
push
aad
iret
lret
sysenter
mov
mov
aad
or
notb
xchg
push
scas
inc
outsl
mov
lods
or
pushw
fs
outsb
adc
xorb
inc
xorb
jo
sbb
scas
in
add
mov
icebp
cwtl
enter
or
mov
inc
add
push
insl
or
and
lock
jo
sub
and
jo
clc
imul
cmp
add
lahf
test
mov
stos
add
adc
or
lret
mov
lea
repnz
add
popa
lods
dec
sahf
xor
pop
loopne
popa
insb
jne
adc
jecxz
inc
inc
jmp
jecxz
pop
add
or
jle
or
push
dec
mov
popa
lea
inc
ja
inc
xor
adc
scas
adc
push
inc
dec
sbb
xchg
push
rorl
push
rorl
xchg
xchg
adc
push
sbbb
mov
xor
sub
jg
jge
lods
push
lods
or
fs
ljmp
or
cmp
mov
fsubrs
addr16
jo
dec
sub
add
out
cmp
mov
add
jno
in
or
sbb
or
fwait
jl
movsl
repnz
push
pop
scas
cmp
or
insl
inc
add
jnp
push
sub
mov
gs
add
ss
pop
jmp
and
outsb
sarb
pop
mov
ret
add
lods
aam
ja
icebp
push
xor
and
jg
das
aad
push
shlb
and
jmp
push
aad
mov
jnp
aaa
sbb
dec
ljmp
sbb
testb
add
jo
fmuls
ljmp
and
popf
sti
popf
pop
jl
push
cmp
cld
cmp
loope
outsl
jns
or
jo
imul
mov
sbb
imulb
add
inc
sub
lods
pop
push
xchg
sub
mov
xchg
or
mov
or
loope
mov
add
jge
lock
std
adc
adc
test
dec
add
mov
roll
inc
or
mov
lret
ds
mov
adc
or
cs
mov
popa
dec
mov
push
cmp
rcrb
push
lods
xchg
lock
mov
notb
dec
pop
loopne
idiv
shll
subl
cli
popf
sbb
lea
in
inc
ret
test
pop
fs
adc
pop
cltd
mov
mov
or
sbb
pop
add
pop
inc
inc
add
and
lahf
xchg
mov
sbb
cmp
lods
add
add
mov
dec
push
sbb
mov
inc
movsl
cmp
cmp
pusha
loop
fsubs
lret
aam
imul
insb
lods
xor
mov
inc
pop
faddl
testl
jb
stos
add
aad
in
or
jne
jbe
and
cmp
aas
push
push
jbe
sub
lods
and
fstpl
pusha
lea
aaa
out
push
add
adc
popf
lods
adc
mov
adc
lock
jle
cmp
add
adc
sbb
pushf
icebp
add
sbb
and
pop
add
insb
mov
adc
and
and
pop
xchg
inc
adc
xchg
xor
cld
les
push
push
mov
xchg
dec
aaa
add
xor
cwtl
cmp
sub
xchg
stos
sbb
fsub
dec
cli
ljmp
xorl
movsl
sti
adc
or
or
add
dec
sbb
xchg
lods
hlt
int3
add
sub
and
cmp
lea
add
mov
je
adc
sub
mov
sub
aas
add
incb
gs
jno
lret
mov
rcrb
xchg
sbb
inc
cmp
adc
aaa
adc
jmp
xor
pop
pop
jne
adc
repz
int3
cmp
push
pop
lret
enter
adc
pop
mov
pop
std
push
dec
mov
sbb
xchg
add
push
cwtl
in
sub
imul
adc
adc
loope
add
out
inc
or
sarb
mov
or
xchg
and
or
lods
adc
jp
loope
je
mov
sbb
adc
movb
test
hlt
adc
ds
cmpsb
bound
test
icebp
jno
or
cmp
imul
inc
xor
outsb
cmpsb
mov
sub
add
adcb
xchg
xchg
out
mov
adc
subl
push
mov
xor
inc
hlt
sub
cmp
pop
adc
rorb
sub
push
push
xchg
dec
xchg
repnz
lds
lods
jb
jnp
loopne
insl
arpl
sub
cmp
mov
xchg
mov
push
pop
jo
mov
inc
or
jle
movsb
loope
in
addr16
std
lds
adc
sbbb
orl
iret
dec
aas
cmc
mov
jp
scas
jge
or
xor
icebp
dec
mov
inc
xor
xor
or
or
inc
fmull
mov
fistpl
mov
sbb
jne
repz
push
jo
xor
cmpsl
jno
push
adcb
mov
adcl
stc
jl
rcrb
push
insb
push
imul
fucomi
push
xchg
mov
inc
and
test
mov
test
hlt
push
pushl
cmp
out
sbb
add
jg
call
or
or
fcmove
clc
dec
popa
ret
cmpl
add
in
pop
mov
call
mov
mov
mov
and
lock
mul
rcll
dec
jae
push
int
test
movsl
imul
int
mov
jo
jo
rorb
fsubrl
mov
xor
mov
scas
imul
gs
mov
popf
mov
das
imul
push
out
and
loope
mov
mov
jne
add
jecxz
sub
mov
jbe
adc
call
pop
loop
cmp
mov
cmp
or
mov
add
push
and
popf
loop
aas
sbb
xor
dec
mov
fwait
je
outsl
dec
add
adc
insl
inc
mov
and
push
mov
mov
loop
outsb
push
popf
lods
cs
pop
dec
bound
stc
pop
or
pusha
sbb
mov
rcrl
mov
xorl
adc
loop
add
ret
repnz
dec
ds
loopne
call
faddp
sbb
adc
lods
mov
xor
hlt
shld
push
xchg
in
xchg
dec
fcoms
jns
jge
sbb
or
jg
in
push
jae
les
mov
aaa
test
push
xor
push
inc
ss
pop
pop
push
push
subl
rorl
and
std
imul
nop
inc
dec
lret
sub
loope
outsl
push
pop
and
lods
inc
xor
sub
or
loopne
insb
cmpl
imul
cmp
into
or
xor
and
aad
arpl
and
arpl
ret
adc
adc
sub
cld
sbb
mov
xchg
sbb
sar
adc
lods
cmp
jns
inc
jmp
movsb
push
jnp
nop
daa
jae
shlb
faddp
sahf
roll
loopne
ja
test
sbb
mov
ds
lods
and
or
inc
xchg
inc
roll
xchg
pop
enter
popf
aaa
sbb
dec
call
sbb
out
add
rclb
sbb
xlat
add
in
orb
inc
movsb
push
test
movb
lods
sub
das
and
sarb
daa
repnz
addb
popf
pop
test
stos
loop
imul
call
add
incb
addl
aas
pushf
sbbl
lahf
mov
call
push
ja
dec
mov
rcrl
icebp
orb
fs
push
sub
xor
lock
flds
pop
or
jo
cmp
pusha
arpl
or
mov
adc
lds
or
inc
fxch
cmp
outsb
mov
clc
push
sbb
mov
test
test
adc
jp
and
push
sbb
cmp
notb
or
cmp
scas
stc
repnz
movsl
push
mov
push
adc
cmp
pop
or
dec
cmp
gs
leave
test
push
jge
ret
sub
ds
pop
xor
shll
popa
mov
mov
or
sub
adc
inc
inc
sbb
mov
sub
test
aaa
xchg
cld
testb
jne
popa
or
das
into
cmp
loop
lret
jns
sbb
lods
jno
aaa
cmpsb
lods
ficompl
iret
popf
scas
jo
mov
data16
jl
loop
dec
popa
icebp
inc
mov
dec
cmpsb
mov
je
leave
aaa
cmp
xor
test
ret
or
imul
push
inc
mov
dec
add
cld
and
test
push
sti
test
std
int
adc
and
or
mov
jno
mov
rcll
mov
jb
fwait
stc
rcl
or
test
push
add
push
ljmp
cmpsl
movsb
movsl
fdivrs
loop
dec
repz
mov
imul
dec
pop
xchg
gs
test
and
mov
push
sbb
jb
jo
ss
adc
push
cmp
pop
mov
test
sub
push
dec
les
xor
xchg
sarb
cs
add
sub
fdivl
movsl
sub
pop
mov
sub
mov
and
cli
sbb
loopne
mov
cmp
or
sub
add
xor
stos
and
scas
shll
adc
xor
lods
pop
or
mov
push
and
mov
adc
lea
adc
shrl
insb
daa
and
int3
adc
subl
in
xchg
scas
in
push
insl
adc
out
lods
xor
pop
add
lods
and
cmp
int3
lock
outsl
jp
inc
divb
xor
dec
dec
test
dec
test
mov
das
push
add
xorl
cmp
enter
out
scas
mov
fnstcw
dec
push
mov
xor
sub
cmp
js
jp
xchg
or
jne
xor
negl
mov
iret
inc
xor
dec
iret
rorl
ljmp
jg
ss
mov
int3
inc
push
add
jle
cmp
jbe
lret
bsf
xor
xor
das
cmp
pusha
jp
mov
jmp
es
addl
jb
lea
test
loopne
adc
pop
in
inc
lods
pop
shlb
and
imul
xor
add
arpl
dec
mov
fstpt
mov
mov
sub
insw
addl
cmp
daa
jmp
ror
sub
pop
or
into
pusha
add
gs
or
adc
imul
out
pop
daa
cmpl
pop
add
mov
sti
sbb
xor
jmp
jno
and
cmp
push
cmp
incb
push
nop
lds
push
xadd
jmp
add
push
stos
jge
es
out
mov
pop
sbb
test
pop
or
xor
cmp
aaa
or
sbb
scas
push
lods
cmp
cmp
das
ss
es
stos
add
sbb
push
inc
jl
or
inc
and
push
lea
pop
push
push
ss
xchg
aas
mov
mov
ret
loope
dec
insl
loop
call
enter
sub
sub
lods
adc
push
sbb
test
cmpsl
es
scas
dec
pop
lods
and
in
das
cmp
add
sbb
mov
xchg
nop
es
sbbb
jl
mull
xchg
inc
sbb
adc
lret
push
daa
push
lods
add
inc
jo
les
std
std
xchg
std
add
push
or
test
outsb
pusha
mov
iret
cmp
add
and
jp
mov
jp
add
push
mov
cmp
adc
clc
fisubrl
frstor
xor
or
cs
sub
add
cli
test
dec
dec
mov
add
xchg
jp
ficompl
adc
icebp
add
mov
mov
mov
xchg
fsub
mov
mov
arpl
mov
test
bnd
mov
push
mov
movsb
or
and
xor
call
les
mov
stc
pop
push
cmp
sti
xchg
shl
decl
push
int
jle
cmp
pop
leave
mov
cmp
push
jo
xchg
enterw
iret
pop
enter
push
int
int
xor
lods
cld
fsubs
loopne
pop
sub
lahf
cmp
jle
cmp
cmpl
push
or
inc
and
sub
pop
add
movsb
add
add
xor
push
sub
cmp
mov
pop
sbb
popf
jnp
adc
bound
push
xor
xorb
lock
adc
jl
xlat
adc
add
stos
mov
movsb
inc
adc
test
enter
pop
lahf
mov
cmc
and
or
push
sbb
xchg
in
dec
adc
jle
jae
ret
pop
and
rcll
sar
das
xchg
fldt
rcrl
xchg
int
mov
add
test
ret
sub
adc
rcr
or
pop
ret
jmp
xchg
fldpi
iret
movsl
popf
add
adc
mov
les
xlat
rcrb
cmp
and
jo
sbb
mov
push
cli
xor
lock
test
dec
xor
enter
and
inc
inc
pushf
xor
push
dec
pop
mov
lods
shrb
sbb
call
in
sbb
sub
sahf
lcall
and
dec
push
rclb
xlat
movsl
pop
pusha
enter
shrb
insb
nop
dec
adc
add
adc
add
mov
mov
popa
xchg
aad
jns
int3
sbb
rolb
mov
cmp
pop
add
inc
push
xor
fsubr
xchg
xchg
mov
pop
cmc
add
mov
mov
dec
push
push
sub
jle
std
enter
je
test
addl
cltd
popa
movsl
or
mov
inc
movsl
hlt
cwtl
xor
cmpsb
add
xor
jp
fwait
xchg
test
pop
jge
lods
out
cmpsl
and
in
inc
sbb
cmp
roll
pop
pop
inc
mov
add
mov
in
dec
dec
xor
pop
cltd
inc
mov
stos
lahf
iret
jg
mov
popa
jae
and
xor
inc
repnz
ja
add
inc
xor
fcmovne
add
jl
mov
dec
test
jg
mov
xchg
mov
and
mov
rcll
sbbl
test
popa
cmp
xchg
lret
rcrl
pushf
scas
orl
jae
outsl
popf
or
lret
cltd
pop
xlat
inc
add
xchg
push
mov
fidivrl
xor
pop
flds
adc
jl
and
aam
jno
xlat
repnz
in
cmc
popa
std
out
std
roll
inc
cmpsl
shll
repnz
or
in
or
mov
movsl
inc
imul
xchg
pushf
test
lods
inc
lods
jns
mov
icebp
inc
mov
setns
jno
aaa
mov
add
or
pop
ror
icebp
hlt
add
push
sub
jge
push
lock
pop
adc
dec
inc
btc
shl
and
mov
xor
and
mov
push
lods
call
and
sub
xchg
mov
jp
nop
lcall
jge
adc
popf
std
shrl
popf
leave
adc
and
lds
pop
movl
pop
xchg
lret
enter
rclb
sahf
add
and
pop
add
jae
mov
cmpsl
fucomp
mov
leave
and
cs
popf
dec
lea
stos
sbb
push
ja
jmp
test
inc
sub
push
push
adc
add
jl
push
and
data16
xor
inc
jle
mov
daa
in
lods
sub
aas
or
or
pop
jnp
add
jbe
dec
mov
push
or
jp
std
fidivrs
jae
dec
imul
cli
fsubrl
jb
std
fstps
jne
lods
pop
test
pop
adc
lahf
xchg
add
lods
mov
dec
ret
test
jae
jo
and
cs
fbld
sub
popf
push
cltd
leave
popa
lods
andl
and
aaa
add
cmp
xor
out
hlt
adc
xor
imul
movsb
ss
sub
xor
cmpsl
fldl
scas
gs
icebp
cld
inc
sbbl
adc
pop
inc
ds
cltd
enter
add
xchg
push
xchg
or
sbb
cmc
into
mov
adc
jo
xchg
mov
add
jl
xor
dec
mov
and
adc
cmovl
fnsave
dec
sahf
pushf
sub
rol
dec
inc
pop
lods
in
inc
xchg
sub
int
lea
adc
lods
adc
adc
xchg
lea
daa
in
int
xor
cmpsl
xchg
subl
fwait
cmp
push
fildll
inc
in
cmp
enter
enter
ja
iret
rolb
test
mov
mov
xor
and
xor
xchg
and
add
xchg
xor
add
mov
rcrl
mov
ret
lock
bnd
imul
jbe
mov
and
lret
sarb
adc
je
popa
cltd
adc
ss
dec
testl
test
loope
loope
mov
loopne
push
shrb
pop
push
sub
mov
jp
popf
xchg
sub
and
add
mov
xchg
adc
add
push
pop
aad
add
add
mov
icebp
push
sarb
ret
dec
fiadds
loope
mov
mov
xor
bound
push
mov
pop
loope
cwtl
push
pop
sub
mov
pop
push
subb
dec
cmp
std
mov
push
mov
push
xor
push
outsb
inc
dec
mov
roll
shlb
je
adc
call
adc
aas
adc
pusha
daa
stos
icebp
jg
stos
xlat
push
dec
test
mov
pop
mov
adc
pusha
mov
out
loope
sarl
ret
cmp
sarb
addr16
mov
lock
pop
fs
movsl
loop
cltd
out
mov
pop
mov
push
lds
sbb
adc
lods
scas
iret
rcr
or
cmpl
cmp
xchg
icebp
inc
das
sbb
iret
fcoms
push
and
lock
clc
cmp
roll
adc
push
notb
les
enter
enter
or
pop
push
ja
inc
mov
push
sbb
dec
jbe
dec
dec
adc
roll
divb
and
cmp
mov
pusha
shrl
push
adc
and
outsb
inc
mov
push
int
xlat
std
in
fwait
xchg
mov
adc
mov
jne
stos
hlt
insb
rcrb
std
mov
jne
lret
add
push
jne
imul
dec
dec
dec
add
adcb
sbb
mov
shlb
jmp
push
cltd
inc
xchg
ja
mov
xchg
mov
or
shll
pop
jg
mov
push
add
enter
frstor
mov
sar
xor
cmp
xor
sub
ret
lds
hlt
das
and
sub
dec
inc
adc
jp
pop
cmp
cld
mov
xchg
and
mov
inc
inc
rol
roll
aas
add
mov
inc
sub
xchg
pushf
sbb
inc
out
popl
idivl
insl
push
aad
sbb
cld
test
jge
adc
push
xor
repnz
dec
frstor
pop
sbb
mov
fucomi
int
cmpl
sub
les
popf
imul
inc
ljmp
or
ret
into
fiadds
lods
int3
cmp
mov
mov
addr16
and
popa
ljmp
sbb
cmc
inc
jge
hlt
adc
lret
mov
and
imull
lods
sahf
sub
pop
dec
or
cmp
data16
es
jns
dec
jo
aaa
test
sub
into
adc
mov
jp
adc
cmp
ds
jge
and
mov
adc
lea
xchg
scas
cmc
test
inc
dec
lcall
out
adc
movb
or
add
scas
jp
pusha
arpl
addb
dec
pushf
loop
push
and
ret
push
cmpsl
mov
xor
or
clc
and
push
je
bound
sbb
lds
pop
add
lds
add
mov
push
das
xor
lods
mov
add
push
add
push
jne
inc
mov
pusha
and
mov
dec
push
es
loop
sar
cld
popa
lods
nop
andb
lods
mov
xorl
inc
arpl
std
mulb
outsb
add
lea
inc
arpl
ds
icebp
xchg
push
andb
sub
nop
push
pusha
mov
jl
aam
rclb
fldcw
xchg
xchg
repnz
lods
jl
in
xchg
sbb
xor
and
push
cmp
adc
or
dec
ja
cmp
jle
mov
fs
test
lret
push
mov
dec
xchg
repz
rclb
cltd
add
inc
lods
cmpsb
dec
pop
xor
cmp
sahf
in
sbb
stos
sub
cmp
pop
std
std
sub
lock
adc
out
or
inc
mov
or
out
add
and
lods
sub
les
test
call
cmp
nop
call
lods
mov
push
inc
lcall
xchg
int3
stos
or
scas
test
jp
pop
inc
sar
mov
xchg
pop
jle
ret
std
cmp
int
pop
cwtl
iret
std
sahf
dec
leave
jle
in
or
lret
std
rcll
xlat
std
sar
in
inc
sar
cmpsl
out
sar
fs
dec
mov
lret
mov
std
xchg
adc
mov
mov
loope
std
aaa
jecxz
lahf
loope
fildll
adc
std
test
xlat
jmp
std
sbb
inc
cmc
std
test
idiv
gs
xor
std
lret
lret
pop
sub
ljmp
lret
stc
std
int3
xchg
pop
int
out
xchg
scas
test
xor
pop
push
in
std
fwait
xor
pop
cmp
jg
pusha
xlat
push
xor
or
mov
outsl
insb
cmp
repnz
mov
sub
mov
cmpsb
movsl
mov
dec
lahf
adc
ret
shl
push
fwait
std
inc
push
movsl
sub
das
mov
jge
mov
std
div
lods
std
mov
shrb
in
aaa
int
pop
decb
stos
std
jp
mov
adc
cvtps2pi
std
fldenv
xchg
ljmp
mov
jl
mov
sahf
sti
add
lret
das
mov
inc
std
rcl
dec
std
pop
cs
xchg
dec
dec
imul
xor
adc
fsub
push
std
pusha
test
scas
pop
std
jns
jle
cs
pop
lock
std
xorb
or
js
cld
repnz
cld
jg
popa
cld
xchg
inc
arpl
popf
sub
insl
cld
sbb
outsl
cld
aam
imul
cs
jne
lahf
jns
sbb
hlt
lret
mov
add
stos
popf
js
das
call
jno
scas
ror
scas
jp
sti
testl
add
xor
cmc
or
and
or
in
push
adc
std
addl
std
fsubl
es
jecxz
xchg
pop
ja
std
js
pop
std
push
xchg
sbb
test
repnz
int
cmp
and
stc
in
lds
std
out
inc
sti
and
cmp
xchg
pop
jle
std
add
sub
cmc
push
sub
or
negl
push
xor
fnsave
jae
jge
imull
lcall
into
mov
xor
pop
inc
fadd
cmpsl
inc
stos
call
xor
ss
pop
adc
fstpt
jb
and
test
js,pn
push
inc
pop
push
dec
and
and
pop
or
xor
xchg
push
xchg
pushf
rol
xchg
lea
push
or
hlt
jbe
add
mov
mov
adc
clc
pop
add
in
xor
shlb
mov
lret
clc
xchg
pushf
cmp
bound
enter
jbe
lods
xchg
nop
in
add
lods
andb
jne
aad
xchg
shlb
clc
inc
push
xchg
lods
lret
inc
cld
inc
sar
stc
iret
xchg
and
dec
out
push
mov
leave
push
out
mov
xor
inc
xor
and
imul
std
sti
jmp
inc
sbb
fucomi
cmpb
movsb
jnp
xchg
cli
addr16
lods
or
push
cmp
popa
or
std
test
or
stc
push
add
mov
cmp
xlat
mov
jne
xchg
jno
and
cs
cmpsb
sbb
bound
adcl
cs
adc
dec
lods
mov
jle
mov
inc
inc
loopne
shll
sbb
adc
sbbb
push
jnp
enter
rcll
test
inc
ja
loopne
clc
mov
dec
cwtl
negb
push
add
sbb
ret
imul
push
imul
mov
pop
mov
int3
sti
mov
pop
test
aam
xchg
mov
je
rcll
popa
xchg
std
andl
adc
leave
jmp
sub
pop
xlat
rorb
jo
enter
or
mov
nop
cmpsb
mov
mov
loop
xchg
jno
sub
out
test
popa
mov
stc
mov
out
push
lods
push
jl
cmpsb
or
imull
lahf
test
ss
rcl
xchg
rep
push
adc
movsb
adc
add
out
pop
int
inc
dec
mov
roll
imul
imul
adc
dec
push
dec
shlb
loope
xor
mov
shrb
add
in
aas
push
sarb
xchg
cwtl
bound
ret
iret
lods
mov
inc
daa
lds
test
shlb
mov
lock
js
sarb
dec
addr16
or
adc
jne
das
hlt
mov
push
mov
addr16
lods
and
sbb
loopne
jae
out
jl
or
jg
add
into
xchg
cmp
sub
xchg
out
mov
pop
imul
push
pop
into
push
inc
pop
add
nop
jbe
insb
scas
mov
xor
cmpsb
push
or
or
sarb
and
scas
ret
ret
xchg
sbb
adc
data16
xor
insl
push
xchg
cli
iret
dec
nop
adc
push
imul
mov
ss
dec
fwait
mov
cmp
ret
adc
loop
push
outsb
inc
loope
mov
pop
sbb
sbb
dec
mov
lods
aaa
xor
pop
dec
lods
sub
sbb
push
sbb
mov
add
aam
outsl
dec
test
jp
adc
sbb
pop
in
or
movsl
pop
xor
xlat
inc
mov
pop
adc
cmp
outsl
xor
and
push
dec
ja
cmp
jecxz
mov
pop
and
inc
fadds
or
mov
sub
push
add
mov
jbe
push
pop
xor
dec
cmp
mov
in
repnz
cltd
or
push
ljmp
or
mov
cmpsb
fldl
jl
jno
icebp
dec
icebp
in
repnz
pop
xor
dec
push
dec
jae
pushf
inc
icebp
xor
sub
fwait
les
imul
in
xor
cs
test
aas
add
cmp
icebp
rcrb
dec
pop
sub
and
cld
or
or
inc
xor
mov
mov
push
add
test
dec
inc
push
sub
lods
jle
test
inc
cli
fbstp
outsl
gs
adc
addl
cltd
adc
add
sti
jo
in
std
cmp
push
adc
jo
mov
subb
and
gs
inc
jl
xchg
pusha
or
imul
out
adc
xchg
data16
dec
mov
sbb
mov
push
mov
ret
and
push
push
shlb
enter
in
mov
shlb
cmp
xchg
mull
adc
cli
enter
dec
pop
pop
pop
sbb
cmc
add
lret
test
jne
mov
inc
push
ret
mov
cld
rcrb
jo
mov
movsl
fwait
lods
mov
xchg
mov
and
pop
push
pop
sbb
dec
lods
and
stos
fs
sub
add
std
ss
mov
jmp
lods
xchg
loopne
mov
insb
rorl
adc
xor
cltd
cwtl
add
push
pop
les
xchg
adc
pop
ret
test
jmp
mov
dec
xchg
call
test
insl
xor
js
dec
cmp
sahf
ss
pop
xor
cli
scas
inc
and
clc
imul
dec
or
push
jle
cmc
addb
push
mov
xchg
lods
mov
cmpsl
mov
dec
lods
imul
sbb
pop
lea
je
out
pop
push
sarb
out
jbe
in
bound
lock
xor
inc
cmp
lds
out
cmp
cltd
lock
xchg
dec
jl
std
aad
stos
mov
adc
cmp
and
jae
repz
lret
lea
and
scas
push
dec
fstl
and
inc
out
call
cmp
loope
mov
bound
fdivrs
rcll
dec
rolb
clc
pop
std
clc
sub
xor
push
push
mov
sub
push
push
cmp
test
mov
nop
mov
sub
sbb
xor
dec
insl
lret
fcompl
outsl
or
sub
popf
xchg
ja
inc
pop
or
and
fs
and
lea
push
rcrl
mov
pop
clc
push
lods
jp
add
addr16
js
and
lods
jl
xor
and
add
jp
out
fsubrl
or
and
dec
pop
or
xchg
pop
mov
push
push
aaa
jg
fwait
movsl
rcl
jae
insl
push
sub
push
inc
pushf
adc
and
mov
fdivs
inc
add
mov
sub
lea
mov
push
sti
lret
sub
adc
aam
lods
aas
mov
addl
sbb
test
push
fs
gs
jns
add
lock
lods
pop
jmp
cmpsl
inc
notl
mov
je
mov
push
cmp
mov
mov
mov
and
cmp
ds
aad
xor
bound
lds
inc
ljmp
and
pop
test
mov
in
mov
js
dec
shl
rol
mov
jecxz
sti
orb
sub
lret
mov
imul
leave
cmp
mov
dec
add
xor
add
movsl
in
in
or
fsubl
outsl
push
add
movb
xor
push
adc
adc
push
jns
cld
mov
inc
adc
and
lcall
add
ss
sbb
sarl
fs
xchg
add
enter
bsr
jle
das
mov
push
sub
inc
mov
adc
repz
imul
push
fiadds
xor
or
mov
lret
ja
or
sub
inc
sbb
stos
shlb
sub
cmp
or
in
mov
test
aad
push
inc
ffreep
inc
sub
jne
jno
pusha
dec
add
mov
cmpsb
dec
int3
xchg
xor
push
xchg
and
stos
cmpsl
dec
pop
fidivrs
jo
pop
movsb
out
enter
cmp
les
or
cmpsb
cmp
push
adc
inc
outsb
mov
jmp
loopne
xchg
orb
ret
jnp
or
jge
call
mov
loopne
mov
inc
sub
pop
push
cwtl
in
data16
movsb
mov
add
push
lock
cli
push
xor
dec
sti
jp
dec
xorb
or
add
xchg
jbe
xor
jle
push
lret
mov
inc
push
and
call
cmc
adc
cmpsb
mov
xchg
mov
xor
push
mov
xor
add
and
sub
add
sub
jl,pn
int3
pusha
lret
xor
js
or
dec
mov
pop
fildl
mov
rcll
shl
sbb
popa
ljmp
stc
into
and
add
insl
popa
jmp
jne
dec
pop
push
jle
aaa
mov
xor
add
jns
rclb
lar
into
test
push
mov
aas
sbb
adc
rcrb
lea
jbe
int3
inc
adc
mov
sbb
test
repz
in
push
inc
in
and
add
dec
xor
ret
dec
xor
lcall
inc
clc
push
dec
jne
dec
xchg
pop
inc
cmp
jb
sar
loopne
dec
adc
pop
push
inc
mov
sub
lods
fcom
notl
dec
mov
pop
sbb
movzbl
pop
mov
dec
and
or
or
push
xor
cmp
xor
sahf
je
push
xor
rcrb
rol
shll
sub
xlat
mov
cmp
daa
xchg
ljmp
imul
shll
loope
mov
into
inc
or
insl
sysexit
mov
call
push
es
xor
mov
rorl
pop
pusha
jmp
int3
sbb
xchg
push
xor
or
sub
paddusw
xor
and
loopne
jmp
cmp
mov
aam
xorb
and
jnp
add
push
cmp
lods
sbb
test
pop
mov
daa
ret
subb
mov
adc
jmp
addb
xor
mov
in
add
cs
lods
aas
sub
sti
add
je
nop
or
je
or
les
jg
adc
into
xor
push
clc
js
or
mov
dec
xor
dec
ret
push
loop
sub
sbb
xchg
xor
data16
cmpsb
add
xor
loope
cmp
jo
dec
rorb
je
xchg
sub
pushf
les
mov
std
sub
inc
and
lock
sub
xor
mov
mov
jecxz
sub
add
pop
cmp
movsb
ja
cmova
out
sbb
xchg
leave
dec
enter
jb
lret
repz
inc
aam
cmp
or
pop
inc
inc
mov
stos
adc
subb
pop
outsb
push
loopne
inc
add
or
wrmsr
movsb
stos
sub
dec
lods
push
test
dec
jne
adc
imul
nop
add
leave
add
aam
popa
mov
jns
aad
lods
push
ljmp
scas
xchg
test
movb
repnz
outsl
xor
pushf
movsl
or
mov
fnstsw
xor
aam
push
mov
leave
les
aas
mov
mov
test
das
dec
outsb
sub
xchg
test
and
sub
mov
lock
sub
inc
xchg
cs
add
mov
jle
xchg
dec
aad
and
push
cli
xlat
bound
sbb
cmc
sub
sbb
lock
into
push
push
mov
scas
xchg
lock
push
cs
or
shlb
mov
in
or
mov
jne
pop
scas
jle
jp
in
pop
fs
adc
mov
xchg
mov
inc
dec
icebp
push
sbb
jl
push
inc
inc
push
outsl
insb
ljmp
sbb
cmp
push
xchg
call
mov
cmpsb
pop
and
or
xor
and
imul
repnz
in
jo
push
push
lods
leave
or
xor
xchg
sbb
jb
nop
mov
or
pop
lods
jl
test
int
push
addr16
shll
add
adc
inc
rolb
aam
dec
mov
insl
mov
jne
scas
dec
popf
popf
lcall
je
test
or
and
jne,pt
subl
dec
lods
orb
ss
inc
mov
cs
das
push
inc
mov
lods
inc
fstpl
cmpsl
pop
push
lcall
ror
shlb
inc
sbb
lods
adc
xchg
xor
lods
adc
inc
std
push
push
xor
sub
push
mov
inc
std
cs
out
mov
inc
jp
int3
cmp
adc
sarl
xchg
mov
sbb
bnd
add
cwtl
lods
adc
mov
clc
filds
fdivrl
add
xchg
cmpsb
adc
mov
mov
adc
add
sahf
xlat
mov
int
and
into
xchg
dec
sbb
fisttpll
pop
xorl
nop
jecxz
dec
popa
pop
adc
push
stos
push
js
jge
xor
jno
adc
xchg
and
add
pop
and
movsl
idivb
jnp
iret
scas
mov
push
fistpl
push
mov
xor
shlb
subl
or
inc
sbb
lods
rorb
pushf
fisttpl
pop
repnz
dec
push
andl
mov
fdivs
outsb
cld
scas
arpl
pop
dec
imul
dec
pop
jp
insl
arpl
cmp
scas
rolb
repz
xchg
adc
or
mov
and
push
cmp
in
sbb
push
out
insl
insl
adc
outsb
add
dec
es
ja
xorb
dec
mov
jbe
gs
mov
xor
sub
testl
js
jne
pop
inc
cmp
sbb
push
test
xchg
cmp
pop
mov
loopne
fsubp
adc
scas
mov
inc
scas
mov
fisubrl
adc
inc
mov
nop
sub
mov
jl
sub
adc
add
pop
and
xor
cmpsb
jle
xor
dec
das
mov
or
pop
int3
ret
pop
xchg
adc
or
cmpl
mov
jo
push
cmp
adc
dec
inc
mov
repz
mov
jbe
inc
sub
inc
cmp
adc
pop
inc
adcl
pop
sub
xor
mov
and
stos
and
orb
sbb
cmp
dec
insb
scas
insb
pop
iret
shlb
subl
push
jo
js
jns
adc
add
adcl
call
xchg
stc
pop
lods
cmpsl
mov
cmp
popa
arpl
push
dec
movsl
pop
enter
adc
testl
dec
lret
fcmovnu
mov
scas
sbb
notl
inc
xor
or
sub
enter
xor
js
xor
inc
in
fs
or
sbb
insl
js
bound
inc
jmp
adc
sbb
lock
inc
jne
cwtl
dec
sbb
push
shrb
mov
sbb
dec
dec
cld
scas
pusha
insb
jp
lock
jge
mov
std
and
adc
dec
dec
sbb
jecxz
clc
and
les
fadds
nop
xor
inc
andb
scas
lock
xchg
push
mov
and
inc
sbb
gs
scas
ret
mov
dec
mov
or
adc
imul
push
les
push
pusha
jae
clc
or
ja
std
lds
sub
push
out
out
or
sub
insb
ret
cmp
xor
jle
adc
push
inc
movsl
faddl
inc
jne
dec
lock
shrb
pop
ret
ljmp
js
and
stos
mov
loope
lods
lret
sbb
les
dec
adc
enter
jl
xor
subb
pop
psllw
outsl
repnz
lods
push
mov
inc
or
and
test
jle
push
mov
push
addr16
lds
add
test
sarb
scas
pusha
imul
pop
filds
xchg
xor
add
ja
sbb
lea
add
cmp
test
mov
xor
mov
inc
fs
fistl
ss
push
sbb
dec
xor
mov
adc
jle
fwait
or
jp
lods
mov
and
add
sub
jg
mov
adc
popa
mov
outsl
jmp
xchg
jle
xor
inc
test
jmp
cld
add
lcall
mov
mov
lret
inc
adc
test
xor
es
cltd
add
in
subb
push
arpl
mov
xchg
add
inc
outsb
add
push
aaa
inc
inc
xor
push
sbb
es
les
mov
sbb
adc
push
or
andl
push
sbb
add
dec
cmpsb
enter
icebp
push
dec
inc
bound
xorb
movsb
outsb
inc
pop
repnz
pusha
xchg
inc
clc
pop
test
mov
adc
cmp
add
cmc
mov
jecxz
es
add
pushf
cmp
sbb
arpl
inc
and
lret
and
push
cmp
xchg
stc
dec
sub
add
mov
bound
sbb
adc
ret
inc
testb
and
rcl
out
xchg
lods
mov
cs
les
int3
pop
push
pop
js
testl
jge
icebp
push
negb
into
arpl
dec
sbb
shrb
mov
repnz
in
or
gs
xchg
adc
add
js
lods
xor
mov
in
inc
lods
push
sbb
sbb
xor
js
inc
jg
add
cli
xchg
rcl
adc
mov
mov
mov
xchg
es
inc
mov
jno
lods
xchg
bound
fadds
and
jl
inc
xor
sbb
out
mov
xor
popf
jno
push
xchg
inc
or
repnz
sbb
adc
xchg
int3
sbb
mov
popa
cmp
in
adc
push
add
lds
push
adc
sbb
pop
cltd
jl
test
pop
sbb
or
lods
pop
pop
in
lds
fcompl
push
sbb
sub
adc
fistpll
inc
call
mov
jmp
jne
add
xor
repnz
adc
jno
in
push
insb
inc
push
outsb
pop
adc
enter
add
add
dec
cmp
ljmp
jle
inc
ss
jbe
inc
cs
push
ja
push
ja
add
push
jnp
imul
inc
aaa
lods
sbb
add
add
test
and
outsb
pop
insb
repz
clc
jns
and
add
decb
mov
int3
jns
mov
inc
and
jo
adc
push
adc
xor
jne
or
lods
mov
xchg
ja
and
js
dec
pusha
es
fcoms
fstpt
nop
hlt
add
add
add
fcomp
inc
lods
test
lret
mov
lret
insl
stos
mov
nop
aaa
sti
or
sbb
or
mov
aaa
ss
push
negl
pop
aas
push
jmp
popf
inc
mov
fsubrl
dec
or
test
adc
sub
je
xor
inc
or
sahf
dec
dec
inc
push
xorb
mov
sub
fisttps
or
mov
bound
pop
jl
xor
sahf
jge
aaa
movsl
das
sbb
mov
orb
shrb
inc
inc
sub
gs
jo
fdivs
mov
das
js
mov
and
jge
sti
inc
dec
inc
lods
mov
add
mov
xor
or
into
mov
xor
mov
and
ret
out
inc
push
push
nop
cmp
movaps
out
add
popa
or
leave
xor
dec
rcrb
in
add
lds
xchg
lods
xor
cmp
das
out
scas
gs
mov
cltd
pop
inc
imul
adc
pop
dec
mov
ret
xchg
les
xchg
xor
xor
mov
repnz
nop
sbb
imul
movsl
adcb
xor
and
sbb
sbb
pop
lcall
and
mov
xor
jle
leave
rcr
mov
mov
adc
test
xor
xchg
es
lds
decl
sbb
insb
popf
fcmovnb
rcrl
pop
stos
jbe
mov
cli
sbb
je
fimull
cmp
push
and
mov
fidivrl
add
into
lahf
into
mov
arpl
xor
adc
inc
xor
adc
lods
add
into
and
sbb
loopne
sahf
int
add
int3
sub
in
cmpl
dec
lods
jmp
pop
and
stos
lods
and
nop
fcmove
repnz
push
jno
imul
stos
roll
lods
test
pop
cld
dec
xor
or
gs
je
insl
sub
mov
dec
lods
xchg
mov
insb
sub
mov
xlat
add
mov
xorb
mov
and
in
inc
mov
mov
jo
xchg
mov
push
lods
fidivs
jg
mov
les
aam
inc
and
mov
int3
std
scas
enter
cwtl
sarb
clc
in
scas
push
xchg
data16
or
insb
cmc
mov
mov
sbb
or
lock
into
add
push
mov
lds
dec
push
imul
or
or
adc
popf
inc
sub
data16
aas
inc
stc
or
sbb
add
and
out
js
mov
hlt
inc
rcrb
or
inc
mov
mov
mov
sbb
fisttpl
xchg
sbb
and
sub
scas
xchg
or
jb
pop
shl
jae
cld
add
lods
enter
mov
push
jbe
outsb
xchg
shlb
jge
or
inc
inc
fwait
dec
adc
jbe
sbb
rol
mov
pop
repnz
jo
sub
inc
negl
repnz
mov
mov
lods
mov
push
mov
xchg
sti
inc
push
mov
jb
jecxz
mov
mov
push
push
sub
aad
push
ljmp
inc
lds
cmpsb
rclb
sbb
mov
mov
dec
lock
into
dec
push
jp
mov
loopne
xor
cmpsb
outsb
aas
jbe
enter
ss
mov
and
lcall
dec
fmull
mov
xchg
inc
dec
lock
mov
sub
mov
push
and
push
dec
dec
negl
inc
pop
add
insl
add
lahf
dec
add
mov
je
or
mov
mov
cmc
sub
sbb
jae
test
jl
dec
mov
pop
inc
insl
into
jno
jl
push
fstpl
ret
push
xor
mov
in
pusha
ja
cmp
stos
rclb
std
push
in
aam
fadd
incl
fstps
adc
test
aaa
popf
hlt
push
cs
push
mov
clc
ss
xor
inc
dec
daa
lods
add
lods
jnp
cmp
loope
mov
cltd
rclb
add
inc
add
jl
cmp
hlt
inc
in
loop
dec
popa
nop
pop
xchg
push
je
hlt
pop
inc
push
lods
addl
lods
aas
pop
pop
add
mov
cwtl
adc
scas
pusha
daa
xchg
mov
dec
ds
xchg
leave
mov
xlat
cmp
xchg
push
rorb
movsb
dec
call
je
jle
xchg
xchg
jbe
or
xchg
fwait
or
adc
scas
dec
dec
notl
sub
xchg
and
pop
out
mov
nop
dec
adc
pop
adc
mov
jo
and
popa
adc
or
inc
xchg
cmp
and
insl
push
outsb
dec
jecxz
dec
cmp
lock
loopne
mov
jno
dec
add
adc
and
xlat
adc
clc
into
and
mov
add
or
push
or
cmp
sbbl
gs
mov
insl
add
loope
mov
adc
inc
push
shlb
inc
insl
add
insl
aaa
sub
inc
pop
test
add
fmul
or
jbe
outsb
mov
or
test
cmp
pop
or
int3
sbb
orl
dec
pop
add
clc
mov
dec
inc
inc
xchg
outsb
xchg
ror
orb
inc
je
jb
xorb
push
std
fidivrs
clc
inc
xor
jl,pt
into
sbb
add
jl
pop
or
inc
inc
inc
lds
jns
dec
push
xchg
mov
jecxz
jl
lea
or
lock
add
dec
sub
shrb
jle
popf
je
pop
fldt
sbb
pop
pop
out
in
insb
in
or
fcmovb
dec
cmp
dec
sub
outsb
fildl
adc
inc
ss
mov
jno
scas
das
movsb
lds
add
xchg
or
mov
ss
dec
daa
lods
and
lods
fists
sub
fwait
out
inc
popf
into
test
jns
mov
push
adc
xor
gs
decl
pop
add
std
aad
push
push
or
push
push
jns
insb
add
adc
ret
aad
jb
ss
clc
xor
xlat
test
dec
lcall
and
cmc
dec
jmp
hlt
xchg
push
es
push
xchg
mov
inc
push
push
pop
xchg
and
dec
dec
fcmove
mov
fcomps
rolb
pop
inc
sbb
adc
into
mov
loopne
insl
into
or
mov
push
pop
or
mov
aas
mov
mov
lret
push
js
jno
cmp
add
rorb
dec
push
adc
popa
adc
lock
xor
jb
ja
add
and
and
call
movsl
rorl
outsb
mov
addl
enter
adc
into
adc
or
insb
sbb
xor
daa
sbb
dec
ja
adc
in
lret
inc
lods
lods
psllq
dec
fsubrl
leave
add
xchg
lock
lods
mov
sbb
jecxz
jae
mov
jmp
xchg
pop
cmp
mov
mov
mov
mov
sbb
shl
adcl
shrb
jbe
outsl
push
push
insb
and
mov
push
xor
or
adc
xor
or
fwait
xor
lods
dec
movb
enter
lock
jno
dec
cs
icebp
rorl
enter
enter
sub
xor
arpl
xchg
divb
fnsave
adcl
pop
and
mov
dec
or
xlat
add
add
bound
xor
into
nop
inc
lock
xor
dec
ss
sbb
cmp
jl
inc
xchg
int
dec
push
sub
cmp
cmp
cwtl
cld
cwtl
add
cmpsb
imul
jle
push
mov
add
clc
or
into
cltd
mov
inc
hlt
into
movb
popa
cmc
add
mov
ja
xchg
dec
rorb
add
insl
inc
and
and
pop
add
push
cmp
popa
and
cli
lods
jnp
add
jns
clc
xchg
testb
cmp
lret
add
xchg
add
mov
sbb
in
sarb
inc
xchg
push
imul
add
mov
inc
imul
sbb
adc
ss
xchg
xor
mov
flds
xchg
ss
xor
and
hlt
mov
clc
xor
sub
push
push
xor
mov
sub
dec
cmpsb
dec
xchg
adc
adc
and
dec
add
stos
bound
push
cltd
test
mov
push
xchg
fstps
pop
adcb
sahf
xchg
sti
mov
dec
add
fcmovnbe
xorl
cltd
das
pushf
inc
mov
jo
xor
jl
js
or
pop
sbb
adc
xor
jle
xor
sub
rcrb
adc
or
mov
mov
sub
lret
scas
push
hlt
loopne
pop
push
sbb
test
adc
or
into
jbe
mov
mov
gs
mov
cmp
dec
mov
lahf
bound
call
cmp
pop
movsl
fsubs
insl
jl
jae
aad
push
sbb
jo
inc
cld
mov
push
jno
mov
adc
and
push
shrl
dec
inc
orb
push
cmpsb
imul
outsl
lcall
add
adc
dec
jge
push
scas
mov
cmpb
jns
aaa
movsb
cmpsb
inc
test
and
push
cmp
imul
ficompl
popa
sub
pop
add
mov
inc
aas
push
xchg
mov
push
popf
pushf
pushf
mov
clc
adcb
imulb
test
or
push
je
rcll
push
outsb
mov
shrl
fcmovb
xor
pop
cmp
cld
movb
testb
insb
bound
or
push
mov
mov
add
jns
mov
rclb
int3
xchg
mov
adc
jnp
mov
xchg
dec
and
cmc
lods
mov
stos
daa
dec
in
xchg
rcl
mov
mov
inc
xor
push
je
inc
pop
enter
mov
and
arpl
push
sahf
mov
push
inc
test
jge
movsb
into
addb
adc
outsb
xchg
scas
pop
push
add
xor
dec
imull
cli
adc
jne
lcall
adc
or
xor
cmc
sbb
adc
ss
in
push
inc
scas
jge
addl
push
xorb
xor
aam
es
pop
lahf
mov
int
pop
xchg
not
andl
icebp
or
sub
rorl
or
dec
mov
lock
cmpsb
imul
push
into
cmpsl
cmp
pop
mov
mov
test
cs
clc
and
mov
es
lods
out
insl
daa
mov
test
or
mov
inc
lods
add
sbb
push
jecxz
push
push
adc
je
lret
dec
add
fidivrs
push
push
and
enter
mov
cwtl
xchg
mov
and
jb
push
adc
js
pop
cmp
sub
les
sub
add
push
xchg
hlt
in
mov
and
sahf
sahf
mov
mov
orl
and
xchg
jno
enter
mov
or
push
add
jge
xor
mov
push
mov
lret
lcall
aaa
scas
sub
dec
iret
leave
xchg
jnp
pop
icebp
pusha
or
adc
jns
xchg
mov
jno
lds
outsb
sub
pop
xchg
inc
popa
inc
pop
or
call
pop
and
add
mov
testl
pop
xchg
mov
mov
mov
xor
ss
out
addb
lcall
outsb
outsb
xor
pop
addl
mov
lods
in
push
or
sbb
lods
inc
outsl
outsb
add
mov
sarb
cmp
mov
xchg
outsb
dec
hlt
aam
xor
out
and
add
mov
loope
mov
sub
xchg
jbe
mov
pop
test
imul
xchg
scas
add
sbb
adc
das
inc
addr16
xchg
push
sahf
xchg
scas
xchg
popf
dec
mov
fsts
mov
jp
mov
mov
inc
xchg
aaa
dec
jle
xor
das
in
xor
push
xchg
push
adcl
pop
or
xor
movsb
imul
sti
in
xor
or
dec
xchg
push
inc
adc
mov
iret
lds
cli
popa
push
ss
dec
call
pop
nop
jo
movsb
pop
xchg
lods
scas
or
adc
add
mov
push
xchg
mov
add
mov
mov
popa
shlb
roll
and
pop
push
fidivl
add
dec
sbb
pop
shrl
test
sub
sub
sub
mov
outsl
pop
xor
xchg
sub
jge
aas
jno
pusha
jbe
sbb
push
addl
xorl
les
ret
lock
sub
or
add
push
enter
and
lret
jnp
stos
out
ss
jae
inc
push
lods
mov
mov
roll
fiadds
imul
out
xor
push
xchg
cwtl
inc
sub
loope
mov
insb
fs
or
fs
aaa
dec
or
lcall
sbb
test
and
into
pop
cli
aas
or
inc
jp
xor
pop
cs
pop
xchg
pop
es
xor
sub
sub
mov
sub
rolb
and
scas
xor
mov
call
dec
or
pop
outsl
cwtl
xorb
mov
add
jae
das
pop
xor
mov
jns
dec
int3
inc
adc
dec
out
xchg
rcrb
adc
lods
xor
xor
add
mov
jl
call
add
dec
movsb
push
jno
mov
sub
gs
ds
lods
pop
movb
push
dec
push
cmpb
popf
gs
insb
lret
pop
dec
insl
adc
lds
in
adc
lahf
pusha
sub
sbb
ljmp
xor
inc
pop
out
push
icebp
mov
inc
jns
mov
sbb
add
xor
pop
push
xlat
loopne
das
dec
scas
ficoml
inc
dec
sbb
cmp
decb
adc
movb
gs
pop
testl
les
or
clc
push
xor
or
in
sbbb
sbb
inc
add
jno
mov
insl
xlat
das
and
sbb
mov
mov
lret
adc
imul
sbb
in
mov
sub
push
xchg
in
icebp
fnop
add
fidivl
adc
mov
jae
lahf
or
mov
or
xor
add
and
inc
addl
rcrb
mov
cs
sbb
ret
xor
or
cmp
int
imul
enter
cmp
movsl
js
movsb
inc
add
cs
jmp
out
adc
lods
push
das
mov
movsl
push
hlt
mov
sbb
enter
jo
addr16
xor
adc
ret
sti
mov
inc
lds
dec
loop
mov
call
jge
mov
push
adc
jmp
xor
inc
inc
or
add
hlt
add
cmpsb
imul
pushf
es
or
adc
xchg
push
pop
fistpl
pop
scas
enter
dec
int
inc
mov
incl
aad
jb
lea
push
pop
xchg
mov
dec
pxor
icebp
punpcklwd
mov
lock
and
stos
push
adc
clc
push
push
dec
mov
cmpsb
jecxz
or
push
imul
sbb
sub
out
mov
je
inc
jmp
les
movsb
mov
shlb
movsl
sub
cltd
movsl
inc
fbld
dec
add
ret
bound
add
inc
imul
fsts
mov
cltd
push
mov
fidivrl
arpl
add
adc
xor
jne
pusha
idiv
test
push
loope
and
or
stos
pop
into
adc
and
pusha
xor
shlb
mov
dec
inc
nop
add
add
push
mov
sti
test
and
stc
mov
sbb
adc
jl
arpl
push
jmp
subb
or
scas
and
cltd
insb
sub
movsl
sub
insl
jl
cmp
enter
in
in
adc
and
jl
outsb
or
mov
sbb
adc
adc
lods
mov
cmp
out
cs
aaa
add
sub
mov
xchg
adc
mov
mov
inc
pusha
or
inc
scas
xchg
and
mov
adcb
call
and
mov
iret
mov
clc
mov
adc
addr16
ds
aam
stc
stos
in
lock
pusha
push
fwait
ja
stc
imul
enter
dec
push
arpl
test
push
adc
cmpb
shrl
test
push
jp
insl
in
mov
inc
pop
inc
mov
lcall
and
imul
xor
or
dec
ret
fcmovb
outsb
push
dec
xor
push
or
int3
enter
fwait
out
add
scas
js
cmp
cmp
lods
mov
mov
or
cmp
cmp
add
dec
mov
cmovge
push
or
cmc
out
push
fmul
ja
repz
scas
sbb
jp
jl
cmp
pushf
pushf
pop
popa
pop
imul
push
outsb
jg
inc
add
loopne
xor
loopne
pop
adc
sbb
insb
and
cmpsb
js
and
je
sub
mov
cmp
xor
lret
push
inc
sbb
add
xor
or
add
icebp
addb
addb
or
cmp
lock
and
adc
les
sub
pop
test
mov
fs
mov
out
pop
push
push
push
push
aad
lods
sbb
push
or
sub
or
andl
imul
jae
push
sbb
scas
inc
sbb
subb
sub
in
iret
push
enter
lods
out
lods
jmp
pop
jb
outsb
or
mov
xchg
pushf
add
or
jnp
es
dec
xor
shll
xchg
sbb
nop
push
inc
scas
xchg
pop
enter
xlat
jg
lods
rclb
loopne
pop
iret
inc
int
ud2
or
call
push
sbb
outsb
mov
push
mov
les
and
xchg
les
pop
push
push
push
loopne
and
push
sbb
jne
pop
add
add
xrelease
pop
lcall
int3
mov
test
sahf
out
in
and
push
adc
fnstcw
out
int
add
sahf
out
add
sub
jns
gs
push
pop
push
popa
lahf
or
push
add
inc
lahf
out
out
jbe
push
movsl
es
push
popf
xchg
out
mov
push
test
stc
push
std
repz
icebp
adcl
push
fstps
shl
lahf
and
push
xchg
es
cmp
in
flds
push
push
push
push
dec
fimuls
jns
shll
out
sahf
out
jne
insl
popa
sahf
out
jns
gs
pop
push
mov
out
push
push
push
dec
push
jnp
jns
mov
test
jmp
jns
ja
out
push
cli
push
cs
inc
push
ss
in
iret
loopne
pop
push
stc
push
std
icebp
out
sahf
out
jmp
out
sahf
rcl
leave
int
sahf
out
rol
cmp
and
adc
fdivp
or
jge
out
sahf
jno
imul
dec
popa
push
gs
pop
push
testl
decl
add
mov
dec
mov
push
jns
repz
or
popf
xchg
jns
idivl
push
test
std
jns
out
icebp
cmc
jmp
lahf
out
dec
lahf
xchg
jnp
aaa
leave
mov
xchg
repnz
sahf
out
iret
ret
push
xchg
or
iret
jnp
push
add
jnp
out
pop
pop
push
dec
outsb
bound
in
mov
pop
iret
push
push
stc
adc
ljmp
cmp
dec
repz
shll
repnz
iret
cltd
popf
push
push
dec
cmpl
sahf
push
test
stc
std
icebp
cmp
push
mov
jae
in
dec
iret
jnp
inc
daa
pop
aad
leave
push
int
repz
cmp
cmp
addb
imul
adc
sti
into
sbb
sahf
addr16
decl
fldt
cmp
xlat
gs
push
pop
lahf
out
sahf
push
push
dec
dec
inc
rclb
imul
mov
xchg
xchg
jns
mov
out
out
jnp
jg
jae
test
iret
repz
out
std
icebp
cmc
push
jmp
ja
in
fnstenv
cmpsl
push
push
push
scas
sahf
cmpsl
fwait
push
mov
xchg
xchg
and
repz
repz
repz
add
imul
gs
pop
repz
repz
push
dec
dec
inc
out
lcall
mov
out
sahf
test
popf
jns
out
xchg
xchg
mov
out
stc
std
icebp
mov
in
loope
lret
jle
out
dec
adcl
int
jnp
iret
repz
mov
lahf
out
fisubrs
push
sub
dec
jnp
repz
les
fnstsw
jns
and
xor
jns
out
pop
push
push
dec
dec
repz
dec
inc
add
sahf
idivl
dec
sti
mov
mov
push
ja
shl
jns
dec
pop
lea
icebp
outsb
pop
dec
cmp
loope
in
shl
jns
out
aad
int
lds
dec
push
xor
and
jns
out
and
fiadds
dec
add
add
jns
jno
pop
loopne
sahf
out
push
push
dec
in
iret
sarl
push
add
mov
cmp
repz
lods
mov
iret
repz
xchg
xchg
mov
jns
decl
stc
std
icebp
sahf
out
sahf
cmc
jmp
idivl
jnp
push
rcl
leave
int
sahf
out
sahf
rol
cmp
out
sub
iret
repz
sbb
add
repz
jns
jno
fidivrs
neg
push
rcl
jl
iret
push
ret
out
mov
pusha
push
xor
pop
push
sub
out
das
push
and
mov
test
lods
pop
push
mov
negl
mov
push
repz
mov
pop
es
push
push
jns
jnp
push
cld
es
hlt
push
call
out
mov
fcomp
push
sarb
jnp
aam
int3
pop
rol
out
iret
repz
addl
sahf
push
imul
out
jecxz
sahf
out
out
xlat
out
sahf
out
iret
ret
cmp
xor
sub
and
out
daa
sbb
adc
out
sahf
out
lsl
jnp
out
sahf
jg
ja
outsl
arpl
out
addr16
pop
push
push
repz
out
dec
inc
inc
mov
dec
mov
mov
cmpsl
fwait
lahf
xchg
xchg
repz
repz
repz
push
imul
out
jecxz
iret
repz
fcmovnu
rcl
repz
repz
iret
ret
cmp
repz
aas
xor
sub
and
repz
sbb
adc
repz
repz
add
jnp
repz
jg
ja
outsl
arpl
repz
pop
pop
push
push
stc
cmp
repz
dec
inc
inc
mov
cmpsl
mov
sahf
out
sahf
mov
xchg
jns
out
mov
jns
out
repz
out
sahf
out
sahf
jecxz
fcmovnu
rcl
jns
out
lret
iret
ret
cmp
jns
out
xor
sub
sahf
out
sahf
and
sbb
adc
jns
out
or
add
jnp
jns
out
jae
imul
jns
arpl
pop
push
push
neg
sarl
outsb
inc
push
inc
push
mov
mov
stos
scas
mov
cmpsl
fwait
lahf
xchg
xchg
iret
repz
mov
sahf
out
cmp
imull
inc
and
jns
out
sbb
adc
popa
mov
inc
iret
push
ret
jle
jb
negl
sub
das
push
and
jnp
out
sbb
adc
dec
inc
jns
jnp
inc
push
inc
pop
push
jnp
jg
out
sahf
out
imul
sahf
out
sahf
pop
pop
push
push
dec
dec
cmp
out
inc
inc
mov
cmp
repz
scas
mov
iret
fwait
lahf
xchg
xchg
into
inc
jns
jnp
ret
push
sti
push
push
out
sahf
out
jmp
jecxz
sahf
out
sahf
fcmovnu
rcl
lret
iret
jns
out
ret
cmp
xor
jns
out
sub
and
mov
pop
adc
dec
out
inc
iret
jnp
out
inc
mov
push
jae
cmp
repz
outsl
arpl
repz
repz
push
push
dec
dec
out
ds
inc
inc
mov
out
sahf
mov
scas
mov
out
lahf
xchg
xchg
mov
addl
jns
imul
out
jecxz
fstpt
out
xlat
lret
iret
out
sahf
out
cmp
xor
sub
and
sbb
out
pop
adc
or
out
sahf
out
pop
jnp
jae
out
sahf
ja
outsl
arpl
jns
out
pop
push
push
dec
dec
repz
out
inc
mov
repz
mov
scas
mov
repz
xchg
xchg
mov
addl
cmp
imul
out
jecxz
fstpt
repz
rcl
lret
iret
repz
repz
cmp
xor
repz
aaa
sub
and
sbb
repz
adc
or
repz
repz
jnp
jae
repz
ja
outsl
arpl
cmp
repz
push
push
dec
dec
jns
iret
repz
inc
mov
jns
out
stos
scas
mov
sahf
fwait
lahf
xchg
xchg
fs
pop
cmp
repz
push
push
jae
mov
inc
fdivrl
mov
test
mov
cmp
pushf
nop
xchg
mov
cmp
repz
enter
hlt
jbe
xor
add
sbb
addw
inc
dec
jl
cltd
cmp
cmp
xor
push
push
fxtract
inc
add
push
push
fcoml
bound
fldt
xor
outsb
inc
push
pop
sbb
andl
push
sahf
push
add
jns
add
je
jbe
in
insb
lret
inc
inc
adc
popf
and
int3
adc
inc
mov
dec
lcall
movsl
jge
outsb
sub
xchg
jb
xchg
push
cmp
inc
gs
sti
push
inc
push
sub
xor
mov
cmp
inc
xchg
into
js
push
mov
adc
inc
inc
lods
cltd
cmp
add
repz
je
dec
lods
mov
testl
ja
lret
into
xchg
out
addb
ds
dec
xor
dec
lods
lds
test
stc
xchg
data16
dec
mul
inc
pop
fildl
xchg
xchg
ss
and
lods
jnp
or
lods
scas
adc
insb
fcmovnb
jnp
or
fldt
popf
push
sub
inc
movsb
ret
idivb
pop
inc
or
push
push
xor
insb
ds
stos
andb
imul
inc
test
aas
jns
jo
push
icebp
loope
adc
rcl
inc
in
xor
xor
jbe
jo
pop
inc
test
fldt
push
ljmp
cwtl
push
imul
mov
ja
jne
pop
inc
std
jecxz
out
xor
stos
mov
cmp
imul
jnp
je
sti
sub
std
dec
enter
popa
lds
and
std
lods
mov
mov
inc
sub
arpl
inc
jg
ficoml
and
pop
pop
cmp
and
aaa
inc
mov
dec
or
movsl
lods
popa
dec
inc
push
push
cmpsb
cmp
inc
cli
inc
xchg
add
sub
lods
or
dec
lret
pop
out
jb
jo
inc
aas
leave
inc
push
push
xchg
dec
mov
dec
aaa
sub
sub
ja
jecxz
negb
lods
pop
and
fcomi
dec
mov
xor
cmp
lods
outsl
and
ja
stc
inc
xor
mov
pop
sub
lods
dec
loope
mov
add
ja
sarl
lods
mov
or
mov
push
mov
filds
inc
out
cmp
inc
in
pop
enter
inc
pushf
int
cld
mov
scas
sub
push
lods
and
ds
mov
or
js
fiaddl
lods
arpl
pop
inc
lahf
push
es
inc
inc
adc
mov
mov
mov
nop
mov
push
rorl
and
jns
mov
enter
cmp
leave
xchg
lods
jb
or
mov
or
add
lods
push
dec
mov
daa
daa
jns
mov
cwtl
mov
cltd
push
mov
mov
mov
jo
add
rcrb
xchg
inc
fimuls
fwait
inc
xor
shlb
xchg
inc
and
sbb
jg
dec
inc
cli
add
push
lods
pop
mov
ss
inc
data16
adc
test
inc
lock
lods
dec
test
roll
loope
mov
lock
outsl
jb
mov
lods
mov
cmp
jg
repnz
loope
jae
or
enter
and
lods
jecxz
add
cwtl
xor
dec
aas
sbb
mov
xor
jo
inc
xchg
lods
int3
sbb
fadd
in
ss
and
movsb
int3
cmp
mov
add
xor
loop
dec
jns
xor
ljmp
cs
lock
add
repz
cmp
aad
jnp
jg
loopne
jae
jecxz
ja
imul
jns
xor
out
xor
jmp
xor
pop
push
jns
in
xchg
cmp
sub
sub
pop
jb
or
mov
pusha
lods
push
dec
fs
pop
and
dec
mov
in
inc
js
loopne
xchg
bound
nop
mov
inc
subb
mov
adc
sti
push
lods
xchg
dec
jno
ja
cld
lcall
ja
push
cmp
int3
xchg
movsb
dec
xchg
and
adc
aam
int
add
pop
lods
daa
inc
push
dec
xor
and
push
dec
pop
adc
add
repnz
inc
je
sub
cmpsl
arpl
pop
pushf
jb
pop
pop
js
and
pusha
or
add
pusha
in
add
stos
sti
sub
cmc
repnz
lods
sahf
dec
dec
vorps
fcoms
fwait
or
fbstp
dec
cmp
mov
andl
pop
clc
pop
lods
adc
push
jb
outsl
dec
xor
cld
inc
jge
ror
add
mov
xchg
sub
enter
mov
xchg
lods
mov
subl
mov
insb
dec
xor
je
mov
mov
xchg
jl
cmp
mov
popa
xorb
pop
pop
pop
lcall
loopne
or
or
lods
mov
mov
mov
mov
cmp
pop
cmp
sub
adc
mov
xor
or
cmp
lret
int
daa
and
and
leave
fstps
out
and
push
dec
cmp
es
movsb
sub
mov
add
daa
stos
add
jne
fwait
loop
dec
jae
push
cmp
and
and
stc
scas
cmp
sbb
push
xchg
out
movsb
or
inc
out
std
push
ljmp
mov
sbb
adc
xor
sub
push
sub
or
mov
ret
in
add
push
fists
and
sub
lds
rol
das
mov
test
adc
and
add
and
add
inc
xor
add
ss
sahf
divb
adc
frstor
or
cmp
adc
sub
sub
and
xor
sub
add
rcrl
inc
imul
mov
cmp
je
inc
in
out
insl
lcall
or
and
sub
addl
inc
rcrl
xor
inc
push
ss
sbb
fmull
and
adc
jg
cmp
mov
push
xor
add
insb
mov
pop
addr16
ja
lods
push
and
inc
jmp
lret
xor
fnstsw
cmp
sub
cs
sub
sub
pop
insl
mov
xor
int3
daa
xor
loopne
add
sub
inc
sub
mov
xlat
fimuls
sub
inc
shll
add
and
adc
or
sbbb
mov
jo
add
push
pusha
lock
mov
xor
sarl
push
out
cmpsl
inc
or
stos
sub
iret
and
es
pop
push
inc
or
loop
pop
xor
lcall
call
es
xor
mov
sbb
xadd
rcrl
movb
int3
and
bound
enter
test
into
rcrl
pop
inc
movl
faddl
sub
and
pop
adc
repnz
rorb
xor
cmp
test
sub
das
imul
push
mov
add
in
fwait
xor
js
inc
pop
xor
mov
aad
imul
pop
adc
mov
push
shr
lods
ret
cmp
push
imul
je
push
arpl
and
adc
add
xor
data16
cld
adc
and
push
inc
in
aam
pop
inc
in
xor
fxch
not
mov
fidivrs
push
cmpsb
sub
push
sub
jnp
inc
or
and
sub
and
sub
fwait
int
cltd
or
rclb
faddl
pop
daa
inc
inc
pop
sub
pushf
xchg
add
aaa
pop
sbb
inc
lods
int
jp
sbb
test
jmp
push
mov
mov
iret
loopne
lea
dec
cmp
jecxz
push
dec
mov
or
push
adc
icebp
into
lea
pop
xor
and
sahf
sti
ret
inc
sar
daa
mov
sbb
fildll
sub
xor
push
cmp
xor
aaa
test
jmp
addr16
faddl
mov
cs
cmp
xchg
aam
and
sbb
pop
pop
ret
add
daa
and
je
xchg
notb
adc
jns
and
push
sub
inc
imul
rolb
pop
pop
aam
daa
or
dec
mov
mov
xor
fldt
mov
imul
je
ljmp
mov
mov
dec
scas
ret
push
lret
aam
and
jne
cmp
xor
xchg
sbb
or
push
xor
test
push
scas
inc
test
insb
xchg
gs
fmuls
adc
fsubl
xor
xchg
inc
lods
ljmp
cmp
adc
xlat
xor
push
sbb
mov
loope
leave
ret
sub
cli
out
sub
lret
pop
aaa
sbb
sbb
jmp
jg
lods
adc
mov
lock
adc
out
mov
adc
aam
es
jbe
pusha
jo
ret
jecxz
add
iret
or
or
fsubs
and
add
das
loope
scas
stos
ja
test
or
popa
outsl
rcll
push
add
inc
loope
imul
fstl
pop
jae
movnti
ss
mov
les
pop
or
addb
xor
pop
or
dec
mov
cld
cli
sbb
sub
cmp
and
sub
dec
mov
inc
xchg
mov
inc
nop
sbb
cmpsb
pop
stos
cmp
fidivs
xchg
jecxz
sti
ret
fsts
xchg
inc
ss
aaa
cmp
stos
sub
shr
cli
dec
push
pop
jg
in
push
pusha
mov
xor
pop
add
popf
mov
xchg
cmp
inc
mov
loope
add
push
clc
jae
fistpll
outsb
ja
xor
pop
mov
mov
dec
add
adc
jo
push
xchg
and
push
cmpsl
mov
add
xor
into
dec
rclb
sbb
push
test
cltd
or
fildll
add
sbb
push
push
sub
or
mov
ja
xor
lret
lret
add
std
jo
lods
imul
out
imul
mov
shrb
rolb
xor
pop
insl
jp
test
sub
sbb
daa
fstpl
jo
pusha
aaa
and
daa
push
and
mov
clc
and
data16
pusha
mov
std
push
imul
xchg
lret
inc
insl
popa
add
sahf
es
add
mov
xchg
es
mov
mov
pop
pop
inc
or
and
cmp
sub
jns
loope
imul
orb
pop
bound
push
mov
and
and
movsb
les
mov
inc
mov
fistpl
out
inc
or
add
frstor
add
xor
andl
jbe
sub
lahf
adc
aas
sbb
mov
xor
test
mov
outsb
fisubrs
adc
lock
and
test
add
mull
jns
fldl
xchg
xor
add
adc
mov
adc
ret
or
daa
push
dec
loopne
test
fildll
pusha
out
sub
outsl
pop
out
push
mov
sub
rcrl
xor
fs
shll
daa
or
and
push
into
add
mov
adc
add
push
sub
cmp
jae
lret
dec
popa
sub
push
jge
add
and
xlat
stos
ljmp
lret
or
push
ja
sub
adc
ja
pop
xor
iret
outsl
aas
dec
pop
jnp
mov
aaa
lds
sbb
je
inc
pusha
jo
adc
stos
out
bound
leave
pushf
sahf
push
pusha
cwtl
or
jae
mov
lock
mov
push
pop
inc
and
and
js
aam
pop
mov
push
mov
mov
jbe
pop
sub
pop
pop
push
add
dec
dec
in
subl
arpl
sbb
cmp
mov
cmp
or
mov
inc
pop
shll
or
cmp
out
inc
dec
mov
and
cs
inc
adc
and
jno
call
push
aad
or
dec
push
js
stos
jns
xor
js
cwtl
jno
xlat
add
add
or
shlb
push
out
pop
sub
xchg
call
aaa
xor
add
das
xor
xchg
cmp
mov
les
sti
xchg
add
daa
dec
xor
mov
mov
pop
xchg
and
sbb
insb
add
and
and
rcrb
xchg
pop
xchg
inc
add
cmp
and
pop
pop
or
or
xor
dec
insb
pop
fwait
and
cmp
jp
mov
out
movsl
adc
ret
push
clc
mov
sub
inc
inc
jmp
pop
jge
jl
dec
mov
cmp
pop
scas
and
pop
push
in
xor
or
sub
fldl
test
movsl
cmpsb
cmp
inc
bound
xchg
xor
in
push
sbb
inc
or
lcall
xchg
xchg
xlat
mov
inc
xor
or
push
bound
out
aaa
loope
ret
and
aaa
push
test
jnp
push
adc
dec
or
in
cs
add
adc
and
add
pop
xor
jmp
call
jne
xchg
pop
sbb
cmp
aam
movsl
pop
adc
dec
or
bound
fs
rorb
or
mov
or
into
iret
dec
dec
pop
inc
movsl
sub
push
sub
imul
loop
and
ficompl
adc
decl
ja
xor
call
xor
sbb
loopne
inc
lods
adc
or
and
add
pop
xor
enter
mov
push
add
aas
aad
ja
fdivl
add
loopne
ss
pop
push
cmp
dec
sbb
iret
jnp
and
cmpsl
and
addr16
ret
lea
aam
or
fnstcw
pop
or
or
or
imul
sbb
sub
and
add
or
mov
xor
addr16
or
clc
or
lock
outsb
inc
or
pop
add
iret
pop
loope
idivb
push
or
push
and
cmpsb
adc
pop
addb
ret
arpl
or
or
sbb
sahf
pop
and
add
xchg
adc
jbe
and
inc
lcall
mov
push
and
xor
pop
sub
push
stos
jo
adc
mov
inc
fsubr
mov
sbb
sbb
pop
inc
cmp
mov
and
cmpsb
addb
fisubrs
push
mov
mov
xor
xchg
push
push
xchg
jbe
adc
push
or
jne
jbe
dec
jo
loopnew
xor
push
int3
push
add
xchg
fld
hlt
push
add
jmp
inc
arpl
imulb
sub
sahf
int3
add
sbb
outsl
cmp
mov
jns
mov
and
adc
xor
or
cmp
xchg
xor
divb
shrb
rcll
sahf
pop
cmpsb
mov
mov
pop
cmpb
mov
pop
cltd
push
push
inc
out
out
and
xor
fiaddl
lods
mov
movsb
insb
pusha
lcall
sbb
stos
aad
orl
xor
cmp
push
pop
sbb
adc
add
xor
sbb
xor
push
xor
imul
out
mov
dec
aaa
cmpsl
xlat
jo
lock
aaa
negb
data16
xchg
and
add
and
jp
in
jmp
imul
pop
ror
jmp
inc
jb
sbb
add
flds
add
push
sub
lea
xchg
or
dec
pushf
xor
cli
push
add
cmp
push
inc
add
jbe
das
outsl
sub
cmpb
cmpsb
jns
scas
shrb
mov
ss
rcr
es
mov
or
push
or
adc
add
decl
or
adc
and
mov
cmp
mov
aam
and
add
sub
in
adc
pop
mov
xlat
popa
add
jo
out
fistl
sbb
mov
pop
sub
aaa
es
loope
dec
or
sub
inc
xor
sbb
or
pop
mov
push
in
int3
add
jns
adc
mov
adc
enter
xchg
stos
nop
daa
in
inc
enter
dec
enter
push
mov
inc
pop
enter
and
scas
dec
and
pop
jb
pop
rcrb
nop
daa
das
testb
mov
es
dec
and
stc
inc
cs
mov
dec
enter
or
test
lods
insl
das
in
es
or
nop
pop
and
add
lds
scas
aas
cmp
rcll
or
mov
jmp
cltd
add
mov
leave
mov
push
pop
add
cwtl
outsl
leave
or
and
addr16
fiaddl
push
inc
push
movsl
iret
repz
add
movsl
popf
cmp
repz
stc
cmc
in
repz
repz
int
xor
and
push
push
or
mov
dec
movsb
add
push
add
into
sbb
xorl
pushl
jae
jae
jae
jae
jae
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
pushl
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
aas
mov
test
jb
jge
jge
jge
lcall
popa
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
fnstcw
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
mov
dec
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
lcall
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
loop
lcall
jl
jl
jl
jg
jg
jg
jg
mov
jno
add
jg
jg
lcall
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
lcall
jg
jg
jg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
lcall
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
lcall
jle
jle
jle
jns
jns
jns
jns
jns
jns
jns
add
jns
call
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
call
jns
jns
jns
jns
js
js
js
js
js
js
js
js
js
js
adc
adc
js
js
js
js
js
js
call
js
js
js
js
js
js
js
js
js
js
js
js
js
js
jnp
jnp
call
pop
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
call
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jp
jp
call
pop
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
call
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
dec
or
aam
enter
adc
xchg
jbe
jbe
idiv
dec
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
add
shll
dec
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
adc
cmpl
jnp
jnp
push
mov
jp
lret
aas
cmp
jp
jp
jp
jp
jp
repnz
cld
mov
jne
je
pop
je
je
je
je
je
je
jg
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
loopne
call
ja
jbe
jbe
jbe
jbe
jbe
jbe
ss
jno
jno
jno
jmp
jno
jno
jno
jno
jno
jno
jo
jo
jo
jo
jo
jo
jo
jo
jo
jb
pushl
cmpsb
jg
jns
jns
jns
jns
jns
jns
jns
jns
jns
jnp
jnp
jp
jg
adc
pop
xchg
je
je
lock
jmp
shll
stc
je
ja
ja
fidivs
sbb
cmpsl
jbe
push
sar
aaa
dec
jno
jo
jo
jo
jo
jo
jae
inc
jg
insb
jl
mov
pop
jg
jg
jg
jg
jg
jg
jg
jg
pop
std
jg
jg
jg
jg
jle
jle
jle
jle
jle
jle
jle
add
or
jle
inc
push
clc
decl
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
lret
push
js
imul
es
js
js
adc
js
nopl
ja
push
fwait
ja
jbe
jbe
jbe
std
xchg
cmp
ljmp
jno
sub
jae
jb
jb
lcall
pop
mov
fistpll
jge
xchg
jge
jl
jl
decl
jl
jl
jl
jl
jl
jl
jg
jg
mov
jle
jle
jle
jle
jle
jle
jle
jns
jns
jns
jns
jns
jns
jns
jns
js
js
js
jnp
jnp
mov
pop
rclb
jp
jp
jp
stos
mov
jp
gs
movsl
adc
xchg
pop
inc
jae
or
jne
pushl
jne
jne
jne
jne
jne
je
je
je
je
je
je
je
je
je
ja
cld
jg
ja
ja
lret
ja,pn
ja
ja
ja
ja
ja
ja
ja
out
cwtl
loopne
loop
jbe
jbe
jbe
sub
jbe
jbe
outsl
jp
lds
push
mov
jno
jno
fdivl
jno
cld
call
loop
jno
jno
jo
jo
jo
jo
jo
jo
jo
jo
jo
lcall
lock
jo
jo
jae
jae
jae
jae
jae
jae
jb
jb
jb
jb
adc
hlt
jb
jb
jge
jge
jge
jge
mov
icebp
jl
jl
jl
jl
jl
jl
lcall
jb
or
pop
decl
and
jg
jg
jg
jg
jg
lret
jle
xchg
cli
ljmp
jns
jns
jns
jns
js
js
js
js
js
cli
push
out
mov
jne
push
mov
jnp
jp
jp
lcall
jns
in
jne
jne
je
je
jb
jge
jle
jle
lcall
pop
cmc
in
insl
jne
jne
jne
jne
jne
call
jne
jne
jne
jne
jne
je
je
je
je
je
je
je
je
je
je
je
mov
mov
mov
xchg
ja
pop
cmpsl
scas
push
push
insl
pop
hlt
jbe
sbb
insb
jno
jno
icebp
ljmp
jno
jo
jo
jo
jae
jae
jb
jb
jb
jb
jg
rcrl
and
repz
push
mov
jge
jge
jge
jl
jmp
mov
mov
dec
jns
jns
jns
loop
add
clc
mov
push
js
out
enter
scas
jle
mov
imul
ja
jmp
jbe
push
jmp
jb
jb
jl
jl
jg
xchg
jecxz
enter
or
jns
jns
dec
addr16
cmpl
in
es
jae
jae
sbb
mov
adc
jb
jge
jge
jge
jg
jg
jg
rcll
jg
jle
jle
jle
jp
jle
pop
push
stos
outsb
jmp
jle
jle
jle
mov
push
xor
test
jns
adc
xor
test
fbstp
jns
js
push
and
mov
js
js
js
js
jnp
jnp
jnp
jnp
jnp
jnp
orb
aaa
sbb
jp
pop
mov
repz
push
stc
outsl
jne
jle
je
je
je
ja
ja
ja
cmp
ret
cmpsb
dec
or
jg
jp
or
adc
jno
jno
jno
jno
cli
jo
pop
lock
pushl
jo
jae
jae
jae
jae
jae
jae
jae
jae
xchg
jb
jb
popf
lock
adc
xchg
out
mov
inc
mov
js
outsl
ret
scas
push
jge
jge
jge
cli
scas
dec
clc
cli
clc
fimull
outsb
imul
or
jl
jl
jl
jl
andb
sbb
xor
popf
xor
ret
jns
js
js
lock
add
or
xchg
out
pusha
jnp
jmp
sub
sbb
call
sub
push
jne
je
je
je
je
ja
jno
jno
jo
filds
test
mov
jg
jg
xor
lock
jg
jg
jle
jle
jle
jle
fidivrl
mov
jns
jns
jns
jns
vmread
js
js
js
or
cld
jnp
jnp
jp
jp
jp
jp
jp
addr16
incl
dec
pusha
outsb
inc
jne
jne
jne
jne
jne
jne
jne
ljmp
je
je
cs
jle
emms
adc
jbe
ljmp
jbe
jno
pop
push
jno
jno
jo
jo
jo
jae
pop
mov
adc
jae,pn
jae
jb
push
aaa
jb
jb
mov
add
xlat
push
jecxz
pop
mov
adcl
inc
jge
push
mov
jge
jge
jge
jle
das
mov
jns
jns
jns
jns
jns
jmp
jns
js
js
js
lahf
cmpsb
sarl
gs
addr16
jne
jne
jne
insb
and
lahf
mov
ja
ja
sbb
jno
jo
jae
jae
jae
jae
jp
popa
decl
jae
jae
jae
jae
jae
jae
jae
xor
les
lcall
jb
jl
sbb
jb
jge
ficompl
pop
jl
jl
mov
decb
push
adc
bound
sub
jg
fisubrs
jns
jns
jns
sbbb
js
add
adc
jnp
jnp
jnp
jnp
jp
jp
sbb
or
mov
incl
dec
lcall
stos
jmp
inc
or
inc
je
je
cli
mov
je
je
je
je
jbe
je
je
ja
ja
mov
ljmp
xor
ljmp
std
fiadds
push
loop
fwait
jo
jae
jb
jb
jge
sahf
and
lret
sub
inc
add
push
js
pop
loop
adc
fdivrs
js
js
js
push
mov
mov
or
inc
mov
jbe
jbe
mov
cli
mov
xchg
icebp
jb
jb
call
sarb
jg
mov
push
adc
push
dec
jns
cmpb
loope
cmp
je
je
cmp
call
ja
ja
ja
ja
jbe
jbe
jbe
jbe
jbe
fnstcw
xor
jno
jno
or
jo
jo
jo
push
popf
jo
jg
dec
jb
jb
jb
jb
sbb
cld
pop
mov
pop
jg
jg
jg
jg
and
lock
jg
jle
adc
mov
test
xchg
jbe
push
add
aad
mov
jns
js
js
cli
pop
jl
jnp
jnp
jnp
jnp
jp
jp
jp
jp
jp
jp
out
hlt
jp
pop
cmp
outsb
xchg
jne
jne
incl
lds
jne
jne
jne
jne
jne
jne
je
je
je
movhps
das
je
je
xchg
je
cmpsb
mov
incl
pop
mov
jns
and
sub
out
ja
ja
ja
lcall
mov
mov
jbe
jbe
jbe
jbe
jbe
dec
mov
scas
add
sbb
jbe
jno
jno
jb
ljmp
jo
sar
fistpl
outsb
jae
push
jae
jae
jae
jae
add
jae
push
sbb
jae
jae
jae
jae
cmp
ret
jb
jb
jb
jb
jb
es
mov
jge
rcl
push
cmp
jge
mov
test
xchg
jg
pop
jl
lcall
mov
test
sarl
mov
jg
les
sub
push
mov
jg
jg
jg
inc
clc
ja
jg
jg
jg
push
jle
jle
jle
jle
stos
cld
test
jle
mov
inc
scas
fbld
jle
out
inc
jns
jns
jns
jns
jns
jns
jecxz
push
jns
mov
add
int3
push
jns
jns
xchg
rcll
pop
orl
jns
jns
cmpb
mov
sbbb
js
mov
call
xchg
push
lcall
push
jnp
data16
dec
fstpt
jnp
jnp
jnp
jnp
iret
inc
jae
push
jp
into
jle
repnz
adc
jp
jp
jp
jp
mov
decl
imul
jne
or
push
insb
xor
adc
jbe
jbe
jbe
jbe
jno
std
jo
mov
add
cmpsb
cwtl
jae
jg
incb
insw
jb
jb
jb
push
sbb
jb
jg
outsb
shlb
dec
fnsave
inc
clc
jb
jb
jb
ret
lock
jge
dec
push
scas
jl
jg
and
fbld
jle
jle
push
inc
add
fdivl
mov
mov
mov
cld
dec
scas
inc
push
js
js
sbb
js
js
push
xor
mov
inc
jnp
add
sarl
dec
in
push
rorl
push
or
idiv
lahf
in
lods
fimull
push
jne
jne
jbe
jae
add
jecxz
nop
jae
jb
sub
push
mov
jg
jg
jg
jle
ljmp
jmp
jp
jp
jg
mov
pop
jne
jne
jne
jne
jne
je
je
ja
ja
ja
call
push
aaa
cs
ja
ja
ja
ja
ja
ja
ja
ja
ret
std
ja
ja
ja
data16
imull
pushl
ja
out
outsb
xorl
xchg
ja
ja
xchg
push
mov
mov
ret
inc
jbe
jbe
jbe
jbe
mov
arpl
imul
xchg
jnp
pop
jbe
rolb
jbe
jbe
negb
jbe
jbe
jbe
jo
jo
jae
adc
sub
jae
jae
jb
adcb
stos
out
inc
xchg
out
push
jge
jge
jge
jge
jl
jl
jg
jle
jle
adc
add
adc
stos
push
mov
jp
aas
in
push
jne
push
push
pushl
jne
jne
jne
jne
jne
mov
adc
or
cmp
jbe
lock
lcall
cli
pop
jno
jno
jno
jno
jno
fisubs
dec
faddl
mov
cmp
loop
out
ljmp
jo
sub
jo
jo
jo
jo
jo
jo
jo
jo
fisttps
int3
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
out
les
lcall
pushf
incl
sbb
cmpsb
jo
jo
jo
mov
inc
jae
jae
ljmp
cmpsb
popa
jae
jae
mov
pop
cmp
jae
jae
mov
jae
jae
jae
ja
inc
cmp
cmp
int
enter
fldenv
in
out
push
lock
jae
stos
hlt
rcrl
mov
jae
jae
bound
jae
push
xor
dec
inc
jb
loop
xchg
mov
jb
jb
jb
push
pop
jb
jb
jb
adc
sub
sub
out
rcrb
jb
mov
sahf
xchg
and
add
in
jge
jl
and
mov
jge
jge
jb
jg
movsl
jne
ja
jns
jns
jp
jp
testl
jae
jb
incb
jge
jge
jge
out
fbld
jg
jg
jle
jns
jns
jns
xchg
xchg
scas
ret
dec
je
sub
jb
jp
push
ljmp
or
ja
ja
dec
mov
bound
ja
ja
ja
push
call
ror
ja
ja
cmpsb
fidivl
push
call
ja
ja
ja
ja
movb
pushl
ja
ja
ja
ja
ja
mulb
jg
ja
ja
ja
inc
jbe
jbe
jbe
jbe
jbe
jbe
jbe
ja
lcall
data16
jbe
jbe
jbe
jle
jp
push
xchg
test
outsl
push
push
jbe
jbe
xchg
jbe
add
mov
jbe
mov
mov
mov
mov
dec
jno
jno
mov
pop
jno
push
mov
outsb
jno
jno
cwtl
jno
push
jecxz
fwait
icebp
jb
adcb
adc
jno
jno
jno
jno
clc
and
jp
jno
jno
ror
jno
mov
jge
mov
mov
insl
loopne
test
ds
stos
js
rolb
jnp
movsl
mov
rcl
xchg
or
ret
xchg
pop
push
jns
js
js
js
sub
js
dec
pop
cli
mov
js
jnp
push
jbe
add
push
ljmp
dec
mov
data16
das
mov
pushl
pop
insb
and
jne
fidivl
mov
ja
dec
call
rsm
mov
mov
jbe
jbe
jbe
rolb
loope,pn
cwtl
jbe
out
bound
out
cmp
mov
mov
push
jo
jo
jo
pushl
sbb
jns
add
jge,pt
sub
mov
idivl
ss
jp
sbb
mov
or
adc
jg
or
mov
jno
jo
jo
call
cs
cltd
push
mov
jl
jl
jle
add
mov
xchg
mov
js
incb
mov
mov
mov
jne
es
jecxz
ljmp
jne
test
jo
nop
cmp
add
pop
subl
jns
js
repnz
jp
or
and
data16
adc
aam
je
je
jae
jl
jl
bound
inc
dec
adc
dec
ss
jne
out
xor
jle
out
aam
test
xchg
es
sarb
lcall
or
mov
pop
jp
jp
jp
jp
jp
incl
jne
jl
sub
jne
jne
jne
xchg
mov
lret
je
je
je
or
test
pushl
jbe
jbe
jbe
cmpsb
xchg
out
mov
ljmp
mov
pop
jno
shlb
cmp
pop
jg
push
sbb
sub
inc
les
nop
mov
mov
inc
pushl
outsb
dec
jae
push
lahf
jae
jae
jae
daa
sub
ficoms
push
mov
shll
dec
jl
jl
jle
jl
pop
lea
sub
jg
push
clc
jle
jle
xor
push
jns
or
jns
jns
jns
push
dec
inc
orl
mov
lea
push
es
cs
mov
jp
aam
dec
add
jne
jne
jne
scas
adc
movsl
cli
stos
push
test
ja
mov
jo
lea
jo
jb
jb
cmpsb
sub
adc
mov
jge
mov
and
add
jge
dec
ret
call
rol
ljmp
jl
fildl
fbstp
xor
sbb
mov
dec
cmpsb
cmpsl
jle
cmp
mov
jl
adc
aas
lret
or
xchg
ss
test
xchg
je
je
ja
ja
andb
xchg
jbe
jno
jno
jno
or
xchg
cmpsb
push
jo
jo
adc
lock
jns
jns
jns
test
lahf
jns
js
jb
jnp
ret
hlt
int
loop
xor
idivb
push
push
ljmp
dec
jne
jne
sbbl
cmp
jl
sub
sbb
loop
roll
rcr
cli
jae
jb
jb
cs
out
jb
jb
jb
push
pusha
push
mov
push
mov
jge
jge
mov
jl
jl,pn
adc
mov
cmp
pop
xor
jle
jbe
dec
mov
mov
fbstp
les
popa
jne
jne
and
jne
adc
pop
pop
pop
loope
icebp
ljmp
inc
je
aam
inc
xchg
nop
add
and
shll
cli
dec
or
mov
ja
ja
decl
and
ja
ja
ja
ja
pop
inc
xchg
rclb
or
ljmp
and
push
rcll
jg
icebp
jbe
xchg
push
ret
push
inc
bound
pop
jno
cs
subb
jno
jno
and
lcall
mov
adc
outsb
and
add
and
jo
cmp
xor
mov
lcall
add
arpl
dec
lret
divb
inc
cmp
nop
dec
je
test
jmp
push
cmp
int
or
push
jmp
push
jnp
push
pop
ljmp
sub
and
and
pop
jmp
mov
jmp
pushf
xchg
fwait
push
pushf
bound
shr
pop
jno
push
xchg
arpl
push
cltd
jmp
fsubr
iret
scas
pop
aad
sahf
push
int3
outsl
mov
fmuls
movsb
hlt
movsb
jne
js
cmpsb
insb
sub
or
call
sahf
loop
loopne
mov
inc
negl
add
popf
scas
add
cmp
and
dec
addr16
mov
xchg
call
aaa
test
mov
fisubl
xor
jmp
mov
dec
xchg
push
lcall
dec
mov
inc
in
sub
adc
scas
dec
cmpl
lds
or
fwait
lahf
mov
inc
and
xchg
nop
shl
in
inc
movsl
adc
mov
js
movsb
adc
xchg
mov
and
cmc
pop
pop
int3
sbb
outsb
dec
int3
dec
jg
inc
cld
add
pop
arpl
pop
push
ljmp
inc
aam
ljmp
cmp
sbb
sahf
inc
mov
lret
test
jmp
or
dec
mov
dec
mov
jg
and
cmp
lods
ret
and
and
jle
jmp
mov
jecxz
jmp
iret
cmp
push
cmp
mov
dec
das
sbb
enter
xchg
in
inc
mov
jg
pushl
je
dec
sub
ficompl
lds
repnz
ds
aaa
cmp
call
sbb
mov
adc
add
push
xchg
cmp
push
sub
mov
and
insl
sub
push
rol
call
in
jae
orl
push
dec
in
sub
or
mov
inc
xlat
mov
mull
inc
push
push
inc
add
sub
lcall
mov
lods
xchg
push
jge
xchg
xchg
xchg
xorl
cld
xchg
repz
shll
xchg
aam
lret
adc
push
push
fstps
fnstenv
idiv
xchg
jge
push
xor
sbb
pop
jns
into
push
pushf
shlb
mov
in
sub
dec
push
nop
lock
cmp
push
repz
push
push
push
xchg
call
icebp
stc
scas
lock
mov
push
movsb
std
movsl
in
shll
push
pop
push
mov
xlat
std
or
idiv
push
push
icebp
in
push
shlb
data16
out
mov
icebp
icebp
repz
out
cmc
aam
mov
repz
in
ds
les
imulb
ret
rol
ret
cltd
push
pop
rclb
cli
stc
cli
hlt
leave
mov
pop
lock
int
loope
repz
jle
pop
push
adc
adc
pushf
sarl
std
std
loop
cmc
in
loope
dec
test
iret
into
xchg
push
lcall
incl
in
or
stc
stc
sar
in
ret
lcall
adcb
push
adc
adc
xchg
mov
loope
ss
sti
ffreep
in
idiv
fdiv
aam
rcl
jp
adc
std
in
jns
jmp
stc
call
sti
loope
cli
shrl
push
jo
mov
xchg
jnp
into
lock
cs
jo
pop
negb
loop
cli
sbb
cli
out
xchg
loope
clc
add
inc
roll
adc
hlt
xchg
js
push
into
insb
push
lods
loop
incl
xchg
pushl
xchg
imul
add
xchg
push
jmp
aad
cltd
ret
sbb
sahf
lret
adc
xchg
push
xchg
arpl
xchg
push
pusha
xchg
das
xchg
movsl
xchg
xchg
sub
icebp
push
jns
fdivrl
mov
adc
adc
adc
xchg
das
clc
fstpt
inc
xchg
fisubrl
popf
imul
jecxz
cld
stos
int3
sti
incl
mov
fcmovb
insl
sub
pop
fisubs
pop
mov
and
loop
mov
fidivl
sbb
inc
mov
xor
push
sti
decl
inc
mov
xchg
adc
sahf
sbb
clc
pushl
mov
popa
mov
cs
cmp
push
rclb
in
call
mov
rcrl
jbe
sbb
mov
xchg
fldt
pop
mov
rcll
insl
xor
push
aad
cltd
and
incl
pop
jnp
lahf
int3
fdivrs
jge
adc
add
pop
sahf
xchg
inc
lods
flds
pushl
push
call
or
loopne
sbb
imul
push
xchg
into
and
push
xor
loop
xchg
fistps
loope
xchg
fisubrs
lock
popf
pop
and
lcall
sbb
ja
sbb
xchg
xchg
pop
jecxz
lcall
popf
lcall
fnstsw
xchg
orl
pop
or
xchg
jle
sbb
loopne
cld
and
push
add
sub
std
decl
aad
mov
lds
lods
shlb
shlb
mov
sub
dec
sbb
divb
sbb
mov
lods
movsl
loope
xchg
jle
push
or
jg
adc
push
push
test
data16
push
das
loope
push
movsl
test
fcoms
out
pop
loopne
push
fiadds
sub
aaa
or
sub
lods
lcall
fidivrs
add
loope
adc
loope
popa
ja
and
jle
fbld
cmc
or
xchg
rcl
adc
sbb
pop
rolb
vmaxsd
pop
rclb
xor
push
ret
jle
icebp
pop
nop
movsl
push
aam
mov
push
int
pop
enter
lea
les
sar
jg
movsl
xchg
push
adc
adc
push
sbb
xchg
ljmp
ljmp
push
call
ret
int3
data16
test
mov
call
nop
cli
shrb
push
dec
decl
inc
push
ret
inc
rcrb
incl
xchg
inc
and
push
cmp
push
push
rcrb
call
jne
movsl
ret
cmp
jae
pushf
mov
inc
jle,pt
cmp
outsb
mov
fistl
push
push
in
push
push
icebp
pusha
push
push
sti
xorb
aaa
fisubrs
push
sub
xchg
push
mov
push
out
popa
lret
lret
push
cltd
mov
push
pop
aam
incl
xchg
push
fsubs
imul
sub
imul
fistpll
lcall
push
pop
push
sbb
pop
add
mov
add
sub
mov
mov
jmp
dec
push
jne
jns
jp
xor
xor
dec
xor
jg
pop
arpl
inc
inc
inc
push
jo
push
outsb
or
incl
jo
outsb
dec
imul
outsl
inc
pop
dec
fdivrl
pop
jbe
dec
inc
js
push
push
xchg
xor
je
dec
lcall
push
add
inc
imul
pop
jbe
js
dec
jb
inc
xor
dec
filds
dec
pop
xor
add
dec
sbb
notb
outsl
xor
push
xor
mov
inc
xor
push
push
xor
inc
aaa
imul
push
mov
loopne
cmpsb
push
outsl
inc
jno
push
insb
cmp
imul
inc
dec
or
decl
sbb
xor
imul
pop
push
imul
pop
inc
jp
fs
dec
push
add
dec
xor
imul
pop
pop
push
inc
dec
jbe
inc
gs
aaa
clc
add
pop
pop
dec
pop
loopne
outsl
xor
cld
pop
sarb
cmp
xor
sbb
dec
jl
arpl
jp
push
dec
dec
bound
test
xor
dec
ja
sbb
push
adc
push
les
xchg
shll
mov
imul
dec
add
push
inc
jae
js
dec
jb
imul
push
pop
imul
outsl
mov
enter
xchg
rcrb
in
rorb
push
jo
xor
sbb
mov
xor
dec
xor
jae
xor
mov
insb
dec
inc
push
push
add
aaa
dec
jo
ljmp
in
mov
inc
push
imul
nop
inc
outsb
push
ss
gs
or
outsl
testb
xor
dec
cmp
dec
push
gs
jb
jne
insb
dec
cld
mov
sbb
les
data16
inc
dec
pop
imul
cmp
in
jne
jae
jb
jo
add
pop
ds
outsl
mov
enter
cmp
andb
jo
jbe
push
lds
js
out
insl
push
ja
cmp
add
push
inc
inc
inc
fiadds
jb
ja
cmp
icebp
or
dec
push
out
pusha
outsb
cmp
bound
testb
jne
dec
xor
pop
sbb
dec
scas
das
jo
insl
inc
sub
push
inc
push
push
mov
aaa
push
push
inc
dec
dec
lock
add
dec
push
pop
push
insb
jne
outsl
push
pop
imul
gs
ret
jno
jbe
mov
lock
divb
push
outsb
push
andl
xor
mov
inc
inc
inc
popa
xor
push
fcoml
in
mov
lods
mov
mov
dec
insb
inc
push
push
push
jns
inc
jo
subb
dec
jno
jbe
push
inc
movsb
inc
aaa
jbe
xchg
fdivrl
dec
gs
cs
lret
rorl
mov
js
fldt
mov
push
xor
ss
dec
xor
andb
icebp
xchg
push
inc
push
add
push
cmp
in
push
add
inc
jp
insb
push
jbe
adc
outsb
mov
xor
dec
sbb
ss
popa
push
mov
jl
cmp
jle
dec
dec
shlb
push
jbe
push
jle
lods
inc
fs
inc
dec
xor
mov
cmp
inc
and
fsubrs
insb
jns
fildl
gs
orb
xor
mov
ljmp
inc
ret
push
jbe
push
outsb
add
shlb
jno
xor
jo
hlt
xor
gs
clc
insb
pop
dec
push
dec
dec
and
mov
idivb
lcall
dec
aaa
pop
arpl
cmp
imul
push
push
push
dec
mov
push
push
dec
push
outsl
mov
jle
dec
and
xlat
adc
stos
addb
and
and
inc
add
push
xor
inc
push
add
pop
subl
push
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
addb
sbb
addb
inc
addb
inc
adc
xor
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
adc
pop
pusha
jg
ljmp
or
add
dec
outsl
popa
fs
imul
js
push
gs
gs
jae
std
idivb
dec
jne
gs
push
popa
imul
addr16
bound
arpl
mov
gs
sbb
gs
jb
jg
jge
gs
jns
mov
imul
outsl
arpl
sar
inc
fs
jae
cmp
jb
jne
insb
inc
je
in
es
dec
jae
cmp
jne
gs
push
je
and
jb
inc
and
lock
push
jmp
jb
and
popf
scas
pop
xchg
inc
imul
mov
push
insl
pop
or
inc
jb
aad
cltd
js
xchg
inc
pop
cmpsb
cmp
mov
ss
or
xor
outsb
push
or
loope
and
dec
outsb
fs
mov
jo
aaa
inc
gs
and
je
mov
xor
imul
mov
mov
neg
fnstenv
inc
jb
jae
and
sti
sbb
jne
dec
je
adc
xchg
add
push
dec
add
cmp
insl
sti
mul
popl
or
sub
or
scas
push
add
lcall
add
add
in
fisttpl
add
paddusb
fimull
push
dec
adc
pop
inc
rolb
adc
je
mov
mov
fstpt
jb
les
add
rorb
pxor
cmpsb
dec
inc
cs
xorb
in
shrl
or
dec
imul
adc
in
dec
inc
pop
push
outsb
test
jb
push
daa
add
pusha
test
fidivrs
ds
xchg
and
add
sbb
add
test
incl
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
orb
add
push
add
add
add
add
add
add
add
add
add
dec
add
addb
addb
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
adc
add
add
add
add
add
add
add
add
rolb
add
clc
add
addb
add
and
add
add
add
add
add
add
add
add
add
call
popa
sbb
clc
add
add
add
add
add
add
add
add
adc
add
pusha
sbb
clc
add
add
add
add
add
add
add
add
cmp
add
pop
insl
sbb
clc
add
add
add
add
add
add
add
add
add
add
add
sbb
clc
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
xor
xor
xor
xor
xor
xor
xor
bound
xor
add
jbe
das
add
add
outsl
add
insl
add
outsb
add
add
add
outsl
add
and
popa
add
add
je
imul
popa
add
add
add
add
insb
add
sub
and
jbe
imul
je
and
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
insb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jp
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
and
dec
add
jae
je
popa
add
add
jb
and
inc
add
jo
jns
jb
imul
je
and
xor
xor
xor
aaa
add
add
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
and
imul
popa
add
add
add
imul
add
add
add
add
add
insl
add
jb
imul
add
data16
add
popa
add
add
add
add
popa
add
sub
and
dec
add
add
add
add
add
daa
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jb
add
outsl
add
push
add
jb
je
popa
add
insb
add
pop
add
add
add
add
add
add
add
inc
add
add
imul
add
popa
add
add
js
add
add
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
inc
add
jo
dec
add
add
add
imul
data16
js
push
add
jb
je
popa
add
insb
add
add
dec
add
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
inc
add
jb
insl
add
je
push
add
jb
jae
imul
add
add
xor
add
add
add
or
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
dec
add
jae
je
popa
add
add
jb
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
pop
daa
sbb
clc
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
xor
xor
xor
xor
xor
xor
xor
bound
xor
add
jbe
das
add
add
outsl
add
insl
add
outsb
add
add
add
outsl
add
and
popa
add
add
je
imul
popa
add
add
add
add
insb
add
sub
and
jbe
imul
je
and
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
insb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jp
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
and
dec
add
jae
je
popa
add
add
jb
and
inc
add
jo
jns
jb
imul
je
and
xor
xor
xor
aaa
add
add
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
and
imul
popa
add
add
add
imul
add
add
add
add
add
insl
add
jb
imul
add
data16
add
popa
add
add
add
add
popa
add
sub
and
dec
add
add
add
add
add
daa
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jb
add
outsl
add
push
add
jb
je
popa
add
insb
add
pop
add
add
add
add
add
add
add
inc
add
add
imul
add
popa
add
add
js
add
add
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
inc
add
jo
dec
add
add
add
imul
data16
js
push
add
jb
je
popa
add
insb
add
add
dec
add
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
inc
add
jb
insl
add
je
push
add
jb
jae
imul
add
add
xor
add
add
add
or
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
dec
add
jae
je
popa
add
add
jb
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
push
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
xor
xor
xor
xor
xor
xor
xor
bound
xor
add
jbe
das
add
add
outsl
add
insl
add
outsb
add
add
add
outsl
add
and
popa
add
add
je
imul
popa
add
add
add
add
insb
add
sub
and
jbe
imul
je
and
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
insb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jp
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
and
dec
add
jae
je
popa
add
add
jb
and
inc
add
jo
jns
jb
imul
je
and
xor
xor
xor
aaa
add
add
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
and
imul
popa
add
add
add
imul
add
add
add
add
add
insl
add
jb
imul
add
data16
add
popa
add
add
add
add
popa
add
sub
and
dec
add
add
add
add
add
daa
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jb
add
outsl
add
push
add
jb
je
popa
add
insb
add
pop
add
add
add
add
add
add
add
inc
add
add
imul
add
popa
add
add
js
add
add
add
add
add
outsl
add
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
inc
add
jo
dec
add
add
add
imul
data16
js
push
add
jb
je
popa
add
insb
add
add
dec
add
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
inc
add
jb
insl
add
je
push
add
jb
jae
imul
add
add
xor
add
add
add
or
add
push
add
jb
je
popa
add
insb
add
inc
add
jo
jae
add
outsl
add
dec
add
jae
je
popa
add
add
jb
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
imul
data16
js
sub
and
push
add
jb
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
sbb
nop
jae
add
jae
add
add
jae
add
jae
add
jae
add
jae
add
je
add
je
add
add
add
je
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
bound
arpl
