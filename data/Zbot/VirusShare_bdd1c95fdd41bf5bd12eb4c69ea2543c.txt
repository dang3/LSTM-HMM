pushl
pop
shrl
faddl
sbb
and
push
cltd
outsb
sbb
mov
dec
int3
jns
cmpsb
jnp
add
mov
std
ja
dec
insl
insl
jle
aad
fldenv
iret
aaa
fadds
pop
decl
lahf
xor
mov
add
fbstp
cmp
dec
push
hlt
insl
test
adc
push
lcall
out
pop
popa
pop
add
fwait
out
lret
mov
push
xchg
sti
call
cwtl
ljmp
daa
pop
es
xor
or
lahf
rclb
not
shl
nop
lock
clc
cld
call
je
or
xchg
jp
shlb
ret
sahf
enter
movsb
push
sub
stos
lods
sub
call
dec
das
jle
cltd
mov
jg
ret
lods
or
and
mov
decl
ljmp
iret
lock
push
or
popa
nop
or
hlt
lcall
and
inc
rorl
jmp
test
scas
jns
xor
jmp
int
and
data16
jp
mov
call
pop
cmc
sub
jne
mov
daa
les
stc
sarl
sbb
dec
lcall
jmp
movb
icebp
cmp
addr16
clc
add
stos
js
in
stos
ja
sbb
jmp
pushf
arpl
je
cs
int
jl
dec
popf
cmp
out
repnz
inc
jb
jp
push
dec
or
decl
ljmp
push
mov
push
movsl
or
cmp
adc
lret
clc
dec
ljmp
add
adc
daa
mov
jl
ret
xchg
rorb
xor
ljmp
mov
push
inc
nop
aaa
jns
xchg
jo
cli
std
das
cmc
daa
daa
cld
push
dec
jle
lahf
mov
lcall
inc
push
pop
das
adc
mov
clc
nop
pop
and
jns
xchg
dec
call
mov
push
imul
adc
lds
push
test
les
dec
xorl
or
out
pop
sbb
jle
daa
or
push
sbb
push
nop
sbb
cmpsb
out
fadd
xchg
adc
mov
scas
cmp
mov
outsl
xchg
pop
out
dec
sbb
push
int
jp
in
testl
mov
jg
call
inc
ds
jno
jne
leave
mov
xor
or
sahf
xchg
xchg
divl
pushl
dec
mov
lret
es
inc
fst
sub
iret
rol
xchg
lock
mov
ljmp
pop
mov
or
push
dec
imul
std
adc
jbe
nop
pushl
popf
and
rolb
xor
xchg
mov
sub
aad
roll
pushl
inc
out
dec
aad
rclb
jb
call
dec
pop
test
push
and
mov
xor
pop
jmp
fildll
add
mov
pop
sbb
int
std
mov
addr16
sbb
inc
push
or
xchg
cld
and
bound
jmp
xchg
ficompl
incb
popf
adc
dec
movsb
sbb
lods
scas
inc
je
jg
jmp
sahf
repnz
ja
mov
mov
je
stos
rcrb
sbbb
call
mov
sbb
mov
pop
subb
shlb
sub
jecxz
pop
sbb
pushl
pop
dec
jne
adc
scas
push
mov
mov
jne
cmp
sub
decl
xor
ficompl
cmc
cltd
cld
add
shrl
pushf
imul
negl
incl
push
jnp
cs
int3
add
push
add
add
or
ljmp
clc
insl
pushf
daa
fisttpll
pop
mov
mov
mov
cmp
pushl
cld
add
or
sub
pop
mov
push
push
test
mov
add
jg
fs
call
push
mov
movsl
in
cmpsb
rol
sub
inc
add
rorb
insl
repnz
mul
dec
popf
test
pop
stc
imul
xchg
lea
aas
inc
cmc
mov
inc
xchg
jl
push
push
sbb
cmpsl
add
fisubs
mov
xor
daa
mov
idiv
les
orl
out
inc
mov
add
push
leave
mov
shlb
jecxz
mov
popa
lcall
jg
xchg
aaa
lret
aas
fidivl
dec
imul
jno
push
ja
decl
pop
movsl
cmc
pop
cmp
add
add
int3
and
adc
lcall
or
mov
pop
test
les
mov
fdivs
rcrb
repz
fdivp
pop
jg
decl
arpl
and
gs
jp
inc
xlat
cld
lock
mov
jg
jmp
cmp
fyl2x
mov
push
pop
jp
in
cmp
jns
fwait
jae
mov
lcall
je
ja
mov
scas
ss
arpl
andl
cltd
mov
loopne
jmp
xor
inc
dec
sub
inc
xor
mov
repnz
xchg
cmp
mov
inc
call
and
push
dec
sbbb
and
in
cmp
pop
mov
xor
sar
ljmp
fs
fs
popf
lret
jb
sbb
mov
cmp
jmp
das
jge
xchg
test
sbb
ret
lods
inc
sbb
sbb
stos
jne
loope
rcrb
cmpl
xchg
das
or
mov
aad
xor
incl
das
test
in
into
ljmp
pop
cmpsb
mov
or
mov
xor
fistps
xchg
fcomps
lea
pop
xchg
mov
filds
pop
ja
lahf
add
jb
and
lea
mov
mov
in
mov
pusha
add
mov
mov
pop
mov
pop
cmp
jmp
das
outsl
or
or
lcall
test
sub
js
test
adc
fsubl
pop
mov
in
mov
lds
lret
rorb
fdivl
mov
mov
sbb
inc
insb
addl
leave
cmp
jg
sbb
and
push
popa
sub
xor
adc
dec
jae
icebp
testl
int
fistpl
scas
mov
mov
dec
insb
add
imul
sub
xor
push
push
xchg
orl
and
in
xor
pop
pop
xchg
gs
mov
and
or
shlb
jmp
jbe
frstor
test
dec
hlt
xchg
adc
das
cmp
popa
aaa
or
jmp
add
adc
ljmp
cli
sbb
dec
push
ficompl
xchg
lahf
ds
push
in
pop
pusha
test
pop
lret
push
adc
ljmp
clc
dec
push
ljmp
sub
or
jnp
cs
int
jbe
ljmp
out
xchg
mov
mov
xlat
xchg
mov
ret
iret
stc
dec
incl
push
sbb
add
sub
jecxz
and
aas
dec
loop
cmp
mov
ljmp
leave
sub
into
out
pusha
stos
cmp
mov
pop
aaa
pop
push
jnp
xor
jmp
adc
mov
incl
movsl
push
mov
roll
push
push
loope
mov
push
int
xchg
cwtl
dec
dec
scas
mov
gs
iret
cltd
push
fdivl
sub
push
jnp
push
fiadds
mov
decl
icebp
adc
mov
mov
rclb
inc
mov
pop
pop
cmpsb
int
es
lock
jmp
or
cld
xor
jne
push
sbb
mov
scas
lcall
inc
cli
sarl
or
in
cmp
fwait
and
pop
ret
enter
in
sub
ljmp
sahf
jnp
in
fmul
and
and
loope
sbb
pop
ds
cmp
sbb
int3
fadds
cmpsl
outsb
mov
pop
and
push
sub
out
add
push
cli
je
fcomip
jmp
jo
jnp
in
xchg
sub
cld
gs
xchg
xor
push
mov
call
outsl
sti
cli
sub
mov
nop
addr16
popa
xchg
test
xchg
iret
jp,pt
mov
cwtl
xchg
ljmp
push
xor
int
dec
mov
xor
xor
ljmp
repz
imul
sbb
sarl
mov
add
fcomip
sbb
xchg
addr16
and
fstp
cmp
sub
scas
mov
jg
mov
or
and
dec
hlt
sub
lea
jns
pop
in
mov
mov
repz
xchg
push
adc
cmp
test
and
pop
popf
shll
sti
push
mov
call
loop
out
push
mov
mov
mov
jb
mov
bswap
push
gs
jmp
jg
cmp
jecxz
mov
dec
sbb
push
sub
mov
out
outsl
mov
loopne,pt
pushl
and
inc
mov
xchg
mov
mov
jne
mov
sar
pop
add
loopne
pop
dec
loopne
mov
lods
jns
pop
cmpb
cmp
push
fs
aad
jp
inc
mul
pop
lcall
sbb
and
sti
call
das
je
pushf
popf
push
mov
jmp
mov
mov
sub
decl
lock
or
mov
test
and
ret
aas
jg
pushl
and
dec
push
in
cli
stc
add
mov
mov
add
push
insl
decl
inc
mov
xor
stc
sub
es
push
jmp
mov
imul
cld
cwtl
sub
scas
xchg
add
mov
loope
out
fwait
cmp
dec
jp
jg
scas
iret
lret
pop
sub
inc
sbb
add
aam
jne
jmp
push
inc
js
xor
pushf
add
jns
pusha
push
add
push
repnz
xchg
fsubl
inc
mov
incl
inc
std
clc
add
pop
lds
xchg
dec
lea
inc
cltd
sbb
movsl
fwait
and
xchg
stos
or
movl
lea
mov
jmp
cmc
sub
incl
mov
lret
mov
cmp
mov
rolb
xchg
movsl
push
pop
shr
lods
lret
jecxz
xchg
mov
inc
xor
mov
sub
xchg
pop
mov
lea
sbb
mov
add
ljmp
mov
xchg
xchg
push
pop
pop
addl
mov
bound
add
mov
dec
sti
aaa
std
push
pop
lds
rol
cwtl
mov
in
mov
loopne
xlat
icebp
mov
loop
stos
pusha
sbb
repnz
xor
push
and
jne
jne
ljmp
ds
mov
js
push
cmpsb
jmp
cli
xor
mov
loopne
dec
aaa
hlt
jg
jle
sbb
into
push
mov
xor
hlt
mov
fcompl
scas
aam
and
int3
pop
mov
mov
mov
lret
pop
in
pop
scas
in
or
or
add
fists
clc
or
div
ljmp
cmp
pushf
add
fcoms
int3
pop
je
mov
mov
or
mov
cmpsl
pop
cld
pushf
cwtl
adc
inc
xor
arpl
les
add
cmp
sar
call
scas
in
aad
loopnew
xor
mov
mov
pop
es
inc
or
dec
test
out
pushl
pusha
clc
xchg
mov
sub
test
mov
rorb
pop
push
pop
popf
mov
mov
pop
icebp
mov
xchg
pop
cmp
insb
psllw
dec
movsb
scas
mov
mov
test
lret
loope
sbb
movsl
and
aad
sub
data16
dec
xor
sbb
insb
clc
pushf
push
push
sar
pop
lods
leave
inc
jmp
mov
cli
lds
push
sti
pushl
inc
sub
sti
jae
out
test
sub
pop
hlt
test
lahf
icebp
xchg
call
and
stc
cmp
mov
arpl
ror
mov
push
xorb
mov
mov
xchg
aam
jb
enter
in
in
cmp
ss
pushl
mov
sbb
out
mov
dec
or
int3
mov
popl
dec
outsb
and
push
mov
pushl
dec
add
sub
enter
push
and
or
pop
inc
pop
sti
leave
xor
mov
add
decl
push
pop
cld
cltd
mov
xchg
mov
les
into
leave
daa
inc
xchg
sahf
inc
inc
dec
pusha
mov
fs
outsb
nop
add
call
out
xor
ljmp
in
aas
into
pop
xchg
mov
add
pusha
or
insb
in
jbe
scas
daa
arpl
push
call
inc
or
lret
cmp
mov
jle
mov
cld
out
lods
dec
andl
adc
roll
mov
fidivrl
ss
jmp
mov
lahf
xchg
das
mov
xchg
fidivl
sbb
lret
jbe
pushl
ljmp
or
lods
mov
fdivs
pop
or
lds
call
sahf
pusha
push
and
mov
mov
sub
mov
push
dec
cmp
pushl
cmp
iret
xlat
or
jl
mov
push
in
mov
in
mov
inc
mov
pushl
or
cmc
aad
inc
xor
sti
imul
repnz
jae
mov
mov
in
jg
jmp
mov
inc
sub
ret
sbb
dec
aas
aam
fisttps
popf
sub
mov
call
iret
cmp
pop
dec
sub
gs
cli
bound
pop
cmp
out
leave
arpl
in
jne
pushl
in
iret
sub
lret
sub
lods
adc
mov
sti
movsl
test
dec
cmp
or
loop
jmp
int
daa
mov
mov
in
inc
movsb
fiaddl
in
and
lcall
mov
aaa
fistpl
les
xchg
sub
jo
cmp
push
loopne
sub
jbe
and
repz
inc
xlat
push
push
int3
lods
lcall
jmp
xchg
sbb
or
cmp
jo
int
dec
mov
or
or
pop
add
jbe
push
je
cmp
dec
inc
mov
xor
jo
lcall
lcall
lds
fisttpll
pop
aam
xor
jnp
in
lods
pop
cmp
loopne
sbb
jmp
imul
dec
les
sub
jmp
imulb
jg
ljmp
mov
or
and
sahf
iret
ret
xchg
jge
dec
neg
xchg
sbb
das
adc
mov
iret
icebp
pop
inc
jns
push
push
test
shlb
ljmp
lcall
mov
fadds
and
dec
insb
lods
outsb
insl
sub
and
pop
dec
insl
add
call
insl
xlat
lods
jno
test
dec
sbb
inc
pop
sbb
adc
jp
lret
test
fdivr
ljmp
add
stc
and
cwtl
pop
es
fcmovne
sub
push
xchg
sub
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
adcb
dec
incl
xchg
insl
add
pop
shrl
faddl
sbb
and
push
cltd
outsb
sbb
mov
dec
int3
jns
cmpsb
jnp
add
mov
lds
inc
dec
insl
insl
jle
aad
fldenv
iret
aaa
fadds
pop
or
fildl
push
inc
fbstp
cmp
dec
push
hlt
insl
test
adc
push
pop
push
out
pop
popa
lcall
add
fwait
out
lret
mov
push
xchg
sti
call
cwtl
insl
mov
dec
xor
or
lahf
rclb
not
shl
nop
lock
clc
call
fwait
pushl
ret
xchg
jp
shlb
ret
sahf
enter
movsb
push
sub
stos
lods
sub
das
jle
jmp
sbb
sbb
and
push
mov
sub
lock
push
or
incl
or
hlt
lcall
and
inc
rorl
lretw
test
push
scas
jns
xor
jmp
int
and
data16
jp
mov
rcrl
sub
jne
ljmp
imul
addr16
sarl
sbb
dec
lcall
sbb
or
jmp
je
cmp
addr16
clc
add
stos
js
in
stos
ja
sbb
arpl
je
call
cmpsb
int
jl
dec
popf
cmp
out
repnz
inc
jb
jp
push
dec
or
ljmp
pushl
mov
push
movsl
or
cmp
adc
lret
clc
dec
scas
psubb
add
call
adc
daa
mov
jl
ret
xchg
rorb
xor
sarb
mov
jns
xchg
jo
cli
std
das
cmc
daa
daa
cld
push
dec
jle
lahf
mov
lea
inc
push
pop
das
adc
push
jb
cwtl
mov
pop
and
jns
xchg
dec
call
mov
loop
cmpsb
fs
call
lds
push
test
les
dec
xorl
or
out
pop
sbb
pop
daa
or
ljmp
sbb
push
nop
sbb
cmpsb
out
fadd
xchg
adc
mov
scas
cmp
pop
out
dec
lcall
jl
xchg
push
int
jp
in
testl
mov
push
ljmp
mov
mov
xor
or
sahf
xchg
xchg
divl
stc
call
lcall
lret
es
inc
fst
sub
iret
rol
xchg
lock
mov
dec
xor
mov
jmp
int
push
dec
imul
std
adc
jbe
nop
mov
nop
fimuls
and
inc
rolb
xor
xchg
mov
sub
aad
roll
ss
out
dec
aad
rolb
les
sarl
and
test
push
and
mov
call
pop
jmp
fildll
add
mov
pop
sbb
push
pop
addr16
jnp
sbb
inc
push
or
xchg
cld
and
bound
es
lcall
incb
popf
adc
dec
movsb
sbb
lods
scas
inc
je
arpl
sahf
repnz
ja
mov
js
scas
stos
rcrb
sbbb
xchg
jnp
cmp
mov
jmp
mov
pop
subb
shlb
sub
jecxz
pop
sbb
pop
decl
adc
scas
push
mov
mov
jne
cmp
sub
repnz
ficompl
jp
sub
add
shrl
pushf
imul
negl
mov
cs
in
jmp
pop
int3
add
push
add
add
or
fldt
daa
fisttpll
call
pop
mov
mov
mov
cmp
inc
fisubl
lcall
and
sub
mov
push
push
test
mov
add
jg
fs
mov
movsl
in
cmpsb
call
lds
and
xchg
mov
mov
rorb
insl
repnz
mul
dec
popf
test
pop
stc
imul
xchg
lea
jg
cli
xchg
inc
cmc
mov
inc
xchg
jl
push
push
sbb
cmpsl
add
mov
mov
jmp
xor
daa
mov
idiv
les
orl
out
inc
mov
mov
jecxz
inc
fs
pop
mov
inc
mov
popa
lcall
in
mov
fidivl
dec
imul
jno
push
rolb
pop
gs
cmp
movsl
cmc
pop
cmp
add
add
int3
and
adc
pop
cmp
or
mov
incl
test
les
mov
fdivs
rcrb
repz
fdivp
pop
lea
cmp
mov
out
gs
jp
inc
xlat
cld
lock
mov
test
mov
mov
push
pop
jp
in
cmp
jns
fwait
jae
mov
je
ja
mov
xchg
and
scas
ss
arpl
andl
cltd
mov
in
xchg
push
inc
or
decl
sbb
adc
xchg
cmp
mov
inc
and
incl
add
push
dec
sbbb
and
in
cmp
pop
mov
xor
push
popf
jg
jmp
sbb
mov
cmp
jmp
das
jge
jmp
sbb
ret
lods
inc
sbb
sbb
stos
jne
vsubpd
fisttps
add
cmp
mov
das
or
mov
aad
xor
inc
sbb
test
in
dec
ljmp
pop
cmpsb
mov
or
mov
xor
stc
dec
cs
fcomps
lea
pop
xchg
mov
filds
pop
ja
lahf
add
jb
and
lea
mov
mov
jmp
mov
sahf
mov
pusha
add
mov
mov
pop
mov
pop
cmp
outsl
or
or
rcll
lcall
test
sub
insb
adc
fsubl
pop
mov
in
mov
lds
lret
rorb
sub
cli
xlat
loop
sbb
inc
insb
addl
leave
cmp
jg
sbb
and
push
jmp
lds
aaa
adc
dec
jae
icebp
testl
int
fistpl
scas
mov
rcrl
loope
pushl
insb
add
imul
sub
xor
push
push
xchg
orl
mov
adc
xchg
gs
mov
and
or
shlb
imul
ljmp
adc
das
cmp
popa
aaa
or
jmp
add
adc
add
and
call
ficompl
xchg
lahf
ds
push
in
pop
pusha
test
pop
lret
push
adc
lret
push
ljmp
pop
cld
dec
adc
jl
or
jnp
cs
int
jbe
stos
push
xchg
mov
je
call
push
jns
out
mov
ret
iret
stc
dec
fiaddl
push
sbb
pushl
cmp
sub
jecxz
and
aas
dec
loop
cmp
mov
leave
sub
ljmp
into
out
pusha
stos
cmp
mov
pop
aaa
pop
push
jnp
xor
jmp
adc
mov
movsl
push
mov
ljmp
loope
mov
push
int
xchg
cwtl
dec
iret
scas
mov
jmp
iret
cltd
push
fdivl
sub
push
jnp
push
fiadds
mov
dec
fcomip
adc
lcall
mov
mull
mov
pop
pop
cmpsb
int
and
sahf
aam
into
ljmp
clc
cld
xor
jne
push
sbb
mov
scas
pop
mov
inc
adc
mov
popa
jbe
in
cmp
fwait
and
pop
ret
enter
in
sub
sahf
jnp
in
fmul
and
and
loope
sbb
pop
ds
xor
int3
fadds
pushl
rclb
pop
and
push
sub
out
add
push
cli
je
popa
pop
jo
jnp
in
out
clc
call
gs
xchg
xor
push
mov
mov
sti
cli
sub
mov
pushl
popa
xchg
test
xchg
iret
jp,pt
mov
cwtl
xchg
xor
call
mov
xor
int
dec
mov
xor
xor
jno
dec
es
push
sbb
imul
sbb
sarl
mov
sbb
xchg
addr16
push
and
fstp
cmp
sub
scas
mov
mov
sbb
decl
mov
xchg
dec
std
and
dec
hlt
sub
lea
jns
pop
in
mov
mov
adc
cmp
test
and
pop
popf
shll
sti
push
mov
and
out
push
mov
mov
mov
jb
mov
bswap
push
gs
jmp
and
adc
mov
sbb
push
sub
mov
out
outsl
mov
ds
and
inc
mov
lcall
rcll
mov
jne
mov
sar
pop
add
decl
lock
lods
jns
pop
cmpb
cmp
mov
pushl
aad
jp
inc
mul
pop
lcall
sbb
and
sti
call
das
je
decl
pushf
popf
push
mov
jmp
mov
mov
sub
iret
ja
incl
bt
out
xlat
mov
xchg
and
ret
aas
jbe
and
mov
push
in
cli
stc
add
mov
mov
add
push
insl
mov
call
ljmp
add
sub
es
push
jmp
mov
imul
sbb
jg
insb
scas
xchg
add
mov
loope
out
fwait
or
scas
mov
sub
inc
sbb
add
aam
jne
jecxz
inc
js
xor
lcall
jne
cmp
add
push
repnz
xchg
fsubl
inc
mov
std
clc
add
push
lcall
dec
out
dec
lea
inc
cltd
sbb
movsl
fwait
and
lock
jg
inc
add
js
mov
jmp
cmc
sub
add
mov
lret
mov
popa
and
mov
rolb
xchg
movsl
push
pop
shr
lods
lret
jecxz
xchg
mov
xchg
std
movsl
or
pushl
pop
mov
lea
sbb
mov
add
insl
out
adc
lret
call
addl
mov
bound
add
mov
dec
icebp
pop
lds
rol
std
fwait
dec
cwtl
mov
in
mov
loopne
xlat
icebp
mov
sbb
lcall
pslld
xor
push
and
jne
jne
ds
mov
push
shll
push
cmpsb
jmp
cli
xor
mov
loopne
dec
aaa
jle
sbb
into
push
mov
call
pushf
add
dec
lahf
inc
hlt
mov
movl
scas
xchg
mov
push
lret
pop
in
pop
scas
fdivr
push
dec
movsb
mov
cld
add
fists
clc
or
div
das
cmp
pushf
incl
mov
ss
and
adc
pop
je
mov
mov
or
enter
cld
pushf
cwtl
lcall
adc
inc
xor
arpl
les
add
cmp
rclb
in
pushl
mov
mov
pop
es
inc
or
dec
test
out
mov
mov
aaa
pusha
clc
clc
call
test
mov
rorb
pop
push
pop
popf
mov
mov
dec
mov
cmpsb
xchg
pop
cmp
insb
psllw
dec
movsb
scas
mov
mov
test
movsl
and
mov
sub
data16
dec
xor
sbb
insb
clc
pushf
push
push
lods
leave
inc
jmp
loopne
mull
inc
loopne
lds
push
sti
mov
imul
jmp
sti
jae
out
test
sub
pop
hlt
test
lahf
icebp
xchg
mov
cmc
stc
cmp
ljmp
arpl
ror
mov
push
xorb
lret
mov
pushl
mov
jp
in
in
cmp
ss
mov
sbb
call
out
mov
dec
or
int3
mov
popl
dec
outsb
and
push
mov
add
call
sub
enter
push
and
or
pop
inc
pop
sti
leave
xor
mov
add
push
pop
cld
cltd
mov
xchg
mov
les
into
leave
daa
xchg
sahf
inc
inc
dec
pusha
pushl
in
outsb
nop
add
call
out
xor
ljmp
into
pop
xchg
mov
push
outsl
lcall
insb
in
jbe
scas
daa
arpl
push
inc
or
ljmp
cmp
mov
jle
mov
dec
andl
fnstcw
adc
roll
mov
aam
pop
test
pushl
jmp
mov
lahf
xchg
das
mov
xchg
fidivl
sbb
lret
jbe
ljmp
dec
aam
popf
addr16
pusha
lods
mov
fdivs
pop
or
lds
pusha
push
and
jmp
add
pop
mov
sub
mov
push
dec
cmp
xor
fcmovne
xlat
or
ljmp
bound
or
mov
inc
mov
xor
add
cmc
aad
incl
mov
jne
xchg
pop
clc
outsl
shl
xchg
jae
mov
mov
in
jg
mov
inc
sub
jmp
ret
sbb
dec
aas
aam
fisttps
popf
sub
mov
iret
cmp
pop
dec
ljmp
push
push
gs
cli
bound
pop
cmp
out
leave
arpl
in
jne
in
iret
sub
dec
sub
lods
adc
mov
sti
movsl
test
dec
cmp
or
xor
int
daa
mov
xor
daa
add
in
inc
movsb
fiaddl
in
and
xchg
stc
ret
mov
pushl
mov
fistpl
les
xchg
sub
jo
adc
arpl
jg
pushl
and
repz
inc
xlat
push
push
int3
lods
pop
shr
xchg
sbb
jmp
popa
or
cmp
jo
int
dec
mov
or
or
pop
add
mov
pushl
jnp
dec
inc
mov
xor
jo
lcall
pop
adc
push
incl
test
outsl
pop
aam
xor
jnp
in
lods
pop
cmp
loopne
sbb
pusha
dec
imul
mov
les
sub
jmp
imulb
ljmp
push
pop
mov
or
and
sahf
iret
ret
xchg
jge
dec
neg
xchg
sbb
ljmp
ljmp
adc
mov
iret
icebp
pop
inc
jns
push
push
test
shlb
and
dec
jp
cli
mov
fadds
and
dec
insb
lods
outsb
insl
sub
and
pop
dec
insl
add
shrb
lods
jno
test
add
cmc
and
inc
pop
sbb
adc
jp
lret
test
sbb
aad
and
push
aam
lcall
enter
fsubrp
adc
test
push
push
push
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
push
push
lds
in
lock
mov
out
scas
jno
int
arpl
mov
cwtl
ficoml
mov
adc
xchg
xor
push
push
call
pop
shl
out
out
leave
leave
cmpsl
inc
lods
jo
mov
idivl
shll
sub
ljmp
addl
push
xchg
pop
das
mov
xchg
sbb
sbb
push
mov
mov
add
addb
add
adc
iret
mov
and
cmp
add
add
cmp
add
mov
add
pop
add
mov
mov
jmp
sub
into
mov
bswap
mov
mov
test
sbb
arpl
ret
push
push
aam
lret
sub
push
sti
mov
xor
sub
mov
mov
mov
pop
faddl
clc
orl
sbb
push
cwtl
incl
pop
dec
jmp
jp
sbb
add
mov
pop
mov
dec
mov
add
stc
imul
inc
mov
ja
dec
cs
cmp
cmp
mov
add
test
mov
je
mov
dec
lds
out
sub
mov
mov
sub
cmp
dec
jne
adc
lock
ret
out
add
add
mov
cmp
incl
cmp
aad
js
decl
fimuls
test
jne
jle
or
loopne
lock
in
leave
inc
movsl
mov
dec
jnp
push
xchg
hlt
enter
mov
sbbb
xor
mov
sub
sub
ret
fmull
jae
pop
insl
loope
jae
adc
and
clc
lea
xor
fistpl
jg
in
mov
out
mov
push
mov
mov
sbbb
xchg
and
decl
inc
cli
ljmp
iret
sub
into
adc
imul
jbe
leave
cmp
cmp
incl
fidivrs
mov
sbbb
mov
lea
adcl
xor
jnp
lret
fimull
mov
int3
mov
or
in
outsl
aad
xor
pop
and
fistpl
mov
ljmp
stc
adc
leave
pop
rcl
xlat
dec
push
aam
and
jecxz
enter
aad
push
jmp
pop
pushl
aaa
push
push
scas
mov
gs
popa
ss
cmp
imul
lcall
imul
outsl
insl
xor
imul
xchg
adc
loop
mov
jmp
hlt
clc
and
repnz
inc
out
and
push
ret
insb
cmp
mov
pop
mov
xchg
and
pop
outsl
incl
arpl
loopne
mov
and
loopne
adc
int
rcrb
add
lcall
push
jno
je
fildll
add
xchg
and
xor
jo
adc
jmp
mov
dec
mov
xor
jo
rolb
stos
mov
movaps
push
add
dec
pop
adc
sbbb
test
adc
mov
add
lcall
inc
add
xlat
out
lods
pop
sub
out
in
push
imull
lds
testl
mov
xchg
subl
xchg
xchg
ja
pushl
cmpl
stc
fadds
sub
sub
jp
nop
sbb
inc
outsl
jmp
mov
mov
inc
push
daa
lods
jns
ljmp
sti
rcr
add
sub
mov
dec
ljmp
pop
mov
out
mov
xchg
mov
mov
cmp
sahf
add
cmpsl
es
incl
fldt
imul
mov
pop
sub
push
cmp
out
mov
out
pushl
lock
arpl
cmp
imull
mov
lods
mov
xor
pop
lcall
mov
imulb
dec
lods
inc
aam
out
ljmp
lea
pop
enter
mov
call
in
int3
inc
not
inc
iret
iret
jno
inc
ds
xchg
je
jnp
std
aam
call
dec
mov
dec
mov
mov
inc
arpl
fistps
mov
icebp
cltd
and
fistl
repnz
push
pop
fsub
dec
xchg
jp
pop
push
lahf
mov
mov
das
cmp
jae
adc
inc
mov
rorb
xor
jl
pop
sub
pop
mov
xor
adc
jg
inc
and
lcall
cmp
mov
mov
xchg
or
pushl
pop
stos
xor
cli
sarb
loopne
pop
pop
sub
mov
ror
sub
fwait
adc
push
call
daa
nop
insl
xchg
sub
mov
cmpb
sbb
fldlg2
xchg
dec
mov
decl
test
jae
xor
xchg
sar
fcmovne
mov
movl
pushl
mov
pop
jnp
inc
mov
lahf
or
jno
sahf
lods
add
dec
mov
xchg
lcall
or
xchg
inc
test
mov
inc
sbb
cwtl
cmp
mov
xor
cmc
pushl
mov
mov
test
sbb
dec
cli
jle
add
out
cltd
je
call
stos
shrb
dec
push
inc
mov
in
or
push
xor
push
sbb
sbb
call
jnp
push
or
adc
jns
ja
jbe
xchg
cld
adc
add
xor
rorb
stos
fdiv
push
test
into
outsl
repnz
pop
lahf
iret
iretw
xor
add
adc
inc
add
dec
ret
pop
in
cmp
and
adc
incl
test
xor
push
iret
xchg
imul
fmuls
pushl
test
push
test
cmc
pop
xchg
test
push
sub
push
xchg
push
gs
xchg
outsl
in
xor
cmp
sbb
in
call
push
cmp
xchg
scas
jmp
xchg
adc
dec
adc
and
mov
pop
loopne
mov
or
mov
add
sbb
or
dec
aad
xchg
pop
negb
mov
ljmp
inc
out
cmp
jge
jne
pop
rcrl
push
rorb
mov
icebp
add
cmpsl
ja
push
cld
sbb
inc
scas
in
mov
clc
add
pop
loopne
filds
xchg
pusha
pop
sub
iret
inc
out
add
jmp
idivb
insl
rcrb
lret
push
dec
fistps
jmp
addr16
aaa
dec
mov
sub
stc
nop
insl
mov
add
add
cmc
add
pop
ret
inc
sarb
into
xchg
popa
lock
cld
lods
push
jge
sbb
outsl
aas
adc
stos
push
pop
lods
pop
lock
negl
stc
push
cmc
add
std
xchg
movsb
arpl
roll
pop
iret
ss
out
lcall
cmp
test
pop
sbb
pushf
pop
repnz
pop
cld
add
inc
repnz
push
testl
cli
je
pop
lock
adc
xchg
xor
insl
dec
incl
xor
filds
push
out
std
add
pop
sti
pop
loope
cld
sbb
pop
jbe
inc
or
imul
mov
xor
jp
xor
loopne
outsl
test
pop
mov
aaa
dec
imul
ss
incl
push
clc
pop
dec
pop
decl
push
pop
rclb
jl
xor
into
sbb
add
push
adc
xchg
es
call
inc
fidivrl
push
sub
inc
out
or
pop
pop
cld
sub
mov
clc
lcall
cmp
mov
xchg
xchg
iret
pop
push
inc
insl
or
add
and
jmp
push
mov
outsb
pop
xor
insl
pop
pop
das
roll
outsb
mov
aas
out
or
or
mov
adc
aas
sbb
out
xchg
pop
push
add
or
mov
call
mov
inc
push
mov
mov
cld
dec
es
out
stc
out
dec
mov
int
mov
xor
sti
pop
test
xchg
jecxz
inc
push
cmpsb
sub
jge
popl
sub
pop
xor
jg
pop
jo
mov
dec
ret
push
aaa
sar
mov
call
xchg
ror
lret
pushf
outsb
sub
xor
insl
and
aam
idiv
jmp
mov
xor
daa
inc
pushf
in
sbb
outsb
movsl
push
out
idivb
adc
std
out
mov
lods
lea
loope,pt
loop
push
ja
int
mov
scas
xchg
xchg
jg
in
enter
fsubp
xchg
sbb
in
ds
push
adc
push
les
fists
out
mov
pop
stos
or
loope
xchg
in
mov
ljmp
xor
in
xor
push
cmpl
mov
mov
xchg
dec
std
fists
aas
aas
and
push
pop
sahf
xor
xchg
lret
out
cmp
mov
pushl
jle
xchg
mov
lods
and
adc
cs
sahf
pop
jno
sbb
movsb
rcrl
ljmp
in
xchg
ss
repz
xchg
call
xor
sub
insb
mov
pop
mov
xchg
aas
gs
push
test
movsb
loope
mov
insb
jne,pt
filds
push
aas
jg
lods
pop
pushf
bound
repnz
in
xchg
and
cld
jmp
je
xchg
fstps
mov
jle
lods
jmp
rcr
pop
xchg
in
daa
pop
sub
pop
jmp
rcr
or
enter
jae
cmpsb
xor
aad
cmp
lcall
incb
xor
loopne
rorl
addr16
ret
push
movsb
sbb
movsb
loopne
xchg
xchg
movsb
or
ss
mov
xchg
sahf
dec
insb
cwtl
call
mov
dec
bound
lret
sbb
movsb
fistpll
ficomps
cmp
insb
stos
lcall
lcall
out
out
pop
jl
std
loopne
cli
fistpll
inc
in
es
loopne
xor
mov
mov
das
loopne
ljmp
out
jmp
insb
sub
push
imul
les
insl
lock
jg
stos
das
jbe
movsb
int3
popa
and
mov
scas
cmp
and
cmc
movsl
pushl
into
sub
xchg
imulb
adc
mov
jmp
adc
adc
sahf
das
jg
decl
mov
sahf
jbe
ret
out
aas
xchg
push
cmp
jmp
push
nop
lods
push
jns
icebp
jno
stos
lock
insl
rol
cmp
sbb
adc
push
es
sahf
jno
in
jb
push
call
aaa
je
sbb
dec
pop
mov
call
ret
sub
jg
or
jnp
pop
ret
rol
jge
xor
push
jg
jmp
inc
loope
les
out
adc
std
jb
lds
dec
mov
pusha
out
fistpl
loopne
lret
out
popa
ja
rcl
jbe
insl
mov
insl
inc
pop
xchg
stos
jg
pushl
fwait
std
jge
das
push
sub
das
out
in
dec
lods
mov
push
out
in
sbb
incl
jmp
dec
stc
dec
sahf
add
or
or
insl
pusha
lds
jg
movsl
mov
mov
jg
stos
sahf
push
scas
and
movsl
sub
mov
pop
loopne
mov
or
push
cmp
dec
inc
sbb
inc
jb
js
dec
push
bound
push
insl
jno
push
pop
outsl
dec
cmpsb
xor
insl
dec
xor
xor
push
popa
inc
arpl
mov
and
push
push
imul
pop
imul
dec
jb
xor
incl
outsl
jo
push
xor
cmp
dec
inc
outsb
outsb
push
jb
pop
xor
dec
pop
dec
call
jne
inc
dec
cmp
ja
inc
dec
bound
inc
insb
jo
inc
bound
je
inc
bound
mov
jns
xor
dec
dec
aaa
inc
imul
mov
pushl
push
jns
pop
push
outsl
push
dec
pop
dec
lcall
fildl
bound
push
jp
push
inc
je
pop
gs
dec
add
dec
ja
xor
cmp
dec
outsb
inc
inc
jo
inc
dec
dec
inc
js
idiv
js
addr16
push
outsl
push
insb
inc
dec
push
ss
jb
push
dec
inc
jae
xor
push
jno
bound
mov
je
jb
aaa
dec
xor
inc
imul
ss
xor
jmp
jae
js
jo
imul
jo
inc
popa
aaa
js
ss
aaa
dec
inc
dec
dec
push
addr16
ljmp
clc
jne
je
arpl
bound
arpl
dec
push
push
dec
dec
popa
gs
outsl
outsb
dec
jo
pop
mov
js
dec
jb
push
sub
inc
js
dec
imul
pop
arpl
dec
outsl
sbb
fistps
mov
push
xor
push
jo
xor
dec
jp
mov
push
jne
xchg
shrl
test
mov
push
andl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
mov
dec
mov
pushl
add
and
aaa
add
jae,pt
add
inc
xchg
add
add
js
mov
add
cmp
add
bound
add
addl
clc
enter
subb
adcb
je
jbe
outsl
fists
movd
add
sbb
push
addb
sbb
add
test
sub
sti
pop
rorl
xchg
push
pop
or
xorb
push
pop
or
push
push
push
cmpsb
adcb
sarl
sub
mov
pop
push
adc
hlt
mov
aaa
incl
sarl
cmp
or
add
pop
add
push
sbb
mov
outsl
testb
sub
cmp
sbb
lcall
jb
hlt
sub
add
push
push
loop
ror
sahf
out
rcrl
stos
xchg
ds
std
xor
sbb
mov
test
jbe
cs
dec
sbb
or
mov
imul
nop
add
sti
mov
push
push
xor
pusha
or
test
mov
insl
roll
sub
push
add
jp
inc
jecxz
lods
jb
mov
ss
jo
mov
xchg
or
mov
loopne
mov
push
pop
add
or
mov
add
in
scas
mov
fsubrs
mov
movsb
add
jmp
iret
mov
imul
adc
stos
shrl
pop
fsubrp
mov
xchg
test
sarb
and
imulb
shll
aam
pusha
or
fidivl
addb
mov
addb
push
ds
cs
scas
fidivrl
enter
add
push
bound
stos
and
shrb
jl
lods
xor
imul
xchg
jo
cmovl
fs
mov
int3
mov
mov
pop
lcall
push
push
ds
rcr
sti
jnp
xchg
push
les
cmp
push
lock
lock
pop
xor
cld
scas
sbb
loopne
mov
mov
fcomps
sbb
adc
imul
mov
mov
int
ret
cli
push
imul
imul
mov
mov
sub
cld
push
pushl
sub
pusha
and
jne
add
cmpsl
repnz
rcrb
aaa
push
repnz
add
mov
popl
mov
ljmp
stos
sub
rcrl
pop
xchg
sbb
fsub
pop
pop
jl
push
fbstp
or
in
aas
mov
in
add
pop
push
mov
push
imul
mov
dec
sti
sahf
cmpsb
adc
xor
pop
sbb
jnp
aaa
or
or
sub
xor
add
inc
push
jo
bound
push
push
inc
add
in
imul
add
ljmp
mov
push
or
add
stos
jo
ss
idiv
imul
mov
sbb
sub
fdivs
enter
jae
ds
lcall
cs
rep
imul
xor
cs
sbb
dec
lock
fs
push
jo
mov
lcall
push
mov
cwtl
movsb
lcall
jo
and
adc
jg
cmp
into
mov
mov
loopne
push
cld
and
cmp
testb
out
aad
stos
cmp
lock
stos
xchg
or
push
pop
mov
add
inc
stos
hlt
inc
in
xor
sar
push
and
mov
sbb
dec
xchg
push
mov
bnd
add
sti
add
adc
aad
push
add
dec
push
sbb
jg
jl
mov
fs
jge
sub
repnz
push
pop
ja
add
xor
fwait
lock
jnp
xor
sub
repnz
gs
jno
or
or
hlt
cld
push
test
pop
fidivs
insl
cmpsb
mov
push
adc
xor
out
sub
lcall
sbb
add
add
pop
inc
or
ret
add
adc
cld
add
jne
and
mov
arpl
lret
lcall
mov
nop
push
ljmp
xor
push
add
lds
push
pushl
in
scas
add
xchg
lcall
sbbb
mov
xor
ljmp
cli
hlt
and
data16
dec
cmp
aas
aam
add
out
in
das
cli
xchg
sti
test
sahf
test
xchg
ljmp
filds
inc
out
clc
sub
push
cmp
loopne
add
mov
xor
stos
xor
dec
clc
fcmovne
popa
pop
jle
cmpsb
cmp
adc
add
push
push
add
jb
pop
adc
push
pop
jb
incb
pop
add
push
sbb
and
sbb
pop
push
adc
sub
sbb
pop
mov
test
add
icebp
or
repnz
inc
bound
hlt
lock
in
mov
aaa
add
testl
inc
repnz
pop
inc
mov
push
dec
and
lcall
and
jo
push
pop
repnz
mov
adc
add
sti
outsl
filds
or
add
inc
jp
add
outsb
and
adc
dec
scas
dec
adc
mov
adc
push
sub
sub
outsl
mov
dec
pop
mov
pop
push
adc
shrl
push
add
xor
stos
inc
negb
rolb
adc
sahf
cmp
cmp
push
cld
lock
add
out
inc
add
xor
cmp
add
rorl
loop
movsb
icebp
aaa
ret
in
mov
leave
in
mov
mov
mov
adc
out
xchg
cmpsb
add
cmpsl
mov
jnp
adc
cmp
movsl
or
or
push
ret
add
iret
sub
out
xor
cmp
or
filds
adc
adc
mov
cli
xor
push
adc
sub
jno
pop
jl
cmp
jae
jno
and
push
jae
xchg
jbe
pop
call
sub
popa
mov
xor
push
je,pt
pop
adc
push
aam
add
jae
outsb
mov
sbb
rclb
ljmp
cld
push
push
push
push
push
push
rcrb
add
pop
inc
add
inc
inc
inc
inc
inc
dec
call
jecxz
dec
push
sbb
adc
pop
call
sbb
pop
sbb
sbb
incl
jb
push
pop
add
add
sub
adc
incl
testb
inc
add
mov
pop
add
add
sbb
lea
push
add
add
jno
ja
fdivr
pushl
jp
inc
add
jle
cld
jl
sbb
lods
add
decl
xchg
outsl
shlb
push
add
lock
and
or
add
add
inc
out
mov
imul
aas
insl
aaa
cld
neg
in
or
xchg
pop
push
insl
leave
adc
aas
inc
imul
mov
xor
xchg
push
push
pop
xor
xor
mov
imulb
sub
std
or
and
hlt
sbb
aas
in
mov
sbb
xchg
aad
fildl
iret
xchg
or
fnsave
fistl
mov
xor
loop
outsb
or
mov
aas
stc
dec
lahf
add
rclb
push
sub
iret
pop
cmp
push
push
mov
inc
js
shll
sbb
or
inc
ja
insl
dec
outsb
pop
std
decl
outsb
xchg
sub
jecxz
dec
jne
pop
xchg
aam
outsb
jp
lcall
stc
jo
or
fcoms
movl
add
jbe
out
sub
fstpt
bound
cmp
mov
adc
inc
mov
int3
outsb
pushf
add
push
push
std
addr16
ja
stos
bound
test
int
jle
rcll
popf
jmp
pop
sub
rolb
in
sti
out
mov
adc
xchg
add
cmpsb
adc
mov
xchg
adc
setb
jg
rorb
pop
lahf
add
mov
addb
addb
jge
add
les
adc
adcl
fcomps
daa
test
add
jae
fiaddl
insl
sub
repnz
rolb
push
xchg
mov
adc
add
or
pop
push
jg
add
notb
je
dec
test
rcll
add
dec
push
mov
pop
stos
inc
insb
in
adc
in
mov
or
add
mov
lods
sub
jl
sahf
inc
jnp
push
push
adc
mov
stos
divb
add
lret
mov
inc
push
inc
roll
shlb
shll
add
sbb
rclb
rep
jnp
xor
or
enter
sbb
add
jp
and
sbbb
les
shll
fstpt
sub
test
mov
andb
rorb
push
orb
hlt
push
pushw
jo
push
in
hlt
ds
sub
faddl
sbb
push
jle
pop
shrb
pop
pushf
push
dec
mov
andb
out
mov
subl
pusha
or
mov
push
ret
jle
jne
sbb
ljmp
jg
repnz
negl
pop
sbb
sbb
xchg
cmp
push
addr16
push
out
push
mov
xchg
add
inc
nop
xor
sarb
scas
mov
dec
mov
ljmp
clc
ds
adc
mov
into
sbb
inc
add
adc
mov
adc
xchg
inc
jae
cmp
daa
jbe
in
pop
roll
add
cmp
out
loopne
mov
jnp
add
out
push
push
popa
loopne
out
loopne
cli
inc
or
lods
fnstcw
pop
inc
loopne
cmp
add
fs
jmp
xlat
fiaddl
sahf
pop
ss
xchg
pop
arpl
cmp
xchg
add
cs
sub
or
mov
rorb
repz
gs
pop
aam
sbb
fistpl
adc
lods
insb
add
fwait
imul
or
or
cld
cmpsb
insl
or
push
scas
xor
int
mov
and
inc
pop
add
mov
loopne
fdivl
or
loopne
insl
add
add
or
rclb
add
loop
outsb
add
sbb
mov
jg
int
cmp
loopne
stos
or
loopne
mov
mov
add
or
fs
push
lock
adc
or
push
inc
xor
or
jnp
sbb
sbb
mov
fldenv
loope
aam
data16
jecxz
pop
pop
mov
mov
or
movb
pop
cmp
loopne
or
lods
cmp
pop
loopnew
rorb
pop
loopne
cli
pop
push
sar
xlat
loopne
neg
xchg
push
sbb
mov
scas
imul
inc
push
sbb
push
xor
loope
dec
inc
sysenter
ds
add
mov
push
or
loopne
fsubrl
add
push
sub
xchg
pop
fcmovb
push
pop
or
loope
push
or
jns
mov
daa
ljmp
sti
in
sbb
and
add
fistps
cmp
mov
sbb
cld
cmp
cmp
dec
pop
xchg
push
sub
inc
add
fwait
xchg
shlb
pop
push
data16
orb
in
or
in
sbb
mov
add
nop
lock
mov
cmpsl
xor
inc
cmpsb
sbb
loopne
mov
int
mov
test
es
pusha
cmp
sbb
adc
sub
icebp
dec
imul
add
inc
into
and
push
fisttps
push
jo
dec
loope
ficoml
jbe
and
xor
sahf
jo
cmp
cmp
mov
mov
lret
dec
out
loopne
ds
repz
stos
cld
loopne
or
outsb
loope
stc
xchg
ljmp
loopne
cs
loopne
cld
push
mov
mov
loopne
ds
lcall
sub
push
icebp
or
repnz
shlb
or
inc
inc
shlb
ficomps
push
stos
jno
sbb
lock
or
jb
ss
mov
push
mov
sub
or
sub
add
and
pop
fimuls
jo
cmp
sbb
jo
pop
loop
icebp
xchg
lock
or
xor
or
mov
aaa
mov
add
fstpt
add
dec
stos
mov
xchg
jo
lret
lock
insl
push
xor
mulb
adc
sar
push
sbb
dec
push
insb
lcall
or
jo
inc
or
inc
pop
jle
addr16
mov
xor
bound
testb
mov
in
cmp
pop
lock
push
ds
jo
push
jbe
sub
adc
push
sub
adc
xchg
jo
xlat
jne
fadds
sub
ljmp
jo
into
inc
push
rsm
mov
push
and
mov
sti
xor
inc
jge
or
and
add
xor
add
push
sub
cmp
xchg
rclb
sbb
sbb
add
cli
pop
push
mov
add
cmp
push
add
lock
xor
out
or
push
pop
dec
sub
mov
lock
sahf
xor
icebp
jo
xchg
mov
fiaddl
ret
mov
adc
or
fs
test
add
sbb
js
fsubs
adc
andl
mov
insl
subl
adc
jno
jo
xchg
inc
outsl
adc
adc
nop
into
cld
mov
xchg
adc
divb
shll
xorb
mov
push
jbe
cld
in
outsl
add
jae
jo
jae
adc
jae
jae
jae
jae
int
cld
int
sub
jae
jae
jae
fdivl
jae
jae
ret
repz
std
jae
jae
jae
int3
shll
jae
and
jae
jae
jae
divb
jg
jae
jae
jae
leave
jae
jae
jae
adc
jae
jo
jae
outsl
out
int
push
jae
jae
mov
jo
mov
dec
mov
je
out
out
jae
mov
jae
mov
jae
outsb
or
mov
jae
cmpsl
jae
xor
sub
stos
jae
repz
jg
in
add
lods
jae
jae
jae
xchg
jae
jae
jae
jg
aaa
jg
jae
jae
jae
cwtl
jae
jae
jae
popf
jae
jae
jae
aaa
jg
aaa
xorl
xorb
jae
jae
jae
mov
jo
jge
jae
jae
mov
jae
lods
shlw
rclb
jo
jo
fidivl
sarl
mov
jo
enter
jo
jae
jo
pushf
jo
int
jo
jo
mov
js
jo
push
mov
loopne
xor
adc
outsb
push
or
adc
repz
jo
shlb
enter
jae
jo
jo
fdivl
dec
adc
jno
mov
pop
scas
aam
dec
mov
add
scas
jno
fidivs
adc
jno
lahf
or
pop
jno
js
popa
jno
jl
jno
jno
outsb
jno
adc
loope
mov
pop
or
pop
inc
jno
fwait
push
jo
jno
mov
call
sbb
sbb
adc
pop
ss
fcoml
sahf
jno
adc
pop
or
xor
aas
jo
sbb
jno
add
jno
sti
pop
jge
cmp
adc
dec
push
roll
inc
shll
adc
aaa
jg
jbe
inc
xlat
jbe
aam
addb
rcr
jbe
inc
aaa
jg
aaa
fdivs
inc
fnstenv
fidivs
inc
fbstp
fdivl
repz
jg
inc
fnsave
ret
inc
ret
jbe
shlb
shll
repz
jg
jbe
inc
jbe
les
inc
lds
lret
inc
lret
jbe
aaa
jg
aaa
enter
leave
jbe
into
jbe
inc
iret
jbe
int3
jbe
repz
jg
inc
int
iret
mov
int
mov
mov
jbe
inc
mov
mov
repz
jg
jbe
inc
mov
mov
mov
mov
mov
repz
mov
jbe
mov
jbe
mov
jg
inc
mov
lods
inc
mov
xchg
inc
mov
add
inc
cmpsl
jbe
shlb
fwait
stos
jbe
inc
stos
int
cld
int
cltd
test
sahf
inc
test
popf
inc
scas
jbe
lods
sbb
inc
lods
jbe
ja
je
ja
je
ja
je
ja
int
adc
ja
mov
push
je
ja
mov
push
je
int
cld
int
push
mov
ja
mov
ja
mov
ja
je
ja
mov
ja
mov
ja
int
mov
ja
cmpsb
ja
je
ja
movsb
ja
je
int
cld
int
inc
stos
ja
je
ja
test
dec
je
ja
xchg
cld
int
cld
ja
je
ja
xchg
ja
je
ja
xchg
ja
je
ja
int
xchg
ja
je
ja
fwait
ja
je
ja
cltd
ja
je
int
cld
int
ds
ja
je
ja
popf
ja
je
ja
adcl
je
ja
shll
je
add
and
cs
cmpsb
mov
je
adc
je
je
out
je
stc
fisttpl
adc
je
jbe
je
fbstp
fdivl
sub
je
jbe
je
add
je
jbe
je
jnp
inc
cmp
cwtl
jbe
je
adc
je
jbe
je
aaa
jg
aaa
lds
lret
lret
je
jbe
je
leave
je
loopne
jg
jbe
je
iret
je
jbe
je
int
jge
mov
in
xor
loop
inc
jbe
je
xchg
je
fcoml
push
bnd
adc
adc
fdivl
je
adc
sub
in
push
je
je
add
dec
adc
outsb
mov
je
mov
xor
mov
outsb
out
je
cmpsl
je
jbe
je
movsl
je
inc
je
outsb
out
adc
je
test
je
scas
je
push
mov
push
stos
fldenv
push
shrb
push
jo
data16
xchg
je
xorb
jecxz
arpl
je
adc
imul
lahf
je
jbe
je
popf
je
jbe
je
xorl
fbstp
xorl
je
jbe
aaa
jg
aaa
adc
je
mov
mov
je
jne
mov
mov
je
jbe
je
lea
mov
hlt
add
jne
jno
jne
adc
jne
jno
jne
aad
mov
jno
jne
fnstenv
adc
jne
jno
jne
fucomip
cli
add
jne
shlb
aas
shll
jne
jno
jne
mov
loop
lds
lret
jno
jne
jno
jne
jno
jne
jno
jne
jmp
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jmp
mov
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
lock
shll
jne
cmpsb
jne
jno
jne
movsb
jne
mov
aad
stos
jne
jno
jne
jno
jne
jno
jne
jno
jne
add
jno
jne
xchg
jne
lock
fcoml
jne
jno
jne
jno
jne
cltd
jne
pusha
mov
repnz
jne
jne
pushf
jne
jg
push
loopne
popf
jne
xorb
jne
jno
jne
pushl
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jne
jno
jp
pushl
push
sarb
push
rcr
push
jp
push
xlat
jp
push
aam
jo
aad
rcll
jp
call
push
fstpt
push
fdivrs
push
fnstcw
push
fidivrs
push
fistpll
push
fdivrl
push
fnstsw
push
ret
ficoms
jp
push
iret
jp
push
int3
jp
push
int
pop
push
mov
inc
push
mov
outsl
push
mov
insb
push
mov
pushl
mov
jp
push
mov
jp
push
mov
jp
push
test
lock
test
push
push
scas
jp
push
scas
jp
push
lods
jp
push
lods
jp
push
popf
notb
jp
jae
jp
push
jg
mov
push
push
push
mov
push
lods
jnp
push
xchg
jnp
push
xchg
jnp
push
nop
jnp
push
xchg
jnp
in
jle
xchg
jnp
push
xchg
jnp
push
lcall
cwtl
jnp
push
cltd
jnp
push
sahf
ss
lock
jg
lahf
jnp
push
pushf
jnp
push
popf
jnp
push
cmpb
cmpl
jnp
push
orl
iret
push
xchg
push
xchg
test
push
test
push
mov
sarl
lock
pushl
sarb
push
sarl
push
js
push
xlat
js
push
aam
and
js
push
fcmovbe
js
push
fstpt
push
fdivrs
push
fidivrs
push
fdivrl
push
fnstsw
push
ret
mov
jg
es
sarb
sarl
js
push
js
push
les
push
lds
push
lret
fcomip
jg
leave
js
push
into
js
push
iret
js
int3
js
push
mov
sub
js
push
mov
push
js
push
mov
sub
mov
scas
push
mov
js
push
mov
js
std
call
js
push
mov
js
push
mov
js
push
movsb
js
push
movsl
js
push
stos
ret
mov
ficoms
js
push
scas
js
push
lods
js
push
lods
js
push
xchg
js
ds
cli
jmp
fnstcw
push
xchg
js
push
xchg
js
push
xchg
js
xchg
jg
jg
xchg
js
push
lcall
push
cwtl
cmpsb
push
cltd
sahf
push
sahf
js
push
lahf
js
outsl
or
adc
pushf
js
push
add
addl
cmpb
sbbl
push
xchg
push
xchg
push
test
push
test
push
mov
push
mov
push
mov
push
mov
fdivrs
dec
push
js
push
mov
ljmp
push
cld
aam
dec
add
jns
fstpt
mov
fldl
mov
xlat
push
mov
incl
pusha
mov
sub
push
mov
jns
push
mov
jle
mov
jp
movsb
jns
stos
jns
push
out
clc
fwait
jns
jns
push
mov
push
jle
push
xchg
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jle
ja
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
sti
incl
fstpt
jl
jg
fnstcw
jl
jg
jl
jg
jl
add
jg
fnstsw
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jmp
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
ljmp
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
pushf
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jg
jl
jl
inc
sarb
sarl
jl
inc
xlat
jl
inc
aam
inc
inc
aad
inc
inc
fidivrl
jl
inc
fdivrs
fnstcw
fidivrs
fistpll
fdivrl
fnstsw
ret
inc
ret
jl
inc
sarb
jl
inc
jl
inc
jl
inc
les
lds
lret
inc
lret
jl
inc
enter
leave
jl
inc
into
jl
inc
iret
jl
inc
int3
jl
inc
int
cmp
inc
mov
jl
inc
mov
and
jl
inc
mov
es
mov
daa
inc
mov
and
mov
and
inc
mov
jl
inc
mov
jl
inc
mov
jl
inc
mov
jl
inc
mov
mov
icebp
jl
inc
mov
jl
inc
cmpsb
add
arpl
movsl
arpl
arpl
arpl
arpl
arpl
arpl
mov
arpl
arpl
fwait
fwait
arpl
arpl
arpl
cmpb
jl
inc
cmpb
jl
inc
xchg
push
inc
xchg
test
test
mov
arpl
roll
dec
popa
fdivp
mov
out
mov
and
popa
and
popa
or
push
add
ror
repz
rcl
xlat
aam
fidivrl
iret
repz
fcomp
fidivrs
repz
jnp
jnp
iret
repz
jle
jg
popa
imul
push
jns
out
and
push
and
jns
out
es
daa
push
mov
push
and
out
jns
notl
push
pop
adc
ds
js
out
sbb
pop
sbb
iret
loopne
cmp
sti
aas
jecxz,pn
cmp
jns
add
push
add
jb
repz
out
out
in
cmp
repz
push
ljmp
pop
out
push
call
iret
repz
pop
out
sahf
out
pop
fcomps
fstps
ficomps
fistps
fdivrl
sbb
jns
test
rcrl
push
pop
les
out
adc
adc
sahf
out
sbb
out
int
mov
mov
push
mov
repz
pop
mov
mov
mov
iret
repz
mov
mov
repz
iret
repz
movsbl
or
cmp
mov
cmp
repz
iret
repz
mull
cmp
repz
nop
rcll
repz
shll
cwtl
iret
jnp
out
cltd
sub
ljmp
pop
push
das
into
sub
xchg
rolb
cmp
popa
or
lret
incl
push
push
dec
pushf
mov
pop
or
dec
pop
roll
pop
scas
lods
jge
dec
cld
imul
xchg
sbb
pushl
repz
mov
cmp
dec
movsb
movsl
and
outsl
inc
sbb
adc
ja
add
jnp
decl
adc
test
scas
into
mov
lcall
mov
mov
stos
xor
test
adc
mov
lods
and
and
push
cmc
lahf
shrb
cmp
push
mov
stc
pop
dec
add
in
mov
jp
cmc
inc
dec
dec
rcrb
test
jb
lock
inc
lret
cmp
mov
gs
sahf
and
push
mov
jle
jl
or
pop
call
lods
andb
imul
push
in
jno
mov
shlb
adc
into
jbe
sbb
pushl
mov
sub
or
imul
pop
sar
imul
mov
adc
jecxz
ljmp
xor
push
movsb
sbb
sbb
pusha
push
add
sahf
shl
adc
jl
inc
push
inc
stc
xchg
xchg
mov
cmp
or
ret
int3
incl
inc
out
inc
out
sbb
inc
pop
inc
outsb
inc
mov
inc
test
cmpsl
inc
outsb
movsb
pop
xchg
push
xor
aas
jecxz
fdecstp
outsb
add
or
mov
mov
into
and
or
xor
cmp
loope
jmp
xlat
or
push
je
insb
rcll
or
test
cmc
insb
cmp
incl
inc
push
inc
push
inc
testb
out
out
inc
inc
fsubrp
push
add
sbb
cmpsb
in
in
dec
mov
adc
dec
mov
inc
outsb
inc
push
inc
pop
inc
add
ss
sbb
incl
inc
pop
inc
push
daa
push
xor
lds
cmp
mov
and
mov
incl
inc
xchg
inc
sahf
inc
xchg
inc
jbe
jle
callw
pop
mov
pushl
pop
test
cs
xchg
movsl
jne
sub
testb
out
out
inc
inc
fiadds
inc
into
inc
pushl
cs
mov
push
jns
pop
and
mov
push
push
mov
dec
inc
decl
ds
es
cs
push
inc
movb
out
cmc
mov
lahf
iret
or
cmp
cmpsl
call
xchg
stc
sarb
mov
hlt
dec
mov
add
push
data16
decl
inc
and
jb
cwtl
ss
in
sbb
sbb
repnz
jmp
jno
dec
dec
test
xchg
dec
dec
dec
xor
dec
pop
dec
rorl
addr16
jne
sub
add
jmp
adc
jmp
add
dec
pop
dec
call
dec
scas
dec
lahf
dec
xchg
sbb
sub
and
add
fdivrl
jmp
jmp
mov
inc
dec
inc
dec
inc
and
inc
addl
cmp
int
dec
push
jno
pushl
dec
xor
fdivrs
sbb
out
xor
ss
or
sub
inc
sbb
inc
lock
push
inc
cmc
inc
cld
xor
lods
mov
mov
insb
cli
mov
decl
lcall
and
jg
popa
inc
imul
sub
rolb
in
rcll
inc
or
xor
cmpb
in
jge
jg
push
xchg
xchg
sarb
ret
inc
mov
and
dec
or
dec
in
in
dec
test
test
ds
dec
daa
mov
das
mul
inc
scas
sbb
jmp
lods
jnp
dec
pop
dec
or
dec
pushf
dec
push
dec
sub
loop
jp
lcall
lcall
clc
sub
pop
mov
xor
add
mov
dec
fs
push
dec
pop
dec
dec
decl
dec
out
sbb
dec
sahf
dec
rclb
push
sub
mulb
sti
call
jp
insb
std
decl
decl
jmp
dec
lret
test
gs
rcr
rolb
pop
fcomps
nop
out
and
jle
mov
inc
gs
push
inc
testb
xlat
inc
lahf
inc
mov
pushl
mov
dec
mov
rclb
test
hlt
dec
xchg
sarl
lds
push
sar
in
sub
jae
jl
dec
dec
xor
adc
icebp
dec
jmp
sbb
aad
add
loopne
ljmp
inc
not
pop
inc
dec
negb
fimuls
inc
dec
or
fisttpll
pushl
lea
bound
gs
cmp
sahf
cmc
xchg
lock
cmp
xchg
loop
xor
dec
pop
dec
rorl
shl
imul
call
sub
and
inc
adc
out
adc
inc
jmp
dec
inc
pop
inc
lods
inc
jge
xchg
lret
or
xorb
push
cmp
jl
bound
popa
addr16
push
clc
outsb
outsl
insb
insl
push
inc
pop
pop
pop
pop
pop
clc
fbld
cmp
aas
dec
dec
dec
dec
dec
dec
dec
xor
push
loope
inc
inc
test
test
das
push
popa
mov
inc
aas
or
decl
div
hlt
cmc
cli
sti
clc
stc
cld
std
loop
loopne
out
in
ljmp
in
rcl
rcl
xlat
aam
fcmovu
fcomp
ret
rol
enter
int3
dec
mov
mov
mov
mov
mov
mov
mov
movsl
stos
stos
test
scas
scas
lods
ljmp
xchg
xchg
xchg
xchg
lcall
popf
addb
test
mov
push
add
add
push
sbb
or
mov
jg
xor
ss
xor
add
cmp
cmp
aas
cmp
add
and
and
daa
and
or
lock
sub
adc
adc
adc
add
add
add
xor
sbb
sbb
ret
xor
add
add
add
add
add
xor
sub
sub
jl
or
inc
add
lcall
orb
add
sub
xchg
lea
idiv
ljmp
lods
sbbb
xchg
and
or
push
addb
jo
int
decl
lea
sbbl
mov
mov
or
adc
push
out
repnz
push
imul
fildl
mov
aas
add
adc
test
les
aam
cmp
add
push
adc
adc
inc
cld
out
rorb
or
sbb
push
pop
push
push
jo
xor
xor
sbb
pushl
rolb
sbb
sub
adc
push
pop
sbb
sbb
ret
or
or
ss
ss
add
push
jb
or
adc
loopne
or
mov
jbe
pop
hlt
or
xor
jl
inc
add
das
les
adc
cmp
and
pop
inc
pop
inc
jbe
cmp
pop
mov
xor
add
sub
nop
push
testb
fwait
push
or
ret
add
inc
jns
add
add
sbb
shr
mov
in
decl
mov
push
inc
sbb
add
add
adc
adc
push
rolb
fidivl
insb
mov
aas
xchg
sub
or
jnp
shlb
inc
add
push
ss
mov
arpl
and
imul
inc
xor
or
mov
mov
add
and
push
mov
lock
push
lret
mov
push
pusha
add
pop
add
xor
pop
pusha
add
and
jg
push
push
jb
sbb
and
inc
loope
sbb
sti
jg
pusha
push
fdivrl
mov
or
stos
add
xorb
inc
and
pusha
sbb
sbb
push
add
pop
icebp
das
clc
pop
add
cmp
pop
pop
call
and
fistl
add
push
scas
xor
js
idivb
and
sbb
adc
nopl
icebp
das
and
popa
or
inc
jo
add
push
inc
idiv
stos
les
and
push
inc
inc
inc
push
xor
loope
loope
mov
sbb
outsl
and
icebp
pop
ret
cmpsb
mov
adc
adc
shl
add
jmp
in
cmc
jecxz
fadds
out
clc
fsqrt
clc
lock
add
not
clc
loop
std
jmp
into
add
mov
inc
arpl
outsb
fs
lock
xor
sub
sub
incl
sub
pop
pop
pop
pop
dec
jg
imul
jl
loopne
mov
mov
lea
cld
decl
lcall
movsb
loopne
pushf
add
int
xchg
cld
push
ljmp
aam
addl
incl
push
inc
outsb
pop
pop
insb
dec
pop
dec
js
add
arpl
inc
dec
decl
je
pop
jbe
or
data16
popl
mov
jg
lcall
test
xchg
addb
xlat
mov
int
rorl
or
cmp
mov
roll
fwait
es
xchg
or
jle
int
test
xchg
fld
pop
pop
dec
pop
push
arpl
dec
inc
pop
inc
sub
mov
or
mov
cli
divl
idiv
add
call
jmp
add
loope
mov
jle
mov
lock
decl
add
or
sbb
push
or
mov
and
cmp
lock
sub
and
cs
add
adc
add
or
ljmp
rclb
pop
sbb
sbb
popa
pop
movsl
mov
mov
mov
jg
loop
mov
pop
add
rolb
xchg
mov
add
int3
xchg
add
or
sbb
add
loope
cmp
ljmp
mov
adc
adc
incb
dec
bnd
incl
inc
add
lock
add
in
cli
ljmp
cld
jecxz
call
adc
jecxz
in
out
hlt
dec
div
repnz
lret
lret
or
add
enter
jmp
or
faddl
pop
dec
arpl
jg
sub
push
add
cmp
add
inc
imul
add
insb
push
add
jmp
popa
outsl
adc
addr16
xor
mov
pop
jle
mov
add
pop
push
pop
push
push
push
pop
pop
add
or
inc
out
clc
fwait
ljmp
ds
aas
cmp
jno
jg
jbe
inc
or
mov
dec
lret
add
lret
xor
sub
sub
xor
inc
cmpb
mov
dec
sti
decl
imul
xor
jp
data16
imul
aaa
jl
iret
xlat
add
mov
sub
jns
xchg
nop
testb
outsb
pusha
push
mov
jae
es
xchg
bound
jo
xor
mov
cmp
aaa
cld
lcall
add
rcr
fldl
lcall
mov
decl
add
roll
stc
mov
add
das
clc
jge
jae
popa
fdivrs
je
jg
cmp
add
popa
insl
es
pop
add
outsb
js
pop
clc
cmpsl
xchg
test
mov
mov
in
pushl
fiadds
xchg
jno
andb
mov
movsl
add
mov
or
push
cs
aas
cmp
cmp
sarb
xor
aaa
and
andb
aas
das
add
outsl
clc
insl
sti
xchg
orl
add
add
lcall
cmp
cmp
aaa
aas
inc
and
adc
sub
rolb
pop
jbe
outsb
jg
data16
arpl
jo
aam
jg
or
cld
jmp
in
mul
loop
adc
repz
jo
popa
fbld
inc
loopne
loope
cli
in
cmc
and
icebp
repz
or
sub
das
add
cmp
xor
or
xlat
ret
sub
flds
fcomip
fmul
cmp
jmp
call
add
mov
mov
add
scas
mov
fcomip
enter
mov
int
rcl
rol
push
ror
cmp
test
adc
es
sub
and
aaa
sbb
and
mov
mov
jg
pushf
sbbb
mov
add
jp
fiadds
mov
add
push
push
pop
clc
pop
popa
push
xchg
aam
rcl
jecxz
fistl
aam
int
icebp
add
add
rolb
cld
stc
jmp
add
rorl
in
in
out
into
mov
cli
call
and
cld
in
jae
arpl
jp
add
jnp
cmp
mov
ljmp
mov
mov
cmpsl
mov
xchg
stos
mov
mov
lds
or
xor
adc
add
orb
xchg
subl
repnz
je
jg
add
jecxz
jg
cmc
int3
loopne
lock
in
jbe
xchg
add
test
pop
cld
push
enter
push
push
push
push
cwtl
push
addr16
pop
pop
pop
pop
inc
mov
xchg
nop
sub
std
mov
cmpsb
xor
fs
jno
add
insb
sub
jle
popa
stos
hlt
inc
clc
and
aaa
sub
mov
mov
out
in
adc
push
imul
nop
clc
es
xchg
push
inc
add
loope
jl
jmp
loop
jmp
in
sti
aad
loopne
aam
loop
mov
int3
xchg
test
test
rcl
sti
out
add
clc
jmp
inc
fstpt
in
lock
xor
data16
bnd
xchg
imul
push
adc
dec
cld
and
sub
aas
sub
cmp
add
push
adc
adc
sbb
andps
mov
xchg
inc
sub
pop
pop
cmp
and
sub
icebp
stos
sub
sub
and
sub
lcall
test
rol
jno
inc
arpl
pusha
push
cli
lcall
pop
jb
jae
and
add
adc
add
or
add
dec
fistpll
cs
add
adc
rol
push
rclb
xor
jb
xor
call
cld
dec
xor
scas
mov
stos
scas
mov
xchg
addb
fists
popf
lea
xchg
rolb
mov
xchg
sbb
sbb
daa
sub
scas
decl
xor
rcrb
mov
push
cmp
ja
gs
mov
push
outsl
aam
and
dec
pop
dec
pop
jno
dec
pop
mov
ljmp
lods
inc
jl
inc
push
inc
cmp
jbe
arpl
add
xor
sub
scas
test
aam
push
pop
stc
sbb
stc
loop
in
cmp
sbbb
add
xor
add
out
in
repnz
pop
hlt
inc
jg
fld
sarl
pop
ljmp
outsb
leave
fmulp
lahf
mov
out
imul
call
jb
push
gs
incl
sub
add
mov
cltd
mov
add
mov
mov
sub
cli
add
jg
idiv
in
cli
in
std
jmp
add
ret
loop
int3
adc
aam
loopne
lret
jp
incb
in
fcmovnu
mov
loop
rcl
inc
roll
lret
mov
out
cld
aad
out
repnz
jo
mul
loop
hlt
lock
insb
cld
out
xchg
push
ret
fwait
xchg
stos
cltd
lahf
sahf
pushf
add
push
add
aam
pop
ret
int3
rorb
into
filds
mov
movsl
adcb
sub
cli
jg
push
clc
loopne
pop
int
iret
lret
leave
mov
xchg
add
outsl
or
cmp
xor
or
addb
mov
scas
mov
add
mov
mov
jmp
test
sahf
mov
scas
mov
mov
scas
stos
orl
test
xor
insl
jo
add
push
sbb
cltd
adc
adc
or
xor
sbb
mov
xchg
push
in
cmc
test
mov
iret
adc
add
xchg
xchg
cld
mov
aad
adcb
inc
or
sbb
add
or
add
dec
add
add
or
xor
nop
iret
and
inc
rcr
rcl
call
mov
jo
mov
test
sti
jecxz
mov
loope
in
nop
xor
push
pop
dec
dec
pop
dec
pop
dec
push
js
xor
pushl
std
jnp
addr16
pop
sub
sub
insl
outsb
insl
pusha
adc
popa
ja
decl
jle
push
mov
push
out
clc
sub
iret
ficoml
int3
xlat
xor
jo
clc
lahf
cltd
xchg
xorb
add
add
div
hlt
cmc
pop
je
clc
call
bound
inc
jne
insl
jle
icebp
fists
loopne
andb
mov
cmp
fadd
lret
add
shll
leave
es
iret
int3
into
shr
jl
sahf
sbb
add
adc
xor
sub
sbbb
add
out
push
add
daa
push
test
loope
divb
sahf
jo
xor
push
cs
xor
cmp
sbb
xor
add
or
mov
dec
or
or
inc
jp
outsl
jg
dec
cmpsb
pop
push
adc
pop
imul
jl
mov
loop
push
push
out
sub
lcall
mov
shll
arpl
cs
es
mov
adc
jnp
mov
push
cmc
add
xchg
cmpsb
cmpsb
xchg
sahf
mov
aaa
loop
xor
mov
stos
scas
mov
cli
push
loopne
test
divl
jg
mov
nop
mov
lods
xchg
mov
movsb
mov
xchg
add
or
add
inc
add
in
cld
jmp
jp
jle
ja
xor
insb
addr16
push
mov
push
mov
jae
es
xchg
xchg
test
cld
clc
mov
cmp
out
mov
rclb
xchg
jg
fnstsw
mov
popl
pop
filds
mov
aaa
add
subb
iret
dec
and
popa
insb
jne
add
push
push
mov
mov
fs
push
aas
jle
js
outsl
decl
loopne
cmp
mov
lods
xchg
test
data16
test
loop
cmp
call
std
sub
sbb
or
push
push
inc
inc
inc
andb
inc
pop
inc
pop
jo
add
incb
out
stc
stos
push
push
enter
mov
decl
cmp
and
and
ds
jecxz
lcall
mov
add
mov
out
lahf
mov
sbb
sbb
add
jg
sub
mov
test
xchg
ret
xchg
add
xchg
mov
mov
push
push
push
inc
push
inc
je
inc
add
inc
pop
inc
push
inc
outsb
add
push
add
push
mov
add
dec
push
dec
push
pop
add
inc
dec
dec
dec
mov
inc
pop
add
aaa
std
jmp
loop
pusha
scas
clc
repz
xlat
out
clc
adc
xor
test
sub
out
and
jnp
jae
sub
cmp
add
and
add
mov
std
inc
dec
push
push
add
push
jge
dec
pop
ljmp
loopne
jecxz
roll
xlat
sti
fstp
lock
lret
add
pop
into
les
enter
rolb
stos
jg
out
mov
mov
out
loope
add
ja
jb
jae
jo
pop
pop
xchg
je
decl
push
push
dec
pop
pop
add
dec
orl
decl
xor
sub
add
sub
sub
push
adc
sub
pop
sbb
push
aaa
sub
aaa
pop
adc
les
aaa
xor
xor
sub
xor
andb
jo
push
jl
mov
daa
sbbl
adc
mov
add
movsl
mov
mov
mov
and
sub
and
and
add
mov
aas
and
xor
popf
add
xchg
cli
xchg
xchg
lret
movb
cli
sbbb
aad
idiv
std
mul
jb
lock
sar
mov
cld
push
out
in
repz
std
cmpsl
lods
out
in
loop
mov
mov
loop
jle
adc
insb
adc
push
inc
pop
or
adc
xor
push
insl
xchg
add
fcomp
fcmovnu
addl
mov
mov
pusha
fdivr
hlt
loop
loope
add
stc
rcr
loope
pop
inc
aad
out
ljmp
cmpsb
leave
call
fcmove
lret
fucompp
fld
aam
mov
call
lret
sti
cli
into
int3
adc
adc
xor
add
sbb
call
and
adc
stc
push
loopne
cmpsl
vpslld
rcr
fcmovne
sarl
rol
or
aad
rorl
out
in
and
in
out
fdivrl
jg
push
add
jb
add
sbb
das
or
incb
verw
and
hlt
add
cs
cli
and
cmp
or
xor
add
or
out
push
jb
or
nop
mov
xor
xchg
test
mov
mov
mov
mov
mov
add
or
call
mov
out
insb
xchg
popl
fwait
xchg
lcall
add
les
adc
ds
and
bound
xor
pop
icebp
add
sub
les
daa
and
loope
mov
divb
and
inc
dec
dec
dec
add
inc
dec
pop
imul
xorb
or
or
sbb
push
adc
push
add
pop
jl
incl
cld
jl
jl
jns
dec
jae
data16
xor
adc
rclb
movsb
icebp
out
jecxz
hlt
clc
mov
mov
div
subb
in
in
jmp
jmp
add
loop
loopne
in
hlt
rclb
pushf
xchg
add
xorb
rcl
enter
pop
lock
std
fadd
fmulp
mov
loop
mov
mov
mov
scas
mov
adc
push
lods
lods
stos
test
mov
test
inc
lock
hlt
into
stc
test
mov
les
mov
push
fwait
mov
pop
jl
je
jl
add
test
out
cli
cmp
cmp
xorb
cmp
imul
sbb
scas
push
inc
push
push
inc
inc
push
dec
jl
dec
pop
dec
hlt
mov
jecxz
jns
nop
inc
push
dec
dec
inc
jno
and
dec
push
pop
cmp
or
xchg
jl
cmp
sub
jl
jle
aaa
xor
push
adc
pop
sbb
pop
or
push
push
adc
or
cmp
adc
inc
dec
psllw
pop
cmc
idiv
out
and
stc
out
lds
jmp
cld
loopne
cmpsb
mul
ret
or
sti
cmc
mov
jmp
jg
fisttps
out
xlat
ror
fcomp
add
lret
aam
lret
cld
iret
iret
int
mov
and
movsl
mov
out
filds
scas
jl
imul
pop
and
xor
icebp
fisttps
cmp
cmp
loope
jmp
icebp
pushl
notl
in
in
mov
loope
pusha
sbb
mov
lcall
sti
out
rcr
decl
rol
ret
adc
imul
popa
add
xchg
stos
shl
mov
out
jo
mov
fcomip
fists
orl
rol
aam
loope
mov
sti
repnz
not
mov
movsb
shl
in
loope
repnz
sub
adc
icebp
incl
out
shr
mov
ljmp
fsub
enter
flds
sub
arpl
call
dec
pushl
imul
inc
add
clc
mov
cmp
lret
lret
xlat
iret
fisttpll
ret
les
inc
mov
aam
adc
sbb
loope
add
push
inc
dec
push
or
or
dec
loope
ja
pop
rcrb
pop
inc
push
jo
push
pop
add
or
or
adc
add
and
and
lcall
xor
xor
addb
idiv
clc
cmc
pop
shlb
std
stc
cmc
in
pusha
push
imul
dec
add
dec
dec
add
inc
inc
dec
adc
cmp
scas
and
sbb
push
push
orb
ljmp
add
lock
ljmp
mov
mov
mov
inc
push
push
or
pusha
inc
dec
pop
insl
pop
cmp
inc
dec
adc
adc
pusha
lods
pop
inc
xor
mov
add
ds
xlat
fdivs
cld
incl
xchg
pushf
nop
xchg
cltd
fwait
fwait
rcll
ret
fcmovu
xchg
pop
and
add
dec
jb
out
cli
push
sbb
or
js
dec
into
incb
pop
or
sbb
sbb
dec
push
push
cmp
ljmp
lods
xor
jnp
popa
ss
sbb
mov
sbb
out
repz
in
hlt
mov
mov
int3
mov
mov
add
cli
cli
das
cli
mov
movsb
or
adc
adc
sti
mov
cmp
jmp
add
lock
mov
stc
div
inc
cld
lock
mov
lahf
cs
sub
add
das
pop
add
imul
cs
pop
ret
jo
lock
xchg
nop
add
sbb
add
sbb
dec
push
push
push
push
dec
push
cmp
les
fs
hlt
or
push
xor
dec
add
pusha
pop
sbb
xor
jle
cmpsb
cmp
jle
aas
push
adc
push
jne
jo
test
dec
pop
dec
push
and
scas
ss
jg
jnp
or
stos
test
lods
mov
or
fadd
mov
pop
or
inc
inc
add
scas
int3
lock
test
int
mov
and
and
add
int
mov
mov
jg
ret
cwtl
xchg
lret
cmp
cs
adc
addr16
clc
decl
andl
je
bound
dec
subb
sub
ss
inc
push
loopne
jg
fstp
leave
lret
add
repz
adc
test
jo
sti
aas
or
pop
add
or
add
rorb
decl
jle
mov
das
sub
fiaddl
shlb
sub
xor
fisubrl
data16
sub
adc
sub
gs
xor
cmp
insl
insl
mov
sub
dec
pop
xor
or
or
add
inc
push
pop
sub
enter
xlat
lahf
mov
lock
clc
enter
enter
lds
mov
mov
lret
add
loop
div
call
push
mov
ljmp
pusha
and
push
mov
add
fldl
and
mov
xchg
and
addl
or
add
push
add
or
mov
loopne
push
add
insb
add
or
and
push
jno
pop
cmp
or
stos
sbb
rcrb
adc
roll
aas
xchg
cmp
push
add
pop
pop
sar
add
mov
pop
sub
pusha
lods
or
daa
inc
and
shll
pop
in
add
add
add
mov
push
adc
sbb
add
add
nop
push
xor
cmp
and
inc
out
test
add
fistpl
sbb
add
cmp
aas
aaa
mov
jnp
hlt
sbb
add
push
nop
or
or
mov
pop
push
and
push
adc
jb
add
ds
cld
jg
sbb
jb
jb
add
inc
add
rolb
pop
jmp
mov
hlt
mov
add
jb
add
cli
rcl
xor
pop
adc
cmp
jb
adc
sti
adc
rcll
add
add
and
mov
cmpb
ds
popa
push
ss
xor
mov
or
sbb
cli
idiv
cmp
pop
nop
or
pop
push
inc
imul
popa
mov
or
jg
sbb
dec
shlb
cmp
daa
xor
shlb
cmp
aaa
decl
xorb
cmp
aas
pop
and
aaa
xor
call
call
aas
or
and
aaa
xor
cmp
aas
or
cld
idivb
xor
dec
and
es
and
mov
jmp
hlt
cmp
cmp
out
mov
es
sbb
cmp
movsb
jo
cmp
fwait
xchg
mov
cmp
cmp
dec
or
and
int
pop
and
and
sbb
divb
lret
mov
fdivl
xor
mov
ds
es
add
loop
sbb
adc
stos
xor
pop
mov
sbb
pop
pop
ret
outsl
outsl
pop
sbb
pop
push
or
cwtl
sbb
adc
dec
sbb
bound
push
sbb
mov
adc
adc
sbb
sbb
push
push
pop
add
ds
incl
adc
sbb
lock
and
add
xor
adc
or
nop
and
and
stc
sahf
shlb
jmp
xor
xor
xor
or
pop
ljmp
lea
inc
xor
inc
mov
js
xchg
jae
pop
or
inc
push
xor
adc
fists
popa
push
xor
jb
or
inc
or
mov
mov
jbe
mov
mov
and
xor
mov
inc
sub
inc
mov
shlb
out
inc
lock
push
lods
subb
fiaddl
adc
mov
inc
mov
add
fwait
push
mov
pop
xor
rolb
mov
inc
std
inc
notb
adc
pop
add
add
xor
aaa
dec
shrl
pop
adc
fcomps
push
sbb
sbb
add
add
xor
push
stos
sub
sbb
in
in
pop
or
xor
mov
sbb
adc
inc
sub
repnz
clc
fcomip
add
popa
sbb
or
push
push
and
add
pusha
xchg
std
adc
inc
add
sbb
sbb
xchg
sub
add
imulb
mov
out
scas
das
shll
xchg
enter
test
sub
xor
and
push
call
sub
and
pusha
inc
push
jbe
adc
and
and
inc
pop
daa
hlt
roll
pop
jb
push
mov
sbb
and
test
adcb
inc
popa
ljmp
repz
sub
repz
idiv
jmp
jb
hlt
push
dec
testl
jmp
repz
icebp
sub
cld
add
loopne
xchg
cmp
lock
and
or
and
nop
push
dec
pop
jo
rcll
aas
push
adc
mov
cmp
ss
inc
inc
inc
movsb
push
sub
clc
push
xor
mov
or
les
sub
push
fcoms
pusha
aaa
push
sbb
mov
pop
or
ss
and
and
jle
out
add
dec
mov
test
lret
sbb
sub
or
cmp
mov
daa
adc
jmp
xor
pop
xor
jg
js
add
pop
xor
add
mov
or
nop
movb
push
shrl
inc
loopne
repnz
das
mov
sbb
jo
lcall
insb
push
incb
cltd
and
mov
pop
and
scas
sbb
xor
pop
insb
pop
and
lcall
leave
cli
popa
mov
mov
int
jo
cmp
dec
inc
or
sub
lcall
add
sahf
neg
gs
sahf
rcr
mov
add
cmp
fldt
mov
push
je
fwait
popa
xlat
add
and
sti
out
mov
push
jp
lea
sub
mov
or
inc
mov
mov
lcall
popa
sub
mov
push
add
and
scas
xor
jg
mov
add
and
pop
out
lret
es
push
add
or
leave
mov
mov
jle
or
pop
inc
stc
outsb
decl
ss
cmp
add
dec
add
fneni(8087
push
sub
rcrb
push
xor
push
pop
xor
mov
insb
sti
sub
sti
add
sbb
lcall
push
mov
test
movswl
psubb
mov
outsl
pop
sub
add
pop
jno
mov
fucomip
lock
add
inc
pop
sub
cmpb
adc
es
bound
adcb
and
xchg
inc
add
and
fdivr
addl
sbb
inc
incl
outsb
incl
in
add
jle
cli
scas
mov
add
add
jo
mov
fidivrl
mov
mov
aad
mov
mov
inc
or
test
dec
and
aas
mov
fisubrl
ret
sbb
jp
lret
and
lret
mov
jno
loopne
jp
les
jle
daa
add
in
fisttps
stos
cltd
jno
mov
push
push
test
icebp
jae
je
aas
or
je
sub
test
jne
popa
clc
negb
xor
mov
fisttps
aaa
bound
add
cmpb
cmp
icebp
mov
pop
orb
decl
push
and
outsb
xor
test
jge
bound
cmp
loop
xor
lods
or
mov
sbb
adcb
or
sub
push
inc
pop
loop
fcmovnu
aas
mov
mov
imul
inc
inc
push
push
adc
imul
mov
mov
ja
jp
jbe
jb
inc
mov
adcl
cmpb
inc
lea
mov
rclb
jge
pcmpgtd
jp
add
outsl
mov
das
mov
inc
and
or
and
and
dec
lret
shll
repnz
or
orb
xor
push
push
data16
push
pop
shrb
lahf
les
inc
push
cs
scas
lret
rcll
mov
fisubs
pusha
sahf
jle
mov
mov
cmpl
sbb
sti
das
inc
mov
lea
adcb
mov
es
cltd
dec
icebp
mov
sbb
mov
mov
adc
add
pop
inc
and
or
mov
stc
aas
or
mov
inc
xchg
adc
ss
inc
mov
pop
dec
inc
icebp
or
push
push
jl
test
adc
lret
les
cmp
decl
test
pop
inc
xor
add
add
add
shll
adc
xor
je
push
mov
xchg
or
loopne
bound
xchg
andb
push
pusha
outsl
loopne
rorb
bound
pop
or
and
dec
shr
orb
jle
mov
and
or
sti
sub
sbb
cli
add
mov
cs
pop
add
fs
mov
jmp
cld
decl
mov
pusha
or
ret
jp
lock
into
outsb
inc
adc
xor
push
jbe
add
jg
rolb
inc
addl
mov
pop
pop
add
pop
decl
lcall
add
mov
clc
or
shlb
call
xchg
popf
inc
add
pusha
je
mov
sbb
inc
mov
add
or
test
cwtl
add
and
add
movb
ljmp
cmp
jp
mov
inc
ret
jle
inc
rcr
inc
or
ja
repnz
and
mov
mov
dec
fidivl
sti
pushl
mov
add
pop
je
add
jno
shr
dec
pop
lds
je
dec
sub
jno
cltd
addr16
es
sub
shl
scas
fisubrl
dec
mov
mov
sbb
rorb
roll
and
popa
lret
adc
mov
lea
sbbb
sbb
lcall
test
and
outsb
mov
mov
add
loopne
lcall
nop
hlt
adc
sti
nop
sarb
mov
scas
mov
pushf
jle
adc
mov
sbb
jo
mov
xorl
icebp
jmp
rep
mov
inc
adc
mov
push
and
data16
shl
cmp
stc
repnz
nop
movsb
cltd
ss
xchg
dec
pusha
or
xor
add
mov
push
icebp
lcall
movl
fidivrl
mov
xor
decl
test
int
sbb
mov
clc
sbb
lea
loopne
std
sub
aas
inc
sahf
jp
jbe
cld
or
pusha
aam
lcall
pusha
ja
add
add
mov
or
push
cmp
xchg
push
icebp
adc
mov
cs
outsl
in
dec
pop
lcall
jle
push
test
lea
jbe
lret
and
add
jp
loope
or
and
sbb
addb
inc
and
or
xchg
ret
in
lcall
loope
and
aaa
adc
mov
or
test
mov
test
jp
or
mov
test
pusha
movsl
push
jmp
rcrb
add
pop
add
stc
ss
rorb
pop
rcrl
dec
cmp
pop
test
jle
mov
popa
add
and
call
mov
js
add
pusha
add
pop
sub
push
sahf
adc
lcall
gs
clc
jnp
or
lock
push
adc
adc
mov
test
xor
stos
mov
mov
cmpsb
xor
xor
add
and
cmp
das
jbe
and
stc
pmuludq
add
add
sbb
fsubl
or
sbb
sahf
shrb
mov
jo
inc
xor
add
xchg
jnp
sub
dec
loopne
pop
outsb
shrb
jno
adc
push
jb
jbe
or
sub
cmp
xor
jg
cs
mov
and
ret
or
adc
stos
loopne
rclb
lods
sbb
xchg
stos
push
stc
das
adc
gs
stos
cmp
adc
jae
mov
ret
sub
mov
xor
or
jge
jg
xor
mulb
xor
cmp
addb
mov
xor
mov
and
dec
dec
mov
xlat
shlb
sbb
std
jg
inc
adc
lock
mov
add
jge
xchg
lcall
pop
mov
add
push
mov
popa
add
add
lret
clc
inc
pop
add
adc
dec
xor
adc
rcr
mov
test
jno
nop
push
push
or
add
push
clc
xchg
andb
nop
dec
into
add
jno
loopne
cld
fcomip
xchg
bound
mov
mov
ja
rol
jae
add
jg
add
jno
sbb
push
dec
mov
add
or
mov
xchg
ret
in
jno
sbb
jnp
sub
inc
push
stc
rolb
call
popa
aas
and
mov
and
push
add
mov
mov
pusha
add
nop
sub
cmc
cmpsb
decl
jb
add
add
pushl
mov
inc
mov
pop
adc
and
and
xchg
cld
inc
lods
add
lcall
incb
jo
sbb
sbb
cld
mov
sbb
push
push
imul
mov
jns
add
popa
movsb
adc
adc
data16
jbe
pop
sbb
test
xor
rorl
mov
inc
add
add
dec
or
ljmp
pop
add
sub
inc
test
xor
sahf
push
sbb
and
or
rorb
rcrb
scas
cmp
mov
sti
aaa
les
out
inc
andb
mov
pop
lcall
dec
jb
mov
cli
push
icebp
inc
and
adc
out
clc
ja
or
xchg
mov
pusha
sub
add
mov
inc
and
and
jae
shll
jo
shrl
adc
adc
fisubl
loopew
inc
jno
pop
jne
rcll
repnz
adc
push
je
dec
call
test
rolb
fs
xor
pushl
pop
jmp
jno
inc
and
stos
cld
jg
lcall
push
add
stc
and
insb
push
ss
xor
cmp
sub
jbe
loopne
sub
jo
jb
decl
adc
lcall
aaa
orb
add
sti
fbstp
loop
pop
xchg
rorl
push
xor
ss
push
jbe
adc
daa
jp
mov
mov
loopne
ja
jae
mov
inc
dec
data16
jp
or
fbstp
mov
lea
push
shrb
sbb
mov
add
stc
subb
and
jo
dec
loopne
add
push
add
mov
fistl
jae
jnp
lcall
jo
cmp
pushf
sti
jbe
xorb
xor
mov
mov
dec
xor
cmc
jg
pop
adc
push
scas
inc
jae
shlb
inc
mov
xor
outsb
add
cmp
pushl
icebp
jl
or
dec
push
inc
das
push
sub
sar
ljmp
or
push
push
mov
loope
rcrl
outsl
xor
or
push
or
jbe
orb
subb
jo
stc
shll
bound
dec
mov
roll
pop
pop
loope
and
cmp
cs
or
test
adc
pop
inc
pop
pop
mov
add
bound
fcomi
test
add
and
lea
mov
inc
adc
or
pushl
xor
mov
push
sub
sub
addr16
or
test
pop
stc
je
push
dec
adc
jle
insl
inc
sbb
das
cli
inc
data16
mov
mov
adc
jbe
ret
aas
jle
jb
mov
pop
push
inc
inc
push
test
and
cmp
std
testb
icebp
cwtl
or
sub
or
stc
xor
sar
xor
je
and
and
sarb
mov
push
bound
nop
add
clc
add
pop
push
cmc
or
nop
mov
xor
or
mov
lcall
jg
ret
push
jbe
jae
dec
jo
test
hlt
lcall
mov
stc
jg
mov
call
idivl
addr16
add
push
jns
xor
pop
dec
mov
xchg
jecxz
cld
addb
jle
jb
and
mov
div
mov
mov
stc
orb
cmpsb
ljmp
xor
mov
add
dec
sbb
test
stos
fwait
push
pop
pop
and
sbb
and
xor
stc
rolb
sub
test
lcall
jg
cli
sub
imul
cmp
lea
sub
and
bound
sbb
push
push
add
stc
mov
sub
mov
std
mov
xchg
sub
daa
loopne
sbb
inc
xor
lcall
rolb
test
hlt
rorb
test
outsl
inc
cld
shll
or
adc
stc
mov
arpl
dec
loope
cld
stos
icebp
dec
add
pop
cmp
call
testl
dec
add
xor
jge
adc
lcall
push
dec
xor
sub
or
and
pop
add
or
adc
divb
jp
dec
clc
imul
mov
push
fldt
mov
inc
or
inc
or
push
cmp
or
push
icebp
sbb
pop
add
mov
ljmp
push
add
jns
sbb
add
push
bound
test
cmp
adc
negb
lcall
mov
add
cld
pop
add
jp
je
push
and
out
cld
add
mov
sub
or
int
lret
clc
pushf
pop
and
add
xor
sub
and
daa
mov
jne
jmp
inc
lahf
dec
add
jle
in
cmp
negb
mov
xor
push
dec
pop
xchg
bound
jmp
push
push
push
push
into
das
jo
subb
orl
subl
ljmp
add
stc
add
dec
outsb
lock
add
or
jmp
sahf
aam
jle
xchg
push
mov
cld
stos
test
mov
orb
add
js
aaa
fists
inc
inc
mov
push
sti
outsb
repz
or
lea
xorl
dec
popl
pop
lret
cmp
dec
xchg
pop
mov
lcall
incb
into
or
mov
ja
mov
inc
push
mov
push
js
mov
and
sub
and
sub
inc
shll
rclb
cltd
nop
insb
and
test
cli
mov
sub
lea
popa
jb
aas
orl
cmp
sahf
jle
and
ss
icebp
cmpsb
dec
subb
push
add
push
and
lcall
aas
addb
adc
dec
or
lcall
scas
ret
lock
sarb
mov
movsb
adc
adc
pushl
cli
repz
push
cmp
sbb
roll
sbb
add
sti
add
ret
lcall
xorb
pop
mov
and
jbe
mov
incl
jae
add
flds
imull
dec
mov
testb
sbb
data16
dec
incl
stos
push
shrb
or
sahf
push
cmp
jo
sub
and
mov
dec
mov
add
ja
pop
fisttpl
adc
sub
lcall
inc
or
js
xchg
jne
pop
es
sbb
push
incl
das
les
jo
jo
insb
and
and
rcrb
mov
add
pushf
xchg
add
fistpl
inc
push
and
xchg
add
testb
lea
mov
aam
clc
int
cmpsb
call
sub
push
jg
loope
push
rorb
cmpsb
and
add
add
lods
dec
pusha
stos
jg
inc
movsb
movb
pop
test
test
add
aam
add
sub
sbb
mov
das
mov
sbb
scas
rorw
adc
popw
lods
adc
xor
andb
js
inc
ss
or
jle
ja
sbb
add
iretw
ds
jno
mov
lcall
or
pop
lock
cmpsb
sbb
sub
insl
dec
enter
and
mov
ret
adc
xor
mov
adc
and
mov
or
pop
cmp
mov
add
rolb
loopne
or
sarb
add
pusha
pop
fcomip
jbe
aam
xchg
xchg
testb
xor
jecxz
xor
and
lcall
xorb
fwait
int3
js
pop
xor
rolb
sub
pushl
fsubrl
mov
xor
jge
mov
inc
inc
xor
arpl
cmp
adc
std
mov
rolb
add
mov
jge
add
adc
jbe
pushf
mov
xor
or
repnz
add
fldl
enter
mov
shl
add
add
inc
or
cli
jp
ret
jl
or
push
enter
add
and
mov
outsl
inc
and
and
dec
pusha
sbb
rclb
incl
js
sub
and
aas
mov
mov
shlb
data16
and
xchg
and
push
lret
add
pop
inc
push
adc
inc
push
outsb
icebp
ljmp
adc
mov
lock
cltd
jle
cmpsb
mov
aas
jg
shrb
jbe
sbb
add
insl
mov
mov
or
psllw
jp
push
roll
mov
jg
add
ret
push
push
jle
test
push
cmp
fistl
inc
adc
lcall
pusha
pop
inc
and
outsl
add
addr16
cmp
jbe
jno
jge
mov
jle
and
jp
pusha
ret
jns
or
add
add
sub
sbb
jle
lds
mov
or
and
icebp
xchg
mov
inc
add
rcrl
sbb
incl
push
and
mull
cmp
sbb
push
frstor
push
and
add
xchg
mov
push
pop
xor
push
jp
push
call
call
inc
popa
and
sbb
and
sarb
pushw
cmp
add
int3
xchg
add
sbb
es
jbe
push
es
cs
add
cs
dec
in
lcall
mov
mov
jge
add
mov
push
jle
addb
mov
adc
popa
xchg
sbb
push
mov
push
adc
mov
jbe
push
add
cwtl
dec
rcrb
cmp
aaa
das
mov
lahf
stos
xchg
dec
cmp
dec
fidivl
pop
pusha
xchg
mov
dec
ljmp
lcall
and
loopne
mov
andl
sbb
loopne
mov
mov
dec
push
add
xor
icebp
sub
add
xlat
and
mov
adc
repnz
xor
pop
sub
dec
mov
mov
insl
shll
xchg
int3
add
repnz
data16
mov
pop
push
pop
cltd
subb
insb
jp
cmpb
sub
movsl
ja
adc
push
nop
add
pop
jnp
pop
push
inc
jle
lcall
das
jne
decl
testb
lcall
pop
loopne
js
pushl
enter
js
add
add
or
cmp
push
push
xor
sub
clc
add
and
adc
jle
rcrl
lea
cmp
lcall
push
add
sbb
mov
xor
xor
sti
das
pop
cmc
mov
data16
add
dec
cmp
js
call
add
push
sti
jne
mov
mov
jo
jp
inc
or
std
decl
notl
xor
jp
xor
jae
icebp
gs
lock
sub
outsb
push
mov
inc
and
mov
and
loopne
shrb
and
or
gs
or
xchg
adc
add
jbe
ret
nop
add
orb
test
mov
cli
outsl
sub
rorl
add
or
daa
pop
and
mov
jne
jae
xchg
xor
rolb
pop
mov
dec
jp
sbb
xchg
cs
push
push
nop
aad
inc
notb
mov
fimull
push
loop
out
adc
sbb
add
add
orb
push
imul
push
jl
or
inc
xor
and
inc
or
jnp
jecxz
inc
scas
push
adcl
mov
push
shrb
lret
lcall
and
repz
xor
add
fnstsw
jl
and
push
and
push
push
shrl
out
and
push
test
xor
push
lahf
adc
adc
and
pusha
mov
or
add
dec
and
pop
xor
push
dec
xchg
jp
pusha
sbb
and
lcall
sub
dec
movd
lar
add
popa
bound
dec
pop
and
icebp
lcall
or
push
lock
jl
jo
loopne
cmp
negb
push
xchg
push
and
cmp
mov
push
imul
out
adc
mov
inc
sbb
jg
add
mov
mov
push
push
inc
sbb
mov
jmp
jo
cltd
mov
cmp
ss
les
jg
adc
mov
rcrb
aaa
add
dec
pushf
fiaddl
add
insl
icebp
mov
add
push
adc
inc
cltd
and
pop
push
jmp
cmp
lcall
and
jle
js,pn
cmpb
rorb
sbb
xor
push
pop
push
movsl
xchg
adc
add
cmpb
in
testl
nop
fcomip
addb
inc
inc
inc
sbb
add
or
push
inc
les
sbb
call
jge
imul
or
call
cli
adc
ljmp
add
ss
jno
rolb
jo
and
aaa
bound
jae
cmp
pop
add
adc
cld
outsl
shlb
push
xor
sbb
add
or
stos
mov
in
and
xchg
into
outsl
push
add
jno
dec
incl
inc
sti
sub
sti
nop
xor
cltd
dec
xchg
add
pop
popa
or
fwait
in
andb
iret
add
xor
pop
lock
inc
or
pop
mov
jge
notl
add
fwait
add
dec
lcall
push
clc
add
jmp
push
push
xchg
mov
push
stc
aaa
data16
lea
inc
and
cmp
mov
mov
pop
ds
cs
lcall
popa
ds
pop
aad
rclb
out
aaa
jge
lcall
lcall
sub
or
pop
xor
lahf
and
fidivl
mov
mov
push
ljmp
cmc
push
jl
dec
cwtl
and
stc
mov
jg
pop
or
or
jo
xor
pop
loope
cld
sbb
and
or
jae
xor
lcall
adc
addr16
pop
push
sbb
ss
incl
jg
data16
es
pop
jne
call
and
out
adc
clc
pop
call
sarb
inc
and
push
rorb
adc
lods
in
les
push
xor
or
nop
jle
insl
cmpsb
decl
mov
adc
adc
into
lock
aad
inc
mov
shr
mov
and
lcall
or
push
call
stc
ss
inc
lcallw
xchg
and
pusha
xor
rcrl
rorb
pop
push
adc
cld
cmp
push
xchg
aam
je,pn
ret
adc
je,pt
lds
push
mov
or
push
cltd
push
jo
or
push
lock
stc
notb
repnz
lcall
xor
mov
sub
inc
cmp
jae
pop
sub
or
and
add
fbld
pop
arpl
loope
sbb
lods
jecxz
hlt
or
push
jmp
mov
push
rcll
add
pop
sti
ss
mov
adc
push
shlb
inc
and
bound
icebp
js
adc
xor
test
mov
bound
insl
or
sbb
pop
and
add
mov
lock
add
cmp
push
adc
shlb
loopne
sti
and
nop
sub
push
jne
das
lea
push
add
adc
push
jle
add
add
and
je
mov
incl
outsl
and
lcall
sub
inc
adc
daa
rcll
into
mov
jp
jo
cltd
inc
adc
jge
fdiv
ja
rorb
mov
mov
lret
jecxz
sub
testb
sbb
push
push
int3
add
add
decl
inc
add
sub
or
push
outsb
inc
add
cmp
adcb
jg
cmp
xchg
icebp
ret
mov
int
cmp
sub
add
sub
and
or
out
shlb
fmulp
mov
mov
test
data16
nop
rclb
jp
sub
jle
ja
dec
and
or
or
shlb
lea
fildl
cld
or
push
add
mov
movsl
inc
fs
rcl
mov
mov
pop
inc
lock
mov
cld
pop
outsb
add
add
add
add
int3
bound
movsb
call
fcmovb
jb
bound
inc
das
push
sub
test
incl
lahf
add
ja
lret
or
adc
lret
sbb
pushl
add
lcall
mov
shlb
add
outsl
adc
test
cmpb
jl
cmp
sbbb
add
dec
inc
push
sbb
out
mov
and
xchg
pop
and
movsb
xchg
pop
testl
mull
stc
jp
outsl
push
pop
sbb
je
and
adc
aam
add
sub
test
lcall
xor
sbb
jo
fwait
or
lock
xchg
mov
add
jle
lcall
xor
jp
jno
add
insb
sbb
ja
ret
cmpsb
insb
icebp
or
sub
push
stos
bound
push
mov
insl
stos
mov
rclb
lcall
jo
sar
cmpsb
ja
push
push
sub
fmul
add
add
add
jp
pop
jge
gs
pcmpgtd
arpl
enter
aaa
and
inc
or
or
add
clc
mov
ds
xor
rcrb
mov
inc
popa
and
into
sbb
mov
push
sub
adcb
add
mov
sub
mov
sbb
mov
inc
or
add
je
mov
and
add
bound
ss
mov
pop
add
mov
pop
push
add
or
sti
xorb
fisttps
test
pop
add
rolb
cmpsl
jbe
scas
cld
fbld
pop
push
int3
push
mov
push
call
add
add
inc
lds
push
and
push
pop
andl
and
or
stc
nop
bound
push
adc
lcall
add
lods
jp
jbe
pop
add
je
bound
test
xchg
and
sbb
adcb
sbbb
jbe
sub
fdivp
ret
fiaddl
rcrb
mov
cs
or
jae
stc
and
add
lea
jle
addr16
cld
add
cmp
je
into
dec
mov
dec
mov
jb
dec
shlb
jge
jle
pushl
andl
jp
and
data16
jp
sub
aaa
add
mov
cli
gs
arpl
pop
loope
add
in
xchg
mov
push
jb
add
popa
inc
inc
movsb
jle
ss
xchg
popl
addb
das
outsb
jl
jl
andb
das
xchg
jge
in
add
cmc
pop
inc
sub
add
add
sbb
imull
fildl
ja
icebp
repnz
jns
push
aas
mov
out
je
dec
mov
orb
or
add
outsb
mov
inc
push
popa
test
jne
pop
xchg
sub
mov
add
inc
cltd
push
add
inc
xchg
mov
adc
stc
lock
aaa
pop
cld
cmp
sub
bswap
lcall
mov
imul
inc
nop
adc
and
aad
add
out
orl
subb
jmp
rcr
adc
loope
and
or
sahf
rolb
mov
cwtl
pop
imul
add
mov
add
lcall
stc
mov
and
cmp
mov
rclb
dec
orb
cli
das
jns
add
sbb
rolb
shl
lods
add
sbb
jle
or
sti
jmp
sbb
loopne
clc
es
cmpsb
outsl
pusha
sub
cs
sub
or
es
es
adc
mov
aam
notl
and
repz
mov
xor
add
mov
sub
and
scas
cli
mov
je
mov
lcall
push
push
mov
cltd
shlb
test
xchg
sahf
loop
xchg
add
push
rolb
or
jg
or
jno
and
repnz
or
xchg
inc
nop
adc
mov
jg
jns
xchg
add
add
repz
pusha
inc
adc
add
ret
xchg
rolb
pop
dec
ficoms
lcall
cmp
clc
lret
testl
cmp
or
inc
add
pop
andps
and
mov
dec
and
adc
call
or
inc
pusha
push
add
pop
pop
fdivrl
and
xor
inc
fldt
stos
paddb
push
mov
sahf
ret
jmp
testl
xor
or
mov
and
xlat
add
xorl
ja
insb
mov
stc
add
pop
popa
call
movsl
or
pop
pusha
test
jle
mov
or
mov
outsb
inc
jg
fsubl
mov
adc
and
jmp
loope
mov
push
inc
sbb
add
adc
and
add
out
pop
jmp
mov
push
adc
push
adc
jnp
call
mov
add
xor
cmp
lcall
outsl
push
jl
pop
add
shlb
dec
inc
sub
jo
and
or
xor
and
es
or
adc
ljmp
sub
push
xor
and
nop
lds
mov
cli
clc
sti
je
daa
mov
std
outsl
in
gs
je
loopne
aas
mov
repz
inc
inc
inc
push
adc
xor
jbe
or
xor
out
leave
mov
lock
mov
add
adc
addb
test
add
rclb
or
mov
and
ret
sub
lods
div
add
stos
sbb
push
inc
enter
adc
push
or
inc
sti
popa
lcall
cmpsb
cmp
pop
call
push
test
add
gs
pop
pushaw
xor
out
or
lcall
inc
arpl
jne
inc
push
lea
sbb
add
outsb
dec
mov
inc
stos
inc
mov
adc
nop
mov
xor
adc
je
jo
pop
stos
pop
mov
mov
xor
or
aaa
inc
sbb
hlt
add
aaa
into
icebp
mov
xor
pusha
adc
pop
push
sbb
or
add
shrl
jg
test
and
jl
adc
and
mov
fwait
rclb
outsb
lock
xor
add
mov
lcall
stc
sub
sub
dec
cli
sbb
clc
jg
icebp
mov
mov
popa
pop
jno
icebp
mov
pusha
les
outsb
sub
lds
mov
xchg
dec
add
mov
jge
bound
inc
inc
push
sub
mov
incl
mov
mov
xchg
mov
and
xor
or
bound
call
jp
and
lods
adcb
fimull
lcall
or
incl
pusha
push
inc
lcall
cld
xchg
push
add
pop
and
lock
jp
push
and
mov
pop
sbb
jo
jle
roll
outsb
outsb
cmc
lock
mov
mov
lcall
cmpb
cwtl
outsb
icebp
cs
pop
lods
dec
mov
or
fbstp
adc
pop
subb
orl
xor
out
jg
mov
pop
orb
inc
adc
mov
mov
cmp
cwtl
jno
jge
mov
sub
or
lock
xorb
addr16
addb
add
push
xor
mov
adc
sahf
xchg
ja
ficoms
xor
cs
sbbb
and
sbb
into
or
stos
mov
cld
out
or
cs
fs
adc
or
sbbb
push
call
stc
sti
pop
xchg
gs
add
push
mov
and
daa
add
mov
fimuls
sbb
push
nop
cs
incl
test
lock
xor
lcall
aas
mov
out
cli
incl
lcall
or
mov
jns
jae
stos
dec
adc
ljmp
enter
adc
add
mov
pop
imul
pusha
dec
call
xor
xorl
cld
mov
mov
push
push
pop
scas
add
lcall
into
mov
pcmpeqb
xchg
fmull
push
jo
ja
jno
je
sti
aaa
adc
rorb
lods
std
pop
loop
stc
das
sahf
sbb
cmpsb
sub
push
inc
add
outsl
inc
clc
xor
adc
xchg
repz
add
mov
mov
mov
sahf
add
stc
lret
pushw
jp
sti
inc
jle
add
mov
mov
mov
mov
dec
aaa
sahf
jb
lods
cmpb
dec
aaa
nop
mov
in
adc
or
adc
outsb
mov
inc
xchg
insb
xchg
les
jo
scas
jno
mov
mov
ljmp
adc
lcall
lock
and
pop
pop
inc
insb
xchg
add
mov
mov
mov
icebp
aas
lret
loopne
inc
push
xor
and
decl
mov
push
add
add
mov
inc
cld
pushl
lods
fs
mov
popa
pop
xchg
pop
sbb
jae
js
inc
add
pop
mov
sbb
sub
fdivl
lcall
sbb
xor
nop
adc
sbb
dec
adc
lcall
xchg
push
pop
xor
mov
jle
stc
adcl
cltd
adc
jo
stc
cmp
mov
inc
jbe
mov
incl
push
pop
lcall
dec
dec
and
divl
mov
pop
xor
push
push
or
lcall
sbb
push
rolb
aam
pushf
inc
push
adc
inc
adc
into
push
xchg
das
xchg
or
jbe
ud2
push
loopne
or
jg
fwait
aam
jo
dec
lret
test
jle
in
cli
aaa
pop
aas
or
cltd
push
das
fcoms
cmc
nop
add
ret
call
shll
inc
jae
or
fcompl
mov
test
test
cli
mov
push
xchg
lcall
xor
cmpsb
jb
lcall
dec
xchg
lock
mov
or
push
inc
dec
and
inc
and
lds
xor
ljmp
pop
xor
mov
dec
jl
outsl
clc
or
data16
jae
push
xor
lds
and
add
mov
add
jg
ss
jo
fsubrs
add
xchg
fdivl
idiv
stos
jb
daa
rorb
sub
inc
loopne
leave
testb
das
shl
cs
pop
add
jb
pop
and
adc
test
cmp
push
mov
pushl
lcall
add
repnz
add
add
sub
mov
lcall
mov
test
and
mov
out
inc
subb
or
dec
or
jge
cld
rolb
and
outsl
push
and
nop
and
shll
add
insb
jno
fdivr
xor
sbb
adc
fs
repnz
or
je
or
push
push
pop
icebp
mov
or
and
loop
jo
pop
mov
or
out
jg
pop
pop
lret
push
jb
cltd
push
xchg
jle
jg
lcall
cmp
lods
xchg
add
pop
imul
cwtl
mov
stos
inc
add
push
ljmp
dec
sahf
push
add
add
dec
xor
incb
aas
jge
sub
sarb
jbe
mov
add
inc
dec
mov
js
inc
adc
xchg
lcall
outsb
outsl
mov
dec
add
imul
nop
add
insb
jle
pop
jo
dec
add
mov
pop
mov
loop
add
adc
add
add
adc
pop
mov
pop
add
cmp
xor
cs
adc
faddl
jbe
adc
add
xchg
xor
pop
addb
push
or
mov
or
mov
pop
loop
add
mull
push
cltd
jle
inc
pop
mov
shrb
sub
aam
cli
jp
addb
fcom
addl
and
sbb
sti
aas
xchg
add
push
fs
or
jle
lcall
xor
sahf
scas
mov
mov
adcb
add
into
or
sbb
jp
mov
mov
xor
and
mov
dec
push
jp
jle
mov
cmp
sbb
icebp
mov
add
arpl
outsl
or
mov
imulb
jbe
aas
nop
inc
mulb
ficoml
mov
mov
add
sahf
xchg
jle
or
jmp
and
add
jno
xorb
or
inc
cmp
adc
dec
dec
inc
icebp
lcall
push
push
or
gs
bound
cli
inc
or
add
addb
jp
or
mov
bound
add
pop
add
cwtd
dec
and
mov
std
int
out
push
pop
cltd
pop
adc
inc
push
clc
xor
imul
sbb
jle
jae
pop
xor
dec
push
add
inc
xor
stc
add
xor
push
push
cld
or
pop
push
mov
dec
and
pop
push
ret
sub
jmp
and
xor
jle
inc
lea
and
pop
lock
test
jbe
sub
dec
jae
pop
add
ja
sub
jno
jle
push
icebp
mov
insb
shll
add
pop
jno
or
sbb
pop
inc
mov
test
repz
cli
rorb
add
pop
rcrl
xor
incb
je
sbb
sbb
inc
test
stos
pop
adc
orb
lods
shrb
lods
hlt
mov
jge
inc
orb
stos
imulb
cld
stc
rolb
icebp
mov
push
sub
shl
jo
cmc
outsl
test
fidivrl
jp
inc
js
bound
movsb
stc
lods
xor
outsb
ss
pop
call
dec
fcomps
jle
add
inc
add
lods
loop
inc
mov
sbb
jbe
xchg
sub
or
push
and
addb
mov
jae
add
pop
or
sbb
xor
das
jbe
mov
aaa
icebp
mov
add
dec
addb
xor
add
jbe
add
push
pop
movsb
push
push
je
outsb
and
hlt
add
mov
clc
neg
add
or
clc
xor
sbb
mov
mov
das
jo
hlt
loopne
push
or
cmp
mov
clc
sbb
lcall
sub
sbbb
xor
jno
and
clc
outsl
adc
sub
sbb
or
mov
loop
mov
dec
mov
xchg
sub
sbb
jbe
lea
pushf
icebp
push
scas
lea
jbe
fwait
push
outsb
insb
into
or
and
push
push
cld
or
lret
repnz
montmul
cmpsb
outsl
pushl
loopne
lock
pushl
cmpsb
mov
incl
jmp
push
rorl
adc
pop
loopne
jbe
add
loopne
scas
inc
add
add
js
dec
js
into
test
xchg
fcmovnu
add
lcall
jno
mov
cmc
pushl
inc
and
rclb
dec
stos
ret
dec
fadds
sarb
lds
je
inc
xor
add
mov
cmp
aad
idivl
and
sti
sbb
cltd
addr16
arpl
add
dec
mov
cld
pushl
jbe
pop
jns
test
mov
xchg
cltd
jnp
pushl
je
add
xor
mov
mov
out
mov
lea
jp
inc
adc
jbe
scas
movsl
or
mov
mov
es
mov
out
pop
cmp
mov
ja
xchg
in
es
jo
jl
push
or
outsb
inc
inc
add
orb
incl
dec
dec
lcall
xchg
dec
mov
mov
jno
xor
popw
ds
and
and
or
aaa
or
aaa
lcall
stos
das
lock
cmp
or
scas
jg
insl
js
mov
int3
sub
push
sti
xor
orb
ja
cmp
shlb
add
imul
ljmp
inc
les
aam
add
notb
pop
mov
mov
fidivl
test
mov
sahf
sub
jno
inc
idivb
rcrb
pop
ss
fisttpl
outsb
mov
fiaddl
mov
cwtl
xor
subb
test
mov
add
mov
xor
arpl
sbbb
push
mov
addl
popa
inc
or
icebp
mov
stos
mov
mov
add
lcall
clc
dec
sarb
add
mov
insl
push
movsb
mov
jecxz
cmp
dec
push
add
popa
loope
test
inc
stos
inc
adc
inc
mov
push
sbb
mov
mov
and
and
lcall
fbld
roll
dec
push
stos
bound
push
sbb
mov
add
add
out
cmp
out
adc
add
jp
xor
ja
ficompl
adc
dec
and
rorb
jo
jge
mov
pusha
xor
ret
add
mov
jp
test
rolb
add
dec
repnz
mov
mov
dec
pop
and
or
pushl
icebp
inc
jge
aaa
push
loopne
push
loopne
push
add
cmp
ret
and
aad
mov
push
fisubrs
cmpsb
push
push
mov
xor
aaa
sub
dec
nop
mov
or
ficompl
add
lcall
lcall
fildll
lock
xor
sbb
addb
push
add
mov
jno
and
jno
sti
jbe
add
int
clc
out
add
mov
add
inc
icebp
fbstp
push
xor
lcall
adc
loope
mov
pop
mov
xchg
xchg
sti
inc
mov
add
inc
fcoml
stc
rsm
lock
xchg
addb
mov
ss
adc
push
and
ficoms
and
lcall
repz
loop
pop
dec
out
shlb
mov
shrb
mov
push
lea
jnp
pop
xor
pop
push
push
nop
int3
push
jecxz
insb
cmp
inc
dec
aam
inc
ljmp
outsb
stc
das
jp
inc
lea
add
cmp
rorl
jp
nop
lcall
push
push
mov
xorb
cmpb
add
xchg
nop
data16
idivb
xor
sub
add
xlat
nop
inc
daa
sahf
or
pop
test
out
ljmp
adcb
jg
or
jg
add
jle
icebp
call
cmp
push
jbe
push
jne
add
lcall
icebp
mov
jle
jae
add
incl
dec
or
xor
jno
test
push
mov
xchg
mov
xor
mov
add
push
add
or
push
sbbb
sahf
and
mul
add
add
int
pusha
clc
mov
mov
add
jne
test
mov
pop
mov
pop
push
data16
push
jle
sub
xchg
test
jge
jbe
js
add
jno
jo
or
stc
rcrb
add
clc
jle
add
jp
mov
lcall
jge
mov
shrb
cmp
loopne
add
cmpsb
cmp
jp
shlb
sbb
mov
mov
fmuls
jbe
daa
loope
mov
repnz
push
push
xchg
lcall
push
mov
aaa
push
pop
shlb
jle
lcall
out
negb
nop
jb
cltd
mull
jno
inc
add
or
push
push
jb
sbb
movhps
int
and
sub
add
push
stos
loopne
neg
incl
nop
jg
jge
xor
dec
dec
push
add
sub
add
pop
mov
pop
test
fadds
or
dec
jp
roll
jle
inc
xor
in
add
push
sbb
lret
aad
xchg
loopne
pushf
nop
shlb
add
mov
insb
and
aaa
std
decl
es
bound
sub
sbb
pusha
scas
andb
sbb
or
scas
xor
aaa
jo
lock
faddl
mov
or
push
lea
add
xor
fisubrl
ja
int
hlt
lahf
and
and
adc
jo
fwait
mov
and
push
and
loope
sub
rcrl
adc
and
insb
mov
or
xchg
dec
or
inc
jno
and
pop
add
sbbb
mov
ja
stos
fmuls
adc
incl
xchg
jnp
adc
add
lods
adc
adc
test
bnd
xor
je
pop
or
add
cmpsb
cltd
jb
nop
pop
lock
adc
mov
sbb
xorb
sbb
cpuid
cli
cmc
andl
jne
addb
dec
sbb
mov
ss
cld
and
push
add
fwait
adc
pop
je
add
fdivr
data16
js
push
pop
ja
dec
mov
lods
adc
mov
jg
mov
push
xor
adc
cltd
push
mov
and
sbb
mov
mov
les
push
adc
adcb
adc
or
data16
ss
rcll
incl
jg
mov
lds
js
mov
push
and
mov
aaa
add
out
push
call
sbb
adc
sti
data16
add
dec
mov
mov
sub
stos
and
mov
in
fisubs
push
out
pop
jno
pop
adc
add
fs
mov
add
pop
pop
xor
and
test
jmp
pop
lret
stos
lds
repnz
lcall
mov
adc
jge
add
sbb
or
xor
lret
push
sahf
adc
sub
dec
lret
aad
adc
mov
sbb
iret
adc
or
push
or
jns
mov
pop
je
pop
cli
aaa
jns
lcall
icebp
jg
jg
jb
or
jns
mov
pop
mov
sub
lcall
jnp
add
and
adc
jo
add
pusha
xchg
in
or
jecxz
mov
or
push
das
rorb
mov
out
addb
repnz
dec
adc
adc
xchg
into
mov
jl
and
inc
adc
and
je
xor
lea
dec
push
adc
add
bound
mov
lock
mov
mov
loopne
icebp
jge
mov
add
jnp
test
decb
push
pop
lock
add
test
mov
xor
mov
add
add
add
add
cs
ljmp
add
sub
push
pop
jge
int3
inc
mov
dec
aaa
bound
repnz
mov
jbe
stc
and
pop
stos
jno
sbb
call
mov
insl
popa
sub
aas
fdivr
and
popa
pop
outsb
adc
pusha
adc
or
push
mov
or
stc
mov
adc
adcb
push
lods
test
push
cmp
adc
inc
loop
inc
sbb
jo
mov
xor
and
inc
mov
sbb
jge
jno
add
mov
jmp
and
and
adc
movsl
call
push
adc
dec
xchg
xchg
push
insb
incl
push
dec
push
xor
lock
inc
aas
ret
loop
in
ljmp
mov
adc
lock
bound
outsb
stc
andb
je
test
adc
stc
mov
pop
jne
inc
dec
xorb
push
add
pop
xchg
or
xchg
pop
scas
or
call
fimuls
xchg
or
push
icebp
mov
or
push
or
aad
jo
mov
xchg
push
repz
jge
je
add
movsb
js
inc
orb
inc
data16
inc
xchg
cmp
or
xchg
loopne
jmp
cmp
and
bound
adc
push
cmpsb
fs
inc
jne
sbb
add
pushf
and
adc
mov
sahf
jmp
adcb
add
adc
mov
dec
inc
and
stos
addl
mov
push
jbe
pop
add
inc
test
push
leave
cld
xor
mov
cs
into
inc
cmp
and
add
and
adc
pop
add
mov
lock
add
stc
sbb
inc
pop
mov
mov
inc
xor
add
sub
push
mov
mov
sti
xor
ret
ja
into
data16
cltd
sub
xlat
cmp
sar
lods
push
or
mov
andl
lcall
lods
mov
inc
stc
xchg
push
insb
data16
jae
fwait
push
mov
divb
and
and
sbb
sbb
mov
jne
xor
add
adc
lret
or
popa
xchg
push
insb
inc
enter
in
or
cmpsb
dec
pop
nop
xchg
dec
and
jge
mov
push
setp
cmp
add
mov
and
lcall
or
adc
bound
add
or
xor
movsb
push
xor
in
jg
and
je
jo
orl
mov
clc
add
sbbb
mov
xchg
out
push
repnz
jbe
les
or
or
cmp
mov
mov
shlb
js
mov
mov
or
and
add
sahf
and
sbb
mov
dec
jp
adc
xchg
lret
lds
out
and
push
clc
mov
repz
inc
dec
cmpsb
and
sub
addb
add
pushl
jg
add
add
pop
xchg
add
inc
xorl
or
je
rorb
xchg
jno
mov
push
jle
or
inc
xor
sbbb
inc
inc
mov
mov
int3
xchg
stos
inc
sahf
inc
and
mov
mov
loopne
mov
fs
dec
test
or
rolb
add
or
mov
pop
loopne
aaa
xor
lea
stc
or
jne
aaa
cld
mov
sub
mov
sub
popl
push
rolb
add
sbb
dec
stc
jg
and
push
test
cli
addb
add
mov
clc
lock
jno
pop
and
or
fs
adc
xchg
xchg
fisubrl
mov
icebp
push
mov
jmp
add
incb
pop
fcmovbe
add
aaa
lcall
mov
cmp
inc
int
ss
sub
add
push
add
das
test
push
xor
sbb
les
or
ret
sub
mov
lcall
lcall
scas
xor
jg
and
or
fidivrl
add
xor
clc
sub
dec
lcall
inc
ret
jbe
pop
dec
adc
scas
add
sbb
lcall
sub
sub
fwait
jnp
add
push
xchg
add
jp
sbb
jo
cmp
push
mov
lock
jae
push
jge
dec
inc
test
adc
cmp
cli
or
mov
in
int3
adc
dec
mov
cli
push
and
jno
inc
add
addl
pop
adc
shll
sbb
test
push
jl
shrb
pop
xor
inc
add
and
pushl
repnz
int3
push
loopne
adc
ja
test
std
aas
dec
clc
and
jge
mov
cmp
orb
mov
inc
pop
cwtl
jbe
and
and
call
add
and
dec
lea
and
and
ret
inc
inc
or
push
cmp
lcall
mov
rclb
sbb
ja
jg
loope
push
lea
mov
add
push
sbb
xchg
inc
outsb
inc
cmp
xchg
pop
les
test
ret
push
pop
loopne
fcompl
ja
mov
dec
dec
pusha
push
push
ss
cmp
or
shl
sarb
and
push
or
sub
inc
addr16
stos
repz
or
inc
push
push
jo
sarb
dec
inc
add
sbb
lea
mov
sbbb
loopne
addb
andb
pop
insl
xor
or
or
sbb
clc
push
and
es
outsl
push
pop
push
push
and
sarl
mov
xor
pushl
lea
and
push
add
xor
pop
subb
mov
push
sub
scas
pusha
inc
popa
aas
popf
js
in
pushl
jbe
add
mov
test
imul
stos
ljmp
loop
inc
jg
cltd
sub
or
jno
adc
test
mov
push
inc
js
ja
sub
mov
and
pusha
add
jbe
loopne
push
xor
jno
faddp
jbe
dec
push
lea
cld
call
jl
add
inc
lret
loopne
add
add
movsl
stc
push
jo
comiss
enter
and
lods
andl
mov
cmp
pop
cmc
fwait
and
push
bnd
stos
mov
mov
lcall
inc
sbb
and
sub
or
cwtl
mov
jle
hlt
outsb
call
jae
inc
addr16
or
add
mov
les
js
push
jp
adc
push
jle
and
lcall
pop
jno
cmpb
pusha
clc
arpl
pusha
add
imulb
dec
arpl
scas
add
or
jle
cli
add
rcrb
xchg
inc
mov
xor
inc
cld
stos
stos
jbe
inc
add
ss
push
dec
add
pop
aaa
sub
jp
and
adc
add
mov
cltd
test
loopne
pop
ret
add
lcall
and
cmp
int
outsb
les
cli
pop
add
cmp
das
lea
loopne
inc
mov
inc
repnz
mov
jbe
and
cmp
adc
xor
jno
add
nop
xor
and
mov
add
imul
xchg
pop
push
out
mov
icebp
push
loope
xchg
aas
addr16
adc
jo
jp
insb
push
jg
cs
inc
stc
outsl
xchg
add
mov
imul
mov
jo
sti
push
test
sbb
lock
lret
arpl
nop
pop
mov
sbb
add
aas
mov
dec
jge
jle
mov
push
mov
ss
adc
icebp
outsl
pop
jbe
cmpsl
nop
pusha
add
add
stc
daa
xchg
jle
arpl
mov
and
loopne
jg
sbb
jb
loopne
shrb
pop
fldenv
movl
xor
rclb
adc
add
clc
mov
in
lock
jae
push
pop
add
pusha
push
pop
lock
dec
in
cmpsb
pop
add
je
mov
add
cmp
add
stc
adc
roll
fadds
loope
out
xorb
stc
aas
mov
jle
nop
add
xchg
popa
pop
and
aad
or
notl
mov
sahf
push
lea
aaa
sahf
sti
jbe
adc
jmp
mov
nop
xor
adc
mov
loopne
out
xlat
adc
imul
adc
mov
mov
aam
and
sahf
jge
test
mov
lcall
test
jnp
rclb
xchg
fdivrl
imul
ljmp
jne
lea
js
add
mov
loope
mov
adc
inc
je
push
lock
push
jp
insb
daa
pop
cmp
dec
clc
xchg
sbb
jbe
add
mov
push
mov
lcall
add
and
push
pop
jl
or
pop
mov
sti
xor
dec
decl
adc
clc
jl
xor
jo
repnz
fs
cmp
adc
push
cmp
loop
jg
pop
jnp
mov
pushf
pusha
mov
dec
lock
hlt
bound
cli
jp
pop
sub
jge
dec
mov
repnz
or
add
xor
test
mov
mov
dec
cld
mov
and
push
sbb
divb
and
das
bound
pushl
lds
ds
icebp
mov
push
push
and
xor
cmpsb
aaa
cmp
xor
pop
xchg
push
stos
add
adc
mov
adc
xchg
jp
jns
mov
or
add
push
or
shr
insb
add
jae
test
pop
fdivl
aas
shrb
test
push
mov
jno
cmp
outsb
clc
ja
sarb
and
inc
shrl
sbb
clc
add
mov
imul
test
jae
ja
sub
outsl
cli
filds
adc
fs
add
sub
je
add
jb
or
pop
push
push
sub
adcb
mov
data16
lcall
mov
pop
bound
rorb
fsub
cli
or
lcall
test
ja
in
ljmp
fcoml
adc
loope
jbe
and
pop
rclb
xchg
mov
lea
or
repnz
notb
sahf
and
pop
lock
lcall
loop
xor
adc
jl
and
push
mov
aaa
sbb
inc
push
add
add
xor
and
and
jge
or
testl
incb
mov
loope
test
cli
xchg
adc
aaa
sbb
xchg
push
and
data16
pop
push
addb
inc
inc
orl
mov
decb
lcall
add
sub
inc
repnz
ds
lock
or
popa
xchg
pop
push
add
repnz
mov
mov
nop
ret
lods
push
sbb
push
pusha
xor
adc
clc
ja
jbe
stc
inc
icebp
inc
test
fwait
dec
xor
or
addl
bound
movsb
xchg
sar
xor
xorb
push
sub
mov
shr
ljmp
test
adc
sbb
and
in
shlb
xchg
lods
ss
push
shlb
cmp
ljmp
sti
test
pop
mov
clc
mov
mov
adc
sahf
xchg
sub
jl
lock
andb
fcmove
fsubs
lret
lock
add
xchg
or
jno
push
or
jno
xor
jl
dec
xor
sub
rcrb
sbb
xchg
lods
xchg
and
cmp
std
decl
loop
sti
adc
icebp
rolb
jno
mov
jb
add
adc
fcomip
sub
adc
rcrb
jge
rcrb
add
sbb
dec
lcall
loopne
dec
and
and
jns
pop
mov
dec
pop
cwtl
adc
stos
or
dec
push
jae
mov
stos
imul
ret
inc
and
sbbb
fs
pop
shll
sbb
pusha
mov
push
push
pop
mov
jg
loopne
loope
push
dec
repnz
mov
lcall
inc
add
sbb
ja
add
inc
pop
outsb
or
adc
jo
lret
inc
lds
and
cmp
rclb
push
or
sar
cmp
jbe
aaa
dec
fisttps
pop
and
and
fs
call
std
cmp
mov
lcall
lea
adc
mov
addb
add
or
push
and
insb
jp
nop
out
aam
push
xor
add
mov
inc
pop
cmp
mov
sub
adc
sub
outsl
mov
ficoml
add
xor
mov
xor
sbb
pop
negl
cmp
lock
add
push
enter
movb
call
xchg
rcrl
push
xor
jns
incl
mov
icebp
or
test
je
test
inc
mov
pushf
and
jle
int
movsb
or
mov
imulb
shll
cltd
int3
inc
and
inc
add
push
push
aad
loopne
out
and
mov
sbb
push
sub
shrb
sub
add
mov
adc
mov
andb
arpl
jo
jp
cmc
jmp
mov
inc
mov
sbb
pop
dec
pop
jg
ljmp
and
loopne
sbb
dec
inc
bound
pop
dec
fwait
mov
push
outsl
jbe
mov
add
pop
ret
push
dec
mov
sti
jne
inc
mov
data16
push
and
push
sub
pop
or
push
push
repnz
add
cmp
pop
sbb
and
and
mov
lods
push
adc
push
enter
bound
or
loopne
cs
dec
rorb
inc
pushf
in
add
dec
in
mov
stos
outsl
add
dec
mov
shlb
and
mov
cmp
rolb
sub
dec
mov
into
inc
add
and
cmp
sbb
sub
jp
push
mov
mov
loopne
cmp
clc
stc
xor
jp
pusha
pop
jne
fcomps
push
sub
aad
test
loop
or
lea
add
jbe
pop
pop
stc
inc
loop
mov
inc
test
mov
jbe
jg
mov
and
sbb
ja
jbe
cltd
js
add
in
addl
add
xor
jne
xchg
jbe
jae
shlb
test
cltd
mov
pop
testb
or
sub
dec
pop
in
add
fidivl
jle
dec
or
jp
push
and
add
outsb
mov
or
jns
fbstp
xchg
adc
adc
mov
int3
imull
test
mov
stc
inc
orl
sbb
dec
sbbb
es
mov
out
push
xlat
filds
mov
cmp
jnp
inc
pop
addb
jmp
adc
cmp
mov
sbbb
rolb
test
sbb
sub
data16
inc
addr16
andb
jmp
into
inc
outsl
lcall
sub
xor
andb
or
jb
mov
popa
push
lcall
call
imul
dec
mov
jp
fbld
mov
inc
or
mov
xchg
mov
push
mov
popa
dec
insb
adc
adc
aaa
add
adc
jmp
xor
fistpll
test
pop
push
sub
daa
loope
mov
lret
hlt
sbb
mov
mov
inc
mov
cwtl
popa
and
aaa
jge
addl
inc
pop
clc
das
jge
add
cld
je
xor
pop
add
dec
push
inc
mov
divb
push
sbb
lea
xchg
mov
push
ja
sub
push
fsubl
test
jle
sub
test
mov
push
mov
mov
mov
pop
xor
ljmp
add
sub
roll
jge
mov
hlt
insb
sahf
xor
mov
sbb
xchg
add
add
adc
inc
sbb
add
filds
mov
ja
add
cmp
and
pop
sti
xorb
imul
adcb
pushf
inc
cli
add
aam
lar
jo
and
fidivl
je
mov
jbe
sti
jge
or
add
or
sub
inc
loope
icebp
lea
jns
cmc
add
loopne
test
mov
adc
mov
out
ret
push
pusha
and
pushf
pusha
or
call
inc
jmp
mov
mov
cli
popf
jle
add
adc
jl
loopne
cmp
adc
or
jle
nop
stc
jbe
mov
or
std
dec
insl
sub
out
cmp
mov
mov
jge
test
mov
cmp
dec
sub
inc
adc
data16
loop
push
mov
ljmp
add
mov
push
cld
jnp
bound
mov
mov
bound
mov
test
jle
pop
or
mov
jmp
pop
push
add
add
jle
lahf
out
and
cmp
std
jo
sub
hlt
jl
incl
push
jl
test
mov
dec
rolb
rcrb
aaa
mov
add
and
mov
push
loopne
sahf
test
test
dec
inc
repnz
mov
ret
mov
sbbb
xor
int
jmp
mov
push
sbb
addr16
mov
cltd
add
icebp
incl
jg
lea
pusha
push
mov
jg
mov
xor
mov
enter
es
adcl
daa
and
or
mov
popa
add
push
stc
sar
outsb
jecxz
icebp
dec
es
jno
loopne
xchg
movsb
clc
jg
test
add
xchg
inc
stos
pop
inc
xor
mov
mov
nop
push
xor
outsl
mov
das
call
add
push
push
and
mov
fidivl
loop
je
loop
movsb
fndisi(8087
push
ret
push
jae
sbb
frstor
and
pop
push
and
stc
mov
pusha
jle
mov
add
xchg
mov
jo
pop
das
xchg
jle
and
mov
rclb
cltd
data16
jno
scas
adc
adc
into
push
pushf
inc
incl
xor
inc
adcl
adc
mov
inc
mov
sbb
mov
sar
insl
push
jnp
xor
xor
popa
ret
add
sbb
mov
jbe
cmp
jbe
loopne
push
jg
loop
mov
ret
addb
or
les
ficompl
cmp
repnz
sub
pop
mov
dec
std
sbb
inc
lcall
pop
add
fidivs
pop
pop
lcall
or
lcall
sbb
jno
mov
mov
pushl
or
pusha
push
sbb
and
sub
cld
mov
lcall
add
mov
xor
dec
sbb
and
mov
add
icebp
mov
dec
sub
push
lds
add
and
dec
and
adcb
mov
xor
or
arpl
ss
cs
pop
mov
or
fwait
and
cmp
push
pop
clc
ja
mov
or
push
inc
adc
push
inc
cmp
add
into
sub
push
sahf
fiadds
mov
inc
inc
inc
test
decl
sub
notl
push
shrb
loopne
pop
cld
inc
popa
mov
nop
pop
and
addl
mov
out
push
push
fs
repz
jb
rolb
inc
incl
out
cmpb
add
dec
jl
cmp
and
push
or
pop
push
jno
je
lock
dec
inc
mov
push
lret
push
sbb
push
dec
pusha
mov
add
sbb
fmull
pop
mov
add
sub
icebp
sbb
jo
pop
sbb
mov
pusha
or
sarl
icebp
push
push
loope
add
jbe
or
dec
add
pop
sbb
cld
inc
loop
inc
add
loopne
mov
sub
add
dec
popa
std
pop
inc
sub
pop
mov
sub
mov
inc
dec
inc
pop
sahf
out
mov
fisttps
enter
jecxz
or
adc
pop
rol
mov
lock
jmp
outsb
cltd
je
jle
daa
sbb
push
or
push
or
xor
mov
lea
dec
pop
adc
push
sub
mov
add
push
and
push
cs
sub
jg
nop
fcmovnbe
mov
arpl
mov
divb
sbbl
jo
test
jae
nop
fidivs
mov
mov
xor
mov
xor
or
dec
dec
out
mov
sub
pop
and
adc
add
cmpl
mov
les
mov
push
movsb
lock
pop
pop
mov
xchg
add
call
add
addl
addl
sbb
push
pusha
add
add
mov
jle
or
aam
sub
loop
sahf
sbb
adc
sarb
ja
jge
hlt
out
pusha
or
cli
dec
xor
ss
loopne
mov
xchg
or
aad
inc
bound
or
inc
sahf
addb
jbe
jo
pushl
dec
or
add
sbbb
and
rorb
mov
lcall
add
sbb
paddw
rcrb
mov
loopne
and
add
jbe
in
mov
icebp
rolb
imul
add
sub
jne
cs
mov
loope
orl
or
test
nop
push
add
outsl
push
ds
rcll
lret
ljmp
cs
test
mov
jb
mov
fimull
shrw
or
push
pop
rcl
loopne
xchg
scas
adc
inc
fidivrs
inc
test
cmp
fisubs
pop
shr
lcall
mov
ss
add
mov
movsl
add
and
add
clc
sub
inc
shr
mov
stos
add
stos
into
dec
outsl
and
mov
in
add
mov
or
add
jns
ja
add
es
je
outsl
dec
mov
jg
add
jo
or
lcall
pop
hlt
int
xchg
and
mov
xor
inc
imul
jg
mov
sub
rcrl
scas
pusha
sbb
hlt
insl
adc
pop
mov
cwtl
fdivs
inc
pop
sahf
cli
and
dec
or
sti
aaa
cmpsb
roll
ret
add
sahf
add
mov
push
mov
cmp
adc
mov
lcall
and
xor
stos
xor
lcall
sbb
pop
inc
jno
xchg
inc
icebp
cmpsb
mov
incl
dec
cmp
or
sub
lcall
jmp
and
shrl
ret
mov
push
js
cmc
jge
js
or
inc
adc
add
adc
sub
mov
mov
mov
and
mov
lock
cmp
js
push
adc
movsb
loopne
or
and
rcll
inc
sbb
pop
out
xor
incl
mov
sbb
sti
add
scas
inc
aaa
push
sbb
fisubrl
sbb
shlb
scas
sbbb
push
mov
cmpsl
inc
je
loope
pop
js
jo
pop
jno
and
mov
sahf
xor
ss
sub
sub
mov
pop
xor
insb
pop
mov
fwait
push
inc
pop
mov
mov
mov
ljmp
sti
loopne
out
rolb
jae
jle
cmpsb
repnz
pop
stc
sti
incl
jle
js
and
jbe
bound
inc
add
cmpb
mov
cmp
and
add
pusha
add
sbb
std
notl
or
stos
lods
mov
inc
push
adc
loop
add
jno
ret
inc
add
addr16
inc
dec
loopne
adc
jl
and
pop
sub
dec
adc
aaa
adc
pop
jle
or
add
xor
cltd
fs
adc
jmp
jno
or
xor
cmp
loope
out
push
jmp
push
and
push
test
add
outsb
sti
add
pop
adc
mov
adc
cmp
dec
std
pop
mov
ret
into
add
sub
jno
out
and
push
add
cmp
inc
inc
pop
and
sbb
and
aad
stos
mov
mov
inc
push
inc
and
clc
int
inc
cmpsb
sti
xor
mov
fwait
in
pop
add
call
sub
push
xor
mov
inc
pop
add
push
mov
dec
lock
mov
or
inc
sbb
aam
sub
out
clc
adc
rol
or
add
pop
sbb
xor
adc
push
loopne
orb
loopne
jmp
xchg
jecxz
adc
jp
adc
sbbb
and
jle
xor
mov
sub
lock
incb
jl
cmp
jg
dec
and
lret
jno
loopne
sbb
mov
push
shr
js
xor
dec
jo
jno
and
add
andb
mov
mov
aas
inc
bound
push
icebp
pop
notb
mulb
adcb
std
adc
pusha
add
xor
ljmp
mov
sbb
jbe
fimull
sub
inc
push
pop
test
call
xor
mov
and
int3
movb
and
mov
xchg
mov
push
sub
inc
subb
push
ja
push
rclb
push
call
ja
sbb
push
inc
add
ja
nop
mov
cli
mov
push
add
add
sub
popf
xchg
nop
nop
leave
js
sbb
nop
adc
xchg
xor
scas
nop
xorl
cmp
jge
or
aas
inc
add
jno
or
push
jmp
or
jne
ljmp
repnz
push
jg
or
add
add
push
push
mov
sub
hlt
imul
add
incl
add
outsl
add
shrb
addl
addr16
dec
xlat
sub
mulb
bound
test
testb
lea
cltd
popf
mov
movsb
inc
clc
xor
out
jl
rolb
dec
and
cmp
mov
push
cmpl
add
insb
inc
rorl
sbb
mov
and
pop
mov
push
inc
ljmp
and
xchg
sbb
and
les
daa
sbb
sbb
jl
mov
fbstp
ds
inc
add
inc
adc
and
pop
incl
inc
es
lods
sub
dec
orb
pop
inc
mov
jl
dec
mov
sub
je
call
jo
fs
mov
cld
scas
mov
pushf
cmp
and
pop
jne
fs
sbb
push
add
cmpsl
mov
scas
sarb
push
mov
xchg
aas
dec
orb
cli
stos
add
inc
xor
mov
mov
sbb
cmpb
icebp
or
addr16
sbb
inc
adcb
jle
cmpsb
idivb
or
dec
shll
push
push
adc
inc
sbb
inc
roll
mov
fisttps
sbb
add
ljmp
pop
and
lcall
dec
mov
es
inc
mov
inc
loope
hlt
jl
jno
or
mov
mov
repz
add
dec
stc
cmovo
jmp
add
cmp
insb
sti
adc
add
inc
das
call
sbb
add
jnp
or
jbe
push
xorl
addl
push
sbb
movsb
out
add
inc
inc
adcb
sarb
push
mov
add
mov
dec
hlt
pop
push
popa
pushf
shlb
outsb
shrb
add
loope
inc
mov
mov
imul
fidivrl
and
test
jo
mov
adc
mov
adc
imul
add
lcall
xor
adcb
inc
dec
cwtl
aam
cs
and
sbb
xchg
add
push
jbe
out
lcall
inc
dec
and
push
xchg
adc
loop
and
mov
mov
sub
add
ret
add
push
rcll
or
mov
dec
sti
add
adc
das
clc
mov
mov
jle
fwait
mov
fwait
dec
loopne
xor
jbe
test
fdivrl
and
jle
pop
and
xor
sbb
dec
and
jle
add
call
ja
and
and
loop
js
call
and
jle
sub
xor
daa
adc
mov
sbb
loopne
push
sub
add
cmc
mov
jg
mov
jbe
dec
adcb
xor
jo
adc
cmp
jle
sbb
scas
pop
cmc
inc
or
mov
adc
js
add
aad
aad
sbb
adc
sub
rcrb
xor
sub
js
add
mov
add
int
or
or
lds
cmpb
aaa
adc
jbe
sti
daa
mov
xor
cmp
inc
push
icebp
or
js
jle
xor
inc
and
fnsave
pusha
decl
bound
xor
or
clc
subb
inc
pop
ljmp
subb
push
icebp
mov
dec
sub
outsb
sbbl
mov
adc
ret
pop
add
inc
add
sbb
jo
stc
sbb
xchg
or
int3
outsb
jae
cmp
cmp
inc
add
mov
add
ljmp
cwtl
loopne
dec
pusha
or
or
imul
and
xchg
iret
push
sub
mov
sub
push
test
enter
sub
mov
sub
fmull
pop
hlt
pop
add
push
pusha
mov
jp
or
cld
aaa
adc
and
push
lcall
or
mov
lods
and
rolb
and
and
add
cli
scas
mov
sahf
ja
mov
adc
test
data16
cld
xchg
ss
add
data16
or
loopne
cmp
jno
dec
mov
inc
mov
mov
popa
inc
sbb
bound
inc
cld
adc
mov
orl
mov
pop
sub
mov
xor
imul
cmp
cmp
mov
inc
push
jno
ret
int
push
repnz
das
clc
dec
addl
rorl
and
das
sahf
lcall
pop
or
aaa
xchg
sahf
sti
xor
cld
call
clc
andb
inc
imul
lcall
outsb
and
clc
aaa
sahf
cltd
rorl
add
add
and
dec
das
cmp
push
jge
das
clc
ret
inc
and
outsb
into
sbbl
popa
outsb
movb
pop
arpl
lcall
and
cltd
arpl
jg
popf
lock
pop
pop
push
lods
addl
push
test
loopne
rolb
mov
or
and
scas
sub
dec
adc
cli
and
adc
adc
or
add
orb
insl
aas
or
stc
inc
and
mov
jmp
mov
es
sbb
stos
mov
pop
fs
xor
lcall
cld
sub
incb
or
jae
dec
clc
adc
dec
lods
push
jno
xor
call
das
mov
sub
or
repnz
enter
or
add
stos
mov
dec
mov
push
jmp
sbb
aaa
fstl
inc
jno
mov
and
mov
decl
popa
mov
jl
sbb
dec
or
pop
add
fimull
pop
ret
sub
xor
not
insl
outsl
add
dec
cmpsb
mov
hlt
rorl
or
sub
xchg
and
aam
rcll
cmp
pop
sub
mov
add
outsb
pop
jno
mov
rolb
jo
add
inc
fimull
xor
xor
xor
stos
outsb
or
jl
push
dec
mov
adc
mov
rcrb
inc
sub
loop
push
or
leave
adc
test
mov
sbb
pushaw
cmp
adc
test
or
in
and
xchg
and
add
adc
cmp
lock
inc
inc
add
dec
mov
xor
dec
jbe
dec
rorb
scas
mov
cmpsb
or
or
pop
fwait
ss
loope
mov
adc
add
dec
call
jg
loop
pop
jns
inc
imul
nop
pushf
and
mov
mov
sub
jmp
shll
daa
jno
pop
mov
add
ja
popf
mov
sbb
shlb
into
daa
test
fwait
pop
popa
subb
decl
or
inc
mov
repnz
pop
inc
stc
sub
incl
hlt
fsts
lret
adc
jnp
sub
lea
push
inc
test
xor
das
sub
pop
xor
aaa
cwtl
sub
jl
push
push
xchg
sbb
std
outsl
decl
add
adc
icebp
adc
add
sbb
movsb
and
pop
mov
sub
mov
lret
push
cs
push
or
cmpsl
add
decl
inc
sbb
pop
mov
sbb
adc
lds
mov
push
loopne
and
xchg
mov
sub
jle
pop
inc
punpckldq
das
aam
mov
ljmp
adc
add
negb
ljmp
push
lcall
nop
mov
lcall
cmp
cmp
mov
cs
lock
add
add
fwait
cmpsl
inc
push
lock
aaa
mov
xor
repnz
addl
xor
mov
aam
xor
add
jg
mov
adc
pusha
sub
gs
inc
xchg
xchg
adc
dec
movsl
or
adc
add
inc
adc
cmp
and
add
cli
sub
or
mov
in
mov
fnstcw
and
mov
sti
loopne
in
adc
adc
sub
mov
and
and
scas
push
loopne
cmc
adcl
mov
imul
orb
mov
rclb
add
lcall
adc
fwait
adc
xchg
add
inc
lea
dec
clc
pop
or
inc
rcll
lcall
add
rolb
ds
xchg
rolb
call
adc
adc
and
decl
mov
jae
mov
push
jae
lds
lcall
mov
pusha
jo
pusha
and
add
pop
mov
add
push
psubsb
add
cmp
lcall
ret
jp
cld
adc
insb
jg
sar
into
push
mov
or
nop
lahf
insl
shlb
sbb
mov
add
arpl
xor
loope
hlt
imulb
xchg
inc
add
and
push
pop
inc
cmpb
add
insb
push
fisubl
jge
cltd
jbe
push
outsb
addb
andb
ret
push
test
outsb
cltd
rorl
push
add
adc
ljmp
pop
in
push
mov
and
lcall
add
and
xor
sub
push
push
inc
popa
dec
shlb
js
pushl
cmpb
je
xchg
movb
jo
pusha
jno
and
cmpsl
fildll
mov
or
dec
inc
add
xor
shll
add
sti
mov
push
fwait
cmp
call
repnz
insb
xchg
add
jo
xor
fwait
xor
inc
pop
mov
mov
inc
rorl
mov
test
xchg
push
push
add
dec
sub
imul
lcall
xchg
ss
das
or
xor
mov
inc
stos
inc
mov
push
push
pop
sbb
in
jmp
pop
inc
stc
push
mov
ja
addb
push
xor
sbb
fwait
xchg
push
pusha
push
sbb
xchg
ficoml
xchg
or
mov
add
adc
xchg
adc
aaa
clc
js
dec
inc
mov
mov
cld
mov
add
ret
add
xchg
dec
rcrb
xchg
jl
adc
stc
add
fwait
adc
fiaddl
jo
jo
lods
sti
inc
xchg
sub
mov
add
and
sbb
pop
cli
sub
cltd
rcrl
and
jl
jbe
lcall
or
hlt
mov
scas
push
adc
jne
popa
add
or
adc
push
js
test
imul
or
sbb
jae
add
inc
test
sub
or
add
cld
mov
jbe
jo
push
movsb
mov
sbb
mov
inc
add
es
add
sti
cltd
js
ja
push
lcall
imulb
xor
and
or
daa
call
push
cwtl
cmp
out
add
test
data16
mov
flds
add
fidivl
cli
or
push
stos
addr16
push
sbb
addl
es
push
lock
adc
iret
add
out
xchg
cmp
mov
jae
fnstcw
add
lret
add
cld
adc
add
gs
sarb
or
or
add
pop
xor
outsb
mov
arpl
inc
mulb
jbe
or
pusha
addb
add
addl
test
inc
add
inc
idivb
addb
aam
sahf
outsl
andb
rcll
inc
push
stos
orb
xlat
popf
rorb
mov
add
negb
mov
mov
bound
orb
addb
aaa
cmpsb
add
adc
out
cmp
jnp
out
and
mov
dec
divb
shrb
pop
mov
adc
outsl
mov
lods
and
js
out
push
lcall
or
cmp
cmp
add
or
repnz
testb
push
push
or
lea
or
mov
test
and
sbbb
mov
mov
xchg
add
incl
test
mov
and
cmp
add
das
test
inc
and
inc
or
movzbl
add
aam
add
or
loope
sub
or
into
ror
add
jg
rolb
add
add
cmp
inc
and
inc
pusha
push
pop
sbb
mov
or
add
mov
std
testb
sub
lcall
push
add
rclb
inc
shrb
orb
sbb
roll
push
pusha
or
or
mov
jp
push
mov
adcb
push
test
vmovups
adc
or
inc
and
add
mov
test
nop
clc
lods
mov
push
cli
out
ja
push
jbe
and
fs
or
fiaddl
mov
fwait
jmp
xor
clc
add
inc
mov
popa
cmpsb
mov
and
incl
lret
stc
xor
mov
sbb
and
mov
jb
rorl
xor
loope
add
enter
add
and
sbb
sbb
mov
adc
movsl
sti
sub
jbe
cltd
mov
jne
int3
cmp
int3
sbbl
cmp
and
aas
inc
push
test
inc
inc
xor
movb
xor
in
fisttpll
add
sbb
lock
adc
adc
arpl
cmp
addb
lock
xchg
hlt
test
ret
mov
test
mov
push
mov
inc
adc
xor
addb
mov
mov
es
inc
push
jne
test
lret
pop
ret
mov
xor
xor
imull
mov
rcr
and
inc
push
or
outsb
int3
push
subb
mov
mov
lea
js
ss
out
inc
sbb
incb
adc
popa
add
lcall
clc
clc
pusha
push
sbb
adc
pop
addr16
inc
add
clc
inc
push
inc
mov
loope
adc
add
xchg
subb
in
cli
pop
cmp
mov
nop
add
rorb
sahf
icebp
outsl
or
mov
scas
push
xchg
mov
data16
sbb
loopne
adc
push
sti
mov
repnz
rcr
lods
jno
jg
jle
jne
adc
into
and
push
sbb
dec
lret
and
and
jge
mov
nop
mov
pop
fiaddl
stos
orb
or
and
mov
mov
mov
cmpsb
and
mov
mov
add
pop
enter
cmc
test
jmp
jl
adc
sub
fs
imul
stos
imul
ljmp
lock
fcompl
cltd
push
mov
push
adc
or
pop
scas
orb
insl
or
add
pop
xchg
push
dec
cmp
or
adc
loope
add
fbld
aad
add
or
xor
test
jg
or
xor
addb
and
add
bound
loopne
fbld
xchg
pop
add
add
incb
mov
fidivl
inc
sbb
stos
call
mov
pusha
and
and
test
fwait
lods
jmp
or
mov
nop
add
cmp
xorl
data16
cmp
incl
push
fisubs
in
pop
sub
cmp
inc
and
or
mov
xor
pop
pusha
andb
sub
popa
popa
jb
pop
add
cmp
and
mov
adc
inc
or
sar
pop
loope
movl
into
mov
dec
js
icebp
and
mov
dec
clc
add
add
add
cwtl
sub
add
icebp
mov
test
ja
sub
sub
sub
mov
call
mov
add
mov
sbb
sub
push
cmp
scas
gs
mov
cmpsb
or
mov
mov
cmp
pop
pop
insl
out
mov
sbbb
mov
test
inc
in
sahf
pop
gs
clc
adc
adc
int3
inc
jb
xchg
jecxz
lcall
and
xor
pop
adc
push
xor
mov
add
jmp
add
sub
and
dec
push
shll
fisttps
cli
add
jo
adc
mov
mov
sub
or
jno
js
mov
and
xor
adc
aaa
insb
js
jbe
nop
fadds
cld
ds
mov
adc
lcall
loopne
and
and
cli
mov
push
or
pusha
test
nop
aaa
fsubs
ds
adc
ds
mov
jmp
add
icebp
cmp
and
pop
sarb
push
and
jnp
xor
sahf
mov
sahf
lock
sbb
pop
cmp
xchg
mov
mov
lcall
fwait
std
xchg
stos
aam
dec
inc
dec
adc
pop
icebp
ja
pop
jg
or
xchg
jo
cltd
jno
sub
cmpb
enter
push
testb
mov
scas
adc
and
addb
jae
cmp
mov
xor
push
ret
aam
and
xor
or
cmp
out
dec
inc
inc
add
aaa
xchg
icebp
mov
sub
inc
mov
and
lcall
outsl
clc
lcall
xor
add
pop
cmc
bound
xor
or
std
cltd
addb
inc
repnz
inc
add
adc
add
sub
add
leave
add
add
clc
lcall
lret
mov
adc
les
mov
out
rolb
sbb
outsb
mov
out
dec
fwait
out
nop
add
icebp
sahf
push
sbbl
lahf
xorl
inc
push
lahf
jg
adc
popf
mov
imul
and
push
test
xchg
xchg
adc
mov
sub
shlb
sahf
or
xor
inc
or
aam
int3
push
pop
adc
mov
test
add
or
mov
fwait
cmc
fildll
sahf
lcall
jge
and
lret
and
xchg
lcall
add
lods
xchg
xchg
stc
mov
lock
movsb
jg
loop
mov
mov
dec
add
jnp
or
mov
add
and
jp
nop
lock
adc
jg
ljmp
dec
mov
pop
jge
popa
pop
xchg
addl
mov
in
adc
or
mov
mov
or
mov
dec
or
fwait
or
loope
inc
mov
clc
push
arpl
and
add
pop
mov
and
sub
jg
lock
cltd
jnp
add
jo
add
add
pop
subl
jbe
cmpsb
xchg
cmpsb
rcrb
aad
std
lods
adc
add
add
xor
mov
jmp
call
clc
negl
adc
shrb
aaa
mov
jb
push
sub
std
mov
cmp
jle
fwait
shl
jmp
or
shrl
push
and
subl
sbb
and
aam
or
sbb
in
jmp
add
mov
xor
sub
jle
sbb
jbe
fimuls
bound
popa
sub
std
testb
sub
cmpb
jbe
iret
icebp
pop
bound
pop
aad
std
adcb
push
sub
adc
xchg
or
aaa
xor
filds
xor
ret
dec
mov
mov
inc
incl
or
jle,pn
push
dec
cltd
jge
xchg
lock
inc
inc
xor
cltd
addb
inc
lds
xchg
out
cmpsb
push
in
push
bound
das
and
sub
sub
push
cli
mov
clc
cmp
xor
cmpsb
mov
push
mov
cmpb
sub
and
cli
aaa
pop
jno
outsb
cmpsb
and
testb
jecxz
lock
loope
xchg
inc
adc
and
rolb
xor
dec
pop
jge
mov
clc
mov
icebp
inc
jo
push
outsb
mov
ret
sub
adc
add
repnz
fidivl
sarb
and
xor
mov
add
fistpll
clc
daa
lea
les
andb
int3
dec
cld
add
jbe
mov
fidivs
adc
sbb
mov
es
add
jo
jmp
jo
add
ja
out
js
xor
jp
adc
sbb
or
add
and
outsl
pushl
jno
sbb
sbb
pop
sbb
add
pop
xor
movsb
push
xchg
mov
je
push
jae
sbb
in
add
clc
mov
repnz
jnp
lcall
jns
test
mov
xchg
subb
push
pop
inc
in
sub
cli
add
jp
mov
add
fs
rolb
cltd
rolb
dec
inc
loop
js
inc
in
adc
pop
add
inc
dec
mov
test
pop
lods
push
ret
sub
add
daa
jle
adc
orb
adc
push
mov
adc
jp
shll
sar
or
or
cltd
test
sar
add
and
bound
std
testb
add
jno
adc
push
pop
mov
push
or
loop
pushf
pop
sub
cs
lea
xor
cmpl
mulb
clc
outsb
jno
xor
jo
insb
popf
push
mov
cmp
or
and
ja
clc
add
ficoml
dec
mov
je
add
jp
cmc
xor
jo
xor
int3
pop
rolw
cmc
adc
stos
fwait
pop
insl
aad
or
pop
inc
push
test
adc
add
add
clc
xor
sti
das
mov
loopne
clc
inc
pop
adcb
les
ja
pop
cmc
icebp
mov
cmpsb
fistps
loop
add
xor
add
rolb
xor
add
jns
repnz
outsl
cli
call
out
daa
and
dec
shlb
loopne
div
add
jg
sub
cmp
in
out
cmpb
stc
xorb
mov
clc
fcmovbe
add
adc
stc
mov
mov
mov
mov
scas
or
push
lcall
jne
rcrb
mov
les
pop
mov
xchg
rcl
push
jp
enter
mov
pop
aas
ljmp
jae
dec
into
rolb
add
adc
or
out
cmp
test
mov
jmp
or
adc
fwait
add
cmp
scas
inc
adc
push
push
sub
add
rorb
sbb
pusha
jle
mov
jno
fwait
add
push
jle
and
push
push
ljmp
or
bound
sub
mov
adcb
outsb
test
and
int3
je
insb
mov
out
and
mov
aaa
orl
sar
mov
push
adc
jg
adc
icebp
dec
mov
mov
pushw
test
loop
sub
or
or
jg
orl
push
jp
add
jae
and
inc
das
push
xor
jno
push
or
add
push
ljmp
push
lods
and
add
int
mov
lcall
pop
add
xor
addb
andb
or
add
add
mov
cs
mov
test
in
add
mov
pop
cmpb
andb
xchg
inc
xorb
xchg
cli
inc
or
xor
test
cmp
cmpb
cmpl
adc
or
idivb
jnp
dec
and
sub
jb
icebp
rorb
adc
or
pop
ret
shlb
stc
movsl
cmpsb
add
cli
mov
bound
in
add
pop
mov
inc
imul
inc
arpl
fisubrs
lcall
xor
jl
add
push
fstl
loopne
shl
js
inc
fs
arpl
arpl
or
data16
arpl
in
ljmp
clc
movsb
aas
data16
arpl
unpckhps
arpl
dec
arpl
xor
and
sub
sbbb
xor
popa
lret
int3
popa
sbb
or
loopne
shrb
add
inc
jl
adcb
add
mov
push
cld
add
xor
sbb
or
shrb
push
mov
mov
mov
inc
cld
sti
daa
inc
ret
andb
inc
sar
jle
xor
add
add
fstp
cmp
loopne
call
add
inc
and
pop
adc
mov
add
sbb
cmp
sti
ds
jbe
inc
rorl
repnz
cmpsb
sbb
call
add
adc
dec
mov
xchg
outsl
mov
ja
loop
jbe
sub
add
cwtl
inc
aam
add
sbb
rcll
repnz
add
in
pop
xchg
sbb
or
call
daa
fdivs
inc
mov
je
mov
mov
in
jo
push
sub
int
add
subb
mov
cmpb
pop
dec
imul
push
inc
mov
pop
mov
inc
inc
and
or
je
mov
idivb
and
xchg
jo
add
pusha
jle
cmpsb
fwait
jle
adc
ljmp
mov
mov
add
fsts
inc
ret
adc
or
sub
loopne
add
adc
dec
bound
add
push
mov
dec
fwait
add
mov
dec
xor
adc
out
pop
stos
inc
dec
sub
jge
push
sub
add
outsb
or
in
stc
pop
fbstp
add
negl
or
je
or
decl
popa
add
jp
testl
fnsave
push
add
mov
and
xor
mov
jbe
fistpl
and
pushf
mov
adc
pop
mov
leave
push
cld
lcall
rorb
mull
shlb
xor
inc
test
add
pop
pop
push
sub
lock
inc
sub
in
mov
std
outsl
incl
jmp
loopne
gs
cmp
lds
dec
mov
das
push
jp
loopne
ja
inc
inc
sahf
mov
jg
std
jmp
and
xchg
jmp
addr16
xorb
pushl
lret
lock
imul
jl
aas
push
pop
sub
xchg
mov
sub
inc
frstor
mov
mov
mov
cwtl
daa
push
add
inc
pushf
add
push
pusha
push
loopne
cmp
sbb
dec
pusha
int
arpl
add
pop
jmp
or
inc
fadds
fadds
stos
fdivrs
mov
mov
xchg
movsb
xor
stos
cmp
inc
lahf
jno
loop
ficompl
mov
ljmp
sub
add
add
or
fwait
roll
rclb
mov
or
pop
rolb
bound
pop
aad
inc
inc
and
jnp
inc
aas
inc
cltd
jbe
pop
rorb
clc
orb
lods
imul
adc
int
sub
in
aaa
mov
les
das
inc
inc
jnp
xor
sub
adc
int
cmp
mov
push
xchg
cmp
add
add
cltd
pop
or
add
nop
les
loop
add
cli
jno
mov
int
adc
add
clc
lock
pushl
jnp
dec
or
decl
pushw
dec
orb
pop
inc
stc
mov
jbe
xchg
dec
cmc
test
aaa
and
jg
mov
and
sbb
pusha
cmp
call
adc
mov
xchg
mov
cld
jg
jge
negl
adc
dec
and
mov
outsl
test
sub
loop
rclb
dec
hlt
push
out
add
and
or
and
divb
jecxz
lds
test
push
push
sbb
inc
mov
stos
push
das
xor
loop
push
mov
and
push
and
jge
outsb
loopne
jbe
outsl
sub
and
mov
add
xor
mov
inc
pop
mov
outsb
jno
inc
add
push
test
arpl
pop
sbb
lcall
push
jle
add
dec
xor
push
movsl
xor
xor
addb
popf
je
mov
adc
cwtl
xor
nop
inc
cld
stos
add
bound
aaa
mov
ffree
dec
roll
xchg
inc
pop
js
push
sti
pop
or
cld
jg
pop
roll
clc
rolb
xor
cmp
or
sub
shrl
xor
loopne
out
push
mov
nop
and
pop
adc
push
repz
add
icebp
mov
mov
movb
inc
pop
cltd
pop
inc
call
ds
push
push
add
mov
jbe
or
fwait
dec
add
lock
adc
xchg
mov
push
mov
outsl
push
push
adc
and
dec
push
pop
pop
inc
mov
mov
and
out
jo
fwait
and
insb
loopne
outsb
rorl
pop
pop
xchg
add
jg
xchg
mov
pop
mov
inc
mov
fdivrs
pop
add
cwtl
jb
xor
push
shll
sbb
add
jp
fwait
jbe
cs
push
or
lock
jo
popa
jle
add
mov
stos
cs
xor
cs
mov
std
roll
bound
pop
jno
and
add
std
pop
aam
lcall
xor
jnp
hlt
outsb
dec
subb
mov
jne
adc
mov
mov
std
add
xchg
xorl
inc
cmpsb
add
dec
xchg
or
incl
and
cltd
push
test
xor
sub
mov
mov
mov
mov
and
or
icebp
or
adc
out
test
sti
cmp
xorb
jl
mov
fwait
lcall
mov
or
xor
xchg
inc
add
dec
in
mov
and
cmc
rolb
add
cmpsl
add
dec
hlt
add
sub
mov
pusha
add
icebp
add
or
bound
jge
das
mov
jae
icebp
add
out
and
sbb
or
aaa
inc
xor
hlt
xchg
cmpsb
out
in
or
pop
adc
testl
push
push
lock
hlt
out
add
pop
sub
js
inc
orb
testb
orl
scas
inc
aas
stos
mov
dec
mov
fstpt
xor
mov
add
lret
jl
mov
cs
add
mov
fdivr
lods
lcall
push
adc
lock
fldl
repnz
sub
lock
mov
cmp
pop
push
negb
add
or
in
pushl
mov
add
pop
inc
pusha
add
adc
std
pop
pop
push
cwtl
test
iret
test
popa
xor
lcall
dec
divb
aad
pop
andl
or
mov
push
shll
lock
lock
adc
jg
loope
inc
sbb
dec
adc
adcb
lock
loopne
fcmovbe
dec
add
dec
adc
mov
pop
and
or
cs
cmp
dec
imul
ljmp
add
scas
fdivrp
jp
mov
fstp
or
and
add
and
pusha
xchg
inc
dec
sahf
adc
xor
jne
dec
xor
mov
dec
cmp
dec
nop
aas
jge
mov
adc
les
sahf
add
push
pop
hlt
ljmp
push
jno
fdivrp
inc
aas
mov
lret
jo
ljmp
mov
das
push
adcl
les
mov
cmp
int3
repnz
add
pop
sahf
xor
inc
add
jno
pop
lcall
daa
data16
push
pop
inc
jp
outsb
cmp
sti
jg
sbbb
popf
andb
jo
jno
xchg
les
stc
lret
sbb
loopne
xor
icebp
movsb
ljmp
mov
iret
pushaw
dec
aaa
pusha
or
leave
push
and
sub
decw
fdivp
and
pushl
int3
push
xchg
or
pop
mov
adc
aas
add
adc
xor
inc
xor
add
les
jno
mov
call
shlb
and
mov
loopne
sbb
clts
or
add
mov
bound
mov
push
addb
scas
add
icebp
add
or
mov
add
stc
mov
push
mov
mov
or
bound
inc
xor
mov
mov
add
add
dec
aas
data16
mov
test
popf
and
or
pop
jno
push
or
out
sub
mov
ljmp
decb
mov
clc
or
xor
adc
jge
dec
fwait
add
sub
or
mov
and
push
adc
add
clc
data16
push
adc
jge
add
dec
sarb
mov
add
add
divl
xorb
orl
mov
lock
add
xchg
movsb
sahf
cltd
movsb
addl
add
xor
dec
xor
popa
pop
push
add
and
inc
xchg
xchg
sbb
gs
add
mov
scas
mov
push
jle
lcall
pop
cltd
jno
subb
int3
incb
js
mov
mov
mov
add
incl
daa
pop
adc
dec
xor
rclb
push
mov
xor
dec
add
add
add
lods
push
sbb
or
dec
xorb
pop
std
xchg
rclb
jl
sbb
dec
rolb
pop
adc
inc
pop
ret
gs
push
stc
movsl
ds
mov
test
loope
sub
sahf
push
mov
testl
cmpsb
fwait
sbb
or
pop
icebp
mov
decl
push
inc
xorb
ret
xor
xlat
add
shlb
lods
shll
adcb
ljmp
mull
push
push
adc
or
cwtl
adc
pushl
rclb
xor
inc
or
jp
in
rorb
or
aaa
cld
inc
or
and
mov
dec
jle
in
push
fwait
add
rclb
xchg
add
add
notl
lahf
inc
add
test
lahf
es
push
xor
push
inc
or
mov
stos
jns
add
fbstp
fbld
push
push
cmpsl
fists
and
fisubl
ret
push
xchg
ljmp
testb
into
push
lea
adc
lds
dec
sarl
push
push
insl
inc
cmp
mov
cmp
rorb
cmp
inc
push
mov
push
dec
mov
outsl
or
arpl
rolb
push
mov
push
mov
rorb
out
mov
cwtl
pop
inc
or
andl
ja
lock
push
xchg
sbb
pop
xor
mov
add
std
imul
sbb
popa
pop
add
jp
out
clc
lods
sub
xchg
mov
sahf
popa
insl
rclb
dec
and
and
pusha
mov
cmp
pusha
cltd
mov
les
stc
nop
sub
mov
mov
mov
inc
jo
add
or
add
inc
push
pop
add
push
fnstcw
xor
int3
repz
dec
sti
ljmp
stos
cmp
mov
push
or
mov
pop
jmp
mov
icebp
mov
scas
rclb
mov
bound
jl
out
mov
lahf
mov
or
mov
sbb
cmp
mov
ds
incl
or
nop
add
incl
hlt
lea
ss
dec
sbb
and
mov
ret
push
aam
cltd
adc
sub
pop
nop
outsb
clc
jns
jnp
std
dec
cmp
pop
sbb
int
clc
cmp
and
sbb
cld
jg
and
mov
jo
fisubl
mov
cld
outsb
es
fwait
mov
jbe
inc
xchg
push
loopne
or
add
cli
outsl
mov
push
push
jge
lock
jle
pop
ret
adc
push
and
mov
idiv
mov
adc
and
scas
or
fwait
add
orl
pushf
repnz
test
decl
pop
push
fwait
xor
and
or
push
and
mov
ret
outsl
mov
push
imul
js
popa
cmp
mov
call
xor
or
jnp
adc
aad
dec
jl
add
mov
inc
or
xor
lock
js
push
adc
cwtl
ss
push
neg
add
mov
or
add
xor
jp
pusha
adc
or
jmp
jp
cmp
xor
mov
inc
test
pop
cmp
rolb
add
inc
jns
inc
arpl
repnz
and
stos
fwait
imul
jl
fs
testb
and
mov
in
ljmp
xchg
mov
in
daa
mov
adc
inc
pop
push
adc
pop
sbb
test
pop
add
pushl
incb
pop
inc
add
inc
dec
inc
cltd
adcb
mov
xchg
jne
loopne
adc
cmc
call
stc
daa
outsb
xchg
aaa
or
jne
jmp
xor
or
and
push
pushl
sbb
aaa
pop
and
add
and
data16
aam
mov
jg
jg
shlb
dec
clc
xor
push
inc
adc
aas
cmp
mov
pop
pop
mov
mov
insb
stc
stos
iret
xchg
push
std
incl
push
mov
xchg
les
jo
pop
pop
int3
xchg
rolb
dec
bnd
ja
idiv
xchg
aam
ret
rorl
add
shlb
lock
sub
xor
jmp
xor
push
cltd
adc
cmp
cmp
pop
div
mov
jns
xor
add
jle
sub
mov
or
fwait
adc
xor
stos
mov
add
cmp
add
xor
add
fildll
push
xor
fsubs
fildl
add
inc
add
inc
add
push
loop
mov
cmovno
sbb
fwait
pop
mov
test
or
insl
fst
jg
mov
bound
lds
mov
pop
out
mov
rorl
sar
int
idivb
push
stc
and
bound
sbb
jge
cli
dec
adc
cs
add
jno
and
push
fwait
out
sbb
adc
cmp
adc
xor
push
fstps
fucomip
outsb
adc
add
out
sub
xor
pop
movsl
sti
push
and
mov
xor
into
jne
out
push
lret
mov
mov
das
fistps
cmpsb
sub
push
add
out
hlt
sub
fistpll
adc
rolb
xor
add
push
jne
cltd
push
jge
clc
out
cli
cltd
and
jno
mov
xor
sahf
fwait
loope
sub
jno
sbb
and
push
outsl
inc
js
jno
enter
test
decl
jo
and
push
jnp
push
js
xchg
push
cmp
cmp
das
cmp
mov
cs
jge
jne
mov
or
add
jo
push
jno
inc
mov
mov
mov
xchg
jmp
mov
and
sub
jns
dec
cs
jg
xor
les
fiaddl
or
repnz
dec
es
icebp
xor
cld
imul
mov
add
cwtl
data16
mov
fwait
mov
cmp
js
jb
cltd
nop
pop
mov
ljmp
or
rcrb
rolb
xchg
add
rolb
je
lret
fdivr
pop
mov
mov
add
mov
cltd
fwait
or
je
nop
adc
push
cs
mov
pusha
or
or
lods
jg
jno
lcall
lea
push
pop
outsl
or
addr16
mov
or
push
ljmp
lea
int3
mov
out
rcrb
test
call
fwait
inc
inc
pop
imul
adc
test
mov
lret
jp
cltd
jecxz
adc
pop
cld
call
mov
add
lret
add
ret
add
push
xor
or
pop
ljmp
and
and
mov
jp
repz
repz
sti
daa
cld
or
xor
and
and
mov
nop
mov
cmp
and
add
lret
and
fwait
mov
push
mov
pop
jnp
dec
inc
outsb
and
and
into
aam
inc
arpl
in
add
lcall
divb
or
mov
add
or
movsl
add
xor
adcb
cmp
or
sbb
add
xor
adc
and
jo
data16
mov
sub
pop
outsb
daa
cmp
jbe
stc
add
lahf
add
cld
testb
jg
lcall
repnz
cmpb
sbb
inc
cs
icebp
pop
mov
arpl
lock
fisttpl
orb
add
stos
inc
xchg
scas
add
xor
lods
jne
xchg
dec
sbb
js
sti
add
sub
mov
clc
sbb
mov
push
fldenv
pushf
dec
idiv
fbld
dec
arpl
sti
push
arpl
push
addb
or
xor
pop
fdivr
add
adc
add
mov
hlt
add
and
test
in
add
fwait
sbbl
or
fmull
sub
jl
add
cli
rclb
push
xchg
dec
clc
push
jmp
xchg
orb
or
or
add
sbb
fstps
fildll
add
push
sub
add
adc
push
mov
xor
add
ror
jno
test
or
push
mov
andb
popa
sub
and
les
mov
stc
call
out
aaa
and
xchg
pop
sti
rsm
std
sbb
insb
or
add
lock
ds
scas
cltd
outsb
push
mov
dec
cmpsb
test
mov
dec
adc
mov
inc
cld
cltd
cli
filds
xchg
scas
and
ret
cltd
fisubl
push
sti
pusha
out
call
clc
lock
adc
icebp
xchg
mov
xor
stos
mov
jno
push
push
and
push
jo
scas
aas
adc
js
or
call
decl
inc
cmp
idiv
and
scas
jne
bound
adc
cs
jg
and
scas
shll
orb
test
inc
inc
and
dec
test
lea
xlat
mov
scas
cmpl
testl
test
xchg
xchg
mov
cmp
lds
push
je
ret
add
fwait
ja
xchg
aaa
iret
pextrw
or
ret
mov
xor
addw
loopne
std
lea
or
mov
jp
jge
mov
pop
hlt
xor
mov
xor
fldt
int
pop
xor
cld
cld
sbb
sbb
subb
cs
sahf
bound
or
imul
pop
cld
pop
cmp
add
lock
orl
sbb
inc
inc
xor
push
add
sub
popa
rclb
sbb
scas
pushw
mov
dec
jbe
les
adc
inc
pop
inc
jno
add
stc
movsl
jecxz
adcb
xor
adc
je
mov
jb
bound
and
ja
xor
int3
sbb
lock
add
stos
mov
bound
add
insb
icebp
aad
lahf
and
loopne
cmp
mov
push
aad
in
pop
jno
and
inc
and
pusha
adc
pop
xchg
or
push
pop
xor
or
jecxz
push
add
mov
loopne
fmuls
fdivr
push
adc
push
and
xorb
insb
cmp
and
xchg
mov
sti
mov
jge,pn
hlt
mov
or
add
add
ljmp
fwait
stos
lds
cltd
ficompl
inc
push
popa
add
add
sbb
cmp
andb
inc
and
add
add
and
in
lcall
rcr
add
orb
pop
test
inc
add
orl
mov
das
sar
or
or
fwait
daa
test
xchg
xchg
shlb
push
dec
outsl
fcomi
mov
pop
push
mov
jae
push
icebp
fs
inc
push
testb
rcl
mov
fwait
call
incl
cmp
and
push
outsl
loopne
stc
push
test
push
loopne
mov
xor
and
sbb
rolb
push
lea
sub
xchg
popa
std
adcb
push
inc
outsb
pop
mov
outsb
xorb
clc
xor
add
outsb
adc
mov
push
icebp
sub
mov
icebp
mov
cmc
data16
lea
add
mov
inc
mov
push
push
pop
lret
imul
sbbb
test
mov
add
aaa
add
ror
mov
call
jl
cmc
outsl
pop
sahf
sub
push
jge
mulb
add
mov
pop
dec
repnz
push
push
add
sub
inc
mov
push
mov
jb
xor
push
bound
sub
cltd
cli
das
and
cmp
lock
push
or
push
dec
cmp
jae
lcall
mov
test
push
addl
cltd
roll
adc
pushl
cltd
shll
jge
idivb
dec
xor
movsb
xor
ljmp
push
mov
xchg
jne
rcrb
or
js
data16
dec
sbb
xchg
or
xchg
cmpsb
imul
xor
sub
lock
fldenv
xchg
ret
push
in
xlat
mov
adc
cwtl
xor
es
mov
daa
lock
jo
mov
adc
popf
out
xor
lahf
push
push
jnp
xor
rclb
subb
lcall
mov
stos
xchg
test
pusha
repz
jnp
and
inc
xor
cmp
mov
pop
and
xchg
sub
orl
xor
sub
fists
push
lock
adc
sub
sarb
in
aad
dec
loop
fists
adc
ja,pt
jl
adc
jbe
add
add
cmp
cmp
push
fstl
add
add
push
and
dec
mov
inc
and
pop
outsb
adc
mov
xchg
jo
cs
pop
pusha
dec
adc
dec
jge
inc
add
xchg
and
add
add
add
mov
add
xchg
xchg
pop
push
xchg
mov
imul
test
into
lock
fdivrs
xor
lods
jge
mov
adcb
push
or
mov
or
add
insl
mov
aaa
jo
jo
inc
or
push
jecxz
decl
add
adc
and
shrl
test
cmp
mov
push
adc
mov
xor
iret
mov
xchg
adc
aas
adc
aas
xchg
mov
mov
aaa
ljmp
jno
mov
cmp
sti
dec
stos
mov
add
cmp
sbb
add
sbb
sbb
add
mov
in
mov
cmpb
sub
sar
fbstp
mov
dec
sbbl
xor
cmp
outsl
cli
push
popa
add
xor
ss
add
insb
cmpsb
sbb
and
or
cmp
xor
rcrb
decb
dec
aaa
and
ja
or
and
loop
inc
xor
sbb
adc
je
and
ret
adc
lds
add
fdivrl
mov
pusha
jns
js
or
mov
cmp
push
mov
xchg
sbb
fwait
jno
subb
xchg
mov
mov
lods
js
mov
inc
aaa
divb
aaa
cli
inc
jg
adc
aas
and
add
xor
mov
in
or
jp
jns
add
adc
stos
out
outsl
loope
push
aad
imul
mov
push
mov
jne
sub
add
xchg
mov
or
dec
or
rcrl
add
jmp
stc
add
mov
mov
add
and
lock
aam
adc
lret
jae
mov
iret
push
loopne
scas
outsl
stos
call
push
push
jl
in
lcall
addb
sbb
sti
adc
repnz
data16
push
nop
js
gs
pop
hlt
fistl
sbb
mov
repnz
imull
jo
lcall
inc
adc
cs
inc
push
cmpsl
and
add
testb
rolb
and
sbb
cld
adc
xor
cltd
ds
cmp
add
or
pusha
sbb
and
cli
ds
or
insb
inc
cli
or
push
dec
add
andb
jg
mov
out
add
inc
testl
jg
mov
jle
jae
sbbl
xchg
jne
jo
cs
jmp
jno
fmul
icebp
jg
sbbb
pop
mov
push
stc
cli
sub
jmp
sar
incl
push
pop
decl
jae
sbb
mov
and
mov
push
and
push
and
jbe
mov
icebp
add
sub
lods
mov
lea
inc
inc
cld
lcall
jo
lcall
decb
adc
fsubl
mov
xchg
adc
lret
pop
mov
in
sbb
mov
xchg
mov
fwait
sbb
jnp
fwait
add
or
pop
test
montmul
cmpsb
add
or
jo
push
rolb
test
xchg
add
or
mov
out
jl
enter
rorl
push
push
lcall
jmp
jp
repz
add
dec
and
testb
or
hlt
pop
add
cmpb
dec
or
jb
stc
bound
or
fnstsw
sti
daa
and
fs
or
sbb
and
fwait
mov
jle
mov
sbb
adc
add
sbb
dec
inc
inc
add
aas
incb
cs
sbb
push
in
in
mov
loope
inc
sbb
ss
daa
or
dec
sub
cltd
pop
pop
std
pop
mov
enter
add
test
ds
xchg
fs
mov
icebp
adc
jae
test
push
je
or
outsb
incb
jb
stc
movsl
push
jle
cmpsl
push
es
mov
push
sbb
push
xor
fiadds
jl
push
inc
cltd
push
and
adc
pop
mulb
jl
mov
pop
fwait
mov
ljmp
push
in
inc
add
leave
pop
sbb
or
imull
cmp
add
jp
cmp
sbb
xorb
dec
add
xor
jo
mov
iret
dec
jbe
mov
adc
cmpsl
cmpb
test
in
shl
lods
mov
add
sbb
fstl
add
stos
shrl
dec
and
stc
mov
jo
dec
bound
data16
insb
push
sub
lcall
adc
push
aas
jle
call
jg
push
add
pop
xor
add
dec
sub
inc
jnp
dec
js
jbe
adc
rorb
sub
das
mov
dec
daa
out
pop
add
or
adc
dec
lcall
push
out
pop
outsl
pop
mov
sbb
inc
add
add
push
icebp
repnz
mov
jp
stos
sbb
cld
mov
push
subb
pushf
cltd
push
or
je
sbbl
or
sti
pusha
das
adc
push
shlb
sahf
adc
ljmp
xchg
clc
push
and
add
sti
ljmp
push
mov
sub
mov
jns
setbe
cmp
addb
xchg
dec
push
push
dec
xchg
jo
lret
outsb
addb
or
sub
jge
cld
cmpsl
inc
rolb
sbb
icebp
lret
adc
jno
or
inc
inc
insl
and
push
sub
pop
outsb
sahf
decb
or
cmp
mov
mov
or
std
fwait
out
cltd
stos
inc
cltd
ret
jno
add
cmpsl
or
adc
lods
adc
adc
mov
sub
repnz
xor
pop
repnz
push
push
sbb
pop
rclb
insl
and
addr16
stos
in
out
nop
push
ret
clc
into
add
mov
cltd
arpl
sub
imul
push
popa
xchg
ljmp
mov
pop
addb
xor
inc
adc
xchg
sub
ja
pop
data16
ret
subb
aad
push
cmp
xchg
cld
shrb
aas
nop
daa
cli
js
mov
or
cmp
clc
inc
or
mov
lock
stc
mov
dec
mov
push
push
mov
mov
xor
test
dec
mov
dec
sub
pop
lock
or
rcl
js
sub
shlb
or
push
add
lcall
mov
dec
icebp
mov
add
mov
sub
cli
pop
and
arpl
out
and
mov
lds
subb
mov
es
push
or
sbb
mov
in
push
test
js
adcb
inc
insb
data16
push
cs
lcall
bound
xchg
pusha
test
add
add
mov
in
and
jp
decl
or
movsb
pusha
cmp
xchg
imul
mov
addl
adc
rolb
sub
andb
stos
xchg
flds
cmp
sub
sub
xor
and
rolb
adc
push
test
stos
xor
push
push
in
xchg
adc
add
add
jp
lcall
lret
and
stos
lcall
mov
lcall
loopne
and
mov
sub
add
imul
je
es
jl
loop
add
outsb
or
call
add
mov
add
lret
cmp
add
mov
pop
lods
xor
lods
and
pop
add
adc
jmp
loopne
sbb
jp
jp
sbb
add
test
sub
or
lods
nop
xchg
inc
xchg
add
or
out
sub
jle
pop
pushf
add
sbb
popa
sub
loop
push
sti
mov
ret
aad
dec
and
add
pop
popa
andb
insl
loop
mov
ja
cmp
shlb
stos
or
stc
and
inc
add
mov
movsl
ljmp
dec
nop
ficomps
or
loopne
out
xchg
incb
mov
jmp
ljmp
pop
mov
int
insb
mov
add
dec
das
stos
add
mov
test
mov
cmpsb
scas
outsl
das
addb
scas
xchg
push
psllw
adc
insl
loope
loope
dec
inc
sbb
sbbl
rorb
and
das
mov
add
add
gs
fcompl
dec
cld
and
and
and
mov
xchg
xchg
or
xchg
rolb
xchg
push
sub
push
pop
cmc
pop
fsubrl
or
dec
clc
push
push
jge
loop
rcrb
jo
das
outsb
add
inc
sar
sti
ffree
iret
ret
xor
xchg
add
inc
xchg
adc
fnstcw
shrl
inc
jnp
mov
into
xor
inc
iret
xor
inc
dec
add
loope
and
add
into
dec
std
aas
cwtl
dec
add
sahf
cmp
mov
faddl
mov
add
mov
dec
mov
xchg
into
xor
shll
mov
fcmovnu
jecxz
add
push
in
sbb
mov
xlat
mov
add
push
cld
in
es
mov
xchg
test
sub
add
jmp
mov
ljmp
add
add
cmp
sub
lahf
sub
dec
pop
fcmovnu
ds
loope
sub
adc
repz
push
test
out
jne
mov
mov
into
and
fsubs
cmpsb
or
pusha
pop
scas
insl
fistpl
fiaddl
add
cmp
mov
add
xchg
popf
push
sub
sahf
ret
inc
inc
add
test
sub
ja
pop
inc
sbb
das
add
sbb
sti
subb
fistpl
das
push
inc
and
cmpb
jo
gs
dec
inc
and
ret
in
out
subb
ss
mov
push
je
dec
mov
outsl
inc
mov
add
and
ds
mov
bound
jno
push
stos
dec
mov
test
rolb
inc
adc
add
pop
ja
inc
adc
mov
inc
insb
sub
pop
add
cmpsb
or
adc
and
pushl
inc
test
push
js
clc
push
sub
test
pushl
pop
fsts
dec
dec
mov
add
or
add
pop
and
js
dec
xor
add
adc
lods
bound
fists
shrb
rorb
push
rorb
and
mov
pop
mov
cmc
in
add
data16
xorb
hlt
mov
xlat
adc
inc
lret
inc
fs
mov
je
cltd
lret
mov
fcmovbe
sarb
cld
mov
jmp
rolb
push
jmp
mov
pop
test
inc
adc
data16
fsubrl
loopne
push
std
pushl
jl
dec
jo
addb
cmp
mov
es
adc
inc
rcrb
icebp
dec
addr16
push
or
ret
sbb
lcall
xor
dec
push
and
stos
mov
sbb
xchg
push
adc
dec
stos
es
hlt
and
pop
dec
add
or
ljmp
jg
les
rolb
ret
push
lcall
pop
jb
and
and
xchg
inc
insl
push
jne
loope
ja
loop
jo
cmp
add
jae
les
jg
addr16
xor
sub
decl
push
fisttpll
jne
icebp
sbb
imul
cmp
lcall
xor
dec
add
or
lcall
mov
stc
outsl
push
dec
sti
hlt
int
sbb
fbld
cmc
les
xor
pop
and
or
int
fsubs
jg
mov
cld
cmpsl
es
adc
pop
clc
leave
orb
mov
faddl
gs
or
mov
lcall
pop
subl
add
xchg
nop
push
push
stos
sub
mov
add
xchg
nop
adc
push
cli
push
pop
js
lock
pop
dec
dec
mov
js
lret
add
dec
aad
xchg
notb
and
lret
daa
and
loopne
sbb
sub
jb
sub
and
xor
inc
in
scas
push
addl
in
dec
add
or
jns
add
icebp
mov
cltd
mov
sub
or
sti
dec
add
pop
xchg
sub
sbb
jne
add
nop
cltd
repnz
mov
rcrb
inc
nop
lock
jno
test
pop
adc
jle
fwait
lods
out
test
dec
jl
sub
sub
shrb
ljmp
sbb
sub
jo
add
xchg
or
lcall
add
rolb
movups
test
daa
and
gs
bound
bound
sbbl
fists
and
inc
dec
loopne
or
jo
data16
jg
nop
lcall
jae
pusha
nop
add
aaa
outsb
sub
mov
sbb
cmp
pop
lods
or
pusha
lock
jbe
shrb
loopne
mov
push
icebp
add
jl
scas
mov
inc
mov
ja
mov
rolb
push
push
dec
in
mov
jmp
or
mov
xchg
add
cs
nop
loopne
push
lcall
xor
push
push
test
add
outsl
mov
and
push
dec
lret
add
or
dec
in
pusha
or
fmull
orb
dec
and
rcrb
mov
notb
add
sti
incl
sbb
dec
bound
add
or
inc
dec
xchg
clc
stc
dec
rclb
pushf
jle
or
push
ret
cmp
adc
push
jg
and
mov
and
psubb
add
mov
out
add
xchg
inc
shrb
push
push
stc
pop
push
or
mov
popf
call
loope
test
push
and
or
ret
and
aam
out
xchg
add
mov
pusha
scas
divb
pop
insb
mov
bnd
adc
sbb
adc
decl
icebp
ss
inc
mov
pop
dec
lds
adc
aaa
cmp
test
jmp
or
dec
cmp
nop
loope
add
dec
mov
aam
popa
sub
mov
sbb
mov
dec
push
cmp
dec
add
or
inc
xchg
dec
dec
mov
mov
jp
incl
cs
lcall
mov
mov
add
and
add
adc
sub
sbb
icebp
mov
mov
sbb
push
push
pop
sub
lret
jmp
dec
jo
clc
data16
das
add
pop
push
cli
arpl
xor
jne
cmp
decl
decl
add
lahf
fdivs
imul
rolb
dec
add
orb
cld
or
mov
xor
js
cmpsb
test
add
adc
jns
arpl
nop
or
xlat
push
sub
jo
add
cmp
fistpll
les
jp
add
mov
mov
add
mov
repz
lock
lret
or
cs
or
int3
rcll
push
jo
xchg
sub
ret
icebp
xchg
shrb
push
push
inc
add
sub
lret
push
and
aam
mov
or
pushf
jle
jae
cmpsb
mov
cmpsb
pushl
add
loope
mov
mov
outsb
nop
lock
mov
and
repnz
test
incl
or
rolb
rolb
push
or
imul
bound
push
adc
bound
adc
sub
jae
mov
sti
repnz
jp
lcall
das
loopne
jmp
add
inc
and
imul
test
push
and
dec
es
add
andl
pop
xorl
dec
inc
nop
nop
ds
inc
or
mov
pop
or
jbe
add
inc
sbb
jbe
clc
sub
mov
rolb
pop
adc
xor
pushw
pop
cmpb
lods
sub
cmpsb
mov
xchg
pop
test
push
jle
push
jle
xor
add
stos
inc
xchg
ret
imul
inc
pop
push
addb
push
sbb
xorb
cmp
adc
xorb
add
fs
dec
push
ret
add
inc
jne
push
inc
sub
and
loopne
adc
fcmovb
pushw
add
add
out
mov
je
sahf
add
add
xchg
test
add
push
loope
lock
daa
mov
fbld
jge
ret
pop
and
cmp
fwait
mov
mov
daa
mov
adc
pop
cmpl
add
add
and
sahf
bound
xor
mov
sbb
orb
dec
xchg
inc
test
addb
int
cmpsl
sbb
in
nop
xor
sbb
sbb
jae
ret
iret
adc
pop
sub
and
add
jo
dec
lea
push
out
andl
adc
clc
xchg
sbb
sub
movb
xor
and
mov
subb
sub
stos
andb
orb
shrb
or
push
add
jle
pop
shlb
sub
add
jge
test
inc
rcrw
inc
push
xor
push
jb
add
mov
or
inc
and
pop
pop
push
orl
push
xchg
mov
js
lods
jno
mov
lea
xor
out
jo
cmp
fbld
into
mov
and
cmpb
cmpl
dec
adc
add
lds
xchg
mov
ret
rolb
or
push
jo
push
add
mov
add
mov
add
addl
incl
nop
mov
lock
rolb
mov
mov
das
movsb
test
pop
mov
and
dec
mov
sub
loop
jb
jo
ja
jecxz
fst
or
ljmp
xor
test
movsb
rolb
push
lds
call
mov
pop
xorb
add
or
roll
bound
outsb
add
mov
decl
dec
push
dec
pop
jo
inc
test
hlt
cmp
or
push
inc
or
inc
adc
xor
shlb
ljmp
mov
and
inc
push
jge
inc
cmp
and
fiaddl
sub
add
inc
mov
pop
rolb
jne
sbb
mov
loopne
or
mov
cs
js
pop
push
ja
orb
jmp
rcrb
daa
aam
rcrb
lcall
fidivrl
test
adc
jp
dec
sbb
stos
stos
divb
iret
cwtl
sub
sub
or
test
sahf
sub
aad
inc
xchg
stos
lret
dec
lcall
or
bound
rolb
and
and
dec
add
mov
inc
sub
pop
addb
addl
mov
in
insl
test
or
jns
fimull
pusha
sub
lcall
rolb
mov
fildl
adc
and
mov
movsb
mov
and
addb
xchg
sar
call
push
add
sbb
push
test
sti
es
mov
pop
and
mov
in
push
insl
xor
push
add
add
jg
pusha
hlt
shll
pop
dec
stc
dec
addb
and
inc
or
shlb
daa
add
dec
jo
es
pusha
sbb
inc
mov
push
mov
notb
mov
and
cs
test
js
imul
pop
cli
pop
and
jbe
dec
jl
add
std
jmp
or
inc
ret
cmp
inc
jp
dec
test
sarb
cltd
imul
daa
bound
push
push
pop
inc
rorb
ja
and
mov
mov
push
aaa
lds
rorl
and
xchg
pop
inc
pop
addb
stc
inc
ret
test
push
add
and
lcall
mov
inc
sub
or
mov
dec
jl
inc
sub
mov
push
mov
xchg
push
sub
mov
fs
mov
xchg
or
icebp
sbb
jo
int3
pusha
addb
es
andl
or
or
sub
imul
das
sub
jbe
fs
movsb
dec
test
sbb
lar
inc
cmp
sbb
mov
push
fdiv
sbbl
and
incl
inc
ret
cmpb
aaa
lea
ds
push
push
xor
mov
or
adc
jp
cwtl
sahf
jecxz
mov
dec
xor
mov
sbb
dec
cmpb
add
push
aad
clc
ficoms
or
ret
jae
sahf
outsb
mov
ljmp
nop
sbb
mov
push
les
ds
iret
adc
aaa
inc
or
xchg
decl
push
and
jge
mull
mov
add
mov
pop
cmp
scas
dec
loop
jbe
and
sti
pop
dec
jmp
incb
bound
cltd
adc
sub
or
pop
sub
cltd
add
push
mov
je
sub
cltd
dec
add
add
xor
inc
test
jle
or
adc
insl
add
ja
js
jno
mov
loope
jne
add
sub
mov
push
mov
je
mov
leave
nop
sbb
arpl
or
lock
mov
mov
clc
dec
int3
jo
jp
push
ljmp
ret
clc
sbb
sub
dec
aas
cmpsb
add
or
movsb
xor
xchg
loopne
ljmp
or
mov
fstpl
push
xchg
add
stc
push
test
jbe
pop
jle
or
aaa
jp
fs
filds
and
sbb
and
jo
pop
nop
inc
pusha
flds
pop
clc
push
lcall
testl
shlb
stc
or
repnz
dec
std
shlb
pop
mov
sbb
imul
mov
ret
inc
xchg
cmp
inc
aaa
mov
xchg
dec
dec
inc
sub
mov
adc
popa
clc
mov
shlb
pushf
push
xchg
sar
push
inc
filds
inc
dec
push
push
xchg
mov
andb
jp
popa
inc
jb
dec
sar
cmp
inc
cli
add
cltd
and
and
inc
mov
add
add
icebp
dec
mov
inc
repz
cmpb
add
jle
add
cmp
mov
lcall
push
icebp
pop
cld
dec
xchg
or
lea
jno
rorb
sbb
or
fdivr
shll
jno
xor
add
arpl
pop
icebp
dec
je
repz
cmc
and
mov
sub
add
mov
jo
inc
xchg
sti
dec
ljmp
cmpl
icebp
adc
jp
sub
cmc
mov
push
inc
mov
fsubl
or
lock
add
sahf
xchg
inc
lcall
ss
add
les
inc
lret
push
inc
je
adc
jbe
add
mov
inc
stos
add
adc
add
sbb
bound
pusha
addr16
jno
lret
dec
mov
mov
mov
pusha
pop
mov
add
es
loop
aad
cmpsb
and
push
mov
or
mov
in
fs
adc
add
xor
sbb
pop
pop
inc
or
pop
xchg
jae
push
pop
das
test
jmp
out
or
sub
jo
sub
push
cmp
add
andb
pop
hlt
add
lods
mov
add
push
inc
add
jle
roll
sub
adc
adc
add
outsl
loopne
std
jg
dec
pop
rolw
lods
lcall
fists
push
inc
lock
std
mov
jg
and
add
sbb
or
add
lcall
nop
and
mov
xor
adc
jnp
push
in
fsub
jmp
addr16
push
mov
je
jno
or
lcall
or
add
jle
sbb
add
aas
xor
shrb
mov
clts
arpl
sub
add
lods
push
add
outsb
lock
cmc
outsl
clc
sbb
call
popa
inc
stc
inc
decb
mov
pop
dec
in
add
jbe
lods
xlat
stos
notb
push
mov
mov
rcrl
jbe
cmp
rorb
pop
pop
push
pop
movsl
lock
mov
pop
jl
or
mov
or
out
add
outsb
adc
add
nop
or
aaa
test
xchg
lcall
sub
or
pop
lock
scas
or
imul
add
xchg
or
fwait
push
lea
ja
xchg
or
insb
jg
sub
dec
pop
sbb
shlb
xchg
lcall
xor
push
mov
and
insl
loopne
and
outsl
ret
xor
int3
mov
popf
test
and
insb
mov
or
arpl
or
mov
dec
enter
in
and
add
and
add
add
add
xor
ds
rol
inc
add
dec
repz
mov
xlat
inc
std
insl
jns
sub
imul
scas
cltd
push
nop
add
pop
mov
push
icebp
sahf
mov
ss
mov
or
push
das
sahf
add
rorb
sub
or
and
loop
insb
and
aam
sbb
xor
stos
mov
or
and
cmp
adc
std
outsl
clc
fs
int
push
sahf
lcall
nop
sub
test
mov
cld
test
mov
and
jno
mov
and
add
stos
andb
sbb
ljmp
cld
sub
ret
movl
push
jle
cmpsb
sbb
call
inc
xor
add
lcall
or
push
hlt
mov
movl
jmp
and
mov
aad
jge
jo
aam
mov
jle
mov
fildll
loopne
or
jle
insb
jle
daa
jp
inc
inc
add
cli
add
jle
push
jo
jl
xor
sub
sbb
arpl
ds
outsb
inc
pop
add
data16
dec
push
push
loop
decb
add
lock
push
push
dec
or
sbb
sub
pop
lcall
xchg
loop
sub
sahf
push
push
out
mov
sbbb
pushf
nop
or
mov
mov
test
ret
frstor
stos
jle
lcall
jno
push
or
sbb
inc
mov
add
lock
andb
hlt
mov
subb
mov
fisttps
pop
pop
mov
lods
push
push
dec
pop
addb
add
aad
outsl
roll
inc
xor
sbb
push
push
add
icebp
sub
and
es
sbb
pusha
or
out
or
insb
lods
add
lea
incb
dec
lret
xchg
mov
jle
inc
adc
je
stc
xor
adc
add
dec
nop
or
add
add
xor
mov
pusha
cmpsb
jb
movsb
push
or
xchg
addb
rclb
push
sub
inc
add
add
sbb
dec
add
scas
add
xchg
mov
adc
mov
mov
aad
and
add
leave
icebp
icebp
int3
in
push
enter
pop
aas
adc
lock
and
faddl
inc
loope
pop
out
ss
and
xor
test
push
add
ret
incb
jo
into
sub
mov
std
int
cmp
in
inc
fidivl
pop
and
inc
adc
cltd
lock
int
dec
incl
add
mov
sub
jne
cli
xor
movsb
gs
add
push
jl
frstor
ret
jle
ljmp
inc
out
xchg
add
fwait
std
mov
add
xor
lock
flds
add
jp
xorb
int3
mov
jl
push
fiaddl
int
dec
fs
cmp
add
jg
movsb
sub
fisubrs
int3
into
fsubrl
mov
iret
fsts
sbbb
dec
mov
sahf
push
sahf
dec
test
shll
adc
sbbb
adcl
aas
cmp
dec
sbb
jns
mov
inc
pushf
ret
pushf
lret
and
ret
decl
cmp
cmp
mov
fbld
in
jl
mov
jne
mov
pop
xor
jp
cwtl
mov
adcb
and
movsb
addb
jbe
cmpb
outsl
lcall
push
push
inc
adc
bound
neg
pusha
pop
or
add
mov
add
roll
cmp
rclb
es
dec
iret
push
inc
adc
outsl
cli
sub
add
pushf
ret
mov
nop
cmp
call
inc
test
shrb
sub
dec
jae
cwtl
add
jnp
int3
mov
inc
mov
fldcw
adc
inc
mov
pop
push
mov
imul
xor
decl
cmp
xor
inc
add
outsl
adc
data16
inc
icebp
and
mov
sub
jnp
add
jp
lds
inc
sub
mov
mov
dec
add
and
xchg
and
xchg
fdivl
insb
and
clc
push
lret
push
push
mov
inc
inc
test
stc
rorl
rcrl
and
adc
or
gs
inc
mov
inc
inc
and
sbb
data16
xor
aad
outsb
into
push
movb
pop
icebp
inc
mov
xchg
fsts
or
pop
imul
aaa
xor
adc
fs
mov
nop
addb
xchg
js
add
inc
data16
outsb
inc
shl
inc
shl
pushf
ret
mov
ret
dec
sbb
int3
mov
pop
aad
xlat
pmaxub
aam
and
ds
xchg
lret
push
call
dec
inc
mov
push
sbb
mov
aaa
out
loop
pusha
xchg
test
jbe
sbb
test
loop
sbb
sub
add
scas
or
add
pop
and
pop
pusha
add
add
std
minps
aaa
bound
add
and
lcall
mov
jae
jns
js
notl
loope
ss
inc
sbb
dec
sti
adc
lcall
pusha
xchg
xor
mov
hlt
cmp
fsubs
inc
lea
jbe
or
mov
pop
jns
cwtl
adc
pop
data16
nop
mov
mov
mov
jge
lret
orl
mov
mov
mul
fmull
lods
popl
and
add
lcall
mov
pop
push
sbb
sbb
out
adc
push
lcall
inc
cmp
mov
iret
pushf
bound
xor
jbe
out
shlb
out
shlb
sbb
xor
pop
pop
dec
lock
pusha
add
mulb
jg
mov
je
add
and
pusha
test
aad
push
mov
lock
pushl
addr16
inc
add
setle
sbb
lahf
shrb
sub
lea
jne
sbb
jmp
out
test
lcall
in
lcall
popa
psrld
dec
adc
sub
mov
popf
push
fists
mov
mov
mov
fstpl
or
rclb
ret
movsb
jg
mov
pop
sub
test
mull
std
adc
movsb
push
add
icebp
jg
jae
lock
pushaw
inc
roll
and
mov
loop
add
xchg
add
pop
rol
mov
shll
inc
push
insb
jo
lock
mov
sub
jg
and
sbb
inc
bnd
add
push
inc
or
js
sbb
mov
or
pop
or
xchg
and
pushl
or
add
cmp
xchg
addb
push
fiaddl
sub
and
sbb
pusha
jp
sbbl
adc
sbb
jp
push
call
sbb
imul
and
and
adc
add
pusha
xchg
xorb
dec
lods
fldl
or
sbbl
cmp
insl
mov
cli
jle
mov
adc
add
ljmp
loopne
push
push
adc
decb
and
push
shlb
sbb
add
pushf
clc
rcrb
test
jp
rcrb
lret
loopne
in
shlb
call
and
andb
loop
xchg
cli
orl
repnz
mov
pop
loope
shrl
lret
imull
adc
and
loopne
in
in
decl
and
add
pop
in
popa
inc
jae
lcall
xchg
add
mov
test
or
loopne
cmp
sub
cwtl
push
icebp
lcall
mov
fidivrl
setp
pop
es
imul
add
sbbb
bound
shlb
fbstp
push
xor
pop
cmp
mov
mov
loopne
push
inc
loope
xor
push
and
mov
or
add
sarb
pop
aaa
sahf
sbb
sub
add
mov
bound
add
sarb
jp
aas
hlt
pop
adc
pop
mov
sub
push
add
push
add
popa
pop
mov
ficoml
add
adc
jnp
sub
add
jbe
jno
xorl
bound
insl
mov
sub
shll
movsb
sub
sub
pop
lock
dec
hlt
push
pusha
add
xchg
sub
icebp
scas
adc
pop
inc
dec
stc
mov
repz
lcall
add
sbb
jmp
push
imul
roll
shrl
mov
hlt
popa
or
pop
mov
icebp
push
mov
leave
sub
mov
and
rcrl
punpckhbw
jp
jo
add
in
or
bound
jne
add
or
pop
es
mov
mulb
stos
dec
in
add
ret
add
aas
bound
push
xor
inc
pop
les
push
sbb
mov
jp
mov
pop
aam
jge
sahf
in
mov
push
ficoms
add
das
jno
add
dec
and
cmpsb
mov
mov
hlt
push
clc
push
adc
jae
push
sbb
clc
xchg
shl
sub
sbb
push
add
pop
jno
inc
fwait
enter
test
xchg
and
jg
test
or
les
arpl
inc
call
push
jge
add
push
mov
pop
lock
jno
add
or
daa
cmp
dec
adc
loopne
fldt
hlt
jno
push
pop
dec
rcl
add
inc
xlat
pusha
adc
fwait
sub
movsl
push
inc
jo
fimull
pop
add
mov
push
cmp
in
jg
sahf
and
pop
loopne
ret
jnp
xor
jp
push
jb
loope
std
sub
or
mov
pushf
mov
outsl
lret
gs
or
add
pusha
push
out
adcb
es
add
pop
jg
ljmp
adc
out
test
adc
add
add
lahf
es
or
outsb
fsubs
insb
mov
xor
testb
or
push
in
lret
cltd
add
je
ret
jnp
dec
mov
arpl
sbb
mov
addr16
testl
lret
outsb
call
and
mov
pop
and
hlt
clc
rorb
out
test
lock
inc
inc
clc
sahf
aaa
push
adcl
push
cwtl
add
call
xchg
nop
push
cltd
jg
or
mull
add
mov
xchg
inc
jnp
lock
fbld
addb
dec
fwait
push
push
rorb
add
add
push
add
dec
and
stos
movups
inc
push
pop
test
xchg
lret
xor
xor
mov
and
sbb
pusha
mov
adc
jb
xchg
and
add
cmp
pop
cltd
or
repnz
dec
pusha
loop
movsl
lock
rorb
and
mov
and
and
and
and
jne
push
sub
adc
ljmp
rorl
pusha
pusha
addl
popa
mov
jo
cmp
enter
jo
mov
js
ret
mov
insb
inc
inc
cmp
mov
or
add
mov
lcall
stos
jp
bound
out
or
mov
inc
push
jmp
mov
ret
push
or
jl
mov
sbb
imul
add
pop
addr16
push
ret
pop
pop
mov
push
mov
movsl
mov
repnz
je
and
ss
xchg
push
lea
stc
addr16
and
fimuls
sub
fs
dec
pavgb
adc
inc
sub
sub
dec
lods
lcall
xchg
xchg
dec
call
adc
dec
push
pop
dec
jo
jbe
cmp
and
decb
int3
add
aaa
xor
cmp
mov
repz
addb
jg
leavew
shll
rclb
and
add
sub
mov
and
push
nop
mov
push
cmpsb
fwait
out
cli
inc
nop
add
xchg
lock
lock
outsb
pop
mov
sbb
sub
jp
outsb
inc
and
bound
adc
mov
lcall
mov
xchg
mov
sbb
cmp
sbb
dec
cltd
pusha
adc
outsl
xor
lcall
les
pop
sbb
push
pop
lock
and
sub
decl
sahf
arpl
rclb
dec
bound
lret
pop
sbb
sti
insl
add
ss
push
or
dec
bound
adc
and
sbb
into
and
jae
add
mov
mov
inc
sbb
aaa
mov
or
jmp
test
add
clc
decl
sub
sub
out
cli
jg
jb
mov
mov
push
inc
movsb
test
sarl
decl
mov
push
push
sub
xor
jg
add
insb
mov
mov
push
pop
adc
adc
mov
pop
xor
and
cmp
adc
sti
jp
mov
dec
inc
xchg
sti
cmp
jbe
incl
push
aam
xor
and
pop
lcall
mov
pop
nop
xchg
xor
xor
mov
lock
add
into
push
cmpsb
push
push
ja
mov
jbe
clc
push
aaa
and
addb
cwtl
pop
ret
dec
ds
dec
add
sahf
clc
lods
pop
addr16
add
sbb
and
lcall
mov
pusha
mov
and
adc
push
and
ds
mov
push
pop
adc
or
mov
xchg
xor
lods
dec
add
pushf
dec
add
inc
clc
xchg
test
imul
and
or
fmuls
or
lcall
ja
into
jg
adcb
test
sbb
clc
or
lods
push
int3
push
push
stc
ret
js
testl
aaa
notl
and
bound
and
add
mov
mov
lock
adc
dec
xchg
lcall
push
nop
mov
push
lcall
roll
pop
inc
inc
rcrl
add
data16
push
adc
add
out
and
inc
pusha
cmpb
aam
roll
adc
cli
out
add
enter
xchg
adc
test
push
xchg
inc
pop
jo
add
push
subb
ret
pop
imul
jle
push
push
adc
adc
movups
adc
push
les
dec
sbb
mov
pop
jmp
xor
mov
cmp
ret
jae,pt
sub
sub
inc
xchg
or
adc
add
add
adc
jno,pn
shrb
add
rcrb
es
pop
inc
jge
clc
js
add
popa
xchg
push
nop
xchg
xchg
xchg
add
cmc
stc
test
addl
mov
bound
sub
sbb
test
ds
dec
hlt
add
incl
icebp
into
js
dec
popa
pop
cmc
jge
imul
fsubr
js
add
bound
incb
push
ret
sub
jle
stos
mov
add
mov
js
pop
addb
inc
mov
adc
stc
push
roll
aaa
adc
dec
jl
stc
fdiv
mov
pop
fcomi
jb
decl
push
les
xchg
sub
xchg
jo
and
pop
inc
lds
and
inc
push
repz
cwtl
scas
popa
jno
daa
jp
int
incb
shrb
dec
out
jl
mov
jno
lcall
jle
aaa
cltd
mov
sub
or
xor
mov
enter
sub
inc
xor
sbb
ljmp
mov
or
push
inc
xchg
xor
xchg
sbb
sub
or
rorb
pop
inc
ds
mov
push
sub
xor
jl
add
inc
mov
mov
mov
mov
push
dec
inc
enter
inc
int
das
fcomps
cmp
rolb
pop
or
pop
shlb
rclb
or
ss
fbld
inc
xchg
lret
xchg
dec
pusha
fldcw
int3
fcomps
cmp
call
addb
mov
inc
pop
xor
repnz
inc
shlb
sahf
cld
add
jno
jle
icebp
mov
pop
add
jno
or
add
loopne
jp
inc
mov
lods
sbb
mov
pop
jno
or
scas
stc
add
add
jne
clc
xor
jp
les
outsl
pop
and
or
pop
daa
test
stc
aas
mov
subl
mov
pop
push
aad
xchg
sub
adc
mov
rclb
call
add
mov
stc
out
sbb
and
call
dec
mov
inc
js
adc
je
sub
movsl
aaa
inc
xor
jp
adc
adc
les
mov
dec
bound
or
bound
aam
pop
icebp
or
idiv
pusha
adc
add
adc
adc
lcall
test
jne
testb
dec
iret
inc
dec
pusha
or
int3
pushaw
xchg
inc
pop
notb
mov
imul
jp
sub
icebp
push
pop
adc
or
adc
shll
cmpsb
cli
pop
mov
xchg
aam
adc
sbb
dec
sbb
outsl
mov
das
adc
lret
mov
or
cmp
mov
ret
mov
mov
shrl
pop
stos
jle
cmp
mov
add
jl
in
inc
loop
popa
mov
lcall
pop
popa
push
cltd
inc
inc
inc
imul
xchg
dec
loop
push
out
add
loope
rclb
leave
cli
fildll
push
ret
add
and
and
leave
outsl
incl
pop
jbe
sbb
sarl
hlt
jno
pop
inc
ret
loop
mov
mov
cmpb
or
mov
test
push
sub
incb
xorl
pusha
es
cmpb
in
jg
push
dec
and
popa
movsl
adc
hlt
stc
loopne
push
or
push
xor
and
dec
add
push
pop
inc
mov
lret
adc
add
push
adc
jbe
lret
test
in
mov
add
push
orl
xor
cmp
or
fwait
jmp
mov
inc
adc
push
cmp
sub
jo
jbe
mov
xor
ss
inc
leave
shll
popa
adc
add
or
aad
inc
scas
xor
incl
lds
and
es
add
dec
inc
mov
lcall
icebp
or
push
fimull
sahf
fiaddl
sbb
or
sbb
add
push
pusha
sti
jg
in
push
and
int
jl
pusha
arpl
inc
or
mov
loop
or
or
jg
or
es
cltd
fs
std
adc
int3
bound
arpl
mov
ds
rorb
out
push
xchg
push
into
lcall
push
and
call
in
loopne
add
mov
add
lcall
mov
or
mov
or
daa
inc
das
lock
js
mov
xor
out
adc
adc
sub
pusha
addr16
rolb
push
repnz
outsl
ja
sub
push
addb
mov
test
icebp
sbb
psllw
stos
jp
sbb
add
nop
pop
dec
and
mov
enter
mov
add
jg
icebp
icebp
and
mov
dec
nop
add
nop
jl
pop
in
lods
add
es
dec
dec
add
arpl
sub
pusha
clc
and
adc
xor
into
inc
in
and
sbb
lds
daa
dec
push
lock
fwait
push
lahf
dec
adc
and
mov
mov
add
add
dec
mov
es
test
add
jle
xor
dec
add
sub
ss
mov
filds
mov
adc
stc
jge
and
orb
and
fsub
cmp
push
dec
data16
rolb
inc
dec
fs
jg
sbb
sti
jbe
lea
pusha
adc
mov
and
stc
jne
adc
pop
add
ret
sub
jb
xor
dec
fdivrs
sbb
fldenv
ret
cmp
adc
outsl
shlb
inc
add
cmp
push
xor
mov
sbb
adc
test
imul
add
outsl
fwait
popa
jno
push
inc
clc
pop
xor
add
mov
or
je
fiadds
jp
lds
pop
push
or
and
mov
sub
xchg
adc
or
insb
pop
push
jl
add
sub
adc
mov
fistpl
aaa
jle
test
push
cmpl
lret
inc
xchg
dec
mov
por
inc
js
data16
add
movsb
stos
sbb
add
push
insl
mov
mov
add
sbb
lea
mov
jae
aaa
jp
jae
inc
stos
cltd
sbb
add
test
add
jno
outsl
mov
nop
jl
cltd
je
popa
cmpsb
xchg
ret
dec
stos
jb
test
add
addr16
cmc
stos
mov
aas
xor
jo
hlt
sbb
add
es
loop
nop
adc
push
in
data16
push
xor
add
sarl
add
jge
cld
stc
mov
nop
and
nop
push
pop
jo
dec
cwtl
cld
jo
test
lods
cmp
mov
aas
xor
jo
push
dec
mov
adc
push
sbb
mov
pop
loopne
push
movapd
sahf
lcall
or
dec
jle
pop
xor
lods
movsl
icebp
push
add
adc
add
add
movsl
adc
cmp
popa
mov
push
push
jo
add
rolb
or
sub
jno
jbe
outsb
sbb
xorb
add
sbb
movsb
xchg
push
pop
or
jo
add
stc
sbb
in
loop
sub
xchg
pop
andb
pop
cmpsb
jge
fldl
lret
fmuls
dec
cmp
adc
xchg
repnz
mov
mov
or
and
loop
or
les
sbbb
add
cmp
push
out
ss
aas
cli
jle
add
jbe
cmpb
fmuls
and
cli
add
inc
mov
jo
pop
and
fs
sti
das
mov
xor
test
mov
loopne
fcomps
inc
sub
data16
cmp
mov
xor
cmpsb
push
xchg
lock
call
into
nop
mov
and
mov
add
ss
push
in
jb
xchg
sahf
xor
jg
push
idivb
lods
add
xor
add
icebp
push
and
pop
sbbb
loopne
nop
mov
addb
mov
push
sub
pop
mov
add
and
mov
pop
sahf
dec
mov
cli
test
incb
push
aam
lock
bound
dec
add
sbb
inc
mov
mov
xchg
sar
sahf
mov
cli
jg
loope
inc
xchg
inc
dec
jge
ffree
push
aas
jle
decl
sbbl
mov
test
and
cmpsb
push
mov
adc
or
add
add
jae
or
and
das
jp
pop
ja
cli
daa
lea
dec
aaa
mov
cs
jnp
mov
add
cli
aaa
gs
loopne
sub
sub
js
push
inc
push
aas
stos
xor
xor
add
mov
mov
add
cmp
inc
or
jmp
pusha
mull
mov
clc
std
push
xor
ja
sub
jge
cli
jbe
gs
jbe
adc
mov
cmp
mov
jno
rcrb
clc
bound
repnz
insl
repnz
cli
jg
fs
dec
add
mov
subb
cli
jne
data16
lods
add
push
add
mov
or
sub
call
xchg
cwtl
cmp
shrb
lea
rcll
mov
add
adcl
mov
cmp
out
xchg
mov
aaa
xchg
xorb
add
mov
xor
sub
icebp
pop
mov
dec
mov
lods
decb
adc
or
lcall
mov
or
and
or
sub
ror
xchg
pop
pop
jmp
fildll
cmp
dec
loope
aad
rcrb
and
sbb
cld
or
add
stos
sub
subb
and
add
sub
cmp
shr
cmp
adc
aaa
fldl
cmp
sub
outsb
jge
fisubl
mov
cs
gs
outsl
pusha
or
ret
cmp
les
subl
cmp
mov
ss
sbb
ret
mov
inc
loopne
cmp
lock
jg
lods
test
das
or
ljmp
and
loope
push
aas
call
jno
mov
aaa
or
add
hlt
inc
cmp
icebp
pop
hlt
cli
push
push
cmp
xchg
outsl
cmp
sub
jbe
out
push
cmpsb
pusha
cmp
xor
jno
stos
xor
vcvtsi2sd
outsb
add
test
and
jge
jp
and
adc
inc
and
dec
jo
mov
faddl
or
mov
jmp
add
inc
shr
add
inc
xchg
sarl
xor
rorb
hlt
shrb
dec
insb
mov
dec
insb
js
sbbb
pop
and
cli
popf
xchg
pushf
mov
in
mov
or
inc
call
sub
cwtl
add
mov
lods
leave
or
cmpsb
or
add
cmpsb
cmp
mov
cmpsl
add
push
adc
stos
or
push
mov
das
pop
mov
xor
inc
push
cmpl
cmpl
add
insb
jle
xchg
pop
lods
sbb
sub
add
or
sahf
daa
rcl
mov
mov
dec
adc
cs
or
bound
adc
scas
loopne
int3
mov
or
push
testb
add
or
xchg
orb
lea
cli
jmp
mov
xor
adc
test
incl
outsl
fwait
jp
add
nop
inc
aaa
andb
addb
add
mov
sahf
mov
and
and
sub
add
imul
fmuls
jl
ss
inc
out
sbb
clc
mov
push
jmp
pop
sbb
jmp
mov
sbbb
das
adc
mov
add
pop
subl
add
xchg
pop
sub
mov
add
loop
ret
ds
or
xchg
and
xchg
adc
push
push
push
repnz
das
add
add
sub
adc
stos
mov
inc
push
lea
jno
pop
fldl
test
lods
rolb
fs
jmp
adc
icebp
ljmp
xchg
sahf
xchg
fucomp
ljmp
fs
push
or
rorb
and
adc
add
cltd
lock
aas
popa
movl
jle
xchg
dec
clc
add
mov
inc
bound
loop
addb
stc
cmp
aas
loope
jns
addb
rolb
adc
push
rolb
shrb
pop
std
dec
je
dec
add
cmp
inc
add
ret
popa
sub
dec
jle
pop
addb
adc
je
xchg
loop
xchg
sbb
data16
mov
fisubl
cld
xchg
add
jno
test
fcomps
sahf
or
aad
insb
test
mov
sbbb
dec
xor
addl
cmp
aas
pusha
loope
pop
sbb
test
andb
dec
xor
xor
pushl
xor
rolb
jle
imul
mov
xorb
inc
or
inc
jo
mov
push
subl
jg
mov
add
lods
ret
gs
and
stos
mov
fdivl
mov
jno
stos
jecxz
push
aam
sbb
push
addr16
inc
pop
and
push
xor
cmpsb
or
stos
test
scas
fbld
xchg
rcrb
aaa
and
or
adc
mov
and
cs
cmp
or
xchg
subb
addl
pop
cmp
in
jg
mov
cmpl
shlb
incl
inc
sahf
aad
or
addl
loopne
cld
pop
lcall
or
lcall
or
subb
adc
sub
add
dec
xchg
sub
add
inc
and
jae
cmp
add
cmpb
ja
jo
cmc
aaa
xor
mov
xchg
mov
lock
pop
popaw
inc
jge
scas
addl
add
mov
add
and
xchg
pusha
mov
inc
push
add
push
add
mov
call
ficompl
jle
jp
cwtl
jp
cli
es
jae
add
mov
xorl
add
push
add
ret
jae
sti
aaa
dec
loopne
popa
adc
addb
aas
or
pop
popa
sti
push
inc
inc
jg
jo
mov
jg
or
push
into
mov
in
or
insb
mov
mov
xor
pop
lods
dec
inc
adcb
jge
outsb
cmp
aaa
cld
jg
add
pop
decl
loope
out
popa
xorl
or
ficompl
mov
cld
add
xchg
inc
inc
insb
cmc
loop
sbb
mov
or
inc
ret
pop
mov
data16
push
add
inc
mov
aas
sub
jno
push
fcmovbe
inc
test
xor
fwait
icebp
clc
sub
movsb
stc
mov
xor
imul
std
or
push
push
test
addb
mov
loop
adc
popa
mov
js
add
insl
mov
jle
mov
cmp
sub
pusha
pop
xchg
das
inc
xchg
and
lods
or
and
lods
fs
hlt
mov
pushf
push
rclb
jne
orl
addb
jno
add
mov
jno
add
mov
mov
sti
and
subb
or
jecxz
icebp
push
pop
mov
sbb
sub
enter
add
add
add
loopne
jl
mov
adc
xchg
mov
lcall
pop
sub
push
fidivrs
push
or
adc
dec
mov
push
push
inc
sbb
adc
hlt
add
adc
and
or
adc
mov
or
and
adcb
mov
add
fildll
mulb
mov
mov
and
dec
repnz
cld
ljmp
cmpsl
add
clc
cmp
ret
push
mov
test
sarb
orl
add
cmp
adc
data16
xor
mov
lock
mov
add
add
add
aas
test
add
sub
mov
xor
cmp
mov
jecxz
cmp
add
and
sbb
es
sbb
push
push
inc
je
adc
add
xor
xchg
mov
mov
jbe
inc
icebp
add
mov
xchg
or
xchg
add
jg
ljmp
add
push
or
fwait
test
into
xchg
lock
adc
fcomip
sub
ja
push
js
mov
rcrl
cltd
cmpb
pushl
jae
xchg
test
sti
mov
pop
mov
sahf
cmc
pop
adc
xor
sbb
push
mov
and
mov
push
mov
push
adc
bound
stos
jo
add
xchg
je
lods
and
jp
arpl
jo
jle
lcall
into
stos
xchg
cmpb
and
cmp
fisubrs
dec
add
cmp
or
loope
pop
or
sbb
cmpsb
loopne
sbb
fs
lcall
pop
pop
add
and
iret
sarb
add
or
jg
add
inc
cli
push
insb
shrb
jmp
mov
rclb
into
mov
cmp
sbb
mov
fwait
sub
adc
jg
sub
adc
jo
jp
mov
lock
mov
sbb
push
jl
in
dec
xchg
and
shlb
fildll
stos
mov
adc
inc
fidivs
jo
lea
stos
sub
sub
pop
inc
add
mov
jbe
lcall
mov
stos
pop
test
fdivr
sub
jp
sbb
sub
fimuls
and
xchg
pusha
pusha
xorb
sub
pusha
xchg
adc
push
adc
lahf
les
mov
mov
mov
loopne
lea
push
xor
or
cmp
and
mov
loope
push
and
imul
push
pop
push
or
xor
add
xchg
xor
and
jne
rorb
bound
mov
sbb
xor
out
cli
xor
jmp
sub
mov
jle
jno
and
xchg
mov
rol
ljmp
cli
jno
jmp
fisttps
xor
jb
add
mov
dec
or
test
rolb
pop
push
pop
lock
gs
push
push
ror
hlt
pop
xchg
mov
mov
and
pop
addr16
lea
jl
test
push
or
xor
mov
pop
push
xor
cwtl
xchg
mov
cmpsb
jo
push
pop
lock
mov
popa
pop
sbbb
or
bound
push
inc
and
or
xchg
clc
push
lock
lods
mov
push
mov
inc
push
insb
dec
mov
add
xchg
sub
pusha
adc
icebp
popf
xchg
ficompl
adc
jno
inc
inc
and
arpl
add
sbb
aad
clc
and
inc
push
repnz
mov
sbb
aaa
std
testb
add
or
outsb
lcall
and
dec
je
or
lcall
and
jle
ljmp
or
stc
or
movsb
mov
out
jp
mov
sbb
mov
sub
popf
push
mov
add
mov
scas
bound
loope
test
xchg
add
add
sub
loopne
xor
push
orb
xchg
or
push
sbb
jle
sbb
pop
test
and
mov
ret
xor
in
aaa
mov
xchg
es
gs
add
mov
cld
dec
add
sbb
adc
ss
mov
or
add
rcrl
add
or
lret
ret
xchg
or
lea
adc
call
push
ja
cmp
dec
add
aam
cmc
jg
mov
loope
inc
lock
xor
rcrb
call
inc
stc
push
mov
xor
sar
add
mov
push
movsb
add
pop
or
add
pushl
ss
mov
inc
adc
cwtl
pop
jbe
sarb
add
inc
push
icebp
lcall
addb
ds
rdmsr
lea
cmp
clts
jp
jno
stc
jns
mov
sarb
mov
ret
repnz
jno
adc
inc
or
xor
inc
or
enter
push
fiaddl
add
mov
jge
add
cmp
jo
stc
xor
insl
xor
pushl
bound
pusha
inc
out
adc
adc
jns
loop
push
insl
adc
mov
add
call
mov
movsl
pop
imul
pushl
push
mov
rorb
dec
push
std
decl
push
lea
aaa
push
add
xor
push
lea
push
mov
inc
adc
orb
pusha
stos
push
and
pop
xchg
inc
push
stos
jecxz
rolb
lret
pop
inc
fs
push
push
and
mov
adc
jb
add
shl
cmp
mov
movsl
and
movsb
push
add
dec
adc
mov
sub
test
sbb
call
sbb
aaa
add
inc
adc
js
inc
pop
icebp
and
xor
or
mov
push
cmp
cwtl
sti
ja
cwtl
xchg
rcrb
jns
shlb
cmc
add
cmp
inc
bound
cli
pop
gs
adc
pop
sbb
xchg
inc
jae
or
faddl
lret
shlb
sub
jo
popa
push
imulb
inc
xchg
lock
rorl
add
shl
inc
jo
mov
pusha
mov
out
and
popf
jnp
mov
push
lock
clc
popf
mov
jb
adc
add
xchg
jnp
adc
pop
ds
icebp
sbb
pop
xor
mov
clc
cmp
push
loopne
fwait
outsl
test
xor
incl
xor
inc
adc
mov
rorb
aam
and
je
test
pop
cmp
push
xor
mov
pop
arpl
aaa
mov
mov
cmp
adc
push
xchg
mov
add
and
lods
inc
sbb
mov
pop
jbe
mov
xchg
dec
add
pop
mov
das
adc
xorb
or
nop
int3
push
jns
add
enter
mov
xor
int
pop
test
inc
xor
push
xorb
add
jns
loopne
cltd
push
mov
movsb
jp
inc
mov
add
xchg
mov
add
fs
pop
pop
dec
add
stos
jno
xor
sub
stos
add
push
andl
add
add
sub
xchg
shrb
mov
stos
inc
xorl
dec
inc
adc
test
cmp
push
clc
cwtl
test
test
mov
repnz
jae
mov
or
aas
popa
add
cmp
adcb
jo
jge
or
adc
addl
or
adc
mov
sub
sbb
sbbb
jo
mov
cmp
test
icebp
add
xor
hlt
xor
test
jp
or
inc
mov
sub
cli
add
sbb
js
stos
rcll
jae
nop
lock
aaa
andl
add
out
push
pusha
add
out
loop
and
push
dec
orl
mov
nop
fwait
clc
aas
xor
shl
fst
add
xchg
bound
insl
mov
jp
adc
addb
jg
data16
lret
mov
push
jnp
mov
push
das
add
push
sbbb
add
sti
pop
mov
mov
sbb
adc
nop
test
mov
sbb
push
fsubl
pop
enter
ja
inc
xor
push
lret
sahf
shrb
inc
das
adc
mov
sub
and
push
inc
sahf
adc
add
adc
jg
ret
lcall
fiadds
jae
push
cld
jp
adc
or
lds
imul
aas
xchg
icebp
adc
add
stos
add
push
sbb
je
adc
adc
testl
inc
mov
add
jg
hlt
mov
add
or
push
inc
sbb
adcb
mov
ret
jo
dec
hlt
ds
add
add
inc
les
dec
jbe
and
add
push
test
or
jae
xor
jb
mov
in
es
mov
push
and
pushf
ss
sti
cmp
aam
int3
jp
ja
xchg
incb
pop
jno
cmp
lods
bound
push
dec
push
jb
cltd
ja
divb
mov
inc
addr16
bnd
mov
adc
add
cmp
jns
cmp
icebp
cmpsl
sbb
or
outsb
xchg
pop
fsubs
les
lret
rorb
add
mov
outsb
cmpb
popf
and
lea
or
inc
add
push
fwait
stos
mov
jmp
shrl
in
push
repz
sub
loopne
mov
sbb
push
push
push
jg
xor
jp
sub
lds
push
push
and
sub
dec
add
addl
les
orb
les
clc
dec
std
loope
pushl
inc
and
lds
scas
insb
sarb
mov
xor
sub
psllw
xlat
add
pusha
jg
sbb
and
or
push
or
lea
push
pushf
xor
aas
inc
push
cltd
jns
dec
movsb
sub
mov
daa
in
pop
bound
loope
push
and
je
cmp
mov
dec
push
push
ret
js
cltd
jbe
out
xor
jl
lods
and
or
pusha
incl
js
cltd
jo
pop
inc
inc
loopne
into
setns
loopne
jno
icebp
mov
jae
arpl
sbb
ret
and
sub
add
stc
lea
pop
mov
js
ljmp
and
dec
mov
jns
or
js
or
sbb
xor
sbb
jg
jo
inc
adc
pusha
add
mov
cltd
cmp
mov
xor
inc
sub
push
mov
jne
inc
or
adc
loopne
pushaw
and
cmpb
mov
shlb
je
fstpt
jp
add
inc
psraw
data16
inc
dec
mov
movhps
cs
jg
scas
cli
add
or
dec
or
mov
push
test
sub
pop
mov
push
in
push
push
cltd
imul
data16
and
sbb
push
dec
pop
xor
leave
jbe
mov
lcall
inc
pop
or
sub
adc
or
popa
cld
xorl
rcrb
shrb
loope
enter
cmp
jo
pop
loopne
in
lcall
pop
and
lods
mov
and
push
mov
loopne
fcom
inc
add
xor
push
or
push
cmp
xchg
push
stos
pop
add
add
or
and
stc
or
push
dec
lret
cmovo
push
xor
inc
rcrl
adc
bound
lea
cmp
fbld
rcrb
out
sarl
add
pop
mov
add
pop
into
sub
dec
pop
loopne
or
jg
or
xor
scas
fiaddl
add
shrb
add
jmp
add
hlt
scas
je
sub
add
lcall
ret
sub
mov
push
arpl
cmp
subb
lock
xor
mov
cmpsb
add
jb
xchg
push
pop
es
xchg
je
inc
mov
outsl
and
scas
sarb
pusha
mov
js
add
xor
xchg
into
mov
jg
or
push
add
push
rcr
mov
inc
pop
and
add
rolb
jl
fiaddl
dec
pop
add
jae
pop
adc
jnp
imul
loopne
mov
jp
xchg
add
imul
pop
out
addl
sub
adc
pop
cmp
and
ja
add
lcall
fwait
or
lcall
das
adcb
loope
fidivl
push
aas
add
test
jae
and
stos
stos
mov
push
pop
pusha
or
add
push
bnd
aaa
enter
pop
add
cmp
inc
pop
mov
sub
arpl
cltd
inc
jg
mov
fimull
or
pop
mov
push
jbe
mov
loop
mulb
lea
mov
adc
cmp
addl
mov
rorb
push
and
mov
or
mov
inc
setle
lock
mov
stc
jp
lea
mov
es
mov
mov
xor
and
shr
jl
sbb
cmp
and
ds
outsb
mov
sbb
insl
shll
add
cmp
xchg
adc
xchg
lock
xchg
out
addb
addr16
push
jmp
lret
adc
imul
scas
test
sub
pop
and
lea
add
inc
push
xor
xor
or
mov
xor
sahf
insb
mov
mov
sub
mov
push
cmp
push
pop
cld
add
xor
jo
sahf
js
loope
pop
mov
es
jge
sbb
lds
jl
cli
cmp
add
and
mov
mov
arpl
cld
xchg
add
sub
fistps
dec
pop
lret
or
jg
or
ja
cmp
sbb
jo
jge
les
ret
xor
and
out
es
mov
cltd
jl
ss
adc
in
push
aam
ss
mov
hlt
incl
lds
and
and
sub
and
push
js
xchg
xchg
add
cli
mov
lret
adc
mov
mov
or
mov
fadds
cmp
and
add
fwait
or
dec
add
mov
sbb
fldl
lock
pop
jecxz
add
inc
or
xor
push
test
sub
jl
adc
xor
push
xchg
and
mov
and
or
pusha
sysenter
add
mov
mov
popl
push
in
adc
xor
rorb
stc
xchg
adc
dec
xor
dec
inc
xchg
or
mov
sbb
jg
mov
gs
repnz
push
cli
add
adc
add
cmp
cmp
and
ss
add
or
xchg
xor
cmp
jecxz
ret
movsl
mov
inc
cmp
and
and
repz
movsl
sahf
and
mov
sub
sub
ret
addb
mov
call
filds
mov
dec
mov
mov
sbb
add
scas
adc
stc
xor
cli
push
adc
add
sbb
dec
lds
std
sub
pusha
add
test
sub
jge
push
sbbb
cmp
push
adc
adc
jle
xorb
lock
cmp
mov
xor
push
pop
mov
or
es
cltd
inc
inc
sbb
rcl
incl
mov
jns
adc
les
and
xlat
push
fcos
xor
mov
xor
stc
inc
mov
adc
mov
inc
setns
add
lcall
sbb
popf
in
mov
add
add
outsl
adc
and
pop
add
sti
push
push
and
loop
sub
cmp
cmp
les
sub
add
dec
jp
xor
push
enter
or
and
outsl
int
shrb
add
lea
fcomi
cmpsb
outsb
and
outsb
andl
lods
ret
dec
or
inc
inc
adc
adc
and
bound
adc
mov
hlt
sarl
add
addb
and
subb
or
fcmovnb
addr16
lcall
insb
jae
dec
or
ja
clc
lgs
or
jne
pop
ljmp
incb
xor
jno
pusha
jbe
or
fwait
cmp
nop
sbb
push
sbb
jbe
aaa
test
dec
movsb
inc
data16
xor
add
mov
push
rorb
rcrl
movsb
divb
or
adc
mov
push
mov
push
and
movsb
push
mov
lcall
sub
aam
dec
xor
and
jg
movl
and
or
shlb
aad
mov
shlb
dec
pusha
inc
stc
push
xor
loopne
lcall
mov
jb
or
push
shlb
jl
fwait
shlb
xor
loop
inc
sub
jg
jae
xor
add
lcall
bound
test
mov
rorl
cmc
dec
nop
jns
fs
dec
xchg
jecxz
pop
mov
mov
mov
ret
dec
add
outsb
out
sbb
push
stc
xor
mov
adc
push
idivb
or
sub
inc
ret
inc
push
scas
push
test
inc
rorl
rorb
add
subl
fldenv
cmp
adc
shrl
pop
cmc
pop
inc
or
push
and
dec
mov
inc
push
cmc
inc
push
mov
push
xor
lcall
and
sbbl
andb
mov
icebp
add
addb
out
loopne
pop
push
xor
push
das
sarb
add
cwtl
and
sbb
insl
xchg
into
shlb
gs
loope
bound
push
or
and
inc
xchg
stos
pusha
add
mov
in
es
lcall
addl
mov
dec
out
xor
mov
repnz
shlb
clc
loop
lret
xchg
jnp
lock
jb
inc
nop
jmp
add
leave
clc
jg
xchg
mov
or
and
ja
nop
push
mov
and
dec
or
push
dec
cmp
popa
test
pop
and
mov
mov
decl
inc
in
or
stos
sbb
xorl
pop
aas
or
push
sarb
adc
mov
loop
lock
sub
out
or
cltd
jns
jae
push
loopne
mov
push
xlat
or
fcompl
xor
pop
lods
adc
das
ds
pusha
mov
stc
jl
movb
je
leave
lcall
mov
adc
pusha
jg
testb
jno
jae
scas
sbb
and
and
fadds
sbb
and
xor
movsb
sahf
mov
inc
frstor
cs
push
out
add
add
add
mov
cmc
and
pusha
inc
lods
jo
into
cli
popa
pushf
pusha
lock
xchg
dec
shr
pop
cltd
push
pop
call
xor
add
or
or
inc
addl
pushf
fisubs
add
mov
orl
pop
jle
cmp
push
and
adc
or
adc
scas
adc
popf
add
jno,pn
xchg
imul
and
cmp
je
add
mov
xchg
adc
mov
inc
jge
filds
pop
orb
push
sub
and
push
lret
and
push
pop
inc
inc
and
cmp
add
push
jmp
pop
xchg
add
dec
add
pop
pop
jae
jp
andw
mov
subb
lea
jae
sbb
xchg
cltd
sbb
xchg
jg
mov
push
mov
mov
in
add
adc
or
jbe
jne
mov
inc
add
push
push
test
fsubl
add
les
les
and
flds
jp
adc
mov
sbb
cmp
call
test
jno
sub
add
mov
mov
push
dec
shlb
sahf
xchg
or
nop
mov
xchg
sub
subb
nop
push
xchg
inc
inc
add
sbb
cmp
outsb
xchg
sbb
push
add
shl
pop
xchg
flds
xchg
push
rorb
inc
inc
pop
mov
movsl
adc
cld
cmp
dec
sbbb
stos
add
adc
add
aas
fidivl
push
sti
xor
or
jb
bound
pop
inc
test
jle
jno
out
xor
orl
inc
das
aad
adc
mov
pop
sarb
mov
inc
adc
push
sub
cwtl
sub
push
mov
add
sbb
frstor
gs
jge
jo
xchg
or
cmp
or
and
adcb
cmpsl
shrb
ds
outsb
dec
std
adc
outsb
add
aaa
mov
dec
mov
jnp
pusha
add
test
mov
push
xorb
push
pop
mov
jb
fwait
xchg
add
push
pop
inc
or
cmp
mov
cwtl
jno
sarl
add
out
mov
add
lret
push
push
insl
sub
rolb
jp
adc
inc
push
adc
xor
clc
mov
or
adcb
pop
fmull
stc
add
jge
cli
push
cmp
js
test
loop
push
fdivr
add
cmc
out
orb
lcall
adc
push
add
insl
and
das
nop
jne
lods
push
pop
add
pop
scas
mov
jl
sbb
jle
popf
ljmp
pop
out
add
push
adc
cmp
add
icebp
push
addb
jle
out
mov
cmp
xchg
push
lcall
scas
inc
sbb
or
push
aad
sub
add
and
inc
add
movsb
jo
push
fidivrs
jg
loopne
or
lcall
add
and
mov
repz
pop
or
inc
rclb
sub
fs
pushl
pop
pop
push
lcall
dec
es
push
test
lcall
ret
mov
das
mov
jg
inc
mov
jno
inc
loop
pushl
pop
adc
sub
mov
incl
and
sarb
pop
js
add
inc
insb
adc
sar
fcomip
push
imulb
add
adc
repnz
loopne
test
and
ret
gs
add
jle
pop
push
jae
test
ja
sub
rorb
push
cltd
gs
sub
ljmp
les
push
mov
or
pusha
adc
and
adc
mov
mov
dec
mov
ret
jecxz
adc
loopne
out
mov
inc
lahf
mov
or
sahf
out
push
rol
sbb
loopne
and
loop
xchg
std
push
mov
decb
ret
mov
outsb
inc
xchg
inc
dec
scas
inc
jge
icebp
mov
jns
pop
push
loopne
pop
pop
jle
adc
mov
pusha
imul
push
xor
fsubs
jle
dec
and
out
jbe
mov
rcll
adc
mov
and
adc
adcb
dec
mov
cmp
outsl
ror
les
int3
or
and
push
jbe
filds
adc
pop
xchg
adc
pushl
dec
pusha
aaa
outsl
lcall
add
inc
and
cltd
and
mov
and
adc
xor
sub
lock
jbe
repz
repz
rcr
call
lcall
inc
push
inc
je
pop
bound
and
mov
aam
dec
in
add
adc
mov
inc
cmpsl
xchg
or
sbb
pop
dec
pop
lock
or
lods
les
bound
dec
mov
loop
lea
lcall
jecxz
push
push
loopne
bound
mov
mov
or
or
sbb
or
mov
jne
movsb
pop
sbb
sbb
and
insl
mov
test
add
imul
test
mov
icebp
nop
sub
add
dec
adc
sub
and
add
fwait
sub
testb
fildl
cld
inc
loopne
dec
add
add
and
fdivs
popa
test
add
add
and
pop
or
incl
out
test
orb
pop
jns
loope
dec
jl
aaa
lret
shll
cmp
mov
rorl
mov
or
sbbb
inc
push
adc
lcall
and
sbbl
xor
mov
fs
outsl
xor
icebp
lea
sbb
test
mov
jnp,pt
lcall
or
sbb
xor
xor
or
sub
add
cmp
insb
and
ljmp
aad
xchg
outsb
stos
stc
pusha
addl
stc
dec
xor
jno
jp
push
add
sti
xchg
or
adc
add
icebp
add
mov
push
std
and
mov
xchg
inc
mov
push
arpl
jnp
ja
mov
jbe
je
xor
push
lcall
clc
es
imull
mov
cmp
jbe
inc
cs
or
sub
test
jns
and
pop
sarb
sbb
mov
hlt
jb
or
mov
outsb
mov
mov
insb
cmpsb
inc
mov
bound
xchg
add
es
adc
push
adc
stos
imulb
scas
jb
movsb
mov
jae
push
lret
enter
scas
and
scas
out
jbe
adc
bound
inc
ret
cli
xorb
jle
out
sbb
jp
test
and
mov
imul
icebp
xchg
shlb
mov
inc
je
jl
fiadds
sbb
mov
and
bound
pushw
ja
adc
clc
sbb
pop
mov
xor
add
dec
into
sbb
adc
pop
mov
xor
dec
jle
aam
mov
jp
sbb
shrb
stos
sahf
testl
push
daa
add
mov
pusha
or
scas
cli
idiv
rolb
test
add
sbb
add
mov
in
push
sub
pop
rcrl
adc
jg
lret
jo
fs
jle
repnz
push
loope
loop
repnz
jnp
pop
add
and
pop
popa
push
cwtl
pop
mov
mov
shlb
imull
dec
dec
sbb
icebp
inc
cmpb
sahf
dec
mov
push
sarb
cwtl
push
or
leave
push
ret
push
subb
adc
loopne
cld
adc
and
ja
clc
addb
mov
lcall
inc
mov
adcl
jo
lock
add
adc
les
fmuls
outsb
or
adc
or
jg
adc
adc
push
sbb
mov
dec
and
popa
jb
push
cmp
gs
sbb
sbb
inc
clc
jge
add
fs
inc
add
outsb
mov
add
mov
cltd
pop
dec
insl
sub
mov
jb
cmp
cmp
dec
cs
mov
outsl
push
dec
lock
xchg
dec
and
jno
aas
mov
pop
or
jle
push
ljmp
aaa
and
mov
mov
test
sbb
lods
adc
and
push
fs
bound
or
inc
xchg
push
loop
dec
xor
jmp
dec
jo
in
and
comiss
pop
lock
sbb
lds
sbb
scas
add
fistps
adc
mov
mov
jb
xor
addb
fsqrt
ret
xor
decl
jo
lock
mov
out
sub
push
clc
arpl
jne
pushl
dec
or
adc
gs
fs
adc
mov
push
adc
jno
je
fisttps
lods
lods
dec
mov
pop
mov
mov
pop
cld
decl
les
adc
adc
lret
stc
rcll
xchg
sub
in
inc
mov
add
adc
cwtl
mov
push
inc
dec
add
mov
scas
out
push
hlt
icebp
sub
mov
lret
sahf
push
jle
sahf
mov
push
inc
push
imul
je
jg
adcl
dec
jae
loope
xchg
cltd
loop
dec
pop
hlt
mov
inc
dec
xor
nop
iret
lcall
jbe
or
xorb
rol
push
loopne
testb
bnd
xor
psraw
push
sahf
lea
sbb
out
cld
inc
or
fwait
pop
add
jl
mov
push
decl
sbb
daa
rcrl
lds
hlt
jp
xlat
xchg
lahf
rorb
jo
popa
jmp
add
cmp
jb
mov
add
mov
ret
cmp
inc
add
lock
loopne
xchg
jge
loop
nop
shlb
jle
push
outsl
mov
and
inc
rclb
pushl
pop
addb
pop
mov
xor
xor
push
pushf
cltd
xor
and
dec
rolb
add
add
mov
and
outsl
mov
push
push
xor
insb
out
cmpsb
or
addr16
insl
pop
ficoml
nop
clc
addl
mov
popf
cltd
jo
test
stos
scas
add
mov
iret
jb
xor
pop
cld
call
lea
or
and
or
add
adc
repnz
pop
rorb
push
adc
inc
insl
lock
clc
pop
adcb
push
daa
inc
and
xor
and
sub
lcall
or
jp
or
or
push
outsl
ret
jbe
pusha
mov
and
addb
cltd
or
popa
xchg
xchg
sub
imulb
movb
xchg
mov
sarb
sub
ss
mov
clc
add
sbb
mov
lret
dec
addb
cmpsl
mov
pop
inc
jle
ja
inc
adc
jo
mov
jl
mov
mov
inc
mov
cld
or
sub
dec
orb
add
push
lods
add
jp
mov
mov
mov
add
add
out
and
jle
adc
in
outsl
pushf
add
and
add
or
fwait
sbb
add
push
add
lcall
ljmp
dec
add
or
dec
push
sub
notl
cmp
push
mov
fistl
sub
add
lcall
or
in
add
pop
inc
mov
adc
les
lcall
cmp
add
lcall
inc
add
fdivs
push
call
test
addb
xchg
add
xchg
mov
mov
or
wrmsr
ds
mov
or
jle
fldl
inc
ja
je
subb
xchg
sbb
inc
mov
adc
push
cli
adc
jo
sbb
xchg
sti
je
arpl
sti
or
jbe
mov
inc
vcmpps
rcrb
pop
nop
push
push
and
add
or
es
xor
xchg
data16
push
adc
mov
ret
sarl
jae
push
mov
icebp
jg
push
jbe
jns
jae
add
jnp
mov
int3
mov
pop
ss
clc
fistpl
jmp
into
dec
movsb
add
dec
jg
mov
dec
js
xor
adc
or
sub
bound
mov
cwtl
insl
xorb
pop
push
mov
adc
sub
sub
pop
mov
add
lret
add
jl
dec
or
bound
mov
inc
push
xor
inc
or
sbb
aaa
inc
mov
xchg
xor
jo
dec
xor
add
faddl
adc
xor
cld
das
sub
outsb
jp
insb
pop
popa
adc
sub
sbbb
or
push
adcb
jg
dec
sub
sbb
rolb
lcall
jle
data16
outsb
inc
lea
inc
call
cmp
lock
push
sub
add
add
cmp
repnz
cltd
add
push
leave
fadds
outsl
out
and
test
out
sub
stos
nop
sbb
add
aaa
rorb
dec
test
sub
cmp
mov
bound
mov
or
cmp
pop
mov
cmp
cs
and
add
add
int3
cltd
pop
repnz
add
adc
fwait
imul
roll
push
jbe
lret
fdivs
cltd
lods
or
pop
xor
inc
add
add
sub
or
jae
cmp
add
sub
add
repnz
jbe
push
jne
jle
sbb
pop
jp
pop
and
mov
test
lea
jae
nop
cmpsb
pop
outsb
adc
pop
adc
pop
push
lcall
cmp
adc
rolb
add
fwait
shrl
movsb
inc
shl
ds
cmc
pop
or
and
pusha
jae
push
pop
xor
mov
or
jo
das
dec
or
xor
repz
repnz
jle
stos
mov
adc
jae
jbe
xchg
adc
xor
in
das
inc
stos
push
lcall
and
ja
cli
push
push
and
push
add
jp
mov
xor
or
sbb
stos
adc
xor
mov
call
mov
pop
cmp
addb
push
pusha
or
dec
clc
int
mov
and
push
push
pop
ja
loopne
sbb
xor
jg
ret
xchg
nop
aas
outsb
pop
inc
repz
jmp
jmp
add
and
imul
mov
add
cs
fcoms
addb
mov
jb
inc
or
cmc
aaa
in
pop
or
sahf
mov
dec
cmp
scas
or
mov
lock
sub
mov
pop
mov
push
rolb
cli
add
push
test
push
lods
subb
dec
mov
test
and
inc
push
subb
nop
js
pop
add
xchg
rolb
mov
add
shrb
inc
add
repnz
mov
pop
out
mov
dec
add
pop
inc
sbbl
lea
push
inc
repz
pop
mov
inc
sub
jg
push
push
mov
stc
mull
clc
fistpll
ja
or
adc
inc
and
xchg
pop
rolb
ds
xchg
shl
stos
jecxz
loop
sub
push
pop
pusha
ret
dec
incl
pusha
adc
ret
sub
or
out
test
xor
das
mov
dec
xchg
jp
jne
cwtl
lea
pusha
or
add
int3
loopne
lods
loop
subb
test
es
add
shrl
shll
rorb
and
sbb
lods
cwtl
mov
bound
fdiv
xchg
mov
ja
jg
mov
push
sub
scas
clc
inc
pusha
add
mov
inc
dec
jne
jg
add
addb
add
or
adc
sub
adc
insb
loopne
mov
xor
mov
stos
or
inc
mov
add
cli
dec
adc
cmp
fwait
sub
xor
adc
mov
jl
dec
mulb
pop
std
outsl
add
hlt
push
mov
dec
jge
inc
mov
or
mov
loopne
ljmp
rorb
stos
mov
or
into
inc
and
clc
cli
xor
aas
lea
push
inc
cli
mov
dec
dec
call
pop
add
and
pushf
sti
cld
scas
xorb
inc
or
daa
mov
pop
and
outsb
je
test
test
sbb
je
mov
cwtl
repz
and
ss
add
dec
cli
push
fidivrs
jp
mov
adc
fstpt
test
or
mov
or
mov
inc
pop
icebp
fwait
sub
jle
push
hlt
cmpsl
xor
jmp
adc
mov
mov
aam
fdivrl
inc
add
rclb
jle
or
cltd
push
lcall
add
xchg
or
dec
add
call
adc
jno
in
jbe
pushf
and
cld
popa
into
or
or
add
add
icebp
je
cmp
adc
je
mov
mov
dec
adc
jo
jge
mov
jmp
add
xchg
dec
clc
sti
arpl
ret
pusha
add
push
cwtl
addl
loopne
adc
inc
dec
arpl
scas
push
cmp
sti
pushl
clc
das
add
cli
and
jno
lods
jg
jp
or
add
push
out
aaa
jp
mov
push
ja
cmp
jae
psubw
dec
or
incl
lods
add
mov
dec
repnz
clc
jns
shll
pop
ss
jae
dec
cmpsl
dec
cmp
or
pusha
push
xor
repnz
call
mov
out
mov
lcall
pop
fidivs
adc
xor
mov
jbe
fdivl
test
mov
xchg
js
stos
mov
mov
mov
jbe
mov
push
loop
mov
clc
mov
je
aas
mov
js
and
rcrb
cmp
add
fbstp
out
mov
pusha
cli
je
mov
mov
push
cltd
ficompl
sar
inc
add
or
or
jo
push
clc
and
jae
push
pop
cmp
jae
loopne
inc
and
fisttpl
lods
cli
bound
cmp
hlt
push
pop
nop
jmp
and
mov
hlt
mov
jne
bound
cmp
test
xchg
sbb
jo
pop
push
stos
mov
push
ja
jl
adc
rolb
lock
and
dec
xor
loopne
mov
xchg
in
nop
or
sub
jne
mov
test
xor
clc
pusha
pop
in
jmp
add
cmc
sub
and
sub
xchg
push
mov
xor
pop
mov
or
bound
mov
sub
enter
and
shlb
dec
shrl
sub
fstl
test
adc
pusha
test
pop
fildl
mov
cmp
cmp
pop
lahf
inc
stc
movsb
stos
adc
mov
test
jo
fisubl
dec
mov
add
and
dec
in
ljmp
adc
je
push
clc
and
fs
and
push
sub
popa
cwtl
cwtd
add
push
and
mov
or
mov
inc
or
push
jl
cmp
cli
inc
push
pop
add
mov
test
dec
add
or
stc
loopne
and
lock
rorl
or
add
insl
mov
mov
movsl
lcall
mov
sub
mov
pop
insb
inc
lock
ds
inc
cmpsb
mov
add
xor
pop
rcr
mov
fdivrl
mov
push
outsl
add
or
call
push
bound
and
or
fistpll
xor
xchg
stc
imul
mov
push
inc
incl
stc
add
add
mov
sti
ret
sti
and
es
pushw
xor
jno
add
push
add
pushf
sub
decl
or
add
jle
das
mov
jg
jno
addr16
bound
pop
push
loopne
mov
xchg
inc
jle
outsb
mov
jl
xor
jno
add
jg
lea
pop
pop
popa
add
add
add
adc
or
xor
fs
mov
jg
xorb
cmp
push
mov
imul
pushl
xchg
add
jae
repz
rol
dec
and
jge
jle
popa
pop
js
dec
pop
aaa
inc
pop
add
jne
xor
push
inc
jno
adc
xchg
js
arpl
mov
inc
adc
jge
inc
ljmp
inc
push
icebp
mov
or
adc
adc
cmp
add
mov
dec
loopne
dec
lret
mov
outsb
ljmp
lcall
hlt
push
jno
inc
cmp
clc
fwait
outsb
es
add
daa
mov
push
push
adc
outsb
cmpb
add
and
mov
jge
ret
add
dec
jo
out
sarb
into
push
test
testb
ja
das
popa
cltd
xor
or
push
add
cmpsb
push
add
push
fdivrs
ja
add
pop
inc
add
push
push
lcall
add
mov
xor
lea
lods
pop
inc
xchg
mov
cmpb
dec
rolb
add
sbb
and
jo
ret
xchg
dec
insl
loop
outsb
lea
cli
sub
negb
lods
adc
add
scas
push
fwait
jbe
sbb
inc
aam
mov
jae
dec
das
into
push
add
and
shrl
or
lock
fcomps
xchg
ret
sbb
stos
pop
and
aaa
rolb
adc
out
data16
cmp
ficoml
sub
or
mov
stos
pushf
pop
dec
adc
loope
adcl
push
jae
or
push
mov
rclb
mov
loop
cwtl
add
inc
pop
sbb
add
xchg
subb
lcall
mov
mov
sbb
out
lea
arpl
push
lock
sbb
pop
xor
notb
ss
mov
xor
out
pop
sub
imul
add
lcall
rorb
mov
push
or
sbb
push
add
or
shr
rcrb
push
clc
mov
mov
test
cli
cmp
add
and
lahf
add
push
mov
or
jbe
or
add
adc
subb
sub
push
loopne
add
or
adc
push
jbe
sub
pop
add
add
sbb
clc
mov
and
iret
mov
xchg
mov
adc
inc
sti
jle
test
push
lods
or
cmp
add
maxps
push
sahf
and
stos
add
adc
lcall
cmp
add
mov
rcrl
nop
push
add
cli
xorb
inc
lock
cs
push
cmp
mov
fcmovnbe
rolb
mov
xor
pop
cmp
outsb
test
fcompl
sub
inc
stos
cs
clc
repz
sti
jne
xchg
les
fisubrs
and
mov
add
addb
mov
jae
rorb
sbb
popa
adc
lods
fldcw
sbb
inc
out
rcrb
shrb
imul
dec
add
daa
loopne
sbb
test
or
and
add
je
nop
ss
fs
cmp
dec
in
push
push
inc
lcall
sbb
cli
dec
or
pop
gs
jb
add
andb
adc
push
or
call
add
andl
fsubrs
add
add
mov
xor
jg
jne
orb
jbe
insb
ds
pop
mov
xor
pop
adc
jp
mov
inc
loopne
jae
or
icebp
fildll
push
sbb
add
adc
inc
es
jo
cmp
push
fiadds
insl
add
mov
inc
xor
inc
add
or
and
orb
mov
sbb
jno
and
leave
lock
jo
pop
xor
mov
lock
xchg
pop
cli
je
add
pop
xchg
add
inc
add
andl
xor
jecxz
sbb
adc
andl
pop
add
dec
inc
insb
movsb
loope
inc
pusha
sbb
add
imul
or
adc
mov
xchg
dec
aaa
xchg
add
inc
pusha
mov
cld
lcall
xchg
js
lcall
shlb
or
mov
js
jo
jp
add
xor
xor
repnz
arpl
sbb
fdivrl
adcb
xor
inc
push
enter
lcall
inc
or
loopne
add
add
test
inc
dec
inc
xchg
clc
mov
inc
adc
movsb
fisttps
lcall
jg
cltd
inc
add
or
and
daa
add
lock
ds
mov
pop
hlt
add
or
lahf
dec
cltd
mov
les
js
pop
push
and
and
xor
adc
jp
test
jmp
stc
dec
inc
out
add
cmp
and
cli
decl
inc
ja
mov
nop
xor
pop
or
adc
rorb
push
and
outsb
ja
inc
and
and
inc
mov
das
inc
jg
add
or
push
mov
ficoml
test
push
movsb
adc
inc
mov
jg
hlt
push
mov
stc
les
sub
add
and
push
cmp
jae
xor
fildll
fs
xor
loopne
repnz
test
pushl
and
cwtl
stc
xor
decl
push
pusha
sub
xor
loope
or
cmpsb
mov
test
or
nop
or
cli
incl
xchg
mov
mov
andl
or
mov
jge
sbb
ljmp
rol
and
push
and
mov
push
enter
adc
adc
inc
inc
pusha
mov
and
mov
push
lahf
dec
int3
orb
pop
sbb
inc
push
cli
andl
dec
insl
xor
repnz
jae
push
push
loopne
push
sub
inc
dec
data16
aas
inc
push
bound
push
xor
inc
and
inc
xchg
inc
xorl
cli
mov
or
sbb
push
adc
pusha
add
hlt
test
inc
inc
mov
outsl
xchg
data16
insb
sti
ds
push
fs
and
jmp
stc
cmp
add
jl
mov
add
cltd
ja
insb
icebp
mov
add
adc
or
sub
xor
test
inc
pop
adc
ds
and
dec
rcrb
push
jb
dec
push
add
addb
fdiv
pop
jp
pusha
stc
mov
jle
mov
data16
adc
inc
ret
or
or
stos
dec
xor
xor
and
adc
inc
push
sbb
push
mov
inc
mov
add
pop
add
and
cld
lcall
add
mov
dec
pusha
pop
cmpb
mov
jb
inc
jmp
pusha
out
cmc
sbbb
test
push
jne
addl
lcall
push
mov
cs
test
xor
test
cmpb
arpl
cli
testb
sub
aaa
and
add
dec
jp
or
dec
push
data16
add
mov
add
sbb
pop
jo
dec
out
fiaddl
push
out
add
pop
or
outsl
in
ljmp
mov
add
loopne
jo
push
clc
inc
and
lcall
jbe
jecxz
jno
jbe
and
roll
lods
test
xchg
fsubrl
nop
xor
outsb
rorb
push
push
mov
xor
push
add
test
test
ja
xor
xor
mov
add
addb
sbb
mov
jo
and
dec
add
add
js
push
lea
adc
pop
and
ret
sub
cmpsb
push
add
and
xor
sub
in
ret
incl
xor
jo
jo
add
popa
jmp
xchg
jge
add
pop
push
xor
cli
cltd
adc
cli
xor
sub
xchg
aam
mov
mov
mov
and
push
cld
pushl
push
and
mov
movsb
push
sub
iret
shlb
jo
add
lcall
mov
xor
inc
shlb
push
inc
lcall
inc
repnz
bound
test
lock
filds
push
inc
lcall
ret
ljmp
mov
sbb
xchg
pop
icebp
adc
loopne
add
jg
arpl
jle
movsb
in
incl
cmp
mov
rorb
sti
icebp
xchg
cmp
push
inc
mov
add
and
bound
push
imul
xchg
lret
add
arpl
orl
ficoms
inc
lock
mov
inc
xor
adc
mov
xor
inc
mov
adc
shrb
in
lock
mov
add
xor
dec
and
jno
data16
add
lds
or
hlt
mov
int3
push
mov
adc
incl
mov
mov
add
inc
add
cmpsb
stc
hlt
shr
mov
and
adc
jb
pusha
inc
pop
pusha
pop
dec
clc
pushl
jae
xchg
sub
mov
enter
and
adc
mov
mov
mov
mov
cli
outsb
add
cmp
dec
shlb
add
add
dec
inc
insl
dec
inc
xlat
add
lock
mov
addl
mov
or
stc
mov
xor
push
inc
and
movsb
shll
mov
rcrl
inc
add
and
xor
push
fistpl
inc
dec
loop
jbe
bound
inc
bound
or
je
mov
cmpb
clc
add
mov
push
aaa
xchg
push
nop
cmp
incl
mov
inc
and
add
or
xor
add
dec
dec
cmp
aaa
rcrb
xorb
sub
decl
add
push
inc
pop
push
and
lea
je
andb
mov
test
adc
jg
mov
jl
mov
push
or
sarb
or
stc
and
add
jp
sub
andb
adc
repz
icebp
push
add
sahf
sub
mov
ficomps
xchg
and
dec
data16
bndstx
mov
jecxz
push
xchg
cli
dec
clc
and
cmp
push
xor
sbb
shl
test
dec
lcall
inc
in
aad
fimuls
pop
mov
mov
sbb
jle
cmpsl
and
andb
mov
add
add
fists
sbb
in
and
xorb
push
cmp
pop
or
and
xor
int3
mov
dec
xchg
jo
jge
inc
push
mov
sbb
ja
adcb
sub
mov
or
nop
or
test
sbbl
xor
push
mov
in
mov
aad
sarl
jle
sti
cs
xor
cld
push
rorb
scas
mov
push
and
xor
sub
stos
lret
push
mov
xchg
add
add
pop
add
cwtl
push
nop
add
push
repnz
and
jle
xchg
add
mov
add
lea
enter
cs
rorl
pop
jae
mov
xor
inc
mov
idiv
push
clc
sbb
push
test
xor
push
cmc
aas
pop
pop
lock
add
mov
leave
shrl
adc
push
call
jmp
sbb
add
jne
shll
bound
outsb
or
add
mov
add
add
or
lods
push
nop
jge
lcall
inc
jl
inc
and
add
fbstp
lock
sub
adc
adcb
inc
aad
sbb
lcall
jl
ret
push
and
sub
jg
cmpsl
pop
add
add
mov
mov
cltd
jge
aam
push
out
loop
mov
setae
adc
in
push
sub
and
pop
mov
push
push
lcall
inc
push
cmpsl
push
fldenv
push
cltd
or
jb
lcall
push
jmp
loopne
pop
sbb
push
ljmp
lods
pop
add
pop
add
add
lods
std
mov
mov
or
push
or
es
or
divb
hlt
sub
or
xor
sbb
bound
lds
jbe
data16
data16
lods
mov
test
push
mov
or
xchg
andb
outsb
dec
inc
in
push
rcl
js
xchg
les
addl
inc
sub
aas
inc
jp
fadd
fwait
std
adc
inc
nop
fmull
nop
test
xor
ficoml
fidivrl
dec
add
dec
xchg
fiadds
ljmp
cmpsb
dec
inc
mov
push
inc
mov
add
or
adc
add
push
mov
incl
jle
or
lret
nop
mov
ret
fisttpl
and
lock
ja
clc
xchg
pop
je
into
lcall
sub
mov
xchg
or
push
jo
jmp
fwait
add
adc
push
pop
add
shl
sub
push
fiadds
pop
pop
inc
pop
xchg
and
and
pop
icebp
dec
push
cmp
mov
mov
inc
mov
pop
and
stos
and
faddp
mov
stos
and
lds
ljmp
jo
adc
adc
mov
adc
es
inc
lcall
inc
dec
pop
inc
es
ljmp
repnz
daa
inc
adc
jg
inc
xchg
andl
daa
jle
inc
xchg
xchg
dec
adc
push
adc
or
add
push
xchg
data16
inc
and
dec
add
out
dec
mov
dec
lods
push
or
jno
jle
lea
rolb
jae
inc
add
add
mov
and
sbb
dec
or
bound
push
jns
pop
les
pusha
or
add
mov
or
xlat
int3
xlat
sbb
sbb
xor
jecxz
inc
adc
stos
in
fimull
and
mov
imul
adc
int3
inc
pop
pop
insl
bound
fwait
adc
inc
push
jp
outsl
rclb
inc
adc
sbb
sbb
dec
shrb
inc
inc
push
xchg
inc
sbb
sbb
sahf
loop
and
jns
fs
mov
rclb
adc
pop
lock
sub
inc
mov
add
mov
and
inc
je
sbb
incb
mov
inc
add
push
inc
add
sbb
and
push
dec
or
add
push
sub
das
mov
jbe
add
push
push
fs
sbb
mov
mov
es
stos
cmpb
sarl
dec
dec
jb
fiaddl
sub
adc
or
repz
or
rorb
push
fdivs
pusha
fmull
sub
inc
pushl
test
stc
pusha
inc
bound
and
sbb
movsb
rclb
nop
fcmovnb
pop
jno
adc
fistps
bound
and
add
add
adc
sbb
push
adc
cmpsb
adc
push
cli
addb
sub
cli
mov
cmpl
js
sub
pop
lret
push
dec
add
shlb
fimuls
add
std
add
mov
fbstp
adc
sub
cmp
ljmp
dec
cld
jmp
xor
leave
inc
pusha
sarl
loopne
mov
pop
test
inc
add
loopne
jg
mov
sub
push
rcrb
sahf
inc
cmp
push
mov
mov
push
dec
orb
mov
add
push
jmp
in
les
or
pusha
xlat
scas
mov
movsb
loopne
lcall
jo
pusha
mov
jle
ds
pop
call
stc
inc
inc
fisubs
sbb
rolb
movsb
sbb
xchg
add
call
add
add
add
push
enter
or
adc
outsb
push
and
imul
orl
stos
or
or
test
or
bound
cli
inc
lods
xor
jp
jbe
jo,pn
je
mov
inc
jne
sahf
icebp
xchg
jae
mov
ljmp
enter
inc
cmp
int
loopne
int3
pop
cld
andb
out
je
jno
sarl
in
sub
sub
sub
inc
fcompl
mov
cmp
inc
or
repnz
je
lcall
mov
rolb
push
and
xor
mov
mov
add
jbe
fdivl
mov
dec
stos
orb
lcall
scas
rorl
inc
push
and
loopne
rorl
or
lea
fimuls
sub
pop
cmp
xor
loope
repz
aaa
mov
cmp
dec
jp
fmull
std
push
and
lret
inc
cmp
add
inc
cld
incl
and
add
and
push
subb
mov
mov
cli
cmp
mov
add
adc
outsb
cld
bound
mov
repz
cli
subb
decb
push
jae
hlt
shl
adc
mov
and
ds
loop
fs
sbb
lret
lods
in
and
outsl
repnz
or
rclb
mov
orl
adc
pop
fs
adc
std
stos
decl
push
popa
lea
inc
jp
xor
insb
inc
pusha
xor
jle
push
ret
mov
push
xchg
inc
jg
jle
sbb
add
or
cltd
popa
ret
pop
jae
js
aas
sub
repz
lock
mov
lcall
nop
sub
xorb
sbb
add
cli
add
adc
es
add
adc
dec
fadd
sub
pop
incl
push
dec
mov
xor
push
shl
xor
mov
dec
push
or
imul
aaa
or
iret
andb
mov
shrl
rclb
lock
mov
or
mov
sub
sub
jmp
fs
xchg
shrl
test
nop
stos
mov
push
mov
push
adc
mov
inc
mov
dec
lods
lret
mov
dec
mov
pop
inc
shl
push
or
pop
jbe
sub
insb
sbb
mov
pop
xor
aaa
pop
sub
mov
jg
cli
lcall
or
inc
xchg
add
mov
lcall
lods
roll
and
or
mov
mov
jg
cmc
xchg
mov
lcall
jmp
hlt
mov
je
adc
icebp
ljmp
outsl
push
xor
je
shll
and
jne
add
and
std
cmp
dec
add
and
or
mov
popa
push
in
cli
inc
pop
or
test
jle
mov
push
mov
jp
push
add
es
add
loop
insb
jb
mov
sbb
sub
adc
mov
stos
cs
jo
xor
stos
mov
loopne
jne
push
jbe
xchg
or
mov
mov
pop
push
ds
push
mov
add
mov
and
jg
inc
and
add
subl
and
push
add
mov
and
sub
jp
or
lcall
adc
and
mov
outsb
xchg
mov
add
rclb
cltd
fsubrs
pushf
and
fisubl
mov
mov
cmp
adc
lret
loope
lcall
inc
push
push
stc
hlt
push
mov
mov
jo
pop
adc
dec
mov
bound
and
add
lock
push
decl
and
shlb
xchg
subb
jno
sahf
es
fs
fildll
lcall
or
and
lock
add
test
inc
xchg
sbbl
mov
rolb
loopne
xor
pop
pop
mov
xchg
inc
adc
rorb
stc
andb
xchg
fs
jle
dec
lds
loopne
push
cmp
jo
inc
andl
data16
push
adc
push
push
loopne
mov
sub
xor
add
xor
lock
pop
pop
sub
cs
pop
std
lcall
pop
icebp
cmpps
or
imul
jo
xor
addr16
push
or
sbb
dec
loopne
orb
mov
cltd
test
add
pop
dec
sub
add
and
xor
es
mov
add
cwtl
js
std
cmp
push
jnp
add
loope
sub
sub
jnp
jmp
sbb
add
rolb
and
lcall
jmp
jbe
add
jb
aaa
xchg
xor
add
dec
inc
in
outsb
test
fwait
scas
jmp
sub
int3
out
cmpsl
add
push
push
std
mov
push
pusha
test
ds
fwait
inc
pop
loope
mov
insl
jp
pop
xchg
add
mov
add
add
es
fwait
push
and
dec
and
ret
pop
nop
pshufw
sbb
dec
lcall
cwtl
in
xor
dec
and
and
inc
or
shlb
and
sub
sti
out
popa
add
mov
mov
push
pop
fildl
xor
sbb
dec
xchg
aaa
mov
mov
call
lret
nop
push
mov
rorb
and
mov
xchg
loopne
inc
inc
mov
adcb
fmuls
lret
add
add
mov
add
push
and
and
add
inc
in
int
ljmp
sbb
aaa
shll
or
xor
mov
or
push
sbb
or
shlb
mov
mov
cmpsb
ret
call
and
xchg
or
rorl
xchg
push
fisubrl
jl
or
xor
jp
lcall
sbb
push
sub
loop
push
loopne
ljmp
pop
push
int3
dec
sub
adc
hlt
mov
sub
vmread
out
xor
or
xor
adc
xor
int3
jle
xor
and
mov
lock
stc
jg
popa
inc
jno
sub
fistps
sub
inc
bound
cmp
test
jecxz
outsl
cli
cs
xsha1
cmpsb
lret
sarb
inc
mov
cmp
repnz
lock
add
mov
popa
popa
shlb
ljmp
decl
jo
mov
inc
pushw
pusha
mov
cwtl
sbbb
incl
inc
dec
aas
jp
cld
ret
das
mov
shrb
ja
inc
pop
dec
inc
outsl
ss
mov
lock
inc
dec
jp
dec
cmp
mov
sub
lds
incb
sbb
add
jnp
mov
andb
lcall
loopne
add
lret
inc
sub
xor
mov
add
aas
or
dec
pop
add
dec
xor
xchg
adc
jo
fdivl
and
out
cli
jg
adc
pusha
add
jno
inc
sub
ja
insb
push
add
push
loopne
add
mov
sub
std
cmp
mov
inc
add
push
inc
orl
push
lea
les
ret
inc
xor
dec
dec
jl
sub
das
loopne
test
sbbb
jle
rol
aaa
cmp
ret
dec
ss
sub
inc
stos
push
xlat
sahf
jge
sbbb
cmp
rorl
in
add
add
mov
cmp
push
outsb
nop
leave
inc
pop
jb
jecxz
dec
sahf
mov
xchg
sbb
pop
movsb
dec
nop
subb
mov
pusha
enter
aad
or
add
stc
mov
sbb
outsb
add
mov
sub
aas
lcall
and
hlt
clc
ja,pt
inc
incb
sbb
in
add
in
dec
xor
or
fldt
cmp
ljmp
inc
pop
inc
fisttpl
xchg
add
add
fmuls
or
add
mov
add
mov
inc
pusha
mov
fistps
fst
pop
mov
cli
or
adcb
pop
ret
add
bound
sbbl
stc
adc
sbb
je
push
xor
pop
or
or
and
add
xchg
mov
shl
sbbb
push
lcall
mov
cmpsb
jne
adc
cmpl
jp
leave
aam
test
pop
outsb
bound
mov
fstpt
or
sbb
arpl
sub
push
imul
cmpb
add
xchg
jb
ja
and
push
jns
inc
adc
test
or
mov
cmp
add
adc
mov
stos
movsb
mov
sbb
jmp
xchg
cmp
inc
push
dec
orl
rorb
or
insb
orb
sbb
push
pop
loope
inc
addl
lock
test
mov
pop
pop
sbb
xchg
hlt
and
sti
dec
pop
es
and
xor
inc
out
sub
fdiv
sbb
rorb
addb
sar
orb
jg
mov
popf
inc
sbb
addb
fmull
xlat
addb
int3
mov
mov
scas
subb
cmp
aas
ret
add
push
jp
fnstcw
dec
repz
jae
aaa
push
xchg
scas
rorb
jae,pt
cmpsb
lea
inc
mov
push
add
push
call
xor
idivb
in
and
pop
push
inc
movl
fistl
mov
inc
inc
xor
push
add
push
sbb
add
inc
hlt
popf
inc
or
test
lret
test
add
and
lret
push
inc
ds
std
sbbb
sbb
aaa
sbb
xorb
mov
es
add
sbb
pop
and
lcall
or
sbb
or
push
push
hlt
xor
push
outsb
sub
repz
dec
cli
rcl
pop
adc
push
xchg
loop
and
out
add
push
in
arpl
dec
lcall
cwtl
jb
push
enter
aam
push
incl
add
test
mov
inc
add
in
add
lds
pop
rcrb
cmovp
loopne
mov
ficoml
push
in
jl
and
fstl
sbbb
jmp
mov
push
xchg
mov
cmp
in
cli
jmp
bound
jg
cmp
cmp
adc
xor
lds
sbb
push
xor
or
adc
fnstenv
popl
je
out
adc
rcr
sub
mov
inc
pusha
and
sbb
rcrb
add
inc
ror
sbb
inc
sti
cmc
lcall
pop
rcrl
rolb
or
rolb
ljmp
clc
xchg
adc
inc
cli
and
dec
ret
inc
push
inc
rorb
imul
test
add
mov
adc
or
push
pusha
sub
xor
cmc
mov
sub
inc
stos
sahf
dec
shr
test
mov
roll
sbb
adc
push
sbb
cld
push
filds
loope
loopne
insb
sbb
fwait
push
aad
call
loopne
adcb
stos
xor
add
pop
fadds
aaa
je
push
insb
jbe
xor
test
incb
jp
inc
sbb
jb
pusha
inc
cmpsb
cmpsb
mov
xchg
add
and
ljmp
ljmp
mov
test
or
adc
add
or
push
sarb
movsb
icebp
sbbb
and
xor
jmp
jle
pop
loopne
lock
or
or
aas
sbb
or
aam
sbb
and
rolb
adc
pop
pushf
and
cltd
dec
lcall
das
out
data16
ret
mov
inc
sbb
and
out
shlb
ljmp
sbb
xor
and
mov
or
cs
add
das
sbb
jmp
ss
push
push
orb
ss
push
sub
push
ret
icebp
mov
inc
sub
jbe
sub
push
loopne
dec
jo
loope
mov
push
dec
das
push
sub
lds
jo
mov
loope
mov
push
push
call
clc
pop
call
stos
rcr
push
mov
sbb
fisubs
xchg
icebp
mov
loop
pusha
pop
mov
xchg
loopne
cmpb
ret
imul
outsl
fstl
jle
or
or
in
adcb
test
add
popa
pusha
loope
out
pop
aaa
add
mov
stc
jbe
add
rclb
pop
pop
dec
add
fwait
adc
add
out
push
or
jl
jecxz
jne
rclb
inc
jo
push
jbe
outsl
push
fidivrs
gs
or
ret
sub
mov
jbe
cltd
jp
bound
loope
pop
inc
mov
pusha
sbb
test
decl
dec
mov
and
scas
add
push
pop
cmp
and
adc
mov
nop
popa
xchg
test
sahf
jbe
test
mov
adc
mov
adc
repnz
add
inc
cmc
hlt
pusha
imulb
loopne
sbb
call
loope
and
pop
and
out
mov
and
push
rcrb
adc
roll
hlt
xorb
mov
and
mov
test
add
ja
add
fdivl
add
push
and
and
mov
into
adcb
enter
cs
mov
xor
xor
std
sbb
mov
shlb
jbe
adc
mov
jmp
lret
jo
sub
sbb
mov
pop
dec
fidivl
jl
add
jno
mov
jno
jb
call
jl
nop
jb
and
pop
dec
fdivl
add
sub
int
ret
mov
pop
xor
xor
ss
xchg
mov
jmp
arpl
add
jns
cli
arpl
daa
add
cli
bound
push
xchg
mov
add
add
pusha
pop
ljmp
test
push
xchg
push
push
sbb
mov
clc
mov
sub
mov
add
mov
nop
sbb
add
adc
push
jg
add
lcall
mov
jbe
inc
or
inc
mov
imulb
pop
xor
xchg
mov
and
cli
call
lret
add
add
rorb
fbld
mov
add
fistps
adc
xor
add
pop
es
daa
les
lcall
or
jle
mov
outsb
xor
jne
jno
pop
ja
mov
add
addb
push
fwait
cmp
cld
incl
push
std
popa
xchg
jle
jb,pn
add
subl
sbb
fwait
dec
fs
push
out
inc
fnsave
adcb
mov
out
or
cltd
shlb
ss
cs
ud2
stc
push
or
and
dec
mov
mov
add
dec
and
sub
mov
pop
div
mov
adc
inc
mov
rclb
push
lcall
and
lea
xchg
movsl
push
push
into
data16
mov
pop
mov
add
lock
mov
sub
orl
mov
inc
test
fbld
enter
pop
inc
dec
jnp
add
xor
mov
or
dec
lods
adc
test
adc
sbb
dec
jno
cmp
testb
or
jl
cmpsl
lock
stos
cmp
mov
xor
es
mov
loopne
jne
ja
call
inc
dec
into
je
sub
ret
jge
cmc
out
xor
and
jb
push
dec
dec
add
rclb
cli
dec
sub
push
aam
push
push
mov
shrb
xor
test
cltd
je
add
ret
lock
add
or
mov
mov
sub
lods
jb
addb
sub
sub
jo
add
xchg
lock
test
inc
aam
pop
test
mov
sub
mov
add
jbe
call
jle
lret
mov
js
jb
or
imul
jnp
movsl
jns
jb
sti
add
pusha
cmp
or
ljmp
std
pushl
jns
sub
add
jo
xchg
mov
and
add
add
mov
sbb
lcall
adc
add
ret
mov
sbb
mov
in
cltd
xor
dec
daa
clc
add
mov
mov
and
hlt
jle
cmp
icebp
inc
push
pop
mov
push
mov
fsubrs
xor
fwait
ss
or
mov
dec
imul
insb
fdivrl
imul
mov
adc
inc
dec
fists
jns
xor
lea
hlt
push
add
stos
test
add
mov
js
stc
addl
pop
gs
sbb
push
cmp
push
jp
cmpsb
add
popa
xchg
lcall
nop
bound
sbb
add
loopne
out
mov
int
mov
push
or
or
fs
push
sbb
xor
xor
cmpsl
repnz
mov
jle
jle
lock
jecxz
sub
jmp
dec
loopne
mov
jb
or
aaa
dec
mov
push
pop
stc
and
enter
add
sahf
data16
rcrb
das
add
bound
jge
ljmp
dec
inc
loop
dec
sub
arpl
js
je
xchg
mov
xor
inc
les
aam
jle
jo
mov
lods
fnstcw
xchg
pop
cmp
push
xor
or
mov
dec
call
mov
mov
out
push
inc
ss
les
push
rclb
jge
and
test
or
jb
mov
hlt
mov
mov
inc
mov
push
or
inc
inc
shlb
std
idiv
aaa
nop
jge
decb
xor
sub
or
insl
pushl
and
mov
or
stc
mov
add
or
mov
std
out
sub
mov
xchg
and
icebp
and
sub
adc
jp
xor
sahf
add
and
push
cmpsl
push
and
jnp
fiaddl
dec
push
push
inc
mov
bound
lea
cmc
jg
icebp
mov
inc
xorl
mov
fimull
sti
pusha
pushf
adc
pop
icebp
dec
sti
adc
les
adc
inc
cld
jbe
mov
ret
cmp
mov
mov
orl
inc
pusha
xchg
push
dec
adc
pop
inc
adc
xchg
cmp
push
pushf
imul
js
jl
mov
pop
mov
sbb
icebp
mov
add
mov
mov
call
lock
and
jg
icebp
or
add
lock
mov
and
push
sbb
add
lret
or
xor
divb
mov
pusha
test
push
out
mov
clc
add
pop
add
stos
mov
xor
push
fs
stos
add
ja
jo
sub
jp
xor
xor
popa
dec
dec
adc
insb
into
dec
scas
mov
sub
mov
sbb
adc
adc
xor
dec
faddl
cli
jno
fbld
into
sbb
push
sahf
add
or
push
push
cmpb
stos
sbbb
inc
jle
call
xor
mov
or
push
bound
jbe
pop
jg
inc
push
jno
jbe
lcall
sub
adc
push
and
lods
call
test
lods
inc
dec
sub
pop
mov
mov
inc
test
lods
or
fisttpl
nop
and
xor
inc
call
inc
adc
aaa
ret
icebp
mov
orb
push
inc
mov
mov
subb
add
cmp
in
adc
xor
fsubs
adcl
test
mov
pusha
dec
xor
call
dec
sub
dec
jbe
mov
add
sub
xchg
lret
call
fiaddl
cmp
cmp
or
push
lcall
or
into
push
orb
fistpll
ds
and
xorb
addb
inc
xor
test
sbb
adc
lcall
add
cs
std
and
inc
add
test
sbb
and
jb
mov
arpl
sbb
xchg
adc
pop
and
inc
ds
pop
adc
sub
outsl
add
add
outsb
and
push
pop
inc
sbb
addr16
add
add
inc
popl
test
inc
cmp
orb
popa
orb
pusha
jl
mov
inc
dec
rclb
xor
cmpsl
dec
ss
lea
cmc
pop
jbe
mov
loope
sti
inc
add
andb
pushf
push
adc
xchg
cmpsl
je
pushl
push
push
sbb
inc
or
inc
or
mov
aaa
add
jl
adc
adc
push
xchg
inc
cmp
jns
outsb
mov
sub
int3
adc
inc
xor
sbb
call
push
int
pushf
jb
inc
inc
inc
shlb
and
or
push
inc
lcall
pop
dec
push
inc
xor
sahf
lcall
bound
xor
jmp
sub
mov
and
push
inc
push
aas
pop
adc
movb
arpl
mov
hlt
inc
cltd
mov
test
sbb
jle
jbe
adcb
push
pop
je
inc
push
cmp
add
mov
jp
add
and
cs
dec
movsb
push
mov
mov
subb
inc
cli
data16
xor
mov
adc
pop
or
push
inc
outsb
inc
popa
mov
mov
mov
mov
int3
push
incl
sub
and
dec
movsl
test
add
dec
and
aam
sysenter
push
out
rolb
int3
mov
push
dec
push
pusha
add
cmpsl
inc
add
or
orb
or
movsb
sbb
cmovbe
push
dec
jp
xchg
jp
insb
push
or
ss
dec
incb
push
mov
mov
cli
push
xor
repnz
cmp
sar
in
pusha
pop
inc
and
sub
push
arpl
lcall
icebp
push
loope,pt
mov
pop
cmc
mov
lods
jae
add
add
lret
ficompl
lcall
inc
jle,pn
test
pop
sub
jg
rolb
xor
scas
fwait
cmp
lahf
ds
sti
sbb
mov
cli
jbe
sbb
add
pusha
sub
cltd
jns
rolb
shlb
and
sbb
imul
test
pusha
mov
push
add
xchg
js
mov
rcrb
mov
lock
add
movsl
pop
and
add
jle
mov
rolb
sub
mov
dec
sbb
or
cmpsl
lods
mov
add
or
loope
test
outsl
sub
cmpsl
cltd
rcrb
out
adc
adc
or
outsb
test
and
xor
mov
jle
enter
add
jl
jo
jg
imul
mov
inc
mulps
and
inc
xor
bound
add
loope
adc
or
into
in
add
add
push
lods
imul
icebp
jo
addr16
xor
sbb
pop
and
add
push
xor
push
cmp
adc
sub
adc
mov
inc
cltd
push
rolb
mov
mov
push
sub
shll
push
loop
shlb
add
jae
jbe
add
inc
mov
es
push
xor
inc
push
pusha
jl
enter
push
mov
out
adc
dec
test
inc
dec
mov
or
push
and
lcall
or
xor
shll
decl
mov
mull
pusha
add
pusha
cmp
lods
data16
lock
call
pop
mov
inc
in
pop
cli
xchg
arpl
loopne
call
cs
push
stc
dec
inc
or
clc
imul
inc
add
int3
lcall
jl
icebp
lcall
shrb
repz
into
xor
cmc
adc
or
and
repnz
xchg
repnz
sub
and
mov
pop
xor
push
idivb
lea
add
clc
je
cmp
mov
movsb
jg
inc
mull
or
push
mov
je
mov
and
es
js
push
dec
jae
stos
mov
aaa
out
outsb
inc
insb
add
hlt
jg
dec
rclb
mov
xor
jo
add
dec
xor
push
add
stos
clc
aaa
int3
pop
test
or
lock
jg
les
add
fwait
into
push
add
jge
not
push
add
aam
add
adc
lcall
add
insl
imul
or
add
sbb
adc
mov
daa
adc
aam
test
adc
lcall
cmpsb
add
push
adc
pop
arpl
jns
dec
add
push
cld
or
das
cmp
adcb
bound
mov
mov
mov
add
sarl
add
jecxz
or
lret
lods
inc
sti
fwait
add
lock
in
sbb
insb
xchg
add
push
mov
jg
mov
mov
mov
int3
popa
jecxz
loopne
add
inc
add
out
mov
lea
add
dec
rolb
xor
cli
mov
push
fwait
xor
nop
sbb
inc
or
mov
sbb
dec
mov
add
cmpsb
fwait
dec
push
add
push
test
pop
jle
test
insl
data16
pop
pusha
and
adc
and
mov
or
mov
push
cltd
pop
xor
in
fwait
push
adc
std
jle
pop
inc
and
sbb
and
test
lock
mov
cmp
push
dec
jo
jno
push
inc
aam
push
mov
mov
mov
fcompl
mov
jbe
test
jbe
mov
adc
adc
ja
push
idivb
adcl
cmp
push
inc
nop
inc
pop
xchg
imul
loop
dec
jecxz
jl
cmp
xor
inc
or
xchg
int3
fwait
pop
pop
insb
jno
push
je
fwait
outsb
adc
dec
jno
testb
clc
clc
out
fimull
and
lcall
test
mov
adc
lcall
popa
inc
outsb
push
aaa
add
sbb
dec
ja
ss
jle
jo
pusha
cmp
hlt
xor
ds
push
jle
jo
jno
pop
dec
lret
push
shlb
mov
fwait
std
adc
test
adc
add
add
imul
sbb
cmp
add
mov
add
enter
outsl
pop
pop
pop
ret
f2xm1
add
andl
lods
es
mov
stc
imulb
fwait
lock
icebp
add
dec
jno
inc
clc
inc
testb
je
add
jle
adc
xchg
push
xor
xor
push
cltd
adc
mov
pop
insb
push
add
jl
cmpsb
and
and
mov
add
add
mov
cmp
into
int3
bound
mov
mov
jle
xor
fisubl
roll
or
push
icebp
dec
ficompl
inc
roll
sub
jae
in
xor
rcrb
adc
mov
sbb
cmc
adc
mov
data16
adc
add
mov
push
dec
push
mov
mov
and
adc
ss
insl
sub
inc
gs
inc
outsb
jnp
cmc
rolb
adc
mov
jns
add
xor
push
add
mov
add
mov
mov
mov
pop
lock
scas
adc
jecxz
imul
mov
jge
mov
ret
and
push
add
add
ret
add
or
ljmp
test
push
xchg
add
or
addl
or
repnz
imul
in
xchg
pushf
cli
and
rclb
push
add
cwtl
push
push
fs
dec
dec
aam
push
xor
dec
or
pop
outsb
sahf
inc
rcl
jnp
push
sub
bound
aaa
mov
jae
push
add
in
mov
mov
cmp
jg
enter
sbb
add
inc
fdivs
inc
mov
test
cld
push
sbb
add
inc
fiadds
add
xor
push
nop
mov
cmpsb
lcall
mov
sbb
push
stos
add
mov
and
pushl
mov
push
dec
jbe
rolb
and
addb
shrb
rorb
nop
mov
pop
xchg
stos
sbb
cmpsb
mov
loopne
ss
test
jae
and
lcall
ds
push
push
lea
push
bound
decl
mov
add
cwtl
pop
mov
vmovq
xchg
add
add
jmp
sub
ss
repnz
add
and
sub
lcall
jb
es
rorb
bound
inc
gs
mov
add
adc
jbe
adc
mov
mov
xor
mov
xor
out
push
mov
xchg
cli
dec
jp
add
adcb
stos
dec
sub
push
adcb
lock
add
pushf
add
and
add
xor
xor
mov
or
mov
cwtl
mov
dec
or
int
push
jg
aaa
or
outsb
add
nop
jns
sbb
xor
or
movsb
xor
cwtl
push
jae
add
mov
add
or
add
push
outsl
sub
xchg
and
push
aaa
pop
mov
lods
pop
pop
cmp
pusha
mov
in
add
or
lods
add
add
add
xor
arpl
mov
sub
jmp
push
js
cbtw
push
dec
fbstp
and
push
jnp
ja
pop
push
addb
mov
add
rolb
cmp
and
andl
sub
sbb
icebp
rorb
lcall
add
cmp
adc
sbbb
mov
mov
insb
testl
sbb
cmpsl
std
push
addl
or
sahf
mov
add
subl
arpl
mulb
loopne
sub
subb
aam
mov
sbbl
loop
jg
pop
mov
sbb
jne
or
dec
and
adc
ret
std
cmpsl
mov
je
mov
push
mov
mov
add
adc
mov
add
or
ret
lcall
adc
add
addr16
or
int3
fdivl
or
add
and
mov
dec
add
sarb
pop
sbbw
inc
or
jg
or
inc
add
inc
setnp
add
pop
mov
push
jp
sbb
arpl
add
or
hlt
imul
pop
inc
xor
mov
out
inc
call
ror
pop
mov
arpl
xchg
je
std
xchg
stc
movsl
inc
das
test
dec
notb
jg
add
add
rorl
mov
mov
jnp
xor
popa
cmp
loopne
inc
jl
hlt
sbb
jl
fwait
inc
push
add
add
pop
adcb
adc
and
and
add
cli
rolb
or
fmull
inc
jmp
out
pop
fs
fildll
inc
inc
or
jl
xchg
adc
or
push
jg
adc
mov
sbb
adcb
inc
sub
loop
outsl
xchg
adc
xchg
push
inc
sbb
push
out
inc
push
sub
add
jge
int3
or
adc
adc
push
xor
pusha
jbe
lcall
sub
adc
push
call
movsl
xor
fs
sub
adc
js
add
ljmp
ds
int3
fwait
pop
and
lds
pop
mov
inc
jmp
sarb
pop
icebp
loopne
lods
or
or
mov
inc
pop
test
loopne
add
cwtl
popa
or
decl
xor
push
jnp
mov
ds
movsl
jmp
clc
sub
js
push
pop
add
popa
subl
divb
adc
into
add
jg
movsl
incl
mov
mov
loope
pusha
mov
fistl
jae
mov
mov
bound
lret
push
inc
fldt
popa
pop
sbb
fisubs
push
push
aaa
loop
imul
jl
andl
jp
inc
lcall
push
inc
shlb
shlb
xchg
call
jbe
or
add
push
addb
fdivl
push
dec
cli
filds
cmpb
movsl
and
popa
inc
add
xchg
mov
inc
mov
push
mov
mov
icebp
mov
arpl
outsl
adc
mov
push
inc
inc
cwtl
cld
cld
add
cmp
decl
nop
fisubl
je
enter
js
xor
jae
add
sbb
stc
dec
mov
insb
fs
or
ficoml
loopne
and
inc
test
sarb
cmc
fildl
jecxz
jns
ss
cld
mov
popa
or
je
sub
pop
jp
pushl
mov
imulb
loopne
insl
mov
addl
cmp
jl
or
bound
loop
mov
jle
test
aad
mov
stc
mov
incb
sar
xchg
add
adc
adc
icebp
dec
mov
adc
shrb
xchg
push
rcrb
loope
sub
add
pusha
jge
ss
and
adc
pop
loopne
or
jns
dec
aad
mov
dec
ja
rcrl
pop
shrl
mov
add
psadbw
shlb
or
and
clc
call
imul
subb
and
inc
xor
lods
fbstp
jge
clc
clc
repnz
push
pop
pop
andl
fbstp
loope
pop
add
push
adc
jnp
and
add
pop
pop
inc
incl
daa
adc
push
jnp
ss
shlb
sahf
inc
add
add
jg
push
add
jge
mov
jbe
push
dec
cld
or
inc
mov
mov
xchg
mov
clc
incl
inc
out
in
add
push
aam
add
xcrypt-ctr
cmpsl
sbb
adc
mov
fwait
str
stos
fists
insb
cmp
rorb
xchg
lock
pop
jmp
fisubs
sub
icebp
mov
test
leave
adc
hlt
lret
outsb
xchg
jle
mov
xor
inc
loopne
pop
mov
mov
out
ret
cltd
rcrl
or
rorl
cmp
shlb
pop
pop
icebp
mov
xchg
and
push
sbb
inc
push
and
inc
pushf
shlb
mov
push
dec
xor
outsb
and
lock
mov
into
adc
ljmp
adc
push
lods
rol
lock
add
jl
clc
pop
lock
mov
icebp
inc
push
pop
push
mov
cmp
mov
inc
adc
jo
int
lods
push
or
push
sub
dec
pusha
lcall
cmp
mov
push
add
add
and
push
push
push
imul
imul
jle
inc
pop
cs
dec
xor
adc
mov
insl
ficoml
mov
xchg
lcall
push
mov
imul
lods
add
jns
insl
imul
mov
sub
shlw
adc
jo
cmp
jbe
xor
jo
sahf
mov
jne
dec
mov
push
aas
pop
mov
fdivp
sbb
sbb
add
pop
mov
dec
iret
andb
or
shlb
mov
and
or
or
popa
stos
pop
xchg
out
test
test
loopne
mov
ficompl
push
ret
jno
add
jp
movsl
cli
das
mov
jno
jp
sbb
add
dec
inc
mov
sub
and
jmp
push
fidivs
and
lea
cli
add
or
shll
mov
inc
xor
sbb
push
js
out
js
push
push
cmp
or
dec
loope
mov
sbb
mov
fisubs
mov
in
sub
jo
mov
inc
jbe
add
test
pop
js
les
xlat
shlb
add
mov
pop
cmp
addr16
jae
jo
stos
data16
add
aad
faddl
bound
or
loope
sub
sarl
add
inc
and
and
sub
sbb
pop
mov
jns
xor
add
imul
and
les
dec
sbb
jno
xchg
mov
jp
pusha
add
outsb
cmp
and
outsl
push
add
sbb
and
or
lcall
or
or
bound
dec
push
push
xor
pop
sbb
push
inc
mov
lcallw
stos
cmc
filds
fwait
or
push
loopne
jle
add
push
fisttpll
jo
fs
pop
andl
jle
and
jl
adc
daa
rorb
loopne
and
arpl
mov
lret
mov
jo
shlb
ds
xor
lcall
or
xor
faddl
ja
add
rolb
inc
add
xchg
dec
adc
inc
add
data16
and
sub
into
add
sbb
push
repnz
inc
pop
in
push
sub
gs
adcl
jbe
lock
shrb
mov
sbb
ljmp
xchg
xor
xchg
mov
shlb
push
mov
cltd
and
jae
movsl
sub
or
mov
daa
incl
je
cli
mov
mov
shrb
and
jbe
cli
mov
test
and
add
nop
add
sub
or
arpl
stos
push
add
add
push
inc
incl
xor
dec
out
sbb
xor
mov
in
jns
mov
xchg
or
imul
push
cmp
into
add
jg
cli
fs
adc
cwtl
js
xchg
push
adc
mov
mov
push
adc
lret
mov
dec
movsb
cmp
pusha
std
xchg
add
jmp
mov
lret
or
rorb
inc
repnz
sbb
push
and
ja
inc
es
and
mov
jo
xor
pop
mov
notb
test
adc
xor
scas
push
pop
jp
jle
test
dec
or
push
and
pop
outsb
lret
mov
jne
cltd
jne
cmpsb
orl
lcall
incb
pop
icebp
sub
add
or
add
push
stc
lock
xchg
xor
outsl
add
xor
add
sbb
orb
add
pusha
push
xchg
pop
jg
mov
stc
and
add
mov
mov
pop
outsb
mov
popa
xor
push
imul
imul
adc
mov
cmc
add
jmp
mov
lock
mov
in
push
mov
or
mov
stos
cmp
jno
jl
std
fisttps
jnp
lcall
cltd
jp
mov
push
sub
add
push
push
loope
add
mov
jmp
aam
rcrl
add
lahf
xor
rclb
sub
push
xchg
sti
inc
push
shrl
jge
push
aam
mov
xchg
or
lcall
lods
cmc
es
imul
into
push
or
add
jl
cld
shrl
lret
outsl
and
mov
sbbb
outsb
loope
inc
pop
sti
jne
jno
push
cli
fwait
jmp
out
dec
push
xchg
sti
jg
adc
shll
dec
add
mov
cmp
or
int3
cmpsb
cmpsb
pop
add
scas
outsb
test
imul
stos
pop
push
add
mov
and
test
push
jle
xor
add
add
xchg
add
sbb
adc
inc
jle
inc
add
push
xor
jecxz
or
add
dec
add
adc
sbb
xor
stos
or
les
cmpsb
sbb
cld
dec
mov
ss
cmp
mov
and
jo
inc
ja
or
sub
pop
pop
mov
lods
pop
gs
xor
cmpsb
add
mov
jl
sbb
dec
shlb
or
lods
dec
cltd
lret
pop
jb
jge
or
xchg
sbbb
sbb
add
mov
mov
jge
adc
out
arpl
push
push
sub
jb
fsts
add
mov
add
add
hlt
or
xchg
cmp
sub
addb
pop
pop
call
adcb
sysret
push
inc
mov
mov
pop
fs
scas
adc
add
sbbl
push
loopne
jbe
pop
push
popa
add
ja
push
add
mov
add
push
sbbb
add
push
dec
ja
cmpsb
test
dec
xchg
pop
and
push
push
push
loopne
orb
push
cmp
shlb
lcall
add
jbe
jl
push
jb
mov
or
or
or
fisubs
ljmp
fmull
push
push
mov
sahf
xchg
and
pushf
inc
mov
inc
cltd
push
xor
add
push
cmp
push
cmpl
pop
rcrb
hlt
shlb
lcall
fst
cltd
movsb
dec
pushf
pop
stc
mov
push
mov
js
mov
lcall
stc
or
push
mov
fwait
aam
mov
lea
adc
out
add
stos
push
push
stos
jg
lock
imull
push
pop
lcall
or
fld
xchg
fisubs
or
rcll
stos
inc
lea
mov
inc
adcl
pusha
add
js
push
negl
pop
repz
add
and
gs
and
adcb
dec
ja
inc
or
dec
movsb
mov
fs
add
and
mov
or
or
lea
inc
aaa
in
push
ss
adc
or
xchg
rcrb
jne
xchg
rorl
mov
xchg
mov
jge
lock
sub
and
inc
in
outsl
mov
add
mov
dec
add
inc
mov
out
or
mov
scas
and
xchg
jb
mov
add
data16
xor
enter
or
shrb
mov
ljmp
add
xchg
sbb
jb
mov
into
rorb
push
push
add
sahf
jg
cli
add
jp
or
xor
adc
inc
or
sbb
stos
orl
lcall
mov
fs
sbb
je
sbb
stos
cmp
xor
mov
icebp
pop
mov
jp
push
and
aaa
mov
arpl
insb
adc
aam
add
add
or
enter
add
xchg
sub
outsl
fisubrl
inc
lds
xchg
bound
jns
jg
icebp
mov
cmc
mov
dec
add
inc
add
sbb
addl
push
xor
add
testb
inc
lock
and
cmp
icebp
int
push
cli
xchg
mov
sbbb
mov
jne
lods
dec
pop
push
sub
jecxz
push
xchg
push
adc
mov
and
daa
mov
icebp
mov
mov
into
jo
add
lods
jbe
push
mov
aam
insb
add
and
inc
and
andb
loop
or
scas
out
js
add
cmp
add
testl
popa
and
mov
xchg
insl
lods
push
rcll
andl
jns
rcr
js,pn
push
and
cmp
jne
and
cmp
adc
mov
arpl
pusha
pop
sarb
call
inc
shrb
push
inc
mov
dec
sbb
add
push
faddl
pusha
push
push
push
cmpb
jno
or
inc
or
sbb
dec
outsl
mov
mov
test
pop
cmpsb
popa
sbb
inc
arpl
mov
lret
mov
or
insb
rorl
push
cld
das
nop
cs
test
popl
add
inc
inc
dec
sahf
sahf
cmpsb
sbbb
pop
pop
xor
into
shrb
xchg
movsb
and
outsb
je
push
mov
adc
dec
sub
cmp
rclb
dec
ret
clc
push
shll
or
jp
loope
xchg
stos
stc
xchg
add
mov
xchg
test
mov
imul
mov
cmp
push
and
cmp
fcomip
mov
cmpb
cmp
cmp
mov
pusha
adc
pushl
cmpsb
add
loopne
loope
ret
xor
mov
dec
divb
inc
addr16
sub
mov
fists
mov
aaa
sub
xorb
es
and
loopne
negl
mov
test
ja
cmc
mov
and
add
or
sbb
sahf
mov
pop
adc
adc
cwtd
inc
mov
addb
mov
sub
push
xor
test
adc
xor
mov
pop
inc
mov
jp
std
dec
jmp
and
or
sbb
inc
xchg
in
xchg
mov
xor
add
cmp
lock
inc
push
push
mov
add
fdivr
or
xor
and
popa
mov
test
incb
sub
add
test
aas
enter
add
jb
shrb
adc
push
lcall
ss
cs
loopne
dec
pop
sbb
jb
mov
addr16
testb
andb
and
pop
add
ret
dec
pop
pop
insb
push
cmpsb
mov
dec
pop
push
jecxz
je
or
idiv
sarb
or
jns
mov
sahf
arpl
pushw
scas
jg
sub
ficomps
ja
add
js
adc
mov
call
test
jle
xor
nop
push
sub
add
data16
mov
inc
repz
push
add
mov
mov
mov
or
adc
pop
add
rorl
icebp
jo
adc
cli
je
add
sub
push
bound
movsb
and
fidivl
adc
mov
or
cltd
ja
lcall
icebp
pop
mov
cli
in
push
jg
idivl
and
dec
inc
push
adc
sbb
inc
mov
lcall
adc
jno
push
stc
or
loopne
mov
icebp
int
jp
pusha
loopne
and
cwtl
sub
mov
sahf
nop
add
add
add
pop
movsl
cltd
ret
inc
lret
ret
push
jo
mov
sbb
loop
fistps
shl
mov
jns
add
sbb
gs
fwait
sti
mov
add
imul
xor
add
and
and
inc
jo
pop
add
pop
jmp
mov
push
xor
xchg
jle
ljmp
lret
inc
repz
xor
adc
dec
sbb
and
and
loop
sub
jp
lcall
lret
test
or
test
mov
adcb
and
rclb
imulb
mov
arpl
and
test
add
stos
add
mov
mov
inc
push
js
shl
jno
and
jno
mov
test
add
test
cmp
ret
insl
inc
bound
fidivs
or
sub
or
aaa
fimuls
enter
add
rclb
and
push
sub
mov
mov
int
fimuls
and
dec
clc
add
sahf
adc
ss
jne
hlt
xchg
mov
and
scas
and
negl
cmpsb
jmp
loopne
nop
daa
aas
mov
insb
jp
mov
xor
cli
sahf
lock
mov
push
or
insb
lds
loopne
shrb
pop
or
push
mov
repz
bound
sbb
inc
cld
dec
and
dec
stc
add
pop
mov
mov
xor
out
mov
lcall
push
and
adc
add
mov
mov
push
adc
lea
or
pop
clc
xor
jp
mov
lea
sub
inc
jb
call
add
add
sbb
jle
push
fstl
inc
into
stc
cmp
mov
test
dec
mov
rorb
bound
andb
add
and
jg
jle
testb
mov
daa
jne
mov
in
imul
out
add
out
add
inc
dec
push
add
or
dec
push
int
or
jmp
sbb
and
sbb
jle
mov
ljmp
sub
mov
cmp
lcall
xor
mov
dec
and
je
das
and
push
cmp
test
loopne
js
jl
xor
inc
lret
outsl
push
pop
and
mov
cltd
jne
dec
ret
or
dec
and
es
ljmp
ss
loop
push
mov
push
test
push
sbb
add
hlt
ds
add
test
leave
dec
mov
xor
mov
fsubs
xor
sub
fistps
push
popl
push
lcall
and
pop
mulb
dec
dec
es
inc
lcall
fmull
dec
insb
pop
and
int
push
xorl
inc
pop
scas
vphaddwd
mov
adc
adc
bound
fsubl
mov
jno
add
push
lods
call
xor
sub
in
pop
push
mov
adc
cltd
movb
ds
xchg
hlt
inc
jle
fistl
decl
inc
stc
pusha
push
jecxz
movsl
inc
icebp
and
movsb
andb
dec
push
mov
idivb
pop
adc
lock
es
jg
jg
add
imul
pop
addl
push
ja
sbb
ds
adc
pusha
adc
leave
xor
push
rcrb
fidivs
testb
dec
add
and
jo
add
add
inc
dec
mov
loopne
add
add
add
jp
sbb
and
or
aas
mov
inc
push
nop
cmp
mov
pusha
add
push
enter
mov
adc
mov
std
dec
je
and
mov
test
sbb
ss
ja
lea
outsb
xorl
lcallw
adc
push
clc
cmp
push
xor
sbb
xchg
xchg
shlb
fs
xchg
or
dec
test
sarl
test
shll
mov
push
push
push
adc
enter
or
mov
fisttps
sub
pushf
xchg
dec
loope
cmp
mov
mov
pop
subb
loopne
cmp
incb
cmpsb
jae
pushf
inc
ss
sbb
decl
jno
mov
shrb
or
test
je
mov
loopne
xchg
mov
add
or
cltd
loop
push
mov
push
mov
popa
push
push
mov
rolb
and
inc
mov
movsb
or
and
sbb
mov
dec
int
pop
add
out
xchg
sbb
or
imul
inc
or
int3
mov
sub
push
add
inc
adc
cli
pop
or
and
pop
add
rolb
mov
and
xor
jo
cmpl
shlb
aaa
add
cmp
and
lock
cwtl
addr16
aaa
sahf
push
rcrl
jbe
out
fisubl
pop
sub
push
loopne
and
add
push
inc
sub
adc
lods
fmulp
inc
dec
sub
andb
leave
in
add
or
dec
cmp
inc
test
add
xor
dec
mov
inc
notl
xor
outsb
sub
cmp
mov
outsb
lea
outsb
int3
loopne
pop
movsb
inc
push
popl
adc
and
adc
js
jge
mov
mov
int
les
add
inc
js
xor
jg
clc
mov
addb
addl
mov
sbbb
and
push
sub
lcall
lods
fidivs
rolb
sbb
aam
and
or
lret
rol
lahf
in
and
and
mov
and
mov
jp
xorb
aaa
add
and
subb
jecxz
sub
jbe
jmp
sar
sbbl
fcmovnu
or
mov
push
sbbl
push
xor
xchg
xchg
fstp
hlt
mov
mov
insb
add
cmp
add
mov
and
jle
loop
into
push
mov
sub
jns
cmp
data16
lcall
popa
inc
sbb
inc
sbb
dec
inc
sbb
inc
sbb
xchg
fistps
call
ret
xlat
push
lds
sbb
call
or
and
mov
and
push
rcrb
je
adc
adc
in
cmpl
sbb
adc
dec
stos
out
mov
xor
pop
inc
in
addr16
ret
fbld
or
data16
adc
lock
aas
ret
ljmp
or
lcall
mov
pop
scas
or
add
inc
adc
sbb
mov
sti
sbb
in
subb
addr16
aaa
mov
push
pop
daa
sbbl
scas
les
xchg
cli
inc
or
into
hlt
hlt
lods
mov
xchg
add
xchg
test
lcall
adc
inc
xor
inc
lea
push
sbb
rorb
cmp
cmp
jo
pushl
mov
inc
pop
sbbl
cmp
leave
shlb
push
mov
xor
or
mov
outsb
cwtl
add
sbb
imul
add
lods
inc
mov
push
cs
cmp
dec
add
sub
shll
pop
into
sub
cmpb
pop
adc
ret
loopne
shll
lds
fmul
mov
and
push
xchg
lcall
jg
jge
test
sbb
inc
sbb
sbb
adc
inc
call
add
sbb
adc
pop
add
sbb
pusha
xor
add
inc
push
xlat
filds
add
and
add
and
mov
and
cltd
inc
add
jmp
loop
xchg
cmc
pop
or
aam
clc
rorb
pop
les
mov
rclb
aam
and
add
icebp
push
adc
cs
add
shll
dec
inc
dec
fdivr
jg
sub
add
or
icebp
lcall
inc
cmpsb
shrl
mov
cmpsb
fwait
std
sub
scas
loop
daa
loopne
push
dec
push
inc
sbbb
add
mov
fisubrl
or
inc
jle
icebp
pop
xchg
push
mov
adc
sbbb
fcoms
sbb
mov
sbb
xor
addr16
sub
add
sbb
or
decl
cmovs
stc
andb
dec
sub
add
lock
pop
vmovaps
mov
cmp
xor
or
je
sbb
xor
or
or
mov
es
mov
sbb
mov
test
and
push
jbe
rolb
inc
adc
and
xchg
pusha
xor
clc
cmpsb
pusha
xchg
mov
lock
jnp
sbb
test
add
push
ja
mov
inc
frstor
jle
add
fwait
push
mov
sbb
popa
inc
cwtl
icebp
mov
popa
mov
add
mov
loopne
cmp
dec
cs
xor
loopne
push
add
push
call
subl
adc
adc
imul
sbb
mov
pop
push
add
addb
and
in
pop
and
push
mov
loopne
and
add
and
inc
sbb
addr16
adc
or
dec
stc
enter
push
decl
and
roll
leave
cmp
arpl
mov
push
pusha
or
in
pop
loopne
out
xor
push
inc
push
and
lea
xchg
push
sbb
xchg
inc
sub
loopne
sbb
dec
or
pop
out
mov
clc
cmp
addb
add
inc
xor
and
sbb
inc
push
adc
fisubs
cmp
loope
insb
xor
test
push
sarb
cwtl
decl
lock
add
add
mov
pop
je
loop
fs
js
dec
rcrb
dec
pusha
push
in
loope
inc
add
lea
mov
xchg
or
push
loopne
sar
jg
popa
in
mov
dec
push
inc
es
pop
orb
int3
test
arpl
ljmp
cmp
mov
inc
adc
dec
dec
mov
add
add
push
pop
mov
push
sbb
sbbb
test
lds
sbb
fdiv
mov
outsb
fsubl
adc
or
jmp
in
and
cltd
mov
dec
aaa
loopne
loopne
hlt
and
loop
pop
mov
in
aam
rclb
xchg
cmpl
lcall
stos
or
dec
outsb
sti
hlt
in
add
jg
dec
loopne
subb
sub
add
push
outsb
cmp
mov
push
xor
cmpb
rcrb
or
push
add
or
sbb
cmp
nop
add
add
fs
push
add
cmc
and
mov
bound
repz
repnz
add
pop
arpl
pop
sbbb
pop
rcrb
jne
mov
push
xor
mov
sbb
add
inc
add
xchg
or
sub
dec
push
mov
add
dec
into
data16
es
bound
test
test
mov
adc
jnp
jp
adc
jbe
scas
dec
int3
jno
loopne
test
mov
jno
aad
pop
mov
arpl
mov
or
imul
cld
jg
push
cltd
jno
mov
mov
mov
push
popf
push
push
in
push
jae
jp
lods
xor
jno
cltd
cltd
pop
scas
pusha
inc
and
add
push
adc
ljmp
data16
jg
mov
or
mov
cltd
lea
xchg
repnz
jo
and
lcall
and
cli
push
popa
mov
add
xchg
lds
xchg
jbe
add
sub
cmp
push
mov
ja
jbe
into
push
andb
pop
xchg
sbb
fdivrp
insb
and
or
add
xchg
aaa
lock
mov
add
cld
movsb
adc
mov
or
lods
add
add
arpl
adc
xor
arpl
push
pop
inc
jge
add
cli
es
adc
cmpb
add
mov
cmc
shrb
push
jg
adc
or
int
xchg
dec
stc
repnz
add
enter
lcall
push
aam
sbb
jbe
popa
sbb
movsb
push
ret
mov
sarb
ja
out
insb
add
mov
push
cmpsl
cmc
fildl
popaw
cmpsl
xchg
loope
lcall
sarl
or
cmpsb
or
subb
cmp
cmpsb
mov
dec
aam
shll
xorb
pop
lcall
pop
xchg
push
xor
ss
fidivs
mov
inc
cwtl
push
and
fwait
aam
mov
frstor
out
notb
cli
cmp
stc
adc
add
imulb
ss
lcall
in
ret
loopne
popa
in
adc
pusha
ret
add
add
push
pusha
or
adc
loope
inc
mov
add
mov
xorl
adc
ljmp
jo
movsb
fnsave
push
and
ljmp
or
mov
xchg
rorb
jp
mov
aam
lcall
loopne
add
mov
outsl
push
test
xor
jno
mov
imul
xor
sub
add
ss
mov
mov
or
add
mov
adc
nop
mov
xor
xchg
jecxz
add
push
cs
hlt
mov
outsb
loope
je
adc
loopne
add
nop
mov
xorl
outsl
clc
jg
movsb
xor
movsb
or
xchg
fsubs
add
rorl
jno
or
sbb
rcl
test
test
pusha
cmp
cld
push
call
jl
aaa
xchg
add
insb
adc
aam
sbb
loopne
jbe
add
jo
mov
pusha
rcl
lock
mov
push
lock
sub
jg
ljmp
push
jae
add
shl
adc
add
mov
add
stc
inc
or
dec
lcall
push
les
clc
mov
sub
or
mov
dec
mov
add
loopne
mov
lcall
es
or
pop
lcall
inc
adc
jg
test
loopw
push
lcall
adc
fisubrl
add
xchg
inc
jbe
push
adc
mov
out
push
lcall
sub
and
and
rolb
mov
jmp
stc
add
or
jns
push
and
cmc
js
or
out
addl
inc
and
call
rolb
jnp
scas
sbb
adc
ret
pushl
call
push
mov
mov
xchg
mov
or
add
int
fcoml
push
enter
sub
xor
loopne
movsb
xchg
sahf
je
mulb
sbb
clc
adc
xor
jmp
adc
and
loopne
xchg
cs
or
push
adc
mov
mov
inc
adc
stc
mov
std
xchg
add
pop
adc
lcall
decl
jmp
fiaddl
add
daa
sbb
ja
jmp
sbb
loop
mov
xchg
push
and
bound
dec
inc
lock
outsl
lcall
lock
xor
fmuls
adc
icebp
sub
or
push
das
xchg
xorl
pop
andb
fmuls
and
adcb
rcrb
mov
mov
mov
jp
inc
or
mov
subl
ss
push
cld
fsub
notb
inc
loop
add
scas
test
div
daa
mov
loopne
pop
dec
mov
test
push
adc
pop
xchg
add
fsub
push
adc
pop
or
mov
dec
loopne
push
add
sub
or
test
insb
jle
addb
dec
mov
insb
data16
lret
in
or
sub
fadds
sub
fcomps
push
mov
pop
cld
out
movsb
ficomps
or
add
add
pop
add
fildll
jp
xchg
pop
add
sbb
mov
xor
test
in
fmull
xchg
mov
add
fwait
lds
pop
mul
mov
jo
mov
mov
ljmp
js
pop
sub
mov
mov
addb
sbb
mov
mulb
dec
xor
adc
pop
stc
cmpsb
fwait
dec
mov
mov
popa
cs
jne
adc
and
movb
stos
dec
add
push
rorb
fcmovne
insl
lret
pop
stc
mov
jl
fcomps
dec
adc
pop
jp
xor
jg
mov
leave
mov
jb
orl
add
push
addl
push
aad
ds
dec
js
push
fsubl
fadds
xchg
cld
adcb
ja
loopne
and
adcl
mov
lea
push
cwtl
pop
add
mov
dec
inc
mov
outsb
nop
ljmp
aam
mov
andb
add
mov
lcall
jmp
jge
inc
mov
mov
outsl
das
aam
and
jbe
add
stc
mov
add
filds
lcall
inc
add
jno
push
add
dec
jle
sbbl
inc
insb
inc
or
scas
nop
jle
in
shlb
inc
outsb
cmpb
cmpb
adc
or
inc
xchg
add
push
rorb
popl
push
mov
jl
mov
inc
adc
mov
cmp
mov
inc
cmp
jg
rorb
add
add
pop
std
sbb
dec
mov
and
iret
data16
iret
push
subl
mov
sarl
bound
pop
jmp
sub
adc
addb
test
addl
sahf
lock
xor
add
mov
movsb
iret
xor
add
adc
lods
pop
xchg
adcb
xchg
pop
test
dec
hlt
lea
outsl
lcall
push
dec
push
shlb
inc
push
repnz
or
jle
jp
push
mov
pop
pop
shrb
sub
xchg
sub
push
add
and
pop
cmp
push
xor
inc
push
das
scas
cmpsl
add
mov
add
cwtl
inc
adc
rorl
das
mov
fld
add
dec
enter
shlb
mov
cltd
shll
and
sub
push
lcall
xchg
or
addb
sbb
invd
sbb
jne
shl
inc
dec
movsb
mov
and
outsb
pop
jb
sub
mov
inc
jl
push
je
loopne
ret
adc
push
rclb
scas
ret
mov
lcall
or
imul
pusha
lea
dec
ss
cmp
cmp
and
mov
jp
mov
push
outsl
data16
adc
fwait
sbbb
out
adc
addb
popa
lods
outsl
lods
add
sahf
add
orb
cmp
es
aad
add
pop
xchg
clc
and
push
pusha
cmpsb
scas
loopne
loope
sub
mov
and
ljmp
push
xchg
and
mov
scas
xor
xor
push
ljmp
xchg
and
xor
mov
xchg
add
fidivrl
adc
addl
sub
enter
mov
aas
xchg
pop
push
push
shlb
loopne
cmpsb
and
mov
and
push
jg
rolb
addb
sub
sbb
and
dec
popa
rcll
jbe
inc
lret
mov
inc
and
lcall
sete
xchg
pmaxsw
pop
js
daa
sub
push
or
xor
incl
cmp
andb
cmp
sbb
cmp
push
repnz
mov
lds
sarb
out
push
push
xor
aad
inc
xor
je
or
mov
xor
loop
sub
inc
in
adc
or
pusha
add
jge
lods
xor
push
push
xchg
addl
inc
repz
inc
insl
and
inc
nop
cmc
mov
insb
pusha
jp
push
filds
or
sbb
outsl
gs
adc
mov
stc
scas
cs
fildl
sbb
lock
test
das
push
push
pop
outsb
or
and
lret
popf
sub
push
out
lcall
mov
movsl
fs
insl
test
nop
lods
xchg
leave
sbb
sbb
rclb
mov
xlat
inc
andb
pushl
scas
mov
ljmp
adc
shrb
cwtl
arpl
adc
sub
test
inc
shlb
loope
mov
faddp
or
xchg
rcrl
sbb
add
pusha
scas
cli
cwtl
gs
in
xor
popf
nop
mov
pop
out
test
sbb
arpl
cmp
dec
clc
loopne
add
add
pop
sahf
and
ret
pusha
xor
push
inc
xor
bound
cld
mov
xchg
inc
ljmp
lcall
push
ljmp
jnp
icebp
push
pop
sarb
dec
mov
lods
imulb
divb
loopne,pn
clc
adc
popf
jg
mov
addb
outsb
bound
mov
mov
xor
cli
inc
dec
out
dec
loope
sahf
cltd
decl
add
sub
add
mov
sbb
mov
movsl
rolb
xchg
push
sub
xchg
mov
or
push
push
nop
outsb
lcall
mov
sub
pop
fadds
outsl
out
ss
dec
lcall
negl
push
loopne
sbb
sub
fidivs
enter
push
imul
jg
movsb
nop
pusha
out
and
add
jne
aas
add
mov
and
mov
add
or
incl
stc
nop
mov
or
xor
incl
inc
add
lcall
add
mov
loope
push
inc
sbb
dec
mov
pushl
loop
add
mov
jnp
sbbb
dec
clc
inc
xchg
mov
xor
decb
lock
push
test
push
add
or
mov
js
mov
jbe
xor
mov
or
incb
es
push
xor
rcrb
shlb
jnp
stc
mov
push
or
adc
aam
or
inc
mov
insb
push
push
cmp
cmp
or
mov
loopne
or
cmp
add
sbb
pop
sub
int
push
push
std
out
push
pop
ljmp
or
pop
popa
and
adc
sub
push
popa
icebp
inc
arpl
mov
push
jo
push
or
jae
xchg
cmpsb
mov
call
jle
outsl
inc
inc
je
ret
and
or
je
mov
inc
cmp
jno
mov
int3
lcall
and
ljmp
or
fcompl
mov
sub
pop
mov
mov
mov
sub
jle
pop
mov
idivb
sub
orb
jge
push
mov
inc
pop
pusha
or
mov
sub
mov
je
sti
hlt
aas
xchg
jl
fisubl
add
pusha
xchg
adc
sub
add
decl
add
push
stc
push
add
push
aas
mov
mov
clc
call
adc
adc
data16
and
je
push
jae
add
orl
jg
js
push
inc
add
sub
cvtpi2ps
inc
add
cmpb
lds
nop
adc
test
inc
sbb
inc
jl
xorb
adc
or
push
and
testl
cmp
or
add
lcall
test
mov
and
add
sbb
rcrl
fmuls
sahf
inc
mov
push
add
fistps
pusha
sub
popa
sub
add
mov
add
sub
mov
jmp
push
xchg
outsb
test
bound
push
test
xchg
cli
nop
ret
adc
leave
inc
nop
push
arpl
lcall
test
mov
fsubs
inc
push
add
cld
dec
xchg
int
add
xor
or
push
jo
jl
aaa
xchg
push
pusha
loopne
ret
pushl
mov
loopne
xchg
jo
into
and
into
xchg
ja
push
in
decl
pusha
cmp
or
or
sbb
lock
pushl
mov
push
or
add
test
add
sub
push
lods
or
xor
and
fwait
sub
incl
xchg
or
and
and
shlb
and
inc
cmp
addb
je
lcall
mov
sbb
mov
int3
cmpsl
shlb
push
pop
and
mov
adc
jns
mov
dec
push
push
push
out
xchg
adc
add
rcrl
outsb
and
xor
xor
pop
push
lea
div
sub
pushf
mov
add
pusha
mov
xchg
ret
loope
shl
xorb
or
lcall
and
les
out
or
push
cli
fbld
mov
fbld
and
pop
mov
xor
xor
mov
jno
mov
in
adc
cltd
inc
loopne
pop
or
scas
mov
mov
stos
call
xor
lcall
add
in
adc
filds
fcompl
sub
adc
andl
push
or
push
or
jno
rcrb
pop
push
inc
xor
inc
and
pop
xchg
mov
jae
mov
notb
mov
add
stos
pop
outsb
mull
lea
jg
dec
sbb
inc
adc
nop
cltd
mov
pop
nop
fs
xchg
cli
jg
adc
push
pop
mov
lcall
lock
loopne
fs
pop
imul
xchg
push
and
inc
ljmp
adc
sbb
mov
test
add
sbbl
adc
loopne
jle
and
add
ja
shll
addl
fchs
shll
inc
imul
dec
loope
and
jo
sub
and
push
cltd
mov
dec
adc
aad
ljmp
stc
stos
sub
pop
jae
pop
pop
push
loopne
sub
cltd
insb
call
xchg
xor
cltd
addr16
jp
popa
cs
push
push
jno
in
adc
test
shlb
push
add
mov
push
jnp
cmp
or
in
icebp
mov
in
orl
nop
or
leave
xor
pop
mov
add
jle
sub
lods
pop
bound
aad
push
decl
sbb
add
xor
les
and
icebp
sbb
inc
and
movsb
mov
jbe
inc
push
int3
mov
xor
mov
cmp
mov
add
and
mov
cli
add
inc
add
cmpl
inc
lcall
inc
mov
inc
sbb
adc
pop
add
lcall
sbb
sub
scas
adc
xor
xchg
bound
adc
pop
jl
inc
adc
dec
add
das
cli
sbb
add
idivb
scas
xchg
test
mov
push
mov
add
mov
push
and
in
add
sbb
mov
cltd
insb
loopne
and
andl
add
and
push
mulb
stos
sub
lock
movsb
add
fcomps
dec
add
mov
clc
insb
push
add
inc
aam
pop
mov
stos
add
add
sub
dec
add
testb
pop
add
mov
adc
xor
xor
orb
xorl
mov
add
xchg
pop
insl
push
test
xchg
mov
movsb
xchg
int
xor
pop
gs
inc
out
cmp
stos
pop
pop
dec
push
lcall
jle
in
outsl
mov
arpl
push
cmpsb
xorb
jae
add
loopne
stc
add
cmp
pop
stos
mov
push
lret
pusha
into
pop
inc
mov
clc
inc
stos
gs
inc
push
jb
adcl
add
adc
adc
leave
scas
cs
lods
jb
rolb
add
insl
loop
xchg
rcrb
insl
dec
repnz
je,pn
adc
lret
cmpb
jae
dec
stos
incb
lds
jne
and
add
and
adc
sub
mov
jp
stos
call
loop
push
sbb
dec
bound
shufps
aaa
rolb
push
inc
sahf
mov
ja
fisttps
enter
addr16
ret
arpl
jbe
loopne
fidivl
push
mov
add
pop
xchg
inc
dec
andl
adcb
movsl
pop
push
inc
jne
jp
rcrb
dec
out
mov
and
jne
addb
sbb
insb
mov
add
xchg
test
inc
push
add
push
and
add
dec
repnz
les
inc
xor
inc
xchg
push
sbb
or
jo
inc
dec
xchg
pop
push
ret
shrl
movsb
ljmpw
lock
inc
adc
lcall
popf
pop
bound
or
xchg
lock
push
xorl
mov
jle
or
arpl
adc
jbe
out
add
icebp
outsl
mov
rorb
xor
dec
xchg
mov
mov
pop
movb
shlb
and
clc
pop
dec
mov
sbb
lcall
bound
xorb
test
add
shlb
mov
xorb
add
mov
add
es
xor
dec
outsl
and
outsb
add
mov
sbbb
lea
mov
push
daa
mov
add
test
push
adc
adc
add
pop
mov
adc
inc
in
lcall
sub
xor
xchg
or
xor
push
sub
push
inc
jo
lcall
jle
lcall
mov
jg
push
and
mov
xor
es
fdivrp
lods
xchg
adc
adc
and
xor
bound
loopne
and
mov
movsb
add
pop
sarb
xor
pop
xor
or
in
add
andb
push
stc
mov
decl
mov
loopne
or
adc
lret
xchg
mov
jnp
ret
mov
sub
or
jp
cmpsb
lcall
sub
cmp
cmp
call
pop
xor
iret
fcoms
nop
pop
loopne
or
negl
mov
fdivrp
mov
xchg
gs
sbb
push
sub
add
sbb
cwtl
test
cmp
lret
inc
inc
orb
mov
dec
push
loopne
mov
or
sahf
shll
jno
pop
and
lea
push
cmpl
jl
rclb
nop
popa
aaa
xor
mov
sub
bound
add
mov
lea
lcall
mov
inc
cmp
jno
sti
push
sbbb
sbbb
or
xor
fisttps
popa
mov
push
mov
xchg
xchg
cli
loop
les
mov
inc
mov
or
adc
hlt
mov
jnp
cmpsb
inc
inc
inc
out
push
cs
push
mov
outsb
mov
push
scas
mov
xor
push
xor
or
das
cmp
outsl
push
jo
push
xor
addb
push
int
mov
push
mov
scas
mov
in
inc
sbb
push
mov
rolb
jg
add
and
inc
mov
shll
dec
sbb
mov
mov
mov
hlt
xor
push
and
adc
jno
sub
clc
clc
lcall
or
add
xchg
mov
or
xchg
add
or
adc
mov
or
orl
add
push
pop
dec
or
adc
movaps
mov
inc
pushf
xor
jp
lcall
push
add
xorb
jb
daa
orb
cmp
add
add
cltd
sub
add
add
jmp
fwait
add
push
ljmp
xor
shlb
push
push
jo
loop
and
orb
push
mov
mov
or
pop
pusha
pop
cltd
mov
push
adc
inc
push
cmp
push
shll
testb
repz
add
loopne
cli
jle
jg
lods
call
bound
dec
cmp
dec
jl
xor
sbb
pushf
out
clc
stos
add
add
cs
and
cmp
and
and
test
ljmp
xor
push
mov
pop
cmc
add
mov
pop
jo
inc
inc
sti
sbb
sbb
pusha
and
push
and
and
mov
push
adc
mov
lds
push
adc
xchg
adcb
decl
test
mov
callw
call
shlb
pop
push
cmp
and
aas
mov
leave
add
cmp
fwait
adc
lock
pop
adc
and
divb
jnp
repnz
nop
jge
shll
sbb
popa
fdiv
adc
nop
aaa
movsb
push
fnsave
inc
fnstenv
in
adc
mov
xor
mov
mov
xchg
xchg
adc
adc
dec
icebp
and
pop
sub
push
fwait
test
test
mov
adc
sahf
aaa
push
cmp
sbb
imul
push
sbb
gs
jg
xchg
xor
cmp
add
jl
neg
fisubrs
xor
xor
loope
stc
pop
adc
mov
adc
adc
sub
adcb
out
or
cmp
arpl
sub
adc
push
sbb
call
leave
push
test
xor
sub
add
lret
aam
addr16
mov
andl
cmpl
push
or
push
test
call
mov
ja
sub
lcall
push
push
rorb
das
xchg
repnz
adc
adc
add
adc
lock
xchg
inc
ljmp
xchg
push
adc
and
inc
outsb
call
dec
insl
jmp
out
and
stc
mov
outsl
adc
inc
lea
mov
jo
outsb
xor
fs
or
push
aas
or
add
push
jmp
xor
sbbl
and
rclb
divb
and
inc
orb
add
pop
dec
sbb
outsb
mov
stos
xorb
les
push
clc
sbb
repnz
and
inc
in
jbe
pop
jnp
push
push
call
pusha
cmp
mov
or
sbb
inc
arpl
add
add
lcall
add
in
pop
or
pop
push
cmp
push
loopne
lods
xor
push
addb
popa
test
sub
mov
push
jo
mov
or
mov
aad
inc
adc
pop
xchg
mov
pop
mov
dec
inc
sub
mov
cmp
pop
inc
sub
mov
ret
lret
jge
testl
call
lcall
rolb
cmp
shl
jo
cmp
call
std
or
mov
xchg
push
or
mov
inc
or
xchg
rolb
shll
fwait
call
lock
or
cmpsl
lcall
mov
shll
xchg
icebp
and
dec
sub
pushl
test
sahf
insb
popa
jmp
mov
aaa
mov
or
push
mov
mov
jne
jge
add
dec
sbb
aad
lcall
or
add
push
pushf
subb
or
aaa
xor
sbb
push
jge
push
shlb
jmp
mov
pop
jbe
es
outsb
fsubrs
aam
add
and
popa
pushf
adc
inc
jg
push
jl
jo
mov
cltd
loope
fisttps
es
ljmp
and
mov
and
xor
push
test
and
in
test
test
es
jg
add
sub
or
xor
int
and
nop
inc
outsl
ljmp
jge
xor
add
ljmp
pusha
inc
outsb
pop
imul
jne
aam
cmpsb
adc
inc
and
adc
mov
adc
cmp
lds
into
lcall
sub
ljmp
lret
mov
or
sub
sub
mov
xor
mov
add
inc
add
jp
es
loope
sarb
add
repnz
add
idiv
mov
and
adc
cmpb
fcoms
fwait
repnz
lock
add
shrb
dec
mov
test
sbb
dec
and
cld
sti
inc
notb
test
push
push
mov
aam
mov
add
add
pop
adc
fists
push
mov
fdivr
cmpsb
in
push
outsb
fwait
lods
fiaddl
testb
add
loope
xchg
and
mov
addb
popa
lods
jg
mov
add
add
dec
add
inc
xchg
add
pop
daa
jp
dec
loop
lods
jecxz
inc
aas
movsb
push
xor
js
pop
hlt
add
push
pop
pop
lea
jo
cmp
leave
sbb
jo
adc
cmc
inc
add
lcall
jbe
scas
dec
sbb
jp
insb
inc
sub
outsb
xchg
insb
or
movsb
out
test
addb
or
mov
sbb
and
je
rcrb
cmpb
pop
mov
mov
fmuls
xchg
movsb
ss
rclb
push
cmpsl
ss
les
dec
or
mov
sbb
stos
mov
push
in
sbb
icebp
or
push
mov
loop
push
inc
push
daa
pop
fimuls
mov
cmpb
xor
mov
xor
add
mov
int
andb
dec
mov
cwtl
jl
mov
add
mov
out
jo
cltd
movsl
add
xchg
popa
inc
and
dec
push
mulb
dec
mov
inc
sbbb
dec
and
js
dec
ds
test
lahf
inc
cld
xor
mov
repnz
sub
pop
sub
cmp
and
arpl
andl
cmpsl
aad
add
pop
xor
add
pushl
stos
dec
sub
es
pushl
sub
or
ss
ss
sub
ja
lods
adc
outsb
pushl
bound
cmp
rorl
stc
jl
cmp
ret
push
sub
cmpsb
les
jae
sub
jg
fsubrp
lea
dec
inc
addb
add
adc
push
je
mov
xchg
mov
add
cmp
mov
sub
cmp
jae
test
subb
outsb
add
and
and
xor
pop
sub
sbb
cmp
jge
mov
outsl
sbb
adc
and
and
fs
repnz
sbb
mov
sub
adc
jl
fcomip
cltd
rolb
inc
adc
push
adcl
jmp
adc
sub
add
add
fidivl
cmp
inc
xlat
cmp
push
pop
sbb
and
pop
jne
add
lcall
jno
mov
fbstp
nop
and
mov
xchg
iret
insb
out
ret
loopne
mov
pop
jle
out
push
mov
call
inc
aam
inc
inc
inc
test
orb
imulb
cmpsb
lret
or
pusha
loope
cli
in
or
push
ret
fistps
jo
addb
and
arpl
pop
lcall
lcall
jne
inc
and
cltd
or
stos
pop
test
xchg
pusha
pop
and
cld
incl
sbb
lahf
les
add
or
mov
xorl
or
cmovnp
clc
mov
push
mov
xchg
dec
sub
sbb
and
or
pop
loopne
or
fcmovnu
and
xorb
lahf
sub
and
add
das
clc
cmp
mov
sub
test
mov
int3
ret
cli
add
popa
sub
adc
adc
cmpsb
mov
nop
adc
adc
pop
mov
mov
dec
jle
pop
mov
adc
mov
add
jne
adc
loopne
push
and
push
mov
cld
mov
dec
xor
test
adc
mov
lcall
pusha
or
movsb
mov
movsb
addr16
mov
xchg
add
adc
cmp
movsb
ret
stc
inc
mov
cmp
adc
push
ret
imul
repz
mov
jns
xor
js
inc
daa
jbe
jmp
mov
add
and
sahf
test
rcrb
mov
jmp
fcomip
in
sub
and
add
imulb
xor
sub
pop
stos
sbb
ljmp
xor
jmp
into
xor
ret
xor
pop
push
lds
popf
dec
sub
xor
adc
pusha
inc
push
xchg
insl
in
shlb
add
ss
ucomiss
leave
xor
adc
loop
pop
mov
and
jo
jmp
jg
lcall
inc
and
sbb
xor
loop
js
and
ja
clc
dec
pop
add
clc
loopne
ficoms
ret
pop
push
adc
mov
ret
mov
dec
mov
stos
dec
scas
mov
test
outsl
mov
or
sbb
nop
mov
push
dec
cmp
xchg
shlb
add
fwait
add
push
fldt
adc
sbb
repnz
sbb
fisubl
and
sar
fwait
ret
stos
sbb
hlt
lock
addr16
adc
push
pusha
lcall
rorb
inc
dec
add
xor
push
push
pop
add
jp
ja
js
sti
movsb
jmp
inc
inc
movsb
out
sarb
jo
or
sti
push
sahf
jo
or
cli
pop
add
adc
fisubrs
fisubs
mov
pop
lods
add
sub
cmc
push
inc
xor
add
int
nop
movsb
out
aas
mov
loopne
sub
mov
mov
push
mov
xchg
adc
popa
pop
verr
adc
jl
scas
mov
fwait
cli
sub
movsb
call
lea
rolb
push
jmp
dec
test
push
or
add
scas
dec
rorb
addl
lea
inc
mov
push
imul
jbe
adc
xchg
loopne
mov
inc
mov
jo
roll
adc
aas
es
inc
push
add
push
enter
pop
add
sub
dec
inc
mov
test
dec
mov
jle
xchg
inc
add
or
nop
xchg
scas
pop
mov
pop
mov
push
pop
jno
sbb
in
lcall
xchg
add
data16
or
jo
sbb
rclb
pop
mov
hlt
add
das
inc
inc
adc
lds
cmp
jo
and
rorb
and
jno
pushf
test
add
imul
xchg
lret
and
mov
dec
or
jl
sbb
jge
and
adc
push
add
and
shll
incl
ret
push
mov
jle
testl
fwait
mov
add
ror
andl
pusha
and
pusha
xchg
push
add
mov
data16
xor
cmpb
push
dec
push
mov
test
pop
test
and
jo
jnp
dec
rorb
addb
and
inc
push
push
ret
lcall
jp
sahf
and
jo
push
xchg
push
cmpsl
pop
loopne
bound
xor
xchg
mov
insb
je
clc
sub
pop
test
and
cmp
jbe
jge
test
adc
dec
push
pop
fwait
or
dec
xchg
clc
imul
mov
add
add
incl
repnz
dec
pop
les
jp
pop
test
pop
fcos
push
jae
rolb
cmp
loopne
mov
icebp
outsb
sbb
mov
push
push
adc
mov
adc
sahf
dec
out
mov
push
std
adc
call
jo
mov
lret
or
rcrb
scas
adc
or
shll
adc
sbb
ss
arpl
or
cmp
cmp
and
xchg
mov
cltd
jl
repnz
pop
pop
jns
data16
push
and
add
push
jp
mov
xchg
movsb
sub
add
jg
mov
and
sahf
xor
lock
xchg
push
mov
rclb
cmp
mov
inc
push
push
jbe
mov
pop
adc
pop
pop
mov
pop
subb
sbb
outsb
jne
xor
sti
jp
adc
cmp
incl
es
sub
cltd
js
mov
mov
idivb
mov
jae
pop
rorb
and
pop
adc
add
mov
lcall
lcall
or
jbe
fimuls
or
clc
jp
movsb
orb
int
xchg
or
xchg
adc
and
fnsave
xchg
into
dec
sub
sbb
shll
pop
sbb
or
adc
cmp
cmp
loopne
push
sbb
sub
add
xlat
data16
and
cwtl
inc
daa
rolb
notb
adc
add
cmp
and
pop
dec
pop
jae
or
xchg
and
ret
add
insl
clc
jbe
pusha
or
dec
loope
pop
mov
jbe
cmp
dec
push
adc
fadds
dec
xchg
sub
or
mov
mov
cmp
clc
fidivrl
mov
mov
push
and
or
cwtl
enter
jg
xchg
dec
push
add
fst
neg
mov
add
add
adc
fdivp
add
push
fsubrs
push
inc
icebp
pusha
mov
test
adc
mov
sbb
mov
lcall
je
xor
leave
clc
mov
dec
std
fists
andb
sub
gs
add
and
cmp
bound
scas
push
jo
lret
add
add
test
push
sbb
adc
mov
xchg
repnz
xchg
cmc
jg
jb
cld
jle
mov
add
repnz
out
or
cmp
or
cmp
or
cmp
jg
ss
js
xor
push
dec
and
mov
sbbb
mov
add
sbb
into
rolb
add
push
or
icebp
and
inc
je
push
and
inc
xor
add
pop
cli
jbe
push
hlt
xchg
es
cli
pop
add
sbb
add
xchg
push
ljmp
arpl
mov
mov
cmpsl
or
rclb
add
add
pop
js
lods
pop
mov
pop
outsb
adc
dec
inc
imul
xlat
pop
clc
mov
add
pop
xor
add
clc
mov
divb
sub
movb
in
mov
repnz
jo
jg
enter
mov
mov
inc
pusha
add
test
cmp
inc
and
cmp
test
andb
inc
push
es
cmp
lds
or
into
sub
or
incb
mov
xor
mov
and
add
arpl
and
fadds
inc
cmp
mov
test
add
cli
sbb
pop
xor
jecxz
sarb
lock
inc
lret
inc
sbb
inc
adc
inc
adc
dec
push
mov
mov
mov
mov
mov
adc
jno
jecxz
mov
clc
mov
aaa
dec
das
cmpsb
arpl
bound
aas
inc
xchg
push
outsb
fsubr
add
xor
push
and
cli
data16
jno
push
or
stos
dec
lods
jb
nop
sub
push
imul
dec
push
inc
cltd
add
sbbb
jl
insb
cs
jmp
xchg
hlt
call
out
xor
andb
add
jb
lods
loopne
add
pushf
imul
jo
fisttpl
xor
push
insl
lods
lcall
inc
daa
add
js
jle
popf
mov
jae
jno
jp
jne
push
test
popf
loopne
mov
aam
fwait
adc
mov
ret
mov
pusha
and
in
jo
fimull
ja
lret
dec
mov
inc
sub
cs
lcall
mov
repnz
mov
add
and
jns
movsb
xchg
adcl
xor
mov
lock
add
and
xor
mov
jbe
add
xchg
addb
add
or
dec
lds
rorb
enter
or
aaa
add
add
lods
or
out
xchg
inc
push
mov
icebp
sbb
mov
inc
xchg
cmp
out
push
mul
mov
push
dec
or
dec
pop
ret
push
add
mov
jno
xor
and
push
daa
loop
aam
sbb
sub
jae
cli
add
sub
lods
add
cli
push
mull
mov
sub
in
push
inc
rorb
test
mov
mov
and
cmp
inc
push
jno
add
pusha
test
jecxz
in
pop
mov
orb
mov
pusha
test
ret
push
sub
xchg
pushf
xorl
pop
orl
pop
movsb
repnz
lcall
or
inc
inc
adc
dec
lcall
xor
dec
aam
movsb
push
in
jo
pop
dec
in
insb
inc
lock
pop
cwtl
xor
in
add
add
pusha
clc
dec
lcall
pop
inc
jp
push
and
rcrb
add
mov
cltd
js
xorl
pop
push
insb
mov
ss
pop
add
adc
hlt
add
sbb
adc
testb
cmp
jne
inc
cmc
clc
jae
mov
das
mov
outsb
mov
sub
xor
inc
adcb
dec
test
mov
call
adc
inc
sub
adc
adc
addl
test
mov
add
or
es
xor
shlb
pop
ret
push
push
jae
add
cmp
sub
das
roll
mov
cwtl
daa
xchg
shlb
xor
mov
pop
cltd
lock
icebp
xchg
jae
loopne
sbb
inc
jmp
mov
insl
and
das
cli
scas
sbb
push
mov
or
xor
lock
push
mov
mov
cmp
aas
add
sbb
lds
fs
and
icebp
mov
dec
fsubrl
sbbb
sbb
add
adc
mov
jl
and
pop
addb
outsb
fistpll
push
cltd
adc
stc
mov
fwait
and
mov
fdivrs
out
cmp
pop
hlt
pop
lock
pop
lock
add
sbb
add
icebp
sbb
lret
push
xchg
mov
pop
sub
dec
mov
test
mov
cmp
push
rcrb
fisubrl
adc
cli
test
lods
std
outsb
inc
xor
and
add
imul
mov
daa
jle
inc
jl
xor
faddl
mov
scas
xor
test
mov
js
xchg
mov
stos
add
and
pop
mov
inc
mov
mov
shlb
clc
add
add
pusha
pusha
ja
js
pusha
sti
or
testb
cmp
out
xor
add
outsb
pop
fildll
jae
sub
and
xor
or
xchg
lea
or
test
push
and
outsl
push
and
jnp
add
jae
add
rorb
fists
pushf
or
and
add
dec
jp,pt
lar
pop
mov
adc
push
hlt
dec
std
sbb
je
subb
lcall
out
sbb
repz
xor
cli
pusha
add
inc
popa
xchg
jg
add
mov
adc
sub
sub
sub
cmp
add
clc
add
add
mov
out
movsb
mov
jo
cmp
jb
sbb
xchg
cwtl
lcall
xor
out
pop
mov
push
mov
ret
mov
mov
adc
popa
mov
lcallw
or
lods
xchg
sahf
sbb
fst
sbb
lea
into
lods
dec
sub
outsb
ljmp
repnz
int3
sub
dec
nop
sarl
ja
mov
or
movsl
or
lods
add
pop
pusha
test
and
mov
std
jg
jo
clc
stc
mov
stos
adc
and
xor
dec
mov
and
rcr
sahf
and
sub
insb
andb
or
jno
and
int3
and
mov
fs
or
and
lock
and
notb
add
iret
sbb
sub
dec
inc
adc
std
insl
lods
mov
hlt
stos
lea
sub
add
push
and
decl
add
mov
add
pop
xchg
xlat
sub
arpl
add
jg
outsb
add
and
mov
push
loope,pt
cmpl
ret
insb
loope
cwtl
orl
add
mov
pop
loop
and
sti
mov
jb
mov
and
ljmp
mov
mov
or
jo
xor
outsl
aad
jbe
or
push
add
rolb
aam
cmp
sbb
call
add
hlt
mov
mov
daa
xor
mov
and
jmp
inc
xor
pop
and
mov
xor
cmpsl
push
inc
ds
ret
mov
jmp
sbb
andl
pusha
adc
inc
add
into
cli
testl
xor
push
cmp
pop
push
add
mov
add
call
lret
sbb
shrb
inc
mov
dec
into
hlt
or
hlt
call
les
lret
shrb
ja
jbe
add
add
and
mov
ja
dec
lret
cmp
lret
stos
xor
mov
popa
inc
and
pop
daa
or
mov
jp
fcoml
adc
jp
movl
data16
xor
sqrtps
sub
add
and
and
or
icebp
lcall
std
dec
mov
sbb
or
bound
push
adc
or
add
addl
inc
and
push
push
inc
xor
or
pop
sub
push
jo
lock
pop
mov
push
xor
add
mov
mov
or
mov
lea
adc
std
mov
cmp
bound
nop
es
or
or
add
std
inc
test
sub
shll
decb
jmp
cmp
pop
push
push
inc
addl
dec
and
hlt
jp
and
incl
inc
add
inc
mov
mov
lcall
jg
shrb
mov
pop
gs
jp
inc
inc
movsl
mov
add
or
sub
je
addl
add
push
inc
push
xor
or
repnz
xor
addb
ret
notb
sbb
stos
ficoms
or
icebp
lock
fwait
push
xor
mov
test
arpl
mov
int3
loopne
rcrb
cltd
rclb
jae
data16
call
adc
or
and
push
divl
adc
push
mov
bound
testl
and
adc
lahf
rorl
mov
or
mov
cld
add
inc
imul
out
loopne
ret
add
sbb
sbb
adc
xor
inc
cmp
mov
dec
mov
add
push
push
adc
adcb
icebp
cmp
add
xor
mov
fprem
es
lods
sub
or
or
xor
push
aas
jbe
jbe
cmp
clc
sbb
cmpsb
ss
lock
nop
jle
push
sbb
cld
inc
adc
imul
cs
xor
dec
adc
cmc
or
lcall
push
adc
enter
int3
pop
sbb
sub
jnp
jo
inc
shlb
mov
push
into
mov
mov
adc
cli
add
mov
insl
sarl
xchg
xor
cmp
inc
mov
push
das
cld
fwait
dec
std
inc
add
fs
movsl
lcall
ret
inc
rorb
call
inc
rolb
inc
xor
fsubrs
stos
or
jb
js
add
adc
dec
mov
mov
nop
lcall
push
out
test
int3
add
mov
xchg
xchg
push
or
inc
stos
dec
mov
adc
decl
dec
mov
nop
dec
or
adc
lcall
pop
push
add
ds
or
cli
decl
dec
xor
lcall
dec
ret
mov
test
adc
push
cmp
lcall
mov
add
ret
loop
imul
dec
scas
loop
js
je
mov
or
popf
mov
add
jno
push
clc
xorl
dec
xorb
adc
push
add
mov
xchg
jbe
jae
arpl
outsb
jp
adc
jg
mov
out
cmpb
and
adc
adc
rolb
fistpll
adc
mov
out
lcall
ss
jl
addb
sbb
cmc
call
mov
cmp
in
stos
mov
push
lcall
adc
or
pop
aam
add
sti
sub
subl
sub
lret
cmp
push
mov
push
insb
sub
xor
mov
jo
jo
push
and
mov
or
pop
xchg
out
les
stos
sub
xor
dec
or
or
xchg
das
mov
stos
cltd
out
mov
dec
adc
push
and
pusha
in
pusha
loope
push
loopne
and
adc
push
addl
push
inc
cltd
jne
mov
movsb
adcl
lcall
and
pop
dec
mov
sarb
addl
mov
push
bound
lods
in
lret
dec
mov
repz
nop
push
add
in
cwtl
cli
or
mov
nop
add
cli
mov
xor
sub
xchg
jbe
xchg
cs
testb
ja
stc
inc
stos
cmp
test
fcmovnbe
cmp
insb
loopne
inc
push
outsl
or
call
xchg
cltd
insb
inc
add
orb
jmp
and
adc
jle
lds
clc
inc
add
jg
mov
mov
nop
loope
adc
adcl
xor
outsl
fcomip
push
adc
jnp
lcall
lea
decl
inc
pop
ja
add
jno
sub
pusha
or
adc
add
add
in
fcmovnb
push
lock
mov
xchg
mov
or
xchg
push
icebp
adcb
js
sbbl
sub
and
mov
orb
push
jl
adcb
mov
adc
mov
inc
fdivp
insl
xchg
enter
add
rclb
stos
cltd
push
xchg
jg
inc
sbb
test
xor
std
jg
rolb
cltd
jno
roll
mov
add
aam
pop
cmc
and
clc
jl
fbstp
adc
in
adc
push
and
incl
data16
inc
fisubl
xchg
sarb
push
sbb
cmp
mov
xor
rclb
movsb
inc
xor
cs
xor
or
lcall
jno
inc
jle
iret
add
or
je
and
jbe
insl
fistpl
or
add
pop
cmp
nop
addb
cmp
bound
add
rcrb
add
dec
sbb
fbld
lretw
lods
out
dec
sbb
mov
jo
popf
pop
repnz
dec
into
and
ljmp
in
int3
sahf
push
inc
add
xorb
testl
shl
pop
test
or
push
or
lret
fcom
cltd
sub
sbb
adc
and
andb
cli
xchg
dec
sbb
xchg
dec
je
fsubl
mov
add
ss
rorl
mov
jl
or
lcall
gs
mov
and
push
int
and
xchg
es
and
and
add
push
xor
push
dec
mov
mov
inc
cld
jo
arpl
add
lods
pop
mov
cld
orb
inc
int3
xor
xor
cwtl
or
and
sub
mov
xchg
mov
xor
out
push
jp
out
test
cmp
adcb
addl
xor
fmull
loopne
add
fstpl
popa
push
and
stos
hlt
push
push
ret
jle
ret
pop
shrb
cmp
xor
cmp
jl
fisttps
cmp
mov
ss
je
mov
dec
dec
dec
xor
xor
jnp
sbbb
push
or
inc
int3
push
ret
and
pusha
cwtl
sbb
adc
add
inc
inc
test
jl
add
outsl
cmpl
sbb
in
add
cwtl
gs
insb
test
or
sub
lea
int
jo
adc
sbb
ljmp
rorb
inc
xchg
push
cli
mov
cmp
rclb
dec
daa
dec
sar
jg
adc
daa
hlt
andb
or
mov
or
ljmp
mov
mov
insl
mov
adc
ret
mov
xor
inc
cmpsl
insb
mov
outsb
and
inc
sbb
mov
out
cli
or
inc
add
inc
push
jae
or
pop
sarb
mov
mov
sbb
push
mov
inc
xchg
clc
repnz
push
pop
inc
or
jbe
cmp
ja
jae
pop
shrb
dec
ret
mov
jmp
sti
lret
roll
dec
mov
jb
sub
gs
inc
add
xor
in
mov
ljmp
and
sub
mov
add
xor
iret
js
push
and
sbb
xor
js
sahf
and
shrl
inc
sub
mov
or
in
push
icebp
xor
mov
dec
xor
sbb
cmp
add
dec
jno
push
leave
jo
sbb
loopne
bound
push
sbb
fcmovbe
sub
push
inc
stos
bound
mov
loopne
ret
jmp
shll
push
sarb
ja
sbbl
roll
add
inc
and
and
rcll
sbb
rcll
add
xor
adc
add
stos
repnz
cmp
sbb
sti
lcall
sbb
ret
shll
mov
mov
cmpsl
and
adc
pop
pop
gs
adc
push
push
push
jg
std
fidivrs
and
ljmp
adcb
dec
dec
fdivs
or
sbb
fsts
add
sbb
mov
lret
sub
mov
adc
aam
sbb
scas
sarl
jbe
mov
xchg
sbb
mov
loop
mov
mov
in
movsb
mulb
jle
and
push
xor
xor
rolb
sub
sbb
ror
cmpsl
sbb
push
add
clc
in
frstor
rcl
dec
rcr
add
rclb
lea
sbb
inc
shl
scas
jne
mov
mov
pop
push
stos
sbb
inc
sub
pusha
push
movsb
sbb
mov
add
call
rcrl
stos
or
or
mov
push
sbb
js
mov
flds
push
mov
pushf
stc
adc
push
mov
sbbb
jbe
in
lock
and
out
aaa
pop
clc
pop
jo
and
sub
mov
loope
add
inc
add
faddl
cld
popf
sbb
mov
int3
pop
inc
xlat
push
inc
repnz
shlb
ljmp
leave
movsb
negb
cld
mov
fisttpll
add
dec
mov
lods
add
loopne
jns
call
popf
test
mov
push
jnp
ja
icebp
fwait
mov
outsb
mov
jg
roll
rcrb
push
add
jae
lret
ss
dec
notb
lea
adc
pop
add
inc
push
add
pop
pop
test
push
inc
inc
dec
and
inc
into
adc
jge
and
or
push
mov
inc
sub
push
data16
pop
cld
out
add
push
lcall
push
inc
or
push
movsl
or
or
inc
cwtl
stos
add
push
push
dec
cmp
shrb
fwait
mov
movsb
call
xor
aad
or
push
push
or
loopne
pop
sbb
insb
lods
into
mov
dec
pop
cmp
dec
imul
test
jbe
test
insb
cmpsb
push
or
cld
incl
je
lock
inc
js
dec
xor
repnz
add
fidivs
pop
pop
inc
mov
mov
dec
dec
pop
mov
shr
cmpl
cs
shlb
or
je
and
add
rcrl
rcrb
call
dec
or
sbb
pusha
or
stc
orb
or
mov
sub
ss
pop
call
push
mov
sub
xorb
clc
pop
adc
pusha
add
add
call
decl
add
lock
push
test
push
jo
push
inc
jg
movd
or
mov
dec
push
sub
pop
sahf
jo
pop
lcall
or
jle
lcall
xchg
cs
xchg
adcb
addl
test
jb
cmp
lock
mov
movl
fmuls
jae
cli
insl
and
xor
add
adc
dec
popa
dec
mov
and
sbb
and
pusha
push
add
pop
add
and
xor
movsb
sub
fsubrl
sahf
jae
inc
inc
sbb
cmpsb
push
pop
fcoml
dec
push
outsb
and
addl
clc
push
cmpsb
imul
lock
hlt
pop
out
es
pop
inc
adcl
pop
test
stos
loopne
or
inc
ret
shrb
rolb
inc
jge
inc
and
inc
out
test
jbe
push
add
or
test
nop
jns
jecxz
imul
mov
rcrb
add
cmp
mov
inc
push
incl
ficoml
mov
test
cld
ljmp
add
push
push
in
add
push
sbb
inc
or
or
idivb
cmp
jo
add
test
xor
adc
xor
mov
in
pop
cmp
inc
inc
or
ja
adc
cltd
dec
mov
mov
and
rcrb
or
in
fwait
mov
add
lcall
test
inc
pusha
test
cmpl
loopne
popa
sbb
das
outsb
xor
pop
mov
lret
push
inc
clc
mov
addr16
loopne
adc
adc
cmp
dec
or
popa
insb
jl
hlt
das
adc
lock
jne
pop
fisubl
cmpsl
add
and
les
xor
sub
sub
shll
mov
fdivs
das
xchg
pop
cmp
sbb
popl
insb
add
stc
stos
mov
shl
xchg
mov
adc
lcall
mov
push
sub
add
movsl
xchg
subl
insb
in
ss
pop
xor
clc
pop
dec
jp
orb
loopne
shlb
es
add
jg
das
xor
pop
or
jle
mov
pop
mov
add
and
mov
cltd
cwtl
icebp
add
lcall
inc
mov
jp
lock
lcall
inc
das
mov
scas
cltd
mov
fcomp
idiv
mov
add
xchg
add
mov
mov
inc
cltd
dec
mov
rclb
lcall
and
mov
lcall
sub
js
push
fwait
mov
add
pop
sbb
mov
or
shll
repnz
inc
sbb
sbb
roll
clc
jbe
jg
mov
sbb
jbe
imul
push
inc
and
aad
adc
push
movsl
add
sbb
loopne
call
inc
fsubl
shl
stc
add
data16
jg
mov
shrb
pop
xchg
test
pusha
addb
nop
or
mov
pop
mov
cltd
push
push
lcall
nop
adc
cmp
push
int
loope
or
and
test
adc
cmpsb
sub
push
stos
add
sti
decl
sub
adc
or
and
push
mov
add
sub
mov
lret
and
icebp
add
or
add
ljmp
pop
xor
jae
jbe
sbb
jno
xor
mov
mov
push
jbe
outsl
xchg
hlt
loopne
jecxz
cld
push
shrb
bound
mov
sub
mulb
pop
jbe
dec
dec
push
sbb
adc
loopne
loop
add
incb
and
fwait
mov
stos
mov
stos
mov
pop
movsb
add
add
es
popa
call
add
sbb
xor
and
push
sbb
dec
push
add
pusha
inc
inc
inc
or
sbb
pop
pop
sbb
rclb
daa
mov
or
or
push
orl
inc
sub
mov
cmpsb
mov
jg
addl
push
mov
aaa
sub
push
scas
xchg
je
in
push
adc
shll
jg
pusha
pop
sti
je
popa
mov
push
ljmp
jl
fdiv
pop
mov
repz
dec
xor
add
mov
ffreep
xchg
push
js
sub
push
mov
mov
popa
int3
jle
pop
int3
mov
push
push
pop
adcb
ljmp
ret
data16
mov
push
xchg
loopne
jge
or
pop
cmp
or
ficompl
dec
sub
and
pop
mov
sub
ja
rcr
inc
int3
lcall
nop
cmpsl
bound
add
orl
mov
pop
jnp
fwait
shrb
inc
imul
add
clc
mov
and
push
loop
shr
xor
stos
call
mov
cmp
xor
mov
mov
and
or
add
js
idiv
popa
adc
pop
adc
popa
cld
pop
fldt
out
push
lret
jmp
andl
and
push
mov
push
bound
push
lods
pusha
stc
mov
add
add
pop
stc
imull
bound
mov
mov
in
or
add
jno
add
sbb
jl
incb
dec
test
lcall
or
or
test
out
addb
add
xchg
pushf
dec
sub
xor
sbb
movsb
addl
sbb
jg
cmp
lods
inc
pop
inc
mov
lea
xor
sarb
or
push
push
cli
sbb
or
cltd
mov
dec
fstl
xor
cmc
xchg
lret
push
or
insb
jns
add
adc
dec
add
fcmovb
or
cmp
mov
push
push
ljmp
add
or
xor
arpl
dec
add
xchg
movl
in
mov
pushf
jg
mov
aas
inc
hlt
mov
hlt
mov
jg
or
cmp
mov
inc
loop
cwtl
jg
or
add
dec
mov
adc
jbe
bound
fs
inc
cmpsb
and
and
shlb
cmp
inc
mov
les
or
inc
dec
inc
mov
ds
adc
jne
mov
test
add
add
jno
sbb
add
add
scas
add
add
mov
outsb
lcall
mov
ficomps
and
jo
cs
cmp
mov
pop
movsl
hlt
sahf
dec
dec
jp
aad
stc
jbe
fwait
add
or
sbb
rolb
cmpl
or
add
jbe
adc
imul
mov
add
dec
lods
add
inc
adc
bound
dec
cmp
push
sti
cs
mov
add
int3
rclb
outsb
inc
loope
push
add
jb
push
adc
cwtl
andb
popf
adc
push
mov
push
scas
xor
shrb
jae
enter
stos
or
add
rcrb
jb
imul
add
aad
jbe
lock
aas
cltd
jne
ds
pop
push
add
mov
and
enter
add
jb
shl
icebp
inc
lcall
sti
inc
cltd
testl
dec
rorl
push
subb
fwait
cwtl
inc
xor
push
push
inc
iret
pusha
je
rolb
or
xor
xor
scas
rorb
movsb
inc
add
aaa
jns
faddl
cltd
orb
and
pop
dec
or
sbb
icebp
scas
mov
std
stos
adc
mov
cmp
and
sbb
fwait
inc
adc
rcll
sub
jne
ret
push
sar
jge
mov
jg
sarb
pusha
cmp
clc
into
push
cmp
es
test
ja
stc
add
add
cmp
nop
or
fmuls
cmpsb
pop
fcmovb
pop
out
shlb
add
xor
outsb
hlt
pusha
je
nop
mov
fists
xchg
push
hlt
push
cmp
xor
fstl
xor
pop
or
rol
decl
cli
and
mov
pop
cwtl
fwait
loop
dec
mov
ja
sub
jg
and
push
lods
outsb
sahf
ret
and
mov
sub
xchg
imul
pop
add
xor
inc
out
and
push
lock
mov
rcrl
inc
test
xor
inc
test
pop
repnz
push
inc
adc
dec
nop
mov
mov
pusha
xor
or
ja
ret
shrl
jle
cmpb
or
add
jle
pop
mov
push
int3
shrb
push
data16
pop
popa
lcall
xor
sbb
push
jbe
les
movsb
mov
push
mov
sub
push
std
push
mov
out
mov
inc
mov
inc
popf
and
es
or
pop
mov
sbb
sub
inc
test
mov
pushf
ror
pop
ret
lods
pusha
push
pop
mov
xor
xchg
or
pop
popa
cld
mov
push
and
add
inc
push
jp
or
loopne
xchg
add
pop
or
pop
add
add
mov
xor
add
test
jle
mov
dec
mov
cli
add
add
or
pushf
pop
xor
cmp
sub
push
xchg
cmpsb
and
pusha
add
mov
xor
mov
cwtl
xchg
mov
dec
bound
aas
xchg
testb
inc
and
push
cmpsb
jle
rcrb
adc
mov
inc
mov
je
sub
pop
dec
scas
push
add
sbb
inc
pusha
sub
sbb
xchg
ret
loopne
cs
rcll
loopne
jp
mov
movsb
add
adc
add
mov
or
push
mov
and
dec
sbbb
or
cmpl
add
fs
and
cli
and
test
sbb
in
or
rorb
pop
les
xchg
inc
ds
sbb
int3
rolb
cmp
clc
mov
sub
pop
addl
jle
adcb
sbb
jecxz
cmp
and
addps
stc
push
jno
outsb
and
xor
sbb
pop
lret
inc
adc
push
adc
insl
pop
mov
ja
movsb
and
or
push
bound
xor
pusha
push
xor
pop
jno
push
sub
arpl
jb
sbb
scas
xchg
pop
loope
and
rcr
and
sbb
sbb
incl
pop
add
outsb
pop
mov
notb
add
push
sahf
test
das
mov
mov
push
sub
dec
xor
or
js
and
xor
and
inc
mov
push
outsl
pop
pusha
ret
call
mov
adc
xchg
movsb
push
mov
ss
mov
jno
out
pop
cmc
add
stos
rep
pop
and
lock
inc
cmp
adc
adc
fisttps
ja
mov
or
sbb
cmp
add
sbb
add
sbb
xor
inc
popa
adc
inc
and
rolb
sbb
sarb
loope
mov
mov
ss
add
adc
xor
stc
jne
mov
inc
adc
adc
test
les
inc
jbe
ret
pop
aad
imul
fcom
mov
adc
push
mov
add
and
imul
inc
call
es
data16
mov
test
outsl
clc
fwait
cmp
adc
jle
add
mov
inc
mov
ja
jo
push
popa
lock
inc
dec
push
add
fwait
push
out
outsb
lods
movsb
punpcklbw
adc
ljmp
mov
jmp
add
push
cmp
jbe
adc
sub
out
or
adc
divb
dec
pop
pop
rcrb
mov
sbb
mov
fs
adc
cltd
add
add
mov
pop
and
push
loopne
out
js
xchg
andb
or
adc
pusha
push
mov
icebp
add
insb
testb
jbe
jecxz
ljmp
addl
jle
jl
and
mov
decl
lcall
pop
divb
cmp
adc
js
inc
mov
loopne
repnz
adc
cld
cltd
nop
mov
jg
pop
jl
pop
jae
sarb
bound
jo
popa
push
sahf
sbb
cld
notb
pusha
push
push
mov
xor
fwait
rcr
inc
jns
pop
ljmp
daa
dec
loope
testl
xchg
push
aad
int3
loope
mov
nop
or
sbb
mov
rcrl
adc
lods
cli
mov
inc
cmp
xor
add
outsl
add
jbe
push
incl
lcall
bnd
add
in
mov
mov
or
cli
add
adc
mov
inc
xchg
push
xor
call
push
sbb
aaa
mov
xor
push
sub
lret
pushf
xchg
cli
mov
sub
pusha
mov
loopne
mov
push
stos
adc
aaa
push
divb
add
sbb
imul
sbb
add
mov
lcall
add
pop
push
jmp
xchg
or
jno
int
add
mov
movsb
aaa
nop
or
in
mov
push
xchg
mov
dec
adc
popa
push
mov
lods
sub
sahf
push
lret
fiadds
lods
sbb
xlat
mov
dec
pop
data16
pop
dec
or
pop
data16
mov
mov
cwtl
adc
jo
xorb
rcr
in
dec
mov
sbb
sbb
cmp
push
add
inc
add
mov
aaa
sbb
sub
push
jge
and
popa
xor
lcall
mov
and
pop
pop
and
inc
sub
pop
stc
or
or
rclb
push
jle
or
jo
mov
inc
add
lcall
addr16
mov
sarb
and
adc
push
pop
into
add
adc
cwtl
sahf
fdiv
insl
imul
sub
jo
add
or
and
adc
and
inc
adc
xor
sar
fistpll
sti
push
mov
xor
inc
nop
daa
and
sahf
or
jns
jl
lret
in
insb
lcall
cli
and
ret
add
push
movsl
mov
jle
or
lcall
cltd
bound
xchg
into
push
add
enter
sbb
movsl
mov
add
outsl
add
mov
xor
repnz
mov
pop
add
jmp
add
insl
ja
pushf
push
pop
cli
mov
insb
cmpsb
lock
mov
push
outsb
ret
lret
push
mov
sbbb
jns
lock
cmpsb
sub
and
clc
pushf
bound
lcall
push
inc
xchg
push
cmpsb
lcall
stos
mov
mov
or
inc
lret
mov
jg
daa
loopne
scas
dec
mov
ret
pop
or
mov
loopne
insb
sbb
push
cs
inc
or
cmp
popa
xchg
inc
movsl
push
inc
sbb
dec
loop
outsl
or
and
mov
cltd
and
movsl
sub
mov
or
outsb
jge
jno
clc
sbbb
cmp
lret
add
lock
inc
xor
jmp
cmp
and
and
rolb
mov
xchg
xor
mov
mov
lcall
sahf
mull
dec
add
mov
add
daa
mulb
pop
mov
adc
inc
or
inc
cld
or
rcrb
call
pop
loopne
pop
dec
aas
xchg
stos
pop
add
ljmp
fcoml
rorl
mov
aad
popa
mov
sub
outsl
cmpsb
pusha
pop
mov
adc
jo
cmp
faddl
shll
add
stc
movsb
test
jg
pop
jl
sbb
push
xchg
jo
xor
cltd
jno
rcrb
push
loop
push
aas
jo
mov
push
add
xchg
adc
push
insb
pop
hlt
pop
shrb
icebp
jge
orl
jne
adc
inc
pop
and
jns
hlt
push
or
inc
and
shlb
test
outsb
adc
add
mov
ret
add
pusha
cld
inc
lods
cmpsl
push
or
adc
lods
or
lock
adc
add
push
mov
roll
cli
out
add
and
lea
loopne
or
add
cmp
push
shll
fdivr
lcall
mov
test
movb
das
popa
mov
adc
or
pop
inc
pop
push
xor
adc
jle
mov
add
inc
mov
jp
lea
jp
or
mov
add
push
clc
or
sbb
adc
sub
adc
insb
sbb
or
movsl
stos
or
or
xchg
and
leave
loop
dec
cs
arpl
xchg
push
mov
xorb
cs
push
add
aad
xchg
call
sub
add
or
sub
prefetcht2
dec
xchg
fcmovbe
add
add
and
push
dec
add
cmpsb
inc
bound
jbe
andl
sub
out
daa
add
jp
sahf
add
push
mov
addb
push
mov
push
and
lods
and
aam
or
jb
xor
ja
xchg
imulb
and
nop
shll
addb
jle
adc
mov
incb
mov
sbb
xchg
repnz
jns
sub
cld
incl
jnp
or
jne
add
repnz
test
nop
lods
jne
jg
dec
pop
dec
dec
andb
orl
mov
and
sub
lcall
pop
mov
out
cltd
ud1
mov
and
lea
lds
mov
enter
shl
repz
mov
sbb
push
roll
movl
sub
add
add
cli
scas
push
ret
jne
inc
or
add
push
xor
lods
pusha
jbe
dec
add
adc
ja
adcb
or
lcall
ljmp
inc
push
rolb
mov
inc
into
inc
adc
add
xchg
add
scas
loopne
add
test
hlt
mov
adc
and
dec
sub
fcoml
sbb
sahf
mov
das
fs
fwait
insb
mov
pop
sbb
jp
xor
ljmp
stos
sub
incl
lcall
inc
and
or
rolb
ret
pop
dec
lcall
lcall
mov
cld
add
pop
mov
mov
adcb
rorb
mov
in
out
pop
clc
daa
call
mov
mov
mov
sbb
test
inc
xchg
jle
jp
ret
mov
fstpt
sahf
and
aas
cmpb
add
mov
push
add
xchg
gs
inc
add
adcb
cli
lret
shll
sub
xchg
mov
mov
pop
adcb
mov
addb
xor
cli
test
pop
mov
jbe
sbb
push
popa
jl
andl
mov
pop
inc
mov
xchg
loopne
jle
xor
cmp
adc
fadds
push
add
or
sbb
xor
push
and
mov
pop
test
ret
sbb
call
jle
mov
sahf
and
popaw
shl
cmp
cmpb
xchg
cli
add
mov
add
dec
and
jg
shrb
incl
xor
push
rolb
add
xorb
or
pusha
push
aaa
push
mov
and
pop
mov
iret
and
pop
or
call
mov
insl
fdiv
add
or
or
insl
jge
adc
popf
adc
icebp
dec
xor
jmp
inc
arpl
pusha
aas
inc
mov
mov
loop
add
imul
mov
rclb
and
ret
jo
fwait
cmp
adc
das
and
test
data16
and
push
and
call
cs
into
mov
arpl
inc
add
cmp
ret
jbe
jl
xchg
and
addb
js
lcall
push
les
xor
mov
inc
cld
xchg
mov
loopne
jno
sub
addr16
js
inc
sbb
sbb
or
mov
cltd
gs
pop
es
mov
subb
aaa
add
outsb
loopne
mov
push
inc
jle
mov
dec
sbb
jp
mov
xchg
loope
cmovl
lret
subb
or
mov
and
inc
orb
pop
rcrb
jbe
idivb
adc
xchg
mov
roll
xor
mov
jbe
xor
mov
inc
xor
add
mov
ds
inc
lcall
adc
or
push
pusha
sbb
inc
push
inc
stos
sbb
sbb
test
lods
out
lods
xchg
pusha
adc
adc
mov
shlb
add
and
xchg
dec
add
inc
lods
jno
sub
mov
adc
leave
mov
outsb
and
pusha
aaa
fsubrs
mov
sbb
adc
fs
push
mov
int
jbe
cmpsl
mov
lock
add
test
and
and
xchg
xor
and
mov
cmp
sbbb
adc
push
lret
movsb
test
mov
decl
rcr
daa
inc
pop
inc
push
orl
and
ljmp
push
addl
dec
pop
sub
sbb
rcrb
and
sbb
sbb
xchg
xor
and
mov
jne
bound
dec
push
bound
mov
hlt
stos
dec
hlt
adc
or
fisubrl
lcall
adc
cmp
or
sub
or
test
and
addb
int3
inc
cmp
fcomip
incl
dec
and
test
add
push
xor
roll
pop
xor
mov
cmp
dec
mov
jno
mov
push
addb
js
push
jb
adc
push
add
fsts
push
or
push
sub
imul
mov
add
insb
add
out
push
or
and
or
inc
and
notb
decb
lcall
mov
push
or
lcall
call
inc
je
push
lcall
js
mov
mov
hlt
shrb
and
and
dec
add
lds
cli
or
mov
inc
xchg
push
add
and
push
addr16
jl
mov
or
push
inc
ret
outsl
fcmove
mov
and
add
cmp
dec
cli
cmpsb
ja
sub
stos
or
in
notb
cld
testb
and
xchg
adc
xchg
lcall
add
jne
pop
or
fisubl
mov
inc
fwait
fs
push
cmpsb
nop
jp,pn
decl
and
and
adc
lcall
insb
pop
pusha
adcb
les
jo
test
cmp
sub
xor
nop
mov
mov
push
add
and
mov
xor
cwtl
push
adc
imul
outsl
lcall
mov
mov
add
and
mov
mov
xor
lcall
fdivrl
pop
adc
icebp
pushf
jbe
push
test
pusha
xor
push
mov
mov
fdivr
cli
pop
sbb
mov
or
aas
add
pop
adc
aas
push
ds
mov
or
mov
push
sbb
add
mov
or
mov
and
add
enter
jle
mov
push
cmp
cmp
add
sbb
das
xchg
pop
inc
cmp
std
jg
jne
lcall
cmp
dec
rolb
sbb
cmp
sub
aaa
mov
cmp
nop
add
add
call
pop
test
mov
jbe
das
hlt
lret
add
ret
lret
rol
sbb
int
icebp
xlat
out
lret
adc
adc
dec
sub
aad
inc
mov
cmp
loop
mov
mov
clc
mov
sbb
cmp
cmpsb
sbb
or
daa
pushf
sub
and
jne
add
and
lcall
aas
push
xor
shlb
mov
sub
cmp
sbb
add
insl
adc
adc
loop
xchg
pop
aad
dec
push
dec
pop
aam
mov
jno
pop
or
std
jle
cmp
adc
cmp
and
or
jno
jg
loopne
daa
lcall
jp
movsb
pop
aad
jg
fdivrs
pop
popf
add
insl
and
add
mov
xor
jae
or
incl
cmpsb
out
cltd
jnp
mov
mov
cmp
xor
dec
xor
lcall
nop
movsl
movsl
cmp
xchg
jle
testl
pop
rcll
ljmp
leave
adc
adc
sbb
lret
repnz
hlt
mov
pusha
into
mov
jne
cmp
add
pop
pop
push
hlt
add
call
jge
push
jo
andl
les
aam
push
pusha
adc
sti
test
pop
aam
push
fistpl
dec
xchg
cmpsb
clc
mov
jmp
fs
adc
decl
and
rol
inc
inc
scas
sbb
mov
ret
add
add
lock
push
iret
scas
lret
jmp
push
jo
jo
inc
mov
lret
dec
icebp
rorb
mov
adc
incl
add
lcall
je
or
ret
rolb
xor
push
inc
jb
pop
lcall
sahf
xor
fwait
add
jp
pop
sbb
add
loop
or
cmc
sub
dec
cwtl
xchg
inc
adc
in
mov
adcl
iret
sahf
adc
adc
cmc
call
test
stc
loope
mov
cmpsw
dec
cli
and
test
push
adc
add
xorb
sbb
mov
sbb
js
ljmp
sbb
jge
es
push
addl
fwait
mov
ja
add
cmc
movsb
cltd
mov
add
xorb
sbb
add
orb
jo
cmc
decl
inc
fsubrl
push
adc
loopne
imul
lret
add
std
and
fwait
mov
lcall
add
fwait
out
or
dec
in
inc
ss
addl
inc
add
ljmp
aad
roll
push
push
sahf
mov
lea
xor
bound
sbb
add
cmpsb
or
rclb
mov
dec
push
sbb
or
mov
cmp
mov
push
imul
pop
incl
cmp
or
add
out
sahf
add
cmp
add
push
clc
mov
nop
xchg
scas
pop
pushl
add
adc
push
and
mov
adc
stc
add
xchg
jne
jle
sbb
or
mov
ret
inc
sbb
fimuls
mov
nop
clc
pop
rcrb
and
and
and
sub
pop
mov
add
sbb
jp
and
add
xchg
xor
add
or
lock
icebp
stos
lret
int
dec
sbb
mov
inc
and
adc
inc
and
dec
and
cmp
enter
or
add
adc
xchg
imul
inc
add
xchg
cmpb
mov
lret
lock
mov
or
pop
addl
push
push
add
adcb
add
fiadds
jo
sub
loop
add
fildl
insb
cmp
and
sub
fadds
pop
pusha
and
sub
out
ss
push
shrl
mov
sbb
dec
mov
mov
daa
add
push
sbb
or
lcall
adc
rolb
jo
inc
add
or
push
ss
fwait
hlt
inc
inc
cwtl
push
mov
call
addb
dec
adc
outsb
ret
adc
data16
pop
pusha
push
push
data16
jbe
jp
push
or
sbb
and
add
add
mov
or
shlb
fnstsw
push
inc
orb
mov
lea
pop
test
adc
sbb
cmp
sbb
or
inc
or
jbe
ljmp
loope
add
adc
push
leave
cld
ss
loop
stos
aad
sub
enter
or
inc
mov
jle
xor
push
addl
lcall
setl
or
or
add
sub
xor
ja
scas
mov
inc
push
mov
imul
test
mov
lea
pop
inc
lcall
icebp
or
push
and
call
inc
mov
jg
sbb
test
inc
cmp
add
mov
adc
outsl
sti
sbb
pop
dec
add
sub
mov
insb
ds
push
add
mov
and
dec
mov
mov
icebp
cmp
inc
push
or
fdivs
pusha
push
or
inc
push
dec
mov
pop
lret
cli
push
js
jo
add
pop
cwtl
jae
js
repz
pusha
jns
jp
jne
dec
aas
les
pusha
push
sub
into
push
cli
or
popa
fdiv
addb
scas
pusha
mov
push
mov
mov
fstpt
push
inc
jo
add
imul
cmpsb
jo
lods
xor
sbb
jl
outsl
push
mov
mov
das
add
add
pop
push
and
push
add
outsl
or
pop
pushaw
ss
dec
cmp
cmp
ret
mov
les
cwtl
inc
loop
jno
subl
jbe
and
test
pop
mov
and
shrb
mov
imul
aam
mov
loopne
iret
or
mov
imul
and
imul
jle
frstor
jle
subl
mov
add
outsb
lods
xor
jg
and
pop
mov
mov
sub
add
mov
clc
pushl
call
test
out
adc
or
jge
and
mov
cld
push
and
inc
add
rclb
xor
add
lock
pop
popf
sub
stos
mov
or
mov
arpl
jle
lahf
mov
adc
cmp
fldl
dec
shrl
scas
or
jg
add
in
mov
sbb
xor
in
loope
sub
inc
loopne
mul
add
mov
imul
rclb
lret
push
cmc
roll
rclb
fmull
notb
push
push
push
push
jle
add
ljmp
push
mov
loopne
repnz
add
adc
adc
and
and
lea
fistl
mov
shrb
jge
lcall
sbb
adcb
inc
hlt
jle
add
jb
fiadds
add
jbe
add
mov
add
icebp
call
dec
or
subl
adc
loope
and
or
pop
jle
stos
add
and
mov
stos
lcall
lret
fbld
cmp
aaa
mov
inc
cmp
dec
addr16
sbb
mov
int3
pop
fisubrl
pop
sub
mov
mov
sarb
hlt
jp
insl
bound
bound
rcl
scas
inc
inc
and
aaa
or
xchg
enter
subb
loopne
sarb
inc
sub
mov
int3
add
and
lret
pop
add
jo
in
sbb
or
add
mov
insb
sub
adc
lock
in
add
xchg
js
popa
pop
push
sub
es
jnp
cmp
cmp
push
mov
jge
xchg
bound
sub
or
dec
cld
pop
mov
jg
repnz
ja
cs
or
cmp
int
sub
jl
icebp
sub
movsb
bound
ljmp
mov
data16
test
movb
movsb
mov
push
sub
aam
pop
dec
iret
loope
je
ljmp
pop
das
inc
mov
pop
insb
push
inc
js
shlb
subl
sar
nop
insb
mov
outsb
push
xor
js
test
dec
jb
sub
shlb
sub
cmpsb
add
dec
addb
setae
aaa
sbb
mov
pushf
repnz
dec
call
out
roll
push
loopne
lret
icebp
add
aad
inc
add
lret
lcall
fistl
sbb
jg
and
jb
add
negl
ja
aaa
nop
push
addr16
lcall
outsl
jo
js
rorb
jno
in
xchg
or
push
shrl
jmp
and
add
add
mov
mov
in
call
aam
stos
mov
xor
shll
lock
insb
js
cmp
andb
loopne
xor
sbb
nopl
mov
sbb
and
xor
repz
adc
xchg
outsl
mov
addr16
or
int
pop
je
jo
test
or
xchg
jg
xchg
fs
lahf
cmpb
xchg
rcrl
push
mov
popl
mov
lahf
xor
xor
xor
sbb
adc
xor
lock
mov
sti
decl
fadds
adc
fs
rorb
mov
outsb
and
cltd
je
pop
sbb
sbb
push
test
in
xchg
out
rolb
inc
xchg
xor
ljmp
sub
dec
xchg
xor
mov
popa
push
push
jns
mov
inc
xchg
push
dec
xchg
push
inc
sbb
add
sub
inc
xchg
loop,pn
push
insb
cmp
xchg
ss
sbb
mov
rcll
cmpsb
pop
dec
xchg
test
add
and
add
shlb
lcall
push
inc
sbb
push
push
je
bound
push
fsubrs
movsb
lret
push
fdivrl
sub
xor
orb
js
out
push
xor
push
mov
fldl
aam
dec
fdivrs
stos
jge
rolb
or
cmp
test
outsb
dec
inc
lret
andl
inc
dec
rolb
pushf
subb
lea
pop
cld
or
push
push
test
add
add
adc
je
loope
pop
sti
sbb
push
pop
data16
stos
dec
clc
data16
outsb
dec
mov
xor
mov
push
or
inc
ss
pop
mov
notb
data16
icebp
xor
loop
or
loop
cmpl
loopne
add
add
mov
xor
insl
push
push
pop
clc
add
imul
mov
popf
xor
inc
les
add
jg
or
daa
imul
cltd
arpl
adc
andl
cltd
adc
xchg
bound
xchg
nop
jbe
outsl
imulb
sub
pop
data16
dec
or
inc
xchg
rorb
lret
push
clc
and
add
push
stos
push
pop
push
repnz
add
outsl
sub
ljmp
or
xchg
and
add
sbb
sbb
push
pusha
scas
scas
pop
pusha
sbb
jae
cmp
inc
xor
push
sbb
mov
jno
add
jg
sub
les
nop
fstpt
sbb
or
in
pusha
push
lcall
outsb
or
cli
in
das
scas
add
or
bound
shll
add
mov
incl
pop
mov
nop
add
or
push
mov
insb
add
in
push
or
aam
adc
inc
lret
jg
clc
leave
cmpsl
and
mov
lcall
mov
or
lcall
mov
dec
notb
pop
xchg
mov
xchg
jmp
cmp
pop
lret
movsb
jne
and
lret
cmc
stos
sbb
mov
add
into
push
into
lret
mov
adc
loopne
mov
pop
mov
add
sub
dec
rolb
pop
add
adc
sbb
fwait
jae
les
cwtl
cs
lock
and
pop
mov
aam
icebp
pop
into
or
fisttpll
xchg
lock
roll
test
ror
jecxz
sbb
sbb
or
ss
mov
xor
push
cmp
and
ja
adc
lea
push
pop
or
add
ljmp
sbbb
incl
cli
sarb
jle
je
insb
pop
xchg
add
int3
lds
into
aam
mov
inc
or
mov
vpermq
and
xchg
loopne
fs
xor
jp
data16
add
jbe
inc
sahf
sbb
stos
bound
jge
notb
and
mov
cmp
sar
add
fmul
lds
jmp
and
jo
out
cmpsb
add
add
push
xchg
test
mov
test
test
add
or
push
les
lret
and
lret
or
lret
lret
or
lret
or
loop
fwait
in
xchg
or
lret
add
out
nop
flds
push
ljmp
mov
lret
out
lret
andl
lret
shlb
outsl
outsl
ss
aam
lret
jo
lret
lret
fcomi
and
fcmove
sahf
pop
and
jle
and
mov
lret
push
mov
out
or
lret
fistpll
test
std
lahf
fs
lret
and
lret
cld
imul
movsb
int3
or
mov
inc
mov
cmc
adc
lret
cld
or
sbb
jae
or
mov
scas
jge
mov
adc
mov
lret
in
push
mov
jle
inc
pop
mov
cmpsb
insl
insl
add
stos
push
push
push
lods
lret
fs
iret
fwait
dec
sub
inc
xchg
lret
xchg
jns
imul
in
lret
sub
std
sahf
lret
or
lret
adc
add
xchg
push
lods
out
nop
push
xchg
xor
push
mov
test
int
push
lret
je
out
aas
jl
lret
sbb
inc
push
jle
add
gs
data16
adcl
fucomip
clc
lret
and
lret
inc
fs
subb
jnp
sub
push
outsb
ss
or
lret
add
and
bound
sti
aas
push
lret
scas
ljmp
add
aas
push
lret
dec
dec
xor
inc
mov
push
lret
stos
add
adc
sub
imulb
adc
lret
jecxz
test
pop
lret
mov
add
pop
or
aaa
mov
or
shrb
dec
lret
cs
fcoml
push
xor
int
call
jp
dec
mov
mov
cltd
add
xor
lret
add
sbb
incl
xor
sub
push
adc
mov
lret
cmp
mov
mov
and
shlb
mov
shlb
jecxz
and
push
inc
lock
idiv
and
lret
addb
pusha
cs
and
sub
ja
xchg
or
adc
and
inc
jp
or
lods
int
outsl
fdivs
add
or
inc
adc
lret
or
lret
mov
or
or
xchg
jmp
jg
adc
outsb
push
jb
xchg
and
rcrb
push
dec
enter
in
mov
mov
jmp
add
mov
mov
adc
incb
xchg
inc
pop
xchg
dec
inc
push
es
jmp
add
mov
jnp
jmp
adc
adc
sbb
mov
xor
dec
adc
jbe
out
mov
addr16
mov
or
xchg
stos
je
mov
cs
or
lret
fs
xor
sbb
sti
mov
frstor
sbb
and
aad
imul
and
cld
add
pusha
cmp
jecxz
jmp
and
inc
mov
adc
sbb
scas
mov
sbbb
lods
fwait
je
out
inc
testl
outsb
outsl
and
stos
ret
hlt
or
aaa
adc
negb
and
outsl
ss
loop
rclb
mov
mov
xchg
test
pop
sbb
outsb
test
ret
dec
sub
out
repnz
lahf
out
or
dec
int3
jle
mov
in
mov
mov
pusha
enter
icebp
add
sbb
cmp
mov
adc
pop
rolb
or
adc
and
xchg
adc
add
andl
add
mov
dec
enter
sub
sahf
popa
add
insb
das
call
into
loope
jp
xchg
add
cmp
mov
mov
scas
inc
xor
xor
push
movsb
adc
adc
add
ljmp
push
mov
mov
sti
je
adc
adc
repz
push
outsl
push
dec
shl
dec
push
or
clc
push
adc
push
jl
lcall
mov
into
scas
insl
jge
cmpsb
or
cs
xchg
stos
loope
jecxz
sub
pusha
jmp
mov
adc
sub
outsl
add
push
or
and
sub
jb
jmp
jbe
in
mov
aas
xor
es
sbb
aam
and
daa
mov
shll
xor
sbb
add
insl
mov
lahf
inc
add
sub
add
mov
mov
mov
ror
inc
inc
stos
push
adcb
inc
fimuls
sbb
pop
lret
or
out
xchg
mov
push
call
mov
testl
clc
xchg
mov
fcomps
ss
or
sub
xchg
adc
mov
add
rcr
sar
lcall
mov
insl
and
lret
cs
mov
inc
adc
add
push
add
or
pop
out
mov
lds
addl
push
sti
mov
or
mov
mov
push
sbb
mov
mov
ret
add
lcall
popf
xchg
sbb
inc
pop
xchg
xchg
or
cltd
push
setle
in
popf
or
xor
adc
ljmp
lcall
inc
adc
mov
add
inc
adc
push
insb
subb
mov
and
pop
push
fadds
or
inc
data16
sbb
cwtl
jo
mov
ret
and
jle
add
mov
movsb
jge
jmp
in
pop
icebp
or
outsb
jbe
push
dec
and
or
or
shlb
xor
fsubrl
mov
pusha
adc
pop
fs
xor
sarb
in
jge
ret
or
jmp
inc
inc
or
rorb
nop
add
sbb
movsb
mov
fists
add
sbb
adc
icebp
mov
add
fsubrs
mov
cmp
mov
sub
loop
inc
mov
js
adc
shrb
push
fists
fs
movsb
push
xor
xchg
movsb
push
mov
jg
inc
and
sub
insl
in
ficompl
loopne
adc
inc
mov
hlt
cmp
and
sub
add
push
push
sub
jo
jne
mov
loope
cmc
jno
add
sbb
add
xchg
push
or
rolb
add
or
xchg
lock
add
dec
xchg
lea
or
cmp
mov
push
inc
sub
daa
add
in
mov
push
add
cltd
mov
lock
sti
cmc
lds
or
enter
icebp
or
and
or
pop
hlt
mov
push
cltd
pusha
outsl
push
cmp
pop
and
pop
addb
dec
jno
data16
fistpll
adc
mov
add
icebp
adc
or
xorb
sbb
dec
stos
and
adcb
aas
mov
mov
xchg
add
push
into
adc
andb
sub
mov
enter
scas
add
cld
test
mov
aas
adc
xor
nop
sbb
mov
filds
pusha
add
repnz
inc
jl
lea
fildl
mov
nop
xor
mov
adc
inc
push
cmp
add
mov
mov
add
cltd
je
jo
je
fnsave
push
in
mov
shlb
and
mov
jo
inc
jp
cmp
and
push
xchg
dec
lods
push
mov
mov
or
push
test
mov
pop
into
lock
jle
pop
add
lock
mov
add
push
mov
rolb
rolb
and
fldl
incl
hlt
adc
lea
stos
and
pop
dec
addb
lock
cmp
and
mov
aam
jp
popaw
push
and
add
ljmp
lcall
shll
decl
push
pushl
sbb
mov
test
or
xchg
test
je
inc
imul
jbe
filds
add
inc
add
and
jno
xchg
sarb
or
push
push
loop
lcall
push
testb
push
mov
add
sar
incl
add
or
and
add
jp
lret
outsl
adc
xor
imul
adc
adc
and
roll
jo
inc
add
add
adc
inc
insb
pop
js
shlb
mov
and
xchg
addl
mov
rolb
lea
sub
loopne
mov
pop
cmp
clc
das
add
arpl
sbb
pushf
dec
aaa
add
dec
ljmp
push
test
pop
addb
or
mov
pop
and
dec
sbb
sub
mov
xor
test
ljmp
push
out
ret
jge
adc
xor
add
adc
mov
mov
mov
mov
and
or
xchg
mov
bound
bound
ss
and
and
rcrl
loope
mov
and
inc
adc
std
fwait
sub
das
daa
and
ret
sub
jbe
and
and
dec
inc
jae
cld
ds
dec
fnstsw
xor
into
lcall
loopne
xor
fcomp
add
js
sahf
shrb
aaa
adc
scas
loop
outsb
add
jg
fnstsw
xchg
js
loop
or
out
and
xor
out
add
jg
fs
dec
imul
add
sar
loopne
adc
lcall
add
inc
mov
sbb
inc
adc
jbe
or
jmp
outsb
jge
mov
or
adc
sub
test
ljmp
mov
imul
rol
loope
mov
add
jb
shlb
dec
mov
or
loopne
orb
mov
xor
mov
xor
in
jno
adc
hlt
aad
add
xchg
test
push
xchg
xor
add
jle
jo
repnz
mov
mov
andb
pop
fs
out
and
pop
adc
rclb
pop
test
daa
sahf
dec
adc
xor
sub
add
xchg
mov
add
xchg
orl
movb
jmp
das
or
and
data16
jl
cmp
fs
mov
inc
or
inc
mov
test
pusha
loop
insb
and
add
add
mov
lcall
push
mov
and
into
lcall
and
fwait
into
xchg
add
and
test
sbb
notl
aad
and
dec
or
pop
popl
sbb
add
das
orb
decb
std
pop
xchg
test
pop
add
stos
les
add
dec
je
or
bound
mov
add
xor
xchg
adc
sbb
mov
sti
mov
sbbb
jl
mov
iret
out
jo
push
mov
ret
test
and
adc
sbb
add
adc
arpl
cld
cmp
add
xor
dec
push
mov
lcall
lock
movsb
mov
es
insl
in
push
je
test
ss
mov
into
add
dec
xorb
adc
data16
lcall
aas
test
inc
stc
mov
mov
add
jl
xchg
loopne
mov
jb
cmp
sti
pop
mulb
jle
dec
subb
or
aas
shrb
adc
sbbl
andb
pusha
push
or
mov
and
xor
jae
and
add
add
and
jp
add
add
testb
pop
and
add
adc
mov
add
pop
cli
loopne
dec
or
mov
mov
cltd
test
and
ret
push
jo
arpl
xchg
out
bound
jo
jl
int3
shlb
enter
adc
mov
popf
nop
mov
add
orl
adc
fiadds
xchg
dec
into
sbb
popa
add
ss
and
add
pop
push
push
movsb
icebp
dec
jo
mov
add
jg
or
rolb
mov
add
add
push
pusha
lods
dec
add
and
ret
stos
inc
push
push
and
add
or
cmp
xchg
xchg
sti
add
shlb
xor
adc
rorb
mov
andl
or
cltd
popa
add
adc
lea
add
stc
add
outsb
push
and
mov
mov
dec
xor
xchg
inc
shrb
xor
inc
pushf
ljmp
lcall
sbb
dec
in
jb
mov
jns
sub
add
mov
subl
push
inc
shrb
clc
incl
imulb
inc
aas
push
aas
xor
aas
mov
add
aaa
ficompl
pop
ljmp
addr16
clc
outsb
loopne
scas
stc
mov
shl
add
inc
xchg
out
mov
and
sub
push
bound
outsl
pusha
or
pop
add
add
add
dec
adc
sbb
cld
sub
stc
div
sbb
add
sti
aas
push
cltd
add
clc
cmpsb
test
and
jbe
and
push
cwtl
cli
inc
dec
and
add
mov
ja
adc
lret
and
pop
in
inc
outsl
push
sti
or
testb
dec
lea
mov
mull
or
mov
push
loopne
rolb
lcall
mov
or
add
xchg
dec
push
test
call
or
popa
add
adc
mov
inc
pop
pusha
cli
cmp
subb
cmp
and
mov
sub
lcall
push
xor
leave
and
mov
jbe
in
mov
pop
mov
pushf
adc
sub
shlb
dec
ja
ficomps
mov
push
add
pop
or
and
hlt
mov
aam
sub
push
enter
xchg
stos
and
mov
subl
add
mov
xchg
mov
aad
add
movsb
stc
jbe
dec
cltd
cmpsb
loopne
loopne
or
cmpsl
imul
xor
inc
mov
push
hlt
aaa
inc
inc
jle
mov
das
mov
mov
and
push
push
dec
je
sbb
out
push
sti
adc
sbb
in
xchg
xor
bound
dec
xchg
jle
inc
inc
push
js
mov
icebp
mov
bound
lcall
jmp
jmp
sbb
pusha
mov
sbb
mov
bound
push
adc
lret
adc
loope
and
or
mov
adc
daa
cmp
add
movsl
add
pop
or
sub
rcrb
sub
or
mov
imul
arpl
and
loop
push
arpl
adc
add
jb
or
mov
sbb
cmp
push
decb
jmp
pop
out
or
dec
or
mov
add
adc
pushf
mov
ljmp
dec
pop
mov
fsubr
lea
loopne
cmpsb
call
push
xchg
je
push
mov
push
adcb
in
mov
je
adc
sub
nop
retw
test
lea
stc
test
inc
adc
or
bound
pop
add
insb
jb
call
icebp
decl
sub
xor
adc
pop
mov
orl
sbb
inc
popf
add
mov
or
sub
and
xchg
in
mov
pusha
sahf
std
in
add
xor
push
cwtl
loopne
pop
jbe
movsl
loop
mov
addb
or
les
sbb
stos
inc
or
ret
ss
pop
bound
shll
pop
or
mov
icebp
and
and
inc
or
rsm
rcl
cmp
add
rorl
and
mul
and
push
xchg
loop
hlt
adc
cmp
add
int
fsts
outsl
pop
shlb
jl
stc
xorb
push
sub
loop
push
shlb
mov
fs
sbb
ss
incl
sbb
jo
and
lcall
sbbb
mov
push
add
cmpsb
mov
mov
fiadds
loopne
sub
mov
push
add
nop
cmp
and
or
mov
inc
add
out
scas
daa
add
mov
cmpsb
jo
nop
cmp
sub
outsb
jb
jno
rorl
rclb
and
pop
cwtl
dec
icebp
or
jo
jns
test
and
push
mov
push
xchg
dec
push
or
mov
sub
push
inc
or
fwait
sbb
ret
and
pop
mov
cmpl
pop
mov
sub
pop
mull
sbb
dec
dec
xchg
call
jg
push
jg
dec
xor
and
push
orb
inc
inc
jno
adc
adc
repnz
and
mov
pop
shrl
icebp
adc
filds
call
sbbb
sbb
pop
inc
xchg
dec
pop
rorb
test
mov
aad
bound
loopne
les
xchg
xchg
enter
sahf
js
mov
test
mov
int3
push
orl
insl
sub
lret
rcrb
sbb
push
rorb
ficoms
jle
insl
stc
pop
lods
sar
out
mov
mov
cltd
lcall
lret
sbbl
clc
or
ret
xor
pop
fs
push
nop
call
adc
jo
scas
add
loopne
fs
ss
in
mov
add
pop
push
or
xor
scas
adc
rcrb
lea
pop
je
adc
cmpb
incl
jg
push
or
lea
push
nop
mov
xor
add
add
clc
add
clc
and
mov
lcall
scas
pop
add
xchg
push
pusha
add
popa
xchg
push
insb
rcrl
ret
cli
push
pop
cmp
bound
lcall
sub
mov
xchg
mov
mov
sub
and
and
push
popa
cwtl
repnz
cmp
add
icebp
cli
mov
add
jbe
pop
push
add
push
addb
orb
mov
rorb
and
inc
popa
rcl
addb
jo
shlb
add
jb
add
inc
push
lcall
dec
jns
mov
lods
stos
pop
and
rorl
roll
adc
andb
mov
xchg
ljmp
inc
arpl
mov
cs
fbstp
fadds
xchg
and
stc
mov
mov
dec
ljmp
sbb
or
ja
ss
daa
std
fldl
mov
jecxz
xchg
ret
push
inc
mov
pop
pop
imul
inc
sti
aad
mov
add
sbb
scas
push
add
stos
push
push
dec
cmpsb
dec
or
mov
xor
out
or
dec
out
mov
xlat
adc
or
std
testl
jg
sbb
mov
inc
int3
cmpb
xor
xor
xchg
in
adcb
sarb
js
mov
mov
das
fwait
subb
add
jg
or
jno
cmp
push
mov
cmp
sar
test
adc
lea
cmp
xor
add
sub
xchg
add
and
add
jp
xchg
dec
mov
xchg
dec
int
outsb
movsb
js
rorb
and
inc
decl
test
test
push
xor
push
ss
out
lods
mov
ds
or
mov
mov
push
insl
mov
imul
or
cli
outsb
mov
sbb
aaa
lcall
add
inc
cld
sub
repnz
nop
jle
xchg
test
pop
adc
test
xorb
add
push
xor
icebp
mov
data16
inc
cmpsl
bound
incl
pop
push
sub
add
add
adc
sub
add
push
std
outsl
lods
jo
xchg
jo
ret
mov
add
ljmp
fiaddl
and
push
lock
and
adc
bound
fwait
in
push
xor
inc
imul
xorb
loopne
repz
inc
mov
cmp
cmp
insl
jo
and
add
xor
push
and
mov
movsb
push
sarb
das
in
lods
gs
jo
jmp
addl
insl
and
lcall
loop
add
jl
sbb
add
and
or
imul
cmp
adcb
xchg
repnz
jns
and
js
fsubs
pop
cli
pusha
sub
xchg
pop
xchg
pop
or
testl
add
clc
insb
add
add
clts
pusha
mov
mov
cmc
add
push
dec
dec
mov
sub
push
xchg
xchg
pop
orb
test
insb
dec
movsb
push
stos
fildl
dec
outsl
mov
cmp
idiv
or
push
push
sti
into
incl
xchg
xor
inc
and
add
mov
jmp
stc
movsb
pop
bound
adc
push
out
add
add
movsb
dec
mov
popa
adc
std
jg
hlt
repnz
adc
out
pop
add
and
push
mov
inc
clc
test
fwait
jge
daa
leave
mov
xor
sbb
add
adc
daa
and
and
sbb
out
sub
sub
js
inc
add
sti
out
sti
push
inc
add
inc
stc
sub
ret
outsl
xchg
push
pop
sub
stc
add
mov
stos
outsl
movsb
xacquire
mov
pop
incl
mov
mov
shrl
icebp
or
xor
test
add
lcall
pop
lret
mov
loopne
xchg
ret
ja
loopne
add
jo
and
add
xor
test
push
adc
loop
testb
daa
push
sbb
jp
aam
lcall
sbb
push
call
in
inc
add
xchg
mov
push
sti
inc
jo
push
xor
lea
outsb
add
and
pop
adc
stos
cs
std
fsubrl
int3
push
cwtl
pushf
stos
mov
jp,pn
add
rcl
push
cwtl
inc
mov
jae
lcall
push
mov
xchg
insl
js
js
xchg
mov
decl
jne
push
add
xorb
sbb
aas
pop
pop
sbb
sbb
bound
pop
lcall
adcb
pop
ret
cld
sub
xor
clc
add
mov
jge
es
add
or
pop
push
sbb
jns
inc
jle
stos
jle
fwait
mov
inc
lret
addl
bound
jbe
ss
sbb
xchg
mov
ror
ficomps
jle
popa
cli
xchg
sbb
inc
lods
sbb
inc
push
adc
jmp
jge
mov
data16
aad
xor
insb
inc
scas
mov
push
test
sahf
movsl
or
jg
dec
jl
and
or
fwait
test
push
cmp
mov
mov
push
sub
and
push
or
sub
inc
mov
pop
xchg
ss
pop
sbbb
xchg
insb
mov
lcall
jbe
inc
inc
aaa
mov
roll
inc
dec
push
or
inc
js
cli
dec
sub
arpl
int3
cmpsb
adc
push
stc
mov
dec
cld
xchg
decb
xorl
or
dec
and
loope
addb
cmp
and
out
adc
inc
xor
jp
sub
dec
mov
inc
arpl
test
xorb
mov
out
in
mov
jle
incb
addr16
push
and
testb
repnz
dec
push
and
insl
ficoml
dec
or
push
ja
add
add
pop
sbb
cli
jg
cmp
shl
ret
jbe
ljmp
sub
add
roll
xchg
push
mov
ja
popa
adc
test
imul
adc
add
fcomps
cli
inc
adc
inc
stos
roll
pop
push
orb
inc
ficoms
lret
ljmp
lret
push
hlt
sbb
sbb
scas
addl
add
fidivrs
data16
sbb
fldt
add
jle
mov
cmp
cld
inc
mov
push
push
push
add
sub
cmp
decl
adc
xor
add
add
mov
cwtl
or
mov
pop
xchg
add
and
cld
mov
xchg
pop
jb
dec
loopne
add
dec
pusha
stos
mov
add
imul
sub
hlt
aaa
add
test
mov
scas
in
stos
and
adc
and
leave
xor
sbb
adc
push
add
mov
sbb
cli
call
sub
sub
icebp
and
mov
push
push
and
pusha
lret
aaa
add
or
add
sub
pop
lock
pop
and
cmp
cmp
decl
dec
cmp
mov
or
or
pop
aaa
mov
mov
bound
push
jge
add
je
lcall
ss
inc
and
cmp
dec
mov
and
inc
jecxz
push
and
das
or
adc
jl
jp
rolb
mov
adc
incl
push
or
adc
pop
dec
add
imul
jnp
mov
sbb
loop
ljmp
push
insl
test
cmp
mov
push
cltd
cwtl
cmpsl
loope
lcall
push
xor
xchg
pushl
sahf
popf
in
rorb
mov
add
jns
ds
jnp
loopne
fwait
dec
enter
and
and
cmp
jno
add
xchg
jno
mov
shlb
jg
stos
and
sti
incl
pop
push
xchg
adcb
lea
mov
mov
push
or
fs
pusha
xorl
shr
mov
adc
sub
and
mov
daa
lea
fs
ljmp
jbe
lcall
xchg
and
cli
ljmp
loop
ljmp
and
inc
mov
mov
push
or
mov
lea
clc
ja
pop
push
loopne
popa
shll
or
mov
jge
fists
mov
cs
add
jle
pop
push
inc
fistl
fbstp
pop
jne
jle
jae
cmp
push
push
mov
popa
xor
add
stos
inc
adc
lods
sbb
inc
std
shll
sbb
or
adc
push
mov
xor
push
in
xchg
xor
scas
xchg
adc
adc
mov
fidivl
dec
and
and
sbb
xor
imul
das
out
xor
mov
out
nop
call
pop
xor
pop
arpl
out
clc
pop
adc
adc
pop
in
popa
add
icebp
sahf
push
loopne
xlat
sbbb
push
mov
fimull
fsubs
push
add
cli
push
push
mulb
xor
mov
xor
push
lock
push
scas
push
clc
outsb
aad
push
or
add
cmp
or
mov
js
iret
cmpsb
xchg
pop
and
xchg
xor
scas
sub
push
out
cmpsb
insl
pop
xchg
aam
push
inc
into
sbb
add
mov
das
lcall
out
mov
fisubl
adc
xor
push
nop
or
push
sub
jg
fistl
sub
jle
jp
std
or
xor
fimuls
push
pop
add
sbb
inc
sarb
outsb
imul
insl
mov
add
clc
mov
mov
jb
sahf
mov
lock
sub
sbb
or
in
pop
insl
shrb
stos
mov
mov
add
cmp
xorl
xchg
sbb
test
sbb
imul
repnz
js
xchg
icebp
add
add
cmp
orl
mov
lods
mov
push
jns
inc
jo
bound
jle
mov
or
mov
mov
pushl
jo
popa
lahf
roll
xchg
cmp
push
push
icebp
add
adc
call
jge
xor
inc
push
jg
cld
std
out
fstp
add
jbe
push
cmc
add
push
or
mov
in
push
push
lock
add
push
push
addl
loopne
jp
xor
je
inc
nop
pop
push
outsb
push
push
shll
add
call
fnstsw
sbb
cmpsb
jns
shrb
xchg
fsubrs
pop
pop
insl
into
add
insl
lds
outsl
stos
jno
adc
subl
je
xor
sub
loop
icebp
mov
repnz
adc
mov
stos
nop
xor
ds
cbtw
xchg
pusha
jo,pn
and
push
jo
add
in
pop
dec
rcl
dec
inc
mov
jo
adc
jne
dec
mov
push
out
sub
adcb
lock
jne
int
rcll
dec
bound
imul
ja
push
fisubs
xor
ljmp
xor
adc
test
test
out
xchg
data16
adc
aaa
mov
xor
sbb
jae
adc
cmp
xorb
imul
cmp
sbb
sbb
xor
test
mov
or
addr16
jno
loop
incb
or
stos
xchg
mov
nop
movsb
pop
imul
sbb
stos
sti
cmp
or
jo
testl
icebp
fiaddl
out
or
push
stos
loop
push
sub
inc
lock
cmpl
add
lcall
maxps
inc
mov
cld
mov
xchg
jp
jo
pop
inc
ja
cmp
fisubrs
loope
aad
aad
popa
aam
icebp
adc
imul
inc
add
lock
or
pop
out
push
add
push
addr16
addr16
cmpsl
popa
jnp
stos
sahf
stos
scas
inc
mov
sbb
add
outsb
ret
mov
xorb
xchg
shr
push
push
push
xchg
mov
jae
adc
adc
fwait
jnp
mov
ds
xor
dec
push
mov
push
in
jns
call
insl
stos
in
loopne
dec
add
add
add
ds
mov
add
lods
sbb
outsl
rcrb
sbb
push
adc
jp
sahf
push
push
pop
push
mov
out
lods
stos
xchg
addl
lcall
inc
scas
inc
or
lcall
mov
stos
push
out
lret
mov
fidivl
test
out
add
stos
jmp
out
jecxz
cmpsb
cmp
sbb
repz
imul
mov
int3
mov
imul
shrb
shll
in
int
xor
cld
clc
hlt
lock
xor
shll
jb
sbb
xor
rcll
sub
and
int
xor
cmp
xor
dec
dec
xor
shll
inc
pop
pop
push
shll
fs
stc
shll
mov
sahf
cmpsb
test
xchg
nop
jns
cmpsb
jns
test
mov
cmpsb
mov
cwtl
xchg
test
les
sahf
push
lcall
shr
call
imul
out
lcall
lcall
sub
and
lcall
xor
imul
imul
out
pusha
jl
je
imul
mov
jb
test
dec
sarl
movsb
mov
mov
les
add
mov
sbb
mov
xchg
andb
mov
stos
mov
add
mov
shlb
push
sbb
dec
imul
stos
adc
sub
adc
mov
je
cld
pusha
add
hlt
xchg
add
xchg
jmp
sbb
xor
pop
sbb
data16
out
lcall
jns
int
jne
jno
loopne
dec
or
inc
lcall
sbb
push
insb
shll
add
js
shrl
or
add
je
dec
mov
pushf
cwtl
xchg
add
lods
call
test
mov
xchg
jbe
push
cmc
push
icebp
roll
cmpsl
movsb
sahf
cmpsb
imul
cmpsb
imul
shll
or
jo
dec
jb
add
adc
push
jne
jo
xorb
dec
inc
jo
jo
cmpsl
push
sbb
jo
cmpsl
je
cmpsl
loopne
mov
add
mov
lcall
mov
rcll
mov
stos
mov
cmp
sbb
loopne
mov
cmp
stos
inc
and
loopne
xor
and
xor
pusha
adc
add
aas
inc
dec
cmp
js
mov
addr16
icebp
mov
insl
sub
ja
jae
add
mov
inc
stos
lahf
push
fwait
cmpsb
imul
fisubl
sahf
mov
iret
ret
mov
fisttps
cmc
ss
repnz
sub
mov
aaa
push
mov
push
and
or
add
inc
xor
sbb
rcrb
jge
cld
jl
cmpsb
xor
scas
stos
add
pop
sub
sub
mov
jo
mov
mov
push
mov
lret
add
add
sti
aaa
xchg
movsb
mov
js
jl
jmp
ss
addb
jl
xchg
ja
xchg
inc
inc
loopne
mov
mov
les
lock
xchg
dec
xchg
pop
in
test
fs
je
or
push
mov
mov
pusha
and
ja
loopne
or
add
in
incl
or
add
ds
adc
leave
pop
sub
nop
pop
push
icebp
jp
and
adc
mov
lcall
jb
mov
les
lcall
add
data16
push
mov
adc
popa
add
mov
inc
add
mov
xchg
pop
push
mov
inc
push
jg
or
or
xchg
dec
call
mov
je
push
push
jge
and
aad
and
cmp
roll
or
xchg
mov
jg
push
push
or
icebp
pop
or
clc
adcb
mov
lcall
xchg
or
outsl
or
add
add
push
lock
orb
pop
mov
add
push
push
fcmovu
add
bound
jg
add
dec
ss
add
bound
adc
repnz
int
jle
push
pop
adc
add
push
and
outsl
pop
jl
adc
or
add
lret
xchg
hlt
sbb
lcall
in
bound
test
mov
addb
mov
sub
sti
ret
push
je
rolb
daa
das
add
fiadds
sbb
mov
push
pop
fs
in
jg
mov
add
add
add
mov
or
les
jmp
add
adc
fldl
cld
adc
test
or
adc
jae
add
repz
adc
jmp
movsb
add
sub
xchg
adcl
fs
pop
mov
add
sub
adc
jno
mov
add
fldl
rcrb
jl
fiaddl
ljmp
xchg
xchg
dec
sbb
xchg
jae
or
call
add
je
mov
pop
sbb
xchg
test
notb
cwtl
push
add
sub
or
int
add
jno
add
mov
sti
pop
icebp
jle
jbe
cld
rclb
push
jae
add
repz
lds
add
hlt
add
add
jl
xchg
pop
jnp
push
add
jle
pop
inc
adc
call
leave
push
cmp
jo
shlb
inc
push
enter
lcall
add
pop
insb
aam
push
sub
and
and
or
mov
mov
imul
sbb
push
or
bound
sbb
mov
fistpl
lods
icebp
es
rolb
xor
lret
aad
icebp
out
fimuls
jbe
add
jno
push
jne
adc
adc
pop
pop
flds
lret
mov
add
push
and
and
aas
and
jle
mov
push
mov
test
fs
push
dec
sub
insl
pop
jnp
and
and
pop
push
jle
cmpsb
call
xor
popa
es
xor
push
pop
mov
xchg
add
mov
inc
stc
or
inc
mov
sub
sbb
and
or
lea
adcb
push
push
enter
jb
cmpb
and
rorl
or
sub
pop
and
outsl
mov
addr16
and
in
pop
jl
outsl
adc
dec
dec
fs
push
sub
outsb
adc
mov
sbb
lcall
outsl
sbb
add
push
mov
scas
int3
jne
gs
and
mov
enter
mov
sbb
enter
inc
pop
sbb
add
push
rcll
and
push
bound
js
cli
lods
lcall
lock
add
push
push
push
add
mov
xor
push
inc
sbb
jno
cmc
outsl
pop
pop
inc
xor
pop
and
push
out
mov
int3
add
push
push
cli
lcall
adc
push
imul
fwait
sbb
mov
mov
les
push
add
adc
les
mov
fldt
dec
mov
arpl
insb
dec
lcall
rcr
xor
add
push
add
adc
sti
jge
fmull
icebp
add
xor
inc
or
insb
xchg
sar
das
sub
add
adcl
inc
sub
mov
adc
pushf
mov
or
adc
je
fwait
lcall
shlb
jle
dec
fistl
and
dec
push
pusha
dec
aad
mov
faddl
js
fstl
je
jge
mov
movsl
test
pop
aaa
decb
mov
or
leave
push
mov
inc
sbb
loop
dec
add
ljmp
dec
dec
xlat
push
inc
dec
aam
push
inc
adcb
fadds
pop
xor
push
push
dec
fiadds
push
ficompl
cli
push
dec
filds
insb
dec
push
sbbb
sbb
jecxz
outsl
sbb
nop
mov
xchg
push
cld
decl
add
inc
aad
es
mov
jp
or
mov
push
loopne
xchg
lret
inc
add
inc
xor
int
test
mov
jle
xorb
inc
mov
adc
fsubl
into
arpl
orb
sbb
adc
push
dec
add
sbb
sti
mov
cwtl
add
icebp
xchg
jge
adc
int3
fisttpl
mov
jp
add
push
jl
inc
sub
jmp
scas
andl
add
add
fidivs
inc
add
arpl
mov
es
dec
les
add
mov
and
mov
icebp
scas
std
jl
andl
mov
pop
pusha
loop
insb
xchg
test
jl
popa
ja
in
push
jp
add
cltd
xor
repnz
or
or
addr16
jp
push
or
xor
pop
sbb
lcall
inc
jo
js
call
dec
fisttps
mov
ret
punpcklbw
mov
pop
incl
add
addr16
or
jg
add
xchg
sbbl
add
js
or
ja
sbb
mov
cmpb
mov
mov
test
add
mov
aas
or
testb
shll
or
pop
inc
and
aad
fists
fisttps
inc
cmp
or
mov
aas
fs
leave
sbb
xchg
ret
rclb
inc
sub
sbb
adcl
aas
or
cwtl
sub
sbb
ret
orb
fwait
subl
jo
pop
inc
add
mov
loopne
pushf
sahf
mov
add
mov
push
xor
and
mov
sbb
pusha
stc
dec
test
cli
call
adc
push
in
pop
fstpt
movsl
or
add
mov
and
pop
jbe
adc
lods
dec
insb
dec
movsl
or
mov
cli
insl
fidivl
xor
loop
inc
in
in
fwait
mov
insb
xchg
adc
push
push
call
loopne
es
jbe
push
xchg
or
push
pusha
adc
pusha
inc
call
sahf
pop
jg
popa
jle
mov
adc
test
push
sti
sbb
call
ss
pop
cs
sti
cs
pusha
loope
or
sbb
aas
jecxz
mov
inc
cs
mov
filds
and
stos
or
pusha
idiv
add
add
iret
add
add
push
jo
data16
jge
outsl
mov
xchg
mov
inc
mov
dec
dec
cmp
sbbb
shl
xor
sub
mov
mov
cli
jns
xor
pop
sub
and
mov
orb
add
adc
sbb
movsl
mov
pop
out
mov
test
mov
cld
xor
inc
add
xchg
loopne
sub
sub
and
dec
push
aam
sub
call
jmp
push
inc
sahf
mov
push
jno
out
sub
pop
jo
fidivrs
ds
xchg
mov
stos
je
and
mov
pusha
popa
repz
add
stos
fs
sbbb
es
mov
push
pop
pusha
popa
lock
sbb
movsl
mov
sbb
fiaddl
or
jo
lret
cmp
dec
xor
in
das
pop
icebp
mov
sbb
pop
pop
stos
sbb
add
mov
test
loope
rclb
fsub
mov
adc
addb
js
imul
cmpsl
xorb
sub
pop
sub
sub
adc
or
mov
jnp
jnp
cmp
xor
bound
sti
and
mov
aaa
ret
pop
pushf
ljmp
sbb
das
or
jo
xchg
inc
mov
sahf
jp
sbb
psubb
xchg
xor
add
movsb
lock
lret
mov
jp
jecxz
jo
dec
scas
aaa
enter
mov
in
or
or
pop
movsl
data16
outsl
arpl
ror
sub
sbb
pusha
loope
push
out
loope
dec
adc
sub
push
roll
out
popa
pop
sub
in
add
mov
mov
rol
out
or
out
pop
mov
fucomp
dec
enter
nop
out
cmpsb
lock
sub
cs
loope
pop
mov
push
push
pushf
inc
mov
clc
and
addr16
pop
dec
push
pop
mov
cs
in
push
lock
out
cmp
and
psraw
addb
mov
stos
lock
mov
mov
or
sub
cmp
out
jo
ret
out
imul
out
sub
push
out
and
jg
jbe
ret
cwtl
xor
push
add
out
pusha
pop
repnz
popa
insb
repnz
push
mov
cs
clc
lea
pop
repnz
ja
icebp
push
ficoml
dec
icebp
pusha
addb
pop
mov
jecxz
sbb
add
xchg
push
xchg
shl
sbb
mov
mov
adc
push
xor
add
sbb
sbb
adc
std
xchg
call
jb
pop
jg
inc
mov
or
mov
jbe
inc
ret
inc
and
cld
ja
inc
pop
mov
addb
sbb
jbe,pn
in
push
or
add
jb
sbb
outsl
jae
or
dec
mov
dec
cmpsb
lahf
nop
lock
adc
and
add
pop
mov
pop
add
add
jl
mov
filds
jno
sbb
jb
push
lock
lods
sbb
mov
es
or
in
mov
es
pop
add
loope
cmp
xor
loope
mov
add
mov
cmp
cmp
xor
push
test
dec
push
es
call
and
add
mov
push
pop
mov
mov
or
jno
adc
add
pop
shlb
and
rorl
push
in
pop
cmp
mov
and
adc
sbb
xor
and
adc
push
add
or
fwait
sbb
xor
or
pop
cmp
push
ljmp
les
add
and
in
and
xor
xor
xor
add
orb
cmp
sbb
or
pop
xor
and
or
add
add
or
cs
scas
and
pop
pushf
add
xorb
rorb
sbb
add
cmc
setge
adc
in
inc
sub
pusha
cltd
jns
adc
sub
cvttps2pi
pop
mov
cmp
lcall
mov
dec
xchg
loope
add
and
xlat
push
add
adc
lock
out
add
pop
add
cmp
or
mov
cmpsb
adc
xor
add
inc
mov
xor
xor
dec
adc
insb
add
xor
mov
push
push
dec
fildl
and
jo
sbb
adc
mov
negb
push
pop
adc
and
add
inc
decl
inc
jno
outsb
ljmp
int3
add
sbb
add
xor
sbb
add
or
rcr
inc
imul
sbb
cmp
mov
call
xorb
orl
cs
addb
cmpsb
andb
addl
lock
mov
cmp
jle
push
andl
mov
or
jecxz
scas
adc
or
or
andl
add
ds
loopne
jno
call
pop
pop
or
daa
je
add
mov
test
cmpb
test
jbe
outsb
add
sbb
sub
inc
sub
test
mov
std
fwait
ret
jle
pop
pop
xchg
mov
sbb
notb
and
or
rolb
sbb
sbb
mov
or
sbb
or
inc
cmp
or
push
xorl
shlb
loopne
sbb
adc
movsb
inc
mov
fwait
mov
pop
lret
rcll
push
shll
sbb
xor
inc
dec
aam
add
loopne
cli
out
popf
pop
or
mov
aas
adc
xor
and
movsb
jo
jp
pop
ljmp
pop
and
cmp
cmp
add
add
xor
sbb
push
inc
lods
call
adc
pop
aas
aam
test
cmp
xor
xchg
loop
lret
push
pop
or
shll
aas
sarb
int3
and
jmp
mov
add
sbb
shr
test
cs
sbb
pop
push
add
mov
loope
sbb
mov
mov
inc
push
pop
testb
arpl
xorb
or
xor
push
nop
loop
jno
sbb
test
add
xchg
cs
push
stos
into
ljmp
inc
cmc
pop
cltd
loope
sub
inc
ja
hlt
and
mov
ja
es
movsl
push
sbb
loope
cmp
data16
fs
or
cli
and
and
pop
popa
in
fwait
mov
cmpsb
mov
add
fdivp
outsl
pop
inc
ret
outsb
and
dec
ret
dec
mov
dec
in
mov
xchg
mov
add
sub
paddb
inc
mov
test
std
bound
push
cmp
push
mov
and
sbb
add
dec
and
jne
xchg
mov
inc
dec
or
or
jb
adc
es
jg
mov
or
inc
pop
sbb
les
or
pop
data16
push
outsl
aad
shrb
aaa
addl
add
popf
and
and
or
push
in
shrb
ret
loopne
shlb
cli
or
and
push
cmp
movsl
clc
jg
push
sbb
andb
fidivs
inc
mov
or
xchg
and
test
push
or
adc
add
dec
daa
lcall
pop
je
adc
push
jecxz
stos
inc
xor
adc
clc
add
cmpsl
aaa
arpl
cli
and
fwait
add
fwait
or
mov
push
les
xor
inc
lods
mov
inc
add
sub
mov
mov
out
inc
or
cmp
and
cli
inc
std
stos
sbb
push
mov
ljmp
jb
scas
into
add
adc
xor
loop
ret
cmp
loop
jbe
popa
jae
add
pop
adc
add
mov
mov
or
xchg
add
loopne
aaa
add
lret
call
fdivrl
cld
sub
or
sbb
add
bound
incl
xchg
and
daa
adc
jo
jg
adc
push
mov
je
push
ljmp
inc
push
mov
ret
mov
movsb
sbb
jp
fnstcw
repnz
inc
jmp
inc
or
pop
xor
inc
pop
dec
dec
mov
mov
clc
pop
loope
call
out
pushl
cmp
ret
add
add
out
rolb
pop
adc
add
fistl
xchg
jle
adc
out
roll
jae
or
adc
or
jmp
adc
cmp
xor
sbb
adc
add
popa
sbb
dec
xor
add
inc
pop
int3
push
sbb
es
add
cmp
push
or
or
std
fcomip
add
jbe
lock
push
rclb
cmp
nop
bound
or
mov
mov
push
loopne
cmp
xorb
dec
jb
arpl
push
or
xorb
add
icebp
push
or
xor
jae
adc
andb
add
xchg
add
daa
add
push
or
ljmp
adc
push
es
dec
add
test
rolb
mov
shll
push
sbb
cmp
add
adc
push
fcoml
in
jg
or
daa
jecxz
mov
lock
lret
popa
sbb
setnp
in
sysenter
jb
fimuls
pusha
insb
lcall
outsl
mov
xchg
add
add
gs
push
rolb
jo
xor
or
mov
jae
sbb
push
pop
roll
or
xor
rorl
cmp
pop
sbb
inc
ss
xlat
das
cli
je
adc
add
loopne
add
sbb
rolb
sbb
mov
jmp
dec
arpl
je
xchg
add
xor
aad
std
cmp
bound
jecxz
sahf
jo
and
adc
mov
outsl
mov
and
adc
and
add
daa
mov
popa
or
add
jmp
aas
fisttpl
mov
and
push
xchg
js
cs
call
lods
mov
pop
jo
test
or
adc
pop
repnz
sbb
test
cld
in
or
sbb
mov
or
add
sbb
add
ss
and
or
jo
xor
inc
inc
sub
dec
aaa
xchg
scas
mov
cmp
add
xor
and
xchg
fcomps
sbb
pusha
sbb
outsb
jo
mov
test
cli
adc
adc
nop
cmp
jmp
mov
cs
loope
pop
in
repnz
sbb
int
adc
push
or
mov
push
or
sbb
add
or
aad
add
jg
pop
add
fdivs
push
jg
frstor
mov
add
into
or
xor
push
pushl
cld
pop
outsb
mov
add
pop
jno
mov
push
popf
jae
mov
and
test
idivl
shlb
and
dec
call
adc
ret
int3
jnp
sbb
test
add
jns
lea
clc
xchg
add
add
out
std
fbstp
cs
mov
repnz
adc
sbb
xor
add
nop
dec
jo
fsubrs
shrb
fisubl
fs
push
cld
inc
rolb
popa
add
xchg
or
adc
outsl
add
or
repz
lock
add
je
jae
filds
popa
shl
in
adc
test
push
inc
ficompl
mov
sbb
lcall
cmp
sbb
cmp
js
add
clc
pop
cmpsb
lock
xor
mov
fiaddl
rcll
pop
inc
add
adc
jg
push
jb
sbb
pusha
roll
add
or
dec
adc
sbb
mov
push
xor
fisubs
fcoms
data16
pop
jne
jb
push
add
pop
or
cmc
xor
pop
cmp
add
jae
lods
add
adc
bound
and
xor
jb
add
or
sbbl
dec
clc
inc
or
movsb
int3
and
rolb
and
cmp
or
int3
test
and
pop
or
add
cli
movsb
nop
or
ljmp
sbb
jne
add
repnz
and
mov
xor
and
cltd
and
add
insb
or
daa
add
sub
scas
inc
sbb
add
sbb
adc
push
inc
test
pop
mov
or
xchg
scas
dec
mov
add
or
es
and
xor
xor
shll
jb
and
jb
dec
cld
sub
mov
and
add
pop
or
add
cmp
xor
adc
stos
stos
add
mov
pop
and
adc
lea
push
sbb
and
adc
push
jae
xor
or
xor
sbb
enter
xor
lock
sbb
in
add
ljmp
xchg
or
or
push
test
cmp
repnz
push
pusha
insl
add
pop
jb
data16
sbb
push
je
lods
dec
sbbb
aam
lret
inc
clc
sbb
adcb
push
xor
shlb
cmp
dec
inc
orb
or
or
inc
test
aaa
or
mov
rorb
cmpsb
mov
fcoml
jbe
sbb
adc
pop
and
daa
mov
subb
cmpb
adc
aaa
test
ds
ret
mov
lods
jl
xor
jne
add
fadds
movb
adc
fisubrl
arpl
test
or
sbb
ficompl
fists
shlb
enter
add
cld
rclb
test
and
stos
inc
or
fcomp
rcrb
ds
xor
jb
inc
and
subb
inc
mov
addl
rcrb
rcrb
sub
mov
int3
insb
dec
sti
sbb
or
jo
ret
or
mov
inc
add
movb
xor
hlt
les
mov
pop
cmp
xor
popa
push
ds
fcoml
sbb
inc
xchg
lds
cmpsb
ret
sbb
jo
rolb
sub
lret
adc
stos
lock
inc
add
and
outsl
je
movsb
rorb
xor
stos
add
sbb
es
inc
push
clc
fildl
and
add
add
stc
cmp
sub
adc
jg
xor
test
or
adc
cmp
mov
xchg
scas
jle
inc
inc
or
rclb
xchg
popa
bound
mov
add
or
adc
push
inc
movsb
xchg
xor
and
or
xchg
cmp
and
shlb
xor
push
or
pop
enter
pop
aad
pop
ljmp
push
and
fistpll
mov
sbb
add
pushf
es
data16
jns
sub
es
mov
add
mov
add
das
js
xchg
adc
data16
jno
fbstp
cmp
or
and
mov
or
mov
loop
sbb
mov
shll
jae
jo
sub
mov
inc
sti
scas
lcall
loop
aaa
inc
adc
or
sbb
add
push
mov
scas
cli
loop
dec
add
jl
outsl
sbb
mov
aaa
test
push
mov
in
pop
add
xor
loop
test
add
cmp
push
adc
es
adcb
push
outsb
sub
clc
jg
lea
add
out
add
sbb
sbb
push
adc
push
int3
dec
test
das
nop
je
rcrb
adc
ds
jmp
and
orl
dec
clc
mov
cs
pop
and
into
loope
inc
paddsw
fwait
into
fisubs
mov
mov
mov
loopne
bound
xor
lcall
cmp
sub
and
outsl
in
ljmp
xchg
inc
and
dec
or
and
cld
add
and
call
mov
or
cmp
cmpsb
add
cmp
cmpsl
cli
sbb
sbb
jb
or
addr16
pusha
sub
stos
in
and
loopne
in
out
es
out
in
incl
and
jne
ficompl
mov
push
sbb
aaa
bound
jo
aaa
xor
test
mov
fs
mov
lea
js
add
inc
les
mov
mov
and
test
and
sub
inc
call
jbe
pop
push
adc
jg
subb
js
pop
and
bound
and
pop
and
mov
jo
mov
mov
loopne
add
sbb
pop
mov
stos
jbe
add
jg
jbe
jbe
sub
jecxz
sbb
and
adc
mov
filds
sti
jno
pop
es
je
pop
adc
adc
and
shlb
stos
mov
dec
mov
rorb
dec
xor
cld
mov
pop
rcrb
inc
sbb
nop
jbe
and
lock
or
nop
adc
add
adc
sub
repz
incb
cmpps
sbb
call
cmp
xor
ret
imul
and
imul
push
push
loop
mov
mov
add
add
mov
push
sbb
jnp
ljmp
xchg
push
add
jp
push
xor
jle
js
sti
jbe
mov
or
push
xchg
insb
in
and
into
int3
imul
adc
call
out
rcrl
mov
cmp
push
subb
add
fbstp
mov
push
xchg
push
cltd
icebp
xor
in
movsl
out
jl
lcall
das
sar
inc
xor
repz
repz
xor
jl
aam
lea
fcomip
cmp
mov
xor
pop
lods
mov
xor
testl
incl
scas
cld
lods
mov
jmp
or
and
rcll
xchg
mov
scas
cli
pop
outsb
push
ss
bound
mov
push
xchg
mov
mov
cltd
aad
cmpsb
addl
out
mov
jecxz
aam
imul
jle
repz
push
pop
add
add
aas
sub
xchg
aad
dec
add
lret
and
push
das
dec
mov
dec
stc
jmp
sub
dec
mov
xlat
incb
mov
stc
stos
push
das
sti
jg
mov
adcl
scas
repnz
sbb
fisttps
jo
adc
adc
mov
dec
inc
decl
movsl
roll
add
dec
sub
dec
lods
cmp
icebp
jg
xchg
mov
sub
add
push
divb
mov
mov
out
les
fnsave
inc
add
xchg
inc
dec
into
lcall
dec
xor
cli
sbb
mov
aam
xchg
dec
pop
sub
je
out
xchg
mov
dec
pop
ss
dec
ljmp
xchg
lock
adc
insb
ret
mov
push
mov
into
jmp
dec
inc
push
stc
or
daa
sub
push
pusha
leave
sub
cmpb
loopne
addr16
ss
dec
xlat
fwait
push
push
cwtl
or
ficompl
out
rcll
mov
adc
je
push
outsl
clc
aaa
mov
jecxz
dec
mov
or
push
xor
fimuls
sti
dec
mov
mov
in
fimuls
sub
adc
jp
ret
lcall
xor
xchg
jne
jmp
inc
test
outsb
mov
inc
pushf
clc
sub
or
sub
cmc
int3
mov
movl
shlb
in
sub
lds
push
cmp
cmp
and
mov
sub
mov
mov
lcall
in
xchg
cli
sub
dec
int
icebp
push
inc
cmp
adc
std
fnsave
packsswb
in
mov
scas
aam
js
sub
das
rolb
lock
arpl
sub
fmuls
sti
add
cld
add
xchg
sti
add
push
mov
psubq
dec
cmc
aaa
int
rol
jle
push
movsl
dec
sbb
sti
out
insb
fisttpl
or
mov
push
pop
fs
call
in
into
jo
cmp
cmp
sbb
outsl
stos
out
sti
add
adcb
jb
in
pop
dec
sub
ds
lods
into
xor
imul
lods
cmpsl
adc
cld
outsl
lods
frstor
sub
icebp
push
mov
testl
ljmp
adc
add
xor
test
or
cmp
or
fistl
or
xor
push
inc
jl
or
jae
xor
ss
or
ljmp
fstpt
mov
pop
xorb
cmp
or
dec
jbe
imul
adc
insl
lcall
addb
add
push
sub
imul
push
bound
mov
cmp
xor
sub
mov
jmp
add
ret
jmp
sub
out
xor
add
negb
repnz
mov
lcall
jbe
mov
insl
push
bound
inc
pop
in
incl
add
dec
push
dec
pop
dec
inc
adc
ss
ds
es
push
dec
push
int
cld
int
push
push
dec
testb
out
dec
dec
fimuls
into
divb
dec
mov
dec
xchg
dec
jle
push
push
dec
inc
dec
dec
adc
out
ss
ds
es
cs
dec
push
dec
push
dec
push
testb
dec
out
in
es
push
into
adc
dec
mov
xchg
dec
sahf
dec
xchg
dec
jle
dec
outsb
add
mov
mov
mov
ds
es
mov
int
mov
push
dec
dec
pop
decb
mov
int
cld
dec
fimuls
dec
dec
mov
mov
rcrb
dec
xchg
add
cs
fidivrs
jbe
inc
mov
inc
stc
fwait
adc
adc
inc
ds
es
cs
inc
push
inc
push
inc
push
testb
out
out
inc
fiadds
inc
fwait
mov
inc
mov
xchg
inc
sahf
inc
xchg
jbe
out
idivb
inc
mov
inc
pop
inc
inc
inc
inc
ss
ds
es
xor
inc
push
inc
push
push
mov
inc
incb
int
inc
inc
inc
fiadds
inc
inc
mov
mov
test
xchg
inc
sahf
inc
xchg
jbe
jle
inc
inc
push
fwait
mov
inc
mov
inc
ds
es
inc
push
stc
fwait
mov
push
inc
inc
testb
out
inc
inc
fiadds
inc
nop
stc
fwait
mov
inc
cmpsb
inc
inc
xchg
inc
sahf
inc
xchg
sbb
mov
int
cld
push
inc
pop
inc
inc
inc
inc
ss
ds
es
inc
mov
int3
insb
lods
add
add
inc
mov
fwait
mov
cmpsb
inc
inc
xchg
inc
sahf
inc
xchg
jbe
jle
inc
or
fwait
cmpb
mov
inc
push
inc
mov
fisttpl
dec
incb
inc
mov
inc
fiadds
inc
inc
addr16
mov
add
fwait
lds
repz
jg
movl
inc
inc
inc
inc
ss
ds
es
test
js
push
inc
push
pushf
add
adc
ss
add
adc
inc
mov
inc
sahf
inc
xchg
jbe
cwtl
mov
inc
inc
push
inc
pop
inc
inc
inc
int
jo
fildl
inc
mov
pusha
xor
outsb
dec
and
sub
stos
mov
push
pusha
cmp
loopne
mov
loopne
imul
loopne
pop
add
jle
push
add
dec
mov
decl
dec
in
add
fsts
add
cli
adc
dec
dec
xchg
cmp
dec
push
call
pop
inc
dec
adc
mov
dec
je
addr16
fdivr
fildl
mov
inc
popa
inc
adc
mov
test
xor
jno
insl
inc
inc
xor
inc
movups
inc
in
outsb
ss
mov
add
fsts
or
cld
mov
and
inc
or
inc
cs
inc
fwait
ret
ljmp
inc
cmp
daa
ja
test
jecxz
and
fbld
and
mov
add
inc
aam
flds
inc
and
inc
mov
mov
addl
repnz
dec
loope
inc
add
add
aaa
jg
fwait
and
inc
mov
adc
inc
fwait
pushf
inc
test
popl
add
jmp
dec
loope
push
in
add
lds
adc
dec
dec
dec
xor
dec
sub
dec
sbb
hlt
dec
out
xchg
dec
mov
fwait
testl
stc
add
dec
sbb
dec
fcoms
lds
dec
orb
push
imul
dec
pop
dec
dec
dec
ljmp
push
fwait
inc
add
and
cmpsb
outsb
insl
add
dec
cmovg
adc
cld
fisttpl
and
dec
fisttps
loopne
orl
add
adc
repz
pusha
ja
loopne
mov
test
xor
fiaddl
inc
mov
fwait
ret
inc
add
loopne
push
adc
or
loopne
scas
dec
or
inc
fadds
loopne
incl
dec
js
fdivr
and
dec
decb
dec
mov
fwait
ret
add
add
dec
adc
dec
cmp
call
dec
and
mov
cmp
dec
mov
pop
insl
or
add
pop
jo
sbb
dec
push
dec
dec
dec
sub
hlt
dec
int3
loopne
sbb
rorl
dec
orl
and
arpl
into
imul
enter
and
cmpsb
lock
inc
std
inc
in
xchg
inc
aaa
inc
std
inc
scas
inc
add
cmp
sub
sar
sub
pop
add
dec
sbb
dec
pop
dec
pop
cld
push
ss
add
dec
loop
mov
xchg
dec
mov
arpl
pop
dec
inc
dec
inc
dec
or
add
sub
inc
jnp
mov
mov
jno
inc
and
mov
inc
sbbl
cmp
jg
pop
scas
inc
addb
push
mov
dec
mov
push
dec
and
adc
dec
out
dec
and
dec
adc
pusha
sub
push
xor
dec
sti
xlat
cli
outsl
add
cmp
dec
adc
rorb
sub
inc
adc
pushl
mov
adc
inc
rolb
addb
loopne
in
test
adc
aam
jmp
inc
int
cs
inc
lahf
adc
mov
dec
inc
pop
or
in
stos
inc
lea
jnp
jge
decl
add
imul
loopne
int3
dec
test
jmp
outsb
dec
push
lret
inc
and
stos
stos
add
dec
scas
dec
subl
lcall
adc
dec
pop
mov
push
dec
mov
clc
mov
xchg
mov
xor
shlb
add
jo
decl
popf
inc
pop
inc
or
jmp
ret
inc
or
fcomip
or
sbb
in
adc
lret
inc
add
mov
ljmp
enter
arpl
or
cmp
inc
pop
inc
mov
jo
jp
int
out
inc
fs
inc
push
inc
pop
inc
dec
adc
inc
and
inc
push
pop
decl
inc
cmc
inc
loop
adc
inc
fldl
inc
int
add
es
adc
cltd
dec
jp
and
pop
dec
dec
dec
aas
dec
in
ljmp
and
adc
mov
dec
aas
dec
orb
dec
lds
inc
insb
pushl
andl
inc
int3
inc
and
add
loope
ljmp
sar
push
inc
filds
add
inc
scas
rolb
inc
dec
insb
inc
pop
fdivr
pop
and
mov
inc
icebp
inc
ret
adc
int
cmp
push
pop
pop
push
push
enter
testb
lea
ja
dec
dec
mov
adc
cmpsb
into
clc
dec
out
dec
int
dec
mov
cwtl
dec
arpl
add
inc
dec
inc
dec
rcll
popa
dec
add
loopne
frstor
inc
adc
push
cmp
icebp
sbb
bound
lock
fildll
pop
inc
xor
inc
jg
aas
inc
and
rolb
incb
mov
inc
test
adc
inc
repnz
lret
inc
stos
rcr
cld
or
pop
jo
cld
dec
rorb
mov
dec
mov
jno
dec
and
outsb
xor
inc
flds
popa
clc
and
xchg
inc
inc
xor
es
push
inc
cmpb
mov
jle
popa
inc
push
inc
add
jo
inc
inc
divb
std
pop
aam
dec
cmpb
sbb
adc
dec
into
pop
push
cld
fcomip
ss
test
pusha
stos
dec
xorb
in
dec
lds
xchg
mov
or
and
jg
cmp
mov
cld
add
inc
or
lcall
mov
pushf
xor
inc
std
inc
loope
in
jmp
inc
or
nop
dec
stos
call
adc
inc
leave
inc
or
mov
mov
mov
movsl
inc
test
xchg
mov
xchg
mov
popf
inc
xorl
inc
jne
jns
jge
pop
cli
add
jo
push
inc
push
inc
pop
nop
fildll
push
sub
xor
xor
int
cld
int
and
inc
adc
inc
add
inc
or
mov
je
inc
jns
jge
popa
movb
insl
inc
push
inc
push
inc
pop
jge
mov
pop
inc
inc
inc
add
mov
cmp
cmp
inc
sub
inc
sbb
inc
jg
pop
cmc
or
or
std
and
inc
in
jmp
aaa
roll
mov
cli
rcll
mov
xchg
and
xchg
ficoms
add
cld
adc
jbe
push
inc
pop
jle
inc
cwtl
inc
mov
sbb
inc
icebp
sub
sub
mov
adc
inc
mov
inc
cmp
int3
inc
fnsave
jnp
or
addb
mov
cmp
test
pop
decl
sub
push
inc
out
lds
pop
clc
inc
ss
and
jg
add
inc
fiadds
inc
or
xchg
sbb
xchg
mov
pop
outsb
lea
data16
xchg
pop
ja
and
cli
jg
mov
dec
fisttps
dec
orb
stos
mov
mov
add
dec
fisttpl
dec
cmp
rorb
ljmp
cmpsb
dec
cmc
dec
decb
bound
dec
pop
xor
pushl
dec
rorb
mov
dec
lock
inc
inc
dec
inc
or
inc
out
cmp
mov
mov
inc
pop
xchg
or
mov
inc
cmp
push
inc
inc
inc
loop
roll
jo
xchg
lock
or
hlt
pop
loopne
cld
nop
or
lock
sbb
jl
addr16
cltd
lcall
lock
adc
loopne
mov
mov
repz
movb
lock
stc
fldt
push
dec
mov
dec
pop
dec
sbb
add
dec
or
idivb
dec
loopne
fimull
cwtl
dec
orl
lea
dec
bound
cli
jmp
insb
dec
inc
dec
adc
imul
dec
cli
repnz
dec
decl
and
jne
push
dec
adc
inc
add
dec
dec
dec
or
dec
stc
mov
mov
add
in
adc
adc
sbb
jg
pop
stos
jp
inc
lock
jmp
lret
jp
inc
in
inc
mov
sub
std
jg
sbb
rclb
push
inc
pop
lock
repnz
cmc
adc
inc
pushl
lcall
inc
in
add
inc
pop
in
mov
adc
inc
jnp
mov
add
sub
jg
dec
lret
mov
and
adc
dec
divl
and
push
cmc
ljmp
dec
orl
dec
jnp
pop
push
jae
das
adc
aaa
call
dec
pop
xor
dec
fisttps
shlb
dec
xchg
add
in
dec
incl
xor
add
loop
nop
dec
mov
inc
dec
sub
inc
dec
sub
lock
mov
xchg
lock
mov
jne
gs
push
insb
xor
pop
outsb
test
mov
and
add
add
int
lods
inc
aaa
add
in
xchg
inc
fwait
test
inc
je
movsb
pop
test
add
fwait
loope
inc
movups
inc
mov
xor
clc
jg
jb
inc
in
push
nop
inc
imul
rcrb
popf
and
cmp
and
xchg
add
add
lock
mov
cmpsb
hlt
fldt
mov
xor
dec
xchg
adc
rorl
dec
sbb
dec
test
test
adc
bound
dec
and
adc
test
inc
imul
sub
sbb
inc
pop
mov
addl
inc
add
xor
adc
std
dec
lahf
dec
pop
adc
sar
decl
inc
dec
cmpsb
dec
jbe
dec
jo
movb
testl
dec
xchg
ja
call
cmp
dec
jle
sbb
jo
mov
sahf
lock
push
add
jo
push
cwtl
xchg
inc
cmpsb
inc
cltd
inc
data16
mov
mov
sbb
ss
pop
dec
rolb
inc
pop
inc
and
in
ljmp
or
mov
test
int
clc
adc
dec
add
lcall
sbb
pop
dec
loope
mov
icebp
push
bnd
mov
push
cmp
mov
nop
mov
call
mov
lods
adc
inc
jl
mov
inc
cmp
sub
in
mov
cmpb
nop
mov
mov
jl
jo
sub
inc
jnp
lds
sub
inc
dec
pop
xor
dec
push
cs
push
dec
mov
add
in
ret
dec
xchg
push
mov
add
sub
dec
push
dec
cld
dec
rolb
fidivl
mov
dec
jae
shlb
dec
cmp
push
push
cld
incl
jae
push
dec
insb
rclb
dec
inc
shrl
push
cld
dec
ljmp
dec
pushf
rcl
scas
push
fmull
adc
sti
dec
in
dec
fbstp
mov
push
jo
xor
dec
fisttpll
dec
cmpsl
ljmp
jae
pop
in
fs
inc
inc
dec
inc
cld
outsl
incl
insb
adc
inc
or
inc
xchg
inc
push
inc
nop
test
roll
adc
inc
push
inc
aas
inc
or
pushl
push
les
pop
inc
inc
adc
inc
or
mov
inc
inc
push
adcl
adc
loop
inc
cld
sbb
nop
pop
les
scas
jo
jnp
push
jo
adc
hlt
inc
sbb
or
in
inc
push
jle
inc
outsl
pop
jmp
mov
dec
add
add
dec
push
ljmp
push
dec
cli
in
mov
test
or
dec
add
inc
dec
dec
adc
and
cld
insl
addl
rclb
lret
dec
movsl
dec
mov
outsl
dec
dec
or
adc
xor
mov
fiaddl
lds
cmpsb
dec
sbb
repz
rol
mov
aaa
ret
outsl
adc
dec
jb
dec
and
or
adc
cld
in
fwait
mov
rclb
fisttpl
dec
leave
dec
mov
and
sbb
cli
dec
adc
movb
movsb
jbe
cmp
sub
dec
mov
push
sarb
add
inc
mov
sub
ljmpw
lock
filds
inc
mov
jne
xchg
clc
dec
mov
xchg
jbe
jb
sbb
mov
mov
pop
or
inc
imul
dec
inc
xor
inc
jb
lock
aad
enter
inc
rolb
movsl
inc
xchg
inc
adcb
cs
jg
bnd
inc
inc
add
inc
and
inc
pop
adc
sub
push
ljmp
inc
mov
fbstp
xor
lret
adc
inc
sbb
sub
cld
int
add
sti
inc
shlb
push
call
inc
sub
sbb
add
push
pop
test
mov
adc
adc
loop
inc
jnp
add
push
push
xor
js
adc
fisttpl
lcall
xchg
inc
xchg
cwtl
pusha
add
clc
mov
xor
cli
inc
out
cmpsb
inc
scas
inc
jne
jg
lods
dec
push
subb
out
adc
int3
loopne
ljmp
inc
subl
dec
push
pop
cmpsb
inc
push
jb
pop
icebp
das
sahf
add
mov
subb
cmp
les
jg
dec
xor
dec
testl
dec
cltd
dec
stc
fwait
mov
sub
gs
pop
dec
inc
lock
loope
test
pop
mov
xchg
lea
loope
and
dec
push
loope
or
adc
incl
inc
xchg
adc
xor
int3
adc
sbb
lret
jecxz
ret
aas
into
popf
inc
jns
push
lods
jo
inc
sti
cli
jbe
push
mov
inc
xchg
adc
inc
inc
adc
add
inc
jecxz
aad
rcll
lahf
ja
mov
cmp
lock
pop
mov
mov
sbbb
adc
mov
and
or
add
pop
dec
add
inc
and
and
bound
shlb
pop
jecxz
adc
iret
mov
ljmp
fmuls
inc
daa
inc
loope
jg
inc
add
jbe
inc
sub
add
adc
mov
loope
lock
loop
add
dec
sbb
dec
cmp
repnz
cmpsb
dec
pop
sub
dec
adcb
mov
clc
mov
addr16
cmp
inc
pop
mov
xor
add
jle
loop
cld
test
inc
xor
filds
mov
movl
inc
mov
inc
cmpsl
inc
pop
test
inc
xchg
inc
xchg
inc
fwait
lahf
inc
xchg
add
pop
ja
inc
js
sarb
and
outsl
adcb
inc
or
hlt
pop
inc
inc
clc
pushl
dec
inc
xor
cmp
inc
and
sub
hlt
das
js
adc
jg
inc
mov
cmove
jmp
outsl
adc
inc
sti
inc
incl
inc
jmp
out
inc
roll
rolb
push
ret
dec
mov
xchg
jns
cld
xor
out
rcr
dec
lret
dec
orl
mov
dec
lcall
dec
divb
cwtl
dec
lret
fs
outsl
dec
push
dec
or
in
pop
orl
dec
jecxz
xlat
adc
incb
std
decl
dec
leave
dec
mov
add
jle
push
dec
pop
dec
inc
dec
dec
fwait
mov
dec
ds
sub
adc
dec
add
dec
jge
dec
or
and
adc
orb
dec
mov
cmp
mov
ja
ljmp
inc
shl
ds
inc
and
pusha
arpl
push
in
rcr
je
incb
inc
ja
and
out
daa
xchg
or
incb
scas
jno
adc
dec
mov
das
rorb
jl
or
and
or
test
dec
addb
dec
add
mov
aam
dec
dec
dec
xor
adc
dec
add
mov
incl
gs
dec
dec
and
pusha
sbb
lods
dec
jge
addr16
sbb
sbbb
xor
adc
dec
jne
push
dec
add
ret
lods
mov
or
dec
js
into
dec
pop
dec
jecxz
int
clc
mov
sbb
adc
stos
inc
inc
movl
in
mov
out
fadd
inc
push
inc
inc
inc
hlt
cld
inc
mov
sahf
inc
push
inc
mov
into
mov
xchg
cmp
call
pop
shlb
jg
dec
cmp
dec
testl
insb
loopne
cmp
fsub
push
jg
and
sub
xor
pusha
wrmsr
cmpb
cmovl
dec
out
pusha
in
movsb
pop
loope
cli
lcall
inc
lock
inc
xchg
ljmp
mov
flds
test
inc
mov
out
in
jp
inc
push
add
cmp
add
fimull
sub
popa
jl
adc
aaa
jecxz
inc
cmp
adc
out
mov
xor
outsl
fadds
adc
mov
adc
dec
pushf
incl
dec
dec
rolb
dec
mov
movsb
dec
pusha
dec
dec
inc
dec
cmp
dec
fisubs
pushf
add
xchg
mov
mov
das
dec
push
add
mov
pop
adcb
dec
popa
add
dec
push
hlt
adc
insb
push
sbb
dec
ljmp
into
dec
mov
dec
inc
ja
das
dec
push
sbb
lret
jmp
dec
mov
movsl
dec
lods
dec
xchg
adc
orb
ret
inc
movsb
imul
dec
and
sbb
sbb
xor
arpl
outsb
lret
sub
fsts
pop
sub
inc
repz
sub
lods
mov
cld
mov
and
inc
xchg
inc
cltd
add
push
loopne
ljmp
adc
add
mov
clc
xchg
inc
push
inc
ffreep
out
xlat
dec
insb
arpl
iret
lcall
or
dec
sbb
mov
dec
aam
mov
dec
mov
pusha
test
call
ds
sub
dec
fimull
loope
test
push
pop
add
inc
dec
not
mov
inc
test
les
inc
lahf
aaa
jg
fists
cmp
inc
testl
inc
or
sti
movb
std
out
inc
mov
jg
mov
jle
sbb
pop
mov
mov
push
dec
loope
inc
pop
sub
aam
mov
movsb
xor
inc
aam
enter
mov
dec
adcl
inc
xor
inc
xchg
adc
push
stos
dec
jge
push
xorb
dec
add
fisttpll
pop
dec
lahf
xor
dec
ret
dec
dec
test
adc
xor
decl
hlt
inc
shll
test
inc
mov
movsb
inc
andb
inc
or
lea
jmp
add
mov
push
call
xor
inc
inc
lock
fisttpl
and
xchg
mov
stos
fidivs
dec
mov
pushf
dec
push
add
dec
pusha
lcall
mov
dec
nop
adc
loopne
pusha
fwait
pop
inc
das
fidivl
cmpsl
cmp
cmp
and
push
dec
shrb
xor
lcall
add
inc
or
mov
inc
out
lock
inc
rcll
adc
inc
shlb
inc
jg
into
inc
mov
push
dec
adc
nop
pop
lods
adc
push
loopne
mov
jl
inc
mov
je
jne
pop
sar
in
arpl
adc
push
inc
push
inc
pop
pop
lcall
dec
adc
inc
cmp
adc
inc
cs
bound
sbb
sub
fbld
inc
pop
inc
or
sti
inc
cld
xor
and
inc
rolb
inc
fimuls
ret
xor
sarl
add
mov
les
xchg
sbb
lcall
jae
inc
je
jns
jnp
push
ja
aam
inc
pop
push
shl
xchg
push
inc
xor
and
inc
and
inc
sub
adc
jo
sbb
adc
call
push
out
sarb
ret
shlb
inc
nop
inc
cwtl
stos
pop
ja
ljmp
cli
xchg
inc
stos
inc
nop
lods
push
cld
inc
mov
ljmp
adc
inc
into
mov
add
pushl
dec
imul
adc
stos
add
push
ds
fcomip
call
cmp
inc
jo
cli
dec
in
dec
dec
icebp
and
sub
lock
inc
and
lcall
mov
mov
or
push
xchg
aas
inc
pop
adc
mov
inc
mov
fmuls
addb
pusha
jne
ljmp
sub
dec
mov
dec
aad
aaa
decb
jo
and
mov
lock
fwait
pop
stc
inc
fwait
sub
xor
loop
stos
sarl
sbbl
xor
inc
inc
and
cmp
mov
push
mov
inc
movl
xor
clc
mov
dec
insl
mov
adc
dec
mov
outsl
cli
or
push
adc
dec
test
outsl
push
pusha
pop
dec
icebp
lock
pop
ficomps
cmpsl
dec
xchg
dec
or
sub
add
cmp
push
outsb
fdivs
ret
or
jp
inc
fwait
push
push
add
adc
sbb
adcb
add
adc
jl
dec
icebp
xor
es
cltd
loopne
icebp
sub
cmp
repz
pop
stos
aaa
pop
insl
and
add
mov
insb
adc
clc
cmp
xor
adc
dec
push
dec
pop
dec
mov
dec
aam
ret
dec
mov
jle
dec
pop
jo
and
dec
adc
dec
ret
lock
mov
dec
imul
dec
cmpsb
dec
cwtl
push
dec
test
dec
xor
andb
movsl
mov
incl
dec
xor
and
inc
mov
mov
nop
pop
sbb
sbb
fwait
icebp
pop
dec
and
dec
jl
dec
cmc
push
imul
push
test
jg
or
or
inc
ljmp
mov
mov
and
inc
mov
pop
notb
lahf
jne
das
call
inc
sub
inc
loop
repz
inc
add
push
xchg
out
dec
mov
xchg
inc
dec
cmp
dec
lock
dec
mov
je
dec
loopne
dec
call
fs
out
div
mov
and
dec
cmp
dec
sub
adc
dec
xor
jg
add
jp
out
adc
dec
rorb
mov
cld
aaa
cld
test
mov
rcrb
lock
inc
pusha
jbe
adc
mov
push
add
rolb
xor
pop
loopnew
cld
rolb
and
xor
out
add
cmpsl
or
inc
loop
mov
es
inc
into
inc
mov
or
loop
mov
adc
and
cmp
inc
loopne
xchg
bound
adc
dec
and
lea
stos
inc
cmp
ss
add
inc
adcb
testb
data16
add
addl
lock
xor
mov
mov
inc
xor
jp
rolb
mov
cli
test
mov
loop
pop
or
faddl
mov
or
sub
andb
inc
mov
add
stos
pop
add
inc
bound
data16
inc
push
outsl
cli
inc
add
cs
inc
inc
inc
inc
and
inc
dec
inc
xor
sbb
inc
sub
das
add
cs
adc
add
inc
rorb
push
inc
repnz
pusha
mov
add
and
cld
mov
add
lret
cmp
mov
pop
xchg
add
dec
push
scas
ret
das
sar
push
add
pop
ss
sbb
out
popf
cmp
fldenv
dec
add
mov
mov
or
xchg
call
add
lock
jg
mov
icebp
sub
add
or
leave
dec
jle
xchg
lcall
lods
cmp
add
dec
clc
repz
inc
outsl
mov
lods
mov
lcall
lock
sbb
pop
pop
sahf
in
and
sbb
and
insb
cmpsl
in
fcomip
scas
or
xchg
xchg
dec
adc
ret
test
roll
cwtl
scas
stos
cmpsl
call
sub
sub
add
mov
cli
mov
int3
outsb
add
sbb
stos
incl
pusha
push
mov
mov
jmp
fisubs
pop
jns
frstor
jg
repnz
out
lea
pop
pop
cmp
mov
fiaddl
mov
aas
filds
cli
push
popa
jl
call
pop
cld
into
es
fcomip
mov
pushf
push
sub
jecxz
arpl
jmp
jmp
dec
add
adc
daa
xor
mov
lret
add
mov
fildll
ss
movsl
mov
mov
pushl
rclb
rcrl
into
jl
cmp
dec
cs
lock
rdpmc
add
inc
enter
dec
ret
or
dec
loopne
std
fbstp
jne
das
in
int3
lcall
sub
pop
push
fcmovnu
jecxz
or
adc
stos
mov
aam
ror
jne
adcb
insb
ja
jg
jp
lods
add
movsb
or
adc
cwtl
pop
or
icebp
lcall
idivl
clc
push
mov
xor
test
inc
inc
pop
mov
in
push
push
push
pop
or
xchg
adc
add
xor
lcall
int
shlb
gs
lahf
adc
add
filds
cwtl
xor
inc
sbbl
pusha
call
dec
out
sub
dec
mov
call
rclb
pop
mov
mov
decb
pop
mov
xchg
lret
in
lret
jae
ret
mov
pushl
enter
dec
mov
xchg
lea
fcmovne
out
push
leave
scas
add
mov
je
fwait
test
loope
pop
mov
scas
test
xor
cmp
push
inc
inc
inc
inc
test
lcall
push
sub
add
inc
outsb
je
jb
jb
je
arpl
push
gs
outsl
fwait
insl
outsl
outsb
sub
gs
cs
jb
arpl
jae
push
stos
cltd
push
outsl
imul
pop
or
inc
sbb
andb
imul
outsb
addr16
jns
gs
push
in
jnp
jg
je
inc
popa
jo
jne
sub
arpl
push
push
jb
gs
push
add
insb
loop
jns
push
outsl
push
imul
inc
push
jb
sbb
insb
incb
data16
mov
dec
gs
out
mov
gs
and
outsb
outsw
inc
cmc
dec
pusha
sar
dec
outsl
jbe
dec
gs
jbe
xchg
dec
fadds
dec
inc
imul
decl
push
jne
push
imul
insb
ss
outsb
push
push
mov
or
adc
dec
mov
dec
jae
fs
add
sbb
loopne
js
jbe
push
inc
je
lea
fnsave
push
jne
add
insl
jo
adc
fistpll
test
loope
js
outsl
inc
jae
pop
pusha
push
pop
in
push
ret
out
jbe
mov
dec
dec
imul
test
subb
bound
data16
mov
jne
bound
dec
fsts
inc
push
xlat
stos
adc
xchg
dec
and
add
push
inc
pop
jae
dec
fsubl
aas
or
cmp
fs
shlb
or
xor
sub
jo
cwtl
loope
push
adc
jne
push
adc
bound
mov
loope
lods
add
push
gs
mov
leave
popf
aad
xchg
push
aaa
mov
dec
adc
inc
push
out
push
sti
test
push
sbb
push
arpl
xor
push
add
in
cwtl
inc
and
xor
push
in
jge
ss
imul
in
sbb
pop
adc
inc
push
push
cmp
dec
pop
shrl
aas
and
out
clc
mov
inc
dec
jnp
pushw
mov
adcl
call
jne
movsl
jecxz
jp
inc
push
outsb
ja
sub
add
rol
adc
add
inc
ret
rcr
das
inc
inc
jbe
push
fwait
jno
mov
dec
cmc
bound
jne
jle
adc
add
enter
or
leave
push
inc
cmp
push
xchg
push
sbb
popaw
dec
dec
pop
sbb
inc
fstpt
adc
sub
xchg
xchg
cwtl
jo
imull
cmc
addb
xchg
push
push
mov
inc
cmp
data16
dec
and
jle
into
xor
gs
dec
inc
push
jmp
pop
xchg
mov
inc
call
loopne
pusha
mov
popa
outsl
jo
mov
jne
push
movsb
jl
loop
mov
mov
movsl
mov
add
add
mov
jle
pushl
gs
scas
in
rcl
mov
ret
adc
addb
imul
inc
xchg
mov
sub
test
inc
sbb
pusha
jne
xor
sub
jb
push
inc
jae
seto
jb
xor
and
push
mov
ret
inc
push
stos
mov
adc
pop
jne
js
pop
push
inc
jmp
push
orl
mov
push
imul
adc
jecxz
jno
popa
xor
insb
icebp
iret
or
jnp
movsl
cmp
and
js
sub
std
add
pop
pop
pop
adc
adc
insl
push
decl
sub
test
test
jg
push
mov
sbb
fcomps
shll
xchg
jo
jae
and
adc
test
pop
pop
pop
mov
adc
xor
aam
lds
mov
pop
daa
mov
jnp
ljmp
daa
jle
adc
push
xor
inc
imul
jmp
sub
mov
mov
mov
movsl
iret
fists
mov
repz
pop
loop
addl
inc
xor
scas
xor
adcl
and
jne
test
xorb
mov
call
dec
push
or
sub
mov
or
repz
or
popa
push
andl
xchg
or
xlat
cmp
and
scas
imul
mov
sti
and
push
aas
movsl
xor
repz
push
dec
add
out
pop
xchg
push
mov
push
sub
dec
ret
add
pop
xlat
cmp
test
nop
cmp
pop
xchg
out
mov
mov
ret
popa
fimull
mov
jno
hlt
inc
jns
and
lahf
mov
cmp
xlat
adcb
int
test
test
add
adc
xchg
bound
dec
lcall
adc
pop
and
cmp
mov
ja
xor
xchg
mov
sub
jmp
sub
push
xor
aad
push
flds
or
push
mov
or
cmc
mov
das
ffree
sub
testl
pop
xchg
xchg
stos
sub
push
test
push
xchg
insl
arpl
pop
lods
imul
mov
sub
push
lcall
test
cmp
and
xor
dec
mov
lret
sbb
push
inc
push
dec
and
or
cmp
add
inc
mov
neg
sbb
push
adc
inc
outsb
fcomi
xor
and
sbb
ja
outsb
insl
in
jnp
push
add
lea
jo
and
movsl
add
cmp
xchg
pusha
icebp
fdivrs
push
push
add
and
jb,pn
xchg
mov
xor
es
jae
bound
inc
outsb
dec
push
mov
cmp
cs
sahf
xor
pop
push
repnz
jb
xchg
ss
sbb
jo
das
dec
fdivs
dec
xchg
test
add
add
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
and
add
add
add
add
add
add
add
add
add
addb
addb
add
test
add
rolb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
jo
add
add
rorb
add
add
add
add
add
add
add
add
cwtl
add
add
or
rorb
add
add
add
add
add
add
add
add
rolb
add
adc
add
or
add
add
add
add
add
add
add
add
call
push
js
rorb
add
add
add
add
add
add
add
add
adc
add
je
js
rorb
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
push
jne
test
add
add
add
add
jne
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
ljmp
add
xor
cmp
xor
xor
inc
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
popa
add
add
add
add
add
add
inc
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
inc
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
loop
lock
xor
into
ret
cs
out
movsl
pop
adc
sbb
xchg
xchg
fnsave
sub
jge
outsb
or
cmp
repz
ficomps
pusha
int
das
push
pop
callw
xor
mov
lock
xor
ret
mov
and
jns
mov
lret
and
dec
addr16
and
addb
xchg
test
jp
and
cli
inc
je
out
ret
sub
push
sub
xchg
adc
push
cmc
leave
pop
adc
lea
push
aad
jo
sbb
addr16
xchg
mov
push
mov
aad
add
pop
cmp
jg
mov
mov
sbb
std
jecxz
enter
rol
cltd
lods
lods
adc
adc
jmp
sub
dec
mov
jl
rorb
sbb
lds
push
and
push
pop
lcall
push
and
adc
sub
fwait
adc
sarb
loopne
lcall
mov
jge
push
jno
clc
addr16
sbb
std
push
push
lods
mov
sub
dec
fimull
fwait
cmp
jmp
xorb
xor
mov
pop
jbe
pop
dec
pop
cmp
call
sbb
test
push
sub
sbb
cmp
mov
and
or
fistps
cmp
jnp
adc
xchg
loope
ljmp
mov
sti
movsl
adc
push
xlat
fildl
pop
jg
sahf
sbb
and
jo
add
test
lds
mov
pusha
bsr
xor
cmpb
rcl
xor
xchg
in
cmp
scas
test
ljmp
and
jne
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
ljmp
add
xor
cmp
xor
xor
inc
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
popa
add
add
add
add
add
add
inc
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
inc
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
loop
lock
xor
into
ret
cs
out
movsl
pop
adc
sbb
xchg
xchg
fnsave
sub
jge
outsb
or
cmp
repz
ficomps
pusha
int
das
push
pop
callw
xor
mov
lock
xor
ret
mov
and
jns
mov
lret
and
dec
addr16
and
addb
xchg
test
jp
and
cli
inc
je
out
ret
sub
push
sub
xchg
adc
push
cmc
leave
pop
adc
lea
push
aad
jo
sbb
addr16
xchg
mov
push
mov
aad
add
pop
cmp
jg
mov
mov
sbb
std
jecxz
enter
rol
cltd
lods
lods
adc
adc
jmp
sub
dec
mov
jl
rorb
sbb
lds
push
and
push
pop
lcall
push
and
adc
sub
fwait
adc
sarb
loopne
lcall
mov
jge
push
jno
clc
addr16
sbb
std
push
push
lods
mov
sub
dec
fimull
fwait
cmp
jmp
xorb
xor
mov
pop
jbe
pop
dec
pop
cmp
call
sbb
test
push
sub
sbb
cmp
mov
and
or
fistps
cmp
jnp
adc
xchg
loope
ljmp
mov
sti
movsl
adc
push
xlat
fildl
pop
jg
sahf
sbb
and
jo
add
test
lds
mov
pusha
bsr
xor
cmpb
rcl
xor
xchg
in
cmp
scas
test
ljmp
loopne
jne
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
ljmp
add
xor
cmp
xor
xor
inc
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
popa
add
add
add
add
add
add
inc
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
inc
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
loop
lock
xor
into
ret
cs
out
movsl
pop
adc
sbb
xchg
xchg
fnsave
sub
jge
outsb
or
cmp
repz
ficomps
pusha
int
das
push
pop
callw
xor
mov
lock
xor
ret
mov
and
jns
mov
lret
and
dec
addr16
and
addb
xchg
test
jp
and
cli
inc
je
out
ret
sub
push
sub
xchg
adc
push
cmc
leave
pop
adc
lea
push
aad
jo
sbb
addr16
xchg
mov
push
mov
aad
add
pop
cmp
jg
mov
mov
sbb
std
jecxz
enter
rol
cltd
lods
lods
adc
adc
jmp
sub
dec
mov
jl
rorb
sbb
lds
push
and
push
pop
lcall
push
and
adc
sub
fwait
adc
sarb
loopne
lcall
mov
jge
push
jno
clc
addr16
sbb
std
push
push
lods
mov
sub
dec
fimull
fwait
cmp
jmp
xorb
xor
mov
pop
jbe
pop
dec
pop
cmp
call
sbb
test
push
sub
sbb
cmp
mov
and
or
fistps
cmp
jnp
adc
xchg
loope
ljmp
mov
sti
movsl
adc
push
xlat
fildl
pop
jg
sahf
sbb
and
jo
add
test
lds
mov
pusha
bsr
xor
cmpb
rcl
xor
xchg
in
cmp
scas
test
ljmp
mov
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
ljmp
add
xor
cmp
xor
xor
inc
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
popa
add
add
add
add
add
add
inc
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
inc
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
loop
lock
xor
into
ret
cs
out
movsl
pop
adc
sbb
xchg
xchg
fnsave
sub
jge
outsb
or
cmp
repz
ficomps
pusha
int
das
push
pop
callw
xor
mov
lock
xor
ret
mov
and
jns
mov
lret
and
dec
addr16
and
addb
xchg
test
jp
and
cli
inc
je
out
ret
sub
push
sub
xchg
adc
push
cmc
leave
pop
adc
lea
push
aad
jo
sbb
addr16
xchg
mov
push
mov
aad
add
pop
cmp
jg
mov
mov
sbb
std
jecxz
enter
rol
cltd
lods
lods
adc
adc
jmp
sub
dec
mov
jl
rorb
sbb
lds
push
and
push
pop
lcall
push
and
adc
sub
fwait
adc
sarb
loopne
lcall
mov
jge
push
jno
clc
addr16
sbb
std
push
push
lods
mov
sub
dec
fimull
fwait
cmp
jmp
xorb
xor
mov
pop
jbe
pop
dec
pop
cmp
call
sbb
test
push
sub
sbb
cmp
mov
and
or
fistps
cmp
jnp
adc
xchg
loope
ljmp
mov
sti
movsl
adc
push
xlat
fildl
pop
jg
sahf
sbb
and
jo
add
test
lds
mov
pusha
bsr
xor
cmpb
rcl
xor
xchg
in
cmp
scas
test
ljmp
pusha
dec
jne
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
ljmp
add
xor
cmp
xor
xor
inc
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
inc
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
popa
add
add
add
add
add
add
inc
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
inc
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
popa
add
add
jb
and
push
add
jae
push
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
loop
lock
xor
into
ret
cs
out
movsl
pop
adc
sbb
xchg
xchg
fnsave
sub
jge
outsb
or
cmp
repz
ficomps
pusha
int
das
push
pop
callw
xor
mov
lock
xor
ret
mov
and
jns
mov
lret
and
dec
addr16
and
addb
xchg
test
jp
and
cli
inc
je
out
ret
sub
push
sub
xchg
adc
push
cmc
leave
pop
adc
lea
push
aad
jo
sbb
addr16
xchg
mov
push
mov
aad
add
pop
cmp
jg
mov
mov
sbb
std
jecxz
enter
rol
cltd
lods
lods
adc
adc
jmp
sub
dec
mov
jl
rorb
sbb
lds
push
and
push
pop
lcall
push
and
adc
sub
fwait
adc
sarb
loopne
lcall
mov
jge
push
jno
clc
addr16
sbb
std
push
push
lods
mov
sub
dec
fimull
fwait
cmp
jmp
xorb
xor
mov
pop
jbe
pop
dec
pop
cmp
call
sbb
test
push
sub
sbb
cmp
mov
and
or
fistps
cmp
jnp
adc
xchg
loope
ljmp
mov
sti
movsl
adc
push
xlat
fildl
pop
jg
sahf
sbb
and
jo
add
test
lds
mov
pusha
bsr
xor
cmpb
rcl
xor
xchg
in
cmp
scas
test
ljmp
js
js
pop
xor
test
js
xchg
xor
mov
xor
shlb
add
xor
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
