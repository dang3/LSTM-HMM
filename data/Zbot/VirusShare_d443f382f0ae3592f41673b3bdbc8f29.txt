xor
pop
sarb
add
sub
xchg
push
mov
out
adc
sahf
js
aam
inc
lods
mov
add
dec
movsl
lret
les
sbb
movsl
ljmp
mov
dec
outsl
dec
bound
outsl
dec
bound
xor
mov
mov
cmp
dec
outsl
dec
bound
fldenv
ljmp
movsl
ljmp
bound
outsl
dec
bound
cltd
jnp
sbb
fistpl
test
jl
sub
ret
test
inc
inc
imul
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
sub
movzwl
mov
shl
mov
mov
add
movzwl
mov
mov
movw
movzwl
or
imul
mov
push
call
push
call
call
mov
mov
mov
shr
mov
mov
shr
movzwl
movzwl
mov
mov
add
mov
movw
movw
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzwl
mov
or
movzbl
mov
movzwl
mov
imul
movzwl
movw
movb
movzwl
add
mov
push
call
push
call
movl
mov
shr
mov
mov
shr
movzwl
mov
movzwl
movzbl
shr
mov
mov
and
movzbl
xor
movzbl
mov
and
mov
movb
mov
mov
movzwl
xor
movzwl
mov
or
movzbl
and
movzbl
movzbl
shr
mov
movzbl
add
mov
mov
sub
movzwl
mov
mov
movzbl
imul
mov
movl
mov
sub
movzwl
movzbl
sub
mov
mov
add
movzbl
movzwl
imul
add
movzwl
movzbl
mov
mov
movzwl
movzwl
imul
imul
mov
movb
mov
mov
mov
test
je
movzwl
mov
movzwl
or
mov
mov
xor
mov
mov
movzbl
sub
add
mov
mov
movzbl
mov
mov
movzbl
and
movzbl
add
mov
mov
or
mov
sub
mov
mov
mov
mov
add
mov
movzbl
xor
mov
mov
mov
movw
movzwl
mov
mov
add
mov
movzbl
xor
movzbl
add
mov
movzbl
mov
movw
mov
sub
mov
mov
or
mov
movzwl
imul
imul
mov
movw
mov
imul
mov
jmp
mov
sub
movzwl
mov
and
movzwl
add
movzbl
movzwl
shr
movzbl
mov
movzbl
xor
movzbl
imul
movzwl
movzwl
mov
mov
sub
movzwl
mov
or
mov
movzbl
or
or
mov
mov
mov
movzbl
xor
movzbl
movzbl
shl
movzwl
mov
mov
movzbl
sub
mov
mov
and
mov
mov
and
movzbl
sub
mov
movzbl
sub
mov
mov
xor
add
mov
mov
or
mov
sub
movzwl
movzwl
xor
movzwl
sub
mov
mov
mov
movzwl
movzbl
and
mov
mov
or
movzbl
sub
movzwl
movzwl
xor
mov
mov
and
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzwl
mov
or
or
movzbl
mov
shl
movzbl
mov
movb
movb
push
call
push
call
push
push
push
call
mov
shr
mov
mov
mov
movzwl
add
sub
mov
mov
shl
mov
mov
add
movzwl
movzwl
mov
movzbl
mov
movzbl
imul
mov
movzbl
and
movzbl
xor
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
sub
movzwl
mov
movzwl
mov
or
movzwl
mov
shr
mov
movzbl
xor
mov
mov
movzbl
and
mov
movb
movzbl
mov
push
call
push
call
push
push
call
mov
mov
mov
mov
add
mov
mov
sub
movzwl
mov
mov
mov
and
mov
mov
sub
mov
mov
imul
mov
mov
movzbl
add
mov
mov
mov
shr
mov
mov
shr
mov
mov
xor
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
xor
movzbl
mov
shl
mov
mov
and
xor
mov
mov
add
mov
mov
and
mov
mov
mov
push
call
push
call
push
call
mov
mov
and
imul
mov
sub
mov
mov
add
movzbl
mov
shr
mov
mov
sub
mov
movzwl
mov
movzbl
mov
movzbl
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzwl
mov
shl
movzwl
mov
movzbl
mov
sub
movzwl
mov
xor
and
mov
movl
mov
sub
mov
push
call
push
call
push
push
push
call
mov
movzbl
shr
mov
movzbl
movzwl
mov
or
and
movzbl
mov
or
movzwl
movw
mov
imul
mov
mov
add
movzwl
movzbl
sub
mov
mov
sub
movzwl
mov
shl
mov
movzwl
xor
sub
mov
mov
sub
movzbl
mov
sub
add
mov
movw
movzbl
or
movzwl
or
mov
movzbl
imul
add
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
xor
and
movzwl
mov
shr
mov
mov
mov
mov
and
movzwl
and
mov
push
call
push
call
call
mov
movzwl
mov
and
mov
imul
movzwl
mov
shr
mov
movzbl
shl
movzwl
mov
sub
movzwl
mov
or
add
mov
mov
add
movzwl
sub
mov
movzwl
xor
movzwl
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
shl
movzbl
mov
and
movzwl
mov
shr
mov
mov
add
mov
mov
mov
mov
movzwl
or
imul
mov
movzwl
or
mov
push
call
push
call
mov
sub
add
mov
mov
movzbl
imul
mov
mov
and
imul
mov
movzbl
shl
mov
mov
and
add
movzwl
mov
sub
mov
movzwl
mov
push
push
pushl
call
mov
mov
add
mov
mov
movzwl
movzbl
mov
mov
shl
mov
movzwl
xor
mov
imul
movzbl
mov
or
mov
imul
mov
movw
movzwl
and
movzbl
add
mov
mov
sub
movzbl
mov
imul
movzwl
mov
add
movzbl
mov
and
mov
mov
movzbl
and
xor
movzbl
movzbl
xor
mov
movzwl
or
and
mov
movzbl
xor
mov
mov
and
mov
mov
shr
mov
movzwl
movzbl
xor
sub
mov
mov
shl
mov
mov
mov
mov
movzbl
movzwl
and
mov
sub
mov
movzwl
imul
sub
mov
mov
movzbl
sub
sub
mov
movb
mov
add
mov
mov
xor
add
mov
mov
sub
mov
movzbl
movzbl
mov
or
sub
mov
movb
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
xor
mov
mov
and
or
movzwl
mov
sub
movzwl
mov
movzwl
or
xor
mov
push
call
push
call
mov
mov
mov
add
mov
mov
and
mov
add
mov
mov
xor
movzwl
mov
shr
mov
mov
shr
mov
mov
mov
mov
and
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
or
imul
movzwl
mov
sub
mov
mov
imul
sub
movzwl
mov
mov
sub
mov
mov
or
movzwl
add
mov
movw
movl
mov
mov
mov
sub
sub
mov
movzwl
shl
mov
mov
xor
mov
add
movzwl
movzwl
and
mov
movzwl
or
sub
mov
mov
imul
mov
mov
test
je
mov
mov
movzwl
mov
cmpl
jge
mov
movzwl
mov
movzwl
add
mov
mov
movzbl
mov
mov
mov
and
mov
mov
sub
add
mov
mov
mov
mov
add
mov
movzwl
sub
mov
mov
mov
mov
add
mov
movw
movl
mov
sub
mov
mov
xor
imul
mov
movzwl
and
movzwl
add
mov
mov
imul
mov
mov
or
imul
mov
jmp
mov
movzwl
sub
mov
movzwl
imul
mov
mov
xor
mov
mov
xor
add
mov
mov
movzbl
shl
mov
movzwl
imul
movzwl
add
mov
movw
mov
and
movzwl
add
mov
movzwl
sub
add
mov
mov
movzbl
shl
mov
movl
mov
imul
mov
mov
add
mov
movw
movw
mov
mov
movzbl
shl
mov
mov
mov
mov
movzwl
xor
xor
mov
mov
imul
sub
mov
mov
mov
add
mov
movzbl
add
mov
movl
movw
movzwl
sub
mov
mov
mov
mov
mov
mov
and
sub
mov
mov
imul
add
mov
movl
mov
sub
mov
mov
and
mov
mov
or
mov
mov
mov
cmp
jne
mov
and
mov
movw
mov
mov
cmp
jne
movw
mov
and
sub
mov
mov
and
mov
movl
mov
movzwl
add
mov
movzwl
mov
movzwl
or
xor
mov
mov
mov
mov
test
je
mov
movzwl
sub
mov
movzwl
movzwl
sub
sub
mov
movzwl
mov
movzwl
mov
mov
sub
mov
mov
mov
movzwl
xor
or
mov
mov
movzwl
imul
mov
mov
movzwl
add
mov
mov
add
mov
movw
movzwl
or
sub
mov
jmp
movzwl
movzwl
xor
and
mov
movzwl
and
mov
movzwl
sub
mov
movw
mov
movzbl
mov
mov
mov
and
mov
mov
mov
movw
mov
add
mov
mov
add
mov
mov
or
or
mov
mov
add
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
sub
mov
movzwl
mov
mov
mov
movw
movzwl
and
movzwl
imul
mov
jmp
mov
add
mov
mov
imul
mov
movzwl
shr
mov
mov
imul
add
mov
movzwl
mov
mov
mov
movzwl
imul
mov
sub
mov
mov
sub
shr
mov
mov
shr
movzwl
movzwl
xor
movzwl
movzwl
add
mov
mov
movzwl
mov
mov
add
sub
mov
mov
mov
movzwl
and
mov
movzwl
imul
mov
movzwl
add
mov
movzwl
and
mov
add
movzwl
mov
sub
mov
mov
add
mov
movzwl
add
mov
mov
and
or
mov
mov
and
mov
mov
or
mov
add
mov
mov
shr
mov
mov
shl
mov
mov
or
movzwl
mov
xor
mov
mov
or
mov
mov
movzwl
xor
mov
push
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
or
movzbl
mov
xor
mov
add
mov
mov
xor
mov
movzwl
and
sub
mov
movzwl
mov
mov
sub
mov
push
call
push
call
push
push
push
call
mov
mov
xor
mov
mov
shl
movzbl
mov
mov
add
mov
mov
sub
mov
mov
shl
mov
mov
movzwl
imul
sub
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
add
movzwl
mov
sub
movzwl
mov
and
xor
movzwl
movb
mov
or
imul
mov
mov
xor
mov
push
call
push
call
movl
mov
movzwl
mov
mov
mov
add
movzwl
mov
mov
mov
xor
movzbl
sub
mov
mov
movzbl
add
mov
movzbl
imul
mov
mov
xor
mov
mov
mov
movzbl
add
movzbl
sub
movzwl
movzbl
sub
movzwl
mov
shl
mov
mov
shr
mov
mov
imul
mov
mov
movzwl
mov
add
mov
movl
movl
mov
sub
movzwl
movzbl
add
mov
movzbl
add
mov
mov
movzwl
movzbl
sub
mov
movb
movzbl
imul
mov
sub
mov
mov
test
je
mov
add
mov
mov
and
xor
mov
mov
and
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
mov
mov
add
mov
movzbl
or
mov
mov
sub
mov
mov
xor
movzbl
add
mov
mov
add
mov
movzbl
imul
mov
add
mov
movl
movzbl
add
mov
movzbl
mov
mov
sub
mov
movb
movzbl
mov
jmp
mov
and
and
mov
mov
sub
mov
mov
shr
movzwl
movzbl
xor
add
mov
mov
or
sub
mov
mov
mov
mov
xor
mov
mov
mov
movzbl
or
mov
movzbl
xor
mov
imul
movzwl
mov
add
mov
mov
sub
mov
mov
shr
movzwl
mov
mov
mov
imul
movzbl
sub
mov
movzbl
add
mov
mov
movzwl
mov
sub
movzwl
movzbl
imul
sub
movzwl
movzbl
movzwl
mov
movzbl
imul
mov
sub
mov
movzbl
add
mov
movzbl
xor
movzbl
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
add
mov
mov
imul
mov
mov
xor
mov
mov
and
mov
mov
xor
movzbl
mov
movzbl
xor
mov
mov
imul
mov
mov
mov
push
call
push
call
push
push
push
call
mov
mov
mov
xor
mov
mov
shr
mov
mov
and
sub
mov
mov
and
sub
mov
mov
add
add
mov
mov
or
add
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzwl
mov
imul
movzbl
mov
or
imul
mov
mov
shl
mov
mov
sub
movzbl
movzbl
add
mov
movb
movzbl
sub
mov
movw
push
call
push
call
push
push
push
call
mov
mov
shl
mov
mov
or
movzbl
mov
movzwl
xor
add
mov
movzbl
imul
imul
mov
mov
shr
mov
movzbl
mov
movzwl
and
mov
mov
sub
movzbl
movzwl
and
and
mov
mov
sub
mov
mov
imul
mov
mov
mov
movzwl
mov
movzwl
and
and
mov
movzbl
and
mov
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzwl
mov
or
mov
add
movzwl
mov
movb
movzbl
and
mov
movzwl
xor
mov
push
call
push
call
call
mov
sub
mov
mov
and
mov
mov
mov
mov
or
mov
mov
sub
mov
movzbl
imul
mov
mov
and
mov
movzwl
xor
mov
movzwl
mov
mov
shr
mov
mov
or
mov
mov
and
movzbl
or
mov
movzbl
sub
mov
movw
mov
mov
mov
movzwl
add
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
shl
mov
mov
shr
movzwl
movb
mov
movzbl
and
add
mov
mov
movzbl
imul
mov
push
call
push
call
push
push
call
mov
movzwl
mov
sub
movzwl
mov
sub
movzwl
mov
or
mov
mov
xor
movzwl
movb
mov
and
mov
movb
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
mov
mov
imul
mov
mov
sub
add
movzbl
mov
and
mov
movzwl
imul
mov
push
call
push
call
push
push
push
call
mov
mov
add
movzbl
mov
add
movzbl
mov
and
add
mov
mov
shr
mov
movzwl
imul
mov
add
mov
mov
movzwl
sub
mov
mov
add
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
xor
and
mov
mov
shl
movzwl
mov
add
mov
mov
movl
push
call
push
call
call
mov
sub
mov
mov
sub
sub
mov
movzbl
or
mov
imul
mov
movzbl
and
mov
movzbl
sub
mov
movzbl
xor
mov
sub
mov
mov
mov
mov
imul
mov
mov
and
xor
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
movzwl
mov
add
sub
movzwl
mov
and
mov
sub
movzbl
mov
imul
movzbl
movl
mov
mov
push
call
push
call
movl
mov
movzbl
mov
movzwl
mov
shr
movzwl
mov
shr
movzbl
mov
mov
mov
imul
mov
movzbl
mov
mov
mov
mov
movzbl
mov
add
movzbl
mov
add
movzwl
mov
sub
movzwl
mov
imul
mov
sub
movzbl
mov
and
xor
mov
movzbl
mov
mov
mov
mov
and
mov
imul
mov
movl
mov
shr
movzwl
mov
shr
movzwl
mov
sub
movzwl
mov
shl
movzwl
mov
and
movzwl
mov
imul
mov
mov
mov
mov
test
je
mov
and
sub
mov
movl
movzbl
and
add
mov
mov
movzbl
mov
mov
movl
mov
or
mov
mov
add
mov
mov
mov
movl
mov
add
mov
mov
mov
mov
mov
movl
mov
sub
mov
mov
mov
mov
or
mov
jmp
mov
movzbl
mov
shl
movzwl
mov
and
or
movzwl
mov
imul
imul
movzbl
mov
shl
movzwl
movb
mov
imul
mov
mov
xor
add
mov
mov
mov
mov
add
movzwl
mov
and
mov
imul
movzwl
mov
sub
add
movzwl
mov
or
or
movzwl
mov
add
mov
mov
add
sub
mov
mov
and
imul
movzwl
mov
movzwl
mov
and
movzwl
mov
sub
movzbl
mov
sub
movzbl
mov
movzwl
mov
xor
and
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzwl
mov
shr
movzwl
mov
movzwl
mov
or
mov
movb
movzbl
and
mov
push
call
push
call
mov
shr
movzwl
mov
add
movzwl
mov
shr
movzwl
mov
movzwl
mov
xor
movzwl
movzbl
mov
mov
mov
mov
mov
mov
or
add
mov
mov
imul
add
movzwl
mov
add
mov
mov
and
mov
add
movzwl
mov
sub
mov
mov
mov
movzbl
or
mov
movzbl
or
or
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
movzwl
mov
xor
sub
movzwl
mov
xor
mov
sub
mov
mov
add
movzwl
mov
sub
mov
mov
movzbl
sub
add
mov
movzwl
mov
movl
mov
shr
movzwl
mov
sub
mov
mov
and
imul
movzwl
mov
xor
mov
sub
mov
mov
movzwl
movzbl
or
and
mov
movzwl
movzbl
xor
imul
mov
movl
mov
movzwl
mov
shr
mov
mov
and
and
movzwl
mov
shr
movzwl
mov
sub
mov
mov
movzbl
sub
mov
mov
or
add
mov
mov
test
je
movzbl
imul
mov
mov
or
mov
mov
mov
mov
mov
xor
mov
mov
movzbl
and
imul
mov
movw
mov
and
imul
mov
mov
movzbl
imul
movzbl
add
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
mov
movzbl
mov
movzwl
mov
mov
add
mov
movzbl
movzwl
and
mov
movzbl
movzbl
add
movzbl
sub
mov
movb
mov
sub
mov
mov
mov
movzbl
imul
mov
movzbl
or
imul
mov
mov
add
mov
jmp
mov
mov
mov
shl
movzwl
mov
movzwl
mov
shr
movzwl
movzwl
mov
movb
movb
mov
add
mov
mov
add
sub
mov
mov
and
movzwl
mov
sub
movzwl
mov
mov
sub
mov
movzbl
or
mov
movzbl
and
sub
mov
movzbl
mov
movzbl
movzbl
or
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
imul
mov
add
mov
mov
add
mov
mov
sub
mov
mov
movzbl
and
xor
mov
mov
xor
mov
push
call
push
call
push
push
push
call
mov
mov
mov
mov
shl
mov
mov
and
mov
mov
shr
mov
mov
mov
movb
mov
and
mov
mov
sub
mov
movzbl
movzbl
and
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
imul
mov
mov
shr
mov
mov
movzwl
movzwl
xor
mov
add
mov
mov
movzwl
add
add
mov
push
call
push
call
push
call
mov
cmp
je
push
push
push
push
call
mov
mov
movzwl
cmp
je
call
mov
and
movzwl
movl
mov
and
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzbl
mov
shl
mov
mov
shr
mov
movl
mov
mov
push
call
push
call
push
push
call
mov
shr
movzbl
mov
shr
mov
mov
mov
add
mov
mov
imul
mov
movzbl
sub
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
shl
movzbl
cmp
je
push
push
call
cmp
je
push
call
mov
test
je
push
push
push
push
call
mov
or
add
mov
mov
mov
mov
mov
push
call
push
call
mov
shl
mov
mov
shl
mov
cmpw
je
call
mov
test
je
push
push
push
call
movzwl
mov
movzwl
mov
movzwl
or
sub
mov
movzbl
add
movzwl
sub
mov
mov
test
je
movzwl
push
push
push
call
mov
and
xor
mov
mov
test
je
push
movzwl
push
call
cmp
je
push
push
push
call
mov
movzbl
or
movzwl
add
movzbl
cmp
je
push
push
call
mov
and
mov
mov
or
mov
movzbl
xor
mov
mov
test
je
movzbl
push
push
movzbl
push
push
call
mov
sub
mov
mov
test
je
push
push
call
mov
add
mov
movw
movw
mov
shr
mov
movzbl
shr
mov
mov
sub
mov
movzbl
add
mov
mov
or
mov
mov
sub
sub
mov
mov
movzbl
sub
mov
movzwl
mov
mov
xor
mov
sub
movzbl
mov
or
mov
mov
sub
mov
mov
mov
movzwl
xor
mov
mov
mov
mov
movzbl
or
or
mov
movzwl
mov
movzwl
sub
mov
movzwl
or
movzwl
sub
mov
movzwl
xor
movzwl
sub
movzbl
mov
xor
movzwl
imul
mov
mov
movzbl
mov
mov
mov
movzwl
shl
mov
movzwl
or
movzbl
mov
xor
mov
imul
mov
movzbl
and
movzbl
sub
mov
movzbl
movzwl
xor
xor
mov
mov
or
mov
movzwl
add
mov
mov
sub
movzbl
movzwl
imul
mov
movzbl
or
mov
sub
mov
movzwl
shr
mov
mov
add
movzbl
mov
mov
movzwl
xor
mov
push
push
push
call
mov
movzbl
movzwl
and
mov
imul
mov
mov
imul
add
mov
mov
xor
movzbl
add
movzbl
mov
mov
movb
mov
xor
and
mov
mov
mov
movzbl
imul
sub
mov
movzbl
sub
mov
mov
shl
mov
mov
movzbl
or
mov
movb
mov
movzwl
and
or
mov
mov
xor
add
mov
mov
add
movzwl
add
mov
movzwl
movzbl
add
mov
movzwl
add
mov
mov
shr
mov
mov
movzbl
xor
mov
movzwl
shl
mov
movzbl
or
mov
mov
xor
imul
mov
movzwl
xor
movzwl
imul
mov
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
imul
mov
add
movzwl
mov
test
je
push
call
mov
mov
push
call
push
call
push
push
call
mov
test
je
push
push
push
push
call
mov
test
je
push
push
push
push
call
mov
test
je
push
push
push
push
call
mov
or
mov
mov
test
je
push
push
call
mov
test
je
push
call
mov
movzwl
movb
mov
or
movzwl
mov
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
movzbl
mov
sub
add
mov
movl
movl
mov
mov
mov
or
mov
push
call
push
call
push
push
push
call
movzbl
mov
mov
or
mov
mov
add
movzwl
movzbl
add
movzwl
mov
movzbl
mov
xor
mov
movb
mov
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
and
movzwl
mov
sub
movzbl
mov
movzbl
mov
mov
mov
add
movzwl
mov
or
xor
mov
mov
or
imul
mov
mov
mov
mov
movzwl
and
add
mov
push
call
push
call
push
call
mov
mov
mov
mov
and
movzbl
mov
or
mov
mov
shl
mov
mov
shr
movzwl
mov
xor
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
mov
mov
and
mov
imul
movzbl
mov
mov
and
sub
movzbl
mov
or
movzwl
mov
and
mov
mov
mov
push
call
push
call
call
mov
sub
movzwl
mov
sub
movzbl
mov
movzwl
mov
movzbl
mov
and
and
movzbl
mov
imul
mov
mov
xor
mov
mov
or
sub
mov
movl
movl
mov
shl
movzbl
mov
and
mov
imul
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
xor
imul
movzwl
mov
mov
mov
xor
mov
movl
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
and
or
movzbl
mov
movzbl
mov
xor
or
movzbl
mov
sub
sub
mov
push
call
push
call
call
movzbl
mov
shr
mov
mov
movzwl
xor
mov
movzwl
mov
or
mov
xor
and
mov
movzwl
add
mov
mov
and
mov
movzwl
xor
and
movzbl
movzwl
shr
movzbl
mov
and
movzbl
mov
movzbl
movzwl
and
mov
movw
movzwl
xor
and
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
or
and
movzbl
mov
mov
movzbl
mov
xor
mov
imul
mov
mov
mov
mov
mov
mov
or
sub
mov
mov
movzwl
add
mov
push
call
push
call
movl
mov
add
movzbl
movzwl
or
sub
mov
mov
imul
movzwl
add
mov
mov
xor
movzbl
mov
and
mov
movl
mov
xor
mov
movzwl
add
sub
mov
mov
mov
mov
and
mov
mov
movzwl
xor
mov
mov
mov
shl
mov
mov
xor
mov
mov
or
mov
movl
mov
xor
sub
mov
mov
shr
mov
movzwl
sub
mov
movzwl
mov
movzwl
shr
mov
mov
imul
mov
movzwl
mov
movzwl
mov
mov
add
mov
mov
sub
movzwl
sub
mov
mov
test
je
movl
movzwl
sub
mov
mov
movzbl
mov
mov
mov
mov
movzbl
or
mov
mov
and
sub
mov
mov
add
mov
mov
mov
mov
imul
add
mov
mov
xor
sub
mov
mov
and
imul
mov
mov
add
mov
mov
xor
imul
mov
movzbl
and
movzbl
or
mov
mov
sub
mov
mov
add
mov
mov
and
mov
sub
mov
mov
and
mov
imul
mov
jmp
mov
movzwl
shl
mov
mov
movzwl
and
mov
mov
or
imul
mov
mov
mov
mov
add
mov
mov
imul
mov
mov
and
mov
mov
or
imul
mov
mov
mov
mov
shr
mov
mov
and
movzbl
add
mov
movzwl
mov
movzwl
sub
mov
movzbl
or
movzbl
sub
mov
movzbl
add
movzbl
mov
sub
sub
mov
mov
add
mov
movzbl
or
movzbl
sub
mov
mov
movzbl
mov
or
add
mov
mov
add
mov
mov
and
movzbl
imul
mov
mov
mov
movb
movzwl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
cld
add
push
daa
add
sbb
add
sub
add
inc
daa
add
pusha
daa
add
js
add
xchg
daa
add
movsb
daa
add
mov
add
lret
add
daa
add
lock
add
cld
daa
add
add
add
push
sub
add
add
sub
add
add
push
sub
add
add
je
add
subb
add
sub
add
add
les
add
into
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
ficoms
inc
add
adc
repnz
cli
dec
mov
xchg
xor
sub
pop
icebp
adc
dec
leave
mov
cld
loop
popl
sbb
clc
shl
xchg
or
out
push
jmp
repz
int3
adc
sbb
xchg
out
sbb
int3
test
and
mov
mov
xor
xchg
cmp
lods
mov
sub
lock
adc
push
cmp
addr16
into
push
bound
push
pushf
pop
pop
lods
jns
jae
mov
mov
mov
and
sbb
mov
into
inc
bound
inc
dec
pop
xchg
int3
cwtl
pop
mov
addr16
sbb
js
imul
mov
mov
cmp
inc
sti
mov
in
dec
std
fadds
and
scas
popf
dec
js
and
jmp
lret
int3
test
inc
sub
pop
inc
pop
and
adc
pop
push
mov
repnz
mov
dec
subb
mov
stos
adc
leave
and
mov
push
mov
leave
and
xorb
mov
pop
enter
loope
mov
pop
push
leave
sbb
adc
inc
sub
fsubr
sbb
mov
sub
lret
mov
enter
jne
stos
repz
iret
imul
mov
and
push
xchg
mov
fistl
xchg
cs
jl
add
loopne
inc
or
pop
loope
andl
dec
test
or
dec
stc
mov
out
ja
loopne
movl
sbb
or
loop
jb
push
leave
scas
mov
xlat
sbb
push
fsubs
jl
scas
and
adc
sub
imul
sahf
les
pop
test
and
aaa
and
scas
stos
popa
mov
rorb
popf
imul
into
jl
cli
movsl
mov
stos
lods
jns
pop
mov
mov
sub
cmp
mov
cltd
sti
mov
int3
stos
int3
addr16
addl
sub
and
push
xchg
subb
or
pop
adcl
pop
jno
mov
leave
push
addr16
and
loop
dec
rcrb
lds
inc
and
scas
loopne
test
sbb
lret
loop
push
adc
lods
test
xchg
sbbb
jo
das
imul
and
imul
sub
pop
shlb
or
mov
mov
pop
push
leave
out
imul
adc
negl
pop
or
or
iret
ret
and
loop
dec
shrb
shrl
and
daa
lcall
sub
dec
mov
aam
or
sbb
sbb
loope
jo
push
jb
popa
int
and
not
jb
ja
adc
sahf
cld
pusha
mov
push
or
mov
pop
shlb
or
mov
xlat
icebp
fsts
and
lahf
sub
pop
and
cmpsl
xchg
jns
ss
push
adc
stos
pop
inc
add
pop
lret
sbb
lahf
scas
scas
jns
jl
and
scas
out
push
dec
shrb
fldenv
xchg
popa
lret
xchg
mov
inc
fldenv
shll
popa
filds
push
xchg
mov
fcoms
cli
mov
pop
push
iret
xor
filds
xor
enter
hlt
mov
push
ja
or
sub
mov
fs
inc
pop
push
inc
fiaddl
add
add
inc
out
push
xchg
mov
fisubl
cwtl
ss
xor
and
in
mov
leave
dec
jmp
push
ss
imul
andb
test
lds
fistl
add
push
mov
fistpl
leave
jae
outsl
mov
adc
xchg
mov
sbb
je
mov
add
cmp
pop
inc
pop
push
push
add
xlat
xchg
cmpsl
ljmp
mov
stos
mov
or
or
pop
xchg
sarb
jnp
sub
push
leave
and
sub
sbb
outsl
stc
mov
fs
outsl
lret
insl
push
xor
push
adc
mov
dec
in
adc
add
bound
mov
das
fidivs
dec
mulb
sub
pushf
les
pop
adc
sub
pusha
arpl
sbb
aaa
clc
and
inc
jbe
mov
dec
jns
mov
leave
mov
or
cld
dec
mov
push
fwait
dec
mov
dec
outsb
lods
and
faddl
es
int3
mov
cli
push
jle
inc
lods
sub
dec
dec
push
iret
ret
pop
pop
out
scas
aam
sbb
insb
push
push
std
pop
add
push
pop
push
inc
arpl
shrl
aad
test
sbb
call
push
xchg
cmp
sub
and
add
dec
lock
call
xor
inc
popf
sub
lret
lods
pusha
push
xlat
or
out
sbb
cs
jb
fstpl
or
sub
sub
gs
out
out
call
adc
inc
pusha
imul
dec
jge
adcl
lock
aad
dec
or
push
mov
lea
push
arpl
insb
mov
pop
add
jo
cli
dec
roll
add
jne
mov
jnp
imul
adc
adc
ret
jmp
inc
pop
imul
sub
in
lods
mov
jmp
ljmp
lret
or
sub
enter
lods
in
int3
lret
icebp
inc
jne
and
xchg
mov
xor
bound
push
cs
inc
lods
js
dec
sbb
jnp
data16
pop
jne
and
popaw
mov
gs
sbb
jnp
data16
pop
push
mov
cmp
scas
sub
xchg
add
enter
and
fisubrl
dec
shll
pop
loopne
js
adc
pop
pusha
lret
inc
sbb
jno
jne
push
xchg
adc
pop
xchg
ret
pop
enter
out
sub
mov
dec
lock
test
pop
lods
lret
add
std
ss
inc
lea
pop
mov
mov
fisubs
jae
rorb
daa
mov
je
jge
ds
mov
pop
jo
in
mov
leave
push
jge
test
lret
pop
shlb
clc
pop
pop
jmp
rcrb
xchg
and
dec
test
jnp
sub
rcl
ljmp
int
jnp
lea
push
dec
jae
push
push
in
mov
fnstcw
cmp
clc
push
mov
dec
loopne
push
fbstp
insb
mov
adc
popa
adc
xor
dec
mov
popa
jl
mov
pop
sub
fnstsw
inc
js
push
dec
inc
sbb
or
jae
dec
sbb
sbb
push
gs
bound
pop
lea
loopne
push
dec
jae
push
push
sbbl
rcrl
in
fiadds
fwait
dec
cmp
jae
rcll
movsl
rclb
pop
scas
hlt
or
adc
xchg
push
dec
mov
lcall
pop
int3
inc
icebp
mov
push
jmp
lret
and
add
jne
pusha
in
sbb
mov
adc
and
push
mov
push
jae
dec
inc
sbb
rclb
sub
push
jnp
lea
lret
mov
jo
dec
and
and
shrl
shll
test
jne
aam
sub
sub
lahf
push
dec
je
and
xlat
fnstsw
add
cmp
dec
inc
mov
loopne
dec
out
xchg
inc
pop
push
jge
test
outsb
xchg
jmp
lods
int
lret
daa
enter
jg
inc
fsubr
cli
or
jne
scas
jmp
gs
and
pushf
or
popf
sub
pop
mov
cmp
xrelease
mov
sbb
sbb
sub
xchg
int3
scas
xlat
lods
popa
jp
shl
mov
inc
and
aam
les
fs
ja
lods
mov
cmp
clc
sbb
inc
or
addr16
pop
or
mov
pop
lds
pop
ret
jge
push
adc
popf
add
lret
movb
aad
addr16
pop
push
jo,pn
push
je
sub
push
sahf
cmpsl
test
xor
sbb
mov
sbb
lods
mov
in
cmp
inc
cltd
inc
push
mov
or
mov
je
and
dec
fwait
and
scas
aaa
cmpsb
mov
adc
adc
jecxz
pop
xorl
jge
sbb
push
das
sbb
movsl
dec
lcall
dec
leave
mov
mov
movsl
inc
nop
or
dec
dec
and
rdtsc
scas
cmp
xchg
sbb
cmp
mov
adc
test
pop
pop
jge
push
jecxz
cmc
lea
cmpsl
push
addr16
jno
mov
fiadds
int
or
int
dec
aaa
not
push
or
je
fsubs
je
shll
leave
push
pop
jo
mov
out
ds
loope
int
daa
adc
cmp
scas
or
lods
ja
or
sub
mov
sahf
inc
inc
mov
fstpt
inc
xchg
adcb
or
ljmp
jb
insl
jge
shlb
inc
cmpsl
pop
aas
dec
stos
pushf
jne
push
pusha
leave
in
ja
imul
fs
mov
jo
and
iret
cwtl
dec
jp
clc
jb
xchg
inc
dec
adc
dec
mov
lods
cmp
fcomp
das
stos
mov
dec
mov
js
icebp
popf
arpl
cmp
loop
fstpt
push
add
movb
movsb
sarl
lahf
fcomp
xor
pop
push
ret
stc
popf
fmuls
lock
addr16
fidivrl
pop
push
test
pushf
pop
andl
dec
call
cltd
inc
sarl
fidivl
push
ror
push
shll
inc
dec
push
push
aas
jb
sbb
xor
cmp
jmp
repz
sbb
cwtl
ret
push
dec
inc
icebp
sub
int
cmpsl
xchg
xchg
push
xor
dec
fs
sub
js
jmp
mov
pop
mov
or
pop
dec
ss
or
jnp
xor
inc
push
rorb
pop
mov
hlt
jo
out
xchg
into
fdivrs
jno
cmp
clc
sub
mov
dec
xor
xchg
mov
outsl
fcoms
inc
repnz
xor
mov
add
clc
cmp
fsubs
mov
or
repnz
inc
in
add
leave
dec
es
pop
jp
rol
ds
sub
add
sub
in
clc
lods
jp
inc
inc
cmpsl
leave
mov
stos
and
pushf
mov
lahf
pusha
lods
xor
xor
cli
mov
fdivrp
ja
aad
push
push
xchg
popa
push
clc
mov
and
inc
lock
inc
das
lods
mov
jl
test
mov
dec
int
and
dec
es
std
push
add
or
sbb
cltd
insl
dec
and
mov
dec
cltd
adc
or
jecxz
push
adc
xor
shlb
mov
mov
addr16
dec
xchg
jnp
mov
sbb
cltd
ss
push
dec
add
movsl
dec
mov
js
inc
jo
xchg
fldl
jp
sbb
lds
inc
loope
jecxz
pop
lds
push
dec
flds
mov
sbb
jnp
cmp
sub
xor
leave
clc
cmp
dec
lahf
orl
clc
or
movsb
clc
and
mov
fsubrs
mov
out
push
jmp
push
adc
sub
nop
cmc
das
mov
bound
pop
movsl
mov
adc
xor
pop
mov
dec
sub
sub
out
lods
test
lds
dec
icebp
into
insl
xor
js
stc
test
in
dec
stos
jnp
mov
dec
dec
sub
adc
mov
mov
pop
mov
int3
inc
subb
xorl
mov
dec
jl
nop
inc
jnp
stc
insl
dec
sete
fst
stos
mov
fdivs
lea
les
js
cmp
pusha
push
mov
add
dec
sbb
xchg
cmp
fcomp
xchg
cmp
lods
enter
fisubrs
sarl
add
loop
mov
test
dec
clc
fsubr
jl
mov
push
fsubrs
dec
in
es
imul
jae
and
add
add
js
pusha
enter
test
pop
sbb
adc
dec
das
mov
cli
sarl
dec
cmp
clc
dec
mov
movsl
mov
out
outsb
and
aas
js
test
pop
lods
outsb
clc
cmp
inc
iret
js
add
sbb
jl
and
dec
mov
xor
cli
dec
mov
hlt
repz
jo
push
pop
xchg
jg
pop
xor
nop
inc
pusha
sbbb
or
inc
sti
dec
clc
push
js
setae
mov
sbb
imul
js
pop
or
divl
cmp
bnd
pop
scas
jo
dec
jb
pusha
das
hlt
daa
sbb
pop
dec
es
push
lods
or
mov
shlb
xor
js
arpl
clc
xor
popf
popa
push
clc
mov
fcomi
pop
cmc
outsl
push
mov
lret
insl
jl,pt
test
test
mov
push
mov
ja
sti
aad
fcmovbe
sub
lods
xor
jae
test
or
clc
add
cmp
sub
in
mov
inc
arpl
popa
les
xor
sub
fsubs
jl
loopne
repz
enter
imul
push
imul
pop
insl
push
jle
aam
xchg
xor
push
outsl
dec
popf
or
adc
sub
and
inc
mov
sub
jnp
xchg
leave
nop
ljmp
lcall
or
pop
jno
add
scas
push
lea
pop
and
pop
rcrl
dec
mov
mov
loope
into
or
pushf
ds
sti
aas
push
cmp
mov
xchg
ret
mov
cmp
insl
mov
insl
lds
insb
mov
jp
mov
lret
cmp
push
jae
fnstcw
shl
sbb
pop
and
jb
repz
mov
add
add
icebp
fadds
lcall
test
imul
and
add
loopne
outsb
push
out
add
fwait
aas
mov
mov
adc
pop
test
cmp
mov
bnd
jae
imul
pop
hlt
mov
imul
or
loope
cmc
out
outsl
xor
imul
jns
dec
inc
inc
sbb
int
test
lock
dec
stc
pop
cwtl
sbb
out
add
test
inc
jbe
loop
pop
push
aad
mov
and
add
and
mov
pushl
dec
inc
jecxz
xlat
or
mov
ja
mov
fstpl
or
mov
insl
jg
cmp
inc
gs
shlb
loop
stc
xor
jp
or
das
out
inc
inc
ret
lods
jmp
push
or
jmp
hlt
add
aad
mov
mov
jmp
inc
adc
es
push
or
mov
mov
xchg
push
in
dec
es
push
adcb
mov
xor
lret
jmp
jne
movsb
xchg
das
dec
pop
adc
jmp
sarb
jecxz
mov
inc
imul
jl
nop
xchg
or
push
js
and
dec
shrb
aaa
inc
push
push
mov
xchg
push
jle
push
jmp
push
jo
xchg
fldt
imul
push
push
pop
es
mov
cmp
xchg
mov
outsb
pop
mov
mov
pop
push
negb
repnz
cmpb
cmp
andl
pushl
loopne
out
inc
sub
cmc
in
cltd
push
inc
dec
scas
jns
outsl
leave
pop
mov
enter
push
sbb
stc
popa
xchg
imul
xlat
and
lods
imul
cwtl
sbb
rcl
cmpsl
mov
insb
mov
add
add
imul
call
insb
into
rclb
pop
out
cmp
lret
pop
push
lea
add
sub
leave
xchg
mov
mov
push
cmp
arpl
inc
popf
sub
fldenv
lret
pop
pop
mov
into
sbb
sub
cwtl
cld
mov
jl
jge
lret
adc
mov
push
cmp
data16
jnp
push
mov
jp
xor
insl
cmp
enter
cmc
sbb
jmp
cmp
sub
pop
cli
cmp
sub
mov
idivb
sub
lea
lock
sub
xchg
pop
repz
sub
in
pop
out
pop
adcb
stos
imul
frstor
jg
mov
jmp
sahf
push
jo
mov
jb
mov
je
xor
loop
daa
scas
jbe
xchg
nop
pushf
mov
push
mov
ret
out
mov
icebp
mov
ret
out
mov
stos
mov
sarl
adc
stos
mov
inc
sbb
cmp
sbb
and
subl
pop
stos
mov
scas
push
stos
cmpsb
cmp
fwait
scas
or
xchg
scas
sbb
xchg
scas
xor
xchg
inc
ficomps
pop
add
pop
sbb
lock
fwait
mov
into
test
cmp
inc
inc
cld
adcb
inc
loopne
jbe
pop
lahf
jg
mov
dec
pop
mov
loopne
aam
pandn
adc
xor
popf
or
or
xlat
sbb
inc
and
bound
gs
cwtl
jle
sahf
xor
xchg
sub
jle
ss
inc
push
dec
sub
xchg
rcl
loopne
jbe
or
orl
test
call
test
add
add
jbe
pop
sub
ss
pop
lods
negl
push
inc
jae
mov
out
lret
imull
lcall
mov
dec
in
push
jl
mov
sub
mov
mov
sub
mov
lret
mov
xchg
jmp
xlat
mov
addr16
mov
push
in
addr16
notl
cmc
notl
addr16
notl
addr16
notl
addr16
negl
out
sahf
xlat
fisubl
loopw
cwtl
xlat
fisubs
addr16
negl
mov
or
xchg
popf
fsubp
imul
jl
and
in
adc
out
or
inc
jmp
popf
inc
jmp
mov
inc
icebp
data16
rcrl
data16
rcrl
mov
inc
lds
shll
mov
addl
popl
data16
test
data16
scas
mov
data16
mov
mov
data16
fimuls
sar
pop
cli
call
mov
push
or
sub
or
add
scas
mov
or
mov
sub
or
sub
or
or
cmpsb
mov
adc
mov
sub
or
sub
or
adc
mov
sub
mov
jnp
lea
push
or
sub
mov
or
mov
mov
arpl
cmpl
or
test
imul
mov
adc
mov
fwait
mov
insl
out
xchg
adc
add
jmp
push
push
std
inc
jno
add
add
out
aad
push
stc
inc
jae
jecxz
sbb
inc
jge
out
sbb
xchg
sbb
add
imul
imul
fmul
stos
pop
loopne
dec
fsubrs
loopne
imul
cmc
sahf
push
push
pushf
sub
pop
push
sahf
sbb
pop
push
cwtl
sub
push
lcall
push
in
daa
sahf
addr16
out
pop
fwait
dec
popf
adc
cs
fwait
xchg
sub
dec
out
cs
mov
push
inc
push
arpl
mov
sbb
xchg
sbb
mov
fldt
mov
idivb
idivb
inc
sbb
testb
outsl
divb
insb
divb
fldt
lahf
dec
add
outsb
cwtl
push
inc
inc
fdivrs
jg
jp
mov
jnp
pop
cmpsl
inc
in
cmp
dec
pop
pop
inc
in
pop
test
lods
pop
pop
xchg
sarl
stc
jb
ds
sub
push
inc
sub
pop
notb
mov
leave
jnp
js,pt
cmp
jp,pt
aas
cmp
adc
xor
adc
xor
and
jno
mov
les
aaa
pop
into
adc
into
and
incb
pusha
out
clc
test
nop
insb
out
out
mov
popa
jecxz
scas
cmc
mov
xchg
cmp
repnz
fmull
and
dec
in
mov
jnp
inc
scas
out
test
sarb
inc
scas
jmp
jecxz
scas
jmp
pop
popf
jno
and
in
xchg
nop
jae
pop
scas
out
xchg
nop
or
js
sahf
test
nop
or
jp
cwtl
test
nop
or
jl
lcall
scas
xchg
test
nop
add
jo
xchg
test
nop
add
jb
nop
test
nop
add
je
xchg
test
nop
push
jecxz
scas
mov
dec
scas
mov
dec
scas
mov
idivb
mov
mov
jmp
mov
xchg
testb
dec
testb
push
testb
pop
add
jo
add
and
mov
and
pop
mov
ja
push
inc
ficomps
ja
aad
test
mov
xchg
mov
xchg
stos
and
xchg
lods
and
repz
xchg
mov
ljmp
rorb
out
jbe
subb
fwait
in
testb
cs
sahf
repz
mov
iret
fwait
jmp
cs
fwait
out
sahf
leave
push
mov
leave
fwait
in
sahf
decl
xchg
lds
cltd
sbb
cld
test
sub
test
cmp
sbb
test
cmp
sbb
mov
sub
pop
daa
sbb
test
aas
sbb
dec
pop
xor
loopne
xor
jbe
xchg
out
pop
ss
inc
shrb
pop
mov
adc
mov
xchg
cli
pop
popf
push
jne
les
scas
jns
mov
xchg
lods
mov
sbb
test
cmp
push
ja
stos
addr16
test
xlat
inc
inc
enter
mov
cmpsb
daa
aad
cwtl
mov
jecxz
mov
popf
shlb
mov
mov
aad
cwtl
scas
mov
cmpsb
cmp
clc
xor
sbb
push
stos
jl
imul
dec
pop
ja
mov
imul
pop
imul
push
imul
mov
lds
iret
push
repz
imul
or
push
out
jl
imul
add
sbb
pusha
jno
rcrb
or
ja
ja
ret
adc
or
pop
add
mov
xchg
pop
jnp
add
jb
push
pop
push
xchg
jle
imul
add
mov
ja
stos
lock
int
pop
sbb
inc
jbe
fisttpl
adc
leave
dec
xchg
jb
jecxz
addl
notl
jl
repnz
mov
mov
inc
mov
cltd
testb
push
xchg
idivb
add
popa
add
leave
mov
mov
shld
jnp
test
testl
rcrb
cmp
shl
add
mov
adc
inc
mov
out
jl
mov
rorl
mov
jns
inc
dec
gs
outsl
cmp
ja
cwtd
dec
pusha
add
jbe
pop
testb
dec
jbe
test
add
jbe
pop
push
dec
add
icebp
jbe
pop
int3
dec
pop
cmp
xchg
push
sub
pop
loope
mov
mov
adc
adc
push
cli
push
into
sub
dec
mov
lds
mov
sub
cmp
sub
cmp
mov
aad
cwtl
mov
andl
and
xor
and
xor
mov
xchg
lods
mov
cmpsb
cmp
or
cmp
or
cmp
or
stos
mov
cmpsb
ds
cwtl
movsb
mov
cmpsb
xor
add
push
loopne
push
xlat
xchg
push
out
push
xor
push
xor
inc
ljmp
inc
call
xchg
bound
out
and
cwtl
repnz
pop
imul
dec
push
out
jl
imul
dec
imul
imul
inc
imul
inc
imul
inc
imul
imul
jns
or
enter
jnp
or
lret
lea
or
int3
push
lcall
add
add
push
xchg
jl
imul
jl
imul
jl
imul
ja
push
sbb
push
mov
sbb
fcoms
jl
imul
jl
imul
outsl
imul
jl
imul
jl
imul
jl
imul
jl
imul
jl
imul
sbb
imul
jl
imul
jl
imul
sbb
imul
jl
imul
sbb
imul
jl
push
js
call
clc
jl
jmp
cli
jl
imul
popa
imul
arpl
sbb
push
lock
imul
imul
sbb
sbb
imul
sbb
push
ljmp
push
in
adc
sbb
imul
adc
push
loop
pop
imul
or
sbb
imul
jl
imul
punpckhwd
sbb
imul
jl
imul
jl
imul
pop
imul
jl
imul
jl
imul
inc
push
inc
sbb
leave
mov
adc
popa
mov
bound
mov
lret
jmp
mov
xlat
dec
mov
shl
mov
ret
push
mov
sarl
mov
mov
push
jl
mov
pop
lods
js
imul
jl
imul
jl
imul
aam
sbb
movsb
rclb
xor
arpl
cmpsb
jg
mov
pop
shll
or
sub
fdivs
xchg
data16
fwait
pop
neg
xchg
lret
enter
lods
into
hlt
lret
lock
arpl
inc
and
leave
push
test
pop
push
push
adc
ret
sub
nop
jge
xchg
push
lods
jb
pop
jmp
cmp
push
jge
cwtl
pusha
int3
cmp
fs
add
add
add
push
push
jae
insb
mov
jne
cmp
clc
or
imul
add
sbb
jmp
popa
mov
pop
push
jae
jae
insb
jnp
sub
lods
jge
sbb
int3
fsubrp
ss
jns
into
out
push
jno
jnp
sarb
mov
enter
lods
dec
rcl
push
push
les
fisttpl
ret
dec
sti
inc
dec
sti
les
adc
pop
dec
lret
or
sti
fdivrs
adc
pop
inc
lret
ficompl
and
fisubrs
or
scas
push
pop
sub
fistpl
mov
push
popf
pop
fidivrs
or
sub
fninit
int
adc
enter
lods
adc
add
add
xchg
cmpsl
aad
dec
cwtl
in
movsl
mov
xchg
rorl
jmp
lods
mov
dec
add
and
sarl
lret
aad
dec
hlt
enter
clc
arpl
jnp
data16
xchg
xor
push
arpl
inc
mov
sub
fstpt
iret
subl
jecxz
cltd
addr16
imul
call
popf
sbb
mov
pop
dec
js
sub
fstpl
ss
ja
mov
dec
decl
push
in
popa
insb
sbb
loopne
mov
gs
dec
icebp
push
mov
dec
in
push
mov
inc
sar
fstpt
adc
inc
push
or
add
add
dec
sub
orl
inc
dec
add
mov
loop
shl
loopne
push
in
mov
dec
daa
inc
ss
inc
pushw
adc
bound
xor
pop
test
fimull
lock
int
lods
xor
cmp
mov
mov
aaa
pop
dec
mov
xchg
xor
xor
int3
insb
repz
loop
jbe
xor
xor
fs
xor
jle
or
cmp
pop
push
cli
mov
ja
mov
and
int3
aas
dec
insl
sbb
mov
jmp
aas
xor
dec
cmp
fwait
jo
pop
out
mov
add
adc
sub
enter
sbb
xchg
jnp
adc
push
push
aas
push
adc
pop
dec
jp
mov
insb
repnz
adc
push
leave
jbe
call
jne
jl
mov
push
mov
jmp
mov
inc
lea
xor
and
dec
pop
rorl
push
addr16
rolb
xor
adc
adc
adcl
pop
or
jne
sub
lds
push
icebp
xchg
std
dec
scas
inc
dec
jae
mov
sub
sbb
popf
dec
gs
lret
movsb
ficompl
in
push
dec
repnz
adc
pop
or
or
push
mov
mov
adc
mov
and
imulb
ljmp
dec
xchg
gs
mov
cld
sub
insl
add
fst
dec
repz
aaa
mov
push
call
push
sbb
inc
jo
popa
adc
xchg
pop
or
jmp
or
push
sbb
lcall
stos
bound
jbe
in
sbb
jae
sbb
push
dec
jge
dec
lock
ds
and
das
mov
pop
mov
xchg
pop
inc
nop
cmp
cmp
loope
and
mov
mov
sub
inc
adc
clc
aaa
cmp
repnz
push
or
xor
ret
xor
and
inc
int3
ja
sti
cmp
lahf
shlb
xchg
jecxz
rorb
mov
xor
add
ror
pop
mov
outsl
cmp
xlat
dec
out
cwtl
xlat
mov
cmpsb
movsl
mov
gs
push
bound
sti
pop
js
adc
idivl
sub
mov
add
mov
incb
inc
imul
pop
adc
pop
jl
push
sbb
pop
push
mov
pop
push
adc
ret
imul
lahf
jae
dec
add
add
js
aaa
add
cmp
cmp
test
ss
mov
sub
and
push
mov
pop
push
outsl
arpl
gs
std
fidivl
loop
cs
jl
xchg
push
mov
xor
fsts
lods
movsb
inc
sub
sub
mov
and
pop
mov
arpl
mov
dec
jmp
lcall
pop
add
jle
xchg
sti
dec
pop
cmp
add
xor
mov
push
jge
jbe
test
loopne
stos
sub
stos
hlt
mov
lret
mov
push
sub
jae
pop
jns
add
or
dec
insb
dec
imul
add
mov
lahf
imul
mov
push
dec
call
push
imul
insl
and
push
jmp
lret
xor
and
jb
decb
aaa
or
js
push
xor
lcall
sub
mov
mov
push
jae
dec
gs
pushf
and
pop
xor
add
shrb
or
dec
andb
jecxz
adc
mov
push
and
jo
test
xchg
xor
jge
pop
subb
inc
mov
xchg
mov
test
stos
and
xor
add
mov
fcmovnb
sbb
mov
xor
dec
or
lret
rclb
movsb
adc
adc
daa
sbb
sarl
inc
cmp
popa
pop
inc
adc
mov
andb
sbb
push
xchg
push
pop
daa
ljmp
lods
lcall
dec
mov
mov
cwtl
bound
sarl
aam
aad
ljmp
rclb
and
adc
sub
jg
pop
fxch
divb
dec
insl
jb
aas
roll
int
insl
push
mov
or
sub
shrl
dec
out
mov
div
and
incb
jle
addr16
push
pop
mov
push
dec
add
mov
out
aaa
mov
cmp
and
xor
aam
test
xchg
mov
out
and
push
and
lret
repnz
xchg
ror
lret
loop
fsubs
jae
movsl
mov
jp
imul
mul
insb
pop
inc
or
cmp
jo
pop
inc
cwtl
fisubl
rcrl
dec
push
test
out
jb
xchg
sub
xor
jbe
and
or
subb
lret
pop
adc
data16
cmpsb
push
in
stos
sub
add
cwtl
aaa
cmpsb
and
unpckhps
jecxz
mov
cltd
adc
or
pop
xchg
jp
or
mov
inc
cmp
mov
mov
xor
lods
cmpsl
or
sub
pop
sub
sub
mov
adc
xor
dec
push
pop
cmpb
add
add
add
adc
inc
push
cmp
jnp
adc
outsl
xchg
jle
pop
ja
jge
lock
out
push
insl
outsl
jg
out
xchg
mov
and
jl
js
cmpsb
cmp
jbe
out
call
gs
test
jg
push
pop
pop
dec
shrl
jne
mov
fxch
mov
out
lods
add
push
fmuls
bound
pop
int
loope
imul
out
call
addr16
dec
pop
fs
add
enter
push
cmp
jb
cmp
push
int3
es
jnp
jno
dec
mov
dec
pop
push
loopne
imull
inc
test
sbb
cli
mov
add
sub
pop
sub
adc
pop
daa
and
aaa
add
pop
mov
adc
sub
and
mov
xor
sub
add
and
pop
cmpb
push
mov
sbb
add
sub
cmp
test
dec
xchg
jne
mov
clc
adc
leave
dec
mov
push
cmp
mov
jno
das
jle
push
cltd
das
sbb
inc
pop
pop
into
and
mov
out
xor
inc
push
andb
push
insl
repnz
jne
lret
and
jnp
insl
loopne
dec
iret
sbb
aas
and
dec
push
adc
xchg
pop
sahf
sub
push
repnz
ficoml
out
dec
inc
push
xchg
mov
xchg
jg
mov
sbb
imul
test
out
and
xchg
pop
daa
push
jno
pop
xor
and
xor
pop
mov
aas
cmp
mov
xchg
rol
iret
or
lret
fcomp
inc
mov
or
in
adc
aaa
pop
dec
push
pop
lret
add
add
pop
or
icebp
pop
jnp
mov
aaa
pop
sbb
add
cmpsb
inc
jno
or
aam
sbb
and
push
pop
pop
ret
imul
pop
mov
jecxz
ret
les
inc
pop
inc
lds
out
adc
pop
dec
mov
fcmovnbe
push
mov
sbb
mov
pop
jge
adc
inc
dec
cmp
pop
outsb
daa
jg
fs
pusha
sub
sub
sub
cmpsl
mov
cmp
cmp
sbb
and
lret
dec
cmp
push
adc
inc
push
mov
dec
lds
mov
cld
adc
xchg
mov
pop
jle
stos
stos
push
int
in
fs
push
jno
out
aad
push
dec
pop
in
pop
iret
inc
jg
pusha
fwait
adcl
push
shll
clc
imul
lds
cmp
add
jno
push
mov
inc
in
cmpsl
aad
jle
dec
dec
repnz
enter
inc
call
sub
loop
dec
test
repnz
shr
gs
shr
lret
fists
dec
mov
jmp
ret
rcrl
push
aad
cld
jle
imul
mov
hlt
mov
je
xchg
pop
fstps
icebp
push
push
dec
stos
sahf
push
fxch
stos
dec
sahf
add
daa
es
setne
je
jnp
mov
das
insl
cmp
ljmp
imul
sub
mov
rcr
sub
dec
inc
js
pop
aad
loope
xchg
sbb
xlat
cs
xor
add
lret
repz
loop
add
xchg
jno
inc
mov
inc
mov
scas
out
mov
ja
ss
mov
out
jbe
outsl
pop
lcall
inc
mov
fildll
fcmovne
fstp
push
and
loope
in
call
insb
cmpsl
pop
fstl
pop
cmp
and
pop
mov
mov
jo
lods
test
cmp
sub
push
sarl
in
pop
stc
push
test
push
int3
push
mov
mov
fs
shll
popf
fbld
idiv
fwait
cmpsl
lret
mov
call
and
add
sub
sbb
sbb
repnz
jl
popa
cld
pusha
int
dec
mov
push
jo
fs
incb
sub
push
test
push
leave
push
cmpsb
xlat
clc
sbb
stos
sahf
mov
mov
stos
mov
lcall
aaa
andl
add
cwtl
and
mov
sbb
xchg
icebp
push
push
push
dec
lds
in
pusha
dec
push
push
imul
xchg
mov
cld
sarl
aam
lcall
xchg
fadds
test
aaa
and
test
jmp
or
cmp
xchg
or
push
jmp
ljmp
into
mov
rolb
out
xchg
dec
hlt
jp
jl
imul
ljmp
addr16
jne
sub
sbbb
cmc
pop
push
pop
push
pop
ror
cli
push
dec
call
subb
inc
xor
mov
or
pop
xchg
adc
sub
add
call
xchg
loope
xchg
dec
or
int3
popa
fisubs
adc
idiv
call
ret
mov
mov
xchg
popa
dec
jmp
fcmovu
inc
outsl
jp
aam
jge
icebp
xor
rorb
jg
enter
jmp
lea
aam
js
mov
mov
or
or
test
mov
sub
pop
ret
loope
lahf
outsl
pop
sti
test
test
push
push
pop
leave
cmc
je
fsubrl
lret
movl
sbb
inc
mov
ss
gs
mov
aam
xchg
insl
icebp
in
and
mov
fxch
add
test
je
repz
icebp
stos
outsl
iret
roll
inc
push
movsb
arpl
inc
and
sar
out
icebp
jl
jmp
jmp
mov
out
dec
repz
das
lods
jecxz
rcl
int3
outsl
ds
mov
pop
in
data16
jle
pop
cmp
cmp
inc
cmp
push
rorb
sub
adc
xchg
push
or
mov
sub
adc
shlb
sbb
mov
pusha
sub
xor
test
xchg
and
nop
sub
test
mov
add
paddsw
sbb
push
cmp
pop
push
xchg
movsb
in
loop
jbe
inc
in
loopne
pop
fnstcw
lret
int
ror
or
insb
jno
sub
lea
push
std
dec
dec
pop
je
push
aad
xchg
leave
lea
rcrl
adcb
mov
jecxz
das
aam
sub
inc
stos
dec
lret
leave
subl
sub
pop
outsl
mov
jmp
dec
imul
lock
push
sub
out
xchg
pop
data16
lods
aad
inc
or
sarb
in
push
mov
jae
mov
shl
loope
stos
dec
jmpw
and
or
repz
std
mov
js
and
pop
cwtl
cmpsl
add
fsubr
loope
mov
dec
dec
mov
sub
pop
popa
dec
scas
outsb
push
ljmp
popf
cmpsl
addr16
dec
dec
mov
es
dec
iret
xor
dec
imul
rcrb
icebp
xchg
idivb
pop
xor
add
xchg
pop
push
cmpsl
mov
cmpsb
scas
stc
adc
fcoms
lret
imul
int
xor
mov
fs
sbb
jg
and
add
add
inc
sub
sub
mov
cmpsl
push
inc
dec
jns
out
adc
imul
insb
and
pop
jge
sbb
dec
inc
bound
cmp
pop
sbb
popf
dec
pushf
pushf
sbb
lods
cmpsl
sahf
enter
xor
lret
hlt
out
addr16
idiv
push
out
int
cmpsl
cmp
arpl
mov
cltd
lahf
push
test
outsb
fs
imul
mov
push
mov
jno
test
xchg
cltd
xchg
push
jno
jae
mov
pop
cmp
aas
in
mov
inc
ror
psubd
add
jae
fstpl
xchg
adc
jno
sub
sti
nop
enter
adc
jno
shl
pop
iret
inc
lods
cmp
dec
and
and
adc
aas
cmpsb
fwait
aad
push
lret
lods
add
outsb
sbb
mov
bound
or
and
xor
lret
and
xchg
test
in
inc
loop
jecxz
lahf
pop
fxch
jo
popa
clc
push
rclb
jecxz
xchg
test
out
or
out
or
out
jl
fstp
push
lea
mov
rol
test
cmp
jle
lods
insl
outsb
pop
push
pop
addr16
cmp
jl
dec
lret
mov
repz
test
cmp
lret
or
dec
popa
mov
mov
push
add
add
imul
int
push
lock
sub
scas
cmp
pop
dec
pop
inc
lds
push
rolb
sbb
sbb
pop
jg
insb
ja
rcl
inc
pop
push
inc
cmc
and
push
or
adc
cmp
dec
into
sub
add
add
dec
js
jl
into
sub
lods
mov
aam
mov
mov
sub
push
push
adc
and
fdiv
std
mull
pop
repnz
and
fistpl
fnsave
add
call
orl
daa
ret
jae
inc
xor
mov
or
ret
jp
stos
fxch
mov
popf
std
shrl
imul
push
jmp
adc
xor
mov
or
rorb
iret
dec
js
jmp
dec
sub
or
mov
jae
jl
pop
in
loop
insb
mov
arpl
insl
mov
pop
loopne
jmp
nop
mov
mov
call
xchg
fcompl
enter
repz
in
cld
dec
scas
push
dec
add
cmc
jp
pop
iret
loop
push
mov
int3
cmp
sub
sub
inc
and
jns
sti
inc
bnd
add
cmp
push
xchg
sbb
mov
inc
or
xchg
addr16
dec
dec
jge
nop
add
jns
in
pop
adc
or
pop
pop
pop
xor
arpl
pusha
pop
dec
add
mov
stos
in
push
sbb
push
cmp
inc
in
pop
jne
sub
inc
outsl
and
leave
test
jmp
dec
loopne
cmpsl
mov
push
add
pop
xor
ljmp
dec
dec
push
inc
xchg
sbb
push
out
and
dec
dec
sbb
loopne
mov
push
rorl
jno
jmp
sti
outsb
push
jmp
xlat
inc
mov
xlat
mov
pop
and
and
dec
mov
xor
dec
notl
mov
jb
imul
sbb
std
and
jne
loop
out
bound
outsb
jbe
push
inc
data16
in
push
cmp
sbb
mov
inc
cmp
mov
dec
add
mov
and
and
ljmp
cmp
fcmove
fmull
dec
add
pop
dec
mov
inc
pop
sarl
dec
xchg
insb
xor
and
fld1
enter
stc
loopne
lds
nop
or
jg
inc
enter
push
add
add
mov
stos
subb
test
out
das
adc
adc
cwtl
sub
cmpsb
mov
int3
xchg
popf
xchg
lahf
xchg
movsb
rcrl
icebp
push
dec
lods
pusha
out
inc
xor
imul
pop
sbb
jge
outsl
mov
outsb
jmp
leave
daa
cli
addr16
push
frstor
jle
jg
addr16
sbb
jns
dec
inc
ret
push
cli
jge
arpl
and
cmp
dec
sarb
inc
fimull
dec
cmp
test
lea
cmp
jns
pop
jae
xor
addr16
leave
out
jle
push
dec
mov
leave
or
xchg
test
scas
daa
sub
daa
mov
push
and
dec
enter
rclb
nop
stos
dec
mov
lret
lahf
xchg
adc
add
lret
mov
sub
inc
xor
add
jnp
xchg
icebp
push
dec
sbb
xlat
xor
sub
jecxz
jmp
and
loopne
lret
adc
jle
mov
cmc
jp
cmpsb
dec
inc
scas
and
dec
lcall
mov
pop
fsubrp
jns
insl
mov
aam
ret
push
stos
inc
lret
call
cwtl
inc
je
ret
jnp
dec
in
sar
enter
mul
insb
lds
jp
push
je
nop
pop
scas
pop
stos
test
ret
mov
filds
sti
push
mov
mov
sub
or
scas
arpl
sub
add
add
jl
xor
xchg
incl
cmc
push
fildl
mov
pop
pop
inc
adc
mull
bound
jns
inc
inc
decl
aad
jge
imul
xchg
jle
sub
inc
sub
add
lcall
andb
push
loopne
inc
jg
arpl
daa
bound
pop
mov
imul
loop
pop
inc
push
or
inc
jle
fisubs
sbb
popf
add
leave
add
scas
mov
sub
xlat
arpl
fisttpll
test
push
mov
aad
xchg
xchg
lcall
xchg
mov
rorl
jmp
aam
pop
lret
hlt
mov
push
xchg
sub
daa
out
int3
inc
loopne
in
xlat
or
orl
aad
jbe
rcr
aad
or
pop
std
aam
lret
mov
mov
sbb
pushf
mov
in
mov
int
xor
loope
lret
test
pop
sbb
out
sub
fwait
xchg
sbb
and
aaa
aam
subl
out
ror
out
xchg
ljmp
lods
mov
movsl
sub
mov
aam
cli
pop
xor
dec
fcom
dec
mov
pop
sub
inc
xlat
lods
mov
pop
enter
repz
add
icebp
call
add
cld
negb
push
xchg
mov
rsm
int3
mov
pop
pop
lds
fwait
push
adc
or
ds
mov
adc
dec
in
lret
xchg
jns
cs
inc
xorl
mov
jmp
dec
popa
jno
mov
jle
fnstcw
out
jns
mov
and
push
mov
jmp
arpl
sbb
cltd
inc
rolb
lahf
jnp
gs
lret
add
mov
imul
cltd
mov
cmc
sahf
xchg
sbb
add
lcall
mov
mov
mov
adcb
xchg
fwait
xorl
popf
xchg
inc
mov
sub
xchg
stos
mov
cli
test
push
and
lods
sub
mull
fdivrs
iret
leave
bnd
mov
cmp
aaa
cld
mov
into
mov
lret
push
mov
test
icebp
jge
insb
je
pop
fistl
push
bound
outsb
scas
test
fs
outsb
xchg
inc
push
push
shl
jae
inc
pop
pop
dec
shll
jge
push
cmp
lods
mov
inc
or
int3
or
pop
mov
rol
push
mov
rorb
rol
sub
cmp
xchg
lcall
ret
divl
fwait
mov
mov
test
mov
les
int
cmpsb
cmpsb
out
ficomps
pop
mov
pop
mov
or
rol
rcll
shll
pop
lcall
push
test
mov
sub
mov
dec
enter
int
aad
pop
fistps
and
pop
in
bound
gs
mov
xor
and
inc
les
add
xchg
push
jb
push
and
push
jmp
dec
hlt
insl
subb
inc
setnp
bound
gs
lods
xchg
in
mov
or
dec
push
in
in
and
pusha
loopne
loope
fucomip
lock
scas
insb
xchg
mov
repnz
rcrl
pushf
fnstcw
icebp
pushf
push
ucomiss
adc
mov
mov
fs
dec
adc
cltd
xlat
or
mov
pushl
lea
loope
jae
push
scas
cmpsl
aam
outsl
add
and
je
add
add
xor
sub
pop
push
or
test
shlb
mov
lods
mov
or
fcoml
push
inc
popa
in
xchg
mov
cmp
sub
test
push
adc
pop
pop
dec
outsl
outsl
sub
inc
pushf
add
cs
xlat
dec
push
imulb
addb
pop
sbb
dec
xor
jle
mov
ret
jp
fisubs
xchg
push
dec
inc
mov
outsb
testl
ss
out
aam
subl
add
or
in
pop
inc
pop
add
mov
push
mov
mov
xor
test
jno
jae
gs
fisubl
rorb
or
loopne
push
sarl
pusha
pop
es
fldl
cmp
adc
adc
and
subl
movsb
js
and
int3
stos
sbb
xchg
inc
adc
inc
and
xchg
nop
xor
or
mov
scas
cmc
movsl
insl
roll
xadd
lret
sub
dec
adc
mov
loopne
fcmovbe
dec
fsin
jnp
or
stos
fs
or
test
adc
and
mov
push
and
test
dec
mov
pop
mov
ljmp
xchg
fisttpll
outsl
xchg
int3
subb
out
or
aam
rcrl
push
insb
shrl
xor
inc
rorl
mov
jno
in
xlat
xor
inc
aam
rcrb
jle
cmp
pop
push
dec
inc
sahf
dec
inc
sub
adc
test
dec
push
add
cld
xchg
cld
imul
cmpsl
sbb
push
adc
shr
and
pop
in
xorw
test
cmp
mov
xor
aas
and
aad
push
data16
fsubrs
ret
mov
loopne
add
in
icebp
cwtl
roll
pop
fsubl
sysenter
pop
popa
jae
and
sbb
mov
inc
dec
adc
or
jg
lret
jb
xchg
lock
dec
int3
loope
sbb
dec
shll
hlt
outsb
pop
cmp
and
mov
or
js
jno
shrb
sar
sbb
xchg
cmpsl
lods
ret
aaa
and
cmp
jb
jle
sbb
and
test
cmc
dec
sub
es
push
das
int
mov
push
sarl
inc
lds
clc
inc
or
push
sbb
data16
dec
xor
inc
je
andb
xorl
jge
jb
add
dec
aas
pop
aam
mov
push
or
sti
out
pushf
cmovb
sbb
cmp
or
pop
std
push
cmpl
xchg
into
cmp
push
dec
lea
ja
xor
push
add
pop
stc
ljmp
or
dec
dec
add
sarl
add
jbe
insb
gs
inc
xor
scas
push
sub
inc
test
gs
pop
test
loop
cmp
xchg
nop
int3
stc
add
out
enter
lods
sub
ss
xor
aam
test
pop
bound
out
fnstsw
enter
enter
jne
cmpsl
loope
pop
iret
lret
inc
cli
subps
pop
pop
xor
inc
stos
xor
jne
hlt
inc
fldln2
pusha
mov
in
fadd
leave
sbb
xlat
inc
or
stc
sbb
pusha
inc
mov
mov
push
jp
xorl
mov
mov
pop
test
mov
loope
inc
std
jp
fs
lock
jg
jne
mov
loopne
jge
loope
push
jno
adc
mov
gs
cli
dec
stos
cmp
xor
push
stos
jo
je
ja
lret
adc
das
fwait
je
adc
movsl
mov
add
addr16
pop
arpl
cmp
inc
pop
xchg
insl
and
mov
add
dec
clc
out
data16
es
dec
xchg
push
inc
fdivrp
jb
lret
fsubrp
jne
inc
cmpsb
scas
pop
cmp
shll
inc
iret
inc
jmp
push
jnp
and
xor
fldenv
xchg
faddl
enter
mov
outsl
and
pop
call
jbe
add
addl
out
xchg
stc
and
sub
fsubl
inc
loopne
ds
jg
sbb
jnp
jbe
mov
sbb
inc
sti
sbb
mov
pushf
push
test
add
sub
jecxz
jmp
push
mov
mov
popf
lods
dec
inc
cltd
dec
push
jns
stos
sub
dec
inc
pusha
gs
fldenv
pop
loop
inc
mov
sub
xor
push
rcl
push
lahf
in
pusha
jbe
add
add
stos
hlt
outsb
push
je
fmull
push
aaa
inc
data16
and
mov
xchg
xor
call
ficoml
mov
shll
cs
stos
mov
pop
imulb
mov
and
push
add
call
frstpm(287
sti
pop
push
push
mov
outsl
xlat
ret
mov
stos
adc
fistpl
sbb
and
jge
call
fsubrs
fs
dec
add
test
jl
clc
popf
fistpll
dec
iret
jnp
je
ret
lods
insb
xor
sbb
dec
fbstp
ja
jmp
nop
stc
jne,pn
jnp
mov
push
jp
lods
xor
add
add
pop
cmp
pop
lds
xchg
inc
insb
mov
sbb
and
stc
mov
clc
add
enter
fs
cmpsl
dec
jl
andb
rcrl
and
xchg
inc
dec
sub
stos
in
dec
adc
sub
sahf
and
mov
cld
imul
stos
movsb
push
cs
icebp
cmpsb
subl
ret
cltd
shl
mov
fwait
testb
fsubrl
jae
idivl
mov
sbb
xchg
and
sub
iret
loop
or
and
loop
jns
push
inc
loopne
xor
roll
add
cld
cmpsl
mov
lret
insb
pop
adc
jnp
xor
adc
mov
sbb
sub
cmp
sub
scas
out
pop
ss
aad
push
in
dec
inc
push
pop
in
imul
jo
jle
test
xlat
js
addr16
mov
or
adc
jno
popa
push
or
or
xor
fidivrl
dec
jns
xlat
ja
cmp
pop
sbb
repz
adcb
popa
inc
call
bound
inc
ret
addr16
inc
clc
xchg
cmp
test
sbb
adc
inc
pop
push
xor
inc
addl
rcr
cmp
and
popf
sbb
dec
xchg
mov
jo
aam
repnz
push
in
ds
nop
jmp
pushf
ljmp
cs
jno
xchg
rclb
fdivrs
push
lahf
push
jb
call
mov
jb
ja
incl
hlt
mov
int3
cmp
lcall
xor
jns
add
jecxz
jmp
rcrb
int
or
sahf
or
popa
rorb
lods
or
fnstenv
nop
or
gs
push
xchg
dec
sahf
rcl
movsb
fidivrl
or
sar
sarl
xor
and
aaa
fldt
or
mov
inc
mov
ja
and
dec
inc
add
movsl
jb
mov
xchg
aam
mov
adc
dec
fucomp
sbb
pop
mov
pmullw
mov
out
jne,pt
adc
sub
les
fwait
int3
mov
jmp
cwtl
movsl
jl
or
jnp
aas
dec
repz
add
xchg
iretw
aam
mov
mov
out
push
inc
adc
dec
movsb
iret
and
loopne
mov
daa
sbb
xchg
sbb
pop
sbb
sub
fistl
push
or
xchg
inc
inc
mov
mov
and
imul
cmp
pop
pop
aam
imul
cli
inc
jbe
mov
and
popa
push
adc
cltd
jo
or
vandnps
popf
xchg
inc
xor
push
push
push
mov
mov
mov
shr
jno
incb
push
push
cs
rolb
lods
int3
out
cltd
push
lcall
push
int3
add
js
test
and
mov
inc
inc
mov
pop
rcrl
xor
dec
dec
rcrl
sti
roll
nop
mov
in
bound
mov
test
push
outsl
dec
mov
scas
mov
cmp
inc
std
sub
outsb
push
inc
push
mov
adc
test
andb
ret
jne
outsb
xchg
jecxz
mov
test
cmc
push
dec
dec
std
adc
dec
int3
mov
push
cwtl
data16
inc
hlt
mov
mov
fdivp
mov
add
pop
jle
dec
pop
clc
mov
mov
or
fs
pop
mov
xlat
jns
or
stos
pop
mov
jge
fisubrs
rcrb
lods
lcall
vpacksswb
and
ret
out
push
lret
dec
jecxz
sti
jp
movsl
insb
into
jns
push
lahf
in
testl
clc
xor
in
data16
sbb
xor
sbbb
aad
test
push
jge
test
xchg
lret
mov
xor
in
xchg
sahf
pop
mov
js
adc
dec
xchg
mov
cltd
jg
test
jle
fimuls
inc
adc
dec
mov
mov
punpcklwd
fs
cmpsl
xor
pushf
loope
pushf
dec
mov
dec
lret
rcll
jb
stos
ja
movsl
mov
push
cmpb
test
imul
dec
sub
mov
mov
jl
outsb
fs
mov
enter
sbb
sub
pop
pop
int
cmp
push
movsb
and
adc
rcrb
pop
loop
leave
fnsave
in
loop
xor
xchg
jmp
xor
xor
dec
call
bsf
arpl
pop
sub
sub
xor
inc
test
pop
int3
sahf
adc
lcall
xchg
and
pop
pop
sbb
sub
xchg
pop
cmp
lea
popa
and
aad
movsl
or
stos
adc
mov
xchg
inc
test
pop
xchg
out
imull
jmp
pop
or
enter
fs
dec
mov
orl
pop
dec
test
cmpsl
cmp
int
out
cli
dec
bound
add
ljmp
out
outsl
std
xchg
aam
add
ret
insl
fisubrl
loop
adc
pop
inc
jno
jbe
sbb
dec
push
nop
push
sbb
fildll
push
pcmpeqb
addr16
ret
cmpsl
lods
test
enter
hlt
push
pusha
xchg
sbbb
jge
orl
lods
es
push
push
fmull
test
jns
cmpsb
jne
jbe
cmp
add
out
aas
leave
cmpsl
add
lods
pop
imul
lods
add
mov
dec
push
pop
scas
pop
clc
stos
or
mov
cmpb
test
mov
bound
push
inc
dec
outsl
and
cs
fwait
push
or
jp
ficoms
jle
fld
and
push
fsubr
sbb
lea
jmp
movsl
add
pop
cmp
add
loope
jle
lahf
int
cmpb
mov
cmp
add
mov
push
add
mov
sub
les
std
fdivp
call
scas
out
sub
adc
lods
fnstsw
out
fwait
dec
mov
and
and
jg
mov
mov
test
jns
stos
or
fnop
inc
xchg
aad
dec
out
cwtl
loope
sbb
jmp
dec
sti
inc
fwait
dec
iret
in
fstpl
mov
aam
xchg
inc
mov
mov
fstpl
lds
sbb
inc
or
js
adcl
ljmp
pop
cli
test
inc
and
hlt
xor
mov
sbb
call
loope
repnz
xchg
xor
mov
in
sub
mov
rcll
js
add
outsl
ss
fimuls
xchg
rep
mov
imul
cmpsl
pop
xor
filds
insl
popf
push
rorl
dec
pop
fidivrl
cmp
mov
sbb
mov
push
lds
mov
test
pop
loopne
push
outsl
sbb
icebp
cmp
lret
pusha
jge
nop
shrl
cmpsb
mov
add
push
loopne
cltd
adc
or
push
test
aad
or
sti
aad
and
inc
jnp
shrl
fld
enter
sub
sub
iret
mov
out
lds
fldt
imul
and
addr16
cmpsb
xchg
lock
sbb
or
gs
xchg
mov
adc
mov
test
test
inc
pop
stos
push
inc
adc
testb
cmpsl
dec
lcall
and
sub
xchg
sub
pop
loope
mov
push
xor
pop
bound
dec
pop
push
and
xor
stos
cmpb
lret
inc
dec
repz
notl
pop
xchg
mov
push
out
pop
pop
cmp
leave
xchg
cmpsb
rorb
scas
das
enter
xchg
out
xor
aam
movsb
xchg
mov
sbb
jmp
sub
and
mov
add
rclb
fisttpll
lahf
iret
loopne
data16
es
xchg
or
aad
jno
pop
outsl
add
sub
adc
jmp
cmp
lock
stos
and
xor
outsl
jae
add
or
pop
mov
and
pop
cmp
ds
or
pop
pushf
movsl
loopne
ffreep
mov
daa
xchg
mov
cmp
or
jns
push
out
sarl
fistps
pop
sub
insl
xor
adc
imul
sbb
fstpl
test
test
add
fldl
jno
pop
int
fcomp
loopne
push
mov
fldenv
loope
adc
add
dec
xor
adc
mov
fidivrs
or
enter
jle
lahf
test
daa
sbb
pop
call
dec
fiadds
pop
lds
bswap
and
pop
xchg
aad
add
pop
mov
fwait
mov
insb
mov
jb
pop
xchg
lret
scas
mov
pop
stos
iret
xorl
inc
sub
cmp
pop
pop
rorl
inc
cmp
jecxz
lock
bound
int
out
push
mov
mov
pusha
xor
les
and
push
dec
sub
ja
jnp
mov
push
push
repnz
jmp
das
push
pop
and
sbb
inc
inc
movsb
sarl
pop
sbb
cmp
push
cmp
xchg
ret
out
test
mov
jp
cmp
jo
xor
xchg
mov
sub
mov
cmp
mov
and
xchg
lcall
mov
cmpsb
or
outsl
sub
sub
lret
jb
lcall
rcrl
mov
shl
cmp
jg
and
aaa
mov
jg
push
in
xchg
inc
mov
fildll
arpl
out
mov
insl
test
adc
pop
mov
mov
mov
out
arpl
insb
repnz
and
dec
loope
push
mov
sub
ret
sub
xchg
out
cwtl
mov
xchg
fcompl
test
fnstcw
sbb
adc
sbb
and
pop
mov
movaps
mov
adc
add
add
cmpsl
arpl
jp
pushf
popf
sub
subl
or
inc
sti
push
cs
call
jl
stos
adc
and
aad
xor
sbb
push
lret
es
dec
mov
dec
fldenv
aaa
fldcw
cltd
mov
adc
pop
or
lret
fs
sbb
xor
push
aas
adc
mov
jbe
jmp
negl
hlt
ja
sbb
sbbl
sbb
sbb
lret
lods
dec
test
dec
or
inc
das
mov
sbb
in
or
mov
xor
add
add
cmp
rcll
icebp
pop
out
dec
cmp
stos
sub
in
in
or
pop
fisubs
cmp
push
sub
sahf
cmp
dec
dec
fldenv
dec
mov
stc
mov
test
sbb
ds
insb
jo
mov
in
cmp
out
out
das
add
and
insb
ss
pop
mov
jp
in
int
jecxz
stos
loop
adc
jns
addr16
sbb
mov
add
ror
stc
dec
inc
push
aas
bound
imul
mov
mov
inc
xchg
lods
cmp
push
enter
popf
ljmp
scas
gs
push
sub
lds
lods
add
sarb
imul
jns
mov
xor
dec
test
cmc
data16
cmp
cltd
adc
dec
enter
int
push
adc
mov
cld
mov
rolb
rcr
xchg
outsl
call
and
popf
dec
jp
xor
fldenv
sub
lcall
sbb
cmpsl
insb
cmp
nop
gs
or
inc
sub
mov
inc
enter
test
sub
xor
pusha
punpckhdq
addb
rol
add
mov
jae
fwait
xchg
movsb
cli
inc
sub
sub
inc
pop
mov
inc
jp
ja
xor
sbb
in
dec
leave
sbb
scas
pusha
push
mov
sbb
cmp
dec
jp
mov
inc
int
push
mov
dec
adc
clc
fmull
ret
imul
sub
inc
jns
cmpsb
in
fadds
inc
ss
lcall
out
int
movsl
pusha
out
enter
sbb
sbb
mov
mov
cmp
sub
jle
jb
ss
xor
sub
push
sbb
push
mov
cld
aam
or
js
shlb
jo
and
dec
cmpsl
or
push
sub
clc
mov
xorl
and
xchg
sub
add
ss
hlt
mov
repz
inc
mov
in
flds
jp
bnd
fcomp
mov
lea
or
or
int
hlt
insb
pushf
sbb
mov
adc
rorl
dec
jecxz
test
cli
fs
dec
jns
inc
add
shl
push
pop
sub
popa
ljmp
outsl
jb
test
hlt
add
sar
jmp
jne
out
push
dec
push
xchg
mov
iret
dec
loopne
pop
lds
sbb
lahf
loopne
mov
inc
ljmp
push
jb
fnstcw
push
push
imul
xor
cwtl
push
mov
mov
rol
sarb
sbb
cmp
mov
xor
xchg
sub
loope
mov
pusha
mov
andl
insb
jge
sahf
mov
rcr
pushf
mov
fistps
cmp
scas
xchg
rolb
push
nop
mov
adc
add
arpl
pop
inc
add
loope
jo
ror
cs
pop
mov
leave
inc
adc
fwait
rclb
mov
xchg
arpl
ljmp
repnz
cltd
sub
test
inc
call
mov
sahf
outsb
dec
ds
pop
sbb
mov
fwait
call
mov
xor
lcall
xchg
adc
xchg
hlt
ljmp
in
pop
jns
pop
dec
mulb
or
xor
xor
fisubl
inc
test
addr16
dec
pop
and
adc
cmp
push
loop
les
add
add
jp
inc
in
inc
inc
push
add
insb
xor
pop
and
lea
sti
and
ljmp
out
insb
sbb
mov
popa
addr16
shll
cmpsb
xor
and
dec
enter
rcr
lret
jnp
xor
test
mov
adc
dec
shll
sub
sahf
add
leave
dec
es
cmc
jns
pusha
or
into
adc
jge
loope
loope
repz
cltd
test
dec
inc
mov
jne
lahf
js
pusha
mov
sub
push
fcom
ljmp
sub
jno
add
push
data16
push
inc
imul
in
push
mov
sub
addr16
jle
dec
imul
push
jp
or
push
xor
sub
adc
mov
pop
sub
pop
mov
xlat
icebp
inc
inc
add
pop
nop
and
dec
daa
or
aas
mov
dec
std
sbb
cltd
xor
fsubs
mov
sbb
mov
push
sub
shlb
push
inc
jno
cmp
outsb
inc
insb
pushf
arpl
cltd
inc
ds
in
xlat
pop
lea
fldl
cld
mov
sub
mov
cmp
movsl
mov
in
mov
pop
xchg
sbb
jge
adc
imul
in
bound
cld
mov
cmpsb
dec
aam
cmp
inc
jge
repz
and
pushf
es
inc
insb
push
pusha
cmpsb
call
aam
imul
push
jnp
mov
into
jns
lret
int
iret
xchg
push
push
addl
mov
adcb
icebp
or
pop
jno
mov
in
jg
popa
pop
inc
es
enter
rcll
add
into
arpl
aas
sub
jns
hlt
mov
push
fnstenv
pushf
xor
stos
pop
mov
lret
ja
and
xchg
jge
inc
js
fdivp
sub
nop
enter
loopne
loope
push
sbb
jns
pushf
inc
leave
sub
pop
dec
pop
mov
xchg
push
add
and
xor
pop
addr16
scas
inc
dec
dec
xor
loopne
dec
pop
test
popa
xor
insb
sub
shlb
mov
fimuls
rorb
sub
fs
sti
stc
outsl
ret
cs
out
mov
aad
fiadds
in
cld
ljmp
or
add
push
lcall
cmpsl
dec
imul
shl
das
or
jmp
cmp
enter
into
movsb
fildl
sub
and
cmp
jae
int
loopne
leave
push
adc
in
mov
gs
push
and
or
rcrl
and
and
popa
test
cmp
ljmp
mov
adc
adc
movsb
data16
adc
outsl
aam
pushf
dec
pop
cmp
inc
lock
adc
mov
loope
jne
stos
ret
push
cld
jne
inc
mov
leave
mov
inc
bound
add
and
clc
nop
loope
sbb
jle
adc
pop
fnstsw
pop
les
outsl
push
dec
sub
dec
xchg
sub
jmp
rcl
or
mov
xchg
sbbb
mov
sti
cs
mov
cmp
mov
and
stos
aaa
push
cmpsl
xchg
or
ret
outsl
or
mov
inc
roll
cmpsl
mov
test
orb
faddl
das
xor
dec
add
rclb
insl
jb
xchg
mov
push
pushf
xor
insb
adc
bound
xor
sbb
repnz
cmp
popl
jb
insl
dec
out
xor
in
sbb
pusha
sbb
repnz
mov
or
xchg
call
jp
loopne
mov
add
add
mov
xor
andl
sbb
sbb
inc
jbe
push
imul
push
sbb
pop
pop
xchg
scas
sub
mov
insb
sub
mov
sub
push
rolb
or
mov
sbb
mov
pushf
sub
repz
mov
jecxz
dec
inc
sahf
ja
mov
sub
sbb
repz
fidivl
ret
pop
add
pushf
pop
fwait
clc
outsb
adc
mov
les
rcrl
jecxz
pushl
cmpsb
and
jne
fsts
mov
divb
icebp
xchg
sbb
sbb
pop
in
sarl
mov
inc
icebp
and
lods
and
stos
or
lods
nop
push
mov
xor
lret
call
and
movl
inc
in
jp
or
dec
testb
test
adc
pop
outsl
test
and
cmp
idivl
cwtl
and
adcl
jne
pop
call
or
scas
test
push
popa
adc
mov
xor
js
jae
lahf
cmp
mov
pop
or
xchg
or
sub
ret
push
cmp
mov
dec
ret
lock
stc
loope
mov
sbb
sbb
test
je
and
lds
pop
les
push
jecxz
xchg
jae,pt
out
adc
mov
mov
sahf
mov
pop
dec
xlat
inc
aas
xor
dec
push
outsl
pop
leave
int
mov
pushf
inc
dec
iret
andb
xchg
jno
and
cmp
mov
fidivs
gs
dec
dec
nop
push
lea
adc
mov
loope
sbb
out
jg
mov
sub
dec
mov
add
mov
adc
and
loope
mov
lahf
roll
stos
outsl
adc
sub
mov
in
xor
adc
push
std
sbb
gs
mov
jb
fsts
cmp
cmpsb
jns
adc
lods
popf
jg
pop
adc
mov
adc
orl
fnstcw
mov
roll
outsb
xor
in
fnstsw
mov
xchg
or
rolb
movsb
lods
push
lret
jno
ja
and
ss
and
aaa
dec
xor
cltd
fmuls
sbb
es
sti
cmp
mov
mov
arpl
mov
push
xlat
idivb
pop
mov
clc
push
rcll
popa
add
and
push
cmc
adcl
add
adc
scas
xor
imul
movsb
sub
dec
sub
pop
jge
push
mov
pop
xor
inc
xchg
inc
dec
and
dec
mov
stc
mov
enter
cs
mov
and
dec
jae
push
jmp
aas
shll
mov
or
hlt
and
add
and
movb
add
inc
mov
icebp
mov
int3
dec
pop
and
aas
ljmp
inc
xchg
sub
adc
push
jno
and
xchg
scas
push
ja
repz
adc
sbb
sub
sbb
push
lods
cli
inc
in
add
push
pop
testl
jp
nop
jl
std
or
in
jmp
sub
add
jno
dec
arpl
fcomi
out
push
negb
mov
into
int
mov
and
add
pop
xor
dec
sbb
jo
add
xor
mov
in
fdivrs
mov
cmp
rorl
push
mov
bound
jge
int
push
mov
push
push
out
in
test
jg
pop
xor
insl
xor
loop
xchg
dec
lret
mov
jo
bound
sarb
dec
mov
jecxz
push
mov
cld
sbb
subl
adc
clc
decb
jne
loop
or
test
hlt
repnz
orl
jae
push
cld
push
loop
add
out
sbb
cli
mov
jnp
ss
sub
xorl
adc
cli
mov
loope
push
push
in
xor
repz
push
cmc
mov
std
xchg
cltd
fdivs
out
cs
jbe
lret
inc
shrl
and
cmpsl
jne
push
xchg
fdivs
xor
add
cltd
pop
jnp
jle
push
sbb
xchg
out
dec
mov
adc
push
das
jl
insb
or
testl
or
loop
mov
test
sbb
push
int
repz
lea
add
in
push
cmp
jle
icebp
push
inc
sub
sbb
add
ljmp
mov
loop
dec
mov
add
cmpsb
hlt
cs
jl
push
movsb
ret
mov
icebp
pop
or
rorl
addl
inc
hlt
mov
ret
rorl
xchg
icebp
sbb
outsl
sbb
mov
dec
pusha
popf
push
mov
inc
xchg
leave
pop
lahf
mov
scas
popf
jnp
sbb
mov
pop
adc
stos
xchg
hlt
inc
ds
jle
imul
pop
repnz
fsubrs
cmp
imul
and
inc
std
fcomi
mov
dec
leave
test
in
test
jns
aaa
in
mov
and
lods
jmp
test
and
pop
enter
push
je
mov
mov
data16
cs
cmp
sub
push
inc
frstor
xchg
cld
fbstp
mov
movsl
or
pop
aad
aam
xlat
dec
or
rolb
mov
imul
icebp
into
lock
loop
dec
and
iret
rcr
or
xor
mov
jecxz
pushf
addr16
lret
js
fs
jb
push
imul
inc
mov
pop
shrb
mov
stc
jns
push
fcoml
adc
sub
xchg
lret
cmc
aad
fmull
movsb
pop
add
addl
fcmovb
hlt
jmp
add
shrl
mov
cmc
fldenv
push
pushf
sahf
outsl
dec
sub
lods
cld
pusha
inc
imul
cmc
aas
ljmp
punpckhdq
inc
mov
gs
in
jle
loopne
mov
nop
inc
stos
out
jg
in
movsb
jecxz
dec
bound
lea
ljmp
mov
mov
dec
shll
pop
shll
fnop
cmp
into
into
inc
jle
outsb
call
cmp
mov
jb
mov
rol
loope
lods
inc
je
add
adc
push
pop
movl
fdivs
out
imul
or
jno
jge
clc
out
aad
js
adc
inc
sub
cmp
adc
xchg
shll
iret
lock
lods
jb
cmp
fisubs
jnp
mov
test
test
sbb
mov
or
push
xor
test
aas
lret
jmp
or
push
sbb
js
pop
and
int3
jbe
fsts
pop
out
cmp
dec
xchg
push
dec
bound
out
cli
daa
aaa
test
push
jecxz
lahf
js
add
add
xor
fdivs
aam
xchg
pop
xchg
lahf
sub
and
in
dec
sub
test
imul
sbb
insb
add
jo
cltd
les
ret
imul
js
test
cmp
ja
push
dec
enter
cwtl
or
or
movsl
rcrb
out
loopne
xorb
repz
push
int
push
mov
fistl
mov
pop
mov
cwtl
add
inc
lea
xchg
adc
inc
add
dec
lcall
stos
fstl
out
pop
xor
lods
ret
push
ret
dec
enter
pop
fwait
loopne
rcrl
pusha
icebp
push
filds
lea
cmc
repz
filds
test
cmp
adcb
fstpt
and
sbb
cmpsb
repz
jl
jle
js
in
xor
push
jne
pop
out
dec
out
jns
mov
lds
imul
pop
scas
nop
mov
lahf
arpl
dec
xchg
dec
pop
jmp
xor
js
xchg
xchg
jbe
aad
or
jo
lock
mov
cmp
cmp
inc
cmp
shr
divb
dec
movsb
xor
add
clc
loope
mov
out
repz
das
adc
xchg
xchg
shrl
adc
push
stc
ffreep
jne
fadd
inc
sbb
xchg
daa
std
push
mov
lret
inc
or
jb
in
mov
negb
addr16
int3
leave
sar
jnp
mov
add
adc
fdivl
pop
sub
mov
or
lods
fnstsw
cltd
cmc
insl
mov
aad
fldt
cmc
and
mov
push
lea
dec
fidivrl
push
outsb
adc
jmp
mov
shll
sub
sbb
and
dec
hlt
scas
insl
pop
mov
fidivl
int
ljmp
jecxz
outsb
xor
mov
add
imul
push
inc
cmp
pop
packsswb
sub
adcb
shrl
jnp
rcl
inc
stos
data16
xlat
filds
out
xchg
or
int3
pop
rcrl
pop
or
push
hlt
out
cwtl
mov
fdivrl
sti
dec
adc
cmc
sub
arpl
cli
fisttpll
loop
dec
jg
push
cs
data16
mov
cmp
test
xor
shll
aam
pop
daa
bound
outsl
cmp
ss
mov
gs
jae
mov
push
sti
jno
inc
js
or
jae
mov
pop
or
bound
js
repz
mov
push
fmul
xor
sbb
sbb
jecxz
outsl
sbb
dec
add
push
scas
fdivs
mov
lods
jno
int3
aad
int3
dec
shlb
sub
pushf
jae
cmp
adcb
jp
call
lods
adc
sti
lea
mov
lret
ja
pusha
inc
sub
cmp
fstl
fs
xchg
dec
pusha
popa
mov
shlb
mov
shll
xchg
jmp
dec
mov
pop
pop
add
lret
rorb
mov
jno
stos
xor
test
xchg
lock
enter
incb
andl
pop
or
xor
jae
lock
jae
shll
mov
push
jae
jo
stc
cld
vpsubusw
jmp
mov
sti
leave
aaa
push
sbb
aam
pop
push
fstl
shlb
fists
jge
fwait
ret
mov
adc
or
inc
enter
sub
jae
popa
int3
in
imul
pop
insl
jno
push
fstpt
sti
push
in
into
imul
in
jg
or
mov
inc
push
cwtl
aaa
adc
sub
sub
inc
scas
jns
mov
enter
sbb
mov
negl
mov
rorl
daa
jg
stos
outsb
loope
mov
in
push
popa
inc
inc
lods
adc
pop
lahf
push
mov
in
inc
in
test
jle
inc
lret
or
mov
sbb
and
cmp
pop
xor
nop
sub
cs
and
xor
cmp
sub
add
jp
inc
aas
cmp
or
jmp
fptan
call
mov
divb
inc
jecxz
inc
cmp
and
imul
pop
loope
push
lock
in
sti
lret
es
mov
xor
mov
sub
loop
inc
pop
pop
fstps
pop
stc
jmp
call
jne
fisubl
mov
adc
sub
mov
add
ljmp
gs
cmp
sub
cmp
lea
and
and
aas
xchg
xchg
jns
faddp
add
add
sbb
mov
outsb
add
pop
in
push
sbb
loop
and
les
cmpsl
jl
adc
test
stc
lcallw
shll
or
jns
push
repz
ret
mov
mov
mov
mov
inc
outsl
test
fldcw
mov
rep
inc
sbb
add
fdiv
stc
mov
push
iret
sub
gs
push
dec
inc
aam
add
scas
add
pop
lcall
dec
jbe
mov
mov
or
xor
dec
dec
rclb
jno
shll
push
cli
jne
pop
lock
in
sti
jnp
fcomp
sub
mov
popf
lret
jne
lret
out
popa
adc
shlb
mov
addr16
test
inc
mov
fwait
adc
decb
push
cmp
call
add
icebp
fsubs
mov
jle
pop
je
test
pop
lret
adc
xorb
mov
js,pt
sahf
dec
out
sbb
and
cli
push
nop
ljmp
mov
sub
and
sbb
inc
fists
cmpsl
int
mov
aas
xchg
mov
mov
jb
mov
push
sub
out
dec
add
cs
jb
dec
jbe
loop
inc
pop
mov
lcall
xchg
xchg
aam
inc
sbb
imul
adc
push
xor
or
or
dec
mov
jns
push
sti
dec
inc
fnstenv
scas
sti
ljmp
iret
call
into
cmp
jg
inc
sbb
or
mov
fwait
xor
xlat
cmp
xor
adc
stos
mov
cmp
dec
mov
hlt
jl
push
push
or
scas
pop
rep
ficomps
test
daa
pop
aaa
mov
cmp
xor
andb
xchg
faddl
pop
mov
cli
into
add
dec
imul
insb
xchg
xor
vpmullw
push
push
xor
inc
sub
arpl
adc
rolb
mov
adc
push
stc
or
dec
mov
sub
push
ljmp
pop
sahf
fwait
insl
jg
mov
lock
push
int
loope
mov
out
dec
adc
dec
fdivrl
mov
subb
insl
xorl
pusha
test
adc
jne
mov
xchg
aad
and
pop
ss
icebp
cmp
inc
add
ret
pushf
mov
xchg
xor
ret
sub
push
out
xor
outsb
mov
cmp
pop
cwtl
mov
lcall
add
cmp
inc
out
inc
fsubl
sbb
test
lds
je
movsl
xchg
movsl
std
test
jns
fidivrl
ja
lret
inc
outsl
fdivl
pop
sbb
imul
in
pop
and
xchg
jnp
popa
imul
negb
pop
mov
sahf
adc
pop
aas
dec
fwait
xchg
sub
js
or
shrl
pop
inc
std
mov
dec
add
add
jne
stos
mov
inc
mov
jns
hlt
sahf
lods
pop
data16
add
cmp
or
push
outsl
sub
jmp
lret
lea
pcmpeqw
pop
fbld
xor
jno
out
pop
push
fists
cmp
dec
sub
push
test
mov
adc
lds
mov
fsubs
fsub
sahf
loope
movsl
dec
lahf
int
dec
mov
and
dec
jl
out
dec
mov
sub
mov
push
xchg
mov
subl
test
add
enter
das
push
mov
dec
loope
cld
insb
stos
dec
mov
enter
fcmovbe
mov
in
out
mov
sbb
adcb
mov
jae
stos
or
rclb
xor
inc
mov
pop
push
jae
icebp
loop
scas
mov
test
lock
shl
jns
add
fsubp
pop
jb
cmp
pop
and
popf
pop
mov
mov
stc
and
gs
dec
mov
push
fimull
dec
test
stos
jg
push
in
popf
mov
rol
push
lahf
adc
bound
add
adc
inc
cltd
scas
stos
pop
add
dec
xchg
pop
sbb
stc
dec
mov
jmp
mov
out
sub
pop
sbb
push
adc
ret
adc
call
addr16
and
shr
enter
mov
sahf
negb
fcomps
insl
aam
cwtl
mov
dec
add
test
xor
fistl
pop
cwtl
push
push
sti
ret
xchg
stc
cmp
mov
sahf
sahf
cwtl
inc
pop
pop
mov
and
out
lds
mov
xor
mov
push
dec
mov
mov
int
add
insb
dec
push
mov
icebp
imul
test
and
jl
aaa
adc
mov
and
dec
xchg
lods
mov
insb
pop
sbb
or
pop
adc
dec
lods
xchg
imul
lret
imul
or
pop
sti
push
in
sbb
and
adc
movsb
aad
xchg
js
jg
sub
sahf
adc
xor
imul
sbb
mov
popa
mov
std
shll
pop
pop
xchg
int3
xor
enter
mov
ds
pop
push
dec
pop
dec
sbb
jnp
daa
das
scas
adc
xchg
push
push
pop
pop
cmp
push
sbb
pop
dec
stos
mov
sub
push
pop
push
cmp
add
or
outsb
add
add
stc
mov
jnp
fwait
add
js
shll
scas
lods
jmp
orl
movsl
xchg
decb
sbb
lods
mov
mov
cmp
and
notb
setae
mov
or
lds
xlat
and
cmova
xchg
lods
sbb
loop
pop
sub
lahf
ficomps
mov
cmpsl
js
pusha
xchg
add
jge
mov
push
loop
mov
imul
mov
adc
and
mov
loope
mov
xor
and
inc
dec
jo
pop
mov
out
push
stos
or
loop
jmp
fcoml
int
shlb
int3
push
mov
std
xor
sub
repnz
jge
xlat
jne
in
mov
dec
loopne
call
nop
mov
xchg
push
dec
mov
ret
out
gs
stos
mov
push
cmp
inc
push
xlat
lahf
dec
fisubl
lret
and
and
sbb
cmp
inc
pushf
cs
pop
add
call
pop
xlat
sub
arpl
cmp
imul
xor
test
popf
cs
push
jle
add
test
mov
cltd
scas
shll
mov
iret
aas
and
divl
neg
pop
sbb
jnp
mov
xchg
pusha
dec
dec
jbe
test
fsubp
cmp
jge
push
lods
sub
sub
mov
inc
sub
std
push
gs
xchg
mov
jns
movsb
out
jns
mov
pop
and
into
in
out
sbb
in
outsb
pop
shll
push
cmp
fstps
mov
xorb
out
cld
fcmovb
test
or
es
jbe
mov
push
fcoms
outsl
imul
dec
jecxz
int3
inc
lcall
fisttpl
iret
adc
sub
lods
jg
dec
cmpsl
sub
out
jge
jnp
mov
dec
inc
xlat
test
scas
aam
push
stc
dec
or
pushf
dec
inc
or
imul
add
test
mov
push
insb
push
pop
sar
dec
std
sbb
push
lret
push
pop
add
icebp
mov
sbb
dec
int
clc
inc
jae
xlat
cmpsl
pop
shlb
add
pusha
add
mov
push
lea
pusha
jo
push
add
push
xchg
mov
daa
inc
inc
arpl
test
pop
or
adc
fnstcw
jbe
fidivl
mov
ficomps
add
aaa
sti
shrb
inc
mov
ret
inc
enterw
dec
jns
mov
jecxz
sbb
push
jmp
xlat
or
mov
push
mov
push
mov
mov
push
loop
aad
add
push
fstps
daa
xchg
test
rorb
sbb
sub
dec
dec
sbb
cmp
cli
int3
mov
addr16
ja
pop
xor
loopne
leave
sub
cltd
add
pop
cmp
pop
mov
aas
pop
xchg
iret
mov
or
scas
pop
test
add
aad
lret
std
cmp
xor
pop
xor
mov
or
mov
sbb
dec
cld
mov
movsl
jo
adc
imul
sbb
jns
fdivr
imul
sbb
shll
add
push
gs
jns
cmp
pop
rcll
outsb
or
lret
mov
fists
pop
xorb
insl
enter
inc
gs
shlb
jmp
out
push
dec
jl
movsb
or
xor
cmp
gs
imul
outsb
pusha
stos
nop
fcoms
dec
pop
pop
xor
enter
jl
xchg
addr16
call
mov
mov
mov
fistps
xor
arpl
fnstsw
popa
xor
nop
jne
iret
decb
iret
stos
sub
ret
xor
clc
push
mov
cwtl
push
mov
js
loop
ss
xor
or
jno
cld
sub
lods
and
pop
pop
and
popa
sub
jb
add
add
mov
inc
shll
pop
stos
and
mov
leave
addr16
cmpb
fisubs
sbb
jl
mov
pop
and
inc
ljmp
push
add
dec
sub
out
add
into
cmp
xor
mov
and
mov
lahf
lock
int
dec
stos
sbb
into
test
test
add
adc
jl
xchg
pop
dec
or
pop
test
mov
jge
pop
mov
imul
scas
or
cli
xchg
clc
mov
jne
fsub
mov
pop
ljmp
in
and
insl
sub
shlb
sub
int3
sub
out
xchg
add
movsl
movsl
imul
fwait
iret
xor
and
pop
shll
mov
into
sub
bnd
xor
dec
pusha
xorb
jbe
iret
dec
jp
mov
xor
push
xchg
fnstcw
push
mov
pop
int
dec
or
mov
xchg
pushf
in
or
dec
cmp
push
mov
lcall
xchg
sahf
jb
jnp
leave
notb
scas
push
push
mov
arpl
insl
pop
cld
mov
loope
mov
dec
bound
je
stos
xchg
mov
stos
je
push
sbb
repnz
les
imul
les
shrb
pop
mov
mov
inc
jo
js
sub
popa
pusha
lret
add
or
cmpsl
pop
arpl
mov
int3
je
pop
dec
sti
into
iret
jne
push
or
and
pmulhuw
fistps
push
and
mov
xchg
stos
sbb
and
call
leave
dec
shlb
movsl
mov
nop
mov
andb
pop
ret
jo
inc
bound
push
inc
into
pop
or
jns
aas
enter
add
mov
pop
mov
fistps
sti
pop
pushf
pop
scas
cmp
call
or
in
or
repnz
pop
ss
xchg
mov
aam
cmp
mov
lods
dec
sub
mov
inc
in
out
mov
dec
jne
je
mov
fdivrp
jp
insl
cld
cli
xchg
jbe
popa
in
jmp
jge
mov
mov
or
fisubrl
imul
cmp
dec
lock
popa
cld
jae
ret
rcll
inc
fsts
add
jne
popa
pop
fnstenv
call
mov
sub
add
aas
cmp
xchg
xchg
imul
xchg
movsl
mov
clc
push
xchg
rcrl
add
pop
jl
push
test
pop
xor
lods
mov
sub
stos
jbe
push
add
add
fcoms
mov
xchg
push
pop
sub
mov
push
and
or
nop
add
pop
hlt
lret
cs
je
fnsave
sahf
adc
xchg
dec
dec
aas
inc
add
push
shlb
ja
sub
and
push
jp
xchg
jne
cmp
in
lds
push
repnz
pop
sub
mov
popa
outsl
rol
jne
xchg
bound
cmc
cmp
stos
jns
sahf
fwait
jne
dec
push
subb
sbb
mov
xor
aaa
xchg
cmp
popa
into
push
mov
repz
pop
xorb
mov
inc
out
cmpsl
hlt
loopne
je
dec
jae
addr16
aaa
lods
sub
xor
addl
jnp
cmp
imul
pop
loope
push
cmp
fdivrl
push
sub
adc
fidivs
mul
jne
les
rcll
jae
dec
jns
xchg
mov
dec
xchg
std
movsb
popf
or
push
add
jae
jp
add
add
add
sub
inc
inc
les
fmulp
mov
inc
mov
sti
fwait
inc
aad
sub
test
aas
movsl
inc
pop
push
xchg
pusha
sub
es
xor
stos
leave
dec
dec
ljmp
cltd
add
dec
adc
mov
push
push
xor
sub
push
mov
out
js
imul
into
inc
push
sti
addr16
or
or
or
pop
fwait
mov
lret
cmpsb
movswl
fisubl
mov
dec
mov
stc
jp
mov
imul
lock
fs
adc
mov
xor
sbb
push
dec
shrl
mov
xor
lock
jnp
out
iret
iret
sbb
out
sub
pop
inc
mov
das
mov
push
or
xchg
add
cltd
test
test
mov
psubw
add
fs
mov
dec
adc
cmpl
mov
pop
outsb
leave
ret
mov
in
out
subl
fistps
imul
repnz
test
lahf
pusha
ror
push
mov
cli
mov
aas
stos
arpl
loopne
inc
and
cmp
popa
clc
push
popf
in
movsl
push
and
sbbb
pop
adc
rclb
std
inc
fildll
jge
arpl
push
inc
popa
pop
and
sub
jns
sbbb
fwait
icebp
roll
loop
xchg
pop
adc
ret
cmc
or
dec
mov
stc
add
or
jmp
minps
int
movsl
xchg
mov
dec
into
pop
adc
enter
sbb
stc
dec
jnp
jns
into
imul
mov
pop
jo
or
std
sbb
incl
mov
lret
nop
cmp
push
push
or
add
add
hlt
adc
test
sub
je
sti
notl
decl
movsl
cld
dec
ret
xor
inc
xchg
push
fwait
cmp
fstps
sbb
jl
pop
insl
cli
jl
sbb
cld
movsl
nop
or
push
push
insl
dec
popa
push
rorb
xchg
stos
out
out
adc
cs
shll
stos
popa
lret
sub
dec
mov
jl
aas
add
out
add
jg
rolb
pushf
stc
add
les
jl
insl
xchg
rclb
test
lods
lock
enter
or
sbbb
das
add
outsl
inc
adc
popa
enter
jb
insb
cmpsb
scas
jmp
jp
movsb
sarb
dec
lock
jb
xchg
dec
xor
loope
sub
pop
mov
repz
sub
mov
stos
pop
cld
js
shl
add
in
mov
xor
ljmp
dec
loopne
popf
fists
fsub
dec
mov
mov
mov
in
ja
mov
cli
push
rolb
inc
lcall
xor
inc
ljmp
xchg
imul
push
scas
push
fs
push
add
dec
adc
pop
jmp
mov
add
jae
and
jne
in
and
add
stos
scas
and
in
add
daa
lods
les
repz
sbb
or
out
add
into
cwtl
mov
pop
addr16
sub
cld
dec
dec
rcll
ljmp
push
enter
jg,pn
mov
xor
sub
xlat
fcmovb
aas
push
xchg
inc
push
ret
jno
inc
xchg
xor
daa
sub
outsl
lret
in
cli
inc
mov
mov
and
in
mov
rdmsr
jno
xor
rcrl
fnsave
cmp
mov
add
mov
cwtl
jnp
fdivr
mov
push
pop
push
or
movb
out
rolb
adc
jnp
test
adc
sub
pop
in
stos
ja
out
and
pop
jecxz
jns
xor
add
andb
adc
in
es
call
mov
pop
adc
adc
cmc
movsl
push
and
jno
mov
sti
or
xor
xchg
xor
inc
dec
test
mov
fsubr
mov
dec
jns
add
inc
push
addr16
pushl
shll
dec
mov
and
adcl
popf
mov
inc
and
mov
je
cmp
sub
fs
outsb
out
cmp
adc
incl
std
cld
mov
adc
lods
mov
dec
cmp
test
aad
dec
mov
pop
outsl
xor
add
cmp
lret
test
insb
aaa
cmp
push
rcrb
adc
add
lcall
fcmovnb
ret
pop
mov
stc
dec
mov
mov
sub
or
dec
jle
sarb
dec
stos
stos
lret
xor
jne
mov
out
mov
pop
mov
cmp
cmp
idivl
aad
push
jns
ja
std
xchg
outsb
push
enter
push
outsl
jle
sbb
dec
popa
or
xor
or
pop
mov
mov
push
daa
ja
pop
insb
jl
ret
sub
mov
pop
mov
mov
filds
jge
push
pop
aam
inc
sti
jl
push
aam
clc
sbb
pop
addr16
mov
push
jle
cmpsb
push
push
xor
lahf
sbb
lahf
andl
nop
sbb
sbb
out
sub
jp
test
out
nop
mov
jmp
imul
cmp
add
cmp
sub
stos
mov
icebp
lea
mov
push
rcl
or
jbe
data16
and
fimuls
call
cmc
adc
pop
ss
adc
insb
dec
jnp
test
out
dec
xchg
psllq
lcall
dec
mov
inc
push
cmp
jl
jbe
dec
inc
inc
mov
or
push
push
jg
roll
ficoms
movsb
pop
xchg
dec
lcall
sbb
xchg
insb
imul
fdivrl
xor
ss
cmp
cmpsb
hlt
sbb
mov
or
and
mov
and
inc
sub
cmc
stos
jae
test
lret
xlat
add
inc
lret
jns
repz
cs
sbb
xchg
inc
rcrb
addl
and
xchg
lods
dec
iret
fstl
fmul
sub
jnp
ror
jns
sahf
mov
jo
fdivrs
rcll
mov
pop
dec
lcall
ja
mov
loope
jmp
inc
lret
dec
mov
add
pop
sti
jns
pop
push
insl
pop
cwtl
mov
push
loope
aad
bound
xchg
mov
jbe
inc
psubsw
inc
adc
rcrb
insb
mov
mov
scas
mov
xlat
jo
outsl
repnz
mov
scas
dec
sar
jge
pop
mov
jb
shlb
shlb
mov
mov
dec
mov
push
sbb
mov
mov
mov
xlat
xchg
adc
rclb
pop
xchg
and
pushf
shlb
pop
int
jae
cmp
test
fwait
push
dec
fsubrp
sbb
pop
fldcw
fisubl
sub
or
or
rcrl
push
int
cmp
pushf
repnz
xchg
pop
mov
pop
js
divl
sarl
jp
jmp
add
add
scas
xchg
in
or
jns
mov
xor
ja
pop
cmpsl
inc
push
pop
ds
fwait
inc
js
das
mov
aaa
jmp
pop
jo
and
outsb
mov
pop
mov
les
sub
jge
xchg
loope
movl
pop
les
push
lock
dec
stos
frstor
dec
lock
adc
jb
push
mov
dec
imul
mov
dec
pop
jmp
and
inc
nop
andl
mov
sbb
sahf
and
xchg
aas
stc
sub
jb
enter
sub
in
loop
aas
adc
jmp
pop
add
sbb
test
call
pop
dec
pop
dec
cmp
cmpb
and
imul
mov
movsb
fstpt
xor
frstor
xchg
sub
mov
popf
adc
and
fidivrs
test
mov
scas
enter
pop
jmp
adc
sub
or
xchg
insb
xchg
out
lcall
into
sti
cmp
push
jb
mov
shll
jnp
pop
lret
mov
xchg
stos
movb
push
es
frstor
into
clc
pop
fcmovbe
test
sub
mov
mov
lret
mov
and
lahf
mov
lds
faddl
xor
int3
add
add
lret
xor
mov
gs
icebp
fcmovb
int3
stos
push
push
negl
clc
mov
fistpll
pop
fldcw
jle
and
std
jecxz
out
sbb
inc
imul
inc
xor
ja
cwtl
lcall
scas
out
mov
ja
hlt
jno
mov
popa
mov
jae
loope
movb
seta
int3
lret
and
in
xchg
xlat
or
and
pushf
ffree
add
test
add
add
ret
out
leave
arpl
rclb
pop
in
js
mov
sub
popa
pop
add
stos
or
jge
in
ret
jae
push
xchg
mov
push
mov
pop
push
mov
sbb
push
and
pop
int
pop
and
jmp
ja
inc
jecxz
mov
test
mov
xor
cltd
dec
sbb
popf
jno
dec
cs
push
cltd
jecxz
gs
lcall
inc
rcll
adc
pop
mov
ja
enter
stos
comiss
inc
addr16
and
test
mov
es
sbb
imul
mov
pop
outsb
shrb
mov
push
jo
repnz
gs
dec
bound
cmpsb
fisubrs
xlat
inc
jb
inc
sbb
fcmove
insl
dec
mov
dec
nop
cmovno
jecxz
out
dec
mov
adc
xchg
xor
mov
cmc
pushf
loope
inc
add
psubd
in
flds
andl
sahf
repz
fnstcw
leave
repnz
inc
ss
or
popf
sti
sbb
pushf
sbb
cli
loope
mov
leave
or
inc
mov
repnz
inc
jge
stos
add
movsl
cmp
pusha
arpl
sbb
or
sub
into
inc
push
xor
stos
adc
mov
fimull
mov
jmp
jns
mov
dec
faddl
sahf
mov
mov
pop
cli
rorb
and
fwait
dec
adc
jmp
fdivrl
mov
push
xchg
sbb
int3
sub
pop
or
cwtl
leave
icebp
mov
fbstp
cmpsl
insb
push
pop
and
adc
sahf
hlt
sti
sti
xchg
pusha
ret
add
xor
push
mov
incl
add
add
repnz
push
dec
sub
mov
jns
das
push
rcr
mov
sti
stc
jns
dec
add
iret
add
je
std
enter
sub
jns
inc
jnp
flds
fstpl
arpl
cli
mov
arpl
pop
mov
push
addr16
dec
shl
jecxz
and
fdivl
out
ljmp
xor
mov
repnz
mov
out
mov
insb
shl
push
jg
insl
fiadds
pop
cmp
xchg
pusha
sbb
dec
adc
pop
movsl
sbb
roll
andl
dec
bound
ret
lret
and
pop
push
lods
outsl
pop
data16
cmp
pop
push
mov
cmp
push
sbb
inc
xchg
test
mov
add
movsl
orb
jg
add
and
xchg
in
and
adc
xchg
mov
push
aaa
mov
rolb
mov
inc
xorl
mov
jns
cmp
adc
mov
sub
pop
pop
lock
out
mov
clc
lock
add
add
test
fs
pop
in
testl
xor
lods
and
mov
mov
aas
mov
lock
xor
aas
mov
mov
push
or
in
inc
sbb
xchg
mov
adc
sbb
add
int
and
cmp
pushf
cmp
xchg
daa
xchg
pop
jle
lock
sub
add
test
test
shrl
das
cmp
into
push
ret
mov
jbe
push
jp
jle
push
in
dec
jno
sbb
or
outsb
cltd
sbb
fiaddl
ret
dec
push
inc
or
repz
out
cmp
add
or
xchg
push
daa
cmpl
es
jae
and
jle
push
xchg
ret
iret
clc
arpl
pusha
bound
xor
push
jp
pop
shll
sub
sub
adc
repnz
pusha
pop
sub
fs
pop
pop
jge
loope,pn
add
add
das
movsb
in
loop
inc
jmp
cmp
test
enter
testb
rol
xor
jns
dec
mov
test
test
or
lock
xor
push
jae
pop
icebp
cmp
cmp
fisubs
pusha
push
inc
shll
jbe
xchg
sub
pop
hlt
adc
pop
mov
pushf
cmp
lock
fidivs
sbb
popf
adc
fiadds
addr16
enter
jo
adc
adc
fwait
or
pop
test
or
sub
xchg
inc
lahf
in
push
or
push
or
sbb
imul
mov
dec
lds
push
jmp
lds
pop
enter
je
imulb
xor
pop
push
shl
cli
cmp
or
pop
xchg
sbb
sbb
fstpt
jecxz
rclb
mov
mov
test
pop
arpl
shr
push
in
inc
jo
das
add
shrb
mov
orl
mov
dec
lret
and
je
xchg
popf
pop
mov
dec
in
test
cltd
jb
xchg
jp
xchg
les
aad
and
adc
aas
and
andb
jnp
xchg
into
mov
push
out
lock
push
mov
push
rclb
mov
mov
cmp
jl
sub
push
ja
int3
xor
scas
int3
xor
stc
lret
pop
or
mov
cli
cmp
mov
aad
add
and
mov
fidivs
ret
push
fisubrs
bswap
dec
pop
lret
ret
sub
mov
sbb
popa
dec
push
dec
fistpll
adc
outsb
lret
jmp
loop
or
shll
push
fiadds
mov
mov
dec
mov
fbstp
dec
mov
cmpsl
xchg
pushf
fs
jecxz
jnp
fnstsw
fldl
jg
sbb
pop
xor
sahf
xlat
daa
cwtl
cld
arpl
dec
sbb
je
andl
fsts
inc
mov
and
or
rcll
dec
and
std
fxch
shr
and
lret
fs
movsb
loopne
loope
arpl
xlat
xchg
repz
mov
mov
sub
dec
and
rcrl
call
dec
std
cmpsl
jp
leave
shll
sub
xchg
stos
cld
fst
mov
dec
jmp
add
imul
icebp
lret
mov
inc
clc
adc
test
fidivrs
and
imul
mov
mull
stc
pop
aaa
int3
ret
jge
mov
adc
inc
inc
adc
xchg
rclb
je
ljmp
add
push
adc
push
xorb
cli
jp
mov
xor
sub
aad
in
sub
sub
xchg
push
shll
mov
sub
dec
jl
mov
xchg
mov
lahf
xor
addr16
jl
iret
clc
or
xchg
xor
cmc
sbbb
imul
shrb
pop
movsb
jb
imulb
ss
adc
mov
lds
fidivs
mov
cmp
jae
add
mov
lds
push
loop
mov
add
ljmp
test
add
outsb
pop
lods
call
sti
outsl
mov
in
mov
js
fimull
aas
sub
add
add
mov
dec
daa
push
mov
xchg
insb
stos
cmpsb
jg
test
and
xor
push
aam
pop
das
inc
add
inc
and
dec
xor
mov
jg
push
push
mov
xchg
sub
lock
movsl
pop
push
and
cs
lock
xlat
or
loop
imul
mov
aam
fs
repz
cld
jmp
jmp
jl
sub
int3
pop
xor
cld
shl
push
dec
test
sub
xchg
stos
adc
add
or
clc
mov
lock
add
fsub
call
cwtl
or
xchg
xchg
nop
loope
adc
stos
push
mov
lahf
jo
dec
lods
jmp
or
sti
dec
mov
mov
add
out
xchg
pop
and
stos
icebp
xor
mov
adc
idivl
insb
cmpsl
xor
inc
jno
fld
mov
shl
push
mov
mov
push
test
js
add
jp
and
fbld
cmpsb
jbe
mov
adc
add
ficomps
sub
adc
movsb
in
dec
rcrb
xchg
iret
mov
mov
loopne
or
clc
adc
pop
or
sub
push
test
push
lods
rorl
popl
rcrb
pop
cmpsl
dec
pusha
fisttpl
sbb
test
push
inc
in
push
xchg
inc
xchg
jb
and
jp
shrb
sbb
xchg
push
iret
inc
testb
cs
js
inc
stos
mov
lahf
mov
adc
push
test
fmull
adc
and
xchg
mov
shlb
add
add
add
dec
nop
daa
into
lcall
in
int3
xchg
lods
push
or
aad
addr16
lret
je
push
ret
cmp
jecxz
out
mov
jne
out
arpl
cmp
sub
aaa
aad
dec
mov
jne
sub
jg
cmp
rcrl
inc
std
lahf
leave
jl
dec
push
push
dec
sbb
int
adc
sbb
cltd
push
outsb
aas
jp
aas
xchg
sbb
orl
clc
cmc
mov
adc
jbe
jbe
nop
xor
les
in
push
jl
adc
mov
mov
test
pop
jb
pop
test
cmp
ss
divl
out
push
rcrb
adc
ds
fs
jo
jns
xchg
jp
sbb
das
daa
subl
rorl
repz
ds
aaa
je
wbinvd
fwait
inc
pop
push
movsl
jne
mov
sbb
in
pop
dec
pop
fdivr
add
les
pop
pushf
or
clc
outsl
insl
mov
mov
cmp
adc
or
pop
or
out
mov
ss
mov
insb
out
add
cld
xchg
dec
push
hlt
dec
jne
andl
icebp
mov
or
hlt
push
push
push
inc
int
mov
test
fistps
xor
insb
mov
dec
scas
xchg
sub
and
add
int
sbb
push
mov
lds
push
jne
jl
dec
cli
or
dec
popf
xchg
lea
mov
pop
sub
adc
jne
xlat
insb
mov
outsl
test
jge
scas
hlt
inc
aas
jno
mov
and
loop
pusha
int3
rcl
in
mov
jns
mov
aas
fcoms
jbe
add
pop
sbb
jno
adc
fdivl
aaa
pop
inc
jae
add
add
leave
pop
pop
pop
sub
outsb
pop
stos
lods
scas
cld
pop
cwtl
mov
std
call
jge
das
imul
es
pop
lret
imul
push
fistl
ss
call
xchg
rcrl
inc
std
data16
clc
xlat
jns
push
stos
and
or
inc
jle
cmpl
test
loope
cli
mov
int3
fmuls
dec
mov
cmp
pop
cli
fstl
push
enter
in
call
and
xlat
test
repz
push
cltd
jbe
mov
adc
jg
das
movsl
adc
mov
clc
xchg
roll
push
and
inc
cmp
inc
push
test
add
nop
pop
ficoml
sub
adc
or
lret
test
mov
mov
add
dec
push
mov
mov
stos
aad
sub
sub
inc
jo
std
je
insb
adc
inc
jle
out
pop
mov
lock
adc
fcompl
jge
fadd
loope
jge
subl
sub
out
mov
int
sub
push
out
dec
pop
dec
jns
add
pop
cmpsl
cs
fstpl
dec
aaa
or
cli
push
inc
sbb
lahf
push
inc
pop
and
movsl
gs
mov
sahf
lds
dec
mov
fs
mov
mov
fildll
leave
push
or
dec
cmp
jl
outsl
in
hlt
pop
jae
inc
jp
fisubs
movsl
ljmp
xchg
xchg
repnz
cmp
aad
lods
js
sbb
shll
lret
sti
sub
pop
or
jns
mov
dec
js
dec
fwait
pop
lret
inc
mov
add
add
adcb
cmp
jge
addr16
push
adc
test
out
xor
ljmp
cmpl
pop
repz
lcall
comiss
hlt
inc
mov
iret
mov
fs
mov
mov
cmpsl
lret
mov
inc
pop
and
clc
fwait
lahf
insb
mov
push
loop
aaa
jno
push
ja
mov
in
fwait
xor
mov
cmp
lods
inc
outsb
push
lea
aaa
mov
jecxz
add
jp
inc
ss
adc
add
popf
and
push
call
jb
jp
das
push
leave
adc
and
dec
jmp
dec
lret
pop
cmp
xlat
maxps
hlt
out
dec
roll
test
cli
mov
and
out
je
push
xchg
subl
dec
sub
cmpsl
fdecstp
clc
jns
arpl
push
das
enter
lds
jge
popf
rep
inc
cmc
sub
xor
hlt
jecxz
int3
insl
inc
iret
outsl
popf
jge
add
ja
inc
inc
pop
xlat
int3
xor
sub
mov
loope
add
loopne
gs
int
in
dec
mov
inc
es
fs
int3
cmp
sbb
ret
push
jp
pop
insl
or
jle
jnp,pt
or
popf
adc
in
sti
int
and
add
lcall
sahf
dec
jno
mov
test
orl
inc
fcomip
dec
fld
jmp
pop
shrb
sti
push
stc
dec
stc
in
loope
jl
je
jb
fs
add
stos
sub
and
pushf
add
shrl
and
stos
cmp
loope
mov
jne
jbe
test
stos
dec
repz
add
pop
inc
arpl
loope
sahf
add
jle
dec
mov
add
add
xor
xlat
mov
fstps
cltd
fs
add
popf
pop
incl
pop
jo
pop
push
ds
loopne
fwait
rolb
or
push
in
ss
test
mov
cld
ljmp
call
insb
pop
movsb
out
je
stc
dec
cs
inc
enter
lahf
mov
xor
sub
loop
ss
sub
fdivr
mov
test
xor
xor
mov
inc
jne
jne
rcl
sti
call
jp
aas
mov
sbb
add
in
or
push
lret
inc
pop
out
fs
push
fstl
or
loopne
inc
mov
rclb
scas
and
mov
push
xlat
hlt
cmc
or
pusha
loopne
cmpsl
sub
scas
bound
loope
and
ja
sub
sbb
push
and
mov
lret
jecxz
decl
std
adc
imul
jle
decb
or
fcom
pop
or
mov
lods
fs
das
les
or
outsl
or
loope
pop
dec
test
or
push
popa
outsl
imul
fmulp
call
mov
mov
mov
inc
sbb
fisttpll
scas
stc
popa
cmpl
fldcw
lret
call
sub
cli
test
int3
mov
in
jle
aad
xor
stos
and
sub
dec
dec
pop
or
je
pop
clc
sub
jno
test
push
stc
nop
pop
rdpmc
xchg
push
pop
adc
push
xchg
loopne
cli
xchg
aaa
push
out
lahf
cmp
push
or
scas
push
jge
sbbl
mov
lea
ret
sti
into
and
and
imul
adcl
push
jle
test
sbb
push
loopne
mov
mov
jb
repnz
test
dec
and
pusha
mov
pop
push
nop
and
push
int
sahf
lods
aam
add
jbe
add
rorl
dec
push
sbb
int
imul
jne,pn
xor
push
sub
fldl
loopne
push
pusha
mov
sahf
jo
dec
adc
imul
leave
ljmp
in
orb
push
lds
inc
dec
loope
dec
mul
andb
testb
xor
mov
daa
insl
into
cmpsb
mov
out
sub
in
xchg
decl
lods
in
scas
cmp
mov
in
mov
fmulp
faddl
shll
imul
sbb
pop
adc
sub
dec
in
xchg
xor
cmp
mov
pop
ret
or
negb
push
ss
fwait
pop
shlb
add
jnp
loope
int
dec
arpl
push
pop
xor
fcmovne
mov
dec
jne
hlt
inc
in
test
pop
pop
mov
fadd
cmp
out
in
loop
push
pop
fldl
and
mov
push
lcall
adc
add
ljmp
dec
movq
fadd
jns
insb
iret
inc
movsl
xchg
push
fldt
mov
sbb
mov
inc
scas
inc
fisubs
dec
mov
mov
push
ret
ds
dec
in
enter
pop
add
popf
jbe
lcall
mov
in
adc
pop
in
popf
ret
sbb
loope
sti
jecxz
imul
jo
mov
mov
mov
or
or
xor
push
inc
in
inc
pop
hlt
adc
scas
mov
pusha
nop
xchg
dec
repz
jno
in
lcall
inc
pop
outsb
push
std
ds
add
data16
dec
std
out
incb
push
add
stc
and
xor
push
rcrl
or
jl
add
adc
mov
orb
mov
add
int
sub
sub
popf
js
mov
add
inc
jg
jg
dec
xlat
and
jnp
or
jle
or
mov
fcompl
add
mov
in
sub
fs
ror
inc
xor
push
negl
inc
rcrl
data16
int3
jmp
cmp
test
sarl
jecxz
mov
push
dec
and
sub
jno
adc
xchg
xor
adc
or
cs
dec
mov
pop
shlb
mov
in
mov
mov
inc
aam
push
dec
or
mov
sub
inc
enter
mov
pop
mov
cwtl
mov
stos
leave
push
sbb
rorb
cmp
xchg
popa
test
aam
es
aaa
xlat
xchg
xor
sub
cld
pushf
sbb
nop
out
dec
out
test
adc
out
mov
movsl
or
jb
cld
movsl
sti
je
cmp
cmp
add
mov
fisttpll
pop
out
outsl
and
int3
lcall
xchg
daa
xchg
rcrb
jne
repz
mov
add
and
data16
xor
in
rcl
jnp
mov
lret
hlt
lahf
aas
sub
mov
jp
insb
cltd
add
rorl
sbb
adc
pop
test
xor
daa
pop
ljmp
mov
push
sbb
mov
cmpsl
lock
sbb
and
jge
adc
push
xor
mov
es
clc
mov
repnz
add
insl
aaa
mov
movsl
mov
jmp
mov
push
jecxz
mov
popf
add
and
fstpl
sahf
fstl
js
sub
movsb
add
icebp
pop
imul
cmp
outsb
dec
pop
or
push
and
popa
mov
stc
xorl
movsb
dec
dec
decl
nop
cmpsl
out
pop
lock
inc
jmp
adc
stos
inc
pushf
xor
loope
mov
push
add
test
aam
and
sti
inc
lret
movsb
xlat
and
push
test
in
sub
xchg
jne
mov
jbe
mov
xor
js
test
xchg
sub
pop
enter
rcl
mov
fcomi
in
inc
mov
ja
xor
mov
fs
popa
or
andl
aad
mov
ds
repnz
mov
leave
shlb
push
test
shlb
addr16
sbb
sub
ds
pop
dec
mov
jl
add
add
sahf
sub
outsl
jns
mov
mov
idiv
call
jo
pop
jge
mov
fidivrs
scas
repnz
or
aas
lret
jmp
out
xor
popf
push
xor
jmp
pop
pop
fsubs
xchg
jnp
pop
int
push
popf
jns
or
xor
mov
push
stos
mov
and
pop
jno
mov
adc
nop
aaa
aam
pushf
and
sub
sbb
or
repnz
dec
fisttpl
jne
loope
dec
test
out
xchg
push
xor
scas
jmp
into
cltd
pop
add
xchg
push
pop
int3
movsl
in
fwait
into
popa
call
sub
scas
dec
jp
cmp
loop
add
int3
sub
fs
adc
les
add
add
lcall
push
sbb
cmpsl
pop
divl
dec
shlb
push
jb
and
mov
scas
xor
aad
jg
idivb
in
mov
fdivs
leave
and
pop
pop
ret
mov
out
cmp
jmp
sbb
loope
loope
negl
fsub
add
jmp
dec
int3
std
rolb
jp
lret
cmp
stos
add
in
jp
cmp
lret
sbb
fcomi
cmpsl
frstor
addr16
es
clc
mov
repz
jo
test
pop
push
or
cmpsb
mov
stos
lods
addr16
cld
outsl
dec
adc
push
fldcw
into
bound
mov
arpl
jmp
inc
rorb
in
and
pop
popa
inc
mov
dec
js
sbb
adc
inc
stc
push
jge
dec
cmpsl
push
cmpsb
jmp
insl
mov
ret
mov
pop
mov
push
sbb
jmp
addb
push
add
or
mov
insl
mov
inc
stos
xor
aad
and
cld
outsl
add
test
loopne
pop
adc
repnz
mov
aad
or
call
lahf
sub
dec
ja
cmpl
loopne
ret
call
jg
cmp
push
sti
cmp
mov
shll
push
jb
jmp
or
sbb
dec
or
sub
js
xchg
enter
repnz
loopne
mov
push
jl
cwtl
cmpsb
ret
rcll
jo
rcll
loop
pop
mov
sub
insl
int3
lret
mov
js
enter
adc
push
cld
out
xchg
mov
fidivrl
lock
push
out
repz
mov
loop
aas
jo
les
dec
cmp
out
fldt
out
aaa
in
push
cmp
mov
rolb
add
inc
loope
sbb
test
xchg
in
inc
stos
int
jne
jp
aas
or
jae
push
pop
bound
icebp
lds
adc
pushf
mov
sbb
cwtl
rorl
outsb
aad
cld
xor
mov
pop
mov
in
int
xor
sub
mov
mov
sub
sbb
add
int
ljmp
jecxz
loopne
std
cmc
cmp
ret
pop
xchg
std
test
stc
push
sahf
aas
fadds
sub
adc
lahf
lahf
addb
mov
mov
push
add
inc
push
adc
sbb
adc
xor
movzbl
loope
clc
cmpsb
cmp
repz
out
xor
dec
and
and
push
and
or
aas
call
rcrb
lock
adcb
addr16
mov
jno
sub
push
in
pop
mov
popf
iret
adc
int3
and
xchg
mov
cmp
ss
test
out
mov
leave
xchg
push
sub
int3
fs
das
sahf
imul
or
lods
jge
add
mov
shll
inc
test
adcb
push
add
sbb
repnz
rcll
pop
add
push
aaa
and
loop
push
push
std
sti
ja
pop
xchg
das
out
aad
mull
fstpl
jle
adc
fcmovnbe
jmp
mov
cli
pop
out
or
pop
cmpl
jnp
push
pop
jns
pop
fstps
enter
dec
or
fstl
xor
cmc
sbb
cmp
push
das
and
adc
sbbl
fnstenv
push
pop
decb
sub
into
add
jbe
pop
je
mov
xchg
cmp
add
leave
jb
dec
repnz
dec
fs
xor
roll
or
es
xor
cmp
shlb
adc
or
mov
ss
xor
fwait
inc
add
mov
je
mov
xor
clc
pop
jp
popf
sub
test
push
add
ja
inc
fmull
fadds
es
outsl
pop
cmp
xor
lods
mov
jg
daa
mov
or
call
mov
lock
and
ret
iret
fstl
pop
dec
mov
and
out
mov
mov
arpl
add
cmpsb
popf
dec
mov
leave
jb
pop
ret
pop
or
fistpl
mov
stos
in
in
pop
add
sub
sub
pop
int
dec
mov
lea
ja
jmp
stc
jne
and
pop
push
mov
outsb
lods
arpl
push
frstor
add
cmp
and
loope
xchg
sbb
push
dec
int3
jae
mov
in
cmp
ret
dec
or
xchg
icebp
mov
pop
pop
and
jle
ss
sbb
or
adc
pop
aaa
pop
out
adc
out
lahf
pop
jmp
out
sbb
dec
rcll
sbb
cmp
hlt
int3
cmp
or
lods
push
shrl
nop
and
cltd
mov
mov
jns
mov
inc
addl
shrl
mov
jno
inc
fcmovne
je
inc
sub
pop
jp
lods
adc
pop
jg
je
jecxz
iret
ljmp
adc
mov
hlt
xchg
sbb
aaa
mov
cmc
push
push
sub
aam
add
insb
pop
dec
daa
and
test
cmp
sahf
test
mov
jg
push
mov
sti
pop
imul
gs
xchg
add
jge
sarb
repnz
sub
repz
adc
fcompl
insb
sbb
push
mov
mov
fs
push
mov
ja
push
or
movsl
or
les
pop
jnp
lcall
cmpsl
ljmp
aas
shrb
pop
and
js
shl
dec
ljmp
out
orl
mov
xor
jl
push
add
mov
push
sub
jno
fisttps
inc
inc
pop
or
inc
push
dec
inc
jnp
pop
std
xchg
lock
mov
test
sbb
sbb
xchg
outsb
andb
push
and
adc
xor
xchg
mov
cmpsb
pop
ret
push
roll
jo
out
inc
jo
sbb
shld
gs
lcall
push
sarl
mov
push
and
addr16
popf
jae
ja
dec
and
push
sahf
xor
xchg
lcall
sarb
add
jmp
dec
jnp
cmp
dec
push
bound
jbe
movsl
mov
cld
fst
call
leave
inc
push
ljmp
jo
cld
add
scas
insl
adc
mov
adc
test
and
push
inc
push
push
fldenv
std
popa
inc
inc
jns
or
xor
cmp
pop
cmc
dec
push
pop
xor
cmp
add
jecxz
cld
push
lea
ret
add
int3
subb
jl
dec
call
dec
sbb
mov
dec
fsubrs
mov
mov
loopne
lret
adc
mov
adc
add
adc
ficoms
andb
clc
jb
add
in
ret
or
into
fcmovnbe
movsb
int
and
mov
push
push
xor
adc
int
pop
mov
lock
add
cmp
mov
xchg
xlat
das
sbb
mov
xor
push
cs
mul
sti
sbb
sahf
pop
cmp
adc
xchg
inc
push
push
movsl
fcompl
cmp
pop
mov
xorl
fbstp
xor
adc
incb
fmull
dec
cmp
xor
jo
les
or
pop
or
pop
andl
sarb
aaa
outsl
cmpl
sbb
leave
orb
shrl
adc
pop
xchg
popaw
ljmp
push
sub
ja
in
in
ss
jge
mov
in
adc
mov
xchg
or
or
sub
aaa
loop
inc
cmpsb
in
inc
rcrl
stos
sti
xchg
ljmp
xorl
inc
cmp
and
jb
int3
xchg
leave
fisttps
xor
xor
pusha
iret
adc
pop
xchg
shlb
test
dec
enter
and
and
pop
jp
clc
insb
mov
mov
in
pop
dec
out
cwtl
rclb
lea
add
mov
popa
add
scas
dec
mov
lahf
movsb
mov
xor
jb
lods
popf
mov
sbb
sub
repz
fcmovb
jecxz
inc
imul
lods
loope
hlt
push
aad
cwtl
inc
ret
adc
popf
int3
cltd
sub
pop
cmp
inc
and
or
sbb
idivb
xchg
add
insb
pop
mov
jne
sub
jg
int3
xchg
in
scas
mov
lods
mov
cmpsb
lcall
imul
sub
dec
aaa
fadd
inc
cmp
inc
mov
dec
push
sbb
pop
mov
in
jmp
sbb
pop
mov
xor
xor
push
outsb
sbb
cmp
out
imul
repz
lock
in
push
call
inc
imul
add
push
push
lret
jo
pop
popa
aam
and
mov
xchg
dec
pop
sbb
test
loop
dec
mov
rorl
insb
call
iret
shr
jnp
in
xor
das
adc
or
add
arpl
ficoms
dec
jno
or
out
xor
xor
aad
arpl
ja
push
push
dec
adc
push
lahf
pushf
ficoms
push
mov
pop
mov
add
gs
or
and
lcall
in
push
fisubl
fiadds
jmp
out
sub
scas
cmp
pop
lret
push
xchg
adc
dec
sbb
cmp
push
mov
mov
rcrb
neg
fisubrs
push
fcmovnbe
dec
dec
ljmp
push
sti
sub
das
mov
sbbl
out
loopne
mov
xchg
lret
xchg
and
imul
cmp
in
fsts
and
jno
sahf
or
movsb
xchg
pusha
mov
dec
mov
iret
cli
shll
mov
inc
adc
inc
push
or
mov
mov
sbb
je
inc
xorl
loop
adc
pop
mov
in
cmp
pop
insb
dec
pop
pop
in
mov
adc
and
inc
pop
or
jmp
mov
int3
je
add
lret
xlat
js
repz
outsb
push
push
fldcw
leave
push
push
test
xor
and
insl
cmp
std
push
xchg
pop
pop
mov
pop
and
inc
mov
or
jg
outsl
sub
insl
sti
jbe
push
jecxz
push
ret
ret
dec
frstor
sarb
sbb
mov
fcompl
adc
ret
push
jns
cli
adcl
rorl
add
outsl
sti
adc
xchg
mov
or
insb
sbb
shl
push
mov
pop
in
adc
cmp
dec
push
in
jge
xor
add
pusha
or
sbb
shl
popa
lahf
fmull
sub
lods
cwtl
loopne
jle
mov
adc
lods
std
sbb
rcll
xchg
cmpsb
and
dec
lock
aam
ds
dec
or
and
aad
enter
imul
cld
js
cmpsl
ds
sbb
idiv
mov
pushl
pop
bound
xchg
cmpsl
shrb
aas
cmp
dec
push
push
jmp
inc
or
mov
sti
dec
mov
loopne
jbe
cmpsl
or
icebp
orb
mov
test
adc
dec
inc
push
lret
shll
and
imul
inc
ret
loopw
ds
jecxz
imul
jmp
std
les
pop
test
dec
sbb
sarl
adcl
sbb
push
mov
jp
dec
inc
push
les
adc
sbb
sbb
imul
push
inc
jae
fwait
and
lea
shll
push
pop
sahf
jecxz
pop
pop
lret
and
mov
inc
dec
add
loop
sarl
repz
lret
and
movsl
sbb
iret
stc
cltd
js
je
shrl
add
js
js
jne
add
jae
jb
jnp
jnp
cmp
adc
cmpsl
push
jecxz
inc
and
idivb
out
enter
push
xchg
inc
push
aad
or
mov
outsw
jg
cmp
xor
out
je
and
jns
roll
xorl
ret
mov
std
mov
popl
test
shl
mov
xor
add
cmp
loope
in
xchg
pushf
clc
push
lods
fstl
jbe
dec
jo
pop
push
bnd
pop
xchg
jge
pop
dec
jmp
mov
add
push
jecxz
sub
ret
test
pop
mov
in
sbb
es
cmovns
into
mov
pop
in
pop
testl
cmp
mov
dec
fcmove
mov
xor
push
push
cmp
or
adc
dec
test
mov
ror
mov
clc
lahf
fsubrp
wbinvd
inc
jle
sbb
das
push
push
popf
in
and
dec
clc
sti
and
sarb
or
insb
test
jns
dec
add
outsl
shrl
push
adc
inc
mov
push
test
dec
fidivl
inc
fcoml
aam
pop
and
loop
in
dec
js,pt
xchg
dec
mov
mov
push
mov
popf
pusha
in
sarb
stc
jge
jne
pop
xchg
outsb
push
aas
or
nop
test
jp
inc
dec
add
xor
sbb
sbb
jo
cmp
sbb
xchg
data16
lods
cmp
fistpll
sub
int3
or
pop
ret
sti
dec
test
push
push
pop
mov
dec
sarl
cmp
inc
add
pusha
jb
dec
jnp
push
in
stos
int3
stos
test
out
xor
addr16
test
outsl
or
sub
sbb
push
es
fidivrs
test
sub
jg
or
push
or
leave
mov
add
mov
insb
and
inc
jecxz
imul
scas
out
lea
mov
int3
leave
pop
popa
in
ds
enter
pop
inc
out
sbb
lret
adc
jl
push
cmc
jbe
jne
adc
xor
test
testb
add
pop
stos
bound
add
clc
popf
test
int3
xor
imul
lock
aad
out
xlat
dec
lods
les
js
mov
in
push
push
adc
xchg
sbb
pop
lahf
xor
pop
aam
cmp
sub
push
or
fwait
lahf
fs
cs
and
cmc
icebp
mov
adc
cmp
stos
dec
cli
int3
sub
inc
mov
lea
movsl
imul
inc
xor
xor
mov
pop
aas
cltd
adc
and
sbb
jne
xor
jge
adc
ret
jp
cmc
mov
insb
xor
fcmovnbe
test
mov
faddl
int3
lods
mov
inc
xchg
pop
cmp
jb
adc
adc
adc
mov
das
ja
lods
jns
pop
xchg
hlt
ja
inc
xchg
leave
or
mov
or
or
leave
xchg
jp
lret
cmpsl
in
test
jl
shlb
rcl
sbb
or
and
jmp
jl
iret
pop
push
push
stos
inc
jle
cmc
les
push
aas
add
jle
jl
fcoms
rorb
jns
add
adc
les
add
xor
lret
xor
or
and
sbb
push
jp
mov
insl
mov
push
scas
call
push
in
sbb
adc
xor
pop
jne
fdivl
push
jnp
int
sub
inc
fdivl
or
imul
fisubl
fcmovbe
mov
adc
and
push
fsubrp
lock
mov
repnz
daa
sbb
ljmp
mov
add
addb
pop
cwtl
je
scas
ret
pop
aam
mov
jl
adc
jecxz
test
outsl
sub
imul
insb
dec
outsl
or
in
outsl
push
inc
dec
testl
inc
cmp
sahf
mov
aam
or
testb
add
add
pop
test
cli
test
mov
cmp
or
popa
ret
int
cmp
push
out
fidivl
leave
mov
pop
sub
lock
sub
fistpll
push
dec
cli
push
in
push
sti
inc
popf
filds
push
lret
pop
xor
lock
push
pop
daa
fwait
stos
addr16
cmpsb
pop
and
roll
sub
int
fs
scas
or
icebp
push
fisubrs
sbb
scas
push
imul
adc
movsb
nop
testl
sbb
fimull
repz
xor
and
fisttpl
dec
fbstp
sub
std
out
outsb
clc
lcall
push
fistpll
xchg
cmp
das
out
mov
and
das
push
adc
xchg
lods
mov
ja
ja
jno
sarb
popf
or
adcl
mov
push
cltd
lods
push
insb
xor
push
dec
test
mov
jae
sub
ret
pop
jns
dec
int3
gs
inc
pop
xchg
dec
and
inc
jns
ja
dec
jp
push
or
mov
sub
insl
aad
xchg
int
cli
pop
mov
daa
pusha
jecxz
imul
das
sbb
test
xchg
sbb
or
out
test
lret
jle
add
mov
cmc
mov
data16
cmpsl
inc
leave
xchg
xlat
cld
cmp
mov
dec
jne
loope
rcl
jae
and
mov
outsb
mov
push
stos
sarb
shrl
pop
sahf
sahf
cs
ret
test
in
add
fdivs
lret
dec
mul
mov
std
insb
pusha
jbe
add
clc
sub
popa
cmp
popa
pop
xchg
sub
insb
movsl
das
dec
stos
test
dec
lret
int
mov
scas
aas
or
jns
repz
ja
add
add
cli
xchg
or
inc
sub
xchg
push
mov
jmp
jmp
cmp
jb
mov
dec
lahf
mov
inc
mov
push
jno
shll
fsubr
sti
idiv
sbb
outsl
dec
shrb
lods
cmp
stos
or
arpl
fcom
mov
das
clc
shlb
jo
popf
mov
mov
in
addl
push
jmp
xchg
and
pop
xor
in
push
xor
hlt
xor
mov
enter
push
divb
popf
sbb
mov
dec
add
mov
ja
adc
add
xlat
or
mov
dec
mov
pushf
lret
add
pop
mov
pop
dec
cmpsb
jb
inc
push
outsl
mov
and
lods
mov
xchg
sub
sbb
mov
pop
enter
xor
cmp
mov
adc
inc
in
mov
pop
add
pop
mov
xor
jl
jns
ss
lods
xor
les
movb
jg
test
dec
pop
insl
and
repnz
pop
test
push
fucomi
mov
mov
dec
push
add
mov
push
push
fnstenv
cmpsl
das
and
pop
pop
or
inc
mov
push
inc
inc
sub
cmp
int3
mov
enter
jns,pt
movsb
stos
je
adc
add
loopne
jge
into
mov
pop
loopne
xchg
jge
shrl
xchg
add
shrb
mov
fwait
iret
push
lahf
xor
outsl
rclw
dec
test
scas
cmc
push
gs
xchg
out
leave
and
push
dec
je
mov
pop
es
cmp
sub
pop
mov
add
add
jo
dec
push
addr16
aas
pop
jl
loop
xchg
push
sarb
cmp
dec
loop
mov
popf
and
jmp
pop
dec
mov
mov
stos
inc
push
jo
je
or
xlat
or
push
push
aad
iret
ljmp
sub
mov
jge
mov
jle
lret
or
fcoml
mov
mov
jge
mov
or
mov
lods
test
xor
and
jae
rorb
decb
pop
adc
push
mov
pusha
inc
ljmp
or
enter
add
and
ljmp
dec
inc
lods
enter
xchg
mov
add
dec
push
repnz
lahf
mov
cmp
enter
insb
push
mov
sbb
int3
add
in
pop
mov
or
fnstcw
insb
sub
pop
jne
mov
or
inc
jecxz
fcmovnu
cmp
pop
fs
inc
test
lret
lods
cli
sbb
adc
push
add
mov
dec
sub
int3
mov
xchg
subl
dec
shll
fwait
sbb
loopne
push
ss
add
lods
inc
push
into
jae
loopne
popa
sbb
loope
pop
out
inc
sub
jge
loop
push
or
andl
clc
icebp
aam
push
xchg
dec
inc
cltd
jo
jae
and
je
pop
shl
loope
sbb
jno
adc
in
inc
push
ljmp
sub
dec
imul
add
pop
push
std
sub
hlt
adc
jae
sub
mov
popa
fildll
loop
push
inc
rcll
jp
lods
sub
mov
arpl
mov
pop
pop
test
and
mov
pop
arpl
sarl
rorb
xor
loop
mov
add
lcall
cmp
ret
add
jle
adc
imul
mov
fimull
pop
int
dec
pop
inc
inc
repz
pop
adc
out
imul
cmc
push
addr16
xor
out
int3
add
push
pop
mov
dec
mov
movsl
cli
hlt
cmp
inc
inc
cwtl
out
jl
sub
loope
mov
cmp
dec
adc
in
xchg
sbb
mov
or
adc
push
pop
jge
les
cmp
mov
mov
iret
out
and
push
push
xlat
pop
pop
ds
icebp
imul
push
or
aaa
add
inc
pushl
xchg
les
inc
cmp
and
in
and
je
push
push
in
cmp
push
enter
adc
jle
js
pusha
std
rorb
bound
mov
in
pop
lock
add
or
addl
mov
xchg
fildll
ljmp
push
sbb
pop
inc
cli
pop
fidivrl
cli
xchg
push
sbb
push
pop
roll
inc
repz
cmp
bound
lods
hlt
dec
cli
ret
mulb
ljmp
pop
in
mov
pop
cmpsb
out
cld
scas
aam
test
imul
shrb
fs
in
mov
subl
stos
inc
dec
jmp
mov
add
jb
lret
inc
mov
add
sub
jo
mov
pusha
pop
and
sbb
arpl
aam
mov
outsb
fidivrs
add
loope
in
push
push
inc
addr16
imul
imul
jns
pop
mov
mov
mov
pop
xchg
js
mov
data16
in
aas
movsl
sub
push
cwtl
push
xchg
es
lods
je
insl
or
sub
mov
rcll
out
sahf
stos
mov
jecxz
iret
dec
add
sbb
cmp
xchg
pop
pop
roll
add
xor
fs
cmc
idivb
dec
gs
out
jecxz
icebp
add
aad
lret
pop
push
pop
js
jmp
inc
jae
lock
xor
lea
ljmp
dec
dec
mov
or
push
scas
cmp
dec
fwait
mov
sub
int3
movsl
inc
jle
sbb
jle
fldenv
js
cwtl
divl
xor
ljmp
imul
lahf
push
sbb
data16
ret
or
pop
xor
leave
push
inc
mov
xchg
sub
push
dec
and
ljmp
dec
fldenv
xchg
dec
jb
sub
jnp
aad
push
sub
ret
test
cwtl
das
scas
sub
push
mov
ja
lea
dec
pop
xor
pop
xlat
or
std
data16
iret
in
in
popf
fwait
pop
lds
pop
out
decl
mov
jle
sahf
push
sahf
xor
ds
inc
inc
xor
jmp
mov
sbb
push
cmp
loop
xchg
test
sti
add
les
mov
test
icebp
inc
clc
inc
xor
pop
and
jb
enter
push
inc
cmp
jns
ja
and
mov
loope
sahf
cmp
stc
les
loope
sarb
inc
nop
lret
and
in
repnz
or
mov
push
lds
leave
mov
nop
push
test
jno
add
jl
adc
lds
jle
jnp
shrl
and
popf
inc
fidivrl
pop
aas
push
adc
add
add
lea
inc
or
scas
inc
les
fstl
pop
dec
xchg
mov
mov
sub
push
fs
or
insb
stos
jge
dec
or
add
movsl
or
inc
jae
xor
jbe
fs
stc
lar
dec
pop
fstpl
mov
test
cmp
aaa
xor
dec
mov
sub
xor
ret
and
mov
mov
fadd
sti
pop
add
cwtl
sbb
add
daa
mov
imul
xorl
pop
or
and
cmpsl
pop
sbb
push
dec
leave
insb
nop
add
xchg
dec
push
mov
mov
and
aaa
out
scas
cmp
push
out
jle
cmp
sahf
pusha
scas
dec
cmp
push
scas
out
xchg
aas
addl
lea
dec
pusha
imull
xchg
test
int3
push
mov
pop
xor
pop
push
stos
jge
sbb
dec
jae
shll
sbb
stos
sbb
push
pusha
jno
xchg
sahf
push
fsubr
fwait
jb
test
cli
dec
pop
rcrb
pop
fucomi
push
mov
rorl
int
cld
dec
outsl
sbb
push
sarl
cmc
lea
cmp
xchg
mov
clc
sbb
leave
push
xchg
fistpl
js
cmpsb
ja
frstor
and
push
scas
loopne
sub
lret
jo
es
rcr
pop
cmp
add
loope
dec
sbb
daa
push
inc
fs
fld
test
popa
xchg
or
push
pop
je
mov
push
loopne,pn
lea
mov
pop
mov
jl
xchg
jmp
std
and
pop
lret
xchg
dec
jmp
cmp
jge
mov
or
push
fnstsw
in
cs
mov
jle
push
stos
lods
xchg
std
adc
ds
seto
add
add
sbb
lds
sub
mov
sub
jmp
int3
mov
dec
pop
clc
xor
inc
sbb
xchg
inc
push
cmpsl
cmp
xchg
push
pop
mov
pop
mov
orb
lret
mov
sti
rcrb
dec
imul
pop
inc
cs
inc
pop
daa
mov
or
cmpsb
in
and
sub
fstpt
cli
and
jno
push
shl
leavew
pop
jmp
cli
movsb
pushf
out
xlat
xchg
sub
divl
fnstcw
popa
xchg
cs
or
int3
push
dec
sub
in
das
cmp
or
outsb
insl
or
out
xor
mov
aaa
adc
and
xor
cmp
nop
xchg
leave
fnsave
into
sbb
pop
stos
xor
pushf
cmp
sbb
lock
pop
sbb
mov
and
inc
adcl
test
dec
or
in
pop
cltd
mov
je
js
ja
daa
ss
pop
out
xchg
in
pop
ja
jae
nop
dec
push
rcrb
sbb
fwait
ja
sub
mov
push
adc
push
dec
adc
push
push
movsb
sub
jge
cmp
fdivs
enter
je
pop
jno
arpl
test
in
xor
subb
sub
cs
int3
or
xor
cmp
stos
hlt
xchg
add
cmpsl
stc
inc
xchg
dec
pop
xor
scas
lret
scas
fwait
or
mov
inc
gs
push
mov
gs
repnz
test
js
ja
iret
xchg
outsl
xchg
cmpsb
into
mov
pop
push
jbe
inc
int
out
outsb
push
jo
lea
jo
mov
sbb
nop
fs
bound
outsl
pop
stos
jae
sub
push
fildl
ja
push
push
dec
fildl
add
add
cld
cmp
jns
xchg
aas
lret
outsb
in
cli
dec
sbb
in
aas
xlat
push
mov
mov
test
cs
aas
popf
xchg
test
fcoml
loop
mov
sahf
cmp
sub
insb
jmp
sbb
stc
inc
aam
dec
std
fs
bound
pop
mov
push
pop
adc
mov
lret
bound
inc
sbb
inc
xlat
idivb
mov
loop
fcmovnb
or
int3
adc
clc
ljmp
sarl
inc
dec
sbb
movsl
mov
and
imul
fisubl
mov
dec
rolb
push
and
cmp
cwtl
ljmp
inc
mov
sbb
dec
rclb
sarl
dec
jl
dec
adc
push
test
add
xor
adc
adc
xchg
call
adc
cmp
mov
lahf
and
add
stos
pop
sar
ret
fadds
daa
movsl
inc
lret
dec
mov
add
in
frstor
sub
or
bound
xor
testl
cmp
pop
jb
mov
mov
sbb
test
jo
and
fstpl
jl
inc
pusha
aam
sbb
jg
test
push
insb
push
out
pop
test
jge
arpl
enter
and
jb
ret
testb
jl
leave
jmp
cmp
rorl
fisttpl
inc
not
aas
cmpl
mov
add
mov
scas
dec
bound
les
fwait
arpl
push
insl
or
mov
pushl
push
loopne
push
push
jnp
int3
cmp
lea
dec
push
loope
and
sbb
push
adc
sti
pusha
dec
std
pop
push
mov
adc
insl
data16
test
push
jl
adc
mov
fucomp
mov
dec
lcall
add
ret
sbb
dec
in
cmp
mov
cmpsb
mov
outsb
sub
jne
mov
inc
adc
push
ja
or
mov
sub
fstpl
sbb
pop
fldt
add
jmp
bound
and
in
sub
fisubrl
lret
outsb
xor
fnstcw
cmp
lods
jge
sub
push
push
rcl
fidivs
xor
cld
insb
xchg
es
inc
jmp
and
dec
inc
adc
inc
das
shlb
ret
jbe
test
push
pusha
cmp
imul
rolb
fwait
aaa
jp
mov
add
or
push
mov
mov
xor
out
outsb
out
addr16
lds
push
adcl
repnz
negl
jnp
jo
xor
sbb
mov
mov
pop
ds
rcl
inc
inc
stos
call
stos
push
mov
loop
xchg
pop
jg
sub
pusha
loopne
jg
push
push
lcall
aad
xchg
stos
cmp
cmpl
int
xchg
cmp
shll
xor
xlat
xor
jecxz
test
xor
in
jb
and
adc
mov
mov
fs
rol
adc
pop
pop
push
inc
xchg
lds
dec
pop
in
xchg
mov
lcall
addl
push
in
xchg
push
or
cwtl
in
and
lods
outsb
lret
in
sub
movsl
aaa
pop
out
lret
jbe
jae
add
sbb
popf
inc
pushf
and
pop
test
loopne
inc
sub
pop
and
aas
and
mov
cmp
addr16
enter
xchg
addr16
inc
imul
sbb
push
popa
cmp
out
sbb
push
jp
clc
sub
aas
cmp
ret
xor
cmp
lahf
cmp
cmpsl
sub
int3
inc
mov
stos
int3
shl
pop
es
add
pop
push
jae
out
add
sti
fwait
stos
xor
addr16
xchg
pop
or
iret
in
pop
cmp
cmc
ja
adc
mov
push
sarl
or
lret
mov
stc
dec
ljmp
sub
and
jl
inc
in
bound
cmp
movsb
pop
sub
test
pop
jnp
xchg
int
or
insl
mov
gs
dec
xor
inc
js
xor
mov
int3
movsl
mov
lret
jl
jnp
pushw
mov
pop
pop
dec
dec
clc
mov
daa
and
dec
shrl
or
fucom
add
mov
jnp
rolb
add
dec
lock
inc
data16
divl
xchg
scas
mov
sub
jne
insl
sub
cmpl
jmp
mov
mov
dec
je
addr16
and
sarl
fidivrs
movsl
test
in
adc
add
sub
and
add
sti
adc
adc
ficomps
mov
outsl
xchg
dec
fisubs
ljmp
scas
push
or
iret
cwtl
clc
dec
out
inc
and
cmc
xor
aam
cmpsl
fcmovb
xor
out
mov
dec
cld
inc
pop
enter
iret
and
jo
ds
cmc
push
mov
add
cmp
jns
gs
cmc
or
js
rcr
sbb
xchg
and
adc
in
lods
ret
insl
mov
loop
test
fadds
or
scas
and
mov
pop
lock
imul
cmpsb
daa
and
popf
mov
rolb
js
rorb
pop
bound
push
mov
call
roll
push
ret
mov
sub
mov
dec
sbb
push
mov
pop
push
rolb
popa
sub
nop
sbb
outsl
iret
sbb
xchg
jb
sub
popf
add
cmc
pop
stc
adc
push
aaa
cltd
rcr
jae
jno
scas
inc
adc
cmp
arpl
ja
jnp
in
fcom
popa
pushf
mov
pushf
pop
ret
push
xor
lcall
fsub
lock
jle
sbb
pusha
gs
pop
lahf
fdiv
sub
mov
and
xor
mov
pop
or
jp
cmpsl
sub
popl
stos
push
pop
outsl
adcb
jno
dec
jle
cli
xchg
jno
mov
inc
pop
jne
punpcklwd
int3
cmp
push
bound
lds
lret
push
es
push
cmp
pushf
dec
mov
shlb
lret
mov
loop
jecxz
in
cmp
push
ss
sbb
mov
es
xchg
push
push
arpl
push
dec
stc
aad
jge
lcall
and
imul
xchg
dec
lret
or
jle
mov
xchg
scas
sbb
lret
int3
mov
pushf
push
mov
ljmp
ja
jns
mov
lahf
in
add
into
xchg
cmc
xor
push
leave
popa
and
jl
push
sub
cli
jb
sahf
inc
dec
add
aaa
stos
nop
mov
movsl
lods
iret
inc
sub
scas
ds
jo
and
dec
pop
xor
mov
je
test
push
mov
sti
mov
les
jns
push
jmp
lcall
sbb
popf
mov
cmc
jge
pop
sbb
cmp
call
sbb
into
mov
out
jmp
jmp
fidivl
std
in
sbb
lock
insb
cmp
cmp
add
arpl
hlt
xor
xor
je
fyl2xp1
dec
xchg
arpl
push
or
xor
mov
sub
jge
push
aaa
test
insl
mov
test
fistl
pushf
sub
mov
repz
xchg
jge
pop
cmp
dec
loope
adc
mov
pop
pop
and
popa
stc
dec
repz
out
cwtl
addl
cmpsb
xor
inc
push
sahf
call
outsb
push
cli
sub
xchg
sarl
stc
cs
in
arpl
pop
mov
in
inc
sbb
leave
mov
and
dec
push
mov
pusha
add
ja
add
test
test
pop
fsub
outsb
mov
inc
jno
mov
push
imul
xchg
jle
movaps
aas
and
dec
ficompl
cli
mov
jns
cltd
push
int3
cmp
dec
pop
mov
jns
or
cmp
das
xlat
xchg
adc
addb
or
aad
in
stc
je
push
aam
aad
rorl
push
lods
cmp
sbb
inc
mov
or
rorl
lods
mov
jnp
mov
mov
shlb
dec
pop
in
sub
sub
xchg
push
sbb
dec
test
scas
rclb
add
je,pt
aad
enter
push
mov
sub
shlb
mov
nop
rclb
sbb
push
pop
mov
stc
fldt
out
push
test
aad
loop
push
xchg
addr16
mov
lret
out
test
jle
sub
aaa
inc
push
andl
jmp
fmul
jl
clc
pushl
leave
push
pop
dec
mov
dec
push
or
jmp
std
sub
jns
call
add
inc
aam
sbb
enter
popl
inc
or
inc
sub
shl
add
dec
inc
jno
leave
sub
jge
call
push
and
and
push
dec
pop
ret
push
stos
jmp
jge
jns
add
neg
push
loope
fadds
xor
loope
push
fnsave
xor
jp
mov
aas
dec
xchg
andl
je
jnp
push
roll
loope
fdivrs
mov
aaa
shl
stc
sub
lds
movsb
lods
pop
jle
dec
sbb
ja
enter
negb
cs
add
idivl
test
push
mov
jge
ret
push
jnp
cmp
jecxz
pop
xchg
add
inc
movb
push
aas
add
xor
dec
faddl
dec
mov
aam
mov
lret
comiss
xchg
bound
mov
dec
outsl
push
aad
ret
aaa
push
test
dec
xlat
mov
fldcw
lret
mov
and
xchg
test
pop
jo
mov
in
shll
xor
mov
fcmovbe
hlt
or
push
dec
push
mov
or
loop
arpl
pop
push
popa
xchg
cmp
cmp
jns
lock
mov
mov
mov
jp
jge
push
add
popf
cmp
mov
jbe
lods
push
mov
loope
sub
repnz
addr16
dec
fiadds
scas
cmp
pop
inc
negb
gs
sar
or
inc
sbb
sub
int3
stos
cmp
dec
mov
xchg
and
test
out
stc
sub
push
ret
scas
sub
or
sbb
cmpsl
arpl
sti
out
icebp
mov
push
jmp
out
fisubl
inc
lods
mov
sbb
inc
fldt
mov
scas
js
add
ficompl
mov
sub
lea
fidivs
mov
or
pop
jno
jmp
mov
test
xchg
adc
jecxz
push
dec
mov
fisubrs
out
xchg
sahf
dec
mov
in
push
loop
iret
test
cli
pop
mov
sbb
call
loopne
jmp
leave
bound
ljmp
ljmp
aad
or
fldl
iret
sahf
lods
dec
sub
sbb
pop
jae
aad
pop
imul
pop
fistpl
push
inc
xor
cmpsb
push
mov
bt
int
daa
fucom
xor
dec
xchg
and
ret
jg
dec
dec
sbb
jle
cld
in
or
test
jae
xchg
fisubl
xchg
mov
xor
cmp
rcrb
push
std
repnz
cmp
and
decb
mov
jo
jns
mov
mov
aaa
add
xchg
mov
iret
repz
or
sbb
call
dec
out
xchg
ss
and
xchg
cld
arpl
nop
sub
inc
jmp
add
jecxz
push
mov
and
sub
pop
lea
arpl
fimuls
fwait
lahf
test
out
in
sub
cmp
dec
jge
fmuls
rorb
lods
push
in
or
add
in
jo
movsl
jmp
cmpsl
leave
adcb
dec
jmp
mov
push
mov
cmpsl
aad
dec
loopne
cli
add
pop
push
mov
fmull
xchg
outsb
js
sub
jecxz
dec
lods
and
add
addr16
push
pushf
mov
add
and
ret
clc
daa
inc
mov
insl
iret
lock
addb
jge
xchg
mov
jne
jmp
fsubrs
mov
lret
pop
cmp
mov
mov
mov
lods
dec
mov
ret
xchg
stc
cltd
test
clc
pop
xor
add
ja
stos
add
pop
test
pop
ljmp
movsb
shrl
or
mov
gs
or
and
adc
ret
loopne
pop
test
sub
cmp
jg
mov
mov
mov
je
cmpsl
bound
cmpsb
xor
mov
push
jns
push
dec
pop
out
xchg
addr16
stos
or
loopne
xlat
test
ljmp
jnp
ja
lds
insb
adc
push
xlat
fistps
mov
and
xor
xchg
pop
enter
imul
fldt
jbe
pop
dec
data16
test
lret
xchg
insb
mov
mov
pop
dec
dec
mov
rcrb
pusha
icebp
mov
xchg
ds
push
scas
or
insl
sub
and
jne
sub
loopne
mov
test
jb
mov
lret
lds
popf
jmp
jbe
nop
xchg
loop
xchg
sbb
cmpsb
mov
and
mov
push
sub
outsb
test
cwtl
ja
mov
dec
inc
aas
and
mov
popa
outsl
add
in
jno
push
inc
jo
xchg
mov
add
inc
mov
add
sbb
rorl
addr16
rolb
dec
or
push
add
jns
jne
jnp
addr16
mov
sbb
dec
mov
mov
add
fsubrs
lods
lahf
mov
mov
cltd
mov
sahf
cmp
stos
inc
out
jo
push
mov
ss
mov
in
imul
sbbl
mov
rcll
or
jae
mov
add
mov
dec
or
sub
add
xchg
mov
add
add
xchg
js
mov
and
sub
jae
in
dec
aaa
jns
test
int3
out
lds
jge
dec
mov
shl
stc
sti
jae
scas
mov
add
adc
push
inc
cwtl
loop
cmpsb
jmp
lret
jmp
add
gs
scas
lret
mov
cltd
and
pop
mov
push
test
pop
adc
or
pop
push
imul
sub
sub
es
insl
push
push
jb
int3
fmull
adc
or
loop
arpl
pop
cmp
mov
jno
cmp
rcrb
movsl
xchg
mov
and
sub
or
daa
inc
pop
insb
int3
xlat
fwait
mov
and
mov
and
pop
sub
push
out
mov
and
sbb
mov
jo
mov
sahf
aam
inc
aad
mov
add
inc
sub
xchg
andl
movsl
aam
cli
scas
jno
pop
push
lds
ret
jno
xor
or
jle
and
lret
dec
nop
xor
jo
aad
xchg
repz
popf
fsubs
cmp
add
adc
xor
inc
jmp
dec
js
lret
mov
dec
scas
mov
dec
in
sub
shrl
push
push
fucomi
push
repz
loope
mov
add
movsb
pop
or
repz
xchg
mov
push
mov
loopne
jns
jne
pusha
and
dec
adc
mov
or
je
inc
shll
stc
call
iret
push
ss
sub
adcl
pop
pop
orb
push
imul
popf
mov
add
xor
in
push
les
adc
jae
add
into
gs
gs
mov
aam
insl
sbb
mov
leave
int3
aas
in
mov
jo
adc
add
add
dec
shlb
aas
push
data16
fsts
ret
mov
out
cld
fisubl
arpl
out
push
call
dec
jne
int
pop
adc
sub
insl
add
mov
outsl
xlat
push
or
push
cmc
cld
lahf
inc
xorb
dec
and
sbb
or
xor
cld
insb
jno
or
test
inc
push
jmp
mov
int
mov
fbld
xchg
mov
sub
gs
in
mov
leave
mov
hlt
js
xchg
xchg
add
hlt
xchg
pop
movsb
pop
jp
sub
nop
in
mov
pop
test
inc
mov
jge
and
inc
lds
imul
xchg
imulb
pop
gs
es
mov
pop
jl
bound
movb
clc
xchg
sub
add
dec
and
push
add
xchg
sti
mov
test
fbstp
sub
push
in
das
push
mov
inc
daa
xor
sahf
or
push
lahf
aad
jl
test
fs
push
add
in
faddp
jl
jne
scas
or
push
add
pusha
jns
or
shlb
inc
fldcw
jge
jb
je
test
pushf
aam
adc
pop
mov
in
mov
mov
mov
inc
call
jmp
or
lock
xchg
lock
xor
inc
inc
and
and
mov
lret
cwtl
stos
andl
jns
mov
out
xchg
sbb
inc
mov
xor
je,pn
xor
icebp
out
data16
mov
nop
push
inc
inc
mov
iret
lea
push
mov
sub
in
js
push
cmpsb
fimuls
je
dec
or
add
ret
or
adc
inc
ret
sbb
sub
std
nop
cmp
dec
pusha
dec
mov
dec
fstpl
js
imul
adc
shll
push
mov
lret
lcall
mov
enter
mov
repnz
sbb
es
adc
sbb
stos
jne
xchg
xchg
movsl
jae
repnz
cmp
mov
leave
push
ljmp
dec
icebp
bound
dec
leave
and
imul
pop
jnp
ret
rcrb
repnz
sbb
adc
add
repnz
jg
jnp
repnz
xchg
or
push
rcll
pushf
fistps
into
and
push
or
popf
sbb
mov
daa
stos
sub
les
les
sub
cltd
mov
add
mov
stos
add
test
cmpsl
jp
cld
ss
int
mov
sbb
cmpsb
shll
jo
xchg
pop
dec
xchg
push
adc
jb
push
or
fsts
mov
dec
xor
xchg
inc
mov
shll
rolb
neg
and
xlat
xchg
stos
ja
pop
js
insl
jmp
lcall
aam
pop
jg
cmp
les
in
xlat
pushf
jne
mov
dec
gs
cmc
and
push
mov
jp
addr16
or
fisttps
lods
add
jno
mov
imull
imul
repnz
sbb
mov
filds
scas
adc
sbb
pop
das
lret
pop
adc
pop
pop
pop
push
mov
enter
pop
pop
inc
pop
push
xor
in
jns
pop
adc
jge
repnz
pop
into
pop
dec
rcll
call
jmp
jg
jo
jmp
cmp
clc
lods
add
add
add
insb
push
js
lea
in
mov
pop
push
test
fldcw
imull
pop
push
sbb
pusha
xor
stc
ja
gs
pop
dec
pop
imul
jge
stc
cltd
sbb
jmp
ljmp
inc
xchg
and
cmpsb
and
pop
stos
xrelease
mov
gs
repz
lds
std
push
mov
inc
rorb
cmpsb
jno
mov
jbe
cld
fsubr
add
mov
jne
add
sbb
or
pop
cmp
fs
pusha
jmp
push
rcll
push
icebp
sarl
mov
mov
dec
jmp
sbb
and
mov
dec
sub
mov
sbb
add
add
loope
xor
xor
xor
js
icebp
jno
and
add
push
sub
repnz
push
pop
pop
pop
jns
daa
stc
insb
shrb
add
inc
icebp
scas
mov
cmpsb
jae
fwait
xchg
dec
bound
fldl
mov
push
mov
jns
lret
xchg
jecxz
or
aas
pop
pop
dec
mov
ja
add
adcb
add
loope
add
pop
cmp
leave
and
or
call
jecxz
sub
push
and
ret
shlb
sarb
lds
cwtl
mov
mov
shlb
sbb
cld
aaa
adc
test
je
jno
hlt
sbbl
add
push
add
dec
out
les
xchg
xchg
popf
add
enter
popa
cmp
ljmp
inc
into
adc
dec
lret
pop
ret
fwait
sub
mov
dec
or
push
shlb
clc
in
xchg
jmp
fidivl
dec
js
xlat
shrb
enter
cli
in
lea
sbb
shrl
in
pop
xor
clc
in
jecxz
adc
js
inc
jb
movsl
ljmp
jp
cmp
loop
xchg
xor
lret
mov
adc
jb
je
les
cltd
clc
fwait
add
pushf
and
sub
cmp
cmp
inc
cmp
insl
mov
jmp
mov
xchg
sub
xchg
dec
aas
add
imul
push
addr16
out
jmp
pop
pop
mov
mov
popa
inc
jo
jnp
push
mov
test
stc
test
sub
inc
mov
cmp
mov
cltd
or
mov
and
xlat
pop
jno
mov
icebp
test
pop
popf
popf
loopne
loopne
push
xchg
xor
ja
lret
jne
bound
pusha
ja
mov
mov
roll
pop
add
adc
lret
xchg
xchg
xor
filds
inc
jecxz
jl
or
cmpsl
push
in
jo
or
mov
aad
filds
pop
pop
add
dec
leave
and
je
in
shrb
mov
enter
jne
jecxz
jae
hlt
jl
sub
nop
mov
repz
sbb
dec
or
hlt
mov
in
push
pop
pop
sbb
add
xchg
ja
daa
cmp
fs
adc
imul
popa
loope
fsubrl
pop
push
add
cmc
pusha
out
inc
dec
dec
pushf
add
cltd
sbb
insb
push
movsb
test
cmp
inc
add
inc
imul
dec
mov
insb
hlt
add
jecxz
push
enter
jne
inc
nop
pop
mov
mov
jl
inc
loope
mov
iret
adc
xchg
push
xchg
subb
pop
outsl
leave
arpl
cli
pop
ret
inc
or
and
push
push
or
and
cli
jmp
add
repz
lods
sbb
shrl
cmp
pop
dec
cld
sahf
fimull
fmulp
xor
dec
inc
mov
xor
out
push
inc
bound
push
adc
cld
dec
test
cld
sub
icebp
int3
test
roll
inc
sarl
pop
rcrl
jp
push
lock
mov
cmpsl
addr16
sbb
es
jmp
sub
inc
imul
iret
dec
imul
test
testl
jecxz
push
pop
sub
addr16
xor
cmc
call
dec
dec
adc
cmpsl
cs
sbb
cli
mul
adc
fiadds
sub
mov
mov
adc
and
xchg
fstl
xchg
sub
sbb
test
iret
and
xor
or
mov
daa
clc
cmp
popf
jp
shlb
xchg
dec
jno
loop
in
cltd
andl
sbb
pop
popa
sbb
push
mov
mov
loop
add
loopne
add
xchg
aad
roll
sbb
jbe
test
mov
pusha
pop
in
js
dec
jl
out
cmp
inc
pop
into
sub
mov
cmp
loop
cmpsb
jo
jle
add
mov
dec
test
push
pop
scas
and
jbe
pushf
pop
add
mov
xchg
out
mov
add
stos
lea
lods
cmp
push
icebp
dec
mov
fistpl
pop
outsl
xor
pop
ret
popf
dec
aad
push
dec
xchg
jne
adc
jo
sbb
jne
jle
outsl
jecxz
inc
bound
sub
out
pop
cmp
add
or
push
lock
es
fs
dec
lods
fisubs
lock
hlt
imul
fldln2
shll
xchg
dec
cmp
scas
mov
pop
clc
stos
dec
inc
xchg
cmp
jnp
fidivrl
push
add
jne
cmp
mov
add
test
push
inc
cmpsl
pop
mov
ja
pushl
add
cmpsl
xor
les
aaa
lods
pop
sbb
xlat
jno
adc
pop
push
sub
push
dec
lock
mov
pop
loopne
jns
jns
jne
lock
xor
pop
add
js
rorl
das
xor
push
and
int3
sub
pop
adc
mov
sbb
sub
xchg
pop
and
shlb
dec
pop
mov
jp
push
ret
sub
cmp
jmp
cmp
mov
or
sti
jmp
imul
lock
test
jle
arpl
add
bound
ja
push
es
jmp
mov
or
pop
repnz
test
aas
test
rcll
jmp
or
or
or
in
mov
scas
push
inc
add
push
in
mov
out
mov
xchg
icebp
ret
les
dec
jp
das
es
cld
das
hlt
jmp
add
push
jge
sti
or
dec
pop
or
adc
dec
rcrl
test
inc
rorl
insl
imul
lahf
out
roll
xchg
sbb
sbb
data16
fabs
adc
push
pop
and
mov
cmp
mov
fbstp
add
xor
in
pop
shll
cmc
jb
lahf
rcrb
xchg
addr16
sub
orb
test
lret
push
or
xchg
in
push
aas
or
insl
xlat
popf
fisttpl
push
ficomps
push
pop
ret
ja
xor
push
mov
aad
addr16
cmp
add
mov
movsb
dec
push
cmp
lahf
cmpb
mov
jmp
fildll
dec
mov
insb
push
jecxz
sbbl
adc
push
shl
ss
jnp
fnsave
xor
push
test
cmpb
jmp
dec
pop
lds
fwait
pop
sub
es
cld
pop
dec
imul
pusha
out
lds
test
pop
fldenv
mov
jae
fadds
sbb
or
fs
inc
mov
jp
jl
movsb
shll
mov
mov
push
jbe
ret
xor
push
push
fsubr
pop
test
rorl
sbb
jge
lret
jb
movsb
cmp
cmp
rorb
neg
les
orl
movsl
aas
clc
nop
jl
fwait
mov
movsb
mov
mov
lods
dec
sub
cmp
dec
lock
repz
add
mov
jbe
movsb
ds
ds
add
jns
inc
jnp
or
out
jo
rcll
pop
repnz
ljmp
imul
dec
cli
std
xchg
enter
xor
xor
movsb
push
jo
pop
dec
fidivrl
mov
and
add
mov
mov
bound
pop
push
rolb
outsl
ljmp
mov
pop
cmp
pop
mov
adc
mull
test
and
xchg
lods
imul
fistpll
lret
and
add
jnp
aaa
inc
fiaddl
push
xlat
push
mov
call
cli
insl
aas
shrb
pusha
addb
xchg
dec
shl
mov
push
mov
ds
and
inc
sarb
and
xor
mov
sub
add
fucomp
scas
out
dec
jmp
and
loope
cwtl
mov
test
adc
xor
roll
push
cmp
fwait
or
cmpsb
cmp
fmul
xor
sbb
push
mov
push
inc
lea
cltd
rorb
mov
test
xchg
mov
lods
push
outsl
arpl
pop
mov
rcrb
sub
mov
inc
xor
int
mov
lahf
cwtl
fdivrs
fildll
fsubs
cs
clc
xor
sub
adc
jle
fisubrl
dec
pop
and
rorl
dec
ljmp
cld
rcll
out
jmp
mov
fistpll
daa
or
in
popf
push
iret
stos
mov
std
jb
gs
or
sub
inc
dec
xchg
dec
xor
gs
jo
mov
and
mov
sub
or
dec
dec
in
stc
movsl
cmp
ret
mov
insb
mov
sub
xor
cmpsb
mov
gs
dec
pop
mov
mov
je
xchg
inc
dec
aam
dec
clc
dec
push
sar
mov
mov
mov
out
mov
mov
rclb
lods
inc
icebp
ds
jecxz
adc
xlat
nop
add
ficompl
pop
push
sub
xor
rolb
popa
jmp
imull
stos
test
std
je
xchg
ret
adc
pop
cmpsl
jg
pushf
xor
xor
sub
pop
in
rolb
leave
mov
xor
jmp
mov
mov
mov
inc
stos
loope
and
loope
dec
ret
aad
fildl
and
rcrb
pop
lds
or
add
xchg
sub
enter
pop
aaa
jmp
outsl
jo
sbb
in
stos
pop
aas
sub
dec
pop
push
push
adc
popf
ret
stos
push
addr16
mov
int3
rol
pusha
sub
outsb
and
xchg
ficompl
sub
xchg
mov
sahf
dec
sub
outsl
lods
sub
and
pop
or
std
dec
jne
jns
je
data16
adc
pushf
lahf
insl
adc
dec
cli
mov
adc
popa
insl
and
mov
stc
jp
cmp
cmp
push
les
xchg
ja
imulb
dec
push
lret
lods
pop
aas
inc
cltd
push
sub
stos
adc
jne
xor
in
xchg
int3
int
scas
cs
push
test
jns
icebp
mov
sub
adc
jge
leave
push
push
and
push
icebp
loope
or
int
faddp
popa
add
rorl
jge
jmp
push
xlat
out
pop
add
ss
in
sahf
es
stos
sub
add
sbb
inc
into
rcl
push
cmp
jne
xchg
and
out
popf
insl
sub
fstl
cld
aam
inc
dec
push
sbb
or
cwtl
mov
pusha
das
push
push
dec
in
pop
jg
aaa
add
out
je
arpl
cmp
lea
add
cltd
jmp
jle
inc
cli
aaa
push
inc
mov
pop
aam
ljmp
sahf
adc
sahf
pusha
xchg
jmp
cld
icebp
mov
jp
outsl
xchg
data16
inc
xchg
test
out
mov
push
cmp
jns
aas
mov
in
inc
sarl
adc
fstpt
pusha
xchg
add
xchg
jns
lret
lret
rcrb
xchg
sub
ja
lea
stos
or
mov
and
push
rcll
adc
or
mov
fucomip
or
mov
daa
xor
cmpl
and
xor
fisttpl
xor
push
fstl
push
pop
jecxz
arpl
jbe
adc
clc
pop
lods
shll
xchg
fs
sub
cs
hlt
mov
test
imull
xchg
ret
sbb
mov
ss
ror
fnop
mov
sub
push
xor
sub
cmp
ret
loop
jns
cmc
jo
pop
pop
int3
mov
or
rol
adc
insb
ds
fsub
lods
stos
mov
movsl
mov
scas
lods
add
in
xor
inc
dec
repz
or
jmp
int3
xor
fsts
lcall
clc
in
stos
cmp
insl
les
sub
mov
nop
mov
pop
add
push
jecxz
mov
js
mov
adc
sbb
dec
jl
and
movsb
xchg
mov
fs
xor
test
jp
ds
inc
and
and
popf
xchg
mov
jmp
mov
lcall
dec
dec
push
add
into
jns
cmp
lret
push
lods
inc
cmp
mov
stc
xchg
dec
dec
jnp
mov
inc
sub
push
mov
shlb
ret
insb
in
popf
jge
fmulp
out
dec
call
stc
fsubl
ss
cmp
aam
loopne
jnp
pop
push
shlb
enter
test
ss
push
sub
xor
push
mov
cmp
jns
cmc
jle
push
xor
test
fmuls
mov
pop
adc
shl
stos
mov
inc
es
cs
sbb
lret
stc
aam
insb
mov
mov
sub
xor
mov
cld
fistpll
jb
out
mov
and
pop
sbb
or
ficoml
and
dec
mov
cltd
cmp
leave
mull
or
les
movd
iret
xchg
mov
push
in
jg
aam
cmp
mov
fstps
xchg
mov
push
mov
push
fstp
iret
insb
jge
jnp
jl
iret
inc
loopne
push
push
adc
in
pop
sbb
int3
sahf
cmp
sub
or
sub
jmp
fisttps
sub
aaa
cwtl
ffreep
fbstp
pop
pop
mov
adc
dec
mov
fstps
and
xchg
or
out
test
dec
sbb
fadds
jne
dec
adc
fsubrl
lods
jno
mov
mov
lods
mov
sub
adc
lret
cmpsl
in
and
jp
dec
fcoms
xchg
sbb
stc
push
or
int3
aad
dec
int
leave
mov
rolb
mov
mov
mov
push
jmp
pop
into
cmp
movsl
sbb
and
push
pop
hlt
jl
dec
je
add
loopne
lods
cmp
sti
ljmp
sbb
mov
test
xchg
imul
out
pop
push
dec
adc
divl
add
jmp
push
shll
sub
sbb
call
adc
bound
mov
adc
mov
jns
pop
stos
sub
js
xchg
push
rorb
sbb
test
pop
dec
mov
sarl
popf
sub
mov
fstpl
mov
icebp
data16
lret
enter
nop
popa
ret
mov
cmpsb
leave
mov
xchg
xchg
add
jae
cmp
test
push
jmp
push
fsub
test
int3
mov
xchg
aaa
mov
icebp
cmpsb
mov
jnp
je
jae
stos
jl
cld
loop
clc
dec
mov
inc
iret
jecxz
decl
and
andb
mov
insl
cwtl
inc
iret
movsl
or
or
inc
push
pop
add
in
aam
lods
insb
inc
lret
jl
cmp
dec
jbe
movl
mov
sbb
mov
cmpsb
inc
lods
outsb
shrb
mov
xor
push
sbb
mov
mov
jo
inc
ja
add
push
add
inc
aad
dec
push
ret
and
cli
adc
add
push
jg
cmpsb
mov
and
sti
cltd
dec
sbb
push
sub
push
xchg
or
cmp
sub
cmp
mov
push
pop
push
jb
and
imul
push
int
fucomi
push
sti
and
mov
andb
cmp
inc
clc
test
fisubs
mov
cwtl
mov
fidivrl
test
push
hlt
or
adc
stc
and
into
aam
jbe
imul
cmpsb
xchg
aaa
dec
xchg
pop
jnp
pushf
xorb
and
dec
push
mov
sbb
mov
cmpl
adc
ds
sbb
push
bound
loopne
jns
lahf
add
movsb
into
ljmp
sub
jae
jl
rcll
mov
and
mov
xchg
sbb
cmpsb
inc
or
fiaddl
jl
aaa
lea
dec
inc
dec
add
mov
add
push
fisubrl
fs
out
or
mov
in
push
jns
dec
out
jl
int
gs
jno
pop
fnstcw
jns
jge
dec
add
or
add
out
ss
inc
sbb
fildll
ljmp
jge
dec
and
add
xchg
sahf
cmp
iret
aas
xor
int
fs
push
shlb
jle
push
add
sbb
inc
es
or
jmp
cmp
add
pop
cmp
call
or
jns
mov
cmc
in
jnp
push
xor
cmpsb
adc
imul
aad
fs
repz
sub
mov
push
jle
mov
ja
stc
mov
or
jg
test
repnz
cs
pop
mov
xchg
inc
shrb
inc
mov
cs
adc
add
xor
and
pop
sub
jge
sbb
sbb
add
std
jge
imul
mov
sbb
pop
mov
fwait
imul
inc
inc
inc
jnp
out
mov
icebp
jns
sub
xchg
hlt
mov
inc
jne
enter
xchg
or
ret
rcrl
fs
das
jecxz
jns
or
push
leave
pushf
inc
jg
pop
mov
mov
inc
icebp
es
enter
fs
push
cwtl
dec
insb
push
loope
add
xchg
subl
test
cmove
sbb
or
popa
mov
icebp
mov
cmpsl
push
in
xchg
push
sub
xchg
aad
insl
out
insl
inc
fildll
xchg
sub
sub
ret
cwtl
hlt
cmp
adc
lcall
mov
mov
sbb
mov
addl
push
and
or
in
rcrl
shr
insl
push
or
dec
sar
sub
dec
stos
fisubrs
inc
aas
inc
popa
lods
js
imul
arpl
int3
and
xchg
xchg
in
push
dec
inc
aam
int3
and
loop
clc
pop
aad
test
or
sbb
xor
insl
inc
mov
adc
mov
xchg
or
aas
jno
in
sbb
push
cwtl
insl
jp
jnp
test
fs
and
je
insb
ja
push
out
push
dec
cli
loopne
hlt
and
jae
add
les
xchg
fstl
jle
rorl
mov
inc
push
ljmp
fmuls
pop
in
or
add
add
bound
mov
lock
jno
test
lret
or
add
dec
sub
rorl
sub
ret
jns
push
sti
lret
loope
inc
adc
inc
sarl
dec
jecxz
pop
lods
sbb
mov
bound
lods
in
xchg
jmp
inc
insl
lock
popf
mov
loopne
mov
ffreep
push
rol
add
mov
insb
or
sub
xchg
jp
stos
ficomps
data16
lds
push
add
push
jmp
cmpl
add
push
push
out
loopne
mov
test
mov
fisubl
adc
je
lds
fiadds
sub
fwait
jmp
and
das
mov
jne
je
inc
mov
fldt
test
loope
add
sbb
pop
jmp
inc
xor
push
jno
lock
in
adc
test
jne
icebp
enterw
xor
ud0
stc
xor
arpl
loopne
mov
inc
shll
xor
aas
cmp
aas
testb
pop
fadds
ds
add
icebp
adc
xor
call
rolb
mov
inc
sub
test
and
mov
mov
addr16
data16
dec
cltd
inc
je
jge
loopne
cmc
push
mov
sbb
and
lret
sbb
cmc
sub
arpl
pop
xor
jecxz
push
int
cmp
cmp
lcall
adc
icebp
inc
dec
lret
dec
push
popa
in
inc
jb
dec
dec
hlt
xlat
aas
jns
push
pop
insl
inc
movsb
jno
mov
mov
mov
push
bound
add
push
loope
rorl
pop
mov
dec
shrl
test
sbb
add
lods
fsubl
dec
cld
fisubs
dec
int
mull
adc
sub
jle
jns
fiadds
loop
imul
add
ja
aam
cmpsl
stos
loopne
movsb
insb
loop
jl
pop
aaa
dec
sub
add
into
scas
dec
inc
loopne
ret
xor
in
sub
dec
and
add
inc
cmp
mov
lds
pop
dec
mov
jbe
add
mov
pop
mov
pop
xorl
adc
inc
pop
cltd
je
icebp
andl
xchg
fwait
arpl
jno
mov
pop
or
jle
pop
mov
daa
out
jecxz
or
dec
cmp
jbe
flds
pop
out
jg
adc
mov
inc
ror
test
push
xor
ret
cmpsl
frstor
lcall
mov
mov
mov
push
jb
xchg
leave
outsb
ljmpw
and
pop
fcmovnb
lods
js
sub
mov
mov
pop
xor
fcomps
cmp
in
xor
xchg
imul
dec
shlb
loope
xor
dec
or
js
mov
fwait
push
stc
add
or
jp
lea
dec
xor
cmpsb
roll
das
or
imul
bound
stos
push
jne
inc
int
sub
ret
jne
je
lret
pusha
rcll
dec
stos
jle
sti
pop
inc
jns
repnz
mov
aaa
frstor
inc
sub
js
cmp
insb
ljmp
push
sbb
subl
mov
mov
pushf
shll
into
inc
mov
lret
pop
sbb
insl
or
xchg
dec
rcll
and
push
mov
or
adc
mov
es
pusha
stos
dec
sahf
xor
mov
sbb
push
insb
cmpsl
js
stc
xor
and
pusha
jle
sbb
inc
and
sarl
insb
orl
mov
cmp
jbe
mov
movq
jecxz
xchg
dec
idivb
sbb
mov
aaa
out
sbb
push
push
sbb
dec
mov
push
xor
aam
addr16
into
sub
add
lret
out
lods
cmp
mov
xor
xor
cmp
dec
xlat
fcmovne
sbb
jge
jmp
inc
mov
mov
fwait
icebp
loopne
xor
inc
lcall
add
or
fadds
add
mov
cmp
cmp
int
inc
add
icebp
aas
lds
mov
dec
mov
icebp
adc
mov
lock
adc
pop
int3
ret
xchg
lahf
mov
pusha
adc
cmp
rcl
and
mov
mov
xadd
adc
and
sti
push
inc
xlat
pop
pop
test
adc
adc
push
cmp
fisubl
mov
sub
outsb
sbb
roll
test
mov
mov
inc
inc
ret
in
dec
aad
mov
imul
inc
xor
scas
fldl2t
lds
loope
mov
in
das
sti
push
lcall
scas
jne
sarb
imulb
mov
lret
cmc
push
sub
arpl
addr16
out
adc
xor
pop
cs
or
outsb
jmp
add
xchg
xchg
push
aad
mov
jnp
xor
cmp
lods
adc
jnp
jge
sti
xchg
dec
icebp
adc
pop
or
cmp
mov
fidivrl
mov
or
xchg
add
mov
lea
popf
insl
iret
xchg
jle
sub
arpl
pop
nop
or
movsl
sub
fildll
xchg
inc
shlb
je
test
xlat
clc
dec
lcall
subl
push
xchg
je
cmpsl
jno
cmp
in
inc
stc
jo
pushf
dec
outsl
or
in
mov
shll
add
ret
push
stos
out
xor
sub
sub
popa
and
push
outsb
fadd
dec
mov
shlb
inc
jg
and
adc
pop
mov
xchg
inc
fldl
aad
mov
mov
lock
cmpsb
lea
das
rcr
dec
dec
mov
mov
inc
adc
mov
and
shlb
fs
sub
mov
stc
mov
ret
int3
cmp
xor
push
xchg
aas
cli
dec
sub
fbld
arpl
nop
push
iret
push
stc
push
mov
addl
insl
mov
je,pt
xor
sbb
jecxz
mov
pop
jno
in
sub
jnp
dec
inc
jno
jae
push
mov
fwait
pop
enter
mov
es
test
call
push
aaa
adc
insb
mov
pop
imul
fmull
lret
xor
jecxz
bound
jno
insl
cmp
pop
xor
mov
icebp
std
les
andl
xor
adc
jne
hlt
push
mov
jle
sbb
mov
mov
int
push
int
popa
xor
out
es
cmp
dec
mov
jmp
jnp
push
mov
dec
scas
add
add
test
nop
and
int3
or
addr16
js
or
andl
faddl
dec
adc
sbb
push
pop
xchg
jne
es
ret
lret
icebp
xlat
mov
sbb
mov
jmp
mov
push
lods
dec
cli
inc
mov
cwtl
xor
shrb
dec
xor
mov
inc
dec
lret
pop
push
mov
add
xchg
jae
pop
fwait
icebp
xor
stos
jp
mov
add
add
cmc
push
push
sahf
and
jle
push
mov
inc
sahf
xor
and
xlat
sub
add
or
add
pop
jo
sbb
loop
add
mov
and
adc
aam
ss
sti
shlb
cmp
sbb
jnp
push
push
cmc
jae
mov
sbb
cmp
fsub
jle
fstps
icebp
fsubs
sbb
clc
xor
test
dec
xor
jnp
loop
mov
mov
imul
dec
iret
add
sets
fstl
sbb
inc
inc
mov
adc
jne
and
xor
rcl
push
rorb
pop
clc
pusha
mov
dec
lea
push
sub
jecxz
xor
insl
lret
add
mov
repz
iret
lret
and
mov
insl
push
sbb
scas
mov
mov
bound
xor
ret
mov
rcll
mov
pop
adc
in
jmp
xchg
enter
adc
sub
jbe
and
inc
sub
or
leave
test
add
fsubrl
das
aas
sub
nop
xor
cmpsl
shlb
cmp
sahf
in
decl
ljmp
jns
inc
into
mov
cmp
das
std
pushf
cli
jmp
mov
jbe
mov
inc
sub
int
sti
or
mov
lods
add
and
dec
popa
jge
cli
xlat
negl
mov
add
inc
sbb
and
jne
dec
ss
fcomps
and
sahf
and
and
jbe
or
roll
js
loopne
xchg
cld
mov
sti
out
scas
or
or
push
inc
sti
push
push
dec
push
xchg
ret
dec
loopne
or
add
jb
dec
pop
lea
cmpsb
and
mov
sub
and
mov
pusha
imul
or
inc
push
imul
pop
clc
hlt
cmp
je
fdivrl
inc
loopne
cs
mov
fildll
fimuls
sbb
fdivr
push
jns
subl
cld
or
dec
gs
fdivrp
mov
in
jns
scas
sbb
mov
rcrl
scas
cltd
sbb
test
daa
in
xlat
jae
jne
stc
xchg
add
push
sarl
dec
out
push
add
add
out
cs
add
adc
std
out
loopne
push
lret
mov
mov
test
imul
jle
push
lock
adc
sbb
lea
out
in
pop
out
mov
lds
out
rclb
mov
pusha
shl
mov
rorb
and
push
mov
xchg
xorb
in
insb
pop
popa
je
add
shll
sub
mov
add
in
mov
inc
xchg
imul
inc
and
pop
sbb
fildl
xchg
sub
dec
pop
aas
dec
xchg
aas
popl
je
pop
test
std
cld
dec
mov
jmp
cli
and
dec
mov
push
mov
int3
int
lret
jno
sahf
add
or
push
pop
and
int3
xor
movsl
scas
push
xor
mov
enter
scas
pop
push
mov
xor
add
inc
mov
movsl
xchg
pop
arpl
pop
pop
mov
fadd
and
xchg
mov
push
pop
mov
cmpsb
push
inc
cmp
cs
lea
movl
adc
fsts
iret
fidivrl
dec
jbe
xorl
fsub
xor
mov
popa
cmp
imul
repz
filds
aad
pop
out
and
adc
add
add
dec
vmwrite
loope
add
pusha
stos
insl
popf
sbb
sbb
jns
xor
jno
nop
mov
inc
xchg
shrl
sub
jle
std
and
stos
andl
mov
movl
jno
sti
jns
js
xor
adc
cs
aam
or
enter
and
shlb
push
cmp
push
adc
pop
rorb
pop
add
and
xchg
dec
dec
test
jg
cmp
es
nop
cmp
cmpsb
leave
fwait
jo
add
push
ror
mov
in
cvtps2pi
aaa
out
and
mov
cmp
jo
cmpsb
pop
mov
push
and
pop
mov
mov
shlb
scas
push
dec
int
imul
mov
in
scas
repnz
dec
adc
xor
je
mov
pop
inc
popa
in
adc
push
fsubrl
inc
push
push
cmpsl
or
iret
sbb
ficoml
pop
aaa
sbb
jge
enter
outsl
push
jnp
sbb
clc
inc
loop
vdivss
dec
mov
push
jmp
scas
and
push
jnp
adcl
std
mov
test
sub
cmpsb
rolb
mov
or
sbb
inc
out
jge
lret
cmpsb
push
sbb
jecxz
aas
lea
pusha
inc
mov
int
fldcw
clc
pop
bndldx
dec
aas
aaa
xchg
sbb
jns
mov
xor
mov
or
outsb
jns
lock
cmp
arpl
fmuls
mov
mov
rcll
dec
fld
jl
les
std
addr16
inc
sti
arpl
push
dec
cmp
mov
xchg
xchg
sbb
fwait
jg
adc
inc
adc
xchg
mov
jns
leave
pop
pop
push
shll
mov
mov
mov
cli
ret
shrl
add
adc
push
pushf
xlat
jo
lds
jnp
fcomps
adc
xor
mov
or
and
ret
jg
mov
mov
mov
push
xor
repnz
lret
adc
jae
shll
jp
mov
addb
lret
xchg
lret
fwait
std
dec
cs
mov
lret
fdivs
dec
push
add
and
xor
insb
or
xlat
lret
test
imulb
xchg
dec
addr16
cmp
dec
subl
fldcw
shll
popf
sar
fistl
je
loope
pop
faddl
js
outsl
jbe
dec
imul
shrb
pop
xchg
outsb
mov
adc
dec
aam
sbb
mov
dec
mov
cmpsl
dec
jg
into
dec
jns
and
sti
and
adc
mov
add
xchg
not
mov
fisubrs
cmp
mov
jmp
in
in
mov
scas
sti
xchg
push
dec
ja
fucom
inc
bound
mov
daa
lret
lret
mov
pusha
and
and
push
mov
inc
mov
mov
fiadds
in
fs
dec
push
jno
addr16
or
mov
bound
gs
rcrb
mov
psadbw
dec
cmpsb
popf
cwtl
or
ss
mov
pop
jle
fisttpll
out
lret
pop
arpl
je
or
sti
lock
xchg
push
aas
add
movsb
pushf
je
xor
jl
loopne
test
shll
imul
add
push
arpl
pop
cmc
sbb
lods
xor
mov
xchg
xor
or
mov
cmp
push
not
inc
ljmp
push
cmp
mov
maxps
dec
loop
lcall
out
and
mov
add
add
mov
lea
and
lret
xchg
jmp
fidivrl
and
jo
sub
sub
add
outsb
stos
sub
push
dec
pop
cmp
mov
enter
pop
mov
imul
dec
ja
cli
lds
incl
lcall
ret
inc
les
sbb
movsb
fisubl
loope
push
iret
pushf
flds
jnp
in
call
ja
sub
out
xor
addr16
dec
jns
sbb
cltd
aam
xchg
imul
hlt
cs
xor
sub
fdivrs
mov
outsb
dec
cmp
scas
mov
clc
cmpsb
pop
mov
out
inc
sub
push
fldl
xchg
lods
insb
push
mov
ja
pusha
in
sbb
push
cmpsl
je
xor
jl
leave
mov
test
fldlg2
sub
mov
es
packsswb
lds
xchg
int
lock
jp
ret
loopne
test
or
push
iret
loop
rcll
push
out
sbb
xchg
movsl
cmp
imul
adc
outsb
subb
js
and
add
mull
sub
int
shrl
js
popa
orb
js
and
mov
neg
xchg
push
inc
or
inc
outsl
adc
lea
cmp
mov
mov
into
cmp
stc
dec
jbe
imul
xor
jp
sub
dec
ret
jnp
mov
in
jge
jl
xchg
imul
leave
cmp
shl
iret
adc
fcompl
add
test
dec
dec
loope
cmp
xor
mov
mov
ss
mov
push
adc
hlt
cli
pop
sbb
int
or
loopne
xchg
pop
test
popa
xchg
std
and
unpcklps
in
ret
xchg
cmp
outsl
mov
stos
mov
sub
jecxz
push
and
add
enter
inc
jno
sub
adc
mov
andb
out
sbb
imul
fsubrl
cmpsb
add
jmp
xchg
mov
pop
push
test
mov
dec
ror
xchg
scas
popf
ret
jb
push
xchg
insb
add
push
push
jns
jns
mov
test
push
xchg
stc
sbb
jge
inc
dec
inc
rcl
mov
repz
insl
push
cs
add
push
dec
inc
loope
jae
pop
out
xchg
and
add
add
leave
flds
lahf
xchg
sub
pop
fbstp
jae
cmp
aad
add
jg
push
gs
mov
push
loopne
xchg
pop
test
or
lcall
iret
dec
pop
stos
xchg
pop
push
add
bound
outsl
and
add
dec
sbb
sbb
in
in
and
fsubs
sti
sub
cmp
stc
ss
jge
loope
xor
sub
fisubs
sahf
pop
push
mov
jecxz
outsb
int
pop
sbbb
pop
cmp
out
dec
jle
push
mov
jmp
add
int3
mov
shlb
ljmp
push
sahf
std
lret
sbb
fimuls
adc
pop
mov
mov
out
mov
rclb
cli
jp
into
or
out
outsb
xor
call
dec
lods
lds
aaa
int
mov
jl
pop
popa
mov
and
mov
orl
or
add
roll
sbb
cmc
mov
jle
ljmp
jnp
bound
inc
mov
mov
fnstsw
fcmovnbe
je
add
jne
mov
or
add
add
pop
and
adcl
rcll
lods
mov
mov
repnz
int
inc
sti
inc
rolb
in
std
mov
dec
call
push
insl
jecxz
ret
jo
cmc
popa
pop
ds
sbb
into
loopne
popf
mov
andl
outsl
cli
pop
daa
orb
fldcw
dec
mov
or
rorl
xchg
cwtl
sub
push
inc
jg
mov
dec
and
xchg
cwtl
xchg
sub
int3
sub
inc
aas
int
sub
repnz
addr16
dec
adc
push
test
nop
inc
insl
mov
adc
jo
pop
adc
outsl
sub
mov
or
pop
pop
lret
xlat
sahf
push
lods
orl
sub
into
jo
xor
aad
jg
scas
jle
out
jnp
ret
pusha
hlt
dec
or
sahf
jae
jecxz
loop
stc
or
jecxz
ds
xor
cli
test
fwait
lea
push
push
movsl
sub
scas
or
call
test
push
mov
pop
cmp
enter
mov
adc
xor
jbe
lret
repz
xor
enter
jns
fwait
ja
mov
or
loope
lcall
push
in
fmull
daa
insb
out
in
int3
scas
inc
js
or
dec
test
das
orps
int
icebp
xchg
enter
shll
mov
test
lret
or
inc
and
call
testl
inc
arpl
jl
or
jbe
pop
or
jns
enter
push
les
lret
lea
ficoml
dec
ds
mov
mov
mov
sub
dec
mov
sti
jb
mov
cmp
cmpsl
dec
adc
add
add
push
test
cwtl
dec
out
inc
jo
pop
pop
into
pop
ljmp
add
mov
fs
lret
and
pushf
adc
push
inc
pop
ret
jle
int
lock
inc
cwtl
rorb
movsl
fists
outsb
dec
or
jbe
int3
cmp
pop
addr16
xchg
pop
dec
rcll
push
imul
mov
or
mov
aad
fsubrs
rorb
xor
inc
cmp
scas
ss
cmp
dec
testb
mov
jg
scas
inc
fildll
jmp
pop
cmp
es
aam
test
loopne
in
loope
imul
pop
es
jmp
ds
sbb
test
inc
aam
sub
mov
mov
and
jae
push
inc
stc
insb
add
inc
imul
lods
shll
addr16
test
push
and
call
xor
movsl
xor
shll
inc
in
aaa
jmp
dec
in
jle
push
jae
cmp
clc
in
ljmp
leave
test
adc
cmp
pop
jnp
iret
and
pop
inc
adc
pushf
fst
push
repz
call
repnz
inc
sahf
jp
js
sti
xchg
rclb
icebp
or
or
jnp
mov
loopne
hlt
mov
inc
aaa
stos
idivb
loop
jl
insl
xor
add
jns
push
mov
jb
mov
inc
test
xchg
mov
mov
inc
mov
push
dec
das
pop
fsubrl
out
push
stc
xor
mov
push
bswap
sbb
mov
frstor
aad
dec
movsl
xor
stc
add
rcll
mov
jmp
jne
out
jno
shlb
adc
and
aad
jp
dec
int3
leave
push
adc
jnp
mov
and
sarb
mov
daa
inc
cmpsb
cmp
pushf
push
xchg
adc
jl
dec
ljmp
dec
sarl
inc
add
stos
std
sbb
in
mov
dec
push
cmp
andb
loopne
xor
push
add
and
pop
push
dec
in
add
aam
xchg
dec
cmc
loopne
adc
cmpsl
and
jo
pop
xorl
add
or
hlt
shr
lcall
xchg
mov
or
popa
jne
sbb
ror
push
xchg
cmp
pop
int3
push
ss
lock
dec
inc
movsb
mov
jno
or
mull
iret
mov
repnz
xchg
jno
add
cmp
inc
sub
fidivrs
xor
int
pusha
xchg
addr16
mov
jmp
into
jp
mov
scas
fnstenv
cmp
sbb
dec
insl
loopne
cmp
sbb
jbe
setle
cmp
cmp
and
jge
andl
popa
cld
inc
outsl
lahf
js
data16
mov
in
aas
das
xor
les
mov
lahf
xor
cltd
mulb
sub
imul
mov
or
sti
mov
cli
mov
xchg
in
aaa
aaa
mov
push
ror
int3
mov
and
add
mov
andl
mov
jl
in
jecxz
xorb
add
stos
push
scas
pop
sbb
sarl
daa
inc
xchg
jnp
cmp
inc
mov
test
lret
stos
stos
add
data16
imul
jnp
lea
or
add
push
push
inc
fldenv
ja
xor
stos
xchg
arpl
loopne
insl
sti
lods
mov
or
dec
sub
mov
adc
mov
ss
stc
stc
movsl
jp
cmc
sub
inc
pop
call
shll
xor
inc
adc
mov
add
cmp
aam
jl
push
mov
mov
add
add
mov
sahf
mov
sbb
jo
bound
inc
and
inc
int
push
inc
scas
and
xor
add
mov
push
xchg
xlat
push
out
insb
inc
pop
and
movsb
insb
test
xchg
mov
pushf
push
inc
jno
lea
mov
adc
stos
jb
pop
les
fucomp
xor
mov
pop
push
pop
add
movsl
insb
push
dec
jbe
iret
je
insl
lods
ds
push
and
repnz
cltd
push
subl
and
mov
pop
mov
push
jecxz
sbb
fs
add
push
pop
jle
sahf
ljmp
mov
mov
mov
scas
push
push
pop
idiv
jge
daa
enter
mov
lds
cmc
fnstsw
imul
add
jg
icebp
push
scas
cmp
adc
ficoml
rorl
cltd
and
add
scas
rcrl
lock
mov
inc
dec
iret
or
ficompl
jbe
movsl
int
xchg
pusha
lahf
daa
and
push
pop
ret
mov
mov
bound
dec
out
lret
push
push
hlt
push
and
jnp
sub
jcxz
dec
push
mov
scas
or
mov
xlat
inc
scas
icebp
cmpsl
cmp
fwait
ret
ljmp
out
rorl
leave
sub
pop
dec
inc
in
xchg
lcall
xchg
test
ret
rcll
adc
daa
jl
add
outsl
xchg
frstor
std
mov
dec
pop
arpl
aam
mov
aas
mov
lcall
int
or
mov
loopne
in
inc
push
fisubrl
addb
data16
mov
or
adc
out
stc
sbb
adc
push
mov
dec
or
pop
fs
push
sub
shr
add
pop
testl
loope
leave
lock
and
lret
inc
insb
pop
sahf
in
jmp
mov
iret
sub
pop
jnp
inc
mov
popa
aam
sub
mov
or
cwtl
rclb
xchg
adc
in
add
and
inc
and
xor
loope
inc
sbb
xlat
xorl
fildll
add
lahf
fsubrs
xor
aad
fwait
imul
stos
push
loopne
push
mov
cmp
fimull
dec
sbb
daa
mov
iret
and
int
pusha
add
iret
stc
insl
ret
or
pusha
data16
fwait
outsb
clc
ret
popa
or
or
jo
test
mov
pop
out
and
leave
testb
fnsave
cmp
dec
hlt
fs
inc
clc
loopne
sub
clc
es
aam
dec
push
or
xchg
aam
gs
les
inc
pusha
sub
pop
fnstenv
ret
ret
xor
nop
test
sub
mov
cmp
ljmp
scas
fmuls
mov
rcrb
mov
and
aam
mov
jle
mov
rolb
imul
mov
cmpsb
decb
das
add
pop
repz
push
ja
aam
test
aad
mov
data16
lea
call
ret
dec
fildll
lds
push
lock
or
fistps
cmpl
push
aas
ret
loop
xchg
stc
das
insb
bound
cmc
ljmp
xlat
xchg
pop
mov
push
stos
repz
push
add
pop
repz
inc
loopne
cmp
push
cld
nop
inc
and
mov
add
push
mov
jns
adc
sbb
adc
jo
and
in
cmp
add
dec
xchg
es
insl
out
repz
cmp
inc
data16
or
add
add
mov
fwait
ja
mov
clc
js
push
das
push
xor
cwtl
pop
mov
ffreep
xchg
mov
push
xor
daa
popf
jnp
sahf
mov
push
sub
movsb
xchg
pop
mov
mov
leave
cli
or
xchg
push
push
sbb
adc
xchg
mov
inc
in
outsb
pop
push
test
lock
mov
mov
lahf
mov
jmp
lods
cmp
aaa
lods
sbb
enter
add
cmp
repnz
out
lret
pop
jne
or
fsubl
jo
dec
nop
arpl
sub
mov
cs
cltd
inc
mov
stos
test
pop
lcall
and
das
movq
shlb
sub
mov
arpl
jg
jnp
adc
mov
imul
jbe
push
adc
in
xor
push
lahf
mov
movsb
js
rcrb
and
xor
pop
dec
popa
iret
fldcw
cltd
std
dec
fldcw
jge
out
popa
fs
pop
pusha
add
add
sbb
fstps
mov
fmul
gs
aad
ljmp
cmp
mov
push
insl
ret
shr
scas
out
ljmp
cmp
or
cmpsl
test
scas
jp
push
outsb
inc
jbe
pop
andb
mov
cs
pop
pop
shll
xchg
jns
mov
inc
stos
and
addr16
or
pop
inc
das
scas
imulb
mov
in
jno
sbb
std
gs
mov
push
dec
mov
mov
std
cwtl
dec
jnp
rcrb
jnp
xchg
pop
movsb
or
jb
xor
pusha
test
jbe
push
dec
data16
cld
test
fimull
lea
hlt
repnz
rcrl
push
js
add
inc
aam
jl
idivl
dec
push
dec
adc
pop
nop
and
cmp
bound
std
jnp
lock
cmp
jg
adc
inc
loope
and
mov
mov
in
jle
and
pop
or
clc
dec
adc
push
pushf
addr16
or
int
daa
sub
xor
ljmp
dec
push
stos
pop
stos
imul
sbb
sub
inc
push
pop
int
xchg
test
imul
out
int3
mov
dec
andl
push
lret
pop
ret
sahf
dec
jne
mov
test
in
sbb
mov
pushf
test
xchg
mov
cmp
enter
inc
push
pop
dec
pop
ud1
push
cld
int3
adc
sub
and
xchg
rcr
mov
dec
cmp
xor
fdivrp
inc
xor
shrl
fwait
sub
jne
mov
mov
popa
mov
and
adc
addb
jae
push
rolb
dec
adc
loope
xlat
xchg
ds
add
in
sti
pop
pop
mov
push
sti
imul
jle
stc
pop
and
push
add
loope
sub
mov
outsb
sbb
imul
sti
dec
mov
fsubs
dec
movsl
ret
jmp
cmp
pusha
sbb
rcr
arpl
pop
or
mov
adcl
jmp
out
js
insb
xchg
xor
mov
ret
daa
jle
and
push
jmp
jae
xchg
jecxz
out
shrb
dec
xor
enter
and
push
js
sbb
push
mov
xlat
lock
jge
js
add
inc
or
push
add
mov
push
cmp
xor
jns
loope
dec
bound
add
ret
stc
mov
dec
pop
pop
ds
or
aas
dec
das
loop
cmp
mov
ja
add
add
fwait
mov
sbb
pop
iret
cmp
add
add
sub
mov
scas
pop
repz
test
mov
inc
lock
push
pop
pop
xor
leave
pop
push
inc
daa
cmc
popa
pop
sub
xchg
add
aam
push
testl
sbb
inc
xor
gs
inc
roll
shrb
stos
sub
jne
rcll
scas
rcrb
sahf
push
cmpl
loope
ret
outsl
inc
je
adc
sub
cli
jo
lcall
mov
fbstp
inc
pusha
shll
lret
call
jmp
jne
ror
inc
rorb
mov
cmp
fyl2xp1
std
jp
mov
gs
adc
cmp
scas
iret
push
mov
test
lret
outsb
inc
mov
sbb
stos
repnz
insb
mov
xor
and
lods
fcompl
es
jns
pop
inc
push
mov
int3
push
out
push
push
dec
int3
mov
xor
jle
movsb
cmp
daa
cmp
sub
xchg
jo
adc
aam
xchg
and
cld
sbb
sahf
jp
and
js
lret
mov
jne
mov
and
and
arpl
repnz
aas
rcll
icebp
cmp
pop
sar
dec
and
sar
inc
pop
imul
repz
add
add
adc
movsbl
or
xchg
mov
dec
ret
call
push
xlat
mov
jns
dec
fimuls
scas
xlat
ds
inc
test
iret
push
add
aaa
sbb
fcoml
out
mov
mov
adc
fdivl
dec
clc
idiv
pop
sub
vpmulhuw
popf
xchg
mov
clc
das
inc
stc
insb
sub
movsb
jae
lahf
inc
popf
push
dec
push
movl
cmpsb
repnz
scas
rcrb
xlat
jnp
loop
imul
xchg
out
clc
popa
aad
adc
lock
sub
jb
lods
in
sub
scas
call
adc
lea
stos
popf
mov
bnd
pop
pushf
jbe
fwait
sbb
sub
ljmp
and
int
and
or
jne
arpl
inc
sti
rolb
or
decl
repz
rcrl
xchg
and
mov
push
mov
inc
xor
pushf
jle
sbb
adc
inc
xchg
int
xor
sbb
xchg
push
and
aaa
mov
pop
inc
adc
shrb
mov
outsl
ljmp
sbb
das
icebp
aaa
imul
or
test
and
jmp
dec
or
cld
mov
leave
xchg
cmpsl
les
test
adc
mov
push
enter
out
push
fnsave
cmpsb
jb
bound
bound
mov
lret
mov
sbb
and
aaa
cmp
jge
cwtl
sahf
out
cltd
push
add
adc
jnp
sahf
jl
mov
and
push
dec
push
xor
mov
xchg
jbe
push
pop
xor
jl
or
cmp
pop
call
jecxz
insb
lods
or
dec
std
pop
je
xor
lock
in
sbb
add
xchg
iret
out
outsb
enter
popf
and
pop
imul
aas
mov
jae
lahf
and
sub
xor
dec
jns
nop
outsb
movsb
xor
sbb
lds
add
out
pop
jmp
pusha
aad
pop
pusha
sahf
das
lds
popa
and
jp
pusha
or
push
mov
xor
xchg
or
nop
icebp
push
push
push
or
arpl
aad
jge
dec
movsb
enter
fldcw
add
sub
jae
and
rorl
es
loope
push
lods
adc
in
cld
pop
inc
mov
pushf
mov
mov
push
ret
out
outsl
xchg
mov
pop
aaa
or
in
or
xchg
shll
fprem
in
rcll
test
stos
shlb
xchg
jecxz
popf
mov
insl
test
rolb
cld
fwait
pop
nop
lcall
test
pushw
mov
negb
rorl
cmp
pop
sbb
push
jmp
jo,pt
xor
popa
insl
push
add
or
push
cmp
mov
dec
push
push
jp
xor
in
dec
gs
inc
stos
jbe
jmp
call
nop
add
jecxz
xor
imul
int3
test
xor
scas
cmp
dec
mov
dec
push
push
ss
mov
mov
push
mov
dec
add
and
or
xor
jecxz
jg
cmpsb
inc
call
jns
jns
repnz
push
or
push
aam
out
push
and
push
into
adcb
inc
mov
sbbb
sub
dec
and
cmp
jge
xlat
int3
jl
fxch
pop
and
sub
inc
jle
mov
faddl
pop
repz
add
xchg
js
mov
cmp
aaa
add
jmp
fisubs
mov
ja
inc
xor
jg
sub
popf
push
shrb
or
shlb
loope
inc
inc
adc
dec
mov
sub
lret
incl
dec
jns
stc
and
mov
sbbl
call
xor
jg
push
outsb
mov
jl
sub
dec
push
cs
and
jns
ret
jle
movsb
cld
mov
incl
insb
setae
add
add
enter
add
rolb
mov
jo
jnp
cmp
pop
scas
pop
adc
sub
push
scas
es
aas
cli
push
mov
push
push
mov
stos
xor
aad
mov
arpl
push
jbe
add
xlat
xlat
mov
jnp
add
push
pop
or
sub
pop
repnz
aaa
pop
leave
movsb
fsubrs
add
inc
add
inc
imul
jmp
pop
ficoml
xchg
pop
push
push
jo
fwait
inc
add
sahf
rorl
xor
in
das
pop
dec
sub
or
in
enter
mov
ret
or
ficoms
insb
push
cltd
or
inc
push
adc
ljmp
jl
and
stos
data16
pushf
xchg
insb
insb
test
fs
stos
mov
dec
int
in
stc
adc
iret
or
neg
add
mov
test
loopne
xchg
dec
push
inc
cmp
push
push
cmp
mov
inc
push
std
jg
arpl
sub
icebp
add
mov
mov
jecxz
mov
xor
fiaddl
or
pop
pusha
dec
mul
mov
ss
movsl
or
idivl
int
test
call
jmp
int3
jg
push
in
test
int
xor
add
push
adc
cmp
int
cli
outsl
xor
pop
dec
out
addr16
das
sub
jno
add
imul
sbb
divb
jbe
je
adcb
mov
sbb
dec
mov
inc
pop
cmp
and
mov
pusha
add
pop
pop
dec
mov
mov
jnp
jmp
push
lods
or
fwait
xor
stos
fs
dec
push
rorb
scas
je
jne
stc
pop
jno
lds
add
aad
out
clc
lds
xor
cli
inc
inc
adc
mov
sbb
dec
cmp
or
mov
dec
or
popf
sub
sbbl
dec
push
xor
test
loop
sub
pop
pop
shrl
jns
mov
push
sub
call
lods
int3
or
mov
push
pusha
cmpsl
xchg
pop
leave
jnp
adc
mov
xor
ret
and
xor
jecxz
lahf
addr16
push
int
dec
adc
and
mov
leave
lret
insl
add
inc
mov
mov
sbb
lret
outsl
jbe
leave
in
fwait
aam
test
icebp
insb
fbld
cmp
jecxz
sub
dec
arpl
in
shll
mov
mov
xor
movsb
inc
bound
test
pusha
movsb
and
out
out
shl
pop
mov
mov
aas
pusha
in
fldcw
pusha
adc
mov
pop
fidivrl
lock
adc
fsubrs
jl
adcl
nop
pop
dec
jge
cltd
add
call
pop
push
in
xchg
and
push
into
shll
pop
int3
lea
mov
jp
in
ss
aas
flds
sub
and
adc
fcomi
mov
test
mov
call
repnz
push
cli
cmpsb
push
push
into
lods
clc
in
push
out
fisttps
lock
scas
inc
inc
push
call
sbb
and
jmp
sbb
sbb
pop
mov
adc
and
jp
adc
add
xchg
adc
lea
fisubl
int3
push
xorb
cmpsb
rcrl
cmpxchg
popf
pushf
shl
fwait
mov
arpl
shlb
sub
fnstsw
cmc
xchg
and
xchg
mov
orl
add
push
test
xor
iret
mov
cmp
sbb
aad
fstl
in
jbe
mov
pop
mov
or
movsl
shr
jecxz
orl
lret
sbb
call
push
dec
add
lods
repz
inc
and
mov
push
int
out
mov
dec
cmp
lahf
andl
in
xchg
subl
repnz
and
push
imul
push
fbld
jecxz
cmp
sbb
pop
insb
aam
jne
push
movsl
in
inc
mov
ja
cmp
jnp
adc
mov
sti
divl
sub
jno
outsl
jne
xchg
mov
xor
mov
sub
ret
inc
clc
mov
inc
pop
movsb
add
and
mov
push
xchg
fldl
cmpsl
jbe
sbb
aad
push
leave
pop
mov
sub
cltd
sbb
jle
xor
cmc
enter
push
nop
clc
sti
and
sub
popf
aaa
xor
push
outsl
loopne
bound
adc
fwait
pusha
fcoml
rcr
clc
out
lret
test
lret
call
rcrl
xchg
pop
sub
outsl
jnp
sti
fxam
js
add
jg
sti
into
ret
cmp
mov
in
in
pop
push
push
pop
into
xchg
sub
pop
insl
push
sub
scas
adc
pushf
arpl
jbe
adc
and
cmp
test
insl
cmc
adc
inc
aad
add
dec
sub
jg
and
add
enter
add
outsb
pop
sbb
pop
pop
or
data16
nop
and
lds
lahf
rolb
jge
bound
out
cltd
sbb
jb
pop
stos
in
push
lret
or
add
orps
mov
andb
loop
sbb
push
sbb
jo
push
inc
pop
xor
lods
mov
mov
jge
pop
pop
test
iret
or
inc
mov
jbe
add
hlt
mov
mov
sub
xor
and
std
pop
xchg
arpl
jp
test
ja
xchg
popa
cmpb
jle
inc
sahf
and
cmpsb
aad
adc
jl
sbb
xchg
aaa
add
je
lock
loopne
jno
push
fcoml
adc
inc
and
sub
lds
xor
and
inc
mov
rorb
repnz
ret
stos
dec
inc
outsb
pop
pop
jb
pusha
push
or
movsl
add
mov
inc
sub
lock
in
dec
inc
add
mov
ret
les
mov
shrb
sbb
sbb
test
jl
adc
fwait
movsb
dec
fmull
inc
sbb
in
mov
xchg
mov
and
outsl
sbb
jmp
cmp
fwait
mov
pop
punpckhdq
push
jno
or
push
mov
pop
mov
push
inc
fisubrl
frstor
fwait
data16
jno
je
hlt
mov
or
arpl
in
insl
inc
nop
mov
shll
or
mov
stos
or
enter
std
lds
lock
inc
in
mov
ja
flds
jge
mov
xchg
jle
jmp
add
jmp
insl
mov
or
jmp
shrl
out
in
or
int3
nop
std
fisubl
push
rorb
adc
arpl
push
sbbl
inc
mov
xor
xor
inc
ds
push
inc
ss
loop
bound
mov
and
ss
jg
push
pop
push
and
js
popf
pusha
shrl
rol
out
dec
rcl
adc
jecxz
stos
push
push
add
mov
in
pop
lahf
adc
pop
jbe
add
sub
cmp
cmp
loop
cmp
xchg
cmp
out
orl
jmp
ret
push
outsb
stc
in
ljmp
xchg
rorb
and
dec
pop
push
fwait
adc
call
xlat
popa
push
pop
add
xchg
sub
jno
add
int
idivl
int3
leave
jns
push
pop
mov
imul
bound
pop
cmp
lahf
lods
stc
scas
pusha
pushf
dec
mov
in
and
idivb
dec
or
ja
aam
push
lock
push
inc
xchg
mov
push
outsb
pop
fwait
cmpsl
adc
lret
jg
mov
mov
dec
pop
and
aam
cmpsl
fidivrs
xor
lods
xchg
xchg
insl
and
test
negl
cmpsb
dec
pop
std
imul
jbe
add
push
xor
and
or
and
cwtl
mov
sub
ret
shrb
mov
insb
pop
mov
roll
xchg
pop
push
mulb
aad
dec
mov
inc
pop
rcll
lods
inc
dec
lea
mov
outsb
jp
pop
in
mov
xor
adc
mov
insl
aam
add
lock
adc
push
sahf
lods
lock
dec
fsubrs
stc
adc
dec
sbb
sbb
push
mov
push
push
push
call
inc
push
mov
mov
lea
push
fistl
inc
aaa
jge
repz
jcxz
or
in
or
js
ds
mov
sub
and
or
test
lahf
js
stos
and
and
shll
push
pop
mov
add
ljmp
dec
dec
xchg
out
sub
mov
jge
gs
dec
sub
bound
sub
lods
loopne
xchg
pop
dec
add
scas
cmp
cmp
or
pop
and
test
and
lods
stc
xor
sub
or
stos
jmp
adc
repnz
push
sbb
pop
repnz
ss
ret
xchg
fists
dec
std
push
cld
mov
aad
push
push
rorb
ds
mov
xor
scas
mov
lahf
push
test
jnp,pn
inc
sub
push
ljmp
les
jge
lods
sbb
mov
into
inc
fs
dec
or
daa
cmp
inc
les
xlat
shrb
subl
fwait
lahf
jo
sarl
stos
mov
insl
fcmovne
dec
ret
and
add
push
decl
fstps
jb
push
aas
fistps
inc
or
xor
stos
inc
add
cld
mov
mov
mov
test
xor
mov
jb
insl
add
pop
adc
mov
bound
shll
pushl
pop
and
jp
xchg
mov
pop
mov
stos
outsl
or
fxsave
jp
push
xchg
mov
fsubl
ret
mov
int
xchg
scas
push
lahf
enter
inc
sub
or
inc
testl
fcmove
and
adc
xchg
and
add
mov
inc
shll
sub
fcomi
gs
jp
ret
add
loopne
mov
mov
in
pop
and
inc
gs
or
push
sbb
or
xlat
lahf
adc
xor
mov
push
rcl
cmp
add
jl
aas
daa
in
loope
sub
mov
gs
adc
in
inc
add
jmp
popf
push
push
jns
clc
insl
sub
rcr
loopne
pop
adc
mov
sarl
push
pop
rorl
dec
jmp
jl
insb
loopne
js
dec
aaa
xor
bound
inc
sub
dec
pop
ret
ficomps
inc
fstl
jb
xchg
sbb
fidivl
lret
dec
rorb
add
jl
lods
cmp
cltd
frstor
test
mov
lret
push
jl
add
enter
notb
dec
push
loopne
jne
pminsw
xor
jnp
inc
cmc
in
dec
cld
pop
dec
push
jb
mov
push
andb
mov
push
push
jne
bound
popa
pop
add
dec
jmp
fldl
push
aad
stos
sbbb
addr16
mov
mov
dec
pusha
ss
imul
mov
jo
mov
fnsave
and
sbb
je
cs
cmp
daa
dec
aaa
outsl
push
xor
fs
loope
jne
imul
xchg
int3
xor
pop
sti
mov
push
push
mov
pop
xchg
push
aam
sub
mov
cmp
and
cmp
cmc
push
mov
xchg
bound
mov
xlat
test
sahf
and
movb
and
jp
pushf
loop
fcoml
fs
and
mov
jge
roll
arpl
scas
pusha
stc
imul
inc
pop
pop
popa
enter
sub
jle
pop
lahf
jae
in
sbb
ss
gs
adc
inc
call
fcoms
sar
xor
pop
addl
stos
sbb
dec
push
inc
iret
test
enter
lods
cmp
clc
add
add
and
loope
mov
sbbl
aas
mov
mov
or
cmp
and
pop
xchg
mov
das
dec
outsb
ret
inc
cmp
push
sbb
scas
outsl
dec
enter
push
sbb
xor
pop
sub
mov
cmp
jecxz
clc
stc
js
xchg
out
shlb
movb
cmpsl
and
repz
in
pop
push
xchg
adc
mov
sbb
cmp
mov
xor
ret
cmp
movsl
shlb
in
je
movsl
and
loope
mov
xor
leave
stc
push
jo
lods
push
sbb
inc
sahf
adc
push
cmp
dec
mov
sbb
xchg
cmp
jae
cmpsb
fimuls
jge
jnp
iret
mov
xchg
pop
and
sub
in
jo
dec
repz
jne
jae
xlat
subl
movb
sub
addr16
pop
mov
jecxz
gs
mov
push
mov
jge
jno
cmp
cwtl
or
scas
xor
js
in
or
mov
push
je
js
cltd
gs
push
sub
adc
fbld
jnp
das
adc
movsl
inc
lret
add
lods
or
sub
enter
bnd
loope
xchg
push
and
or
out
and
stc
sub
fwait
lcallw
pop
adc
dec
adc
jecxz
push
push
pop
repnz
add
sub
jb
loop
xor
pusha
jl
sbb
inc
sub
cmc
pop
jp
dec
pop
lods
jns
and
add
jle
ss
mov
xor
pop
clc
dec
cltd
sbb
mov
pop
add
popa
into
add
fmull
fldenv
jne
cld
and
sub
or
loop
cmp
mov
pop
and
sub
dec
icebp
or
inc
and
push
pop
or
and
lahf
enter
fnstsw
push
out
add
sub
pusha
cmpsl
lea
mov
pop
enter
add
mov
pushf
fisubs
inc
imul
push
stc
jb
js
insb
testb
mov
jecxz
lahf
mov
outsl
or
popf
pop
cmpsb
push
addr16
add
add
leave
inc
loope
and
push
mov
add
mov
or
xor
push
mov
es
sahf
mov
ret
and
lahf
enter
sbb
jae
arpl
sbb
push
leave
xor
inc
or
std
int3
mov
sbb
xchg
movsb
sub
sahf
mov
imul
dec
inc
pop
cmp
jl
mov
lods
adc
sbb
jle
push
scas
push
rcrb
js
dec
add
add
pavgb
or
mov
and
sub
sub
sub
aaa
add
push
sbb
pop
mov
notl
and
aad
push
jbe
dec
int
lods
loope
aas
dec
fs
mov
lods
cmpsl
push
iret
push
jae
repz
lds
xor
test
cmp
test
pop
rcrl
cmp
pop
nop
jl
shrl
sub
xor
push
sahf
jo
inc
push
xor
mov
inc
jns
pushf
fwait
in
test
out
add
mov
dec
movsl
sbb
inc
and
pop
mov
push
or
push
int3
push
lock
dec
addr16
and
xchg
aam
mov
sbb
mov
and
or
jno
dec
or
jecxz
lahf
mov
jnp
inc
repz
xor
dec
cmp
cmp
outsl
repnz
pop
pushf
lock
scas
jne
add
mov
icebp
repz
adc
inc
je
cmp
enter
fwait
shll
mov
cmp
mov
pop
mov
inc
add
repnz
jnp
push
cwtl
outsl
cld
orl
icebp
fwait
xchg
dec
or
sarl
push
jg
mov
dec
pusha
push
rcl
int3
jge
sub
ret
sbb
add
fsubs
jbe
sbb
sub
jbe
dec
add
sbb
lret
lds
and
xorl
test
dec
jl,pn
jg
addr16
push
dec
arpl
sbb
movsb
inc
ljmpw
scas
shll
movsl
push
pop
ds
sbbb
mov
cmpsb
loopne
dec
cltd
pop
mov
out
fildl
cs
or
pop
fisttps
fistps
fistl
into
out
jg
mov
sub
xor
mov
mov
test
and
scas
mov
aaa
add
or
sub
mov
jmp
jl,pt
mov
sbb
shll
mov
push
loop
ljmp
cmp
mov
or
clc
cmp
cmpsl
mov
inc
les
fwait
inc
call
xor
add
jbe
jne
rcl
adc
push
ret
pop
adc
punpckhwd
adc
daa
daa
cmp
inc
lds
xor
adc
cmp
in
mov
scas
add
in
adc
sub
scas
push
mov
adc
fildl
lcall
xlat
ret
popa
and
imul
jl
aam
mov
aam
rolb
es
pop
jecxz
orl
repz
add
push
add
scas
punpckhwd
xlat
sub
mov
pop
add
xlat
subb
enter
call
fs
add
add
sbb
sbb
dec
mov
scas
leave
mov
incl
fs
int3
pop
cmc
stos
into
mov
insb
jnp
add
in
sbb
adc
xchg
test
outsb
dec
in
repz
ror
xor
jl
push
and
jo
jae
cmp
pop
popf
ljmp
adc
fidivl
mov
dec
adc
in
dec
xchg
in
out
insb
mov
cmp
cmc
add
adc
loop
mov
or
sbb
fisubl
cs
bound
mov
data16
enter
std
sbb
add
cmp
dec
pop
mov
mov
ja
loopne
dec
rol
frstor
jecxz
mov
and
cwtl
push
enter
enter
clc
fsts
mov
mov
test
push
jmp
daa
iret
and
dec
adc
cmpsl
xchg
aam
sub
add
arpl
iret
sti
cmp
cwtl
and
insb
push
and
lcall
mov
ret
sub
sub
and
int
shrb
cwtl
mov
ret
and
or
inc
ja
jle
out
pop
int3
pop
lret
les
pop
pusha
ret
imul
xchg
mov
push
mov
in
popf
add
pushw
or
push
into
orb
rorb
hlt
pop
popf
test
int3
or
mov
repnz
sbb
shr
sti
mov
dec
xchg
and
ret
xor
sbb
cmp
lret
jmp
pop
sbb
ljmp
iret
lea
pop
loop
jl
or
movsl
fimuls
push
pop
das
pop
xchg
mov
mov
hlt
dec
ret
dec
adc
test
mov
ficoml
push
mov
inc
stos
adc
mov
clc
in
inc
jo
mov
jg
call
inc
xor
cmp
adc
pop
push
cmpb
in
addr16
pop
pop
adc
jg
jbe
sbb
push
aad
pop
mov
call
cmp
icebp
cmp
ds
or
mov
push
dec
dec
dec
mov
test
push
aas
int3
jle
fs
lds
xchg
mov
push
push
jo
hlt
shrb
cwtl
push
dec
cltd
pop
push
pop
test
dec
add
fcmovnu
or
or
fcomps
sub
inc
rolb
push
aam
imul
cmpsl
dec
fldl
into
jecxz
jl
jge
or
popa
andl
add
rcrb
aaa
movsl
adc
inc
pusha
adc
cli
fimuls
lods
sbb
inc
add
and
mov
fwait
gs
pop
add
rcll
std
mov
lcall
pop
cmpsb
push
fbld
sbb
das
cmp
mov
lock
mov
aad
inc
lea
add
cmp
and
test
jb
adc
inc
inc
jne
jge
sub
scas
and
fdivr
insl
test
push
inc
fs
je
or
fwait
aam
rcrl
popf
adcb
mov
sbb
dec
subl
sub
repz
or
mov
loop
dec
xor
lock
fwait
or
dec
jle
jmp
dec
and
sbb
leave
mov
pusha
dec
dec
sub
aas
xchg
cli
dec
push
loope
lret
jns
pop
lcall
sub
mov
sub
ret
push
ret
stos
sub
iret
ds
jge
jmp
add
add
stc
mov
jnp
loope
mov
aam
mov
xor
fisttpl
mov
sub
cwtl
mov
fldt
dec
xchg
sbb
shrb
shll
xor
imul
fmull
stc
push
sub
inc
sbb
sub
shr
dec
xchg
xchg
loopne
subl
fsin
adc
imul
inc
fiaddl
test
or
lret
inc
push
mov
movsl
jle
jg
cmp
ficomps
scas
dec
inc
dec
mov
pop
mov
in
movb
das
insl
popl
mov
sbb
sub
lods
adc
pop
xchg
mov
lret
div
aaa
ja
aaa
pop
iret
mov
data16
push
jle
iret
mov
clc
scas
iret
popf
popa
popf
adc
out
cltd
dec
fisttpll
in
int3
xchg
and
mov
xor
rcl
lods
jbe
out
out
rdpmc
inc
movsb
sub
inc
pop
xchg
dec
cmp
loopne
pop
shrl
in
mov
sbb
mov
dec
rorb
and
cmp
shrl
xchg
fildl
fstpt
fld1
cld
mov
scas
xor
clc
jl
inc
sbb
pop
pop
movsl
cmp
dec
in
pusha
mov
mov
test
les
lret
add
sbb
or
pop
outsw
rcrb
xchg
cs
or
sub
inc
test
cmp
out
and
sub
jle
jnp
and
mov
jne
sbb
lods
fisttpl
mov
jge
fists
cwtl
test
fstpt
call
add
add
lcall
outsl
push
aad
notb
inc
pop
sbb
repnz
push
push
mov
out
das
loopne
mov
pop
aad
add
or
negb
adc
push
xchg
fdivrl
pop
ret
add
add
mov
mov
shll
sarb
pop
xor
into
shll
test
addr16
sbb
jo
or
jle
inc
cmp
imul
push
push
addr16
jg
adcl
jmp
xchg
cmp
fsubrp
lods
or
lcall
jle,pt
xor
mov
xor
lret
or
or
arpl
and
jle
xor
pop
inc
adc
shlb
push
xor
jge
or
mov
and
pcmpgtd
cld
ret
push
int3
mov
adc
shrb
sahf
popa
dec
jle
xor
bswap
loopne
sarl
std
or
sbb
in
dec
repnz
dec
insl
daa
xor
enter
mov
xchg
aam
mov
roll
inc
mov
cmp
clc
lds
xchg
jge
cmp
push
inc
or
adc
cmpsl
mov
jl
push
cld
aas
pusha
jmp
jb
sbb
ds
fsubl
jae
xchg
jae
xor
mov
imul
cmp
je
ficoms
pusha
cltd
sbb
nop
push
mov
push
xchg
and
movb
adc
mov
stc
jae
dec
pop
iret
dec
insb
mov
cld
or
movl
adc
and
sub
icebp
in
add
aaa
adc
push
and
dec
mov
jmp
shlb
jl
ror
cmpsb
loope
mov
dec
and
andl
movsb
cs
push
insb
adc
mov
mov
push
fs
sub
pusha
stos
mov
sbbl
shrl
adc
imul
add
add
stos
add
insb
sahf
push
add
ret
roll
add
push
int
out
pop
jb
or
cmp
xchg
mov
out
fisubrs
sbbb
jp
loopne
jno
dec
in
sub
movl
sbb
sbb
and
pop
sahf
sbb
jmp
or
pop
adc
rcrl
rcrl
inc
mov
aad
clc
xchg
push
lods
lds
pop
out
les
sub
mov
out
sub
sti
es
jno
push
lret
dec
jnp
sbb
enter
insl
repz
lock
shlb
movsb
sbb
add
adc
out
stos
lcall
orl
in
push
ljmp
push
loop
push
or
push
test
jge,pn
adc
sub
jb
jnp
std
sbb
and
inc
pop
dec
js
flds
iret
dec
test
fisubl
daa
mov
add
in
insl
fmull
lcall
mov
es
out
dec
add
negb
in
mov
cmpsb
cmc
call
sub
mov
ret
jle
ss
xor
stos
add
sbb
in
std
add
fiaddl
ljmp
inc
mov
outsl
dec
and
or
mov
aaa
jae
mov
inc
fsubrl
push
cmp
cli
popa
cs
daa
inc
add
mov
and
xchg
xor
in
jge
out
ss
popa
xchg
pop
jb
ret
add
push
push
aam
loope
subb
push
and
jno
inc
dec
or
push
mov
loope
pop
inc
sbb
imul
dec
adc
mov
sti
or
dec
daa
xchg
xchg
jnp
push
push
sarb
add
add
mov
mov
adc
jle
jae
dec
xor
xor
int
inc
dec
adcb
mov
push
adc
lods
xchg
jmp
xchg
out
ss
mov
pushf
popa
mov
sub
or
mov
test
push
mov
negb
sub
cmp
jns
dec
or
loopne
fisttpl
dec
sbbb
sub
dec
inc
mov
add
pop
mov
lret
lods
sbbb
cwtl
lods
repnz
sub
clc
out
ficoml
pop
nop
fsubl
fisttpll
lea
push
ret
jo
mov
inc
mov
loop
insl
mov
into
scas
jl
adc
loopne
loopne
aad
mov
xchg
pop
lcall
cmpsl
mov
push
jns
dec
fldenv
mov
jbe
std
fstl
lea
std
das
dec
pusha
stc
mull
cmp
mov
mov
notl
movsl
stos
imul
cs
lret
lcall
push
dec
pop
adc
xor
mov
cmp
dec
jmp
test
xchg
and
inc
pusha
fdivrl
cwtl
icebp
inc
mov
enter
and
outsl
mov
mov
in
test
inc
mov
cmp
mov
jl
xor
add
gs
inc
mov
cmp
mov
inc
jne
xchg
push
gs
call
xchg
inc
inc
repz
lods
fildll
inc
adc
loop
in
jg
inc
and
inc
repnz
inc
fwait
xchg
push
pusha
fstps
sti
lahf
sbb
mov
sub
xor
icebp
arpl
adc
int3
lret
stos
mov
test
int
stc
pop
adc
mov
cmp
loope
mov
stos
je
adc
mov
add
cmpsb
imul
dec
push
pusha
sub
sbb
and
ficomps
mov
pop
insl
mov
nop
lcall
ffreep
xor
add
jl
sbb
lret
push
jne,pn
mov
or
cwtl
inc
stos
jns
out
sub
push
cmp
mov
pushf
ret
jno
int
orl
test
xor
push
adcl
xor
clc
dec
ret
dec
outsb
stc
mov
dec
push
add
mov
pop
shll
push
dec
pop
and
pop
xor
cs
or
int
mov
sbb
pop
push
and
inc
xor
negb
shll
jne
pop
add
push
jg
mov
adc
lcall
pop
push
mov
lret
and
jecxz
sbb
call
mov
aad
jne
lods
jl
xor
jbe
cs
imulb
mov
mov
pop
sbb
sbb
out
lahf
push
dec
sbb
pusha
repz
add
mov
push
inc
xchg
dec
in
cli
cvtdq2ps
adc
inc
xchg
push
stos
cmp
movsl
xor
sbb
add
inc
mov
dec
fsubs
jle
dec
lods
insl
add
shrl
gs
dec
fsubp
sub
pop
inc
add
sbb
jle
dec
fidivl
loopne
gs
addr16
sbb
or
dec
ds
testb
or
fcmovnu
add
ret
imul
aad
bound
push
dec
in
shll
xchg
iret
sbb
pushf
mov
sbb
jle
in
enter
and
jp
dec
repnz
sahf
aad
inc
push
push
fdivl
dec
cltd
inc
loope
push
or
das
push
push
sbb
jg
clc
inc
add
out
push
insl
or
mov
cwtl
push
popf
pusha
fnstcw
mov
dec
xchg
gs
std
pushf
mov
inc
push
sti
imul
in
arpl
xor
xchg
mov
push
cld
adc
jmp
bound
aaa
loop
sbb
ss
mov
xchg
sahf
lods
fs
in
bound
packuswb
jae
jbe
ds
gs
inc
cmp
and
lret
mov
shlb
repnz
dec
fimuls
push
fiadds
bound
mov
stos
in
jns
xchg
scas
and
jbe
ret
inc
mov
jg
bound
hlt
add
sbb
push
je
out
icebp
out
fisttpl
mov
insb
in
mov
cmp
sbb
cmp
fisttps
xor
insl
add
movb
sbbb
enter
inc
jns
jo
or
stc
in
push
and
xor
in
pop
push
stos
and
mov
and
out
in
push
dec
aam
lds
mov
pop
mov
mov
jb
popa
adc
push
inc
outsb
pushf
xor
and
pop
into
into
mov
jmp
sbb
jge
movups
ljmp
push
repz
xchg
lcall
mov
push
in
push
sbb
xor
incb
sbb
adc
iret
and
inc
les
leave
sbb
leave
pop
mov
jmp
insb
xor
scas
inc
aaa
out
sub
in
imul
popf
jbe
pop
popf
pop
adc
ss
in
jl
pop
stos
inc
insb
stc
and
cs
pop
add
cmp
mov
adc
mov
lcall
rclb
insb
push
push
mov
mov
and
mov
jns
arpl
add
movsl
xchg
cli
scas
pop
add
xchg
pusha
testb
cmpsl
xor
dec
roll
dec
cmp
inc
popf
dec
stc
out
fwait
xor
fldl
inc
xchg
ret
inc
bound
or
je
inc
mov
sub
push
aad
cmpsl
pop
push
inc
imul
mov
xchg
cmpsb
stos
adc
dec
lods
inc
nop
neg
mov
or
call
mov
pop
aam
repnz
bswap
sub
mov
ret
fldcw
insl
lods
das
ss
jge
cmc
jns
adc
frstor
sub
outsb
ljmp
cs
sbb
xchg
popf
mov
hlt
clc
xchg
sub
fistpl
lcall
xchg
mov
out
arpl
leave
ds
test
sub
daa
or
jp
adc
and
shl
mov
sub
pop
inc
fxch
jl
push
mov
bound
lahf
pop
sbb
lods
sbb
push
sahf
cli
cmpsb
adc
xchg
out
fidivrl
or
pop
cmp
dec
add
cmp
mov
mov
and
in
jnp
mov
adc
mov
pushf
js
das
pop
les
pop
in
mov
dec
sbb
ja
xor
aas
dec
popf
stos
jg
mov
call
or
dec
push
bound
sub
mov
je
or
push
adc
push
xor
ja
sub
jns
cli
sbb
cmp
stos
jae
cmp
or
je
scas
mov
mov
out
call
les
fists
and
dec
ret
mov
addb
jne
cli
sahf
adc
fdivrl
add
push
sub
into
xlat
or
cmp
jns
and
xlat
lds
dec
rcll
push
bound
ljmp
add
mov
push
push
jae
jbe
mov
pop
repnz
add
push
cmp
mov
ficoms
aad
jmp
xor
add
push
int3
mov
in
fiaddl
sbb
cmc
fildll
in
adc
or
sub
out
sub
mov
mov
bound
sub
aad
aad
sub
jmp
clc
mov
mov
aad
pop
js
mov
popl
sbb
jmp
test
cmp
xchg
xchg
mov
adc
inc
dec
sti
mov
pop
jns
in
aam
push
testb
adc
stos
xchg
mov
and
pop
add
pop
xchg
enter
mov
leave
adc
push
xor
jp
in
jge
loop
lock
popf
cmpsl
xor
shlb
or
add
arpl
sbbb
out
dec
sbb
add
jns
loopne
es
jnp
sarl
stos
lret
jecxz
popf
or
std
sub
push
dec
push
push
jae
roll
or
push
or
in
push
ja
sub
sub
pop
hlt
mov
jne
push
and
push
mov
cmp
fwait
pop
out
es
and
dec
push
mov
loopne
sub
addr16
sub
adc
pop
xchg
push
adc
jmp
cmp
call
std
xchg
fcmovnb
fsubl
push
inc
imul
fsubr
push
nop
xchg
inc
fs
iret
mov
add
loope
mov
jbe
mov
sbb
cmp
and
sahf
popf
sub
pusha
lods
icebp
aaa
or
std
es
fidivl
mov
scas
mov
push
and
mov
mov
or
in
jecxz
test
mov
push
andl
inc
add
and
std
sub
push
call
lea
and
ds
mov
xor
push
into
ret
movb
inc
jnp
enter
out
in
sub
les
loop
sbb
adc
xor
fwait
cli
lea
jl
test
cltd
or
addl
fwait
pushf
push
loope
sbb
push
push
inc
jg
or
or
subb
push
xchg
lahf
cld
sbb
mov
nop
bound
imul
sarl
mov
fiaddl
mov
pop
pushf
std
pusha
popa
ss
stos
in
aaa
icebp
inc
dec
xor
gs
lods
dec
ja
repnz
ds
stos
sarb
in
inc
in
js
adc
cmp
popf
pop
jns
inc
stos
or
sbb
mov
push
popa
into
jno
lret
repz
xor
rorb
push
jmp
adc
cmp
popf
jl
push
and
fadds
cmp
xor
jb
aam
les
insb
pop
mov
push
mov
pop
dec
sub
inc
test
outsb
jns
ficompl
sub
jnp
aam
stos
push
add
cmpsl
fistl
andb
lds
data16
loop
pushf
ljmp
push
repnz
jns
fwait
cli
je
xchg
jo
mov
mov
or
in
dec
mov
pop
sub
push
adc
jmp
dec
xor
pop
inc
mov
test
push
mov
lea
cmpsl
and
dec
ficoml
popf
jnp
popa
mov
inc
sub
shrl
and
stc
push
adc
repz
jbe
jb
enter
and
cmpsb
int
mov
jecxz
lock
movsb
stos
xchg
orl
iret
int3
pop
nop
mulb
movsl
popa
lret
fdivp
sti
mov
add
pop
and
xchg
xor
mov
ljmp
pop
inc
lret
daa
dec
arpl
repz
pop
xor
xor
lret
jle
cwtl
cmpsb
jo
mov
inc
cltd
and
subb
insl
lahf
sahf
inc
fldl
cmp
sbb
dec
out
jp
inc
daa
out
hlt
and
ljmp
mov
jl
sub
sub
addr16
sub
pop
loop
mov
adc
pop
sbb
arpl
adc
fldln2
loopne
roll
jecxz
adc
mov
dec
int
sbb
int3
add
je
cmpsl
inc
mov
dec
lret
lods
shlb
clc
lods
jl
dec
stos
mov
out
mov
push
pop
mov
push
adc
sbb
std
pop
or
add
fwait
sub
insb
cmp
xorl
cmc
call
jmp
mov
shrl
pop
push
pop
sbb
iret
xchg
repnz
mov
dec
or
dec
pusha
and
sahf
push
cmc
mov
xor
jo
outsb
jne
sbb
lds
cmp
sbb
xorl
mov
inc
adc
pop
lock
sbb
frstor
addr16
or
popa
jle
cs
aam
cmp
and
push
mov
test
add
sub
push
add
cmp
in
aam
pushf
data16
mov
out
cltd
push
inc
or
xor
insl
mov
nop
int
clc
sub
addl
sbb
lock
pop
jb
adc
and
push
sub
fdivl
jge
je
push
movsl
nop
inc
bound
dec
cmp
aad
movsb
fistps
movsb
pop
push
mov
push
push
lahf
into
mov
or
mov
rclb
mov
adc
mov
mov
fisubrs
popf
inc
fistpll
push
iret
mov
lds
xchg
insb
cmp
inc
out
jno
jl,pt
or
js
pop
fmul
lods
out
mov
std
cmp
fldenv
outsb
jae
jae
sub
dec
jecxz
mov
and
mov
dec
je
dec
sbb
pop
add
in
pop
mov
rcrb
xchg
sahf
adcb
push
pop
mov
or
es
push
xchg
add
dec
pop
and
jae
inc
aad
mov
cmpsb
xchg
add
das
jg
shlb
imul
mov
loope
push
fcomps
push
sbb
or
daa
jl
lcall
aad
in
inc
push
rcll
es
in
aad
cmp
jl
test
push
aam
lock
mov
dec
adc
aaa
idivb
out
mov
jmp
inc
xchg
cmp
test
dec
add
xor
adc
loop
fcoml
les
xor
out
jecxz
jb
jns
add
xor
pop
xchg
adc
int
cwtl
inc
jl
int
pusha
pop
mov
ret
cmp
sbb
and
dec
aam
sbb
insb
xor
shrb
jns
ficoml
dec
or
loope
sbb
js
push
dec
pop
xchg
lods
mov
enter
adc
jecxz
xchg
ja
ds
add
outsl
mov
sub
adc
sbb
imul
add
fiadds
add
flds
pusha
sarl
sarl
insl
cmp
jmp
and
inc
outsb
mov
push
mov
mov
dec
push
pushf
mov
and
into
ss
xchg
jmp
mov
lea
inc
in
aaa
decb
adc
movb
add
leave
xor
mov
mov
mov
or
pop
and
sbb
mov
sbb
enter
std
fists
iret
jnp
sbb
dec
jge
mov
repnz
pop
insb
in
push
shl
sub
in
sbb
xchg
lods
jo
bound
dec
pushf
lcall
dec
cmp
sbb
xchg
bound
mov
pop
mov
inc
std
in
roll
int3
pop
lcall
xchg
das
add
or
js,pt
dec
xchg
sbb
ret
mov
pop
dec
inc
aam
sub
xchg
pop
sbb
fdivrl
or
jae
cmpsb
adc
daa
pop
loop
faddl
fnstcw
dec
cmp
lds
or
inc
movsl
rclb
dec
add
out
fildl
arpl
outsl
popa
fwait
sbb
jae
jmp
sti
xlat
jb
enter
mov
sub
lods
or
push
and
addr16
ja
and
xor
jle
movsl
or
cmpsb
push
mov
jle
stos
jo
test
mov
fbstp
sub
frndint
mov
jg
mov
add
insl
mov
xor
ja
sub
mov
insb
push
hlt
sub
push
ja
pop
int3
mov
sub
insl
imul
loope
dec
scas
cmp
ret
out
repz
mov
mov
jae
cmpsl
andb
cmpb
outsl
loop
mov
jbe
outsl
or
aad
jb
push
and
or
xlat
js
lcall
pusha
mov
or
mov
ret
push
bound
xchg
fists
mov
addr16
dec
sbb
and
lock
dec
movsbl
imul
mov
xchg
out
movsb
jae
adc
decb
cmpsb
pop
mov
je
fdiv
stos
inc
enter
shlb
inc
insb
call
jge
push
jne
repz
subb
rcr
outsb
cmovo
sub
push
mov
add
jns
and
inc
test
out
adc
mov
lahf
adcl
fidivrl
ds
pop
ficoml
jp
loope
addr16
add
pushf
push
jnp
and
add
icebp
jns
xlat
outsb
je
cmp
sub
ficomps
in
dec
cmp
aam
fdivrl
or
push
sub
jl
push
lahf
daa
lods
sub
scas
fidivl
pop
movsb
mov
lcall
loope
aas
add
inc
jge
pusha
gs
iret
pop
pop
mov
les
orl
adc
movzbl
fildl
subl
cs
pop
fimuls
adc
sbbb
xchg
in
push
jmp
mov
inc
and
addl
outsl
push
xor
into
cmp
jmp
dec
pop
loope
pop
jns
scas
aad
lcall
adc
cli
repnz
add
sbbb
cmp
cmc
ficomps
imul
add
add
inc
sub
rcrl
into
fldcw
pop
popf
mov
sahf
pop
scas
das
add
sub
fcoml
int
in
cld
test
inc
mov
add
cmpsl
inc
aad
imul
dec
out
xchg
mov
outsl
aaa
in
jmp
stc
int
jp
movsl
jmp
pop
pop
mov
mov
push
ret
and
es
aad
imul
cmc
or
rep
pop
inc
cmpl
mov
jo
or
leave
sub
xchg
mov
xor
lods
add
jp
daa
cltd
leave
scas
mov
call
cltd
fisubs
loopne
cmp
mov
stos
add
mov
sarb
out
sti
lea
mov
insl
test
sub
int3
xchg
inc
or
mov
xchg
lcall
in
ret
sbb
jmp
shr
loopne
aas
pop
sbb
fidivl
imul
je
outsb
add
xchg
jae
inc
test
lahf
mov
in
sti
sub
test
lret
rcr
add
repz
pop
cli
cltd
xchg
mov
bound
push
stc
lods
lods
inc
iret
roll
dec
inc
cmp
xchg
fsubl
add
jo
fwait
adc
fnstcw
mov
stc
sub
pop
cmp
mov
push
js
jl
xor
data16
mov
cmpsb
push
outsb
lahf
dec
loop
outsb
mov
push
ja
addr16
cmp
stc
xor
and
pusha
nop
xorb
shl
in
add
sub
gs
daa
repz
jnp
negb
stos
and
jno
icebp
idivb
adc
loope
pop
in
push
iret
pusha
cmpsb
stos
dec
sahf
cwtl
and
stos
dec
pop
pop
loop
push
stos
addr16
mov
test
inc
jmp
fcompl
lock
and
cmp
mov
dec
bound
push
mov
cmp
fsubp
lds
xchg
sub
push
ret
lcall
and
imul
xchg
pop
mov
lret
add
imul
or
dec
sbb
add
adc
add
mov
xor
or
push
push
or
es
jnp
gs
icebp
mov
dec
sbb
and
call
sarb
jns
imul
mov
mov
pop
adc
inc
cmp
js
sbb
or
dec
cmp
push
out
adcl
fcmovne
push
fidivrs
xorl
imul
lods
insl
and
in
and
icebp
mov
dec
fstp
jns
inc
pop
hlt
dec
imul
pusha
jns
aad
pusha
jge
mov
lods
insl
sahf
popa
movsl
pop
mov
mov
mov
dec
in
xchg
push
arpl
push
push
mov
dec
mov
cli
in
aad
dec
loope
jge
pop
sub
fildl
ret
jmp
lods
in
lret
fldl
add
jg
inc
and
lahf
shrb
jle
sbb
jnp
imul
sarl
hlt
in
push
loopne
sbb
ss
dec
push
or
clc
gs
mov
sbb
pop
rcrb
and
mov
xor
mov
sub
jmp
lods
pop
jne
lret
cmc
inc
popa
add
cld
rol
jne
stos
mov
adc
js
outsb
cmc
nop
xor
mov
cmp
clc
adc
xor
sub
addl
inc
loop
mov
fstp
daa
push
jns
adc
data16
jo
cmp
popf
push
ret
test
and
pusha
xor
lret
push
pop
psubsb
jge
xchg
pop
jne
push
dec
call
xor
dec
push
imul
lock
dec
rcll
dec
movsb
pusha
adc
inc
sti
xchg
jp
jo
popf
sub
inc
inc
cltd
in
loopne
adc
mov
popa
pop
pop
cmp
inc
mov
lret
jns
dec
push
fmulp
xor
push
push
xor
sbb
jne
pusha
or
je
call
push
popa
pop
push
fisubrl
jno
pop
out
dec
in
add
jle
sbb
fwait
push
sbb
in
clc
mov
mov
int
adc
shlb
js
pusha
add
or
and
jge
sbbl
sbb
jnp
data16
aad
icebp
dec
dec
pop
dec
test
in
movsl
pop
ret
popf
dec
mov
mov
jle
sbb
jnp
xchg
pop
add
in
inc
nop
sti
mov
pop
or
jl
dec
sbb
outsb
arpl
pop
inc
add
and
mov
xor
shlb
aad
dec
sti
in
lods
movsl
rcr
fcomp
mov
jno
sbb
or
lret
jns
aad
icebp
and
dec
jne
pusha
loope
xlat
sbb
clc
test
test
lea
push
jnp
lods
outsl
mov
sti
sub
xchg
mov
rolb
adc
fstpt
dec
lds
insb
jge
int3
pusha
aad
inc
mov
mov
push
pusha
sbb
jg
shlb
aad
dec
paddsw
cmp
push
jnp
loop
out
sbb
push
adc
jbe
ja
cmp
jle
sbb
fldl
inc
stos
sub
adc
sbb
xor
sbb
and
inc
lods
in
aad
cli
enter
lods
std
inc
inc
js
movsl
dec
ficoml
inc
mov
in
lret
pop
movsb
lret
adc
mov
push
mov
test
or
mov
dec
adc
sbb
push
js
adc
pusha
lret
gs
fcmovne
loopne
int3
lock
xor
dec
fimull
js
dec
aas
jae
pusha
sbb
scas
enter
enter
adc
dec
cmpsl
jg
lock
pop
cmp
movsb
lds
pop
sub
loopne
jl
lods
fdiv
lret
lock
insb
push
pop
arpl
dec
xor
jl
int
aam
inc
pusha
insb
call
in
push
movsl
scas
cmp
mov
dec
ljmp
iret
js
adc
pop
mov
xlat
fiadds
outsl
dec
fimuls
daa
mov
lahf
sub
fildl
or
enter
lods
cmp
lret
adc
add
jne
pusha
fildl
push
mov
inc
lea
out
mov
xor
pusha
jle
sbb
jnp
mov
mov
dec
xchg
popl
js
adc
sbb
jmp
addr16
dec
cli
or
push
push
jae
lret
scas
int
adc
enter
lods
pop
cs
aaa
inc
mov
roll
jne
pusha
mov
sbb
int
jnp
lea
fneni(8087
jb
jae
out
insb
lret
clc
inc
pusha
inc
adc
ss
addr16
dec
jge
andl
mov
xchg
test
mov
mov
orl
insb
push
clc
out
out
adc
pusha
ret
dec
in
cmc
cmpl
arpl
data16
mov
xchg
dec
sub
sub
inc
dec
sti
vmread
adc
pop
jle
aas
sbb
pop
fiadds
or
repz
fildll
fildl
int
adc
enter
lods
jnp
add
inc
and
pop
dec
cmpsl
into
rcr
loopne
dec
mov
mov
jle
sbb
jnp
xchg
pop
add
out
inc
xchg
sti
fstpt
pop
push
scas
insb
mov
add
adc
int3
imul
sub
bound
in
loopne
int
push
loopne
lret
pusha
cmp
cmp
inc
jle
aas
js
adc
sbb
pusha
pop
and
jbe
sub
imul
ret
and
jnp
xlat
pusha
repz
push
dec
pop
in
mov
test
dec
mov
mov
add
js
jle
sbb
jnp
pusha
rclb
mov
js
pop
sub
jmp
inc
mov
iret
js
adc
pop
mov
xlat
fiadds
outsl
dec
fimuls
daa
mov
lahf
sub
fildl
or
enter
lods
cmp
test
shlb
xchg
mov
lods
push
loopne
adc
enter
lods
dec
jle
inc
inc
roll
jmp
dec
rcll
ret
imul
push
xor
scas
pusha
mov
and
pusha
mov
jge
xor
sbb
jnp
data16
jg
pop
dec
repnz
repz
inc
xchg
idivl
adc
pop
mov
out
enter
ss
dec
or
mov
and
xor
adc
enter
lods
and
lret
sbb
add
and
imul
ret
dec
aad
dec
dec
in
mov
pop
lea
out
loopne
push
cmpsl
push
lret
fmulp
lahf
adc
enter
lods
mov
add
and
pusha
das
stos
aad
dec
in
in
xchg
mov
std
lea
ret
jae
insb
jnp
shlb
adc
pusha
pop
dec
cmp
adcl
xor
nopw
push
pop
adc
js
adc
or
inc
sbb
xlat
ss
dec
or
movl
shrl
stos
stos
pop
daa
mov
dec
mov
sti
mov
rcll
hlt
pusha
inc
dec
pop
pop
test
movsl
pusha
lods
adc
leave
pusha
orb
mov
stc
js
jle
sbb
jnp
cbtw
pop
je
push
dec
jmp
sti
int3
jne
fnstenv
lods
dec
das
test
jne
jecxz
imul
iret
and
sub
jb
lods
loop
push
mov
sub
std
pop
es
add
or
jo
mov
cmc
jnp
add
add
call
push
push
sbb
aad
sbb
pop
scas
cmpsl
rclb
dec
adc
pop
in
loopne
dec
cwtl
mov
rcrl
dec
mov
in
pop
mov
sub
int3
ljmp
fs
or
imul
cmpsl
pushf
shr
xor
jne
push
lock
lret
lret
add
shrb
pop
leave
sbb
lahf
push
jge
sti
mov
mov
outsl
mov
pop
xor
arpl
push
pop
daa
ds
inc
imul
movsl
pop
adc
fldenv
jae
pop
push
push
or
lds
sbb
push
jle
xor
jp
fwait
jae
inc
lahf
outsb
loop
push
fsubl
dec
push
mov
cmp
mov
mov
hlt
aad
add
dec
inc
sbb
add
or
inc
fsubrs
repz
sub
js
clc
jns
jp
push
iret
mov
mov
shrb
add
popa
jne
jo
sub
jo
adc
pop
sahf
test
push
jbe
std
adc
mov
mov
stos
xchg
stos
ljmp
inc
fsubl
stos
loope
outsl
mov
dec
lea
xchg
mov
xorb
or
push
popf
sub
imul
mov
xchg
add
fldl
adcb
adc
sub
sbbl
cwtl
andb
sti
int3
outsl
push
inc
mov
push
iret
cs
and
or
add
jmp
jno
es
adc
inc
push
pop
inc
xor
lahf
inc
lods
mov
xor
or
mov
stc
jge
out
lret
dec
inc
and
mov
xchg
std
addr16
stos
xlat
cmc
inc
int3
xchg
cmp
jns
arpl
insl
push
jl
inc
dec
bound
cwtl
and
jg
hlt
push
into
jne
mov
or
push
sub
add
add
cs
cmp
call
push
arpl
rolb
adc
mov
cld
loop
cmpsb
test
out
int3
lea
mov
jmp
adc
lea
sub
enter
xchg
jne
push
lods
sbb
xchg
jmp
pop
data16
and
pop
data16
into
pop
ljmp
cmp
shlb
xchg
inc
clc
xchg
adc
mov
fcoml
xchg
scas
inc
dec
cmp
out
pop
and
sbb
push
ret
jne
mov
xchg
int3
rolb
mov
out
push
andb
out
arpl
repnz
pop
adc
aam
movsl
adc
lock
jne
pop
dec
pop
fistl
xor
jmp
or
pop
stc
mov
mov
mov
mov
mov
mov
fisttps
fildll
scas
inc
movsl
dec
mov
fdiv
dec
or
outsl
sub
dec
sub
pop
jbe
inc
orl
pop
xor
aaa
mov
mov
lods
add
fwait
dec
mov
je
adc
jbe
xchg
jp
je
lock
js
rcrl
jno
test
jp
jp
call
inc
cld
das
mov
rorb
arpl
jle
jmp
clc
leave
jp
leave
rcl
out
dec
idiv
lods
adc
cmpsl
sbb
sbb
cmp
cmp
pop
jnp
and
sbb
adc
dec
test
inc
xchg
lods
rcrl
adc
aad
sub
lock
sub
push
dec
clc
inc
and
lret
out
sub
psubsb
xchg
push
sub
cld
shrb
data16
dec
outsl
fsubrs
fcmovne
jb
repz
jecxz
inc
xchg
jp
cmc
scas
jmp
inc
xchg
inc
mov
add
in
dec
shrl
cmpsb
pop
sub
int3
jbe
call
mov
imul
sub
shl
adc
dec
popa
std
adc
addb
inc
repnz
js
mov
mov
outsb
fmull
jbe
stos
cmp
in
adc
or
in
sbb
xor
cld
add
sub
arpl
push
fsubrp
mov
or
fstps
push
mov
sbb
pop
in
add
or
imul
pushf
popa
jo
cmpsl
ds
dec
push
push
mov
stos
in
stos
loopne
jns
mov
int3
enter
pop
dec
and
out
mov
and
pop
and
rolb
xor
and
jns
mov
insb
mov
pushf
pop
lods
jecxz
es
jl
notl
cmp
dec
popa
inc
pop
push
and
insb
das
out
or
std
add
addr16
in
mov
fadd
int
pop
pop
mov
adc
and
lcall
mov
imul
xchg
addr16
addb
jl
popf
and
out
icebp
pop
pop
rorl
dec
lret
sti
neg
xlat
cltd
mov
push
loope
mov
mov
shll
add
add
dec
inc
sbb
xor
pop
orl
dec
inc
pop
sub
std
mov
lock
cmp
test
fistpl
jle
xor
pop
es
jecxz
push
pop
cmp
popf
dec
xlat
sub
stc
les
mov
xchg
jmp
mov
mov
or
cld
inc
inc
xor
js
add
inc
adcb
push
push
jmp
xchg
sbb
clc
insb
pusha
sbb
in
dec
fdivrl
and
jns
shlb
sub
in
mov
lret
int
jnp
dec
stc
lret
popa
inc
push
insl
pop
inc
inc
sti
sbb
lahf
sub
sub
test
add
push
enter
in
dec
stc
jae
insb
mov
or
sbb
insl
dec
jnp
aad
sbb
pop
fldcw
pusha
xor
and
inc
mov
jge
add
push
jne
pusha
stos
cmp
and
in
mov
jnp
in
xor
mov
mov
jae
and
fimuls
and
daa
pop
pop
lret
lcall
out
in
add
push
dec
inc
jmp
lods
dec
insb
lret
sbb
add
cmpsl
popf
mov
cmp
push
cltd
rcr
adc
xchg
add
jg
cwtl
inc
shll
pop
cmp
xor
adc
lea
cmc
loop
push
movsl
push
das
in
loopne
int
jnp
popf
adc
icebp
nop
push
jg
fildll
push
adc
jge
orl
arpl
scas
sbb
lahf
shl
mov
push
lods
gs
sub
stos
mov
dec
push
jae
inc
shrb
ret
mov
enter
dec
roll
test
jb
pop
shlb
sbb
mov
mov
push
mov
call
jnp
lea
jae
insb
pusha
dec
adc
enter
dec
jmp
pop
adc
cmp
shrl
mov
insb
dec
clc
les
adc
jp
jae
xor
dec
mov
cld
call
rorb
cmp
stc
push
dec
jno
inc
out
loopne
sbb
push
fucomi
fistpl
jle
imul
leave
pop
dec
cmp
insb
js
dec
adc
fsubl
fiadds
ss
dec
cli
or
movb
sub
fisubrl
rclb
pop
sbb
xchg
jge
push
adc
fs
mov
ja
lock
jge
or
lock
inc
add
shll
jne
pusha
mov
aad
dec
dec
in
sub
adc
and
mov
push
or
dec
or
push
jnp
pop
lea
stos
loopne
push
sub
loopne
push
imul
int
and
sub
in
and
jge
jne
aam
rorb
adc
out
stos
or
lret
sub
inc
push
fidivrl
lcall
xchg
pop
push
icebp
gs
sub
fildll
dec
jb
pop
cmp
outsb
sub
mov
xchg
pop
xchg
lret
int
shlb
sahf
shr
add
dec
popf
das
xor
or
cmp
adc
lods
mov
std
and
mov
or
push
or
xchg
push
adc
jle
in
cwtl
adc
repz
and
push
jbe
fstpt
mov
pop
stos
cmp
fwait
or
pop
sub
sahf
daa
sub
sbb
mov
add
lds
and
or
add
pop
mov
xor
aas
notb
subb
fs
xchg
std
and
shrl
add
scas
add
in
lret
andl
mov
mov
dec
push
and
and
ret
mov
sub
int
pop
pushf
sbb
push
std
lods
pop
out
scas
inc
push
xor
aad
mov
arpl
lds
dec
shlb
adc
cmc
cmc
cltd
mov
popa
int
sbb
cmp
jno
adc
cmp
arpl
push
add
mov
jle
lcall
pop
add
popa
fidivl
or
lods
imul
pop
cmovs
cmpb
or
lret
scas
dec
mov
outsb
in
and
rcr
mov
sbb
sub
pop
mov
scas
pop
jns
pop
cmc
sbb
add
add
xchg
jmp
pop
xor
fcmovne
pop
les
cwtl
dec
in
dec
cltd
ret
outsb
and
or
jo
sub
mov
jnp
sbb
aas
adc
or
out
cltd
mov
xor
loopne
out
test
int
mov
dec
mov
imul
lret
or
and
adc
dec
lods
movsl
rclb
pop
push
daa
mov
test
and
int3
adc
push
icebp
ja
xchg
mov
adc
lods
pop
ja
ror
mov
pop
or
imul
pushf
data16
aad
aas
jge
dec
loopne
pushf
push
popf
mov
jecxz
lods
cmpsb
in
dec
inc
jnp
in
test
fstpl
inc
fidivs
adc
fnstenv
cmp
inc
mov
mov
lods
sbb
mov
push
ja
js
pushf
push
mov
imull
sub
in
and
fstpt
lea
fistl
imul
das
inc
mov
sbb
and
das
sub
pop
push
sub
je
push
sbb
aam
push
lods
nop
cmp
jl
and
lods
xchg
movsl
lret
sbb
loop
jo
pop
adc
push
pop
add
sub
jg
lea
adc
lods
imul
and
outsl
jo
mov
les
sbb
and
sarb
into
loopne
divl
xor
push
pop
out
add
nop
outsl
adc
loop
movsb
es
jp
sbb
push
lcall
rcrl
dec
mov
pop
mov
sub
hlt
out
cmp
lock
loope
shrl
push
dec
ja
and
int3
mov
add
data16
loope
pop
jb
faddl
add
add
or
mov
sub
subb
xor
subl
push
mov
mov
push
subb
ficomps
adc
int
cmpsl
stos
pop
fs
add
jmp
jl
lret
inc
xchg
cltd
leave
push
pop
push
test
cmpsl
loopne
ljmp
add
lret
jge
fs
arpl
fidivrl
jmp
rorb
and
push
mov
and
mov
mov
cmpsb
mov
cmp
and
test
xor
sbb
pop
push
ja
jns
cmp
std
test
in
push
pop
sbb
pop
jns
jne
es
adc
adc
mov
xchg
insl
adcl
or
sub
mov
xor
sub
pop
cwtl
aas
jnp
xchg
xor
mov
in
pop
push
add
leave
xor
inc
mov
pop
call
inc
add
mov
fnstenv
test
mov
inc
ljmp
push
arpl
lret
or
push
subb
xchg
dec
popf
loope
dec
data16
jecxz
inc
mov
enter
sub
and
imul
enter
imul
ds
pop
addr16
add
fistpll
or
in
mov
mov
lahf
pusha
cmpsl
lds
bound
popf
cmp
nop
xor
push
stc
and
xchg
das
notb
inc
or
xor
push
jae
pusha
push
into
add
sub
ret
ret
fsubrs
inc
sub
dec
in
pop
inc
aam
pop
add
mov
fwait
subl
enter
and
out
icebp
xor
std
enter
fadds
add
push
mov
push
es
cmovnp
jmp
adc
xchg
jbe
xor
mov
add
add
sub
xchg
inc
lds
xchg
ficoml
or
sbb
cmpsb
inc
out
popa
or
jmp
xor
jbe
or
or
fwait
dec
pop
xlat
fwait
mov
mov
fld
inc
push
jnp
mov
cmpsl
sbb
push
or
std
aad
rorb
add
dec
inc
dec
mov
lret
mov
enter
xchg
sahf
hlt
sub
lret
add
and
pushf
or
sub
inc
dec
outsl
add
mov
popf
add
push
loop
daa
lea
testl
add
insl
dec
int
push
add
mov
stos
pop
fisttpll
xor
test
push
mov
fisubl
mov
ret
cltd
test
jno
pop
mov
dec
adc
sub
sbb
mov
je
pop
sub
sbb
sub
iret
push
cmp
insl
in
addr16
mov
test
xor
lcall
jno
or
xor
jmp
or
stos
push
push
stos
adc
insb
xor
cmp
sbb
dec
and
pop
inc
pop
ss
mov
loopne
out
cmp
jns
sbb
int3
lock
fs
sbb
add
pop
out
pushw
movsl
sub
test
outsb
lods
out
jno
sub
push
cmc
push
mov
cmp
pop
subl
dec
scas
pop
dec
cmpsb
push
jae
sbb
pusha
dec
xchg
push
cmpsl
jg
call
adc
out
pusha
push
rcr
inc
mov
mov
cld
dec
clc
pop
cltd
xchg
lcall
insl
inc
add
arpl
jl
pop
sub
xor
jne
inc
mov
mov
outsb
aas
notb
cmp
xor
sti
inc
popf
scas
inc
jp
add
add
imul
lea
sbb
loopne
ljmp
aam
push
and
mov
pop
adc
ss
sub
push
pushf
ja
cmp
adcl
sbbb
shll
lods
jp
pop
rcll
into
and
inc
sub
cmp
lret
loopne
jae
inc
mov
je
or
out
sub
lds
mov
out
add
leave
outsb
mov
inc
push
loopne
add
jb
push
push
adc
jnp
lds
and
sub
lds
dec
xorb
loopne
jl
jnp
sbb
push
xor
push
stos
aaa
push
in
or
lret
fadds
mov
jl
fcoml
adc
icebp
mov
adc
fbld
sti
mov
xchg
sub
ss
push
lret
in
in
stos
fsts
pop
hlt
nop
jae
cmp
loope
js
mov
ja
js
adc
std
mov
mov
dec
test
dec
std
xchg
es
mov
cmp
xor
and
ret
adc
shrl
push
push
insl
inc
bound
or
mov
push
cwtl
stc
cmp
adc
mov
dec
js
icebp
inc
xchg
xor
pusha
ds
aam
cmpsb
les
cmp
les
mov
pop
leave
pop
cli
in
pmullw
fldl
sbb
push
scas
jb
cmp
or
push
lret
fidivl
inc
fst
js
cwtl
fldcw
popf
rcrl
rorl
mov
inc
enter
adc
inc
fimull
movsb
in
in
lock
or
xor
and
loope
mov
pop
or
inc
in
jmp
shll
add
lcall
aas
call
jecxz
inc
and
xor
out
mov
mov
adc
jge
pop
js
scas
xchg
jmp
adc
mov
fcmove
jecxz
jp
or
nop
jle
jae
mov
leave
js
sbb
cmpsl
mov
std
or
gs
in
or
ret
push
dec
pop
js
fbstp
cmp
outsb
movsb
cmpsl
push
pop
dec
sbb
xchg
mov
and
sbb
fwait
mov
jae
mov
sub
les
test
sub
je
and
rorb
xchg
rcrl
pushf
dec
testl
out
and
push
push
sub
xchg
outsb
push
repz
or
fucom
arpl
ficoml
scas
cmp
dec
push
push
mov
mov
mov
push
nop
testl
add
xchg
repnz
inc
mov
xor
lret
and
inc
out
ljmp
mov
adc
aad
sbbb
push
sbb
xor
add
shll
into
mov
add
pusha
repz
jbe
aas
fldl
xchg
aaa
pushf
insl
insb
in
les
inc
add
call
sbb
lods
jle
or
adcb
fisubs
push
mov
inc
fistl
push
lret
mulb
test
fstp
or
ss
adc
push
ds
enter
fistpll
lret
bswap
rolb
pop
jnp
pop
rolb
adc
jo
pop
dec
xor
jbe
std
xlat
outsl
cmp
jmp
ret
and
cmpsl
dec
pop
lahf
popa
fcomp
jle
cmpb
ja
hlt
mull
stos
cmp
js
and
mov
dec
icebp
callw
imul
jg
addl
out
inc
xchg
add
daa
and
lahf
cmpb
scas
ja
lahf
scas
push
xchg
mov
pop
or
or
pusha
sub
rolb
cs
aas
sbb
jl
rcrl
std
sub
mov
cmp
test
push
sbbb
xchg
and
in
dec
dec
add
pop
push
imul
pop
mov
sub
push
and
mov
lock
arpl
jns
adc
jge
icebp
dec
ret
int
jb
lods
lock
hlt
jb
fbld
insl
cmpsl
insl
js
or
mov
push
cmp
jle
daa
and
push
cld
push
sbb
xchg
dec
and
data16
stos
jnp
lods
adc
out
dec
inc
stos
call
pop
lahf
sub
aas
cmp
mov
iret
push
loope
push
pop
push
enter
lea
push
mov
jl
mov
add
jg
jg
mov
mov
arpl
lods
xor
xor
scas
rolb
int
insb
pop
aad
jbe
mov
xor
clc
adc
fldcw
dec
mov
cltd
adc
sub
sbb
sbb
ror
imul
dec
testb
inc
das
cmc
arpl
mov
xor
pop
xchg
fmull
jns
fildl
stc
xor
out
inc
ljmp
pop
push
xchg
loope
ret
inc
add
and
imul
and
sbb
add
cmp
stos
lret
cmp
stos
jmp
loopne
movsl
scas
xchg
stos
mov
rcrb
scas
mov
stos
cmp
shlb
push
mov
and
jbe
imul
movsl
or
movsl
sub
movsl
lret
xor
add
jmp
loopne
movsl
mov
rclb
xor
js
insb
aad
int
jo
insl
push
adc
push
xor
push
sarb
push
lock
push
nop
jge
push
mov
lods
push
push
or
jmp
data16
insl
fdiv
jmp
cmpsb
adc
lea
mov
insl
cmpsb
rorb
dec
cmpsb
lock
in
cwtl
jne
sub
cwtl
adc
lea
push
push
rorl
aad
int
jo
insl
mov
pop
lods
pop
adc
pop
xor
insl
pop
sarb
pop
lock
sub
sub
sub
cmp
sub
fisttps
aad
int
jo
insl
push
adc
pop
xor
pop
sarb
pop
lock
sub
sub
sub
cmp
sub
fisttps
aad
int
jo
insl
dec
cmc
mov
or
divb
not
enter
div
fucomp
enter
notb
mov
lods
enter
push
push
gs
adc
inc
int
jo
insl
nop
cmc
ret
lods
mov
movsl
or
mov
movsl
sub
mov
movsl
int
fcomip
outsl
cmp
inc
daa
clc
pop
je
inc
not
mov
outsb
pop
jle
mov
mov
jle
adc
push
mov
sbb
cs
std
mov
mov
fnstsw
call
mov
and
jp
sti
mov
jge
jnp
movsb
jle
outsl
not
popf
sub
and
mov
lock
arpl
lods
pop
pop
or
push
sub
cmp
dec
sbb
add
xchg
arpl
inc
in
lods
pop
xor
cld
jge
sub
jle
mov
hlt
fucomi
incb
mov
adc
aas
lea
orl
xor
das
pop
pop
jo
sbb
lret
sti
push
inc
outsb
pop
xlat
and
cmp
sti
inc
outsl
cmpsb
les
mov
pop
outsl
hlt
fwait
enter
push
dec
addr16
mov
leave
xorb
cld
xchg
out
push
pop
xor
es
push
std
push
lods
dec
sub
jae
arpl
fs
sub
int
cmp
push
jnp
lock
mov
fcmovne
in
xor
je
ja
insb
adc
out
std
insl
sub
fdivrl
adc
push
outsl
pop
xlat
cmp
sub
inc
jg
lret
inc
imul
pop
jnp
xchg
cmpl
pusha
sub
shrb
sub
sar
lods
outsb
pop
push
mov
push
mov
and
je
insl
xchg
pop
adc
jne
sbb
inc
cmpsb
mov
test
stos
sbb
cli
mul
lcall
jnp
mov
xchg
lds
inc
xor
sbb
jne
idiv
pop
vpperm
dec
gs
cwtl
inc
dec
in
push
xchg
out
inc
add
sbb
sbbb
test
pusha
imul
sbb
sarl
push
idivb
jno
insb
jbe
ret
test
cltd
dec
das
or
in
std
pop
mov
js
pop
nop
jl
sbb
sarb
int
adc
inc
sub
shlb
or
loope
out
sahf
bound
pop
popa
mov
js
and
repnz
ljmp
les
push
pusha
jg
fldt
xlat
outsb
mov
int
dec
sbb
daa
cmc
int3
in
cwtl
add
xor
lret
jns
lds
lods
mov
imul
add
add
mov
mov
into
lea
aaa
mov
jbe
and
mov
or
int
mov
xlat
inc
xchg
inc
negl
mov
data16
mov
fs
sbb
mov
xchg
and
imul
jl
inc
out
repnz
pop
bnd
push
hlt
pushf
cmc
and
insb
jecxz
xor
mov
pop
in
dec
mov
adc
mov
int3
add
jp
stos
mov
rol
push
cmpsl
mov
push
int
pop
dec
nop
pusha
push
push
rclb
dec
loopne
or
rorl
icebp
mov
mov
data16
mov
cmp
adc
jo
or
pusha
sbb
push
mov
push
inc
mov
mov
fldt
dec
push
mov
fistpll
frstor
mov
sti
sbb
out
mov
mov
xabort
xchg
jbe
fildl
pop
out
xor
jne
pusha
fisubrs
cs
orb
mov
dec
and
lea
adc
scas
add
lods
aad
packssdw
inc
xchg
repz
in
xor
adc
xor
lea
mov
fcoms
repz
inc
divl
scas
xchg
adc
adcb
fdivrs
fmul
sub
sub
sbb
outsb
popa
data16
inc
mov
adc
enter
test
pop
pusha
jp
pop
scas
push
cmp
lret
stos
inc
je
pop
out
orl
push
jg
cmc
bound
cmp
pop
aad
mov
daa
nop
mov
cmc
inc
addr16
push
aad
je
inc
ljmp
roll
lret
xlat
loopne
cmpsl
push
cmpsl
test
dec
jge
mov
add
outsb
ds
and
lret
movsb
sbb
mov
daa
mov
mov
in
mov
pop
imul
hlt
loop
hlt
inc
ljmp
jne
xchg
mov
xor
fmuls
in
sbb
bound
frstor
hlt
popa
pop
adc
xchg
cmp
pop
xchg
enter
out
dec
je
jo
arpl
pop
in
pop
es
xchg
movsb
test
mov
push
jle
arpl
xchg
xchg
and
clc
mov
je
test
aaa
sub
sarl
int
cwtl
fidivrs
or
mov
adc
add
and
jmp
or
dec
push
mov
pop
add
xor
add
mov
loopne
bound
setg
xchg
dec
dec
bound
xchg
xor
inc
inc
push
pmuludq
into
sbb
mov
divl
sub
adc
shrd
out
push
fdivs
stc
or
popf
dec
lock
mov
cmp
pop
and
jge
out
int3
add
stos
test
call
ljmp
cld
stos
sahf
cmp
sbb
cmp
sbb
pop
popf
shrl
hlt
pop
mov
mov
ret
pushaw
les
pop
jg
or
iret
add
mov
or
lret
adc
mov
sbbl
sub
fisubl
clc
daa
lea
pop
popf
sti
or
pop
stos
mov
push
cmc
and
lret
test
sub
inc
bound
mul
ret
xchg
dec
push
aad
je
inc
jp
add
adcb
push
mov
out
pushf
jbe
ret
lcall
add
in
jl
jb
mul
ja
lret
add
rorl
inc
cmpsb
repz
jecxz
sbb
dec
cmp
aam
ja
inc
out
sti
stc
jbe
ret
mov
into
xor
aaa
decb
dec
sbbb
je
inc
lret
mov
mov
sbbl
push
mov
rep
mov
mov
sub
dec
inc
adc
lahf
popf
sarl
hlt
sbb
pop
and
mov
xchg
rorb
add
add
and
imul
out
sbb
sub
cltd
cmp
divl
fldl
push
incl
ljmp
mov
push
dec
mov
mov
scas
pop
dec
mov
or
jo
mov
hlt
mov
lret
jp
pop
shr
mov
enter
mov
je
or
data16
mov
push
ss
cmp
data16
xchg
fcoms
mov
stc
push
xchg
cmp
sbb
jnp
push
ja
dec
xchg
aad
adcl
dec
stos
dec
cmc
ss
movsb
or
cmp
cmpsl
jge
dec
popa
sbb
notb
jmp
mov
das
add
out
sub
push
xchg
or
jo
mov
fisttpll
push
inc
arpl
xchg
mov
stc
push
inc
je
cs
inc
pop
out
stos
xchg
cmpsb
cli
inc
sbb
lret
out
push
fistpll
test
shlb
bound
in
sbb
xchg
je
aaa
test
shlb
xchg
lds
ljmp
xor
je
inc
mov
fdivl
cmc
mov
sbb
adc
mov
test
sbb
outsl
ror
mov
icebp
stos
fcomps
jmp
push
jp
pop
ret
mull
xchg
daa
addb
push
movsb
movsb
push
adc
pop
jg
scas
dec
cmpsl
rcl
leave
xchg
jns
jae
out
mov
gs
lcall
adc
cmp
sbb
scas
cmp
xchg
out
roll
inc
sti
lds
cs
push
sarb
out
or
in
jbe
stos
pop
fmuls
xchg
mov
mov
cmp
push
cmc
lock
pop
push
add
and
lods
dec
rcl
or
js
data16
push
push
or
cwtl
sub
push
addl
stos
mov
hlt
pop
dec
inc
mov
cvtdq2ps
xor
jmp
adc
push
cmp
jp
add
push
leave
arpl
outsb
jp
xor
arpl
xchg
lds
pop
je
outsl
mov
mov
imul
stc
icebp
xchg
xchg
cmp
adc
movsb
inc
push
inc
jge
lahf
dec
adc
add
negl
fldt
sbb
dec
jnp
xor
add
adc
sbb
mov
ret
inc
push
in
adc
push
jns
jnp
push
xchg
or
in
push
mov
mov
fadd
jp
xor
das
mov
jl
push
dec
add
sti
push
cld
push
pusha
lea
mov
mov
sbb
mov
add
push
cs
adc
lahf
adc
pop
out
fsubrl
addr16
dec
mulb
imul
sbb
push
in
fbld
xchg
fistl
push
bound
cs
outsl
aaa
ror
pushf
les
aam
cmp
shl
movsl
adc
mov
fyl2xp1
push
jnp
cmpsb
mov
fidivl
sub
je
insb
push
in
orl
add
rclb
xchg
or
lds
and
and
data16
and
leave
inc
and
push
lock
xor
jbe
insl
aaa
sub
pop
sub
mov
pop
outsb
xor
inc
fistl
lods
sub
jl
lods
and
mov
sbb
stos
cmpsb
push
push
adc
movsl
fsubs
xchg
inc
addr16
sbb
les
push
nop
mov
stc
adc
js
insb
pop
sbb
cltd
jl
push
rcl
imulb
mov
sub
gs
hlt
push
or
cmpsl
fstl
pop
dec
faddl
or
lret
test
jle
pop
lret
adc
pop
inc
sbb
pop
mov
jmp
inc
push
push
sub
test
loopne
shl
das
push
lahf
jg
iret
aam
jne
in
cmpsb
jne
mov
xlat
inc
adc
clc
lret
mov
lds
lds
ret
sub
xchg
wrmsr
sbb
out
scas
xlat
add
mov
xchg
mov
inc
pop
and
push
xchg
xor
mov
xchg
jnp
mov
mov
sti
cmp
inc
adc
shlb
sub
scas
aam
push
xor
adc
les
imul
outsb
hlt
cmp
sbb
or
ljmp
push
cmpsb
xor
sub
xor
insb
arpl
pop
ds
lcall
hlt
xor
popl
pop
inc
dec
scas
jo
lret
shr
sbb
enter
cmc
cmp
sbb
popa
leave
jl
pop
ret
imul
stos
xchg
and
test
fdivs
and
cmc
push
bound
adc
inc
popf
out
jecxz
insl
sub
xor
sub
adc
test
adc
mov
outsl
jb
jae
stc
push
pop
negl
sub
adc
add
add
and
stos
mov
fisubrl
loopne
in
out
mov
sbb
fwait
pop
lods
pop
mov
mov
rcrb
lds
lahf
pusha
outsl
xchg
pop
adc
mov
shll
push
es
sahf
imul
or
mov
mov
push
ss
push
shlb
aam
bound
loopne
adc
push
cmpsl
adc
mov
cmpsb
pop
jmp
sarb
fnstcw
pop
add
stos
xchg
sub
mov
jb
sbb
pop
loopne
dec
testb
fidivrl
mov
jne
jnp
add
jl
les
icebp
dec
xchg
push
cltd
idivb
add
in
sub
mov
sbb
ljmp
mov
ja
sbb
daa
out
mov
xor
addr16
xchg
shlb
or
scas
enter
pop
cmp
fisubrs
stos
pop
xor
and
jne
mov
nop
movsl
jnp
mov
pop
arpl
jecxz
cwtl
push
add
add
aam
iret
movsb
cli
movsb
jns
xlat
and
dec
dec
fisubrs
ss
shlb
dec
inc
or
aas
out
mov
int
or
lods
mov
or
push
loope
inc
data16
lcall
sti
sbb
and
mov
cli
jo
or
loopne
pop
jle
and
addb
pop
test
dec
and
jno
mov
fildl
mov
xorb
push
xchg
mov
mov
mov
sub
daa
push
rorb
inc
pop
jb
mov
popl
mov
sbb
and
pop
inc
push
fimull
insl
insl
or
pop
imul
dec
sbb
int
imulb
popf
ret
inc
sub
out
imul
popf
test
and
fisttps
push
push
arpl
shlb
push
cmp
jb
addr16
in
ss
mov
leave
and
imul
add
or
add
add
add
add
add
add
push
push
add
cld
add
push
daa
add
sbb
add
sub
add
inc
daa
add
pusha
daa
add
js
add
xchg
daa
add
movsb
daa
add
mov
add
lret
add
daa
add
lock
add
cld
daa
add
add
add
push
sub
add
add
sub
add
add
push
sub
add
add
je
add
subb
add
sub
add
add
les
add
into
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
dec
gs
jo
jb
popa
je
add
stc
push
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jb
arpl
jae
outsl
jb
imul
imul
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
push
outsb
push
gs
js
gs
imul
gs
add
gs
imul
je
add
inc
jb
popa
je
push
jb
arpl
jae
add
insb
add
outsl
fs
gs
popa
outsb
fs
gs
add
test
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
insb
insb
outsl
arpl
aas
push
push
je
push
outsb
ja
outsb
add
push
dec
inc
dec
xor
cs
insb
add
mov
pop
imul
jb
je
add
pop
jae
jb
jo
add
pop
gs
gs
pop
push
gs
add
dec
or
je
jae
jb
popa
je
gs
add
into
push
pop
pop
jo
pop
arpl
insl
outsl
fs
xchg
pop
pop
arpl
inc
imul
imul
je
add
pop
popa
fs
jae
pop
imul
pop
pop
arpl
imul
jae
je
popa
jo
pop
je
jo
add
push
adc
jo
pop
insw
outsl
fs
ds
jae
popa
ja
insb
add
insl
fs
outsb
add
pop
jb
jae
je
je
outsl
data16
ja
xchg
add
arpl
arpl
insb
add
pop
imul
insl
add
add
add
insl
gs
arpl
add
adc
gs
je
add
add
jb
js
add
pop
outsl
jne
jo
add
pop
or
jb
imul
je
arpl
jb
add
pop
pop
addr16
popa
imul
or
outsl
outsb
je
outsl
insb
data16
add
pop
gs
je
leave
maxps
js
arpl
add
dec
push
push
inc
push
push
cs
insb
xchg
inc
lock
cmpsl
sti
repnz
nop
and
pushf
jb
inc
pop
jp
stc
mov
aas
or
nop
ret
inc
sub
fists
and
xchg
pop
or
aaa
or
dec
xor
movsl
fwait
dec
inc
addl
pop
mov
bound
pop
push
inc
push
or
leave
xor
add
add
add
mov
imul
add
add
add
add
add
addb
add
mov
imul
add
add
add
add
add
addb
add
mov
imul
add
add
add
add
add
pop
nop
add
dec
add
add
mov
pop
shll
sbb
mov
jo
dec
and
xchg
pop
in
cmp
shr
lcall
frstor
add
faddl
mov
pop
and
push
out
out
sub
jle
inc
arpl
sbb
