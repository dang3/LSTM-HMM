nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
pop
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
pop
mov
mov
pusha
call
add
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
lea
push
subl
lea
push
subl
lea
push
jmp
jmp
call
pop
mov
xor
adc
mov
sub
popl
mov
lea
mov
mov
sub
push
pop
mov
lea
mov
dec
lea
mov
sub
popl
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
add
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
lea
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
lea
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
add
jmp
ret
mov
push
call
mov
sub
cmp
jb
add
cmpb
je
add
add
mov
cmp
je
mov
sub
jne
push
pop
jge
ret
mov
or
add
mov
add
cmp
add
into
and
add
and
add
and
add
and
add
and
add
add
mulb
add
scas
and
add
and
add
and
add
add
ljmp
add
add
add
add
sbb
add
add
add
inc
and
add
add
add
add
adc
add
ss
add
and
add
and
add
and
add
and
add
add
add
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
add
pop
and
add
add
pop
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mulb
add
scas
and
add
and
add
and
add
add
ljmp
add
add
add
add
sbb
add
add
add
inc
and
add
add
add
add
adc
add
ss
add
and
add
and
add
and
add
and
add
add
add
add
and
add
add
add
add
rolb
gs
jne
jb
outsb
je
imul
jns
add
fwait
add
je
jbe
outsb
je
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
arpl
outsb
arpl
insl
gs
imul
imul
jb
je
arpl
cmp
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
insb
jae
jb
jo
inc
add
dec
add
je
jb
arpl
jae
gs
jo
add
push
gs
insl
gs
push
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
jb
jns
data16
je
je
dec
popa
outsb
fs
add
xlat
add
je
imul
bound
gs
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
outsl
jo
inc
imul
jb
popa
je
push
imul
inc
gs
gs
inc
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
insb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
imul
jb
gs
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
dec
outsl
arpl
inc
outsb
jb
insb
insb
add
add
jns
je
dec
push
imul
je
add
add
jns
je
dec
push
imul
inc
push
dec
add
xor
inc
insb
insb
push
outsb
jb
imul
jb
gs
and
inc
jb
jo
push
dec
push
je
jb
inc
gs
dec
addr16
add
jp
jb
inc
jb
add
add
jns
je
dec
push
imul
inc
push
dec
add
sbb
inc
jb
jo
push
dec
inc
insb
addr16
imul
gs
add
jo
push
dec
push
imul
je
add
add
jp
jb
inc
jb
add
xor
inc
insb
insb
push
imul
jb
gs
sub
inc
jb
jo
push
dec
push
imul
popa
insb
push
imul
outsl
arpl
inc
outsb
jb
insb
insb
add
pop
push
push
push
dec
cs
insb
insl
insl
arpl
insl
addr16
fs
insb
add
add
add
add
xor
add
dec
add
orb
add
pusha
add
sbbb
add
js
add
add
add
add
add
nop
add
addb
add
hlt
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
lock
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
xor
add
add
add
add
add
data16
adc
add
sub
add
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jnp
lods
lods
stos
add
test
push
mov
mov
mov
les
into
int3
into
rcl
in
rcl
shl
rcl
shl
int
int3
hlt
enter
mov
in
mov
mov
stos
lods
lods
lea
cltd
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
xlat
xlat
std
fcom
xlat
fdivr
aam
aam
ror
sar
int
int
aad
dec
iret
sar
mov
mov
iret
movsb
movsb
mov
dec
das
das
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
lods
sbb
mov
jnp
mov
sar
leave
lret
rcl
aad
aad
fcomp
call
fcom
call
aam
dec
into
int3
dec
int3
into
call
aam
dec
into
int
rol
mov
mov
scas
std
cmpsb
cmpsl
cmpsl
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
enter
into
call
rcl
call
call
fcom
call
aad
int
int3
dec
lret
int3
into
into
inc
sarb
pushl
cmpsb
test
mov
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
ds
das
or
sbb
xor
aaa
cmp
cmp
and
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
leave
leave
call
rcl
call
aad
call
aam
ror
sar
leave
leave
leave
inc
ret
mov
mov
ljmp
movsl
mov
cwtl
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jl
jg
jle
jo
jo
popa
popa
bound
cmp
cmp
inc
inc
inc
mov
jo
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
lret
leave
leave
dec
enter
ret
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
cwtl
fwait
fwait
cltd
in
addb
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
outsl
add
pop
or
jp
xchg
fcoms
addb
jl
jnp
outsl
outsl
outsl
out
addr16
je
je
jg
jg
js
js
gs
inc
cmp
pop
sbb
movups
or
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
incl
test
xchg
xchg
xchg
sahf
lahf
sahf
sti
mov
xchg
xchg
mov
jns
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
fwait
in
movsb
mov
incl
xchg
std
mov
jle
jb
jb
je
je
jge
jle
addl
xchg
addr16
cmp
ss
jg
jge
lcall
shrb
stos
stos
sti
lods
stos
stos
lods
lods
lods
test
test
movsb
movsb
movsb
std
lcall
incl
jge
jp
js
jns
jnp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsl
mov
call
test
xchg
mov
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
or
inc
inc
dec
insb
imul
test
leave
fwait
cltd
lcall
cltd
cltd
stc
nop
xchg
std
mov
mov
mov
mov
mov
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
scas
test
pop
adc
stos
test
lcall
test
decb
lea
popf
sahf
popf
std
mov
mov
xchg
in
xchg
nop
in
addl
jne
push
push
dec
add
or
sub
push
dec
dec
dec
outsw
outsl
jno
mov
xchg
rclb
nop
xchg
std
mov
call
popf
lahf
jmp
test
pushl
lods
cmpsb
mov
stos
xchg
std
shlb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
cltd
decl
mov
nop
nop
nop
call
xchg
xchg
pushf
pushf
pushf
mov
stos
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
bound
jne
jno
mov
jg
test
int
mov
notl
mov
lcall
cwtl
pushl
xchg
jle
mov
mov
test
mov
outsl
sub
mov
mov
mov
mov
mov
movsb
add
mov
pop
adc
mov
mov
decl
xchg
nop
call
xchg
xchg
call
cwtl
lcall
sahf
mov
movsb
std
mov
xchg
cltd
out
mov
les
xchg
lcall
lea
stc
xchg
mov
xchg
jg
fwait
jge
mov
ja
ljmp
cmp
mov
daa
pushl
pop
adc
ljmp
pop
or
mov
inc
mov
mov
stos
pushf
movsl
movsl
mov
add
pop
pop
adc
mov
enter
sahf
fwait
fwait
call
xchg
xchg
lcall
pushf
popf
jmp
pushf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
cltd
cld
popf
cltd
popf
stc
mov
xchg
xchg
cld
sahf
test
xchg
jnp
xchg
jb
xchg
insl
dec
fwait
fs
fwait
pop
sub
pushf
push
push
mov
pop
push
jmp
pop
adc
lods
pop
adc
lods
pop
adc
lods
pop
adc
mov
adc
mov
adc
mov
adc
inc
lods
cltd
mov
scas
lods
scas
movsb
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
les
lcall
pushf
popf
lcall
movsl
mov
jmp
xchg
cwtl
decl
mov
decl
xorl
cltd
js
xchg
insb
dec
call
push
sub
decl
inc
or
xchg
inc
push
call
inc
add
lahf
dec
push
ljmp
bound
pushl
sbb
imul
mov
outsl
and
mov
lods
xchg
mov
lods
scas
mov
lahf
sahf
lahf
add
add
add
add
add
pop
pop
adc
mov
ljmp
lcall
movsb
movsl
jmp
cmpsl
cmpsb
ljmp
cmpsb
cmpsb
lcall
test
decl
pop
cmp
mov
decl
inc
adc
incl
cmp
decl
cmp
call
inc
add
fwait
inc
add
sahf
dec
add
cmpsl
push
or
mov
pop
pushl
jno
mov
jne
inc
js
inc
jns
dec
jp
inc
jnp
inc
xchg
enter
sarl
lret
movsl
dec
mov
mov
add
add
add
lods
cmpsb
movsb
add
push
adc
stos
test
mov
lcall
stos
test
ljmp
lods
pushl
scas
scas
jmp
jb
xchg
incl
inc
or
xchg
add
incl
ss
mov
add
mov
add
xchg
inc
add
cltd
inc
add
sahf
dec
add
mov
pop
adc
mov
jp
inc
cmpb
movl
cmp
iret
mov
rorl
cmp
dec
stos
mov
ret
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
cmpsb
movsb
ljmp
fwait
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
test
mov
decl
inc
adc
xchg
decl
aas
or
test
add
mov
decl
inc
add
xchg
inc
add
pushf
inc
add
mov
dec
add
lods
push
add
inc
jnp
dec
mov
mov
rorl
inc
call
xchg
dec
call
xchg
dec
fistl
fsts
xchg
leave
ret
mov
fsubl
sahf
mov
add
inc
dec
adc
js
mov
lods
test
ljmp
mov
pushl
mov
mov
mov
mov
scas
mov
mov
pop
decl
dec
sbb
xchg
dec
pop
decl
inc
adc
mov
decl
ds
xchg
inc
add
pushf
inc
add
mov
dec
add
test
pop
add
dec
mov
aam
push
call
xchg
push
fstps
push
ficomps
pop
jmp
mov
pop
jmp
mov
xchg
leave
les
in
test
jne
mov
lahf
add
inc
inc
adc
je
lahf
fwait
cltd
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
addr16
call
push
and
call
dec
sbb
xchg
inc
or
xchg
inc
add
xchg
inc
add
cltd
inc
add
mov
dec
add
lods
push
add
mov
add
mov
jle
call
lcall
fisubs
jmp
cmpsb
fs
cmpsl
gs
call
stos
push
ljmp
mov
cmpsl
test
mov
sahf
mov
add
add
add
inc
inc
adc
jp
xchg
xchg
call
sahf
pushf
popf
ljmp
mov
pushl
mov
mov
mov
movsb
mov
call
xor
fwait
pop
call
push
sbb
call
inc
add
mov
dec
add
lods
push
add
mov
add
mov
add
mov
mov
jo
jecxz
jo
out
jb
jmp
mov
in
mov
out
mov
in
mov
out
mov
jmp
mov
mov
repnz
test
mov
mov
add
add
add
jg
jg
ds
js
nop
mov
cltd
fwait
cwtl
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
pop
xor
lahf
fs
lahf
addr16
sahf
xor
lcall
call
dec
add
movsl
dec
add
test
push
add
mov
add
mov
jno
fstps
js
ljmp
in
mov
cmp
mov
test
repnz
test
hlt
mov
mov
mov
imulb
popf
sahf
daa
lahf
sahf
sahf
add
add
add
bound
cmp
cmp
pop
pop
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
subl
fs
movsl
insl
inc
jmp
push
pop
call
add
movsb
dec
add
stos
push
add
lods
push
add
mov
add
mov
fs
sarb
fbld
in
mov
mov
icebp
ret
hlt
les
push
nop
push
nop
clc
lret
clc
in
rorl
clc
stos
lods
stos
mov
popf
sahf
xor
pushf
pushf
add
add
add
inc
inc
add
xor
push
inc
inc
inc
jb
pop
push
in
imul
mov
mov
mov
mov
sar
ret
mov
nop
jge
pushf
imul
js
jmp
adc
lcall
ljmp
push
add
mov
add
mov
pop
add
enter
mov
out
jns
out
ret
xchg
push
enter
enter
leave
lcall
int3
fwait
stc
into
pushf
cli
rcrb
cli
int3
cltd
push
enter
int
inc
mov
rcrb
popl
cltd
cltd
cltd
add
add
add
aaa
add
das
or
ds
jecxz
arpl
nop
nop
mov
mov
mov
mov
mov
mov
inc
inc
enter
mov
mov
sahf
outsl
dec
ljmp
jnp
jmp
dec
pop
lcall
dec
add
stos
push
add
mov
add
mov
bound
inc
fs
shrl
fists
push
int
push
shll
stc
aad
sti
xlat
cmpsl
cli
aam
cld
xlat
test
std
fldt
std
fsubrs
jmp
sarl
std
mov
mov
sahf
mov
xchg
add
cltd
cltd
add
add
add
xor
add
sub
or
bound
pop
xlat
jae
outsl
cld
mov
mov
ret
mov
inc
mov
sar
mov
push
ljmp
js
lcall
dec
add
movsl
dec
add
lods
push
add
mov
add
mov
bound
dec
push
add
fistpll
out
cmpsb
pop
push
int3
lahf
cld
xlat
lods
sti
xlat
mov
sti
fdivs
fidivs
std
fbstp
std
in
std
loope
push
fldenv
call
int
mov
mov
lahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
ss
outsb
mov
aad
jmp
aad
test
lret
lret
leave
lret
dec
lret
lret
inc
mov
ljmp
jge
ljmp
push
or
ljmp
pop
add
mov
arpl
call
imul
fbstp
jmp
mov
sti
scas
loopne
std
fidivrs
cld
loop
cld
jecxz
cld
in
std
in
jmp
mov
push
loopne
call
into
leave
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
out
jmp
test
jecxz
leave
fsubp
loopne
fcmovu
fcomp
fsqrt
aad
xlat
std
int3
into
sar
mov
test
lods
jl
ljmp
dec
add
cmpsl
dec
add
mov
add
mov
popa
add
lret
call
insb
add
fnsave
jmp
js
out
xchg
xor
test
mov
jecxz
out
std
call
std
jmp
jmp
ljmp
in
leave
cli
jecxz
jmp
mov
xlat
aam
mov
mov
xchg
adc
add
add
std
add
incl
std
incl
repz
testl
jmp
in
sub
out
in
dec
ljmp
xchg
out
call
aad
fcmovu
jmp
mov
jo
test
cmp
movsb
push
adc
ljmp
push
add
mov
fs
int3
push
add
fbstp
jmp
mov
mov
std
call
into
std
in
into
jmp
jmp
in
int
in
iret
out
sar
push
sar
icebp
sar
sti
jmp
mov
inc
cmpsl
test
xchg
xchg
xchg
sbb
lcall
incb
std
incb
div
testl
lock
in
out
lock
out
out
lock
out
out
pop
loopne
loopne
lods
lea
lahf
pop
jmp
dec
add
stos
push
add
mov
add
shll
arpl
call
imul
fldcw
in
add
in
xchg
push
scas
pop
cli
fnstenv
cld
in
iret
jmp
out
sar
std
lock
out
aad
std
lock
std
lock
repz
push
fcos
push
fcos
cld
in
sar
repz
jmp
dec
leave
leave
repz
xchg
xchg
and
xchg
xchg
add
std
incb
idiv
cld
add
sti
sti
add
cmc
cmc
or
rcl
xor
mov
lcall
jmp
push
add
mov
bound
dec
addr16
shrl
fsubrl
call
mov
push
mov
ret
in
fdivr
push
lock
lock
push
fcos
std
hlt
push
push
std
hlt
loopne
std
repz
repz
out
sar
hlt
loop
jmp
call
iret
sar
stos
lods
lods
lods
xchg
xchg
xchg
outsl
outsl
outsl
add
add
mov
add
mov
jnp
fwait
push
and
sahf
inc
add
cmpsb
dec
add
mov
add
mov
popa
add
into
push
add
fidivs
jmp
xchg
sub
sti
leave
cld
ljmp
push
icebp
icebp
push
fdivr
std
out
aad
std
out
aam
cli
jmp
cli
jmp
stc
jmp
stc
call
ret
out
fdivrl
fcomp
sti
mov
mov
cltd
lcall
lcall
add
rcl
add
mov
mov
popf
pop
sub
sahf
dec
add
test
add
mov
add
mov
bound
call
addr16
fsubrs
jmp
jno
ljmp
sti
into
cwtl
cli
in
cld
out
cli
out
stc
loop
push
loopne
push
fidivrs
push
fnstsw
jmp
fstpt
std
call
ffree
imul
loop
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
leave
into
add
mov
xchg
loopne
gs
push
add
mov
add
mov
arpl
int
push
call
jo
fidivl
jmp
sbbb
out
dec
ljmp
call
iret
scas
std
loop
scas
cld
fmulp
scas
cli
mov
lock
mov
in
xlat
lret
fxch
shl
fst
call
ljmp
call
lret
lods
stos
stos
adc
cmpsb
cmpsb
test
mov
rol
mov
mov
lahf
aam
jb
popf
push
sbb
test
push
scas
push
das
std
mov
addl
lret
test
mov
out
sarb
mov
aam
mov
lret
int
mov
ror
mov
sarb
jb
gs
in
call
ljmp
cmc
div
and
icebp
lock
fcmovnu
or
mov
int
mov
add
mov
mov
roll
scas
les
test
test
cwtl
and
mov
xchg
sarb
mov
mov
mov
mov
mov
lret
iret
iret
int3
addr16
rcll
iret
rorl
aad
inc
aam
xor
fcomp
fstpl
fcmovnu
ficoms
in
loopne
out
call
out
icebp
add
clc
sti
add
std
incl
std
incl
std
add
mov
shrl
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
ret
lds
enter
int
shll
rcl
aam
rcl
aam
rcl
aad
aam
xlat
push
rcl
fiaddl
add
fneni(8087
add
loop
add
out
add
lret
fadds
std
std
incb
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
leave
push
mov
int
lret
into
add
rcr
add
add
xlat
add
aad
add
fsub
add
aad
add
add
add
in
add
repnz
add
std
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
add
lods
in
sbb
out
fcos
or
sub
sub
jle
inc
fst
lahf
inc
fcom
mulb
repnz
mulb
dec
sbbb
inc
jge
jbe
mov
xor
out
mov
inc
sbb
fdivl
cmp
cli
xchg
enter
ret
scas
sbb
add
insl
and
mov
loopne
or
fistpl
or
nop
daa
sub
pop
xchg
xor
aam
dec
push
cs
orl
mov
adc
push
and
push
ja
stc
test
dec
in
leave
adcb
les
sbb
ss
pop
mov
dec
outsl
mov
inc
pushf
ret
hlt
mov
cli
xchg
inc
adc
jge
push
add
xchg
mov
and
cmp
pop
jae
nop
pop
pop
testb
jge
fldl
inc
ss
fwait
xor
pop
into
mov
push
xor
push
and
decb
jo
cmpsl
mov
ret
sti
cmpsb
nop
daa
aam
in
test
scas
inc
loope
or
gs
shl
in
or
dec
fistpll
cmp
lcall
es
aas
push
add
hlt
loopne
rclb
jl
xor
sbb
cmp
cmp
xlat
dec
sbb
sub
jne
jl
inc
fsubl
mov
push
out
cmp
jne
mov
pop
lods
inc
call
lret
cmp
jg
jae
into
movsb
adc
push
in
mulb
mov
dec
mov
xchg
sub
mov
out
leave
dec
adc
decb
inc
xchg
jge
sbb
mov
out
loop
mov
or
push
push
xchg
sub
stos
mov
add
fbstp
and
and
xchg
inc
xchg
sub
outsl
jmp
or
mov
iret
inc
sbb
fdivs
out
xchg
xchg
inc
xlat
ret
test
and
xor
xchg
inc
jl
jae
dec
in
xchg
lcall
out
sub
lret
bound
ret
ja
stc
mov
cmpb
pop
sahf
or
mov
insb
sub
sub
loopne
dec
adc
mov
data16
test
fimull
mov
sti
sub
rcrb
mov
jle
fisubrs
shlb
add
push
in
repnz
or
jne
cmp
enter
mov
fidivs
or
outsb
cld
xchg
mov
rcrl
repnz
mov
inc
add
ret
push
out
xchg
push
dec
loopne
mov
or
test
xchg
sub
test
pop
mov
nop
dec
mov
jcxz
rcrl
out
xchg
repz
pop
or
xchg
js
sub
fistpl
dec
loopne
in
cmp
sbb
ds
out
outsl
mov
jne
ret
cmp
in
sub
dec
rcrl
mov
imul
std
xchg
and
in
test
inc
sbb
bound
shlb
fiadds
cmp
imul
cld
pop
mov
sbb
mov
and
test
mov
cli
sub
rcrb
dec
jge
fisubrs
iret
gs
add
push
in
icebp
and
or
je
cmp
mov
dec
ljmp
addr16
pop
out
test
mov
mov
inc
add
ret
mov
mov
and
xor
mov
aas
push
mov
xchg
loopne
add
xor
aad
daa
pop
mov
call
fsts
or
pop
push
sbb
push
cmp
fmuls
xchg
sub
push
xorb
sbb
movsb
cmpsl
rolb
fnsave
gs
push
dec
mov
ljmp
addr16
scas
out
and
cld
cmp
mov
jp
push
xchg
adc
lret
test
les
icebp
xor
sbb
or
jnp
push
mov
gs
or
fnsave
icebp
mov
test
jno
adc
iret
aad
std
lds
repnz
dec
jecxz
sbb
xchg
mov
int
mov
mov
popa
mov
xchg
mov
pop
in
test
lds
int
pop
mov
sti
fistpl
dec
loope
push
cli
xchg
andl
or
push
shlb
dec
xor
jp
fs
lret
aaa
push
cwtl
das
xchg
in
jns
scas
inc
shll
testb
sahf
fs
into
stos
scas
inc
ficoml
mov
fistpll
pop
mov
insb
add
cwtl
fs
int3
cltd
adc
lret
push
mov
adcl
xchg
push
roll
and
lret
push
dec
in
push
insl
xchg
dec
loope
push
mov
push
mov
ss
push
push
out
pop
pop
cmc
mov
push
jmp
push
xor
xchg
fisttpl
xchg
shrb
push
clc
popl
cltd
shlb
xchg
stos
inc
push
sbb
push
mov
lret
stc
jp
das
mov
xchg
xchg
mov
or
movsb
cmp
sub
push
mov
jl
imul
popf
clc
lret
and
leave
push
jmp
mov
js
pop
scas
inc
xchg
cmpsb
test
jle
scas
dec
push
jmp
test
jp
fnsave
test
je
lods
test
data16
fdivl
mov
jns
xor
shlb
cmp
imul
fidivl
outsl
mov
sahf
aas
out
outsb
test
cltd
out
pop
cmc
xchg
aas
aam
outsb
mov
jecxz
pop
pop
icebp
mov
repnz
or
sarl
adc
mov
mov
fidivl
aaa
jb
xchg
sbb
in
pop
cmpsb
cmp
addr16
xor
int3
shrb
cmp
xchg
lock
adc
aam
dec
loope
dec
or
pop
test
mov
add
adc
inc
cwtl
push
jmp
xlat
fnsave
add
inc
cltd
push
out
aad
jno
pop
stc
mov
into
gs
cmpsb
cmp
sarl
stos
data16
sub
mov
clc
dec
test
jp
push
out
inc
xchg
xchg
mov
ret
repz
cmp
push
mov
mov
adc
inc
push
stos
inc
inc
lea
mov
ffree
pop
or
pop
sqrtps
cmp
enter
add
ret
std
mov
mov
sbb
push
cmp
in
movsb
pop
js
ret
pop
stc
stos
lret
and
jno,pt
andl
sbb
ficoml
arpl
inc
std
popa
clc
sub
cwtl
dec
dec
loopne
shrb
cmc
popf
dec
in
push
dec
loope
out
out
adc
test
fwait
cmp
in
out
mov
mov
fxch
bound
push
add
pop
stos
cmp
outsb
lods
add
outsl
cmp
jge
push
pop
lcall
mov
jecxz
sbbb
mov
lea
push
inc
fadds
mov
add
sub
and
jle
or
jp
shrb
cmp
aam
pop
and
lds
scas
xchg
ljmp
in
dec
pop
bnd
sub
push
leave
pusha
icebp
mov
mov
sbb
or
mov
loopne
roll
nop
fisubs
je
push
lcall
mov
xorl
leave
or
push
in
daa
cmp
pop
negl
sub
xorb
imul
int3
sub
inc
adc
ss
fistpll
push
adc
fcomip
insl
loopne
daa
push
xchg
ret
push
mov
mov
or
stos
daa
cs
pop
int3
inc
pop
jp
pop
mov
adc
pop
imul
push
jmp
add
fnstenv
popa
aam
xchg
and
loopne
mov
lods
inc
stos
push
lods
inc
dec
and
xchg
adc
lods
inc
mov
pusha
testl
jl,pn
pop
adc
mov
mov
adc
cmp
outsb
aas
lock
pop
mov
xchg
jnp
fucom
js
filds
popf
or
dec
out
sub
insl
xor
outsl
push
std
mov
test
xchg
frndint
add
dec
bound
mov
xor
aad
out
arpl
movl
sub
xchg
add
inc
xchg
mov
jnp
mov
and
add
lods
push
ret
lods
xchg
push
rcrb
out
imulb
mov
cmpsb
dec
lock
mov
leave
push
push
mov
sbb
loop
xchg
mov
mov
fs
push
sub
mov
sub
mov
and
mov
rolb
mov
rol
int
shrb
mov
pop
push
in
mov
btr
ljmp
loop
repnz
sub
cmpsb
in
xor
sbb
imull
cmp
push
lret
push
ljmpw
pusha
pop
jmp
pop
in
or
in
repz
mov
fwait
xor
out
loop
std
mov
xchg
out
mov
push
pop
ud1
cmpsl
popf
lods
sahf
into
or
mov
aam
mov
inc
add
jns
mov
cmp
rorl
jp
mov
repnz
pop
or
sub
repz
mov
jp
sub
pop
pop
adc
rcrl
mov
fucomp
fwait
std
add
ds
add
mov
imul
aas
arpl
out
and
cli
mov
pop
out
enter
and
stos
xchg
cmc
jnp
lahf
jmp
rorb
lock
sub
jae
mov
sbb
pop
repz
add
xor
shlb
stc
mov
pusha
call
mov
add
test
test
ljmp
lds
xchg
bound
popf
and
jb
shrl
or
mov
scas
sub
sub
pop
test
fcoml
add
out
add
xchg
leave
int
jae
jno
pushl
pop
ds
and
cmp
cmp
fimull
outsl
sub
lds
and
add
mov
imul
dec
mov
jle
adc
clc
or
mov
mov
adc
out
fidivs
adc
sti
jno
je
xchg
fs
es
jnp
nop
and
cmp
lcall
pop
sbb
inc
mov
fistpl
cmc
bound
rclb
pop
rolb
rorb
loopne
mov
ds
sub
aas
mov
xchg
dec
popf
adc
fs
mov
ret
mov
jne
adc
mov
movsb
mov
fnstsw
lds
insl
add
jmp
lcall
adc
std
push
daa
mov
dec
jne
mov
andb
stos
and
pop
icebp
pop
inc
sub
outsb
and
rorb
xchg
sub
push
mov
cmp
inc
fsubrs
xlat
shlb
dec
pop
idivb
out
test
mov
jne
mov
cwtl
mov
dec
cli
pop
repz
or
sti
adc
dec
sbb
cltd
xor
xchg
sub
mov
dec
gs
aad
in
mov
addr16
mov
pop
adc
lods
lahf
xor
aad
daa
mov
testl
insl
add
sub
jb
mov
fwait
jno
pop
add
xor
dec
pop
lods
inc
fldt
jge
std
mov
fwait
aam
stc
nop
dec
std
adc
mov
xor
pop
push
call
mov
outsl
push
rcr
ljmp
jno
js
stos
inc
aas
xchg
es
push
leave
pusha
xchg
int
push
ret
mov
repnz
test
sti
and
repnz
ss
cmp
stos
pop
pusha
mull
jle
hlt
jne
jl
popf
xor
xchg
xchg
sub
mov
fnstenv
aaa
fbstp
xor
addl
ret
mov
pusha
mov
aaa
into
sbb
ficomps
push
in
shll
cmpsb
ljmp
mov
xlat
mov
push
sbb
mov
je
sbb
repz
out
rcrl
pop
ljmp
xchg
mov
iret
cmp
push
in
push
aam
call
cmpsl
test
push
mov
xchg
sub
stos
popf
xor
push
mov
xor
push
jns
es
inc
mov
out
sub
lret
bound
dec
repz
jmp
test
pop
pop
sahf
and
aad
and
in
aaa
inc
fisubrl
jnp
insb
mov
movl
stos
inc
inc
xlat
popf
xor
outsl
leave
pusha
in
mov
xchg
lahf
jae
jo
mov
testl
in
sub
pop
xor
cmp
adc
jno
xor
jp
sbbl
sahf
pop
repz
mov
adc
fimuls
je
sbb
xchg
filds
pop
mov
sbb
jno
cmp
xor
push
in
jne
adc
fmuls
shll
iret
pop
icebp
dec
adc
dec
aaa
push
xor
iret
data16
test
xchg
in
test
dec
mov
mov
push
std
sub
sub
shlb
inc
inc
fiadds
mov
in
int3
sbb
or
mov
xchg
sub
dec
loope
jl
inc
mov
push
fsubrs
jmp
out
movsb
cmp
mov
dec
and
mov
add
and
xchg
nop
in
sti
or
sbbb
mov
fisttpl
andb
iret
or
pop
xchg
pop
fnsave
sahf
xor
lahf
mov
fstpt
lret
cmc
sub
pop
dec
stc
nop
outsl
xor
xor
pop
scas
jg
push
mov
sbb
adc
movsb
cmp
cmp
ret
sbb
ja
push
scas
inc
ds
xchg
cmp
fs
sbb
mov
leave
push
lods
push
mov
inc
fldl
rsqrtps
sti
or
xchg
sub
loopne
mov
mov
xlat
shrb
pop
scas
inc
inc
sub
int
pushf
test
out
xchg
std
adc
pop
push
sbb
and
enter
xchg
dec
loope
dec
pop
addb
jl
pop
xchg
je
xchg
sub
popf
and
pop
fstpt
jmp
add
outsb
pop
add
cmpsb
out
out
lcall
sbb
in
outsl
xlat
outsb
push
imul
jl
mov
adc
sub
inc
fsubrl
adc
call
add
imulb
push
mov
adc
sarl
xor
sub
jae
adc
xchg
icebp
inc
enter
sbb
sub
cwtl
dec
cmc
mov
push
in
mov
aam
or
xchg
inc
fldcw
and
imull
push
mov
mov
adc
and
popf
xor
dec
in
addl
or
mov
xchg
loopne
pop
icebp
jae
sbb
enter
movsb
loope
sub
xchg
pop
mov
dec
mov
shrl
test
mov
ret
cmovno
les
dec
loop
scas
testl
aam
xchg
mov
inc
fdivs
movsl
cmp
lahf
pop
testb
xchg
insl
jge
mov
mov
loop
add
fisubrl
mov
mov
xlat
testl
cmp
lahf
push
inc
dec
stc
std
add
sbbl
movl
jae
lods
inc
and
cli
xchg
cmpsb
inc
xlat
outsb
outsb
iret
sbb
push
ss
test
push
jmp
sbb
jae
cmp
stc
test
ret
imul
and
and
inc
push
ljmp
outsb
ss
lret
pop
cmc
mov
jnp
jg
in
mov
sbb
inc
fldenv
lret
jge
inc
fsincos
xchg
jle
lods
adc
dec
lret
mov
fs
lods
lock
inc
lahf
popf
xor
mov
mov
xchg
add
pop
sahf
jp
clc
daa
xchg
and
lods
jb
inc
fisubrl
pushf
xor
add
clc
out
push
jmp
test
pop
xchg
lods
ds
mov
dec
in
sti
mov
cld
push
insb
add
push
insl
dec
in
xor
fistpll
test
js
xor
fstl
dec
in
lds
mov
xchg
inc
xlat
cmpsb
mov
and
test
and
push
pop
dec
pop
lea
xchg
jp,pn
in
rcll
cltd
adc
daa
cmp
mov
push
icebp
mov
lret
ds
hlt
pop
mov
sub
sti
cmp
add
dec
inc
fisubrs
pop
hlt
test
jg
cmpsl
ds
cltd
je
outsl
lds
xchg
sub
xchg
jecxz
les
mov
in
add
sbb
pop
mov
inc
std
xchg
dec
inc
cmp
mov
movsl
pop
repnz
dec
sub
adc
mov
shlb
mov
or
xchg
sub
popa
clc
mov
cmpsl
mov
mov
rcl
imul
add
mov
push
mov
fsts
sub
lds
into
dec
jecxz
rcll
outsl
adc
xchg
cs
adc
mov
mov
cmp
out
test
push
shrl
stc
or
das
add
cltd
nop
dec
sub
test
dec
fistps
jp
shll
data16
cmp
push
test
js
push
jmp
xchg
mov
or
push
rcrl
xchg
sub
fidivs
xchg
lcall
mov
jne
xchg
cmpsl
jns
inc
pop
sahf
out
cwtl
das
popa
adc
mov
mov
xor
nop
loopne
imul
push
call
dec
jo
push
sub
test
inc
lea
subb
mov
rorl
std
icebp
fnstenv
adc
jmp
jmp
add
mov
jb
cmp
jne
pop
out
pop
out
push
adc
jl
jnp
or
gs
xchg
sub
lea
mov
cmp
ss
pop
rcrl
sbb
shrb
insl
jae
pop
or
sahf
xor
mov
mov
es
xorb
inc
fidivs
add
testb
push
jmp
movsb
fbstp
mov
in
mov
and
repz
lea
pop
xor
inc
js
push
scas
arpl
insl
das
mov
cmp
dec
clc
js
mov
xor
push
int3
arpl
movsb
cli
xchg
cli
mov
das
clc
and
xchg
fildl
cmpsb
pop
cmc
aad
in
test
testl
outsb
jg
mov
jcxz
and
les
je
inc
jne
push
pop
call
xor
lret
xlat
xlat
pop
push
leave
push
pop
cmp
sub
cmp
cmp
pop
jge
pmaddwd
push
loop
inc
stc
sub
adc
sbb
inc
dec
pop
mov
mov
scas
mov
fwait
cmp
out
daa
push
cmc
imul
mov
pushf
ret
push
ficoms
fs
imulb
pushf
cmp
scas
xchg
jno
push
sub
jl
es
int3
xchg
ret
mov
push
lods
dec
dec
test
iret
arpl
adc
scas
sti
hlt
cld
inc
pop
sbb
insb
std
cs
mov
mov
lds
mov
sbb
int3
cmp
mov
in
pop
mov
push
fidivl
ficomps
out
fimuls
test
mov
mov
call
push
sbb
pop
inc
mov
incb
add
ds
or
sbb
call
sbb
clc
cmpl
sbb
or
xchg
xchg
je
sub
scas
repz
mov
push
outsb
jae
mov
mov
imul
dec
rorb
popf
out
mov
mov
andb
iret
dec
xchg
scas
pop
test
and
loope
into
inc
in
sub
ret
and
mov
lcall
jns
rcll
jmp
outsl
push
pushf
enter
call
sub
and
mov
cmp
or
rep
dec
xlat
mov
insl
cld
inc
aaa
out
pop
into
mov
js
out
dec
pop
sbb
mov
push
or
inc
scas
mov
shlb
dec
adcb
call
iret
nop
in
pop
dec
xchg
stos
xchg
cmp
ja
cmp
push
jb
pop
loopne
xor
fstpl
adc
test
inc
dec
inc
jl
sub
movsb
pop
in
aad
sbb
stos
xchg
sbb
clc
inc
pop
add
add
sarb
jg
jle
xchg
push
pop
xor
jne
dec
clc
or
jmp
fsts
dec
mulb
xor
out
nop
mov
jecxz
aas
in
sbb
popf
mov
jb
push
sti
faddl
cmp
mov
mov
pushl
fisubrs
addr16
je
packuswb
int
or
mov
jae
sub
adc
rorl
mov
push
push
sbb
xor
pop
ja
xchg
jmp
enter
sub
xlat
test
mov
or
lock
dec
xchg
adc
mov
pop
scas
cmpsb
xchg
mov
subl
out
ljmp
dec
sub
push
dec
ss
stc
and
push
jmp
pop
mov
stos
in
push
ret
imul
andb
in
xor
bound
fistpl
fisttps
jmp
jo
stos
pop
push
in
sub
mov
xor
jl
adc
sub
sti
add
or
fsubrp
in
ds
into
imul
xor
lcall
imul
ja
dec
cmpsb
jb
roll
mov
bnd
jns
inc
push
ljmp
shrl
les
mov
sahf
add
cmp
and
les
xchg
sbb
aad
adc
adc
inc
jns
int
idiv
addr16
loope
pop
push
pusha
clc
jb
aad
fucom
mov
mov
ljmp
outsb
sbb
mov
mov
xor
push
fistpl
nop
xchg
cmp
inc
lods
test
mov
les
movsb
ret
mov
jne
mov
sub
fildl
add
mov
mov
sub
mov
xchg
lds
neg
pop
push
or
push
test
lahf
pop
mov
adc
leave
adc
loope
mov
xchg
sarb
jge
xchg
or
inc
sub
xor
mov
dec
mov
push
mov
pop
cli
cmp
pop
add
testl
xchg
or
mov
add
mov
pop
or
jl
fisubrl
or
cli
inc
xor
dec
jg
inc
or
jl
aaa
test
ljmp
fists
jns
cmp
lcall
enter
mov
dec
cmp
ljmp
inc
cmp
in
dec
pop
xor
mov
roll
leave
fistl
call
je
xchg
mov
fstpt
inc
lods
and
sbb
mov
js
out
jns
xchg
fcomip
ss
inc
fisubs
lods
rorb
push
into
aas
dec
jne
mov
add
mov
lret
mov
mov
mov
clc
andl
inc
mov
or
ja
xor
cmp
ja
test
sbb
stos
insl
arpl
and
mov
mov
push
lret
sub
push
int3
pushf
dec
shrb
popf
xor
mov
mov
sarl
out
nop
and
xchg
sub
sub
mov
lretw
jnp
aam
insl
movb
mov
into
not
xchg
fdivs
xchg
jle
insb
xchg
xchg
sub
jb
push
mov
ja
xchg
fwait
sub
in
test
sub
jno
xchg
jecxz
xchg
incb
addl
addl
push
call
das
pop
pusha
jmp
int
jns
and
arpl
dec
add
push
inc
inc
jmp
cmp
adc
cmp
dec
xor
les
mul
adc
cmp
and
cli
xchg
es
cltd
pusha
sub
cmp
fwait
add
or
inc
dec
je
sub
pop
adc
aam
pop
clc
leave
movsl
and
test
test
or
inc
cmp
in
xor
adc
idivl
and
xlat
jge
test
int
xchg
inc
dec
inc
mov
dec
dec
lock
inc
sub
pop
sti
lret
out
f2xm1
lret
scas
decb
xchg
mov
adc
mov
and
fldcw
sbb
out
fs
and
dec
sbb
outsl
popf
sti
aam
adc
adc
pop
imul
loope
pushf
sbb
in
mov
lock
and
add
jp
mov
xchg
into
out
sbb
fimuls
and
or
roll
stc
xchg
stos
in
sub
aad
xor
leave
jb
out
sub
and
jmp
mov
inc
hlt
xchg
jl
or
pop
mov
lods
movsl
test
pop
pop
insb
mov
loopne
pop
and
fists
xchg
and
mov
push
fisubl
mov
out
mov
lret
mov
add
in
or
pusha
adc
cli
jae
mov
xchg
jnp
mov
or
sti
jb
xor
sub
cli
cmp
das
ret
ret
xor
gs
adc
aas
xor
or
cmc
sbb
pop
and
faddl
int3
pop
cmc
mov
xor
shrb
insl
xchg
push
mov
sub
sahf
into
repnz
int
test
mov
dec
repnz
mov
sbb
mov
jo
xorb
add
xlat
xchg
mov
jecxz
nop
sbb
inc
stc
fldenv
cli
pusha
or
dec
cmc
and
mov
jbe
cmp
lock
incl
in
and
or
mov
cmp
mov
pusha
sbb
cmp
gs
or
addr16
cmc
pop
push
inc
cmp
jl
leave
test
stos
and
xchg
push
or
xlat
je
out
int
lcall
mov
shlb
push
lret
xor
sbb
push
andl
outsl
jmp
cld
jge
mov
adc
std
cmp
or
les
fdivrs
sti
sbb
xchg
jg
cwtl
bound
jae
test
scas
hlt
lcall
test
push
imul
inc
push
adc
lcall
test
add
popf
sbb
xor
lcall
jb
adc
pop
sub
stos
mov
stos
sub
cmp
add
pop
jbe
repnz
insb
mov
stos
scas
dec
cwtl
mov
lret
ret
mov
inc
pavgb
addr16
sub
add
lret
and
data16
inc
cltd
out
push
stos
pop
mov
imulb
lret
lock
xlat
sbb
dec
jbe
loope
sbb
outsl
insb
mov
pushf
mov
pop
daa
adc
mov
mov
mov
dec
je
xchg
push
in
jo
insb
lret
ret
mov
ja
xchg
push
cmp
lods
in
mov
inc
ds
out
xchg
push
mov
fsubrl
cwtl
or
push
inc
inc
cwtl
es
mov
fwait
sub
shr
cwtl
test
pop
lods
out
sarl
pop
xor
test
sarb
dec
pop
test
cmpsl
out
pop
cmp
insb
sub
xlat
mov
aaa
xlat
dec
push
test
adc
repz
add
and
mov
clc
inc
repz
lods
jl
pop
mov
sbb
jb
xor
insb
dec
cld
int3
shll
sti
inc
cmpsl
pop
sbb
jae
pop
iret
mov
pop
dec
xor
sub
add
repnz
mov
mov
out
mov
sbb
sti
mov
hlt
cmp
loope
mov
or
inc
jae
mov
inc
push
dec
dec
sbb
cmp
inc
push
dec
pop
enter
in
xchg
shl
daa
mov
sbb
xchg
mov
shlb
fisubl
sbb
lret
cmpsl
pop
imul
mov
dec
sbb
jle
out
inc
loop
mov
xchg
hlt
adc
sbb
xor
int3
fiaddl
push
jae
mov
das
cmp
js
mov
cmp
and
mov
sbbb
sub
lods
or
dec
in
xor
or
icebp
add
xor
cmp
mov
or
rcll
dec
jl
or
loopne
sahf
sahf
lods
mov
adc
dec
mov
adc
enter
xor
jp
xchg
and
mov
xor
mov
ja
mov
xor
cmc
ffreep
or
data16
popa
cs
not
and
xor
in
pushf
movsl
scas
xchg
lds
int
push
cli
fisttpl
bound
imul
subl
sarl
lret
jg
pusha
stos
popf
xchg
scas
jns
mov
loope
mov
mov
inc
cld
dec
ret
or
xchg
cmp
mov
es
cmpsb
jo
addl
popa
jecxz
mov
jnp
xor
inc
mov
testl
mov
sub
mov
or
les
add
mov
movsb
push
repz
imul
and
push
jecxz
or
lret
arpl
fldl
out
test
clc
inc
jp
rcll
gs
aas
xchg
add
imul
subl
mov
push
mov
sbb
les
and
es
jl
movsb
xchg
or
popf
add
test
add
xchg
xlat
lahf
sub
insb
adcb
fstpl
xor
pop
pop
rorl
in
xchg
iret
test
arpl
jl
out
xor
repz
repz
int3
xchg
xchg
shll
lcall
rcrb
cwtl
in
orl
push
sub
cmp
int
jns
and
push
addr16
mov
mov
loop
dec
and
mull
adc
sar
div
les
add
int3
add
rcl
lock
push
fucomi
dec
fadds
jecxz
push
mov
push
cmp
lahf
dec
cmc
arpl
aas
or
pop
jmp
cld
add
mov
jo
pusha
and
or
test
arpl
aam
fst
sub
sub
movsb
jnp
push
mov
mov
popa
jl
insl
movsl
xchg
stos
cld
xchg
and
aam
stc
nop
or
push
sub
and
pop
inc
rcr
mov
inc
nop
mov
xchg
cmp
inc
xchg
add
aaa
inc
inc
lahf
nop
mov
mov
fstps
and
test
pop
sahf
jle
incl
flds
lea
rorb
jne
pop
push
mov
fnstcw
clc
xlat
push
andl
sub
movsl
dec
lods
mov
and
mov
push
std
subl
sbb
add
nop
leave
jns
outsl
mov
xor
mov
mov
fwait
add
jle
in
mov
repz
fwait
out
jmp
adc
imul
dec
outsb
enter
lods
add
and
adc
and
inc
ja
stc
cld
and
out
lcall
cmpsl
aam
in
in
mov
ret
add
shlb
push
movsl
ret
jmp
sahf
sub
lea
hlt
movsl
push
and
repnz
dec
add
cmp
add
xor
mov
outsb
push
lret
or
sub
scas
add
and
sbb
aas
and
jmp
mov
inc
xchg
ss
push
pop
test
arpl
fs
push
in
fmull
in
imul
test
out
pop
push
daa
loop
mov
pop
xchg
cmp
aas
leave
pop
loopne
xchg
adc
bound
test
adc
push
jp
push
out
call
idiv
sub
out
int3
popf
gs
lret
adcl
pop
jecxz
stos
push
sahf
xor
repnz
sbb
pop
stos
cmpsl
sti
lahf
in
aas
or
cli
arpl
lret
cmp
mov
jae
ja
mov
inc
out
outsl
adc
data16
xor
pop
aas
cmovl
test
xor
cmp
sbb
leave
mov
mov
rcrb
add
sti
into
xor
arpl
jg
xor
push
mov
jae
mov
cmpsb
pop
movsl
jno
xchg
fwait
sub
mov
jecxz
xchg
test
scas
xor
sbb
test
andl
xor
es
sbb
daa
adc
popf
ret
jb
popf
cmc
ret
jge
ds
pop
dec
dec
add
push
mov
jo
cli
cmp
pusha
mov
lds
and
pusha
mov
inc
mov
jl
xchg
fstl
das
and
movsl
push
and
push
xchg
mul
movsl
hlt
dec
mov
iret
pop
or
lds
inc
out
mov
daa
jmp
jl
push
mov
sti
jmp
jo
push
jmp
mov
rolb
leave
out
jle
je
es
adc
ret
shlb
lcall
insl
dec
lea
mov
popa
arpl
sbb
mov
cwtl
xchg
mov
add
pop
or
inc
xchg
push
std
dec
clc
push
in
add
lcall
lahf
fimull
mov
cmp
jnp
jns
xor
js
mov
push
mov
mov
mov
lea
fmul
faddp
lret
loope
fs
sub
sub
fdivrs
aam
into
cmpsb
lock
aas
ljmp
mov
or
les
repz
dec
dec
pop
andl
cwtl
sub
ds
pop
sub
mov
and
leave
pop
rcrb
pop
das
lea
jns
sbb
adc
insb
lods
adcl
xchg
loop
in
loop
out
adc
mov
mov
push
aad
pushf
outsb
jg
test
mov
les
xchg
movsl
in
xor
enter
ret
xor
ror
sub
sub
adc
les
lea
lcall
sahf
mov
mov
fsubrs
mov
cmpsb
ss
xchg
push
xchg
adc
mov
cs
push
ffree
outsb
pop
je
ret
rolb
adc
and
scas
sub
addr16
movsb
into
push
insb
push
push
test
test
pop
xlat
mov
push
jns
enter
xchg
push
scas
movsb
stc
push
pushf
test
sbb
dec
inc
scas
add
fldcw
lret
push
pop
push
jge
ret
xchg
mov
jecxz
arpl
jb
sbb
out
call
xor
stos
leave
xchg
push
scas
mov
fisubl
xlat
roll
jno
popf
mov
push
add
cmp
xor
aas
in
jle
jecxz
cmpsb
hlt
clc
add
mov
sub
or
cmc
jno
out
out
cmp
pop
leave
or
and
pop
sub
mov
xchg
out
jne
xchg
dec
pushl
mov
push
leave
ss
fs
adc
sbb
ret
lret
xchg
ror
cmp
scas
cmp
test
test
jg
iret
cltd
test
xchg
loop
jle
out
sahf
pop
lea
mov
in
fs
aas
cmp
jbe
push
lcall
mov
movsl
ja
inc
orb
cli
fbld
stos
add
pop
and
adc
push
scas
jp
or
mov
sti
sbb
sub
cs
push
inc
mov
mov
push
push
or
xchg
dec
inc
jo
add
dec
xorb
ret
mov
loop
push
cmp
pop
dec
std
pop
jo
inc
insb
pop
rcrb
mov
fs
add
or
sub
adc
pop
push
jo
mov
xchg
mov
mov
movb
pop
cmpsl
adc
mov
cltd
sub
sahf
andb
je
pop
insl
aaa
and
jo
sti
sbb
aaa
test
xor
mov
enter
lcall
push
dec
das
pop
cmp
jg
or
push
xlat
subb
sbb
add
mov
in
mov
jmp
test
cmc
insb
clc
in
stos
int
pop
xchg
lds
xchg
enter
add
loope
fiaddl
out
movsb
pop
lds
add
pop
mov
mov
mov
jno
mov
clc
sub
pop
icebp
fimull
sbb
add
stos
push
das
icebp
enter
test
push
inc
xchg
or
sub
test
cmpsb
pop
gs
aas
dec
lret
mov
fdivrl
push
xchg
mov
jns
mov
int3
mov
daa
rcl
xchg
ljmp
push
fucom
nop
sbb
stos
jecxz
push
insb
mov
mov
in
notb
cmp
loop
cltd
popa
xchg
jbe
add
aaa
movsb
repnz
sub
inc
stos
mov
orb
nop
fstp
test
scas
xlat
outsl
rcrl
sub
clc
cmpb
repz
cmc
inc
mov
movsl
or
je
gs
xor
xchg
mov
sbb
xchg
jle
cmp
test
sub
dec
add
push
leave
insl
test
push
dec
mov
pushf
push
dec
xor
clc
cli
pop
push
inc
sub
add
jnp
jmp
faddl
add
out
pop
adc
xchg
ss
xchg
in
mov
nop
mov
adc
and
cmp
int3
push
xor
fildl
jb
pop
iret
push
test
xchg
mov
mov
mov
aad
add
xchg
and
pop
xlat
aad
add
in
jge
or
or
jo
daa
leave
fsubrl
hlt
pop
jno
das
mov
movsb
sub
lea
adc
test
shr
popa
add
or
cltd
rolb
jge
bnd
fisubs
or
add
jl
daa
mov
mov
lret
add
mov
daa
pand
or
fstp
popa
psubusw
sti
sbb
idivl
fldt
inc
iret
push
je
and
das
xchg
jmp
or
or
inc
ret
push
arpl
mov
cmp
fisubl
sbb
xor
adc
bound
imull
aad
jb
cmc
call
popf
mov
adc
cmp
mov
subb
push
les
test
int
xlat
mov
adc
ret
leave
fucom
pushf
inc
aad
pop
ret
mov
repnz
sahf
lret
xchg
dec
xor
adc
adc
and
pop
addr16
pop
mov
or
push
scas
enter
ss
mov
mov
xor
insb
inc
sub
adc
and
data16
mov
adc
pushf
sbb
outsb
sbb
lret
cmp
sub
out
mov
sub
loop
pop
test
fistl
pop
pop
pop
inc
pushf
and
rcrl
ss
stos
push
lea
jmp
daa
int3
jbe
push
rcrb
fxch
xchg
fisttps
push
sbb
adc
ja
pop
or
jmp
in
test
add
testb
push
jno
outsl
mov
pop
in
fisttpl
jnp
insb
xlat
mov
xor
push
lods
call
adc
pop
movsl
mov
mov
cmp
fwait
sub
push
jmp
jb
adc
pop
mov
xor
lods
sub
loope
pop
loopne
test
insl
int
shll
mov
cld
test
in
dec
pop
or
rcl
jno
iret
in
pop
xorl
outsb
into
pop
or
push
or
mov
cmpb
adc
sbb
cmp
lcall
daa
mov
les
cwtl
lret
xor
mov
pusha
arpl
sbb
fldt
dec
push
iret
mov
gs
lret
cmp
bound
rol
pushf
and
dec
and
lcall
sub
push
scas
scas
fsub
lea
mov
std
inc
adc
sbb
icebp
push
or
dec
adc
testl
mov
ja
roll
mov
hlt
jecxz
lods
or
and
fs
pop
xor
inc
sbb
fs
jo
push
xor
and
ja
sub
xchg
sub
mov
mov
sub
jnp
push
sahf
push
push
aad
aas
sub
add
mov
jnp
andb
lea
sbb
push
bnd
pop
sti
jle
push
cmpsl
daa
ret
out
lea
sbb
sub
mov
adc
add
push
pop
sti
outsl
lret
dec
dec
rcrb
sub
rcrl
mov
pop
movsb
jo
jecxz
and
mov
adc
dec
pop
cwtl
adc
add
jmp
and
call
repz
xor
push
pop
test
or
push
cwtl
xchg
cld
arpl
inc
xchg
mov
mov
stos
pop
mov
push
outsl
in
lds
and
push
hlt
jbe
xchg
shlb
aad
inc
xchg
adc
push
dec
aaa
nop
dec
and
repz
loope
inc
pop
sbb
mov
lods
add
and
dec
mov
out
and
ret
les
jg
mov
mov
cmc
pop
js
shrl
and
fwait
ja
popf
mov
clc
xor
xor
addl
xor
sub
cmp
cmp
dec
jge
xchg
or
lods
jg
lret
add
aas
fdivrp
outsb
mov
lods
mov
mov
add
push
jge
sbb
sbb
dec
mov
mov
icebp
pop
or
push
mov
sub
dec
inc
fsubrl
or
fcomps
lock
inc
in
and
jecxz
mov
sbb
dec
repz
je
test
rorb
adc
add
mov
mov
pop
pop
xor
and
arpl
dec
idivb
in
mov
push
or
dec
cmp
faddl
arpl
orb
test
dec
cltd
dec
cmp
shrl
fs
cli
cld
add
mov
fbstp
adcl
adc
inc
mov
pop
out
xchg
lcall
int
dec
sub
and
cmpsl
xchg
cwtl
mov
ficoml
out
inc
inc
jno
icebp
imul
pop
out
jl
xor
dec
popa
inc
enter
cmpl
hlt
scas
sub
ds
pop
jle
xor
outsb
mov
or
xorb
push
adc
xchg
sbb
loop
cmp
adc
cwtl
test
and
imull
neg
fstl
ja
lahf
lahf
repnz
xchg
mov
es
ljmp
loopne
jle
out
push
dec
push
xor
gs
shrl
xchg
add
adc
ljmp
mov
cld
xor
lea
daa
ja
and
jecxz
andb
cmp
clc
add
xor
loope
iret
inc
push
jge
loopne
jbe
cmp
push
xor
testb
mov
mov
mov
sub
jns
ja
popa
notb
push
rcrb
lret
sub
lret
xor
mov
fs
cmp
mov
push
cmpsl
jl
cmc
fwait
into
push
in
push
xor
popf
dec
or
fprem
or
and
cmp
sub
addr16
xor
inc
ds
stc
mov
scas
xchg
mov
subl
cmc
popa
xchg
cmp
pop
xchg
adc
cs
mov
mov
lcall
inc
lahf
adc
leave
mov
jbe
jg
or
xchg
cli
and
mov
insb
sbb
sti
cwtl
addr16
sbb
fdivs
lret
in
dec
loop
iret
jecxz
jge
mov
stc
dec
xor
xchg
hlt
or
sub
mov
or
cltd
fs
jb
mov
sub
sub
xor
xlat
test
test
fs
pop
fmul
push
add
aad
insb
inc
imul
pop
mov
xchg
cltd
jnp
sub
push
aas
jl
std
inc
mov
pop
xor
xchg
jne
mov
stc
out
mov
sub
add
cmp
inc
stos
ret
cmpsb
pop
inc
xor
jno
lock
jp
ret
sub
jg
scas
adc
arpl
out
and
ror
loope
and
js
mov
stos
ljmp
mov
sbb
bound
push
mov
lahf
mov
or
inc
mov
idivl
je
xchg
cs
adc
mov
cwtl
enter
fldl
cwtl
imul
out
or
xchg
pushw
sub
adc
mov
inc
pop
dec
lret
push
clc
and
xchg
out
inc
cmc
das
imul
into
add
stc
loope
mov
addr16
shl
xchg
and
shl
lret
xchg
arpl
out
dec
cmp
out
jns
xor
lahf
fstpt
movsl
dec
adc
inc
movsb
fadds
mov
ret
cmpl
xor
or
call
aad
sub
mov
xchg
in
push
xchg
les
adc
insb
xchg
int
ucomiss
jnp
outsb
ds
fsub
jnp
les
sub
pop
mov
or
addr16
xor
pop
push
sahf
bound
jge
jns
sub
adc
dec
sti
or
icebp
out
in
inc
fwait
and
mov
shrl
pop
fistps
jno
inc
ljmp
jbe
popf
lds
cmpsl
adc
jmp
mov
add
jecxz
cwtl
sbb
insl
clc
daa
lds
pop
jle
movsb
jmp
int
jmp
test
mov
mov
push
rcrb
sbb
loope
add
push
xchg
repnz
inc
xor
cmp
shlb
add
adc
push
mov
fwait
push
roll
pop
dec
daa
leave
popf
mov
loop
es
sub
xchg
mov
jge
fdivrl
iret
ret
fcomip
cmp
pop
outsb
jae
adc
jecxz
push
lcall
push
ljmp
jle
adc
mov
dec
sub
inc
fwait
add
pop
inc
sbb
fstpl
les
mov
xor
fnstcw
mov
test
shrl
xchg
test
mov
cli
mov
jmp
push
or
mov
nop
lds
mov
jecxz
inc
fisttpll
adc
sti
lcall
sbb
test
call
inc
cli
jno
sub
rcrl
xchg
sub
loope
out
mov
rorb
add
and
inc
repz
cmp
ficomps
pop
repz
xor
sbb
ds
loopne
movsl
cwtl
das
xlat
nop
addr16
mov
push
and
jge
cmova
jge
sub
cli
xchg
shlb
pop
cmpsl
icebp
sbb
sti
inc
ss
sbb
xchg
dec
xchg
push
ljmp
outsl
push
sbb
cmp
repz
inc
lea
or
adc
fbstp
or
clc
mov
movsl
or
lret
or
scas
pop
xor
mov
pop
repz
sbb
xor
cmpsl
push
xchg
sub
movsb
mov
sbb
imul
sub
mov
ret
repz
or
into
adc
movb
shll
dec
in
inc
dec
fbstp
imul
xchg
data16
les
and
in
sbb
xchg
cmp
pop
in
mov
icebp
aaa
movsl
cmp
pop
les
xor
adc
mov
adcb
fadds
lcall
dec
in
xchg
cld
xchg
iret
jl
mulb
adc
jne
xor
pop
xchg
aam
sarb
test
icebp
xor
sub
adc
jne
push
jmp
sarb
sbb
shrb
dec
pusha
divl
loop
pop
xchg
int3
arpl
jl
sub
enter
dec
lods
inc
jbe
xchg
sub
adc
cwtl
icebp
xchg
sub
mov
dec
fbstp
adc
rcrb
sbb
stos
test
aad
hlt
mov
int3
arpl
xchg
clc
rcll
orl
dec
jecxz
dec
push
jecxz
cwtl
loopne
ret
mov
sbb
cmp
aad
rclb
or
das
mov
lahf
mov
sbb
mov
mov
or
cs
push
cmc
je
das
jns
pop
mov
les
scas
std
stos
aam
aad
mov
dec
testb
push
les
mov
nop
out
lods
mov
insl
cmp
movsb
cmp
pop
pop
icebp
test
arpl
jmp
lret
cmp
dec
fbld
pop
xchg
sub
cmpsb
adc
movb
gs
adc
xchg
pop
jnp
dec
loope
pushf
lods
inc
movb
outsl
cmp
mov
mov
jl
mov
dec
movl
in
test
pop
xchg
xchg
je
insl
test
in
mov
lcall
lret
and
pop
test
sub
test
xchg
sub
repz
sub
dec
xchg
add
mov
into
gs
xchg
rcrl
mov
stc
sbb
shrl
imulb
mov
mov
mov
or
movsb
cmp
sub
popf
xor
js
sub
ret
dec
in
sahf
icebp
mov
sbb
pop
repz
push
insb
mov
repz
lea
scas
mov
xchg
sub
mulps
pop
xorb
imul
mov
fnstsw
fmuls
lahf
add
sub
and
lret
cmpsb
cmp
cmpsb
repz
add
dec
data16
jae
jns
dec
xchg
xchg
sub
jo
cmp
int
shl
cmp
popa
push
and
mov
fsts
ret
mov
push
jg
lods
cmpsl
jno
add
lret
jno
hlt
pop
xchg
sub
dec
push
push
xchg
outsl
xor
xchg
mov
in
in
mov
ds
add
cmpb
flds
cmpsb
jmp
lods
xor
sbbl
push
pop
hlt
mov
decl
test
mov
xor
sbb
mov
push
js
xor
fcomps
xchg
sub
sbb
xchg
sub
mov
das
mov
push
call
sbb
ds
inc
imul
push
in
adc
aas
adc
mov
push
xchg
sub
mov
mov
movups
lods
pop
xor
xchg
insl
andb
mov
jg
fcoml
mov
test
pop
pop
jae
in
stos
jg
outsb
test
sub
repz
sub
dec
adc
scas
dec
outsb
mov
cltd
insl
xchg
xchg
mov
clc
lock
sarb
call
dec
subb
xchg
movsb
fnstenv
mov
in
pushl
sub
sub
jne
out
adcl
pop
fucomip
jns
push
add
cmp
ss
pop
pop
sahf
test
jg
loopne
dec
sbb
pop
sahf
cmp
xchg
sub
inc
fmull
mov
ljmp
stc
ds
scas
inc
jns
js
mov
scas
inc
fdivp
lret
add
jl
dec
rclb
lret
bound
mov
test
cli
nop
daa
das
or
mov
mov
leave
mov
test
fiadds
scas
inc
cmp
lahf
sub
test
xchg
je
cmpsl
loopne,pt
aaa
into
into
add
lret
sbb
mov
push
jmp
fisttpl
sbb
or
cs
xor
data16
iret
jle
dec
lods
lock
daa
iret
int3
arpl
dec
sahf
xor
dec
mov
adc
das
shll
cmc
push
repz
test
mov
outsl
push
xchg
ljmp
ret
xchg
sub
dec
data16
jp
mov
xor
leave
pusha
xor
xor
rolb
inc
ja
or
and
sub
jl
popf
push
out
ss
mov
insl
sti
sub
js
jge
xor
pop
lds
arpl
out
mov
pop
mov
mov
ss
shlb
sub
fs
loopne
mov
mov
sar
mov
test
and
popf
pop
fdivrs
pop
je
mov
sub
in
jbe
inc
lods
sbb
adc
rcl
outsl
mov
jle
mov
notl
xor
and
aam
cmp
popa
push
rorb
sbb
dec
popf
sub
mov
cmp
jns
pop
test
enter
cmp
pop
addr16
jmp
dec
mov
insl
mov
fsubr
jge
mov
fwait
ljmp
stos
cmp
popf
stos
push
sub
mov
sbb
ficoml
sub
addr16
test
popa
or
shlb
xor
mov
dec
mulb
aad
pop
fistps
clc
or
out
jnp
arpl
add
lock
mov
inc
inc
sub
jp
pop
xchg
mov
xlat
push
in
and
jns
pop
xchg
xchg
jmp
inc
sbb
dec
or
xchg
cmp
fst
sub
add
adc
bound
test
and
fadd
jno
in
out
mov
adc
cmpb
sbb
nop
mov
scas
lods
push
in
sti
cmp
and
mov
mov
test
stc
or
fstl
xor
popa
sahf
shll
popf
xchg
and
rol
jne
cmp
mov
dec
imul
adc
cmpsl
push
ljmp
jne
das
jp
pusha
mov
shl
xchg
setae
jb
and
les
add
and
loop
push
inc
ljmp
andb
adc
inc
adc
inc
lea
fcompl
mov
rcrb
adc
rcrb
rcrb
xor
pop
pop
mov
rcrb
pop
rcrb
pop
cld
inc
rcrb
or
pop
dec
mov
pop
sarl
pop
lahf
in
pop
and
aad
in
lret
sbb
clc
ja
dec
xor
mov
testb
ss
pop
in
push
cs
mov
jae
dec
jmp
mov
cli
cmp
scas
dec
sbb
or
mov
and
cwtl
enter
jae
iret
cli
ja
inc
lock
insl
es
sbb
fstl
testl
xor
jl
shlb
mov
outsb
push
inc
mov
popa
cwtl
scas
inc
lret
lods
mov
enter
xor
push
aas
loopne
jno
inc
ficomps
push
popf
ret
jns
repnz
in
scas
adc
ss
frstor
xchg
sub
mov
fimull
or
out
test
sub
out
pop
sbb
dec
jle
int
imul
pushf
shlb
add
shrb
adc
ja
jne
cmpsb
arpl
mov
dec
in
mov
shl
sbb
dec
pop
pop
icebp
cmp
sahf
pop
jns
mov
popf
xor
adc
push
xor
arpl
mov
jecxz
xlat
or
inc
ds
mov
ficoms
mov
cld
loop
sbb
sbb
out
cmp
pop
pop
mov
lock
mov
les
xchg
mov
mov
sbb
sbb
roll
shlb
hlt
mov
pop
cmc
les
mov
es
ss
inc
xchg
sub
lods
xchg
sub
dec
dec
in
ljmp
in
xchg
sub
pop
out
xchg
mov
xchg
jb
movsb
xchg
mov
jp
mov
rcl
div
mov
testl
pop
cmp
pop
jl
ret
lahf
jge
cmp
ret
or
sbbl
outsb
test
jbe
ret
cwtl
dec
in
fbstp
in
outsb
add
mov
fiadds
sahf
and
sub
std
mov
das
lds
inc
dec
in
and
or
data16
cltd
push
xchg
mov
popf
xor
arpl
cmpsl
movsb
dec
stos
inc
pop
ds
mov
jno
es
in
imul
adcb
bswap
xor
mov
ret
mov
push
shlb
ja
jne
sub
add
lock
andl
mov
xor
mov
std
adc
mov
in
sti
jb
adc
mov
lret
cltd
dec
nop
nop
insl
sbb
sbb
hlt
arpl
xor
fldt
aam
lret
test
loop
stc
mov
imul
add
xor
or
notl
scas
sub
ss
or
shrb
jo
pop
ja
div
push
mov
dec
in
rcll
lcall
and
data16
add
rolb
sub
sub
imul
dec
dec
fistpll
mov
inc
pop
dec
loop
test
sbb
test
call
jmp
jbe
cwtl
mov
lret
nop
fbstp
xchg
mov
pop
dec
loopne
jecxz
rcl
xor
sbb
pop
repnz
sbb
sbbb
clc
sti
xchg
sub
xchg
cs
shrl
sbb
je
mov
mov
inc
shrl
sti
push
lods
in
add
xchg
xor
sub
loopne
adc
in
inc
fnstcw
inc
dec
jecxz
sbb
push
aas
lret
mov
mov
ret
pop
mov
xchg
cmpsb
dec
int
andb
xchg
insl
push
montmul
cmpsb
inc
push
adc
div
cmp
and
pop
cmc
out
push
in
or
je
mov
cwtl
das
cs
push
lods
int3
pusha
mov
sbb
fs
push
push
insl
xchg
pop
cmp
sbb
dec
mov
mov
or
fst
push
xchg
call
xchg
montmul
cmpsb
shr
ret
inc
fsubrs
push
adc
xchg
sbbl
sub
shrl
pop
sub
dec
icebp
rclb
jo
add
shrb
inc
mov
xor
cmp
test
test
cmp
mov
push
icebp
jnp
pop
lock
add
or
stc
gs
ljmp
icebp
fstpt
loopne
xchg
shrl
lret
mov
mov
xsha1
cmpsb
fwait
cmp
imul
dec
jecxz
or
jnp
xchg
std
aad
insb
pop
push
dec
out
mov
gs
add
jecxz
inc
push
popf
jbe
pusha
test
notb
out
inc
fdiv
pop
pop
cmc
mov
dec
out
inc
test
pop
pop
testb
xor
rol
pop
add
lds
into
gs
arpl
mov
lret
decb
je
test
cmp
cmp
aas
es
push
jg
and
sub
outsb
lcall
inc
lret
int3
mov
jl,pn
shlb
jg
test
add
prefetch
enter
pushf
xsha1
cmpsb
or
push
jb
inc
dec
jnp
addb
sub
repnz
in
mov
ss
fidivl
sbb
hlt
mov
iret
pop
repnz
shlb
int3
ja
mov
jne
stc
movsl
imul
pop
insb
add
sub
inc
inc
in
aas
push
andl
loopne
ljmp
jmp
out
test
and
mov
mov
pop
hlt
inc
sub
js
std
outsl
push
loopne,pn
inc
rcl
mov
inc
test
lods
inc
mov
mov
out
test
push
jmp
cmp
and
test
lds
enter
ret
hlt
mov
jb
shrl
das
pushf
jp
xor
push
mov
mov
sub
vpcmpgtb
mov
es
adc
imul
outsl
pop
lock
push
shrb
sub
pop
aam
aaa
in
xor
pop
into
mov
sahf
xor
iret
pop
into
gs
js
subb
and
jns
aas
daa
mov
push
imul
pop
repnz
and
push
pusha
fisubrl
or
sbb
in
xchg
rcl
in
test
imul
stc
jg
jmp
pop
mov
sbb
mov
sarl
ret
lods
cmpsb
cmp
je
test
test
push
stos
inc
je
xor
repz
shrb
clc
out
sbb
jb
andb
stos
sahf
and
test
les
xor
push
sbb
lea
loope
and
xlat
fwait
xor
pop
xor
js
mov
les
popa
pusha
jge
outsb
lahf
jbe
or
stc
nop
push
or
xor
mov
insl
int
aad
jp
loope
mov
out
jg
mov
sbbb
je
cmp
mov
pop
gs
push
in
pop
push
xchg
loop
or
jno
cmp
inc
and
stos
xor
dec
cmpsb
push
push
movsl
andl
xlat
insl
push
cmc
mov
push
ljmp
jge
and
xor
in
fisttpl
jno
mov
pop
out
jno
aam
lret
rclb
sbb
mov
pushf
cltd
lret
mov
mov
rcrb
in
or
daa
cmpsl
inc
fcmovu
es
cwtl
popa
dec
in
int
jg
pop
adc
leave
and
icebp
mov
movsl
mov
pop
outsl
aam
mov
pop
xchg
mov
leave
imul
in
fwait
cmc
mov
push
stos
inc
inc
cmc
push
call
hlt
fistpll
adc
sub
jmp
in
icebp
mov
data16
cltd
push
lods
inc
andb
outsl
push
ret
jne
mov
cli
xchg
and
adc
or
testb
ffreep
pop
rcrl
jb
xchg
sbb
push
mov
xchg
pop
jb
ret
pop
cwtl
or
pusha
cmp
jbe
int
add
orl
aas
stos
enter
push
or
or
push
mov
scas
inc
ficompl
adc
xor
call
dec
xor
fidivs
inc
jecxz
cmp
dec
loop
inc
and
and
sub
fsts
rcrl
or
add
jns
xor
push
mov
test
outsb
cmp
adc
outsl
pop
repnz
hlt
mov
sbb
push
fisubrl
or
rclb
clc
in
nop
daa
pop
lahf
imul
inc
je
cmp
cmp
cmp
lods
and
cltd
xor
icebp
test
sbb
xlat
pop
repz
jmp
xchg
pop
mov
lea
test
lods
std
call
mov
lret
loopne
test
gs
iret
aam
stos
inc
push
pop
mov
jl
int
or
fnstcw
jmp
dec
mov
mov
sub
mov
pop
mul
mov
jno
fwait
jno
int3
cli
xor
jmp
fwait
xor
pop
mov
nop
pop
ja
xchg
sub
outsb
pop
aam
out
nop
adc
mov
stos
fnstsw
into
imul
cwtl
push
dec
pop
and
push
lahf
ss
jmp
sbb
mov
inc
movsl
mov
test
imulb
pop
mov
pop
pop
mov
cs
leave
pusha
fs
stos
inc
mov
xor
mov
shlb
add
push
jmp
xchg
xchg
jl
xlat
sub
mov
fidivl
dec
mov
mov
cmp
fnstenv
cmc
mov
sbb
lahf
mov
cmc
mov
mov
imul
sub
movsl
cmp
filds
xchg
sarb
ljmp
enter
jb
jp
mov
in
test
sub
mov
fcomip
shl
xor
adc
call
ffree
hlt
mov
mov
xchg
cs
xor
xchg
mov
shrl
lock
mov
fidivs
or
adcb
sbb
loop
daa
mov
xor
push
cmpsb
cmp
pop
stos
les
lcall
das
or
xchg
cmpl
sbb
pusha
mov
loopne
jg
inc
push
jmp
xor
arpl
and
and
aam
fadds
cmp
popa
negl
lds
jl
adc
jecxz
ja
rcrb
xchg
push
lea
mov
jle
insb
lods
fistpll
rorl
lock
sub
and
jb
stos
ja
movsb
iret
nop
sub
rorl
sbb
add
jne
push
mov
shll
dec
adc
pop
inc
imul
cltd
mov
add
aas
or
mov
pusha
xchg
xchg
pop
ds
mov
cmp
mov
repz
les
add
xor
into
xchg
sub
mov
xchg
and
sbb
sarb
iret
ret
jg
mov
dec
sbb
or
xor
into
stc
ljmp
dec
pop
mov
mov
cmpsb
cmp
inc
pop
inc
inc
orb
repz
jecxz
sub
xor
in
in
test
mov
ja
jg
xor
leave
popl
repnz
xor
mov
stc
imul
add
mov
xchg
lahf
ss
or
out
lret
cld
out
ds
test
jb
or
jl
cmc
mov
cmp
scas
insb
vmread
adcl
push
jmp
mov
dec
sub
jle
std
sub
outsb
popf
xchg
xchg
rolb
pop
je
pop
scas
orb
ror
enter
stc
push
in
ljmp
adc
int
dec
mov
mov
js
cmc
xor
xor
cmpsl
jbe
sbb
dec
lods
pop
mov
dec
push
fidivs
pushf
jmp
xchg
les
push
adc
xor
inc
fldcw
xor
jecxz
test
xchg
dec
xchg
mov
enter
cld
jno
and
pop
les
in
xor
aaa
into
gs
repnz
lcall
sbb
int
rcrl
out
repnz
adc
xchg
sub
mov
push
inc
mov
push
adc
test
mov
and
shll
icebp
and
xor
mov
inc
pop
repz
lahf
ss
ja
inc
adcb
repnz
xor
pop
repz
es
fnsave
mov
cltd
mov
inc
or
js
in
test
inc
fidivs
jnp
jecxz
lret
dec
loopne
sahf
sub
mov
inc
lea
shl
mov
rclb
rclb
shrb
lds
xchg
mov
out
xchg
leave
push
in
mov
int3
sub
mov
int
cmpsl
mov
shlb
ret
es
int
out
ret
sbb
arpl
mov
push
popf
mov
inc
or
push
or
mov
push
movb
push
inc
faddp
imul
stos
imul
pop
push
sbbl
insl
rcrl
lea
outsl
xchg
sub
or
push
cmp
add
clc
xor
fbld
aad
movsb
dec
push
lods
jge
test
push
cmp
aaa
sbb
mov
push
ljmp
jge
in
ret
mov
mov
es
rcrl
dec
loop
dec
lret
bound
or
aaa
int3
dec
fistpll
roll
or
and
cmp
inc
sbbb
jne
shll
test
jnp
cmp
or
adc
stos
iret
mov
fdivs
adc
cld
xchg
enter
mov
push
scas
mov
pop
cmp
mov
inc
fistpl
stos
cmp
adc
pushf
jmp
daa
sbb
cmpsl
ret
and
xchg
xchg
mov
ror
dec
push
popf
mov
sub
jl
pop
notb
cmp
jo
cmp
xor
gs
or
aad
mov
adc
or
outsb
mov
cmp
dec
mov
xor
stos
ss
sub
cmp
sbb
testb
fisttpll
decb
sub
leave
cli
xor
jmp
or
fldt
add
mov
enter
cmp
mov
test
mov
ret
push
jo
fsubrs
jae
stos
fs
cli
xchg
mov
inc
push
adc
loope
sbb
jmp
or
pop
icebp
daa
dec
mov
cmp
inc
sub
xor
imul
and
sti
xchg
inc
out
in
andl
mov
mov
jmp
sub
fcompl
test
xchg
jbe
sti
test
sbb
xor
inc
out
mov
lock
mov
dec
mov
fnsave
lcall
bound
push
test
fnsave
sub
xchg
imul
pop
addr16
mov
out
sbb
dec
pop
mov
pop
lock
insb
mov
mov
lcall
push
xor
inc
scas
and
push
lcall
push
ds
mov
in
ficomps
xor
test
add
cmp
mov
arpl
xor
das
lea
sbb
dec
ret
mov
repnz
sbb
mov
lret
cltd
xor
int
mov
fs
out
xchg
mov
jp
popa
cmp
mov
sbb
cmp
cmc
mov
daa
jecxz
mov
loopne
jo
out
cmp
stos
repz
jmp
sbb
cmp
xor
popa
lock
mov
sbb
dec
in
and
hlt
insb
add
push
sbb
adc
mov
mov
mov
stos
inc
cwtl
xor
jnp
mov
out
test
push
mov
inc
test
mov
xchg
dec
xchg
out
xchg
sub
sub
sbb
sbb
xchg
sub
mov
sbb
sahf
icebp
xchg
sub
daa
push
jmp
negl
mov
loope
adc
icebp
lods
nop
daa
fsubp
sbb
pop
cwtl
push
cld
xchg
js
int
push
insb
fnstenv
jmp
popf
sbb
cmp
add
lcall
cmpsl
jl
sbb
mov
dec
aaa
dec
out
lahf
mov
sbb
imul
add
inc
cmpsb
mov
fdivs
jo
popa
les
js
fsubrs
incb
or
and
sbb
sbb
lods
pop
hlt
push
outsb
pushf
and
pop
insl
mov
push
mov
xor
addr16
test
sbb
imul
int3
sbb
mov
lahf
repz
jo
adc
pop
xchg
sub
ss
xor
es
mov
inc
pop
xor
fs
out
lret
std
out
test
pushf
mov
inc
pop
sahf
jno
jmp
mov
or
mov
mov
dec
in
sub
adcb
fisubs
mov
inc
push
out
cmp
push
and
and
cld
mov
rcrl
sbb
lcall
jne
pop
scas
inc
jnp
loopne
push
shlb
adc
mov
pop
sahf
pusha
sbb
xchg
imul
popa
or
pop
clc
dec
jge
xor
sub
xchg
pop
xor
mov
aam
jg
lods
inc
clc
sbb
cwtl
sbb
pop
mov
xchg
sub
cltd
xor
pop
ret
pop
push
movsl
ljmp
outsl
adc
push
push
pop
sub
mov
lds
fs
imul
insl
jmp
int3
sbb
test
add
dec
in
arpl
jge
aam
cmp
cs
fsubrp
sbb
orb
inc
mov
and
sub
pop
mov
push
test
ds
arpl
xchg
and
push
out
popa
mov
jne
mov
out
xchg
aad
sub
pop
or
pop
scas
sub
fistpll
pusha
lods
decl
xor
in
addl
addr16
andl
lahf
push
mov
and
xor
lret
inc
xlat
sti
dec
mov
sbbb
testb
push
sahf
cld
icebp
mov
mov
shld
daa
mov
mov
inc
lods
testb
sti
adc
call
or
adc
inc
fcmovne
arpl
repz
aas
jns
jo
shrb
xchg
xchg
fmul
cmp
cmc
sub
lcall
inc
in
xor
das
cmpsl
mov
xor
mov
inc
fstl
adcl
imul
jmp
jp
inc
fsubr
rolb
mov
gs
sbb
imul
pushf
dec
adc
cld
or
mov
int
add
lods
jns
movsl
cmp
scas
mov
sub
xor
cmpsl
popf
push
sbb
adcb
mov
orl
lods
inc
push
sub
lcall
sub
insb
and
aad
mov
adc
fiadds
ja
or
mov
jge
push
pop
ret
mov
pusha
fstpt
adc
stos
in
in
xchg
imul
xor
mov
adc
mov
pop
mov
sbb
jo
ds
jmp
sub
mov
xchg
dec
xor
jmp
inc
arpl
sti
push
jg
ljmp
daa
mov
jae
rorl
cmp
jo
pop
xchg
jp
aaa
mov
or
cmp
xchg
mov
sbb
cmpsb
and
and
pop
fdivrl
lahf
out
lods
lret
loopne
insb
mov
sbb
testl
add
push
aam
mov
dec
leave
in
pop
xchg
jno
arpl
aam
xchg
out
xchg
jg
sub
js
xor
xor
inc
xchg
xchg
mov
shlb
push
ss
pop
in
sub
push
adc
mov
ret
scas
pop
mov
insl
xchg
adc
xchg
mov
jmp
fsubrs
jnp
fbstp
jo
inc
movsb
in
xor
sbb
lret
push
sti
xor
outsb
pop
jecxz
aaa
mov
sbb
xor
push
or
lahf
push
mov
mov
or
bound
sub
adc
hlt
sub
push
lret
push
aam
movsb
pop
fcompl
push
dec
sub
movsb
mov
sub
in
cmp
repnz
clc
inc
aaa
hlt
cmp
sbbl
repz
mov
inc
in
mov
xchg
xor
pop
out
fstp
and
enter
push
mov
push
test
and
mov
cmpsl
mov
cmp
mov
or
xchg
hlt
lret
sub
fst
push
cmp
das
sbb
mov
mov
cli
js
ret
xchg
or
lods
fucomp
push
imul
sub
sbb
imulb
cmp
mov
dec
and
movsl
cmp
js
push
out
lret
out
xchg
adc
jns
push
push
movsl
dec
arpl
xchg
xchg
jo
mov
push
mov
loope
adc
push
ljmp
jno
mov
es
cltd
xor
scas
inc
xor
dec
lods
push
int3
arpl
cmpsb
ljmp
stc
or
movsl
dec
es
lods
push
inc
xlat
aaa
into
stc
nop
add
cmc
mov
pop
scas
push
stos
jl
fnsave
int3
movsb
lcall
lock
in
and
or
daa
adc
scas
inc
jmp
inc
fisttpll
fidivl
sti
bound
sbbb
xor
mov
mov
fwait
ret
xchg
jmp
nop
mov
mov
sub
add
iret
inc
pop
cmp
adc
mov
rdpmc
arpl
fs
insb
bound
repz
insb
sti
lcall
and
scas
adc
inc
iret
ss
arpl
into
and
push
and
movsl
inc
fdivl
jbe
clc
xchg
cli
xchg
sbb
scas
sbb
lret
ss
rclb
mov
mov
loopne
or
data16
gs
sub
loopne
pop
lret
outsb
ja
xorl
mov
nop
mov
fists
movsb
mul
dec
hlt
xor
inc
jmp
inc
insl
push
addl
xor
test
push
xchg
aaa
loopne
pop
scas
xlat
pop
out
adc
fmuls
mov
das
inc
dec
mov
dec
in
psllw
out
bound
cmpsb
xchg
adc
in
test
xchg
push
dec
jecxz
mov
pop
call
or
jl
stos
mov
fstpl
cmpsb
cmp
loopne
les
add
xor
cmc
test
add
fmuls
mov
stc
lcall
dec
mov
icebp
pop
mov
js
jb
hlt
mov
inc
adc
sbb
shrb
jmp
in
mov
xchg
cmp
push
movsl
adc
sub
fs
and
addr16
add
push
lea
in
mov
cltd
inc
cli
lods
inc
fcomp
in
fwait
adc
xchg
and
and
ds
fsubrs
jmp
pop
or
popa
and
dec
les
popf
out
push
sbb
cmp
jge
mov
mov
hlt
xor
int3
jo
xor
lret
rolb
cmpsl
pop
lock
ja
sub
xchg
sub
jecxz
xor
ss
push
mov
lea
lcall
popa
in
sub
sbb
ds
loopne
aad
out
xchg
addr16
daa
outsb
add
adc
mov
inc
add
enter
fbstp
jne
jge
xor
xchg
enter
sbbl
mov
and
insl
aam
ret
or
sub
rcl
clc
add
cmp
loop
out
mov
repnz
in
pop
cs
add
enter
sbb
les
ss
bound
loop
daa
stc
shlb
lret
mov
cmc
dec
call
add
sbb
mov
or
jae
dec
ja
je
add
das
test
mov
xchg
dec
in
out
inc
dec
cmpsl
cmp
insb
imul
insl
cli
mov
mov
fists
test
outsl
adc
xor
repnz
adc
inc
aad
add
data16
add
pop
mov
cmpsl
lods
or
inc
ds
lds
leave
pusha
xchg
and
jp
mov
jle
je
cwtl
movsl
push
push
popf
aaa
pop
mov
pop
and
mov
ds
stos
inc
push
repz
cld
pusha
imull
dec
jle
adcb
xor
pushf
xor
arpl
pop
cmp
jecxz
in
dec
jp
stos
outsb
jae
mov
rcll
aas
adc
pop
inc
pusha
popf
xor
lea
pop
add
mov
insl
xchg
lea
popf
decb
dec
in
pop
outsl
push
xchg
outsl
mov
pop
and
push
in
xor
xchg
aaa
outsb
mov
scas
pop
pop
sahf
dec
clc
adc
pop
xchg
shlb
jle
push
jo
testb
movsb
and
xchg
int3
push
mov
mov
xor
stos
and
fmuls
push
cmp
or
dec
lahf
jo
ret
scas
pusha
jns
or
xor
adc
data16
cmp
repnz
pusha
negl
stos
loopne
loopne
jp
stos
mov
xchg
cs
fistpll
rcl
mov
mov
mov
add
ljmp
lds
aam
pop
sub
fwait
sahf
es
roll
push
stos
inc
inc
xchg
pop
icebp
ret
arpl
mov
add
fwait
addr16
cli
aad
aas
repnz
xchg
lea
jo
and
cld
xchg
clc
inc
ljmp
push
sub
inc
ret
add
lahf
jbe
lret
sbb
or
or
mov
xor
mov
pop
and
inc
mov
cmp
fs
repnz
shrl
stos
mov
test
jle
xor
into
gs
jge
add
or
xchg
test
adc
lret
adc
cmp
pop
sbb
pop
or
xchg
stos
inc
rolb
mov
notb
mov
xchg
shrl
jl
pop
cmp
push
popf
pop
test
insb
add
loop
mov
or
adc
lds
sub
js
jle
sti
cltd
jns
or
rcrl
jle
fidivrl
mov
mov
sahf
xor
pop
jmp
jmp
jne
lea
decb
mov
dec
pop
dec
in
push
mov
scas
and
pop
lock
scas
xor
out
xchg
push
mov
repnz
pusha
sbb
movsl
jns
mov
stc
out
test
mov
xchg
pop
sub
mov
and
fidivs
scas
outsb
add
inc
mov
imul
xchg
sub
test
mov
jns
loop
sbb
mov
call
mov
aad
cmp
sbb
sti
insl
or
sarl
jmp
int
cltd
add
rcrl
sbb
lret
cmpsl
xchg
es
sub
sub
cmp
and
dec
movsb
jl
fdivl
leave
popa
xchg
stc
orb
repz
push
cmpsl
test
push
movsl
stc
cmpsb
pop
repnz
test
inc
fistpll
cmpsb
cmp
stc
lret
adc
fstp
sbb
imul
cmp
loopne
or
jb
mov
cmc
xchg
pop
lock
jl
fisubl
ss
mov
nop
daa
ret
inc
cmp
pop
mov
adc
jno
pop
arpl
cmp
testb
lods
pop
jge
mov
test
dec
loope
sbb
add
cmp
push
scas
push
hlt
mov
lcall
cmpsb
sbb
call
or
mov
push
adc
sahf
inc
das
add
sbb
mov
out
jg
cmp
add
adc
mov
std
and
lds
mov
sub
iret
xor
test
xchg
xlat
outsb
mov
jb
adc
nop
dec
in
sub
fucomp
jg
jmp
xor
out
mov
mov
adc
jl
popa
jecxz
test
mov
shlb
shlb
enter
loope
insl
daa
fdivrl
iret
int
in
orl
pop
out
loopne
sub
filds
mov
lahf
lahf
xchg
loope
push
aas
pop
cmc
push
das
cwtl
or
enter
dec
sub
xor
and
enter
popa
das
push
mov
jbe
jae
les
in
test
testb
adcl
inc
mov
and
sbb
aam
pop
cmp
pop
sahf
cmp
js
rcr
rorb
outsb
add
fcomi
or
adc
or
jle
inc
shrl
fwait
rclb
mov
pop
adc
daa
sar
mov
jge
or
pusha
test
out
inc
flds
and
jmp
imul
or
cmp
lea
lahf
dec
jecxz
sub
jg
mov
lds
mov
leave
cwtl
or
fcmovu
push
adc
inc
shrl
pmulhw
nop
daa
push
mov
insl
sub
mov
cmp
leave
lock
fmul
data16
js
outsl
mov
cld
xchg
loope
xchg
je
or
mov
aad
es
sub
or
mov
outsl
push
out
stc
nop
aas
adcl
push
jo
cmp
inc
std
xchg
aas
test
loop
sbb
pusha
xor
ret
xchg
sub
mov
sub
mov
testl
call
or
jnp
cmp
xor
aad
jecxz
jbe
mov
ret
mov
and
sub
inc
call
pop
repnz
jb
out
mov
fnstenv
xchg
sahf
jecxz
pop
cmc
adc
pop
mulb
fidivl
aaa
add
inc
lret
or
inc
cmp
cwtl
das
or
jno
clc
fistl
fidivl
and
sub
mov
leave
sub
lret
bound
repz
loop
test
pop
push
jmp
ret
add
adc
or
cmc
andb
mov
push
jno
jle
or
inc
cmp
lods
in
xchg
sub
mov
loope
out
out
repz
pop
out
mov
push
mov
cltd
or
push
sub
xchg
mov
hlt
mov
push
pop
lock
sahf
push
popf
jecxz
adc
push
mov
mov
jbe
xchg
push
mov
push
sti
inc
dec
jecxz
sbb
les
scas
dec
loop
jb
push
inc
jge
roll
mov
push
adc
add
xchg
xor
jg
pop
xor
jecxz
sbb
andl
adc
mov
push
xchg
lea
sbb
add
lods
mov
or
dec
scas
cmc
push
stos
inc
lcall
inc
mov
mov
mov
das
pop
dec
add
imul
add
and
lret
hlt
jno
les
fistpl
pop
pop
rcrb
jno
aam
pushf
je
jnp
in
cmp
sarb
xor
add
ror
mov
fwait
test
popa
rorb
pop
cwtl
int3
insb
xlat
and
adc
stc
and
xor
and
push
cmpsl
xchg
mov
inc
or
or
repnz
inc
mov
mov
cltd
sti
xchg
lret
xor
nop
pop
test
outsb
push
xor
push
mov
imul
jnp
sub
shlb
leave
add
xchg
sub
and
jbe
sub
cwtl
subb
in
mov
jno
mov
xchg
insb
stos
ja
or
add
sbb
sti
stos
mov
addb
lds
dec
sub
js
and
clc
aas
jns
outsb
jne
mov
ret
add
and
add
mov
clc
cmp
mov
js
and
fwait
xor
xchg
mov
xor
jno
jle
orl
mov
add
xchg
mov
movsl
dec
jle
lcall
pop
jne
aas
repz
xchg
in
jns
inc
and
sub
std
lea
aam
gs
mov
push
pop
fsubp
cwtl
les
dec
es
lcall
std
decb
xor
pop
dec
in
and
cltd
fwait
pop
pop
mov
pop
adc
mov
sbb
mov
or
ds
and
lods
repnz
imulb
cmp
pop
inc
mov
icebp
mov
jle
sarb
fcom
jge
push
out
pop
jne
repnz
movsl
stos
enter
inc
mov
out
pop
shrl
and
jecxz
sbb
jmp
jbe
arpl
ljmp
sub
and
cmpsb
push
push
jae
lret
push
mov
add
mov
mov
ret
leave
inc
cmp
rcll
int
scas
add
sub
cmp
repz
popf
xchg
xor
or
sti
ljmp
mov
into
aad
pop
add
pop
movsl
loope
add
outsl
fstps
negb
imul
sub
lret
stos
jp
jno
xlat
xor
jl
push
movlps
xchg
adcb
sahf
roll
pop
iret
mov
out
jl
mulb
mov
lock
subl
ja
test
sub
mov
adc
pop
shlb
cmp
scas
push
std
fs
rorb
outsb
add
cmpsb
push
insl
inc
cmp
mov
sbb
cld
mov
pusha
push
in
je
push
sub
jl
ljmp
add
out
cmp
inc
inc
lret
int3
cmp
add
push
push
fdiv
int
pop
stos
bound
push
sti
movsl
add
push
sti
and
cmp
add
dec
or
adc
pop
adc
fmull
icebp
je
xor
imul
cld
sarb
cmp
sub
test
loopne
loope
and
dec
dec
mov
and
popa
xor
fs
cmp
shrl
xlat
adc
push
cld
in
pop
stos
mov
rcll
lods
fs
sub
jns
add
jb
mov
mov
pop
jp
jmp
lret
mov
mov
std
mov
sub
das
mov
jo
mov
lods
adc
das
mulb
es
and
xchg
mov
mov
aad
addl
cld
xchg
stos
xor
mov
jp
pop
shlb
dec
adc
es
cmp
or
outsb
jecxz
mov
add
movsl
push
ss
push
loope
int3
rorl
add
and
xor
mov
pop
ljmp
jmp
lcall
push
es
and
jnp
inc
in
sub
adc
popa
jae
clc
js
jne
outsl
popa
dec
or
das
scas
and
sbb
sub
neg
adc
mov
and
call
cld
pop
scas
xchg
int
int
push
sti
mov
and
xchg
push
cmp
cmp
dec
inc
jns
stos
call
popa
mov
cmpsl
xor
insb
mov
adc
das
lods
repz
inc
cmp
jmp
stos
in
popa
mov
push
mov
push
cmp
push
call
adc
mov
mov
ja
mov
fstpt
lock
lea
xor
jb
fidivl
sub
mov
adc
fnsave
cli
jecxz
lock
loop
movsb
push
dec
movsb
or
mov
scas
push
jmp
inc
aad
in
jns
rclb
popa
out
loopne
or
push
push
add
lret
outsl
pusha
sbbb
mov
push
hlt
imul
sub
mov
leave
addr16
andl
xchg
xor
out
mov
mov
scas
lds
push
jne
ret
and
test
add
mov
cmpsb
es
rclb
mov
jno
cmp
jbe
add
xchg
into
lods
aaa
push
pop
or
dec
and
cmp
leave
loop,pn
pop
push
ja
enter
rclb
pop
and
scas
fsts
inc
repnz
xor
movsb
mov
add
sbb
mov
push
rorb
push
imul
cmp
sbb
shll
lahf
enter
subb
mov
xlat
out
imul
jecxz
mov
or
and
sub
xchg
pop
insl
dec
fstl
dec
sub
xchg
mov
xor
movsb
inc
out
das
sbb
mov
adc
ds
call
clc
dec
insb
mov
mov
xlat
repz
pop
mov
decl
ds
add
pop
push
rcr
xlat
sbb
popf
mov
sbb
cwtl
dec
fsub
push
cmp
push
repnz
icebp
mov
pop
pop
test
mov
dec
ja
or
shlb
test
incl
pop
jb
into
sub
xchg
pop
in
in
es
std
les
insb
cmp
jo
and
sbb
cmpsb
adc
std
into
loopne
mov
mov
lcall
mov
sahf
xor
cli
xor
xchg
repz
fcompl
push
dec
or
icebp
mov
sbb
stos
inc
and
sbb
push
in
inc
jl
jge
sbbb
xchg
gs
fdiv
mov
out
roll
test
fs
or
outsl
stos
push
xor
mov
les
jne
mov
mov
fcmovne
push
std
xor
mov
mov
bound
ds
push
fistpll
sub
mov
in
lret
cmpsl
push
xchg
ret
mov
fistl
xchg
daa
shlb
sub
loope
inc
adc
dec
lods
xor
bound
shlb
xchg
test
pop
sub
out
imul
adc
inc
pop
sbbb
push
dec
loopne
repz
lock
stos
jecxz
mov
and
push
sahf
and
popa
push
enter
add
mov
and
popa
clc
leave
je
scas
push
ljmp
push
fists
cmp
loopne
out
mov
outsl
stos
inc
imul
mov
pop
insl
add
cmp
fwait
test
mov
push
push
rclb
cmpsl
xorb
dec
mov
mov
xchg
les
faddl
outsb
je
xchg
ret
xchg
mov
mov
shrb
call
push
cmp
imul
pop
in
stos
mov
es
mov
lods
inc
mov
fnstsw
test
mov
xchg
jnp
add
into
aaa
into
lcall
push
dec
sbb
mov
lods
xchg
cs
jge
push
outsb
cmp
test
mov
cld
int3
and
js
fsubrl
iret
test
xchg
insb
aas
movsb
cmp
inc
fcmovnu
jg
arpl
adc
pop
int
mov
xor
push
jg
imul
or
dec
aam
push
iret
data16
jp
dec
daa
push
in
pop
mov
cmc
or
jnp
in
ret
mov
arpl
mov
xchg
and
testb
cmc
jecxz
out
addr16
in
dec
xlat
add
jno
mov
xchg
js
inc
imul
cltd
mov
push
out
movsl
stc
nop
push
dec
dec
in
inc
push
ss
dec
loope
in
test
sarb
push
push
mov
adc
mov
cwtl
divb
daa
mov
dec
loopne
or
and
push
ss
mov
fsub
test
repz
pop
and
jnp
pop
mov
leave
add
mov
xchg
pop
out
sarl
and
divl
pop
out
lea
repz
movl
mov
inc
fldenv
aad
ret
sahf
xor
add
sbbb
leave
sbbl
adcb
xchg
pop
jno
test
int3
pop
ret
js
out
pusha
sub
push
or
jns
sub
insb
pushf
inc
ds
mov
loopne
cmc
cwtl
and
shlb
jno
sahf
xor
inc
mov
iret
data16
dec
lods
inc
push
cmpsb
jge
and
xchg
sub
adc
popf
inc
and
bt
xchg
je
xor
into
arpl
sti
dec
lret
dec
or
in
push
jae
mov
loope
out
sahf
xor
jns
in
inc
jmp
or
call
dec
nop
inc
fcmovnb
daa
stos
jnp
movsl
adc
xchg
mov
fs
sub
clc
pop
test
add
cmp
shrl
mov
push
and
int3
int
int
mov
push
mov
fistps
ror
in
inc
pop
rorb
icebp
jg
imul
mov
popf
mov
out
mov
or
mov
push
or
insl
fwait
mov
icebp
jnp
iret
ljmp
xchg
idivb
or
repnz
pop
sti
ljmp
pop
lahf
ss
loop
jecxz
lret
cmpsb
xlat
dec
cli
cmc
jmp
inc
icebp
out
add
mov
out
sbb
cli
and
mov
inc
adc
xchg
sub
mov
addr16
push
sbb
pop
sahf
shlb
add
sbb
sub
pop
fwait
ret
mov
mov
xchg
sub
aad
push
cmp
xor
pop
inc
fisttpll
stos
test
fnstenv
pop
cmc
mov
mov
adc
dec
add
inc
push
into
rcll
jge
push
xor
and
movsb
sub
inc
mov
mov
pop
lcall
repz
insb
pop
in
jg
jl
xor
xchg
pop
in
aaa
dec
clc
aam
shrb
decb
and
cltd
fbld
mov
jnp
add
jbe
iret
int
scas
jne
mov
sbb
mov
gs
movsl
flds
mov
inc
lea
xchg
jnp
cli
shlb
mov
movsl
cmp
adc
insb
in
fdivrs
divb
aad
ret
enter
bswap
or
sbbb
fwait
sub
je
inc
fcoml
xchg
pop
test
scas
jb
shrb
jge
and
incb
add
rclb
mov
jmp
xchg
imul
mov
popa
xlat
sub
mov
sub
outsb
xchg
xor
push
add
fdivrp
lods
fs
mov
pusha
push
ja
jnp
push
xor
sbb
scas
rcl
lods
shll
lret
dec
push
inc
sub
pop
and
repnz
add
test
imulb
ret
stos
in
fucom
sbb
fstp
cmc
mov
call
push
popf
stc
unpcklps
or
rorl
inc
out
and
inc
aas
imul
jp
mov
cld
adc
ja
popa
add
lahf
and
notl
adc
ss
gs
icebp
sub
push
fisubrs
das
jbe
loop
push
jg
sub
out
mov
rorl
push
les
xchg
std
lret
sub
into
test
cmp
ret
testl
jmp
pop
hlt
jge
add
mov
adc
outsb
sbb
cld
lds
sub
fsubl
fs
scas
mov
lcall
inc
ljmp
jb
jle
rclb
pop
cmpl
into
outsl
dec
cmp
mov
in
hlt
cmp
out
rorb
sbb
pusha
hlt
mov
pusha
imull
xlat
jno
or
mov
jle
daa
xchg
sarb
or
adc
loope
sbb
or
add
and
test
push
sbb
push
push
or
icebp
out
xchg
test
mov
icebp
insl
in
add
jae
lods
adc
push
outsb
push
fcoms
movsb
sbb
mov
aaa
jecxz
ficompl
xor
ficompl
mov
xchg
pop
shrb
push
xor
sub
inc
mov
jb
push
cld
add
push
mov
pop
fcomps
add
mov
es
out
jns
jae
sbb
stos
out
adc
mov
or
mov
xor
sub
xor
mov
xor
movsl
jns
and
xor
scas
popa
cmp
cmp
pop
push
mov
stc
enter
dec
stos
scas
testl
push
sarb
call
lods
dec
in
dec
pop
mov
shrb
push
call
dec
scas
xcrypt-cfb
cmpsl
out
pop
call
dec
ret
fiaddl
orl
mov
push
fmull
test
push
arpl
xchg
sub
pushf
inc
xlat
xchg
mov
insb
bound
les
movsb
mov
fadds
sbb
and
mov
repnz
pop
fildll
cmp
ret
xchg
fs
mov
shrl
gs
arpl
mov
push
jnp
xor
dec
xchg
push
jge
in
data16
repz
push
and
mov
out
push
mov
jl
adc
xchg
xchg
adc
fldl
add
subb
dec
insb
testb
jge
lods
sarb
jge
lea
mov
push
pop
fwait
mov
lret
xchg
outsl
push
lods
mov
jae
test
outsl
lret
jo
andl
repnz
sub
leave
xor
and
adc
push
out
orl
mov
frstor
lock
and
cmp
loope
mov
push
and
adc
out
or
xor
and
pop
pop
sti
mov
jmp
xchg
inc
int
and
mov
in
pushf
add
add
lea
pop
cmpsb
stos
mov
inc
lret
sub
pop
cmp
cmp
cmpsb
sahf
out
dec
mov
les
add
aas
and
sbbl
cmp
inc
push
cld
cwtl
outsb
fisubrl
cwtl
push
movsl
ret
or
push
pop
clc
popa
add
imul
test
inc
scas
adc
dec
popa
mov
and
pop
sbb
mov
add
fmulp
loop
jae
movsb
pusha
imul
inc
test
jo
addr16
pop
pop
outsl
es
jge
jecxz
push
test
jp
div
mov
cld
pushf
sbb
mov
mov
aaa
jl
insl
pop
repz
cli
xor
popf
in
cld
clc
es
sub
push
push
repz
cld
push
js
mov
jl
gs
push
ror
bound
jmp
sub
xchg
into
aad
mov
mov
movsb
cli
cmpsb
push
pop
mov
faddl
jnp
scas
adc
mov
or
inc
adc
xor
aas
mov
cld
sub
mov
pop
out
mov
loopne
or
mov
stos
inc
mov
inc
xor
cmp
call
scas
mov
test
lods
mov
mov
and
and
call
fistps
and
jnp
jp
addb
or
inc
add
movsl
and
or
adc
jnp
jle
add
xlat
cmp
movsl
xor
mov
movsl
ss
sub
test
movsl
pop
pop
push
popf
mov
pop
add
out
push
movsb
in
in
je
inc
cli
jns
fcmovne
and
movsb
pusha
push
jmp
mov
ret
pop
sub
dec
imul
ss
jo
sub
or
xchg
or
pop
aaa
xor
ret
notl
outsl
push
push
das
call
movsl
shll
int3
sbb
inc
fisttpll
in
in
mov
rcll
cmc
xor
inc
add
ds
pusha
jo
mov
mov
cmpsl
mov
or
dec
sahf
subl
jae
mov
test
inc
fiaddl
stos
mov
ret
sub
rcll
mov
and
jp
add
in
cwtl
das
push
insl
inc
pop
roll
in
and
imul
ret
bound
push
stc
clc
and
enter
mov
push
out
data16
int
dec
and
sarb
adc
mov
push
stos
loopne
outsb
add
in
bound
int
test
sbb
mov
add
movsl
xchg
pop
out
in
popa
cmpb
dec
xor
lcall
push
and
inc
loope
push
jmp
add
popa
xor
cmp
fs
inc
adc
addb
push
decl
incl
shl
xchg
sbb
ret
sub
cmp
enter
bound
mov
cmp
sbb
popa
cwtl
pop
sahf
mov
filds
ret
pusha
pop
test
cmpb
int3
cmpsl
ljmp
sbb
jle
adc
loope
xsavec
cmp
add
mov
and
lods
mov
mov
ret
fwait
mov
dec
popf
int3
sub
addb
fstl
lods
dec
stc
lcall
mull
addl
hlt
and
in
lret
loope
or
loop
in
enter
leave
movsb
cld
xchg
ret
sbb
cmpsb
cmpb
test
dec
movsl
mov
lock
push
xchg
sub
sub
mov
repnz
xlat
and
xchg
inc
fs
jno
cwtl
add
outsb
pop
hlt
pusha
in
inc
shrl
sti
dec
push
adc
xchg
push
cwtl
adc
mov
or
mov
adc
jecxz
jae
sbb
cs
dec
daa
scas
inc
add
cmp
sub
icebp
dec
jno
dec
call
into
mov
or
sti
movsb
push
sbb
xchg
sub
xor
jae
daa
pop
pop
jge
test
mov
pop
fs
mov
sub
mov
sub
add
int3
test
mov
lods
mov
push
iret
lea
jbe
sub
and
hlt
inc
pop
pop
mov
ret
ljmp
push
fistpl
mov
add
sahf
mov
stos
pushf
adc
xchg
fbstp
sahf
loope
cli
test
stc
add
pop
pop
cwtl
loopne
stos
adc
mov
aas
sbb
sbb
mov
inc
pop
add
xor
mov
jbe
cmp
cmp
stos
inc
inc
push
push
out
lock
push
cmp
mov
pop
andb
mov
mov
fbld
shl
or
aam
pop
dec
loopne
xchg
xchg
fs
pushf
mov
ret
lods
xchg
jp
lock
jg
imul
mov
fbstp
sub
pop
scas
into
mov
loopne
roll
push
jge
jns
mov
xchg
arpl
bound
mov
das
or
mov
dec
gs
jno
push
mov
xchg
pop
xor
xor
call
test
test
sub
xor
ret
popa
cmp
inc
iret
clc
jno
inc
sbb
jb
stc
cmp
xor
mov
or
mov
and
mov
mov
jno
sbb
or
sub
jbe
sub
ss
lods
gs
insb
aas
popf
aaa
in
in
sarb
mov
aam
adc
jb
push
movb
or
jmp
mov
cmp
mov
and
xchg
jne
add
xchg
jb
xor
jmp
out
ficoms
inc
mov
push
inc
out
add
mov
ds
mov
sahf
test
mov
dec
outsb
dec
adc
iret
mov
loope
loop
sbb
ja
mov
mull
hlt
add
imul
imull
jb
out
pop
push
inc
inc
sbb
div
movsb
cmp
imul
xor
in
enter
inc
mov
cli
int3
xor
jne
xor
mov
mov
movsb
pop
push
sti
mov
adc
jb
cmp
and
orl
xor
fwait
push
cmpl
nop
sbb
xchg
cmp
xor
mov
xor
shlb
outsl
mov
fsubl
cmp
add
loope
mov
pop
cld
movsb
mov
cltd
lcall
push
jl
pop
repnz
push
and
adc
cs
inc
fadds
lds
or
jne
xchg
imul
dec
data16
push
sahf
pop
jecxz
repz
hlt
sbb
sar
push
lahf
divb
sahf
cmpsl
adc
jns
dec
repnz
pop
sub
in
lea
pcmpgtd
addb
pop
cmpsl
mov
push
sbb
push
sub
adc
xchg
sub
or
mov
shl
lret
cmp
aad
outsl
cld
scas
cld
pop
rcr
dec
mov
mov
outsl
outsl
or
mov
loopne
pusha
insb
xchg
jg
repz
pushf
lahf
sarb
outsl
xchg
loop
adc
nop
sarb
dec
and
mov
push
out
sbb
mov
lods
add
popa
xchg
and
or
icebp
and
cmpl
and
fstl
test
imul
daa
push
lods
pop
inc
jo
fwait
lea
cwtl
mov
xor
sub
or
and
push
lahf
sahf
lcall
js
push
test
jmp
sbb
popa
js
les
out
aaa
stos
icebp
lcall
sub
push
outsb
aas
jae
lods
push
and
jle
outsb
lret
inc
jecxz
cmpsb
adc
mov
icebp
xchg
sbb
add
mov
aad
ja
insb
idivb
or
loop
push
sub
xor
inc
sub
test
fdivrs
aam
pop
into
xchg
dec
and
fisttpl
mov
lret
or
sub
xorl
rclb
cli
cmp
add
loope
in
loope
dec
push
add
or
sub
jecxz
outsl
push
xor
das
sbb
in
inc
push
aad
lods
xor
and
mov
or
ffree
dec
sbb
mov
je
int
sbb
pop
stos
movsl
mov
insl
add
dec
mov
in
lea
add
add
clc
pop
jbe
add
dec
xor
scas
fistpll
push
stos
icebp
sbb
push
pop
scas
stos
into
inc
in
fdivl
int
adc
inc
ljmp
mov
cwtl
das
jmp
dec
ds
dec
dec
add
dec
in
jae
aas
push
shrl
mov
add
pushf
mov
into
jnp
jne
std
mov
lea
sub
inc
rolb
icebp
bound
pop
ficomps
aad
jle
jo
push
out
cli
xchg
pusha
icebp
fld1
pop
in
rep
adc
test
inc
jg
adcl
pop
or
cmp
lock
jno
repz
imul
gs
xchg
jb
inc
push
cwtl
cmp
xchg
pop
icebp
push
xor
cmpsb
clc
adc
dec
jno
jl
and
inc
mov
out
and
fstpt
movsl
js
lret
xchg
roll
sbbl
sbb
popa
cmp
or
popf
sub
push
inc
sub
out
test
sti
cmp
out
andl
fmul
pop
lds
sahf
roll
cmp
jns
dec
mov
push
lcall
scas
idivb
and
nop
push
xor
sahf
in
fsubrs
inc
xor
mov
loop
stos
test
adc
push
in
cmpsl
sbb
dec
cli
cmpsb
sub
push
std
mov
je
inc
fstl
pop
lahf
pop
repz
lea
pop
sub
mov
jns
mov
pop
jg
testb
jmp
inc
je
and
pushf
add
sahf
and
repz
push
mov
add
mov
pop
out
std
xchg
dec
fucomi
orl
cwtl
xor
cs
cmc
mov
dec
inc
fistl
pop
cmp
adc
lcall
pop
dec
mov
mov
jle
adc
aam
fisttpl
ret
rcrl
xchg
sub
std
cmc
push
mov
in
xlat
xor
popf
xor
nop
mov
ja
jb
loopne
sbb
mov
xchg
adc
xor
inc
fdivrs
mov
pop
jle
or
insb
add
loopne
inc
xor
push
repz
mov
ficompl
mov
or
cli
lahf
inc
fmull
sub
cmpsl
fwait
sahf
es
push
in
pop
repz
inc
fs
xor
imul
pop
in
mov
fbld
repnz
sbb
jb
rol
push
out
shrb
out
jle
mov
mov
int3
xchg
lock
mov
test
mov
mov
pop
sbb
mov
sub
insb
cltd
insb
push
push
mov
sub
dec
mov
inc
mov
fsubrs
sarb
sub
mov
test
les
jns
cmp
dec
cmp
xor
cmp
push
inc
fstl
aad
push
jae
push
aas
lahf
ss
cmp
dec
mov
inc
fcoml
pop
xorb
dec
mov
daa
mov
xchg
push
push
jmp
mov
xchg
les
mov
or
mov
shll
mov
fistpl
out
sub
jns
sub
lods
lret
lret
sub
jnp
scas
fsubr
pop
mov
aaa
jo
enter
ljmp
pop
inc
adc
insb
arpl
xchg
shrl
mov
and
loope
jns
dec
stos
inc
jnp
call
adc
mov
leave
jne
xchg
inc
lret
add
rorl
push
fcomip
sbb
inc
pop
mov
cld
mov
mov
cmc
sbb
out
jnp
lret
or
pop
pop
enter
daa
push
imul
push
push
inc
imul
pusha
cmpl
mov
cmp
hlt
pop
adc
push
test
jle
xlat
outsb
xlat
lahf
pop
mov
cltd
mov
js
pushf
movsb
cmp
sbb
aas
movq
sbb
outsb
leave
xor
iret
das
push
pop
in
pop
stos
dec
xchg
bound
add
sbb
arpl
loope
push
sahf
mov
cli
sbb
xchg
sbb
sbb
push
push
xorl
adc
imul
add
jno
hlt
and
lahf
xchg
cltd
iret
lretw
mov
mov
push
sub
test
fbstp
xchg
cld
xchg
or
push
out
mov
mov
jo
adc
jnp
jl
shll
mov
mov
bound
dec
push
fcmove
sahf
imul
filds
sbb
xchg
sub
mov
pop
lea
mov
dec
xchg
dec
addl
insb
js
and
arpl
adc
test
mov
outsb
and
stos
fs
ret
fs
pop
or
aad
fisttps
inc
cmp
mov
xor
in
aam
sbb
mov
cli
xchg
lret
fadds
mov
fidivl
repz
ficompl
int3
add
data16
xor
push
rclb
je
or
push
xor
jl
jno
mov
pop
repz
ja
not
xchg
sub
adc
mov
add
cmc
mov
insb
jae
xchg
sub
inc
xchg
pop
cmpsl
idivb
push
orl
ljmp
lods
imul
dec
rolb
push
sbb
xchg
icebp
sbb
or
call
ds
mov
sbb
loopne
pop
scas
add
dec
loope
and
sub
pop
cli
sbb
imul
mov
push
xchg
xchg
cwtl
push
mov
mov
add
mov
les
ficoms
add
xchg
loopne
pop
inc
mov
sub
lods
orb
sbb
mov
mov
xor
lahf
scas
inc
leave
repnz
jne
insb
je
pop
fildl
lret
iret
inc
movsl
sbb
aas
pop
clc
push
jae
pusha
arpl
xchg
int
cmpsl
pop
cmpsb
cmp
mov
inc
fisttpll
adc
dec
icebp
sbbl
pop
or
add
ljmp
lds
rcr
mov
push
incl
lret
aas
adc
mov
fmull
mov
xchg
or
in
daa
mov
push
int
jmp
js
push
stos
cmp
add
cli
lods
sbb
repz
mov
jecxz
push
shlb
or
lds
mov
or
xor
adc
cmp
xorl
mov
jecxz
inc
notl
mov
shrl
les
js
jl
mov
lret
jne
fsubrs
xor
adcb
xchg
cmp
and
in
int
mov
add
cmp
inc
sti
test
and
enter
mov
adc
mov
mov
fisubrs
mov
loopne
xchg
adc
dec
in
adc
mov
lods
pop
scas
repz
out
or
cs
fmull
stos
cmp
std
daa
push
call
dec
jns
adc
insb
add
mov
pop
sub
in
jg
testl
int3
jae
jb
dec
mov
inc
movsl
insl
sbb
sbb
jl
adc
sbb
jbe
sbb
aas
in
push
jno
mov
mov
add
daa
adcl
mov
div
lret
pop
lods
fistpll
dec
mov
orl
popa
out
inc
mov
sarl
mov
nop
push
adc
aaa
pop
hlt
nop
sub
dec
jb
sbb
out
aam
mov
inc
or
cmp
mov
mov
sahf
out
popf
xor
or
mov
add
mov
sti
jl
lret
cmp
js
dec
mov
rolb
cmpsb
push
sbb
push
mov
movsb
push
or
mov
loop
leave
ret
lret
xchg
std
in
out
push
repz
insb
add
fmuls
movsl
in
testb
dec
shll
or
je
out
sbb
daa
adc
jle
jl
fisttpl
jb
popf
sub
or
popf
imul
ljmp
jecxz
aad
jl
pop
cli
mov
jmp
xlat
outsb
bound
mov
xchg
loope
mov
lods
inc
filds
or
cmc
mov
push
add
inc
fstpl
sbbl
push
sbb
icebp
mov
insb
xor
jecxz
push
xchg
sub
cmp
pusha
mov
cld
push
mov
mov
and
cmc
mov
repz
rorb
movsl
xlat
inc
sbbl
lret
mov
pop
mov
fs
mov
xchg
and
dec
loope
inc
push
in
xchg
mov
and
adc
inc
xlat
push
leave
pusha
test
cmp
push
sbb
es
fidivs
cmp
imul
shrl
jmp
mov
repnz
mov
or
sbb
xchg
sub
xor
aaa
mov
aad
mov
mov
lea
sub
jne
inc
fsubrs
mov
into
sbb
cmp
in
movsb
pop
sti
xchg
inc
lds
call
cmp
inc
xlat
dec
sbb
jl
scas
pop
cmc
sbb
push
ds
mov
push
and
insl
add
es
notb
mov
cmp
and
cwtl
pop
sbb
ljmp
stc
jns
es
sub
pop
out
mov
in
push
lods
es
test
lret
fisubl
es
dec
lock
fcmovne
outsb
inc
fdivrs
inc
fnsave
aam
movl
jo
mov
cmpsb
inc
flds
jb
sti
mov
les
mov
xchg
and
xor
negl
push
lods
push
jns
mov
jb
loop
popa
ds
les
movsl
call
or
bound
xor
sbb
outsb
adcb
sbb
aas
data16
jo
sbbl
sub
push
in
pop
dec
insb
add
and
sbb
stc
pop
cmp
pop
mov
cmpsl
call
clc
in
sbb
mov
jmp
or
scas
les
pop
hlt
pop
xor
scas
mov
loopne
sub
lea
mov
jae
fcomi
jmp
or
xor
mov
sbbl
aad
out
xchg
cmpsb
jo
cmc
jecxz
out
mov
mov
movsl
fcomps
data16
dec
in
add
sahf
add
int3
arpl
and
cmc
ljmp
jmp
jns
pusha
sbb
xchg
dec
cmp
add
or
lret
mov
sahf
mov
pop
icebp
adc
pop
movsl
fsubrs
mov
out
xchg
sub
mov
outsl
call
or
icebp
jp
shrl
pushf
sbb
jne
pop
scas
pop
xchg
mov
shlb
cmpsl
ds
push
jmp
inc
test
adc
sbb
pop
inc
out
push
jle
lds
xchg
sub
cmp
je
mov
sbb
push
mov
nop
in
lahf
clc
rorl
sbb
and
int
inc
xor
jne
push
jmp
xchg
push
jmp
aaa
call
xchg
sub
lods
scas
inc
fimuls
int
xor
lret
inc
cmpsl
je,pt
call
in
shll
jecxz
out
les
cmpsb
mov
push
imul
cmp
loop
pushf
mov
daa
push
jmp
nop
fcomip
addl
jbe
sub
adc
movsb
dec
xchg
sbb
orl
mov
pop
stos
xchg
sbb
stos
mov
pop
lods
inc
push
mov
popa
pop
jecxz
sahf
xchg
cmp
cld
push
and
pop
mov
and
movsl
inc
pop
hlt
add
xor
xor
mov
fcompl
out
mov
pop
hlt
test
std
jnp
test
fs
sbb
ss
jge
or
xor
add
stos
lret
pop
mov
xor
cmp
jmp
and
in
xchg
add
test
insb
shll
xchg
lret
lods
movsb
adc
popa
jl
movsl
sbb
out
aas
fnsave
and
das
nop
decl
xchg
call
fwait
in
cmp
or
lds
jg
mov
add
xchg
pop
sub
repnz
cmp
mov
ret
xchg
ljmp
pushf
out
jge
imull
cmpsl
or
add
pop
jae
rolb
pop
sti
adc
mov
xchg
jge
sarl
mov
stc
xchg
add
sub
xchg
mov
mov
pop
scas
inc
aad
idivw
outsl
sti
push
jno
add
fwait
ja
jae
sti
shrb
rorb
add
fisttpll
jp
call
js
or
out
aaa
fstps
repnz
insl
out
data16
sub
xor
sti
sbb
es
inc
fmull
scas
fisubs
cli
loop
mov
iret
out
mov
fsubs
out
ret
pushf
inc
cmc
and
cli
push
inc
fcompl
aaa
dec
sti
cmp
cli
insl
sbb
pop
cmp
sbb
mov
scas
push
les
or
fimuls
es
gs
aad
dec
pop
mov
psubusw
dec
pop
clc
push
add
cmp
push
pop
fsubs
in
xchg
test
sbb
jnp
mov
aaa
out
mov
sarb
popa
clc
sbb
dec
and
pop
xor
push
jmp
xchg
inc
loope
insl
lods
inc
lahf
cmp
data16
lret
add
adcb
mov
sub
ds
sti
mov
pop
sub
cld
push
les
enter
les
and
loop
ret
fistl
xchg
mov
je
loope
dec
jge
fwait
cli
repz
or
and
push
sub
cmp
mov
sbbb
shrl
or
rol
xchg
insb
ret
sbb
cwtl
dec
stos
loope
rcrb
leave
test
cmp
arpl
lcall
cwtl
mov
lods
in
jmp
jb
adc
mov
sbb
cmp
mov
push
jp
stos
es
fsubrs
std
mov
xchg
sahf
pop
in
daa
push
je
rorl
mov
aaa
lahf
pusha
popf
pop
xchg
jp
mov
std
cli
xor
sti
push
and
shrl
in
je
push
shlb
inc
fisttpll
jnp
and
push
ret
addr16
stc
orl
adc
into
in
mov
push
das
mov
insb
loop
js
xchg
mov
mov
das
or
lea
inc
stc
and
movsb
mov
and
and
sbbl
or
or
sbbb
mov
fwait
sahf
add
ljmp
outsb
enter
inc
call
adc
push
sbb
pop
cmp
or
pop
mov
inc
dec
cld
gs
xchg
jb
mov
les
mov
mov
jmp
mov
and
xchg
repnz
add
scas
xchg
mov
lds
mov
mov
lds
out
lods
adc
push
out
std
popf
sub
ret
outsb
add
sub
xor
dec
data16
fidivl
inc
aam
mov
test
sti
mov
mov
mov
stos
push
out
outsl
jnp
mov
dec
jo
clc
and
scas
pop
repz
mov
cld
mov
rol
ljmp
inc
lods
stos
fdivs
outsb
push
ja
test
cmc
cmp
mov
in
ss
xchg
xor
push
add
arpl
jge
dec
pop
dec
lahf
jae
inc
imul
inc
out
xor
outsb
inc
or
mov
jmp
pop
or
ss
rol
add
iret
rep
mov
out
in
push
and
shl
pop
int3
mov
fwait
inc
jmp
xchg
jg
push
out
pusha
jle
and
dec
add
js
repz
sahf
sub
jbe
mov
ret
outsb
xor
lds
cli
xlat
repz
cmp
adcb
jmp
pop
push
mov
addb
and
lea
cld
mov
push
xor
mov
loopne
mov
call
pop
enter
mov
or
stos
and
sti
mov
xor
cmp
pop
mov
sbb
rcrb
mov
popa
cmpsl
jo
dec
mov
xor
push
xorb
push
fdivrl
dec
movsl
jl
xchg
addr16
xchg
inc
clc
adc
out
adc
and
aaa
aaa
lret
stc
adc
repnz
and
mov
jne
mov
lock
and
cmpsb
xchg
inc
movntq
decl
xorb
movsb
mov
sbbl
bnd
and
mov
jmp
cmpsb
jns
leave
push
aam
rcrb
jp
mov
jbe
je
jl
lods
adc
mov
jbe
xlat
fs
push
lcall
stc
mov
adc
xor
or
cmc
inc
dec
dec
inc
out
imul
ret
test
and
inc
sti
push
cli
push
xchg
call
mulb
xor
shrl
add
xorps
stos
xchg
adc
les
test
subb
dec
mov
mov
mov
test
add
hlt
inc
xchg
add
jbe
mov
fucomi
ja
and
jg
in
es
inc
mov
jmp
xor
xchg
inc
sbbl
mov
std
jbe
aaa
push
adc
cmp
adc
mov
mov
cmpsl
sbb
stos
ret
adc
ficoml
and
shlb
test
test
mov
push
loop
in
mov
cmp
adc
xchg
xor
adc
push
dec
xchg
aaa
or
jl
movsb
push
add
ss
jmp
sub
jmp
pop
jge
jge
ja
mov
pop
mov
pop
lock
jno
lds
daa
jb
or
in
lahf
insb
movsb
add
mov
xorb
ja
lret
xchg
movsl
cmp
pop
xor
adc
push
mov
sbb
arpl
mov
sub
mov
or
xchg
pop
sbb
std
pop
imul
xor
jecxz
sbb
xchg
pusha
add
pop
sahf
xor
pop
sub
jbe
popl
cmc
cmp
cli
ret
shll
cmp
test
pop
ds
xchg
jne
sbb
mov
inc
push
aam
xchg
cld
or
sti
test
xchg
js
out
xchg
bnd
xchg
enter
nop
mov
xlat
repz
fidivrl
test
jns
es
mov
ret
xchg
add
insl
mov
insb
stc
je
roll
fxch
xlat
test
sti
jae
in
arpl
and
jns
add
cmp
repz
mov
mov
xor
pop
out
andb
gs
mov
lods
sbb
push
mov
inc
add
rorb
std
sbb
aaa
pushf
sub
inc
stc
popf
in
and
pusha
pop
test
inc
out
jae
aas
inc
ss
xor
mov
fnstcw
pop
loop
adc
nop
std
cmp
in
pop
mov
xchg
inc
jge
push
push
les
mov
sub
xor
or
scas
cld
mov
scas
adc
test
add
push
rolb
jg
mov
lods
push
out
aad
mov
inc
jecxz
inc
inc
rorl
test
xor
nop
fwait
insb
jp
jns
arpl
sahf
lcall
sti
and
in
fdivl
inc
stos
orb
or
cmc
sub
mov
push
test
int
sbb
adc
push
sub
xor
filds
xor
ja
aaa
jns
imul
mov
dec
test
lret
add
enter
push
dec
jae,pt
jb
jo
mov
adc
out
int3
das
cwtl
sahf
pop
fimull
xchg
pop
add
add
stos
into
fcoml
inc
bound
push
sub
outsb
push
loopne
dec
xchg
inc
mov
int
mov
fildll
dec
mov
jle
or
sarb
pop
xor
aad
push
adc
imulb
pop
xor
dec
push
mov
out
dec
and
mov
or
adc
jb
mov
aad
sti
xorb
or
lret
ds
into
pop
lcall
xchg
lods
inc
add
in
ds
inc
into
and
sti
or
add
xchg
lret
outsb
int3
ficoms
movsb
and
lahf
xchg
aad
dec
in
cltd
pop
aam
cmc
ja
or
jns
out
xchg
es
push
sbb
push
fcompl
fdivr
sub
cmp
sti
lret
mov
roll
cmpsl
adc
push
inc
or
mov
xchg
sub
cld
clts
and
lret
add
fbld
stos
outsl
pushf
push
jbe
push
and
mov
rol
or
aad
add
iret
repnz
aas
add
lret
int3
cmpl
js
lds
jbe
jg
jl
cld
pushf
pop
mov
xor
cmp
or
push
pop
imul
idivb
lods
xlat
push
jne
stc
cmpsb
mov
inc
inc
es
cli
cmp
push
fidivrl
fidivs
lret
and
movsl
push
sub
mov
lret
cmp
fimull
arpl
lods
push
push
sub
pushf
data16
jnp
adc
shll
ret
pop
dec
orl
pop
ret
arpl
or
std
add
out
dec
loop
add
inc
fs
and
psrad
test
imul
cmp
ljmp
fcoml
jne
add
xor
inc
in
inc
mov
mov
jne
jmp
cld
aad
inc
sbb
out
sbb
cmp
mov
out
ret
jb
add
add
lods
dec
test
inc
inc
ljmp
inc
pushw
call
fwait
xchg
aaa
mov
jb
and
scas
jge
jns
push
data16
xchg
push
imul
fcomi
push
cmp
pushf
sbb
mov
dec
or
lahf
jnp
jp
sub
jg
stos
jecxz
clc
out
int3
lret
pusha
pop
aad
xor
ja
sbb
cltd
jl
inc
mov
jmp
mov
arpl
xchg
ljmp
sub
pop
xchg
int
ret
pop
ljmp
xor
push
outsl
lods
jg
xor
insl
mov
push
dec
lock
dec
xor
scas
fwait
scas
fbstp
pop
enter
sub
push
mov
les
scas
fdiv
adc
lea
jmp
xchg
inc
dec
xchg
orl
stos
imul
mov
push
gs
mov
fildl
jne
mov
mov
pop
or
movsl
out
jbe
xor
and
scas
jb
xchg
cmp
lcall
rcrl
jmp
repnz
jle
lcall
add
xor
pop
mov
jae
packsswb
mov
xor
es
lock
mov
outsb
cltd
int
pop
jmp
in
insl
out
adc
orl
mov
push
hlt
insb
subl
std
or
mov
pop
mov
push
rorl
fisubrl
mov
mov
inc
cwtl
pop
push
push
roll
sbb
xchg
outsb
fistps
loop
xchg
aam
mov
movsb
cmp
mov
jmp
or
xchg
fdivl
dec
shld
sub
pop
and
cmpsb
cmp
loop
in
cwtl
lahf
lods
sub
push
fadds
mov
lods
pand
in
subl
out
lret
stc
je
dec
insl
std
imul
xchg
push
mov
push
out
or
jge
sahf
test
call
in
in
pop
sti
pop
sub
mov
enter
jle
lods
inc
mov
lods
inc
sub
dec
in
loopne
test
cltd
push
sub
pop
dec
sub
out
xchg
sbb
scas
xchg
inc
pop
push
push
out
movsb
mov
push
movsl
push
mov
fs
lea
daa
adc
cmpsl
in
sahf
testl
mov
mov
enter
pop
call
shlb
pop
sbb
test
aaa
arpl
lods
rolb
adc
stos
aas
dec
mov
mov
sub
xor
jg
dec
fsubrl
sahf
repnz
dec
int3
ljmp
or
fwait
outsl
jnp
aad
mov
aaa
cmp
in
aaa
or
int3
outsb
sbb
scas
push
xchg
inc
sbb
clc
clc
loopne
scas
sbb
hlt
lahf
pop
push
aas
insb
cmp
dec
sbb
add
adc
and
xchg
jg
mov
jecxz
inc
jbe
mov
push
sbb
or
dec
cld
dec
jp
mov
add
repz
leave
and
repz
fisubrs
fdivs
ret
adc
pop
shl
syscall
adc
es
outsl
push
mov
fcompl
cltd
mov
sub
shll
adc
dec
dec
inc
cmpb
mov
stc
stc
push
pop
divb
bound
movsb
cmc
popf
in
fwait
aam
icebp
movsl
xchg
dec
mov
xlat
jmp
cltd
std
adc
jecxz
out
adc
subb
add
cwtl
repz
movsb
xchg
fcoml
cs
adc
jl
int3
sbbl
xor
and
and
add
pop
mov
popf
cmp
mov
sbb
pushf
into
cmp
cmp
mov
and
lods
xor
ljmp
inc
ljmp
xor
lods
pop
outsl
daa
aas
jp
ret
cwtl
mov
rorb
jb
mov
decl
pushf
mov
cltd
jns
jne
les
loopne
cmc
and
outsl
mov
pop
cmc
outsl
add
dec
xchg
push
fs
scas
pop
xchg
enter
fiadds
stos
jb
inc
dec
sbb
in
lds
stc
or
jmp
ljmp
fisttpll
stc
movzbl
pop
mov
sbb
cmp
clc
sahf
pusha
inc
xor
inc
jns
fdiv
add
or
jno
movsl
jae
cmpb
sbb
test
mov
and
mov
outsb
mov
out
xor
push
daa
jmp
sub
jo
lods
mov
push
fdivrp
inc
xchg
loopne
xchg
xchg
mov
push
fiadds
shll
sub
in
push
dec
jo
hlt
jle
mov
sahf
cmp
cmpsl
jno
je
adc
stos
jl
add
rcrb
jl
scas
stos
lods
cmc
mov
add
jl
jmp
xchg
sbb
loop
clc
mov
scas
jne
and
jl
fnstenv
cltd
sub
testl
push
in
sub
into
cmp
test
loope
js
push
pop
add
pop
cmp
mov
or
xor
loop
add
les
xchg
adc
orl
jg
fs
sub
test
mov
pop
movsl
xorb
cmp
icebp
sbb
adc
push
mov
pop
lock
or
xchg
add
loopne
pop
xor
mov
fimuls
mov
fucom
xor
mov
xor
mov
xchg
xor
sbb
xchg
std
into
sub
fcompl
sub
lcall
call
push
mov
addr16
lret
dec
adc
test
and
insl
mov
cmpsb
fidivrl
lods
in
mov
cmp
pusha
inc
mov
or
fs
rcr
sbb
roll
es
pushf
mov
ljmp
pop
push
lret
sbb
jae
mov
mov
insl
jnp
or
jmp
push
mov
repnz
sbb
nop
shrl
jecxz
fdivr
negb
mov
es
and
gs
fwait
sub
mov
push
mov
mov
insb
lret
aad
sub
shll
mov
stos
mov
xchg
data16
lret
shlb
inc
push
cwtl
nop
fld1
lahf
pop
out
xor
mov
jns
mov
or
jp
iret
xchg
leave
and
adc
mulb
sub
lds
mov
loope
insb
push
lahf
aad
mov
push
xchg
aaa
dec
or
sub
clc
mov
fnstsw
lcall
or
mov
mov
push
test
clc
push
ljmp
jb
popl
mov
stos
lea
jecxz
cmpsl
pop
sub
jnp
jae
sahf
mov
sbb
mov
xchg
pop
daa
sbb
outsb
pop
jae
mov
xor
lret
aas
xchg
cli
cmp
insb
arpl
mov
arpl
shll
mov
testl
dec
jg
inc
xor
daa
jmp
mov
in
pop
jmp
or
pop
jae
mov
push
xor
frstor
adc
cli
pop
mov
xor
addr16
notl
data16
mov
mov
push
jne
imul
adc
popa
sub
iret
jge
or
push
and
call
aaa
rorb
out
adc
out
mov
mov
into
and
inc
cwtl
lods
scas
adc
das
dec
stos
mov
or
sti
lret
lret
sbb
or
inc
popa
add
lcall
cwtl
cmp
out
insl
lret
outsl
dec
add
mov
jno,pn
fdiv
movsb
sbb
xchg
jge
lods
pop
mov
jecxz
pop
test
mov
add
pop
imulb
jmp
push
jge
inc
pop
inc
pop
mov
sub
lods
or
test
aam
sub
push
xor
push
data16
shlb
dec
fldcw
sbb
ret
fldcw
pop
lock
fbld
jg
jmp
loope
push
fsubr
push
mov
xchg
inc
fcmovb
into
in
inc
addr16
adc
in
mov
cmp
mov
dec
push
cmp
scas
add
jno
fcomp
jae
les
clc
mov
push
outsb
xor
in
loopne
sbb
adc
mov
stos
jmp
or
jns
ror
gs
leave
dec
fnstsw
insl
loopne
js
push
ljmp
jno
mov
mov
ljmp
shl
ljmp
add
or
gs
loopne
cmp
imul
lds
pop
jns
subl
inc
fistl
or
fs
and
in
push
lret
lahf
gs
pop
adc
leave
lock
push
scas
pusha
or
jmp
sbbb
lcall
rol
das
repnz
repnz
scas
ret
insb
push
dec
or
push
add
scas
and
mov
push
mov
mov
jae
inc
sub
stos
test
add
test
push
orl
pusha
lods
movsb
out
sahf
fyl2xp1
scas
inc
sub
jecxz
inc
dec
xor
subl
pop
xchg
mov
adc
mov
sbbb
rcr
jo
lcall
fistpl
add
je
jg
fidivrs
mov
sub
and
inc
mov
mov
aaa
cs
inc
sarl
jnp
out
mov
loopne
xor
aam
adc
pop
insl
cmpsl
cld
popa
fidivl
ficompl
ljmp
pushf
lret
jb
testb
mov
lahf
push
js
dec
out
mov
hlt
dec
mov
fsubl
insl
mov
push
hlt
mov
insb
xchg
xor
push
cltd
ret
push
mov
and
dec
inc
fidivrs
mov
adc
cmp
xor
mov
mov
les
mov
push
cli
mov
adc
mov
ja
pop
es
mov
add
adc
dec
aas
dec
sahf
jecxz
sub
mov
cmp
adcb
sarb
mov
in
push
es
idiv
das
inc
pop
adc
das
cmp
jp
lea
jmp
aam
pop
ret
or
in
push
out
insb
mov
dec
shrl
mov
dec
push
int
cmp
xor
push
stc
nop
mov
sbb
fwait
scas
dec
mov
and
and
add
mov
test
add
gs
jae
push
into
mov
dec
adc
mov
mulb
adc
dec
in
cltd
mov
aam
xchg
cmp
pop
movsl
xchg
popf
outsb
repnz
mov
ret
and
push
jb
pop
repz
insl
jg
ret
jp
dec
inc
fbld
jge
xchg
sub
imul
test
mov
xor
inc
lds
jp
mov
int
cmp
inc
cmp
ja
sub
xor
jns
fimuls
mov
inc
mov
in
mov
jle
adc
call
add
sbb
jg
jl
icebp
adc
jnp
push
scas
repz
loopne
push
mov
cli
xor
xchg
pop
inc
aas
cmp
lock
xchg
pop
xor
sti
fs
scas
jmp
and
add
adc
jg
pop
xlat
jae
rol
sbb
imul
imulb
movsl
ljmp
arpl
rclb
loopne
sub
pop
xor
inc
cli
xchg
cs
out
sub
out
mov
lds
dec
fsubl
sub
push
mov
mov
faddl
es
cmp
jg
lea
xchg
sub
or
and
push
inc
fildl
xor
negb
loopne
dec
pop
push
ljmp
jno
lahf
fwait
outsl
jnp
sti
adc
movsb
mov
mov
fs
test
call
sbb
xor
test
mov
pop
enter
cwtl
jbe
fs
dec
jb
aaa
and
js
stos
mov
mov
jb
popa
ret
mov
ds
adc
cld
fwait
cmp
fcoms
icebp
fmul
inc
fadd
pop
or
gs
jle
mov
aad
fdiv
mov
cmp
out
cld
or
push
cmp
lods
int3
lret
es
lcall
jle
mov
aam
lret
sbbb
lds
std
mov
pop
jno
inc
cmp
pushf
xor
mov
push
xor
push
sbb
pop
push
out
fs
cmp
mov
mov
loope
push
dec
pusha
shl
push
call
cltd
aad
mov
adc
ss
out
or
fdivrs
data16
pusha
mov
cmp
cltd
das
sub
pushf
push
scas
dec
mov
dec
stos
cli
pushf
test
pop
stos
shll
push
mov
dec
or
repnz
pop
mov
dec
mov
test
enter
les
jp
shrb
mov
or
mov
and
int3
icebp
sub
cmp
pop
inc
fmuls
fs
xchg
notb
inc
sbbl
cmpsl
sbb
pop
jbe
push
push
je
xchg
and
lahf
push
dec
shld
push
inc
mov
gs
cmp
lcall
mov
add
lds
sbb
subb
add
add
mov
pop
dec
data16
fwait
sbb
inc
pushf
aaa
insl
pop
jo
pusha
adc
fcmovb
add
xor
dec
mov
jg
adc
add
std
icebp
movsl
sbb
divl
shlb
ss
dec
cmp
push
outsl
mov
mov
mov
dec
mov
mov
mov
lret
loope
cmp
jle
push
in
mov
enter
mov
push
pop
inc
das
mov
popa
fs
movsl
and
push
and
inc
sub
out
arpl
ret
pop
daa
add
or
decl
xor
in
xchg
push
lods
mov
xchg
sub
or
dec
push
out
jle
mov
lods
xchg
jo
or
fs
push
out
cmp
loope
pop
cltd
or
sbb
adc
xor
shll
pop
aaa
faddl
les
fwait
sbb
mov
and
inc
filds
sub
xchg
sti
sbb
xor
push
inc
je
or
cmp
inc
fisttpl
popf
shll
fdiv
jg
pop
lock
mov
mov
repnz
rorl
pop
mov
loop
fcmovbe
dec
jecxz
loop
adc
dec
loope
xchg
lds
out
movb
fisttps
rcll
aas
pop
je
clc
aas
dec
sbb
sub
bound
jmp
dec
scas
out
movsl
pop
jmp
sub
or
lock
dec
data16
jnp
cmp
jbe
jp
mov
jo
clc
ficomps
jge
add
sub
cmp
cmp
pop
push
add
adc
js
lods
shrb
lret
imulb
xacquire
or
ret
mov
jle
dec
pop
ds
test
rcrl
sbb
jg
push
xor
lret
push
sbb
push
setbe
mov
pushf
das
repnz
dec
rcl
aad
insl
pop
dec
stos
imul
cwtl
and
add
sub
jecxz
lods
sbb
add
pop
xor
or
es
push
test
in
pushfw
divl
inc
leave
pusha
jns
arpl
fs
clc
push
jno
sbb
mov
mov
aad
adc
aam
das
inc
pop
add
push
fs
aam
ja
ja
fcompl
push
add
rcl
pop
lods
xchg
dec
sbb
outsb
push
and
and
push
dec
and
test
mov
inc
test
mov
pop
mov
and
cli
sbb
adc
outsb
sub
popf
inc
lcall
loop
jmp
jno
or
xor
mov
mov
jl
stos
pop
adc
stos
lods
jle
push
mov
inc
cwtl
push
loope
stos
adc
lods
cmpsb
push
jbe
mov
out
mov
or
aaa
mov
js
lea
cli
cmp
lds
sti
or
cmpsl
xchg
sub
sahf
les
stc
scas
test
loop
lods
leave
pop
hlt
cli
pop
adc
leave
bnd
mov
pop
adc
les
mov
imul
adc
cmp
inc
xor
loopne
and
jp
dec
std
and
sub
jb
stc
int
test
pusha
or
push
add
pushf
lods
sti
shrb
into
arpl
loopew
cwtl
sub
out
stc
es
js
mov
cmpsb
jnp
decb
sbb
mov
fmulp
iret
xchg
in
or
je,pn
cltd
call
lods
std
mov
mov
cwtl
xchg
sbb
xor
cmp
jg
dec
xor
add
xor
jge
xor
and
fidivl
or
rcl
adc
sub
and
lods
push
cltd
dec
roll
jae
mov
fwait
mov
ret
mov
fs
xchg
mov
fs
inc
jmp
xchg
test
mov
add
xchg
call
sbb
jmp
aaa
adc
or
js
inc
out
and
roll
test
or
push
add
xchg
pop
dec
pop
mov
add
jl
mov
lods
mov
stc
daa
arpl
and
push
xchg
daa
jp
xchg
cmp
pop
in
cmc
into
or
out
es
stos
xor
xor
fcmove
fimuls
leave
fxch
cli
mov
not
xor
mov
stc
lods
cmp
lods
inc
push
negl
add
sub
gs
jb
movq
inc
pop
xor
dec
mov
aaa
fsubrp
es
in
mov
push
ret
imul
fwait
xor
jp
imul
scas
sti
xchg
loope
je
push
mov
out
sahf
mov
add
imul
dec
sub
mov
and
stos
fisubl
pop
leave
test
jbe
mov
xchg
aam
movsb
push
test
and
fs
or
movsl
mov
and
sti
mov
pop
popa
clc
aad
addl
or
out
pop
psraw
fwait
sarb
dec
jp
jns
stos
ret
cli
inc
or
popf
xor
mov
in
leave
mov
ss
sub
sbb
in
add
hlt
mov
mov
into
ret
mov
fsubs
mov
jmp
xor
sbb
adc
mov
mov
rcr
shrl
fstl
daa
mov
ret
movsl
add
repnz
mov
add
pop
mov
es
pop
in
into
ja
or
cwtl
push
in
andl
and
sbb
jae
into
xor
aam
and
cmp
pop
push
jl
fwait
jle
pusha
mov
pushl
addb
test
iret
mov
orb
int3
into
test
mov
fwait
and
pop
adc
jns
ja
in
mov
adc
test
divl
sbb
ds
adc
rorb
lret
push
adc
jae
cmp
pop
pusha
lods
pcmpgtw
enter
rcr
add
xor
in
clc
gs
leave
cmp
flds
pusha
sub
outsb
xchg
js
in
dec
and
and
je
cli
dec
cwtl
xor
pushf
xchg
andl
in
mov
scas
jns
decb
xor
xorb
fildl
hlt
xor
ja
cwtl
mov
aam
mov
pop
out
cmpsb
jne
pop
xor
subl
or
subb
lods
sahf
jge
enter
gs
test
daa
es
ret
stos
inc
jns
mov
lock
inc
xchg
inc
xchg
add
test
in
pop
enter
jo
sbb
push
and
dec
popf
dec
jns
adc
and
jns
mov
dec
xchg
pop
pop
pop
push
and
sub
push
popa
or
fsubrl
cmp
inc
xchg
jge
mov
loopne
jnp
add
push
or
sti
inc
je
xchg
add
adc
mov
iret
cmp
jge
mov
iret
lcall
sbb
stc
loop
fldenv
inc
add
cwtl
out
jb
lret
mov
test
lret
adc
push
out
dec
sbb
idiv
sahf
cmp
repz
jb
ss
int
xor
mov
jmp
or
push
inc
ljmp
scas
popa
or
cmp
jg
dec
sbb
and
iret
xchg
pop
jmp
fidivrl
sbb
xchg
sub
rorl
jns
mov
xchg
or
or
inc
test
mov
inc
inc
xlat
jb
loope
popa
cmp
addl
repnz
jl
movsb
popf
outsl
cld
pop
int3
jle
stos
je
xchg
xor
push
data16
enter
test
xlat
int3
push
test
fdiv
iret
mov
movsb
jg
loopne
add
shl
adc
adcl
cld
in
add
cmp
mov
adc
mov
iret
push
jne
clc
xor
or
push
inc
pop
dec
sarb
push
aam
lods
add
cmp
daa
in
gs
xchg
aas
iret
dec
popa
add
pop
xor
cmp
cltd
inc
sbb
xor
jnp
or
hlt
mov
add
sub
in
nop
push
push
sbb
mov
pusha
ja
push
mov
cmp
jle
xchg
dec
cmpb
dec
inc
in
int
push
das
jno
gs
and
dec
pop
fmuls
xchg
dec
ja
sub
sub
push
add
adc
fstps
adc
lret
or
scas
jns
sub
outsl
divl
out
xchg
fsubr
inc
test
jp
outsl
xlat
int
mov
push
jnp
dec
xchg
sbb
or
mov
adc
fwait
jno
mov
mov
cs
push
adc
and
and
clc
push
xchg
or
cwtl
jae
sub
mov
mov
sbb
scas
adc
xor
insl
inc
sbb
popf
xlat
stc
nop
and
pop
mov
dec
imul
sarl
movsl
mov
or
pop
dec
sarb
sbb
cltd
jnp
or
lahf
mov
adc
ret
outsl
adc
dec
mov
xor
push
ror
int3
mov
addr16
pop
push
sbb
les
testl
sbb
xor
jno,pn
nop
mov
dec
pop
das
xor
xchg
xor
push
xchg
jmp
daa
sahf
fisttpl
mov
aam
cmp
addr16
sbb
std
int3
sub
mov
lcall
cmp
dec
je
imul
mov
inc
insl
subb
jae
lods
and
daa
in
mov
cmpsb
mov
or
stos
and
cld
xlat
outsb
das
lcall
cwtl
pop
stos
xchg
sarb
lahf
xor
pop
jno
adcl
add
and
and
imul
scas
les
iret
daa
pop
lret
dec
xchg
addr16
mov
xor
aad
jae
fdivs
call
push
into
xor
test
rol
mov
pop
pushf
or
jb
sub
and
pop
lret
jle
inc
sbb
mov
out
mov
adc
into
fildll
test
sbb
ror
ja
enter
dec
nop
mov
dec
repnz
test
mov
pop
cmp
or
insb
aas
add
aad
cmpl
loope
sbb
stc
out
mov
xchg
mov
cld
sub
outsl
jne
je
sub
sti
jbe
add
ljmp
sbb
lahf
push
inc
mov
stc
call
sub
sbb
inc
hlt
cmpsb
cmp
xlat
hlt
loopne
scas
je
and
sar
les
cmpsl
dec
movl
sar
lahf
dec
jg
cmpl
jp
das
frstor
xor
xor
and
jb
xor
dec
in
inc
cltd
xchg
stos
repz
test
push
les
mov
mov
sti
mov
pushw
rcrb
outsb
sbb
jecxz
inc
jnp
lods
ds
outsl
int
idivb
jge
sub
ret
jp
mov
test
sub
pop
mov
mov
push
outsb
mov
add
std
xchg
fwait
stos
dec
icebp
loope
ret
xchg
mov
out
stos
mov
push
sbb
xchg
or
mov
neg
daa
or
aas
and
jmp
or
sub
js
adc
gs
pushf
arpl
lcall
lret
jp
rcrb
add
sub
mov
in
mov
inc
jne
jns
sbb
and
and
addb
pop
mov
push
jne
shll
jmp
sti
jle
sub
adcb
xchg
leave
add
lahf
stos
inc
imul
cmpl
enter
mov
icebp
xchg
jmp
hlt
pop
and
in
pop
and
lret
idiv
jmp
out
lahf
es
pop
cmp
aaa
shrl
push
and
mov
mov
adc
adc
icebp
sbb
inc
mov
mov
sahf
xor
imul
test
insl
or
cmp
inc
xlat
sbb
push
das
scas
stc
aad
cwtl
das
movsl
jl
arpl
mov
orl
push
insl
dec
jle
pop
add
dec
sub
sbb
adc
xacquire
rorl
push
mov
mov
fmull
imull
pushf
and
mov
cmp
cld
inc
in
ret
dec
xor
mov
push
pop
repz
jp
push
les
sub
shr
cmp
cmp
dec
pop
cmp
inc
popf
cs
cli
stc
adc
loopne
dec
pop
pop
mov
mov
call
or
add
inc
jecxz
push
arpl
pop
inc
leave
adc
cli
inc
jno
inc
pop
ja
fwait
cwtl
mov
rcll
pop
outsb
shrl
test
mov
dec
sub
fists
ret
repz
and
pop
lock
aas
loopne
shrb
ja
mov
sbb
leave
or
cmp
inc
cmp
fdivr
ret
cmpsl
xchg
sub
sub
mov
ret
lret
pop
pop
fisubl
ja
mov
sbb
shll
and
popf
xchg
inc
stos
inc
jbe
mov
jmp
fs
fwait
cwtl
out
push
aaa
subb
arpl
and
push
pop
jne
xchg
daa
popf
or
push
mov
scas
inc
lock
arpl
ja
push
arpl
adcb
imul
ja
mov
sahf
mov
int3
stos
mov
mov
addr16
sub
lock
into
jecxz
inc
lcall
rcrl
jnp
push
mov
push
pop
add
adc
push
in
xor
ja
pop
testb
sub
pop
or
pop
insl
aam
fistpll
fisubs
mov
fldl
and
iret
adc
mov
add
and
sbb
and
sbb
mov
lock
xor
es
add
inc
pop
movsb
and
pop
movsb
pop
bound
and
mov
mov
adc
nop
movsb
dec
or
pop
fcomip
repz
mov
adc
xchg
andb
xor
pop
insb
nop
adc
fadds
jnp
adc
cmp
cwtl
sub
push
xchg
jns
stos
and
lret
push
or
in
shll
data16
fxtract
pop
add
mov
mov
lcall
mov
mov
leave
and
and
loopne
mov
out
in
push
pop
sti
int3
push
gs
dec
mov
das
dec
mov
xlat
sti
cmc
mov
adc
lahf
pop
mov
nop
stc
sti
addl
and
fists
lret
xor
add
pop
insl
add
and
jne
sub
cs
cmp
dec
movsl
fdivrl
push
clc
ss
aam
inc
bound
repnz
dec
lods
repz
lahf
test
pop
inc
popa
jg
test
mov
aam
inc
inc
fsts
xchg
data16
push
jbe
pop
notb
ljmp
xchg
imul
mov
mov
in
xchg
pop
push
arpl
dec
cmp
into
xor
mov
out
jb
mov
enter
inc
repz
and
adc
jl
or
or
push
sub
sbb
adc
mov
push
jne
gs
adc
push
dec
ss
in
push
mov
test
cmpb
jnp
fwait
lock
fidivrl
mov
jnp
xchg
stc
xchg
mov
fwait
aad
sbb
testl
add
notb
stos
daa
mov
mov
int
int3
les
xchg
jnp
xchg
sar
ds
and
ss
mov
in
and
jne
je
adcb
subb
sub
pop
pop
stc
xchg
xchg
xchg
xor
les
xor
pop
cmpsl
scas
dec
mov
xchg
add
mov
aaa
iret
jnp
les
dec
xchg
dec
xor
push
inc
cld
test
inc
sbb
insb
es
xor
inc
xchg
mov
sbbl
call
sub
inc
frstor
or
nop
bound
xor
mov
xor
scas
repnz
push
mov
lret
mov
adc
testb
hlt
or
push
jae
inc
or
movsl
sbb
popf
jo
pop
aaa
push
cmc
in
xor
mov
repnz
jb
test
mov
inc
cmpsb
xlat
rcrl
inc
popf
jno
bound
mov
aam
sub
xchg
les
icebp
lods
sbb
sub
cmp
adc
sti
or
cld
pop
lret
int
sbb
fmull
stc
std
push
insl
add
sbb
add
imul
fucomi
arpl
movsb
and
addr16
inc
mov
xor
add
cmp
paddb
jne
xchg
ss
cmp
inc
insl
xlat
lods
xchg
cli
pop
popa
clc
lea
dec
mov
fsubrl
mov
xor
sub
and
das
pop
mov
hlt
ret
xchg
movl
cmpsb
mov
movsl
inc
add
mov
pushf
xor
push
push
jns
jmp
leave
test
pop
xchg
inc
pop
repz
pop
jecxz
push
add
mov
jmp
jo
jo
call
stos
mov
jno
xchg
into
repz
or
cmp
cld
pop
jnp
jns
pop
pop
popf
sbb
lcall
scas
notb
jne
sbb
cmp
aas
imul
dec
nop
lfs
fidivl
and
and
sahf
cmpsb
arpl
adc
ljmp
sarl
fstl
cmp
and
inc
jno
jns
pop
xor
insb
add
add
loop
idivb
add
inc
lods
mov
out
sar
jl
xor
xchg
enter
add
adc
mov
test
fldl
call
idivl
mov
ret
js
insb
shll
lea
movsb
jp
scas
imul
adc
ljmp
repnz
aad
movl
inc
adc
out
push
xlat
push
testl
pop
jb
ss
dec
mov
insb
insl
imul
mov
xchg
xchg
pop
shlb
adc
aaa
test
movsl
iret
movsb
repnz
mov
adc
adc
mov
jo
xlat
sbb
negb
cmp
hlt
insb
jmp
hlt
dec
mov
add
jb
sub
stos
xchg
inc
fldcw
int
lcall
and
loope
push
and
leave
fsts
jle
call
pop
sub
mov
xchg
test
push
adc
cs
pop
out
mov
cmp
insb
cmc
sahf
xor
xlat
and
and
ret
loopne
inc
cmp
push
std
js,pn
and
fwait
mov
fisubl
adc
into
sbb
leave
push
add
mov
xlat
sbb
mov
push
cmc
push
scas
xchg
push
sub
cmp
xor
pop
lahf
push
xor
jge
cmp
jns
sub
pop
cld
dec
add
cs
shrl
jl
repz
xlat
pop
add
sahf
cmp
aas
insl
jge
add
jo
inc
sbb
jge
xor
dec
sbb
jle
add
out
mov
addr16
jns
or
mov
fxch
push
push
scas
inc
xchg
scas
jae
js
int3
fsubp
cltd
testl
pop
aad
xchg
jmp
repz
stos
and
cmp
lods
adc
cmpsl
mov
and
cmp
push
push
call
or
add
xor
int
pop
jp
jl
jl
subl
or
pop
cmp
push
movsl
aam
xor
popf
xor
cmp
fdiv
leave
mov
aad
in
mov
xchg
xchg
js
dec
or
imul
xor
jl
add
scas
mov
loopne
inc
mov
cld
outsl
out
daa
lret
mov
xchg
adc
popf
push
daa
test
or
pushf
inc
rclb
imul
mov
pop
rorl
test
sbb
dec
fnsave
mov
xlat
outsb
sub
inc
push
or
lds
lods
push
adc
push
jp
fmuls
xchg
mov
cltd
je
test
xlat
outsb
cmpsl
je
mov
lea
push
lret
sbb
inc
cmp
int
jbe
gs
scas
push
sub
adcl
lods
cli
fisttpl
adc
adc
rolb
out
lret
and
push
pop
shlb
jne
imul
adc
jae
scas
xchg
mov
or
push
mov
cs
fucom
ja
jbe
xor
cmp
inc
bound
jmp
jne
loop
mov
lds
test
enter
mov
push
fxtract
enter
lods
xrelease
fwait
sbb
repz
sbb
push
fwait
adc
mov
mov
outsb
push
test
mov
aad
cmpsl
mov
jge
mov
add
movsb
xor
mov
dec
add
out
or
pop
in
jp
subb
insb
push
sbb
inc
lahf
ss
arpl
jecxz
popa
scas
cmp
jne
lret
mov
loopne
ljmp
jno
and
sbb
outsl
inc
stos
inc
xchg
xchg
leave
and
fcmovu
mov
loope
hlt
and
adc
sub
aaa
inc
fcompl
sbb
mov
jmp
das
mov
ja
add
mov
mov
jge
insb
inc
jae
stos
int
dec
in
out
loop
mov
ficoml
push
hlt
test
sbb
sar
shll
dec
outsb
leave
popa
aas
jp
fmull
add
add
jp
mov
push
pop
mov
mov
scas
mov
mov
fcoml
jne
sub
in
jne
in
sbb
inc
jl,pt
das
jmp
das
addr16
shrl
pop
adc
enter
sti
pushf
and
cmc
loopne
add
xorb
dec
jne
push
or
sti
push
sbb
sub
and
xchg
add
or
xchg
adc
rolb
vpaddsb
scas
sbb
push
into
sbbl
insb
add
inc
xchg
js
push
inc
sbb
lret
shlb
mov
nop
stos
cmp
lahf
sbb
pop
mov
pop
insb
outsb
fs
inc
imul
insb
xor
imul
add
or
lea
scas
imul
xlat
aam
aad
mov
or
leave
int
xchg
cmp
pop
data16
testl
mov
adc
testb
cmp
add
inc
clc
cmp
ds
or
jl
loope
lret
sarb
loop
lds
adc
es
jecxz
inc
push
in
xor
in
jne
sub
mov
xchg
and
or
test
push
jp
inc
jl
jmp
fildl
xor
jo
sub
mov
dec
pop
lahf
out
imul
pop
in
jge
cmpl
mov
mov
call
shrl
jl
and
mov
mov
inc
rclb
das
add
out
into
mov
mov
adc
fstpl
sub
cmpsb
cmp
push
inc
in
shr
dec
mov
add
xchg
repnz
mov
aas
adc
mulb
aad
js
imul
or
cli
mov
push
adc
mov
popa
mov
push
sub
loop
xchg
ret
pop
jb
inc
mov
push
push
xor
not
add
fucomp
and
pop
mov
aam
xor
idiv
push
lods
div
mov
push
addl
lock
sbb
pop
xor
cmc
mov
jmp
adc
js
mov
insb
sbb
jne
outsb
in
xor
in
jmp
cmp
cwtl
fbld
popf
xlat
cli
xor
mov
push
roll
xor
xchg
push
icebp
xlat
push
cltd
push
dec
pop
xchg
js
fs
es
es
push
pop
fldl
mov
xchg
mov
push
je
test
xchg
clc
adc
or
sbb
mov
mov
mov
push
xor
rorl
mov
push
or
enter
scas
ss
movsl
jp
xor
lock
sbb
sahf
pop
icebp
test
cltd
out
cmp
xor
movsb
into
mov
rorb
pop
lahf
jmp
push
fnsave
mov
test
xchg
mov
xchg
stc
push
pusha
std
xchg
push
out
sub
fistpll
sbb
cmpsb
xor
stos
gs
psllq
xor
cwtl
and
mov
jle
in
ret
ja
jp
int3
dec
and
add
fldcw
or
lods
repnz
lahf
cmp
and
adc
es
or
jae
inc
cmp
in
addr16
dec
xchg
mov
or
cmc
jecxz
xchg
push
mov
push
outsb
jg
or
and
lds
dec
es
into
sbb
inc
push
mov
andl
inc
aam
sbb
push
ret
les
in
xchg
or
fidivl
inc
and
movsl
push
daa
or
test
or
mov
stos
subb
ret
loopne
mov
insl
inc
aam
lahf
mov
mov
push
imul
mov
lret
repz
icebp
push
jae
movsb
aaa
sbb
lods
fs
int3
sbb
outsl
aaa
adc
out
jae
xchg
shlb
xchg
and
pop
aad
paddd
pop
test
adc
cmp
xchg
and
jp
mov
ds
adc
jle
mov
cmp
das
xlat
fsubl
or
jnp
int
mov
sub
imul
mov
enter
ss
into
cmpsb
sarb
aad
es
stc
or
sub
ljmp
das
jge
outsl
out
pop
cmc
adc
and
mov
dec
test
rcrl
out
cmp
cmp
cmp
in
movsl
ja
out
sbb
push
dec
mov
test
inc
int3
jg
mov
imull
pusha
pop
lds
cmp
pop
xor
push
aaa
fistps
fs
iret
fs
clc
and
add
rorb
jecxz
les
mov
push
dec
jg
mov
dec
pop
sub
dec
jns
add
int3
and
insb
xchg
xlat
xchg
push
push
inc
cmpb
mov
or
dec
cmp
call
add
push
test
mov
leave
mov
sbb
mov
jg
fs
jo
jb
push
cmpsb
rorl
mov
jae
push
xchg
mov
mov
inc
fldpi
inc
push
idivb
mov
dec
mov
int3
cmpsl
clc
outsl
repz
adc
sbb
jo
and
push
xchg
stos
lret
sub
mov
xor
cmp
mov
cmp
push
xor
mov
bound
mov
fildl
test
iret
push
dec
pop
xor
shrb
ss
cmpsb
xchg
cs
jl
sub
fwait
addr16
pushf
insb
lahf
arpl
cmp
mov
and
addr16
push
cwtl
xor
cld
push
leave
jmp
dec
fs
xor
subl
xor
xchg
es
popf
sbb
fstl
push
out
sub
das
fidivl
add
stos
sbb
mov
mov
aad
jnp
or
mov
cs
jmp
fs
aas
sbb
int
sbbb
out
pop
ds
lea
xchg
rolb
xchg
repz
xor
xor
sahf
sahf
mov
jecxz
mov
test
cld
and
jge,pn
pop
inc
stos
es
mov
add
or
push
inc
fidivs
ror
jecxz
stc
adc
leave
xchg
das
push
cmp
ret
lret
lret
sub
jbe
test
aas
roll
add
pop
add
popf
inc
inc
subl
pusha
mov
push
imul
adcl
add
mov
and
mov
push
cmp
shl
cltd
inc
fcmovnb
jl
mov
leave
adc
jge
lret
pusha
pop
pop
dec
adc
call
in
mov
push
call
cmp
or
fidivs
pusha
or
add
jbe
cmp
leave
and
sti
repz
sbb
mov
cmp
imulb
jecxz
inc
sub
mov
adc
xchg
jno
adc
mov
int3
and
inc
ret
lods
mov
aaa
add
lds
xor
jecxz
aaa
mov
sbb
lret
cmpsl
in
addl
lds
pop
pop
inc
stos
pop
out
sub
ja
ja
jbe
adcl
js
movsb
mov
adc
push
add
rcrb
jno
jae
dec
sub
pop
dec
nop
push
dec
in
xchg
dec
fs
xchg
xchg
insl
cwtl
ret
cwtl
cmp
out
add
pop
ja
fildll
push
adc
cmp
push
pop
sti
nop
pop
inc
nop
fldenv
jns
shll
xchg
jns
insb
mov
jge
mov
sub
enter
sbb
inc
popa
addr16
sbb
push
inc
cli
nop
popa
xor
and
leave
and
loope
in
fisubrl
es
or
xchg
and
inc
add
sbb
jge
inc
dec
movsl
dec
adcl
pop
loope
cmc
pop
repz
cwtl
hlt
mov
push
or
dec
mov
test
testb
lret
sbb
mov
les
mov
dec
int
sbb
fscale
subb
push
mov
ja
add
dec
mov
out
shll
frstor
insb
xchg
push
sbb
ret
test
in
pop
lcall
loopne
mov
add
mov
push
clc
inc
es
mov
ficoms
int3
lret
or
leave
jns
pop
out
sbb
ljmp
ret
push
loop
mov
das
and
test
cwtl
cmp
out
repz
xchg
cmpsb
imul
inc
xchg
xchg
leave
in
push
mov
inc
push
push
jno
jb
cmpsb
xchg
std
les
dec
xor
fmul
adc
cli
stc
lock
add
xlat
mov
push
jne
pop
cmp
jg
repz
jmp
push
pusha
or
nop
and
pushl
dec
or
dec
mov
out
aam
loop
clc
mov
mov
inc
gs
inc
mov
pop
insl
js
mov
shrl
or
jp
scas
push
add
int3
mov
and
cli
ja
mov
movsl
push
mov
jo
xor
adc
dec
lcall
cmp
mov
addr16
cmp
cmp
mov
rorl
shrb
adcb
jecxz
test
xor
mov
mov
arpl
jl
addl
mov
adc
xor
pushf
xor
test
in
push
aas
xchg
push
jns
scas
in
mul
push
nopl
mov
outsb
or
cmc
dec
pop
add
rorl
mov
push
sub
adc
andb
outsl
daa
inc
es
ja
adc
loope
mov
test
iret
jno
into
cwtl
das
rorb
pop
xor
mov
aam
outsb
mov
aad
and
adc
xchg
jno
mov
mov
lcall
sbb
hlt
dec
orl
cmpsb
fcoml
pushl
pushf
pop
shll
jmp
dec
mov
sbb
cmpsl
enter
push
xor
mov
adc
je
repz
cmpsb
ds
cltd
ds
hlt
xchg
and
mov
mov
inc
clc
push
mov
je
std
arpl
mov
jecxz
mov
pushf
or
aam
and
aas
adc
push
xchg
sub
shl
jb
mov
pop
and
add
cli
mov
inc
xor
xor
jmp
leave
int3
jl
mov
xchg
mov
outsb
inc
pop
iret
cmp
daa
sbb
sub
or
test
inc
fists
lret
push
mov
pop
or
shlb
data16
add
or
xchg
pop
and
push
cmp
int
adc
xchg
jge
fwait
lods
inc
sub
fcmovne
les
daa
ss
lahf
stos
dec
call
xor
movsb
cli
outsl
ret
push
lods
jg
insl
loopne
pop
sbb
scas
mov
sarb
icebp
dec
pop
add
xor
pop
popa
push
push
xchg
add
fdivs
addr16
in
fnstenv
xor
stc
jl
pushf
xor
aad
xchg
fnstsw
xchg
loope
das
ja
and
mov
into
pop
outsl
mov
cli
sbb
cmpsl
adc
dec
adc
ret
ret
and
shlb
ret
outsb
dec
and
lds
popf
cltd
shrb
push
xchg
ss
pop
into
insb
insb
add
and
insb
sub
fstpt
sahf
js
sub
pushf
xor
inc
mov
add
test
out
test
and
and
popa
scas
out
sbb
stc
inc
and
mov
ficoms
add
inc
inc
jae
pop
sahf
in
pop
jg,pn
push
jl
mov
push
push
xchg
inc
inc
into
scas
cltd
xor
mov
loop
jle
hlt
mov
in
sarl
rcl
sbb
imul
push
xor
add
inc
lods
pop
les
std
adc
in
out
adc
cmp
out
adc
and
fiaddl
cs
and
int
jmp
ret
fsubrl
addr16
icebp
rol
out
pop
sub
in
jbe
and
mov
mov
jo
stos
mov
fdivrl
sarl
ja
xchg
lods
lret
xchg
mov
outsb
int
repnz
mov
ret
sbb
dec
xchg
pop
test
setnp
test
xor
out
inc
dec
stos
mov
lahf
mov
push
jl
ds
clc
outsb
imul
mov
pop
test
push
mov
stos
xor
movzwl
test
push
sahf
lods
inc
ljmp
sahf
and
scas
push
xchg
cmp
dec
cmp
mov
jb
pop
dec
mov
fdivl
jl
iret
mov
test
sub
inc
xchg
mov
or
stos
pop
je
movsl
jg
leave
mov
ret
cli
push
lret
xor
imul
and
and
lds
mov
inc
add
fsubs
jb
cld
pop
fwait
inc
mov
push
inc
lods
inc
jae
push
mov
mov
aad
push
sub
imul
mov
ss
lds
in
fwait
stos
cmpsb
cmc
mov
ret
call
fnstsw
sub
xchg
subl
sahf
popa
js
rorl
mov
jge
stos
out
andb
xlat
insl
cli
and
cmc
mov
dec
adc
fdivs
scas
mov
mov
fildl
xor
fnstcw
call
int
idivb
enter
sarb
pop
pop
jecxz
xchg
jno
fs
mov
es
aad
decb
notl
test
loop
xor
mov
xor
xorb
ds
push
jl
in
cmp
insb
adc
cmp
addr16
rcll
out
bound
sti
add
mov
fisubs
push
mov
aas
adcl
jge
lret
jnp
arpl
stos
xchg
sub
bound
stos
inc
cmc
or
movsl
pop
ficoml
stc
test
jne
daa
es
movsl
inc
aas
fimull
test
lcall
rcl
mov
add
out
sahf
shlb
call
aam
mov
dec
cmp
ret
fstpl
fs
xchg
cmpsl
mov
xor
out
cmpsl
outsb
jmp
enter
push
jno
lret
xor
mov
ja
out
std
sbb
xchg
mov
add
fisttps
adc
testb
jge
insb
scas
push
and
cmp
aam
cmpsl
ds
arpl
jg
repnz
shlb
dec
pushf
dec
mov
mov
inc
cmc
inc
mov
clc
adc
cmpsl
ds
pop
repnz
sub
or
in
test
seta
jl
xor
mov
add
adc
enter
sti
lock
mov
push
pop
stos
adc
mov
pop
push
into
fs
xorl
imul
popa
lcall
mov
shrb
sbb
inc
pop
dec
mov
add
pop
sbb
jne
insl
fmuls
ret
xlat
fsubrl
push
sub
icebp
lcall
aad
xor
mov
mov
cmpsb
xchg
add
or
and
sbb
iret
arpl
stos
jge
push
or
add
enter
xor
cmp
inc
sbb
mov
fmull
sub
push
lods
add
add
and
in
inc
cmpsl
pop
cmp
int3
inc
lret
sub
mov
scas
aas
ljmp
sub
repnz
or
sub
push
xor
lods
mov
fildll
push
mov
cmpb
sahf
adc
mov
leave
lock
and
xor
mov
mov
repz
push
fwait
adc
jp
das
add
nop
mov
filds
push
je
aad
jmp
pop
and
loopne
clc
xchg
push
fdivl
xchg
rcl
lds
pop
xchg
lret
jg
push
test
dec
lcall
mov
inc
add
mov
inc
sahf
sub
insl
dec
fistpll
stc
popf
dec
daa
lretw
push
nop
jo
mov
and
sbb
scas
jp
push
fstl
clc
inc
stos
sbb
or
cmpb
pop
scas
push
lods
mov
jb
add
das
ret
idivl
dec
inc
cltd
aas
mov
sub
sahf
push
lret
xchg
mov
sbb
int
fwait
js
push
out
inc
cmp
jl
cld
lods
pop
cmp
xlat
dec
mov
mulb
lret
push
sub
sti
mov
fadd
sub
add
adcl
pop
dec
sub
out
cmp
sahf
cmpsl
jo
xchg
sbb
stos
mov
fwait
ss
adc
mov
call
hlt
or
in
jae
push
jno
mov
mov
and
pop
or
shrl
jo
iret
lds
imulb
clc
inc
cmpsb
outsl
and
or
lods
sti
enter
sbb
fcompl
sbb
jns
fimuls
xor
fnsave
imul
jecxz
test
add
jbe
sub
fsubrp
cmc
mov
adc
mov
add
divl
mov
xor
pop
add
in
jl
xchg
mov
fistps
adcl
and
cmc
notl
daa
push
or
push
popa
jg
xchg
cmp
adc
mov
xchg
sti
test
jae
cltd
cwtl
xchg
mov
xor
dec
mov
dec
lcall
fucom
loop
pop
add
jge
xlat
add
and
lea
insb
scas
sbbb
xor
mov
test
repnz
or
fildll
fisubl
pop
insl
lahf
or
call
jg
movsb
pop
ret
fistpll
push
and
rorl
xlat
jbe
push
mov
sbb
mov
insb
call
jno
in
mov
mov
insl
xor
loopne
leave
call
mov
push
xchg
push
xchg
jmp
mov
or
jmp
mov
xor
mov
mov
faddl
add
mov
shrl
ret
xorb
jo
fs
jno
jns
pop
inc
enter
fldcw
dec
loop
cli
fdiv
and
adc
jg
popf
stc
test
ds
scas
xor
je
push
int
push
sub
and
out
and
sti
push
leave
pushf
ja
push
mov
pop
pushf
xchg
dec
dec
cmpsb
les
dec
or
jae
push
popf
pushf
push
lods
inc
push
fidivl
cmovb
push
std
mov
sti
xor
xor
cmp
ja
sti
sub
insb
lret
add
add
pop
pop
mov
cmpsb
jno
dec
es
and
or
cltd
dec
jnp
inc
pop
jl
dec
mov
mov
insb
call
adc
sbb
bound
add
mov
mov
cli
jg
xchg
push
lret
lret
fimuls
ja
stos
rclb
fcmovnu
int3
adc
add
cmpsl
fs
outsl
out
cmc
mov
fldl
test
or
xchg
cmc
xchg
xchg
dec
adc
int3
cmp
push
jmp
xchg
aad
push
js,pn
adc
daa
popf
test
sbb
iret
or
es
jecxz
xor
xchg
sti
ficomps
sbb
xchg
and
sub
sbb
gs
int3
pop
mov
mov
push
hlt
dec
sbb
dec
cmp
jp
cmp
sbb
jbe
into
mov
ljmp
loop
dec
and
mov
icebp
adc
fldcw
mov
int
js
sti
sub
push
pop
cmp
push
push
push
cmp
rolb
add
bound
mov
push
repz
pop
int
xchg
pusha
pop
filds
mov
xchg
mov
pop
ja
int
cmp
test
jge
scas
fdivrl
add
js
sub
inc
xor
xorb
fs
mov
xchg
jb
dec
inc
xchg
push
movsb
jns
rcrl
icebp
stos
jbe
rcl
and
arpl
cld
xchg
mov
rcrl
cltd
mov
jnp
pop
cmpsb
pop
out
jl
lods
out
test
inc
sbb
sti
ja
mov
mov
test
cmpsb
daa
sub
pop
iret
iret
mov
lret
and
aam
adc
sub
out
cmp
test
jg
adc
pop
fmull
fldln2
ret
add
push
ljmp
push
inc
mov
and
push
pop
jbe
int
outsb
xor
or
outsl
push
sahf
outsb
clc
stos
push
in
dec
in
sbb
dec
sbb
insb
add
pop
cmc
adc
ret
sub
mov
cmp
or
fs
sarl
sbb
xorl
mov
dec
push
dec
or
lds
adc
rcrb
das
push
ficoms
jecxz
sarl
call
das
xor
gs
jne
pop
mov
pop
cmp
dec
and
ss
dec
fcmove
in
push
ljmp
popa
cmp
call
xchg
lret
movsl
lret
or
loope
add
adc
popf
sarb
inc
fisubl
aaa
aad
add
in
push
aas
push
jmp
iret
inc
jo
xor
lods
or
cmp
lods
sub
icebp
xchg
aad
xchg
sbb
cs
mov
adc
insl
outsl
mov
pop
je
and
popa
cmp
and
dec
inc
and
mov
fcomps
or
addr16
cmp
add
iret
cs
push
iret
mov
daa
int3
sahf
adc
aam
ret
or
mov
bound
sub
pop
sub
jg
clc
push
jae
dec
cmp
xchg
movsl
cmp
and
cwtl
aam
ds
cmp
sahf
push
shll
nop
ss
xor
nop
in
scas
or
adc
sarb
in
fs
xlat
push
nop
and
cmp
fsubrl
dec
jne
data16
xchg
ret
xchg
lods
push
je
rcr
dec
mov
mov
insb
mov
outsl
daa
or
push
js
pop
imul
sub
pop
fwait
jg
das
inc
mov
sub
fs
inc
stc
ds
cmp
jge
pop
rcrb
add
pop
mov
mov
xor
jo
pusha
fcmovnbe
insb
or
lret
xlat
fsub
jbe
mov
mov
xlat
mov
push
pop
cmc
test
xor
dec
pusha
icebp
cmp
mov
inc
test
sahf
pop
repz
ret
repz
or
stc
pop
icebp
sub
mov
addb
test
adc
inc
and
or
xor
or
fisubs
sbb
jnp
mov
dec
add
shll
imul
lock
sub
sti
dec
loope
jp
mov
lret
inc
inc
fidivl
cmc
inc
out
inc
lods
inc
lods
dec
cs
add
pop
inc
or
mov
xchg
mov
ljmp
sub
dec
xchg
call
sub
bound
inc
stc
push
loope
xchg
movsl
fldcw
xchg
jg
cmp
lods
push
je
out
xor
sub
mov
push
outsl
push
pop
cmp
loope
notb
push
sub
movsb
push
inc
or
push
jae
mov
daa
lahf
lock
jnp
adc
ja
orb
clc
and
arpl
in
jg
out
fldl
or
inc
dec
aas
imul
dec
fmuls
es
and
mov
jl
gs
addr16
lahf
std
inc
mov
or
daa
push
push
xor
aaa
inc
popa
pop
enter
fwait
mov
mov
imul
xor
aam
push
dec
add
outsb
aas
ret
xchg
out
pop
cmpsl
lret
cmp
das
push
add
repz
xchg
jae
mov
dec
jmp
ret
lret
roll
jo
lret
dec
lahf
mov
adc
in
jmp
test
push
out
mov
lods
or
mov
or
rcrl
push
mov
sbb
iret
mov
imul
dec
mov
mov
popl
inc
push
xor
xchg
sbb
ret
and
ret
stos
inc
mov
sub
psubsb
mov
leave
lret
cmp
test
decl
cmp
adc
mov
cmp
loope
dec
pop
inc
enter
mov
or
mov
pop
imul
pop
sarl
and
pop
out
scas
push
push
xor
push
mov
stc
imul
lea
or
jmp
xchg
dec
dec
xor
fstl
push
test
inc
or
cmp
xchg
and
mov
jno
or
adc
leave
loopne
subb
add
pop
popa
lret
scas
inc
js
fisubl
lcall
fsub
dec
pop
sbb
gs
xor
jge
sbb
cs
and
xchg
roll
mov
and
or
dec
push
dec
bound
jg
out
ret
inc
xlat
jnp
stos
xchg
hlt
sbb
xchg
adc
and
out
jmp
fldt
and
cmp
lds
lahf
stc
add
xor
imul
push
mov
imul
mov
mov
in
insb
mov
mov
cmc
pop
pushf
aad
aam
in
lock
pusha
push
xchg
sbb
sbb
rcll
mov
out
or
xchg
adc
bound
adc
jbe
xchg
test
popf
cwtl
movsb
js
push
stos
add
xor
out
pop
jno
pop
sti
dec
or
push
pop
movsb
int3
jae
sub
cwtl
pusha
test
adc
sub
scas
mov
push
dec
add
pop
je
andl
adc
jge
and
xchg
fsubrl
movb
jae
sub
mov
adc
adc
mov
movb
xor
dec
push
pop
sahf
testb
sub
cmp
pop
cmp
pop
xchg
rorb
xchg
popf
je
std
lods
mov
inc
fsts
cmpsb
bnd
repz
cmp
sbb
jecxz
push
inc
pop
cwtl
or
lds
call
sub
or
dec
cltd
mov
mov
sbb
add
mov
shll
ret
hlt
shlb
out
adc
gs
push
sub
add
rolb
push
mov
int
pop
xor
imul
xor
aad
decl
fisubs
push
sbb
mov
rcrl
es
test
int
mov
aas
inc
cwtl
sub
jmp
cli
jge
lock
aas
ret
inc
push
jae
insl
or
jne
sbb
cmpsb
rorl
test
pusha
lret
loop
sub
or
arpl
jns
idivl
imul
and
dec
push
or
push
pop
xor
out
jb
or
das
ret
or
fnstenv
xor
sub
movsl
leave
push
mov
dec
adc
and
cmp
cmp
pop
jbe
stc
data16
fimuls
cltd
fnstsw
popa
outsb
ja
cmp
mov
xor
bound
cmp
test
add
add
inc
movsb
les
ja
adc
xor
inc
dec
mov
sbb
icebp
xchg
pusha
xor
daa
adcb
decl
xchg
cmp
out
out
fcoms
inc
mov
fstps
cmp
push
sub
push
dec
sub
sbb
sahf
cmp
jp
jbe
cs
data16
into
or
cmpl
mov
out
and
push
imul
lret
mov
loopne
and
into
jle
loopne
or
pop
fstpt
push
add
sbb
popa
jb
mov
sub
roll
cli
sbb
out
cld
ret
jle
aam
fisttpll
mov
pop
arpl
sahf
mov
rcl
imul
repnz
repz
dec
test
add
dec
jbe
test
add
mov
sub
rclb
pop
pop
jno
or
arpl
arpl
js
jne
mov
sbb
xor
jae
das
xchg
lret
pop
test
add
mov
xor
xor
bound
sub
jno
negl
in
in
test
mov
jne
cmpsb
cs
mov
mov
mov
enter
xor
out
pop
lahf
sbb
shrl
mov
inc
cmpsb
nop
lret
adc
and
cli
adc
sbbb
addb
cmp
mov
xchg
cmpsl
cmp
inc
pop
lret
aam
adc
pushf
jbe
jbe
andl
jl
push
pop
out
push
imulb
je
repnz
inc
pop
test
scas
daa
jns
call
sbb
jo
lahf
adc
mov
rcrb
cmpsl
mov
lret
js
xchg
lods
jno
scas
adc
push
int3
fnsave
dec
leave
ret
adc
out
xlat
mov
mov
fwait
sub
pop
xor
cmpsb
jecxz
icebp
adc
sub
int3
dec
outsl
pop
dec
push
push
dec
pop
xchg
push
add
pop
jno
xor
gs
arpl
rcll
inc
arpl
cmpsl
sbbb
cmc
frstor
pop
xor
sbb
imul
insl
popf
scas
push
sarl
push
getsec
clc
push
test
jno
sbb
mov
arpl
cmpsl
outsl
repz
add
aad
pop
mov
stos
movsb
lahf
or
iret
dec
jno
fcmovnbe
test
mov
xlat
test
jae
pop
rorl
jbe
sbb
push
jno
arpl
adc
fxch
cs
xor
sbb
je
xor
xchg
mov
sbb
ds
or
loop
mov
cmp
push
pop
popa
and
lret
sbb
aam
fisttps
push
mov
je
cmp
rcll
pop
sub
rorl
inc
lret
jo
pop
loop
stos
adc
imul
mov
cmc
lea
ficoml
outsl
sbb
jae
mov
ja
enter
pop
push
pop
fcomps
lods
and
cmp
push
dec
dec
mov
ljmp
add
in
clc
or
pushf
xor
mov
sbbl
or
xchg
in
adc
mov
test
pop
jne
out
out
adc
gs
mov
insb
movsb
vfrczpd
mov
cld
stos
les
mov
les
scas
jnp
into
lods
sarb
stos
xchg
dec
stos
jns
mov
xchg
sub
ljmp
lcall
pop
fs
mul
mov
jge
loopne
cltd
out
inc
pop
xchg
enter
mov
cmp
xchg
jbe
pop
in
in
pop
rcr
or
test
cmp
jmp
or
cmpsl
ficoms
call
mov
sub
jp
adc
push
jo
xor
dec
ret
aaa
leave
pop
mov
leave
mov
push
jns
push
enter
ss
jg
dec
cmpxchg
or
and
push
arpl
xorb
pushf
dec
int
mov
stos
xchg
pop
ja
dec
xchg
xor
sub
stos
dec
shll
lods
inc
pop
ja
dec
dec
push
int
xchg
mov
ret
pop
push
outsl
cmp
loop
fsubs
xchg
stc
mov
es
daa
jmp
adc
add
jge
adc
sub
sbb
cmp
add
gs
push
jns
popf
lock
lcall
add
mov
adc
or
push
insb
jle
mov
mov
orb
mov
js
push
imul
add
mov
lahf
outsl
or
aas
outsb
adcb
add
fsubrl
sahf
and
pop
xor
pushl
cmp
outsb
lret
repnz
int
lods
adc
xor
insl
movb
pushf
mov
pop
xchg
loopne
iret
mov
aam
gs
lcall
lods
jo
js
outsb
xchg
mov
mov
insb
fstpt
dec
push
adc
fildl
mov
sbb
mov
and
loop
xchg
iret
gs
dec
aad
in
push
mov
and
cld
ja
xchg
mov
pop
imul
mov
xchg
mov
and
repz
or
in
jo
mov
add
adc
int
cmp
insl
stc
xlat
mov
int
outsl
insb
scas
scas
mov
loopne
testb
add
mov
jle
sbb
or
sti
inc
dec
test
lret
or
call
out
pop
int
movsb
dec
or
jo
int3
cmp
sarb
or
mov
dec
xchg
dec
or
fidivs
jae
inc
push
sub
jmp
cltd
fsubr
xor
push
sahf
add
pop
sti
imulb
add
add
mov
sbb
out
push
and
adc
mov
pop
inc
call
push
aam
cmp
call
or
push
mov
push
test
xlat
pop
dec
loopne
je
out
xchg
cwtl
scas
arpl
xchg
iret
xor
inc
xor
je
movsb
das
leave
lds
adc
sbb
in
clc
adc
test
push
dec
jb
jle
in
sbb
inc
cwtl
jl
xlat
sub
cmp
repnz
scas
mov
mov
test
mov
push
aad
jp
outsb
mov
repz
lds
pop
sub
sti
scas
into
pop
pushf
cltd
inc
std
push
test
cvtdq2ps
adc
loop
enter
inc
xlat
aas
int3
arpl
das
mov
into
jge
movsb
and
fisttps
es
and
jmp
mov
pushf
mov
inc
dec
fistpll
clc
or
data16
cld
xchg
sub
scas
sbb
push
arpl
negb
jns
mov
sarb
cwtl
test
sbb
add
in
lods
or
outsl
pushf
int
or
push
repz
inc
push
outsb
push
adc
mov
fstpl
aad
fcmovb
cmp
cmp
push
repz
push
gs
jmp
jbe
pop
jge
mov
aas
push
stc
arpl
inc
stos
imul
push
jg
test
push
ljmp
popf
jb
sub
pusha
imul
jns,pt
inc
bound
jle
jno
push
stos
mov
fdivl
adc
enter
ret
inc
adc
dec
dec
dec
out
pop
lret
rcrb
shrl
and
sbb
fcoml
and
adc
cld
movb
sbb
subl
lret
and
pop
inc
lcall
cmp
mov
mov
notb
sahf
scas
pop
sbb
or
bound
ja
or
xchg
test
cwtl
mov
push
negl
lds
mov
jp
dec
fisttpll
jl
cmpsl
lods
push
push
or
mov
and
xchg
test
daa
xor
fcomi
sbb
cmp
sub
lret
fs
int
and
lods
and
out
fisubrs
xor
sbb
sarl
mov
sbb
mov
and
ss
pandn
enter
xor
inc
xchg
ljmp
xor
inc
in
dec
mov
cmp
cs
mov
mov
push
outsl
add
push
scas
fsubrs
iret
lcall
cmp
inc
fnstenv
test
cmp
push
cmc
leave
mov
cmp
jl
fisubrs
xlat
jl
mov
repz
jp
jge
pop
adc
mov
aaa
into
fs
bound
roll
pop
mov
inc
fdivrl
cmpsl
push
jmp
aaa
pop
shll
push
mov
movsl
fcmovnb
out
cmp
jbe
dec
mov
xor
je
cmp
add
dec
pop
inc
cmp
mov
xor
jno
sti
push
adc
sub
cmp
je
aam
and
add
pop
pop
mov
and
pop
inc
les
mov
mov
inc
dec
add
lcall
clc
dec
arpl
iret
or
inc
cld
pop
sbb
out
and
add
lahf
shlb
pop
test
dec
cmp
cmp
mov
dec
ffreep
js
insb
outsl
dec
dec
xlat
cmp
imul
sbb
cmpsb
sbb
jno
je
cmp
fimull
scas
dec
pop
addr16
jg
lock
or
es
or
jl
sbb
adc
ds
fistpl
roll
fwait
and
cli
push
pop
shrl
jg
stos
movsl
xchg
inc
add
xor
xchg
sub
fadds
mov
dec
cltd
sub
and
shr
call
int
mov
std
movsl
xor
cmp
jmp
pop
dec
push
dec
push
xor
push
xchg
xchg
ss
daa
dec
rcll
jbe
mov
ja
add
cwtl
jge
xor
ja
xor
andl
cld
jge
test
out
xchg
addb
sbbb
mov
push
aaa
xchg
cmp
push
xor
imul
pop
mov
push
imul
inc
adc
iret
ja
pop
cltd
push
stos
adc
push
or
sbbb
push
jecxz
fmul
call
jle
lods
scas
add
mov
xor
dec
pop
pop
mov
popf
mov
sub
pop
cmc
out
insl
lret
mov
mov
iret
mov
cmp
clc
cmp
jbe
inc
cltd
cld
outsl
pop
fdivrl
shll
jge
push
iret
and
daa
nop
jge
pop
lea
fdivrl
mov
and
sub
adc
out
xchg
ljmp
movsb
jno
testb
jmp
out
xchg
pop
mov
pop
jbe
push
daa
jnp
aaa
mov
fldt
inc
cmpsl
lcall
mov
repnz
cs
lret
xchg
push
jne
push
xor
popf
push
pop
mov
cmp
sahf
push
xchg
adc
enter
aam
cmp
xor
cli
clc
sub
lea
jnp
mov
rcrb
jg
pop
xor
nop
in
enter
jecxz
and
lods
stc
mov
mov
lods
adc
test
pop
adc
pop
mov
test
mov
cmp
cmp
nop
pop
xor
scas
or
sti
test
fistps
sub
daa
in
popf
popa
leave
adc
push
jbe
ret
outsl
imul
ret
and
cmpsb
cmp
cmpsb
or
xlat
cmp
cwtl
stos
push
jo
jb
pop
outsl
inc
in
gs
inc
fsubrs
aas
mov
and
popf
call
jbe
cmp
imul
fnsave
orb
xchg
dec
shll
mov
jno
shrl
sar
sbb
mov
fsubrs
test
mov
lret
testb
ss
call
aaa
jnp
push
mov
cmp
sbb
testl
out
and
sbb
lods
out
jg
stos
inc
call
xor
dec
rclb
sub
ljmpw
mov
or
cld
out
arpl
shll
insb
add
stos
mov
add
sub
sbb
test
loop
outsl
dec
dec
mov
jle
or
dec
shlb
stc
xlat
loopne
mov
xor
sbb
hlt
sbb
sbb
loop
sbb
mov
sbb
ficoms
lret
mov
outsl
pushf
xor
sbb
adc
xor
ja
xlat
lods
mov
adc
inc
fisubs
mov
les
testb
stos
push
test
jo
ljmp
pushf
or
jp
mov
cld
subb
push
mov
addb
or
inc
repnz
cmp
int3
data16
jae
adc
test
xchg
pop
sub
cmp
xchg
jns
or
jecxz
mov
int3
add
push
ret
cli
xchg
jecxz
lods
pop
sub
xor
xor
mov
mov
adc
movl
sub
jo
dec
cmp
out
test
sub
mov
adc
insb
jae
iret
sbb
mov
scas
and
or
rcl
pop
sub
data16
clc
lds
jmp
sar
mov
mov
dec
sub
ds
cmp
test
xchg
adc
xchg
cmc
adc
mov
xchg
lahf
sub
push
add
dec
int
es
pusha
inc
jo
cmp
push
neg
sbb
push
jne
jmp
xchg
aad
xor
popw
or
gs
shll
mov
stos
xchg
repz
mov
mov
pop
pop
imul
rcrb
pusha
inc
xor
sub
push
mov
test
push
adc
push
shrl
lcall
orb
and
xor
jg
popf
inc
imul
sbb
pop
jo
imul
mov
mov
lahf
sti
inc
leave
mov
xchg
xor
jmp
mov
jmp
out
xchg
loopw
aas
jae
cwtl
addr16
test
xor
or
jbe
mov
fiadds
and
mov
popf
adc
cli
cmp
sub
fcoml
cmp
aam
adc
fldenv
mov
les
repnz
sahf
xchg
ror
imul
fimull
mov
push
jmp
inc
xlat
xor
pop
push
shll
jg
test
cmp
pop
mov
rclb
loop
sub
push
jno
pop
xchg
adc
les
xchg
dec
aad
push
jae
jge
pop
push
inc
aaa
mov
pop
jno
sti
fs
jl
aad
scas
loopne
mov
push
inc
sbb
ja
ss
in
mov
xchg
scas
mov
jecxz
in
fstps
xchg
pop
and
cltd
shrb
inc
sbb
xor
ljmp
repz
stos
xchg
sbb
test
popf
and
dec
mov
adc
aaa
mov
ret
int
lea
mov
fmuls
mov
test
mov
outsl
shr
adc
mov
push
out
ljmp
sbbb
arpl
clc
aad
xlat
dec
add
sub
out
negb
xchg
lea
sbb
or
nop
js
add
add
arpl
ret
es
push
js
dec
mov
rcrl
mov
jl
cld
divb
or
sbb
pop
push
fisubrs
pop
insl
cmpl
test
sub
sbbl
mov
jl
mul
jp
xchg
sbb
nop
lds
and
inc
loop
sbb
and
jae
pop
mov
imul
mov
enter
mov
lea
pop
sub
mov
dec
shrb
push
xchg
lea
fldenv
push
xchg
aam
xor
inc
fstpt
fsubl
push
inc
decl
push
push
xchg
sub
hlt
dec
mov
inc
mov
jbe
insb
jg
fcom
push
mov
xchg
adc
mov
add
pop
push
lahf
data16
pop
mov
mov
mov
sub
fdivrs
push
mov
lea
outsb
es
sub
mov
fadds
fiadds
int
xor
push
fdivrp
xchg
xor
dec
fcmovu
ret
pop
jb
int
cmp
push
icebp
mov
cli
in
mov
add
hlt
or
adc
add
mov
lret
je
outsl
call
cmp
sbb
mov
repnz
cmpsb
loope
mov
dec
call
jnp
repnz
pop
push
or
daa
mov
les
inc
pop
sbb
inc
ficomps
pop
mov
xor
jns
lods
inc
gs
imul
and
loopne
cmpb
push
popf
push
cli
push
lods
adc
lret
icebp
imul
cmp
bound
pop
sbb
xor
jmp
or
or
hlt
jl
imul
sbb
jp
inc
iret
sub
push
ds
push
cli
test
sbb
out
sbb
fcomi
or
adc
inc
fdivr
mov
add
push
rcrl
sub
and
sahf
ss
and
mov
push
push
pop
mov
pop
sub
xchg
mov
dec
lods
and
loop
xchg
sti
mov
movsl
out
fsubr
xor
or
lcall
sbb
shr
or
pop
icebp
push
pusha
shrl
aas
js
jno
mov
cmp
add
int
sbb
out
sbb
fwait
or
ljmp
ljmp
js
repnz
dec
inc
cmpsb
cmc
pop
pop
mov
push
or
call
scas
das
insb
jg
adc
mov
pusha
dec
movsb
pushf
pop
flds
pop
sahf
or
arpl
movsb
mov
leave
bound
mov
fwait
popl
shlb
rorb
jo
xchg
scas
shrl
jo
pop
jge
jle
scas
les
pusha
lcall
or
push
adc
fnstcw
xor
adc
xor
bound
test
xor
std
stos
pop
test
push
inc
adc
fdiv
jge
arpl
and
out
jnp
cwtl
sub
lahf
xor
add
mov
pop
or
ret
sub
jl
mov
fisubrl
mov
or
sub
push
adc
cwtl
and
push
adc
ljmp
push
mov
jg
scas
or
adc
and
adcb
stc
sub
xor
mov
pop
mov
xor
mov
jmp
jge
sti
cmp
pop
icebp
push
sub
fdivrl
or
pop
lds
add
pop
mov
and
nop
aaa
or
mov
xchg
sub
mov
lahf
subb
call
aas
aas
add
xor
adc
imul
fldcw
or
cwtl
and
pop
adc
xor
shll
mov
push
bound
or
sarl
push
push
mov
and
out
pusha
ss
and
xchg
sahf
push
push
sub
scas
fucomip
xchg
sub
enter
jno
add
aam
or
xchg
mov
dec
inc
sbb
fldenv
fs
into
movsl
jge
test
cwtl
xor
push
mov
movsb
negl
test
lahf
fiadds
pop
push
sub
jo
popf
mov
add
shrb
xchg
hlt
mov
sub
xor
hlt
sub
stos
mov
jge
adc
inc
lods
inc
push
xlat
shrb
inc
scas
js
mov
push
xchg
mov
xor
sub
in
addb
int
fcoms
jp
shll
inc
sub
mov
sbbb
cmp
inc
scas
xor
sub
mov
mov
xchg
adc
pop
stos
cmp
dec
iret
push
inc
repz
scas
aaa
push
cli
data16
dec
jecxz
rol
shlb
add
sub
mov
xor
test
sahf
inc
pusha
or
into
push
or
mov
fldt
test
into
push
push
and
xchg
into
test
test
xchg
test
xor
mov
lret
das
mov
sbb
or
mov
push
idivb
daa
aaa
clc
jg
repnz
repz
cli
pop
jbe
aad
add
cmp
adc
xchg
cltd
fsubr
xchg
aam
sbb
aam
jp
cmp
out
sbb
fcmovbe
or
add
enter
std
loopne
push
and
orl
rol
xor
decb
roll
jge
adc
pop
imulb
xchg
adc
loop
add
loopne
insb
mov
fcmovnbe
les
mov
and
aam
mov
sbb
pop
jo
ret
jle
sbb
imul
test
outsl
jnp
movsl
or
add
pop
outsl
loop
aam
div
cmp
sbb
pop
ret
mov
or
push
aad
mov
jmp
cmp
clc
scas
adc
cmp
mov
orb
or
inc
lret
xor
xor
push
es
adc
sbb
cmc
push
lods
and
xchg
cmp
add
mov
jmp
xlat
outsb
lret
mov
cmp
insl
sub
stos
jg
int3
cmp
push
push
in
push
sbb
sarb
mov
inc
mov
or
std
mov
pop
orl
sub
ret
cmp
lock
mul
push
mov
inc
cmpsl
int
push
fs
inc
out
mov
repz
fwait
dec
cwtl
gs
aad
mov
and
push
fbstp
ss
les
inc
test
sbbb
je
dec
aad
push
or
xchg
sbb
js
adc
inc
test
inc
icebp
add
sub
int
xchg
idivl
pop
pop
bts
sub
dec
testl
or
push
lods
int
dec
pop
inc
push
push
jmp
sub
or
fdivl
jg
nop
hlt
add
pop
inc
test
mov
rorb
jno
in
dec
std
lret
orl
pusha
mov
push
sub
shl
jne
add
adc
pop
scas
loopne
or
shl
mov
ret
out
sarl
cs
or
repnz
popf
pop
cmp
adc
in
test
or
es
fildll
loop
pusha
push
push
pop
lcall
mov
xchg
fs
insb
jmp
andb
sarl
and
outsb
sbb
add
xchg
mov
in
lcall
xchg
mov
fwait
dec
mov
pushf
adc
sbb
sub
add
xchg
mov
enter
sbbl
bound
in
xor
adc
or
cltd
push
mov
cmp
pop
push
push
ret
cltd
iret
xchg
jle
mov
insl
lods
xchg
sub
mov
mov
pop
pop
aaa
aam
imul
aaa
shlb
mov
nop
les
pop
xor
add
stos
in
outsl
paddd
rcrb
shr
push
jp
das
push
inc
mov
std
jge
dec
xchg
push
xchg
scas
in
out
add
mov
push
outsb
fisubrl
push
cmc
icebp
adc
ja
add
std
dec
popf
mov
cmp
out
push
iret
loope
sub
adc
lret
mov
scas
ljmp
testb
fucomp
fwait
imul
push
mov
xchg
int3
xor
add
xchg
mov
daa
jae
pop
sub
pushf
insb
enter
push
jecxz
ljmp
divl
pop
add
ljmp
mov
mov
ret
clc
or
adc
imul
jo
push
lret
pop
sti
in
jecxz,pn
adc
imul
aaa
addr16
pop
cltd
pop
inc
scas
mov
pop
stos
mov
repz
mov
xchg
enter
lea
push
loopne
push
jge
add
icebp
cmpsl
fdivrs
push
rcrl
cmp
mov
and
les
jl
pop
mov
es
stos
out
iret
popf
or
sbb
sub
push
jbe
ret
fisubrs
insl
mov
jge
daa
mov
dec
icebp
sarl
sbb
jae
insb
xchg
push
in
push
pop
xorb
xchg
mov
call
add
pop
xor
popf
xor
mov
push
push
xchg
cld
data16
xor
lds
xor
xorb
js
xchg
inc
pop
and
outsb
jp
mov
sub
lock
lahf
data16
mov
popf
and
cmp
and
loope
fidivrs
out
stc
pushf
incl
cwtl
lods
fxtract
jbe
cmp
xchg
loop
arpl
dec
jne
cmp
sbbb
out
dec
and
scas
daa
dec
jp
jne
xchg
add
stos
push
outsl
ret
jl
sti
mov
sar
adc
jo
jns
aad
push
dec
out
add
cmp
test
into
push
aam
popa
and
jns
mov
bound
cmp
push
ja
push
hlt
or
scas
cmp
push
fwait
stos
push
icebp
or
pop
pop
jb
stos
xchg
rolb
add
mov
sub
or
push
in
inc
enter
aaa
je
test
inc
loop
pop
fadd
ja
jnp
sub
dec
in
dec
xor
repnz
jbe
and
dec
pop
add
stos
and
inc
pop
add
mov
repz
insl
clc
sbb
sarb
rcrb
jg
das
jge
jg
cmp
call
subb
lods
shl
insb
mov
clc
icebp
mov
es
aaa
adc
in
inc
pop
out
lea
mov
imul
pop
mov
push
fists
xor
jns
pop
dec
aas
mov
xchg
dec
mov
div
ds
or
nop
lods
add
or
sbb
repz
or
dec
and
sub
cld
gs
pop
cltd
pop
ds
jno
popa
jecxz
push
mov
aaa
adc
je
inc
push
xchg
and
fsubs
clc
sub
repz
dec
sub
mov
iret
sbb
jne
adc
add
xchg
lret
sbb
cmp
test
fldt
mov
scas
fisubrs
jg
ljmp
stc
inc
in
jne
aam
adcb
push
fcoml
xor
stc
push
sub
sub
out
push
leave
andb
icebp
xor
mov
dec
jo
frstor
lahf
pusha
movsl
dec
xlat
sbb
aad
and
adcb
sahf
shll
sti
mov
lds
sbb
mov
in
loope
lods
push
rol
test
adc
jno
xlat
xchg
jecxz
pop
push
rcr
js
cmc
mov
cmpsb
cmp
sbb
fs
in
insl
shll
xchg
rcrb
rcrl
jmp
arpl
adc
in
andl
enter
or
mov
rolb
in
imul
addr16
out
jmp
cmp
xchg
xor
fisttpl
adc
xor
push
ss
shrb
sbb
mov
dec
xchg
adc
mov
lods
test
mov
sub
adc
add
mov
enter
arpl
jge
push
shrl
cld
daa
jl
pop
scas
dec
push
lods
jns
outsl
add
fidivl
cwtl
cwtl
imul
lcall
aad
lret
into
jg
adc
mov
rcrl
mov
add
mov
pop
inc
test
push
mov
ret
loope
hlt
int
fisttps
mov
call
jmp
lret
and
fstpt
dec
push
xchg
push
and
gs
dec
cmp
iret
inc
push
out
leave
inc
ror
rolb
not
lret
or
imul
sub
ds
int
nop
repz
andb
push
adc
adc
lcall
ja
inc
cs
pushf
xor
inc
sbb
dec
jp
sbb
xor
ret
mov
mov
sub
push
or
jb
adc
xor
in
das
fimull
in
xchg
lods
sbb
sbb
adc
movsb
inc
js
push
in
cli
bound
orb
xchg
sub
push
scas
pop
adc
or
outsb
std
cwtd
lock
loopne
sarl
hlt
pop
fsubrs
sbb
mov
cmpsl
jno
xchg
repz
into
or
mov
gs
bound
xlat
and
mov
jl
out
leave
mov
ret
and
dec
add
lods
inc
mov
add
loop
mov
cmp
nop
imul
mov
pop
ds
dec
in
loope
ds
pushf
out
stos
mov
dec
jle
cmp
pop
fs
dec
pop
dec
push
dec
jb
push
pop
and
out
mov
jb
mov
sbb
xor
cmp
sahf
cwtl
fildl
or
and
movsl
pusha
sub
ljmp
mov
jl
jo
jnp
pusha
nop
push
shl
repnz
add
scas
rcll
stc
stc
lret
push
fldt
shl
dec
xor
mov
dec
shlb
cmpsl
mov
fsubrs
rcl
testl
mov
ret
scas
rcrl
cmp
ljmp
xchg
mov
aam
test
sti
test
add
mov
je
daa
jns
lods
mov
push
mov
fisubs
and
jmp
les
mov
dec
cmp
ljmp
and
sub
or
icebp
aaa
adc
insl
movsl
out
xchg
iret
pop
pop
mov
rorl
stos
jne
fnstenv
popa
jnp
cld
or
rcr
jmp
and
or
fidivl
push
test
inc
mov
xor
cld
and
std
data16
sbb
xor
adc
mov
dec
shlb
cltd
or
push
leave
ret
aam
lods
push
popa
lods
mov
xor
jbe
pop
and
inc
add
xor
addb
xchg
fwait
mov
xchg
pop
cmc
ret
in
scas
dec
cli
mov
xchg
fisttps
movsl
ss
or
dec
jmp
pop
xor
xor
into
sbbl
mov
idivb
das
enter
imul
sub
cmp
loope
repnz
out
test
dec
pop
xchg
icebp
nop
lods
js
pop
stos
into
adc
mov
sub
cmp
xor
in
lret
ret
and
test
jmp
addps
jns
or
sbb
inc
arpl
or
mov
cld
rcrl
mov
loope
dec
insb
xor
fbstp
push
icebp
stos
push
insl
test
and
xchg
fimuls
mov
ljmp
cld
cmp
leave
lock
dec
cwtl
dec
lea
insl
les
pop
ljmp
imul
lods
ljmp
out
ljmp
jno
in
add
mov
leave
cmpb
aas
ljmp
loopne
js
lcall
int
xchg
stos
pop
xor
test
push
mov
loop
sub
jg
rol
or
pop
and
dec
aaa
hlt
dec
into
je
cwtl
lds
test
jns
test
mov
sti
push
mov
and
or
jbe
pushf
mov
arpl
fidivs
add
test
sarl
mov
jge
inc
mov
out
std
or
stc
push
xor
inc
xchg
daa
jo
sbb
mov
arpl
xchg
jne
lods
in
rorb
xor
fcmove
cmp
xchg
dec
shll
lea
fstpt
test
sub
jp
mov
sub
fistpl
repz
lods
mov
lahf
jno
pop
ds
loopne
rcrl
dec
mov
stos
push
xchg
or
repnz
cli
mov
test
inc
andl
int3
jp
adc
pop
movsb
cmp
jecxz
enter
hlt
lea
aas
les
xchg
sub
inc
std
sbb
mov
clc
adc
into
sub
stos
cmp
adc
xchg
in
xor
mov
test
push
mov
inc
push
or
shlb
sub
mov
jae
xor
lea
and
and
enter
pop
sub
mov
inc
loope
arpl
dec
inc
lods
push
sub
in
ljmp
jg
movsb
push
out
push
mov
jno
insb
jmp
loopne
jle
jno
and
aas
inc
pop
jno
stos
je
andb
mov
dec
in
add
dec
fwait
pop
insl
add
scas
sub
daa
sub
dec
and
xchg
out
mov
push
lahf
out
lret
sbbl
lock
inc
sahf
js
and
or
xor
push
jge
mov
insb
mov
adc
mov
dec
push
and
mov
in
stc
rorb
mov
int3
pop
ja
mov
andl
mov
fucom
data16
add
fs
aas
xchg
call
in
push
nop
inc
and
rcrb
in
dec
push
stos
cmp
cld
pop
dec
xor
in
inc
test
lcall
bound
mov
pop
inc
mov
or
or
fsubr
stc
subps
jge
outsl
mov
and
dec
push
test
sbb
and
and
dec
push
mov
and
es
ffree
sub
dec
pusha
add
push
lods
cltd
mov
aad
or
mov
jo
ret
push
sbb
push
les
sbb
ja
lock
cwtl
fs
test
and
jmp
lock
fucom
out
popf
dec
mov
xor
cmp
pusha
jle
cmp
fcmovu
je
push
int
xchg
lcall
lods
xor
jg
jl
das
lret
pop
jg
dec
or
xchg
leave
jo
es
fstp
aas
push
out
cmpsb
leave
fnsave
lahf
in
in
lods
push
sbb
jb
lods
fsubrs
arpl
cmpsl
sbb
leave
aam
mov
cmp
fldcw
pop
mov
cmp
and
push
fiaddl
test
rolb
xchg
add
orb
in
je
addr16
xorb
rclb
inc
pop
mov
into
cmp
xchg
xchg
add
fidivrl
cld
mov
mov
popa
lcall
sbb
fdivrl
jno
add
ja
adc
mov
sbb
dec
or
and
jnp
xor
push
lods
lret
push
leave
test
push
fldcw
push
mov
and
stos
push
movsl
mov
out
fisubs
sbb
mov
cwtl
adc
mov
int3
sbb
pop
test
movsb
cmp
jnp
ljmp
subb
mov
xchg
cs
lret
les
nop
pop
pop
ss
fidivrs
pop
cmc
cld
sahf
pop
mov
int
dec
xor
loope
pop
popa
daa
cmp
idiv
fs
lock
ds
je
adc
adcb
enter
adc
mov
pusha
xchg
add
imul
and
jo
out
data16
sub
movsb
addr16
or
movsb
mov
lret
jne
jg
dec
jno
mov
lret
das
jl
xchg
scas
push
push
in
orl
jp
xchg
push
adc
pop
mov
iret
data16
mov
mov
jg
and
jle
cmp
jae
jp
je
pop
xor
push
sub
push
and
mov
mov
dec
mov
inc
and
cltd
adc
lret
arpl
cwtl
adc
popf
int3
lock
arpl
std
xchg
aam
mov
ds
rorl
shrl
bound
rclb
in
adc
imul
cmp
fwait
push
sub
cld
push
in
mov
inc
push
sbbl
mov
test
jl
clc
addb
jb
lcall
movsl
inc
cmp
add
or
dec
adc
scas
fisttps
outsl
test
mov
cmp
pop
jecxz
jne
push
xor
push
out
sbb
cmp
ja
add
lea
pop
loope
add
xor
fcoms
push
cwtl
or
inc
pop
mov
pop
and
loop
cmpb
jae
xchg
cld
ror
in
test
push
sub
mov
mov
cmc
sbb
aad
je
sbb
andl
scas
jl
pop
pop
pushf
xor
ss
pop
das
mov
lret
cs
xlat
outsb
or
jl
jmp
inc
mov
out
divl
ljmp
lcall
and
aas
push
add
dec
jecxz
scas
sbb
add
ret
mov
in
and
ret
cmp
mov
movsb
mulb
ljmp
lea
mov
dec
or
add
lods
jl
daa
jno
lods
inc
mov
and
bound
and
mov
pop
subl
sub
int3
sub
push
lods
shll
lds
dec
xchg
sbb
or
lods
sub
orl
jae
inc
out
xchg
shll
jecxz
mov
out
lods
push
push
push
loopne
pop
sub
mov
mov
leave
ds
frstor
or
inc
xchg
pop
gs
or
xchg
mov
mov
setae
hlt
push
cmp
jno
jg
in
cli
movsb
and
pop
jle
int3
sti
in
imul
enter
mov
insb
test
and
ss
cld
les
and
mov
in
lahf
add
lret
xor
adc
inc
lahf
lahf
cld
pushf
inc
jmp
ss
inc
xchg
push
or
lret
mov
rorl
test
jne
scas
das
push
popa
les
add
shrb
pop
in
ret
pop
repnz
dec
jns
pop
stos
insl
xchg
dec
ret
add
sbb
mov
and
xor
fldl
jge
sub
xchg
orl
clc
aad
imul
push
lret
std
jno
test
loopne
test
sub
mov
push
enter
daa
inc
roll
or
cmp
push
mov
push
mov
jmp
fisubl
jmp
xor
pop
insb
negl
xchg
jp
sbbb
jae
add
rcll
xchg
sub
xchg
in
xor
into
aad
push
pop
out
rol
dec
xor
int3
mov
sub
or
stos
cmp
push
out
adc
pop
push
cmp
fdivl
out
hlt
pop
sbb
es
aas
mov
into
mov
nop
sub
inc
shr
ja
scas
push
sub
cli
dec
arpl
lock
xchg
shlb
sbb
add
lcall
push
js
fadds
in
sub
or
xor
and
aam
or
outsl
rcll
dec
pop
mov
mov
ret
push
insl
cmp
jge
pop
andl
sub
jg
lods
test
adc
sub
mov
add
pop
jl
jae
adc
pop
jns
push
dec
loopne
push
js
xor
jle
sarb
popa
or
jne
pop
xchg
in
pop
xchg
inc
dec
xchg
scas
out
pusha
out
xchg
mov
mov
xchg
lea
out
movsb
aas
mov
cs
xor
addb
ret
push
fwait
lock
mov
nop
sarl
xchg
and
cltd
push
lret
sti
js
rorl
jne
jbe
das
loop
and
pop
ret
lds
je
out
pop
adc
sti
stos
mov
push
xorb
scas
sbbb
pop
jb
inc
sub
in
cli
pusha
push
stos
sahf
scas
add
add
std
adc
push
jo
mov
clc
scas
push
movsl
or
push
sbbl
inc
bound
jg
sbb
push
mov
enter
fadds
dec
mov
out
es
jns
daa
mov
jp
inc
fmul
sbbl
cmp
arpl
xchg
addr16
loopne
inc
mov
in
push
mov
xchg
iret
adc
dec
shrl
adc
stos
pop
and
test
dec
test
aas
int3
lret
in
mull
out
lret
pop
mov
in
int3
jecxz
mov
pop
pop
iret
ss
jge
call
mov
xchg
xchg
add
push
lret
ds
pop
sbb
or
mov
pusha
arpl
jmp
jmp
aad
jp
mov
fidivs
sbb
sbb
xchg
jae
leave
in
mov
and
imul
pop
mov
pop
shl
imul
inc
imul
lds
mov
std
mov
sbb
mov
stos
pop
mov
mov
js
int3
and
ret
push
hlt
or
cs
cmp
jno
jl
mov
mov
dec
jecxz
hlt
inc
leave
add
inc
lods
pop
in
jmp
mov
ss
pop
popf
sbbb
or
sbb
xchg
popa
xor
ret
and
daa
sub
push
lea
std
jle
stos
cmp
mov
loope
imul
mov
or
xor
xchg
or
out
dec
fyl2x
pop
ficomps
fnstenv
daa
cmpsl
inc
movsb
cli
lods
loop
push
xchg
rcll
scas
inc
push
sub
outsb
test
hlt
mov
fisttpll
jbe
xchg
fmuls
mov
mov
xchg
cmp
mov
push
or
outsb
dec
movsb
jg
sub
mov
sbb
orl
xor
das
inc
neg
nop
aam
lock
mov
push
xchg
pop
pop
lock
push
or
xor
sahf
fldt
and
jnp
mov
mov
arpl
xor
and
inc
faddl
adc
jg
je
xchg
out
call
sbb
jo
test
mov
xor
vpsubsw
mov
sbb
push
mov
mov
ja
mov
int
jo
cmp
inc
ret
xor
pop
push
outsb
mov
cltd
clc
xchg
jo,pn
fcomps
add
or
pop
pop
mov
fcomps
sbb
insb
shl
adc
lods
fnstenv
loopne
gs
cs
xchg
cmp
movsl
out
es
push
rorb
xor
push
push
and
addr16
fwait
arpl
ret
pop
movsb
in
and
in
push
div
cmp
or
push
outsb
test
clc
inc
push
bound
xor
test
into
mov
andl
jl
lret
mov
sti
outsb
sti
and
les
and
xchg
fildll
or
push
push
ret
mov
push
push
sbb
cmpsb
push
scas
pusha
mov
or
xor
pop
push
out
lahf
stos
xor
shl
mov
xchg
pop
sahf
into
je
push
scas
inc
and
lock
mov
lods
sbb
inc
lock
xchg
xchg
jno
sub
push
jbe
es
das
lock
xor
imul
leave
or
ljmp
mov
cmp
cmp
xor
pop
hlt
cmp
imul
cmc
mov
mov
adc
fcompl
mov
mov
fdivrs
adc
xor
rcrb
arpl
cs
call
add
adc
movsl
stos
lock
add
add
push
imul
in
and
adc
or
das
imul
mov
xor
dec
fistpl
leave
test
in
mov
or
add
jbe
popa
push
jne
movsb
lods
cli
pop
scas
sub
mov
aam
dec
adc
lock
fists
cmp
lea
sarl
sti
mov
dec
xchg
scas
mov
lret
insb
repnz
jnp
or
lock
stos
adc
enter
movsb
std
mov
imul
mov
pop
idivl
in
ret
shrl
sub
mov
subl
xor
movq
mov
push
mov
test
jmp
insb
outsb
dec
add
mov
enter
call
xchg
inc
adc
repnz
aam
pop
push
adc
mov
fdivrl
adc
pop
mov
pushf
pop
sbb
pusha
nop
out
adcb
pop
xchg
fwait
cltd
test
mov
jbe
sbb
or
outsb
rorl
cmc
or
dec
jne
nop
xchg
lret
mov
pusha
add
jno
pop
push
sub
mov
sub
or
dec
or
or
pop
jge
gs
push
mov
icebp
push
imul
xchg
imul
outsl
and
call
out
cs
adc
inc
lret
xor
testl
pop
lea
lcall
push
cmc
mov
adc
mov
sti
dec
pusha
ss
push
push
out
ret
push
icebp
push
add
enter
ret
jnp
out
mov
es
imul
daa
push
movsl
shll
cli
pushf
repnz
cmpl
ljmp
fmull
fcmovnbe
adc
dec
cmp
inc
xchg
xor
pop
stos
imul
add
push
imul
or
cli
imul
dec
popa
stc
ds
mov
scas
decl
cmp
rcll
stos
jl
sarl
lcall
sbb
pop
inc
pop
decl
jno
shrb
xlat
cli
stos
sbb
mov
sarl
xchg
sbb
out
mov
and
das
push
js
push
adc
movsl
adc
adc
out
pop
or
test
fs
insl
add
cmp
les
or
test
insl
adc
mov
int3
jo
insb
repnz
fsubrl
sahf
mov
test
cmp
lcall
clc
mov
ja
fimuls
xchg
add
pushl
pop
in
sub
in
mov
xor
jo
int3
mov
jge
mov
fisubs
int
mov
out
daa
call
pop
fwait
or
sub
ss
jno
xorl
in
cli
inc
push
xchg
js
cltd
add
rorb
mov
int
stos
mov
cld
iret
pop
or
sbb
sbb
jmp
pop
sub
fwait
jb
movsl
add
mov
rcrb
push
fnsave
mov
pop
add
nop
inc
jp
addr16
cltd
into
xchg
loope
jecxz
mov
test
sub
pop
mov
cmpsb
mov
mov
xor
fidivrl
jb
inc
mov
inc
in
aam
fstpl
mov
pop
int
lods
fcompl
push
inc
push
enter
mov
ds
orl
xchg
pop
cmp
iret
xchg
mov
mov
in
add
nop
adc
sub
sbb
repz
xor
sub
stos
insb
mov
out
mov
mov
mov
jmp
neg
dec
notb
hlt
adc
or
out
cmp
sbb
push
js
push
mov
xchg
popa
jmp
flds
fs
mov
iret
fisubs
cltd
mov
sub
jnp
mov
mov
xchg
xor
lcall
cmp
add
lcall
stc
jl
popa
leave
into
inc
adc
dec
shlb
aaa
sub
jnp
push
cmp
movsb
mov
pushf
xor
or
push
dec
mov
loope
cli
sbb
insb
cmc
sbb
mov
test
pop
sbb
or
icebp
es
mov
adc
sbb
xor
popf
in
sbb
je
adc
mov
xchg
test
or
push
sbb
rolb
out
and
jge
adc
and
aam
out
push
lret
sbb
data16
insl
leave
clc
fnstsw
jne
push
lods
xchg
mov
push
call
adc
xor
jecxz
sub
dec
shrb
rclb
stos
mov
sub
add
xor
loope
mov
scas
add
inc
adcl
mov
push
pop
aam
inc
jbe
sbb
imul
or
mov
call
adcl
lret
je
imul
mov
pop
aaa
jne
incb
das
cmpsl
jle
mov
push
pop
or
mov
cmpsl
mov
hlt
loopne
mov
mov
sarb
ficomps
mov
popa
or
mov
out
je
cwtl
stos
dec
out
mov
out
movsl
subl
mov
inc
and
les
cltd
stos
mov
cmp
fnsave
lods
dec
inc
inc
fmull
sbb
addr16
pop
ds
push
xchg
stos
out
xchg
xchg
mov
aad
or
sbb
mov
mov
rorl
cmpsl
iret
fdivs
enter
jp
or
std
inc
jae
jp
addr16
xchg
lock
sub
pop
sub
dec
sbb
inc
cmp
ss
push
outsb
dec
sub
aaa
in
in
push
lcall
xchg
popa
xchg
pop
mov
fldcw
mov
xor
push
adc
lahf
sub
sub
push
xchg
lods
inc
out
cs
fiadds
aaa
mov
mov
outsb
arpl
icebp
shlb
xchg
icebp
js
repz
int
lret
rclb
pop
fidivrl
jl
call
lock
push
dec
popa
push
push
fwait
pop
std
hlt
lea
out
jo
in
sbb
out
das
cmp
les
push
add
sahf
xchg
cmpsl
popa
add
movsl
jns
iret
stos
push
adcl
jns
and
lcall
mov
aam
sti
leave
popa
adc
inc
pop
sbb
and
add
hlt
dec
gs
sbbb
out
cmp
mov
jnp
ret
mov
mov
adc
cmp
ret
cmp
push
mov
aad
int3
adc
cmp
sbb
loop
or
addr16
lcall
and
jae
scas
insl
test
add
and
jb
sub
pop
jo
inc
mov
jbe
pop
xlat
shrw
mov
dec
mov
mov
hlt
aas
addr16
and
add
cltd
adcl
dec
mov
xor
call
insb
in
xchg
jmp
arpl
shrb
inc
pushf
mov
aas
mov
repz
or
mov
and
aas
dec
sbb
popf
pop
fwait
insb
add
outsl
jns
fildll
push
adc
loopne
push
jmp
jle
jmp
jno
mov
dec
add
test
cli
mov
pop
out
rol
xchg
dec
push
rol
add
sub
fnstsw
dec
aam
jns
jmp
cwtl
sbb
jmp
insb
push
ljmp
lock
fstpt
pop
cmp
fistpl
mov
pop
outsl
mov
aas
and
jge
push
fs
jge
and
add
mov
call
rcrb
mov
sub
mov
and
cmpsb
pushf
dec
mov
cmpsb
test
add
stos
cmpsl
inc
adc
inc
ljmp
test
inc
jmp
nop
cmpsb
ljmp
cmp
nop
in
call
sub
jno
es
testb
les
pop
outsb
in
js
dec
pop
out
cmc
loope
inc
lahf
jo
sbb
insl
daa
lods
jecxz
test
mov
sbb
aas
int3
jae
jno
fldt
push
testl
jge
ret
mov
add
pop
lcall
dec
filds
xchg
pop
mov
push
outsb
adc
pop
inc
xlat
mov
ds
scas
test
loope
add
ffreep
pop
test
fdivl
lret
mov
push
jno
aaa
push
leave
jb
inc
enter
mov
mov
and
inc
pop
mov
dec
xorl
xor
jae
push
adc
test
xor
outsb
mov
push
xor
pop
push
outsb
and
adc
fcmovb
out
out
sbb
jbe
mov
insb
xlat
lahf
into
or
dec
and
xchg
push
loope
fdivl
cmp
js
inc
stos
nop
insb
add
mov
imul
lock
repnz
cwtl
mov
xor
add
inc
or
inc
loopne
in
in
ljmp
lock
push
cmp
pop
inc
cmpsl
add
scas
ja
xorl
sbb
jno
sbb
mov
inc
push
int3
outsl
inc
push
cltd
mov
xlat
in
pop
hlt
push
in
popf
dec
aad
jle
cmp
mov
arpl
sbb
inc
xchg
inc
popa
out
test
imul
daa
inc
sub
xor
inc
jmp
inc
ret
daa
mov
xor
add
pop
inc
sbb
outsl
aaa
mov
ss
adc
or
sbb
adc
and
pop
sub
mov
add
mov
stos
xor
cmpsl
out
jmp
cmp
arpl
push
xchg
pop
dec
mov
adc
push
icebp
test
xchg
call
adc
aas
adc
xor
lcall
jo
imul
lds
mov
or
push
fcoms
sbb
out
dec
pusha
cmp
or
sbb
repz
push
or
add
cmp
pop
loope
gs
pop
add
orb
jne
jb
fwait
movsl
adc
call
stos
std
sbb
ror
leave
mov
cmp
xor
push
call
out
dec
mov
ja
sub
stos
out
imulb
rolb
shrb
adc
lcall
jo
mov
sub
lea
les
pslld
fistl
je
loop
push
mov
xchg
inc
sbb
inc
xor
das
push
ljmp
jnp
push
cmp
push
jmp
mov
jl
jb
bound
or
mov
and
mov
clc
ja
movsb
pop
fbld
adc
ret
ret
xchg
mov
adc
and
into
leave
aad
std
mov
mov
add
mov
mov
pop
fiadds
int3
or
out
inc
add
mov
cmp
imul
aam
lcall
fadd
lret
xchg
pop
imul
xor
ret
shr
cs
shl
xchg
jno
or
mov
jnp
mov
icebp
mov
mov
pop
sbb
arpl
jbe
loop
xor
mov
in
jnp
xchg
mov
cs
mov
shrb
sbb
or
stos
sub
xor
test
and
mov
fists
lcall
cld
lret
jle
ds
and
jbe
xchg
jmp
sub
xorb
and
mov
mov
std
or
repz
push
xchg
icebp
cld
or
inc
push
test
fistps
or
out
xchg
lods
adc
add
or
loope
sub
repz
dec
mov
inc
jae
ret
popf
and
mov
fists
adc
loope
insb
sahf
mov
rol
cmp
dec
ja
cwtl
divb
das
and
xchg
insb
sub
sub
out
cmp
daa
dec
push
in
pop
in
push
dec
negb
popf
dec
inc
pop
repz
inc
add
sbb
outsl
icebp
dec
mov
mov
push
jo
popa
xchg
inc
mov
rorl
out
push
fistpl
or
pop
mov
addl
jae
orl
xor
ja
outsl
mov
xor
nop
xchg
out
mov
pushf
xchg
push
ljmp
mov
lods
add
inc
nop
inc
pop
scas
jmp
jno
test
dec
add
clc
mov
push
and
cmp
push
or
adc
inc
icebp
inc
xchg
inc
add
inc
ficoms
int
stos
fmull
in
inc
movb
cli
xchg
sub
sbb
xchg
cltd
pop
sti
int
add
pop
pop
xchg
fstpl
or
fsubl
pusha
cmp
outsl
repz
imul
pop
arpl
sbb
cmp
push
mov
and
mov
sub
sub
dec
cmp
into
mov
scas
inc
sub
sub
dec
mov
mov
push
xor
lcall
ja
shlb
pop
lods
jmp
sbb
popf
cmpsl
cld
xchg
shl
jne
add
adc
inc
lock
jp
shlb
fbld
mov
aad
pop
push
pop
mov
icebp
lret
shr
shll
adc
xchg
inc
lret
mov
nop
xlat
push
lock
cmp
lahf
mov
setp
xor
dec
addr16
insl
sub
rcrl
adc
outsb
jnp
mov
js
rol
fwait
adc
sbb
imul
sti
das
les
dec
jecxz
jl
dec
jmp
mov
push
cltd
jo
out
flds
cmp
and
dec
jl
adc
inc
mov
in
mul
jp
and
leave
orl
dec
shl
xchg
jp
xor
das
dec
cmp
sbb
loope
jns
push
cwtl
sbbl
mov
jp
test
jo
out
inc
inc
push
and
jbe
mov
call
or
jmp
jp
xchg
inc
pusha
movsb
cmp
in
or
pop
xchg
sub
mov
into
xor
mov
mov
data16
sub
ds
mov
mov
movsb
push
xor
les
mov
pop
xchg
rclb
add
xchg
ljmp
jae
adc
jnp
inc
test
shr
es
cmc
adc
mov
insl
add
pushf
jnp
cmovns
sbb
sub
mov
test
testl
sub
inc
out
repnz
sub
sbb
jmp
imul
outsb
or
dec
push
in
sbb
adc
imul
cmp
test
jne
cmpb
push
add
ficoms
push
sbb
in
divl
cmp
cli
jns
sahf
loopne
rolb
xchg
lcall
add
stos
mov
fsubr
rcl
std
mov
push
sub
push
insl
mov
inc
jmp
lods
dec
shl
mov
jo
lret
mov
adc
daa
cmc
adc
mov
and
or
add
jmp
adc
xchg
push
fcomip
xchg
adc
jp
adc
outsb
rorl
mov
and
mov
sub
mov
mov
and
xor
movsb
cmp
lea
push
push
mov
mov
pushf
js
jmp
adc
mov
addr16
popa
in
sub
inc
push
inc
fiadds
in
and
movsb
loop
mov
sub
inc
add
or
xor
mov
pop
xor
inc
xor
arpl
shl
push
shll
das
sub
mov
mov
daa
add
inc
push
dec
pop
cmp
fnstcw
jmp
and
sub
mov
xchg
cmpsl
sub
lcall
or
nop
sub
stc
adc
sbb
inc
mov
push
aas
int
add
fisubrl
lds
jp
das
and
sbbb
add
or
cld
les
outsb
add
call
inc
jg
divl
movsb
mov
std
test
pop
lods
ss
fs
pop
inc
lret
test
push
lods
or
ds
mov
jnp
dec
pop
daa
inc
mov
or
push
push
jns
add
xchg
out
test
xchg
stos
xchg
push
scas
pop
test
repnz
xor
jb
stc
mov
inc
lods
in
iret
lea
add
push
and
push
push
cmpsl
jns
sub
cmp
mov
cmp
dec
outsl
or
lcall
loope
enter
fiadds
xor
scas
mov
xchg
sbb
jge
mulb
call
lods
inc
sahf
mov
mov
mov
mov
fcompl
adc
sub
mov
push
push
and
into
rcpps
movb
xchg
rorb
cltd
mov
lret
mov
inc
push
addr16
leave
leave
inc
fdivr
sbb
je
pop
in
push
jle
mov
clc
lds
xor
cwtl
add
leave
fcomp
push
ja,pn
push
test
inc
mov
jbe
inc
fs
xor
sub
test
out
std
mov
or
pop
push
clc
cli
push
sub
cmp
push
das
shll
xchg
pop
out
and
sbb
push
mov
popa
mov
dec
mov
lds
ds
cmp
mov
and
xor
pushl
xchg
sub
adc
shll
inc
pop
gs
and
and
std
mov
pusha
pop
push
into
loope
int
lock
fisubrs
movmskps
idivb
ja
push
inc
ret
dec
out
or
dec
xor
jmp
cmp
and
movsl
adc
ljmp
mov
call
test
xchg
cmc
sti
mov
mov
mov
or
lret
pop
cmc
or
sahf
cmc
inc
int3
movsl
xchg
ret
cmp
lret
fwait
sbb
push
jno
jo
jne
cs
mov
push
xlat
aam
flds
adcb
or
jnp
sub
add
push
mov
push
xor
outsl
lock
mov
jne
cs
xchg
cmp
enter
ja
pop
test
jne
cmp
faddp
mov
stc
lods
or
fs
out
cmp
inc
push
daa
mov
fidivrl
push
cwtl
movsb
cwtl
jae
jmp
fisubs
cld
das
cmp
jns
push
test
fidivl
cld
dec
test
inc
rorl
cmp
aam
and
xor
jbe
cmp
ficoml
mov
cmp
and
dec
cmpsl
inc
push
mov
adc
pop
xorl
je
jp
out
call
mov
icebp
xor
scas
lds
sbb
lods
cmpb
lods
mov
aam
les
cmp
and
rorb
inc
orl
out
jne
loop
std
push
jno
dec
loope
push
inc
fnstenv
clc
or
and
mov
test
clc
or
fs
aad
push
or
or
mov
and
push
mov
jl
in
clc
movsb
sbbl
push
inc
mov
add
adc
inc
or
popf
xor
jmp
pop
inc
sbb
and
fs
enter
sbb
push
popa
add
jge
or
push
pop
fcoms
cld
xchg
or
mov
and
mov
or
and
sbb
xorb
pop
or
jns
dec
stos
cmp
out
icebp
xchg
stos
xor
mov
pop
js
add
ja
getsec
scas
pop
sub
xchg
cmc
push
es
rcrl
cld
sub
dec
shlb
and
int
int3
outsb
mov
aas
loopne
cmp
xchg
push
xor
dec
add
mov
movsb
sbb
mov
push
mov
mov
cmp
xor
xor
sub
mov
or
sub
pop
jbe
xchg
jo
call
push
lret
mov
icebp
jle
rorb
mov
lahf
nop
cmpsl
ret
fnstenv
pop
and
inc
fidivrs
jne
jmp
sbb
dec
adc
sbb
das
jns
pop
sbb
aad
jmp
fldt
incl
jp
lods
stos
daa
test
shrb
cld
aas
dec
adc
nop
mov
sub
or
in
fstpt
jge
push
or
movsb
add
or
push
sub
xchg
and
in
cs
and
sahf
push
dec
fldcw
sub
ret
cmpsb
out
dec
outsb
dec
loopne
jle
inc
insb
mov
das
iret
bound
mov
mov
xchg
addr16
fwait
out
ret
push
in
sub
call
inc
popa
je
mov
cld
jl
sbb
loope
jle
cmp
in
xor
adc
inc
mov
je
es
adc
adc
loop
adcl
push
mov
add
stos
mov
mov
int3
or
ret
pop
cli
adc
or
fsubl
shll
pop
xchg
cltd
xlat
sub
jne
inc
sti
adc
fmuls
and
xchg
cli
orl
or
mov
inc
sbb
scas
inc
sub
into
push
pushf
pushf
cld
dec
mov
mov
pushf
xchg
fs
cmp
cmp
rcll
hlt
jno
dec
sti
repnz
andl
and
cmpsb
xorb
iret
jo
jns
lock
clc
dec
mov
mov
push
push
pop
loope
in
int3
ljmp
adc
sub
jge
xor
cmp
and
into
dec
loopne
push
and
int
incb
ss
in
leave
scas
test
jae
xor
outsb
insb
adcb
xchg
mov
cmpsl
fnsave
mov
inc
pop
adcb
fldenv
lcall
pop
inc
int3
push
mov
jp
sbb
imul
xchg
cmpsb
enter
movsb
adc
fs
pop
imul
jo
aam
push
mov
insb
pop
fnsave
mov
clc
test
aas
aad
mov
pop
outsb
and
imul
sbb
sub
cmove
cmp
jl
and
out
xchg
inc
push
fcom
insl
lds
jp
hlt
mov
and
cld
inc
mov
ss
push
imul
and
or
gs
adc
inc
push
mov
pushf
lret
and
ljmp
jmp
cmc
sbb
ret
xor
out
mov
pop
lock
mov
fnstenv
adc
in
inc
mov
ss
imul
mov
imul
sub
mov
push
iret
jns
dec
cwtl
pop
mov
dec
insb
and
mov
push
out
lods
nop
jle
fsubr
push
push
dec
dec
jne
or
pushf
mov
addr16
dec
movsb
or
mov
and
mov
mov
push
pop
push
out
adc
pop
pop
and
lea
sub
ja
arpl
ret
shll
fwait
dec
loopne
cmp
insb
mov
ljmp
fwait
sbb
xor
loop
adc
sahf
xchg
pop
xor
lods
add
inc
push
mov
jp
lahf
gs
loop
push
pop
jp
mov
gs
mov
decb
add
movsb
cmp
lds
in
pop
mov
jnp
lods
inc
mov
push
inc
movsl
pop
xor
iret
inc
inc
movb
dec
add
and
xchg
in
cmc
dec
in
sbb
cmc
inc
cmp
dec
mov
cmc
aaa
hlt
rcll
pop
jbe
xchg
scas
jle
sahf
clc
xchg
sub
dec
jo
je
loop
shrl
cmpl
inc
div
mov
out
es
notb
dec
out
pushf
loopne
mov
sbb
fwait
test
inc
scas
push
mov
repnz
pusha
push
add
xor
pop
lods
sbb
sbb
in
sbb
or
repz
fwait
rorl
push
mov
mov
movsl
pop
or
push
sub
mov
mov
adc
rorb
pop
sti
out
or
sub
leave
addr16
cmp
mov
sbb
xchg
daa
add
cmp
mov
call
adc
xor
jae
jmp
mov
push
das
sub
dec
jmp
mov
dec
add
popl
adc
adc
jo
pushl
lods
negl
mov
adc
jo
pop
xchg
insb
data16
adc
pop
sub
cmp
insb
dec
dec
cmp
js
mov
pop
lcall
adc
loop
lret
push
insb
ret
cmpsl
scas
or
clc
mov
add
fsubr
or
inc
enter
addb
mov
mov
fucomi
push
gs
loop
mov
mov
imul
fdivrl
loopne
lds
lods
inc
jp
aad
ficompl
icebp
movsl
stc
or
js
loope
loopne
mov
test
loopne
mov
jo
repz
mov
mov
repnz
cli
dec
shlb
pop
lock
ljmp
or
sub
xor
ds
xchg
mov
gs
out
inc
fcompl
sahf
cmp
xor
call
nop
shrb
xor
adc
or
ds
outsb
or
jo
jb
jle
sbb
rorb
sbb
mov
lcall
fsubrs
mov
divb
test
je,pn
push
cli
sub
pop
sub
xchg
pop
hlt
stos
or
push
mov
push
fistps
shll
scas
xlat
xchg
xchg
cmpsl
fwait
dec
lret
adc
sti
inc
mov
mull
mov
aaa
sub
in
rolb
mov
fstpt
xlat
or
ja
mov
push
mov
pop
inc
rclb
es
or
cmpsl
mov
ss
jbe
and
ss
push
outsl
jnp
adc
in
sub
cmp
int
lcall
jecxz
or
lock
loope
fwait
daa
scas
mov
arpl
sbb
xchg
dec
or
dec
enter
ficomps
sahf
ss
jne
cmc
xor
mov
out
sbb
fidivs
js
inc
out
sbb
pop
or
sub
mov
cmp
ss
aad
aaa
aad
in
gs
pop
push
add
sub
push
movl
mov
or
cmp
scas
jnp
popa
testl
sbb
mov
lods
adc
jno
pop
test
fwait
jnp
jmp
or
jbe
frstor
cld
xor
addr16
pop
fucomip
add
pop
je
mov
and
dec
xchg
adc
jle
adc
xchg
out
push
pop
test
out
pop
xor
xlat
push
je
aad
xor
rorb
test
cmp
std
or
jl
inc
push
mov
pop
xchg
jo
xor
xor
mov
add
mov
mov
pop
mov
mov
mov
adc
xor
int
sti
push
sub
mov
jmpw
sti
xchg
cmpsb
je
xchg
inc
jnp
jbe
jmp
in
enter
mov
gs
fisubs
ret
mov
xchg
scas
pop
stos
leave
adc
aad
mov
inc
cli
imul
hlt
mov
mov
sub
enter
adc
je
pop
and
aam
scas
nop
jnp
mov
in
test
pop
adc
mov
xchg
fistl
or
sbb
jns
hlt
push
addr16
xor
daa
into
fnstsw
imul
out
out
add
mov
vmwrite
out
push
xlat
fwait
add
je
push
xchg
pop
shlb
fabs
in
adc
ss
stos
jp
shrl
jne
icebp
push
outsb
mov
jl
xchg
and
jge
out
add
mov
insl
stc
insb
mov
add
inc
xor
push
xchg
add
add
add
xchg
xchg
cmp
or
lods
fidivl
adc
mov
adc
mov
adc
out
pusha
push
inc
mov
je
inc
add
shll
jp
sbb
orb
scas
push
cmpsl
add
inc
mov
and
sahf
mov
jno
xorb
int
pop
jb
out
cmp
and
pushf
dec
les
les
cli
push
push
les
cmp
jnp,pt
clc
icebp
shrb
les
jo
cmp
imul
mov
push
jo
imul
iret
jae
movsb
mov
arpl
fsubs
loopne
out
popf
stos
std
cltd
test
jae
movsl
jp
xlat
repz
daa
mov
in
inc
push
ret
cmp
fstps
inc
dec
jnp
test
movsl
cmp
xchg
sbb
shlb
mov
or
das
subl
fwait
pop
mov
cmp
insb
xchg
insl
sahf
sbbl
and
fistpll
and
daa
sub
rep
lock
rcrl
setge
mov
loop
addr16
popa
or
xchg
mov
pop
je
cld
or
xor
fsubr
test
loope
adc
jge
ljmp
mov
sbb
cmp
push
iret
shlb
jo
hlt
inc
push
cmp
ss
scas
imul
cmp
cld
mov
xchg
jno
repnz
xor
mov
aam
pop
ret
imul
test
pushf
andl
lock
loop
loopne
lcall
inc
jl
cmpb
std
xchg
adc
ljmp
mov
push
cmp
call
fmuls
add
jnp
or
push
push
cmpsl
lock
adc
sahf
add
push
fwait
cmpsl
inc
cmp
xchg
sbb
xchg
adc
jns
lret
add
and
shl
jne
push
lods
popl
xor
enter
outsl
cmp
cmpsb
loopne
adc
mov
lock
pop
pop
dec
sbb
dec
dec
mov
jns
outsl
sub
jae
add
inc
jg
mov
je
jb
iret
fdivrl
lret
push
inc
push
inc
jb
push
call
add
ljmp
xor
es
fimuls
fstps
shll
jl
aaa
mov
int
clc
sub
fstp
out
lret
fisttpll
popa
xchg
fs
xor
int
mov
or
sub
fstl
testl
fldl2e
aas
push
and
pop
xor
mov
add
inc
call
test
hlt
ds
add
jecxz
iret
push
cmpsb
mov
lock
in
test
push
mov
outsl
lret
mov
sahf
insl
mov
lahf
sub
push
cmc
out
out
sbb
pop
cmc
mov
fnstcw
sub
or
mov
add
and
data16
and
push
xor
inc
fimull
inc
cmpsb
cmp
or
bound
ret
repz
popf
aas
orl
subb
aad
sub
scas
jno
loopne
std
rclb
mov
inc
or
loop
arpl
add
imul
jnp
sub
xor
mov
mov
xchg
mov
xchg
fs
add
ud1
repnz
pop
dec
sbb
adc
inc
je
jns
cltd
insb
cmp
sbb
dec
inc
iret
mov
enter
xor
movsl
jnp
cmpsb
jns
aas
sub
push
mov
and
mov
mov
jge
jbe
xor
test
push
xchg
mov
sbb
in
int3
lret
lret
mov
in
mov
xchg
repnz
jp
filds
imul
stos
sub
or
cmpsb
push
mov
out
out
jle
cmp
sub
xlat
push
fwait
mov
cmp
test
fstp
and
xor
add
mov
roll
repnz
out
movsl
sub
mov
stos
jno
sbb
js
int3
pop
sbb
in
cmp
sbb
mov
add
fwait
testb
mov
jo
shl
cld
push
inc
loop
in
arpl
dec
stos
mov
inc
mov
fldcw
mov
test
mov
leave
lret
push
sbb
shlb
arpl
icebp
adc
in
cld
mov
ja
push
fs
push
or
fsubr
out
lret
lret
js
rol
pusha
imul
das
icebp
mov
xchg
sbb
sbb
leave
ret
push
in
stos
out
test
xchg
cmc
fdivl
scas
test
mov
or
stc
push
jg
cs
pop
mov
rorl
sbb
inc
fisubl
inc
push
sbb
test
aaa
add
fistps
jmp
xchg
mov
and
filds
stos
adc
xchg
stos
imul
xor
cwtl
je
ss
movsb
cmp
fildll
jb
xchg
pusha
les
adcl
inc
shll
mov
stos
aad
xchg
xor
sub
loopne
pop
mov
cwtl
mov
jle
test
or
jmp
sbb
arpl
inc
icebp
std
or
aas
adc
ficompl
ds
sbb
sbb
jb
xor
lods
cltd
and
data16
aaa
aam
push
push
in
aas
insl
in
sbb
fwait
mov
cmpsb
notl
mov
enter
scas
or
fidivl
cmpsb
out
fsts
cli
mov
lods
or
aad
pop
outsl
mov
pop
sbb
push
notl
stc
gs
dec
rcl
jp
mov
movsl
push
inc
adc
pop
clc
mov
hlt
mov
out
sahf
cmp
mov
sub
orb
jge
imul
pop
mov
mov
clc
inc
pop
xor
in
andl
cwtl
movsb
ficoms
arpl
int
fnsave
outsl
daa
scas
test
loope
rorl
cltd
or
lods
sahf
lods
push
stc
adc
lds
adc
cmc
add
adc
out
xchg
pop
adc
xor
sbb
push
addr16
flds
in
clc
cli
test
xor
je
adc
scas
cmp
inc
ljmp
pop
outsl
mov
mov
lods
inc
cltd
imul
jno
pop
jecxz
scas
jb
mov
pop
cld
mov
jnp
pop
add
fadds
or
or
fbld
xor
andb
jne
sbbl
push
clc
popl
xchg
and
push
popf
pop
inc
sbb
data16
test
loop
adc
into
jb
and
mov
xor
cmp
es
fdiv
mov
jmp
push
sbb
and
dec
jb
dec
repz
jp
call
add
sets
cltd
repz
and
cmpsb
add
cs
or
jae
sti
outsb
mov
sbb
out
dec
cmp
sub
lds
fnstenv
cltd
inc
pop
inc
xchg
pushl
fmuls
cmc
adc
lea
test
mov
arpl
xchg
repz
jb
mov
fstpl
jne
bound
jmp
cli
loop
cmp
out
dec
push
xchg
mov
int3
push
dec
mov
push
in
enter
data16
lahf
jns
push
rcll
pop
lock
roll
ret
cltd
insl
push
push
imul
popa
and
or
hlt
ja
xchg
jle
inc
and
inc
imul
xchg
popa
and
or
mov
fwait
in
cmpsb
cmp
in
in
and
mov
dec
les
jno
dec
or
and
fdivs
test
imul
mov
dec
lea
cmp
mov
inc
cmp
in
dec
dec
enter
fisubrs
rcl
push
lods
xor
mov
aad
lods
add
movsl
xchg
arpl
mov
les
mov
mov
adc
je
cmp
mov
fnsave
pop
jns
add
adc
shrb
ss
jmp
mov
in
push
push
adc
loopne
in
and
enter
sbb
xchg
jecxz
lcall
jnp
add
mov
xchg
fldcw
xor
icebp
mov
push
push
pop
dec
ror
mov
pop
mov
mov
xchg
push
mov
pop
lock
xchg
dec
out
xor
jmp
std
mov
loopne
cmpsl
sahf
push
jb
xchg
ja
js
sub
dec
jns
stos
and
dec
xor
in
orb
loope
stos
mov
imul
inc
xlat
in
and
add
dec
fiadds
and
cmp
mov
fcompl
xchg
lea
xchg
xlat
jb
sbb
loop
mov
or
enter
cmp
div
iret
call
adc
fildl
cmp
fbstp
push
aad
xchg
push
jl
out
mov
jge
push
stos
in
stos
pusha
jbe
push
mov
gs
xchg
push
jne
add
popa
xor
mov
inc
mov
jnp
mov
mov
lds
int3
in
stc
cmp
pop
mov
movsl
xchg
jo
gs
xchg
mov
xchg
pushf
push
test
ljmp
pop
dec
les
mov
repnz
out
dec
iret
xor
insl
adc
popf
inc
or
sub
jl
cmp
rcrl
xchg
arpl
or
add
popa
xor
dec
cmp
and
les
jp
out
shlb
dec
lock
cli
rcrl
cmp
lods
mov
pop
pop
iret
push
out
aam
adc
pop
hlt
push
or
sub
or
repnz
cmp
push
inc
insb
jg
lret
or
leave
add
mov
arpl
push
jmp
mov
jno
push
mov
adc
sub
add
xor
in
mov
mov
cmp
mov
push
ss
push
pop
lods
mov
mov
sbb
pop
lock
hlt
push
movb
add
into
push
xor
clc
lret
dec
cmp
mov
cs
jge
lcall
xor
sahf
lods
push
rcll
dec
cwtl
cmpsl
sub
xor
dec
aam
bound
sub
js
negl
scas
call
imulb
pop
ljmp
mov
imul
dec
or
lret
jb
cmp
mov
push
xchg
cmp
mov
ljmp
sbbl
jae
loope
aad
mov
lret
jp
nop
mov
ss
mov
push
push
arpl
cwtl
loopne
push
incl
xchg
aaa
cwtl
es
inc
lfs
enter
dec
inc
cmpsl
mov
call
cltd
mov
inc
cmp
in
pop
xchg
inc
mov
xor
das
and
aaa
jns
mov
adc
add
std
adc
loopne
jne
add
jb
addl
adc
adc
movsb
sub
mov
jbe
and
mull
call
xor
hlt
sbb
popf
pop
adc
mov
add
sub
sbb
loopne
or
pop
gs
pop
jmp
or
loop
xchg
mov
lock
fdivl
in
mov
mov
repz
and
inc
test
stos
or
push
inc
dec
push
cwtl
pop
shll
pop
cmpsb
popf
mov
jb
xchg
and
cmp
popf
repnz
jmp
push
call
faddl
ds
dec
mov
icebp
stc
mov
pop
lahf
stos
test
stos
mov
pop
xchg
push
ret
jmp
pushf
jmp
xor
out
sub
inc
in
xor
mov
aaa
cmp
cmpsl
imul
out
dec
inc
xor
mov
lods
rcl
mov
movsl
aam
shlb
add
sbb
ret
add
lock
jb
out
cmp
jne
xor
addb
out
mov
push
cmpsl
mov
or
sarl
push
movb
jl
xchg
hlt
cmp
dec
push
mov
push
adc
add
sub
lods
add
adc
cld
fs
pushf
inc
or
inc
frstor
pop
out
test
xor
mov
or
mov
or
out
cld
lcall
dec
sbb
mov
jbe
outsl
jge
test
xor
inc
mov
lds
mov
loop
ret
lcall
sbb
rclb
fists
adc
lahf
push
mov
jmp
lret
nop
daa
js
jno
lock
sarb
fistpl
movsb
xor
ljmp
repz
xor
push
pusha
stos
fisubs
inc
xchg
xor
mov
outsl
femms
stc
mov
sub
push
sbb
stos
push
jo
jnp
ds
sub
jns
cld
pop
les
push
out
ja
xchg
sub
cmp
jno
daa
jle
xchg
push
in
aam
cld
sub
or
dec
stos
movsb
jl
int3
dec
fnstsw
sbb
pop
push
sub
cmc
fcomps
rorb
iret
or
add
push
stos
jge
fsubrl
pop
aaa
fwait
push
stc
imul
dec
mov
gs
xor
and
xor
dec
sbb
dec
dec
movzbl
cmp
xchg
dec
lods
repnz
adc
pop
int
pop
fiaddl
bound
xor
mov
rcrb
jbe
ret
roll
push
stos
push
fisubl
push
rclb
loope
movsl
push
loopne
jae
push
pusha
testl
push
jno
mov
stos
and
out
inc
add
ss
inc
and
inc
dec
fsqrt
or
pop
sarb
add
push
out
dec
add
xor
mov
arpl
fnstcw
cmp
rorl
insb
movsb
std
arpl
sbbb
jnp
test
add
mov
imul
sub
test
imul
gs
pusha
sbb
and
into
jmp
adc
mov
dec
push
in
jne
jp
and
or
sub
icebp
pop
push
dec
scas
rolb
fsubrl
cmp
pop
push
data16
call
out
and
push
cmp
cmp
pop
test
ret
add
jmp
mov
inc
or
imul
roll
mov
inc
cwtl
ss
inc
inc
pop
xchg
in
mov
rorl
int3
adc
insl
in
imul
push
mov
jo
sub
ss
loopne
outsl
adc
jl
test
out
out
sub
imul
stos
gs
adc
push
stos
xor
and
cmpsl
test
mov
cmp
lahf
outsb
pop
nop
mov
pop
jno
test
pop
pop
insb
push
sub
dec
add
sbb
dec
rcr
add
pop
push
and
jl
add
push
movsb
push
pop
jb
mov
mov
fnstcw
dec
mov
stc
pop
cmp
add
bound
stc
cmp
jp,pn
fxch
dec
inc
mov
pop
aas
jo
push
mov
mov
imulb
aam
push
repz
mov
mov
loopne
jb
cmp
xchg
dec
fisubl
fcmovne
jmp
pop
cmp
xor
cmc
bound
inc
mov
pop
rcll
mov
pop
out
xchg
test
into
xchg
lods
repnz
pop
mov
push
push
or
shrl
int3
inc
xlat
mov
lahf
insb
decl
std
xchg
pop
mov
xlat
or
push
xchg
mov
cltd
rclb
or
push
cli
nop
push
loopne
adc
test
loop
arpl
adc
testb
or
cli
outsb
das
dec
mov
popa
hlt
sub
int3
mov
shrb
fisttpl
fbstp
push
fbld
subb
inc
shrl
bound
mov
push
test
outsl
outsl
jg
adc
sub
xor
or
add
daa
int
or
adc
xchg
jns
xor
pop
jbe
and
jmp
leave
xor
je
sbb
and
mov
push
or
mov
mov
shrb
pop
sbb
out
repnz
fists
in
xor
push
fwait
and
hlt
lret
and
cltd
stos
dec
out
adc
mov
insl
aam
lods
adc
xchg
inc
sbb
js
pop
jg
push
push
outsl
mov
cmc
or
mov
movsl
push
mov
adc
cmpsl
out
idivl
inc
imul
jle
int3
mov
jmp
mov
mov
push
testb
test
pushf
jl
lea
cld
pop
jae
xlat
or
sbb
imul
sbb
mov
imul
sub
jno
and
lret
movsb
into
sub
test
or
outsb
dec
in
pushf
pop
xor
mov
lret
inc
fnstenv
mov
jecxz
or
xchg
inc
jb
rclb
mov
push
mov
or
loopne
stos
jg
add
mov
fildl
sub
sbb
mov
dec
and
dec
mov
mov
xor
and
mov
xchg
sbb
fisubs
adc
mov
mov
inc
in
push
lods
xchg
loope
movsl
loope
adc
lods
out
ret
dec
mov
outsb
cli
push
test
and
add
inc
lds
mov
xor
or
push
push
add
inc
pop
push
push
mov
daa
subb
mov
add
inc
or
stos
push
sbbl
test
lret
mov
pop
sub
inc
mov
mov
fsubrs
cmpl
jbe
jge
out
andb
imul
daa
cmc
sub
mov
push
rol
jl,pn
jno
push
push
jb
push
lods
and
push
inc
enter
fistpl
xrelease
jo
and
push
dec
xchg
jnp,pn
mov
jns
adc
xchg
add
xor
dec
xor
cli
dec
and
push
mov
xchg
push
lods
xchg
aam
pop
loop
cmp
cli
enter
lock
jecxz
lock
mov
call
or
int3
loope,pn
es
jmp
jb
mov
lods
movsl
dec
or
jl
xor
sub
push
push
inc
cli
stos
and
pop
call
or
ss
pop
lret
xor
call
fcoml
cld
jge
xor
mov
xchg
aad
in
call
jge
sbbl
adc
xchg
pop
sarb
push
bound
jecxz
ds
aam
cs
outsl
psrlw
int
repnz
out
aam
mov
cmp
mov
ret
hlt
dec
fnstcw
dec
or
lods
je
jne
addr16
cmp
cmp
or
imul
sub
popf
es
sbb
mov
imul
popf
add
jmp
push
test
push
test
popa
out
dec
mov
aas
fdivrl
pop
lahf
fldenv
pop
ss
loopne
inc
mov
mov
ret
sub
cltd
inc
push
out
push
cltd
out
mov
jnp
sbb
loope
cmp
dec
add
mov
push
adc
mov
and
jp
test
shrb
fwait
ds
xchg
xor
xchg
or
les
lcall
sbb
mov
ret
scas
xchg
dec
rol
dec
jmp
lds
shrb
inc
dec
aam
mov
cwtl
call
and
mov
ss
xchg
cmpsb
int
mov
and
xor
jg
mov
hlt
iret
data16
and
adc
dec
dec
push
lret
shlb
and
push
mov
das
dec
mov
cmpsb
nop
test
adc
xor
pop
idivb
pop
or
push
push
jge
inc
mov
and
lds
je
into
xor
xchg
xor
adc
test
or
sub
int
icebp
mov
push
je
movsb
movsl
daa
mov
ret
cmpsl
cmp
ds
sub
mov
ja
rcrl
in
mov
cmp
fildll
icebp
test
push
jle
inc
sub
cmp
push
mov
mov
inc
mov
in
sarb
lcall
lret
inc
and
xor
mov
pushf
mov
mov
fdiv
fldt
shrl
push
roll
xlat
fcomip
or
mov
pop
adc
pop
pop
and
xchg
cmp
add
nop
jbe
xlat
pop
xchg
hlt
inc
dec
jge
cltd
daa
gs
push
and
mov
pushf
jbe
mov
pop
cmpsb
adc
cmpsb
add
ds
leave
mov
xor
sbb
push
inc
sbb
ss
mov
push
add
add
in
or
pop
jns
iret
pop
enter
adc
mov
imul
or
and
push
icebp
adc
fimuls
mov
rcll
pop
cmp
shlb
xchg
xchg
std
or
add
jb
sub
mov
movsl
inc
push
xchg
sub
xchg
xor
jo
jmp
inc
mov
cmp
in
addb
into
push
dec
inc
sbb
lret
mov
sahf
test
cmp
mov
xor
xor
fisubl
leave
push
stos
ds
mov
inc
jmp
or
jno
into
or
into
xchg
mov
cmp
inc
call
dec
scas
inc
xor
cmp
pop
inc
cmp
add
stos
and
testl
pop
sub
icebp
xchg
cltd
stc
cmpsb
inc
xchg
subb
dec
lods
and
push
gs
push
loop
scas
jno
mov
int3
pop
dec
test
inc
adc
dec
out
push
push
inc
cmpsl
push
cmp
jmp
pop
enter
test
fidivl
mov
or
pop
mov
iret
add
cmpsl
repnz
cmc
push
sbb
inc
aaa
push
sti
mov
push
lock
mov
lds
repnz
add
in
aas
sets
sbbb
jg
sbb
push
dec
bound
mov
push
subb
int3
pop
or
daa
push
popf
dec
pop
sbb
aaa
movsl
mov
insl
or
cltd
jle
mov
dec
xor
iret
inc
sti
mov
pop
mov
xor
int
add
or
cmpsb
in
lods
jno
jl
into
mov
jb
push
mov
inc
or
jl
add
js
add
lds
sbb
frstor
push
dec
xchg
xor
dec
pop
xchg
dec
inc
xor
inc
bound
jno
call
pop
sbb
jecxz
hlt
movsb
push
dec
lret
data16
fnsave
add
rorl
and
jecxz
and
cmp
mov
and
xchg
add
lock
lods
cmc
fstps
aam
xchg
jecxz
nop
data16
mov
xchg
push
lods
sbb
or
in
jns
lods
stc
fstpl
daa
push
jne
mov
xor
jns
fistpl
nop
sub
inc
cmpsl
and
enter
repnz
dec
dec
test
and
test
imul
or
pop
push
adc
cmp
pop
mov
push
inc
inc
test
arpl
xchg
jge
rol
and
loope
dec
jecxz
mov
jmp
jmp
pop
or
cmp
das
add
aaa
into
add
lock
imul
sbb
or
pop
sbb
xchg
jno
cwtl
inc
pop
lret
lods
jle
and
std
xor
or
xchg
ds
dec
les
cmp
push
add
into
fiaddl
ret
sbb
sub
aaa
into
push
jns
and
mov
nop
mov
push
jge
iret
sbbl
cmpsb
movsb
shlb
rcl
lea
adc
test
test
sub
lds
cmp
adc
in
fnstenv
add
xor
fwait
cmpsl
ret
push
mov
sub
rclb
jge
imul
inc
sub
mov
hlt
pop
lret
adc
dec
push
std
pop
repz
fucomip
xchg
jp
lock
mov
add
add
mov
test
cmp
mov
ret
or
pop
inc
adc
xor
loop
bound
sbb
push
mov
data16
insl
stos
test
mov
stc
dec
sub
pop
add
fsubrl
push
mov
out
xor
cwtl
sub
jno
cmc
testl
fisttpll
mov
inc
dec
in
jecxz
mov
push
mov
dec
mov
or
clc
ljmp
add
sti
dec
testl
leave
ljmp
xchg
sbb
insb
mov
rorl
inc
xchg
loope
int
cmpsl
lock
aaa
aad
pop
leave
push
in
sub
repz
mov
sti
popf
mov
dec
lret
mov
lret
les
pop
ret
dec
dec
inc
negb
push
mov
or
jne
bound
orl
iret
xor
inc
push
mov
xchg
jmp
dec
cmc
sarl
mov
dec
shl
subb
mov
mov
jno
stc
push
jae
js
cmc
imul
pop
or
out
pop
test
cmpsl
add
xchg
jbe
or
and
lods
hlt
clc
sub
sub
movl
sub
cmp
push
mov
call
jo
jns,pt
or
xchg
and
jae
mov
fwait
pop
mov
mov
lea
jnp
mov
ret
outsb
cmp
jns
or
in
add
les
or
lret
jle
testl
cmpsl
dec
fdivrl
repnz
pushf
les
fistps
sub
clc
ds
cltd
out
out
mov
movsl
sarl
xchg
shll
clc
xchg
inc
xor
xor
pop
mov
lahf
in
daa
in
pop
repz
sub
sbb
mov
inc
fstps
stos
rorb
mov
addr16
cltd
pop
dec
or
ficomps
sub
jnp
adc
mov
lods
arpl
add
jbe
lret
loop
daa
xchg
xchg
mov
or
fcompl
mov
test
mov
imul
jo
xchg
or
les
xchg
data16
jae
popf
adc
xor
mov
les
popa
jmp
lret
fnstcw
leave
jno
inc
mov
dec
loopne
ja
push
test
loop
ficoms
outsl
sahf
or
inc
test
adc
stc
and
cmp
xchg
out
test
loopne
repnz
push
mov
int
push
icebp
cld
dec
fcmovu
popf
aad
addb
cmp
add
fisttps
mov
jno
repz
pushf
and
push
adc
push
push
add
cmpsb
push
dec
push
push
jg
adc
cmc
lret
aas
adcb
sarl
xor
mov
jg
xchg
mov
xorl
pop
cmp
jb
iret
adc
xchg
insb
mov
push
repz
add
shl
rcr
mov
mov
or
sub
loop
cmp
add
mov
mov
mov
test
lret
jg
repnz
push
jns
test
xor
push
sbb
iret
subb
lock
daa
pop
nop
add
and
add
sbb
testl
inc
dec
push
mulb
lea
jmp
stos
mov
gs
xchg
jne
jge
inc
dec
push
cmc
in
rorl
dec
popf
fwait
xor
rolb
ud0
xor
rolb
fstp
dec
dec
stos
icebp
jns
and
xor
jmp
push
push
je
iret
movsl
cmp
xorb
jl
test
lock
jo
mov
dec
or
or
mov
lods
bound
jo
push
inc
sbb
xlat
cmp
mov
dec
icebp
xchg
cmpb
cli
fwait
xchg
jge
add
pop
scas
xchg
inc
negb
sahf
mov
jmp
mov
push
push
add
push
iret
adc
rcll
inc
pop
addb
hlt
sbb
cmp
pop
pop
jbe
cmp
adc
adc
sub
push
dec
mov
aaa
sub
sti
pop
negl
scas
ret
fcomps
gs
pop
pop
ja
lods
movsl
call
ret
add
or
dec
shr
insb
sbb
mov
jle
out
data16
out
test
les
mov
jl
ljmp
lods
fcomi
lods
xor
shlb
nop
mov
cmp
ret
cmc
mov
into
fwait
or
inc
adc
pop
ficompl
sub
dec
dec
sub
cmp
out
add
mov
jo
nop
stos
and
roll
or
push
fs
and
jbe
cmp
pop
testl
add
repz
in
add
iret
jle
inc
jno
mov
sarb
rolb
sahf
xor
outsl
ret
and
dec
or
cmpb
and
mov
lock
add
jae
in
push
leave
xor
mov
outsl
outsl
out
jb
shrb
fisttpll
outsl
mov
xchg
sub
adc
shl
cmp
clc
rcr
or
fistpl
xchg
in
jmp
rolb
jmp
imul
fldenv
dec
sbb
mov
sub
sub
repz
notb
mov
pop
das
cmp
sbb
add
sbb
aam
push
out
inc
packuswb
stos
dec
mov
sub
in
aas
cwtl
inc
pop
mov
shll
cmp
loop
add
push
sahf
xor
jg
insl
mov
fidivrl
pop
gs
mov
hlt
jl
sub
arpl
add
xchg
jne
ret
insl
add
fistpl
lcall
call
and
mov
mov
lcall
lcall
pop
adc
in
js
das
mov
or
popa
stos
dec
arpl
lea
mov
or
and
ds
dec
bound
xor
xor
cwtl
or
dec
movsl
mov
add
mov
sti
mov
mov
sub
pushf
pop
mov
push
sub
lret
loopne
loop
test
mov
add
jbe
aaa
fistpll
sub
add
cwtl
xchg
push
int3
inc
mov
dec
cs
shl
jp
aaa
test
and
mov
push
inc
int
jle
pusha
negl
in
cmpb
mov
leave
scas
inc
rcr
lret
stc
xchg
pushf
inc
or
jae
shlb
add
xchg
mov
and
aad
mov
mov
and
es
movsb
pop
cmp
push
mov
cmp
cltd
imul
notl
mov
push
or
es
xor
dec
iret
bound
xchg
cs
loopne
adcb
lea
imul
les
jle
movlps
test
mov
cltd
xor
pop
mov
test
out
xor
mov
sub
dec
iret
mov
mov
aad
or
lahf
outsl
gs
pop
clc
jnp
mov
push
add
push
scas
pop
shll
dec
sbb
ljmp
mov
or
jbe
lods
sbb
add
mov
xchg
inc
push
frstor
or
lahf
xchg
lahf
int3
pop
xor
lahf
stos
mov
cld
pop
ja
xor
sbb
cmp
arpl
pop
insl
jle
mov
mov
insb
push
fnsave
mov
shl
mov
lods
test
sub
sbb
sub
pop
pusha
roll
lds
out
cld
cmp
adc
mov
mov
inc
sbb
adc
filds
mov
das
js
and
sub
in
in
aaa
fs
inc
leave
in
pop
out
lods
or
out
fcomps
xor
xor
loop
loop
lret
push
cmc
dec
or
push
out
xchg
dec
in
cmp
movsl
mov
xor
lods
sub
push
in
std
xchg
xchg
popa
rclb
adc
xor
pop
pop
arpl
pop
cmpsb
cmp
dec
xor
sbb
mov
cli
arpl
lds
gs
pop
mov
lods
jno
mov
xchg
or
push
fstpt
adc
dec
and
addr16
sbb
cmp
das
pusha
ljmp
mov
test
sbbl
sub
xor
fs
ja
inc
mov
pusha
push
int3
lret
es
jo
mov
popf
sbbb
mov
mov
jnp
cmp
into
push
adc
test
mov
xchg
adc
xchg
pusha
inc
and
xor
push
xchg
faddp
rorl
add
jne
jge
es
mov
test
mov
cmp
out
mov
pop
adc
popa
shr
in
dec
sbb
add
and
mov
mov
mov
lds
or
add
rcl
cmpsb
push
cli
std
inc
mov
int3
call
popa
out
push
mov
fmull
arpl
push
add
fldt
aad
outsb
outsl
ja
cmpsl
test
imul
add
sub
pop
mov
adc
sahf
xlat
xchg
test
add
fsubrs
xor
xor
insl
jnp
imul
adc
lods
out
dec
and
lods
psrld
or
push
inc
add
ret
or
mov
push
test
lret
and
ja
stc
iret
xchg
lods
add
ror
push
mov
ret
test
pop
cmp
mov
lcall
sti
sarl
rolb
mov
adc
shlb
imul
stos
inc
test
cmpsb
and
addr16
pop
repz
sbb
js
sbb
loopne
nop
push
xor
mov
cmc
mov
mov
cmpl
xchg
subl
jns
ficompl
jle
call
or
lcall
mov
cltd
jbe
pop
or
decb
scas
jl
std
jno
and
pop
xchg
sbb
sbb
mov
mov
insb
aas
dec
stos
mov
pop
ds
arpl
lcall
xchg
and
arpl
outsl
jg
pop
mov
bound
xor
inc
jno
loopne
push
scas
inc
sub
jg
dec
mov
push
jae
xchg
lods
pop
xor
sbb
es
insl
daa
test
leave
mov
jp
or
enter
mov
inc
lds
leave
in
xor
xchg
jo
cmpsb
fwait
xor
push
mov
shll
pop
cmp
inc
sub
adc
pusha
xor
sbb
push
xchg
loop
cmp
adc
xor
add
lock
and
xchg
or
ja
cli
movsl
jno
fldcw
jg
sub
shlb
and
pop
and
mov
mov
mov
inc
ja
fimull
cltd
iret
inc
lret
movsl
enter
xchg
and
nop
insl
sahf
fidivs
jns
jbe
enter
push
inc
rclb
test
nop
jb
dec
push
movq
xchg
push
jl
mov
cld
lea
jo
xchg
add
jb
sub
decl
stos
aas
push
sbb
scas
daa
data16
mov
repnz
mov
clc
or
pushf
mov
outsb
movsl
data16
sbbb
pop
mov
fidivrl
jecxz
pop
lea
nop
jns
stc
aas
xchg
out
pop
mov
cmp
loope
les
cmp
jmp
loop
xor
test
add
in
jns
push
and
rcr
ljmp
mov
pop
pop
insb
cltd
icebp
js
rcrl
adc
test
sub
ja
cwtl
enter
jnp
ljmp
sbbl
ffreep
jl
adc
sbb
mov
sti
std
xor
sbb
cmp
repnz
xchg
mov
add
jnp
clc
int3
jge
add
adc
bound
push
push
bound
jbe
sub
xlat
out
outsl
push
in
mov
imul
cmp
imul
lock
inc
xor
mov
inc
fadd
rolb
mov
cmovg
ja
sbb
adcb
xchg
insb
clc
mov
inc
jle
imul
gs
sbb
cs
xor
lods
add
ss
nop
xor
mov
push
dec
mov
fsubl
inc
sub
xor
lahf
fcomps
push
push
push
mov
xor
lds
xorb
loope
pop
adc
lea
xchg
mov
push
push
lods
enter
jno
inc
xlat
cs
dec
movsl
rolb
sbb
gs
ret
fisubrs
add
pop
mov
shll
xchg
mov
iret
cmc
ja
in
shrl
xchg
jno
add
pshufw
add
mov
ljmp
xor
and
and
push
xor
pop
cmp
out
fcmovnu
mov
inc
sub
lret
int
mov
cs
mov
mov
das
sahf
aam
ret
jmp
sbb
pop
cmp
imul
pop
jecxz
movsl
int
push
ljmp
in
lcall
pop
out
inc
in
fwait
xor
in
iret
test
daa
mov
bound
xchg
test
ds
jge
fisubrl
pop
cmp
mov
or
loope
pop
xor
xchg
idiv
lret
push
sub
loop
cmp
les
std
dec
mov
jp
mov
imul
mov
dec
cmpsl
dec
add
dec
sub
lret
lods
lds
dec
pop
jmp
shlb
shl
jmp
test
aad
popa
das
jg
jo
aaa
sub
cmpsb
shl
subl
add
sub
fwait
sub
int
cmpsb
cmp
mov
dec
inc
aaa
fnstcw
xchg
cs
sbb
mov
testl
fisubrs
test
jo
insl
dec
jb
mov
mov
aad
call
push
mov
in
subl
int
lret
cld
aaa
fiadds
shl
inc
and
clc
sbb
mov
push
push
sub
jecxz
jbe
xor
mov
addb
pop
es
and
add
jmp
stos
inc
push
jne
cmp
cmp
mov
sub
cltd
dec
sub
out
jmp
dec
cmp
rcll
mov
push
and
or
cmp
inc
subb
inc
fisttpl
lret
push
and
mov
mov
cmp
push
jbe
push
enter
jle
xor
lahf
dec
cld
jl
fs
mov
jne
cmp
and
andl
fnsave
ja
mov
icebp
mov
stc
popf
xor
aaa
ret
shr
mov
push
roll
aaa
sbb
sbb
fisubl
jle
js
fdivl
lahf
add
sbb
dec
sbb
lock
add
sahf
clc
ret
adc
xchg
jbe
call
pushf
js
cmpl
add
das
fwait
ja
cli
test
pusha
repz
jb
movsl
cmpb
sti
sub
mov
addr16
imul
push
hlt
out
or
cli
fbstp
aad
fcomps
adc
mov
out
mov
test
loopne
sti
adc
aad
pop
sarb
out
in
inc
fbld
xlat
mov
sar
into
lahf
and
sub
inc
pusha
ss
push
outsl
idivl
sub
cltd
ud2
cs
mov
shr
pop
pop
in
adc
mov
mov
adc
push
mov
outsb
xchg
pop
nop
inc
loope
cli
fidivl
icebp
mov
and
out
lods
cmp
xchg
xor
adc
inc
into
sahf
jg
add
xchg
ja
call
push
imul
rcr
adc
data16
shr
mov
push
dec
aas
lods
aas
outsl
cs
dec
push
aaa
pop
cmc
mov
adc
cmp
lret
orb
xor
cmpsl
pop
push
cmp
ficoml
cmc
adc
push
in
jbe
inc
test
ja
dec
rorb
loope
cmp
mov
ror
mov
fidivs
jae
adc
xchg
popf
stc
pushf
pop
insb
mov
cli
or
insb
jae
stos
xor
sbb
sub
sahf
mov
dec
inc
and
or
dec
and
sub
cmc
inc
movsl
mov
push
adc
js
mov
bound
mov
leave
dec
outsl
pop
inc
adc
dec
mov
mov
sub
outsb
rolb
jo
notl
mov
jecxz
sbb
sbb
das
out
lods
icebp
shll
aam
insl
jp
cmp
ja
xsha1
cmpsb
or
mov
mov
pop
leave
mov
sarl
jb
leave
lret
rorl
sub
jo
out
add
mov
insb
cmpb
add
push
mov
movl
pop
repz
xor
xorl
sub
push
add
imul
and
add
push
notl
dec
lcall
sub
and
nop
outsb
scas
decl
xchg
notb
mov
jg
in
lret
addb
in
js
add
lcall
stos
scas
jp
cmp
ret
inc
sub
stos
adc
push
mov
pop
xor
scas
and
iret
cmc
insb
push
jno
insl
add
jns
mov
cld
pushf
ret
jcxz
jb
or
icebp
dec
es
lock
into
pop
out
inc
lret
add
mov
lret
loop
adc
mov
cld
jbe
cmpsb
dec
cmpsb
push
mov
sahf
dec
out
jmp
popa
mov
testl
xchg
push
xchg
scas
pop
clc
sbb
sti
daa
lods
cmp
mov
jnp
pusha
fstpt
lock
sbb
pop
add
test
adc
push
jecxz
pop
fwait
je
imul
or
insl
pminub
repnz
data16
and
jno
add
xor
cli
xchg
jns
cs
iret
jle
ret
out
jle
mov
xlat
aad
or
cmp
fimuls
xchg
adc
test
es
push
mov
test
sub
out
or
push
fistpl
and
jb
clc
cmc
adc
mov
out
daa
push
add
or
outsb
cld
dec
pop
out
mov
imul
push
push
ljmp
jle
xor
cs
or
cmp
mov
insb
inc
sbb
insl
fsts
roll
add
lods
sub
mov
sbb
rolb
in
add
push
dec
push
pop
mov
or
sarl
fstps
xor
outsb
xor
dec
sbb
dec
cs
push
or
push
lods
and
hlt
add
add
pop
mov
out
mov
xor
and
push
arpl
xchg
enter
insw
icebp
movsl
ret
mov
cmp
test
mov
and
nop
jae
mov
pop
fs
sbb
xor
ds
in
stc
loop
and
sbb
mov
ja
mov
mov
js
shlb
sbb
xlat
adc
mov
inc
pop
jmp
scas
push
out
inc
in
icebp
jge
fmulp
push
pop
push
test
fstpt
mov
pop
jae
sbb
lods
call
out
sub
jp
testb
pop
dec
sub
aas
imul
ja
push
aam
and
sti
jg
aas
mov
dec
xchg
inc
fcmovb
adc
mov
pop
xchg
icebp
in
test
mov
jae
xor
shlb
call
insb
pop
ljmp
mov
mov
lock
push
xchg
xlat
dec
inc
pop
jno
adc
adc
and
das
mov
and
add
push
daa
xchg
dec
int3
cmpsl
push
sbb
jns
sbb
add
jl
push
jp
mov
xor
in
aad
adc
sahf
adc
or
pop
cmpsb
jecxz
push
sbb
sbb
mov
or
pop
cmp
lds
pusha
rcrl
dec
lret
or
loopne
dec
ss
xor
adc
xchg
lcall
cmpsb
push
add
jecxz
inc
lcall
scas
mov
lret
outsl
shlb
fstpl
pop
outsb
xchg
pop
push
icebp
jg
test
jbe
clc
cltd
push
into
in
xchg
ds
iret
out
loop
cmp
insb
movsb
cmp
mov
in
or
iret
xor
dec
test
push
and
cld
xchg
or
lds
inc
push
jnp
push
xchg
inc
lret
out
std
jmp
cwtl
add
lds
inc
mov
imul
sbb
xor
xchg
mov
sbb
jg
ljmp
iret
bound
pop
sub
cld
xlat
push
xorl
mov
xchg
in
dec
test
fnsave
sbbl
aad
stos
stos
in
xchg
add
imul
sub
les
cmp
xor
enter
loopne
imul
sti
push
sub
push
repz
std
mov
in
sbb
cwtl
cmp
lea
xchg
sub
jge
jb
jns
mov
scas
cmp
pop
scas
in
fnstenv
out
mov
dec
into
movsb
mov
sbb
xchg
push
movsl
or
xchg
sub
cmc
sub
in
xor
sub
imul
pop
sahf
mov
adc
dec
cwtl
mov
fdivrs
ljmp
mov
sti
sub
cltd
mov
inc
fcoms
sbb
mov
lods
inc
jle
shrl
cmp
jge
or
arpl
pop
fdivrl
pop
scas
fdivl
cmpsl
fxch
xchg
sbb
popa
clc
out
xchg
cmp
add
ljmp
int
xchg
mov
div
mov
call
xchg
sbb
mov
std
mov
sti
shrl
mov
lret
and
jnp
in
lods
inc
pop
mov
fdivl
popf
rcrl
mov
in
dec
push
adc
jb
aad
jp
js
cs
mov
pop
jo
adc
fisubrs
mov
push
into
mov
sbb
clc
jnp
sbb
push
mov
jle
xor
xchg
push
adc
jnp
mov
inc
out
and
and
aas
jge
jle
notl
push
sub
mov
mov
bound
xchg
addr16
xor
xchg
cltd
sub
mov
cmp
aas
lds
jge
or
inc
mov
test
sub
add
fldcw
cmp
adc
push
fidivl
jnp
inc
cwtl
nop
mov
sbb
imul
jle
mov
mov
movsb
pop
jg
leave
or
enter
xchg
fdivl
cmp
inc
out
fsubrl
shl
sbb
lahf
std
mov
push
xchg
scas
cmpsl
clc
cltd
pop
stos
push
push
dec
sub
push
pop
cli
mov
pop
imul
shlb
repnz
insb
sbb
cltd
pop
cmp
cld
lock
mov
roll
mov
pusha
aad
cmp
sbb
xor
cmp
xchg
in
mov
mov
pusha
xor
mov
jne
mov
jne
or
jbe
inc
push
enter
and
icebp
or
pusha
ljmp
repnz
fsubs
jns
inc
mov
xor
lret
mov
jl
into
in
sub
ja
cld
pusha
stos
add
int3
stos
add
icebp
sub
lcall
mov
dec
int
aas
sbb
mov
out
bound
or
movsb
sbb
and
in
test
xlat
jnp
pop
dec
les
sub
xchg
jp
inc
cltd
xchg
jb
testl
into
fsubrl
fucom
inc
and
scas
xchg
enter
ds
mov
test
jmp
mov
jb
sub
aas
push
call
or
leave
cmp
adc
sub
xchg
pop
loope
mov
adc
cmp
lods
bound
xor
movsl
imul
dec
pop
stc
test
imulb
dec
dec
inc
sti
mov
enter
mov
adc
jae
push
fistl
fwait
jae
add
dec
idivb
mulb
lods
sbb
xor
xchg
mov
and
jecxz
int3
dec
cmp
sub
mov
add
shll
arpl
mov
rol
push
xor
xor
xor
adc
mov
repz
xlat
pop
je
and
mov
fisubs
jp
fcoml
inc
lahf
jmp
sbb
lds
cmc
lods
decb
or
fwait
jo
popa
rcr
rcl
imul
pop
jb
ret
sub
lret
outsb
rorb
jecxz
fmull
test
cwtl
call
dec
outsb
mov
push
ja
insl
sahf
pop
out
jns
not
jnp
or
jb
inc
ret
pop
push
push
loope
test
xchg
push
out
mov
or
adc
je
cmpsl
pop
outsb
sub
adc
fistl
leave
inc
arpl
push
aam
xchg
jo
sarl
push
pop
into
jns
mov
outsl
imul
ds
into
sbb
insl
push
push
mov
pop
imull
jmp
cmpl
cmpsb
leave
scas
cmp
lret
push
jmp
push
dec
inc
pop
xorb
jmp
add
push
add
cmp
and
cmp
mov
push
in
test
imul
nopl
dec
sub
or
jbe
repnz
std
xchg
inc
aam
mov
fs
insl
rclb
aam
push
fisubs
jp
sbb
adc
pusha
adc
xchg
mov
adc
inc
jmp
push
xor
xchg
mov
xchg
aad
lret
ja
cmpsl
xor
jns
or
pushf
cmp
in
pushf
or
rorb
mov
push
dec
ljmp
dec
data16
dec
jmp
sub
jo
xor
mov
xchg
rep
sub
les
add
mov
arpl
lods
arpl
aad
lahf
call
jge
mov
lods
cmp
and
inc
jmp
test
leave
jle
out
sub
mov
ror
mov
stc
xchg
jb
repz
push
bound
cmpsb
or
xchg
xchg
mov
or
mov
fcoms
pop
jle
adc
lret
push
push
es
in
mov
mov
mov
or
cmpsl
inc
xchg
push
ret
outsb
out
mov
test
sbb
out
lret
das
push
push
inc
xor
inc
cltd
aaa
pop
enter
outsl
mov
pop
call
jo
ret
sub
mov
aam
iret
loop
in
mov
xchg
cmp
push
pop
scas
xchg
sbb
xor
push
lahf
outsl
cmp
inc
ja
mov
lahf
inc
sub
and
test
mov
push
and
xor
std
sbb
mov
mov
adcb
pop
cltd
push
lea
cltd
lret
xlat
sbb
stos
pop
mov
ljmp
jecxz
mov
xchg
shll
mov
mov
pop
xchg
mov
xor
repnz
mov
inc
aas
push
daa
outsb
ja
test
jmp
xor
xor
movsl
xchg
mov
inc
add
shl
outsl
mov
popa
cld
lea
and
sub
aaa
adc
cli
push
and
mov
push
adc
adc
add
jne
fwait
pop
inc
fwait
leave
leave
mov
push
cs
push
xchg
xor
push
or
lea
movsb
add
in
and
cli
and
stc
jo
cli
push
lods
inc
xorl
fnstcw
push
movsl
mov
fsts
mulb
add
xchg
test
leave
xchg
jns
cmp
bound
pusha
add
popf
and
ss
clc
inc
fmulp
xor
bound
ficompl
jae
stc
lods
inc
sub
jg
jg
lret
cmp
loopne
and
cmp
dec
sarb
add
sbb
lret
mov
sbb
cld
hlt
mov
scas
adc
cmp
jmp
or
inc
dec
std
shr
cs
mov
cli
rorb
sti
xor
fbld
mov
fnstenv
lea
out
out
pop
add
sbb
xor
or
popf
jb
jns
pop
sahf
aas
std
adc
cmpsb
sahf
pop
stos
inc
xlat
nop
stos
enter
jns
rep
xchg
jo
xchg
jp
in
mov
in
adcb
jb
cmp
jecxz
imul
out
or
out
fldenv
jmp
in
jb
inc
das
pop
js
sti
jbe
sbb
add
mov
pushf
push
mov
pop
call
ror
mov
jg
inc
cmp
jg
sahf
sbb
repz
dec
and
jno
inc
jmp
fisubrl
hlt
adc
and
lea
mov
mov
cmp
sub
mov
shlb
shr
push
push
sbb
sti
outsl
shll
mul
mov
int3
or
or
cmpsb
aaa
mov
test
and
lret
bound
push
repnz
push
nop
cmp
popf
jnp
or
leave
jae
cmp
lds
push
fstps
xor
pop
das
pop
ficompl
jg
lea
or
aam
dec
les
movsb
or
cmc
jne
outsb
repz
mov
ror
icebp
sub
lods
ljmp
pop
xor
stos
sbb
int3
adc
jp
das
popf
sti
aad
mov
add
scas
shlb
out
sar
cmp
fldt
pusha
push
jmp
mov
inc
cmp
pextrw
mov
sbb
dec
lahf
push
insl
lret
test
int
mov
dec
fmull
xchg
rep
repz
pop
fldl
test
and
xchg
arpl
pop
jne
inc
push
repz
cli
cwtl
and
or
ret
xor
push
sbb
test
imul
loop
dec
push
or
movsb
cmp
pop
sbb
dec
dec
mov
pop
inc
imul
ds
or
scas
push
ljmp
cmp
mov
cmp
pop
stos
call
xchg
stc
pushf
fs
push
and
rclb
js
cmp
inc
inc
aas
in
test
mov
pop
aaa
jae
test
mov
out
push
inc
fwait
lret
jl
fbstp
out
dec
or
imul
addr16
pop
add
pop
cmpsl
push
daa
adc
fnstsw
leave
out
jno
out
or
ds
clc
aas
aaa
insl
xchg
adc
xchg
pop
stos
dec
jns
mov
cmp
addr16
fucomi
mov
jo
pop
fdivl
and
lcall
inc
gs
rorl
iret
jmp
mov
mov
push
das
sub
jp
ds
xchg
add
and
pop
add
mov
mov
adc
or
adc
fnsave
push
jno
loop
push
addr16
mov
or
sbb
aas
in
sahf
mov
or
idivb
jge
xor
fucomp
or
cmp
xchg
mov
mov
pushf
mov
adc
lret
cli
fyl2x
rcrb
mov
add
out
fs
cmpsb
out
mov
gs
xchg
popa
scas
mov
pop
sub
mov
fbld
dec
mov
scas
push
daa
add
sub
hlt
push
out
and
ffreep
xor
in
push
arpl
jnp
push
cmp
inc
dec
daa
adc
dec
dec
lret
loop
pop
outsl
mull
lahf
clc
mov
inc
rol
fimuls
xchg
mov
sbb
or
adc
popf
xor
mov
inc
fisttpl
lret
push
popa
sbb
fdivrs
int3
cltd
xor
jnp
inc
andb
pop
in
insb
and
test
scas
sbb
pop
cmp
shr
adc
jg
inc
mov
cmc
dec
test
int3
in
popf
or
ds
inc
jo
ss
pop
push
cmpsb
out
in
jbe
pop
mov
jae
ret
or
repz
sbb
mov
decb
xchg
daa
cmp
aad
test
xchg
adc
dec
mov
hlt
push
push
jno
mov
inc
fadds
movsb
pop
dec
out
xchg
inc
xchg
and
dec
xor
shrl
mov
jae
icebp
je
adc
cmp
out
fs
data16
dec
push
out
mov
mov
lret
and
mov
mov
xor
int3
mov
sti
test
lret
inc
mov
insb
call
movsl
and
insb
add
into
mov
or
int
pop
out
xchg
cs
adc
hlt
or
xor
lea
out
jne
test
mov
cs
pop
sub
xor
call
loopne
out
xchg
pop
pop
in
mov
and
cmp
mov
ds
sar
loop
fisttpll
js
popa
loope
inc
add
lret
ffree
mov
shll
les
xchg
inc
push
repz
or
enter
inc
sub
inc
inc
add
mov
stos
mov
push
jmp
push
mov
cld
jo
xor
lahf
nop
adc
fldcw
out
xchg
jecxz
fptan
xchg
mov
lods
bound
add
push
push
div
xchg
ret
ljmp
lret
dec
mov
xchg
insl
negl
jno
inc
hlt
cltd
movsb
lods
cli
or
loope
pop
lret
mov
push
sbb
out
out
xor
mov
int3
imul
jo
mov
push
sbb
dec
lret
fstp
leave
fldt
notb
psrlq
fnstenv
outsb
arpl
cmp
mov
and
cmp
mov
repnz
cmpsl
lods
iret
movsb
out
fistl
rorl
jbe
jp
loope
jmp
rep
cwtl
cmp
and
pop
addb
inc
mov
mov
jo
mov
mov
cmp
roll
pop
mov
mov
mov
mov
icebp
inc
imul
je
shlb
jo
mov
les
sbb
sahf
jne
stos
ret
lds
adc
sub
fcomps
int3
push
stos
xor
push
jne
shll
push
lods
ljmp
call
imul
sarb
inc
lods
je
roll
cmp
fsubs
xchg
dec
mov
int
subb
pop
mov
stc
pop
out
push
iret
iret
aad
daa
jbe
or
repnz
mov
jecxz
lahf
push
add
xchg
in
cwtl
test
out
rorb
jo
shrb
dec
pushf
mov
push
add
insl
data16
push
xchg
sub
jae
stos
inc
or
xor
mov
mov
inc
push
jns
mov
xor
or
cmp
and
mov
rclb
adcl
xchg
fadds
aas
sbb
xlat
push
adc
pop
je
scas
ret
dec
aaa
push
and
xchg
pusha
fwait
out
xchg
ret
enter
fs
scas
mov
test
cwtl
dec
out
sarb
hlt
sbb
orl
daa
popl
push
add
dec
xor
data16
adc
xor
test
std
xchg
adc
mov
into
mov
push
js
mov
sbb
mov
fcoms
mov
inc
dec
aam
fadds
lds
shrb
out
fdivl
pusha
ficompl
jo
adcb
ror
xor
in
inc
inc
cltd
test
aad
dec
or
fistpll
sbb
dec
mov
xchg
xor
mov
vfnmadd132ss
out
mov
cmp
xor
sub
shrb
call
ljmp
movsl
fwait
test
fistpll
dec
mov
mov
pop
jne
cmpsl
jo
shr
cmp
inc
cli
pusha
dec
xchg
repz
push
bound
cli
sahf
shll
lret
pop
sbb
decl
adc
iret
fstpt
lea
out
cmp
or
push
lret
setne
inc
rcrl
leave
mov
outsl
cmpsb
daa
inc
mov
mov
addl
xchg
sar
data16
fmul
je
and
dec
ja
call
mov
daa
scas
push
leave
xor
fstps
mov
adc
cmp
jae
mov
das
or
mov
sbb
cs
or
xchg
cs
dec
sub
lret
mov
das
sub
xor
push
mov
ret
and
test
test
pusha
mov
movsb
jmp
push
mov
cmpsl
dec
cli
mov
inc
popa
xchg
adc
fisubs
mov
sub
inc
pop
sbb
push
movsb
out
data16
notl
call
sbbb
test
cmpsb
push
movsb
insl
sub
mov
cld
sbb
xor
test
lods
cmp
push
cli
or
aaa
into
leave
pop
rclb
insb
pop
jmp
cld
fldt
push
stos
insb
or
adc
adc
sbb
es
sahf
scas
lahf
inc
jle
in
popl
sbb
mov
add
xor
mov
test
sub
iret
mov
outsb
inc
cli
or
popa
testb
les
out
aam
inc
in
mov
ja
xchg
fsubl
pushf
jns
cmpsb
outsb
pop
cmc
push
outsb
lds
cmp
pusha
adc
inc
or
inc
pop
pop
fsubr
jle
push
lods
jecxz
xor
sti
mov
dec
in
mov
fldcw
ds
xor
ds
bound
stos
mov
movsl
std
subb
outsb
cs
mov
xchg
mov
test
sub
roll
mov
sub
pusha
xor
jae
push
sub
and
fildll
and
inc
cld
insl
stc
stos
inc
ret
pop
jae
jle
enter
enter
pop
xor
outsb
les
push
adc
out
mov
jb
out
sbb
cs
push
sbb
jne
int3
test
notl
shrb
xchg
enter
imull
je
dec
jns
inc
les
adc
sub
push
pusha
jmp
ret
std
mov
cmpsb
sbb
pop
sbb
nop
pop
pusha
cmp
add
push
adc
lahf
andb
out
scas
or
fsubs
into
es
sti
iret
jo
movsb
xor
repz
shrb
jle
stc
pop
inc
fimuls
pusha
mov
push
mov
add
loop
dec
iret
mov
mov
push
ret
dec
cs
bound
xor
loop
inc
in
or
dec
ds
pop
cmp
imul
push
movsb
jle
xchg
mov
add
out
inc
and
push
lret
xchg
add
addr16
mov
jmp
push
inc
push
loope
cmp
loope
ret
fisttps
hlt
dec
pmaddwd
xor
sub
jo
dec
mov
inc
js
jns
cltd
and
mov
aaa
andb
jmp
or
xor
jne
cli
sub
out
sahf
sahf
pop
popa
xor
adc
pop
mov
mov
pop
ljmp
enter
mov
mov
adc
shl
pop
dec
shr
out
cmpsb
mov
adc
cmp
rcll
ficoms
push
mov
sarl
mov
pop
mov
sbb
lahf
shrb
cld
mov
test
pop
add
call
scas
rcrb
popf
clc
xor
adc
xchg
mov
mov
xor
data16
mov
adc
mov
and
stc
sbb
xchg
cmp
popa
push
ret
mov
or
adc
add
out
enter
xchg
xor
test
mov
imul
into
xorb
mov
aad
or
in
sub
enter
cli
out
jg
inc
mov
push
cwtl
dec
mov
mov
dec
fnstcw
outsb
int
daa
mov
inc
fsubl
insb
cs
ffree
arpl
cs
push
lcall
in
ret
test
cmpsb
jno
xor
add
sub
fistpl
jg
xchg
sbb
test
addr16
divl
out
shl
cli
fistpll
sbb
mov
arpl
out
sbb
sub
in
rolb
mov
pop
jno
shl
ja
pop
mov
push
push
pop
push
pop
icebp
orl
ja
sti
and
add
mov
into
gs
cltd
push
or
jle
sub
inc
xchg
loope
adcl
pop
les
add
ret
cmp
in
bound
dec
testl
xchg
outsb
ja
jnp
sub
push
cmp
stos
in
jb
and
test
mov
mov
icebp
lds
notb
sahf
push
nop
pushf
das
cmp
addr16
pop
imul
jg
push
clc
cmpsl
jnp
mov
movsb
out
mov
mov
and
lods
jl
icebp
sub
adc
mov
orb
pop
cmp
movsb
test
fidivrl
das
mov
cld
lods
fstl
imul
outsl
loop
inc
jb
jne
jge
mov
push
jb
sub
pop
inc
rcrb
xor
and
jb
shlb
jl
sub
repnz
movsb
push
add
imul
iret
fcompl
int3
mov
int3
xchg
aas
andl
sbb
stc
int3
cmp
inc
rol
dec
add
mov
mov
cmp
repnz
pop
call
fldl2t
lcall
out
repnz
repnz
aam
sbb
and
mov
fisttpll
repz
jae
sub
lret
fsubrp
jp
orb
fwait
jbe
test
push
stc
push
fcoms
mov
sbb
stos
divps
sti
dec
mov
mov
mov
shrb
dec
ljmp
inc
sbbl
pop
or
repnz
adc
mov
les
pop
popf
mov
cld
je
in
clc
hlt
xchg
dec
ds
xor
cmp
inc
cmp
mov
mov
in
push
mov
ret
sbb
sbb
adc
pop
mov
or
and
dec
and
xchg
stos
sub
ret
int3
push
sub
in
insl
xor
xor
movsl
push
or
mov
xor
or
lcall
in
and
mov
sub
lcall
and
imul
push
sahf
fdivr
or
cmp
subl
dec
mov
ret
cmc
mov
and
gs
push
fiadds
loopne
adc
xor
scas
pop
out
xor
jnp
in
lods
js,pt
push
push
addr16
push
loope
push
xchg
add
lea
adc
lods
dec
pop
shrb
aas
testb
into
xchg
and
rcl
adc
xlat
xor
dec
mov
jecxz
fstps
and
mov
lret
push
stos
mov
std
in
xor
in
loop
cltd
clc
xchg
xchg
cmp
das
addr16
es
out
push
sbb
call
repz
fimull
mov
and
in
rcrl
xchg
inc
jecxz
stos
cmp
ret
insl
test
cmp
daa
and
data16
and
add
fld
adc
lahf
cmp
movsb
mov
pop
es
mov
das
ud2
adc
xlat
ret
movsb
dec
addr16
adc
ss
subb
sbb
jne
push
loopew
js
jl
loope
in
jg
lea
ror
xchg
mov
push
add
out
and
cmpsl
ret
pop
xor
negb
stos
mov
cmp
mov
aam
fdivl
cmc
mov
les
je
dec
mov
xchg
lock
pop
out
adc
aad
inc
jb
dec
testl
iret
sub
inc
jmp
xor
cpuid
mov
xchg
daa
out
jno
cmp
scas
and
jo
jle
in
ret
fs
lret
dec
test
leave
adc
pop
xchg
jmp
xchg
mov
mov
or
mov
lods
pop
sub
in
mov
das
test
popf
stos
mov
mov
int3
and
addr16
fstl
cmp
xchg
sti
and
lods
lods
gs
adc
loope
insb
push
stc
ja
rclb
add
jmp
pop
adc
cmp
mov
test
pop
or
gs
mov
in
test
aad
mov
jne
ret
scas
mov
js
nop
dec
inc
cli
lock
jmp
xor
test
lret
aam
in
mov
leave
into
mov
scas
pop
jmp
pushf
shll
je
cltd
les
inc
sbb
jecxz
shl
sahf
pop
fwait
icebp
add
push
dec
addr16
xchg
sub
int3
pop
ljmp
bound
dec
adc
sub
rcrl
adc
lea
dec
incl
data16
movsb
pop
pop
insb
jbe
xchg
rcrb
icebp
mov
add
ret
ret
dec
dec
clc
xchg
in
xlat
insl
xchg
in
outsb
mov
lea
orb
cmp
cmp
ljmp
les
sbb
jmp
or
filds
je
test
pop
push
clc
cmpsb
cmp
aad
popa
jp
sbb
lds
cmc
push
jb
ret
pop
cmp
mov
int
test
mov
sub
lods
lahf
sbb
push
cld
cmp
shlb
pop
jge
push
cmpsb
inc
adc
jae
adc
dec
cmp
dec
dec
fimull
out
insl
popa
fists
in
add
push
mov
stos
sti
push
push
shrb
addb
jle
push
jo
or
jp
les
mov
or
iret
into
scas
addr16
jae
mov
aas
inc
mov
iret
mov
inc
pop
lcall
imul
or
fldl
loopne
sub
aas
in
mov
loope
jnp
scas
les
and
in
negl
int
loopne
inc
idivb
bound
push
jmp
sahf
xchg
pop
popa
jp
xor
dec
mov
sahf
cmp
push
jne
int
loop
ss
out
je
in
sbb
pop
lods
into
rcrb
xchg
push
idivl
mov
inc
iret
jmp
mov
xor
iret
fldl
ret
add
cmp
xor
popa
push
hlt
mov
and
xor
repnz
or
lret
insl
loope
sub
mov
pop
dec
and
pushf
add
dec
lock
rcrl
and
mov
scas
cmp
imul
or
add
jg
dec
cmp
jae
fwait
inc
pop
or
daa
cmp
push
or
bound
add
ret
fildl
dec
ja
fcoms
or
jno
mov
jmp
mov
sub
mov
sbb
test
andb
inc
sbb
les
aas
cwtl
test
shrb
adc
jl
dec
cmc
mov
or
mov
mov
lsl
mov
adc
mov
push
push
adc
repnz
icebp
insl
dec
adc
ss
aad
or
pop
pop
and
pop
ss
clc
push
inc
clc
mov
ja
mov
pusha
fisubrl
add
sub
fdivr
mov
mov
xor
mov
lret
adc
faddp
arpl
jecxz
ja
out
mov
inc
push
xor
or
dec
and
pop
and
cmpsb
scas
push
fisubl
rolb
mov
xchg
cltd
stos
mov
fsubrl
push
ljmp
push
xlat
inc
notl
js
arpl
inc
push
imul
add
mov
cld
mov
push
xor
sti
sbb
cmpsl
lea
sub
ficomps
jl
and
add
adc
notb
fistps
mov
lahf
ret
sub
aaa
pop
adc
mov
mov
rcrl
or
pop
lret
bound
mov
call
adc
add
test
jle
inc
sub
shlb
leave
xchg
jl
or
mov
fsubl
aaa
stc
push
or
aad
fiaddl
xchg
outsb
xor
fnstcw
adc
insl
mov
and
int
push
jmp
mov
sbb
jge
enter
dec
test
jp
mov
push
in
mov
push
mov
clc
xor
shr
stc
jae
mov
dec
aaa
push
push
rorl
insb
jns
mov
fcos
mov
aad
imul
jb
gs
decb
and
roll
movsl
cmp
shrl
shl
test
pop
lret
or
outsb
or
lahf
jmp
icebp
xor
mov
das
orb
dec
xchg
mov
movsl
int
ljmp
mov
sbb
push
dec
call
sub
mov
lcall
dec
stc
xchg
sub
in
or
ljmp
mov
jge
fcompl
icebp
mov
sbb
outsl
lcall
pop
sub
or
mov
cmp
fsubp
mov
bound
mov
fucomp
fstpl
jne
lret
rcrb
add
dec
jl
mov
imul
jbe
test
pop
mov
aad
inc
outsl
inc
or
je
push
jae
dec
pushf
das
sarl
les
jl
in
cmp
out
shrb
push
inc
fldl
mov
sbb
movsl
int3
arpl
mov
cmpsb
shrb
test
cmp
adc
iret
inc
lods
add
mov
dec
push
or
mov
fs
sub
loopne
addr16
insb
mov
aad
push
pop
xchg
push
jmp
sarl
decb
lea
fildl
ljmp
mov
call
inc
sub
push
push
je
imul
mov
aas
mov
rorl
or
sbb
inc
push
jb
dec
mov
aam
dec
push
and
leave
xchg
pusha
push
mov
or
jno
mov
adc
add
xchg
inc
sub
shr
neg
sbb
mov
mov
mov
add
ja
sbb
xchg
gs
shrl
xchg
adc
lds
icebp
inc
dec
add
jnp
xor
adc
out
daa
cmp
call
adc
mov
push
loopne
mov
xlat
push
inc
fsubrl
lods
and
mov
jbe
jno
bound
movsb
fwait
pop
mov
jae
xchg
sub
cmp
pop
and
fisubrl
jmp
xlat
pushf
test
sbb
inc
mov
stc
dec
daa
adc
test
scas
int
or
xchg
sbb
decb
mov
lock
mov
out
test
add
push
and
leave
les
fwait
mov
pop
out
sbb
hlt
addr16
or
idiv
fldcw
rclb
adc
xor
jo
ljmp
lods
jl
mov
mov
scas
fisubs
mov
push
fldcw
dec
fdivs
es
add
pop
mov
je
mov
iret
pop
push
dec
mov
add
lret
push
test
add
jae
xor
aad
push
js
out
ja
push
fdivl
test
cs
cli
ret
lods
inc
pushf
scas
jae
dec
das
xor
movsl
dec
sub
push
sahf
loope
shlb
js
dec
lock
pop
mov
inc
mov
in
sbbb
push
icebp
fdivs
cmp
lods
call
cmp
dec
fwait
xor
lahf
out
sub
std
xchg
inc
loop
push
cltd
sbb
cwtl
and
mov
and
jmp
mov
xor
rcrb
pop
and
enter
and
sub
pop
movsb
dec
pop
adc
xchg
pop
inc
cmp
xchg
sub
subl
mov
fsubr
lcall
lods
mov
or
adc
or
xor
push
lods
mov
adc
cmp
xchg
fs
fcmovnb
mov
scas
fistl
imul
jmp
jae
outsl
lret
mov
cwtl
fsubrp
cwtl
push
xor
sbb
inc
mov
mov
cli
mov
pop
add
mov
pop
sub
pop
into
adc
sub
jge,pt
and
call
into
subl
add
inc
subb
jno
mov
lea
lods
cmp
jnp
pop
test
xchg
xor
jb
cmpsl
inc
push
cmp
lea
dec
mov
push
push
jmp
push
inc
push
mov
xlat
add
push
outsl
push
mov
mov
inc
sti
jo
sub
mov
cmp
fwait
mov
cmpsb
mov
cmc
xchg
mov
pop
mov
loopne
hlt
xchg
aaa
push
aad
add
int
aas
js
sbb
mov
push
outsl
leave
test
jge
sbb
pop
xchg
xor
jno
int
and
and
jmp
out
inc
out
jne
sub
pop
push
ja
mov
jmp
fldcw
pusha
rcrl
stos
pop
hlt
test
jge
xor
movsl
out
movsb
pop
fmull
mov
jbe
mov
or
fcoms
test
shrl
push
xor
sbb
fwait
lea
icebp
jno
mov
pop
add
sbb
pop
icebp
imul
ss
into
js
in
std
dec
and
sbb
and
mov
jmp
jle
stos
add
pop
mov
movsl
in
aad
jbe
push
in
xor
jno
lods
loop
mov
daa
nop
or
jle
aad
ds
add
xor
push
call
jb
hlt
mov
and
push
xchg
push
fidivrl
push
ja
outsl
call
cld
hlt
adc
stos
shrb
inc
inc
push
jp
imul
addr16
addr16
mov
les
xchg
movsb
mov
mov
icebp
aam
pop
ret
pushf
xchg
adc
xchg
fbstp
scas
mov
pop
cmp
dec
and
adc
insl
mov
jle
fmul
test
inc
dec
add
or
sub
lahf
stos
pop
push
rcrl
xor
push
mov
jns
outsb
mov
ret
push
mov
mov
cmpsl
sbb
and
sbb
xchg
jns
jnp
mov
and
cmpsb
aaa
pop
insb
jle
pusha
mov
shl
das
add
fsubrs
in
int
pop
pop
sbb
clc
xor
jb
add
pop
ja
push
sbbl
in
notl
mov
fadd
test
pop
popa
xor
jo
add
mov
mulb
daa
cmp
lods
push
mov
int3
scas
xchg
sbb
aas
sbb
out
mov
call
cli
xchg
xorb
jp
sbb
in
jp
sbb
fwait
jae
dec
loope
in
adc
adc
fimull
inc
inc
pop
cld
xchg
mov
sbb
fisttps
daa
add
sbb
inc
pushf
mov
imul
fsubr
push
or
cmpsl
xchg
mov
rclb
rcll
dec
insl
push
in
lock
int3
adc
je
sub
stc
arpl
jg
mov
inc
std
rcrl
enter
filds
call
or
jle
mov
push
insb
mov
push
popa
test
cmpsb
sbbb
test
mov
loop
aam
into
nop
jne
dec
push
push
adc
lds
pop
inc
mov
xor
xchg
dec
cmp
mov
outsb
fdivrs
jmp
das
daa
pop
mov
nop
pusha
xchg
pop
sbb
dec
add
movsb
fstps
ret
push
push
mov
sbb
fwait
pop
push
pop
test
iret
push
sti
mov
cltd
mov
dec
aam
mov
xchg
pop
mov
fbstp
out
mov
lret
xchg
jae
dec
sar
add
sub
ficoml
adc
aas
cmc
mov
add
iret
mov
shll
popf
fldcw
pop
mov
subl
sbb
jnp
dec
dec
xor
dec
mov
daa
pop
fldcw
dec
inc
sbbb
nop
in
cmpb
mov
ljmp
mov
jb
fnsave
lods
pop
xor
pop
out
xor
dec
psllw
jp
xor
dec
dec
push
cmc
push
test
push
in
pop
and
test
bound
pop
test
pushf
jg
and
gs
sub
pop
sbbb
divl
sbb
leave
pop
mov
fisubs
jnp
mov
scas
popl
movsb
adc
jge
mov
shlb
jae
std
movsb
lahf
jp
add
test
popa
clc
xchg
shll
sahf
sarb
jg
mov
imul
popa
cmc
mov
jecxz
fidivrs
rolb
add
jbe
mov
inc
pop
aad
xor
jg
shrb
or
nop
pop
imul
mov
jns
pop
mov
sub
adc
in
mov
addr16
push
adc
ret
and
cmp
sar
push
mov
mov
sub
data16
add
icebp
pusha
sub
mov
push
in
mov
jns
jb
mov
push
enter
mov
xor
push
cmp
loopne
jmp
jae
sub
pop
mul
ret
pop
lret
jb
add
cli
push
dec
fcoms
insb
or
xor
xchg
mov
adc
xchg
xchg
jb
and
nop
loop
cmc
sbb
mov
sbb
xchg
into
jp
xor
add
sub
jp
adc
inc
ljmp
pop
inc
popa
adc
ljmp
mov
xchg
insl
mov
rcrl
dec
popa
jg
cli
nop
packsswb
sahf
add
mov
addr16
fwait
sti
rolb
mov
push
lret
xchg
jns
dec
sub
cltd
xor
out
or
xchg
adc
mov
xchg
iret
add
cmp
inc
pop
aam
enter
in
push
dec
into
pop
add
arpl
xchg
popf
mov
mov
loop
jnp
inc
pop
cmp
xchg
jnp
sub
cmc
lock
leave
adc
mov
out
adc
ljmp
push
inc
in
jl
ds
popf
scas
aaa
vpaddusw
cmp
mov
out
test
xchg
fs
jecxz
pop
inc
mov
out
lea
mov
bound
or
inc
jmp
test
sbb
ljmp
fwait
sub
inc
icebp
mov
or
pop
adc
adc
test
mov
mov
adc
notb
pop
push
fsubl
aad
mov
hlt
dec
aad
xchg
xchg
jp
mov
lret
sbb
cmpsb
pop
gs
repz
repnz
sbb
pop
ret
movsb
xchg
or
jl
shll
out
jnp
inc
test
xchg
dec
pop
adc
or
xchg
call
lea
jecxz
mov
adc
das
cld
outsb
adc
sbb
mov
xchg
inc
xchg
xchg
fidivl
scas
jno
test
sarl
fldcw
cmpsb
xlat
mov
shrl
pop
incb
jle
sbb
ret
mov
pusha
enter
icebp
mov
movsl
out
aaa
or
pop
call
orb
inc
sub
sub
cltd
xrelease
xor
scas
xor
xor
pushf
in
dec
out
push
sub
jg
cmp
push
cli
movsb
cmp
scas
add
mov
pop
adc
xchg
push
imul
mov
lock
jg
push
pusha
jne
iret
out
shll
xchg
push
repz
lahf
cltd
outsb
inc
dec
jne
fxch
int
jbe
repz
mov
jne
outsb
test
jle
add
je
addr16
xor
push
jb
iret
test
adcl
or
jae
arpl
jmp
jno
ds
xchg
adc
push
cmp
sub
xchg
mov
add
cld
inc
popa
jge
jmp
ret
xor
sbb
mov
fistpl
xchg
mov
dec
incl
add
push
sti
jg
clc
dec
aam
push
mov
push
out
cli
in
orl
xchg
dec
stos
cmpsl
or
shrb
icebp
mov
iret
stc
lea
montmul
cmpsb
add
xchg
dec
pop
sub
in
sub
scas
stos
imul
lods
roll
sbb
dec
insl
push
add
call
and
cmpsb
ljmp
cmc
stos
es
mov
inc
and
xor
adc
sbb
out
fldcw
mov
and
mov
insl
mov
adc
ss
and
or
fsts
outsb
mov
mov
fisubrs
call
in
and
lea
arpl
add
inc
mov
je
mov
xor
mov
sbb
cld
mov
mov
sti
mov
sbb
and
mov
inc
sub
mov
lea
xor
daa
lcall
orl
mov
pop
or
lds
es
xor
inc
inc
stc
arpl
or
mov
pusha
pop
call
dec
mov
or
push
call
mov
sbb
inc
sub
aam
call
fcoms
cmc
add
dec
xor
push
andb
push
out
or
ljmp
push
or
cmpsb
shrl
sub
stos
pop
stc
std
xchg
lds
xlat
mov
push
xchg
test
fsubrp
je
pop
mov
xchg
cs
mov
ret
fmull
xor
shrl
adc
cs
sub
pop
scas
and
xor
xlat
mov
mov
adc
add
fnsave
enter
ja
dec
push
mov
pop
add
sub
pop
leave
movsb
or
lcall
adc
push
outsb
hlt
shll
decb
push
aam
test
popa
fsubrl
push
mov
add
fldcw
and
test
push
and
scas
pop
jmp
pop
jbe
testl
lock
movsl
sub
test
fwait
lods
scas
sub
stos
push
pop
scas
jns
bts
loopne
hlt
add
mov
inc
nop
stos
jne
or
fneni(8087
scas
xchg
dec
mov
test
rorl
and
out
push
add
fstpl
xchg
out
aad
mov
test
nop
push
out
xlat
sahf
xchg
cmp
neg
jp
sub
xchg
and
pop
clc
es
jo
mov
jmp
test
and
sub
or
int3
jmp
jbe
pop
cmp
cmp
in
dec
dec
stos
popf
jl
movsb
dec
pop
lea
and
xchg
test
pop
hlt
jl
mov
jns
mov
pop
dec
test
push
cmc
mov
jmp
mov
push
mov
dec
cmp
pushf
ljmp
inc
sbb
push
mov
lret
add
lahf
sub
nop
xor
mov
xor
imul
in
sub
cld
dec
fnsave
add
in
xor
mov
mov
pusha
test
inc
mov
popa
add
inc
cwtl
pop
icebp
int3
dec
out
clc
mov
xor
push
dec
add
xchg
les
and
cld
hlt
inc
or
fidivs
pop
cmp
inc
push
in
filds
gs
dec
data16
lahf
icebp
dec
inc
sub
sbb
jae
xchg
mov
ret
cmp
xchg
lcall
outsl
jle
imul
jnp
or
addr16
push
fists
pop
xchg
loopne
int3
pop
ret
sub
jnp
adc
xor
mov
dec
adc
jl
scas
xor
data16
enter
add
push
push
jo
out
pop
or
sbb
addr16
imul
iret
ss
call
mov
insb
inc
pop
add
xchg
xchg
aaa
shrb
or
mov
add
inc
xlat
jmp
sub
loope
mov
sahf
jmp
js
pop
int
adcb
jmp
push
xor
pop
or
movsl
ja
push
jmp
or
push
decl
sahf
push
lea
hlt
adc
push
jae
xor
mov
int
lock
mov
inc
xlat
cs
and
stos
mov
sub
in
idivb
push
mov
mov
mov
aaa
inc
mov
mov
mull
fsubl
jo
out
sub
jae
ja
inc
popf
inc
test
push
aad
jl
jp
pop
pop
cltd
push
shr
inc
mov
mov
mov
jb
cmp
xchg
lret
lret
in
jae
test
inc
xchg
xchg
arpl
lods
xor
sbb
mov
mov
bound
jo
adc
aad
and
insl
rolb
adc
mov
mov
sub
out
jl
int3
mov
cmpsl
mov
pushf
mov
or
cmp
clc
cmpl
dec
pop
int
sbb
hlt
pop
clc
push
add
mov
dec
call
sub
jnp
je
mov
pop
adc
mov
jbe
xor
out
adc
incl
pop
test
xchg
loopne
int
xor
push
popa
stos
fistps
pop
dec
dec
sub
sub
pop
xchg
push
in
inc
pop
inc
iret
and
xchg
cld
gs
fsubs
ljmp
jge
scas
inc
repz
pop
xchg
adc
add
mov
lods
ja
stos
lods
sbb
jp
into
out
adc
pop
nop
mov
aam
imul
mov
bound
and
test
pop
je
shrl
jecxz
push
out
lds
mov
xchg
into
loop
dec
sbb
mov
lods
mov
jmp
std
push
cmp
int3
add
aaa
lret
cmp
xchg
mov
js
push
push
add
outsl
fisubrl
ror
les
pop
mov
mulb
pause
std
cmpsl
dec
cmpsl
out
stos
les
fistpll
shl
stos
popf
xor
sbb
sbb
fidivrl
push
cli
loopne
scas
adc
out
mov
cmp
aad
idiv
aas
fcomps
out
xchg
insl
sahf
inc
mov
pop
or
jb
js
dec
das
mov
push
and
outsl
lcall
mov
test
mov
in
aaa
addr16
adc
inc
ss
or
inc
fs
scas
pop
mov
and
add
clc
shrb
lahf
inc
mov
jns
dec
fcoml
add
or
popf
sti
fwait
xchg
ja
sbb
popf
xor
out
dec
pushf
sbb
adc
sbb
aad
and
pop
loop
out
rorl
out
mov
test
cmpsl
punpcklbw
or
aas
cs
decl
or
inc
ret
rcll
lods
sbb
xchg
imul
sub
fldl
mov
add
popa
jg
lods
repnz
rcr
test
mov
jnp
adc
lds
jo
in
aad
aam
mov
or
lds
pop
pop
daa
fxch
xchg
mov
fs
int3
pop
and
sbb
and
hlt
insb
in
rorb
mov
fwait
test
xchg
mov
jns
add
or
stc
and
and
loop
lahf
adcb
lcall
sbb
gs
lahf
gs
dec
in
jg
test
loope
rcl
push
xor
icebp
push
sbb
cmpsl
jl
out
push
add
pushf
fadds
pop
fcoms
je
jp
inc
int
lock
push
push
xor
fs
ss
mov
sub
leave
jno
or
mov
shrl
mov
outsb
frstor
jne
sbb
jge
ljmp
sbb
and
cs
in
cmp
inc
aam
mov
clc
cmp
cmp
xchg
mov
fisttps
mov
or
xor
scas
xor
call
outsb
mov
xchg
test
test
add
xchg
loope
and
lret
push
filds
pop
dec
mov
data16
inc
fdivl
mov
movsl
bound
push
inc
leave
mov
mov
or
mov
std
mov
sbb
and
daa
jge
movsb
and
daa
in
jge
mov
test
mov
jb
adc
testb
cmpsb
mov
jno
inc
pusha
daa
xor
test
int3
mov
lea
pop
fsubl
add
aas
mov
nop
pop
les
jno
sub
mov
sub
pop
cmp
pop
loope
roll
cwtl
mov
pusha
ljmp
push
lods
sub
jle
cmp
rol
sub
sub
call
sbb
daa
cmp
mov
fs
loop
mov
ds
arpl
or
and
daa
dec
inc
addr16
arpl
adc
cmp
lods
stos
lock
jle
pusha
add
cltd
mov
lret
out
dec
out
xor
aas
iret
enter
mov
test
rcrb
loopne
push
inc
xchg
lahf
push
mov
ret
xor
pop
sub
out
std
inc
leave
dec
push
jne
cmpb
mov
cmpsl
sub
nop
jl
xchg
jno
arpl
jg
mov
jmp
fs
mov
jl
jne
in
add
inc
push
jl
out
pop
lods
adc
jne
je
xchg
iret
bound
ljmp
out
aaa
int
inc
fwait
insb
cli
aad
xchg
or
push
out
loope
inc
adc
push
lods
ss
icebp
enter
loopne
xchg
push
or
fsubrl
jp
and
fsubp
popf
test
add
sti
mov
pop
add
orb
cmpsl
out
into
arpl
test
cmp
sbbb
int3
mov
inc
sub
xchg
loop
loope
pop
lock
xor
mov
cmpsb
pushf
call
cmp
cmp
lods
cmp
popa
testl
dec
std
sbbb
and
imul
popl
or
loopne
leave
js
aad
in
aas
add
dec
add
js
xchg
dec
loopne
xchg
pop
fwait
cwtl
and
fdivr
call
jl
mov
jg
enter
stc
jge
sub
dec
xchg
jg
mov
xor
lret
add
pop
xor
imul
add
sbb
leave
jecxz
mov
xchg
sahf
testl
lea
xchg
pop
add
dec
mov
cmp
add
shrb
jle
xchg
out
addr16
and
lahf
rcr
cmpsl
cmpl
inc
and
sub
rolb
pop
sahf
shl
pop
out
jmp
and
jle
fsubr
into
push
ja
sarb
xor
xor
pushf
call
or
push
mov
push
jae
lock
lods
jnp
aad
rclb
outsb
xchg
call
iret
imul
sbb
push
and
xor
lods
inc
adc
lret
pop
ret
pop
scas
loopne
addb
mov
ficoms
cmp
icebp
jae
sub
xchg
lds
sub
sbb
xchg
daa
cmp
cmpsb
xchg
push
int3
cs
xchg
stos
fldt
sub
dec
fsubr
ljmp
jl
pop
adc
or
mov
pop
fnstcw
sbb
inc
lds
sbb
sarb
adc
outsb
pop
loop
pop
fdivr
mov
mov
push
sub
imul
ds
cmp
push
jbe
inc
aad
test
mov
mov
inc
cwtl
sbb
push
sbbb
iret
lods
pop
sbb
rorb
test
loope
mov
out
pop
mov
adc
daa
dec
sub
xchg
mov
stos
inc
gs
adc
fiaddl
pushf
repz
je
mov
fistl
adcl
fisttps
in
pop
jnp
out
and
das
ljmp
xchg
std
fcompl
sbb
iret
push
shll
mov
test
or
push
andb
testl
cmpsb
and
popf
jl
xor
shrl
adc
data16
adc
stos
sbb
jle
sarl
lret
add
fdivrs
or
scas
les
jg
pusha
jp
mov
lock
je
cwtl
test
inc
iret
cmpsb
xor
mov
cmp
stos
lahf
stos
fstpt
jne
xchg
xor
test
or
repnz
sbbb
push
mov
xor
xor
call
sub
add
lcall
scas
test
pop
call
or
cmp
imul
pop
repnz
sti
jb
pop
mov
xchg
xchg
jbe
jp
cmp
mov
sahf
outsb
mov
jb
and
cs
enter
dec
push
loop
push
test
int
mov
fsubr
cmp
mov
outsb
sub
xchg
popa
sbb
daa
push
ret
add
adc
push
aas
xchg
sbbl
scas
call
sar
adc
ret
dec
mov
stc
lock
inc
dec
fisttpl
xorb
adcb
into
lds
adc
sarb
stc
adc
pop
or
sti
nop
jp
rorb
sbb
jbe
xchg
jg
fwait
shrl
and
data16
add
les
lods
outsl
test
int
xchg
repz
jge
jmp
xchg
sbb
add
lods
mov
and
inc
or
dec
mov
jo
jg
push
pop
sbb
lahf
cli
and
es
iret
mov
inc
aad
pop
sarb
insb
das
add
pusha
pushf
push
stos
shr
push
mov
lock
fstpt
dec
in
rorb
stos
dec
out
ficoms
sbb
and
ja
repz
push
lock
loopne
jb
jl
mov
ljmp
scas
mov
out
inc
pop
and
dec
adc
cmpsl
sbb
dec
push
cs
or
int
mov
sub
mov
ret
fldenv
imul
xchg
mov
enter
pop
or
imul
call
mov
mov
ljmp
inc
cli
js
mov
push
enter
inc
imull
or
lds
ds
sub
dec
stc
rcll
jb
shrb
xchg
cmp
scas
add
push
cmp
sub
ret
ffree
dec
cmp
stos
mov
cmp
mov
std
lds
ret
sti
mov
mov
add
push
jecxz
push
xchg
and
lods
mov
dec
mov
pop
jmp
dec
aad
mov
pop
rcrb
xchg
or
std
sub
jle
iret
inc
mov
in
xor
xlat
popa
test
xchg
mov
sbb
jae
mov
mov
jbe
add
jge
popa
and
push
pop
out
xor
cmpsl
mov
dec
push
mov
or
das
cs
push
pushf
lds
or
cli
push
clc
jg
mov
or
popf
adc
insb
dec
aam
leave
inc
push
fs
loope
cltd
push
jmp
leave
pushf
jae
shlb
mov
and
nop
or
fiaddl
push
sub
mov
xor
ret
arpl
pop
xor
movsl
pop
sbb
out
jbe
inc
xchg
and
cld
fdivs
ljmp
dec
sbb
push
jo
dec
sbb
push
ljmp
cmp
repz
mov
enter
cmp
loope
dec
notl
xchg
jl
inc
push
adcl
call
push
mov
and
and
sti
inc
arpl
xchg
sub
test
sbb
pop
jne
test
xor
sbb
xor
fwait
and
adc
pop
xchg
add
cmp
push
shr
repnz
and
in
xchg
mov
cwtl
nop
pop
sub
dec
loopne
out
mov
pop
repnz
dec
lcall
jae
mov
pop
loope
dec
cmp
mov
imul
pop
loopne
dec
dec
popf
icebp
adc
ss
add
jnp
mov
aaa
pop
and
adc
jns
call
jb
push
jne
mov
in
mov
fsts
add
popw
cmp
pop
and
xor
jp
call
arpl
pop
icebp
jns
jbe
push
pop
call
lea
fdivrs
cmpsl
in
pop
repz
movsl
fildll
jle
hlt
jnp
js
and
sbb
add
push
gs
cmpsl
pop
sub
mov
aas
mov
add
inc
push
fwait
cmp
aas
adc
lahf
movsl
ja
pop
sbb
and
add
jae
lods
inc
rcll
cs
mov
shll
adc
sbbb
lock
mov
push
mov
sbbb
test
imul
push
xchg
movsb
nop
fiadds
pop
and
rorl
jb
shl
xchg
cli
dec
fwait
pop
dec
push
pop
xor
and
mov
imul
es
fiadds
addr16
adc
inc
mov
push
and
sub
outsl
data16
push
sub
inc
lea
insl
add
inc
call
mov
pop
lcall
or
cwtl
jp
mov
xchg
add
sbb
cmp
sub
and
shrb
sbb
pop
mov
lods
mov
xor
fidivrl
in
stos
shrl
dec
cmp
adc
pop
in
jne
mov
push
les
insl
mov
cmp
ret
aas
outsb
adc
pushl
clc
adc
push
int3
jae
int
pop
cld
push
mov
push
mov
daa
dec
into
enter
xor
mov
ds
push
or
ret
lds
bound
test
pop
sub
ljmp
test
lret
and
lods
xchg
mov
fdiv
xchg
xor
test
call
xor
out
orl
fcompl
sbb
sub
mov
int3
mov
jge
mov
adc
test
bound
xchg
mov
lock
xchg
adc
mov
test
adc
mov
fdivs
ror
pop
lret
int
xchg
popa
lahf
std
dec
ret
fstps
daa
fmuls
xchg
test
sub
mov
push
cmc
pop
mov
fdivrl
and
inc
or
daa
insb
adc
add
stos
shrl
mov
imul
jbe
ja
add
in
bound
xchg
scas
push
test
pop
in
push
aad
or
pop
and
test
outsb
mov
pop
cmp
into
enter
jo
inc
mov
ret
lret
test
cmp
sub
sub
add
push
test
js
sbb
adc
pusha
lea
popf
sub
arpl
popf
xor
pop
jae
iret
mov
inc
mov
cmp
dec
imul
cmp
and
or
jbe
mov
fisttpll
cld
lods
mov
xor
mov
aam
insb
addps
pop
pop
lock
gs
iret
cmp
insb
adc
mov
xchg
loope
fdivr
mov
and
adc
pop
repnz
fldt
and
cmp
fistpll
mov
add
hlt
sub
ja
in
jmp
sub
sbb
adc
push
lret
std
out
add
in
ret
inc
dec
mov
das
and
xchg
ret
cmp
push
in
shlb
aam
pop
aaa
xchg
mov
mov
adc
pop
xor
jmp
hlt
rcrl
or
inc
push
add
xor
push
xchg
shll
mov
insl
mov
shl
xor
fisttpll
cmp
adc
xchg
stos
enter
and
movsl
inc
iret
inc
lods
aam
dec
or
cmp
stos
xchg
int
and
xor
pop
mov
ljmp
adc
lcall
sbb
and
std
in
fmuls
scas
pop
insl
push
das
imul
lea
jo
icebp
test
adc
daa
mov
gs
sti
clc
nop
mov
jne
pop
rclb
xchg
pop
movl
pop
sbb
jb
mov
stc
mov
xor
inc
inc
add
orl
dec
je
jae
das
cmp
dec
cmp
shrb
cwtl
or
xchg
test
int3
xor
cmc
adc
or
cmp
imul
dec
mov
imul
icebp
movsb
push
dec
add
xor
ds
fcompl
in
scas
nop
testl
in
stc
mov
ret
push
icebp
pop
aas
adc
jo
es
add
pop
jo
dec
jecxz
gs
mov
loopne
cli
adc
mov
add
pop
cmp
mov
shll
pop
pop
ds
mov
push
mov
in
push
lods
mov
cwtl
push
cli
dec
or
or
pop
or
sub
jae
mov
incb
inc
push
das
dec
icebp
mov
pop
icebp
scas
mov
adc
mov
mov
data16
xchg
ret
cmp
xlat
nop
jnp
shlb
jne
add
jmp
pop
mov
cli
or
push
inc
sub
and
inc
fwait
jb
movsb
cmp
clc
jl
sbb
std
lahf
xorb
jns
jg
lret
push
sbb
hlt
jle
pop
lods
or
and
jo,pn
ljmp
pushf
or
aas
add
dec
and
mov
ljmp
scas
ret
and
into
xor
dec
mov
paddsb
insb
xchg
mov
in
testl
sbbb
dec
movsl
cmp
inc
mov
sbb
aaa
sbb
stc
and
xor
sub
imulb
mov
sti
xchg
movsl
pop
cmp
sbb
dec
dec
push
add
push
or
cwtl
stos
pushl
sbbl
pop
mov
sarl
inc
dec
dec
or
jo
xchg
sbb
xor
pop
add
lock
cmp
and
xor
imul
cmp
xor
push
sub
sub
pop
mov
sub
dec
sub
and
lock
jmp
shrb
adc
in
add
cli
into
test
sbb
inc
test
addl
mov
aaa
inc
inc
shll
aam
aaa
lds
gs
data16
xlat
xor
adc
sub
lods
fsub
mov
jecxz
xchg
ret
or
xor
cmc
insb
push
clc
jb
and
sub
jne
data16
scas
mov
test
add
mov
fcmovne
in
dec
dec
lcall
adc
adc
scas
movsb
adc
jecxz
test
push
fwait
push
xor
rolb
or
adc
lock
das
and
test
xchg
mov
fcmovne
push
leave
inc
in
out
mov
push
jnp
divps
test
lahf
xor
out
pop
mov
xchg
mov
and
aas
mov
pusha
cs
lock
pop
and
dec
in
pop
addr16
add
xor
iret
les
jns
or
dec
pushf
out
pushf
xor
clc
xchg
add
loope
enter
fs
xor
mov
mov
rcl
test
es
cmc
jp
es
jmp
imul
mov
aad
hlt
fistpl
loop
inc
cmpsl
adc
call
mov
sbb
iret
and
adc
lahf
pop
bndldx
pop
dec
mov
sub
das
pop
cld
xchg
xchg
icebp
leave
sub
movsb
cmp
xor
and
das
addr16
mov
fdivl
cmc
cld
push
sub
jg
mov
sar
cli
es
push
xor
scas
xchg
repnz
mov
test
loope
hlt
rcl
aad
adc
cmp
mov
dec
sbb
movsl
push
loop
insb
adc
std
jnp
jmp
xchg
xchg
push
incl
or
je
inc
pop
int3
push
push
cmp
push
scas
xlat
cld
cwtl
and
dec
shrl
dec
popf
pop
lcall
add
mov
fisubrl
sub
fisubrs
xchg
push
insb
in
dec
mov
pop
lods
iret
cmp
mov
lcall
addr16
dec
es
or
das
data16
fwait
xor
or
jecxz
mov
clc
shr
in
dec
xor
test
fbld
addl
lret
mov
loopne
insb
mov
sbb
xor
cmp
mov
push
jne
push
push
out
jno
mov
cmc
shrl
cmp
in
xchg
rcrl
mov
or
xchg
xor
xchg
movsl
or
sbb
or
daa
repz
jle
mov
inc
cmp
filds
jbe
int3
lret
icebp
mov
pop
inc
push
nop
movsl
push
loop
into
pop
aaa
sbb
mov
or
jbe
pop
ljmp
dec
repnz
lahf
dec
adc
dec
push
lock
andb
pushf
ret
outsl
test
jl
test
fwait
les
pop
pop
mov
stos
daa
adc
sbb
sub
aaa
negb
mov
movsl
cmp
push
repz
jb
mov
lahf
dec
adc
out
mov
outsl
mov
loop
stc
shll
jo
cwtl
inc
and
int
push
pop
aas
xorb
and
jmp
pop
in
out
xchg
sub
pop
insl
xlat
outsb
lahf
jns
and
in
loop
jl
fidivl
pop
dec
adc
dec
pushf
pop
mov
imul
dec
repz
insl
test
jg
shlb
add
add
lds
jmp
scas
cltd
jae
insl
stos
push
les
sbb
dec
cmc
mov
insl
mov
adcb
in
jge
rcrl
xchg
arpl
mov
mov
inc
je
fnstenv
or
insb
mov
add
sbb
jo
push
fidivl
pop
insb
jl
shll
mov
inc
push
inc
mov
addr16
pop
push
sub
scas
bound
push
incl
fidivs
and
popf
mov
fidivrl
in
pop
pop
lret
shrb
add
mov
in
mov
xor
jb
sbb
out
push
nop
push
pop
pop
cmp
aam
cli
xchg
loop
push
or
hlt
stos
ds
lahf
divl
call
push
inc
mov
mov
pop
into
ret
cmpb
aas
fwait
rol
mov
into
outsb
push
xor
jp
dec
cmpsl
rcl
adc
inc
jae
xor
aaa
stos
je
sub
jle
pop
or
es
jl
mov
cwtl
mov
push
dec
gs
jb
mov
in
mov
or
mov
stos
out
and
mov
out
loop
arpl
arpl
mov
dec
push
mov
push
neg
lahf
insb
xchg
lea
aaa
mov
scas
popa
push
hlt
xor
sub
dec
and
shrb
cmp
cmp
addr16
jecxz
cltd
adcb
insb
pop
fcompl
push
xor
cmp
lods
pop
aas
mov
mov
ret
adc
or
mov
outsb
ja
inc
or
sbb
sub
pop
pop
gs
scas
xor
push
sub
cwtl
aas
mov
mov
xor
mov
or
int3
lock
or
ljmp
mov
adc
cmp
shrl
jp
scas
stc
fwait
subb
into
cmp
les
sbb
gs
cs
pop
fnstcw
mov
dec
mov
pop
leave
mov
push
out
sub
xor
and
negl
mov
das
push
and
inc
inc
loop
mov
ds
scas
lods
jmp
lock
mov
push
inc
js
les
mov
decl
lret
mov
xchg
bound
outsb
pop
cmp
and
mov
stos
xchg
sub
inc
jg
subl
push
enter
xor
std
jp
ljmp
sbb
mov
add
push
xor
mov
add
sbb
pop
outsb
mov
nop
pop
bound
roll
cmpsb
pop
adc
push
jno
inc
xchg
int
test
movsl
adc
movsl
push
jl
push
xchg
pop
pop
inc
adc
lret
mov
sub
cmpsl
in
ja
enter
push
adc
stos
and
pop
cmp
mov
lods
jne
lods
xchg
ljmp
xchg
mov
test
mov
enter
push
fs
mov
movsb
xor
js
sbb
jno
loopne
dec
xchg
cmpsb
mov
iret
mov
enter
mov
sbb
jbe
in
xchg
ret
idivb
sub
mov
lcall
out
leave
xchg
mov
subb
sbb
ret
mov
sub
pop
popa
popa
adc
repz
inc
jbe
pop
or
in
mov
test
shrl
cmpsl
repnz
test
dec
inc
gs
lods
loop
mov
mov
lods
xor
out
lahf
fisubs
sbb
jno
xchg
stos
mov
sti
fistpll
push
es
add
pop
push
or
adc
inc
sub
and
lret
js
arpl
es
mov
int3
xchg
sahf
jns
icebp
pop
loop
push
pop
cli
xor
shl
jno
loope
cltd
fwait
aam
push
mov
lock
fdivl
and
es
pop
lods
gs
mov
aam
jno
mov
jg
cwtl
enter
clc
shrb
and
mov
dec
fldl
hlt
cmc
sbb
jnp
cmp
mov
js
lods
push
mov
xchg
movsb
jbe
and
sbb
mov
mov
aam
rolb
das
inc
xlat
lods
or
pop
inc
jns
je
mov
xor
xchg
ds
pop
ljmp
cmp
insb
cmpsb
push
mov
fsubrs
dec
adc
sbb
and
or
ffree
add
jb
mov
ja
mov
mov
aam
pop
shll
xor
in
scas
adc
and
std
push
repz
pop
add
scas
dec
jno
addr16
aaa
or
jg
pop
movsb
mov
mov
es
dec
pop
roll
daa
mov
rclb
gs
or
jne
cmp
xchg
pusha
mov
sbb
aam
test
mov
out
bound
push
add
jmp
or
dec
xor
es
dec
ja
mov
decb
subb
mov
dec
lea
xor
xchg
fsubrs
out
mov
outsb
lds
arpl
adc
pushf
inc
sub
ds
sbb
inc
sbb
jo
push
arpl
mov
inc
push
in
dec
iret
ja
pop
mov
cltd
arpl
or
xchg
lock
inc
fucomi
mov
push
incl
pushf
rorb
add
repz
int
sub
mov
xor
imull
xchg
sti
sti
or
and
out
pop
and
mov
inc
iret
out
bound
lods
lds
mov
dec
in
jns
or
push
cmp
daa
push
inc
ficoms
clc
movsb
insb
push
pop
sahf
jg
gs
sarl
dec
into
xchg
cmc
stos
gs
negl
mov
lock
popf
ds
xchg
clc
mov
stc
or
repnz
fdivs
outsl
repnz
bound
pop
lret
xor
sub
jmp
popa
pop
imul
neg
int
jb
mov
xchg
mov
mov
cmp
push
xor
xchg
xchg
cmc
sbb
or
pushf
int3
fistl
out
xlat
lock
dec
mov
test
pushf
pop
push
pushl
pop
std
or
test
shr
popa
movsl
sbb
jbe
dec
call
jae
xchg
aas
fnstenv
mov
das
es
pop
pop
sub
fwait
aam
cmp
pusha
and
mov
xchg
sub
add
ss
adc
lods
inc
pushf
inc
aaa
fucomi
addb
rcrl
pop
dec
inc
xchg
aad
ljmp
mov
mov
sbb
ja
stos
test
insb
fistps
jns
push
loope
pop
or
dec
and
add
jae
mov
cli
push
sbb
pushf
mov
lret
lret
lahf
xor
pop
cmpl
loope
aaa
adc
sub
xchg
or
pop
lock
imul
adc
inc
mov
movsl
sub
inc
or
mov
adc
mov
adc
test
imul
sub
sahf
inc
and
mov
inc
call
lret
sbb
mov
popf
adc
or
jno
sub
xchg
cwtl
mov
fldcw
cmp
push
sbb
push
dec
daa
push
adc
data16
call
leave
into
inc
add
notb
mov
iret
inc
rolb
push
aad
or
sti
pop
hlt
das
xor
jnp
scas
gs
ljmp
and
andb
pop
dec
jo
sub
rclb
xor
loop
shrb
xchg
add
dec
ja
cmp
mov
call
or
inc
inc
cmpsl
repz
xchg
or
jno
jb
cmpsl
addr16
xor
cwtl
ds
mov
in
cmpsb
mov
daa
ja
in
push
pop
sub
sub
pop
mov
jb
cli
inc
and
jb
ljmp
xor
addr16
mov
jo
pusha
dec
subb
sub
ds
add
add
cltd
push
adc
jl
xor
and
push
inc
xor
cmp
int3
sbb
sub
xlat
roll
push
in
dec
fildl
mov
insb
sub
mov
dec
jle
mov
shlb
mov
mov
fbstp
push
pop
mov
jg
fiaddl
repz
and
not
std
sbb
lea
bts
sti
loop
mov
js
pop
mov
pop
popf
xor
jb
fildl
je
shlb
xchg
jo
sbb
xchg
mov
pop
sbb
add
add
ret
pop
xchg
jmp
xchg
mov
dec
mov
mov
sub
pop
mov
nop
jge
adc
test
mov
jge
sub
fucomp
jle
add
mov
inc
icebp
dec
add
mov
cmpb
lds
sub
cmp
repnz
inc
and
js
in
push
pushf
test
cld
pop
incl
xchg
adc
arpl
xchg
xchg
sti
mov
or
push
mov
push
adc
dec
in
cwtl
jge
inc
xor
dec
mov
add
sbb
xor
pop
movsb
sbb
or
cmp
push
iret
in
lahf
sub
cmp
sub
xor
fcoms
cli
jle
mov
mov
add
in
or
mov
sub
imul
xorl
add
inc
inc
and
imul
add
sbb
nop
das
xor
mov
lahf
push
lods
nop
out
pop
js
jo
mov
mov
ljmp
inc
pop
push
test
sahf
sub
sbb
sbb
test
push
mov
pusha
xor
icebp
lock
jno
not
aad
xor
rolb
std
sbb
in
mov
lea
cmp
xchg
shl
scas
sub
adc
xchg
sub
loop
pop
xchg
xor
cmp
add
mov
aas
outsb
cmp
in
jne
in
lret
cltd
pop
and
imul
loope
das
and
xor
dec
mov
pop
repz
xchg
xor
sarb
jmp
jnp
pop
mov
addr16
and
sbbb
jge
or
shl
pop
add
test
in
xchg
testl
rorl
mov
call
adc
push
xor
fsubrp
data16
subl
xor
lea
mov
scas
push
lods
ficomps
xor
jbe
loopne
pop
jle
lcall
mov
or
out
add
cmp
imul
adc
adc
xchg
sti
or
and
sbb
inc
fistl
mov
mov
inc
mov
aad
jecxz
adc
arpl
xor
xor
push
hlt
cmp
push
scas
flds
or
insb
push
add
dec
inc
mov
inc
cmp
sbb
ret
testb
pop
leave
dec
sbb
es
shl
pop
mov
rcrl
sub
xchg
cmp
fldt
cld
lret
lret
gs
jl
mov
push
mov
and
mov
pop
dec
sub
loop
rclb
aam
sbb
and
xor
pop
daa
call
mov
mov
xor
push
mov
clc
loope
ffreep
add
pop
jg
mov
pop
into
mov
pop
pop
loop
repz
nop
cmp
push
cli
ljmp
add
add
scas
adc
sbb
movsl
repz
clc
and
lock
mov
pop
dec
fidivs
mov
mov
mov
test
mov
mov
dec
xchg
test
divb
sub
addb
jbe
dec
dec
lea
pop
jg
cmp
xchg
insl
rorb
stos
mov
repnz
in
out
repnz
sbb
dec
mov
xchg
push
scas
jecxz
sbb
xor
xchg
push
jge
outsb
les
ret
fiadds
lcall
and
jl
adc
int3
xchg
addb
mov
jecxz
movsl
sbb
data16
xchg
shrl
pusha
mul
jae
jb
adc
aam
sub
leave
pop
mov
jnp
sub
inc
aas
and
inc
enter
add
xchg
push
les
adc
xor
adc
adc
daa
lcall
addr16
xchg
loopne
stos
cmp
pop
push
dec
andb
xchg
push
dec
dec
test
xor
lret
sarb
adcl
or
adc
in
mov
jno
scas
das
mov
fwait
xor
xchg
adc
xchg
adc
icebp
gs
lcall
sbb
jb
rolb
enter
flds
subl
test
or
nop
pop
popf
and
sub
inc
pop
mov
add
scas
sub
inc
pusha
adc
outsb
cmpsl
xlat
sbb
insl
add
sbb
ret
mov
sbb
xchg
xor
fwait
lea
mov
ss
dec
loopne
dec
lret
and
and
rclb
dec
xchg
inc
pop
and
dec
mov
cpuid
out
fsubr
dec
or
int
lcall
pop
out
movsl
pop
cmp
popf
jle
loope
ficompl
mov
stc
sahf
mov
fs
adcb
popl
mov
cmp
inc
fisubl
cmp
daa
or
cmp
repnz
or
rorl
and
sbb
orb
repnz
push
in
aad
dec
dec
fnstenv
mov
push
add
pop
xchg
lret
push
out
xchg
sub
fisttps
inc
lret
mov
or
push
in
lret
and
sbb
dec
test
and
fildll
pop
outsl
lods
ficoml
lea
popf
inc
sbb
and
out
mov
dec
loopne
je
jbe
push
dec
xlat
push
popa
push
inc
or
cmp
negl
ficoms
or
xchg
xor
dec
xlat
outsb
jle
xor
nop
sbb
jne
or
cld
aas
dec
dec
mov
fistl
mov
mov
add
pop
inc
dec
rcrb
fsubrs
pop
loopne
cmp
loope
push
adc
xor
clc
fnsave
outsl
ja
mov
lods
fldl
and
lcall
psllw
ja
in
movsl
add
out
jo
push
adc
sub
add
popa
int3
lahf
adc
out
repnz
push
out
push
sahf
jge
xchg
ret
inc
xchg
lods
jno
sbb
in
hlt
adc
stc
outsl
add
sub
pop
insb
mov
sub
pusha
nop
push
rcrb
sbbb
popf
jmp
mov
stc
sub
rcll
jns
call
test
pop
or
mov
mov
into
jbe
hlt
clc
repnz
mov
insl
xor
cltd
rorb
fwait
sti
jo
imull
sbb
push
and
mov
xchg
cli
out
addr16
dec
movsl
enter
pop
arpl
gs
xor
adc
data16
outsl
fmuls
ljmp
push
mov
in
clc
pusha
pop
xor
dec
jl
outsl
mov
inc
test
pop
xor
push
scas
clc
push
repz
iret
xchg
ds
insl
or
clc
mov
adc
cltd
sbb
jns
andl
inc
or
addl
add
fcmovbe
insl
add
in
and
mov
stos
sbb
in
sbb
lods
add
mov
dec
rcrb
outsb
xor
jge
push
mov
cltd
cmpsl
je,pt
imul
add
xor
and
ret
jo
bound
popa
jnp
repnz
sbb
movsb
aaa
movsl
adc
nop
outsb
movsl
fs
jg
push
cs
aad
movnti
test
push
mov
scas
adc
addb
xchg
lea
ss
pop
sub
imul
cs
mov
icebp
in
loope
inc
pop
test
aas
cli
or
jae
daa
add
in
arpl
aam
jge
jl
cmp
jbe
int3
mov
mov
in
stos
out
push
ffree
and
xor
adc
dec
scas
push
insb
and
int
das
dec
cwtl
push
jo
stos
and
cmp
hlt
in
xchg
out
push
jge
push
add
and
arpl
mov
xchg
mov
test
mov
adc
jne
out
fndisi(8087
or
ds
out
aad
aaa
cmp
jno
in
or
out
jg
ss
dec
xchg
pop
scas
mov
cwtl
fs
iret
mov
cmc
xchg
cmp
sti
jge
adc
dec
adc
jbe
fildll
push
cmp
xor
dec
ljmp
or
or
stos
test
pusha
rcl
and
and
pop
dec
jb
inc
lods
and
mov
mov
int
clc
xor
int
in
fwait
sarl
daa
fwait
push
stos
mov
fsub
mov
lods
mov
adc
addl
pop
xor
outsl
push
pop
mov
ret
std
add
mov
jo
das
cmp
mov
inc
js
push
icebp
add
mov
jb
xor
jmp
test
sbb
xor
mov
pop
mov
aad
mov
sub
test
fnstsw
pop
lods
js
sbb
mov
leave
test
push
mov
pop
cmp
sub
loope
adc
pop
aas
adc
inc
add
xor
pushl
pop
jmp
adc
in
dec
cs
fstpl
mov
sbb
sbb
in
and
fisubrl
or
andl
pusha
mov
inc
add
jg
jge
jne
xchg
test
and
test
fdiv
mov
int3
dec
insl
adc
cmp
xchg
aam
insb
xchg
ret
jmp
jg
inc
cmp
movsb
xchg
dec
fcmovnb
test
sbb
mov
cmpsb
arpl
out
cwtl
bound
repnz
cmpsl
jo
fidivrl
test
out
push
jle
mov
cmpsl
cli
sbb
rorb
xchg
arpl
out
pop
icebp
mov
popf
pop
mov
xor
mov
aam
mov
dec
jns
insb
push
sti
or
jne
xlat
dec
in
out
jle
inc
cli
push
js
inc
fbld
dec
jg
fldenv
or
cmpsb
sub
cmp
test
test
outsl
mov
xchg
aaa
sub
leave
dec
adc
sub
push
add
xchg
orl
mov
jnp
test
imul
fdivl
enter
das
cmc
sub
js
jp
xor
pushf
iret
lea
mov
sbb
js
pop
jmp
dec
rcr
popl
inc
cmp
fldl2e
inc
out
cmc
or
loope
lcall
lods
add
rcrl
enter
cmpsl
jmp
repnz
test
dec
lret
test
out
push
in
bound
lea
aaa
mov
lea
lock
iret
xchg
adc
test
cwtl
jmp
sub
pop
dec
cmc
pop
xchg
ss
shlb
test
and
cmp
sbb
mov
jbe
mov
test
cmp
dec
or
push
or
adc
out
add
cld
rcr
jl
xor
sub
cmp
mov
jmp
cmpsl
jge
ljmp
jb
or
mov
imul
dec
mov
dec
out
jo
ret
cmp
xchg
jp
ffreep
xor
jmp
jle
xor
cmpsb
int3
hlt
push
pushf
ret
fisubrs
add
mov
fsubrp
int3
jecxz
and
or
mov
and
cmp
jno
subb
or
adc
clc
dec
leave
inc
out
popf
hlt
fidivrl
in
jns
xchg
movsl
pop
pusha
idivl
enter
icebp
jle
aas
imul
sbb
push
xlat
jo
movsl
rorb
mov
push
mov
cld
mov
mov
xor
pop
outsb
in
popf
stc
mov
fisttpll
and
out
testl
dec
jo
xchg
dec
fs
sub
lret
outsl
ss
sbb
rcrb
scas
or
sbbl
adc
mov
jne
inc
pop
ret
push
sub
outsb
outsl
andl
insb
add
cld
int
test
mov
jno
addl
sbb
xchg
dec
int
sub
sub
add
mov
pop
fcoms
or
cmpsl
ds
js
inc
ror
mov
push
inc
icebp
or
inc
mov
sahf
mov
movsb
sub
sub
adc
adc
loop
xlat
outsl
sbb
mov
leave
cmpsl
sub
pop
insl
orb
mov
aas
mov
push
fucom
cli
inc
test
pop
inc
fisttpll
cli
push
xorb
sub
and
or
mov
sub
push
int3
filds
push
cmpsl
insb
push
jne
inc
xor
cli
cmp
mov
xchg
insl
and
pop
push
fwait
pop
lcall
dec
mov
cmp
data16
inc
xor
insl
in
ficoml
xor
lret
mov
mov
cltd
push
out
xchg
jl
adcb
lret
js
test
cli
popf
ret
add
or
adc
hlt
stos
or
xor
fwait
in
lahf
dec
dec
enter
out
mov
fisubrs
fists
mov
push
lahf
xor
aaa
dec
inc
xchg
popa
stos
andl
bound
lcall
and
cmc
inc
add
push
js
inc
stos
daa
lods
cmp
dec
loopne
stos
inc
stos
push
push
addr16
ja
add
add
addr16
mov
cmc
pop
popa
add
pop
xchg
insl
add
xor
mov
jecxz
repnz
sahf
jnp
inc
lock
jp
ja
push
cmpsb
sbb
lods
jne
imul
or
jl
loop
scas
and
stos
adc
xlat
outsb
xchg
mov
cmc
mov
pop
fistps
fcmovb
jge
push
jle
lock
fsubl
add
loopne
test
aaa
jae
popf
lret
shl
add
nop
dec
push
mov
test
add
and
flds
aas
sbb
push
ret
loope
mov
insb
cmp
xlat
jmp
or
mov
push
cmpsb
arpl
ljmp
cmp
xorb
sarb
push
inc
pop
push
jmp
push
rorl
jb
inc
and
movsb
into
inc
lock
pop
push
pop
adc
cs
sbb
push
les
fisttpll
cmp
aaa
add
popf
jmp
or
insl
test
jae
ret
mov
add
stc
adc
ss
inc
pop
pop
xchg
xchg
jbe
or
inc
jge
jo
mull
into
mov
pusha
and
add
sti
jbe
test
xchg
xor
cmc
mov
lahf
cmpsb
lock
push
xchg
jp
mov
add
add
fwait
dec
ja
test
cmp
subb
push
call
dec
mov
outsb
shrb
mov
in
mov
inc
xlat
xchg
aas
lods
repnz
xor
jbe
mov
js
mov
xchg
jmp
xchg
sbb
insb
sub
mov
and
fildl
push
cmpsl
pop
cmpsb
shlb
mov
mov
ja
daa
xor
imul
cmp
cmp
lds
dec
pusha
idivl
in
cltd
fadds
test
lods
ja
pop
or
dec
cld
push
sub
popa
mov
add
mov
add
inc
cmpsl
mov
pop
xchg
cs
inc
lods
and
sti
mov
push
stc
and
shll
out
mov
fiaddl
pop
adc
das
rolb
js
in
ja
dec
pusha
adc
inc
lea
xor
pop
cmpsl
out
sbb
xchg
dec
aas
pop
hlt
jno
cltd
dec
ja
dec
fsubs
pop
inc
inc
mov
fsts
jo
adc
movsb
sbb
ret
push
jle
mov
add
pop
out
pushf
or
daa
js
loopne
or
mov
or
andl
cmc
scas
xchg
pop
les
sub
cmp
add
sbbb
fsubs
sub
inc
mov
stos
fucomi
sub
out
popf
inc
sub
cs
sub
aas
dec
lock
pop
dec
sbb
dec
jmp
mov
xchg
xchg
mov
pop
dec
or
and
fistpl
push
cld
xchg
jb
fldcw
outsb
in
in
std
or
jbe
pop
fists
ror
std
scas
jae
shlb
sarb
mov
push
sbb
or
cmp
mul
cmc
sbb
fs
in
lahf
notl
std
dec
loop
jbe
add
imul
shlb
push
test
nop
adc
jns
xor
ja
test
push
int
xor
arpl
loopne
jl
add
add
ret
sub
or
pop
in
inc
pop
cltd
enter
add
add
scas
pop
popa
cmp
sbb
pop
movsl
in
mov
int3
xchg
pop
outsb
addr16
pushl
into
sub
mov
xchg
int
and
out
mov
lods
je
test
cmp
rolb
sbbl
out
outsb
repz
jmp
add
lea
aas
xlat
insb
inc
add
xchg
dec
sub
shl
mov
mov
out
out
add
or
cmp
push
sub
cli
mov
mov
xchg
xchg
loop
test
imul
loopne
addr16
lock
mov
mov
xchg
and
subl
mov
sbb
dec
add
jle
xchg
push
jo
dec
inc
popf
or
loope
sbb
hlt
loopne
sub
and
sbb
cli
jne
jno
dec
outsl
push
and
out
movsl
jge
mov
mov
pushf
sub
xor
fwait
sti
adc
push
mov
shlb
insb
je
sub
ljmp
mov
in
das
add
xchg
lods
xlat
pushf
mov
add
pop
ds
push
or
inc
cmc
sbb
cmp
lahf
xor
lods
xor
xor
push
cwtl
push
fsubr
jae
inc
loopw
ljmp
sarb
gs
jb
or
rcll
or
xchg
lcall
pop
repz
sub
into
cs
mov
mov
mov
dec
ds
dec
and
addl
xor
insl
sahf
psrad
or
cltd
dec
test
loop
cli
adc
inc
jae
push
mov
pop
femms
outsl
mov
fnstcw
push
adc
mov
inc
mov
andl
cltd
data16
into
mov
aam
lods
and
xlat
jnp
es
sbb
mov
sbb
shll
and
lds
fidivs
into
xchg
pop
push
adc
push
scas
push
xchg
or
push
jnp
cmpsl
push
jmp
stos
adc
pop
sbb
cld
xor
inc
roll
push
mov
push
in
cmpsb
xchg
movsb
sub
xor
dec
test
push
jle
adc
or
jno
lock
ret
pop
jecxz
pop
pop
add
lds
cmp
mov
push
or
jle
lods
inc
pop
fimuls
xchg
jecxz
pop
movsl
cmp
icebp
xchg
imul
iret
and
lods
lods
push
dec
jecxz
pusha
inc
pop
pop
jne
ficoml
idivb
fidivrs
fisubs
stos
cmc
jnp
stos
bound
pusha
push
ret
jno
push
flds
fsubr
jnp
les
sub
aad
sub
mov
test
mov
jo
and
je
repz
cmpsl
fs
rol
lds
xchg
mov
xor
mov
mov
and
jle
jmp
sbb
outsl
std
mov
sub
and
lahf
mov
data16
cmp
fs
mov
mov
add
pop
fiaddl
sub
add
add
mov
in
dec
xor
out
mov
lcall
add
test
pop
outsb
xchg
icebp
mov
int3
test
jno
pop
dec
loop
lcall
insl
and
xchg
pop
push
push
pushf
test
out
jno
xchg
js
mov
ljmp
xchg
dec
cmp
push
or
mov
std
dec
sbb
add
pop
andl
adc
xchg
icebp
xor
and
push
in
mov
jmp
add
lods
inc
adc
rol
push
pop
out
add
lods
mov
jne
pop
mov
add
not
andb
or
pop
out
fmuls
lock
call
iret
and
in
inc
cltd
cwtl
xor
or
inc
stos
je
loop
dec
sub
cmp
scas
daa
mov
pusha
sti
fldenv
inc
jp
xchg
cltd
mov
in
insl
pop
mov
inc
cmp
pop
mov
out
in
mov
dec
pop
pop
out
and
loop
dec
pusha
push
sub
lock
daa
lcall
mov
inc
xor
inc
mov
gs
and
insl
xchg
cmp
add
pop
mov
pmulhuw
sbb
xchg
dec
enter
outsb
lods
jo
push
in
lock
add
mov
or
dec
or
jmp
cs
mov
test
pop
fcomps
sbb
inc
pop
lcall
xchg
and
push
lcall
pusha
imul
or
out
cmp
pop
add
mov
or
cmp
push
int
test
repz
cmpsb
xor
fmul
jmp
inc
mov
orb
pop
fildll
push
sti
lret
jbe
sti
xor
cmp
aaa
outsl
dec
scas
jp
mov
test
popf
and
scas
pushf
in
mov
pop
cmpsl
add
dec
jp
cmpsl
sbbb
sbb
mov
scas
clc
into
imul
sbb
fsub
in
jne
ds
jp
push
adc
lods
or
or
stos
stc
jle
xchg
pop
xchg
pop
lds
fs
mov
push
mov
mov
cmp
mov
out
cltd
sbb
repz
or
fldenv
inc
mov
gs
sub
int3
inc
int
jp
shrb
inc
mov
xchg
sbb
mov
inc
jg
fcompl
aad
cmpsl
cmp
pop
mov
push
into
mov
pop
mov
dec
xor
xor
fcoms
stos
jns
jb
cs
xor
mov
dec
xchg
push
xor
lret
jns
mulb
les
int3
subb
push
out
mov
ficomps
sbbl
push
dec
std
mov
in
jo
ret
imul
inc
aas
mov
test
shl
cmp
mov
jns
scas
xchg
cmpsl
rclb
pusha
sti
inc
mov
inc
out
jae
dec
lea
jae
stos
adc
imul
push
pop
pop
movsl
cmp
in
mov
icebp
pusha
sub
scas
mulb
adc
dec
cmpb
cwtl
mov
inc
mov
test
mov
test
dec
sbb
sub
cmp
lcall
fists
inc
adc
ja
popa
cmp
std
cltd
cmc
sbb
adc
repz
lahf
lea
adc
jb
mov
into
and
mov
ret
andb
pop
mov
push
lods
das
mov
pop
push
push
push
dec
filds
adc
inc
arpl
xchg
gs
push
andl
ljmp
xchg
pop
mov
adc
andb
rcrl
inc
adc
and
imul
pushf
imul
gs
nop
pop
dec
roll
add
xchg
out
ljmp
andl
repnz
fiadds
clc
aam
inc
aam
sub
cmp
or
lock
push
add
xor
xor
cmp
popf
pop
add
sahf
mov
and
in
cmp
test
mov
or
sbb
cwtl
mov
test
cmp
mov
stos
and
and
inc
mov
jp
loope
jne
ret
jp
fdivrs
bound
lret
xorb
cmp
xchg
scas
jmp
loopne
into
mov
push
pop
cmp
fucom
dec
dec
pop
jg
lret
sub
inc
jbe
ss
jo
mov
enter
cld
aad
sbb
xchg
test
jl
stc
sub
mov
mov
popa
pop
addr16
shl
xor
push
ss
cmc
mov
mov
rcl
je
mov
aaa
sbb
addr16
inc
cmp
mov
fcomi
sbb
inc
push
pop
data16
mov
mov
fidivrs
ljmp
ljmp
fcmovb
test
jns
dec
loopne
mov
push
push
aaa
mov
sub
push
dec
shrl
arpl
test
adc
cmpsl
aaa
shl
mov
dec
xor
xchg
addr16
call
int3
inc
outsl
jnp
mov
mov
scas
cwtl
push
sbb
ds
jge
es
shrb
pop
sbb
mov
js
les
xchg
sbb
pop
push
cmp
stos
ret
sarl
xor
pop
or
mov
test
movsb
test
pop
mov
dec
pop
ficompl
xchg
sbb
jmp
cmp
fdiv
dec
add
js
mov
push
icebp
push
rorb
adc
mov
mov
jb
jne
sub
inc
add
mov
cltd
pop
sub
mov
call
or
fistpll
mov
jle
lahf
mov
mov
xchg
fiadds
not
pop
mov
out
rclb
push
nop
pop
jo
repnz
sub
pop
repnz
es
mov
inc
mov
and
mov
pop
adc
inc
xchg
cmp
add
ffreep
add
out
mov
inc
mov
adc
inc
inc
mov
in
in
mov
pop
jl
push
mov
fsubrl
xor
insb
icebp
das
jg
xchg
cltd
mov
bswap
pop
push
jge
notb
sahf
fidivrs
mov
or
fimuls
jge
das
popf
dec
sbb
cs
adc
aas
lret
mov
sti
mov
stos
mov
push
lret
cmp
ret
dec
sbb
dec
lret
imul
pop
in
mov
fldcw
hlt
test
sbb
cmp
mov
jmp
sti
adc
arpl
and
xchg
adc
cmpsl
cmpsb
jns
lock
dec
mov
aaa
push
cmp
lcall
mov
test
jns
lret
cmp
mov
test
push
fidivl
cmc
movsb
mov
lock
push
jno
push
add
cs
mov
in
mov
enter
jg
xchg
stos
or
push
add
popf
xor
insb
pop
imul
movsl
lds
push
jns
mov
or
movsl
imul
sbb
and
jo
leave
mov
mov
enter
pop
repnz
pop
imul
lock
mov
popf
sub
xchg
mov
sub
dec
aad
lret
cmp
sbbl
xchg
dec
mov
fsubrl
daa
loopne
inc
xchg
mov
cmpsb
cltd
inc
ficompl
push
popf
iret
mov
movsl
mov
mov
dec
adc
sub
imul
cld
inc
xor
pop
ja
cmp
clc
imul
movsb
add
mov
lret
or
jle
cld
inc
fbld
movsb
bound
ss
insl
sti
pop
and
push
sbb
test
and
or
xor
cld
dec
adc
ljmp
jp
cmp
lret
cmpsb
xchg
lcall
mov
or
sbb
sbb
sahf
std
lds
jns
out
pop
push
dec
push
sahf
sub
mov
mov
push
push
je
mov
push
xchg
mov
stos
hlt
daa
ss
stos
ljmp
movsb
call
jne
ds
int
cmp
mov
cmp
sub
adc
xor
mov
xlat
and
or
cmp
xchg
jno
outsl
aaa
jge
pop
cmp
sarl
enter
push
ljmp
sbb
jne
pop
mov
pop
imul
sbb
sbb
stc
jb
xchg
jp
sbb
mov
mov
mov
jle
or
imul
outsl
out
mov
fdivrs
xchg
je
dec
xor
bound
clc
dec
fldcw
and
in
jmp
loopne
or
lock
jg
stos
sub
jne
lret
cmp
sub
sti
fwait
push
xor
enter
xchg
or
xor
test
movsl
push
jno
enter
mul
cmp
xor
mov
lods
inc
jmp
mov
out
inc
and
jno
mov
mov
push
mov
cwtl
add
mov
pop
pop
out
dec
in
add
clc
cwtl
sub
push
cli
mov
mov
push
out
adc
mov
cmp
daa
incb
cmp
das
cmpsb
test
xor
pop
inc
push
insl
iret
push
cmp
sub
ret
outsb
xor
loopne
add
lret
fwait
push
movsb
push
push
fwait
je
fimull
inc
push
ljmp
mov
jp
xlat
repz
gs
jg
das
mov
les
addw
push
sub
xchg
repnz
hlt
xchg
jnp
scas
es
dec
dec
add
and
jno
push
cld
mov
jge
jp
mov
fwait
fwait
addb
ljmp
test
fidivl
cwtl
das
pop
jns
sub
pop
in
xor
xchg
stc
dec
idivb
repz
jl
scas
push
adcb
push
jno
cltd
call
mov
and
out
cld
aas
lods
pop
out
jbe
sbbl
xchg
mov
adc
dec
add
pop
pop
xchg
xchg
inc
jecxz
jno
lds
ja
xchg
notb
ret
or
mov
lock
xchg
arpl
test
les
push
shrb
and
mov
adc
mov
mov
test
dec
add
inc
xchg
sub
cli
mov
pop
faddp
int3
push
xor
mov
loopne
jns
enter
jmp
into
cmp
idivl
xchg
xor
xchg
call
lret
notb
mov
pushf
test
sbb
mov
negb
pop
icebp
fadd
push
mov
fsubrl
addl
pusha
insl
jns
jnp
jmp
cmp
in
pop
in
pop
adc
jge
xlat
jns
unpckhps
dec
push
xchg
call
jb
lods
inc
popf
in
jp
dec
pusha
fnstsw
lock
lret
adc
inc
out
inc
rclb
cmpsb
jge
adc
xchg
sub
add
jecxz
sbb
or
fstl
call
xor
xor
xchg
sbb
xchg
dec
lock
mov
mov
syscall
shrl
in
les
mov
test
rclb
xorb
int3
jg
sbb
cmp
pop
jae
mov
sub
jns
jmp
iret
das
jmp
mov
jmp
aam
mov
fxch
lret
arpl
pop
xchg
inc
add
aaa
xlat
stos
adc
and
xchg
cmpsl
imul
push
add
cmp
lods
and
sbb
dec
lret
in
pop
test
mov
arpl
xor
sub
push
adc
stc
jnp
lret
push
mov
lds
lock
das
fidivrl
adc
imul
jno
jge
and
and
adc
xchg
pop
lret
mov
imul
aas
xchg
stos
push
dec
arpl
dec
in
cmp
imul
sub
lret
sahf
sbb
fistps
and
aam
insb
or
ja
push
xor
push
and
popf
pop
hlt
mov
cmp
in
test
xchg
popa
inc
gs
cwtl
icebp
cmp
xor
adcl
into
out
push
in
sbb
xchg
mov
loop
push
arpl
pop
push
cmp
add
mov
test
inc
pop
into
jae
xchg
xchg
inc
xchg
adc
push
popf
aad
in
sbbl
sbb
xcrypt-ecb
cmpsl
into
insl
enter
in
jo
jecxz
mov
push
adcl
in
push
lahf
hlt
sub
es
sbb
pop
frstor
cmp
jns
cmp
jecxz
add
mov
repz
aaa
xchg
fisubs
mov
pop
xchg
cmc
rclb
sbb
adc
ret
add
push
mov
and
xchg
push
fcomps
dec
bound
shr
insb
and
xchg
add
jnp
sbbl
shl
lahf
stos
adc
xchg
stos
cwtl
sbb
xor
jg
out
push
mov
fsub
cli
mov
in
adc
pop
mov
mov
pop
adc
stos
mov
pushf
add
pop
xchg
sbb
mov
sbb
js
or
dec
fucom
or
cmc
popf
inc
jne
jmp
testl
inc
in
xor
fidivrs
sbb
call
jge
loopne
lods
push
ja
mov
mov
and
lea
xlat
push
fistpll
arpl
pushf
jae
shlb
test
jo
mov
scas
jmp
outsl
movsl
jmp
daa
mov
fistl
mov
jne
outsl
or
mov
stos
jmp
out
aad
mov
push
lods
xlat
lds
gs
xchg
out
test
mov
mov
inc
gs
push
outsl
in
and
push
mov
cmp
dec
inc
mov
xchg
cld
mov
sbb
pop
cs
ja
movsl
repnz
xor
or
mov
shll
je
jle
js
sub
in
rorl
pop
pop
jmp
sbb
leave
jmp
inc
leave
fldl2t
fidivl
repz
dec
sub
cmp
in
pop
sub
cmpsl
jle
popa
mov
add
push
push
ja
inc
aas
aam
in
jo
repz
cmpsb
ds
insl
adc
outsb
jge
mov
andl
sub
adc
mov
mov
fbstp
movsb
insb
sub
xchg
dec
dec
dec
jp
push
sbb
lds
cli
jns
jne
cmp
fadd
mov
je
inc
push
rclb
rcrb
push
and
stc
arpl
bndldx
pop
bound
lock
add
dec
data16
test
fs
jns
adc
ljmp
ror
pop
data16
ljmp
mov
sub
pop
xchg
xchg
pop
cmp
xlat
push
adc
dec
fists
loope
cwtl
cmp
xor
out
inc
pop
ljmp
ljmp
xor
pop
call
cld
fmuls
nop
xchg
pushl
sub
scas
add
jle
jae
mulb
pusha
mov
mov
gs
sub
xchg
jmp
add
popf
hlt
mov
lcall
or
cmp
gs
and
mov
stc
cmova
sahf
adcl
pushf
inc
in
in
sub
adc
aaa
jae
enter
and
pop
movsb
dec
xor
or
cwtl
mov
sbb
cltd
fdiv
xchg
ret
jg
aam
lcall
and
cld
push
cli
cltd
stos
test
repnz
sarb
sbb
les
outsb
cli
out
mov
mov
sahf
cmpsl
decb
jnp
outsl
adc
jns
movb
imul
dec
cs
mov
js
popf
pop
movsb
jle
inc
movsb
pop
addb
mov
inc
dec
pop
jnp
dec
xor
aaa
mov
lds
rclb
mov
and
stc
xor
inc
lea
sub
sub
adc
movsb
jne
mov
shlb
rolb
and
mov
jo
push
xor
xchg
into
cmp
ret
dec
dec
xor
push
push
add
cmp
stc
fnsave
mov
decl
xor
sub
add
shl
sbb
loopne
aaa
mov
add
mov
dec
stos
inc
jnp
pop
cmp
leave
or
pop
iret
into
or
cli
inc
unpckhps
sub
test
mov
sub
in
stos
ffreep
sti
inc
imul
ret
clc
cs
in
fwait
xchg
out
in
mov
int3
imul
ja
add
repz
cld
inc
inc
pop
inc
inc
or
push
jmp
pop
popf
jmp
std
sbb
rol
xor
sub
js
jl
add
movsl
xlat
add
test
mov
push
popf
pusha
jg
or
mov
jne
sbb
cmpsl
add
test
stos
cmp
cmp
xchg
xor
dec
mov
jg
loopne
or
mov
jge
ficompl
data16
jle
jbe
lods
add
inc
pop
je
lret
movsb
jnp
pushf
add
jns
xor
cmp
icebp
pop
add
cmpsb
cmc
mov
or
adc
inc
in
es
testl
adcl
mov
repnz
jnp
fs
pop
xlat
outsb
inc
lods
adc
popf
out
push
inc
push
jmp
inc
sbb
leave
mov
adc
fs
push
fcomp
std
jmp
fsubrl
cmp
sub
ficomps
inc
jmp
xor
mov
and
pop
lock
jno
and
cmp
mov
incl
clc
or
pop
fcompl
xor
push
push
ja
lret
cltd
sahf
xor
test
notl
orl
mov
cmpsb
jg
adc
call
ljmp
lods
mov
pop
mov
pop
mov
inc
fmul
bound
bound
stos
testl
pop
imul
mov
out
xchg
and
leave
int
xchg
add
test
fwait
int3
sbb
or
outsl
fists
jecxz
ss
sbb
and
push
cmp
popa
scas
imul
push
mov
out
lds
mov
or
icebp
sbb
sub
inc
sbb
mov
fs
push
xchg
jmp
mov
ss
mov
inc
repz
pushf
andb
loop
frndint
push
jnp
jecxz
pop
pop
fldt
stc
test
mov
and
fcoml
fstpt
adc
fld
pushf
xor
add
mov
loope
pop
icebp
mov
sub
fs
or
ljmp
cmp
in
push
cmp
jae
ret
pop
sbb
in
fbstp
into
pop
addr16
jp
cmp
or
xorb
jge
sub
jp
fcompl
stos
cld
and
sub
int
push
inc
adc
mov
stos
imul
mov
out
mov
or
call
fimull
mov
pop
insl
add
rclb
or
or
mov
mov
pop
in
jmp
sub
jecxz
and
in
in
sbb
pop
inc
push
sub
jo
rcrl
lcall
and
push
fidivl
xchg
aaa
insl
mov
cs
enter
push
xor
mov
and
pop
pop
mov
pop
loopne
adc
loop
aad
outsb
sub
pop
lcall
xchg
adc
out
add
int3
sbb
push
notb
lret
lea
jno
push
push
daa
int
insb
sbb
sahf
inc
pop
mov
movsl
sbb
dec
lock
daa
inc
mov
pop
aaa
sbb
int
and
test
lret
stos
inc
std
fisubrs
out
fnstcw
fnstenv
pop
fildll
fstpl
dec
xchg
int
mov
mov
mov
and
mov
int3
cld
inc
pop
dec
fcomps
into
fs
push
sarb
push
push
dec
cwtl
mov
flds
and
clc
shrl
out
or
push
cltd
push
aad
jae
pop
in
jo
test
daa
jno
sbb
js
pusha
stos
mov
test
popa
nop
inc
mov
dec
lock
cmp
mov
push
loope
and
push
aas
sarb
lock
xor
dec
cmpsb
sbb
dec
das
or
pop
sbb
test
imul
cmc
pavgw
ret
jmp
sub
leave
add
imul
dec
dec
lahf
ja
shlb
aam
fisttpl
dec
mov
jg
insb
mov
fnsave
xchg
ds
flds
fs
imul
sub
cltd
or
mov
in
xchg
loope
xor
cmp
mov
ljmp
mov
loope
jns
add
jb
cli
cmp
mov
gs
sbbl
or
mov
mov
bound
xorl
xchg
mov
ja
insl
iret
sbb
js
notb
xchg
rclb
sub
xchg
sub
dec
jbe
stc
daa
in
push
fdivs
jecxz
add
or
cs
incl
jno
sub
jbe
pop
call
fsts
sbb
xor
loop
sub
loop
lock
push
lods
mov
jbe
aaa
add
mov
adcl
cmp
mov
sbb
pop
and
and
in
ja
xchg
mov
lret
repnz
mov
sbb
jb
mov
shlb
outsb
cmp
lods
inc
loope
out
pop
add
push
mov
fcmovu
adc
jne
push
mov
pop
mov
int
push
ljmp
or
fisttps
push
and
xlat
ljmp
push
sub
bound
lds
lods
test
mov
push
adc
fdivs
out
or
xor
and
xlat
push
nop
pop
pop
jb
mov
jle
repnz
and
cmp
and
add
ja
pop
mov
ja
xchg
push
outsl
push
adc
lret
sti
xor
jp
and
js
fwait
sbb
xchg
sub
inc
fs
fcompl
mov
aam
fsub
push
cmp
cmp
mov
nop
mov
flds
shlb
mov
mov
lods
cmp
fst
jg
mov
out
push
pushf
push
in
push
xor
enter
shlb
push
in
or
in
aas
andl
int3
sbb
add
imul
mov
idiv
adc
pop
sbb
daa
ds
outsb
fwait
adc
jbe
adc
and
inc
jne
pop
xchg
mov
jne
pop
mul
cmpsl
mov
jnp
test
lods
shl
pop
sti
pop
sub
push
dec
add
sbb
sahf
jno
jno
mov
insl
clc
into
pop
mov
lods
and
outsl
sub
arpl
mov
enter
mov
stc
mov
mov
inc
sbb
insb
adc
insb
imul
adc
push
lcall
xchg
pop
dec
dec
mov
jle
sarl
sbb
xchg
push
ja
mov
mov
mov
lods
pop
out
out
xchg
xchg
add
push
arpl
in
popa
dec
xor
movsb
jge
dec
cmpsl
mov
enter
mov
gs
sbb
push
add
mov
iret
push
dec
in
sete
sub
ja
rolb
jg
pusha
rcl
xchg
sub
xchg
fstpl
scas
add
and
test
into
popa
cmp
cmp
or
test
push
push
push
pop
pop
push
sub
pop
inc
dec
pop
icebp
divl
xchg
lods
mov
lret
nop
and
cltd
mov
lahf
and
insb
add
xchg
jl
ret
call
and
jb
push
mov
xor
add
mov
sbb
stos
imul
rolb
insl
jmp
outsl
inc
cmpsl
jecxz
data16
pop
jne
negl
xchg
adc
outsb
sub
ret
dec
fisubl
lea
mov
out
inc
pop
pop
pusha
test
loopne
add
sub
push
stos
stos
jmp
pop
popf
outsb
inc
andb
xchg
fsubs
jmp
xchg
int
dec
repnz
mov
jge
xor
lock
pop
repz
sahf
lock
mov
and
cli
inc
test
push
fs
fcoml
nop
stos
mov
push
push
xchg
lods
aam
rol
aas
sahf
mov
jbe
jmp
mov
dec
pop
add
data16
mov
sub
cli
popf
popa
sub
mov
push
xorl
xor
gs
adc
repnz
xor
xchg
sub
std
mov
jbe
rclb
adc
outsb
mov
sub
popf
insl
in
xchg
sbbb
and
mov
fucomip
popa
int
stos
push
push
outsl
pop
mov
xchg
sub
xor
sbb
adcl
fdiv
lahf
ss
mov
lds
aad
fisubrl
cmp
inc
scas
pop
mov
push
addr16
cld
fcoms
and
xor
repz
sub
sbb
xchg
lock
movsl
mov
adc
cli
xchg
call
inc
fnstcw
mov
in
push
ja
ds
fldcw
or
mov
in
add
lcall
jb
int3
sbb
dec
add
rcrb
xor
mov
mov
pop
jle
rcl
dec
sahf
mov
or
fdiv
cmp
mov
sub
sbb
push
lahf
xor
mov
loope
dec
gs
or
adc
mov
das
vcvttss2si
or
push
daa
stos
sub
cmp
lods
xchg
sbb
xor
or
es
pop
out
push
push
pop
or
dec
xchg
jp
lods
jp
test
in
loopne
mov
push
cld
popa
scas
inc
xchg
pop
cwtl
mov
cmp
jecxz
leave
inc
mov
jne
stos
nop
and
jl,pn
mov
iret
dec
mov
ds
xchg
xchg
sub
or
bound
mov
mov
in
pop
aam
xlat
mov
cmp
outsb
mov
ret
cmpsl
ja
xchg
fidivrs
sbb
cmp
data16
aaa
jl
jne
xor
mov
mov
cmp
jl
pop
sub
add
leave
aas
stos
jne
scas
sbb
mov
push
xchg
mov
lock
iret
push
outsb
sub
sub
and
mov
idivl
movsb
mov
jnp
mov
roll
cmp
pop
jbe
shr
dec
jmp
insb
cld
xor
jge
icebp
ds
stos
push
cmp
push
addr16
cmp
ja
mov
std
out
or
imul
or
sarb
adc
aaa
push
push
scas
arpl
gs
jb
imul
push
xchg
mov
push
xchg
insl
cs
loop
and
repnz
add
gs
js
mov
add
rol
cmpsb
mov
dec
dec
or
ljmp
mov
stos
inc
mov
jnp
jns
icebp
addr16
push
stos
jmp
dec
out
inc
stc
cmp
sahf
clc
iret
lret
or
jb
in
add
ret
icebp
int3
pop
scas
and
in
mov
je
sub
mov
jge
or
dec
inc
xchg
cs
int
sbb
mov
arpl
std
mov
jle
test
and
pop
stc
xor
xchg
push
push
sahf
xor
lcall
in
lods
rol
adc
cmc
fnstenv
dec
aas
aad
dec
lds
push
imul
rorb
pop
out
pop
xchg
arpl
icebp
sub
dec
scas
inc
pop
xor
jno
fucom
jp
or
aam
call
inc
mov
cmp
ret
push
cmp
mov
mov
in
mov
in
inc
lock
inc
hlt
out
add
imul
scas
mov
xchg
iret
xor
push
add
mov
daa
sub
xchg
xchg
lret
jp
pop
lahf
dec
scas
jnp
fildll
orl
or
xor
adc
lea
pop
lahf
or
push
scas
inc
mov
lea
xchg
out
xor
outsl
mov
jl
jecxz
test
shll
scas
jecxz
mov
xchg
sub
fnsave
mov
mov
into
movsl
xor
xorl
shlb
dec
xchg
mov
sbb
test
les
ja
icebp
mov
mov
push
mov
mov
inc
cmpsl
sub
cmp
fdivp
mov
pusha
mov
cmpsb
popa
dec
jge
pop
mov
and
jo
shl
sub
jno
data16
xor
xchg
test
push
sbb
pushf
cmp
mov
lds
pop
iret
mov
and
cmpb
mov
jnp
in
mov
pop
add
nop
ret
ja
sarb
cmc
push
dec
jge
hlt
jae
add
mov
rorb
or
cli
inc
movsl
inc
mov
push
mov
test
pop
ret
lahf
ss
popf
lea
xor
ret
jp
jb
scas
jns
add
call
cmp
in
adcb
or
in
fistpll
and
cmpsb
outsb
stc
mov
pop
lret
stc
or
js
test
roll
xchg
sub
and
jns
cmpsl
andb
sbb
rcrb
pop
insb
scas
insb
xor
cmp
mov
cmpsl
lds
dec
inc
cmpsl
jecxz
out
xchg
dec
mov
jmp
insb
push
add
mov
mov
aam
xor
lock
aaa
gs
mov
lods
pop
xor
or
adc
mov
mov
pop
repnz
js
jmp
or
sahf
pop
loopne
call
mov
insl
fucomip
test
nop
fwait
pop
sahf
icebp
lods
ljmp
pushf
scas
cli
xchg
sub
insb
add
js
cmp
sbb
in
mov
std
jecxz
push
shll
std
in
scas
andl
andl
inc
xor
pop
repz
add
push
sti
aaa
popf
mov
adc
sub
andl
rorb
clc
mov
int3
sub
pop
imul
aas
shrb
std
sbb
cs
jl
pop
cmpsb
stc
adc
sbb
push
cld
movsb
fsubl
das
adc
xchg
lret
ffreep
icebp
ret
cs
jmp
xchg
add
mov
loop
pop
sahf
pop
enter
jecxz
adc
leave
in
pop
adc
dec
leave
inc
dec
shlb
int
xorl
and
test
inc
ret
sub
andb
xor
jbe
lods
dec
push
pop
pop
adc
and
inc
or
fs
pop
int
lods
outsl
lock
cmpsl
xchg
adc
jle
mov
pop
mov
flds
sub
push
cmpsb
cmp
icebp
jne
push
sub
jg
enter
mov
jg
mov
sti
adc
test
call
mov
fimull
cltd
popf
stc
loop
mov
popf
or
jge
cmp
and
jl
aaa
jp
test
mov
push
push
leave
daa
jno
and
mov
cltd
dec
ret
jp
mov
mov
cli
pushf
mov
mov
jae
mov
gs
pop
insl
out
cs
iret
push
int
nop
push
xlat
adc
push
inc
push
xor
xor
pop
sub
addl
cmp
push
addr16
aas
lea
aad
dec
insl
push
sub
repnz
jns
testb
daa
dec
pop
sarb
pop
jmp
popa
mov
adc
rcrl
inc
gs
std
insb
push
js
bound
lods
imul
sbb
mov
loope
daa
notl
xor
mov
test
mov
loopne
mov
dec
cwtl
mov
add
mov
and
xor
in
in
and
adc
mov
insb
lcall
or
insl
cmpsl
jp
mov
aas
jo,pt
sub
mov
mov
stc
jp
mov
sbb
dec
cli
fs
jp
dec
clc
sahf
in
sbb
je
call
test
cmp
lods
dec
lods
lods
ljmp
pushf
mov
mov
cpuid
fyl2xp1
inc
mov
pop
pushf
push
scas
sbb
mov
je
into
mov
xchg
pop
cmp
cwtl
xchg
pop
dec
sbb
sbb
loop
das
or
push
stos
and
sti
flds
inc
rorb
ss
and
xchg
sbb
add
inc
cmp
js
popf
stc
mov
lea
inc
mov
sub
imul
imul
jmp
outsb
dec
out
in
jno
xlat
and
fwait
sub
cli
mov
jle
jmp
ljmp
or
fs
sub
lret
bound
jmp
lods
jmp
pop
in
sbbb
cs
pushf
lret
movsl
out
dec
mov
jbe
out
dec
hlt
lret
sti
jns
adc
xchg
cmp
mov
bound
jl
test
or
jmp
aaa
xchg
mov
mov
pop
dec
xchg
pop
dec
jae
jne
push
pop
aas
or
inc
jns
repnz
and
repnz
ret
xor
cmpsl
out
loopne
mov
jmp
in
pop
xchg
mov
and
js
fnstcw
sti
inc
stos
mov
dec
movb
lret
addl
cmp
scas
or
xchg
mov
or
scas
fldl
inc
call
xor
dec
movsb
repnz
jl
int3
xchg
push
dec
mov
pushf
or
push
nop
inc
fcmovbe
and
or
outsl
rol
sti
movsl
jecxz
mov
pop
adc
add
scas
in
orb
arpl
dec
mov
mov
in
pop
pop
xor
syscall
not
sbb
sub
hlt
jle
jg
xchg
mov
mov
ja
cld
arpl
xchg
cmp
mov
pop
lret
and
sub
pop
adc
mov
pop
mov
out
les
and
mov
cmpsl
dec
clc
xor
cmp
inc
sar
xchg
stos
pushf
xchg
pop
int3
sub
jmp
mov
pop
repnz
leave
jl
cmp
inc
imul
jns
cmp
bound
gs
int
sbb
leave
popa
add
mov
lret
pop
mov
jbe
xor
sbb
jno
iret
xor
inc
repnz
add
popf
js
ds
sbb
test
shl
adc
fnstsw
jnp
cmp
push
dec
adc
inc
cltd
jl
icebp
mov
inc
fimuls
xor
enter
inc
fmull
cmpsb
inc
xor
mov
xchg
arpl
sub
add
or
or
rclb
sub
icebp
stos
jmp
push
fwait
or
mov
mov
cwtl
or
pop
mov
pushl
xor
adc
nop
sahf
lret
in
cmpsl
push
in
and
push
mov
cmp
jno
dec
imul
shrb
shrb
mov
ss
add
inc
outsb
mov
mov
mov
mov
imul
cmpl
loope
fbstp
ds
cmp
pop
push
fsubl
xchg
xor
xchg
bound
cmc
enter
mov
ljmp
push
lds
cmpsl
cmp
add
cmpsb
sbb
jne
fs
sbb
dec
inc
hlt
pop
mov
pop
sarl
jb
jg
or
lcall
push
jmp
pop
sub
mov
jne
lods
inc
stos
mov
repz
xorl
and
movsl
mov
xor
in
rcr
fldl2t
mov
push
xchg
cs
jge
cmp
mov
ss
or
loope
and
or
stos
popf
mov
jno
fs
or
lcall
int3
scas
cmp
lcall
sarb
out
mov
xchg
out
push
js
popf
add
shll
add
mov
subl
bound
arpl
jae
jl
xlat
mov
xor
es
stos
mov
adc
add
cltd
gs
pusha
popf
pop
pop
mov
sub
popa
je
scas
mov
pop
out
push
adc
frstor
mov
scas
insl
mov
mov
mov
xor
lods
stos
inc
xor
out
fisubrl
inc
lock
fldpi
mov
inc
sub
inc
fdivp
jl
leave
lds
out
in
pop
jb
aad
popf
or
mov
lods
inc
and
out
lret
sti
cmpsb
or
ret
cmp
movsb
ret
mov
cmp
cmc
mov
fwait
subb
adcb
int3
lds
bound
mov
cmpsl
dec
in
dec
cld
push
mov
sarb
lcall
inc
sub
cmp
jge
pusha
bound
jl
jg
inc
test
dec
push
inc
divb
cmpsl
mov
repnz
ljmp
mov
div
pop
mov
or
and
shll
mov
sub
lock
shr
push
pop
dec
mov
dec
sub
test
dec
mov
test
dec
loopne
rol
stos
mov
jecxz
enter
ficoms
lret
and
xor
or
sbb
xor
xor
cwtl
fdivl
repz
dec
shll
in
fnstcw
in
or
sarb
pop
fmulp
mov
pop
adc
cmp
mov
adc
pop
cs
adc
jbe
lret
xor
arpl
dec
fs
es
call
mov
int3
and
fstl
push
push
dec
fwait
jmp
test
jo
dec
out
js
imul
scas
inc
dec
in
mov
cmp
jno
adc
cmp
pop
or
fnstenv
push
stos
mov
sbb
push
sbb
xor
cmp
cmpsl
cld
jecxz
and
scas
xchg
imul
push
push
in
test
cmp
xlat
rol
sub
mov
or
sbb
sub
mov
aad
pop
mov
sbb
mov
ret
shlb
or
cmp
pop
xor
xchg
inc
push
xchg
call
iret
jp
popa
fdivl
leave
out
xchg
sub
adc
movsb
xchg
aas
mov
jp
aas
movb
mov
or
pop
mov
fldt
adc
add
mov
push
daa
push
or
mov
mov
jg
or
push
movsl
sarb
loope
xchg
mov
pop
aas
mov
push
xlat
out
xchg
in
pop
js
pop
mov
cld
push
pop
cwtl
insb
out
mov
out
mov
ss
or
aaa
js
mov
mov
pop
sbb
pop
add
gs
in
cmp
dec
scas
aam
ja
dec
lret
xchg
push
or
sbb
mov
rclb
shrl
rol
iret
mov
shll
daa
inc
jge
sbb
mov
andb
dec
shl
lea
xchg
sub
xchg
push
out
add
lret
pop
hlt
je
lret
xlat
xor
mov
mov
rcrb
incl
test
bound
lcall
out
and
mov
sub
adc
mov
sbb
fisubs
cld
xchg
jl
in
mov
xor
fwait
xor
les
sub
out
ds
cmp
cmp
add
cwtl
outsb
adc
mov
add
adc
jmp
jl
adc
outsl
pop
mov
ljmp
insl
add
inc
or
int3
push
filds
orb
push
adc
sbb
popa
shlb
lret
scas
cld
inc
stc
cmp
fisttpll
jmp
sbb
pop
jb
inc
inc
jo
fidivl
xchg
lret
test
in
add
je
and
mov
xor
std
cmp
imul
add
or
cmp
and
sub
pop
fldl
sub
hlt
or
rep
xlat
dec
popf
mov
scas
in
pop
shlb
pop
dec
mov
push
adc
mov
cli
sbb
xor
sbb
dec
stos
xchg
aad
xor
mov
daa
inc
xchg
push
xchg
insb
dec
push
stos
repz
imul
lret
in
dec
icebp
push
clc
adc
xchg
add
jmp
bound
lahf
pop
or
aad
call
fs
stos
in
xor
scas
or
fisttps
jle
adc
xchg
xchg
mov
mov
jb
aaa
scas
divl
test
inc
xchg
lcall
lods
cmpsl
jb
pop
outsb
frstor
outsb
jp
sbb
xor
je
in
sbb
in
stos
subl
call
xchg
sbb
insl
sti
test
push
repz
dec
divl
jge
push
xchg
ret
jle
sbb
aaa
push
jbe
xor
dec
mov
sahf
lcall
jg
jg
test
dec
ja
int3
jl
cld
lcall
in
clc
ds
sub
dec
cmp
push
es
cs
lods
jo
int3
adc
shrl
loope
mov
repz
mov
fdivrs
scas
enter
imul
fists
fcoml
jmp
xor
iret
dec
rclb
xor
push
je
enter
push
cmp
push
adcl
xchg
out
add
xchg
rcll
fidivs
inc
in
inc
mov
data16
jl
dec
mov
pusha
mov
pushf
xchg
scas
out
fidivrl
sub
sbb
inc
mov
lahf
xor
mov
scas
inc
dec
sbbb
in
jne
mov
push
or
mov
shll
jne
sub
or
or
jle
fwait
mov
fidivrl
clc
push
mov
pop
repnz
sub
in
pop
pop
stc
adc
ret
or
mov
loop
xor
inc
adc
jl
inc
push
shll
add
pop
mov
dec
mov
xchg
cmc
cmpsl
out
not
and
shrb
in
test
data16
ljmp
pop
or
sbbb
lock
fildll
sbb
out
dec
gs
loop
add
or
dec
cmp
jp
imul
add
pop
fsubr
fadds
cmp
push
sbb
shl
dec
ss
test
daa
cmp
insb
std
or
cwtl
outsl
dec
dec
ret
sahf
mov
push
loopne
cmp
lret
cmp
cmc
push
or
fcomip
fcompl
cmpsb
dec
mov
stos
xchg
shrl
cmp
ds
fwait
xlat
les
jecxz
jb
insl
jge
scas
jno
enter
mov
pop
cmpb
cwtl
pop
stos
push
sbb
je
lahf
mov
lods
fs
xchg
mov
mov
sub
clc
jge
xchg
mov
sbb
jl
mov
pop
stos
adc
fisttps
insb
mov
movl
nop
pop
xor
adc
das
xchg
in
inc
dec
pushf
dec
adc
cmp
inc
popf
lret
jne
mov
jb
mov
icebp
les
adcl
subl
jne
sti
addr16
pop
outsb
out
insl
enter
stos
push
jmp
cmp
xor
lea
lea
cmpsl
inc
ss
loopne
sbb
insb
in
pop
xor
pop
fsubrs
push
xchg
sbb
mov
data16
mov
rcrl
or
push
push
dec
push
ret
shll
mov
adc
jl
arpl
mov
push
sbb
cwtl
aam
and
mov
lock
push
gs
cmp
sbb
fwait
push
xlat
push
xchg
in
test
aaa
cmp
adc
fdivp
cmp
dec
xchg
cmp
negl
fistpl
rorl
incb
sub
fistpl
adc
dec
pop
fsubrs
add
cmp
jecxz
xchg
leave
fucomi
scas
iret
gs
dec
push
arpl
and
shr
push
xor
inc
loop
pop
cmpsb
arpl
and
cwtl
cwtl
sub
pop
mov
jecxz
movb
jmp
ficompl
add
repnz
popa
cmp
loope
cmpsl
push
call
cmp
sahf
adc
xor
jo
repnz
pop
sbb
jg
mov
jg
push
pop
enter
popf
dec
lods
inc
mov
jge
ja
sub
pop
loopne
add
mov
jle
jecxz
mov
div
or
mov
icebp
mov
mov
je
imul
movsl
adc
xlat
pop
cltd
jp
jnp
movsb
mov
ret
sbb
shrl
inc
push
lahf
or
ljmp
ret
and
add
les
lds
sub
lock
xor
test
push
mov
mov
inc
jg
pop
xor
fsubl
aaa
cmpsl
or
xlat
cli
and
and
xor
push
push
enter
lea
out
mov
sarl
jge
mov
adc
add
imul
mov
loopne
mov
dec
outsb
mov
sarl
mov
rcr
cwtl
or
aad
les
repz
sub
push
mov
ret
jnp
cmp
mov
fstpt
add
adc
xor
cmp
and
std
ror
mov
fs
sub
orb
lods
pop
sbbl
xchg
int3
mov
insl
mov
in
ficoms
add
aam
cmc
adc
mov
aaa
sti
dec
xlat
xor
aas
xor
jo
xchg
or
stc
pusha
adc
dec
pop
dec
jno
sub
repz
lods
out
or
push
mov
lea
xchg
xchg
das
ljmp
pop
sahf
arpl
push
popf
inc
fadds
sti
call
push
add
push
xchg
and
push
incb
pop
cmp
cli
push
movsl
pop
in
mov
add
cs
and
dec
in
inc
dec
fs
clc
imul
sbb
add
fnstenv
and
addr16
test
sarb
movsl
cmp
loope
add
and
arpl
lock
adc
jb
jns
repnz
xchg
scas
push
rdtsc
enter
aas
mov
fidivrl
aad
test
jo
xchg
popf
clc
dec
imull
xchg
mov
rcrl
in
adc
xchg
xchg
das
push
ficomps
xchg
dec
adc
repz
in
test
sbb
cltd
adc
data16
orb
xor
pop
nopl
mov
lea
inc
fstl
rcrb
mov
test
pop
add
push
push
jecxz
clc
adc
out
popa
jg
xchg
out
dec
call
pop
cmp
sbb
push
xor
mov
add
xor
mov
mov
cwtl
dec
pop
cli
push
adc
repnz
jecxz
mov
xor
test
mov
pop
icebp
mov
mov
iret
mov
fwait
shrl
fwait
in
idiv
shr
rep
clc
iret
les
leave
mov
jno
fstps
sbb
jmp
orl
xchg
mov
mov
mov
lea
lret
mov
adc
mov
mov
shl
jo
pcmpgtd
xchg
fnstenv
movsl
lea
leave
fs
cli
sbb
jg
adc
shll
pushf
aaa
pop
cli
insl
or
mov
sbb
cmp
lret
sub
je
scas
out
clc
stos
cmp
ss
or
mov
stos
sub
daa
stos
enter
push
fwait
lret
lahf
outsl
jmp
sbb
cmp
scas
repz
mov
inc
jnp
das
lods
push
je
ja
idivl
dec
int3
inc
data16
lret
test
test
mov
fsubrp
xor
xchg
mov
cmc
setae
lret
out
pop
cmp
mov
mov
in
add
jmp
jae
add
mov
pop
adc
mov
mov
jbe
push
ret
and
jle
push
mov
xor
mov
int
outsl
in
and
dec
fcmovu
mov
sbbb
shlb
clc
mov
nop
push
ret
mov
sub
xor
test
mov
sub
les
aam
lcall
inc
test
cmc
sub
push
sub
enter
push
call
loope
ret
jns
push
dec
jo
mov
mov
iret
jne
ja
shll
fidivrs
js
stc
sbb
xlat
push
dec
or
mov
jnp
imul
mov
fstpl
mov
jg
insl
lock
daa
out
pop
inc
mov
dec
pop
sbb
mov
dec
in
xchg
jmp
mov
insb
adc
mov
mov
std
xchg
and
adc
test
lcall
add
paddq
ret
cwtl
or
push
sub
into
icebp
repnz
daa
js
test
int
enter
nop
lea
lds
sbb
lods
push
sub
lahf
cltd
and
jl
push
loopne
arpl
xlat
sahf
jne
pop
repnz
cld
or
push
add
mov
push
fsubl
jl
test
cmpsl
mov
push
fdiv
andl
popa
cmp
dec
jmp
pop
push
icebp
and
idiv
or
inc
lahf
ja
in
pop
cltd
es
fistpl
in
popf
and
inc
or
arpl
xchg
cmp
shlb
repnz
inc
clc
mov
jnp
sar
pusha
push
repz
rclb
push
cmpsl
xorl
push
ljmp
test
pop
imul
mov
jmp
out
mov
mov
jno
popl
or
pop
inc
fcoml
cmp
data16
pop
push
pushf
sbb
jno
lods
mov
pop
nop
ret
repz
std
push
sbb
popf
mov
inc
jmp
jno
clc
popl
and
dec
clc
ret
pop
jno
dec
push
mov
xor
lcall
cmp
mov
dec
push
fidivs
sbb
push
cmp
mov
jmp
dec
sar
jp
mov
rcr
addb
insl
sbb
sbb
cmp
mov
scas
mov
jne
fildll
jns
jbe
sbb
out
scas
push
cld
call
push
mov
mov
push
fcmove
and
mov
sub
push
repnz
arpl
dec
cmp
or
dec
lret
andb
lock
mov
jbe
aas
movsb
gs
call
lea
jo
test
test
push
push
cmp
ljmp
fstps
add
push
aaa
negl
daa
stc
out
inc
stc
addb
mov
fisubrl
jns
fs
dec
aaa
fwait
adc
in
mov
mov
ja
sub
push
push
push
and
mov
jno
lock
jo
clc
sahf
icebp
sbbb
cmp
in
ret
push
in
cmc
inc
sbb
sub
and
cld
int3
pop
fbld
mov
push
lock
outsl
xchg
ret
mov
movsl
dec
add
es
and
sbbl
push
lds
jg
inc
sub
mov
dec
aas
add
mov
iret
imul
or
add
jae
stos
fwait
pushf
or
inc
xor
es
inc
dec
and
loopne
in
cmp
xchg
pop
push
pop
jle
popa
loop
notl
mov
popf
and
lock
mov
cmp
push
jae
enter
lea
xchg
loopne
int
mov
xor
shlb
cltd
jecxz
cwtl
in
sbb
stos
add
daa
stos
int
rolb
aaa
and
aad
xorb
nop
out
ret
repz
and
xchg
jge
ja
ret
or
inc
lret
data16
out
popf
sub
cmc
xor
xchg
cmpsl
cmp
add
in
fcomps
add
repz
lea
push
sub
notb
or
push
mov
ret
loope
mov
add
adc
xor
adc
or
lcall
leave
loope
mov
or
nop
and
mov
aam
jae
fwait
lods
xchg
pop
and
jne
inc
pop
fisubs
lret
in
jno
pop
aad
test
or
xor
xchg
xor
pop
les
jne
inc
insl
inc
repnz
xor
leave
pusha
mov
sbb
loope
mov
test
sbb
sub
xlat
movsl
mov
jp
call
pop
loop
test
dec
mov
int
or
shll
push
fcoml
mov
jb
mov
lahf
inc
outsb
imul
push
or
addl
enter
push
jmp
subl
icebp
push
add
lods
xor
push
xor
mov
xlat
loope
orl
inc
add
xchg
insb
loope
fstl
movsb
lods
aas
sbb
push
in
ss
push
test
pop
add
lds
push
adc
and
je
scas
jno
rcrl
mov
sub
popa
add
les
negb
repz
cltd
jmp
adc
repnz
repz
ftst
ja
jb
std
bound
test
out
mov
mov
rcrb
leave
fsubrl
push
aaa
lret
xchg
mov
or
insl
mov
mov
bound
out
xchg
xchg
pop
push
cltd
lods
repnz
push
or
out
cmp
bound
xchg
loop
add
scas
jl
bound
clc
dec
stos
push
and
adcb
orl
out
cmpsl
mov
mov
dec
jecxz
push
sbb
loope
add
outsb
test
pusha
or
xchg
mov
loope
adc
mov
rcrl
fildl
xor
enter
test
push
adc
fnsave
popa
cld
inc
pop
mov
inc
test
mov
and
add
mov
dec
sbb
shrb
lock
je
pop
hlt
inc
push
sbb
push
mov
jae
and
push
xor
into
sbb
adc
test
movsb
fidivs
jnp
inc
arpl
fincstp
jle
js
mov
dec
and
mov
fwait
movsl
add
jmp
aas
lea
cmpsl
cmpsb
and
in
mov
jnp
xor
push
xchg
inc
pop
mov
pop
ss
loope
adcl
push
jne
push
stc
jae
movsl
movsb
and
outsl
lods
idivl
fimull
mov
inc
fimull
cltd
jmp
pop
pusha
insb
mov
push
mov
mov
filds
addr16
mov
or
jge
xlat
in
inc
cld
popf
sti
or
aas
adc
leave
call
and
enter
pop
pop
jp
mov
cwtl
sbb
and
push
add
and
daa
jle
inc
adc
je
mov
push
pusha
mov
mov
cmpb
out
addl
sub
xor
sbb
push
imul
cli
or
fisttps
jno
cli
clc
lock
inc
decb
aaa
cmp
les
ja
out
pop
add
leave
std
test
fstl
mov
sub
xor
mov
sbb
adc
roll
xor
sahf
ljmp
cmp
sub
mov
adc
aad
push
or
dec
fucomp
jg
or
loope
inc
push
jbe
mulb
adc
test
repz
loop
xor
cmpsl
and
pop
shll
into
enter
out
mov
ljmp
negb
mov
mov
jmp
lods
sbb
jb
cld
in
in
add
jb
lods
jecxz
scas
pop
outsb
cwtl
add
fidivs
insl
push
pop
cmp
leave
sub
jae
and
dec
sub
sbb
call
cmp
pop
xchg
push
out
out
pop
or
xor
and
mov
inc
fbstp
push
push
int
ficoms
cmpsl
scas
sbb
cmpsl
data16
ss
inc
insl
push
fcoms
orl
fnstsw
out
aas
int3
xor
repz
test
jae
lret
mov
or
pop
jge
push
out
fcompl
mov
push
pop
sub
je
sub
imul
or
popf
add
sub
ret
xchg
add
inc
adc
xchg
pushfw
mov
leave
pop
daa
outsl
adc
cltd
xor
or
mov
or
cmp
cmpsb
daa
iret
add
jne
mov
ljmp
outsl
inc
je
ret
int
imul
ret
pop
test
cmp
mov
cmpsl
jp
mov
and
out
sbb
js
jge
push
xchg
dec
ss
ds
inc
sbb
pop
sahf
mov
scas
movl
rclb
ret
dec
icebp
xor
push
cmp
xchg
jecxz
out
lret
js
add
adc
in
lods
lahf
xor
fists
xor
mov
pop
fsubr
xor
shl
xchg
jmp
mov
xor
movsl
hlt
cli
repnz
inc
or
xor
jne
clc
cmpb
push
push
dec
in
shr
ret
and
insb
push
popa
push
andb
or
inc
mov
or
push
mov
mov
push
cmp
sarb
fs
inc
dec
lcall
mov
and
imul
mov
dec
adc
jbe
sub
pmulhuw
shlb
mov
sbb
andb
inc
mov
out
cmp
cmc
jl
test
mov
pop
in
neg
pusha
add
dec
lock
jae
fwait
sub
lahf
push
or
ja
pop
scas
imul
mov
cmp
mov
sbb
insl
jno
cmc
stos
jle
cmp
mov
xchg
and
adc
sub
inc
mov
jecxz
add
stos
cmpsl
test
adc
mov
mov
adc
sub
jo
xchg
mov
xchg
subb
mov
jb
sbb
pop
in
dec
jo
call
mov
jp
xchg
and
out
repnz
shrl
mov
call
jmp
push
ret
and
push
adc
lock
rcrl
pop
out
iret
fbstp
cmp
dec
loopne
dec
mov
push
lods
xor
popf
mov
xor
fs
out
cld
sub
mov
lock
mov
mov
dec
jp
xchg
ljmp
test
sbb
and
leave
lret
insb
push
pop
xchg
inc
inc
jl
jmp
adc
out
jnp
pushf
inc
cmp
dec
out
repnz
cltd
bound
mov
imul
jne
stos
les
call
inc
dec
add
arpl
rorb
xchg
cltd
cmp
loope
mov
adc
jecxz
call
inc
cmp
stc
iret
lea
mov
xlat
out
test
adc
push
repnz
mov
xchg
mov
xchg
into
mov
movsl
and
mov
adc
das
jbe
inc
shrl
jae
cmpb
add
or
pop
arpl
xlat
jmp
scas
andb
jnp
in
pusha
jl
mov
or
mov
enter
push
add
inc
mov
imul
fnstcw
push
sbb
and
xchg
das
sti
dec
jno
xor
ljmp
adc
fidivl
xchg
jmp
ljmp
cwtl
call
dec
mov
mov
push
sahf
jg
push
jle
and
mov
jg
jge
out
adcl
inc
jo
push
xchg
popa
mov
pop
loop
sbb
call
aam
jo
and
xchg
fdivrl
mov
sbbb
aad
cmpsl
push
mov
ljmp
insl
das
ret
push
pop
inc
shrb
cli
xchg
adc
cwtl
ja
add
aam
or
test
ja
mov
shlb
push
pop
aas
jnp
pop
or
mov
add
mov
test
xchg
push
lock
cmp
push
pop
push
popf
jo
and
jne
out
arpl
mov
push
mov
xchg
adc
pushf
push
int3
fcoml
rcrl
mov
sub
adc
pop
push
scas
mov
sbb
mov
adc
arpl
scas
push
movsb
dec
test
int
test
popa
or
fdivrs
movsl
mov
andl
add
aas
shl
add
scas
push
adc
push
aas
daa
add
pop
sbb
push
dec
pop
mov
aas
mov
jo
cmp
data16
cmp
js
outsb
add
fs
mov
sub
ja
dec
popf
mov
mov
cwtl
int3
mov
jo
inc
gs
inc
and
scas
mov
jge
push
jno
sbb
mov
fbstp
or
incb
cmp
ret
cmp
out
xchg
push
fmull
mov
mov
push
pushf
add
movsb
or
iret
push
sub
outsb
rcrb
enter
es
ret
repz
and
mov
mov
ds
shlb
xor
inc
and
pop
in
call
mov
mov
xor
decl
mov
es
pop
ljmp
jo
pop
sub
popf
pop
test
lea
push
add
sbb
mov
out
ds
jo
pusha
mov
loopne
mov
idivl
in
cmc
lock
fmuls
ds
stos
or
stc
cs
add
es
stos
popl
xchg
test
fwait
pop
roll
mov
movsl
arpl
and
mov
lret
cmpsl
inc
repz
lods
jb
lds
mov
orb
inc
bound
bound
aad
xchg
lods
loopne
fidivs
ret
lock
dec
pop
push
repz
insb
fyl2xp1
cmp
aaa
test
dec
dec
notb
cmp
lret
fmul
test
push
jo
icebp
sbb
xor
lds
pop
mov
mov
fwait
cmovge
sub
adcb
sbb
out
add
add
repnz
pop
mov
push
jne
pop
ljmp
cld
cmp
fwait
mov
sub
jg
pop
orb
hlt
outsl
int
dec
jp
jnp
xchg
in
dec
sbb
dec
pop
push
xchg
pusha
push
lods
daa
pushf
dec
mov
cmc
jge
aas
lahf
shll
std
ss
es
fs
mov
cmpsl
ds
ljmp
mov
insb
dec
push
push
mov
sub
cmp
mov
pusha
scas
push
push
xchg
or
or
push
adc
out
inc
and
pop
insl
add
and
jg
sub
repz
rol
lock
mov
insl
push
movsb
repnz
stc
or
sarb
in
mov
js
inc
psadbw
push
pushf
and
add
fstps
ss
es
push
pop
imul
sub
lods
pop
aam
cmp
pop
xchg
add
mov
sahf
fsts
mov
loop
cmp
out
test
call
lea
arpl
sbb
sarb
cmp
mov
xor
movsb
push
pop
or
xchg
pushf
stc
and
xor
add
xor
inc
pusha
cmp
movsl
mov
adc
call
dec
inc
repnz
dec
dec
hlt
and
std
jbe
push
popf
jge
xor
out
xchg
jp
mov
xchg
xchg
dec
pop
cwtl
das
xchg
insb
sbb
divb
sub
nop
imul
adc
call
imul
add
psllq
cmp
ss
mov
mov
leave
out
aas
test
lods
sahf
loope
loop
jno
sbb
test
rol
cmp
dec
imul
inc
push
jne
xchg
scas
nop
jo
sub
or
popf
stc
cmp
in
adc
xchg
dec
int
add
push
dec
mov
xor
ljmp
cmc
inc
incl
test
mov
out
sub
aad
dec
sub
pop
xor
lcall
mov
fldenv
fcoms
out
rcl
stc
adc
jge
dec
ds
pop
outsl
and
pop
hlt
mov
mov
popa
fmull
xchg
insl
stc
ret
pop
mov
test
jp
pop
fdivrp
cmp
and
repz
pop
and
out
in
xchg
lahf
data16
es
jnp
cmp
xchg
and
push
leave
sbb
mov
add
subl
int3
bound
jne
or
bound
icebp
leave
int
jns
out
add
cmp
cmp
cmp
mov
ret
fdivrl
cwtl
gs
call
aam
scas
inc
mov
lcall
inc
lods
call
es
or
inc
bound
push
sbb
ja
xor
repnz
push
mov
pushf
inc
int3
lea
into
xchg
xlat
or
sub
js
cwtl
and
adc
and
pop
or
fwait
and
inc
xor
mov
sub
mov
fwait
and
cld
jecxz
mov
and
outsb
mov
rclb
pop
mov
push
aas
mov
sbb
test
jo
dec
leave
pop
push
rolw
dec
add
fiaddl
xor
xchg
bound
es
pop
or
mov
push
aaa
inc
add
pop
fstl
rolb
andb
xchg
jecxz
imul
cwtl
xor
or
push
inc
xchg
mov
insb
sub
inc
ficompl
subb
test
and
js
dec
jl
iret
sub
jl
shr
push
mov
jno
in
xchg
add
addb
jge
stos
mov
loopne
jae
gs
sahf
out
movsl
insl
cmp
adc
xchg
cmp
and
and
sub
sub
cmp
call
inc
bound
icebp
in
lods
jmp
jl
ret
cmp
call
movsb
mov
adc
and
ja
stos
repnz
arpl
or
mov
add
idivl
jbe
add
adc
sbb
xchg
rcrl
dec
sub
shrl
push
sbb
dec
je
mov
leave
push
add
fs
nop
arpl
sbb
cmp
cld
add
adc
in
es
jg
inc
xchg
inc
scas
mov
outsb
xchg
cmp
xchg
sub
xor
push
sub
or
pop
and
into
out
incb
lods
out
out
sbb
rorl
dec
add
stos
jb
das
movsb
jo
mov
adc
mov
ja
subb
push
or
sbb
sub
push
sahf
dec
jne
dec
stos
pop
and
and
movsb
inc
xlat
aad
stos
inc
ret
lea
mov
add
insb
xchg
xor
adc
cmc
sub
cltd
std
cwtl
aad
xchg
inc
ds
and
push
jmp
in
pop
push
push
adc
sti
xchg
mov
add
sbb
jmp
jae
xchg
ret
ss
sti
jb
sub
dec
inc
sub
xor
rcl
adc
or
mov
or
xchg
lds
rolb
andb
bound
iret
notl
scas
clc
cmp
cmp
sub
aaa
push
imul
cs
mov
mov
mov
popf
and
mov
test
mov
and
fwait
test
lods
or
int
xor
mov
int
fnsave
jae
repz
lret
cmp
bound
jbe
dec
enter
test
scas
mov
push
aas
lea
js
jp
fdivs
je
adc
and
dec
notl
pop
mov
nop
mov
xor
sbbl
mov
xchg
aaa
sub
je
iret
xor
lret
push
mov
sahf
sahf
inc
je
aaa
ss
mov
xor
push
mov
dec
adc
inc
pop
out
mov
pop
xor
jp
sbb
adc
xchg
add
ds
mov
lret
xlat
sub
sbb
lods
adc
pushf
push
mov
cmp
stos
inc
xchg
clc
in
lds
add
push
sub
nop
mov
fs
cmpsl
imull
mov
das
add
movzwl
push
fcoms
inc
sbb
out
rcrb
das
jl
cmpsb
sahf
arpl
lea
test
lcall
stos
cmp
out
int3
jge
cmpsb
add
sub
xchg
cltd
je
aas
mov
mov
imul
test
mov
cmp
jmp
dec
fisubrl
jno
xchg
xchg
clc
adc
sub
or
stos
cmp
insl
adc
nop
dec
jge
adc
sub
xor
pop
jp
shlb
fistl
dec
or
outsl
push
jne
or
mov
mov
fidivl
gs
cmp
jl
sub
push
push
dec
mov
sarb
sbb
jp
test
fmull
add
jg
icebp
outsl
rcll
mov
sub
pusha
lea
fwait
jnp
in
sti
adc
adc
push
pcmpgtd
popf
pop
mov
push
mov
outsl
lods
incb
scas
jbe
push
xor
arpl
fistl
push
fwait
orb
insb
mov
test
in
repnz
aad
and
out
or
and
orl
bound
jecxz
rorl
loopne
sbb
mov
dec
test
std
adc
test
push
jbe
cmp
sub
pop
mull
test
andl
sub
push
pushf
fnstcw
sahf
xchg
push
aaa
repnz
out
daa
cmc
ds
adc
pop
and
adc
in
ror
push
stos
cmpsl
add
jge
icebp
cmp
add
sub
pop
xchg
in
inc
cmp
lds
das
push
int3
mov
daa
pop
push
je
clc
sub
or
sub
mov
cmp
dec
inc
rcrl
or
push
cmpsb
mov
xchg
sbb
mov
cmp
test
push
sub
sub
or
int3
xchg
xchg
data16
pop
push
pop
dec
xchg
xchg
mov
out
sub
jl
pusha
jle
or
clc
imul
xor
mov
fsubrs
scas
inc
daa
inc
mov
int
scas
negl
add
adc
test
jb
je
test
or
pop
pop
jbe
mov
and
xor
movsl
lods
data16
lret
fcmovbe
call
xchg
addr16
fnsave
jo
dec
ss
fsts
push
dec
pop
movsl
push
fcomip
dec
xchg
jmp
jb
call
pushf
inc
and
aas
std
pop
sbb
pop
cmpsb
mov
dec
or
mov
push
or
xlat
outsb
push
cs
int
add
push
imulb
fsubrl
flds
cs
test
popa
sti
adc
fisubs
popf
or
adc
cmp
jecxz
sbbl
jbe
mov
pop
push
inc
push
mov
mov
dec
test
sub
lahf
test
cli
out
ret
into
cmp
clc
jge
icebp
push
mov
jg
push
mov
xchg
jle
ret
dec
mov
cmp
ficompl
icebp
mov
mov
lret
adc
fisubrs
stos
jmp
xchg
fdivl
mov
inc
sub
aam
out
mull
mulb
movsb
arpl
or
movb
push
mov
xchg
cmp
negl
aaa
out
mov
mov
add
jecxz
or
jae
mov
sbb
sahf
or
dec
stos
xchg
mov
out
clc
push
cltd
pop
jnp
or
sbb
cmp
mov
loopne,pt
inc
pusha
hlt
cmpl
add
inc
test
and
aam
lahf
or
adc
and
sahf
scas
popf
inc
lock
inc
loop
les
push
add
mov
mov
sub
rorb
inc
test
cmp
fldcw
loop
outsb
test
call
int
popl
pop
xor
cmp
fnsave
xlat
cmp
nop
cmp
pop
aad
into
in
inc
cltd
bound
pop
cmp
addr16
pushf
pop
jle
repnz
cmc
fcoml
lods
and
cmpsb
es
imul
inc
inc
ret
add
and
bound
jecxz
sub
adc
mov
rcrl
aam
xor
imul
jo
cli
jl
int
cmp
ljmp
xlat
call
mov
sub
aam
das
jle
popa
sbbl
and
push
outsl
divl
jns
jmp
cmpsl
test
jnp
mov
call
insb
pusha
adc
ljmp
jo
push
jmp
fiaddl
mov
and
and
push
jmp
mov
insb
test
sbb
les
fstp
xchg
dec
int
mov
aas
fiaddl
xchg
sub
test
inc
mull
push
pop
repnz
or
mov
dec
cwtl
out
mov
add
xchg
fcoms
stos
popf
pusha
push
shrb
mov
js
sub
mov
in
lret
fsubs
mov
and
jno
in
je
mov
adc
add
dec
cltd
jg
loopne
mov
xorb
lock
fstpt
cmp
dec
ficompl
lods
mov
xchg
cmp
mov
outsb
int
cmp
mov
cli
out
test
dec
jno
icebp
test
pop
xor
bound
jb
xchg
clc
and
adcl
test
pop
loopne
sarb
mov
insb
ret
or
pop
push
imul
pop
xchg
out
xchg
daa
rcrb
inc
mov
xchg
sub
xchg
insl
leave
push
enter
hlt
xchg
adc
adc
pop
je
jbe
repnz
aaa
int
scas
jns
push
jl
mov
and
sbb
xor
test
es
out
sbbl
sti
and
xor
mov
mov
jne
std
je
sub
andb
popa
xor
mov
push
mov
pop
ja
add
lret
lods
inc
push
int
cmp
int3
ficoms
sub
mov
cltd
pop
rep
outsl
in
test
loop
imul
pop
out
sbb
hlt
push
add
jge
movsb
test
mov
fdivs
or
es
pop
dec
incl
dec
jns
xchg
add
xor
push
icebp
push
incl
pop
icebp
xchg
add
sarb
imul
aaa
pushf
xchg
xchg
pusha
or
rcrb
clc
or
adc
sbb
xchg
aam
lcall
xchg
push
adc
xor
xlat
jl
into
pop
cld
mov
jno
add
mov
add
push
jbe
mov
push
stos
icebp
push
rclb
hlt
or
mov
push
sti
push
ss
or
imul
add
sbb
mov
xchg
fsubrl
data16
or
pop
js
fisubrs
mov
mov
add
jmp
fwait
test
push
mov
loopne
xor
inc
push
inc
jl
into
enter
fistpl
fdivl
int
lcall
fildl
fstp
jns
and
xor
mov
mov
sub
mov
cld
outsl
ficomps
xchg
test
push
and
cmp
push
jp
vmovntpd
mov
dec
mov
mov
icebp
fisubl
lods
cmpl
daa
jne
lock
mov
les
shlb
std
sbb
pop
jnp
cli
or
sub
scas
out
int3
lret
es
insl
cmp
inc
cmpsl
ret
xchg
dec
and
mov
lods
xor
jbe
fisubrs
fldenv
and
js
leave
clc
adc
push
hlt
pop
push
pop
jb
enter
aaa
pop
fstps
xor
fdivl
pop
int
xor
pushf
jg
and
jmp
cmp
popf
cmpb
sub
push
add
push
pop
adc
xchg
push
mov
xchg
scas
push
and
lcall
loope
pop
or
push
lods
int
mov
pusha
adc
faddl
adc
loope
mov
std
out
test
sub
cmp
add
pushl
push
mov
cld
adc
pop
add
loopne
jmp
xor
xor
dec
mov
es
dec
cmp
jo
outsb
mov
test
sbb
and
lods
cmp
fldcw
or
cmc
cli
mov
mov
mov
sahf
pusha
or
or
rorb
jmp
mov
push
xlat
pop
enter
leave
jmp
pop
inc
scas
dec
jb
mov
ret
push
mov
push
out
dec
push
mov
aaa
loop
shrb
add
pop
inc
sbb
push
fwait
pop
out
subb
lret
adc
out
movsl
aas
outsl
adc
movsl
shrb
or
mov
ljmp
and
or
popf
stc
aaa
and
jae
test
and
xchg
pop
pop
xlat
sarl
or
jecxz
sub
dec
xor
inc
cmpsl
cltd
std
or
ljmp
notb
jb
add
mov
cmpsl
lds
mov
in
ds
pop
int3
cltd
std
arpl
or
ljmp
sti
ja
sbb
test
xor
xchg
jecxz
gs
push
imul
pop
adc
jle
push
jb
pushf
loopne
jmp
int
or
xchg
mov
pop
or
pusha
fidivs
stos
ret
roll
das
mov
fistpll
je
inc
lods
ljmp
pushf
pop
std
sbb
out
jle
es
movsl
cmp
repnz
sahf
cltd
std
xchg
arpl
aaa
repz
ja
andl
lea
inc
into
pusha
push
inc
imul
xlat
cmp
ja
mov
jge
shlb
mov
sarb
popa
movsb
mov
cmp
pop
fcomi
mov
push
stos
es
jne
pop
xor
rcrl
fsubs
or
xor
dec
adcl
inc
xchg
push
lea
or
icebp
or
test
dec
adc
cld
or
xchg
push
cmp
decb
mov
cmpsb
shrl
in
mov
jns
mov
jne
add
pop
call
in
mov
mov
jno
push
xchg
jl
enter
dec
fisubs
mov
sbb
jl
jle
adc
pusha
mov
xchg
in
pop
lahf
mov
and
aam
lods
pop
jg
push
jno
mov
adc
out
add
shrb
lret
sbb
out
sarl
jno
mov
dec
sbb
icebp
cltd
sub
and
mov
push
mov
ficompl
pop
push
mulb
jbe
je
pop
sub
mov
cmc
loopne
adc
jecxz
pop
je
mov
fwait
dec
jae
jecxz
rol
pmullw
repnz
inc
std
add
test
cwtl
jns
lcall
dec
dec
cltd
mov
aam
mov
rorl
ljmp
lret
shll
jmp
ja
lods
or
sarb
xchg
push
sti
scas
negl
adc
das
lret
jno
adc
sbb
gs
xor
rcl
shlb
pop
movsb
jmp
cmp
adc
mov
andb
idiv
inc
roll
sahf
xor
cmpl
add
outsb
adc
cmp
inc
aas
cmp
stos
ss
and
dec
dec
mov
stos
inc
bnd
filds
pop
mov
cmpsl
mov
in
dec
dec
test
fwait
repnz
aas
aad
je
mulb
int
xchg
sti
mov
lahf
jge
mov
repz
ss
or
cmp
leave
add
cmp
out
ljmp
mov
jns
daa
push
fstpl
jmp
fstpt
dec
xor
leave
sti
lock
pop
ss
ja
mov
adc
push
sbb
or
cmp
mov
sbbl
push
stos
fdiv
into
popa
and
repz
inc
fsubrs
xor
fs
mov
mov
sub
push
or
jecxz
ds
push
es
fwait
repz
pop
stos
in
rclb
shlb
leave
fidivrl
adc
mov
add
mov
push
nop
cmc
or
sahf
jp
and
repz
mov
out
jno
xchg
mov
ds
rolb
dec
aaa
sbb
data16
xchg
popa
jl
mov
ror
aas
xor
add
xlat
sub
jmp
inc
fnstsw
fwait
fs
pop
ds
shl
push
fcomp
jp
push
jl
scas
add
dec
xchg
cld
clc
cld
sbb
jl
ss
shll
mov
ljmp
addr16
add
daa
lds
adc
sbb
mov
mov
fisubl
lods
fwait
ret
xchg
data16
cld
popa
sbb
adc
adcl
jecxz
add
ds
lods
ds
push
daa
or
add
test
test
aad
mov
pop
in
inc
inc
lods
ja
pop
fwait
popa
int
or
jo
jns
out
lock
test
inc
in
movsb
stos
adc
jb
pop
inc
adc
add
divb
aam
subb
inc
fidivl
sbb
incb
xor
jnp
cmc
in
andl
les
xchg
mov
add
add
sbb
and
mov
xchg
nop
loop
xorb
mov
mov
adc
mov
ljmp
dec
testl
fwait
popa
jg
mov
or
cmp
jno
loop
mov
pop
daa
mov
xor
push
add
js
xchg
les
imul
sbb
sbb
mov
sbb
xor
in
sahf
xor
int3
or
inc
int3
shll
inc
fwait
aam
inc
fucomi
insb
xorb
mov
xor
pop
xchg
daa
ret
hlt
ficompl
fsubrl
ss
push
adc
push
ret
dec
jecxz
loop
sub
daa
sub
int
stc
xchg
fcmovnbe
adc
push
jno,pt
out
jne
jp
outsl
stos
xchg
outsb
push
dec
jmp
xlat
out
mov
popf
jo
mov
repz
or
jno
arpl
inc
outsb
jl
push
inc
clc
pop
jno
jbe
mov
xchg
pushl
cwtl
sbb
clc
xchg
xchg
jns
sahf
jbe
or
sti
mov
push
leave
stos
out
sub
lds
insb
rolb
dec
or
mov
add
adc
add
sbb
add
mov
and
fs
repz
sbb
hlt
pop
mov
mov
push
out
clc
pop
lods
jecxz
mov
add
sbb
push
and
cld
inc
fadds
xchg
or
lock
cmp
loope
cmp
aaa
into
popa
dec
push
adc
xchg
lods
outsl
lahf
in
mov
xchg
and
add
repz
cmp
out
lock
clc
rcr
ficomps
dec
in
loopne
cmp
fwait
out
cmp
pop
fnstenv
or
cmp
mov
clc
cmp
or
push
push
aaa
jle
je
sbb
jae
out
push
loopne
repz
jp
pop
dec
xor
bound
insb
je
jmp
adc
shl
je
sbb
push
movsl
cmp
push
popa
insb
loope
lds
scas
cmc
or
dec
loop
hlt
clc
nop
sbb
xchg
data16
mov
out
sbb
stc
push
pop
fstl
sub
xor
repnz
cld
xchg
adc
in
sub
nop
insb
sbb
pusha
fbstp
sub
mov
mov
in
jb
jp
es
stos
inc
xchg
test
leavew
xchg
pop
pop
insl
push
pusha
jb
scas
sbb
adc
cwtl
push
out
sbb
pop
loop
sub
lcall
jle
jge
repnz
push
scas
nop
loop
cs
test
dec
inc
xlat
jns
fisubl
xchg
sahf
pushf
add
mov
push
shrb
inc
push
sub
jb
adc
aas
ret
test
ja
rcrb
adc
daa
jno
decb
sbbb
adc
inc
cmpsb
stos
xor
dec
dec
aad
idivb
loope
aam
xchg
rcl
outsl
mov
shlb
stc
cwtl
lds
inc
sub
fldl
repnz
xor
inc
lret
out
jno
out
faddp
pop
adc
add
nop
xlat
outsb
sub
adc
repnz
aaa
loopne,pn
jbe
mov
mov
femms
std
lcall
popa
aam
into
push
or
inc
inc
pushf
xor
cld
ds
aam
add
js
insb
pop
or
leave
cld
mov
xchg
sbb
and
sahf
aas
cmc
pop
repnz
adc
daa
xor
lret
and
jle
out
cwtl
inc
mov
jbe
movsb
movsb
aas
add
cmpsl
ds
call
adc
jo
sub
cmp
dec
mov
lock
jne
mov
out
sub
aad
fcmove
and
xchg
xchg
fadd
repz
subb
pop
sahf
cld
or
jns
push
pushf
xor
pop
std
push
add
sti
incb
add
mov
stc
nop
cmp
mov
mov
mov
pop
sbb
test
leave
jecxz
push
cwtl
cmpsb
xchg
pop
es
and
je
in
add
push
mov
scas
stc
cmp
and
fisubrl
jecxz
das
sbb
mov
dec
mov
jnp
cld
mov
dec
ljmp
pushf
aas
cmpsl
ret
jp
pop
addr16
jg
icebp
mov
ret
daa
nop
cli
cs
push
pusha
out
jl
mov
fucomi
sub
rcll
sub
xor
adc
jl
push
xor
push
inc
push
cltd
fs
scas
test
xchg
inc
pop
adc
fstpl
lcall
and
ret
or
or
scas
fcompl
test
lret
adc
mov
jbe
test
test
jnp
inc
push
pop
lcall
movsl
cmp
push
xor
outsb
rcrl
mov
je
mov
mov
out
bound
pushf
xchg
sub
adc
xchg
movsb
mov
xchg
pop
xchg
imul
pop
insb
call
shll
cmp
inc
clc
test
jle
iret
pop
adc
mov
xchg
pop
inc
mov
xor
jno
lock
cmp
inc
mov
shr
rclb
mov
js
adc
xchg
imul
test
add
xchg
mov
dec
test
outsb
es
jns
cmc
sbb
cmp
in
push
xor
mov
adc
pop
addr16
pop
adc
popa
cmpsl
sbb
mov
pusha
push
je
push
xchg
mov
lahf
addr16
outsb
lahf
jae
mov
jmp
shl
jns
mov
mov
aaa
cmpsl
push
xor
push
movsb
lret
xchg
popf
dec
out
push
inc
dec
xor
bound
dec
test
in
out
lods
mov
fstpl
pushf
in
cwtl
test
clc
mov
mov
mov
push
inc
dec
fwait
adc
icebp
nop
mov
mov
and
mov
gs
hlt
mov
in
mov
in
or
das
insl
mov
mov
sbb
cli
mov
push
and
in
add
sbb
imul
xorl
dec
pop
dec
and
adc
hlt
mov
add
jecxz
pop
fsubrl
scas
dec
insl
repnz
iret
mov
leave
repz
ljmp
jbe
iret
gs
dec
xchg
cs
sub
rorb
fistps
pinsrw
das
jp
pop
fidivs
adc
ljmp
idivl
das
mov
cmp
test
outsl
fsubl
cmp
mov
xchg
lret
loopne
call
test
cmpsl
imul
cmp
cmc
sahf
push
data16
addr16
xor
mov
ljmp
ljmp
std
inc
pop
loop
sbb
mov
sbb
aaa
jb
push
xchg
cmp
cli
sub
xchg
or
sarl
mov
push
pop
mov
xchg
lock
aam
cmp
pop
jns
arpl
sub
sahf
push
pop
xor
jle
test
shlb
in
test
lock
cmp
sbb
or
sbbl
loope
xchg
push
in
call
cmp
mov
xlat
outsb
ljmp
lea
xlat
enter
cmp
jecxz
mov
mov
and
int
adc
ljmp
in
inc
fnsave
jecxz
adc
fs
mov
test
test
jne
stc
xor
mov
jne
add
or
fsubrs
sub
shrl
popa
clc
bound
mov
push
sub
or
jbe
int
pop
pusha
sub
nop
test
stos
cmp
lret
mov
adc
pop
subl
add
mov
lods
cmp
nop
stos
sbb
pop
test
push
inc
lcall
testb
xor
push
repz
jae
sbb
mov
hlt
jl
imul
outsl
fidivrl
xor
jmp
imul
rol
adc
scas
jb
out
cmp
mov
cli
outsb
inc
mov
divb
dec
aad
sahf
push
adc
insb
mov
inc
xor
pop
sbb
je
cmp
lods
subl
cld
mov
ljmp
sub
out
and
add
repz
out
cmp
adc
pop
aaa
into
push
sbb
mov
ljmp
icebp
addr16
mov
jg
mov
xchg
pop
dec
rep
adc
sbb
lea
incl
jne
enter
push
jo
lds
cwtl
xchg
dec
mov
jp
inc
inc
movsb
adc
mov
outsb
cld
mov
or
mov
dec
lahf
mov
repnz
test
gs
inc
daa
inc
in
ljmp
testl
stc
adc
outsl
push
inc
sbb
ljmp
or
sub
repnz
dec
push
mov
inc
pop
lds
dec
inc
pop
pushf
inc
ret
dec
in
mov
jnp
es
mov
shll
mov
cmp
xchg
add
js
movsl
jmp
test
sti
mov
add
and
notl
inc
pop
repz
pop
std
cs
das
jp
nop
cltd
mov
dec
nop
dec
mov
aad
or
fsub
std
jo
aas
add
insl
sub
pusha
add
ljmp
in
add
cmovns
daa
cmp
aad
add
xchg
or
notl
imul
shrl
pop
sub
ficompl
loopne
negl
and
push
cld
clc
or
pusha
lea
rcr
out
imul
pusha
test
flds
inc
and
fnclex
outsb
test
scas
push
cmc
add
in
add
aam
and
cli
adc
es
test
mov
lret
mov
jnp
movsl
and
add
pop
jbe
inc
mov
inc
mov
mov
jg
das
mov
cmpsl
addr16
jmp
cs
pop
nop
cmpsl
rcr
adc
push
push
or
frstor
imul
lahf
and
sbb
mov
mov
repz
ret
xchg
sub
outsl
aad
out
push
pop
sub
sbb
jo
adc
and
movsl
test
pop
frstor
loope
sarb
mov
imul
push
leave
movsb
jg
cmp
stos
and
mov
jg
icebp
inc
sbb
mov
mov
inc
jb
mov
movl
ret
rorl
and
or
lahf
lods
cmp
fsubrp
roll
xchg
scas
sbb
int3
stos
sti
jmp
fmul
pop
nop
jle
mov
sub
mov
jecxz
add
test
push
push
jmp
xchg
mov
add
cmp
cli
movsb
cmp
push
mov
cmp
lcall
xchg
hlt
enter
adc
jae
and
leave
or
push
int
pusha
jae
mov
dec
xchg
outsl
daa
outsb
push
sub
js
pop
cmc
xchg
jge
lock
mov
repz
add
cmp
mov
xor
repnz
sub
mov
mov
negl
pop
out
je
and
movsl
in
test
xchg
fucomp
mov
jecxz
dec
mov
into
jecxz
or
aaa
aad
push
add
inc
inc
fidivrs
pusha
cmpsl
dec
cmp
xor
push
rcll
or
push
mov
mov
daa
xchg
out
popa
add
nop
aam
sti
imul
fadd
jl
pop
sbb
mov
je
adc
or
or
mov
adc
or
jmp
push
andb
jb
dec
add
sti
nop
das
pop
push
rolb
addb
adc
fsubrp
sbb
fadd
sbb
das
xchg
xchg
or
ficomps
cmp
or
leave
lds
pop
gs
mov
fnsave
push
dec
dec
add
es
sbb
and
arpl
mov
aaa
repz
adc
cmp
lcall
int3
jno
into
pop
jl
jg
mov
out
movsb
xchg
and
xchg
inc
aam
xor
and
dec
cli
adc
cli
pushf
jecxz
push
cmc
addb
subb
mov
jle
ja
ds
sub
jns
push
pop
int
dec
fdivl
or
inc
and
xor
adc
shrb
daa
xlat
jbe
and
add
js
cs
cwtl
test
leave
fcoms
pusha
fisttpl
movsl
add
shll
outsb
mov
insl
cmc
mov
dec
push
mov
lret
pop
data16
xor
mov
and
js
push
mov
sub
repz
scas
stc
in
movsb
nop
pop
shll
sub
sbb
ds
shl
ja
xchg
xor
subl
push
jno
or
popf
add
ja
mov
sbb
or
lahf
sub
data16
adc
and
test
and
xchg
mov
xor
lods
mov
fidivs
fldenv
imul
add
cmpsb
add
push
cmp
jge
mov
scas
jae
orb
xor
mov
jnp
lret
sbb
sti
inc
sti
es
inc
stc
sbb
mov
and
sbb
js
or
inc
das
push
shrb
ja
daa
sbb
cmp
mov
sub
lret
xchg
dec
and
lods
mov
pop
sbb
adc
mov
movd
test
jnp
shlb
mov
dec
shll
inc
inc
insb
push
mov
sbb
push
loope
addb
aad
out
ds
rcrb
ds
iret
pop
outsl
in
sbb
cmp
les
leave
leave
call
xchg
inc
push
loopne
fsubr
mov
mov
and
add
pop
mov
inc
fbld
mov
call
mov
mov
ficomps
pop
or
out
pop
adc
jnp
add
sub
dec
pop
xor
sbb
mov
fcoms
mov
jl
xor
pop
push
or
ds
sub
adc
lret
in
cmp
popa
mov
jl
add
pop
pop
dec
jge
mov
xor
aaa
add
pushf
pop
mov
sbb
sti
and
or
insl
insb
and
cmpsb
add
in
lcall
push
push
add
fdivrs
inc
pop
negb
jmp
jp
and
jg
pushf
sahf
xchg
in
pusha
add
and
mov
loope
int
xchg
lods
xchg
push
out
test
loop
stos
push
sub
xchg
pop
aas
les
das
mov
xchg
popa
stos
mov
pop
outsb
cwtl
call
loopne
retw
cmp
test
jle
cwtl
mov
cmp
xchg
fmuls
adc
sub
xchg
cmc
inc
and
testl
pusha
inc
mov
pop
xor
outsb
sbb
dec
sub
jb
outsl
mov
scas
in
sbb
cmp
sbbl
scas
jno
jle
sahf
lahf
mov
icebp
adc
idivl
and
sbb
je
push
adc
inc
loop
push
es
imull
push
cli
mov
jno
mov
cmc
pushw
rclb
in
pusha
ja
push
xor
ljmp
xor
mov
cmp
mov
mov
mov
iret
out
pop
inc
dec
mov
mov
add
aad
sti
push
sbb
pop
and
push
andb
mov
add
insb
int
loope
jecxz
repz
call
dec
dec
clc
insb
cmpsb
jo
sahf
cmp
or
out
out
inc
getsec
in
jno
xchg
sub
push
xor
lret
scas
mov
add
sub
xor
xlat
cmp
ss
insb
cvttps2pi
dec
cmpsb
fsubrl
cmp
leave
fucomip
push
dec
sti
shlb
xchg
sbb
add
and
gs
adc
inc
or
data16
cmp
cwtl
scas
adc
push
and
push
sub
mov
add
xor
loopne
xchg
std
dec
std
bound
push
ret
std
loopne
xchg
or
popf
or
loop
cmc
xor
jl
mov
fwait
add
xchg
dec
and
movsl
mov
pop
sbb
and
or
insb
cld
xchg
add
mov
jle
pop
cmp
loopne
adc
inc
popf
out
jae
sub
lods
inc
fists
jmp
lret
inc
cs
cmc
mov
pop
and
lock
arpl
test
test
sbbl
mov
push
ljmp
sub
shll
or
mov
sub
mov
repz
rcll
xchg
xor
insb
sbb
shld
nop
and
test
lret
add
xor
stc
or
out
cmpsb
incb
mov
adc
jle
test
mov
test
fsubrl
push
ret
lret
jnp
push
cmpb
pop
lods
add
fmuls
movsl
ds
mov
std
jo
mov
xor
dec
popa
xor
jg
push
in
mov
data16
push
in
in
out
mov
mov
jmp
xchg
add
add
imul
cwtl
fwait
inc
xor
xor
mov
mov
cmp
mov
push
lds
xor
aad
cld
insb
rcrb
jg
pushf
out
lret
mov
pop
test
clc
mov
gs
xchg
and
mov
enter
daa
xrelease
cs
out
cmp
pop
jno
fwait
or
mov
lcall
and
push
shrb
mov
stos
mov
cmp
std
add
mov
jmp
add
shll
mov
add
outsl
enter
or
mov
xor
push
push
push
dec
add
cs
lahf
push
adc
cmpb
movsb
push
popf
adc
and
mov
imul
rorl
and
test
xchg
cmp
cmc
push
dec
jbe
jmp
imul
sub
addl
lds
jge
mov
les
insb
xchg
inc
add
mov
xchg
call
xor
clc
lahf
test
aas
int3
int3
lods
xor
dec
enter
hlt
mov
mov
push
jmp
and
mov
aad
add
dec
mov
jmp
mov
push
addr16
imul
xor
inc
push
lock
pusha
lods
mov
cmpsl
dec
cmp
xor
mov
das
inc
xorb
mov
cmpsb
repnz
les
fbstp
xchg
fdivrl
iret
or
paddq
lods
leave
and
fwait
scas
inc
cwtl
test
cmp
cld
jle
cmc
and
js
adc
xchg
mov
xor
mov
adc
xor
orb
idivl
add
pop
pop
xor
mov
loope
mov
push
stos
out
mov
mov
js
and
push
stos
jg
pop
in
stos
cmpl
inc
pop
mov
mov
dec
inc
ret
shll
add
std
inc
and
sahf
pop
xor
xchg
sbb
inc
daa
adc
loop
cmc
aas
pop
outsb
inc
cmp
xor
cmpsl
out
jne
popa
jmp
ljmp
mov
les
stc
xchg
adc
imul
xor
rorl
mov
xor
adc
xor
movsl
arpl
test
iret
cvtps2pi
rclb
pop
push
outsl
lea
xchg
mov
and
lret
mov
pop
call
roll
inc
inc
pop
stos
and
ret
and
aaa
decl
mov
mov
pop
repz
fistpll
add
add
ja
and
cmpsb
call
sbb
pop
iret
fs
lods
stos
inc
loope
pop
xchg
sti
add
pop
cwtl
cld
and
mov
fnstenv
orl
mov
push
andb
ja
cmp
cmp
cmp
or
mov
mov
push
cmp
add
and
mov
mov
sub
adc
das
sahf
lds
lret
xchg
dec
xchg
movsb
pop
cmc
out
ret
mov
jp
and
or
add
push
mov
fldenv
cmp
push
shl
in
mov
cmp
xor
aaa
mov
push
ret
movsb
ss
or
les
clc
sahf
scas
lock
cmp
cli
xchg
outsb
mov
insb
aaa
xor
add
pop
loopne
loope
push
idiv
repnz
ret
push
xor
fisubrl
jo
cli
lods
push
lcall
pop
adc
pop
sbb
cmpsb
cmc
test
mov
push
mov
mov
jle
cmp
repnz
lret
data16
gs
rorl
xchg
aam
xor
fucomp
mov
adc
in
mov
ja
xor
addl
addr16
or
insl
push
lods
pop
add
mov
mov
daa
xchg
sbb
call
test
in
inc
int
push
inc
test
pop
sarb
mov
sub
inc
jg
leave
cmp
lret
fdivrs
xlat
mov
jle
iret
stc
xchg
jbe
mov
sub
les
and
xchg
xorl
out
cmp
repz
and
pop
jge
mov
and
jnp
xlat
fmuls
push
sub
mov
xchg
stos
fisubs
maxps
mov
mov
aad
xchg
nop
push
jg
fdivrp
cmpsb
xchg
sbb
hlt
lahf
faddl
mov
mov
push
mov
jg
fstl
int3
repz
mov
xlat
enter
imul
dec
lds
outsl
pop
test
mov
sti
push
jne
and
sti
fwait
dec
lret
sbb
imul
in
decb
mov
adc
jge
jbe
movsl
cmp
adcb
cmp
inc
xchg
mov
jb
sti
mov
jns
and
mov
aam
mov
cmpsb
subl
cmc
ljmp
jno
cmp
push
lahf
add
out
in
mov
loope
mov
jle
mov
add
fs
cmpsb
lock
sub
icebp
and
jg
adc
inc
daa
push
mov
mov
fildl
add
push
sbbl
add
repz
add
sub
and
adc
lahf
lret
je
xor
test
xor
push
xor
mulps
jns
mov
add
and
movsb
dec
sbb
mov
arpl
jmp
outsl
inc
and
sub
inc
push
pop
cmp
rcrl
adc
insl
aam
xchg
lcall
pop
enter
sub
pop
ds
push
dec
insb
leave
pusha
sahf
cld
jb
cwtl
xchg
out
dec
mov
or
cmc
mov
test
cli
cmp
sbb
xchg
and
mov
push
inc
xlat
jne
loopne
or
dec
xlat
mov
ss
push
ss
pop
and
push
cmp
mov
les
lahf
pop
fmuls
cmpsl
jns
in
stc
mov
shrl
mov
and
fwait
cmpsb
mov
jge
inc
inc
bound
ret
sub
mov
sbb
dec
stc
test
inc
insl
repnz
fimuls
test
lods
cli
daa
aam
or
in
or
incl
out
cwtl
pop
roll
loop
xor
mov
out
mov
sbb
mov
outsl
in
stc
loop
mov
cmp
in
lret
sbb
add
jg
add
cli
mov
gs
push
push
out
mov
jnp
inc
and
insb
fwait
cltd
push
mov
pop
int
sbb
bound
push
push
imul
xchg
or
mov
sub
sub
adc
int
or
mov
gs
insl
and
jbe
ds
arpl
pop
icebp
cmc
adc
push
js
ret
ss
inc
push
and
mov
xlat
orb
repnz
pop
jmp
test
cmp
rorl
inc
ja
cmpsb
mov
ljmp
xor
xor
loopne
mov
ljmp
in
dec
nop
inc
in
jmp
jle
mov
or
lret
lods
loope
pop
xchg
std
jo
mov
rorl
mov
push
ret
mov
ljmp
test
push
sub
int3
dec
outsb
cs
xchg
and
sbb
movsb
repz
cli
test
rol
adc
cmp
mov
push
push
add
sub
pop
ljmp
or
push
out
filds
iret
fsts
frstor
cwtl
adc
leave
inc
lret
mov
test
stc
mov
adcl
clc
or
jge
pusha
cli
xchg
out
mov
mov
into
insb
cmp
push
adc
mov
int3
jp
sbb
cmp
fdivrs
testb
dec
push
es
jg
test
mov
test
in
xor
and
inc
xlat
push
cmp
xchg
or
lahf
test
bound
push
out
fldl2t
push
xlat
xor
xchg
xor
mov
or
mov
and
fcompl
shrl
pop
jg
aas
fisttpl
je
fstpl
xor
cmpsl
adc
pop
out
sahf
movsl
andl
repz
sub
aad
push
out
pop
dec
pop
je
push
mov
sbb
out
int
movsb
push
cwtl
push
jp
xor
xor
jnp
sbb
rcrl
sbb
add
pop
loopne
jmp
pop
xchg
push
and
xchg
mov
or
dec
pop
movsb
push
pusha
xchg
dec
push
std
jns
das
sub
divl
shl
iret
mov
leave
cmp
jp
push
aam
push
push
jae
push
sub
in
js
mov
push
xchg
test
movsl
mov
push
xchg
and
inc
sbb
filds
or
inc
xchg
sub
cs
cmp
push
inc
jmp
dec
push
pop
nop
inc
sbb
sub
pushf
ds
sbb
in
icebp
popf
xchg
iret
mov
sbb
mov
int3
das
fsubs
xlat
cmpsb
add
add
jnp
cmpsb
xchg
xor
popa
fdivl
xor
or
mov
insl
push
xchg
insb
push
jecxz
imul
mov
xchg
ret
rcrl
adc
fnstenv
inc
push
adc
xchg
push
mov
test
add
or
sbb
mov
sbb
je
test
aas
add
mov
mov
daa
mov
dec
xchg
sbbl
clc
pushf
scas
int
mov
xchg
lret
cmpsb
jg
add
xlat
pop
jno
shlb
sbb
sub
out
pop
out
jns
leave
loope
pop
xchg
popa
andl
mov
mov
adc
cmp
push
add
jne
aad
std
pop
bound
aas
add
call
lods
movsb
hlt
mov
sub
mov
sub
adc
dec
in
pop
mov
mov
pop
xor
mov
adc
cli
push
fistps
dec
sbb
rcrl
fsubs
data16
addl
pop
stos
cmpsl
dec
dec
ret
jne
push
cltd
aam
mov
inc
xchg
or
out
shll
in
andl
inc
jno
test
icebp
pop
stos
fdivrl
jmp
xlat
loop
inc
jno
mov
les
divb
and
xchg
pop
out
ljmp
outsl
mov
push
insl
dec
mov
scas
xlat
lods
pop
test
and
repz
pushf
ret
mov
or
leave
aam
add
add
add
out
push
js
dec
and
mov
cmpsl
stc
ja
sub
dec
pop
clc
or
stos
cmp
lcall
inc
sbb
aaa
xor
pop
xor
mov
mov
pusha
incl
cwtl
xor
pop
loop
cmp
lcall
loopne
aaa
jg
je
cmpsb
call
sub
mov
scas
imul
ss
mov
lahf
cmpsl
ds
lods
dec
es
gs
and
mov
mov
pop
cmpsl
jae
sub
sbb
jecxz
cmp
in
and
push
nop
sbb
xlat
daa
jle
lret
in
xchg
arpl
ret
pop
jge
repnz
mov
hlt
mov
push
mov
xor
cmp
push
fwait
adc
lock
popa
fs
mov
mov
arpl
xlat
aad
jae
cmpsb
in
xchg
repz
add
jecxz
ret
cmp
dec
shl
stos
sarb
fisttpl
in
cmpsl
push
test
mov
xlat
daa
cmpsb
mov
fdivs
sub
cli
pushf
add
andb
xlat
fbstp
hlt
pop
mov
test
ret
mov
cltd
mov
sub
mov
shlb
push
movsb
icebp
stc
jo
adc
inc
mov
addl
lock
sbb
dec
xor
test
mov
inc
inc
mov
pushf
xor
sbb
and
movsb
sti
push
mov
fstl
mov
push
xchg
mov
out
cmp
aam
push
pop
jbe
push
push
fsubl
jle
into
arpl
insl
sbb
pusha
xor
inc
inc
jge
inc
lock
fldl
addr16
pop
xor
dec
lahf
push
mov
pop
mov
shrb
imul
mov
inc
insl
ljmp
out
xor
sub
shrl
inc
inc
inc
repnz
mov
stc
pop
jne
push
lahf
test
inc
lock
addr16
sbb
xchg
mov
stc
jo
es
xor
pusha
fucomip
cmp
mov
lods
xchg
jbe
pop
ds
adc
ret
dec
pop
mov
push
mov
push
out
hlt
push
gs
add
sub
mov
out
dec
out
test
in
xor
fs
mov
push
sar
mov
enter
jge
in
mov
lock
lods
mov
popa
lock
mov
jnp
pop
movsb
in
xor
xchg
xor
jecxz
lret
push
pop
arpl
addr16
cwtl
fisubl
push
xchg
push
test
mov
shl
out
lods
rclb
cmp
mov
add
mov
fadds
mov
and
stos
inc
je
lahf
adc
aam
pop
push
jmp
ds
lods
fwait
mov
inc
ret
adc
and
pusha
and
cmpsl
rol
pop
div
mov
les
mov
mov
add
out
aam
aam
arpl
push
xor
cmp
enter
jle
lods
and
fbstp
test
out
in
xlat
adc
cmc
out
adc
cmp
jge
mov
data16
lea
rcrb
mov
jbe
addr16
adc
and
xor
cltd
xor
shll
jno
inc
sbb
test
jnp
and
push
data16
xor
jne
js
pop
jbe
test
xchg
pop
xchg
cmp
sub
add
mov
adc
ljmp
push
adc
pusha
mov
xor
pop
mov
leave
pop
imul
lret
ss
lcall
cmp
xchg
daa
outsl
clc
pop
cmp
psrad
pop
ret
negb
loop
sbb
pop
lock
mov
add
cli
aas
sub
outsb
in
dec
fisubs
out
insb
cli
push
test
mov
cmp
mov
shll
fistl
mov
or
xchg
pop
scas
and
sub
mov
dec
jecxz
jnp
popl
adc
mov
mov
insb
lcall
or
jns
mov
push
xchg
mov
lods
xchg
shlb
add
jecxz
ds
add
iret
es
or
push
lods
cmp
sbb
dec
leave
in
ss
mov
ljmp
ret
hlt
inc
frstpm(287
icebp
rcrl
inc
in
addb
push
mov
or
lcall
jb
push
cld
stos
push
dec
vpsubsb
xchg
int
mov
cmp
in
jp
add
mov
test
stc
decl
cmp
adcl
push
movsb
pop
add
xchg
dec
out
test
notb
les
push
xlat
repz
xlat
pop
cmpb
loop
out
xchg
fwait
cmpl
dec
popl
out
push
mov
adc
sub
enter
mov
lret
bound
sbb
adc
mov
push
dec
xchg
scas
dec
jecxz
and
ds
mov
scas
movsl
inc
cmp
cmc
nop
es
enter
inc
mov
fxch
lods
bound
adc
push
mov
test
adc
out
icebp
sbb
mov
xchg
inc
and
push
sbb
push
lods
xchg
add
or
mov
sbb
aas
xor
add
push
jo
mov
lods
fistpl
push
mov
fcompl
or
cmpsl
xor
mov
pushf
rcrb
adc
jnp
pushf
inc
ss
jb
xor
and
and
xchg
ljmp
mov
cmpsb
mov
shl
repz
mov
test
jne
out
scas
lcall
jns
mov
push
dec
mov
fwait
lods
push
insb
rol
jb
into
stos
jo
dec
push
jne
aaa
lods
mov
in
in
jnp
outsl
shr
jl
pop
loopne
xor
sub
addr16
scas
pop
pop
cmp
jae
dec
dec
mov
scas
call
mov
adc
leave
xchg
pop
jbe
fmull
inc
cmp
adc
jae
sub
or
sbb
sbb
rol
rol
pusha
sbb
fsubl
pop
cmp
inc
inc
xchg
adcl
or
push
sti
cld
pop
dec
sahf
stc
xchg
mov
add
addl
clc
or
cmpsb
fstps
cmp
outsl
inc
fcmove
add
mov
in
shlb
stc
ffree
in
shrb
jmp
loopne
mov
les
insl
push
outsb
xchg
les
and
jnp
jge
lea
or
es
xor
and
test
push
mov
addr16
sbb
ss
pop
lods
in
je
inc
jae
jbe
int
out
adc
data16
xor
mov
daa
test
dec
imul
lds
push
jl
xchg
sub
fsts
push
jb
push
std
jae
pop
movsl
fmulp
enter
push
jmp
lea
outsl
jmp
or
sbb
std
mov
repnz
mov
ds
mov
push
call
push
cld
ljmp
out
les
cmc
imul
stos
pop
int3
sub
pop
jne
adcb
sub
mov
cltd
or
cs
mov
rcll
xchg
imul
inc
aam
lock
out
test
inc
pop
mov
adc
clc
and
out
or
mov
inc
outsl
inc
jecxz
xor
mov
mov
test
inc
pop
fucomip
inc
test
aaa
sbb
jnp
pusha
clc
xor
mov
inc
out
mov
test
mov
adcb
out
int
cmpsl
sbb
bound
fwait
into
xchg
mov
cltd
les
movsb
aam
xor
into
notb
fbstp
jbe
js
cmp
jae
mov
jne
in
mov
test
pop
xor
imul
push
insl
fsubr
int
fs
mov
push
xor
jne
pop
and
xlat
sub
inc
pop
mov
pop
and
push
push
ds
lcall
stc
outsl
aas
push
js
push
sti
push
je
hlt
mov
and
mov
sbb
mov
les
inc
xlat
pop
out
ret
jnp
adc
or
bound
dec
sub
test
jbe
fldl
inc
loope
mov
rorb
xchg
les
mov
rclb
fstl
inc
cwtl
cmp
pop
cli
jae
mov
das
scas
xchg
outsb
jl
les
cmpxchg
ds
loope
mov
pop
dec
call
sub
pop
cmp
aad
in
aaa
ljmp
mov
sbb
jo
pop
jne
and
rorl
stos
cmp
into
pop
ret
xchg
sub
push
nop
insl
mov
mov
jmp
std
and
xchg
mov
jl
or
cmpsb
add
xlat
pop
insb
sub
and
dec
jmp
cmpsb
mov
mov
aaa
xor
int3
sub
sub
xor
jne
push
in
xor
pop
pop
pop
jge
cmp
dec
pop
iret
fstpt
cmp
loopne
jno
inc
dec
popa
push
lds
pop
pop
xor
pusha
pop
scas
sub
pop
iret
add
sbb
and
mov
cmc
mov
enter
adcb
movsl
inc
out
popf
and
ljmp
ljmp
ds
push
stc
push
pop
xor
dec
into
jnp
shrb
rcrb
mov
sub
mov
push
into
popa
inc
sub
add
add
das
mov
sub
fstp
hlt
mov
xorb
dec
xor
push
shrb
addr16
push
pusha
data16
sbb
test
rcrl
sub
fwait
xor
outsb
jg
loop
dec
adc
into
gs
xchg
psubsw
xchg
and
mov
test
push
jbe
les
inc
sbb
in
aam
jbe
into
inc
fdivrp
daa
or
lods
add
xor
cmpsb
or
add
sahf
test
arpl
je
dec
dec
out
out
aam
cmp
or
jecxz
in
pop
scas
fnstenv
cmpsl
ficoms
sbb
negl
xor
es
shll
adc
or
ljmp
and
push
mov
add
div
dec
fiaddl
lret
mov
lods
or
lock
loopne
lods
xchg
pop
xor
mov
xlat
movsb
dec
in
sbb
pop
xchg
jge
out
popf
cmp
xor
pop
aas
aaa
fwait
data16
mov
mov
test
jnp
gs
stos
call
mov
ljmp
iret
negb
or
push
sub
lcall
daa
adc
push
enter
and
pop
cmc
mov
ffreep
xlat
add
xchg
mov
dec
lahf
dec
pop
xchg
rclb
test
sub
movsb
pusha
mov
sub
and
cmc
cvtps2pd
dec
adc
clc
mov
pop
imul
call
gs
pushf
jmp
push
ret
pop
test
fwait
cld
xorl
xor
mov
lock
adc
insb
repz
test
add
outsb
ret
push
jp
test
mov
in
fiadds
add
movsl
cltd
leave
pop
icebp
aam
ja
dec
loop
cld
lcall
out
je
insb
aas
loop
cmp
mov
push
xchg
push
fucomi
sub
xor
repz
data16
mov
imul
aas
out
addr16
mov
jno
into
pop
mov
push
js
push
popf
das
mov
push
push
dec
loop
xchg
test
fldz
jnp
mov
push
fadds
cltd
jb
int3
mov
mov
call
aad
rcll
and
mov
xor
in
cmpb
xchg
inc
clc
adc
fbld
mov
mov
jae
jo
and
xchg
xchg
push
cli
push
cmpsb
les
xorb
mov
fidivs
lods
fdivrs
pop
cmpsb
hlt
dec
pop
pushf
mov
les
stos
scas
mov
or
mull
call
jo
pop
lock
or
shl
adcl
xchg
movsb
cwtl
mov
or
test
fs
in
jae
in
test
stos
or
nop
out
hlt
cmc
lcall
imul
out
adc
bound
outsb
add
fs
adc
bound
out
sub
gs
lods
xchg
lods
lods
into
add
arpl
mov
ror
push
pop
cmpl
xchg
aam
scas
and
mov
lea
pop
mov
stc
mov
cmpsb
push
bound
jp
pop
push
faddp
push
add
sarb
push
dec
mov
push
inc
scas
jns
pop
add
dec
outsl
and
mov
ljmp
sub
imul
pusha
pop
hlt
movsl
xor
pop
enter
jmp
add
or
xor
lahf
mov
pop
add
divl
inc
inc
pop
mov
cmp
pop
and
ss
mov
jmp
mov
lahf
adc
mov
jno
xor
xchg
cmpsb
cmp
jns
cmp
fwait
test
hlt
shr
jge
sbb
xchg
arpl
mov
xlat
mov
in
push
sub
xor
movsb
into
sub
fnsave
adc
cmp
faddl
inc
pop
std
inc
fmul
subb
scas
push
int3
xchg
in
and
aam
ja
add
adc
dec
dec
jnp
xor
test
arpl
xchg
sbb
sarb
notb
scas
ja
mov
jp
repnz
loopne
cmp
pop
loop
jg
xor
inc
dec
add
push
cmp
xchg
add
jae
lahf
jae
mov
mov
add
test
ds
leave
jno
lods
mov
lcall
mov
or
push
outsl
or
es
sbbb
cs
jecxz
xchg
dec
enter
insl
imul
pop
cmp
fwait
push
inc
movsl
sbb
dec
ljmp
cmpsb
lahf
loop
xlat
repz
sbb
sbb
dec
xchg
mov
inc
imul
roll
icebp
xor
push
daa
dec
pop
dec
mov
shll
xor
jne
fucomi
or
test
lea
dec
pop
icebp
push
repnz
sub
daa
cmp
adc
ds
das
mov
cmp
aad
iret
repz
adc
sub
pop
arpl
lock
shrl
jl
rcrb
fldl
into
xor
sub
int3
mov
lods
dec
mov
lahf
inc
mov
jg
or
add
into
enter
xchg
ss
ds
mov
dec
and
inc
inc
imul
push
repz
jl
sbb
jne
test
leave
and
pop
fstpl
daa
stc
inc
or
adc
sub
insb
xor
pop
dec
adc
testl
pop
inc
xlat
leave
dec
fwait
cli
ss
mov
and
jne
pop
pop
mov
or
shll
cmpsl
push
clc
std
mov
xchg
cmp
dec
adc
scas
xchg
stos
xor
lret
mov
repnz
mov
in
mov
fidivl
dec
fsub
mov
stos
lods
xchg
inc
mulb
test
sbb
sub
sub
sub
jge
cmp
mov
xlat
cmp
adc
decl
xchg
fnstsw
ja
andl
jmp
push
std
push
loop
scas
fistl
lea
sub
dec
lahf
add
mov
pop
cld
mov
add
sbb
xlat
test
xchg
mov
fs
lods
into
fimull
hlt
jne
mov
enter
adc
call
shll
cmp
clc
and
ljmp
fcmovnb
adc
xchg
fs
adc
andb
jmp
mov
add
push
sbb
cwtl
test
out
mov
push
pop
test
mov
mov
stos
jl
ret
xchg
scas
inc
out
jno
sub
dec
pop
xchg
cld
shrb
lret
cmp
and
arpl
popf
iret
lea
push
jae
inc
mov
mov
jmp
scas
sbb
das
lret
popa
sbb
test
mov
xchg
and
and
or
jle
inc
adc
repnz
push
out
add
lea
iret
adc
and
push
rol
rorb
sbb
test
test
testl
test
dec
and
xor
fldcw
jb
arpl
int3
aas
enter
scas
inc
shl
fnsave
jae
push
jo
sti
nop
stos
ficompl
mov
mov
xor
jno
mov
jae
cmp
sub
xchg
gs
dec
jp
divb
xchg
in
inc
scas
add
pop
jecxz
xchg
jnp
rcrl
int3
jnp
stos
aas
aas
and
outsl
divl
mov
call
add
mov
popf
and
mov
mov
popa
je
pop
cmpsb
jecxz
jae
fistpll
jecxz
add
xchg
scas
push
pop
inc
and
cmc
pop
mov
inc
add
sbb
cmc
rcrl
dec
fwait
sti
call
test
mov
push
xchg
stc
or
jp
mov
in
inc
gs
mov
mov
jp
mov
repnz
xchg
add
jns
xlat
and
add
sti
cmp
insl
repnz
dec
lea
das
cli
dec
and
mov
ret
pushl
mov
pop
xor
adc
sbb
insl
jmp
jo
and
push
cmpsb
jnp
mov
outsb
fiaddl
mov
movups
cmp
outsb
adcb
leave
cmp
fildl
push
pusha
dec
movsb
inc
cli
lock
icebp
imul
nop
add
push
push
jmp
adc
mov
inc
xor
jmp
jns
rolb
icebp
iret
xchg
fisubrs
pushw
or
movsb
push
jmp
movsb
or
mov
mov
jb
lahf
pusha
inc
push
into
aad
lcall
std
sahf
pop
sbb
sahf
sub
test
and
popf
sbb
adc
cmp
popa
xor
xchg
sbb
shlb
das
cmp
cwtl
insl
add
xchg
lea
jbe
mov
add
jecxz
js
add
imul
sbb
sbb
and
push
rcrl
je
mov
in
data16
dec
lret
pop
fisubl
cmp
divb
push
adc
or
out
sub
mov
inc
pop
mov
fsubr
dec
sbb
cmp
pop
nop
hlt
push
inc
and
lret
cmp
adc
outsb
dec
call
popf
jns
push
jb
dec
sbb
jmp
out
adc
aaa
xor
push
add
push
jno
add
lahf
lahf
mov
pop
repnz
addr16
and
jbe
dec
das
jge
aaa
loopne
sbb
sbb
jo
lcall
or
mov
mov
ja
xor
pop
sub
lds
adc
pop
sub
fs
push
js
dec
ss
dec
insl
add
daa
imul
add
and
xchg
sub
and
imul
out
xchg
fiaddl
jle
mov
and
imull
xor
lea
repnz
mov
in
test
sub
fucomp
mov
mov
stc
sub
ja
gs
dec
rol
fidivl
cmp
inc
and
xchg
lcall
scas
add
xor
jg
sub
scas
divb
sbb
pop
into
je
in
sub
sub
mov
clc
mov
aaa
insb
insl
inc
fs
adc
leave
enter
sbb
sbb
repz
push
inc
xchg
clc
fs
mov
cmp
xchg
pop
add
or
test
push
rcrb
jecxz
and
adc
aad
scas
inc
xchg
fwait
xor
adc
xor
and
pop
jnp
mov
xchg
mov
js
mov
mov
xlat
cmc
pop
mov
outsb
add
xchg
test
insl
in
adc
dec
push
jmp
in
jl
xchg
sub
fldt
js
icebp
push
cmpsl
out
sub
jb
fucomp
out
int
nop
ljmp
fnstcw
mov
ret
ja
dec
xchg
ljmp
cs
and
fdivrs
pop
sbb
pop
push
add
mov
xor
sbb
push
sub
sbb
imul
jno
shlb
or
stos
pop
cmp
add
push
es
jle
mov
mov
jg
xlat
add
lea
push
xchg
je
sbb
jmp
xchg
dec
cs
shll
sub
mov
mov
into
imul
into
xor
push
dec
mov
xor
cmp
out
sbb
ljmp
jno
fbstp
stos
fs
add
or
inc
push
xorb
xchg
xchg
iret
addb
add
pop
insl
pop
out
sahf
xchg
fwait
js
inc
mov
cs
inc
popa
insb
jg
iret
add
add
loop
jl
and
lods
cld
fdiv
cmp
push
sbb
aad
es
ds
push
mov
dec
mov
hlt
ljmp
in
xchg
mov
fildl
dec
xchg
dec
stos
mov
jns
js
imul
lret
lret
das
arpl
sbb
sub
cmp
aad
inc
or
inc
mov
notl
adc
js
insl
jge
ret
lods
jmp
add
test
cmp
fbstp
xor
loope
out
mov
push
stos
mov
pushf
push
out
movsl
pop
dec
pop
sarb
lds
scas
fstpl
ficoml
call
arpl
fcomps
pop
pop
mov
push
test
repnz
inc
leave
xlat
adc
push
dec
lods
add
mov
xor
mov
das
lea
or
sub
xchg
sbb
stos
push
test
fdivrl
dec
into
mov
shl
inc
popf
arpl
inc
xchg
cmp
mov
jo
out
push
jns
dec
lahf
loopne
js
rcl
repz
jecxz
loopne
rcrb
jg
dec
pusha
jle
xchg
or
addr16
cmp
leave
fmul
popa
into
push
fucomip
mov
fstl
fidivrs
adc
rorl
mov
lcall
movsb
mov
push
int
xchg
fbstp
imul
xor
inc
pop
push
jae
jge
sub
push
lahf
dec
cmp
push
mov
pop
shll
mov
adc
rcrb
shl
jp
jmp
stc
xchg
and
xor
mov
icebp
xor
xchg
dec
test
repnz
push
cmpsl
cwtl
mov
sub
pop
pop
lret
cld
shl
icebp
fldl
dec
jecxz
jle
aam
ja
lret
shll
cli
pushf
cmpsb
icebp
push
test
add
push
or
mov
iret
jg
cli
sahf
mov
iret
fstpt
adc
jp
and
das
adc
mov
rcrb
dec
scas
mov
mov
test
pop
xchg
mov
dec
mov
jle
fs
dec
in
jp
mov
xchg
insb
test
sbb
pusha
imul
xchg
jp
pop
inc
fists
and
xchg
out
addb
shrl
loope
pop
lret
in
xor
cmp
add
mov
or
mov
sub
push
pop
fists
mov
mov
int
loop
scas
dec
dec
in
cmc
pop
addr16
iret
fbstp
dec
call
mov
popf
cmp
push
popf
xchg
xchg
cmpsl
mov
inc
jle
cmp
mov
xor
orb
sub
mov
movl
mov
mov
xchg
xrstors
ss
push
or
xchg
jg
in
lcall
inc
adc
xchg
leave
arpl
dec
cmp
popa
cmp
push
or
dec
xchg
push
fistl
jne
jae
les
mov
insb
sub
mov
fidivrl
lods
lret
sub
xor
scas
push
mov
std
jne
les
jo
jnp
fsubl
outsl
xchg
in
test
cmpsl
ds
in
addr16
enter
mov
into
cmpb
mov
or
in
ret
movsb
or
mov
push
and
bound
xchg
xchg
int
push
adc
ljmp
jg
nop
lahf
pop
jb
andl
xor
push
cmc
cmp
sti
xchg
adc
subl
sub
push
xlat
fiadds
xchg
jge
xor
pushf
add
imul
mov
out
inc
ret
xchg
xor
sbb
sub
lds
je
push
xlat
mov
addr16
shll
outsb
call
xchg
in
fldl
mov
fwait
sti
loopne
fucomip
iret
mov
repnz
inc
mov
std
sbb
mov
dec
aaa
loopne
int3
mov
sarb
push
inc
push
adc
inc
cmp
scas
adc
jbe
dec
or
dec
mov
subb
jne
mov
jle
mov
hlt
repnz
add
scas
in
mov
test
cmp
movsb
test
add
frstor
mov
popa
jle
repnz
and
out
cwtl
std
jnp
lds
and
loopne
ljmp
push
outsl
jg
leave
or
aad
ljmp
ret
sub
scas
xor
add
popf
and
push
data16
mov
add
xor
adc
pop
test
je
fldcw
mov
mov
call
lahf
push
test
test
mov
push
gs
fsubrs
enter
mov
mov
leave
pop
jns
mov
bnd
ret
or
lea
add
inc
and
jg
and
add
pop
popf
jg
mov
or
mov
pop
daa
jmp
xlat
subb
call
test
cmp
ljmp
inc
add
push
dec
mov
adc
mov
mov
repnz
repz
pop
or
xchg
adc
jle
mov
mov
jle
popa
les
cmpsl
addr16
mov
push
sub
sbb
arpl
nop
pop
std
mov
mov
std
mov
jno
out
or
stos
movsb
nop
push
daa
ljmp
jb
int
inc
cld
lock
sbb
movnti
or
cmpsl
mov
aam
test
push
jns
ja
pop
cmpsl
ss
sbb
shrl
nop
cmp
out
icebp
lret
adc
pop
js
repz
lret
popa
push
data16
test
mov
shll
add
mov
aas
loop
cmc
mov
aas
enter
inc
mov
push
xchg
popa
xchg
testb
adc
pop
adcb
or
and
stos
movsb
or
dec
inc
adc
xchg
pop
outsb
enter
shll
pusha
or
mov
fildll
mov
lods
scas
sub
or
dec
loop
xchg
hlt
sbb
aam
loopne
imul
mov
sbb
and
subl
fsts
mov
add
cmp
add
xchg
sbb
pushf
jno
push
push
pop
lahf
jle
lods
jle
scas
inc
pop
daa
lds
lds
jg
fidivs
mov
lret
pushf
cli
xor
in
mov
mov
out
filds
test
add
mov
and
in
dec
mov
je
jo
lock
dec
push
lea
in
mul
gs
pop
mov
mov
insl
jge
out
lods
mov
fists
xchg
icebp
cmpsl
inc
push
out
mov
js
jg
in
cmp
lahf
dec
and
mov
lods
pop
mov
sahf
mov
mov
xor
dec
xlat
rcll
sub
inc
mov
ret
jge
xor
jo
dec
xchg
pop
adc
jle
mov
xchg
nop
jl
mov
subl
mov
xchg
out
test
and
sbb
nop
jmp
inc
adc
fcoml
pop
mov
scas
mov
cs
popa
xor
pop
loopne
cmpl
movsl
outsb
mov
cmp
jbe
sbb
mov
inc
mov
icebp
mov
or
adc
xor
lcall
repz
push
movsb
pop
lahf
mov
sti
push
add
xchg
out
push
mov
dec
subl
ja
mov
jno
lret
dec
sbb
sti
setnp
imul
leave
ficompl
sbb
lock
pop
repnz
aad
mov
xor
sub
arpl
xchg
es
push
sbb
dec
pop
idiv
jno
shl
es
mov
icebp
nop
adc
ret
fs
gs
jnp
mov
jns
dec
mov
int3
and
imul
std
stos
fs
fcompl
popf
inc
insb
sar
popf
popf
xor
jo
jno
cmp
mov
pop
jg
scas
mov
mov
add
mov
aas
push
movsl
xchg
notl
pop
xor
jg
jg
in
andl
xchg
test
inc
push
xchg
mov
lahf
leave
inc
lret
fldenv
cmpsb
jle
mov
cwtl
mov
aaa
iret
sub
pushf
rcr
mov
mov
orb
es
mov
punpckhdq
push
movsl
test
cmp
adc
out
or
leave
incb
mov
into
push
sbb
mov
mov
scas
pop
cmpsl
add
and
andb
popa
aad
test
adc
sbb
in
jno
jnp
add
xlat
add
fcomip
dec
mov
cmp
ljmp
mov
jb
mov
aam
xor
add
jge
inc
mov
jl
pop
push
cmc
inc
sti
sbb
pop
mov
jne
mov
aas
movsl
mov
test
ja
lods
out
sbb
mov
fisubl
fidivs
loope
xchg
xor
jo
add
pushl
dec
xchg
dec
jnp
call
add
adc
mov
adc
and
rorl
stos
test
notb
xor
xchg
xchg
rcr
adcb
jmp
icebp
mov
lods
dec
loop
scas
jl
mov
add
jecxz
inc
or
pop
call
xor
xchg
pusha
or
add
inc
mov
mov
ljmp
cmc
xchg
dec
not
inc
dec
cmp
sub
ljmp
xor
xor
and
cld
iret
adc
mov
les
lds
pop
daa
cmp
stos
loop
jp
cltd
xor
fistpl
in
jo
add
loope
scas
out
adcl
cmc
cmp
scas
mov
clc
push
outsb
mov
or
xchg
push
jl
arpl
aad
xchg
fs
push
jb
sbb
xchg
cltd
push
dec
cli
add
dec
cmc
dec
lds
mov
pop
jae
adc
and
mov
mov
mov
call
sbb
jne
stos
lea
sbb
in
push
xchg
pop
xor
cmpsb
loopne
push
movsl
push
push
insb
or
mov
xor
addr16
out
mov
pop
dec
in
popa
rcl
or
lret
mov
imul
mov
jo
in
sbb
sbb
lcall
push
add
les
ret
jae
mov
mov
adc
sti
rcrb
dec
xor
leave
in
movsl
dec
imul
mov
clc
and
cmpsl
xchg
xchg
lock
dec
push
cs
mov
and
data16
or
cld
lcall
jne
int3
popf
or
pop
xor
lcall
orl
fdivr
or
lahf
insb
mov
nop
push
push
dec
leave
je
insl
cmpsb
lock
xchg
fcoms
test
mov
jle
cmp
adc
and
addr16
popa
adc
ss
push
inc
fstp
mov
cmc
fisubrs
shll
in
cmc
dec
or
mov
xchg
mov
pop
test
fisubrs
int3
cld
add
ja
cmp
dec
jle
mov
pop
dec
dec
arpl
dec
pop
test
nop
and
xchg
inc
in
lcall
ss
testb
stos
mov
jae
orl
jge
sbb
inc
cmp
xlat
loop
es
lea
push
lret
daa
mov
inc
sbbb
outsl
in
out
mov
or
mov
mov
mov
add
mov
xor
insl
lods
lods
and
movmskps
mov
lret
sbb
mov
testb
dec
push
jle
inc
scas
xchg
lahf
test
adc
xchg
lds
xchg
mov
aam
sub
pop
inc
pop
inc
inc
out
clc
imul
pushf
sbb
lahf
shrb
loop
ss
mov
int
js
inc
sbbl
hlt
xchg
pop
and
js
out
push
faddl
add
lods
mov
sbb
mov
cmpsb
lock
adc
sar
xor
mov
inc
lods
push
ficoml
mov
sbb
in
and
mov
imul
clc
lret
fnstenv
inc
xchg
mov
dec
push
mov
mov
mov
push
pop
xchg
mov
aam
addb
add
xor
mov
iret
mov
repz
mov
rolb
jns
mov
jmp
scas
gs
xor
mov
std
pop
out
jns
pop
cmp
insb
in
repz
pop
and
ret
fdivs
adcb
add
lahf
mov
xor
adc
ljmp
sub
mov
adc
ja
fnsave
inc
hlt
mov
call
out
xlat
fldpi
mov
sbbl
mov
movsl
cmp
adc
pop
bnd
inc
push
int
mov
mov
frstor
inc
arpl
shrl
mov
out
clc
sub
mov
insl
loop
xor
lods
pop
pop
rcll
mov
sub
add
mov
mov
jle
imul
push
ds
or
jae
pusha
sub
dec
lahf
hlt
insl
stos
test
mov
fldenv
cltd
cmp
out
iret
fcmovne
add
push
call
leave
mov
or
loopne
cltd
sub
xchg
xor
mov
iret
es
xchg
lods
inc
lcall
loop
dec
lods
ja
xlat
xor
mov
push
push
cld
inc
xchg
ljmp
testb
loop
loope
into
xchg
mov
cld
in
mov
aam
xor
add
inc
mov
not
fldt
lea
pop
inc
outsb
test
jl
pop
imul
xchg
sub
mov
mov
test
cmpsb
fstpl
inc
iret
cmp
dec
dec
mov
lret
adc
loope
add
lcall
sahf
or
outsb
pop
sti
lcall
and
jnp
rol
pushf
ss
xchg
nop
pop
popf
sbb
fildll
pop
pop
pop
push
mov
fs
xor
jmp
imul
cmp
jne
pushl
int3
pop
mov
and
add
dec
sti
loop
leave
dec
in
sahf
repnz
xchg
mov
xchg
sbb
scas
mov
data16
popf
loop,pt
les
push
sub
repnz
and
aaa
and
test
xchg
sarb
fldt
mov
add
les
jbe
mov
loope
add
out
sub
mov
div
fldpi
push
sub
inc
pop
in
sarb
inc
adc
xor
sub
and
xchg
cs
mov
lret
lahf
data16
pop
adc
mov
sbb
mov
fwait
outsb
enter
cmpsl
push
sub
sub
mov
mov
shll
mov
rol
xchg
adc
mov
mov
adc
das
sub
repnz
cwtl
mov
adc
inc
outsl
push
cmc
test
rolb
inc
scas
xor
adc
into
pop
in
iret
adc
test
je
xor
and
stc
addb
pop
mov
jns
arpl
fists
push
cltd
sub
mov
les
addl
loopne
sbb
test
out
add
movsb
mov
ljmp
sub
testb
cmpsl
sub
lahf
xchg
fs
pop
push
test
cmp
stos
and
int
dec
pop
add
iret
mov
jmp
cmp
add
adc
test
xor
dec
icebp
out
imul
and
xchg
bsf
jecxz
cmp
dec
stc
fwait
adc
lds
mov
xor
mov
push
jmp
and
ror
test
int3
cmp
inc
insb
add
bound
int3
dec
cmp
xor
inc
loope
loope
ret
inc
inc
fidivrl
fisubl
loope
cltd
inc
dec
aas
das
inc
jno
fsubl
fcomps
stos
jne
roll
rcll
jg
add
jns
pop
scas
test
psrld
loopne
outsb
pop
jnp
mov
ret
push
sbb
ss
insb
xchg
xor
pusha
addb
arpl
popf
stc
out
cmp
decl
aam
in
lock
cmc
jle
repnz
insl
test
inc
fs
imul
daa
xchg
mov
or
call
ljmp
popf
in
fsubl
jmp
bswap
jo
js
push
push
mov
gs
imul
push
push
push
outsl
xor
add
push
lods
xor
fisubrl
xor
stos
loop
imul
jnp
jb
gs
iret
js
rol
in
mov
jecxz
inc
lcall
std
pop
ja
xchg
mov
mov
mov
jne
ja
pop
pop
scas
mov
and
pop
test
cmpsb
push
xchg
sub
mull
enter
mov
test
xchg
cli
ss
pop
cmp
push
xchg
incb
add
mov
cmp
movsb
out
mov
outsb
iret
jb
push
cmp
mov
cmpsb
aas
ficompl
adc
adc
dec
and
cmp
fadds
ficoms
aaa
aas
fsubrs
xchg
daa
adc
jb
sbb
fs
mull
sbb
pop
dec
push
ds
sub
jle
dec
pop
insl
xor
xchg
sub
sub
std
and
sbb
es
dec
lahf
or
scas
cmp
fcomps
mov
idivb
cmp
cmp
ljmp
fnstcw
adc
movsb
aaa
out
bound
aas
hlt
mov
push
sbb
and
fs
sbb
dec
icebp
cmc
push
outsb
daa
jmp
test
imul
sbb
sbb
xor
and
mov
nop
sub
ret
sbbb
xlat
cmc
wbinvd
mov
add
shll
stos
inc
xchg
push
add
mov
leave
xor
xchg
lods
inc
out
test
fwait
pop
mov
mov
pop
mov
insb
jle
popf
lahf
cs
push
aad
icebp
ficompl
mov
ret
aaa
dec
test
or
aad
inc
push
jno
addr16
inc
orl
add
push
lcall
adc
fmull
outsb
movsb
ret
enter
das
fisubs
sahf
out
in
in
stos
rorb
and
pop
call
stos
fsubrs
sub
int
sub
int3
sub
cwtl
sti
inc
lret
mov
push
sub
mov
pusha
push
sub
divl
adcl
movsb
cmp
mov
jo
lahf
xchg
sub
mov
mov
out
push
leave
cmc
out
outsb
adc
mov
clc
test
fmull
cmpsb
push
sbb
cmc
or
int
add
jae
lcall
and
pusha
icebp
xchg
ror
aas
sti
sub
mov
in
scas
bound
shll
ficomps
in
and
xchg
xchg
jb
fldl
gs
xor
xor
inc
insb
out
mov
movb
xchg
push
dec
ja
mov
jnp,pn
lret
movl
sbb
mov
je
test
sti
inc
or
inc
mov
push
icebp
imul
cmp
push
lods
inc
xchg
stc
popa
sub
jbe
push
xor
inc
xor
mov
pop
pop
cmp
adc
jb
mov
stc
or
pushf
sub
dec
push
aam
test
pop
sbb
push
or
mov
cmc
xchg
jle
in
pop
mov
jb
enter
orb
inc
jb
sbb
pushf
mov
jo
jno
dec
pop
pop
cmp
ja
fstl
inc
pusha
xchg
pop
adc
je
stos
lods
imul
jbe
push
in
xor
mov
sub
or
and
sub
in
arpl
xor
cmp
outsl
jge
arpl
loopne
loop
loopne
xor
push
sbb
mov
test
mov
fmull
cmpsb
int3
ds
incb
cmp
mov
punpckhwd
jno
inc
pop
test
ljmp
and
push
jge
pop
pushl
dec
adc
pop
js
dec
movsb
xchg
imul
or
inc
out
sbb
ret
pop
dec
je
ss
xchg
cmc
cmp
stc
jecxz
mov
sub
or
xlat
rcrl
add
fildll
rcrb
out
sahf
add
dec
mov
mov
mov
sbb
inc
or
xchg
pop
sbbb
sbb
dec
pop
cmp
ret
sub
insl
add
pop
sub
sub
mov
xlat
sub
cld
inc
insl
cmp
sbb
pop
in
push
inc
cs
call
std
sbb
aaa
into
insl
cmp
imul
js
ja
pop
push
ret
scas
inc
pop
mov
filds
mov
pusha
cmp
pop
shld
scas
stos
addr16
ds
xorb
mov
xor
mov
orl
jb
int3
iret
push
mov
sub
cmp
aam
into
mov
aas
aad
push
and
imul
cs
mov
fisubrs
gs
lret
repnz
in
mov
shl
movsl
mov
shl
jb
popf
std
mov
repnz
pop
sub
cmpsl
clc
push
mov
inc
add
sub
icebp
cwtl
hlt
push
in
and
xchg
je
fwait
xor
or
arpl
mov
lret
or
and
add
and
mov
jbe
mov
pop
push
or
pop
ljmp
cltd
movsb
mov
mov
jl
mov
mov
lods
xor
xor
adc
push
call
shrb
or
mov
les
test
out
push
nop
push
push
push
test
mov
mov
test
push
xor
dec
push
add
or
adc
into
xchg
mov
lock
mov
ja
popf
out
jae
in
inc
xor
pop
lahf
mov
test
xor
adc
arpl
cmp
data16
jg
inc
adc
je
sbb
lret
addl
mov
je
iret
imul
in
pop
mov
add
std
mov
pop
adc
fcoms
aad
cmp
or
inc
inc
leave
cli
jecxz
inc
mov
xchg
stos
xchg
jl
jl
mov
xor
les
xchg
sub
dec
add
data16
loope
nop
scas
jo
fadds
imul
pop
mov
stc
mov
imul
test
mov
fdivrs
ljmp
jns
dec
xchg
rcl
stos
push
rcr
xor
mov
dec
loopne
cmp
cmpb
mov
je
pop
call
jb
movsl
out
and
fwait
lret
aam
std
mov
sbb
jp
adc
or
sub
sub
push
loopne
outsl
orl
sahf
add
mov
jbe
rcrl
xor
in
cs
dec
iret
data16
ljmp
mov
out
xchg
pushf
outsb
pop
icebp
lahf
xorl
dec
hlt
int
cmp
mov
imul
inc
push
sub
scas
inc
push
cltd
ljmp
iret
pop
mov
mov
movsl
cmp
adc
mov
and
movsl
mov
push
lods
loop
jg
in
mov
fdivrl
js
inc
cmpsb
lcall
push
js,pn
decl
lret
jns
jge
fs
jo
loopne
xchg
and
fsubl
cmpsb
push
js
add
notl
mov
loope
int
xor
jno
fadd
ficomps
or
movsl
cmp
dec
sbb
mov
fisttps
dec
popa
mov
pop
lret
seta
mov
int
pop
jb
cmpsb
mov
js
cwtl
repz
stos
mov
scas
xor
mov
jl
mov
repz
in
mov
inc
cmpsl
push
cmpsl
in
mov
iret
loope
adc
test
pop
test
insb
in
ljmp
daa
push
lret
or
ss
mov
push
sbb
mov
cltd
pop
loop
or
aas
cltd
pushw
in
fbstp
mov
push
jo
push
adc
mov
leave
xor
in
inc
aas
pop
add
loope
pop
xchg
lret
jb
sub
ja
pop
int
call
aaa
lea
out
cmpb
and
sti
and
lds
jge
and
sub
pop
shrb
sub
sub
in
mov
add
sub
and
ljmp
dec
inc
dec
mov
scas
jae
cltd
or
jns
sub
loope
leave
cltd
xor
mov
jge
jns
and
mov
push
add
xor
cmpsb
mov
jle
fldt
ja
outsb
imul
sbb
and
adc
aam
das
arpl
jo
loop
or
jo
nop
push
add
pop
xor
dec
loope
inc
sbb
nop
icebp
js
adc
mov
sub
lcall
adc
dec
pop
cltd
inc
push
cld
jg
pop
and
jecxz
push
push
popf
inc
loopne
pushf
fwait
cmp
sub
dec
cltd
leave
into
imul
ljmp
test
mov
mov
cmpsb
xor
mull
stos
sub
inc
bound
movsl
movsl
mov
aas
sti
imul
popf
and
mov
scas
jnp
pop
loope
pushf
xor
iret
popf
out
shlb
mov
jae
mov
push
jmp
or
movsl
cmp
push
repnz
gs
cmp
dec
push
jge
out
cmp
sbbl
sub
xor
stc
jmp
fs
sub
mov
test
fbstp
push
inc
stc
aaa
pushf
std
lods
test
pop
out
push
out
xor
imul
inc
pop
popa
stos
cmp
mov
pusha
in
inc
stc
pop
nop
out
into
pop
pop
les
xchg
inc
lcall
and
fimull
push
fildll
aam
rolb
xchg
and
sbbb
mov
adc
insb
push
nop
sub
cltd
rcl
lret
in
jle
cltd
mov
pop
dec
insb
movsb
daa
jp
pop
mov
lahf
xor
pop
mov
call
xchg
adc
jle
loope
xor
xchg
dec
pop
repnz
sub
and
cmpsl
pop
push
divl
push
dec
ds
mov
adcb
inc
shll
and
cmp
in
popf
pop
scas
sarb
pusha
insb
andl
inc
gs
push
int
xchg
dec
sti
addr16
leave
iret
fdivl
cld
jmp
and
cld
adc
icebp
fcoml
or
xchg
mov
lcall
inc
push
rclb
shlb
fucomp
cmpxchg
mov
in
in
xchg
add
push
sahf
mov
lock
loopne
push
aam
xor
xor
insl
stc
dec
mov
cmpsb
shl
or
repz
les
dec
movsb
adc
fidivs
popf
mov
and
cmpb
outsb
clc
lods
aaa
mov
in
push
mov
fwait
jl
out
into
cli
or
out
mov
mov
popa
sub
push
sub
adc
shr
nop
sbb
movsl
ds
shlb
mov
add
stos
jbe
jnp
sub
pop
outsl
xchg
lret
cld
sbb
movsb
int
pop
sbb
test
test
xchg
cld
and
inc
sbbl
mov
scas
jmp
xlat
js
mov
mov
shlb
pusha
inc
fistpll
push
mov
jns
cwtl
xchg
xor
das
cld
cmp
outsl
repz
fisttps
push
jbe
pusha
dec
sbb
inc
lods
xchg
jns
push
bnd
dec
and
jp
inc
test
jbe
and
or
push
or
insb
iret
dec
loope
push
add
mov
lea
popf
aam
fucomp
jmp
fistl
mov
das
push
je
pop
xchg
pusha
mov
lods
das
mov
lods
aas
inc
push
jns
push
es
fidivrs
gs
sti
inc
jnp
insl
test
movsl
jge
jge
push
mov
mov
jge
add
testl
sbb
mov
scas
out
or
jg
iret
and
and
leave
ret
pop
mov
pop
enter
sarl
iret
mov
jle
and
clc
fstps
mov
shrl
std
adc
cmpl
sbb
jns
insl
sbb
data16
push
sbb
div
ds
cmp
cmp
xchg
mov
push
lods
jb
imul
mov
btc
cmp
sbb
mov
dec
xor
int3
imul
in
out
movsl
inc
xchg
cs
aad
push
jmp
mov
mov
push
insb
add
or
mov
sub
in
outsb
jl
addl
mov
xlat
sub
or
push
xchg
imul
adc
out
xchg
push
add
mov
fs
repz
mov
ret
lret
push
shl
cmp
cmpsb
jle
pop
adc
pop
popf
test
mov
incw
jns
cmp
out
test
mov
jae
pop
call
cmp
inc
gs
xchg
push
cmp
movsb
in
jnp
jg
arpl
mov
andl
add
insl
inc
sahf
divb
bound
pushf
sahf
shrl
je
aaa
pusha
jnp
repz
xchg
mov
fdivs
jne
pop
xchg
mov
popf
cld
rcr
inc
cmpb
ja
div
pop
loop
dec
pushf
jns
or
push
mov
rcr
mov
pushf
scas
sbbb
push
mov
dec
push
pop
mulb
inc
pushf
pop
push
add
cld
mov
add
and
loopne
sbb
sbb
cmp
cmp
cmpsl
and
and
sub
pop
popa
adcl
inc
cmpsl
stc
push
movsl
sub
inc
fiadds
mov
jl
mov
xor
inc
call
pop
xchg
mov
push
or
pop
adc
popa
stos
ljmp
cmpsl
push
sub
jno
cmpsl
mov
jl
inc
scas
cmp
pop
testl
adc
lods
sub
or
test
dec
mov
repz
inc
mov
fdivrp
push
adc
cmp
sbb
insb
enter
jnp
inc
xor
rolb
xlat
insl
push
in
lock
push
pop
cmp
jne
jb
ljmp
jbe
in
les
mov
inc
in
popa
pop
xchg
rcrl
gs
in
out
call
push
jbe
add
pop
add
es
fbstp
jecxz
cmp
sbbl
and
mov
sarl
mov
imul
pop
push
mov
and
push
lods
pusha
sbb
mov
sub
shlb
mov
jecxz
enter
lds
arpl
sbbl
lock
sti
dec
shl
imul
add
adc
sub
sbb
daa
lcall
lds
inc
mov
movsl
sbb
mov
jl
jp
ret
in
cmp
push
mov
mov
andl
push
push
jmp
pusha
jp
pop
push
movsb
lret
xlat
mov
or
cmc
mov
aad
ja
scas
jne
loope
sbbl
fmull
fdiv
lds
idivb
jge
mov
test
clc
push
sbb
jecxz
dec
adc
jb
fildll
or
sarb
xchg
stc
or
adc
inc
mov
jns
xchg
or
out
fldenv
cs
rcrb
jnp
je
fists
xor
insl
sub
hlt
addr16
jne
imul
aas
jp
mov
dec
fsubs
lds
repz
pop
aaa
mov
xchg
sub
xchg
dec
in
xlat
stos
ret
rep
add
xchg
mov
out
popa
fstl
inc
jle
xorl
popa
pop
inc
cwtl
test
repnz
or
cmp
mov
aam
or
repz
mov
jmp
mov
loopne
pop
adc
lods
ret
jnp
popf
nop
and
jae
loop
fisubl
shll
imul
mov
cmp
cmpb
mov
and
sbb
inc
lret
cmp
mov
xor
nop
fwait
movsb
add
and
dec
xlat
sbb
mov
push
cld
imul
sahf
sbb
xchg
cmpsl
push
or
test
add
push
pop
or
mov
loopne
inc
mov
ret
jb
jecxz
sub
stos
cmp
mov
mov
les
sahf
cmc
clc
mov
adcl
push
or
dec
pop
sbb
shrb
adc
mov
sbb
loopne
mov
std
adc
and
pushf
out
pop
outsb
jge
xrelease
out
stos
bnd
pop
clc
repz
pop
iret
jnp
int
push
stos
jns
xchg
rcrl
xchg
push
out
add
and
cmp
ret
mov
mov
scas
hlt
mov
inc
gs
jae
inc
sub
shrl
sbb
add
mov
mov
out
xchg
jbe
mov
add
adc
mov
ss
test
pop
mov
out
into
gs
in
mov
sbb
adc
xchg
outsl
inc
mov
shrb
push
sahf
sar
sub
dec
xlat
push
hlt
iret
xor
clc
in
sub
rclb
mov
dec
out
cmp
cmpb
push
mov
xrelease
dec
nop
rcl
out
pusha
dec
ret
pop
inc
gs
and
movsb
xchg
call
xor
hlt
in
mov
nop
cmp
shrl
enter
sub
shrb
sub
or
mov
cmp
mov
addr16
pop
lock
out
test
xchg
xlat
int3
jecxz
fidivs
mov
push
or
jp
mov
sahf
or
sbb
loopne
icebp
add
jle
sub
fidivrl
jle
out
mov
fnstsw
iret
shll
jecxz
xchg
in
test
lret
jg
cmp
inc
sbb
enter
push
scas
and
add
cld
mov
xor
das
out
push
in
dec
add
leave
in
pop
sti
addr16
inc
fsubs
or
xchg
sub
cmp
and
mov
mov
mov
jo
xlat
dec
cwtl
out
testb
mov
jl
je
shrb
mov
cld
pusha
xor
cmp
mov
popf
aad
fbld
lret
into
pop
cmpsb
push
shl
pop
icebp
xor
dec
add
mov
xchg
sbb
test
sti
sbb
ljmp
rorb
mov
sub
rcrb
aaa
ret
rol
fwait
cmc
mov
jne
rcrb
cmpsb
push
jo
sub
dec
cmpsl
sbb
push
jbe
shlb
ret
inc
scas
jecxz
sbb
lret
jb
jns
xchg
test
jle
imul
and
mul
mov
jge
or
mov
loope
cld
push
addr16
das
xor
or
ret
inc
stos
inc
adc
ss
pop
addr16
fs
repnz
push
call
add
bound
and
inc
adc
cs
adc
lret
and
insl
inc
stos
inc
ds
imul
mov
mov
inc
dec
dec
pop
adc
out
fcoml
and
fdivs
popa
clc
sub
pop
pop
scas
ret
hlt
iret
loop
movsl
icebp
mov
negl
stc
or
aam
cmp
data16
dec
push
insb
push
and
inc
xchg
add
lahf
fsubr
inc
test
imul
mov
aam
push
cmp
mov
js
push
pop
andb
js
loope
xor
das
fcoms
jns
adc
lods
fucomi
in
movsb
repnz
aas
test
in
mov
fisubrl
imul
popf
popf
repz
sub
dec
inc
cmp
mov
fstpl
aaa
mov
fdivrl
adc
ret
pop
push
mov
mov
mov
mov
push
stos
mov
fdivrl
mov
and
popa
in
or
push
dec
jne
aam
xor
push
and
cli
mov
jbe
fwait
mov
dec
movsl
xchg
jo
ret
sbb
jg
les
lahf
testl
cmp
movsb
dec
fsubrp
cmp
shlb
ja
icebp
or
sarb
ret
cmp
or
arpl
leave
xchg
filds
popf
rolb
mov
add
rep
imul
cltd
popf
push
ss
imul
add
ja
jne
rorl
out
xor
xor
mov
pop
cmpsl
andl
push
pop
cmpsb
loop
mov
push
ss
icebp
adc
xchg
sub
jge
cli
imul
inc
push
insl
cmp
xchg
push
outsl
mov
and
aaa
mov
push
pop
test
dec
mov
cltd
xor
mov
cmp
inc
pop
adc
loope
cwtl
imul
xor
sahf
inc
mov
in
fcomps
dec
adc
lahf
or
dec
mov
mov
pushf
mov
ficomps
outsl
and
lahf
ret
dec
loopne
sbb
shlb
loopne
pop
repnz
inc
fildl
out
in
jns
push
aad
repz
pop
cwtl
out
ret
aam
and
addr16
test
popa
xchg
decb
lcall
push
stos
ss
add
inc
mov
loop
rorl
and
sti
sbb
pop
cli
sbb
sbb
cli
pop
sub
enter
and
or
and
push
push
imul
mov
dec
xor
into
pop
xchg
fsubrl
adcl
clc
jne
aam
je
aas
adc
sub
mov
pop
outsb
mov
cmpsb
xor
popf
mov
dec
out
frstor
sbb
loope
cmp
or
adc
lods
mov
scas
sub
cld
inc
loope
sbb
adc
xchg
pop
push
stos
aad
call
pop
sbb
cmp
lea
ss
popa
into
fidivrs
or
daa
jno
pop
outsb
ljmp
stos
adcl
in
xor
mov
aad
pop
fidivl
cmp
jae
call
jge
fnstsw
arpl
test
nop
pop
or
subl
sub
mov
push
xor
jge
lods
into
cmp
mov
push
and
add
xlat
andl
sub
popa
cmpsl
dec
int
in
sbb
xor
lods
sub
push
ja
sub
lret
mov
jge
popf
mov
mov
adc
jno
adc
sbbl
dec
pop
sahf
popf
or
enter
mov
testb
add
insb
fistpll
push
and
mov
mov
mov
mov
test
sub
adc
xchg
decb
xor
inc
cmp
sub
data16
xchg
mov
clc
sub
pop
outsl
into
mov
inc
dec
lea
jne
fidivs
in
inc
jnp
dec
fnsetpm(287
jl
outsl
add
je
test
sti
pop
test
jle
xor
sub
push
addr16
mov
xor
aas
jle
or
mov
dec
sbb
fadd
movsl
push
add
sub
fstps
in
and
in
imul
fstl
test
push
loope
jge
arpl
or
jmp
dec
add
add
pop
pop
dec
int3
inc
and
cmp
sbb
xor
cmp
push
ljmp
sahf
je
cmp
cmp
jecxz
mov
cmp
pop
cmpsl
mov
mov
fistps
push
push
jecxz
sahf
outsl
int3
push
cmp
loope
icebp
xchg
mov
stos
xchg
outsb
popf
pop
insb
scas
js
fidivs
adc
testb
jmp
fwait
jb
hlt
mov
sbb
mov
sbb
rclb
adc
js
mov
push
adc
add
or
mov
push
cmp
jmp
push
xchg
test
js
in
xchg
jo
std
decl
or
int
imul
mov
loope
repnz
mov
enter
push
inc
cmove
jp
ficoms
and
jl
pop
xchg
add
je
or
scas
out
sahf
loopne
ss
pop
inc
and
pop
cmp
lock
adc
out
leave
test
out
imul
jecxz
aaa
in
cld
jae
push
inc
pop
andb
sbb
out
pop
add
xchg
push
xor
das
fnstenv
xlat
lock
push
in
testl
jle
roll
add
and
andl
mov
jbe
sbb
imul
xor
mov
mov
movsl
je
adc
cwtl
mov
add
or
lret
cld
jp
mov
and
mov
push
dec
in
adc
sub
pop
xor
cld
in
je
data16
push
test
dec
outsb
das
call
sbb
push
sub
dec
dec
loope
out
hlt
addr16
sub
and
sbb
mov
clc
mov
xchg
dec
faddl
cmp
test
sbb
inc
or
push
fwait
lods
xor
jno
divb
inc
out
push
sbbb
inc
ljmp
mov
cld
lcall
mov
cmp
sahf
xor
jecxz
mov
aas
mov
shr
pop
add
xchg
inc
or
cs
sub
jl
arpl
jg
cmp
dec
mov
int
in
dec
adc
test
push
aam
mov
push
jp
int
pop
add
pop
add
insl
addb
cli
pop
xor
cwtl
jbe
outsb
movsb
and
lock
ret
fmul
clc
addb
jge
mov
fsts
gs
out
std
in
js
jle
xchg
cltd
sbb
sub
cmp
dec
movsb
dec
dec
add
repz
xor
cmp
mov
aam
xlat
aaa
dec
inc
addr16
adc
aas
sbbb
or
ss
push
cmpsb
jno
jecxz
xchg
xor
shrl
add
loopne
stos
pop
dec
inc
aas
dec
mov
jbe
aas
pop
xchg
push
xor
push
in
xor
je
fcmovnu
jae
lea
add
bound
mov
dec
sbb
lock
lods
adc
sarb
cmpsb
push
shlb
addr16
loope
call
arpl
movsl
xor
dec
in
inc
cmpsl
repnz
inc
imul
das
xchg
sbb
cs
push
inc
push
sbb
add
xchg
jge
popf
ja
out
fwait
rcrb
in
jns
mov
call
dec
movl
iret
mov
fisubl
or
xor
dec
in
sbb
pusha
jne
bound
lods
xchg
into
repnz
cmpsl
mov
inc
movsl
or
mov
mov
adc
push
js
xorl
sub
cmpsb
inc
pop
fucomi
sahf
xor
clc
data16
movsb
adc
jp
dec
xor
fsubs
gs
enter
incl
mov
fldt
test
cmpsl
dec
push
das
outsb
fwait
ss
fsubp
mov
add
cmp
adcl
mov
mov
loop
cmpsb
xor
ljmp
nop
out
retw
aas
xor
dec
cltd
xor
mov
and
rcll
cmc
cmpsb
andl
stc
inc
cmpsb
in
sbb
mov
jge
adcl
mov
mov
popa
call
mov
jbe
rcll
add
xchg
dec
dec
sti
jb
xchg
sbb
lret
popf
jno
xchg
sub
jns
jl
int
icebp
push
call
add
jp
out
or
js
imul
lret
sbb
xchg
imul
fwait
fs
fisttpl
jno
jl,pt
cmp
es
mov
mov
mov
mov
xlat
test
add
xor
push
cmp
divl
or
pop
cmp
ret
in
push
dec
in
fsts
fwait
arpl
push
mov
adc
push
lret
cmp
and
sti
push
push
jae
lret
stc
nop
xchg
and
mov
icebp
mov
pop
test
xorl
jmp
sub
and
ljmp
jae
xor
push
popf
add
ss
cmpsl
jp
shlb
xor
out
mov
pop
pop
xchg
dec
popa
scas
aad
add
iret
pop
push
repnz
pop
jbe
das
add
out
add
inc
xor
in
or
test
cmpsb
push
hlt
cld
stos
mov
or
cmp
test
mov
hlt
outsl
adcb
lds
mov
push
jo
xor
push
pop
jle
push
xlat
iret
sbb
and
lods
pop
mov
sbb
loopne
pushl
mov
lods
sbb
mov
in
pusha
out
and
cld
xchg
inc
outsl
pop
loop
out
jbe
sahf
push
mov
bound
sbb
out
cmp
js
out
fidivrl
int
sbb
lret
jo
outsl
jae
xor
or
inc
gs
cmp
push
add
sti
xchg
push
mov
sbb
and
sbb
xor
jmp
jmp
sub
je
add
iret
cltd
jae
int3
mov
dec
sar
jo
mov
mov
xor
mov
clc
jg
lcall
add
inc
fwait
mov
aas
sbb
je
cs
inc
xchg
sub
pop
push
neg
cmc
push
or
test
rcrb
sbb
push
sahf
adc
ljmp
cmp
push
out
rcl
xchg
xchg
mov
pop
and
adc
js
rol
pop
cmp
shlb
mov
lret
sti
jge
repnz
mov
mov
xchg
adc
sahf
test
fbld
loopne
pop
outsb
push
inc
fisubrs
fists
xor
xor
dec
loope
das
bound
pushf
insb
sbb
push
or
test
inc
fcmovnbe
inc
fdivr
push
dec
push
jno
arpl
scas
sti
pop
xor
or
ret
or
jnp
rcrb
xchg
cs
or
mov
mov
mov
xor
in
sub
aaa
jbe
dec
mov
adc
lahf
cmpsl
insb
ret
popf
and
and
lods
fisubs
add
sbb
and
and
test
push
ja
rcl
inc
je
jo
xchg
mov
pop
dec
andb
gs
inc
mov
ret
mov
mov
jo
movsl
rcrl
cld
lds
test
jp
into
mov
dec
shlb
adcl
push
hlt
or
jae
insl
cmpb
sub
mov
mov
enter
outsb
push
add
jne
dec
lods
lods
inc
pop
into
cli
or
xor
push
xor
call
and
inc
sahf
mov
leave
cwtl
sub
inc
imul
inc
pusha
push
jne
lahf
jp
xchg
aaa
iret
add
and
cwtl
lahf
hlt
inc
fwait
inc
pop
xor
add
xor
imul
xchg
fmull
pop
pusha
sub
mov
lret
popf
xor
cltd
pop
mov
in
and
xchg
scas
outsb
mov
xor
adc
pusha
xlat
pop
sbb
xor
or
mov
fs
push
inc
xlat
mov
fmull
cld
mov
push
xchg
xor
push
gs
pop
outsb
push
aaa
in
push
xor
jmp
and
jmp
xchg
and
lcall
mov
inc
inc
out
fidivrl
jae
adc
jmp
pushf
xor
and
mov
pop
sbb
outsl
push
push
sbb
xor
cmp
cmp
ret
fsubp
ret
xchg
mov
inc
je
stos
or
mov
push
inc
sahf
ret
ret
xchg
jecxz
jo
mov
push
cld
scas
lret
stc
popf
cmp
adc
cmp
int
dec
in
mov
aam
movsb
nop
inc
adc
xor
xor
pop
and
add
sbb
loope
jo
add
fisubl
test
jecxz
in
jmp
adc
xor
adcl
adc
shl
jnp
pusha
xchg
dec
jbe
leave
pop
out
xchg
ret
inc
stos
adcb
or
fsub
cmp
cli
sbb
arpl
inc
loop
dec
jo
imull
pop
mov
ss
sahf
sbb
jmp
fwait
mov
arpl
insb
xchg
or
out
mov
pop
mov
sub
add
jg
mov
sar
dec
es
aad
movsl
pop
pusha
stos
inc
mov
sahf
js
clc
xchg
mov
pushf
mov
iret
add
test
inc
xchg
jmp
cmpsb
lock
mov
push
sub
inc
mov
pop
into
fcomps
xor
fbstp
dec
sti
aas
dec
ljmp
sub
jo
leave
xor
or
mov
addr16
les
flds
dec
repnz
pop
in
mov
inc
cmp
call
rorb
push
imul
fidivs
rorb
cmpsl
push
cld
push
pop
lret
pop
neg
stos
lods
stos
mov
push
loop
lahf
add
scas
aam
sbb
inc
loope
pop
pop
fiaddl
mov
inc
test
outsl
mov
dec
imul
cmpsl
movsl
fs
mov
sbb
outsl
mov
lock
sub
and
dec
pushf
js
push
outsl
dec
lret
xlat
je
data16
mov
push
sbb
out
inc
pop
lea
lock
or
and
push
shrl
jae
mov
xchg
ficoms
in
dec
add
pushf
dec
or
lcall
mov
push
cmp
adc
and
cwtl
jmp
jbe
stc
jns
mov
mov
js
arpl
mov
std
loope
pop
and
inc
cld
xchg
int3
mov
push
in
das
sbb
inc
dec
loope
cld
push
push
popf
dec
hlt
dec
popa
inc
arpl
adc
lea
movsb
fidivrl
fwait
mov
sub
cmp
or
fisubs
mov
sub
fdiv
lret
negl
xlat
xchg
popf
jecxz
pop
mov
int
sub
xchg
xlat
jp
fstl
movsb
jb
dec
movsb
push
mov
or
ret
add
jmp
or
nop
xor
dec
lods
adc
jne
xor
mov
fiaddl
cmp
call
mov
cmp
adc
ret
sbb
movsl
lds
fnsave
ja
sub
cli
pop
out
xchg
jl
jecxz
xor
xchg
cmp
fidivl
push
out
iret
push
sti
jl
mov
push
dec
jge
inc
cmp
loope
cmp
inc
popa
dec
in
aad
je
stos
testb
jbe
xor
xchg
gs
sbb
nop
ss
in
or
and
iret
adc
nop
call
call
lea
xchg
roll
sahf
scas
pop
push
dec
or
pop
popf
dec
or
cmp
rol
jno
loop
mov
je
adcl
push
and
lahf
addr16
aam
mov
pusha
jecxz
ja
ljmp
sbb
jb
mov
sbb
sub
mov
adc
cmc
mov
xchg
pop
xchg
fdivrs
push
dec
call
push
data16
neg
aad
mov
ficompl
sbb
test
mov
sub
popa
clc
adc
rolb
mov
repnz
fwait
int3
arpl
cmp
data16
cmc
xchg
cmp
jge
fnstcw
xchg
fmul
faddl
jg
mov
popa
outsl
jo
lret
loope
cmp
mov
aam
in
insl
rclb
imul
rcr
add
scas
mov
mov
dec
popa
xor
sub
lret
lods
or
iret
adc
pop
sbb
outsl
push
mov
mov
pusha
ss
xchg
scas
xchg
scas
daa
shl
cwtl
daa
stos
xchg
xchg
test
mov
in
jl
mov
lds
xchg
mov
adc
mov
pop
adc
fnstsw
push
jecxz
imul
inc
sti
add
mov
fdivrl
push
jns
inc
imul
popa
sti
xor
ljmp
push
jae
cmp
jmp
sub
sub
add
cmp
idiv
cwtl
movsl
ljmp
std
rcrb
fisubl
cmp
daa
add
jp
fsubl
or
jo
xor
xorb
ret
inc
fwait
popa
mov
jne
test
mov
adc
mov
push
loopne
dec
pop
mov
loopne
pop
dec
adc
adc
xor
mov
mov
roll
add
lahf
jne
ss
rolb
xorl
cmp
es
mov
jp
xchg
in
push
push
dec
xor
or
jno
dec
xchg
or
pop
js
nop
stos
jp
fiaddl
xor
jo
jp
cmp
shl
shl
idivl
shrb
clc
lahf
js
repnz
out
add
dec
mov
mov
cmpsb
dec
cmp
shl
dec
insb
je
test
clc
stos
inc
sub
add
es
pop
mov
ss
ret
mov
out
adc
mov
je
or
xchg
or
stos
rclb
mov
loopne
js
push
cmp
std
inc
dec
je
mov
lods
inc
dec
xchg
stc
pop
add
mull
inc
lret
and
xchg
push
and
and
dec
inc
shll
push
shll
pop
sti
arpl
add
mov
push
aad
pop
adc
add
mov
sysret
sub
jl
test
inc
adc
addr16
add
dec
cltd
push
repnz
lcall
and
mov
dec
repz
push
cmp
sbb
hlt
xchg
push
jp
ds
pop
jno
mov
mov
mov
mov
sub
nop
lods
sbb
lock
sbbl
xchg
bound
lods
inc
mov
fistps
cmp
call
std
test
sbb
pop
movsl
in
jge
adc
cmp
and
push
jge
fisubrs
jle
xchg
mov
cmc
ret
or
and
push
add
repz
fcom
cmc
or
dec
jecxz
sub
ja
pop
negb
push
movsb
mov
jge
ja
mov
dec
xchg
out
inc
push
add
mov
mov
imul
sarl
popa
test
adc
jne
lods
mov
aam
mov
push
inc
in
jle
jb
jge
inc
cwtl
shrl
xor
adc
xor
sbbl
out
fadds
leave
imul
or
das
add
pop
xchg
xchg
cmp
and
add
xchg
cmp
mov
ss
cmp
js
notl
rcrb
fbld
sbb
mov
and
cltd
dec
into
int
ret
xchg
dec
jecxz
popa
mov
cmc
or
sbb
ficoms
fdivr
mov
and
xchg
test
or
arpl
add
and
lock
cld
inc
in
inc
sti
sbb
mov
add
popa
inc
int3
xchg
inc
mov
sbb
mov
cmpsl
out
inc
pop
stos
push
jo
addr16
sbbl
or
jb
cmp
pop
mov
pop
out
fcoms
mov
pushf
mov
rorl
sahf
je
xchg
insl
ss
imul
int3
push
lea
sbb
mov
mov
call
or
mov
cmp
or
sbb
inc
sahf
push
adc
fistpll
xchg
lods
pop
shrb
mov
cmpsb
mov
pop
in
shl
fs
dec
jb
jno
jg
mov
sub
iret
aad
icebp
outsl
or
dec
mov
xchg
stos
xchg
jbe
out
out
adc
rorb
pusha
mov
xchg
cmp
mov
shl
aaa
mov
xchg
stos
repnz
rolb
js
lret
xchg
cmp
or
pop
in
adc
in
lock
xchg
iret
jo
mov
dec
jb
cld
rolw
cmp
sahf
or
inc
rcll
mov
psubsb
sbb
push
ret
pushf
test
mov
and
clc
sbb
fsubr
mov
xchg
xor
mov
mov
lods
inc
sbb
lods
cmp
inc
mov
addr16
test
daa
faddl
mov
mov
push
je
jnp
inc
sub
jge
xchg
add
in
loope
or
dec
outsl
idivl
pop
cmp
or
dec
aaa
jo
ja
mov
mov
ret
mov
shrb
push
test
lahf
add
stos
pop
popl
inc
cmp
mov
cli
sbb
inc
out
mov
popa
fistps
lods
in
pop
cmp
loop
dec
xchg
dec
shrb
mov
inc
jle
mov
add
dec
pop
shl
mov
inc
pop
ja
in
pop
repz
pop
movsl
pop
cmpsb
inc
sarb
daa
sub
jge
test
mov
ljmp
fsubrs
js
test
mul
mov
loope
push
dec
fcmovbe
ret
mov
loope
imul
adc
in
outsb
in
fbstp
xor
imul
jbe
dec
loopne
movsl
popa
and
adc
shll
insb
sub
xchg
iret
test
aam
movlps
dec
pop
ljmp
sarb
sub
int3
mov
sbb
sar
pop
lahf
scas
adc
scas
add
and
push
addb
call
in
pop
cmp
hlt
push
mov
xchg
xor
mov
inc
xor
popa
pop
in
into
xchg
jbe
inc
mov
mov
pushf
cli
lahf
je
pop
dec
loope
dec
push
nop
bound
pop
jg
gs
adc
clc
mov
cmp
or
iret
das
mov
xchg
lods
into
xchg
cs
jnp
out
xor
lcall
int3
cld
lcall
sub
roll
xchg
std
sbb
adc
or
pop
jno
sbb
pushf
ljmp
pop
fldcw
mov
cli
xchg
mov
jno
jne
rorb
lds
aas
push
outsb
sub
hlt
pusha
xorl
das
imul
adc
sbb
dec
pop
jp
xor
ja
adc
es
xchg
sti
cmpsl
adc
stos
pop
push
icebp
inc
repz
xchg
pop
repz
mov
jp
xchg
and
pop
stos
lahf
cwtl
xor
int
shll
lock
pusha
jl
frstor
cmpsb
outsb
sbb
pusha
jg
sub
xchg
sub
icebp
mov
mov
mov
int
add
push
inc
sbb
ret
pop
lcall
adc
push
jne
xlat
insl
jb
push
pop
cmc
mov
mov
rclb
stos
add
lret
mov
in
sbb
or
xchg
jno
mov
stc
mov
pop
cmp
ljmp
je
xor
negl
mov
icebp
dec
mov
cmp
imul
push
jno
mov
xchg
in
mov
call
pop
mov
xor
jecxz
out
in
add
mov
push
dec
mov
xorb
test
xchg
lods
xor
sti
pushf
mov
aaa
inc
mov
mov
mov
jecxz
aad
jmp
xchg
push
mov
push
mov
dec
push
popa
outsb
cmp
sbb
cmp
mov
sbb
rcr
sbb
int3
jno
loopne
out
adc
ds
adc
push
jnp
adc
jnp
mov
jae,pt
sar
xchg
lds
int
sbb
das
mov
jnp
mov
test
icebp
lea
adc
data16
xchg
pop
inc
fimull
jo
aam
dec
jb
jg
pop
fwait
aad
and
jl
dec
xchg
pop
lret
std
and
push
int3
pop
sahf
jae
aam
xchg
and
ljmp
push
and
pop
push
popa
adc
cs
mov
jb
je
mov
aad
aad
cmp
outsb
test
jg
lods
sub
xchg
mov
les
cmc
call
mov
aad
adc
mov
pop
and
push
or
pop
insl
lahf
stos
push
push
or
adc
fdivrl
pop
mov
cmp
stos
pop
sbb
inc
test
addr16
xchg
es
adc
sub
lds
in
xor
jle
movsb
je
adc
xchg
sub
stc
je
pop
mov
test
mov
sbb
ret
fwait
jne
push
sbb
jae
inc
sub
push
cs
pop
test
mov
jnp
shlb
int
out
mov
push
lcall
in
sbb
add
in
pop
dec
fbstp
cli
cmp
data16
lds
test
lea
jp
and
sti
pushf
mov
gs
hlt
dec
loop
cmc
test
jmp
imul
inc
xor
roll
push
rcrl
scas
dec
or
jbe
out
jmp
inc
rolb
int
mov
cltd
mulb
lock
sub
mov
mov
push
push
jecxz
fstps
adc
dec
fldenv
les
testb
in
mov
lods
dec
stos
mov
fidivl
lods
lahf
ret
hlt
mov
data16
outsb
pop
xor
popl
xor
mov
mov
ja
in
mov
out
cld
mov
int
divl
inc
inc
mov
rcl
push
lret
sti
xchg
dec
out
sbb
ror
scas
sub
lock
call
add
jo
cs
inc
fisttps
jl
lods
int3
loop
push
addr16
movb
push
out
sub
adc
add
pop
frstor
lahf
cmc
push
mov
push
mov
pusha
sbb
xchg
dec
repnz
mov
lds
pop
stc
mov
jecxz
ret
mov
lods
shl
fstl
sbbl
das
lds
and
push
sahf
dec
pusha
xchg
lret
mov
sub
cwtl
push
mov
sbb
and
pop
fs
add
dec
sbb
out
xchg
adc
and
stos
adc
mov
add
sub
out
sub
pop
pop
outsb
add
scas
clc
sbb
push
call
cmpsb
test
jae
dec
inc
mov
popf
adc
xlat
sbb
cld
lods
ret
sbb
pop
cmp
or
shlb
es
iret
int
clc
stos
push
push
call
sbb
clc
mov
xchg
cs
into
rorl
pop
mov
pop
mov
mov
rcrl
sub
sbb
jmp
mov
imul
push
cwtl
cmp
movsl
jo
sub
nop
test
adcb
jo
cmpsl
test
adc
cwtl
arpl
mov
gs
ror
fsubp
in
dec
jno
out
fs
xchg
xrelease
push
test
movl
dec
in
lret
je
jae
insb
shr
mov
aad
xor
mov
test
scas
inc
add
cmpsl
xchg
stos
int
rcr
xchg
or
dec
stos
mov
adc
addr16
fistpl
push
into
out
lds
mov
sub
into
retw
push
lahf
jecxz
pusha
loope
jmp
stos
sti
decl
leave
adc
clc
mov
ret
in
inc
repnz
jmp
inc
cmp
es
cwtl
sbb
into
fisttps
sbb
xor
ret
inc
jbe
dec
test
adc
push
push
fimuls
jecxz
mov
push
outsl
lret
push
adc
sbbl
pusha
rcl
push
jecxz
sbb
sti
jb
loopne
xchg
fwait
scas
adc
inc
shlb
adc
loop
sub
cmp
popf
sub
rcrl
mov
sahf
push
mov
iret
push
or
cmp
xchg
popf
fstl
lahf
faddl
repnz
sarl
cmc
das
mov
xor
aas
inc
fcoms
pop
mul
pop
sub
insl
incb
mov
jbe
sbb
mov
cli
ss
pop
in
xchg
subl
sbb
lcall
and
push
pop
dec
dec
or
mov
insb
stos
add
cmp
dec
scas
mov
jp
cmc
and
repz
push
inc
not
int
inc
push
xor
push
out
cmp
pop
sbbl
jne
arpl
mov
les
test
jne,pn
aam
int3
je
lahf
xor
mov
lods
xor
xchg
jmp
or
movsb
mov
adc
outsl
shrb
popf
mov
adc
out
jno
dec
es
shrl
cmp
insb
xchg
push
fistps
mov
dec
cmp
outsl
mov
or
sub
imul
mov
push
in
sbb
push
add
aaa
cli
pop
pop
outsb
dec
pop
jg
or
xchg
loopne
loopne
paddusw
jbe
mov
xchg
push
jmp
push
call
dec
cmp
jo
jne
mul
pop
add
sbb
add
dec
xchg
mov
sub
stos
inc
aad
push
mov
in
xor
and
into
push
fildll
cmc
dec
std
jb
pop
sub
outsb
inc
dec
mov
jl
add
mov
rclb
sbb
jbe
fs
das
lahf
jecxz
adc
jno
test
scas
pop
sub
push
add
push
inc
loop
aas
push
sbb
xor
sub
inc
mov
dec
dec
aam
cs
xor
adc
mov
fisubs
je
mov
push
mov
mov
push
ret
pop
je
push
jb
iret
mov
pushf
mov
push
mov
mov
jp
ret
dec
loopne
loop
orl
cmp
out
cltd
sbb
stos
or
sbb
jo
shll
clc
mov
push
add
add
xor
sbb
cmpsl
jle
jnp
movsb
pop
orl
cs
ljmp
xchg
adc
xor
add
or
psrad
aam
pop
aas
in
sub
aad
and
add
inc
mov
jae
stos
jnp
jae
out
out
push
repnz
ss
mov
movsl
scas
inc
xlat
movswl
pop
mov
test
mov
inc
bound
add
in
stos
stc
xor
icebp
pop
je
or
imul
push
nop
stos
lds
mov
in
test
adc
pop
push
shrl
pusha
shrb
icebp
lds
mov
pop
jno
lds
cmp
je
sbb
fwait
add
inc
cmc
jmp
lds
xor
cmc
or
dec
push
mov
sub
repz
jnp
jb
cmpl
sahf
xchg
push
in
xchg
lods
push
push
test
scas
xorb
inc
mov
and
mov
jl
stos
and
jbe
movsb
dec
pusha
push
mov
cli
insl
lock
testb
sub
xor
cmp
inc
fstpt
inc
inc
adc
xor
push
adc
push
arpl
xchg
je
jmp
push
sahf
ret
addb
push
daa
insl
pop
jae
inc
adc
jbe
cmp
loope
jge
jl
imul
jle
out
push
jnp
sub
ja
pop
mov
xlat
pop
outsb
pop
adc
addb
cs
int3
pop
sbb
pop
out
mov
roll
jbe
in
in
icebp
mov
fidivrs
rclb
cwtl
and
pusha
inc
pop
lock
in
lods
cmpsb
xchg
mov
int
and
imulb
fmull
pop
loop
std
lea
loope
dec
in
aad
jge
ret
cmpsl
push
pop
in
lea
or
in
lock
out
loop
js
add
dec
lock
ja
hlt
push
push
xor
or
mulb
outsb
nop
in
mov
cmpsb
enter
pusha
daa
repnz
out
cmp
pop
out
pop
xor
xlat
jbe
mov
sub
sti
repz
aad
inc
fnsave
shlb
jo
pop
mov
int
jbe
mov
adc
inc
sub
popf
pop
inc
pop
lret
and
testl
and
insl
jne
outsl
mov
pop
lock
mov
ja
in
pusha
sbb
into
xchg
sub
addr16
ja
in
popf
dec
mov
inc
rolb
outsl
jbe
ror
jecxz
stos
adc
push
jp
fs
pop
mov
mov
mov
jb
flds
sub
insl
lahf
test
dec
mov
fcmovnb
or
add
add
cmp
mov
mov
iret
or
rolb
in
push
xchg
jecxz
jbe
pop
mov
or
xchg
or
lock
ret
dec
stos
ja
jp
out
cmpsb
dec
filds
sbb
xor
and
test
dec
xchg
clc
imul
stos
sbb
pusha
mov
jnp
fwait
ss
mulb
xchg
mov
inc
xor
mov
iret
add
push
in
push
and
jnp
sub
jo
lods
loope
xor
push
xor
push
inc
sub
out
pop
lahf
xor
in
orl
jmp
in
jbe
xchg
mov
lret
ss
out
jmp
pusha
adc
das
mov
push
or
push
nop
sub
pop
scas
adc
insl
xchg
stc
or
mov
imul
lods
xchg
sti
int
sbb
add
xchg
add
call
aaa
sbb
mov
mov
push
add
lcall
in
xchg
pop
neg
shrl
jno
mov
aaa
ss
mov
repnz
pop
gs
xor
cmp
mov
insl
loopne
sbb
sub
jns
dec
xchg
lcall
sub
sarb
add
dec
inc
pusha
divl
aam
mov
jle
pop
imul
sub
mov
add
mov
and
mov
xchg
sub
fdivs
add
fs
push
pop
es
insl
sahf
xor
push
lods
dec
incb
cmpsb
outsb
xor
mov
push
clc
sarb
mov
xchg
mov
rcr
sbb
sub
or
mov
rcl
jae
fwait
std
dec
pop
jmp
fs
adc
cmpb
fiaddl
or
iret
and
xor
inc
in
xchg
lea
xchg
pop
mov
xchg
mov
fisubrs
shrb
mov
and
les
popf
std
in
dec
repz
inc
in
loopne
in
cmp
lea
mov
inc
popf
dec
pop
ds
call
insb
ret
inc
xchg
mov
in
shr
push
lret
jl
mov
jb
iret
enter
or
mov
es
cmp
ss
cmp
mov
cmp
test
testl
lret
cmc
dec
add
jae
push
sbb
popf
dec
icebp
xchg
cld
mov
test
je,pt
jo
jo
sbb
out
shl
pushf
ds
inc
jnp
and
push
push
out
xchg
dec
lret
shrb
lock
mov
xchg
js
push
add
lret
mov
out
pop
imul
or
out
mull
into
jp
cmpsl
cmp
in
dec
ficoml
jns
sahf
shll
imul
loope
dec
repnz
ss
sub
and
inc
cld
dec
xchg
mov
and
gs
dec
push
jbe
push
shll
adcb
mov
fcompl
ficoml
into
scas
inc
and
or
jns
aam
or
test
repnz
daa
adc
sahf
sbb
loopne
lock
cwtl
ss
popf
push
or
pop
bound
stos
jmp
cwtl
pusha
mov
jae
cmc
sbbb
and
add
in
je
adc
inc
sbbb
dec
data16
cmp
ret
mov
mov
inc
lret
mov
inc
xchg
ss
xor
add
jb
mov
inc
add
ret
cmpl
out
iret
data16
mov
adc
xor
dec
stos
test
shl
mov
shrb
sarl
imul
push
in
lahf
outsb
popa
movsl
cmp
jmp
rcr
adc
leave
sbbl
es
and
sbbb
cmp
mov
shrl
add
sub
negb
push
mov
fisttps
clc
popl
inc
int3
arpl
enter
test
add
shrb
std
mov
sbb
mov
cmp
cwtl
das
and
or
sub
fidivs
fstpl
shl
popf
xor
push
pop
pop
jns
pusha
insl
or
in
in
scas
inc
sarl
aam
mov
out
mov
or
in
jle
loope
mov
xchg
jne
rcrl
pop
mov
cld
loopne
and
inc
in
push
dec
xchg
sbb
sub
xchg
pop
mov
mov
psrad
cmp
fsubl
pop
popf
das
xchg
push
xor
cmp
loopne
cmpsb
movsl
sub
or
cwtl
insb
sbb
jb
jp
fwait
jge
lret
xchg
sub
pop
out
call
icebp
imul
or
xchg
clc
mov
fisubl
gs
stos
dec
jecxz
ljmp
leave
xchg
and
clc
lret
mov
and
jmp
sbb
iret
mov
dec
inc
loop
ss
ss
out
test
jmp
jae
mov
arpl
inc
xchg
pop
sub
jb
push
adcb
dec
sbb
cmp
in
test
pushf
inc
leave
lret
pop
lcall
push
les
dec
mov
out
lea
into
gs
int
jb
sbb
mov
dec
inc
mov
and
mov
dec
filds
inc
fdivrl
and
dec
jecxz
xchg
cmpsb
mov
jmp
orl
add
and
mov
cs
mov
enter
dec
in
xor
mov
xchg
pushf
scas
lcall
sbbl
dec
add
xor
and
lahf
ret
dec
fmulp
loop
shrl
or
add
cmp
inc
sbbl
test
lods
bound
adc
and
pop
or
shlb
pop
outsb
add
imul
sbb
test
dec
sub
ja
inc
les
xchg
repnz
push
pop
cmpsb
sbb
sti
fnsave
sbbl
lret
daa
out
pop
and
sbb
call
adc
cmc
and
add
inc
fiaddl
cmc
popa
xor
fdivp
movups
dec
aaa
ret
cmp
addr16
rolb
ret
imul
jge
xchg
push
jp
lds
je
inc
out
push
out
inc
push
push
js
jmp
push
jle
mov
je
dec
sub
out
js
shrb
cltd
cmp
or
add
imul
add
push
sbb
notb
inc
mov
outsb
add
sub
dec
inc
fistl
inc
pop
std
jno
stc
mov
dec
adcb
sbb
ficomps
scas
pop
mov
cmp
loopne
or
loop
rcll
xor
jp
lock
cmp
cltd
sub
sbb
xchg
lods
mov
in
xor
filds
mov
fwait
push
popf
int3
mov
fldl2t
stos
popf
icebp
mov
pop
decl
xchg
xchg
mov
mov
mov
push
cltd
cmc
mov
dec
add
jp
arpl
pop
fsubl
mov
fidivl
rclb
mov
ret
pop
mov
loop
push
aam
mov
fnstenv
pop
lods
mov
stos
int3
mov
jp
sub
rcrl
in
jg
pop
icebp
mov
decl
shr
fsubrs
mov
or
dec
xchg
sub
xchg
push
pop
sub
mov
iret
xor
cltd
gs
adc
scas
and
cmc
fcompl
stos
inc
out
cli
mov
bound
jno
in
sub
mov
out
movsl
mov
pop
addr16
stos
sub
fdiv
push
icebp
mov
pop
adc
rcll
sbb
cwtl
das
jg
mov
xor
sub
lds
cwtl
test
push
inc
adc
mov
adc
sbbb
out
test
add
xchg
ljmp
test
dec
xchg
cmpb
xchg
cmp
pop
repnz
push
cmc
mov
movsb
adc
pop
push
inc
mov
pop
aam
sbb
dec
mov
mov
filds
or
mov
stc
imul
popf
in
or
fsts
mov
or
mov
lea
cmp
dec
in
and
jnp
push
add
inc
adc
aaa
inc
push
addr16
cmp
inc
rcr
cmpb
mov
mov
pop
cmp
jg
popf
scas
pop
xchg
xor
shlb
and
inc
popa
addl
jb
push
mov
pop
xchg
sub
das
addr16
repnz
and
inc
jae
xchg
xchg
xor
repz
jne
daa
bound
pop
xor
add
push
add
pop
xchg
cli
dec
punpckhdq
dec
pop
push
fmull
or
imul
add
daa
mov
or
das
inc
lods
xchg
mov
push
pop
insb
shlb
mov
xchg
mov
outsb
lea
push
fsubl
outsb
dec
and
mov
push
push
add
xchg
js
cmpsl
ret
dec
sub
push
push
lret
mov
stos
fcoms
sarb
jae
lahf
out
or
push
mov
shr
icebp
xchg
push
adc
sbb
pop
mov
ficoml
loopne
mov
pushf
aas
shrb
out
dec
cmc
imul
adc
sbb
or
adc
mov
js
imul
sbb
orl
jge
insb
jns
add
xchg
jecxz
lods
inc
dec
js
mov
out
test
xlat
ss
aad
inc
dec
pop
dec
adc
cli
jne
dec
mov
mov
xlat
scas
xchg
jmp
into
sbbl
mov
jnp
or
fisubrs
sub
xchg
add
mov
es
mov
imull
cmp
mov
xchg
cmp
mov
jmp
mov
lock
sub
movsb
sub
mov
adc
ja
cs
jb
jl
test
repz
imull
mov
test
pusha
sub
push
shrl
ljmp
test
pop
add
pushl
bound
int
and
leave
imul
inc
testl
adc
cmp
xor
and
xchg
mov
and
cltd
stos
adcl
jno
jbe
push
out
das
sbb
fwait
mov
xlat
in
and
push
and
adc
lahf
push
scas
in
rolb
add
dec
mov
stos
xor
xchg
dec
push
fidivl
cmpsb
imul
lods
sbb
fdivl
push
mov
jo
outsl
ss
dec
adc
pop
jmp
sub
orb
sbb
adc
pop
enter
inc
mov
gs
cmp
and
mov
lea
rolb
pop
sbbl
aas
cmp
scas
sbb
inc
rsm
test
push
clc
pop
push
notb
mov
imul
pusha
lret
test
out
scas
bound
add
pop
and
lds
and
mov
jmp
popaw
adc
jmp
xor
adc
push
jns
pop
out
in
jle
pop
dec
mov
xor
sub
mov
fmulp
daa
outsl
cmp
adcl
pop
scas
scas
pop
test
sbb
sub
inc
outsl
popa
or
sbb
dec
dec
xlat
ficomps
push
je
int
jae
pop
mov
mov
pusha
jle
stos
cmp
sub
mov
xor
add
cmp
pop
adc
push
in
pop
ljmp
call
or
sbb
mov
ss
aaa
mov
mov
aam
add
pop
xor
mov
data16
mov
loopne
xchg
mov
dec
pop
or
sub
jae
push
adc
xchg
dec
ja
inc
pop
gs
shrl
xchg
test
or
subb
cmp
jg
pop
or
pop
jno
mov
loopne
push
idivb
mov
cmp
fcmovne
fwait
popa
cmpsb
cmp
out
sub
orl
aas
int3
mov
cmp
imul
inc
in
and
sahf
aas
inc
fdiv
ds
faddl
push
scas
psllw
pop
aad
xor
sub
mov
jae
xor
xor
xchg
cmp
int
and
or
adc
xlat
test
rcll
mov
jmp
add
mov
mov
repnz
fstl
fwait
push
out
push
addr16
fs
mov
sbb
fisubl
adc
cmp
sahf
inc
or
sahf
clc
sbb
in
ret
lahf
insb
add
shr
jl
cmp
mov
outsl
fs
inc
or
aam
shrb
jecxz
pop
xchg
stos
stos
mov
adc
xor
or
push
adc
inc
popa
popa
sbb
inc
aam
std
and
jb
inc
subl
jmp
int3
cwtl
sub
cli
iret
loop
cli
adc
sbbb
mov
xor
push
in
push
addr16
pop
stos
pop
xchg
and
iret
inc
mov
jne
lds
inc
imul
dec
jecxz
insb
hlt
xchg
imul
aad
or
sub
dec
sbb
aas
sub
xchg
mov
cltd
test
fdivl
into
test
add
test
mov
jle
or
pop
xor
push
mov
ja
mov
xor
ret
sub
nop
movsb
bound
xor
add
cwtl
pop
aaa
ret
ja
pop
leave
pusha
push
cwtl
xor
nop
sti
in
je
in
jge
push
pop
sarb
fldt
sub
add
xor
jp
test
xchg
pop
ljmp
jne
rcrb
lods
inc
fmuls
gs
add
mov
into
cltd
lock
xchg
pushl
mov
jb
sti
jno
inc
ljmp
jo
insb
pop
mov
sbb
pop
and
in
clc
push
addr16
cmp
xor
dec
in
fists
mov
or
xor
imul
ds
pop
lods
pop
pop
dec
mov
aas
test
fwait
add
cmc
cld
or
cmp
mov
sub
fcompl
shl
pop
dec
cmpsb
cltd
cld
add
xchg
sbb
xor
lea
sbb
js
out
inc
xor
cmc
aas
push
cmp
push
test
cld
cmpsl
xor
push
dec
mov
cmc
xchg
jle
leave
test
std
push
fnsave
cmpsb
inc
sahf
pop
fstl
fdivrs
enter
sbb
outsl
daa
dec
pop
xor
jnp
mov
jne
mov
adc
mov
sbb
ret
mov
in
ss
sbb
sub
add
xor
sti
pop
loop
cmp
pop
cmc
cs
and
hlt
jo
xchg
mov
jno
fistps
fists
inc
lcall
daa
std
xchg
cmp
outsb
je
insb
sbb
cltd
sbb
xchg
pop
mov
sbb
jae
rcr
or
xlat
lret
cld
mov
fstpl
ret
and
sarb
lahf
rol
inc
lods
push
rcrl
out
cs
mov
jb
xchg
xor
push
mov
sarb
popa
xor
shlb
xor
pop
icebp
std
out
add
add
jle
jae
push
push
mov
mov
setl
inc
lret
cltd
pusha
cmp
push
cwtl
add
mov
rolb
xor
jl
cmp
cmovge
pop
stos
punpckldq
ss
mov
cmpsb
fwait
jb
dec
cmpsl
out
lret
cmp
popf
pop
adc
sahf
test
sarb
nop
or
xchg
cmc
pop
jmp
cmp
and
cli
sbb
notl
add
mov
sahf
lock
inc
shr
insl
add
jle
mov
or
leave
dec
fldcw
fdivrl
lret
or
inc
inc
test
inc
popa
stos
push
mov
bound
icebp
xor
mov
mov
aad
push
cmc
lea
jl
aad
fldenv
add
mov
sub
aad
sub
jae
xchg
xlat
pop
add
jle
pop
cmc
test
scas
mov
adc
cmp
out
outsl
not
sbbl
xchg
cli
jne
popa
ja
imul
fstpt
fs
dec
int3
stos
xchg
lods
iret
cmpsb
iret
sub
aaa
jl
push
jne
jns
inc
xchg
mov
scas
lret
lea
push
ljmp
pop
std
incb
into
xchg
sub
ds
jo
fcomi
test
add
xchg
imul
daa
dec
jne
sub
cvtdq2ps
dec
ret
fbstp
mov
std
jg
pusha
mov
push
test
aam
js
lock
out
sbb
aaa
movb
pop
dec
repz
add
mov
popa
mov
dec
in
xchg
lods
adc
fistpll
pop
xchg
ret
mov
daa
fwait
cmpsl
mov
adc
push
loope
imul
xchg
mov
push
leave
push
sbb
xor
lret
mov
jl
inc
stos
leave
cltd
and
cmpsl
js,pt
fnstcw
sbbb
fbstp
mov
cltd
or
outsb
sahf
clc
ret
inc
aaa
int3
pop
int3
mov
int
push
inc
mov
jno
icebp
xchg
inc
popa
mov
dec
jae
js
ret
cltd
xchg
daa
pop
mov
mov
or
rolb
repnz
cmc
jne
xchg
xchg
leave
xchg
jl
jle
sbb
lds
js
enter
sahf
mov
xlat
scas
inc
lods
cmp
lock
inc
sahf
adc
test
xor
icebp
cmp
and
dec
xchg
dec
bound
xchg
rorl
lea
xchg
scas
out
loope
cmp
pop
repz
jmp
adcb
cmpsl
out
pop
negl
inc
lods
inc
adc
test
jb
xchg
imul
mov
jg
and
xchg
mov
mov
cwtl
out
or
inc
adc
shl
adc
rol
inc
pop
jns
and
mov
sub
lahf
pop
aaa
into
mov
out
lock
imull
ret
mov
rcrl
jp
mov
xor
mov
sti
xchg
and
xchg
and
repz
mov
mov
out
popl
stc
mov
dec
sti
or
mov
xor
push
adcl
mov
rcll
mov
xchg
mov
cmp
mov
xchg
iret
mov
outsl
fbstp
jne
in
insl
xlat
cmp
mov
jb
inc
bswap
xchg
jns
adc
push
jmp
sub
fidivrs
jb
inc
popf
xor
sbb
cmp
sub
mov
push
xor
dec
out
adc
outsb
inc
push
outsb
rclb
sub
insb
sub
xor
cmp
stc
lock
and
pop
pop
jp
rol
jb
loope
out
mov
clc
dec
inc
fs
clc
enter
ds
js
or
xor
add
lret
xchg
test
push
gs
lods
call
into
scas
xor
jno
pusha
in
jnp
lahf
shl
inc
add
sub
cmc
pusha
mov
mov
pop
jmp
popa
fldt
orl
lods
scas
iret
mov
ljmp
mov
xchg
scas
std
aad
test
sbb
int
mov
shr
enter
mov
aam
ss
jle
lds
mov
iret
movups
notb
inc
lret
popa
scas
cmp
stos
mov
std
loope
or
lret
mov
aad
inc
fsubl
js
repz
mov
push
dec
jp
in
mov
cltd
adc
out
mov
jne
dec
arpl
jle
push
or
cltd
cmpsb
mov
test
and
inc
pop
ja
addr16
bnd
mov
popa
inc
loope
adc
push
inc
pop
cmp
pusha
test
out
add
out
jp
xchg
cs
or
mov
scas
cmp
ret
insb
enter
sbb
mov
aas
xchg
jle
or
shrb
ja
mov
lods
in
lea
femms
xor
inc
sbb
cs
lahf
cmp
test
jo
xchg
add
fwait
std
push
rclb
dec
jge
fucomi
jmp
sub
in
add
out
push
mov
inc
jl
or
mov
push
jnp
inc
jle
insb
jno
xlat
xor
int3
mov
rorb
ss
fisttpl
adc
fcompl
jmp
insb
mov
sahf
stos
fwait
pop
sub
lahf
xchg
sub
and
mov
cld
cmp
je
push
cld
ljmp
dec
ds
stc
mov
jbe
or
or
scas
add
push
int3
add
fcompl
shrl
pop
jge
cmp
mov
pusha
mov
push
adc
std
inc
jae
out
mov
or
ret
jle
sub
jbe
dec
cmc
cmp
xor
pop
xor
sub
rolb
cmp
fstl
and
and
mov
push
movsl
in
test
outsb
adc
daa
add
xchg
sub
mov
add
clc
xchg
repnz
nop
sub
adc
mov
jbe
cmc
je,pn
or
mov
sbb
or
ljmp
xchg
dec
ja
mov
imul
movsl
out
jbe
sub
ret
clc
jb
cmp
dec
mov
out
icebp
sub
mov
std
fdivs
stc
pop
hlt
cld
jmp
and
sub
ffreep
test
mov
push
add
cmc
pop
movsb
scas
jo
sbb
jno
and
xchg
mov
push
xor
add
sahf
pusha
shlb
pop
loope
out
por
mov
inc
mov
lds
shll
inc
lock
testl
cmc
lahf
and
mov
sbb
mov
pop
jo
push
adc
bound
xchg
xor
idivl
fbstp
and
cmp
cli
cld
push
aad
ffree
data16
sbb
and
jl
fadd
cmc
mov
mov
loope
push
pop
mov
add
popf
add
test
mov
adc
push
push
inc
aas
lock
mov
cmpsl
add
cli
jg
fsubrs
pop
dec
cmp
sub
aaa
mov
inc
cmpsl
cmp
movsb
or
xlat
pop
mov
sub
lret
adc
push
dec
and
sub
push
pop
xlat
shlb
inc
out
ds
adc
enter
pop
out
dec
cmp
mov
aad
fcmovnb
ljmp
out
addl
dec
fdivs
mov
fcomps
pop
or
pop
inc
adc
mov
jl
aaa
and
inc
cmpsl
movsb
add
lahf
xchg
out
stos
in
pop
iret
shrl
js
lcall
mov
sub
scas
inc
cmpsl
loopne
jne
out
xor
into
mov
fs
je
sub
rcll
mov
inc
mov
pop
mov
cmp
xchg
mov
or
mov
or
adc
lret
mov
dec
dec
iret
out
icebp
outsl
shrl
adc
int
shl
push
or
insb
jbe
cmpsb
pop
movsl
dec
cs
insb
mov
rorb
pushf
outsl
push
mov
cmp
xchg
sub
add
cmp
cmp
in
and
xor
xchg
repz
push
pop
cmp
adc
dec
loopne
mov
sbbl
pop
xchg
mov
mov
pusha
pop
mov
insb
jmp
push
mov
adc
mov
mov
and
nop
mov
xorb
pop
cmp
adc
fsubr
jne
pop
or
mov
sub
movsb
xchg
inc
xchg
push
xor
xchg
ja
sub
mov
sub
aas
aad
lods
jg
mov
call
pop
lock
lods
push
add
ja
sbb
popf
inc
jbe
jge
mov
lods
jle
jnp
js
mov
mov
lea
and
fs
sbb
dec
inc
ret
popa
pop
xor
enter
mov
jmp
mov
daa
adc
popf
popa
xchg
mov
xor
bound
xor
mov
jns
in
or
stos
stc
addr16
pop
sbb
lret
ds
insb
xchg
and
fsubrs
mov
sub
pusha
mov
xchg
pop
fdivl
mov
ja
sbb
sbb
push
ljmp
inc
pusha
pop
aas
mov
jle
mov
cld
push
xor
sbb
arpl
testb
mov
fiadds
cmp
js
add
repnz
data16
test
movsb
repz
into
ss
pop
scas
notl
sub
dec
mov
mov
jle
jmp
lcall
mov
cld
jecxz
jg
push
add
adc
ret
jb
es
fidivrs
sbbl
xlat
daa
stc
pop
je
ret
pop
push
xorb
push
scas
cmpsb
lahf
leave
xchg
xchg
jns
sbb
or
rcrb
pop
setp
in
lods
cmp
mov
sbb
sub
int
fstl
fildll
ja
or
stc
push
add
testl
sub
mov
jg
pop
jbe
cmp
adc
cmp
pop
lock
lret
adc
imul
cmp
sbb
fisubrs
or
dec
xor
jle
cmp
js
mov
cmp
inc
pop
or
ljmp
or
jl
popa
pop
mov
push
rcrb
sbb
cmpsb
adc
stos
xor
cmp
xchg
jne
movsb
cmp
mov
sub
jb
dec
scas
scas
je
imul
jne
ljmp
dec
loop
cltd
pop
sarb
pop
mov
js
adc
mov
pusha
jns
cmp
shrl
jg
lret
fcoml
cmp
divb
jp
xlat
mov
pusha
fidivs
or
popa
add
xchg
push
cmp
out
xor
dec
clc
push
hlt
imul
pop
mov
subb
outsb
jno
loopne
cmp
xchg
add
push
or
scas
push
lret
cld
xor
xchg
cwtl
xchg
sub
cwtl
add
scas
shll
ss
xor
ljmp
shlb
jecxz
or
cmp
ds
insl
fmull
aam
sbb
scas
in
push
or
inc
xchg
shll
pop
cwtl
orl
mov
pushf
ds
scas
incl
sbb
sahf
pop
lds
outsb
jl
pop
mov
push
add
mov
jmp
pop
pop
jecxz
push
and
cmp
in
cwtl
mov
and
mov
dec
orb
pop
pop
sub
aam
sbb
mov
dec
mov
je
or
mov
sbb
imul
push
pop
mov
subl
int
sub
aas
jge
shlb
jo
mov
jnp
sub
imul
jge
xor
xchg
add
pushf
test
mov
call
and
frstor
arpl
mov
sub
lea
clc
cmp
jns
pop
jb
lcall
mov
sub
dec
push
lds
jl
mov
lcall
jbe
fisttps
mov
mov
stc
iret
sub
gs
xchg
sbb
adc
xchg
sub
mov
imul
imul
hlt
pop
xor
xchg
int
push
or
aad
decl
jne
and
mov
fsts
stc
pop
stos
push
push
mov
insb
loopne
mov
mov
bound
xchg
and
pushf
aaa
inc
sbbb
lahf
loop
shrl
cmp
das
iret
mov
add
xchg
mov
pop
aaa
frstor
mov
das
inc
dec
int3
xor
fs
cli
xchg
push
mov
sbb
sar
ss
sarl
push
sbb
fnsave
mov
sbb
rorl
xor
xchg
inc
mov
in
ljmp
and
cld
mov
cli
adc
fldcw
and
xchg
sub
add
jle
xchg
or
add
add
shrl
ds
push
jae
test
sbb
cmpsl
jle
into
iret
mov
pushl
dec
scas
xor
mov
jbe
pop
fisubl
cwtl
and
test
push
xchg
into
gs
daa
jae
xor
sub
push
jae
mov
popf
xchg
stos
inc
xlat
hlt
mov
fists
lods
lea
adc
mov
pusha
repz
xchg
loop
sub
ja
push
ret
cmp
hlt
test
dec
popa
mov
xchg
insl
mov
mov
mov
mov
scas
jp
pushf
pop
pop
sbb
ds
inc
jo
movsl
mov
xchg
lock
mov
or
lds
pop
fldcw
gs
inc
fnsave
adc
cltd
idiv
adc
sub
cli
mov
mov
nop
in
xor
add
push
in
arpl
imul
add
jecxz
fs
lea
test
out
js
lea
scas
push
sub
add
jo
xor
sub
add
fwait
lea
ror
inc
dec
mov
ljmp
sbb
mov
cmp
mov
cmp
mov
dec
popa
lods
call
or
stc
push
push
icebp
mov
sarb
or
or
fstpl
mov
inc
mov
stos
jg
es
and
cmpl
cmp
loopne
jo
ss
pop
mov
das
mov
imul
pushf
roll
adc
test
xchg
xor
xor
sahf
fadds
xchg
push
mov
mov
adc
jp,pn
cmc
push
mov
dec
cltd
pop
mov
add
mov
dec
addr16
dec
mov
push
inc
jae
cmp
push
rcr
test
mov
outsb
or
loopne
int
iret
jo
jp
mov
andl
inc
dec
outsl
outsl
enter
movsb
inc
push
xchg
test
hlt
mov
jg
lcall
sub
sbb
sub
cmp
test
test
out
push
xchg
int
add
mov
int
fistpll
fstl
or
icebp
ja
jno
add
and
aas
int
xchg
xchg
inc
push
or
lahf
lcall
inc
insb
inc
scas
loopne
cmp
sub
lods
inc
movsl
les
xchg
insl
mov
hlt
xchg
sub
ficomps
add
test
mov
pop
in
xchg
pop
push
add
xor
sub
ss
add
in
repz
sbb
pop
pop
sub
lock
fiadds
dec
xchg
loope
outsb
stc
lods
and
fidivrs
pop
inc
sti
dec
adc
sbbl
xor
jb
int3
push
aas
dec
xor
ficoms
out
dec
mov
cmp
fstl
sbb
in
fwait
pop
or
cmp
faddl
fsubrs
or
lea
xor
cmp
sti
lahf
divl
bound
into
cmpsb
dec
jbe
add
stc
inc
cmp
ret
mov
push
cmpsb
push
inc
mov
mov
inc
xor
cmpsl
cmp
cs
mov
test
rcrl
mov
push
inc
pop
mov
sub
inc
loop
xor
push
jo
out
mov
into
inc
loop
out
or
xor
ret
sti
out
adc
pop
xor
out
into
data16
pushf
xchg
imul
repnz
push
test
outsb
scas
loope
aas
orb
jno
sbb
stos
insl
faddl
ljmp
mov
adc
mov
repz
push
aam
xor
xchg
jbe
pop
loopne
test
sbb
adc
jae
jae
mov
xchg
out
add
roll
sub
out
mov
arpl
xchg
fcoms
stc
mov
jmp
xor
inc
fmull
je
xlat
xor
loopne
xor
insl
in
push
sbb
out
icebp
cmp
fstpt
mov
jmp
push
or
jns
xchg
mov
sub
aaa
adc
dec
add
fisubrs
push
cli
adc
imul
mov
in
mov
fbstp
ffree
push
nop
mov
jb
cmp
mov
jg
cmp
push
cltd
push
mov
cltd
xor
mov
or
or
inc
or
int
test
add
movsb
cmp
addl
iret
ret
jmp
lods
pop
xchg
movsl
icebp
lcall
in
mov
popf
leave
outsl
data16
sbb
idivl
xchg
imul
push
stc
bound
insb
test
adc
push
fs
popf
mov
scas
cs
mov
xchg
fdivs
aas
in
lret
fstpt
loope
mov
inc
popf
inc
jae
das
lret
or
in
jno
sub
jb
cmp
dec
dec
adc
call
int3
lods
dec
mov
and
repnz
rep
xchg
inc
inc
negl
fcompl
daa
jle
cmc
ja
outsb
sahf
vpaddb
nop
push
xchg
add
pop
sub
mulb
rol
cmp
aaa
je
ret
rol
int3
in
les
jmp
call
lcall
add
mov
xor
mov
dec
inc
das
icebp
dec
js
inc
push
mov
out
data16
dec
ds
cmpsb
std
pop
loop
mov
fwait
cwtl
mov
cwtl
test
daa
fmull
repz
ret
fildll
mov
or
adc
popf
dec
sbb
pushf
shrb
clc
outsl
arpl
insb
mov
lods
cmp
jb
inc
movsb
mov
insb
inc
xor
ja
sarb
stos
add
scas
or
inc
dec
lret
push
aam
cmp
push
push
jp
andl
outsb
lcall
adc
movsl
sbb
add
ret
lods
nop
mov
jb
jp
mov
sub
sub
out
xchg
popa
mov
or
in
jmp
xchg
mov
push
repnz
outsl
cmp
sahf
cmc
xlat
pop
lods
jo
pushf
scas
aad
fsubr
daa
ret
notb
fsubrs
pop
pop
into
fsubrs
and
cmpb
sub
or
sub
dec
jne
add
push
fiadds
adc
in
inc
popa
int3
and
inc
stos
fdivs
sub
arpl
inc
pop
dec
jmp
ss
push
fs
ds
ljmp
adcl
test
push
push
mov
in
and
ljmp
sub
ja
lods
mov
add
add
stos
cli
rcrl
push
popa
js
dec
jbe
mov
scas
out
push
es
inc
pop
aas
jl
xchg
scas
pusha
loop
imul
call
push
mov
lea
shll
jecxz
cmp
movsl
cmp
cmpsl
ja
dec
ret
ds
hlt
jo
pop
xchg
in
test
movsl
mov
mov
sbb
stc
test
cmp
mov
pushf
pop
les
xchg
push
daa
mov
je
push
or
in
fdivs
adc
xchg
dec
pop
je
ret
mov
cmp
sbbb
sbb
xor
cmpb
fcoms
sub
repz
adc
adc
sti
dec
fildl
inc
rcrb
aam
pop
cwtl
sub
inc
lahf
xor
jo
pop
jecxz
or
jb
pushf
jnp
and
lods
mov
mov
rol
push
inc
insb
dec
jecxz
add
pop
rcr
jmp
mov
ja
data16
ret
push
jae
pop
out
scas
jecxz
in
xor
push
adc
iret
ficomps
mov
scas
divb
daa
adc
ljmp
stos
jne
lock
fadds
outsb
out
lods
ror
mov
mov
push
test
popf
mov
pop
jb
pop
fs
dec
or
cmp
jp
flds
shll
inc
lret
push
out
repnz
push
xlat
xchg
cmp
flds
out
jge
jp
add
pushf
sbb
and
orb
dec
mov
insb
adc
ljmp
ret
stos
icebp
push
xchg
test
movsl
xor
push
in
insl
push
lahf
dec
les
pushf
cli
inc
cmc
jbe
clc
daa
dec
jmp
fldenv
xor
jmp
nop
ficoms
jg
push
lods
cmp
lea
mov
sbbl
cmpsl
pop
das
addr16
not
sub
std
mov
cs
orl
sbb
push
jle
loope
xchg
sub
inc
xorb
sti
jbe
stos
jae
push
popf
mov
out
rolb
add
dec
mov
bound
lock
add
push
cmc
insb
jcxz
pop
fiaddl
dec
lcall
in
cmpsl
ds
cli
cld
pop
aaa
jg
push
jmp
push
popf
mov
das
cmp
add
and
out
gs
xchg
jae
cwtl
cmp
sub
or
cmp
inc
pop
mov
jl
or
xor
or
cmp
stos
ficompl
out
enter
loope
pop
adc
mov
jno
or
inc
xchg
sbb
and
or
dec
shrb
sub
jbe,pn
dec
idivl
sub
mov
imul
mov
ret
notl
es
fwait
mov
jge
push
xchg
push
push
stos
jg
mov
sub
add
outsb
stos
push
dec
and
adc
add
inc
pop
cmp
jle
adc
icebp
xchg
sbb
jle
hlt
sar
add
dec
push
nop
dec
lods
ficomps
int3
leave
xor
jmp
inc
call
lret
shrb
js
in
add
rorl
call
testl
in
lret
pop
fstpt
cmp
xchg
mov
push
lret
xlat
xchg
scas
call
in
jle
aaa
lods
fidivs
add
jle
hlt
sub
inc
push
pusha
add
clc
add
mov
fcmovu
je
xchg
cs
sahf
iret
sti
mov
rorb
sbb
lcall
push
inc
sub
cmp
popa
inc
xor
cmp
sbb
pop
xor
mov
sbb
push
subb
dec
stos
popf
sahf
stos
ret
arpl
push
jbe
test
mov
arpl
xchg
xchg
lds
mov
fisubs
test
test
dec
ds
mov
mulb
add
les
jne
push
xchg
push
ror
repz
inc
popf
sarl
add
sbb
pop
pushf
clc
push
lret
jl
jg
test
adc
in
lret
push
mov
leave
test
jnp
outsb
or
lods
pop
add
test
add
int
cmp
mov
xor
cmpl
nop
test
inc
cmpsb
in
pop
push
mov
movsb
aaa
fldenv
push
or
loop
popa
jg
sub
stc
decl
ss
mulb
add
aam
lods
push
push
sub
mov
out
stc
adc
scas
fmul
mov
popa
xor
pop
pop
inc
cmpsl
cmp
fs
cltd
mov
pop
xor
ss
push
dec
pushf
cmpsb
in
mov
lea
lret
jle
and
lret
jne
jl
in
icebp
or
loopne
test
fdivrl
add
or
sbb
or
dec
popa
jp
fwait
outsb
aas
dec
mov
mov
and
cltd
fsubrs
pop
out
int3
lock
scas
pop
adc
popa
ss
cwtl
mov
loop
fsubl
lods
pop
in
pop
inc
xchg
stos
mov
leave
ss
mov
push
mov
and
popa
adc
mov
bound
int
scas
std
and
fcoml
jne
xorb
test
enter
cmp
in
ja
aam
mov
or
xchg
pop
push
mov
mov
mov
fnstenv
pop
cmp
lods
test
or
in
dec
iret
dec
or
pop
dec
rcrb
rcrb
jb
repnz
pop
jno
xor
inc
mov
or
cmp
sub
sti
pop
loope
nop
notl
test
dec
dec
cmpsb
hlt
mov
or
dec
push
mov
rcrb
fiadds
nop
mov
stos
or
mov
subb
push
dec
mov
ja
out
mov
ja
sti
movsl
jmp
dec
or
pop
xchg
xor
insb
xor
jle
cmp
dec
pop
ja
pop
or
push
iret
push
xor
sub
out
jecxz
in
daa
outsl
or
lods
test
movsb
jecxz
in
imul
nop
in
xchg
adc
sti
mov
jl
push
jae
mov
mov
cmpsb
mov
adc
sub
iret
data16
push
cwtl
in
pusha
push
cli
sbb
mov
shlw
leave
jae
outsb
xchg
sub
aaa
shll
cmp
cmp
addb
out
pushf
hlt
mov
ss
orb
dec
mov
sub
lds
jo
nop
sbbb
addr16
imul
testl
pop
in
test
mov
mov
daa
dec
inc
push
xchg
je
enter
int
into
test
out
sub
rclb
mov
imul
fwait
sub
fsubr
sub
insb
add
mov
mov
jecxz
popa
cli
mov
test
loopne
fs
out
or
jg
xchg
push
inc
adc
jl
add
jne
xchg
imul
sbb
inc
jg
cmp
in
fwait
sti
sbb
cmp
lods
push
sub
xchg
sub
dec
sbb
mov
xor
jp
call
xor
push
addb
mov
or
out
sbb
inc
cmpsb
movsb
repnz
jmp
sub
pusha
push
subl
add
mov
inc
pop
sbbl
das
es
dec
cmpsb
test
mov
sub
jp
inc
inc
enter
popa
mov
movsl
mov
int
push
arpl
mov
rorl
loop
sub
iret
ds
in
divl
fildll
into
imul
das
pushf
or
xor
xchg
std
in
in
ret
fimull
repnz
mov
sub
imul
mov
testl
in
imul
sti
lock
incb
mov
or
loope
xchg
and
repnz
jle
mov
lahf
rcrb
arpl
fmull
adc
inc
xchg
sbb
icebp
lret
add
into
pop
sub
jp
cmp
movsl
lock
xlat
std
push
xor
xor
and
int3
rolb
xor
fadd
dec
out
xor
and
pop
ds
les
imul
out
mov
rorb
dec
push
ljmp
inc
cmpsb
aam
je
frstpm(287
or
add
std
push
nop
cli
and
fisubrl
mov
imul
insl
xor
hlt
mov
cmpsl
mov
adc
stos
mov
lahf
shll
out
jae
loope
mull
addb
add
adc
in
shll
in
adc
call
out
test
fmul
in
mov
fidivs
hlt
mov
xor
rcrl
aas
mov
maxps
pop
out
addr16
push
adc
ret
arpl
inc
push
sub
sahf
mov
loop
out
push
jmp
mov
lea
dec
lret
mov
testl
push
faddl
push
mov
insl
fldt
fildll
cld
hlt
pop
xor
ds
jae
ret
ljmp
leave
xchg
and
popa
or
pushf
test
ret
cmc
fwait
sti
aas
lds
lock
mov
push
popf
mov
loopne
aad
mov
out
push
jno
subb
or
or
lock
push
push
ret
insb
mov
add
fimuls
repnz
sbb
leave
dec
sbb
cmp
sbb
dec
out
test
and
xchg
xor
mov
inc
adc
cmpsl
loop
int3
pop
mov
dec
movsb
pushf
push
inc
or
std
xchg
in
fidivl
push
sub
loop
movsb
mov
hlt
jnp
divl
xchg
ja
js
jo
xor
mov
cld
mov
jecxz
xchg
mov
cmp
inc
fsubp
sub
jns
clc
pop
lahf
idivl
lock
sbb
adc
cmpsl
sub
jns
jnp
add
and
push
push
mov
xor
insl
inc
push
lock
lret
xor
icebp
sub
xor
jnp
xor
cwtl
shl
mov
push
mov
sbb
cmpsb
sbb
sub
and
test
lds
int
sub
xor
xchg
mov
es
insb
jae
jle
nop
insl
bound
pop
jno
cmp
lods
mov
lret
add
imul
jl
lock
jecxz
jae
fs
test
mov
push
fsubs
shrb
sub
and
or
push
insl
scas
or
jnp
lret
mov
cmp
in
leave
out
xchg
xchg
cmp
push
xorb
lods
push
pop
in
mov
cmp
lea
lss
or
jecxz
jns
mov
out
or
add
xor
jle
adc
add
dec
mov
sub
pop
ja
ret
subb
push
leave
pop
mov
sarl
sarb
lea
fwait
shr
pop
sbb
jmp
pop
xor
jp
jo
outsb
daa
mov
into
cmp
dec
inc
loopne
loope
test
mov
test
sbb
cmp
pop
mov
mov
ja
fwait
push
lock
imul
xchg
cmp
das
gs
pop
xchg
push
outsl
add
nop
mov
pop
cwtl
testl
cltd
call
sbb
jbe
lock
cs
jl,pt
vpmacssdql
adc
pop
icebp
cmp
dec
popa
add
sub
sbb
lahf
shr
aaa
lret
popf
xor
cltd
dec
or
push
push
je
sub
jg
dec
mov
mov
mov
adc
mov
jo
xor
add
mov
add
mov
cmp
push
xorb
mov
push
xor
add
inc
orl
adc
je
dec
fmull
sbb
test
push
out
stc
ja
add
mov
sub
movsl
mov
xorb
fstpt
scas
lret
mov
add
mov
std
add
xchg
lahf
mov
cmp
push
adc
dec
adc
cmp
jo
test
jmp
pop
dec
fcomps
mov
shlb
and
adc
outsl
inc
cmovle
push
pop
mov
aam
into
lods
dec
cmc
mov
xor
cmp
dec
adc
dec
mov
and
pop
inc
rolb
imul
out
xchg
xor
sti
xchg
lcallw
out
mov
stos
xacquire
sub
xchg
xor
mov
dec
push
dec
adc
cwtl
loope
push
loop
mov
xor
ljmp
fdivs
jg
test
mov
test
xlat
std
jl
pop
fidivrs
mov
in
sbb
dec
in
imul
imul
mov
cmpsl
dec
rorl
dec
xchg
pop
add
std
or
mov
shr
dec
jecxz
ljmp
mov
and
add
inc
xchg
inc
mov
insl
je
adc
cmc
sahf
jne
int3
pop
mov
mov
mov
adc
mov
mov
xchg
in
xor
ljmp
stos
mov
push
mov
pop
in
jl
push
loop
pop
call
push
mov
bnd
inc
xor
in
stc
ss
add
adc
cmp
inc
xchg
rcrl
cmc
rolb
cmp
mov
mov
push
nop
scas
inc
push
xchg
test
mov
cltd
rorb
jne
orl
int
push
out
test
mov
and
jl
cmpb
fwait
jge
cmp
add
into
pop
fistps
mov
addr16
scas
mov
stos
out
push
dec
stos
dec
outsb
jns
pop
fwait
cmp
fdivs
adc
push
add
fisubl
jns
data16
sbb
push
fsts
leave
mov
aad
and
out
leave
pop
sbb
add
sbb
inc
ret
and
jl
dec
lea
mov
or
and
frstor
and
aam
fs
add
sbb
cltd
test
imul
aam
adc
add
xor
cwtl
push
outsl
adc
jnp
test
sbb
mov
jmp
std
inc
mov
push
arpl
xchg
sti
aaa
decl
test
add
sti
rorb
cmpsl
lock
inc
inc
std
xchg
lods
inc
sbb
shrb
push
xchg
xchg
fadds
test
sbb
ret
push
sub
js
jg
out
xchg
push
mov
movb
addr16
dec
cwtl
push
movsl
lret
pop
and
sub
sbb
jl
xor
cmp
and
std
pop
out
xor
dec
mov
push
jbe
jne
outsb
test
mov
mov
push
jbe
icebp
mov
loopne
push
aas
movsl
sbb
add
jp
hlt
xchg
in
cmp
stc
out
mov
lea
jg
xor
dec
jl
mov
les
call
scas
jg
scas
push
push
mov
sub
jb
sub
jmp
adc
insb
add
sub
decb
imul
sub
jo
dec
jo
sub
or
mov
and
rorl
mov
adc
xor
fs
dec
jl
sub
sti
loope
fistl
lcall
repnz
std
es
push
test
fs
loopne
clc
xor
lods
gs
or
bound
addr16
adc
jae
outsl
xor
mov
mov
xchg
inc
les
outsb
adc
jae
jnp
fxam
ja
ret
cmpsb
and
xor
xor
fsubs
jne
mov
iret
adc
push
das
into
enter
push
idivl
inc
push
clc
xchg
adc
sbb
sbb
xchg
aam
adc
pop
aaa
push
dec
ficompl
arpl
repz
mov
cmp
clc
insb
lds
leave
sub
mov
fwait
jp
add
jns
adc
and
push
or
push
jg
jecxz
cmp
or
mov
in
cld
setb
dec
loop
movsb
mov
pop
xchg
imul
push
mov
mov
les
push
inc
in
jmp
fsubrl
fisubrl
mov
insb
or
push
pop
and
dec
adc
ds
cmpsl
xacquire
cmp
mov
std
mov
or
ret
and
push
sbb
sbb
mov
es
lods
push
movsb
out
push
aas
jmp
fwait
jb
sbb
cli
mov
pusha
mov
push
call
int
fmul
add
pop
jbe
or
dec
stos
xchg
int
cs
sbbl
inc
nop
cmpsb
pop
jmp
in
outsl
xchg
arpl
push
xchg
inc
out
xchg
neg
lds
push
mov
push
xchg
ljmp
mov
xor
adc
sti
sub
imul
mov
stos
out
lret
sub
dec
in
and
scas
mov
daa
xchg
sbbl
out
addr16
test
mov
mov
imul
inc
lods
and
inc
shl
xchg
xor
test
shufps
sub
inc
popf
das
jl
or
pop
inc
sti
dec
int
sbb
repnz
sub
or
and
out
pop
loop
in
fimuls
outsb
xchg
add
adc
iret
into
test
xchg
std
push
mov
jecxz
dec
loopne
into
vmwrite
adc
fistpl
and
jg
push
lock
lods
push
js
and
sub
mov
test
std
xor
push
inc
cmp
jns
mov
inc
dec
mov
fldl
pop
psllw
pop
stos
dec
dec
lret
mov
aad
pop
lds
daa
jmp
out
addr16
test
push
xchg
sbb
xchg
into
mov
add
xor
cmc
mov
test
lret
push
add
int3
mov
adc
adc
ljmp
arpl
scas
cmp
stos
test
push
jns
inc
ret
add
xchg
dec
daa
inc
jle
in
test
addb
and
or
pop
test
stc
int
cmpsb
loop
xor
aas
ds
insb
loopne
inc
bound
ds
in
inc
inc
xchg
push
shr
cld
inc
or
and
addr16
fisubs
or
xrelease
sbb
and
adc
sbb
ds
aaa
lret
cmpsb
push
inc
push
bnd
into
fwait
cmc
xchg
mov
loop
out
pop
mov
rorl
test
inc
adc
outsb
ss
xor
fs
sbb
mov
sbb
cltd
rclb
mov
in
mov
roll
xchg
jb
ror
adc
clc
std
outsl
push
outsb
adc
sahf
xchg
add
jle
cwtl
xor
ret
out
mov
not
ljmp
mov
in
or
mov
sbb
and
cwtl
dec
mov
pop
push
call
pop
movhps
lods
fdivrp
mov
xchg
pop
cmp
pop
outsb
hlt
mov
popf
push
ljmp
xchg
es
je
ljmp
nop
in
outsb
pop
cmp
push
inc
out
addr16
fbld
mov
gs
sub
xor
inc
in
push
int
ret
mov
jmp
dec
jae
add
push
popf
mov
aad
adc
dec
test
imul
jg
popa
imul
adc
jb
pushf
imul
xchg
call
pop
fisubrl
cltd
pop
dec
xlat
sti
je
pop
sbb
aas
mov
sub
mov
out
int
and
aam
pop
insl
int
push
idivb
daa
mov
test
xlat
repnz
orb
data16
xor
ja
sub
ret
sub
xor
add
inc
sub
imul
call
sbb
and
cmpb
mov
jmp
jl
dec
fld
push
mov
cmpl
mov
fnstenv
dec
arpl
lea
jp
lcall
daa
aad
xor
ror
xor
addb
lahf
cs
gs
cs
mov
mov
lods
mov
add
pop
mov
jae
cmp
mov
or
leave
mov
sarl
pop
xorb
pop
mov
push
cmp
fnsave
inc
sbb
lcall
mov
ret
lret
add
leave
mov
fistl
jmp
sbb
cld
rol
test
sbb
adc
mov
push
lock
movsb
sti
jbe
movsb
imulb
lret
jmp
lahf
and
gs
fistps
push
xchg
jbe
dec
mov
jg
xor
les
pop
mov
jo
insb
lret
add
mov
mov
jle
adc
arpl
cmp
ja
xor
lock
dec
mov
cmp
andb
add
lock
cmpsl
xchg
dec
adc
repz
adc
inc
scas
and
aam
cld
inc
jbe
repz
push
subb
pop
jecxz
sbb
pop
sbb
xor
repz
mov
popa
sub
repz
inc
arpl
out
xor
xchg
jae
stc
int
and
out
adcb
scas
stos
cmpl
inc
ds
enter
mov
fldcw
fwait
sbb
xchg
cmp
lret
out
cmpsl
dec
jle
insl
jo
pop
mov
xorl
sub
mov
jle
and
push
shrl
adc
test
or
cwtl
inc
push
push
cwtl
mov
adc
jl
sbb
or
sar
or
negl
mov
cmpb
pushf
sbb
jl
lret
rorl
shrb
cmpsl
pop
out
pop
pop
adc
ss
add
inc
cltd
sub
push
ljmp
mov
mov
cmp
xor
ljmp
xchg
fsubrl
lret
mov
sub
or
jge
xchg
dec
stos
xchg
jge
insl
push
popa
int
pop
orl
jae
movsl
fs
jo
loope
add
lahf
rclb
clc
mov
mov
ljmp
pop
in
cmp
fcomip
xlat
divb
nop
lea
mov
mov
xor
sahf
xchg
jp
add
arpl
and
dec
adc
jp
push
mov
shr
stos
pop
mov
in
mov
fst
jmp
gs
rclb
add
aas
outsb
mov
mov
lret
mov
mov
push
repnz
mov
push
sub
stc
or
jp
ds
mov
pop
call
jne
lock
cmp
fmuls
sbb
add
dec
sti
out
adc
mov
in
push
jne
mov
rcrl
and
pop
adc
mov
les
jecxz
iret
jecxz
jns
dec
bound
jmp
cmpsl
pop
pop
jnp
test
or
jecxz
mov
mov
and
jno
stos
aas
push
push
clc
repz
sbb
push
sahf
lock
outsl
fbstp
mov
dec
repnz
xchg
out
notl
lods
pop
mov
lods
cmp
test
ret
xor
dec
xlat
sahf
push
mov
mov
mov
sbb
sti
add
inc
imull
int
sti
lea
cmp
mov
adc
mov
popa
or
cmp
adc
mov
push
mov
arpl
pop
sub
aad
inc
fstp
sbb
and
scas
add
loopne
stos
xor
andb
out
shl
pop
dec
pop
jne
cmp
jbe
mov
inc
push
and
sbb
repnz
test
insl
scas
xchg
mov
sbb
adc
popa
pusha
add
jle
mov
loope
mov
xor
inc
push
jno
lret
cmp
or
daa
fwait
inc
add
and
int3
mov
xor
jp
std
pushf
stos
pop
push
int
inc
xlat
or
fmulp
pop
pop
pop
cmc
mov
mov
and
adc
in
sbb
negl
loop
movsl
cltd
jmp
dec
clc
fmull
lcall
cli
es
test
je
xchg
testb
stos
ja
pop
mov
xor
mov
test
dec
ja
jle
insb
rclb
daa
fwait
pop
inc
dec
and
popf
das
pop
jb
mov
xor
or
pop
scas
xchg
sub
not
push
fidivrl
dec
cld
mov
sar
xor
lods
and
dec
test
and
stos
fildl
gs
rcr
xor
push
je
jg
cmp
mov
out
sub
test
sbb
sub
shrb
jecxz
sbb
pusha
push
test
inc
int
movsl
sbb
js
lds
dec
insl
or
cmp
xchg
aam
mov
jmp
mov
outsl
in
xor
mov
xchg
nop
and
insb
out
movsb
dec
ret
jge
pop
pushf
sbb
pop
jge
shl
xchg
dec
loopne
popf
pop
mov
jmp
outsb
jbe
xor
sub
nop
xchg
push
mov
pushf
mov
mov
call
xchg
mov
push
mov
imul
xor
mov
lock
into
call
adc
in
arpl
and
arpl
push
or
pop
mov
pop
shll
rol
je
repnz
lea
pop
or
xchg
mov
ret
add
inc
notl
sbb
jb
data16
or
mov
cmp
call
aam
scas
sub
sub
cmp
cmp
add
inc
xchg
jae
pop
adcb
mov
ljmp
add
test
xchg
test
mov
loope
orb
or
pop
push
or
or
outsl
imul
push
movsl
dec
push
outsl
pop
xchg
outsl
sub
fidivrl
bound
idiv
sub
cs
mov
outsb
push
jne
imul
mov
push
mov
fsubrs
shrl
push
fst
mov
or
pop
pop
scas
in
jge
das
push
insl
rcr
dec
loop
sbb
shll
rcr
lea
repnz
cld
stos
int3
test
mov
inc
andl
lock
mov
fsubrs
xchg
clc
inc
jg
jb
fsubl
fcoml
sub
pop
mov
cmpsb
ja
mov
xchg
daa
call
jo
test
or
xchg
enter
imul
shl
cmp
xor
into
mov
aas
jge
icebp
scas
pop
repnz
or
dec
loope
xchg
jbe
out
lock
fcmovnb
mov
jge
addr16
sub
sub
sbb
pop
leave
mov
hlt
fidivrs
sub
add
fcomps
dec
dec
push
insb
jno
aam
jmp
push
test
and
jns
int3
add
jbe
notb
dec
sbb
punpckhdq
add
adcl
and
jns
aaa
and
jo
jp
cwtl
popf
andl
movl
mov
sub
or
daa
jne
in
cmpsl
int
jg
movsl
das
jbe
js
xchg
and
je
pop
push
test
lods
and
sahf
loopne
xchg
push
mov
hlt
fs
fmul
loopne
sub
xor
jmp
and
test
cmp
sarl
aam
or
sahf
mov
es
cmc
sbb
push
or
cmc
je
and
cmp
stos
fsubrs
and
sbb
inc
inc
xor
inc
or
int
push
imull
mov
scas
gs
cmp
ds
cmp
js
or
fs
push
lret
int
sarl
dec
push
and
mov
imul
and
xchg
mov
in
xor
decl
enter
sbb
and
jg
and
mov
mov
mov
call
in
outsb
jl
aas
mov
test
ret
aad
incb
or
or
cld
imul
test
push
cmp
imul
call
std
aas
test
pop
icebp
movsl
pop
daa
pop
repz
jns
hlt
inc
push
ja
iret
les
pop
rorb
sbb
insb
insl
std
push
ss
sbb
iret
sub
rep
movsl
lds
xchg
mov
popf
xor
out
xchg
mov
xor
mov
jmp
idivl
cmpsl
sbbb
jle
aam
sub
and
addl
dec
dec
or
lahf
jmp
inc
out
push
nop
xchg
cmp
adc
jb
mov
cmp
stc
fwait
cmpsb
loope
mov
rclb
push
stc
popa
push
arpl
xchg
push
in
shll
je
rcll
stc
push
jl
mov
fdivrs
pop
cmc
stos
pop
inc
pop
mov
jge
movsl
mov
and
inc
push
outsl
out
add
js
sti
cmc
dec
sbb
ror
cltd
xor
mov
repnz
cltd
cli
mov
stc
adc
push
push
mov
mov
jl
insb
mov
xchg
fcompl
int
ljmp
sub
sbbb
lea
test
or
or
xlat
stos
add
jmp
scas
push
xchg
and
fdivs
pop
cltd
stc
jae
out
nop
daa
push
push
scas
jb
add
aaa
or
sbb
and
adc
lahf
lds
jb
cmpsb
push
xchg
mov
ss
int
and
mov
pusha
cmpsl
sbb
lock
jae
aaa
push
cwtl
incb
faddp
and
fwait
mov
mov
dec
movsl
inc
jmp
sbb
leave
sahf
mov
add
andb
mov
lcall
int3
pop
cmp
pop
icebp
dec
loopne
mov
addr16
jmp
mov
add
push
and
insl
clc
fmul
mov
js
cld
ljmp
subl
mov
into
shll
mov
mov
aas
push
sbb
cmp
es
pop
in
or
mov
xor
pushf
test
orb
sarl
xchg
faddp
imul
push
aas
fwait
ret
roll
sub
or
adc
jl
lock
push
shlb
sub
cmpsl
sub
cmp
outsl
xchg
in
mov
rcrl
mov
xor
stos
out
shll
sahf
addr16
and
mov
pushf
test
loopne
testb
test
insb
and
and
icebp
xchg
clc
in
vphadddq
xchg
jp
jo
add
std
lcall
in
add
movsl
jg
pop
popf
clc
addl
sahf
mov
cmp
je
mov
insb
repz
cli
loopne
test
bound
ja
aaa
cs
lods
inc
jmp
cmc
mov
push
inc
imul
loopne
push
dec
popa
pop
xorl
sub
jmp
xor
stos
mov
jb
leave
push
jg
arpl
pop
adc
xchg
cmp
dec
aam
adc
je
les
fidivs
jge
pop
cmp
mov
jb
jns
and
cmp
cltd
enter
pop
stc
jp
sbb
jle
aaa
jle
xchg
adc
push
inc
push
cs
aas
push
test
negb
adc
mov
push
insl
les
pop
orb
dec
lock
inc
push
test
mov
xchg
push
sbb
in
mov
mov
lahf
lock
add
mov
jp
popa
mov
dec
icebp
pop
lret
jbe
dec
movsb
sbb
lds
mov
imul
add
jp
dec
lret
aam
imul
nop
adc
pop
mov
or
rorb
xchg
adc
dec
and
pop
subb
mov
popf
movsb
aaa
sub
sarb
mov
cmp
adc
repz
pop
ret
imul
das
fmull
call
or
pop
dec
cmp
jnp
lods
inc
pop
popf
or
xchg
adc
js
mov
push
notl
push
xlat
leave
sbb
cmp
outsb
pop
dec
mov
or
push
pop
test
push
mov
xchg
js
lock
hlt
popf
and
and
stos
fmuls
jmp
es
sub
rcll
outsl
loop
sbb
push
scas
pop
jno
xchg
imul
dec
in
aam
fbld
insb
shrb
ja
nop
test
test
cs
aam
jbe
ret
movsl
dec
in
jnp
aaa
mov
out
pop
jb
inc
scas
in
ret
fucomi
jg
and
mov
cmp
xchg
push
push
add
pushf
imul
out
int
sub
jle
mov
rcll
add
andl
or
mov
adc
in
repnz
in
je
cli
jl
test
rcr
out
cli
insb
jl
and
insb
mov
lcall
out
ret
repnz
sub
pop
adc
rcl
aaa
adcb
pop
int3
pop
or
cltd
cmp
loopne
adc
cld
xor
xchg
cld
xchg
les
mov
mov
lcall
pop
insb
sub
sarl
mov
loopne
mov
mov
xchg
jl
gs
sbb
loope
xor
ror
cmpsl
lea
xchg
ret
out
or
or
popf
or
cwtl
cmp
filds
iret
out
xor
frstor
mov
and
jl
push
jne
sub
enter
inc
inc
lret
xchg
sub
or
dec
mov
gs
and
das
insl
jmp
pop
out
xor
mov
cwtl
sub
mov
mov
outsb
dec
out
xchg
lcall
ret
sti
dec
jp
leave
jno
mov
sub
jl
or
and
sahf
pop
inc
push
dec
push
push
mov
jb
add
popf
hlt
mov
rcr
pop
aad
jmp
mov
out
cmpsb
rclb
aaa
add
out
enter
mov
jbe
and
mov
std
mov
mov
leave
xor
repz
sahf
pop
sbb
out
inc
pop
imul
sbb
sub
push
movsl
xchg
jp
clc
and
arpl
mov
and
xchg
les
inc
cmpsl
sbb
out
cmp
push
push
dec
loop
outsl
mov
dec
lahf
dec
fcmovnb
outsb
cwtl
loopne
dec
mov
pop
mov
aas
mov
inc
in
pusha
outsl
xchg
shr
leave
nop
sti
xchg
ret
jmp
pushf
mov
mov
lods
jnp
bound
jb
jno
jbe
cs
add
cmpsb
xchg
mov
add
jg
into
inc
and
dec
mov
frstor
adc
add
icebp
mov
in
movsl
dec
pop
pop
add
xchg
mov
add
xchg
jns
sub
cs
cld
std
inc
or
xchg
sub
mov
cmp
cmp
sbbl
sbb
mov
imul
aam
jae
xchg
cmc
and
cmp
fwait
cld
sbb
mov
les
popf
adc
aad
jbe
js
or
jg
jmp
jle
mov
nop
std
leave
add
mov
pushl
or
and
punpckldq
out
in
inc
neg
xchg
hlt
js
mov
or
xor
sbb
or
dec
mov
pop
sub
leave
xor
xchg
into
enter
adc
add
imul
icebp
mul
push
pushf
hlt
lods
clc
mov
jl
jmp
sub
jo
aas
push
mov
dec
jg
test
sti
mov
leave
pushf
cli
push
pop
mov
cmp
cli
fidivs
rcrl
js
subl
jne
clc
popl
test
adc
sbb
jae
into
sub
pop
lahf
in
cli
das
cmp
insb
call
cmpsb
pop
cwtl
cs
dec
fildll
jp
std
stos
cmp
bound
push
stc
or
movsb
mov
jl
mov
stc
pop
imul
fsubrl
stos
in
dec
loop
push
lret
jb
inc
imulb
cli
test
xor
and
hlt
inc
mov
xlat
and
jns
pop
or
xchg
aam
ss
pop
sub
mov
scas
std
jl
inc
jl
push
loope
mov
sub
pop
scas
adc
xchg
into
rol
sti
test
cltd
stos
rolb
shll
ja
enter
pop
inc
fsts
jp
lds
cmp
pop
and
xchg
insl
cmp
dec
sub
lahf
ss
dec
out
mov
lret
or
add
push
pop
push
sub
pop
test
or
cmpl
mov
cmpsb
divl
xor
adc
ret
pop
mov
insl
push
add
popf
sub
jmp
mov
ss
stc
cmp
sbb
test
test
in
cmp
test
clc
pusha
add
dec
cmp
mov
out
jae
dec
arpl
push
imul
andb
data16
leave
insb
sti
xchg
je
out
or
mov
cmpsb
sbb
pop
andb
xchg
sub
scas
push
shr
sbb
cmp
jp
cs
rcr
inc
or
inc
andb
fs
test
add
jae
adc
xchg
or
adc
push
inc
into
dec
mov
out
arpl
call
repz
fwait
push
push
xchg
sbb
dec
jb
popf
push
adcb
cwtl
jo
mov
cmpsl
dec
in
jb
and
insb
adc
cli
stc
sub
sub
mov
std
lret
or
cmpsl
and
aad
add
pop
iret
jo
or
in
xchg
mov
fst
sbb
push
mov
push
and
push
jo
push
add
jns
pop
aaa
push
xchg
addr16
pop
rolb
aaa
daa
insl
out
inc
flds
pop
ja
out
repz
sub
loope
jp
cs
jle
add
push
insl
ds
mov
call
fisubrs
outsl
pop
repz
lret
cmc
popf
ficompl
push
leave
bound
and
decb
test
or
sub
sub
add
adc
out
hlt
xchg
push
push
rcl
ljmp
scas
push
jno
mov
lods
ljmp
cmc
mov
cmp
dec
mov
or
loope
ds
cmp
repnz
or
dec
popf
cmp
push
js
fimull
stc
neg
insb
sub
jp
jno
popa
test
fnstcw
mov
and
jns
xchg
shll
mov
outsb
cmp
sbb
push
dec
out
ret
hlt
jne
mov
call
jmp
pmuludq
or
pop
dec
das
lret
mov
lret
in
movsl
lods
arpl
dec
add
push
imul
punpckldq
nop
inc
add
cli
or
jp
lea
xchg
outsl
push
out
mov
outsb
push
cld
xchg
aaa
pop
xchg
jbe
idivl
and
xchg
addr16
sub
lcall
mov
out
dec
je
sbb
fisttpll
push
xlat
int
aad
xor
cmp
dec
mov
cmpsl
popf
pop
xlat
movsb
int3
fcom
jg
inc
push
sbb
and
mov
mov
mov
or
or
daa
push
cmp
testl
fsubs
leave
mov
sub
xchg
fnstenv
sbb
mov
mov
xchg
xchg
push
mov
fdivrl
pop
ret
data16
rorb
pop
push
push
out
mov
or
inc
mov
push
dec
xor
bound
dec
lea
movsb
jae
es
lret
fidivs
push
push
mov
icebp
rcr
testb
pop
les
les
insb
cmp
lods
lcall
mov
pop
xchg
rcrb
mov
scas
push
push
stc
pop
sbb
stc
add
or
fbstp
ja
cmpl
or
push
cli
push
mov
and
popa
clc
pop
or
pop
pop
dec
mov
sub
fdivrl
clc
dec
cmp
sbb
pop
inc
sahf
sub
mov
mov
pushw
lods
cwtl
mov
popa
or
rclb
push
stos
sub
pop
adc
dec
lret
lods
xor
sbb
xchg
pop
scas
fs
cmpsb
xchg
lods
push
sub
and
fsubs
jae
pop
mov
je
inc
fadds
mov
sbb
inc
ret
xor
mov
stos
xor
lahf
cltd
test
cwtl
sbb
cmpb
jmp
ljmp
movsb
cmp
cmp
loope
sub
out
dec
sbb
int
es
jno
inc
shlb
jnp
add
cmp
pop
repz
push
adc
lcall
popa
cmp
xor
cli
nop
mov
lret
insb
bound
cli
repnz
dec
mov
stc
nop
push
aad
out
mov
mov
cli
mov
xor
shlb
fsubrs
mov
call
inc
stos
xchg
push
xchg
call
sbb
add
aam
pop
pop
jb
es
pop
aad
cmp
jg
ficompl
pop
inc
add
jbe
loopne
jae
das
mov
iret
movsb
sub
mov
mov
add
rcr
push
cmc
mov
hlt
adc
push
inc
mov
cwtl
sbb
in
mov
jnp
ljmp
das
cmp
or
imul
xchg
sub
jae
mov
incl
out
je
shlb
or
inc
lea
pusha
test
push
sbb
mov
pop
lds
jge
in
cwtl
mov
dec
add
dec
and
outsl
out
push
dec
outsb
xchg
sbb
and
pop
adc
addr16
orl
sub
fs
jns
in
clc
push
icebp
sub
stc
xor
fisubl
into
adc
fs
pop
and
mov
sarl
sub
shl
lcall
mov
aam
lock
push
or
fwait
mov
pop
push
sbb
sbb
iret
fdivrl
popa
fcompl
xchg
ja
cli
addr16
and
dec
xlat
pop
ds
xchg
jmp
sbbl
sub
or
add
mov
xchg
roll
rcrb
jno
jne
sbb
jo
xor
mov
and
sub
inc
fwait
test
sub
inc
fstpt
adc
push
andb
add
repz
stos
iret
inc
popf
repnz
popf
jbe
ror
mov
pop
inc
push
mov
fdivr
push
adc
jo
jecxz
dec
mov
or
insl
xorb
jg
and
out
rclb
cwtl
data16
jae
and
pop
aas
mov
repz
call
xor
xchg
push
fsubrs
insl
or
dec
mov
fcmovnbe
push
jae
or
pop
adc
jle
mov
adc
pop
pop
mov
pop
jns
adc
lret
leave
push
mov
cmp
sbb
je
and
dec
dec
sar
inc
sbb
in
sahf
ds
add
call
in
in
sub
test
adc
std
sbb
lret
out
xor
jmp
insb
xor
call
or
lahf
xor
mov
outsl
stos
mov
dec
or
sarl
rorl
push
jmp
push
pop
mov
lds
lods
hlt
jmp
xor
pop
in
bound
pop
add
rorl
pop
or
lods
inc
movsb
xor
xor
fsubr
or
test
add
push
fimull
pop
pop
mov
adc
cmpsb
ja
jecxz
out
jl
push
out
jb
xlat
cmp
out
adc
mov
dec
push
push
icebp
test
call
nop
dec
sub
iret
mov
shrl
lods
push
movsl
inc
add
mov
inc
rol
frstor
sbb
xor
jg
mulb
idivl
push
sub
pop
insb
fistl
push
inc
addr16
imulb
roll
scas
xor
or
mov
outsl
xor
inc
fdivrp
insl
roll
pop
addr16
insb
movsb
in
lea
cmp
enter
data16
lret
lock
and
stc
cmpsb
cld
scas
mov
push
mov
sub
leave
cmp
mov
dec
sbb
jo
shrb
inc
mov
xchg
rclb
mov
mov
sub
xor
and
loop
jp
fnstsw
mov
pop
movsl
cld
mov
pop
std
jnp
popa
scas
sbbb
or
adc
cld
lcall
jne
out
and
test
adc
sbb
pusha
hlt
push
lret
sar
in
js
fsts
jb
pop
jmp
jp
and
faddl
jnp
sbb
sbb
pop
sub
sbb
dec
push
fs
xorb
mov
sub
enter
jns
sbb
xor
push
xlat
cmp
xor
popa
pmulhuw
and
xchg
mov
ljmp
aas
or
mov
loop
jp
xor
or
adc
fcomps
pusha
or
adc
sbb
popa
push
test
and
hlt
call
aad
arpl
add
fmull
xchg
movsl
sub
iret
mov
lahf
and
addr16
pop
shl
jb
pop
int3
lret
ljmp
push
xchg
jmp
fcmovb
ljmp
cmpsb
fidivrl
xchg
ret
dec
jle
mov
mov
icebp
insb
mov
pop
rol
fidivs
hlt
xchg
sub
fwait
sub
popl
sbb
cli
lods
mov
jg
popf
xorb
add
xchg
sub
inc
icebp
sub
add
xchg
repz
sbb
scas
les
adcb
stos
or
push
dec
jbe
jle
sub
adc
jmp
bound
and
jmp
stc
or
inc
xor
pop
pop
push
loope
lret
loop
jge
or
call
push
sbb
dec
or
loopne
fwait
inc
inc
xorb
add
jge
mov
aad
sbb
inc
je
fucomp
shll
lods
mov
das
pop
outsb
lret
push
inc
pop
enter
in
je
pop
std
jae
in
ljmp
sbb
shll
inc
stos
out
sarl
jns
cs
mov
lea
inc
pop
xor
dec
lds
imul
adc
ja
push
xor
scas
add
xchg
or
out
mov
hlt
and
pop
dec
lret
sti
jo
jl
xchg
test
add
sarl
aam
lock
mov
cmp
inc
sub
bnd
mov
mov
test
leave
subb
push
sahf
add
sahf
and
mov
jbe
cmp
mov
push
mov
in
outsb
push
test
das
loope
mov
sbb
add
movsl
js
inc
sahf
lods
std
jecxz
xor
sbb
lcallw
ret
lret
lea
cltd
jno
and
sti
fbld
psrld
aad
mov
jecxz
test
lret
dec
movsb
ds
andb
cmp
pop
shl
subl
add
arpl
adc
daa
and
cmp
int3
mov
sbb
pop
mov
and
jge
imul
xchg
bound
jl
ds
sbb
sbb
flds
inc
add
out
cmp
inc
dec
in
fistl
fiaddl
mov
mov
in
cmp
in
mov
notb
scas
add
lods
mov
xchg
mov
dec
jns
pop
mov
xchg
inc
ds
sub
xchg
mov
imul
adc
aaa
bound
pushf
xchg
test
lods
mov
icebp
mov
mov
mov
pop
in
mov
movsl
push
and
sub
xchg
dec
xor
cmp
mov
sbb
arpl
or
mov
sbb
jne
sbb
dec
xor
inc
jp
and
cmpsb
inc
mov
iret
arpl
cmpsl
divb
xchg
dec
idivl
sbbb
cltd
repnz
loop
aas
push
mov
fisttpl
add
mov
add
push
mov
sbb
inc
lret
gs
inc
or
loop
push
push
stos
cmp
dec
add
cltd
out
jle
ss
gs
fsubrl
push
push
das
and
stc
int3
mov
and
out
in
cmp
fsubrs
pop
iret
mov
push
inc
dec
cmp
add
xor
sub
dec
orb
adc
movsl
xchg
stos
mov
in
ret
fidivl
sbb
lret
repnz
inc
pusha
movsb
mov
imul
push
xor
stc
sub
leave
jmp
mov
xchg
push
add
push
and
jo
sbb
gs
and
outsl
pop
out
lret
and
push
sti
pop
xlat
cvtdq2ps
sub
dec
lret
int3
scas
lret
cmp
inc
inc
shll
ret
popa
in
and
scas
nop
inc
popa
sar
push
jmp
add
sahf
testl
movsb
imul
fwait
cmc
cvtpi2ps
mov
es
das
add
cmc
fneni(8087
mov
adc
xchg
cs
sbb
jae,pn
ss
dec
cli
xchg
outsl
mov
lock
ret
outsl
mov
push
lret
mov
mov
inc
clc
adc
jg
push
cs
jge
inc
sahf
lods
xor
filds
call
jmp
out
push
fdivr
popa
push
sub
fpatan
sub
jl
and
divl
test
sti
aad
lahf
push
adcl
pop
mov
and
jge
stos
addr16
xchg
sbb
mov
hlt
mov
pop
mul
add
lds
inc
push
arpl
pop
lret
inc
stos
clc
cmp
sbb
xor
scas
pop
ror
lret
sub
mov
push
in
sbb
mov
and
pop
adc
mov
ficompl
jb
inc
enter
ljmp
sub
cmp
fninit
xchg
push
sub
rcl
sbb
sbb
insl
loop
mov
ja
inc
imul
push
cwtl
pop
jle
int
ja
aam
adc
sub
inc
cmp
and
std
mov
sbb
loope
ds
in
int
negl
sbb
addr16
popf
push
fldenv
jns
push
fwait
movsb
cmp
orb
popa
mov
pop
add
or
enter
hlt
mov
dec
add
aaa
ss
or
imul
loope
push
sti
cmp
cmpsb
xchg
outsb
push
sti
outsl
xchg
push
es
jg
aad
loopne
dec
jecxz
test
inc
mov
cmp
hlt
add
push
test
and
movsl
cmpsb
inc
jle
test
dec
lods
out
ljmp
stos
xchg
xchg
xlat
stos
xlat
adc
push
jne
jg
pop
inc
dec
jle
leave
sbb
mov
mov
xchg
mov
dec
jnp
movsl
inc
dec
out
movb
xorl
pop
xchg
sbb
or
mulb
mov
loopne
push
cmp
add
test
inc
jecxz
mov
nop
dec
out
sti
out
orl
sub
sbb
sti
mov
push
dec
jo
mov
lock
mov
push
and
stos
jmp
inc
hlt
test
mov
xchg
cmpsl
clc
xchg
mov
xchg
test
ret
mov
outsb
mov
fwait
dec
mov
divl
inc
ficomps
js
fdivl
data16
jmp
test
daa
and
data16
push
imul
dec
push
pop
push
in
nop
xchg
sub
mov
fldl
inc
imulb
mov
test
shlb
push
das
add
lods
mov
mov
sub
insb
dec
sti
stos
lret
cmp
fbld
or
jmp
sub
pop
push
cltd
sarb
dec
or
lods
pop
xchg
sti
mov
mov
or
mov
nop
daa
push
mov
mov
add
andl
mov
fcompl
add
mov
add
cwtl
xchg
jecxz
mov
add
jne
dec
es
sub
and
pop
in
push
jecxz
cmp
add
leave
outsl
cmp
mov
mov
fucomi
cs
dec
jecxz
lods
mov
push
add
sub
pop
pop
cmpsl
out
or
testl
mov
mov
dec
inc
andb
xchg
loop
out
sbb
out
lret
push
call
xor
popa
addl
lods
mov
mov
sub
and
pop
pop
ljmp
negb
mov
iret
les
stc
mov
xchg
sub
mov
cmp
dec
fsubrs
xchg
dec
cmp
xchg
jecxz
cmc
mov
sub
inc
div
add
xchg
inc
pusha
push
cmp
mov
dec
inc
in
mov
repz
mov
ss
mov
lds
cli
int3
testb
call
or
icebp
push
dec
pushl
movsl
lods
cmp
insl
push
add
into
out
sub
xor
fs
or
int3
lret
mov
fyl2x
rorl
call
xor
dec
imul
fcompl
sbb
ljmp
insl
pusha
sub
mov
push
mov
xchg
std
cltd
icebp
ds
adc
pop
pop
push
stc
xchg
lods
mov
scas
jp
jns
dec
and
cmp
imul
xchg
mov
clc
and
inc
add
dec
out
fld
addr16
sbb
nop
lret
jo
lea
imul
das
adc
add
push
xchg
outsl
cs
cmpb
outsl
xor
inc
adc
jmp
es
icebp
jmp
adcl
lods
pop
dec
push
mov
pop
icebp
outsb
sbbb
adc
insl
jge
adc
add
inc
in
xchg
mov
loope
cmp
jp
xor
push
dec
hlt
cmp
ljmp
mulb
hlt
mov
or
mov
in
dec
push
sbb
fisubrl
bound
push
jns
mov
mov
imul
je
test
in
xor
jnp
and
in
in
and
decb
lea
push
imul
fmul
ret
das
mov
pusha
in
decl
mov
ja
pop
stos
jl
popf
xchg
sub
imul
imul
or
sbb
jp
jp
push
pusha
push
inc
add
js
out
popa
js
aas
stos
adc
mov
cmp
test
sti
xchg
xor
add
mov
xor
pop
popf
enter
dec
ds
lds
mov
daa
xor
test
out
js
mov
out
rorb
xchg
sub
inc
test
jmp
dec
ficoms
xlat
adc
or
pop
scas
jmp
mov
mov
add
add
je
jl
pusha
lods
pusha
sbb
xchg
popw
test
test
xchg
in
fwait
outsl
jo
jno
and
les
leave
mov
dec
push
leave
add
imul
aam
jg
fmuls
push
popa
fisttpll
push
push
sarl
shr
stos
ds
cmp
cltd
mov
outsl
jmp
pop
mov
outsb
sub
loopne
outsl
cmc
je
and
xchg
ret
addb
loope
arpl
mov
es
sbb
cmp
and
ss
add
add
fistps
scas
add
mov
mov
push
cmp
insb
sbb
pop
inc
push
sub
out
xchg
or
mov
fidivs
movsb
sti
mov
sub
es
int
sub
pop
push
cmpsl
cmp
ret
fsubrp
std
icebp
rclb
mov
popf
out
pop
lock
data16
cli
test
sbb
mov
mov
fisttpl
std
adc
pop
in
test
int3
mov
mov
inc
nop
jb
outsb
push
push
iret
testl
dec
test
lods
jle,pn
cmp
repnz
stc
popa
sbb
repz
sub
xor
cltd
inc
cwtl
repz
mov
jp
negb
mov
aad
mov
jecxz
daa
mov
pop
in
jg
scas
cmp
outsb
cmp
jge
sarb
lea
incb
test
inc
push
inc
out
out
add
fcompl
sub
testl
fsubrs
push
add
div
mov
imulb
push
int
popa
inc
adc
inc
shll
call
xchg
jecxz
lcall
xchg
lea
jae
lds
fldenv
sub
xor
jns
inc
inc
or
test
sbb
in
hlt
mov
jmp
out
pop
in
mov
negl
cmp
lock
add
sbb
inc
sbb
pop
cwtl
cmpsl
mov
mov
push
cmp
mov
fnstcw
add
out
inc
cmp
test
push
mov
int
xor
sbb
mov
stos
pop
mov
inc
movsb
outsb
mov
in
xchg
sarb
push
test
inc
pop
aaa
arpl
cmpsb
lock
pushf
mov
inc
and
push
sbb
push
mov
jne
repnz
xchg
xor
das
add
popa
rcr
roll
cmp
out
test
sbbl
jb
rcrb
shll
jns
pusha
mov
xchg
push
mov
fstpt
stc
xor
testl
sbb
add
add
pop
sub
lods
adc
mov
mov
sahf
outsb
sub
cltd
push
lods
repnz
mov
or
enter
insb
ss
test
or
sbb
adc
mov
mov
sti
jne
inc
mov
les
loope
loopne
in
cmp
mov
sub
xor
inc
movsl
and
test
and
mov
jg
and
xchg
in
test
test
dec
mov
out
or
inc
mull
mov
push
or
mov
pop
cmp
xor
push
test
test
test
jle
lret
das
movsl
les
push
repnz
cmp
leave
cmc
or
mov
ds
sub
mov
mov
fbstp
and
xchg
mov
mov
cmp
aad
pop
fwait
inc
lods
les
lods
mov
push
and
adc
imul
pop
test
and
cmp
movsb
iret
into
jbe
leave
loope
and
sarb
test
addr16
lret
cs
sub
pop
jne
mov
ja
inc
jle
push
daa
js
or
dec
mov
test
xor
xor
mov
enter
xchg
sti
es
mov
rcll
rcll
sub
pushf
fcmovnb
ret
inc
cmp
notl
lcall
jmp
addb
mov
lds
xchg
adc
test
sub
enter
aas
pop
js
scas
pop
xor
sahf
sbb
sbb
dec
std
jg
and
jo
add
add
jmp
pop
push
mov
mov
add
mov
fmuls
mov
mov
lahf
fsts
sbb
mov
jb
pop
push
jns
jmp
and
pop
repz
cmpsb
add
loopne
pusha
push
jae
cmp
mov
dec
lcall
xchg
dec
dec
call
fbld
dec
sub
jle
xor
dec
data16
lods
mov
dec
ljmp
xor
fnstcw
xlat
xor
jno
mov
xchg
fbstp
pushf
stos
lret
repz
push
out
sub
push
mov
bnd
xor
in
lods
xchg
push
ds
std
cltd
sbbl
out
mov
jnp
mov
or
movsl
mov
or
add
insl
mov
mov
pop
fcmovne
enter
pop
icebp
push
aas
loop
add
or
icebp
dec
cmp
rcl
dec
movsl
sti
pop
ss
xor
and
push
dec
popa
xor
push
int3
pop
in
pop
insb
inc
sbb
jnp
mov
arpl
mov
lea
jg
mov
fadd
inc
aaa
stos
js
fcompl
mov
sub
scas
xchg
aad
stc
lods
adcb
pop
sub
or
adc
push
jmp
leave
and
push
in
cld
mov
pop
dec
or
stc
cwtl
loopne
xor
ss
jle
scas
mov
xlat
jo
xchg
mov
scas
loopne
adc
jge
xor
and
repz
xor
cmp
mov
xchg
and
mov
pop
imul
xchg
add
loop
fiaddl
sbb
and
push
jg
cmp
insl
jecxz
jmp
sti
repz
rcrl
or
jnp
ja
in
adc
cmp
add
pop
out
lods
pop
aas
test
sahf
in
insl
dec
test
mov
dec
xor
dec
dec
jno
add
mov
imul
push
adc
scas
mov
push
push
add
add
cli
xchg
or
dec
dec
bnd
arpl
sarl
or
mov
movsl
aaa
int
pop
cmp
outsb
lods
clc
jns
insb
inc
imul
bound
xchg
inc
fadds
sub
sbb
pop
imul
ret
ret
ljmp
xor
sub
pop
mov
sub
rol
xchg
add
roll
and
pusha
incb
and
sub
idiv
or
out
dec
or
aad
into
push
in
lret
and
push
xor
loop
inc
and
sarb
jo
sub
push
pop
fwait
add
and
repnz
cmp
dec
je
andb
pop
sub
xor
les
test
popf
cmpsb
cmp
scas
xchg
sub
or
mov
lcall
in
adc
push
push
clc
clc
push
mov
rol
xchg
out
jecxz
sub
scas
inc
or
mov
xchg
cmp
xchg
xor
xchg
data16
push
adc
filds
push
or
jae
add
stos
xlat
push
push
in
cld
push
push
nop
jno
test
add
call
push
call
mov
insb
xchg
cmp
dec
lea
xor
movzwl
jge
or
push
ret
popf
sub
mov
ss
mov
inc
push
cmp
mov
idivl
scas
mov
lret
xchg
and
lea
aaa
sub
bound
das
popf
push
fwait
or
cmpsl
sbb
dec
cmpsb
push
repz
je
lea
cmp
cs
fsubl
loop
sbb
pop
aaa
push
rcrb
cmpb
mov
lods
xor
jle
jl
lods
inc
call
dec
cli
or
mov
cmp
add
pop
jb
and
adc
mov
sbb
ljmp
pop
outsb
aam
call
pop
test
test
js
sub
cmp
dec
scas
cmp
or
and
lcall
test
enter
hlt
dec
test
sarl
push
jl
repnz
loopne
iret
add
dec
mov
testb
movsb
add
xor
push
cmp
enter
or
ljmp
push
mov
in
jecxz
dec
or
addr16
add
test
fcmovb
or
icebp
jno
adc
lds
testl
sbb
xor
or
std
std
sbb
xor
sbb
xor
int
push
jne
scas
test
shll
clc
add
inc
and
or
lods
jns
xor
dec
push
jno
jge
xor
adc
aas
inc
cs
icebp
dec
mov
lcall
inc
jb
pop
dec
cmc
sbb
loop
rcr
sub
dec
mov
mov
dec
push
pop
cli
xor
pop
gs
ds
xchg
xor
lds
adc
inc
xlat
dec
pop
pop
cmp
lods
dec
sahf
pop
dec
cmp
aad
and
addb
data16
add
daa
ret
mov
push
mov
insl
add
iret
cmpsl
mov
adc
dec
fcomip
jg
jo
add
pop
fsub
stc
pop
mov
rcrb
dec
es
mov
push
adc
repz
or
xchg
mov
inc
or
outsl
sbb
cmp
mov
or
addr16
rorl
sbb
xchg
insb
adc
mov
xor
jecxz
pop
movsl
mov
pop
push
adc
in
sbb
adc
pop
in
subb
movsl
add
add
ja
std
nop
adc
pop
fsub
sbb
add
cmp
call
shrb
mov
jl
movsl
idivb
shlb
pop
or
fldl2e
cmc
mov
pop
outsb
xor
bndstx
sub
jno
xchg
jp
mov
dec
pop
lcall
add
in
insl
add
addl
sub
fistpll
lods
out
pop
inc
into
ret
xorl
out
ljmp
pop
int3
mov
or
ja
lahf
clc
xchg
adc
ds
fmull
adc
pop
dec
jbe
cmpb
in
out
aad
test
mov
dec
outsl
pop
cmp
sub
inc
testb
bound
sarb
rolb
pusha
test
sbb
mov
rcll
repz
mov
int3
mov
mov
shrl
cmp
sub
nop
sub
mov
cmp
mov
adc
cmpsl
sub
inc
fsubrp
rclb
pop
xor
das
pushw
lcall
cmpsl
dec
push
data16
mov
push
ljmp
call
lcall
and
cmp
into
push
or
out
xor
xchg
dec
mov
jge
lret
test
push
pop
pop
les
loopne
sbb
shl
cmp
aad
jle
mov
mov
jmp
add
inc
inc
sti
call
repnz
test
outsl
jns
jno
into
push
inc
ret
in
lret
adc
loop
adc
lds
arpl
mov
xchg
push
dec
test
arpl
aam
jle
testb
xchg
jnp
inc
pop
hlt
sub
sti
ret
jnp
push
int
addr16
and
xor
xlat
in
cwtl
std
add
cmpsb
lds
pop
pcmpgtb
xor
sti
scas
jecxz
fwait
jmp
cmp
sub
xor
pop
cli
fcoms
xor
lock
cmpb
movsb
jmp
push
sub
ret
lahf
push
popf
rclb
jmp
inc
lds
in
sti
mov
or
testl
outsb
sub
xchg
out
idivl
xor
gs
jmp
bound
push
and
aam
icebp
dec
sbb
jg
cmc
adc
addr16
jbe
outsb
jae
mov
or
icebp
mov
cmp
sbb
add
sbb
add
xor
pop
lcall
cwtl
loopne
aaa
lods
pop
popf
lcall
repz
aad
clc
pop
imul
and
rcrb
dec
nop
sar
cld
mov
repz
pop
lret
sbb
subl
mov
mov
and
lahf
xchg
pop
xchg
cmpsl
fiaddl
sbb
lea
xorl
pop
cmp
sbb
scas
push
mov
pusha
sahf
xor
inc
hlt
push
lahf
adc
fsubrl
jb
sub
mov
inc
call
mov
fidivrl
out
pop
jb
pop
adc
push
jo
movsl
or
test
lock
test
adcl
and
jg
les
shl
ja
mov
xor
nop
xchg
mov
arpl
js
arpl
cmp
enter
pop
jne
pushf
sti
stos
lret
int3
xlat
or
outsl
call
or
jle
mov
jl
cld
or
jmp
clc
or
pop
cmp
cli
int3
pop
shl
cmp
xlat
lahf
mov
or
xchg
stos
out
iret
xlat
mov
test
inc
mov
mov
mov
mov
mov
arpl
fimull
and
cld
daa
sub
sbb
inc
push
and
shr
stos
dec
aas
das
and
cld
pop
inc
add
stc
push
in
xchg
push
into
divl
mov
sbb
test
adc
push
xchg
xchg
mov
cmpsb
add
rcrb
in
test
cmp
inc
jnp
adc
repnz
fidivrl
stos
das
ja
in
test
ss
cmp
lcall
jge
je
pop
dec
add
lods
and
dec
sub
sahf
pop
jl
push
data16
gs
fwait
pop
push
xchg
dec
mov
push
xchg
insl
push
pop
add
pop
loopne
je
xor
mov
mov
mov
stos
cmp
fwait
add
test
xor
int
xchg
call
cwtl
data16
fwait
lds
xor
mov
push
cmp
std
or
mov
or
inc
mov
dec
mov
jmp
mov
roll
and
adc
lret
pop
pop
ds
mov
mov
xchg
dec
andb
jnp
jg
sbb
mov
xchg
dec
sub
out
aaa
mov
fisubs
jno
lcall
cmp
das
fwait
cmpsl
push
mov
lock
add
mov
mov
sbb
add
mov
xor
sar
adc
jmp
cmc
cld
stos
push
sbb
sbb
sarb
jae
lret
or
mov
popa
popa
xor
xchg
cs
sbb
out
mov
roll
mov
jns
mov
scas
cmp
inc
mov
fs
out
lcall
jmp
inc
mov
push
cmpsl
xchg
mov
hlt
enter
mov
pop
sub
dec
xchg
sbb
cli
dec
jmp
lea
stc
push
out
enter
adc
mov
lock
cmp
div
aam
outsb
lahf
add
lret
adc
push
mov
cmc
imul
inc
fbld
inc
int
mov
sub
pushf
add
movsl
fs
jb
jnp
cltd
in
push
mov
fists
cmp
and
mov
out
push
es
jge
xor
jne
sbb
cmpsb
in
incb
xor
data16
push
seta
mov
mov
jg
cmp
cmp
pop
mov
lods
jp
or
outsl
mov
xor
xchg
cmc
test
fidivrs
add
xchg
cmp
push
push
sub
cmp
pusha
inc
shll
push
cmpsb
pop
xor
mov
test
rol
popa
leave
mov
add
es
or
int
pop
fsubl
stos
mov
sahf
xor
xor
jbe
xchg
ret
das
add
sub
mov
mov
int
push
iret
push
or
out
cmpsl
icebp
adc
aad
xchg
ds
rol
je
test
scas
xchg
in
hlt
sub
xchg
ret
and
dec
lahf
out
inc
fdivrl
dec
ret
jnp
lahf
out
jl
add
xor
stos
cmpsb
push
adc
sub
stc
adc
hlt
mov
setbe
xchg
xor
mov
rcr
push
ljmp
mov
pop
inc
aam
dec
mov
repz
movsb
fidivl
add
in
mull
in
add
fdivrp
xorb
ds
fsts
push
test
mov
subl
dec
sbb
fstpt
push
stos
xor
ja
xor
push
push
aaa
fldt
cmp
jl
mov
or
loop
adc
add
sub
jge
push
cmc
or
ljmp
sbb
lods
adc
sbb
mov
mov
fnstcw
cs
inc
enter
xor
push
psubw
or
shrl
sahf
sub
fstl
xchg
jne
adc
dec
pop
movsl
fs
sti
popf
dec
xlat
repz
fiaddl
test
cmc
mov
jmp
rcl
mov
loope
test
jb,pt
push
xlat
sbb
mov
pusha
dec
test
ljmp
jae
cmp
lret
mov
aad
pop
push
fs
mov
movsb
add
sarl
add
or
lock
cmp
popa
lods
fdivr
sub
add
in
jno
or
inc
and
loopne
push
pop
sbb
lcall
mov
mov
loopne
gs
push
outsl
push
inc
adc
adc
xor
adc
ret
roll
jb
dec
pop
loope
push
ljmp
out
jnp
pop
inc
pop
cmp
inc
in
cmp
cmpb
movsl
movsl
adc
inc
mov
js
mov
and
pusha
test
mov
mov
decb
jb
adc
sub
sbb
mov
popl
clc
dec
dec
add
xchg
aas
adc
scas
mov
mov
adc
push
mov
inc
divl
add
nop
adc
inc
incb
mov
call
ds
lock
mov
add
sbb
sahf
dec
add
cmp
sbb
cld
pop
push
mov
adc
int
mov
jp
pop
jmp
mov
lods
mov
add
xlat
lahf
arpl
ret
mov
out
or
adc
sub
jmp
xor
hlt
jp
adc
in
jns
push
adc
xchg
push
add
mov
mov
cmc
fsubs
jae
push
test
call
xor
adc
lret
sbb
test
pop
pop
xchg
repz
fstpt
in
pop
jge
cltd
std
inc
dec
mov
sti
lods
pop
jne
adc
inc
push
dec
arpl
in
loope
pusha
pushf
rolb
inc
inc
ret
nop
stos
sbb
fucomip
jno
inc
ss
loop
fwait
arpl
js
movsl
gs
loope
dec
jo
cld
test
lahf
popa
dec
movsl
out
mov
jno
popa
pop
arpl
and
adc
cld
mov
mov
lock
testl
sbb
popf
mov
push
mov
dec
mov
jmp
sti
jo
mov
sbb
out
jp
sbb
pop
jmp
jge
mov
mov
or
in
mov
ds
xchg
pop
decl
aas
cmpsb
rcrb
hlt
mov
cmp
add
pop
stos
ds
jl
data16
sub
push
jb,pt
mov
jecxz
adc
in
jnp
rolb
jle
cwtl
add
push
scas
negl
outsl
inc
adc
loop
sub
cmp
das
leave
outsl
hlt
addr16
imul
jae
sub
mov
out
fidivrs
int3
jg
xor
js
out
dec
test
push
pop
mov
fidivs
in
add
popf
lcall
sub
cmpl
movsl
xchg
dec
add
sub
adc
add
addr16
or
mov
mov
mov
ret
test
clc
lea
outsb
mov
sbb
dec
fisubrl
insl
add
cmp
sub
nop
fcomip
pushf
pusha
sub
flds
out
add
push
jecxz
sub
outsb
pop
cmc
rcl
dec
sbb
out
sub
das
dec
and
mov
lods
push
das
and
mov
xor
mov
arpl
and
repz
int
jecxz
pop
mov
loopne
inc
in
adc
adc
pop
jnp
pop
inc
movsb
jecxz
dec
jl
in
add
lds
js
xchg
test
sbb
bound
test
loopne
loop
jnp
lds
cmc
dec
shlb
sub
idivb
xlat
mov
adc
clc
push
out
imulb
add
mov
stos
jmp
test
sarb
decb
push
in
cmp
nop
cmp
sahf
out
or
repnz
jle
icebp
idivb
dec
cmp
dec
rorb
ret
mov
enter
push
sub
mov
pop
sub
jns
cmp
in
outsb
add
cmp
jg
mov
xor
je
sti
aas
lahf
sar
xlat
mov
int
mov
sub
fsubrl
stos
xchg
fisttpl
mov
roll
in
mov
xchg
gs
mov
xlat
or
or
adc
dec
mov
mov
jne
adc
mov
inc
mov
fdivrl
test
inc
xchg
inc
inc
xchg
xor
in
fidivrs
pop
into
xchg
scas
mov
dec
movsb
cmc
imul
repnz
ret
lock
xor
jle
fcmovb
sar
or
int
pusha
testl
jle
xchg
pop
pushf
xor
idivb
push
push
fisubl
hlt
lods
push
add
ret
mov
sti
and
mov
and
xchg
inc
lock
mov
jecxz
jle
adc
pop
dec
in
testl
pop
fwait
fwait
push
mov
add
movsb
jmp
je
xchg
xor
les
in
mov
push
mov
sbb
ret
test
xor
lahf
push
sbb
sbb
mov
es
ret
jle
shl
dec
lea
repz
adc
add
add
lea
push
outsb
inc
and
lret
xchg
push
mov
mov
cmp
cmpsl
mov
mov
sub
in
pop
cmpl
cmp
xor
jno
and
mov
insl
lret
pop
pop
mov
mov
lea
insb
mov
fwait
sbb
and
inc
data16
fidivl
or
add
xchg
inc
mov
cbtw
cmp
insb
out
xchg
dec
pop
adcb
sub
cmp
pop
xchg
mov
mov
icebp
dec
fimull
frstor
icebp
cmc
mov
sub
push
sarl
gs
mov
decl
mov
cmpb
les
notb
dec
sbb
loop
mov
out
ja
mov
shrl
aaa
das
shrb
mov
fildll
xor
xchg
mov
pusha
xlat
outsb
xchg
push
mov
sbb
cmpsl
rcrl
mov
add
add
inc
xchg
mov
mov
or
leave
pop
dec
mov
fstl
xlat
inc
xor
mov
packsswb
pop
sbb
movsb
lock
push
aas
loope
aaa
xchg
add
jns
fiadds
pop
push
mov
fwait
nop
cli
mov
outsb
add
or
dec
xchg
and
jmp
in
popf
cltd
lds
lods
xor
adc
jne
stc
test
dec
push
fidivrl
add
cmpsb
mov
push
mov
mov
lahf
daa
sbb
daa
cli
or
jmp
mov
gs
cld
mov
xchg
xor
test
pop
push
cmp
cmp
or
bound
pop
cmp
inc
dec
inc
push
jno
or
inc
scas
mov
xor
daa
mov
jg
mov
loop
fdivp
xchg
fstl
insb
mov
loopne
mulb
or
popf
fdivrs
jecxz
mov
dec
pop
sbb
testb
dec
xchg
adc
sbb
jae
leave
inc
sbb
sub
test
push
test
sbb
les
fucomi
das
push
test
xor
lahf
add
add
mov
sarl
lahf
jno
inc
cwtl
fsubl
enter
mov
mov
ja
inc
dec
andl
aas
outsb
movb
out
or
sbb
mov
sbb
rcll
hlt
pop
sbb
and
mov
test
inc
and
mov
test
pop
pop
cmp
in
and
xor
enter
dec
jmp
xor
xchg
push
inc
sahf
sar
aas
es
cmpsl
pop
jae
stos
mov
and
gs
leave
xchg
dec
mov
in
add
in
mov
sub
cmp
push
iret
imull
out
imul
xor
loop
lock
mov
fs
mov
push
dec
loopne
fmuls
jmp
inc
add
mov
loope
lret
and
out
bound
xchg
mov
pop
add
std
inc
mov
mov
jne
jmp
jmp
andl
mov
aaa
push
outsb
push
mov
lods
flds
or
mov
cmp
add
jb
and
push
hlt
mov
incl
dec
gs
imul
jnp
jg
in
mov
adc
and
das
cwtl
xchg
mov
cmp
cmp
js
outsb
add
inc
sbb
call
jo
inc
xor
add
push
or
sbb
cmc
shlb
cmp
mov
lahf
test
inc
jbe
inc
mov
pop
dec
loopne
xor
inc
movsl
sub
aad
dec
shrb
test
pop
inc
cli
pop
dec
mov
pop
sub
sub
adc
mov
adc
mov
jmp
nop
mov
mov
jnp
cltd
mov
fstps
sub
xchg
btc
mov
in
jecxz
fnstenv
sub
in
cmc
dec
movsl
xor
loope
subb
mov
stos
insb
pop
sti
xchg
dec
lcall
mov
fs
ja
test
inc
cmp
sbb
nop
mov
ret
mov
cmp
xchg
dec
fadd
jl
test
das
sbb
int
call
mov
divb
arpl
insb
cmpsb
or
cmp
ficompl
pop
dec
push
pop
and
imul
test
lret
and
out
in
cwtl
out
dec
icebp
dec
pushf
xchg
std
cmp
and
adc
jnp
frstor
and
push
jmp
clc
nop
popf
andb
sub
cmp
xor
aad
outsl
push
andb
fcoms
mov
mov
sub
pop
cmp
fwait
repz
ror
mov
sbb
and
imul
add
jp
xchg
and
inc
pop
or
or
repnz
gs
pop
in
pop
jns
rcll
mov
dec
fidivl
pop
mov
sbb
popf
sbb
and
jle
lahf
mov
pop
shl
lret
clc
into
jno
pop
nop
in
lods
and
cmp
mov
lods
push
mov
push
outsl
xor
mov
sub
cmp
cmp
fidivl
in
fbstp
sti
pop
dec
fcomps
subb
scas
call
pop
ficomps
xor
jle
mov
jb
adc
into
pop
xlat
or
sub
out
sbb
push
sbb
sbb
pop
xor
or
pop
jp
xorb
xchg
stos
inc
or
xchg
pop
push
insl
push
jbe
leave
xchg
jmp
add
add
insb
lds
into
mov
pushf
arpl
cmc
adc
mov
jle
movsb
in
dec
jp
jp
push
push
imul
xchg
test
pop
dec
mov
xor
or
dec
cmpsb
mov
adc
test
xchg
sti
cltd
sub
or
int
xlat
pop
mov
mov
jg
add
ss
frstor
cli
mov
dec
mov
mov
cld
jae
mov
mov
push
shll
test
ret
repnz
sbb
rorl
scas
inc
fbld
mov
mov
sub
jns
push
popf
call
movb
sub
and
inc
cld
jnp
popa
mov
shrb
jg
test
cwtl
pop
out
mov
pop
cmp
icebp
adc
jp
leave
mov
into
xor
repz
rolb
push
lods
jge
adc
add
in
test
loopne
cmp
roll
pop
adc
ljmp
aad
outsb
ret
inc
push
dec
mov
and
and
push
or
imul
out
outsb
dec
mov
in
sub
xchg
fst
jb
xor
test
ja
sbb
test
push
inc
fs
std
test
sub
sbbb
fisubrs
jb
je
arpl
sbb
cwtl
leave
cltd
mov
push
in
pushf
xor
push
sub
dec
mov
aam
rclb
jle
push
mov
jle
jb
movsl
jle
and
mov
lea
adc
std
inc
pop
xor
dec
mov
inc
iret
mov
pop
hlt
cmp
inc
or
aaa
repz
mov
push
cwtl
icebp
iret
fistpl
shl
sbb
mov
loopne
push
rcl
xchg
push
les
pop
insl
add
dec
cmpsb
pusha
adc
sub
pop
vcmpnle_uqps
cmp
push
mov
inc
fnstcw
pop
pop
into
mov
push
leave
pop
inc
jle
dec
loopne
sbb
sub
or
pop
lcall
in
test
das
mov
fcompl
jbe
ret
and
adc
mov
scas
mov
cmpsb
jo
push
aad
jmp
cld
xor
sbb
std
mov
roll
in
push
aas
fnsave
jle
jge
stos
scas
mov
int
jle
sbb
adc
rcrl
mov
aad
push
cmp
pop
lret
fisttps
mov
ljmp
jne
or
mov
fnstsw
fnstcw
cmp
out
pop
mov
shll
and
out
gs
mov
sub
gs
xor
mov
adc
les
sub
dec
mov
xor
jecxz
xchg
out
mov
arpl
ja
mov
stos
mov
and
add
xchg
in
out
pushf
dec
sahf
inc
add
imul
lcall
xor
leave
add
jne
pop
mov
lock
pop
dec
jno
xchg
rcr
xor
fucomi
dec
test
xchg
jmp
mov
cmc
lea
xor
lahf
adcb
bnd
and
shlb
cmc
sbbb
testl
mov
push
cmp
aas
xor
mov
cs
pop
cmc
mov
lods
jmp
adc
insb
mov
insb
lcall
jp
or
xor
mov
movsl
push
push
sub
and
jnp
mov
mov
lock
addr16
pop
xor
sbb
and
mov
shl
jae
mov
push
push
imul
xor
fmul
mov
arpl
jb
in
test
cltd
sti
mov
mov
sbb
aaa
xchg
aaa
dec
mov
sub
imul
sahf
or
or
in
dec
sub
push
jae
mov
xchg
push
subb
mov
cmc
enter
fisttpll
pop
dec
in
inc
jo
loopne
and
push
int
repnz
nop
pushf
mov
cmpsl
pop
add
inc
push
icebp
cmpsl
sbb
adc
leave
subb
xor
cmp
or
pop
mov
pop
mov
xchg
mov
add
add
lcall
sub
mov
pmuludq
test
aam
xor
jmp
mov
ret
mov
cld
xchg
sbb
mov
push
test
push
aam
lret
push
repz
sar
cltd
ds
fstpl
bound
jp
sbb
push
js
insb
lods
pop
test
les
dec
cmp
push
jmp
call
rolb
in
bound
sub
jae
mov
adc
mov
pop
push
jno
pop
xor
fs
add
push
ss
xor
cmp
incl
or
dec
lock
or
fmulp
test
test
pop
jp
insb
das
xchg
mov
adc
push
in
add
cli
inc
pop
sbb
inc
lds
jle
ficoml
sub
jae
mov
jbe
int3
mov
sbb
adc
inc
shlb
or
mov
xor
fcompl
mov
or
pop
repnz
popf
loope
jmp
jne
arpl
push
inc
and
test
nop
jb
xor
dec
cs
push
mov
fs
xchg
and
xchg
push
mov
lods
test
xchg
pop
icebp
lret
push
push
sbb
je
push
js
aaa
cmp
adc
cmp
pop
pop
lods
xchg
xchg
je
or
movsl
cmc
xchg
aaa
jmp
adc
mov
lea
int
xor
mov
int3
jl
inc
scas
test
inc
sbb
sbb
scas
mov
xor
push
imul
ss
dec
sar
xor
jbe
pop
in
test
pop
aam
fcoms
cwtl
jns
jge
sbb
cmpsb
sub
jno
push
mov
out
pop
push
insb
out
in
fs
inc
int
mov
pop
and
jns
sub
jns
dec
leave
lret
cmp
outsl
mov
dec
or
das
xchg
add
sbbb
mov
push
xor
push
xlat
outsb
dec
js
loopne
sahf
sbb
mov
inc
out
je
movsl
sete
negb
movsb
adc
lcall
cmpsb
lret
inc
push
pop
mov
push
out
jg
movsl
fnsave
xor
push
mov
sbb
es
xor
push
mov
paddd
rclb
pop
push
adc
push
xor
les
xchg
sub
int
mov
pop
stos
bound
sahf
or
mov
clc
pop
mov
jns
ljmp
mov
add
push
cmp
or
push
sbb
xchg
xchg
popa
dec
adc
cmp
mov
loopne
adc
jnp
ljmp
mov
jl
mov
xchg
cld
leave
adc
mov
fisubrs
adc
mov
pushf
popf
pop
dec
pop
mov
in
es
jecxz
lret
add
mov
cld
pop
sbb
mov
cmpsl
dec
xor
aaa
inc
jbe
in
idiv
xchg
in
dec
and
push
icebp
lock
push
fdivrl
mov
int3
cmp
push
jb
nop
xchg
xorb
jge
imul
jg
int3
dec
movsl
nop
sub
push
sub
xchg
push
imul
jge
test
xchg
mov
fisttps
mov
add
sahf
xor
adc
sub
jbe
jno
push
lret
js
mov
push
sti
xchg
cmpsb
seto
in
outsb
mov
rcrl
inc
aas
pop
xchg
jmp
pop
jnp
dec
dec
mov
xchg
jns
add
adc
testb
adc
iret
push
inc
fadds
in
shr
mov
aaa
push
pop
cmpsb
jnp
mov
add
pop
sub
jnp
addr16
and
inc
cli
inc
add
xor
test
pop
jmp
das
pop
mov
or
add
cld
xchg
or
dec
repnz
push
and
lcall
insl
filds
mov
xor
incb
cmp
xor
lahf
test
cmp
sub
cmpsb
mov
mov
push
addb
mov
das
pop
mov
stc
and
sti
xor
adc
in
and
cmp
mov
rcll
lret
jmp
clc
xchg
push
and
repnz
push
addb
add
push
scas
mov
loopne
cmp
test
movb
jno
lock
inc
or
test
xor
or
mov
js
dec
icebp
popa
xorl
das
popf
xor
dec
xchg
ret
jle
in
mov
mov
jo
pop
stc
nop
xchg
dec
daa
or
clc
dec
in
jne
xor
mov
mov
andl
ljmp
sub
fcoms
xchg
repz
movsb
neg
xchg
mov
out
stos
pop
adc
jge
movsb
pop
test
pop
out
cld
push
jae
pop
xlat
stos
or
push
inc
inc
push
pop
or
je
and
sti
andb
push
mov
subl
mov
aaa
sbb
js
fstl
fldt
std
data16
dec
push
push
int3
aam
repz
sbb
clc
arpl
andl
insb
or
pop
mov
xor
xor
xchg
out
mov
mov
add
xchg
sbb
and
push
jo
add
cmp
int
mov
fdivs
aam
ljmp
push
aaa
lret
std
sub
sbbl
and
outsb
mov
insb
xlat
mov
repz
in
adc
dec
mov
xchg
add
cwtl
in
sbb
fwait
mov
in
jmp
popf
cli
jae
adc
mulb
mov
rorb
call
inc
enter
dec
push
mov
xor
fisubs
movsl
sub
test
sbbb
mov
ja
pop
push
test
fs
pop
data16
mov
loope
imul
arpl
adc
cmp
inc
or
lds
shlb
int
fwait
aas
outsb
std
add
das
bound
dec
push
ds
popl
scas
sub
dec
mov
mov
rclb
inc
repz
inc
xchg
rcll
push
inc
cld
adc
jmp
fidivrl
lret
js
cmp
pop
sbb
or
call
iret
xchg
aas
jecxz
sarb
mov
in
outsl
ret
vpminub
in
aaa
jae
sub
incl
jmp
or
outsl
mov
repnz
imul
jge
pop
movsl
aas
xchg
mov
adc
jp
mov
sarb
call
or
sbb
xchg
xor
push
cmp
addl
and
or
pop
int
popf
and
or
cltd
std
nop
dec
mov
jno
outsl
int3
cmp
pop
test
jecxz
ficomps
mov
inc
cmp
push
dec
or
xchg
inc
mull
adc
pop
nop
cli
cwtl
cmc
je
mov
adc
in
jne
pop
sahf
mov
jle
mov
and
stc
inc
daa
popa
cwtl
and
loope
jge
and
pop
and
lret
lret
ja
stc
push
stos
test
lret
fdivrs
mov
enter
testb
cmpb
loope
add
add
push
mov
push
aam
cmpsl
iret
pop
test
fdivrs
xchg
pop
clc
repz
cmpb
and
dec
dec
leave
sbb
push
ss
mov
shlb
jbe
lods
fdivrl
or
xchg
sub
mov
xchg
and
dec
mov
mov
shl
mov
pop
icebp
mov
jne
shr
sub
aad
or
xlat
outsb
icebp
rolb
lea
mov
add
dec
adc
push
repz
xlat
aaa
in
push
pop
mov
pop
hlt
lock
imul
lods
push
xchg
insb
test
leave
repz
gs
push
mov
add
pop
mov
lcall
lret
es
das
mov
jo
lret
fdivp
push
imulb
add
call
jge
jle
sub
fildl
shl
jp
xor
enter
in
pop
adc
jecxz
stos
ss
add
movsl
jno
add
push
lcall
popf
inc
adc
push
sub
ss
daa
mov
cld
push
pop
aas
movl
jmp
addps
popf
mov
push
xchg
scas
cmp
mov
lock
and
popa
mov
push
cmpsb
pop
fcmovbe
bound
inc
mov
sbb
dec
aad
pop
into
or
jecxz
in
sub
sub
repnz
ds
aad
sub
cmpsb
inc
pop
mov
mov
xchg
pop
mov
pop
outsb
add
iret
daa
mov
loope
inc
jl
jp
jmp
pop
pushf
call
inc
mov
stos
addr16
ss
mov
test
xlat
and
and
in
incb
shrl
dec
ljmp
rol
jmp
or
ss
addr16
inc
cltd
or
aam
loopne
jb
push
movsb
sbb
mov
xchg
inc
mov
and
push
sarb
adc
xchg
insb
pushf
insb
mov
daa
inc
call
sub
rolb
mov
sbbl
push
pop
arpl
adc
pop
dec
add
sub
or
pop
cmc
sbb
cmp
pop
or
popf
and
in
rolb
jl
dec
mov
xchg
stc
push
out
lds
xor
jne
test
dec
hlt
mov
sti
out
mov
adc
lods
ss
int
addb
mov
adc
mov
and
out
sti
xor
iret
inc
fiadds
dec
inc
ljmp
xor
jno
loop
xchg
push
fnstenv
shl
scas
push
and
push
and
inc
and
aas
xchg
scas
scas
inc
loopne
inc
jmp
jb
xor
push
xor
insl
mov
sahf
call
imul
stos
or
out
cmpsb
les
xor
imul
push
dec
testb
cmc
xchg
pop
lcall
daa
xor
es
pop
xchg
pop
icebp
add
lcall
and
in
or
pop
push
and
loopne
adc
mov
mov
push
out
adc
add
cmpsl
xchg
mov
push
ss
lret
cmpl
in
sbb
popa
out
pop
std
nop
inc
ljmp
sub
in
shlb
push
or
in
add
ret
mov
scas
cmp
sub
sub
sbbb
pop
scas
push
mov
xor
movsl
ss
sbb
popl
mov
out
inc
icebp
sub
test
testl
sbb
ljmp
add
mov
xchg
pop
mov
adc
ja,pt
cmp
xor
lds
jl
movsb
jle
mov
add
and
gs
push
lret
rorb
and
jae
xchg
shrl
leave
push
xchg
push
pop
or
and
push
clc
jbe
insb
jae
dec
mov
pushf
and
aad
cltd
stc
jnp
push
mov
lock
addr16
divb
pop
adc
jbe
je
or
mov
dec
pop
movsl
ja
jo
dec
xor
aad
fs
lods
outsb
add
mov
mov
repnz
dec
push
inc
jecxz
mov
pop
int
aam
sub
push
mov
iret
shlb
pop
test
fnstsw
sub
into
in
dec
jmp
xchg
sub
loope
jmp
faddl
fdivrp
jno
mov
xor
jle
mov
cmp
test
jo
push
push
popa
sbb
xor
sub
fistl
push
das
repz
adcb
mov
aam
icebp
mov
or
xchg
and
sbb
fdiv
sbb
hlt
xchg
ljmp
std
xchg
mov
push
cltd
data16
mov
scas
xor
push
js
pop
xchg
lcall
lcall
sbb
insb
or
mov
xchg
lods
pop
adc
je
sbb
inc
or
inc
sbb
jns
in
xchg
and
jbe
add
sbb
inc
inc
int3
stos
stc
je
arpl
test
js
xchg
sub
rclb
in
test
fidivrs
dec
pop
fsubrp
mov
push
xor
fbld
cmc
bound
cld
sahf
aas
jge
outsb
repnz
jnp
cmp
insl
mov
ret
mov
jmp
push
mov
cmp
daa
stos
cmp
lds
push
cld
or
mov
push
mov
and
push
loopnew
insb
add
fsts
fstpt
push
adc
addr16
cmc
addr16
mov
add
xor
add
pop
repz
aaa
fstps
scas
inc
fimull
or
stos
int3
arpl
push
jo
inc
fcmovne
xchg
cmp
cmp
mov
fbstp
cmpsl
ds
add
insb
cmovns
sbbb
and
dec
leave
adc
mov
mov
mov
cwtl
jne
lea
iret
mov
aad
jb
es
adc
sub
inc
fwait
xor
pop
xchg
pop
ror
ljmp
jmp
icebp
cmp
pop
push
lock
shl
dec
cmp
out
shll
push
inc
and
xorl
or
mov
test
in
mov
push
out
push
adc
sbb
add
mov
sub
jle
lahf
push
sahf
fwait
xchg
inc
icebp
sti
pop
dec
addr16
xchg
cs
lgs
inc
lds
in
cmpsb
dec
ja
jl
out
xor
movsl
add
aaa
iret
fisttpl
jns
jno
es
dec
mov
push
fiadds
mov
push
pop
push
stos
andl
lret
xchg
jmp
cmp
push
das
or
es
and
inc
cmp
ss
adc
jo
test
pop
nop
cmpsb
cmpsb
adc
cmpsb
pop
test
dec
hlt
xchg
outsb
inc
dec
aam
insb
insl
ret
into
mov
xchg
xor
and
rorb
jae
test
repnz
rol
test
insl
popa
cli
stos
test
adcl
stc
sbb
inc
out
shlb
mov
repz
in
xchg
dec
mov
or
in
loope
mov
rcl
fimull
jbe
das
jl
sti
push
adc
iret
sbb
dec
push
shll
cltd
test
and
clc
test
hlt
mov
push
test
sti
sbb
jp
hlt
ds
cmp
mov
ret
jae
xchg
movsl
movsb
shrl
jbe
inc
test
out
lcall
push
inc
xchg
mov
jns
xlat
fdivs
shrl
ja
andb
or
mov
mov
inc
shrl
shl
enter
int3
fs
std
lahf
mov
aad
mov
mov
scas
mov
mov
mov
jnp
data16
fwait
imul
or
cmp
jle
sbb
test
mov
out
cmp
sbbl
xlat
daa
sbb
out
cmp
ffree
jmp
mov
sar
in
mov
iret
cs
cmp
sub
iret
push
adc
jg
movsl
test
mov
or
cmp
push
jno
fwait
testl
imul
and
cmpsb
push
xchg
mov
sti
and
jbe
jbe
inc
arpl
stc
das
xor
dec
test
les
into
push
dec
out
loop
jmp
out
sub
sbb
mov
sub
stos
fnsave
pop
adc
cld
push
cli
outsb
and
mov
js
out
std
and
adc
out
or
in
jnp
cltd
mov
mov
add
adc
xlat
xchg
mov
adc
sbb
rclb
leave
push
call
adc
inc
sbb
lock
lods
cld
push
push
int
or
cmp
lret
nop
out
sbb
call
mov
jp
dec
dec
mov
or
pop
cmp
push
lahf
jge
fbstp
lods
add
popf
subl
imulb
pop
sbb
std
xor
push
push
cmp
std
adc
scas
pushf
ljmp
mov
imul
in
mov
mov
push
mov
pop
xorl
scas
mov
loope
js
fiaddl
xchg
ja
dec
test
leave
pop
mov
push
inc
or
sub
daa
mov
shll
mov
out
ret
leave
test
inc
add
scas
xor
stos
mov
jb
icebp
mov
ret
fbstp
inc
add
xor
or
push
loopne
stos
pop
hlt
inc
test
inc
mov
or
mov
adcl
fs
std
add
jb
aam
dec
out
not
mov
mov
cmpsb
cmp
std
bound
dec
fs
into
enter
xor
adc
out
sbb
jbe
scas
adc
mov
pusha
dec
dec
xchg
inc
or
test
subl
iret
data16
cltd
es
mov
jbe
shlb
out
mov
lds
adc
xor
mov
fstps
rcrb
cmc
mov
mov
aaa
xlat
andb
cmp
dec
pop
adc
cltd
das
fstl
and
pushl
daa
dec
mov
and
out
js
cmp
dec
loopne
jmp
aaa
rcl
pop
fsubr
test
ja
cs
dec
pushf
dec
aaa
ret
fidivrl
addb
inc
out
or
cmp
stc
in
adc
mov
xor
nop
mov
fdiv
stc
pop
rcr
fcomp
inc
add
fsubr
xor
xlat
jmp
xchg
xor
push
mov
test
scas
sbb
mov
sub
cmp
mov
dec
std
xor
sbb
xor
and
mov
mov
push
pop
cmp
loopne
xlat
adc
into
fisubl
and
cwtl
xchg
push
add
adcb
mov
loopne
mov
xor
jae
jbe
inc
add
mov
es
jge
dec
and
jl
fs
data16
gs
stc
sbbb
mov
bound
popf
sarb
iret
icebp
xor
sahf
fwait
and
dec
scas
insb
mov
outsb
mov
popf
cmpsl
or
sbb
pop
les
mov
mov
cld
lcall
jbe
jecxz
add
mov
mov
adc
add
mov
xchg
sub
dec
fiadds
pop
sbb
test
jp
shlb
subb
ret
icebp
and
xchg
fdivr
sbb
lds
sahf
idivl
lea
dec
adc
js
xlat
out
cmpsl
push
sti
jl
frstor
xchg
popa
jmp
pop
add
and
icebp
pop
repnz
push
jno
jmp
cs
fildll
rcll
insl
inc
dec
mov
pop
inc
xchg
adc
mov
jbe
sbb
mov
and
lcall
rolb
mov
loopne
add
mov
stos
push
or
mov
inc
imul
mov
jp
pop
cmp
cmpsl
sub
jmp
mov
mov
sub
inc
aad
push
ljmp
jno
das
or
cmpsl
jle
mov
outsl
mov
lahf
sub
ror
xchg
lods
jmp
shlb
movsl
div
cmp
push
ret
cmp
or
lock
movsb
pop
mov
push
cmp
cmp
sub
repz
xchg
fcomip
and
pop
mov
xorb
xor
push
fwait
gs
rcrb
cmpl
pop
jle
mov
out
inc
daa
cs
mov
es
push
outsb
mov
test
or
and
mov
fwait
fwait
xor
or
imul
jmp
sub
lods
xlat
jecxz
add
push
in
out
popf
push
xor
aad
movsl
or
sbb
ljmp
sub
jne
sbb
out
mov
xor
jo
je
xorb
or
sbb
mov
mov
mov
lock
or
inc
out
cmpsl
inc
popa
inc
inc
fidivrl
fcoms
jne
inc
push
scas
or
xor
mov
jmp
pop
movsb
lds
jge
je
movsb
lock
mov
xchg
das
cmp
push
fld
xor
shlb
jbe
mov
arpl
lods
sbb
shll
bnd
sub
testl
popf
mov
sbb
jne
mov
lock
mov
imull
and
sub
test
cwtl
subb
jo
arpl
mov
xor
and
add
adc
lret
lret
scas
movswl
and
pop
mov
xor
ds
xchg
xchg
dec
hlt
adc
adc
push
xchg
jno
stc
je
inc
mov
outsl
dec
mov
xchg
inc
stos
icebp
test
xor
je
outsb
pop
stos
fidivl
sub
jp
cwtl
stos
mul
mov
mov
push
loope
cli
add
movb
cwtl
xchg
add
ds
xchg
pop
movsl
ret
or
jge
es
mov
dec
sbb
and
mov
pop
cmpl
add
inc
push
popf
fldenv
push
call
push
outsl
cmp
xchg
add
icebp
sub
leave
nop
gs
mov
into
pop
add
outsl
xor
cmp
push
insb
sub
mov
pop
outsb
adc
push
mov
xor
xor
fldt
pop
push
mov
and
sbb
imul
arpl
jle
pop
sub
xchg
adc
or
sub
stos
scas
lret
and
les
inc
mov
shlb
repnz
xor
jmp
loopne
xchg
cli
imul
pop
imul
jne
sbbb
add
push
inc
mov
xchg
push
mov
or
inc
out
mov
mov
testb
adc
clc
mov
push
or
mov
xor
loopne
ret
movq
jnp
dec
sahf
sub
inc
mov
pop
lds
cvttps2pi
stos
in
fwait
ret
les
pushf
shl
fimuls
pop
push
ds
out
rcl
cmp
xchg
push
lock
lock
inc
xor
jp
xchg
adc
dec
fcoml
ja
insb
enter
adc
xchg
daa
rolb
imul
mov
mov
mov
lock
mov
xor
cwtl
cmp
daa
stos
ss
cwtl
jnp
lret
scas
sbbb
add
xor
ret
fstl
push
movsl
in
std
sub
pop
outsl
xchg
lcall
in
ret
xor
xchg
add
fistl
mov
test
pop
push
pop
out
pop
pop
ret
roll
popl
pop
ds
pop
rolb
pop
fwait
push
sbb
push
xor
loope
mov
arpl
movsl
xor
jl
inc
aad
aam
scas
stc
pop
cmp
pop
repz
shrl
inc
push
jl
pop
sub
push
mov
xchg
sub
xchg
add
test
lret
loopne
aaa
mov
mov
add
mov
or
imul
mov
dec
stos
dec
xchg
dec
inc
int3
leave
enter
mov
sub
popf
xchg
mov
popa
nop
stos
dec
pop
xlat
push
xor
dec
cmpsb
lock
ret
inc
cli
popf
xor
pop
mov
cmp
mov
mov
jg
cmp
mov
sub
stos
pop
loope
shlb
popa
and
shrl
dec
fwait
sbb
int3
pop
je
dec
outsb
cmp
mov
cmp
pop
sub
push
ljmp
popf
mov
dec
lahf
out
cmc
popf
clc
clc
xchg
shr
jl
xchg
shlb
xchg
pop
push
scas
mov
xor
out
sub
fucomp
mov
xchg
cs
jnp
ret
push
in
movntq
sub
lods
xchg
cmc
lret
dec
lret
popa
out
mov
or
test
fstpl
xor
dec
mov
dec
inc
sbb
sub
mov
mov
push
xor
repz
in
xlat
call
outsl
cmc
fisubrl
mov
stos
imul
mov
movsl
push
lods
or
ret
cmpsb
adc
add
xchg
xchg
sub
sbb
mov
push
outsb
jmp
xchg
cmp
pop
push
jmp
xor
jo
rcrb
ljmp
push
lods
cmp
mov
lcall
js
mov
sub
lcall
mov
addr16
jnp
mov
subl
enter
inc
icebp
mov
movsb
insl
pop
pop
mov
inc
testl
xchg
jecxz
scas
cltd
mov
into
repnz
fadds
int3
movsl
popa
adc
scas
mov
dec
in
out
sub
rcl
out
add
mov
outsb
jne
repz
mov
loope
jnp
inc
cmp
cmc
jnp
aas
jge
repnz
in
inc
add
push
adc
sahf
pusha
outsl
jge
sub
mov
jp
ja
insb
cmp
fwait
hlt
in
daa
jmp
int
cli
ja
in
aad
dec
test
push
fsubrp
test
push
jne
lcall
mov
outsl
adc
sbb
xor
lods
inc
mov
inc
adc
aad
and
and
movsb
mov
lret
cmc
sub
mov
inc
sti
mov
stos
sub
dec
mov
sub
cltd
mov
cwtl
movsb
dec
loope
test
icebp
int3
daa
mov
dec
pop
stc
push
jecxz
and
mov
out
mov
inc
out
mov
roll
push
les
cli
test
add
and
bnd
jg
cltd
inc
in
mov
out
test
inc
mov
mov
fyl2x
cmp
pop
jle
jecxz
notb
xlat
and
loop
fucomi
jge
out
inc
cmp
push
insl
addr16
cltd
sub
das
imul
leave
sub
dec
adc
sub
sub
scas
inc
addr16
scas
adcb
test
sbb
xor
shll
sbb
cld
add
and
shrl
inc
aam
mov
xchg
repz
sahf
inc
sbb
ret
ss
insb
mov
pop
js
sub
sbb
imul
out
sti
scas
mov
mov
add
adc
loope
xchg
mov
movsl
cmp
pop
sub
mov
mov
cmpsb
filds
call
icebp
popa
inc
fcoml
ja
add
scas
xchg
insl
push
in
pop
jmp
int
loop
cmp
mov
mov
outsb
retw
sti
pop
int
lds
mov
outsb
test
lret
jl
lods
jo
mov
std
sti
add
in
or
cmpsb
lods
and
push
lods
xchg
inc
dec
mov
mov
adc
dec
dec
fs
push
or
inc
les
xchg
mov
jge
mov
ljmp
cmpsb
mov
in
push
lods
xor
and
int3
loopne
lods
sub
pop
cmpsl
sar
xchg
mov
daa
or
outsb
clc
sahf
ret
pop
cmp
movsb
aam
and
dec
clc
or
xchg
adc
in
inc
dec
popa
aas
push
xchg
test
sbb
std
lods
test
test
scas
sub
es
shrd
rcrb
mov
pushf
mov
test
fisttpl
out
dec
pop
lret
ljmp
fimull
js
daa
leave
xor
cmpsb
xchg
jp
and
jne
dec
sahf
and
and
cs
into
push
int3
pop
push
cli
and
imulb
xchg
inc
or
mov
stc
xchg
mov
pop
and
or
decb
js
fldenv
inc
imul
pushf
popa
mov
fisubl
les
mov
jne
mov
jns
popa
push
and
pop
stos
inc
mov
mov
adc
pop
xchg
mov
outsl
fstp
cli
dec
mov
inc
insb
test
fnstsw
pop
fildl
das
sbb
fld
mov
jne
or
dec
loopne
out
shr
sbb
test
adc
gs
sbb
xor
inc
xor
les
sbb
lds
dec
adc
jo
cltd
faddl
or
inc
cmp
movd
add
ds
pop
sarl
idivb
add
push
mov
scas
push
fnstenv
cmpsl
daa
outsl
sahf
loop
pop
mov
adc
cmp
sbb
sbb
add
pop
sub
rol
add
filds
sub
sub
out
mov
dec
add
stc
mov
test
pop
and
fs
ljmp
push
add
rcl
sbb
test
sub
minps
sbb
les
mov
push
ret
jb
and
cmp
hlt
jo
imul
mov
icebp
push
dec
jnp
mov
sub
sbb
fdivs
or
adc
fnstenv
fadds
lcall
xor
pop
cmp
rol
aaa
xchg
dec
in
sbb
sbb
out
push
movsb
dec
dec
sbb
pop
ss
and
es
test
jbe
jmp
aam
jmp
xchg
xor
mov
orb
jmp
inc
fidivs
xchg
xchg
movsb
adc
ja
xor
push
mov
mov
lods
mov
sbb
xor
xor
test
mov
xchg
clc
cmp
jbe
sbb
fsts
sub
inc
sbb
xor
cwtl
lret
es
and
pop
das
jb
sti
in
loop
push
xchg
mov
test
imul
pop
in
rcrb
xor
jge
sbb
jns
add
das
std
adc
mov
lret
lahf
cli
mov
push
xor
lock
js
cmp
pop
ss
jl
fldl2t
jp
lret
sbb
les
pushf
stos
inc
sbbb
int3
test
or
lcall
sub
add
rolb
or
nop
jnp
cld
scas
ljmp
call
int3
aam
dec
pop
mov
shll
cmp
xchg
xchg
sbb
add
or
and
dec
in
push
ffreep
loop
jns
imul
neg
ljmp
sub
scas
cld
lahf
outsl
dec
push
negb
loopne
cmp
xor
inc
xchg
pusha
fiaddl
push
push
insb
or
pushf
pop
in
cld
mov
out
add
dec
sbb
stos
jl
fdivrs
mov
lods
out
jae
lret
jo
bound
jnp
addb
push
adc
mov
or
mov
testl
rclb
xchg
add
ret
pop
test
and
xor
mov
lahf
push
push
call
xchg
sub
fisubs
out
pushf
mov
mov
scas
dec
sbb
jge
aam
jp
jmp
insl
push
ds
pop
call
mov
pop
cmp
mov
inc
popa
sbb
and
mov
out
mov
jbe
mov
mov
sbbl
addr16
mov
xchg
cs
pop
mov
in
daa
cmp
mov
in
pop
push
xor
pusha
push
xchg
or
hlt
jmp
lcallw
test
lods
mov
xor
mov
push
lea
outsl
jl
popf
ret
icebp
or
scas
test
add
xchg
cmpsl
popa
mov
pop
notl
pop
mov
test
or
and
pop
jae
xchg
inc
pop
lds
and
fisttpll
cmpsb
jns
inc
cmp
sar
xlat
enter
js
pop
sbb
test
fwait
jge
xchg
and
in
push
jp
push
jae
lret
mov
popf
add
orb
cmp
sahf
lods
testl
jo
scas
mov
pop
repnz
sub
adc
fdiv
mov
xchg
ja
push
aam
movsb
jbe
add
or
sbb
add
orl
sarl
mov
sbb
inc
sub
inc
mov
enter
pop
and
cld
lock
fcomi
adc
and
mov
or
xlat
out
mov
lcall
imul
adc
ja
lcall
mov
pop
xchg
sbb
mov
jae
shrl
xchg
test
xlat
lods
dec
push
push
mov
mov
lcall
and
xor
int3
jp
js
jmp
jmp
icebp
mov
or
or
enter
jmp
leave
jns
sti
push
cwtl
das
dec
add
test
jne
fidivs
push
imul
stc
imul
aam
and
add
add
and
lods
scas
les
lret
push
jno
mov
cmc
dec
sub
jns
loope
out
imul
testb
or
jmp
mov
repz
enter
pusha
adc
imulb
loop
mov
and
mov
inc
rcl
cs
xchg
outsl
pop
dec
and
loope
mov
jmp
mov
leave
push
pushf
xor
aaa
into
mov
or
insb
add
sub
mov
sub
push
or
pop
hlt
cmpsb
add
leave
jnp
in
mov
sub
xchg
adc
fistl
mov
push
movsb
jae
pusha
das
inc
in
add
pop
sub
ljmp
sub
mov
xchg
imul
fwait
inc
lret
mov
sub
fstl
add
negb
jo
rol
loopne
cltd
pop
and
pop
in
lret
push
leave
testb
jbe
jnp
dec
pop
inc
lahf
rcr
int3
outsl
mov
pop
ljmp
aad
das
mov
jg
or
fdivrp
push
stc
rolb
sbb
sub
mov
out
cltd
push
repnz
or
push
sub
loopne
mov
pusha
jp
outsb
popa
cmp
cmp
in
dec
or
inc
pop
cltd
xor
xlat
mov
test
add
fdiv
or
inc
dec
mov
sub
cmp
psubw
push
xor
cmpb
gs
xchg
lret
scas
inc
bound
iret
aad
jo
mov
and
cmp
sti
sti
pop
and
xchg
xchg
and
fnstenv
inc
mov
in
mov
mov
daa
adcb
push
or
xor
add
jp
xor
repnz
xchg
into
ret
jp
add
xor
xor
xor
popf
fisttpl
push
xchg
pushf
scas
pop
cmp
and
ljmp
push
js
ret
rorl
fdivp
loopne
xlat
jmp
mov
sub
sub
mov
mov
mov
lret
cld
fstpl
lock
dec
adcb
lock
ret
es
ret
or
iret
fwait
dec
adc
clc
test
ds
push
push
pop
testb
int3
sti
xchg
and
mov
adc
or
jb
sub
sub
stos
add
das
repnz
arpl
gs
aad
jl
xor
nop
repz
ret
inc
dec
std
dec
pop
pop
out
and
stos
xor
xor
addl
in
mov
test
movsl
inc
stos
adc
fbstp
sub
pop
inc
sub
and
and
imul
mov
stos
xchg
or
jnp
jnp
mov
cwtl
clc
cmp
cmp
sbb
xchg
xor
loope
jecxz
sbb
ret
add
scas
rcr
push
mov
and
sub
add
out
mov
sbb
fs
push
mov
andb
iret
bound
cltd
and
pop
into
mov
fldz
and
pop
inc
fadd
mov
pop
repz
int3
add
scas
scas
inc
cwtl
dec
aam
cld
mov
shrl
or
pop
cmpsb
sub
loope
fsubrs
mov
lds
xlat
or
adc
mov
dec
cmc
or
jns
jg
adc
cld
dec
stos
xor
adc
sbb
inc
xor
push
jg
xor
jno
cmp
adc
adc
ret
rcr
int3
insl
shlb
in
icebp
mov
jae
sahf
pushf
montmul
cmpsb
inc
xor
adcb
push
mov
jns
lods
xor
lahf
outsl
jl
popf
ljmp
cli
es
inc
mov
or
lods
es
jg
lock
fsubrl
repnz
jne
and
inc
lret
scas
pushf
push
mov
call
lods
sub
popf
sub
xchg
mov
outsb
inc
push
sbb
test
std
xchg
clc
mov
adc
mov
and
sarl
inc
push
xchg
mov
sub
into
lret
xor
sub
adc
xchg
loope
fwait
pop
icebp
mov
int
pushf
repz
sbb
shlb
jbe
pop
xor
ret
sub
mov
mov
mov
mov
adc
mov
pop
loopne
ret
or
ja
pop
push
incb
mov
xchg
sbbb
push
jno,pn
testl
cmp
inc
loope
leave
xchg
add
xchg
and
mov
popa
mov
rorl
fdivp
xor
aas
les
inc
mov
push
loope
inc
inc
xor
popa
cmp
sbb
inc
cwtl
movsb
neg
adc
cmp
mov
sbb
mov
rcrb
shl
fnstenv
cmp
lcall
pop
xchg
inc
adc
mov
xor
nop
bound
xor
test
pop
xchg
and
jecxz
mov
jnp
sub
sub
mov
filds
stos
inc
mov
jge
xchg
mov
and
ja
adc
pusha
shlb
push
repnz
vpmacsdd
movsl
stc
or
mov
ljmp
test
adc
std
lock
scas
loopne
out
les
iret
inc
xchg
inc
and
push
imul
sub
xchg
jbe
loopne
xor
mov
and
getsec
xor
rcl
xor
mov
fmulp
xchg
adc
dec
in
cmc
dec
rcll
in
fisubrs
inc
stos
mov
test
sub
mov
xor
adc
repz
cmp
xor
js
ret
jp
adc
dec
loopne
push
int3
loopne
or
cmpsl
mov
dec
inc
and
in
and
mov
popf
sbb
in
test
xor
rorb
stos
sbb
push
jp
push
inc
lret
scas
or
inc
inc
pop
stc
lods
or
lahf
popf
lcall
jecxz
sahf
clc
fwait
pop
push
or
and
clc
int
outsb
push
adc
mov
mov
pop
dec
movsb
out
repnz
sub
cmpsl
and
cld
push
sbb
add
or
sub
lods
xchg
xor
fldenv
dec
lods
mov
adc
mov
roll
sbb
ror
lods
or
test
jecxz
xchg
sbb
push
jg
and
movsb
adcl
cli
cmp
add
fwait
inc
adcb
fcmovb
dec
push
xor
shll
adc
jmp
cmp
in
sub
ret
push
sbb
jo
fdivs
stos
push
cmp
xchg
xor
notb
mov
jae
inc
ljmp
jnp
inc
mov
mov
jne
mov
push
sbb
sbb
mov
mov
pop
dec
inc
push
push
stc
inc
data16
xor
and
fisttps
and
and
inc
out
out
xor
dec
dec
pop
orb
jnp
jmp
sub
sbb
fidivrl
mov
jecxz
jge
xchg
cmp
push
xor
decl
sbb
int3
sahf
movsl
cmp
push
loop
inc
bound
mov
xor
mov
std
shrb
dec
dec
dec
mov
ds
add
mov
fistpll
mov
inc
push
inc
fistl
inc
fidivrs
data16
adc
mov
adc
pop
fwait
mov
rcl
jmp
or
stos
mov
sub
pop
imul
in
pop
jb
cmp
push
jmp
ds
or
mov
ret
arpl
lret
mov
mov
fs
lcall
clc
cld
push
fidivrl
adc
and
push
adc
aam
inc
push
adc
or
es
or
add
mov
mov
mov
mov
stos
xchg
nop
mov
pop
jmp
icebp
movsl
inc
jno
icebp
sub
loope
push
cmc
pop
movsb
cmp
fsub
fdivs
cmc
mov
mov
ret
jbe
imul
insl
lahf
test
mov
in
movsl
inc
xor
sti
jnp
shll
mov
xchg
movsb
mov
jne
ljmp
lret
ret
loope
cmp
sar
in
cltd
cltd
cwtl
pop
and
test
fidivs
mov
cmp
movsl
push
jb
push
pop
jl
mov
xor
adc
notb
mov
call
push
cs
sti
xor
cmp
loop
adc
shl
dec
push
inc
out
jmp
inc
lea
mov
jge
lcall
in
mov
add
pop
ret
xor
push
aas
divl
repnz
adc
je
cmp
push
mov
ja
in
inc
dec
inc
mov
inc
test
mov
inc
sbb
outsl
dec
pop
mov
inc
or
mov
repnz
popa
int3
test
pop
out
xor
mov
mov
jns
pop
sub
pop
daa
dec
mov
jg
call
sbb
push
add
fwait
not
push
cli
push
out
std
sub
mov
aam
aas
into
in
add
and
out
pop
xor
dec
loope
inc
push
xor
mov
into
xor
aas
test
in
stos
fisttpl
mov
push
push
xor
insb
test
shll
cmp
movsl
sbb
and
loope
jmp
xor
dec
in
repnz
imul
jb
xchg
sub
pop
fimull
add
es
enter
shrl
sub
imul
pop
push
dec
sbb
jg
scas
in
pop
daa
pop
dec
ljmp
pop
outsl
repz
mov
imul
test
sbb
add
shll
jae
adc
jnp
in
inc
fidivrs
pop
pop
iret
jb
es
or
pop
stc
and
jmp
es
jmp
test
jno
xchg
push
push
fwait
lret
addr16
mov
mov
push
test
mov
or
mull
sub
in
addr16
aam
and
sub
jg
lahf
dec
pop
xlat
jge
sahf
sbb
scas
jns
and
adc
mov
les
lods
ret
or
cmp
popf
rorb
ljmp
pop
jecxz
mov
sub
push
push
ss
enter
test
leave
lret
cli
call
add
jns
aad
dec
jecxz
jp
pushf
mov
aam
lock
xchg
iret
retw
gs
pop
addr16
push
inc
fwait
xor
mov
repz
fbld
xor
add
je
dec
fisubrs
leave
mov
xchg
adc
aaa
sbb
outsl
xor
insl
out
sub
pushf
xchg
imul
pop
cmpsb
cmp
insl
idivl
or
pop
repnz
or
shlb
pop
addr16
mov
jae
sub
insb
add
pop
lock
adc
sbb
xchg
aaa
dec
test
sbbl
fadds
aaa
or
mov
sub
jo
stc
adc
int
dec
loope
out
inc
ficomps
shll
dec
cmp
loopne
xchg
adc
sbb
jae
out
leave
adc
push
push
push
lret
sbb
cmc
dec
push
in
ljmp
mov
and
dec
js
xchg
mov
mov
mov
das
sbb
lods
add
sti
and
inc
lods
xchg
pop
jmp
push
xchg
xor
loop
sti
scas
fisubs
repnz
pop
inc
dec
int3
mov
popa
mov
mov
jbe
lea
or
push
dec
lret
aas
in
fcompl
pop
aad
mov
clc
int
sub
fsubl
ficomps
adc
jbe
hlt
cs
je
lahf
sbbl
mov
shlb
xor
ss
gs
sub
adc
int
cltd
mov
and
xor
aas
shl
mov
jne
or
cmp
adc
in
xor
jl
movsb
in
mov
dec
jmp
adc
push
pop
dec
rorb
outsb
gs
xor
bound
into
clc
pusha
pop
ljmp
mov
aam
mov
cmc
shlb
sub
push
popa
or
mov
mov
lret
add
fs
orl
lret
push
adc
pop
xor
push
mov
jno
in
xchg
mov
in
shll
inc
push
outsb
lock
xchg
mov
sub
dec
dec
jl
mov
pop
mov
xor
mov
clc
mov
and
inc
dec
lret
scas
xchg
mov
sbb
adc
xor
bound
sub
aas
mov
and
or
sbb
and
insl
ljmp
cmp
fwait
insl
icebp
adc
push
je
mov
and
mov
std
je
fidivs
lods
xchg
scas
mov
mov
loope
ficoml
lret
sahf
mov
add
lcall
sub
andb
enter
outsb
xchg
jp
pop
jns
dec
lock
loope
bound
int
les
add
pop
in
add
sbb
lahf
aas
std
or
frstor
jge
push
cmp
xchg
or
jmp
repnz
or
js
cmp
clc
outsb
hlt
loopne
rol
jbe
xchg
inc
lods
fmulp
cli
loope,pt
adc
inc
sub
mov
aad
pop
ja
leave
fnsave
in
test
cmpsb
mov
jns
and
lret
repz
sti
clc
movsb
les
xchg
lods
stos
test
pop
cmp
movsl
das
mov
xor
fistpll
xchg
shll
fcmovnb
add
mov
std
xor
fadds
fists
mov
add
or
stc
bound
leave
bound
xchg
xchg
sub
adc
leave
push
in
push
ret
movsb
rcrl
push
and
mov
cld
xchg
jne
dec
iret
insl
scas
xchg
pop
in
mov
gs
shll
nop
inc
aam
push
jno
ss
mov
ljmp
push
xchg
in
sub
inc
imulb
out
xchg
xchg
push
xor
pop
into
sbb
add
shl
xchg
sub
lock
fsin
bound
cld
fcompl
loope
in
movsb
call
mov
mov
xchg
dec
pop
lods
dec
fbstp
lds
sbb
jg
add
aam
int
inc
jnp
mov
lods
inc
dec
ljmp
pop
lea
imul
mov
fs
aas
mov
leave
into
cltd
ss
cwtl
adc
shrb
pop
jg
dec
pop
cmp
jo
inc
mov
mov
mov
in
loopne
pushf
popf
stos
mov
sarb
iret
in
add
jae
adc
iret
adc
loope
mov
popa
mov
dec
fldt
pop
push
mov
imul
aas
outsb
cltd
ja
lret
add
jl
cmp
ret
xlat
lods
or
repnz
mov
xor
mov
xor
cs
sub
adc
fbstp
nop
push
addl
jns
sub
scas
push
push
jns
xorl
xchg
adc
sub
mov
popf
call
jecxz
stos
decb
movsl
push
inc
out
cwtl
inc
xor
mov
xchg
jne
mov
mov
sub
cltd
push
test
imul
dec
cmp
imul
shlb
push
push
imul
cmp
int
push
in
cmpsb
add
stc
js
push
cltd
push
adc
dec
dec
inc
cltd
repnz
bound
xchg
adc
leave
test
in
imul
and
imul
lret
push
push
dec
push
sbb
jne
les
adc
pop
mov
mov
aaa
aaa
add
rorl
sub
add
pushf
fdivl
dec
movsl
scas
push
mov
mov
cmc
adc
cmp
scas
ret
inc
jb
jne
outsl
lret
and
lock
out
cs
adc
out
jl
leave
testl
add
jb
inc
dec
dec
dec
xchg
mov
aas
and
dec
popf
scas
sub
xchg
lods
sbb
into
enter
xor
cmc
mov
sbb
or
inc
loop
jl
mov
loopne
fs
fnsave
or
jbe
xor
mov
push
push
loop
cmp
sbb
dec
xadd
cmp
dec
insl
cmp
sbb
xchg
and
cmp
test
cwtl
xchg
jg
loope
sub
arpl
aam
aas
daa
jmp
and
outsl
push
mov
in
sbbl
add
push
out
fwait
out
push
mov
test
adc
aas
dec
mov
add
mov
mov
and
sti
or
xor
loopne
std
cld
xor
push
shlb
lret
mov
aad
xchg
lahf
sbb
xchg
sbb
cs
mov
sub
sti
out
cli
sbb
stc
add
loopne
mov
xchg
xor
mov
fcmovnb
jmp
cmp
insb
aaa
or
int3
dec
sarb
pop
loopne
or
and
in
es
add
sub
cs
add
int3
and
in
stos
ja
mov
ljmp
ljmp
call
std
ja
fstps
cli
dec
mov
fists
xor
xchg
or
lret
and
sbb
pusha
xchg
mov
adc
rolb
lret
enter
imul
mov
inc
or
push
add
add
pushf
dec
adc
std
in
mov
insb
xchg
sub
sbb
or
mov
fcmovnbe
jmp
xlat
insl
in
in
dec
mov
ds
adc
xor
iret
cs
pop
adcb
mov
and
inc
mov
cmp
test
lret
push
je
mov
ret
mov
mov
add
andb
and
mov
ds
sbb
push
fwait
lret
adc
mov
push
in
jno
sahf
mov
aaa
mov
int3
sub
and
mov
and
les
mov
adc
add
in
sbb
icebp
pop
repnz
and
leave
fiadds
push
inc
xor
jb
ss
push
out
or
pop
jge
outsb
aad
fsub
jns
jge
arpl
add
imul
jb
inc
cmp
add
test
lock
sbb
ret
lahf
add
inc
dec
cli
nop
mov
push
loopne
dec
add
cmp
jmp
in
dec
inc
mov
ffreep
js
jl
movsl
mov
jle
outsl
rcr
inc
add
scas
lret
bound
rolb
lahf
and
pop
sub
loopne
lret
bound
xchg
dec
test
test
cli
lods
jp
fistps
pop
hlt
push
jae
fistpll
pop
outsb
nop
popa
xor
inc
out
ds
dec
cltd
data16
mov
mov
sti
movb
icebp
stos
fimull
xchg
into
jno
adc
mov
pop
sarb
out
push
leave
lret
xor
sub
fwait
mov
xchg
aaa
mov
adc
cli
push
inc
or
xchg
cmp
es
xor
pop
mov
std
and
fcompl
fistl
sub
hlt
push
jmp
rclb
or
lods
xor
pop
data16
push
mov
arpl
mov
adc
fdivl
mov
lahf
stos
loop
into
cmpsb
sbb
je
add
inc
lods
fcmove
fldt
push
lods
sbbl
aam
xor
jnp
xor
dec
pop
gs
cli
popa
ja
insb
pop
xchg
inc
pop
mov
and
mov
sbb
inc
es
nop
mov
cs
das
fwait
jge
lds
dec
loopne
cmp
rorl
and
or
sbb
sbb
cs
add
shll
jle
ss
out
shlb
pop
in
cmp
pop
sub
adc
mov
popa
xor
xchg
scas
inc
mov
xchg
outsb
sbb
push
or
daa
mov
leave
mov
cmp
adc
mov
out
in
test
xor
testl
dec
push
dec
iret
stos
out
js
mov
push
stos
mov
push
test
in
rcl
mov
cmp
loop
sbb
and
fwait
xor
pop
out
cmp
testl
repz
add
and
mov
fsubrs
sbb
data16
jbe
push
inc
fmull
insl
out
and
insl
jbe
pop
adc
xchg
jp
gs
test
xor
or
fcomps
rcl
and
arpl
fsts
cmp
call
or
repz
cmpl
pusha
popf
mov
and
andb
shrb
pop
popf
push
incb
aaa
mov
xchg
cmp
lret
loope
push
mov
inc
std
mov
adc
das
mov
test
push
in
push
in
stos
and
or
lock
mov
jmp
in
scas
js
cmp
xchg
jnp
push
loope
sub
mov
out
xchg
arpl
cmpsl
push
or
xchg
mov
sahf
or
inc
sub
sbb
jmp
jmp
push
adc
repz
pushf
fisttpll
std
lds
lret
adc
cmpsl
mov
add
mov
ret
je
loope
test
mov
xchg
sbbl
testl
sub
mov
lcall
lcall
adc
cli
mov
mov
sahf
cmp
add
movl
mov
dec
stos
add
pop
cmp
notb
test
xchg
test
fnstsw
pcmpgtw
into
add
test
and
pop
test
or
xor
adc
lock
ret
and
xor
adc
cmp
cltd
xor
dec
ret
cmp
leave
lods
xchg
lret
fidivs
lret
add
bound
loope
mov
nop
stos
imul
cmp
std
sbb
and
mov
sahf
or
scas
fnsave
mov
mov
shlb
push
mov
and
xor
out
call
loopne
cld
push
cvtpi2ps
repnz
jns
mov
push
mov
or
jl
shll
loop
pop
lock
jmp
xor
mov
sub
mov
cs
or
mov
add
in
add
ja
mov
sbb
ja
jp
jecxz
mov
leave
in
mov
pop
sbb
dec
pop
xchg
subl
aam
cmp
sub
dec
das
fidivs
testb
aad
xchg
pop
sahf
shll
jae
inc
mov
lods
leave
sahf
orb
je
ret
push
push
inc
inc
sub
xor
mov
adc
jge
xor
movsb
imul
cmpb
jmp
xabort
pop
sbb
mov
mov
mov
pusha
loop
jl
out
int
mov
jge
andb
and
lea
fsubrp
nop
inc
scas
sti
adc
roll
push
dec
ret
popa
mov
roll
rcr
xchg
mov
les
jg
lret
xor
sti
arpl
push
jmp
ret
cld
in
inc
cltd
mov
iret
inc
jle
push
lahf
push
in
xchg
push
mov
lahf
cld
aad
imul
mov
dec
jnp
jp
es
mov
inc
fdivrl
pop
arpl
imul
sti
xchg
mov
push
inc
out
xchg
inc
roll
repz
cld
hlt
jmp
push
pop
inc
ret
jg
lret
decb
or
daa
je
inc
jb
xchg
scas
inc
enter
lahf
rorl
mov
notl
repnz
jae
adc
fstpt
pushf
xor
mov
jbe
adc
xor
std
outsl
icebp
mov
repz
out
lock
subl
loop
ss
inc
lahf
pop
insb
shrl
jp
outsb
jno
fidivrs
stos
cmp
jae
loop
add
inc
add
in
mov
sub
outsb
negl
int
inc
daa
pushf
ret
jnp
xlat
es
add
jae
in
xor
movsl
sub
sahf
dec
nop
push
bnd
jge
adc
xor
push
dec
jp
int
in
std
xchg
push
adcl
jb
xor
js
cmp
lds
mov
jecxz
call
imul
cmpl
test
pop
pusha
addb
jg
cmp
add
les
jae
ret
movsb
pusha
push
sbb
sti
pop
cmp
add
mov
inc
mov
aam
ficomps
and
push
rolb
in
repz
mov
test
mulb
loope
xchg
push
frstor
mov
jmp
xchg
repnz
dec
pop
push
adc
mov
xor
push
cmpsb
out
push
jne
lret
xchg
add
inc
pop
lods
xchg
xchg
mov
mov
cmp
cmp
faddp
ret
mov
pop
xchg
pusha
and
shlb
in
pop
pushf
jne
in
push
mov
dec
add
testb
dec
aas
or
out
fsubl
notb
mov
add
or
rcl
lahf
push
rcll
sahf
mov
or
or
sbbl
jge
nop
sbb
mov
mov
aaa
inc
sbb
xlat
loopne
fsubr
test
mov
cmp
adc
scas
mov
daa
mov
vorps
test
dec
in
cmpsb
or
dec
jbe
and
test
push
mov
push
add
cwtl
pop
mov
pop
js
xor
sub
jle
pop
mov
sbb
dec
or
inc
inc
loop
inc
shll
push
scas
cmp
mov
and
jge
pop
scas
pop
mov
sub
cmp
adc
out
sub
sbb
sub
aam
mov
cmp
xchg
adc
or
mov
adc
inc
add
addl
out
aam
push
sbb
jge
ljmp
push
stos
mov
fnsave
dec
fildl
inc
fdivrl
cli
cmp
adc
sub
ret
scas
pop
repnz
or
cmp
out
aas
nop
lods
jo
cmpsb
push
mov
xchg
sub
cmpb
lods
jmp
or
mov
push
xchg
sub
repz
jecxz
sub
jae
push
xor
arpl
sub
mov
stos
mov
add
and
xor
loop,pt
sub
jp
scas
push
inc
shrb
cmpsb
inc
testl
jge
adc
jp
push
jnp
cmp
add
data16
fwait
ljmp
call
sarb
fldlg2
inc
mov
cmp
inc
imul
cmp
int3
imul
jmp
mov
and
repnz
movsl
and
and
mov
sub
mov
cmpsl
mov
pop
out
mov
adc
fsubrs
lock
pop
sub
ret
into
gs
daa
cmpxchg
test
adc
das
shll
xchg
loop
or
pop
or
and
pop
nop
daa
nop
les
inc
jb
scas
inc
jo
arpl
out
dec
sbb
hlt
xlat
jae
and
cmp
pop
jecxz
out
mov
add
mov
dec
xor
in
cmp
scas
sub
aas
adc
ss
dec
pop
test
sub
out
inc
push
jae
pmovmskb
aas
xchg
xchg
dec
cmp
xchg
and
shl
pop
shrl
push
out
push
and
mov
mov
dec
fiadds
sub
imul
sbb
dec
mov
arpl
xabort
and
sbb
inc
inc
adc
pop
mov
int
pop
add
addb
cmp
sbb
mov
mov
lock
outsb
push
inc
lcall
push
or
xchg
and
push
scas
lock
js
push
aas
add
and
or
cmp
clc
iret
inc
pop
sub
gs
xor
pushf
jmp
dec
ficompl
das
push
in
sbbb
arpl
sbb
push
movsl
mov
xor
mov
mov
xor
add
inc
fs
adc
xchg
inc
jne
add
add
cmp
xlat
iret
xor
sbb
sub
loope
jecxz
cmp
pop
loope
bound
or
mov
pop
popf
push
shll
dec
mov
and
jp
sbb
popa
and
dec
dec
xchg
jo
pop
inc
aaa
cmp
lods
mov
out
jno
stos
push
cmp
xchg
add
out
mov
and
lds
hlt
mov
mov
or
mov
cli
hlt
add
or
fcomps
pop
popf
inc
xchg
popa
clc
ss
cwtl
insl
es
jg
inc
cli
mov
adc
stos
leave
cmp
jae
gs
sahf
xor
cmp
push
inc
fidivs
out
fdivs
sub
ja
lret
pop
stc
lds
inc
adc
sbbb
cmp
mov
push
push
out
cmp
mov
fdivrp
rcrb
ljmp
adc
in
jecxz
mov
js
pop
mov
jne
cmp
jns
cmp
xor
xchg
push
aam
sub
inc
inc
xchg
xor
push
jae
or
cli
pushf
shll
popf
inc
lock
pop
adc
sub
sbb
xchg
iret
mov
scas
mov
xchg
jge
pop
xchg
daa
xchg
xchg
jge
lahf
insl
cwtl
cli
outsb
lods
adc
sbb
jg
int
jp
adc
inc
pop
jbe
lret
lock
sti
fwait
addl
hlt
scas
xchg
stos
rclb
dec
out
ds
je
add
sbb
mov
mov
jno
lret
pop
mov
negb
cmp
test
sbb
mov
call
inc
popa
inc
mov
push
cwtl
jl
mov
sti
xchg
aam
jp
sbbb
rol
sbb
pop
fcompl
jns
cs
ss
cmp
xchg
movsb
jne
mov
and
dec
loop
dec
mov
cmp
imul
add
xchg
push
push
testl
insl
push
adcb
push
loopne
fldl
ja
xchg
pop
gs
lret
mov
ja
pop
mov
mov
stos
lds
inc
adc
xorl
adc
sub
mov
push
leave
icebp
scas
ss
movl
dec
or
lods
mov
lahf
ss
rcrb
ss
fisubrl
cwtl
stos
adcb
or
pop
jb
push
pop
mov
std
andb
pop
sub
dec
pusha
lods
add
mov
popa
push
imul
sub
int3
cmp
loope
add
adc
sub
jbe
pop
mov
mov
sub
loopne
lods
and
lret
shl
or
sub
lcall
cmp
pop
lock
fsts
scas
cmovo
jmp
or
dec
aam
fwait
inc
push
sbb
scas
orl
push
pop
imul
pusha
sbb
stos
leave
lret
dec
in
xor
and
add
or
xchg
je
icebp
mov
frstor
push
pop
outsb
adc
mov
lret
es
jge
in
mov
push
cwtl
stos
or
sub
xchg
mov
dec
push
mov
in
add
fsubl
and
inc
fisubrs
push
std
xorb
movsl
xor
mov
sbbl
clc
repnz
sub
xchg
add
pop
mov
mov
inc
loopne,pn
mull
push
imul
cmp
addr16
sbbb
pop
adc
mov
mov
stos
sub
mov
or
scas
cltd
in
adc
outsb
pop
jge
push
push
jmp
jb
mov
je
clc
push
pop
xchg
jnp
notl
xchg
dec
icebp
or
shr
divb
movsb
sub
inc
in
scas
dec
cmp
add
sub
mov
and
aam
insl
push
xor
pop
arpl
adc
xor
fidivl
insb
jecxz
lds
push
hlt
push
and
adc
jle
int3
sub
stos
sbb
add
pop
mov
sbb
aam
cmp
sub
aas
loop
push
out
xorb
pop
push
push
pusha
jp
repnz
xchg
mov
xchg
adc
dec
inc
sbb
cwtl
mov
inc
and
jnp
adc
das
cmp
daa
sahf
dec
push
pop
shrl
mov
ret
sub
ljmp
lds
lcall
arpl
bswap
arpl
xchg
lds
mov
inc
enter
or
subb
jno
sbbb
xor
icebp
mov
roll
ljmp
repz
loopne
and
rcr
inc
inc
dec
ret
fdivs
sbb
mov
push
cmp
imulb
sub
lock
cmp
in
pop
imul
add
test
adc
scas
xchg
push
jne
jg
lods
xchg
xchg
nop
pushw
into
inc
cmp
mov
fsubrs
shrb
hlt
push
test
lock
jecxz
mov
loope
call
das
inc
inc
mov
shrb
out
sbb
xlat
repz
sub
lcall
xor
fsubrp
mov
mov
xchg
sub
rcrb
sub
ficompl
inc
fs
test
pop
scas
pop
xchg
jno
hlt
lods
xor
data16
imul
je
call
hlt
adc
sbb
jae
xchg
in
scas
push
stos
mov
pop
rolb
jle
stos
cwtl
pop
into
test
adc
pop
cmp
addps
push
mov
jns
das
adc
jb
jnp
data16
js
dec
and
or
fbstp
les
aaa
lock
push
sbb
mov
in
push
mov
cmp
les
popa
push
mov
rcll
out
jno
xor
lods
inc
cmp
clc
js
push
in
or
orl
in
jae
pop
nop
stos
ja
jg
push
jl
ret
out
mov
repz
pop
push
test
inc
or
es
xchg
divb
daa
inc
cli
sub
rorb
lea
sub
xchg
aaa
sbb
sub
pop
xchg
fcompl
icebp
ds
pop
fcomps
dec
cmpb
pusha
in
rcll
mov
loopne
mov
xchg
mov
hlt
mov
push
mov
xchg
adc
pop
cmp
out
jmp
mov
iret
cmp
adc
ret
cld
pop
imul
jmp
dec
xchg
fistpl
sahf
into
stos
push
ficoms
push
mul
stc
pop
hlt
sub
jnp
mov
fcompl
test
push
movsb
jle
dec
pop
dec
lahf
or
mov
push
shlb
lods
jle
push
jmp
pop
cmp
addr16
inc
push
out
shll
lahf
ss
leave
and
lret
xor
jno
lahf
ss
sbb
pop
xchg
cmp
inc
push
pop
aam
in
jb
imul
xor
push
cmp
xorl
add
clc
xor
out
mov
jb
imul
sub
rclb
ja
fimull
stos
dec
lods
sti
and
in
mov
mov
addr16
adc
pushf
push
ja
pop
inc
cli
adc
notb
pop
and
sub
out
int3
cltd
testl
repnz
out
cmp
ds
shl
xchg
stos
repz
sbb
pusha
adc
mov
jmp
lret
push
cmp
dec
mov
add
jl
xchg
push
mov
ljmp
lock
jnp
or
lock
mov
movsb
cmp
push
sbb
es
fidivrs
inc
loope
jns
gs
cwtl
cmp
cmp
xor
pop
mov
xchg
imul
popf
and
push
jmp
enter
stos
es
fwait
cmp
ljmp
push
icebp
test
mov
push
mov
xor
sub
adc
repnz
inc
jge
pop
cmp
lock
push
mov
imul
sbb
mov
xor
arpl
mov
and
inc
pop
adc
dec
cmpsb
aad
mov
mov
mov
add
mov
ljmp
or
mov
loope
lret
loopne
lret
sub
fldlg2
cmp
testl
pop
push
inc
add
inc
lcall
sub
ret
incl
test
mov
push
sbb
sbb
mov
ss
push
ja
inc
daa
clc
stc
xchg
cmpsl
inc
or
jp
sti
fisubrs
mov
dec
ret
bound
orb
shl
lea
xchg
jno
int
pop
mov
out
das
fistpl
rorl
ljmp
jo
cli
sub
int
dec
cmp
sbb
adc
xor
mov
dec
stos
andl
outsl
cmp
pop
push
nop
shrl
push
inc
test
inc
pop
mov
ret
sbb
dec
mov
sub
add
dec
idivl
fmul
add
fbld
and
add
xor
push
mov
lahf
pop
popa
out
xchg
jge
cld
lods
dec
stos
ljmp
and
loop
xchg
jbe
loop
bound
jnp
sub
push
sub
fiaddl
sbb
push
dec
jb
test
daa
lahf
pop
inc
jbe
adc
add
jmp
and
cli
sub
jno
fdivp
mov
fs
fistl
cli
xchg
das
lds
mov
dec
loop
adc
fidivs
mov
mov
je
push
xlat
pop
icebp
cld
dec
shld
test
lahf
inc
movsb
adc
lods
clc
inc
mov
es
push
inc
dec
cmp
es
or
mov
mov
leave
lds
inc
daa
xor
enter
add
pop
sbb
mov
push
jge
stc
adc
adc
jl
mov
sbb
idivl
mov
mov
jg
out
jo
aas
pop
jge
cmpsb
arpl
out
sbb
push
mov
cmp
das
imul
sub
or
and
pop
xchg
cmp
adc
fsts
ljmp
scas
loopne
das
push
mov
dec
mov
push
in
lods
push
out
dec
adc
notb
in
repnz
add
data16
jbe
or
push
neg
xor
jo
sti
push
in
sub
test
je
sti
icebp
xor
rcrl
jge
jbe
xchg
call
test
cli
roll
cmp
decb
cmpsb
insb
xchg
enter
outsl
cld
xchg
mov
push
mov
and
inc
out
push
dec
jmp
sti
loope
pop
das
mov
ret
repnz
shrl
lcall
cmc
or
loopne
push
xchg
add
sbb
sbb
adc
push
icebp
leave
or
rorl
xchg
mov
jmp
inc
or
mov
pop
xchg
ds
jp
mov
push
nop
inc
mov
ljmp
inc
pop
mov
test
dec
pop
push
mov
fdivs
sub
insl
jnp
dec
sub
icebp
and
cmc
mov
loopne
dec
fwait
lcall
cmpsb
jl
flds
out
mov
lcall
hlt
push
lahf
fcmovnb
pop
jl
add
mov
sub
movsb
sbb
sub
fisubl
push
adcl
loope
xchg
push
outsl
in
mov
shr
scas
in
and
fistpll
arpl
adc
inc
fdivp
dec
inc
jecxz
gs
ret
fwait
or
cmp
jecxz
push
outsl
dec
cwtl
lock
add
xchg
sub
push
xor
or
cmp
into
push
mov
cmp
std
in
jo
rcr
pop
fmuls
lahf
lcall
ret
out
sti
daa
dec
sbb
cmp
lcall
push
push
xor
sar
nop
fs
and
push
sbb
ja
insb
gs
pop
mov
int3
mov
cmpsb
or
inc
leave
cs
sub
jmp
outsl
jmp
mov
pop
out
cmp
pop
out
enter
jp
mov
cld
pop
add
xor
sub
mov
ret
inc
push
inc
loopne
loop
inc
leave
adc
fstpt
push
out
fcompl
add
repz
mov
cmp
int3
pop
js
adc
pop
mov
es
lcall
cmp
sub
xor
add
add
int3
imul
mov
dec
fldcw
adc
dec
push
cmpsl
fisubrs
mov
call
or
clc
jecxz
gs
xchg
std
js
in
mov
mov
dec
sub
pushf
outsb
push
jmp
push
and
and
push
and
or
jae
lock
jecxz
ss
daa
inc
mov
jae
push
xchg
and
mov
ss
testb
daa
cmpsb
xor
and
sbb
push
dec
jge
sub
or
push
mov
cmp
decb
mov
cmp
xor
stos
sahf
adc
or
lret
js
jae
cwtl
stos
push
sbb
push
ret
sub
scas
loope
push
pusha
cmpsb
inc
or
mov
jae
xor
clc
mov
outsb
pop
mov
jp
insb
sbb
adc
rorl
testb
movsl
mov
stos
adc
add
xchg
ljmp
xor
push
and
jne
inc
or
dec
subb
and
iret
inc
aas
jle
mov
sbb
insb
jge
sbb
inc
jmp
jnp
fnstenv
and
jp
dec
mov
push
leave
pusha
out
pop
in
test
pusha
cmp
imul
repnz
dec
adc
testb
cmp
out
std
shlb
add
inc
arpl
adc
fdivrs
inc
fisttpll
lret
jecxz
leave
mov
sti
push
mov
xor
mov
pop
xchg
sub
adcb
in
lods
inc
cs
test
into
lret
and
rcl
into
jns
decb
xlat
jmp
divb
mov
mov
xchg
aam
test
fbstp
rclb
xor
xchg
and
mov
jae
inc
lahf
and
cli
jns
loope
or
inc
scas
mov
mov
pop
and
xor
bnd
inc
fiaddl
in
outsl
pop
call
testb
fdivrl
fldenv
sub
jmp
xchg
jmp
mov
mov
fiaddl
mov
pop
push
or
mov
cmpsl
hlt
mov
clc
subl
mov
mov
or
dec
and
pop
xchg
call
and
scas
mov
enter
push
scas
mov
adc
xor
add
jns
sarl
mov
imul
push
movsb
fdivs
fcmovbe
lock
jns
mov
xchg
adc
xor
xchg
std
mov
das
test
sub
dec
jmp
cmp
popf
dec
dec
push
xor
inc
inc
in
jbe
cmpsl
ds
mov
add
bound
and
mov
adc
incb
cmpsl
sarb
scas
inc
mov
xchg
aas
pushf
int3
dec
into
pusha
cld
mov
loop
cmp
shrl
sbb
inc
lcall
pop
mov
xchg
cmc
es
push
sbb
mov
adc
fcmovbe
push
xchg
mov
sbb
movsb
dec
jg
fs
jecxz
or
fidivs
sub
cld
es
xchg
decl
movsl
xchg
xlat
movsl
jmp
gs
dec
pop
fisttpll
mov
sahf
mull
mov
pop
xor
test
outsl
xor
testb
mov
jns
shrb
adc
sub
xor
imul
xchg
dec
cmp
sub
push
aas
pop
sbbl
fadds
mov
sbb
stos
out
scas
rolb
jbe
jne
hlt
xchg
add
cltd
pop
das
xchg
or
imul
push
cltd
jo
xchg
xor
and
bound
fnsave
das
adc
lods
and
movsl
sahf
inc
rcl
mov
mov
jno
pop
testb
jnp
and
pop
out
xor
idivl
dec
dec
flds
mov
sbb
jle
mov
push
pop
test
mov
mov
outsl
push
push
mov
ljmp
jno
pusha
stc
push
mov
lea
jle
pop
test
insb
dec
int3
jno
jle
push
dec
push
inc
cmp
cmp
add
mov
dec
aam
test
adc
mov
ja
sub
mov
insb
and
and
test
int3
fs
es
sbb
lcall
shrb
test
sub
dec
scas
inc
sub
pop
fucomi
push
test
dec
pushf
cmpl
jmp
push
mov
icebp
sbb
add
cmpl
fwait
popf
xchg
xchg
jae
ficoms
ret
dec
mov
mul
dec
cmp
push
push
outsl
loopne
test
mov
ja
or
sti
bound
jmp
push
mov
rcll
scas
adc
and
es
aam
scas
mov
into
out
addb
mov
push
mov
cmp
repnz
nop
in
ret
test
inc
mov
mov
ret
push
icebp
and
push
call
jmp
pop
pop
ret
cmp
mov
or
movsl
clc
or
je
sbb
imul
mov
mov
in
and
mov
jae
outsb
or
xchg
in
bnd
pop
rcr
lret
push
mov
push
mov
mov
into
mov
divl
out
in
lahf
jmp
jl
sti
mov
dec
dec
pushf
push
stos
pop
pushf
lret
jnp
dec
lea
pop
cmp
adc
mov
xor
popf
rcrl
dec
scas
daa
mov
mov
lods
and
cld
movsb
mov
movsl
mov
sbbl
cmc
scas
push
sub
pushf
pushl
push
cld
rol
adc
lret
push
das
xchg
jge
and
dec
aad
cmp
sub
pop
lea
cld
or
mov
jle
lcall
outsb
xor
push
mov
xor
mov
push
push
lahf
imul
mov
mov
dec
fsub
add
pop
sbb
ret
mov
jno
ret
adc
xchg
mov
mov
ret
adc
mov
mov
fcmovnbe
insb
or
imul
pushf
popa
cwtl
pop
roll
arpl
sbb
mov
orb
sbb
mov
mov
pop
imul
addr16
xchg
mov
sub
dec
or
int
in
mov
js
dec
pop
out
repnz
loopne
xlat
push
out
outsl
pushf
xor
and
lahf
inc
xchg
mov
stc
pop
jo
jl
setb
jno
and
cmp
shr
nop
dec
addr16
jp
cmp
dec
cwtl
cs
scas
popf
cltd
and
or
mov
jmp
in
fstl
jp
jno
ror
pop
inc
cld
orl
popf
andl
mov
dec
push
pop
ret
mov
insb
inc
xlat
xchg
sbb
jno
in
or
lahf
aas
jl
or
or
repz
xchg
nop
jge
jnp
out
cmp
fiadds
cmpsb
aam
mov
inc
mov
mov
mov
lods
and
jecxz
inc
ja
lret
in
loopne
dec
lahf
xchg
scas
mov
cmpsl
mov
mov
mov
ret
inc
fidivs
jp
ds
or
sahf
fildl
push
in
movsl
cmp
movsb
mov
nop
stos
mov
ret
insb
cli
sbb
ss
movsl
jge
loopne
outsl
cmp
pop
das
pop
or
rcl
jecxz
shl
dec
aaa
insb
fisubrl
aad
mov
fsubs
xlat
add
mov
jae
sbbl
lret
cmp
cld
les
out
fldt
jne
pushf
jp
lock
std
insl
add
fdivrs
gs
scas
fstpl
enter
push
testb
call
jmp
sbb
imul
sub
dec
or
imull
adc
loope
dec
pop
and
or
and
sbb
push
mov
sub
aam
hlt
add
aad
cmpsb
pusha
push
jp
arpl
push
call
jp
lea
push
pushf
push
lods
leave
and
jmp
xor
push
and
fidivl
cs
fs
push
testl
sub
shrb
mov
xchg
add
lahf
and
sub
in
and
jno
sub
aaa
aam
clc
xchg
xor
dec
cli
cmp
inc
push
jmp
push
lahf
push
pop
inc
jmp
or
xor
mov
testb
ljmp
imul
imul
mov
mov
test
std
add
andl
pop
icebp
or
out
movsl
aaa
xchg
movsl
cmp
mov
xchg
jge
clc
or
cwtl
xchg
rcl
loopne
repz
pop
data16
cmp
mov
out
shlb
jb
mov
imul
clc
and
sub
sub
lods
mov
fistps
aam
push
bound
aaa
inc
ficomps
xchg
push
add
sbb
les
shlb
adc
pop
dec
sub
sbb
daa
arpl
xchg
cmp
scas
ret
out
roll
jb
inc
mov
clc
in
nop
adc
pop
lret
popf
xor
outsb
push
cmc
aaa
xor
xchg
pop
leave
xchg
mov
lret
ss
lret
and
loop
call
xor
in
lock
adc
adcb
test
or
out
jl
jno
sub
in
jb
pop
fcomip
xchg
je
adc
fincstp
jo
pop
push
xchg
dec
es
rol
mov
vmovddup
stc
aad
scas
dec
in
mov
aam
jbe
in
inc
xchg
mov
fcompl
cmp
and
ret
and
loop
adc
and
insb
out
aam
xchg
insb
jmp
or
scas
cmp
cmp
adcb
imul
mov
push
adc
aam
fwait
imul
scas
mov
jmp
and
cmp
mov
push
push
stos
or
push
inc
mov
jmp
cmp
aam
fbld
lret
jle
in
push
fidivs
inc
mov
cs
xor
mov
add
cs
faddl
or
fld1
and
inc
or
cmp
ljmp
mov
sti
pop
outsb
sub
mov
sbb
inc
xor
and
sti
mov
xor
inc
nop
pop
inc
dec
aam
mov
loopne
cs
xchg
cs
inc
orl
fnstcw
cmp
jns
xor
mov
int3
xchg
cli
pushf
push
push
xor
sub
cmp
rorb
add
roll
jo
xor
mov
aam
xor
jmp
cmc
mov
mov
dec
call
hlt
mov
mov
mov
movsl
shrb
add
cmpsb
xchg
xchg
fisttpl
es
fldenv
test
jmp
test
adc
aas
mov
in
call
in
add
mov
dec
pop
ljmp
xor
out
mov
cmpsl
fdivrs
fisttpl
mov
jp
mov
mov
jg
mov
ja
mov
push
movsl
outsl
mov
jns
fsubs
mov
out
add
ret
incl
jbe
scas
push
les
divl
int3
xchg
in
fcomi
xchg
mov
ljmp
out
cmp
dec
cmp
cmpsb
push
pop
dec
xchg
out
mov
pusha
jp
shrb
test
into
fnstcw
pop
mov
std
cmp
jecxz
push
mov
dec
ret
jmp
dec
jmp
fbld
in
xor
test
mov
sbbb
outsb
dec
loope
js
imul
xor
test
lret
xorb
mov
sub
add
es
out
test
sub
or
inc
adc
mov
das
mov
js
dec
adc
rcl
push
push
cltd
mov
inc
dec
cmc
inc
divb
add
jne
add
jo
push
sub
inc
jbe
sti
shr
jmp
iret
inc
and
jnp
or
xchg
mov
scas
aam
mov
aad
sub
imull
mov
pop
push
cmp
sahf
mov
dec
adc
sub
popa
les
mov
adc
mov
add
push
xchg
xor
test
or
aas
jbe
out
in
in
aam
push
push
dec
inc
fdivrl
dec
inc
ss
arpl
add
scas
push
push
mov
shl
jne
and
inc
sbb
cmp
insb
sbb
and
icebp
aaa
dec
cwtl
jae
jle
out
sub
mov
push
add
out
and
lea
xorb
push
cmp
push
sahf
pop
pushf
das
mov
shrb
jno
pop
sub
lea
xchg
pop
adc
cmp
shrb
les
xor
fildl
addr16
mov
out
jb
cmp
ret
sahf
mov
lods
xchg
add
outsl
push
fmul
mov
mov
xor
into
add
lock
outsb
dec
dec
dec
pop
xor
aad
subl
dec
sub
ljmp
and
jp
aaa
adc
insl
rcr
mov
mov
xchg
daa
insl
sbb
mov
push
or
gs
icebp
scas
outsb
fdivl
les
inc
jecxz
and
stos
sub
in
fadd
jbe
or
jae
cmpl
add
lods
jmp
jle
aaa
lods
mov
ss
stos
cmp
mov
repnz
sbb
shlb
test
bound
sahf
xchg
push
mov
fisttpll
movsl
cmp
mov
lcall
jns
jo
push
jne
push
test
sub
ds
dec
jmp
add
loop
mov
lods
mov
add
mov
nop/reserved
push
stos
xchg
daa
out
xor
push
mov
xorl
mov
sub
push
int
or
movsb
sub
cmpsl
cwtl
jl
jno
ja
mov
sbbl
sti
bound
jecxz
mov
jge
cmp
aam
repz
cmp
inc
adc
sbb
das
or
and
test
hlt
xchg
sarb
mov
sbb
xchg
out
mov
mov
mov
xor
xlat
jno,pn
mov
leave
inc
aaa
push
shlb
sbb
pop
inc
movsl
loopne
out
outsl
or
cli
xlat
sbb
in
mov
mov
aas
subl
dec
xchg
add
inc
das
cld
aaa
sbb
int
xor
scas
mov
test
pop
jmp
out
cltd
lds
stc
iret
pop
mov
lret
and
xchg
repnz
fwait
inc
ds
jl
pusha
mov
pop
cli
iret
mov
scas
movl
mov
pop
out
inc
outsl
hlt
jbe
mov
sub
popa
push
cwtl
inc
xchg
or
and
sbb
lods
mov
dec
pop
sub
inc
pop
sub
stos
push
mov
xchg
je
cmp
push
loop
sti
es
mov
test
dec
iret
testb
das
mov
and
setle
adc
loop
movsb
push
pop
andb
pop
ja
push
gs
and
lret
lea
cmp
push
pop
xor
mov
fstp
ss
out
mov
xchg
sub
addb
ja
lcall
lcall
xor
sar
data16
in
jns
jecxz
mov
cmp
mov
fmuls
pop
insl
imul
xchg
or
mov
lahf
test
xor
jb
cmp
or
and
sub
sbb
cmp
andb
cltd
fsubl
push
push
repnz
pop
mov
inc
add
nopl
lret
pop
mov
cmp
lods
add
mov
cmp
cmp
mov
pop
out
mov
xor
pushf
scas
stc
push
or
or
jb
insb
movsl
and
xchg
push
mov
mov
ret
arpl
hlt
jge
mov
rcll
cmc
and
loopne
xchg
popa
call
lea
xchg
scas
fwait
adc
mov
nop
sti
cld
mov
ss
std
pop
mov
lahf
fwait
jne
sub
mov
push
repz
inc
les
jmp
cmp
ds
jge
test
cs
out
and
mov
out
int3
add
mov
adc
adc
mov
js
bndstx
dec
adc
test
sbb
jnp
cmp
cs
out
dec
mov
mov
mov
out
mov
or
sub
in
loop
aaa
inc
xchg
pop
jle
push
xor
add
xor
adc
sub
mov
pushf
xor
dec
ret
movsb
divb
out
aaa
incb
lea
xor
jmp
mov
ds
pop
jne
jb
out
mov
popa
fstpl
insb
test
sbb
push
inc
xor
cmp
xchg
subl
aaa
sub
loope
arpl
jo
pushf
cmp
sbb
dec
shl
add
imul
mov
adc
jb
in
pusha
xchg
cs
pushf
sub
test
mov
popf
push
mov
inc
dec
arpl
xor
cltd
adc
loope
movsl
and
jge
mov
mov
or
jne
stos
mov
wbinvd
aam
adc
scas
push
cwtl
imulb
in
std
fdivrl
cmp
popf
icebp
subb
fwait
mov
sahf
clc
dec
or
or
in
cmp
dec
push
cmpsl
icebp
aas
shrb
sti
insb
dec
pop
push
inc
push
addr16
outsb
lods
cs
fcompl
cwtl
inc
in
and
stos
scas
mov
scas
or
or
cmpsb
cmp
loopne
loope
jae
pop
mov
cmp
mov
and
fsts
popl
mov
xchg
lock
ret
adc
ds
std
or
cli
inc
leave
mov
push
xor
inc
arpl
int3
push
mov
or
scas
sbb
xchg
enter
fdivrl
jecxz
cmp
repnz
or
fcmovnu
mov
shlb
leave
mov
add
adc
or
push
cmpsl
rol
mov
pop
push
cltd
test
sub
iret
jle
mov
inc
lock
mov
push
in
subb
int
jl
mov
cmp
add
mov
and
pusha
idivl
inc
pop
lock
montmul
cmpsb
lds
sub
std
mov
sub
insb
loopne
sub
loop
fcmovnbe
cltd
jle
or
je
push
lds
pusha
into
sub
pushf
mov
ret
pop
lds
mov
xchg
and
aaa
into
mov
sub
jo
shrl
jle
jno
es
movsb
cmp
jp
cli
push
mov
in
addr16
inc
notl
iret
sarl
movsl
sti
popw
aad
daa
sar
push
out
jns
adc
xor
cmc
jmp
push
push
xlat
xorl
xchg
dec
jno
mov
fistps
push
std
lahf
sub
outsb
fldl
mov
xchg
enter
lahf
ljmp
inc
in
xlat
xor
xchg
mov
lret
dec
es
add
hlt
cld
inc
addl
ret
test
push
ret
fidivl
inc
xchg
movsl
pusha
inc
fwait
jl
xor
xor
pop
pop
mov
mov
clc
mov
jb
mov
push
subl
aam
cwtl
mov
and
je
dec
pop
data16
inc
xchg
int3
lret
int3
icebp
lcall
sbb
adc
sub
push
sub
dec
movl
jl
mull
xchg
mov
mov
sbb
sbb
fs
push
and
into
in
push
cmpsb
lods
test
mov
pop
or
enter
jg
or
sbb
test
dec
inc
inc
jmp
pop
les
sub
lcall
pop
ret
scas
mov
popa
sbb
mov
inc
xchg
insb
test
adc
stos
jp
into
insb
lret
adc
leave
scas
inc
in
pop
in
mov
in
ret
inc
sub
xchg
aad
mov
sbb
sbb
bound
and
fwait
push
inc
xlat
xchg
addr16
rclb
dec
fistps
stc
pushl
test
stc
repnz
xchg
mov
mov
mov
cld
sbb
jge
cmp
dec
sahf
sbb
enter
clc
pop
pop
pop
mov
popa
clc
jno
cmp
cli
pop
sub
insb
xchg
lcall
lret
mov
sbb
iret
or
xchg
test
sbb
lock
add
mov
dec
shl
mov
out
movsb
fcmove
ss
jge
mov
mov
push
outsb
iret
add
jb
data16
mov
roll
stc
ja
jmp
imul
jecxz
nop
push
arpl
lea
dec
je
xrelease
enter
sarl
or
or
xor
adc
insl
mov
mov
rcrl
mov
rol
fldcw
mov
jnp
cmp
or
dec
movsb
repnz
xor
pop
mov
cmp
popa
imul
push
loope
stc
adc
pushf
cli
mov
fs
mov
push
loop
es
adc
fnstenv
pop
imul
xchg
sbb
and
vpcomuw
cmpb
icebp
and
and
cs
mov
push
mov
mov
dec
out
adc
add
pushf
jne
int3
mulb
pop
pop
fistl
adc
inc
push
es
adc
xor
xor
in
gs
andl
adc
jae
xchg
movsb
mov
cli
jbe
popa
dec
sub
mov
or
mov
mov
stos
clc
stos
fwait
imull
dec
and
and
fdivs
sub
insl
jg
lahf
add
cmp
iret
mov
sbb
testl
shlb
or
adc
sbb
ret
add
xchg
or
pusha
repz
xor
mov
xchg
mov
jmp
mov
mov
add
jle
xchg
xorb
inc
sahf
ds
scas
out
sbbl
fbstp
xor
dec
inc
outsb
mov
shlb
in
add
jns
aas
cmp
push
mov
popa
fiadds
xor
cmpsl
fldcw
loopne
test
addr16
lahf
js
int3
fdiv
scas
xor
mov
testb
xor
sub
lret
jbe
ja
sahf
sbbb
dec
repnz
fisubs
push
nop
pushf
inc
push
jmp
sbb
bnd
jp
shrl
cmpsl
clc
inc
or
leave
insl
pop
jge
push
jno
sahf
aad
mov
push
repz
dec
sbb
inc
sbb
mov
xchg
xor
ret
cmp
ljmp
jno
call
jns
das
lock
adc
pop
mov
xor
icebp
jmp
push
jmp
arpl
lret
jns
cmpsl
xchg
cltd
mov
pop
or
add
ja
lds
ljmp
dec
in
xchg
hlt
divl
sbb
pop
mov
pop
xlat
cmc
push
int3
mov
mov
mov
add
enter
dec
dec
imul
cmc
adc
cmp
or
dec
pop
in
xchg
push
jns
mov
dec
mov
pop
mov
cmpsl
subl
subb
xchg
stos
dec
pop
adc
ljmp
cmp
mov
pop
sahf
aam
add
mov
and
xorl
xor
das
outsl
and
mov
in
push
cmpb
cmc
sub
out
inc
insl
jp
fcomps
cltd
pop
xor
adc
xchg
fwait
ret
or
cltd
ljmp
ljmp
inc
inc
loop
pop
sub
rclb
xchg
push
movsb
shll
adc
jmp
sub
and
pop
mov
jbe
sub
fstps
rcr
sub
fistl
popa
cli
aaa
std
fs
fneni(8087
clc
movsl
add
mov
shrl
jmp
jge
xchg
sub
mov
lods
iret
sbb
iret
ja
into
shll
push
out
dec
jg
mov
xchg
add
imul
out
cli
in
push
std
push
ss
sar
lock
cltd
or
insl
push
ret
fidivs
out
fidivrs
adc
cmp
jo
and
xchg
add
scas
call
adc
push
ss
gs
add
jge
popa
fcompl
or
adc
aad
mov
pop
jbe
xchg
mov
mov
sahf
shlb
pushw
je
cmc
jb
daa
in
push
not
cld
fs
in
sti
xchg
mov
dec
cmpsb
push
mov
add
test
mov
push
cmp
pop
bnd
loopne
inc
add
das
lcall
rcl
jns
pusha
inc
int3
loopne
push
jne
insl
mov
jne
adc
and
pushf
push
mov
and
cmpsb
or
pusha
xor
jno
ljmp
std
mov
mov
xor
mov
jge
stc
movsb
mov
out
pop
lock
hlt
test
sbb
aaa
cmp
mov
mov
dec
fsub
pop
inc
push
sub
cmp
and
push
add
repz
push
mull
pop
int
mov
jecxz
arpl
cmpsl
jns
sbb
cld
or
sub
adc
push
jb
xchg
sub
or
dec
cmc
mov
jo
das
mov
pop
dec
dec
pop
xchg
mov
lret
inc
dec
scas
pusha
nop
xchg
in
lret
mov
test
push
sbb
les
imul
mov
stos
sub
adc
cld
lea
sub
xor
cmp
jge
add
bound
xchg
mov
orl
test
push
ljmp
cmp
adc
les
mov
shrb
je
movsl
movsl
popf
hlt
xchg
test
pop
repnz
shlb
adc
mov
jb
ret
inc
xor
mov
xchg
add
scas
dec
push
cltd
dec
aam
popa
or
xor
cwtl
stc
mov
pop
jle
fs
mov
stos
inc
cltd
jge
mov
call
or
mov
mov
aad
mov
mov
in
sub
fwait
mov
dec
cmp
xlat
outsl
dec
addr16
aad
xchg
pop
insl
jae
test
call
sbbl
das
icebp
dec
arpl
cli
sbb
sub
stos
fistps
lods
and
sub
scas
pop
cmp
push
push
fdivr
add
xchg
jmp
pusha
loop
or
notl
sub
inc
dec
mov
testb
roll
test
cld
cwtl
das
sbb
shr
xor
dec
sbb
out
ds
dec
movsb
fsts
js
clc
aaa
into
sub
dec
pop
push
or
cmp
xchg
les
fscale
jecxz
inc
pop
lock
jp
add
ja
lea
pmuludq
push
int
xchg
ljmp
movsb
xchg
dec
cli
rcrb
push
out
pusha
test
popa
jle
or
cmp
mov
add
rorb
in
pop
test
jne
sub
test
dec
lea
out
sbbl
xor
jmp
mov
in
fwait
jle
imul
add
in
xchg
femms
cwtl
pop
mov
sbb
loop
shl
popl
mov
mov
adc
cmp
dec
inc
pusha
jne
jnp
xchg
ljmp
pop
mov
jae
xchg
adc
les
jno
movsb
or
aad
and
inc
roll
cmpsb
pusha
jg
jb
or
add
repnz
es
loope
dec
in
sbb
jne
in
push
mov
insb
push
jmp
pop
fdivs
test
push
push
mov
je
mov
add
sahf
andl
cmpsl
subl
jmp
test
mov
adc
mov
ret
nop
mov
fldt
sbb
repz
push
es
ds
xor
sbb
xchg
jbe
mov
out
push
and
inc
loop
cmpsb
icebp
add
in
xchg
sbb
xchg
popa
dec
cmp
jns
jg
int3
mov
dec
pop
push
push
push
out
cmp
jnp
shll
add
sbb
cmc
jbe
xor
mov
and
fildl
pop
movsl
sbb
cmp
pusha
jb
sbb
lret
jbe
ds
pop
sbb
pop
jge
mov
out
into
lret
call
shll
dec
scas
aad
pop
les
push
xchg
jecxz
daa
test
jae
rcrb
arpl
xor
cwtl
addr16
mov
pop
test
push
out
jae
mov
mov
andl
push
add
sub
jp
pop
mov
cwtl
test
movl
ljmp
push
loop
cmpsl
ret
imul
push
mov
into
sub
das
sub
add
std
or
jo
cli
addr16
adcb
xor
bound
test
sbb
mov
add
xchg
lret
push
icebp
ds
shrb
int3
nop
scas
js
mov
dec
lcall
mov
push
xor
std
sub
pop
push
dec
test
out
sub
popa
fsub
sahf
inc
sub
sub
popa
clc
icebp
pop
inc
out
cmp
jmp
xchg
cli
fs
sub
pop
subb
aas
xchg
mov
movsl
andb
push
cmp
int
rcr
insl
cli
mov
outsb
xchg
mov
sub
out
test
jb
jae
jmp
xor
sbb
push
shll
arpl
aam
jle
push
lock
dec
mov
scas
cmp
pop
sbb
addr16
fs
cmp
fsubs
scas
inc
push
and
xchg
mov
cmp
fdivs
pop
cmp
add
scas
dec
repz
cwtl
cmp
inc
push
push
jb
dec
shlb
jg
xchg
push
xor
je
aas
mov
aad
mov
jg
stos
pop
lahf
adc
pop
repz
dec
and
testb
gs
movsl
orb
mov
int
mov
stos
inc
pushf
cld
mov
movsl
cmp
loope
bound
ja
stos
mov
jle
ja
test
rorb
jecxz
mov
leave
xor
cmp
cmp
inc
call
jnp
ljmp
je
sbb
xor
xchg
add
lret
add
sbb
bound
aaa
scas
dec
mov
inc
mov
pop
xchg
mov
lret
stos
push
push
jnp
and
jne
lds
scas
and
add
fs
xchg
out
enter
lock
inc
inc
loopne
movsl
addr16
out
sub
dec
add
jg
cmp
sahf
mov
mov
jns
add
sub
pop
pop
negl
shrb
mov
mov
jns
mov
jmp
sbb
fdivl
jne
mov
ljmp
insl
in
adcb
xor
xchg
pop
xchg
or
addr16
cmpb
jge
fcomps
andb
push
lods
xchg
lds
mov
fists
mov
or
add
pusha
xchg
sbb
out
sbb
cmpsl
xchg
and
sub
jl
mov
fistpll
ficoms
movmskps
js
lods
sub
std
scas
lea
scas
mov
adc
call
dec
sub
in
cmp
xchg
in
sbb
mov
pop
add
jge
dec
jecxz
stos
push
sub
das
rolb
sbb
adc
or
fnstenv
lds
aas
mov
inc
cmp
bound
es
pop
jge
adcb
mov
mov
dec
mov
into
cmp
dec
repz
inc
stc
fadds
xlat
adc
or
out
test
repnz
cltd
sub
xor
sbbl
and
test
popw
cld
cltd
shlb
pushf
test
cmpb
shlb
cmpsl
popf
movsb
mov
adc
mov
inc
sub
sbb
cltd
xor
sub
xchg
aad
shl
dec
cmp
sbb
insb
add
jp
mov
loope
xchg
sbb
das
dec
and
push
inc
cmp
sbb
ret
aad
cmpsl
test
testb
lods
mov
fists
xchg
nop
in
out
xchg
xchg
sbb
enter
sbbb
cmp
pop
ss
sub
inc
xor
das
cwtl
add
mov
mov
cmc
sub
imul
popf
test
test
loop
sbb
lret
nop
addb
mov
ret
addl
out
mov
daa
mov
mov
push
mov
sub
inc
fsts
dec
cltd
dec
mov
jmp
into
xchg
sub
shlb
mov
jl
dec
mov
adc
hlt
push
push
xor
pop
test
out
out
cld
pusha
pop
mov
push
mov
aaa
loop
pop
push
adc
fdivs
add
aad
dec
andb
imul
push
cmpsb
testl
sub
es
lock
dec
loop
inc
adc
dec
xchg
dec
shrb
adc
lock
pop
mov
out
js
cs
mov
aad
arpl
xchg
mov
mov
push
jmp
aaa
mov
imul
push
mov
ljmp
xchg
sbb
rorl
or
add
cmpxchg
movzbl
aaa
sbb
pop
aad
aad
test
xlat
mov
push
mov
push
inc
jnp
sub
pop
pop
xor
mov
mov
in
aam
sbbl
or
sti
clc
testb
inc
adc
jbe
leave
inc
sbb
push
mov
pop
sbb
jg
xor
gs
outsb
xchg
cmp
push
shr
repnz
lods
pop
cmp
dec
inc
dec
repnz
sub
lea
test
addr16
rolb
mov
fstps
xorb
imul
xor
dec
popa
daa
mov
dec
call
or
dec
mov
mov
out
push
cs
add
xor
xchg
adc
int3
repz
jge
bound
cmp
push
insl
xor
sbb
lcall
push
and
leave
cmpsb
cmp
jns
dec
dec
cmc
and
jns
xchg
inc
jl
ss
scas
aad
aad
frstor
push
fildl
inc
add
scas
jle
adc
dec
repnz
jo
dec
shrl
rclb
xor
pop
mov
popl
sbbb
int
mov
imull
cmp
add
mov
pop
roll
pop
stc
test
ja
xchg
inc
cwtl
mov
lret
fists
push
inc
lret
fidivrl
inc
xchg
xchg
lahf
ret
mov
out
es
jp
mov
inc
add
pop
sahf
or
mov
sbb
mov
imul
push
in
xchg
sbb
aas
subl
hlt
fwait
jp
push
sbbb
sbb
mov
mov
dec
dec
cwtl
jnp
mov
das
xorl
outsl
adc
add
dec
ds
scas
adc
dec
inc
rclb
inc
fbld
arpl
pop
cmp
cli
xorl
or
add
cmp
es
test
cmp
addr16
dec
xchg
xor
and
fldcw
or
mov
cmp
in
adc
lret
xor
icebp
outsl
add
inc
div
fldln2
je
cs
and
es
lods
std
add
mull
or
in
mov
and
mov
mov
ds
sub
popf
xchg
in
jmp
jo
enter
push
jge
add
add
push
dec
jecxz
jae
xchg
cmpsl
ficompl
loope
push
mov
mov
int3
sub
in
test
and
xor
or
stc
xor
mov
cmp
inc
sar
jg
sti
add
mov
dec
cmpsb
inc
xchg
mov
inc
aas
sub
shlb
pop
pop
jp
push
cmpsb
addr16
icebp
mov
jle
dec
xchg
repz
jbe
cmp
sbb
xor
cli
jbe
les
jl
hlt
and
ja
pop
xor
or
jmp
and
arpl
push
push
dec
int
and
and
addb
xor
es
fst
rolb
int3
sbb
dec
in
pop
ljmp
aas
daa
adc
andl
adc
pop
out
push
xor
mov
inc
in
aas
sbb
mov
fs
scas
inc
xchg
orl
sub
xlat
stos
inc
fwait
dec
loop
lcallw
cmp
cmp
sub
inc
lods
mov
lds
hlt
iret
and
mov
or
cmpsb
fdiv
andb
pop
xchg
outsl
jnp
adc
lret
cmp
arpl
mov
pop
push
xchg
jno
cmpl
jmp
push
jb
enter
jle
xchg
xor
cltd
mov
mov
sub
fldt
loopne
mov
jne
enter
insl
leave
inc
add
fistps
mov
scas
mov
iretw
lcall
push
into
stos
ror
pusha
fnstcw
out
cmpxchg
mov
insb
push
and
sbb
and
dec
jo
jge
fisubrl
ss
out
fisubs
cwtl
in
xrelease
mov
cs
add
dec
inc
enter
out
shll
and
cmp
ret
or
ficoml
jnp
push
jno
add
or
and
push
push
addl
cmp
icebp
out
jle
in
push
and
push
in
xor
pop
xchg
add
test
push
in
push
jbe
mov
ds
enter
or
outsl
push
cmp
xor
xchg
adc
adc
lock
sub
mov
movsb
daa
sbb
sub
lea
mov
dec
out
aam
mov
pop
repnz
add
cmpsb
inc
inc
mov
jmp
mov
jmp
mov
aam
lea
mov
dec
xlat
dec
adc
hlt
clc
xchg
sub
and
std
adc
fdivrl
inc
xlat
push
movsl
pusha
add
xor
clc
lret
adc
lret
aas
sbb
sbb
pop
shrb
xchg
data16
adc
pop
cmp
test
mov
mov
jb
cmp
movsb
daa
xor
pop
insb
xlat
sbb
or
cwtl
sbb
adc
outsb
arpl
ret
push
inc
xchg
rorl
mov
mov
inc
cld
loopne
in
call
test
mov
adc
add
lods
dec
icebp
cs
mov
dec
js
mov
rorb
add
loope
stc
pop
insb
sub
test
in
pop
xor
decl
jbe
scas
push
int
or
fwait
inc
xchg
push
and
test
insl
push
push
xchg
add
jp
pushf
stos
pop
loope
cmp
and
add
push
jge
ret
sbb
or
sbb
lods
enter
leave
inc
scas
imul
fnstenv
xlat
pusha
div
in
daa
jno
jle
pusha
lahf
mov
out
fnstenv
adc
xchg
je
jp
pop
xchg
sbb
clc
mov
and
and
mov
lea
mov
fadd
rorl
sub
rcrb
out
sub
ljmp
pop
lds
mov
test
sub
insl
lea
dec
loope
bnd
popf
push
imul
jmp
pop
insb
sti
dec
stc
jg
xchg
add
ljmp
idivb
add
xorb
sbb
sub
add
dec
xor
ret
pop
daa
orb
iret
loope
add
lods
jb
movsl
shl
xchg
push
into
fsubp
add
mov
clc
popa
pusha
mov
add
cmp
sub
lea
jno
push
scas
ret
or
loop
movsb
lds
pop
stos
mov
push
scas
andb
mov
inc
mov
aad
fbstp
mov
adcb
jge
test
pop
jecxz
mov
push
sbb
adc
push
ja
pop
int
add
mov
stos
leave
lods
inc
mov
push
fstl
in
jne
pop
dec
pop
cs
xchg
imul
lods
xchg
adc
data16
out
and
mov
mov
xor
or
adc
push
cmpl
popf
and
adc
je
popl
popf
testl
sbb
xchg
push
mov
mov
jecxz
lcall
pop
mul
or
xchg
pop
adc
add
vorpd
fadd
push
mov
popf
test
or
push
stc
imul
fimull
loope
mov
mov
push
fldl
mov
test
push
jno
adc
repz
stos
push
subl
shlb
out
xchg
mov
rcl
call
and
jge
xchg
ret
mov
inc
insb
in
push
out
sbb
add
andb
std
xor
dec
ret
xchg
cmpsb
cmp
rcrl
bound
cmp
imull
sub
mov
sti
cmpsl
ds
mov
jne
push
repnz
popf
add
cmpsb
inc
adc
cli
popf
les
pop
out
out
mov
cltd
adc
cmp
mov
xchg
cmp
push
sbb
jo
xchg
fwait
sbb
aad
ret
into
gs
adc
ss
shll
enter
pop
popa
inc
lret
out
daa
cvtps2pd
repnz
lds
imul
fstps
in
int3
fdivl
pusha
fbstp
sbb
xchg
fidivl
pop
test
pop
fstpt
or
xchg
pop
jno
dec
sbb
imul
add
dec
mov
int
cmp
fbld
int
pop
xchg
dec
loope
and
das
push
lcall
into
inc
popa
outsl
and
js
scas
and
push
fidivl
add
daa
aam
pop
lods
test
inc
repnz
repz
mov
dec
out
scas
cli
dec
lds
movsl
cs
dec
int3
pop
movsl
js
push
cmc
pop
adc
iret
ss
pushf
inc
inc
fldl
cs
ss
push
xor
test
sbb
leave
inc
aas
dec
lods
pop
push
ljmp
clc
fistpll
imul
sbb
xor
test
jge
jne
pop
loopne
and
and
nop
inc
pop
loope
cmp
jp
ds
in
ljmp
mov
cmpsb
xchg
jp
fimull
arpl
ja
mov
repnz
jo
pusha
nopl
call
or
xchg
mov
int3
pop
xor
or
xchg
lret
pop
bound
jne
popf
enter
sub
cmp
mov
sbb
hlt
push
sti
fwait
mov
or
cld
adc
xchg
cld
les
or
jle
push
outsl
les
inc
notb
sbbb
jecxz
enter
daa
aas
in
xchg
mov
mov
mov
and
inc
insb
mov
sbb
aaa
fldpi
icebp
mov
sub
mov
out
ret
and
sbb
inc
data16
add
int
xchg
sub
dec
dec
out
dec
sbb
mov
cs
fidivrl
sub
sbb
lahf
xchg
cli
int3
arpl
push
nop
lea
jns
mov
jl
cmp
sub
add
and
fists
movsb
movb
cmp
xlat
sub
add
add
lret
xchg
movsl
mov
push
mov
mov
fildl
mov
push
andb
icebp
jns
hlt
nop
lret
xchg
ljmp
jge
int
cli
sahf
pop
out
mov
push
jbe
je
rorl
sub
lcall
cwtl
movsl
adc
mov
fwait
cmp
test
pop
call
sbb
dec
icebp
addr16
repz
jp
icebp
jecxz
fstl
shrl
je
cmp
mov
xchg
add
shrl
or
aad
js
mov
add
or
dec
dec
dec
out
cmp
xchg
sarl
popf
mov
dec
pop
mov
rorl
add
mov
cltd
mov
out
outsl
fbld
inc
lea
movsb
xlat
pop
sbb
cmp
jl
sbb
mov
or
enter
in
insl
inc
pop
add
xchg
mov
jg
neg
jmp
xor
and
movsb
pop
pop
popf
xor
test
adc
shlb
rcrl
shll
enter
rcrb
aad
cwtl
aaa
into
cwtl
iret
mov
cli
or
and
mov
inc
bound
jb
test
lods
push
mov
rcll
or
xor
jp
sub
pop
insl
clc
stc
inc
test
adc
push
xor
sub
popa
test
je
dec
jae
call
iret
push
jno
shl
pushf
ss
repz
lods
jbe
adcl
xchg
notl
fs
aaa
jae
ret
negb
dec
rclb
dec
scas
sar
or
cmp
xor
jbe
repz
xchg
subl
jb
push
negb
mov
sar
cld
xchg
aaa
repnz
jbe
jecxz
rclb
inc
fidivrs
jb
xchg
negb
das
rcll
and
repnz
pop
push
out
xchg
add
mov
rcrb
pop
mov
jne
or
xor
test
cs
pop
push
dec
jne
jnp
mov
mov
mov
subl
sub
cmp
lret
dec
jmp
sahf
cltd
insl
jp
and
or
adc
loopne
dec
sub
mov
dec
or
sub
push
arpl
pop
ss
faddl
ss
xchg
mov
popf
xor
xchg
adc
insl
shlb
xor
cld
push
pop
movsb
adc
cmp
adc
xor
stos
cld
in
mov
or
push
xor
push
hlt
push
sub
and
out
push
loope
xchg
sub
add
dec
out
push
ds
push
jmp
jecxz
stos
inc
aas
add
outsb
popl
fucomp
cmp
add
rol
fwait
das
out
push
inc
mov
xchg
stos
add
add
jno
jge
or
cwtl
out
inc
inc
cmp
mov
mov
xor
jge
dec
outsb
sub
sub
inc
stos
adc
push
sub
xchg
arpl
push
cmp
movl
pop
jb
push
mov
call
push
adc
lret
mov
insl
cmp
or
stos
jnp
sub
loop
fisttps
mov
sbb
or
das
and
aad
cmc
and
test
rcr
mov
and
dec
loope
mov
cwtl
xor
adc
and
orb
test
decb
lods
push
xchg
mov
mov
push
insb
dec
pop
push
lods
add
xor
movsl
pop
dec
cmp
int3
fdiv
lds
or
pop
shlb
frstor
sub
sub
inc
adc
fidivl
jnp
aam
into
nop
inc
fmuls
gs
jl
loope
out
cmc
testl
lcall
xor
test
notl
push
iret
push
dec
int3
fidivrs
addr16
sbb
adcb
xchg
outsb
int
jnp
es
shl
xor
das
stc
roll
pop
jbe
push
stc
sub
cmpsl
imul
add
ljmp
dec
out
out
sub
sub
inc
xlat
add
repz
lret
jno
sti
test
sub
jns
or
aas
popl
aas
jle
cmp
and
insl
dec
xchg
movsb
rorl
mov
cmovbe
adc
sbb
sbb
filds
cld
xor
cmpsl
adcb
lds
addr16
ja
fs
stc
lea
inc
gs
sbb
or
sarb
mov
pusha
shrl
mov
mov
jge
adc
fdivl
and
js
ret
add
ds
push
out
aam
pop
iret
shrl
int3
arpl
js
bound
scas
mov
inc
out
sbb
add
iret
cmp
inc
ficoml
add
cmpsb
scas
outsl
push
loopne
sbbl
add
add
push
outsb
add
xchg
mov
insl
add
mov
add
push
cmp
add
mov
add
outsb
xor
sbb
jecxz
add
adc
sbbl
and
insl
stc
insl
incl
dec
jle
push
roll
pop
faddp
sub
dec
pop
cmp
lret
clc
jb
cs
sbb
mov
pop
into
scas
test
adc
dec
mov
ret
push
mov
xor
mov
sub
fcmovbe
inc
fidivl
out
insb
fldt
notl
xor
lods
mov
push
and
push
daa
outsb
and
fwait
shl
jae
xor
rcrb
or
shlb
test
mov
imul
popl
push
lret
pop
jmp
cmpsl
adc
lock
mov
fwait
xor
pop
xor
cmpl
scas
imul
mov
and
xor
loop
jnp
sbb
out
out
sbb
push
mov
add
popf
lods
popf
lea
iret
rolb
jb
rclb
in
sti
adc
clc
xorl
cs
dec
stos
movsb
pop
adc
pop
movsb
xchg
sub
nop
ret
pop
ret
repnz
fsubrl
mov
mov
lea
addl
loopne
mov
insb
add
push
sub
mov
mov
mov
add
insl
loop
adc
inc
jbe
je
ja
sti
sub
data16
mov
pop
adcl
mov
dec
or
add
sub
les
movl
cmp
das
mov
inc
push
add
call
mov
stos
fnstcw
fisubl
cmp
mov
les
fs
and
fdivrp
push
pushf
or
pop
jbe
lods
mov
or
ret
push
or
repnz
push
mov
in
ficoml
sbb
sbb
adc
push
insb
rol
test
lods
shrb
rolb
mov
pusha
repz
sbb
fildl
or
push
mov
rolb
and
jmp
or
jbe
sarb
movsl
jmp
call
adc
inc
fsubl
in
cmpsl
push
xchg
mov
xor
aaa
jne
or
sub
sub
pop
out
adc
sub
mov
mov
dec
and
jae
ljmp
lret
int
jb
mov
jle
and
xor
fmul
cli
push
rol
fbld
cmc
mov
jg
or
test
rcll
hlt
mov
jbe
mov
pusha
xor
sbb
dec
stos
sub
sbbl
pop
mov
rcrb
lret
jp
fs
aad
outsb
inc
out
aaa
inc
out
push
add
lret
leave
mov
mov
sbbl
cld
jmp
insl
loopne
or
sub
pop
addr16
and
sbb
sbb
int3
and
dec
or
je
mov
ds
int3
push
pop
inc
or
sub
ficoml
xor
adc
jo
pop
shr
sbb
sub
test
test
jmp
add
push
xchg
das
pop
sbb
enter
cs
push
dec
add
mov
push
inc
ljmp
insb
inc
loop
mov
cs
pop
popa
or
outsb
xor
pop
adc
inc
in
pop
mov
push
scas
stos
fstps
push
push
insl
mov
jae
test
rcrb
daa
jnp
pop
dec
fbld
mov
push
in
pop
or
int
pop
pop
scas
shll
lahf
aad
mov
cmpsl
pushf
aaa
jo
dec
subb
mov
fistps
push
out
lds
pop
mov
arpl
push
mov
fists
sub
shlb
icebp
add
cli
rorb
loopne
push
xchg
mov
push
dec
lcall
add
rcrl
inc
test
jbe
test
adc
sbb
aam
imul
scas
xor
cmp
push
sbbb
cwtl
ret
inc
pop
dec
in
cmpsb
and
mov
xlat
mov
pop
je
and
xor
int
ja
push
sub
cmp
or
test
pushf
imul
xor
sbb
clc
pop
ja
dec
cwtl
clc
testb
sub
fnsave
xchg
je
jg
xor
jp
or
loopne
mov
mov
pushf
ja
repnz
sbb
xchg
sub
insl
xor
xchg
or
add
shrl
imul
pop
mov
ljmp
bound
cmp
aam
and
test
push
or
outsl
lods
outsl
mov
lods
aaa
scas
pop
inc
dec
mov
push
jno
dec
nop
push
mov
sub
cmc
mov
and
mov
jmp
or
outsb
cmc
bound
xor
xchg
inc
cmp
movb
fmul
inc
dec
gs
push
fwait
call
sub
data16
icebp
insb
int3
push
xchg
inc
test
sarb
xor
aam
addr16
jl
inc
testl
sbb
xorl
sbb
es
shlb
jno
mov
aaa
out
repnz
jg
fs
mov
lock
repz
jne
sti
push
fldlg2
mov
and
inc
push
dec
mov
dec
cmpsb
adc
les
push
cmp
sub
mov
dec
xor
idivb
xchg
mov
dec
vpcmpgtb
cmp
add
jnp
mov
rcr
popa
add
inc
sub
mov
mov
cmc
int3
dec
sub
jle
or
adc
pusha
cmpsb
cmpsb
dec
mov
shlb
mov
sarl
movsb
loope
shlb
sub
outsl
notl
data16
xchg
lahf
jmp
in
in
stc
mov
push
xor
data16
aad
and
aam
out
cmc
inc
pop
test
and
test
ljmp
in
mov
push
out
ljmp
sub
andl
vshufps
jmp
xchg
cmp
cmp
pop
xlat
scas
mov
jb
andb
add
dec
mov
sub
addr16
xor
ljmp
aam
mov
jnp
aam
ficompl
movsl
cmp
ds
push
jmp
repz
push
call
inc
popa
mov
dec
xchg
ss
add
sub
xor
mov
xchg
inc
fiadds
mov
and
jg
lods
cmp
adc
out
lcall
test
pop
lcall
in
mov
cld
popa
mov
jg
gs
movsl
test
mov
cmp
inc
xor
in
push
js
fstps
arpl
enter
pusha
and
sbb
mov
pop
shll
mov
push
inc
inc
xlat
cmp
lds
jl
mov
mov
mov
es
das
cmp
jbe
movsl
jbe
cmc
jo
lds
sub
decb
imul
aaa
cld
aas
cmp
mov
iret
add
in
iret
fsts
jns
pop
cmp
sbb
fildl
test
mov
scas
jmp
fwait
adc
push
sub
dec
daa
pop
dec
rcrl
push
in
ss
mov
xchg
sub
pop
xchg
leave
lds
repz
sbb
lea
not
out
sub
subl
xor
stc
loopne
fisttpll
imul
xor
daa
repnz
or
jb
outsl
jge
xor
cli
ljmp
sub
cmpsl
jecxz
or
mov
fimuls
ljmp
lock
xchg
sub
hlt
add
sti
sbb
fs
xchg
xchg
out
in
jge
adc
shrb
dec
incl
mov
nop
jne
out
sub
sub
repz
jae
shlb
sti
leave
jns
daa
fidivs
xchg
sbb
inc
and
add
xor
testb
cli
or
push
sbb
imul
mov
inc
inc
push
ja
shr
outsb
pushf
xchg
inc
lahf
sbb
cmpl
or
pop
sbbl
js
scas
and
push
mov
cwtl
adc
aad
mov
mov
jl
mov
xchg
sbb
xorb
aas
adc
dec
push
cmpsb
push
mov
aas
fidivs
call
mov
and
cmp
lods
push
jmp
int
sti
into
mov
ljmp
jne
int
mov
cmc
xchg
mov
cwtl
sahf
push
push
xor
sub
loope
addl
rcrl
aaa
pop
mov
arpl
xchg
js
movsl
lods
mov
rol
std
pop
mov
sbb
addr16
aaa
cmp
sub
daa
cmp
mov
mov
adc
xor
add
mov
aas
cltd
lods
push
lcall
leave
lret
mov
adc
and
inc
arpl
std
xchg
push
push
aas
dec
jo
sbb
lds
sub
imul
add
stos
aas
stos
out
shlb
rol
dec
rol
jecxz
rcl
mov
jo
cltd
faddl
dec
sbb
lret
sub
aaa
sub
xchg
mov
cltd
inc
loope
pop
xor
jmp
decb
add
xchg
mov
sub
ret
and
test
cmc
lret
iret
insl
add
shlb
mov
sub
lods
sbbb
adc
adc
loop
cmpsl
push
call
rcl
movsl
mov
jmp
cwtl
cmpsb
bnd
std
filds
xchg
add
push
adc
push
mov
je
loopne
xor
push
lret
inc
movsb
int3
cmc
lahf
cmp
pop
push
out
scas
dec
mov
ret
xlat
mov
imul
test
push
sbb
push
es
or
jle
call
jns
fadds
jp
in
cld
imull
mov
mov
dec
xor
xchg
xor
js
add
in
xchg
adc
xchg
rorl
sbb
gs
popf
in
mov
les
rorb
test
sbb
fimull
ret
data16
push
inc
pop
push
insl
push
bound
pop
aaa
insb
subb
std
enter
fs
leave
mov
ss
jp
sbb
les
push
lret
lret
push
aam
sbb
inc
imul
push
push
xchg
insl
mov
popa
xor
pop
sub
addr16
shrl
mov
fidivrl
push
fldenv
cmp
fistpll
push
push
cs
aam
loop
repnz
xchg
inc
inc
jno
fcompl
or
movsb
hlt
jne
pushf
xor
mov
inc
fldenv
cli
in
xchg
lret
and
mov
imul
cmp
ds
popa
mov
mov
xor
dec
xor
shrl
shrl
shll
xchg
iret
mov
push
mov
aaa
push
mov
xchg
xchg
cmp
sbb
insb
insl
cmp
pop
mov
mov
repz
dec
add
sub
imul
pushf
scas
mov
mov
xchg
mov
scas
out
jo
xchg
mov
insl
add
stos
push
xchg
bound
icebp
mov
pop
sahf
hlt
cmpsb
dec
mov
out
xchg
dec
fstpl
test
mov
mov
sahf
jge
xchg
outsb
ds
mov
fidivrl
fcompl
push
jne
cmpsb
mov
dec
pop
mov
rcrl
rcl
xchg
push
stc
popf
fisttpl
popf
pop
jb
fsubrs
adc
jbe
test
in
test
popa
outsb
loope
ret
sbb
mov
daa
cmpb
and
dec
mov
mov
daa
int3
lret
xchg
and
sbb
cmp
cmpsl
ret
or
je
xor
mov
mov
sbb
dec
pop
data16
dec
daa
pop
mov
dec
add
push
push
push
mov
push
xchg
mov
rorl
enter
or
inc
xchg
or
aaa
sbb
sbb
pushf
repnz
and
sbb
daa
sub
aad
lea
push
mov
push
aaa
mov
lock
int
jl
test
or
je
and
pop
bound
test
lret
lods
or
dec
repnz
xchg
pop
cmp
dec
lock
in
lods
sbb
repz
ret
into
mov
dec
xchg
sbb
push
xchg
jae
loopew
bound
aas
xchg
paddsw
xchg
or
xchg
cmp
sub
dec
je
bound
push
je
jb
cmp
js
mov
dec
dec
dec
rcrl
mov
fidivrl
push
mov
addr16
sbb
adc
xchg
into
push
xchg
enter
lock
fsubrs
pop
xchg
mov
aas
insl
cmpsl
out
inc
push
or
out
in
push
aaa
pop
test
pusha
jg
and
outsb
lcall
sbb
add
xor
in
pop
cmp
movsb
out
scas
pusha
and
pop
push
xchg
into
xor
outsb
inc
or
ret
int
sub
popa
shrl
pop
jbe
or
in
jp
or
mov
adc
test
lods
stc
jo
inc
mov
stos
loope
adc
adc
sbb
push
fisubrl
and
cmpsl
xchg
rcrl
sti
or
sbbl
inc
lret
sbb
jl
or
fiadds
out
pop
popa
gs
mov
orb
imul
es
sbb
mov
dec
pop
push
ret
out
clc
sbbb
push
cmp
fstpl
aam
add
sub
subl
add
aam
xchg
adc
or
sbb
insb
pop
imul
or
fstpl
mov
in
out
ja
scas
inc
aaa
dec
faddl
jns
icebp
cs
cld
xor
shrb
inc
sbb
sti
in
sub
xor
pop
mov
dec
jg
jae
sub
test
mov
inc
fistpl
push
jecxz
cmp
rep
mov
inc
pop
and
pop
ja
mov
pop
sbb
stc
xchg
cmp
aas
aad
push
sbb
dec
dec
insb
test
inc
lods
cmpl
jne
das
xchg
aam
movb
sbb
daa
xchg
lods
call
fldlg2
hlt
xchg
int3
sub
into
insl
mov
nop
jns
fsubrs
lods
icebp
movsl
mov
out
jge
loop
mov
andl
mov
and
adc
xor
pop
and
fnstenv
jno
mov
in
popa
leave
lock
jl
les
jne
lds
add
jge
ret
push
mov
adc
lods
inc
dec
aad
int
loope
ss
inc
insb
mov
mov
std
xchg
xor
xchg
sbb
cwtl
fs
fs
cmp
xchg
fmull
mov
fstps
or
cmpsl
fcoml
imul
push
mov
insb
mov
and
test
int
gs
or
adc
jecxz
mov
outsb
int3
fmuls
and
and
xchg
test
mov
xor
push
scas
mov
push
scas
xchg
fbstp
movsl
add
cmp
aam
cmp
lea
pop
sahf
fisttpl
and
adc
imul
cltd
xor
dec
repnz
hlt
adc
sbb
sbb
fwait
sti
mov
xchg
jnp
xor
sbb
setbe
mov
add
mov
int3
jnp
mov
cltd
test
pop
cwtl
pop
mov
adc
jne
jmp
inc
lcall
adc
mov
sti
test
dec
test
loop
icebp
xor
cmpb
add
clc
lods
mov
pop
scas
fsubrs
sub
shlb
fcomps
sbb
lods
cmp
cmp
imul
cmp
sbb
mov
insl
leave
pushf
rolb
repnz
sub
addr16
mov
loop
sub
xlat
push
andb
add
inc
insb
dec
pop
sahf
data16
mov
in
and
mov
adc
into
xchg
dec
fmull
jo
shrb
hlt
pushf
pop
cmpsl
sub
cli
xchg
inc
pop
test
sub
fdivs
insb
clc
ja
jne
ja
aas
test
adc
or
cmpsb
les
push
nopl
stos
lea
test
inc
out
inc
push
adc
int
and
pop
js
add
xchg
dec
aas
fdiv
mov
sbbl
mov
shrl
adc
ds
sarb
inc
push
lock
sti
mov
inc
daa
add
cmp
inc
jno
notl
mov
enter
fst
flds
in
hlt
adc
rolb
dec
fisttps
adc
cmp
std
in
lret
and
xchg
push
call
lret
hlt
inc
dec
fnsave
loopne
pusha
or
sub
mov
cmp
or
xorb
xchg
xchg
negl
lahf
nop
inc
ss
sub
loope
add
jmp
push
jo
aas
test
aaa
sbb
and
inc
outsl
pop
lods
mov
push
push
cwtl
fidivrs
inc
sbb
std
int
outsl
lcall
dec
mov
sub
push
fists
inc
je
mov
call
pop
gs
jae
mov
in
in
lret
cmp
sbb
push
or
jbe
movsb
jo
sahf
loop
inc
mov
lock
imul
stc
mov
shrl
into
lahf
mov
or
pop
mov
mov
mov
andb
jmp
xor
nop
fadds
idivb
sbb
sbb
addr16
jb
mov
gs
sbb
in
xchg
lods
cwtl
test
aam
add
ret
or
or
cltd
xor
mov
test
fcomip
movsb
test
xor
das
js
pop
jmp
xchg
xor
cmp
mov
push
xlat
ss
shll
push
sbb
ja
mov
add
jnp
sti
lahf
mov
jne
and
xor
into
inc
cmp
std
setge
adc
push
inc
inc
or
in
ja
sub
mov
or
xor
loop
inc
fistps
add
pop
out
mov
pop
movsl
inc
xlat
daa
or
pop
jmp
mov
test
aam
int
test
jno
out
sub
mov
mov
mov
sub
push
dec
cltd
sub
sbb
pop
lea
xchg
ljmp
cmp
loop
pop
xchg
sub
sbb
addr16
push
repz
and
add
int
outsb
cmp
and
xchg
xchg
sbb
dec
add
adc
cltd
add
cmp
jnp
and
cmp
loope
test
sbb
ljmp
stc
data16
sub
dec
push
pusha
push
sbb
subb
jb
out
mov
cmp
pushf
scas
jp
in
imul
into
mov
jbe
inc
lods
inc
pop
sti
jnp
sarl
sub
mov
ss
sub
or
aas
test
xchg
mov
xchg
les
incb
mov
adc
std
inc
in
push
movsl
pop
shlb
daa
inc
xor
jno
notl
je
ret
inc
mov
mov
push
pop
mov
jb
and
push
shlb
fadd
fs
jo
ret
arpl
pop
dec
and
jge
sbb
les
mov
stos
das
call
test
xchg
popf
push
mov
ret
leave
adc
add
pop
sub
xchg
ja
pop
push
mov
aaa
or
fistps
mov
mov
push
sahf
adc
xor
outsb
pushf
test
ds
mulb
addr16
lock
pop
nopl
and
dec
ja
jle
jnp
test
lret
push
pop
jb
aam
popf
aaa
jmp
into
jl
iret
inc
inc
lret
pusha
inc
push
rcll
xor
stos
xchg
push
dec
lret
imul
aad
popa
and
push
inc
push
psraw
imul
popf
ficoms
add
mov
mov
lods
leave
fnstcw
int
adc
cltd
sti
fildll
sub
push
cmpsl
inc
movsl
test
push
jg
xchg
mov
andl
ret
roll
sub
inc
add
fiadds
pusha
testl
add
jns
scas
cltd
mov
pop
mov
push
outsb
aad
rcl
ret
jecxz
xorl
cmp
dec
test
rolb
popf
add
in
sub
mov
fisubl
push
push
roll
xchg
pop
gs
xor
jge
dec
jp
push
orl
test
rcl
cld
dec
in
imul
cmp
mov
fdivrp
xchg
adc
mov
xor
mov
dec
mov
andb
aam
dec
push
je
add
js
adc
pop
xor
aaa
lretw
incb
shll
pop
fs
lcall
in
mov
adc
scas
inc
add
repz
xor
push
cmp
adc
fisubrl
pop
shr
inc
mov
jns
push
mov
cmp
lods
jg
xchg
fnstcw
andl
loopne
sub
loop
shl
jmp
add
aad
shlb
add
ljmp
movsb
ja
insl
or
fnstcw
or
dec
scas
xlat
addr16
gs
fidivs
jecxz
push
xchg
das
or
fisubrl
jno
call
pop
pop
movsl
out
cmpsl
adc
sahf
push
dec
xor
pop
es
xchg
dec
inc
js
bound
push
into
loop
cwtl
push
imul
cmp
lods
es
imul
repnz
pop
hlt
xor
and
sti
rclb
js
push
adcb
mov
push
mov
mov
leave
add
ds
cli
mov
in
stos
les
or
sub
xor
or
xchg
cmp
repz
les
jne
dec
dec
pop
ret
mov
arpl
sbb
adcl
ds
vmaxps
jg
cmp
pop
scas
das
iret
mov
ret
outsb
pop
add
jo
mov
negl
test
lds
mov
pop
fldcw
xor
shlb
cltd
sub
ljmp
call
dec
loope
popf
push
in
into
push
imul
adc
popl
sti
fisubrs
shll
lcall
and
push
in
test
xchg
cmpsb
adc
mov
push
in
sar
push
call
mov
imul
xor
push
loopne
fldt
jmp
mov
fnsave
push
movsl
shrb
lret
mov
fcmovnbe
rcll
fstpl
dec
in
push
mov
push
arpl
jno
inc
movsb
cmpl
add
xchg
fwait
and
push
push
mov
xchg
sub
sbbb
popf
shll
push
repz
mov
push
mov
mov
fistpll
jb
pop
xchg
cmp
stc
nop
pop
pop
movsl
cmp
jle
inc
mov
fbstp
gs
add
cli
std
xchg
sub
mov
out
dec
icebp
mov
xchg
push
lods
xor
fnsave
mov
push
call
pop
mov
mov
cmp
pop
lods
aad
fistpll
in
mov
call
cmc
cld
and
dec
dec
aas
jnp
movsl
cmp
mov
or
xchg
sub
imul
arpl
call
and
push
aas
test
mov
hlt
xlat
pop
rclb
xlat
outsb
cmpsl
mov
add
dec
xchg
jge
outsb
add
mov
filds
lcall
out
xchg
or
aam
xchg
sub
enter
inc
out
clc
pop
ja
xor
xor
push
push
lods
adcl
scas
in
sarb
into
aas
and
mov
nop
cltd
cmpsb
fnsave
pop
scas
jmp
sti
xchg
sub
sbb
mov
and
sbb
cmp
outsb
pop
rcrl
or
loopne
xsha1
cmpsb
or
push
in
xor
testl
mov
je
loope
mov
mov
push
inc
fadds
movsb
gs
rcl
cmp
or
stos
inc
and
jne
js
mov
lods
leave
int
push
jmp
loop
sbb
pop
push
inc
daa
mov
mov
ret
imul
shrl
pop
add
jno
mov
cltd
xchg
inc
faddp
mov
push
loop
das
sbb
fsubrs
xor
mov
int3
add
or
and
push
jp
push
mov
sbbl
fcmovb
pop
adc
lret
cmp
fwait
push
lcall
cmpsb
loop
inc
adc
inc
xlat
cld
adc
inc
sub
xchg
pop
loopne
ja
enter
rdtsc
enter
stos
push
loop
out
lret
inc
fyl2xp1
cmovp
cmp
loop
adc
sub
add
inc
faddl
jb
fcos
xchg
or
dec
out
adc
arpl
sub
and
add
sub
dec
sbb
mov
sbbl
or
add
inc
lret
sti
loopne
pop
adc
or
cmp
out
test
loop
std
adc
repnz
mov
inc
mov
lea
xor
mov
cmp
and
add
xor
stc
nop
and
cld
mov
xor
sub
and
or
xor
dec
loop
aaa
and
xor
shlb
and
fs
std
xchg
xor
fnstenv
xor
add
aaa
test
aam
xor
scas
insb
add
and
sbbl
subl
pop
mov
xchg
sub
adc
lret
cmp
add
mov
ljmp
cwtl
and
pop
in
test
and
scas
inc
stc
cld
call
inc
pop
jmp
dec
sbb
cld
xchg
stc
add
je
and
push
ljmp
add
add
dec
jmp
shrl
or
cmp
cwtl
das
inc
out
ret
lock
adc
fadds
rclb
inc
fimuls
push
fnstenv
sbb
or
push
hlt
mov
mov
and
into
stos
inc
lcall
shrl
daa
cltd
xor
mov
or
es
testb
fildl
or
cmp
or
fbstp
adc
sahf
dec
fistpl
or
xchg
sub
adc
popl
fdivl
fldt
lret
mov
cli
adc
inc
and
test
add
add
clc
push
sbb
dec
ret
shlb
or
dec
in
pop
lock
sbb
or
push
pop
push
push
ljmp
daa
mov
sti
mov
stc
nop
dec
or
in
cmp
pop
xchg
push
nop
daa
test
addr16
icebp
movsl
scas
vmovsldup
sub
xor
mov
out
lret
test
pop
popa
xor
xchg
cmp
jno
mov
push
out
push
lods
les
lret
bound
in
movsl
adc
jp
cmp
mov
jae
fisttpll
mov
sub
mov
jp
es
lret
jge
das
stos
in
inc
ficomps
iret
adc
cld
cmp
pop
hlt
push
mov
add
repz
rcrb
repz
jp
sbb
xlat
lds
ss
and
xchg
pop
lock
jno
stos
cmpsb
pop
cmp
enter
ret
xor
inc
cld
sbb
popf
dec
and
xlat
cmc
pushf
mov
outsb
dec
in
mov
sbb
and
cmp
fisubrl
mov
hlt
mov
pop
mov
fisttps
or
fdivl
cs
pop
mov
fucom
jle
les
ret
imul
nop
adc
gs
out
push
test
jecxz
insb
add
mov
inc
fcompl
mov
push
jecxz
xchg
sub
movsl
or
inc
mov
sub
stos
mov
lock
dec
gs
outsb
add
jp
sahf
mov
pushf
shr
int
cmp
ja
shrl
lahf
loopne
int
adc
push
mov
mov
fmul
arpl
pushf
cs
mov
push
in
sub
scas
cmp
cmc
or
mov
fnstcw
ficoms
bound
or
xor
jnp
cmpsb
lods
adc
call
jmp
adcl
jae
in
loop
stos
add
sbbl
pusha
push
jmp
and
divb
push
sbb
adc
imul
sahf
cs
sub
ja
sub
adc
mov
leave
jno
ljmp
sbbl
testb
xor
mov
movsb
cmp
mov
rclb
pop
outsb
inc
fidivs
xchg
mov
ds
fstp
jae
in
lret
adc
cwtl
das
jo
pusha
imull
ret
hlt
icebp
rorb
adc
rcrb
out
mov
fwait
mov
xchg
rcrl
stos
xchg
aam
mov
xchg
scas
push
mov
scas
insl
pop
repnz
sarb
mov
inc
rcll
sub
xchg
ret
or
adcb
and
aam
push
ljmp
sti
and
mov
sti
sub
sbb
or
or
cs
pop
jnp
add
pop
mov
jl
lods
filds
shlb
adc
cmp
test
or
repnz
aaa
push
or
adc
in
push
or
pop
aaa
xor
repnz
jns
out
mov
mov
ja
addr16
out
push
aad
mov
movb
sbb
add
mov
rorl
mov
cld
jae
jbe
test
sahf
mov
arpl
adc
lahf
dec
popf
xor
xchg
ds
or
pop
sahf
jns
cs
adc
push
and
xchg
xchg
inc
inc
mov
lahf
dec
push
leave
pusha
pop
inc
mov
insb
jmp
jmp
lea
sbb
lock
sbb
repnz
xorl
stos
mov
call
lock
fisttpll
aam
cmpsl
rcr
stos
jne
les
cmpsl
mov
jmp
mov
in
cmp
jns
mov
in
in
jo
xchg
xor
imul
sbb
aad
mov
sbb
inc
mov
mov
arpl
mov
and
loop
ss
icebp
lds
in
ffree
sbb
and
mov
sbb
adc
pop
inc
push
cli
sbb
mov
cmp
xor
scas
pop
dec
sub
ret
inc
pop
sbb
fs
stos
data16
push
adc
mov
jmp
lcall
mov
or
mov
cld
inc
mov
jg
dec
cwtl
out
xor
xchg
jge
stos
jae
mov
in
xchg
mov
icebp
cmpb
stos
mov
xchg
in
inc
ficomps
mov
jp
aas
pop
or
push
pop
add
imul
repz
jbe
mov
adcl
sbb
inc
jb
pcmpgtw
cmp
sub
arpl
sbb
jae
pop
dec
stos
negl
stc
outsl
mov
ficoms
xor
mov
cli
das
loope
jno
push
mov
lcall
mov
xor
and
mov
pop
cmpb
pop
mov
gs
jg
dec
xchg
and
fiaddl
jno
push
cmp
jnp
subb
xchg
inc
add
push
cs
xchg
stos
aad
pushf
ret
lret
in
outsl
ret
add
or
cmp
sbb
fisubrl
cmp
scas
arpl
aas
sub
lods
lea
mov
cmp
filds
adc
clc
xor
push
or
add
mov
hlt
cmp
faddp
dec
dec
mov
shlb
loopne
xchg
test
das
cli
adc
jno
addr16
sbb
push
jg
jnp
es
pop
lock
mov
aas
adc
pop
decl
add
pop
aas
mov
stos
or
adc
mov
jecxz
push
fcoml
test
jp
xchg
xor
hlt
cmpsb
dec
cld
adc
mov
pop
pop
iret
addl
inc
mov
lods
leave
push
shr
in
int
in
mov
jae
jp
xor
sbb
dec
mov
cwtl
out
addr16
push
sub
ds
inc
push
cmpsl
imul
test
inc
pop
jne
pop
push
mov
aam
mov
sbb
mov
add
cs
jb
lds
cmp
and
cmpsl
std
inc
add
subb
movsl
lcall
in
cmpsb
pop
dec
scas
push
das
dec
mov
pop
push
int3
dec
sub
data16
sub
pop
lahf
in
push
sbb
xchg
lods
jbe
lahf
adc
loopne
testl
jmp
push
in
insl
fcomip
sub
aas
icebp
push
fcmovnbe
push
jmp
or
cld
or
scas
inc
je
es
jns
xchg
mov
stos
adc
or
mov
pushl
mov
out
xlat
dec
int
pop
scas
stc
out
rorb
lods
je
sbb
ret
dec
lret
popf
dec
mov
fldt
adc
daa
cmp
add
mov
popa
xchg
add
int
jbe
leave
inc
jne
les
xor
inc
sub
or
or
lea
and
jno
outsl
sub
dec
fwait
lods
inc
int
or
cmp
leave
inc
lret
jl
xor
sahf
xor
xor
mov
jnp
xrelease
out
cmpl
xchg
ja
fcoml
xchg
mov
mov
xlat
loope
mov
repz
or
stc
or
cmpb
into
pop
pusha
sub
inc
jne
int3
dec
inc
and
pop
pop
and
dec
jg
lret
ds
ds
jle
fldl
sbb
repz
dec
rorl
push
sbb
cmp
xchg
xlat
dec
adc
mov
pushf
movb
js
cli
push
cmpsl
push
mov
xor
push
cmpsb
pop
push
xchg
pusha
mov
fcmovne
push
loopne
iret
push
jg
lods
pop
push
cmp
pop
and
pop
stc
loope
fwait
ss
adc
sti
je
movsl
aaa
mov
dec
jecxz
sub
mov
jmp
cwtl
pop
or
pop
sbb
shlb
inc
mov
sbb
jl
aad
arpl
lds
jecxz
clc
xchg
cs
push
pop
rcrl
inc
fnsave
sar
xor
xor
adc
push
push
pushf
call
je
mov
mov
xchg
sbb
repnz
and
loope
adc
int
sub
aad
and
mulb
sub
or
or
popa
into
mov
xlat
das
xor
cs
xchg
shlb
in
inc
mov
push
mov
or
push
mov
mov
pop
ror
add
mov
in
pusha
cli
push
call
out
pop
test
adc
push
fwait
int3
inc
sub
fwait
xchg
insb
fimull
pop
mov
pop
in
adc
push
lahf
push
fisubrl
nop
sub
sarb
ja
test
inc
cwtl
add
sub
inc
popa
cmp
addr16
outsl
and
pop
inc
adc
cmp
jne
push
imul
inc
shrl
jp
into
mov
fisttpll
fwait
jg
cld
loop
roll
xchg
sub
mov
cmp
popa
stos
popa
xor
insl
rolb
mov
test
cmp
and
test
inc
jo
sub
lods
inc
xchg
sub
push
iret
cmp
mov
sub
lods
cltd
cli
xchg
lret
sbb
in
mov
cmp
shl
pop
add
push
adc
ret
fldenv
loop
clc
xchg
push
lret
and
out
aam
lahf
lcall
mov
enter
jno
xchg
mov
add
sbbl
iret
insl
std
inc
mov
xchg
pop
icebp
xor
jb
repz
mov
push
add
cmpsb
pushl
hlt
or
pushf
mov
jge
lods
ja
insl
inc
cli
ss
push
cmp
adc
jle
cs
xchg
xchg
inc
imul
ret
push
pop
in
outsb
inc
ss
inc
mov
sbb
or
nop
pushf
jnp
fs
das
hlt
and
inc
xchg
loop
add
mov
mov
lds
scas
sbb
scas
dec
sbb
mov
ficoms
dec
mov
xor
not
rorb
mov
incl
movsl
mov
repnz
adc
cltd
adc
xchg
or
enter
in
leave
mov
inc
ret
lret
mov
mov
pushf
xchg
icebp
jl
and
add
cmpsb
popa
inc
out
sbb
jnp
mov
call
mov
sbb
test
cmpsl
icebp
dec
out
xor
mov
adc
movsb
pop
mov
push
mov
rcrl
scas
jae
aam
push
sarb
popf
mov
or
sub
sbb
cmp
jno
sub
or
lret
push
pop
mov
or
pop
xchg
imul
sub
ljmp
xor
popf
outsl
push
stos
push
dec
dec
iret
fs
imul
xchg
and
jbe
push
test
push
add
sysexit
xchg
sub
je
inc
pop
int3
cmp
pop
bnd
scas
sub
adc
xor
mov
mov
jecxz
dec
orl
in
mov
cmp
xchg
sub
xor
xchg
jp
mov
and
leave
outsl
in
mov
jne
push
testl
loop
aas
mov
fldenv
lds
mov
mulb
notl
insb
es
int3
ret
jbe
or
mov
std
sub
popa
pop
mov
inc
mov
pop
jo
lea
dec
jecxz
daa
jnp
fwait
xlat
lea
pop
gs
sahf
xor
lods
push
hlt
idiv
sub
mov
push
and
jecxz
popf
lds
adc
xchg
inc
jb
addr16
addb
push
aad
pop
dec
mov
pop
jl
shrb
roll
fsubl
sub
orl
adc
pop
push
call
in
and
mov
xor
fisubs
mov
or
pop
sarb
sub
scas
ds
sbb
adc
inc
fisubl
fcmovne
arpl
xor
inc
mov
fisttpll
orl
and
lock
or
test
sub
jns
fs
insl
lahf
lock
xlat
cmp
aam
mov
test
pop
iret
mov
stos
pop
negl
inc
mov
inc
pop
xlat
push
sahf
xchg
adc
es
push
add
imul
js
pusha
popa
pop
movsb
dec
sbbb
pusha
pop
rcrb
sub
sub
fwait
or
mov
sub
mov
fldl
gs
movsb
divl
jno
imul
jecxz,pt
jp
sbb
dec
pop
sti
xor
jo
fisttpll
outsl
xchg
push
repz
mov
addr16
in
add
out
inc
mov
fsubl
lret
dec
fwait
cs
cltd
sahf
insb
lods
sub
cwtl
add
mov
add
inc
inc
mov
popf
xchg
push
lret
das
and
xlat
popf
pop
jle
js
inc
int3
ret
sahf
xchg
xlat
sub
out
jne
xchg
paddq
stos
lret
sub
jmp
mov
and
mov
aam
stos
mov
test
fildl
rcrl
and
outsl
jb
push
or
inc
mov
sbb
dec
cmpsb
mov
shlb
jnp
push
xor
lods
jne
sub
sub
mov
jno
out
mov
insl
jno
je
inc
xchg
push
sahf
xchg
push
pusha
movsb
data16
repnz
sbb
sbb
and
stc
nop
and
inc
fidivs
fs
jnp
fistl
and
mov
lock
adc
mov
jmp
dec
mov
decl
cltd
pop
mov
jb
push
mov
mov
sub
dec
shr
xrelease
or
xchg
add
clc
inc
mov
mov
pop
ds
addr16
outsb
rcll
sbb
and
and
imul
push
jo
nop
daa
cltd
sub
xor
sbb
push
lods
mov
mov
mov
add
xor
in
push
leave
or
jp
test
xlat
xor
xlat
push
lret
ljmp
adc
cltd
mov
add
adc
out
xor
sbb
dec
mov
out
pop
jge
popa
mov
xchg
dec
pop
into
push
add
mov
push
pop
popa
clc
xor
int3
dec
jbe
push
pop
inc
lods
popa
push
xor
push
sub
jg
pop
mov
mov
cmpl
jns
add
dec
mov
outsb
xchg
push
out
push
mov
jp
push
shlb
cmp
pop
sahf
shll
lods
shrl
jmp
call
mov
in
fwait
addb
mov
pop
add
sbb
xor
push
sbb
push
sbb
cmp
or
jl
test
dec
and
subl
xchg
jge
pop
fcoml
push
mov
adc
jne
dec
xchg
jno
mov
test
iret
push
clc
cmpsl
or
les
popf
inc
lds
mov
pop
add
mov
in
lea
push
adc
movsb
addr16
push
out
xor
xor
and
mov
cmp
mov
lahf
cmp
dec
test
shrb
or
pop
pushf
iret
mov
in
sbb
jb
testl
js
push
sbb
sti
sarb
shr
gs
cmp
xlat
xchg
mov
xchg
sub
jle
push
push
jbe
flds
cmp
daa
jb
lods
inc
stos
xchg
scas
xchg
es
fwait
jns
fs
xor
mov
mov
pop
repz
fdivr
push
icebp
dec
sub
pusha
mov
sbb
push
jp
xchg
mov
icebp
dec
jb
xor
jo
sub
jge
out
mov
xchg
mov
sbbl
aad
into
jecxz
shll
sbb
dec
sub
pop
push
test
push
pop
fs
xchg
pop
lret
cltd
xor
push
sar
inc
out
mov
push
xor
aas
mov
rorl
loop
jne
stos
les
push
scas
lahf
xchg
cmc
mov
loopne
aas
xor
jl
aaa
or
cmp
loop
fdiv
xor
add
lods
mov
cld
test
ljmp
xchg
cld
mov
out
mov
out
inc
pushf
int
sub
cld
out
and
int
sbb
adc
and
jno
imul
and
mov
outsb
add
xchg
push
aaa
orb
leave
decb
dec
pop
lock
fisubl
adc
sahf
ss
xchg
in
addl
addb
sub
jnp
ja
pop
push
inc
mov
outsl
jge
aam
dec
test
xor
sub
push
ja
aaa
imul
xor
out
and
and
inc
aas
out
and
cld
es
inc
dec
mov
sbb
rcrb
xchg
js
dec
inc
mov
ljmp
add
xchg
pop
mov
or
shrl
cmp
loopne
add
and
mov
adc
add
lcall
jo
cltd
sub
jbe
mov
scas
xchg
mov
addr16
cmp
jno
subb
mov
pop
mov
cmp
xor
cmp
sti
inc
dec
push
fnstenv
imul
push
mov
icebp
sbb
mov
pop
sub
adcl
add
aam
push
aas
xlat
pop
test
icebp
mov
leave
sahf
out
mov
sar
scas
inc
mov
push
adc
iret
adc
leave
pushf
out
aas
sbb
dec
fcoml
mov
dec
adc
cltd
cmpsl
pusha
and
mov
xchg
mov
ret
adcl
subb
call
lods
jl
out
cmc
pop
aad
rolb
testl
cmp
nop
insb
je
pop
repnz
fwait
xchg
xor
imul
or
mov
insl
add
inc
je
xor
jns
fs
mov
insb
je
jmp
and
xor
sahf
jno
sub
push
std
xchg
inc
jb
ds
inc
dec
mull
jmp
or
push
movsl
mov
out
lret
subb
xchg
in
jo
fwait
push
divl
pop
jmp
cmp
es
add
adcl
xor
xor
push
popf
xchg
gs
push
int
outsb
xchg
jno
test
stos
cmpsb
sub
test
and
xor
pop
sar
xor
test
xor
divb
sub
fbstp
push
mov
dec
iret
mov
pop
push
rcrb
outsb
inc
and
xchg
mov
cmp
mov
jbe
out
sub
jg
dec
mov
adc
push
call
movsl
call
add
adc
lret
call
fcoms
roll
sahf
xor
les
dec
sahf
test
inc
dec
pusha
lret
mov
loope
mov
pop
jmp
stos
mov
fidivl
out
out
push
adc
or
cwtl
imul
lods
test
bound
shlb
aad
cmp
dec
les
fcmovbe
sbb
int3
pop
jl
dec
lret
or
mov
test
mov
popa
jmp
test
lret
mov
jmp
mov
pop
ljmp
int
xor
ljmp
mov
add
daa
aad
jne
outsl
mov
xchg
push
push
pushf
inc
out
pop
push
outsl
lds
mov
scas
cmpsl
pop
mov
out
stos
and
xchg
outsl
adc
jl
rcrb
push
orl
inc
jb
jns
sbb
lcall
fmuls
sti
xchg
es
xlat
scas
xchg
dec
cltd
sub
inc
mov
icebp
cmp
mov
jo
xlat
mov
xlat
dec
pop
les
rcll
push
jge
mov
fsubs
xor
popf
ljmp
icebp
and
mov
jmp
or
repnz
sbb
movsl
testl
xchg
je
pop
lret
pop
dec
pop
hlt
xor
sti
jo
sub
es
dec
lds
loop
adc
data16
adc
mov
je
push
mov
adc
dec
mov
adc
or
mov
decl
jns
mov
xchg
jle
addl
xchg
cwtl
xor
leave
adc
xchg
mov
and
push
imul
jne
jecxz
in
inc
sub
xor
lock
sbb
xor
jecxz
xchg
jl
mov
mov
addr16
test
lods
rorb
mov
xchg
scas
inc
sub
pop
rcl
dec
out
inc
ret
sub
fisttpl
cmp
or
aad
out
pop
frstor
and
push
scas
hlt
xchg
out
lods
aam
cli
into
addl
mov
sbb
push
cmpsb
mov
scas
push
movsl
jp
popa
lods
loope
xchg
ljmp
in
push
push
or
es
pop
add
ds
adc
inc
fnstenv
leave
fbld
mov
int3
or
fistl
lahf
push
out
xchg
dec
ja
ss
fwait
mov
repz
daa
pop
repz
cmpsl
mov
cmp
add
dec
mov
and
jge
jge
punpcklwd
lahf
in
cmc
mov
push
and
popf
jo
ljmp
push
push
rcrl
lock
mov
out
xchg
mov
and
inc
hlt
or
je
add
add
dec
cmpsl
adc
test
int3
mov
xlat
neg
xchg
pop
out
mov
ret
xchg
out
adc
mov
sub
mov
xor
in
daa
mov
stos
clc
jbe
fwait
cld
sbb
out
sahf
mov
les
adc
test
adc
out
inc
stos
push
mov
jo
xor
inc
fucomi
jg
int
push
gs
and
mov
repnz
int3
in
dec
push
scas
pop
in
adc
sub
inc
mov
pop
sti
sub
push
out
dec
pop
scas
in
paddusb
lods
stos
addr16
ljmp
iret
mov
mov
loop
mov
push
add
cmc
sub
mov
std
pop
add
pop
icebp
mov
sub
divb
cmp
sub
lea
adc
or
call
enter
sub
or
mov
or
xor
fldenv
dec
mov
out
negl
cmp
pop
sahf
push
dec
in
push
aas
adc
daa
cmpsb
es
inc
jne
shrb
xchg
leave
es
lcall
push
xchg
rolb
rclb
shrl
pushf
mov
inc
mov
sbb
scas
push
cmp
ficoms
insb
add
cmp
jb
cmp
jl
or
push
xchg
mov
mov
sub
inc
into
lea
dec
mov
enter
sysenter
adc
jecxz
enter
sub
rorl
dec
cmpsl
insb
push
std
lods
inc
xchg
js
push
inc
add
and
push
jb
inc
dec
pop
pop
hlt
enter
dec
fbstp
repz
mov
mov
jecxz
repz
pop
cltd
sahf
int
and
sti
xchg
add
sbbl
or
pop
mov
xor
inc
mov
mov
xor
push
mov
push
fiaddl
add
xchg
push
mov
mov
jg
xlat
xchg
xchg
xlat
and
dec
jne
addb
outsb
add
out
ficoms
xchg
std
xor
cltd
jb
push
data16
pop
xchg
rcrb
jecxz
adc
pop
in
out
jnp
mov
jmp
mov
js
jno
testl
insl
fildl
in
stos
data16
pop
repz
xor
mov
push
jmp
or
outsl
cmp
mov
lret
pop
testb
mov
stos
loop
repnz
xor
xor
adc
xchg
lds
ss
jecxz
sti
lea
dec
stos
inc
sbb
pop
push
mov
cmpsb
cmp
daa
add
mov
add
jns
fwait
and
pop
in
inc
fcomps
jl
mov
aas
pop
divb
cmp
call
pop
repnz
in
xor
jae
adc
xchg
cs
mov
outsb
mov
mov
insl
aam
lahf
xor
stos
popa
shl
repnz
mov
adc
add
es
add
mov
mov
stos
or
int3
test
and
mov
aas
loop
out
movsb
add
pop
xor
push
in
mov
and
fisubrl
fcomps
mov
aas
jle
jle
inc
lahf
pop
hlt
shlb
xor
mov
push
out
cltd
xor
fnstenv
xchg
mov
leave
pop
testl
loopne
repz
xor
xor
push
jmp
adc
dec
in
stc
mov
mov
fimull
popa
shrb
call
pop
scas
lds
test
jnp
sbb
dec
and
xchg
xchg
sub
xor
sub
aaa
into
icebp
dec
pop
hlt
jp
dec
loopne
fwait
jnp
or
cs
xor
add
cmpsl
cmpl
test
dec
xor
fdiv
push
lret
bound
test
jle
xchg
add
mov
lea
flds
movsl
and
arpl
mov
gs
pop
inc
fimuls
lods
test
arpl
xchg
jmp
outsl
out
rcrl
testl
inc
push
mov
or
rclb
xor
fsubrs
jecxz
in
imul
add
in
loopne
scas
inc
xlat
add
fidivl
clc
int3
and
int3
shrl
inc
stos
and
repnz
cmp
and
pop
pop
shlb
cmp
and
dec
dec
movsl
aaa
ss
mov
jb
push
test
adc
out
es
mov
dec
xchg
xchg
out
test
cmp
loope
into
sub
test
mov
lock
sahf
jne
adc
xor
popa
mov
sub
xchg
cld
out
sbb
inc
sub
fdivrs
and
push
scas
out
mov
pop
imul
lods
out
repnz
cli
cmp
lock
je
in
es
xor
push
fs
cmp
mov
jg
gs
xor
sub
adc
and
mov
xor
pop
and
lret
jb
leave
sub
jnp
jno
clc
and
fnsave
mov
lea
mov
icebp
enter
cmc
jmp
and
mov
mov
push
insl
inc
loope
dec
loop
loop
mov
jb
inc
cmp
and
push
loope
cmp
or
leave
cld
sbb
and
pushf
inc
jl
ja
mov
icebp
adc
dec
loopne
xchg
lcall
lods
stc
dec
das
bound
in
popf
out
sub
push
pushl
xchg
hlt
ja
sub
push
pop
ret
cmc
mov
insl
data16
mov
mov
adc
xchg
jo
lcall
and
dec
and
mov
mov
movsl
jp
push
adc
xor
xor
call
inc
lock
xchg
push
cmc
cmp
outsl
sbb
jnp
out
out
xchg
icebp
jbe
mov
xchg
mov
sbb
cmp
xor
sub
jns
cmp
xchg
out
dec
push
sbb
xchg
jnp
cmp
push
sarb
icebp
cmp
jno
in
push
push
sub
icebp
and
adc
sahf
add
pop
pushf
fwait
add
push
loope
or
inc
lods
push
imul
mov
loopne
decb
cltd
int
test
sub
daa
fistpl
mov
mov
inc
fnstsw
call
ret
mov
fidivl
in
test
fbld
pop
xchg
enter
ds
out
test
jne
xchg
cld
xchg
lret
and
xchg
aam
cmp
or
ret
shlb
and
mov
in
jae
cmpsb
sub
xor
inc
jbe
mov
jp
je
sub
ja
mov
inc
jp
dec
jecxz
or
push
popf
les
out
xorb
push
sbb
adc
insl
mov
xor
shrb
rcl
enter
pop
xor
xor
pop
std
int
das
jl
push
xor
pop
insl
out
add
rolb
pop
mov
addl
negb
mov
fidivrl
add
fidivs
jg
nop
pop
cmp
xchg
mov
dec
test
dec
or
mov
cmpsl
movsl
sti
cmp
pusha
mov
int3
mov
movsl
cld
pop
jecxz
push
add
mov
and
cmp
jecxz
repz
xchg
inc
andb
add
mov
bound
int
mov
movsl
cld
xchg
xlat
jne
lret
cmpsb
cmc
mov
std
aad
mov
call
adc
lcall
test
sarb
and
icebp
and
loop
mov
xchg
loopne
jb
adc
mov
lret
cmpsb
inc
or
mov
test
jecxz
in
dec
sub
mov
ljmp
add
push
adc
sbb
iret
iret
mov
xor
dec
mov
xlat
mov
mov
cmpsl
push
sbb
sahf
inc
dec
dec
inc
pop
push
pushf
scas
xor
mov
pop
aaa
inc
mov
mov
mov
scas
inc
push
ret
iret
mov
scas
xor
rcrl
rclb
mov
xchg
cltd
aad
mov
int3
push
clc
mov
dec
adc
xor
sbb
push
or
jmp
pop
jmp
sub
jl
cmp
call
xor
sub
xchg
push
inc
cli
gs
pop
mov
jne
and
andl
pop
decl
inc
or
mov
psrld
mov
pusha
sbb
ss
jne
sub
rclb
test
push
or
dec
xor
dec
adc
nop
ja
cmpsl
sub
or
enter
push
ficompl
inc
or
sbb
push
hlt
notb
xchg
test
stos
ret
inc
pop
adc
inc
or
mov
jg
jecxz
add
ret
xor
xchg
adc
sbb
cmpsl
cmc
outsl
out
bound
stos
xor
ret
push
addb
lcall
pop
clc
dec
or
xchg
into
pop
pushf
cmp
imul
inc
sbb
cwtl
aaa
popa
hlt
dec
or
fistpll
pop
rorl
movsl
xor
or
inc
aaa
dec
or
out
lea
or
fscale
enter
popf
cmp
mov
call
aaa
arpl
dec
or
adc
loopne
dec
or
cli
movsl
xor
push
add
sahf
insb
in
jmp
cmpsl
xor
repnz
or
jl
dec
pop
repz
leave
adcl
sbb
sbb
imul
or
in
dec
or
pop
pop
jg
or
mov
leave
lods
sbb
dec
mov
outsb
in
in
mov
add
jbe
sti
push
push
outsl
int
cmp
daa
push
dec
adc
insb
out
lcall
nop
or
jne
data16
int
mov
xor
push
pushl
xchg
lock
dec
in
inc
pand
lret
mov
ret
imul
mov
mov
gs
pop
cld
jns
ret
xchg
shlb
xor
or
push
add
sub
cmp
and
xchg
xchg
lcall
out
jmp
insl
mov
movsb
push
test
sub
fwait
cmp
aad
push
mov
mov
adc
adc
les
or
fs
aad
fs
pop
or
mov
xchg
in
lds
fildl
repnz
add
and
xchg
pop
and
xchg
mov
test
xchg
sahf
jge
push
fcmovnb
in
pop
add
and
pop
jo
inc
fisubrl
insl
hlt
sarb
adc
mov
test
ljmp
lods
xor
gs
mov
insb
repnz
cmpsb
pop
inc
jmp
jmp
jae
sub
int
js
sbb
rclb
in
jb
and
callw
int3
xchg
hlt
jmp
aad
inc
sub
pop
xchg
or
mov
orb
pop
std
leave
push
jmp
jl
dec
or
lods
sub
popa
fstpt
sub
xchg
fisubl
mov
push
std
add
adc
pop
inc
jge
add
movsb
test
push
and
cli
jnp
mov
in
psrad
fnstsw
cld
fidivrl
daa
cmp
bound
pushf
cmp
jl
stc
push
sbb
addr16
pop
inc
jg
jb
cltd
cmp
into
movsl
adc
mov
jns
mov
jecxz
jns
inc
cli
loope
rcrb
inc
rcll
hlt
fnstcw
mov
add
stc
pop
inc
pop
in
fbld
adc
inc
nopl
fimuls
push
add
jecxz
mov
sahf
gs
fwait
aaa
mov
test
sbb
les
cli
pop
divb
fdivs
mov
cs
dec
sbb
ret
mov
test
insb
lods
adc
pop
aaa
out
cmpsb
xchg
sub
daa
ljmp
adc
mov
xor
jnp
push
shll
push
mov
insb
shrl
push
jae
pop
movsl
dec
pop
sahf
jge
loope
sub
push
jne
negb
popa
pop
add
in
pop
add
shll
xchg
pop
in
jno
les
inc
addl
jb
arpl
sub
fstl
pop
out
dec
adc
repz
ljmp
out
and
dec
pop
push
negb
out
outsl
psraw
mov
scas
xor
stos
pop
mov
push
js
and
pop
ret
movb
lods
xor
xor
inc
decb
lock
iret
xchg
ljmp
ret
cld
sbb
mov
push
add
out
les
dec
testl
movsb
xchg
mov
pop
or
orb
pop
aam
pop
lret
xor
dec
lods
mov
fistl
mov
add
mov
movsb
or
and
inc
mov
fwait
mov
xlat
or
lret
pop
inc
adc
jg
sub
pusha
fs
test
mov
pop
lret
xlat
adc
adc
mov
push
inc
mov
je
sahf
movsb
xor
lock
sub
xor
mov
mov
sub
cwtl
inc
cld
lods
sub
mov
jmp
test
or
pop
rolb
mov
mov
lahf
sbb
mov
xor
and
ds
xchg
or
dec
adc
add
ficoml
mov
fdivrp
xchg
scas
xor
daa
test
sbb
aaa
add
jo
lahf
inc
shll
imull
jb
enter
clc
sbb
cmpsb
aad
and
inc
fnstsw
mov
sbb
in
insl
cmc
inc
or
inc
out
pushf
aaa
mov
pop
mov
lahf
dec
sbb
pop
sti
xchg
pop
mov
pushf
notl
mov
push
xchg
or
into
sbb
sub
sub
push
or
mov
push
jl
mov
or
inc
or
es
arpl
mov
mov
sub
ret
cmp
inc
or
cmpsl
dec
adc
aaa
xchg
jmp
mov
std
outsb
lock
cs
jl
cmp
xchg
pop
push
add
leave
jmp
scas
cmp
int3
mov
and
lahf
imul
je
sub
cmp
jge
insb
imul
cld
xchg
cmp
mov
inc
or
xor
adc
sbb
dec
jnp
pop
or
insb
jecxz
in
cmpsl
sti
inc
adc
mov
mov
xor
in
add
pusha
test
sub
push
add
xchg
xor
xorl
movsl
xor
cs
inc
out
das
stos
ss
jbe
dec
sub
aad
xchg
addr16
movsl
mov
aad
mov
push
add
mov
outsl
push
xorl
cwtl
dec
mov
jecxz
mov
scas
sti
pusha
pop
xor
orb
xor
jle
fwait
aas
fisubrl
adc
mov
and
loope
fs
inc
or
push
add
mov
in
or
mov
mov
loopne
shll
mov
sub
mov
pop
mov
jecxz
dec
outsl
jmp
ss
scas
sub
mov
xor
idivb
in
imul
adc
in
xor
push
js
int3
test
push
ljmp
push
idivl
lods
inc
or
mov
inc
push
ret
push
adc
mov
sub
mov
adc
fisubl
je
dec
mov
movsb
cli
adc
lret
mul
push
add
fsubrl
in
jg
pop
sti
mov
dec
dec
mov
xchg
fistpll
call
dec
push
rorb
pop
sub
jle
push
aaa
jl
in
xor
sbb
lds
ja
pop
lcall
jns
push
imulb
popf
out
and
lret
sub
sub
popf
inc
and
mov
nop
dec
xor
and
cmp
into
mov
test
nop
inc
sbb
or
into
dec
xchg
inc
pop
adc
mov
xor
inc
adc
sub
mov
fstpt
pop
mov
rclb
adc
orl
xchg
sub
dec
push
jmp
dec
roll
push
jb
adc
jle
xor
cmp
push
cmpsb
lods
fimuls
daa
sbb
stos
das
jp
mov
jb
es
inc
mov
sub
out
pop
cld
smsw
push
out
addr16
sti
xlat
jg
jmp
sbb
popf
xchg
cmp
xchg
movsl
les
mov
jns
mov
imul
sbb
sbb
xor
or
sbb
out
sub
cmp
push
cmp
fwait
mov
mov
push
call
clc
push
mov
mov
inc
punpckhdq
cmpsl
xor
pop
jno
jns
sbb
dec
sbb
movsl
cmp
and
inc
jne
dec
adcl
inc
or
jge
adc
inc
pop
add
jns
jge
shll
and
push
mov
xor
push
std
cmp
mov
sub
jb
lods
imul
dec
inc
or
cmp
popa
mov
pusha
stos
jl
jns
shrl
push
sub
push
ja
and
addl
xchg
mov
push
lret
rclb
cli
addr16
cmpsb
sub
je
shl
pop
inc
inc
push
stos
mov
enter
orl
push
push
jbe
adcb
adc
hlt
daa
mov
add
shlb
pop
push
mov
jl
test
sarb
cmpl
xchg
addb
adc
mov
sbb
dec
push
mov
jg
mov
stos
xor
add
leave
xchg
jecxz
push
lret
xchg
cmp
add
das
insb
or
mov
stos
insl
repnz
bound
mov
das
shll
cmp
pop
push
sub
nop
inc
mov
pop
popa
ljmp
push
ds
out
mov
andl
rorb
dec
or
mov
scas
mov
lock
fiadds
stos
loopne
cmp
jo
int3
jl
es
pop
inc
or
lods
dec
adc
lds
loop
jb
push
push
xchg
mov
jl
cmp
mov
shll
xor
mov
imull
and
add
ret
push
sub
loope
loope
into
clc
ret
sbb
out
int3
fidivrs
mov
jle
xchg
and
sub
aaa
sbb
jb
outsb
in
ja
jp
pop
outsb
out
fcomps
xor
movsl
jbe
test
mov
fistps
mov
add
ja
rcrb
pushw
push
lret
xchg
aas
xor
sub
in
push
test
mov
push
lcall
outsb
movsb
xor
cs
test
sbb
roll
sub
dec
or
out
jl
dec
push
imul
cmp
push
icebp
pop
in
jnp
dec
mov
int3
xchg
stc
data16
ljmp
stos
stc
out
jne
mov
orl
orb
push
rclb
leave
ljmp
sub
mov
insl
inc
adc
mov
pop
sub
ret
cmp
js
xlat
dec
pop
jmp
repz
fpatan
mov
pop
ret
pop
js
adc
mov
push
adcb
push
mov
test
cmp
lds
cmc
outsb
sbb
sub
sub
xor
mov
pop
hlt
fsubr
push
jmp
cmc
lods
jbe
call
pop
repz
push
add
xchg
in
push
insl
loopne
out
fwait
sub
lods
inc
imul
mov
rolb
test
in
imul
pop
in
push
dec
call
pop
jne
roll
xchg
cmp
les
lods
inc
dec
or
cmp
push
cli
int
orl
xchg
cmp
inc
rorb
cmc
ja
sti
dec
icebp
pop
xchg
cs
shlb
mov
push
fdivrs
adc
sbbl
mov
cmpsb
cmc
pop
fdivrl
out
jnp
iret
and
aaa
lea
sub
pop
setp
jns
js
std
gs
or
in
or
sub
jl
sbb
adc
cmc
popa
add
pop
or
lds
aam
sub
ds
xchg
loop
pushf
inc
jle
and
ficoms
push
cmp
xchg
test
xor
enter
pop
lret
inc
fildl
mov
jns
cld
or
jne
in
dec
psrlq
sbb
lret
shrl
das
movb
mov
idivl
lods
es
jp
and
enter
jns
add
push
jae
pop
sbb
std
xchg
iret
add
cmp
in
sti
xchg
pop
outsl
push
xchg
jle
add
leave
ret
mov
adc
xchg
enter
std
popa
adc
dec
adc
inc
inc
scas
sub
sahf
pop
sti
mov
mov
jno
aaa
push
aad
add
call
pop
xchg
mov
pop
add
sti
push
negb
mov
mov
mov
in
dec
jl
stos
shll
xchg
cmp
push
add
sub
outsl
stos
sub
cwtl
cmp
xchg
je
jns
push
jo
call
loop
mov
xchg
jg
aas
lcall
int3
mov
mov
pop
cmp
mov
mov
in
imul
xchg
mov
lcall
mov
jns
or
inc
or
mov
mov
mov
mov
cmp
jmp
std
out
jbe
cmp
push
adc
fstpl
les
xor
pusha
adc
lahf
aas
cmovs
mov
pop
dec
or
fimuls
data16
xor
adc
xlat
ja
push
add
es
lea
pushf
adc
cmp
xchg
push
pop
test
and
inc
fbstp
sbb
add
inc
sub
xchg
xchg
in
jne
shll
std
and
pusha
jmp
in
cltd
push
aaa
dec
movswl
jnp
imul
lcall
adc
lock
push
pop
pop
xchg
sbb
enter
std
push
pushf
imul
hlt
pop
test
dec
xor
mov
ja
add
fcoml
push
movsl
imul
pop
loope
cltd
push
sub
cmc
loopne
and
into
xchg
sbb
dec
mov
lea
cmpsb
jnp
test
aas
lahf
aas
shll
sbb
dec
sbb
xor
test
push
fnstenv
push
push
xor
in
dec
or
pop
aad
std
adc
aaa
cmp
or
rolb
fldt
cmpsl
jge
jp
and
dec
xchg
cmp
pusha
ss
fistpll
lods
sub
arpl
inc
adc
pop
idiv
into
mov
pop
sub
stos
jns
iret
sub
mov
inc
add
test
daa
mov
ds
adc
out
xor
inc
sti
fs
or
sbb
rcll
outsl
out
int3
fs
push
lret
int3
jns
jb
pop
dec
out
int
mov
mov
sub
jns
les
aad
shr
aam
outsl
fwait
stc
add
push
lret
cmp
sbb
testb
pop
cs
fidivrl
cmp
out
or
je
lret
inc
negl
push
adc
sbb
push
stc
push
pop
add
lahf
push
imul
jl
sbb
mov
scas
lods
xor
and
xor
and
pusha
cs
sbbl
lret
mov
stos
push
shl
mov
vpsraw
mov
jmp
or
jo
inc
fists
insl
add
jp
pop
stc
shlb
sub
or
paddd
mov
ret
stos
sub
sahf
and
dec
xor
jnp
xchg
add
cmpsl
sub
xor
mov
cli
jne
adc
push
mov
sbb
roll
ret
notb
xor
roll
nop
or
pop
es
or
pop
fidivl
cmp
mov
sbb
fadds
shll
mov
scas
cmp
and
ret
mov
ss
push
add
icebp
pop
cmpsl
xchg
aaa
fwait
das
mov
push
sti
cmp
arpl
inc
lahf
mov
dec
xchg
pop
add
lahf
adc
dec
lcall
fnstcw
cmp
inc
or
mov
jl
cmp
xor
iret
ret
xchg
adc
lods
mov
lods
imul
incl
push
test
pop
shlb
xchg
cmp
fwait
cmp
es
inc
loop
aaa
pop
popf
or
jb
insb
in
lret
and
add
cltd
cmp
pusha
sbb
mov
mov
in
push
mov
adc
cli
icebp
mov
mov
lds
xchg
cmp
sbb
adc
push
xchg
inc
inc
dec
pop
clc
outsl
fwait
mov
dec
dec
push
xchg
inc
mov
mov
cmpsb
inc
lret
push
call
lds
mov
call
mov
out
lcall
add
aam
in
mov
and
daa
stos
insl
jge
arpl
jo
mov
mov
add
sarb
push
cwtl
inc
imul
adc
or
jge
cmpsb
daa
mov
stos
adc
jne
push
add
add
pop
push
add
das
lods
pop
xchg
in
lret
ss
adc
or
movsb
xchg
inc
int3
hlt
mov
inc
jp
roll
lret
iret
jecxz
add
pop
sti
test
jge
fsubrl
lods
jne
jbe
or
inc
ficoml
gs
sbb
out
aaa
das
cmpsl
in
icebp
pop
cli
insb
hlt
xchg
sub
sbb
rcrl
pop
mov
xchg
push
stos
pop
add
push
mov
ret
add
and
lds
frstor
dec
or
adc
push
lahf
dec
hlt
bound
mov
push
jmp
fldenv
ss
adc
xchg
cmp
popf
test
in
jle
sbb
dec
fiadds
cmp
pop
std
cs
add
inc
mov
xchg
push
add
sbb
sbb
aad
test
push
push
mov
rorb
pop
cwtl
jne
in
leave
lods
inc
sti
xor
nop
bound
dec
push
add
mov
inc
push
mul
sbb
addr16
jp
xchg
and
inc
lock
out
adc
dec
dec
push
push
ds
out
xor
insb
jnp
ja
fildll
add
aad
and
or
mov
mov
jmp
ret
pop
adcl
jmp
mov
es
mov
cltd
test
xchg
xlat
outsb
cmc
cmp
lds
mov
mov
cltd
cmpsb
mov
into
ret
and
stos
imul
mov
adcb
jnp
loope
mov
stc
popf
ds
inc
test
push
stc
fs
stos
mov
ja
mov
outsl
subl
jp
daa
fidivrs
inc
push
aad
or
push
or
cmp
int
andl
mov
stc
cmp
mov
mov
stc
pop
ficoml
inc
rcrl
pusha
adc
imul
icebp
mov
jns
mov
push
outsb
push
idivl
test
mov
fadds
dec
jp
dec
or
push
add
xchg
gs
sub
arpl
xor
test
scas
fnstcw
loopne
dec
test
xor
repnz
jl
mov
jo
or
mov
rcr
scas
cmp
jns
xchg
fidivl
add
je
pop
xchg
cmp
mov
push
cld
jl
or
jae
push
ljmp
push
cli
mov
stos
and
or
push
jns
fidivl
mov
mov
dec
incl
stc
pop
repnz
pop
stc
jp
stos
sub
mov
mov
or
cli
popa
jp
roll
sarb
in
dec
adc
gs
sbbb
aas
mov
jb
das
xlat
jge
test
push
cmc
fs
mov
jecxz
xchg
js
arpl
les
cwtl
cmp
xor
sub
nop
in
cld
fs
jmp
pop
sbb
xlat
and
dec
adc
sub
das
mov
adc
stc
bound
aad
sbbb
and
adc
subb
sub
xchg
mov
mov
loop
jae
out
pop
sbb
push
sub
xchg
aas
rep
ss
mov
int3
xor
jp
push
inc
push
mov
fiaddl
shll
mov
xorb
push
aam
sahf
mov
lods
test
inc
sub
shlb
adc
add
and
data16
and
or
sbb
jno
push
int3
les
aad
sbb
inc
sub
in
imulb
cli
pop
shr
and
psubusb
std
js
mov
clc
xor
leave
mov
mov
ljmp
fstpt
pop
adc
inc
lods
pusha
neg
gs
sahf
push
jl
xchg
pop
add
pusha
mov
add
and
mov
jb
add
push
pop
jno
cmp
mov
jns
daa
mov
jecxz
adc
xchg
pop
insb
mov
dec
pop
neg
mov
inc
add
fidivrl
xchg
int3
xchg
insl
call
fsts
insb
out
add
pop
shl
add
adc
pop
add
sub
gs
jg
lret
mov
test
test
sbb
or
xorb
test
movsl
fcom
leave
nop
push
or
mov
out
jbe
mov
clc
cmpsb
cmp
cmp
or
sahf
cltd
jo
push
iret
sub
ja
mov
xchg
pop
clc
in
jo
mov
mov
sub
adc
adc
les
shrl
mov
ja
aad
inc
orl
lea
loop
jp
mov
gs
push
lret
lahf
dec
or
cmp
xchg
outsb
in
sbb
inc
fs
adc
and
int
clc
cmc
pop
rorb
push
addr16
push
and
imulb
je
in
jmp
in
cmpsb
out
sub
mov
into
gs
xor
gs
icebp
xchg
push
test
popf
inc
sbb
dec
adc
lahf
and
add
ja
mov
lods
ret
xchg
inc
lods
xor
mov
stos
enter
orb
xchg
cmp
or
call
std
mov
es
sub
out
imul
lds
lods
jmp
mov
add
mov
add
mov
mov
sbb
int
push
inc
xchg
inc
fwait
lea
mov
mov
cmpsl
mov
fcomps
and
jg
adc
clc
addr16
in
jmp
mov
std
pop
mov
mov
ret
adc
jp
das
jmp
fstpl
lret
popf
andb
int3
mov
lcall
in
insb
push
pop
or
jnp
stos
fdivrl
inc
adc
into
rcll
or
out
xchg
aas
xchg
std
mov
loop
xchg
inc
mov
movsb
test
cmpsl
mov
sbb
or
add
mov
mov
mov
mov
fcmovne
xchg
xchg
std
push
cld
lahf
rorl
into
add
jne
sarb
push
movsb
sub
adc
cmpsb
ss
push
mov
push
jg
mov
xchg
and
outsb
in
jns
lods
std
sub
sbb
shl
addl
clc
dec
lahf
or
xlat
xchg
addr16
xor
sbb
gs
shrb
pop
add
jle
loop
cmc
lds
sbb
mov
scas
cmc
pop
mov
scas
cmc
pop
inc
adc
inc
or
mov
pop
jle
pop
add
imul
orl
out
outsl
adc
inc
lods
xor
xchg
or
cmp
sub
pop
xor
outsl
push
cmc
pop
std
cmp
and
ret
mov
iret
mov
shlb
jle
stos
xor
mov
cs
repnz
xchg
and
cmp
jecxz
or
mov
js
cmpsl
jl
enter
fcoml
mov
mov
push
add
scas
rolb
cwtl
xor
rol
inc
adc
push
stc
pop
cld
ret
dec
jecxz
rorl
rclb
cs
mov
and
add
add
cmc
jae
pop
lock
icebp
adc
dec
adc
test
xchg
ds
ret
inc
or
push
lret
fistpll
adc
nop
jns
repz
out
imul
cwtl
ret
push
mov
fildl
push
jnp
inc
pop
xor
xor
mov
adc
fstps
or
andl
cmp
es
sub
xchg
cmp
and
jbe
push
push
add
dec
add
add
add
dec
pop
xchg
inc
jmp
movsb
xor
repz
mov
pop
cli
dec
fwait
dec
or
mov
repz
push
stos
pop
adcl
xchg
xchg
je
iret
mov
jo
xor
cld
mov
jae
or
mov
jne
mov
movsl
lcall
cld
movsb
das
stc
aas
popf
cmp
mov
xchg
inc
push
jecxz
inc
test
mov
out
xor
mov
stos
fidivs
cmpsb
out
add
push
cld
pop
clc
jb
add
lods
jo
xor
sub
pop
xchg
ret
push
int
mov
mov
fimull
mov
jno
icebp
push
mov
mov
leave
pause
sarl
jecxz
xchg
pop
xchg
dec
adc
pop
filds
jno
loopne
jl
lods
sbb
clc
popa
iret
dec
mov
not
and
ret
sbb
push
xchg
cmp
fdiv
call
jae
sub
sub
ret
xchg
inc
in
push
aam
jmp
cld
sbb
sub
imul
clc
arpl
mov
adc
push
push
inc
push
test
mov
scas
mov
dec
ljmpw
dec
push
test
popf
loope
fnstsw
fadds
scas
pushf
inc
gs
arpl
daa
jb
hlt
adc
xchg
mov
int3
nop
sub
cmp
test
int3
pop
add
sbb
call
push
ret
add
cltd
cmp
sub
movsb
pushf
xchg
xor
rcl
jp
xchg
sub
shlb
jle
xchg
je
lods
sub
outsb
data16
lock
addr16
mov
push
orl
flds
loop
sbb
xchg
inc
sbb
cmpl
sbbl
and
stos
xor
xor
pop
and
mov
push
std
loope
aas
movsl
xchg
icebp
inc
or
lret
loope
xchg
scas
ja
and
orl
lods
orb
pop
repnz
movsl
insl
xlat
popl
aad
icebp
bound
call
stos
jnp
in
addr16
push
insl
out
addl
xchg
inc
or
fnstsw
push
fs
mov
movsl
pop
push
loop
xchg
je
jae
lods
mov
ret
ja
outsl
hlt
iret
data16
mov
outsl
in
jmp
fdivrl
repnz
xor
xor
cmp
jne
cltd
je
je
fldcw
pop
orl
jle
push
mov
nop
aaa
call
jle
out
lahf
add
push
pushl
shlb
imul
xchg
mov
pop
ret
add
inc
or
push
pop
add
cmp
inc
inc
mov
sub
stos
cmpsb
sub
cmc
in
jbe
dec
out
jae
std
rorl
push
pop
add
imul
xor
loopne
inc
or
hlt
mov
and
repz
mov
sarl
cmpsb
pop
add
mov
adc
bound
mov
leave
subl
jle
test
imul
or
dec
arpl
dec
dec
iret
pop
lcall
mov
fistps
add
lea
add
mov
fnstcw
insl
call
mov
fnstsw
xchg
dec
adc
mov
lea
enter
stc
and
sub
into
xchg
inc
pop
cmp
fdiv
xorl
mulb
xchg
cmp
xchg
jbe
lods
lds
mov
inc
fsubl
repz
inc
cmp
mov
fwait
scas
sub
and
rcrl
sbb
rorl
popa
repnz
cmpsl
push
shll
and
sub
sbb
xchg
inc
fsubp
mov
cwtl
xorl
push
icebp
push
test
in
mov
sub
fnstsw
in
add
pop
push
cmc
mov
pop
or
ficompl
mov
lods
cwtd
xchg
jp
iret
imul
int3
inc
scas
dec
add
stos
sub
sbb
enter
iret
ljmp
dec
dec
pop
or
push
scas
inc
push
fdivrl
mov
data16
out
rol
mov
sub
test
mov
adc
adc
inc
or
cmp
sbb
aas
ret
cmp
adc
sti
and
icebp
jmp
mov
ficoml
pop
cmc
enter
movsb
jmp
jg
clc
cmp
xor
sahf
xor
shrl
loop
insl
adc
fidivl
xor
stc
nop
inc
mov
test
xchg
fidivl
or
dec
in
or
jle
add
rorl
daa
jecxz
test
push
add
inc
ss
pop
test
lret
cld
stos
jmp
fcompl
or
mov
ret
repz
pop
cmc
inc
repz
and
jl
cltd
inc
sbbl
in
cwtl
lahf
ss
push
aas
jmp
push
sbb
mov
mov
xchg
stc
nop
ret
pop
adc
cmp
pop
scas
adc
ss
out
mov
mov
or
cs
es
movsl
stos
inc
xlat
subl
bound
dec
out
jle
jmp
fwait
sarb
sahf
lods
icebp
and
incl
xlat
je
inc
fistl
pop
cmc
jb
stc
mov
lds
xor
ss
lea
push
popf
loopne
insl
adc
hlt
mov
cli
xchg
inc
xchg
test
xchg
fdivs
or
dec
in
or
cmp
scas
pop
jae
mov
mov
add
test
push
add
pop
cmpsl
push
into
gs
in
cli
test
add
sub
dec
sub
icebp
mov
pop
cmc
inc
repnz
and
adc
mov
mov
push
cmp
pop
xlat
outsb
xchg
cmp
cmc
mov
nop
cli
xchg
ret
stos
ss
scas
adc
xor
mov
push
out
xchg
cld
outsb
add
or
mov
subb
inc
aad
scas
inc
mov
enter
int3
arpl
dec
out
jl
ljmp
jp
lahf
stos
out
and
incb
xlat
jb
inc
fcoml
pop
cmc
les
cli
mov
les
xor
mov
dec
mov
insl
adc
hlt
mov
sti
xchg
inc
test
test
xchg
xor
pop
mov
into
call
or
cmp
add
mov
ljmp
test
dec
xor
pop
movsl
push
iret
data16
in
clc
cmpsl
in
test
sbb
dec
cli
or
popf
dec
sub
jge
inc
xlat
out
sahf
inc
fmulp
adc
inc
lock
and
adc
inc
sbbl
mov
xor
xchg
mov
push
cmp
mov
outsl
cmp
je
mov
loop
sti
xchg
rolb
lods
xor
sbb
xchg
aaa
into
fs
call
mov
outsl
push
sub
jae
or
and
sub
inc
sarl
inc
mov
leave
pusha
es
fs
out
jp
jmp
push
fwait
add
mov
push
lret
daa
mov
jo
inc
fisttpll
pop
test
fs
mov
ret
hlt
ss
xor
mov
push
mov
outsb
push
mov
cmc
mov
cld
xchg
inc
adcb
mov
sbb
add
es
out
pop
push
out
cmp
add
pop
jne
mov
mov
std
lods
xchg
sub
push
stos
inc
push
pushl
pop
movsb
push
iret
data16
out
mull
add
mov
pushf
dec
sub
jnp
inc
fsubr
pushf
inc
fmulp
punpcklbw
inc
out
gs
pop
bound
xchg
inc
sbbl
mov
xor
xchg
mov
push
cmp
mov
jo
cmp
je
scas
testl
xor
sbb
xchg
aaa
into
bound
push
in
mov
jo
sub
jae
or
and
pop
mov
scas
inc
scas
repz
ror
add
jg
and
adcb
popf
lret
jbe
mov
sbb
ds
fldcw
inc
fisttpll
test
loop
adc
repnz
mov
push
mov
fcmovnu
outsl
or
testb
adcl
xchg
shll
leave
add
cmp
in
push
out
add
outsb
add
mov
mov
cld
stos
xchg
sub
sbb
mov
das
jno
pusha
mov
out
mulb
push
popf
dec
testb
daa
push
mov
jns
inc
fldln2
lcall
aas
in
gs
sbb
sbbl
mov
xor
xchg
mov
push
cmp
mov
jno
aaa
fnsave
clc
loopne
sti
xchg
mov
fstpl
mov
push
xor
into
pusha
cmpsb
push
ljmp
jno
sub
jae
push
dec
es
xchg
sub
lods
inc
sarl
inc
lods
repnz
bound
int
add
cmpb
adcb
sahf
lret
mov
sbb
daa
mov
outsb
sbb
dec
popa
clc
shrb
pushf
loope
push
adc
popf
xor
adc
push
mov
fcmovu
jo
mov
testl
mov
sbb
add
push
call
xor
outsl
push
test
jne
xchg
lea
test
sub
sbb
inc
dec
sti
mov
sub
dec
iret
data16
jg
mov
pop
sahf
inc
hlt
or
lcall
cwtl
inc
fmulp
or
gs
sbb
pop
xchg
cmp
sbb
sahf
xor
roll
push
cmp
mov
jb
xor
stc
nop
fisttps
sbb
or
ss
sub
push
jmp
jg
in
mov
jb
sub
jae
add
nop
daa
jge
xchg
sub
scas
inc
sarb
inc
stos
icebp
int3
arpl
int3
int
incb
jbe
in
adcl
lahf
enter
mov
lds
mov
insb
pop
inc
fimuls
stc
mov
filds
sbb
xor
cmp
mov
push
xchg
fcomp
jno
mov
jne
sub
pop
or
xchg
cmp
lods
scas
pop
sbb
add
push
jmp
xor
cmpsb
push
jbe
test
mov
fcomps
lods
inc
dec
stc
mov
sub
bound
shr
repz
out
test
adc
lahf
inc
repnz
and
mov
jne
inc
fucomi
xchg
dec
ffreep
or
cmp
data16
sbb
sbb
mov
ss
mov
push
ss
push
adc
jae
xor
jne
stos
cli
xchg
fldl
sbb
or
int
sub
iret
pop
mov
push
in
scas
cmc
jb
daa
shll
dec
nop
daa
jnp
xchg
sub
scas
inc
into
ja
inc
test
lret
into
gs
inc
ljmp
xchg
or
mov
les
shl
inc
fldt
dec
filds
stc
mov
fldl
sbb
xor
cmp
mov
pop
xchg
fidivl
mov
jbe
sub
pop
or
xchg
cmp
lods
pop
sbb
mov
xor
ljmp
push
ljmp
jno
movsl
push
jbe
add
es
movsb
xchg
sub
sbb
dec
sub
arpl
shr
repnz
out
test
adc
mov
and
mov
jae
inc
fsubr
xchg
dec
ffreep
or
out
std
pop
pop
sbbb
cmp
loop
mov
push
xor
push
fnsave
fidivs
stos
sti
xchg
faddl
mov
fcomps
mov
push
aaa
into
subl
push
in
sarl
lods
hlt
jae
es
je
add
sub
xchg
sub
inc
int
mov
cmpsl
out
int
and
into
gs
inc
jmp
jae
in
test
or
mov
ret
repz
imul
cli
mov
faddl
sbb
das
lahf
ss
or
cmp
cmpb
xchg
aad
jb
mov
jbe
sub
nop
pop
push
xchg
cmp
scas
lods
pop
sbb
mov
xor
rcr
pop
push
jmp
std
pop
out
jb,pn
or
nop
daa
mull
scas
inc
dec
cmc
mov
daa
insb
int
sahf
dec
shlb
mov
out
test
adc
mov
pop
sub
jno
inc
fucomp
xchg
dec
ffreep
or
cmp
data16
adc
test
push
mov
push
xor
rclb
fidivs
das
fidivs
test
cld
xchg
mov
sbb
pop
dec
cmp
subb
iret
pop
mov
push
in
stos
repz
and
inc
xchg
sub
xchg
sub
mov
lret
jae
dec
movsl
in
into
gs
iret
data16
aas
in
xorl
test
mov
sahf
in
mov
icebp
ss
frstor
dec
loopne
mov
fs
xchg
fiaddl
sbb
sub
movsb
cmp
mov
pop
rcr
jae
mov
ja
es
xchg
pop
add
xchg
ss
scas
stos
push
sbb
int
test
push
in
dec
sti
pop
lock
jae
mov
ret
xchg
sub
mov
mov
dec
repz
and
inc
shrl
mov
out
xchg
adc
mov
sbb
ds
outsl
mov
fsubp
nop
dec
loopne
pop
data16
cmp
addr16
adc
sbb
mov
cmp
fcmovb
pop
or
fbstp
sub
std
xchg
flds
sbb
add
es
push
lahf
push
out
sarb
out
test
lret
jne
std
inc
xchg
sub
xchg
sub
mov
leave
jno
dec
mov
idivl
out
xchg
or
pushf
loop
rclb
sub
out
xor
fisubs
dec
loope
xchg
mov
push
sbb
mov
sbb
pop
or
push
mov
ret
pop
rcr
je
scas
loope
loope
sti
xchg
push
add
xchg
xor
mov
push
push
mov
leave
aaa
into
cli
cmpsb
cmp
xlat
sbb
dec
clc
pop
icebp
sub
or
rcll
iret
adc
dec
inc
lock
and
lcallw
mov
lock
push
or
aas
jmp
sub
xchg
cmp
insb
mov
lea
mov
fildll
adc
sbb
xor
cmp
test
xor
ret
push
fbstp
sub
ja
movsl
std
xchg
xlat
jle
xchg
mov
sbb
add
sarb
rcll
push
out
into
jbe
out
cmpsl
out
jne
and
jbe
sti
inc
xchg
sub
sub
xchg
mov
outsl
mov
mov
ret
shrl
cmp
test
lock
or
lcall
ret
in
xor
arpl
dec
loop
test
mov
imul
or
cmp
cmpsb
cmp
scas
pop
les
iret
fnsave
loop
loopne
sti
xchg
push
add
cwtl
xor
mov
push
pop
mov
aaa
into
clc
movsl
cmp
in
dec
negl
sub
sahf
dec
jns
jnp
xchg
sub
pushf
xchg
cs
adc
dec
and
cbtw
inc
shrl
mov
icebp
mov
or
mov
sbb
rcll
dec
mov
mov
fisubrs
adc
sbb
xor
cmp
test
pop
cs
pop
or
jbe
sub
js
mov
call
daa
rcrb
sarb
cmp
push
fwait
push
out
int3
jbe
lock
in
jne
pop
leave
ja
sti
inc
xchg
sub
xchg
sub
lds
dec
mov
ret
shrb
cmp
test
icebp
mov
or
lcall
in
xor
popa
push
dec
jecxz
andb
pusha
push
xchg
aam
sbb
mov
pop
out
mov
cmp
push
lods
pop
lds
fnsave
jecxz
fbld
cld
xchg
push
add
cltd
xor
mov
push
and
mulb
out
dec
negb
push
or
dec
jp
jp
xchg
sub
fwait
cwtl
das
int
mov
inc
out
mov
and
xchg
inc
aam
jae
out
test
xchg
repnz
or
cmpsl
sbb
ret
lds
dec
loopne
mov
add
xor
push
andps
pop
bound
cmpsb
cmp
sub
les
dec
loopne
subb
jns
mov
add
and
inc
cmp
js
cmp
push
cltd
pop
out
lret
icebp
movsl
jmp
or
stc
ds
sub
xchg
cs
xchg
mov
ret
insl
mov
lahf
in
addr16
rcl
repz
out
test
repnz
or
mov
fsubrl
rorl
dec
fistps
dec
in
andb
pop
imul
rolb
in
mov
aas
aaa
js
push
stos
pop
pop
mov
fidivs
stos
in
fstpl
std
xchg
push
incb
cltd
das
jb
mov
push
and
cmc
mov
pop
out
inc
hlt
pop
repz
inc
jp
js
xchg
sub
cltd
cwtl
das
lret
btr
in
mov
push
arpl
push
jno
out
xchg
xchg
repnz
or
movsl
cmp
adc
lea
lds
dec
loope
mov
add
xor
push
or
mov
pusha
cmpsl
movsl
cmp
andl
pop
pop
dec
loope
subb
jns
mov
add
and
inc
cmp
ja
cmp
lock
jb
repnz
lds
idivl
cwtl
das
dec
nop
mov
ret
dec
popf
jecxz
push
icebp
ss
xchg
repz
movsb
mov
fldt
ret
das
jmp
or
cmp
mov
insb
add
mov
and
and
cmp
test
pop
test
lret
cld
test
xchg
dec
cld
add
mov
ret
cmp
hlt
mov
pop
lock
repnz
hlt
and
push
lcall
sub
xchg
cltd
xor
push
mov
inc
ljmp
xchg
cmp
lock
nop
repz
or
cmpsb
cmp
adc
mov
dec
loop
xchg
mov
fisubrl
or
xchg
test
movsl
cmp
andb
sub
lds
loope
jg
jecxz
pop
mov
add
and
pop
mov
inc
cmp
jbe
ds
xchg
pop
lock
mov
les
idivb
xor
mov
shrl
pushf
loop
push
lock
hlt
mov
or
test
or
dec
loopne
or
cmp
scas
pop
insl
add
rolb
and
and
inc
xor
rcrl
enter
fbstp
test
jge
sbb
xchg
dec
sti
add
sub
sbb
mov
ret
repz
inc
xlat
rclb
lock
icebp
pop
cmc
and
push
cltd
inc
jl
jne
xchg
sub
xchg
lcall
jmp
shrb
cmp
insl
outsb
mov
xchg
hlt
mov
pop
cmp
adc
mov
lods
dec
loop
xchg
mov
imul
or
push
test
and
movsl
cmp
jg
aas
mov
ret
pop
sub
pop
add
es
pop
lahf
call
stos
repnz
mov
inc
cmp
jne
aas
dec
xchg
pop
lock
jo
hlt
mov
ret
jnp
cmc
cmp
xor
mov
shrb
fwait
loope
push
out
xor
xchg
cmc
mov
or
stos
xchg
fldcw
ret
xor
out
dec
loopne
or
cmp
scas
pop
outsb
add
add
mov
inc
xor
pop
cmpsl
push
leave
pusha
xchg
fbstp
cmpsl
out
fstps
xchg
dec
cli
add
mov
dec
and
repnz
inc
fmul
adc
inc
lock
mulb
data16
cwtl
inc
jge
je
xchg
sub
xchg
fwait
xor
or
dec
ds
shrb
cmp
outsb
insl
mov
xchg
mov
mov
push
aaa
loope
stos
adc
les
stos
dec
loop
test
mov
imul
or
push
subl
and
movsl
cmp
jle
inc
mov
ret
pop
sub
pop
add
loope
jge
in
push
sahf
call
test
lret
and
je
inc
xlat
dec
xchg
pop
lock
outsl
pop
cmc
mov
ret
hlt
cmp
xor
mov
mov
loopne
push
out
xor
xchg
testb
bound
xchg
fsubrs
ret
xor
out
dec
loopne
pop
push
call
lods
pop
outsl
push
mov
test
lods
lea
and
inc
xor
cmpsb
push
lret
fbstp
cmpsb
call
xchg
dec
stc
push
popf
sub
mov
dec
and
jl
cmp
icebp
popf
inc
fxch
adc
inc
out
pusha
mull
gs
xchg
inc
jle
jae
xchg
sub
xchg
pushf
xor
or
sbb
imul
testb
loopne
stos
adc
les
stos
dec
loop
test
mov
imul
or
push
subb
and
cmp
jge
inc
scas
test
sub
enter
loope
jl
out
push
popf
call
test
sbb
mov
jae
inc
fmuls
pop
lock
negb
sarl
cmp
xor
mov
mov
push
in
xor
xchg
mov
or
lods
xchg
xlat
sub
or
loopne
push
push
jmp
lods
pop
jo
mov
test
stos
mov
push
lods
inc
xor
cmpsb
push
lret
loopne
stc
movsb
call
xchg
dec
testl
mov
dec
and
jp
cmp
icebp
fwait
inc
fxch
adc
inc
in
pusha
negl
gs
xchg
aas
jle
jno
xchg
sub
les
mov
cmp
pop
shrl
cmp
outsl
push
icebp
mov
mov
lea
ficoms
addps
lds
stos
dec
jecxz
adcb
cld
push
cs
add
subb
and
cmpsb
cmp
lods
test
sub
enter
loop
jl
out
push
popf
add
cmpsb
out
push
mov
enter
inc
cmp
jb
inc
fmuls
pop
icebp
les
popf
in
movhps
xchg
sub
inc
mov
xchg
imul
xor
xchg
testl
nop
sub
pop
mov
lret
dec
loope
add
jmp
stos
push
jo
mov
xchg
fistpl
movsl
cmp
cld
lods
inc
jae,pn
pop
movsl
dec
lret
loope
clc
mov
add
es
push
mov
inc
and
popf
loope
ret
mov
inc
pop
dec
mov
and
mov
push
pusha
into
mov
dec
push
cld
mov
jnp
enter
push
test
xchg
cs
shr
sbb
mov
dec
jns
jg
add
xor
pop
nop
dec
fwait
pop
icebp
psrlw
push
mov
test
jnp
mov
out
and
push
test
movsb
mov
dec
cld
stos
jge
mov
adcb
insl
lock
cli
or
out
xchg
xchg
loope
push
nop
bound
gs
cmc
add
fs
sbb
cltd
iret
push
xor
or
outsb
shll
jge
int
popa
ret
sysret
mov
adc
pop
adc
das
shr
cmp
sahf
insb
aaa
push
outsb
cwtl
filds
dec
push
popf
xor
dec
out
inc
xchg
stc
pop
popf
out
inc
test
addl
outsb
ss
sub
cmp
push
icebp
xchg
cmp
into
ljmp
or
test
cs
movb
loopne
jmp
notb
add
ljmp
and
jmp
pop
and
mov
sbb
outsw
mov
push
fsqrt
push
dec
pop
push
push
cmp
lea
test
and
outsl
sub
jnp
dec
lods
push
fiadds
pop
popf
xchg
jmp
test
clc
jp
arpl
mov
add
iret
jo
ja
xor
imul
sub
jecxz
loopne
or
dec
shll
bound
fldt
add
dec
pop
in
adcl
xchg
ss
xchg
mov
leave
cwtl
mov
inc
sbb
shr
imull
push
jmp
pop
not
mov
xor
dec
jno
add
shlb
inc
roll
xchg
sub
and
orb
call
pop
pop
adc
rcr
icebp
jmp
cmp
inc
lods
jne
cmp
dec
mov
notb
inc
pop
jnp
push
mov
arpl
mov
mov
ret
mov
dec
popf
ret
dec
sub
in
clc
sub
or
push
cmp
ret
stc
pop
rcll
ret
lock
adc
or
imul
mov
push
pushf
pushf
insl
in
repz
push
dec
jnp
jg
mov
movsb
push
jnp
jmp
stos
mov
cmp
dec
cwtl
outsb
dec
push
sbb
clc
ds
dec
mov
dec
mov
cmpsl
mov
mov
push
mov
cwtl
lods
sub
arpl
addr16
adc
jmp
aaa
jg
add
mov
gs
sar
add
rclb
push
add
std
sti
cs
inc
call
lret
call
insl
xchg
inc
jg
cltd
sarl
fidivl
xchg
mov
mov
scas
pop
cld
movsb
push
pop
jne
push
imull
lea
sbb
jb
dec
dec
es
mov
pusha
pop
lcall
xchg
sti
dec
outsb
fidivrl
sub
pop
xlat
dec
aas
mov
lds
cmp
sar
cmpb
xor
test
add
int3
sub
xchg
push
in
js
fnstsw
inc
outsl
jmp
add
inc
push
or
js
jecxz
clc
outsl
and
nop
pop
out
clc
outsl
and
stc
pop
je
clc
add
insl
pop
pop
xchg
or
mov
cmp
into
jae
push
inc
out
movsl
shl
movsb
cmp
cmc
xchg
int3
sti
adc
dec
test
mov
lock
sub
pop
inc
jge
ss
inc
mov
ret
cmp
cld
loop
xchg
jo
lahf
jnp
pusha
int3
jb
scas
mov
xchg
loope
lcall
mov
pop
adc
fadds
gs
mov
push
fadds
sti
outsb
adc
jo
gs
cmp
rol
adcl
mov
and
sarb
out
inc
ret
xchg
mov
lds
ja
mov
mov
je
inc
pop
and
neg
push
in
imul
pop
and
pusha
mov
push
cmp
sub
mov
in
and
sbb
scas
imul
mov
push
pop
mov
jp
xor
filds
insl
in
cld
js
add
mov
popf
jns
lret
frstor
cs
int3
sub
adc
push
xlat
inc
cmc
lods
adc
divl
jnp
je
jnp
adc
push
jmp
imul
adc
nop
adc
clc
out
xchg
pop
xlat
jnp
mov
xchg
insl
imulb
or
test
pop
push
dec
js
fldt
enter
mov
in
xor
stos
mov
pop
mov
xor
test
into
xor
mov
adc
data16
push
scas
gs
and
ljmp
ror
addl
cmp
aad
stos
push
push
aaa
push
push
aad
add
mov
mov
or
clc
jmp
mov
lds
cld
nop
sub
dec
mov
rcll
sub
dec
jno
shrl
adc
mov
inc
and
mov
inc
sbb
dec
arpl
push
shrl
nop
loope,pt
shrb
lret
loop
rep
xchg
insl
int3
dec
jp
inc
push
mov
adc
lock
xchg
aam
jo
ret
les
push
inc
dec
cmp
lods
pop
mov
jno
pop
movsb
aad
jo
pop
sub
dec
or
xchg
push
push
add
aaa
cld
jmp
lret
mov
jmp
loope
cs
adc
cmpsl
out
xlat
sbb
cmp
pop
inc
or
pop
insb
xchg
cmpsb
fcompl
fistps
inc
iret
pop
push
movsl
ret
lods
mov
pop
push
daa
dec
mov
scas
mov
es
jns
daa
test
adc
jecxz
add
xlat
outsb
repz
adc
repnz
leave
inc
inc
jnp
sub
div
cmp
popa
daa
mov
loopne
fsubrs
dec
push
add
popf
inc
push
lret
jo
adc
or
mov
jge
or
jo
pop
mov
inc
mov
leave
ret
test
in
enter
sub
lods
sbb
adc
jo
out
push
in
cltd
test
test
mov
iret
lds
dec
push
lods
mov
ror
xchg
out
cwtl
mov
fists
xlat
mov
push
push
test
fcoml
in
jl
hlt
push
ret
mov
les
jo
outsl
jg
push
fisubl
mov
sub
dec
and
into
adc
loop
xor
popf
imul
pusha
mov
data16
scas
mov
scas
jb
jg
push
sbb
negl
pop
push
jmp
insl
outsb
adc
call
or
popl
in
push
popa
xor
hlt
adc
icebp
fwait
ds
xchg
jo
cmp
add
jbe
lds
cmp
push
lahf
data16
inc
mov
sbb
and
jbe
mov
add
mov
pop
pop
dec
mov
dec
mov
dec
vmaskmovdqu
leave
notl
shl
in
xchg
jp
jle
pslld
fmuls
push
mov
jb
jg
adc
push
rcll
stos
adc
inc
aas
lods
push
inc
mov
call
mov
roll
mov
sub
push
jno
add
push
push
and
fs
adc
fwait
xchg
jg
mov
or
inc
mov
jno
inc
mov
jo
lods
push
sub
cmp
mov
xchg
sbb
sub
test
lcall
cli
aaa
leave
pop
jno
mov
mov
sarb
in
adc
or
cmp
pop
mov
loop
inc
inc
inc
and
pop
jge
jp
cmp
cmovbe
icebp
push
dec
aaa
cld
rclb
ja
out
adc
mov
outsb
add
cmp
scas
mov
les
mov
ret
dec
dec
mov
add
jle
dec
mov
cmpl
xor
xor
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
cld
pop
sub
adc
and
pop
dec
mov
nop
loope
dec
add
xchg
cmpsl
jo
inc
mov
xor
and
or
mov
hlt
cltd
jns
jg
or
jecxz
or
push
popf
int
xlat
out
mov
movl
adc
repz
aam
inc
fcoml
rcrl
fisttps
js
xchg
hlt
mov
les
cmp
test
cwtl
cmpsl
adc
dec
int
popf
fnsaves
xchg
data16
xor
mov
popa
adc
xor
lcall
sub
dec
test
or
fsts
.byte
data16
