cmpsl
push
test
cmp
add
js
add
clc
add
add
add
add
xchg
add
add
or
or
testb
and
xor
in
sub
push
pop
pushl
push
push
push
push
loope
pop
in
pushl
call
and
movl
sti
lea
and
inc
push
pop
dec
add
outsb
addr16
stc
lock
add
je
loopne
ja
pop
out
dec
clc
daa
insl
cmp
sub
call
sahf
sbb
mov
add
push
sti
xchg
in
fldt
push
dec
push
gs
jns
lock
jb
aaa
push
jnp
in
hlt
push
hlt
adc
sub
popf
mov
das
popa
push
push
xor
mov
call
js
popf
or
sub
fistpl
add
push
fcomps
js
sub
push
pop
push
insl
jae
shrb
sbb
data16
mov
mov
sti
pop
subl
push
inc
insb
outsb
call
jbe
pop
push
fs
mov
add
push
pop
mov
shr
and
stc
cs
or
xor
add
call
aaa
in
adc
push
ret
in
inc
push
daa
cli
add
pop
fdivp
divb
inc
rclb
js
push
hlt
push
icebp
mov
cmp
scas
push
call
pop
inc
jne
mov
lcall
sbb
adc
inc
orl
clc
mov
mov
xor
dec
add
add
mov
out
or
add
dec
push
fsubrs
lcall
cmp
push
push
cld
mov
fcmovb
leave
ret
push
call
neg
not
inc
jmp
fsubl
dec
fnstenv
imul
sub
jo
outsb
insl
adc
jae
and
sti
in
add
or
cmpsl
fldt
add
mov
jg
ds
daa
into
sbb
pushl
add
sub
jmp
pop
fldt
pop
sbb
dec
call
lret
inc
sbb
popf
hlt
mov
dec
xor
jbe
scas
pop
mov
mov
lock
jae
mov
ja
xchg
js
or
cmp
dec
call
sbb
fcomip
adc
neg
xor
fstpt
lock
lock
pop
jno
jns
and
lock
aam
dec
or
addr16
jbe
call
iret
pusha
lret
test
pushf
lahf
out
xlat
std
sbbb
inc
jmp
iret
mov
add
or
loopne
or
movsl
call
pop
mov
inc
sbb
addr16
mov
clc
ljmp
fcomip
xor
js
push
add
add
outsl
das
add
dec
aad
repz
jmp
mov
push
shrb
imul
outsl
jecxz
outsl
xor
outsl
jl
arpl
and
lahf
cmpsl
int3
inc
call
push
data16
dec
pop
dec
dec
out
push
or
ss
imul
push
pop
push
jbe
push
pop
test
or
cmp
xor
xor
call
movsb
je
outsb
xor
or
xchg
mov
insb
jp
push
fldt
ja
inc
pop
jae
sub
xchg
cmpsb
or
outsl
ljmp
push
push
sub
not
and
inc
pop
sbb
dec
sub
mov
std
cmp
fldl2t
shll
popf
cltd
or
rolb
movsb
outsl
js
sub
ss
cmp
xor
sbbb
xor
clc
aam
mov
dec
shlb
adc
pusha
jne
aaa
add
jge
test
inc
cmp
push
lods
je
cmp
add
pushl
or
cli
mov
jle
mov
push
add
ret
pop
lcall
wrmsr
fldcw
xor
xor
into
mov
sti
or
xor
add
ret
je
negl
push
xor
std
push
dec
jne
scas
call
jmp
int3
push
repz
sub
into
sbb
sbb
adc
fldl
pop
inc
jno
pop
loope
jne
jns
or
xor
mov
callw
xor
mov
adc
sahf
daa
loopne
inc
js
ss
inc
lods
call
mov
ret
div
sub
and
adc
push
mov
fs
dec
add
push
lods
xchg
loop
cmp
dec
jno
call
or
rolb
jge
push
jmp
mov
fldcw
test
clc
aam
push
or
sub
cmpsl
fucomi
cmp
cmp
add
getsec
dec
cmpsl
fscale
sahf
jmp
add
push
dec
mov
add
gs
bound
daa
mov
mov
aam
adc
test
inc
mov
sbb
dec
sbbb
add
jmp
push
inc
loop
or
mov
mov
loopne
sbb
neg
iret
inc
sbb
or
jmp
mov
jp
scas
or
sub
jmp
inc
cld
xorb
push
push
popf
stos
sarb
in
ret
addl
adc
stos
divl
iret
clc
xchg
add
test
xchg
iret
mov
inc
sub
adc
test
fsubl
jge
or
je
bound
insb
mov
sti
pop
jge
int
imul
xchg
loopne
call
jo
push
or
jb
and
popa
call
mov
stc
and
push
and
push
cmp
sbb
lea
jo
and
jae
lods
adc
push
pop
nop
pop
and
cmp
insl
dec
pop
jno
inc
loop
pop
imul
sbb
insb
cmpl
dec
ja
outsl
xchg
dec
push
dec
jb
pop
inc
leave
call
inc
scas
and
test
or
int
add
or
or
jnp
dec
cmpsl
addl
mov
fists
addr16
js
bound
loopne
mov
dec
popa
dec
mov
add
leave
in
inc
cli
inc
inc
insl
movsl
push
ja
or
fwait
dec
lahf
insl
and
lret
jle
cli
add
sub
dec
dec
jne
mov
out
frstor
setbe
adc
idivl
arpl
lcall
out
call
lea
mov
adcb
and
popa
jo
sbb
cs
aad
je
div
jge
push
cmp
adc
repz
pop
xchg
sysexit
cmp
jae
aad
inc
jbe
cmp
jo
dec
test
xchg
and
pop
clc
mov
dec
xchg
call
inc
mov
jo
xchg
add
js
push
faddl
je
push
dec
push
inc
stos
push
fmul
insl
enter
jns
sub
outsl
aaa
imul
imul
sub
dec
pushf
add
arpl
int
scas
fs
outsb
dec
insb
out
or
fwait
push
jo
xchg
nop
fldt
shrb
leave
push
aas
mov
insl
dec
imul
call
ret
mov
aaa
push
movsb
jnp
bound
clc
sbb
icebp
add
cmovg
adc
jp
pop
pop
pop
cmc
pop
add
in
add
pop
loopne
adc
testl
jbe
out
push
inc
mov
push
dec
add
imul
push
or
pop
inc
or
mov
adc
sub
adc
add
jecxz
outsb
pop
sub
or
mov
inc
dec
pop
js
inc
dec
dec
dec
jno
je
pop
sbb
fisttpl
xor
movsl
mov
xchg
orl
mov
jae
jbe
out
pavgb
sbb
rcrb
fs
imul
mov
outsb
ret
out
call
movsb
sti
or
icebp
int
icebp
cmp
mov
fwait
int
jle
nop
loopne
das
hlt
mov
mov
add
sub
shr
add
dec
sbb
neg
sub
neg
sbb
sub
jb
test
push
sbbl
cs
inc
dec
and
dec
lods
xlat
cmp
push
dec
mov
push
push
cmp
add
enter
inc
inc
not
mov
pop
push
jl
jmp
insl
inc
push
jecxz
jbe
cmp
outsb
push
rclb
or
pop
sbb
or
or
inc
dec
loopne
push
sbb
call
lods
or
cli
push
add
mov
mov
out
int
push
adc
add
lods
xchg
mov
ja
insb
ja
adc
int
daa
nop
add
mov
cmp
push
fs
push
rcll
pushf
imul
stos
std
add
xor
pop
fistl
in
jno
adc
inc
imul
sbb
sub
inc
dec
inc
not
add
out
out
or
repnz
test
cs
ss
stc
loope
sahf
data16
lods
or
lds
std
punpcklbw
inc
add
add
jecxz
xchg
adc
sbb
add
or
jmp
insb
push
xchg
jb
dec
inc
leave
mov
aad
movsl
or
mov
add
ret
jmp
pop
sbb
or
fsubl
xor
dec
out
pop
aaa
mov
fs
stc
push
int
aaa
push
xor
add
add
pop
cmp
test
bound
pop
mov
scas
int
mov
lock
add
into
jp
xor
jmp
mov
or
sahf
xchg
iret
addl
mov
cltd
imul
push
mov
and
out
mov
sbb
or
push
cmp
mov
shrb
jne
push
outsb
iret
outsl
sti
fildl
xor
inc
call
inc
sysenter
push
pop
mov
out
scas
fisubrs
xor
dec
pop
call
fbld
jno,pn
je
ret
adcl
push
inc
imul
xor
sub
cmpsl
dec
jle
pop
adc
xor
pushl
fimuls
mov
jmp
or
push
push
cmp
fstps
or
jmp
pop
jnp
mov
or
js
pop
popa
xor
push
push
bound
sbb
inc
adcb
add
icebp
addl
push
clc
ret
dec
add
sbb
test
add
sbb
cmp
into
aaa
dec
dec
sub
std
jmp
les
push
dec
jmp
jmp
rcrb
add
or
and
pop
pop
dec
jmp
or
xchg
testb
cmp
and
jmp
or
add
loope
popa
xor
loop
insb
jbe
or
and
jns
jmp
ret
aaa
xchg
dec
imul
jmp
inc
bound
sbb
test
adc
call
test
dec
add
repz
in
je
push
bound
push
les
add
test
and
jae
xor
lahf
lods
inc
push
fcmovu
and
sbb
xor
push
and
je
adc
push
pusha
inc
ja
not
cwtl
xchg
push
dec
jle
cld
xchg
outsb
inc
pop
adc
rorb
mov
inc
dec
dec
inc
addr16
sub
mov
mov
cmp
mov
push
inc
push
nop
fldt
lret
push
add
push
mov
dec
dec
or
mov
inc
sub
fs
push
adc
jb
addr16
out
sbb
lahf
aam
adc
loop
cmc
mov
bound
add
lcall
inc
or
fbstp
cmp
add
incb
sar
mov
ss
cmp
push
xor
out
sti
mov
shrb
adc
adc
pop
movsb
and
fwait
push
ret
inc
cmpsl
add
arpl
and
hlt
loopne
cwtl
loop
add
inc
ss
cmp
xor
add
repz
dec
int3
in
cmp
dec
pop
sti
arpl
add
stos
int
ss
imul
movsb
or
push
fcoms
icebp
push
aaa
js
push
inc
push
data16
mov
jecxz
repz
gs
sub
or
add
jge
or
je
push
out
in
stos
divl
aaa
xor
push
and
push
mov
leave
ret
xlat
sub
mov
or
push
or
inc
call
fwait
movsb
xchg
add
pushf
test
hlt
jmp
mov
add
xor
aaa
mov
das
jno
xchg
imul
adc
cs
xor
lahf
cmpsb
int
add
pmaxub
push
mov
mov
or
aad
push
arpl
push
loopne
mov
adcb
add
sbb
push
inc
adc
sub
inc
push
add
inc
insb
inc
jb
xchg
adc
aaa
cmp
adc
push
call
les
inc
xor
lcall
js
dec
push
push
mov
sahf
sar
push
add
movsb
pop
cld
push
mov
push
insl
dec
out
jp
aaa
loopne
mov
lock
pusha
mov
sub
push
loopne
cmovae
mov
notl
pop
xor
mov
sbb
insl
dec
insb
cld
dec
xchg
jle
xor
push
mov
in
sub
fwait
icebp
sub
mov
cmpsl
push
add
xchg
push
adc
stos
jnp
add
add
cli
push
add
jmp
bound
inc
int3
lcall
xchg
in
pop
test
add
sub
mov
fucomip
sbb
pop
push
fwait
jbe
outsl
scas
pop
loopne
or
adc
insl
lahf
add
pop
fwait
push
insb
mov
fcom
dec
sub
sbb
roll
fcoms
into
push
jmp
fcomps
add
add
sbb
cmp
mov
jo
inc
fs
mov
inc
shl
mov
sbb
add
dec
inc
pop
jnp
ret
jmp
xchg
ss
imulb
nop
into
mov
cli
lock
outsl
jne
jae
inc
push
dec
inc
push
sti
or
inc
arpl
cmpb
lahf
sar
lock
sbb
jmp
fstp
pop
ret
sbb
call
pop
add
pop
sbb
neg
add
sti
push
inc
adc
push
dec
dec
sbb
sub
mov
fistpll
xchg
push
adc
dec
pop
add
daa
cs
testb
sti
sub
push
push
pop
sbb
inc
pop
cld
pop
sub
add
inc
fucom
ljmp
popf
add
add
sbb
cmp
std
out
xor
add
outsb
test
jno
sub
xor
aad
xor
das
mov
clc
cmpsl
mov
mov
scas
push
sub
icebp
loop
sub
cmp
jmp
mov
jbe
mov
xor
and
ljmp
xorb
popf
in
addb
outsb
or
incl
dec
mov
push
push
xor
hlt
outsb
push
stos
jmp
xor
leave
scas
push
cs
push
mov
push
rcll
icebp
mov
sub
loope
or
mov
add
inc
jmp
scas
lock
dec
enter
push
xchg
jo
movsl
fbld
mov
ljmp
gs
icebp
add
rcr
lock
insl
je
add
dec
inc
jl
mov
xchg
push
or
pop
fisubrs
sbb
imul
add
inc
push
jnp
into
or
jb
loope
imul
xor
adc
mov
sbb
push
and
mov
ja
adc
les
js
cmpsb
inc
mov
inc
pop
jo
test
xchg
cwtl
test
or
mov
mov
xchg
or
pop
out
mov
js
aas
in
neg
inc
loop
iret
hlt
fistpl
or
sub
or
int
dec
mov
xor
or
imul
push
push
xchg
dec
pop
push
pop
push
lret
push
mov
inc
imul
rolb
xor
xor
pop
mov
or
sub
fildl
push
outsb
popa
mov
cmpb
dec
pop
jo
or
stos
cmp
jns
jbe
adc
ret
gs
cmpsb
shlb
ds
cmp
mov
or
or
add
cmp
in
mov
js
xlat
inc
mov
fstpl
aam
jo
inc
sub
add
xor
stc
jmp
cld
fwait
add
sahf
out
imul
negb
sbb
cmc
push
add
sub
dec
jmp
add
add
movsl
or
push
xor
pop
hlt
loop
push
cmp
push
xor
or
add
and
xor
push
mov
in
stc
push
rcrb
and
inc
inc
push
jo
jae
hlt
sub
cvtpi2ps
cwtl
fistl
xchg
scas
push
jns
repz
cmp
aas
cmp
push
call
or
fadds
fmul
inc
mov
or
cmp
lret
adc
jge
insb
cmp
mov
push
imul
js
pop
cmp
mul
push
cwtl
call
pop
jb
xchg
lods
dec
lcall
dec
addr16
jnp
sub
jo
push
adc
adc
jg
movb
inc
sbb
dec
neg
mov
dec
lods
not
adc
dec
inc
sbb
fucomp
js
push
inc
jns
addb
pop
imul
lods
add
jp
push
jmp
sub
cmpsl
ja
call
popa
xor
fnsave
push
mov
mov
xor
jns
sbb
std
f2xm1
jmp
adc
add
mov
addl
mov
jg
outsb
mov
lock
cmp
mov
dec
xchg
dec
jnp
ja
adc
sbb
and
fdiv
out
and
add
xchg
rcrb
xor
push
mov
gs
dec
jg
bound
inc
call
cmp
in
mov
add
call
filds
mov
mov
aaa
fadds
ret
sub
or
add
push
inc
and
fdivl
dec
mov
adc
pop
cmp
sub
insb
fcmovu
fisubrs
test
lds
jo
or
pop
sar
and
fsubrs
cmp
dec
cwtl
into
enter
lret
clc
cs
cmp
xchg
lods
mov
mov
fisubrl
out
lcall
imul
into
inc
sbb
cmp
push
push
popa
jbe
xchg
in
dec
and
insl
inc
cmpsl
sarl
or
mov
inc
nopl
push
lods
addl
mov
mov
bound
decb
mov
jne
xor
cs
mov
stos
das
xorl
push
int3
jns
insb
dec
xlat
push
fadds
push
add
hlt
bound
stos
xor
inc
gs
add
sub
or
popa
dec
dec
push
dec
insl
inc
mov
mov
or
sub
inc
inc
jmp
mov
in
add
mov
jns
inc
fs
insb
jne
ja
jb
dec
dec
or
shll
sbb
aam
cld
mov
push
popf
ds
bound
cwtl
loope
xor
xchg
in
arpl
or
mov
fs
mov
imul
sahf
add
or
shl
test
insl
in
jb
and
ret
jne
dec
cmc
push
push
mov
insl
dec
fdiv
movsl
lret
addb
js
fdivl
xchg
popa
cwtl
push
scas
push
push
cmp
aad
scas
mov
xor
sbb
loopne
popa
jl
or
push
mov
xor
jle,pn
aas
jb
jo
jb
insb
push
push
or
pop
add
xchg
fs
jo
or
jle
adc
int3
xchg
dec
into
pop
mov
inc
rorl
dec
cld
mov
xchg
mov
loopne
cmp
call
and
imull
or
cmpsl
test
mov
sub
cld
add
xchg
cmp
mov
mov
push
sub
cmp
jb
xchg
lea
dec
adc
lock
sbb
push
das
dec
add
push
mov
fs
push
scas
xchg
dec
fcomps
and
dec
mov
and
imul
ror
je
mov
pop
jne
mov
jnp
dec
or
push
fdivs
cld
jge
fbld
xchg
push
mov
movsb
orl
mov
or
or
popw
cmpsb
arpl
sti
sbb
loopne
call
shlb
dec
mov
ret
push
jnp
pusha
std
sub
js
inc
arpl
out
stc
mov
cmp
fisttps
flds
lret
dec
jmp
divl
fildll
cltd
sbb
sbb
sub
loopne
loopne
or
xor
out
jmp
inc
dec
adc
mov
and
loope
mov
dec
or
mov
lock
sub
pop
and
xlat
xchg
les
cli
jmp
stos
inc
test
pushl
xor
arpl
lock
and
or
mov
stos
out
cmp
add
sbb
dec
inc
jbe
pop
mov
dec
jb
pop
jae
jge
push
testl
lock
push
mov
pop
xchg
cmpsl
pusha
cmp
fbld
mov
xchg
add
adc
xor
pusha
mov
imul
pop
call
pop
loop
jbe
out
mov
sbbl
fcmovnbe
mov
push
clc
pop
loop
and
lods
cmp
inc
xchg
icebp
or
lret
pusha
push
dec
mov
dec
call
or
add
dec
adc
stos
ret
dec
dec
ret
mov
out
ds
cwtl
adc
and
mov
ds
mov
jl
movd
xor
cltd
stc
in
dec
xchg
dec
testl
ss
jno
es
ds
out
mov
ret
lret
in
test
dec
dec
inc
addr16
xor
paddusw
dec
jbe
jae
adcl
adc
cltd
lret
fxtract
nop
mov
andb
adc
cmp
jbe
jb
mov
mov
test
in
jnp
mov
mov
inc
mov
inc
mov
push
mov
insl
outsb
inc
insl
arpl
pop
and
xor
jb
cmpsb
shr
dec
rol
sbb
aam
adc
outsl
pop
mov
xchg
and
sbb
add
sbb
iret
push
call
jmp
imul
and
or
shll
sbb
pop
icebp
xchg
or
cs
es
outsl
jne
cs
js
pop
in
addr16
xor
fs
cmp
xchg
add
jns
xor
ja
pop
sbb
push
insb
jns
push
push
xor
or
test
fcoml
outsl
adc
or
push
popa
xchg
dec
andb
dec
or
and
or
mov
fcoml
push
xor
pusha
inc
xlat
jb
int3
test
in
add
add
clc
push
inc
pop
inc
cmp
mov
and
sbb
dec
aam
leave
call
or
js
bound
xlat
dec
pop
insl
fistps
inc
xor
insl
imull
jg
repnz
outsb
addl
jbe
fistpl
add
add
xor
ret
inc
push
imul
sar
xor
xchg
js
aaa
jle
in
jmp
lods
call
out
dec
jns
push
pop
sbbb
imul
sub
sahf
loop
xor
outsl
sbb
rolb
jo
cmpsb
call
inc
jp
ret
mov
sahf
sti
addb
inc
ss
jb
stos
in
lea
and
xor
sbb
add
test
iret
sbb
mov
pop
dec
xchg
addr16
sti
cmc
xor
aad
add
push
pop
fst
icebp
sbb
imul
xchg
inc
sbb
jecxz
fdivr
test
mov
mov
sti
push
mov
jmp
jg
lret
pop
repz
add
cmp
jne
pop
test
icebp
and
call
outsb
sub
inc
push
arpl
cld
pop
dec
roll
lock
push
mov
lret
lret
dec
scas
test
jo
jmp
pop
clc
outsl
sbb
ror
inc
pop
adc
rcll
push
dec
jmp
je
xchg
push
clc
mov
push
loopne
jne
push
test
stos
jns
enter
or
pop
repnz
jmp
adc
sbb
jb
add
or
push
push
push
mov
push
das
clc
movsb
add
xor
clc
add
test
mov
sbb
imul
sub
imul
stc
fdiv
jne
jmp
cmp
pop
add
das
addb
popa
rorb
std
mov
jmp
rol
mov
shll
push
mov
xchg
push
out
jmp
adc
and
mov
lea
mov
out
mov
xor
pop
jo
cmpsb
xor
mov
sbb
push
pop
push
inc
in
repnz
push
pop
enter
repnz
imul
aaa
enter
sarl
movsb
stc
popa
xor
pop
adc
rcr
das
lcall
loop
push
std
xor
cmp
aaa
pop
das
push
jnp
and
sbb
insl
xor
push
lock
fisubrs
inc
hlt
mov
xchg
mov
add
das
lods
ss
vmovntdq
shrb
xor
xor
dec
arpl
mov
outsb
and
imul
call
stc
xor
in
mov
cli
mov
scas
sub
loop
test
or
mov
mov
sti
mov
sub
push
das
adc
divb
loope
aaa
hlt
and
mov
das
push
inc
xor
frstor
add
cld
ficoml
insb
push
add
loop
pop
or
pop
cmp
loop
xor
push
mov
data16
loope
mov
mov
jb
xor
imul
inc
add
iret
jmp
sbb
cmpsb
or
add
out
dec
add
inc
add
add
dec
sbb
or
jne
mov
repnz
pop
jnp
or
jo
xlat
add
mov
fwait
adc
fdivs
jb
add
daa
jo
pop
add
lds
cmpl
addr16
or
lahf
insl
mov
mov
dec
fmull
or
repz
add
xchg
dec
aas
in
out
and
mov
adc
dec
or
push
add
loope
add
dec
lret
dec
aas
and
cmp
sbb
add
or
or
outsl
fmuls
stos
in
pop
xchg
jo
mov
stc
ret
mov
outsl
inc
dec
fs
stc
cmp
out
gs
xor
fisttpll
shll
inc
dec
cmp
sbb
test
je
and
dec
sbb
pop
cmp
cmc
dec
ss
cmp
add
lods
adcl
add
je
loope
mov
dec
jns
bound
xor
jl
pop
xor
add
add
lahf
push
js,pt
aad
in
add
fwait
add
or
dec
sub
repnz
test
in
popf
mov
andb
inc
addr16
xor
call
adc
dec
push
pop
push
or
xor
push
es
sti
pop
test
jbe
aas
aas
cli
or
icebp
xlat
jne
or
test
stos
xlat
cld
push
js
mov
xchg
push
push
xor
dec
or
and
ds
outsl
inc
aas
mov
xor
cltd
clc
jmp
push
testb
inc
dec
stos
stos
sub
in
dec
decl
inc
and
nop
adc
inc
inc
nop
inc
inc
add
mov
and
adc
or
add
and
pop
mov
pop
dec
dec
mov
adc
and
sub
inc
push
mov
dec
inc
ds
fnstsw
sbb
adc
dec
add
adc
comiss
ljmp
xor
or
sbb
add
jl
mov
jg,pt
outsb
add
sbb
mov
test
incb
fcompl
sbb
sbb
ss
sbb
or
sbb
xlat
cltd
frstor
jge
add
idiv
ja
push
sbb
or
sbb
sbb
jns
int
jo
sbb
sbb
and
sbb
ss
repz
or
sbb
clc
sub
je
sbb
and
lahf
cltd
outsb
repz
inc
sub
aaa
jnp
push
push
or
adc
mov
out
or
sti
or
add
testl
iret
jb
mov
negb
cmp
sbb
or
mov
sbb
sbb
imul
jl
pop
jle
in
in
in
add
push
or
in
negl
inc
mov
sub
sbb
cmpsl
push
or
je
cmp
sbb
sbb
add
fstpt
pusha
adc
popl
sbb
test
sbb
inc
hlt
fdivs
jge
outsl
mov
rcrl
or
and
loopne
jmp
addl
fdivl
in
adc
inc
cs
pop
ja
jns
call
ret
pusha
or
inc
jmp
jl
pop
fidivs
pop
and
std
or
popf
xchg
sbb
sub
sti
jae
test
mov
sarb
mov
sbb
sbb
mov
mov
pop
add
out
dec
sbb
and
in
imul
ljmp
adc
iret
or
xchg
cmc
xchg
mov
shrl
adc
fidivrs
mov
add
xor
add
fs
lods
mov
sub
test
mov
cmp
mov
sbbb
inc
add
jne
icebp
sbb
jno
lcall
cltd
cmp
add
into
or
sbb
fsubrs
and
push
xor
bound
sub
loop
addr16
jbe
nop
or
sub
sub
stos
lods
imul
cmc
mov
out
addr16
add
adc
lods
jle
idivb
test
fcmovnb
or
adc
jb,pt
scas
inc
sub
mov
add
inc
lock
mov
mov
adc
adc
add
scas
pop
lret
js
sub
sbb
sbb
insb
inc
idivl
pop
pop
mov
xor
mov
dec
rcr
pop
fcomps
clc
and
insl
and
mov
ss
push
nop
add
xchg
jnp
in
push
mov
push
or
mov
loope
divl
and
lahf
popf
mov
mov
jmp
push
cmp
loope
pop
movsb
adc
jecxz
xchg
jp
les
jnp
pusha
notb
rolb
stos
jne
cmp
pop
aam
jle
xor
xchg
stc
mov
cltd
push
fcom
push
dec
pop
mov
add
inc
adc
xor
mov
popl
lods
outsb
adc
pushf
xor
sbb
leave
inc
adc
pop
add
out
jo
clc
mov
jmp
adc
or
stc
push
and
xor
jnp
mov
pop
lock
add
test
pop
jae
nop
fadds
out
rcll
gs
or
imul
cmp
es
mov
cs
pop
std
icebp
cltd
dec
rcll
sbb
mulb
pushf
cmp
iret
jns
inc
cmp
or
push
jl
movsl
dec
jae
adc
jae
sub
and
add
add
outsb
stc
push
div
popa
aas
lea
jg
xor
arpl
jp
xchg
stos
mov
shl
outsb
xchg
rclb
add
mov
psubw
scas
inc
jne
out
fstps
mov
push
jno
sbb
mov
mov
xlat
test
mov
cmp
lock
jmp
push
lea
add
das
mov
jne
sub
adc
sti
movsb
shlb
cmpsb
sahf
pop
movsl
enter
xchg
xor
mov
pop
imul
int
pop
rcrl
in
rorl
xchg
mov
mov
push
cmc
sub
call
mov
cmpsl
ds
sbb
jmp
rcrl
enter
mov
ffree
mov
idivb
sbb
pushf
notl
xor
jmp
lods
stos
mov
movb
or
insb
insl
or
dec
or
inc
mov
push
fdivrl
or
sub
jmp
mov
iretw
push
pop
lahf
or
rcrb
imul
xchg
sahf
push
and
jl
mov
outsl
adc
je
or
shrb
les
dec
nop
mov
dec
out
pop
xor
fldcw
notb
aaa
cmp
pop
and
leave
sub
and
and
jecxz
fnstenv
sub
int3
movsl
inc
jl
mov
add
xchg
xorb
imulb
packssdw
mov
push
sub
xchg
in
jne
ret
mov
fidivl
pop
push
pop
jns
jl
mul
and
jo
cmpsl
sub
xor
push
push
jp
push
push
fstpt
or
pop
fldl
pop
ret
cmp
xor
pop
icebp
out
fcomps
push
mov
jae
shl
stos
sub
mov
xchg
cmp
mov
fstpl
mov
mov
int3
pop
sub
jo
mov
inc
pop
adc
adc
std
xlat
jbe
sbb
push
push
stc
cwtl
out
mov
sti
push
cs
mov
imul
test
mov
mov
clc
sbb
xsaves
cmp
mov
mov
pop
xchg
test
fucom
and
out
ds
push
loop
leave
je
pop
mov
dec
cmp
roll
shl
push
xchg
andb
sbb
mov
es
pushf
mov
sub
cmpsb
cmp
sub
push
fdiv
test
aas
dec
dec
sub
adc
fdivrs
cmp
lahf
and
jne
in
add
test
push
iret
xchg
movsb
call
pop
sbb
cmpsb
dec
rorb
das
jmp
stos
fdivrs
insb
pop
lcall
and
test
xchg
out
iret
lock
mov
push
imul
jl
sub
aas
sub
or
push
call
shrb
xlat
fisubrs
daa
xchg
xchg
or
nop
add
or
add
pop
jle
lahf
fistpl
cmp
and
cld
xchg
popf
add
frstor
lea
nop
ret
mov
mov
jno
enter
pushf
dec
loopne
pop
mov
sbb
cmp
jecxz
or
push
je
xor
mov
call
cli
pop
dec
pop
jmp
aam
xchg
xchg
mov
cmp
faddl
sbb
div
xor
xlat
outsb
ret
mov
jmp
mov
sub
daa
int3
add
cmc
jmp
scas
pop
adc
out
pop
out
mov
ret
scas
pop
jns
popa
call
shrl
mov
icebp
push
adc
mov
lret
out
mov
lcall
pushf
inc
lods
adc
test
cmc
add
jl
pushf
aam
inc
xor
cmpsl
out
jne
push
or
jno
or
fwait
out
and
dec
inc
mov
mov
icebp
jne
out
sbb
jl
hlt
dec
aaa
dec
setl
pop
mov
rcrl
dec
mov
rorb
push
cwtl
dec
clc
push
ret
pusha
icebp
js
adc
mov
iret
mov
mov
ds
sub
jb
ret
dec
inc
out
add
pop
mov
jl
mov
pop
pop
mov
xchg
data16
and
adc
sub
mov
fildll
pop
dec
xor
mov
and
adc
sub
fxch
push
sarb
inc
aaa
pop
stos
mulb
loopne
outsb
mov
out
loop
call
inc
daa
add
in
jg
push
stos
int
cmpsl
mov
jl
pop
test
jecxz
pop
sbb
add
ficompl
mov
mov
rorl
sbb
lods
mov
xor
sarb
jae
loop
xor
mov
std
or
inc
addr16
and
jecxz
shl
jmp
or
bound
xchg
scas
dec
movsl
dec
inc
insb
cli
jge
out
imul
adc
loope
mov
mov
xlat
stos
rorb
inc
cmp
mov
xor
scas
cmpsl
popa
pop
fdivrs
and
int
ret
xchg
jl
dec
xorl
mov
loopne,pt
sarb
popf
and
sbb
stos
subl
addl
or
inc
dec
mov
push
cmp
fadds
adc
lock
fnstcw
push
insl
sub
mov
push
sbbl
fwait
sbb
hlt
outsb
mov
mov
sbb
test
ffree
xorl
or
mov
jne
dec
les
call
daa
jl
pop
dec
addr16
dec
stos
dec
shll
push
or
call
aas
cmp
mov
comiss
hlt
mov
push
enter
mov
imul
or
xor
xor
mov
mov
cmp
fmuls
out
outsb
lock
fs
cwtl
in
add
rcrl
sub
and
xchg
jmp
xor
jbe
inc
xor
shr
cmp
and
xchg
sti
ret
sbb
or
cmp
fisubs
mov
lods
stc
xorl
pop
jge
sar
daa
dec
jp
mov
xor
cmp
ficompl
add
sub
lret
gs
insl
scas
xor
sbb
and
in
pop
mov
fwait
cmp
mov
sub
je
sbb
jne
xor
pushf
push
pusha
cs
sbb
push
ret
jo
push
xor
sub
or
lret
hlt
pop
xchg
sahf
in
stos
lcall
dec
cmp
add
cmp
pop
push
sbb
scas
movsl
cmpl
push
cmpsl
pop
pusha
pop
inc
pop
mov
adc
or
lcall
cmc
cmp
mov
repnz
divl
je
xor
inc
xor
and
fldenv
ja
jmp
call
xchg
cmp
rorl
xlat
jno
iret
add
lods
push
or
inc
lahf
jp
scas
negb
or
cwtl
jl
cli
mov
sbb
jecxz
push
push
stc
xchg
in
xchg
inc
lret
dec
lods
xchg
mov
hlt
mov
dec
sbb
jno
jmp
dec
push
ja
jnp
imul
add
fs
inc
fisttpll
addr16
mov
adc
sbb
xor
cwtl
movsb
mov
mov
movsb
or
mov
xor
leave
sub
les
sbb
cmp
je
add
mov
hlt
icebp
and
fs
sub
pop
test
in
scas
and
sub
out
add
xor
inc
cmpsb
cmp
add
loopne
dec
les
aas
jb
mov
dec
sbb
push
mov
pop
mov
sub
addl
enter
fnsave
fadds
add
cmp
pop
adc
or
xchg
pop
push
add
mov
pop
xchg
rolb
pop
dec
mov
ret
inc
xchg
cs
pop
loope
adc
xchg
mov
in
jle
xchg
dec
pop
cmp
lcall
cmpb
mov
div
aad
popa
or
out
pop
adc
add
mov
push
mov
ret
mov
mov
mov
jge
add
add
add
iret
sub
mov
scas
ret
and
inc
inc
fwait
jg
pop
xchg
push
icebp
sub
sbb
inc
jg
aaa
adc
clc
pop
daa
mov
or
das
jp
cltd
pop
pop
movl
adcl
sarb
sub
mov
and
jmp
mov
shlb
insb
mov
cmpsl
inc
jno
bnd
andb
or
xor
and
adc
loopne
push
call
std
mov
jo
push
xchg
xor
movsb
icebp
jp
sbb
cmp
add
jns
loope
mov
cltd
rolb
mov
cwtl
xor
movl
repz
jb
in
mov
xchg
jo
mov
xchg
jo
add
rorb
aam
lods
and
dec
push
xchg
jg
mov
scas
lret
pop
cwtl
add
orb
inc
mov
lock
adc
cmpsl
and
pop
cmp
out
xchg
cmp
jns,pt
mov
test
or
insl
push
add
insl
xchg
xor
mov
dec
sub
xchg
adc
shll
xor
aaa
add
xor
cmp
andb
sbb
mov
jnp
pop
sbb
fsub
adc
mov
add
cmp
sub
pop
sbb
mov
mov
ret
aaa
sub
roll
faddp
mov
in
xor
jmp
inc
adc
push
aam
xchg
or
dec
bound
jge
push
popf
gs
xor
adc
test
sti
sub
out
and
cmp
out
leave
push
mov
mov
jno
loop,pt
rorb
pop
dec
mov
push
xor
js
jb
fcoms
or
cmp
mov
lock
cmovl
shrb
lret
fnstsw
pop
mov
lock
test
int
adc
fs
addb
lock
xlat
add
xor
outsb
mov
mov
xchg
fsubrl
imul
fmuls
pop
shl
add
jmp
loopne
inc
add
jmp
ret
inc
into
cmp
sarl
mov
in
push
xchg
cld
xchg
xchg
or
ficoms
cmpsl
cs
adc
jbe
mov
mov
push
rcr
loopne
or
mov
xor
pusha
xchg
mov
add
mov
cmp
or
mov
jne
inc
xor
xchg
or
aas
hlt
push
pop
mov
or
and
imul
xchg
sbb
pop
mov
or
notl
pushf
cwtl
insl
push
aaa
jle
jae
rclb
adc
push
lcall
xor
lcall
mov
sahf
and
cmpsb
divb
and
ret
dec
xor
mov
loop
pop
mov
lods
dec
and
loop
jae
fs
cmc
shll
in
sub
inc
push
cmp
ret
mov
dec
cmpsb
ds
mov
rol
adc
jp
inc
sahf
loope
ljmp
jge
stc
mov
movsl
xchg
push
and
arpl
ss
shll
adc
mov
mov
lret
push
mov
adcb
sbb
mov
ljmp
insb
int
popa
mov
mov
and
sub
pop
add
fcoms
int3
pop
iret
adc
or
pop
dec
jle
scas
aaa
mov
test
ljmp
arpl
inc
cs
sub
mov
add
push
cwtl
cmp
mov
mov
sub
jmp
xor
jns,pt
test
in
mov
add
mov
negb
dec
lret
adc
cmpsb
jnp
decl
fildll
aaa
add
sahf
es
roll
cmp
sbb
and
das
fstp
or
insb
push
adc
jl
adcb
mov
cmp
dec
std
rolb
fidivrs
sbbl
xlat
push
out
and
std
stos
adc
pop
dec
lods
jg
in
js
mov
cltd
pop
mov
test
push
inc
lock
pusha
cli
ja
arpl
popf
sarl
inc
dec
fidivrl
cmp
pushf
jbe
cmp
mov
adc
clc
cli
std
pop
testl
add
loopne
mov
xor
mov
out
fs
xchg
shll
jl
pop
pop
dec
ljmp
stc
shrb
pop
cmpsl
daa
and
xchg
and
fwait
push
js
cmp
pop
or
js
sbb
jnp
out
outsl
nop
cmp
jecxz
or
and
popf
jo
and
inc
fdivs
mov
inc
ss
out
xlat
or
mov
mov
mov
pusha
mov
pop
icebp
pop
sbb
and
dec
cld
testb
popa
out
lret
fcoms
loop
jge
dec
out
orb
mov
push
mov
pop
lahf
pusha
push
mov
loopne
fst
xor
addb
push
iret
loop
mov
sbb
pusha
dec
pusha
sti
loop
mov
dec
ds
xlat
xor
add
xchg
push
pop
arpl
cmp
pop
shlb
lods
std
sub
fisubrs
or
jp
sbb
ds
flds
andl
ljmp
insb
inc
daa
adc
addr16
movl
dec
sub
insb
mov
daa
xchg
adc
fsub
push
mov
sub
jp
inc
push
popa
dec
lods
cmp
jnp
cltd
push
insl
sbb
loope
into
hlt
sti
mov
movsl
mov
push
xor
mov
jo
in
fmuls
aaa
dec
je
dec
mov
mov
mov
ds
call
lret
cmpsl
ds
xchg
cmp
mov
rcll
stc
inc
mov
mov
push
lods
push
pop
imul
cli
mov
fidivrs
sub
icebp
jo
jne
fadds
or
orl
loopne
test
testb
aaa
sti
jp
adc
sbb
sbb
xchg
push
jno
xchg
inc
arpl
enter
lods
push
mov
push
cmc
lret
xlat
jge
sub
or
fidivrl
outsl
shll
lret
push
lret
push
sub
cmp
xor
int3
sub
aaa
shrl
nop
mov
aam
jno
cmp
sahf
fucomp
jl
mov
jmp
xor
and
addl
cmp
or
dec
mov
gs
sarl
jmp
inc
andb
into
test
or
push
xor
mov
mov
addr16
cli
ja
mov
gs
insl
icebp
aas
mov
mov
jmp
iret
sbb
js
call
in
and
mov
fsubl
rcl
dec
int
or
cmc
sub
cmp
pop
fwait
cs
xchg
clc
cli
jno
insl
mov
jnp
sbb
mov
inc
sbb
xchg
fldcw
pop
cmp
in
in
loopne
xchg
in
lods
and
xorb
sbb
cmp
xor
push
jo
ss
ds
sbbb
cmp
xchg
rcrb
fwait
scas
xor
sahf
add
and
mov
loopne
lea
aaa
xchg
push
frstor
sub
cmp
jle
pop
xor
xchg
mov
lret
mov
in
add
and
leave
mov
test
sub
jle
adc
or
dec
out
cmpl
fadd
inc
push
aas
fcomps
icebp
mov
loop
push
and
jmp
or
loopne
adc
mov
xchg
test
clc
mov
clc
jno
or
and
xor
jmp
leave
mov
mov
pop
sar
in
ret
lds
xchg
mov
shll
roll
mov
ja
imul
dec
aad
sarl
dec
mov
test
xor
cmpl
push
pusha
jno
hlt
mov
daa
js
mov
in
cmpsl
sub
out
mov
push
mov
lock
jle
lret
push
xchg
mov
push
push
andl
sahf
dec
ljmp
mov
xor
pop
test
xor
idivl
gs
psllw
aam
pusha
jnp
adc
and
mov
cmpl
insb
sbb
icebp
cmp
mov
aam
pop
fisttpl
push
jl
xchg
add
xor
inc
insl
jle
inc
push
dec
xchg
or
fdivl
pop
cld
pusha
nop
jle
add
xchg
ds
mov
fwait
mov
or
push
in
mov
cltd
ds
les
icebp
adcb
jl
mov
and
jae
cmp
negl
or
pop
imul
das
inc
es
leave
fidivs
fnstsw
cmp
sub
mov
push
push
test
cmc
mov
sub
and
inc
test
mov
cmp
xor
jb
mov
cmp
xchg
test
sbb
lahf
fwait
or
fiaddl
lcall
rcrl
adc
adc
or
rcrb
ss
les
push
or
insb
imul
in
fs
fcmovnu
fisttpll
or
adc
stos
popa
jne
mov
jmp
xor
sti
adc
movsb
and
pop
mov
loopne
push
cmp
int3
movsl
dec
pop
and
pop
xor
out
mov
rcrl
mov
cmp
sbb
movsl
mov
jmp
aad
jbe
stos
shl
pop
rcr
jb
sub
outsl
mov
loope
xor
mov
xor
adc
fs
cmp
mov
inc
xchg
out
add
int3
outsb
hlt
les
fisttpll
dec
popf
int3
bound
jle
test
pop
repz
adc
sub
ds
popf
mov
mov
add
test
xor
movsl
fwait
popf
imul
jmp
sbb
pop
inc
dec
lock
adc
jbe
adc
hlt
inc
sub
jmp
and
in
popf
pop
and
mov
adc
loop
dec
mov
out
jp
mov
xor
adc
add
mov
push
daa
add
in
fstpl
inc
xchg
cmp
stos
add
xchg
sub
adc
bound
adc
notl
test
ffreep
jns
test
pop
sub
dec
andl
cmp
dec
lret
lock
mov
cmp
pop
movsl
pop
xor
add
subb
xchg
lods
pop
loop
and
hlt
add
inc
fs
xchg
jmp
aam
mov
loopne
jp
data16
adc
adc
and
and
sbb
sub
aam
jg
sbb
pextrw
jg
leave
mov
shlb
sahf
pop
cmc
testb
cs
inc
ljmp
push
add
adc
insb
arpl
andl
and
out
call
sbb
sub
subl
jo
jnp
mov
jo
pusha
ljmp
sbb
pusha
jns
fisttps
mov
sbb
aad
mov
push
fs
shrl
int
in
jo
lcall
mov
xor
ds
inc
nop
push
ss
fnstenv
punpckhwd
clc
jno
and
nop
je
mov
xor
repz
inc
test
jmp
push
bound
insb
arpl
lds
mov
icebp
lods
mov
sub
or
adc
dec
mov
ret
test
adc
in
push
pop
push
adc
out
out
clc
cmpsb
adc
hlt
jmp
aam
in
je
mov
and
mov
xchg
scas
cmpsl
and
sub
lahf
vcmpfalseps
xchg
mov
adc
xorl
cmp
push
cmpb
dec
ret
shlb
cmpsb
push
lret
cltd
fmulp
jmp
inc
leave
out
iret
xchg
mov
mov
dec
sbb
test
mov
and
test
mov
add
sub
mov
subl
jmp
pop
ljmp
or
inc
addb
sbb
clc
or
icebp
mov
mov
pop
std
push
mov
fs
sub
adc
fwait
pop
sbb
inc
cli
xor
xchg
mov
and
dec
dec
inc
and
cmp
push
mov
testl
pop
pop
cmpsl
mull
sbb
cli
les
add
test
add
or
jb
adc
inc
cs
and
notb
inc
repz
xchg
aas
idivl
cmp
or
adc
cmpsb
out
in
adc
into
fdivrs
and
lcall
clc
pop
add
sbb
sub
call
push
mov
rcr
push
jp
xor
cmpsl
cmpsl
popa
dec
rclb
lea
push
xor
repz
ret
imul
addr16
push
sti
mov
mov
pop
insl
frstor
inc
popa
incb
push
xor
orl
lahf
jb
xchg
sub
xchg
pusha
add
cmp
dec
testb
mov
xchg
popa
add
test
arpl
mov
mov
mov
dec
ffree
clc
lea
mov
sub
or
xor
push
pop
xor
lret
mov
and
xor
inc
mov
xor
push
inc
push
dec
ret
je
scas
mov
xchg
push
cltd
rcll
adc
bound
inc
xchg
xchg
dec
shl
pop
push
int3
and
jg
loopne
or
pushf
dec
mov
imul
sbbl
jbe
addr16
jl
sub
bnd
push
mov
push
cwtl
jbe
sbbb
inc
jae
jo
push
add
xchg
xor
xor
mov
sub
fsts
or
pop
jl
and
popa
pop
call
cltd
fcomi
cwtl
outsl
popl
mov
push
je
mov
shr
test
add
push
mov
sbb
mov
and
js
sbbl
xchg
aad
jle
cli
cmp
pop
fdivl
pop
ret
and
ljmp
fsubrs
test
mov
sub
loopne
cmpsb
inc
xor
push
mov
shr
jle
mov
stos
pop
xor
mov
cld
and
xor
enter
mov
or
ds
mov
xchg
fsts
pusha
adc
rcll
jecxz
jns
lahf
jnp
mov
outsl
and
mov
adcl
lahf
or
push
mov
cmp
mov
jecxz
cmp
inc
je
je
insb
fdivrl
xchg
loop
sbb
push
fisubl
into
mov
dec
jl
sub
inc
xlat
sub
mov
out
les
pop
cmp
sbb
cmpl
push
add
sbb
cmc
adc
or
scas
mov
push
jl
jmp
cmp
inc
faddl
sub
je
pop
outsl
xchg
mov
mov
mov
xchg
cmp
and
jae
mov
cmp
mov
push
add
aad
add
iret
aam
imul
dec
jae
es
out
pop
jl
loopne
xchg
mov
stos
ret
hlt
fistl
rcll
dec
xchg
scas
icebp
aad
arpl
mov
cmp
xor
ficompl
mov
xchg
ss
fldcw
mov
jle
jmp
das
test
movsl
xchg
push
cwtl
pop
jmp
xorb
pop
or
push
aad
mov
js
jb
sub
in
mov
out
inc
inc
fs
cmpsb
push
xor
enter
bsr
int
int
lea
and
test
popa
subl
sbb
inc
ret
and
mov
lods
mov
popa
insl
inc
mov
cmp
adc
mov
or
dec
subl
jl
push
mov
xor
mov
add
mov
add
les
les
data16
jle
adcl
pusha
push
clc
push
push
push
mov
lea
fnsave
mov
cli
push
jo
in
and
into
jp
nop
scas
push
and
arpl
test
lcall
xor
pusha
add
jl
lret
inc
add
test
fdivl
mov
loop
mov
xor
mov
movsb
mov
out
mov
jo
jbe
call
bound
stc
add
jbe
cltd
mov
inc
inc
cltd
mov
mov
into
or
push
repnz
adc
adc
sbb
shll
cli
stos
sub
test
daa
lret
out
xor
xlat
pop
or
lcall
sub
lcall
nop
fwait
test
test
inc
movl
jmp
sbb
jle,pn
lods
imul
and
inc
push
cmp
scas
jnp
jmp
pop
les
or
add
adc
ret
mov
addb
imul
iret
add
or
mov
adc
test
xorb
insl
jl
push
sbb
push
test
rorl
mov
movsl
enter
jmp
test
lahf
inc
jecxz
pop
cs
test
out
xchg
out
xor
fisubrs
jb
jbe
fcmovnu
fisubl
imul
and
pop
test
lcall
into
call
mov
sub
int
mov
cmp
std
popa
idivl
cld
cmpsb
ja
cmp
out
inc
fdivr
cli
loop
mulb
fbld
shlb
inc
mov
clc
mov
cld
add
mov
fwait
nop
jp
loop
retw
add
adc
push
mov
mov
jnp
ret
jne
dec
lods
inc
mov
je
cmp
jg
out
mov
xor
add
jl
add
cmp
xor
cld
mov
jp
int
jmp
cmp
in
lock
and
pop
test
mov
mov
jo
cmovns
mov
loope
mov
std
pop
mov
js
inc
sub
push
push
sbb
sbb
pop
insb
idivb
daa
add
sub
popf
stos
pop
call
push
lea
adc
lock
hlt
add
loope
cmp
mov
add
cmp
lea
push
loope
inc
sarb
lods
fistpll
data16
or
jmp
aaa
xor
jnp
dec
or
adc
icebp
or
fnsave
jmp
adc
xor
test
clc
movsl
enter
addl
in
retw
loopne
jo
push
sbb
or
push
loop
insb
cli
push
sbb
mov
data16
mov
std
fs
lret
add
adc
cwtl
pop
sub
scas
mov
bound
clc
fdivrl
call
in
sub
ret
adc
out
inc
mov
push
sbb
mov
clc
shll
fidivrs
pop
adc
call
cmc
mov
adc
sbb
daa
adc
add
cmp
dec
cld
add
insb
pushf
test
lock
sbb
shrb
cmp
sbb
xchg
call
sbb
je
jle
btc
or
stos
test
add
call
inc
stc
aam
mov
pop
jmp
xor
add
xchg
jp
jbe
gs
xchg
cmpsl
dec
xchg
and
sbb
rcrb
lcall
pop
fdivs
pop
mov
insb
xchg
into
or
das
movsl
test
add
xchg
or
lds
ljmp
cmc
push
pop
pop
jmp
add
dec
mov
inc
insl
js
push
add
pop
ljmp
imul
and
movsb
movsl
jcxz
lods
in
cmp
cli
sbb
into
pusha
push
out
push
aaa
pop
shlb
outsb
inc
fisttps
mov
pushf
push
arpl
pop
js
pop
xlat
inc
in
stos
xchg
and
popa
call
orb
ret
xor
pop
fsubs
cmp
mov
mov
mov
adc
cmc
jl
sbb
addr16
into
loope
cli
fdivs
pop
addb
xchg
adc
into
out
sbb
jecxz
inc
bound
lods
push
outsb
mov
out
jbe
mov
shll
stos
clc
ds
xchg
testl
ficoml
subb
jge
jbe
jbe
loope
dec
mov
add
sub
adc
and
mul
icebp
stos
ret
cld
repnz
dec
mov
mov
ds
out
and
lds
insb
xlat
sub
movsl
mov
loopne
xlat
mov
pop
mov
mov
mov
icebp
sub
out
aad
pop
jne
popa
test
ds
icebp
jecxz
sub
test
xor
mov
dec
mov
pushf
jno
imul
and
pop
js
dec
sarb
mov
sub
sti
inc
pusha
or
ficompl
pusha
faddl
mov
sbb
xchg
xlat
repnz
xchg
test
inc
xchg
cmp
flds
inc
pop
mov
lods
mov
inc
add
in
stos
ds
inc
aas
clc
push
test
mov
xor
cvtpi2ps
ds
dec
fnsave
or
shrb
cmp
pop
dec
add
es
adc
test
icebp
mov
mov
pop
imul
int
je
clc
pop
stos
lahf
das
stc
xor
roll
push
adcl
aad
imul
lods
adc
loopne
fnsave
adc
daa
outsl
adc
mov
addl
mov
adc
lock
lock
stos
xor
jl
pop
push
push
shl
clc
sub
gs
test
icebp
xor
fldcw
cmp
cmpsb
cmpl
mov
push
cmp
cmpsl
fwait
jb
in
cmp
push
scas
xchg
and
mov
in
inc
push
addr16
sub
imul
lahf
ret
dec
ljmp
add
pusha
shl
xlat
dec
ret
mov
fwait
je
std
jmp
dec
es
mov
or
adcb
inc
fiadds
sbb
pop
fs
outsb
jecxz
pushf
cs
add
inc
dec
decl
cmp
jo
cwtl
pop
ljmp
fs
pop
dec
jmp
or
lods
test
stos
ss
add
pushf
out
jmp
aaa
fadd
and
call
testb
out
ficompl
loope
clc
loopne
xchg
mov
out
incb
leave
mov
cld
push
das
push
je
cli
mov
sbb
and
xchg
je
dec
jl
sub
or
mov
cmp
inc
movsl
pop
rolb
and
mov
je
nop
imul
test
shlb
ror
inc
dec
adc
ret
cmp
cmp
in
and
fnsave
mov
sub
and
scas
cltd
repnz
test
dec
jo
dec
lock
push
sbb
mov
xabort
outsl
aam
jg
adc
add
fsubr
ds
fldl
push
jnp
imul
addb
adc
loop
pop
cmpsl
push
adcb
aad
mov
fcmovnbe
adc
imul
sub
or
add
test
icebp
scas
out
ret
mov
aaa
pop
inc
sbb
jge
in
add
push
ja
lret
sub
daa
jo
sbb
lods
sbb
mov
out
jae
andb
scas
jmp
jno
mov
fdivl
cmpsl
dec
call
xor
loope
xchg
or
cmp
xchg
and
sbb
xchg
ret
mov
adc
pop
mov
mov
pop
inc
shrb
jne
jp
dec
loope
inc
cmpsl
sbb
mov
xor
cli
cmp
jl
loope
call
or
dec
xchg
add
cmc
cmpsb
cmp
jmp
lock
xor
int
ljmp
imul
loop
and
jmp
and
rolb
xchg
jo
sbb
xchg
bound
subl
jmp
hlt
loopne
scas
adc
inc
pop
xor
push
inc
aam
sbb
lret
jnp
inc
mov
xor
add
out
popa
cmpsl
push
mov
int
inc
leave
and
adc
cmp
out
gs
inc
roll
lds
dec
rcrl
cmp
adc
sarb
insb
dec
jecxz
shlb
bound
pop
mov
xchg
ret
call
hlt
jne
cmovle
adc
popa
into
out
dec
mov
add
jno
outsb
jne
push
mov
mov
movl
bound
add
clc
loopne
icebp
sub
clc
das
aaa
cmp
or
xor
adc
dec
imul
xchg
dec
stos
stos
inc
das
je
lds
inc
aam
stos
mov
mov
popa
lock
stos
aaa
dec
jl
mov
lea
outsl
cmp
jle
rol
popf
insb
adc
mov
arpl
popa
mov
push
clc
dec
jns
inc
fisttpll
lods
or
popf
add
rcr
lods
lock
int
nop
push
push
sbb
insl
shrb
xor
mov
sbb
roll
jbe
scas
mov
mov
mov
or
pop
inc
and
clc
pop
inc
mov
dec
cli
fbld
xlat
decl
inc
ret
push
or
pop
xchg
dec
jo
rol
push
daa
lcall
sub
ja
xchg
add
cmc
ret
push
int
add
ret
lods
imul
pop
jge
inc
and
xor
push
les
ds
roll
les
nop
mov
fwait
in
repnz
insb
outsl
mov
int
sbb
xchg
outsb
xor
or
lods
fsubrl
inc
sub
call
cmp
sub
call
pop
mov
rcll
aas
pop
lock
xadd
rorb
ljmp
or
mov
fsubrs
fs
test
mov
shll
jns
rcl
ret
jae
or
aad
inc
mov
minps
xchg
push
ret
stos
out
sub
xchg
fwait
lods
xlat
inc
stc
xchg
and
or
jge
and
jge
movb
stc
sbb
cmp
pop
sti
mov
test
icebp
pop
xchg
sub
xor
jnp
leave
mov
xchg
outsl
aaa
or
inc
and
std
mov
cmpsl
mov
lock
pop
fwait
sub
mov
aas
adc
in
insb
arpl
nop
stos
lds
call
dec
aam
rcr
adc
xchg
in
jmp
outsb
mov
pop
mov
int3
lret
push
xchg
testl
sub
decl
sub
cmp
fs
jl
adc
ror
ss
stc
enter
insb
pop
stos
fstl
cmpsb
iret
adcb
rcl
negl
iret
xor
fistpll
stos
fdivp
bound
fs
ret
call
mulb
or
dec
xchg
test
and
dec
and
mov
cmp
push
and
ss
into
ljmp
cmpsb
adcl
das
outsb
out
pusha
jns
push
insb
jecxz
das
cli
push
int3
mov
out
sbb
pop
in
dec
rcrl
repnz
and
cmp
push
sub
mov
js
in
dec
push
pop
inc
xor
jg
outsb
lahf
push
rcl
aaa
lock
mov
mov
mov
jl
adc
or
bound
sysexit
cli
cmp
sub
clc
scas
mov
push
mov
mov
jl
insl
push
fs
lock
xchg
xor
cld
push
daa
mov
nop
jns
int3
bnd
adc
push
movsl
push
insb
xlat
push
es
cmc
lods
dec
daa
adc
cmp
inc
and
xor
push
movsl
inc
pop
loop
push
cli
mov
mov
adc
pushf
into
nop
adc
test
movsl
sti
or
pop
and
rclb
mov
jmp
sahf
js
insl
pop
jbe
pop
test
fnstenv
fnstenv
jmp
fsts
add
push
pop
push
lods
js
xor
outsb
cmp
insb
xchg
nop
and
dec
push
fildl
shrb
adc
ja
insl
sub
xchg
mov
insb
pop
stc
push
jmp
and
mov
loopne
rdmsr
fnstenv
clc
add
jecxz
mov
in
shl
sub
sub
scas
jo
jmp
mov
sub
scas
xchg
test
scas
test
push
int3
subl
fcmovne
loopne
pmulhuw
sbb
hlt
loopne
mov
cmp
mov
ret
fsub
xchg
arpl
jge
jle
nop
mov
in
jne
xor
std
sub
loope
ss
and
pushf
icebp
cwtl
popf
mov
sub
test
daa
pop
cmp
scas
jle
inc
cmpsb
xor
scas
in
xlat
add
ss
pop
xchg
or
add
repnz
dec
add
ljmp
inc
xor
inc
or
rcrb
sbb
test
push
cmp
add
cs
pop
mov
cmp
orb
jmp
test
int3
push
xor
mov
pop
aam
mov
pop
add
in
in
push
dec
add
push
stos
push
mov
sbb
add
fistl
dec
mov
mov
sub
and
sub
add
mov
clc
sbb
jle
xor
jno
sub
je
out
fidivrs
jbe
add
notl
addl
addr16
outsl
shrl
inc
imul
out
lcall
mov
mov
into
std
insb
and
xlat
sbbl
inc
adc
mov
pop
lock
ds
data16
clc
test
hlt
mov
adc
sahf
jmp
pop
inc
call
in
addr16
xchg
std
and
aam
lock
clc
push
mov
jg
ja
push
add
das
outsb
jno
and
test
movsb
lds
add
mov
xor
mov
cmp
push
scas
cmc
jge
lock
lds
xchg
cmp
aas
mov
ljmp
jbe
push
nop
mov
fadd
pop
out
lods
inc
jno
adc
rep
add
mov
xchg
repz
and
aas
push
push
cmp
jl
roll
cmc
push
mov
jmp
leave
mov
adc
lahf
dec
popf
sbb
xchg
pushf
pop
mov
aaa
dec
nop
jl
mov
cli
mov
cmp
pusha
xchg
inc
jnp
movsb
in
mov
in
adc
jge
fisubs
addr16
jns
sub
cmc
loopne
cmp
jl
aam
jne
xor
subb
mov
repnz
add
adc
pushf
idivl
inc
sarb
adcb
lcall
dec
adc
fsts
mov
or
movsb
dec
or
insb
or
es
divl
icebp
jp
pop
push
pusha
jp
test
test
cmp
cmc
mov
sbb
mov
filds
inc
popa
xchg
and
rcl
ret
adcl
xchg
fisubrl
xor
push
add
rcll
push
adcl
aad
add
mov
xchg
mov
lods
adc
add
cltd
enter
and
cmp
mov
test
and
fmull
inc
sahf
repnz
ds
pusha
dec
adc
xlat
daa
js
adc
jmp
add
mov
fdivrs
mov
jp
fcom
ret
in
add
sub
mov
pusha
pop
and
aas
loop
mov
cld
cmc
js
xorl
dec
sub
loope
fistl
into
icebp
sbb
lcall
pop
inc
mov
mov
mov
loop
rcrb
mov
mov
imul
imul
pop
iret
sbb
jnp
outsl
inc
add
mov
or
push
not
imul
mov
push
fiadds
mov
insb
cmc
arpl
ja
sub
push
clc
xor
enter
cmp
inc
je
dec
lahf
mov
imul
lock
adc
sarl
dec
mov
push
inc
sbb
adc
mov
ja
xchg
cmpsb
loop
xchg
sub
lret
add
inc
and
adc
mov
mov
jb
jecxz
ret
aad
test
mov
es
or
std
bound
lcall
lahf
enter
mov
lahf
pop
dec
test
pop
loop
ss
dec
jnp
stos
pop
sub
std
mov
cld
loop
clc
popf
rcll
mov
outsl
pusha
aas
testb
in
loop
scas
sub
xor
or
mov
cltd
sub
lea
or
xchg
jp
enter
pop
popf
mov
mov
call
xchg
adc
jbe
and
int
lds
dec
or
test
insb
mov
jo
push
xchg
sarb
dec
dec
stc
dec
mov
pop
repnz
in
arpl
pop
fadds
cs
cmp
or
adcl
aam
lret
shrb
dec
es
sbb
cmp
push
pop
jle
enter
ret
js
stos
sbb
push
das
jp
pop
xor
movsl
pop
daa
mov
lock
pushf
aad
ss
fucomp
mov
add
mov
or
xchg
lods
int
push
in
push
inc
mov
pop
aaa
clc
aad
jno
hlt
out
jnp
cmp
ljmp
mov
jmp
push
jnp
addb
push
in
mov
jnp
xchg
out
push
push
add
pusha
xor
or
jp
adc
mov
sub
cmp
cmc
leave
xchg
in
push
jae
leave
fcomi
mov
mov
mov
test
fsubp
sub
push
xor
jo
in
outsb
adc
jge
cmp
push
sbb
adc
ret
fistl
inc
out
bound
int3
lahf
popf
loope
in
dec
push
pop
pop
cmp
inc
aam
add
out
pushl
mov
cmp
mov
mov
jmp
ljmp
cltd
nop
mov
inc
in
jbe
mov
fdivrl
and
mov
push
sub
and
scas
push
adc
adcl
scas
lods
nop
mov
jp
push
inc
cmp
jg
ljmp
jle
test
aaa
mov
test
stos
stos
je
out
mov
les
cmp
scas
dec
pop
outsl
or
xchg
cli
pop
jecxz
popa
in
jg
lds
aaa
sbb
int
push
jp
sub
stos
lahf
jle
mov
dec
push
dec
fistps
aas
sbb
adc
into
and
inc
or
addr16
int
testl
push
sahf
movsb
inc
iret
je
add
mov
push
dec
dec
in
jmp
push
fs
inc
movl
sub
ds
les
cmp
inc
inc
test
clc
aaa
insl
sub
les
xlat
and
int
pusha
adc
clc
ss
sbb
scas
lret
cmp
rolb
jge
cmp
inc
jne
movl
push
mov
xor
jnp
aas
cmp
add
bound
jp
mov
test
sub
popf
ficomps
xor
ss
mov
outsl
cmpsl
fisubrs
sti
mov
loope
and
cmp
fidivl
xor
sarb
mov
pop
lods
mov
fsubrs
pop
std
pushf
cmpsl
xchg
mov
inc
lods
in
outsl
leave
push
or
ss
xor
push
insb
jge
push
daa
mov
movl
ret
cwtl
addr16
ja
adc
test
jl
lret
movd
pushf
cmp
xchg
cmp
adc
sub
fidivrl
popa
clc
imulb
lahf
sar
popa
pop
xchg
dec
sarb
add
cmp
sub
xchg
outsb
rorl
fisttpl
and
and
fistpl
add
jo
andl
cs
mov
fcoms
test
in
jl
gs
pop
outsb
dec
xor
movsb
push
pop
mov
jle
sahf
icebp
lock
and
aam
xchg
xchg
add
cmc
fcmovnbe
jmp
in
mov
inc
cmp
mov
inc
xchg
outsl
inc
clc
mov
or
mov
aam
rorb
cmpsb
jo
push
aad
aaa
cmp
fadds
or
cmpsl
pop
daa
les
xlat
inc
cs
sub
ret
pop
cmp
inc
inc
iret
in
jo
mov
xor
cmc
fsubr
rorb
out
jl
lea
fiaddl
mov
cmpsl
test
cli
mov
mov
lahf
jmp
pop
inc
lock
loopne
lret
ds
test
lcall
jne
pop
into
mov
cmpsl
mov
jl
dec
in
arpl
push
in
ss
xlat
xchg
xor
fwait
xchg
dec
or
nop
ret
stos
aad
jae
add
gs
xor
addr16
dec
jl
jnp
jbe
es
outsl
mov
cmp
jle
and
lret
sarb
test
ret
sub
pop
xor
test
adc
fsubrs
mov
je
cwtl
adc
or
fistpl
mov
xchg
cwtl
and
or
shrd
mov
dec
and
bound
femms
inc
sub
push
addr16
std
inc
cltd
in
int3
sbbb
jecxz
adc
pop
pop
pop
or
sbbl
adc
loop
pop
aaa
dec
xchg
fimull
popf
out
clc
es
or
arpl
dec
or
movl
push
loop
fdivrl
test
pop
add
add
call
jecxz
bound
sub
shl
mov
push
xor
aam
out
call
insl
push
jo
in
fwait
std
or
sbb
push
hlt
dec
push
jmp
dec
outsl
jbe
cwtl
jne
out
or
mov
xchg
and
je
xchg
jg
inc
push
outsl
sub
mov
imul
mov
ds
arpl
daa
xor
inc
pop
xchg
sub
in
jmp
les
sbb
inc
int
rcr
arpl
xchg
sbb
mov
mov
inc
jo
mov
mov
jp
jns
sahf
cmp
lock
repnz
xchg
aam
imul
lret
ss
arpl
cmp
loop
jne
dec
or
mov
dec
mov
ret
fadds
pop
xor
or
stc
fcmovb
lods
and
lds
sbb
push
lds
dec
jno
rorb
call
addb
cmp
shl
rolb
int
mov
jmp
jge
outsl
push
bound
mov
cmc
jnp
lock
test
sbb
in
jb
shlb
sbb
bound
subl
mov
mov
mov
gs
cld
ret
mov
mov
or
push
fisttpl
lods
inc
jecxz
xor
test
jecxz
xchg
iret
push
jae
loopne
mov
adc
pop
pusha
inc
subl
jle
dec
cmp
inc
lods
subb
call
adc
adc
cmpsb
dec
pop
cmp
cmp
jl
push
jl
ret
pop
movl
mov
mov
xchg
popa
adc
mov
xor
add
cmc
inc
jmp
jmp
shrb
fxam
stos
lret
das
jle
jae
mov
cmpsb
adc
lret
daa
add
and
daa
ret
inc
icebp
into
js
add
jmp
subb
jle
nop
lea
or
push
stos
mov
pop
dec
clc
ret
and
push
je
xchg
push
imul
mov
in
loop
pop
fcoms
inc
jmp
faddl
cld
mov
or
call
dec
mov
nop
cmp
call
aas
call
ss
push
loop
ficoml
loopne
or
loopne
out
es
dec
shll
orl
aas
fwait
sub
lods
loope
roll
cmp
or
lret
and
and
lds
clc
xchg
xchg
test
popa
call
rol
fisubl
dec
int3
andb
test
fdivs
pusha
mov
hlt
sbb
shll
das
xchg
mov
shlb
jns
inc
nop
sti
loop
inc
fwait
jmp
clc
andb
imul
push
in
push
jl
and
xchg
push
pop
jmp
jmp
jp
push
jnp
sarl
xchg
loop
and
mov
aaa
movsl
in
aam
roll
scas
pop
fs
inc
add
xchg
fisubrl
inc
imul
mov
rsm
ljmp
dec
mov
pop
outsb
ss
push
les
ljmp
loope
fsubrp
test
push
dec
push
call
jl
inc
dec
add
mov
inc
jb
cmp
mov
enter
mov
pop
call
aad
jle
mov
scas
mov
imul
adc
movsbl
mov
or
fisubs
mov
pop
pop
push
adcl
in
fdivrs
mov
xchg
xchg
aaa
es
mov
push
mov
addl
push
dec
dec
xchg
sbb
cmc
mov
ret
jecxz
push
incb
pop
das
roll
pop
fbstp
sahf
shlb
jecxz
ret
aas
pop
or
add
or
clc
and
cmpsb
movsb
pusha
dec
lds
mov
fadd
mov
std
cmp
pop
lock
out
push
nop
shll
and
out
outsl
aam
push
imul
inc
sub
fadds
inc
loopne
cmp
mov
mov
in
cmpsb
insb
and
ds
test
fistl
mov
pop
cmpsb
and
adc
xor
jmp
je
cmp
jl
mov
call
mov
call
mov
sub
sbb
sbb
mov
cld
push
bound
fsubl
hlt
fdivl
mov
xorl
aas
add
mov
test
pop
sub
lds
stos
jb
adc
mov
pop
cs
scas
xchg
cltd
jge
stos
mov
cmp
mov
js
shrl
push
cmp
push
push
lds
std
adc
ljmp
cld
sub
cltd
loop
daa
push
iretw
gs
fsubrl
leave
hlt
mov
adc
clc
or
xor
add
xor
rcrl
pop
icebp
shrl
xchg
dec
adc
sub
add
mov
and
test
cmpb
cmp
enter
mov
sub
mov
shrb
ret
xorl
rcrb
and
push
pop
dec
insb
mov
xchg
push
test
mov
or
sbb
pop
outsl
push
rclb
dec
mov
js
jno
cmp
sub
adc
pop
aaa
cld
pop
outsl
adc
out
fistpl
popa
incb
das
sub
lods
pop
pop
lea
scas
cmp
into
mov
add
jbe
add
fldenv
je
out
icebp
in
pop
inc
in
pop
pop
sub
fldt
dec
je
mov
jle
subl
jbe
fucomip
sarb
inc
loopne
or
cwtl
fists
std
xor
aad
mov
xchg
add
rorb
add
xchg
pusha
and
jge
in
xchg
mov
loop
mov
int3
mulb
mov
cli
add
jno
cs
push
pop
pop
dec
xor
iret
roll
mov
cmp
fnstcw
je
push
pop
mov
mov
dec
sbb
icebp
pop
fdivrp
mov
arpl
pop
aam
jge,pt
add
orb
cmp
mov
push
jo
pop
psubd
movsl
mov
mov
mov
loopne
adc
add
sub
jb,pt
pop
xlat
setle
mov
cli
adc
movb
xchg
mov
sti
test
pusha
or
call
add
int
sbb
jg
fisubl
in
ljmp
push
in
cmpsl
mov
add
cli
test
sarl
mov
js
jns
add
adc
lods
pop
pop
sub
insl
call
clc
mov
ljmp
lcall
out
out
and
lahf
aas
xor
xlat
mov
js
into
push
dec
mov
clc
push
push
xor
inc
mov
nop
cs
movsb
adc
mov
in
fstpl
or
cltd
xchg
jp
or
push
mov
test
xchg
clc
cmc
xchg
add
sub
fwait
inc
fisttpl
mov
mov
push
psrad
testl
lods
ljmp
jb
push
mov
ja
sbb
mov
sub
mov
outsb
inc
add
ret
push
push
stos
stos
pop
insb
fcoms
mov
pop
xchg
xor
add
sti
inc
sub
stos
movsl
arpl
jl
mov
jge
add
xchg
and
push
rclb
nop
das
movsb
adc
xchg
fistl
xchg
dec
ss
popf
and
sub
fstl
add
seta
dec
sub
mov
cltd
xchg
inc
loop
fisttpl
cmp
xor
fstl
outsb
jl
jp
cli
adc
lock
adc
mov
and
dec
pop
mov
push
sbb
test
cltd
movsl
lret
outsb
jbe
lret
and
xchg
adc
ret
push
les
sti
or
sbb
test
call
pop
sub
push
int3
dec
sbb
popa
andl
inc
aad
ja
xor
mov
inc
xchg
cmp
mov
int
sahf
imul
arpl
aad
push
das
repz
cmpsl
test
loopne
push
div
fmuls
mov
jo
add
jl
cmp
addl
ret
ss
pop
mov
sbb
xchg
mov
scas
adc
sarl
int3
mov
mov
stos
test
jmp
lret
xchg
ds
cmp
mov
xchg
pop
rolb
scas
out
add
aam
loopne
roll
adc
adc
fdivs
or
jg
out
jmp
sarb
mov
arpl
fstps
shrl
xor
and
into
and
push
xlat
xor
aas
push
fwait
inc
scas
ds
add
adcb
pop
jp
xchg
push
pop
mov
mov
dec
xchg
test
test
pmuludq
jg
loop
jge
mov
out
jp
out
fs
test
loopne
ljmp
ja
jae
or
pop
cwtl
ljmp
subb
ret
fwait
xchg
sbb
xor
into
jnp
mov
mov
jg
cli
fdivs
ja
out
ja
push
stos
cld
mov
inc
inc
or
mov
or
imul
rorb
je
jnp
lock
mov
aam
mov
outsb
shr
lcall
and
fldt
cs
es
or
shlb
adc
movsl
adc
into
cltd
or
aam
loope
int
xchg
mov
pop
and
cwtl
movd
hlt
adc
leave
sbbb
scas
stc
test
frstor
ficoml
add
and
ret
or
dec
not
fcoml
call
lahf
xor
imul
lea
inc
add
and
inc
in
in
lds
sub
cmp
jo
divl
sbb
dec
in
jmp
mov
sti
cmp
sub
lods
jnp
call
arpl
xchg
lcall
int3
jo
inc
adc
and
jbe
mov
adc
in
fwait
mov
inc
or
xchg
daa
add
jne
hlt
lcall
rorl
push
and
std
mov
push
sub
mov
enter
cmp
xchg
sbb
fsubrl
xchg
es
xor
mov
lret
pop
lock
push
jle
pop
cs
or
lcall
xchg
ljmp
push
and
imull
sub
int
add
sbb
dec
cmp
outsl
loop
mov
push
inc
dec
xchg
dec
sub
fsubl
shrb
bound
hlt
dec
ss
pop
inc
inc
pop
aas
les
into
sub
lods
lret
inc
aaa
push
xor
fnsave
fstpt
dec
jae
shlb
jecxz
inc
nop
xchg
movsb
jmp
rcl
sub
loopne
xor
xor
mov
pop
fnstcw
repnz
jl
and
fisubrs
pop
xlat
mov
cmovno
in
inc
mov
fdivrl
cmpsb
cmpsl
xchg
fnstsw
mov
push
cs
sub
aad
mov
cmp
dec
add
lea
mov
cli
fidivs
adc
sbb
xchg
je
call
sbb
adc
les
popa
or
mov
mov
ret
loop
dec
es
aam
cmp
xor
rcll
xchg
shll
mov
mov
push
mov
cmp
test
cmp
ja
insb
cmp
sub
push
mov
cs
sbb
mov
jno
inc
inc
add
mov
xor
sbb
imul
add
aad
inc
jb
iret
iret
in
add
dec
montmul
cmpsb
orb
shlb
ret
test
jge
mov
adc
add
fildll
jo,pt
cmc
aad
push
inc
mov
or
fbstp
repz
out
dec
sbb
dec
cmpsl
pop
aam
and
insb
jae
std
test
jae
dec
add
xchg
fs
jl
aad
bound
fwait
clc
cmpsb
mov
add
xor
outsb
dec
sbb
xor
cmp
sbb
mov
call
scas
loopne
push
fsubrs
lods
inc
jnp
pushf
pop
mov
dec
je
popa
push
mov
scas
jg
inc
cmp
ja
dec
adc
sub
dec
lock
mov
jbe
out
pop
xor
aad
testb
rol
or
movsbl
fcoms
jnp
xchg
mov
aas
mov
mov
dec
mov
cmp
daa
and
mov
mov
lret
clc
js
jle
out
xchg
xchg
xchg
outsl
cld
movsl
sbb
mov
jb
mov
lock
cwtl
add
sub
pop
inc
sbb
push
aam
sbb
jnp
add
cmp
pop
push
daa
daa
sbbl
sub
sub
mov
pushw
cmp
mov
dec
mov
xor
mov
xor
lahf
sbb
adc
sbb
aaa
push
lahf
mov
jp
xchg
lock
test
inc
lds
adc
std
xchg
pop
mov
into
addr16
push
mov
lret
xchg
cmc
cmp
or
sub
mov
inc
pop
pop
mov
mov
and
outsl
sti
inc
mov
sub
ret
incb
sysexit
adc
mov
insb
into
mov
add
sub
pop
adc
pop
xlat
mov
mov
sub
xchg
data16
pop
clc
mov
in
in
mov
cwtl
movsb
pop
adcb
push
mov
xchg
cmpsb
test
mov
fcmovnbe
outsl
mov
jne
cli
lods
lods
jge
les
jnp
icebp
or
std
pop
lcall
cmc
push
inc
imul
mov
cmp
xchg
insb
sub
movsb
dec
orb
mov
push
sti
in
mov
mov
ss
fimuls
mov
inc
pop
lret
push
daa
xchg
les
aas
test
fsubrs
jmp
cmc
js
mov
lret
insl
xor
in
cmp
xchg
out
int
scas
mov
mov
das
adc
pop
add
mov
rcl
push
pusha
stos
pop
add
pop
ds
imul
sbb
xchg
mov
xchg
or
sbb
mov
cmp
pop
sbb
sbb
xchg
scas
add
dec
fbld
jb
outsl
pop
pcmpeqd
xor
sub
jo
pushw
call
inc
inc
dec
pop
mov
xor
int
jo
rol
les
add
subb
stos
mov
lahf
dec
stos
lret
add
adc
dec
xchg
mov
and
ljmp
clc
jmp
adc
jle
je
int
subl
pop
pop
sbb
inc
sub
movaps
scas
dec
cmp
mov
xor
cmpsb
mov
jp
bswap
in
rcr
out
iret
fmul
xor
inc
hlt
sbbl
mov
fldt
cwtl
outsl
dec
std
xlat
fucomi
or
loopne
ja
adc
das
mov
cmpsb
fildl
pop
xchg
sarb
aam
jb
mov
and
lods
adc
pop
lods
testb
sbb
and
add
inc
and
into
icebp
push
cmp
mov
sbb
xchg
inc
sahf
adc
lock
pop
jo
fldl2e
adcl
test
push
mov
fwait
xor
inc
push
shl
movl
pusha
repnz
pop
jecxz
sarb
dec
rorb
loopne
cs
out
adc
sub
and
aam
icebp
mov
ljmp
shlb
sbb
repz
data16
cld
sub
mov
icebp
lret
adc
aad
clc
lea
push
xchg
lahf
scas
jmp
es
sahf
mov
mov
jecxz
sahf
inc
mov
xlat
shrl
cmp
pop
rcrb
xchg
decb
mov
adc
or
mov
cmp
adc
sbb
insb
aad
sbb
fnstsw
push
or
xlat
add
add
insb
jl
inc
pop
pusha
inc
sbb
ds
adc
jb
dec
dec
movsl
mov
data16
loopne
cmp
cltd
adc
push
lret
rolb
dec
andl
testl
int3
enter
adc
pop
mov
mov
cmp
call
rcr
jg
pop
repz
push
or
daa
xor
push
xchg
loop
pop
cmpb
fwait
test
jo
sbb
add
addr16
nop
mov
outsb
testl
jnp
cs
lds
clc
sub
pop
add
mov
jge
sub
mov
insb
loop
mov
movsb
lea
dec
out
xchg
push
mov
movsl
adc
jo
jnp
jne
cltd
fs
mov
xlat
aas
ret
cmp
aaa
mov
push
pmaxub
mov
xor
add
popa
push
pop
das
idiv
sub
int3
mov
daa
movsl
cmpsl
cmpsb
icebp
inc
cmp
outsl
pop
pop
lahf
and
mov
xor
push
fsubr
test
lcall
cld
jmp
xchg
xchg
cwtl
push
lea
outsb
in
jae
bound
or
fninit
sarl
lea
aas
pop
fisubrl
test
jl
cs
mov
pusha
fs
cltd
je
fcomp
cmc
adc
int
scas
lret
mov
push
scas
jmp
cmpsl
sbb
pop
pop
das
adc
lcall
and
test
add
mov
jne
enter
shlb
aam
xor
mov
das
jbe
fiaddl
fidivl
xor
lea
jl
mov
jmp
or
aas
cmpsb
and
cmp
arpl
mov
hlt
pop
ljmp
es
mov
mov
jo
ret
push
rorl
loope
jo
cli
or
pop
jg
push
mov
or
jge
nop
add
cld
es
mov
mov
add
mov
mov
out
subl
add
xchg
sbb
inc
cmp
push
mov
or
outsl
sbb
xchg
fnstcw
xor
and
jg
ja
inc
aaa
lea
cmpsl
or
cmp
icebp
je
js
lock
sahf
rcl
add
sahf
fidivrs
loope
inc
or
mov
fwait
and
sbb
lock
xchg
lret
gs
arpl
mov
pop
aaa
lea
iret
cli
jge
stos
mov
and
jle
jno
adc
ds
shrl
push
repnz
cmc
pop
mov
inc
xor
out
leave
popf
movsb
outsl
sbb
stc
cli
lods
ret
lret
jmp
icebp
je
cwtl
push
fucomp
add
fnstsw
cmp
in
inc
and
inc
cwtl
cmp
mov
sbb
outsb
mov
jecxz
cmp
ficoml
or
mov
dec
insb
stc
dec
insb
adc
movl
push
aas
test
movsl
leave
cltd
pop
mov
icebp
out
ljmp
scas
arpl
dec
push
je
fnstsw
cmpsb
xchg
mov
xor
movsb
lods
aas
mov
pop
hlt
xchg
or
inc
mov
mov
jp
fisubl
mov
or
loopne
lea
sub
imul
js
addr16
pop
mov
push
push
sti
pop
xchg
dec
push
inc
lret
mov
jge
arpl
and
push
mov
inc
sbb
fcoms
add
jle
loope
or
fdivs
adc
hlt
mov
ret
int3
outsl
cmp
pop
xchg
pop
mov
jg
in
loopne
dec
xor
imul
xchg
pop
mov
in
popa
sbb
repnz
ret
pop
loop
adc
jmp
pop
stos
fmuls
mov
xor
push
cmp
jmp
xchg
fwait
aaa
dec
roll
sub
jecxz
mov
pop
or
dec
sarl
push
inc
pop
ds
cs
jno
imul
jmp
jg
dec
mov
leave
mov
push
push
push
push
sti
adc
sbb
lret
xchg
and
scas
sbb
into
loop
stos
mov
xlat
hlt
jo
xchg
add
iret
push
jg
roll
push
inc
pop
pop
fwait
js
dec
rolb
mov
xchg
daa
fnsave
push
dec
jne
mov
inc
sbb
sub
push
pop
mov
pop
cmpsb
addr16
xor
fidivs
mov
xchg
jp
outsl
mov
jle
outsl
mov
pop
popf
mov
pop
outsb
mov
mov
cmpsl
sub
inc
aam
mov
outsl
dec
mov
and
push
arpl
bswap
out
rcrl
mov
mov
mov
add
ss
and
icebp
popa
mov
fisttpll
in
dec
and
clc
dec
sarl
orb
jp
xor
lahf
cli
rorb
test
lcall
fcomp
mov
and
iret
scas
sahf
ja
inc
stos
dec
pop
das
js
jmp
hlt
adc
ror
push
sarb
ljmp
add
stos
mov
add
push
pop
imul
mov
adc
push
mov
add
jle
test
jl
mov
inc
push
xor
mov
addb
popf
out
arpl
mov
jl
les
push
pop
mov
jnp
ficoml
cmp
imul
mov
aad
mov
pop
lcall
leave
mov
push
push
mov
push
mov
js
icebp
insb
mov
fwait
mov
sbb
dec
ret
mov
and
andl
sbb
addr16
jp
xlat
push
push
pop
fs
scas
jl
push
mov
mov
outsb
mov
pop
xor
or
mov
mov
outsl
cmc
inc
orl
jecxz
dec
mov
lods
mov
xchg
pop
popa
call
cmp
xchg
outsb
pop
pop
cld
and
push
dec
outsl
jo
lea
and
xchg
mov
pop
outsl
cmpsl
push
mov
push
cwtl
roll
hlt
pop
xor
and
hlt
leave
inc
aam
sub
mov
test
push
je
dec
mov
data16
and
test
cmpsl
jo
sub
je
bound
and
dec
clc
or
fsubs
mov
ja
arpl
loope
cmpb
dec
lds
inc
scas
sbb
shrb
add
das
nop
xchg
loope
div
in
push
test
jmp
gs
sbbl
ss
or
fistpll
aas
sub
xlat
je
jl
dec
aaa
pop
pusha
ljmp
insl
adc
lock
jno
jp
sub
arpl
xor
add
cltd
mov
sbb
pop
rcr
dec
pop
xchg
push
mov
jbe
popf
inc
and
mov
roll
jl
and
inc
inc
cld
lret
cmp
aad
push
mov
pop
mov
sbb
inc
aaa
and
arpl
cmp
add
clc
sub
pop
ds
in
ret
sub
call
push
icebp
mov
jecxz
mov
cmpb
hlt
mov
aam
clc
inc
mov
pop
sarb
mov
icebp
cmpl
cmp
cmp
adc
jo
push
sbb
je
add
and
scas
mov
or
nop
ds
pop
clc
shlb
sub
or
sbb
xor
jmp
pop
popl
mov
or
push
in
insl
add
pushf
outsl
lds
insb
cmp
jl
lcall
out
and
bound
mov
das
xchg
or
fdivl
xchg
push
enter
mov
dec
orl
jns
fucomi
hlt
icebp
scas
jbe
mov
push
and
push
xorb
xchg
cmc
lods
aas
addr16
jp
push
inc
mov
sbb
mov
lret
push
xor
pop
mov
loope
ljmp
xor
push
loope
cld
lret
pop
mov
pop
addr16
adc
mov
in
sbb
xor
and
out
adc
int3
cmpsb
jge
xchg
or
mov
cmp
int
je
jl
sbb
xchg
loopne
mov
lea
add
adc
xchg
loop
pushf
and
movsl
bound
fwait
sbb
ds
and
xchg
pushl
inc
addr16
int
mov
daa
hlt
test
pop
xchg
popl
sti
pop
in
mov
adc
mov
mov
fs
xchg
inc
outsl
insb
int
ret
lea
inc
add
dec
iret
rorb
jg
mov
lahf
or
stos
ja
ret
repz
mov
cmp
fmull
repz
and
ficoms
pop
mov
pop
insb
mov
pusha
cld
rcl
mov
inc
inc
rcrb
and
mov
dec
aas
iret
lock
ret
es
push
fadds
fimull
daa
inc
aaa
fldcw
jnp
ret
clc
mov
pop
loopne
inc
sub
adc
lret
fnstsw
xor
ror
fisttpll
fisubrs
in
pop
xor
sub
mov
stos
or
mov
loop
adc
jmp
mov
stos
inc
pop
lret
sbb
in
iret
fsub
mov
call
lahf
xchg
inc
jb
adc
mov
int
and
push
aas
movsl
cmpsb
int3
out
push
andl
xchg
lds
xor
push
ret
leave
pop
fs
outsl
adc
xchg
ret
or
sarb
push
or
jle
xor
or
adc
dec
outsb
insl
push
push
mov
sbb
mov
loopne
and
mov
jno
iret
push
mov
lock
jg
xor
push
dec
fs
push
inc
jmp
sbb
adc
cmp
jl
jge
sub
dec
push
push
lret
shrb
cmp
js
xchg
xchg
add
pop
xorl
mov
sahf
mov
cmpsb
iret
add
dec
lret
jle
rol
loopne
push
push
adc
sbb
into
stos
nop
push
iret
adc
xchg
mov
xor
add
lret
pop
mov
insl
enter
push
sub
dec
lret
fistps
gs
out
pop
lods
in
icebp
adc
adc
pcmpgtd
cwtl
movsb
add
dec
mov
decl
xor
aam
test
into
add
adc
adc
mov
mov
and
into
pop
jge
popf
xorb
aad
push
enter
push
imul
pushf
movsl
add
outsb
fists
add
test
ja
cmc
rorl
out
scas
or
mov
adc
lcall
pop
mov
jo
mov
mov
lods
xchg
call
mov
rolb
pusha
xlat
daa
cmp
xor
mov
xchg
inc
sbbl
in
and
aam
ljmp
pop
aaa
jnp
shll
arpl
addl
aam
xor
dec
fadds
and
dec
push
iret
inc
scas
and
and
cmp
mov
or
pop
pop
adc
aaa
loopne
pop
sub
mov
lahf
loope
outsl
arpl
lock
mov
mov
out
xchg
imul
mov
push
dec
push
or
clc
subb
inc
mov
hlt
mov
roll
sbb
mov
sbb
dec
inc
push
cmpl
dec
and
add
test
gs
push
mov
mov
ja
pop
cmp
test
cs
jo
or
aaa
inc
sub
das
repnz
push
icebp
mov
lock
or
inc
mov
jl
dec
push
push
or
xor
outsl
lods
jecxz
xor
call
mov
pop
push
icebp
sub
jge
xchg
ss
adc
shrl
stos
mov
sbb
push
xor
and
aaa
push
popa
popf
xchg
pop
mov
and
mov
inc
leave
and
inc
daa
out
mov
adc
sbb
sub
xchg
cmp
imul
test
pop
scas
mov
icebp
xor
jge
sbb
mov
xor
xchg
inc
mov
cs
cmp
clc
xor
jb
ja
adc
sbb
mov
mov
jg
dec
loope
jl
push
pop
or
sub
gs
outsb
shll
scas
pusha
mov
in
aaa
xor
or
lods
adc
adc
outsb
xor
sbb
insb
and
out
aas
sbbl
mov
mov
aas
ret
add
xor
pop
insb
dec
inc
jecxz
jge
repz
inc
add
jne
cmc
mov
loope
pop
mov
int
xchg
jmp
dec
mov
pop
pop
xlat
jmp
fdivrl
fldenv
into
jge
mov
inc
mov
popa
jmp
mov
cltd
jmp
adc
setae
xchg
mov
js
add
xchg
or
sbb
scas
mov
daa
cmp
outsb
imul
xchg
cld
orb
add
inc
adc
mov
fsubl
push
jmp
mov
rcr
mov
mov
jo
or
movsl
out
pop
mov
lahf
rclb
cld
les
je
sbb
mov
mov
inc
dec
stos
push
nop
add
add
cli
push
ja
arpl
jb
lods
mov
sub
in
sbb
mov
outsl
movsb
in
add
dec
cmc
jp
mov
mov
roll
inc
fildl
cli
inc
mov
adc
push
pusha
mov
jmp
push
sti
add
push
loope
arpl
xchg
inc
adc
jnp
mov
push
dec
xchg
cmp
ret
pop
pop
push
pop
mov
lret
dec
and
sbb
dec
rcr
sub
sub
fstl
mov
decl
daa
mov
loopne
pop
gs
enter
sarl
pop
add
or
xlat
lds
cmpsl
mov
repnz
mov
xor
cli
mov
push
testl
pop
ds
mov
test
cmpsb
ficompl
ja
mov
aas
mov
clc
ret
push
call
and
movsb
mov
xchg
loop
ljmp
bound
push
push
fwait
pusha
adc
popa
fcomi
adc
test
mov
fstpt
sbb
out
imul
add
push
fcmovu
sarb
outsb
xor
pop
repz
dec
fwait
ds
pop
fists
sub
stc
mov
add
cmp
lahf
mov
jne
scas
mov
stc
ficomps
and
in
inc
idivb
mov
mov
shll
fcom
dec
mov
or
sbb
add
leave
add
lock
out
pushf
lods
xor
mov
rorl
cmp
sbb
outsb
jg
int3
dec
and
cmpsb
outsl
pusha
std
mov
lods
jg
mov
xchg
jmp
and
push
test
jecxz
mov
mov
add
inc
cmpsb
add
add
mov
aad
dec
cmpsl
or
mov
lds
add
pop
add
aaa
les
xor
and
outsb
jae
cmp
pop
dec
subb
cmp
sub
sbbb
iret
sub
inc
jne
loope
mov
in
adc
sub
sbb
sbb
adc
lods
iret
adc
mov
popf
inc
mov
dec
and
out
pop
shrb
and
sub
dec
pop
adc
rol
inc
call
push
lock
inc
test
mov
adc
out
popf
add
sbb
mov
aaa
sti
mov
xchg
jbe
sbb
aam
int3
fst
mov
insb
testl
bound
jb
adc
inc
enter
add
lcall
or
aad
stc
mov
push
xor
jmp
push
pushf
divl
lahf
ss
pop
insl
or
mov
adc
popa
push
and
push
jecxz
push
pop
cmp
fsubrs
into
or
int3
xchg
ds
lock
lea
xor
jl
test
int
loopne
icebp
jne
sahf
sub
adc
mov
iret
hlt
cmp
mov
imul
xchg
shlb
fistpll
inc
mov
push
mov
jg
push
push
vminss
fsts
dec
xchg
cmc
cmpsb
xor
inc
fstps
jo
mov
pop
jns
nop
insb
outsl
mov
mov
popf
lods
imul
jl
in
iret
shl
enter
loop
daa
ss
shl
aaa
and
push
xlat
lret
test
fstl
daa
or
repz
push
call
xor
fstpt
push
and
jp
nop
ss
mov
ret
out
jge
jmp
push
clc
ret
add
and
push
sub
mov
sarb
dec
sub
pop
jle
xchg
jecxz
add
push
std
adc
sbbl
ror
rorb
clc
push
test
int
shlb
pop
pop
mov
fsubl
and
pop
xchg
mov
cmc
in
addb
inc
xchg
js
and
mov
lds
jno
inc
pop
into
xor
rolb
cmp
jmp
sbb
cmpsl
pop
test
jo
lret
aas
jmp
test
mov
cmp
ret
inc
cli
in
pushf
cltd
test
aam
jmp
ret
nop
fcoml
pusha
mov
push
dec
nop
mov
lock
mov
rol
cmpsl
xor
xchg
je
pop
mov
shlb
jno
inc
insl
cmc
add
push
clc
pop
mov
aam
imul
incb
add
sbb
sbbl
push
aas
lods
jo
mov
jmp
mov
sub
mov
push
test
mov
sti
dec
test
inc
lods
js
fdivs
cmp
lret
mov
shrl
loop
lea
adc
xchg
jecxz
int
xchg
xor
push
insb
pop
xchg
pop
loop
sub
leave
add
jecxz
mov
out
pop
inc
push
mov
cmp
mov
shll
ds
xor
mov
inc
pop
sub
add
stc
pop
mov
test
popf
xchg
or
adc
lock
sub
int
xchg
test
incb
cmc
mov
sbb
cmp
add
movsb
pop
addl
roll
add
loop
ficoml
mov
fwait
xchg
cwtl
cs
pop
cmpsl
lods
pop
mov
data16
sub
jmp
lds
jmp
xor
les
mov
xchg
hlt
lods
mov
lods
sub
shr
xchg
bound
out
pop
iret
inc
enter
pextrw
insl
popf
xor
push
fcmovnb
pusha
repnz
call
cld
and
mov
xorl
addr16
dec
pop
cmp
cld
out
mov
cwtl
xchg
and
mov
push
mov
sbb
jl
jg
stos
add
add
dec
rcrb
jo
out
add
inc
mov
mulb
addr16
or
cmp
xlat
jecxz
adc
dec
popa
cmp
je
clc
loope
dec
cld
jo
aam
in
and
lea
int3
mov
jo
fistpl
or
clc
lock
inc
push
cmp
insl
loope
xor
mov
push
sub
adc
add
push
xchg
frstor
adc
ljmp
popa
mov
pop
inc
mov
fldcw
jo
push
inc
add
adc
adc
push
or
testb
sbb
push
shrl
inc
mov
adc
pop
sbb
cli
and
lcall
add
mov
adc
bswap
sub
inc
pop
pop
mov
ss
sbb
mov
pop
inc
push
out
mov
fnsave
cmp
insb
rolb
iret
dec
bound
test
mov
fidivrs
incl
hlt
pop
leave
out
aaa
xor
mov
in
ja
mov
loope
and
mov
jae
dec
dec
mov
loop
mov
xor
pop
pop
push
push
clc
lea
adcl
adc
dec
adcb
stos
mov
xchg
cs
loope
int
jmp
sbb
repz
pop
lahf
imul
repnz
add
sti
and
pop
push
fs
cli
xlat
les
les
data16
in
call
je
fsts
fwait
outsl
inc
fnstcw
push
or
jecxz
jle
cmp
fs
inc
sar
ret
sarl
xchg
cmc
pop
xor
mov
pop
or
js
rsm
cmpl
vmovsd
pop
call
adc
gs
inc
test
outsb
por
loope
pop
inc
aas
rorl
aad
fcomp
jle
and
xchg
inc
adc
repnz
push
pop
bound
daa
int
cmp
jns
insb
xchg
pop
xchg
lods
sbb
push
and
sbb
jmp
pop
std
jne
out
into
cmp
mov
frstor
test
popl
mov
jle
and
sub
fmuls
loope
sbbl
mov
into
sbb
aad
out
and
lret
std
mov
aad
ret
sbb
shlb
sub
ret
add
ss
adc
jae
cmp
icebp
jb
nop
cmp
sbb
cmpsl
aas
bound
into
cwtl
cmc
nop
inc
daa
aas
mov
movsl
sub
pushf
rol
cmovs
ja
aaa
repz
cmpl
test
pop
adc
ss
push
cmp
fsubl
adc
scas
sbb
stc
lahf
ss
lock
push
dec
xchg
int3
mov
inc
mov
adc
outsb
outsb
jnp
outsl
pop
fisubs
jo
push
jne
pop
sbbb
sbb
test
iret
adc
and
dec
sub
insl
mov
sbb
pop
jb
mov
xchg
pop
aaa
pop
shrl
cmp
sub
lret
call
jae
add
sub
adc
or
and
mov
jb
fdivp
mov
adc
imul
mull
outsb
xchg
or
adc
mov
in
test
insb
dec
mov
stos
xor
push
mov
test
rolb
adc
sti
inc
sub
fstpt
jo
outsb
jne
pop
pop
fwait
mov
push
fidivl
mov
mov
pop
jmp
mov
fstpt
dec
cld
pop
stos
fsubrp
cmpsl
add
fmull
enter
cmp
push
pop
fcmovnu
vlddqu
clc
loope
sbb
add
insl
xor
inc
lea
jns
mov
push
sbb
js
fmull
clc
in
mov
imul
pop
loope
cli
jbe
xlat
imul
mov
lods
sti
aaa
adc
pusha
imul
lds
addl
mov
out
lcall
in
sbb
mov
xchg
pop
or
mov
lods
cltd
xchg
push
push
inc
fwait
lea
test
xchg
adc
add
fists
add
dec
mov
out
xchg
in
shlb
inc
push
mov
scas
jecxz
test
fistpl
xchg
sbb
loope
sub
ss
test
cmp
ret
ficompl
mov
int
js
imul
adc
popl
scas
push
inc
in
testb
jbe
hlt
pop
adc
inc
mov
into
cmp
and
push
pop
lahf
fmuls
xchg
cmp
or
mov
dec
mov
loop
ja
outsl
dec
xchg
ljmp
mov
jmp
andl
mov
popa
inc
js
fwait
cmp
push
loopne
push
inc
inc
adc
push
add
inc
scas
addr16
jl
jbe
lahf
mov
rolb
loop
jbe
loope
test
mov
cld
dec
jle,pt
xchg
jp
add
push
inc
cltd
cld
bound
jl
test
and
dec
in
insb
xchg
inc
or
mov
fisubs
mov
fndisi(8087
add
movl
push
and
dec
sahf
ljmp
daa
lret
push
iret
sub
lret
fbstp
jne
or
push
inc
outsl
mov
mov
or
push
mov
or
jne
sbb
mov
mov
nop
rol
cmp
xor
clc
xchg
ljmp
mov
shr
pop
repz
lods
jecxz
cmpsb
or
ljmp
daa
pop
test
idivb
xchg
bound
xor
mul
sbb
sbbb
jbe
popf
jne
cvtpi2ps
adc
sbb
push
jne
mov
lods
push
insb
pop
mov
loop
insl
movsb
cmp
neg
push
cmp
repnz
inc
in
jne
xchg
push
les
jp
xor
sub
mov
aas
das
das
lock
add
cmp
xchg
inc
jl
aad
mov
add
sbb
rolb
inc
cwtl
jl
outsb
xor
iret
push
adc
in
cmp
pop
sbb
lods
mov
mov
adc
dec
mov
je
mov
add
mov
fwait
and
jmp
dec
push
mov
cli
or
jne
sbb
jmp
sub
clc
lret
das
add
lock
sbb
adc
imul
xchg
sbb
movsl
das
test
movsb
fwait
add
pusha
jecxz
mov
dec
xchg
clc
in
mov
adc
mov
insl
out
mov
in
cmp
sbb
push
adc
or
fiadds
cmp
cmp
loop
fisttps
push
pop
ss
in
lods
fidivs
lock
mov
push
int
pop
sub
xor
cmp
outsb
mov
aad
xchg
and
xchg
movl
mov
inc
ja
loope
cmp
mov
lods
popa
push
adc
rolb
aaa
das
out
fisttps
icebp
xor
sub
sub
hlt
je
xorb
jnp
test
sbb
js
inc
xchg
loope
and
rolb
rcl
cltd
lds
adc
cmpsb
jmp
jge
mov
push
cmpsl
xchg
arpl
icebp
out
jg
shrl
leave
mov
gs
inc
sub
cmp
insl
sbb
scas
ds
mov
fwait
cs
lcall
mov
call
lea
mov
pop
fwait
lods
int
mov
adc
pusha
in
pop
mov
les
shll
lds
pop
add
mov
pop
and
add
frstor
sbb
sbbb
mov
xor
inc
xor
icebp
pop
xchg
xchg
mov
int3
pop
fldl
or
inc
xchg
ficoms
adc
dec
stc
jo
mov
xor
xor
daa
das
subb
iret
aad
add
cli
hlt
test
ljmp
scas
inc
pop
in
aaa
outsl
dec
adc
iret
pop
movsb
xor
insl
fwait
lock
cld
jp
repnz
cs
dec
stos
notl
xor
or
bound
inc
and
aam
sub
das
das
jl
out
repnz
and
pushf
fisttps
push
faddl
dec
shlb
cmpsl
std
add
sbb
test
pop
rcrb
pusha
test
pop
ret
add
adc
push
cmp
ljmp
push
and
cwtl
xor
sti
ja
xadd
inc
outsl
mov
xchg
mov
push
mov
push
stos
lahf
pop
sub
das
push
nop
mov
int
lret
push
aaa
sub
psllw
jg
imul
pop
rcll
or
jbe
cmc
inc
pop
inc
fwait
jecxz
stc
cmp
mov
aas
mov
push
mov
daa
adc
dec
lods
mov
fisttpl
xchg
test
cs
or
xor
mov
mov
push
fadds
ss
mov
enter
mov
shrb
lcall
fldl
in
pushf
inc
jge
fwait
add
mov
xchg
mov
dec
dec
bsr
mov
jo
insb
mov
mov
dec
das
cltd
adc
sbb
push
iret
lea
fs
lock
jle
push
in
test
popa
negb
int
es
fmul
pop
xor
adc
scas
mov
mov
add
mov
mov
fwait
cmpl
fucomi
mov
js
cwtl
mov
cmpsl
jo
push
dec
dec
das
data16
mov
mov
cmp
fisubrl
loop
jge
test
mov
inc
test
mov
adc
sub
ds
int
pop
dec
inc
add
fisubs
fldl
add
mov
fcomip
dec
in
cli
clc
fiaddl
lods
loope
adc
push
jp
and
or
sub
inc
lea
movsb
addr16
and
scas
clc
loope
int
push
dec
movsb
jg
loopne
dec
ret
and
mov
dec
mov
mov
fimuls
or
mov
or
push
add
cmp
or
cmp
js,pn
adc
test
fisttpl
cmp
ljmp
rorl
scas
sbb
mov
push
and
aaa
pop
pop
push
aaa
dec
test
cmp
aas
lds
mov
jne
incb
pop
mov
mulb
cmp
sbb
dec
mov
roll
mov
sbb
ss
push
mov
pop
push
mov
push
push
fnstsw
dec
push
sub
sub
add
rolb
mov
fsubrs
mov
rclb
push
dec
fdivr
into
cmc
rcr
add
pusha
into
mov
or
jo
adc
jl
pop
jmp
clc
rolb
mov
cmp
imul
sub
jecxz
adc
mov
add
inc
insb
lds
sub
fldt
cli
loop
or
cmp
pop
das
insb
xor
mov
sbb
xlat
cmc
jb
cmc
lret
xchg
xchg
adcl
or
mov
add
push
adc
in
lcall
pop
jge
rcl
and
popf
aaa
jecxz
cwtl
jbe
ss
loopne
push
aad
dec
les
outsb
or
xchg
rcl
fbld
and
push
xor
testb
aaa
test
add
cmp
push
mov
clc
xchg
pop
xlat
jge
xchg
push
out
or
mov
ss
xor
mov
inc
aaa
add
dec
mov
push
scas
sub
addr16
scas
clc
push
ja
mov
jl
bound
popf
add
les
mov
mov
rolb
sbbb
mov
aas
pop
cwtl
negl
das
mov
dec
pop
mov
cmp
adc
mov
sub
jmp
loopne
mov
sbb
out
mov
pop
fdivrs
push
iret
sbb
jp
mov
xor
out
call
mov
add
inc
roll
sbb
popa
pop
dec
xchg
hlt
push
es
pusha
mulb
inc
pushf
addl
lock
xor
and
rol
sbbl
in
mov
push
cmpsb
cwtl
add
sub
ss
std
sti
fisubrl
mov
mov
mov
insl
inc
cmp
imul
in
mov
shl
pop
adc
movsb
jno
out
mov
pop
clc
fcmovne
inc
cmc
ds
inc
dec
push
es
sarl
jg
and
xor
mov
mov
lods
fildll
add
fwait
repz
in
mov
enter
inc
xchg
add
aas
das
in
fidivl
insb
fsubrp
insb
sbb
mov
sub
mov
std
inc
gs
adc
xchg
fidivs
in
sub
xor
push
rcl
cmp
pop
push
bound
push
sbb
mov
push
xchg
jge
repnz
jbe
addb
jnp
inc
icebp
test
jecxz
stos
xor
daa
dec
js
stos
sub
mov
or
inc
xorb
inc
sub
into
add
iret
add
push
lcall
add
sbb
outsb
aad
xor
mov
stos
mov
test
mov
pop
mov
lods
js
mov
adc
pop
xchg
mov
in
stos
jecxz
fdivrs
je
dec
mov
push
xchg
dec
xchg
fdivrs
fdivrs
aad
rolb
ficomps
xchg
cmp
dec
add
adc
mov
adc
es
sar
push
pop
shll
pop
jo
icebp
inc
push
push
pop
sbb
xlat
aad
stos
fucomi
iret
jg
arpl
dec
add
lds
loopne
xchg
jbe
call
inc
cmp
adc
push
xchg
jb
fstpl
mov
cmc
testb
lcall
int3
rcrl
mov
fistl
cmpsl
jbe
dec
xchg
xchg
fstpt
fwait
adc
pop
sbb
pushl
add
loope
dec
lret
shll
outsl
xor
cltd
cmp
inc
aaa
mov
sar
je
aad
insb
push
inc
jmp
jle
pop
push
jl
jne
mov
divb
insl
push
aad
add
push
or
sub
dec
adc
xor
sub
adc
popf
rcll
mov
push
cmp
jo
adc
aad
push
pop
mov
cmpsb
psrad
loop
xchg
jmp
pop
pop
out
sarb
sub
cmpsl
test
fstpt
mov
xchg
or
cmc
mov
add
or
and
push
inc
call
shll
js
popa
out
iret
adc
icebp
movsl
sbb
lock
mov
dec
jecxz
repz
or
push
rcl
push
jl,pn
scas
push
add
js
sbb
sbb
mov
pop
sbb
and
mov
loop
adc
loop
mov
inc
mov
pushf
jnp
fsubrs
xor
andb
add
movsb
fisttpl
icebp
mov
dec
test
mov
sbb
jno
lret
adc
addr16
and
sub
mov
cmp
lods
or
push
jae
imul
adc
sti
test
fdivs
mov
mov
add
mov
mov
add
daa
insl
mov
mov
inc
lods
xchg
xor
sub
scas
xchg
enter
add
popa
dec
mov
sbb
andl
mov
loopne
fisttpll
add
push
call
or
adc
dec
pop
mov
cli
cli
rcrl
jns
mov
inc
pop
mov
dec
loope
mull
popf
push
mov
push
inc
cwtl
fwait
rolb
imul
add
jmp
mov
jle
mov
stc
gs
outsb
jnp
add
sub
or
test
or
and
cmpsb
mov
push
out
adc
cld
mov
add
pop
dec
add
cltd
push
and
inc
sbb
jp
shrb
jp
stos
jnp
stc
inc
ret
fdivl
sahf
js
xor
cmc
fcompl
mov
mov
xchg
xor
imul
inc
aam
in
aaa
mov
enter
dec
xor
pop
lret
mov
cmpl
add
and
mov
mov
pusha
xlat
pop
pop
sbb
dec
and
push
arpl
rcrl
pushf
bswap
jae
out
mov
das
xchg
pop
mov
adc
xorl
jnp
shlb
mov
jl
fsubr
cmp
ljmp
dec
add
popa
jmp
jmp
sbb
fucomi
mov
or
mov
insb
adcb
mov
pop
xchg
mov
mov
out
fisttps
mov
sub
dec
sbb
je
fwait
jl
add
ljmp
fistl
nop
jb
jns
xchg
sbb
xchg
pop
std
inc
aaa
adc
jecxz
stos
repnz
inc
dec
add
mov
jp
cmpsl
dec
xor
mov
ds
hlt
pop
pop
ret
mov
push
push
popl
xbegin
pop
jle
out
jb
aad
outsl
aas
xchg
mov
inc
in
out
fstpt
imul
movsb
cmp
insb
push
mov
xor
jmp
mov
jge
xchg
jle
repnz
mov
jae
dec
pop
dec
add
sub
mov
ds
sub
inc
in
shll
scas
add
mov
jno
mov
ljmp
outsl
stos
sbbl
inc
and
push
xchg
dec
cmp
mov
sbb
mov
mov
jl
mov
sbb
push
inc
pop
mov
adc
das
dec
rolb
cmp
int
mov
inc
and
bound
mov
in
dec
daa
mov
out
sbb
fcmovnbe
pop
lock
inc
mov
and
mov
cs
xor
cmp
or
loope
lcall
xchg
fidivl
scas
mov
push
test
mov
int3
push
sub
imul
outsl
aam
and
mov
clc
and
shll
or
shll
pop
mov
inc
mov
fisttpll
jbe
jbe
fmull
loope
inc
popf
stos
cmpsb
inc
jbe
sbb
mov
dec
mov
mov
and
xor
pop
push
jg
test
or
cmp
icebp
mov
mov
insl
add
jg
adc
mov
pop
sarb
ret
xor
xchg
mov
sbb
ret
aas
xor
jecxz
or
xor
or
fdivs
adc
adc
add
bound
rcr
ja
sbb
xchg
inc
xchg
jl
xor
lret
popa
mov
fcmovnb
popa
add
push
dec
rclb
xchg
or
mov
js
arpl
add
test
cli
into
leave
sub
sti
pop
jns
cmp
fwait
mov
and
mov
jg
loopne
ret
xlat
mov
or
pop
insb
dec
and
inc
add
aad
cmpsl
jnp
out
mov
pusha
and
push
mov
cmp
subl
sub
xchg
push
push
and
pop
mov
rcl
mov
pop
and
cs
sti
pop
mov
cmp
xchg
sbb
pop
push
js
cs
xchg
sbb
xchg
add
clc
mov
sub
cmp
cmpsb
xlat
adc
and
dec
repz
ret
jb
test
mov
movsb
or
loop
xchg
leave
jmp
dec
inc
jbe
in
xor
or
mov
ds
fcomps
repz
mov
push
hlt
or
add
fisttpll
sbb
xchg
outsb
daa
inc
shld
sbb
movsl
pop
sbb
dec
rcl
lea
jae
int
mov
ja
push
xchg
movsb
dec
adcl
jmp
pop
jns
cmp
rcl
fdivl
dec
outsl
stos
subb
sbb
jmp
xchg
fnstenv
adc
inc
and
out
jno
jmp
std
sbb
or
dec
or
mov
dec
cmp
inc
in
aam
mov
pop
xchg
lret
sarl
std
dec
mov
push
ljmp
jg
test
mov
popa
jge
mov
cltd
jecxz
orl
jmp
inc
int
add
dec
fs
jg
dec
shll
nop
inc
loope
mov
or
test
or
cmpsl
aam
add
iret
push
jmp
inc
mov
mov
mov
xchg
add
mov
push
call
inc
sti
repnz
push
lods
js
insb
bound
mov
lcall
jnp
mov
or
mov
stos
stc
dec
cltd
inc
mov
hlt
inc
je
dec
in
push
xchg
dec
mov
in
loope
jle
jbe
in
inc
adc
loopne
pusha
or
mov
push
add
or
aas
or
xor
push
fdivl
jns
outsb
mov
mov
jo
outsl
pop
outsb
pop
xlat
dec
xor
dec
adc
insl
xor
rcr
les
test
jge
in
xchg
or
call
ljmp
ds
cmc
pop
rorb
daa
and
movsl
fiadds
mov
push
cmpsb
jg
push
pop
and
cmp
mov
xchg
mov
xor
mov
cmp
sbbl
cmpsb
pop
hlt
mov
xchg
test
inc
pop
jae
xor
aad
or
or
aaa
cld
sub
ret
mov
mov
mov
fildll
pop
repnz
push
mov
mov
inc
mov
jns
repnz
xchg
fldl
out
cmpsb
movsb
popa
add
inc
push
sbb
subb
or
mov
xor
xor
mov
or
xchg
and
or
inc
and
push
mov
pop
popf
mov
mov
cmc
sub
or
xor
dec
sub
cli
sarl
roll
aad
dec
call
mov
mov
cmp
jb
xor
fisttps
cmp
pop
shrl
dec
sub
sbb
outsl
mov
xor
mov
cmp
mov
or
dec
cli
lret
mov
or
jge
fistl
push
or
jmp
fdivrs
aam
scas
sub
sahf
push
xchg
je
add
and
cltd
fisubs
lahf
xchg
arpl
mov
push
dec
add
pop
sub
add
ja
mov
lret
mov
mov
in
divb
jge
xor
inc
test
sub
je
je
mov
pusha
push
movd
std
add
pop
outsl
dec
adc
mov
scas
and
jae
cmp
loope
add
imul
fstps
adc
inc
jbe
aaa
push
xchg
or
add
push
outsb
and
and
xchg
inc
lret
add
stos
mov
cmpsl
rorl
xor
loopne
cmpsb
ss
cli
add
pop
mov
leave
and
sub
dec
adc
std
ret
cmpsb
mov
cmpsl
push
add
dec
push
mov
out
int
add
adc
xlat
inc
pusha
notb
cs
inc
push
push
pop
cmp
pop
in
sti
cld
rorb
pop
out
cld
xchg
ljmp
mov
xor
or
mov
dec
sbb
fbld
mov
mov
pop
imul
xchg
pop
mov
or
test
out
dec
insb
jno
xor
add
stc
inc
call
push
ss
mov
aad
adcl
mov
adc
jmp
adc
lcall
cltd
adc
mov
and
sub
xchg
lret
mov
push
inc
adc
rol
xor
mov
mov
pop
shrl
shlb
pusha
fiaddl
das
push
pop
rorb
jecxz
mov
int
into
aam
sbb
mov
push
leave
push
outsb
pop
test
and
dec
sub
xchg
mov
sahf
je
rcl
add
faddl
bound
pop
xchg
inc
cwtl
add
call
push
data16
push
push
dec
pop
inc
clc
inc
stos
push
add
loop
sbb
add
jbe
gs
inc
or
mov
adc
ljmp
cs
sub
xchg
mov
adc
sub
or
mov
mov
add
mov
test
xchg
mov
jo
adc
ret
sub
js
jl
fstpl
jmp
imul
clc
push
sarb
icebp
pop
clc
rcrl
mov
jnp
add
sbb
shl
lock
mov
loop
test
icebp
xchg
ljmp
iret
in
adc
inc
sahf
push
mov
mov
mov
ret
mov
mov
sub
pop
pusha
mov
push
lcall
dec
cmp
aaa
mov
xor
sbb
adc
aam
movsb
movsl
pop
push
jecxz
sbb
jo
jo
sbb
jecxz
pop
mov
add
orl
cmpb
inc
sub
cltd
test
scas
jb
mov
lds
cli
cmpsb
testl
push
les
int3
test
push
icebp
jg
clc
jg
ljmp
add
or
outsl
fidivs
divb
clc
cmp
es
inc
mov
and
aad
jle
mov
mov
fwait
jo
xchg
scas
jns
insl
push
ljmp
sahf
iret
or
or
mov
mov
add
call
lea
or
mov
xor
insb
repnz
sbb
int
push
pop
clc
sbb
lods
lfs
fdivl
cmpsl
or
fs
xchg
sub
mov
pop
jnp
stc
dec
mov
daa
push
lea
jg
mov
add
push
loop
mov
xlat
and
gs
xor
mov
add
pop
mov
adcl
sbb
add
push
notb
add
adc
fadds
testb
inc
mov
mov
mov
xor
ret
loope
aam
les
cmpsb
mov
dec
push
call
xor
push
rclb
pusha
ret
mov
mov
jp
pop
sub
int
clc
pop
mov
gs
sub
dec
or
cld
movsl
rorb
hlt
or
adc
mov
sub
out
xchg
daa
ret
adc
mov
into
mov
leave
xchg
sahf
stos
aaa
je
mov
mov
push
push
xchg
popa
xchg
or
inc
xchg
addr16
std
pop
roll
fcompl
or
fwait
xchg
mov
add
fidivrs
sbb
adc
mov
mov
push
jns
daa
or
push
pushf
adc
dec
xchg
mov
cmp
mov
jecxz
dec
popa
adc
pop
fwait
cs
push
inc
test
imul
test
cs
stos
test
fadds
pop
or
pop
lock
xchg
ljmp
inc
test
xchg
mov
pop
int
inc
mov
mov
daa
icebp
cmp
inc
sub
mov
fimull
jge
inc
mov
aam
popa
cmpsl
ja
outsb
outsl
jp
add
xchg
mov
cs
xor
mov
arpl
add
call
fs
daa
sbb
sub
inc
and
lods
ljmp
jle
pop
inc
inc
scas
adc
add
or
das
xchg
cwtl
jecxz
push
mov
stos
xchg
xchg
lea
adc
sahf
loope
push
inc
pop
jno
inc
ljmp
loop
mov
mov
mov
test
mov
and
shl
push
pop
stos
fdivl
aaa
adcb
in
ds
cli
ret
dec
out
mov
jecxz
sbb
mov
and
dec
push
pop
sub
jb
pop
sti
dec
xchg
mov
adc
mov
or
adc
push
test
subb
iret
fwait
mov
clc
add
mov
notl
xor
cmc
cmp
and
mov
test
test
ja
cld
sbb
push
or
mov
push
rcll
mov
cmp
ds
xor
cmp
outsl
xchg
nop
addr16
ficoml
frstor
cmpsb
icebp
inc
sti
out
jno
add
nop
push
dec
and
outsl
pop
insb
test
mov
lcall
mov
mov
jne
dec
jbe
jge
out
roll
and
dec
sbb
dec
jmp
cld
int
sub
fwait
add
jp
iret
mov
std
add
clc
pop
xchg
repz
in
lcall
inc
nop
hlt
lea
lret
inc
sub
dec
mov
sub
cmpsl
loopne
movsl
push
jmp
mov
push
nop
outsb
inc
xchg
xor
ret
in
mov
pop
clc
lahf
and
mov
ret
pop
inc
fstpt
lock
mov
sbb
inc
ret
cmp
jg
insl
cltd
movl
out
sbb
lock
lcall
sbb
ds
lds
shll
jbe
roll
add
daa
xor
daa
aaa
sub
loopne
cld
movsl
xchg
pop
punpcklbw
cmp
sbb
mov
sub
std
xchg
sti
mov
adc
ljmp
or
lds
insb
xor
mov
add
lahf
dec
sbb
ret
jno
mov
test
mov
add
fsub
je
adc
out
mov
xor
scas
fistpl
insb
sub
xchg
pusha
push
and
inc
aam
xlat
or
jmp
mov
ja
outsl
movsl
pop
pop
lods
scas
scas
and
or
adc
mov
movsb
fadd
aaa
cmp
push
aad
sub
test
je
iret
loop
sbb
cmpsb
push
cs
lea
inc
fistpl
lcall
push
adc
xchg
xchg
jne
jg
and
add
inc
loop
loop
lds
sarl
xor
cmp
cmpsb
loop
mov
shll
or
ficomps
mov
or
adc
jmp
and
clc
inc
mov
pop
adc
insl
subb
testb
mov
xchg
shlb
mov
jbe
notl
push
inc
stos
mov
jo
pop
sbb
popl
pop
cltd
dec
push
cmp
and
cmpl
fisttpl
mov
mov
pop
adc
stos
lret
cli
fldcw
mov
cs
int3
mov
pop
stos
inc
popa
aam
jl
inc
cmc
and
frstor
sbb
aad
sbb
daa
loop
add
add
cltd
inc
mov
xor
and
mov
pop
xchg
je
and
cmp
xor
jne
push
pop
sbb
xchg
cmpsl
cmp
mov
mov
push
sbb
push
adc
loope
lahf
jle
add
mov
cmc
cmp
fwait
test
sbb
mov
lds
lea
clc
pop
inc
xor
shrl
sbb
test
call
enter
sbb
fdivr
fistpll
test
cltd
or
fstpl
icebp
out
fldt
xor
iret
rcll
or
mov
mov
adc
lods
call
out
fmulp
mov
xor
pop
sub
pop
aam
sub
movsb
mov
sbb
dec
aad
cmp
lods
sbb
bound
push
sbb
jle
fsubrp
xchg
es
enter
sub
cs
mov
jmp
test
sbb
mov
ret
mov
lea
mov
xchg
pop
mov
and
cmp
jne
jle
int
pushw
pop
push
cmp
hlt
setge
shrl
mov
mov
loopne
rclb
push
movsb
pusha
xorl
push
push
ss
add
scas
pop
cli
adc
xchg
ja
mov
icebp
push
mov
sbb
sub
add
icebp
mov
xor
enter
shrl
xor
xchg
test
and
nop
xchg
cmp
in
loope
pop
fimuls
mov
imul
jo
loope
dec
xor
and
push
push
fsubrl
ret
jns
stos
gs
pusha
addr16
leave
je
scas
rorb
mov
das
mov
mov
data16
imul
fstl
cli
in
add
cli
sub
xor
aas
out
and
cld
cmpsb
aaa
add
incb
sbb
and
cwtl
and
mov
push
dec
push
or
out
sub
shlb
ja
enter
lods
jecxz
hlt
cmpsb
pop
mov
ret
int
sub
jno
pop
jmp
jb
scas
je
push
push
call
outsl
or
popa
xchg
xchg
and
push
mov
subl
push
mov
imul
mov
sbb
sub
leave
mov
mov
loope
inc
repnz
ds
mov
push
test
and
int
cmc
insl
pushf
bound
outsb
sbb
ffree
das
jl
into
mov
xchg
rcll
pop
cmp
fcomps
cmpsl
jl
movl
mov
imul
mov
pop
pop
push
adc
or
movsl
dec
out
cmp
cmp
ret
xchg
or
or
mov
aam
push
sbb
push
iret
cwtl
or
sub
test
cmp
dec
movsl
je
pop
mov
mov
stos
cld
nop
fcompl
mov
lds
sub
jle
sbb
push
outsl
pop
push
in
push
pop
inc
bound
push
shlb
loope
rolb
xlat
daa
adc
call
fstpt
outsb
mov
mov
push
cmpsl
ljmp
fadds
into
jne
sbb
dec
mov
mov
es
add
xorl
cld
outsl
jne
arpl
dec
push
dec
adc
je
mov
add
fucomi
insb
popa
xchg
movsl
pusha
xchg
out
subb
inc
fdivrl
xor
dec
xor
outsl
cmpsl
ret
sbb
push
cmp
ficompl
dec
add
imul
inc
call
xchg
mov
and
lods
js
jge
xchg
add
mov
mov
adc
dec
das
and
fistpll
enter
inc
push
aad
dec
nop
fidivl
jne
xchg
sub
js
rolb
lock
fdivr
nop
fdivs
cmpsl
loopne
pushf
xchg
jne
in
pop
in
test
ret
cmp
pusha
call
adc
lcall
mov
in
jge
imul
adc
inc
jg
dec
ljmp
mov
outsl
stc
dec
mov
cmp
inc
js
sub
push
dec
enter
xor
adc
outsl
ret
xor
xchg
lock
sub
fcompl
mov
test
xchg
hlt
mov
in
mov
sbbl
shlb
inc
lea
in
das
mov
sbb
or
inc
mov
rclb
inc
add
aam
mov
out
cmp
mov
iret
sbb
ss
lods
ljmp
jecxz
dec
sbb
inc
insl
adc
mov
mov
ljmp
jns
xor
out
mov
push
sub
push
pop
cmp
push
movb
pop
enter
mov
inc
push
pop
outsb
or
push
and
dec
imul
sub
movsb
ljmp
in
and
ror
inc
xor
pop
adc
std
xchg
mov
fcom
roll
mov
and
or
xor
or
pop
mov
fsubs
cmp
mov
add
jle
mov
div
or
sbb
sub
insl
or
icebp
or
or
lret
xchg
mov
push
add
fadds
xchg
test
pop
pop
inc
jp
mov
push
jb
out
add
jmp
cmp
stos
ds
jo
pop
call
ret
sub
adc
pop
xor
repz
push
jo
outsb
roll
das
nop
inc
and
push
jne
shlb
sbb
pop
sahf
movsl
mov
iret
push
es
pop
pop
ja
rcl
ja
sbb
test
rcll
sub
pusha
inc
cwtl
stos
fisttpl
jno
fwait
arpl
ret
sarl
rorb
pop
pop
clc
cmpsb
int
int3
inc
dec
rorb
idivb
pop
xchg
add
push
ret
add
in
push
mov
aam
jp
insl
rorb
divl
dec
les
and
mov
jns
in
pop
sbb
mov
fistpll
ret
ja
and
cltd
sub
adc
insb
mov
js
ds
mov
cld
insb
sbb
add
push
inc
cmpsb
mov
jle
or
aad
cli
xchg
cmp
inc
outsl
cltd
pop
outsb
mov
cmp
icebp
and
out
or
subb
sar
lcall
adc
or
fwait
insl
mov
test
inc
dec
mov
mov
push
je
gs
xchg
mov
mov
sbb
sbb
loop
ljmp
addr16
push
cwtl
repnz
sub
sub
ret
sub
sub
je
sbb
push
push
xchg
ror
jle
aaa
aam
xchg
jge
jecxz
movsl
dec
jb
mov
les
xor
jmp
lods
jmp
and
sub
jmp
ret
dec
lret
es
push
and
loopne
mov
rcrb
mov
jmp
scas
out
lcallw
pushf
ffree
aaa
ljmp
scas
mov
repnz
aam
stos
mov
js
jae
inc
in
stos
lods
or
mov
call
xchg
mov
ljmp
dec
mov
cld
jne
pop
add
testl
adc
lock
insl
stos
stc
jg
scas
cmpsl
mov
enter
fs
mov
jbe
enter
pop
into
xor
xorb
sbb
jecxz
icebp
ficoml
add
pop
fstpt
clc
xor
mov
test
arpl
dec
inc
jns
fldcw
std
fbstp
cltd
test
jecxz
xor
push
sub
or
int3
push
dec
fsub
push
movsb
cmp
imull
shll
mov
mov
xor
mov
cmp
or
mov
fadd
inc
loop
clc
sbb
sbb
clc
inc
jecxz
mov
mov
clc
cmp
pop
lret
lock
pusha
or
lds
xchg
into
rorb
mov
test
mov
add
jecxz
call
repnz
ljmp
mov
rolb
lcall
jp
fbld
mov
jb
sub
cmp
xchg
pushl
pop
xchg
cltd
sub
aaa
ss
and
sti
inc
lret
dec
dec
mov
mov
mov
das
pop
es
clc
add
fisubrs
aaa
fimuls
ljmp
jle
int
js
inc
adc
loop
out
enter
xchg
xor
xlat
sub
mov
dec
jmp
mov
add
jmp
add
out
movsb
dec
stc
push
insl
inc
imul
leave
loope
mov
les
cmp
mov
bound
xor
loope
push
jo
ret
sbb
pop
xor
xchg
and
cmp
outsb
cli
sub
orb
aam
xchg
je
cmc
in
add
mov
pusha
mov
adc
lds
mov
xor
stc
arpl
mov
dec
and
cmp
enter
adc
mov
and
adc
addr16
popw
pop
shll
jecxz
adc
mov
scas
jo
push
aaa
aad
loopne
iret
movl
cld
stos
mov
pop
xchg
adc
shrl
lret
mov
int3
int
jecxz
cwtl
sbbb
xor
lea
xor
jg
test
rcrl
add
sub
cmp
sub
push
out
fmuls
pop
cli
stos
fsts
dec
xor
enter
in
and
jno
and
jo
fsub
test
sub
mov
insl
xlat
fdivrl
andl
mov
bound
dec
pop
mov
xor
test
stos
sub
or
adc
or
or
mov
xor
sbb
push
mov
mov
out
dec
mov
test
or
push
mov
mov
stos
adc
or
mov
lods
outsl
lds
mov
test
dec
add
mov
and
outsl
cmp
std
adc
push
cli
pusha
inc
rcll
in
sbb
push
aam
adc
or
rcrl
lock
pop
pop
push
scas
test
pop
mov
insb
cltd
insl
jne
clc
test
or
aam
aas
pop
mov
jo
mov
xor
xor
in
jnp
mov
jg
ficoml
ret
gs
ret
or
inc
and
popf
pop
mov
cs
call
push
xor
cld
sub
jae
xor
adc
inc
xor
sbb
inc
std
xor
std
dec
fdivrs
dec
pop
in
outsb
fcmovnb
mov
mov
mov
add
pop
dec
jbe
das
cld
repnz
mov
out
es
dec
ja
mov
loope
xchg
sbb
adc
inc
test
or
hlt
mov
setne
inc
xchg
cmp
mov
mov
in
or
mov
jp
pxor
xorb
lods
ret
add
inc
leave
xchg
lods
push
or
stos
and
or
inc
and
mov
fidivrs
jecxz
addr16
and
insl
mov
pop
repz
mov
cmp
xchg
or
rcrl
test
adc
aas
mov
leave
jp
imul
stos
xor
mov
or
out
push
rcll
fnstenv
pop
js
push
jbe
aam
or
or
or
jmp
fnstsw
jle
dec
add
call
add
jmp
or
mov
dec
pop
jae
out
fildl
add
dec
jp
xorl
push
pop
dec
aad
xchg
pop
mov
or
loopne
loope
lods
clc
pop
pop
call
xor
loop
add
inc
in
inc
dec
jecxz
int3
inc
xor
movb
lods
adc
in
jno
cs
out
bound
fistl
push
js
or
aad
out
adc
push
add
mov
cld
outsb
out
scas
fisubs
mov
lret
hlt
pop
push
bound
fisubrl
sbb
dec
jne
inc
mov
shrb
or
into
adc
test
addr16
mov
fiaddl
mov
fildll
cmp
xchg
mov
cmp
xchg
daa
sbb
aam
fisubrl
mov
push
test
adc
into
fldl
mov
sub
mov
dec
ja
pop
fidivl
shlb
adcl
push
loopne
jecxz
lods
scas
lea
adc
adc
cmpsb
jb
or
sbb
mov
repnz
rcrb
adc
ds
nop
mov
pop
js
loope
add
test
sbb
test
out
pushf
jmp
push
lret
ffreep
pcmpeqw
loopne
sbbl
or
cld
cs
mov
rcll
loope
mov
jno
adc
inc
xor
test
loopne
sbb
repz
stc
push
and
in
cltd
jle
loopne
mov
cmp
jecxz
imul
or
mov
push
and
pop
inc
xchg
gs
xchg
and
sbb
int3
sbb
call
ret
push
out
in
add
pusha
push
out
sbb
das
xor
js
in
jp
movsl
leave
lret
imul
sti
xor
orb
jmp
outsl
inc
mov
inc
xchg
and
rcrl
inc
jnp
sbb
aam
in
mov
inc
dec
lahf
add
pop
sarl
sub
xor
jo
xlat
and
add
lret
xchg
daa
adc
xor
out
clc
andb
clc
je
hlt
mov
sub
shlb
fidivs
xchg
and
push
jl
loop
movsl
inc
mov
mov
push
addr16
sub
and
push
or
add
jns
push
mov
faddl
mov
cmpsl
test
shll
pop
mov
test
cmp
xchg
add
mov
mov
xor
arpl
fsts
or
cmpsb
pop
mov
jnp
xchg
and
das
pusha
rcl
imul
mov
cs
scas
filds
lock
xchg
fcmovne
fildl
dec
jno
insl
mov
clc
lock
ja
sub
cmp
test
cmp
dec
mov
mov
pop
outsb
jg
sub
and
push
shl
push
mov
mov
pushf
test
xchg
pop
rol
sub
popa
fwait
insl
push
into
adc
bnd
lahf
inc
add
test
lods
je
fistpl
shll
mov
adc
aaa
fnsave
pop
jb
adc
int
aaa
data16
das
aam
sub
pop
insl
clc
sub
mov
and
lods
fidivrl
clc
jb
dec
pop
int
xchg
mov
les
ja
fs
iret
daa
mov
ds
je,pt
cmpsb
lock
mov
ret
mov
push
adc
flds
fimuls
add
test
jg
stos
cwtl
push
loop
aaa
adc
gs
jo
inc
mov
adc
pop
mov
sbb
mov
jg
mov
mov
mov
ret
mov
jb
push
push
in
dec
mov
mov
sbb
and
stos
and
sti
mov
inc
lds
addr16
cmc
or
xorb
cmp
sbb
aam
and
push
loope
stos
mov
scas
xchg
test
clc
adcb
shl
cld
in
inc
inc
sub
cmp
xor
xchg
add
mov
movsl
je
int
cmp
arpl
outsb
cmp
scas
rcrl
into
repnz
jg
or
mov
xor
push
je
mov
and
pop
push
mov
faddp
stos
push
shl
cmp
and
jl
dec
fbld
mov
int
pop
xchg
xor
lcall
xchg
mov
push
cli
adc
mov
outsl
arpl
cmc
pop
fnstenv
sbb
std
push
sbb
sbb
mov
pop
pushf
inc
repz
sub
popa
mov
adc
rolb
push
cltd
add
cmp
cmp
movsl
pop
rolb
movsb
push
dec
nop
lret
in
adc
cltd
inc
out
cmpsb
xchg
sub
sti
mov
in
and
xlat
fildl
aas
fadd
or
jg
pushf
pop
ret
mov
cwtl
frstor
insb
sbb
ret
push
or
hlt
cmpsb
movsl
pop
push
iret
jmp
or
inc
shr
pop
rorb
repnz
jg
push
cmc
jns
ds
ret
pop
pop
scas
leave
inc
inc
cs
pop
sbb
clc
pop
loop
addl
adc
sub
lods
add
loopne
je
in
pop
jns
cmp
hlt
scas
neg
or
pop
test
rolb
aaa
mov
icebp
mov
jne
out
mov
adc
sub
jle
stos
std
insb
fdivs
xchg
add
faddl
sti
lea
adc
popf
jnp
jns
stos
inc
or
stos
out
inc
xor
dec
xorl
cmp
sub
rcrl
xor
jl
movsl
sub
sbb
bound
daa
dec
dec
aam
inc
xchg
mov
daa
addw
push
add
or
dec
insb
subl
xchg
decl
sbb
enter
fisubs
sub
loope
fldl
lock
jl
sbb
data16
push
push
test
jge
sbb
sub
ret
jg
aaa
sbb
mov
jmp
int
push
popa
addl
loope
rorl
icebp
shrb
mov
cld
push
ja
and
outsl
add
pop
into
dec
fistpll
push
inc
add
inc
mov
andb
lds
fldl
push
ret
pop
out
inc
aaa
inc
mov
sub
adc
inc
sub
fcmovb
sbb
adc
push
sti
ljmp
idivl
cli
mov
jp
cli
mov
xchg
test
jno
push
push
in
cmp
mov
insl
outsl
cld
xchg
cmp
fs
push
dec
mov
mov
add
inc
cs
ret
pushl
rorb
ret
jmp
mov
data16
sbb
mov
lds
aaa
ds
lret
mov
cmp
icebp
and
pop
inc
inc
dec
je
adc
or
in
cmpsb
add
lahf
add
popa
and
push
mov
mov
icebp
aas
clc
lret
sysenter
and
mov
jo
dec
loopne
std
sub
imul
mov
outsb
mov
adc
test
xor
mov
sbb
cwtl
push
add
inc
das
cmp
test
es
ss
dec
adc
inc
lock
jnp
sbb
ljmp
xchg
sbb
jns
in
loop
xchg
pop
jno
sub
push
jne
push
ficompl
es
dec
add
cs
push
in
incb
jnp
idiv
outsb
rolb
xchg
lds
sbb
dec
ret
lret
es
add
fucomp
out
cltd
push
cs
test
daa
dec
jmp
jle
fldl
dec
or
les
adc
pusha
xorb
mov
xchg
and
enter
sti
sti
stos
cli
test
inc
out
scas
pop
xchg
add
xor
int3
repz
mov
xchg
fs
pop
in
clc
inc
inc
mov
shlb
mov
in
mov
shrb
xchg
mov
daa
jb
push
inc
inc
subl
outsb
cmp
repnz
add
mov
mov
push
mov
movsb
inc
jge
or
jne
mov
sub
ret
sar
jns
sar
push
mov
mov
ret
mov
pop
mov
pusha
inc
call
std
outsb
jb
add
or
icebp
ret
or
xorb
xor
outsb
aas
xchg
adc
mov
movsl
inc
inc
cmp
adc
adc
jmp
sub
jo
add
cmp
insl
xchg
test
jp
fidivl
push
mov
shll
test
ficoml
les
mov
push
incb
sub
aaa
call
pop
mov
xor
add
jmp
xchg
xlat
jle
nop
xchg
xchg
popl
sbb
dec
icebp
jae
imulb
scas
ds
xor
outsl
and
mov
jne
shlb
add
repz
imulb
mov
daa
nop
xchg
aaa
ss
mov
out
push
fists
mov
fsubrp
test
dec
fs
imul
mov
lcall
je
mov
int3
pop
ss
repz
inc
pop
popf
fidivrl
std
mov
mov
call
int3
push
inc
rorb
add
ffreep
mov
mov
add
shll
ss
mov
les
push
add
pusha
adc
xchg
outsl
xor
jmp
imul
add
mov
pushf
fildll
stos
mov
mov
cld
ljmp
shl
mov
dec
xchg
clc
or
push
mov
xlat
and
cld
add
test
loop
xchg
add
flds
jbe
push
mov
sub
pop
pushf
orb
arpl
sub
push
pop
movsl
icebp
dec
mov
push
std
outsl
xor
fcmovb
sub
sbbl
call
inc
pop
shrl
xor
outsb
cmp
jo
sub
clc
in
pop
lods
or
jp
fsubl
adc
sbb
mov
mov
adc
in
cs
ffree
mov
rorb
repz
mov
cmc
insl
imul
arpl
std
test
dec
movsb
push
sahf
fidivl
dec
clc
mov
hlt
sbb
cmp
shlb
or
push
mov
sub
movsl
mov
rcrl
test
daa
out
cs
cvtps2pd
add
iret
ljmp
outsb
clc
inc
mov
mov
jbe
clc
and
push
sub
jmp
push
pushf
loope
sub
jmp
push
dec
xlat
and
cmp
inc
das
sbb
fs
cmpsl
sub
push
push
aam
jbe
aam
jg
pop
imulb
ret
dec
orb
icebp
loop
mov
mov
fwait
loope
fadds
push
fisubs
jno
jge
cmc
mov
pop
mov
lods
rep
xor
jle
jbe
imul
pop
mov
lea
fcmovnbe
xchg
or
mov
cld
mov
jl
jns
clc
rol
imul
pop
outsl
sub
add
cmp
mov
in
or
push
shlb
mov
loopne
push
push
or
mov
xchg
push
in
lods
jns
mov
mov
sub
loope
mov
daa
pop
inc
clc
xor
fdivrl
jecxz
pushf
cltd
adc
xor
or
mov
mov
test
or
dec
leave
insl
sbb
scas
rcll
inc
inc
mov
sbb
mov
andl
shll
dec
sysexit
aad
or
lock
lds
pop
sbb
mov
mov
imul
and
movsl
gs
cld
jnp
pop
xorb
add
fildl
sub
mov
jmp
aam
in
dec
mov
jecxz
ljmp
into
cmc
int3
pop
scas
pop
nop
adc
dec
xor
mov
fidivrl
sbb
xchg
sar
inc
mov
dec
mov
cmp
nop
mov
inc
out
es
loopne
inc
push
mov
xchg
dec
jo
mov
mov
mov
sub
mov
xchg
jp
fnstsw
lcall
outsl
dec
inc
popa
mov
rcll
or
inc
icebp
push
mov
xchg
imul
push
les
cmp
sub
mov
or
xor
dec
icebp
in
jmp
cmp
loopne
lods
jbe
fldenv
pop
sti
outsb
push
arpl
jmp
out
call
jo
sbb
pop
and
lret
jne
add
push
pushf
push
jbe
das
inc
fnstenv
sub
inc
insb
fnstsw
push
xlat
andl
cmp
mov
ja
sbb
loope
push
js
jmp
lea
ret
add
lahf
insb
jmp
xor
mov
aam
addl
rolb
pop
adc
pushl
popa
inc
add
test
dec
adc
xchg
inc
sbb
std
mov
loope
sbb
std
adc
jl
mov
scas
mov
pop
dec
sbb
sbb
cmp
mov
adc
push
add
clc
data16
jg
push
shlb
mov
mov
cmpsb
xchg
scas
std
inc
mov
cli
sti
or
loope
sbb
stc
inc
or
xchg
aaa
sub
dec
add
sbb
dec
jno
sub
pop
cmpl
jl
push
mov
in
out
dec
cmpl
push
cwtl
pop
jge
push
push
cmp
or
xchg
pop
pop
push
adc
das
mov
mov
lods
int3
cmp
inc
mov
add
bound
sbb
adc
add
decl
popw
push
je
push
dec
jp
enter
push
dec
push
insb
mov
xlat
jns
ss
dec
rcrb
clc
sbb
ja
sub
int3
xor
int
jnp
xorl
cld
popf
mov
pop
mov
jp
insl
push
lahf
int
stc
mov
das
push
mov
sub
jb
or
xor
insl
leave
adc
sbb
push
mov
sub
clc
and
iret
test
loopne
lock
mov
adc
stos
pop
xchg
pop
add
sti
push
fnstenv
cli
pop
fdivs
xor
adc
ret
push
push
cmpsb
outsb
aaa
insl
jmp
gs
out
in
in
mov
sar
mov
and
ret
outsb
jne
mov
pop
shll
pop
mov
jp
mov
popa
mov
les
fistpl
jb
ret
push
and
fisttps
inc
mov
mov
test
or
jno
test
add
pop
and
mov
push
negl
out
add
sbb
mov
test
loopne
daa
xchg
pop
adc
inc
sbb
jg
pop
mov
fisubl
popa
jno
pop
addl
pop
loop
add
fs
jnp
dec
mov
xor
pushl
dec
add
jno
bound
scas
andb
cwtl
and
cmpsl
and
leave
pop
mov
or
mov
clc
push
dec
ffreep
ret
popl
pop
sbb
fs
fdivrp
popa
bound
testl
adc
xchg
xchg
dec
jne
add
mov
mov
orl
pop
push
mov
les
in
insb
ja
aad
jb
inc
pop
or
ds
push
sbb
lds
loope
mov
pop
push
inc
lds
jg
lods
clc
loopne
shrl
in
sub
ds
pop
mov
mov
insb
imul
incl
mov
adc
sub
sbb
mov
sbbl
pop
sahf
inc
test
movsb
das
inc
movsl
mov
jns
in
outsb
mov
lods
and
lret
cmpsl
rep
dec
loopne
pop
mov
sbb
cli
test
roll
inc
leave
mov
xchg
sbb
ss
or
ret
lds
inc
aam
outsl
insb
push
mov
xchg
sarb
inc
xor
lods
mov
xchg
cli
adc
push
push
jo
fucomp
adc
or
push
mov
mov
data16
call
push
aaa
jl
xchg
xchg
pop
icebp
mov
push
mov
out
imul
pop
mov
sub
adcl
inc
aaa
in
jbe
jmp
sub
push
xchg
jge
xor
pushf
inc
daa
adc
mov
and
pop
orb
xchg
dec
mov
rcll
shlb
push
stos
jmp
nop
jne
les
jp
jg
xor
sbb
sbb
jl
ja
clc
xchg
cmp
imul
inc
mov
mov
fistps
jo
sbb
xor
les
dec
shrl
scas
adc
sbb
and
orl
aad
cmpsb
mov
out
dec
xchg
aam
into
sbb
mov
clc
jg
or
push
test
inc
mov
js
xor
sub
out
and
push
popf
adc
sub
adc
ljmp
mov
jnp
stos
pop
lcall
mov
push
mov
movsb
adc
popf
pop
es
jmp
fnsave
daa
in
add
fwait
pushl
stc
stos
push
sti
push
mov
mov
xchg
das
adc
and
adc
mov
andb
sar
in
cmp
pop
sbbb
lret
inc
jnp
das
icebp
add
inc
xor
dec
xor
jmp
jo
xorl
cmpsl
adc
das
mov
lock
outsl
mov
push
in
mov
test
fcomip
sub
jmp
pop
je
test
call
sbb
iret
call
pop
test
hlt
cltd
mov
insl
imul
mov
aas
jb
push
adc
inc
xchg
xchg
mov
add
int
adc
or
clc
inc
rcll
sbb
lock
pop
cld
fidivl
pop
sub
out
fcomp
pop
or
shll
adc
adc
cs
add
or
sub
fcom
dec
push
xorb
fidivrs
lea
fiadds
or
adc
jp
jnp
sub
inc
and
sbb
jp
and
pop
je
and
insb
shlb
dec
inc
xor
and
adc
adc
lods
adc
dec
pushl
test
enter
out
rcll
sub
sub
insb
movaps
mov
stos
jmp
fistpll
inc
aam
cmc
ja
push
mov
rorb
lret
or
pop
sbb
test
mov
lock
fisubrs
push
push
jo
add
out
out
mov
sbb
mov
dec
xor
nop
mov
bound
push
push
and
in
hlt
xchg
fnsave
cmp
rep
add
mov
cmp
lds
push
ljmp
mov
pop
sbb
or
ficompl
dec
shll
int3
ret
dec
cld
in
xchg
and
fcompl
cmp
mov
inc
fsubrs
add
ja
in
int
repnz
cli
int
sahf
jl
fs
ljmp
push
popf
decb
cmp
ficompl
loope
or
sbb
mov
call
iret
mov
or
fdivrl
or
fwait
movsb
sbb
pop
or
outsl
cltd
in
pop
movsb
dec
bound
pop
aad
mov
aad
jle
pusha
das
mov
pop
sub
xchg
dec
adc
inc
jae
bound
mov
lock
cs
stos
insl
dec
cs
call
stos
in
push
mov
inc
fldl
sbb
cmp
fadds
jbe
orl
push
jmp
imul
sbb
daa
cmpsl
sub
or
push
cli
fsubrs
lahf
add
adc
xchg
mov
dec
xor
ds
das
or
sarl
mov
aaa
mov
mov
cmpsb
fisubrl
filds
daa
sub
pop
cli
test
cli
test
jns
pop
add
movsb
dec
mov
and
inc
mov
loope
pop
cmp
bound
fwait
sbbb
ja
test
adc
mov
mov
mov
add
arpl
or
adc
out
mov
add
jle
pop
adc
inc
inc
aaa
fdivrl
mov
sbb
stos
andb
mov
scas
push
or
inc
dec
jmp
lea
call
sbb
outsl
add
pop
add
sti
push
aam
mov
pushf
inc
dec
dec
test
mov
or
shrb
test
popl
ljmp
fisttpl
mov
xor
push
mov
test
and
sbb
mov
xchg
fwait
xchg
movntps
push
addl
inc
fwait
sub
push
sbb
dec
dec
dec
movsl
add
mov
mov
icebp
push
pop
xchg
adc
adc
adc
ja
pop
and
sub
jle
popa
test
clc
xchg
call
jne
subb
cmp
rolb
and
cmp
sub
inc
pop
add
inc
fdivrs
xor
mov
cld
leave
cmpsl
push
xor
fwait
cmp
sahf
jnp
adc
mov
push
push
es
sub
hlt
push
jecxz
jo
in
jl
test
jle
pop
pop
push
xor
mov
test
divl
inc
mov
sub
xchg
adc
mov
movsl
or
clc
mov
rcll
mov
jb
mov
fisttpl
dec
sub
lods
push
cvtps2pd
sub
jmp
cmp
lods
pop
sub
add
pxor
dec
dec
or
mov
movsl
andl
adc
mov
outsl
sbb
sub
push
mov
out
leave
cmpsb
dec
leave
mov
aad
subl
mov
in
and
push
into
mov
jge
pop
ss
data16
inc
ja
pop
pop
clc
das
sub
or
test
xor
ss
movsb
sub
mov
shlb
mov
xor
icebp
jbe
ret
pop
mov
gs
xorb
rcr
mov
mov
inc
stos
ret
les
mov
test
adc
sar
in
sbb
mov
xor
mov
insb
mov
repz
cmpsb
mov
je
ds
aas
xchg
int3
or
inc
loope
sub
aas
add
cmp
ds
out
loop
jl
sti
filds
sbb
aad
push
or
inc
jmp
imul
data16
pop
jmp
sub
mov
enter
jb,pt
in
inc
fs
movsb
pop
out
jbe
mov
rcll
sbb
or
adc
lods
cs
aaa
sub
ss
fidivrl
and
fildl
sarl
sub
ret
push
jbe
jp,pt
push
mov
rcrl
xor
pop
dec
jns
daa
std
sarl
icebp
loopne
and
std
jmp
addb
ljmp
aad
pop
dec
adc
lods
mov
adc
aaa
hlt
sti
mov
and
mov
orb
fs
and
mov
addl
jg
out
scas
es
jne
outsl
inc
pop
xchg
mov
pop
sub
or
int
lret
stos
movsl
fwait
and
jg
xchg
js
ficoml
iret
or
cmp
mov
or
arpl
movl
into
jmp
fistpll
xchg
scas
fldcw
into
test
outsl
push
and
push
and
jbe
jmp
and
xorb
mov
dec
fisubrl
mov
stos
jo
mov
adc
mov
andl
shrl
rcll
push
mov
pop
pop
jnp
das
jmp
sub
sub
dec
add
add
orb
jl
lret
xlat
mov
and
iret
jae
push
jno
inc
lods
cli
mull
push
fidivl
xchg
or
outsb
inc
cmpsb
insl
clc
add
lds
dec
call
lods
sub
lea
jge
ja
lret
lds
pop
xor
mov
fbld
xchg
or
cmpsl
adcb
movsl
mov
fmull
mov
and
test
xchg
push
jo
cmpsl
or
mov
sub
mov
inc
test
test
mov
sbb
cli
jp
mov
ss
cmc
cs
add
xor
mov
ja
inc
mov
pushf
or
int
and
gs
mov
inc
jge
daa
movsl
ss
mov
stos
mov
arpl
sbb
pop
sbb
jg
shll
adc
loope
mov
mov
bound
jne
sti
xchg
mov
inc
sbb
add
fldl
je
and
mov
mov
xor
out
mov
popf
call
jno
icebp
cmp
shrl
mov
add
pop
aad
imull
xorb
aad
mov
pop
es
pop
jg
mov
cmp
and
enter
mov
std
cs
push
inc
pop
push
in
jo
push
stos
or
pop
cmp
leave
cli
push
sbb
add
mov
xlat
insl
mov
mov
adcl
or
rcrb
xlat
push
and
lods
aad
jp
frstor
xor
lret
inc
mov
mov
ret
loopne
repz
cmp
imulb
mov
pop
ja
fs
div
or
sub
aam
popa
jecxz
add
outsb
add
cmpb
add
add
negb
xchg
sub
je
pop
lahf
test
mov
pop
into
pop
xorl
mov
fisubrs
push
jno
lret
cmpsb
popa
mov
lahf
or
push
mov
jg
test
ss
cld
in
imul
mov
sub
jne
push
test
adc
js
fwait
orb
jmp
bound
faddl
in
push
sub
rcrl
clc
adc
sub
out
lea
dec
test
and
mov
or
lahf
inc
test
hlt
mov
andb
sarb
mov
pop
pop
jp
fstl
in
nop
dec
dec
xchg
sti
leave
rorl
sub
pop
mov
adc
imul
adc
jecxz
inc
aad
bswap
pop
rcll
rorl
pop
jmp
xor
cli
loop
das
xor
fisttpll
ret
roll
pop
or
fstl
cmp
cmpsb
add
jmp
mov
inc
add
mov
sub
orl
jl
subl
nop
and
ja
push
xor
mov
cmpsl
les
mov
ja
mov
jmp
or
mov
test
push
mov
ds
lret
loop
inc
fcmovnu
push
cld
iret
dec
lock
icebp
jbe
mov
inc
jne
nop
cmp
jnp
mov
sub
les
xor
in
lea
cmp
sub
dec
push
fnstcw
incb
cmpsl
and
out
mov
xchg
mov
aam
jno
inc
pushf
test
in
scas
mov
xchg
jge
jno
cmp
mov
cmpsb
ret
std
inc
dec
xchg
cli
stc
inc
xchg
pop
mov
add
push
lock
notb
pop
out
into
mov
das
cld
repnz
add
xor
pop
push
in
or
sub
loopne
es
mov
push
mov
xor
pop
jns
insl
or
xchg
jp
jle
aam
.byte
.byte
cmpsl
push
test
cmp
add
js
add
clc
add
add
add
add
xchg
add
add
or
or
testb
and
xor
in
sub
push
pop
pushl
push
push
push
push
loope
pop
in
pushl
call
and
movl
sti
lea
and
inc
push
pop
dec
add
outsb
addr16
stc
lock
add
je
loopne
ja
pop
out
dec
clc
daa
insl
cmp
sub
call
sahf
sbb
mov
add
push
sti
xchg
in
fldt
push
dec
push
gs
jns
lock
jb
aaa
push
jnp
in
hlt
push
hlt
adc
sub
popf
mov
das
popa
push
push
xor
mov
call
js
popf
or
sub
fistpl
add
push
fcomps
js
sub
push
pop
push
insl
jae
shrb
sbb
data16
mov
mov
sti
pop
subl
push
inc
insb
outsb
call
jbe
pop
push
fs
mov
add
push
pop
mov
shr
and
stc
cs
or
xor
add
call
aaa
in
adc
push
ret
in
inc
push
daa
cli
add
pop
fdivp
divb
inc
rclb
js
push
hlt
push
icebp
mov
cmp
scas
push
call
pop
inc
jne
mov
lcall
sbb
adc
inc
orl
clc
mov
mov
xor
dec
add
add
mov
out
or
add
dec
push
fsubrs
lcall
cmp
push
push
cld
mov
fcmovb
leave
ret
push
call
neg
not
inc
jmp
fsubl
dec
fnstenv
imul
sub
jo
outsb
insl
adc
jae
and
sti
in
add
or
cmpsl
fldt
add
mov
jg
ds
daa
into
sbb
pushl
add
sub
jmp
pop
fldt
pop
sbb
dec
call
lret
inc
sbb
popf
hlt
mov
dec
xor
jbe
scas
pop
mov
mov
lock
jae
mov
ja
xchg
js
or
cmp
dec
call
sbb
fcomip
adc
neg
xor
fstpt
lock
lock
pop
jno
jns
and
lock
aam
dec
or
addr16
jbe
call
iret
pusha
lret
test
pushf
lahf
out
xlat
std
sbbb
inc
jmp
iret
mov
add
or
loopne
or
movsl
call
pop
mov
inc
sbb
addr16
mov
clc
ljmp
fcomip
xor
js
push
add
add
outsl
das
add
dec
aad
repz
jmp
mov
push
shrb
imul
outsl
jecxz
outsl
xor
outsl
jl
arpl
and
lahf
cmpsl
int3
inc
call
push
data16
dec
pop
dec
dec
out
push
or
ss
imul
push
pop
push
jbe
push
pop
test
or
cmp
xor
xor
call
movsb
je
outsb
xor
or
xchg
mov
insb
jp
push
fldt
ja
inc
pop
jae
sub
xchg
cmpsb
or
outsl
ljmp
push
push
sub
not
and
inc
pop
sbb
dec
sub
mov
std
cmp
fldl2t
shll
popf
cltd
or
rolb
movsb
outsl
js
sub
ss
cmp
xor
sbbb
xor
clc
aam
mov
dec
shlb
adc
pusha
jne
aaa
add
jge
test
inc
cmp
push
lods
je
cmp
add
pushl
or
cli
mov
jle
mov
push
add
ret
pop
lcall
wrmsr
fldcw
xor
xor
into
mov
sti
or
xor
add
ret
je
negl
push
xor
std
push
dec
jne
scas
call
jmp
int3
push
repz
sub
into
sbb
sbb
adc
fldl
pop
inc
jno
pop
loope
jne
jns
or
xor
mov
callw
xor
mov
adc
sahf
daa
loopne
inc
js
ss
inc
lods
call
mov
ret
div
sub
and
adc
push
mov
fs
dec
add
push
lods
xchg
loop
cmp
dec
jno
call
or
rolb
jge
push
jmp
mov
fldcw
test
clc
aam
push
or
sub
cmpsl
fucomi
cmp
cmp
add
getsec
dec
cmpsl
fscale
sahf
jmp
add
push
dec
mov
add
gs
bound
daa
mov
mov
aam
adc
test
inc
mov
sbb
dec
sbbb
add
jmp
push
inc
loop
or
mov
mov
loopne
sbb
neg
iret
inc
sbb
or
jmp
mov
jp
scas
or
sub
jmp
inc
cld
xorb
push
push
popf
stos
sarb
in
ret
addl
adc
stos
divl
iret
clc
xchg
add
test
xchg
iret
mov
inc
sub
adc
test
fsubl
jge
or
je
bound
insb
mov
sti
pop
jge
int
imul
xchg
loopne
call
jo
push
or
jb
and
popa
call
mov
stc
and
push
and
push
cmp
sbb
lea
jo
and
jae
lods
adc
push
pop
nop
pop
and
cmp
insl
dec
pop
jno
inc
loop
pop
imul
sbb
insb
cmpl
dec
ja
outsl
xchg
dec
push
dec
jb
pop
inc
leave
call
inc
scas
and
test
or
int
add
or
or
jnp
dec
cmpsl
addl
mov
fists
addr16
js
bound
loopne
mov
dec
popa
dec
mov
add
leave
in
inc
cli
inc
inc
insl
movsl
push
ja
or
fwait
dec
lahf
insl
and
lret
jle
cli
add
sub
dec
dec
jne
mov
out
frstor
setbe
adc
idivl
arpl
lcall
out
call
lea
mov
adcb
and
popa
jo
sbb
cs
aad
je
div
jge
push
cmp
adc
repz
pop
xchg
sysexit
cmp
jae
aad
inc
jbe
cmp
jo
dec
test
xchg
and
pop
clc
mov
dec
xchg
call
inc
mov
jo
xchg
add
js
push
faddl
je
push
dec
push
inc
stos
push
fmul
insl
enter
jns
sub
outsl
aaa
imul
imul
sub
dec
pushf
add
arpl
int
scas
fs
outsb
dec
insb
out
or
fwait
push
jo
xchg
nop
fldt
shrb
leave
push
aas
mov
insl
dec
imul
call
ret
mov
aaa
push
movsb
jnp
bound
clc
sbb
icebp
add
cmovg
adc
jp
pop
pop
pop
cmc
pop
add
in
add
pop
loopne
adc
testl
jbe
out
push
inc
mov
push
dec
add
imul
push
or
pop
inc
or
mov
adc
sub
adc
add
jecxz
outsb
pop
sub
or
mov
inc
dec
pop
js
inc
dec
dec
dec
jno
je
pop
sbb
fisttpl
xor
movsl
mov
xchg
orl
mov
jae
jbe
out
pavgb
sbb
rcrb
fs
imul
mov
outsb
ret
out
call
movsb
sti
or
icebp
int
icebp
cmp
mov
fwait
int
jle
nop
loopne
das
hlt
mov
mov
add
sub
shr
add
dec
sbb
neg
sub
neg
sbb
sub
jb
test
push
sbbl
cs
inc
dec
and
dec
lods
xlat
cmp
push
dec
mov
push
push
cmp
add
enter
inc
inc
not
mov
pop
push
jl
jmp
insl
inc
push
jecxz
jbe
cmp
outsb
push
rclb
or
pop
sbb
or
or
inc
dec
loopne
push
sbb
call
lods
or
cli
push
add
mov
mov
out
int
push
adc
add
lods
xchg
mov
ja
insb
ja
adc
int
daa
nop
add
mov
cmp
push
fs
push
rcll
pushf
imul
stos
std
add
xor
pop
fistl
in
jno
adc
inc
imul
sbb
sub
inc
dec
inc
not
add
out
out
or
repnz
test
cs
ss
stc
loope
sahf
data16
lods
or
lds
std
punpcklbw
inc
add
add
jecxz
xchg
adc
sbb
add
or
jmp
insb
push
xchg
jb
dec
inc
leave
mov
aad
movsl
or
mov
add
ret
jmp
pop
sbb
or
fsubl
xor
dec
out
pop
aaa
mov
fs
stc
push
int
aaa
push
xor
add
add
pop
cmp
test
bound
pop
mov
scas
int
mov
lock
add
into
jp
xor
jmp
mov
or
sahf
xchg
iret
addl
mov
cltd
imul
push
mov
and
out
mov
sbb
or
push
cmp
mov
shrb
jne
push
outsb
iret
outsl
sti
fildl
xor
inc
call
inc
sysenter
push
pop
mov
out
scas
fisubrs
xor
dec
pop
call
fbld
jno,pn
je
ret
adcl
push
inc
imul
xor
sub
cmpsl
dec
jle
pop
adc
xor
pushl
fimuls
mov
jmp
or
push
push
cmp
fstps
or
jmp
pop
jnp
mov
or
js
pop
popa
xor
push
push
bound
sbb
inc
adcb
add
icebp
addl
push
clc
ret
dec
add
sbb
test
add
sbb
cmp
into
aaa
dec
dec
sub
std
jmp
les
push
dec
jmp
jmp
rcrb
add
or
and
pop
pop
dec
jmp
or
xchg
testb
cmp
and
jmp
or
add
loope
popa
xor
loop
insb
jbe
or
and
jns
jmp
ret
aaa
xchg
dec
imul
jmp
inc
bound
sbb
test
adc
call
test
dec
add
repz
in
je
push
bound
push
les
add
test
and
jae
xor
lahf
lods
inc
push
fcmovu
and
sbb
xor
push
and
je
adc
push
pusha
inc
ja
not
cwtl
xchg
push
dec
jle
cld
xchg
outsb
inc
pop
adc
rorb
mov
inc
dec
dec
inc
addr16
sub
mov
mov
cmp
mov
push
inc
push
nop
fldt
lret
push
add
push
mov
dec
dec
or
mov
inc
sub
fs
push
adc
jb
addr16
out
sbb
lahf
aam
adc
loop
cmc
mov
bound
add
lcall
inc
or
fbstp
cmp
add
incb
sar
mov
ss
cmp
push
xor
out
sti
mov
shrb
adc
adc
pop
movsb
and
fwait
push
ret
inc
cmpsl
add
arpl
and
hlt
loopne
cwtl
loop
add
inc
ss
cmp
xor
add
repz
dec
int3
in
cmp
dec
pop
sti
arpl
add
stos
int
ss
imul
movsb
or
push
fcoms
icebp
push
aaa
js
push
inc
push
data16
mov
jecxz
repz
gs
sub
or
add
jge
or
je
push
out
in
stos
divl
aaa
xor
push
and
push
mov
leave
ret
xlat
sub
mov
or
push
or
inc
call
fwait
movsb
xchg
add
pushf
test
hlt
jmp
mov
add
xor
aaa
mov
das
jno
xchg
imul
adc
cs
xor
lahf
cmpsb
int
add
pmaxub
push
mov
mov
or
aad
push
arpl
push
loopne
mov
adcb
add
sbb
push
inc
adc
sub
inc
push
add
inc
insb
inc
jb
xchg
adc
aaa
cmp
adc
push
call
les
inc
xor
lcall
js
dec
push
push
mov
sahf
sar
push
add
movsb
pop
cld
push
mov
push
insl
dec
out
jp
aaa
loopne
mov
lock
pusha
mov
sub
push
loopne
cmovae
mov
notl
pop
xor
mov
sbb
insl
dec
insb
cld
dec
xchg
jle
xor
push
mov
in
sub
fwait
icebp
sub
mov
cmpsl
push
add
xchg
push
adc
stos
jnp
add
add
cli
push
add
jmp
bound
inc
int3
lcall
xchg
in
pop
test
add
sub
mov
fucomip
sbb
pop
push
fwait
jbe
outsl
scas
pop
loopne
or
adc
insl
lahf
add
pop
fwait
push
insb
mov
fcom
dec
sub
sbb
roll
fcoms
into
push
jmp
fcomps
add
add
sbb
cmp
mov
jo
inc
fs
mov
inc
shl
mov
sbb
add
dec
inc
pop
jnp
ret
jmp
xchg
ss
imulb
nop
into
mov
cli
lock
outsl
jne
jae
inc
push
dec
inc
push
sti
or
inc
arpl
cmpb
lahf
sar
lock
sbb
jmp
fstp
pop
ret
sbb
call
pop
add
pop
sbb
neg
add
sti
push
inc
adc
push
dec
dec
sbb
sub
mov
fistpll
xchg
push
adc
dec
pop
add
daa
cs
testb
sti
sub
push
push
pop
sbb
inc
pop
cld
pop
sub
add
inc
fucom
ljmp
popf
add
add
sbb
cmp
std
out
xor
add
outsb
test
jno
sub
xor
aad
xor
das
mov
clc
cmpsl
mov
mov
scas
push
sub
icebp
loop
sub
cmp
jmp
mov
jbe
mov
xor
and
ljmp
xorb
popf
in
addb
outsb
or
incl
dec
mov
push
push
xor
hlt
outsb
push
stos
jmp
xor
leave
scas
push
cs
push
mov
push
rcll
icebp
mov
sub
loope
or
mov
add
inc
jmp
scas
lock
dec
enter
push
xchg
jo
movsl
fbld
mov
ljmp
gs
icebp
add
rcr
lock
insl
je
add
dec
inc
jl
mov
xchg
push
or
pop
fisubrs
sbb
imul
add
inc
push
jnp
into
or
jb
loope
imul
xor
adc
mov
sbb
push
and
mov
ja
adc
les
js
cmpsb
inc
mov
inc
pop
jo
test
xchg
cwtl
test
or
mov
mov
xchg
or
pop
out
mov
js
aas
in
neg
inc
loop
iret
hlt
fistpl
or
sub
or
int
dec
mov
xor
or
imul
push
push
xchg
dec
pop
push
pop
push
lret
push
mov
inc
imul
rolb
xor
xor
pop
mov
or
sub
fildl
push
outsb
popa
mov
cmpb
dec
pop
jo
or
stos
cmp
jns
jbe
adc
ret
gs
cmpsb
shlb
ds
cmp
mov
or
or
add
cmp
in
mov
js
xlat
inc
mov
fstpl
aam
jo
inc
sub
add
xor
stc
jmp
cld
fwait
add
sahf
out
imul
negb
sbb
cmc
push
add
sub
dec
jmp
add
add
movsl
or
push
xor
pop
hlt
loop
push
cmp
push
xor
or
add
and
xor
push
mov
in
stc
push
rcrb
and
inc
inc
push
jo
jae
hlt
sub
cvtpi2ps
cwtl
fistl
xchg
scas
push
jns
repz
cmp
aas
cmp
push
call
or
fadds
fmul
inc
mov
or
cmp
lret
adc
jge
insb
cmp
mov
push
imul
js
pop
cmp
mul
push
cwtl
call
pop
jb
xchg
lods
dec
lcall
dec
addr16
jnp
sub
jo
push
adc
adc
jg
movb
inc
sbb
dec
neg
mov
dec
lods
not
adc
dec
inc
sbb
fucomp
js
push
inc
jns
addb
pop
imul
lods
add
jp
push
jmp
sub
cmpsl
ja
call
popa
xor
fnsave
push
mov
mov
xor
jns
sbb
std
f2xm1
jmp
adc
add
mov
addl
mov
jg
outsb
mov
lock
cmp
mov
dec
xchg
dec
jnp
ja
adc
sbb
and
fdiv
out
and
add
xchg
rcrb
xor
push
mov
gs
dec
jg
bound
inc
call
cmp
in
mov
add
call
filds
mov
mov
aaa
fadds
ret
sub
or
add
push
inc
and
fdivl
dec
mov
adc
pop
cmp
sub
insb
fcmovu
fisubrs
test
lds
jo
or
pop
sar
and
fsubrs
cmp
dec
cwtl
into
enter
lret
clc
cs
cmp
xchg
lods
mov
mov
fisubrl
out
lcall
imul
into
inc
sbb
cmp
push
push
popa
jbe
xchg
in
dec
and
insl
inc
cmpsl
sarl
or
mov
inc
nopl
push
lods
addl
mov
mov
bound
decb
mov
jne
xor
cs
mov
stos
das
xorl
push
int3
jns
insb
dec
xlat
push
fadds
push
add
hlt
bound
stos
xor
inc
gs
add
sub
or
popa
dec
dec
push
dec
insl
inc
mov
mov
or
sub
inc
inc
jmp
mov
in
add
mov
jns
inc
fs
insb
jne
ja
jb
dec
dec
or
shll
sbb
aam
cld
mov
push
popf
ds
bound
cwtl
loope
xor
xchg
in
arpl
or
mov
fs
mov
imul
sahf
add
or
shl
test
insl
in
jb
and
ret
jne
dec
cmc
push
push
mov
insl
dec
fdiv
movsl
lret
addb
js
fdivl
xchg
popa
cwtl
push
scas
push
push
cmp
aad
scas
mov
xor
sbb
loopne
popa
jl
or
push
mov
xor
jle,pn
aas
jb
jo
jb
insb
push
push
or
pop
add
xchg
fs
jo
or
jle
adc
int3
xchg
dec
into
pop
mov
inc
rorl
dec
cld
mov
xchg
mov
loopne
cmp
call
and
imull
or
cmpsl
test
mov
sub
cld
add
xchg
cmp
mov
mov
push
sub
cmp
jb
xchg
lea
dec
adc
lock
sbb
push
das
dec
add
push
mov
fs
push
scas
xchg
dec
fcomps
and
dec
mov
and
imul
ror
je
mov
pop
jne
mov
jnp
dec
or
push
fdivs
cld
jge
fbld
xchg
push
mov
movsb
orl
mov
or
or
popw
cmpsb
arpl
sti
sbb
loopne
call
shlb
dec
mov
ret
push
jnp
pusha
std
sub
js
inc
arpl
out
stc
mov
cmp
fisttps
flds
lret
dec
jmp
divl
fildll
cltd
sbb
sbb
sub
loopne
loopne
or
xor
out
jmp
inc
dec
adc
mov
and
loope
mov
dec
or
mov
lock
sub
pop
and
xlat
xchg
les
cli
jmp
stos
inc
test
pushl
xor
arpl
lock
and
or
mov
stos
out
cmp
add
sbb
dec
inc
jbe
pop
mov
dec
jb
pop
jae
jge
push
testl
lock
push
mov
pop
xchg
cmpsl
pusha
cmp
fbld
mov
xchg
add
adc
xor
pusha
mov
imul
pop
call
pop
loop
jbe
out
mov
sbbl
fcmovnbe
mov
push
clc
pop
loop
and
lods
cmp
inc
xchg
icebp
or
lret
pusha
push
dec
mov
dec
call
or
add
dec
adc
stos
ret
dec
dec
ret
mov
out
ds
cwtl
adc
and
mov
ds
mov
jl
movd
xor
cltd
stc
in
dec
xchg
dec
testl
ss
jno
es
ds
out
mov
ret
lret
in
test
dec
dec
inc
addr16
xor
paddusw
dec
jbe
jae
adcl
adc
cltd
lret
fxtract
nop
mov
andb
adc
cmp
jbe
jb
mov
mov
test
in
jnp
mov
mov
inc
mov
inc
mov
push
mov
insl
outsb
inc
insl
arpl
pop
and
xor
jb
cmpsb
shr
dec
rol
sbb
aam
adc
outsl
pop
mov
xchg
and
sbb
add
sbb
iret
push
call
jmp
imul
and
or
shll
sbb
pop
icebp
xchg
or
cs
es
outsl
jne
cs
js
pop
in
addr16
xor
fs
cmp
xchg
add
jns
xor
ja
pop
sbb
push
insb
jns
push
push
xor
or
test
fcoml
outsl
adc
or
push
popa
xchg
dec
andb
dec
or
and
or
mov
fcoml
push
xor
pusha
inc
xlat
jb
int3
test
in
add
add
clc
push
inc
pop
inc
cmp
mov
and
sbb
dec
aam
leave
call
or
js
bound
xlat
dec
pop
insl
fistps
inc
xor
insl
imull
jg
repnz
outsb
addl
jbe
fistpl
add
add
xor
ret
inc
push
imul
sar
xor
xchg
js
aaa
jle
in
jmp
lods
call
out
dec
jns
push
pop
sbbb
imul
sub
sahf
loop
xor
outsl
sbb
rolb
jo
cmpsb
call
inc
jp
ret
mov
sahf
sti
addb
inc
ss
jb
stos
in
lea
and
xor
sbb
add
test
iret
sbb
mov
pop
dec
xchg
addr16
sti
cmc
xor
aad
add
push
pop
fst
icebp
sbb
imul
xchg
inc
sbb
jecxz
fdivr
test
mov
mov
sti
push
mov
jmp
jg
lret
pop
repz
add
cmp
jne
pop
test
icebp
and
call
outsb
sub
inc
push
arpl
cld
pop
dec
roll
lock
push
mov
lret
lret
dec
scas
test
jo
jmp
pop
clc
outsl
sbb
ror
inc
pop
adc
rcll
push
dec
jmp
je
xchg
push
clc
mov
push
loopne
jne
push
test
stos
jns
enter
or
pop
repnz
jmp
adc
sbb
jb
add
or
push
push
push
mov
push
das
clc
movsb
add
xor
clc
add
test
mov
sbb
imul
sub
imul
stc
fdiv
jne
jmp
cmp
pop
add
das
addb
popa
rorb
std
mov
jmp
rol
mov
shll
push
mov
xchg
push
out
jmp
adc
and
mov
lea
mov
out
mov
xor
pop
jo
cmpsb
xor
mov
sbb
push
pop
push
inc
in
repnz
push
pop
enter
repnz
imul
aaa
enter
sarl
movsb
stc
popa
xor
pop
adc
rcr
das
lcall
loop
push
std
xor
cmp
aaa
pop
das
push
jnp
and
sbb
insl
xor
push
lock
fisubrs
inc
hlt
mov
xchg
mov
add
das
lods
ss
vmovntdq
shrb
xor
xor
dec
arpl
mov
outsb
and
imul
call
stc
xor
in
mov
cli
mov
scas
sub
loop
test
or
mov
mov
sti
mov
sub
push
das
adc
divb
loope
aaa
hlt
and
mov
das
push
inc
xor
frstor
add
cld
ficoml
insb
push
add
loop
pop
or
pop
cmp
loop
xor
push
mov
data16
loope
mov
mov
jb
xor
imul
inc
add
iret
jmp
sbb
cmpsb
or
add
out
dec
add
inc
add
add
dec
sbb
or
jne
mov
repnz
pop
jnp
or
jo
xlat
add
mov
fwait
adc
fdivs
jb
add
daa
jo
pop
add
lds
cmpl
addr16
or
lahf
insl
mov
mov
dec
fmull
or
repz
add
xchg
dec
aas
in
out
and
mov
adc
dec
or
push
add
loope
add
dec
lret
dec
aas
and
cmp
sbb
add
or
or
outsl
fmuls
stos
in
pop
xchg
jo
mov
stc
ret
mov
outsl
inc
dec
fs
stc
cmp
out
gs
xor
fisttpll
shll
inc
dec
cmp
sbb
test
je
and
dec
sbb
pop
cmp
cmc
dec
ss
cmp
add
lods
adcl
add
je
loope
mov
dec
jns
bound
xor
jl
pop
xor
add
add
lahf
push
js,pt
aad
in
add
fwait
add
or
dec
sub
repnz
test
in
popf
mov
andb
inc
addr16
xor
call
adc
dec
push
pop
push
or
xor
push
es
sti
pop
test
jbe
aas
aas
cli
or
icebp
xlat
jne
or
test
stos
xlat
cld
push
js
mov
xchg
push
push
xor
dec
or
and
ds
outsl
inc
aas
mov
xor
cltd
clc
jmp
push
testb
inc
dec
stos
stos
sub
in
dec
decl
inc
and
nop
adc
inc
inc
nop
inc
inc
add
mov
and
adc
or
add
and
pop
mov
pop
dec
dec
mov
adc
and
sub
inc
push
mov
dec
inc
ds
fnstsw
sbb
adc
dec
add
adc
comiss
ljmp
xor
or
sbb
add
jl
mov
jg,pt
outsb
add
sbb
mov
test
incb
fcompl
sbb
sbb
ss
sbb
or
sbb
xlat
cltd
frstor
jge
add
idiv
ja
push
sbb
or
sbb
sbb
jns
int
jo
sbb
sbb
and
sbb
ss
repz
or
sbb
clc
sub
je
sbb
and
lahf
cltd
outsb
repz
inc
sub
aaa
jnp
push
push
or
adc
mov
out
or
sti
or
add
testl
iret
jb
mov
negb
cmp
sbb
or
mov
sbb
sbb
imul
jl
pop
jle
in
in
in
add
push
or
in
negl
inc
mov
sub
sbb
cmpsl
push
or
je
cmp
sbb
sbb
add
fstpt
pusha
adc
popl
sbb
test
sbb
inc
hlt
fdivs
jge
outsl
mov
rcrl
or
and
loopne
jmp
addl
fdivl
in
adc
inc
cs
pop
ja
jns
call
ret
pusha
or
inc
jmp
jl
pop
fidivs
pop
and
std
or
popf
xchg
sbb
sub
sti
jae
test
mov
sarb
mov
sbb
sbb
mov
mov
pop
add
out
dec
sbb
and
in
imul
ljmp
adc
iret
or
xchg
cmc
xchg
mov
shrl
adc
fidivrs
mov
add
xor
add
fs
lods
mov
sub
test
mov
cmp
mov
sbbb
inc
add
jne
icebp
sbb
jno
lcall
cltd
cmp
add
into
or
sbb
fsubrs
and
push
xor
bound
sub
loop
addr16
jbe
nop
or
sub
sub
stos
lods
imul
cmc
mov
out
addr16
add
adc
lods
jle
idivb
test
fcmovnb
or
adc
jb,pt
scas
inc
sub
mov
add
inc
lock
mov
mov
adc
adc
add
scas
pop
lret
js
sub
sbb
sbb
insb
inc
idivl
pop
pop
mov
xor
mov
dec
rcr
pop
fcomps
clc
and
insl
and
mov
ss
push
nop
add
xchg
jnp
in
push
mov
push
or
mov
loope
divl
and
lahf
popf
mov
mov
jmp
push
cmp
loope
pop
movsb
adc
jecxz
xchg
jp
les
jnp
pusha
notb
rolb
stos
jne
cmp
pop
aam
jle
xor
xchg
stc
mov
cltd
push
fcom
push
dec
pop
mov
add
inc
adc
xor
mov
popl
lods
outsb
adc
pushf
xor
sbb
leave
inc
adc
pop
add
out
jo
clc
mov
jmp
adc
or
stc
push
and
xor
jnp
mov
pop
lock
add
test
pop
jae
nop
fadds
out
rcll
gs
or
imul
cmp
es
mov
cs
pop
std
icebp
cltd
dec
rcll
sbb
mulb
pushf
cmp
iret
jns
inc
cmp
or
push
jl
movsl
dec
jae
adc
jae
sub
and
add
add
outsb
stc
push
div
popa
aas
lea
jg
xor
arpl
jp
xchg
stos
mov
shl
outsb
xchg
rclb
add
mov
psubw
scas
inc
jne
out
fstps
mov
push
jno
sbb
mov
mov
xlat
test
mov
cmp
lock
jmp
push
lea
add
das
mov
jne
sub
adc
sti
movsb
shlb
cmpsb
sahf
pop
movsl
enter
xchg
xor
mov
pop
imul
int
pop
rcrl
in
rorl
xchg
mov
mov
push
cmc
sub
call
mov
cmpsl
ds
sbb
jmp
rcrl
enter
mov
ffree
mov
idivb
sbb
pushf
notl
xor
jmp
lods
stos
mov
movb
or
insb
insl
or
dec
or
inc
mov
push
fdivrl
or
sub
jmp
mov
iretw
push
pop
lahf
or
rcrb
imul
xchg
sahf
push
and
jl
mov
outsl
adc
je
or
shrb
les
dec
nop
mov
dec
out
pop
xor
fldcw
notb
aaa
cmp
pop
and
leave
sub
and
and
jecxz
fnstenv
sub
int3
movsl
inc
jl
mov
add
xchg
xorb
imulb
packssdw
mov
push
sub
xchg
in
jne
ret
mov
fidivl
pop
push
pop
jns
jl
mul
and
jo
cmpsl
sub
xor
push
push
jp
push
push
fstpt
or
pop
fldl
pop
ret
cmp
xor
pop
icebp
out
fcomps
push
mov
jae
shl
stos
sub
mov
xchg
cmp
mov
fstpl
mov
mov
int3
pop
sub
jo
mov
inc
pop
adc
adc
std
xlat
jbe
sbb
push
push
stc
cwtl
out
mov
sti
push
cs
mov
imul
test
mov
mov
clc
sbb
xsaves
cmp
mov
mov
pop
xchg
test
fucom
and
out
ds
push
loop
leave
je
pop
mov
dec
cmp
roll
shl
push
xchg
andb
sbb
mov
es
pushf
mov
sub
cmpsb
cmp
sub
push
fdiv
test
aas
dec
dec
sub
adc
fdivrs
cmp
lahf
and
jne
in
add
test
push
iret
xchg
movsb
call
pop
sbb
cmpsb
dec
rorb
das
jmp
stos
fdivrs
insb
pop
lcall
and
test
xchg
out
iret
lock
mov
push
imul
jl
sub
aas
sub
or
push
call
shrb
xlat
fisubrs
daa
xchg
xchg
or
nop
add
or
add
pop
jle
lahf
fistpl
cmp
and
cld
xchg
popf
add
frstor
lea
nop
ret
mov
mov
jno
enter
pushf
dec
loopne
pop
mov
sbb
cmp
jecxz
or
push
je
xor
mov
call
cli
pop
dec
pop
jmp
aam
xchg
xchg
mov
cmp
faddl
sbb
div
xor
xlat
outsb
ret
mov
jmp
mov
sub
daa
int3
add
cmc
jmp
scas
pop
adc
out
pop
out
mov
ret
scas
pop
jns
popa
call
shrl
mov
icebp
push
adc
mov
lret
out
mov
lcall
pushf
inc
lods
adc
test
cmc
add
jl
pushf
aam
inc
xor
cmpsl
out
jne
push
or
jno
or
fwait
out
and
dec
inc
mov
mov
icebp
jne
out
sbb
jl
hlt
dec
aaa
dec
setl
pop
mov
rcrl
dec
mov
rorb
push
cwtl
dec
clc
push
ret
pusha
icebp
js
adc
mov
iret
mov
mov
ds
sub
jb
ret
dec
inc
out
add
pop
mov
jl
mov
pop
pop
mov
xchg
data16
and
adc
sub
mov
fildll
pop
dec
xor
mov
and
adc
sub
fxch
push
sarb
inc
aaa
pop
stos
mulb
loopne
outsb
mov
out
loop
call
inc
daa
add
in
jg
push
stos
int
cmpsl
mov
jl
pop
test
jecxz
pop
sbb
add
ficompl
mov
mov
rorl
sbb
lods
mov
xor
sarb
jae
loop
xor
mov
std
or
inc
addr16
and
jecxz
shl
jmp
or
bound
xchg
scas
dec
movsl
dec
inc
insb
cli
jge
out
imul
adc
loope
mov
mov
xlat
stos
rorb
inc
cmp
mov
xor
scas
cmpsl
popa
pop
fdivrs
and
int
ret
xchg
jl
dec
xorl
mov
loopne,pt
sarb
popf
and
sbb
stos
subl
addl
or
inc
dec
mov
push
cmp
fadds
adc
lock
fnstcw
push
insl
sub
mov
push
sbbl
fwait
sbb
hlt
outsb
mov
mov
sbb
test
ffree
xorl
or
mov
jne
dec
les
call
daa
jl
pop
dec
addr16
dec
stos
dec
shll
push
or
call
aas
cmp
mov
comiss
hlt
mov
push
enter
mov
imul
or
xor
xor
mov
mov
cmp
fmuls
out
outsb
lock
fs
cwtl
in
add
rcrl
sub
and
xchg
jmp
xor
jbe
inc
xor
shr
cmp
and
xchg
sti
ret
sbb
or
cmp
fisubs
mov
lods
stc
xorl
pop
jge
sar
daa
dec
jp
mov
xor
cmp
ficompl
add
sub
lret
gs
insl
scas
xor
sbb
and
in
pop
mov
fwait
cmp
mov
sub
je
sbb
jne
xor
pushf
push
pusha
cs
sbb
push
ret
jo
push
xor
sub
or
lret
hlt
pop
xchg
sahf
in
stos
lcall
dec
cmp
add
cmp
pop
push
sbb
scas
movsl
cmpl
push
cmpsl
pop
pusha
pop
inc
pop
mov
adc
or
lcall
cmc
cmp
mov
repnz
divl
je
xor
inc
xor
and
fldenv
ja
jmp
call
xchg
cmp
rorl
xlat
jno
iret
add
lods
push
or
inc
lahf
jp
scas
negb
or
cwtl
jl
cli
mov
sbb
jecxz
push
push
stc
xchg
in
xchg
inc
lret
dec
lods
xchg
mov
hlt
mov
dec
sbb
jno
jmp
dec
push
ja
jnp
imul
add
fs
inc
fisttpll
addr16
mov
adc
sbb
xor
cwtl
movsb
mov
mov
movsb
or
mov
xor
leave
sub
les
sbb
cmp
je
add
mov
hlt
icebp
and
fs
sub
pop
test
in
scas
and
sub
out
add
xor
inc
cmpsb
cmp
add
loopne
dec
les
aas
jb
mov
dec
sbb
push
mov
pop
mov
sub
addl
enter
fnsave
fadds
add
cmp
pop
adc
or
xchg
pop
push
add
mov
pop
xchg
rolb
pop
dec
mov
ret
inc
xchg
cs
pop
loope
adc
xchg
mov
in
jle
xchg
dec
pop
cmp
lcall
cmpb
mov
div
aad
popa
or
out
pop
adc
add
mov
push
mov
ret
mov
mov
mov
jge
add
add
add
iret
sub
mov
scas
ret
and
inc
inc
fwait
jg
pop
xchg
push
icebp
sub
sbb
inc
jg
aaa
adc
clc
pop
daa
mov
or
das
jp
cltd
pop
pop
movl
adcl
sarb
sub
mov
and
jmp
mov
shlb
insb
mov
cmpsl
inc
jno
bnd
andb
or
xor
and
adc
loopne
push
call
std
mov
jo
push
xchg
xor
movsb
icebp
jp
sbb
cmp
add
jns
loope
mov
cltd
rolb
mov
cwtl
xor
movl
repz
jb
in
mov
xchg
jo
mov
xchg
jo
add
rorb
aam
lods
and
dec
push
xchg
jg
mov
scas
lret
pop
cwtl
add
orb
inc
mov
lock
adc
cmpsl
and
pop
cmp
out
xchg
cmp
jns,pt
mov
test
or
insl
push
add
insl
xchg
xor
mov
dec
sub
xchg
adc
shll
xor
aaa
add
xor
cmp
andb
sbb
mov
jnp
pop
sbb
fsub
adc
mov
add
cmp
sub
pop
sbb
mov
mov
ret
aaa
sub
roll
faddp
mov
in
xor
jmp
inc
adc
push
aam
xchg
or
dec
bound
jge
push
popf
gs
xor
adc
test
sti
sub
out
and
cmp
out
leave
push
mov
mov
jno
loop,pt
rorb
pop
dec
mov
push
xor
js
jb
fcoms
or
cmp
mov
lock
cmovl
shrb
lret
fnstsw
pop
mov
lock
test
int
adc
fs
addb
lock
xlat
add
xor
outsb
mov
mov
xchg
fsubrl
imul
fmuls
pop
shl
add
jmp
loopne
inc
add
jmp
ret
inc
into
cmp
sarl
mov
in
push
xchg
cld
xchg
xchg
or
ficoms
cmpsl
cs
adc
jbe
mov
mov
push
rcr
loopne
or
mov
xor
pusha
xchg
mov
add
mov
cmp
or
mov
jne
inc
xor
xchg
or
aas
hlt
push
pop
mov
or
and
imul
xchg
sbb
pop
mov
or
notl
pushf
cwtl
insl
push
aaa
jle
jae
rclb
adc
push
lcall
xor
lcall
mov
sahf
and
cmpsb
divb
and
ret
dec
xor
mov
loop
pop
mov
lods
dec
and
loop
jae
fs
cmc
shll
in
sub
inc
push
cmp
ret
mov
dec
cmpsb
ds
mov
rol
adc
jp
inc
sahf
loope
ljmp
jge
stc
mov
movsl
xchg
push
and
arpl
ss
shll
adc
mov
mov
lret
push
mov
adcb
sbb
mov
ljmp
insb
int
popa
mov
mov
and
sub
pop
add
fcoms
int3
pop
iret
adc
or
pop
dec
jle
scas
aaa
mov
test
ljmp
arpl
inc
cs
sub
mov
add
push
cwtl
cmp
mov
mov
sub
jmp
xor
jns,pt
test
in
mov
add
mov
negb
dec
lret
adc
cmpsb
jnp
decl
fildll
aaa
add
sahf
es
roll
cmp
sbb
and
das
fstp
or
insb
push
adc
jl
adcb
mov
cmp
dec
std
rolb
fidivrs
sbbl
xlat
push
out
and
std
stos
adc
pop
dec
lods
jg
in
js
mov
cltd
pop
mov
test
push
inc
lock
pusha
cli
ja
arpl
popf
sarl
inc
dec
fidivrl
cmp
pushf
jbe
cmp
mov
adc
clc
cli
std
pop
testl
add
loopne
mov
xor
mov
out
fs
xchg
shll
jl
pop
pop
dec
ljmp
stc
shrb
pop
cmpsl
daa
and
xchg
and
fwait
push
js
cmp
pop
or
js
sbb
jnp
out
outsl
nop
cmp
jecxz
or
and
popf
jo
and
inc
fdivs
mov
inc
ss
out
xlat
or
mov
mov
mov
pusha
mov
pop
icebp
pop
sbb
and
dec
cld
testb
popa
out
lret
fcoms
loop
jge
dec
out
orb
mov
push
mov
pop
lahf
pusha
push
mov
loopne
fst
xor
addb
push
iret
loop
mov
sbb
pusha
dec
pusha
sti
loop
mov
dec
ds
xlat
xor
add
xchg
push
pop
arpl
cmp
pop
shlb
lods
std
sub
fisubrs
or
jp
sbb
ds
flds
andl
ljmp
insb
inc
daa
adc
addr16
movl
dec
sub
insb
mov
daa
xchg
adc
fsub
push
mov
sub
jp
inc
push
popa
dec
lods
cmp
jnp
cltd
push
insl
sbb
loope
into
hlt
sti
mov
movsl
mov
push
xor
mov
jo
in
fmuls
aaa
dec
je
dec
mov
mov
mov
ds
call
lret
cmpsl
ds
xchg
cmp
mov
rcll
stc
inc
mov
mov
push
lods
push
pop
imul
cli
mov
fidivrs
sub
icebp
jo
jne
fadds
or
orl
loopne
test
testb
aaa
sti
jp
adc
sbb
sbb
xchg
push
jno
xchg
inc
arpl
enter
lods
push
mov
push
cmc
lret
xlat
jge
sub
or
fidivrl
outsl
shll
lret
push
lret
push
sub
cmp
xor
int3
sub
aaa
shrl
nop
mov
aam
jno
cmp
sahf
fucomp
jl
mov
jmp
xor
and
addl
cmp
or
dec
mov
gs
sarl
jmp
inc
andb
into
test
or
push
xor
mov
mov
addr16
cli
ja
mov
gs
insl
icebp
aas
mov
mov
jmp
iret
sbb
js
call
in
and
mov
fsubl
rcl
dec
int
or
cmc
sub
cmp
pop
fwait
cs
xchg
clc
cli
jno
insl
mov
jnp
sbb
mov
inc
sbb
xchg
fldcw
pop
cmp
in
in
loopne
xchg
in
lods
and
xorb
sbb
cmp
xor
push
jo
ss
ds
sbbb
cmp
xchg
rcrb
fwait
scas
xor
sahf
add
and
mov
loopne
lea
aaa
xchg
push
frstor
sub
cmp
jle
pop
xor
xchg
mov
lret
mov
in
add
and
leave
mov
test
sub
jle
adc
or
dec
out
cmpl
fadd
inc
push
aas
fcomps
icebp
mov
loop
push
and
jmp
or
loopne
adc
mov
xchg
test
clc
mov
clc
jno
or
and
xor
jmp
leave
mov
mov
pop
sar
in
ret
lds
xchg
mov
shll
roll
mov
ja
imul
dec
aad
sarl
dec
mov
test
xor
cmpl
push
pusha
jno
hlt
mov
daa
js
mov
in
cmpsl
sub
out
mov
push
mov
lock
jle
lret
push
xchg
mov
push
push
andl
sahf
dec
ljmp
mov
xor
pop
test
xor
idivl
gs
psllw
aam
pusha
jnp
adc
and
mov
cmpl
insb
sbb
icebp
cmp
mov
aam
pop
fisttpl
push
jl
xchg
add
xor
inc
insl
jle
inc
push
dec
xchg
or
fdivl
pop
cld
pusha
nop
jle
add
xchg
ds
mov
fwait
mov
or
push
in
mov
cltd
ds
les
icebp
adcb
jl
mov
and
jae
cmp
negl
or
pop
imul
das
inc
es
leave
fidivs
fnstsw
cmp
sub
mov
push
push
test
cmc
mov
sub
and
inc
test
mov
cmp
xor
jb
mov
cmp
xchg
test
sbb
lahf
fwait
or
fiaddl
lcall
rcrl
adc
adc
or
rcrb
ss
les
push
or
insb
imul
in
fs
fcmovnu
fisttpll
or
adc
stos
popa
jne
mov
jmp
xor
sti
adc
movsb
and
pop
mov
loopne
push
cmp
int3
movsl
dec
pop
and
pop
xor
out
mov
rcrl
mov
cmp
sbb
movsl
mov
jmp
aad
jbe
stos
shl
pop
rcr
jb
sub
outsl
mov
loope
xor
mov
xor
adc
fs
cmp
mov
inc
xchg
out
add
int3
outsb
hlt
les
fisttpll
dec
popf
int3
bound
jle
test
pop
repz
adc
sub
ds
popf
mov
mov
add
test
xor
movsl
fwait
popf
imul
jmp
sbb
pop
inc
dec
lock
adc
jbe
adc
hlt
inc
sub
jmp
and
in
popf
pop
and
mov
adc
loop
dec
mov
out
jp
mov
xor
adc
add
mov
push
daa
add
in
fstpl
inc
xchg
cmp
stos
add
xchg
sub
adc
bound
adc
notl
test
ffreep
jns
test
pop
sub
dec
andl
cmp
dec
lret
lock
mov
cmp
pop
movsl
pop
xor
add
subb
xchg
lods
pop
loop
and
hlt
add
inc
fs
xchg
jmp
aam
mov
loopne
jp
data16
adc
adc
and
and
sbb
sub
aam
jg
sbb
pextrw
jg
leave
mov
shlb
sahf
pop
cmc
testb
cs
inc
ljmp
push
add
adc
insb
arpl
andl
and
out
call
sbb
sub
subl
jo
jnp
mov
jo
pusha
ljmp
sbb
pusha
jns
fisttps
mov
sbb
aad
mov
push
fs
shrl
int
in
jo
lcall
mov
xor
ds
inc
nop
push
ss
fnstenv
punpckhwd
clc
jno
and
nop
je
mov
xor
repz
inc
test
jmp
push
bound
insb
arpl
lds
mov
icebp
lods
mov
sub
or
adc
dec
mov
ret
test
adc
in
push
pop
push
adc
out
out
clc
cmpsb
adc
hlt
jmp
aam
in
je
mov
and
mov
xchg
scas
cmpsl
and
sub
lahf
vcmpfalseps
xchg
mov
adc
xorl
cmp
push
cmpb
dec
ret
shlb
cmpsb
push
lret
cltd
fmulp
jmp
inc
leave
out
iret
xchg
mov
mov
dec
sbb
test
mov
and
test
mov
add
sub
mov
subl
jmp
pop
ljmp
or
inc
addb
sbb
clc
or
icebp
mov
mov
pop
std
push
mov
fs
sub
adc
fwait
pop
sbb
inc
cli
xor
xchg
mov
and
dec
dec
inc
and
cmp
push
mov
testl
pop
pop
cmpsl
mull
sbb
cli
les
add
test
add
or
jb
adc
inc
cs
and
notb
inc
repz
xchg
aas
idivl
cmp
or
adc
cmpsb
out
in
adc
into
fdivrs
and
lcall
clc
pop
add
sbb
sub
call
push
mov
rcr
push
jp
xor
cmpsl
cmpsl
popa
dec
rclb
lea
push
xor
repz
ret
imul
addr16
push
sti
mov
mov
pop
insl
frstor
inc
popa
incb
push
xor
orl
lahf
jb
xchg
sub
xchg
pusha
add
cmp
dec
testb
mov
xchg
popa
add
test
arpl
mov
mov
mov
dec
ffree
clc
lea
mov
sub
or
xor
push
pop
xor
lret
mov
and
xor
inc
mov
xor
push
inc
push
dec
ret
je
scas
mov
xchg
push
cltd
rcll
adc
bound
inc
xchg
xchg
dec
shl
pop
push
int3
and
jg
loopne
or
pushf
dec
mov
imul
sbbl
jbe
addr16
jl
sub
bnd
push
mov
push
cwtl
jbe
sbbb
inc
jae
jo
push
add
xchg
xor
xor
mov
sub
fsts
or
pop
jl
and
popa
pop
call
cltd
fcomi
cwtl
outsl
popl
mov
push
je
mov
shr
test
add
push
mov
sbb
mov
and
js
sbbl
xchg
aad
jle
cli
cmp
pop
fdivl
pop
ret
and
ljmp
fsubrs
test
mov
sub
loopne
cmpsb
inc
xor
push
mov
shr
jle
mov
stos
pop
xor
mov
cld
and
xor
enter
mov
or
ds
mov
xchg
fsts
pusha
adc
rcll
jecxz
jns
lahf
jnp
mov
outsl
and
mov
adcl
lahf
or
push
mov
cmp
mov
jecxz
cmp
inc
je
je
insb
fdivrl
xchg
loop
sbb
push
fisubl
into
mov
dec
jl
sub
inc
xlat
sub
mov
out
les
pop
cmp
sbb
cmpl
push
add
sbb
cmc
adc
or
scas
mov
push
jl
jmp
cmp
inc
faddl
sub
je
pop
outsl
xchg
mov
mov
mov
xchg
cmp
and
jae
mov
cmp
mov
push
add
aad
add
iret
aam
imul
dec
jae
es
out
pop
jl
loopne
xchg
mov
stos
ret
hlt
fistl
rcll
dec
xchg
scas
icebp
aad
arpl
mov
cmp
xor
ficompl
mov
xchg
ss
fldcw
mov
jle
jmp
das
test
movsl
xchg
push
cwtl
pop
jmp
xorb
pop
or
push
aad
mov
js
jb
sub
in
mov
out
inc
inc
fs
cmpsb
push
xor
enter
bsr
int
int
lea
and
test
popa
subl
sbb
inc
ret
and
mov
lods
mov
popa
insl
inc
mov
cmp
adc
mov
or
dec
subl
jl
push
mov
xor
mov
add
mov
add
les
les
data16
jle
adcl
pusha
push
clc
push
push
push
mov
lea
fnsave
mov
cli
push
jo
in
and
into
jp
nop
scas
push
and
arpl
test
lcall
xor
pusha
add
jl
lret
inc
add
test
fdivl
mov
loop
mov
xor
mov
movsb
mov
out
mov
jo
jbe
call
bound
stc
add
jbe
cltd
mov
inc
inc
cltd
mov
mov
into
or
push
repnz
adc
adc
sbb
shll
cli
stos
sub
test
daa
lret
out
xor
xlat
pop
or
lcall
sub
lcall
nop
fwait
test
test
inc
movl
jmp
sbb
jle,pn
lods
imul
and
inc
push
cmp
scas
jnp
jmp
pop
les
or
add
adc
ret
mov
addb
imul
iret
add
or
mov
adc
test
xorb
insl
jl
push
sbb
push
test
rorl
mov
movsl
enter
jmp
test
lahf
inc
jecxz
pop
cs
test
out
xchg
out
xor
fisubrs
jb
jbe
fcmovnu
fisubl
imul
and
pop
test
lcall
into
call
mov
sub
int
mov
cmp
std
popa
idivl
cld
cmpsb
ja
cmp
out
inc
fdivr
cli
loop
mulb
fbld
shlb
inc
mov
clc
mov
cld
add
mov
fwait
nop
jp
loop
retw
add
adc
push
mov
mov
jnp
ret
jne
dec
lods
inc
mov
je
cmp
jg
out
mov
xor
add
jl
add
cmp
xor
cld
mov
jp
int
jmp
cmp
in
lock
and
pop
test
mov
mov
jo
cmovns
mov
loope
mov
std
pop
mov
js
inc
sub
push
push
sbb
sbb
pop
insb
idivb
daa
add
sub
popf
stos
pop
call
push
lea
adc
lock
hlt
add
loope
cmp
mov
add
cmp
lea
push
loope
inc
sarb
lods
fistpll
data16
or
jmp
aaa
xor
jnp
dec
or
adc
icebp
or
fnsave
jmp
adc
xor
test
clc
movsl
enter
addl
in
retw
loopne
jo
push
sbb
or
push
loop
insb
cli
push
sbb
mov
data16
mov
std
fs
lret
add
adc
cwtl
pop
sub
scas
mov
bound
clc
fdivrl
call
in
sub
ret
adc
out
inc
mov
push
sbb
mov
clc
shll
fidivrs
pop
adc
call
cmc
mov
adc
sbb
daa
adc
add
cmp
dec
cld
add
insb
pushf
test
lock
sbb
shrb
cmp
sbb
xchg
call
sbb
je
jle
btc
or
stos
test
add
call
inc
stc
aam
mov
pop
jmp
xor
add
xchg
jp
jbe
gs
xchg
cmpsl
dec
xchg
and
sbb
rcrb
lcall
pop
fdivs
pop
mov
insb
xchg
into
or
das
movsl
test
add
xchg
or
lds
ljmp
cmc
push
pop
pop
jmp
add
dec
mov
inc
insl
js
push
add
pop
ljmp
imul
and
movsb
movsl
jcxz
lods
in
cmp
cli
sbb
into
pusha
push
out
push
aaa
pop
shlb
outsb
inc
fisttps
mov
pushf
push
arpl
pop
js
pop
xlat
inc
in
stos
xchg
and
popa
call
orb
ret
xor
pop
fsubs
cmp
mov
mov
mov
adc
cmc
jl
sbb
addr16
into
loope
cli
fdivs
pop
addb
xchg
adc
into
out
sbb
jecxz
inc
bound
lods
push
outsb
mov
out
jbe
mov
shll
stos
clc
ds
xchg
testl
ficoml
subb
jge
jbe
jbe
loope
dec
mov
add
sub
adc
and
mul
icebp
stos
ret
cld
repnz
dec
mov
mov
ds
out
and
lds
insb
xlat
sub
movsl
mov
loopne
xlat
mov
pop
mov
mov
mov
icebp
sub
out
aad
pop
jne
popa
test
ds
icebp
jecxz
sub
test
xor
mov
dec
mov
pushf
jno
imul
and
pop
js
dec
sarb
mov
sub
sti
inc
pusha
or
ficompl
pusha
faddl
mov
sbb
xchg
xlat
repnz
xchg
test
inc
xchg
cmp
flds
inc
pop
mov
lods
mov
inc
add
in
stos
ds
inc
aas
clc
push
test
mov
xor
cvtpi2ps
ds
dec
fnsave
or
shrb
cmp
pop
dec
add
es
adc
test
icebp
mov
mov
pop
imul
int
je
clc
pop
stos
lahf
das
stc
xor
roll
push
adcl
aad
imul
lods
adc
loopne
fnsave
adc
daa
outsl
adc
mov
addl
mov
adc
lock
lock
stos
xor
jl
pop
push
push
shl
clc
sub
gs
test
icebp
xor
fldcw
cmp
cmpsb
cmpl
mov
push
cmp
cmpsl
fwait
jb
in
cmp
push
scas
xchg
and
mov
in
inc
push
addr16
sub
imul
lahf
ret
dec
ljmp
add
pusha
shl
xlat
dec
ret
mov
fwait
je
std
jmp
dec
es
mov
or
adcb
inc
fiadds
sbb
pop
fs
outsb
jecxz
pushf
cs
add
inc
dec
decl
cmp
jo
cwtl
pop
ljmp
fs
pop
dec
jmp
or
lods
test
stos
ss
add
pushf
out
jmp
aaa
fadd
and
call
testb
out
ficompl
loope
clc
loopne
xchg
mov
out
incb
leave
mov
cld
push
das
push
je
cli
mov
sbb
and
xchg
je
dec
jl
sub
or
mov
cmp
inc
movsl
pop
rolb
and
mov
je
nop
imul
test
shlb
ror
inc
dec
adc
ret
cmp
cmp
in
and
fnsave
mov
sub
and
scas
cltd
repnz
test
dec
jo
dec
lock
push
sbb
mov
xabort
outsl
aam
jg
adc
add
fsubr
ds
fldl
push
jnp
imul
addb
adc
loop
pop
cmpsl
push
adcb
aad
mov
fcmovnbe
adc
imul
sub
or
add
test
icebp
scas
out
ret
mov
aaa
pop
inc
sbb
jge
in
add
push
ja
lret
sub
daa
jo
sbb
lods
sbb
mov
out
jae
andb
scas
jmp
jno
mov
fdivl
cmpsl
dec
call
xor
loope
xchg
or
cmp
xchg
and
sbb
xchg
ret
mov
adc
pop
mov
mov
pop
inc
shrb
jne
jp
dec
loope
inc
cmpsl
sbb
mov
xor
cli
cmp
jl
loope
call
or
dec
xchg
add
cmc
cmpsb
cmp
jmp
lock
xor
int
ljmp
imul
loop
and
jmp
and
rolb
xchg
jo
sbb
xchg
bound
subl
jmp
hlt
loopne
scas
adc
inc
pop
xor
push
inc
aam
sbb
lret
jnp
inc
mov
xor
add
out
popa
cmpsl
push
mov
int
inc
leave
and
adc
cmp
out
gs
inc
roll
lds
dec
rcrl
cmp
adc
sarb
insb
dec
jecxz
shlb
bound
pop
mov
xchg
ret
call
hlt
jne
cmovle
adc
popa
into
out
dec
mov
add
jno
outsb
jne
push
mov
mov
movl
bound
add
clc
loopne
icebp
sub
clc
das
aaa
cmp
or
xor
adc
dec
imul
xchg
dec
stos
stos
inc
das
je
lds
inc
aam
stos
mov
mov
popa
lock
stos
aaa
dec
jl
mov
lea
outsl
cmp
jle
rol
popf
insb
adc
mov
arpl
popa
mov
push
clc
dec
jns
inc
fisttpll
lods
or
popf
add
rcr
lods
lock
int
nop
push
push
sbb
insl
shrb
xor
mov
sbb
roll
jbe
scas
mov
mov
mov
or
pop
inc
and
clc
pop
inc
mov
dec
cli
fbld
xlat
decl
inc
ret
push
or
pop
xchg
dec
jo
rol
push
daa
lcall
sub
ja
xchg
add
cmc
ret
push
int
add
ret
lods
imul
pop
jge
inc
and
xor
push
les
ds
roll
les
nop
mov
fwait
in
repnz
insb
outsl
mov
int
sbb
xchg
outsb
xor
or
lods
fsubrl
inc
sub
call
cmp
sub
call
pop
mov
rcll
aas
pop
lock
xadd
rorb
ljmp
or
mov
fsubrs
fs
test
mov
shll
jns
rcl
ret
jae
or
aad
inc
mov
minps
xchg
push
ret
stos
out
sub
xchg
fwait
lods
xlat
inc
stc
xchg
and
or
jge
and
jge
movb
stc
sbb
cmp
pop
sti
mov
test
icebp
pop
xchg
sub
xor
jnp
leave
mov
xchg
outsl
aaa
or
inc
and
std
mov
cmpsl
mov
lock
pop
fwait
sub
mov
aas
adc
in
insb
arpl
nop
stos
lds
call
dec
aam
rcr
adc
xchg
in
jmp
outsb
mov
pop
mov
int3
lret
push
xchg
testl
sub
decl
sub
cmp
fs
jl
adc
ror
ss
stc
enter
insb
pop
stos
fstl
cmpsb
iret
adcb
rcl
negl
iret
xor
fistpll
stos
fdivp
bound
fs
ret
call
mulb
or
dec
xchg
test
and
dec
and
mov
cmp
push
and
ss
into
ljmp
cmpsb
adcl
das
outsb
out
pusha
jns
push
insb
jecxz
das
cli
push
int3
mov
out
sbb
pop
in
dec
rcrl
repnz
and
cmp
push
sub
mov
js
in
dec
push
pop
inc
xor
jg
outsb
lahf
push
rcl
aaa
lock
mov
mov
mov
jl
adc
or
bound
sysexit
cli
cmp
sub
clc
scas
mov
push
mov
mov
jl
insl
push
fs
lock
xchg
xor
cld
push
daa
mov
nop
jns
int3
bnd
adc
push
movsl
push
insb
xlat
push
es
cmc
lods
dec
daa
adc
cmp
inc
and
xor
push
movsl
inc
pop
loop
push
cli
mov
mov
adc
pushf
into
nop
adc
test
movsl
sti
or
pop
and
rclb
mov
jmp
sahf
js
insl
pop
jbe
pop
test
fnstenv
fnstenv
jmp
fsts
add
push
pop
push
lods
js
xor
outsb
cmp
insb
xchg
nop
and
dec
push
fildl
shrb
adc
ja
insl
sub
xchg
mov
insb
pop
stc
push
jmp
and
mov
loopne
rdmsr
fnstenv
clc
add
jecxz
mov
in
shl
sub
sub
scas
jo
jmp
mov
sub
scas
xchg
test
scas
test
push
int3
subl
fcmovne
loopne
pmulhuw
sbb
hlt
loopne
mov
cmp
mov
ret
fsub
xchg
arpl
jge
jle
nop
mov
in
jne
xor
std
sub
loope
ss
and
pushf
icebp
cwtl
popf
mov
sub
test
daa
pop
cmp
scas
jle
inc
cmpsb
xor
scas
in
xlat
add
ss
pop
xchg
or
add
repnz
dec
add
ljmp
inc
xor
inc
or
rcrb
sbb
test
push
cmp
add
cs
pop
mov
cmp
orb
jmp
test
int3
push
xor
mov
pop
aam
mov
pop
add
in
in
push
dec
add
push
stos
push
mov
sbb
add
fistl
dec
mov
mov
sub
and
sub
add
mov
clc
sbb
jle
xor
jno
sub
je
out
fidivrs
jbe
add
notl
addl
addr16
outsl
shrl
inc
imul
out
lcall
mov
mov
into
std
insb
and
xlat
sbbl
inc
adc
mov
pop
lock
ds
data16
clc
test
hlt
mov
adc
sahf
jmp
pop
inc
call
in
addr16
xchg
std
and
aam
lock
clc
push
mov
jg
ja
push
add
das
outsb
jno
and
test
movsb
lds
add
mov
xor
mov
cmp
push
scas
cmc
jge
lock
lds
xchg
cmp
aas
mov
ljmp
jbe
push
nop
mov
fadd
pop
out
lods
inc
jno
adc
rep
add
mov
xchg
repz
and
aas
push
push
cmp
jl
roll
cmc
push
mov
jmp
leave
mov
adc
lahf
dec
popf
sbb
xchg
pushf
pop
mov
aaa
dec
nop
jl
mov
cli
mov
cmp
pusha
xchg
inc
jnp
movsb
in
mov
in
adc
jge
fisubs
addr16
jns
sub
cmc
loopne
cmp
jl
aam
jne
xor
subb
mov
repnz
add
adc
pushf
idivl
inc
sarb
adcb
lcall
dec
adc
fsts
mov
or
movsb
dec
or
insb
or
es
divl
icebp
jp
pop
push
pusha
jp
test
test
cmp
cmc
mov
sbb
mov
filds
inc
popa
xchg
and
rcl
ret
adcl
xchg
fisubrl
xor
push
add
rcll
push
adcl
aad
add
mov
xchg
mov
lods
adc
add
cltd
enter
and
cmp
mov
test
and
fmull
inc
sahf
repnz
ds
pusha
dec
adc
xlat
daa
js
adc
jmp
add
mov
fdivrs
mov
jp
fcom
ret
in
add
sub
mov
pusha
pop
and
aas
loop
mov
cld
cmc
js
xorl
dec
sub
loope
fistl
into
icebp
sbb
lcall
pop
inc
mov
mov
mov
loop
rcrb
mov
mov
imul
imul
pop
iret
sbb
jnp
outsl
inc
add
mov
or
push
not
imul
mov
push
fiadds
mov
insb
cmc
arpl
ja
sub
push
clc
xor
enter
cmp
inc
je
dec
lahf
mov
imul
lock
adc
sarl
dec
mov
push
inc
sbb
adc
mov
ja
xchg
cmpsb
loop
xchg
sub
lret
add
inc
and
adc
mov
mov
jb
jecxz
ret
aad
test
mov
es
or
std
bound
lcall
lahf
enter
mov
lahf
pop
dec
test
pop
loop
ss
dec
jnp
stos
pop
sub
std
mov
cld
loop
clc
popf
rcll
mov
outsl
pusha
aas
testb
in
loop
scas
sub
xor
or
mov
cltd
sub
lea
or
xchg
jp
enter
pop
popf
mov
mov
call
xchg
adc
jbe
and
int
lds
dec
or
test
insb
mov
jo
push
xchg
sarb
dec
dec
stc
dec
mov
pop
repnz
in
arpl
pop
fadds
cs
cmp
or
adcl
aam
lret
shrb
dec
es
sbb
cmp
push
pop
jle
enter
ret
js
stos
sbb
push
das
jp
pop
xor
movsl
pop
daa
mov
lock
pushf
aad
ss
fucomp
mov
add
mov
or
xchg
lods
int
push
in
push
inc
mov
pop
aaa
clc
aad
jno
hlt
out
jnp
cmp
ljmp
mov
jmp
push
jnp
addb
push
in
mov
jnp
xchg
out
push
push
add
pusha
xor
or
jp
adc
mov
sub
cmp
cmc
leave
xchg
in
push
jae
leave
fcomi
mov
mov
mov
test
fsubp
sub
push
xor
jo
in
outsb
adc
jge
cmp
push
sbb
adc
ret
fistl
inc
out
bound
int3
lahf
popf
loope
in
dec
push
pop
pop
cmp
inc
aam
add
out
pushl
mov
cmp
mov
mov
jmp
ljmp
cltd
nop
mov
inc
in
jbe
mov
fdivrl
and
mov
push
sub
and
scas
push
adc
adcl
scas
lods
nop
mov
jp
push
inc
cmp
jg
ljmp
jle
test
aaa
mov
test
stos
stos
je
out
mov
les
cmp
scas
dec
pop
outsl
or
xchg
cli
pop
jecxz
popa
in
jg
lds
aaa
sbb
int
push
jp
sub
stos
lahf
jle
mov
dec
push
dec
fistps
aas
sbb
adc
into
and
inc
or
addr16
int
testl
push
sahf
movsb
inc
iret
je
add
mov
push
dec
dec
in
jmp
push
fs
inc
movl
sub
ds
les
cmp
inc
inc
test
clc
aaa
insl
sub
les
xlat
and
int
pusha
adc
clc
ss
sbb
scas
lret
cmp
rolb
jge
cmp
inc
jne
movl
push
mov
xor
jnp
aas
cmp
add
bound
jp
mov
test
sub
popf
ficomps
xor
ss
mov
outsl
cmpsl
fisubrs
sti
mov
loope
and
cmp
fidivl
xor
sarb
mov
pop
lods
mov
fsubrs
pop
std
pushf
cmpsl
xchg
mov
inc
lods
in
outsl
leave
push
or
ss
xor
push
insb
jge
push
daa
mov
movl
ret
cwtl
addr16
ja
adc
test
jl
lret
movd
pushf
cmp
xchg
cmp
adc
sub
fidivrl
popa
clc
imulb
lahf
sar
popa
pop
xchg
dec
sarb
add
cmp
sub
xchg
outsb
rorl
fisttpl
and
and
fistpl
add
jo
andl
cs
mov
fcoms
test
in
jl
gs
pop
outsb
dec
xor
movsb
push
pop
mov
jle
sahf
icebp
lock
and
aam
xchg
xchg
add
cmc
fcmovnbe
jmp
in
mov
inc
cmp
mov
inc
xchg
outsl
inc
clc
mov
or
mov
aam
rorb
cmpsb
jo
push
aad
aaa
cmp
fadds
or
cmpsl
pop
daa
les
xlat
inc
cs
sub
ret
pop
cmp
inc
inc
iret
in
jo
mov
xor
cmc
fsubr
rorb
out
jl
lea
fiaddl
mov
cmpsl
test
cli
mov
mov
lahf
jmp
pop
inc
lock
loopne
lret
ds
test
lcall
jne
pop
into
mov
cmpsl
mov
jl
dec
in
arpl
push
in
ss
xlat
xchg
xor
fwait
xchg
dec
or
nop
ret
stos
aad
jae
add
gs
xor
addr16
dec
jl
jnp
jbe
es
outsl
mov
cmp
jle
and
lret
sarb
test
ret
sub
pop
xor
test
adc
fsubrs
mov
je
cwtl
adc
or
fistpl
mov
xchg
cwtl
and
or
shrd
mov
dec
and
bound
femms
inc
sub
push
addr16
std
inc
cltd
in
int3
sbbb
jecxz
adc
pop
pop
pop
or
sbbl
adc
loop
pop
aaa
dec
xchg
fimull
popf
out
clc
es
or
arpl
dec
or
movl
push
loop
fdivrl
test
pop
add
add
call
jecxz
bound
sub
shl
mov
push
xor
aam
out
call
insl
push
jo
in
fwait
std
or
sbb
push
hlt
dec
push
jmp
dec
outsl
jbe
cwtl
jne
out
or
mov
xchg
and
je
xchg
jg
inc
push
outsl
sub
mov
imul
mov
ds
arpl
daa
xor
inc
pop
xchg
sub
in
jmp
les
sbb
inc
int
rcr
arpl
xchg
sbb
mov
mov
inc
jo
mov
mov
jp
jns
sahf
cmp
lock
repnz
xchg
aam
imul
lret
ss
arpl
cmp
loop
jne
dec
or
mov
dec
mov
ret
fadds
pop
xor
or
stc
fcmovb
lods
and
lds
sbb
push
lds
dec
jno
rorb
call
addb
cmp
shl
rolb
int
mov
jmp
jge
outsl
push
bound
mov
cmc
jnp
lock
test
sbb
in
jb
shlb
sbb
bound
subl
mov
mov
mov
gs
cld
ret
mov
mov
or
push
fisttpl
lods
inc
jecxz
xor
test
jecxz
xchg
iret
push
jae
loopne
mov
adc
pop
pusha
inc
subl
jle
dec
cmp
inc
lods
subb
call
adc
adc
cmpsb
dec
pop
cmp
cmp
jl
push
jl
ret
pop
movl
mov
mov
xchg
popa
adc
mov
xor
add
cmc
inc
jmp
jmp
shrb
fxam
stos
lret
das
jle
jae
mov
cmpsb
adc
lret
daa
add
and
daa
ret
inc
icebp
into
js
add
jmp
subb
jle
nop
lea
or
push
stos
mov
pop
dec
clc
ret
and
push
je
xchg
push
imul
mov
in
loop
pop
fcoms
inc
jmp
faddl
cld
mov
or
call
dec
mov
nop
cmp
call
aas
call
ss
push
loop
ficoml
loopne
or
loopne
out
es
dec
shll
orl
aas
fwait
sub
lods
loope
roll
cmp
or
lret
and
and
lds
clc
xchg
xchg
test
popa
call
rol
fisubl
dec
int3
andb
test
fdivs
pusha
mov
hlt
sbb
shll
das
xchg
mov
shlb
jns
inc
nop
sti
loop
inc
fwait
jmp
clc
andb
imul
push
in
push
jl
and
xchg
push
pop
jmp
jmp
jp
push
jnp
sarl
xchg
loop
and
mov
aaa
movsl
in
aam
roll
scas
pop
fs
inc
add
xchg
fisubrl
inc
imul
mov
rsm
ljmp
dec
mov
pop
outsb
ss
push
les
ljmp
loope
fsubrp
test
push
dec
push
call
jl
inc
dec
add
mov
inc
jb
cmp
mov
enter
mov
pop
call
aad
jle
mov
scas
mov
imul
adc
movsbl
mov
or
fisubs
mov
pop
pop
push
adcl
in
fdivrs
mov
xchg
xchg
aaa
es
mov
push
mov
addl
push
dec
dec
xchg
sbb
cmc
mov
ret
jecxz
push
incb
pop
das
roll
pop
fbstp
sahf
shlb
jecxz
ret
aas
pop
or
add
or
clc
and
cmpsb
movsb
pusha
dec
lds
mov
fadd
mov
std
cmp
pop
lock
out
push
nop
shll
and
out
outsl
aam
push
imul
inc
sub
fadds
inc
loopne
cmp
mov
mov
in
cmpsb
insb
and
ds
test
fistl
mov
pop
cmpsb
and
adc
xor
jmp
je
cmp
jl
mov
call
mov
call
mov
sub
sbb
sbb
mov
cld
push
bound
fsubl
hlt
fdivl
mov
xorl
aas
add
mov
test
pop
sub
lds
stos
jb
adc
mov
pop
cs
scas
xchg
cltd
jge
stos
mov
cmp
mov
js
shrl
push
cmp
push
push
lds
std
adc
ljmp
cld
sub
cltd
loop
daa
push
iretw
gs
fsubrl
leave
hlt
mov
adc
clc
or
xor
add
xor
rcrl
pop
icebp
shrl
xchg
dec
adc
sub
add
mov
and
test
cmpb
cmp
enter
mov
sub
mov
shrb
ret
xorl
rcrb
and
push
pop
dec
insb
mov
xchg
push
test
mov
or
sbb
pop
outsl
push
rclb
dec
mov
js
jno
cmp
sub
adc
pop
aaa
cld
pop
outsl
adc
out
fistpl
popa
incb
das
sub
lods
pop
pop
lea
scas
cmp
into
mov
add
jbe
add
fldenv
je
out
icebp
in
pop
inc
in
pop
pop
sub
fldt
dec
je
mov
jle
subl
jbe
fucomip
sarb
inc
loopne
or
cwtl
fists
std
xor
aad
mov
xchg
add
rorb
add
xchg
pusha
and
jge
in
xchg
mov
loop
mov
int3
mulb
mov
cli
add
jno
cs
push
pop
pop
dec
xor
iret
roll
mov
cmp
fnstcw
je
push
pop
mov
mov
dec
sbb
icebp
pop
fdivrp
mov
arpl
pop
aam
jge,pt
add
orb
cmp
mov
push
jo
pop
psubd
movsl
mov
mov
mov
loopne
adc
add
sub
jb,pt
pop
xlat
setle
mov
cli
adc
movb
xchg
mov
sti
test
pusha
or
call
add
int
sbb
jg
fisubl
in
ljmp
push
in
cmpsl
mov
add
cli
test
sarl
mov
js
jns
add
adc
lods
pop
pop
sub
insl
call
clc
mov
ljmp
lcall
out
out
and
lahf
aas
xor
xlat
mov
js
into
push
dec
mov
clc
push
push
xor
inc
mov
nop
cs
movsb
adc
mov
in
fstpl
or
cltd
xchg
jp
or
push
mov
test
xchg
clc
cmc
xchg
add
sub
fwait
inc
fisttpl
mov
mov
push
psrad
testl
lods
ljmp
jb
push
mov
ja
sbb
mov
sub
mov
outsb
inc
add
ret
push
push
stos
stos
pop
insb
fcoms
mov
pop
xchg
xor
add
sti
inc
sub
stos
movsl
arpl
jl
mov
jge
add
xchg
and
push
rclb
nop
das
movsb
adc
xchg
fistl
xchg
dec
ss
popf
and
sub
fstl
add
seta
dec
sub
mov
cltd
xchg
inc
loop
fisttpl
cmp
xor
fstl
outsb
jl
jp
cli
adc
lock
adc
mov
and
dec
pop
mov
push
sbb
test
cltd
movsl
lret
outsb
jbe
lret
and
xchg
adc
ret
push
les
sti
or
sbb
test
call
pop
sub
push
int3
dec
sbb
popa
andl
inc
aad
ja
xor
mov
inc
xchg
cmp
mov
int
sahf
imul
arpl
aad
push
das
repz
cmpsl
test
loopne
push
div
fmuls
mov
jo
add
jl
cmp
addl
ret
ss
pop
mov
sbb
xchg
mov
scas
adc
sarl
int3
mov
mov
stos
test
jmp
lret
xchg
ds
cmp
mov
xchg
pop
rolb
scas
out
add
aam
loopne
roll
adc
adc
fdivs
or
jg
out
jmp
sarb
mov
arpl
fstps
shrl
xor
and
into
and
push
xlat
xor
aas
push
fwait
inc
scas
ds
add
adcb
pop
jp
xchg
push
pop
mov
mov
dec
xchg
test
test
pmuludq
jg
loop
jge
mov
out
jp
out
fs
test
loopne
ljmp
ja
jae
or
pop
cwtl
ljmp
subb
ret
fwait
xchg
sbb
xor
into
jnp
mov
mov
jg
cli
fdivs
ja
out
ja
push
stos
cld
mov
inc
inc
or
mov
or
imul
rorb
je
jnp
lock
mov
aam
mov
outsb
shr
lcall
and
fldt
cs
es
or
shlb
adc
movsl
adc
into
cltd
or
aam
loope
int
xchg
mov
pop
and
cwtl
movd
hlt
adc
leave
sbbb
scas
stc
test
frstor
ficoml
add
and
ret
or
dec
not
fcoml
call
lahf
xor
imul
lea
inc
add
and
inc
in
in
lds
sub
cmp
jo
divl
sbb
dec
in
jmp
mov
sti
cmp
sub
lods
jnp
call
arpl
xchg
lcall
int3
jo
inc
adc
and
jbe
mov
adc
in
fwait
mov
inc
or
xchg
daa
add
jne
hlt
lcall
rorl
push
and
std
mov
push
sub
mov
enter
cmp
xchg
sbb
fsubrl
xchg
es
xor
mov
lret
pop
lock
push
jle
pop
cs
or
lcall
xchg
ljmp
push
and
imull
sub
int
add
sbb
dec
cmp
outsl
loop
mov
push
inc
dec
xchg
dec
sub
fsubl
shrb
bound
hlt
dec
ss
pop
inc
inc
pop
aas
les
into
sub
lods
lret
inc
aaa
push
xor
fnsave
fstpt
dec
jae
shlb
jecxz
inc
nop
xchg
movsb
jmp
rcl
sub
loopne
xor
xor
mov
pop
fnstcw
repnz
jl
and
fisubrs
pop
xlat
mov
cmovno
in
inc
mov
fdivrl
cmpsb
cmpsl
xchg
fnstsw
mov
push
cs
sub
aad
mov
cmp
dec
add
lea
mov
cli
fidivs
adc
sbb
xchg
je
call
sbb
adc
les
popa
or
mov
mov
ret
loop
dec
es
aam
cmp
xor
rcll
xchg
shll
mov
mov
push
mov
cmp
test
cmp
ja
insb
cmp
sub
push
mov
cs
sbb
mov
jno
inc
inc
add
mov
xor
sbb
imul
add
aad
inc
jb
iret
iret
in
add
dec
montmul
cmpsb
orb
shlb
ret
test
jge
mov
adc
add
fildll
jo,pt
cmc
aad
push
inc
mov
or
fbstp
repz
out
dec
sbb
dec
cmpsl
pop
aam
and
insb
jae
std
test
jae
dec
add
xchg
fs
jl
aad
bound
fwait
clc
cmpsb
mov
add
xor
outsb
dec
sbb
xor
cmp
sbb
mov
call
scas
loopne
push
fsubrs
lods
inc
jnp
pushf
pop
mov
dec
je
popa
push
mov
scas
jg
inc
cmp
ja
dec
adc
sub
dec
lock
mov
jbe
out
pop
xor
aad
testb
rol
or
movsbl
fcoms
jnp
xchg
mov
aas
mov
mov
dec
mov
cmp
daa
and
mov
mov
lret
clc
js
jle
out
xchg
xchg
xchg
outsl
cld
movsl
sbb
mov
jb
mov
lock
cwtl
add
sub
pop
inc
sbb
push
aam
sbb
jnp
add
cmp
pop
push
daa
daa
sbbl
sub
sub
mov
pushw
cmp
mov
dec
mov
xor
mov
xor
lahf
sbb
adc
sbb
aaa
push
lahf
mov
jp
xchg
lock
test
inc
lds
adc
std
xchg
pop
mov
into
addr16
push
mov
lret
xchg
cmc
cmp
or
sub
mov
inc
pop
pop
mov
mov
and
outsl
sti
inc
mov
sub
ret
incb
sysexit
adc
mov
insb
into
mov
add
sub
pop
adc
pop
xlat
mov
mov
sub
xchg
data16
pop
clc
mov
in
in
mov
cwtl
movsb
pop
adcb
push
mov
xchg
cmpsb
test
mov
fcmovnbe
outsl
mov
jne
cli
lods
lods
jge
les
jnp
icebp
or
std
pop
lcall
cmc
push
inc
imul
mov
cmp
xchg
insb
sub
movsb
dec
orb
mov
push
sti
in
mov
mov
ss
fimuls
mov
inc
pop
lret
push
daa
xchg
les
aas
test
fsubrs
jmp
cmc
js
mov
lret
insl
xor
in
cmp
xchg
out
int
scas
mov
mov
das
adc
pop
add
mov
rcl
push
pusha
stos
pop
add
pop
ds
imul
sbb
xchg
mov
xchg
or
sbb
mov
cmp
pop
sbb
sbb
xchg
scas
add
dec
fbld
jb
outsl
pop
pcmpeqd
xor
sub
jo
pushw
call
inc
inc
dec
pop
mov
xor
int
jo
rol
les
add
subb
stos
mov
lahf
dec
stos
lret
add
adc
dec
xchg
mov
and
ljmp
clc
jmp
adc
jle
je
int
subl
pop
pop
sbb
inc
sub
movaps
scas
dec
cmp
mov
xor
cmpsb
mov
jp
bswap
in
rcr
out
iret
fmul
xor
inc
hlt
sbbl
mov
fldt
cwtl
outsl
dec
std
xlat
fucomi
or
loopne
ja
adc
das
mov
cmpsb
fildl
pop
xchg
sarb
aam
jb
mov
and
lods
adc
pop
lods
testb
sbb
and
add
inc
and
into
icebp
push
cmp
mov
sbb
xchg
inc
sahf
adc
lock
pop
jo
fldl2e
adcl
test
push
mov
fwait
xor
inc
push
shl
movl
pusha
repnz
pop
jecxz
sarb
dec
rorb
loopne
cs
out
adc
sub
and
aam
icebp
mov
ljmp
shlb
sbb
repz
data16
cld
sub
mov
icebp
lret
adc
aad
clc
lea
push
xchg
lahf
scas
jmp
es
sahf
mov
mov
jecxz
sahf
inc
mov
xlat
shrl
cmp
pop
rcrb
xchg
decb
mov
adc
or
mov
cmp
adc
sbb
insb
aad
sbb
fnstsw
push
or
xlat
add
add
insb
jl
inc
pop
pusha
inc
sbb
ds
adc
jb
dec
dec
movsl
mov
data16
loopne
cmp
cltd
adc
push
lret
rolb
dec
andl
testl
int3
enter
adc
pop
mov
mov
cmp
call
rcr
jg
pop
repz
push
or
daa
xor
push
xchg
loop
pop
cmpb
fwait
test
jo
sbb
add
addr16
nop
mov
outsb
testl
jnp
cs
lds
clc
sub
pop
add
mov
jge
sub
mov
insb
loop
mov
movsb
lea
dec
out
xchg
push
mov
movsl
adc
jo
jnp
jne
cltd
fs
mov
xlat
aas
ret
cmp
aaa
mov
push
pmaxub
mov
xor
add
popa
push
pop
das
idiv
sub
int3
mov
daa
movsl
cmpsl
cmpsb
icebp
inc
cmp
outsl
pop
pop
lahf
and
mov
xor
push
fsubr
test
lcall
cld
jmp
xchg
xchg
cwtl
push
lea
outsb
in
jae
bound
or
fninit
sarl
lea
aas
pop
fisubrl
test
jl
cs
mov
pusha
fs
cltd
je
fcomp
cmc
adc
int
scas
lret
mov
push
scas
jmp
cmpsl
sbb
pop
pop
das
adc
lcall
and
test
add
mov
jne
enter
shlb
aam
xor
mov
das
jbe
fiaddl
fidivl
xor
lea
jl
mov
jmp
or
aas
cmpsb
and
cmp
arpl
mov
hlt
pop
ljmp
es
mov
mov
jo
ret
push
rorl
loope
jo
cli
or
pop
jg
push
mov
or
jge
nop
add
cld
es
mov
mov
add
mov
mov
out
subl
add
xchg
sbb
inc
cmp
push
mov
or
outsl
sbb
xchg
fnstcw
xor
and
jg
ja
inc
aaa
lea
cmpsl
or
cmp
icebp
je
js
lock
sahf
rcl
add
sahf
fidivrs
loope
inc
or
mov
fwait
and
sbb
lock
xchg
lret
gs
arpl
mov
pop
aaa
lea
iret
cli
jge
stos
mov
and
jle
jno
adc
ds
shrl
push
repnz
cmc
pop
mov
inc
xor
out
leave
popf
movsb
outsl
sbb
stc
cli
lods
ret
lret
jmp
icebp
je
cwtl
push
fucomp
add
fnstsw
cmp
in
inc
and
inc
cwtl
cmp
mov
sbb
outsb
mov
jecxz
cmp
ficoml
or
mov
dec
insb
stc
dec
insb
adc
movl
push
aas
test
movsl
leave
cltd
pop
mov
icebp
out
ljmp
scas
arpl
dec
push
je
fnstsw
cmpsb
xchg
mov
xor
movsb
lods
aas
mov
pop
hlt
xchg
or
inc
mov
mov
jp
fisubl
mov
or
loopne
lea
sub
imul
js
addr16
pop
mov
push
push
sti
pop
xchg
dec
push
inc
lret
mov
jge
arpl
and
push
mov
inc
sbb
fcoms
add
jle
loope
or
fdivs
adc
hlt
mov
ret
int3
outsl
cmp
pop
xchg
pop
mov
jg
in
loopne
dec
xor
imul
xchg
pop
mov
in
popa
sbb
repnz
ret
pop
loop
adc
jmp
pop
stos
fmuls
mov
xor
push
cmp
jmp
xchg
fwait
aaa
dec
roll
sub
jecxz
mov
pop
or
dec
sarl
push
inc
pop
ds
cs
jno
imul
jmp
jg
dec
mov
leave
mov
push
push
push
push
sti
adc
sbb
lret
xchg
and
scas
sbb
into
loop
stos
mov
xlat
hlt
jo
xchg
add
iret
push
jg
roll
push
inc
pop
pop
fwait
js
dec
rolb
mov
xchg
daa
fnsave
push
dec
jne
mov
inc
sbb
sub
push
pop
mov
pop
cmpsb
addr16
xor
fidivs
mov
xchg
jp
outsl
mov
jle
outsl
mov
pop
popf
mov
pop
outsb
mov
mov
cmpsl
sub
inc
aam
mov
outsl
dec
mov
and
push
arpl
bswap
out
rcrl
mov
mov
mov
add
ss
and
icebp
popa
mov
fisttpll
in
dec
and
clc
dec
sarl
orb
jp
xor
lahf
cli
rorb
test
lcall
fcomp
mov
and
iret
scas
sahf
ja
inc
stos
dec
pop
das
js
jmp
hlt
adc
ror
push
sarb
ljmp
add
stos
mov
add
push
pop
imul
mov
adc
push
mov
add
jle
test
jl
mov
inc
push
xor
mov
addb
popf
out
arpl
mov
jl
les
push
pop
mov
jnp
ficoml
cmp
imul
mov
aad
mov
pop
lcall
leave
mov
push
push
mov
push
mov
js
icebp
insb
mov
fwait
mov
sbb
dec
ret
mov
and
andl
sbb
addr16
jp
xlat
push
push
pop
fs
scas
jl
push
mov
mov
outsb
mov
pop
xor
or
mov
mov
outsl
cmc
inc
orl
jecxz
dec
mov
lods
mov
xchg
pop
popa
call
cmp
xchg
outsb
pop
pop
cld
and
push
dec
outsl
jo
lea
and
xchg
mov
pop
outsl
cmpsl
push
mov
push
cwtl
roll
hlt
pop
xor
and
hlt
leave
inc
aam
sub
mov
test
push
je
dec
mov
data16
and
test
cmpsl
jo
sub
je
bound
and
dec
clc
or
fsubs
mov
ja
arpl
loope
cmpb
dec
lds
inc
scas
sbb
shrb
add
das
nop
xchg
loope
div
in
push
test
jmp
gs
sbbl
ss
or
fistpll
aas
sub
xlat
je
jl
dec
aaa
pop
pusha
ljmp
insl
adc
lock
jno
jp
sub
arpl
xor
add
cltd
mov
sbb
pop
rcr
dec
pop
xchg
push
mov
jbe
popf
inc
and
mov
roll
jl
and
inc
inc
cld
lret
cmp
aad
push
mov
pop
mov
sbb
inc
aaa
and
arpl
cmp
add
clc
sub
pop
ds
in
ret
sub
call
push
icebp
mov
jecxz
mov
cmpb
hlt
mov
aam
clc
inc
mov
pop
sarb
mov
icebp
cmpl
cmp
cmp
adc
jo
push
sbb
je
add
and
scas
mov
or
nop
ds
pop
clc
shlb
sub
or
sbb
xor
jmp
pop
popl
mov
or
push
in
insl
add
pushf
outsl
lds
insb
cmp
jl
lcall
out
and
bound
mov
das
xchg
or
fdivl
xchg
push
enter
mov
dec
orl
jns
fucomi
hlt
icebp
scas
jbe
mov
push
and
push
xorb
xchg
cmc
lods
aas
addr16
jp
push
inc
mov
sbb
mov
lret
push
xor
pop
mov
loope
ljmp
xor
push
loope
cld
lret
pop
mov
pop
addr16
adc
mov
in
sbb
xor
and
out
adc
int3
cmpsb
jge
xchg
or
mov
cmp
int
je
jl
sbb
xchg
loopne
mov
lea
add
adc
xchg
loop
pushf
and
movsl
bound
fwait
sbb
ds
and
xchg
pushl
inc
addr16
int
mov
daa
hlt
test
pop
xchg
popl
sti
pop
in
mov
adc
mov
mov
fs
xchg
inc
outsl
insb
int
ret
lea
inc
add
dec
iret
rorb
jg
mov
lahf
or
stos
ja
ret
repz
mov
cmp
fmull
repz
and
ficoms
pop
mov
pop
insb
mov
pusha
cld
rcl
mov
inc
inc
rcrb
and
mov
dec
aas
iret
lock
ret
es
push
fadds
fimull
daa
inc
aaa
fldcw
jnp
ret
clc
mov
pop
loopne
inc
sub
adc
lret
fnstsw
xor
ror
fisttpll
fisubrs
in
pop
xor
sub
mov
stos
or
mov
loop
adc
jmp
mov
stos
inc
pop
lret
sbb
in
iret
fsub
mov
call
lahf
xchg
inc
jb
adc
mov
int
and
push
aas
movsl
cmpsb
int3
out
push
andl
xchg
lds
xor
push
ret
leave
pop
fs
outsl
adc
xchg
ret
or
sarb
push
or
jle
xor
or
adc
dec
outsb
insl
push
push
mov
sbb
mov
loopne
and
mov
jno
iret
push
mov
lock
jg
xor
push
dec
fs
push
inc
jmp
sbb
adc
cmp
jl
jge
sub
dec
push
push
lret
shrb
cmp
js
xchg
xchg
add
pop
xorl
mov
sahf
mov
cmpsb
iret
add
dec
lret
jle
rol
loopne
push
push
adc
sbb
into
stos
nop
push
iret
adc
xchg
mov
xor
add
lret
pop
mov
insl
enter
push
sub
dec
lret
fistps
gs
out
pop
lods
in
icebp
adc
adc
pcmpgtd
cwtl
movsb
add
dec
mov
decl
xor
aam
test
into
add
adc
adc
mov
mov
and
into
pop
jge
popf
xorb
aad
push
enter
push
imul
pushf
movsl
add
outsb
fists
add
test
ja
cmc
rorl
out
scas
or
mov
adc
lcall
pop
mov
jo
mov
mov
lods
xchg
call
mov
rolb
pusha
xlat
daa
cmp
xor
mov
xchg
inc
sbbl
in
and
aam
ljmp
pop
aaa
jnp
shll
arpl
addl
aam
xor
dec
fadds
and
dec
push
iret
inc
scas
and
and
cmp
mov
or
pop
pop
adc
aaa
loopne
pop
sub
mov
lahf
loope
outsl
arpl
lock
mov
mov
out
xchg
imul
mov
push
dec
push
or
clc
subb
inc
mov
hlt
mov
roll
sbb
mov
sbb
dec
inc
push
cmpl
dec
and
add
test
gs
push
mov
mov
ja
pop
cmp
test
cs
jo
or
aaa
inc
sub
das
repnz
push
icebp
mov
lock
or
inc
mov
jl
dec
push
push
or
xor
outsl
lods
jecxz
xor
call
mov
pop
push
icebp
sub
jge
xchg
ss
adc
shrl
stos
mov
sbb
push
xor
and
aaa
push
popa
popf
xchg
pop
mov
and
mov
inc
leave
and
inc
daa
out
mov
adc
sbb
sub
xchg
cmp
imul
test
pop
scas
mov
icebp
xor
jge
sbb
mov
xor
xchg
inc
mov
cs
cmp
clc
xor
jb
ja
adc
sbb
mov
mov
jg
dec
loope
jl
push
pop
or
sub
gs
outsb
shll
scas
pusha
mov
in
aaa
xor
or
lods
adc
adc
outsb
xor
sbb
insb
and
out
aas
sbbl
mov
mov
aas
ret
add
xor
pop
insb
dec
inc
jecxz
jge
repz
inc
add
jne
cmc
mov
loope
pop
mov
int
xchg
jmp
dec
mov
pop
pop
xlat
jmp
fdivrl
fldenv
into
jge
mov
inc
mov
popa
jmp
mov
cltd
jmp
adc
setae
xchg
mov
js
add
xchg
or
sbb
scas
mov
daa
cmp
outsb
imul
xchg
cld
orb
add
inc
adc
mov
fsubl
push
jmp
mov
rcr
mov
mov
jo
or
movsl
out
pop
mov
lahf
rclb
cld
les
je
sbb
mov
mov
inc
dec
stos
push
nop
add
add
cli
push
ja
arpl
jb
lods
mov
sub
in
sbb
mov
outsl
movsb
in
add
dec
cmc
jp
mov
mov
roll
inc
fildl
cli
inc
mov
adc
push
pusha
mov
jmp
push
sti
add
push
loope
arpl
xchg
inc
adc
jnp
mov
push
dec
xchg
cmp
ret
pop
pop
push
pop
mov
lret
dec
and
sbb
dec
rcr
sub
sub
fstl
mov
decl
daa
mov
loopne
pop
gs
enter
sarl
pop
add
or
xlat
lds
cmpsl
mov
repnz
mov
xor
cli
mov
push
testl
pop
ds
mov
test
cmpsb
ficompl
ja
mov
aas
mov
clc
ret
push
call
and
movsb
mov
xchg
loop
ljmp
bound
push
push
fwait
pusha
adc
popa
fcomi
adc
test
mov
fstpt
sbb
out
imul
add
push
fcmovu
sarb
outsb
xor
pop
repz
dec
fwait
ds
pop
fists
sub
stc
mov
add
cmp
lahf
mov
jne
scas
mov
stc
ficomps
and
in
inc
idivb
mov
mov
shll
fcom
dec
mov
or
sbb
add
leave
add
lock
out
pushf
lods
xor
mov
rorl
cmp
sbb
outsb
jg
int3
dec
and
cmpsb
outsl
pusha
std
mov
lods
jg
mov
xchg
jmp
and
push
test
jecxz
mov
mov
add
inc
cmpsb
add
add
mov
aad
dec
cmpsl
or
mov
lds
add
pop
add
aaa
les
xor
and
outsb
jae
cmp
pop
dec
subb
cmp
sub
sbbb
iret
sub
inc
jne
loope
mov
in
adc
sub
sbb
sbb
adc
lods
iret
adc
mov
popf
inc
mov
dec
and
out
pop
shrb
and
sub
dec
pop
adc
rol
inc
call
push
lock
inc
test
mov
adc
out
popf
add
sbb
mov
aaa
sti
mov
xchg
jbe
sbb
aam
int3
fst
mov
insb
testl
bound
jb
adc
inc
enter
add
lcall
or
aad
stc
mov
push
xor
jmp
push
pushf
divl
lahf
ss
pop
insl
or
mov
adc
popa
push
and
push
jecxz
push
pop
cmp
fsubrs
into
or
int3
xchg
ds
lock
lea
xor
jl
test
int
loopne
icebp
jne
sahf
sub
adc
mov
iret
hlt
cmp
mov
imul
xchg
shlb
fistpll
inc
mov
push
mov
jg
push
push
vminss
fsts
dec
xchg
cmc
cmpsb
xor
inc
fstps
jo
mov
pop
jns
nop
insb
outsl
mov
mov
popf
lods
imul
jl
in
iret
shl
enter
loop
daa
ss
shl
aaa
and
push
xlat
lret
test
fstl
daa
or
repz
push
call
xor
fstpt
push
and
jp
nop
ss
mov
ret
out
jge
jmp
push
clc
ret
add
and
push
sub
mov
sarb
dec
sub
pop
jle
xchg
jecxz
add
push
std
adc
sbbl
ror
rorb
clc
push
test
int
shlb
pop
pop
mov
fsubl
and
pop
xchg
mov
cmc
in
addb
inc
xchg
js
and
mov
lds
jno
inc
pop
into
xor
rolb
cmp
jmp
sbb
cmpsl
pop
test
jo
lret
aas
jmp
test
mov
cmp
ret
inc
cli
in
pushf
cltd
test
aam
jmp
ret
nop
fcoml
pusha
mov
push
dec
nop
mov
lock
mov
rol
cmpsl
xor
xchg
je
pop
mov
shlb
jno
inc
insl
cmc
add
push
clc
pop
mov
aam
imul
incb
add
sbb
sbbl
push
aas
lods
jo
mov
jmp
mov
sub
mov
push
test
mov
sti
dec
test
inc
lods
js
fdivs
cmp
lret
mov
shrl
loop
lea
adc
xchg
jecxz
int
xchg
xor
push
insb
pop
xchg
pop
loop
sub
leave
add
jecxz
mov
out
pop
inc
push
mov
cmp
mov
shll
ds
xor
mov
inc
pop
sub
add
stc
pop
mov
test
popf
xchg
or
adc
lock
sub
int
xchg
test
incb
cmc
mov
sbb
cmp
add
movsb
pop
addl
roll
add
loop
ficoml
mov
fwait
xchg
cwtl
cs
pop
cmpsl
lods
pop
mov
data16
sub
jmp
lds
jmp
xor
les
mov
xchg
hlt
lods
mov
lods
sub
shr
xchg
bound
out
pop
iret
inc
enter
pextrw
insl
popf
xor
push
fcmovnb
pusha
repnz
call
cld
and
mov
xorl
addr16
dec
pop
cmp
cld
out
mov
cwtl
xchg
and
mov
push
mov
sbb
jl
jg
stos
add
add
dec
rcrb
jo
out
add
inc
mov
mulb
addr16
or
cmp
xlat
jecxz
adc
dec
popa
cmp
je
clc
loope
dec
cld
jo
aam
in
and
lea
int3
mov
jo
fistpl
or
clc
lock
inc
push
cmp
insl
loope
xor
mov
push
sub
adc
add
push
xchg
frstor
adc
ljmp
popa
mov
pop
inc
mov
fldcw
jo
push
inc
add
adc
adc
push
or
testb
sbb
push
shrl
inc
mov
adc
pop
sbb
cli
and
lcall
add
mov
adc
bswap
sub
inc
pop
pop
mov
ss
sbb
mov
pop
inc
push
out
mov
fnsave
cmp
insb
rolb
iret
dec
bound
test
mov
fidivrs
incl
hlt
pop
leave
out
aaa
xor
mov
in
ja
mov
loope
and
mov
jae
dec
dec
mov
loop
mov
xor
pop
pop
push
push
clc
lea
adcl
adc
dec
adcb
stos
mov
xchg
cs
loope
int
jmp
sbb
repz
pop
lahf
imul
repnz
add
sti
and
pop
push
fs
cli
xlat
les
les
data16
in
call
je
fsts
fwait
outsl
inc
fnstcw
push
or
jecxz
jle
cmp
fs
inc
sar
ret
sarl
xchg
cmc
pop
xor
mov
pop
or
js
rsm
cmpl
vmovsd
pop
call
adc
gs
inc
test
outsb
por
loope
pop
inc
aas
rorl
aad
fcomp
jle
and
xchg
inc
adc
repnz
push
pop
bound
daa
int
cmp
jns
insb
xchg
pop
xchg
lods
sbb
push
and
sbb
jmp
pop
std
jne
out
into
cmp
mov
frstor
test
popl
mov
jle
and
sub
fmuls
loope
sbbl
mov
into
sbb
aad
out
and
lret
std
mov
aad
ret
sbb
shlb
sub
ret
add
ss
adc
jae
cmp
icebp
jb
nop
cmp
sbb
cmpsl
aas
bound
into
cwtl
cmc
nop
inc
daa
aas
mov
movsl
sub
pushf
rol
cmovs
ja
aaa
repz
cmpl
test
pop
adc
ss
push
cmp
fsubl
adc
scas
sbb
stc
lahf
ss
lock
push
dec
xchg
int3
mov
inc
mov
adc
outsb
outsb
jnp
outsl
pop
fisubs
jo
push
jne
pop
sbbb
sbb
test
iret
adc
and
dec
sub
insl
mov
sbb
pop
jb
mov
xchg
pop
aaa
pop
shrl
cmp
sub
lret
call
jae
add
sub
adc
or
and
mov
jb
fdivp
mov
adc
imul
mull
outsb
xchg
or
adc
mov
in
test
insb
dec
mov
stos
xor
push
mov
test
rolb
adc
sti
inc
sub
fstpt
jo
outsb
jne
pop
pop
fwait
mov
push
fidivl
mov
mov
pop
jmp
mov
fstpt
dec
cld
pop
stos
fsubrp
cmpsl
add
fmull
enter
cmp
push
pop
fcmovnu
vlddqu
clc
loope
sbb
add
insl
xor
inc
lea
jns
mov
push
sbb
js
fmull
clc
in
mov
imul
pop
loope
cli
jbe
xlat
imul
mov
lods
sti
aaa
adc
pusha
imul
lds
addl
mov
out
lcall
in
sbb
mov
xchg
pop
or
mov
lods
cltd
xchg
push
push
inc
fwait
lea
test
xchg
adc
add
fists
add
dec
mov
out
xchg
in
shlb
inc
push
mov
scas
jecxz
test
fistpl
xchg
sbb
loope
sub
ss
test
cmp
ret
ficompl
mov
int
js
imul
adc
popl
scas
push
inc
in
testb
jbe
hlt
pop
adc
inc
mov
into
cmp
and
push
pop
lahf
fmuls
xchg
cmp
or
mov
dec
mov
loop
ja
outsl
dec
xchg
ljmp
mov
jmp
andl
mov
popa
inc
js
fwait
cmp
push
loopne
push
inc
inc
adc
push
add
inc
scas
addr16
jl
jbe
lahf
mov
rolb
loop
jbe
loope
test
mov
cld
dec
jle,pt
xchg
jp
add
push
inc
cltd
cld
bound
jl
test
and
dec
in
insb
xchg
inc
or
mov
fisubs
mov
fndisi(8087
add
movl
push
and
dec
sahf
ljmp
daa
lret
push
iret
sub
lret
fbstp
jne
or
push
inc
outsl
mov
mov
or
push
mov
or
jne
sbb
mov
mov
nop
rol
cmp
xor
clc
xchg
ljmp
mov
shr
pop
repz
lods
jecxz
cmpsb
or
ljmp
daa
pop
test
idivb
xchg
bound
xor
mul
sbb
sbbb
jbe
popf
jne
cvtpi2ps
adc
sbb
push
jne
mov
lods
push
insb
pop
mov
loop
insl
movsb
cmp
neg
push
cmp
repnz
inc
in
jne
xchg
push
les
jp
xor
sub
mov
aas
das
das
lock
add
cmp
xchg
inc
jl
aad
mov
add
sbb
rolb
inc
cwtl
jl
outsb
xor
iret
push
adc
in
cmp
pop
sbb
lods
mov
mov
adc
dec
mov
je
mov
add
mov
fwait
and
jmp
dec
push
mov
cli
or
jne
sbb
jmp
sub
clc
lret
das
add
lock
sbb
adc
imul
xchg
sbb
movsl
das
test
movsb
fwait
add
pusha
jecxz
mov
dec
xchg
clc
in
mov
adc
mov
insl
out
mov
in
cmp
sbb
push
adc
or
fiadds
cmp
cmp
loop
fisttps
push
pop
ss
in
lods
fidivs
lock
mov
push
int
pop
sub
xor
cmp
outsb
mov
aad
xchg
and
xchg
movl
mov
inc
ja
loope
cmp
mov
lods
popa
push
adc
rolb
aaa
das
out
fisttps
icebp
xor
sub
sub
hlt
je
xorb
jnp
test
sbb
js
inc
xchg
loope
and
rolb
rcl
cltd
lds
adc
cmpsb
jmp
jge
mov
push
cmpsl
xchg
arpl
icebp
out
jg
shrl
leave
mov
gs
inc
sub
cmp
insl
sbb
scas
ds
mov
fwait
cs
lcall
mov
call
lea
mov
pop
fwait
lods
int
mov
adc
pusha
in
pop
mov
les
shll
lds
pop
add
mov
pop
and
add
frstor
sbb
sbbb
mov
xor
inc
xor
icebp
pop
xchg
xchg
mov
int3
pop
fldl
or
inc
xchg
ficoms
adc
dec
stc
jo
mov
xor
xor
daa
das
subb
iret
aad
add
cli
hlt
test
ljmp
scas
inc
pop
in
aaa
outsl
dec
adc
iret
pop
movsb
xor
insl
fwait
lock
cld
jp
repnz
cs
dec
stos
notl
xor
or
bound
inc
and
aam
sub
das
das
jl
out
repnz
and
pushf
fisttps
push
faddl
dec
shlb
cmpsl
std
add
sbb
test
pop
rcrb
pusha
test
pop
ret
add
adc
push
cmp
ljmp
push
and
cwtl
xor
sti
ja
xadd
inc
outsl
mov
xchg
mov
push
mov
push
stos
lahf
pop
sub
das
push
nop
mov
int
lret
push
aaa
sub
psllw
jg
imul
pop
rcll
or
jbe
cmc
inc
pop
inc
fwait
jecxz
stc
cmp
mov
aas
mov
push
mov
daa
adc
dec
lods
mov
fisttpl
xchg
test
cs
or
xor
mov
mov
push
fadds
ss
mov
enter
mov
shrb
lcall
fldl
in
pushf
inc
jge
fwait
add
mov
xchg
mov
dec
dec
bsr
mov
jo
insb
mov
mov
dec
das
cltd
adc
sbb
push
iret
lea
fs
lock
jle
push
in
test
popa
negb
int
es
fmul
pop
xor
adc
scas
mov
mov
add
mov
mov
fwait
cmpl
fucomi
mov
js
cwtl
mov
cmpsl
jo
push
dec
dec
das
data16
mov
mov
cmp
fisubrl
loop
jge
test
mov
inc
test
mov
adc
sub
ds
int
pop
dec
inc
add
fisubs
fldl
add
mov
fcomip
dec
in
cli
clc
fiaddl
lods
loope
adc
push
jp
and
or
sub
inc
lea
movsb
addr16
and
scas
clc
loope
int
push
dec
movsb
jg
loopne
dec
ret
and
mov
dec
mov
mov
fimuls
or
mov
or
push
add
cmp
or
cmp
js,pn
adc
test
fisttpl
cmp
ljmp
rorl
scas
sbb
mov
push
and
aaa
pop
pop
push
aaa
dec
test
cmp
aas
lds
mov
jne
incb
pop
mov
mulb
cmp
sbb
dec
mov
roll
mov
sbb
ss
push
mov
pop
push
mov
push
push
fnstsw
dec
push
sub
sub
add
rolb
mov
fsubrs
mov
rclb
push
dec
fdivr
into
cmc
rcr
add
pusha
into
mov
or
jo
adc
jl
pop
jmp
clc
rolb
mov
cmp
imul
sub
jecxz
adc
mov
add
inc
insb
lds
sub
fldt
cli
loop
or
cmp
pop
das
insb
xor
mov
sbb
xlat
cmc
jb
cmc
lret
xchg
xchg
adcl
or
mov
add
push
adc
in
lcall
pop
jge
rcl
and
popf
aaa
jecxz
cwtl
jbe
ss
loopne
push
aad
dec
les
outsb
or
xchg
rcl
fbld
and
push
xor
testb
aaa
test
add
cmp
push
mov
clc
xchg
pop
xlat
jge
xchg
push
out
or
mov
ss
xor
mov
inc
aaa
add
dec
mov
push
scas
sub
addr16
scas
clc
push
ja
mov
jl
bound
popf
add
les
mov
mov
rolb
sbbb
mov
aas
pop
cwtl
negl
das
mov
dec
pop
mov
cmp
adc
mov
sub
jmp
loopne
mov
sbb
out
mov
pop
fdivrs
push
iret
sbb
jp
mov
xor
out
call
mov
add
inc
roll
sbb
popa
pop
dec
xchg
hlt
push
es
pusha
mulb
inc
pushf
addl
lock
xor
and
rol
sbbl
in
mov
push
cmpsb
cwtl
add
sub
ss
std
sti
fisubrl
mov
mov
mov
insl
inc
cmp
imul
in
mov
shl
pop
adc
movsb
jno
out
mov
pop
clc
fcmovne
inc
cmc
ds
inc
dec
push
es
sarl
jg
and
xor
mov
mov
lods
fildll
add
fwait
repz
in
mov
enter
inc
xchg
add
aas
das
in
fidivl
insb
fsubrp
insb
sbb
mov
sub
mov
std
inc
gs
adc
xchg
fidivs
in
sub
xor
push
rcl
cmp
pop
push
bound
push
sbb
mov
push
xchg
jge
repnz
jbe
addb
jnp
inc
icebp
test
jecxz
stos
xor
daa
dec
js
stos
sub
mov
or
inc
xorb
inc
sub
into
add
iret
add
push
lcall
add
sbb
outsb
aad
xor
mov
stos
mov
test
mov
pop
mov
lods
js
mov
adc
pop
xchg
mov
in
stos
jecxz
fdivrs
je
dec
mov
push
xchg
dec
xchg
fdivrs
fdivrs
aad
rolb
ficomps
xchg
cmp
dec
add
adc
mov
adc
es
sar
push
pop
shll
pop
jo
icebp
inc
push
push
pop
sbb
xlat
aad
stos
fucomi
iret
jg
arpl
dec
add
lds
loopne
xchg
jbe
call
inc
cmp
adc
push
xchg
jb
fstpl
mov
cmc
testb
lcall
int3
rcrl
mov
fistl
cmpsl
jbe
dec
xchg
xchg
fstpt
fwait
adc
pop
sbb
pushl
add
loope
dec
lret
shll
outsl
xor
cltd
cmp
inc
aaa
mov
sar
je
aad
insb
push
inc
jmp
jle
pop
push
jl
jne
mov
divb
insl
push
aad
add
push
or
sub
dec
adc
xor
sub
adc
popf
rcll
mov
push
cmp
jo
adc
aad
push
pop
mov
cmpsb
psrad
loop
xchg
jmp
pop
pop
out
sarb
sub
cmpsl
test
fstpt
mov
xchg
or
cmc
mov
add
or
and
push
inc
call
shll
js
popa
out
iret
adc
icebp
movsl
sbb
lock
mov
dec
jecxz
repz
or
push
rcl
push
jl,pn
scas
push
add
js
sbb
sbb
mov
pop
sbb
and
mov
loop
adc
loop
mov
inc
mov
pushf
jnp
fsubrs
xor
andb
add
movsb
fisttpl
icebp
mov
dec
test
mov
sbb
jno
lret
adc
addr16
and
sub
mov
cmp
lods
or
push
jae
imul
adc
sti
test
fdivs
mov
mov
add
mov
mov
add
daa
insl
mov
mov
inc
lods
xchg
xor
sub
scas
xchg
enter
add
popa
dec
mov
sbb
andl
mov
loopne
fisttpll
add
push
call
or
adc
dec
pop
mov
cli
cli
rcrl
jns
mov
inc
pop
mov
dec
loope
mull
popf
push
mov
push
inc
cwtl
fwait
rolb
imul
add
jmp
mov
jle
mov
stc
gs
outsb
jnp
add
sub
or
test
or
and
cmpsb
mov
push
out
adc
cld
mov
add
pop
dec
add
cltd
push
and
inc
sbb
jp
shrb
jp
stos
jnp
stc
inc
ret
fdivl
sahf
js
xor
cmc
fcompl
mov
mov
xchg
xor
imul
inc
aam
in
aaa
mov
enter
dec
xor
pop
lret
mov
cmpl
add
and
mov
mov
pusha
xlat
pop
pop
sbb
dec
and
push
arpl
rcrl
pushf
bswap
jae
out
mov
das
xchg
pop
mov
adc
xorl
jnp
shlb
mov
jl
fsubr
cmp
ljmp
dec
add
popa
jmp
jmp
sbb
fucomi
mov
or
mov
insb
adcb
mov
pop
xchg
mov
mov
out
fisttps
mov
sub
dec
sbb
je
fwait
jl
add
ljmp
fistl
nop
jb
jns
xchg
sbb
xchg
pop
std
inc
aaa
adc
jecxz
stos
repnz
inc
dec
add
mov
jp
cmpsl
dec
xor
mov
ds
hlt
pop
pop
ret
mov
push
push
popl
xbegin
pop
jle
out
jb
aad
outsl
aas
xchg
mov
inc
in
out
fstpt
imul
movsb
cmp
insb
push
mov
xor
jmp
mov
jge
xchg
jle
repnz
mov
jae
dec
pop
dec
add
sub
mov
ds
sub
inc
in
shll
scas
add
mov
jno
mov
ljmp
outsl
stos
sbbl
inc
and
push
xchg
dec
cmp
mov
sbb
mov
mov
jl
mov
sbb
push
inc
pop
mov
adc
das
dec
rolb
cmp
int
mov
inc
and
bound
mov
in
dec
daa
mov
out
sbb
fcmovnbe
pop
lock
inc
mov
and
mov
cs
xor
cmp
or
loope
lcall
xchg
fidivl
scas
mov
push
test
mov
int3
push
sub
imul
outsl
aam
and
mov
clc
and
shll
or
shll
pop
mov
inc
mov
fisttpll
jbe
jbe
fmull
loope
inc
popf
stos
cmpsb
inc
jbe
sbb
mov
dec
mov
mov
and
xor
pop
push
jg
test
or
cmp
icebp
mov
mov
insl
add
jg
adc
mov
pop
sarb
ret
xor
xchg
mov
sbb
ret
aas
xor
jecxz
or
xor
or
fdivs
adc
adc
add
bound
rcr
ja
sbb
xchg
inc
xchg
jl
xor
lret
popa
mov
fcmovnb
popa
add
push
dec
rclb
xchg
or
mov
js
arpl
add
test
cli
into
leave
sub
sti
pop
jns
cmp
fwait
mov
and
mov
jg
loopne
ret
xlat
mov
or
pop
insb
dec
and
inc
add
aad
cmpsl
jnp
out
mov
pusha
and
push
mov
cmp
subl
sub
xchg
push
push
and
pop
mov
rcl
mov
pop
and
cs
sti
pop
mov
cmp
xchg
sbb
pop
push
js
cs
xchg
sbb
xchg
add
clc
mov
sub
cmp
cmpsb
xlat
adc
and
dec
repz
ret
jb
test
mov
movsb
or
loop
xchg
leave
jmp
dec
inc
jbe
in
xor
or
mov
ds
fcomps
repz
mov
push
hlt
or
add
fisttpll
sbb
xchg
outsb
daa
inc
shld
sbb
movsl
pop
sbb
dec
rcl
lea
jae
int
mov
ja
push
xchg
movsb
dec
adcl
jmp
pop
jns
cmp
rcl
fdivl
dec
outsl
stos
subb
sbb
jmp
xchg
fnstenv
adc
inc
and
out
jno
jmp
std
sbb
or
dec
or
mov
dec
cmp
inc
in
aam
mov
pop
xchg
lret
sarl
std
dec
mov
push
ljmp
jg
test
mov
popa
jge
mov
cltd
jecxz
orl
jmp
inc
int
add
dec
fs
jg
dec
shll
nop
inc
loope
mov
or
test
or
cmpsl
aam
add
iret
push
jmp
inc
mov
mov
mov
xchg
add
mov
push
call
inc
sti
repnz
push
lods
js
insb
bound
mov
lcall
jnp
mov
or
mov
stos
stc
dec
cltd
inc
mov
hlt
inc
je
dec
in
push
xchg
dec
mov
in
loope
jle
jbe
in
inc
adc
loopne
pusha
or
mov
push
add
or
aas
or
xor
push
fdivl
jns
outsb
mov
mov
jo
outsl
pop
outsb
pop
xlat
dec
xor
dec
adc
insl
xor
rcr
les
test
jge
in
xchg
or
call
ljmp
ds
cmc
pop
rorb
daa
and
movsl
fiadds
mov
push
cmpsb
jg
push
pop
and
cmp
mov
xchg
mov
xor
mov
cmp
sbbl
cmpsb
pop
hlt
mov
xchg
test
inc
pop
jae
xor
aad
or
or
aaa
cld
sub
ret
mov
mov
mov
fildll
pop
repnz
push
mov
mov
inc
mov
jns
repnz
xchg
fldl
out
cmpsb
movsb
popa
add
inc
push
sbb
subb
or
mov
xor
xor
mov
or
xchg
and
or
inc
and
push
mov
pop
popf
mov
mov
cmc
sub
or
xor
dec
sub
cli
sarl
roll
aad
dec
call
mov
mov
cmp
jb
xor
fisttps
cmp
pop
shrl
dec
sub
sbb
outsl
mov
xor
mov
cmp
mov
or
dec
cli
lret
mov
or
jge
fistl
push
or
jmp
fdivrs
aam
scas
sub
sahf
push
xchg
je
add
and
cltd
fisubs
lahf
xchg
arpl
mov
push
dec
add
pop
sub
add
ja
mov
lret
mov
mov
in
divb
jge
xor
inc
test
sub
je
je
mov
pusha
push
movd
std
add
pop
outsl
dec
adc
mov
scas
and
jae
cmp
loope
add
imul
fstps
adc
inc
jbe
aaa
push
xchg
or
add
push
outsb
and
and
xchg
inc
lret
add
stos
mov
cmpsl
rorl
xor
loopne
cmpsb
ss
cli
add
pop
mov
leave
and
sub
dec
adc
std
ret
cmpsb
mov
cmpsl
push
add
dec
push
mov
out
int
add
adc
xlat
inc
pusha
notb
cs
inc
push
push
pop
cmp
pop
in
sti
cld
rorb
pop
out
cld
xchg
ljmp
mov
xor
or
mov
dec
sbb
fbld
mov
mov
pop
imul
xchg
pop
mov
or
test
out
dec
insb
jno
xor
add
stc
inc
call
push
ss
mov
aad
adcl
mov
adc
jmp
adc
lcall
cltd
adc
mov
and
sub
xchg
lret
mov
push
inc
adc
rol
xor
mov
mov
pop
shrl
shlb
pusha
fiaddl
das
push
pop
rorb
jecxz
mov
int
into
aam
sbb
mov
push
leave
push
outsb
pop
test
and
dec
sub
xchg
mov
sahf
je
rcl
add
faddl
bound
pop
xchg
inc
cwtl
add
call
push
data16
push
push
dec
pop
inc
clc
inc
stos
push
add
loop
sbb
add
jbe
gs
inc
or
mov
adc
ljmp
cs
sub
xchg
mov
adc
sub
or
mov
mov
add
mov
test
xchg
mov
jo
adc
ret
sub
js
jl
fstpl
jmp
imul
clc
push
sarb
icebp
pop
clc
rcrl
mov
jnp
add
sbb
shl
lock
mov
loop
test
icebp
xchg
ljmp
iret
in
adc
inc
sahf
push
mov
mov
mov
ret
mov
mov
sub
pop
pusha
mov
push
lcall
dec
cmp
aaa
mov
xor
sbb
adc
aam
movsb
movsl
pop
push
jecxz
sbb
jo
jo
sbb
jecxz
pop
mov
add
orl
cmpb
inc
sub
cltd
test
scas
jb
mov
lds
cli
cmpsb
testl
push
les
int3
test
push
icebp
jg
clc
jg
ljmp
add
or
outsl
fidivs
divb
clc
cmp
es
inc
mov
and
aad
jle
mov
mov
fwait
jo
xchg
scas
jns
insl
push
ljmp
sahf
iret
or
or
mov
mov
add
call
lea
or
mov
xor
insb
repnz
sbb
int
push
pop
clc
sbb
lods
lfs
fdivl
cmpsl
or
fs
xchg
sub
mov
pop
jnp
stc
dec
mov
daa
push
lea
jg
mov
add
push
loop
mov
xlat
and
gs
xor
mov
add
pop
mov
adcl
sbb
add
push
notb
add
adc
fadds
testb
inc
mov
mov
mov
xor
ret
loope
aam
les
cmpsb
mov
dec
push
call
xor
push
rclb
pusha
ret
mov
mov
jp
pop
sub
int
clc
pop
mov
gs
sub
dec
or
cld
movsl
rorb
hlt
or
adc
mov
sub
out
xchg
daa
ret
adc
mov
into
mov
leave
xchg
sahf
stos
aaa
je
mov
mov
push
push
xchg
popa
xchg
or
inc
xchg
addr16
std
pop
roll
fcompl
or
fwait
xchg
mov
add
fidivrs
sbb
adc
mov
mov
push
jns
daa
or
push
pushf
adc
dec
xchg
mov
cmp
mov
jecxz
dec
popa
adc
pop
fwait
cs
push
inc
test
imul
test
cs
stos
test
fadds
pop
or
pop
lock
xchg
ljmp
inc
test
xchg
mov
pop
int
inc
mov
mov
daa
icebp
cmp
inc
sub
mov
fimull
jge
inc
mov
aam
popa
cmpsl
ja
outsb
outsl
jp
add
xchg
mov
cs
xor
mov
arpl
add
call
fs
daa
sbb
sub
inc
and
lods
ljmp
jle
pop
inc
inc
scas
adc
add
or
das
xchg
cwtl
jecxz
push
mov
stos
xchg
xchg
lea
adc
sahf
loope
push
inc
pop
jno
inc
ljmp
loop
mov
mov
mov
test
mov
and
shl
push
pop
stos
fdivl
aaa
adcb
in
ds
cli
ret
dec
out
mov
jecxz
sbb
mov
and
dec
push
pop
sub
jb
pop
sti
dec
xchg
mov
adc
mov
or
adc
push
test
subb
iret
fwait
mov
clc
add
mov
notl
xor
cmc
cmp
and
mov
test
test
ja
cld
sbb
push
or
mov
push
rcll
mov
cmp
ds
xor
cmp
outsl
xchg
nop
addr16
ficoml
frstor
cmpsb
icebp
inc
sti
out
jno
add
nop
push
dec
and
outsl
pop
insb
test
mov
lcall
mov
mov
jne
dec
jbe
jge
out
roll
and
dec
sbb
dec
jmp
cld
int
sub
fwait
add
jp
iret
mov
std
add
clc
pop
xchg
repz
in
lcall
inc
nop
hlt
lea
lret
inc
sub
dec
mov
sub
cmpsl
loopne
movsl
push
jmp
mov
push
nop
outsb
inc
xchg
xor
ret
in
mov
pop
clc
lahf
and
mov
ret
pop
inc
fstpt
lock
mov
sbb
inc
ret
cmp
jg
insl
cltd
movl
out
sbb
lock
lcall
sbb
ds
lds
shll
jbe
roll
add
daa
xor
daa
aaa
sub
loopne
cld
movsl
xchg
pop
punpcklbw
cmp
sbb
mov
sub
std
xchg
sti
mov
adc
ljmp
or
lds
insb
xor
mov
add
lahf
dec
sbb
ret
jno
mov
test
mov
add
fsub
je
adc
out
mov
xor
scas
fistpl
insb
sub
xchg
pusha
push
and
inc
aam
xlat
or
jmp
mov
ja
outsl
movsl
pop
pop
lods
scas
scas
and
or
adc
mov
movsb
fadd
aaa
cmp
push
aad
sub
test
je
iret
loop
sbb
cmpsb
push
cs
lea
inc
fistpl
lcall
push
adc
xchg
xchg
jne
jg
and
add
inc
loop
loop
lds
sarl
xor
cmp
cmpsb
loop
mov
shll
or
ficomps
mov
or
adc
jmp
and
clc
inc
mov
pop
adc
insl
subb
testb
mov
xchg
shlb
mov
jbe
notl
push
inc
stos
mov
jo
pop
sbb
popl
pop
cltd
dec
push
cmp
and
cmpl
fisttpl
mov
mov
pop
adc
stos
lret
cli
fldcw
mov
cs
int3
mov
pop
stos
inc
popa
aam
jl
inc
cmc
and
frstor
sbb
aad
sbb
daa
loop
add
add
cltd
inc
mov
xor
and
mov
pop
xchg
je
and
cmp
xor
jne
push
pop
sbb
xchg
cmpsl
cmp
mov
mov
push
sbb
push
adc
loope
lahf
jle
add
mov
cmc
cmp
fwait
test
sbb
mov
lds
lea
clc
pop
inc
xor
shrl
sbb
test
call
enter
sbb
fdivr
fistpll
test
cltd
or
fstpl
icebp
out
fldt
xor
iret
rcll
or
mov
mov
adc
lods
call
out
fmulp
mov
xor
pop
sub
pop
aam
sub
movsb
mov
sbb
dec
aad
cmp
lods
sbb
bound
push
sbb
jle
fsubrp
xchg
es
enter
sub
cs
mov
jmp
test
sbb
mov
ret
mov
lea
mov
xchg
pop
mov
and
cmp
jne
jle
int
pushw
pop
push
cmp
hlt
setge
shrl
mov
mov
loopne
rclb
push
movsb
pusha
xorl
push
push
ss
add
scas
pop
cli
adc
xchg
ja
mov
icebp
push
mov
sbb
sub
add
icebp
mov
xor
enter
shrl
xor
xchg
test
and
nop
xchg
cmp
in
loope
pop
fimuls
mov
imul
jo
loope
dec
xor
and
push
push
fsubrl
ret
jns
stos
gs
pusha
addr16
leave
je
scas
rorb
mov
das
mov
mov
data16
imul
fstl
cli
in
add
cli
sub
xor
aas
out
and
cld
cmpsb
aaa
add
incb
sbb
and
cwtl
and
mov
push
dec
push
or
out
sub
shlb
ja
enter
lods
jecxz
hlt
cmpsb
pop
mov
ret
int
sub
jno
pop
jmp
jb
scas
je
push
push
call
outsl
or
popa
xchg
xchg
and
push
mov
subl
push
mov
imul
mov
sbb
sub
leave
mov
mov
loope
inc
repnz
ds
mov
push
test
and
int
cmc
insl
pushf
bound
outsb
sbb
ffree
das
jl
into
mov
xchg
rcll
pop
cmp
fcomps
cmpsl
jl
movl
mov
imul
mov
pop
pop
push
adc
or
movsl
dec
out
cmp
cmp
ret
xchg
or
or
mov
aam
push
sbb
push
iret
cwtl
or
sub
test
cmp
dec
movsl
je
pop
mov
mov
stos
cld
nop
fcompl
mov
lds
sub
jle
sbb
push
outsl
pop
push
in
push
pop
inc
bound
push
shlb
loope
rolb
xlat
daa
adc
call
fstpt
outsb
mov
mov
push
cmpsl
ljmp
fadds
into
jne
sbb
dec
mov
mov
es
add
xorl
cld
outsl
jne
arpl
dec
push
dec
adc
je
mov
add
fucomi
insb
popa
xchg
movsl
pusha
xchg
out
subb
inc
fdivrl
xor
dec
xor
outsl
cmpsl
ret
sbb
push
cmp
ficompl
dec
add
imul
inc
call
xchg
mov
and
lods
js
jge
xchg
add
mov
mov
adc
dec
das
and
fistpll
enter
inc
push
aad
dec
nop
fidivl
jne
xchg
sub
js
rolb
lock
fdivr
nop
fdivs
cmpsl
loopne
pushf
xchg
jne
in
pop
in
test
ret
cmp
pusha
call
adc
lcall
mov
in
jge
imul
adc
inc
jg
dec
ljmp
mov
outsl
stc
dec
mov
cmp
inc
js
sub
push
dec
enter
xor
adc
outsl
ret
xor
xchg
lock
sub
fcompl
mov
test
xchg
hlt
mov
in
mov
sbbl
shlb
inc
lea
in
das
mov
sbb
or
inc
mov
rclb
inc
add
aam
mov
out
cmp
mov
iret
sbb
ss
lods
ljmp
jecxz
dec
sbb
inc
insl
adc
mov
mov
ljmp
jns
xor
out
mov
push
sub
push
pop
cmp
push
movb
pop
enter
mov
inc
push
pop
outsb
or
push
and
dec
imul
sub
movsb
ljmp
in
and
ror
inc
xor
pop
adc
std
xchg
mov
fcom
roll
mov
and
or
xor
or
pop
mov
fsubs
cmp
mov
add
jle
mov
div
or
sbb
sub
insl
or
icebp
or
or
lret
xchg
mov
push
add
fadds
xchg
test
pop
pop
inc
jp
mov
push
jb
out
add
jmp
cmp
stos
ds
jo
pop
call
ret
sub
adc
pop
xor
repz
push
jo
outsb
roll
das
nop
inc
and
push
jne
shlb
sbb
pop
sahf
movsl
mov
iret
push
es
pop
pop
ja
rcl
ja
sbb
test
rcll
sub
pusha
inc
cwtl
stos
fisttpl
jno
fwait
arpl
ret
sarl
rorb
pop
pop
clc
cmpsb
int
int3
inc
dec
rorb
idivb
pop
xchg
add
push
ret
add
in
push
mov
aam
jp
insl
rorb
divl
dec
les
and
mov
jns
in
pop
sbb
mov
fistpll
ret
ja
and
cltd
sub
adc
insb
mov
js
ds
mov
cld
insb
sbb
add
push
inc
cmpsb
mov
jle
or
aad
cli
xchg
cmp
inc
outsl
cltd
pop
outsb
mov
cmp
icebp
and
out
or
subb
sar
lcall
adc
or
fwait
insl
mov
test
inc
dec
mov
mov
push
je
gs
xchg
mov
mov
sbb
sbb
loop
ljmp
addr16
push
cwtl
repnz
sub
sub
ret
sub
sub
je
sbb
push
push
xchg
ror
jle
aaa
aam
xchg
jge
jecxz
movsl
dec
jb
mov
les
xor
jmp
lods
jmp
and
sub
jmp
ret
dec
lret
es
push
and
loopne
mov
rcrb
mov
jmp
scas
out
lcallw
pushf
ffree
aaa
ljmp
scas
mov
repnz
aam
stos
mov
js
jae
inc
in
stos
lods
or
mov
call
xchg
mov
ljmp
dec
mov
cld
jne
pop
add
testl
adc
lock
insl
stos
stc
jg
scas
cmpsl
mov
enter
fs
mov
jbe
enter
pop
into
xor
xorb
sbb
jecxz
icebp
ficoml
add
pop
fstpt
clc
xor
mov
test
arpl
dec
inc
jns
fldcw
std
fbstp
cltd
test
jecxz
xor
push
sub
or
int3
push
dec
fsub
push
movsb
cmp
imull
shll
mov
mov
xor
mov
cmp
or
mov
fadd
inc
loop
clc
sbb
sbb
clc
inc
jecxz
mov
mov
clc
cmp
pop
lret
lock
pusha
or
lds
xchg
into
rorb
mov
test
mov
add
jecxz
call
repnz
ljmp
mov
rolb
lcall
jp
fbld
mov
jb
sub
cmp
xchg
pushl
pop
xchg
cltd
sub
aaa
ss
and
sti
inc
lret
dec
dec
mov
mov
mov
das
pop
es
clc
add
fisubrs
aaa
fimuls
ljmp
jle
int
js
inc
adc
loop
out
enter
xchg
xor
xlat
sub
mov
dec
jmp
mov
add
jmp
add
out
movsb
dec
stc
push
insl
inc
imul
leave
loope
mov
les
cmp
mov
bound
xor
loope
push
jo
ret
sbb
pop
xor
xchg
and
cmp
outsb
cli
sub
orb
aam
xchg
je
cmc
in
add
mov
pusha
mov
adc
lds
mov
xor
stc
arpl
mov
dec
and
cmp
enter
adc
mov
and
adc
addr16
popw
pop
shll
jecxz
adc
mov
scas
jo
push
aaa
aad
loopne
iret
movl
cld
stos
mov
pop
xchg
adc
shrl
lret
mov
int3
int
jecxz
cwtl
sbbb
xor
lea
xor
jg
test
rcrl
add
sub
cmp
sub
push
out
fmuls
pop
cli
stos
fsts
dec
xor
enter
in
and
jno
and
jo
fsub
test
sub
mov
insl
xlat
fdivrl
andl
mov
bound
dec
pop
mov
xor
test
stos
sub
or
adc
or
or
mov
xor
sbb
push
mov
mov
out
dec
mov
test
or
push
mov
mov
stos
adc
or
mov
lods
outsl
lds
mov
test
dec
add
mov
and
outsl
cmp
std
adc
push
cli
pusha
inc
rcll
in
sbb
push
aam
adc
or
rcrl
lock
pop
pop
push
scas
test
pop
mov
insb
cltd
insl
jne
clc
test
or
aam
aas
pop
mov
jo
mov
xor
xor
in
jnp
mov
jg
ficoml
ret
gs
ret
or
inc
and
popf
pop
mov
cs
call
push
xor
cld
sub
jae
xor
adc
inc
xor
sbb
inc
std
xor
std
dec
fdivrs
dec
pop
in
outsb
fcmovnb
mov
mov
mov
add
pop
dec
jbe
das
cld
repnz
mov
out
es
dec
ja
mov
loope
xchg
sbb
adc
inc
test
or
hlt
mov
setne
inc
xchg
cmp
mov
mov
in
or
mov
jp
pxor
xorb
lods
ret
add
inc
leave
xchg
lods
push
or
stos
and
or
inc
and
mov
fidivrs
jecxz
addr16
and
insl
mov
pop
repz
mov
cmp
xchg
or
rcrl
test
adc
aas
mov
leave
jp
imul
stos
xor
mov
or
out
push
rcll
fnstenv
pop
js
push
jbe
aam
or
or
or
jmp
fnstsw
jle
dec
add
call
add
jmp
or
mov
dec
pop
jae
out
fildl
add
dec
jp
xorl
push
pop
dec
aad
xchg
pop
mov
or
loopne
loope
lods
clc
pop
pop
call
xor
loop
add
inc
in
inc
dec
jecxz
int3
inc
xor
movb
lods
adc
in
jno
cs
out
bound
fistl
push
js
or
aad
out
adc
push
add
mov
cld
outsb
out
scas
fisubs
mov
lret
hlt
pop
push
bound
fisubrl
sbb
dec
jne
inc
mov
shrb
or
into
adc
test
addr16
mov
fiaddl
mov
fildll
cmp
xchg
mov
cmp
xchg
daa
sbb
aam
fisubrl
mov
push
test
adc
into
fldl
mov
sub
mov
dec
ja
pop
fidivl
shlb
adcl
push
loopne
jecxz
lods
scas
lea
adc
adc
cmpsb
jb
or
sbb
mov
repnz
rcrb
adc
ds
nop
mov
pop
js
loope
add
test
sbb
test
out
pushf
jmp
push
lret
ffreep
pcmpeqw
loopne
sbbl
or
cld
cs
mov
rcll
loope
mov
jno
adc
inc
xor
test
loopne
sbb
repz
stc
push
and
in
cltd
jle
loopne
mov
cmp
jecxz
imul
or
mov
push
and
pop
inc
xchg
gs
xchg
and
sbb
int3
sbb
call
ret
push
out
in
add
pusha
push
out
sbb
das
xor
js
in
jp
movsl
leave
lret
imul
sti
xor
orb
jmp
outsl
inc
mov
inc
xchg
and
rcrl
inc
jnp
sbb
aam
in
mov
inc
dec
lahf
add
pop
sarl
sub
xor
jo
xlat
and
add
lret
xchg
daa
adc
xor
out
clc
andb
clc
je
hlt
mov
sub
shlb
fidivs
xchg
and
push
jl
loop
movsl
inc
mov
mov
push
addr16
sub
and
push
or
add
jns
push
mov
faddl
mov
cmpsl
test
shll
pop
mov
test
cmp
xchg
add
mov
mov
xor
arpl
fsts
or
cmpsb
pop
mov
jnp
xchg
and
das
pusha
rcl
imul
mov
cs
scas
filds
lock
xchg
fcmovne
fildl
dec
jno
insl
mov
clc
lock
ja
sub
cmp
test
cmp
dec
mov
mov
pop
outsb
jg
sub
and
push
shl
push
mov
mov
pushf
test
xchg
pop
rol
sub
popa
fwait
insl
push
into
adc
bnd
lahf
inc
add
test
lods
je
fistpl
shll
mov
adc
aaa
fnsave
pop
jb
adc
int
aaa
data16
das
aam
sub
pop
insl
clc
sub
mov
and
lods
fidivrl
clc
jb
dec
pop
int
xchg
mov
les
ja
fs
iret
daa
mov
ds
je,pt
cmpsb
lock
mov
ret
mov
push
adc
flds
fimuls
add
test
jg
stos
cwtl
push
loop
aaa
adc
gs
jo
inc
mov
adc
pop
mov
sbb
mov
jg
mov
mov
mov
ret
mov
jb
push
push
in
dec
mov
mov
sbb
and
stos
and
sti
mov
inc
lds
addr16
cmc
or
xorb
cmp
sbb
aam
and
push
loope
stos
mov
scas
xchg
test
clc
adcb
shl
cld
in
inc
inc
sub
cmp
xor
xchg
add
mov
movsl
je
int
cmp
arpl
outsb
cmp
scas
rcrl
into
repnz
jg
or
mov
xor
push
je
mov
and
pop
push
mov
faddp
stos
push
shl
cmp
and
jl
dec
fbld
mov
int
pop
xchg
xor
lcall
xchg
mov
push
cli
adc
mov
outsl
arpl
cmc
pop
fnstenv
sbb
std
push
sbb
sbb
mov
pop
pushf
inc
repz
sub
popa
mov
adc
rolb
push
cltd
add
cmp
cmp
movsl
pop
rolb
movsb
push
dec
nop
lret
in
adc
cltd
inc
out
cmpsb
xchg
sub
sti
mov
in
and
xlat
fildl
aas
fadd
or
jg
pushf
pop
ret
mov
cwtl
frstor
insb
sbb
ret
push
or
hlt
cmpsb
movsl
pop
push
iret
jmp
or
inc
shr
pop
rorb
repnz
jg
push
cmc
jns
ds
ret
pop
pop
scas
leave
inc
inc
cs
pop
sbb
clc
pop
loop
addl
adc
sub
lods
add
loopne
je
in
pop
jns
cmp
hlt
scas
neg
or
pop
test
rolb
aaa
mov
icebp
mov
jne
out
mov
adc
sub
jle
stos
std
insb
fdivs
xchg
add
faddl
sti
lea
adc
popf
jnp
jns
stos
inc
or
stos
out
inc
xor
dec
xorl
cmp
sub
rcrl
xor
jl
movsl
sub
sbb
bound
daa
dec
dec
aam
inc
xchg
mov
daa
addw
push
add
or
dec
insb
subl
xchg
decl
sbb
enter
fisubs
sub
loope
fldl
lock
jl
sbb
data16
push
push
test
jge
sbb
sub
ret
jg
aaa
sbb
mov
jmp
int
push
popa
addl
loope
rorl
icebp
shrb
mov
cld
push
ja
and
outsl
add
pop
into
dec
fistpll
push
inc
add
inc
mov
andb
lds
fldl
push
ret
pop
out
inc
aaa
inc
mov
sub
adc
inc
sub
fcmovb
sbb
adc
push
sti
ljmp
idivl
cli
mov
jp
cli
mov
xchg
test
jno
push
push
in
cmp
mov
insl
outsl
cld
xchg
cmp
fs
push
dec
mov
mov
add
inc
cs
ret
pushl
rorb
ret
jmp
mov
data16
sbb
mov
lds
aaa
ds
lret
mov
cmp
icebp
and
pop
inc
inc
dec
je
adc
or
in
cmpsb
add
lahf
add
popa
and
push
mov
mov
icebp
aas
clc
lret
sysenter
and
mov
jo
dec
loopne
std
sub
imul
mov
outsb
mov
adc
test
xor
mov
sbb
cwtl
push
add
inc
das
cmp
test
es
ss
dec
adc
inc
lock
jnp
sbb
ljmp
xchg
sbb
jns
in
loop
xchg
pop
jno
sub
push
jne
push
ficompl
es
dec
add
cs
push
in
incb
jnp
idiv
outsb
rolb
xchg
lds
sbb
dec
ret
lret
es
add
fucomp
out
cltd
push
cs
test
daa
dec
jmp
jle
fldl
dec
or
les
adc
pusha
xorb
mov
xchg
and
enter
sti
sti
stos
cli
test
inc
out
scas
pop
xchg
add
xor
int3
repz
mov
xchg
fs
pop
in
clc
inc
inc
mov
shlb
mov
in
mov
shrb
xchg
mov
daa
jb
push
inc
inc
subl
outsb
cmp
repnz
add
mov
mov
push
mov
movsb
inc
jge
or
jne
mov
sub
ret
sar
jns
sar
push
mov
mov
ret
mov
pop
mov
pusha
inc
call
std
outsb
jb
add
or
icebp
ret
or
xorb
xor
outsb
aas
xchg
adc
mov
movsl
inc
inc
cmp
adc
adc
jmp
sub
jo
add
cmp
insl
xchg
test
jp
fidivl
push
mov
shll
test
ficoml
les
mov
push
incb
sub
aaa
call
pop
mov
xor
add
jmp
xchg
xlat
jle
nop
xchg
xchg
popl
sbb
dec
icebp
jae
imulb
scas
ds
xor
outsl
and
mov
jne
shlb
add
repz
imulb
mov
daa
nop
xchg
aaa
ss
mov
out
push
fists
mov
fsubrp
test
dec
fs
imul
mov
lcall
je
mov
int3
pop
ss
repz
inc
pop
popf
fidivrl
std
mov
mov
call
int3
push
inc
rorb
add
ffreep
mov
mov
add
shll
ss
mov
les
push
add
pusha
adc
xchg
outsl
xor
jmp
imul
add
mov
pushf
fildll
stos
mov
mov
cld
ljmp
shl
mov
dec
xchg
clc
or
push
mov
xlat
and
cld
add
test
loop
xchg
add
flds
jbe
push
mov
sub
pop
pushf
orb
arpl
sub
push
pop
movsl
icebp
dec
mov
push
std
outsl
xor
fcmovb
sub
sbbl
call
inc
pop
shrl
xor
outsb
cmp
jo
sub
clc
in
pop
lods
or
jp
fsubl
adc
sbb
mov
mov
adc
in
cs
ffree
mov
rorb
repz
mov
cmc
insl
imul
arpl
std
test
dec
movsb
push
sahf
fidivl
dec
clc
mov
hlt
sbb
cmp
shlb
or
push
mov
sub
movsl
mov
rcrl
test
daa
out
cs
cvtps2pd
add
iret
ljmp
outsb
clc
inc
mov
mov
jbe
clc
and
push
sub
jmp
push
pushf
loope
sub
jmp
push
dec
xlat
and
cmp
inc
das
sbb
fs
cmpsl
sub
push
push
aam
jbe
aam
jg
pop
imulb
ret
dec
orb
icebp
loop
mov
mov
fwait
loope
fadds
push
fisubs
jno
jge
cmc
mov
pop
mov
lods
rep
xor
jle
jbe
imul
pop
mov
lea
fcmovnbe
xchg
or
mov
cld
mov
jl
jns
clc
rol
imul
pop
outsl
sub
add
cmp
mov
in
or
push
shlb
mov
loopne
push
push
or
mov
xchg
push
in
lods
jns
mov
mov
sub
loope
mov
daa
pop
inc
clc
xor
fdivrl
jecxz
pushf
cltd
adc
xor
or
mov
mov
test
or
dec
leave
insl
sbb
scas
rcll
inc
inc
mov
sbb
mov
andl
shll
dec
sysexit
aad
or
lock
lds
pop
sbb
mov
mov
imul
and
movsl
gs
cld
jnp
pop
xorb
add
fildl
sub
mov
jmp
aam
in
dec
mov
jecxz
ljmp
into
cmc
int3
pop
scas
pop
nop
adc
dec
xor
mov
fidivrl
sbb
xchg
sar
inc
mov
dec
mov
cmp
nop
mov
inc
out
es
loopne
inc
push
mov
xchg
dec
jo
mov
mov
mov
sub
mov
xchg
jp
fnstsw
lcall
outsl
dec
inc
popa
mov
rcll
or
inc
icebp
push
mov
xchg
imul
push
les
cmp
sub
mov
or
xor
dec
icebp
in
jmp
cmp
loopne
lods
jbe
fldenv
pop
sti
outsb
push
arpl
jmp
out
call
jo
sbb
pop
and
lret
jne
add
push
pushf
push
jbe
das
inc
fnstenv
sub
inc
insb
fnstsw
push
xlat
andl
cmp
mov
ja
sbb
loope
push
js
jmp
lea
ret
add
lahf
insb
jmp
xor
mov
aam
addl
rolb
pop
adc
pushl
popa
inc
add
test
dec
adc
xchg
inc
sbb
std
mov
loope
sbb
std
adc
jl
mov
scas
mov
pop
dec
sbb
sbb
cmp
mov
adc
push
add
clc
data16
jg
push
shlb
mov
mov
cmpsb
xchg
scas
std
inc
mov
cli
sti
or
loope
sbb
stc
inc
or
xchg
aaa
sub
dec
add
sbb
dec
jno
sub
pop
cmpl
jl
push
mov
in
out
dec
cmpl
push
cwtl
pop
jge
push
push
cmp
or
xchg
pop
pop
push
adc
das
mov
mov
lods
int3
cmp
inc
mov
add
bound
sbb
adc
add
decl
popw
push
je
push
dec
jp
enter
push
dec
push
insb
mov
xlat
jns
ss
dec
rcrb
clc
sbb
ja
sub
int3
xor
int
jnp
xorl
cld
popf
mov
pop
mov
jp
insl
push
lahf
int
stc
mov
das
push
mov
sub
jb
or
xor
insl
leave
adc
sbb
push
mov
sub
clc
and
iret
test
loopne
lock
mov
adc
stos
pop
xchg
pop
add
sti
push
fnstenv
cli
pop
fdivs
xor
adc
ret
push
push
cmpsb
outsb
aaa
insl
jmp
gs
out
in
in
mov
sar
mov
and
ret
outsb
jne
mov
pop
shll
pop
mov
jp
mov
popa
mov
les
fistpl
jb
ret
push
and
fisttps
inc
mov
mov
test
or
jno
test
add
pop
and
mov
push
negl
out
add
sbb
mov
test
loopne
daa
xchg
pop
adc
inc
sbb
jg
pop
mov
fisubl
popa
jno
pop
addl
pop
loop
add
fs
jnp
dec
mov
xor
pushl
dec
add
jno
bound
scas
andb
cwtl
and
cmpsl
and
leave
pop
mov
or
mov
clc
push
dec
ffreep
ret
popl
pop
sbb
fs
fdivrp
popa
bound
testl
adc
xchg
xchg
dec
jne
add
mov
mov
orl
pop
push
mov
les
in
insb
ja
aad
jb
inc
pop
or
ds
push
sbb
lds
loope
mov
pop
push
inc
lds
jg
lods
clc
loopne
shrl
in
sub
ds
pop
mov
mov
insb
imul
incl
mov
adc
sub
sbb
mov
sbbl
pop
sahf
inc
test
movsb
das
inc
movsl
mov
jns
in
outsb
mov
lods
and
lret
cmpsl
rep
dec
loopne
pop
mov
sbb
cli
test
roll
inc
leave
mov
xchg
sbb
ss
or
ret
lds
inc
aam
outsl
insb
push
mov
xchg
sarb
inc
xor
lods
mov
xchg
cli
adc
push
push
jo
fucomp
adc
or
push
mov
mov
data16
call
push
aaa
jl
xchg
xchg
pop
icebp
mov
push
mov
out
imul
pop
mov
sub
adcl
inc
aaa
in
jbe
jmp
sub
push
xchg
jge
xor
pushf
inc
daa
adc
mov
and
pop
orb
xchg
dec
mov
rcll
shlb
push
stos
jmp
nop
jne
les
jp
jg
xor
sbb
sbb
jl
ja
clc
xchg
cmp
imul
inc
mov
mov
fistps
jo
sbb
xor
les
dec
shrl
scas
adc
sbb
and
orl
aad
cmpsb
mov
out
dec
xchg
aam
into
sbb
mov
clc
jg
or
push
test
inc
mov
js
xor
sub
out
and
push
popf
adc
sub
adc
ljmp
mov
jnp
stos
pop
lcall
mov
push
mov
movsb
adc
popf
pop
es
jmp
fnsave
daa
in
add
fwait
pushl
stc
stos
push
sti
push
mov
mov
xchg
das
adc
and
adc
mov
andb
sar
in
cmp
pop
sbbb
lret
inc
jnp
das
icebp
add
inc
xor
dec
xor
jmp
jo
xorl
cmpsl
adc
das
mov
lock
outsl
mov
push
in
mov
test
fcomip
sub
jmp
pop
je
test
call
sbb
iret
call
pop
test
hlt
cltd
mov
insl
imul
mov
aas
jb
push
adc
inc
xchg
xchg
mov
add
int
adc
or
clc
inc
rcll
sbb
lock
pop
cld
fidivl
pop
sub
out
fcomp
pop
or
shll
adc
adc
cs
add
or
sub
fcom
dec
push
xorb
fidivrs
lea
fiadds
or
adc
jp
jnp
sub
inc
and
sbb
jp
and
pop
je
and
insb
shlb
dec
inc
xor
and
adc
adc
lods
adc
dec
pushl
test
enter
out
rcll
sub
sub
insb
movaps
mov
stos
jmp
fistpll
inc
aam
cmc
ja
push
mov
rorb
lret
or
pop
sbb
test
mov
lock
fisubrs
push
push
jo
add
out
out
mov
sbb
mov
dec
xor
nop
mov
bound
push
push
and
in
hlt
xchg
fnsave
cmp
rep
add
mov
cmp
lds
push
ljmp
mov
pop
sbb
or
ficompl
dec
shll
int3
ret
dec
cld
in
xchg
and
fcompl
cmp
mov
inc
fsubrs
add
ja
in
int
repnz
cli
int
sahf
jl
fs
ljmp
push
popf
decb
cmp
ficompl
loope
or
sbb
mov
call
iret
mov
or
fdivrl
or
fwait
movsb
sbb
pop
or
outsl
cltd
in
pop
movsb
dec
bound
pop
aad
mov
aad
jle
pusha
das
mov
pop
sub
xchg
dec
adc
inc
jae
bound
mov
lock
cs
stos
insl
dec
cs
call
stos
in
push
mov
inc
fldl
sbb
cmp
fadds
jbe
orl
push
jmp
imul
sbb
daa
cmpsl
sub
or
push
cli
fsubrs
lahf
add
adc
xchg
mov
dec
xor
ds
das
or
sarl
mov
aaa
mov
mov
cmpsb
fisubrl
filds
daa
sub
pop
cli
test
cli
test
jns
pop
add
movsb
dec
mov
and
inc
mov
loope
pop
cmp
bound
fwait
sbbb
ja
test
adc
mov
mov
mov
add
arpl
or
adc
out
mov
add
jle
pop
adc
inc
inc
aaa
fdivrl
mov
sbb
stos
andb
mov
scas
push
or
inc
dec
jmp
lea
call
sbb
outsl
add
pop
add
sti
push
aam
mov
pushf
inc
dec
dec
test
mov
or
shrb
test
popl
ljmp
fisttpl
mov
xor
push
mov
test
and
sbb
mov
xchg
fwait
xchg
movntps
push
addl
inc
fwait
sub
push
sbb
dec
dec
dec
movsl
add
mov
mov
icebp
push
pop
xchg
adc
adc
adc
ja
pop
and
sub
jle
popa
test
clc
xchg
call
jne
subb
cmp
rolb
and
cmp
sub
inc
pop
add
inc
fdivrs
xor
mov
cld
leave
cmpsl
push
xor
fwait
cmp
sahf
jnp
adc
mov
push
push
es
sub
hlt
push
jecxz
jo
in
jl
test
jle
pop
pop
push
xor
mov
test
divl
inc
mov
sub
xchg
adc
mov
movsl
or
clc
mov
rcll
mov
jb
mov
fisttpl
dec
sub
lods
push
cvtps2pd
sub
jmp
cmp
lods
pop
sub
add
pxor
dec
dec
or
mov
movsl
andl
adc
mov
outsl
sbb
sub
push
mov
out
leave
cmpsb
dec
leave
mov
aad
subl
mov
in
and
push
into
mov
jge
pop
ss
data16
inc
ja
pop
pop
clc
das
sub
or
test
xor
ss
movsb
sub
mov
shlb
mov
xor
icebp
jbe
ret
pop
mov
gs
xorb
rcr
mov
mov
inc
stos
ret
les
mov
test
adc
sar
in
sbb
mov
xor
mov
insb
mov
repz
cmpsb
mov
je
ds
aas
xchg
int3
or
inc
loope
sub
aas
add
cmp
ds
out
loop
jl
sti
filds
sbb
aad
push
or
inc
jmp
imul
data16
pop
jmp
sub
mov
enter
jb,pt
in
inc
fs
movsb
pop
out
jbe
mov
rcll
sbb
or
adc
lods
cs
aaa
sub
ss
fidivrl
and
fildl
sarl
sub
ret
push
jbe
jp,pt
push
mov
rcrl
xor
pop
dec
jns
daa
std
sarl
icebp
loopne
and
std
jmp
addb
ljmp
aad
pop
dec
adc
lods
mov
adc
aaa
hlt
sti
mov
and
mov
orb
fs
and
mov
addl
jg
out
scas
es
jne
outsl
inc
pop
xchg
mov
pop
sub
or
int
lret
stos
movsl
fwait
and
jg
xchg
js
ficoml
iret
or
cmp
mov
or
arpl
movl
into
jmp
fistpll
xchg
scas
fldcw
into
test
outsl
push
and
push
and
jbe
jmp
and
xorb
mov
dec
fisubrl
mov
stos
jo
mov
adc
mov
andl
shrl
rcll
push
mov
pop
pop
jnp
das
jmp
sub
sub
dec
add
add
orb
jl
lret
xlat
mov
and
iret
jae
push
jno
inc
lods
cli
mull
push
fidivl
xchg
or
outsb
inc
cmpsb
insl
clc
add
lds
dec
call
lods
sub
lea
jge
ja
lret
lds
pop
xor
mov
fbld
xchg
or
cmpsl
adcb
movsl
mov
fmull
mov
and
test
xchg
push
jo
cmpsl
or
mov
sub
mov
inc
test
test
mov
sbb
cli
jp
mov
ss
cmc
cs
add
xor
mov
ja
inc
mov
pushf
or
int
and
gs
mov
inc
jge
daa
movsl
ss
mov
stos
mov
arpl
sbb
pop
sbb
jg
shll
adc
loope
mov
mov
bound
jne
sti
xchg
mov
inc
sbb
add
fldl
je
and
mov
mov
xor
out
mov
popf
call
jno
icebp
cmp
shrl
mov
add
pop
aad
imull
xorb
aad
mov
pop
es
pop
jg
mov
cmp
and
enter
mov
std
cs
push
inc
pop
push
in
jo
push
stos
or
pop
cmp
leave
cli
push
sbb
add
mov
xlat
insl
mov
mov
adcl
or
rcrb
xlat
push
and
lods
aad
jp
frstor
xor
lret
inc
mov
mov
ret
loopne
repz
cmp
imulb
mov
pop
ja
fs
div
or
sub
aam
popa
jecxz
add
outsb
add
cmpb
add
add
negb
xchg
sub
je
pop
lahf
test
mov
pop
into
pop
xorl
mov
fisubrs
push
jno
lret
cmpsb
popa
mov
lahf
or
push
mov
jg
test
ss
cld
in
imul
mov
sub
jne
push
test
adc
js
fwait
orb
jmp
bound
faddl
in
push
sub
rcrl
clc
adc
sub
out
lea
dec
test
and
mov
or
lahf
inc
test
hlt
mov
andb
sarb
mov
pop
pop
jp
fstl
in
nop
dec
dec
xchg
sti
leave
rorl
sub
pop
mov
adc
imul
adc
jecxz
inc
aad
bswap
pop
rcll
rorl
pop
jmp
xor
cli
loop
das
xor
fisttpll
ret
roll
pop
or
fstl
cmp
cmpsb
add
jmp
mov
inc
add
mov
sub
orl
jl
subl
nop
and
ja
push
xor
mov
cmpsl
les
mov
ja
mov
jmp
or
mov
test
push
mov
ds
lret
loop
inc
fcmovnu
push
cld
iret
dec
lock
icebp
jbe
mov
inc
jne
nop
cmp
jnp
mov
sub
les
xor
in
lea
cmp
sub
dec
push
fnstcw
incb
cmpsl
and
out
mov
xchg
mov
aam
jno
inc
pushf
test
in
scas
mov
xchg
jge
jno
cmp
mov
cmpsb
ret
std
inc
dec
xchg
cli
stc
inc
xchg
pop
mov
add
push
lock
notb
pop
out
into
mov
das
cld
repnz
add
xor
pop
push
in
or
sub
loopne
es
mov
push
mov
xor
pop
jns
insl
or
xchg
jp
jle
aam
orl
pop
outsl
pop
mov
inc
pop
pop
pop
xchg
jp
push
cmp
fidivl
roll
jecxz
mov
addl
pusha
xor
pop
sub
stos
jg
mov
inc
sahf
sbbb
xchg
test
outsb
pop
and
test
outsb
insb
dec
xor
add
sbb
fidivl
dec
bnd
cmp
mov
xor
sti
mov
loopne
fstpt
push
pop
xchg
fisubs
ret
call
jecxz
push
xlat
jno
lret
dec
xchg
pop
cmpsl
daa
inc
fildl
adc
leave
cmpsb
ret
mov
int3
fst
inc
cmpsl
sub
jmp
in
imul
pop
dec
mov
rorb
aad
cmc
push
jmp
sbb
sub
or
add
dec
clc
mov
pop
and
xor
lock
cltd
jle
jb
add
out
outsb
pop
ja
push
aaa
jge
mov
dec
mull
pop
ljmp
in
rcr
loop
sbb
xchg
in
add
std
xor
jl
cmp
fstps
test
orb
aaa
jge
ljmp
stos
cmp
enter
and
outsl
cmp
arpl
push
imul
mov
pop
int3
lahf
daa
in
test
pop
jl
pop
gs
push
mov
fildl
das
inc
push
sub
and
jne
xor
cmp
inc
sbbl
outsl
mov
pop
ljmp
adc
in
and
in
pop
std
mov
dec
jecxz
cmc
sub
sbb
or
test
mov
mov
hlt
aam
fdiv
push
inc
das
adc
ss
mov
repz
rolb
pextrw
mov
inc
movsl
push
mov
pusha
and
or
sub
clc
xor
sub
rorb
adc
loope
es
adc
mov
ljmp
mov
mov
shlb
cwtl
lcall
test
nop
push
rorb
sbb
xor
mov
shr
sub
popa
mov
jno
jae
es
jmp
sbb
dec
add
jecxz
mov
cmp
inc
sub
dec
pop
aam
mov
test
pop
xchg
xchg
fnstcw
cmp
xchg
push
ljmp
xadd
cs
cmp
testl
fsubs
adc
in
dec
outsl
mov
test
xor
xchg
push
cmpsl
loope
push
jge
loop
add
aad
jbe
pushf
int
add
mov
in
lock
pop
mov
sbb
cltd
push
arpl
cs
fisttpl
iret
cli
mov
dec
lea
cmp
arpl
ja
xchg
outsl
dec
add
dec
sbb
or
sbb
or
push
int3
inc
cmpsb
sbb
in
dec
cmc
fcomip
roll
in
outsb
sbb
mov
jnp
pop
jae
dec
ljmp
sbb
addr16
popf
mov
cli
lods
jne
mov
add
jecxz
xor
fisttpl
fimuls
ds
lock
push
mov
rcr
js
shlb
mov
sbb
add
fwait
cld
jg
aam
loope
cld
fistpll
adc
rcll
rclb
mov
jmp
mov
push
add
aam
pop
sbb
cmp
mov
test
mov
adc
jo
and
sbb
lock
fsubr
data16
repz
addr16
jle
icebp
es
es
cld
dec
cwtl
xor
out
adc
ljmp
inc
adc
pushl
iret
or
xchg
aam
add
push
push
push
adc
xchg
adc
and
mov
or
inc
mov
cmc
push
into
sarb
sti
js
sub
push
aas
loop
mov
or
inc
movsb
jp
rcr
pop
sub
fwait
add
cwtl
mov
test
out
imulb
jae
and
or
lock
cmpsl
je
jle
iret
aam
or
mov
inc
daa
leave
lods
sbb
pop
repz
lret
inc
insl
xchg
shlb
adc
sub
scas
fistpl
cwtl
push
and
xchg
mov
es
push
cwtl
xor
or
lds
insb
subb
call
repz
jns
adc
sbb
sarl
and
add
enter
fidivs
dec
mov
test
adc
sbb
sbb
les
sub
ss
ljmp
add
mov
scas
mov
xchg
out
or
cld
push
lock
xchg
mov
mov
popa
fsubrs
mov
enter
cmpsb
iret
fstpt
adc
jecxz
pop
jle
inc
mov
add
cmpsl
adc
or
or
pop
mov
lods
mov
mov
fsubrp
and
xchg
fidivl
stos
push
mov
mov
mov
fcmovnu
xchg
cmpb
inc
or
fs
jge
mov
jno
nop
arpl
lock
cmc
rclb
adc
and
rcll
or
loope
fistps
shrb
nop
inc
arpl
cli
sub
inc
adc
int3
in
add
mov
push
leave
sub
mov
jmp
pop
push
jp
stos
mov
outsb
jmp
mov
test
arpl
movsl
call
and
test
pop
cmpsb
pop
adc
jmp
cmp
dec
xlat
push
fadds
mov
xor
in
imul
inc
push
lods
dec
mov
rcl
sbb
mov
je
mov
pop
push
sub
in
xchg
outsb
xchg
mov
add
jl
das
inc
mov
add
popa
dec
lods
ja
imul
or
out
loope
cld
mov
pop
pushf
inc
jo
mov
scas
cmpl
dec
fildl
fildll
mov
add
scas
stc
mov
outsl
push
mov
test
xor
insb
out
rorb
cwtl
out
incl
cld
dec
test
mov
push
xchg
xchg
shr
jnp
aaa
ds
lea
in
iret
jne
clc
ret
sub
incb
sbb
ljmp
leave
out
movsl
inc
hlt
sarb
push
cmpsb
lods
push
outsl
push
dec
cmp
mov
xor
sub
and
mov
pop
jnp
aaa
shlb
mov
fbld
pusha
sbb
xor
dec
adc
neg
out
fists
pop
cmpb
insb
cwtl
loop
sbb
mov
pause
adc
dec
cmc
and
jg
xchg
jb
cmpsl
inc
mov
and
mov
pop
out
inc
ret
hlt
hlt
fiaddl
in
dec
add
fs
pop
cmp
hlt
in
sbb
xor
nop
test
cld
xchg
rorb
fwait
dec
popa
dec
sti
scas
scas
loopne
inc
push
mov
dec
addr16
popa
mov
jp
push
xlat
test
cmp
cmp
lods
clc
ret
pop
jmp
repnz
in
push
lret
mov
incl
cs
xchg
sub
js
xor
and
xchg
add
sub
jg
or
lock
les
xchg
mov
int
push
xor
movsb
push
pop
push
sbb
push
fcmovb
mov
adc
ja
fs
sbb
movsb
add
cli
jg
push
stos
aas
inc
mov
push
mov
push
aas
sub
jmp
sbb
xorl
call
insl
fcomp
jo
dec
out
add
repz
fdivl
popa
movsb
daa
testb
stc
xor
sar
jo
inc
cld
data16
mov
insb
andb
mov
inc
lahf
test
cmp
dec
gs
and
and
push
sub
mov
inc
mov
add
insl
ret
dec
sub
and
mov
je
pop
js
loopne
add
pop
sub
cmc
jecxz
sbb
fnstcw
or
pop
fdivrp
in
mov
or
call
test
aam
sti
push
xchg
test
xor
pop
dec
das
jge
sub
fists
call
repz
scas
lret
mov
mul
xchg
cmp
lea
adc
or
clc
sar
push
jge
fst
out
sub
or
and
add
ds
bound
add
add
mov
sub
fsubrl
sbb
addb
or
add
mov
dec
and
pop
test
lahf
lock
mov
mov
pusha
les
sub
and
push
in
pop
sub
movsl
cmp
or
jmp
aad
adc
dec
into
int3
cmpsb
cmp
arpl
cs
cmp
or
pushf
rorb
lods
subl
push
adc
aaa
add
enter
sbb
stc
testb
sarl
xor
or
xor
sti
or
ffree
push
xlat
add
int3
jecxz
shlb
lods
icebp
mov
inc
lcall
lea
add
decl
mov
in
jo
shlb
inc
sti
mov
imul
xor
insl
sti
jle
test
cmpsb
pop
and
inc
or
mov
jo
lea
sbb
data16
stc
mov
mov
inc
xchg
cs
mov
and
lea
fdivl
lds
cwtl
pop
pop
test
lea
inc
loopne
push
adc
mov
test
push
and
push
rcrb
pop
add
mov
in
test
lret
and
push
je
loope
inc
out
push
xchg
sub
lods
mov
pop
and
or
push
out
mov
pop
and
hlt
scas
adc
lock
xchg
jb
in
mov
mov
or
pop
xchg
loopne
mov
push
out
inc
int
or
loop
icebp
inc
sbb
jl
lret
and
xlat
push
cmpl
ljmp
pop
jl
pop
jge
and
mov
dec
cmpsl
mov
push
mov
dec
mov
mov
mov
es
xlat
inc
imul
cmp
mov
pop
fstpl
xchg
mov
add
aad
mov
adc
leave
jbe
lcall
loopne
jne
addb
outsb
std
jbe
loop
xchg
pop
mov
adc
push
mov
push
fcompl
push
lock
mov
and
push
push
sub
dec
push
mov
sub
pop
inc
arpl
push
xlat
pop
mov
fs
adc
adc
inc
jl
mov
cmp
and
je
xor
sbb
xchg
add
and
pop
orb
loopne
lock
push
push
xor
das
xchg
sub
xor
dec
fsubrs
shll
cli
in
sub
bound
sub
sahf
repnz
dec
cmp
inc
into
inc
out
xchg
push
in
clc
fistpll
dec
out
xchg
popl
test
push
and
stos
add
lock
xlat
mov
mov
adc
pop
push
pop
aas
jo
add
test
jle
jo
jno
sbb
mov
xor
imul
mov
scas
pop
call
jl
pop
mov
mov
cmc
add
add
insl
cmp
in
mov
out
loop
xor
inc
fwait
sub
push
jg
pop
jbe,pn
inc
jge
and
test
or
cltd
push
je
xchg
add
outsl
fbld
and
pop
pusha
in
add
hlt
clc
ja
aaa
xchg
imul
add
leave
mov
and
lds
sbb
imul
fcmovnb
inc
jg
sbb
adc
test
call
mov
pop
fmull
mov
jmp
cs
test
insb
test
bound
loope
scas
lcall
dec
dec
loop
fdivs
adc
hlt
xorb
push
cmp
int
stos
aas
cmp
pop
pop
call
xchg
popa
push
out
ficoms
lods
push
call
mov
adcl
jbe
cmpb
inc
sub
jg
icebp
outsb
add
and
test
lods
push
inc
ret
mov
xchg
lret
xchg
lods
dec
lods
jno
jae
inc
adc
pusha
orb
inc
push
pop
cmp
inc
pop
adc
fdivl
xchg
or
in
cmpsb
jg
outsl
or
sar
pusha
dec
mov
push
add
mov
pop
or
push
lods
jnp
adcl
std
mov
andl
aaa
jle
mov
ja
pusha
cltd
sahf
push
inc
inc
or
les
lods
dec
cltd
push
inc
mov
les
pop
fmuls
shr
cli
in
adc
and
lahf
sbb
data16
or
lea
dec
adc
pop
clc
das
repz
and
inc
pop
or
out
subl
xchg
fdivrl
outsl
adc
mov
sbbl
in
dec
mov
push
or
mov
jbe
inc
fidivs
icebp
push
lea
insb
je
push
lds
jbe
and
lods
sub
fidivrl
insl
inc
jb
lahf
test
fbld
rcrl
cmpsl
sahf
fldcw
mov
xchg
call
sub
push
xchg
int3
mov
add
add
pop
pop
adc
inc
loop
adc
loopne
outsb
adc
mov
sub
sub
or
in
test
fwait
sti
pop
or
sti
pop
jg
xor
sub
add
cs
ljmp
xor
add
filds
dec
shrl
movsl
ds
pop
mov
loope
jae
mov
mov
rorl
sar
add
lock
ljmp
push
or
outsl
mov
call
mov
cmc
or
mov
sub
mov
jg
aas
enter
mov
or
imul
scas
ja
incl
xchg
adc
jecxz
dec
mov
adc
push
ds
dec
adc
lea
sahf
cmp
std
add
add
pop
or
cli
push
enter
outsb
push
jp
mov
ja
sarl
pop
push
fcomps
rorb
insb
ficoml
sarl
stc
xchg
mov
xor
fldl
jne
test
jp
inc
xor
insl
mov
pop
rolb
pop
sub
out
ss
das
pop
jbe
adc
sub
lods
imul
xchg
push
sarl
loopne
mov
outsl
jo
or
xor
jne
dec
mov
and
int
mov
sub
es
mul
lock
pop
fwait
and
cmp
jg
push
jg
inc
add
or
dec
stos
mov
popf
call
jo
in
jo
fsubl
fistpll
sbb
xor
xchg
add
adc
pop
ss
outsb
adc
dec
cli
imul
subl
popa
shll
xchg
mov
inc
std
aas
dec
mov
or
push
nop
jno
jne
add
das
adc
rcrb
mov
repz
mov
adc
cli
das
insb
adc
mov
lcall
sti
fmull
call
mov
xchg
insb
testw
bound
push
mov
or
sub
lahf
lea
mov
lcall
adc
negb
jecxz
insl
or
aad
test
callw
inc
and
addl
fstpl
enter
pusha
ja
sbb
mov
stos
cwtl
in
imul
push
xor
xchg
ja
xor
lds
test
adc
dec
scas
mov
sbb
ret
mov
test
loope
sub
arpl
sub
rcl
xchg
iret
and
ficoml
insl
pop
lcall
or
subl
inc
enter
mov
xlat
ja
loop
cmp
push
xor
add
cmpl
xor
imul
mov
adc
xor
fadds
clc
push
stos
xchg
dec
and
mov
or
test
das
push
inc
adc
lds
pop
cld
loopne
and
cmp
mov
push
xor
cmpsl
test
out
outsl
mov
mulb
sub
pop
xchg
pop
inc
cmpsl
cmp
ljmp
les
xchg
jp
inc
fsubrl
jnp
jmp
mov
pop
inc
push
sub
fcom
mov
out
shlb
fwait
inc
mov
inc
fwait
fs
jno
xlat
fndisi(8087
cmp
pop
fdivr
aam
scas
pop
xor
xchg
outsb
scas
xor
inc
sub
jge
movsl
add
imul
push
sti
lock
lods
das
mov
sub
lods
mov
mov
testl
dec
pop
lods
mov
and
and
fidivrs
or
cltd
add
sbb
fildll
mov
in
fdivs
adc
pop
sub
mov
or
lock
inc
insl
cld
arpl
icebp
jle
jno
sbb
insl
cwtl
adc
daa
push
sub
and
outsb
mov
sub
push
ret
xchg
mov
and
push
mov
pusha
mov
or
jbe
lea
or
ficomps
lods
xor
jecxz
stos
pop
pop
push
and
cmp
xorb
push
sbb
mov
shlb
push
int3
mov
fisubrl
clc
sbb
and
lret
nop
aaa
inc
pop
rorb
jns
ret
xor
rolb
test
movsb
add
clc
jbe
jge
cltd
or
data16
add
lock
shl
pushl
sub
movsb
jns
int3
out
out
add
add
xchg
aaa
inc
pop
cmp
jns
and
les
cmp
inc
mov
add
jo
insl
ret
inc
lock
sbb
rcll
lock
dec
sbb
ljmp
mov
aas
jecxz
stos
or
push
push
cmp
rcl
mov
aaa
outsb
mov
int
sbbl
and
or
cmpsb
fiadds
outsl
mov
leave
loopne
mov
add
push
test
in
out
cmp
and
jle
cmp
lock
test
inc
push
insl
inc
bound
mov
ret
cmpsb
bound
add
test
inc
jae
mov
pop
aas
mov
sarb
hlt
cmpl
jmp
push
fstps
adc
xor
inc
sbb
and
movsl
pop
jns
imul
js
jb
rcrb
fstl
dec
inc
nop
mov
cmpsl
cmpsl
cli
loop
sbb
das
xor
cmp
dec
nop
add
push
lcall
in
das
adc
xchg
mov
loop
aaa
and
jbe
test
mov
lcall
andl
cmp
cmp
xor
push
and
xor
aam
insl
sbb
xchg
xchg
jle
cld
or
mov
rolb
or
sub
mov
es
add
cmp
push
roll
sub
fildll
sbb
fmul
popa
popf
pusha
cmp
mov
stos
filds
ffree
jg
push
int3
movsb
add
jbe
ljmp
inc
in
mov
idivb
xchg
fs
ljmp
fcomi
pop
call
adc
ret
cltd
push
int
mov
pop
push
xchg
int3
pop
jle
or
jmp
outsl
into
aas
dec
loopne
outsl
xchg
sti
pop
roll
mov
mov
jge
mov
sub
cwtl
dec
test
or
cmp
pusha
sbb
inc
cmpsl
test
or
test
test
add
push
sub
or
shll
pop
add
movsl
mov
fiadds
popl
mov
push
or
pop
pop
mov
lock
pop
dec
and
mov
in
cmp
jne
das
push
ret
mov
jbe,pn
adcb
inc
out
outsl
xor
fidivs
pop
jne
and
dec
or
sbb
stos
inc
jge
outsb
shlb
cmpsl
push
mov
ror
test
dec
aad
icebp
push
dec
jbe
pop
rcrb
jo
pop
rcr
rolb
sub
stos
bound
cmc
sbb
sbb
adc
insl
sub
fs
inc
xchg
jecxz
jbe
clc
push
mov
xchg
movsl
imul
or
sbb
mov
sbb
shlb
mov
fcoms
loop
lcall
aam
sti
xchg
sub
cmp
inc
xchg
enter
or
fsubl
adc
hlt
and
inc
sti
call
mov
lcall
xchg
or
js
or
jno
or
or
cmp
push
imul
je
mov
lods
xchg
mov
sbb
scas
adc
pop
mov
pop
aam
xchg
aad
push
jge
mov
sbb
lock
or
xorb
subb
aas
sbb
or
inc
and
ss
loope
xchg
fisttpll
jo
adc
push
cmc
push
push
xor
ljmp
mov
mov
mov
mov
in
test
test
pop
fs
jo
inc
mov
lea
scas
cmp
mov
push
or
mov
mov
daa
push
fcoms
cmp
sbb
in
mov
lock
loope
dec
imul
fistpll
lret
jno
push
test
xor
notb
lea
mov
sub
sbb
jne
and
out
addr16
std
aaa
lock
popa
xchg
ret
lcall
aaa
js
outsl
mov
insb
jo
fbld
pop
cli
mov
ret
mov
cld
push
xor
fildll
insl
sbb
mov
jo
daa
cs
inc
cmpsl
inc
xchg
xchg
cmp
in
aaa
dec
scas
sub
out
adc
sbb
inc
imul
pop
loopne
cmpsb
lods
icebp
hlt
ja
add
sub
mov
clc
pop
call
mov
cmp
cmc
push
mov
and
inc
xchg
pop
pushf
adc
add
xchg
mov
repnz
mov
sub
mov
jo
mov
test
frstor
mov
mov
jecxz
push
xchg
jb,pt
push
scas
jno
ret
lret
stc
dec
xchg
loope
mov
addl
add
ljmp
lret
test
idiv
jne
sub
sbb
incl
adc
lret
mov
inc
jno
or
dec
call
cmp
orb
into
sbb
test
jae
fsub
nop
sbb
jbe
stos
fidivrl
pop
cli
dec
loop
add
iret
add
fimull
sbb
in
bound
mov
inc
add
cmp
jle
lds
push
sar
adc
ja
inc
xchg
add
in
cmp
cli
adc
mov
notb
lds
push
int3
and
mov
adcb
divb
mov
int
lods
adc
and
inc
insb
xor
jmp
ds
in
or
mov
inc
adc
rclb
sub
imul
adc
lret
shl
mov
or
ds
pop
mov
aam
mov
xchg
fiaddl
and
xchg
sub
aaa
sub
mov
or
cmp
fadd
jle
mov
adc
jb
lcall
cmp
sub
xchg
mov
aaa
fdivp
adc
je
cli
cmp
loop
adc
les
clc
sbb
scas
stc
sbb
scas
mov
es
push
sub
sti
out
adc
mov
add
sbb
sub
ret
or
js
fdivrs
and
mov
add
ja
fdivrp
mov
and
dec
insl
pop
push
outsl
and
cwtl
mov
les
insl
cmpsb
add
ss
faddl
sub
rclb
mov
aad
mov
ja
push
insb
push
mov
shlb
push
push
jae
mov
cld
insb
movnti
jge
inc
xchg
rorb
test
mov
dec
fmuls
clc
shr
mov
inc
mov
and
push
add
adc
push
sub
jp
stos
in
shll
testb
push
mov
int3
das
or
mov
adc
dec
dec
fwait
xor
pop
cvttps2pi
mov
int3
rol
xor
test
jo
mov
shrb
add
jbe
jge
hlt
pop
stos
pop
stos
gs
xor
sbb
mov
addr16
cld
cmp
aaa
pop
scas
push
fiaddl
sbb
icebp
and
rorb
sbb
inc
pop
or
outsl
or
mov
out
adc
lods
insl
sbb
addr16
loop
dec
je
xchg
jg
push
cmp
cmp
scas
or
dec
mov
out
data16
das
jne
aam
out
int
xchg
add
aaa
shl
inc
fwait
js
aas
jb
outsb
xor
mov
lods
shrb
or
ja
int
ffreep
adc
subl
lret
pop
jge
inc
andl
adc
fdiv
rol
out
xorl
dec
sub
scas
xor
loop
iret
stos
dec
pop
lahf
mov
incl
lcall
sub
in
iret
mov
iret
dec
notl
pop
hlt
mov
int
faddl
add
cmp
outsl
dec
xor
call
std
push
aaa
icebp
sahf
or
adc
shrl
jl
inc
fistpll
lret
or
sbb
xor
adc
les
lea
incl
call
lcall
dec
mov
data16
or
add
pop
add
pop
or
jge
bound
fisubl
jl
sbb
add
loope
add
jle
xor
ljmp
fbstp
fcompl
addb
fnstsw
xor
adc
xor
insl
js
mov
out
xchg
or
mov
and
fwait
mov
dec
ljmp
xchg
push
and
and
inc
out
cmp
xchg
les
aad
push
cmpsl
cld
adc
or
ja
dec
cmpsb
dec
arpl
and
aas
sub
xor
push
jno
xor
jecxz
outsb
stos
push
pop
clc
push
inc
inc
or
jle
insl
fcmovne
das
mov
xorb
add
mov
mov
push
scas
adc
enter
sub
loopne
mov
fldcw
mov
mov
mov
movsb
add
pslld
out
repnz
lret
jo
cmp
cli
sbb
lret
dec
pop
shr
in
push
lcall
jl
mov
and
mov
inc
fists
jg
mov
fcom
notb
lods
push
cmp
dec
shl
pop
jns
add
cmp
sub
pop
mov
test
inc
sub
shlb
sub
mov
aad
jp
adc
enter
jne
jl
pop
and
dec
mov
cld
sbb
lock
movsl
rolb
xchg
enter
mov
cmc
jmp
and
cmp
sbb
cmp
mov
mov
mov
aam
jle
sti
test
nop
add
push
stos
adc
aaa
mov
jno
push
test
sarb
dec
dec
cmp
xchg
push
mov
ja
add
jg
inc
imul
xor
pop
cld
mov
xorl
fs
push
ficoms
mov
subb
test
cwtl
pop
cwtl
xor
ret
call
out
mov
movb
pop
pop
pop
and
add
jge
jno
enter
mov
daa
xor
ja
xchg
rorb
mov
movsl
mov
pop
mov
lock
pop
sbbb
test
mov
adc
push
xchg
aas
inc
jns
inc
subb
mov
mov
and
aam
clc
ret
aas
lods
jl
push
xchg
and
movsl
push
add
loopne
jo
pop
incb
xchg
mov
sub
adc
js
dec
inc
pushf
xchg
sbb
dec
jp
lods
adc
movsl
mov
add
jle
popl
mov
es
push
test
mov
fcomp
scas
icebp
adc
push
mov
scas
pop
sbb
cli
sub
xor
xor
jg
mov
inc
imul
nop
icebp
ljmp
adc
out
shl
mov
fs
lret
jnp
xchg
or
sti
loopne
adc
push
nop
mov
movsl
or
shrb
xchg
xor
adc
test
sti
nop
adc
inc
roll
test
xor
inc
fimuls
pusha
hlt
leave
jno
mov
lds
outsb
loop
test
mov
enter
fadd
movsl
mov
clc
and
push
xchg
add
movsb
je
mov
dec
inc
and
loopne
sub
sub
mov
and
ret
push
sahf
dec
add
adc
jg
jg
sbb
mov
dec
mov
and
imull
xlat
mov
adc
pop
sub
ljmp
movsb
push
mov
sbb
ret
xchg
adc
es
negb
repz
les
inc
sub
xlat
inc
in
jle
push
mov
int
mov
arpl
loop
int3
das
lock
xchg
inc
popa
popf
js
pop
add
test
test
push
scas
xchg
jbe
inc
in
insl
sti
test
enter
dec
mov
test
xchg
mov
adc
test
mov
imul
inc
pop
inc
and
dec
insl
das
pop
in
push
adc
mov
das
shll
stos
or
loopne
hlt
loop
jo
mov
fcmove
jbe
sub
sti
outsl
mov
cltd
test
xchg
mov
nop
mov
dec
xor
jg
das
roll
stos
mov
adc
sti
bound
ret
sahf
adc
cltd
rolb
leave
insl
outsl
cli
hlt
pop
push
xor
movsb
mov
test
fsub
mov
pop
loope
jg
xchg
cmp
inc
imul
cmp
mov
mov
fiadds
inc
js
adc
fdivrl
ficoml
jg
scas
subb
imull
or
loop
mov
fimull
sub
or
mov
adc
pop
push
cmp
xchg
pop
icebp
sbb
insl
adc
addl
and
sbb
sbb
sub
mov
out
lods
les
xor
bound
xor
sub
rorb
pop
xorb
movsl
dec
in
push
imul
outsl
dec
insl
daa
adc
jne
inc
push
xchg
mov
js
sub
cmpsl
mov
xorb
ret
repnz
jne
pop
es
and
mov
dec
inc
inc
or
adc
add
out
subb
push
iret
pop
js
cmp
lea
xlat
push
movsl
dec
dec
sub
adc
mov
push
cmp
inc
call
lock
mov
add
fdivr
sub
cld
jle
jne
inc
mov
imul
add
sub
push
pop
clc
aaa
lcall
mov
cmp
imul
out
inc
xor
lret
out
mov
lret
add
mov
xchg
add
sub
sub
jle
mov
roll
lods
sbb
add
sub
jne
dec
jo
ds
push
mov
cmpsl
lret
cltd
dec
lret
mov
pop
add
xchg
xor
adc
fmuls
cmp
cld
jo
mov
sbb
push
xchg
bound
outsl
leave
andb
pop
mov
std
pop
insl
pop
daa
add
out
cmp
test
dec
testl
dec
rcrb
or
test
adc
insl
mov
inc
mov
cltd
xor
mov
fucomip
sbb
inc
ret
lods
rcrl
sbb
nop
jg
sub
inc
add
pop
mov
lock
shll
dec
fistl
dec
inc
cs
adc
lahf
sub
test
repz
push
loopne
inc
adc
mov
push
xchg
mov
add
clc
lea
test
inc
rorb
movsb
mov
into
push
inc
das
and
test
add
inc
dec
outsb
jl
rol
dec
mov
pop
mov
add
insb
div
lea
xchg
lea
bound
mov
cmp
inc
cltd
out
in
lods
scas
cmp
xlat
cs
pop
andl
dec
lahf
pop
jmp
outsb
push
cli
lods
into
sbb
outsb
adc
xchg
mov
inc
fwait
push
cmpsb
shll
xchg
in
rcrl
out
push
dec
add
aaa
jle
iret
mov
xor
icebp
mov
mov
or
js
popf
fimuls
mov
dec
lret
call
xchg
jnp
jns
mov
inc
cmpsb
hlt
adc
ja
aaa
adc
dec
nop
dec
push
cmp
in
cmp
pop
repz
pop
bound
xorb
je
rcll
mov
call
jns
scas
mov
inc
push
cmp
mov
mov
shll
push
aad
cmpsb
fwait
scas
jl
popa
test
aam
and
iret
xchg
xchg
popa
push
mov
pop
adc
mov
outsb
cmp
mov
cld
xor
cs
scas
ss
or
aas
or
fadd
out
push
sub
shr
aas
inc
aaa
psubb
push
in
sub
adc
ss
aaa
cwtl
pop
shrl
cmp
orl
mov
push
out
call
add
shl
inc
xchg
mov
orb
jg
mov
das
mov
stos
out
scas
push
sub
stos
sbbl
jp
fnstcw
push
stos
pushf
scas
inc
jecxz
mov
dec
mov
mov
loopne
xor
inc
lock
in
movsl
cmp
xor
movsl
inc
pop
pusha
mov
shll
inc
fiaddl
add
add
test
or
sbb
ret
in
aaa
iret
loopne
sbb
mov
xor
sub
ss
pop
and
shl
int3
stos
jmp
mov
cmpb
or
rcrl
inc
xor
mov
jmp
pop
int3
int3
cmp
sbb
mov
sbb
lret
cmc
add
hlt
movsb
pushf
mov
mov
fadds
les
stos
cs
insb
movsl
ficompl
std
andb
push
fildll
push
subb
xlat
mov
push
pushl
or
pop
sbb
ja
imul
popf
and
jb
lea
add
test
fabs
aaa
add
add
add
outsl
inc
ds
fisttps
lret
dec
or
les
add
adc
testb
push
ds
lret
sub
int3
das
inc
xlat
insl
sar
adc
adc
popa
cs
adc
les
je
mov
mov
mov
sar
pusha
clc
cs
cmpsb
or
sbb
pop
inc
shrb
dec
push
pop
int
xor
lret
call
cs
sub
jp
xchg
cmp
fwait
mov
mov
out
int3
movsl
in
insl
mov
jg
inc
imul
mov
dec
mov
test
mov
je
clc
adc
or
add
shrl
enter
adc
outsl
cld
fst
clc
popa
dec
push
pop
adc
les
filds
sbb
jne
xrelease
push
outsl
enter
dec
mov
add
mov
fucom
lods
fwait
xor
sti
jl
cs
das
insl
mov
pop
test
sbb
insb
inc
dec
std
into
mov
aam
ss
xor
js
fistpll
dec
pop
loope
xchg
or
test
hlt
push
jbe
loop
xchg
jae
stos
push
and
adc
daa
mov
push
xchg
xor
fcmovbe
jg
fisubs
push
mov
inc
fistpl
mov
nop
movsl
ljmp
cmpsb
pop
mov
xorl
jmp
fs
sbb
loopne
adc
and
out
sub
pop
add
sub
sahf
sub
adc
xchg
add
cmpsb
mov
ss
call
pop
and
inc
mov
or
pop
inc
cld
jno
pusha
stos
out
add
inc
or
ljmp
insb
mov
cmp
inc
ss
xlat
orb
sub
dec
push
les
push
gs
movsb
inc
fwait
loope
mov
ljmp
clc
fdivrs
fsubs
sbb
adc
inc
ja
mov
icebp
test
add
mov
sbb
jl
xor
adc
outsl
fnstsw
pop
add
mov
or
adcl
adc
leave
je
popa
pop
ja
or
jl
mov
aaa
xchg
push
cld
psrad
and
imul
push
cmc
xor
filds
cmp
lahf
idivb
xchg
dec
clc
adc
xchg
inc
cmpl
xchg
pop
push
jo
mov
inc
mov
ret
sub
xchg
in
fistps
pusha
xor
sub
xchg
sub
xor
push
cmpsb
xlat
cmpsb
add
shrl
fwait
movsl
and
jnp
jmp
stos
pop
jnp
xor
rclb
pop
xchg
hlt
sub
insl
sub
inc
sub
mov
stos
fcmovnb
pop
test
add
lcall
pop
xor
orb
cmp
xchg
xchg
or
xorl
mov
xchg
das
repz
xchg
loope
lods
pushf
and
insl
fnstenv
jle
mov
test
sub
fadds
cmp
mov
imul
rolb
cmp
jnp
popa
fsubrs
loope
adcb
rcrb
mov
adc
inc
aas
add
jno
and
add
jp
xor
sarb
ja
andl
add
mov
ljmp
call
mov
loope
arpl
cmc
outsl
incl
popf
mov
clc
mov
sarl
add
fyl2xp1
out
cmp
sahf
hlt
lahf
std
pop
rorb
cltd
adc
dec
or
dec
cmp
xchg
jle
scas
pop
xchg
pop
inc
clc
mov
dec
jle
mov
addr16
xchg
fs
mov
ror
push
cld
out
adc
stos
test
pop
lea
prefetchnta
notb
js
in
ret
jecxz
outsb
or
fadds
push
sub
js
pop
jo
mov
movsb
mov
outsl
pop
pop
inc
sub
adc
add
cmp
sarb
stos
inc
int3
mov
sbb
cmp
mov
xlat
inc
insl
repz
mov
xchg
clc
test
cmp
imul
cmc
xchg
inc
test
push
outsl
mov
movsb
mov
sub
inc
pop
popf
popl
imul
out
js
out
test
insl
adc
cmpsl
cwtl
mov
xchg
push
and
adc
push
adc
enter
shll
je
sti
sahf
rcll
adc
and
insl
mov
mov
in
sahf
insb
adc
insb
pop
push
bound
scas
add
inc
es
fisubrl
mov
cltd
xchg
push
add
mov
cmc
shrb
dec
cwtl
popa
or
jg
push
test
lods
movsl
push
data16
test
mov
xchg
dec
push
je
xchg
mov
das
push
add
lds
mov
sbb
xlat
mov
mov
adc
or
and
popa
and
int3
jno
mov
and
mov
test
xor
lidtl
pop
cmp
sub
xchg
or
jge
sbb
mov
pop
les
aam
lods
mov
dec
adc
pop
enter
or
pop
push
adc
mov
sub
and
xchg
mov
sub
xor
inc
sarl
mov
je
cld
jb
mov
push
mov
fmuls
xor
dec
sbb
icebp
mov
mov
mov
sbb
and
dec
and
mov
cmc
cmp
mov
sbb
pop
cli
or
hlt
out
jg
dec
mov
outsl
loopne
and
add
or
std
pop
push
adc
push
out
xor
xchg
mov
mov
sub
cli
push
aam
jge
mov
jb
dec
pushl
sarl
pop
mov
pushf
js
subb
insl
lahf
call
ret
or
dec
das
pop
outsb
scas
jbe
mov
adcl
jge
xchg
sbb
fsubr
sbb
out
stos
test
loope
sbb
sub
cmp
cmp
dec
js
stc
dec
xor
cld
inc
inc
sarb
outsl
in
sbb
ljmp
cld
inc
aaa
add
mov
jg
addr16
mov
mov
sarl
loope
mov
push
jle
popa
push
push
cltd
andl
into
into
mov
xchg
ret
add
ss
mov
sub
insb
sub
dec
imul
cli
jecxz
popf
dec
sbb
mov
xor
jp
std
and
sbb
nop
xchg
js
out
in
sti
out
pop
inc
clc
and
insb
mov
pop
jge
inc
push
out
icebp
das
les
lods
or
test
fstpt
stos
push
in
inc
add
mov
inc
lods
mov
shrb
loopne
movsl
sub
test
icebp
leave
les
fsubrp
mov
mov
inc
and
xor
sbb
repnz
jle
in
imul
mov
adc
sbb
pop
adc
cmpsb
sbb
jg
sbbl
pop
out
cmpl
and
das
inc
mov
dec
xor
or
ljmp
mov
sub
inc
mov
inc
loop
mov
bnd
mov
insl
cwtl
addr16
loopne
mov
lret
lods
arpl
test
push
lea
push
mov
repz
lea
rol
pop
mov
outsb
fimull
push
aam
inc
sub
shrl
mov
mov
jno
mov
mov
imul
test
push
addb
jbe
sub
dec
jl
jo
movb
mov
cmp
xchg
mov
xchg
lea
inc
inc
popa
les
push
adcl
adc
call
out
fs
enter
and
out
pusha
jmp
pop
add
in
jbe
fidivl
lds
jg
inc
ficoms
cmp
scas
and
mov
mov
fdivs
jo
pop
cwtl
ja
cs
cmpsl
pusha
int3
sbb
sbb
xchg
add
add
xor
ss
pop
cld
dec
faddl
in
iret
pop
dec
inc
aaa
testb
test
and
sub
xor
jg
les
mov
and
mov
pop
xor
fmull
incb
dec
inc
lcall
jbe
shr
sub
int
popf
aam
xor
jns
mov
loopne
inc
icebp
aaa
mov
pop
add
lock
pop
xchg
inc
add
mov
fiaddl
pop
dec
mov
add
addr16
shl
push
xor
add
out
inc
mov
dec
sub
mov
mov
xchg
push
outsl
lds
cld
push
add
aad
ret
mov
fisttpl
std
in
sbb
cmp
mov
jno
or
cmpsl
adc
rcrb
jns
aaa
xchg
push
cld
pop
sbb
mov
das
fcompl
andl
cwtl
lea
jmp
mov
or
lcall
pop
mov
cmp
insl
dec
mov
or
std
nop
pop
mov
xlat
jg
push
stc
not
push
enter
js
mov
sub
fxch
call
dec
add
inc
add
ret
add
lea
fldt
mov
add
add
hlt
jg
jg
jo
and
mov
cld
sub
jecxz
pop
xchg
inc
sbb
outsb
stos
test
push
sbb
sahf
pusha
xor
xchg
push
dec
adc
sub
loopne
out
mov
pop
fbstp
in
movb
ja
stos
rorb
cmpsl
in
add
cmp
cmpsb
mov
call
jle
loope
mov
clc
dec
sbb
icebp
push
int
icebp
in
mov
inc
hlt
jmp
inc
sbb
xlat
mov
out
add
mov
iret
mov
xchg
and
out
and
inc
lds
mov
subl
add
cmp
add
mov
xor
sub
lods
stos
fstpt
or
mov
enter
pop
es
test
fsubrl
adc
std
sbb
xor
adc
xor
mov
mov
mov
nop
clc
dec
mov
mov
subb
xor
test
fnsave
and
mov
sbb
mov
xchg
and
or
hlt
fistpl
pusha
stos
xor
mov
xor
inc
movsl
ffreep
outsl
pop
sti
stos
or
std
and
add
push
pop
dec
cmc
mov
xorb
out
and
xchg
push
adc
les
loope
rclb
int
pusha
jle
mov
and
pop
ret
add
sub
or
outsl
xchg
bound
cmp
lds
jne
mov
jecxz
stos
outsb
mov
test
mov
lds
jp
jle
inc
mov
xor
clc
or
dec
jne
iret
fwait
aas
aas
pop
inc
mov
je
paddb
xor
idivb
mov
mov
out
andb
xor
dec
or
loop
ffreep
lret
sbb
pop
imul
cwtl
cld
insl
out
fsubs
mov
cld
iret
test
cmp
or
adc
xor
scas
lods
lods
aaa
cs
mov
push
adc
out
adc
push
pop
pusha
xchg
dec
xor
pop
adc
xlat
xchg
filds
into
xchg
fstpt
test
ret
ret
fwait
sub
lea
or
xor
mov
repnz
daa
mov
test
sub
out
xor
mov
sbb
fdivrl
xor
push
hlt
lret
and
adc
pop
xchg
cs
imul
cmpsb
call
dec
outsl
lea
or
mov
xchg
out
xchg
jl
mov
or
push
mov
and
movb
mov
inc
and
outsl
xor
je
push
shll
lcall
inc
or
rorl
add
fbstp
mov
insb
inc
pop
imul
repz
adc
xor
repz
mov
push
pop
pop
cmp
std
add
inc
inc
mov
cmp
je
rclb
call
adc
jecxz
into
ss
addr16
sub
scas
outsb
add
inc
aaa
aam
push
and
jg
sbb
sub
pop
pop
outsb
jmp
push
lods
xorb
jb
inc
and
call
jecxz
jle
mov
js
pop
fwait
stos
dec
icebp
jmp
repz
adc
mov
repz
add
fs
xchg
data16
es
or
mov
leave
xchg
adc
add
outsl
adc
daa
push
ret
pop
pusha
das
shlb
adc
jg
sbb
leave
inc
lcall
loope
je
movsb
inc
lods
sbb
out
mov
rcrl
cli
ret
and
jge
subl
push
add
popa
cs
add
int
jle
xor
sbb
xchg
mov
insb
mov
call
in
cli
push
outsl
xor
aas
or
cmpsb
push
stos
push
dec
sbb
add
ds
sbb
orb
adc
sub
pusha
leave
sbb
dec
popa
or
mov
fcom
mov
scas
push
repz
adc
loope
iret
add
jb
dec
nop
pushf
mov
lock
mov
cmp
and
rcr
rcl
lds
in
es
insb
popa
aad
std
dec
test
ds
cmp
mov
push
lods
shll
test
js
push
test
ret
sbbb
aam
std
mov
push
int3
cs
movsl
shr
dec
jb
je
cwtl
aam
jecxz
stos
jmp
push
adc
sbb
fcomp
xchg
int
xchg
js
insl
jmp
cmpsb
es
fidivs
cmp
fdivrl
sub
sahf
inc
sar
jge
dec
filds
dec
jne
cmp
ja
push
cmp
pop
insb
inc
repz
loop
sbb
sub
add
add
mov
push
jl
sbb
or
jge
pop
xchg
out
adc
insb
jecxz
or
in
sub
aam
inc
dec
inc
scas
pushl
or
pop
shll
mov
add
arpl
addb
addl
test
ljmp
mov
or
popa
or
pop
packssdw
mov
mov
inc
mov
dec
cmp
pop
decb
out
pushf
inc
fwait
mov
and
mov
sbb
sbb
fdiv
xor
outsb
add
jns
xor
fstl
sbb
cmpsl
dec
or
xor
push
mov
adc
mov
mov
add
xor
inc
cld
push
nop
scas
jmp
push
adc
jge
movsl
ret
lock
cli
dec
or
fisubrs
sbb
or
mov
movsl
adc
roll
in
bound
fstpt
inc
std
out
dec
mov
sub
mov
mov
out
popf
add
adc
rcll
cmp
or
xchg
and
pop
imul
clc
in
xchg
test
pop
dec
fcomps
adc
pop
inc
sub
ljmp
rolb
mov
pop
xchg
rcrb
sub
cmc
popf
xchg
clc
or
insl
or
jo
test
shr
stos
cmc
outsb
ja
bswap
into
sub
add
rclb
sub
and
sbb
sbb
inc
adc
in
aad
mov
loop
pushf
sbb
dec
lret
or
decb
pop
mov
out
out
sub
mov
mov
test
add
insl
add
je
in
add
and
cmpsl
sbb
inc
test
ret
pusha
mov
lock
or
nop
daa
lcall
xor
adc
sub
jp
orl
mov
aaa
and
push
xchg
mov
lret
test
inc
mov
stc
ret
jecxz
sbb
pop
mov
cs
in
mov
clc
shlb
lret
jg
lods
data16
xor
mov
pop
or
add
mov
imul
clc
sahf
inc
std
jno
push
sbbb
push
fs
cmp
test
lock
push
cmpl
adc
ret
adc
cld
bound
add
and
mov
data16
cmp
jmp
or
shrd
sarb
xor
dec
shr
and
push
mov
sub
out
fcoms
loope
mov
in
shl
and
in
or
inc
or
jle
pushf
and
stos
loopne
lds
outsl
cmc
movsl
xchg
ss
mov
fadd
sbb
xor
jae
add
inc
icebp
popa
dec
out
call
shll
mov
es
ljmp
lahf
adc
xchg
pop
inc
sbb
or
push
pop
gs
xchg
fdivs
aas
and
mov
rcll
fwait
es
jmp
pusha
dec
insb
test
adc
jo
aad
sbb
adc
push
int
call
jmp
call
dec
inc
lea
adc
cmp
push
aaa
sub
sbb
iret
cmp
sub
scas
repnz
repnz
nop
sbb
push
aam
adc
outsl
outsl
add
int3
cld
pop
cmp
outsl
mov
jo
mov
sub
push
call
add
addb
xchg
push
xchg
imul
in
push
or
imulb
mov
pop
shl
add
icebp
dec
jl
add
and
inc
or
mov
jno
inc
int3
jmp
pop
lock
dec
loopne
mov
int
outsl
clc
fwait
sub
mov
xchg
in
daa
pop
mov
and
inc
lea
outsb
add
sub
cmc
push
idiv
xlat
mov
in
inc
in
mov
fbld
lds
loopne
movsl
add
push
mov
mov
ljmp
loopne
cmp
sbb
and
jle
jl,pn
mov
or
int3
bound
es
lock
js
cmpb
add
test
in
loopne
pop
inc
test
mov
adc
push
inc
fcomp
jne
out
negl
test
add
sti
dec
sahf
push
adc
xorl
mov
cmc
and
and
fcompl
push
push
test
nop
and
loopne
sbb
cmp
mov
aaa
out
lds
shll
cld
mov
xchg
jno
out
sub
sub
cld
xor
test
push
push
ficoml
fstl
mov
jg
push
xor
dec
sub
fisubrl
decl
je
mov
and
mulb
enter
fldl
mov
pop
pop
fisubl
outsb
pop
mov
aam
pusha
jecxz
into
fwait
push
sbb
sbb
cmp
inc
mov
rolb
pop
loopne
lods
inc
icebp
adc
aam
or
xchg
movsl
es
push
sub
or
das
cld
inc
icebp
adc
jp
into
or
into
push
loope
stos
fildl
or
loopne
jl
loopne
in
and
inc
sub
add
mov
mov
adc
outsl
xchg
add
inc
cmpsb
out
and
int
push
loope
add
or
pop
dec
xchg
es
pop
mov
out
dec
mov
js
mov
sbb
loopne
scas
das
mov
jnp
rorl
mov
outsb
mov
es
das
push
fsubrs
jmp
push
inc
cmp
mov
pop
sub
scas
movsb
sbb
pop
and
xchg
test
aam
jo
or
fstpt
and
xor
int
fcoml
aad
ret
lods
dec
add
and
mov
mov
inc
mov
or
add
mov
adc
cmp
inc
jecxz
dec
mov
lcall
jg
outsl
rolb
gs
mov
jecxz
aas
lahf
or
and
fs
mov
dec
out
adc
movsl
cmp
out
scas
cs
lea
imul
out
mov
test
xchg
cltd
scas
inc
ret
pop
jbe
mov
xor
sub
mov
push
ja
loopne
dec
fstl
sbb
leave
test
test
or
sarl
cmp
lds
dec
inc
sbb
mov
push
aaa
je
lock
mov
movsl
arpl
dec
add
jb
fistpll
pop
sti
loopne
pushf
in
pop
sbb
mov
sub
sbb
cmp
jne
cmp
push
fs
in
sbb
mov
inc
mov
std
add
data16
nop
std
inc
aam
pop
xorb
pop
outsl
fs
ret
aad
add
mov
cs
adc
or
add
das
pushf
fisttpl
pushf
sbb
loop
fidivrl
stos
push
xchg
add
sub
jno
jg
cmp
mov
rcrb
cmp
xchg
sub
mov
adc
mov
test
sbb
cwtl
sub
sahf
push
ret
fmull
adc
sub
xlat
pop
sub
test
mov
cmpsb
and
mov
es
inc
cli
aas
sbb
lea
rorl
cli
mov
mov
insl
push
mov
add
jmp
icebp
cltd
je
xorb
jns
adc
cmp
mov
jg
fs
pop
dec
bound
loopne
adc
and
pop
fidivs
js
fdivrs
lds
shrl
mov
sub
cltd
popf
or
push
sbb
lods
and
mov
faddl
jmp
out
mov
inc
mov
xchg
cli
pop
popf
mov
cwtl
pop
pop
ds
dec
pop
xor
andl
adc
mov
push
repz
mov
add
movsb
add
das
pop
pop
stos
lds
aaa
ficoms
mov
les
xor
push
in
xlat
or
fwait
jb
push
scas
xor
dec
adc
fidivrs
push
or
or
push
shlb
bts
ja
sbb
in
mov
scas
and
lods
aad
mov
mov
cmp
mov
je
mov
dec
mov
in
push
push
ret
sti
add
loopne
lock
xchg
ffree
pop
jbe
fnstsw
dec
adc
hlt
addb
ss
add
push
int
mov
xlat
sbb
jae
jns
push
jo
pop
jle
or
or
stc
mov
fbstp
sbb
daa
dec
lahf
push
mov
mov
aad
xor
or
sbb
push
xchg
test
mov
push
mov
sub
shll
das
or
fisttps
lret
daa
not
ja
les
mov
stos
sbb
mov
xor
mov
jp
add
cmp
push
das
shl
or
outsb
loopne
add
inc
xor
jp
fists
cld
aaa
mov
mov
cwtl
mov
cmpsb
test
iret
adc
mov
scas
mov
iret
pop
mov
push
iret
mov
ret
and
test
movsl
cld
imul
push
jbe
cmp
push
xchg
add
out
jbe
jo
jle
mov
dec
daa
out
lock
mov
add
mov
js
inc
cmp
jns
jno
test
jno
mov
nop
jmp
and
ja
adc
cwtl
or
pop
jmp
xor
mov
pop
insl
clc
movsl
sbb
sub
xor
or
sbb
in
mov
dec
mov
cmpsb
cmp
and
jp
lcall
and
insl
jmp
mov
xor
mov
sahf
sbb
mov
in
push
repz
clc
fld
push
pop
sub
stos
ret
scas
cmpsb
out
sbb
jbe
mov
mov
mov
mov
push
daa
push
mov
inc
lock
dec
adc
adc
out
push
jge
jecxz
add
hlt
mov
aad
push
leave
and
adc
and
xchg
xor
fildll
adc
pop
call
fistpl
pop
pop
and
adc
andl
or
inc
aas
pusha
sbbl
mov
decl
movsb
mov
sbb
sub
add
lahf
idivb
mov
popa
mov
sbb
inc
jl
pop
test
fdiv
mov
or
mov
pop
push
sti
out
pop
adcl
lea
jo
mov
in
cmc
cld
adc
jns
stos
fcomip
aas
mov
dec
jnp
sbb
faddl
fcmovb
push
mov
sti
repz
lgdtl
inc
add
push
jns
das
mov
adc
sbb
mov
mov
pop
jle
ret
je
in
out
inc
sbb
cmpsl
adc
pop
add
icebp
pushf
sbb
mov
hlt
stc
add
or
mov
cltd
pop
jae
ret
ret
inc
fwait
xchg
test
mov
or
mov
mov
rcll
xchg
mov
and
jnp
xor
popa
das
stos
sahf
xorb
mov
mov
fldt
xor
cmpsb
loopne
pop
shll
cmp
out
mov
out
pop
andb
ja
inc
cmpsl
insl
fcoml
xchg
mov
pop
sbb
add
ss
adc
out
gs
xor
push
inc
cmp
push
je
shll
dec
pop
mov
fidivrl
and
inc
cltd
mov
inc
fnstsw
mov
jno
and
test
jp
popa
or
fistpll
test
inc
adcb
mov
out
sub
mov
xor
mov
cmpsb
icebp
add
outsl
out
add
inc
inc
push
adc
outsl
inc
xchg
mov
sub
or
scas
mov
loop
add
pop
cmc
pop
into
scas
ret
mov
aam
movb
jecxz
xchg
mov
jg
xchg
jnp
inc
enter
dec
jg
aas
cmp
inc
push
mov
jg
mov
in
pushf
repnz
xor
cld
cld
mov
mov
sub
pop
arpl
xchg
pop
jb
pusha
out
push
sbb
imul
imul
xor
add
mov
repnz
ret
jmp
lods
nop
inc
js
and
test
ja
mull
inc
push
mov
sbb
iret
inc
lock
cmp
jle
je
push
fdivs
sub
ror
sub
sbb
call
push
test
adc
adc
pop
cld
sbb
mov
jne
nop
lahf
cli
repnz
jge
push
mov
scas
lahf
rol
scas
mov
cs
push
cmpsb
je
push
adc
fistps
dec
nop
hlt
stc
test
jg
mov
xchg
adc
insb
jecxz
cmp
test
leave
xchg
add
popf
jne
movsb
adc
jne
inc
mov
lea
mov
lods
dec
rorb
sub
mov
cmpsl
aad
or
mov
dec
pop
inc
push
testb
shll
sahf
cmp
and
pop
orb
push
mov
cwtl
or
jg
movsl
mov
cltd
imul
inc
mov
dec
cld
pop
lock
sub
jle
repnz
push
out
in
ja
pop
add
cmc
mov
fistpl
nop
movsb
popf
cmpsl
cli
xor
in
pusha
movsl
pop
pop
fsubs
pop
inc
mov
adc
jle,pn
decl
les
and
testb
insb
cmp
stc
jge
pop
mov
cwtl
in
jl
and
fcompl
push
adc
inc
inc
push
mov
pop
jg
adc
inc
mov
xchg
lret
shl
jp
stos
adc
orb
enter
in
cmpsb
mov
aam
mov
pop
push
xor
sarb
mov
mov
in
js
dec
aad
mov
mov
inc
js
call
dec
aaa
outsl
push
mov
or
bound
or
xor
cmp
outsb
xchg
sub
mov
insl
jg
jmp
sub
jle
sarb
lods
movsl
cli
les
inc
cmp
cmp
push
stos
mov
or
sbb
std
jp
shl
xchg
inc
push
test
push
mov
into
nop
leave
hlt
scas
cs
rclb
in
jns
mov
cmp
imul
xor
sub
call
loop
push
mov
fisttpl
popl
mov
ja
aaa
and
loop
adcb
jge
add
orb
lret
pop
outsl
jg
jne
mov
add
jmp
xchg
jae
push
fdivp
call
push
sbb
pop
out
lods
pop
fstp
push
mov
rolb
xchg
lock
ja
pop
adc
enter
add
sarl
sahf
outsl
das
xchg
cmpsb
cmp
fwait
arpl
add
jo
das
jb
pop
jo
outsl
xchg
inc
jge
aam
movsb
xor
mov
int3
inc
inc
inc
adc
or
out
jne
and
cmp
ret
out
cmp
es
or
jnp
fisttps
jne
mov
sarb
mov
mov
xor
ja
stos
push
lods
movsl
loop
inc
outsb
inc
iret
cwtl
stc
inc
fdivrs
push
popa
imul
cmp
shrl
xor
pusha
xlat
mov
dec
rolb
in
mov
cmc
push
and
mov
adc
inc
jl
sub
and
arpl
push
add
pop
clc
call
movb
jge
ja
mov
inc
dec
jg
outsl
loop
adc
or
in
fildll
jbe
jb
mov
add
xchg
adc
pusha
bound
mov
aaa
emms
fcoml
mov
and
je
or
push
test
dec
pushf
pusha
lock
popf
scas
cmp
clc
inc
movsl
pop
sub
out
push
push
aam
ja
gs
jne
push
push
shll
je
enter
rcll
shr
outsb
clc
push
mov
out
jmp
cmp
push
pop
cwtl
outsb
inc
pop
mov
push
ljmp
sbb
test
add
loope
fucomi
push
add
arpl
ret
cmpb
adc
ret
jne
xchg
push
es
mov
out
aaa
jecxz
dec
or
mov
push
and
mov
or
inc
mov
or
lods
es
push
mov
pop
push
xor
cmpsb
and
jne
lds
mov
jmp
cmpsl
mov
leave
lock
pop
loope
and
lock
add
jmp
mov
mov
jb
aaa
data16
mov
mov
adc
or
inc
cmp
insl
sbb
dec
mov
mov
pusha
push
jl
fs
loop
cs
mov
xchg
je
add
sar
paddsb
cld
fdivp
fldt
lcall
mov
mov
and
push
pop
mov
xor
pop
scas
xor
incl
fsubrl
pop
ljmp
jae
incl
jg
xor
call
dec
in
les
sub
roll
and
xor
pop
stos
pop
mov
test
ret
sbb
fwait
cmp
fdivs
dec
outsl
call
in
jbe
mov
mov
jl
sahf
inc
aad
push
mov
mov
xor
cmpsb
fildl
sbb
dec
add
xlat
mov
sbb
xor
cmpsb
rclb
pop
lock
mov
xchg
inc
mov
jmp
push
data16
roll
call
mov
pop
cmpb
push
inc
dec
fistps
add
adc
loopne
je
sbb
push
vcvtps2dq
pop
inc
mov
mov
sbb
test
jno
test
mov
lds
shl
test
adc
fisttpl
clc
aaa
mov
es
mov
inc
jl
and
sub
pushf
push
roll
mov
pop
jbe
adc
mov
push
orb
fcomip
loope
clc
pop
sub
push
add
xor
stos
test
cmp
mov
insb
fildl
sub
sbb
lock
jae
mov
outsl
cmpsb
xchg
test
xchg
out
xchg
movsl
mov
in
mov
lret
jbe
jno
pop
push
cld
out
into
jne
das
or
ficoms
enter
add
push
lret
push
push
sarl
inc
or
enter
ds
outsl
mov
dec
mov
push
imul
pop
loop
out
sbb
adc
std
aad
or
mov
ret
mov
fcmovnu
xor
lea
cmp
jnp
push
pop
push
sub
and
dec
or
test
push
je
inc
scas
cs
push
in
test
mov
adc
insl
adc
sub
pop
or
jbe
mov
pop
pop
movsb
imul
sub
sbb
dec
ljmp
sbb
in
mov
fldt
push
insl
test
out
push
shrb
lret
inc
dec
adc
mov
xor
dec
pushf
xor
orb
mov
lret
inc
movl
or
jge
sbb
pop
mov
loop
pop
mov
ds
mov
mov
jg
inc
addr16
clc
out
testl
pop
mov
outsb
clc
or
daa
xchg
xchg
push
dec
inc
push
jle
aaa
mov
mov
pop
mov
lods
xor
es
outsl
push
call
insl
jl
cld
repz
fistps
mov
xchg
and
mov
outsb
xor
and
loop
add
push
out
dec
movsl
sub
cltd
adc
mov
pop
ljmp
inc
nop
and
cmp
sub
inc
push
ja
mov
mov
lods
fbstp
mov
sbb
mov
out
xchg
adc
cld
adc
mov
add
in
xor
iret
xchg
mov
jo
jecxz
push
insl
push
inc
dec
int3
je
mov
cs
data16
mov
in
xchg
add
adc
cmpsl
pop
iret
dec
lds
or
xchg
jp
fsubs
mov
lret
lods
sbb
out
sti
inc
imul
les
cltd
jne
lods
sbb
sub
cli
je
push
cs
aaa
rcrl
cmp
fdivrs
jmp
or
shlb
mov
push
test
and
jle
xchg
ja
call
push
std
aam
inc
das
mov
jle
or
ja
in
or
push
fsubl
push
jge
xadd
hlt
xchg
xchg
add
std
out
mov
scas
mov
sbb
xor
xchg
lcall
inc
jne
push
dec
ljmp
add
or
mov
aam
fcoml
lods
pop
mov
fsubr
in
sbb
cltd
ret
pop
jns
xor
push
xchg
sub
mov
lock
je
mov
jns,pt
pop
addb
lock
jmp
push
cmp
stc
xor
sub
inc
inc
inc
roll
jp
mov
cli
and
sbbb
or
es
ljmp
push
cli
and
out
ficomps
push
test
pop
adc
jmp
fists
inc
mov
xor
push
movsl
fisubl
jb
sub
push
xlat
arpl
xchg
call
out
sub
mov
jnp
out
lock
add
ss
stos
jne
scas
insl
mov
arpl
daa
cmp
mov
fsubs
stos
cmp
out
push
cmp
das
xchg
inc
lcall
xchg
mov
loop
fs
or
mov
int3
pop
push
rsm
push
sarb
fldl
sbb
jl
aas
je
shr
dec
xchg
jmp
pop
inc
mov
mov
and
cmpsl
inc
and
insl
loopne,pn
mov
insb
jecxz
sbb
cmp
sbb
push
mov
add
and
loope
in
and
and
push
sbb
pop
fs
fldt
sti
mov
clc
pushf
rclb
pop
out
jne
outsb
movsl
jo
sbb
push
mov
cwtl
add
loopne
and
outsb
test
fisttps
add
sub
mov
ljmp
popf
pop
inc
jp
inc
xchg
mov
pop
adc
xchg
mov
loopne
in
sbb
mov
icebp
adc
mov
push
mov
loope
mov
dec
pop
sar
pop
sbbl
daa
mov
adc
lds
inc
xor
adc
into
or
pop
mov
mov
hlt
hlt
mov
mov
xor
adc
sbb
add
sub
mov
shl
pop
sub
jl
fiadds
mov
mov
pusha
jmp
xor
mov
lret
cli
shll
push
ss
lcall
jp
pop
xchg
adc
ja
aaa
dec
push
xor
add
imul
out
lret
sbb
xchg
adc
mov
sbb
add
out
fisubrs
repz
jle
adc
cli
pop
out
cmpsl
loopne
fisttpl
push
inc
sub
int3
bound
push
hlt
push
outsb
fwait
ljmp
ss
aaa
mov
push
push
mov
iret
cmp
sti
shlb
mov
inc
cltd
inc
push
sbb
mov
xchg
and
inc
int
out
shll
xchg
add
enter
shl
andb
pop
adc
out
xchg
push
dec
roll
inc
popa
pop
or
repnz
test
lcall
lds
mov
cli
sbb
pop
bound
fcmovne
mov
or
dec
mov
mov
push
lock
sbb
fimull
xchg
js
adc
std
es
pop
xor
loopne
scas
cmp
mov
xchg
lods
sarl
jmp
ds
mov
xchg
add
cmpsb
aam
xchg
jle
add
outsl
push
outsl
xchg
loopne
das
leave
rorb
xchg
jbe
pop
push
adc
movsb
mov
add
push
pop
jg
pop
pop
cmp
aas
jecxz
xchg
jg
inc
mov
in
pop
xchg
hlt
jecxz
adc
push
jae
enter
mov
mov
dec
movl
ret
outsl
push
adc
mov
dec
daa
push
ds
loope
outsb
mov
out
bound
jbe
add
mov
je
pusha
inc
adc
pop
into
mov
mov
test
sbb
xor
jl
dec
cmp
sbbb
in
rcll
add
movsl
pop
dec
scas
in
jp
xor
fildl
mov
ds
lods
mov
or
cmp
and
out
push
data16
and
icebp
les
popf
loop
mov
mov
scas
in
sahf
movsl
mov
andl
push
and
xor
adc
orb
lods
pop
xchg
out
pop
xchg
icebp
js
sbb
std
fwait
hlt
not
lods
lock
jecxz
icebp
push
in
cmc
xlat
nop
add
mov
pop
cli
pop
pop
leave
jo
and
or
xor
out
leave
mov
add
mov
mov
les
jbe
add
orb
mov
fsubrs
inc
xchg
sub
jne
sbb
loope
push
ljmp
xchg
loopne
jl
or
hlt
jge
adc
insb
mov
mov
push
xchg
adc
add
in
cmp
shl
loopne
fistpl
lcall
test
aaa
jle
fbld
cltd
mov
and
repnz
jnp
in
jbe
mov
mov
add
sbb
test
movsl
popl
fisttpl
jbe
in
add
movsb
jo
sbb
mov
lds
pusha
popa
mov
or
or
mov
cmc
dec
test
scas
add
fcmovnu
popf
jl
push
cmpsb
push
das
pop
sbb
rorl
fidivrl
or
or
lock
stos
jb
je
stos
lcall
cmc
mov
mov
arpl
pop
ret
add
inc
inc
andb
js
or
push
mov
fcmovnbe
sub
jecxz
dec
mov
inc
loope
popa
imul
cmp
dec
xlat
pop
sub
lods
dec
out
add
std
jb
dec
dec
add
xchg
scas
sbb
neg
push
mov
inc
mov
mov
fidivs
fldenv
jg
cwtl
adc
and
push
scas
dec
out
ljmp
add
cli
lcall
push
dec
fidivl
push
pop
pop
adc
add
cmpsb
stc
lods
xor
enter
clc
pop
fdivr
in
jbe
iret
pop
xchg
pop
mov
sub
mov
imul
jmp
loopne
add
decl
add
or
rcrl
cmpsl
incl
xor
mov
xchg
cld
push
mov
stos
adc
or
push
and
mov
inc
daa
shrb
fcomps
sub
es
xor
xchg
lret
adc
sbb
lret
cmpsl
push
sti
call
inc
inc
pushf
lods
lds
mov
adc
adc
sub
jno,pn
push
popa
cmp
shll
push
arpl
sub
loop
mov
inc
push
pop
outsl
les
fcomip
mov
repz
fstp
or
pop
push
xorl
add
mov
xchg
and
push
mov
call
in
jle
lcall
jno
fmuls
xchg
push
mov
xchg
ss
push
das
jb
js
xchg
adc
inc
dec
pop
pop
mov
aad
jg
sbb
push
or
cli
mov
fwait
loop
push
nop
sbb
and
jb
fwait
pop
pusha
jne
mov
mov
xor
outsb
mov
and
or
in
out
pop
push
mov
ja
pop
and
fisttpl
push
scas
sbb
icebp
icebp
mov
sub
inc
mov
xor
or
dec
ds
or
das
mov
push
push
mov
fdivrp
ja
fcmovnu
das
jno
test
sar
add
movsb
jne
lods
andb
stos
stc
sbb
lret
stos
fmull
inc
push
pushf
mov
inc
ret
mov
fcom
mov
inc
mov
dec
pop
bound
and
test
sbb
adc
mov
pusha
inc
std
movsl
filds
lods
and
add
ja
sub
or
iret
mov
mov
pop
adcb
jns
sub
lcall
hlt
in
and
xchg
push
xchg
sub
icebp
sbb
in
pop
movsl
inc
pop
sarb
push
xor
sub
scas
dec
test
or
sub
lock
ret
call
repz
lods
lcall
add
sahf
sahf
push
ret
adc
jle
test
cmp
inc
and
je
and
add
arpl
fiaddl
fstpl
dec
or
mov
or
adc
push
jle
loop
xor
pop
xchg
scas
cmp
insl
mov
inc
or
cmp
jmp
iret
jbe
loopne
mov
add
and
fcomip
fidivs
fbld
mov
rcr
pop
add
stc
int
inc
roll
cltd
dec
aad
test
push
movsl
lret
and
pop
loopne
add
cmp
shlb
dec
push
scas
sbb
sbb
cmpxchg
loope
rol
mov
cmpsb
in
or
or
mov
pusha
sarb
test
incl
sub
and
test
mov
sbbl
xchg
jp
test
loopne
mov
push
jle
jnp
fwait
inc
arpl
mov
push
mov
or
ljmp
mov
adc
mov
xorl
jl
mov
insb
adcl
pop
push
fists
jo
jns
loope
sarb
dec
and
dec
adc
inc
outsb
cmp
cwtl
fidivrs
lods
adc
movsl
andb
cwtl
jg
cmpsb
iret
gs
jo
les
push
pop
incl
and
popf
mov
mov
pop
push
mov
aas
out
dec
movsb
sbb
ret
lea
mov
lods
xlat
in
add
or
or
negb
mov
popf
sbb
xor
dec
das
mov
lock
add
or
insb
mov
in
inc
xchg
mov
call
je
or
scas
sarb
in
cmpxchg
sar
sbb
xor
adc
cmpsb
pop
pop
jle
fldt
fistpll
stc
pusha
stos
aam
inc
pop
pop
adc
and
add
test
es
inc
pop
mov
test
icebp
jmp
sbbb
push
push
mov
jmp
stc
lock
outsl
cld
fistl
jb
jae
in
adc
popf
out
xorb
out
rclb
sahf
adc
outsl
pushf
lea
adc
clc
lods
pushl
popf
fbld
dec
mov
mov
out
ljmp
push
pusha
mov
test
getsec
pop
push
cwtl
xchg
lock
loop
cwtl
push
xor
push
sbb
push
or
sbbb
add
add
push
mov
testb
xchg
mov
cmc
push
jno
test
mov
jbe
sbb
loop
or
xchg
pop
mov
outsl
sarl
test
scas
inc
dec
repnz
in
push
dec
inc
pushf
push
xchg
push
shrb
jecxz
cmp
lock
lock
inc
or
test
je
rcl
mov
adc
jo
inc
daa
jp
xchg
das
pop
ret
int3
mov
jb
rcrb
jge
sbb
pop
faddl
scas
sbb
jo
dec
decb
push
imul
sub
test
aad
jne
push
mov
repnz
movsl
fildl
ficoms
ss
push
pop
sub
imul
sahf
mov
and
mov
imulb
or
popa
lea
add
and
aas
push
mov
fstpl
cli
and
inc
jmp
popf
ret
mov
inc
inc
sbb
adc
scas
movsl
add
or
sub
mov
imul
cltd
push
dec
mov
push
add
ljmp
int
sbb
into
cmp
lock
lds
push
mov
pop
adcl
sbb
repnz
and
and
das
mov
and
pop
int
xor
and
mov
xor
adc
pop
outsl
mov
xor
cmp
mov
pop
lds
jnp
repz
adc
push
sub
ret
sbb
or
hlt
add
mov
movsb
pop
jno
add
mov
push
fsubrs
pop
cmc
pusha
test
pop
push
add
repz
sbb
push
inc
into
dec
mov
call
adc
inc
cmp
aam
and
push
nop
pushf
add
in
pop
cli
or
ficoml
stc
in
out
mov
ljmp
mov
cli
lcall
jbe
ja
fidivrs
idivb
cli
mov
add
imull
and
mov
push
and
ret
ljmp
pop
and
inc
shlb
ja
sarl
jl
sbb
pop
mov
popa
test
lock
push
sbb
lret
jmp
je
fists
mov
fmull
dec
outsb
out
daa
ficoml
lea
loop
call
sub
rcrl
je
push
mov
sar
imul
je
add
sahf
adc
outsl
jbe
xchg
stos
hlt
push
movsb
inc
in
sub
mov
pusha
xor
cld
cmpsb
test
ret
rcll
mov
lcall
daa
hlt
fistpl
push
ljmp
xchg
pop
inc
xchg
xchg
mov
shll
push
les
or
loop
mov
and
movsl
or
dec
jl
repnz
scas
ss
dec
adc
fcomi
insl
inc
fisttpll
fisttpl
add
or
rcl
inc
out
lock
icebp
add
mov
neg
lock
pop
das
pop
pusha
incl
dec
pop
mov
sbb
jnp
dec
adcl
into
imul
add
arpl
cld
test
and
rcrl
shll
cmc
lock
cmp
movsl
mov
inc
and
or
pop
lds
lea
add
leave
mov
push
add
add
leave
daa
pop
sbb
or
dec
dec
push
test
mov
mov
xchg
push
xor
sub
add
xchg
enter
rolb
outsl
mov
call
ss
sbb
fsubs
mov
mov
jbe
stc
out
or
xchg
ret
push
and
push
mov
jmp
sti
cmpsb
es
pop
xor
add
mov
push
or
fcomi
push
idivl
adc
sbb
xor
loop
sub
xchg
enter
pop
ss
push
add
js
outsb
std
push
push
cmpb
stos
das
jge
mov
inc
xchg
cmc
sbb
stos
mov
test
xor
inc
jle
ss
cli
inc
aas
inc
add
mov
sbb
or
sbbb
ja
lods
pop
rorl
shrb
adc
dec
mov
mov
in
mov
notb
rcll
mov
push
jo
addr16
jns
bound
test
push
jg
mov
jo
jo
lret
xchg
mov
or
lds
stc
dec
subl
bound
push
xchg
subl
xlat
ss
aaa
sub
xchg
mov
ss
xlat
xchg
mov
icebp
or
inc
dec
jecxz
and
outsl
jl
and
scas
scas
ss
inc
pop
add
adc
iret
out
mov
adc
mov
push
xchg
test
orb
pop
cmc
lea
cld
std
pop
es
repnz
sbb
mov
add
lea
fildl
iret
das
adc
push
je
imul
icebp
in
or
and
mov
cmp
push
pop
cld
add
push
push
xlat
test
add
push
clc
jnp
mov
shlb
adcl
mov
push
loope
jge
mov
and
int
push
incb
jne
mov
xor
pop
addl
fucom
push
pop
mov
cmp
cmp
jle
jne
scas
push
fstpt
insl
pusha
push
push
adc
stos
ret
in
cltd
lea
xchg
jecxz
mov
ret
or
mov
cmp
inc
loope
and
pop
pop
aas
mov
leave
ss
loop
shrl
mov
popf
jb
insl
inc
fxch
sub
fwait
mov
cli
test
cwtl
or
stos
mov
jle
incb
pop
clc
filds
into
out
inc
inc
mov
dec
xor
adc
loop
aas
push
test
jbe
xorl
cwtl
icebp
add
push
push
outsl
pop
mov
sahf
jne
insl
loop
ror
iret
ds
les
sbbb
xchg
or
dec
and
cs
call
cld
push
sbb
add
and
call
mov
add
or
push
mov
add
push
push
mov
mov
stc
es
sbb
jp
movsl
pushf
and
xor
pop
or
aaa
scas
pop
adc
xor
sub
sbb
or
or
or
lahf
jns
lock
addr16
and
clc
or
bound
push
push
and
mov
icebp
mov
jno
push
in
leave
fwait
inc
cmc
pop
and
fadds
inc
in
lods
rcrl
and
loopne
xchg
mov
cmp
popf
mov
add
or
mov
xchg
das
out
shrb
sbb
sbbl
mov
fdivs
mov
jnp
sbb
out
cmp
addr16
testb
outsb
pop
mov
bound
sub
ja
nop
ja
jo
mov
jl
jne
sbb
leave
adc
test
jno
mov
dec
inc
ss
lret
rolb
fsubrs
outsb
dec
lret
or
and
cmp
mov
jp
lret
ret
in
jb
adc
sbb
mov
cmp
jge
push
and
sub
mov
in
sarl
or
test
xor
inc
inc
xor
les
adc
cli
jle
les
mov
or
loopne
xor
push
insb
daa
mov
push
xor
jmp
or
push
pop
and
add
outsb
call
mov
pop
sub
adc
sbb
mov
mov
repnz
mov
ficomps
loopne
popa
xor
ljmp
lods
push
sbb
jno
loope
pop
je
hlt
mov
inc
cltd
jmp
or
ss
jne
lret
iret
or
or
jp
das
push
inc
and
push
add
push
fistps
jb
icebp
pop
outsl
out
push
nop
arpl
rorl
inc
jmp
mov
inc
mov
push
adc
or
mov
cmp
fisttpl
loop
sbb
je
sbb
jb
movsb
and
pusha
fisttps
pop
outsb
inc
test
es
rorl
mov
shll
jbe
jp
std
jo
xor
cmp
mov
add
loopne
inc
pop
mov
adc
jnp
add
mov
add
sbb
inc
inc
movl
and
mov
aad
dec
cs
rolb
pop
dec
repnz
into
mov
scas
pop
mov
div
cs
inc
rclb
push
out
aad
out
fstpt
ljmp
std
lock
adc
dec
jle
andb
mov
adc
xor
jg
movsb
jp
mov
xor
sub
adc
jno
mov
dec
mov
test
cmp
pop
mov
repnz
fdivl
adc
adc
adc
push
xchg
loop
shlb
mov
lods
stc
scas
fstpl
mov
fcompl
repnz
sub
add
sbb
arpl
push
hlt
add
cmc
fwait
mov
pop
add
mov
mov
fcmovbe
in
aaa
out
into
jecxz
push
mov
push
push
jg
std
out
sub
xor
cmp
sub
mov
test
int3
pop
aaa
add
in
test
jle
dec
mov
cmp
addl
push
pop
out
mov
icebp
mov
sub
ja
std
lcall
clc
push
jne
jb
xor
push
mov
test
hlt
pop
jo
inc
pushl
xor
push
out
clc
repnz
into
add
adc
push
mov
or
mov
int
hlt
adc
lock
inc
push
jmp
adc
inc
inc
dec
lcall
out
and
dec
std
fcomip
std
mov
add
out
inc
mov
ja
push
mov
mov
mov
icebp
inc
mov
jo
sub
mull
dec
mov
xor
jl
add
sub
mov
pop
sbb
enter
aam
loopne
fldl
jp
jmp
mov
outsb
xchg
cmp
das
mov
or
stos
xlat
bound
push
pop
test
leave
sub
dec
scas
xor
push
aad
lds
mov
outsl
mov
sarb
add
pop
and
je
insl
and
mov
orl
or
xchg
inc
add
add
pop
pop
inc
inc
loop
adc
cmp
push
mov
mov
fldl
fisubrl
in
rol
and
fwait
sub
cmpsw
add
arpl
jle
pushf
pop
mov
mov
push
pop
popa
ljmp
adc
mov
ret
inc
je
sub
ret
push
add
sbb
mov
gs
or
outsl
pop
xchg
and
xor
add
inc
jne
xchg
or
cmp
dec
cmp
mov
xor
sahf
popf
insl
loope
mov
test
fiaddl
outsb
enter
push
hlt
in
add
ficoms
in
push
add
cltd
add
cli
mov
fcomp
dec
inc
cmp
or
jge
cmp
jnp
subb
fadd
mov
test
mov
cmp
fbstp
int3
cmp
pop
mov
call
mov
inc
call
ljmp
xchg
jo
push
pop
inc
es
push
out
ret
cmp
mov
pop
inc
sti
mov
lock
ficompl
inc
dec
sub
xor
jmp
aam
dec
leave
sub
inc
std
das
push
sub
ljmp
and
addr16
push
ljmp
add
jg
dec
inc
lret
les
and
insl
push
fcmovnu
pop
fsubs
imul
or
pop
xchg
dec
xor
test
sbb
pop
fdivrp
or
cmp
fdivs
sub
das
aad
pop
bsr
push
call
add
mov
push
cmp
xor
into
movsb
jne
lea
call
fisttpll
cld
inc
cmp
lock
sub
js
dec
mov
or
and
xor
mov
movsb
adc
jl
sbb
lock
mov
jae
out
test
in
or
je
and
sbbl
sub
inc
sbb
pop
sbb
add
orl
push
test
outsb
cmp
insl
push
cli
cwtl
mov
imul
mov
jo
inc
sub
repnz
int3
idivl
mov
fwait
pop
xor
sbb
lock
je
sub
mov
scas
or
sar
sbb
push
sti
sbb
sbb
ret
push
mov
ret
pop
xorl
pop
add
in
les
pop
mov
dec
sub
lahf
cmp
pop
loop
mov
or
je
xchg
loope
js
cmp
aam
inc
adc
pop
adc
mov
sub
outsb
fdivl
pop
adc
or
inc
or
mov
icebp
dec
aam
mov
add
xchg
inc
push
pop
adc
outsl
loopne
movsl
jle
fs
popf
shlb
sbb
inc
dec
or
dec
adc
xchg
mov
or
mov
cmc
sar
mov
out
adc
xchg
or
mov
pop
fs
cmp
fidivl
es
push
mov
outsl
mov
mov
aad
mov
icebp
out
push
cmp
inc
out
loope
rclb
mov
iret
out
mov
lret
push
fucomip
adc
cmpsl
in
sbb
call
and
icebp
mov
aam
bound
imul
sbb
aad
adc
xor
movsl
lds
add
cmp
jecxz
rcrl
dec
push
imul
aaa
ret
dec
pop
sbb
cmp
je
mov
mov
lahf
je
loope
and
or
xor
push
call
jo
sub
dec
add
inc
ret
pop
pop
ja
lret
or
fldt
rcl
icebp
cld
xor
or
lret
stos
imul
xchg
mov
xchg
jg
gs
lahf
dec
mov
cmpsl
sub
push
jle
xchg
jns
jno
fwait
push
xchg
dec
adc
xor
pop
mov
leave
and
mov
int3
add
sti
pop
sbb
mov
push
mov
call
dec
inc
dec
aas
pusha
sti
sbb
sub
outsl
gs
jmp
hlt
lods
xchg
or
adc
adc
das
inc
ja
pushl
or
and
or
push
and
pushaw
add
pop
pop
lds
fidivs
mov
pop
sbb
and
jle
das
fst
adc
adc
adc
aaa
mov
push
mov
outsl
fisttpl
sub
jnp
cs
fcmovbe
data16
dec
mov
mov
enter
adc
mov
or
fwait
test
mov
pusha
leave
shll
cwtl
sub
dec
inc
das
inc
dec
pusha
pushf
and
inc
mov
mov
xchg
lret
mov
mov
outsb
inc
push
stos
int3
push
dec
ret
dec
pop
push
fst
dec
into
xor
ja
lcall
imul
mov
fstl
or
inc
mov
dec
lods
mov
add
mov
fwait
sti
jno
stos
adcb
cmpsb
daa
shlb
jno
and
movsb
sbb
aaa
ret
pop
hlt
add
insl
add
int3
or
outsl
das
jge
or
jle
test
daa
lret
into
fisttps
addr16
inc
push
out
add
push
int3
aaa
xchg
jo
cmpb
insl
outsb
loope
repz
jnp
aaa
mov
stos
inc
cld
mov
dec
sub
pop
clc
pop
lea
out
icebp
push
mov
cli
or
popf
push
outsb
inc
outsb
mov
rolb
jge
lods
jl
cmp
adc
aad
out
notl
mov
shl
sbb
cmp
add
aad
mov
sahf
aam
sbb
xchg
test
mov
aaa
lcall
jb
loope
outsb
and
movsl
push
fwait
popa
mov
sbb
movsl
jle
rcll
mov
jb
cmp
fcomp
adc
inc
clc
dec
and
stos
imul
jo
jg
lock
cmp
lea
sub
xor
sti
lea
fists
popf
mov
mov
mov
loop
lea
adc
out
and
ljmp
filds
pop
and
test
iret
adc
inc
jge
mov
insb
lcall
out
sbbb
inc
jb
dec
insb
inc
in
jl
sbb
mov
call
ret
je
fsubrs
test
idivl
movb
jge
addr16
scas
mov
nop
mov
and
mov
outsl
push
sub
clc
jne
sbb
adc
add
hlt
xchg
add
mov
fnstsw
call
mov
mov
int3
aam
push
xchg
fstps
int
fcompl
call
pop
addb
shlb
clc
inc
adc
ficoml
cmp
xor
inc
jo
inc
jmp
inc
out
ret
sbb
lods
clc
aaa
push
out
mov
xchg
mov
sub
push
nop
test
mov
cld
lods
push
outsb
adc
clc
jns
movl
andl
mov
mov
jg
inc
dec
xchg
ds
je
xor
adc
xor
test
clc
mov
jb
call
loop
lods
jno
jbe
enter
push
push
mov
popf
popa
add
cs
test
mov
xchg
mov
cmpl
popf
adc
test
mov
add
add
pop
sbb
popa
pop
dec
xor
inc
mov
push
andl
fisttpl
adc
xor
test
ret
dec
jb
shrb
and
repnz
jbe
cmp
mov
outsb
stos
outsl
mov
mov
pop
add
sbb
lea
fcmovb
sbb
leave
jp
sub
aas
fstpl
push
push
jns
setl
repz
adc
cmpsl
inc
push
adc
js
cs
out
cmp
out
xlat
test
mov
popa
sbb
mov
fdivrp
push
mov
cmp
ljmp
sbb
xor
xor
pop
fucomp
pop
imul
fistpl
test
inc
inc
xchg
fstpt
pop
pushf
popf
lret
adc
mov
mov
cld
stc
sub
ret
sub
jge
dec
or
mov
dec
xchg
mov
pushf
sarl
pop
push
jg
testb
sbb
xchg
jge
outsl
jg
mov
mov
push
inc
das
push
icebp
add
mov
mov
leave
sub
mov
ret
mov
rcrb
add
mov
push
jmp
jp
lods
push
mov
fcomi
mov
adc
popa
cld
fadd
outsl
int
or
into
mov
mov
lds
in
sbb
popa
mov
outsl
fistpll
push
imul
cmp
shl
and
shrb
mov
lret
add
and
lock
xchg
push
aad
mov
fldcw
cwtl
ds
and
xchg
rorb
sub
outsb
aad
stos
jo
repz
jg
mov
pop
adc
fsts
mov
jo
inc
outsb
jecxz
mov
in
and
mov
fiaddl
xchg
movsb
cs
dec
cmpsl
clc
mov
scas
lahf
jns
xchg
shrl
jmp
cli
test
jae
sbb
in
push
insb
pop
jp
inc
cltd
aaa
ret
mov
movsl
push
nop
imul
jl
cs
adc
or
mov
pusha
cmp
push
cli
pop
shl
loopne
pop
fnstsw
lret
mov
sbb
les
rorb
adc
mov
lods
scas
dec
ljmp
outsl
sbb
out
and
test
jo
mov
fsubrl
inc
add
pop
shll
mov
mov
jp
decl
xchg
mov
out
push
call
loopne
out
clc
sarl
push
xchg
or
cmc
xchg
mov
sysenter
insb
add
loop
mov
jo
mov
lcall
inc
pop
ja
push
or
xchg
pushf
jns
negb
or
adc
mov
fs
roll
mov
adc
sub
call
push
push
mov
je
and
dec
mov
fidivs
push
cltd
fst
cmp
inc
add
outsl
jns
jae
and
push
aam
test
loop
or
aas
sub
and
clc
rorb
ja
adc
pop
push
out
pop
jns
addr16
setp
pop
jae
roll
xor
mov
ss
inc
and
mov
sub
jo
sti
inc
jbe
sub
fsubs
xchg
push
in
clc
mov
dec
cltd
adc
add
cs
fisubrl
adc
push
imul
insb
fbstp
xor
sub
mov
sbb
cmp
mov
push
fmull
xor
or
pop
scas
add
sbb
cmpsb
sarb
mov
les
push
lret
lcall
jmp
mov
leave
pop
outsb
and
out
test
outsl
cmp
subb
xor
xchg
fwait
clc
adc
aas
rclb
mov
pop
mov
cwtl
test
pop
push
outsl
rolb
imul
dec
jmp
fisubrl
add
jne
addr16
outsl
push
js
sub
into
loopne
loopne
loopne
mov
sarb
emms
push
xchg
jns
mov
fs
pop
pop
loope
in
and
fisubl
mov
mov
es
lret
xor
xlat
popa
into
and
fiadds
sarb
hlt
out
pop
sub
inc
add
push
enter
loopne
jnp
sub
cmpsl
test
pop
cld
sub
je
xor
addr16
push
push
inc
pop
fisubrs
negl
ds
in
lahf
push
in
in
add
loop
and
inc
fucomip
in
bound
mov
inc
dec
inc
filds
mov
lret
cmp
mov
imul
jg
aaa
pop
push
cmp
xchg
mov
mov
mov
or
repnz
xor
inc
ja
add
insl
rclb
es
imull
add
mov
mov
inc
mov
nop
jmp
roll
dec
notb
xor
sbb
or
push
cmpsl
sbb
adc
pop
or
jns
or
mov
pop
or
stos
jnp
shrb
xchg
inc
daa
adc
in
insl
test
jb
xor
aaa
push
call
movsb
in
or
push
push
orl
jl
sbb
pop
shll
movsl
mov
sar
jbe
negb
mov
ret
pop
cmp
ja
stos
std
test
mov
add
dec
dec
sub
rcll
in
inc
push
dec
pop
mov
sahf
fucom
cmp
xor
insl
push
and
shrb
bnd
inc
std
filds
xlat
mov
and
flds
inc
xor
mov
mov
cmc
cmp
in
testb
test
mov
pusha
xchg
dec
and
call
pop
popf
data16
lret
nop
jno
out
mov
rol
or
add
into
or
mov
loop
jne
into
cmpsb
or
sbb
xor
jnp
out
imul
and
sub
xchg
mov
or
cwtl
enter
adc
mov
jbe
aam
outsb
loope
jg,pn
mov
stos
jp
push
or
xchg
testl
sahf
sbb
cli
inc
outsl
adc
in
cmp
fwait
or
lcall
jl
pop
jg
mov
daa
movsl
and
mov
insb
loope
nop
test
mov
cwtl
xorb
sbbl
push
xchg
fmuls
cmp
call
sub
pusha
rolb
aas
and
test
ss
popf
es
test
insb
pop
dec
sbb
push
push
cltd
jne
push
loope
incl
test
pop
aas
test
divl
inc
mov
sbb
dec
cld
add
xor
or
pop
or
inc
mov
sub
dec
stos
push
inc
mov
iret
sub
dec
xchg
lock
jle
stc
pushf
sahf
mov
push
es
jnp
shlb
mov
test
mov
pop
mov
fcomps
jb
and
mov
cmpsl
fucomip
mov
pusha
pop
or
testb
xchg
pop
ficompl
jle
and
cmp
cld
mov
daa
repnz
ljmp
xchg
lcall
add
and
pop
jbe
pusha
test
add
into
adc
or
pop
add
or
jle
sbb
les
sarl
aam
into
aam
mov
test
in
roll
mov
mov
std
push
pop
push
push
pop
adc
lock
callw
and
inc
idivb
jnp
bound
push
inc
xor
dec
adc
in
ret
push
mov
xor
andb
dec
test
mov
aam
clc
fdiv
lea
fs
or
cmp
clc
xchg
enter
jnp
and
test
fadd
filds
inc
mov
popf
xchg
pop
or
ds
mov
add
in
adc
out
xor
inc
push
stos
mov
ljmp
repnz
mov
inc
pop
mov
fcmovb
pop
adc
cmc
shll
jle
mov
arpl
xchg
sahf
je
jge
cmp
jge
das
pop
add
mov
gs
push
adc
cmp
or
mov
or
inc
push
das
push
dec
mov
cmp
pop
outsb
cmpb
xchg
scas
sub
sub
ljmp
mov
mov
dec
lods
cmp
out
out
mov
movsb
cmp
dec
dec
arpl
add
stc
mov
and
push
add
js
repz
fidivl
inc
pop
daa
fisubrs
in
xchg
xlat
inc
js
push
adc
or
cs
inc
lods
ffreep
sub
and
data16
enter
inc
loop
cs
add
inc
lds
sbb
push
sahf
add
into
jge
xchg
sbb
inc
jo
std
rcll
dec
jg
sbb
cs
pop
sbb
and
pop
orb
mov
test
aas
shrd
call
lods
adc
aaa
add
cmpsb
nop
movsl
mov
fcmovnb
in
cwtl
add
in
mov
sub
adc
inc
pop
add
mov
pop
jno
dec
xchg
xchg
mov
push
push
jo
jmp
xchg
outsl
mov
push
out
daa
repnz
mov
mov
mov
cmp
hlt
cwtl
hlt
dec
aad
ret
test
and
pushl
std
cmc
mov
pop
add
cmp
gs
lahf
add
cmp
or
adc
sub
in
xor
test
mov
imul
fmuls
sub
scas
mov
test
mov
mov
inc
xchg
loopne
push
leave
push
mov
imul
js
cmp
cwtl
hlt
mov
mov
add
inc
ds
orb
sbb
cmp
jae
mov
sbb
call
pop
xchg
scas
mov
sub
out
cld
xor
test
push
icebp
orb
aaa
push
cmp
sub
pop
mov
mov
inc
in
not
add
sub
sti
insl
and
out
sub
psubq
mov
mov
pusha
aam
hlt
ficoml
jl
mov
sub
sbb
adc
fiadds
add
mov
xchg
sbb
mov
sbb
push
stos
mov
test
and
inc
imul
mov
les
imul
or
insl
and
pop
clc
ret
jp
fs
icebp
add
jne
add
or
jmp
dec
sbb
pusha
loope
xchg
icebp
adc
das
fdivs
les
mov
mov
add
pop
or
scas
push
imul
xor
pop
xor
insl
test
sbb
rcrl
and
xchg
jns
stos
sub
sbb
inc
mov
cmp
inc
xor
cwtl
and
sbb
or
push
je
sub
or
add
fiadds
add
and
icebp
js
sahf
adc
or
shl
mov
cmp
cltd
sub
adc
jno
mov
ret
loop
popf
cmpb
add
xchg
and
mov
inc
pushf
aas
lret
dec
xchg
xorl
outsb
mov
adc
data16
or
lods
inc
xchg
push
fs
jle
loopne
test
xor
outsb
push
mov
je
push
in
inc
mov
push
pushf
mov
sarl
sbb
aas
pop
and
xchg
sub
inc
pop
lcall
jge
enter
sub
scas
dec
fidivrl
sbb
push
adc
fucomip
mov
mov
and
cmp
pop
test
mov
hlt
jge
jae
aad
movzwl
or
inc
cmp
lret
dec
add
and
or
pop
mov
imulb
push
mov
jo
leave
ret
rolb
aaa
mov
outsb
add
mov
xchg
pop
sub
sbb
push
inc
std
mov
cmc
sbb
in
shl
fstl
in
or
incb
or
or
mov
mov
add
stos
jmp
mov
jns
inc
mov
shlb
mov
cmp
and
fucomp
insl
loope
addb
nop
pop
lea
mov
add
inc
inc
mov
subl
movsb
movsb
inc
adc
or
jle
add
xor
fnstsw
je
mov
repnz
sbb
push
adc
lock
pop
mov
fdiv
pop
mov
adc
xchg
push
loopne
xchg
sbbb
xchg
cli
and
shrl
or
mov
push
pop
outsl
mov
adc
inc
mov
aam
mov
inc
push
mov
xchg
divl
shrb
push
ret
cmp
std
stos
cmpsl
dec
cmp
mov
mov
out
mov
sbb
ljmp
cld
mov
jg
punpckhbw
std
rol
pop
xchg
or
mov
inc
cmp
ds
pop
inc
push
xor
mov
sbb
and
or
dec
mov
rol
inc
fdivrp
fists
push
and
mov
clc
stos
popa
decb
xor
add
movsl
sbb
outsb
adc
inc
loope
in
sbb
or
inc
cmpsb
mov
call
leave
fs
fldt
pop
lds
test
es
dec
cmp
aam
xchg
or
call
int3
imul
jge
mov
adc
jg
jl
lahf
out
jns
add
pushf
and
sbb
adc
mov
inc
fstps
inc
daa
flds
fs
imul
xchg
or
sub
in
fldt
mulb
js
xchg
push
stos
jae
sti
xchg
jno
loope
xchg
sub
inc
sub
dec
adc
call
mov
add
push
das
repnz
jl
pop
mov
mov
cmp
mov
aaa
sub
jmp
push
arpl
fldt
outsb
ja
orb
js
dec
and
ds
out
and
int
pusha
or
fisttpl
fdivrp
lea
xor
xor
lods
orb
and
mov
incl
rclb
ds
jg
movsl
xchg
icebp
adc
iret
pusha
adc
call
in
cld
xchg
mov
sub
mov
push
bound
ret
pop
ljmp
dec
andb
push
inc
cmp
fiadds
daa
imull
sbb
in
fldt
and
dec
out
mov
add
add
outsl
mov
int
sub
inc
sub
or
fbld
outsl
dec
inc
cwtl
stos
ljmp
mov
test
xchg
cmp
xor
es
add
adc
inc
sti
jp
push
add
mov
mov
ret
add
fdivs
mov
adc
adc
mov
push
je,pt
push
out
enter
dec
aaa
cs
pop
rcr
movsb
lahf
int
movsb
repz
icebp
aaa
mov
loopne
stos
call
stos
stos
imul
dec
adc
add
adc
lds
jne
jecxz
sub
cmp
or
call
sub
movsl
cmp
imul
mov
xchg
test
push
mov
jno
mov
cmp
mov
inc
ljmp
push
cs
in
dec
or
add
loopne
mov
push
adc
filds
pop
adc
adc
mov
mov
and
fnstenv
das
ljmp
or
fisubs
cmp
fsubrl
adc
and
test
in
push
daa
inc
inc
shlb
loope
push
lds
cmp
push
mov
mov
cwtl
push
rcrb
xlat
push
push
cmpsb
int
cs
sarb
jg
fstl
cmp
push
lahf
in
fs
jo
sbb
mov
sbb
jb
insl
stc
out
push
push
mov
movsb
pop
xchg
dec
movsb
cmpb
push
cmpb
push
adc
loop
push
loop
mov
inc
sti
xchg
mov
rcll
idivb
mov
mov
inc
mov
jl
ret
lcall
sbb
int
stc
xchg
leave
xor
lret
leave
dec
xchg
pop
aaa
push
mov
cwtl
adc
ds
dec
gs
ret
add
aam
or
mov
jnp
mov
adc
fcompl
mov
push
and
jp
stos
push
mov
es
sbb
and
pop
sub
negb
add
or
gs
ja
sbb
sub
in
mov
cmc
lds
pushf
push
test
in
sub
jle
mov
jge
rorl
lea
nop
push
sub
inc
jmp
push
jno
dec
clc
bnd
cmpsb
int
ljmp
sti
neg
lret
sub
jmp
sub
ljmp
out
fcomp
fstpl
stos
adc
std
pop
fwait
inc
mov
jecxz
pop
pop
outsl
ljmp
stc
inc
pusha
in
sub
ljmp
sub
sbb
out
stc
mov
and
inc
mov
addr16
add
fwait
sub
js
div
push
push
push
adc
fcmovnbe
jnp
fcoms
cmc
or
cmp
leave
loopne
push
jg
in
push
inc
mov
mov
and
push
fdivs
add
push
push
sub
add
fs
out
lret
je
cmp
lcall
out
shlb
jmp
sbb
or
push
mov
or
jle
das
push
mov
lods
fisttps
inc
fcomi
stos
lea
dec
into
or
xchg
cmc
ds
inc
icebp
bound
pop
cmp
loopne
shrb
dec
cmc
push
inc
cmp
fildll
pop
inc
mov
xlat
shlb
sub
sub
mov
or
jp
mov
push
or
xchg
mov
sarb
fmull
mov
push
adc
adc
pop
ret
gs
sbb
hlt
xchg
xlat
aad
adc
ret
cmp
test
pop
adc
lods
xor
insb
popf
movb
pop
movsb
pop
jl
in
mov
adc
int3
mov
hlt
ja
jge
cmp
and
xchg
popa
dec
sbb
inc
sbb
sbb
clc
jns
lods
or
adc
inc
ret
pop
loope
pop
inc
sbb
inc
inc
cwtl
int3
ds
pop
adc
in
movsl
dec
push
cmp
stc
scas
mov
push
iret
push
cmp
stos
pop
push
les
loop
ret
nop
int3
rolb
test
add
daa
cmp
or
fidivrs
stos
xorb
sbb
mov
ficoms
xor
mov
into
mov
inc
ss
shrb
adc
clc
in
xchg
xchg
add
push
sub
adc
shlb
sti
addr16
xchg
cmp
adcb
jge
addb
jbe
outsl
sub
les
sub
xchg
imul
push
adc
push
out
dec
gs
andl
mov
ret
aad
xchg
pop
push
incb
or
mov
jo
mov
inc
sub
popa
pop
cwtl
mov
ret
add
lock
in
sub
fmulp
pop
outsl
adc
rcrb
jnp
or
ret
pop
or
inc
fwait
add
jge
clc
pop
adc
pop
jns
sub
iret
iret
filds
dec
inc
decl
xorl
outsb
push
loope
divl
in
cwtl
mov
mov
sbbb
movsb
dec
xchg
adc
mov
loope
inc
popf
jbe
imul
in
cmp
fs
adc
pop
insl
xchg
dec
mov
loopne
sbb
mov
int
mov
pop
sbb
jle
pop
and
fiadds
aaa
sub
xchg
mov
movsb
loopne
add
outsl
mov
mov
mov
dec
mov
jp
mov
popf
and
lods
mov
test
gs
mov
cmc
arpl
cmp
std
push
das
scas
ljmp
es
testl
push
pop
loopne
ja
pusha
add
cmp
mov
lret
pushf
les
in
icebp
and
into
adc
push
pop
pop
arpl
sbb
ja
mov
ljmp
and
xchg
mov
jbe
pushf
subb
add
pop
insb
jge
scas
xor
xchg
cld
xor
iret
negb
test
sar
stos
popf
sub
pop
cs
repz
das
stos
idivl
cmp
in
sub
lcall
stos
pop
lods
pushl
js
jae
pop
sub
xor
xchg
jl
cmp
mov
pop
addr16
mov
iretw
push
addb
mov
mov
call
inc
add
jg
mov
loop
cmpsb
lods
das
sub
jg
fucomp
rorl
mov
or
mov
std
inc
lret
movb
dec
adc
mov
adc
and
inc
and
mov
inc
pop
or
add
and
fbld
clc
outsl
or
cmp
jns
dec
jmp
adc
inc
ficompl
mov
adc
adc
xor
inc
add
jbe
or
or
inc
and
sbb
fnsave
inc
popa
nop
adc
and
add
mov
mov
jne
inc
or
or
jb
inc
adc
pop
fldt
insl
push
jne
inc
push
lods
mov
push
dec
dec
imul
jne
push
dec
push
pop
jg
outsl
cmp
or
jo
jno
push
imul
push
into
jne
sti
dec
insl
add
push
mov
inc
nop
pop
dec
outsl
fwait
imul
and
adc
add
xlat
std
push
mov
inc
push
imul
pop
rcrl
popa
jae
xlat
add
dec
or
adc
lods
mov
cmp
mov
std
filds
inc
inc
dec
push
jns
leave
flds
mov
mov
inc
lcall
adc
and
jge
imul
xchg
std
and
mov
mov
outsb
cmp
mov
jg
gs
gs
xor
cs
insb
fists
imul
sub
lods
mov
pusha
jp
and
ret
into
xor
cmp
fstp
push
push
push
dec
adc
adc
xor
imul
pop
imul
lods
mov
inc
xchg
jbe
sbb
mov
aam
loop
cli
xchg
and
add
das
jb
adc
xor
xor
aaa
cmp
aaa
scas
jmp
lods
fstps
inc
rorl
loopne
xor
push
cs
pop
push
jns
and
test
imul
sub
sbb
fmull
pop
jae
fisttpll
sbb
lcall
leave
testb
out
sbb
xchg
incl
jns
inc
addr16
dec
je
pop
mov
mov
push
pop
mov
jo
aaa
mov
adc
mov
push
mov
rcll
inc
adc
imul
rcr
or
mov
or
and
cmp
push
imul
subl
pop
push
push
insb
and
dec
mov
lea
in
insl
add
lret
mov
arpl
and
push
rcrl
rorb
test
stc
adc
xor
cs
mov
ret
movsl
inc
popf
cmp
rorl
pop
xlat
scas
adc
or
jb
lcall
leave
stos
pop
ljmp
and
adc
xor
adc
inc
out
lcall
add
cmp
push
cmp
or
ds
popa
clc
lcall
jae
inc
imul
cmpsb
mov
pop
stos
rcll
inc
imul
loope
and
rcrl
and
loop
pop
jae
in
shrl
mov
mov
add
mov
addr16
jb
cltd
fisubrl
mov
ja
js
jns
mov
das
add
pop
jae
out
cmpsl
decl
push
jmp
pop
clc
sbb
pop
inc
inc
push
push
bound
jecxz
lcall
cmp
outsb
pop
aaa
outsb
jbe
push
push
xor
jae
lcall
bound
adc
jae
gs
popa
xlat
bound
xchg
das
movsb
adc
mov
stos
sti
mov
xor
adc
dec
push
push
gs
inc
arpl
insl
adc
and
sub
push
not
rcrb
add
inc
es
das
xor
shll
mov
jb
push
inc
out
in
sti
inc
inc
dec
push
inc
add
push
inc
dec
push
jns
sbb
inc
imul
in
cmp
aaa
les
pop
push
xchg
inc
cmpsb
xor
push
xor
xor
inc
mov
mov
and
or
dec
scas
mov
push
popf
loope
xor
xor
xor
add
dec
imul
gs
jmp
cmp
scas
mov
push
xchg
lahf
out
pop
imul
and
andl
in
xor
dec
daa
push
cmp
fwait
mov
push
sbb
inc
outsb
jo
ja
loope
notb
jae
inc
xor
mov
insl
mov
pop
nop
pop
add
xor
pop
dec
jno
mov
js
cld
jle
ljmp
add
dec
sub
pop
aam
mov
fiadds
cmc
or
pop
ficomps
mov
lods
jg
mov
filds
gs
fsubl
cmc
cmp
jecxz
inc
std
mov
push
pop
addr16
jno
mov
mov
ljmp
aam
ja
fwait
inc
fimull
test
fadds
rcrl
ss
cmpl
ljmp
xchg
pop
iret
bnd
dec
xchg
mov
add
fildll
lahf
dec
xchg
sub
sub
jmp
in
sub
push
sbb
and
sbb
cmp
icebp
mov
fdivr
call
mov
mov
cli
in
pop
ljmp
orb
or
xchg
decl
test
and
pushf
and
imul
lds
push
inc
cmp
js
jecxz
inc
jns
mov
xlat
fidivrs
push
mov
aam
cmp
adc
decl
lods
inc
pop
push
icebp
sub
mov
repz
inc
fwait
jg
cmpsb
scas
test
jnp
hlt
mov
aad
sub
lret
xchg
sub
or
dec
orl
sub
int
cltd
fs
incl
jle
popa
sbbb
mov
push
test
jmp
out
stos
pop
sub
ljmp
sub
cmp
lcall
not
push
mov
mov
cmp
sbb
mov
jmp
imul
iret
xchg
pop
sti
push
imul
call
bound
stos
je
xchg
sub
dec
shll
push
insl
int
inc
sbb
imul
ljmp
and
daa
popa
lea
clc
or
imul
pusha
jp
mov
mov
xchg
mov
sahf
icebp
inc
mov
xor
xchg
dec
es
cli
inc
aas
imul
arpl
jmp
iret
and
test
in
mov
cltd
orl
cmp
sub
sbb
sub
xor
pop
inc
fcomip
jg
xchg
sub
push
cmpsl
jo
loopne
scas
pop
and
adc
ljmp
in
add
push
sub
inc
clc
inc
adc
xchg
inc
and
add
sbbl
aam
lcall
sub
ja
push
xor
mov
xor
imul
movsb
and
jp
jg
daa
lock
dec
subl
push
or
add
gs
incl
je
sub
dec
imul
out
inc
fdivl
punpckldq
arpl
bound
in
jae
xchg
in
jecxz
pushl
iret
jb
int
mov
out
out
pop
xchg
cmp
cmp
xchg
add
jno,pn
jg
movsl
test
insl
fucom
int
call
mov
jno
pop
xchg
push
pusha
push
fcos
decl
dec
inc
in
imul
icebp
iret
pop
es
mov
or
dec
cli
mov
jae
decl
lods
repnz
cmp
pop
jne
aad
push
lahf
clc
dec
push
loope
in
ljmp
push
push
or
mov
iret
fnstenv
push
mov
in
lds
sar
int
loopne
fs
daa
mov
mov
hlt
enter
and
stos
ljmp
pushl
mov
int3
iret
adc
push
inc
fidivs
nop
xchg
pop
pop
adc
outsb
cld
sub
xchg
loopne
loop
jl
es
andb
es
fisubl
shlb
mov
decl
cmp
sub
xchg
add
xor
push
imul
dec
aas
dec
cmp
mov
les
jecxz
stos
stc
jnp
imul
mov
inc
stos
fbld
mov
jg
dec
fwait
sub
insl
and
imul
ds
ljmp
mov
push
adc
pop
dec
or
scas
aas
fmul
cs
movsl
jo
out
adc
jnp
aam
xchg
rcrb
xor
leave
or
jne
lahf
push
sbb
decl
sub
stos
adc
jb
pop
data16
jns
cmp
dec
jo
mov
iret
lcall
lods
lret
in
fwait
outsl
nop
inc
jno
xchg
push
lcall
inc
cmp
lret
into
ficoms
push
movsl
push
jle
xchg
pop
incl
xchg
rol
cmp
flds
imul
inc
dec
push
mov
pop
loope
jge
in
jg
pop
cld
push
push
loopne
xor
inc
jnp
inc
fistl
push
dec
stos
in
hlt
mov
adc
dec
popf
inc
into
arpl
dec
pusha
xor
lea
cli
mov
call
inc
add
or
fsub
in
mov
decl
call
call
aas
push
movsb
push
pop
hlt
cmp
add
jmp
add
dec
mov
jmp
addr16
mov
hlt
xchg
pop
and
std
push
sbb
xor
test
fdivrl
mov
loope
push
lahf
cld
decl
clc
and
clc
fistps
xchg
sub
stos
stos
cmp
adc
xor
sbb
call
cltd
mov
dec
mov
mov
and
fwait
addr16
aam
push
imulb
push
scas
dec
hlt
push
jp
jle
mov
push
mov
int3
and
popf
jmp
insb
fwait
xchg
sarb
lods
jns
sti
jg
incl
packuswb
pop
dec
jecxz
xlat
ja
cli
inc
jg
mov
jmp
push
inc
jbe
test
movsb
push
cmpsb
rorb
cli
fcmovu
test
dec
sub
int
movsb
mov
aas
pop
std
clc
int3
lahf
sbb
decl
stos
add
push
incb
or
xchg
repz
jmp
push
pop
faddl
bound
pop
jp
mov
stos
imul
ljmp
cld
jns
out
jbe
push
mov
pop
sub
rcrl
popf
xorl
ret
cmp
inc
cmpxchg
int
sub
add
cmp
pusha
sub
mov
push
out
jle
int3
jge
inc
push
push
or
dec
adc
lds
repz
aad
mov
dec
mov
outsb
rcrb
mov
cs
shrl
xor
mov
add
bound
jnp
clc
ret
xchg
xchg
push
das
push
mov
out
leave
or
jnp
repz
in
mov
enter
mov
jecxz
imul
test
lock
decl
cld
decl
icebp
sbb
daa
xor
out
jb
fs
loop
xchg
xor
mov
js
movsl
jl
and
mov
sbbl
xchg
ljmp
mov
pop
push
xchg
adc
iret
popf
inc
or
sub
shlb
loope
cltd
out
ljmp
pop
jecxz
sbb
sbb
lds
mov
cwtl
das
mov
clc
call
xor
mov
or
fidivl
enter
bound
or
movsb
add
mov
push
push
stc
xchg
es
xchg
aas
loopne
fists
xor
mov
inc
jno
out
clc
subl
jnp
add
mov
pop
sti
in
mov
jg
fxch
pop
es
push
jle
jg
pop
adc
in
jp
xor
ficoml
cmp
jmp
cmpsb
sub
xchg
cmc
hlt
ret
dec
lret
test
inc
cmp
mov
lcall
push
ret
rep
cmp
mov
sbb
push
xchg
bound
inc
pop
pushf
mov
add
jg
cmp
sub
lock
aad
xchg
icebp
inc
mov
incl
sbb
push
sarb
add
sti
test
mov
addr16
sbb
lds
loop
pop
test
fbstp
add
sbbl
mov
pushl
inc
sub
sub
sub
sbb
in
pop
mov
dec
add
das
lock
cmpsl
out
push
out
ljmp
jg
jb
mov
pushl
ljmp
mov
into
sub
lcall
cld
hlt
loopne
adc
pop
jmp
dec
pop
scas
mov
call
push
rcll
out
mov
fidivrs
xchg
adc
ret
incl
jle
xlat
xchg
xor
xchg
hlt
sti
frstor
inc
mov
ljmp
stos
push
in
pop
sbb
sub
stc
cmp
mov
sub
mov
push
xchg
lahf
xchg
or
outsb
add
xor
cmp
in
dec
cld
incl
sub
pop
fistpl
ret
xlat
mov
cmc
inc
call
and
sahf
sub
adc
and
cld
jmp
push
sub
adc
pop
mov
lret
or
jmp
lea
add
xchg
decb
jmp
push
push
loop
cmp
sub
idiv
pushl
popf
add
test
movsl
mov
sub
jle
pop
cmc
rorb
ljmp
cmp
pop
outsl
repnz
pop
cmp
popa
loopne
pushl
and
mov
into
mov
or
lcall
call
popa
dec
jno
or
cwtl
mov
loopne
pop
pop
or
or
scas
out
xchg
cmp
pop
sarl
imul
fcmove
xor
jne
scas
test
shlb
into
dec
adc
les
inc
lea
das
hlt
call
shrl
js
lcall
dec
adc
push
rclb
ljmp
inc
jp
rolb
xchg
out
push
sti
dec
mov
mov
decl
xchg
jbe
leave
gs
stos
std
lcall
pop
ja
fmull
inc
mov
bound
cmpsb
ret
push
into
cwtl
cmp
not
popa
mov
lahf
add
mov
inc
adcl
sub
xchg
push
mov
sbb
in
pushl
mov
decb
jne
cmp
cmp
mov
pushf
loop
stc
jb
cltd
dec
lods
dec
lcall
cs
mov
mov
pop
mov
int3
inc
xor
inc
mov
jmp
jmp
or
outsl
and
dec
rorb
adc
lret
mov
mov
or
aad
stos
sbb
mov
sub
jo
jne
jae
sti
scas
std
jno
sub
add
subl
aaa
xchg
mov
add
xchg
xor
fisubl
xchg
pop
cmpsb
dec
or
add
outsl
jp
push
lcall
sub
shrl
dec
scas
jae
jnp
aas
repnz
sbb
sbb
sbb
movsl
pop
sub
sub
in
mov
loop
mov
mov
mov
nop
cli
lds
inc
rcll
dec
adc
lcall
cmpsl
add
mov
mov
mov
ljmp
and
mov
inc
dec
and
jno
fsubr
jmp
push
dec
orl
out
pushf
sbb
push
decl
jb
pop
roll
lock
cmc
dec
adc
fstpl
inc
or
sti
jae
inc
add
and
pop
stos
test
lea
rclb
data16
incl
cld
outsb
xchg
int
inc
mov
sbb
fwait
ret
fimuls
jecxz
sbb
inc
call
adc
push
and
insl
fidivl
fsts
mov
add
roll
call
dec
jns
es
cmp
jmp
mov
movsb
dec
jae
pop
ljmp
fistps
call
insb
outsb
add
cmp
clc
into
xor
xor
inc
push
lock
cld
cld
dec
dec
adc
pop
ss
arpl
test
les
jmp
and
testl
fmulp
mov
bound
leave
xor
mov
clc
outsl
push
js
cmpb
jnp
dec
jno
jp
ljmp
fbstp
popf
mov
int
mov
push
and
xorb
fbld
lahf
mov
mov
pop
pop
out
and
pushl
push
mov
or
xor
xor
lds
add
xchg
call
lcall
add
or
sub
or
mov
arpl
or
loope
clc
mov
add
pop
mov
loope
incl
lahf
test
xchg
mov
arpl
inc
movsl
xor
mov
mov
ret
ss
je
xor
scas
cmp
jg
lock
and
repz
fists
pop
dec
pop
out
fnstcw
mov
adc
sti
dec
or
xorb
lret
call
cltd
insl
mov
and
and
sbb
adc
paddsw
insl
aaa
mov
jecxz
pushl
nop
xchg
xchg
fisubrl
fdivrl
mov
fdivrp
jg
repz
dec
mov
aad
shl
push
mov
lock
movsl
insl
imul
ljmp
sbb
push
dec
loop
das
mov
jb
xchg
mov
pop
mov
push
ja
rclb
test
nop
daa
mov
test
repnz
mov
enter
jmp
lods
lock
push
inc
in
mov
inc
std
pop
sbb
cmp
sahf
mov
fdivs
fisttpll
sbb
push
movsl
push
dec
mov
mov
aaa
lea
push
pop
lcall
sub
sbb
xchg
pop
xor
cmp
inc
mov
jmp
xchg
or
in
lds
mov
imul
push
daa
xchg
lcall
cmp
inc
les
mov
add
mov
push
sbb
dec
add
incl
adc
andb
jg
imul
mov
mov
push
pop
rclb
push
adc
cs
xor
jp
inc
mov
testl
xor
shrb
mov
das
xor
pushl
mov
icebp
aas
shll
xor
xchg
cmp
pop
stos
notl
jle
cltd
xor
lds
cwtl
jb
lods
outsl
and
icebp
lcall
roll
pop
jg
movsl
xchg
lods
sub
psubd
dec
mov
sub
pushl
in
mov
xor
push
xor
fs
mov
stc
lods
es
and
xchg
jmp
cmp
mov
pusha
pop
shlb
insb
mov
loop
fbld
cmp
fwait
lock
ljmp
sub
in
pop
mov
xchg
popa
adc
lret
xchg
sbb
cmp
das
into
lret
rcl
mov
mov
xchg
jmp
sub
into
imul
fistl
cmc
push
pushf
mov
inc
dec
es
out
js
divb
mov
xchg
cmpsl
loopne
gs
mov
popf
mov
out
pop
sub
ret
std
or
jecxz
push
mov
clc
fs
mov
jmp
shl
divl
mov
mov
inc
pop
out
stc
sarb
clc
cmc
ljmp
fdivl
outsl
cld
xchg
ja
xchg
iret
adcb
mulb
xor
lcall
insb
lock
mov
jg
outsb
stos
pop
cld
mov
mov
imul
inc
or
ja
push
and
insb
jno
sbb
cld
outsl
mov
das
push
das
jmp
repnz
push
mov
mov
lcall
scas
sub
clc
cmc
adc
ljmp
aaa
clc
enter
pop
rcrl
mov
xor
stos
pop
popf
ljmp
cld
decl
pushf
or
cmpl
adc
ja
adc
push
stos
inc
sbb
cld
jmp
inc
add
xchg
in
xchg
xchg
pop
rorb
pop
test
adc
add
xchg
add
rol
repz
test
pop
adc
fwait
lods
mov
sar
jg
cli
mov
xchg
dec
adc
in
cmc
int
pushf
adc
jmp
push
cmp
fldl
inc
sub
or
cs
pop
call
jns
dec
lock
lret
dec
dec
lret
nop
mov
jg
jmp
or
inc
jge
in
jle
sbb
xor
xchg
mov
add
rclb
subl
addl
das
std
jmp
test
xchg
ret
or
cli
sti
std
pushf
mov
jle
insb
xchg
ja
add
mov
fildll
into
mov
adc
sbb
pop
das
out
les
repnz
cmp
loope
lret
or
lcall
call
sub
xchg
add
in
fistpl
pop
enter
dec
loopne
rcrb
cmp
arpl
jl
mov
lcall
jle
cmpsb
pop
clc
sbb
sub
popf
sarb
es
aad
icebp
pushl
stos
jle
pavgw
push
jo
cltd
dec
inc
or
add
mov
icebp
std
lods
mov
cwtl
test
mov
sar
mov
repnz
xlat
mov
mov
rclb
jg
mov
nop
dec
out
fs
or
add
orl
cld
mov
mov
insb
sub
push
sub
pop
xchg
jecxz
dec
mov
cwtl
pushf
pushl
mov
xchg
aas
jbe
push
and
sub
lret
mov
jle
imul
cmp
pusha
fdivl
int3
cmp
push
sub
xlat
push
mov
int3
int
fisubs
adc
in
or
push
push
int3
xchg
dec
dec
icebp
fsubl
dec
mov
push
aaa
ret
inc
popa
das
mov
test
call
inc
fisttps
mov
jecxz
or
outsl
cld
mov
cli
add
rcll
dec
cmp
lahf
ds
call
loope
mov
push
inc
fs
and
nop
push
addr16
dec
dec
sub
in
jg
in
dec
push
mov
push
insb
ret
mov
cmp
ljmp
popa
pop
stos
jbe
test
insb
xor
stos
out
push
sub
xchg
pop
ljmp
sbb
push
pop
or
and
outsl
lock
sub
test
xchg
mov
mov
push
xchg
push
sbb
cmpsb
pop
jno
into
pop
std
pushl
fldt
scas
js
xor
out
mov
push
jns
xchg
pushl
int
mov
cmp
inc
jbe
xor
sbb
pop
ljmp
xor
lcall
repz
pushl
dec
mov
add
in
jge
mov
push
xchg
add
stos
mov
stc
jg
rcl
mov
jne
or
popa
popf
enter
pusha
outsb
cltd
adc
xor
pop
std
das
hlt
xchg
dec
inc
icebp
adc
daa
adc
icebp
sbb
mov
std
cmc
call
push
adc
or
pop
adc
repnz
fildll
dec
inc
and
stos
sbb
fildll
std
nop
lret
cmp
dec
aad
outsb
dec
inc
imul
gs
jecxz
mov
mov
mov
sahf
insl
jns
and
pop
rcpps
or
xchg
adc
xor
mov
jge
mov
das
ljmp
hlt
aam
mov
inc
popf
out
lods
dec
and
daa
jno
in
mov
decl
mov
and
ficomps
and
test
dec
and
mov
repnz
idiv
ljmp
inc
repnz
inc
addr16
mov
and
pusha
mov
addr16
ret
pop
lcall
fldenv
aaa
or
imul
cld
ret
jnp
xchg
mov
cwtl
sbb
scas
inc
ds
mov
pop
or
lcall
mov
in
popa
adc
rcll
inc
shl
lock
jo
mov
mov
fdivrl
or
outsl
hlt
int3
clc
imul
nop
cmp
and
mov
pop
std
cmp
mov
orb
arpl
and
fmulp
mov
movsl
fcomip
sbbl
cld
lock
jg
fstl
mov
pushw
jle
xor
rorb
int
outsb
ss
or
sbb
das
mov
daa
sbb
mov
sbb
mov
mov
jb
jl
int3
jecxz
sub
adc
call
xchg
cmpl
cli
aad
cmp
lods
cmp
inc
mov
decl
std
add
hlt
in
imul
push
rcrl
lcall
inc
xchg
pop
into
orl
out
into
ret
pusha
pop
mov
jae
test
into
ljmp
pop
ljmp
cmp
cmp
lcall
sub
mov
mov
cmp
jp
cmp
test
add
pop
das
cmc
jmp
mov
ror
and
mov
ljmp
lcall
lods
pop
icebp
jnp
dec
add
pop
pop
icebp
jecxz
fldl
cld
adc
push
sahf
fsubrl
push
push
xorl
xchg
jg
dec
ret
add
pop
pop
add
dec
and
jl
scas
jecxz
pop
add
fdivrs
dec
fistps
pop
mov
or
or
mov
mov
sbb
jbe
mov
pop
clc
jg
pop
nop
pop
popa
shl
jg
and
lcall
decl
xor
xchg
movsl
xor
stos
popa
dec
ss
lods
outsb
push
hlt
sbb
ja
mov
cmpsl
jb
push
shrb
jp
xchg
ljmp
sub
decb
xchg
pop
std
and
or
pop
pop
daa
inc
cld
repnz
cmpsb
jo
xorb
mov
decl
std
ss
jnp
es
cmpsb
daa
fisubl
mov
pop
lods
push
aad
push
das
push
cli
and
ret
xlat
ja
imul
test
addr16
pop
jbe
push
mov
xorb
incl
lcall
leave
lock
dec
xchg
jb
xchg
mov
dec
pop
clc
insl
fdivrp
xchg
jle
out
lcall
jg
cs
gs
cli
lret
push
mov
cmpb
out
mov
mov
sub
gs
cmp
and
in
cltd
jnp
cwtl
popfw
cmpsl
lcall
mov
arpl
add
test
inc
in
pop
sbb
jg
and
cwtl
arpl
mov
insb
push
leave
xchg
push
sub
fwait
mov
icebp
push
inc
push
loopne
es
call
inc
xor
push
mov
sbb
clc
lcall
dec
popf
xor
mov
and
cmp
adc
inc
adc
loopne
pop
and
js
mov
cmpsl
test
leave
outsb
icebp
adc
mov
mov
cld
jmp
push
lock
out
mov
sub
mov
push
imul
xor
and
jbe
int
loope
cltd
pop
and
bound
or
mov
mov
test
divb
or
into
sub
cld
ret
stos
sub
mov
lahf
cmp
stos
cld
imul
inc
call
jg
pop
call
push
and
dec
mov
adc
mov
arpl
mov
lock
clc
stc
mov
ret
addr16
ljmp
lahf
and
pusha
call
sbb
nop
mov
outsl
std
pop
push
lock
idiv
or
xchg
outsl
fsubrl
cmpsl
jno
fstl
loope
sub
sbb
cmpsl
pop
xchg
or
enter
xor
or
inc
mov
pop
repz
jecxz
adc
scas
mulb
add
jo
dec
add
xor
mov
mov
xor
popa
push
xchg
inc
call
mov
pop
lret
fisttpll
sti
sbb
in
cmpsl
popa
or
xlat
mov
ljmp
xchg
or
mov
mov
insb
jg
call
sub
stc
jecxz
cltd
push
psrlq
lods
pop
sbb
outsb
outsl
shlb
jae
xbegin
push
jne
in
dec
add
clc
jp
shll
call
imul
mov
cltd
sub
cmp
push
decb
xchg
pusha
stc
push
inc
and
repz
loop
adc
adc
and
pop
call
jmp
cld
imul
mov
dec
sbb
lods
faddp
jae
ljmp
loope
pusha
test
jge
mov
push
shrb
pushl
ret
mov
in
jno
jge
sub
xchg
std
enter
cld
pushf
xlat
mov
jge
and
mov
dec
imulb
lret
call
cli
jecxz
fwait
mov
lcall
jb
icebp
xchg
push
clc
and
outsl
cmp
jg
inc
decl
xor
ror
xchg
push
imul
and
mov
outsl
pop
decb
mov
push
xor
stc
subl
xor
cmp
loopne
jmp
xor
sub
add
push
test
gs
and
add
out
lcall
decl
test
cmp
jo
jno
dec
xlat
mov
das
out
fildll
std
inc
push
and
dec
sub
ljmp
jg
jg
adc
test
and
cmp
iret
insb
outsb
or
das
sub
jae
pusha
cltd
stc
lret
lea
ljmp
mov
orb
or
ret
cmp
mov
dec
sbb
in
push
sbb
push
and
xor
inc
insl
mov
ljmp
movsl
pop
lds
cmp
lea
loop
jb
or
jp
sub
jp
icebp
mov
dec
lods
hlt
jno
xorl
pop
std
das
xor
jno
add
imul
out
jnp
pop
popa
ficoms
cld
pop
mov
les
mov
insb
in
incl
decl
ss
ret
js
fs
cmp
xchg
hlt
lcall
mov
aas
jle
xor
icebp
jmp
sar
mov
fisubrs
rcr
mov
scas
test
add
pop
mov
dec
inc
adc
dec
hlt
push
push
add
adc
std
jmp
jmp
sub
dec
test
addb
pop
loop
push
shll
pusha
xchg
nop
ret
cmpsb
mov
fisubrl
ljmp
push
movsb
out
les
add
cli
int3
jo
addl
dec
sbb
push
fnstcw
sti
mov
sahf
xorb
xchg
push
mov
incl
sbb
sub
ss
aaa
cli
idivb
mov
repnz
enter
ljmp
shlb
lret
cmpsb
jbe
out
lock
xorb
fcomip
scas
push
sbb
loope
es
jns
sub
clc
sub
movsb
lret
aaa
pop
xor
adc
sarb
sbb
push
mov
insl
clc
jg
in
inc
pop
or
mov
sbb
and
xchg
bound
hlt
pop
xchg
out
mov
inc
pop
sbb
xchg
inc
adc
outsl
icebp
loopne
dec
es
mov
arpl
into
pop
outsl
cld
and
cmp
push
rorl
or
call
incl
shll
mov
mov
mov
or
insb
mov
pop
inc
push
adc
int
mov
push
adc
dec
fnsave
mov
mov
stos
decl
cmc
mov
lea
lcall
sbb
sarb
jg
sbb
sti
lea
loop
ja
dec
clc
jge
add
cmpl
sub
shr
repnz
loope
cld
jmp
mov
cmp
add
push
or
inc
add
or
jno
enter
jb
sbb
jmp
jp
nop
sbb
mov
outsl
push
and
iret
mov
fwait
lods
cmp
sbb
jae
shl
leave
cmp
jecxz
int3
in
mov
pop
mov
jae
pusha
jbe
jecxz
insl
xor
xchg
jae
clc
xchg
js
xor
mov
cmp
ljmp
daa
inc
daa
push
and
jae
lret
cmpsl
mov
pop
sub
outsb
sub
mov
addr16
add
ljmp
lods
and
xchg
xlat
cmpsb
jp
js
xor
scas
jp
test
int3
dec
aas
dec
xchg
decl
lock
mov
addr16
cmp
test
mov
fsubrs
hlt
call
mov
sub
fwait
lock
or
sub
sbb
scas
sub
ret
sub
add
call
std
push
push
nop
mov
leave
push
rol
outsl
jnp
lds
fmulp
adc
call
sbb
mov
or
lahf
push
inc
or
push
decl
mov
data16
sbb
into
fstpl
adc
lcall
faddl
mov
add
cmpsb
add
sub
movsl
adc
ret
popa
inc
push
scas
jmp
push
hlt
inc
lods
mov
pop
scas
mov
call
aaa
jp
push
aas
mov
push
mov
pop
sub
jge
imul
pop
fildll
fmuls
cwtl
rorw
add
push
sbb
and
mov
dec
pop
imul
ljmp
popf
push
adc
jae
cmp
call
xchg
jbe
cwtl
bound
pop
fmull
not
in
gs
jno
pminub
decl
out
das
pop
ljmp
push
jno
adc
das
std
inc
pop
sarb
adc
xor
jg
mov
lcall
jb
data16
fst
mov
dec
jns
je
mov
jae
test
dec
jne
or
dec
adcb
lcall
fucomp
inc
jno
cmc
cwtl
iret
jle
inc
jb
in
push
mov
decl
adc
js
lret
fcomi
stos
cwtl
stc
int
in
ret
test
mov
gs
sti
add
test
ljmp
clc
jg
insl
ss
mov
jle
mov
cmp
movsb
icebp
int3
fbstp
lret
nop
negl
in
rcl
stos
cmp
push
mov
les
and
mov
pop
pusha
inc
outsb
or
and
call
jle
loop
rolb
cwtl
pop
scas
xchg
shlb
addr16
pop
sub
cld
dec
std
add
jecxz
shll
lahf
iret
xor
in
inc
add
cmc
out
insl
out
mov
dec
sub
mov
cwtl
loopne
cmp
inc
shrb
mov
or
fiadds
movsl
inc
test
scas
inc
dec
leave
xchg
xlat
repz
ret
xchg
sub
sbb
rol
aas
pushl
inc
cmpsb
cld
mov
mov
cmpsl
xchg
jge
rolb
cli
leave
xchg
or
pop
dec
decl
push
lea
shll
add
dec
mov
push
add
cmp
mov
xor
out
pusha
loope
xor
jb
movsl
xchg
mov
xor
jg
mov
mov
cmp
lock
clc
inc
mov
push
xor
jg
sub
lret
cmp
mov
sub
adc
mov
sbb
leave
jbe
mov
xchg
push
add
into
push
jae
add
call
or
add
and
call
incb
pop
or
inc
mov
cmp
mov
sub
xor
add
jg
inc
ret
out
push
ret
push
or
call
xor
mov
adc
jg,pn
jbe
mov
pop
lods
ja
das
fistpll
mov
fstl
stc
out
push
jecxz
sarb
pop
mov
xchg
push
push
mov
mov
test
decl
hlt
scas
lea
adc
ss
xchg
insb
cmpsb
decb
icebp
push
pop
cli
push
fistpll
mov
cmp
fucomip
mov
pushf
addr16
adc
push
inc
push
std
rcrb
clc
icebp
sarl
test
lcall
js
adc
jg
sbb
ja
mull
add
cld
push
add
lahf
ja
jo
cmp
incl
lret
inc
nop
jmp
mov
jl
cmpsb
sub
test
jg
filds
cmp
insb
fldt
cmp
jg
adc
lcall
or
rcrb
jp
fstpt
and
stos
cltd
popa
in
mov
adc
pop
loope
and
incl
pop
and
aad
jmp
jno
jne
das
arpl
sub
insb
lret
mov
call
mov
mov
mov
mov
or
jo
cmp
aaa
xor
std
mov
push
inc
mov
enter
aas
and
call
std
jmp
adc
mov
cld
jge
cmpsl
movsb
aas
lcall
and
aam
imul
mov
jo
incl
ljmp
cmc
sbb
jbe
sti
jl
test
ljmp
lock
inc
ret
mov
imul
jg
mov
mov
push
and
rcr
pushl
int3
adc
or
xor
jge
mov
cld
ljmp
xchg
or
mov
pop
add
jmp
in
pop
scas
sbb
adc
mov
inc
rcl
jl
fsubr
ljmp
fs
and
les
push
jae
jmp
xchg
outsb
aad
aam
jns
xchg
dec
stos
push
bound
pop
mov
out
inc
sub
insl
dec
cmpsb
jo
sub
mov
icebp
cmp
mov
inc
jecxz
mov
mov
push
outsb
jg
in
call
or
xor
mov
sti
pop
fwait
dec
mov
jbe
mov
xchg
sbb
fisubl
mov
inc
inc
decl
push
nop
sub
sti
repz
sar
jmp
adc
stos
out
data16
add
xchg
adc
mov
shll
pop
clc
pop
ret
shrb
sahf
or
fs
aas
inc
sbb
lcall
adc
push
test
sbb
cld
leave
idiv
mov
into
das
popa
loope
out
push
sbb
adc
loope
bound
push
dec
movsb
scas
sbbb
cmpsl
sub
mov
int
mov
arpl
rcr
and
push
jp
and
enter
aam
cmc
push
incl
dec
pop
fcompl
sbb
xchg
dec
cmp
ljmp
cld
ljmp
cmp
push
jg
shld
push
lds
add
lcall
rcrb
aam
pop
mov
sarb
sahf
lds
jae
lods
andb
rorl
push
hlt
mov
jno
add
std
stos
push
fwait
daa
insl
repz
fidivl
xchg
rcrb
sub
ret
in
xlat
cltd
in
mov
jg
or
aam
clc
lcall
push
gs
int3
pop
add
pop
call
out
bound
sahf
mov
xor
mov
mov
inc
jecxz
push
ss
pop
dec
lds
xor
add
repz
mov
mov
icebp
aas
xchg
lock
xor
mov
mov
idivl
mov
mov
cli
out
push
push
dec
testl
call
jb
ljmp
les
jae
mov
outsb
add
mov
sbb
into
imul
jg
call
rcrl
xor
cmp
push
rcrb
repz
js
sbb
adc
mov
test
les
in
xor
mov
sbb
loope
cmova
jg
iret
dec
and
pushf
pop
and
aam
test
mov
jge
jns
je
sahf
imul
out
in
xchg
into
test
icebp
bound
cmc
jmp
xchg
mov
insl
cmp
push
add
mov
int3
gs
cmpsl
sbb
pop
mov
push
cmp
das
enter
adc
mov
xorb
call
stos
jne
mov
xor
mov
mov
dec
out
mov
int3
mov
xchg
pop
repnz
jmp
repz
lcall
push
add
out
into
lahf
incb
or
aad
icebp
enter
sbb
cmp
rolb
call
lods
cmp
iret
cltd
add
cmpl
sbb
mov
jns
cmp
and
mov
push
sbb
mov
mov
jge
lds
xchg
pop
popf
xchg
jg
xchg
test
sbb
add
popf
frstor
cmp
mov
inc
jne,pn
add
clc
ljmp
cmp
test
call
cli
push
add
lods
pop
fildll
jmp
icebp
dec
adc
into
jmp
loopne
jl
and
and
bound
fwait
sub
and
lcall
fcmovu
ret
in
fs
pushl
mov
ss
add
rcrb
and
mov
sub
mov
lods
ljmp
sub
in
aaa
add
jno
cwtl
filds
fdivr
sbb
icebp
mov
shlb
pop
jmp
repz
add
lods
jne
jns
jne
push
jmp
call
sub
pusha
sti
and
sub
rorl
push
pop
jo
sub
mov
test
sbb
sbb
lcall
sbb
fsubl
out
faddl
std
mov
cmpsb
dec
cltd
fildll
call
rorl
ror
js
js
mov
dec
jns
add
push
decl
loop
dec
xchg
sbb
pop
xor
lcall
clc
mov
push
imul
cmpsl
add
add
sbb
dec
jg
or
pop
arpl
pop
and
das
jne
adc
pop
les
call
cmpsb
daa
jge
repz
cmpsl
das
sub
decl
ja
orl
add
jmp
fldl
icebp
sbbl
mov
sub
jle
sub
or
add
not
cmpsb
mov
out
inc
push
adc
ror
ljmp
mov
pop
sbbl
sbb
fsubrs
mov
shl
jg
xchg
dec
sub
mov
dec
cs
sub
pusha
fsubr
repnz
or
das
cld
das
lret
stos
mov
sti
sbb
jecxz
test
sbb
xor
stc
stos
jbe
jns
stc
loopne
enter
clc
cli
cs
adc
pop
push
add
in
dec
std
outsl
lock
aam
in
xchg
mov
scas
push
mov
call
mov
add
push
mov
ss
rcrl
cld
in
out
mov
sub
inc
add
sbb
icebp
pusha
jo
push
mov
pop
neg
dec
jp
scas
adc
xlat
inc
gs
or
and
pushl
lds
and
inc
mov
push
sbb
add
adc
mov
inc
add
and
or
add
mov
popa
sbb
dec
mov
dec
andl
jmp
ds
pop
fmul
je
jecxz
lock
and
lcall
fcompl
mov
in
pushf
xchg
mov
ss
cmc
decl
add
push
mov
lock
cmp
loop
fstpl
rclb
xlat
and
lods
hlt
and
pop
add
push
call
lret
mov
test
mov
sub
ds
mov
pop
js
call
fnstcw
rcrl
fidivl
test
ss
call
dec
xchg
xor
jg
pop
and
stos
xchg
popa
bnd
inc
lock
int
addr16
or
inc
jmp
adc
sub
sahf
clc
cld
mov
shrl
in
or
decl
js
out
lcall
xor
push
jmp
jp
jae
scas
push
pushl
and
sbbl
nop
gs
or
and
mov
add
outsb
xchg
push
xor
clc
fildll
icebp
dec
or
mov
addb
mov
sti
data16
scas
addb
scas
jnp
dec
popf
js
push
call
jno
pop
sbb
ret
xchg
pop
rolb
aaa
lahf
lcall
inc
add
les
stos
sub
rol
add
jg
push
repnz
pusha
mov
mov
and
fistpll
shll
jmp
ret
xchg
add
std
jg
pushf
push
jb
mov
xchg
imul
mov
aas
stc
mov
jns
sub
aad
fmul
cwtl
sbb
mov
movsb
and
lcall
cmp
ja
xor
iret
push
mov
enter
jbe
pop
mov
jg
incl
loopne
jne
lret
lcall
sbb
movsl
sahf
icebp
into
pop
lret
mov
mov
mov
roll
mov
push
mov
jae
pop
cli
inc
mov
sbb
pusha
sub
jecxz
sti
mov
call
jo
mull
outsb
cmp
stos
std
clc
jg
jg
mov
inc
sysexit
push
aaa
push
cmp
pop
push
pop
pop
adc
clc
push
fbld
adc
movsl
mov
and
leave
mov
push
xchg
mov
jo
push
iret
shl
fdivrl
add
jb
sub
inc
cmp
lock
shlb
cli
decl
aam
xchg
adc
bound
or
jg
jg
inc
rcr
adc
pusha
iret
cmc
sarl
dec
test
push
and
lret
jg
test
jmp
mov
xchg
cli
cmp
jns
push
fisttps
aaa
repnz
xchg
call
std
incl
jmp
jb
ret
pop
gs
test
dec
push
loope
movsl
cltd
decl
lcall
test
stos
subb
stc
ret
xlat
mov
add
out
sbb
pop
fists
sub
lret
xchg
jns
or
jge
loope
subl
test
mov
sub
jmp
enter
jnp
loop
clc
mov
loopne
or
mov
ficompl
imul
sbb
lret
push
stc
movsl
push
mov
popa
or
imul
mov
jg
cmp
mov
das
pop
popa
mov
xlat
cmp
call
das
sub
mov
sub
xchg
mov
jg
or
push
xchg
cmp
dec
mov
push
stos
push
lock
lcall
cmp
jo
cmp
shrb
jg
pop
mov
in
jb
std
sub
frstor
mov
xlat
neg
mov
cld
ljmp
movsl
test
jno
fcoml
mov
sbb
fstpt
push
shll
outsl
or
repz
test
sbbb
aaa
jb
jns
incl
xchg
cmp
adc
test
imul
sar
or
lods
cmp
mov
mov
fisubrl
lcall
push
mov
or
jnp
or
sbb
rorl
stos
cmp
fstl
clc
inc
arpl
leave
push
push
in
sbb
cmp
incl
mov
lcall
ja
aad
push
aam
lret
sar
sti
testl
nop
ss
lods
ja
adc
dec
mov
dec
hlt
sbb
icebp
ljmp
outsl
das
or
lcall
adc
leave
dec
rorl
pushf
pop
adc
xchg
rolb
mov
ljmp
sbb
fcos
pushl
xor
cmp
add
jl
mov
mov
or
bound
rclb
bound
xor
adc
xchg
dec
push
mov
sbb
nop
inc
sub
add
movl
and
sub
test
mov
les
mov
lcall
mov
icebp
sar
sub
xchg
mov
dec
pop
loop
mov
std
add
mov
movsb
pop
xor
and
cmpsb
sbb
mov
dec
insl
std
add
mov
mov
rolb
cmpb
jmp
addr16
gs
inc
push
dec
sub
movb
decl
fistps
inc
stc
fsubp
out
xchg
xchg
std
daa
mov
xlat
sti
and
movsb
lea
inc
sbb
out
or
in
ret
int
ss
or
mov
inc
cltd
or
ret
cmp
into
cltd
pop
add
clc
mov
daa
dec
sub
mov
negb
inc
jne
and
incl
pop
je
call
adc
push
sub
xorb
out
out
dec
std
add
fnclex
dec
jmp
mov
xchg
call
jmp
stos
cmp
xor
xchg
sbbl
jg
xchg
subb
mov
mov
imul
popa
jbe
movsb
mov
aaa
clc
push
xlat
into
ret
push
jg
incl
adc
add
nop
dec
sbb
repz
lods
push
clc
int
test
or
cli
call
adc
stos
mov
sbb
popa
cmp
mov
idiv
das
mov
in
aaa
lods
stos
lret
repnz
jl
sti
dec
adc
js
add
push
mov
jno
jns
mov
leave
imul
call
loop
xchg
inc
insl
add
cs
or
inc
add
int
push
call
inc
adc
pop
jmp
inc
jg
jae
faddl
mov
dec
sub
push
sub
push
jl
add
fildll
cwtl
stc
imul
scas
xchg
push
push
fidivrl
mov
mov
or
mov
push
jp
sbb
insb
xor
adc
mov
jg
clc
pop
loopne
lcall
inc
movsl
add
es
icebp
push
or
cmpsb
rorl
test
sub
insb
fs
fsubl
pushl
mov
xor
cmpsl
lahf
sub
jmp
push
call
mov
mov
insl
add
ljmp
lods
lods
lcall
push
int
add
stc
push
insl
loopne
or
pop
roll
popa
incl
jmp
out
stc
push
jmp
mov
movsb
lock
cmc
inc
cld
stos
int3
push
ret
lock
xor
call
sub
arpl
bound
xchg
icebp
loope
mov
leave
xchg
xchg
push
shrb
jo
aad
repz
movsb
pop
loopne
jg
xor
mov
ljmp
das
hlt
movsl
add
adc
hlt
cwtl
cmp
and
jg
aaa
aam
lret
les
jmp
pop
loope
mov
js
unpckhps
fs
jbe
clc
add
pop
xlat
hlt
decl
cld
cmp
rcl
sbb
cmp
dec
pop
neg
jo
outsl
lock
jle
fiaddl
andnps
or
jecxz
imulb
sti
jg
mov
addr16
stos
mov
icebp
call
add
sbb
add
stc
les
lret
add
xor
decl
cmpsl
jno
loopne
push
mov
inc
jg
xchg
pop
loopne
mov
pop
mov
out
pop
and
mov
push
mov
insb
cld
jg
sbb
jbe
or
ljmp
icebp
sbbl
fmuls
push
sbb
int
and
dec
repz
outsl
imul
cmp
aas
mov
dec
outsl
xor
daa
lea
add
cli
pop
mov
adc
popa
cwtl
xor
push
pop
lds
xchg
decl
mov
aas
imul
gs
pop
lea
push
dec
rol
and
jmp
and
dec
enter
fucomip
sub
aam
decl
push
test
mov
bound
sbb
addr16
jmp
test
movsl
mov
imul
adc
cld
insb
push
out
lret
call
and
je
sbb
xlat
mov
lods
pop
jg
decl
movsl
xchg
lret
jae
imul
mov
dec
lret
int
arpl
lods
call
orl
mov
jno
or
cld
stos
movsb
in
cld
cmp
mov
fisttpl
jp
mov
sub
xchg
aaa
hlt
mov
adc
cli
ljmp
pop
popf
xor
ret
mov
sub
shlb
mov
mov
add
fwait
push
mov
xchg
sbb
xor
jge
rcrl
pop
cld
fiaddl
lret
jecxz
cli
into
in
push
add
xchg
incl
js
outsl
mov
and
les
dec
xchg
pandn
add
fsub
mov
ficompl
xchg
cmp
xchg
decl
jge
inc
cmc
mov
adc
inc
lret
inc
or
jl
out
lock
popf
popa
cmp
jno
cmp
mov
xchg
stc
jl
jno
mov
jmp
idiv
nop
call
addr16
js
cmp
hlt
icebp
push
mov
adc
cmp
push
das
jg
in
mov
mov
andl
or
pop
cmpsl
fimull
mov
mov
pop
loopne
push
out
insl
imul
cld
jnp
repz
clc
lahf
je
lcall
lcall
mov
movsl
das
cwtl
adc
xor
sarb
sbb
lcall
add
cwtl
aam
loope
mull
out
lods
jmp
lcall
sub
cmpsb
fists
aam
xchg
ss
push
jg
mov
fsubr
cmp
xchg
xchg
int
sbb
cli
pushl
into
icebp
pushf
les
ficoms
push
pop
mov
dec
std
imul
out
sbb
out
lret
inc
outsb
stos
inc
jo
leave
lcall
dec
cld
ds
mov
sbb
mov
sub
shrb
sub
clc
pop
ljmp
push
jmp
mov
cmp
movsl
std
movsl
shrb
loope
int3
mov
call
and
push
lcall
or
push
add
mov
push
test
outsl
std
dec
jge
cmpsl
mov
lahf
inc
aaa
iret
sub
jg
test
decl
fisubl
into
and
mov
xchg
inc
dec
pminub
dec
lahf
sub
or
pop
inc
xchg
jp
test
stc
lock
pushf
and
xlat
pop
inc
jg
rolb
pop
sbb
or
int3
mov
decl
addb
adc
iret
cltd
push
ret
data16
imul
jmp
scas
add
pop
adc
insl
adc
jle
cmp
scas
mov
pop
hlt
mov
and
mov
sub
loop
inc
jne
xchg
inc
inc
xchg
insl
pop
xor
xchg
cmc
addr16
push
xchg
adcb
into
mov
fists
cld
frstor
sbbb
and
imul
or
mov
cmpsb
mov
sbb
std
or
mov
js
ja
mov
push
roll
xchg
mov
add
loopne
cli
lcall
sahf
push
pop
or
xchg
movsb
int
xor
fldcw
or
jmp
incl
outsb
arpl
loopne
inc
flds
push
add
sarl
jg
pushl
push
cmp
mov
pop
lcall
mov
bound
jg
mov
lret
jle
mov
add
xchg
xor
lcall
mov
scas
imul
ljmp
or
test
test
addr16
cmp
test
cli
mov
lock
sub
ret
and
dec
negb
sub
add
outsb
or
pushl
mov
inc
mov
pushf
leave
mov
fstps
add
mov
jle
cmpsb
inc
lds
sahf
lock
fcomi
adc
add
xor
pop
out
pop
ljmp
andl
sbb
outsl
xor
pop
rcll
das
stos
push
scas
popf
ljmp
jmp
repnz
mov
xor
jmp
adc
push
xor
cld
das
sub
cmp
aad
test
add
push
incl
mov
cld
mov
sti
cmp
aam
aad
inc
and
decl
shll
dec
push
and
jle
rcrb
lret
lock
inc
dec
mov
push
mov
add
scas
lret
icebp
lret
add
cs
cmp
pushl
jnp
mov
mov
xchg
pop
push
outsl
or
incl
icebp
icebp
popf
adc
cltd
ljmp
dec
mov
dec
add
adc
movsb
movsl
add
mov
cmp
cmpsb
das
daa
clc
add
or
ja
sub
test
jg
xlat
lds
mov
mov
xchg
sub
aad
lods
je
lcall
mov
mov
ja
popf
fisttps
enter
fwait
pop
cli
decl
into
xchg
and
clc
xor
stc
fcomps
inc
enter
dec
std
incl
pop
and
insb
in
xchg
icebp
ja
loop
or
xor
mov
jle
in
mov
pop
loop
sub
ret
mov
adc
jmp
cmp
xchg
pop
fildll
sub
adc
aas
jg
mov
add
arpl
jg
mov
dec
mov
add
sub
mov
and
cltd
adc
fnstsw
pop
ret
test
pop
mov
and
or
cmpsl
pop
jns
push
enter
mov
pop
mov
arpl
xchg
enter
popa
imul
mov
fisubrl
call
push
dec
sbb
lcall
or
cmp
test
cmp
or
test
lea
cmpsl
test
cmp
sub
dec
test
push
cmp
in
jmp
int
jae
push
or
mov
pop
std
fldt
ds
fisubrs
addr16
xlat
xchg
or
rolb
arpl
inc
ss
fnstsw
jg
sbb
rol
lahf
movsb
mov
adc
inc
call
aad
lds
mov
xor
inc
and
push
ja
inc
incb
cli
sub
sbb
js
mov
mov
decl
xchg
dec
out
dec
fs
ret
shlb
sub
incl
push
sarb
ficoms
xchg
mov
add
add
mov
push
insl
sar
call
add
push
cmpsb
xchg
xchg
mov
gs
addr16
fildll
and
mov
xor
xor
and
lock
outsl
dec
ljmp
sub
sub
out
mov
or
fcomip
jno
aad
out
jbe
fcomi
push
loopne
arpl
test
sbb
ljmp
arpl
fiaddl
or
int
sub
in
xchg
pop
movsb
xor
sahf
mov
xor
ljmp
addr16
pop
cmc
dec
sub
sub
lcall
xorl
adc
icebp
fwait
inc
pmullw
out
into
in
aas
push
push
in
cmpsb
mov
pushl
and
push
adc
xchg
shll
jae
xchg
jne
imul
jecxz
adc
ljmp
hlt
aam
cmpsl
cwtl
loope
lea
mov
mov
inc
les
out
adc
add
sub
xor
xchg
lahf
mov
jp
sahf
clc
xor
xchg
fistl
or
xchg
cmp
call
ja
pop
cld
decl
inc
clc
js
or
ret
cmc
dec
cmp
rcrl
rolb
bound
loopne
mov
popa
lcall
test
push
xor
push
lock
popa
loopne
imul
scas
push
or
mov
call
arpl
in
mov
or
push
dec
mov
lds
in
add
ret
pop
bound
call
mov
push
cmp
popf
jle
pop
addr16
jmp
pop
arpl
in
mov
fwait
jmp
sbb
roll
mov
mov
fldlg2
mov
sbb
cmp
hlt
decl
int3
lret
lret
or
push
sub
mov
movsl
jno
pop
or
movsl
xlat
roll
mov
xchg
mov
mov
insb
je
xchg
push
fnsave
decb
cltd
mov
ret
cmpsb
int3
ret
lret
ret
jne
mov
ret
ljmp
push
push
xchg
test
rcrb
sub
and
pop
mov
jg
push
jmp
lahf
ds
stc
out
cmpsl
sbbl
sub
call
clc
sti
sbb
mov
out
clc
xchg
jle
inc
jle
pushl
movsb
xor
and
pushf
pop
dec
add
popa
add
outsb
xchg
addr16
ljmp
mov
cmp
insb
aas
adc
in
stc
loopne
insb
stc
inc
xor
mov
cmpsb
loop
pop
push
sub
mov
les
cmpsl
or
cmp
inc
je
jmp
mov
movsl
and
jbe
push
cld
jmp
stos
xchg
imul
xchg
mov
jno
cli
jo
jmp
test
cld
andl
sbb
out
nop
xor
jnp
xor
ret
loopne
fidivs
push
ljmp
lcall
std
test
push
les
int
xlat
out
sub
mov
cs
iret
sub
outsb
ss
call
adc
jle
in
shl
jge
push
xchg
fists
sahf
adc
jns
mov
cmp
sar
das
outsl
mov
stc
inc
jecxz
adc
inc
cmp
test
hlt
fucomip
loope
loop
jg
pusha
fldenv
rorb
inc
adc
sub
sbb
std
mov
pop
adc
rcr
inc
mov
or
pusha
mov
cmp
loop
and
in
mov
lcall
imul
inc
pushl
adc
insl
fsubrl
mov
mov
aad
sub
dec
sbb
call
rorb
mov
lret
ja
sahf
cli
cwtl
andl
adc
jmp
adc
pop
in
sbb
xchg
fwait
leave
insb
mov
jmp
mov
int
push
test
sub
fsub
int3
in
add
lods
pusha
pop
incl
mov
mov
ja
mov
lock
jecxz
pushl
iret
loop
bound
loope
xchg
or
pop
cs
mov
cmp
lds
push
cmp
int3
pop
or
repz
ja
push
in
mov
jne
test
cli
pop
lds
lcall
jmp
dec
push
fidivs
pop
loopne
or
leave
xchg
sbb
pop
ljmp
dec
sbb
jecxz
push
or
sbbb
das
add
jmp
out
cmp
cwtl
inc
roll
mov
cmp
adc
cwtl
mov
pop
in
lcall
ljmp
stos
inc
sub
cmpsb
lret
loopne
fstpt
stos
or
in
jg
iret
xchg
pop
pop
xchg
and
mov
lea
push
mov
jg
adc
or
lods
dec
xchg
out
xorb
cmp
xchg
xor
stos
push
clc
ljmp
mov
test
jp
jl
cmpl
xchg
cli
ret
insl
loop
adc
or
pop
mov
decl
fdiv
loope
js
lcall
push
sti
aam
aaa
scas
jno
mov
pop
mov
fisubrl
dec
jg
dec
mov
jecxz
cmp
cmp
cmpsl
stos
mov
sbb
aam
clc
push
or
in
arpl
subb
das
jmp
jb
adc
lcall
lcall
leave
and
out
cmpxchg
mov
in
dec
cmp
leave
and
call
clc
rorl
mov
dec
pop
pop
inc
dec
ret
nop
arpl
ljmp
notb
push
fsts
scas
jb
push
shll
sbb
lea
jg
clc
pushl
mov
in
inc
xor
and
xor
clc
lcall
mov
lahf
in
stos
xor
adc
jo
pop
test
jg
jmp
and
stc
cwtl
jno
sbb
loope
fdivrl
mov
movsl
mov
xor
add
aaa
cs
cmp
std
shrb
cmp
cwtl
mov
push
xlat
jbe
shll
mov
call
jp
or
sbb
pusha
orb
lcall
lcall
jle
jno
out
and
frstor
cmp
in
ret
dec
mov
xchg
push
jg
jmp
or
mov
jecxz
dec
call
fstps
add
xor
aad
sahf
pushf
addr16
into
cmp
jae
cmp
lods
and
loop
scas
rorb
ljmp
lcall
mov
aas
dec
cmp
mov
call
inc
xor
and
aaa
sbb
cmp
pushf
mov
pop
fistpl
mov
xchg
and
shlb
cmpsb
add
imul
push
mov
outsb
cmp
xchg
les
lret
lods
outsb
int3
mov
pop
int
jnp
pusha
or
int
lret
mov
ret
out
xchg
dec
pop
iret
or
sbb
test
lea
pop
bound
jg
sub
jno
out
iret
inc
clc
cmp
xchg
sahf
add
lcall
in
divb
dec
scas
test
sbb
xlat
sbb
mov
in
lods
push
repz
clc
jg
shl
cmp
scas
xor
push
enter
decl
imull
pop
ret
sub
nop
sar
cmp
sub
lcall
sahf
aam
pop
cli
loope
neg
sub
or
or
dec
repnz
jne
pushl
ljmp
fsubrs
punpcklbw
or
and
and
xchg
data16
jg
fchs
bound
mov
push
ret
rorl
xor
jle
call
cmp
push
inc
sahf
inc
into
int3
xchg
inc
idiv
ljmp
dec
push
jmp
rol
fsubl
fisubl
and
xor
jmp
hlt
xchg
xor
jecxz
sbb
cld
mov
decl
lods
bound
fs
mov
push
clc
mov
add
mov
jb
shlb
xor
sub
hlt
imul
flds
imulb
xchg
call
fstpl
nop
mov
pop
mov
add
jecxz
sub
stos
jg
jmp
dec
movsb
mov
repnz
lods
push
in
jl
inc
sar
or
and
and
sbb
lods
push
lcall
mov
outsb
cmp
mov
mov
xchg
cwtl
jbe
vpmulhw
insl
mov
repnz
xchg
mov
xlat
popf
incl
ja
ror
shll
add
ret
sub
mov
dec
xlat
or
ljmp
pop
pop
sarb
mov
inc
sahf
cltd
fscale
mov
xor
sarb
imul
xor
jae
icebp
in
mov
lds
cmp
lcall
pop
loopne
lret
mov
mov
pop
push
das
int3
call
xor
call
daa
pop
outsb
int
pusha
jne
stc
jmp
out
jo
cltd
mov
mov
adc
add
call
into
cltd
jae
leave
jne
dec
push
xor
imul
mov
sub
mov
insl
sub
add
push
clc
mov
leave
mov
cwtl
lcall
mov
cmp
cmp
outsb
lret
clc
ljmp
sahf
rclb
out
rcrb
pop
out
dec
stos
cli
push
ljmp
loopne,pn
mov
in
sub
rcr
outsl
addl
fmull
fldenv
or
push
sub
in
pop
push
sbb
rolb
js
pusha
xor
cmc
pushl
fwait
iret
cmp
ja
cmp
aas
jne
ret
inc
int
les
xor
cli
into
mov
hlt
add
incl
or
fmuls
push
jp
mov
jnp
aam
jg
call
xchg
fwait
popa
mov
cld
and
rep
inc
lods
xchg
popa
push
jp
incl
nop
mov
fsubs
dec
sbb
movsl
inc
xor
jmp
push
jne
shr
inc
jmp
inc
dec
dec
and
je
aas
mov
hlt
sarl
hlt
pusha
mov
out
inc
push
lret
scas
int3
pushl
jnp
sti
pop
cmpsb
pop
rcrb
and
nop
and
dec
fwait
shrb
cld
inc
movsb
inc
adc
es
push
mov
cmp
mov
rcll
jmp
lods
xchg
popa
into
and
mov
inc
sub
adc
das
icebp
pushl
fmuls
fmulp
add
hlt
cwtl
inc
push
xchg
cld
decl
and
mov
dec
adc
test
adc
mov
cmp
mov
dec
fsubrl
adc
mov
xor
filds
lea
mov
xchg
cmp
inc
fs
lcall
dec
push
lcall
mov
jns
xlat
jns
fstps
int
push
ret
decl
mov
and
js
hlt
mov
das
andl
or
xchg
cmp
lea
inc
sahf
les
jle
mov
xor
pop
out
sub
and
mov
movsl
test
call
rolb
test
jg
loopne
inc
jle
lahf
hlt
shrl
popa
dec
adc
arpl
adc
xchg
test
les
or
push
sbb
mov
incl
fs
mov
mov
lods
pop
arpl
jmp
xchg
iret
cli
inc
xchg
pop
cli
lods
gs
ds
jle
rcrb
imul
into
imul
scas
jg
test
stc
and
repz
call
ljmp
inc
loopne
jb
icebp
popf
mull
jecxz
ds
sub
popf
nop
cld
call
push
dec
and
ret
cmc
mov
es
inc
inc
push
imul
out
rcrl
sbb
fcos
test
mov
and
aam
xor
inc
rcrb
pop
mov
pop
decb
test
pop
scas
scas
and
add
std
in
jge
imul
pop
std
in
aas
push
sbb
das
in
push
mov
cmc
or
pop
rcrl
jo
add
sub
pusha
in
hlt
aaa
mov
mov
std
sti
movsl
sahf
dec
stos
insl
insl
cld
fisttpll
sbbl
add
aad
xchg
pop
stos
inc
pop
jmp
das
movsl
hlt
sar
call
xor
mov
xor
popa
test
mov
lea
mov
orb
inc
test
mov
loope
je
jge
das
test
mov
insl
mov
cmpsl
cli
inc
xchg
dec
cmpsl
push
cs
lret
push
out
xchg
icebp
sbb
xor
mov
test
call
ret
mov
inc
sbb
cld
push
jg
cmp
xor
clc
jg
cmc
fcomip
mov
mov
inc
ss
lcall
arpl
cmc
pop
mov
outsb
scas
daa
shr
pop
clc
add
call
mov
in
in
adc
sub
outsl
cld
mov
xchg
push
inc
popf
adc
inc
jno
imul
hlt
aas
or
push
aas
xor
lahf
test
mov
fistps
xchg
mov
mov
cmpsb
dec
xlat
mov
add
adc
jnp
mov
adc
pop
xor
dec
fstpl
test
ss
mov
ljmp
sarl
fisubs
loopne
cmc
fbld
xor
insb
shll
cmp
mov
loop
sub
cld
insl
cmpsl
insb
jecxz
mov
xchg
dec
push
fimuls
or
stos
int
pushf
js
ljmp
xor
adc
mov
aaa
mov
lods
js
add
lret
and
pop
cltd
dec
cmp
pop
loopne
shrl
mov
inc
adc
jmp
xchg
mov
push
inc
lcall
jecxz
xor
or
xchg
test
dec
call
in
ds
flds
sub
icebp
jecxz
xor
mov
mov
jmp
ss
in
outsl
ror
addr16
stc
mov
and
sbbb
jl
push
and
pop
pop
mov
xchg
fimuls
cld
ljmp
add
scas
sbb
mov
ljmp
jle
mov
aam
sbb
js
aaa
cli
decl
push
dec
add
mov
cmp
cmp
addr16
jle
int
clc
or
jecxz
imul
shlb
cmovs
mov
lock
or
jle
leave
sti
push
mov
xor
dec
data16
lcall
xorb
int3
in
xchg
dec
mov
or
jg
lcall
push
pop
mov
jns
jo
jle
arpl
add
loopne
daa
repnz
jg
repnz
mov
jge
and
xor
pop
mov
ljmp
pusha
out
repz
and
imul
push
lret
ljmp
push
inc
mov
xchg
stos
into
inc
add
push
push
adc
stc
test
loopne
inc
mov
enter
xor
into
mov
push
jg
filds
jecxz
fisubl
fsubl
jae
inc
fdivs
fcompl
repz
xlat
add
xor
mov
push
cltd
gs
jne
mov
hlt
out
ljmp
loopne
push
data16
mov
call
cld
out
and
xor
inc
inc
add
addr16
adc
push
xchg
clc
fsubr
add
dec
and
pop
ret
add
lea
mov
add
mov
repnz
pop
ret
jne
mov
lcall
sbb
jmp
fcom
aad
insb
sub
dec
jl
sub
arpl
sar
jg
incl
lret
inc
or
call
xor
cmc
lret
call
lcall
cmpsl
cwtl
sub
mov
les
mov
out
mov
cltd
out
pop
add
mov
das
mov
lret
das
test
sbb
loop
xchg
in
push
ljmp
ljmp
cld
out
cmp
jmp
and
add
push
jbe
push
sti
xchg
jg
mov
sub
int
mov
xor
add
mov
out
rcrl
ss
incl
mov
add
fisubs
inc
sbb
mov
sti
fistl
sub
out
adcl
push
int3
and
pop
inc
lea
xchg
push
cli
mov
jle
incl
dec
mov
fistl
inc
sti
in
test
hlt
push
call
insl
daa
add
aad
push
and
aad
mov
fsubp
lcall
or
ds
lock
pop
outsl
mov
dec
incl
movsl
ret
adc
lds
xchg
add
aam
dec
daa
in
mov
faddp
push
push
pop
adc
mov
dec
or
pushf
xchg
stos
pop
add
idivl
or
testb
mov
jne
sub
adc
mov
xor
pop
mov
cltd
fdivrl
xor
and
mov
repnz
dec
xchg
sarb
cwtl
test
fabs
pop
xchg
push
push
push
cli
cmp
push
std
test
mov
jae
pop
xchg
inc
adc
imul
std
scas
dec
cmpsl
ss
inc
mov
mov
mov
leave
and
mov
or
push
cmpsb
pop
mov
jg
xchg
fcompl
cli
test
cmp
ljmp
mov
mov
fsubl
sub
jne
ret
dec
sar
decl
outsl
scas
mov
hlt
outsb
cs
int
outsl
mov
dec
or
inc
pop
add
push
push
ljmp
faddp
adc
fwait
and
fldl
rcr
popa
push
cld
jbe
xor
dec
cld
pushl
outsb
dec
mov
imul
push
add
and
aaa
mov
fnstenv
mov
jge
mov
dec
mov
shlb
dec
and
mov
ret
or
pop
mov
in
imul
pushl
andl
cmp
sub
adc
mov
jno
add
lock
push
push
xchg
pop
cltd
xor
and
addr16
decl
cld
xorb
cmpsb
imul
xchg
clc
dec
xchg
ss
and
test
lods
mov
mov
lods
mov
mov
mov
mov
ror
and
mov
or
nop
popa
mov
xlat
mov
jo
xchg
lods
and
mov
sahf
dec
sbb
mov
bound
aam
push
stc
jb
loopne
mov
ja
decl
mov
add
and
xor
loope
pop
xchg
lcall
bound
in
or
call
pop
mov
clc
push
jg
je
sbb
adc
daa
enter
cmp
sub
decl
int
rorb
out
cwtl
test
ss
or
clc
call
jmp
or
lds
jmp
dec
call
mov
rcll
negl
les
in
ljmp
clc
test
es
clc
shlb
ljmp
data16
sbb
aam
fucomip
decl
in
add
les
push
adc
push
jg
dec
adc
cmc
mov
je
hlt
lds
xor
out
mov
lahf
jo
gs
pushf
cmp
aaa
xchg
clc
ljmp
and
jo
das
call
mov
leave
in
aaa
test
jl
call
das
std
pop
and
stos
inc
sub
xor
ret
daa
mov
mov
std
and
ss
outsb
scas
clc
cmc
jg
add
inc
xlat
push
sbb
add
out
mov
ljmp
call
mov
in
fistps
mov
push
dec
sbb
addr16
push
in
ds
cli
incl
xchg
mov
inc
cld
stos
jl
repz
ljmp
out
jecxz
cld
lods
mov
xor
mov
cmp
jg
cmpsb
lcall
neg
jno
fnstcw
ret
pop
lods
mov
aad
mov
rcll
lret
loop
iret
test
bound
outsb
and
rcrl
mov
and
clc
mov
movsl
jg
xchg
jg
push
add
mov
fsub
xchg
lock
lods
imulb
pop
pop
mov
lock
and
push
dec
popa
mov
jg
bound
out
inc
out
pop
push
push
mov
add
aaa
dec
rorl
arpl
add
sub
loop
jmp
repz
jns
xor
outsb
lds
icebp
ds
xchg
cmpsb
decl
orb
push
push
int
sahf
dec
cs
ret
incl
mov
dec
mov
loopne
and
push
ljmp
cltd
sub
call
or
and
push
dec
cmc
scas
roll
hlt
mov
jmp
push
and
movb
ficompl
mov
jle
inc
xchg
jge
sbb
add
jl
sbb
jmp
lahf
ds
lods
jg
test
insb
or
mov
dec
inc
notl
add
cli
les
jg
dec
ficoms
or
jg
cmp
inc
dec
decl
jb
or
sub
movsb
jne
mov
movsl
jb
xor
int
ljmp
icebp
call
fisttpl
push
jbe
or
jp
fucomp
pop
popa
sbb
js
add
lcall
std
dec
std
enter
sbb
mov
and
mov
inc
or
and
cmc
push
adc
lods
inc
jae
lods
pushl
xchg
sub
push
sub
lcall
ds
ljmp
lock
add
and
dec
ret
test
mov
call
aam
out
jb
jl
mov
call
sti
aaa
push
xor
clc
mov
jno
cli
lods
and
lock
test
decl
cmp
xor
scas
sub
dec
outsl
loope
in
cltd
or
aam
insb
dec
adc
ret
decl
mov
mov
ja
daa
or
xor
in
or
pop
cs
push
push
shlb
cwtl
mov
ljmp
fwait
pop
fbld
div
push
jns
loop
cmp
decl
ret
sbb
mov
push
cmp
mov
test
sub
xorb
pop
enter
into
cmpsl
jb
movsl
outsl
cmc
jns
push
mov
sbb
xchg
adc
nop
outsb
dec
es
mov
in
filds
pop
negb
ja
js
sbb
fwait
or
pop
cld
ljmp
fsubs
and
and
cmp
cs
mov
sub
jnp
pop
xor
mov
mov
bound
call
cmp
out
arpl
and
jge
shl
cmpl
call
lock
sub
xlat
mov
stc
and
in
mov
jge
mov
stos
push
call
mov
and
fucomip
jmp
repnz
outsb
push
inc
xchg
rcll
fistpl
in
mov
ljmp
dec
popa
call
mov
xlat
mov
add
add
gs
dec
fimuls
int
jmp
into
inc
cwtl
inc
adc
cwtl
xchg
bound
imul
xchg
ss
outsl
cld
pop
call
mov
adc
aaa
in
and
dec
jle
bound
icebp
aaa
sub
hlt
cs
cmp
aas
mov
sbb
sbb
dec
xor
sbb
rclb
call
add
push
movsl
inc
lret
bnd
imul
hlt
push
mov
mov
sar
jg
test
push
mov
sbb
add
clc
loopne
push
xchg
loope
mov
out
push
test
data16
xchg
test
mov
cmp
mov
pushf
mov
mov
ds
dec
and
xor
pop
inc
repnz
push
xlat
mov
popa
fcomps
inc
scas
and
stos
lcall
mov
movd
push
mov
sub
mov
inc
sarl
push
pop
in
ret
jg
orl
popf
lds
int
cwtl
inc
mov
and
ljmp
sbb
repz
jle
sbb
aaa
push
hlt
in
aaa
clc
dec
mov
les
dec
sbb
sub
lcall
adc
mov
rcl
pop
stos
int3
imul
ficoml
jg
jmp
scas
ss
xchg
push
or
jmp
push
ljmp
popf
pop
pop
aas
popf
scas
push
adc
addr16
out
ficoms
insb
jbe
or
cmpsl
cmp
sbb
fldenv
push
decl
scas
sub
jle
push
dec
sub
or
cmp
shrl
add
or
das
call
lods
or
push
xlat
xlat
xchg
arpl
mov
dec
dec
sbb
loope
inc
xchg
inc
lods
pop
mov
push
das
enter
ljmp
dec
cmp
aam
jnp
popa
out
and
push
add
xchg
mov
pusha
mov
clc
in
outsl
pop
lea
out
or
fucomip
fnstsw
xchg
jnp
stos
inc
enter
mov
outsb
jb
jp
mov
push
sub
test
decl
xor
lahf
adc
aaa
adc
mov
add
or
incl
and
mov
push
jb
jg
sti
pop
mov
incl
call
push
add
aad
push
cmpb
push
and
sahf
push
bound
jl
push
lea
mov
outsb
and
lods
mov
call
cmp
inc
fmull
gs
rcl
jno
out
xchg
xor
in
rcrb
xor
lret
cmp
jg
cld
out
ret
pop
clc
decl
adc
xchg
gs
pminub
jne
inc
les
adc
jae
pushl
mov
ficoms
test
mov
dec
shlb
or
or
adc
xor
adc
cmpl
adc
idivl
mov
jnp
mov
adc
dec
sub
push
shr
lcall
mov
adc
or
ja
into
push
mov
xchg
xor
jnp
subb
ljmp
mov
movsb
mov
add
scas
push
cmc
push
jne
push
push
dec
xor
stos
dec
das
lahf
cmp
into
stos
mov
pushl
test
push
in
stos
inc
addb
xchg
and
les
sub
add
add
jbe
mov
jmp
rcll
fs
bound
lret
inc
or
lcall
add
pop
outsb
dec
arpl
negl
jmp
fildl
outsl
sub
xor
hlt
fbld
mov
lcall
loop
ds
inc
ds
or
inc
cld
adc
outsl
loopne
sahf
pop
and
aad
pop
add
pop
mov
fsubs
cmc
mov
mov
mov
cli
push
inc
or
mov
mov
ljmp
in
in
movsl
pop
in
inc
aad
jns
push
and
test
int3
or
push
in
mov
cmp
repz
adc
mov
push
mov
ficoms
mov
xor
repz
cmp
mov
xor
pop
stos
hlt
push
jbe,pt
pusha
call
fistpl
mov
ljmp
out
xlat
jbe
cmp
idivb
sbb
pop
jmp
lret
add
test
in
out
hlt
xorb
jg
or
inc
adc
stos
adcl
jle
cmp
pop
iret
fsubs
sbb
jo
sbb
mov
sbb
lods
fisubrs
int
cmpsl
xchg
lahf
icebp
sbb
push
fdivrs
out
lahf
lcall
sbb
fsts
iret
mov
or
xor
xorl
cltd
pop
push
mov
push
lock
cmc
incl
dec
in
cmp
loop
inc
les
xor
adc
sar
sub
jae
sub
adc
in
outsl
xor
mov
repnz
mov
mov
sub
iret
dec
and
in
fdivs
lret
jo
jmp
push
pushl
xchg
push
movsb
bound
fwait
xchg
jecxz
clc
lahf
push
adc
loope
xchg
clc
fbld
or
popa
or
cmp
loop
mov
das
adc
nop
jp
das
jge
mov
cmp
lods
push
and
stos
mov
inc
out
aas
adc
stos
out
lret
xchg
mov
aad
clts
popf
mov
mov
movsl
roll
jnp
xchg
sub
sub
out
jnp
ljmp
arpl
or
sub
shl
test
test
adc
xchg
cmc
stos
dec
cs
imul
xchg
and
out
cmp
fisubrl
in
dec
enter
inc
icebp
mov
mov
cmp
dec
push
sbb
rorb
cwtl
mov
inc
ljmp
fucom
stos
mov
stc
inc
int3
mov
cmovne
out
dec
sub
pushl
rcrb
pushf
pop
inc
jp
jne
rcrl
push
fstpl
pop
lcall
jnp
mov
in
xchg
xchg
push
cmp
mov
inc
adc
mov
jae
popa
mov
and
push
mov
subl
stos
xor
mov
outsl
std
call
out
adc
movsb
xchg
lods
dec
mov
or
imul
loop
cmc
subb
cmp
inc
xor
loop
clc
push
mov
stos
sbb
int3
jle
sbbl
movsb
jp
sahf
sarb
xor
outsl
addb
push
mov
adc
lods
xor
push
lea
xor
sub
mov
xor
fwait
jmp
scas
jo
mov
shrb
insl
cwtl
movsl
frstor
jg
sbb
adc
lds
dec
pop
fyl2x
mov
jmp
shll
adc
pop
mov
out
shr
inc
clc
stos
xchg
cmp
cltd
xor
xor
jg
fucomip
ficoml
fisttpl
aad
es
incl
ror
or
inc
dec
fsubl
xor
push
int
jmp
sahf
mov
sbb
mov
push
or
fwait
push
mov
pop
jge
pop
ljmp
adc
icebp
push
cmpsl
mov
jmp
cwtl
fwait
xor
xchg
popa
in
decl
insb
cld
test
pop
dec
sbb
cmpsb
mov
cmp
clc
dec
std
ret
cmp
mov
gs
push
mov
inc
lcall
cld
fbstp
push
cwtl
push
pop
call
cs
pop
or
cli
incl
rclb
out
ja
stos
cmp
mov
les
in
stos
je
mov
xchg
cli
outsl
stos
cmp
shrb
jmp
pmulhuw
arpl
or
mov
rcrl
pop
sub
jbe
jmp
es
scas
loopne
subl
ja
lock
dec
pushl
jae
flds
fdivp
and
pop
ret
dec
mov
std
jg
repz
nop
enter
cmp
push
and
in
jg
repz
mov
inc
inc
mov
fisttps
xchg
pop
dec
mov
dec
clc
lcall
jecxz
pushl
shr
mov
sbb
add
jns
and
or
sahf
xchg
or
push
pop
jmp
movsl
pop
cli
sbb
pop
aad
push
in
mov
decl
add
or
es
gs
jne
loope
push
push
and
mov
test
dec
movsb
outsl
mov
mov
inc
cltd
inc
adc
adc
xor
lods
pop
ljmp
mov
add
call
imull
lods
lahf
mov
sub
out
outsl
ss
jg
scas
push
inc
popa
ss
mov
pop
cmp
icebp
out
imul
sbb
push
push
enter
mov
ljmp
mov
xchg
mov
out
jo
add
std
jne
divl
mov
sub
mov
sbb
repz
fwait
sub
inc
and
int
jmp
cmp
sub
in
and
testb
iret
push
js
push
fisubs
arpl
xchg
pop
mov
pusha
sahf
pop
xchg
std
mov
shll
leave
or
cltd
pushf
mov
mov
push
movsb
or
jbe
repnz
pushf
jle
aam
jno
mov
dec
pushf
insl
fcos
incl
call
mov
pop
cmp
sbb
lcall
dec
lcall
clc
cmpsb
je
mov
imul
pop
mov
lods
inc
lods
loop
and
xor
sbb
lret
lcall
fisttpll
mov
sbb
xchg
in
iret
outsl
push
adc
repz
mov
xor
js
or
fistps
and
icebp
test
aad
aaa
dec
pop
xchg
fcoml
dec
ljmp
gs
xchg
gs
je
stos
add
dec
lret
xor
scas
jmp
push
movsb
mov
jecxz
jecxz
cmpsl
aam
adc
cmc
xor
ret
mov
call
pushf
jb
or
fdivr
ret
sbb
lods
pop
jno
push
cwtl
xchg
fucomip
call
adc
into
icebp
adc
stos
mov
sahf
sub
pop
mov
int
push
xchg
cmp
mov
xchg
clc
fsts
sar
or
ffree
popa
sub
aam
lock
dec
xchg
pop
std
ljmp
sarb
pop
incl
mov
mov
mov
out
push
fs
inc
shll
lcall
rorl
cltd
mov
arpl
jo
mov
inc
xor
js
iret
add
adc
or
testb
das
icebp
mov
jle
adc
movsl
dec
test
push
fmull
xor
int3
mov
mulb
movsb
pop
xchg
dec
cmp
xchg
clc
add
jge
pop
xchg
scas
jno
add
decl
adc
and
jo
out
cli
push
inc
mov
cmp
ljmp
stos
movl
arpl
push
xor
xor
fistps
xor
sbb
rsqrtps
sbb
jle
lea
hlt
pop
mov
insl
cmp
pop
cwtl
int
mov
outsl
jno
repnz
fldl
mov
cmp
rcll
push
pop
std
hlt
push
pop
loopne
and
decl
dec
mov
xor
mov
sbbl
insb
mov
lock
stos
xchg
dec
adc
sar
xor
inc
enter
out
cmpsb
stos
cli
add
je
outsl
pushl
popa
sti
in
stos
mov
test
out
adc
xchg
fisttps
push
hlt
loopne
cmpsb
loopne
xor
cli
outsl
push
cli
sti
je
lahf
push
ss
sub
xchg
mov
lcall
divb
inc
js
in
out
mov
scas
xchg
mov
pop
ljmp
insl
mov
sub
out
add
cmp
push
inc
jns
mov
cmp
movsl
cld
jg
ljmp
push
ss
or
mov
jle
mov
test
or
aaa
mov
leave
fildl
pushf
mov
lcall
push
frstor
jl
mov
pop
sub
dec
nop
adc
int3
dec
cmc
mov
or
int3
cs
dec
pushl
push
shrb
clc
imul
std
pushf
in
pop
stos
dec
xchg
pop
mov
repnz
mov
loope
aad
or
rcr
jp
pop
nop
inc
cmpsb
inc
jg
or
jmp
test
inc
and
out
dec
jae
xchg
cli
das
jno
mov
jb
mov
mov
jmp
call
add
pop
mov
mov
clc
rorl
int3
les
inc
lcall
std
decl
into
jle
and
clc
xor
scas
ja
jle
mov
roll
pusha
int3
shrl
hlt
push
out
push
adc
or
jp
mov
lock
mov
aas
fs
das
cld
jmp
outsb
sarb
jp
sbb
out
mov
and
mov
out
jp
sahf
ljmp
icebp
gs
insl
push
sahf
adc
pushf
popf
hlt
adc
mov
cld
outsl
hlt
mov
repnz
xchg
orl
adcb
xchg
mov
hlt
out
mov
outsl
fisttps
xor
cmp
pop
inc
jg
mov
pop
into
rolb
je
inc
dec
aaa
mov
lcall
pop
incl
push
inc
in
fstpl
fmull
call
les
mov
xchg
sub
pop
mov
call
dec
adc
inc
mov
int
jecxz
adc
sub
pushl
mov
scas
jp
or
pop
pop
mov
test
ljmp
sbb
or
sub
cmpb
ret
pop
divl
lcall
repnz
mov
fists
lods
adc
sbb
or
sti
lds
test
xchg
sbb
jg
lea
jno
dec
sbb
mov
and
pop
in
jg
mov
mov
sub
cmp
data16
sbbb
jmp
test
dec
roll
sbb
lcall
sbb
jl
pop
outsl
fsubl
loopne
mov
inc
repnz
iret
fnstcw
das
jbe
cmp
ljmp
pop
mov
test
movsl
add
mov
negb
sahf
cmpsb
sbb
mov
sbb
outsl
pushl
jno
bound
push
int3
and
cwtd
inc
pop
adc
fldt
ljmp
in
xchg
or
pop
cmpsl
mov
cmp
mov
mov
push
cltd
adc
and
je
in
lret
mov
ljmp
mov
xchg
xchg
fwait
pop
mov
jo
jmp
mov
push
fimull
or
imul
push
adc
test
pushl
in
xchg
ret
and
lret
negl
fsubp
pop
in
and
mov
dec
sbb
lret
sbb
push
clc
insl
adc
mov
std
lock
ja
arpl
inc
sbb
or
push
cmp
mov
push
and
stos
enter
xor
inc
mov
outsb
and
pushf
decl
ds
hlt
cmpsb
imul
sub
inc
aad
out
aas
sbb
jnp
xchg
popa
adc
lea
mov
jl
loope
clc
jg
jmp
leave
sbb
mov
push
pop
pushf
data16
push
sbb
xlat
xchg
or
lahf
xlat
clc
stos
hlt
outsl
adc
jo
pop
loopne
fwait
mov
mov
mov
jecxz
fcompl
adc
mov
dec
loop
cli
lcall
mov
dec
pop
push
out
clc
or
movsl
stos
into
cltd
adcb
outsb
lods
cwtl
jg
aaa
push
push
jo
scas
mov
mov
rcrl
xchg
fscale
inc
dec
call
add
addr16
cmp
xchg
sbb
pop
cmp
pushf
loope
dec
sti
mov
scas
jecxz
or
mov
aas
xor
stos
ljmp
dec
jbe
xlat
loope
push
jns
call
test
outsb
or
mov
adc
sub
and
xor
rcrl
int
push
decl
insl
xor
xor
jns,pt
mov
pop
push
cs
mov
cld
or
cmp
mov
clc
jae
fisubrs
ret
andb
fdiv
cli
stc
inc
lea
mov
cmp
lret
les
adc
gs
add
sub
lds
sub
aad
push
sbb
outsb
pop
mov
loope
xor
pop
push
hlt
sub
push
mov
xchg
lds
cmc
push
pop
inc
adc
xchg
aam
clc
fdivp
xor
xchg
fisttpl
pop
jno
imul
ret
std
pushl
push
bound
inc
loopne
popa
inc
das
cli
inc
add
ret
jge
xchg
incl
in
jle
dec
inc
mov
cltd
out
xor
dec
pushl
push
pop
or
and
bound
stos
rcl
sub
and
xor
lods
dec
mov
lret
pop
prefetchwt1
sub
cld
ljmp
mov
and
test
adcb
sub
push
loope
decl
in
in
mov
or
jbe
mov
out
retw
lret
xchg
pop
mov
or
pop
leave
lds
stos
fcomps
mov
jb
mov
sahf
sub
mov
sub
rcl
andb
mov
aad
mov
ljmp
in
sub
cld
iret
sbb
frstor
jg
loopne
inc
cltd
mov
jg
xchg
popf
mov
cwtl
jg
jg
lcall
adc
xchg
pop
or
push
int3
push
cmp
icebp
jg
cmpl
sub
jns
ret
push
mov
fucom
decl
jmp
hlt
xorb
shrb
push
jno
mov
xchg
cli
ret
mulb
aaa
mov
lret
mov
sub
inc
mov
enter
outsb
stc
pop
data16
or
mov
incl
data16
jg
lock
jecxz
cmp
inc
lahf
leave
pop
sub
lahf
aaa
sub
ljmp
cmp
xor
scas
xor
and
cli
push
lods
push
sbb
mov
out
decl
fstp
inc
mov
sub
gs
jo
sahf
lods
inc
lcall
js
jae
pop
pop
and
sbb
jnp
popw
cli
mov
push
add
js
mov
cmpsl
mov
ret
popa
inc
stos
fldt
push
sbb
push
cli
pushl
aad
jbe
xchg
pop
imul
and
jmp
ss
jecxz
jg
push
inc
cmp
stc
push
sbb
mov
or
mov
mov
mov
sub
enter
decl
bound
mov
adc
imul
std
outsl
cld
das
lea
pop
fcoml
jno
outsb
test
push
add
stos
lds
sub
inc
lods
and
lcall
jge
in
es
or
movsb
push
enter
jg
jg
loop
push
dec
or
scas
xchg
rorl
xor
add
je
incl
jle
cmp
inc
aad
int
fisubl
adc
out
arpl
mov
jg
loop
fnsave
xchg
push
lods
jge
dec
sub
add
pushl
jg
sub
mov
sub
ljmp
std
test
fildll
cmp
enter
xor
jl
decl
popaw
cmpsl
adc
jnp
jne
push
jge
je
test
hlt
xchg
dec
adc
push
mov
cmp
test
mov
clc
jmp
sbb
fldenv
sub
xchg
mov
sbb
push
sub
push
incl
dec
push
in
lret
lahf
mov
iret
cmp
call
mov
push
or
mov
out
in
dec
and
inc
in
or
push
mov
push
cmp
cmp
aaa
sbb
out
sbb
xchg
xchg
pop
rcl
ret
into
add
lock
mov
pop
push
add
and
mov
adc
js
insl
test
sbb
inc
incl
rclb
xchg
cmpl
mov
xor
enter
sub
fnsave
into
pop
adc
call
stc
and
pop
inc
lret
test
or
mov
jmp
pop
loop
icebp
or
lcall
push
or
incl
xor
aam
orb
lret
jp,pt
and
cmpsb
shr
inc
sahf
mov
sub
pop
sbb
sub
insb
jle
pop
and
jno
stos
outsb
adc
lret
fimuls
xchg
cmpsl
dec
add
jmp
scas
loop
dec
fsubrl
aaa
nop
mov
and
dec
sub
mov
push
xor
and
lcall
fstps
pushl
shll
in
xor
jg
or
mov
mov
test
jbe
das
popa
adc
cltd
push
jp
icebp
mov
and
daa
dec
mov
ljmp
std
das
mov
rolb
pushf
stos
cmpsb
jae
mov
mov
cmp
and
cmp
in
jb
outsb
rcl
aad
icebp
lcall
lcall
push
xchg
sbb
not
lcall
mov
and
fistps
cmp
or
ljmp
cmp
stc
adc
sub
inc
lcall
jno
xor
sti
sbb
movsl
and
sub
mov
mov
pop
loop
daa
or
add
dec
rorb
icebp
nop
cmp
push
xchg
or
movsl
push
lea
or
subb
out
aad
insl
fidivrs
sub
mov
incl
int
dec
pop
sbb
adc
in
add
arpl
sub
cmpb
sbb
cmp
jle
add
mov
sbb
lods
and
sbb
aaa
ljmp
cli
lds
sub
lds
ret
fnstcw
mov
fildll
xchg
mov
push
das
sbb
pop
das
ret
add
stos
xor
mov
ljmp
add
call
decl
std
cmp
dec
pop
sub
insl
and
into
out
push
dec
jl
or
in
incl
out
fisttpll
into
xchg
test
sub
xchg
das
cmpsl
lock
mov
loopne
in
mov
mov
sbb
adc
cs
xor
test
mov
inc
inc
into
mov
cmp
cmp
push
lahf
and
or
jbe
outsl
inc
sarl
cmp
or
add
add
mov
pop
mov
xchg
inc
mov
inc
scas
ret
jge
mov
xor
incl
outsl
clc
mov
out
vpmacsdqh
xor
call
ret
addr16
outsl
or
cwtl
cmp
repz
sub
mov
add
incl
push
mov
ret
mov
loop,pn
in
xor
and
sbbl
jno
scas
dec
add
add
dec
std
call
push
scas
in
adc
iret
xor
sub
cmc
push
jg
jmp
loop
enter
lahf
lock
fs
ljmp
or
cld
aam
jno
fstps
loop
ficoml
sbb
mov
hlt
adc
sbb
mov
lcall
jbe
pop
pop
mov
mov
mov
mov
or
cmp
aam
clc
sahf
sbb
or
pop
outsl
push
push
out
lea
fistps
hlt
scas
mov
iret
mov
dec
xchg
call
pushf
ficoml
movsb
leave
gs
fsts
hlt
adc
dec
cmp
fists
std
inc
pop
repnz
dec
ds
movsl
call
test
or
les
mov
mov
repz
jnp
xchg
popf
das
je
xchg
cmp
push
jge
leave
jge
icebp
cmpsl
js
inc
xor
jno
cmpsb
mov
jge
nop
aam
pop
sarb
cmp
incl
call
jg
and
inc
iret
movsl
test
mov
dec
cmp
in
das
hlt
movsl
incb
xchg
fdivl
push
inc
ljmp
icebp
and
add
mov
pop
mov
decl
add
sbb
push
loopne
jno
and
cltd
pop
lcall
mov
sarb
sub
mov
dec
pop
in
pop
enter
pop
loopne
call
sbb
mov
fbstp
incb
movsb
es
pop
or
push
mov
mov
dec
push
lret
dec
pop
xor
mov
jmp
and
aaa
repz
adc
push
inc
lods
jle
arpl
pop
pop
cs
mov
cli
mov
mov
pop
ljmp
add
xchg
mov
incl
pushl
stos
movsl
shll
mov
das
pop
adc
roll
and
sbb
jge
jbe
sbb
mov
dec
sbb
jmp
clc
lahf
xor
adc
data16
out
jmp
movsb
addr16
and
insb
lret
sbb
jge
jno
xor
lds
add
das
or
adc
jg
ds
mov
fisttpl
or
xchg
aad
xchg
jp
cltd
and
add
repz
dec
pop
je
add
dec
sub
decl
sub
sub
and
test
lods
outsl
ljmp
lret
inc
dec
lea
pop
jge
daa
dec
and
call
adc
sub
dec
xor
mov
or
inc
pushl
es
push
mov
pop
sbb
aad
ljmp
pop
lods
fistpl
and
mov
jle
bound
pop
inc
cmp
cmc
jmp
mov
sub
push
and
sbb
js
sub
mov
xchg
test
ffreep
or
inc
test
mov
andb
fldl
mov
inc
mov
ljmp
lods
inc
in
scas
push
jne
movntq
out
mov
xor
sbb
orl
inc
imul
jmp
out
sbb
jmp
inc
or
fsubrs
fadd
cmp
or
movsl
idiv
jnp
data16
outsb
lcall
jle
fwait
push
dec
push
mov
out
imul
xchg
push
es
jg
call
jle
dec
cmc
je
cmp
xlat
mov
mov
test
push
decl
je
loopne
out
lcall
cmp
mov
mov
and
jecxz
xchg
xor
outsl
jo
cmp
popa
js
jg
push
mul
pop
adc
xchg
mov
push
sbb
stos
in
pop
xchg
ljmp
pop
inc
mov
inc
lock
jl
adc
and
dec
jg
jg
stos
notb
insb
aaa
lods
adc
ss
mov
push
inc
fcmovu
mov
daa
push
dec
mov
lret
fwait
int
enter
xchg
fistl
adc
pop
jmp
mov
mov
xchg
stos
bound
inc
xchg
push
popa
dec
pop
loopne
and
outsl
or
mov
inc
rcrl
enter
cmc
xchg
cs
lcall
xor
out
mov
clc
cmp
sub
icebp
insl
mov
sahf
arpl
mov
aad
std
decl
mov
movsl
repnz
jmp
dec
push
sub
sbb
lcall
jg
and
stc
or
orb
ret
bound
enter
mov
int
not
jne
mov
xchg
or
mov
jg
call
out
pop
andl
mov
sbb
shr
mov
jle
sbb
sbb
ret
mov
xor
mov
fisubs
in
in
pop
mov
mov
pop
out
je
sub
lea
nop
cli
sti
inc
pop
jbe
or
in
sbb
lcall
and
incl
aaa
add
stc
pushf
gs
mov
aas
loopne
mov
xchg
lock
xor
cmpsl
dec
jbe
sbb
imul
inc
cmp
insb
bnd
mov
mov
mov
pop
push
fldcw
or
dec
jo
push
clc
mov
pop
loopne
mov
fcom
mov
jo
pop
sbb
call
jne
pop
pop
mov
push
xchg
jg
jmp
jns
ljmp
mov
es
std
decl
jno
lods
add
jl
lods
or
bound
cli
add
stos
je
stos
je
xchg
or
mov
sbb
mov
out
mov
push
mov
mov
ss
loope
inc
mov
and
cmp
or
sbb
inc
sub
arpl
repnz
ljmp
cmc
int3
mov
dec
pop
outsl
xchg
shr
xor
insl
pop
ljmp
roll
aas
out
jg
insb
arpl
mov
push
repnz
cltd
push
and
mov
xor
rcrb
leave
mov
ss
push
inc
add
xor
ljmp
xor
and
mov
inc
dec
dec
lods
pushf
cld
and
dec
aaa
and
iret
and
out
popa
mov
sub
push
mov
cli
or
das
cltd
mov
mov
mov
scas
add
inc
sahf
mov
adc
push
pop
pushl
mov
lcall
outsb
dec
jbe
jae
loop
sti
sbb
cld
ljmp
mov
andb
rcl
jns
inc
jg
out
orb
sbb
pop
mov
movsb
mov
mov
push
adc
xchg
lret
out
insl
sub
movsl
dec
add
ret
int3
in
xor
in
xor
jl
push
stos
adc
and
in
cld
add
inc
push
sub
lea
inc
js
inc
push
jb
mov
push
outsb
push
fs
jae
std
inc
push
add
ss
push
pop
stos
sub
call
outsb
cmovne
add
add
cmc
inc
aad
push
inc
add
jg
inc
sub
or
push
dec
dec
dec
dec
dec
inc
push
push
inc
inc
pop
push
lods
mov
mov
sbb
adc
ja
push
fldt
out
adc
nop
inc
mov
add
es
lods
mov
sbb
xchg
inc
push
outsl
mov
popf
and
insb
sahf
arpl
lods
cmp
aad
add
mov
insl
push
inc
js
inc
aas
add
aas
lods
mov
inc
mov
pop
imul
dec
mov
push
mov
sub
jl
int
mov
imul
xlat
jge
inc
or
inc
out
lods
xor
add
adc
xor
test
push
mov
pop
imul
adc
mov
fcomps
or
cmp
sbb
mov
lods
leave
int
jns
arpl
jno
arpl
mov
inc
push
sub
mov
mov
sahf
jae
jns
jb
imul
xor
and
push
inc
dec
cmp
call
push
push
dec
dec
inc
add
inc
inc
je
inc
ja
push
inc
push
xor
xor
cmp
xlat
pop
imul
roll
cmp
je
dec
data16
sub
imul
in
sbb
lahf
aad
inc
outsl
outsl
add
jmp
mov
rorb
enter
add
xor
xor
jmp
in
mov
mov
pushf
inc
xor
fistpll
sbb
call
pop
xchg
arpl
std
mov
sub
int
pop
or
std
loope
pusha
cld
mov
add
push
jle
inc
add
xchg
push
stc
mov
outsb
pop
mov
cmpl
shrb
cld
add
push
sbb
mov
out
orl
call
outsl
or
inc
dec
pop
or
cld
lods
insl
mov
jne
mov
jns
shlb
inc
inc
xor
test
mov
sti
add
pop
mov
cmp
daa
aaa
outsl
push
mov
lock
fs
mov
push
mov
push
std
aas
push
fs
xchg
mov
outsb
repz
cmp
adc
inc
loop
jecxz
mov
sub
or
jo
in
imul
jp
in
sbb
jg
sbb
jb
xchg
fildl
ret
add
imul
sub
addr16
add
nop
push
dec
xchg
mov
shrl
add
icebp
inc
les
loop
subl
cmp
and
neg
jle
or
fnstsw
testb
int
sbb
jb
outsl
pop
imull
xchg
ja
jb
lret
pop
sbb
clc
xchg
jl
sbb
cld
lods
mov
and
pushf
adc
cli
fs
lods
subb
push
mov
cmp
cmp
mov
jp
mov
mov
call
mov
test
and
or
and
loopne
dec
jl
or
xchg
cmpl
adc
xchg
sub
or
lcall
std
ljmp
test
inc
mov
sbb
daa
dec
mov
das
mov
xchg
lds
mov
pop
add
in
rcll
lock
lods
arpl
mov
stos
mov
xchg
xchg
sbb
push
sbb
and
jle
in
ret
loope
clc
mov
push
popa
xlat
mov
mov
dec
daa
sbb
push
loope
pop
jle
and
sbb
dec
popf
and
dec
loope
jo
das
clc
inc
mov
pop
das
xchg
repz
jle
addl
loope
imul
outsl
push
mov
add
adcl
mov
inc
or
lock
dec
in
push
call
hlt
sbb
adc
test
or
leave
mov
mov
jge
adc
rcr
bound
inc
insl
adc
add
push
pop
je
addb
mov
imul
ret
push
roll
daa
mov
dec
jmp
out
fcmovnu
xor
or
pop
adc
gs
andb
sbb
push
or
nop
sbb
ficoml
xchg
mov
orb
sub
test
xor
call
ja
stos
xchg
push
pop
jb
mov
xadd
pop
sbb
cmc
jg
jecxz
into
jmp
pop
test
or
mov
aad
xor
outsl
in
outsb
in
jno
fwait
ljmp
loopne
dec
or
push
and
cmc
out
fcmovnb
jp
popf
xchg
es
in
push
add
xor
add
iret
inc
bound
fcoml
shll
ds
insl
sbb
clc
jbe
jnp
sbb
icebp
sbb
outsl
jl
js
cmp
jmp
inc
rorl
push
popw
sbb
mov
lea
mov
or
inc
cwtl
push
ret
pop
xor
fistl
fdivrl
mov
inc
test
pusha
test
fadds
lods
lret
pop
insl
scas
mov
ret
jl
xor
push
push
add
jne
pop
loop
or
add
stc
pop
mov
loop
mov
into
lods
mov
mov
add
pop
and
fsubrp
das
inc
fcmovne
fstl
xchg
jnp
sbb
ret
jmp
jg
jl
or
lret
imul
push
adc
in
push
ret
add
jo
jns
sub
and
mov
rorl
add
jbe
stc
lock
sub
lods
loope
leave
mov
dec
ss
adc
mov
leave
in
inc
movsb
lahf
xchg
movsb
aaa
outsl
jg
sub
mov
or
daa
cmpsb
sbb
scas
js
nop
adc
hlt
cmc
mov
or
cmc
and
mov
dec
inc
inc
sbb
in
or
dec
inc
push
inc
dec
lods
fidivrs
jnp
outsl
lods
into
xchg
fmulp
int3
add
add
mov
aad
sbb
jle
jo
push
mov
shr
lds
inc
cmpsl
or
inc
adc
mov
or
ljmp
mov
rol
sbb
cmp
dec
in
push
daa
xor
push
insl
xchg
mov
xchg
xor
imul
popf
sbb
jno
add
cmc
sbb
nop
mov
push
xchg
adc
xor
push
cld
lock
xor
sub
sub
scas
scas
jb
aas
push
push
jne
inc
cmp
je
sub
lods
popf
mov
aam
outsl
pop
test
xchg
xor
jns
xor
ljmp
pop
lahf
jle
xchg
sbb
testb
rcrb
push
and
pop
mov
icebp
xor
add
inc
mov
shll
mov
inc
fistpll
icebp
lock
sti
stos
mov
pop
rorb
mov
insl
mov
ljmpw
lock
xchg
sbb
out
inc
pop
inc
mov
push
lods
xor
add
test
xor
fildll
sub
push
fildll
int3
inc
ja
mov
sbb
inc
daa
js
loopne
push
or
mov
mov
mov
inc
mov
mov
dec
mov
ss
pop
or
out
lret
mov
xor
jo
fidivrs
out
les
icebp
sbb
icebp
add
pop
inc
test
or
aas
pop
or
push
mov
inc
adc
ret
sub
fsubp
test
sti
imul
stos
fadds
test
imul
ss
loop
lds
add
mov
xchg
jl
ja
loop
pop
xor
or
pop
fiaddl
lock
pop
cmpsb
mov
invd
stc
or
mov
adc
inc
xor
mov
push
adc
push
rclb
push
adc
push
adc
mov
and
pop
mov
adc
and
or
add
sahf
add
popf
pop
fcmovu
mov
add
jnp
sub
mov
lods
sbb
into
les
outsb
adc
shrl
mov
xor
es
mov
dec
fwait
lret
shr
add
cmp
push
subb
les
sahf
sbb
rcrb
sbb
pop
sahf
sbb
or
xchg
jl
test
data16
mov
into
dec
xchg
in
mov
pusha
adc
scas
xorb
loop
fmuls
rcr
movsb
rclb
adc
or
cltd
xchg
hlt
sbb
jnp
sbb
inc
das
je
arpl
testl
incb
adc
fwait
jg
rorl
fwait
outsl
push
mov
fnsave
cmpsb
push
jle
mov
inc
stos
cmp
or
fsubs
inc
xor
test
jae
xor
inc
cli
push
pop
sbb
pop
inc
aam
pop
jle
and
stos
jg
ja
pop
and
cmc
lock
out
mov
lods
pop
incb
lods
mov
stc
nop
and
adc
xor
dec
mov
sbb
jno
outsl
sub
and
loope
int
aaa
sub
jns
inc
and
push
pop
sbb
mov
xchg
rorl
aaa
and
xorl
push
push
dec
fs
mov
incl
xorl
and
sarb
ret
and
into
lret
mov
cmc
shr
mov
cltd
jmp
lock
sbb
cmp
sub
ret
and
movsl
in
xor
incl
pop
mov
fldl
dec
push
pop
inc
add
inc
xlat
int3
rcrl
rolb
test
test
jbe
shll
sub
int
jge
xchg
lea
xor
pop
sbb
sbb
fisubs
and
mov
mov
mulb
xchg
lret
dec
mov
or
sbb
push
or
js
cmp
fsts
jl
outsl
dec
pop
pop
xchg
and
and
insb
ss
and
cmpsb
movsb
lahf
repnz
fdivr
pop
mov
iret
sbb
mov
sbb
pop
scas
mov
bound
jp
sbb
push
orl
and
clc
pop
test
push
jno
sub
xchg
xchg
pop
popf
insb
jmp
mov
dec
or
sbb
rolb
mov
push
enter
jnp
pop
insl
sbb
inc
popf
rol
clc
je
inc
inc
test
jmp
or
lock
int3
ss
mov
or
xor
das
xchg
pop
test
xchg
push
push
push
mov
xor
stc
incl
or
test
jmp
cli
jns
add
popa
adc
enter
adc
stos
sbb
fcmovnu
call
and
int3
push
iret
or
mov
mov
lods
cmc
cmp
push
add
fidivs
sbb
lock
nop
jno
and
adc
or
inc
and
sbb
dec
fists
sahf
sub
fmull
mov
gs
popf
jmp
fcomi
mov
mov
push
dec
movsl
cmp
mov
icebp
mov
sub
pop
jecxz
inc
lcall
faddp
in
pop
jns
and
or
cld
jecxz
pushf
negb
int3
daa
std
lock
mov
out
inc
jecxz
adc
add
or
test
popa
lods
sbbb
xor
lea
pop
xor
fidivl
fildl
jp
pop
adc
xor
mov
inc
shlb
inc
push
add
imul
adc
pop
insl
js
dec
cs
test
out
daa
mov
outsl
pop
inc
mov
ljmp
push
dec
popf
xchg
mov
sbb
xchg
outsl
pusha
test
mov
lock
xchg
mov
shll
lods
add
xchg
pop
inc
push
loop
jb
adc
and
jbe
aaa
lock
dec
sbb
adcl
clc
pop
jno
popa
jmp
push
outsb
call
mov
push
jge
add
mov
imul
inc
adc
loop
jg
imul
jne
jnp
adc
mov
clc
aad
inc
xchg
test
popf
or
mov
stos
jmp
call
sub
xor
aaa
fadd
std
xor
adc
in
jbe
sbb
stos
inc
inc
xor
adc
pop
int3
dec
arpl
inc
orl
inc
scas
lods
xchg
sbb
inc
sti
in
xchg
dec
and
int
dec
adc
mov
mov
out
cli
jg
mov
sbb
and
inc
dec
push
push
and
dec
sbb
xor
pop
dec
cmp
sub
pop
jl
pushf
cmp
pop
mov
mov
jmp
lahf
adc
pop
push
mov
ja
data16
and
clc
lods
add
adc
dec
or
sbb
pop
stos
dec
mov
push
adc
pop
sub
and
test
daa
mov
jle
mov
aam
jl
loope
sbb
mov
or
inc
stc
outsl
int3
sbb
adc
mov
scas
jne
mov
mov
push
daa
enter
sbb
in
dec
pop
mov
aas
out
dec
cmc
test
aaa
addr16
movsb
test
jecxz
mov
inc
movsl
shlb
cmp
fimuls
pop
insl
pop
jnp
jmp
sub
mov
jnp
mov
lods
in
mov
pop
popf
xor
rolb
or
xchg
popa
ja
incl
xor
or
inc
aam
fistps
outsb
aad
lcall
ljmp
outsl
pop
mull
aad
cltd
push
dec
inc
sti
pusha
in
test
sub
add
mov
mov
incb
jbe
xchg
inc
mov
pop
daa
push
push
pusha
mov
imul
push
jge
mov
xor
fwait
add
fs
add
mov
mov
xchg
jmp
gs
das
addr16
xor
jmp
clc
xor
cmp
cmp
jne
fisubrs
or
push
pop
jp
imul
fisttpl
scas
xchg
sbb
xchg
fcoms
jge
add
sub
inc
ficoml
decb
fdivrs
pop
sbbl
icebp
sbb
imul
test
fsts
dec
pop
or
lret
mov
push
clc
outsl
push
sbb
cld
bound
pusha
in
test
mov
mov
in
jb
mov
or
popf
mov
decl
or
jg
jp
xchg
enter
loope
lods
sahf
xlat
xchg
lds
test
test
mov
fsubs
xchg
out
pusha
subl
popa
icebp
sub
mov
mov
xlat
idivb
xchg
imul
dec
fmull
orb
or
xchg
cltd
jbe
mov
sbb
dec
adc
adcl
jbe
push
inc
jno
mov
mov
cmpsl
fiadds
push
movsb
dec
inc
fcoml
add
mov
mov
cmc
out
cmp
push
loopne
or
negb
jnp
dec
sbb
lcall
fs
mov
popa
push
std
sbb
int3
mov
out
mov
cli
in
xor
lock
sbb
test
fisttps
movsl
dec
push
sbb
xorb
sahf
pop
sub
or
dec
cmpsl
mov
cmp
cmc
lcall
jle
mov
inc
sbb
or
pushf
mov
xor
insl
insb
push
cwtl
lahf
in
jecxz
mov
mov
add
or
cld
aaa
out
test
pop
enter
push
test
fcomip
or
in
and
ret
cli
or
js
fisttpl
arpl
push
nop
mov
ret
orb
je,pn
adcl
or
lret
or
outsl
mov
xor
mov
sbb
cmpb
out
bound
sahf
xor
pop
das
mov
cmpsb
out
sbb
push
fisttpl
mov
rclb
jmp
jp
add
shlb
ss
ret
les
cmc
flds
xchg
jns
or
inc
sti
xchg
ljmp
or
mov
jbe
xchg
mov
mov
sub
xor
pop
movsl
push
adcl
adc
or
xor
das
xchg
fcmovu
divl
pop
imul
ret
lea
pop
push
aas
mov
adc
or
dec
outsb
or
adc
in
popa
rclb
sub
pop
mov
icebp
sub
imul
rcrb
mov
jecxz
popf
pop
jo
fcmovbe
fbstp
gs
add
xchg
cmp
inc
add
mov
test
dec
cmp
sub
add
or
mov
rcl
mov
push
and
mov
pop
test
adc
cmp
outsl
insl
jg
sbb
xchg
rcll
mov
push
and
jbe
jne
je
add
pop
loopne
flds
cmc
rolb
mov
das
data16
fmull
sub
jae
cwtl
std
inc
adc
push
jle
int3
mov
orl
or
mov
cmpsb
or
or
xor
push
in
mov
popl
inc
stos
xchg
testb
mov
addb
and
in
or
scas
fstpt
mov
jge
sbb
and
dec
hlt
jo
inc
inc
repz
and
ret
fidivl
push
fdivrp
pop
arpl
nop
mov
frstor
sub
lea
jb
push
ljmp
sar
sbb
das
or
mov
scas
cmc
cmp
sbb
lahf
daa
shlb
dec
mov
inc
inc
loopne
testb
icebp
sbb
mov
lahf
ret
ljmp
jp
sub
add
cs
incl
inc
out
bound
inc
jg
jg
mov
lds
stos
jmp
and
fldt
lods
aam
es
xor
ret
sarl
inc
je
mov
enter
add
test
test
xchg
or
add
xor
clc
aas
clc
push
push
or
fucomip
cwtl
xchg
mov
xchg
jecxz
sub
aad
inc
mov
adcl
xor
push
mov
js
mov
rdtsc
stos
int3
add
popl
inc
or
add
lods
nop
leave
loope
jp
xor
icebp
mov
scas
lahf
outsl
cli
inc
xchg
cmp
outsb
pop
inc
cltd
mov
mov
outsl
jecxz
fimull
add
jae
add
push
outsb
cmc
loope
xchg
adc
sub
push
push
std
mov
dec
xor
mov
sub
test
mov
shlb
ja
adc
mov
mov
ret
mov
add
jecxz
jo
xchg
test
add
pop
bound
out
rcrl
js
cli
in
ljmp
xor
or
sbb
jae
lcall
xlat
cltd
add
mov
stos
or
xlat
mov
push
lahf
shll
hlt
daa
xchg
cwtl
lods
incl
push
mov
jl
dec
adc
pop
sbb
or
pop
mov
enter
cli
mov
ss
inc
jne
cmp
addl
cmc
xor
mov
lea
adc
xchg
imul
bound
xchg
loopne
or
or
movsl
dec
mov
jns
repz
repnz
inc
ret
in
out
dec
popa
jmp
and
cwtl
cmp
lea
push
sub
movsl
in
cmpsb
cmp
outsl
push
mov
int
mov
enter
icebp
sahf
jnp
mov
aas
push
std
inc
adc
xchg
xchg
jmp
xor
mov
mov
outsb
nop
addr16
mov
xchg
imul
mov
filds
cld
mov
testb
ss
pop
dec
pushf
xor
popa
movsl
fcoms
mov
lret
jns
jl
add
cmp
dec
inc
xor
jnp
or
mov
mov
sub
jecxz
pushw
rolb
fldenv
nop
insl
pop
outsl
or
shr
push
push
jno
mov
mov
push
int
inc
jge
and
jle
jo
jg
clc
fneni(8087
jno
and
add
das
adc
insl
adc
cmp
aam
aaa
fiaddl
add
orb
test
subb
xchg
add
jb
jp
ret
shrb
jmp
sbb
fsubs
pusha
xchg
fidivrs
cs
mov
shlb
std
mov
hlt
into
insl
jecxz
in
aaa
iret
enter
xchg
sbb
arpl
mov
fnstsw
stc
lret
or
in
aaa
push
dec
sub
mov
popa
jns
sub
mov
leave
cmp
lea
loopne
xchg
ret
scas
jg
test
sbbl
in
adc
cld
mov
jnp
mov
mov
outsb
or
incb
cmp
or
cs
subl
pop
pop
in
add
insb
sub
push
push
inc
cmp
push
xchg
mov
fnstenv
sbb
popa
call
adc
clc
inc
cmpsb
shl
add
in
push
outsb
jp
call
fldcw
inc
cmpsb
lods
push
lock
push
pshufd
add
pop
insl
push
jle
test
xlat
aas
xchg
icebp
or
lcall
cli
andb
jns
jl
nop
int3
xchg
dec
adc
mov
iret
pop
jo
mov
sbbb
inc
lods
stos
daa
lea
ja
fwait
test
rcl
loopne
scas
sarl
outsb
bound
or
mov
rcrl
jns
sub
lret
insl
push
mov
pop
jmp
mov
push
inc
out
mov
or
adc
imul
inc
jecxz
and
mov
mov
fnstsw
mov
xor
adc
sbb
mov
mov
das
or
hlt
inc
or
fdivs
sbbl
das
sub
std
outsb
roll
mov
add
add
test
and
rcl
pop
pop
adc
jl
mov
notl
push
test
inc
push
sbb
cmc
insb
inc
jge
clc
add
lds
xor
mov
push
sbb
add
fisttpll
xor
loopne
sbb
sbb
inc
jp
lcall
and
stos
xor
int3
aas
mov
cwtl
les
and
pop
adc
int3
leave
add
mov
js
push
cmp
push
loope
aaa
fdivrs
imul
sub
icebp
movsl
out
xor
push
icebp
lea
outsl
movb
mov
xor
inc
push
xor
dec
cmp
cltd
cli
out
test
outsl
inc
mov
aam
pop
and
ret
cld
out
or
and
cmp
lahf
inc
add
lret
outsb
adc
dec
aam
adc
xlat
xor
push
in
mov
jl
decl
adc
inc
or
or
mov
inc
jne
cmp
mov
pop
or
push
cmp
dec
mov
mov
mov
sti
xchg
cmc
test
rcl
incb
pop
push
and
adc
sbb
pop
push
neg
ffree
in
mov
hlt
mov
out
andb
ja
dec
addb
mov
pop
lea
gs
or
cli
fsub
fwait
adc
mov
sub
sbb
jns,pn
in
nop
add
les
fidivrs
shlb
call
adc
and
int
decl
test
sbb
aaa
mull
leave
lret
repnz
aad
mov
mov
add
enter
subl
inc
sub
int3
and
push
ret
push
imul
pop
inc
xor
cmpsl
ja
fcmovne
popf
pop
bound
xor
or
aas
in
rcl
divb
mov
in
in
insb
call
mov
fs
push
push
sub
sti
sbb
pop
inc
imul
sub
xchg
dec
mov
and
xchg
in
pop
or
adc
test
popa
test
rcll
fidivs
jg
mov
roll
clc
stc
movsl
cs
add
push
inc
scas
imul
cmovb
and
test
adc
sbb
in
js
dec
mov
ljmp
mov
inc
test
mov
scas
adc
sbb
in
xor
std
lcall
sbb
cld
pushl
cld
and
and
sbb
push
jle
inc
mov
jp
push
xchg
in
call
or
testb
push
jge
faddl
in
mov
fcompl
loopne
fadds
mov
lret
inc
pop
ljmp
sbbb
clts
lods
mov
jnp
movsl
mov
pushl
or
inc
push
adc
mov
and
rclb
mov
aaa
jb
or
dec
cmp
sti
ljmp
inc
push
test
mov
sbb
pop
das
sub
inc
repnz
and
lret
test
aam
and
adc
push
cmp
cmpsl
shll
je
lods
ja
sub
sbb
insb
cmc
and
shll
pop
jp
je
push
rorl
xchg
les
aaa
shrb
shrl
xchg
xchg
ljmp
cmpsl
add
push
inc
loopne
ret
xlat
inc
jg
or
popl
jne
adc
mov
test
sti
pop
xchg
mov
fsubr
and
pop
cmpsb
push
aaa
cs
das
mull
dec
in
imul
les
or
jg
xchg
ss
insb
or
cli
xchg
xor
imul
and
les
es
ljmp
mov
pop
ja
sbb
mov
jbe
jecxz
adc
test
mov
jmp
in
mov
xchg
and
leave
mov
mov
sub
jo
and
and
aaa
ss
sbb
push
pop
mov
push
scas
dec
cmp
add
movsb
loopne
into
mov
mov
sbb
clc
jno
dec
inc
adc
stos
sbb
aam
dec
jp
add
ret
out
adc
adc
test
fbstp
xor
xor
leave
inc
mov
fwait
and
adc
addr16
jmp
mov
mov
inc
mov
test
push
dec
mov
dec
mov
mov
xor
shrb
mov
push
cmp
movsl
jp
ljmp
and
mov
gs
lock
cwtl
xlat
lcall
xchg
flds
pop
sbb
cmpsb
mov
xor
insl
test
jae
test
fdivrl
mov
pop
rorb
gs
or
in
dec
sub
and
pop
push
fisttpll
leave
push
adc
jecxz
or
mov
mov
mov
fbld
mov
shlb
inc
xor
stos
inc
xchg
js
pop
cmp
lea
ret
sbb
dec
dec
mov
in
xchg
fistpll
bound
out
add
xchg
push
adc
cmp
jecxz
rorb
inc
sub
test
stos
in
insb
lret
not
pop
cli
sbb
ret
xor
mov
fbld
int3
cmp
push
add
fistpll
push
movsl
sbb
outsl
or
xlat
in
scas
mov
cmp
mov
lods
or
aad
mov
pop
xor
loopne
mov
ret
sbb
dec
js
and
das
push
shr
mov
jne
xchg
mov
adc
sbb
arpl
push
dec
ret
lcall
repnz
dec
sarl
push
push
clc
adc
frstor
das
stos
cmp
pusha
inc
sbb
adc
push
or
mov
call
sbb
xchg
cld
inc
xlat
int
imul
mov
pop
add
pop
mov
push
addl
fstl
push
mov
dec
test
pop
addb
mov
test
daa
xchg
les
js
sub
ds
push
adc
ret
and
jnp
adc
ret
or
xchg
dec
sub
mov
xor
loopne
and
outsb
pop
jecxz
gs
jp
push
mov
mov
scas
jp
push
pop
stos
xor
cmp
stos
cmc
lods
or
pop
sub
sub
mov
test
jno
or
push
icebp
jge
ja
push
in
jecxz
mov
pop
cmp
jle
ja
fsubs
xor
test
fiaddl
sbb
adc
out
ljmp
call
jns
inc
inc
inc
xor
je
rcr
sti
inc
sub
adc
dec
cld
gs
es
int
test
adc
inc
add
fdivrs
cmpsl
pop
add
jbe
loopne
add
sbb
adc
fsubrs
cmpsb
mov
clc
cmp
das
jno
test
cmc
scas
mov
lds
fildll
add
dec
xchg
xchg
xchg
or
adc
popf
pop
ret
lock
push
mov
jne
inc
jo
push
jnp
pusha
mov
ds
xor
fisubl
mov
mov
decb
jl
mov
xchg
mov
cmp
dec
sbb
xor
test
xchg
mov
xchg
aaa
mov
inc
xchg
sub
xor
push
push
xchg
repz
mov
pop
cltd
jo
add
mov
lods
subl
push
jg
mov
shll
mov
sbb
clc
push
inc
aaa
mov
aaa
jmp
ret
mov
jg
push
inc
inc
sbb
mov
mov
dec
pop
sub
enter
out
mov
sub
mov
push
inc
inc
pop
jo
das
aam
loopne
inc
push
mov
daa
cmp
adc
cs
test
inc
cltd
cmp
push
adc
call
mov
bound
or
adc
test
lods
xor
insb
pop
xchg
mov
xorb
shll
stos
xchg
or
mov
lret
inc
aaa
clc
fcmovnu
lea
push
leave
ss
and
mov
inc
add
adc
lock
dec
clc
dec
and
or
in
xlat
jle
pushl
cmp
push
push
std
mov
and
lret
mov
repnz
push
hlt
scas
and
outsl
std
ret
pop
aad
jecxz
lods
pop
pop
sub
int
push
rorb
xor
adc
mov
movsl
xchg
mov
lods
mov
insb
push
insb
dec
aam
sub
mov
mov
arpl
jbe
pop
cmpsb
sahf
pop
in
pushl
icebp
push
repz
int3
mov
and
shrl
inc
insb
mov
popa
addr16
mov
xchg
je
xor
sbb
test
les
cltd
xor
inc
mov
ljmp
cli
insl
and
imull
rol
push
mov
jg
push
mov
test
pop
mov
inc
ljmp
jecxz
test
inc
fbstp
es
test
xlat
mov
jb
jbe
pop
pop
mov
testb
xchg
push
imul
lcall
xchg
aam
push
imul
lds
mov
lods
sbb
les
decl
pop
push
test
add
xlat
insb
add
arpl
and
stos
push
cmp
push
adcb
int
das
adc
cmp
push
je
pop
loopne
cli
inc
fnstenv
cmp
pop
pop
xor
push
push
mov
repz
aaa
pop
mov
and
test
imul
sbb
xchg
les
inc
inc
or
popa
mov
and
sbb
mov
sub
or
xchg
push
test
lret
inc
add
xor
xchg
icebp
and
mov
xor
jle
add
inc
jl
test
adc
ljmp
lock
inc
mov
arpl
sbb
mov
jo
sbb
fcom
xor
sbb
mov
movsl
jbe
sub
xlat
jmp
in
sub
inc
aam
pop
jge
lea
jge
cli
insl
pop
stos
outsb
push
enter
mov
mov
enter
jg
mov
cwtl
adc
jo
mov
mov
dec
adc
pop
mov
sbb
xlat
in
popa
test
aam
dec
outsb
out
xchg
jge
xchg
movl
cmp
push
sbb
hlt
cmp
pop
push
pop
push
cwtl
xor
orb
adc
rcrl
pop
call
cmpsl
sub
test
fisubrl
dec
mov
ror
clc
inc
icebp
mov
test
mov
sarb
pop
in
stos
decl
sub
mov
jge
cli
add
cld
sbb
mov
and
pop
and
xor
ja
jg
scas
inc
ljmp
jno
outsb
adc
xchg
lds
add
mov
sub
inc
pop
adc
add
add
rolb
movsl
scas
adc
movsl
fists
dec
repz
dec
add
inc
call
out
in
mov
adc
mov
shrb
popf
pop
jno
cmp
fmul
fnstenv
adc
adcb
sbb
ret
mov
push
je
sub
mov
pop
lock
push
sarl
dec
mov
mov
mov
and
push
repz
iret
out
xlat
xchg
mov
subb
cmp
xor
xchg
xor
pushl
mov
mov
decb
mov
ret
pop
mov
jnp
mov
mov
pop
das
cltd
aas
mov
cmc
lahf
push
xchg
pop
ficoms
and
mov
xchg
sbb
add
lods
pop
clc
adc
loope
xchg
inc
aaa
add
jle
cmp
cmpsb
cmp
in
push
dec
loope
cmc
or
in
sub
leave
sahf
ret
mov
push
cmp
test
enter
push
cwtl
popa
and
or
decl
popa
and
fcomps
sbb
aad
movsl
insl
ds
and
mov
cmc
or
pop
cmp
and
xor
jle
sbb
sbb
mov
subl
mov
cmp
jbe
out
cmc
xchg
mov
scas
insl
add
jne
loopne
jg
outsb
dec
out
add
dec
and
xlat
pushf
mov
sbb
push
repnz
push
add
clc
les
iret
pop
xor
fcomi
mov
inc
cmpsb
and
and
ret
fbstp
pop
lret
xlat
push
adc
add
insl
jnp
sub
ret
cs
mov
fcom
fwait
xchg
insl
out
mov
sbb
lods
mov
dec
lahf
inc
push
mov
testl
outsl
rol
in
imul
icebp
test
jl
outsl
jp
adc
icebp
das
out
bnd
pop
mov
xor
xchg
loope
in
cmpsb
in
or
sbb
pop
rclb
imul
mov
cmc
xchg
jp
dec
shrl
cmpsl
nop
xchg
inc
and
jmp
jge
testb
aaa
sub
inc
push
adc
out
adc
lcall
mov
leave
fdivs
xor
call
insl
pop
icebp
add
or
or
cli
add
cs
xchg
add
fiadds
sbbl
mov
add
daa
xor
sub
aam
mov
add
test
mov
dec
popa
lock
adc
xor
mov
dec
aad
scas
and
sbb
adc
xchg
stc
xor
addr16
movb
iret
shl
xor
sarl
adc
ljmp
pop
mov
nop
inc
sbb
scas
sarb
iret
pop
ror
inc
and
adc
inc
add
cmc
cmp
lods
mov
cli
fnstsw
and
mov
pop
adcb
or
fistl
orb
and
cs
mov
cmpsb
push
push
rorl
es
sub
jp
std
sbb
cld
fisubl
mov
not
push
adc
jno
gs
or
scas
fistps
push
mov
adc
pushf
jo
daa
add
ffreep
rcrl
sbb
inc
test
flds
xchg
push
cmova
decl
pusha
inc
test
lods
repnz
stc
lret
and
or
push
xor
adc
rcr
icebp
dec
pop
icebp
je
jecxz
mov
sub
mov
adc
mov
mov
fisttps
loope
cmp
loope
sub
insb
stos
movsl
xchg
loopne
enterw
mov
mov
cli
cld
mov
data16
rcrb
xchg
xor
popa
xchg
out
sarb
cmp
jne
and
mov
lods
pop
aas
sbb
and
subb
pusha
arpl
les
jne
cmc
and
ss
cli
jecxz
xor
dec
call
push
shrb
es
cs
mov
xchg
scas
inc
jmp
aas
enter
cmpsb
inc
mov
outsl
cmp
inc
cmc
push
adc
and
subl
mov
mov
inc
dec
jne
outsl
insl
outsl
pusha
mov
and
fidivrs
lds
mov
lret
pop
lds
outsl
jle
add
xchg
addb
pop
push
mov
sbb
mov
push
mov
mov
push
jbe
leave
cmpsb
cmp
cli
inc
mov
in
mov
adc
hlt
sti
lea
outsb
lret
sahf
aam
outsl
xchg
and
mov
popf
mov
xlat
and
dec
int3
nop
xchg
and
cs
xchg
out
inc
pop
or
jmp
jo
xorb
les
adc
push
mov
lds
xchg
jle
inc
in
add
or
mov
scas
mov
jl
mov
ret
pop
mov
clc
sbb
add
std
dec
xchg
sub
push
cmp
mov
jp
mov
movsl
add
sbb
test
fs
mov
imul
inc
inc
pushl
dec
or
jle
jle
shrb
sbb
clc
or
pop
push
push
rcrl
in
faddl
pop
and
andb
lahf
and
aaa
fisttpll
ss
test
xorb
mov
xor
dec
stos
mov
cmp
mov
jge
jmp
push
insb
test
jmp
jnp
insl
fcomip
fwait
add
repnz
loopne
cltd
xor
dec
jo
inc
insb
and
in
insb
jg
cmp
push
adc
aam
cli
aaa
pop
das
pop
cs
jno
pop
outsb
cld
mov
or
adc
ret
sub
subl
cli
mov
xorb
push
sbb
std
aaa
pop
out
ret
cli
cld
shlb
cmp
xor
mov
sbb
int
lds
push
push
dec
pop
out
insb
ret
rorb
or
ror
dec
lock
fisubrl
xor
cli
push
xchg
test
cmp
cmc
js
jg
mov
into
push
xor
cmp
pop
pushf
xchg
fisubrs
pop
push
repz
or
mov
inc
stos
inc
insb
jb
jge
and
cmp
inc
add
dec
inc
sbb
lods
mov
xchg
popf
inc
pop
test
push
mov
lods
mov
add
aad
popf
mov
jno
jb
insl
add
imul
adc
add
mov
push
je
add
test
sbb
or
add
mov
mov
dec
lock
addl
ljmp
ret
fs
fcmovnb
aaa
jns
cmp
jb
sbb
pop
or
add
sub
sub
sbb
test
mov
outsb
jg
push
jae
orb
fs
lods
xor
test
fdivrp
inc
mov
jl
stc
sbb
xchg
adc
fisttpl
jnp
xchg
popf
xor
call
ljmp
mov
loope
mov
sbb
add
xlat
xchg
pop
sbbl
or
add
in
ljmp
js
mov
popf
push
cs
in
dec
fwait
jle
std
xchg
xchg
mov
jb
adc
pop
push
inc
mov
mov
jmp
sar
fidivrs
cmpxchg
xor
xchg
lret
int
pop
fisttpll
fsts
sub
and
aad
lods
jle
mov
pusha
mov
or
push
dec
fdivl
push
push
mov
mov
mov
mov
aad
or
test
push
inc
mov
jns
fstp
push
mov
out
sahf
mull
sar
test
test
xchg
fs
mov
sbb
push
sbb
scas
mov
and
jmp
arpl
ja
subl
ljmp
fmuls
inc
add
call
dec
push
mov
xchg
push
pop
mov
mov
mov
add
push
rorb
test
int
xchg
add
xchg
scas
pusha
test
into
fs
pushf
loop
pop
lcall
cmp
sub
iret
std
xor
pop
xor
cmp
les
push
inc
inc
xchg
dec
push
adc
jno
in
call
push
out
test
jb
sub
pop
cli
push
sbb
jbe
out
fisttpl
or
inc
sub
mov
aaa
fdivr
mov
cmp
cs
in
rorb
mov
push
popa
sub
std
je
xchg
mov
loopne
fimull
popa
cmpsb
pop
out
mov
jb
mov
fs
pop
adc
stos
movl
cmp
and
fs
and
out
cmp
or
cmp
inc
es
jg
sub
inc
movsb
mov
ja
push
ja
ds
outsl
push
mov
or
fsubp
push
mov
push
xor
outsl
movsl
sbb
js
aas
xchg
testl
jno
jg
repz
and
dec
cwtl
fidivrs
out
jo
popa
sbb
lret
shrl
orl
mov
or
daa
jmp
xchg
ja
outsl
mov
and
and
sub
dec
push
sub
fdivl
cmp
push
inc
cmp
clc
fs
stos
add
sbb
stos
pop
pop
in
je
fisubs
les
pop
in
fcmovbe
in
pop
call
mov
mov
lcall
inc
jl
enter
incl
sub
mov
sahf
xchg
push
scas
sbb
push
push
stos
xor
mov
repz
out
sbb
add
test
fisttps
mov
notl
push
pop
xor
les
pop
int
sub
jle
test
jge
cmp
gs
pop
loopne
add
lcall
mov
popa
sub
mov
shrb
xchg
push
xchg
sbbl
jne
jecxz
inc
dec
push
js
mov
imul
mov
mov
fwait
cs
test
sti
and
filds
and
fiaddl
dec
test
es
mov
aaa
xor
or
and
or
adc
dec
xchg
mov
push
sbb
push
lds
movsb
push
pop
push
pop
ret
insl
adc
fistps
loopne
shlb
sbbb
mov
mov
fisttps
test
scas
mov
mov
movsl
cmp
add
or
sbb
out
movsb
lahf
xchg
mov
xchg
push
std
mov
sahf
out
xchg
push
xchg
aam
and
sub
jne
dec
outsl
lods
pop
xchg
push
pop
and
std
mov
rorl
sub
and
aad
or
mov
stos
xchg
iret
fistpll
sti
add
lcall
dec
mov
repnz
xlat
xchg
std
or
cmc
inc
jl
lock
sub
cmc
outsl
jge
aaa
outsb
aad
sub
push
xor
and
jne
cmp
test
pusha
test
push
ret
imul
mov
adc
push
and
mov
lock
or
clc
adc
sub
mov
add
mov
lret
ds
dec
stc
add
cld
fisttpl
adc
sarl
dec
stos
push
xor
cmp
mov
add
xchg
orl
jmp
inc
push
push
xchg
lods
inc
pop
je
dec
cs
jge
aas
inc
push
subb
jge
jo
fucomi
fcmovu
fs
pop
sub
and
xchg
scas
mov
fbld
jg
mov
stos
sti
xchg
test
ret
jo
jnp
add
cmp
sbb
in
sbb
mov
movl
in
mov
loope
lcall
mov
movsl
dec
mov
dec
movsb
and
insl
shll
mov
aam
push
int3
or
cmp
out
dec
les
sarb
mov
cli
je
mov
jge
loope
ja
das
cld
xor
lret
aas
in
icebp
or
xchg
xchg
pop
sbb
sub
pop
int3
xor
jno
inc
mov
pop
jmp
jg
leave
clc
shlb
hlt
pop
pop
imulb
mov
lret
in
hlt
out
jno
mov
push
orb
inc
out
cmp
dec
out
or
dec
dec
mov
insl
sub
add
mov
add
loop
ds
jne
or
daa
ljmp
lds
stos
add
adc
test
scas
push
dec
loop
dec
orl
ficoms
insl
xchg
xchg
mov
xor
arpl
loop
in
sub
inc
add
fadds
cmp
enter
inc
loope
shll
bound
out
or
or
stos
mov
call
adc
push
mov
push
sbb
cwtl
sbb
out
mov
loope
adc
dec
setg
inc
fs
inc
sti
movsl
je
mov
dec
sbb
je
int
lods
aaa
popf
jecxz
cmp
leave
lds
and
xchg
push
inc
mov
mov
and
fistpll
mov
aaa
insl
push
inc
aam
popl
andl
sub
cmp
ss
adcb
jl
outsb
and
pushaw
clc
mov
pop
push
ja
mov
or
sbb
fadds
or
adc
mov
jp
mov
shll
mov
mov
lock
and
jl
add
sbb
push
inc
aad
push
sahf
outsl
inc
xchg
xor
js
jl
fisttpl
pop
inc
adc
xchg
fisubrl
mov
lcall
xor
jno
dec
jecxz
outsl
mov
push
mov
mov
sbb
incl
inc
and
or
and
adc
pop
popa
or
outsb
jg
or
movsb
sbb
adc
jle
popa
pop
push
mov
das
pop
inc
inc
mov
dec
cwtl
add
ror
mov
fdivrl
mov
clc
popa
sub
test
fsubrl
shlb
stc
xchg
jecxz
mov
mov
mov
pop
in
nop
cld
stc
pop
or
jecxz
imul
cmpsl
inc
add
or
mov
jl
mov
xchg
mov
jmp
popl
sarb
enter
mov
sarb
aad
inc
mov
add
cmp
lods
adcl
adc
les
js
mov
out
es
mov
shll
cltd
push
pop
imul
cmpsb
rol
dec
add
sub
jg
mov
js
mov
fbstp
cs
pop
scas
fs
scas
pop
repz
jne
dec
dec
fsub
icebp
fsubrp
adcl
mov
xor
mov
rol
das
mov
mov
fstpl
mov
push
sub
aam
jno
call
rcll
and
int
cli
in
inc
adc
shl
and
arpl
mov
fistps
adc
mov
mov
inc
idivb
scas
lcall
dec
ret
push
mov
stos
inc
fcomps
nop
test
nop
lea
inc
xchg
push
aam
dec
sub
or
mov
testb
fwait
mov
in
xchg
stos
dec
call
cmpsb
cmc
mov
xor
stc
inc
insl
and
push
fbstp
xlat
lea
jbe
daa
insl
mov
mov
rolb
sbb
mov
lods
jmp
lods
cltd
pop
icebp
cmpsb
and
or
enter
mov
leave
in
jbe
aad
dec
test
mov
sbb
pusha
pop
or
fcmovnu
xchg
and
sbb
or
ror
sub
inc
das
or
sbb
hlt
or
rorb
cmp
or
and
inc
add
push
lret
push
out
mov
mov
pop
loopne
les
xlat
or
sbb
fistpll
pop
iret
mov
aam
imul
cli
pop
into
and
sub
jnp
mov
or
mov
jb
outsl
cld
mov
push
mov
sarb
int3
adc
inc
inc
jle
push
mov
shll
sbb
jle
mov
es
pop
in
add
inc
push
js
jae
inc
hlt
sbb
call
rcr
jp
fcmovbe
and
mov
mov
jbe
outsl
aam
stc
push
fnstenv
ret
adc
movsl
pushl
mov
popl
jbe,pn
dec
mov
les
push
cmp
shr
mulb
sub
icebp
arpl
lds
push
mov
ret
or
mov
jnp
fidivs
sub
data16
in
push
aaa
fdivr
outsl
and
jb
scas
push
adc
sbb
sar
lea
xchg
inc
add
mov
inc
mov
sbb
inc
rcrb
cmp
movsl
test
add
fidivrs
pushl
adc
dec
addr16
ds
mov
je
lds
cs
jbe
outsl
xor
xlat
cmp
and
xorl
xor
mov
aas
div
ffreep
scas
mov
cmp
sub
jmp
pop
mov
inc
mov
repz
ret
jmp
push
cmpsb
mov
stos
mov
lock
mov
repz
rorl
mov
pop
or
mov
arpl
xchg
outsl
das
sub
and
outsb
pop
das
out
popa
aas
mov
push
andb
jl
and
xor
inc
nop
cmc
jnp
ljmp
sub
sbb
xchg
cmp
dec
mov
dec
sbb
jmp
or
stc
sub
xor
das
pop
mov
lds
cs
cmp
push
pushl
add
pop
testl
pop
fists
cwtl
xor
lret
mov
mull
stos
sbb
sbb
xorb
push
sbb
inc
xchg
rcll
jl
add
inc
adc
mov
imul
arpl
jp
loop
cli
lock
and
ficoml
push
lahf
sbb
jmp
std
pop
sub
mov
and
mov
jnp
or
adc
sbb
idiv
sub
ljmp
lea
push
test
jo
rcr
loope
shlb
testb
popa
pop
sti
push
js
xor
insb
or
stos
test
jmp
pop
add
pop
lods
pushf
aam
repz
scas
push
xor
ljmp
adc
ret
mulb
mov
mov
ja
jbe
pushf
pop
adc
aas
push
cmc
fcomps
imul
inc
xchg
loope
fwait
mov
mov
mov
xchg
push
adc
ss
ss
movsb
repz
pop
dec
or
decl
push
dec
pop
lcall
cs
fistpl
pop
in
jae
fwait
or
sbb
out
aas
mov
pop
sbb
xchg
sub
shlb
lds
mov
add
iret
add
aad
mov
mov
dec
ss
fnsave
fildl
adc
cmp
int3
pop
clc
ficoms
addr16
fiaddl
lds
fcmovnu
rorl
mov
xor
mov
jbe
negb
push
syscall
and
sub
and
pop
cwtl
aam
add
in
mov
adc
cmp
icebp
jecxz
pop
enter
lock
fsubrs
movsl
shlb
adc
out
mov
addl
xchg
sub
fstps
loope
mov
stos
jg
fimuls
dec
inc
xchg
mov
push
sbb
jmp
adc
imul
shld
outsb
xor
xor
cmpl
jp
ret
mov
xchg
std
push
sub
xor
imul
pop
mov
mull
adc
adc
jecxz
insb
clc
dec
sub
sbbl
js
std
sub
outsb
cmp
mov
lahf
gs
ljmp
in
cmpsb
add
and
jl
negl
imul
pushf
insb
xor
dec
push
xor
cli
call
cmp
mov
cld
mov
pop
or
sahf
cmc
clc
xchg
shlb
pop
add
ja
and
ret
mov
and
rcll
push
jg
xchg
bound
test
add
cmp
xor
fucomi
pop
mov
scas
push
xchg
add
cltd
mov
fstpt
test
pop
xchg
or
jne
mov
outsl
fnsave
ds
fidivrs
inc
ret
or
inc
inc
mov
cmp
idivb
mov
pslld
xor
stc
lds
jbe,pn
test
inc
dec
and
iret
and
out
loop
jne
repnz
and
ret
cmpl
dec
pop
mov
fsubl
push
fwait
or
fwait
xor
scas
pushf
cs
nop
ret
xlat
outsl
mov
or
and
pop
jmp
aas
push
fwait
ss
in
ret
pop
popf
mov
insl
testl
fiadds
mov
pop
outsl
cwtl
jne
mov
sub
mov
pop
js
add
call
in
aas
or
sbb
fistps
insl
xor
int
lret
cmp
xor
add
inc
mov
xchg
jbe
shr
and
pop
jo
je
push
in
clc
mov
sub
paddb
cltd
or
jns
rcll
test
add
add
or
and
add
jnp
xor
mov
scas
dec
dec
mov
filds
add
js
dec
mov
stos
mov
test
dec
jne
test
stc
xor
dec
clc
sub
jl
mov
insl
cld
insb
cld
loop
jb
test
loopne
inc
adc
stc
xchg
inc
fldt
arpl
movsb
adc
xlat
dec
incl
stc
out
enter
xchg
push
loop
insl
std
movsl
rcrb
adc
and
icebp
outsl
jno
orb
rdtsc
cmpsl
cmp
sahf
add
sub
dec
adcb
dec
sarb
xchg
cmp
ret
ljmp
jb
jmp
mov
push
mov
movsb
popf
mov
leave
sbb
xor
push
sbb
cld
out
lret
jbe
or
dec
fcmovnb
or
jne
and
xor
cmpsb
pop
sarl
xor
inc
rclb
sub
clc
sub
dec
cmp
push
jle
jg
and
jno
fisubs
hlt
cmp
negb
pop
push
repz
fdiv
add
xchg
push
cld
into
pop
push
leave
gs
adc
fdivrp
das
icebp
cmp
les
push
mov
cs
add
fisubs
aas
outsl
inc
pop
push
jnp
faddl
iret
shlb
mov
int3
test
dec
in
and
loope
dec
and
add
ficoml
ds
sti
or
std
mov
add
lret
das
fimuls
das
nop
mov
adc
cmp
jnp
fsubrl
mov
test
pop
mov
xchg
push
push
ret
outsl
js
ja
cmp
insb
sbb
cmpsl
push
adc
lcall
ds
mov
outsl
pop
mov
pop
pop
dec
daa
mov
push
mov
dec
test
mov
jge
inc
and
popf
dec
adc
cld
movsl
pop
jns
push
mov
enter
cmc
adc
popa
andl
mov
test
movsl
filds
pushf
jns
adc
cmpb
xor
test
addr16
je
add
out
jae
or
je
ds
jnp
pop
push
push
out
pushf
cmp
push
mov
and
adc
js
js
or
cwtl
adc
lret
dec
test
aaa
int3
jl
subb
lods
jecxz
push
mov
bound
cmp
fsubs
outsb
aam
test
lea
xor
inc
sbb
jmp
xor
push
jmp
mov
test
jge
sub
nop
mul
inc
or
mov
cltd
and
in
xor
or
inc
inc
sbb
pop
loopne
cld
test
add
sbb
aaa
mov
adc
sub
fwait
adcl
push
mov
sahf
add
mov
mov
inc
data16
or
push
mov
jbe
xchg
mov
inc
xor
dec
inc
push
mov
push
xchg
cmp
lret
je
test
or
sbb
sbb
popa
xor
rcr
mov
cwtl
lahf
fs
outsl
rorb
add
std
enter
adc
out
push
add
inc
sub
outsl
adc
mov
dec
loopne
insb
push
and
pop
xor
mov
push
hlt
ljmp
lock
cli
in
dec
mov
mov
cmpsb
pop
mov
mov
arpl
jp
mov
je
sbb
nop
and
mov
and
dec
pop
fcomip
incl
pop
adc
pusha
pop
pop
xorl
mov
mov
xchg
ljmp
iret
insb
mov
lods
or
push
cmpsb
loopne
test
xchg
loop
shlb
jl
js
adc
addr16
repz
ljmp
jl
add
je
aaa
push
lds
fildll
and
mov
xchg
out
jmp
xchg
or
ja
fisubrl
je
inc
jb
pop
cmc
psubd
in
cli
sub
shlb
mov
cmpb
pop
mov
xchg
lret
iret
xchg
pushf
and
adcb
sarb
pop
data16
dec
push
ss
sbb
pop
mov
lock
ret
mov
ljmp
xchg
shlb
in
mov
int3
pusha
mov
inc
or
aas
fyl2x
pop
jo
test
inc
cld
or
pcmpgtb
mov
daa
dec
mov
mov
ljmp
mov
mov
xchg
sub
aam
lret
insb
nop
pusha
mov
mov
repz
ss
movsb
push
rol
add
rcrl
xlat
mulb
mov
nop
sub
and
jecxz
insl
xchg
test
xor
iret
dec
loope
mov
push
adc
cmp
stos
shl
dec
add
cmc
cmpb
pop
xchg
into
pusha
lret
ret
lahf
cwtl
stos
movsb
pusha
rclb
aad
daa
jae
push
adc
es
fistps
jecxz
inc
and
cld
pop
pop
sub
xchg
xor
in
js
xor
stc
mov
mov
subb
push
outsl
jmp
adcl
sub
inc
dec
jecxz
dec
das
xchg
sub
inc
cwtl
data16
icebp
push
pushl
dec
jbe
cmpsl
inc
cmp
xchg
or
shll
push
adc
inc
cmp
rcrl
pop
sub
std
sbb
inc
cmp
adc
int
cld
push
sub
loop
pop
and
pop
push
stos
inc
adc
test
sub
outsb
shll
or
ret
ficoml
push
inc
call
ljmp
or
leave
out
pushf
lret
cmp
or
jl
add
mov
pop
jno
push
in
jg
dec
les
and
xor
add
and
adc
in
in
push
lock
outsl
loopne
or
pop
xchg
jecxz
clc
hlt
sbb
dec
lock
pop
shll
adc
decl
icebp
jns
addr16
iret
add
sub
test
loope
cld
push
xchg
cwtl
scas
jnp
movsl
mov
jp
or
pop
lret
xchg
sub
add
rcrl
test
add
push
push
cltd
jmp
pop
pop
es
shll
addl
rcl
lods
pushl
add
rclb
pop
outsb
jg
das
xchg
mov
jp
je
cmp
test
jl
xchg
cmpsb
add
jg
mov
popa
mov
adc
add
loop
clc
xchg
or
jne
mov
dec
or
push
fisttpl
add
sbb
fdivl
mov
pop
jmp
mov
nop
mov
push
outsl
and
pop
aaa
je
push
or
aaa
xchg
stos
cwtl
xchg
shlb
mov
mov
mov
out
adc
pop
adc
mov
mov
and
rclb
std
or
mov
arpl
int3
popf
das
ficompl
in
xchg
test
mov
push
mov
filds
insb
xorl
movsl
ret
jl
and
test
push
lock
clc
cmpsl
rcll
add
or
pop
sarb
pop
xor
bnd
addb
adc
repnz
or
cli
adc
sbbb
and
jns
xchg
mov
or
test
xchg
xchg
das
fisubl
fmuls
imul
ss
into
loopne
adc
fisubs
cs
jns
jns
je
add
outsb
and
xor
or
sbb
pop
mov
test
add
cltd
ss
xor
pop
test
test
ljmp
dec
aad
mov
repz
inc
mov
dec
mov
les
jno
push
pop
push
push
enter
aad
dec
mov
push
lods
fdivrp
ret
mov
add
cmpsb
dec
pushf
adc
add
jno
mov
les
push
cli
mov
testb
iret
pop
xchg
cli
pop
push
test
mov
cli
and
sub
dec
test
pop
dec
add
or
cwtl
sbb
push
js
test
ljmp
mov
cmp
mov
jp
scas
add
adc
lea
test
mov
movsl
mov
adc
shll
das
aad
lret
sbb
sub
mov
lahf
aad
sbb
lcall
lahf
push
adc
mov
fbld
sub
fadds
cli
jp
mov
lea
add
pusha
jne
add
cltd
popf
in
scas
mov
and
jne
xor
lcall
cmpsb
cmp
and
cmp
or
mov
rcl
out
sub
mov
pop
dec
fmull
jmp
out
sti
jg
push
inc
ljmp
jecxz
bound
dec
lock
loopne
movsl
adc
popa
mov
mov
push
mov
push
and
repz
sbb
loop
sbb
jb
add
outsb
mov
mov
fisubrl
mov
sub
cmpsb
das
mov
shlw
ljmp
idivb
mov
or
jp
push
fadds
sar
outsb
mov
clc
mov
ja
mov
add
sbb
push
js
outsl
loop
mov
add
mov
mov
pop
xor
loope
outsl
pop
jle
cmp
loope
faddl
aam
push
mov
mov
nop
test
sbb
fiadds
outsl
mov
inc
mov
pop
inc
sti
test
sub
or
push
mov
in
loopne
or
push
xor
adc
sbb
inc
and
mov
jo
push
test
dec
inc
movsl
out
in
sbb
push
insb
mov
lea
jno
cwtl
sbb
lods
test
popf
mov
dec
insl
mov
pusha
jae
inc
jl
jg
sbb
outsb
ret
scas
mov
push
pushf
mov
cld
cmp
outsl
lds
or
sub
mov
mov
xchg
jb
and
push
clc
bound
subl
adc
lds
dec
aam
inc
cmp
mov
xorl
addb
ret
dec
jns
mov
lds
lret
popa
mov
mov
cli
push
mov
lcall
sub
rorb
sbb
inc
push
jne
nop
in
testl
mov
add
push
push
or
les
mov
fcompl
sub
or
inc
or
mov
and
icebp
sub
jo
xlat
add
jmp
and
cmp
push
aaa
or
cmp
push
mov
nop
push
push
fistps
inc
out
mov
jne
ljmp
mov
subb
push
inc
pop
out
lret
call
add
xor
adc
andl
add
scas
jecxz
outsl
pop
xchg
loopne
dec
cld
loopne
lods
sub
adc
jecxz
mov
mov
shl
das
pop
cmp
inc
cmp
lret
lds
nop
jmp
pop
mov
loop
adcl
lods
fists
cmpsl
enter
inc
push
pop
out
jg
mov
int
loop,pn
aaa
enter
jg
cmp
jecxz
ss
ret
sbbb
test
jmp
stos
negl
xchg
addl
das
cmp
jno
das
pop
or
sahf
iret
sub
mov
cmp
mov
mov
adc
ja
sbb
nop
insl
dec
aam
and
icebp
sbb
add
and
xlat
jo
add
dec
mov
cld
lods
xchg
inc
mov
adc
lds
incb
imul
leave
inc
mov
loopne
mov
mov
sbbl
pop
push
add
mov
push
ficompl
pop
adc
push
in
fdivr
and
sbb
out
inc
movsl
jno
pop
shll
or
ds
call
outsb
mov
or
data16
push
test
push
test
cmp
fisubs
in
movsl
in
fs
xchg
sti
adcl
repnz
cld
out
mov
dec
inc
dec
daa
int
xchg
pop
sub
push
fstps
add
mov
shll
je
in
test
cmp
aad
outsb
sbb
jmp
add
in
sub
popl
ljmp
mov
push
jo
mull
or
outsb
shr
ss
jecxz
xor
sub
push
movsl
push
aad
rcll
sbb
pop
cli
and
lds
test
dec
ja
xchg
bound
mov
icebp
adcl
cmp
or
mov
lds
in
mov
xchg
sbb
bswap
ja
insb
sarl
into
ret
mov
add
cli
and
shl
adc
or
or
negl
lock
xchg
adc
lcall
mov
ds
sbb
int
popa
push
hlt
or
cmp
and
in
jno
dec
add
mov
pop
mov
mov
mov
or
push
push
lods
jns
or
mov
jbe
pop
cli
and
fwait
insb
mov
shrb
clc
loope
cmp
jne
test
clc
fildl
pop
js
mov
and
jp
out
push
stos
mov
fildl
roll
jg
jp
and
shrl
ds
scas
imul
test
std
add
push
sub
icebp
push
scas
xor
sub
adc
add
or
cmp
add
adc
cmpsb
stos
dec
dec
test
ljmp
mov
lds
dec
adc
ljmp
sbb
fnstsw
incl
push
add
xchg
mov
aad
mov
and
or
jge
insl
xchg
xchg
lahf
cld
cmp
adc
lcall
adc
divb
arpl
int3
sbbl
ret
psubq
pop
insb
shll
loop
add
shrl
aad
sbb
pop
inc
js
inc
insl
mov
call
jg
pop
xchg
loope
ds
add
leave
mov
divb
in
ja
push
rolb
dec
mov
popf
movsl
cmp
sub
jbe
negl
repnz
mov
mov
pop
outsl
fmul
sub
fwait
shll
lods
scas
mov
dec
fsubrl
add
inc
sbb
cmp
push
jmp
shll
add
or
data16
cmp
or
movsb
decb
clc
sbb
ficomps
cwtl
mov
sbbl
enter
rcll
pop
push
sub
sbb
mov
mov
ljmp
xor
pop
test
xor
inc
adc
mov
iret
lea
or
jmp
arpl
icebp
outsl
push
jmp
ficompl
xchg
test
insb
xor
push
js
pop
push
xchg
xchg
fisubrs
jae
bound
ret
test
or
push
loop
and
or
jp
test
and
adc
add
sub
jbe
adc
cmp
aad
mov
cmp
shll
es
jl
cs
jns
mov
xor
adc
lea
lcall
cmp
jle
adc
jle
ljmp
out
movl
xchg
data16
aam
xchg
cwtl
mov
pop
adc
cmp
inc
test
jle
aas
mov
push
scas
adcl
push
inc
fisttpl
lcall
inc
cmpsl
pop
stos
dec
or
and
shll
inc
inc
fistps
orb
lds
sub
sbb
jne
jb
bound
mov
xchg
push
mov
std
jg
push
mov
test
adc
out
call
jl
mov
adc
rcr
push
int3
pop
mov
push
mov
insb
inc
clc
add
mov
or
pop
inc
xchg
lods
ds
and
sbb
and
loop
ret
stos
insl
ret
movsl
lds
xchg
cmp
pop
push
outsl
inc
hlt
incl
add
std
add
lahf
mov
xor
rolb
dec
jbe
add
stc
cmovg
cmp
sbb
jecxz
ss
xor
cmpsb
or
icebp
jbe
loopne
leave
push
out
mov
out
imul
outsl
add
daa
push
mov
mov
adc
ljmp
ds
orl
ret
jne
xor
rcrb
pop
mov
sarb
shrl
fstl
sbb
xor
mov
xchg
push
ret
add
mov
mov
push
insl
adc
repnz
rorb
inc
or
daa
ret
inc
aas
andl
push
fucomp
lahf
xchg
popf
sbb
jge
pop
rcrb
call
mov
jne
icebp
addl
cmp
pop
push
scas
sbb
jmp
std
call
in
fs
call
leave
mov
dec
add
sbb
inc
jl
mov
mov
inc
les
xchg
sub
jno
inc
and
fbstp
mov
mov
das
js
pop
cld
movsl
jbe
cmc
and
cli
inc
adc
addr16
cs
push
xchg
out
test
or
mov
outsb
cwtl
out
mov
lahf
cmpsl
pop
shr
adcb
adc
test
mov
mov
push
and
decl
adc
push
lods
dec
fistpll
cmpsb
push
cs
hlt
aad
jg
jmp
sub
or
rcrb
out
cmp
notb
outsl
add
adc
and
mov
loopne
sahf
out
dec
mov
sub
sti
mov
or
jb
dec
stos
cmp
and
loopne
cmp
add
mov
clc
lcall
dec
jae
lahf
add
xchg
sbb
cmp
aas
or
mov
rorl
push
inc
loopne
out
mov
out
sbb
mov
pushl
insb
xor
stc
int
movsb
mov
push
incb
or
ret
je
mov
mov
or
repnz
cmp
and
fimuls
push
movsl
sub
pop
ds
pop
fidivrl
fstpl
push
ljmp
aad
xor
imul
mov
repnz
hlt
or
sbb
cli
stc
and
loope
and
arpl
mov
adc
mov
pop
lahf
push
lahf
mov
ror
hlt
pop
cmp
add
or
dec
fstl
shl
and
pop
pushl
fildll
adc
xor
pop
inc
pop
cwtl
aad
xchg
popf
push
jnp
sbb
inc
sbb
iret
icebp
cmc
nop
mov
xchg
push
pop
test
lret
and
cld
sub
xchg
ja
sbb
nop
jl
adc
ds
jmp
mov
inc
stc
adc
test
adc
js
adc
stos
inc
mov
fucomp
gs
outsl
pop
adc
loop
sbbl
mov
pushl
incb
and
dec
rorl
mov
add
je
outsl
jp
call
inc
sub
inc
sub
adc
iret
mov
test
sub
add
lcall
jg
mov
outsl
fldt
dec
mov
inc
and
push
jp
outsl
aad
popf
dec
ja
incb
lock
insb
je
push
cmpsl
mov
add
dec
adc
outsl
xchg
or
ljmp
call
adc
int3
and
adcb
adc
mov
cld
push
dec
mov
ljmp
mov
cld
test
or
inc
cmpb
xchg
addr16
and
inc
test
mov
jge
mov
add
imul
es
mov
push
lds
mov
pushf
stos
push
mov
outsl
decl
jb
add
aam
inc
das
outsl
into
dec
push
daa
mov
mov
jmp
insl
mov
push
out
aaa
test
add
push
inc
pushf
jg
lahf
ja
aas
aad
fildl
mov
jae
or
pop
jo
shll
mov
jno
jbe
or
or
inc
cld
mov
in
mov
test
loope
mov
pop
dec
jl
dec
jns
outsb
xchg
mov
jne
mov
jmp
dec
cmp
xor
mov
in
jg
dec
adc
adc
jge
sub
inc
mov
into
pop
into
jns
in
clc
pop
sti
mov
sub
dec
pushf
xor
adc
repnz
inc
sti
and
mov
adc
scas
inc
sub
adc
jne
inc
mov
call
add
jg
cmpb
insb
cmpsl
push
adc
les
sub
int
adc
or
dec
xor
nop
add
cmp
push
stos
js
fldl
mov
jnp
push
jne
andb
cmp
imul
mov
scas
xchg
mov
iret
xchg
movl
test
mov
leave
ds
or
inc
mov
xchg
adc
sbb
aaa
fdivrp
ret
pop
stc
mov
rol
rcrl
cmp
lret
cmpsb
repnz
aas
add
push
stos
ss
mov
ud2
sarb
cmp
rclb
incb
or
fisttpll
std
dec
cs
mov
test
filds
mov
inc
and
jg
sub
cmpsb
mov
addr16
test
adc
and
and
sbbl
or
and
into
or
rolb
push
inc
push
ficoms
mov
xchg
into
ror
inc
test
sbb
or
ss
rorb
mov
outsl
or
adc
mov
mov
jge
scas
mov
je
leave
mov
int3
sub
xchg
ss
bound
dec
sub
push
pop
mov
lock
inc
in
and
xchg
lods
stos
sbb
test
test
scas
loopne
test
xorl
movl
aam
add
mov
stos
filds
mov
sbb
repnz
or
sbb
or
loope
sub
in
adc
fstpt
xor
cs
scas
lock
or
pop
cld
push
jo
shl
jmp
lods
xchg
stos
je
test
xor
adc
into
push
fistpl
fcom
jae
pop
call
mov
popf
jp
jno
repz
pop
push
pop
push
cli
jbe
fadds
pop
cmp
ja
xchg
mov
cli
adc
adc
rcrl
ljmp
sbb
aad
cmp
out
cmpsl
push
dec
mov
xorl
add
loope
adc
mov
sbb
mulb
inc
je
pop
add
sub
inc
fistpll
nop
xchg
jne
insb
jg
lret
inc
dec
loope
pushf
jp
dec
filds
aas
xchg
repnz
dec
xor
imul
or
cs
clc
aas
sbb
call
enter
mov
xchg
jnp
and
mov
jg
dec
push
cli
lock
mov
jb
push
mov
adc
mov
loopne
cmp
mov
jle
push
pop
stos
sbb
mov
cmp
addl
adc
jge
xchg
scas
and
push
mov
inc
aaa
add
xchg
fsubrs
fs
lcall
push
pop
xlat
call
es
add
jecxz
push
or
pop
push
lods
outsb
aad
or
mov
loopne
inc
push
outsl
shrl
mov
adc
or
dec
icebp
outsl
mov
daa
into
push
test
stc
outsb
fndisi(8087
jge
push
es
sbb
pop
push
push
adc
popa
ret
outsl
insb
or
add
ficompl
mov
add
stos
mov
dec
mov
jb
mov
push
stos
jg
outsl
xor
popf
cmp
js
jns
aas
andl
push
xor
cmp
and
loopne
push
cmp
jge
or
fsubrp
add
sub
pop
cmc
add
cs
outsb
fnsave
in
dec
lds
das
adc
lds
call
call
jmp
jb
movsl
rcrl
test
popa
fcmovne
sub
push
lea
jae
and
dec
and
mov
sub
adc
iret
cmp
mov
int
fwait
inc
add
fldenv
inc
orl
fisubs
lods
les
cmp
test
mov
mov
push
nop
lahf
iret
and
mov
push
incl
fstps
dec
inc
lret
scas
rcrl
mov
in
bnd
jo
repnz
das
shr
pop
int
orl
jo
mov
cmc
sbb
mov
jle
xor
jo
pop
outsl
cmp
das
mov
push
mov
mov
xchg
das
push
jbe
jno
and
pop
mov
loopne
aaa
ficompl
xchg
push
pop
push
sub
dec
incl
imul
movsl
jg
popf
les
sbb
jb
fbstp
pop
dec
dec
icebp
add
push
loop
ret
pop
orb
pop
cs
addr16
mov
dec
adc
mov
loop
xchg
cmc
test
xor
jecxz
sarb
addr16
mov
jno
add
les
fdivrs
mov
push
and
mov
idivb
push
xchg
or
fistpll
mov
jp
sbb
adc
sarb
outsl
std
mov
xchg
xchg
mov
jmp
sbb
test
div
and
cmp
cmc
test
sub
sbb
addb
aaa
lds
sub
jp
xchg
ja
lret
dec
push
fwait
mov
sbb
pop
jns
repz
fisttps
popa
inc
lds
or
mov
mov
in
subb
xlat
rcll
in
incl
sbb
mov
cltd
loop
stos
mov
inc
iret
rcrl
lock
mov
xchg
adc
dec
mov
popa
out
cmp
push
aas
adc
adc
jbe
lods
pushf
sti
mov
dec
adc
add
sub
xor
push
sub
rcll
std
inc
js
jno
xor
pop
or
xchg
mov
xchg
aas
imul
pop
ss
int3
sarb
loope
lods
add
pusha
mov
lea
dec
inc
sub
xchg
addb
aam
pop
fcoml
pop
addr16
das
insl
sub
push
sbb
insl
add
ljmp
sbb
shll
fisubrs
leave
xor
jnp
jbe
jl
dec
call
push
push
dec
out
adc
fstp
js
pop
jle
jnp
xchg
or
ljmp
cmp
pop
mov
test
push
sub
mov
jbe
adc
jnp
aaa
fidivl
pop
ss
xor
push
aad
push
sti
loope
and
mov
leave
stos
dec
xor
ljmp
xchg
pop
mov
cmpsb
push
stos
pop
cmpsb
ss
icebp
jg
and
adc
lahf
jo
mov
push
xchg
lret
mov
ja
ficoml
pusha
xor
cmp
int3
inc
jns
pop
dec
mov
sahf
add
ljmp
test
pushf
in
push
enter
inc
push
flds
icebp
ret
loop
pop
in
fwait
jp
sub
dec
je
adc
push
push
std
movsl
bound
pop
fidivs
or
decl
jbe
and
cmc
push
xchg
pusha
loopne
sarl
push
pushf
mov
cli
pop
fidivrs
adc
test
addr16
adc
dec
add
sub
mov
out
call
and
sub
aaa
pop
fiaddl
xchg
mov
paddw
outsb
mov
mov
fdivrl
ja
fdivs
ret
mov
ficompl
roll
in
loop
pop
jp
or
push
bound
jmp
jle
jbe
aad
clc
in
dec
in
loopne
aad
push
in
movl
loopne
aas
pop
add
mov
in
sub
fstpt
scas
pusha
adc
insb
mov
cmp
push
mov
pop
sbb
je
arpl
mov
inc
inc
negb
jns
xor
or
xchg
pop
jg
sarb
repnz
int
push
shll
adc
cmp
adc
mov
jg
xchg
cli
outsl
aad
test
cltd
or
mov
sti
pop
repnz
or
dec
rcl
add
test
mov
cld
adc
orl
jmp
dec
sti
shll
insl
loope
jbe
mov
mov
cmpsl
jmp
stos
clc
dec
adc
xor
cld
lret
and
into
or
push
aaa
sti
shlb
sti
inc
das
rol
or
lock
adc
hlt
sub
jg
cli
push
orl
cmp
outsb
add
cwtl
sub
call
pop
fstpt
scas
nop
adc
cmpl
jnp
roll
jno
sbb
adc
pop
shlb
stos
sub
jecxz
dec
cmp
rol
or
or
movsl
inc
hlt
inc
sub
ret
mov
cs
jge
jo
pop
outsl
jg
lret
arpl
in
xor
std
jno
mov
hlt
adc
aaa
inc
call
ret
or
adc
imul
lahf
mov
and
aaa
int
xor
out
das
xor
mov
scas
or
aas
sub
insb
in
mov
cltd
mov
inc
inc
jae
jae
mov
jg
xchg
bound
test
mov
ss
add
xlat
mov
test
out
pop
lods
mov
sbb
ja
outsl
fldt
in
or
push
in
les
movsl
mov
inc
cmp
inc
idivb
jmp
pop
mov
xor
test
lret
jmp
addb
std
inc
pop
adc
lea
rcrl
ret
mov
dec
fidivl
insl
orl
inc
subb
pop
lods
mov
test
jnp
andb
or
cmp
xor
adc
cmp
push
data16
test
lfs
shrl
cld
add
jne
sub
je
shrl
popa
fstpt
sub
mov
lock
or
jg
imul
jo
mov
fmulp
add
sub
mov
pop
popa
mov
shl
inc
je
mov
xchg
inc
xchg
je
xchg
dec
hlt
ret
ja
jmp
add
arpl
xor
sub
fucomip
mov
and
rsqrtps
jle
das
insb
addr16
inc
mov
dec
xor
stos
sbb
adc
roll
mov
and
cmp
and
jecxz
scas
mov
xor
rclb
push
jbe
das
cmp
mov
or
sbb
dec
aam
sbb
loope
pushf
incl
fiadds
jg
lsl
or
popf
xchg
mov
in
popa
rolb
mov
pop
mov
test
loope
push
out
sti
push
jg
xchg
fidivrs
enter
mov
pop
or
adc
xor
inc
jo
sub
jns,pn
test
pop
movsb
mov
mov
add
jmp
xor
orl
rolb
mov
fdivrs
out
push
inc
sub
and
mov
cmp
stos
into
movsb
push
lahf
mov
sub
jnp
loop
mov
inc
lods
clc
jb
pop
outsb
mov
sarb
ret
sub
or
mov
cmp
fsubp
popa
xor
lret
ret
movsb
or
mov
adc
dec
test
mov
das
pop
cld
pop
fcomps
mov
xor
es
mov
stc
add
ljmp
je
mov
push
cwtl
add
decl
jns
adc
mov
push
movb
loop
lock
aad
jle
jb
mov
das
sub
add
pop
mov
jmp
xchg
mov
fldt
dec
xor
imul
mov
and
inc
jmp
loopne
aad
inc
ret
test
bound
mov
cmpsl
xor
mov
fsubrp
stos
pop
adc
sub
js
stos
dec
outsl
rclb
je
jecxz
cmp
xchg
das
aad
fwait
aas
dec
ja
xchg
adc
push
ret
loope
ret
pop
cwtl
inc
test
sub
aas
add
and
xor
adc
adc
jmp
jmp
es
push
mov
pop
push
pop
lds
adc
cwtl
das
mov
loop
jnp
sarl
cmpsl
push
popa
pop
jp
divb
mov
xchg
jge
rclb
mov
jecxz
dec
icebp
ret
mov
cmp
clc
sbb
cld
outsl
pop
mov
cs
adc
or
mov
adc
hlt
mov
enter
mov
inc
or
sbb
gs
xor
xor
orb
insb
int
xor
stos
fcmovnu
shl
jnp
repnz
cmp
sub
pop
jle
mov
cmp
dec
nop
scas
mov
hlt
stos
xchg
jno
push
push
jl
pusha
and
pop
push
mov
xor
xor
imul
orb
movsb
dec
das
aam
mov
lock
lret
icebp
jl
scas
mov
iret
sbb
inc
shl
bound
lods
outsb
bound
inc
bound
or
imul
call
or
mov
lods
popf
jmp
testb
inc
hlt
ret
sbb
inc
lcall
xchg
push
loope
jecxz
and
and
or
arpl
leave
mov
into
or
inc
sbb
pop
popf
data16
lcall
xchg
mov
mov
dec
test
in
xor
sbb
mov
sbb
xor
das
pop
or
decl
pop
push
jb
js
sahf
pop
sub
test
adc
add
sti
pushl
lock
add
popf
mov
jp
mov
pop
sbb
or
out
push
loope
movsl
or
arpl
mov
pushl
orl
movsl
pop
mov
sbb
scas
jge
xchg
xchg
mov
and
mov
add
cmpsb
or
lods
push
test
and
lock
imul
xchg
es
mov
outsl
dec
pop
push
jecxz
sbb
in
outsb
rcl
xchg
cmp
xor
daa
inc
pusha
sbb
push
rol
fs
sub
inc
xchg
inc
icebp
dec
das
xchg
movsl
xchg
shlb
inc
inc
mov
push
ss
mov
aas
xchg
xlat
idivb
sbbb
add
jge
inc
dec
std
push
mov
out
xchg
jo
push
jecxz
mov
out
jg
dec
inc
ds
or
sub
cmpb
push
add
mov
in
xchg
or
nop
mov
cmp
mov
xchg
mov
cmpsb
cmp
repnz
adc
test
outsl
xchg
mov
nop
imulb
jbe
ret
insb
test
or
sbb
sub
aad
imull
lahf
nop
pusha
fisubs
and
mov
or
orl
movsl
cmpsb
mov
ret
dec
xor
pop
call
cmp
arpl
daa
je
scas
mov
inc
inc
imul
je
and
xchg
or
mov
adc
mov
stos
fwait
pop
xlat
pop
xchg
mov
pop
pop
pop
push
out
adc
jecxz
sbb
shrb
movsb
mov
xor
lock
pop
mov
in
xlat
neg
dec
adc
addl
pop
dec
cwtl
fwait
test
clc
jg
xor
push
pop
fwait
pusha
enter
mov
sti
jo
jbe
faddl
ret
jmp
xchg
jo
sti
push
std
add
in
adc
or
test
fs
bnd
or
mov
das
popa
aad
xchg
fiadds
adc
enter
roll
sbb
call
nop
add
mov
bound
mov
lea
call
cmc
sub
cmp
xchg
mov
mov
jle
lock
jle
and
xchg
ds
adc
cli
das
mov
frstor
adc
mov
les
xchg
lret
lahf
aas
xlat
dec
fisttps
ja
icebp
lea
dec
fdivs
mov
jne
loope
std
daa
pop
jmp
cmp
out
jecxz
adc
adc
mov
fldcw
push
adc
mov
xor
pop
loopne
icebp
test
dec
push
xchg
daa
add
clc
loopne
bound
ljmp
pop
mov
sarl
and
dec
dec
mov
push
cwtl
cs
fidivrs
mov
mov
enter
add
aam
push
sub
mov
out
push
lock
push
aad
test
sub
ljmp
mov
out
idivl
mov
fstpt
mov
out
pop
sbb
sti
sub
das
jae
inc
addb
sub
cld
dec
lock
test
pop
jmp
fiadds
lds
add
mov
movsl
and
lret
ja
loopne
stc
xchg
dec
iret
out
insl
jmp
pop
cmp
adc
pop
sub
ret
je
cmpb
enter
push
or
gs
mov
lea
sub
rorl
ja
xchg
mov
mov
in
ds
jp
sbb
dec
and
aas
inc
sub
sbb
jg
jae
jmp
iret
dec
xchg
xchg
push
jecxz
mov
fstpl
mov
aaa
inc
jmp
mov
popa
cmp
inc
dec
dec
pop
jecxz,pn
and
xchg
rcrb
pushf
mov
fistpll
pop
ljmp
fidivrl
nop
sahf
not
ja
adc
lds
loop
adc
mov
push
es
push
test
test
int
inc
fmul
pushf
or
call
sbb
jmp
clc
and
jg
dec
sarl
inc
or
notl
je
cli
dec
cmp
popf
mov
fcoml
cld
add
xchg
xchg
nop
adc
pusha
and
pop
push
jb
popf
lods
mov
fcmovnu
ja
cwtl
inc
rorb
ljmp
fdivr
cmpb
mov
pop
mov
loopne
xchg
loopne
popa
xor
outsl
pop
out
insb
or
add
and
jge
mov
xor
xchg
test
sub
aas
sar
mov
sub
flds
and
and
xchg
mov
shl
ds
cli
jmp
mov
ficoml
and
add
push
dec
clc
test
push
jp
and
xchg
mov
lret
mov
and
sub
ret
aam
xor
ljmp
xchg
adc
in
das
lock
iret
jge
fsubl
loope
rorb
cmpsl
sbb
inc
fwait
sbb
push
mov
or
xchg
cmp
pop
and
jmp
jecxz
cmp
push
imul
inc
jns
push
in
cmp
cwtl
mov
lret
inc
xor
push
ret
pop
cmp
pop
adc
jno
add
mov
mov
and
cmp
enter
pop
pop
mov
pop
add
into
sar
adc
xor
jns
scas
dec
dec
inc
mov
pop
dec
lea
jnp
lea
push
mov
xchg
mov
fdivrp
mov
icebp
jp
fists
aaa
pushf
mov
mov
lods
sbb
cmp
cmp
movsl
fistps
mov
or
add
into
sub
xchg
add
jg
outsl
mov
sbb
lahf
jnp
xor
addr16
mov
fimuls
lods
fsubs
or
pop
adc
cmc
enter
mov
and
pop
lahf
push
sbb
leave
adc
pusha
pop
hlt
scas
incl
add
lret
xor
add
imulb
ja
nop
mov
sti
jmp
mov
mov
outsl
pop
outsl
add
mov
ret
loopne
rcll
pop
pop
gs
dec
fdivrp
inc
dec
and
fsubrl
and
call
icebp
sarl
adc
inc
pop
stc
fsubrs
mov
mov
mov
mov
clc
adc
pop
sub
frstor
xchg
movsl
push
jl
mov
cmp
mov
push
and
dec
dec
or
je
pop
ljmp
xchg
cmp
add
cmp
cs
xor
mov
stos
fwait
inc
cs
rorb
mov
or
fsin
add
inc
ss
adc
sub
lds
fbstp
aaa
mov
addb
mov
mov
add
aam
pop
out
push
and
xchg
and
rolb
clc
ret
loop
xlat
rcrb
test
rol
push
ret
out
aam
cmc
aaa
and
jle
ds
enter
in
pop
cmc
mov
xchg
dec
jl
jmp
outsl
sbb
in
fs
fldl
dec
scas
push
mov
call
inc
rcrb
add
cmpb
mov
fildll
inc
inc
ds
mov
lods
insl
sub
inc
push
sbb
stos
and
rorl
aaa
ficompl
outsl
adc
xchg
insl
cld
inc
sbb
cmp
pop
push
xlat
mov
shlb
imul
sbb
xor
in
or
std
mov
pop
fdivr
cltd
add
test
mov
inc
jecxz
lods
in
subl
dec
mov
or
scas
xor
pop
jg
inc
adc
cwtl
inc
sbb
repnz
les
cld
call
sub
jg
or
jbe
xchg
ja
and
shll
pop
mov
out
xchg
inc
mov
popa
mov
push
dec
ds
pop
lock
lea
lcall
fisubl
adc
xor
adc
add
mov
cmp
mov
je
and
or
out
leave
dec
inc
xchg
shll
xchg
mov
jne
push
in
call
cs
mov
and
aam
mov
pop
inc
pop
inc
std
jmp
test
push
adc
inc
xchg
sub
das
clc
addr16
or
lods
mov
lock
pushf
lcall
jnp
dec
push
fildl
inc
loop
jmp
push
jecxz
adc
push
xor
test
pop
aas
mov
jbe
lods
or
add
clc
rorl
das
or
mov
jo
subb
dec
enter
iret
push
jp
lret
dec
adc
fdivs
pop
cltd
pop
mov
push
mov
subb
or
cwtl
mov
mov
ds
js
fisttpl
outsl
popaw
inc
aas
and
mov
push
imul
mov
jmp
gs
and
inc
dec
jb
jle
inc
mov
or
add
mov
in
icebp
shlb
aas
rorb
mov
mov
xchg
jns
push
das
shrl
mov
xchg
mov
inc
xor
inc
pop
sbbb
test
inc
cmp
mov
xchg
jmp
or
sub
adc
rolb
cmpsb
addr16
mov
out
jbe
test
pop
bound
lahf
dec
test
hlt
popf
ret
inc
mov
aaa
fistpl
test
and
inc
mov
cmp
testl
lds
insb
les
sbbb
dec
lock
add
cltd
xor
sub
push
push
inc
xchg
mov
or
or
call
cmc
lret
xchg
test
inc
and
movups
andl
out
loope,pt
loop
and
xor
lea
les
sub
cwtl
enter
int3
sub
aad
lret
jle
mov
in
xor
pop
loop
and
jne
out
sbb
sub
frstor
inc
out
dec
test
test
cli
dec
jmp
mov
mov
in
shrb
std
jg
push
scas
pushf
adc
int
mov
dec
cmp
sub
fmul
clc
aam
xchg
inc
mov
adcl
leave
adc
aas
cld
push
clc
fldt
push
cwtl
jo
mov
add
push
push
sbb
shrl
clc
scas
mov
adc
call
pop
xchg
push
push
sbb
cmp
sbb
aas
pop
pusha
cld
iret
mov
icebp
mov
mov
std
call
out
out
jne
sbbb
mov
cmp
call
xor
movl
mov
cmc
pop
outsb
mov
aad
cltd
out
aas
adc
inc
mov
push
mov
fildll
mov
inc
mov
pop
or
js
mov
ret
addr16
and
mov
lock
out
fwait
xchg
xchg
icebp
jo
insb
repz
cmp
xchg
or
sbb
dec
lret
insb
inc
push
push
fldl
or
les
cmpsl
popf
inc
jg
jnp
and
xchg
dec
aad
cs
xchg
cmpsb
movsb
outsl
or
addb
cmp
loop
out
sbb
fcmovnb
call
or
cmp
pop
and
inc
sub
adc
jne
push
or
inc
aaa
sub
dec
inc
and
inc
das
sbb
fsubl
call
dec
lds
and
outsb
sub
jg
pop
cwtl
je
cmp
cli
mov
push
add
inc
mov
in
loope
loop
mov
fisttpl
sar
sti
dec
dec
or
pusha
lret
test
or
jbe
sub
add
or
mov
mov
into
lcall
lcall
leave
dec
mov
loopne
fcmovnu
pop
shlb
inc
mov
ret
and
lock
ja
in
jl
aas
mov
jne
mov
push
js
mov
fcmovbe
or
jne
lret
pop
icebp
dec
mov
sti
cltd
test
or
fucompp
sbb
cmp
mov
xchg
dec
mov
xor
cmp
jo
out
ljmp
pop
lahf
iret
test
iret
shrb
stos
jns
jb
xchg
leave
sub
xor
adc
cmpsl
mov
and
int
inc
xchg
popf
jl
in
ss
lcall
mov
out
cltd
mulb
stc
into
sarl
push
mov
loopne
lock
or
or
inc
pop
jmp
jl
push
xchg
add
push
sbb
jb
xor
aaa
fnsave
adc
pavgb
dec
xchg
sbb
add
rol
scas
in
cld
outsl
mov
and
inc
add
les
mov
call
add
shll
fsts
loop
cld
lock
xor
test
and
xor
in
lahf
adc
aaa
dec
dec
sbb
lea
sub
ss
stc
js
jno
loop
and
lods
fidivl
outsl
jb
popf
add
sub
mov
js
mov
lea
cld
das
sub
test
pop
adc
pop
and
sbb
pop
movsl
nop
je
cmc
adc
sbb
push
xchg
add
cmpsl
ljmp
xor
mov
push
xchg
ret
or
mov
xchg
ss
adc
and
mov
xor
in
mov
dec
sub
or
std
movsl
mov
cmp
push
and
cld
push
jg
dec
out
cmp
and
jne
push
or
test
outsb
fsubp
sti
mov
mov
scas
int
mov
xor
test
roll
jns,pt
sub
test
ret
sahf
loope
mov
daa
jmp
or
or
push
jg
test
add
cmp
lea
push
add
sbb
jmp
adc
dec
jecxz
test
mov
cmpb
mov
xchg
xor
adc
aam
cmpsb
jbe
dec
sbb
adc
xor
jb
inc
lret
adc
xor
aam
mov
sub
cmpsb
pop
pop
mov
scas
stos
leave
jmp
mov
iret
xchg
clc
or
pop
push
lock
inc
xchg
mov
mov
xor
repz
push
adc
ss
xor
js
sbb
inc
sbb
jg
stos
adc
shrl
pushf
or
and
movsl
or
enter
lock
std
jge
add
xchg
call
movsb
and
rolb
push
fs
xlat
jbe
cmpl
jmp
pop
das
pop
inc
rcrl
sub
das
mov
inc
sbb
popa
lock
gs
mov
inc
in
idiv
cmp
mov
nop
scas
or
push
mov
xchg
mov
notb
inc
aaa
xchg
subb
or
sbb
pop
loopne
pop
out
xor
xchg
ficoms
pop
or
add
mov
repz
icebp
or
add
xor
jb
inc
mov
adc
pop
fldcw
mov
mov
fsqrt
or
repnz
pop
je
cs
xorb
fimull
mov
adc
inc
or
out
xor
andl
pop
dec
mov
jge
jns
lods
xchg
add
pop
mov
push
jbe
mov
pop
pop
xor
jae
lods
fstpl
es
stos
gs
stos
or
lcall
inc
movsl
push
cli
fnstsw
loop
mov
inc
cmp
std
insl
movsl
mov
push
mov
stos
repz
ljmp
jno
and
cmp
loop
outsl
stos
shll
and
inc
sub
pop
mov
and
xchg
cltd
push
arpl
jg
adc
and
pop
dec
fcmovu
movsb
punpckhbw
ss
lods
inc
js
sbb
jae
es
add
jne
cmp
in
clc
out
aaa
inc
es
adc
ret
mov
fisttps
faddl
loop
push
ljmp
ret
addl
test
push
xchg
andl
pop
loop
fistl
test
jae
push
pop
lock
jg
idiv
xchg
cld
enter
test
mov
daa
and
out
xchg
fcomps
sbb
cmp
lods
push
inc
lea
mov
aam
dec
outsl
out
lods
pop
stos
je
popa
stos
and
push
inc
xchg
outsl
outsl
mov
pop
mov
xor
ret
add
cmp
je
aas
movsb
lods
clc
and
jmp
enter
popl
pop
mov
inc
mov
mov
outsb
lahf
inc
cmpsl
xchg
pop
std
testb
add
push
aad
out
adc
stos
pop
mov
ret
es
push
and
push
cmp
clc
aaa
mov
dec
shlb
pop
jo
rolb
in
pop
mov
jecxz
push
mov
fcmovu
jecxz
mov
xchg
cli
add
add
push
stc
fs
jg
jg
orb
cmp
pop
inc
pusha
iret
add
shrl
xlat
adc
pop
les
inc
adc
add
popf
js
cmp
repz
inc
dec
cld
jno
adc
cmp
imul
pop
jl
or
std
cltd
add
lods
xchg
or
in
mov
or
dec
adc
loopne
pop
add
lods
incb
sub
push
scas
addl
call
push
and
loop
jns
das
inc
addr16
cmpsb
and
clc
pusha
xchg
aas
mov
mov
bts
popa
jp
push
sbb
dec
sub
xchg
aaa
ret
std
xchg
cmp
xor
loop
xchg
push
shll
dec
sqrtps
jl
mov
bound
fstp
or
mov
mov
inc
pop
movsl
int3
push
push
pop
test
xor
pop
jg
cmc
adc
lret
das
ljmp
fucomi
jmp
insl
das
and
out
pop
rclb
cmp
out
lea
add
or
jg
inc
jmp
pop
xorl
test
enter
xor
push
lock
mov
inc
jno
ret
jecxz
ret
jno
lds
dec
leave
xchg
rcll
sar
add
mov
push
inc
push
outsl
pop
pop
inc
fistpll
iret
call
push
das
cld
mov
aad
pushf
pop
fadds
dec
mov
out
ljmp
mov
pop
mov
loope
mov
adc
in
mov
cli
idivb
cwtl
xchg
das
or
adc
or
jno
inc
shlb
imul
gs
mov
in
sub
add
popa
pop
rclb
mov
cwtl
addb
ljmp
pop
ret
pop
mov
imul
mov
sti
pop
push
and
imul
mov
inc
test
test
aaa
clc
mov
mov
cmpsl
sbb
lret
andb
mov
dec
mov
mov
cmpsl
int3
roll
pushl
push
mov
xchg
xchg
pusha
mov
ret
clc
mov
stos
inc
xor
push
scas
dec
clc
or
enter
in
in
inc
cld
add
fcomps
sbbb
in
push
cmpsl
roll
push
std
ja
lock
sub
inc
xchg
mov
inc
add
xlat
mov
fucomi
loopne
loope
jecxz
test
dec
xor
pop
test
clc
out
adc
in
mov
adc
and
sbb
enter
jecxz
or
jo
popf
inc
dec
push
orl
aad
push
sbb
mov
fcomip
stos
loop
push
cltd
dec
les
pop
adc
pop
xchg
inc
mov
jg
or
shll
pop
inc
adc
and
ror
xor
icebp
ds
fstps
add
push
mov
outsb
sub
mov
xchg
push
push
insl
fidivrs
cld
fisttps
clc
add
sbb
cmp
outsb
outsb
pop
loop
call
in
scas
loope
mov
sub
iret
dec
sbb
sub
mov
mov
in
mov
in
mov
dec
mov
cmp
out
ficoms
push
mov
mov
jmp
pop
js
icebp
sbb
push
mov
jb
hlt
jmp
cmp
call
or
push
flds
fstps
lods
push
daa
xor
sarb
push
or
lods
fdivrs
js
inc
insl
lahf
mov
pop
in
pop
xlat
pop
dec
or
aaa
pop
xchg
inc
jmp
add
rcll
xchg
ljmp
sbb
cwtl
popa
and
lcall
cmp
rolb
jo
pop
fcmovne
test
in
pop
sbb
add
mov
lea
popf
jb
outsl
shll
mov
mov
xchg
inc
jl
push
mov
sbb
xrelease
xor
sbb
sub
dec
insb
adc
cld
dec
cld
pop
shrb
lock
aad
inc
ds
and
testl
and
rolb
pop
jno
outsb
sub
jl
stos
call
cmpsb
scas
jmp
xlat
fistps
enter
lahf
adc
psubq
or
xor
cli
mov
xor
and
mov
xchg
or
out
div
test
stc
lcall
call
sub
adc
iret
fiaddl
shlb
xorb
cli
sbb
mov
or
and
int
sub
push
icebp
xchg
sub
call
repz
aam
cmpsb
cmp
call
movsb
jne
sahf
ret
pop
or
mov
pop
fs
and
cs
and
mov
outsb
in
and
idivl
fs
add
push
ret
xor
ss
mov
add
sbb
add
cmp
leave
sbb
lock
fsubrl
and
shll
sub
fnstsw
out
in
pop
inc
in
sub
shlb
shlb
cltd
into
cmp
push
sbb
stos
aad
or
lcall
push
add
outsl
mov
popa
mov
add
mov
pushf
mov
pusha
in
xor
or
outsl
sahf
adc
lds
insb
shll
dec
outsl
aad
push
pop
repnz
dec
ljmp
jle
ret
adc
arpl
ret
call
fldt
cmpb
cmp
mov
or
inc
iret
scas
popf
shrb
fidivrl
lock
dec
ret
add
shl
dec
or
loopne
jg
jge
jle
rclb
pop
call
jne
mov
clc
xchg
out
and
test
add
pop
mov
lock
mov
mov
ss
shlb
mov
outsl
mov
scas
cmpsb
dec
jnp
sbb
push
movsb
lods
mov
mov
and
xchg
inc
fst
fbld
or
call
loope
inc
enter
stos
push
ret
dec
inc
lods
fildl
jg
mov
sub
or
int3
lds
fistps
pop
push
and
fdivrl
mov
leave
cmc
and
adc
xchg
pushf
popa
addl
lahf
pop
lea
pop
mov
sbb
add
pop
call
mov
fstpt
fsubl
subl
xchg
and
jl
and
mov
dec
push
and
adc
mov
ret
mov
pop
fisubrs
lret
mov
js
push
loop
imul
pop
adc
mov
dec
gs
icebp
cwtl
mov
in
xchg
push
add
pop
push
sub
je
pop
jge
inc
push
stc
call
dec
mov
mov
loopne
inc
or
xlat
push
cwtl
incb
mov
adc
je
cmc
adc
add
mov
scas
cmp
cmovb
inc
mov
das
mov
cmp
pushf
sub
cmp
pop
mov
add
bound
inc
aam
cs
push
shl
movsl
jge
inc
scas
jp
outsl
call
mov
push
rclb
call
cmp
inc
xchg
cmp
xchg
xor
push
push
lock
inc
jecxz
call
jno
loopne
push
pop
cmpsb
or
fs
mov
pop
cli
add
xchg
hlt
loop
push
inc
mov
mov
ficompl
xchg
or
dec
add
test
or
or
std
es
and
inc
jno
ja
xor
out
xchg
scas
int3
ss
add
lcall
sub
ja
xchg
add
insl
lods
sub
cs
insl
test
stos
pop
sarl
enter
vmovapd
push
into
lahf
adc
push
lahf
jle
js
add
loop
push
aad
sub
into
sbb
xor
sti
popf
pop
push
rcrl
lcall
loope
test
jns
jmp
out
cmpl
nopl
pop
fdivrl
cmp
in
aam
repnz
lods
pop
mov
std
cmp
xor
jb
sbbl
bound
clc
ljmp
call
aas
xor
mov
dec
pop
xor
xchg
loope
loopne
sbbl
leave
shrl
sub
add
xchg
lcall
cmpsb
cwtl
cli
outsl
jb
sub
shll
jge,pt
das
mov
add
inc
imul
stos
test
mov
aad
pop
aam
mov
dec
xchg
lds
adc
ss
dec
and
pop
iret
push
out
jp
std
out
jo
mov
sahf
mov
fwait
push
movsl
loopne
scas
or
jbe
add
pop
outsb
aam
add
mov
dec
jnp
movsl
pop
mov
fadds
or
mov
sahf
imul
movsb
nop
xlat
adc
jp
loopne
push
fnstsw
es
lods
dec
lock
and
dec
add
xor
aaa
sbb
push
aam
or
mov
push
popf
inc
in
add
out
xchg
jle
pop
adc
cs
and
jl
adcb
bound
pusha
jnp
cmc
imul
or
lds
adcb
nop
adc
loope
push
in
dec
sub
jns
sub
push
adc
jmp
mov
call
ljmp
cwtl
cmpsl
shll
outsb
mov
mov
push
shll
rorb
in
out
jbe
inc
lds
or
sti
push
movsl
ljmp
push
mov
and
push
cmc
jmp
mov
popf
push
imul
into
mov
shr
dec
inc
xor
cmpsb
fimuls
push
fdivr
jbe
xchg
xlat
mov
sub
jecxz
push
sbb
inc
fwait
aam
xor
push
and
cmp
push
scas
fidivrs
sub
jae
adc
andb
mov
mov
mov
add
mov
add
orl
push
in
sbb
sbb
mov
add
dec
bound
and
sbb
push
cld
es
add
and
pop
sub
call
sbb
push
fisttpl
and
mov
jecxz
pop
lea
out
adc
popa
loopne
xchg
push
cld
and
push
stos
jp
sub
or
lcall
stc
fcmovu
push
and
nop
pop
jg
add
test
sar
xchg
and
insl
imul
movsl
or
dec
das
push
mov
ljmp
pop
jns
cld
scas
pop
dec
mov
or
int
lcall
lahf
pop
jb
mov
fildll
xor
inc
pusha
hlt
add
rorb
jge
call
test
addr16
and
outsb
jp
adc
out
xchg
loope
orb
idiv
push
aaa
push
testb
add
sbb
adc
loopne
outsb
mov
clc
and
xchg
push
cwtl
call
jb
cmpsl
pop
pop
push
test
mov
add
push
out
pop
les
jns
push
leave
mov
mov
inc
loope
dec
rcr
or
cmp
fisubrl
mov
xor
or
mov
fstpt
jbe
loop
jno
and
movsl
insb
adc
pusha
pop
enter
sbb
mov
and
sbb
xchg
adc
xor
adc
stc
pop
cmp
mov
lds
cmpsb
into
inc
int
cmp
push
inc
pop
inc
movsb
jmp
aaa
mov
ss
ficoms
adc
jge
add
arpl
or
pop
or
outsl
fwait
mov
pmuludq
repnz
pop
adc
ficompl
cli
ds
frstor
push
movsb
jo
mov
mov
icebp
pop
dec
add
fs
mov
lods
cmp
and
arpl
test
inc
sbb
sub
pop
mov
cmp
das
adc
mov
jge
in
lods
pop
cli
jbe
repnz
xor
adc
lcall
std
lea
pop
ret
rcll
push
mov
mov
imul
xchg
mov
xlat
push
inc
das
fcmovb
movsb
sub
jl
xchg
sbb
leave
push
jbe
pop
aam
push
icebp
or
jg
or
cmpsb
js
jle
aad
jbe,pt
call
or
jge
es
xor
inc
push
sbbb
call
cmp
adc
xchg
out
nop
jl
push
fwait
xchg
out
pop
std
jle
scas
cwtl
mov
jle
sbb
popa
mov
das
dec
mov
addb
jbe
pop
mov
aaa
loopne
push
pusha
sub
cld
in
fcmovnb
aas
repz
sub
mov
pop
clc
xchg
outsb
arpl
adc
leave
xchg
mov
push
mov
mov
aaa
or
test
and
add
pop
push
lods
cmp
mov
in
movsl
loopne
xor
fwait
inc
or
mov
jne
sub
testb
adc
incb
and
mov
aad
mov
stos
leave
and
fidivs
cmp
decl
pop
push
push
clc
hlt
cwtl
sbb
add
fstpt
inc
sub
and
dec
pusha
stc
call
scas
and
xchg
pusha
push
dec
into
icebp
jg
pop
and
outsl
inc
insb
pop
orb
cwtl
cld
sar
mov
pop
or
cmp
dec
pushf
cs
inc
and
mov
mov
and
in
in
les
arpl
ja
sbb
inc
cmp
scas
icebp
scas
pop
jo
push
insb
mov
leave
mov
cmp
cltd
bound
xchg
mov
adc
gs
jno
cwtl
stos
fdivl
push
adc
xchg
cmpsl
jb
ficoml
cmpsl
and
push
insb
pushf
hlt
jo
xor
inc
nop
inc
aaa
jle
mov
xchg
inc
mov
bound
add
fbld
push
in
in
les
adc
int
aam
outsb
and
add
inc
adc
mov
mov
fistps
pop
rorl
lock
sar
push
inc
push
add
mov
lret
in
das
stos
mov
and
jp
push
lret
loope
ret
inc
jne
lcall
rorl
pusha
sub
inc
push
lds
or
inc
push
adc
mov
addr16
and
inc
pusha
or
std
fildl
xor
adc
mov
cltd
add
out
cmp
jmp
roll
jmp
stos
mov
push
insl
inc
movsb
dec
ret
sar
push
mov
outsl
mov
and
sub
in
mov
mov
aam
or
add
enter
adc
jns
cmp
mov
aaa
dec
lahf
push
orb
std
jmp
insl
movsl
pop
push
cli
sbb
xchg
cmp
pop
mov
fldenv
jno
xor
add
jae
int3
sub
add
outsl
jg
aam
sub
pop
mulb
subb
push
dec
inc
xchg
leave
imul
loop
int
lock
iret
sbb
sbb
jmp
pushf
ja
ret
sub
add
mov
icebp
mov
jnp
sbb
dec
jmp
jp
pop
xlat
xlat
das
cld
pop
xor
jg
xchg
sbb
mov
mov
xchg
and
push
mov
pop
rolb
mov
mov
popa
mov
lcall
and
sti
fstpt
dec
sbb
and
sub
sbb
repz
add
pop
mov
sub
pop
fcoml
repz
dec
pop
mov
loope
mov
cltd
std
dec
lods
adcb
inc
dec
xchg
decl
outsb
das
aad
repnz
mov
in
push
and
cmp
pushl
sbb
push
mov
stc
int3
lcall
add
ss
mov
and
mov
icebp
in
sub
sti
xchg
cmp
std
nop
add
xchg
test
clc
inc
rclb
jno
fiaddl
mov
cmc
lods
daa
mov
les
leave
sbb
dec
imul
dec
js
leave
mov
cmpsl
add
test
push
cmp
and
or
sub
in
inc
jle
or
xor
push
outsl
xchg
inc
push
pushf
xchg
mov
and
and
mov
stos
push
icebp
decl
ret
test
les
sub
mov
mov
inc
sub
add
push
test
test
rcr
lods
divb
inc
pop
dec
ret
ds
xchg
sbbb
or
or
pop
xor
pop
xlat
xchg
dec
test
stos
loopne
sbbb
or
push
aam
or
clc
inc
adc
dec
stc
addb
imul
cmovno
inc
imul
mov
lret
rclb
or
test
and
jo
xor
insb
pop
fists
push
rcll
int
add
sub
pop
push
mov
adc
mov
decl
and
cmpb
mov
inc
mov
cmpsl
out
push
add
and
ret
jmp
add
cltd
mov
jge
or
or
inc
and
mov
call
jb
jmp
gs
push
fldenv
add
cmp
test
or
jge
mov
fisttpl
mov
push
add
pop
jns
mov
movsl
cmp
jnp
lea
dec
mov
adc
pop
add
sbb
pop
push
jp
and
das
cmc
push
in
frstor
inc
inc
dec
adc
pop
or
add
in
fisttps
cmp
fldcw
sbb
mov
push
mov
sub
or
push
icebp
push
jmp
xchg
outsl
xchg
or
or
decl
repnz
jmp
jecxz
lock
inc
cmp
cmc
cmpsb
loop
lods
incl
repz
push
cmp
and
sbb
sbbb
mov
push
mov
enter
je
or
rorl
pushw
dec
or
mov
call
mov
push
clc
call
pop
mov
and
dec
out
lock
stos
mov
add
mov
stc
sbb
lds
pop
xchg
lock
lds
and
pop
mov
ja
movb
mov
lock
cmp
jnp
outsl
or
push
cltd
arpl
ds
inc
loopne
mov
add
ja
rcrb
rolb
dec
cmp
loopne
jnp
test
in
sub
cmp
push
push
mov
je
sub
xor
ljmp
ret
sub
mov
jp
dec
mov
stos
cmp
adc
push
inc
push
mov
sbb
shlb
push
cmp
pop
jl
addl
fmul
xchg
sbb
lahf
les
ret
testb
lods
test
sub
das
sarl
inc
cmc
cmc
out
push
in
and
sti
enter
popf
cmpsb
sub
mov
sbb
movsl
fcomps
scas
lcall
and
call
or
jge
sbb
fadd
nop
adc
rclb
out
jg
call
clc
aas
sahf
jae
lods
mov
sbbl
popf
and
sar
clc
or
aam
out
negl
push
xchg
pushf
aam
sub
pop
xchg
or
mov
shr
or
lahf
cmc
outsl
cld
jg
or
lret
push
fistpll
pushl
lahf
in
mov
xchg
clc
lds
fcomps
nop
xchg
push
ja
ja
adc
fcom
adc
inc
arpl
push
test
daa
cmp
jnp
mov
sbb
sahf
pushf
sbb
jg
stc
jno
mov
add
rcll
mov
dec
inc
dec
addb
pop
pop
cli
lea
sub
es
add
pop
push
push
negb
cmpsb
jle
inc
sarb
add
pop
or
push
jg
pop
cmp
adc
pop
jne
test
jnp
cmc
vmulsd
adc
roll
sub
loope
cmc
das
out
jp
test
and
lea
test
cmp
mov
add
inc
aam
fiadds
xchg
mov
xchg
jo
push
xchg
sub
cmp
xchg
outsb
fists
sub
lcall
xlat
insb
aaa
fisubrl
or
adc
aam
fildll
in
push
mov
enter
sbb
cs
mov
cmp
lods
sub
std
aaa
cld
je
mov
push
data16
popa
fadds
clc
divb
sbb
adc
or
mov
add
add
std
sub
inc
sbb
sbb
sub
pop
xor
decl
and
xchg
or
xor
jecxz
or
jg
xchg
and
ljmp
adc
xor
lcall
add
sbb
rcrl
pop
dec
sbb
rclb
aad
sub
inc
jo
sti
push
jne
xor
pop
mov
lcall
das
cmp
mov
and
xchg
dec
mov
cmp
sahf
xchg
adc
clc
xchg
loopne
rcrl
push
xor
in
and
add
cmp
xor
cmc
pop
js
push
rcr
das
sarl
mov
mov
xchg
mov
aas
adc
jo
in
and
add
push
test
xchg
lcall
decl
sub
mov
ljmp
bound
les
ljmp
push
xor
fcmovnu
or
inc
arpl
push
and
fnstsw
cmp
jecxz
xor
nop
or
stos
lcall
roll
sahf
data16
lret
lahf
and
dec
jne
aad
adc
insl
jns
push
mov
dec
pusha
outsl
mov
fcoms
xchg
pusha
pop
jne
add
add
pop
pop
hlt
mov
outsl
mov
pop
xchg
xlat
mov
push
and
inc
sti
inc
mov
push
jp
cwtl
jl
ja
addr16
sbb
push
and
enter
sub
adc
sahf
pop
in
or
jmp
jbe
pop
test
and
in
push
dec
adc
push
mov
clc
fildl
fidivl
fcmovbe
stos
push
out
dec
jmp
fnstsw
and
outsb
mov
lcall
mov
aad
ret
or
iret
add
sahf
stc
cwtl
int3
cmp
test
add
in
jmp
or
cmc
or
in
into
inc
mov
mov
xchg
cmp
sub
aam
insb
xor
push
xchg
xchg
std
mov
test
repz
jge
lahf
xlat
int
cld
insl
or
jg
movsl
scas
cmp
lea
mov
mov
out
arpl
jg
push
lret
dec
call
jg
and
mov
mov
or
cmp
sub
inc
cmp
dec
pop
fcoml
sbb
cmp
jge
xchg
cmp
lea
mov
push
and
mov
sub
cli
inc
or
aam
mov
mov
jae
syscall
js
or
mov
and
inc
and
push
scas
test
pop
add
hlt
push
mov
lea
leave
pop
mov
je
jb
pushf
enter
outsl
push
jns
sub
subl
iret
xor
ret
mov
add
orb
testl
pusha
and
xchg
jbe
inc
add
adc
mov
or
insb
mov
xor
insl
lock
clc
mov
shll
and
nop
jno
sbb
sub
xchg
loope
int
repz
and
incl
or
lret
int
push
aaa
pop
adc
mov
cltd
xor
ja
xorl
or
push
dec
inc
add
sbb
roll
sahf
pop
cmp
fdivrs
jg
xchg
fmull
cltd
outsl
jg
mov
nop
addr16
sbb
stc
or
sbb
jmp
and
cmpsl
sub
pusha
pop
das
inc
or
call
popf
rorb
push
lahf
push
rcr
xchg
jns
mov
ret
mov
out
pop
or
jbe
sub
xchg
lods
add
sbb
add
std
push
xorb
or
inc
inc
in
jl
pop
jb
les
insl
mov
mov
sub
clc
sbb
pop
inc
pop
add
sbbl
dec
lods
movsb
xor
cld
icebp
pop
into
arpl
jmp
and
cmp
outsb
js
bound
fs
ret
nop
mov
lods
rolb
fsubs
lea
push
fisttpll
inc
loopne
xchg
cmpsl
rorl
add
out
ss
xchg
mov
test
jmp
das
leave
jecxz
xor
cs
inc
ds
in
mov
lock
insl
adc
nop
cli
sub
in
ret
imul
jmp
inc
in
push
and
std
and
xchg
stos
pop
int
daa
or
call
or
mov
adc
push
mov
out
iret
out
push
rclb
fstpt
push
mov
xor
pop
icebp
sub
addb
in
das
push
dec
ficoms
fdivs
push
pop
pshufd
or
sbb
cld
sbb
dec
pop
adc
popf
jge
aam
xchg
loopne
dec
rcrl
sub
mov
popa
add
pop
dec
dec
mov
add
xor
pusha
jecxz
test
stc
inc
or
pop
cld
jae
movsl
nop
pop
xchg
jp
iret
sbb
inc
jmp
test
inc
cld
cmp
and
xchg
sti
scas
mov
aas
dec
aas
in
sbb
push
leave
jo
std
and
data16
rcrb
clc
cmp
lds
nop
mov
pop
sub
outsb
add
fildll
lds
aas
or
xchg
imul
imul
push
add
lock
pop
mov
mov
cltd
adc
rcrb
fistps
shlb
test
xor
xchg
push
insb
das
mov
out
lods
sbb
dec
int3
mov
inc
sub
mov
pop
outsl
movsl
pop
push
sub
out
inc
je
push
cmc
iret
sahf
inc
out
jnp
xchg
mov
mov
test
xchg
in
sub
xor
add
aaa
stc
and
pop
or
sub
pushf
das
loope
popf
sub
repz
jecxz
inc
xor
push
aaa
pop
test
push
lods
fildl
test
subb
jmp
sub
fdivs
inc
movsl
insl
pop
loopne
adc
pop
push
gs
mov
jno
pop
push
cld
fs
test
jmp
movsb
xchg
mov
pop
or
mov
jg
pop
xchg
adc
mov
aad
push
fstpl
mov
es
push
mov
mov
ret
mov
pop
in
push
and
jp
sbb
fucomip
add
adc
mov
loopne
cs
jle
lds
imul
mov
add
adc
push
push
cmp
mov
and
mov
sbb
push
dec
pop
in
movsb
clc
push
cs
rorb
inc
mov
orl
cmp
into
test
in
fildll
out
and
cmpsl
lcall
lds
cmpl
jbe
pop
mov
js
ss
sbb
inc
jl
nop
dec
popa
mov
pop
stc
insl
cmp
call
movsb
lcall
dec
clc
mov
fcmovne
pop
cmp
fsubs
jge
imul
dec
sub
sbb
out
jle
js
adc
stos
pop
jno
xor
xchg
add
call
lret
mov
xor
xchg
mov
lret
mov
and
mov
out
dec
test
adc
andl
les
call
push
fldl
pop
jle
loop
stos
ret
and
fisubl
add
mov
xlat
or
jp
xor
das
orl
shrb
dec
or
mov
mov
es
iret
and
ret
ljmp
jb
mov
push
test
mov
and
sti
inc
ja
fbld
mov
xchg
xchg
cli
test
inc
inc
incl
rorl
add
mov
adc
negb
cwtl
xor
cmc
int3
or
lock
aam
dec
adc
inc
push
aas
les
es
sub
mov
subl
sbb
mov
cmp
mov
jno
nop
pop
sub
idivl
push
mov
jns
cltd
mov
clc
xor
ret
jb
or
sahf
jg
adc
test
push
decb
inc
leave
mov
loop
stc
push
inc
mov
fs
mov
shrl
je
roll
clc
lods
adc
cmp
cld
lret
jp
dec
je
mov
cmp
mov
ret
jp
or
push
scas
and
pop
roll
sbb
das
hlt
loope
jbe
je
les
inc
fildl
add
and
cmp
fsub
addr16
pushf
les
loope
aad
fnsave
aam
mov
or
xchg
subl
mov
and
mov
or
aaa
loopne
inc
dec
mov
or
add
inc
push
xchg
sti
stos
xor
nop
xchg
xorl
shrl
mov
sahf
sbb
xchg
loope
js
cli
xchg
mov
aad
das
mov
cmpsb
or
fucomi
es
lret
xchg
pop
adc
sub
or
in
or
testb
mov
in
and
mov
scas
inc
xchg
add
mov
movsl
mov
mulb
push
adc
sbb
loope
add
shr
pushf
inc
or
into
shll
cmp
jno
jmp
test
jg
push
lret
cmpsb
andb
nop
mov
mov
pusha
ss
jge
adc
push
and
push
pop
hlt
xchg
push
lock
out
test
rorl
inc
push
add
dec
nop
sbb
shrb
dec
inc
add
je
mov
and
sbb
adc
nop
inc
inc
mov
adc
mov
mov
sbb
add
adc
sti
ljmp
nop
or
add
push
dec
push
dec
push
dec
push
push
inc
dec
inc
dec
pop
mov
adc
daa
adc
jnp
nop
pop
pop
gs
dec
pop
dec
inc
or
add
imul
or
sbb
push
adc
imul
inc
xchg
and
cmp
mov
xchg
mov
adc
fsubrl
lods
xor
or
pushf
fstpt
pop
inc
mov
inc
pop
adc
lods
cmp
ljmp
gs
add
adc
mov
pop
imul
cmpsb
adc
or
in
insl
insl
jae
sbb
mov
sbb
pop
test
sbb
sbb
pop
mov
mov
inc
mov
dec
data16
jo
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
loopne
ljmp
push
gs
insl
gs
push
or
jb
sti
aaa
mov
gs
js
push
jne
lods
cmp
sbb
dec
sub
mov
insl
pop
jnp
jb
dec
jae
inc
daa
dec
jge
sti
fisttpl
pop
fs
imul
jae
outsl
outsb
std
fiadds
mov
push
mov
insb
daa
and
in
mov
or
outsl
insl
jo
inc
push
je
imul
imul
insl
xor
pop
jne
cmp
cmp
imul
fs
sub
outsb
pop
and
dec
data16
ficompl
xchg
add
sarl
jae
push
adc
adc
jp
dec
popa
jae
and
mov
sbb
mov
inc
insl
cli
repz
dec
popa
in
outsl
outsl
ja
inc
imul
arpl
push
aas
out
in
pop
inc
insb
addl
jb
push
lcall
add
popa
add
mov
and
push
outsl
enter
in
sbb
jbe
test
loope
push
cmp
push
and
sbb
sbb
mov
imul
je
bound
push
popa
inc
inc
push
std
sbb
out
bound
push
int3
or
imul
pusha
xchg
mov
jbe
add
inc
xchg
adcl
test
fldenv
pop
jecxz
popa
jo
inc
dec
inc
adc
icebp
mov
dec
xorb
jne
popa
inc
mov
leave
xchg
pop
xchg
bound
outsw
jno
pop
adc
and
loope
sbb
mov
inc
jns
jb
add
bnd
dec
pop
and
cmp
gs
cmpsb
push
push
or
pop
inc
inc
push
imul
cmpsl
fcoms
leave
jbe
cmpsb
popa
ret
pop
sbb
xchg
mov
gs
mov
cmp
outsl
jbe
jo
or
push
xor
dec
gs
imul
ja
push
mov
pop
adc
and
movsl
iret
dec
mov
jae
int3
outsb
dec
arpl
sbb
call
mov
hlt
mov
imul
fcmovnu
fldt
popa
adc
jbe
pop
pop
in
fldl
push
jae
push
pushw
popa
bound
sub
add
or
inc
or
outsb
sub
stc
int3
xor
imul
clc
or
jne
push
ret
sbb
push
adc
aas
cmp
dec
mov
insb
addr16
cmp
fsubrs
leave
ja
sbb
not
xchg
fs
dec
lcall
lock
dec
mov
jae
inc
adc
xchg
js
xor
stos
adc
lret
add
aas
inc
pushf
push
inc
add
dec
add
add
lcall
add
add
add
stc
cmpl
adc
inc
or
add
out
mov
lret
add
inc
add
jb
push
outsl
pusha
addr16
pop
push
add
fists
addl
fstl
js,pn
inc
imulb
popa
mov
popf
insl
into
add
imul
jmp
jge
or
cs
es
cmp
ds
movsb
sti
insb
mov
pusha
cs
add
push
sbb
insb
add
dec
dec
jb
push
or
add
dec
lahf
es
fldenv
push
daa
pop
dec
jae
arpl
push
mov
add
push
orl
rolb
add
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
xor
or
movsl
stc
add
inc
mov
lds
jae
adc
lock
cmpsl
shlb
fldenv
xchg
pop
aaa
sahf
jno
and
cwtl
pop
cwtl
xor
xor
or
sbb
dec
inc
data16
jne
add
mov
adc
shrl
je
sti
clc
mov
add
iret
push
mov
jno
cmp
dec
xlat
popa
xchg
or
mov
cmp
mov
aas
jne
sub
in
movsl
invlpg
lret
ret
shrb
movsl
out
subb
dec
leave
mov
lods
test
loope
inc
mov
pop
xchg
xchg
jb
out
adc
push
aad
out
popf
std
imul
jnp
std
test
ds
pop
rclb
in
adc
lret
cmp
cmp
pop
adc
mov
outsb
mov
das
fwait
jb
fcmovnbe
inc
cmp
adc
mov
cwtl
or
pop
shr
adc
adc
fdivl
push
mov
jmp
sub
mov
mov
inc
std
ret
pop
mov
mov
shrl
adc
test
add
mov
out
xor
dec
cld
mov
pop
in
jg
bound
in
inc
jecxz,pt
cli
gs
adc
add
popf
loope
push
loop
ljmp
xchg
xor
xchg
push
pop
mov
sti
xor
xchg
js
ss
test
lcall
and
pop
pushf
pop
cmp
int
mov
nop
movsb
bound
jnp
jb
adc
inc
xchg
pop
sbb
mulb
enter
sub
sarb
loop
insb
add
inc
fisttpll
test
dec
out
fs
fistpll
stos
cli
.byte
stos
.byte
add
add
adc
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
or
add
add
movsb
pusha
add
push
add
add
add
add
add
add
add
or
add
add
sub
add
mov
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
verw
add
aas
add
add
add
add
add
add
add
enter
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
movsb
add
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
jno
jno
data16
insl
add
add
add
jno
add
imul
add
je
add
add
push
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jno
jno
data16
insl
add
add
add
outsb
add
add
push
je
outsb
add
js
and
inc
add
add
jbe
bound
add
insb
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
cmp
sub
and
xor
xor
add
add
add
add
and
xor
xor
aaa
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
arpl
insl
add
add
add
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jno
jno
data16
insl
add
add
add
jno
add
imul
add
je
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jno
jno
data16
insl
add
add
add
js
add
add
and
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jno
jno
data16
insl
add
add
add
outsb
add
add
push
je
outsb
add
js
and
inc
add
add
jbe
bound
add
insb
add
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
cmp
sub
and
xor
xor
add
add
add
add
and
xor
xor
aaa
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
xor
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
add
lds
add
add
add
add
mov
add
fisubl
add
add
clc
add
or
add
add
and
add
add
add
xor
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
outsb
jae
popa
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
jo
push
arpl
push
imul
outsl
outsb
dec
jo
outsb
push
gs
gs
