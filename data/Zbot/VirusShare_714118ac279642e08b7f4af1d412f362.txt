lcall
loope
and
adc
inc
adc
adc
test
pushf
call
incl
mov
xor
push
add
push
xor
fs
repz
sub
pushl
out
dec
ja
mov
insb
push
pop
or
adc
inc
fsub
cmpsb
adc
lcall
push
movsb
pop
xor
shll
insl
cli
xor
orb
pop
jne
push
aam
push
inc
jo
lcall
xchg
cmp
push
pusha
adcb
les
and
repz
or
or
mov
ljmp
filds
nop
imul
cmp
pusha
mov
ret
adc
xorl
dec
repz
push
jecxz
push
nop
shlb
cmpsb
lcall
mov
jmp
shll
arpl
sbb
clc
inc
jns
lea
pop
sub
mov
mov
cli
fldt
ds
leave
add
shrl
call
push
jns
js
and
sti
enter
loopne
cwtl
orb
mov
jle
mov
mov
dec
rcr
pop
and
addr16
mov
or
movsl
lahf
mov
cltd
mov
xchg
pop
ficompl
popf
dec
out
cwtl
xor
and
incl
lret
aam
cmp
mov
push
xor
outsb
clc
arpl
pushl
sub
into
sub
push
out
push
jmp
inc
mov
and
inc
dec
jg
adc
jmp
fadds
dec
imull
gs
data16
lock
outsl
pop
je
sbb
xor
xor
mov
inc
stos
lock
jge
or
mov
jmp
xor
push
sub
addr16
jno
mov
jp
lea
out
dec
mov
es
mov
jae
pop
enter
mov
push
pop
lahf
sub
pusha
pushf
mov
jb
decl
add
inc
stc
jle
es
fists
pop
dec
cltd
jae
shll
dec
into
and
ljmp
xchg
push
adc
jo
sub
sub
daa
jno
out
dec
inc
loopne
out
fcmovnbe
cli
ljmp
or
or
add
ret
mov
outsl
cmc
dec
icebp
rorl
addr16
pushl
push
push
inc
inc
add
inc
test
int
loope
push
sub
in
hlt
out
fmull
inc
cmp
jae
xchg
push
popa
inc
xlat
xchg
adc
cmp
xchg
cmpsb
enter
lcall
pushl
hlt
and
scas
pop
add
cmp
ds
decl
in
cld
pop
mov
fistps
xor
push
jmp
mov
adc
sub
or
std
cmp
sbb
mov
sub
mov
inc
movsb
movb
or
mov
or
out
add
mov
in
repnz
jnp
and
pop
pop
fstps
mov
adc
inc
jp
xlat
ret
xor
call
in
jb
and
or
sahf
xchg
mov
and
xchg
aad
jl
push
mov
fs
or
pusha
lods
inc
call
popa
add
jb
add
ljmp
mov
and
push
cmp
scas
lcall
fidivrs
jecxz
incl
mov
cmpl
add
mov
and
push
incl
imul
jb
xchg
xchg
pop
pop
jl
pop
call
sti
inc
icebp
cltd
mov
sbb
or
aaa
dec
add
push
add
rcrb
jg
ret
xchg
xchg
idivb
ret
fs
out
dec
lock
pop
push
sbb
jnp
incl
cmovne
in
out
sahf
aad
lods
cmpsb
mov
fdivs
aad
cmp
jno
pop
add
fdivr
decl
cmp
jno
out
fwait
in
jmp
pop
mov
pop
xor
fistpl
cltd
gs
fadd
adc
int3
add
decl
into
stc
dec
jle
push
inc
and
gs
mov
incl
add
sbb
dec
mov
cmp
cltd
aad
inc
mov
aad
xchg
arpl
stos
add
jns
loop
mov
outsl
fistpll
push
js
jnp
cmp
add
sahf
or
xchg
repz
push
xchg
mov
add
mov
push
xchg
test
cwtl
add
add
add
rcl
pop
vpmaddwd
adc
lcall
push
bound
jns,pt
addb
adcl
dec
push
sti
outsl
mov
sub
sub
xor
adc
jecxz
ret
or
add
ljmp
mov
xchg
pop
mov
inc
incl
push
xor
and
jns
fistpl
dec
sbb
add
xlat
mov
fistpll
imul
pop
fldcw
add
add
dec
xor
lcall
pushl
push
add
ja
sub
add
add
mov
fwait
outsb
ljmp
std
loopne
rorl
add
stos
add
add
or
outsl
outsl
js
lcall
or
jg
inc
ljmp
out
inc
jle
cmp
xor
repnz
cmpsl
mov
sar
sub
testb
es
pminub
mov
fidivs
sar
mov
das
add
add
jne
mov
mov
incl
xor
add
inc
mov
out
psubw
add
mov
add
lods
not
les
dec
sbb
pop
push
inc
and
add
imul
incl
aad
and
neg
add
loope
sub
mov
in
mov
add
add
add
in
jbe
loopne
mov
clc
add
jg
out
lods
sbb
insb
fucomp
sbb
jl
inc
rorb
xchg
sub
sub
repnz
in
pop
jo
inc
xor
cwtl
xor
clc
add
jo
mov
loope
mov
sbb
cs
inc
cmp
inc
mov
out
jge
sbb
outsl
cmpb
loope
add
xchg
pushf
insl
and
lods
jecxz
jle
mov
dec
mov
add
adc
sahf
or
xchg
out
adc
insb
sbb
pop
add
shll
or
repz
and
fbstp
stc
inc
rcr
loop
fsubs
and
fst
add
add
das
es
fwait
jecxz
in
in
lret
jg
inc
test
push
ljmp
cmpsl
enter
inc
dec
fcomps
push
add
loopne
divb
loop
dec
aaa
dec
lds
add
xor
xchg
ret
mov
icebp
nop
pop
icebp
mov
push
adc
pop
sbb
sub
add
imulb
or
jmp
push
xchg
rcr
shlb
insl
push
ret
mov
cwtl
dec
add
jmp
mov
scas
cmp
fistps
stc
add
jmp
push
in
mov
mov
addb
aaa
out
addb
movl
fucomi
std
jo
add
add
xor
out
mov
loopne
fimuls
in
xchg
dec
pop
xchg
lock
aaa
mov
mov
xchg
adc
xlat
pop
fbld
add
xchg
call
dec
sub
fstps
and
mov
inc
pop
mov
into
int
das
clc
push
into
pop
pop
orb
add
fcomip
mov
lahf
fdivp
cmpsb
mov
pop
add
and
nop
sti
std
sbb
cltd
sarl
push
in
cmp
shrl
mov
adc
das
mov
push
ja
mov
cmpsb
jg
aaa
sub
clc
add
imull
imul
add
adcl
sbb
imul
es
pop
outsl
xchg
lcall
fildll
and
ljmp
sub
cmp
lret
inc
dec
add
inc
dec
not
sbb
add
idivl
jecxz
fcomip
xor
add
inc
jmp
stos
push
or
out
mov
dec
insb
js
pop
push
in
push
rorl
sub
out
mov
mov
ljmp
daa
and
push
cmpsb
jbe
imul
mov
push
mov
fldl
mov
mov
clc
fisttpl
rorb
mov
mov
mov
movsb
loopne
cmp
cli
xchg
adc
ret
mov
and
jmp
cmp
pop
mov
je
int3
popa
call
fadds
push
sti
shl
and
mov
aaa
sbb
inc
mov
xor
add
xor
scas
mov
inc
add
mov
mov
mov
out
xchg
or
std
push
jecxz
or
aad
jle
mov
lds
fnsave
pop
pop
sbb
cmc
xor
mov
gs
movsb
dec
jnp
sub
cli
xchg
add
ficoml
push
aas
adc
orb
and
dec
xchg
popf
hlt
pop
adc
add
jb
aam
out
sbb
gs
cmpl
nop
fidivl
pop
aam
mov
shrl
add
push
ds
pop
xor
inc
fistl
add
lods
pop
outsb
inc
enter
inc
mov
pop
and
das
lcall
push
adc
lock
cmp
mov
inc
negb
sti
push
dec
mov
jno
xor
or
test
lods
dec
sbb
outsl
scas
cli
rorb
mul
bound
test
xor
insb
xor
mulb
cmp
push
pop
out
lock
jp
add
jbe
in
or
daa
add
inc
xchg
mov
sub
add
cmp
in
and
push
into
xchg
mov
enter
repnz
je
dec
jb
add
icebp
outsb
dec
push
test
add
pop
call
js
out
mov
pop
and
fildll
ljmp
add
aam
jecxz
shl
adc
pop
sbb
les
mov
stos
lods
mov
xchg
mov
push
push
and
add
jle
pushf
cmp
and
pop
std
sbb
scas
push
shl
std
sub
insl
sub
inc
fimull
or
sbb
mov
dec
pop
cli
and
jmp
xchg
inc
mov
aam
fildll
sub
sti
mov
and
mov
push
aaa
subl
data16
divb
aam
into
ljmp
ja
mov
adc
or
rcll
mov
inc
adc
mov
push
cwtl
idivb
stos
mov
into
lods
mov
mov
dec
ffreep
cmp
pop
clc
and
les
mov
xchg
add
lock
mov
ja
cmp
push
or
sub
das
mov
add
dec
loop
fneni(8087
sbb
adc
cli
inc
inc
test
cmpsb
ret
fdivr
sti
loopne
sbb
pop
pop
mov
push
daa
jae
sahf
cli
xor
xchg
push
jmp
fisubs
dec
mov
icebp
dec
and
cmp
lcall
scas
pop
push
adc
pop
mov
inc
inc
int
lcall
jb
cmp
aam
cmp
pop
lock
add
pop
shlb
inc
outsb
stos
mov
or
cmp
mov
shll
sub
inc
inc
mov
scas
cmp
and
or
push
mov
repnz
jns
mov
mov
dec
roll
pop
test
jl
push
std
sub
aaa
add
xor
scas
testb
add
fsubs
push
xchg
test
xor
decl
outsb
rorb
adc
sahf
clc
sbb
lods
loop
idivl
cmpsl
mov
adc
fists
cld
fistps
sbb
or
and
sbb
faddl
cmp
mov
push
inc
dec
push
andl
dec
andl
add
pop
icebp
pushl
andb
mov
jg
push
add
sti
ret
lods
mov
cmpsl
or
mov
sub
or
or
push
out
frstor
fcoms
lea
cmpb
into
sub
filds
mov
mov
xchg
pop
adc
lds
dec
add
sbb
cli
cmp
stos
scas
js
iret
stc
cmp
xor
lock
adc
aad
loopne
pop
fsubrs
sarb
cwtl
add
fsubr
inc
push
sbb
jmp
out
mov
sub
or
mov
pop
fisubl
inc
out
or
mov
dec
cs
push
adc
es
fbstp
fildl
inc
xor
mov
xchg
outsl
incl
cmp
mov
xor
xchg
arpl
je
cmpl
adc
int
cs
call
and
cmp
lock
pop
dec
add
jmp
adc
jl
push
jle
jbe
pop
jg
ja
ja
leave
cmp
adc
nop
stc
adc
fiadds
mov
inc
push
bnd
pop
cld
push
into
aad
cmp
notb
lods
or
fldenv
xchg
daa
fmuls
fs
es
cmp
cwtl
add
dec
sarb
ds
pop
xorb
xchg
cli
dec
mov
inc
or
mov
call
jns
jb
aam
bound
icebp
shrb
adc
movsb
out
ljmp
and
pop
cmp
jl
add
fadds
mov
add
push
ss
std
inc
or
xlat
les
sub
bound
push
loopne
cli
aaa
adc
test
cmpsb
pop
mov
ja
xor
es
push
inc
jecxz
mov
cmpsl
or
lcall
adc
xor
push
les
stos
push
pusha
and
sar
pop
js
imul
adc
enter
adc
fildll
sbb
out
cli
sub
aam
jmp
fcompl
inc
lcall
arpl
adc
mov
push
cld
push
pop
xchg
pop
sbb
mov
or
ljmp
cmpsb
cwtl
popa
call
cwtl
sub
xchg
je
or
comiss
jle
shll
fisubrs
loope
hlt
mov
loop
xchg
decl
mov
lcall
idivl
ja
mov
mov
push
mov
inc
add
mov
or
sbb
push
or
dec
lcall
sahf
cwtl
jecxz
adc
stos
cmpsb
mov
cld
inc
test
pushl
xor
inc
les
lds
jo
les
out
jbe
icebp
add
or
push
fistpll
stc
xchg
repz
lock
lahf
jmp
cmp
dec
insb
mov
jmp
and
addb
pop
outsb
ljmp
fwait
dec
scas
fidivl
mov
shll
cmp
aaa
ljmp
inc
xor
movsl
mov
je
out
mov
and
fsubr
outsl
push
mov
cmpsl
mov
inc
cld
lods
add
outsl
lcall
pop
xor
pop
dec
inc
lret
ljmp
int
adc
pop
lock
pop
xchg
call
add
add
and
mov
mov
clc
add
xor
ret
jne
dec
test
fwait
mov
stc
add
adc
add
ret
or
pusha
adc
mov
pop
sub
jle
sldt
shlb
pop
push
or
or
pop
std
push
add
mov
adc
mov
cltd
pop
in
pop
fsubrp
sub
insl
add
mov
ret
push
inc
pushf
sbb
push
mov
add
movl
in
dec
sub
jge
test
push
mov
ret
or
outsl
xor
sbb
adc
dec
inc
es
ljmp
roll
sub
jnp
dec
js
sub
push
lock
mov
mov
sti
mov
cmp
mov
and
mov
mov
neg
and
adc
jo
aam
add
mov
loopne
into
pusha
repz
pop
mov
shll
or
fidivrl
xchg
mov
jle
icebp
dec
test
or
jo
sarl
cmp
dec
xchg
mov
ret
pusha
sub
or
cld
fcomp
sbb
pop
hlt
dec
loopne
ret
call
loopne
and
lock
push
add
mov
jne
sub
stos
cmp
add
lock
loopne
call
dec
jo
ror
add
mov
jge
adcl
sbb
call
lock
mov
dec
pop
mov
jo
mov
xor
icebp
mov
or
repz
aas
neg
scas
call
or
lock
popa
xor
xor
xchg
xor
xchg
loopne
lea
outsb
cmp
loop
jo
rcrb
cmp
xor
pop
fsub
lcall
ret
ja
and
add
ljmp
or
push
and
and
sahf
xchg
and
mov
sub
mov
into
andl
push
xor
xor
xor
push
and
mov
push
aaa
stc
mov
push
call
add
in
in
dec
xor
mov
loop
add
out
lods
sbbb
leave
lock
xchg
pop
dec
push
cmp
inc
idivl
jb
loope
mov
in
add
sti
sbbl
ret
push
xlat
dec
adc
mov
add
lea
notb
aas
fisubs
or
push
neg
movsb
rol
rcll
aas
mov
cli
push
jl
lret
dec
xor
loope
or
pop
lea
push
fiadds
push
jne
push
in
mov
ljmp
pop
je
mov
add
jbe
and
inc
jno
fcmovnb
and
rol
mov
enter
icebp
cmp
call
sbb
test
inc
outsb
mov
rorl
cmp
sub
cmp
sbb
int
roll
mov
pop
rorb
mov
add
ret
add
sub
or
mov
inc
fs
inc
neg
push
adc
lods
into
shr
cmp
adc
int3
pop
cwtl
mov
pop
test
roll
jmp
ret
jg
sbb
ret
push
movsb
push
cmp
stc
aas
jecxz
and
pop
mov
int
push
add
imull
push
inc
js
ret
add
push
cli
adc
add
pop
negb
nop
inc
fbld
inc
mov
jp
jg
lahf
xor
setno
mov
std
push
sahf
pusha
add
pop
add
cld
sub
aas
rolb
jg
fs
cli
sbb
gs
mov
inc
push
loopne
mov
cmp
inc
stos
lcall
sbb
add
add
mov
sahf
lret
add
es
mov
pop
mov
lcall
add
je
outsb
inc
inc
aaa
es
push
imul
xor
cmpsb
out
lahf
add
mov
addl
xchg
add
jne
push
jne
fisttpll
adc
jmp
push
in
pop
outsb
mov
cmpsb
add
adcb
in
ljmp
mov
inc
sbb
repz
int
icebp
jb
idiv
ljmp
mov
dec
add
mov
fwait
or
mov
inc
lcall
add
push
pop
mov
out
push
shll
push
pop
sub
stc
adc
and
or
leave
insb
sbb
in
shll
add
test
pop
rolb
out
dec
mov
adc
mulb
ficoml
adc
mov
dec
push
in
faddp
rolw
xchg
pop
shlb
jl
out
mov
pop
cmp
mov
movsb
add
les
imul
mov
ss
or
mov
pop
sbb
push
push
cmp
in
dec
push
aad
mov
push
mov
mov
add
inc
add
jmp
mov
sbbb
adc
xor
clc
mov
test
cmp
enter
mov
or
rolb
in
call
sub
mov
sbb
into
mov
dec
xchg
and
ljmp
shrb
test
cmp
repz
int3
jb
pop
pop
xlat
mov
and
mov
mov
arpl
mov
insb
ret
mov
add
call
out
cli
mov
ja
popa
push
insb
add
andb
outsl
mov
mov
loop
mov
cmpsb
loopne
cld
push
sarb
inc
push
sub
mov
xorl
repz
or
sbb
mov
cmp
ljmp
xor
pop
and
ja,pt
dec
xor
sti
push
cld
in
fninit
jo
or
roll
mov
les
repz
sahf
movsl
data16
add
mov
js
push
sub
in
lock
mov
fldenv
jmp
jnp
movsl
outsl
or
fstps
ss
add
pop
push
shrd
test
xchg
pop
or
cmp
sub
xchg
cld
rol
mov
addb
es
mov
decl
iret
sbb
sbb
call
ror
in
mov
fildl
enter
ja
and
fcmove
xor
cmpsl
fs
fcoms
jnp
lcall
ret
push
push
sbb
pop
add
dec
pop
jg
push
pop
ret
int3
sbb
js
adc
fldt
xor
or
cwtl
mov
pop
sub
loope
clc
cmp
mov
andb
aaa
add
fstl
popa
loopne
lahf
cwtl
scas
adc
sub
test
and
sbb
push
enter
push
mov
scas
ficoms
adc
fdiv
dec
inc
push
pop
pop
js
icebp
and
mov
jle
push
sbb
xchg
mov
repnz
ret
mov
sahf
pop
add
aam
cmpsb
shr
add
ret
pop
xchg
cli
push
cmp
and
bound
push
movsb
xor
jmp
push
lret
rolb
scas
pop
std
lock
jne
xor
jo
ds
es
loopne
mov
shll
xor
add
out
sub
jl
verw
adcb
push
mov
or
test
inc
inc
mov
sbb
xchg
sub
rcll
js
cmp
int
aam
fsubs
or
push
rcrb
pop
push
ljmp
mov
cmpsb
clc
aaa
std
movsb
pop
test
inc
add
lds
sub
or
push
fdivr
add
lret
xlat
mov
mulb
sbb
out
sub
scas
outsl
jle
scas
divl
mov
jp
pop
shll
push
mov
xor
insb
push
jl
cmp
push
mov
jg
lahf
loope
scas
push
adc
sub
hlt
sahf
push
lret
add
movb
xor
scas
adcb
pop
sub
add
je
aam
add
jle
icebp
add
mov
dec
sub
je
outsl
rcrb
inc
fs
xlat
ja
paddb
stos
fwait
sarl
mov
ja
ds
movsb
mov
pushf
negb
aas
aam
into
arpl
mov
jecxz
and
not
jecxz
clc
clc
lock
idivb
jns
jl
mov
cmp
inc
pop
and
mov
loopne
mov
pop
lock
bound
ljmp
mov
int3
xor
xchg
test
pushf
push
js
ret
sbb
std
push
ret
jbe
inc
dec
adc
sbb
and
push
mov
push
pop
std
lods
lahf
jge
xor
movsb
sbb
cmp
mov
orb
add
adc
fiaddl
mov
fcoms
dec
fisttpl
divb
lock
sar
and
add
mov
hlt
add
dec
leave
popa
ret
xchg
and
jo
mov
cmp
fldenv
mov
sbbl
cmp
fst
cmp
or
aad
sub
cmp
adc
inc
leave
outsb
out
add
rol
mov
sarb
jbe
test
push
mov
insb
incb
cld
and
movsb
xchg
xor
xchg
inc
mov
je
mov
loope
mull
sub
mov
xchg
inc
in
incl
dec
mov
push
push
adc
sarl
je
mov
mov
cmp
lahf
decl
mov
shr
or
fildll
pop
arpl
jns
pop
arpl
dec
dec
adc
inc
add
push
neg
xor
pushf
fdivs
subl
lcall
imul
add
and
adc
in
pop
mov
out
out
add
xor
push
out
sbb
lods
mov
push
cld
sub
pop
decl
js
xchg
dec
pop
sarl
sarl
arpl
jle
or
push
cld
pushl
or
pop
jb
fiaddl
shrb
clc
sub
xor
addb
or
mov
loopne
jno
mov
data16
andl
add
or
js
jo
shlb
daa
push
push
mov
pop
jmp
push
and
inc
popf
mov
add
sub
scas
lcall
insl
aad
jne
ret
xor
les
int3
or
arpl
enter
mov
incl
sub
xor
xor
inc
sarl
mov
idivb
lods
pop
cmpsl
push
fsubl
aam
xor
scas
mov
shlb
pop
inc
xchg
sarl
mov
outsb
sbb
mov
fiadds
mov
lcall
add
dec
sbb
inc
mov
sub
fcmove
cmp
xor
or
mov
test
jecxz
into
int3
pop
pop
lods
mov
jb
mov
rorb
push
adc
xor
mov
or
or
jle
mov
inc
rcrb
push
xor
scas
shrb
jo
add
repnz
lret
pop
inc
out
clc
pushl
fs
jbe
pushl
sbb
sbb
lods
push
push
jmp
xchg
xchg
cmc
sbb
sbb
or
lret
jp
or
mov
ljmp
mov
sahf
popa
xchg
xchg
lock
ficoms
ljmp
jmp
das
adc
jecxz
and
push
sbb
pushf
daa
movsl
pop
dec
add
jle
sbb
lods
loope
iret
jb
mov
sub
sbb
pop
xor
adcl
mov
xchg
push
les
push
dec
xchg
icebp
push
and
dec
dec
pop
mov
ret
dec
push
add
std
into
xor
clc
pop
push
loopne
dec
push
or
cmp
js
mov
scas
mov
mov
mov
cld
outsl
fucom
pop
clc
push
iret
cmp
shlb
shll
cmpb
adc
pop
mov
maxps
lock
sahf
sbb
adc
divl
stos
push
icebp
xchg
outsl
loop
sarb
push
lds
out
ret
sbb
xlat
adc
xor
add
xchg
inc
or
mov
jg
and
call
out
out
js
mov
insl
adc
int3
jle
pop
push
adc
add
pop
lea
pop
out
adc
js
out
xor
or
sbb
sahf
in
ljmp
test
add
or
push
sub
test
add
rorb
mov
ja
jge
js
mov
mulb
dec
inc
sbb
shrb
sbb
sub
aaa
pop
icebp
outsb
outsl
dec
jg
inc
mov
add
iret
add
cmp
push
ficoml
out
lcall
push
mov
cli
mov
idivl
mov
pop
dec
mov
mov
adc
cmpsb
xchg
xor
call
cli
lahf
adc
xchg
out
inc
mov
out
test
loop
das
adc
mov
and
shlb
or
aaa
sub
cmpsl
push
lds
cmp
out
inc
ds
dec
cmp
pop
scas
sbb
addb
jle
jnp
jge
jne
aas
bswap
stos
test
repnz
xchg
add
mov
mov
stos
jo
xchg
dec
add
jo
ljmp
xchg
adc
jmp
pushf
inc
mov
adc
pop
ja
sbb
popf
sbb
jecxz
sbbl
test
lret
inc
or
mov
sub
sub
shrb
xrelease
ljmp
fs
mov
shrb
scas
out
pushf
aaa
mov
xorl
or
jl
in
dec
int3
rcll
es
pop
aam
jp
add
and
movsl
repnz
fnstcw
repnz
icebp
dec
test
std
pop
mov
fstpt
out
mulb
inc
test
cmp
mov
fnsave
aam
js
or
pop
mov
inc
lods
mov
or
dec
fsub
das
or
push
sti
mov
inc
testb
and
rcrb
cwtl
pop
add
lret
mov
jmp
jo
fdiv
aas
and
dec
mov
sbb
aaa
cmp
inc
and
dec
nop
xor
mov
ret
into
sub
ss
push
mov
push
out
pop
shlb
sub
inc
dec
pop
repz
cs
jle
incl
popf
pop
lods
dec
add
mov
add
fsubrl
mov
ret
add
xchg
imul
adc
je,pn
mov
push
push
mov
fistpl
mov
add
mov
lock
mov
or
stos
negl
fucomp
scas
ficoml
jle
pop
sub
sub
xor
stos
aaa
je
fldl
or
incl
and
add
inc
cwtl
dec
lds
loope
push
jle
xor
pop
je
inc
rcr
dec
aad
adc
rcrl
ds
push
add
push
pop
push
pop
mov
mov
movsl
rclb
ret
xchg
enter
leave
inc
jb
les
jmp
into
jno
mov
push
testl
push
cli
inc
lods
les
repz
les
call
fmul
pop
sbb
or
fcompl
ds
fisttpl
xchg
in
out
nop
and
in
add
and
mov
cli
lret
lock
mov
aas
add
mov
fcoms
jne
je
jo
push
and
movsl
push
lds
cmp
jbe
aam
int3
jae
xor
aaa
stos
mov
xchg
sub
fildll
jbe
rorl
cwtl
fld
sar
mov
mov
fs
pop
pextrw
and
dec
out
adc
seto
jl
das
mov
fimull
arpl
in
mov
add
pop
xchg
iret
mov
scas
ret
adc
fdivl
or
std
mov
cld
shrl
push
and
lret
add
pop
adc
or
ret
sti
sub
pop
sbb
jne
mov
dec
les
dec
out
jmp
das
pop
push
push
pop
cs
js
mov
adc
lea
add
nop
fadds
jg
int3
push
ds
mov
pop
mov
cs
loope
inc
adc
rolb
sub
sub
push
sbb
aaa
cmp
div
je
fcmovnbe
jp
fnstenv
test
into
add
mov
loop
add
daa
ret
lock
test
cmp
ljmp
adc
push
scas
inc
aad
inc
mov
add
mov
cmpsl
jge
inc
rcrl
lcall
lods
ret
jle
fsubl
fadds
idivb
pop
adc
cltd
inc
bound
adc
lret
dec
lods
scas
or
add
xchg
testb
or
js
sub
ljmp
pusha
lahf
sar
mov
jmp
or
ret
adc
in
subb
mov
pushf
iret
add
jmp
xchg
mov
sub
imul
pop
cs
stos
push
imul
cli
outsl
ret
mov
pop
lret
pop
inc
pop
aam
mov
sbb
adc
aaa
push
or
int
fs
jmp
jbe
outsl
insl
xchg
loopne
sar
clc
xchg
adc
test
jb
sbb
pop
std
add
mov
sub
or
jle
aad
out
adc
sbb
in
jo
fsin
fwait
loop
mov
hlt
inc
rolb
pop
lret
xor
in
pop
fdivrl
or
push
imul
jmp
cmp
dec
out
movsb
pop
xor
lcall
and
stc
out
sub
in
jp
icebp
std
in
mov
and
mov
add
xchg
cmp
fcmovbe
ds
push
aas
adc
xorb
push
pop
and
cmp
loope
mov
cld
sub
jl
mov
mov
pop
jbe
push
inc
push
call
dec
adc
aas
adc
mov
test
mov
or
dec
fiaddl
pop
cmc
ja
mov
inc
pusha
pop
mov
clc
cltd
stos
in
les
out
pop
add
push
scas
fadds
xchg
fcmovnu
mov
pop
in
decl
ficomps
das
cmp
cmp
xchg
cmp
rcr
dec
rcl
mov
jns
add
or
shll
and
stos
insl
xor
mov
push
push
hlt
fs
je
mov
pop
dec
and
pop
in
int3
fsubrl
pop
insb
mov
clc
or
jne
mov
addl
test
out
mov
jno
shl
icebp
loop
pop
and
popf
jno
cmp
pop
insb
xchg
fiaddl
cmp
mov
push
pop
sub
mov
js
sbb
mov
loop
les
and
decl
dec
call
jmp
mov
aaa
loopne
jge
mov
dec
mov
lcall
gs
es
add
loop
ss
loopne
sbb
and
lock
fdivs
ret
fimull
sub
lods
adc
mov
es
lea
repnz
push
insb
adc
push
shrb
cmp
in
into
jl
push
pop
push
adc
cltd
mov
mov
xchg
mov
outsb
repnz
orb
xor
push
out
mov
scas
mov
xchg
adc
sub
mov
shl
pusha
cmpsb
or
push
arpl
andb
call
xor
and
pop
push
jmp
mov
mov
out
int3
cmpsb
js
mulb
dec
sbb
cli
mov
icebp
fldl
push
dec
pop
mov
shrl
call
das
data16
mov
outsb
hlt
mov
cltd
inc
insb
sub
pop
cwtl
arpl
imul
in
sub
call
pop
mov
je
jns
and
cli
adc
loopne
jno
imul
xor
loop
aaa
loop
test
lret
cmp
add
incl
jo
incl
insb
add
sbb
jae
mov
sti
clc
mov
scas
or
xchg
or
movsb
outsl
and
fisubrs
rcll
add
pop
mov
in
pop
pop
or
test
sbb
mov
sbb
jne
mov
cs
stos
pop
pusha
push
outsl
cwtl
pop
mov
pop
repnz
test
rcrb
rcll
xchg
add
pop
cmp
sub
pop
popf
call
hlt
cli
adcl
rcrb
data16
std
jg
out
call
sbb
nop
fidivl
inc
outsl
pop
or
and
aam
out
nop
add
addb
fildl
fistpl
jg
xchg
int3
mov
or
cmpsb
xlat
call
or
roll
xor
call
leave
xorl
leave
bound
rorl
cld
or
lods
pop
mov
idiv
push
cmp
movsl
mul
sbb
mov
mov
out
jbe
dec
aad
loop
mov
std
ljmp
xor
out
out
mov
jge
test
pop
sbb
int
fisubrs
loopne
jb
sub
jmp
sub
mov
stos
pop
outsb
jp
push
add
dec
fs
loope
ljmp
xor
push
xor
cmp
rorb
pop
dec
fldenv
fstpt
jmp
xor
outsl
sarb
test
roll
incl
lea
jle
sub
enter
fistpll
negl
or
xor
ret
lock
pop
cmp
cld
fistps
mov
cwtl
ja
sub
sub
jbe
xchg
jle
jb
cmpsb
or
xorb
pop
xchg
test
mov
bound
jecxz
jbe
stos
ret
daa
mov
or
mov
or
cld
push
andb
or
dec
shl
adc
push
inc
jl
xor
xchg
add
mov
xchg
loop
and
jp,pt
mov
jle
leave
dec
ficoml
loope
insb
iret
jp
jne
add
aad
mov
pusha
test
stos
dec
cmp
adc
push
inc
mov
push
jae
mov
pusha
and
test
and
iret
jmp
pop
addr16
mov
fistps
sbb
das
cld
dec
cmc
arpl
sub
cwtl
enter
fiadds
nop
sbb
jle
or
jmp
fnstsw
sti
add
cltd
inc
loop
adc
enter
push
ja
lock
movsb
jle
call
sahf
std
add
pop
mov
popf
or
lahf
pushf
lock
ljmp
mov
dec
cmpl
insl
sub
sarb
mov
sbb
sub
pop
xchg
sub
add
mov
xchg
push
mov
aam
mov
pop
loop
adc
xorb
popa
inc
test
stos
mov
mov
repz
shlb
leave
orl
xchg
out
cmp
js
pop
aam
pop
push
mov
outsb
sbbb
push
pop
and
cmp
cmpsb
loop
xchg
adc
push
mov
insl
ret
sti
aaa
in
subb
cltd
inc
fdivrp
add
movsl
fldenv
adc
pusha
push
push
push
inc
js
xchg
push
jl
mov
mov
mov
fsub
rcrb
sahf
inc
cwtl
mov
sub
mov
mov
cmp
xor
mov
cmp
aam
imul
sub
cmp
cwtl
addb
jle
xchg
xchg
mov
sub
or
mov
scas
sbb
jecxz
xchg
imul
mov
mov
out
btr
aam
in
iret
xrelease
pop
fcomps
mov
cmp
test
cmpsb
arpl
out
add
push
mov
adc
adc
js
and
in
jg
or
nop
insb
xchg
adc
add
data16
push
fiadds
add
mov
jge
and
fisubl
outsl
sub
lahf
inc
jg
outsl
scas
mov
add
fcomps
clc
xor
hlt
sbb
outsl
cld
add
test
push
sbb
pop
test
push
or
sti
and
jb
dec
push
ret
mov
repnz
in
push
dec
mov
mov
jg
lock
int3
enter
int3
not
mov
mov
xor
mov
sub
add
and
jle
and
lcall
fcomp
push
push
cli
orl
subb
js
xchg
xor
mov
std
adcl
sahf
add
inc
mov
or
outsb
inc
dec
mov
in
xchg
jne
add
sub
push
dec
neg
mov
test
cmp
and
inc
dec
adc
aam
sarl
data16
leave
sbb
push
and
pop
pop
cwtl
add
pusha
sub
mov
jge
pop
fcomps
fisttps
les
lret
shrb
fcompl
outsb
jo
and
fcomps
mov
sbb
ret
add
cmp
sbb
mov
sbb
pop
xorb
mov
fdivrs
mov
in
out
movsl
shlb
dec
xor
add
fstps
jecxz
fldenv
adc
cld
push
adc
mov
test
sub
ret
sub
mov
faddl
ljmp
mov
mov
xor
divl
mov
jb
mov
cmp
mov
dec
push
mov
jle
mov
jg
fs
cmp
cwtl
and
out
dec
aas
adc
and
cmp
ljmp
mov
movsb
test
rcll
inc
subb
mov
lret
pop
dec
xor
inc
sub
andb
rcrl
mov
in
testl
ret
out
fdivrs
mov
jne
imul
adc
je
out
std
and
ljmp
cmp
xchg
dec
add
outsl
xor
adc
and
inc
mov
or
add
cmp
xor
not
push
mov
add
cmc
or
lcall
sbb
movsl
loop
insb
rclb
jl
rclb
add
in
out
jno
les
shrl
sti
int3
or
xchg
lock
jbe
cmpsl
sti
shl
jnp
sbb
sbb
dec
push
fdivs
shl
aas
jmp
test
je
push
sub
loope
rcr
sub
inc
xor
loope
rorl
or
lret
lock
and
mov
sub
mov
pop
in
fistpl
jmp
movsl
stos
test
dec
mov
mov
inc
and
jl
stc
cmp
mov
jl
add
jae
fisubrs
lods
jbe
adcl
adc
sarb
push
loopne
push
push
push
pushl
push
push
loope
imul
dec
sbb
jne
out
or
and
jno
sbb
sbb
sub
and
fisubrs
or
insb
or
js
incb
sbb
mov
xchg
sbb
incl
lods
mov
jle
jmp
inc
add
mov
test
sbb
es
ret
and
mov
xor
xor
mov
lret
jle
mov
jbe
inc
xor
push
adcb
incl
push
add
je
es
cli
std
mulb
sub
adc
mov
or
fldenv
lret
sbbl
xchg
push
inc
repz
push
decb
jmp
movsl
mov
inc
pop
pop
rclb
test
push
xchg
ljmp
dec
rclb
cmpsl
mov
pop
dec
pop
cmp
add
jp
into
lret
cmc
or
mov
add
test
sub
xor
pop
or
add
cmp
div
pop
mov
add
addr16
divl
incb
or
lods
add
ret
dec
les
aad
in
daa
add
sbb
push
and
pop
push
add
je
loopne
jno
add
or
aaa
push
test
popa
xor
ss
pop
add
jecxz
in
xchg
add
xchg
sbb
divb
dec
sub
jecxz
cli
adc
fs
loope
push
xchg
ss
lret
and
or
cmp
pop
test
cmp
imul
ss
adc
inc
inc
sbbl
push
sbb
push
sbb
sub
sarl
pop
mov
addr16
stos
pop
repz
pop
and
je
mov
xor
lea
mov
fcom
dec
pusha
cmc
mov
mov
sbb
popf
fsubs
movsb
clc
cmpsl
push
mov
mov
orl
mov
pop
push
loop
xor
mov
rcrb
or
xchg
cs
mov
test
add
js
or
mov
int
cld
mov
movsb
cmp
movb
arpl
loop
pop
sub
iret
xchg
aas
push
lds
aad
ret
icebp
lods
shlb
ds
push
aad
outsl
adc
adc
fldt
sti
inc
in
hlt
adc
mov
push
cmp
imul
movsb
sar
cmp
dec
mov
ss
mov
push
cmp
les
xchg
jo
push
cld
jo
in
std
jbe
addl
inc
test
or
test
mov
shlb
cmpb
mov
nop
mov
pop
sti
lea
adc
mov
div
lods
sbb
in
push
push
repz
test
adcb
leave
dec
ja
les
jle
pop
add
pusha
testl
jp
ret
test
enter
loop
outsb
test
out
enter
sub
loope
sti
lock
test
stos
into
push
inc
sbbb
andb
jg
sbb
loop
mov
loopne
scas
mov
scas
es
inc
xor
pop
mov
outsb
cmp
pusha
or
and
rcl
add
lods
add
adc
sbb
lret
mov
subb
jecxz
xchg
cmp
mov
or
add
push
mov
adc
mov
shlb
sbb
inc
not
dec
sub
sbb
sbb
loopne
or
cltd
pop
cld
add
jnp
jno
mov
adc
hlt
int3
icebp
mov
and
hlt
idiv
inc
sub
dec
inc
std
and
sbb
ret
cmp
jno
in
xchg
adc
lock
jge
inc
arpl
dec
loopne
test
ds
adc
adc
roll
add
push
cld
roll
loopne
mov
clc
inc
adc
cmp
sub
cltd
lods
jecxz
add
idiv
jl
push
out
pop
add
push
inc
test
rorb
outsb
loope
add
and
sbb
push
push
jl
cs
xchg
adc
adc
mov
add
inc
or
adc
mov
push
mov
pop
and
lahf
sub
xchg
xor
cld
jno
test
or
jge
inc
neg
cmpsb
lods
mov
jl
and
jno
xor
test
adc
jmp
out
shll
not
inc
xor
inc
sub
pusha
jne
adc
fldenv
mov
xor
xchg
outsb
hlt
jg
cmp
subl
sub
jbe
add
jns
or
arpl
jmp
or
mov
les
int
scas
clc
test
inc
sbb
and
inc
and
sbb
cltd
or
mov
cmpsl
jmp
sti
test
pop
dec
mov
mov
pop
push
rcll
inc
sbb
cmp
je
inc
int3
sub
push
lcall
dec
adc
dec
sbb
push
mov
sub
sub
loopne
adc
sbbb
aas
adc
cltd
popa
or
xor
sbb
inc
leave
cs
pop
jno
imul
push
ret
sbbl
cld
mov
adc
mov
cmp
not
push
icebp
or
out
jl
xchg
cmc
xchg
xchg
push
sub
xor
lds
rcl
test
cltd
inc
or
add
xor
aas
leave
ret
out
in
jl
cmpsl
xor
or
mov
pop
xor
scas
lahf
fdivrl
cmp
repnz
mov
pop
movsb
lcall
in
and
or
outsl
cmp
add
outsl
add
je
mov
fiadds
cs
sbb
inc
lock
ljmp
stos
iret
repz
push
insl
js
and
jnp
add
call
outsl
call
mov
cmp
test
xchg
rclb
popa
cs
sbb
loop
mov
ret
dec
aas
ljmp
jae
sub
cs
lcall
or
outsl
cmp
xor
nop
xor
sub
stos
push
ja
fwait
xchg
insb
xor
add
mov
or
cmp
cmp
or
pop
test
mov
out
cmp
lret
xor
ja
mov
test
insl
lods
xor
jp
imul
test
pushf
movsb
add
cmp
js
icebp
jg
fst
cld
fisubl
cmpsb
je
cmp
jmp
push
or
lods
inc
mov
mov
jo
into
or
js
les
lods
outsb
es
aas
lods
jg
outsl
adc
into
push
jo
jno
inc
nop
cwtl
push
testb
mov
or
je
jl
incl
jecxz
sti
cli
in
pop
clc
movsl
loopne
popa
lcall
sbb
clc
pop
test
push
ja
ss
and
fcompl
aad
push
iret
add
or
scas
cmp
inc
std
push
push
sub
dec
pop
push
jno
sub
iret
les
sbb
das
xchg
fs
sbb
mov
dec
std
add
cmc
add
xchg
pop
push
and
insb
pop
pop
mov
add
ljmp
pusha
adc
rorb
movb
cmp
adc
sub
push
fwait
test
das
lock
xlat
ljmp
cmpsb
and
out
push
and
int
push
mov
outsl
call
leave
and
jg
add
fwait
sarl
loopne
decl
ret
ret
in
dec
add
insb
mov
test
xlat
jecxz
lock
mov
add
inc
pop
inc
cmp
pop
ljmp
imul
cmc
incb
incb
cmp
dec
add
decl
dec
mov
imul
cld
mov
enter
inc
sub
jb
lret
pop
loope
out
in
push
mov
xor
xor
test
pop
dec
pusha
call
aam
add
notrack
and
dec
push
add
pop
sbb
lcall
rcrl
mov
xorb
push
int
and
xchg
adc
dec
jmp
dec
and
and
je
or
and
and
cmp
xor
adc
push
add
shlb
jne
into
add
lds
popa
mov
das
fmuls
movsb
insb
adc
cli
test
shr
repz
pop
jne
pop
inc
stc
pop
loop
mov
cli
cltd
add
cld
incl
jl
out
es
int
and
or
sub
mov
ja
mov
or
rcr
lcall
push
iret
jg
adc
test
arpl
imul
in
pop
pop
cld
push
xor
or
xchg
lret
inc
icebp
rorl
stos
jns
aam
push
loope
push
mov
push
movsb
pop
hlt
sbb
divb
add
push
fsubl
add
cmpsb
out
incl
hlt
cmc
push
dec
dec
jecxz
dec
lcall
mov
das
and
pop
lods
daa
push
sbb
repnz
mov
shrb
loopne
icebp
add
inc
mov
push
jmp
lcall
mov
rcl
repnz
pushf
fs
pop
sbb
in
push
mov
xchg
jo
sbb
ja
cwtl
faddl
and
push
push
fsubl
sbb
add
std
rorb
jbe
sbb
inc
xor
add
lods
ret
fidivrl
sbb
sbb
jp
cmc
mov
aam
mov
call
ljmp
sahf
mov
xor
dec
xchg
push
xor
mov
mov
into
jmp
les
cmovbe
fstpt
mov
cmp
fistl
dec
movsb
inc
ds
ljmp
push
rclb
xchg
lcall
mov
popa
mov
xor
cmc
sbb
lret
xchg
cmp
and
add
dec
test
rcrl
ljmp
jnp
pop
mov
syscall
cmp
aam
cmp
pop
fadds
leave
dec
jae
or
sbb
repnz
out
cltd
loope
mov
mov
shr
into
xchg
dec
call
cmp
and
lret
leave
sub
imul
mov
cld
push
mov
mov
sub
sbb
daa
xor
test
adc
pop
mov
aaa
bound
enter
in
inc
pop
iret
insl
emms
sbb
fdivl
sti
push
mov
jle
cmp
dec
push
mov
fisubrl
clc
inc
xor
popa
jge
rorl
subl
mov
adc
pop
nop
push
sub
pop
outsl
popa
cmpsb
sbb
push
cli
sub
sub
repnz
lea
push
push
loope
jnp
cld
push
push
dec
sbb
push
xor
test
jbe
jl
push
adc
and
test
ret
mov
adc
movsl
movsb
xchg
sbb
ds
xchg
xchg
cmpsl
lcall
icebp
xchg
sub
jp
mov
ret
jp
push
sub
add
jge
stc
loopne
and
adc
pop
clc
mov
jle
cmp
fimuls
add
mov
inc
ror
std
dec
or
rorl
repz
mov
and
push
sub
ficoml
test
push
icebp
ficomps
push
inc
xor
decl
push
mov
js
enter
rcrb
cmc
add
push
add
cli
xor
jle
sbb
aam
mov
mov
pusha
roll
lods
adc
clc
jg
loopne
std
divb
inc
and
add
pop
sub
outsl
mov
hlt
les
aam
push
push
dec
add
ret
outsl
call
scas
jbe
jne
xor
cs
add
and
cwtl
push
xorl
outsb
push
pop
rolb
loope
mov
loope
dec
scas
add
notl
adcb
mov
sti
sub
add
call
stos
xor
push
add
cld
test
stos
mov
mov
fdivl
data16
fildl
jne
push
add
mov
push
add
ljmp
sbb
fildl
inc
mov
mov
les
iret
adc
std
fnstcw
pop
hlt
lcall
fidivrs
cltd
sbb
lock
hlt
je
pop
jmp
jo
add
jbe
mov
xor
xchg
mov
mov
cmp
add
sbb
cltd
enter
xchg
xlat
clc
loop
and
rorb
push
movsb
cwtl
es
xor
test
dec
pop
lock
cmp
add
or
mov
inc
movl
ret
mov
cmpsl
cmp
mov
adc
cmp
aaa
xor
add
adc
hlt
adc
out
pop
mov
mov
in
lcall
loopne
add
sub
daa
add
push
outsb
jno
ss
push
jmp
hlt
in
cmpsb
into
test
mov
push
adc
les
dec
ss
and
cli
scas
in
xchg
js
xchg
pusha
cld
jecxz
or
stos
or
inc
jecxz
mov
push
jno
inc
add
hlt
add
clc
or
insb
ljmp
mov
out
ret
pushf
push
adc
xchg
pop
ja
jg
inc
sub
jmp
adc
nop
jle
addb
mov
shrb
lods
or
sub
mov
sarb
dec
sub
or
ss
jmp
aam
sbb
push
inc
inc
cs
sbb
cld
mov
and
dec
jmp
jnp
jle
xor
fcoml
ljmp
sbb
push
scas
or
or
test
jge
push
push
pusha
cmpsl
inc
inc
cmp
clc
incl
xor
add
dec
dec
add
add
cmp
leave
cmpsb
aas
gs
out
xorb
in
push
insl
and
add
andl
jle
xchg
sbb
mov
subb
pushl
mov
xor
jmp
pop
gs
fstps
ss
imul
ljmp
negb
mov
inc
jns
push
push
xchg
sub
mov
aam
sub
adc
mov
push
fsub
pop
repnz
data16
inc
sar
movsl
dec
insl
insl
mov
out
xor
jb
pop
fdivrl
addr16
push
outsl
test
cs
call
cmpsl
fbstp
xchg
mov
mov
and
jge
inc
xchg
test
sub
fs
insl
pop
test
dec
std
pop
cmc
stos
ss
inc
dec
fldcw
rorl
xor
mov
mov
mov
push
maxps
mov
mov
jl
add
and
pusha
orb
outsb
fcomps
pop
or
fldl
lds
jg
nop
ss
jnp
dec
xchg
mov
mov
or
mov
add
addb
out
xchg
fcomp
add
push
xchg
add
push
add
push
lock
add
out
pop
mov
xor
mov
and
out
inc
xor
jmp
outsl
or
or
inc
add
imull
shlb
mov
or
lret
call
sub
test
mov
clc
push
lods
pop
dec
stc
sarl
or
lret
mov
mov
or
pushf
pop
dec
add
mov
pusha
add
adc
or
or
xchg
fidivl
and
mov
inc
sahf
inc
repnz
mov
mov
lahf
mov
pop
sbb
mov
or
subb
sar
outsl
mov
cmp
jne
jl
xchg
stos
adc
scas
cmp
aaa
jb
sub
inc
cld
inc
pop
shrl
mov
inc
xor
cs
and
mov
or
jnp
fisubrs
lds
or
jno
jge
lahf
aad
or
or
pop
ljmp
and
jo
loopne
jo
dec
inc
sub
frstor
and
ret
adc
fstl
add
std
shld
int3
push
lock
pop
cmp
add
push
popa
repz
sub
push
and
lahf
inc
mov
push
push
or
out
js
icebp
cmp
xor
es
movsb
lahf
and
fs
sub
jb
loope
pop
sbb
adc
add
orb
orl
mov
push
mov
push
pop
decl
clc
inc
sub
fcomi
fwait
mov
out
movl
test
shll
aas
int3
popl
imul
or
in
inc
cld
jp
adcb
dec
or
lds
hlt
lcall
insl
cmp
add
adc
loop
packsswb
jg
int3
xchg
xor
cli
xchg
aaa
xchg
add
adc
test
in
loope
push
call
cmp
mov
sbb
mov
fwait
aad
out
mov
sbb
jo
mov
inc
repnz
in
mov
mov
ret
shrl
mov
add
jae
inc
mov
cld
loop
mov
mov
add
push
sub
jmp
push
mov
push
jb
nop
xor
inc
mov
add
adc
repz
jp
cmp
adc
mov
and
pop
add
rcrb
jle
or
fidivl
pop
mov
adc
fs
aad
or
sbb
ret
mov
jle
fisubs
loope
xor
test
add
sub
push
pop
lea
xor
cli
loop
and
rcrl
sub
mov
imul
and
add
jge
jno
popa
sti
and
add
adcl
inc
decl
ja
adc
scas
xlat
scas
inc
test
hlt
inc
sti
xchg
jmp
enter
cmp
adc
adc
push
out
lods
pop
je
loopne
icebp
test
xchg
cmp
push
lods
stos
xchg
mov
cli
mov
sbb
dec
incl
loopne
add
and
cltd
and
mov
rcr
push
std
pop
rcll
ss
loopne
sbb
stos
jg
outsl
mov
pop
mov
xor
test
and
testb
es
or
cmp
mov
mov
fmul
cs
and
push
bound
inc
shll
dec
push
pop
lods
add
shl
mov
mov
cmpsb
incl
adc
sub
mov
mov
lcall
in
inc
or
mov
add
jae
xlat
dec
int
or
andl
and
xor
xchg
lcall
jo
sbb
lahf
ljmp
or
fwait
lods
fdivl
sbb
add
inc
loop
xor
fildl
pop
jne
and
jp
cld
outsb
cmp
orb
lods
clc
adcl
and
adc
mov
sbb
inc
add
cltd
inc
push
or
sub
dec
insb
jle
addl
cmpsl
in
sbb
jns
xor
je
addr16
lock
mov
pusha
jl
adc
repz
add
mov
out
call
icebp
mov
in
adc
xchg
shl
or
sbb
or
add
pop
mov
dec
cmp
push
and
jmp
jne
and
cmp
mov
push
je
rclb
sub
shl
cmp
xlat
rorb
and
stos
add
push
aam
dec
mov
xor
sub
or
test
inc
clc
inc
dec
xor
mov
adc
mov
dec
push
loopne
aaa
out
pusha
jl
fimull
and
call
lret
jp
mov
and
shr
sbb
add
mov
ja
imul
mov
and
pop
jo
fisttpll
je
mov
xchg
add
xchg
push
add
adc
xor
scas
sarb
sbb
sbb
loop
repnz
jmp
add
cltd
lods
test
xor
stos
call
sub
imul
fldt
lock
mov
xchg
and
pop
mov
mov
out
cmp
outsb
movsb
cltd
push
dec
shlb
clc
push
dec
mov
push
adc
jge
iret
cmc
sbb
iret
push
jge
add
push
dec
push
stos
std
mov
mov
jle
je
pop
call
xchg
clc
rcr
jnp
fs
rclb
sub
sbb
push
enter
add
adc
imul
imul
dec
outsb
sub
call
loopne
hlt
loopne
jns
mov
jp
dec
arpl
ja
inc
or
pop
inc
sub
inc
push
in
in
or
or
jae
push
inc
add
and
cmp
dec
shrb
mov
in
sbb
mov
dec
add
xor
inc
jle
cli
lcall
aaa
jl
std
pop
outsb
sbb
repnz
lea
push
cld
in
fcoml
or
push
call
sbb
inc
aad
add
and
cld
push
adc
leave
xchg
xchg
ret
mov
mov
inc
call
sbb
inc
add
sahf
jecxz
inc
add
add
adc
inc
test
xchg
mov
mov
test
mov
movsl
dec
ja
and
sbb
mov
iret
dec
loopne
and
stc
ret
test
mov
push
push
shlb
push
xchg
add
mov
shl
cmp
pop
jne
push
pop
out
fcoms
pop
push
sub
cs
mov
mov
sbb
jge
dec
mov
jae
push
loop
push
mov
dec
std
pushf
mov
rcrl
and
ljmp
push
inc
cmp
xchg
hlt
in
mov
jo
iret
and
mov
call
or
add
sarb
repnz
cmp
xchg
lret
or
scas
add
xor
lock
loop
mov
mov
fwait
push
or
out
ret
pop
or
add
cmp
inc
loopne
das
popa
je
jb
and
loopne
mov
jl
leave
movsl
pop
and
out
clc
cmp
add
pop
add
add
dec
xlat
adc
ficomps
dec
aas
pop
test
jmp
shrb
stos
je
cmp
in
call
add
inc
daa
sbb
shll
or
inc
test
adc
add
roll
sbb
mov
shll
js
mov
dec
or
adc
ror
add
inc
pushf
out
sbb
push
neg
cmpsl
mov
xor
mov
jne
sbb
sahf
push
div
adc
add
add
clc
push
pop
popf
cli
mov
hlt
add
sbb
pop
jo
pop
loopne
inc
inc
xor
insb
loopne
int3
les
jno
loopne
sbb
out
push
push
lock
data16
add
xchg
adc
je
nop
inc
ja
xlat
lods
cwtl
mov
jge
mov
lods
enter
mov
cmp
push
shl
push
add
jp
inc
call
lret
lock
push
jns
or
popa
xchg
fadds
out
and
pop
outsl
subl
add
inc
xor
mov
sub
orl
push
or
lock
loopne
ret
test
xchg
jno
mov
fdivl
pop
les
ficompl
cmp
and
jbe
ja
scas
dec
sub
jecxz
pop
lods
ret
cmovnp
lahf
rolb
aaa
and
daa
adc
mov
add
ret
push
dec
adc
adcb
adc
icebp
sahf
jmp
lods
pop
fcomps
and
lahf
xor
mov
shll
mov
pop
test
leave
mov
lock
pop
cmp
mov
add
add
stos
xchg
mov
fsubl
in
stos
add
push
cmpsb
sbb
in
sub
inc
xor
inc
xlat
rorb
sub
cmpsl
mov
add
ljmp
movsl
and
sub
shll
ret
minps
cli
movl
loop
push
out
pop
push
cmp
outsb
mov
fsubrl
xchg
lret
cmp
pop
pop
pusha
fsub
dec
repnz
pop
pusha
jno
ret
add
fnsave
xor
pusha
loope
or
fnstsw
cwtl
call
add
ret
ja
pop
ltr
out
mov
and
add
ds
jecxz
push
xor
add
movsl
ret
xchg
imull
cmp
out
int3
mov
js
sub
sub
adc
mov
test
sbb
notb
xorl
or
sti
insb
pop
mov
int3
repz
outsb
mov
jmp
daa
enter
sarl
je
in
push
lea
andb
pusha
les
ud1
repz
add
cmp
push
repz
scas
fldt
xchg
add
hlt
and
inc
lock
cmpsb
cs
fsubl
sbb
out
sub
imul
sub
adc
pop
pop
out
xchg
mov
sbbb
icebp
inc
call
push
dec
sti
loopne
xchg
sub
std
ret
and
fwait
sub
mov
or
stos
xchg
shr
jnp
inc
or
out
sti
sub
dec
add
sbb
add
mov
decb
push
jl
cmp
notb
add
sahf
adc
and
in
outsl
fbld
mov
lds
dec
mov
repz
cmp
push
pop
sbbb
pop
inc
pop
dec
mov
adc
xchg
mov
std
mov
lock
or
repnz
cld
xchg
or
ja
lds
xor
lret
jns
insl
movb
adc
es
adc
in
fldl
jo
adc
dec
aas
xchg
add
sub
xchg
and
or
rcll
pop
sbb
ja
dec
pop
fisubl
pusha
movsb
mov
sub
aas
add
adc
roll
jle
ret
mov
xor
je
mov
or
xchg
jle
add
sbb
cmpsl
mov
call
gs
mov
mov
xchg
add
lea
mov
xorb
rolb
fdivrl
cmp
sahf
imul
push
push
pushf
xor
aaa
and
fbld
lret
popa
mov
test
jmp
rorl
mov
cwtl
cwtl
mov
sub
add
into
xchg
test
push
movsb
mov
cmpsb
adc
rcl
add
test
jg
inc
mov
imul
dec
inc
mov
push
push
inc
mov
jl
icebp
mov
out
ds
add
mov
fs
xchg
rcr
xchg
fxch
movsb
add
pushl
inc
verw
jl
add
adc
add
imul
push
jnp
ja
or
adc
mov
push
lods
aaa
insl
push
push
mov
lds
movsb
insb
repnz
roll
add
jne
out
push
sbb
jnp
imul
add
add
call
jp
negl
push
stos
dec
shlb
mov
pop
xor
mov
adc
xlat
les
jp
incl
mov
enter
inc
loop
test
es
pop
mov
pusha
mov
mov
add
inc
cmpsb
push
adc
clc
dec
mov
push
or
fimull
or
push
fstps
inc
or
outsl
push
repnz
popf
jp
inc
aam
adc
jnp
pop
rcrb
add
lock
push
add
inc
jo
pop
adcl
test
out
addl
insb
mov
insb
push
mov
cs
jne
in
jmp
popf
les
add
inc
inc
and
fs
ss
loop
fistps
dec
roll
xor
jo
dec
mov
in
pop
mov
je
pop
add
call
mov
xchg
je
jle
xchg
mov
rclb
jmp
jge
lcall
adc
inc
mov
jnp
bound
in
lods
dec
pop
cmp
mov
and
or
jle
inc
add
add
ret
xor
mov
mov
xchg
xor
push
push
add
lods
inc
dec
inc
dec
jne
dec
sub
cmp
xchg
mov
pop
lcall
in
aaa
hlt
gs
aad
add
shr
insb
addl
lret
mov
sbb
fisubs
out
bound
in
push
mov
rcrl
sbb
clc
pop
sti
pop
sbb
mov
lret
fsubs
cs
fcoml
loopne
int3
or
rorb
clc
fistpll
adc
je
dec
aad
loop
mov
movsl
data16
jp
imul
jmp
or
shl
pop
insl
call
add
xchg
jno
sbb
mov
pop
repz
das
sbb
decl
shrb
rcl
ficomps
aam
aaa
add
fnstcw
pop
popa
xor
les
ds
pusha
add
loope
sbb
out
out
push
sbb
dec
and
push
mov
xchg
jb
std
mov
add
mov
popa
sub
mov
add
mov
and
lcall
mov
push
out
cli
sbb
sbb
jl
jmp
push
push
lods
mov
shrb
jg
fcos
das
mov
lea
les
icebp
add
sub
inc
lods
and
loopne
jnp
sbb
xchg
sbb
nop
mov
stos
outsb
sbb
jno
pop
add
mov
xchg
bound
lods
in
adc
orb
add
scas
push
cld
pop
adc
xchg
mov
bound
xchg
movsb
mov
or
sarl
adc
ljmp
roll
scas
cli
adc
xchg
insb
and
xor
ja
repnz
mov
jmp
rclb
dec
cmp
and
pop
adc
ljmp
sbb
popa
mov
insb
shlb
or
fidivrl
or
pushf
ret
mov
aam
mov
cmp
xor
dec
gs
nop
mov
orb
add
mov
movsl
xor
out
xchg
fwait
movsl
mov
sub
cmp
add
sub
jmp
incb
mov
xor
push
push
jle
mov
mov
jp
xchg
inc
pop
or
jno
cmpsb
mov
mov
fcompl
xchg
adc
xchg
insb
push
pop
cmpsb
push
aaa
clc
inc
incl
cmp
aam
mov
mov
push
mov
xchg
jecxz
adc
mov
adc
in
sub
lods
leave
les
add
mov
xor
mov
call
inc
sub
loopne
ja
add
push
mov
or
rolb
lds
data16
xchg
shr
cmp
jl
mov
mov
jg
xchg
iret
xor
fwait
cwtl
adc
sarb
sub
out
xchg
mov
mov
pop
insb
dec
add
dec
ljmp
dec
cmp
arpl
xorb
jle
scas
pop
add
icebp
xchg
push
dec
je
pop
mov
mov
add
pop
lock
sbb
loop
jle
push
add
paddsb
andl
or
or
xchg
call
jmp
sub
cs
decl
and
or
out
jno
xchg
push
adc
filds
cmc
pop
hlt
pop
call
mov
inc
ffreep
xor
push
jmp
xlat
xchg
int
jns
xchg
cli
mov
jl
and
jle
lcall
xor
add
xor
jmp
popa
add
neg
dec
add
out
add
or
fisttpl
and
neg
dec
xor
or
adcb
mov
adc
cmp
pushf
pop
repnz
ds
xchg
clc
mov
inc
adc
fs
dec
sbb
xor
xor
inc
inc
lea
pop
sub
mov
movsbl
inc
cmp
or
cwtl
loope
xchg
or
ret
jle
mov
out
sub
xor
inc
lcall
or
mov
lock
ds
lcall
jecxz
xchg
es
cmpsl
or
fbstp
sub
sbb
idivl
xor
pop
add
lock
rolb
rorl
cmp
dec
add
mov
or
mov
mov
das
jge
or
loop
sub
fucomi
cld
jnp
or
aaa
adc
adc
sbb
sub
push
cmp
push
mov
mov
add
add
arpl
xor
jle
stos
inc
les
mov
loope
ljmp
mov
xor
in
aam
mov
imulb
pop
xor
jmp
push
sbb
mov
jg
adc
shll
mov
shll
push
xchg
inc
jecxz
lods
jns
mov
arpl
mov
jmp
add
stc
pop
ficoml
jo
push
fstp
push
js
lret
out
push
push
pop
push
mov
dec
add
mov
push
fcompl
repz
mov
mov
fmul
ljmp
xchg
dec
pop
into
clc
sti
cmpsb
sub
sbb
sbb
cmp
sbb
ss
loope
and
add
push
mov
mov
cs
stos
and
add
cmp
fdivs
xor
inc
xor
fistps
push
fldcw
add
divl
fbstp
mov
or
mov
adc
ja
stos
xchg
nop
fcomip
rcll
push
and
inc
sub
xor
xchg
fidivrl
pop
int3
mov
std
xorl
shlb
rcl
mov
insl
out
sbbb
insb
push
insb
ret
sbb
pop
push
bound
mov
inc
je
test
pusha
cmp
ja
inc
or
out
mov
mov
adc
cld
cmp
orb
rorb
push
add
pusha
repnz
cmpsl
rorl
adc
faddl
and
shlb
jbe
lds
sbb
repnz
sar
mov
in
fsubrl
and
out
mov
pusha
push
xor
insl
lahf
jg
cmp
lock
mov
ret
sar
mov
pop
mov
add
adc
ja
xchg
inc
sub
xchg
jbe
mov
pop
mov
jns
sub
pop
cmc
push
loopne
sbbl
and
pop
sti
andl
sub
cwtl
repnz
imul
inc
inc
or
test
ljmp
mov
push
popa
int
in
add
loope
cwtl
cmp
pop
aas
fmuls
je
test
and
sbb
lret
rclb
es
loop
adc
vhaddpd
xor
jbe
in
int3
es
out
add
popa
adc
mov
mov
mov
mov
sub
inc
jb
test
xor
lcall
inc
fdiv
fdivrs
adc
pop
movsb
xchg
add
cld
mov
outsb
jecxz
jecxz
and
call
sti
inc
pop
jb
shrb
loopne
fsubl
push
pop
cmc
pop
clc
adc
clc
loop
cwtl
aad
js
xor
fildl
fwait
mov
pop
cmp
rcll
xchg
outsb
push
test
jecxz
or
ljmp
imul
enter
and
loopne
push
daa
leave
es
and
cmpl
outsb
mov
fs
push
adc
or
and
xchg
xchg
dec
jl
ss
xor
mov
inc
or
adcb
xor
and
sbb
mov
sub
lods
clc
add
mov
xchg
mov
xchg
movsb
add
pop
fs
fwait
imul
out
mov
jmp
push
in
xor
cmp
push
jmp
aas
pop
decb
daa
popa
xchg
jmp
mov
xchg
out
xchg
notl
ret
adc
pop
sbb
xchg
xor
or
std
sahf
addb
xor
daa
xor
cmp
jecxz
and
and
inc
cmp
cmp
fsubl
push
cmpl
sub
pop
shlb
mov
pop
ljmp
xchg
ficompl
adc
test
dec
mov
cmp
fucomip
or
mov
add
or
mov
fisttpl
ret
sbb
jle
in
jo
ret
adc
jo
mov
dec
hlt
mov
cld
aaa
mov
mov
add
aam
pop
cli
psllw
cmp
mov
sub
es
push
adc
push
cs
loopne
cld
cmp
xchg
pop
jl
adc
jl
clc
sti
cmp
lcall
subl
lret
es
sarb
outsb
std
add
or
aam
mov
movsb
jmp
test
nop
jecxz
mov
test
sbb
sahf
pusha
inc
push
leave
lods
cli
stos
push
int
adc
fiaddl
xchg
pop
mov
test
aad
cli
pop
icebp
mov
dec
hlt
inc
inc
ret
fidivrl
aam
repnz
or
push
mov
pop
add
cmp
jge
jne
test
inc
js
pop
mov
jmp
shrb
jp
pusha
imul
mov
add
int3
cmp
scas
fidivrs
sub
dec
mov
adc
jg
jecxz
sbb
movsb
fisubs
daa
mov
inc
das
js
add
loopne
and
and
dec
jne
jo
mov
into
mov
fwait
mov
fs
jo
lret
mov
jg
add
nop
lds
arpl
imul
mov
adc
fs
mov
push
push
jg
mov
inc
xlat
xchg
mov
inc
adc
sub
mov
sbb
fidivs
mov
xchg
cmp
fimuls
mov
xor
mov
mov
jno
pop
fdiv
xor
fiaddl
insb
pop
incb
and
jb
loop
jmp
scas
dec
decb
hlt
adc
jbe
inc
fwait
inc
ret
movsb
enter
mov
xorl
cltd
or
icebp
mov
leave
clc
lahf
add
or
mov
fwait
jne
fistpl
cmp
sbb
sbb
leave
mov
rolb
insl
ljmp
sbb
mov
dec
not
sub
sbb
adc
mov
cli
pushl
add
sbb
inc
push
fmull
lret
inc
pop
bound
push
loop
push
aad
jnp
mov
stos
dec
cli
cmpb
in
xor
inc
sbb
push
mov
mov
ret
or
or
or
stos
xchg
cmp
push
push
pop
hlt
int3
lcall
cmc
dec
add
or
das
aaa
rorl
mov
mov
rclb
mov
or
jbe
mov
push
decl
sti
xlat
outsb
sti
add
ficoml
mov
loopne
jmp
pushl
sbb
icebp
mov
push
mov
out
in
mov
sbb
pop
mov
aad
push
popa
mov
mov
push
or
mov
mov
sbb
jecxz
insl
mov
pop
imul
sbb
sub
or
cwtl
pop
push
xchg
cmp
pop
sti
lret
push
pushf
cmc
jae
fs
daa
js
stos
lods
scas
mov
cmpsb
mov
push
push
xor
sbb
mov
iret
rolb
xlat
add
push
ficoms
pop
leave
push
sub
lock
hlt
push
mov
or
js
dec
fildl
stos
jmp
movsb
les
call
lret
sbb
icebp
lock
cmp
lret
gs
scas
icebp
test
outsb
frstor
cmp
push
scas
fsubl
out
or
jne
push
cmc
jp
cld
fdivs
ret
pop
sbb
fisubs
out
unpckhps
sahf
sahf
and
pop
jbe
loop
bound
pop
fstpt
adc
ja
xlat
push
int3
and
cli
push
int
xchg
fisubrl
mov
repnz
lock
or
cli
push
fistps
mov
jo
sbb
mov
or
or
ljmp
movsb
iret
fwait
pop
sbb
ret
ljmp
or
add
cmp
pop
insb
or
fwait
sub
sahf
or
outsl
fwait
cmp
mov
nop
push
add
sub
loope
add
int
push
mov
add
xchg
dec
fwait
or
outsl
mov
sbb
addr16
js
popa
mov
push
shll
xchg
sbb
push
cli
mov
repz
mov
negb
in
cli
sarb
add
pop
push
pushf
jle
sbb
jl
push
fcomps
sbb
dec
je
mov
push
xchg
call
das
and
out
or
jp
sbb
mov
push
lock
lret
or
insl
jge
cmp
xor
fistpl
cli
daa
jne
int
test
adc
mov
into
gs
fsubrl
cmp
fwait
push
data16
push
subl
iret
aaa
loope
in
outsb
pop
jmp
and
clc
int
sbb
iret
bnd
pop
cmp
pop
cld
push
pop
sti
pusha
dec
loop
jl
in
pop
lcall
lcall
pop
mov
insb
pop
pop
inc
cmpsb
out
mov
pop
sub
loop
fadds
out
add
mov
jae
addb
inc
rcll
dec
inc
jl
into
insb
fsubs
test
push
out
repnz
cmp
cld
gs
insl
jne
mov
sbb
or
ss
incl
data16
dec
mov
mov
sbb
ds
popa
jecxz
jmp
xchg
in
mov
frstor
out
cli
sub
dec
cmp
gs
mov
dec
mov
mov
loop
xor
pop
addb
mov
sub
scas
daa
or
sti
ret
sub
or
adcb
leave
dec
std
mov
dec
and
std
es
mov
daa
add
movb
movsl
cmpsl
popa
fbstp
jb
mov
in
out
push
mov
inc
xchg
orb
sbb
add
push
dec
loop
jp
add
xor
push
stos
pop
orb
into
or
adc
mov
decl
lahf
test
std
pop
sahf
push
fstl
fstps
or
mov
addb
shll
lcall
adc
or
mov
shrl
fcoml
or
sarl
mov
or
imul
jle
xor
dec
sub
mov
xor
ss
or
adc
add
add
fimuls
cmpl
mov
shll
xchg
mov
into
xchg
sbb
fistpll
pop
inc
ljmp
mov
add
stc
jle
imul
xchg
push
xchg
fimuls
fadds
jge
mov
push
xchg
mov
pop
add
push
push
test
test
fs
fdivrs
mov
jle
cmp
cs
xor
jmp
aam
test
out
jecxz
ret
leave
and
xorb
pusha
rorl
xchg
fstpt
cld
jl
mov
mov
jg
sub
jge
dec
insl
push
mov
mov
xlat
xchg
cwtl
rorl
fidivrs
add
adc
pop
es
mov
add
dec
push
test
cld
xlat
cmp
sub
xchg
sub
dec
in
imul
and
add
sti
jns
enter
pop
call
jecxz
cmp
pop
call
mov
adc
jl
jl
sbb
pusha
sub
and
subb
fsubrs
add
stos
arpl
mov
cmp
add
xchg
dec
add
in
pop
popa
add
stos
dec
rcrb
cmp
incl
jo
cmp
mov
sbb
movsb
fs
andl
xchg
nop
push
mov
adc
call
test
cmc
jp
out
call
imull
jp
push
popf
fdivrs
outsb
inc
cmp
jl
jo
aas
test
jns
addb
and
lods
fcomp
bound
mov
iret
and
push
ds
cwtl
sar
or
push
sarl
mov
xor
loopne
call
addb
adc
mov
movsb
jnp
mov
lock
ret
test
lods
pusha
pop
mov
in
clc
stos
mov
out
loope
dec
mov
imul
add
bound
ret
test
sbb
mov
int3
stos
sbb
cmpsl
xchg
mov
loopne
xchg
rolb
popf
std
dec
dec
aas
jecxz
adc
pop
add
jo
into
les
add
neg
add
fadd
mov
jge
enter
xor
and
mov
mov
subb
mov
add
xchg
sti
incl
inc
sbb
and
sbb
sbb
imul
sbb
fs
dec
incl
stos
fistps
adc
adc
fucomp
sub
inc
push
movsb
mov
push
jle
dec
aaa
mov
fwait
lock
jle
sar
daa
cmpsl
call
sub
adc
test
inc
xor
dec
dec
push
clc
mul
push
ja
scas
ljmp
jbe
pop
pushw
push
adc
ret
mov
mov
jne
push
push
sub
inc
push
dec
ret
push
jg
je
xchg
js
fxch
bnd
lds
push
mov
jmp
negl
outsl
test
ficoms
arpl
and
mov
mov
fnsave
inc
decl
dec
push
addb
scas
add
adcl
cmpl
out
sub
add
mov
das
and
cmpsl
jnp
clc
inc
xchg
pop
sbbl
mov
pop
and
push
mov
sbb
adc
scas
clc
mov
shr
test
insb
push
cli
adc
adc
les
out
xor
ljmp
mov
in
mov
xorb
and
lcall
std
adc
ror
call
inc
daa
or
adc
in
ljmp
cli
sub
cmp
cmp
mov
mov
test
push
lock
out
js
mov
fstpt
ficomps
repz
je
fists
mov
shrb
cmp
add
jb
movsl
aad
fdivrs
lret
scas
test
pusha
mov
pushf
sub
xchg
mov
push
cmpsl
pop
loopne
rorl
adc
mov
pushf
insb
dec
mov
ljmp
es
int3
sbb
cli
sbb
push
sub
sub
loope
fdiv
std
jl
cmpsb
pusha
into
xchg
mov
ljmp
dec
ja
cmp
ret
pop
ret
mov
ret
and
imul
push
cli
leave
mov
jecxz
loopne
stos
sahf
out
pop
idivb
into
repnz
loop
incl
es
mov
call
dec
clc
ljmp
orb
mov
or
sub
fadds
fmull
mov
mov
xchg
test
rcl
xor
sahf
pop
shrb
add
mov
std
dec
mov
adc
fbstp
dec
mov
xchg
mov
jo
adc
js
cmp
in
scas
outsl
stos
add
xchg
fcomip
and
dec
fisttps
loope
aam
jecxz
xchg
mov
fdivrl
inc
xor
sub
mov
cli
lock
cli
fists
inc
in
dec
call
fisttps
push
pusha
insb
mov
mov
pop
cmp
mov
jno
sbb
dec
fisttpl
pusha
pop
sti
fists
add
icebp
insl
add
xchg
xchg
pop
pusha
mov
stc
addr16
sbb
and
out
imul
mov
inc
in
ret
jmp
push
pushw
das
xchg
fadds
ret
add
jmp
pop
or
cld
cli
inc
xchg
inc
sbb
stc
fsubl
or
pop
pop
dec
cmp
add
sbb
mov
xor
adc
ss
hlt
cmc
and
loopne
mov
out
inc
add
sub
movsb
mov
jo
xor
adc
mov
repnz
push
cmp
push
mov
push
loope
fdivr
adc
ret
xor
aam
lcall
mov
add
mov
lcall
sub
icebp
insb
jp
ljmp
push
in
cwtl
repnz
or
xor
sbb
int3
mov
addr16
adc
push
js
hlt
sbb
xor
roll
test
sub
testl
pop
js
adc
cltd
mov
add
in
pusha
or
rorl
and
push
int3
mov
jge
lods
xchg
mov
in
and
jno
mov
add
movsl
ret
push
adc
adc
mov
sub
lret
or
push
mov
sub
mov
enter
push
fimuls
orb
xchg
out
cmp
mov
inc
jmp
stc
test
dec
cs
push
das
cmpsb
mov
add
pop
mov
aaa
jle
add
jo
cmp
sub
imul
xchg
ljmp
enter
pop
out
mov
test
nop
jle
pop
dec
arpl
adc
and
cwtl
and
idivb
ljmp
inc
cmp
mov
pop
sahf
mov
lods
and
enter
arpl
push
xor
push
enter
fdivr
sahf
jg
mov
sub
mov
ljmp
iret
in
adc
push
loopne
xor
dec
mov
sahf
xor
les
inc
adc
js
add
dec
adc
lods
outsb
repnz
out
dec
add
daa
pop
in
jmp
jg
jl
xchg
faddl
sub
xor
das
jne
dec
pop
leave
ret
fidivrl
scas
xor
add
adc
rol
int3
shl
add
mov
inc
adc
cltd
lret
push
push
dec
adc
fcmovnb
lods
adc
inc
les
dec
insl
cmp
inc
pop
sbb
les
test
xchg
or
mov
fdivl
pushw
jns
dec
into
rclb
out
inc
or
in
jnp
xlat
adc
or
mov
push
sbb
jno
jns
cltd
xchg
shrb
and
clc
ljmp
mov
mov
sub
ljmp
and
dec
mov
sbb
repnz
and
imul
sbb
cmp
std
lcall
in
sub
inc
xorl
cli
shll
adcl
movsl
inc
les
sbb
dec
loopne
jb
repz
xchg
xchg
loopne
cmpsb
fs
movsb
push
jl
pop
call
push
or
push
push
in
sub
adc
inc
dec
lea
push
adc
shr
and
adc
adc
jp
decl
push
push
les
lret
pushf
jne
adc
clc
sub
arpl
clc
sbb
in
sub
test
sub
sbb
fsubrl
les
ds
xchg
and
roll
out
adc
ja
ret
orb
add
pop
sbb
in
push
push
dec
inc
or
jb
mov
lock
dec
loop
call
in
lea
mov
xlat
pushf
hlt
mov
jecxz
and
cmp
loop
icebp
jo
sbb
mov
cwtl
adc
pop
jne
jo
je
sbb
rcll
mov
mov
sub
or
and
inc
lods
or
jo
scas
cmp
fimull
cli
cmpl
xor
call
out
fs
adc
repnz
popl
pop
mov
mov
pop
mov
jecxz
cmc
push
iret
int3
xor
mov
shr
xchg
xchg
pop
fidivl
jbe
or
in
sbb
lret
adc
ja
pop
inc
dec
xchg
sub
cmp
lea
clc
data16
xchg
addb
cmpsl
mov
enter
hlt
mov
mov
inc
jmp
sahf
shr
clc
mov
call
imul
mov
sbb
call
sbb
dec
fidivrs
or
fisttpl
ja
stos
dec
dec
add
mov
addr16
sub
mov
sub
pop
mov
mov
sbb
add
add
cmp
jmp
or
mov
loope
icebp
mov
scas
sub
xchg
jne
ret
push
pusha
jne
enter
push
cmp
or
call
xchg
cmp
fdivs
cmp
pop
xor
inc
add
hlt
ficoms
cltd
inc
xlat
call
cmp
subl
dec
adc
mov
sub
jno
add
pop
repz
scas
arpl
ja
or
and
mov
bound
shlb
and
dec
push
push
scas
call
pop
out
or
or
cmc
out
aam
filds
je
rorb
cwtl
cmp
mov
and
popa
mov
add
addr16
add
pop
inc
loope
mov
movsb
xchg
test
out
aam
mov
push
mov
cltd
adcb
add
mov
add
mov
outsb
ss
call
add
lock
pop
add
fstpt
orb
pop
and
pop
hlt
add
pop
mov
fs
sbb
mov
xchg
mov
adc
call
loope
add
in
dec
fisttpll
scas
sti
and
add
xchg
push
or
inc
cmp
add
popa
insl
mov
das
cwtl
scas
and
jmp
aad
into
cmp
mov
test
std
xchg
test
add
dec
dec
sub
stos
std
pop
mov
cmpsb
popf
push
test
dec
les
frstor
loopne
pop
daa
mov
mov
sub
mov
mov
add
xor
mov
cld
or
cmp
jo
in
xorb
pop
sub
loope
cmp
int
ljmp
das
xor
rorl
fsubr
add
rol
fdivrp
pop
dec
test
ja
add
das
adc
outsl
pop
pop
stos
add
in
jl
iret
test
lock
hlt
or
orb
outsl
test
cmp
dec
or
and
aas
jb
ret
cmp
mov
push
inc
sub
push
add
add
out
adc
cmpsl
pop
jle
fwait
sti
push
insl
pop
jge
gs
xor
jge
cwtl
out
and
xchg
jns
mov
mov
push
popf
add
rcll
xchg
js
add
and
jmp
push
fdivrs
adc
incl
push
enter
mov
fsubrp
loope
jl
jmp
dec
fidivl
in
ja
jmp
pop
mov
jns
std
call
add
nop
push
add
fcomps
mov
cmp
adc
subl
rcll
cs
es
push
out
xchg
push
stos
imul
scas
adc
cmp
mov
or
lods
sarb
fmull
ret
mov
cs
add
adc
mov
negl
movsb
add
cli
sbbb
adc
xchg
imul
out
imul
push
lock
push
and
fsubs
mov
ljmp
test
testb
dec
rolb
hlt
mov
cmp
adc
cmp
and
mov
xor
outsl
pop
hlt
lods
mov
pop
pop
mov
mov
mov
jle
ljmp
arpl
cmpsb
fistl
sub
and
adc
scas
ss
pop
sbb
pushf
adc
pop
add
mov
icebp
sbbb
mov
lods
xor
testb
xchg
mulb
and
sub
cmp
pop
mov
xorb
cmp
pop
ret
or
jmp
hlt
mov
arpl
test
loope
pop
pop
mov
push
clc
xchg
sbb
inc
push
or
push
jb
inc
mov
mov
clc
test
insl
add
or
xchg
mov
jbe
icebp
fdiv
lcall
out
aaa
mov
push
sbb
fistps
loop
test
cmp
outsl
xor
xor
mov
sbb
daa
pop
xchg
adc
loop
mov
or
or
aad
fsubrl
decl
mov
push
lcall
xor
xchg
mov
lock
les
test
out
cmp
sahf
nop
lret
aam
fsubl
aad
inc
loopne
jbe
push
sub
aad
push
cs
push
pop
loop
mov
dec
sahf
lcall
cmc
data16
mov
les
nop
sbb
or
sbb
or
push
push
jb
cmp
pop
push
mov
or
clc
and
add
cmp
js
sbb
jo
out
gs
xchg
sub
out
icebp
int
filds
or
sub
jecxz
clc
pop
test
ds
into
out
add
jnp
ret
pmaddwd
xchg
out
and
leave
sbb
cli
ljmp
push
insb
xchg
inc
lods
add
cmc
dec
std
test
mov
idivb
push
sbb
mov
cmp
loopne
sub
pop
icebp
inc
pop
push
outsl
push
mov
aas
cmpsb
out
add
pop
je
mov
daa
lcall
mov
lds
add
ss
jl
scas
mov
jmp
in
xchg
xchg
add
or
loope
mov
inc
cmc
sbb
mov
decl
lret
loopne
mov
pop
mov
loop
std
dec
fdivrl
loope
faddl
outsl
aaa
std
mov
sbb
outsb
and
in
lock
out
mov
hlt
push
jg
mov
pusha
inc
mov
dec
xchg
mov
sbb
or
push
add
add
ss
dec
call
sub
dec
cld
xchg
inc
fisubrs
push
cli
mov
mov
repz
jmp
test
adc
js
fwait
jle
mov
daa
mov
movsl
gs
cmp
sub
push
cli
jno
in
mov
adc
pop
cmp
inc
std
rol
cmc
pusha
stos
jp
push
nop
jle
insb
out
cmp
pop
in
jl
or
xchg
out
inc
aas
jge
movsl
pop
int3
loopne
js
lock
inc
fiadds
scas
outsl
xor
clc
jmp
mov
movsl
xchg
lret
push
push
cwtl
cmc
fisttps
pop
lret
adc
push
xchg
enter
dec
adc
std
xchg
out
xchg
pusha
pop
and
xchg
add
jb
insb
clc
out
mov
dec
cs
xlat
inc
jle
outsl
add
inc
add
jne
push
cmp
mov
xchg
fmuls
dec
adc
cmp
loop
jle
and
pop
incl
push
lret
pop
lods
xchg
inc
test
xchg
mov
sarb
shll
and
xchg
ss
aaa
adc
mov
mov
mov
shrb
pop
ret
hlt
add
and
sbb
outsl
dec
into
frstor
xchg
aad
test
dec
clc
sbb
jae
mov
outsl
mov
shl
adc
ret
popf
in
cmpsl
pop
xchg
pop
inc
lock
pop
je
aas
mov
inc
mov
repnz
out
mov
out
and
imul
jo
mov
mov
fwait
or
lock
in
jl
mov
xor
in
imul
cli
outsl
mov
lods
ret
push
lock
jbe
je
pop
pop
lea
xchg
dec
cmp
cmc
loop
loopne
loopne
cwtl
shlb
out
sub
into
aas
loope,pt
ret
js
push
mov
mov
sub
out
cli
js
jae
mov
xchg
push
dec
xor
outsl
xor
int3
mov
mov
add
fadd
or
fwait
pop
inc
in
inc
jb
sarb
pop
pop
lock
loopne
inc
test
mov
jecxz,pt
xor
fistl
push
sub
mov
orb
inc
push
mov
ljmp
aaa
addl
daa
push
scas
into
push
rcrb
int
aad
mov
or
std
dec
cmp
mov
test
rcr
and
ljmp
dec
mov
cmp
outsl
dec
jne
and
add
add
out
add
mov
xor
js
add
divb
arpl
mov
add
out
mov
mov
mov
pop
lods
add
decl
and
filds
sub
cmp
sbb
sarb
je
lds
pop
dec
xor
sub
push
cld
adc
and
jl
pop
inc
cmp
push
push
call
mov
rorb
addr16
jmp
jo
imul
fadd
fildl
mov
push
pop
ret
adc
outsl
add
xor
sti
jecxz
jne
jbe
imul
pop
mov
pop
lods
ret
in
mov
jl
aaa
ss
jmp
lods
cwtl
mov
add
test
and
inc
push
out
mov
je
mov
test
jnp
lahf
rcrb
add
push
pop
loopne
cld
out
pop
xchg
mov
mov
mov
dec
dec
dec
loopne
sbbb
lahf
ret
inc
or
pop
adc
cmp
jg
jmp
bound
adc
scas
push
push
jb
sarb
ret
or
aam
lea
stos
push
int
mov
adc
scas
insb
ss
fimuls
push
pop
jno
adc
movsb
fwait
sahf
sbb
ret
das
clc
mov
into
ss
pop
sub
jl
aam
ret
mov
outsl
psubb
mov
jne
lea
push
imul
xchg
mov
xor
push
or
aam
popf
rcr
test
out
adc
push
pop
cld
pop
add
push
lods
inc
movsl
inc
add
inc
iret
mov
pop
inc
push
push
sbb
adc
notl
sub
fidivl
inc
sbb
mov
ss
stos
mov
pop
xchg
ds
stc
stc
or
test
add
and
mov
and
cwtl
push
pop
adc
repz
push
jbe
out
and
subl
lcall
push
mov
ret
mov
pop
mov
sub
push
loopne
in
jge
xchg
ret
sub
add
adc
mov
pusha
xchg
call
movsb
icebp
mov
fisubrs
add
push
cli
outsl
xchg
lcall
cmp
adc
sbb
xchg
or
outsb
ljmp
rcr
les
loope
adc
sbb
sbb
xor
pushf
movsb
aaa
cmc
incl
add
adc
pushf
sti
hlt
and
jo
jbe
inc
xor
cli
popf
lock
push
adc
std
andb
dec
lock
cs
push
dec
cmpsl
orl
sbb
stos
loopne
jle
rolb
jle
inc
into
and
ja
mov
dec
sub
mov
push
cmp
xor
test
nop
push
scas
adcb
push
shlb
inc
jg
jae
dec
gs
decl
push
leave
pushf
enter
inc
jnp
sbb
repnz
cmp
jp
call
mov
test
sub
mov
insb
cwtl
mov
orb
vmovsd
jno
inc
xchg
aas
lcall
mov
pop
cld
sbbl
push
fwait
pop
loopne
cmp
mov
ficomps
fadds
pop
sbb
and
int
mov
jbe
scas
sbb
mov
fldt
int3
adc
xorb
cmp
cmp
ljmp
incl
ret
in
push
imul
xor
add
idiv
cld
add
pop
cld
cwtl
cmp
pop
lock
inc
xlat
pop
decl
add
sub
mov
outsl
sahf
adc
test
sbb
pop
pop
faddl
sarl
fadds
mov
lahf
fiadds
out
mov
popa
add
cmp
pop
hlt
sti
ja
mov
mov
cmp
push
pushf
cmp
incl
test
mov
jle
loopne
lds
xor
outsl
sahf
dec
jnp
fwait
lret
clc
jg
adc
pusha
xor
mov
rcrb
ret
cmp
loop
add
jp
rorb
jae
cmp
xchg
push
add
pop
pop
lock
add
xchg
bound
xchg
mov
out
clc
call
add
push
and
push
sar
jb
pop
arpl
in
jg
js
shll
cmp
cmp
push
push
lea
or
enter
mov
out
mov
divb
dec
mov
out
dec
dec
pop
rcll
mov
int3
movsl
mov
test
clc
incl
jno
js
dec
mov
fistps
cs
decl
ss
sbb
mov
aad
cli
mov
inc
repnz
xor
xchg
adc
iret
mov
xchg
xor
shlb
clc
incl
add
out
mov
ljmp
into
xchg
cmp
push
mov
cmpsl
inc
xorb
not
add
mov
aaa
adc
mov
test
pop
jo
divb
in
in
scas
xor
add
lcall
push
push
jecxz
ja
lret
mov
ret
pop
jo
test
jo
les
ljmp
popa
and
ss
pop
fisttpl
inc
cmp
push
jae
jg
std
into
rcrl
clc
pop
lea
mov
or
loopne
sub
bound
test
mov
push
cmp
dec
pop
nop
jecxz
pop
mov
movsl
jmp
sbb
dec
push
leave
fisubs
loopne
sar
clc
loopne
push
cwtl
cwtl
int3
cmc
jp
dec
add
sar
pop
test
cwtl
jl
jno
repnz
fldenv
inc
dec
jmp
xorb
roll
mov
xorb
jnp
add
adc
xor
add
jno
jno
sub
call
sub
aad
sbb
dec
loop
icebp
and
sub
sar
and
adc
pop
and
icebp
xlat
or
dec
in
pop
push
push
into
cmp
scas
cli
outsl
push
xchg
add
sub
aaa
inc
pop
jae
test
shl
pop
out
test
add
push
sub
adc
jbe
nop
mov
jo
pusha
decb
lret
scas
xchg
pop
roll
adc
movsb
ss
dec
ds
inc
xor
jl
pop
sub
call
lea
adc
adc
push
cli
pop
icebp
outsl
xchg
lret
cmpl
xor
lret
mov
adc
mov
mov
mov
ficoms
mov
pop
lock
add
push
stos
jg
and
xor
cld
xchg
test
enter
sub
and
addb
push
daa
pop
inc
in
pop
outsl
fmuls
dec
dec
cmp
ret
xor
adc
ja
sbb
cmp
and
fildl
ret
fcomps
std
pop
sbb
add
repz
incl
cwtl
add
inc
cli
outsb
add
mov
mov
fwait
icebp
das
js
mov
ljmp
dec
jp
xchg
out
mov
loopne
jg
mov
sub
in
std
out
lods
cmp
push
out
add
ljmp
sti
dec
fbstp
mov
and
add
inc
push
mov
sub
es
decl
shlb
cmp
test
iret
icebp
and
jge
mov
add
out
cltd
sub
jbe
out
in
sbb
inc
inc
and
inc
insl
dec
pop
dec
outsb
add
movaps
cld
addr16
mov
jge
cmpsb
mov
adc
fisubrl
jne
jnp
adc
cmp
shr
cmp
in
push
sarb
add
and
int
dec
cmp
testb
js
pavgb
xor
sub
sarb
inc
and
jle
bound
cmp
mov
push
lods
xor
jae
shlb
mov
add
sub
dec
js
inc
ret
push
shrb
adc
in
mov
ss
nop
stc
and
or
in
in
fcoms
push
scas
adc
mov
fidivrs
mov
sub
add
mov
add
neg
hlt
or
jbe
ficomps
or
outsb
or
or
xchg
adc
shl
and
pusha
lods
pop
add
add
shl
cli
lcall
jg
mov
shlb
ja
sub
or
mov
rcrl
pop
dec
push
mov
cmp
mov
push
dec
aam
rol
std
pop
dec
aam
or
arpl
and
pusha
out
xchg
sbb
imul
dec
or
and
packssdw
mov
int3
mov
std
sbb
mov
add
lea
mov
hlt
movups
inc
xor
sbb
clc
xor
pop
rol
cmpsb
call
mov
out
mov
lea
cs
push
sbb
fiadds
out
repz
lret
roll
repz
inc
rolb
rcl
sub
data16
enter
and
inc
sbb
mov
xor
popf
aaa
subb
lea
rcrl
sub
sub
pusha
data16
leave
mov
inc
jbe
inc
loop
xor
jl
dec
dec
mov
mov
jecxz
insl
xor
pop
pop
hlt
lahf
cmpb
test
adc
and
adc
ret
mov
fwait
int3
loope
xchg
or
inc
clc
xchg
dec
inc
ss
or
xchg
test
aas
icebp
sub
ret
and
pop
lods
mov
pushf
repz
and
sbb
sbb
and
mov
jmp
inc
sbbb
sbb
inc
jp
add
mov
add
mov
inc
adc
push
imul
jns
xorb
jnp
mov
out
popa
inc
orb
fnstsw
xchg
pop
fsubrs
mov
into
and
adc
arpl
insl
jb
inc
jmp
sub
fmuls
lret
adc
hlt
call
addb
add
lods
int3
mov
mov
xchg
negl
or
xor
test
fldenv
and
sbb
stos
clc
dec
push
push
mov
add
daa
xor
outsl
sbb
inc
scas
or
icebp
inc
mov
xchg
adcb
testb
and
mov
jmp
xchg
xchg
pop
jnp
mov
cld
adc
cli
or
xchg
pop
not
dec
add
loop
pop
mov
mov
inc
addl
jmp
mov
push
or
inc
lret
mov
push
sbb
inc
add
ret
cmpsb
xchg
mov
push
xor
popa
js
inc
xchg
jns
jne
lock
call
adcb
adcb
cltd
xchg
nop
push
push
push
std
test
jae
sbb
imul
mov
sub
aam
fildl
stos
push
push
dec
hlt
add
push
mov
hlt
testb
pop
sbb
inc
pusha
push
pop
orl
orb
aaa
cltd
outsb
sub
cmc
jbe
mov
fidivs
xor
pop
sub
inc
sub
rcl
sbb
mov
test
add
andl
test
loope
hlt
mov
mov
mov
sub
adc
cli
ljmp
jbe
lret
push
add
sti
rcll
xchg
and
dec
rcr
and
mov
and
aaa
popa
cld
test
dec
sub
imulb
and
mov
dec
cld
inc
out
and
xorl
mov
push
lds
test
sbb
add
orl
xchg
or
jne
call
mov
std
xchg
add
and
call
add
jno
ss
stos
icebp
add
inc
test
xor
pop
repz
cmp
jnp
sub
ret
mov
push
ss
scas
sbb
xchg
mov
lock
cld
sbb
call
mov
in
add
pop
mov
cltd
jnp
and
rol
decl
stos
aam
xchg
jo
xorb
sbb
jne
gs
pop
xchg
and
incl
insb
data16
push
lcall
inc
xchg
jae
jo
sub
in
loope
xchg
add
test
adc
fldt
mov
insb
cwtl
push
clc
inc
jmp
adc
jmp
mov
or
jl
outsl
pop
lahf
adc
dec
repnz
push
das
fldl2e
jp
clc
out
push
cmp
add
sub
push
cltd
push
xor
incl
inc
sarl
sub
test
outsb
add
or
or
icebp
or
imul
mov
dec
cmpsl
lret
fwait
mov
mov
jmp
pop
ljmp
in
mov
outsl
fsubr
add
jo
and
ret
outsb
adc
fbld
adc
rol
incl
lock
jbe
xchg
ds
pop
mov
test
movsb
fidivl
mov
pop
xchg
movsb
cmp
daa
add
cli
add
sbb
es
mov
mov
pop
cmp
repz
xor
mov
divl
mov
hlt
jg
out
clc
xchg
bound
pop
outsb
js
push
or
xchg
imulb
lahf
mov
xor
mov
pop
mov
ret
in
lock
inc
mov
jo
ja
scas
jp
add
adc
shll
call
pop
icebp
lcall
cmpl
out
pop
sar
mov
aas
aad
jae
outsl
and
or
sbb
dec
stos
stc
movsb
sarl
clc
outsb
inc
cs
sub
or
cmpsb
lock
mov
dec
addb
xchg
hlt
iret
out
pop
ja
shrl
xchg
aam
inc
ljmp
mov
push
sbb
arpl
lock
jecxz
lds
jbe
add
sbb
cmp
push
mov
xchg
jo
mov
xor
and
push
rorl
call
mov
cmpsl
nop
or
xor
inc
clc
out
push
inc
das
push
cwtl
sub
or
out
pop
out
cmp
inc
mov
shlb
xlat
lods
fimull
inc
repz
out
les
mov
enter
jnp
cmp
ret
add
sub
adc
aad
sub
sbb
lock
leave
xor
add
mov
aam
test
mov
ret
mov
and
or
dec
jg
out
andb
mov
mov
mov
inc
dec
mov
mull
push
sahf
jo
mov
sbb
push
sub
adc
push
xchg
aam
add
sub
repz
xchg
adc
or
das
sub
jg
fistpll
rcrb
fwait
jae
in
jmp
mov
push
add
sbb
mov
mov
adc
inc
pop
loope
sbb
test
mov
orb
iret
push
mov
and
insb
mov
inc
ret
mov
ret
dec
dec
incl
fdivp
lahf
int
push
add
in
xor
mov
stos
xor
and
inc
loope
cmp
mov
neg
daa
xor
shlb
aaa
lods
fnstcw
push
xor
incb
xor
popf
loopne
stc
dec
sbb
add
dec
aam
fbld
scas
out
add
dec
xchg
clc
adc
test
adc
out
dec
xchg
fsubs
inc
xor
fidivl
loopne
mov
fcomip
sub
call
xor
sub
dec
hlt
call
jne
addr16
popa
and
stos
lock
or
outsl
pop
aaa
scas
lock
lods
jecxz
div
xchg
jmp
outsb
push
mov
lods
cld
add
aaa
mov
jl
pop
dec
mull
adc
and
aad
js
adc
and
mov
push
mov
das
pop
and
test
clc
sbb
push
push
cltd
cmc
pop
add
sub
lods
mov
dec
shrb
std
mov
lods
add
push
pusha
and
xchg
cmp
mov
roll
les
jb
mov
fsts
push
jo
dec
daa
loope
mov
xchg
sbb
pop
lahf
arpl
test
adc
pop
outsl
add
adc
xchg
ret
xor
cld
ret
pop
inc
push
sahf
loopne
mov
ret
aad
call
dec
clc
enter
mov
dec
xor
cmp
push
or
cmp
jbe
andl
xchg
insl
neg
pop
pop
or
nop
inc
out
loop
add
and
jmp
mov
pop
push
pop
add
mov
in
adc
rorl
outsb
sbb
in
jge
ds
jno
pushf
inc
add
cld
sbb
mov
push
push
iret
push
sti
aaa
enter
and
mov
and
inc
hlt
pop
sarl
aad
imul
pop
addl
pop
push
inc
cmpsl
clc
add
mov
ret
dec
push
cwtl
testb
into
jmp
js
cmp
or
call
dec
ret
inc
and
adc
adc
test
mov
or
adc
pop
or
dec
ret
push
inc
data16
pop
out
inc
and
sub
xor
jne
lods
add
sbb
push
shlb
mov
popa
rcrl
add
mov
aad
popa
fistps
fmull
jl
int
push
xor
outsl
mov
shlb
mov
ds
pop
cmpsl
fsubrs
out
in
das
push
pop
sub
or
sub
lahf
add
lock
gs
mov
int3
popa
add
mov
push
mov
xor
outsl
dec
lock
jl
push
and
out
rcr
fwait
pop
aad
pop
dec
xlat
mov
daa
add
xlat
pop
aam
jnp
loopne
adc
fsubl
rcl
lahf
out
faddl
mov
jl
imul
insb
xchg
arpl
iret
movl
add
or
xchg
and
into
pop
xchg
sbb
add
pop
cwtl
push
sbb
add
cmp
pop
lret
mov
into
loop
fdivl
out
inc
push
cmp
in
loop
or
pop
inc
fcoml
test
xor
pushf
push
int3
xchg
lea
jne
ret
push
sub
pop
xor
dec
popf
sbb
std
sbb
inc
xchg
push
or
ss
or
xchg
push
clc
sub
pop
xchg
adc
push
jae
leave
imul
sbb
pop
adcb
fsubr
and
into
add
ret
xchg
sarb
add
test
dec
incl
pop
clc
out
lcall
scas
pop
leave
jecxz
dec
fchs
arpl
adc
inc
pop
jle
mov
test
or
std
mull
inc
jae
cmp
es
sti
sub
xor
fildl
mov
in
pop
loopne
xor
mov
inc
int
jbe
js
mov
cmpsl
imul
movsl
push
or
mov
fucomi
pop
arpl
inc
adc
sbb
push
pop
call
sub
jp
es
and
or
es
arpl
inc
or
or
pop
test
inc
xor
lock
lock
sti
mov
hlt
pshufw
testl
les
ret
xor
imul
lock
stc
cli
repz
mov
sub
insl
mov
addl
lcall
xchg
dec
das
mov
mov
jb
sbb
out
inc
mov
nop
inc
sub
cs
dec
cmp
into
and
dec
mov
or
push
or
jle
orb
imul
dec
out
into
push
pop
lods
add
add
push
xchg
test
jl
pop
icebp
inc
mov
push
inc
shll
in
pop
mov
mov
loopne
sub
test
std
dec
jge
ss
int3
or
and
push
and
jge
ret
mov
cmp
mov
xor
jg
add
or
jno
aas
mov
in
les
sti
mov
cmp
incl
and
jno
sbb
popf
mov
xchg
add
xchg
insb
add
mov
adc
push
adc
mov
call
cmp
jge
xchg
dec
leave
sub
cmp
movsb
mov
inc
push
in
inc
mov
cmc
push
aas
daa
repnz
adc
add
pop
cmc
outsl
ljmp
inc
add
cmpsb
xchg
test
mov
repnz
sub
in
shrb
or
test
aas
add
sub
push
jg
clc
xchg
sbb
movsb
movsb
clc
pop
sbb
add
aaa
clc
out
pop
cld
mov
nop
out
cs
roll
lcall
jb
and
outsb
lret
sti
fstpt
test
pusha
push
inc
and
in
sar
out
pop
add
dec
pop
cmp
adc
fbld
shlb
pusha
push
jmp
ljmp
sbb
pop
ds
incl
adc
adc
add
or
data16
insl
cld
ljmp
movsb
cmp
js
je
add
mov
jo
pusha
push
popa
aaa
movsb
dec
outsb
pop
lods
cli
pushl
mov
wrmsr
popa
mov
add
lcall
lock
push
add
xchg
dec
and
xchg
bound
nop
out
and
xlat
xchg
js
dec
mov
sarl
test
xor
sub
ret
pop
pop
jp
add
mov
icebp
and
pop
fisubrs
incl
push
addl
inc
icebp
mov
xor
call
and
add
and
loop
add
push
or
add
dec
xlat
ljmp
cmp
pop
and
fildl
je
ffree
icebp
bound
mov
add
add
xor
ljmp
nop
push
popa
addr16
push
add
insb
pop
xor
jge
push
mulb
sbb
mov
jne
cwtl
scas
mov
clc
bound
add
stos
xorl
and
pop
rcrb
inc
les
mov
push
rorl
sbb
add
lahf
add
xor
pop
mov
push
mov
mov
movsl
fldcw
in
add
mov
mov
icebp
xchg
adc
mov
cwtl
fidivl
sbb
add
addr16
mov
movsb
jg
adc
dec
xchg
aad
xchg
lods
decl
and
enter
jns
pop
and
add
arpl
push
call
mov
call
add
and
dec
lahf
jg
push
add
scas
push
lods
push
pop
or
les
in
popa
pop
push
fidivrl
add
call
imulb
es
push
mov
add
inc
mov
outsl
and
dec
dec
add
or
sub
mov
arpl
fwait
jle
cld
lea
jno
adc
push
dec
cmp
xor
and
sbbb
add
or
mov
insb
pop
adc
jae
adc
call
mov
int3
sbb
fsubl
cmp
pop
mov
xchg
xchg
cmc
cmpsl
dec
xchg
out
push
adc
lock
inc
bound
jbe
inc
std
ljmp
fidivl
mov
enter
mov
jns
inc
rcl
add
jb
add
les
mov
cmp
bound
pushf
push
push
sbbl
pop
push
roll
sbb
repnz
sub
stos
push
push
cmp
xor
les
shll
inc
cwtl
cs
mov
es
add
jecxz
in
clc
dec
les
pop
xor
mov
push
add
shll
stos
fisttpl
test
in
std
jl
stos
icebp
push
mov
adc
inc
dec
addb
call
js
dec
sbb
dec
loope
pop
pusha
bound
mov
push
push
mov
pop
decl
sub
testb
sbb
push
pop
call
aam
popa
test
add
sbb
test
loop
push
ljmp
test
cmp
sub
add
adc
dec
sbb
or
repnz
ss
ja
xchg
fidivrs
mov
jle
aaa
aad
loope
sbb
stos
mov
inc
mov
xlat
pop
jne
mov
cs
add
add
mov
fmulp
outsb
mov
mov
xchg
in
mov
pusha
rclb
pusha
and
inc
jno
decb
cmp
pop
push
imul
loop
jns
decb
inc
dec
add
add
and
mov
lock
ret
jp
inc
jnp
add
addb
mov
iret
stos
rolb
pushf
pop
xchg
lret
orl
pop
loop
jmp
iret
das
je
dec
xchg
aas
mov
mov
or
lea
aam
clc
adcl
in
sbb
test
lock
or
xchg
push
fists
ficoml
cwtl
ljmp
sub
in
mov
shlb
scas
push
inc
mov
enter
stc
jbe
or
mov
add
call
or
dec
scas
mov
aas
or
push
mov
push
out
sbb
rorb
arpl
cmpsl
jg
cwtl
pushf
pop
aad
sub
mov
cld
sub
add
pop
jno
lea
ja
std
out
xchg
je
fcoms
adc
test
loopne
inc
push
fistpl
and
mov
jnp
cmpsl
pop
pop
cld
mov
fcomi
pop
add
add
hlt
add
add
arpl
out
and
jl
je
fistpl
call
sub
pop
jmp
or
jae
sbb
je
push
jecxz
sub
xchg
pushf
mov
pop
mov
inc
repnz
out
cs
push
das
jl
shl
push
stos
pop
sahf
add
sub
xchg
push
adc
sti
mov
inc
outsb
push
mov
ljmp
sub
lock
mov
popa
es
sbb
adc
js
push
xchg
std
lcall
int
jmp
inc
xchg
pop
sbb
adc
mov
jg
daa
les
aam
mov
outsb
nop
sbb
cwtl
lea
mov
pop
pop
pop
shrb
repz
aas
jl
loopne
cld
and
sahf
lret
hlt
shl
jg
mov
push
cld
cs
xchg
and
fisubl
push
add
push
jmp
ret
push
dec
mov
pop
testl
lahf
sub
into
testb
test
jg
xor
push
jbe
mov
lret
jno
pop
repnz
or
adc
mov
aaa
push
lds
mov
or
ja
cmp
fldcw
sbb
movsb
ds
push
loop
fs
jnp
int
rorb
mov
fistpll
mov
test
and
orl
inc
imul
ret
pop
sbb
jecxz
bound
fwait
test
fwait
push
push
rcll
or
xor
gs
lret
mov
nop
call
lods
in
xchg
add
stos
rcrb
xchg
push
cwtl
xor
out
mov
and
outsb
mov
sbb
push
pop
pop
pusha
hlt
sub
xor
add
lock
xchg
mov
js
bound
clc
call
mov
push
inc
xor
mov
xor
daa
lock
gs
loope
pushf
les
rsqrtps
addl
cld
sti
add
lahf
pushf
lret
imul
divb
sbb
mov
dec
xor
mov
pushf
ljmp
jmp
dec
ds
mov
loop
xchg
orl
lea
je
nop
test
stos
ror
lret
xor
jl
cmp
jg
mov
sub
sbb
rcll
lods
movsl
xrelease
sbb
cmpsb
adc
aas
adc
add
push
mov
adc
in
pusha
sub
xor
sub
or
xchg
popf
movsl
inc
mov
int3
lret
adc
adc
mov
mov
mov
inc
xchg
daa
outsb
mov
stos
rcrl
test
aas
sbb
jns
pop
lcall
sub
push
xorl
xor
push
push
dec
fcoml
mov
jb
rcll
mov
xchg
fsts
dec
adc
pusha
adc
sub
fbld
cmp
and
jmp
inc
or
xchg
jecxz
add
inc
sub
mov
stos
adc
mov
aam
dec
popa
sub
loop
jns
mov
in
lret
stos
dec
fistl
in
cmpsb
lock
or
mov
xor
xor
pop
push
mov
cmp
cmp
xchg
add
pop
xlat
dec
rorb
mov
dec
test
lea
test
inc
aam
xor
xor
fists
rcll
dec
mov
out
mov
lret
pop
ljmp
pop
das
jmp
sbb
cs
stos
ret
add
jl
cmp
pop
es
or
lahf
rcr
add
pop
add
arpl
cld
pop
inc
sub
sub
or
pop
and
jbe
mov
adc
fiaddl
cmp
daa
jge
in
push
jo
push
inc
pop
test
mov
not
and
sbbl
mov
xor
nop
inc
jo
pusha
repnz
int3
jne
mov
shrb
les
hlt
mov
add
xorl
lahf
pop
fmuls
xorb
dec
loopne
scas
scas
inc
rorb
dec
repz
in
ret
dec
shrl
ret
sub
outsl
mov
sahf
es
or
mov
bswap
in
fs
fdivrs
fmul
sub
dec
les
push
sub
cmp
outsb
sub
lock
lods
jl
sbb
ja
cli
cltd
scas
js
mov
je
incb
sub
inc
xor
xor
sub
cmp
dec
int3
aad
adc
in
mov
xchg
cmp
lods
loope
aam
test
mov
loop
xchg
jge
out
hlt
ljmp
push
nop
push
out
sbb
inc
lret
stc
and
add
pop
lretw
cld
xor
test
dec
fsubrs
sbb
pop
lods
scas
nop
pop
not
outsl
push
scas
scas
int
outsl
sub
addr16
je
push
xchg
add
xlat
inc
push
add
loopne
and
mov
add
sti
add
int
add
push
mov
lods
add
comiss
add
sub
dec
cmc
sbb
data16
adc
xor
fiaddl
mov
sete
cld
aam
lock
lea
push
imul
lcall
jl
cmpsb
or
cmc
sbb
add
and
movl
ds
fdivrl
fcoml
sub
inc
dec
pushf
cmp
jb
or
movsb
adc
mov
hlt
ret
mov
std
lods
stc
popa
adc
cld
mov
out
sbb
lds
bound
mov
xor
gs
inc
fbld
bound
pusha
xlat
add
sarb
dec
js
mov
movaps
cmp
pop
cmp
imul
cltd
adc
mov
in
lret
inc
push
xchg
insb
or
test
mov
lock
or
shrl
repnz
push
inc
cld
icebp
cmpsl
ljmp
aaa
xchg
imul
mov
cmp
cmc
loopne
xchg
jecxz
lods
push
bound
ss
fstpt
ret
or
ss
xlat
inc
fists
ss
jge
ljmp
push
cmp
mov
cmp
ljmp
stos
jae
andb
inc
xor
cmp
sub
insl
imul
pop
or
test
mov
aaa
cs
add
icebp
imul
push
rol
jmp
adc
xchg
adc
mov
inc
sbb
outsl
pop
inc
movsb
ss
ret
mov
inc
push
aam
movsl
call
pop
lret
enter
adc
add
or
cld
mov
xor
imul
add
gs
addl
inc
je
cmp
lock
jbe
fdivrs
mov
adcb
push
mov
or
in
mov
push
test
add
jle
xorl
es
mov
push
xchg
adc
and
cwtl
fldl
je
loop
xor
cmp
orb
xor
mov
test
mov
ret
or
lcall
lds
test
fistps
loop
std
stos
push
mov
lods
adc
fwait
xor
arpl
add
push
pusha
lea
icebp
incl
aad
push
inc
sahf
push
enter
into
mov
jnp
sarl
cwtl
adc
mov
add
pushl
scas
or
xlat
sub
jae
pop
mov
popa
sub
jne
lock
cld
test
das
insb
cmpsl
xor
mov
imul
les
mov
rcl
aaa
cmp
inc
icebp
mov
aaa
xor
lcall
dec
nop
sbb
fdivs
inc
mov
mov
pop
mov
cmp
insl
clc
add
fucomi
xchg
mov
scas
or
sti
jg
inc
mov
pop
xchg
cs
sbb
xor
or
ljmp
inc
aam
mov
lea
xor
fs
scas
jecxz
jp
mov
je
mov
jge
out
ret
xchg
add
xchg
cmpsb
cmp
xchg
popf
mov
add
adc
call
sub
inc
add
aam
fstps
outsb
or
xor
xor
std
inc
pop
arpl
mov
icebp
adcb
stos
loopne
adc
push
loopne
cmpsl
push
sub
sbb
pop
xchg
push
shlb
xorl
clc
repnz
cli
mov
or
lds
loopne
jle
jl
test
loopne
push
jge
add
mov
decb
xchg
cmp
mov
in
shl
add
das
and
test
pusha
inc
insb
adc
lock
add
adc
sub
cmp
aas
dec
ljmp
mov
sbb
lods
aad
ja
add
ss
sub
mov
cmp
shrb
pop
sarb
or
sbb
push
addb
test
mov
jnp
add
je
scas
popf
loop
fadds
fucomip
out
rcr
les
adc
mov
ss
push
jp
orb
add
add
jne
shl
lods
pop
inc
js
clc
and
push
mov
jmp
icebp
cmp
xor
in
je
sbb
ret
lock
ds
dec
inc
loope
ret
lock
es
fucomp
add
jmp
mov
xorb
fpatan
push
hlt
iret
sub
add
xchg
ret
rclb
cmp
lret
lds
fsub
xchg
aam
push
sbbb
pop
nop
mov
add
pusha
outsl
or
mov
or
xor
inc
add
mov
clc
in
push
pop
adcl
loopne
sbb
dec
push
mov
loop
mov
jmp
aaa
sbb
mov
sbb
sub
mov
cmc
fbld
cli
cmp
xchg
outsb
imull
dec
test
mov
add
adc
ss
push
push
cmp
add
xchg
add
fs
xor
pop
adc
sbb
inc
cwtl
dec
and
pop
add
stc
push
and
adc
cld
adc
dec
add
push
insb
js
jg
arpl
and
push
push
mov
xchg
fcmovnb
or
lea
and
or
add
cmp
inc
pusha
dec
sbbb
pop
or
bound
not
and
adc
dec
or
dec
stos
dec
pushf
movsl
sub
pusha
ljmp
mov
jp
sbb
and
or
jmp
icebp
outsl
mov
subl
and
adcl
sti
outsb
shl
fsubs
jmp
testl
rolb
loop
cmp
int3
scas
xor
scas
add
andb
add
add
push
adc
leave
push
mov
cmpsl
ret
xchg
in
pop
dec
mov
icebp
sub
enter
gs
outsb
loopne
jl
mov
enter
ret
fiadds
out
shl
push
mov
loopne
push
dec
popf
and
loop
add
ja
jp
imul
arpl
pop
ret
mov
shl
push
xchg
sbb
adc
fs
mov
pop
imul
mov
int
and
push
sti
or
outsb
pop
mov
popa
lock
icebp
inc
jle
cmp
sets
sbb
cltd
rcrb
das
xchg
shl
arpl
lock
aaa
ljmp
jg
xchg
out
mov
ss
jmp
add
pushf
jp
add
dec
leave
es
xchg
dec
and
adc
pop
dec
in
stc
inc
xchg
xor
add
or
and
mov
mov
sub
mov
mov
and
xchg
mov
ret
push
mov
sbb
jne
rcrb
loopne
int3
fwait
sbb
push
and
pop
or
push
test
jg
push
negl
lret
add
cmp
mov
decl
pop
cltd
push
inc
incl
xor
cs
sub
fldt
push
or
out
into
sbb
addl
mov
mov
jg
mov
repnz
jne
jno
jne
stc
sub
inc
adc
add
stos
push
ret
or
mov
and
pop
es
fldt
ds
dec
out
out
inc
add
xchg
fimull
sbb
xchg
mov
ljmp
cmp
add
gs
imull
sbb
sbb
lock
jecxz
cmp
sbb
mov
mov
mov
mov
xor
les
aam
inc
pop
mov
add
fs
ljmp
xchg
cmp
mov
popa
test
or
xor
mov
cmpsb
ret
add
pop
call
pop
dec
sahf
push
push
mov
lcall
xchg
std
outsl
cli
jg
cwtl
mov
xchg
or
mov
scas
sbb
hlt
insb
orl
push
clc
inc
int
aas
nop
sar
xchg
push
adc
js
imull
adc
add
add
insl
add
jg
clc
fwait
fs
xchg
mov
fistl
nop
pushf
push
jge
mov
ja
add
pop
ds
cwtl
and
jno
pop
call
cli
test
xlat
clc
dec
fwait
lock
xor
or
dec
jne
data16
push
in
jo
cmp
xchg
fstl
mov
insl
sub
xchg
mov
add
sti
nop
adc
push
mov
subb
pushf
aam
xchg
clc
dec
mov
les
clc
mov
sub
ret
aas
xchg
push
cmp
push
add
call
dec
out
hlt
stos
mov
imul
loope
in
sbb
inc
fiaddl
pop
dec
lods
jecxz
in
pop
aam
push
sbb
in
jecxz
adc
in
in
sub
rcrb
test
cmpsb
dec
testb
jbe
dec
lods
pop
out
and
sub
cmp
incl
pushf
adc
addr16
aam
repz
or
sbb
and
gs
inc
fwait
jg,pt
sti
mov
sub
mov
sub
hlt
lcall
icebp
cmp
xchg
adcl
js
sub
mov
enter
adc
fsubrp
test
fcmove
subb
dec
ficoml
mov
mov
and
popf
fwait
adc
daa
hlt
mov
mov
fchs
call
jo
jl
fisttpl
pusha
and
cld
enter
cmpsl
mull
sbb
lds
es
bound
nop
outsl
bound
xchg
stc
pushl
nop
mov
push
jg
mov
and
or
jge
dec
mov
out
adc
mov
mov
shll
cmp
sbb
dec
insb
push
xchg
cmp
mov
or
or
add
call
pop
sbb
jb
push
jno
xor
xor
cwtl
outsl
lcall
dec
daa
adc
inc
add
inc
jg
popl
mov
xchg
pusha
mov
inc
stos
and
stos
imul
sub
jnp
xlat
mov
sarb
xchg
lret
inc
test
and
pop
pushf
fdiv
decl
adc
test
addb
pop
andl
das
push
mov
push
xchg
out
in
test
xor
mov
xor
pop
clc
mov
pop
mov
cld
xor
shll
lock
add
jl
add
inc
fmuls
jecxz
add
xchg
imul
xor
outsb
cmpsl
mov
mov
daa
cmp
dec
popa
rcr
dec
movsb
mov
inc
sti
mov
mov
sub
mov
popa
add
mov
xor
xlat
imul
and
jmp
inc
je
lds
test
jecxz
ret
mov
popf
jbe
fildl
outsl
fsubr
inc
fs
add
inc
and
movsb
es
mov
incl
mov
popa
daa
in
mov
outsb
leave
rolb
imul
inc
adc
shll
iret
sti
addr16
adc
mov
xor
cmpsb
ficompl
cmc
jnp
scas
das
push
fs
add
outsl
dec
push
push
push
cmp
mov
mov
popa
popa
loopne
cmpsl
dec
and
or
pop
test
aaa
shlb
lds
lahf
add
add
or
inc
and
add
int3
or
arpl
inc
lret
adc
decb
rolb
pop
test
xor
sub
and
idiv
bound
outsb
jne
mov
hlt
nop
fs
and
mov
add
pop
add
cmp
aam
pop
mov
cmpsb
outsl
int3
ljmp
inc
and
fisttps
jecxz
mov
insb
hlt
xchg
mov
dec
add
cmpsb
jmp
jge
xchg
push
fwait
push
fimull
inc
cmpsl
insb
push
jne
dec
cli
cs
add
or
cmp
sarb
add
fisubl
adc
dec
loopne
pusha
stc
movd
lods
mul
das
xor
mov
addl
jne
or
loope
dec
jbe
shlb
and
push
ror
fisttps
mov
inc
lret
cli
arpl
or
jecxz
cwtl
sub
ljmp
aas
push
pusha
ljmp
jo
add
inc
or
mov
movsl
jl
push
dec
and
fdivrs
stos
lock
lret
movsb
test
add
sub
dec
jnp
or
ret
xchg
add
add
pop
jg
adc
cli
xchg
cmp
outsb
pop
mov
rorb
add
sti
inc
sbb
mov
mov
clc
insl
mov
xchg
add
cmp
add
ficomps
xor
lcall
xor
jmp
inc
dec
loop
cld
out
cli
add
jo
mov
add
cmp
fld
bound
outsb
test
mov
pop
and
mov
nop
xchg
test
les
push
push
inc
mov
shl
ss
sbb
add
mov
loop
cmp
pop
mov
inc
pop
cwtl
adc
mov
test
and
inc
enter
push
imul
rcl
ss
mov
xor
inc
sarb
cmp
add
icebp
das
ror
adc
add
call
hlt
cmovl
fsts
test
inc
fwait
push
push
enter
cmp
es
add
aam
loop
mov
rorb
addb
into
mov
dec
lock
and
pop
dec
imul
imul
dec
push
lret
and
add
mov
ds
mov
loop
mov
pop
push
jle
pop
notl
mov
bnd
test
jbe
push
push
add
dec
add
outsl
and
xchg
inc
pushf
cmp
mov
add
push
jmp
add
mov
cli
cwtl
fdivs
call
popa
sarl
or
hlt
jnp
std
aam
movsl
lods
add
stc
int
lods
imul
ljmp
pop
jb
dec
ficomps
std
push
loop
cmp
rolb
sub
add
add
mov
mov
ds
cmpsb
rorb
pop
push
cwtl
mov
sbb
adc
add
and
adc
rclb
pop
cli
add
pop
lock
cmpsb
jne
hlt
push
lods
cld
add
and
pusha
mov
inc
push
xchg
loope
je
mov
je
jle
shlb
add
mov
repz
mov
jg
and
in
mov
ss
decl
ss
addl
test
ja
sbb
ss
or
aam
cmp
in
outsb
mov
jae
mov
sub
out
orb
and
dec
aaa
xchg
and
inc
or
and
fdivrs
ljmp
cwtl
imul
jle
cwtl
daa
js
bound
sbbb
or
mov
pop
cli
mov
jno
mov
cmp
testl
enter
je
int
lcall
ret
cmpsb
inc
outsl
sbb
add
lock
pop
scas
cli
dec
jne
mov
mov
cmp
cmp
xchg
mov
add
xor
out
pop
icebp
mov
dec
mov
jecxz
cmpsb
cld
push
cld
loopne
push
mov
fisttpll
mov
pop
ds
jo
and
inc
pop
and
mov
mov
jns
ljmp
jo
sbb
sarl
aaa
push
pop
sbb
or
mov
fistpll
loop
int3
insl
fmul
mov
repz
aaa
in
cli
push
push
adc
add
lods
and
mov
mov
push
test
aad
push
xor
test
sub
mov
das
stos
cli
mov
int
fidivs
inc
aam
aam
sahf
fildll
repz
cmp
xorb
adc
cli
aad
fimull
in
add
push
jge
cmc
cli
xchg
and
in
jae
mov
add
sbb
or
mov
clc
push
or
push
or
scas
ljmp
loopne
call
xchg
pop
jno
push
sar
push
pusha
hlt
push
push
sahf
popf
push
mov
cmpsl
cltd
mov
pop
inc
xor
insb
mov
mov
and
inc
cli
push
lea
popf
je
push
sbb
jl
inc
loopne
mov
mov
ret
sub
dec
and
js
ficomps
xor
negl
adc
mov
in
in
add
xor
pop
mov
jns
inc
push
push
cmc
mov
or
mov
jo
jecxz
mov
iret
push
in
movl
adc
lock
popa
xor
push
je
mov
fisttps
adc
out
jge
fdivl
mov
and
adc
pushf
cmpsl
sub
hlt
movsb
pop
lock
adc
inc
repz
push
test
out
push
dec
cwtl
and
xor
insl
fcmove
adc
stos
call
inc
shrl
jo
clc
rolb
mov
cmp
test
adc
mov
aaa
inc
out
mov
mov
imul
mov
dec
or
adc
subl
and
xchg
test
add
jp
push
xchg
cmpb
out
push
mov
out
cmpsl
ficompl
xchg
push
in
sbb
jmp
pop
push
pop
xor
insb
in
mov
fcom
mov
mov
and
xchg
repnz
sbb
pop
jecxz
mov
or
cmpsb
mov
sub
sti
test
and
add
mov
push
pop
adc
nop
push
std
sarl
and
push
cmp
out
call
faddl
push
jp
stos
call
or
adc
rcr
add
sub
and
lcall
jns
enter
push
movsb
pusha
imul
dec
mov
jbe
rclb
movsb
aas
ljmp
dec
test
cld
mov
push
jmp
jecxz
jne
xor
divb
cwtl
lock
je
and
jbe
dec
sbb
mov
push
rolb
ficoml
xlat
push
mov
sub
or
jmp
in
stc
pop
cmp
xchg
cmpsb
cmp
in
push
add
xor
jo
in
cli
push
jno
pushf
test
cwtl
cmpsb
mov
or
xor
push
scas
sbb
push
clc
das
jle
fidivrs
push
loope
pop
adc
sub
sbb
in
cmp
loopne
call
add
pop
pop
insl
adc
sub
out
xor
js
ljmp
push
fdivrl
pop
xor
push
lds
sarb
dec
shlb
sbb
fwait
test
insb
xor
xchg
pop
ss
add
outsb
leave
mov
imul
jns
pop
inc
ret
enter
out
lcall
add
out
xor
xchg
lds
ret
adc
clc
orl
and
clc
adc
mov
inc
out
icebp
pushl
nop
ficoml
mov
adc
cwtl
cs
cmp
lock
stos
mov
jno
cli
jb
es
sbb
sahf
cld
lret
mov
mov
lods
add
loopne
adc
jns
movsb
cmpsl
sub
fisubrl
stos
push
sub
push
mov
adc
jno
and
mov
in
mov
fcompl
das
xchg
push
add
mov
or
cmp
fiaddl
or
sbb
jecxz
aas
sbb
mov
mov
pop
jo
out
aas
pop
inc
jg
pop
mov
inc
mov
fnstsw
clc
outsl
data16
inc
hlt
push
mov
addr16
lcall
out
movsb
les
xor
dec
mov
add
inc
or
fldt
nop
ror
ds
stc
cmp
mov
incl
sbb
ficompl
sbbl
loop
mov
mov
adc
adc
rcl
adc
test
push
popa
andb
int3
mov
mov
scas
scas
andb
movsb
pop
call
dec
push
gs
and
sti
iret
lcall
dec
cmp
xchg
jns,pt
das
ret
clc
push
xor
push
sti
inc
inc
mov
mov
fbstp
mov
rcl
scas
push
loopne
dec
sub
paddsw
add
movsb
jge
inc
rcr
ss
mov
push
addl
mov
jmp
adc
movsb
xchg
enter
mov
add
rolb
mov
or
das
ret
fs
lret
pop
sbb
mov
jae
rcl
jg
in
js
push
lods
sbb
add
inc
cld
lock
clc
mov
sub
mov
push
notl
pushf
ja
xchg
cmpb
cwtl
and
push
sub
mov
outsb
decl
gs
test
dec
call
mov
push
dec
inc
add
xorb
decl
cmp
in
outsb
push
dec
pop
out
jb
js
add
ljmp
insl
cmp
inc
cmp
outsb
je
movsl
pop
jmp
jnp
adc
add
adc
inc
xlat
sahf
jl
scas
rolb
pop
cmp
ss
test
dec
scas
push
inc
jl
xchg
mov
call
xor
dec
inc
adc
les
fidivrs
mov
loope
fwait
mov
push
inc
int
out
push
mov
mov
add
sbb
cmpsb
sbb
or
scas
mov
arpl
sub
mov
sbb
mov
sbb
push
movsl
fcomip
repnz
and
call
sbb
cmp
and
js
fsubrp
fildll
mov
pop
mov
cmp
clc
dec
loop
sar
mov
adc
das
or
insl
adcl
pop
lock
loope
push
enter
aas
jns
test
sbb
add
cmp
aam
add
aam
sub
pop
jmp
xchg
lcall
aaa
add
mov
arpl
lods
testl
add
out
mov
cmp
sub
idiv
sbb
lcall
dec
and
xchg
hlt
pop
adc
into
fcomip
test
ficomps
push
jo
pop
add
xchg
xchg
ljmp
push
subl
call
inc
pushf
push
xor
jbe
pop
mov
adc
addb
add
mov
fimuls
push
mov
adc
mov
mov
call
mov
dec
movsl
and
adc
sub
mov
int3
jne
int3
dec
in
or
shrl
imul
push
add
xchg
mov
add
sbb
loope
test
imul
stc
divl
rcrb
push
cld
out
add
add
es
ds
addl
sub
mov
cmp
adc
hlt
scas
jne
loop
xor
mov
rolb
std
and
sub
jle
test
dec
or
and
mov
or
ret
fiaddl
outsl
add
repnz
es
pop
pop
mov
sti
mov
dec
sub
push
dec
lock
jge
inc
in
lods
mov
test
adc
cmc
cmp
rcl
mov
xor
adc
jmp
add
test
subl
and
mov
loope
push
movsl
mov
inc
clc
iret
add
pop
mov
add
daa
mov
ret
daa
fwait
rol
sub
outsb
pop
jg
pop
sbb
arpl
inc
inc
rol
xchg
mov
sbb
jnp
push
or
addl
sbb
insb
addr16
push
pop
icebp
jno
dec
mov
mov
mov
inc
loopne
xor
or
xchg
js
push
shl
lock
push
add
jmp
fmuls
into
sub
lods
xor
test
testb
push
mov
aam
rolb
sub
cmp
dec
mov
xchg
stc
in
and
adc
sbb
ret
imul
rcr
clc
xor
or
fsubs
loope
lea
jecxz
xchg
leave
add
push
leave
in
and
dec
mov
or
lds
call
inc
sbb
jb
inc
and
iret
sub
mov
mov
sub
in
jge
fbld
push
inc
pop
inc
dec
aas
mov
or
out
jns
xorb
in
sub
dec
or
call
add
mov
mov
lret
pushf
and
xchg
shlb
adc
and
repz
xchg
and
jge
inc
xchg
push
js
cmp
imul
cmp
fmull
sbb
repnz
shll
and
mov
mov
adc
push
mov
jne
shl
sbb
inc
movntps
sbb
or
sub
sbb
ds
cs
add
fcoms
in
mov
lea
jb
or
mov
fs
push
lret
push
sar
or
ret
mov
cmpsl
fnstcw
lock
push
lahf
xchg
dec
mov
mov
jecxz
mov
add
adc
aam
jne
or
and
sbb
xor
push
and
out
adc
cmp
aam
xorl
icebp
and
adc
xorb
push
imul
cmp
jmp
sub
adc
pop
pop
insb
stos
aad
inc
inc
mov
mov
ds
dec
cld
and
lea
into
cs
inc
adc
xbegin
push
lret
icebp
jne
push
xchg
and
sti
or
inc
mov
cli
popa
inc
adc
sbb
sub
into
cmpsb
and
xor
sub
push
js
loopne
nop
mov
fldl
les
test
push
add
insb
loop
or
dec
gs
xchg
aad
sti
pusha
dec
xor
cltd
add
mov
popf
pusha
pop
cmp
jbe
add
sbb
cltd
lock
add
and
add
and
sub
fistpll
jle
add
push
jl
dec
push
popf
stos
add
test
add
mov
xchg
mov
jg
and
ret
arpl
setne
stc
stos
movsb
loop
lahf
mov
nop
dec
iret
test
cmp
or
test
sbb
push
mov
mov
mov
lods
jae
push
and
mov
inc
lock
data16
scas
push
fildll
xor
push
xor
or
mov
sbbl
aam
add
cwtl
dec
xor
add
sar
mov
cmp
mov
subl
nop
ja
flds
das
mov
call
std
sub
jge
repnz
push
mov
dec
lret
mov
and
scas
add
cli
lock
in
in
rcrb
in
hlt
inc
jmp
sbb
lahf
or
filds
mov
fcmovnb
jmp
add
add
xor
mov
jmp
pop
add
cmp
xorb
add
pop
add
les
loopne
push
adc
jg
mov
add
je
add
in
push
subb
scas
mov
mov
fiaddl
loopne
lock
shr
sub
popa
mov
or
dec
pop
jne
scas
or
arpl
or
sbb
decl
push
mov
xor
out
mov
adc
jmp
push
out
movsl
jbe
adcl
ljmp
or
sub
int3
loop
loope
bound
loop
mov
push
lret
movsb
and
loopne
xchg
nop
mov
rclb
pop
int
mov
jg
pop
jmp
xchg
sub
sahf
sti
sub
jecxz
jecxz
and
add
ja
test
xchg
je
out
add
xor
pop
mov
test
add
loopne
aaa
cld
adc
cmp
ss
or
cli
xor
jg
jle
pop
push
push
ret
mov
insb
out
or
dec
add
les
pop
mov
pop
jecxz
stos
xor
out
aam
fisttpll
sub
mov
push
imul
mov
or
sbb
in
in
aaa
std
inc
jb
adc
mov
mov
movsb
or
and
cmp
mov
or
push
jo
jns
lds
jo
xor
inc
stos
scas
mov
xor
mov
inc
jg
test
call
fcompl
push
or
stos
rclb
pop
in
add
das
adc
lods
xchg
test
std
in
push
jb
sub
test
rorb
int
sbb
mov
jg
mov
add
jmp
fistpll
dec
les
inc
nop
fists
pop
push
or
insl
js
mov
sbb
mov
mov
cmp
jnp
mov
and
lcall
jbe,pn
xchg
insl
mov
scas
push
out
jo
scas
sub
adc
decl
xor
fdivl
shlb
repnz
jecxz
mov
pushl
add
mov
add
push
add
push
jmp
out
dec
add
ljmp
jge
aad
inc
cld
scas
xor
lock
in
call
add
hlt
jg
mov
fsubrl
mov
lcall
rcrl
pop
lret
lcall
push
adc
fnstcw
and
xchg
mov
cmp
data16
or
sbb
lods
adcl
mov
stos
ret
and
iret
push
add
ret
sub
rcrb
mov
inc
xorb
shl
mov
dec
push
push
loop
adc
mov
sub
clc
arpl
dec
je
sub
ss
sti
xor
jmp
std
jg
or
xor
lret
lods
xchg
sub
mov
push
dec
fnstcw
and
test
mov
movsbl
dec
add
add
jmp
adc
inc
cmpsb
mov
scas
push
fscale
push
sbb
incl
add
cmp
ret
mov
push
lahf
cmp
mov
sub
push
sub
js
aas
inc
data16
and
rorl
push
cwtl
pop
mov
xchg
sbb
rcrb
mov
sub
int
insl
xchg
push
popa
les
xor
cmpsb
push
lods
xchg
push
pushf
lahf
pop
add
mov
inc
and
pop
add
adc
xchg
push
shll
jne
push
adc
xor
clc
cs
add
bound
cmp
xchg
mov
pushf
jo
hlt
xchg
pushf
xor
je
jle
sbb
repnz
or
mov
xor
and
aaa
addb
scas
pop
arpl
xchg
int3
xor
adc
shlb
std
inc
adc
aad
xchg
xchg
xchg
sub
push
lret
inc
repz
jae
or
and
sbb
inc
shll
push
dec
jp
xor
ja
lds
sbb
popf
adc
mov
xor
inc
imul
or
fidivs
mov
add
outsl
fwait
or
add
xchg
push
add
inc
or
add
jbe
jmp
scas
out
cmp
test
les
jno
xchg
sub
subb
mov
push
xchg
adc
xor
int3
cmp
jecxz
mov
xor
sub
clc
inc
mov
xor
sbb
cmp
dec
movsb
add
loopne
xchg
sbb
in
or
mov
pop
into
shlb
xor
xchg
imul
sub
add
int3
scas
sbb
arpl
push
sub
lds
orb
into
into
jbe
push
cmpsl
mov
mov
push
pop
cli
rcrl
xor
or
push
pop
jo
mov
test
int3
icebp
je
imulb
rorb
adc
loop
test
push
xchg
jge
cmp
or
sbb
rorb
cltd
cmc
cmp
leave
pop
inc
inc
sub
jl
jae
mov
pop
cld
xor
add
call
repnz
adc
dec
rcl
mov
sbb
mov
insb
adc
xchg
push
push
xchg
fisttpll
gs
cmpsb
add
mov
jle
jle
inc
pop
mov
and
jmp
push
in
fdivs
lcall
loopne
aaa
mov
fwait
push
ret
or
aam
gs
lahf
cmp
xor
stos
dec
ljmp
sbb
and
stc
add
adc
cmp
mov
jo
lret
dec
cli
out
aas
idivb
add
mov
cmp
enter
pop
add
js
jecxz
ret
mov
mov
dec
repz
jno
pop
fwait
or
fisubl
jae
aam
push
inc
mov
inc
or
add
jle
add
sahf
or
jbe
dec
loope
mov
xchg
adc
add
stos
add
mov
adc
mov
sar
inc
sbb
pop
or
dec
mov
mov
sub
insb
stos
mov
xchg
and
clc
dec
mov
add
rcrb
cmp
out
adc
jae
not
das
sbb
stos
cwtl
pop
fstpl
push
outsb
imulb
xor
add
pop
xchg
mov
mov
add
rcll
rorb
sub
cmp
rol
ja
mov
sub
xchg
cmc
andb
or
xchg
pop
jg
xor
shrb
out
fbstp
fcompl
cwtl
leave
jne
ss
cmpsb
nop
pop
adcl
js
jbe
scas
mov
negb
or
aad
jo
pop
sbb
add
mov
adc
repz
adc
adcb
lea
or
popl
mov
fdivp
clc
pop
pushf
adc
dec
fdivr
in
mov
scas
pop
js
pop
lret
add
sbb
ja
jg
sbb
test
and
push
mov
lea
jg
push
outsl
push
lcall
jge
xchg
dec
in
fidivrl
stos
jle
mov
ficoml
incl
inc
or
sbb
test
out
iret
jg
out
insb
js
lock
push
push
clc
push
mov
ss
sub
inc
js
xor
mov
cmp
mov
hlt
add
mov
addr16
push
adc
pop
loopne
push
push
imul
insl
mov
mov
inc
ljmp
cmp
or
leave
sahf
sbb
sbb
outsb
xchg
jo
mov
aas
add
push
pop
fisubs
out
fisttpl
ret
pop
adc
std
cmp
sbb
sbb
ss
xchg
pop
ss
into
sub
sahf
mov
pop
out
rolb
push
xorl
std
out
mov
mov
mov
cmp
adc
mov
inc
mov
inc
in
stos
aad
push
pop
aaa
sti
add
inc
lds
shl
or
mov
or
movb
int3
mov
aas
inc
popf
pop
jne
sub
mov
ret
push
aaa
xor
loop
repz
jecxz
into
jg
leave
fwait
cmp
adc
or
cmp
add
and
push
clc
ret
cld
mov
xor
pop
mov
lcall
aam
out
cmpsb
shrb
inc
lock
fbld
and
loopne
adc
xor
je
mov
addb
mov
and
stos
arpl
repnz
orb
fists
add
xchg
loopne
cmp
add
inc
add
test
jo
inc
lods
and
mov
movsl
mov
shll
loopne
and
ds
push
add
mov
test
pop
repnz
mov
cmp
loope
and
or
fdivl
rclb
repz
inc
push
loopne
add
push
fidivs
aas
xchg
dec
loopne
dec
xchg
mov
cmp
cld
pop
js
jb
xlat
cmpb
and
dec
fwait
pop
sbb
adc
inc
fbstp
call
add
adc
push
pusha
xor
xchg
inc
lret
lahf
mov
ret
nop
data16
frstor
hlt
sub
sbb
push
daa
adc
idivl
addb
or
and
lcall
insb
mov
mov
insb
dec
mov
ja
rclb
loope,pt
in
lods
sbb
loope
icebp
mov
sbb
push
or
add
fstpt
cwtl
cmp
shrb
pop
add
fsubrl
js
js
aam
sub
arpl
mov
dec
and
stos
pop
out
sbb
insl
mov
inc
mov
inc
adc
mov
filds
lods
sub
xchg
scas
inc
and
imul
rol
lods
rcrb
and
inc
lea
xchg
push
push
std
clc
push
shufps
fsubrl
xor
mov
dec
adc
xchg
sub
inc
clc
pop
arpl
mov
xchg
fidivrl
hlt
mov
ffreep
xchg
jmp
neg
not
sub
sub
es
adc
pop
stos
repnz
test
lret
shl
jge
push
and
popa
test
mov
pop
pushf
jmp
mov
ss
add
lock
mov
push
and
and
jge
call
fcomip
xchg
jns
jne
sti
loope
fst
sbbl
outsb
and
pop
mov
pop
shlb
out
jmp
adc
push
int3
pop
push
mov
or
mov
int
rclb
push
push
fldz
test
outsl
push
mov
fdivs
mov
push
mov
jne
push
mov
adc
test
call
add
inc
loope
arpl
push
loope
cs
gs
cmpsb
mov
cwtl
push
cld
mov
fsubs
sub
sbb
add
lcall
in
cmp
jp
mov
sti
ficomps
add
jmp
adc
popf
iret
lret
out
nop
outsl
add
repnz
jg
shlb
add
push
popf
pusha
scas
das
push
jl
sbb
pop
inc
test
outsl
xchg
add
adc
repz
or
or
jno
dec
fsubrs
and
inc
fildl
xchg
and
pop
std
xchg
imulb
aam
or
adcb
cmpl
js
push
rcrb
or
xchg
xor
mov
mov
insl
jae
pop
push
cmp
cli
lret
ja
xor
jle
in
cli
jg
inc
lret
xor
adc
push
sub
lret
cmp
mov
sbb
shll
add
int3
pop
jbe
mov
push
pop
mov
add
dec
xchg
mov
sbb
dec
sbb
push
fildl
sarb
pusha
jmp
xor
clc
scas
repnz
mov
mov
hlt
sbb
jno
pop
cs
mov
fidivrl
ret
pop
and
add
mov
jb
mov
add
lock
cmp
pushf
cmp
or
scas
and
fistpl
adc
push
and
lret
call
adc
jmp
jo
ds
sub
adc
js
sub
pop
sbbl
ja
aad
mov
notb
sti
mov
imul
jbe
es
mov
pop
jmp
inc
mov
shr
sub
adc
fcomi
jb
fadds
mov
in
pop
loope
xor
jle
adc
fcomip
dec
inc
cld
in
pop
jmp
movsb
stos
ror
mov
add
iret
mov
or
pop
loopne
js
cmpsl
sbbl
cmpsb
inc
and
jl
push
pusha
cli
sbb
pop
sbb
sbb
clc
adcb
call
pushf
test
inc
std
je
mov
ret
mov
dec
cmp
mulb
out
orl
pop
shl
test
mov
add
outsb
addr16
mov
cld
pushf
out
enter
ds
cld
rolb
pop
pusha
xchg
lcall
push
or
gs
andb
mov
scas
sub
outsl
dec
or
lret
rclb
aaa
mov
loopne
push
sub
mov
inc
mov
mov
and
xor
xchg
aaa
insb
sbb
mov
das
push
icebp
mov
je
mov
aas
xchg
push
js
jo
lcall
decl
dec
fcoml
outsl
lock
xchg
jmp
je
jl
ror
loope
bound
cmp
push
mov
loope
loop
inc
out
sub
hlt
lret
out
inc
jp
jb
xchg
lock
jo
push
sbb
decl
xchg
and
fnstcw
mov
pop
jno
loopne
jecxz
mov
out
jne
in
mov
xor
sbb
jmp
jle
lret
pop
and
mov
push
push
add
cmp
xor
and
addr16
jno
mov
adc
incb
cmp
cmpsb
out
jecxz
in
xchg
ret
xchg
imul
mov
add
pop
xor
sub
sbb
mov
or
mov
sti
nop
outsl
jle
das
hlt
dec
and
push
sbb
add
cmp
xchg
test
mov
test
or
inc
ljmpw
xor
fists
filds
lea
jnp
dec
xor
sbb
cli
add
enter
mov
push
fcompl
mov
insl
neg
adc
adcb
mov
push
mov
adc
pop
push
dec
pushf
cmp
or
scas
push
std
and
leave
adc
dec
add
or
test
subb
rcl
daa
jle
dec
testb
add
fimull
adc
mov
fmuls
nop
add
jb
xor
cs
jmp
sbb
nop
test
adc
lcall
rol
cwtl
mov
adc
sub
xor
jle
xorb
outsl
mov
xor
test
add
inc
mov
jne
test
lods
insl
scas
xor
jp,pn
pop
or
incl
sub
push
std
push
rol
out
and
div
xchg
pop
lock
mov
push
pusha
shlb
sub
int
mov
push
adc
ljmp
jecxz
shl
test
jb
sbb
das
push
mov
inc
call
es
push
bound
loope
mov
les
clc
jns
cmpsb
movsb
loopne
mov
push
mov
idivb
stc
push
mov
rorb
add
jns
sub
add
std
inc
add
and
scas
sub
sub
out
cld
stos
call
add
add
movsb
clc
ljmp
lds
push
int
scas
inc
add
mov
mov
and
push
sbb
sub
sbb
fcoms
mov
rorl
add
push
xchg
and
inc
inc
mov
mov
mov
mov
rdtsc
out
inc
or
mov
dec
push
sub
push
fadds
leave
add
adc
lods
cwtl
adc
adc
scas
int
dec
cmc
add
dec
pushf
lret
pop
xchg
mov
je
sbb
push
mov
js
clc
adc
xor
outsl
nop
jp
decl
ljmp
xor
popa
xor
int3
add
mov
inc
add
bound
pop
or
cli
inc
call
jle
jno
or
sub
clc
adc
ljmp
insl
mov
jp
mov
add
cmc
inc
ja
les
test
jbe
pushf
jbe
pop
xchg
icebp
insl
shr
adcl
push
into
dec
sub
inc
mov
dec
loopne
lock
test
xchg
push
sbb
cmp
cmp
nop
push
aad
add
andb
lahf
adc
xchg
iret
mov
sub
lea
push
fwait
push
jl
lods
outsl
clc
into
outsl
inc
bound
xchg
adc
inc
mov
in
xchg
sub
xorl
sub
ljmp
les
push
nop
add
adc
cld
es
dec
adc
push
inc
pop
sub
imul
jg
ss
stc
data16
dec
sbb
ret
inc
int3
into
sub
fistps
fisubrs
and
or
call
sbb
xor
inc
dec
mov
das
xchg
push
xor
testb
inc
and
fidivl
es
fnsetpm(287
cs
push
aad
dec
insb
ror
test
and
mov
addb
dec
adc
rcrb
pop
je
sar
int3
mov
xor
lret
dec
jmp
adc
or
ja
addl
and
movb
pop
mov
sub
sub
sbb
or
xor
add
push
xor
pop
clc
add
dec
shlb
add
sub
or
rcr
or
lea
fldl
ret
lock
or
xlat
push
shrb
and
scas
or
out
gs
pusha
test
mov
inc
adc
dec
or
lock
jo
jle
mov
popa
out
and
sbb
add
push
sub
add
mov
lcall
add
adc
orl
and
lret
pop
jp
aaa
mov
mov
push
pop
jge
out
inc
inc
push
in
dec
daa
jbe
cmp
fdivr
out
out
adc
sbb
in
xorl
std
jg
scas
inc
mov
imul
cmpb
aaa
popf
sahf
mov
jge
xor
or
pop
inc
aas
xchg
jno
adc
insl
adc
mov
push
or
or
dec
ljmp
push
mov
and
pop
sbb
fwait
push
mov
out
or
xor
cmp
xchg
and
ds
aaa
inc
or
add
or
inc
out
dec
xchg
jbe
pop
push
push
jp
mov
xlat
ror
dec
mov
pushf
movsl
mov
jp
loope
cmp
mov
pop
jo,pn
fildll
stc
inc
lret
pop
pop
adcl
cld
popf
mov
fists
in
xor
cmp
shrb
mov
popa
lcall
ret
mov
sub
in
mov
pop
and
rolb
ds
mov
in
imul
and
aas
mov
popl
jnp
and
push
inc
daa
inc
jbe
sbbb
add
loope
pop
lret
add
idiv
aas
incb
or
mov
xor
loop
insb
jbe
stos
out
inc
addr16
mov
cmp
mov
push
push
outsb
push
sub
pop
or
xchg
jg
addb
dec
add
hlt
mov
test
inc
in
dec
bnd
sbb
test
add
pop
jmp
in
sahf
inc
ret
test
aaa
add
xor
repnz
mov
pop
sbb
pop
add
inc
les
add
sbb
hlt
jbe
sub
xchg
imul
mov
jae
fs
lea
dec
adc
fmul
dec
or
inc
pop
das
add
imul
les
push
cmp
or
bound
inc
inc
cmpsl
xchg
aam
js
decb
cmc
adc
and
clc
jne
fiadds
jae
jns
cmp
push
nop
or
mov
add
pop
pop
mov
mov
xchg
mov
and
notl
mov
outsb
fs
pop
mov
insl
pop
divb
cs
and
stc
nop
push
push
movsb
xorl
or
and
sbbb
les
stos
adc
ds
scas
pop
mov
or
sub
std
xlat
xor
push
js
test
ficomps
insb
or
jnp
or
sbb
adc
mov
dec
idivl
push
push
sbb
cmp
adc
dec
add
stos
in
ja
inc
shrb
dec
cld
add
js
jmp
push
dec
pusha
inc
xor
dec
mov
mov
std
sbb
aam
ret
jle
push
inc
aaa
and
xor
add
dec
fiadds
test
lock
mov
shrb
loop
fsubr
push
dec
adc
sbb
mov
xchg
sbb
outsl
xor
cmp
mov
mov
push
aas
adc
sbb
add
enter
or
fnstcw
mov
outsl
or
xor
mov
cmp
fcoml
and
pop
lret
push
pop
cld
adc
ljmp
aam
add
xlat
add
outsb
out
mov
adc
bound
sbb
jp
push
andb
daa
and
jle
out
in
stos
mov
shl
push
add
in
scas
or
cmp
sbb
push
fs
or
dec
imul
das
inc
insl
mov
aad
push
pop
jbe
mov
repz
fcomps
ja
dec
cli
insb
mov
inc
mov
pop
ss
sub
es
pop
add
inc
cmpsl
out
push
inc
sti
test
mov
pop
sbb
fisttpl
push
in
xor
mov
loop
xor
int3
inc
xchg
pop
add
push
sub
push
or
loope
push
pop
mov
andb
repnz
pop
mov
int
test
incl
mov
pusha
rorb
fistpl
pop
mov
cli
or
and
mov
add
pusha
call
xchg
pop
rcrl
stc
rcll
mov
lods
repz
sbb
inc
xchg
outsl
mov
loope
jmp
aas
repnz
repnz
or
jb
mov
rclb
mov
jl
pop
xor
mov
mov
loopne
dec
fs
les
movsb
push
jne
push
cwtl
andb
push
adc
es
push
xor
cli
adc
jecxz
lea
mov
inc
fisttpl
cmp
mov
sub
iret
pushl
jmp
jns
sub
faddp
mov
xchg
inc
ja
pop
lret
dec
xchg
mov
jl
mov
push
call
jge
in
gs
and
mov
sbb
jge
push
jp
or
nop
stos
sbb
xchg
jmp
out
push
ret
and
pop
push
add
rcrl
and
pop
cmp
mov
bound
cmpsb
push
jg
sub
dec
cmp
xor
gs
ret
xor
add
jb
add
add
add
js
sahf
push
add
cli
icebp
mov
pop
pop
pop
lds
fisubrs
sahf
inc
push
and
dec
xor
test
and
testb
inc
mov
xchg
inc
stc
clc
sub
loope
inc
adc
push
subl
je
pop
jmp
or
cli
enter
dec
fcmovb
cmp
jle
idiv
ljmp
lcall
adc
mov
and
int
pop
mov
inc
scas
mov
and
cmc
mov
add
pop
mov
adc
xchg
sbb
xchg
fidivrs
hlt
fstps
cmp
test
insb
sbb
sbb
fs
mov
test
pop
dec
incl
fidivrs
xchg
push
mov
daa
cli
sbb
pop
push
jle
xor
popf
lret
movsl
pusha
nop
cmp
add
jmp
xchg
and
je
xchg
test
shl
dec
fsub
dec
popa
push
in
fsub
negb
dec
shlb
mov
push
cwtl
or
inc
mov
mov
aas
pop
ss
sub
inc
jg
push
rorb
aam
in
ret
std
jo
add
lcall
lcall
mov
push
rcrl
mov
int3
xchg
js
enter
mov
add
ljmp
outsb
pop
lods
add
xor
divb
mov
or
testb
lret
sub
std
fistl
mov
jne
jo
or
inc
bound
lds
insb
mov
rorb
ss
mov
popa
call
xor
or
fdivrs
cli
mov
in
lcall
je
xchg
in
push
cmp
push
imulb
movsl
push
clc
add
ret
mov
xchg
mov
mov
push
push
nop
fbld
jp
loopne
test
xor
enter
add
adc
mov
xor
pop
mov
mov
decl
jo
cmpb
in
inc
xchg
push
or
dec
call
aaa
std
inc
mov
pop
dec
lods
pop
or
mov
lahf
sbb
mov
xchg
in
je
filds
sub
mov
sbb
cli
faddl
iret
arpl
out
and
js
out
pop
jmp
push
loope
ret
inc
mov
sbb
cmpb
pop
imul
mov
lret
mov
ja
js
mov
into
arpl
pop
inc
jp
ljmp
cmc
pushl
rcr
hlt
mov
sub
sub
dec
inc
add
cmp
xchg
movl
push
pusha
sbb
sbb
dec
sub
in
jns
and
call
push
cmc
xchg
stos
subl
ss
fsubrs
dec
pop
insb
out
icebp
lcall
sub
les
xchg
push
mov
mov
incl
shrb
pop
xchg
push
push
movsb
mov
stc
test
or
jge
imul
je
sub
inc
or
orb
scas
insl
sub
mov
xchg
ljmp
scas
data16
xor
dec
sbb
aam
int
shlb
out
sarl
nop
cwtl
jb
push
inc
push
cli
mov
pop
ret
call
pusha
testl
mov
repz
mov
in
add
clc
popa
add
enter
and
sbb
imul
push
xor
in
inc
jecxz
lds
pop
adc
sub
mov
xlat
jno
ret
push
ss
or
push
xor
decl
add
ret
cwtl
push
rcll
xor
pop
js
movsl
xor
inc
mov
add
and
movsl
cmpb
in
pop
mov
into
stc
cmp
inc
cmp
and
mov
mov
or
cmp
adc
fadd
mov
add
jne
fwait
lock
mov
inc
push
mov
jmp
push
fsubrs
mov
add
aas
lret
add
add
add
subl
dec
cmp
jnp
xchg
mov
cmpsb
push
inc
adc
push
and
ljmp
lds
pop
inc
in
xchg
mov
jl
std
xlat
mov
inc
cld
pop
imul
mov
movsb
testb
adc
mov
mov
nop
in
sub
fistpll
nop
pop
cli
rclb
in
fcomps
adc
shl
ret
xchg
mov
es
call
scas
jl
sbb
enter
sbb
or
lods
repz
mov
pusha
test
sub
ds
or
mov
add
push
mov
fdivs
stos
jle
jg
aam
mov
repnz
aaa
mov
test
adc
and
mov
pop
out
sub
loope
data16
scas
repnz
sbb
sbb
dec
sbb
adc
dec
movsl
ret
data16
int3
das
fcmovu
push
shrb
call
add
or
aaa
outsl
jmp
jge
jnp
add
fildl
movsb
or
mov
lds
test
mov
inc
sbb
mov
insb
stos
adc
sub
and
dec
clc
in
dec
and
std
and
fs
inc
sub
aaa
mov
test
cmpsl
inc
xchg
bound
outsb
movl
test
enter
aam
scas
mov
adc
bound
cmpb
mov
inc
xor
push
mov
loope
xor
jae
je
mov
add
sahf
ljmp
cmp
push
shll
mov
dec
sub
sarb
lock
ljmp
and
lcall
add
jle
aad
mov
push
add
or
ret
cmpsb
adc
adc
testl
rcr
shrb
push
fstpl
pop
pop
insl
xchg
or
xor
sub
mov
jb
in
mov
imul
mov
add
es
cmpsb
mov
pusha
dec
push
cld
shl
dec
lret
and
mov
and
jecxz
sub
jg
lret
movsl
dec
aas
pop
rclb
jmp
fwait
dec
shr
cltd
sub
mov
add
adc
xlat
xorl
adc
xchg
mov
jge
or
sar
test
adc
gs
sbb
jmp
sub
shrb
iret
cld
mul
lcall
dec
das
push
xlat
ja
repz
rclb
cmp
jl
mov
mov
and
data16
ds
sub
mov
int3
adc
cmp
jecxz
hlt
mov
stos
cmpsb
jnp
push
leave
push
in
inc
push
outsl
mov
push
ja
test
fsubrl
add
pop
add
ret
pop
push
call
sbb
rcrb
mov
scas
xchg
push
sub
mov
inc
push
pop
add
mov
mov
jae
mov
gs
pop
adc
inc
dec
mov
movsl
jb
and
neg
repnz
test
sub
jo
push
add
add
test
pusha
sbb
sahf
push
add
sub
and
and
fstpt
mov
testl
fdivs
aas
push
push
cmpb
mov
hlt
scas
fiadds
jg
scas
hlt
jne
adc
xlat
filds
fstps
xchg
hlt
fcmovbe
fsubl
call
cmp
sbb
mov
stos
rorb
adc
test
mov
xchg
in
jmp
jmp
out
imul
pop
sub
inc
and
cmp
and
add
jge
fstpt
inc
fdivrl
imul
lcall
inc
adc
aam
icebp
and
mov
ret
pop
ret
lahf
shrb
sahf
fistpll
sbb
and
lds
push
fcomps
mov
out
ja
scas
mov
adc
and
or
mov
inc
cld
into
stos
popa
push
fdivr
clc
and
jo
mov
push
mov
repz
add
test
push
jo
mov
push
lret
decb
outsl
fildll
shlb
pop
int3
sub
cs
dec
push
insb
divl
icebp
sub
fnstenv
xchg
cmp
inc
test
sbb
decl
int
sub
aam
fcmove
imulb
mov
rclb
icebp
das
inc
jb
lods
push
ficoml
add
pop
loop
call
sbb
mov
fsubl
mov
rcrl
pop
or
repnz
xor
int3
dec
idivl
lret
cmp
lods
pop
add
inc
cmpsb
pop
sarl
lock
jg
pop
std
xchg
add
xor
cmp
push
sbb
pop
fisttps
add
cmc
inc
imul
shrl
push
mov
icebp
repnz
add
ja
or
mov
call
mov
jp
add
mov
ss
push
push
or
rolb
sbbb
or
xor
in
lcall
inc
orl
pusha
mov
xchg
daa
sub
add
pop
scas
in
jg
int3
ret
adc
cmp
pop
fiadds
dec
and
and
sub
or
sti
or
scas
cwtl
and
loop
aas
test
outsl
xor
fcomps
shrb
mov
ljmp
sub
xchg
dec
icebp
mov
fisttps
aaa
decb
add
clc
adc
cld
stos
mov
movsb
mov
xor
sti
mov
cli
je
insb
pushf
imul
mov
add
addr16
cmp
out
mov
ror
fimuls
enter
hlt
repz
test
push
divb
pop
icebp
pop
lcall
stc
in
push
and
cmp
cmpsl
push
inc
insl
pop
sub
sarb
call
ljmp
sub
jl
pop
ljmp
or
dec
and
mov
jne
pusha
lods
jae
inc
sub
mov
jge
mov
or
sbb
add
repz
psubb
push
das
xor
or
jp
pop
sbb
inc
mov
jle
xchg
rcll
cmp
mov
push
mov
lahf
sbb
jae
das
popa
or
and
and
push
out
and
fimull
lock
sahf
cmc
dec
add
and
lahf
fcompl
mov
cli
bound
xchg
loop
es
insb
mov
scas
test
mov
xchg
xchg
or
jp
out
push
lahf
mov
jge
aas
stc
adc
jecxz
test
aaa
lea
sub
push
mov
sarb
movsl
inc
ljmp
aam
push
or
mov
in
loopne
mov
icebp
les
sbb
test
sub
setle
mov
jbe
out
call
pop
mov
mov
jo
add
push
pop
jno
arpl
xchg
roll
pop
pop
xor
gs
xchg
dec
sbb
test
jno
cltd
jne
or
neg
cli
push
sub
sub
or
dec
or
mov
fnstenv
inc
pop
push
mov
aam
aam
and
push
std
sar
xor
pop
add
sar
xchg
rorl
sub
add
adc
xchg
dec
mov
xor
pop
sbbb
scas
lock
jmp
or
mov
and
inc
xchg
inc
test
rcl
and
add
and
push
lock
pop
sarb
jg
and
ret
sub
in
inc
arpl
sbb
sbb
dec
insl
mov
jo
fadds
mov
ljmp
jecxz
mov
fsubl
repnz
and
dec
icebp
xchg
lea
push
or
and
in
mov
add
hlt
outsl
call
decb
stos
xchg
dec
pop
pop
mov
movsl
lds
jo
int
dec
add
add
in
cmp
testb
push
out
lret
cwtl
adc
mov
jle
cmp
push
sbb
mov
xor
push
lods
loop
incl
add
and
add
lea
push
ss
fst
ds
cwtl
inc
mov
mulb
test
add
pop
popa
sbb
call
add
mov
mov
outsl
push
mov
add
pop
lea
scas
xchg
in
dec
loopne
jmp
loopne
sub
jl
adc
lods
fsubrs
dec
cli
mov
inc
pop
sbb
enter
mov
mov
add
jle
jecxz
pop
cli
mov
cs
test
shr
rclb
add
out
pop
lods
adc
lock
lea
std
pop
leave
xchg
fucompp
cmp
shlb
lahf
sti
sub
jg
loope
xor
ljmp
out
clc
xor
cmp
xor
jl
stos
pop
xlat
adc
loopne
sub
adc
sbb
and
xchg
leave
sbb
xchg
sub
jle
mov
js
cmp
xor
aad
sub
lods
jge,pt
ds
xor
pop
sbb
cld
or
sbb
cmc
mov
mov
jg
dec
aam
mov
sub
cld
imul
dec
decl
add
add
cmpsb
and
and
mov
mov
mov
lcall
mov
mov
mov
xchg
adc
jmp
cmc
mov
or
add
hlt
test
xor
data16
cmp
clc
incl
xchg
pop
adc
movl
jns
adc
lcall
hlt
mov
aam
shlb
pusha
add
lret
mov
sbb
xchg
pop
or
add
pop
lock
xchg
test
idiv
sub
inc
mov
adc
inc
enter
ds
lcall
bound
sar
adc
xor
arpl
sbb
sbb
rolb
sub
pop
or
shl
imul
mov
js
scas
jmp
inc
jge
repnz
push
mov
fcmovnu
push
add
repnz
cmp
and
cmp
movsb
in
push
pop
in
ljmp
popa
aad
sub
adc
xchg
lods
pop
add
ja
lods
lahf
je
andb
sub
ret
push
jns
fwait
mov
decl
add
inc
std
mov
pushf
push
cltd
ficoms
or
popf
adc
test
sbb
sub
sub
mov
dec
int3
xchg
add
shlb
in
std
aaa
std
jb
push
test
push
stos
lret
outsl
sti
push
sbb
pushf
bound
popa
movb
cmpsb
and
jmp
sti
sbb
mov
in
xchg
inc
mov
lcall
and
popf
cwtl
inc
mov
popf
and
cmp
xchg
nop
int3
clc
and
adc
push
xchg
fistl
xor
adc
xchg
xchg
repnz
xorl
mov
add
jae
fildll
icebp
fwait
mov
dec
faddl
mov
cmpsl
sub
out
sbb
push
out
je
aam
add
sti
test
je
jg
mov
push
xchg
mov
aas
push
cs
sti
cmp
mov
fwait
inc
mov
jle
ret
push
sahf
push
ret
add
call
inc
lret
mulb
pop
dec
cld
jmp
add
inc
and
in
push
sub
stos
jl
mov
sub
fists
pop
ret
lret
xchg
sbb
pop
jo
push
inc
add
jl
sub
orl
mov
mov
pop
add
jne
bnd
cmpsb
add
mov
cs
inc
jle
cli
scas
jo
fs
adc
pushf
pop
push
lods
xorb
or
lcall
push
sbb
dec
sbb
pop
stos
ljmp
shl
pop
xchg
sbb
ds
and
jne
pushf
push
outsl
push
lock
ss
cwtl
add
clc
inc
je
mov
xchg
sbb
cwtl
sbb
jo
ja
inc
adc
jmp
loope
mov
jb
add
test
test
add
sub
sbb
mov
lods
add
je
push
inc
or
mov
scas
push
jp
sbb
loopne
jne
icebp
cwtl
scas
mov
int
xor
icebp
scas
fcoms
pushf
sub
lock
mov
fsubl
pop
repnz
jl
aas
inc
cs
mov
ss
stos
lods
sahf
sbb
adc
cmp
mov
scas
push
sub
xor
push
repnz
aam
sub
ljmp
aaa
jmp
movsb
add
jl
lret
adc
pusha
jns
in
stc
jg
push
fnstenv
mov
mov
clc
xor
mov
dec
lret
ljmp
rcr
mov
in
mov
movsl
icebp
lock
jbe
lret
xor
dec
cli
inc
filds
imul
dec
cmpb
icebp
lods
adc
cs
test
js
push
push
insl
mov
dec
sti
leave
outsb
call
jb
dec
mov
pushl
outsl
movsbl
scas
add
adc
xchg
adcb
xchg
or
xor
push
lea
xor
mov
fadd
adc
or
es
push
pop
mov
fdivrl
jno
dec
cmp
es
and
ja
adc
jne
sbb
add
inc
push
and
fidivl
repnz
mov
cmp
push
mov
outsb
stc
int
jae
adc
mov
push
movsb
mov
sub
cmp
xor
sub
or
inc
loopne
inc
mul
adcb
stos
push
out
xor
adc
stos
xor
add
push
jecxz
mov
inc
inc
clc
outsl
decl
js
insb
inc
les
das
idiv
push
add
jae
out
xchg
mov
outsl
xor
popf
cmp
xor
mov
push
pop
xlat
xchg
push
cs
or
shl
add
lea
test
scas
dec
ret
and
mov
loope
mov
inc
inc
fs
lcall
sub
push
sub
lods
xchg
ret
shrb
and
mov
sub
mov
or
fnstsw
sahf
out
jmp
test
scas
stos
rcrb
dec
aad
fisttpll
pushw
dec
cld
inc
sub
mov
xchg
fdivrs
mov
loop
xor
shl
push
fwait
movsl
scas
pop
xchg
mov
pop
sub
inc
sub
xor
insb
sub
xchg
cs
jmp
scas
js
clc
iret
mov
push
iret
scas
push
js
xor
push
jp
imul
loop
mov
pop
pushl
pop
mov
mov
aas
add
out
clc
push
inc
sti
test
pop
sbb
add
mov
dec
loope
mov
xchg
pop
shll
mov
cmp
loopne
call
xchg
rolb
in
dec
push
or
and
jbe
testb
pop
mov
xor
arpl
loop
loop
imul
adc
out
les
push
jno
or
xor
dec
cli
jp
rorl
pusha
stos
sbb
pop
ja
adc
xor
lock
xchg
xchg
xchg
dec
int3
xchg
orb
out
inc
jge
sub
push
mov
ljmp
jbe
aad
popf
fcom
push
hlt
mov
out
or
add
dec
cmpsl
sbb
out
cmpsl
adc
jns
or
dec
scas
or
stos
mov
lds
nop
or
ljmp
sbb
push
xor
lahf
add
ss
lds
inc
push
add
andb
pop
pop
mov
sbb
jp
mov
push
xchg
push
xchg
test
or
iret
inc
or
mov
mov
jnp
dec
sahf
mov
scas
adc
inc
fildll
xor
aas
mov
cld
xchg
pushf
xor
ret
loopne
ss
mov
fs
pop
cmp
lcall
sub
mov
xor
mov
mov
ret
out
dec
aam
loop
push
and
aam
cmc
xlat
sub
pushf
xor
filds
sub
jae
inc
in
lahf
jmp
and
jl
jg
mov
lahf
pushf
call
int3
dec
jecxz
jg
fidivs
insl
popf
enter
mov
mov
cmp
push
adc
dec
jo
lcall
insl
lret
std
add
jmp
jmp
mov
adc
adc
subb
cmpsb
pop
leave
inc
cld
mov
test
test
push
inc
mov
aam
mov
cmpsl
scas
call
adc
ret
cmp
int3
cld
pusha
rclb
fmuls
xor
adc
clc
mov
jb
push
sub
outsl
rolb
fistpl
sub
mov
xor
or
fistpll
pushf
inc
mov
mov
jnp
mov
sbb
out
ds
test
sub
mov
sub
hlt
cmpsb
adc
idiv
pop
mov
jb
jbe
cmp
cmpsl
cmp
ds
add
repz
aad
cmp
push
jmp
adc
ss
pop
loopne
aas
test
mov
in
shr
popf
mov
sub
push
rcrb
fs
outsl
fs
rcr
andb
pop
fimull
jge
stos
popf
xchg
loopne
mov
sbb
mov
pop
fiadds
pop
xor
xor
es
mov
ret
jg
out
js
aaa
in
dec
add
test
pop
nop
lahf
add
pushf
cmp
idiv
out
jo
subb
test
sbb
je
push
dec
fisubl
pop
adc
stc
stos
sti
dec
sti
inc
mov
jmp
push
xor
rorb
sub
xor
mov
or
mov
test
inc
xor
dec
jmp
dec
rorl
pop
in
sub
adc
decb
jb
outsl
mov
incb
lds
stos
fsubs
mov
test
test
lret
in
jns
xor
dec
outsl
call
add
mov
orb
fdivrl
out
lock
mov
pop
fcomps
movsl
cmp
adc
stos
decl
push
lods
ds
out
outsb
push
mov
lahf
int3
adc
sahf
insb
in
xchg
mov
jmp
cli
and
rclb
clc
iret
shrb
pop
data16
clc
stos
nop
dec
hlt
sbb
mov
mov
mov
fidivrs
je
sar
xchg
add
insb
jle
mov
fs
xor
or
ljmp
add
scas
scas
sub
incb
hlt
addl
out
cli
cmp
addl
movsl
push
dec
ja
or
das
decl
sub
fs
dec
or
xchg
incl
inc
pop
jb
movsb
rol
fldt
cmc
jp
dec
mov
dec
and
push
jl
test
mov
ljmp
loopne
fisubrs
mov
sar
adc
add
lret
addr16
mov
rcl
lock
jp
add
add
or
dec
jmp
or
clc
push
lcall
std
fisubs
xchg
test
push
pop
data16
andb
xchg
dec
popa
xor
push
ds
in
imul
mov
movsl
fists
and
push
jmp
subb
mov
push
inc
loope
test
ret
pusha
testb
mov
xor
add
add
pop
sub
shlb
xor
pop
jmp
mov
int
ds
pop
cwtl
cltd
or
test
cmp
call
sub
fiadds
je
icebp
cmp
mov
inc
adcb
push
mov
test
cs
xor
add
loopne
dec
mov
sub
inc
xchg
nop
pusha
pop
cmp
enter
rol
jmp
ret
clc
cmp
mov
jns
jp
dec
inc
ret
je
sahf
adc
int
xor
mov
lock
cmpsl
push
loopne
add
lret
dec
jle
loopne
xchg
loopne
or
dec
pushf
negl
hlt
push
idivl
outsb
imul
scas
mov
aad
add
and
or
inc
mov
add
jnp,pn
fisttps
lds
out
inc
les
pop
xchg
lock
mov
stos
or
fisubrs
or
movsb
and
std
test
inc
insb
add
ja
pop
loop
mov
mov
or
out
xor
les
push
push
loope
xchg
inc
lcall
jae
mov
inc
push
mov
mov
outsb
arpl
mov
stos
js
dec
test
push
pop
mov
mov
cmp
xchg
fsubl
leave
pop
push
push
push
xor
push
shrb
xor
add
jns
fadds
push
mov
subb
int
test
data16
lea
mov
inc
push
jmp
add
ficomps
jl
int
sbb
sub
je
cmp
sbb
jbe
push
clc
mov
cmp
arpl
push
lret
jo
mov
in
ret
inc
ret
pop
shl
cmpb
dec
call
shr
pushf
fisubrl
adcb
inc
pop
or
cmp
xchg
fwait
call
cwtl
or
mov
in
outsl
mov
test
cs
out
mov
pusha
repnz
int3
xchg
cmpsl
dec
push
push
xor
push
dec
push
adcb
sbb
pop
lock
faddl
rolb
popa
mov
mov
ss
cmpb
or
insb
loop
or
jnp
cmp
popa
push
add
insb
subl
int3
lcall
adc
or
or
jge
filds
pushf
in
decl
nop
cltd
sahf
in
and
roll
repnz
aaa
jecxz
pushf
repnz
xchg
lock
jge
outsb
push
mov
push
add
jl
mov
movsl
mov
pop
daa
push
mov
fidivrs
mov
cli
inc
clc
outsl
xchg
mov
and
push
hlt
xchg
pop
inc
stc
add
iret
sbbb
call
mov
fisttpll
cmpsb
xchg
sub
inc
shr
movups
rorl
adc
jb
lcall
repnz
push
sbb
mov
ss
push
lds
adc
jecxz
adc
in
push
mov
fs
push
cld
sbb
jb
out
adc
lock
mov
test
lds
stos
sbb
icebp
pop
mov
pop
mov
sub
push
fcmovu
pusha
push
enter
cwtl
sbb
fcoml
jbe
mov
lret
jns
pop
stos
shr
scas
cmp
inc
mov
sbb
pop
fistpl
test
jp
pop
stc
sbb
ja
shrl
mov
jg
pop
jno
or
imul
hlt
inc
push
jmp
mov
inc
lret
stos
or
es
insl
xor
cmp
mov
jge
inc
mov
adc
vmread
cmc
pop
sub
jecxz
xchg
mov
std
lods
rol
inc
and
ret
data16
cmp
or
adc
pop
adc
emms
pop
into
loop
pop
or
push
test
popf
clc
pop
mov
sub
and
inc
mov
loop
mov
pop
jne
add
and
xor
scas
push
and
xchg
mov
lods
sbb
mov
inc
mov
lock
fidivrs
xor
mov
aaa
jo
push
movaps
lock
cs
les
cmp
pop
cli
call
mov
push
into
popa
cmp
les
insb
outsl
fisubs
pop
or
mov
scas
xchg
cli
mov
xor
and
imul
or
loop
out
sbb
xchg
aad
sub
jecxz
mov
gs
aaa
push
pop
jns
scas
mov
ds
cmp
nop
addb
incl
jp
ret
push
push
jno
xchg
fdivp
ss
hlt
jl
inc
sub
cmp
inc
sub
popf
adc
mov
mov
mov
jge
adc
mov
adc
mov
addr16
ficoml
test
xor
pop
push
leave
inc
adc
add
xor
mov
jg
dec
aad
jecxz
popf
add
mov
lock
push
das
adc
fstpt
idiv
xor
lahf
mov
cmp
fidivrl
cmp
mov
push
or
add
data16
jmp
inc
js
std
iret
cs
decb
pop
pop
into
lret
sub
cld
inc
ficompl
ja
mov
lcall
dec
es
mov
and
out
mov
xchg
out
adc
fcmovnu
and
mov
hlt
fdivrp
cltd
out
push
inc
jl
rorb
fsubrl
add
jae
xchg
in
xchg
addr16
sbb
ja
and
lret
roll
mov
stc
popl
fists
sub
cli
xlat
cmp
mov
fdivrs
or
clc
mov
addr16
mov
enter
mov
js
fstpt
sbb
cli
add
mov
cltd
clc
data16
scas
call
jg
or
and
incl
dec
adc
movsl
les
sbb
repnz
mov
int
or
xchg
add
or
pop
fs
push
lods
out
sub
xor
inc
lcall
loop
jecxz
lds
mov
out
loope
je
call
mov
inc
rorb
push
push
testb
leave
insb
pop
cmpl
pop
and
jg
inc
cmpl
xchg
mov
cmc
jne
jg
shll
inc
pop
clc
cld
xchg
inc
jmp
and
mov
incl
or
cmp
test
and
enter
loope
add
lcall
data16
dec
xchg
pop
and
repnz
enter
sbb
jg
push
flds
clc
push
jne
xor
inc
jmp
or
ret
repz
movsl
ss
mov
push
xor
mov
cld
in
in
imul
out
paddw
adc
mov
push
sub
or
mov
jne
leave
arpl
lock
cmp
push
and
pushf
add
cli
sbb
xlat
into
in
addr16
int3
xor
popa
insl
sbb
push
inc
sbb
mov
ss
data16
push
outsl
and
xor
std
roll
jbe
mov
pop
sub
fildll
das
xor
cmpb
sbb
lret
fisubrl
add
fs
iret
inc
aaa
and
ret
mov
inc
cli
inc
sub
push
fs
mov
nop
test
stos
cmpsl
gs
cmpsb
lds
dec
js
jmp
pop
les
xchg
push
les
pop
and
insl
mov
inc
mov
xchg
push
fcom
clc
xor
dec
jb
sub
xchg
pop
mov
pop
sti
pop
sub
cwtl
popa
xchg
mov
cld
push
jl
or
sub
add
push
inc
int3
sbbb
dec
jecxz
push
push
stos
insb
dec
cmp
push
mov
in
insb
dec
in
dec
cmp
sti
cmpsl
insb
mov
adc
xor
cmp
push
inc
add
sbb
ds
mov
call
dec
and
add
add
pop
mov
decb
in
cmp
lret
das
pop
sub
push
inc
les
push
out
inc
and
inc
shrl
sub
xchg
hlt
inc
inc
fwait
add
incl
loop
jbe
hlt
sub
imul
into
fsubrs
mov
and
dec
jg
jmp
mov
mov
push
xchg
mov
repnz
or
adc
jle
data16
sbb
push
jnp
mov
test
cmp
std
insb
or
loopne
loopne
lea
jle
ficoms
lock
jp
mov
aam
cmp
or
or
clc
push
add
mov
mov
lock
cwtl
push
push
xchg
clc
sub
out
mov
mov
dec
jecxz
loopne
xchg
int
orl
sbb
fisubs
je
repnz
xor
add
add
stos
mov
loop
lock
xor
ljmp
dec
adcl
mov
dec
jg
aaa
push
iret
sbb
sbb
int
mov
mov
repz
insb
sub
and
pop
push
imul
xchg
icebp
stc
adcl
ljmp
xchg
aam
filds
rol
xor
movsb
pop
test
inc
or
or
dec
or
dec
cli
push
ja
mov
sub
sub
ja
fsubrl
pop
js
jb
les
push
push
mov
inc
add
push
mov
adc
mov
dec
inc
je
and
and
clc
out
adc
mov
cmpsl
into
mov
loopne
cmp
push
shlb
jl
mov
sbb
std
incl
lret
mov
outsb
mov
push
and
or
outsl
ret
nop
cli
call
mov
subl
lds
push
mov
lcall
or
sbb
call
in
lret
fst
mov
inc
sub
xor
jo
push
jmp
adc
gs
popf
loopne
out
call
lcall
jmp
aam
xchg
pushf
test
and
pop
stc
es
pop
sbb
adc
add
jmp
mov
sub
repz
btr
js
push
xor
imul
push
mov
xor
test
jle
lds
jnp
fimull
sbb
xchg
std
es
leave
and
xor
cmpsl
xor
rorb
jne
jle
mov
mov
xor
cmp
out
lods
xor
cltd
test
lock
jnp
pop
adc
sub
shl
push
jg
test
xor
fiaddl
aad
and
bound
dec
dec
push
mov
pusha
mov
mov
xchg
mov
push
cld
lahf
test
pop
mov
dec
lods
int
mov
jge
loope
call
mov
arpl
inc
dec
cwtl
lahf
and
sarl
sbb
movsb
sbb
add
mov
xor
push
pop
aaa
add
dec
add
call
cli
jmp
xor
xor
or
adc
pop
jno
mov
push
aam
or
cli
sub
mov
adc
adc
or
lock
out
xor
insb
fisubrl
dec
xor
out
clc
aas
mov
out
xchg
add
sbbl
sub
add
cwtl
loop
and
fidivrs
inc
jb
jecxz
movb
push
add
or
inc
test
add
lock
mov
xor
xchg
std
gs
and
inc
jge
pop
mov
fistps
fdivs
dec
pop
inc
addr16
outsb
decw
add
mov
mov
ret
fisubrl
lock
jo
or
or
cmp
cmpsb
sahf
and
add
pop
in
hlt
cmp
jle
addb
add
inc
in
push
xor
fmuls
jb
jbe
mov
push
lcall
dec
mov
subl
out
jmp
rcll
insl
hlt
stos
or
and
add
clc
outsl
clc
aaa
fadds
das
xchg
mov
cmp
fchs
mov
adc
rorb
add
nop
ss
jl
mov
fimuls
push
fsubs
fimull
mov
xchg
aam
imul
sbb
jno
fcoml
mov
insb
xor
or
mov
ja
sbb
aam
inc
dec
repnz
lods
mov
les
sar
push
and
popa
ret
ja
sub
or
dec
movsb
ss
test
divps
je
lods
outsb
push
jb
stc
out
push
movsl
cmp
aad
stos
clc
test
das
test
adc
call
xor
pop
add
pop
jp
or
adc
test
decb
xor
jp
js
add
ja
adc
push
clc
inc
push
andb
ret
leave
subl
add
or
sub
leave
repz
cmp
and
dec
jp
and
mov
jle
pop
add
data16
fbstp
push
mov
rorb
test
pushf
repz
cld
or
scas
shlb
jl
enter
add
cmp
out
mov
rcll
inc
add
fists
and
xchg
clc
insb
gs
cli
add
mov
mov
aam
mov
leave
loopne
jno
test
xchg
and
pop
fcmove
pop
imulb
dec
or
and
mov
mov
jg
xor
and
cmpl
push
push
cmp
add
sahf
and
mov
adc
dec
push
xor
fs
loopne
stos
push
or
xchg
adc
sbb
fdivrs
cmp
jge
add
pop
inc
pop
cwtl
dec
movsl
or
insb
jecxz
add
add
adc
and
jno
mov
ret
mov
loopne
in
jle
push
pop
sbb
or
fwait
lods
leave
lret
fisttpll
call
data16
fisubrl
mov
addr16
aam
scas
and
in
mov
jno
mov
mov
int3
push
push
sbb
dec
add
jp
or
stos
loopne
and
and
mov
sbb
sub
outsl
add
push
ret
sub
mov
sub
enter
xor
sub
sbb
jo
push
call
pushf
xchg
cs
and
dec
pop
scas
ret
push
sbb
inc
in
pop
out
outsb
adc
jne
rcrl
mov
lods
push
pop
ret
inc
pop
sub
hlt
push
sbb
fists
mov
xor
push
hlt
mov
push
hlt
fnsave
imul
and
pop
dec
mov
adc
loop
and
pushf
sub
adc
clts
scas
outsl
hlt
jmp
js
hlt
pop
pusha
mov
and
dec
push
add
inc
hlt
and
sbb
mov
addr16
dec
sbb
dec
inc
mov
add
inc
sar
imulb
sbb
push
and
int
xchg
hlt
sbb
pop
mov
cld
inc
or
sbb
or
daa
mov
push
add
or
jge
js
xor
dec
loopne
or
sbb
add
dec
mov
mov
pop
adc
push
or
pop
orl
fistpll
xor
cmc
xor
stos
in
stos
mov
hlt
fst
shll
in
inc
adc
dec
outsl
cli
inc
mov
add
and
pusha
adc
clc
jmp
add
adc
sub
inc
mov
cld
ss
cmpsl
pop
mov
addl
aad
rclb
xor
and
and
sarb
push
push
test
xor
ret
or
jne
.byte
pusha
lcall
loope
and
adc
inc
adc
adc
test
pushf
call
incl
mov
xor
push
add
push
xor
fs
repz
sub
pushl
out
dec
ja
mov
insb
push
pop
or
adc
inc
fsub
cmpsb
adc
lcall
push
movsb
pop
xor
shll
insl
cli
xor
orb
pop
jne
push
aam
push
inc
jo
lcall
xchg
cmp
push
pusha
adcb
les
and
repz
or
or
mov
ljmp
filds
nop
imul
cmp
pusha
mov
ret
adc
xorl
dec
repz
push
jecxz
push
nop
shlb
cmpsb
lcall
mov
jmp
shll
arpl
sbb
clc
inc
jns
lea
pop
sub
mov
mov
cli
fldt
ds
leave
add
shrl
call
push
jns
js
and
sti
enter
loopne
cwtl
orb
mov
jle
mov
mov
dec
rcr
pop
and
addr16
mov
or
movsl
lahf
mov
cltd
mov
xchg
pop
ficompl
popf
dec
out
cwtl
xor
and
incl
lret
aam
cmp
mov
push
xor
outsb
clc
arpl
pushl
sub
into
sub
push
out
push
jmp
inc
mov
and
inc
dec
jg
adc
jmp
fadds
dec
imull
gs
data16
lock
outsl
pop
je
sbb
xor
xor
mov
inc
stos
lock
jge
or
mov
jmp
xor
push
sub
addr16
jno
mov
jp
lea
out
dec
mov
es
mov
jae
pop
enter
mov
push
pop
lahf
sub
pusha
pushf
mov
jb
decl
add
inc
stc
jle
es
fists
pop
dec
cltd
jae
shll
dec
into
and
ljmp
xchg
push
adc
jo
sub
sub
daa
jno
out
dec
inc
loopne
out
fcmovnbe
cli
ljmp
or
or
add
ret
mov
outsl
cmc
dec
icebp
rorl
addr16
pushl
push
push
inc
inc
add
inc
test
int
loope
push
sub
in
hlt
out
fmull
inc
cmp
jae
xchg
push
popa
inc
xlat
xchg
adc
cmp
xchg
cmpsb
enter
lcall
pushl
hlt
and
scas
pop
add
cmp
ds
decl
in
cld
pop
mov
fistps
xor
push
jmp
mov
adc
sub
or
std
cmp
sbb
mov
sub
mov
inc
movsb
movb
or
mov
or
out
add
mov
in
repnz
jnp
and
pop
pop
fstps
mov
adc
inc
jp
xlat
ret
xor
call
in
jb
and
or
sahf
xchg
mov
and
xchg
aad
jl
push
mov
fs
or
pusha
lods
inc
call
popa
add
jb
add
ljmp
mov
and
push
cmp
scas
lcall
fidivrs
jecxz
incl
mov
cmpl
add
mov
and
push
incl
imul
jb
xchg
xchg
pop
pop
jl
pop
call
sti
inc
icebp
cltd
mov
sbb
or
aaa
dec
add
push
add
rcrb
jg
ret
xchg
xchg
idivb
ret
fs
out
dec
lock
pop
push
sbb
jnp
incl
cmovne
in
out
sahf
aad
lods
cmpsb
mov
fdivs
aad
cmp
jno
pop
add
fdivr
decl
cmp
jno
out
fwait
in
jmp
pop
mov
pop
xor
fistpl
cltd
gs
fadd
adc
int3
add
decl
into
stc
dec
jle
push
inc
and
gs
mov
incl
add
sbb
dec
mov
cmp
cltd
aad
inc
mov
aad
xchg
arpl
stos
add
jns
loop
mov
outsl
fistpll
push
js
jnp
cmp
add
sahf
or
xchg
repz
push
xchg
mov
add
mov
push
xchg
test
cwtl
add
add
add
rcl
pop
vpmaddwd
adc
lcall
push
bound
jns,pt
addb
adcl
dec
push
sti
outsl
mov
sub
sub
xor
adc
jecxz
ret
or
add
ljmp
mov
xchg
pop
mov
inc
incl
push
xor
and
jns
fistpl
dec
sbb
add
xlat
mov
fistpll
imul
pop
fldcw
add
add
dec
xor
lcall
pushl
push
add
ja
sub
add
add
mov
fwait
outsb
ljmp
std
loopne
rorl
add
stos
add
add
or
outsl
outsl
js
lcall
or
jg
inc
ljmp
out
inc
jle
cmp
xor
repnz
cmpsl
mov
sar
sub
testb
es
pminub
mov
fidivs
sar
mov
das
add
add
jne
mov
mov
incl
xor
add
inc
mov
out
psubw
add
mov
add
lods
not
les
dec
sbb
pop
push
inc
and
add
imul
incl
aad
and
neg
add
loope
sub
mov
in
mov
add
add
add
in
jbe
loopne
mov
clc
add
jg
out
lods
sbb
insb
fucomp
sbb
jl
inc
rorb
xchg
sub
sub
repnz
in
pop
jo
inc
xor
cwtl
xor
clc
add
jo
mov
loope
mov
sbb
cs
inc
cmp
inc
mov
out
jge
sbb
outsl
cmpb
loope
add
xchg
pushf
insl
and
lods
jecxz
jle
mov
dec
mov
add
adc
sahf
or
xchg
out
adc
insb
sbb
pop
add
shll
or
repz
and
fbstp
stc
inc
rcr
loop
fsubs
and
fst
add
add
das
es
fwait
jecxz
in
in
lret
jg
inc
test
push
ljmp
cmpsl
enter
inc
dec
fcomps
push
add
loopne
divb
loop
dec
aaa
dec
lds
add
xor
xchg
ret
mov
icebp
nop
pop
icebp
mov
push
adc
pop
sbb
sub
add
imulb
or
jmp
push
xchg
rcr
shlb
insl
push
ret
mov
cwtl
dec
add
jmp
mov
scas
cmp
fistps
stc
add
jmp
push
in
mov
mov
addb
aaa
out
addb
movl
fucomi
std
jo
add
add
xor
out
mov
loopne
fimuls
in
xchg
dec
pop
xchg
lock
aaa
mov
mov
xchg
adc
xlat
pop
fbld
add
xchg
call
dec
sub
fstps
and
mov
inc
pop
mov
into
int
das
clc
push
into
pop
pop
orb
add
fcomip
mov
lahf
fdivp
cmpsb
mov
pop
add
and
nop
sti
std
sbb
cltd
sarl
push
in
cmp
shrl
mov
adc
das
mov
push
ja
mov
cmpsb
jg
aaa
sub
clc
add
imull
imul
add
adcl
sbb
imul
es
pop
outsl
xchg
lcall
fildll
and
ljmp
sub
cmp
lret
inc
dec
add
inc
dec
not
sbb
add
idivl
jecxz
fcomip
xor
add
inc
jmp
stos
push
or
out
mov
dec
insb
js
pop
push
in
push
rorl
sub
out
mov
mov
ljmp
daa
and
push
cmpsb
jbe
imul
mov
push
mov
fldl
mov
mov
clc
fisttpl
rorb
mov
mov
mov
movsb
loopne
cmp
cli
xchg
adc
ret
mov
and
jmp
cmp
pop
mov
je
int3
popa
call
fadds
push
sti
shl
and
mov
aaa
sbb
inc
mov
xor
add
xor
scas
mov
inc
add
mov
mov
mov
out
xchg
or
std
push
jecxz
or
aad
jle
mov
lds
fnsave
pop
pop
sbb
cmc
xor
mov
gs
movsb
dec
jnp
sub
cli
xchg
add
ficoml
push
aas
adc
orb
and
dec
xchg
popf
hlt
pop
adc
add
jb
aam
out
sbb
gs
cmpl
nop
fidivl
pop
aam
mov
shrl
add
push
ds
pop
xor
inc
fistl
add
lods
pop
outsb
inc
enter
inc
mov
pop
and
das
lcall
push
adc
lock
cmp
mov
inc
negb
sti
push
dec
mov
jno
xor
or
test
lods
dec
sbb
outsl
scas
cli
rorb
mul
bound
test
xor
insb
xor
mulb
cmp
push
pop
out
lock
jp
add
jbe
in
or
daa
add
inc
xchg
mov
sub
add
cmp
in
and
push
into
xchg
mov
enter
repnz
je
dec
jb
add
icebp
outsb
dec
push
test
add
pop
call
js
out
mov
pop
and
fildll
ljmp
add
aam
jecxz
shl
adc
pop
sbb
les
mov
stos
lods
mov
xchg
mov
push
push
and
add
jle
pushf
cmp
and
pop
std
sbb
scas
push
shl
std
sub
insl
sub
inc
fimull
or
sbb
mov
dec
pop
cli
and
jmp
xchg
inc
mov
aam
fildll
sub
sti
mov
and
mov
push
aaa
subl
data16
divb
aam
into
ljmp
ja
mov
adc
or
rcll
mov
inc
adc
mov
push
cwtl
idivb
stos
mov
into
lods
mov
mov
dec
ffreep
cmp
pop
clc
and
les
mov
xchg
add
lock
mov
ja
cmp
push
or
sub
das
mov
add
dec
loop
fneni(8087
sbb
adc
cli
inc
inc
test
cmpsb
ret
fdivr
sti
loopne
sbb
pop
pop
mov
push
daa
jae
sahf
cli
xor
xchg
push
jmp
fisubs
dec
mov
icebp
dec
and
cmp
lcall
scas
pop
push
adc
pop
mov
inc
inc
int
lcall
jb
cmp
aam
cmp
pop
lock
add
pop
shlb
inc
outsb
stos
mov
or
cmp
mov
shll
sub
inc
inc
mov
scas
cmp
and
or
push
mov
repnz
jns
mov
mov
dec
roll
pop
test
jl
push
std
sub
aaa
add
xor
scas
testb
add
fsubs
push
xchg
test
xor
decl
outsb
rorb
adc
sahf
clc
sbb
lods
loop
idivl
cmpsl
mov
adc
fists
cld
fistps
sbb
or
and
sbb
faddl
cmp
mov
push
inc
dec
push
andl
dec
andl
add
pop
icebp
pushl
andb
mov
jg
push
add
sti
ret
lods
mov
cmpsl
or
mov
sub
or
or
push
out
frstor
fcoms
lea
cmpb
into
sub
filds
mov
mov
xchg
pop
adc
lds
dec
add
sbb
cli
cmp
stos
scas
js
iret
stc
cmp
xor
lock
adc
aad
loopne
pop
fsubrs
sarb
cwtl
add
fsubr
inc
push
sbb
jmp
out
mov
sub
or
mov
pop
fisubl
inc
out
or
mov
dec
cs
push
adc
es
fbstp
fildl
inc
xor
mov
xchg
outsl
incl
cmp
mov
xor
xchg
arpl
je
cmpl
adc
int
cs
call
and
cmp
lock
pop
dec
add
jmp
adc
jl
push
jle
jbe
pop
jg
ja
ja
leave
cmp
adc
nop
stc
adc
fiadds
mov
inc
push
bnd
pop
cld
push
into
aad
cmp
notb
lods
or
fldenv
xchg
daa
fmuls
fs
es
cmp
cwtl
add
dec
sarb
ds
pop
xorb
xchg
cli
dec
mov
inc
or
mov
call
jns
jb
aam
bound
icebp
shrb
adc
movsb
out
ljmp
and
pop
cmp
jl
add
fadds
mov
add
push
ss
std
inc
or
xlat
les
sub
bound
push
loopne
cli
aaa
adc
test
cmpsb
pop
mov
ja
xor
es
push
inc
jecxz
mov
cmpsl
or
lcall
adc
xor
push
les
stos
push
pusha
and
sar
pop
js
imul
adc
enter
adc
fildll
sbb
out
cli
sub
aam
jmp
fcompl
inc
lcall
arpl
adc
mov
push
cld
push
pop
xchg
pop
sbb
mov
or
ljmp
cmpsb
cwtl
popa
call
cwtl
sub
xchg
je
or
comiss
jle
shll
fisubrs
loope
hlt
mov
loop
xchg
decl
mov
lcall
idivl
ja
mov
mov
push
mov
inc
add
mov
or
sbb
push
or
dec
lcall
sahf
cwtl
jecxz
adc
stos
cmpsb
mov
cld
inc
test
pushl
xor
inc
les
lds
jo
les
out
jbe
icebp
add
or
push
fistpll
stc
xchg
repz
lock
lahf
jmp
cmp
dec
insb
mov
jmp
and
addb
pop
outsb
ljmp
fwait
dec
scas
fidivl
mov
shll
cmp
aaa
ljmp
inc
xor
movsl
mov
je
out
mov
and
fsubr
outsl
push
mov
cmpsl
mov
inc
cld
lods
add
outsl
lcall
pop
xor
pop
dec
inc
lret
ljmp
int
adc
pop
lock
pop
xchg
call
add
add
and
mov
mov
clc
add
xor
ret
jne
dec
test
fwait
mov
stc
add
adc
add
ret
or
pusha
adc
mov
pop
sub
jle
sldt
shlb
pop
push
or
or
pop
std
push
add
mov
adc
mov
cltd
pop
in
pop
fsubrp
sub
insl
add
mov
ret
push
inc
pushf
sbb
push
mov
add
movl
in
dec
sub
jge
test
push
mov
ret
or
outsl
xor
sbb
adc
dec
inc
es
ljmp
roll
sub
jnp
dec
js
sub
push
lock
mov
mov
sti
mov
cmp
mov
and
mov
mov
neg
and
adc
jo
aam
add
mov
loopne
into
pusha
repz
pop
mov
shll
or
fidivrl
xchg
mov
jle
icebp
dec
test
or
jo
sarl
cmp
dec
xchg
mov
ret
pusha
sub
or
cld
fcomp
sbb
pop
hlt
dec
loopne
ret
call
loopne
and
lock
push
add
mov
jne
sub
stos
cmp
add
lock
loopne
call
dec
jo
ror
add
mov
jge
adcl
sbb
call
lock
mov
dec
pop
mov
jo
mov
xor
icebp
mov
or
repz
aas
neg
scas
call
or
lock
popa
xor
xor
xchg
xor
xchg
loopne
lea
outsb
cmp
loop
jo
rcrb
cmp
xor
pop
fsub
lcall
ret
ja
and
add
ljmp
or
push
and
and
sahf
xchg
and
mov
sub
mov
into
andl
push
xor
xor
xor
push
and
mov
push
aaa
stc
mov
push
call
add
in
in
dec
xor
mov
loop
add
out
lods
sbbb
leave
lock
xchg
pop
dec
push
cmp
inc
idivl
jb
loope
mov
in
add
sti
sbbl
ret
push
xlat
dec
adc
mov
add
lea
notb
aas
fisubs
or
push
neg
movsb
rol
rcll
aas
mov
cli
push
jl
lret
dec
xor
loope
or
pop
lea
push
fiadds
push
jne
push
in
mov
ljmp
pop
je
mov
add
jbe
and
inc
jno
fcmovnb
and
rol
mov
enter
icebp
cmp
call
sbb
test
inc
outsb
mov
rorl
cmp
sub
cmp
sbb
int
roll
mov
pop
rorb
mov
add
ret
add
sub
or
mov
inc
fs
inc
neg
push
adc
lods
into
shr
cmp
adc
int3
pop
cwtl
mov
pop
test
roll
jmp
ret
jg
sbb
ret
push
movsb
push
cmp
stc
aas
jecxz
and
pop
mov
int
push
add
imull
push
inc
js
ret
add
push
cli
adc
add
pop
negb
nop
inc
fbld
inc
mov
jp
jg
lahf
xor
setno
mov
std
push
sahf
pusha
add
pop
add
cld
sub
aas
rolb
jg
fs
cli
sbb
gs
mov
inc
push
loopne
mov
cmp
inc
stos
lcall
sbb
add
add
mov
sahf
lret
add
es
mov
pop
mov
lcall
add
je
outsb
inc
inc
aaa
es
push
imul
xor
cmpsb
out
lahf
add
mov
addl
xchg
add
jne
push
jne
fisttpll
adc
jmp
push
in
pop
outsb
mov
cmpsb
add
adcb
in
ljmp
mov
inc
sbb
repz
int
icebp
jb
idiv
ljmp
mov
dec
add
mov
fwait
or
mov
inc
lcall
add
push
pop
mov
out
push
shll
push
pop
sub
stc
adc
and
or
leave
insb
sbb
in
shll
add
test
pop
rolb
out
dec
mov
adc
mulb
ficoml
adc
mov
dec
push
in
faddp
rolw
xchg
pop
shlb
jl
out
mov
pop
cmp
mov
movsb
add
les
imul
mov
ss
or
mov
pop
sbb
push
push
cmp
in
dec
push
aad
mov
push
mov
mov
add
inc
add
jmp
mov
sbbb
adc
xor
clc
mov
test
cmp
enter
mov
or
rolb
in
call
sub
mov
sbb
into
mov
dec
xchg
and
ljmp
shrb
test
cmp
repz
int3
jb
pop
pop
xlat
mov
and
mov
mov
arpl
mov
insb
ret
mov
add
call
out
cli
mov
ja
popa
push
insb
add
andb
outsl
mov
mov
loop
mov
cmpsb
loopne
cld
push
sarb
inc
push
sub
mov
xorl
repz
or
sbb
mov
cmp
ljmp
xor
pop
and
ja,pt
dec
xor
sti
push
cld
in
fninit
jo
or
roll
mov
les
repz
sahf
movsl
data16
add
mov
js
push
sub
in
lock
mov
fldenv
jmp
jnp
movsl
outsl
or
fstps
ss
add
pop
push
shrd
test
xchg
pop
or
cmp
sub
xchg
cld
rol
mov
addb
es
mov
decl
iret
sbb
sbb
call
ror
in
mov
fildl
enter
ja
and
fcmove
xor
cmpsl
fs
fcoms
jnp
lcall
ret
push
push
sbb
pop
add
dec
pop
jg
push
pop
ret
int3
sbb
js
adc
fldt
xor
or
cwtl
mov
pop
sub
loope
clc
cmp
mov
andb
aaa
add
fstl
popa
loopne
lahf
cwtl
scas
adc
sub
test
and
sbb
push
enter
push
mov
scas
ficoms
adc
fdiv
dec
inc
push
pop
pop
js
icebp
and
mov
jle
push
sbb
xchg
mov
repnz
ret
mov
sahf
pop
add
aam
cmpsb
shr
add
ret
pop
xchg
cli
push
cmp
and
bound
push
movsb
xor
jmp
push
lret
rolb
scas
pop
std
lock
jne
xor
jo
ds
es
loopne
mov
shll
xor
add
out
sub
jl
verw
adcb
push
mov
or
test
inc
inc
mov
sbb
xchg
sub
rcll
js
cmp
int
aam
fsubs
or
push
rcrb
pop
push
ljmp
mov
cmpsb
clc
aaa
std
movsb
pop
test
inc
add
lds
sub
or
push
fdivr
add
lret
xlat
mov
mulb
sbb
out
sub
scas
outsl
jle
scas
divl
mov
jp
pop
shll
push
mov
xor
insb
push
jl
cmp
push
mov
jg
lahf
loope
scas
push
adc
sub
hlt
sahf
push
lret
add
movb
xor
scas
adcb
pop
sub
add
je
aam
add
jle
icebp
add
mov
dec
sub
je
outsl
rcrb
inc
fs
xlat
ja
paddb
stos
fwait
sarl
mov
ja
ds
movsb
mov
pushf
negb
aas
aam
into
arpl
mov
jecxz
and
not
jecxz
clc
clc
lock
idivb
jns
jl
mov
cmp
inc
pop
and
mov
loopne
mov
pop
lock
bound
ljmp
mov
int3
xor
xchg
test
pushf
push
js
ret
sbb
std
push
ret
jbe
inc
dec
adc
sbb
and
push
mov
push
pop
std
lods
lahf
jge
xor
movsb
sbb
cmp
mov
orb
add
adc
fiaddl
mov
fcoms
dec
fisttpl
divb
lock
sar
and
add
mov
hlt
add
dec
leave
popa
ret
xchg
and
jo
mov
cmp
fldenv
mov
sbbl
cmp
fst
cmp
or
aad
sub
cmp
adc
inc
leave
outsb
out
add
rol
mov
sarb
jbe
test
push
mov
insb
incb
cld
and
movsb
xchg
xor
xchg
inc
mov
je
mov
loope
mull
sub
mov
xchg
inc
in
incl
dec
mov
push
push
adc
sarl
je
mov
mov
cmp
lahf
decl
mov
shr
or
fildll
pop
arpl
jns
pop
arpl
dec
dec
adc
inc
add
push
neg
xor
pushf
fdivs
subl
lcall
imul
add
and
adc
in
pop
mov
out
out
add
xor
push
out
sbb
lods
mov
push
cld
sub
pop
decl
js
xchg
dec
pop
sarl
sarl
arpl
jle
or
push
cld
pushl
or
pop
jb
fiaddl
shrb
clc
sub
xor
addb
or
mov
loopne
jno
mov
data16
andl
add
or
js
jo
shlb
daa
push
push
mov
pop
jmp
push
and
inc
popf
mov
add
sub
scas
lcall
insl
aad
jne
ret
xor
les
int3
or
arpl
enter
mov
incl
sub
xor
xor
inc
sarl
mov
idivb
lods
pop
cmpsl
push
fsubl
aam
xor
scas
mov
shlb
pop
inc
xchg
sarl
mov
outsb
sbb
mov
fiadds
mov
lcall
add
dec
sbb
inc
mov
sub
fcmove
cmp
xor
or
mov
test
jecxz
into
int3
pop
pop
lods
mov
jb
mov
rorb
push
adc
xor
mov
or
or
jle
mov
inc
rcrb
push
xor
scas
shrb
jo
add
repnz
lret
pop
inc
out
clc
pushl
fs
jbe
pushl
sbb
sbb
lods
push
push
jmp
xchg
xchg
cmc
sbb
sbb
or
lret
jp
or
mov
ljmp
mov
sahf
popa
xchg
xchg
lock
ficoms
ljmp
jmp
das
adc
jecxz
and
push
sbb
pushf
daa
movsl
pop
dec
add
jle
sbb
lods
loope
iret
jb
mov
sub
sbb
pop
xor
adcl
mov
xchg
push
les
push
dec
xchg
icebp
push
and
dec
dec
pop
mov
ret
dec
push
add
std
into
xor
clc
pop
push
loopne
dec
push
or
cmp
js
mov
scas
mov
mov
mov
cld
outsl
fucom
pop
clc
push
iret
cmp
shlb
shll
cmpb
adc
pop
mov
maxps
lock
sahf
sbb
adc
divl
stos
push
icebp
xchg
outsl
loop
sarb
push
lds
out
ret
sbb
xlat
adc
xor
add
xchg
inc
or
mov
jg
and
call
out
out
js
mov
insl
adc
int3
jle
pop
push
adc
add
pop
lea
pop
out
adc
js
out
xor
or
sbb
sahf
in
ljmp
test
add
or
push
sub
test
add
rorb
mov
ja
jge
js
mov
mulb
dec
inc
sbb
shrb
sbb
sub
aaa
pop
icebp
outsb
outsl
dec
jg
inc
mov
add
iret
add
cmp
push
ficoml
out
lcall
push
mov
cli
mov
idivl
mov
pop
dec
mov
mov
adc
cmpsb
xchg
xor
call
cli
lahf
adc
xchg
out
inc
mov
out
test
loop
das
adc
mov
and
shlb
or
aaa
sub
cmpsl
push
lds
cmp
out
inc
ds
dec
cmp
pop
scas
sbb
addb
jle
jnp
jge
jne
aas
bswap
stos
test
repnz
xchg
add
mov
mov
stos
jo
xchg
dec
add
jo
ljmp
xchg
adc
jmp
pushf
inc
mov
adc
pop
ja
sbb
popf
sbb
jecxz
sbbl
test
lret
inc
or
mov
sub
sub
shrb
xrelease
ljmp
fs
mov
shrb
scas
out
pushf
aaa
mov
xorl
or
jl
in
dec
int3
rcll
es
pop
aam
jp
add
and
movsl
repnz
fnstcw
repnz
icebp
dec
test
std
pop
mov
fstpt
out
mulb
inc
test
cmp
mov
fnsave
aam
js
or
pop
mov
inc
lods
mov
or
dec
fsub
das
or
push
sti
mov
inc
testb
and
rcrb
cwtl
pop
add
lret
mov
jmp
jo
fdiv
aas
and
dec
mov
sbb
aaa
cmp
inc
and
dec
nop
xor
mov
ret
into
sub
ss
push
mov
push
out
pop
shlb
sub
inc
dec
pop
repz
cs
jle
incl
popf
pop
lods
dec
add
mov
add
fsubrl
mov
ret
add
xchg
imul
adc
je,pn
mov
push
push
mov
fistpl
mov
add
mov
lock
mov
or
stos
negl
fucomp
scas
ficoml
jle
pop
sub
sub
xor
stos
aaa
je
fldl
or
incl
and
add
inc
cwtl
dec
lds
loope
push
jle
xor
pop
je
inc
rcr
dec
aad
adc
rcrl
ds
push
add
push
pop
push
pop
mov
mov
movsl
rclb
ret
xchg
enter
leave
inc
jb
les
jmp
into
jno
mov
push
testl
push
cli
inc
lods
les
repz
les
call
fmul
pop
sbb
or
fcompl
ds
fisttpl
xchg
in
out
nop
and
in
add
and
mov
cli
lret
lock
mov
aas
add
mov
fcoms
jne
je
jo
push
and
movsl
push
lds
cmp
jbe
aam
int3
jae
xor
aaa
stos
mov
xchg
sub
fildll
jbe
rorl
cwtl
fld
sar
mov
mov
fs
pop
pextrw
and
dec
out
adc
seto
jl
das
mov
fimull
arpl
in
mov
add
pop
xchg
iret
mov
scas
ret
adc
fdivl
or
std
mov
cld
shrl
push
and
lret
add
pop
adc
or
ret
sti
sub
pop
sbb
jne
mov
dec
les
dec
out
jmp
das
pop
push
push
pop
cs
js
mov
adc
lea
add
nop
fadds
jg
int3
push
ds
mov
pop
mov
cs
loope
inc
adc
rolb
sub
sub
push
sbb
aaa
cmp
div
je
fcmovnbe
jp
fnstenv
test
into
add
mov
loop
add
daa
ret
lock
test
cmp
ljmp
adc
push
scas
inc
aad
inc
mov
add
mov
cmpsl
jge
inc
rcrl
lcall
lods
ret
jle
fsubl
fadds
idivb
pop
adc
cltd
inc
bound
adc
lret
dec
lods
scas
or
add
xchg
testb
or
js
sub
ljmp
pusha
lahf
sar
mov
jmp
or
ret
adc
in
subb
mov
pushf
iret
add
jmp
xchg
mov
sub
imul
pop
cs
stos
push
imul
cli
outsl
ret
mov
pop
lret
pop
inc
pop
aam
mov
sbb
adc
aaa
push
or
int
fs
jmp
jbe
outsl
insl
xchg
loopne
sar
clc
xchg
adc
test
jb
sbb
pop
std
add
mov
sub
or
jle
aad
out
adc
sbb
in
jo
fsin
fwait
loop
mov
hlt
inc
rolb
pop
lret
xor
in
pop
fdivrl
or
push
imul
jmp
cmp
dec
out
movsb
pop
xor
lcall
and
stc
out
sub
in
jp
icebp
std
in
mov
and
mov
add
xchg
cmp
fcmovbe
ds
push
aas
adc
xorb
push
pop
and
cmp
loope
mov
cld
sub
jl
mov
mov
pop
jbe
push
inc
push
call
dec
adc
aas
adc
mov
test
mov
or
dec
fiaddl
pop
cmc
ja
mov
inc
pusha
pop
mov
clc
cltd
stos
in
les
out
pop
add
push
scas
fadds
xchg
fcmovnu
mov
pop
in
decl
ficomps
das
cmp
cmp
xchg
cmp
rcr
dec
rcl
mov
jns
add
or
shll
and
stos
insl
xor
mov
push
push
hlt
fs
je
mov
pop
dec
and
pop
in
int3
fsubrl
pop
insb
mov
clc
or
jne
mov
addl
test
out
mov
jno
shl
icebp
loop
pop
and
popf
jno
cmp
pop
insb
xchg
fiaddl
cmp
mov
push
pop
sub
mov
js
sbb
mov
loop
les
and
decl
dec
call
jmp
mov
aaa
loopne
jge
mov
dec
mov
lcall
gs
es
add
loop
ss
loopne
sbb
and
lock
fdivs
ret
fimull
sub
lods
adc
mov
es
lea
repnz
push
insb
adc
push
shrb
cmp
in
into
jl
push
pop
push
adc
cltd
mov
mov
xchg
mov
outsb
repnz
orb
xor
push
out
mov
scas
mov
xchg
adc
sub
mov
shl
pusha
cmpsb
or
push
arpl
andb
call
xor
and
pop
push
jmp
mov
mov
out
int3
cmpsb
js
mulb
dec
sbb
cli
mov
icebp
fldl
push
dec
pop
mov
shrl
call
das
data16
mov
outsb
hlt
mov
cltd
inc
insb
sub
pop
cwtl
arpl
imul
in
sub
call
pop
mov
je
jns
and
cli
adc
loopne
jno
imul
xor
loop
aaa
loop
test
lret
cmp
add
incl
jo
incl
insb
add
sbb
jae
mov
sti
clc
mov
scas
or
xchg
or
movsb
outsl
and
fisubrs
rcll
add
pop
mov
in
pop
pop
or
test
sbb
mov
sbb
jne
mov
cs
stos
pop
pusha
push
outsl
cwtl
pop
mov
pop
repnz
test
rcrb
rcll
xchg
add
pop
cmp
sub
pop
popf
call
hlt
cli
adcl
rcrb
data16
std
jg
out
call
sbb
nop
fidivl
inc
outsl
pop
or
and
aam
out
nop
add
addb
fildl
fistpl
jg
xchg
int3
mov
or
cmpsb
xlat
call
or
roll
xor
call
leave
xorl
leave
bound
rorl
cld
or
lods
pop
mov
idiv
push
cmp
movsl
mul
sbb
mov
mov
out
jbe
dec
aad
loop
mov
std
ljmp
xor
out
out
mov
jge
test
pop
sbb
int
fisubrs
loopne
jb
sub
jmp
sub
mov
stos
pop
outsb
jp
push
add
dec
fs
loope
ljmp
xor
push
xor
cmp
rorb
pop
dec
fldenv
fstpt
jmp
xor
outsl
sarb
test
roll
incl
lea
jle
sub
enter
fistpll
negl
or
xor
ret
lock
pop
cmp
cld
fistps
mov
cwtl
ja
sub
sub
jbe
xchg
jle
jb
cmpsb
or
xorb
pop
xchg
test
mov
bound
jecxz
jbe
stos
ret
daa
mov
or
mov
or
cld
push
andb
or
dec
shl
adc
push
inc
jl
xor
xchg
add
mov
xchg
loop
and
jp,pt
mov
jle
leave
dec
ficoml
loope
insb
iret
jp
jne
add
aad
mov
pusha
test
stos
dec
cmp
adc
push
inc
mov
push
jae
mov
pusha
and
test
and
iret
jmp
pop
addr16
mov
fistps
sbb
das
cld
dec
cmc
arpl
sub
cwtl
enter
fiadds
nop
sbb
jle
or
jmp
fnstsw
sti
add
cltd
inc
loop
adc
enter
push
ja
lock
movsb
jle
call
sahf
std
add
pop
mov
popf
or
lahf
pushf
lock
ljmp
mov
dec
cmpl
insl
sub
sarb
mov
sbb
sub
pop
xchg
sub
add
mov
xchg
push
mov
aam
mov
pop
loop
adc
xorb
popa
inc
test
stos
mov
mov
repz
shlb
leave
orl
xchg
out
cmp
js
pop
aam
pop
push
mov
outsb
sbbb
push
pop
and
cmp
cmpsb
loop
xchg
adc
push
mov
insl
ret
sti
aaa
in
subb
cltd
inc
fdivrp
add
movsl
fldenv
adc
pusha
push
push
push
inc
js
xchg
push
jl
mov
mov
mov
fsub
rcrb
sahf
inc
cwtl
mov
sub
mov
mov
cmp
xor
mov
cmp
aam
imul
sub
cmp
cwtl
addb
jle
xchg
xchg
mov
sub
or
mov
scas
sbb
jecxz
xchg
imul
mov
mov
out
btr
aam
in
iret
xrelease
pop
fcomps
mov
cmp
test
cmpsb
arpl
out
add
push
mov
adc
adc
js
and
in
jg
or
nop
insb
xchg
adc
add
data16
push
fiadds
add
mov
jge
and
fisubl
outsl
sub
lahf
inc
jg
outsl
scas
mov
add
fcomps
clc
xor
hlt
sbb
outsl
cld
add
test
push
sbb
pop
test
push
or
sti
and
jb
dec
push
ret
mov
repnz
in
push
dec
mov
mov
jg
lock
int3
enter
int3
not
mov
mov
xor
mov
sub
add
and
jle
and
lcall
fcomp
push
push
cli
orl
subb
js
xchg
xor
mov
std
adcl
sahf
add
inc
mov
or
outsb
inc
dec
mov
in
xchg
jne
add
sub
push
dec
neg
mov
test
cmp
and
inc
dec
adc
aam
sarl
data16
leave
sbb
push
and
pop
pop
cwtl
add
pusha
sub
mov
jge
pop
fcomps
fisttps
les
lret
shrb
fcompl
outsb
jo
and
fcomps
mov
sbb
ret
add
cmp
sbb
mov
sbb
pop
xorb
mov
fdivrs
mov
in
out
movsl
shlb
dec
xor
add
fstps
jecxz
fldenv
adc
cld
push
adc
mov
test
sub
ret
sub
mov
faddl
ljmp
mov
mov
xor
divl
mov
jb
mov
cmp
mov
dec
push
mov
jle
mov
jg
fs
cmp
cwtl
and
out
dec
aas
adc
and
cmp
ljmp
mov
movsb
test
rcll
inc
subb
mov
lret
pop
dec
xor
inc
sub
andb
rcrl
mov
in
testl
ret
out
fdivrs
mov
jne
imul
adc
je
out
std
and
ljmp
cmp
xchg
dec
add
outsl
xor
adc
and
inc
mov
or
add
cmp
xor
not
push
mov
add
cmc
or
lcall
sbb
movsl
loop
insb
rclb
jl
rclb
add
in
out
jno
les
shrl
sti
int3
or
xchg
lock
jbe
cmpsl
sti
shl
jnp
sbb
sbb
dec
push
fdivs
shl
aas
jmp
test
je
push
sub
loope
rcr
sub
inc
xor
loope
rorl
or
lret
lock
and
mov
sub
mov
pop
in
fistpl
jmp
movsl
stos
test
dec
mov
mov
inc
and
jl
stc
cmp
mov
jl
add
jae
fisubrs
lods
jbe
adcl
adc
sarb
push
loopne
push
push
push
pushl
push
push
loope
imul
dec
sbb
jne
out
or
and
jno
sbb
sbb
sub
and
fisubrs
or
insb
or
js
incb
sbb
mov
xchg
sbb
incl
lods
mov
jle
jmp
inc
add
mov
test
sbb
es
ret
and
mov
xor
xor
mov
lret
jle
mov
jbe
inc
xor
push
adcb
incl
push
add
je
es
cli
std
mulb
sub
adc
mov
or
fldenv
lret
sbbl
xchg
push
inc
repz
push
decb
jmp
movsl
mov
inc
pop
pop
rclb
test
push
xchg
ljmp
dec
rclb
cmpsl
mov
pop
dec
pop
cmp
add
jp
into
lret
cmc
or
mov
add
test
sub
xor
pop
or
add
cmp
div
pop
mov
add
addr16
divl
incb
or
lods
add
ret
dec
les
aad
in
daa
add
sbb
push
and
pop
push
add
je
loopne
jno
add
or
aaa
push
test
popa
xor
ss
pop
add
jecxz
in
xchg
add
xchg
sbb
divb
dec
sub
jecxz
cli
adc
fs
loope
push
xchg
ss
lret
and
or
cmp
pop
test
cmp
imul
ss
adc
inc
inc
sbbl
push
sbb
push
sbb
sub
sarl
pop
mov
addr16
stos
pop
repz
pop
and
je
mov
xor
lea
mov
fcom
dec
pusha
cmc
mov
mov
sbb
popf
fsubs
movsb
clc
cmpsl
push
mov
mov
orl
mov
pop
push
loop
xor
mov
rcrb
or
xchg
cs
mov
test
add
js
or
mov
int
cld
mov
movsb
cmp
movb
arpl
loop
pop
sub
iret
xchg
aas
push
lds
aad
ret
icebp
lods
shlb
ds
push
aad
outsl
adc
adc
fldt
sti
inc
in
hlt
adc
mov
push
cmp
imul
movsb
sar
cmp
dec
mov
ss
mov
push
cmp
les
xchg
jo
push
cld
jo
in
std
jbe
addl
inc
test
or
test
mov
shlb
cmpb
mov
nop
mov
pop
sti
lea
adc
mov
div
lods
sbb
in
push
push
repz
test
adcb
leave
dec
ja
les
jle
pop
add
pusha
testl
jp
ret
test
enter
loop
outsb
test
out
enter
sub
loope
sti
lock
test
stos
into
push
inc
sbbb
andb
jg
sbb
loop
mov
loopne
scas
mov
scas
es
inc
xor
pop
mov
outsb
cmp
pusha
or
and
rcl
add
lods
add
adc
sbb
lret
mov
subb
jecxz
xchg
cmp
mov
or
add
push
mov
adc
mov
shlb
sbb
inc
not
dec
sub
sbb
sbb
loopne
or
cltd
pop
cld
add
jnp
jno
mov
adc
hlt
int3
icebp
mov
and
hlt
idiv
inc
sub
dec
inc
std
and
sbb
ret
cmp
jno
in
xchg
adc
lock
jge
inc
arpl
dec
loopne
test
ds
adc
adc
roll
add
push
cld
roll
loopne
mov
clc
inc
adc
cmp
sub
cltd
lods
jecxz
add
idiv
jl
push
out
pop
add
push
inc
test
rorb
outsb
loope
add
and
sbb
push
push
jl
cs
xchg
adc
adc
mov
add
inc
or
adc
mov
push
mov
pop
and
lahf
sub
xchg
xor
cld
jno
test
or
jge
inc
neg
cmpsb
lods
mov
jl
and
jno
xor
test
adc
jmp
out
shll
not
inc
xor
inc
sub
pusha
jne
adc
fldenv
mov
xor
xchg
outsb
hlt
jg
cmp
subl
sub
jbe
add
jns
or
arpl
jmp
or
mov
les
int
scas
clc
test
inc
sbb
and
inc
and
sbb
cltd
or
mov
cmpsl
jmp
sti
test
pop
dec
mov
mov
pop
push
rcll
inc
sbb
cmp
je
inc
int3
sub
push
lcall
dec
adc
dec
sbb
push
mov
sub
sub
loopne
adc
sbbb
aas
adc
cltd
popa
or
xor
sbb
inc
leave
cs
pop
jno
imul
push
ret
sbbl
cld
mov
adc
mov
cmp
not
push
icebp
or
out
jl
xchg
cmc
xchg
xchg
push
sub
xor
lds
rcl
test
cltd
inc
or
add
xor
aas
leave
ret
out
in
jl
cmpsl
xor
or
mov
pop
xor
scas
lahf
fdivrl
cmp
repnz
mov
pop
movsb
lcall
in
and
or
outsl
cmp
add
outsl
add
je
mov
fiadds
cs
sbb
inc
lock
ljmp
stos
iret
repz
push
insl
js
and
jnp
add
call
outsl
call
mov
cmp
test
xchg
rclb
popa
cs
sbb
loop
mov
ret
dec
aas
ljmp
jae
sub
cs
lcall
or
outsl
cmp
xor
nop
xor
sub
stos
push
ja
fwait
xchg
insb
xor
add
mov
or
cmp
cmp
or
pop
test
mov
out
cmp
lret
xor
ja
mov
test
insl
lods
xor
jp
imul
test
pushf
movsb
add
cmp
js
icebp
jg
fst
cld
fisubl
cmpsb
je
cmp
jmp
push
or
lods
inc
mov
mov
jo
into
or
js
les
lods
outsb
es
aas
lods
jg
outsl
adc
into
push
jo
jno
inc
nop
cwtl
push
testb
mov
or
je
jl
incl
jecxz
sti
cli
in
pop
clc
movsl
loopne
popa
lcall
sbb
clc
pop
test
push
ja
ss
and
fcompl
aad
push
iret
add
or
scas
cmp
inc
std
push
push
sub
dec
pop
push
jno
sub
iret
les
sbb
das
xchg
fs
sbb
mov
dec
std
add
cmc
add
xchg
pop
push
and
insb
pop
pop
mov
add
ljmp
pusha
adc
rorb
movb
cmp
adc
sub
push
fwait
test
das
lock
xlat
ljmp
cmpsb
and
out
push
and
int
push
mov
outsl
call
leave
and
jg
add
fwait
sarl
loopne
decl
ret
ret
in
dec
add
insb
mov
test
xlat
jecxz
lock
mov
add
inc
pop
inc
cmp
pop
ljmp
imul
cmc
incb
incb
cmp
dec
add
decl
dec
mov
imul
cld
mov
enter
inc
sub
jb
lret
pop
loope
out
in
push
mov
xor
xor
test
pop
dec
pusha
call
aam
add
notrack
and
dec
push
add
pop
sbb
lcall
rcrl
mov
xorb
push
int
and
xchg
adc
dec
jmp
dec
and
and
je
or
and
and
cmp
xor
adc
push
add
shlb
jne
into
add
lds
popa
mov
das
fmuls
movsb
insb
adc
cli
test
shr
repz
pop
jne
pop
inc
stc
pop
loop
mov
cli
cltd
add
cld
incl
jl
out
es
int
and
or
sub
mov
ja
mov
or
rcr
lcall
push
iret
jg
adc
test
arpl
imul
in
pop
pop
cld
push
xor
or
xchg
lret
inc
icebp
rorl
stos
jns
aam
push
loope
push
mov
push
movsb
pop
hlt
sbb
divb
add
push
fsubl
add
cmpsb
out
incl
hlt
cmc
push
dec
dec
jecxz
dec
lcall
mov
das
and
pop
lods
daa
push
sbb
repnz
mov
shrb
loopne
icebp
add
inc
mov
push
jmp
lcall
mov
rcl
repnz
pushf
fs
pop
sbb
in
push
mov
xchg
jo
sbb
ja
cwtl
faddl
and
push
push
fsubl
sbb
add
std
rorb
jbe
sbb
inc
xor
add
lods
ret
fidivrl
sbb
sbb
jp
cmc
mov
aam
mov
call
ljmp
sahf
mov
xor
dec
xchg
push
xor
mov
mov
into
jmp
les
cmovbe
fstpt
mov
cmp
fistl
dec
movsb
inc
ds
ljmp
push
rclb
xchg
lcall
mov
popa
mov
xor
cmc
sbb
lret
xchg
cmp
and
add
dec
test
rcrl
ljmp
jnp
pop
mov
syscall
cmp
aam
cmp
pop
fadds
leave
dec
jae
or
sbb
repnz
out
cltd
loope
mov
mov
shr
into
xchg
dec
call
cmp
and
lret
leave
sub
imul
mov
cld
push
mov
mov
sub
sbb
daa
xor
test
adc
pop
mov
aaa
bound
enter
in
inc
pop
iret
insl
emms
sbb
fdivl
sti
push
mov
jle
cmp
dec
push
mov
fisubrl
clc
inc
xor
popa
jge
rorl
subl
mov
adc
pop
nop
push
sub
pop
outsl
popa
cmpsb
sbb
push
cli
sub
sub
repnz
lea
push
push
loope
jnp
cld
push
push
dec
sbb
push
xor
test
jbe
jl
push
adc
and
test
ret
mov
adc
movsl
movsb
xchg
sbb
ds
xchg
xchg
cmpsl
lcall
icebp
xchg
sub
jp
mov
ret
jp
push
sub
add
jge
stc
loopne
and
adc
pop
clc
mov
jle
cmp
fimuls
add
mov
inc
ror
std
dec
or
rorl
repz
mov
and
push
sub
ficoml
test
push
icebp
ficomps
push
inc
xor
decl
push
mov
js
enter
rcrb
cmc
add
push
add
cli
xor
jle
sbb
aam
mov
mov
pusha
roll
lods
adc
clc
jg
loopne
std
divb
inc
and
add
pop
sub
outsl
mov
hlt
les
aam
push
push
dec
add
ret
outsl
call
scas
jbe
jne
xor
cs
add
and
cwtl
push
xorl
outsb
push
pop
rolb
loope
mov
loope
dec
scas
add
notl
adcb
mov
sti
sub
add
call
stos
xor
push
add
cld
test
stos
mov
mov
fdivl
data16
fildl
jne
push
add
mov
push
add
ljmp
sbb
fildl
inc
mov
mov
les
iret
adc
std
fnstcw
pop
hlt
lcall
fidivrs
cltd
sbb
lock
hlt
je
pop
jmp
jo
add
jbe
mov
xor
xchg
mov
mov
cmp
add
sbb
cltd
enter
xchg
xlat
clc
loop
and
rorb
push
movsb
cwtl
es
xor
test
dec
pop
lock
cmp
add
or
mov
inc
movl
ret
mov
cmpsl
cmp
mov
adc
cmp
aaa
xor
add
adc
hlt
adc
out
pop
mov
mov
in
lcall
loopne
add
sub
daa
add
push
outsb
jno
ss
push
jmp
hlt
in
cmpsb
into
test
mov
push
adc
les
dec
ss
and
cli
scas
in
xchg
js
xchg
pusha
cld
jecxz
or
stos
or
inc
jecxz
mov
push
jno
inc
add
hlt
add
clc
or
insb
ljmp
mov
out
ret
pushf
push
adc
xchg
pop
ja
jg
inc
sub
jmp
adc
nop
jle
addb
mov
shrb
lods
or
sub
mov
sarb
dec
sub
or
ss
jmp
aam
sbb
push
inc
inc
cs
sbb
cld
mov
and
dec
jmp
jnp
jle
xor
fcoml
ljmp
sbb
push
scas
or
or
test
jge
push
push
pusha
cmpsl
inc
inc
cmp
clc
incl
xor
add
dec
dec
add
add
cmp
leave
cmpsb
aas
gs
out
xorb
in
push
insl
and
add
andl
jle
xchg
sbb
mov
subb
pushl
mov
xor
jmp
pop
gs
fstps
ss
imul
ljmp
negb
mov
inc
jns
push
push
xchg
sub
mov
aam
sub
adc
mov
push
fsub
pop
repnz
data16
inc
sar
movsl
dec
insl
insl
mov
out
xor
jb
pop
fdivrl
addr16
push
outsl
test
cs
call
cmpsl
fbstp
xchg
mov
mov
and
jge
inc
xchg
test
sub
fs
insl
pop
test
dec
std
pop
cmc
stos
ss
inc
dec
fldcw
rorl
xor
mov
mov
mov
push
maxps
mov
mov
jl
add
and
pusha
orb
outsb
fcomps
pop
or
fldl
lds
jg
nop
ss
jnp
dec
xchg
mov
mov
or
mov
add
addb
out
xchg
fcomp
add
push
xchg
add
push
add
push
lock
add
out
pop
mov
xor
mov
and
out
inc
xor
jmp
outsl
or
or
inc
add
imull
shlb
mov
or
lret
call
sub
test
mov
clc
push
lods
pop
dec
stc
sarl
or
lret
mov
mov
or
pushf
pop
dec
add
mov
pusha
add
adc
or
or
xchg
fidivl
and
mov
inc
sahf
inc
repnz
mov
mov
lahf
mov
pop
sbb
mov
or
subb
sar
outsl
mov
cmp
jne
jl
xchg
stos
adc
scas
cmp
aaa
jb
sub
inc
cld
inc
pop
shrl
mov
inc
xor
cs
and
mov
or
jnp
fisubrs
lds
or
jno
jge
lahf
aad
or
or
pop
ljmp
and
jo
loopne
jo
dec
inc
sub
frstor
and
ret
adc
fstl
add
std
shld
int3
push
lock
pop
cmp
add
push
popa
repz
sub
push
and
lahf
inc
mov
push
push
or
out
js
icebp
cmp
xor
es
movsb
lahf
and
fs
sub
jb
loope
pop
sbb
adc
add
orb
orl
mov
push
mov
push
pop
decl
clc
inc
sub
fcomi
fwait
mov
out
movl
test
shll
aas
int3
popl
imul
or
in
inc
cld
jp
adcb
dec
or
lds
hlt
lcall
insl
cmp
add
adc
loop
packsswb
jg
int3
xchg
xor
cli
xchg
aaa
xchg
add
adc
test
in
loope
push
call
cmp
mov
sbb
mov
fwait
aad
out
mov
sbb
jo
mov
inc
repnz
in
mov
mov
ret
shrl
mov
add
jae
inc
mov
cld
loop
mov
mov
add
push
sub
jmp
push
mov
push
jb
nop
xor
inc
mov
add
adc
repz
jp
cmp
adc
mov
and
pop
add
rcrb
jle
or
fidivl
pop
mov
adc
fs
aad
or
sbb
ret
mov
jle
fisubs
loope
xor
test
add
sub
push
pop
lea
xor
cli
loop
and
rcrl
sub
mov
imul
and
add
jge
jno
popa
sti
and
add
adcl
inc
decl
ja
adc
scas
xlat
scas
inc
test
hlt
inc
sti
xchg
jmp
enter
cmp
adc
adc
push
out
lods
pop
je
loopne
icebp
test
xchg
cmp
push
lods
stos
xchg
mov
cli
mov
sbb
dec
incl
loopne
add
and
cltd
and
mov
rcr
push
std
pop
rcll
ss
loopne
sbb
stos
jg
outsl
mov
pop
mov
xor
test
and
testb
es
or
cmp
mov
mov
fmul
cs
and
push
bound
inc
shll
dec
push
pop
lods
add
shl
mov
mov
cmpsb
incl
adc
sub
mov
mov
lcall
in
inc
or
mov
add
jae
xlat
dec
int
or
andl
and
xor
xchg
lcall
jo
sbb
lahf
ljmp
or
fwait
lods
fdivl
sbb
add
inc
loop
xor
fildl
pop
jne
and
jp
cld
outsb
cmp
orb
lods
clc
adcl
and
adc
mov
sbb
inc
add
cltd
inc
push
or
sub
dec
insb
jle
addl
cmpsl
in
sbb
jns
xor
je
addr16
lock
mov
pusha
jl
adc
repz
add
mov
out
call
icebp
mov
in
adc
xchg
shl
or
sbb
or
add
pop
mov
dec
cmp
push
and
jmp
jne
and
cmp
mov
push
je
rclb
sub
shl
cmp
xlat
rorb
and
stos
add
push
aam
dec
mov
xor
sub
or
test
inc
clc
inc
dec
xor
mov
adc
mov
dec
push
loopne
aaa
out
pusha
jl
fimull
and
call
lret
jp
mov
and
shr
sbb
add
mov
ja
imul
mov
and
pop
jo
fisttpll
je
mov
xchg
add
xchg
push
add
adc
xor
scas
sarb
sbb
sbb
loop
repnz
jmp
add
cltd
lods
test
xor
stos
call
sub
imul
fldt
lock
mov
xchg
and
pop
mov
mov
out
cmp
outsb
movsb
cltd
push
dec
shlb
clc
push
dec
mov
push
adc
jge
iret
cmc
sbb
iret
push
jge
add
push
dec
push
stos
std
mov
mov
jle
je
pop
call
xchg
clc
rcr
jnp
fs
rclb
sub
sbb
push
enter
add
adc
imul
imul
dec
outsb
sub
call
loopne
hlt
loopne
jns
mov
jp
dec
arpl
ja
inc
or
pop
inc
sub
inc
push
in
in
or
or
jae
push
inc
add
and
cmp
dec
shrb
mov
in
sbb
mov
dec
add
xor
inc
jle
cli
lcall
aaa
jl
std
pop
outsb
sbb
repnz
lea
push
cld
in
fcoml
or
push
call
sbb
inc
aad
add
and
cld
push
adc
leave
xchg
xchg
ret
mov
mov
inc
call
sbb
inc
add
sahf
jecxz
inc
add
add
adc
inc
test
xchg
mov
mov
test
mov
movsl
dec
ja
and
sbb
mov
iret
dec
loopne
and
stc
ret
test
mov
push
push
shlb
push
xchg
add
mov
shl
cmp
pop
jne
push
pop
out
fcoms
pop
push
sub
cs
mov
mov
sbb
jge
dec
mov
jae
push
loop
push
mov
dec
std
pushf
mov
rcrl
and
ljmp
push
inc
cmp
xchg
hlt
in
mov
jo
iret
and
mov
call
or
add
sarb
repnz
cmp
xchg
lret
or
scas
add
xor
lock
loop
mov
mov
fwait
push
or
out
ret
pop
or
add
cmp
inc
loopne
das
popa
je
jb
and
loopne
mov
jl
leave
movsl
pop
and
out
clc
cmp
add
pop
add
add
dec
xlat
adc
ficomps
dec
aas
pop
test
jmp
shrb
stos
je
cmp
in
call
add
inc
daa
sbb
shll
or
inc
test
adc
add
roll
sbb
mov
shll
js
mov
dec
or
adc
ror
add
inc
pushf
out
sbb
push
neg
cmpsl
mov
xor
mov
jne
sbb
sahf
push
div
adc
add
add
clc
push
pop
popf
cli
mov
hlt
add
sbb
pop
jo
pop
loopne
inc
inc
xor
insb
loopne
int3
les
jno
loopne
sbb
out
push
push
lock
data16
add
xchg
adc
je
nop
inc
ja
xlat
lods
cwtl
mov
jge
mov
lods
enter
mov
cmp
push
shl
push
add
jp
inc
call
lret
lock
push
jns
or
popa
xchg
fadds
out
and
pop
outsl
subl
add
inc
xor
mov
sub
orl
push
or
lock
loopne
ret
test
xchg
jno
mov
fdivl
pop
les
ficompl
cmp
and
jbe
ja
scas
dec
sub
jecxz
pop
lods
ret
cmovnp
lahf
rolb
aaa
and
daa
adc
mov
add
ret
push
dec
adc
adcb
adc
icebp
sahf
jmp
lods
pop
fcomps
and
lahf
xor
mov
shll
mov
pop
test
leave
mov
lock
pop
cmp
mov
add
add
stos
xchg
mov
fsubl
in
stos
add
push
cmpsb
sbb
in
sub
inc
xor
inc
xlat
rorb
sub
cmpsl
mov
add
ljmp
movsl
and
sub
shll
ret
minps
cli
movl
loop
push
out
pop
push
cmp
outsb
mov
fsubrl
xchg
lret
cmp
pop
pop
pusha
fsub
dec
repnz
pop
pusha
jno
ret
add
fnsave
xor
pusha
loope
or
fnstsw
cwtl
call
add
ret
ja
pop
ltr
out
mov
and
add
ds
jecxz
push
xor
add
movsl
ret
xchg
imull
cmp
out
int3
mov
js
sub
sub
adc
mov
test
sbb
notb
xorl
or
sti
insb
pop
mov
int3
repz
outsb
mov
jmp
daa
enter
sarl
je
in
push
lea
andb
pusha
les
ud1
repz
add
cmp
push
repz
scas
fldt
xchg
add
hlt
and
inc
lock
cmpsb
cs
fsubl
sbb
out
sub
imul
sub
adc
pop
pop
out
xchg
mov
sbbb
icebp
inc
call
push
dec
sti
loopne
xchg
sub
std
ret
and
fwait
sub
mov
or
stos
xchg
shr
jnp
inc
or
out
sti
sub
dec
add
sbb
add
mov
decb
push
jl
cmp
notb
add
sahf
adc
and
in
outsl
fbld
mov
lds
dec
mov
repz
cmp
push
pop
sbbb
pop
inc
pop
dec
mov
adc
xchg
mov
std
mov
lock
or
repnz
cld
xchg
or
ja
lds
xor
lret
jns
insl
movb
adc
es
adc
in
fldl
jo
adc
dec
aas
xchg
add
sub
xchg
and
or
rcll
pop
sbb
ja
dec
pop
fisubl
pusha
movsb
mov
sub
aas
add
adc
roll
jle
ret
mov
xor
je
mov
or
xchg
jle
add
sbb
cmpsl
mov
call
gs
mov
mov
xchg
add
lea
mov
xorb
rolb
fdivrl
cmp
sahf
imul
push
push
pushf
xor
aaa
and
fbld
lret
popa
mov
test
jmp
rorl
mov
cwtl
cwtl
mov
sub
add
into
xchg
test
push
movsb
mov
cmpsb
adc
rcl
add
test
jg
inc
mov
imul
dec
inc
mov
push
push
inc
mov
jl
icebp
mov
out
ds
add
mov
fs
xchg
rcr
xchg
fxch
movsb
add
pushl
inc
verw
jl
add
adc
add
imul
push
jnp
ja
or
adc
mov
push
lods
aaa
insl
push
push
mov
lds
movsb
insb
repnz
roll
add
jne
out
push
sbb
jnp
imul
add
add
call
jp
negl
push
stos
dec
shlb
mov
pop
xor
mov
adc
xlat
les
jp
incl
mov
enter
inc
loop
test
es
pop
mov
pusha
mov
mov
add
inc
cmpsb
push
adc
clc
dec
mov
push
or
fimull
or
push
fstps
inc
or
outsl
push
repnz
popf
jp
inc
aam
adc
jnp
pop
rcrb
add
lock
push
add
inc
jo
pop
adcl
test
out
addl
insb
mov
insb
push
mov
cs
jne
in
jmp
popf
les
add
inc
inc
and
fs
ss
loop
fistps
dec
roll
xor
jo
dec
mov
in
pop
mov
je
pop
add
call
mov
xchg
je
jle
xchg
mov
rclb
jmp
jge
lcall
adc
inc
mov
jnp
bound
in
lods
dec
pop
cmp
mov
and
or
jle
inc
add
add
ret
xor
mov
mov
xchg
xor
push
push
add
lods
inc
dec
inc
dec
jne
dec
sub
cmp
xchg
mov
pop
lcall
in
aaa
hlt
gs
aad
add
shr
insb
addl
lret
mov
sbb
fisubs
out
bound
in
push
mov
rcrl
sbb
clc
pop
sti
pop
sbb
mov
lret
fsubs
cs
fcoml
loopne
int3
or
rorb
clc
fistpll
adc
je
dec
aad
loop
mov
movsl
data16
jp
imul
jmp
or
shl
pop
insl
call
add
xchg
jno
sbb
mov
pop
repz
das
sbb
decl
shrb
rcl
ficomps
aam
aaa
add
fnstcw
pop
popa
xor
les
ds
pusha
add
loope
sbb
out
out
push
sbb
dec
and
push
mov
xchg
jb
std
mov
add
mov
popa
sub
mov
add
mov
and
lcall
mov
push
out
cli
sbb
sbb
jl
jmp
push
push
lods
mov
shrb
jg
fcos
das
mov
lea
les
icebp
add
sub
inc
lods
and
loopne
jnp
sbb
xchg
sbb
nop
mov
stos
outsb
sbb
jno
pop
add
mov
xchg
bound
lods
in
adc
orb
add
scas
push
cld
pop
adc
xchg
mov
bound
xchg
movsb
mov
or
sarl
adc
ljmp
roll
scas
cli
adc
xchg
insb
and
xor
ja
repnz
mov
jmp
rclb
dec
cmp
and
pop
adc
ljmp
sbb
popa
mov
insb
shlb
or
fidivrl
or
pushf
ret
mov
aam
mov
cmp
xor
dec
gs
nop
mov
orb
add
mov
movsl
xor
out
xchg
fwait
movsl
mov
sub
cmp
add
sub
jmp
incb
mov
xor
push
push
jle
mov
mov
jp
xchg
inc
pop
or
jno
cmpsb
mov
mov
fcompl
xchg
adc
xchg
insb
push
pop
cmpsb
push
aaa
clc
inc
incl
cmp
aam
mov
mov
push
mov
xchg
jecxz
adc
mov
adc
in
sub
lods
leave
les
add
mov
xor
mov
call
inc
sub
loopne
ja
add
push
mov
or
rolb
lds
data16
xchg
shr
cmp
jl
mov
mov
jg
xchg
iret
xor
fwait
cwtl
adc
sarb
sub
out
xchg
mov
mov
pop
insb
dec
add
dec
ljmp
dec
cmp
arpl
xorb
jle
scas
pop
add
icebp
xchg
push
dec
je
pop
mov
mov
add
pop
lock
sbb
loop
jle
push
add
paddsb
andl
or
or
xchg
call
jmp
sub
cs
decl
and
or
out
jno
xchg
push
adc
filds
cmc
pop
hlt
pop
call
mov
inc
ffreep
xor
push
jmp
xlat
xchg
int
jns
xchg
cli
mov
jl
and
jle
lcall
xor
add
xor
jmp
popa
add
neg
dec
add
out
add
or
fisttpl
and
neg
dec
xor
or
adcb
mov
adc
cmp
pushf
pop
repnz
ds
xchg
clc
mov
inc
adc
fs
dec
sbb
xor
xor
inc
inc
lea
pop
sub
mov
movsbl
inc
cmp
or
cwtl
loope
xchg
or
ret
jle
mov
out
sub
xor
inc
lcall
or
mov
lock
ds
lcall
jecxz
xchg
es
cmpsl
or
fbstp
sub
sbb
idivl
xor
pop
add
lock
rolb
rorl
cmp
dec
add
mov
or
mov
mov
das
jge
or
loop
sub
fucomi
cld
jnp
or
aaa
adc
adc
sbb
sub
push
cmp
push
mov
mov
add
add
arpl
xor
jle
stos
inc
les
mov
loope
ljmp
mov
xor
in
aam
mov
imulb
pop
xor
jmp
push
sbb
mov
jg
adc
shll
mov
shll
push
xchg
inc
jecxz
lods
jns
mov
arpl
mov
jmp
add
stc
pop
ficoml
jo
push
fstp
push
js
lret
out
push
push
pop
push
mov
dec
add
mov
push
fcompl
repz
mov
mov
fmul
ljmp
xchg
dec
pop
into
clc
sti
cmpsb
sub
sbb
sbb
cmp
sbb
ss
loope
and
add
push
mov
mov
cs
stos
and
add
cmp
fdivs
xor
inc
xor
fistps
push
fldcw
add
divl
fbstp
mov
or
mov
adc
ja
stos
xchg
nop
fcomip
rcll
push
and
inc
sub
xor
xchg
fidivrl
pop
int3
mov
std
xorl
shlb
rcl
mov
insl
out
sbbb
insb
push
insb
ret
sbb
pop
push
bound
mov
inc
je
test
pusha
cmp
ja
inc
or
out
mov
mov
adc
cld
cmp
orb
rorb
push
add
pusha
repnz
cmpsl
rorl
adc
faddl
and
shlb
jbe
lds
sbb
repnz
sar
mov
in
fsubrl
and
out
mov
pusha
push
xor
insl
lahf
jg
cmp
lock
mov
ret
sar
mov
pop
mov
add
adc
ja
xchg
inc
sub
xchg
jbe
mov
pop
mov
jns
sub
pop
cmc
push
loopne
sbbl
and
pop
sti
andl
sub
cwtl
repnz
imul
inc
inc
or
test
ljmp
mov
push
popa
int
in
add
loope
cwtl
cmp
pop
aas
fmuls
je
test
and
sbb
lret
rclb
es
loop
adc
vhaddpd
xor
jbe
in
int3
es
out
add
popa
adc
mov
mov
mov
mov
sub
inc
jb
test
xor
lcall
inc
fdiv
fdivrs
adc
pop
movsb
xchg
add
cld
mov
outsb
jecxz
jecxz
and
call
sti
inc
pop
jb
shrb
loopne
fsubl
push
pop
cmc
pop
clc
adc
clc
loop
cwtl
aad
js
xor
fildl
fwait
mov
pop
cmp
rcll
xchg
outsb
push
test
jecxz
or
ljmp
imul
enter
and
loopne
push
daa
leave
es
and
cmpl
outsb
mov
fs
push
adc
or
and
xchg
xchg
dec
jl
ss
xor
mov
inc
or
adcb
xor
and
sbb
mov
sub
lods
clc
add
mov
xchg
mov
xchg
movsb
add
pop
fs
fwait
imul
out
mov
jmp
push
in
xor
cmp
push
jmp
aas
pop
decb
daa
popa
xchg
jmp
mov
xchg
out
xchg
notl
ret
adc
pop
sbb
xchg
xor
or
std
sahf
addb
xor
daa
xor
cmp
jecxz
and
and
inc
cmp
cmp
fsubl
push
cmpl
sub
pop
shlb
mov
pop
ljmp
xchg
ficompl
adc
test
dec
mov
cmp
fucomip
or
mov
add
or
mov
fisttpl
ret
sbb
jle
in
jo
ret
adc
jo
mov
dec
hlt
mov
cld
aaa
mov
mov
add
aam
pop
cli
psllw
cmp
mov
sub
es
push
adc
push
cs
loopne
cld
cmp
xchg
pop
jl
adc
jl
clc
sti
cmp
lcall
subl
lret
es
sarb
outsb
std
add
or
aam
mov
movsb
jmp
test
nop
jecxz
mov
test
sbb
sahf
pusha
inc
push
leave
lods
cli
stos
push
int
adc
fiaddl
xchg
pop
mov
test
aad
cli
pop
icebp
mov
dec
hlt
inc
inc
ret
fidivrl
aam
repnz
or
push
mov
pop
add
cmp
jge
jne
test
inc
js
pop
mov
jmp
shrb
jp
pusha
imul
mov
add
int3
cmp
scas
fidivrs
sub
dec
mov
adc
jg
jecxz
sbb
movsb
fisubs
daa
mov
inc
das
js
add
loopne
and
and
dec
jne
jo
mov
into
mov
fwait
mov
fs
jo
lret
mov
jg
add
nop
lds
arpl
imul
mov
adc
fs
mov
push
push
jg
mov
inc
xlat
xchg
mov
inc
adc
sub
mov
sbb
fidivs
mov
xchg
cmp
fimuls
mov
xor
mov
mov
jno
pop
fdiv
xor
fiaddl
insb
pop
incb
and
jb
loop
jmp
scas
dec
decb
hlt
adc
jbe
inc
fwait
inc
ret
movsb
enter
mov
xorl
cltd
or
icebp
mov
leave
clc
lahf
add
or
mov
fwait
jne
fistpl
cmp
sbb
sbb
leave
mov
rolb
insl
ljmp
sbb
mov
dec
not
sub
sbb
adc
mov
cli
pushl
add
sbb
inc
push
fmull
lret
inc
pop
bound
push
loop
push
aad
jnp
mov
stos
dec
cli
cmpb
in
xor
inc
sbb
push
mov
mov
ret
or
or
or
stos
xchg
cmp
push
push
pop
hlt
int3
lcall
cmc
dec
add
or
das
aaa
rorl
mov
mov
rclb
mov
or
jbe
mov
push
decl
sti
xlat
outsb
sti
add
ficoml
mov
loopne
jmp
pushl
sbb
icebp
mov
push
mov
out
in
mov
sbb
pop
mov
aad
push
popa
mov
mov
push
or
mov
mov
sbb
jecxz
insl
mov
pop
imul
sbb
sub
or
cwtl
pop
push
xchg
cmp
pop
sti
lret
push
pushf
cmc
jae
fs
daa
js
stos
lods
scas
mov
cmpsb
mov
push
push
xor
sbb
mov
iret
rolb
xlat
add
push
ficoms
pop
leave
push
sub
lock
hlt
push
mov
or
js
dec
fildl
stos
jmp
movsb
les
call
lret
sbb
icebp
lock
cmp
lret
gs
scas
icebp
test
outsb
frstor
cmp
push
scas
fsubl
out
or
jne
push
cmc
jp
cld
fdivs
ret
pop
sbb
fisubs
out
unpckhps
sahf
sahf
and
pop
jbe
loop
bound
pop
fstpt
adc
ja
xlat
push
int3
and
cli
push
int
xchg
fisubrl
mov
repnz
lock
or
cli
push
fistps
mov
jo
sbb
mov
or
or
ljmp
movsb
iret
fwait
pop
sbb
ret
ljmp
or
add
cmp
pop
insb
or
fwait
sub
sahf
or
outsl
fwait
cmp
mov
nop
push
add
sub
loope
add
int
push
mov
add
xchg
dec
fwait
or
outsl
mov
sbb
addr16
js
popa
mov
push
shll
xchg
sbb
push
cli
mov
repz
mov
negb
in
cli
sarb
add
pop
push
pushf
jle
sbb
jl
push
fcomps
sbb
dec
je
mov
push
xchg
call
das
and
out
or
jp
sbb
mov
push
lock
lret
or
insl
jge
cmp
xor
fistpl
cli
daa
jne
int
test
adc
mov
into
gs
fsubrl
cmp
fwait
push
data16
push
subl
iret
aaa
loope
in
outsb
pop
jmp
and
clc
int
sbb
iret
bnd
pop
cmp
pop
cld
push
pop
sti
pusha
dec
loop
jl
in
pop
lcall
lcall
pop
mov
insb
pop
pop
inc
cmpsb
out
mov
pop
sub
loop
fadds
out
add
mov
jae
addb
inc
rcll
dec
inc
jl
into
insb
fsubs
test
push
out
repnz
cmp
cld
gs
insl
jne
mov
sbb
or
ss
incl
data16
dec
mov
mov
sbb
ds
popa
jecxz
jmp
xchg
in
mov
frstor
out
cli
sub
dec
cmp
gs
mov
dec
mov
mov
loop
xor
pop
addb
mov
sub
scas
daa
or
sti
ret
sub
or
adcb
leave
dec
std
mov
dec
and
std
es
mov
daa
add
movb
movsl
cmpsl
popa
fbstp
jb
mov
in
out
push
mov
inc
xchg
orb
sbb
add
push
dec
loop
jp
add
xor
push
stos
pop
orb
into
or
adc
mov
decl
lahf
test
std
pop
sahf
push
fstl
fstps
or
mov
addb
shll
lcall
adc
or
mov
shrl
fcoml
or
sarl
mov
or
imul
jle
xor
dec
sub
mov
xor
ss
or
adc
add
add
fimuls
cmpl
mov
shll
xchg
mov
into
xchg
sbb
fistpll
pop
inc
ljmp
mov
add
stc
jle
imul
xchg
push
xchg
fimuls
fadds
jge
mov
push
xchg
mov
pop
add
push
push
test
test
fs
fdivrs
mov
jle
cmp
cs
xor
jmp
aam
test
out
jecxz
ret
leave
and
xorb
pusha
rorl
xchg
fstpt
cld
jl
mov
mov
jg
sub
jge
dec
insl
push
mov
mov
xlat
xchg
cwtl
rorl
fidivrs
add
adc
pop
es
mov
add
dec
push
test
cld
xlat
cmp
sub
xchg
sub
dec
in
imul
and
add
sti
jns
enter
pop
call
jecxz
cmp
pop
call
mov
adc
jl
jl
sbb
pusha
sub
and
subb
fsubrs
add
stos
arpl
mov
cmp
add
xchg
dec
add
in
pop
popa
add
stos
dec
rcrb
cmp
incl
jo
cmp
mov
sbb
movsb
fs
andl
xchg
nop
push
mov
adc
call
test
cmc
jp
out
call
imull
jp
push
popf
fdivrs
outsb
inc
cmp
jl
jo
aas
test
jns
addb
and
lods
fcomp
bound
mov
iret
and
push
ds
cwtl
sar
or
push
sarl
mov
xor
loopne
call
addb
adc
mov
movsb
jnp
mov
lock
ret
test
lods
pusha
pop
mov
in
clc
stos
mov
out
loope
dec
mov
imul
add
bound
ret
test
sbb
mov
int3
stos
sbb
cmpsl
xchg
mov
loopne
xchg
rolb
popf
std
dec
dec
aas
jecxz
adc
pop
add
jo
into
les
add
neg
add
fadd
mov
jge
enter
xor
and
mov
mov
subb
mov
add
xchg
sti
incl
inc
sbb
and
sbb
sbb
imul
sbb
fs
dec
incl
stos
fistps
adc
adc
fucomp
sub
inc
push
movsb
mov
push
jle
dec
aaa
mov
fwait
lock
jle
sar
daa
cmpsl
call
sub
adc
test
inc
xor
dec
dec
push
clc
mul
push
ja
scas
ljmp
jbe
pop
pushw
push
adc
ret
mov
mov
jne
push
push
sub
inc
push
dec
ret
push
jg
je
xchg
js
fxch
bnd
lds
push
mov
jmp
negl
outsl
test
ficoms
arpl
and
mov
mov
fnsave
inc
decl
dec
push
addb
scas
add
adcl
cmpl
out
sub
add
mov
das
and
cmpsl
jnp
clc
inc
xchg
pop
sbbl
mov
pop
and
push
mov
sbb
adc
scas
clc
mov
shr
test
insb
push
cli
adc
adc
les
out
xor
ljmp
mov
in
mov
xorb
and
lcall
std
adc
ror
call
inc
daa
or
adc
in
ljmp
cli
sub
cmp
cmp
mov
mov
test
push
lock
out
js
mov
fstpt
ficomps
repz
je
fists
mov
shrb
cmp
add
jb
movsl
aad
fdivrs
lret
scas
test
pusha
mov
pushf
sub
xchg
mov
push
cmpsl
pop
loopne
rorl
adc
mov
pushf
insb
dec
mov
ljmp
es
int3
sbb
cli
sbb
push
sub
sub
loope
fdiv
std
jl
cmpsb
pusha
into
xchg
mov
ljmp
dec
ja
cmp
ret
pop
ret
mov
ret
and
imul
push
cli
leave
mov
jecxz
loopne
stos
sahf
out
pop
idivb
into
repnz
loop
incl
es
mov
call
dec
clc
ljmp
orb
mov
or
sub
fadds
fmull
mov
mov
xchg
test
rcl
xor
sahf
pop
shrb
add
mov
std
dec
mov
adc
fbstp
dec
mov
xchg
mov
jo
adc
js
cmp
in
scas
outsl
stos
add
xchg
fcomip
and
dec
fisttps
loope
aam
jecxz
xchg
mov
fdivrl
inc
xor
sub
mov
cli
lock
cli
fists
inc
in
dec
call
fisttps
push
pusha
insb
mov
mov
pop
cmp
mov
jno
sbb
dec
fisttpl
pusha
pop
sti
fists
add
icebp
insl
add
xchg
xchg
pop
pusha
mov
stc
addr16
sbb
and
out
imul
mov
inc
in
ret
jmp
push
pushw
das
xchg
fadds
ret
add
jmp
pop
or
cld
cli
inc
xchg
inc
sbb
stc
fsubl
or
pop
pop
dec
cmp
add
sbb
mov
xor
adc
ss
hlt
cmc
and
loopne
mov
out
inc
add
sub
movsb
mov
jo
xor
adc
mov
repnz
push
cmp
push
mov
push
loope
fdivr
adc
ret
xor
aam
lcall
mov
add
mov
lcall
sub
icebp
insb
jp
ljmp
push
in
cwtl
repnz
or
xor
sbb
int3
mov
addr16
adc
push
js
hlt
sbb
xor
roll
test
sub
testl
pop
js
adc
cltd
mov
add
in
pusha
or
rorl
and
push
int3
mov
jge
lods
xchg
mov
in
and
jno
mov
add
movsl
ret
push
adc
adc
mov
sub
lret
or
push
mov
sub
mov
enter
push
fimuls
orb
xchg
out
cmp
mov
inc
jmp
stc
test
dec
cs
push
das
cmpsb
mov
add
pop
mov
aaa
jle
add
jo
cmp
sub
imul
xchg
ljmp
enter
pop
out
mov
test
nop
jle
pop
dec
arpl
adc
and
cwtl
and
idivb
ljmp
inc
cmp
mov
pop
sahf
mov
lods
and
enter
arpl
push
xor
push
enter
fdivr
sahf
jg
mov
sub
mov
ljmp
iret
in
adc
push
loopne
xor
dec
mov
sahf
xor
les
inc
adc
js
add
dec
adc
lods
outsb
repnz
out
dec
add
daa
pop
in
jmp
jg
jl
xchg
faddl
sub
xor
das
jne
dec
pop
leave
ret
fidivrl
scas
xor
add
adc
rol
int3
shl
add
mov
inc
adc
cltd
lret
push
push
dec
adc
fcmovnb
lods
adc
inc
les
dec
insl
cmp
inc
pop
sbb
les
test
xchg
or
mov
fdivl
pushw
jns
dec
into
rclb
out
inc
or
in
jnp
xlat
adc
or
mov
push
sbb
jno
jns
cltd
xchg
shrb
and
clc
ljmp
mov
mov
sub
ljmp
and
dec
mov
sbb
repnz
and
imul
sbb
cmp
std
lcall
in
sub
inc
xorl
cli
shll
adcl
movsl
inc
les
sbb
dec
loopne
jb
repz
xchg
xchg
loopne
cmpsb
fs
movsb
push
jl
pop
call
push
or
push
push
in
sub
adc
inc
dec
lea
push
adc
shr
and
adc
adc
jp
decl
push
push
les
lret
pushf
jne
adc
clc
sub
arpl
clc
sbb
in
sub
test
sub
sbb
fsubrl
les
ds
xchg
and
roll
out
adc
ja
ret
orb
add
pop
sbb
in
push
push
dec
inc
or
jb
mov
lock
dec
loop
call
in
lea
mov
xlat
pushf
hlt
mov
jecxz
and
cmp
loop
icebp
jo
sbb
mov
cwtl
adc
pop
jne
jo
je
sbb
rcll
mov
mov
sub
or
and
inc
lods
or
jo
scas
cmp
fimull
cli
cmpl
xor
call
out
fs
adc
repnz
popl
pop
mov
mov
pop
mov
jecxz
cmc
push
iret
int3
xor
mov
shr
xchg
xchg
pop
fidivl
jbe
or
in
sbb
lret
adc
ja
pop
inc
dec
xchg
sub
cmp
lea
clc
data16
xchg
addb
cmpsl
mov
enter
hlt
mov
mov
inc
jmp
sahf
shr
clc
mov
call
imul
mov
sbb
call
sbb
dec
fidivrs
or
fisttpl
ja
stos
dec
dec
add
mov
addr16
sub
mov
sub
pop
mov
mov
sbb
add
add
cmp
jmp
or
mov
loope
icebp
mov
scas
sub
xchg
jne
ret
push
pusha
jne
enter
push
cmp
or
call
xchg
cmp
fdivs
cmp
pop
xor
inc
add
hlt
ficoms
cltd
inc
xlat
call
cmp
subl
dec
adc
mov
sub
jno
add
pop
repz
scas
arpl
ja
or
and
mov
bound
shlb
and
dec
push
push
scas
call
pop
out
or
or
cmc
out
aam
filds
je
rorb
cwtl
cmp
mov
and
popa
mov
add
addr16
add
pop
inc
loope
mov
movsb
xchg
test
out
aam
mov
push
mov
cltd
adcb
add
mov
add
mov
outsb
ss
call
add
lock
pop
add
fstpt
orb
pop
and
pop
hlt
add
pop
mov
fs
sbb
mov
xchg
mov
adc
call
loope
add
in
dec
fisttpll
scas
sti
and
add
xchg
push
or
inc
cmp
add
popa
insl
mov
das
cwtl
scas
and
jmp
aad
into
cmp
mov
test
std
xchg
test
add
dec
dec
sub
stos
std
pop
mov
cmpsb
popf
push
test
dec
les
frstor
loopne
pop
daa
mov
mov
sub
mov
mov
add
xor
mov
cld
or
cmp
jo
in
xorb
pop
sub
loope
cmp
int
ljmp
das
xor
rorl
fsubr
add
rol
fdivrp
pop
dec
test
ja
add
das
adc
outsl
pop
pop
stos
add
in
jl
iret
test
lock
hlt
or
orb
outsl
test
cmp
dec
or
and
aas
jb
ret
cmp
mov
push
inc
sub
push
add
add
out
adc
cmpsl
pop
jle
fwait
sti
push
insl
pop
jge
gs
xor
jge
cwtl
out
and
xchg
jns
mov
mov
push
popf
add
rcll
xchg
js
add
and
jmp
push
fdivrs
adc
incl
push
enter
mov
fsubrp
loope
jl
jmp
dec
fidivl
in
ja
jmp
pop
mov
jns
std
call
add
nop
push
add
fcomps
mov
cmp
adc
subl
rcll
cs
es
push
out
xchg
push
stos
imul
scas
adc
cmp
mov
or
lods
sarb
fmull
ret
mov
cs
add
adc
mov
negl
movsb
add
cli
sbbb
adc
xchg
imul
out
imul
push
lock
push
and
fsubs
mov
ljmp
test
testb
dec
rolb
hlt
mov
cmp
adc
cmp
and
mov
xor
outsl
pop
hlt
lods
mov
pop
pop
mov
mov
mov
jle
ljmp
arpl
cmpsb
fistl
sub
and
adc
scas
ss
pop
sbb
pushf
adc
pop
add
mov
icebp
sbbb
mov
lods
xor
testb
xchg
mulb
and
sub
cmp
pop
mov
xorb
cmp
pop
ret
or
jmp
hlt
mov
arpl
test
loope
pop
pop
mov
push
clc
xchg
sbb
inc
push
or
push
jb
inc
mov
mov
clc
test
insl
add
or
xchg
mov
jbe
icebp
fdiv
lcall
out
aaa
mov
push
sbb
fistps
loop
test
cmp
outsl
xor
xor
mov
sbb
daa
pop
xchg
adc
loop
mov
or
or
aad
fsubrl
decl
mov
push
lcall
xor
xchg
mov
lock
les
test
out
cmp
sahf
nop
lret
aam
fsubl
aad
inc
loopne
jbe
push
sub
aad
push
cs
push
pop
loop
mov
dec
sahf
lcall
cmc
data16
mov
les
nop
sbb
or
sbb
or
push
push
jb
cmp
pop
push
mov
or
clc
and
add
cmp
js
sbb
jo
out
gs
xchg
sub
out
icebp
int
filds
or
sub
jecxz
clc
pop
test
ds
into
out
add
jnp
ret
pmaddwd
xchg
out
and
leave
sbb
cli
ljmp
push
insb
xchg
inc
lods
add
cmc
dec
std
test
mov
idivb
push
sbb
mov
cmp
loopne
sub
pop
icebp
inc
pop
push
outsl
push
mov
aas
cmpsb
out
add
pop
je
mov
daa
lcall
mov
lds
add
ss
jl
scas
mov
jmp
in
xchg
xchg
add
or
loope
mov
inc
cmc
sbb
mov
decl
lret
loopne
mov
pop
mov
loop
std
dec
fdivrl
loope
faddl
outsl
aaa
std
mov
sbb
outsb
and
in
lock
out
mov
hlt
push
jg
mov
pusha
inc
mov
dec
xchg
mov
sbb
or
push
add
add
ss
dec
call
sub
dec
cld
xchg
inc
fisubrs
push
cli
mov
mov
repz
jmp
test
adc
js
fwait
jle
mov
daa
mov
movsl
gs
cmp
sub
push
cli
jno
in
mov
adc
pop
cmp
inc
std
rol
cmc
pusha
stos
jp
push
nop
jle
insb
out
cmp
pop
in
jl
or
xchg
out
inc
aas
jge
movsl
pop
int3
loopne
js
lock
inc
fiadds
scas
outsl
xor
clc
jmp
mov
movsl
xchg
lret
push
push
cwtl
cmc
fisttps
pop
lret
adc
push
xchg
enter
dec
adc
std
xchg
out
xchg
pusha
pop
and
xchg
add
jb
insb
clc
out
mov
dec
cs
xlat
inc
jle
outsl
add
inc
add
jne
push
cmp
mov
xchg
fmuls
dec
adc
cmp
loop
jle
and
pop
incl
push
lret
pop
lods
xchg
inc
test
xchg
mov
sarb
shll
and
xchg
ss
aaa
adc
mov
mov
mov
shrb
pop
ret
hlt
add
and
sbb
outsl
dec
into
frstor
xchg
aad
test
dec
clc
sbb
jae
mov
outsl
mov
shl
adc
ret
popf
in
cmpsl
pop
xchg
pop
inc
lock
pop
je
aas
mov
inc
mov
repnz
out
mov
out
and
imul
jo
mov
mov
fwait
or
lock
in
jl
mov
xor
in
imul
cli
outsl
mov
lods
ret
push
lock
jbe
je
pop
pop
lea
xchg
dec
cmp
cmc
loop
loopne
loopne
cwtl
shlb
out
sub
into
aas
loope,pt
ret
js
push
mov
mov
sub
out
cli
js
jae
mov
xchg
push
dec
xor
outsl
xor
int3
mov
mov
add
fadd
or
fwait
pop
inc
in
inc
jb
sarb
pop
pop
lock
loopne
inc
test
mov
jecxz,pt
xor
fistl
push
sub
mov
orb
inc
push
mov
ljmp
aaa
addl
daa
push
scas
into
push
rcrb
int
aad
mov
or
std
dec
cmp
mov
test
rcr
and
ljmp
dec
mov
cmp
outsl
dec
jne
and
add
add
out
add
mov
xor
js
add
divb
arpl
mov
add
out
mov
mov
mov
pop
lods
add
decl
and
filds
sub
cmp
sbb
sarb
je
lds
pop
dec
xor
sub
push
cld
adc
and
jl
pop
inc
cmp
push
push
call
mov
rorb
addr16
jmp
jo
imul
fadd
fildl
mov
push
pop
ret
adc
outsl
add
xor
sti
jecxz
jne
jbe
imul
pop
mov
pop
lods
ret
in
mov
jl
aaa
ss
jmp
lods
cwtl
mov
add
test
and
inc
push
out
mov
je
mov
test
jnp
lahf
rcrb
add
push
pop
loopne
cld
out
pop
xchg
mov
mov
mov
dec
dec
dec
loopne
sbbb
lahf
ret
inc
or
pop
adc
cmp
jg
jmp
bound
adc
scas
push
push
jb
sarb
ret
or
aam
lea
stos
push
int
mov
adc
scas
insb
ss
fimuls
push
pop
jno
adc
movsb
fwait
sahf
sbb
ret
das
clc
mov
into
ss
pop
sub
jl
aam
ret
mov
outsl
psubb
mov
jne
lea
push
imul
xchg
mov
xor
push
or
aam
popf
rcr
test
out
adc
push
pop
cld
pop
add
push
lods
inc
movsl
inc
add
inc
iret
mov
pop
inc
push
push
sbb
adc
notl
sub
fidivl
inc
sbb
mov
ss
stos
mov
pop
xchg
ds
stc
stc
or
test
add
and
mov
and
cwtl
push
pop
adc
repz
push
jbe
out
and
subl
lcall
push
mov
ret
mov
pop
mov
sub
push
loopne
in
jge
xchg
ret
sub
add
adc
mov
pusha
xchg
call
movsb
icebp
mov
fisubrs
add
push
cli
outsl
xchg
lcall
cmp
adc
sbb
xchg
or
outsb
ljmp
rcr
les
loope
adc
sbb
sbb
xor
pushf
movsb
aaa
cmc
incl
add
adc
pushf
sti
hlt
and
jo
jbe
inc
xor
cli
popf
lock
push
adc
std
andb
dec
lock
cs
push
dec
cmpsl
orl
sbb
stos
loopne
jle
rolb
jle
inc
into
and
ja
mov
dec
sub
mov
push
cmp
xor
test
nop
push
scas
adcb
push
shlb
inc
jg
jae
dec
gs
decl
push
leave
pushf
enter
inc
jnp
sbb
repnz
cmp
jp
call
mov
test
sub
mov
insb
cwtl
mov
orb
vmovsd
jno
inc
xchg
aas
lcall
mov
pop
cld
sbbl
push
fwait
pop
loopne
cmp
mov
ficomps
fadds
pop
sbb
and
int
mov
jbe
scas
sbb
mov
fldt
int3
adc
xorb
cmp
cmp
ljmp
incl
ret
in
push
imul
xor
add
idiv
cld
add
pop
cld
cwtl
cmp
pop
lock
inc
xlat
pop
decl
add
sub
mov
outsl
sahf
adc
test
sbb
pop
pop
faddl
sarl
fadds
mov
lahf
fiadds
out
mov
popa
add
cmp
pop
hlt
sti
ja
mov
mov
cmp
push
pushf
cmp
incl
test
mov
jle
loopne
lds
xor
outsl
sahf
dec
jnp
fwait
lret
clc
jg
adc
pusha
xor
mov
rcrb
ret
cmp
loop
add
jp
rorb
jae
cmp
xchg
push
add
pop
pop
lock
add
xchg
bound
xchg
mov
out
clc
call
add
push
and
push
sar
jb
pop
arpl
in
jg
js
shll
cmp
cmp
push
push
lea
or
enter
mov
out
mov
divb
dec
mov
out
dec
dec
pop
rcll
mov
int3
movsl
mov
test
clc
incl
jno
js
dec
mov
fistps
cs
decl
ss
sbb
mov
aad
cli
mov
inc
repnz
xor
xchg
adc
iret
mov
xchg
xor
shlb
clc
incl
add
out
mov
ljmp
into
xchg
cmp
push
mov
cmpsl
inc
xorb
not
add
mov
aaa
adc
mov
test
pop
jo
divb
in
in
scas
xor
add
lcall
push
push
jecxz
ja
lret
mov
ret
pop
jo
test
jo
les
ljmp
popa
and
ss
pop
fisttpl
inc
cmp
push
jae
jg
std
into
rcrl
clc
pop
lea
mov
or
loopne
sub
bound
test
mov
push
cmp
dec
pop
nop
jecxz
pop
mov
movsl
jmp
sbb
dec
push
leave
fisubs
loopne
sar
clc
loopne
push
cwtl
cwtl
int3
cmc
jp
dec
add
sar
pop
test
cwtl
jl
jno
repnz
fldenv
inc
dec
jmp
xorb
roll
mov
xorb
jnp
add
adc
xor
add
jno
jno
sub
call
sub
aad
sbb
dec
loop
icebp
and
sub
sar
and
adc
pop
and
icebp
xlat
or
dec
in
pop
push
push
into
cmp
scas
cli
outsl
push
xchg
add
sub
aaa
inc
pop
jae
test
shl
pop
out
test
add
push
sub
adc
jbe
nop
mov
jo
pusha
decb
lret
scas
xchg
pop
roll
adc
movsb
ss
dec
ds
inc
xor
jl
pop
sub
call
lea
adc
adc
push
cli
pop
icebp
outsl
xchg
lret
cmpl
xor
lret
mov
adc
mov
mov
mov
ficoms
mov
pop
lock
add
push
stos
jg
and
xor
cld
xchg
test
enter
sub
and
addb
push
daa
pop
inc
in
pop
outsl
fmuls
dec
dec
cmp
ret
xor
adc
ja
sbb
cmp
and
fildl
ret
fcomps
std
pop
sbb
add
repz
incl
cwtl
add
inc
cli
outsb
add
mov
mov
fwait
icebp
das
js
mov
ljmp
dec
jp
xchg
out
mov
loopne
jg
mov
sub
in
std
out
lods
cmp
push
out
add
ljmp
sti
dec
fbstp
mov
and
add
inc
push
mov
sub
es
decl
shlb
cmp
test
iret
icebp
and
jge
mov
add
out
cltd
sub
jbe
out
in
sbb
inc
inc
and
inc
insl
dec
pop
dec
outsb
add
movaps
cld
addr16
mov
jge
cmpsb
mov
adc
fisubrl
jne
jnp
adc
cmp
shr
cmp
in
push
sarb
add
and
int
dec
cmp
testb
js
pavgb
xor
sub
sarb
inc
and
jle
bound
cmp
mov
push
lods
xor
jae
shlb
mov
add
sub
dec
js
inc
ret
push
shrb
adc
in
mov
ss
nop
stc
and
or
in
in
fcoms
push
scas
adc
mov
fidivrs
mov
sub
add
mov
add
neg
hlt
or
jbe
ficomps
or
outsb
or
or
xchg
adc
shl
and
pusha
lods
pop
add
add
shl
cli
lcall
jg
mov
shlb
ja
sub
or
mov
rcrl
pop
dec
push
mov
cmp
mov
push
dec
aam
rol
std
pop
dec
aam
or
arpl
and
pusha
out
xchg
sbb
imul
dec
or
and
packssdw
mov
int3
mov
std
sbb
mov
add
lea
mov
hlt
movups
inc
xor
sbb
clc
xor
pop
rol
cmpsb
call
mov
out
mov
lea
cs
push
sbb
fiadds
out
repz
lret
roll
repz
inc
rolb
rcl
sub
data16
enter
and
inc
sbb
mov
xor
popf
aaa
subb
lea
rcrl
sub
sub
pusha
data16
leave
mov
inc
jbe
inc
loop
xor
jl
dec
dec
mov
mov
jecxz
insl
xor
pop
pop
hlt
lahf
cmpb
test
adc
and
adc
ret
mov
fwait
int3
loope
xchg
or
inc
clc
xchg
dec
inc
ss
or
xchg
test
aas
icebp
sub
ret
and
pop
lods
mov
pushf
repz
and
sbb
sbb
and
mov
jmp
inc
sbbb
sbb
inc
jp
add
mov
add
mov
inc
adc
push
imul
jns
xorb
jnp
mov
out
popa
inc
orb
fnstsw
xchg
pop
fsubrs
mov
into
and
adc
arpl
insl
jb
inc
jmp
sub
fmuls
lret
adc
hlt
call
addb
add
lods
int3
mov
mov
xchg
negl
or
xor
test
fldenv
and
sbb
stos
clc
dec
push
push
mov
add
daa
xor
outsl
sbb
inc
scas
or
icebp
inc
mov
xchg
adcb
testb
and
mov
jmp
xchg
xchg
pop
jnp
mov
cld
adc
cli
or
xchg
pop
not
dec
add
loop
pop
mov
mov
inc
addl
jmp
mov
push
or
inc
lret
mov
push
sbb
inc
add
ret
cmpsb
xchg
mov
push
xor
popa
js
inc
xchg
jns
jne
lock
call
adcb
adcb
cltd
xchg
nop
push
push
push
std
test
jae
sbb
imul
mov
sub
aam
fildl
stos
push
push
dec
hlt
add
push
mov
hlt
testb
pop
sbb
inc
pusha
push
pop
orl
orb
aaa
cltd
outsb
sub
cmc
jbe
mov
fidivs
xor
pop
sub
inc
sub
rcl
sbb
mov
test
add
andl
test
loope
hlt
mov
mov
mov
sub
adc
cli
ljmp
jbe
lret
push
add
sti
rcll
xchg
and
dec
rcr
and
mov
and
aaa
popa
cld
test
dec
sub
imulb
and
mov
dec
cld
inc
out
and
xorl
mov
push
lds
test
sbb
add
orl
xchg
or
jne
call
mov
std
xchg
add
and
call
add
jno
ss
stos
icebp
add
inc
test
xor
pop
repz
cmp
jnp
sub
ret
mov
push
ss
scas
sbb
xchg
mov
lock
cld
sbb
call
mov
in
add
pop
mov
cltd
jnp
and
rol
decl
stos
aam
xchg
jo
xorb
sbb
jne
gs
pop
xchg
and
incl
insb
data16
push
lcall
inc
xchg
jae
jo
sub
in
loope
xchg
add
test
adc
fldt
mov
insb
cwtl
push
clc
inc
jmp
adc
jmp
mov
or
jl
outsl
pop
lahf
adc
dec
repnz
push
das
fldl2e
jp
clc
out
push
cmp
add
sub
push
cltd
push
xor
incl
inc
sarl
sub
test
outsb
add
or
or
icebp
or
imul
mov
dec
cmpsl
lret
fwait
mov
mov
jmp
pop
ljmp
in
mov
outsl
fsubr
add
jo
and
ret
outsb
adc
fbld
adc
rol
incl
lock
jbe
xchg
ds
pop
mov
test
movsb
fidivl
mov
pop
xchg
movsb
cmp
daa
add
cli
add
sbb
es
mov
mov
pop
cmp
repz
xor
mov
divl
mov
hlt
jg
out
clc
xchg
bound
pop
outsb
js
push
or
xchg
imulb
lahf
mov
xor
mov
pop
mov
ret
in
lock
inc
mov
jo
ja
scas
jp
add
adc
shll
call
pop
icebp
lcall
cmpl
out
pop
sar
mov
aas
aad
jae
outsl
and
or
sbb
dec
stos
stc
movsb
sarl
clc
outsb
inc
cs
sub
or
cmpsb
lock
mov
dec
addb
xchg
hlt
iret
out
pop
ja
shrl
xchg
aam
inc
ljmp
mov
push
sbb
arpl
lock
jecxz
lds
jbe
add
sbb
cmp
push
mov
xchg
jo
mov
xor
and
push
rorl
call
mov
cmpsl
nop
or
xor
inc
clc
out
push
inc
das
push
cwtl
sub
or
out
pop
out
cmp
inc
mov
shlb
xlat
lods
fimull
inc
repz
out
les
mov
enter
jnp
cmp
ret
add
sub
adc
aad
sub
sbb
lock
leave
xor
add
mov
aam
test
mov
ret
mov
and
or
dec
jg
out
andb
mov
mov
mov
inc
dec
mov
mull
push
sahf
jo
mov
sbb
push
sub
adc
push
xchg
aam
add
sub
repz
xchg
adc
or
das
sub
jg
fistpll
rcrb
fwait
jae
in
jmp
mov
push
add
sbb
mov
mov
adc
inc
pop
loope
sbb
test
mov
orb
iret
push
mov
and
insb
mov
inc
ret
mov
ret
dec
dec
incl
fdivp
lahf
int
push
add
in
xor
mov
stos
xor
and
inc
loope
cmp
mov
neg
daa
xor
shlb
aaa
lods
fnstcw
push
xor
incb
xor
popf
loopne
stc
dec
sbb
add
dec
aam
fbld
scas
out
add
dec
xchg
clc
adc
test
adc
out
dec
xchg
fsubs
inc
xor
fidivl
loopne
mov
fcomip
sub
call
xor
sub
dec
hlt
call
jne
addr16
popa
and
stos
lock
or
outsl
pop
aaa
scas
lock
lods
jecxz
div
xchg
jmp
outsb
push
mov
lods
cld
add
aaa
mov
jl
pop
dec
mull
adc
and
aad
js
adc
and
mov
push
mov
das
pop
and
test
clc
sbb
push
push
cltd
cmc
pop
add
sub
lods
mov
dec
shrb
std
mov
lods
add
push
pusha
and
xchg
cmp
mov
roll
les
jb
mov
fsts
push
jo
dec
daa
loope
mov
xchg
sbb
pop
lahf
arpl
test
adc
pop
outsl
add
adc
xchg
ret
xor
cld
ret
pop
inc
push
sahf
loopne
mov
ret
aad
call
dec
clc
enter
mov
dec
xor
cmp
push
or
cmp
jbe
andl
xchg
insl
neg
pop
pop
or
nop
inc
out
loop
add
and
jmp
mov
pop
push
pop
add
mov
in
adc
rorl
outsb
sbb
in
jge
ds
jno
pushf
inc
add
cld
sbb
mov
push
push
iret
push
sti
aaa
enter
and
mov
and
inc
hlt
pop
sarl
aad
imul
pop
addl
pop
push
inc
cmpsl
clc
add
mov
ret
dec
push
cwtl
testb
into
jmp
js
cmp
or
call
dec
ret
inc
and
adc
adc
test
mov
or
adc
pop
or
dec
ret
push
inc
data16
pop
out
inc
and
sub
xor
jne
lods
add
sbb
push
shlb
mov
popa
rcrl
add
mov
aad
popa
fistps
fmull
jl
int
push
xor
outsl
mov
shlb
mov
ds
pop
cmpsl
fsubrs
out
in
das
push
pop
sub
or
sub
lahf
add
lock
gs
mov
int3
popa
add
mov
push
mov
xor
outsl
dec
lock
jl
push
and
out
rcr
fwait
pop
aad
pop
dec
xlat
mov
daa
add
xlat
pop
aam
jnp
loopne
adc
fsubl
rcl
lahf
out
faddl
mov
jl
imul
insb
xchg
arpl
iret
movl
add
or
xchg
and
into
pop
xchg
sbb
add
pop
cwtl
push
sbb
add
cmp
pop
lret
mov
into
loop
fdivl
out
inc
push
cmp
in
loop
or
pop
inc
fcoml
test
xor
pushf
push
int3
xchg
lea
jne
ret
push
sub
pop
xor
dec
popf
sbb
std
sbb
inc
xchg
push
or
ss
or
xchg
push
clc
sub
pop
xchg
adc
push
jae
leave
imul
sbb
pop
adcb
fsubr
and
into
add
ret
xchg
sarb
add
test
dec
incl
pop
clc
out
lcall
scas
pop
leave
jecxz
dec
fchs
arpl
adc
inc
pop
jle
mov
test
or
std
mull
inc
jae
cmp
es
sti
sub
xor
fildl
mov
in
pop
loopne
xor
mov
inc
int
jbe
js
mov
cmpsl
imul
movsl
push
or
mov
fucomi
pop
arpl
inc
adc
sbb
push
pop
call
sub
jp
es
and
or
es
arpl
inc
or
or
pop
test
inc
xor
lock
lock
sti
mov
hlt
pshufw
testl
les
ret
xor
imul
lock
stc
cli
repz
mov
sub
insl
mov
addl
lcall
xchg
dec
das
mov
mov
jb
sbb
out
inc
mov
nop
inc
sub
cs
dec
cmp
into
and
dec
mov
or
push
or
jle
orb
imul
dec
out
into
push
pop
lods
add
add
push
xchg
test
jl
pop
icebp
inc
mov
push
inc
shll
in
pop
mov
mov
loopne
sub
test
std
dec
jge
ss
int3
or
and
push
and
jge
ret
mov
cmp
mov
xor
jg
add
or
jno
aas
mov
in
les
sti
mov
cmp
incl
and
jno
sbb
popf
mov
xchg
add
xchg
insb
add
mov
adc
push
adc
mov
call
cmp
jge
xchg
dec
leave
sub
cmp
movsb
mov
inc
push
in
inc
mov
cmc
push
aas
daa
repnz
adc
add
pop
cmc
outsl
ljmp
inc
add
cmpsb
xchg
test
mov
repnz
sub
in
shrb
or
test
aas
add
sub
push
jg
clc
xchg
sbb
movsb
movsb
clc
pop
sbb
add
aaa
clc
out
pop
cld
mov
nop
out
cs
roll
lcall
jb
and
outsb
lret
sti
fstpt
test
pusha
push
inc
and
in
sar
out
pop
add
dec
pop
cmp
adc
fbld
shlb
pusha
push
jmp
ljmp
sbb
pop
ds
incl
adc
adc
add
or
data16
insl
cld
ljmp
movsb
cmp
js
je
add
mov
jo
pusha
push
popa
aaa
movsb
dec
outsb
pop
lods
cli
pushl
mov
wrmsr
popa
mov
add
lcall
lock
push
add
xchg
dec
and
xchg
bound
nop
out
and
xlat
xchg
js
dec
mov
sarl
test
xor
sub
ret
pop
pop
jp
add
mov
icebp
and
pop
fisubrs
incl
push
addl
inc
icebp
mov
xor
call
and
add
and
loop
add
push
or
add
dec
xlat
ljmp
cmp
pop
and
fildl
je
ffree
icebp
bound
mov
add
add
xor
ljmp
nop
push
popa
addr16
push
add
insb
pop
xor
jge
push
mulb
sbb
mov
jne
cwtl
scas
mov
clc
bound
add
stos
xorl
and
pop
rcrb
inc
les
mov
push
rorl
sbb
add
lahf
add
xor
pop
mov
push
mov
mov
movsl
fldcw
in
add
mov
mov
icebp
xchg
adc
mov
cwtl
fidivl
sbb
add
addr16
mov
movsb
jg
adc
dec
xchg
aad
xchg
lods
decl
and
enter
jns
pop
and
add
arpl
push
call
mov
call
add
and
dec
lahf
jg
push
add
scas
push
lods
push
pop
or
les
in
popa
pop
push
fidivrl
add
call
imulb
es
push
mov
add
inc
mov
outsl
and
dec
dec
add
or
sub
mov
arpl
fwait
jle
cld
lea
jno
adc
push
dec
cmp
xor
and
sbbb
add
or
mov
insb
pop
adc
jae
adc
call
mov
int3
sbb
fsubl
cmp
pop
mov
xchg
xchg
cmc
cmpsl
dec
xchg
out
push
adc
lock
inc
bound
jbe
inc
std
ljmp
fidivl
mov
enter
mov
jns
inc
rcl
add
jb
add
les
mov
cmp
bound
pushf
push
push
sbbl
pop
push
roll
sbb
repnz
sub
stos
push
push
cmp
xor
les
shll
inc
cwtl
cs
mov
es
add
jecxz
in
clc
dec
les
pop
xor
mov
push
add
shll
stos
fisttpl
test
in
std
jl
stos
icebp
push
mov
adc
inc
dec
addb
call
js
dec
sbb
dec
loope
pop
pusha
bound
mov
push
push
mov
pop
decl
sub
testb
sbb
push
pop
call
aam
popa
test
add
sbb
test
loop
push
ljmp
test
cmp
sub
add
adc
dec
sbb
or
repnz
ss
ja
xchg
fidivrs
mov
jle
aaa
aad
loope
sbb
stos
mov
inc
mov
xlat
pop
jne
mov
cs
add
add
mov
fmulp
outsb
mov
mov
xchg
in
mov
pusha
rclb
pusha
and
inc
jno
decb
cmp
pop
push
imul
loop
jns
decb
inc
dec
add
add
and
mov
lock
ret
jp
inc
jnp
add
addb
mov
iret
stos
rolb
pushf
pop
xchg
lret
orl
pop
loop
jmp
iret
das
je
dec
xchg
aas
mov
mov
or
lea
aam
clc
adcl
in
sbb
test
lock
or
xchg
push
fists
ficoml
cwtl
ljmp
sub
in
mov
shlb
scas
push
inc
mov
enter
stc
jbe
or
mov
add
call
or
dec
scas
mov
aas
or
push
mov
push
out
sbb
rorb
arpl
cmpsl
jg
cwtl
pushf
pop
aad
sub
mov
cld
sub
add
pop
jno
lea
ja
std
out
xchg
je
fcoms
adc
test
loopne
inc
push
fistpl
and
mov
jnp
cmpsl
pop
pop
cld
mov
fcomi
pop
add
add
hlt
add
add
arpl
out
and
jl
je
fistpl
call
sub
pop
jmp
or
jae
sbb
je
push
jecxz
sub
xchg
pushf
mov
pop
mov
inc
repnz
out
cs
push
das
jl
shl
push
stos
pop
sahf
add
sub
xchg
push
adc
sti
mov
inc
outsb
push
mov
ljmp
sub
lock
mov
popa
es
sbb
adc
js
push
xchg
std
lcall
int
jmp
inc
xchg
pop
sbb
adc
mov
jg
daa
les
aam
mov
outsb
nop
sbb
cwtl
lea
mov
pop
pop
pop
shrb
repz
aas
jl
loopne
cld
and
sahf
lret
hlt
shl
jg
mov
push
cld
cs
xchg
and
fisubl
push
add
push
jmp
ret
push
dec
mov
pop
testl
lahf
sub
into
testb
test
jg
xor
push
jbe
mov
lret
jno
pop
repnz
or
adc
mov
aaa
push
lds
mov
or
ja
cmp
fldcw
sbb
movsb
ds
push
loop
fs
jnp
int
rorb
mov
fistpll
mov
test
and
orl
inc
imul
ret
pop
sbb
jecxz
bound
fwait
test
fwait
push
push
rcll
or
xor
gs
lret
mov
nop
call
lods
in
xchg
add
stos
rcrb
xchg
push
cwtl
xor
out
mov
and
outsb
mov
sbb
push
pop
pop
pusha
hlt
sub
xor
add
lock
xchg
mov
js
bound
clc
call
mov
push
inc
xor
mov
xor
daa
lock
gs
loope
pushf
les
rsqrtps
addl
cld
sti
add
lahf
pushf
lret
imul
divb
sbb
mov
dec
xor
mov
pushf
ljmp
jmp
dec
ds
mov
loop
xchg
orl
lea
je
nop
test
stos
ror
lret
xor
jl
cmp
jg
mov
sub
sbb
rcll
lods
movsl
xrelease
sbb
cmpsb
adc
aas
adc
add
push
mov
adc
in
pusha
sub
xor
sub
or
xchg
popf
movsl
inc
mov
int3
lret
adc
adc
mov
mov
mov
inc
xchg
daa
outsb
mov
stos
rcrl
test
aas
sbb
jns
pop
lcall
sub
push
xorl
xor
push
push
dec
fcoml
mov
jb
rcll
mov
xchg
fsts
dec
adc
pusha
adc
sub
fbld
cmp
and
jmp
inc
or
xchg
jecxz
add
inc
sub
mov
stos
adc
mov
aam
dec
popa
sub
loop
jns
mov
in
lret
stos
dec
fistl
in
cmpsb
lock
or
mov
xor
xor
pop
push
mov
cmp
cmp
xchg
add
pop
xlat
dec
rorb
mov
dec
test
lea
test
inc
aam
xor
xor
fists
rcll
dec
mov
out
mov
lret
pop
ljmp
pop
das
jmp
sbb
cs
stos
ret
add
jl
cmp
pop
es
or
lahf
rcr
add
pop
add
arpl
cld
pop
inc
sub
sub
or
pop
and
jbe
mov
adc
fiaddl
cmp
daa
jge
in
push
jo
push
inc
pop
test
mov
not
and
sbbl
mov
xor
nop
inc
jo
pusha
repnz
int3
jne
mov
shrb
les
hlt
mov
add
xorl
lahf
pop
fmuls
xorb
dec
loopne
scas
scas
inc
rorb
dec
repz
in
ret
dec
shrl
ret
sub
outsl
mov
sahf
es
or
mov
bswap
in
fs
fdivrs
fmul
sub
dec
les
push
sub
cmp
outsb
sub
lock
lods
jl
sbb
ja
cli
cltd
scas
js
mov
je
incb
sub
inc
xor
xor
sub
cmp
dec
int3
aad
adc
in
mov
xchg
cmp
lods
loope
aam
test
mov
loop
xchg
jge
out
hlt
ljmp
push
nop
push
out
sbb
inc
lret
stc
and
add
pop
lretw
cld
xor
test
dec
fsubrs
sbb
pop
lods
scas
nop
pop
not
outsl
push
scas
scas
int
outsl
sub
addr16
je
push
xchg
add
xlat
inc
push
add
loopne
and
mov
add
sti
add
int
add
push
mov
lods
add
comiss
add
sub
dec
cmc
sbb
data16
adc
xor
fiaddl
mov
sete
cld
aam
lock
lea
push
imul
lcall
jl
cmpsb
or
cmc
sbb
add
and
movl
ds
fdivrl
fcoml
sub
inc
dec
pushf
cmp
jb
or
movsb
adc
mov
hlt
ret
mov
std
lods
stc
popa
adc
cld
mov
out
sbb
lds
bound
mov
xor
gs
inc
fbld
bound
pusha
xlat
add
sarb
dec
js
mov
movaps
cmp
pop
cmp
imul
cltd
adc
mov
in
lret
inc
push
xchg
insb
or
test
mov
lock
or
shrl
repnz
push
inc
cld
icebp
cmpsl
ljmp
aaa
xchg
imul
mov
cmp
cmc
loopne
xchg
jecxz
lods
push
bound
ss
fstpt
ret
or
ss
xlat
inc
fists
ss
jge
ljmp
push
cmp
mov
cmp
ljmp
stos
jae
andb
inc
xor
cmp
sub
insl
imul
pop
or
test
mov
aaa
cs
add
icebp
imul
push
rol
jmp
adc
xchg
adc
mov
inc
sbb
outsl
pop
inc
movsb
ss
ret
mov
inc
push
aam
movsl
call
pop
lret
enter
adc
add
or
cld
mov
xor
imul
add
gs
addl
inc
je
cmp
lock
jbe
fdivrs
mov
adcb
push
mov
or
in
mov
push
test
add
jle
xorl
es
mov
push
xchg
adc
and
cwtl
fldl
je
loop
xor
cmp
orb
xor
mov
test
mov
ret
or
lcall
lds
test
fistps
loop
std
stos
push
mov
lods
adc
fwait
xor
arpl
add
push
pusha
lea
icebp
incl
aad
push
inc
sahf
push
enter
into
mov
jnp
sarl
cwtl
adc
mov
add
pushl
scas
or
xlat
sub
jae
pop
mov
popa
sub
jne
lock
cld
test
das
insb
cmpsl
xor
mov
imul
les
mov
rcl
aaa
cmp
inc
icebp
mov
aaa
xor
lcall
dec
nop
sbb
fdivs
inc
mov
mov
pop
mov
cmp
insl
clc
add
fucomi
xchg
mov
scas
or
sti
jg
inc
mov
pop
xchg
cs
sbb
xor
or
ljmp
inc
aam
mov
lea
xor
fs
scas
jecxz
jp
mov
je
mov
jge
out
ret
xchg
add
xchg
cmpsb
cmp
xchg
popf
mov
add
adc
call
sub
inc
add
aam
fstps
outsb
or
xor
xor
std
inc
pop
arpl
mov
icebp
adcb
stos
loopne
adc
push
loopne
cmpsl
push
sub
sbb
pop
xchg
push
shlb
xorl
clc
repnz
cli
mov
or
lds
loopne
jle
jl
test
loopne
push
jge
add
mov
decb
xchg
cmp
mov
in
shl
add
das
and
test
pusha
inc
insb
adc
lock
add
adc
sub
cmp
aas
dec
ljmp
mov
sbb
lods
aad
ja
add
ss
sub
mov
cmp
shrb
pop
sarb
or
sbb
push
addb
test
mov
jnp
add
je
scas
popf
loop
fadds
fucomip
out
rcr
les
adc
mov
ss
push
jp
orb
add
add
jne
shl
lods
pop
inc
js
clc
and
push
mov
jmp
icebp
cmp
xor
in
je
sbb
ret
lock
ds
dec
inc
loope
ret
lock
es
fucomp
add
jmp
mov
xorb
fpatan
push
hlt
iret
sub
add
xchg
ret
rclb
cmp
lret
lds
fsub
xchg
aam
push
sbbb
pop
nop
mov
add
pusha
outsl
or
mov
or
xor
inc
add
mov
clc
in
push
pop
adcl
loopne
sbb
dec
push
mov
loop
mov
jmp
aaa
sbb
mov
sbb
sub
mov
cmc
fbld
cli
cmp
xchg
outsb
imull
dec
test
mov
add
adc
ss
push
push
cmp
add
xchg
add
fs
xor
pop
adc
sbb
inc
cwtl
dec
and
pop
add
stc
push
and
adc
cld
adc
dec
add
push
insb
js
jg
arpl
and
push
push
mov
xchg
fcmovnb
or
lea
and
or
add
cmp
inc
pusha
dec
sbbb
pop
or
bound
not
and
adc
dec
or
dec
stos
dec
pushf
movsl
sub
pusha
ljmp
mov
jp
sbb
and
or
jmp
icebp
outsl
mov
subl
and
adcl
sti
outsb
shl
fsubs
jmp
testl
rolb
loop
cmp
int3
scas
xor
scas
add
andb
add
add
push
adc
leave
push
mov
cmpsl
ret
xchg
in
pop
dec
mov
icebp
sub
enter
gs
outsb
loopne
jl
mov
enter
ret
fiadds
out
shl
push
mov
loopne
push
dec
popf
and
loop
add
ja
jp
imul
arpl
pop
ret
mov
shl
push
xchg
sbb
adc
fs
mov
pop
imul
mov
int
and
push
sti
or
outsb
pop
mov
popa
lock
icebp
inc
jle
cmp
sets
sbb
cltd
rcrb
das
xchg
shl
arpl
lock
aaa
ljmp
jg
xchg
out
mov
ss
jmp
add
pushf
jp
add
dec
leave
es
xchg
dec
and
adc
pop
dec
in
stc
inc
xchg
xor
add
or
and
mov
mov
sub
mov
mov
and
xchg
mov
ret
push
mov
sbb
jne
rcrb
loopne
int3
fwait
sbb
push
and
pop
or
push
test
jg
push
negl
lret
add
cmp
mov
decl
pop
cltd
push
inc
incl
xor
cs
sub
fldt
push
or
out
into
sbb
addl
mov
mov
jg
mov
repnz
jne
jno
jne
stc
sub
inc
adc
add
stos
push
ret
or
mov
and
pop
es
fldt
ds
dec
out
out
inc
add
xchg
fimull
sbb
xchg
mov
ljmp
cmp
add
gs
imull
sbb
sbb
lock
jecxz
cmp
sbb
mov
mov
mov
mov
xor
les
aam
inc
pop
mov
add
fs
ljmp
xchg
cmp
mov
popa
test
or
xor
mov
cmpsb
ret
add
pop
call
pop
dec
sahf
push
push
mov
lcall
xchg
std
outsl
cli
jg
cwtl
mov
xchg
or
mov
scas
sbb
hlt
insb
orl
push
clc
inc
int
aas
nop
sar
xchg
push
adc
js
imull
adc
add
add
insl
add
jg
clc
fwait
fs
xchg
mov
fistl
nop
pushf
push
jge
mov
ja
add
pop
ds
cwtl
and
jno
pop
call
cli
test
xlat
clc
dec
fwait
lock
xor
or
dec
jne
data16
push
in
jo
cmp
xchg
fstl
mov
insl
sub
xchg
mov
add
sti
nop
adc
push
mov
subb
pushf
aam
xchg
clc
dec
mov
les
clc
mov
sub
ret
aas
xchg
push
cmp
push
add
call
dec
out
hlt
stos
mov
imul
loope
in
sbb
inc
fiaddl
pop
dec
lods
jecxz
in
pop
aam
push
sbb
in
jecxz
adc
in
in
sub
rcrb
test
cmpsb
dec
testb
jbe
dec
lods
pop
out
and
sub
cmp
incl
pushf
adc
addr16
aam
repz
or
sbb
and
gs
inc
fwait
jg,pt
sti
mov
sub
mov
sub
hlt
lcall
icebp
cmp
xchg
adcl
js
sub
mov
enter
adc
fsubrp
test
fcmove
subb
dec
ficoml
mov
mov
and
popf
fwait
adc
daa
hlt
mov
mov
fchs
call
jo
jl
fisttpl
pusha
and
cld
enter
cmpsl
mull
sbb
lds
es
bound
nop
outsl
bound
xchg
stc
pushl
nop
mov
push
jg
mov
and
or
jge
dec
mov
out
adc
mov
mov
shll
cmp
sbb
dec
insb
push
xchg
cmp
mov
or
or
add
call
pop
sbb
jb
push
jno
xor
xor
cwtl
outsl
lcall
dec
daa
adc
inc
add
inc
jg
popl
mov
xchg
pusha
mov
inc
stos
and
stos
imul
sub
jnp
xlat
mov
sarb
xchg
lret
inc
test
and
pop
pushf
fdiv
decl
adc
test
addb
pop
andl
das
push
mov
push
xchg
out
in
test
xor
mov
xor
pop
clc
mov
pop
mov
cld
xor
shll
lock
add
jl
add
inc
fmuls
jecxz
add
xchg
imul
xor
outsb
cmpsl
mov
mov
daa
cmp
dec
popa
rcr
dec
movsb
mov
inc
sti
mov
mov
sub
mov
popa
add
mov
xor
xlat
imul
and
jmp
inc
je
lds
test
jecxz
ret
mov
popf
jbe
fildl
outsl
fsubr
inc
fs
add
inc
and
movsb
es
mov
incl
mov
popa
daa
in
mov
outsb
leave
rolb
imul
inc
adc
shll
iret
sti
addr16
adc
mov
xor
cmpsb
ficompl
cmc
jnp
scas
das
push
fs
add
outsl
dec
push
push
push
cmp
mov
mov
popa
popa
loopne
cmpsl
dec
and
or
pop
test
aaa
shlb
lds
lahf
add
add
or
inc
and
add
int3
or
arpl
inc
lret
adc
decb
rolb
pop
test
xor
sub
and
idiv
bound
outsb
jne
mov
hlt
nop
fs
and
mov
add
pop
add
cmp
aam
pop
mov
cmpsb
outsl
int3
ljmp
inc
and
fisttps
jecxz
mov
insb
hlt
xchg
mov
dec
add
cmpsb
jmp
jge
xchg
push
fwait
push
fimull
inc
cmpsl
insb
push
jne
dec
cli
cs
add
or
cmp
sarb
add
fisubl
adc
dec
loopne
pusha
stc
movd
lods
mul
das
xor
mov
addl
jne
or
loope
dec
jbe
shlb
and
push
ror
fisttps
mov
inc
lret
cli
arpl
or
jecxz
cwtl
sub
ljmp
aas
push
pusha
ljmp
jo
add
inc
or
mov
movsl
jl
push
dec
and
fdivrs
stos
lock
lret
movsb
test
add
sub
dec
jnp
or
ret
xchg
add
add
pop
jg
adc
cli
xchg
cmp
outsb
pop
mov
rorb
add
sti
inc
sbb
mov
mov
clc
insl
mov
xchg
add
cmp
add
ficomps
xor
lcall
xor
jmp
inc
dec
loop
cld
out
cli
add
jo
mov
add
cmp
fld
bound
outsb
test
mov
pop
and
mov
nop
xchg
test
les
push
push
inc
mov
shl
ss
sbb
add
mov
loop
cmp
pop
mov
inc
pop
cwtl
adc
mov
test
and
inc
enter
push
imul
rcl
ss
mov
xor
inc
sarb
cmp
add
icebp
das
ror
adc
add
call
hlt
cmovl
fsts
test
inc
fwait
push
push
enter
cmp
es
add
aam
loop
mov
rorb
addb
into
mov
dec
lock
and
pop
dec
imul
imul
dec
push
lret
and
add
mov
ds
mov
loop
mov
pop
push
jle
pop
notl
mov
bnd
test
jbe
push
push
add
dec
add
outsl
and
xchg
inc
pushf
cmp
mov
add
push
jmp
add
mov
cli
cwtl
fdivs
call
popa
sarl
or
hlt
jnp
std
aam
movsl
lods
add
stc
int
lods
imul
ljmp
pop
jb
dec
ficomps
std
push
loop
cmp
rolb
sub
add
add
mov
mov
ds
cmpsb
rorb
pop
push
cwtl
mov
sbb
adc
add
and
adc
rclb
pop
cli
add
pop
lock
cmpsb
jne
hlt
push
lods
cld
add
and
pusha
mov
inc
push
xchg
loope
je
mov
je
jle
shlb
add
mov
repz
mov
jg
and
in
mov
ss
decl
ss
addl
test
ja
sbb
ss
or
aam
cmp
in
outsb
mov
jae
mov
sub
out
orb
and
dec
aaa
xchg
and
inc
or
and
fdivrs
ljmp
cwtl
imul
jle
cwtl
daa
js
bound
sbbb
or
mov
pop
cli
mov
jno
mov
cmp
testl
enter
je
int
lcall
ret
cmpsb
inc
outsl
sbb
add
lock
pop
scas
cli
dec
jne
mov
mov
cmp
cmp
xchg
mov
add
xor
out
pop
icebp
mov
dec
mov
jecxz
cmpsb
cld
push
cld
loopne
push
mov
fisttpll
mov
pop
ds
jo
and
inc
pop
and
mov
mov
jns
ljmp
jo
sbb
sarl
aaa
push
pop
sbb
or
mov
fistpll
loop
int3
insl
fmul
mov
repz
aaa
in
cli
push
push
adc
add
lods
and
mov
mov
push
test
aad
push
xor
test
sub
mov
das
stos
cli
mov
int
fidivs
inc
aam
aam
sahf
fildll
repz
cmp
xorb
adc
cli
aad
fimull
in
add
push
jge
cmc
cli
xchg
and
in
jae
mov
add
sbb
or
mov
clc
push
or
push
or
scas
ljmp
loopne
call
xchg
pop
jno
push
sar
push
pusha
hlt
push
push
sahf
popf
push
mov
cmpsl
cltd
mov
pop
inc
xor
insb
mov
mov
and
inc
cli
push
lea
popf
je
push
sbb
jl
inc
loopne
mov
mov
ret
sub
dec
and
js
ficomps
xor
negl
adc
mov
in
in
add
xor
pop
mov
jns
inc
push
push
cmc
mov
or
mov
jo
jecxz
mov
iret
push
in
movl
adc
lock
popa
xor
push
je
mov
fisttps
adc
out
jge
fdivl
mov
and
adc
pushf
cmpsl
sub
hlt
movsb
pop
lock
adc
inc
repz
push
test
out
push
dec
cwtl
and
xor
insl
fcmove
adc
stos
call
inc
shrl
jo
clc
rolb
mov
cmp
test
adc
mov
aaa
inc
out
mov
mov
imul
mov
dec
or
adc
subl
and
xchg
test
add
jp
push
xchg
cmpb
out
push
mov
out
cmpsl
ficompl
xchg
push
in
sbb
jmp
pop
push
pop
xor
insb
in
mov
fcom
mov
mov
and
xchg
repnz
sbb
pop
jecxz
mov
or
cmpsb
mov
sub
sti
test
and
add
mov
push
pop
adc
nop
push
std
sarl
and
push
cmp
out
call
faddl
push
jp
stos
call
or
adc
rcr
add
sub
and
lcall
jns
enter
push
movsb
pusha
imul
dec
mov
jbe
rclb
movsb
aas
ljmp
dec
test
cld
mov
push
jmp
jecxz
jne
xor
divb
cwtl
lock
je
and
jbe
dec
sbb
mov
push
rolb
ficoml
xlat
push
mov
sub
or
jmp
in
stc
pop
cmp
xchg
cmpsb
cmp
in
push
add
xor
jo
in
cli
push
jno
pushf
test
cwtl
cmpsb
mov
or
xor
push
scas
sbb
push
clc
das
jle
fidivrs
push
loope
pop
adc
sub
sbb
in
cmp
loopne
call
add
pop
pop
insl
adc
sub
out
xor
js
ljmp
push
fdivrl
pop
xor
push
lds
sarb
dec
shlb
sbb
fwait
test
insb
xor
xchg
pop
ss
add
outsb
leave
mov
imul
jns
pop
inc
ret
enter
out
lcall
add
out
xor
xchg
lds
ret
adc
clc
orl
and
clc
adc
mov
inc
out
icebp
pushl
nop
ficoml
mov
adc
cwtl
cs
cmp
lock
stos
mov
jno
cli
jb
es
sbb
sahf
cld
lret
mov
mov
lods
add
loopne
adc
jns
movsb
cmpsl
sub
fisubrl
stos
push
sub
push
mov
adc
jno
and
mov
in
mov
fcompl
das
xchg
push
add
mov
or
cmp
fiaddl
or
sbb
jecxz
aas
sbb
mov
mov
pop
jo
out
aas
pop
inc
jg
pop
mov
inc
mov
fnstsw
clc
outsl
data16
inc
hlt
push
mov
addr16
lcall
out
movsb
les
xor
dec
mov
add
inc
or
fldt
nop
ror
ds
stc
cmp
mov
incl
sbb
ficompl
sbbl
loop
mov
mov
adc
adc
rcl
adc
test
push
popa
andb
int3
mov
mov
scas
scas
andb
movsb
pop
call
dec
push
gs
and
sti
iret
lcall
dec
cmp
xchg
jns,pt
das
ret
clc
push
xor
push
sti
inc
inc
mov
mov
fbstp
mov
rcl
scas
push
loopne
dec
sub
paddsw
add
movsb
jge
inc
rcr
ss
mov
push
addl
mov
jmp
adc
movsb
xchg
enter
mov
add
rolb
mov
or
das
ret
fs
lret
pop
sbb
mov
jae
rcl
jg
in
js
push
lods
sbb
add
inc
cld
lock
clc
mov
sub
mov
push
notl
pushf
ja
xchg
cmpb
cwtl
and
push
sub
mov
outsb
decl
gs
test
dec
call
mov
push
dec
inc
add
xorb
decl
cmp
in
outsb
push
dec
pop
out
jb
js
add
ljmp
insl
cmp
inc
cmp
outsb
je
movsl
pop
jmp
jnp
adc
add
adc
inc
xlat
sahf
jl
scas
rolb
pop
cmp
ss
test
dec
scas
push
inc
jl
xchg
mov
call
xor
dec
inc
adc
les
fidivrs
mov
loope
fwait
mov
push
inc
int
out
push
mov
mov
add
sbb
cmpsb
sbb
or
scas
mov
arpl
sub
mov
sbb
mov
sbb
push
movsl
fcomip
repnz
and
call
sbb
cmp
and
js
fsubrp
fildll
mov
pop
mov
cmp
clc
dec
loop
sar
mov
adc
das
or
insl
adcl
pop
lock
loope
push
enter
aas
jns
test
sbb
add
cmp
aam
add
aam
sub
pop
jmp
xchg
lcall
aaa
add
mov
arpl
lods
testl
add
out
mov
cmp
sub
idiv
sbb
lcall
dec
and
xchg
hlt
pop
adc
into
fcomip
test
ficomps
push
jo
pop
add
xchg
xchg
ljmp
push
subl
call
inc
pushf
push
xor
jbe
pop
mov
adc
addb
add
mov
fimuls
push
mov
adc
mov
mov
call
mov
dec
movsl
and
adc
sub
mov
int3
jne
int3
dec
in
or
shrl
imul
push
add
xchg
mov
add
sbb
loope
test
imul
stc
divl
rcrb
push
cld
out
add
add
es
ds
addl
sub
mov
cmp
adc
hlt
scas
jne
loop
xor
mov
rolb
std
and
sub
jle
test
dec
or
and
mov
or
ret
fiaddl
outsl
add
repnz
es
pop
pop
mov
sti
mov
dec
sub
push
dec
lock
jge
inc
in
lods
mov
test
adc
cmc
cmp
rcl
mov
xor
adc
jmp
add
test
subl
and
mov
loope
push
movsl
mov
inc
clc
iret
add
pop
mov
add
daa
mov
ret
daa
fwait
rol
sub
outsb
pop
jg
pop
sbb
arpl
inc
inc
rol
xchg
mov
sbb
jnp
push
or
addl
sbb
insb
addr16
push
pop
icebp
jno
dec
mov
mov
mov
inc
loopne
xor
or
xchg
js
push
shl
lock
push
add
jmp
fmuls
into
sub
lods
xor
test
testb
push
mov
aam
rolb
sub
cmp
dec
mov
xchg
stc
in
and
adc
sbb
ret
imul
rcr
clc
xor
or
fsubs
loope
lea
jecxz
xchg
leave
add
push
leave
in
and
dec
mov
or
lds
call
inc
sbb
jb
inc
and
iret
sub
mov
mov
sub
in
jge
fbld
push
inc
pop
inc
dec
aas
mov
or
out
jns
xorb
in
sub
dec
or
call
add
mov
mov
lret
pushf
and
xchg
shlb
adc
and
repz
xchg
and
jge
inc
xchg
push
js
cmp
imul
cmp
fmull
sbb
repnz
shll
and
mov
mov
adc
push
mov
jne
shl
sbb
inc
movntps
sbb
or
sub
sbb
ds
cs
add
fcoms
in
mov
lea
jb
or
mov
fs
push
lret
push
sar
or
ret
mov
cmpsl
fnstcw
lock
push
lahf
xchg
dec
mov
mov
jecxz
mov
add
adc
aam
jne
or
and
sbb
xor
push
and
out
adc
cmp
aam
xorl
icebp
and
adc
xorb
push
imul
cmp
jmp
sub
adc
pop
pop
insb
stos
aad
inc
inc
mov
mov
ds
dec
cld
and
lea
into
cs
inc
adc
xbegin
push
lret
icebp
jne
push
xchg
and
sti
or
inc
mov
cli
popa
inc
adc
sbb
sub
into
cmpsb
and
xor
sub
push
js
loopne
nop
mov
fldl
les
test
push
add
insb
loop
or
dec
gs
xchg
aad
sti
pusha
dec
xor
cltd
add
mov
popf
pusha
pop
cmp
jbe
add
sbb
cltd
lock
add
and
add
and
sub
fistpll
jle
add
push
jl
dec
push
popf
stos
add
test
add
mov
xchg
mov
jg
and
ret
arpl
setne
stc
stos
movsb
loop
lahf
mov
nop
dec
iret
test
cmp
or
test
sbb
push
mov
mov
mov
lods
jae
push
and
mov
inc
lock
data16
scas
push
fildll
xor
push
xor
or
mov
sbbl
aam
add
cwtl
dec
xor
add
sar
mov
cmp
mov
subl
nop
ja
flds
das
mov
call
std
sub
jge
repnz
push
mov
dec
lret
mov
and
scas
add
cli
lock
in
in
rcrb
in
hlt
inc
jmp
sbb
lahf
or
filds
mov
fcmovnb
jmp
add
add
xor
mov
jmp
pop
add
cmp
xorb
add
pop
add
les
loopne
push
adc
jg
mov
add
je
add
in
push
subb
scas
mov
mov
fiaddl
loopne
lock
shr
sub
popa
mov
or
dec
pop
jne
scas
or
arpl
or
sbb
decl
push
mov
xor
out
mov
adc
jmp
push
out
movsl
jbe
adcl
ljmp
or
sub
int3
loop
loope
bound
loop
mov
push
lret
movsb
and
loopne
xchg
nop
mov
rclb
pop
int
mov
jg
pop
jmp
xchg
sub
sahf
sti
sub
jecxz
jecxz
and
add
ja
test
xchg
je
out
add
xor
pop
mov
test
add
loopne
aaa
cld
adc
cmp
ss
or
cli
xor
jg
jle
pop
push
push
ret
mov
insb
out
or
dec
add
les
pop
mov
pop
jecxz
stos
xor
out
aam
fisttpll
sub
mov
push
imul
mov
or
sbb
in
in
aaa
std
inc
jb
adc
mov
mov
movsb
or
and
cmp
mov
or
push
jo
jns
lds
jo
xor
inc
stos
scas
mov
xor
mov
inc
jg
test
call
fcompl
push
or
stos
rclb
pop
in
add
das
adc
lods
xchg
test
std
in
push
jb
sub
test
rorb
int
sbb
mov
jg
mov
add
jmp
fistpll
dec
les
inc
nop
fists
pop
push
or
insl
js
mov
sbb
mov
mov
cmp
jnp
mov
and
lcall
jbe,pn
xchg
insl
mov
scas
push
out
jo
scas
sub
adc
decl
xor
fdivl
shlb
repnz
jecxz
mov
pushl
add
mov
add
push
add
push
jmp
out
dec
add
ljmp
jge
aad
inc
cld
scas
xor
lock
in
call
add
hlt
jg
mov
fsubrl
mov
lcall
rcrl
pop
lret
lcall
push
adc
fnstcw
and
xchg
mov
cmp
data16
or
sbb
lods
adcl
mov
stos
ret
and
iret
push
add
ret
sub
rcrb
mov
inc
xorb
shl
mov
dec
push
push
loop
adc
mov
sub
clc
arpl
dec
je
sub
ss
sti
xor
jmp
std
jg
or
xor
lret
lods
xchg
sub
mov
push
dec
fnstcw
and
test
mov
movsbl
dec
add
add
jmp
adc
inc
cmpsb
mov
scas
push
fscale
push
sbb
incl
add
cmp
ret
mov
push
lahf
cmp
mov
sub
push
sub
js
aas
inc
data16
and
rorl
push
cwtl
pop
mov
xchg
sbb
rcrb
mov
sub
int
insl
xchg
push
popa
les
xor
cmpsb
push
lods
xchg
push
pushf
lahf
pop
add
mov
inc
and
pop
add
adc
xchg
push
shll
jne
push
adc
xor
clc
cs
add
bound
cmp
xchg
mov
pushf
jo
hlt
xchg
pushf
xor
je
jle
sbb
repnz
or
mov
xor
and
aaa
addb
scas
pop
arpl
xchg
int3
xor
adc
shlb
std
inc
adc
aad
xchg
xchg
xchg
sub
push
lret
inc
repz
jae
or
and
sbb
inc
shll
push
dec
jp
xor
ja
lds
sbb
popf
adc
mov
xor
inc
imul
or
fidivs
mov
add
outsl
fwait
or
add
xchg
push
add
inc
or
add
jbe
jmp
scas
out
cmp
test
les
jno
xchg
sub
subb
mov
push
xchg
adc
xor
int3
cmp
jecxz
mov
xor
sub
clc
inc
mov
xor
sbb
cmp
dec
movsb
add
loopne
xchg
sbb
in
or
mov
pop
into
shlb
xor
xchg
imul
sub
add
int3
scas
sbb
arpl
push
sub
lds
orb
into
into
jbe
push
cmpsl
mov
mov
push
pop
cli
rcrl
xor
or
push
pop
jo
mov
test
int3
icebp
je
imulb
rorb
adc
loop
test
push
xchg
jge
cmp
or
sbb
rorb
cltd
cmc
cmp
leave
pop
inc
inc
sub
jl
jae
mov
pop
cld
xor
add
call
repnz
adc
dec
rcl
mov
sbb
mov
insb
adc
xchg
push
push
xchg
fisttpll
gs
cmpsb
add
mov
jle
jle
inc
pop
mov
and
jmp
push
in
fdivs
lcall
loopne
aaa
mov
fwait
push
ret
or
aam
gs
lahf
cmp
xor
stos
dec
ljmp
sbb
and
stc
add
adc
cmp
mov
jo
lret
dec
cli
out
aas
idivb
add
mov
cmp
enter
pop
add
js
jecxz
ret
mov
mov
dec
repz
jno
pop
fwait
or
fisubl
jae
aam
push
inc
mov
inc
or
add
jle
add
sahf
or
jbe
dec
loope
mov
xchg
adc
add
stos
add
mov
adc
mov
sar
inc
sbb
pop
or
dec
mov
mov
sub
insb
stos
mov
xchg
and
clc
dec
mov
add
rcrb
cmp
out
adc
jae
not
das
sbb
stos
cwtl
pop
fstpl
push
outsb
imulb
xor
add
pop
xchg
mov
mov
add
rcll
rorb
sub
cmp
rol
ja
mov
sub
xchg
cmc
andb
or
xchg
pop
jg
xor
shrb
out
fbstp
fcompl
cwtl
leave
jne
ss
cmpsb
nop
pop
adcl
js
jbe
scas
mov
negb
or
aad
jo
pop
sbb
add
mov
adc
repz
adc
adcb
lea
or
popl
mov
fdivp
clc
pop
pushf
adc
dec
fdivr
in
mov
scas
pop
js
pop
lret
add
sbb
ja
jg
sbb
test
and
push
mov
lea
jg
push
outsl
push
lcall
jge
xchg
dec
in
fidivrl
stos
jle
mov
ficoml
incl
inc
or
sbb
test
out
iret
jg
out
insb
js
lock
push
push
clc
push
mov
ss
sub
inc
js
xor
mov
cmp
mov
hlt
add
mov
addr16
push
adc
pop
loopne
push
push
imul
insl
mov
mov
inc
ljmp
cmp
or
leave
sahf
sbb
sbb
outsb
xchg
jo
mov
aas
add
push
pop
fisubs
out
fisttpl
ret
pop
adc
std
cmp
sbb
sbb
ss
xchg
pop
ss
into
sub
sahf
mov
pop
out
rolb
push
xorl
std
out
mov
mov
mov
cmp
adc
mov
inc
mov
inc
in
stos
aad
push
pop
aaa
sti
add
inc
lds
shl
or
mov
or
movb
int3
mov
aas
inc
popf
pop
jne
sub
mov
ret
push
aaa
xor
loop
repz
jecxz
into
jg
leave
fwait
cmp
adc
or
cmp
add
and
push
clc
ret
cld
mov
xor
pop
mov
lcall
aam
out
cmpsb
shrb
inc
lock
fbld
and
loopne
adc
xor
je
mov
addb
mov
and
stos
arpl
repnz
orb
fists
add
xchg
loopne
cmp
add
inc
add
test
jo
inc
lods
and
mov
movsl
mov
shll
loopne
and
ds
push
add
mov
test
pop
repnz
mov
cmp
loope
and
or
fdivl
rclb
repz
inc
push
loopne
add
push
fidivs
aas
xchg
dec
loopne
dec
xchg
mov
cmp
cld
pop
js
jb
xlat
cmpb
and
dec
fwait
pop
sbb
adc
inc
fbstp
call
add
adc
push
pusha
xor
xchg
inc
lret
lahf
mov
ret
nop
data16
frstor
hlt
sub
sbb
push
daa
adc
idivl
addb
or
and
lcall
insb
mov
mov
insb
dec
mov
ja
rclb
loope,pt
in
lods
sbb
loope
icebp
mov
sbb
push
or
add
fstpt
cwtl
cmp
shrb
pop
add
fsubrl
js
js
aam
sub
arpl
mov
dec
and
stos
pop
out
sbb
insl
mov
inc
mov
inc
adc
mov
filds
lods
sub
xchg
scas
inc
and
imul
rol
lods
rcrb
and
inc
lea
xchg
push
push
std
clc
push
shufps
fsubrl
xor
mov
dec
adc
xchg
sub
inc
clc
pop
arpl
mov
xchg
fidivrl
hlt
mov
ffreep
xchg
jmp
neg
not
sub
sub
es
adc
pop
stos
repnz
test
lret
shl
jge
push
and
popa
test
mov
pop
pushf
jmp
mov
ss
add
lock
mov
push
and
and
jge
call
fcomip
xchg
jns
jne
sti
loope
fst
sbbl
outsb
and
pop
mov
pop
shlb
out
jmp
adc
push
int3
pop
push
mov
or
mov
int
rclb
push
push
fldz
test
outsl
push
mov
fdivs
mov
push
mov
jne
push
mov
adc
test
call
add
inc
loope
arpl
push
loope
cs
gs
cmpsb
mov
cwtl
push
cld
mov
fsubs
sub
sbb
add
lcall
in
cmp
jp
mov
sti
ficomps
add
jmp
adc
popf
iret
lret
out
nop
outsl
add
repnz
jg
shlb
add
push
popf
pusha
scas
das
push
jl
sbb
pop
inc
test
outsl
xchg
add
adc
repz
or
or
jno
dec
fsubrs
and
inc
fildl
xchg
and
pop
std
xchg
imulb
aam
or
adcb
cmpl
js
push
rcrb
or
xchg
xor
mov
mov
insl
jae
pop
push
cmp
cli
lret
ja
xor
jle
in
cli
jg
inc
lret
xor
adc
push
sub
lret
cmp
mov
sbb
shll
add
int3
pop
jbe
mov
push
pop
mov
add
dec
xchg
mov
sbb
dec
sbb
push
fildl
sarb
pusha
jmp
xor
clc
scas
repnz
mov
mov
hlt
sbb
jno
pop
cs
mov
fidivrl
ret
pop
and
add
mov
jb
mov
add
lock
cmp
pushf
cmp
or
scas
and
fistpl
adc
push
and
lret
call
adc
jmp
jo
ds
sub
adc
js
sub
pop
sbbl
ja
aad
mov
notb
sti
mov
imul
jbe
es
mov
pop
jmp
inc
mov
shr
sub
adc
fcomi
jb
fadds
mov
in
pop
loope
xor
jle
adc
fcomip
dec
inc
cld
in
pop
jmp
movsb
stos
ror
mov
add
iret
mov
or
pop
loopne
js
cmpsl
sbbl
cmpsb
inc
and
jl
push
pusha
cli
sbb
pop
sbb
sbb
clc
adcb
call
pushf
test
inc
std
je
mov
ret
mov
dec
cmp
mulb
out
orl
pop
shl
test
mov
add
outsb
addr16
mov
cld
pushf
out
enter
ds
cld
rolb
pop
pusha
xchg
lcall
push
or
gs
andb
mov
scas
sub
outsl
dec
or
lret
rclb
aaa
mov
loopne
push
sub
mov
inc
mov
mov
and
xor
xchg
aaa
insb
sbb
mov
das
push
icebp
mov
je
mov
aas
xchg
push
js
jo
lcall
decl
dec
fcoml
outsl
lock
xchg
jmp
je
jl
ror
loope
bound
cmp
push
mov
loope
loop
inc
out
sub
hlt
lret
out
inc
jp
jb
xchg
lock
jo
push
sbb
decl
xchg
and
fnstcw
mov
pop
jno
loopne
jecxz
mov
out
jne
in
mov
xor
sbb
jmp
jle
lret
pop
and
mov
push
push
add
cmp
xor
and
addr16
jno
mov
adc
incb
cmp
cmpsb
out
jecxz
in
xchg
ret
xchg
imul
mov
add
pop
xor
sub
sbb
mov
or
mov
sti
nop
outsl
jle
das
hlt
dec
and
push
sbb
add
cmp
xchg
test
mov
test
or
inc
ljmpw
xor
fists
filds
lea
jnp
dec
xor
sbb
cli
add
enter
mov
push
fcompl
mov
insl
neg
adc
adcb
mov
push
mov
adc
pop
push
dec
pushf
cmp
or
scas
push
std
and
leave
adc
dec
add
or
test
subb
rcl
daa
jle
dec
testb
add
fimull
adc
mov
fmuls
nop
add
jb
xor
cs
jmp
sbb
nop
test
adc
lcall
rol
cwtl
mov
adc
sub
xor
jle
xorb
outsl
mov
xor
test
add
inc
mov
jne
test
lods
insl
scas
xor
jp,pn
pop
or
incl
sub
push
std
push
rol
out
and
div
xchg
pop
lock
mov
push
pusha
shlb
sub
int
mov
push
adc
ljmp
jecxz
shl
test
jb
sbb
das
push
mov
inc
call
es
push
bound
loope
mov
les
clc
jns
cmpsb
movsb
loopne
mov
push
mov
idivb
stc
push
mov
rorb
add
jns
sub
add
std
inc
add
and
scas
sub
sub
out
cld
stos
call
add
add
movsb
clc
ljmp
lds
push
int
scas
inc
add
mov
mov
and
push
sbb
sub
sbb
fcoms
mov
rorl
add
push
xchg
and
inc
inc
mov
mov
mov
mov
rdtsc
out
inc
or
mov
dec
push
sub
push
fadds
leave
add
adc
lods
cwtl
adc
adc
scas
int
dec
cmc
add
dec
pushf
lret
pop
xchg
mov
je
sbb
push
mov
js
clc
adc
xor
outsl
nop
jp
decl
ljmp
xor
popa
xor
int3
add
mov
inc
add
bound
pop
or
cli
inc
call
jle
jno
or
sub
clc
adc
ljmp
insl
mov
jp
mov
add
cmc
inc
ja
les
test
jbe
pushf
jbe
pop
xchg
icebp
insl
shr
adcl
push
into
dec
sub
inc
mov
dec
loopne
lock
test
xchg
push
sbb
cmp
cmp
nop
push
aad
add
andb
lahf
adc
xchg
iret
mov
sub
lea
push
fwait
push
jl
lods
outsl
clc
into
outsl
inc
bound
xchg
adc
inc
mov
in
xchg
sub
xorl
sub
ljmp
les
push
nop
add
adc
cld
es
dec
adc
push
inc
pop
sub
imul
jg
ss
stc
data16
dec
sbb
ret
inc
int3
into
sub
fistps
fisubrs
and
or
call
sbb
xor
inc
dec
mov
das
xchg
push
xor
testb
inc
and
fidivl
es
fnsetpm(287
cs
push
aad
dec
insb
ror
test
and
mov
addb
dec
adc
rcrb
pop
je
sar
int3
mov
xor
lret
dec
jmp
adc
or
ja
addl
and
movb
pop
mov
sub
sub
sbb
or
xor
add
push
xor
pop
clc
add
dec
shlb
add
sub
or
rcr
or
lea
fldl
ret
lock
or
xlat
push
shrb
and
scas
or
out
gs
pusha
test
mov
inc
adc
dec
or
lock
jo
jle
mov
popa
out
and
sbb
add
push
sub
add
mov
lcall
add
adc
orl
and
lret
pop
jp
aaa
mov
mov
push
pop
jge
out
inc
inc
push
in
dec
daa
jbe
cmp
fdivr
out
out
adc
sbb
in
xorl
std
jg
scas
inc
mov
imul
cmpb
aaa
popf
sahf
mov
jge
xor
or
pop
inc
aas
xchg
jno
adc
insl
adc
mov
push
or
or
dec
ljmp
push
mov
and
pop
sbb
fwait
push
mov
out
or
xor
cmp
xchg
and
ds
aaa
inc
or
add
or
inc
out
dec
xchg
jbe
pop
push
push
jp
mov
xlat
ror
dec
mov
pushf
movsl
mov
jp
loope
cmp
mov
pop
jo,pn
fildll
stc
inc
lret
pop
pop
adcl
cld
popf
mov
fists
in
xor
cmp
shrb
mov
popa
lcall
ret
mov
sub
in
mov
pop
and
rolb
ds
mov
in
imul
and
aas
mov
popl
jnp
and
push
inc
daa
inc
jbe
sbbb
add
loope
pop
lret
add
idiv
aas
incb
or
mov
xor
loop
insb
jbe
stos
out
inc
addr16
mov
cmp
mov
push
push
outsb
push
sub
pop
or
xchg
jg
addb
dec
add
hlt
mov
test
inc
in
dec
bnd
sbb
test
add
pop
jmp
in
sahf
inc
ret
test
aaa
add
xor
repnz
mov
pop
sbb
pop
add
inc
les
add
sbb
hlt
jbe
sub
xchg
imul
mov
jae
fs
lea
dec
adc
fmul
dec
or
inc
pop
das
add
imul
les
push
cmp
or
bound
inc
inc
cmpsl
xchg
aam
js
decb
cmc
adc
and
clc
jne
fiadds
jae
jns
cmp
push
nop
or
mov
add
pop
pop
mov
mov
xchg
mov
and
notl
mov
outsb
fs
pop
mov
insl
pop
divb
cs
and
stc
nop
push
push
movsb
xorl
or
and
sbbb
les
stos
adc
ds
scas
pop
mov
or
sub
std
xlat
xor
push
js
test
ficomps
insb
or
jnp
or
sbb
adc
mov
dec
idivl
push
push
sbb
cmp
adc
dec
add
stos
in
ja
inc
shrb
dec
cld
add
js
jmp
push
dec
pusha
inc
xor
dec
mov
mov
std
sbb
aam
ret
jle
push
inc
aaa
and
xor
add
dec
fiadds
test
lock
mov
shrb
loop
fsubr
push
dec
adc
sbb
mov
xchg
sbb
outsl
xor
cmp
mov
mov
push
aas
adc
sbb
add
enter
or
fnstcw
mov
outsl
or
xor
mov
cmp
fcoml
and
pop
lret
push
pop
cld
adc
ljmp
aam
add
xlat
add
outsb
out
mov
adc
bound
sbb
jp
push
andb
daa
and
jle
out
in
stos
mov
shl
push
add
in
scas
or
cmp
sbb
push
fs
or
dec
imul
das
inc
insl
mov
aad
push
pop
jbe
mov
repz
fcomps
ja
dec
cli
insb
mov
inc
mov
pop
ss
sub
es
pop
add
inc
cmpsl
out
push
inc
sti
test
mov
pop
sbb
fisttpl
push
in
xor
mov
loop
xor
int3
inc
xchg
pop
add
push
sub
push
or
loope
push
pop
mov
andb
repnz
pop
mov
int
test
incl
mov
pusha
rorb
fistpl
pop
mov
cli
or
and
mov
add
pusha
call
xchg
pop
rcrl
stc
rcll
mov
lods
repz
sbb
inc
xchg
outsl
mov
loope
jmp
aas
repnz
repnz
or
jb
mov
rclb
mov
jl
pop
xor
mov
mov
loopne
dec
fs
les
movsb
push
jne
push
cwtl
andb
push
adc
es
push
xor
cli
adc
jecxz
lea
mov
inc
fisttpl
cmp
mov
sub
iret
pushl
jmp
jns
sub
faddp
mov
xchg
inc
ja
pop
lret
dec
xchg
mov
jl
mov
push
call
jge
in
gs
and
mov
sbb
jge
push
jp
or
nop
stos
sbb
xchg
jmp
out
push
ret
and
pop
push
add
rcrl
and
pop
cmp
mov
bound
cmpsb
push
jg
sub
dec
cmp
xor
gs
ret
xor
add
jb
add
add
add
js
sahf
push
add
cli
icebp
mov
pop
pop
pop
lds
fisubrs
sahf
inc
push
and
dec
xor
test
and
testb
inc
mov
xchg
inc
stc
clc
sub
loope
inc
adc
push
subl
je
pop
jmp
or
cli
enter
dec
fcmovb
cmp
jle
idiv
ljmp
lcall
adc
mov
and
int
pop
mov
inc
scas
mov
and
cmc
mov
add
pop
mov
adc
xchg
sbb
xchg
fidivrs
hlt
fstps
cmp
test
insb
sbb
sbb
fs
mov
test
pop
dec
incl
fidivrs
xchg
push
mov
daa
cli
sbb
pop
push
jle
xor
popf
lret
movsl
pusha
nop
cmp
add
jmp
xchg
and
je
xchg
test
shl
dec
fsub
dec
popa
push
in
fsub
negb
dec
shlb
mov
push
cwtl
or
inc
mov
mov
aas
pop
ss
sub
inc
jg
push
rorb
aam
in
ret
std
jo
add
lcall
lcall
mov
push
rcrl
mov
int3
xchg
js
enter
mov
add
ljmp
outsb
pop
lods
add
xor
divb
mov
or
testb
lret
sub
std
fistl
mov
jne
jo
or
inc
bound
lds
insb
mov
rorb
ss
mov
popa
call
xor
or
fdivrs
cli
mov
in
lcall
je
xchg
in
push
cmp
push
imulb
movsl
push
clc
add
ret
mov
xchg
mov
mov
push
push
nop
fbld
jp
loopne
test
xor
enter
add
adc
mov
xor
pop
mov
mov
decl
jo
cmpb
in
inc
xchg
push
or
dec
call
aaa
std
inc
mov
pop
dec
lods
pop
or
mov
lahf
sbb
mov
xchg
in
je
filds
sub
mov
sbb
cli
faddl
iret
arpl
out
and
js
out
pop
jmp
push
loope
ret
inc
mov
sbb
cmpb
pop
imul
mov
lret
mov
ja
js
mov
into
arpl
pop
inc
jp
ljmp
cmc
pushl
rcr
hlt
mov
sub
sub
dec
inc
add
cmp
xchg
movl
push
pusha
sbb
sbb
dec
sub
in
jns
and
call
push
cmc
xchg
stos
subl
ss
fsubrs
dec
pop
insb
out
icebp
lcall
sub
les
xchg
push
mov
mov
incl
shrb
pop
xchg
push
push
movsb
mov
stc
test
or
jge
imul
je
sub
inc
or
orb
scas
insl
sub
mov
xchg
ljmp
scas
data16
xor
dec
sbb
aam
int
shlb
out
sarl
nop
cwtl
jb
push
inc
push
cli
mov
pop
ret
call
pusha
testl
mov
repz
mov
in
add
clc
popa
add
enter
and
sbb
imul
push
xor
in
inc
jecxz
lds
pop
adc
sub
mov
xlat
jno
ret
push
ss
or
push
xor
decl
add
ret
cwtl
push
rcll
xor
pop
js
movsl
xor
inc
mov
add
and
movsl
cmpb
in
pop
mov
into
stc
cmp
inc
cmp
and
mov
mov
or
cmp
adc
fadd
mov
add
jne
fwait
lock
mov
inc
push
mov
jmp
push
fsubrs
mov
add
aas
lret
add
add
add
subl
dec
cmp
jnp
xchg
mov
cmpsb
push
inc
adc
push
and
ljmp
lds
pop
inc
in
xchg
mov
jl
std
xlat
mov
inc
cld
pop
imul
mov
movsb
testb
adc
mov
mov
nop
in
sub
fistpll
nop
pop
cli
rclb
in
fcomps
adc
shl
ret
xchg
mov
es
call
scas
jl
sbb
enter
sbb
or
lods
repz
mov
pusha
test
sub
ds
or
mov
add
push
mov
fdivs
stos
jle
jg
aam
mov
repnz
aaa
mov
test
adc
and
mov
pop
out
sub
loope
data16
scas
repnz
sbb
sbb
dec
sbb
adc
dec
movsl
ret
data16
int3
das
fcmovu
push
shrb
call
add
or
aaa
outsl
jmp
jge
jnp
add
fildl
movsb
or
mov
lds
test
mov
inc
sbb
mov
insb
stos
adc
sub
and
dec
clc
in
dec
and
std
and
fs
inc
sub
aaa
mov
test
cmpsl
inc
xchg
bound
outsb
movl
test
enter
aam
scas
mov
adc
bound
cmpb
mov
inc
xor
push
mov
loope
xor
jae
je
mov
add
sahf
ljmp
cmp
push
shll
mov
dec
sub
sarb
lock
ljmp
and
lcall
add
jle
aad
mov
push
add
or
ret
cmpsb
adc
adc
testl
rcr
shrb
push
fstpl
pop
pop
insl
xchg
or
xor
sub
mov
jb
in
mov
imul
mov
add
es
cmpsb
mov
pusha
dec
push
cld
shl
dec
lret
and
mov
and
jecxz
sub
jg
lret
movsl
dec
aas
pop
rclb
jmp
fwait
dec
shr
cltd
sub
mov
add
adc
xlat
xorl
adc
xchg
mov
jge
or
sar
test
adc
gs
sbb
jmp
sub
shrb
iret
cld
mul
lcall
dec
das
push
xlat
ja
repz
rclb
cmp
jl
mov
mov
and
data16
ds
sub
mov
int3
adc
cmp
jecxz
hlt
mov
stos
cmpsb
jnp
push
leave
push
in
inc
push
outsl
mov
push
ja
test
fsubrl
add
pop
add
ret
pop
push
call
sbb
rcrb
mov
scas
xchg
push
sub
mov
inc
push
pop
add
mov
mov
jae
mov
gs
pop
adc
inc
dec
mov
movsl
jb
and
neg
repnz
test
sub
jo
push
add
add
test
pusha
sbb
sahf
push
add
sub
and
and
fstpt
mov
testl
fdivs
aas
push
push
cmpb
mov
hlt
scas
fiadds
jg
scas
hlt
jne
adc
xlat
filds
fstps
xchg
hlt
fcmovbe
fsubl
call
cmp
sbb
mov
stos
rorb
adc
test
mov
xchg
in
jmp
jmp
out
imul
pop
sub
inc
and
cmp
and
add
jge
fstpt
inc
fdivrl
imul
lcall
inc
adc
aam
icebp
and
mov
ret
pop
ret
lahf
shrb
sahf
fistpll
sbb
and
lds
push
fcomps
mov
out
ja
scas
mov
adc
and
or
mov
inc
cld
into
stos
popa
push
fdivr
clc
and
jo
mov
push
mov
repz
add
test
push
jo
mov
push
lret
decb
outsl
fildll
shlb
pop
int3
sub
cs
dec
push
insb
divl
icebp
sub
fnstenv
xchg
cmp
inc
test
sbb
decl
int
sub
aam
fcmove
imulb
mov
rclb
icebp
das
inc
jb
lods
push
ficoml
add
pop
loop
call
sbb
mov
fsubl
mov
rcrl
pop
or
repnz
xor
int3
dec
idivl
lret
cmp
lods
pop
add
inc
cmpsb
pop
sarl
lock
jg
pop
std
xchg
add
xor
cmp
push
sbb
pop
fisttps
add
cmc
inc
imul
shrl
push
mov
icebp
repnz
add
ja
or
mov
call
mov
jp
add
mov
ss
push
push
or
rolb
sbbb
or
xor
in
lcall
inc
orl
pusha
mov
xchg
daa
sub
add
pop
scas
in
jg
int3
ret
adc
cmp
pop
fiadds
dec
and
and
sub
or
sti
or
scas
cwtl
and
loop
aas
test
outsl
xor
fcomps
shrb
mov
ljmp
sub
xchg
dec
icebp
mov
fisttps
aaa
decb
add
clc
adc
cld
stos
mov
movsb
mov
xor
sti
mov
cli
je
insb
pushf
imul
mov
add
addr16
cmp
out
mov
ror
fimuls
enter
hlt
repz
test
push
divb
pop
icebp
pop
lcall
stc
in
push
and
cmp
cmpsl
push
inc
insl
pop
sub
sarb
call
ljmp
sub
jl
pop
ljmp
or
dec
and
mov
jne
pusha
lods
jae
inc
sub
mov
jge
mov
or
sbb
add
repz
psubb
push
das
xor
or
jp
pop
sbb
inc
mov
jle
xchg
rcll
cmp
mov
push
mov
lahf
sbb
jae
das
popa
or
and
and
push
out
and
fimull
lock
sahf
cmc
dec
add
and
lahf
fcompl
mov
cli
bound
xchg
loop
es
insb
mov
scas
test
mov
xchg
xchg
or
jp
out
push
lahf
mov
jge
aas
stc
adc
jecxz
test
aaa
lea
sub
push
mov
sarb
movsl
inc
ljmp
aam
push
or
mov
in
loopne
mov
icebp
les
sbb
test
sub
setle
mov
jbe
out
call
pop
mov
mov
jo
add
push
pop
jno
arpl
xchg
roll
pop
pop
xor
gs
xchg
dec
sbb
test
jno
cltd
jne
or
neg
cli
push
sub
sub
or
dec
or
mov
fnstenv
inc
pop
push
mov
aam
aam
and
push
std
sar
xor
pop
add
sar
xchg
rorl
sub
add
adc
xchg
dec
mov
xor
pop
sbbb
scas
lock
jmp
or
mov
and
inc
xchg
inc
test
rcl
and
add
and
push
lock
pop
sarb
jg
and
ret
sub
in
inc
arpl
sbb
sbb
dec
insl
mov
jo
fadds
mov
ljmp
jecxz
mov
fsubl
repnz
and
dec
icebp
xchg
lea
push
or
and
in
mov
add
hlt
outsl
call
decb
stos
xchg
dec
pop
pop
mov
movsl
lds
jo
int
dec
add
add
in
cmp
testb
push
out
lret
cwtl
adc
mov
jle
cmp
push
sbb
mov
xor
push
lods
loop
incl
add
and
add
lea
push
ss
fst
ds
cwtl
inc
mov
mulb
test
add
pop
popa
sbb
call
add
mov
mov
outsl
push
mov
add
pop
lea
scas
xchg
in
dec
loopne
jmp
loopne
sub
jl
adc
lods
fsubrs
dec
cli
mov
inc
pop
sbb
enter
mov
mov
add
jle
jecxz
pop
cli
mov
cs
test
shr
rclb
add
out
pop
lods
adc
lock
lea
std
pop
leave
xchg
fucompp
cmp
shlb
lahf
sti
sub
jg
loope
xor
ljmp
out
clc
xor
cmp
xor
jl
stos
pop
xlat
adc
loopne
sub
adc
sbb
and
xchg
leave
sbb
xchg
sub
jle
mov
js
cmp
xor
aad
sub
lods
jge,pt
ds
xor
pop
sbb
cld
or
sbb
cmc
mov
mov
jg
dec
aam
mov
sub
cld
imul
dec
decl
add
add
cmpsb
and
and
mov
mov
mov
lcall
mov
mov
mov
xchg
adc
jmp
cmc
mov
or
add
hlt
test
xor
data16
cmp
clc
incl
xchg
pop
adc
movl
jns
adc
lcall
hlt
mov
aam
shlb
pusha
add
lret
mov
sbb
xchg
pop
or
add
pop
lock
xchg
test
idiv
sub
inc
mov
adc
inc
enter
ds
lcall
bound
sar
adc
xor
arpl
sbb
sbb
rolb
sub
pop
or
shl
imul
mov
js
scas
jmp
inc
jge
repnz
push
mov
fcmovnu
push
add
repnz
cmp
and
cmp
movsb
in
push
pop
in
ljmp
popa
aad
sub
adc
xchg
lods
pop
add
ja
lods
lahf
je
andb
sub
ret
push
jns
fwait
mov
decl
add
inc
std
mov
pushf
push
cltd
ficoms
or
popf
adc
test
sbb
sub
sub
mov
dec
int3
xchg
add
shlb
in
std
aaa
std
jb
push
test
push
stos
lret
outsl
sti
push
sbb
pushf
bound
popa
movb
cmpsb
and
jmp
sti
sbb
mov
in
xchg
inc
mov
lcall
and
popf
cwtl
inc
mov
popf
and
cmp
xchg
nop
int3
clc
and
adc
push
xchg
fistl
xor
adc
xchg
xchg
repnz
xorl
mov
add
jae
fildll
icebp
fwait
mov
dec
faddl
mov
cmpsl
sub
out
sbb
push
out
je
aam
add
sti
test
je
jg
mov
push
xchg
mov
aas
push
cs
sti
cmp
mov
fwait
inc
mov
jle
ret
push
sahf
push
ret
add
call
inc
lret
mulb
pop
dec
cld
jmp
add
inc
and
in
push
sub
stos
jl
mov
sub
fists
pop
ret
lret
xchg
sbb
pop
jo
push
inc
add
jl
sub
orl
mov
mov
pop
add
jne
bnd
cmpsb
add
mov
cs
inc
jle
cli
scas
jo
fs
adc
pushf
pop
push
lods
xorb
or
lcall
push
sbb
dec
sbb
pop
stos
ljmp
shl
pop
xchg
sbb
ds
and
jne
pushf
push
outsl
push
lock
ss
cwtl
add
clc
inc
je
mov
xchg
sbb
cwtl
sbb
jo
ja
inc
adc
jmp
loope
mov
jb
add
test
test
add
sub
sbb
mov
lods
add
je
push
inc
or
mov
scas
push
jp
sbb
loopne
jne
icebp
cwtl
scas
mov
int
xor
icebp
scas
fcoms
pushf
sub
lock
mov
fsubl
pop
repnz
jl
aas
inc
cs
mov
ss
stos
lods
sahf
sbb
adc
cmp
mov
scas
push
sub
xor
push
repnz
aam
sub
ljmp
aaa
jmp
movsb
add
jl
lret
adc
pusha
jns
in
stc
jg
push
fnstenv
mov
mov
clc
xor
mov
dec
lret
ljmp
rcr
mov
in
mov
movsl
icebp
lock
jbe
lret
xor
dec
cli
inc
filds
imul
dec
cmpb
icebp
lods
adc
cs
test
js
push
push
insl
mov
dec
sti
leave
outsb
call
jb
dec
mov
pushl
outsl
movsbl
scas
add
adc
xchg
adcb
xchg
or
xor
push
lea
xor
mov
fadd
adc
or
es
push
pop
mov
fdivrl
jno
dec
cmp
es
and
ja
adc
jne
sbb
add
inc
push
and
fidivl
repnz
mov
cmp
push
mov
outsb
stc
int
jae
adc
mov
push
movsb
mov
sub
cmp
xor
sub
or
inc
loopne
inc
mul
adcb
stos
push
out
xor
adc
stos
xor
add
push
jecxz
mov
inc
inc
clc
outsl
decl
js
insb
inc
les
das
idiv
push
add
jae
out
xchg
mov
outsl
xor
popf
cmp
xor
mov
push
pop
xlat
xchg
push
cs
or
shl
add
lea
test
scas
dec
ret
and
mov
loope
mov
inc
inc
fs
lcall
sub
push
sub
lods
xchg
ret
shrb
and
mov
sub
mov
or
fnstsw
sahf
out
jmp
test
scas
stos
rcrb
dec
aad
fisttpll
pushw
dec
cld
inc
sub
mov
xchg
fdivrs
mov
loop
xor
shl
push
fwait
movsl
scas
pop
xchg
mov
pop
sub
inc
sub
xor
insb
sub
xchg
cs
jmp
scas
js
clc
iret
mov
push
iret
scas
push
js
xor
push
jp
imul
loop
mov
pop
pushl
pop
mov
mov
aas
add
out
clc
push
inc
sti
test
pop
sbb
add
mov
dec
loope
mov
xchg
pop
shll
mov
cmp
loopne
call
xchg
rolb
in
dec
push
or
and
jbe
testb
pop
mov
xor
arpl
loop
loop
imul
adc
out
les
push
jno
or
xor
dec
cli
jp
rorl
pusha
stos
sbb
pop
ja
adc
xor
lock
xchg
xchg
xchg
dec
int3
xchg
orb
out
inc
jge
sub
push
mov
ljmp
jbe
aad
popf
fcom
push
hlt
mov
out
or
add
dec
cmpsl
sbb
out
cmpsl
adc
jns
or
dec
scas
or
stos
mov
lds
nop
or
ljmp
sbb
push
xor
lahf
add
ss
lds
inc
push
add
andb
pop
pop
mov
sbb
jp
mov
push
xchg
push
xchg
test
or
iret
inc
or
mov
mov
jnp
dec
sahf
mov
scas
adc
inc
fildll
xor
aas
mov
cld
xchg
pushf
xor
ret
loopne
ss
mov
fs
pop
cmp
lcall
sub
mov
xor
mov
mov
ret
out
dec
aam
loop
push
and
aam
cmc
xlat
sub
pushf
xor
filds
sub
jae
inc
in
lahf
jmp
and
jl
jg
mov
lahf
pushf
call
int3
dec
jecxz
jg
fidivs
insl
popf
enter
mov
mov
cmp
push
adc
dec
jo
lcall
insl
lret
std
add
jmp
jmp
mov
adc
adc
subb
cmpsb
pop
leave
inc
cld
mov
test
test
push
inc
mov
aam
mov
cmpsl
scas
call
adc
ret
cmp
int3
cld
pusha
rclb
fmuls
xor
adc
clc
mov
jb
push
sub
outsl
rolb
fistpl
sub
mov
xor
or
fistpll
pushf
inc
mov
mov
jnp
mov
sbb
out
ds
test
sub
mov
sub
hlt
cmpsb
adc
idiv
pop
mov
jb
jbe
cmp
cmpsl
cmp
ds
add
repz
aad
cmp
push
jmp
adc
ss
pop
loopne
aas
test
mov
in
shr
popf
mov
sub
push
rcrb
fs
outsl
fs
rcr
andb
pop
fimull
jge
stos
popf
xchg
loopne
mov
sbb
mov
pop
fiadds
pop
xor
xor
es
mov
ret
jg
out
js
aaa
in
dec
add
test
pop
nop
lahf
add
pushf
cmp
idiv
out
jo
subb
test
sbb
je
push
dec
fisubl
pop
adc
stc
stos
sti
dec
sti
inc
mov
jmp
push
xor
rorb
sub
xor
mov
or
mov
test
inc
xor
dec
jmp
dec
rorl
pop
in
sub
adc
decb
jb
outsl
mov
incb
lds
stos
fsubs
mov
test
test
lret
in
jns
xor
dec
outsl
call
add
mov
orb
fdivrl
out
lock
mov
pop
fcomps
movsl
cmp
adc
stos
decl
push
lods
ds
out
outsb
push
mov
lahf
int3
adc
sahf
insb
in
xchg
mov
jmp
cli
and
rclb
clc
iret
shrb
pop
data16
clc
stos
nop
dec
hlt
sbb
mov
mov
mov
fidivrs
je
sar
xchg
add
insb
jle
mov
fs
xor
or
ljmp
add
scas
scas
sub
incb
hlt
addl
out
cli
cmp
addl
movsl
push
dec
ja
or
das
decl
sub
fs
dec
or
xchg
incl
inc
pop
jb
movsb
rol
fldt
cmc
jp
dec
mov
dec
and
push
jl
test
mov
ljmp
loopne
fisubrs
mov
sar
adc
add
lret
addr16
mov
rcl
lock
jp
add
add
or
dec
jmp
or
clc
push
lcall
std
fisubs
xchg
test
push
pop
data16
andb
xchg
dec
popa
xor
push
ds
in
imul
mov
movsl
fists
and
push
jmp
subb
mov
push
inc
loope
test
ret
pusha
testb
mov
xor
add
add
pop
sub
shlb
xor
pop
jmp
mov
int
ds
pop
cwtl
cltd
or
test
cmp
call
sub
fiadds
je
icebp
cmp
mov
inc
adcb
push
mov
test
cs
xor
add
loopne
dec
mov
sub
inc
xchg
nop
pusha
pop
cmp
enter
rol
jmp
ret
clc
cmp
mov
jns
jp
dec
inc
ret
je
sahf
adc
int
xor
mov
lock
cmpsl
push
loopne
add
lret
dec
jle
loopne
xchg
loopne
or
dec
pushf
negl
hlt
push
idivl
outsb
imul
scas
mov
aad
add
and
or
inc
mov
add
jnp,pn
fisttps
lds
out
inc
les
pop
xchg
lock
mov
stos
or
fisubrs
or
movsb
and
std
test
inc
insb
add
ja
pop
loop
mov
mov
or
out
xor
les
push
push
loope
xchg
inc
lcall
jae
mov
inc
push
mov
mov
outsb
arpl
mov
stos
js
dec
test
push
pop
mov
mov
cmp
xchg
fsubl
leave
pop
push
push
push
xor
push
shrb
xor
add
jns
fadds
push
mov
subb
int
test
data16
lea
mov
inc
push
jmp
add
ficomps
jl
int
sbb
sub
je
cmp
sbb
jbe
push
clc
mov
cmp
arpl
push
lret
jo
mov
in
ret
inc
ret
pop
shl
cmpb
dec
call
shr
pushf
fisubrl
adcb
inc
pop
or
cmp
xchg
fwait
call
cwtl
or
mov
in
outsl
mov
test
cs
out
mov
pusha
repnz
int3
xchg
cmpsl
dec
push
push
xor
push
dec
push
adcb
sbb
pop
lock
faddl
rolb
popa
mov
mov
ss
cmpb
or
insb
loop
or
jnp
cmp
popa
push
add
insb
subl
int3
lcall
adc
or
or
jge
filds
pushf
in
decl
nop
cltd
sahf
in
and
roll
repnz
aaa
jecxz
pushf
repnz
xchg
lock
jge
outsb
push
mov
push
add
jl
mov
movsl
mov
pop
daa
push
mov
fidivrs
mov
cli
inc
clc
outsl
xchg
mov
and
push
hlt
xchg
pop
inc
stc
add
iret
sbbb
call
mov
fisttpll
cmpsb
xchg
sub
inc
shr
movups
rorl
adc
jb
lcall
repnz
push
sbb
mov
ss
push
lds
adc
jecxz
adc
in
push
mov
fs
push
cld
sbb
jb
out
adc
lock
mov
test
lds
stos
sbb
icebp
pop
mov
pop
mov
sub
push
fcmovu
pusha
push
enter
cwtl
sbb
fcoml
jbe
mov
lret
jns
pop
stos
shr
scas
cmp
inc
mov
sbb
pop
fistpl
test
jp
pop
stc
sbb
ja
shrl
mov
jg
pop
jno
or
imul
hlt
inc
push
jmp
mov
inc
lret
stos
or
es
insl
xor
cmp
mov
jge
inc
mov
adc
vmread
cmc
pop
sub
jecxz
xchg
mov
std
lods
rol
inc
and
ret
data16
cmp
or
adc
pop
adc
emms
pop
into
loop
pop
or
push
test
popf
clc
pop
mov
sub
and
inc
mov
loop
mov
pop
jne
add
and
xor
scas
push
and
xchg
mov
lods
sbb
mov
inc
mov
lock
fidivrs
xor
mov
aaa
jo
push
movaps
lock
cs
les
cmp
pop
cli
call
mov
push
into
popa
cmp
les
insb
outsl
fisubs
pop
or
mov
scas
xchg
cli
mov
xor
and
imul
or
loop
out
sbb
xchg
aad
sub
jecxz
mov
gs
aaa
push
pop
jns
scas
mov
ds
cmp
nop
addb
incl
jp
ret
push
push
jno
xchg
fdivp
ss
hlt
jl
inc
sub
cmp
inc
sub
popf
adc
mov
mov
mov
jge
adc
mov
adc
mov
addr16
ficoml
test
xor
pop
push
leave
inc
adc
add
xor
mov
jg
dec
aad
jecxz
popf
add
mov
lock
push
das
adc
fstpt
idiv
xor
lahf
mov
cmp
fidivrl
cmp
mov
push
or
add
data16
jmp
inc
js
std
iret
cs
decb
pop
pop
into
lret
sub
cld
inc
ficompl
ja
mov
lcall
dec
es
mov
and
out
mov
xchg
out
adc
fcmovnu
and
mov
hlt
fdivrp
cltd
out
push
inc
jl
rorb
fsubrl
add
jae
xchg
in
xchg
addr16
sbb
ja
and
lret
roll
mov
stc
popl
fists
sub
cli
xlat
cmp
mov
fdivrs
or
clc
mov
addr16
mov
enter
mov
js
fstpt
sbb
cli
add
mov
cltd
clc
data16
scas
call
jg
or
and
incl
dec
adc
movsl
les
sbb
repnz
mov
int
or
xchg
add
or
pop
fs
push
lods
out
sub
xor
inc
lcall
loop
jecxz
lds
mov
out
loope
je
call
mov
inc
rorb
push
push
testb
leave
insb
pop
cmpl
pop
and
jg
inc
cmpl
xchg
mov
cmc
jne
jg
shll
inc
pop
clc
cld
xchg
inc
jmp
and
mov
incl
or
cmp
test
and
enter
loope
add
lcall
data16
dec
xchg
pop
and
repnz
enter
sbb
jg
push
flds
clc
push
jne
xor
inc
jmp
or
ret
repz
movsl
ss
mov
push
xor
mov
cld
in
in
imul
out
paddw
adc
mov
push
sub
or
mov
jne
leave
arpl
lock
cmp
push
and
pushf
add
cli
sbb
xlat
into
in
addr16
int3
xor
popa
insl
sbb
push
inc
sbb
mov
ss
data16
push
outsl
and
xor
std
roll
jbe
mov
pop
sub
fildll
das
xor
cmpb
sbb
lret
fisubrl
add
fs
iret
inc
aaa
and
ret
mov
inc
cli
inc
sub
push
fs
mov
nop
test
stos
cmpsl
gs
cmpsb
lds
dec
js
jmp
pop
les
xchg
push
les
pop
and
insl
mov
inc
mov
xchg
push
fcom
clc
xor
dec
jb
sub
xchg
pop
mov
pop
sti
pop
sub
cwtl
popa
xchg
mov
cld
push
jl
or
sub
add
push
inc
int3
sbbb
dec
jecxz
push
push
stos
insb
dec
cmp
push
mov
in
insb
dec
in
dec
cmp
sti
cmpsl
insb
mov
adc
xor
cmp
push
inc
add
sbb
ds
mov
call
dec
and
add
add
pop
mov
decb
in
cmp
lret
das
pop
sub
push
inc
les
push
out
inc
and
inc
shrl
sub
xchg
hlt
inc
inc
fwait
add
incl
loop
jbe
hlt
sub
imul
into
fsubrs
mov
and
dec
jg
jmp
mov
mov
push
xchg
mov
repnz
or
adc
jle
data16
sbb
push
jnp
mov
test
cmp
std
insb
or
loopne
loopne
lea
jle
ficoms
lock
jp
mov
aam
cmp
or
or
clc
push
add
mov
mov
lock
cwtl
push
push
xchg
clc
sub
out
mov
mov
dec
jecxz
loopne
xchg
int
orl
sbb
fisubs
je
repnz
xor
add
add
stos
mov
loop
lock
xor
ljmp
dec
adcl
mov
dec
jg
aaa
push
iret
sbb
sbb
int
mov
mov
repz
insb
sub
and
pop
push
imul
xchg
icebp
stc
adcl
ljmp
xchg
aam
filds
rol
xor
movsb
pop
test
inc
or
or
dec
or
dec
cli
push
ja
mov
sub
sub
ja
fsubrl
pop
js
jb
les
push
push
mov
inc
add
push
mov
adc
mov
dec
inc
je
and
and
clc
out
adc
mov
cmpsl
into
mov
loopne
cmp
push
shlb
jl
mov
sbb
std
incl
lret
mov
outsb
mov
push
and
or
outsl
ret
nop
cli
call
mov
subl
lds
push
mov
lcall
or
sbb
call
in
lret
fst
mov
inc
sub
xor
jo
push
jmp
adc
gs
popf
loopne
out
call
lcall
jmp
aam
xchg
pushf
test
and
pop
stc
es
pop
sbb
adc
add
jmp
mov
sub
repz
btr
js
push
xor
imul
push
mov
xor
test
jle
lds
jnp
fimull
sbb
xchg
std
es
leave
and
xor
cmpsl
xor
rorb
jne
jle
mov
mov
xor
cmp
out
lods
xor
cltd
test
lock
jnp
pop
adc
sub
shl
push
jg
test
xor
fiaddl
aad
and
bound
dec
dec
push
mov
pusha
mov
mov
xchg
mov
push
cld
lahf
test
pop
mov
dec
lods
int
mov
jge
loope
call
mov
arpl
inc
dec
cwtl
lahf
and
sarl
sbb
movsb
sbb
add
mov
xor
push
pop
aaa
add
dec
add
call
cli
jmp
xor
xor
or
adc
pop
jno
mov
push
aam
or
cli
sub
mov
adc
adc
or
lock
out
xor
insb
fisubrl
dec
xor
out
clc
aas
mov
out
xchg
add
sbbl
sub
add
cwtl
loop
and
fidivrs
inc
jb
jecxz
movb
push
add
or
inc
test
add
lock
mov
xor
xchg
std
gs
and
inc
jge
pop
mov
fistps
fdivs
dec
pop
inc
addr16
outsb
decw
add
mov
mov
ret
fisubrl
lock
jo
or
or
cmp
cmpsb
sahf
and
add
pop
in
hlt
cmp
jle
addb
add
inc
in
push
xor
fmuls
jb
jbe
mov
push
lcall
dec
mov
subl
out
jmp
rcll
insl
hlt
stos
or
and
add
clc
outsl
clc
aaa
fadds
das
xchg
mov
cmp
fchs
mov
adc
rorb
add
nop
ss
jl
mov
fimuls
push
fsubs
fimull
mov
xchg
aam
imul
sbb
jno
fcoml
mov
insb
xor
or
mov
ja
sbb
aam
inc
dec
repnz
lods
mov
les
sar
push
and
popa
ret
ja
sub
or
dec
movsb
ss
test
divps
je
lods
outsb
push
jb
stc
out
push
movsl
cmp
aad
stos
clc
test
das
test
adc
call
xor
pop
add
pop
jp
or
adc
test
decb
xor
jp
js
add
ja
adc
push
clc
inc
push
andb
ret
leave
subl
add
or
sub
leave
repz
cmp
and
dec
jp
and
mov
jle
pop
add
data16
fbstp
push
mov
rorb
test
pushf
repz
cld
or
scas
shlb
jl
enter
add
cmp
out
mov
rcll
inc
add
fists
and
xchg
clc
insb
gs
cli
add
mov
mov
aam
mov
leave
loopne
jno
test
xchg
and
pop
fcmove
pop
imulb
dec
or
and
mov
mov
jg
xor
and
cmpl
push
push
cmp
add
sahf
and
mov
adc
dec
push
xor
fs
loopne
stos
push
or
xchg
adc
sbb
fdivrs
cmp
jge
add
pop
inc
pop
cwtl
dec
movsl
or
insb
jecxz
add
add
adc
and
jno
mov
ret
mov
loopne
in
jle
push
pop
sbb
or
fwait
lods
leave
lret
fisttpll
call
data16
fisubrl
mov
addr16
aam
scas
and
in
mov
jno
mov
mov
int3
push
push
sbb
dec
add
jp
or
stos
loopne
and
and
mov
sbb
sub
outsl
add
push
ret
sub
mov
sub
enter
xor
sub
sbb
jo
push
call
pushf
xchg
cs
and
dec
pop
scas
ret
push
sbb
inc
in
pop
out
outsb
adc
jne
rcrl
mov
lods
push
pop
ret
inc
pop
sub
hlt
push
sbb
fists
mov
xor
push
hlt
mov
push
hlt
fnsave
imul
and
pop
dec
mov
adc
loop
and
pushf
sub
adc
clts
scas
outsl
hlt
jmp
js
hlt
pop
pusha
mov
and
dec
push
add
inc
hlt
and
sbb
mov
addr16
dec
sbb
dec
inc
mov
add
inc
sar
imulb
sbb
push
and
int
xchg
hlt
sbb
pop
mov
cld
inc
or
sbb
or
daa
mov
push
add
or
jge
js
xor
dec
loopne
or
sbb
add
dec
mov
mov
pop
adc
push
or
pop
orl
fistpll
xor
cmc
xor
stos
in
stos
mov
hlt
fst
shll
in
inc
adc
dec
outsl
cli
inc
mov
add
and
pusha
adc
clc
jmp
add
adc
sub
inc
mov
cld
ss
cmpsl
pop
mov
addl
aad
rclb
xor
and
and
sarb
push
push
test
xor
ret
or
jne
or
lds
iret
fwait
dec
sub
pop
shll
loop
push
movb
adc
inc
popf
sbb
lret
cmp
adc
adc
std
outsl
sbb
jmp
adcb
add
clc
data16
mulb
ficoms
mov
data16
add
lods
repnz
inc
movsb
call
adc
cld
gs
pop
vphadddq
sbb
adc
fists
add
jb
fmull
jg
add
jae
je
mov
es
je
cmp
and
or
or
sbb
xor
cmp
sub
jg
mov
sbb
pop
pop
js
sbb
das
lods
push
and
jecxz
push
xchg
mov
ss
fiadds
nop
adc
xorb
ror
sbb
loop
or
cld
xchg
xchg
xor
sub
cmp
dec
mov
clc
sbb
push
xor
mov
mov
cmp
shl
adc
inc
pop
sti
pop
xorb
ljmp
scas
test
jl
sub
mov
add
push
dec
cmpsl
mov
fimull
or
inc
jne
inc
inc
addr16
call
jmp
cmp
je
pop
arpl
xchg
push
dec
dec
out
fisttps
loopne
jle
jne
sub
or
mov
dec
inc
stos
aad
mov
daa
roll
insb
and
pop
andb
sbb
sbbb
jnp
sub
call
stos
push
popf
push
push
popa
bound
pop
subl
dec
aaa
adc
pop
inc
clc
sub
lock
jl
inc
lds
cmp
cltd
mov
cmovae
sbb
orb
sub
inc
inc
push
or
hlt
decl
jp
test
lret
outsl
add
xchg
iret
clc
icebp
mov
mov
ljmp
mov
das
xchg
outsb
xor
repnz
test
roll
fistl
sub
jbe
cmpsb
insb
je
mov
test
mov
push
inc
xor
push
xchg
js
roll
shrb
lcall
inc
pop
lahf
cmp
or
jg
into
cmp
or
push
mov
and
sbbb
mov
out
sub
shr
add
adc
pushf
or
icebp
xchg
adc
xor
add
mov
out
lcall
addb
aam
test
scas
mov
inc
lahf
cmpsb
add
in
sbb
xor
xchg
add
push
pop
pop
inc
mov
ja
mov
mov
xchg
call
mov
push
mov
imull
xchg
push
sbb
push
jnp
mov
or
pop
ret
loope
lret
mov
sub
sbb
call
cmp
divb
lret
mov
int3
adc
or
add
sub
stc
ss
add
mov
fnstsw
inc
subb
push
addr16
jbe
in
aas
lods
inc
lea
add
mov
xchg
call
shrb
push
scas
xor
push
int
mov
cwtl
xchg
movsb
mov
fwait
push
lods
push
sub
cs
insl
aas
mov
adc
es
loope
xchg
sar
lcall
je
jmp
inc
popf
pop
sub
inc
mov
lods
add
xchg
call
or
pop
add
outsb
cmp
sub
clc
sbb
cmp
loope
mov
mov
xchg
decb
jne
cmc
les
call
fwait
xchg
aam
subb
adc
jo
test
mov
stos
or
jo
stos
insb
call
cwtl
inc
cltd
cmpsb
sti
outsb
sub
imull
jmp
pop
mov
das
push
and
mov
insb
lea
cmp
mov
in
test
pop
js
scas
test
out
mov
pop
mov
fwait
jp
sbb
jecxz
and
cmpsb
jmp
imul
in
mov
nop
sub
mov
loopne
aas
inc
enter
movsb
imul
and
outsl
aam
out
cmp
pop
mov
std
cmp
mov
pop
jg
test
incl
inc
inc
xchg
sub
dec
outsl
sbb
sbb
aam
push
les
in
mov
ds
jae
les
mov
rorb
add
movsl
xor
repnz
xchg
nop
js
std
fs
sbb
cs
pop
mov
inc
adc
incl
pop
insl
xchg
imul
jbe
mov
sar
dec
jmp
inc
in
xchg
das
rcll
jle
sub
leave
adc
aaa
jg
sbb
outsb
sub
ljmp
ljmp
pop
imul
out
pop
les
xchg
push
xor
out
jnp
push
lcall
aaa
or
jecxz
push
jp
in
push
cs
push
cli
xchg
dec
test
gs
xchg
aaa
shll
or
jg
add
dec
xlat
and
inc
lds
or
rorl
dec
dec
xchg
sub
inc
out
in
jmp
push
test
inc
sarl
in
mov
pushf
shlb
sub
jne
jmp
incl
imul
cmp
dec
stc
aaa
jg
test
data16
test
mov
je
test
cli
or
mov
fstps
fsubrs
or
lcall
das
clc
loopne
sbb
stc
out
out
mov
push
xor
mov
popf
push
imul
jbe
ja
mov
sub
cmp
in
pop
dec
ljmp
loop
add
xchg
sbb
push
movsl
iret
xor
jmp
add
movsb
or
adc
xor
fs
outsb
jg
ljmp
les
out
repz
es
incl
mov
stos
stos
add
hlt
ds
xchg
lock
dec
cld
pushf
push
jb
jge
outsb
jb
pop
fadds
int3
aas
push
loope
push
adc
loopne
insb
sarb
add
rcrb
aam
xor
std
aaa
test
jecxz
sbb
shll
popf
inc
jmp
addr16
add
mov
jbe
mov
xchg
cwtl
add
mov
clc
mov
adc
mov
add
mov
pop
addb
call
cmp
inc
loope
sbb
inc
ljmp
adc
movsl
test
xchg
xor
loope
pusha
popa
ret
lods
loop
lea
or
lret
xchg
popa
dec
cmpsb
inc
adc
jno
es
or
ja
shll
push
mov
xor
jg
mov
jns
xor
mov
or
push
dec
pop
fdivp
sub
dec
and
inc
cltd
dec
pop
push
les
fisttpll
mov
jb
es
es
aas
jo
js
push
outsb
add
push
popa
rolb
mov
jle
cmp
jo
push
in
rcr
dec
and
in
jmp
in
lea
mov
in
sub
xchg
mov
sbbb
adc
mov
roll
testb
mov
imul
sbb
xor
cltd
stos
pop
sbb
lods
aad
nop
std
sbb
decb
push
adc
cld
mov
in
cld
xor
faddl
pop
aam
sbb
xchg
dec
ret
hlt
cmc
pushf
inc
xchg
mov
mov
data16
inc
std
sub
and
inc
inc
xor
mov
sub
pushf
push
aas
js
sbb
orb
push
and
sbbb
jecxz
ljmp
movsb
mov
add
add
add
cmp
or
subb
insl
adc
jb
cwtl
scas
mov
xor
jp
pop
pop
or
clc
dec
or
dec
push
stos
inc
dec
int
sbb
and
inc
sub
cld
pop
movsl
inc
sarb
xor
add
addr16
pop
add
outsb
ss
cltd
or
adc
adc
mov
jnp
add
pop
hlt
ret
inc
push
and
jne
pop
and
test
push
filds
mov
push
cld
cmpsb
aam
fidivrl
pop
imull
pop
cs
in
and
into
add
in
pop
enter
cltd
daa
xor
jg
and
test
xchg
cwtl
and
and
jle
jbe
in
add
and
adc
pop
hlt
das
jg
add
mov
popf
cmp
cmp
mov
add
lret
add
add
dec
cmp
push
movb
shlb
mov
mov
sar
sub
jg
jnp
stos
adc
inc
push
jle
test
jg
jle
or
push
xchg
mov
or
js
incb
stc
call
repz
lds
imul
lods
and
jo
dec
dec
les
xchg
mov
mov
leave
mov
cli
adc
pop
add
and
cmc
in
fisttpl
shll
aam
push
pusha
rclb
sbb
push
add
cwtl
pop
mov
push
xchg
fcmovnbe
cltd
or
out
rcll
flds
arpl
fiadds
fisttps
inc
incl
vpmacsww
xchg
test
lret
xor
test
add
fcom
lock
or
jne
scas
add
inc
jnp
subb
adc
cwtl
xorl
arpl
or
xchg
or
popf
cmc
jle
xor
sub
inc
add
push
lret
test
adc
dec
inc
mov
dec
aaa
sbb
rolb
out
push
fsubr
fbld
rolb
rcrl
inc
mov
cmc
pop
mov
sarb
pop
out
mov
ret
popf
fs
test
pop
jmp
push
ljmp
pushf
loope
int3
inc
adc
push
in
add
xor
sub
out
push
adc
stos
rorb
flds
rol
scas
out
jbe
rcrl
cwtl
sbb
mov
fbstp
xchg
andl
lods
xor
dec
adc
xchg
cmp
dec
mov
mov
das
mov
xchg
in
movsl
add
push
and
and
mov
cmp
sbb
push
inc
popf
lret
dec
lret
fistpll
mov
mov
popa
ss
aam
and
jns
mov
sub
aam
js,pt
dec
pushf
jmp
xchg
push
ret
lock
les
dec
or
xchg
fcomps
loop
adc
push
fwait
sbb
xor
lods
and
mov
popa
mov
xchg
ret
data16
idivb
push
imul
jno
insb
xchg
push
fildll
lea
push
push
sbb
inc
adc
cmc
in
push
jle
mov
sub
or
or
mov
cmp
and
sub
das
test
inc
sbb
jae
cld
lret
cld
add
mov
call
sbb
add
clc
and
mov
js
cmp
xor
jns
sub
adc
inc
je
adc
lock
inc
push
dec
add
mov
mov
lahf
daa
imull
sbb
lahf
xlat
cld
cmpsb
jge
stos
vmovapd
mov
jae
jl
jle
loop
or
mov
cmp
filds
loopne
adc
ret
int3
shr
jbe
jp
inc
das
xlat
es
push
and
jmp
fildl
cwtl
jecxz
loopne
rorl
cmp
pop
and
xchg
lds
xor
pop
mov
fidivl
push
xor
into
xchg
outsl
add
add
dec
push
push
push
movsl
rcll
bnd
or
and
aas
xor
lock
popa
rclb
mov
test
in
jo
jmp
pop
nopl
add
adc
add
negb
pushf
aam
cmp
cmp
inc
mov
rorb
push
cmp
jbe
push
push
and
mov
fidivrs
push
icebp
pop
mov
sbb
subb
notl
xor
cmp
gs
stos
or
mov
outsl
or
push
xchg
fnstenv
out
jo
stos
sub
lock
and
clc
or
xor
fldcw
push
sub
sarb
inc
test
mov
pop
in
adc
dec
fldcw
sbb
stc
pop
icebp
loope
cmpsl
adc
andl
es
xor
addl
mov
inc
bound
andb
fiaddl
nop
or
add
mov
xor
pop
or
sbb
jmp
jo
ja
pop
pop
fsubp
cmp
loopne
inc
and
mov
repnz
stos
insb
cli
shll
add
jo
add
in
ficoms
sbb
pop
adc
mov
jo
jae
sub
aam
rcll
jecxz
or
or
adc
sahf
in
test
adc
pop
lret
add
pop
sarl
pop
mov
xlat
or
js
add
or
dec
lods
dec
xor
lds
ja
pop
ljmp
in
add
xchg
mov
sbb
cli
roll
out
scas
push
sub
xchg
sub
and
shlb
jle
add
rcll
movsb
lods
je
mov
pusha
xchg
mov
xchg
push
sbb
mov
add
dec
out
pop
push
jecxz
inc
popa
testl
push
jnp
add
pop
into
hlt
xchg
rorb
add
daa
insb
xor
inc
jmp
fistps
fistpll
shll
mov
repz
andb
xor
lock
xchg
ret
sub
cmp
je
cmpsl
add
cmpl
jo
mov
jp
ficoms
sbb
aas
add
stc
cltd
fnstsw
sbb
pop
loopne
cmp
inc
sub
inc
adc
and
xor
xchg
cmpb
cmpsl
and
adc
push
cmpsb
fldpi
xor
sub
jmp
lret
notb
cld
rolb
cmp
jb
sbb
push
rclb
fistps
lcall
stos
add
in
sbb
pushl
flds
out
cmpsl
jecxz
pop
jmp
iret
add
dec
lock
out
shll
mov
or
mov
imul
fsubrp
movhps
pop
and
xchg
dec
inc
adc
fimull
push
repnz
sub
jbe
mov
mov
notb
add
pop
pop
sub
fnstsw
mov
inc
icebp
adc
push
xchg
ljmp
sub
inc
xchg
push
ficoms
or
rcrl
pop
xchg
jmp
loopne
xor
xchg
mov
popa
xor
jno
xchg
stos
loope
mov
shl
dec
adc
sbb
ret
add
mov
push
insb
js
or
scas
lods
add
lods
sbb
cli
aas
es
push
lea
push
push
lea
push
cs
adc
add
xchg
js
lods
sub
dec
scas
ja
inc
in
push
add
add
inc
rcl
daa
sub
pop
or
mov
sbb
xchg
jb
lahf
inc
cmp
les
icebp
je
push
dec
clc
adc
fistps
mov
dec
jbe
push
cmp
jne
mov
ds
int3
cmpb
or
out
es
sub
jno
cmp
hlt
hlt
cltd
aaa
shlb
mov
rcr
ret
prefetchwt1
add
add
add
jo
das
pop
bound
sbb
aaa
call
icebp
push
and
insl
ret
lods
sahf
sub
jmp
cmpsl
cmp
dec
inc
icebp
rorl
enter
rorb
dec
mov
outsl
out
jbe
add
pop
lock
xchg
stos
or
sbb
sbb
adc
mov
movsb
push
inc
mov
mov
stos
cmp
fsubrs
inc
sbb
inc
cmp
in
ret
pop
js
and
rcr
add
lea
add
adc
js
mov
or
adc
test
jb
lock
jle
ret
mov
mov
ljmp
adc
pop
stos
mov
jmp
and
lea
jecxz
mov
les
scas
adc
sarb
add
cmp
clc
and
inc
cld
push
lahf
fnstsw
dec
dec
cmp
ja
jmp
rcrb
test
mov
arpl
call
inc
fists
add
gs
outsb
cmp
sbb
add
int
pop
out
dec
dec
xchg
outsb
inc
push
dec
ret
loopne
or
push
das
js
jno
lret
sbb
push
test
rolb
sub
pop
sub
mov
mov
pop
call
and
cli
lock
mov
sbb
pop
mov
cs
cmp
js
jns
mov
mov
xchg
add
push
addb
xor
cmpl
loope
in
add
or
sub
sarb
shl
add
data16
into
cwtl
dec
outsl
loopne
push
ss
and
pop
ss
xchg
pop
and
xchg
mov
jne
hlt
cmp
add
insl
pop
cwtl
jae
loope
in
sbb
dec
mov
dec
jle
dec
ds
cltd
push
lcall
jl
adc
icebp
sbb
icebp
sub
or
imul
cld
pop
jecxz,pt
jmp
inc
add
pop
sbb
dec
movsb
out
mov
fcoml
lds
enter
add
push
cltd
andl
loopne
pop
popa
mov
xor
dec
add
cmpsl
push
dec
sub
cmp
sbb
cmpb
popf
scas
movsb
rcrb
cmp
or
dec
sar
dec
aam
push
cmp
and
dec
dec
clc
and
sub
rcrl
mov
add
sub
jb
test
adc
add
push
mov
jae
test
test
insb
stos
cwtl
mov
aas
or
jae
clc
je
push
xor
fs
and
jbe
mov
or
adc
add
pop
pop
jge
push
cli
sbb
stc
add
jle
sarl
or
inc
xor
inc
loopne
aas
ret
bound
xor
rolb
or
rcrb
xor
icebp
adc
inc
mov
and
sub
lea
push
mov
ss
xlat
es
mov
and
cwtl
and
jno
idivl
subl
add
adc
sub
and
inc
mov
mov
outsl
cmp
das
jge
jge
inc
add
fistl
movsl
addl
test
mov
aam
and
jp
mov
testl
add
ror
mov
push
es
daa
jbe
iret
dec
cmp
push
push
jl
imul
xor
pop
pop
iret
mov
jmp
dec
lods
loope
inc
mov
mov
ds
cmc
and
icebp
out
inc
inc
push
cmpsb
lock
jbe
jg
jecxz
sarl
push
dec
subb
and
mov
cld
arpl
or
addb
jle
and
popl
mov
push
cmpsb
pop
fsubl
insb
jp
addr16
or
or
or
push
dec
popa
andb
ss
inc
mov
imul
mov
cmp
aam
sub
mov
ljmp
mov
inc
add
xlat
cmp
add
jno
ret
mov
pop
out
push
mov
enter
clc
adc
jnp
jmp
out
test
outsl
pop
loope
outsl
test
jae
in
inc
cs
mov
insb
int3
jl
popa
aad
cmpb
xor
aam
pop
push
pop
shlb
adc
roll
sbb
or
xor
or
mov
jle
ss
loopne
xchg
test
int
cmp
jne
mov
cmp
pop
mov
mov
sbb
xorl
mov
jb
mov
sub
adc
icebp
je
adc
or
sbb
daa
adcl
pop
repz
jno
sub
xor
pop
pop
loop
jae
sbb
andl
mov
add
dec
dec
jnp
sarb
loopne
lahf
nopl
cltd
idivl
xor
lock
dec
in
cltd
aad
xlat
mov
fistps
add
cmp
xchg
push
outsb
clc
stos
cltd
mov
lret
hlt
pop
xor
fcoms
lods
pop
sbb
add
rcll
xchg
movsb
cmp
fmulp
or
xchg
scas
lock
bound
or
rol
incl
imull
mov
cmp
std
subb
je
repz
test
mov
fcom
popa
sbb
push
cmp
pop
mov
push
sub
xor
push
sbb
adc
arpl
cld
adc
je
ja
mov
push
cwtl
xor
mov
aam
popf
push
mov
jge
and
fs
clc
mov
jne
adc
pop
push
imul
lods
pop
cwtl
adc
push
dec
enter
das
fdivrs
mov
clc
jne
adc
cli
adc
push
and
inc
jae
shrb
inc
pop
cmc
lea
sar
loop
hlt
adc
mov
ret
xor
in
sbb
xchg
cld
sub
pop
and
jns
adc
dec
leave
popa
out
test
or
int3
clc
sbb
adc
xor
popa
shlb
fs
sub
lds
add
mov
in
mov
mov
or
sbb
adc
push
in
aam
xchg
xor
jno
dec
cmc
or
mov
pop
loopne
mov
pop
lcall
outsl
jl
inc
das
inc
xchg
add
adc
xchg
sti
sub
popa
jo
loop
pusha
mov
dec
stos
dec
mov
xchg
std
pop
add
jns
rcrb
fcoml
pop
mov
xor
rcrb
insb
das
adc
lahf
jle
jo
lock
lods
add
clc
or
sub
mov
addb
into
iret
sbb
fcmovnb
rcl
push
xchg
push
arpl
imul
shl
movb
or
jg
mov
and
hlt
ljmp
imul
fstl
adc
mov
mov
jge
xor
imull
pop
and
pop
pop
push
mov
inc
add
pop
add
or
pushf
aaa
mov
lcall
xchg
push
pop
or
add
or
mov
pusha
movsl
xor
icebp
or
cmp
add
cmp
xchg
add
repz
sub
shlb
adc
mov
xor
push
mov
push
incb
cmp
loope
js
xchg
push
cmpb
jb
ss
aas
es
mov
add
cli
test
jbe
es
mov
xor
push
icebp
insb
dec
int
mov
cmpsl
mov
addb
push
imul
ret
xor
sub
lahf
jne
hlt
jae
mov
lea
sahf
andl
xor
stos
inc
xchg
ds
pop
aad
add
cltd
out
fdivs
push
ljmp
hlt
in
pop
jmp
mulb
push
andb
jb
add
inc
int
shlb
into
shl
push
jl
ficomps
jae
andb
in
add
sbbl
and
or
pop
mov
xchg
sub
mov
inc
and
pop
scas
push
cmp
sbb
dec
ljmp
sub
or
xlat
fadds
dec
pop
sbbb
pop
jns
stos
mov
pop
shlb
clc
hlt
add
lods
rolb
ret
mov
dec
add
sbb
sbb
lods
in
in
das
cmp
fwait
sbb
pusha
and
outsl
rorb
pop
adc
pop
mov
cmp
inc
dec
cld
and
or
pop
shl
sub
xchg
cli
add
mov
dec
movsl
std
test
pop
shr
push
pop
and
mov
sub
add
sti
icebp
sub
mov
jae
stc
out
jbe
lahf
or
mov
vpsllw
xchg
mov
mov
and
mov
cmp
push
pusha
sub
push
je
add
leave
xor
pop
ret
loopne
ret
je
xchg
inc
pop
pop
ret
and
stc
ret
sbb
pop
sub
xchg
aaa
cmp
in
sub
loop
push
add
cmp
andb
insl
je
stos
adc
hlt
test
and
cmc
shlb
nop
sub
push
sbb
jecxz
addl
daa
test
inc
ror
das
adc
roll
push
outsl
out
cmpsb
fwait
mov
lock
xchg
jle
and
pop
addr16
out
das
xchg
ret
jae
aam
scas
sbb
dec
sbb
loope
push
pop
repz
je
stos
test
js
or
imul
imul
xor
jge
sbb
jg
popa
add
pusha
jne
iret
mov
test
sub
cmp
inc
sub
inc
adc
mov
sbb
lods
dec
xchg
cs
add
cmc
movsl
sub
lock
dec
test
je
movsb
jg
jp
mov
test
jae
insl
rorb
notb
loope
push
jns
es
ljmp
outsl
dec
cwtl
std
inc
xchg
rcrb
xchg
scas
cmp
test
fimuls
addb
push
mov
lds
andb
mov
sub
shl
fs
push
jp
loopne
dec
rolb
adc
out
and
test
in
mov
lock
mov
ljmp
test
jno
mov
push
out
mov
inc
sbb
shrb
mov
ljmp
or
jae
mov
outsl
gs
mov
pop
dec
inc
or
adc
pop
push
in
pop
lods
sar
jb
push
and
notl
inc
xor
inc
imul
xor
and
cmc
roll
or
rolb
test
pop
inc
in
mov
and
or
je
dec
movsl
sub
adc
fwait
aas
jmp
cs
and
mov
adc
mov
rcl
push
cld
dec
cmp
outsl
jnp
jecxz
pop
lret
icebp
push
rcl
xchg
mov
sub
xor
icebp
pop
jne
jae
ret
jmp
test
xchg
jmp
stos
dec
popl
jmp
lds
inc
cmp
out
mov
fistpl
jmp
pop
add
add
sub
mov
xchg
cmpsb
add
jne
or
jnp
fwait
cli
sub
mov
sbb
pop
lret
push
lahf
cmp
sub
xchg
sbb
lods
xchg
movsl
mov
ja
or
int
cmc
test
push
xor
and
dec
ror
sbb
data16
test
shll
addr16
in
pop
je
xchg
call
mov
jnp
sbb
dec
or
dec
js
pop
negl
inc
adc
add
push
nopl
xchg
cmp
mov
push
fistpl
add
jmp
add
push
xor
adc
cmp
dec
in
bound
pushf
mov
ret
cmp
stc
add
xor
shl
push
filds
adc
imul
faddl
xchg
push
cltd
outsl
js
cmp
repz
ret
loop
sbb
lea
and
adc
and
icebp
mov
inc
and
inc
dec
sub
aaa
push
cmc
leave
push
cmpb
or
cmp
pop
jl
fs
push
jg
lods
xchg
inc
jp
mov
jae
xchg
xor
push
lcall
mov
inc
aam
dec
icebp
out
add
pop
daa
sub
int
pop
add
mov
adc
mov
push
push
inc
pop
ret
inc
add
std
imul
nop
pusha
addb
xor
xchg
cmp
mov
in
push
lock
or
pop
xor
push
push
ss
lret
mov
mov
mov
out
sub
add
sub
add
fstl
je
jae
mov
dec
jl
out
xlat
in
fistps
push
ds
add
fiaddl
out
xor
or
sub
mov
jg
hlt
mov
add
cmp
adc
pop
sbbl
sbb
xchg
or
lods
incl
inc
inc
sarl
cwtl
add
pusha
sbb
std
or
dec
and
js
jle
push
call
adc
lea
mov
shrl
lds
jp
sbb
adc
pop
fstpl
sbb
test
fwait
bound
adc
jle
aam
nop
test
dec
out
sahf
and
dec
sbb
push
sub
addb
loope
mov
rorb
jbe
or
inc
jb
add
mov
mov
mov
inc
test
add
data16
jo
mov
hlt
pop
add
rclb
mov
mov
cli
xchg
insl
or
inc
stc
sar
xchg
rcr
cltd
push
cli
add
lret
jae
mov
sbb
sbb
mov
jle
jle
or
mov
add
push
popa
cli
fistpll
imul
sti
popa
repz
and
jne
sbb
popf
rcrb
sbb
pop
sbb
sahf
in
mov
test
push
add
mov
or
adcl
cmpsl
ja
push
lods
jne
insb
in
shll
push
daa
cmc
push
cmp
dec
mov
adc
jg,pt
lock
lret
jo
lret
mov
rcrb
xorb
mov
movsb
mov
or
ss
xor
outsb
lcall
andl
icebp
adc
push
mov
addb
mov
faddl
inc
cmp
fbstp
pusha
pop
cld
add
add
adc
testl
ja
out
outsl
mov
sbb
push
dec
pop
loope
sbb
js
jns
mov
xchg
test
dec
push
test
adc
add
loope
movsl
add
arpl
cmp
popf
sub
pop
add
fs
mov
in
mov
negl
stos
das
outsb
lret
sub
aaa
mov
mov
ficompl
lcall
pushf
sti
je
leave
shll
add
xor
sbb
sahf
mov
jae
adc
clc
in
jg
icebp
xchg
add
adcl
and
add
mov
rcrb
std
cmpsb
inc
mov
lea
clc
cmp
popf
dec
test
pop
jl
push
push
push
adc
sbb
mov
mov
frstor
inc
inc
call
cwtl
mov
jmp
push
add
add
add
ljmp
ljmp
add
dec
add
movb
push
cmc
mov
mov
hlt
out
mov
mov
scas
repnz
push
jle
mov
push
mov
xchg
imul
cs
cwtl
mov
das
std
lcall
xchg
inc
imul
push
cmp
rclb
aad
dec
xchg
addr16
dec
sub
ficomps
dec
adc
xchg
loop
repnz
test
pop
dec
dec
or
ret
mov
fimuls
mov
jg
inc
mov
test
xchg
mov
dec
jns
lods
scas
fldcw
pop
outsl
lcall
jle
hlt
or
insb
pop
push
mov
inc
and
es
xchg
in
dec
rolb
inc
jmp
popf
pop
push
sbb
add
xchg
ljmp
pop
xchg
ficompl
fidivrs
mov
mov
test
mov
pop
push
add
push
xchg
aad
shrl
loop
imul
and
adc
xchg
ret
adc
push
xchg
push
pop
mov
imul
xor
test
add
sbb
or
inc
shll
push
testb
inc
inc
mov
jnp
add
dec
jo
decl
xchg
xor
fs
or
loopne
mov
mov
aaa
aaa
mov
cltd
ret
cmp
andl
sub
add
int
js
fmull
xor
clc
lcall
jno
movsb
mov
outsb
and
nop
loopne
dec
jne
mov
fcmove
fidivrl
mov
or
and
arpl
mov
mov
test
jmp
dec
fldenv
add
mov
pop
repz
mov
fcomip
xor
insl
jbe
into
hlt
ss
adc
or
ljmp
xchg
repnz
faddp
and
sbbb
mov
loopne
or
ds
adc
inc
add
shlb
cwtl
pop
adc
sub
loop
push
or
test
repnz
ljmp
inc
inc
add
js
orl
leave
cmp
mov
into
fiaddl
fs
push
pop
clc
es
or
out
mov
sbb
jecxz
xor
sub
imul
lret
in
adc
mov
aad
mov
mov
cmpsl
bound
jle
in
scas
mov
fadds
stos
shrl
jbe
mov
dec
lcall
mov
lret
add
jo
pop
cli
outsb
repnz
or
clc
cmpl
cmp
imulb
ret
or
push
fdivr
sub
adc
mov
insb
jle
inc
add
enter
xchg
pop
sahf
push
rorl
jb
or
push
adc
sub
mov
ja
sbb
or
dec
outsb
xchg
mov
sub
fidivrs
inc
mov
jg
loop
sbb
inc
mov
mov
inc
lahf
rorl
mov
aad
inc
in
outsb
lods
or
mov
loopne
shrl
mov
and
adcb
stos
sbb
aas
or
inc
mov
push
mov
cmp
or
shlb
inc
jo
ret
ljmp
in
adc
popa
loope
xchg
and
cmp
notb
test
push
loop
rorl
shrl
incb
push
ja
push
push
out
frstor
ret
add
incl
ljmp
scas
adc
cmp
or
sub
aad
cwtl
dec
ljmp
faddl
lods
aaa
mov
ficompl
mov
mov
dec
orb
subb
das
insb
jge
out
pusha
jo
jl
inc
lods
fdivrs
adc
mov
pop
mov
jno
outsl
sub
lcall
inc
aad
adc
inc
and
mov
lret
inc
inc
and
ret
mov
push
jne
lahf
imul
adc
dec
jbe
push
push
sbb
adc
jle
mov
or
pop
pusha
adc
cmc
loopne
or
or
or
xchg
test
pusha
sub
test
mov
push
jno
push
insb
fs
addr16
ret
shll
push
cmp
outsb
jg
dec
sub
jge
outsb
pop
cli
push
orl
adcb
xchg
pop
mov
add
mov
lret
mov
jl
fidivl
pushf
enter
ljmp
test
loope
sbb
aaa
clc
add
sbb
sub
sbbl
lods
sbb
sbb
call
xor
test
insl
push
jmp
popa
add
mov
mov
mov
test
push
lock
lods
aas
lock
data16
clc
xchg
adc
es
rcll
aam
pusha
cmp
pop
xchg
ss
loop
push
sub
scas
addr16
add
faddl
xchg
push
dec
add
cwtl
jmp
cs
rolb
pop
jp
push
daa
xor
int3
pop
cld
fs
pop
adc
icebp
jp
xor
cmp
and
add
pop
jge
jo
inc
mov
adc
incl
xor
nop
mov
xor
aaa
imulb
mov
movd
adc
dec
call
in
lcall
cmpsb
push
mov
push
pop
inc
popf
xor
flds
mov
lods
inc
xchg
dec
add
lcall
insl
and
arpl
push
test
out
jle
xlat
add
mov
xor
pcmpeqw
in
adcl
incl
and
jbe
outsl
ljmp
cmc
mov
inc
mov
push
mov
jae
mov
loope
loop
test
sbb
mov
xchg
mov
jl
mov
loop
jle
es
mov
mov
lods
jns
decb
les
aam
cld
test
add
gs
lea
rcll
js
test
iret
pop
js
xor
insb
jge
ss
pushf
test
cmc
inc
push
inc
fs
jl
sub
das
clc
jg
shll
inc
mov
pop
insb
add
icebp
pop
std
cmp
adc
add
icebp
dec
clc
inc
cmp
rcrl
mov
out
and
xchg
dec
xchg
testb
or
cld
int3
xor
in
nop
add
neg
mov
cmp
mov
sub
cmp
in
push
adc
fiadds
add
adc
xor
pop
sbb
shrl
andb
jp
movsb
stos
je
jns
insb
aas
push
stos
mov
stc
ja
shr
add
sub
pop
test
cmp
inc
lds
stos
hlt
push
xchg
mov
and
pop
adc
jmp
cltd
xor
dec
insl
imul
jbe
mov
xchg
xchg
fldt
test
fmull
adc
adc
adc
dec
xor
test
cld
clc
scas
insb
stc
jno
test
loop
pop
cli
in
fcomip
or
and
push
lds
cmp
mov
pusha
movsl
ds
pop
sbb
jg
das
sbb
sub
cmp
dec
jle
test
xor
addb
push
out
daa
jmp
add
fbld
test
test
and
add
push
push
sub
mov
jo
inc
test
mov
cmc
clc
jl
xor
mov
outsl
into
out
ss
outsl
push
sbb
fwait
popf
push
ljmp
add
paddsw
or
imul
fs
inc
fnstenv
rorb
adc
mov
push
sub
dec
jo
stos
testl
sub
push
xor
stos
fucom
add
sti
or
iret
or
adc
bound
mov
mov
mov
rclb
inc
shrb
movsb
mov
push
cmp
sub
nop
adc
hlt
dec
jmp
hlt
lds
sub
add
add
xchg
add
adc
call
movsl
enter
and
add
daa
push
jo
daa
mov
aad
dec
in
adc
or
das
add
and
mov
daa
pop
jae
inc
xchg
and
js
loopne
mov
ss
loopne
lret
and
loope
pop
sbb
adc
jmp
jmp
xor
and
fs
loopne
or
in
fadds
and
pop
aas
mov
loopw
inc
mov
push
jns
popf
scas
in
xchg
pop
incb
fsts
sbb
lock
mov
mov
arpl
and
pusha
jmp
orl
push
push
sbb
push
xchg
and
mov
leave
data16
sbb
test
and
or
ds
adc
shrl
std
daa
int
or
lods
mov
fdivrl
testb
loope
daa
adc
es
mov
pop
shlb
adc
mov
sbb
aad
ret
ja
enter
test
or
add
and
pusha
or
mov
add
dec
enter
in
inc
in
pop
pop
add
dec
loopne
dec
mov
jg
dec
mov
sub
nop
or
dec
dec
inc
repz
cmp
popf
xor
ljmp
in
mov
insb
fcmovu
xchg
sbb
xchg
aas
or
jbe
mov
aaa
push
inc
out
inc
xor
imull
dec
outsl
mov
movsl
test
jbe
mov
mov
push
push
jo
div
ds
mov
inc
xor
insl
in
sub
pop
clc
add
movsl
mov
sub
in
or
add
jle
xchg
call
fwait
cmpl
je
sbb
xchg
int3
xchg
ret
in
jo
movsl
sbb
mov
add
loopne
loopne
dec
cmp
mov
lea
stos
add
lahf
popa
jmp
test
jb
jno
jne
dec
faddl
dec
jge
xor
es
push
in
add
mov
push
das
push
push
mov
shl
ret
add
xor
movsb
movsl
adc
sbb
xchg
push
mov
movl
add
orb
call
sbb
pop
cld
cli
roll
adc
mov
in
push
in
sahf
test
inc
cs
xchg
add
pop
sub
pop
dec
sbb
mov
stos
push
scas
int3
test
andb
and
divl
pop
sub
fildll
or
adc
outsl
rclb
outsl
or
jle
daa
dec
add
pop
fs
cmp
shl
data16
andb
cs
xchg
mov
lcall
cmpsl
add
add
mov
outsl
stos
cmp
lcall
mov
add
test
lcall
or
sbb
cmpb
or
gs
push
lcall
repz
xchg
push
cli
jmp
loopne
stos
sub
add
sub
mov
jns
jmp
decl
jmp
push
pop
dec
jge
arpl
jg
fistpl
cs
test
cmp
xchg
aas
repnz
outsl
mov
lock
clc
ret
jo
fisubrl
sbb
icebp
es
jb
mov
movsl
in
or
push
in
sub
hlt
hlt
addr16
add
fbstp
jno
add
adc
das
int3
fldl
out
sahf
dec
sbb
or
cmpsb
std
and
or
mov
outsb
lods
out
scas
add
and
fsubrs
sub
pop
mov
jb
inc
and
sub
out
mov
movb
jnp
add
stos
fistps
jbe
stc
std
add
push
xor
call
aas
mov
fs
xor
mov
sub
vpcomw
fwait
push
pop
icebp
pmuludq
jns
mov
adc
aad
ljmp
pop
ret
fcomps
xor
xor
jge
adc
xchg
call
into
inc
add
jg
or
xor
mov
mov
rcrl
notb
sub
inc
scas
xor
repnz
pusha
jle
pop
movsb
pushl
mov
dec
pop
test
sahf
fistpll
lahf
xchg
fcoms
pop
sub
mov
xchg
add
mov
xor
mov
jno
mov
mov
ljmp
and
add
and
call
js
push
mov
and
loop
cmpsb
std
push
sub
xor
jg
mov
add
push
insb
out
scas
in
push
ja
adc
stos
fildll
out
loop
scas
insl
scas
aaa
stos
in
loop
cmp
out
jne
ret
jp
lods
lea
add
mov
xchg
movsl
movsb
adc
les
mov
js
shll
imul
js
clc
mov
popa
mov
lds
repnz
aas
jo
cld
push
ret
jmp
add
sbb
cmp
mov
ret
imul
mov
mov
and
mov
and
into
clc
ret
xor
push
xchg
add
xlat
popa
es
mov
mov
mov
jg
sbb
aas
jnp
push
fcoms
dec
std
inc
sub
shl
pushl
adc
popa
pop
cli
les
jle
mov
outsl
push
ss
data16
mov
mov
mov
icebp
and
sbb
ret
hlt
aaa
addl
or
movb
pcmpgtd
sbb
mov
push
jl
lock
jmp
loope
mov
outsl
jb
push
jge
stos
push
enter
icebp
xadd
adc
into
add
fwait
sbb
sbb
mov
lret
rcrl
mov
lock
flds
loopne
arpl
jle
sti
das
subb
add
pop
dec
jecxz
inc
inc
nop
jnp
mov
push
sbb
add
jno
int3
cmc
inc
mov
jge
gs
lock
decl
push
scas
fsubl
push
lods
iret
icebp
cli
cmpsb
mov
push
ljmp
shrl
or
add
scas
add
inc
jns
inc
into
pushf
dec
mov
test
bound
mov
leave
jb
addb
das
xor
mov
out
decl
pushf
std
pop
pop
popf
push
add
fwait
mov
jo
das
adc
call
jmp
lea
cmp
sbb
fwait
and
push
sbb
add
dec
cmp
mov
sub
fdivl
andb
out
mov
jecxz
cmp
sbb
adc
loopne
scas
aaa
and
jbe
cmpsb
xchg
call
mov
mov
push
sub
mov
loope
xor
imul
lock
lret
mov
icebp
jg
fmull
mov
mov
rolb
inc
test
in
inc
mov
lcall
data16
in
and
rcrb
imul
cmp
mov
lret
dec
sbb
fsubp
scas
sbb
sbb
mov
es
push
jmp
pop
int3
sbb
aaa
test
sbb
pusha
push
subb
shrl
add
mov
cmp
inc
lcall
adc
out
les
into
xchg
dec
int
pop
and
movsl
jg
cli
and
or
mov
pop
in
dec
cmc
mov
xor
xchg
jge
lea
mov
outsb
mov
in
pop
stos
mov
movsb
popf
inc
sbb
lods
std
cmpsl
mov
test
out
cld
sbb
jbe
jb
jno
aaa
inc
xchg
inc
movsb
arpl
out
add
pop
sbb
mov
and
dec
push
xor
imul
lahf
push
jg
sbb
bound
sub
movsb
add
insl
sub
pop
test
jp
and
mov
subb
sbb
dec
add
mov
mov
lock
scas
dec
or
movsb
fiadds
push
inc
jge
mov
mov
add
push
shlb
add
hlt
lahf
mov
cmpsl
inc
pop
add
sbb
adc
lcall
fcmovbe
das
xor
stos
call
cwtl
push
xchg
aad
add
xchg
scas
lahf
outsb
xchg
les
sub
sbb
sbb
out
lcall
or
push
add
aaa
clc
sar
sbb
lea
adcb
add
idivb
lods
repz
outsl
fs
mov
not
sbb
or
or
movsl
lcall
jge
sbb
idivl
orl
inc
lahf
jle
js
inc
sub
cmc
icebp
dec
and
sar
out
lret
push
data16
inc
or
or
scas
mov
test
sub
dec
loopne
mov
cmp
outsb
add
aaa
je
fcomp
or
lret
inc
or
mov
int3
mov
xchg
fsubrs
and
xor
test
adcl
adc
mov
push
sbb
sub
mov
fwait
dec
sbb
pop
pushf
push
mov
xchg
in
test
adc
mov
adc
das
inc
push
mov
jle
or
fisttpl
loopne
in
sub
push
dec
add
loop
xor
mov
mov
add
jg
rolb
xchg
mov
divb
jmp
cwtl
and
test
mov
shrb
icebp
icebp
jmp
add
int3
mov
popf
ret
push
inc
sbb
and
xchg
aaa
adcl
enter
call
inc
lods
inc
xchg
imul
int
mov
and
or
std
sti
in
sbb
scas
scas
jp
fdivrs
xchg
test
sbb
cmpsb
test
mov
pop
cld
add
icebp
lods
add
pusha
dec
adc
mov
decb
push
and
sub
loopne
fmuls
push
push
pop
inc
push
adc
les
mov
add
push
cmp
std
and
test
mov
fdivrs
adc
scas
sub
sbb
add
pusha
mov
cmpsb
cld
lret
push
or
inc
ret
das
pop
inc
sbb
push
aam
add
jg
aam
subl
and
dec
inc
add
jmp
inc
imul
push
icebp
xor
push
cmpsb
call
ret
ffreep
decb
xor
ficomps
fbstp
insb
jbe
aad
pop
cmp
sbb
pop
ret
fsubrl
insb
mov
adc
outsl
clc
sbb
inc
outsb
push
lret
shrb
add
subb
pop
or
jge
jg
xchg
hlt
fsubs
push
jge
and
pop
test
mov
mov
inc
loope
loop
dec
nop
insl
icebp
fists
jecxz
aaa
add
lock
out
jp
push
sub
xor
cmpsb
clc
inc
sub
test
and
or
mov
pop
dec
mov
mov
xchg
ss
ror
add
in
xchg
mov
mov
mov
pop
shll
test
cs
and
sub
out
pop
mov
jmp
jmp
add
mov
cmp
inc
xor
xchg
pop
jno
mov
xchg
in
loopne
arpl
pop
test
bound
or
out
insb
fcomps
sub
add
pop
ffree
mov
in
jns
loop
pop
test
out
pop
mov
in
sub
lods
hlt
enter
fnstcw
xchg
in
insb
in
cli
mov
int
and
loopne
mov
les
lock
aaa
pop
push
sbb
enter
lahf
movsl
xchg
cli
ljmp
stc
cwtl
mov
mov
pop
push
inc
push
cs
icebp
pushl
xchg
xchg
loope
into
je
push
insl
insl
push
rcll
push
push
in
test
lock
sbb
mov
test
push
dec
std
in
js
jno
fbstp
push
mov
scas
sarb
loopne
and
test
mov
movb
jbe
and
mov
arpl
pop
push
clc
gs
pop
add
ret
repnz
jbe
pop
and
push
cmpsl
in
lods
cmp
lret
incb
leave
std
fs
fcoms
in
mov
loop
jno
push
loopne
fdivr
dec
gs
cmp
pop
push
xchg
not
inc
xchg
xor
leave
test
mov
lock
call
popa
aaa
stos
xor
inc
loop
mov
inc
adcw
rcr
mov
int
sub
movsb
inc
jo
dec
push
loop
aas
lods
int3
xor
ss
lock
inc
icebp
loopne
pop
rolb
jp
or
add
pop
xor
and
push
sub
dec
mov
push
jmp
and
mov
sub
pop
test
out
pop
and
jmp
add
xchg
outsl
lcall
lods
pushf
mov
and
mov
arpl
fdivs
add
sbb
lret
lds
mov
sub
gs
inc
jns
sbb
push
push
inc
mov
leave
scas
push
lcall
fldcw
decb
jg
sbb
lea
adc
pop
fbld
aas
add
jl
xchg
leave
popa
rcl
mov
inc
cmpb
out
cmp
mov
pop
dec
cwtl
mov
repz
jo
cmp
add
sbb
loop
sahf
ret
fwait
cmp
sbb
sbb
sub
dec
sub
outsl
es
mov
rcrl
scas
lods
cmovne
testl
ret
mov
pop
jp
fstl
xchg
pop
adc
sbb
insl
pop
insl
mov
mov
loope
loope
jne
sub
jl
sub
mov
dec
flds
rclb
adc
or
les
and
adc
lods
outsb
and
inc
fcmovu
dec
fimull
mov
xchg
fstps
scas
or
loopne
and
jg
mov
inc
call
pop
mov
int
inc
ret
or
pop
andl
jnp
xchg
je
pop
sbb
inc
jo
inc
popf
sub
cwtl
pop
or
mov
iret
fmull
gs
fisttpl
mov
inc
and
call
je
cmp
adc
pushf
loop
xchg
imul
push
sbb
pop
jbe
pop
adc
add
mov
xchg
xchg
pop
out
xchg
rcrl
add
sub
xor
inc
mov
push
mov
gs
rcrl
scas
ds
or
mov
outsl
jmp
fsubp
pop
pop
sbb
dec
jmp
push
lcall
pop
jmp
sbb
xor
rorb
or
imul
fistpll
add
add
je
and
mov
imul
stos
push
mull
bound
lods
add
mov
sbb
cmpsl
adc
add
in
pop
sbb
and
inc
bound
add
mov
int3
dec
and
mov
iret
dec
jo
mov
or
jmp
shlb
gs
out
in
and
push
adc
pop
in
sar
push
mov
cwtl
hlt
int3
clc
pop
imul
add
cld
decl
mov
add
add
mov
jne
sub
cli
pop
mov
dec
pushf
daa
movsb
add
lahf
cld
test
mov
jno
sub
std
jno
test
add
sbb
add
lock
push
push
add
fwait
push
sar
xor
mov
or
out
mov
jp
test
sahf
orb
fisttpl
mov
mov
fsts
xchg
fildll
rcl
test
sbb
cwtl
jl,pt
mov
mov
jg
repz
inc
fstp
add
loope
outsb
add
out
inc
mov
add
imul
jle
sub
insb
jg
shr
xchg
sbb
xchg
mov
dec
shll
or
aad
lods
outsl
adc
pop
inc
pop
fcoms
cs
xchg
cmc
mov
fcmovnbe
mov
add
inc
dec
movsl
cwtl
aam
xchg
mov
cli
jg,pn
flds
add
dec
subl
js
dec
clc
inc
xor
push
mov
incl
dec
shlb
pop
and
scas
push
jns
gs
in
in
cmp
repz
jle
rorl
stos
jl
testb
sub
imul
outsl
mov
mov
mov
xchg
loop
push
xchg
sbb
aam
sub
test
cmpsl
mov
xor
insb
mov
mov
jno
pop
fsubs
sub
jecxz,pn
push
mov
mov
enter
sarb
stos
pop
push
dec
call
xchg
dec
or
outsb
sub
pop
pop
loop
and
int3
ret
clc
outsb
add
daa
fs
sub
incl
jl
out
mov
testb
adc
and
ljmp
fwait
pushf
addr16
mov
jo
inc
clc
pop
loope
pop
xchg
sbb
push
lea
xor
pop
cmp
ds
xchg
dec
loop
jle
sarl
out
popf
push
pop
je
mov
inc
pop
and
sahf
dec
pop
push
js
aad
int
lret
ss
xchg
sbb
add
mov
aad
cmp
mov
xor
pop
mov
cs
pushl
and
lret
cmpsb
adc
stos
lret
lock
jl
add
xchg
add
loopne
jl
jp
push
push
pop
rol
scas
leave
sbb
loope
or
int3
push
lea
mov
or
fisubl
out
scas
lcall
and
mov
cmc
aas
cmp
bound
roll
fnstcw
add
jne
jge
fldcw
xor
adc
xchg
cmp
sahf
jo
and
mov
inc
dec
pop
stos
ljmp
imul
jle
mov
cmc
mov
call
push
sbb
pop
jl
psrad
test
clc
fbstp
into
add
push
decb
add
out
push
adc
insb
outsb
sbb
jbe
inc
bnd
outsl
or
push
mov
inc
and
jae
push
inc
rorb
cmp
lods
call
mov
add
or
cmp
xor
repnz
inc
sar
pop
jmp
lock
cmp
mov
test
icebp
pop
out
jge
jb
ds
sbb
int
adcl
jg
xchg
out
jp
pop
mov
adc
incl
insb
insl
dec
ja
dec
sbb
mov
or
mov
and
jge
add
mov
in
testl
adc
mov
xor
call
cwtl
rorb
outsl
bound
and
lahf
test
lcall
imul
outsb
mov
jb
out
cs
enter
arpl
sub
rorb
jmp
mov
add
clc
xchg
inc
int3
dec
and
imul
xchg
mov
push
push
add
popa
inc
incl
in
and
and
les
lret
out
xor
push
or
add
xchg
jne
movsl
ret
outsb
add
or
xchg
mov
adc
ja
out
inc
push
into
mov
adc
les
jne
dec
stos
adc
and
mov
faddl
notl
add
into
fldt
jecxz
les
out
adc
xchg
es
aas
sbb
and
add
lcall
adc
add
stos
inc
sbb
xor
popf
int
lock
push
lea
push
in
pusha
aaa
les
mov
push
movsb
add
test
and
xchg
mov
xchg
and
jl
repnz
add
test
ds
sub
aaa
outsb
push
xor
pop
bound
lcall
hlt
mov
lret
jecxz
mov
pop
adc
mov
ss
dec
push
dec
pop
add
mov
xor
hlt
add
jae
fcomps
into
cmpsl
adc
lret
jb
mov
popa
aaa
cmp
mov
pop
add
aaa
mov
and
and
cmp
hlt
inc
mov
mov
jns
push
push
fcmovbe
lcall
mov
and
cli
sbb
mov
push
clc
ljmp
mov
sbb
mov
aam
inc
cld
sbb
sub
dec
jl
movsb
stos
sbb
stos
loopne
or
dec
add
int3
rol
xor
repnz
getsec
sbb
int
daa
in
cmpsb
jns
and
push
sub
es
ds
or
pop
xor
inc
cmp
or
test
cmp
in
clc
incl
mov
je
rcll
mov
push
es
push
pop
out
cltd
scas
out
lcall
push
add
in
mov
fstpl
sbb
pop
test
arpl
inc
int3
sbb
cmp
nop
sbb
push
leave
stos
xchg
loop
nop
call
popa
and
mov
mov
add
lcall
std
call
pop
pop
add
jb
push
jno
push
jb
cmpl
jno
cmpsl
push
ja
mov
cmp
test
aas
sarl
gs
inc
cld
das
xor
into
repz
or
cld
jmp
fimuls
loop
push
cli
inc
sbb
scas
clc
mov
add
adc
and
add
pop
fcoms
decb
add
fbstp
loopne
lds
movsl
add
arpl
addr16
sub
sbb
mov
xchg
mov
ss
repnz
cld
imul
icebp
pop
lahf
addr16
add
clc
or
outsb
lahf
out
or
sbb
lock
ds
ret
std
sahf
sarb
jmp
stos
je
pushf
push
jmp
add
repnz
and
insl
jge
cs
shl
test
call
cmp
dec
jb
fildll
das
and
ret
mov
lcall
xchg
cmp
notb
adc
mov
test
cmp
push
inc
sub
loopne
lret
mov
cmp
jle
adc
dec
arpl
and
cs
adc
aaa
jl
scas
push
inc
pusha
mov
andl
push
insb
add
imul
dec
ficompl
mov
pop
cmp
and
push
mov
push
data16
cmp
out
cmc
mov
out
adc
shrb
cmp
imul
test
push
push
rclb
xchg
sub
pop
sub
testb
xchg
fsub
cli
adc
into
int3
scas
ss
add
mov
adc
ret
push
inc
add
pop
push
xor
loope
lock
lret
cmp
out
repnz
pop
mov
pop
mov
ret
pop
ret
les
add
test
jp
fidivs
adc
fnstenv
push
push
fsubrl
xor
testb
shlb
out
sbb
cmpsl
push
mov
ficoms
mov
incb
or
dec
bound
sub
push
jl
jp
cmpl
ljmp
call
add
or
or
add
or
pop
sbb
mov
loopne
xchg
xchg
lret
add
mov
cmpsb
aam
push
push
fcmovne
lods
jmp
or
es
icebp
mov
outsl
fsubrl
loope
fs
cs
mov
jp
stos
push
mov
cmpsb
ret
push
aad
dec
andl
sub
sub
push
outsl
xor
out
push
and
ss
nop
push
enter
push
lea
faddl
test
test
addl
hlt
jmp
add
xlat
aad
rclb
cmpb
dec
and
xor
sbb
mov
push
and
hlt
adc
mov
push
adc
dec
inc
mov
dec
add
mov
enter
stos
dec
hlt
cld
mov
les
inc
push
sbb
popf
je
lret
push
lock
jno
outsb
imul
test
mov
dec
rclb
incb
stos
mov
incb
mov
call
faddl
pop
mov
cmp
dec
movsb
ret
sahf
cs
in
mov
inc
shrl
adc
and
sahf
mov
mov
cwtl
clc
or
out
push
cmp
jno
scas
push
or
add
lods
pop
cmpsb
and
sbb
sub
cmpsb
loope
adc
ja
xor
lret
push
ss
inc
mov
inc
add
sub
mov
adcl
cmp
mov
xchg
jecxz
dec
iret
dec
cli
or
mov
add
clc
sbb
jns
or
rcrl
push
dec
adc
loopne
inc
sbb
mov
mov
mov
and
es
lods
ja
or
add
addr16
adc
hlt
mov
sbb
dec
mov
mov
mulb
gs
sub
shlb
insb
clc
sub
popa
mov
lret
inc
mov
faddl
shrb
sub
inc
pop
or
sub
lret
fiaddl
iret
dec
lahf
sahf
ss
ret
or
ljmp
jl
mov
cmp
movsl
pop
add
es
cmpsb
inc
sarl
jge
icebp
pop
and
hlt
add
test
add
popf
or
mov
hlt
jle
and
jp
lcall
or
push
dec
sbb
adc
gs
add
mov
dec
add
xor
jle
sarb
fstpl
mov
sbb
sbb
ss
and
jp
imul
imul
or
ss
or
lahf
test
or
repz
dec
or
lock
mov
push
add
mov
mov
inc
std
outsl
dec
push
lahf
mov
cltd
cmp
fdivl
fcomi
addr16
cmp
add
out
shl
cld
xchg
add
movsb
and
add
mov
pop
movsl
xchg
mov
lods
jg
mov
cltd
and
mov
ja
or
push
ljmp
test
pop
and
sub
add
dec
xor
ljmp
fisttps
push
xchg
jmp
mov
add
lcall
xchg
jmp
or
rclb
adc
sub
fists
in
mov
nop
pop
test
ret
mov
dec
mov
or
fisttpll
nop
sbb
inc
adc
mov
pop
and
fistpll
or
mov
in
or
push
inc
scas
test
mov
loopne
lods
bound
cmp
outsl
mov
movsb
xor
lods
shrl
cmp
push
mov
das
std
cltd
cmpsl
ja
rorl
mov
sahf
cs
fwait
sbb
nop
or
and
sbb
ljmp
mov
xor
or
fsubrp
inc
loopne
test
jmp
sub
pop
hlt
mov
fwait
out
push
cmp
shlb
inc
mov
sar
or
lods
add
fwait
or
inc
add
mov
adc
sbb
lods
clc
or
and
xchg
outsb
jp
inc
cld
mov
jno
mov
adc
cmp
adc
pusha
pop
cmp
cmp
inc
nop
dec
cmp
mov
outsb
ret
pop
subl
jecxz
clc
ljmp
jp
pop
out
pushf
sub
dec
hlt
stos
decl
mov
in
aas
push
in
mov
ljmp
divb
sbbb
fwait
cmp
iret
xlat
sub
mov
es
jmp
mov
jbe
pop
ljmp
dec
lret
inc
je
cld
inc
shll
cmpsl
push
imul
outsl
out
mov
pop
pop
cmp
addr16
shlb
pusha
mov
int3
test
pop
jl
cld
or
jnp
xchg
fdivr
push
pushl
jmp
push
add
sbb
and
sbb
data16
rcll
dec
cmc
jbe
ljmp
fwait
je
mov
js
mov
insl
add
or
ss
inc
stos
jmp
cmp
or
inc
inc
adcl
dec
xlat
sub
daa
sbb
jns
shrl
mov
mov
icebp
pop
mov
pop
addl
mov
inc
fwait
outsl
ss
push
cmp
cli
mov
adc
inc
mov
cmp
mov
mov
mov
lds
rolb
fistpl
mov
push
and
add
mov
orb
or
cmp
xchg
add
iret
fucomi
push
and
mov
mov
mov
push
rep
aaa
cld
incl
adc
xchg
sub
push
and
lods
ret
clc
jns
mov
cmc
punpckhbw
mov
lret
mov
inc
call
push
arpl
jnp
cmp
mov
andb
cmp
lahf
sbb
clc
lcall
mov
and
push
mov
pop
jb
shrl
lret
cmp
inc
ss
fdivrs
jno
xchg
shll
adc
push
std
cmp
ja
pop
jmp
enter
arpl
stc
add
jg
pusha
call
in
jmp
bound
sti
lret
and
scas
add
adc
or
cmp
and
test
scas
mov
ret
es
std
mov
lods
aaa
rorb
lcall
xor
stc
cmpsb
xchg
std
data16
jle
pop
pop
adc
in
push
jl
fdiv
call
push
outsb
mov
pop
inc
roll
lods
add
mov
cwtl
sbb
call
push
sub
cmp
rcrb
mov
jmp
sbb
fwait
neg
adc
insl
mov
sti
jns
inc
loop
lods
pop
lds
out
push
or
mov
jne
cmpsb
pop
in
iret
and
push
cli
filds
es
rcll
lods
jmp
out
dec
int
das
push
rcll
xor
cmp
mov
stos
je
subb
push
aas
scas
mov
negb
adc
jb
push
loop
add
enter
pushf
fwait
das
clc
jg
es
ret
fcmove
shlb
add
hlt
les
repz
out
xchg
cmc
add
adc
into
pop
inc
adc
hlt
fsub
and
and
imul
test
inc
push
scas
jo
mov
jae
sbb
mov
lret
adc
call
and
mov
clc
jg
and
push
incl
shrb
jmp
jle
aaa
pop
fisttps
shll
jg
cmp
out
ljmp
stos
add
add
out
or
push
or
xlat
sub
stc
jo
data16
xchg
push
outsb
mov
popa
ljmp
ds
hlt
inc
sub
mov
data16
rcrl
or
test
ficoms
dec
dec
lcall
leave
ret
or
jg
cmp
sbb
cs
xchg
pop
push
or
push
add
push
out
and
add
lea
jl
sbb
addb
test
push
adc
jne,pn
inc
das
les
add
and
das
push
rcll
inc
mov
sar
or
sub
mov
popfw
loopne
mov
loopne
test
lahf
mov
mov
or
pop
nop
mov
inc
inc
movsb
lock
add
push
sub
sbb
pop
mov
mov
fs
adc
lock
sahf
pushf
cltd
and
adc
jg
insb
push
push
mov
scas
sti
sahf
fwait
lock
test
xchg
cmp
loopne
xor
adc
sar
or
loope
xor
ret
jp
lea
cli
rcrb
loopne
test
xchg
add
fdivp
push
imull
fldl
rcl
mov
sub
sub
rolb
add
jl
test
or
add
imul
jp
mov
movsl
test
out
xor
test
push
les
rcl
cmp
mov
inc
movsb
shll
push
cmc
aaa
inc
sahf
loopne
test
pop
test
cmp
jmp
inc
sbb
test
mov
mov
fistpll
jnp
adc
lock
sarl
arpl
sub
xor
cmpsb
and
les
std
es
mov
idivb
gs
mov
mov
add
jecxz
scas
adc
or
mov
pushf
dec
icebp
call
sub
ret
out
jge
cs
lcall
js
fst
push
mov
cld
aas
push
mov
push
lods
sbb
sti
in
and
sbb
aas
std
loop
je
sbbb
push
enter
aaa
push
mov
aas
cs
push
out
pop
sbb
push
xchg
push
jmp
loope
mov
sbb
sbb
add
insl
add
xor
or
ljmp
lcall
sub
mov
sarl
repnz
inc
incl
lods
cli
pushf
and
mov
mov
jns
popf
jno
pop
sub
mov
filds
push
pop
cmp
pop
cmp
sub
clc
adc
xchg
inc
mov
or
dec
pop
dec
decl
or
lds
fadd
cmc
xchg
pop
push
xor
ret
mul
mov
js
fwait
inc
stos
sbb
mov
fwait
ret
and
std
mov
add
cmp
xor
in
fs
aam
pop
xchg
outsl
popf
sbb
ret
xor
cmp
out
nop
pusha
roll
sbb
negb
je
xchg
dec
mov
xor
movsl
mov
loop
pusha
divl
inc
cmp
cld
ds
or
loop
jl
push
movsb
pusha
sbb
cld
and
and
ja
jp
sub
push
cmp
dec
cmp
cwtl
jl
mov
sarl
pusha
and
push
sarb
mov
mov
or
add
fs
xor
stos
hlt
inc
int3
mov
lds
lcall
or
stos
outsl
pop
addl
add
loopne
loopne
addr16
dec
xor
pop
js
cmp
cli
pop
cs
roll
test
sahf
mov
ret
cs
inc
ljmp
pusha
rolb
lods
push
push
hlt
fstpl
andb
fisubs
ret
test
loop
jp
imul
inc
pop
lahf
mov
sbb
cmp
nop
push
push
sbb
cmp
dec
cld
xor
bound
loopne
lods
and
divb
sbb
stos
pop
jbe,pt
adc
cwtl
sbb
fistps
cmp
cmpsb
mov
inc
imul
mov
sub
ja
imul
fwait
aam
add
adc
mov
jbe
ficoms
or
mov
mov
movsb
inc
dec
rolb
orb
add
outsl
adc
cmpb
inc
jg
sbb
inc
cmp
mov
cwtl
insb
add
loope
ret
shlb
adcl
mov
insb
add
dec
shll
mov
xchg
adc
clc
pop
js
mov
sub
pushf
jb
pusha
in
inc
mov
data16
fbld
add
insb
sub
xor
jle
or
cmc
pop
pop
mov
lods
mov
cltd
xor
jo
ret
cltd
call
movsb
ret
movsl
mov
cmp
mov
add
mov
push
ljmp
mov
xor
fdivr
je
jl
add
ss
clc
cwtl
adc
add
cmp
add
fsubs
mov
cwtl
mov
or
out
xchg
add
lock
cli
repnz
or
sub
loop
push
mov
mov
stos
fisubs
push
mov
stos
mov
adc
push
stos
cld
fiadds
shl
push
ja
and
pusha
subb
adc
es
in
ds
mov
repnz
pop
cmpsl
jns
outsl
xchg
das
jb
add
rcrb
fs
jge
lods
cmp
sbb
push
loop
test
stos
imul
fiaddl
fistpll
push
and
xchg
xchg
or
in
xchg
push
fldl
add
sub
shr
inc
popa
stos
sbb
aas
fmuls
dec
adc
xchg
push
inc
mov
add
lds
adc
xor
ret
pop
sbb
inc
mov
sbb
sbb
xor
out
incl
push
popa
arpl
inc
cmpsl
mov
fldpi
int
dec
push
lock
imul
ret
js
mov
mov
pop
lret
loopne
push
jo
cltd
ljmp
int3
sub
in
push
mov
xor
inc
pusha
fs
lret
ljmp
ret
jb
fisubl
int3
shl
andb
ret
xor
inc
in
sti
aam
pop
or
sub
das
push
lock
push
and
repnz
or
ret
aad
or
fsub
in
movl
pop
cwtl
and
xor
add
sub
les
mov
sbb
imul
cmp
fcmovne
dec
push
pop
sbb
loopne
cmpsb
orb
mov
scas
sub
sbb
push
mov
push
fs
mov
outsl
ljmp
shlb
mov
and
sahf
jg
rolb
call
push
leave
xchg
push
lock
imul
sbb
adc
ss
xchg
imul
sub
xchg
fsubrp
sbb
xor
mov
inc
sahf
ljmp
out
mov
xor
lret
adc
mov
mov
ja
push
mov
sahf
mov
hlt
push
fstpl
repz
test
pusha
jo
pop
in
jmp
lcall
mov
lods
push
xchg
pop
push
rol
lret
loop
jle
test
cmp
test
push
jle
pop
lds
add
add
adcb
popa
add
les
clc
push
pop
addr16
icebp
leave
cld
scas
or
mov
ds
xchg
stos
mov
jp
cmp
or
adc
add
loop
mov
xchg
xor
jge
das
insb
movsl
jmp
loop
pusha
jle
push
ja
inc
cld
cmp
fstl
add
mov
dec
cli
inc
sbb
call
std
ror
mov
adc
mov
jo
or
xor
loop
ret
jmp
pop
jge
push
nop
subb
add
or
mov
insb
pop
cmp
mov
mov
or
mov
insb
cmpsl
sbb
jbe
pop
pop
add
lods
nop
addb
sub
sbb
mov
xor
pop
mov
dec
mov
cmp
jp
stc
inc
push
testl
sbb
or
rolb
insl
sub
in
adc
jb
aam
jle
push
lods
sbb
add
sub
subl
data16
adc
pop
pop
enter
sbbl
insb
add
sahf
mov
push
notl
insl
add
sbb
inc
and
push
insb
and
pop
cmp
stos
sbb
or
outsl
repz
add
push
mov
jmp
lahf
ds
cmovns
inc
inc
outsb
pop
xor
mov
movsb
jp
cld
sbb
lods
xchg
push
jp
jp
nop
sub
mov
sub
leave
ficoms
mov
fstpt
xchg
xchg
test
add
ret
pop
sbb
add
out
pop
movsb
pop
adc
pop
adc
mov
sbb
insb
fdivrs
out
dec
cli
push
push
mov
decl
test
mov
incl
cli
lcall
cmp
jp
movsb
jg
push
and
aam
daa
loopne
mov
mov
idiv
mov
aad
mov
aas
push
push
pop
xor
fst
outsb
sahf
mov
push
dec
xchg
test
adc
and
add
xchg
ja
out
jo
loop
sbb
lock
test
xchg
test
outsb
jbe
outsl
push
sbb
and
or
loopne
mov
jg
sub
repnz
faddl
imul
xor
addl
lock
in
insl
push
sti
int
or
inc
mov
dec
lock
xchg
clc
lcall
cmp
jp
xchg
adc
cmp
pop
aas
insl
cmp
fmul
inc
push
addr16
and
mov
ljmp
pop
add
and
mov
aad
repnz
dec
outsb
push
sbb
insl
xchg
or
adc
rolb
cwtl
enter
lcall
push
test
nop
add
clc
push
push
jmp
xchg
cwtl
sbb
add
adc
jno
std
data16
jb
cli
movsl
xor
xor
das
les
push
adc
or
sbb
mov
mov
and
inc
or
int3
cwtl
sbb
mov
das
rclb
aam
dec
inc
aam
add
jne
inc
cmp
mov
icebp
mov
add
mov
pop
clc
enter
stos
test
cmp
mov
int3
ds
divl
outsb
sbb
sar
je
jmp
or
push
pop
fwait
pop
shll
add
mov
mov
loope
inc
std
mov
scas
mov
cli
pushf
clc
icebp
push
cld
mov
jbe
xchg
hlt
sbb
inc
mov
icebp
mov
xorl
mov
jo
pop
sti
loopne
xor
or
pushl
adc
or
push
sbb
jb
inc
mov
daa
or
push
pop
inc
cltd
xor
push
outsl
push
outsb
jmp
mov
dec
and
push
inc
fsubrs
pop
and
mov
ljmp
aaa
sbb
data16
imul
or
fsubrs
xchg
pushf
xor
jge
inc
sbb
mov
js
and
add
push
and
es
aas
movsb
lds
add
lea
pop
rolb
sbb
int
xchg
adcl
push
js
scas
test
and
fs
test
mov
imul
xchg
sbb
lahf
rorb
mov
push
addb
das
xchg
icebp
jp
add
and
ret
mov
ret
cwtl
add
push
adc
sahf
inc
sbb
ret
xor
out
jno
mov
pop
dec
clc
add
rcll
loop
add
fcoml
mov
inc
adc
rcll
int3
sub
call
lds
or
mov
addr16
ret
lds
jp
in
mov
cmpsb
pusha
push
scas
pusha
and
stos
push
es
call
cmp
mov
cmp
testl
pop
movsl
lcall
lods
sti
push
cmpsb
jecxz
adc
js
cmp
jp
pop
lods
xor
lahf
pop
lret
push
mov
ret
lods
add
filds
out
pushl
neg
data16
femms
jg
sqrtps
sub
push
test
push
fistl
fstpt
add
sbb
jle
jg
and
sbbl
pop
movsb
xor
ret
adc
and
sub
or
cs
insb
push
add
ret
add
push
shll
loopne
cmp
mov
mov
pop
xchg
in
rcll
sbb
or
bound
mov
inc
inc
int
jg
sbb
int3
inc
adc
outsb
enter
lods
sti
idivb
push
mov
mov
mov
push
repz
push
mov
push
mov
xchg
cmp
arpl
or
add
enter
sub
push
rolb
dec
enter
cli
push
xadd
negl
std
mov
js
mov
sahf
xchg
jb
cmp
lods
add
rcr
pusha
lods
ljmp
xchg
in
insb
add
add
leave
inc
je
stos
clc
lahf
adc
mov
jmp
cld
mov
inc
popf
jl
add
movsb
xchg
sub
out
cli
das
aam
pop
pop
nop
push
adc
push
inc
jg
jge
fsubl
jg
fmull
sbb
aad
or
les
call
or
push
jo
add
test
dec
or
pop
test
lea
inc
sub
aad
adc
nop
push
roll
nop
je
pop
cld
adc
ret
and
ds
fsubrl
inc
inc
jle
mov
mov
push
sbb
shr
dec
loope
dec
jle
sbb
addr16
sti
or
int3
cmp
cld
or
test
mov
ret
cli
add
mov
outsl
mov
sub
les
dec
dec
inc
imul
sub
pop
test
sbb
adc
xchg
inc
mov
dec
adc
xchg
ss
out
iret
and
mov
es
inc
es
jae
ucomiss
hlt
mov
rcl
push
add
mov
sarl
repnz
xchg
push
in
icebp
jmp
cwtl
testb
mov
adc
nop
mov
cmp
fs
jb
insb
push
scas
nop
ds
and
xor
inc
cld
add
xlat
jmp
ficoml
loopne
mov
enter
lods
add
dec
add
fildll
ret
fs
push
xchg
rorb
jl
pop
ja
aam
or
orl
or
cmpsl
and
insl
ret
xchg
sub
sarl
inc
sar
cmc
dec
ljmp
jo
inc
jp
stos
mov
dec
add
or
fwait
mov
repnz
push
movsb
stos
lods
test
mov
lret
mov
sbb
decb
push
dec
ja
mov
xchg
pop
in
add
enter
pop
sub
mov
mov
pop
fcompl
sub
pop
mov
push
jg
inc
push
aad
sub
pop
stos
mov
mov
add
and
mov
jge
mov
xor
bound
fisttps
pop
dec
cmp
bound
ret
sbb
nop
push
and
inc
shlb
jmp
jne
fmuls
in
out
push
mov
mov
cld
aas
mov
sub
aaa
jmp
or
add
cmp
dec
ficoml
cmp
jne
jbe
ficoms
mov
sbb
js
imul
int3
mov
add
push
ret
mov
push
push
hlt
outsb
add
enter
pop
arpl
lahf
lods
hlt
and
das
mov
data16
sbb
adc
les
pusha
dec
call
repz
mov
nop
mov
cltd
sbb
out
xchg
add
daa
scas
movsb
sub
push
push
pop
sub
in
lock
mov
sub
mov
jmp
fnstcw
mov
pop
mov
inc
cs
pop
scas
stos
ja
std
enter
adc
ja
mov
pop
add
in
cmp
dec
sbb
cs
pop
adc
push
inc
shrl
jge
stc
sbb
cld
pop
sahf
sahf
add
jmp
pop
loopne
jle
hlt
aas
je
mov
or
jle
dec
push
es
lods
cmp
push
mov
ja
or
in
mov
sti
sub
nop
jl
mov
add
stos
mov
testb
cwtl
pop
dec
push
xchg
sub
lea
lea
sub
sbb
add
icebp
sub
mov
rorb
lret
dec
mov
sbb
les
mov
cmp
mov
cs
pop
pop
push
or
mov
jb
shl
sbb
jb
jbe
cmp
mov
cwtl
inc
bound
fistpl
stc
mov
adcb
xor
inc
cli
mov
cld
lahf
lods
and
and
sti
mov
mov
mov
fidivrl
test
push
ror
popa
cmp
lcall
out
insl
mov
insb
adc
icebp
pop
cli
add
rolb
call
sbb
das
pop
cld
lds
inc
sub
lea
sub
leave
dec
mov
pop
test
sbb
lahf
fsubp
mov
stc
cmp
je
cmc
adc
mov
imul
and
clc
dec
xchg
pusha
ret
inc
pushl
pop
xlat
jo
fwait
push
pop
cwtl
adcb
aad
gs
incb
test
cmp
js
shll
pop
loopne
dec
stos
xchg
out
pop
clc
add
mov
enter
mov
inc
add
xchg
sarl
loope
mov
pop
jo
fcoms
out
inc
scas
lock
mov
sub
ss
xchg
push
pop
mov
fnsave
sti
xor
int3
dec
sahf
testl
fildll
jmp
mov
ss
loopne
push
push
mov
imul
add
imul
lahf
adc
cmp
pushf
push
out
rep
adc
pusha
in
sarb
pop
push
aaa
add
dec
mov
ret
sbb
and
data16
fldl
lret
mov
repz
jbe
sti
aaa
push
mov
mov
inc
mulb
or
test
je
mov
mov
add
mov
jmp
mov
push
insl
pop
push
bound
pop
mov
or
mov
int
fistps
xchg
shlb
fstpl
jmp
dec
pop
insl
pop
stos
fcmovne
lds
repz
mov
shll
or
or
push
or
or
and
push
pop
mov
sbb
cmp
dec
xor
sub
loope
mov
lods
add
lods
movsb
shlb
jge
jmp
std
iret
xor
mov
lcall
pop
scas
and
into
mov
cmpsb
push
sbb
ss
faddl
add
add
push
mov
adc
adc
insl
xchg
aam
hlt
push
es
xor
pop
pop
scas
push
mov
jmp
ss
or
mov
jae
push
lret
call
mov
shlb
mov
sub
and
jg
lock
nop
mov
cmp
xchg
std
add
jmp
xchg
mov
adc
or
mov
pop
sbb
jo
movsb
mul
ret
insl
je
pop
pusha
add
cs
aaa
cmpsb
xlat
add
cld
push
inc
mov
push
sub
in
out
pushf
subb
rorl
sbb
iret
ljmp
sbb
je
stos
mov
jmp
mov
mov
clts
sbb
and
mov
pop
int3
xchg
cmp
or
loop
jmp
inc
or
sub
pop
daa
outsb
out
dec
pushl
and
push
jg
fidivrs
mov
loop
jb
icebp
adc
pop
push
call
inc
sub
and
add
or
scas
stos
div
and
mov
in
es
gs
sub
test
fs
dec
enterw
or
jnp
jae
inc
popa
push
jp
sbb
int3
out
mov
mov
roll
dec
out
jle
jg
outsb
or
roll
jle
mov
bound
lock
push
push
popa
pop
or
loop
aas
mov
cs
incl
aad
jl
lods
xchg
inc
fwait
inc
jo
filds
jge
test
inc
jl
shlb
xchg
add
dec
or
sbb
push
push
sub
and
xchg
xorb
fistps
insb
lock
aam
and
mov
loop
push
mov
cmpsl
icebp
or
cmp
stc
cli
mov
jle
and
outsb
aas
adc
sub
ljmp
arpl
clc
out
add
mov
or
jmp
rcll
hlt
xchg
hlt
xchg
aaa
fiaddl
rolb
fcomi
cmpl
jp
test
sub
movsb
shrb
cmp
push
fistpll
vmaxsd
adc
call
xor
sbb
jo
subb
repnz
ret
ret
jg
sub
pop
pop
pop
decb
pop
sar
scas
mov
sbb
out
jle
arpl
mov
clc
mov
cmp
cs
outsb
clc
sub
out
jo
pop
int3
das
xchg
lods
mov
xlat
out
inc
int3
fmul
adc
nop
ds
inc
cwtl
cmc
cmpsl
sarb
insl
add
cld
sbb
into
push
lret
aad
mov
push
push
sub
xchg
push
insl
outsl
std
es
inc
mov
daa
iret
decl
cmp
cs
push
insl
dec
adc
jg
mov
cli
out
dec
or
push
sub
mov
jl
jne
jae
dec
orb
neg
fmul
xor
ret
test
sub
jmp
fistl
fistl
divl
mov
jo
es
repnz
or
andb
scas
in
cmovs
hlt
imul
cmp
ljmp
xlat
fucomi
dec
lods
das
cwtl
or
sub
or
adc
clc
adc
add
dec
sbb
mov
popf
fcmovu
jnp
mov
dec
xchg
and
std
stos
nop
jle
jp
mov
dec
lret
out
cmpl
lcall
outsl
cld
std
sub
dec
or
jne
cmp
sbb
inc
sub
or
in
nop
lcall
push
inc
mov
scas
inc
push
mull
lods
jmp
jbe
xor
movsl
push
mov
sarl
out
lret
sub
dec
cmc
mov
add
mov
mov
pushf
inc
sti
cmp
rcll
fnstenv
lods
mov
fwait
inc
fdivl
xlat
mov
pop
push
and
push
mov
xchg
cli
mov
dec
adc
mov
and
clc
adc
sarl
lock
xchg
ret
pop
hlt
push
movsb
jb
fsubrs
push
push
test
xor
pop
dec
lock
mov
pop
ficompl
add
lea
push
rorb
pushl
mov
xor
hlt
rol
push
cmp
inc
stos
clc
push
sbb
mov
adc
inc
dec
mov
cmp
cmp
out
xchg
adc
gs
inc
loopne
jmp
hlt
jno
mov
and
scas
clc
push
add
rcll
cmp
mov
cmp
lods
adc
icebp
dec
sub
sub
cli
fldcw
mov
subb
push
imul
mov
cmp
push
dec
lods
filds
cmp
mov
fimuls
inc
ljmp
jmp
out
cmp
divb
xchg
call
pop
loopne
mov
pop
mov
dec
sahf
dec
orb
xor
push
pop
and
repnz
rorb
push
xor
sbb
ljmp
pop
push
decl
loopne
inc
xchg
mov
mov
mov
outsl
je
pop
mov
lods
pop
jmp
push
test
adc
rcr
arpl
lret
pop
shl
es
inc
test
lods
aad
or
xor
mov
sbb
nop
xor
xor
or
jno
mov
xlat
orb
push
pop
mov
xlat
push
shll
in
in
push
push
sahf
cmp
imul
sbbb
subb
mov
pop
daa
adc
jp
add
shrb
inc
inc
sbb
push
xor
mov
xchg
mov
sahf
sti
roll
shl
push
faddl
push
insb
test
push
push
sbb
or
mov
jno
ret
nop
negb
lods
sub
mov
je
jno
mov
test
push
mov
xchg
test
sbb
bts
adc
xlat
cld
add
or
stc
sub
daa
in
test
push
sbb
or
pop
inc
dec
inc
lods
or
sub
shrl
loop
cmpsb
jno
iret
data16
call
cmpb
xor
idivb
fistl
pop
jp
lock
aam
loop
ja
or
push
popf
push
hlt
add
filds
cmp
js
int
repnz
fstps
pop
fsts
sub
and
cld
xchg
jo
stc
notb
loop
ds
iret
fdivl
xchg
push
out
cld
push
push
and
fstl
inc
clc
push
jne
fs
push
and
stos
adc
jle
jmp
arpl
rclb
or
and
mov
subl
clc
cld
hlt
push
jge
cli
push
or
shlb
pop
pushf
inc
mov
pop
or
mov
xchg
inc
pop
or
xchg
fidivrl
push
outsl
sti
pop
sbb
or
push
pop
and
cld
jle
sbb
ror
cmp
popa
divl
xchg
sarl
fsubrl
inc
lret
ret
xchg
clc
cmpsl
outsb
inc
adc
adc
mov
pop
sbb
ljmp
sbb
cltd
mov
call
mov
dec
sbb
scas
hlt
add
push
pushf
out
or
pop
sysret
jmp
jo
ss
inc
push
cmc
pop
jbe
outsb
sub
jbe
sbb
xor
cmp
int3
outsl
test
fistpll
cmc
mov
dec
mov
sub
inc
ret
data16
push
mov
pause
ja
dec
or
fisubl
fistl
ret
push
add
lcall
mov
bound
or
mov
lret
sbb
pushf
and
fisttps
mov
mov
or
movsl
mov
dec
loopne
add
loope
pop
stos
adc
xor
sahf
rcl
xchg
insl
in
ret
and
dec
jo
inc
rcl
stos
push
pusha
or
push
mov
mov
out
sub
mov
mov
inc
lahf
add
jmp
test
mov
popf
push
jo
subb
fisttpl
cld
sahf
loop
dec
bound
shll
mov
stos
test
loope
lock
xchg
daa
lock
cmpb
dec
mov
pop
cs
inc
mov
push
inc
mov
dec
cmp
cmp
sarl
aas
sub
pop
stc
mov
loop
or
cmp
mov
lock
and
xor
test
loope
inc
push
js
shlb
test
fistl
fdecstp
into
int3
xlat
sbb
in
jno
ja
add
adc
or
push
pop
scas
cmc
push
aaa
xchg
aam
loopne
cmp
pop
sbb
mov
mov
lods
imul
cmpsb
sub
sbbb
jg
and
in
mov
std
inc
fs
xchg
adc
arpl
stc
cld
dec
or
adc
rcrb
hlt
fisttpl
jo
xchg
xor
mov
cmp
lods
or
inc
gs
mov
cmpsl
dec
dec
in
aam
lcall
leave
cld
sti
stos
js
int
or
loopne
ljmp
sub
std
pop
jmp
shr
insb
push
adc
push
adc
rorb
loopne
xchg
cmp
decl
pushf
das
sbb
cmp
dec
std
pop
dec
stos
or
lcall
push
adc
lret
in
cmp
jl
push
cwtl
inc
mov
or
lock
notb
outsl
in
pop
sub
adc
fldt
hlt
test
add
dec
push
fimuls
cmp
test
bnd
int
push
mov
mov
fcmovb
or
movsl
in
out
push
mov
xor
call
jg
pop
ret
add
or
jo
pop
pop
mov
sub
outsl
hlt
nop
inc
and
outsb
add
pushl
add
stos
cmp
cmpsb
mov
out
jl
or
loopne
scas
fiaddl
add
decl
pushf
push
int3
les
cmp
mov
jecxz
das
pushf
clc
fldenv
xchg
jmp
inc
incb
lds
fisttps
aad
lret
jg
xorl
mov
sub
sub
ljmp
jl
fdivrs
stos
hlt
inc
cli
ja
adc
xor
mov
andb
icebp
incl
pop
ljmp
pop
js
mov
or
shrb
scas
cli
push
ljmp
mov
mov
fdivr
test
rcrl
outsb
adc
xor
aas
imul
push
mov
lcall
xchg
lea
xor
pusha
std
pop
adc
insb
ret
lret
sbb
jnp
mov
xchg
xlat
pop
jbe
jne
add
sti
mov
and
ret
fnop
mov
push
mov
hlt
or
add
sbb
cmpsb
inc
outsl
fnsave
sbb
mov
sarb
dec
sub
test
loop
test
stos
mov
jmp
shll
sbb
ljmp
ljmp
xor
addr16
sti
xor
loopne
sahf
outsb
or
aaa
call
popf
add
bound
imul
dec
lock
adc
shlb
and
jle
fs
cmpl
pop
add
movsl
mov
push
mov
aas
mov
or
add
pop
clc
add
call
lock
fisttps
sar
xchg
inc
hlt
push
jno
mov
mov
mov
push
cs
pop
lock
xor
jp
clc
call
push
repnz
cld
fisttps
mov
mov
sbb
or
test
mov
das
xchg
out
push
mov
jno
dec
nop
data16
sub
or
sbb
addb
imul
mov
inc
lods
mov
inc
ret
stc
enter
pop
js
mov
mov
xor
xlat
int3
inc
push
push
outsl
adc
push
dec
int
in
adc
out
mov
stos
xchg
sarb
add
mov
notb
test
dec
std
inc
jns
cmc
add
fbstp
imul
je
and
testl
out
pushf
pusha
push
cs
sbb
bound
fcoms
rorb
or
scas
dec
add
inc
fmuls
icebp
test
mov
sbb
mov
test
add
sub
add
mov
xor
xor
sub
ret
adc
add
pop
mov
data16
and
cmp
lret
arpl
aaa
dec
js
mov
xchg
cmp
int
mov
mov
stos
lcall
sbb
and
data16
pop
fmull
jo
nop
mov
mov
shll
insb
das
aas
push
addr16
lods
pushf
mov
push
xor
jno
push
nop
roll
mov
loope
pop
jno
pop
dec
push
cwtl
out
ljmp
and
pop
adc
mov
mov
jns
cmp
mov
dec
shlb
fldenv
repz
lcall
dec
mov
in
xor
mov
rorl
and
jo
or
shlb
scas
into
pop
cld
mov
addr16
leave
mov
leave
gs
lea
adc
rorb
mov
mov
cli
inc
aas
push
shrl
mov
cmp
xor
imulb
sahf
pop
xchg
xor
sbb
xor
pop
pop
dec
decb
clc
lcall
iret
mov
sub
je
xchg
add
roll
scas
or
push
pop
outsb
adc
daa
subb
mov
and
clc
mov
test
fistpl
pop
gs
clc
fnstenv
sub
mov
ds
movsl
and
xchg
mov
fisubrs
mov
mov
stos
jecxz
ss
sti
test
mov
ljmp
mov
and
test
mov
sahf
pushl
inc
add
inc
push
pushf
dec
fs
mov
out
dec
pop
push
pop
mov
push
sub
pop
or
jne
jge
mov
adc
dec
loopne
sub
mov
or
xor
in
jp
stos
lods
fistps
adc
out
jecxz
jg
jo
hlt
jbe
fwait
addl
sar
sbb
les
ds
loopne
add
pop
sbb
inc
cwtl
std
sub
adc
loope
std
push
cwtl
push
enter
jmp
loop
adc
mov
je
popa
add
sbb
push
adc
movsb
lods
mov
repz
sti
data16
inc
jg
cmpsb
and
les
mov
mov
rorb
push
mov
std
jmp
sahf
repz
mov
sti
int
leave
add
lea
xor
add
or
js
xor
xchg
adc
jmp
adc
sahf
xor
mov
and
clc
movsb
outsl
clc
jmp
or
into
rolb
jl
roll
fdivrl
pop
bound
jns
std
nop
push
into
nop
mov
inc
enter
jmp
scas
aas
pushl
inc
pop
xchg
inc
pop
out
inc
jae
shll
mov
outsl
lcall
nop
adc
sbb
adcl
xor
daa
loope
push
pop
and
jae
add
scas
es
sub
insl
jbe
movsb
mov
sarl
imul
popw
and
lods
push
les
sbb
enter
in
insl
adc
mov
dec
mov
pusha
cwtl
sub
cmpb
lds
push
inc
data16
push
dec
mov
adc
in
pop
mov
pusha
sahf
imulb
jp
rcr
and
mov
sub
jnp
out
mov
jne
call
jae
jne
lds
orb
or
jp
push
shlb
icebp
xchg
out
pop
add
clc
push
call
inc
mov
xchg
std
pop
add
dec
fists
jae
dec
add
fmull
jp
pop
scas
or
outsl
adc
lcall
mov
jo
into
add
sbb
aam
jg
and
jns
inc
or
sahf
std
mov
cld
mov
and
push
dec
js
push
sub
push
dec
shlb
mov
xor
and
ljmp
jne
mov
inc
inc
popf
and
cld
xchg
ss
dec
fmull
cmp
mov
test
pop
insb
mov
mov
push
mov
fs
pop
sub
mov
fcomps
loope
and
das
adc
mov
sbb
fwait
and
dec
scas
call
mov
push
xlat
pop
mov
push
jb
push
jg
sub
loope
sub
fs
cs
call
loop
jns
cmpsl
mov
push
hlt
daa
or
in
xor
push
sbb
frstor
mov
mov
dec
stos
mov
add
push
or
xor
jl
xchg
popf
repz
cmpsb
pop
ret
pushl
test
pop
push
mov
push
mov
xor
sbb
repz
cwtl
rorb
call
mov
push
fldl
dec
fdivrs
fs
fists
sub
xchg
std
mov
pushf
outsb
add
mov
add
outsl
cli
inc
sbb
xchg
aam
lods
ret
clc
inc
add
jmp
mov
fdivrp
mov
xor
imul
aam
pop
in
stos
hlt
scas
ljmp
movl
jg
adc
pop
dec
mov
lret
mov
dec
lea
mov
xchg
inc
sub
movsb
scas
inc
xor
cmp
in
and
lods
mov
mov
dec
dec
push
cmp
ljmp
inc
or
call
in
fsub
das
mov
cs
cmpsl
dec
push
xchg
xorl
or
sbb
loopne
pop
push
mov
popa
sub
inc
call
pusha
push
jbe
lds
jnp
je
push
cmp
in
or
jg
mov
cli
sbb
or
pop
into
mov
sbbb
add
pop
je
lret
jb
cmp
icebp
push
dec
icebp
nop
xchg
std
pop
jne
dec
or
dec
xchg
inc
inc
stos
push
cmp
call
dec
jno
sarb
sub
outsb
stos
out
adc
push
or
inc
adc
fisubrs
test
inc
insb
jb
inc
xchg
push
xchg
xor
push
ror
dec
xchg
dec
cmpsb
daa
or
xor
fdiv
cwtl
sbb
add
and
adc
dec
loope
pop
inc
cld
mov
sahf
or
je
jbe
loop
jo
int
and
loopne
mov
and
add
sti
insl
inc
in
xchg
adc
xor
aam
ljmp
sbbb
insl
bound
adc
ds
sbb
xchg
xor
int3
add
outsl
fsubl
xchg
cli
mov
insb
mov
push
call
sahf
sbb
ds
mov
sahf
inc
push
mov
shrl
jge
pop
into
stos
or
andl
lods
int3
out
rcrb
add
or
jg
push
xchg
out
pop
dec
jmp
mov
fisttps
hlt
in
jns
mov
add
adc
sbb
inc
mov
mov
and
sub
mov
loopne
add
dec
adc
push
test
outsl
ss
xor
fstps
fucomp
adc
ss
or
test
rcrl
sub
lret
leave
test
adc
insl
push
add
pushf
fsubrs
mov
loopne
sbb
jge
jle
and
jg
add
pop
into
add
mov
inc
stos
push
inc
mov
out
add
insb
lods
push
mov
cmp
daa
aam
sbb
and
pop
cwtl
xchg
sbb
nop
xchg
sbb
pop
pop
imul
insb
sub
mov
ffreep
mov
inc
clc
or
dec
sbb
push
divb
mov
scas
imul
xchg
sub
fildll
add
and
fcompl
inc
and
adc
xor
mov
mov
int
mov
pop
in
mov
int
lods
inc
fsubs
inc
leave
scas
shl
call
jae
out
outsl
xchg
jae
jno
push
nop
js
dec
imulb
cmp
or
jg
popa
or
mov
add
es
lock
cltd
test
out
inc
mov
add
shlb
out
je
inc
int3
das
dec
outsb
jg
sbb
jmp
clc
xor
inc
sbb
mov
ud2
push
dec
fs
or
jns
or
pop
neg
add
jg
lcall
mov
push
cmpb
add
lret
xlat
std
fnstsw
and
vdivsd
aad
or
mov
xor
xchg
dec
fmull
inc
dec
sahf
or
pop
cwtl
lea
or
push
xchg
adc
mov
xor
pop
push
lea
sbb
cld
mov
push
orb
nop
loope
cmpl
cmp
pushf
icebp
mov
sti
sbb
add
or
std
ficoms
jno
popa
data16
push
loopne
xorl
adc
adc
xor
dec
lahf
xchg
xor
mov
jmp
lcall
sahf
sti
cmp
sbb
push
lods
jnp
push
jge
push
stos
jle
xlat
jecxz
in
dec
xchg
inc
leave
or
pop
mov
adc
mov
cltd
push
lods
xchg
aad
sub
dec
sbb
cli
cmpsl
mov
aam
mov
into
xchg
loop
shrb
push
shl
dec
loop
cmpsl
mov
enter
xor
push
fucompp
movsl
and
nop
loopne
xchg
scas
jo
cs
add
pop
fadds
lods
test
cmp
jbe
and
sahf
push
sub
mov
cs
out
pop
cltd
add
stos
fsts
xchg
inc
cld
cmc
xorl
push
ret
jp
xor
pop
xchg
and
aam
sahf
cmc
jae
adc
xor
or
cmpb
push
cmp
dec
shlb
cltd
int
mov
push
ret
das
pusha
push
inc
and
jb
mov
es
cmp
xchg
sbb
fcoml
fldt
and
add
inc
fimuls
or
inc
rclb
es
or
out
inc
test
cli
push
adc
adc
es
test
mov
cmpsb
mov
cmpsb
pop
lods
das
xchg
inc
cmc
cmp
hlt
mov
ja
inc
xor
and
lods
lea
push
and
push
cld
loopne
test
push
shlb
dec
jo
test
cmp
or
dec
inc
cmp
push
out
xor
push
pop
mov
pop
fbld
pop
jge
adc
xchg
mov
call
dec
stc
jmp
push
dec
nop
cli
adc
xor
xchg
add
push
mov
add
lock
movsb
jle
jmp
or
imul
jb
cltd
faddl
cmc
icebp
sbb
test
pop
enter
call
test
and
sbb
add
mov
mov
scas
arpl
repnz
xchg
call
adc
leave
jge
lret
lcall
cld
jnp
mov
addb
andb
push
in
xor
int
jmp
movsb
sub
xchg
imul
xor
fdivs
movsb
lahf
push
lcall
pop
lods
mov
mov
sbb
movsl
and
sbb
adc
push
adcb
sub
or
or
lcall
xchg
fldcw
pop
xor
lods
hlt
out
int
jg
pop
fiadds
sub
mov
mov
cltd
cmp
push
push
and
fildll
and
je
sbb
cmp
inc
xchg
cmp
add
lods
xchg
loop
dec
pop
add
clc
mov
or
push
test
sbb
adc
mov
xor
sahf
adc
iret
cmc
fstl
push
inc
mov
and
or
fbld
jo
imul
and
insl
sbb
dec
ljmp
ret
shlb
cmc
xchg
xor
pop
add
mov
insb
jo
mov
mov
and
sbb
icebp
ljmp
enter
aam
and
iret
xor
test
repz
icebp
divb
or
dec
cli
sub
scas
lcall
and
test
popa
insl
mov
pop
les
cld
pop
mov
lcall
mov
ja
mov
adc
adc
sub
mov
sbb
cmp
arpl
pushf
and
add
inc
cmpsl
in
popf
movsb
sbbb
adc
sysenter
push
adc
sbbb
sarl
mov
insb
js
mov
fisubrl
out
aam
aam
xor
sbb
loop
push
push
loopne
add
add
add
loopne
stos
mov
adc
mov
push
fistpl
mov
ret
test
sbb
ret
xor
dec
xor
out
loopne
imul
mov
inc
pop
dec
rolb
xchg
fwait
sub
imul
xchg
or
mov
cmp
lcall
clc
xchg
jne
cmp
mov
rcr
or
popa
jmp
test
xchg
or
sub
jmp
shll
sub
outsl
mov
test
cs
bound
jp
shll
jne
jb
add
mov
mov
push
or
inc
in
subps
add
test
mov
dec
and
les
inc
dec
mov
in
jecxz
dec
mov
jp
stos
iret
or
ja
xor
lret
xchg
sub
xor
gs
cmpl
int3
adc
lea
or
mov
mov
xor
fists
xor
jne
subb
clc
in
sub
sbb
jmp
test
je
xchg
jp
add
pop
pushl
xchg
shrl
mov
add
imul
ud1
in
movsb
sahf
and
add
in
and
iret
cmp
js
adc
mov
loop
loopne
adc
mov
sbb
int3
out
xchg
scas
xor
in
push
push
jmp
sub
inc
adc
sbb
cmc
pushf
scas
imul
leave
aam
xchg
loope
push
pop
or
add
xor
xor
out
cmp
out
stc
dec
and
aad
fsubs
mov
ja
and
aam
pop
jle
insl
xor
and
add
shrl
mov
inc
push
data16
push
jg
cmpsl
aad
int3
add
jecxz
adc
call
js
mov
mov
cli
nop
je
lods
in
int3
sub
dec
and
mov
pop
jmp
int3
add
adc
adc
jbe
pop
fwait
xlat
sysret
xchg
pop
popa
ljmp
shll
shr
popa
test
aad
add
mov
mov
fistpl
and
fcoms
fsubrs
sub
add
in
add
sarb
jle
mov
adcl
ss
imul
sub
faddl
arpl
jno
xchg
ss
imul
and
add
js
jae
pop
loopne
mov
lods
daa
mov
scas
add
and
sbb
adc
push
enter
and
and
mov
inc
js
cli
gs
push
repz
js
mov
push
adc
mov
mov
inc
push
arpl
in
dec
adc
enter
fwait
and
push
sbb
lods
xor
daa
or
inc
cmp
sti
shll
inc
aaa
popf
dec
sub
clc
fldt
gs
outsl
pop
loopne
in
in
mov
sub
inc
stc
add
add
dec
add
loope
lcall
sub
subl
imul
lret
adc
fmuls
push
push
mov
sub
xor
and
add
adc
push
cltd
push
dec
add
or
test
dec
js
or
add
pusha
ljmpw
lods
cmpb
inc
orb
jo
nop
adc
fiaddl
fidivrl
rclb
popa
jo
mov
fcmove
mov
jb
aam
mov
sbbb
push
aam
cmc
incl
stos
rolb
insl
dec
sbb
fiadds
inc
stos
sti
adc
and
stos
in
jg
and
cmc
js
mov
adc
divb
mov
mov
clc
mov
sub
js
ljmp
xchg
mov
and
mov
or
arpl
push
imul
out
or
ljmp
mov
adc
addr16
push
pop
faddp
inc
mov
push
fisttpl
lods
fists
data16
xchg
push
or
fdivs
scas
insb
hlt
xorb
adc
xchg
inc
pop
cltd
push
add
cmp
mov
shll
out
inc
aad
sub
je
inc
and
loope
insl
fsubrs
or
pop
dec
mov
hlt
jmp
inc
xor
fbld
jp
addl
inc
test
lcall
cwtl
sbb
sbb
sbb
inc
jae
xor
dec
adc
iret
cmp
inc
inc
jp
and
hlt
dec
data16
std
lcall
mov
int
sub
and
pushl
addr16
pop
rorb
nop
pushf
xchg
idiv
decl
repz
fistpll
daa
fsubs
cmp
adc
test
sahf
adcb
cmp
outsl
jo
or
or
add
lock
je
mov
aad
sbb
repnz
add
cmpsl
fbld
call
fsubr
sti
jg
and
adc
nop
loopne
test
lock
xor
aas
jmp
hlt
add
or
test
fidivrl
inc
pop
imulb
adc
xor
xchg
fsts
mov
test
sbb
repnz
pop
movsb
sldt
dec
filds
xchg
ds
das
sub
andb
dec
jl
dec
inc
addb
das
add
test
stc
sarl
loop
popa
loopne
push
in
sub
shrb
push
mov
aaa
movsl
fstpl
jno
out
push
mov
std
or
js
add
mov
into
ret
sbb
adc
cmp
mov
push
stc
sbbb
cld
cmc
and
push
mov
cli
es
inc
test
and
arpl
mov
pop
add
cmc
push
stos
shlb
subl
xchg
add
shl
push
nop
inc
sub
bound
cmpsl
call
arpl
jmp
pop
enter
in
aaa
sbb
cmp
cmp
pop
and
aad
popf
fldt
sbb
xchg
ja
movsb
rcrb
fisubl
push
cmp
add
std
sub
loopne
sarb
xchg
or
ss
adc
lods
jbe
rclb
and
inc
cli
or
in
sbbl
jp
data16
shlb
sbb
js
testl
adc
shrd
xor
add
js
or
negb
mov
call
popa
push
or
mov
call
into
jp
std
mov
mov
mov
lcall
sbb
mov
add
in
sahf
sub
cmp
xchg
stos
shl
mov
dec
inc
call
nop
jae
xchg
movsb
pop
test
cltd
or
adc
xchg
test
push
pop
fidivs
sbb
scas
lock
mov
decl
mov
aaa
sub
addb
lea
dec
test
mov
xor
das
add
dec
jp
pop
std
out
fs
imul
add
adc
sahf
in
inc
push
pop
lcall
pop
ret
push
lret
mov
out
sar
aaa
lcall
sub
test
mov
movsb
dec
incb
call
fldpi
cltd
into
lcall
loop
pop
cmp
fadds
cwtl
xchg
or
pushf
ret
mov
into
insl
imul
add
inc
pop
or
sarl
pop
insl
dec
loop
sti
shll
cmp
data16
add
sti
and
sub
fiadds
pop
push
cmc
mov
mov
enter
es
dec
jl
popf
ret
mov
dec
pop
jge
and
cld
and
out
push
add
adc
mov
jp
in
and
loopne
lock
mov
test
mov
aas
incb
test
insb
add
mov
jmp
lock
sar
leave
popa
std
push
jmp
push
mov
mov
hlt
lcall
out
js
loopne
mov
mov
jecxz
jle
sbbl
jge
incl
out
cmp
rcrb
xor
fisttpl
sti
mov
roll
lods
dec
test
fidivrs
clc
add
inc
sub
out
fwait
loope
adc
pop
shlb
loope
inc
js
push
out
dec
cmp
cli
in
loope
xchg
mov
es
mov
enter
pop
jl
sbb
idivl
lods
or
sarb
pop
or
push
fisubrs
addr16
jp
pop
add
fidivl
in
js
add
xor
xchg
push
mov
inc
xchg
and
cmp
mov
mov
mov
pusha
fsubs
and
das
or
or
ds
mov
int3
mov
add
or
insl
push
hlt
xor
insb
dec
or
inc
fdivrl
pop
fcoms
jmp
mov
inc
orl
into
jge
push
bound
mov
xchg
sub
mov
mov
or
push
bound
rep
add
dec
sub
mov
jle
stc
je
jo
pop
xchg
mov
push
jl
xchg
popf
ja
adc
sub
in
adc
ds
sbb
leave
jl
inc
push
adc
fnsave
fsubl
fdivl
sbb
jmp
add
mov
out
adc
push
jg
jae
roll
cmpneqps
pop
insb
or
xor
mov
jnp
call
incl
aaa
repnz
add
xchg
rcrl
insb
testl
ret
dec
mov
and
push
pop
push
mov
sub
into
ja
add
lret
call
mov
push
pop
pop
mov
clc
cmp
xor
out
fiaddl
fs
push
mov
pusha
test
mov
mov
les
lock
outsb
cltd
lea
lahf
push
xor
dec
fistl
push
pushf
in
lcall
bound
push
sub
add
out
ss
push
inc
andb
cli
lods
inc
lods
sarb
sub
or
inc
loopne
and
movsl
pop
cld
jb
adc
and
xchg
test
jl
and
add
mov
mov
sub
in
dec
cwtl
stos
jle
int3
loopne
sub
inc
out
mov
arpl
fidivrl
cs
sar
in
add
inc
out
add
loopne
cmp
fistpll
dec
pop
rol
mov
mov
xor
lahf
mov
adc
push
sub
adc
test
sbb
clc
jnp
sbbl
jl
mov
add
sub
leave
cmp
mov
push
mov
outsl
mov
add
push
and
push
push
inc
push
mov
push
test
imul
lcall
cld
adc
add
inc
jae
loopne
into
roll
push
inc
sub
adc
or
rclb
xor
add
adc
adc
or
inc
push
lock
dec
adc
push
testb
ret
adc
push
nop
arpl
out
movsb
inc
xor
movsb
mov
lea
xchg
mov
je
add
int3
mov
mov
sbb
in
sti
outsb
push
in
pop
leave
adc
sarb
js
lock
enter
and
add
xrelease
xor
xor
sbb
pop
cmp
dec
ret
or
into
mov
dec
dec
fcmovb
xor
adc
sbb
mov
push
pop
jo
repnz
movsl
xor
sub
sbb
inc
inc
popa
sub
arpl
aas
dec
aam
add
cmp
sahf
dec
popa
mov
add
jns
in
jns
jo
scas
mov
push
enter
fadds
std
push
mov
jne
ret
fwait
sbb
push
inc
ficompl
xchg
xchg
lds
frstor
lods
push
adc
sbb
lret
std
enter
hlt
jecxz
sete
xchg
sub
hlt
cmp
mov
or
test
rcll
mov
ror
test
adc
cmpsb
loop
cmpb
mov
mov
cmp
pop
mov
notb
adc
hlt
fsubrp
lock
inc
in
jg
cmp
and
jne
ja
and
dec
rcl
jb
aas
pusha
xor
mov
pusha
rol
mov
sbb
pop
call
xor
sbb
movsl
xorl
cmp
fs
xlat
adc
sbb
imul
aam
clc
pop
movsl
outsb
divb
mov
flds
outsb
pop
add
add
scas
in
outsl
inc
adc
xorl
into
ss
daa
adc
jbe
and
mov
or
mov
subl
pusha
add
add
lcall
mov
outsb
outsl
mov
add
and
xlat
jb
xor
push
mov
aad
insl
mov
jae
inc
sub
out
mov
cli
xor
cwtl
and
jle
fsubs
loop
pop
add
stos
repnz
sub
das
jo
jne
sarb
int
fidivs
sbb
in
scas
aam
lock
push
fadd
xchg
call
and
shrl
mov
xchg
and
mov
popf
add
outsb
sub
in
mov
movsl
jle
mov
jnp
sub
nop
sub
pop
jle
inc
aam
enter
inc
loop
lock
push
jbe
cmp
mov
push
push
test
in
test
in
pusha
cmc
sub
ret
dec
js
xor
cmpsb
or
xchg
xorb
add
in
fwait
nop
pop
mov
fadd
mov
push
cmp
push
lods
dec
loopne
add
jb
mov
add
popa
and
movsb
insb
dec
mov
jle
inc
mov
mov
lock
mov
fcoml
xchg
add
mov
lods
lcall
lock
mov
sub
jp
sbb
loope
mov
bound
das
in
add
pop
mov
sbb
loopne
push
data16
into
xorb
push
xor
fstpl
mov
xor
mov
aaa
rcl
fildll
sbb
pusha
mov
sbb
rorb
jecxz
xor
movsb
insl
stos
sub
pop
and
add
push
cs
lahf
and
cmp
call
sub
test
shll
pushf
mov
inc
filds
gs
sahf
adc
push
out
lods
loop
mov
xchg
pop
push
mov
cmp
pop
jbe
nop
lret
push
in
xchg
insb
clc
testb
adc
rcll
pop
xor
mov
ret
in
shlb
mov
jle
stc
loope
fisttps
push
adc
dec
fildll
sub
and
adc
sub
cmpb
sub
sbb
xchg
sbb
add
cmpsb
lock
pop
and
cli
rol
sbbb
adc
push
mov
loopne
adc
inc
cmp
cltd
mov
mov
pop
dec
test
loopne,pt
mov
gs
or
pop
dec
scas
dec
add
and
or
out
dec
popa
stos
pop
sbb
jbe
pop
ret
nop
sub
rcr
add
xor
test
jp
sbb
test
in
rcll
mov
or
push
aad
sarb
cmpsb
inc
push
fcmove
inc
push
cmp
pusha
jge
icebp
xchg
cmp
aaa
ss
or
sahf
data16
leave
js
mov
icebp
mov
pop
movb
adc
dec
mov
ss
ljmp
shlb
sti
push
mov
sbb
loopne
xchg
jmp
xor
ss
mov
or
scas
fiaddl
lcall
sarb
mov
aas
std
lea
mov
push
dec
mov
mov
and
loopne
pop
mov
jbe
or
xchg
add
jmp
inc
add
scas
sbbb
xchg
testb
std
fadds
xchg
arpl
mov
data16
repz
xor
sbb
sub
mov
je
pop
notb
mov
movsb
in
pop
cmp
mov
xchg
push
xchg
dec
jecxz
aaa
pushf
and
lods
sub
shrb
pop
dec
mov
lret
mov
adc
lods
dec
jne
rorb
je
gs
mov
mov
push
pop
loopne
add
lcall
inc
sub
orl
inc
gs
cmp
mov
shlb
int3
rorb
mov
or
fadds
sub
and
aam
ljmp
call
fsub
fcomps
pop
mov
pop
pusha
arpl
cwtl
aad
sbb
dec
loope
mov
outsb
or
adc
pop
mov
test
mov
cmp
sub
mov
cmp
cwtl
adc
subb
mov
stos
mov
add
jbe
pop
icebp
mov
push
inc
ret
xor
inc
loope
cmp
pop
in
ds
fdivrp
mov
or
mov
in
inc
fisttpll
mov
push
mov
cli
xor
mov
push
rclb
call
jecxz
clc
xchg
test
lahf
mov
ss
std
scas
inc
xchg
sbb
stos
sub
xchg
nop
lods
pop
xor
pop
daa
pop
pop
arpl
addr16
and
sub
mov
lods
mov
inc
xchg
nop
xchg
scas
push
inc
outsb
push
mov
out
add
push
and
inc
imul
lds
adc
xchg
ss
jae
je
sahf
mov
pop
mov
dec
sarb
jp
and
sub
aam
mov
mov
aad
imul
push
outsb
adc
cs
sub
js
mulw
inc
mov
cltd
outsb
out
mov
sbb
std
inc
push
jecxz
jnp
in
leave
sub
fdiv
add
insl
int
sbb
scas
filds
add
dec
jne
push
xchg
or
inc
jne
mov
dec
pop
or
adc
inc
rcrb
mov
mov
jecxz
push
mov
push
clc
je
dec
std
mov
mov
ljmp
push
scas
fisubrs
jno
inc
rclb
sbbb
xchg
popf
jl
lods
sub
push
inc
jbe
pop
jge
pusha
push
pop
sbb
btc
js
mov
lret
mov
sar
inc
in
or
inc
xchg
pop
mov
incl
repnz
and
inc
fmul
fidivrl
fists
add
sub
adc
jb
mov
mov
dec
mov
test
je
sub
push
cmpsb
mov
pop
cld
or
addr16
sub
ror
add
mov
push
xor
je
cmp
inc
or
xor
loopne
adc
push
or
movsl
ljmp
sub
and
inc
icebp
pop
dec
pusha
aad
fistl
xchg
dec
mov
mov
test
push
push
sbb
adc
jmp
sbb
faddl
or
sub
xor
and
xor
xchg
rolb
test
lret
push
inc
roll
xlat
and
ss
and
dec
pusha
pop
push
shll
in
xor
sbb
xchg
push
add
xchg
icebp
add
es
dec
test
push
sub
popf
fldenv
inc
or
mov
in
lahf
sbb
hlt
jecxz
arpl
adc
hlt
mov
dec
sub
inc
pop
mov
or
cmc
dec
stos
fsubrl
rcrl
insb
gs
and
ja
shlb
sub
sbb
sub
and
xlat
xorl
cmp
and
mov
sbb
xor
ds
xchg
repnz
xor
cli
adc
dec
inc
sbb
add
inc
cmp
js
ret
xor
pop
jbe
mov
jb
popa
adcl
std
pop
and
gs
outsl
pop
add
ret
xchg
roll
push
push
add
popa
add
xlat
cli
add
pusha
push
xor
cltd
push
push
push
sbb
push
loope
icebp
dec
dec
sub
and
or
imul
jg
sub
add
push
dec
inc
push
in
push
fs
adc
and
push
ficomps
mov
dec
movsb
lods
sub
add
adc
fdivl
jbe
dec
mov
sbb
and
mov
inc
push
fcompl
push
in
loop
add
movsb
mov
fstl
adc
xor
loop
imul
and
pusha
adc
and
xchg
jmp
inc
pop
lcall
js
ret
imul
sub
mul
xchg
adc
or
lret
lret
fldt
sub
cmpsb
xchg
pop
sbb
dec
mov
ror
in
xchg
sub
dec
jne
xchg
imul
jp
inc
adc
test
fs
pop
jne
repnz
rcll
mov
test
xchg
std
pop
xchg
icebp
dec
sbb
or
subl
jne
loope
mov
sub
repz
into
jae
cwtl
sbb
rcl
and
cmpsb
clc
xor
and
cmp
fdivrs
jge
mov
dec
mov
cmp
js
insl
add
lahf
or
jge
lea
ss
sbbb
xchg
xor
pop
icebp
add
loope
inc
and
inc
xor
sbb
hlt
inc
idiv
gs
lock
icebp
and
mov
push
xor
or
add
addb
xchg
decb
fistpl
xor
add
or
aaa
fsubs
adc
dec
xor
aad
arpl
fcom
ljmp
cmp
add
mov
sub
xchg
sti
push
mov
lock
pop
fcmove
daa
gs
push
xchg
inc
jl
add
cmp
mov
mov
jne
mov
addl
dec
ror
jo
movsl
inc
and
jne
pop
mov
jne
gs
ret
popf
bound
sub
add
xor
lods
jae
cmp
mov
add
or
loop
jg
cmp
fisubrl
faddl
pop
inc
and
adc
lock
mov
inc
loop
ss
push
test
lods
fadd
call
stos
mov
adc
addr16
pop
pop
clc
adc
scas
out
mov
fcoml
fwait
icebp
mov
sub
mov
add
pop
add
mov
andl
mov
push
sub
dec
lret
lret
mov
or
aaa
jbe
stos
nop
out
push
aad
popf
pop
xchg
jmp
rcrl
add
iret
xor
sbb
add
clc
mov
sbb
sub
mov
cli
sub
fs
adc
adc
add
inc
rclb
push
mov
mov
in
mov
adc
push
mov
push
jp
call
push
into
push
add
fmull
into
fcoml
jg
gs
lock
ds
add
add
xchg
sub
sbb
loopne
mov
and
or
loopne
popl
cmp
into
add
xor
push
add
in
push
jecxz
call
scas
repnz
inc
in
test
in
inc
push
mov
push
mov
scas
xchg
xchg
ljmp
mov
cld
filds
add
xor
add
scas
fdivr
add
mov
outsb
ljmp
fistpll
push
pop
jno
adc
xchg
pop
xchg
lret
outsb
call
jl
sub
sub
data16
movsb
mov
inc
jb
xor
pop
cmpl
in
cmp
cmc
xchg
add
fdivp
movsb
pop
pushf
xchg
decb
inc
sbb
inc
push
fisubrl
dec
cld
outsb
and
jp
and
std
adcb
mov
das
push
ljmp
incb
jl
mov
fldl
add
imul
andb
xchg
sbb
lock
inc
inc
jecxz
push
vmovddup
add
iret
jmp
xor
push
push
push
sbb
sbb
xor
out
dec
add
add
aas
sbb
mov
adc
mov
dec
jl
test
jne
shl
inc
or
mov
ffree
ljmp
push
mov
aam
mov
loopne
es
lea
movsb
push
and
xlat
xchg
cmpsb
popa
xchg
add
mov
movsl
add
add
out
cmp
js
xor
or
inc
dec
lret
in
jg
outsl
enter
mov
add
ret
dec
icebp
fstpt
pop
pop
nop
cli
out
xorl
push
jg
dec
stos
lods
test
jb
mov
mov
out
rcr
lahf
sbb
jge
call
fs
and
cli
push
push
xor
icebp
xor
pop
js
mov
pop
cmp
fiadds
clc
push
xchg
dec
sbbl
mov
call
xchg
mov
push
testb
std
fisttpl
mov
pop
mov
jg
push
adc
lret
pop
lods
and
cmp
push
push
in
mov
das
pushf
popf
lcall
or
inc
xor
push
ret
jo
mov
fisttps
inc
mov
adc
cli
xor
jae
out
jg
jbe
and
xor
repz
mov
imull
or
and
jecxz
inc
and
mov
sbb
xor
or
pop
addl
xchg
test
xorb
imul
jge
aam
dec
xchg
lret
add
enter
test
and
movsb
addl
add
and
xchg
pusha
xchg
jno,pt
jle
idivl
cmp
fs
test
out
mov
inc
xlat
lret
test
xor
decl
std
pop
lcall
xor
pushl
push
sub
sub
cmpsl
or
repz
int
icebp
xchg
enter
adc
es
nop
pusha
sub
mov
shlb
add
mov
xor
popl
push
insb
add
push
scas
call
cmc
insl
push
xorl
pop
xor
or
cli
mov
mov
mov
test
xor
testb
push
in
adc
mov
mov
sbb
mov
cmp
pop
fildll
insb
movsb
jbe
test
mov
push
mov
adc
lods
jmp
add
xor
push
lods
mov
clc
push
add
lods
mov
xchg
into
outsb
mov
jg
loope
roll
inc
fwait
sarl
ret
cmp
jge
int3
inc
mov
lock
add
repnz
pop
lock
lods
push
imul
xchg
sbb
and
inc
mov
jle
mov
jp
mov
dec
cmp
xor
push
or
mov
mov
jecxz
mov
lods
sub
lret
outsb
cmp
mov
sar
rcl
mov
rol
outsb
arpl
ds
out
adc
inc
bound
jne
push
xchg
shlb
sub
fisubs
cli
loopne
test
lods
jbe
add
out
pushl
filds
xor
pop
mov
clc
lock
lcall
xchg
or
or
xchg
fistpll
push
or
adc
imul
hlt
aaa
add
xchg
insb
pop
stos
lahf
pop
xchg
xlat
adcb
xchg
xchg
addr16
hlt
fcom
mov
fpatan
pop
mov
fistpl
cltd
xor
sbb
xor
daa
inc
pop
mov
xlat
daa
cmpsb
jp
dec
pop
movsl
out
mov
push
mov
pop
mov
or
adc
sbb
js
dec
cmp
jl
andb
sbb
inc
sti
mov
cwtl
out
xor
enter
sbb
add
and
fidivs
into
mov
and
outsb
fdivp
cmpsl
test
pop
aaa
push
jp
idivb
stc
jmp
adc
out
hlt
or
add
fwait
popf
in
cli
mov
mov
mov
outsl
fbstp
xchg
add
adc
ljmp
inc
cs
add
mov
jbe
loopne
dec
mov
push
outsb
mov
sub
call
pop
pop
aam
push
insb
cmpl
std
clc
clc
inc
std
pop
stos
inc
pop
out
jp
out
and
pop
int3
jb,pn
mov
or
cld
add
fwait
jp
push
std
mov
js
jns
lea
fisubrl
add
dec
loopne
pop
sub
xchg
push
aas
inc
cwtl
fsubrs
scas
out
adc
mov
xor
sub
mov
mov
add
adc
push
pushf
imul
xchg
fcomps
int
lcall
xorb
dec
xor
cwtl
mov
popf
mov
mov
aad
aas
int
mov
dec
fcompl
jns
mov
mov
rcl
clc
andl
sbb
mov
mov
sub
push
inc
stos
mov
cmpsb
enter
pop
jno
or
mov
cwtl
insb
xor
or
and
mov
icebp
in
dec
sbb
cmpsl
pop
mov
call
mov
sbb
lret
mov
mov
lock
adc
adc
mov
pop
mov
xchg
mov
xor
pop
stc
data16
sahf
lret
push
cld
int
out
fildll
push
pop
sub
push
jecxz
stos
inc
out
add
push
push
rorb
and
mov
shrb
sub
mov
pop
repnz
invd
ljmp
fisttps
pop
pop
insb
call
jne
adc
insb
inc
mov
and
inc
orl
lods
fildll
cmpsb
add
repz
add
or
xor
repz
sbb
inc
pop
aam
fisubrs
push
js
add
shlb
aad
dec
mov
xor
sbb
mov
push
in
xor
outsl
dec
call
lock
iret
push
sbb
cmp
mov
sahf
xchg
mov
mov
test
jl
subb
test
jge
in
aam
outsl
popa
dec
xor
jb
adc
pop
out
fsubrs
mov
push
clc
repnz
pushf
imul
dec
add
inc
xor
rorb
int3
notb
test
in
setl
rcr
in
jecxz
push
fldl
mov
loop
lret
or
push
or
push
sub
pushf
pusha
test
insl
stos
and
and
sub
adc
pop
lods
dec
jl
adc
cmp
ret
push
lds
push
mov
jle
add
adc
incl
aaa
jbe
xor
lods
aad
mulb
pop
fs
dec
adc
js
and
rorl
jle
cld
dec
ja
lods
cmp
jbe
jp
cmp
add
jbe
sti
add
leave
mov
ljmp
imul
add
and
mov
sub
cmpsb
push
push
lock
jecxz
test
sbb
imul
dec
mov
insb
cs
dec
xor
sbb
cmp
mov
nop
and
sti
xchg
and
mov
adc
dec
test
fisubrs
jnp
scas
cmp
lret
mov
shrl
mov
or
icebp
push
mov
lcall
inc
push
mov
js
adc
mov
dec
pop
or
dec
add
out
xchg
cmp
fwait
sub
ret
inc
push
inc
push
es
push
push
lock
stos
fs
jb
repnz
or
lret
inc
xor
and
std
std
pop
out
pop
shrb
clc
call
adc
leave
arpl
gs
cwtl
call
mov
mov
outsb
pop
and
jnp
shll
loope
fdivl
mov
xor
decl
pop
add
out
lret
mov
lock
sub
jae
xchg
pop
mov
pop
push
out
ss
or
push
sar
outsl
fistpll
and
bswap
mov
mov
push
aad
cli
jmp
sbb
into
ret
add
mov
lock
inc
outsb
sti
shll
pop
adc
mov
icebp
dec
adcb
jle
add
pop
push
pusha
in
mov
sbb
push
cld
pop
push
mov
adc
aam
or
dec
sub
imul
push
sub
sahf
fidivrs
test
dec
and
pop
incl
les
ret
push
pop
lcall
xor
cmp
mov
push
adc
dec
jo
test
shlb
movsb
shrb
xchg
punpcklbw
loopne
bextr
pushl
arpl
ss
mov
ja
out
sbb
mov
sub
cmp
pop
hlt
sbb
call
mov
mov
pop
and
orb
lea
cli
push
and
sbb
pop
add
in
sbb
cmc
add
insb
js
push
dec
cmpsb
je
mov
jl
repz
sub
mov
xchg
scas
push
add
mov
test
xchg
inc
stos
add
dec
mov
bound
adc
xchg
stos
adc
inc
fsubr
dec
pop
sbb
test
aad
movsl
mov
xchg
jecxz
in
push
adc
push
cmp
add
adc
add
lcall
jmp
adc
mov
rorb
call
jmp
jg
je
push
fsubr
loop
pop
or
sub
enter
pop
mov
iret
push
and
xchg
sbb
or
mov
ss
mov
std
ja
fidivrl
insl
icebp
or
jp
test
ljmp
xor
decl
adc
sbb
pop
xchg
jg
adc
jbe
xor
ljmp
insb
das
push
jg
push
cmpsl
scas
pop
dec
std
mov
lock
jns
mov
rorb
jmp
mov
push
mov
push
push
ss
sub
data16
jns
incl
imul
jg
sbb
mov
push
aaa
sub
shll
cmpsl
inc
and
cwtl
mov
rolb
pop
adcb
mov
inc
dec
out
pop
mov
clc
or
mov
shl
mov
shrl
shrb
fidivl
pop
filds
cmc
rorb
sbb
lahf
push
icebp
xor
xchg
jmp
incb
hlt
outsl
cli
sub
lcall
cwtl
sbb
mov
aaa
sub
jne
and
loopne
ja
cmp
jnp
and
cmpsl
pushf
stos
push
mov
push
mov
test
push
mov
ret
inc
int3
dec
int
cmp
push
pop
ret
stos
test
sbb
xor
push
test
inc
sbb
test
push
aas
lods
ret
test
add
cld
rclb
call
addb
or
add
out
jg
test
notb
dec
mov
ret
jbe
or
scas
addr16
adc
in
call
xor
movsb
sbb
push
imul
test
data16
fimuls
jl
pop
lods
addb
jle
mov
push
insl
lods
cwtl
push
call
popa
sub
les
sub
lret
sub
xor
bound
pushf
dec
jl
mov
jo
rcr
cli
loope
sub
mov
cmp
out
sub
decl
outsl
mov
or
jp
add
mov
xor
push
cmpsb
clc
pusha
sub
fists
mov
and
fldt
roll
inc
fcoms
or
fisttpl
sub
mov
add
insl
push
mov
inc
out
mov
scas
xchg
mov
sub
dec
push
or
out
out
sub
cmp
jnp
add
mov
mov
pop
lea
add
call
arpl
jl
adc
mov
inc
xchg
add
mov
loop
cmp
sarb
adc
jg
addb
lods
push
push
je
push
addr16
call
xor
sub
fwait
sahf
sbbb
push
jno
sbb
jno
into
shrl
adc
clc
sbb
xor
mov
or
or
push
js
ret
pop
push
push
sub
mov
jle
add
xchg
fsubrs
and
mov
movsl
dec
inc
pop
jge
push
dec
adc
and
icebp
adc
mov
fwait
push
jmp
fidivrs
xchg
mov
mov
xchg
inc
popa
stos
test
insb
mov
push
add
stos
push
pusha
dec
or
mov
daa
pop
out
addr16
decl
add
sbb
int
into
and
adc
js
sbb
subl
cltd
stos
inc
repnz
int3
loop
js
in
xchg
cmp
add
push
xchg
ljmp
xchg
sbb
add
mov
push
test
cmp
push
jg
mov
push
sbb
dec
rclb
loope
inc
jmp
xor
mov
popw
inc
pop
pop
sbb
cli
out
es
cs
mov
mov
insb
mov
subb
push
mov
adc
push
mov
stos
sub
cmp
cli
dec
cmpb
adc
into
out
adc
push
aam
or
outsl
out
push
jae
clc
test
stos
and
sbbb
mov
pop
cmpsb
fstpt
fcoms
pusha
mov
push
cs
je
pop
xor
in
cmp
jns
push
data16
add
inc
ja
iret
ret
sub
loope
out
adc
xor
in
lods
fsubl
xor
or
sbb
mov
adc
mov
pusha
add
sarl
inc
insl
mov
inc
cld
sti
dec
dec
mov
hlt
fdivrs
fiadds
jns
cli
or
xchg
les
pushf
cmp
mul
or
or
lahf
test
sub
mov
sbbl
jl
and
and
sbb
bound
fstpt
pushf
add
or
mov
xorl
dec
mov
imul
pop
stos
cli
cmpsb
outsb
sub
pop
pop
sub
lock
or
pop
test
fimuls
inc
cwtl
clc
add
mov
jg
push
add
mov
pop
sub
pop
dec
stc
mov
adc
pop
bound
inc
xchg
popa
mov
xchg
fwait
or
mov
mov
mov
inc
dec
and
fidivrs
rcr
cld
pop
dec
mov
stc
jne
fidivrs
js
jp
test
dec
inc
and
arpl
inc
fadds
in
sub
and
push
mov
add
lods
cwtl
cmp
push
xchg
rcrb
pop
jecxz
je
add
dec
cmpsl
dec
sub
and
fcmovnbe
scas
mov
mov
in
push
sahf
sub
mov
test
mov
mov
ss
iret
and
inc
repnz
mov
adc
pop
add
leave
or
adc
xchg
dec
jo
cmc
pop
scas
shlb
adc
les
xchg
mov
pop
jbe
sahf
loope
mov
icebp
mov
ret
into
neg
cmpsb
adc
cmp
xchg
dec
mov
inc
scas
jns
lock
std
je
inc
push
and
rcrl
inc
adc
fs
std
fbld
sbb
mov
outsl
push
adc
scas
jg
adc
mov
ja
imul
pushf
cltd
cmp
mov
dec
xchg
jmp
sbb
aaa
stc
inc
add
inc
cmp
push
sub
xchg
mov
incl
sub
add
sbb
out
add
lods
or
call
std
mov
pusha
pop
bound
push
in
add
jne
fidivl
adc
mov
daa
cwtl
std
stos
lock
add
xor
and
inc
push
sub
dec
aam
or
pop
inc
pusha
mov
fcmovu
test
cs
cli
orb
mov
sarl
jmp
sbb
mov
movsb
lret
and
scas
lcall
sbb
cmp
push
cmpsb
sbb
call
subb
push
aam
lods
scas
lcall
xchg
cmp
movl
xchg
mov
mov
sub
sbb
xchg
adc
js
push
sub
jmp
or
paddusb
or
adc
sbb
add
cmp
xlat
add
mov
push
in
jg
std
mov
pop
testb
repz
xor
mov
sub
push
add
mov
into
insb
mov
jbe
pop
vpextrb
es
xchg
shlb
mov
inc
cmc
out
loope
clc
or
jbe
fdivr
pushf
ss
xlat
push
mov
or
in
decl
fisubl
adc
clc
dec
rolb
pop
shlb
ret
or
or
push
inc
jb
jns
fdivrs
mov
stos
test
adc
cmc
sub
cmp
dec
pop
inc
sbb
hlt
popl
out
lret
imul
outsl
fbstp
pushf
adc
es
xchg
jge
pop
clc
jl
jle
or
dec
ret
push
mov
pop
mov
nop
sbb
orl
push
add
dec
cmpsb
shrl
pop
dec
and
out
jae
clc
rcr
push
mov
xor
or
mov
pop
ret
sbb
nop
adc
or
outsl
push
xor
ljmp
sahf
ss
outsl
shlb
dec
push
fsubrs
mov
jg
sbb
aas
jbe
xor
ds
push
push
lcall
sub
cmp
insb
and
jmp
loopne
movsb
xor
loopne
adc
adc
and
ja
in
pushf
cmpsb
fists
pop
xor
pop
imul
cmp
pop
sub
bound
sub
pop
jno
jge
cmp
scas
pop
into
xor
push
mov
push
aam
iret
int3
push
xchg
cmc
mov
ret
or
movsb
jecxz
xchg
orb
imul
or
or
test
outsl
sub
sar
ds
aas
add
jge
lock
lock
add
cld
jp
jle
hlt
cmp
xchg
inc
inc
pop
aaa
push
mov
mov
jno
hlt
and
adc
and
inc
ss
or
jp
nop
outsl
sahf
in
adc
jg
mov
mov
mov
cld
mov
push
sbb
enter
mov
in
mov
stc
adc
lock
pop
cmc
jge
lods
mov
mov
cmpsb
push
and
add
test
add
mov
int
inc
sub
mov
add
fldt
jb
xor
jl
movb
and
test
jo
test
outsl
out
test
insl
push
sahf
lret
mov
push
or
push
mov
or
xchg
nop
scas
daa
outsb
push
inc
sbb
jle
mov
fdivs
push
mov
push
mov
pop
xchg
jmp
popa
cmp
push
adc
int3
mov
push
and
fcomip
sub
adc
or
mov
hlt
push
inc
orb
nop
aaa
inc
sbb
adc
inc
pusha
das
inc
push
insl
js
push
mov
outsb
clc
xchg
add
pusha
subl
cmp
dec
sub
cwtl
dec
and
adc
mov
cli
sahf
jge
testb
xchg
xor
xor
je,pn
fildl
ret
inc
cld
push
adc
mov
xchg
mov
lock
test
mov
mov
dec
les
lock
xor
addr16
mov
inc
sub
andl
cli
stos
ret
xchg
rcl
adc
push
and
pop
fwait
pop
scas
insl
add
std
mov
popf
jns
cmc
adcb
jnp
pusha
idivb
mov
mov
push
mov
mov
sti
pusha
cld
push
inc
ret
mov
int
dec
xor
and
jno
sub
stos
outsl
sub
inc
in
adc
pop
inc
std
fdiv
adc
cmpsl
push
lods
jg
incl
sub
scas
fwait
lods
incb
xchg
minps
decb
add
push
faddl
pusha
sub
and
sarl
jp
ret
loope
and
add
leave
adc
xchg
sbb
test
mov
push
insb
loop
mov
clc
dec
xorb
mov
dec
jl
jecxz
movsl
out
dec
popa
mov
jns
xor
hlt
addl
adc
fcompl
andb
ret
fimuls
in
js
call
daa
mov
jne
subb
and
test
inc
sar
xchg
mov
in
daa
enter
add
sbb
fbld
add
inc
filds
sub
call
xchg
and
cmp
pop
test
cmp
addr16
lds
sbb
lcall
inc
out
ds
icebp
ss
xchg
pop
cmp
addl
je
insb
call
call
add
movsb
ljmp
or
cld
mov
add
into
lret
adc
jecxz
and
pop
inc
ss
or
or
and
aas
loopne
xchg
xor
or
push
in
ds
jbe
mov
jge
scas
mov
in
xor
mov
push
dec
pop
add
daa
jo
aas
sub
scas
push
add
mov
mov
movsb
sahf
decl
mov
mov
pop
lcall
push
aas
or
cmp
icebp
add
mov
fwait
sub
lods
push
mov
fldt
shlb
pushf
int3
cwtl
push
ljmp
mov
inc
xchg
xchg
pop
insb
add
loopne
clc
xchg
test
sub
pop
cli
adc
loope
pop
adc
add
xchg
or
jnp
lahf
push
sbb
neg
sbb
or
add
jl
push
scas
jle
mov
dec
subl
mov
cmp
jg
imul
mov
arpl
cmp
lods
das
rcrb
push
outsl
dec
jp
or
lret
dec
loopne
add
icebp
movlps
ljmp
and
and
insb
lods
jb
push
js
jo
cmpb
xor
jl
pop
ljmp
fistps
cli
cmpsb
lds
mov
lret
push
decl
mov
loop
repnz
js
adc
xchg
jle
hlt
dec
xor
fdivrl
and
jg
pop
lds
adc
pop
jnp
inc
mov
mov
push
outsb
jmp
dec
mov
push
inc
iret
cmpsl
call
xchg
jge
mov
add
insl
dec
orb
add
mov
cwtl
mov
int
pushf
pushf
push
push
xchg
jmp
or
stos
mov
loopne
sbb
add
inc
add
mov
lock
or
loopne,pt
push
push
dec
fsubs
call
fnstsw
dec
test
pop
sbb
push
insl
cli
xchg
add
mov
cmpsb
push
dec
sbb
rorb
aad
mov
fidivrs
je
push
add
js
stos
and
gs
ljmp
cmpl
ss
dec
pop
cld
stos
std
test
sub
mov
dec
or
aaa
jne
into
sbb
mov
test
cld
dec
loop
mov
test
cli
mov
and
mov
pop
mov
adc
mov
jg
jo
pop
add
adc
iret
adc
sub
adc
into
test
insb
lods
dec
bound
and
cmc
daa
mov
loopne
push
mov
imul
aaa
push
test
jae
aam
cmp
cld
sbb
dec
fwait
out
test
or
stc
repnz
pop
in
adc
push
mov
es
adc
nop
movsb
out
das
rcl
or
bound
call
jecxz
sub
inc
add
mov
or
mov
push
sbb
sti
nop
int
xlat
adc
outsl
sub
xchg
ret
and
push
mov
or
shrl
adc
sti
sub
xchg
inc
push
incl
or
inc
gs
xchg
mov
lock
cmp
das
nop
push
pop
mov
cmp
sbb
push
jmp
std
outsl
lods
xor
mov
or
in
adc
sar
loopne
xchg
xchg
dec
sbb
aad
jnp
scas
bound
loop
icebp
sub
clc
loop,pn
dec
inc
push
mov
xor
std
xchg
push
mov
lret
or
enter
nop
cmpsb
add
cwtl
shll
or
js
adc
cmp
adc
lcall
les
add
test
xchg
aas
xor
adc
fcom
ret
aad
push
push
rcr
fbld
out
fsubs
push
adc
seta
mov
or
push
jo
icebp
add
and
subb
pop
xchg
ret
fdivl
ljmp
pop
mov
test
aam
ljmp
push
adc
out
in
xchg
lcall
sar
inc
add
pop
cmc
and
in
mulb
dec
xor
ret
loope
loopne
push
test
and
pushf
and
imulb
cli
ret
add
jo
cmp
push
mov
in
jmp
fwait
sbb
test
push
cli
mov
mov
cmc
fistl
mov
dec
std
jns
mov
subb
jmp
push
je
jne
ret
in
sbb
mov
inc
pop
fcoms
or
push
js
daa
and
add
cs
add
and
imul
mov
mov
jns
sub
adc
inc
jg
push
mov
flds
std
cmp
mov
xor
dec
jl
inc
mov
dec
sbbb
mov
and
cmp
adc
imul
jg
pop
sbb
clc
cmp
fwait
cwtl
cmp
fists
es
data16
test
add
jp
mov
dec
pop
rorb
mov
outsb
call
or
fcos
jle
xchg
inc
sbb
push
xchg
dec
or
pop
xor
jg
jne
mov
scas
add
pusha
cmp
loopne
mov
cmc
in
mov
shlb
mov
push
or
jl
and
ljmp
ds
repnz
mov
dec
push
incl
pop
dec
insl
cli
aam
or
push
mov
mov
imul
xchg
push
rclb
orb
push
add
mov
jg
scas
mov
sbb
xlat
out
or
push
fdivp
add
push
imul
xchg
sahf
inc
imul
dec
adc
mov
mov
mov
aaa
fnstcw
lret
adcl
test
ret
std
fistps
ljmp
adc
in
stos
call
shr
xchg
mov
sbb
test
inc
icebp
jo
dec
sub
xor
xchg
adc
rol
cwtl
fcmovnu
mov
adc
fsubr
jg
sub
push
jecxz
fcomps
mov
lock
sbb
inc
das
jbe
push
movsb
mov
inc
adc
and
and
std
shrl
cld
adc
cli
sbb
jecxz
mov
jle
loope
or
mov
xchg
outsw
jae
inc
loope
cs
mov
sbb
mov
ljmp
push
loopne
ljmp
cmp
lret
adc
std
decl
bound
or
hlt
cmpsl
xchg
adc
mov
ret
outsl
push
dec
fs
jb
mov
cltd
push
out
push
dec
jmp
inc
stos
and
popa
push
mov
outsl
je
inc
fstp
loope
xchg
push
ds
mov
xor
ljmp
mov
and
fidivl
test
insl
js
jae
jns
mov
pop
add
out
and
pop
add
jo
cs
sarb
test
jmp
mov
or
dec
fwait
push
dec
mov
jecxz
shll
test
jg
cmp
popa
pop
js
xor
mov
nop
add
bound
inc
jge
das
adc
jg
clc
clc
icebp
call
nop
xchg
mov
adc
xor
pop
aad
dec
out
aad
div
dec
loop
cld
mov
loopne
add
mov
jo
cli
jg
mov
mov
scas
jbe
add
jg
add
cmp
test
xchg
jge
testb
out
lea
faddl
subb
cmc
outsl
add
inc
and
cmp
out
lea
imul
and
and
push
aam
or
sub
lret
push
jne
sahf
xor
xchg
data16
xorb
in
bound
xor
shrb
adc
xor
add
loop
inc
js
dec
cli
pop
jne
sub
cli
dec
mov
pop
out
jb
mov
out
fcoms
hlt
and
cwtl
jg
push
sbb
repz
lea
lea
fimull
adc
xchg
faddp
and
mov
pop
sbb
mov
faddl
inc
adc
aaa
push
mov
in
add
push
or
mov
insl
mov
add
js
lea
ret
pop
lcall
add
outsb
jl
test
xchg
mov
or
cmp
or
pop
and
lock
dec
adc
jae
adc
jle
inc
add
ljmp
xor
inc
insl
jecxz,pn
in
mov
lock
xchg
sbbb
xor
pop
mov
pop
cld
aas
sbb
pusha
int
adc
pop
inc
pop
mov
arpl
add
out
pop
sub
outsb
mov
out
test
or
push
ret
out
add
cmp
sub
pop
adc
insl
push
loope
cs
cmp
icebp
mov
out
ret
mov
repnz
push
mov
mov
cmpsb
cmc
outsl
jmp
push
adc
dec
xchg
push
test
cmp
or
sbb
ja
mov
mov
ds
push
add
xor
fisubrl
xchg
cmpsb
mov
mov
mov
cmpl
mov
jmp
push
jp
push
rolb
jle
xor
pop
mov
shlb
mov
jbe
nop
adc
divl
add
fidivrl
push
pop
psadbw
push
lods
pop
push
ljmp
lock
das
jb
jb
nop
lds
sbbb
pop
push
pushf
out
jo
pop
or
cli
adcl
or
pop
outsl
jno
dec
mov
sub
decl
pusha
cli
or
mov
jle
push
fsubrl
cmpsb
mov
lcall
sbb
jg
or
adc
pushf
and
ret
fisttpll
jbe
inc
out
popa
out
repnz
loopne
sub
sahf
popa
ss
push
push
call
mov
mov
mov
aaa
inc
dec
xlat
out
and
pop
and
aas
add
push
xchg
leave
cmp
js
mov
adc
add
dec
pop
cmp
dec
ret
push
jp
and
pop
adc
jp
mov
fidivl
pop
scas
cwtl
add
test
adcb
bound
lods
loope
add
loopne
adc
inc
fucomi
inc
xor
mov
dec
ret
inc
popf
sarb
mov
paddsw
in
into
mov
int3
subb
xlat
jg
faddl
sub
stos
es
ret
std
xor
mov
fmuls
movsl
insl
pop
jle
pop
popa
punpckhbw
lods
nop
pop
movsb
xchg
pop
arpl
pop
and
enter
aas
sub
icebp
lods
jne
mov
or
das
data16
add
adc
jo
sub
test
inc
out
add
gs
cmc
mov
mov
xchg
out
push
inc
pop
xor
mov
pop
fs
inc
pop
shr
arpl
fisubs
jno
mov
test
sub
or
aas
ret
and
sub
out
lock
addl
and
jmp
pop
test
push
scas
and
pop
push
decb
test
adc
xor
xchg
fildl
cmp
fdivs
push
ret
pop
cmp
or
leave
xchg
mov
lret
or
cltd
test
lock
pushf
lods
sub
test
sub
je
mov
dec
sbb
sub
jo
scas
mov
ret
inc
adc
stos
cmp
mov
push
repnz
push
nop
lock
push
and
mov
push
inc
inc
adcb
xchg
xchg
in
pop
adc
dec
fs
add
test
clc
test
mov
out
sahf
mov
inc
mov
push
mov
and
insb
pusha
pop
shlb
mov
jge
and
dec
daa
fdivrs
cmp
das
sub
push
and
adc
add
dec
pop
push
lds
jbe
nop
sbbl
ret
jo
outsl
cmp
movsl
cmpsl
movsb
mov
call
sbb
jg
das
in
push
push
je
sbb
sbb
jg
mov
push
lret
push
fists
pand
shrb
fists
add
and
pop
movsl
lea
xchg
sub
mov
das
call
popf
sbb
sbb
testl
jmp
add
lret
test
add
clc
add
cld
push
push
mov
push
stos
xor
or
sub
mov
aaa
clc
cmc
scas
pop
rorb
cmp
jmp
add
xchg
and
sbb
mov
out
in
and
mull
xadd
fistpl
rol
and
xchg
and
xchg
xlat
push
dec
or
jno
fwait
loope
jo
add
cs
fnstsw
loopne
sbb
sub
popa
mov
aaa
loopne
adc
jg
mov
add
outsl
pop
stos
sarb
adc
push
or
ss
pop
in
rorb
cwtl
loope
pop
dec
mov
adc
xchg
xchg
das
or
dec
ja
rolb
adc
xorl
add
es
fiadds
mov
pop
add
add
push
pusha
std
mov
pop
addr16
out
test
mov
movsb
cmp
push
ficompl
gs
popa
mov
or
or
add
xchg
push
pop
jo
push
fcomps
out
cmp
xor
xor
fiaddl
sarl
pop
pop
in
xlat
or
add
in
lret
loope
mov
adc
fstps
pop
movb
nop
push
rcr
or
add
test
or
in
inc
in
cmpb
mov
jmp
mov
call
add
orl
out
movsb
out
mov
xchg
dec
ds
xlat
das
pop
and
sbb
adc
fcoms
jge
lods
inc
mov
mov
test
mov
mov
pop
push
lret
xchg
lods
lods
and
mov
xchg
and
cmpsb
adc
in
add
in
add
push
pop
out
sub
inc
scas
sub
pop
cltd
sub
and
gs
sub
adc
add
add
cmp
sub
arpl
nop
push
xchg
rcrl
cli
adc
pop
popf
add
sub
out
daa
adc
sbb
mov
shrb
mov
xor
dec
cmc
mov
sub
sub
adc
dec
xchg
cld
stc
incb
test
sarl
enter
addb
or
andl
shll
dec
int3
inc
add
add
push
and
inc
dec
std
loopne
int3
mov
jo
insb
rclb
in
rclb
dec
xchg
adcb
movsl
aad
out
daa
sarl
push
arpl
out
js
ret
call
sub
pop
dec
rolb
add
adc
mov
xor
jno
test
inc
lcall
lods
mov
xor
inc
test
bound
dec
push
adc
xor
mov
mov
repz
pop
xchg
into
mov
jae
sbb
dec
addl
xchg
fnsave
push
or
push
xor
movsb
sub
add
or
movsb
cs
mov
xchg
int3
xor
outsl
cmp
inc
or
dec
mov
add
sahf
gs
stc
les
xchg
mov
addr16
test
stc
push
lahf
inc
popf
movsb
int3
mov
sub
dec
pop
insb
sub
std
ret
cltd
push
or
daa
adc
cmp
pushf
mov
cmp
and
adc
adc
dec
pop
mulb
xor
stc
mov
inc
or
lds
pop
push
pusha
cmp
out
rclb
in
ror
movsb
xor
mov
leave
das
jmp
sbb
push
sbb
cs
dec
push
lock
in
pop
rcl
in
ret
imul
fstl
jb
hlt
mov
movsl
inc
push
stos
xchg
es
xor
adc
pop
adc
insl
cmp
pop
icebp
mov
xor
add
and
add
xor
stc
or
xor
pop
or
sbb
aam
xor
in
xchg
and
imul
inc
sub
inc
movsb
mov
xor
push
jge
xchg
cmpb
ss
add
add
mov
addr16
jmp
in
lea
or
jl
pop
mov
pop
daa
jecxz
popf
push
sbb
pop
loope
jg
jns
or
or
lcall
addb
fimuls
adc
adc
icebp
sbb
out
imul
mov
daa
out
icebp
adc
repz
pusha
mov
lret
pop
xor
insb
dec
shl
cmc
arpl
mov
jns
lods
pop
push
sbb
sbb
leave
mov
or
jl
in
loopne
cmp
push
decl
out
xor
fidivs
stos
shrb
lods
jns
mov
cmp
aam
mov
dec
xor
jnp
sbb
aam
rol
pushl
push
outsb
icebp
pop
mov
inc
push
aas
mov
push
mov
out
adcb
and
sub
xchg
pop
popa
outsb
sub
pop
and
aaa
into
pop
mov
loopne
mov
or
or
cmpsb
mov
ljmp
mov
cli
jl
mov
push
std
mov
outsl
rorb
or
add
rclb
pop
add
out
add
adc
cld
sti
ds
mov
movsl
fisttps
push
add
arpl
xor
shlb
adc
cld
nop
xchg
jb
xchg
mov
dec
int
dec
mov
adc
mov
pop
mov
dec
or
adc
je
mov
or
mov
jae
sbb
push
je
ja
ljmp
js
clc
addb
add
jmp
lar
pop
cmp
insb
das
sub
ljmp
pop
cwtl
sar
loope
test
dec
mov
sbb
loopne
sbb
test
pop
es
or
sbb
cmp
ja
ret
or
negl
add
sub
sbbb
or
sar
mov
inc
in
jae
sub
popf
mov
ljmp
and
js
adc
pop
clc
out
aam
push
adc
pop
push
aas
clc
jg
jle
pop
mov
ret
fdivl
inc
in
add
xlat
inc
popa
scas
mov
push
push
inc
out
cmp
pop
or
add
push
and
aaa
jbe
lock
sbb
cmc
out
jg
cld
js
mov
and
ret
push
sti
mov
imul
xchg
add
ret
and
sbb
decb
add
in
xchg
push
les
adc
sbb
adcb
clc
xchg
leave
sbb
in
cmp
push
ljmp
inc
bnd
sub
add
inc
and
mov
xor
and
loopne
fistpl
xor
loope
inc
cli
and
mov
push
push
bound
inc
jl
and
gs
or
or
imul
notl
jmp
cmc
idiv
fwait
test
adc
adcb
cltd
ret
jnp
ja
dec
je
xor
sbb
enter
in
xor
xchg
sub
xchg
hlt
ljmp
imul
sti
sbbl
int
add
enter
inc
pusha
lcall
add
xchg
jle
pop
pop
out
std
push
cs
jbe
adc
add
cmp
andb
add
nop
lods
addb
sahf
xchg
cli
push
addl
jp
and
adc
sub
push
dec
mov
cmp
adc
inc
xchg
xorb
sub
cmp
sub
ss
mov
push
add
femms
cli
mov
clc
fcomip
daa
mov
and
add
add
and
test
sub
mov
xlat
sub
dec
xor
jp
or
fildll
cmp
mov
and
push
shr
sub
sub
mov
loop
cmp
pushf
call
lcall
stos
mov
pop
movsb
push
mov
cmp
mov
cmpsb
daa
mov
sahf
ss
rol
lds
mov
cwtl
push
jmp
adc
push
imul
sub
stc
add
popa
fisubs
movsw
adc
adc
adc
stos
xor
out
push
and
push
out
cmp
repnz
popa
add
les
jo
or
mov
imul
loopne
aaa
les
les
jbe
lahf
test
adc
adc
loopne
popa
sub
ret
clc
cld
enter
push
xor
pop
jg
andb
and
sbb
jno
gs
out
xor
xchg
xchg
xor
rclb
out
push
inc
imul
push
push
mov
je
push
fsubrl
jbe
sbb
outsb
lea
fdiv
and
out
dec
xchg
add
adc
jae
andb
lock
inc
and
loop
popf
shlb
pop
lahf
jge
add
mov
mov
adc
aas
inc
test
pop
xchg
sar
icebp
out
push
fsubl
xchg
insb
daa
sar
cmp
pusha
repnz
mov
push
cld
add
test
xchg
xchg
lock
mov
push
cmp
cld
lods
xchg
mov
mov
ljmp
mov
add
cmp
adc
pop
add
mov
or
or
mov
ret
aaa
popa
sub
push
dec
ljmp
clts
xchg
push
or
push
into
loopne
loop
rcrb
stos
ljmp
loopne
push
adc
into
push
repnz
addb
cmp
or
pusha
vpermilpd
dec
pop
or
and
mov
pop
add
add
mov
int
push
mov
add
jmp
mov
sbbl
sub
push
mov
rcrb
inc
mov
push
adc
pop
inc
cmp
dec
data16
cli
mov
orb
sbb
xor
xor
outsb
fidivrs
in
hlt
aaa
je
mov
icebp
and
into
fbld
and
loop
add
sbb
jl,pn
hlt
lock
jmp
cs
dec
xor
add
pop
fldl
jo
fcoms
rcl
add
loopne
nop
jge
pop
shl
cmp
shl
insl
fcmovnu
adc
or
sbb
hlt
dec
add
fnsave
movsb
mov
clc
push
cmp
loopne
test
pop
pusha
ret
mov
xchg
dec
pop
andl
rclb
fcompl
lock
xor
adc
xchg
test
popa
xor
jmp
mov
sbb
iret
xchg
pop
or
cmp
xor
sbb
adc
lock
sbb
and
leave
mov
push
push
or
ret
test
clc
popf
mov
fldenv
inc
add
dec
jo
add
xor
xlat
out
clc
scas
sbb
lcall
pop
or
jbe
shlb
sub
and
mov
ret
pushl
add
pop
inc
push
dec
lods
iret
push
xorl
idivl
fwait
inc
pop
fcomps
xchg
push
push
mov
es
and
jnp
mov
mov
adc
lods
fistl
inc
rorl
xlat
jmp
mov
ret
sarb
or
jl
and
icebp
das
stc
sbb
jmp
or
arpl
leave
inc
aad
or
mov
sub
add
sahf
ja
stos
clc
lock
dec
mov
push
andb
adc
aaa
pop
sub
and
push
xor
insl
pop
addr16
inc
test
ja
mov
adc
mov
or
leave
shl
pushl
fucom
pop
ljmp
mov
inc
lahf
dec
or
pop
test
pop
inc
out
mov
sbb
ret
mov
lds
daa
dec
mov
sub
test
hlt
inc
lcall
out
ret
test
pop
pusha
pop
sbb
mov
jno
repnz
in
out
lret
sub
push
jae
imul
push
pop
add
lret
cmc
mov
mov
or
mov
std
inc
sbbb
mov
and
orb
lock
push
push
mov
pop
stos
cmc
loopne
adcb
mov
shr
rcl
mov
cld
add
push
mov
fwait
sub
dec
pop
lods
mov
xorb
dec
sbb
pusha
les
adc
adc
sub
lock
or
xor
fcompl
mov
push
adc
jbe
ss
dec
mov
mov
jg
inc
popf
ljmp
daa
mov
pop
mov
lret
inc
ljmp
inc
sbb
mov
loopne
repz
out
fcmovne
xor
xor
push
sub
jg
add
in
pop
popf
pop
nop
sub
pusha
jl
inc
add
ljmp
cs
add
xchg
add
lock
lcall
mov
add
and
gs
inc
and
nop
cmp
add
adc
inc
sub
jbe
ret
dec
and
call
aaa
xchg
mov
aaa
leave
push
or
xchg
cmpl
push
adc
add
dec
and
mov
inc
loope
inc
mov
dec
js
scas
jmp
movsl
jge
mov
mov
add
and
and
lcall
mov
inc
ret
mov
jmp
lods
aad
and
or
inc
std
mov
orb
sub
call
cltd
xor
fadds
inc
mov
test
mov
movsb
and
in
push
add
xor
sub
aam
sub
out
xor
mov
loopne
add
movsb
fisubrl
ret
mov
ret
push
mov
cltd
bound
push
lret
push
mov
xorl
shrb
mov
mov
test
stos
cmp
clc
jmp
lods
sbb
push
inc
and
mov
loop
add
mov
sub
je
and
je
clc
sahf
fsubrs
imul
out
cmpsb
xchg
rolb
mov
dec
sub
rcl
adc
mov
call
enter
add
pop
or
pop
les
push
daa
push
or
outsl
add
mov
inc
leave
cmp
ret
int
mov
add
call
roll
aad
lret
lods
icebp
sbb
mov
shll
test
icebp
pop
xchg
fcomps
cmp
xor
push
stos
jbe
add
data16
sub
push
inc
push
ljmp
or
mov
in
aas
or
xor
mov
outsb
mov
dec
adc
sbb
ror
mov
scas
std
aas
lds
and
bound
mov
icebp
sub
cmpsl
insb
and
ljmp
xor
sub
xchg
push
push
cmp
cli
or
mov
xchg
jne
pop
sub
add
sub
push
xchg
jle
adc
cltd
cld
dec
ret
aam
add
jmp
mov
inc
add
mov
in
push
adc
leave
cwtl
push
sarb
dec
sbb
cmpsl
fstps
sarl
and
sbb
cltd
cli
add
repnz
mov
sub
and
push
cmp
inc
dec
clc
sbb
add
xor
push
mov
cmp
push
data16
jae
shr
mov
or
les
decb
add
ss
xchg
rcrb
jns
pushf
jb
dec
sub
rol
mov
xlat
mov
out
or
pop
push
cld
mov
stos
and
pop
lods
pop
incl
ret
test
xchg
jns
scas
pop
jnp
fimull
nop
sub
lret
hlt
insl
es
lcall
push
sbbl
mov
adc
daa
das
loopne
aam
add
cmpsb
dec
add
fisubrl
sti
int
xchg
cli
lock
adc
add
sbbl
pushf
xchg
xchg
mov
filds
inc
sub
mov
jg,pn
ljmp
mov
js
fdivs
fiaddl
add
mov
aam
stos
adc
rcl
addr16
cmpsb
xchg
dec
stos
cmp
dec
mov
insb
push
mov
cmp
xchg
idivb
movsl
stos
push
cmp
push
aaa
cwtl
pop
push
mov
repnz
inc
xchg
push
fistps
outsl
jp
lea
add
add
xchg
pusha
mov
jg
jb
pop
testb
into
cmp
dec
pusha
imul
orb
push
insl
lods
cmp
loop
fisubl
or
adc
push
and
adc
div
out
js
repnz
sub
addr16
rolb
mov
push
add
xchg
add
scas
mov
jp
xchg
jb
xlat
pop
popa
push
xor
mov
mov
movsb
and
mov
xor
mov
or
insl
inc
filds
adc
scas
dec
cltd
rcrb
cli
or
shrd
mov
mov
test
divl
push
mov
mov
mov
popf
sub
push
mov
and
clc
out
pop
dec
int3
mov
idivb
pop
or
xchg
lret
cmp
sbb
gs
scas
or
clc
mov
incl
lods
lock
dec
add
outsb
adc
ror
push
and
mov
pop
sbb
insb
in
mov
aas
sahf
push
pusha
and
jg
lods
dec
stos
pop
imul
add
clc
les
jo
add
lock
mov
es
xor
add
popf
popa
add
je
clc
add
jb
sub
push
ret
leave
das
dec
ljmp
nop
aaa
sub
ds
sarb
fimuls
dec
inc
testb
lret
aas
shll
adc
call
jb
mov
pop
and
arpl
mov
es
fs
push
inc
mov
mov
movsl
add
int
movsl
sbb
imul
cmp
test
and
imull
pushf
xchg
ficomps
sti
hlt
lock
icebp
mov
subb
incb
fistl
sete
mov
fnstsw
shl
call
mov
test
pop
fdivr
inc
popa
ret
pop
fs
adc
mov
push
jg
jl
jae
push
inc
cmpps
cmp
xchg
push
sar
incl
fs
dec
mov
fs
dec
aaa
mov
add
inc
and
ss
std
jmp
stc
adc
les
lods
mov
push
popa
shrb
ss
mov
es
mov
out
dec
push
push
adc
pop
lret
or
enter
push
popa
push
fiaddl
outsl
add
aam
mov
ljmp
mov
data16
bound
test
stc
mov
imul
decl
and
rclb
daa
orb
xchg
imul
daa
cwtl
mov
xor
sbb
movsb
ljmp
pop
ficompl
in
inc
mov
rol
add
xchg
dec
and
bound
clc
xorb
jne
xlat
stos
movsl
jg
xor
ss
mov
lock
es
or
push
cmc
and
lds
push
jno
pop
popa
sbb
dec
inc
xchg
push
mov
and
xorb
cli
rcrb
cmpsb
pop
mov
pusha
in
outsb
mov
xor
cmp
add
fsubr
jg
pop
loop
mov
dec
ljmp
mov
cmp
imul
mov
int
jno
push
sub
std
add
inc
xor
call
lock
sub
mov
daa
pusha
mov
xchg
add
pop
add
inc
or
inc
mov
repz
mov
mov
mov
or
outsb
insb
popa
mov
or
out
adc
or
cmp
xlat
or
out
std
rcrl
sbb
push
inc
lock
mov
jg
mov
xchg
mov
cmp
fdivrs
es
pop
mov
sub
fisubrl
test
stos
bound
mov
das
dec
stos
aaa
std
out
fsubs
jle
gs
mov
add
cld
fs
in
sahf
xchg
xor
cs
rorl
cld
lods
cmp
mov
add
add
clc
jns
push
jecxz
cltd
dec
xor
out
outsl
mov
jg,pt
subb
stos
cmpsb
inc
and
loopne
clc
sbb
push
inc
ret
pop
and
mov
movsl
and
lods
xchg
lock
insb
cld
mov
clc
in
stos
fcomip
mov
mov
xorb
pop
ss
mov
jno
nop
push
rcll
lods
scas
push
faddl
into
notb
sbb
mov
adc
mov
subb
push
in
std
dec
pop
xchg
jmp
hlt
int3
sub
in
adc
hlt
lcall
loopne
fsub
sbbl
outsl
js
xlat
mov
loop
call
aam
pop
xchg
jno
out
sbb
push
dec
jle
add
std
test
test
push
mov
scas
cmp
pop
daa
pop
jg
or
mov
fidivl
push
sahf
push
pop
xor
out
add
pop
add
jge
mov
rcrb
je
movsb
divl
jmp
fptan
stc
adc
rolb
aas
ret
ret
pop
enter
mov
stos
andl
jo
rol
mov
call
xor
and
pop
in
call
subl
sbb
pop
popa
xor
push
add
imul
push
stos
stc
sub
mov
or
jae
sbb
pop
add
or
and
push
repz
mov
hlt
and
mov
dec
inc
sti
sahf
sbb
cmpsb
arpl
ret
ret
hlt
sub
or
hlt
movsb
cmovae
mov
pop
cmp
mov
or
sbb
fidivrl
jae
xchg
adcb
add
cmpsl
decb
loope
ret
ja
and
jmp
mull
dec
pcmpgtb
cltd
add
dec
jge
shl
int
cmpsb
stos
fiadds
dec
hlt
int3
push
pop
or
sub
pop
sbb
mov
mov
sbb
mov
test
into
inc
movsl
nop
xor
cmpl
sbb
aam
notl
xchg
and
fsubl
cli
dec
inc
adc
mov
jle
mov
subb
shlb
dec
mov
hlt
aam
nop
adc
and
rorb
in
and
mov
cmovnp
push
add
inc
pop
jle
add
add
inc
test
out
xchg
rcrb
stos
xchg
test
rolb
cltd
or
add
fsubrs
lret
sbb
dec
cmp
ja
arpl
jo
out
arpl
in
nop
push
jge
mov
push
mov
and
lea
out
lock
mov
xchg
mov
int3
fidivl
mov
mov
sbb
xor
jns
mov
or
mov
movsb
xor
shlb
xchg
pushl
and
and
les
call
fistpl
mov
sub
cmp
arpl
adc
mov
push
add
cmpsb
into
jecxz
cmp
mov
inc
imul
sbbb
fadds
sub
and
arpl
subl
inc
sahf
pop
sbb
sbb
pop
sub
mov
adc
or
pusha
mov
lcall
std
add
inc
loopne
je
in
jnp
xor
gs
adc
loope
hlt
test
xor
and
jge
and
jg
jge
xorb
lcall
rcrl
cld
js
or
lods
jmp
ss
adc
add
and
mov
jns
cld
and
fisubrs
scas
test
xchg
and
emms
lods
fistps
ds
inc
test
sbb
jg
mov
outsb
push
loopne
dec
cmp
loope
xor
clc
test
jo
stos
inc
les
and
popa
sbb
test
and
dec
sub
mov
fcoms
jl
sbb
mov
out
mov
add
je
ret
mov
cmp
enter
insb
add
dec
or
addl
shll
addb
cli
mov
add
sbb
pusha
aad
ss
and
add
cmp
das
sub
push
xor
int3
xor
repz
ja
push
fcomps
xchg
xor
ljmp
lret
es
and
mov
bound
mov
sbb
fdivs
pusha
cwtl
mov
cmpsl
adc
nop
add
sti
popa
or
insl
inc
cmp
pushf
shlb
ret
sarb
fdiv
adc
pop
inc
add
sbb
and
mov
ret
add
jb
idivb
in
fmuls
or
dec
or
lret
sub
sarb
sbb
lret
aam
or
and
mov
bound
rcr
pushf
and
cli
enter
inc
add
push
out
adc
insb
sarb
loope
loope
lret
cs
push
push
int3
add
test
jb
pop
and
sbb
imul
incb
dec
xchg
push
and
shlb
xor
enter
and
dec
and
insl
sahf
std
cwtl
push
mov
mov
jb
es
lret
cmp
push
mov
lcall
rclb
cmp
xorl
in
rolb
inc
mov
cli
repz
mov
fcoms
mov
test
xor
sbbl
mov
or
inc
rorl
fcomps
add
loopne
inc
sbb
icebp
dec
mov
scas
movsl
aam
mov
inc
shl
lock
fldl
sbb
das
add
aad
push
dec
jo
mov
add
jmp
mov
jmp
loop
or
rcrl
inc
scas
push
mov
xchg
push
xor
lcall
inc
clc
aas
lret
enter
and
xor
ss
lcall
jl
popl
cmp
cmp
and
and
repz
daa
push
movb
mov
sti
xchg
ljmp
insb
xor
les
aaa
dec
cmp
andnps
mov
push
xor
lds
pusha
lock
pop
add
inc
fists
fadds
subl
add
pop
inc
sbb
add
repz
mov
inc
test
jb
or
fs
or
out
push
lods
dec
jae
jae
cs
cmp
inc
adc
arpl
in
jmp
mov
in
mov
lcall
ficoml
test
mov
lcall
bnd
js
jo
bound
mov
pop
mov
shl
sub
ror
mov
jmp
add
sub
lret
movsl
sub
mov
sbb
test
or
push
xchg
les
dec
jns
fdivrs
add
dec
daa
add
data16
out
gs
xor
popa
enter
mov
jae
aad
sbb
adc
jl
adc
push
mov
nop
imul
fstl
mov
call
push
test
push
pop
cmc
imul
fnstsw
loope
jo
sub
mov
mov
pop
ret
sbb
cmp
test
mov
orl
lret
add
out
popa
or
or
movsl
outsl
popa
and
aad
mov
test
call
xchg
xor
xor
cmp
cmpsl
and
mov
adc
fldl
jns
mov
lods
adc
test
push
mov
and
fsts
and
cmp
test
add
jge
and
and
out
filds
pop
cld
dec
in
cwtl
xchg
xor
jle
mov
imul
sub
and
mov
sbbl
pop
sub
add
outsb
jnp
aaa
and
add
push
jge
jecxz
cli
clc
clc
xchg
addb
ret
mov
into
mov
inc
lcall
xchg
mov
add
inc
shlb
add
ss
mov
jnp
repz
and
arpl
push
in
les
pop
add
cmp
sbb
lods
jecxz
jne
or
test
xor
movsl
push
inc
xchg
jo
stc
stc
mov
sbb
dec
enter
orb
and
int3
add
dec
adc
decl
adc
decl
sti
insb
push
repnz
jae
out
popa
cld
aaa
scas
and
jno
leave
out
hlt
out
in
or
sub
push
sub
cmp
repz
push
test
test
push
add
mov
repz
out
lcall
in
sub
jno
jecxz
loopne
sub
add
add
jl
ljmp
je
movsb
les
sbb
jge
bound
jnp
addl
fidivrl
cmpsb
inc
dec
test
cld
aas
sbb
jb
lods
jne
xor
lods
sar
xor
adc
add
sbb
std
and
mov
test
add
dec
or
push
add
popaw
int3
mov
out
dec
jp
sbb
scas
bound
adc
cmp
loope
aad
outsl
incb
call
cmpsl
add
mov
dec
xor
mov
enter
sti
or
pop
std
mov
test
pusha
add
jg
mov
push
daa
stos
mov
lods
cli
movsl
mov
ljmp
cmp
sbb
dec
test
vmovdqu
and
sub
pop
push
jno
test
sub
aam
out
mov
dec
sahf
xchg
push
std
push
xchg
dec
es
cmp
push
jns
xchg
xor
or
ds
mov
jp
icebp
imulb
sbb
into
jl
pop
es
mov
addl
das
dec
jmp
adc
xor
ds
mov
fsubs
inc
incb
lock
jg
mov
test
pushf
sub
pop
mov
in
and
jbe
sub
pop
jg
stos
or
sub
adc
ficompl
insb
leave
and
xor
cmp
outsb
sbb
mov
loope
add
scas
pushl
dec
lock
sarb
lods
fwait
cmc
shrb
test
cmpl
in
imul
push
icebp
push
aam
loope
test
jnp
mov
mov
inc
leave
shlb
or
adc
push
cmc
inc
sbb
xchg
mov
jns
ja
inc
ljmp
mov
sub
nop
stos
dec
xor
and
fiadds
xchg
add
lret
std
pop
mov
and
pushf
fiadds
in
pop
push
lcall
fmuls
cld
sbb
fcomip
test
js
insb
add
pop
or
nop
clc
aaa
cld
aaa
insb
sbb
cltd
ja
iret
jecxz
push
sub
adc
mov
push
xchg
jbe
outsl
mov
sbbl
sbb
fs
push
mov
call
loopne
add
sti
dec
add
fdecstp
rorb
mov
inc
addb
sbb
pop
jnp
rcll
and
or
adc
mov
jbe
pushf
loop
xchg
test
fwait
addr16
mov
cmp
dec
shlb
mov
fimull
ljmp
ljmp
dec
or
inc
scas
mov
sub
inc
lcall
add
cli
shrb
scas
add
fidivl
outsb
inc
adc
dec
jl
cwtl
pop
jp
sti
clc
sti
call
push
sub
in
les
leave
fs
inc
xchg
shrb
mov
push
loopne
loopne
add
add
push
and
test
mov
loope
mov
loop
push
inc
hlt
mov
cmp
js
mov
insb
std
icebp
and
icebp
shl
nop
mov
movsb
lock
rcrb
sar
testb
inc
sahf
dec
jnp
lret
fbld
mov
inc
cmp
jo
push
shlb
push
sbb
ja
lock
pop
pop
shl
sbb
jg
fisttpl
or
outsl
add
pop
jle
repnz
xchg
test
mov
mov
adc
mov
push
dec
movb
or
mov
adc
xor
adc
jl
pop
insb
clc
cmpsb
decl
dec
cmp
dec
mov
std
arpl
lds
lock
test
mov
xchg
xchg
xchg
out
clc
stos
sub
pop
hlt
ljmp
mov
mov
push
cltd
jecxz
mov
mov
dec
lret
icebp
outsl
or
push
cmc
mov
add
jb
test
sbb
fcoms
sub
and
mov
push
cmpsb
mov
jb
incl
ljmp
loope
jmp
ss
pop
jbe
outsl
or
jg
mov
ret
inc
nop
addb
out
xor
or
fmuls
call
das
pushf
sti
div
cmc
out
sti
xchg
add
lods
add
or
outsl
push
clc
add
insl
adc
sub
jecxz
cli
pop
int3
xor
out
sbb
adc
out
inc
test
clc
inc
and
mov
xlat
clc
pushf
jp
inc
mov
xorb
pop
add
js
ja
cmp
dec
or
mov
xor
loopne
jnp
mov
cmp
sbb
cld
add
insb
inc
roll
cmp
pushf
into
subb
cltd
ret
insb
sub
dec
pop
pop
and
mov
pop
and
inc
insb
adc
lcall
loopne
les
adc
mov
mov
cmc
mov
and
jo
pop
pusha
cld
jge
jo
sub
mov
pop
cmp
sti
movsb
xor
or
and
cmc
adc
add
test
sub
in
cli
add
loope
fbstp
fnstcw
or
add
mov
popa
mov
xor
mov
jo
mov
inc
std
dec
nop
stos
fwait
outsl
jp
and
jmp
test
orb
arpl
es
jecxz
aad
ja
movsb
push
cmpsl
rcr
scas
xchg
xor
pushf
push
je
iret
and
push
lea
pop
add
mov
xor
cli
adc
mov
mov
fsubs
sub
aaa
mov
out
rorb
push
test
int
loopne
xor
jno
mov
lahf
mov
fidivrl
xchg
stos
jge
xchg
sarb
push
dec
inc
or
dec
add
cmp
pop
lret
pop
cld
sbb
xchg
dec
sub
xor
jg
es
xchg
sbb
aad
shl
incl
ljmp
mov
mov
mov
pop
mov
nop
fildll
test
leave
mov
insl
or
test
std
outsl
mov
jp
push
ret
sbb
pushf
icebp
mov
add
mov
repz
mov
cld
fs
sbb
mov
rol
jb
jl
clc
push
push
es
aas
pop
or
and
adc
dec
cmp
mov
f2xm1
jl
decl
sbb
movsb
xor
pop
or
inc
adc
mov
add
ljmp
adc
addr16
fcomip
es
cmp
adc
adc
sbb
pop
adc
jle
scas
pusha
adc
add
xor
jne
jmp
sbb
icebp
bound
mov
dec
dec
in
movsl
fwait
sub
xor
mov
xchg
pop
add
aam
jb
add
or
sbb
and
loope
xor
daa
push
mov
or
ret
push
dec
loopne
sbb
cwtl
xchg
pop
mov
call
cmp
or
sar
push
push
mov
dec
repnz
cmp
xchg
push
add
call
mov
je
test
adc
dec
and
lock
mov
inc
cmc
xor
pusha
rcll
lods
jecxz
pushf
pop
or
sbb
or
das
flds
add
fimull
xchg
inc
ljmp
jae
rorb
sbb
push
aad
in
ret
mov
adc
ficompl
xchg
inc
scas
xchg
shr
xchg
xchg
inc
fiaddl
jl
xor
adc
clc
les
adcb
nop
into
loopne
mov
adc
mov
and
or
sub
aad
push
lds
xchg
add
inc
andb
popa
pop
dec
outsl
xchg
push
rcrb
mov
sbb
inc
loope
sbbb
sbb
shrl
dec
xor
imul
jnp
out
pop
and
add
mov
sub
int
cmp
pop
pusha
cmp
in
pop
aad
push
jmp
jmp
cmp
jae
and
pop
outsl
dec
orl
hlt
mov
add
in
fstpt
push
xchg
dec
mov
fucomi
cmpsb
je
add
fmuls
cs
jp
inc
pusha
mov
addr16
and
shll
dec
push
push
lea
loopne
icebp
add
in
dec
add
lods
adc
ja
sti
xchg
inc
in
dec
add
fwait
movsb
mov
dec
rolb
test
addl
hlt
aas
daa
push
lret
bound
or
shlb
das
or
aas
pop
lock
loopne
dec
and
xchg
jne
dec
adc
add
mov
or
add
dec
jl
xor
xchg
pop
lds
mov
mov
jp
arpl
jbe
rorb
push
test
pop
or
adc
sub
mov
or
add
sub
adc
xor
cld
sbb
xchg
and
pop
dec
sub
push
sub
push
outsb
mull
int3
or
enter
add
cli
dec
inc
inc
inc
mov
add
mov
mov
fisttps
push
adc
jl
leave
xlat
in
mov
popa
hlt
mov
mov
out
pop
push
cli
int3
lret
sbb
xor
ret
jmp
notb
popa
or
adc
mov
xor
rol
hlt
sbb
xchg
xchg
popf
inc
push
test
test
and
mov
jecxz
inc
lret
push
imul
pop
dec
test
sarl
add
xor
sub
aam
lcall
loop
loop
push
adc
shl
pop
dec
shlb
adcl
std
push
addl
les
add
and
mov
fidivs
mov
int3
and
cld
rorl
loopne
add
xor
icebp
adc
push
mov
add
inc
in
jp
xor
addr16
or
pop
mov
dec
pop
jae
rolb
pop
in
cmpsl
rorl
push
xor
pop
dec
loopne
and
and
out
adc
lea
dec
lds
ljmp
sub
clc
jbe
push
add
inc
cmpb
mov
adc
dec
mov
mov
out
aam
loope
and
fiaddl
aad
dec
adc
int3
sahf
cmp
je
xor
into
sbb
call
sub
add
aaa
test
jae
push
sub
mov
leave
fsts
pop
xor
shrl
movsl
and
xchg
and
xor
bound
int
aam
shlb
and
jmp
icebp
jecxz
and
or
push
pop
aas
xorl
movsl
sub
cmp
jo
add
loop
xchg
sub
cmp
jne
sar
jp
aas
dec
lahf
pop
decb
push
iret
adc
test
ds
ja,pt
mov
lock
add
inc
dec
mov
fimuls
mov
xchg
push
dec
in
mov
in
dec
loopne
mov
repz
push
cmp
cld
outsl
pusha
ljmp
clc
loopne
or
xor
cmp
in
xchg
enter
jecxz
jo
inc
imul
cmc
jbe
mov
scas
mov
xlat
add
rcl
dec
lods
out
sub
flds
nop
in
data16
in
loope
jbe
daa
xor
push
dec
mov
jbe
sub
mov
jg
or
fidivrs
mov
les
push
movsb
test
and
neg
fs
mov
mov
pop
add
sub
mov
sub
hlt
xchg
or
cmpsl
shll
in
cmp
push
pushf
pop
test
decb
adcb
stos
addr16
cmp
rcl
sub
mov
js,pt
or
jle
sub
ret
orl
rcl
adc
lcall
pop
fldl
dec
ljmp
outsl
cmpsb
lock
add
and
out
inc
icebp
out
gs
test
and
sbb
jg
push
testb
xor
dec
fdiv
roll
aas
xor
iret
loop
sarl
jp
mov
dec
sbb
jno
xchg
adc
add
faddp
int3
jb
divb
push
or
push
ja
mov
push
push
xchg
sbb
lahf
add
inc
fdivl
pop
push
mov
mov
loope
outsb
pusha
or
jp
push
rcrb
dec
clc
insl
movsb
jle
mov
aam
add
ljmp
adc
jb
das
pop
scas
push
push
pop
mov
js
cli
lea
mov
pop
rcrb
xchg
mov
je
push
stos
inc
pop
sarl
or
dec
sbb
fsub
rcrb
push
aas
insl
sahf
push
jge
mov
dec
mov
dec
les
data16
mov
fcomip
xor
add
dec
sti
mov
dec
push
inc
cmp
and
xchg
push
and
add
sti
lret
sub
js
dec
testl
and
xchg
adc
sbbb
les
sahf
jne
push
push
call
inc
mov
jbe
lods
rcr
fs
push
pop
mov
push
sub
into
scas
add
fcoms
mov
dec
or
mov
and
sbb
adc
add
cmp
xchg
add
dec
push
scas
mov
mov
lea
les
xchg
mov
lock
inc
mov
cmc
insb
in
loope
or
lds
lea
sbb
test
cmp
fptan
mov
dec
add
in
push
pop
and
inc
jmp
push
mov
imul
arpl
and
jg
sbb
inc
mov
sbb
push
jns
adc
xlat
xor
scas
and
mov
lods
pop
sbb
ret
or
fmull
push
mov
and
adc
jp
xor
push
sbb
push
sub
or
ret
shl
adc
sub
in
mov
dec
mov
add
add
int3
fcmove
and
or
cmp
aaa
or
jo
cld
dec
addr16
cmp
sti
mov
push
mov
fcompl
mov
fcompp
mov
andb
sbb
cltd
repnz
out
mov
jno
ret
leave
sbb
jl
incl
mov
inc
dec
xor
mov
js
test
fiaddl
push
ds
aam
add
lcall
ret
inc
ficoms
loop
inc
mov
lock
cmpsb
lret
rcrl
fsubl
sub
add
sub
into
hlt
incl
imul
daa
jno
xorb
and
or
dec
xor
rcrb
sbb
mov
rcr
push
cli
outsl
mov
nop
and
sub
clc
xchg
inc
push
dec
pop
sub
clc
sbb
sub
adc
xchg
jle
clc
sub
mov
cmp
outsl
xor
in
ss
scas
mov
bound
lcall
dec
mov
adc
fsub
xorl
and
xchg
mov
icebp
and
pop
test
cld
sub
or
loopne
add
vmovaps
fimull
fisubrl
das
call
sub
push
and
sub
push
lret
aad
and
xadd
das
fs
jecxz
pop
dec
vxorps
sub
jecxz
pusha
mov
xchg
dec
xor
adcl
out
test
add
mov
adc
add
add
adc
addr16
mov
add
mov
rol
std
add
inc
inc
or
rol
outsb
arpl
push
mov
xchg
add
outsl
call
or
and
stc
hlt
xor
arpl
dec
sub
pop
movsb
call
imul
push
add
outsl
ficomps
pusha
xor
jl
sbb
fadds
subb
inc
rol
adc
push
adc
xchg
fildll
dec
stos
mov
out
mov
test
shl
dec
dec
jge
mov
cmp
sbb
xor
mov
dec
fisubl
inc
inc
push
clc
movsb
mov
add
cmp
and
enter
or
jecxz
rorb
mov
adcl
push
jo
scas
fdivrs
rol
shlb
adcb
and
int
jns
test
or
push
jne
ss
push
push
mov
xchg
add
sub
rclb
push
fstpl
bound
or
mov
mov
push
icebp
push
xchg
push
mov
ret
inc
imul
or
addb
ret
fstpt
adc
dec
or
add
push
sub
xor
pop
add
ficompl
lret
in
roll
adc
push
and
xchg
or
dec
je
jo
inc
popa
adc
push
outsb
loope
fisttpll
popa
jmp
pop
dec
xchg
cwtl
mov
xor
outsl
testb
xor
pusha
mov
arpl
stos
mov
insl
icebp
pusha
ljmp
stos
xor
hlt
pusha
das
or
sub
push
pusha
shlb
mov
sub
ja
rcrl
test
fimuls
push
mov
xchg
xchg
out
ljmp
mov
push
sbb
dec
es
xor
xchg
shrb
es
and
or
add
xchg
hlt
movl
or
jmp
lds
xchg
in
xor
gs
adc
outsb
cli
mov
cmpps
out
mov
cmp
xlat
push
add
aam
sbb
or
or
mov
inc
cmpsl
fidivl
cmp
scas
jb
movsb
lods
cld
stos
mov
out
sbb
hlt
mov
jg
cmp
inc
and
sti
fcomip
jno
pop
out
mov
sub
pop
pop
pop
add
lcall
mov
mov
mov
sub
out
ds
add
add
xor
pop
mov
push
add
lock
pop
cmp
mov
sbb
out
ret
lods
push
in
jp
cmpsl
shl
data16
imul
cli
es
mov
cmp
sahf
mov
pop
jg
or
sarb
pop
or
fcomps
loop
pop
add
mov
scas
mov
xchg
movsl
push
aaa
fmull
add
and
sbb
pushl
cli
push
cmp
rorb
dec
jl
jmp
rcll
testl
sub
fcoms
xor
sub
xchg
fsubl
imul
subb
mov
mov
jp
imul
stc
leave
aad
shlb
jp
add
pusha
rcrl
pop
or
sbb
dec
mov
fisttps
mov
mov
mov
push
or
js
sbbl
or
out
jl
sbb
or
hlt
lret
mov
add
add
push
mov
fadds
popf
das
add
and
iret
sti
fwait
mov
js
aas
ljmp
cmc
movsl
and
fidivs
repz
push
mov
cs
mov
nop
sbb
push
mov
cs
daa
mov
mov
adc
pop
pop
push
add
outsl
aad
pop
pop
insb
add
cmp
enter
mov
cld
lcall
int3
ds
pop
mov
dec
mov
xor
push
add
pop
imul
nop
mov
fwait
mov
xchg
enter
dec
int
adcb
mov
and
dec
cmp
loope
mov
mov
pop
call
jb
je
cmp
pop
iret
outsl
popa
and
aam
mov
push
adc
call
mov
xlat
adc
incl
enter
push
xchg
jecxz
and
xchg
ljmp
data16
std
fdivs
mov
aad
mov
lcall
inc
push
cmp
cld
cmpsb
xchg
xchg
pop
mov
adc
shr
loop
cmp
or
das
lods
xchg
loope
call
or
int3
inc
sbb
mov
int3
mov
pop
lock
stos
mov
inc
test
push
jbe
lcall
fists
scas
nop
out
fistpl
pop
inc
stos
int
cld
and
xor
jp
or
or
mov
add
jne
ja
fistpl
in
rcll
adc
inc
push
jb
pop
out
pop
clc
jmp
cmp
call
cwtl
pop
loop
out
lods
clc
pop
in
out
and
xchg
jnp
rcll
data16
jnp
data16
fisubrs
in
in
add
inc
push
imul
dec
or
add
rorl
pop
aas
add
ror
iret
test
inc
xlat
inc
cmpsl
rorb
icebp
mov
add
mov
mov
xchg
cwtl
ja
or
loopne
hlt
push
or
aas
pop
add
or
test
jg
fisubl
pop
call
add
push
adc
movsb
pop
mov
stos
test
and
jns
into
stos
ja
or
clc
fidivrs
fwait
dec
dec
sub
outsl
and
inc
push
lock
adc
ja
scas
movsl
jg
adc
sub
jns
sub
shrl
inc
in
cmp
and
cld
sbb
cmpsb
inc
adc
enter
adc
pop
or
push
nopl
and
pop
cmpsb
repz
mov
jmp
enter
xchg
mov
jle
add
jg
mov
dec
push
inc
nop
and
and
loopne
mov
sarl
adc
clc
jl
pusha
dec
aad
and
inc
insb
bound
pop
out
or
out
test
or
imulb
addr16
iret
cli
mov
adc
int3
int
push
mov
lods
xchg
outsl
jecxz
adc
pop
cmc
inc
inc
cmp
es
and
pop
push
xlat
fistl
cmp
in
test
cld
fbstp
in
cld
fsub
mov
sbb
jo
cmp
pop
cli
xor
adc
negb
pop
mov
add
fbld
dec
das
ljmp
movsl
pop
hlt
adc
lock
inc
push
test
adc
sub
std
das
adc
or
sbb
cwtl
cmp
sbb
movsl
hlt
negl
sti
dec
adc
sub
or
clc
scas
sub
add
loopne
sbb
xorl
dec
and
cld
pop
je
popf
dec
repnz
pushf
sti
push
add
and
dec
ljmp
or
cmp
jle
push
test
aaa
pop
lock
xor
dec
lcall
push
pop
lea
fdivr
xor
mov
fmul
sub
cmc
and
loop
lret
cld
push
stos
aaa
cld
pushl
in
incl
xor
cmp
shll
rorb
orl
ljmp
aam
xchg
jns
imul
pop
adc
or
out
clc
xchg
pop
adc
or
dec
add
jnp
mov
xchg
pop
push
hlt
dec
push
and
loopne
add
mov
hlt
insl
lret
pop
adc
mov
lods
cli
mov
xchg
xor
jg
xchg
push
mov
call
push
inc
cwtl
ret
inc
xchg
dec
cwtl
mov
inc
adc
push
fidivrl
jl
ret
lcall
pop
mov
push
jmp
xchg
add
cmp
add
jae
add
add
retw
idiv
pushl
inc
xlat
xchg
adc
gs
pop
icebp
jmp
jns
call
sub
outsb
jl
jbe
icebp
xchg
bound
cli
sub
aas
je
fcmovne
popa
or
sub
jp
hlt
mov
pop
pushf
test
add
fisttpll
test
cmp
and
mov
or
adc
and
ss
lock
test
scas
in
push
sbbb
fnstsw
mov
mov
xor
pop
mov
jg
fildll
inc
repz
inc
ret
fs
mov
sub
and
stos
sbb
dec
sar
arpl
mov
je
sbb
add
aad
pop
outsl
fldenv
ss
sti
push
jp
fists
push
cmp
add
jl
out
mov
pop
sub
mov
jns
cmpsb
mov
ds
jmp
imul
mov
js
add
daa
lcall
call
shll
outsb
sbb
add
ret
and
test
clc
test
push
sti
mov
in
addb
mov
std
mov
or
mov
jle
movsb
ja
push
and
imul
add
pop
inc
and
cmp
sbb
imull
add
mov
jae
lock
cmpsb
sarb
xor
pop
lcall
push
fdiv
or
sub
adc
test
mov
call
fsubrl
pushf
push
outsl
dec
push
mov
adc
js
mov
idivl
and
rep
or
insb
idiv
mov
xor
cmp
sub
ja
lcall
xlat
xchg
xchg
lock
or
push
inc
loop
enter
add
inc
das
clc
ret
sub
andl
inc
jge
xchg
xchg
outsl
pop
mov
rclb
xchg
push
flds
int
lahf
dec
test
fidivrs
aam
subl
inc
test
mov
mov
pop
jecxz
enter
jne
mov
and
or
cmpsb
adc
cli
std
jne
int3
fdivs
cmpsl
xchg
popa
negb
dec
jecxz
add
push
imul
icebp
stos
or
jns
shll
loopne
std
das
xchg
les
cmpsb
jnp
std
test
mov
jg
std
cltd
out
sub
mov
movsb
loopne
push
mov
popf
xchg
mov
pop
outsb
lcall
loopne
in
jg
mov
test
stc
jo
sub
inc
xor
xlat
test
test
push
addr16
or
out
cmpsb
subl
jg
xlat
rcrb
fcoml
mov
push
or
jp
daa
push
mov
xchg
xor
clc
jo
sti
pop
shlb
and
jl
incl
and
or
mov
mov
or
jnp
push
inc
push
xor
fwait
or
out
cmp
jo
lea
lret
and
call
lahf
mov
ficompl
sub
dec
aas
xor
aaa
cmp
jo
sub
jg
jae
xor
dec
jmp
pop
or
pop
push
jne
jp
mov
test
aam
insl
xchg
and
mov
pop
call
cmp
jl
inc
xchg
cmp
push
pop
test
decl
fcomps
mov
lahf
cmp
jb
mov
lret
rcrl
mov
xor
inc
je
sahf
jb
sarb
outsb
ja
push
jl
push
fisttps
std
cmp
jb
gs
insl
xor
mov
jno
fs
fimull
or
pop
imul
sbb
pop
mov
add
out
and
jbe
xor
mov
hlt
and
xor
pop
sub
test
lcall
xor
sahf
push
out
sub
sahf
and
dec
fcmovb
inc
lcall
cmp
out
movb
in
inc
mov
lock
js
dec
mov
imul
clc
adc
and
mov
mov
in
xchg
cltd
push
pop
or
addr16
ds
mov
xchg
inc
cmp
imul
inc
sti
jne
or
or
sub
outsb
out
mov
dec
push
movsb
insl
fsubp
jo
mov
xchg
pop
int3
mov
xchg
xchg
cwtl
shrl
fisttps
sbb
xor
filds
adc
adc
dec
in
pusha
jg
or
test
mov
adc
and
sub
mov
cld
push
or
test
sbb
pusha
dec
outsb
cld
loop
ds
dec
call
lret
lret
sbb
jmpw
mov
lock
jp
jb
and
sub
sbb
sar
push
dec
nop
sti
in
dec
lods
fidivl
fs
sbb
mov
in
sub
lds
mov
sbb
cwtl
cmc
outsb
xchg
out
pusha
add
pop
lea
sahf
incl
shrb
add
in
mov
lcall
cli
or
rorb
clc
lds
bound
xchg
inc
inc
jbe
rcrb
jg
or
jecxz
inc
dec
pop
lcall
push
and
in
dec
mov
out
xchg
xchg
repz
sbb
fmull
dec
mov
icebp
or
std
sbbb
mov
loop
insl
add
push
push
fldcw
loop
mov
cmpb
xor
clc
or
cmp
ljmp
ja
addb
cs
and
ds
lock
test
cmp
pop
sti
cmp
inc
mov
push
mov
cmp
and
mov
mov
pop
mov
pop
xor
add
into
out
fcmovbe
sbb
test
je
stos
ret
jecxz
std
mov
test
and
dec
in
adc
or
sub
inc
enter
mov
mov
sahf
adc
mov
test
mov
pop
add
jmp
js
rolb
and
adc
xchg
mov
jge
sahf
ljmp
bound
rol
xchg
neg
jle
insb
pop
fwait
pop
push
mov
mov
test
pop
ret
jle
add
fdivrs
aam
and
stos
ud2
ja
lret
pop
ret
cltd
in
and
add
movsb
fnstsw
and
hlt
add
decl
or
js
popa
sub
loope
test
ret
dec
cmpb
jbe
outsl
sub
adc
stos
lea
and
dec
mov
inc
mov
xchg
xchg
jecxz
xchg
inc
dec
or
xlat
dec
mov
adc
mov
pop
or
cmp
sbb
mov
int3
sbb
outsb
inc
mov
pop
addr16
mov
lods
push
xor
mov
mov
xor
push
inc
lds
sub
or
inc
decl
jp
dec
xor
add
add
or
movsb
pop
test
pushf
pop
mov
inc
mov
loopne
mov
push
outsl
cli
out
aad
leave
mov
fadds
es
scas
and
scas
inc
inc
outsl
xchg
adc
add
adc
or
push
out
sbb
test
sbbl
sbb
outsl
push
inc
mov
fucomp
movsb
push
jmp
push
mov
pop
cmc
ret
xchg
or
loop
adc
stc
jb
loope
or
cs
mov
icebp
xchg
push
dec
out
xchg
mov
outsl
pop
daa
clc
adcb
sarl
mov
test
push
mov
pop
and
jo
roll
lcall
and
in
pop
sbb
push
pop
sahf
orl
loope
mov
sbb
rclb
push
adc
lret
add
fs
adc
test
add
movsb
addl
fimuls
popa
outsl
js
pushf
add
and
mov
add
pop
out
sbb
insl
adc
lcall
adc
jb
jp
pop
mov
mov
sub
add
lods
cli
arpl
inc
fwait
or
sbb
incl
fmull
movsb
cmpsb
mov
ret
jmp
frstor
and
lds
fisubrs
divb
jle
adc
fsubrs
cli
ret
inc
push
fists
icebp
adc
fdivl
mov
and
lret
fdivrp
dec
and
ret
popf
fs
sub
insb
loop
or
les
dec
jo
fwait
call
ret
dec
outsl
jp
mov
xchg
add
sub
mov
mov
lock
pusha
push
lods
int3
jb
jg
mov
out
stos
call
sbb
xor
or
and
lock
mov
fdiv
addb
daa
mov
pusha
rcr
sub
cli
fwait
loop
scas
nop
add
loope
mov
cmp
enter
mov
mov
sub
jmp
jge
enter
add
fdiv
ljmp
sub
fildl
mov
icebp
ja
adc
dec
and
jl
pop
mov
push
push
push
xchg
in
lock
pop
lods
xchg
adc
popa
inc
cwtl
mov
xchg
add
mov
lds
popf
cmpb
int3
jbe
mov
mov
in
les
sub
pop
add
push
frstor
pop
jno
adc
out
addr16
lds
mov
pop
xchg
addb
insl
mov
jnp
or
loope
or
inc
push
popa
mov
mov
pop
insb
and
mov
mov
frstor
fucomip
roll
in
jae
xchg
ret
add
or
pushf
or
inc
push
xor
jo
frstor
loopne
push
dec
xorb
jmp
mov
jbe
into
dec
lret
testl
and
cli
push
lods
cli
xor
add
das
popa
cld
jne
les
test
jo
stos
dec
push
sahf
imul
xchg
cs
push
xchg
loope
and
push
data16
mov
push
cs
sahf
dec
iret
mov
les
xchg
cmpsb
jno
enter
mov
add
push
mov
adc
mov
push
mov
dec
mov
sub
lcall
int3
testl
xor
mov
xor
aas
xchg
push
orb
mov
call
rclb
cmp
push
mov
shll
arpl
xor
push
jno
pop
inc
icebp
iret
xchg
mov
call
out
push
xchg
mov
and
xchg
mov
mov
jbe
adc
push
push
mov
add
rcrb
data16
in
dec
and
mov
fsubr
enter
add
divl
mov
push
test
pop
push
jecxz
jb
lret
or
push
add
add
sbb
dec
xor
jo,pt
and
pop
adc
and
and
add
test
lret
aad
xlat
mov
jp
iret
inc
rolb
in
dec
pusha
and
dec
cs
icebp
sbb
inc
orb
xor
mov
and
mov
jge
icebp
fwait
or
nop
and
cmc
add
adc
pop
dec
sub
add
add
sarb
xchg
adc
dec
push
lret
or
pop
cmp
mov
mov
mov
jb
int3
test
scas
mov
sbbl
pop
push
and
xchg
mov
pop
sub
outsb
add
cmp
pop
test
mov
xor
dec
cmpsl
repnz
sub
xchg
faddl
je
mov
clc
lcall
scas
and
sbb
mov
xchg
mov
pop
xor
xlat
imul
int
add
jo
pop
icebp
mov
mov
push
fmulp
or
adc
lock
push
lods
lret
push
and
mov
pushf
fdiv
ljmp
bound
pop
std
dec
in
cmpsb
xchg
sbb
mov
lea
mov
or
subl
loop
jnp
fsubs
sbb
sar
test
inc
sub
adc
jmp
dec
call
sub
inc
lret
test
mov
and
mov
ljmp
repz
loope
inc
cwtl
inc
xchg
loope
or
xor
xor
adc
add
push
push
je
or
sbb
dec
daa
lds
xchg
mov
je
test
ret
popa
mov
push
clc
popa
repnz
adc
mov
jo
fsubs
outsb
test
jmp
inc
pusha
adc
push
or
leave
cmpsl
push
les
and
or
inc
mov
data16
or
mov
and
adc
fsubl
ret
add
or
loopne
les
les
out
jne
mov
mov
aam
cs
js
ret
or
pop
push
add
inc
repnz
lock
cld
bound
aad
inc
dec
inc
hlt
lret
add
icebp
aam
sub
jbe
dec
sbb
imul
jge
adc
cld
orl
push
jge
lock
cmp
xor
sbb
or
and
iret
icebp
pop
inc
loopne
dec
inc
pop
dec
fcoms
adc
jp
jl
sbb
pop
xchg
inc
es
pop
pushf
call
xorb
clts
xchg
add
punpckhbw
mov
mov
add
jne
adc
mov
enter
nop
xchg
jb
push
insl
call
adc
in
icebp
js
mov
pushf
shl
sar
xchg
and
or
test
push
add
aam
gs
insb
cmpsb
sub
xor
and
out
pop
fsubl
and
and
pop
push
ss
ret
loopne
movb
js
mov
mov
in
dec
push
push
mov
fcoml
xor
mov
lret
aas
sub
mov
jno
add
shrl
pop
xor
push
xchg
pop
mov
data16
and
sub
aam
and
lock
out
loopne
repz
sub
insl
repz
mov
adc
mov
fistpl
or
dec
rcr
push
outsl
mov
jge
bndldx
jmp
ds
add
push
cmp
dec
shlb
and
and
cmpsl
fistpll
sbb
fwait
aam
pusha
jo
xchg
sbb
push
xchg
rorb
dec
mov
or
ss
pop
shr
xchg
or
cmc
add
psubd
lahf
inc
testl
adc
pop
pop
and
cmp
sbb
adc
daa
jecxz
sub
test
and
cld
jnp
rcrb
rol
push
into
daa
inc
js
add
add
sbb
jl
xor
pop
cmpsl
sbb
out
add
push
push
jp
xor
jne
pop
cmp
adc
lock
inc
push
jb
and
test
notl
pop
mov
ja
dec
ret
pop
mov
add
adc
xor
add
fistl
push
lcall
call
push
cld
jge
jo
mov
xorb
and
mov
xor
cmp
call
dec
call
shrb
or
and
je
pusha
or
andl
jo
int
adc
jnp
sub
push
inc
and
loopne
mov
shrl
fbld
inc
ss
push
pop
or
jmp
and
gs
adc
add
inc
adc
int3
pop
dec
adc
call
cmp
sbb
aaa
lock
or
rclb
mov
fsubrp
mov
outsb
sub
inc
aad
adc
jg
sub
push
push
aam
sub
mov
pop
dec
cmp
lea
mov
xchg
adc
shlb
xor
sbb
dec
jg
and
xchg
cmp
jo
cmp
sub
adc
push
test
or
mov
xchg
and
ret
and
add
lcall
outsb
add
out
sub
rolb
add
movsl
fnsave
icebp
mov
cmp
std
rolb
inc
or
add
ret
xor
movb
cmpsb
mov
sbb
dec
cmp
or
faddl
sub
sub
push
dec
ja
imul
sub
es
cli
pusha
cmp
in
adc
popa
sub
loope
push
mov
pop
cmpsl
frstor
ret
sbb
push
push
mov
dec
mov
pop
and
rcll
nop
or
hlt
inc
add
cmp
aam
ret
or
sub
xchg
clc
js
inc
stc
mov
out
cmp
or
sbb
pop
lock
and
mov
or
or
inc
and
add
into
mov
add
jnp
sub
dec
inc
push
adc
add
fdivrl
cld
cmp
pop
movsb
das
mov
mov
sub
rcll
mov
xchg
mov
es
xchg
andb
adcl
jecxz
adc
xor
test
push
add
iret
push
cmpsl
dec
sub
adc
outsb
adc
mov
xchg
jo
jmp
add
lahf
dec
sarb
cmp
icebp
aas
push
jbe
stc
dec
or
rol
or
cli
sbb
jmp
mov
pop
push
push
inc
and
sub
pushf
movsb
loop
js
or
add
dec
push
sub
xchg
jp
and
test
xor
ret
test
jecxz
dec
inc
cld
mov
and
push
addl
std
test
jne
daa
je
pop
push
test
inc
fs
xor
push
jl
jb
out
shlb
aas
push
dec
add
cmc
sub
lock
mov
cmpsb
and
cmp
and
aam
cwtl
mov
cltd
ret
adc
pusha
cmpsb
addl
sub
dec
pop
mov
push
cmpsb
jo
mov
notb
rcrl
push
add
pop
push
adc
or
ret
sub
sarl
loopne
pop
cmpsb
push
adc
divl
add
aaa
fldl
rolb
aam
loopne
pop
sub
sub
push
sti
push
mov
lcall
into
push
js
mov
xchg
sbb
push
xorl
cmp
inc
push
and
sahf
addr16
mov
outsl
cmp
and
or
mov
lds
push
lods
mov
cltd
adc
sub
mov
push
mov
mov
pushf
mov
jns
mov
jo
jne
push
pop
lock
imul
pop
push
rorb
mov
ja
cli
mov
xor
movntps
jns
clc
mov
cs
mov
stos
mov
or
adc
fldenv
adcb
bound
add
fisttps
mov
xor
push
roll
out
mov
nop
outsl
inc
add
mov
pushf
jg
mov
inc
jno
and
enter
jle
fidivrs
and
ret
outsl
mov
je
call
ret
bound
incb
sbb
jbe
fcomip
ljmp
add
popa
loope
jno
subb
xor
jg
mov
mov
ret
xchg
jg
fs
clc
adc
add
or
call
dec
fs
leave
fisubrs
cmc
dec
jbe
pusha
pop
loope
mov
mov
jp
rorb
xor
xor
jl
jg
adc
and
pop
add
inc
fs
incl
stc
sbb
xchg
push
or
pop
sub
jo
or
mov
push
call
add
in
xchg
push
inc
in
dec
sub
jb
test
jecxz
paddd
dec
enter
jb
push
inc
cmpsb
mov
mov
testb
dec
jbe
xor
sub
mov
imul
cmc
stc
jbe,pt
cmc
pop
lcall
xor
sahf
push
mov
jg
aaa
bound
outsb
enter
add
xor
lahf
int
push
inc
rcl
test
mov
inc
int3
out
sbb
mov
mov
mov
mov
les
shll
call
xor
ljmp
or
into
stos
jno
addl
sbb
mov
call
sbb
sbb
xchg
mov
mov
xlat
pop
lahf
mov
mov
push
sarl
sub
or
push
cli
cwtl
sbb
cmp
std
stc
xchg
mov
add
add
dec
sbb
ljmp
ljmp
and
sub
cmp
mov
pop
and
incl
pop
lahf
cmc
sbb
ret
mov
xchg
adc
adc
xor
jmp
pusha
sti
push
add
add
popf
andb
or
neg
jg
xchg
notb
js
sub
push
inc
or
outsl
incl
or
fistpl
mov
pushf
pop
jb
scas
add
es
nop
movswl
sbb
scas
add
rcrl
adc
push
pop
inc
clc
ret
inc
loope
inc
sub
aaa
rcrb
jg
mov
mov
mov
push
into
pop
sti
xchg
jmp
stos
inc
pop
push
addr16
jb
pop
insb
pusha
lret
loope
jne
negl
ficompl
sbb
aad
xchg
inc
and
fbld
add
repnz
fdivl
mov
and
enter
add
cwtl
pop
sti
hlt
inc
stos
and
mov
mov
cld
pop
cld
shll
jbe
xchg
aaa
loopne
and
push
nop
pusha
jnp
adcb
stos
clc
jae
cmp
pop
les
add
lcall
push
jl
rcll
xor
and
in
or
sbb
enter
add
sbb
cmc
inc
filds
inc
and
adc
push
adc
shr
arpl
dec
enter
sub
adc
bound
movsb
cmpsb
out
cltd
push
outsl
pop
adc
push
sbb
mov
cli
call
adc
adc
jmp
mov
pushf
inc
pusha
mov
cwtl
add
mov
ljmp
mov
jp
cmp
sbb
ret
out
pop
adc
push
subl
rcr
shll
das
loope
cmpsb
adcb
mov
sbb
add
adc
cltd
or
pop
mov
mov
push
or
aas
push
push
call
inc
cmpsb
sub
push
mov
jne
and
in
test
adc
pop
in
add
xchg
push
es
sub
push
not
mov
movaps
cmpsb
sbb
aaa
mov
clc
add
nop
cli
mov
push
repnz
outsb
mov
inc
jb
cmp
xchg
incb
sti
jg
or
cld
mov
lods
add
cmp
inc
sbb
adc
enter
in
test
jg
dec
inc
adc
cmp
ja
aad
lods
test
mov
test
adc
or
cmp
js
cmp
addb
loope
aam
and
lds
sub
adc
fwait
xchg
loop
loopne
nop
aad
clc
ss
rorl
jo
mov
adc
cmp
jl
fs
loop
scas
jo
pop
xchg
mov
jnp
test
decb
cli
mov
push
and
daa
push
and
adc
dec
mov
dec
mov
mov
in
insb
push
mov
in
cmpsb
push
jb
add
ret
faddl
cmpsl
cmp
pop
cmc
xchg
lcall
xchg
mov
cwtl
cli
nop
adc
ret
daa
jge
shr
outsl
inc
incl
add
sbb
lods
out
jmp
lods
jbe
clc
jb
scas
clc
rolb
les
mov
loopne
mov
dec
stos
mov
jecxz
pop
jmp
es
lock
and
xor
xchg
xor
jl
adcl
pop
sub
lcall
pop
sub
cs
jb
adc
sar
xlat
movsb
sti
add
aam
jle
in
cmp
shll
push
fiaddl
aam
mov
push
loope
scas
scas
xchg
data16
scas
or
xchg
mov
mov
xor
incl
fsub
movsl
ds
mov
jl
ljmp
addb
dec
dec
outsl
ficompl
sbb
daa
sahf
xchg
std
lock
sub
jg
inc
mov
mov
sbb
fbld
push
jb
jo
ficomps
mov
mov
xor
cmp
enter
or
inc
sarb
ficoml
pop
adc
push
repnz
cmpsb
mov
inc
cld
sbb
fwait
sbb
loopne
mov
push
or
outsb
xorl
mov
rcr
lods
dec
lock
lret
inc
cmp
and
push
add
div
or
add
int
imul
adc
and
sfence
stos
mov
js
xor
sub
xor
mov
aaa
add
sbb
icebp
adc
fidivrs
jno
jmp
inc
sahf
push
pushf
ficomps
jle
dec
and
les
iret
push
dec
imul
mov
test
and
inc
mov
cmpsb
ss
and
jl
incl
subb
or
cmp
cmp
enter
das
pop
aam
into
push
aaa
mov
ja
mov
and
sti
xchg
inc
shl
outsl
adc
push
adc
sbb
cmpsl
test
inc
fistl
stos
cmp
mov
mov
movsl
dec
add
cmp
shr
imul
or
or
and
imulb
push
jnp
subl
call
pop
js
mov
add
pop
mov
scas
xchg
in
icebp
sbb
icebp
shll
pop
and
jecxz
dec
pop
lods
les
push
test
mov
sbb
repnz
rcrb
cmp
test
add
in
sbb
mov
dec
dec
jne
aaa
cltd
xchg
xchg
pop
std
incl
sbb
in
sub
rorb
and
aaa
pop
sub
mov
loopne
or
or
call
sbb
jl
stos
jo
add
jg
push
scas
cmp
mov
shrb
adc
insl
dec
cmpsl
std
mov
jg
push
add
sahf
jmp
dec
push
std
fwait
cmp
and
dec
loop
dec
adc
or
test
jle
out
js
cli
xchg
ja
dec
and
or
xchg
lods
roll
sbb
jo
mov
jecxz
add
jb
xchg
adc
mov
cmpsb
lcall
mov
sar
stos
jl
ret
cld
out
xor
push
push
adc
or
call
ret
push
loopne
repnz
add
outsl
adc
mov
adc
or
inc
dec
call
sub
sub
into
mov
jnp
loope
jle
add
inc
mov
in
jo
imul
inc
push
in
pop
movsb
push
pop
cmpsb
loop
cwtl
pop
pop
xchg
out
and
aaa
insb
cmp
or
push
bound
or
ja
dec
mov
incl
fstp
pop
jns
hlt
xchg
mov
mov
lea
adc
mov
dec
lcall
xor
outsl
cmpb
push
pop
loopne
add
aad
dec
icebp
shlb
out
ficompl
jl
in
push
mov
push
movsb
add
xor
mov
shll
xor
das
inc
inc
sub
sub
test
adc
or
rorb
fisubl
test
dec
sbb
movsb
in
mov
pop
pop
sarl
adc
pusha
insl
jb
dec
outsb
js
in
aaa
adc
sub
out
data16
sub
in
pop
push
popf
movsb
mov
cwtl
push
pop
cmpsb
outsb
pop
mov
push
push
add
inc
jnp
outsb
or
mov
fcoml
rolb
push
dec
ja
fdivl
fiadds
stos
add
pop
rcrb
and
ja
ret
cmpsb
pop
mov
fstpt
cmpsb
lock
xchg
cmp
fsubs
arpl
inc
add
mov
fadds
loope
cld
popf
test
dec
cld
mov
aaa
out
mov
push
int3
sbb
mov
lock
iret
call
pop
loop
es
mov
test
jb
and
dec
out
pop
mov
xor
cltd
mov
out
add
add
adc
leave
pop
mov
adc
inc
in
push
es
clc
cld
and
jne
scas
lmsw
push
sbb
into
lock
cltd
andl
dec
add
pop
jno
add
test
lds
push
fsubrl
mov
lahf
sub
add
popf
add
roll
hlt
xor
xor
adc
pop
stos
test
fsubrs
mov
jge
sub
sub
mov
jnp
int3
adc
mov
or
inc
cmp
clc
mov
int
xor
mov
mov
fdivs
push
adc
cmp
sub
sbb
fdivs
inc
add
filds
pop
loopne
adc
loopne
jp
inc
aaa
sbb
js
or
or
mov
or
and
imul
jo
dec
cld
data16
adcb
fnstsw
or
jno
add
icebp
loope
sub
jle
bound
pop
lcall
subb
cld
inc
xchg
test
cwtl
mov
pushl
cwtl
pop
add
popa
pop
es
outsl
fisttpl
xlat
xchg
push
sbb
fsubrs
lahf
mov
mov
pop
inc
jae
push
stos
sbb
mov
add
jge
je
aam
pop
dec
add
add
ja
je
xchg
xor
mov
bnd
xlat
outsl
fsubrs
pop
add
fisubrl
pushf
mov
mov
sarb
fistpll
and
or
shlb
pop
pop
popa
mov
lcall
lret
add
in
call
adc
aam
ljmp
adc
fwait
movsl
mov
push
dec
add
rorb
push
sub
test
mov
xor
ja
loop
push
sbb
cmp
mov
pop
popa
aas
out
fstl
cld
jmp
inc
jbe
or
scas
mov
push
adc
aam
cmp
in
sub
pop
mov
or
jg
mov
inc
jl
push
inc
cmpsb
das
dec
imul
fcompl
jecxz
jno
ljmp
movsb
loopne
dec
sbb
jb
dec
loopne
mov
mov
push
jg
mov
push
mov
inc
pop
fists
scas
adc
out
inc
jg
pop
shlb
jae
cmpxchg
clc
dec
push
ror
mov
xlat
inc
stos
mov
sub
lcall
sub
fbld
sbb
sbb
hlt
mov
mov
push
pusha
pop
xchg
enter
cmp
mov
leave
fdivrp
push
and
xlat
xorl
adc
ficoms
pop
std
dec
xchg
fisttps
ds
jg
xor
daa
add
cmp
sub
pop
dec
sbb
and
ret
inc
dec
add
xlat
jb
pop
stos
repz
cld
push
cmc
sbb
pushf
pop
sbb
cmc
std
ret
jbe
in
sti
aam
fs
arpl
ja
call
incl
pop
add
in
push
jg
clc
sarb
push
xor
jmp
sub
hlt
shl
mov
mov
dec
push
in
pop
xlat
pop
jmp
sub
cwtl
sub
aas
cli
pop
xchg
add
call
lock
and
inc
je
out
inc
lds
pop
and
cli
cmpsl
or
add
xorb
lret
jle
dec
mov
les
into
mov
lcall
nop
cmpsl
jo
popl
fildll
aaa
or
in
movb
test
sbb
out
fwait
sub
inc
and
add
in
mov
adc
and
mov
mov
pop
hlt
icebp
fwait
pop
imul
pop
dec
cli
nop
idivb
sbb
cmpsb
adc
push
orl
enter
sub
imul
sbb
jle
fsubr
sahf
sub
mov
cmp
push
pop
or
and
xorb
mov
pop
cmp
push
int
or
jno
mov
lock
mov
and
mov
stos
xor
loop
cmp
cs
test
push
cmc
dec
inc
test
in
inc
insb
fists
mov
addb
into
mov
push
in
xor
xchg
aad
push
cld
jo
loopne
add
inc
sbb
mov
stos
aam
ds
aam
cmc
div
aaa
shll
xchg
rorl
dec
jmp
mov
out
mov
and
iret
clc
adc
sbb
and
push
popf
xor
loop
fisubs
cmc
es
les
lcall
mov
pop
inc
repz
popa
loope
and
jmp
out
push
es
enter
jo
cmpsb
inc
imul
dec
mov
xchg
sub
addb
sbb
cs
fneni(8087
lock
fisttps
sub
push
xor
cmp
je
ret
jnp
dec
jbe
mov
adc
dec
ljmp
stc
jns
sub
imul
dec
adc
inc
orb
inc
sub
sub
rorl
and
or
inc
or
jnp
xchg
inc
adc
pop
pushl
rcrl
shlb
jp
shlb
popf
mov
js
inc
popa
inc
ja
add
mov
das
and
outsl
adc
insl
insb
jbe
jle
sti
adc
mov
or
add
xchg
dec
loopne
pop
add
orl
push
std
and
sub
sbb
call
cmp
decb
jg
filds
push
js
add
and
push
insl
pushf
pop
adcb
icebp
and
je
mov
iret
cmpsb
pusha
ljmp
in
and
lret
pop
ret
cmp
xorb
xlat
add
ret
push
orl
ficoms
popa
mov
fadd
dec
ljmp
stos
pop
pop
int
sbb
out
adcl
cmp
das
xor
stc
jmp
test
popf
shl
mov
inc
cltd
mulb
cmpsl
or
addr16
mov
push
jmp
mov
lock
mov
stos
mov
add
inc
and
stos
jo
jno
or
mov
sbbb
xchg
push
mov
out
insb
inc
aad
and
repz
cli
sahf
mov
mov
mov
pop
pop
fdivr
dec
xchg
mov
xchg
cmp
je
out
nop
add
lock
jg
fsubrl
scas
adc
rclb
mov
and
jg
adc
and
add
sbb
adc
aad
outsb
jnp
fisttpl
loop
dec
movsb
ss
subb
mov
mov
push
lock
les
in
dec
adc
enter
ds
adc
inc
inc
cmp
or
mov
xchg
sub
pop
jne
xor
pusha
repnz
scas
and
mov
mov
mul
cmp
or
lcall
icebp
jecxz
fcomps
xor
or
xchg
test
fnsave
push
ljmp
ret
fldlg2
add
sub
orb
cmp
mov
inc
lock
sbb
xchg
int
sbb
outsb
stc
mov
sbb
cli
lods
sub
inc
dec
mov
push
hlt
arpl
adc
movsb
arpl
mov
jl
push
cmpsl
xor
push
ret
ljmp
mov
clc
mov
sbb
stos
push
sbb
adc
fildll
in
std
jecxz
int3
ret
and
das
jo
in
and
hlt
pop
and
lret
adc
cmpsl
jecxz
push
insb
jb
mov
inc
mov
fisubl
jl
jo
cld
xchg
pop
push
cs
cltd
jb
mov
sub
jg
mov
cmpsb
cmp
ds
inc
cmp
mov
fstp
inc
xchg
test
aas
pop
lret
sub
xchg
iret
std
cmp
push
stos
pop
lock
adc
sub
and
js
dec
push
cltd
sbb
sti
dec
push
sbb
push
sbb
jmp
cmp
mov
js
and
fmul
cmp
fmul
movsl
in
and
push
into
push
or
dec
jg
or
fisttps
sub
mov
jns
pop
out
je
call
pop
or
cmp
lods
xor
sbb
test
stc
xchg
lmsw
and
xor
fstps
movsb
push
jae
sbb
inc
xchg
stc
jbe
jg
dec
ljmp
mov
cmp
cmc
adc
mov
xchg
sarl
aas
or
xchg
inc
pop
jl
test
and
adc
pusha
jae
in
xor
and
orl
clc
adc
dec
jo
adc
cmp
mov
inc
nop
lods
iret
clc
inc
jbe
insb
xorb
or
and
enter
inc
popf
jg
jb
lods
iret
xchg
lods
sbb
inc
movsb
jb
out
popa
xlat
dec
push
sbb
andb
inc
cmpsl
mov
xchg
dec
pop
mov
push
push
cmp
xor
push
push
repz
and
pop
into
mov
inc
pop
shrl
inc
pop
or
adc
stos
aas
add
sti
pusha
or
icebp
rolb
lret
mov
adc
push
dec
movlps
pop
mov
addb
mov
add
shl
rorl
fcmovb
and
inc
call
lcall
mov
cwtl
decl
and
or
cmp
push
or
js
dec
cmp
pop
cmc
mov
insl
mov
push
hlt
and
jecxz
pop
iret
ja
movsl
leave
push
cmc
clc
mov
push
notb
mov
loope
inc
scas
xor
pop
ja
loopne
out
inc
jle
xlat
inc
and
cmpb
inc
inc
mov
adc
sub
call
andb
fdivr
or
cli
cmp
rcrb
cmp
fmuls
jl
add
dec
pop
add
icebp
jl
lods
mov
scas
in
je
mov
bound
mov
outsb
test
testl
test
xchg
icebp
inc
xchg
jge
sbb
xorl
out
in
mov
adc
push
fsubl
inc
clc
mov
mov
stos
jae
ss
adc
or
push
inc
out
stos
outsb
adc
pop
in
scas
cli
cmp
inc
sub
push
xor
call
or
sub
icebp
push
cmc
insl
movsb
out
add
movsb
cmpl
pop
cli
or
sbb
in
or
sub
and
fwait
sbb
jp
mov
orl
mov
addr16
inc
dec
clc
test
pop
add
scas
js
out
hlt
jns
pop
lods
xlat
ja
jb
sti
xorb
xor
frstor
add
lea
sub
inc
ss
cli
fucomp
add
adc
rcl
xor
cli
and
test
je
jmp
jns
jo
jmp
push
add
fsubrl
mov
daa
push
jl
call
sub
cld
je
push
push
insl
jb,pt
movsb
lock
mov
shlb
test
jl
push
pop
add
push
and
push
lds
dec
int3
mov
popa
jae
fcompl
icebp
mov
filds
push
push
pop
sbb
push
cmp
rcrb
loopne
xchg
sub
out
or
mov
mov
cmp
leave
shrb
adc
mov
pop
pop
into
push
xor
dec
repz
dec
inc
dec
stos
cmpsb
mov
sbb
pop
mov
ljmp
insb
cmp
ret
dec
rolb
inc
or
pop
mov
sbb
scas
push
push
out
loopne
or
jg
fisttpl
clc
in
add
test
pop
pop
jl
xor
std
mov
sub
xchg
mov
cwtl
scas
mov
loope
cmc
insl
xlat
and
enter
pushf
lods
xchg
xor
fisttps
icebp
mov
test
adc
jl
mov
sti
xchg
shll
lds
mov
pop
mov
xchg
cmp
push
lret
dec
or
je
push
jmp
cld
push
jb
lret
mov
sbb
mov
and
sbb
xor
int
jg
data16
das
push
je
cld
mov
cltd
dec
cld
xchg
jmp
jecxz
push
ret
clc
call
add
add
cmpsb
dec
leave
insl
sti
pop
or
das
push
icebp
in
xchg
pop
jge
jp
cld
sti
sbb
xor
inc
ja
dec
or
fdivr
scas
fdivrl
ret
mov
daa
xlat
xchg
adc
int3
pop
fistpl
sbb
mov
jb
inc
and
mov
cmp
inc
add
fucom
push
dec
sub
arpl
mov
in
adc
in
pop
int3
cli
push
mov
fistpll
cmp
mov
decb
fs
test
adc
mov
mov
cmpsb
data16
mov
fdivrs
in
pop
mov
dec
stos
stos
or
pop
mov
push
add
cld
jg
mov
xchg
lea
jl
add
jecxz
or
bound
test
jl
xchg
aas
lock
mov
pop
aaa
push
loop
jmp
inc
pop
daa
adc
adc
or
dec
add
clc
test
push
cs
mov
fmull
out
mov
rcr
mov
cmpsl
stc
add
and
mov
data16
mov
hlt
shl
js
mov
dec
test
add
sbb
hlt
inc
push
push
push
es
cli
idivb
lods
jecxz
jl
xor
push
ret
cmp
inc
sub
lea
fs
in
xchg
mov
je
pop
outsl
pop
adc
push
push
lods
mov
cmpsl
jmp
sbb
adc
push
loope
lods
bound
je
lea
add
jg
mov
into
lret
ds
dec
cli
aaa
out
jl
mov
dec
into
pop
and
fdivp
and
test
and
mov
stos
cli
fcomip
and
add
pusha
add
mov
ds
icebp
mov
insb
jp
notb
inc
pushf
mov
jl
fiadds
jge
adc
cmpsb
daa
push
js
outsb
adc
mov
lcall
clc
jmp
dec
test
rcll
pop
sub
push
mov
jmp
mov
into
pushf
je
in
jnp
mov
out
lret
and
xchg
rclb
dec
mov
out
add
clc
aad
pop
dec
fnstenv
ja
movsb
pop
mov
xchg
and
jp
lahf
sub
outsl
inc
jne
add
xchg
xchg
outsb
mov
inc
aad
adc
aaa
cmp
inc
sbb
jle
ljmp
adc
aam
xchg
push
mov
bound
not
add
test
adc
cld
xlat
jo
lcall
cmp
stos
nop
je
leave
pop
lret
push
xor
inc
sbb
inc
test
call
jl
jno,pn
rclb
daa
jmp
outsb
clc
lock
adc
pinsrw
and
gs
fildll
shll
das
add
in
push
push
testl
fildll
sbbb
adc
add
stos
addb
push
and
pop
mov
inc
jo
cmpb
in
push
jmp
scas
arpl
xchg
clc
or
sub
push
push
cld
sbb
mov
jle
lcall
xchg
jnp
aaa
in
mov
adc
mov
mov
ljmp
loopne
lods
or
adc
adc
call
jne
add
lods
sbb
fnstsw
push
mov
iret
inc
mov
or
pop
mov
sbb
frstor
test
cmc
aam
dec
scas
out
ret
xor
add
sbb
icebp
push
mov
jle
push
pusha
jb
dec
cmpsb
inc
lret
pop
dec
stos
stos
add
cmc
jo
or
nop
outsb
jl
mov
das
icebp
addb
mov
pusha
sub
inc
pop
lods
inc
xor
add
pop
ret
ljmp
aaa
mov
adc
cmp
inc
sub
sbb
cld
test
mov
aad
xor
loope
sub
mov
push
sub
jo
cmp
lods
mov
out
aad
mov
inc
ret
out
xchg
cs
pop
sbb
stos
cmp
daa
adc
rcrb
fcoml
out
dec
int3
mov
jno
loopne
push
loopne
dec
mov
andb
sbb
cwtl
cmpsb
stc
test
mov
data16
pop
sbb
inc
push
jno
test
shlb
adc
push
fs
inc
mov
push
xor
and
nop
lock
lods
jne
fucomi
pusha
les
mov
cs
and
pop
mov
mov
mov
sbb
inc
add
gs
jecxz
lock
das
inc
movsl
sbb
imul
inc
stos
data16
cld
or
pop
ds
add
mov
or
loopne
inc
es
ds
in
push
fnstcw
push
dec
pop
inc
mov
mov
sbb
scas
or
add
sub
cmp
cmp
adc
cmpsb
jmp
inc
mov
xor
xchg
pop
test
or
jge
outsb
mov
sbb
stos
cmp
scas
mov
cmp
add
sbb
cwtl
cs
or
scas
jle
mov
movsb
adc
xchg
outsb
or
mov
xchg
je
fsubrl
mov
icebp
int
nop
ljmp
jecxz
sti
mov
mov
xor
in
in
push
or
and
test
cmpsb
push
xchg
or
cmpsl
and
inc
fs
mov
jae
fadds
jg
pushf
push
add
lock
mov
and
scas
mov
xchg
cmp
cmp
lods
std
add
adc
sub
pop
nop
adc
xor
xchg
add
ljmp
mov
shlb
xchg
or
xlat
mov
nop
dec
xchg
xchg
pop
jge
adc
inc
stos
jno
add
mov
push
lock
test
fdivr
in
in
sub
out
ljmp
sbb
lcall
test
inc
loope
es
rcll
mov
fadds
or
xchg
test
mov
incl
call
repnz
or
jnp
ds
inc
and
notb
ljmp
inc
jne
rolb
sbb
jmp
push
jo
jb
int3
repnz
and
ret
add
lock
js
or
push
fs
add
call
js
out
dec
mov
out
roll
ja
sub
dec
push
sbb
sti
push
mov
loope
jg
roll
cli
add
in
cmp
das
inc
popl
xlat
push
inc
adc
cmc
mov
mov
out
dec
popa
pop
mov
pop
fsubrs
cld
into
out
inc
fstpt
add
sbbb
faddp
sbb
push
dec
call
in
mov
and
ss
leave
sub
int
div
cld
mov
pop
xor
adc
jl
fdivs
mov
cltd
push
or
sub
mov
jmp
ret
cmp
mov
call
rcll
ret
add
adc
pop
popa
dec
adc
sub
out
std
mov
insb
dec
dec
adc
mov
or
or
sbb
xor
or
cli
lods
dec
xrelease
rcrb
addr16
adc
jnp
idivl
sbb
dec
loope
lea
mov
imul
fnsave
mov
jmp
inc
or
lahf
les
mov
add
sub
in
ja
push
jge
pusha
adc
dec
jno
mov
test
addb
lahf
xor
xor
pop
dec
loopne
aas
mov
lods
je
pop
lret
lret
jo
or
je
fs
xlat
xchg
lods
into
mull
mov
dec
or
loope
aam
mov
add
sbb
outsl
movsl
rcrl
enter
scas
in
js
add
clc
jg
xor
and
xchg
mov
jne
xchg
fmul
pop
insl
sub
fdivr
adcb
and
cmpsb
ret
test
xor
test
dec
mov
jbe
rclb
jns
fidivs
and
mov
cmp
arpl
test
mov
and
sub
test
jecxz
fwait
push
mov
les
sub
xcrypt-ecb
cmpsl
dec
aad
add
sbb
pop
inc
mov
inc
aaa
les
loope
mov
test
add
and
mov
fidivl
cmc
mov
sub
jnp
arpl
adc
roll
fsubrl
filds
cmp
enter
mov
add
inc
sarb
loopne
or
test
scas
sub
cmp
pop
inc
add
leave
add
add
push
hlt
xchg
push
aam
inc
sbb
insb
addr16
sub
jnp
or
xlat
std
jle
mov
js
sbb
xlat
scas
test
nop
inc
cmpb
int3
jno
and
sbb
daa
pop
lcall
mov
xor
xchg
xchg
mov
ret
push
jbe
cmovle
jge
sub
push
out
jg
push
inc
push
xor
js
add
jno
jl
lcall
dec
adc
dec
icebp
and
pushl
pop
lea
inc
call
and
incb
mov
xchg
mov
dec
push
cltd
dec
int3
incb
fsubl
jb
sahf
fcompl
arpl
js
dec
push
cmc
hlt
mov
cmp
mov
stc
inc
and
mov
adc
or
xchg
faddl
sub
repz
add
hlt
mov
lds
sbb
cld
pop
cld
out
push
mov
mov
test
rcrb
dec
jle
notb
mov
pop
les
fmull
dec
dec
pop
ja
aad
sub
and
je
xor
xor
cmp
jl
test
sbb
sahf
sub
shlb
pop
and
mov
sub
pop
pushaw
or
pop
pushf
stos
lods
out
inc
jo
pop
mov
jl
push
lock
scas
les
js
daa
push
pushl
dec
loop
sbb
inc
pushl
cli
mov
or
inc
xor
fiaddl
mov
hlt
je
ret
mov
loopne
push
out
mov
subl
sub
das
fiadds
loopne
mov
sbb
cmp
stos
outsl
and
fists
cmp
lods
ljmp
inc
mov
sbb
test
dec
mov
aam
dec
lcall
add
mov
loop
out
stos
out
daa
mov
cmp
xchg
jge
out
pop
insl
mov
ss
aaa
andl
xor
push
and
fisttpll
lret
add
push
mov
and
lret
shlb
xor
out
test
mov
inc
fcoml
or
fildll
inc
xorb
sbb
sbb
in
mov
mov
mov
sti
fwait
or
test
cli
aad
inc
xor
les
add
leave
rcll
xchg
cmp
ja
js
je
push
stos
jle
or
mov
or
bound
jmp
inc
add
test
jecxz
lods
pop
call
mov
push
mov
ret
nop
data16
pop
push
outsb
iret
pop
fsubr
mov
mov
add
loop
rcll
pop
and
sub
lahf
push
jno
aas
or
aaa
mov
mov
and
adc
dec
jle
ds
in
dec
xor
jg
add
imul
pop
mov
andb
cld
pushl
fnsave
or
xchg
add
inc
mov
add
arpl
push
fsts
jp
int3
ficomps
test
push
rclb
mov
jns
fs
adc
sub
loope
mov
dec
dec
adc
shrb
jle
push
or
iret
sbb
lods
pause
fisttpll
or
push
push
std
sbb
aas
jns
inc
cwtl
sar
dec
dec
or
cmp
jle
popa
notl
lods
arpl
xlat
push
xchg
ret
in
pop
fnsave
es
jbe
negb
push
stos
or
ljmp
cwtl
ret
push
push
inc
adc
mov
fmul
mov
cmpsb
outsb
scas
test
dec
adc
push
add
mov
add
and
push
or
movsl
mov
sub
movsl
fdivs
push
stos
ret
dec
jmp
jo
shrl
les
sbbb
test
cmp
in
lods
mov
sbb
jle
cld
xor
les
mov
sub
mov
fistps
xlat
fucomp
call
lea
addb
fisubl
cld
xlat
add
dec
pop
fstpl
lods
jo
add
xchg
sub
mov
adc
adc
pop
inc
pushf
insb
fsub
mov
daa
shrb
mov
cwtl
fldl
pop
clc
ja
jp
jo
fs
sub
mov
outsl
aas
fld
add
push
sbb
mov
sbb
adc
cld
aas
sub
jae
bound
aad
push
shlb
jl
and
inc
pusha
in
movsl
mov
cs
push
mov
mov
push
clc
mov
sbb
dec
sbb
mov
cmpb
pop
dec
cltd
dec
mov
push
jno
adc
push
outsb
cld
push
dec
jne
push
pushf
hlt
shrb
cmp
dec
push
sub
mov
mov
lret
cmp
and
add
push
fmuls
sbb
jle
push
add
pop
mov
sbb
add
and
out
adc
or
fcmovbe
pslld
insl
movsb
add
orb
cli
adc
mov
ret
in
fcoms
cmp
fiadds
popf
mov
mov
xchg
sub
cmc
xor
ljmp
and
subb
xchg
jp
cmpsl
push
jp
sarb
mov
sbb
xchg
dec
push
xor
dec
xchg
aaa
xor
push
lods
hlt
xor
fcomp
lock
push
xor
jnp
outsl
inc
sbb
or
int
fbstp
mov
inc
test
lods
jb
lock
or
ret
inc
lds
inc
into
xorb
out
fnsave
adc
xorb
cmp
sbb
ret
sub
ljmp
mov
mov
cmp
and
adc
leave
mov
aam
and
jb
fstl
adc
sub
shl
mov
dec
xor
and
xor
pop
sub
dec
scas
cli
shlb
loope
sub
call
add
sub
sbb
adc
ljmp
je
sub
inc
xlat
or
push
pop
std
or
gs
jp
and
fmuls
and
lcall
add
push
cmpsb
scas
mov
and
dec
jns
xorl
sub
mov
sub
push
adc
inc
jle
out
dec
sbb
scas
dec
test
insl
or
ja
cmp
popf
in
mov
dec
popa
jno
push
and
inc
or
mov
adc
sub
movsl
add
adc
repnz
push
lret
jp
lock
xchg
add
or
or
mov
pop
xchg
pop
andb
cmp
sbb
pop
shll
mov
adcb
loop
ror
jge
and
aas
jnp
test
jbe
push
push
sbb
add
das
cli
aas
and
push
aad
scas
adc
push
in
sub
outsl
mov
xor
fidivl
loop
lods
xchg
insb
mov
lods
add
or
pop
cmp
loopne
cmpsb
inc
arpl
fnsave
mov
pusha
jp
cwtl
cs
xchg
mov
sub
add
lods
cmpsl
fdivrs
fdivp
mov
dec
jae
cltd
lds
mov
insb
clc
or
and
mov
sub
push
jp
xchg
sahf
aad
rorb
data16
fistpl
xchg
and
loope
sub
or
mov
cmpsl
mov
aad
adc
pop
xor
cmpsb
xchg
xchg
mov
inc
push
js
xor
movups
add
or
shlb
in
mov
in
sub
dec
in
xchg
dec
dec
ret
enter
push
pushf
orl
ret
sbb
movsl
jl
cmpsl
sbb
pop
or
sub
or
mov
xchg
push
fists
popf
movsl
adc
sbb
jae
inc
clc
mov
shrb
mov
mov
add
xor
cmp
or
arpl
stos
icebp
mov
cmp
imul
popa
xorb
shlb
movb
popa
movsl
adcb
leave
lock
pop
xchg
mov
and
add
mov
mov
lahf
nop
xchg
xchg
xchg
push
or
cmp
add
jmp
push
xchg
rol
repz
sbb
sbb
addl
rorb
mov
mov
sarb
rorb
pop
dec
adc
in
cmp
testl
notl
fbld
xor
data16
sbb
in
dec
push
je
pop
mov
and
lods
and
addb
push
dec
mov
jb
hlt
jp
xchg
push
adcb
out
jmp
sub
dec
dec
stos
push
mov
xor
cltd
or
test
pop
xlat
pop
push
cmp
je
adc
inc
mov
adc
cld
adc
ljmp
add
push
mov
inc
adc
daa
dec
or
push
or
rolb
push
in
inc
ljmp
or
loopne
aaa
sbb
nop
adc
rcl
pop
test
jae
mov
jmp
fcoml
mov
add
test
fs
and
and
xchg
mov
push
cld
sub
adc
xchg
inc
sbb
shrl
sub
and
push
adc
jmp
and
adc
pop
fisubl
adc
push
lahf
lock
dec
aas
pusha
add
inc
jmp
inc
mov
sub
es
cmpb
cmpsl
aam
repz
sbb
fs
mov
or
inc
insb
cli
hlt
jge
mov
add
push
push
lods
mov
cs
shll
inc
add
or
pop
add
decl
jno
xor
mov
lods
push
cmpsb
stos
cs
pop
popa
adc
outsl
mov
dec
xchg
jo
fcomps
adc
or
xchg
mov
xchg
jmp
and
pop
mov
mov
or
cmp
sbb
movsb
inc
nop
repnz
xchg
pop
adc
sbbb
xor
adc
sub
xor
mov
push
mov
dec
das
cvtps2pd
in
xor
lock
mov
inc
lds
fcoml
movsl
or
int
in
dec
or
scas
sti
lock
push
xorl
or
sbb
dec
inc
jp
adc
push
insl
and
sub
sbb
push
mov
push
jo
jbe
push
lods
dec
mov
into
mov
jmp
jo
subb
dec
xor
pop
dec
ret
ret
add
push
sub
or
imul
lcall
je
xor
inc
mov
sbb
fcomps
fists
mov
sbb
or
lods
popf
sbb
lock
pusha
pop
movsl
daa
inc
mov
fdivr
mov
icebp
in
and
lods
inc
scas
mov
fdivrs
loop
dec
lock
sub
sbb
dec
pop
adc
imul
add
fisttpl
fisubrs
aam
enter
push
pop
push
add
xor
lret
pop
js
popa
andl
and
ja
add
lahf
lods
xor
cmp
test
pop
add
out
mov
jbe
push
aam
xchg
push
mov
cmc
pop
scas
add
jo
out
lea
outsl
aad
jecxz
fstpt
insb
cmp
jle
lods
and
xor
sbb
cmp
or
clc
pusha
dec
or
in
lock
pop
inc
mov
rcrb
aaa
rorb
test
adc
dec
xchg
int3
rcl
sbb
ljmp
adc
lock
cs
idiv
add
sbb
sub
pop
cmp
rorb
rolb
lods
outsl
mov
push
fisubl
xchg
xchg
imul
mov
cld
and
mov
jnp
pushf
jmp
jmp
mov
cmp
mov
fidivrs
xchg
mov
mov
add
xor
inc
fldt
adc
fists
adc
cmp
or
mov
inc
adcb
jne
mov
mov
push
cmc
lcall
pop
mov
data16
mov
xchg
fdivr
dec
xlat
jne
add
vpshld
adc
aas
js
push
fcomps
mov
and
lds
mov
mov
sbb
jle
sub
test
hlt
daa
subb
xchg
leave
iret
sbb
rorl
inc
lahf
jecxz
cmpsl
mov
sti
jno
jl
mov
sub
adc
or
call
daa
and
inc
repnz
cmpl
mov
in
cmp
push
out
add
mov
push
adc
int
cmp
imulb
fs
sub
mov
and
pop
data16
mov
mov
mov
mov
rolb
addl
loope
dec
xor
rcrl
sbb
cld
jg
add
je
mov
bound
mov
or
adc
shlb
xorb
inc
adc
in
xchg
push
les
subl
into
jp
subl
push
mov
mov
out
push
or
rorb
mov
lcall
lcall
adc
outsb
pop
pop
lret
movsl
dec
xchg
insl
adc
add
mov
lods
cld
int3
repnz
jg
std
push
out
ficoml
or
jge
arpl
cltd
lods
mov
ret
jle
scas
fdivrl
xchg
jp
aaa
sbb
lods
sbb
sbb
mov
sub
rcll
aaa
pusha
call
inc
popl
sub
adc
je
sub
daa
icebp
xor
callw
mov
push
cmc
nop
xor
cmpsb
loope
dec
sete
adc
in
jp
cli
pop
test
and
pusha
test
test
imul
cmp
scas
sbb
sbb
sti
jbe
add
sub
fcomps
jbe
fistl
test
in
sub
mov
test
sbb
inc
jle
sub
add
mov
mov
mov
sbb
sub
lcall
shll
sub
dec
out
cmpsb
mov
popa
arpl
push
sub
call
xchg
mov
mov
hlt
sarb
fcomps
mov
fldl2t
dec
es
inc
ret
data16
fistl
mov
repnz
sub
push
in
pop
out
lock
sahf
icebp
pusha
fwait
imul
sti
nop
or
cmp
ret
or
xchg
inc
xor
scas
jg
jmp
scas
jl
cmp
mov
xor
incb
icebp
sbb
mov
lahf
sahf
hlt
xchg
pop
pop
inc
inc
fbld
jne
adcl
push
push
inc
test
mov
sub
aam
pop
shll
lds
mov
sbb
add
out
loop
imul
aas
adc
inc
cmc
xchg
add
mov
adc
and
insl
lea
mov
imul
push
cltd
movsb
sbb
pop
mov
lcall
jo
cmc
shrl
inc
adc
orl
lret
xchg
push
sahf
les
lcall
xlat
add
and
cmpsb
fbld
out
mov
sub
xchg
inc
xlat
shrl
fcmovne
inc
xchg
inc
dec
or
push
call
inc
mov
int
rcl
lods
sarb
aas
adcl
push
out
mov
cmp
pop
jge
aas
push
call
aas
mov
cmp
clc
jno
cmp
arpl
loope
pop
cmc
lahf
push
loopne
lock
iret
aaa
xor
enter
sbb
hlt
fsubr
cmp
sub
jge
mov
test
add
lds
sub
cltd
dec
push
adc
fs
sub
sbb
lret
mov
or
xchg
out
test
gs
pop
je
icebp
push
jnp
adc
filds
mov
cmpsl
push
jge
ja
mov
pop
rclb
and
add
push
jecxz
cmpsb
pop
scas
mov
lcall
mov
inc
pop
loop
mov
add
into
fadds
idivb
pop
dec
jp
in
add
push
test
shll
lcall
js
sub
mov
xor
repz
lahf
lock
cs
outsl
pop
add
not
adc
mov
bound
sbb
pop
sahf
ss
fcoms
outsl
jg
xor
mov
aam
mov
pop
sbb
pop
push
mov
and
dec
lods
mov
js
loop
sahf
sbb
push
cmc
subb
call
xor
les
inc
mov
pop
pusha
mov
xchg
adc
mov
and
incl
lock
jnp
adc
nop
push
jecxz
jno
adc
xchg
add
shr
jmp
call
bound
dec
push
mov
loope
adc
out
cli
test
jmp
push
adc
js
dec
test
add
cli
out
out
subl
mov
push
ss
cli
dec
add
xchg
insb
and
jmp
add
and
sbb
mov
dec
loope
hlt
jbe
add
add
add
lods
jo,pt
adc
inc
call
sub
fcoms
test
mov
dec
out
into
lea
mov
jns
ret
dec
pop
mov
es
sar
test
loope
mov
push
jg
and
popa
nop
cwtl
jecxz
jge
mov
roll
pop
lahf
xlat
cwtl
xor
sub
mov
mulb
ficomps
jp,pn
mull
jge
test
imul
movsb
mov
hlt
cmp
jg
push
mov
mov
addb
movsl
mov
fisttpll
mov
and
clc
ljmp
dec
sub
test
pop
push
push
mov
es
jno
lahf
fimuls
call
out
and
jmp
ja
filds
outsb
mov
stc
enter
pop
jns
mov
fwait
lock
sbb
jbe
xchg
ret
out
and
adcl
mov
push
mov
mov
lahf
lret
arpl
mov
imull
xchg
cld
enter
adc
jno
inc
enter
loopne
pop
mov
mov
stos
dec
mov
inc
scas
and
inc
push
adc
neg
push
and
out
in
lea
mov
lock
cld
std
mov
xchg
or
cmp
lods
je
cli
outsl
decl
xchg
fcomip
jp
cli
inc
fnstsw
arpl
not
dec
in
push
mov
fdivrs
jecxz
test
push
push
adc
jmp
adc
cmc
nop
lods
test
xchg
mov
shrb
inc
mov
into
xlat
mov
stc
mov
and
xchg
cmc
dec
pop
daa
scas
out
cmp
aaa
inc
sbb
mov
inc
popf
clc
mov
push
mov
jb
loope
ss
lock
xlat
test
stos
jno
negb
int
std
inc
mov
pop
repz
push
js
in
push
cmpsl
mov
mov
lock
test
ljmp
nop
inc
push
in
sbbl
nop
std
push
call
pop
verr
push
repz
mov
jno
setbe
movsb
mov
push
andl
adc
mov
frstor
rorl
rorb
cmc
mov
add
mov
sub
cmp
or
pushf
dec
or
std
jg
fs
repnz
les
mov
cmpb
xor
sub
sbb
call
cmpsl
add
push
fdivr
add
cmpsb
insb
add
cmp
aas
ds
outsb
add
push
add
mov
add
cs
jae
sbb
insl
insb
pop
mov
or
scas
int
rcl
test
ss
dec
inc
add
xor
pushl
xor
incl
cmc
push
not
xchg
jmp
js
fwait
mov
ljmp
push
cld
outsl
dec
mov
xchg
cld
out
or
jg
ljmp
jge
mov
insb
loop
std
pusha
or
call
sbb
jo
mov
pop
add
sub
scas
test
scas
iret
mov
cmp
ja
sbbl
ss
das
jno
aad
mov
mov
add
fisubl
adcl
sub
add
fwait
je
je
int3
fildll
push
pop
ficoms
es
js
add
or
dec
movsl
in
push
inc
gs
inc
mov
insb
xor
or
cmpsl
popa
or
rolb
and
xchg
lahf
jle
mov
insb
jo
pop
xchg
adc
das
jp
lea
cmp
cmp
mov
out
mov
mov
push
popa
int3
add
ljmp
shlb
inc
inc
out
add
jecxz
xor
ja
scas
ret
cmp
into
test
clc
xchg
addr16
das
push
xlat
clc
in
adc
jae
mov
mov
fs
push
dec
cli
sub
cli
pushf
scas
sub
lret
arpl
out
lahf
mov
out
sbb
mov
cpuid
mov
adc
xchg
xlat
xchg
lods
push
or
xor
jne
into
rclb
and
or
addl
push
xor
mov
dec
sub
and
dec
push
pop
cmc
sbb
push
out
pop
jnp
daa
or
ret
ss
jno
adc
bound
xchg
push
xchg
sbb
pop
sti
pop
pop
add
jb
rcrl
sub
mov
call
and
pop
inc
fiadds
dec
lret
push
stos
sarb
mov
pop
xor
sahf
pop
jmp
cld
stc
or
imul
mov
cmpsb
inc
lock
outsl
xchg
gs
outsb
push
fdivrl
adc
test
inc
cmp
mov
cwtl
fistl
dec
je
shrl
fcmovu
call
push
out
enter
or
push
pop
adc
mov
sbb
pushl
pop
jp
jo
xchg
int3
adc
lods
insl
int
cmp
mov
sub
rclb
outsl
sub
movl
ljmp
aad
into
ja
aas
sbb
lea
enter
cld
out
jnp
jae
jp
sub
add
faddp
jmp
pusha
out
cmp
insb
jae
xchg
ljmp
push
lret
and
jae
std
mov
pop
fucomp
mov
loop
sub
and
shl
adc
ret
push
add
sub
adc
push
movsb
sub
rcr
fiadds
cs
nop
push
in
pop
sbb
int3
push
or
outsl
fildll
shll
movsb
pop
adcl
loop
or
lock
inc
adc
jb
xchg
add
inc
add
ja
jmp
and
or
xor
out
or
jae
cld
pop
and
push
mov
outsb
lcall
call
add
sbbb
mov
nop
inc
mov
xlat
aaa
add
imul
shlb
push
pusha
mov
add
sub
and
inc
jl
sbb
jecxz
and
cli
ficoml
push
in
popf
add
bound
ja
mov
es
stos
imul
ss
lods
push
lods
inc
ja
sub
scas
decl
mov
shr
push
or
outsl
mov
sar
mov
mov
rclb
loopne
call
test
decl
dec
add
out
xchg
add
mov
xchg
mov
cmpb
mov
lods
add
mov
mov
fiadds
cwtl
ss
mov
pop
lcall
jl
and
mov
ret
jae
inc
pop
enter
nop
addr16
mov
out
mov
outsl
inc
aad
xor
sub
mov
aam
xchg
aaa
xlat
loope
insl
fcomip
cmpsb
mov
jg
incl
js
ss
push
mov
cmp
dec
in
ret
mov
aas
out
js
call
dec
imul
popa
stos
adcb
lock
popa
leave
or
pop
cs
sub
shl
mov
je
add
mov
sahf
dec
movsl
mov
push
sbb
mov
and
in
clc
scas
xor
dec
lcall
fwait
add
pop
xor
ljmp
or
and
hlt
adc
jno
push
inc
loop
stos
ja
xor
add
fs
mov
adc
xchg
icebp
or
jno
imul
loop
add
push
jle
pop
test
or
mov
or
scas
adc
stos
push
sbb
les
mov
mov
lock
out
aad
push
mov
ja
cli
jg
inc
cmp
fmul
incb
xor
gs
or
add
lcall
mov
iret
mov
lods
ljmp
outsl
inc
push
data16
xor
stos
or
ds
sbb
pop
es
daa
mov
push
push
rcrl
add
sbb
push
mov
or
loopne
xchg
mov
xor
and
push
sub
xchg
sahf
mov
pop
xchg
ss
jmp
frstor
dec
loope
jo
and
push
adc
jmp
aad
push
sbb
push
sarb
mov
cmp
adc
roll
daa
repz
lock
iret
rol
loope
out
clc
pop
and
orl
filds
leave
shll
imul
xchg
lret
ret
dec
dec
lcall
fisubl
adc
jne,pn
xor
inc
push
mov
push
sub
pop
sub
cmpsb
jmp
push
xor
or
push
fildll
ss
cli
adc
outsl
fisubs
jnp
pop
xor
mov
stos
jbe
cmc
sub
nop
pop
jo
cli
idivb
dec
bound
lcall
mov
push
sub
insb
xchg
adc
pop
mov
cmpsl
push
xchg
clc
or
lods
fcoms
scas
daa
leave
les
dec
into
sub
mov
push
or
in
repnz
or
ss
mov
inc
or
addb
mov
es
xchg
dec
mov
out
fldt
ret
mov
push
hlt
add
jo
xchg
fs
ljmp
sbb
xor
push
scas
int3
push
test
mov
es
push
sbb
dec
mov
sbb
pop
mov
orl
mov
mov
loop
cs
rclb
inc
cwtl
pop
xchg
hlt
loopne
pop
mov
ss
xor
or
je
cli
dec
sub
jl
adc
bound
enter
insl
loopne
inc
and
jg
cmp
les
sbb
xchg
mov
jle
add
outsb
pop
adc
dec
addr16
push
add
test
push
addb
add
mov
incl
test
xchg
inc
mov
mov
scas
clc
aad
sar
dec
bound
pop
mov
push
inc
insl
mov
lret
loop
add
jo
in
out
ss
mov
sbb
ljmp
shrl
lock
adcl
xchg
adc
subb
mov
sub
push
dec
ja
into
out
pop
xchg
cwtl
mov
mov
addl
stos
ror
rclb
cltd
xchg
xor
testl
out
pushf
ret
cmp
adc
loope
jmp
insb
nop
lock
pop
lahf
jb
nop
hlt
negb
xor
push
pushf
movsb
cmp
in
cmp
pop
jo
jo
loopne
pop
cmp
xchg
and
cmpsb
test
fidivrs
adc
int3
fistpl
sbb
xor
fnop
pop
mov
call
sar
cmp
push
push
inc
add
or
fmuls
test
popa
roll
jecxz
bound
lods
imul
adc
and
mov
fwait
ret
cld
adc
pop
and
jp
je
add
inc
push
mov
test
out
bound
pop
and
sqrtps
cmp
dec
cmc
mov
xchg
sbb
mov
loopne
filds
fadds
loopne
push
adc
inc
sub
xor
in
or
dec
nop
cmpsl
xor
dec
mov
insl
loopne
jl
rolb
int
pop
pop
outsl
and
faddp
jbe
sbb
adc
popa
add
orl
or
mov
or
adc
add
mov
xchg
iret
pop
and
adc
pop
fsts
add
rcl
cs
loopne
in
xor
emms
dec
and
add
js
add
xchg
and
sbbb
les
pop
inc
add
ret
ds
imul
dec
inc
pop
pop
cld
xor
sbbl
push
shr
push
cmpsb
bound
mov
and
or
sbb
and
mov
dec
fnstsw
sub
jo
rcrl
loopne
cmp
mov
add
add
add
icebp
icebp
mov
outsb
dec
adc
ja
testb
push
dec
test
or
mov
inc
dec
ds
xor
fsubr
pop
dec
or
aas
add
dec
inc
dec
or
cld
rclb
out
dec
mov
ret
dec
or
lods
and
jo
enter
and
add
dec
mov
pusha
cmc
mov
ds
mov
or
sbbb
sub
inc
in
pop
cld
pop
push
add
mov
pop
fistpl
aas
neg
fdiv
sbb
xchg
rclb
shl
mov
sub
sbb
inc
mov
pop
inc
inc
inc
adc
aad
loop
jg
cmovo
jmp
popf
xor
xchg
xchg
sub
adc
mov
or
pop
sbb
inc
xchg
sub
push
stos
push
add
lock
movl
add
rcrl
rorb
dec
adc
ret
xor
xor
mov
cmp
ljmp
jmp
xabort
cmc
stc
dec
or
movsb
and
js
je
enter
inc
loop
fmul
mov
add
xchg
jle
cli
sbb
sub
divl
push
aas
ret
sbb
mov
add
xchg
rcrl
dec
mov
imul
adc
jp
add
xchg
hlt
dec
sti
leave
test
ss
shr
mov
movsl
add
mov
paddsw
nop
push
pop
movl
in
adc
out
addr16
nop
adc
push
lock
or
mov
inc
lea
xchg
call
push
aaa
sub
fists
outsl
adc
jns
aam
sbb
push
jmp
add
mov
dec
adc
lock
jecxz
cmp
xor
cmp
sbb
jg
push
and
xor
leave
js
add
add
cmp
and
data16
pop
cld
mov
lcall
and
dec
bound
cld
insl
adc
mov
xchg
adc
std
add
arpl
into
rclb
inc
loopne
sbb
imul
mov
in
into
or
sbbb
mulb
inc
pop
ljmp
in
dec
ret
pop
mov
rol
push
jl
dec
fs
inc
ljmp
xchg
and
mov
and
jmp
sbb
ret
jg
and
ret
sbb
or
rolb
pop
shll
sbb
sbbb
jecxz
mov
test
ja
insb
xchg
jg
adc
testb
lcall
pop
cwtl
pop
xor
pop
mov
in
dec
test
adc
add
mov
push
cmp
mov
hlt
pop
inc
mov
out
mov
pop
and
andb
jg
out
mov
js
inc
aam
sbb
pop
jnp
mov
fists
stc
jnp
mov
je
mov
cli
ds
jg
adcl
dec
cmp
adc
out
pusha
daa
add
mov
push
add
fld
and
xor
mov
xor
cli
outsl
xchg
sahf
mov
jmp
lcall
pushf
nop
nop
lock
mov
lcall
push
push
scas
push
mov
scas
rorl
lock
jnp,pt
cmp
ljmp
xchg
fisttpl
clc
imul
subb
cmp
test
js
and
fstpt
sbb
mov
shlb
sub
dec
add
and
cmp
cld
mov
dec
test
push
adc
add
mov
mov
dec
xor
aas
adc
push
xor
mov
subb
les
mov
scas
in
jle
sbb
mov
jo
icebp
arpl
gs
push
lock
add
jle
push
rolb
sub
sub
jle
out
sub
in
inc
aad
mov
aas
cli
std
sbbl
out
dec
shll
movsb
push
adc
cwtl
push
das
or
sahf
aad
jmp
rcrb
loopne
es
scas
dec
sbb
insl
outsl
loop
test
cmp
add
in
mov
and
int
dec
lock
jle
hlt
imull
cwtl
push
clc
jg
decl
sub
xchg
icebp
bound
sbb
icebp
addr16
pop
jecxz
add
pop
add
addb
rorl
push
pop
ret
sub
push
les
faddl
inc
frstor
and
jl
add
push
adcl
pop
mov
jl
sbb
clc
mov
mov
int
pop
call
sarb
jle
in
and
pushl
imul
enter
int
mov
adc
sbb
jge
inc
aas
adc
lret
jae
cld
sub
pop
add
es
cmp
mov
into
cmp
lock
or
stos
insb
and
lods
inc
fdivl
out
nop
cli
jbe
add
jp
mov
jmp
mov
pop
aam
movsb
cmp
fiaddl
jne
pop
or
fldt
mov
imul
xor
sub
jle
jg
inc
or
pop
cmpsl
je
jo
sub
lods
and
pusha
data16
fldenv
addl
mov
rolb
and
hlt
add
dec
inc
and
push
ds
pushf
add
add
cmpb
mov
inc
pop
jle
cmp
ret
lcall
negb
add
clc
rolb
jge
push
inc
xor
cmp
repz
jl
jo
push
mov
int
adc
in
cs
ret
imul
out
aas
sub
ffreep
or
lock
ret
bnd
add
out
inc
inc
testl
push
sbb
pusha
fldt
push
cli
out
push
push
notl
mov
sub
mov
mov
test
enter
adcl
inc
inc
push
adc
std
mov
sbb
mov
filds
icebp
sub
mov
inc
push
mov
add
addr16
in
cmp
pop
insl
push
mov
movsl
push
out
cld
sub
adc
mov
mov
mov
js
push
or
and
movsl
and
lret
xor
pop
and
mov
add
int3
cmpsl
adc
push
and
push
adc
stc
xor
push
add
aaa
add
cmp
test
mov
adc
mov
mov
push
in
pop
mov
or
dec
popa
and
pop
or
mov
cmp
ljmp
inc
imul
cld
test
das
scas
mov
cmp
mov
jle
fcoml
in
call
dec
mov
popf
nop
cmc
mov
add
push
jnp
cwtl
fistpl
lock
pusha
rcr
call
mov
int3
mov
lock
dec
cwtl
fsubrl
mov
adc
pop
sbb
cs
clc
orl
jae
jno
pushf
jbe
sub
jg
movl
out
addb
sub
mov
enter
and
mov
mov
rolb
mov
dec
inc
mov
jo
pop
mov
inc
fidivl
sub
push
bound
cmp
les
push
push
repnz
outsb
shrl
add
xor
adc
pop
pop
cmp
roll
push
sbb
fdivr
push
sbb
sbb
mov
or
add
xchg
or
cmp
cmp
pop
xor
mov
add
mov
inc
mov
mov
pop
or
push
imull
es
add
mov
mov
mov
jns
clc
and
jp
mov
mov
sub
sub
mov
es
bound
mov
in
fdivrl
mov
mov
sbbl
and
out
jno
roll
add
pusha
ja
loopne
xor
jne
inc
rcrb
in
push
mov
mov
mov
ret
sbb
xchg
sub
inc
inc
ret
add
lods
test
arpl
push
pop
mov
lcall
push
lret
test
out
or
inc
mov
mov
mov
and
xor
outsl
xchg
add
mov
sub
int3
rolb
sub
sub
out
inc
clc
mov
lcall
push
push
call
xor
mov
movsb
add
scas
jmp
xor
ljmp
xor
xchg
mov
xchg
inc
jae
sub
or
dec
push
imul
fidivrs
gs
in
insl
mov
test
add
cmp
dec
outsl
mov
popa
les
adc
sub
outsl
jno
test
js
pop
jne
or
fistpl
sahf
push
mov
xor
cmpb
dec
cs
dec
and
inc
jno
mov
in
cmp
fidivl
xor
bound
shll
test
push
add
inc
bound
add
or
inc
fstl
mov
ss
sub
lock
add
cld
mov
std
mov
push
nop
imul
mov
jae
lcall
das
adc
sbb
decl
pop
cs
out
cltd
push
inc
and
movsl
std
add
into
clc
inc
loop
lds
fidivrl
or
lcall
sub
mov
jp
movsb
or
sbb
mov
in
adc
aam
roll
out
dec
cmpsl
add
fst
mov
outsl
fsubl
pop
sub
cmpsb
ss
scas
sub
mov
pop
push
push
jb
jle
or
or
fwait
ret
shrb
xchg
or
add
push
dec
jbe
add
in
aas
out
mov
adc
cld
adc
out
std
add
mov
add
sub
scas
clc
out
cmc
dec
push
xchg
lahf
dec
stos
sub
test
mov
jbe
cmc
cli
iret
sahf
call
loop
inc
mov
addr16
clc
push
popl
inc
arpl
push
jecxz
mov
sahf
adcb
int3
pushl
adc
sub
xor
subl
in
iret
ja
or
lcall
or
movsb
add
mov
repz
xor
sub
add
fdivrl
loopne
leave
movsl
pusha
aad
xor
cmpsl
mov
inc
mov
jnp
jo
std
and
adc
xor
ret
sbb
xchg
cmp
adc
popa
jmp
dec
andb
or
fisttps
pop
or
pop
mov
dec
xor
scas
mov
add
jge
cmpsb
test
movsl
dec
and
or
cmp
ja
pop
add
cwtl
or
sub
pop
ds
push
lock
loopne
mov
mov
pop
sbb
testl
cmp
xchg
jo
add
div
jae
jae
stos
pop
jg
mov
xor
test
push
les
repnz
rcrb
mov
pop
dec
mov
incl
imul
push
lahf
mov
aam
clc
not
ds
test
mov
ds
sub
jg
dec
add
sbb
ss
adc
pop
mov
in
pop
push
lcall
insb
pop
xchg
dec
push
push
js
mov
mov
add
cmp
mov
fadd
loopne
push
xchg
ss
fsubrs
testl
cmc
mov
and
cwtl
sar
push
fwait
push
es
jo
cmp
xchg
outsb
ret
out
inc
pop
pop
push
inc
push
stos
xor
push
test
inc
pop
ret
sub
mov
dec
rorb
cmpsb
fcmovnu
sbbl
dec
dec
and
ljmp
rclb
jnp
dec
inc
or
pop
aam
push
daa
pusha
inc
lods
js
jbe
jmp
and
add
push
pop
shll
jp
mov
test
mov
mov
cli
or
adc
mov
hlt
sbb
push
mov
mov
movsb
mov
ret
pop
sub
repz
std
adc
mov
and
les
icebp
fistpl
jno
enter
adc
or
fwait
jp
push
js
rorb
pop
roll
dec
adc
xor
pop
push
int3
ja
jp
out
and
js
lods
or
mov
add
or
mov
jp
addr16
pushf
jne
inc
aad
pop
arpl
inc
or
cmp
das
jo
mov
mov
xlat
sub
iret
ss
out
add
push
arpl
jl
lods
push
popa
push
shrb
jmp
adc
int3
mov
test
in
push
fst
jae
mov
ljmp
inc
inc
add
cmp
faddp
and
stc
decl
loopne
adc
leave
ret
cmpsb
sbb
neg
push
movsl
xchg
or
jge
test
sub
mov
pop
adc
ror
inc
ficoml
bnd
repnz
rcrb
or
push
push
add
sbb
les
loop
adc
mov
mov
jno
push
and
xchg
sub
into
shll
mov
arpl
punpckhdq
cmp
or
mov
idiv
and
inc
clc
fstps
repz
xchg
sub
in
enter
xor
aaa
mov
inc
ss
mov
mov
xchg
push
pop
cmp
mov
outsb
addr16
cmp
test
add
lods
cmp
call
lock
mov
prefetcht1
enter
push
cmp
inc
push
ficompl
sarl
leave
adc
rcl
xchg
push
inc
ljmp
pop
loop
xchg
sub
jmp
cs
aad
in
test
insb
adc
pusha
mov
pop
dec
xlat
into
adc
mov
xor
negb
test
orb
les
je
in
lret
jp
data16
mov
push
int
lock
loop
fsubl
jno
rcrb
aaa
add
stos
subl
fmull
mov
movsb
inc
out
pop
dec
filds
int3
repz
or
aad
pusha
into
mov
in
call
xor
or
cmpsb
jl
orl
jb
insb
ss
and
xor
loope
lahf
push
ja
pop
pop
sahf
ror
lods
ret
or
adc
aad
int
xorb
xlat
cs
xor
cmc
lock
xchg
sub
jmp
pop
sub
cmpsl
test
js
pop
push
mov
dec
jmp
jb
push
dec
xor
fbstp
pop
mov
xor
cmpsb
xor
enter
sub
or
bound
lret
xchg
aam
fmuls
lcall
pop
add
je
loopne
sarl
cmp
xor
lcall
std
mov
test
and
shlb
fwait
cmp
int
jecxz
pop
xchg
into
out
push
pop
cs
out
or
pop
dec
lods
sbb
sbb
sub
xchg
mov
test
mov
inc
and
adc
lcall
lods
mov
or
push
lds
push
loop
lret
cmpsb
hlt
stos
stos
mov
sub
cld
sbb
pop
mov
jle
ljmp
jb
out
mov
add
insb
sub
sub
ja
sub
ljmp
cmp
enter
sub
shlb
or
mov
outsb
add
mov
dec
xor
adc
bound
cli
or
push
in
push
outsl
aaa
roll
adc
jb
push
ja
call
movsl
lret
cmc
shrb
mov
sbb
adc
sbb
int
leave
jp
mov
xor
sub
cmp
enter
xchg
das
mov
push
push
jmp
xchg
cmp
scas
and
dec
aaa
sub
rcl
arpl
ss
push
jnp
lahf
and
es
pop
loopne
lret
jecxz
cld
cmpsl
inc
mov
and
je
pop
sub
pop
sar
ds
push
lea
lahf
addl
sti
or
xor
cld
sbb
fdivrs
out
fimuls
dec
js
aaa
pop
lods
jp
leave
cmp
mov
push
lret
les
push
aaa
cmpsl
cld
and
in
or
sbb
pop
dec
enter
mov
outsl
clc
cmpb
sub
pop
les
push
test
mov
add
daa
add
jg
inc
push
push
inc
lock
and
mov
lods
sarb
pop
leave
test
mov
mov
imul
dec
mov
pop
das
push
fwait
sahf
jmp
push
or
or
jl
iret
sbb
insl
xchg
pop
sub
xchg
push
lret
mov
loop
mov
ss
mov
data16
push
stos
bound
pop
mov
ror
ljmp
xchg
sbb
lcall
jge
sbb
adc
adc
push
repnz
jl
daa
out
dec
daa
jg
lock
dec
ficoml
sub
cli
mov
sti
push
jo
add
lcall
cmp
xor
push
dec
decl
jle
mov
clc
or
adc
mulb
inc
cmp
adc
dec
rolb
lock
and
push
call
mov
scas
sub
in
inc
or
xchg
xor
adc
xchg
and
sub
hlt
cmpsl
dec
inc
lcall
jbe
es
cltd
cmp
jno
cmc
push
push
aaa
xor
dec
call
movb
pop
jae
sbb
in
sbb
pop
push
fimuls
aam
stc
and
mov
inc
adc
cmpsb
add
jle
pop
and
lds
mov
cmp
sbb
test
xor
xchg
lret
sahf
dec
inc
fmuls
imul
fildll
xorb
sbbl
mov
repz
scas
imul
mov
es
ljmp
in
inc
jge
into
cmp
ja
std
push
mov
mov
repnz
jmp
sbb
cld
inc
mov
idivb
test
imul
movsl
jne
outsb
mov
insb
push
push
je
push
fsubrl
inc
pop
mov
push
aas
into
and
or
subb
cli
pop
mov
add
call
inc
neg
das
jmp
pushf
int
insb
push
mov
loop
enter
inc
mov
enter
mov
divl
mov
xor
push
negb
pushl
adc
push
subb
sub
jge
lds
jg
arpl
sbb
int
fiaddl
pop
testl
jle
cld
fbstp
pusha
mull
test
mov
cmc
lock
mov
push
scas
pusha
adc
adc
dec
scas
out
cmp
lock
push
lods
loope
cltd
rcrb
loop
inc
aas
loop
in
lret
lods
and
mov
add
das
or
out
xchg
movsl
inc
mov
or
scas
ficoml
mov
jp
or
ret
push
push
test
jle
push
inc
mov
xchg
or
lahf
push
cli
pop
pushl
cld
fildll
jbe
outsl
sub
std
pop
pop
sbb
or
ljmp
in
lds
addr16
mov
sbb
push
mov
add
add
and
fldenv
dec
orb
out
shll
xchg
pop
lret
mov
push
nop
inc
cmp
sarb
and
out
lret
inc
sbb
cwtl
cmpsl
not
mov
negl
loop
rcl
je
jo
jmp
and
sarb
inc
add
dec
rcll
push
xlat
push
inc
loopne
mov
push
roll
rorb
cmpps
push
addl
or
rolb
icebp
dec
pop
dec
movsb
xchg
xchg
xor
xor
ja
jmp
adc
adc
mov
push
and
xchg
je
xor
outsb
and
jmp
mov
rcrb
xchg
add
adc
push
mov
sub
fiaddl
pusha
popa
sarl
pop
dec
sub
jno
sbb
sbb
les
sub
add
adc
frstor
inc
dec
push
fmuls
xchg
sbbb
mov
rcll
shr
clc
pop
or
in
clc
pop
sub
cmpb
mov
add
jno
push
push
sub
sahf
cmp
pop
mov
inc
sbb
sbb
cmp
int3
or
loop
pop
mov
dec
arpl
cmp
inc
mov
sbbl
xchg
xor
mov
in
sbb
ret
mov
sti
xlat
xchg
or
pop
add
shlb
pop
cmp
inc
loope
jge
pop
enter
jl
or
rclb
or
push
mov
jl
imul
int3
adc
into
pop
lock
sbb
neg
push
inc
jp
inc
out
mov
rol
ret
and
outsb
xchg
add
es
jecxz
sub
push
scas
and
xchg
xchg
adc
dec
or
and
sbb
in
dec
xchg
mov
enter
icebp
cmp
es
iret
lret
xor
xor
pop
dec
sbb
ficomps
add
pusha
jns
loope
inc
push
dec
subl
lcall
movsl
int3
dec
rcl
fcmovb
mov
insb
fwait
push
sar
cmc
push
sub
inc
inc
xchg
jecxz
and
add
mov
mov
push
fdivrl
popl
dec
or
dec
sbb
mov
pop
add
es
mov
push
mov
sub
andb
idivb
pop
xchg
adc
aaa
orl
inc
add
add
or
mov
sub
sub
lcall
enter
loope
out
rcrl
add
popa
shll
jecxz
decl
and
loope
cmpsl
ss
add
add
cmp
hlt
xchg
jns
or
adc
adc
inc
jnp
adc
mov
push
out
xchg
outsl
push
pop
inc
or
inc
jl
insl
jmp
pop
push
or
bound
imul
imul
orb
test
cmp
mov
shlb
sbb
adc
xlat
cmpsl
or
sbb
out
test
ffreep
scas
mov
insb
pop
xchg
pop
mov
or
mov
and
add
add
adc
inc
es
fwait
aad
push
mov
push
fwait
mov
mov
les
test
push
dec
or
xchg
pop
xor
and
push
cld
fwait
cmp
ret
inc
icebp
add
fdivr
pop
fwait
mov
cmp
add
jne
fdivs
sahf
loop
and
mov
insb
sub
out
jmp
pop
ret
or
jmp
or
dec
loope
test
rclb
rorl
in
jge
push
call
cmp
sub
push
aaa
inc
and
rolb
rorb
das
xor
adc
sub
ljmp
shlb
mov
add
inc
loopne
ffreep
jne
dec
mov
cmp
jae
push
xor
sub
push
out
shrb
jmp
ja
push
adc
cmp
pop
and
pushf
int
rorl
mov
add
in
clc
xchg
push
push
sub
fisubrl
bound
mov
or
sub
ss
push
shll
xlat
ds
or
add
pop
lret
fildll
add
andl
lock
xor
std
add
imul
adc
dec
std
xlat
sti
xchg
mov
pop
jnp
sbb
xchg
push
jb
dec
add
movsb
sbb
stos
lock
adcb
cmpsl
lock
or
inc
test
or
fdivs
adcb
loopne
insb
fwait
add
push
jne
movl
add
sub
push
orl
sbb
nop
pop
insl
pusha
inc
cmp
ja
push
pop
pusha
cltd
hlt
mov
xor
cwtl
cmpsl
push
int3
decb
add
shll
mov
inc
cmp
aaa
or
and
icebp
push
and
or
fisttps
add
xchg
leave
sar
sarl
mov
mov
or
mov
dec
inc
lds
cmpl
test
xchg
std
das
insb
pusha
fisttpl
call
mov
xchg
mov
add
rcrl
xchg
test
push
lahf
loope
mov
mov
mov
cmpl
sti
es
orb
pushf
test
xorl
pusha
mov
xor
subl
es
loop
and
stos
mov
pop
aad
loope
mov
inc
out
pop
xor
in
push
add
lcall
lods
push
pushf
dec
mov
jb
mov
adc
addb
inc
lods
loopne
sbb
js
ret
dec
dec
les
jmp
test
push
or
cmpb
xchg
push
int3
fwait
add
testb
lock
std
and
mov
js
in
and
push
mov
mov
out
cwtl
fnstsw
test
aam
jge
sbb
mov
inc
dec
mov
push
add
dec
add
inc
insb
hlt
in
mov
nop
mov
and
or
fs
stc
mov
xchg
push
lea
xchg
test
std
sbb
lods
jle
aas
sbb
adc
mov
add
test
out
popf
lea
add
xor
andb
add
push
and
xor
lret
mov
std
mov
clc
das
pop
je
push
sub
mov
test
pop
call
xlat
xchg
mov
mov
lods
mov
repz
mov
rorb
cld
sbb
add
mov
pop
mov
shll
hlt
pop
or
add
inc
enter
lret
cli
jbe
movsb
loope
enter
pop
sub
jle
add
and
push
lock
xor
sub
dec
in
mov
jno
movsb
or
lea
lock
jmp
sub
sahf
add
les
scas
or
adc
je
or
insl
xchg
sar
pop
cld
mov
scas
add
repnz
pop
aaa
les
jmp
cmp
int3
add
and
scas
cmp
and
cmc
js
xor
enter
jbe
cmc
push
xor
and
addr16
cld
xor
xchg
jbe
jl
shll
dec
jbe
das
and
out
out
std
lea
push
or
fs
add
popa
add
inc
stos
je
jbe
xlat
ljmp
ret
das
pop
lock
and
insl
mov
push
insl
push
sub
fsts
lcall
push
flds
aam
pop
dec
push
jmp
repz
dec
push
das
test
insl
iret
inc
push
xchg
mov
loope
ficoml
gs
mov
inc
mov
cltd
sbb
xor
push
sbb
and
mov
mov
loopne
mov
jl
jo
pop
jb
dec
scas
mov
in
movsl
jl
add
andb
popa
ret
ja
in
out
test
outsb
pusha
add
sub
pop
adc
sahf
mov
and
mov
rorl
add
push
mov
jo
int3
jle
cld
lds
into
insb
call
xchg
adc
mov
push
fucomip
mov
fsubs
or
push
dec
jbe
lock
fistpl
movsb
inc
in
and
rcrl
test
out
pop
inc
daa
mov
ljmp
faddl
fs
add
into
xor
xchg
test
shrb
andl
lret
pop
roll
jg
icebp
inc
and
add
jl
sbb
cmpl
mov
mov
pop
fdivrs
fildl
rcrl
aas
dec
mov
add
jle
pop
or
push
scas
cmc
gs
andb
xor
inc
sti
pop
sub
push
mov
into
dec
push
add
loope
jne
fcoml
shlb
sub
shrb
fwait
or
jp
sub
mov
shlb
adc
jae,pt
add
sub
xor
fnsave
fisttpll
adc
adc
sub
pop
ret
les
and
xchg
out
jle,pt
pandn
mov
lahf
movsb
lret
iret
aas
pop
and
shlb
mov
ret
shll
out
add
push
pop
lahf
mov
fs
ljmp
push
add
neg
xchg
stos
int3
or
push
mov
push
cmp
aaa
add
push
cli
in
add
fildll
lss
xor
add
hlt
dec
and
inc
fnstenv
add
dec
jp
test
lock
test
test
cmp
fs
or
cld
jb
mov
adcl
dec
dec
or
pushf
add
enter
or
or
scas
push
jne
adc
arpl
dec
mov
enter
jg
sub
adc
arpl
mov
inc
push
add
jp
test
sub
sub
and
xchg
test
mov
push
add
pop
and
cltd
xor
movb
inc
cmp
pop
sub
hlt
push
ret
mov
push
int
adc
sbb
and
ret
xchg
dec
add
sbb
pop
mov
aam
inc
fistpl
test
cmp
jno
aaa
pop
mov
cmp
std
dec
lock
rol
outsb
shll
fsubs
std
neg
adc
mov
ficomps
pop
fucomi
push
xor
adc
mov
xchg
sbb
and
sbbb
adc
mov
push
sbbb
push
test
ljmp
lcall
push
bnd
add
mov
test
mov
or
add
push
cmp
and
add
add
cmp
leave
mov
add
stc
cmp
xor
fisubrs
mov
sub
in
decl
pop
sbb
dec
ljmp
gs
enter
dec
push
cmp
push
or
outsl
adc
sub
add
xchg
inc
pushf
or
andl
inc
outsl
push
cmpsb
or
fcomps
fs
push
daa
leave
test
nop
inc
sbb
rcrb
cmp
add
sbb
movsb
sbb
mov
pusha
mov
xchg
or
push
adc
mov
push
sub
enter
jno
push
inc
jno
xor
add
add
lret
cmpsl
ss
add
insl
pop
popa
testb
jecxz
sub
and
ds
push
lret
xchg
std
xchg
lea
push
push
lcall
rcl
inc
pop
lret
cwtl
lret
and
lods
movsb
xor
sub
xor
adc
xchg
dec
inc
popa
les
and
sbb
jae
inc
movsb
push
aam
mov
mov
pop
aaa
add
xor
in
mov
and
xchg
xchg
add
subb
mov
pop
repz
movsl
ss
sbb
xor
dec
mov
xchg
adc
mov
rorl
les
adc
fcoms
dec
dec
pop
sbb
es
enter
or
xor
adc
pop
mov
aas
adcl
fisubl
js
ret
pop
or
fsubr
dec
cmpsb
sahf
lret
xor
dec
xchg
pop
loop
rcr
or
sbb
or
addr16
les
dec
cld
out
mov
inc
outsl
mov
test
inc
mov
cmp
call
aas
pop
shr
int
dec
push
cmp
inc
ss
cmp
mov
pusha
lcall
incb
jge
bnd
leave
icebp
add
xor
jns
das
sub
test
sub
add
jecxz
mov
xchg
test
push
lock
enter
rol
push
sub
add
rcrb
psrld
icebp
ljmp
xchg
mov
jp
dec
mov
or
add
movsl
pop
subb
jg
cwtl
adc
xchg
mov
xchg
xor
fsubs
pusha
push
clc
mov
stos
inc
call
add
cs
pop
and
mov
and
ljmp
testb
repz
movl
imul
jg
add
add
aam
clc
sbb
out
mov
or
mulb
push
or
sbb
fisubrl
dec
stc
gs
lret
add
and
mov
flds
icebp
das
adc
paddsb
or
xchg
cwtl
jne
push
add
dec
clc
aaa
cwtl
push
pop
arpl
and
fistl
fs
mov
fs
and
push
add
adc
adc
and
inc
push
inc
imul
nop
add
cs
ljmp
insb
dec
jecxz
rcrb
inc
mov
sub
shrl
stc
loopne
in
inc
push
loope
loope
mov
adc
lea
fadds
cmp
fiadds
push
jno
add
les
jo
mov
ret
cmp
pop
into
adc
sub
insl
bound
daa
or
std
inc
sub
dec
ret
jecxz
cmp
or
add
lahf
ja
jp
mov
and
scas
clc
in
mov
jl
pusha
nop
xchg
push
dec
pop
movsl
push
test
jbe
das
xchg
inc
in
cmp
cmc
lock
mov
cmp
mov
decb
pop
adc
add
dec
push
mov
fistpll
xor
and
dec
adc
cli
js
sbb
xor
cmp
and
or
sbbl
fwait
rcr
lret
inc
inc
sar
fildl
loope
pop
sub
push
push
adc
add
mov
jl
dec
cld
lock
sbb
repz
fsubrs
dec
aad
shlb
inc
loope
in
add
sbb
enter
mov
push
cmp
push
icebp
stc
inc
repz
outsb
add
mov
or
aam
xor
dec
sbb
add
mov
xchg
add
pop
roll
fsubrs
scas
dec
mov
and
jae
decl
pop
pop
jns
fdiv
cmp
jno
dec
nop
pop
loop
lock
push
add
cmp
xor
jg
les
mov
inc
xor
cmc
pusha
pop
ljmp
iret
dec
test
aad
dec
inc
adc
or
out
push
repnz
negb
test
in
mov
mov
lret
inc
sub
pop
sub
lret
xchg
add
aad
lea
rcl
stos
add
andb
aaa
faddl
jnp
add
jl
sub
sub
cmp
sub
and
and
push
jnp
jecxz
inc
jge
cli
sub
jne
iret
mov
adc
push
loope
jbe
dec
push
pop
movsl
loope,pt
xorl
add
lds
lds
mov
xor
add
push
pop
adc
or
lock
mov
out
mov
testb
xchg
push
decl
inc
iret
and
push
xor
lock
or
xor
notl
out
dec
adc
mov
cmp
addl
xor
add
mov
loopne
adcb
movsb
sbb
mov
pop
ret
mov
add
cmp
mov
xor
push
ret
cmc
push
dec
dec
inc
xor
sub
loope
add
pop
jge
rclb
jmp
bound
jmp
jae
or
adc
in
push
sbb
clc
cmp
loopne
nop
or
dec
add
mov
dec
adc
fists
pop
in
loopne
jecxz
loop
pop
cmpsb
repnz
push
loopne
incl
jb
cmp
fs
rolb
mov
call
add
popa
xor
jp
fisttps
clc
addl
or
imul
add
add
scas
or
pop
add
fmuls
or
push
mov
iret
jb
sbb
ret
test
imul
add
orb
dec
and
divl
mov
in
fsubrl
jle
push
decb
ficoml
loopne
push
sub
imul
pop
mov
mov
pop
dec
ret
mov
ret
ja
cs
movsb
push
dec
push
insb
cld
dec
add
cmp
fiaddl
divl
ret
mov
pusha
inc
leave
pop
fld
mov
sub
and
sti
inc
outsb
inc
sub
sub
inc
sub
stos
dec
jno
stc
adc
enter
jge
sbb
or
push
jnp
popa
pop
xchg
dec
dec
pop
jg
inc
sbb
add
dec
xchg
or
mov
pop
push
sti
cmpl
incl
in
into
gs
fidivs
inc
shlb
lret
das
inc
out
add
and
dec
push
lock
movsl
mov
cmp
xorl
sub
lret
add
cmp
jmp
aam
scas
addb
test
push
xchg
fistps
inc
cmpsl
mov
mov
fadds
xor
leave
push
hlt
gs
jb
push
lock
push
fsubrl
test
aam
scas
xchg
and
mov
fs
and
and
mov
ret
lcall
pop
cmp
test
mov
ret
les
adc
add
int3
mov
adc
sbb
jb
pop
and
mov
adc
cs
xchg
js
andl
or
test
cltd
mov
mov
jle
jo
push
mov
fcoml
mov
pop
xor
leave
outsl
aas
add
nop
inc
add
pop
orb
popa
jl
sbb
cmp
pop
or
push
je
fsubrs
dec
sahf
cwtl
mov
cmp
popf
imul
hlt
adcb
ja
mov
or
pusha
loopne
in
add
sbb
test
fadds
mov
aam
adc
roll
insb
add
xchg
push
xlat
test
aas
sub
loope
add
punpcklwd
adcb
add
jns
icebp
fwait
lock
mov
js
icebp
aas
faddl
roll
xchg
xor
adc
cmpl
jnp
pop
movsl
cs
sar
or
sbb
decb
sub
mov
mov
adcb
lahf
fs
js
mov
jg
int3
push
xlat
add
jl
jp
xchg
mov
addr16
push
sub
pop
pop
fdivrl
pop
mov
ljmp
sbb
push
lea
fs
add
or
jge
push
cmp
adc
fnstcw
xchg
adc
icebp
or
or
movl
pop
xchg
mov
jg
inc
mov
out
mov
pop
mov
inc
arpl
mov
xor
jno
sub
lcall
subb
pushf
roll
movsb
add
movl
fnsave
mov
and
shlb
jp
sahf
lods
mov
hlt
mov
adc
sbb
push
jnp
pop
in
data16
push
into
jge
adc
or
mov
rolb
mov
mov
xchg
cmpsl
incb
mov
or
shll
dec
aad
es
aam
dec
cmp
cwtl
pop
dec
or
call
pop
clc
xor
rolb
lds
sbb
js
or
mov
lahf
push
cmc
cmp
pop
jbe
stos
test
xor
insb
jo
jle
adc
bound
out
mov
dec
je
jg
jle
insb
adc
outsl
add
pop
inc
popa
mov
addb
add
cmpl
xlat
pushl
pushf
sub
stos
cmc
jno
mov
cli
aas
sub
inc
sbb
ficomps
jl
adc
push
ljmp
mov
push
clc
mov
out
stos
adc
ret
roll
movsb
adc
mov
sub
jle
lds
cmpsb
push
and
or
pop
adc
add
ret
cli
sbb
daa
jecxz
cmp
icebp
aaa
or
cmpb
shrb
pushf
mov
es
and
dec
add
cmpsb
cmp
std
insb
fisubrl
cwtl
mov
mov
rol
and
scas
inc
leave
pop
and
jo
jno
dec
shl
add
sbb
mov
dec
in
out
fstpl
cld
fstl
xor
ret
lea
jbe
lock
sbbb
bound
sub
lods
pop
inc
or
js
cwtl
ffreep
data16
push
xchg
pop
shlb
jb
mov
out
rcrb
xor
jl
std
fistps
ffree
popa
ljmp
sbb
push
adc
pop
testl
cmp
pop
cmp
sbb
cs
out
aam
rorb
mov
and
mov
and
inc
rolb
test
jg
jmp
xlat
xchg
mov
cmp
push
jp
jp
add
mov
xchg
dec
push
ret
inc
inc
lds
dec
fisubl
daa
inc
ficoml
ss
adc
and
mov
jge
dec
fsubl
sbb
xor
lcall
hlt
sub
xor
push
stos
pop
aas
sub
add
std
out
mov
mov
dec
xor
sbb
subb
popf
call
fcomps
frstor
imul
stos
mov
pop
add
out
and
pop
in
jne
call
ret
lds
outsl
cli
fnsave
adc
rep
cmc
movsl
jnp
xor
mov
jle
data16
xchg
xchg
or
sub
call
pop
loopne
fs
jno
add
sub
mov
mov
scas
xchg
fiaddl
cld
lock
jno
add
push
push
cmpsb
rorl
add
mov
inc
pop
les
cld
sub
int3
or
xchg
aas
nop
or
push
mov
mov
stc
ficoms
fisttpl
and
imul
call
mov
adcb
pusha
push
pop
ret
stos
jmp
mov
fs
sub
repz
aaa
arpl
rorb
leave
inc
inc
hlt
push
push
fisubs
dec
adc
out
xor
pusha
push
push
adc
jns
inc
iret
jecxz
loope
adc
push
loopne
pop
loope
bnd
nop
jg
pop
dec
mov
lcall
push
arpl
pusha
inc
push
filds
jns
scas
and
mov
dec
rcr
mov
rorb
or
nop
adc
lock
movsb
or
movsl
and
mov
mov
test
cmc
pop
mov
lock
fsubl
nop
and
fimull
cs
push
mov
negb
sbb
push
pop
or
mov
mov
fildll
pop
call
shl
out
icebp
xchg
or
fimull
imulb
fbld
push
jecxz
sub
pop
dec
fildl
insl
push
fdivl
jp
cli
adc
cmp
mov
outsl
in
or
fmuls
repz
icebp
mov
inc
pop
fwait
mov
rorb
stc
xchg
loopne
add
cli
sahf
mov
out
inc
loope
pop
lods
push
dec
or
xchg
movsb
xchg
dec
mov
test
sbb
mov
adc
cmp
insl
je
mov
xchg
mov
cmp
insb
dec
mov
imul
or
pop
clc
pusha
insb
enter
jbe
ss
inc
pushf
add
and
add
in
xchg
dec
mov
push
xlat
or
add
add
push
xor
popa
cmp
jmp
cltd
call
mov
or
pop
shll
mov
sub
fbld
cmp
fwait
jp
mov
cs
fdivrp
loopne
je
mov
pop
add
js
pop
sbb
lahf
and
stos
std
or
outsl
mov
xchg
mov
int
rclb
dec
sarb
push
or
lret
aaa
enter
cmp
xchg
mov
mov
ret
out
sbb
pusha
movsb
lock
les
cli
or
fisubrl
test
inc
inc
insb
call
test
xchg
push
idivb
fsqrt
call
notb
lock
outsb
jo
ljmp
clc
or
xchg
push
dec
scas
lahf
gs
in
jne
jbe
pop
cmp
mov
dec
cmpsb
mov
inc
rcl
sbb
pop
sbb
lret
fwait
pop
jne
or
cmp
shll
gs
mov
hlt
incl
loop
sbb
jge
gs
xor
push
movsl
scas
xor
sbb
idivb
lods
lods
adc
icebp
jb
lock
lahf
je
cltd
xchg
enter
push
mov
cs
fucomip
xchg
imul
sub
mov
test
scas
mov
push
sub
mov
nop
repnz
push
fs
rorb
cmc
jg
ss
mov
outsb
outsb
call
jbe
sbbl
push
mov
jge
shlb
ja
ret
fsubr
dec
stos
cmp
and
and
mov
sub
sbb
mov
sub
ljmp
pop
jle
and
ficomps
push
loopne
or
inc
adc
bound
lret
push
mov
ljmp
in
push
xor
mov
jne
cld
ficoms
mov
imulb
xchg
inc
pop
mov
or
jo
mov
lret
mov
adc
sbbb
pop
dec
xor
loopne
or
xlat
orl
pop
aam
sub
adc
or
testl
fidivrs
sub
bound
into
insl
lret
pop
mov
sbb
sub
aam
push
sbb
xor
push
outsl
sbb
xchg
xchg
int
add
aam
push
fdivrl
in
pop
jmp
push
or
loope
jl
pop
mov
cld
pop
pop
dec
cmp
push
sub
neg
movsb
cmpsb
jmp
add
and
inc
and
adcl
ja
or
repnz
enter
jle
in
add
cmc
mov
push
pop
mov
enter
add
dec
incl
loope
adc
rcrb
movsb
jecxz
mov
insb
add
xchg
fdivl
xor
scas
pop
adc
divb
dec
jbe
jl
mov
cld
pop
push
jae
cmp
dec
and
jo
or
les
lcall
mov
insb
repz
test
add
and
fisttps
test
sbb
cs
xchg
out
in
sbb
mov
insb
inc
mov
adc
push
add
pop
insw
mov
ljmp
adcl
cmp
je
mov
mov
mov
xor
adc
fmuls
adc
addr16
nop
bound
mov
inc
xchg
sbb
or
jnp
incb
jb
add
jae
inc
ret
lret
and
mov
mov
pushf
sub
daa
sbb
fstp
mov
push
adc
mov
and
clc
push
pushf
sub
sarl
jbe
insl
lock
ficomps
adc
mov
mov
xor
pusha
or
out
adc
gs
addl
add
add
shrb
fcoms
int
cmpsl
into
pop
fs
imul
or
push
and
jae
and
movl
xchg
add
xor
xor
dec
and
inc
pusha
cmc
cmp
xchg
fwait
bound
pop
lds
js
push
out
stc
xor
aas
mov
into
add
cmpsb
mov
in
jmp
cmpb
movsb
jl
jmp
push
test
push
jnp
rolb
xchg
pushl
pushf
or
push
aas
leave
pusha
dec
std
pop
dec
add
push
and
mov
mov
fisubrs
mov
stos
mov
sub
push
mov
push
jecxz
loop
add
mov
cli
and
nop
xor
leave
cmp
rorb
data16
xchg
xor
xor
scas
add
insb
cli
pop
fmull
mov
lds
cmpsb
push
out
sbb
push
orb
mov
stos
push
xchg
dec
cld
add
out
add
sahf
fiadds
dec
or
shll
insb
mov
sub
out
popf
cltd
inc
mov
arpl
push
cmp
ja
dec
outsl
inc
or
sub
push
hlt
aad
add
pop
mov
sarb
outsb
mov
aam
sub
popa
ficompl
shll
and
push
mov
in
mov
in
loop
xor
push
ss
xchg
ficoms
mov
lcall
mov
clc
mov
push
add
ss
repz
or
mov
sbb
xchg
bound
inc
mov
aas
and
call
mov
mov
sub
clc
sbb
js
sbb
cli
lock
addl
fldt
mov
lock
mov
push
rclb
movsb
fwait
das
js
xchg
add
sbb
mov
jmp
push
and
data16
lock
pop
out
and
xor
sbb
pop
mov
insl
push
cmc
dec
cwtl
rolb
lcall
out
inc
add
push
sbb
pop
and
mov
jne
cli
out
sub
out
lods
xor
dec
mov
test
xor
pop
imul
pop
fadds
mov
xchg
sub
ja
and
pusha
fdivr
pop
mov
imul
sbb
and
mov
fcmovb
and
sbb
rcrb
and
or
add
ret
and
adc
adc
mov
sub
inc
or
cmp
icebp
inc
hlt
sbb
loope
and
loopne
jno
pop
push
push
sub
add
xchg
push
mov
pop
pusha
add
mov
loop
adc
enter
xchg
test
dec
mov
cmp
ret
into
cmpsb
test
sub
jne
in
adc
pop
sub
fadds
aas
add
movsb
push
pop
xor
sub
and
cmp
inc
jo
mov
add
dec
adc
xor
mov
test
cmp
mov
das
inc
mov
or
xchg
cmp
xor
lret
ss
aam
cmp
mov
inc
sbb
lahf
cmp
dec
pop
sbb
stc
clc
andl
or
adc
movsl
mov
mov
sbb
and
cmp
sbb
push
lcall
es
or
and
or
in
pop
cmp
inc
popf
jne
nop
hlt
mov
sbb
cmp
cli
dec
shrl
fildl
sbb
push
dec
mov
int3
test
repz
sbb
stos
nopl
dec
pop
dec
adc
add
add
inc
fcos
into
es
cmp
ret
shl
sti
lock
test
ret
sbb
xchg
arpl
xchg
lock
je
mov
fadd
enter
cwtl
bound
aad
pop
inc
bound
pop
push
ja
and
lahf
cld
add
stos
cs
inc
adc
pop
enter
dec
add
cmp
inc
push
push
dec
jecxz
pop
sbb
and
lock
xchg
dec
lret
inc
pop
enter
add
push
add
pop
cltd
scas
adc
daa
inc
ret
jo
outsl
fs
lahf
xchg
ljmp
pop
lret
lahf
add
fdivs
fsubrl
outsl
xlat
or
mov
mov
cmc
add
mov
loop
shrb
push
lcall
nop
cmp
add
cld
pop
add
dec
pushf
cmp
fs
inc
sub
dec
enter
aad
or
dec
data16
mov
aam
arpl
pop
add
rclb
repz
push
sub
je
push
out
cmp
divb
mov
mov
lods
iret
push
cld
inc
test
pop
add
inc
loop
incl
arpl
mov
push
lahf
adc
lds
sti
ret
sar
mov
js
incl
loopne
mov
loop
lahf
repz
sbb
mov
and
out
jns
cmp
sbb
sub
jno
lcall
xchg
outsl
mov
and
push
mov
outsb
inc
pop
js
imul
push
pop
orb
and
dec
fcomp
sbb
xor
jle
jo
cli
xchg
mov
out
dec
pop
mov
outsl
pop
imul
loope
orb
and
adc
dec
cld
test
adc
add
scas
jp
in
cmc
jp
mov
cmp
fadds
mov
mov
ret
sbb
jb
dec
dec
lcall
into
adc
shll
and
mov
rcl
inc
sub
sarb
and
out
inc
das
test
mov
add
rcrb
das
ret
test
add
dec
sarb
lods
rclb
sbb
rolb
jo,pn
sub
scas
int3
sbb
test
cmp
test
mov
adc
jg
call
decl
or
roll
xor
fidivrl
sub
mov
cmpsb
out
nop
or
mov
call
or
mov
mov
mov
jle
sbb
lahf
add
mov
adcl
mov
icebp
lock
jbe
mov
sbb
call
xor
jle
fldt
lods
jl
stos
push
inc
fldenv
sub
cmp
sbb
mov
hlt
pop
mov
imul
mov
cld
fs
push
test
or
xor
lock
mov
sub
sbb
lcall
xor
out
xorl
iret
in
dec
cli
or
mov
or
cmc
in
sbb
push
call
dec
push
jno
mov
daa
inc
xor
mov
pop
cs
jne
aam
jbe
loop
sbb
add
dec
sub
or
push
test
jo
push
and
mov
mov
inc
add
xacquire
jmp
nop
test
xchg
bound
ds
ja
lret
mov
fbstp
mov
or
push
add
sbb
jmp
enter
or
hlt
mov
std
pop
test
pop
pop
fs
sbb
clc
mov
cli
sub
push
aam
mov
testb
pop
lock
ss
cwtl
push
cld
mov
mov
pop
std
sub
pop
push
idivb
xchg
sbb
std
sub
imull
dec
or
inc
int
push
jo
xchg
outsl
push
insb
mov
inc
xlat
jl
cld
in
cmp
push
sbb
daa
sub
add
test
mov
lods
mov
inc
daa
sbb
mov
loopne
ret
pop
pop
add
js
ljmp
mov
in
jnp
popa
adc
fisubrl
xor
pop
inc
push
les
inc
mov
mov
or
cmpsl
add
pushf
xor
mov
cmp
xchg
lea
inc
jp
dec
aam
and
aas
movsb
je
cmpsb
test
rolb
jl
sbb
data16
nop
into
add
test
push
movsb
adc
or
sarl
shr
enter
pop
jl
pop
xchg
add
scas
inc
xor
ret
sub
cwtl
icebp
push
jmp
aad
aad
sub
out
sub
in
stos
sub
mov
mov
mov
and
xchg
xor
mov
fidivs
cmp
test
movsl
push
cld
jae
dec
mov
or
xchg
add
outsl
mov
mov
addr16
testl
or
leave
xor
and
lds
test
sbb
adc
push
dec
lcall
mov
jo
cld
sarl
rorl
cwtl
pop
cmp
call
push
mov
fs
call
into
mov
or
add
and
aam
cmp
inc
insl
in
fwait
jle
cli
in
clc
jecxz
int3
mov
cli
nop
sbb
xchg
push
or
or
mov
and
dec
sbb
and
fisubrs
push
popf
inc
mov
inc
insb
mov
add
leave
hlt
out
adc
xchg
not
jecxz
fiadds
inc
jecxz
ret
insb
add
xchg
push
inc
jb
sub
loope
push
adc
shlb
mov
popf
push
test
add
jg
push
mov
lods
orl
push
jp
push
outsl
inc
test
inc
sbb
ds
movsb
push
test
push
ror
sbb
pushf
jl
out
sahf
lock
push
push
aam
cmc
jno
insb
mov
call
nop
mov
jle
fdivrs
sub
pusha
loopne
jge
mov
aas
lcall
jae
pusha
mov
stc
and
sarl
mov
add
xchg
and
test
pop
mov
fists
fsub
lods
sub
lret
adc
cld
ss
std
jb
and
mov
rcl
cwtl
jo
and
push
aaa
jbe
push
and
cmpsb
rorb
shlb
movsl
pop
lods
repz
mov
movsb
dec
xor
mov
mov
mov
inc
shlb
mov
ljmp
pop
mov
push
add
push
push
inc
jl
xchg
inc
sbb
and
fistpll
adc
mov
fsubs
nop
hlt
adc
or
mov
adc
js
mov
mov
adc
mov
sarb
int
stos
ret
sahf
ljmp
mov
fimuls
and
inc
push
subb
add
add
or
fsubrs
sahf
nop
aam
loope
push
pop
je
test
in
sahf
pop
orl
sub
push
and
sbbl
mov
mov
mov
inc
aad
mov
in
inc
pusha
pop
pop
repz
popa
popf
jb
sbb
movsb
incl
sarb
sub
mov
repnz
adc
outsb
xor
xor
fdivrs
call
movsb
or
mov
and
sub
add
ja
lock
pop
push
adc
stos
in
dec
adc
scas
cmp
cmpl
dec
imul
dec
or
jecxz
js
jmp
fdivs
inc
cmpsl
pop
add
arpl
add
and
mov
xor
cwtl
lock
and
mov
arpl
sub
outsl
xor
mov
sarb
test
push
push
lret
mov
xchg
adc
sarb
sbb
mov
add
dec
push
loope
sbb
xor
enter
imul
adcb
sbb
xorl
sub
mov
inc
inc
inc
clc
decb
sarb
notb
xorb
movb
test
mov
mov
arpl
xchg
pop
pop
fcomi
popf
and
xchg
sbb
movsl
xchg
icebp
mov
popf
cmpl
xor
and
mov
push
std
inc
add
std
inc
sti
out
add
mov
je
or
cwtl
fistpll
add
loop
cmp
pop
xchg
xchg
lods
adc
pop
jmp
jne
inc
dec
mov
xlat
inc
ja
and
sub
loopne
dec
cld
fimuls
inc
inc
jae
icebp
xor
push
pop
mov
inc
in
mov
jne
xor
xchg
or
mov
sub
cld
out
push
jns
add
add
inc
insb
ret
xlat
inc
and
test
rorl
jne
adcl
repnz
add
sub
adc
movsb
fdivrs
mov
xor
into
in
outsl
jns
and
sahf
add
daa
dec
jecxz
fs
add
or
in
push
es
popa
notb
pop
pop
negl
mov
roll
js
xor
pop
adc
outsl
stos
ret
mov
ds
bound
push
jmp
xor
or
shrb
mov
mov
out
and
jl
mov
pop
nop
jp
mov
loope
shrb
fistl
xor
push
push
sub
insl
into
mov
xchg
clc
or
sub
and
sub
cmp
dec
cld
mov
push
push
sarb
push
fdivl
outsl
shlb
pop
mov
outsl
xchg
mov
add
aaa
mov
pop
lret
sbb
pusha
lret
clc
xchg
clc
decl
cs
mov
add
push
jo
insb
mov
or
jecxz
mov
mov
lcall
ljmp
std
pop
and
cmp
loopne
push
cmp
insb
inc
push
dec
imul
in
lcall
sbb
lods
mov
in
iret
jmp
ret
pop
xor
lret
add
ljmp
mov
sub
jo
daa
jle
fs
jge
mov
inc
mov
sbb
or
mov
sbb
sub
aad
or
xchg
decl
cs
iret
js
mov
mov
adc
outsb
loop
dec
call
inc
mov
and
stc
add
adc
test
dec
adc
xorl
cmpsb
inc
pusha
popa
mov
or
lds
add
jno
adc
push
lods
lea
jo
or
mov
fcoms
inc
fstpt
fsubrs
pop
xlat
aas
pop
inc
fists
cmc
cmpb
mov
xchg
stos
jns
sbb
je
and
aad
icebp
sbb
jecxz
mov
jo
les
lds
jne
sbb
es
mov
imul
out
add
dec
jo
mov
xor
in
das
cmp
inc
call
incl
sub
insb
dec
outsl
cmp
loopne
and
mov
adc
mov
stos
aam
je
dec
sub
mov
fucomip
lret
mov
add
mov
push
add
sbb
xchg
les
idiv
inc
cmc
dec
mov
sbb
enter
add
dec
loope
fwait
or
push
pushf
inc
cmp
cmpsb
adc
adc
loopne
loopne
call
push
mov
inc
es
out
sub
jecxz
jnp
sbb
addb
ret
mov
int3
inc
push
adc
fldt
push
insb
clc
rcrb
clc
stos
or
pop
inc
out
add
jnp
sbb
fucomi
lcall
or
xchg
fmuls
cmp
ror
pop
and
push
add
jno
push
xor
test
sbb
push
dec
jle
mov
stos
insl
push
ja
mov
pop
add
xor
sbb
stos
sub
test
fwait
sbb
sub
pop
jle
negb
xor
sahf
in
and
inc
cld
jg
cltd
lds
dec
xor
dec
jne
pushl
call
lahf
mov
push
cmp
orb
xchg
popa
fists
xorb
cwtl
jp
scas
enter
arpl
out
sub
inc
xchg
mov
jns
stc
call
inc
nop
fs
stc
push
xor
fimull
loopne
cli
ja
and
ds
rol
std
cli
mov
imul
sbb
mov
or
lcall
fisttps
xor
mov
add
add
test
push
jo
add
mov
jo
and
sub
pushf
or
dec
pushl
sbbl
or
mov
cmc
sub
repnz
mov
in
jmp
jo
pop
lock
xor
sti
xchg
add
push
das
xchg
xor
xlat
xor
adc
rol
lock
mov
jmp
fcmovnb
out
mov
push
sbb
js
lods
aam
lods
je
mov
jle
push
loop
les
stos
lea
insl
mov
sub
mov
loope
icebp
sahf
in
scas
mov
test
pop
ss
inc
out
pop
jbe
pop
movsb
int3
inc
rorl
scas
ror
xor
mov
inc
je
push
rolb
jnp
sbb
shl
mov
test
insl
lds
out
mov
mov
imul
mov
push
pop
das
loop
rolb
adc
rcrl
sahf
and
dec
fsubrs
jp
jae
push
addr16
pop
inc
cmp
out
aas
xchg
jb
orl
pop
or
psubb
sub
sbb
add
xor
arpl
sbb
scas
cs
xor
or
int3
rclb
add
lret
cmp
cli
outsl
lret
js
adcb
lock
jge
popf
shrb
les
xchg
adc
xchg
loopne
out
adc
xor
add
fadds
jae
icebp
popa
ljmp
mov
mov
out
clc
push
mov
push
or
cmp
jb
jmp
add
aas
lret
enter
aam
add
loop
push
lea
sbb
pop
cmc
dec
jbe
repnz
push
cmp
and
push
mov
shll
pop
pop
xchg
xlat
pop
data16
cmc
insb
jmp
pop
cmp
xchg
jno
lret
movsl
enter
loope
int
call
jg
aas
cld
and
or
test
int
push
add
sub
pop
pop
lock
xor
xchg
xor
adc
fs
mov
les
mov
sti
mov
xor
loop
rcrb
sbb
mov
push
in
mov
aad
xchg
outsb
fdivr
jbe
out
mov
stos
adc
in
lahf
mov
fadds
or
outsb
pop
sub
push
sub
mov
push
rcll
inc
ret
inc
clc
addb
sbb
mov
add
add
xchg
test
sub
ret
sub
int
sti
aam
pop
xorl
fists
dec
cmp
xchg
mov
push
mov
dec
dec
nop
insl
ror
mov
adcl
insb
cmp
and
outsb
dec
sti
loopne
and
rclb
ret
push
mov
xor
ret
mov
stos
and
add
orl
shrl
aam
inc
faddl
scas
inc
mov
push
push
ret
jle
and
mov
lods
into
cmp
mov
shr
ss
sti
inc
loope
jg
mov
std
adc
and
shrb
and
rolb
incb
or
es
mov
adc
mov
push
das
data16
mov
imul
cli
add
and
outsl
addr16
sbb
and
test
insb
out
jl
mov
pop
sub
sub
cmpb
test
ret
test
or
lock
icebp
push
and
adcl
loopne
jl
out
scas
mov
or
ljmp
sub
sbb
cmp
pop
cwtl
mov
cmp
ss
mov
imul
fadds
push
pop
clc
push
mov
mov
xorb
pinsrw
xchg
lcall
add
xor
insl
stos
mov
mov
xor
mov
ds
aas
scas
and
popf
add
ret
xor
adc
lods
nop
mov
mov
jo
in
jle
jmp
nop
inc
xor
inc
stos
mov
mov
jl
outsl
ja
adc
pop
fmuls
add
movsb
frstor
arpl
jmp
cmp
add
and
adc
pop
sub
dec
mov
mov
mov
cld
fbld
scas
fidivs
add
or
cmp
inc
in
xchg
out
je
jo
and
mov
fcompl
cmpsl
jne
cwtl
mov
xor
xchg
ret
mov
aaa
or
test
sbb
test
or
insb
jmp
test
fiadds
jbe
sub
mov
inc
xor
sbb
xor
je
jp
adc
out
pop
jo
pop
adc
dec
pop
out
mov
sahf
inc
sarb
popa
cmpsb
pop
popf
mov
xor
push
xlat
xor
loopne
lods
addr16
xlat
jb
inc
stos
incl
stc
adc
lcall
sbb
jbe
add
cld
shll
movsl
and
sbb
mov
lcall
adcl
in
std
je
jl
mov
outsl
clc
ficompl
mov
push
sbb
dec
and
rcrl
mov
mov
add
mov
mov
dec
jle
inc
fmuls
cmp
clc
inc
fnstsw
xorb
decl
add
xor
xchg
xchg
fcomps
adc
rcl
cmp
inc
xchg
and
fildll
push
push
inc
push
aaa
mov
adc
movsb
cld
dec
push
jg
jb
call
fidivl
xchg
cld
jae
dec
xchg
lret
add
cmc
jo
aas
fmuls
sbb
dec
add
inc
or
scas
ja
lods
dec
inc
inc
mov
mov
pop
and
sbb
xchg
cmp
mov
and
and
xor
xchg
pop
icebp
int
arpl
sub
mov
or
sbb
push
dec
ret
test
je
cmp
movsl
repz
call
incb
push
sbb
aam
dec
xchg
sar
cld
push
in
mov
nop
cmp
sbb
sti
and
pop
into
fs
mov
rcrb
ja
xchg
sub
lcall
inc
fwait
mov
xchg
mov
pop
sahf
mov
movb
inc
test
mov
sbb
add
stos
jg
xor
jg
inc
cld
cmc
mov
jl
notl
pop
mov
call
cmc
js
shl
lock
outsb
lea
mov
inc
lock
fucomip
in
adc
sub
andl
mov
jp
pmaxub
dec
mov
push
lcall
adc
out
mov
push
mov
aas
mov
jmp
fcomps
clc
add
adc
addb
repnz
fcoml
dec
xchg
jl
enter
push
dec
jl
jp
add
or
mov
aaa
sub
sti
jo
dec
mov
fildll
cmpsb
mov
jmp
loope
mov
pop
pop
xor
aam
add
enter
xchg
loope
movsb
loope
test
jge
test
loop
aaa
cmp
jo
cld
sub
inc
test
cmc
ljmp
ja
outsb
or
into
xchg
sbbb
loop
inc
es
outsb
inc
insb
popa
mov
add
sub
andb
cs
rorb
fidivrl
divl
add
pop
mov
lock
mov
pop
in
sbb
xor
add
sbb
cld
hlt
inc
pop
fisubl
adc
mov
xlat
fiadds
or
jb
pop
mov
pop
and
cwtl
shlb
sub
or
jle
fs
and
movsl
sub
inc
push
and
roll
xlat
inc
and
pop
add
cld
dec
rolb
mov
daa
xchg
cmpsb
or
rcll
in
add
mov
pop
aam
inc
xchg
pop
lcall
add
test
pushf
pop
adc
add
mov
outsl
cmp
cmc
call
pop
subb
mov
leave
inc
mov
sbb
dec
or
data16
xchg
jg
fdivl
jnp
js
cwtl
or
mov
cld
mov
mov
ja
or
add
sub
push
sbb
jl
adc
mov
adc
popf
pusha
mov
mov
add
loope
mov
dec
fnstsw
icebp
inc
and
pusha
insl
fiadds
mov
loopne
xor
lahf
inc
add
pop
add
insb
std
loopne
aas
fsubrs
ret
fiadds
mov
and
fwait
mov
pop
sub
jo
fldl
outsl
pop
mov
push
sbb
mov
pop
pop
sbb
mov
inc
lret
adc
push
leave
lods
mov
push
stos
arpl
aad
add
add
cmpsl
lahf
mov
fisttps
or
push
xchg
jp
mov
call
xchg
adc
mov
addl
dec
mov
je
rclb
pusha
pop
rcr
je
icebp
jae
sbb
inc
lcall
scas
add
outsl
inc
push
inc
pop
mov
mov
fdivs
push
repnz
aad
pop
outsl
mov
mov
fildl
jp
mov
push
dec
movsb
or
cwtl
les
add
incb
loop
les
int3
adcb
adc
add
movsb
daa
mov
mull
mov
cmp
je
int
pop
roll
xor
out
insl
divb
inc
rorb
xchg
cltd
xor
jmp
shll
pop
push
ror
setae
fidivs
lock
sbb
mov
bound
mov
stos
mov
jl
or
xchg
jbe
sbb
add
in
inc
mov
xor
scas
pop
cmp
in
cld
call
decl
insl
fsubs
lds
into
cmp
out
lods
icebp
mov
xor
mov
int3
orl
xchg
xchg
adc
sbb
sarl
add
cmp
or
xor
js
pop
push
fdivr
and
aas
mov
stos
push
jp
push
push
cmp
push
jl
mov
mov
daa
mov
pop
add
cwtl
ret
sbb
and
push
sbb
sub
pop
or
adcb
pop
mov
cmp
mov
cmpsl
aaa
movsb
add
cmpl
stos
les
and
push
add
cs
jb
jl
fidivs
and
push
loope
arpl
out
push
out
lods
mov
add
mov
mov
mov
adc
push
sbb
inc
jge
mov
incb
and
rcll
shr
cld
fwait
xchg
mov
adc
adc
incl
inc
shll
push
aas
mov
cmpsl
repz
mov
pop
xchg
int3
les
lcall
aam
test
lods
shl
aaa
fistpl
mov
cld
jl
fs
je
add
jl
xor
clc
arpl
out
shlb
leave
xorl
jge
adc
pusha
dec
adc
imul
sub
pop
outsb
das
sub
push
mov
cmp
xor
dec
add
rcr
cmp
add
mov
mov
pop
fsubs
push
mov
lock
orb
std
jmp
add
cmp
push
hlt
cmp
cmp
mov
cmpb
push
movsb
jne
and
and
dec
test
lods
mov
lods
pop
scas
ss
test
push
push
nop
inc
js
fwait
loopne
aas
mov
shll
cmpsb
lock
sbb
js
outsb
ds
adc
and
mov
pop
lods
adc
jecxz
push
xchg
aaa
ljmp
inc
vprotd
mov
cld
and
dec
add
repnz
mov
add
pushl
test
mov
inc
add
sub
inc
sub
xor
sbb
clc
xor
pop
orl
movsl
jb
movsb
lock
push
inc
push
jae
aad
adc
jo
sar
outsl
mov
fbld
add
lahf
cmp
dec
dec
push
out
lods
add
les
mov
out
push
int3
pop
test
jmp
test
xor
and
int3
out
mov
jle
into
add
mov
lcall
scas
std
lods
dec
jg
bound
out
mov
add
mov
mov
xor
out
daa
andl
jle
sub
call
xchg
adc
mov
mov
or
mov
adc
pop
sub
push
into
hlt
mov
fwait
adc
aas
shlb
jg
pop
sbb
cmp
mov
mov
scas
jle
scas
fwait
or
incb
sub
sahf
xchg
loope
mov
nop
sub
in
sti
call
shrl
cmpsb
scas
out
fildl
xchg
das
add
sub
out
mov
jno
shlb
push
adc
lahf
cmp
fsubrs
pop
push
fisubl
cs
adc
pop
je
enter
dec
js
cmp
mov
repnz
lods
adc
mov
mov
push
bound
and
sub
fsubl
nop
jg
mov
push
cli
data16
pop
cmpsb
mov
inc
or
std
lahf
mov
inc
mov
and
mov
push
cmp
push
decl
mov
or
fisubrs
ja
dec
int
pop
hlt
rcrb
mov
imulb
push
loope
or
test
sbb
iret
popf
adc
push
fwait
inc
std
push
push
or
pop
jge
in
adcb
jnp
test
dec
dec
mov
fistl
aam
cmp
mov
mov
cmp
adc
push
ds
push
ljmp
dec
push
mov
pop
jbe
and
call
dec
shrb
rol
aas
sub
test
dec
fcoml
push
push
pop
mov
xor
fsub
adc
out
mov
js
clc
stos
sahf
add
ds
pop
mov
adc
imul
add
hlt
sbb
and
mov
aam
xchg
jg
nop
push
xchg
clc
mov
xor
test
mulb
sub
push
dec
sbb
out
scas
xchg
lds
jg
push
jo
fwait
xchg
xor
inc
in
add
pop
pop
sti
scas
aad
mov
cli
mov
or
adc
jg
xlat
out
mov
rcrl
int
loopne
adc
je
jg
nop
inc
mov
push
or
xchg
jb
push
sarb
cmpsl
jo
nop
jne
push
xor
ss
dec
out
jg
sub
inc
mov
sbb
ret
js
loope
adc
les
loop
fwait
cmp
or
inc
jno
out
mov
add
push
enter
or
jge
fisubs
lahf
mov
adc
pop
cmp
stos
pop
xlat
scas
cli
dec
adc
xor
nop
rorb
adc
pusha
adc
flds
fisttps
or
pop
fs
push
push
es
add
push
loop
jg
icebp
cmpsl
inc
mov
and
lods
push
in
es
cmpb
aam
sub
push
or
jl
lock
push
mov
ret
add
cwtl
jg
jno
xchg
inc
cmc
lret
clc
lcall
and
lahf
aaa
sub
sub
inc
xor
pop
inc
xor
or
or
mov
test
lds
push
cmp
add
mov
shll
enter
out
and
test
fidivs
cli
incl
inc
loopne
xor
cltd
inc
cmp
dec
jo
js
icebp
movsb
inc
pushf
repnz
cmpsl
jge
imulb
jge
xchg
jp
ret
xor
or
cmp
xchg
dec
ret
jb
mov
sbb
pop
push
mov
dec
fadds
ret
push
and
scas
cwtl
inc
mov
push
mov
repnz
mov
loop
lock
push
push
jb
xor
movsb
das
adc
iret
jg
loopne
out
jo
inc
mov
mov
adc
xor
sbb
push
aas
pop
mov
dec
add
outsl
hlt
xchg
repnz
out
xor
mov
rclb
adc
sub
incb
movsl
cmp
cmpsb
les
xchg
mov
jbe
lock
fidivs
sbb
jmp
mov
ljmp
or
data16
arpl
test
mov
call
and
pop
cltd
lds
test
mov
cmpl
std
jno
out
and
mov
pop
jno
mov
call
jl
mov
and
mov
inc
test
mov
and
orb
insb
pushf
sbb
or
inc
stos
dec
sbb
sub
stos
fidivl
outsb
jp
cmpl
mov
ljmp
or
dec
mov
jbe
cmp
jbe
jb
mov
pop
pop
inc
loope
or
pop
adc
or
dec
fsubl
pushf
push
sbb
cmp
dec
or
add
mov
hlt
in
mov
cli
xchg
shr
clc
xlat
jp
nop
mov
and
lock
popa
fdivrs
mov
add
js
pop
push
out
sahf
adc
mov
mov
rcrl
cmpb
stos
in
adc
sbb
sahf
popa
push
sbb
mov
cmpb
mov
rcrl
push
cmp
jl
fmuls
mov
and
les
clc
movsl
push
idiv
mov
pop
adc
push
push
mov
pop
dec
cmp
mov
jmp
mov
and
ds
lcall
xorl
jnp
xchg
call
jp
or
push
rolb
aas
push
movsb
sbb
ret
sbb
sub
js
adc
cbtw
jb
add
enter
inc
jbe
pop
sbb
clc
pushl
stos
mov
stc
mov
mov
mov
hlt
fstpl
test
push
jbe
and
cmp
cmp
adc
nop
jne
push
lods
jmp
xchg
jns
dec
xlat
stos
mulb
push
adc
inc
dec
test
jecxz
test
xchg
sub
out
stos
mov
into
popa
pop
add
jmp
add
ret
cltd
dec
cmpsb
adc
push
and
sub
lcall
xchg
fistps
sbb
ds
add
std
in
pusha
pop
add
aaa
sbb
adc
fildll
add
js
aas
test
pop
les
fcompl
rclb
bound
xor
xchg
inc
lock
and
xor
pusha
popa
lcall
cmp
inc
not
hlt
popa
cmp
pop
mov
fcoms
or
push
fs
inc
movsl
fbld
jno
cmp
sub
addl
ljmp
push
int
bound
push
mov
rcll
sbb
mov
sbb
jmp
stos
in
inc
add
jno
out
dec
js
pop
inc
xor
xchg
dec
adc
cmp
scas
pop
sbb
adc
or
and
add
or
cmp
scas
push
pop
orb
rcr
data16
shll
and
xchg
ret
jg
pusha
adc
fwait
imul
inc
xor
cmp
outsb
xor
pop
jb
repz
in
mov
push
mov
pop
loop
mov
out
mov
cld
aaa
dec
pop
sub
fs
or
popa
das
fdivrs
aam
jle
and
jmp
in
pop
push
or
mov
cwtl
adc
push
filds
fsubl
xchg
inc
xor
push
mov
clc
mov
dec
dec
dec
mov
xchg
sbb
or
jno
mov
push
les
fstpt
into
dec
pop
add
test
lcall
inc
std
mov
incl
call
lret
ss
mov
sbb
or
sbb
ljmp
addl
cmpl
stos
int
mov
mov
sub
data16
aam
mov
mov
xchg
xchg
or
incl
pop
xchg
movsb
xchg
test
adc
dec
add
outsl
inc
pop
and
lcall
lock
loop
and
push
mov
mov
addb
nop
jecxz
mov
dec
mov
mov
pusha
fdivl
gs
and
push
dec
and
cmp
sbb
cmp
cmp
enter
gs
xlat
jnp
subb
nop
jge
lods
movsl
scas
or
loope
das
lahf
mov
inc
sbb
sub
lret
jns
cli
callw
aas
dec
lahf
mov
loope
out
adc
popl
or
insb
and
dec
dec
adc
and
adc
arpl
lods
orb
stos
dec
sbb
xor
or
inc
dec
call
jnp
sbbb
pop
pop
nop
out
out
pusha
je
pop
xor
mov
ja
loope
and
jecxz
or
pop
ffreep
aad
lods
pusha
pop
movsl
add
and
psrlq
rcl
pop
cwtl
mov
cmpsb
cli
nop
test
gs
push
mov
js
sbb
lcall
push
pop
cwtl
fiadds
push
loope
mov
push
cld
push
adc
in
xchg
fdivrs
sbb
inc
cs
mov
decl
dec
in
jmp
xor
ficomps
cmp
sub
cmp
ss
sbb
loope
sbb
in
dec
sbb
lock
decl
out
insl
cli
mov
repz
aam
mov
mull
inc
dec
clc
xchg
push
aad
push
sub
cwtl
pop
adc
xchg
mov
loop
in
push
movsl
lcall
lea
jbe
xlat
pop
insb
clc
and
in
jmp
push
jmp
out
push
xor
divb
mov
mov
or
inc
mov
push
lds
int3
mov
clc
add
lock
adc
aaa
xor
jae
xchg
fsubl
test
push
shrl
nop
fbld
push
cmpsb
fnstenv
mov
lods
pop
add
inc
xlat
imul
cs
sub
sbb
shll
out
jns
sbb
jb
fsubs
imul
sbb
sbb
jb
xor
add
pop
lods
add
add
lods
ljmp
push
inc
lock
inc
sbb
test
mov
cmpsb
pushf
outsl
notb
mov
push
cmp
xchg
int
inc
shll
jno
lods
gs
std
call
dec
mov
or
push
scas
xor
lret
or
push
push
add
icebp
rol
add
andb
ret
pop
cld
sbbb
dec
out
bound
xchg
pop
and
mov
aas
xchg
fwait
inc
or
jnp
fdivr
stos
aaa
and
push
adc
adc
add
lods
xchg
stos
clc
inc
ss
sub
mov
in
into
and
rorb
or
push
push
in
mov
jl
cmpsb
fldl
cmc
or
sbb
jge
sub
int3
add
es
int3
test
dec
inc
std
loope
adc
jnp
fidivrs
add
dec
push
and
xchg
shrl
mov
pusha
aam
sbb
rorb
jb
cmp
faddl
cs
dec
xor
ret
aad
iret
fisubl
xchg
insb
test
icebp
push
inc
call
mov
cmp
jg
pop
fdiv
testb
outsb
push
dec
sub
add
iret
fwait
test
jmp
push
add
xchg
arpl
stos
jbe
adc
dec
fwait
shrb
add
daa
scas
and
jmp
lods
sti
mov
jne
push
mov
jnp
imul
popa
sub
push
in
cmpsb
lock
mov
fs
add
jl
rclb
daa
hlt
and
imul
ret
rcl
fmull
push
inc
js
cmc
das
cmp
daa
and
cld
mov
call
into
and
lret
fs
add
push
or
or
frstor
jp
cmp
out
sti
xchg
adc
mov
jg
push
into
lods
aaa
adc
mov
sbb
inc
in
icebp
pop
add
aas
test
dec
in
mov
stos
jl
add
bound
and
outsl
pop
shl
hlt
sbb
pop
pop
adc
scas
icebp
push
rcrb
ret
lods
rcrb
dec
ljmp
stos
xorb
cmc
mov
test
movsl
xor
pusha
add
jo
xor
pop
incb
mov
shlb
adc
and
aam
rclb
clc
rolb
push
test
push
jg
push
out
lds
mov
pop
add
outsl
std
loop
mov
jg
decl
ja
div
iret
push
push
cld
and
rcrb
sti
sbb
push
orl
shrl
repz
lock
mov
sub
fisttps
inc
sbb
ljmp
addr16
mov
stc
cli
add
not
pop
mov
fbstp
inc
adc
test
cmp
sarl
lock
aam
mov
aad
fdivrs
into
fidivrs
pop
loop
push
mov
ljmp
movsb
subl
adc
mov
mov
enter
das
rcll
sub
pop
fidivs
push
test
ficoml
cld
pop
and
pop
fs
inc
mov
xchg
sub
push
push
popa
xchg
or
aas
pusha
mov
sbb
xchg
xor
lcall
dec
outsb
in
daa
sahf
insb
push
push
jle
sub
sahf
lcall
fsubs
adc
aaa
jg
roll
or
or
mov
jg
test
lods
or
popf
add
or
push
push
test
fwait
movl
and
adc
push
jl
not
and
push
idivl
jp
sbb
sbb
shl
repnz
mov
shrb
and
push
adc
mov
add
pop
mov
dec
add
clc
jecxz
sti
xchg
je
push
mov
cmpb
decb
aaa
jecxz
jg
aas
stos
shlb
mov
xchg
jl
fs
inc
push
mov
in
jno
loopne
sub
inc
movq
pusha
lods
pop
sub
clc
pop
xor
inc
sbb
sbb
stos
sub
andl
outsb
xchg
ljmp
ja
ja
incl
idivb
cwtl
shrb
int
addr16
je
xchg
pop
cmpb
ret
leave
inc
dec
loop
popf
pushf
add
push
or
out
mov
nop
cmp
pop
aam
or
jle
outsl
ret
add
int3
popf
cmp
jg
adc
imul
lods
push
mov
push
jg
nop
pop
sbb
mov
or
xor
jmp
loopne
inc
pop
out
push
xchg
inc
and
pop
stos
jne
jp
xchg
push
pop
jne
cmp
xlat
out
shlb
or
sbb
aam
pop
test
dec
cmp
sub
call
fisubs
aas
fnsave
adc
xor
push
adc
sti
mov
jno
inc
push
adc
in
les
xchg
mov
adc
fsubl
test
loop
fimuls
nop
jo
add
scas
pop
or
dec
adc
mov
into
ss
mov
mov
call
dec
int3
addr16
sub
popf
add
sbb
and
jle
fwait
xor
js
mov
push
repnz
jge
test
aam
inc
jp
jne
and
ret
xchg
ret
aas
mov
lcall
lea
mov
dec
mov
jno
push
push
andl
push
xor
pop
pop
stc
adc
mov
stos
loope
jno
sub
adc
jmp
adc
cli
fwait
push
jle
inc
adc
pop
movsl
in
jl
fistps
in
inc
sub
sbb
jecxz
adc
sbb
sub
inc
inc
lds
loope
pusha
clc
out
and
add
and
pushf
sub
mov
mov
decl
ret
jl
add
cmp
adc
bound
fucomi
mov
leave
pop
outsb
mov
sub
leave
push
cs
iret
les
add
sub
adc
js
test
cs
pusha
dec
xchg
push
adc
movb
ret
lahf
icebp
adc
sti
test
pop
xor
push
lret
sub
mov
std
push
and
cs
in
fcmovne
iret
leave
std
scas
pop
add
lds
inc
std
lcall
sbb
dec
stc
dec
jo
mov
jne
sub
xchg
cmp
stos
pop
xorl
ffreep
jbe
xchg
clc
aas
push
pop
sahf
or
dec
data16
repnz
cmp
lcall
gs
mov
rcr
clc
lret
mov
jmp
rcrb
scas
arpl
lahf
or
mov
xor
add
cwtl
adc
mov
incb
ret
and
jnp
sub
ret
loop
mov
rorb
aad
mov
mov
pop
mov
push
pop
pop
mov
mov
jno
pushf
adc
add
mov
inc
mov
in
gs
sub
cmp
in
mov
and
jecxz
pusha
pop
push
js
jle
adc
add
sbb
sub
push
fldl
push
inc
inc
in
cmpsb
add
nop
push
sbb
test
cltd
xor
xchg
mov
aad
icebp
and
xchg
int3
sbb
lods
aad
jmp
push
arpl
cmpsl
lds
jle
iret
adc
jecxz
inc
xor
subb
sbb
xchg
je
or
rcll
mov
mov
inc
cli
scas
call
add
lret
dec
cwtl
pop
shrl
inc
push
lods
cmp
aaa
adc
rcl
adc
cmpsb
push
xor
inc
ss
aad
cmp
push
pop
push
aas
add
cmp
adc
mov
out
mov
or
adc
adc
in
fnstsw
clc
sub
shll
ja
test
or
out
and
movsl
mov
pop
pop
mov
data16
ret
and
sbb
or
sub
pop
and
dec
scas
inc
push
xchg
or
jge
mov
call
ljmp
clc
pusha
out
mov
add
ret
shr
lcall
mov
cld
mov
jne
cld
mov
add
add
jl
cmp
push
jp
pop
ret
xor
pop
ja
cmp
iret
out
dec
mov
inc
add
or
pop
fcoms
out
jno
cli
xchg
mov
rorb
push
stc
mov
fidivrl
pop
jb
je
fsubrs
mov
add
jne
adc
cld
aaa
dec
jo
neg
test
sbb
and
jecxz
adc
mov
movb
andb
jl
sub
lock
mov
jno
jle
xor
out
xor
add
xlat
out
mov
pop
jge
stos
cmp
out
sbb
out
inc
pop
add
popa
cmp
movl
pop
fimull
cmp
clc
push
fcomip
fiadds
mov
lea
and
jne
les
mov
cmp
sub
xor
xor
dec
call
div
outsb
js
bound
push
xchg
sub
mov
outsb
sarb
stos
into
cmp
and
add
imul
test
or
lcall
std
add
fists
cs
adc
cmp
test
dec
jg
mov
jo
dec
or
push
je
je
les
sbb
adc
adc
scas
clc
dec
icebp
cmp
dec
push
mov
cmp
int3
dec
into
add
call
loopne
leave
fcoml
jle
sbb
mov
adc
mov
ficomps
icebp
sub
pop
inc
cli
jl
js
pusha
lds
incb
inc
dec
outsb
cmc
sahf
shrl
pop
aad
xchg
jb
push
lret
neg
ljmp
pop
shrb
icebp
icebp
fsubs
or
add
outsl
cmc
jg
subb
adc
ret
roll
out
xor
or
loopne
xchg
and
lahf
xchg
sub
dec
inc
outsb
inc
cmp
cmpsb
mov
arpl
scas
test
mov
lock
ljmp
pop
jecxz
sar
push
ficoml
cld
scas
js
scas
inc
aaa
cli
imul
pop
pusha
jbe
into
adc
or
jle
int
dec
mov
int
aas
xchg
cmc
mov
aas
mov
jo
lcall
adc
nop
jns
push
lods
push
jmp
std
aas
jmp
jl
fs
test
int
sbb
or
or
jge
mov
xor
les
xor
hlt
adc
or
jo
pop
movsb
pop
cmc
pushl
mov
xor
jo
jp
shrb
sub
incb
addl
or
push
mov
and
jl
insb
lods
dec
stos
push
dec
jmp
into
add
pop
and
stos
fiadds
leave
inc
jge
add
sbb
lods
ss
or
movsb
outsl
xor
negb
mov
je
les
hlt
lds
loopne
mov
js
mov
in
stos
cmp
xchg
in
push
jae
orb
loopne
les
sbb
fs
pop
inc
lret
sub
xchg
aam
mov
pop
mov
adc
dec
cmc
add
or
cwtl
xor
lea
mov
mov
adc
mov
and
test
sbb
xchg
mov
outsb
inc
adc
fistpll
push
mov
jg
xchg
mov
clc
inc
add
or
test
push
push
inc
movsb
xchg
pop
fwait
ds
cld
cmp
cmpsb
pushf
jae
ds
mov
push
test
sbbl
lcall
int
nop
mov
xchg
push
pop
jbe
mov
ljmp
rorl
xchg
inc
xchg
ljmp
inc
stos
cmp
add
pop
cmp
clc
outsl
mov
xchg
insb
cmp
or
push
xor
cmp
fs
pop
adc
movl
xor
outsl
push
push
inc
jle
push
idivl
stos
pop
add
jl
roll
sbb
fwait
dec
jp
out
xchg
xor
imul
mov
sbb
es
lret
mov
xor
mov
pushf
add
pusha
pop
pop
sbb
inc
out
xchg
sub
stos
loopne
stos
push
push
ljmp
int
mov
insb
xlat
pop
sbb
inc
xor
xchg
add
movsl
daa
mov
mov
mov
xor
into
push
mov
incb
nop
jno
out
pop
fimull
insb
sub
les
and
aaa
push
add
loope
rcl
lds
mov
sbb
je
inc
adc
inc
inc
sub
fnsave
add
mov
fcoml
insb
insl
test
mov
nop
jle
dec
mov
int3
je
adc
fisubs
adc
in
inc
subl
xchg
xlat
hlt
sbb
sahf
js
dec
jo
pop
pushf
dec
enter
fcoms
mov
ss
or
bswap
cs
nop
std
cmp
mov
push
in
inc
ret
orb
mov
xchg
or
cmp
dec
or
cli
jb
xchg
and
dec
cld
ljmp
imul
pusha
clc
mov
daa
ret
xchg
xlat
fdivr
or
das
test
js
inc
mov
orl
mov
push
jb
or
call
rolb
inc
lock
cmc
hlt
rcr
loopne
mov
or
xlat
fdiv
sbb
repz
icebp
jg
inc
sbb
lock
or
mov
gs
push
mov
adc
inc
fwait
test
sub
mov
mov
fldt
mov
add
push
mov
pop
test
out
adc
adc
mul
fmull
jbe
jl
hlt
jle
lea
pop
gs
mov
shrl
pop
mov
pop
cld
cli
jmp
incl
sbb
cmp
subb
sbb
leave
movsl
mov
inc
fidivl
adc
push
aad
std
popa
pusha
inc
lret
adc
or
xchg
inc
mov
lret
cli
lret
aam
lock
cmpsl
sti
and
add
jg
push
ficompl
sahf
in
iret
clc
fidivrs
outsl
or
and
mov
out
or
add
sub
xlat
outsl
push
mov
or
out
mov
and
in
xchg
xor
dec
mov
dec
add
mov
pop
call
sub
pop
icebp
roll
test
call
fdivs
sbb
mov
into
test
insl
adc
inc
inc
adc
subb
xor
add
mov
imul
dec
mov
xor
dec
jp
js
xor
lods
ljmp
dec
fiadds
and
fs
jp
sbb
cli
jne
pusha
mov
mov
cli
ja
pop
and
add
ret
inc
mov
loop
push
aaa
push
dec
shll
fiadds
mov
shrb
mov
pop
pusha
imull
jmp
inc
popf
mov
imul
mov
out
insb
and
clc
cmc
inc
hlt
push
pop
cmpsl
sbb
scas
mov
dec
scas
fildl
xchg
push
push
add
pop
push
dec
jmp
adc
lock
incl
adc
out
mov
jp
sbb
out
inc
ret
adc
jg
cld
decl
lret
outsl
daa
stos
adc
lock
es
mov
mov
jg
mov
jg
xchg
jbe
pushf
insb
lret
xor
inc
sub
addb
sub
cld
cs
dec
jne
in
aaa
cwtl
movsb
jl
call
sbb
cmpl
cld
push
mov
das
and
jmp
jg
adc
push
rcr
add
and
in
cmpsl
cli
mov
mov
jbe
add
sbb
es
out
shll
mov
add
std
rcrl
fnstenv
ret
cli
push
inc
gs
cmp
lods
cmp
mov
xor
xor
jns
stos
push
mov
xor
push
push
es
cmp
ja
mov
mov
lods
jle
sarb
mov
jnp
pop
loopne
decl
add
stos
int
adc
push
inc
popf
in
pop
gs
cmp
out
and
mov
es
and
cmp
add
mov
fsts
mov
aam
dec
repnz
inc
lahf
sbb
mov
ret
jmp
mov
repnz
test
mov
outsl
inc
xchg
sbb
mov
push
xchg
sbb
mov
add
pop
lcallw
pop
mov
repnz
js
inc
test
sub
test
push
aas
sbb
push
or
pop
inc
and
cwtl
jb
enter
pop
cmp
dec
das
sub
xchg
enter
cld
ret
loope
std
cli
sbb
jae
shl
iret
ret
ret
mov
sti
mov
add
lahf
js
mov
lock
cs
scas
mov
pop
adc
inc
pushl
jecxz
incb
push
jbe
rolb
jle
rcrl
ljmp
and
ss
push
push
outsb
loopne
mov
leave
je
aam
add
push
scas
push
or
cmp
pop
fildll
cs
jp
insl
gs
push
addl
mov
fsubs
pop
fldcw
pop
lods
inc
fwait
or
cmp
dec
addr16
xchg
mov
scas
pop
jg
inc
push
or
pushf
xchg
cltd
add
ja
xchg
les
mov
cli
filds
xor
hlt
push
ret
repz
mov
ss
push
jge
lcall
add
inc
dec
add
and
add
mov
sub
mov
repnz
bound
xchg
mov
jbe
inc
cmp
jecxz
lea
lds
jecxz
outsb
sbb
xor
xchg
mov
jbe
ret
in
sbb
mov
aam
mov
fistpl
jmp
xor
cmp
push
in
cmp
push
fs
movsb
xchg
out
add
aam
push
outsw
add
andb
pop
push
test
sbb
loopne
adc
xchg
add
jnp
enter
imul
adc
dec
push
adc
cs
sbb
mov
adc
and
test
out
add
inc
mov
and
loopne
mov
idiv
dec
pop
ret
fldt
push
inc
mov
mov
dec
mov
xlat
jne
loope
iret
push
or
sub
ljmp
movsb
and
mov
jle
dec
sbb
jg
xlat
sub
aam
fsub
lock
mov
pop
and
aas
cmp
insb
mov
pop
push
rorl
pop
rolb
into
xor
fidivrs
jne
inc
aas
cld
js
add
and
rorl
clc
lret
icebp
mov
mov
ret
fwait
and
adc
and
std
shl
stc
in
andl
mov
arpl
hlt
dec
andl
addb
lea
or
mov
sub
jecxz
mov
jnp
loopne
sbbb
sbb
adc
ret
mov
or
inc
pop
push
popf
or
sbb
je
pusha
sbb
rolb
push
adcl
cmp
xchg
jno
cmp
mov
std
rcrb
and
mov
push
cwtl
add
mov
aas
jge
gs
or
aam
sbb
rolb
mov
push
ficompl
cld
fwait
icebp
stos
movsb
cmc
les
fisubs
cltd
push
shrb
mov
repz
mov
cli
fwait
loopne
add
or
aad
inc
imul
xor
push
jg
or
add
xor
push
mov
pop
push
push
xor
xlat
aas
insl
je
gs
add
and
popa
mov
inc
sub
pop
aaa
lods
cmp
ss
dec
or
out
sub
push
mov
push
xor
sub
cwtl
insb
xchg
out
rolb
sbb
sahf
push
and
in
jg
push
std
fwait
int
add
icebp
enter
mov
in
or
lds
aas
adc
loopne
bound
pusha
dec
ret
mov
mov
in
inc
fcomi
push
movsb
adc
ja
mov
mov
mov
mulb
test
movsb
rolb
insb
std
adc
mov
test
jg
sbb
pop
lock
scas
test
fwait
roll
add
mov
xchg
add
sti
mov
icebp
lds
xchg
loop
jmp
pop
push
pop
mull
pop
inc
in
fstpl
pop
je
idivb
inc
int3
enter
dec
hlt
or
aaa
jl
inc
test
aam
stc
insb
testb
imul
add
jno
stc
imulb
jbe
int3
pop
mov
insl
in
mov
incb
add
jp
in
or
in
jo
insb
jp
loopne
and
mov
aad
inc
add
mov
in
andb
dec
aam
shr
pop
shlb
add
mov
mov
inc
cli
sti
xchg
mov
mov
adc
stos
aam
or
test
ljmp
lcall
jmp
int3
and
sbb
lods
jmp
jp
rclb
sbb
outsl
add
insb
fldt
inc
imull
movsb
and
sub
ficompl
sarl
ljmp
ret
adc
jbe
and
cmpsb
jp
and
mov
fadd
cmp
ret
pop
dec
in
xor
jl
jg
mov
add
and
test
fidivs
mov
mov
ret
or
icebp
jbe
mov
inc
loopne
hlt
fisttps
es
and
cli
int3
pop
ss
out
fidivrl
mov
leave
mov
mov
jbe
es
fists
sbb
jle
add
dec
mov
adc
mov
into
repz
incl
insb
mov
xchg
out
push
out
or
inc
ljmp
divb
sub
adc
add
out
pop
lds
std
adc
push
add
jb
cmp
mov
lcall
pop
xchg
pop
rclb
mov
pushl
ficoms
out
sbb
xchg
fadds
lock
daa
push
call
sbb
cmp
stos
mov
sbb
sub
jg
test
cli
or
outsl
das
cli
mov
fidivs
dec
mov
xorl
mov
shrb
sbb
shlb
dec
mov
sub
arpl
repz
mov
aam
xor
pop
inc
sub
adc
add
lret
and
dec
pop
fidivrl
lret
xor
add
inc
fisubrs
ja
cmp
fisubl
or
sbb
insb
mov
rclb
or
fisubrs
ret
push
test
aam
xchg
je
xchg
aaa
lock
pop
data16
rcrb
je
cwtl
aas
sbb
aaa
fbstp
lcall
mov
sub
lds
mov
inc
mov
nop
push
shr
or
or
mov
push
cltd
adc
fildl
xchg
mov
call
addl
xchg
add
aam
mov
jl
cli
repz
add
jg
mov
adc
int3
push
inc
xor
jmp
roll
xchg
cs
loop
movsb
ficoms
cld
testl
jb
mov
cmp
ljmp
outsb
cmpb
in
cmp
jle
test
insl
jle
and
in
sub
add
adc
jns
sbb
out
sbb
mov
test
cmp
mov
jg
mov
and
sar
mov
fisttpll
cmp
add
xor
popa
fsubrl
outsl
insl
aaa
cld
sub
fimull
fistpll
insb
nop
jecxz
lock
ja
and
push
sbb
aaa
call
lock
cmp
sub
mov
gs
pop
and
jp
dec
jge
mov
sub
stos
aas
cli
mov
roll
iret
scas
cmc
hlt
out
or
mov
add
or
leave
add
nop
les
adc
movsl
jg
mov
stos
popf
orb
cmp
stos
inc
pop
cwtl
sti
inc
sti
rorl
adc
js
lods
mov
mov
mov
sar
jg
test
imull
popf
mov
push
dec
xchg
inc
lret
fwait
add
sub
andl
adc
add
dec
cmp
sub
andl
lret
add
or
stc
jmp
add
in
mov
jg
adc
or
aad
xor
lea
sbb
js
test
add
xchg
les
mov
fdivrp
add
mov
adc
mov
jg
lahf
inc
mov
lcall
ja
outsl
insb
mov
dec
pop
mulb
popa
push
cmp
call
push
and
sbb
xor
cmpsb
test
mov
cmp
mov
adc
dec
sub
sbb
loopne
mov
add
adc
int
adc
adc
ret
ret
sbbb
or
and
test
push
add
and
pop
xor
sbbb
adc
das
and
jge
jl
cmp
cmp
jle
jl
roll
aaa
mov
sbb
pop
mov
loop
movd
add
xorl
loope
push
aam
imul
adc
push
pusha
inc
icebp
inc
jp
sbb
dec
mov
sub
xchg
xlat
andl
ret
mov
mov
mov
shrl
sbb
xor
mov
dec
dec
jp
outsb
cld
in
add
xchg
push
or
iret
lock
sub
dec
and
add
push
leave
int3
sub
shlb
pop
out
xchg
test
add
lds
push
cmp
and
lock
js
jge
pop
repz
ffree
sub
sti
sbb
pop
outsb
fldl
push
xor
loop
ss
pop
inc
jp
shrl
pop
cmp
fmulp
fwait
aad
cmp
pop
add
dec
cld
jg
out
inc
xchg
xchg
or
jnp
sarl
jge
dec
mov
pop
add
pop
cmpsb
xchg
lret
lret
xchg
out
incb
int3
xor
sub
add
std
sub
mov
push
dec
push
or
sbb
sti
dec
pop
fisubrl
lock
or
adc
incl
icebp
jmp
xor
add
insl
xor
jno
in
mov
adc
adc
jmp
mov
mov
xor
js
data16
sub
add
std
hlt
outsl
test
in
test
inc
sub
jns
lea
jns
aas
push
adc
sbb
cmp
cmp
pop
mov
sbb
lea
loopne
das
js
sti
mov
shrb
or
push
and
bound
mov
sbb
ret
outsb
inc
lods
dec
mov
pop
cld
js
and
and
cmc
mov
fsub
cwtl
inc
push
cmp
aam
iret
outsl
xchg
outsl
movsl
scas
fcmovnbe
cmp
out
xchg
rcll
xchg
subb
dec
int
or
jo
out
daa
and
js
pop
scas
pop
mov
mov
adc
mov
shl
dec
aad
xchg
aaa
loop
call
xchg
test
cmp
mov
and
popf
cli
mov
notb
mov
sbb
lock
test
or
mov
xor
ret
in
mov
popa
inc
mov
mov
loope
sub
inc
jp
mov
adc
cwtl
mov
xchg
jb
pop
add
sbbl
inc
loop
mov
sub
adc
lods
xchg
jns
inc
bound
jmp
adc
call
push
lods
add
jecxz
sbb
sub
jg
xor
aad
jecxz
maskmovq
testl
mov
pop
orb
push
movsl
aam
pop
push
mov
mov
popa
outsl
das
add
stos
fwait
pop
popf
sbb
mov
add
inc
dec
out
xchg
adc
mov
lods
cmp
sub
clc
ljmp
sub
cmp
sub
inc
daa
ss
je
sub
lods
add
sub
mov
push
int
jnp
lahf
iret
hlt
sbb
push
ss
sub
push
or
mov
jg
lods
nop
jno
call
cmpsl
adc
push
movsl
sbb
sbbl
cmpsl
adc
mov
pop
inc
or
insl
adc
mov
into
fists
sti
sbbb
dec
mov
push
pop
add
adc
add
pop
cmp
fistps
cltd
mov
sbb
fdivr
pop
mov
popa
dec
fisubrl
fisubs
jmp
adc
cwtl
out
push
jbe
insl
dec
loop
mov
pusha
adc
jle
bound
rorl
fdivs
pushl
jo
sahf
inc
sbb
dec
pusha
and
mov
sub
ljmp
push
jecxz
mov
into
push
mov
or
int3
xor
cld
fwait
jp
add
adc
fwait
fwait
aaa
fcoml
mov
and
rcrb
add
or
jl
add
push
mov
inc
jle
dec
mov
inc
mov
mov
mov
mov
push
icebp
in
stos
mov
js
mov
cs
repz
xor
dec
xorb
mov
dec
std
in
push
into
bound
cld
mov
lcall
ja
sub
xchg
repz
sbb
sbb
cmp
pop
lock
sbb
das
shr
sub
push
icebp
pop
cwtl
pushw
xchg
mov
loop
mov
in
sub
lret
shrb
and
out
or
clc
mov
mov
jo
notb
sarb
shlb
sbb
cmpl
or
jo
scas
and
or
ss
imul
test
xchg
lock
pop
dec
add
mov
int
clc
testl
add
movsl
jecxz
ret
lretw
stos
push
out
pop
jns
movsl
xor
or
jge
or
adc
dec
xchg
and
cld
jbe
jecxz
test
xchg
aam
rolb
xchg
cltd
fldcw
pop
outsb
sbb
mov
popa
ss
ret
push
mov
mov
pop
push
movb
cmp
outsl
fsubrs
ljmp
sar
js
jo
enter
xchg
inc
mov
cmp
mov
add
ljmp
dec
sbb
es
adc
xchg
pop
ljmp
nop
cli
xchg
push
add
insl
mov
inc
cmp
xchg
jmp
dec
fwait
rolb
cmp
or
cmpsb
xor
sub
and
fs
fistl
pop
inc
dec
dec
or
test
mov
pushl
je
in
mov
mov
jae
mov
ret
cli
push
fiadds
mov
push
jne
jl
xor
jecxz
pop
xor
je
mov
popa
inc
jle
out
jne
dec
push
lret
add
ret
cmp
fimuls
stc
push
adc
test
mov
push
cmp
aam
mov
shl
add
mov
inc
mov
faddl
xchg
xchg
stc
pop
jae
aas
sub
adc
les
adc
psubsw
add
test
shrb
cmc
add
mov
negb
test
fs
out
pop
or
dec
clc
cs
sti
and
fisubs
fsubs
in
leave
pushf
scas
loopne
mov
mov
imul
jbe
xor
mov
push
cmp
xor
or
inc
insb
push
adc
inc
arpl
dec
dec
cmp
inc
fmuls
xchg
bound
stos
push
mov
faddl
into
mov
lret
sti
jo
fdivs
xor
cld
mov
aam
lcall
enter
sbb
ja
outsb
push
out
or
jle
loop
mov
shlb
sbb
inc
lea
mov
mov
lahf
jno
mov
push
sub
cmp
mov
lock
mov
dec
jecxz
vpackuswb
adcb
cmp
cmpsb
test
jecxz
xchg
bound
ror
and
inc
rorl
test
mov
out
loope
mov
adc
mov
out
mov
sarb
xchg
ds
add
ficoms
icebp
insb
je
add
rcrl
inc
ret
cmp
bswap
jns
mov
rcl
add
or
and
ss
ret
mov
mov
cltd
add
jecxz
scas
clc
out
fs
pop
jecxz
rcll
repnz
sub
in
push
out
or
add
dec
or
pop
cmp
out
push
xor
pushl
rclb
call
int
cld
push
jl
lcall
leave
andb
imul
testb
mov
pushw
sbb
movsb
mov
fwait
pushf
xchg
js
sbb
jle
or
push
mov
add
ds
icebp
cmpl
xor
hlt
test
sub
adc
mov
fiaddl
mov
push
inc
test
jecxz
enter
sbb
add
cwtl
mov
outsb
leave
pop
pop
cli
repz
mov
cmp
jle
push
sti
dec
mov
mov
aas
arpl
leave
ret
push
orl
mov
je
or
gs
shlb
and
xor
sti
pop
xchg
test
add
cld
out
insb
adc
push
and
jecxz
imul
movsl
mov
in
stos
mov
jns
negl
movups
push
cwtl
push
dec
lea
adc
xlat
shr
and
sbb
loopne
loopne
or
sub
lea
cmp
pop
push
mov
cmp
xor
gs
or
xchg
sub
stos
ficomps
ds
ret
fdivr
add
ss
push
ja
add
mov
inc
xor
cmp
xchg
dec
inc
sbb
call
fistpll
inc
int3
sbb
sbb
push
sub
xchg
mov
fsubrp
inc
loope
sar
inc
pop
cmpsl
or
xchg
mov
pop
jp
addb
push
and
and
test
aas
mov
jge
inc
popf
out
xor
jp
push
mov
out
push
es
sub
mov
imul
push
dec
push
jbe
jge
inc
and
mov
xor
loopne
hlt
pop
sub
mov
sahf
push
inc
sarl
or
push
clc
fdivs
rcrb
and
push
xchg
mov
roll
incl
push
pop
popa
ret
mov
pop
rorl
outsb
and
xchg
jbe
add
neg
les
mov
gs
fwait
inc
mov
ja
jbe
and
xchg
fmull
and
add
add
addl
aad
push
jp
nop
adc
inc
cmpsb
fdivs
dec
and
jo,pt
mov
and
loopne
dec
mov
iret
pop
je
stos
aad
cmc
or
mov
push
push
je
shrb
loopne
mov
inc
out
xchg
mov
das
nop
adc
lods
jae
pusha
xor
adc
jmp
fwait
ds
das
adc
cmp
sub
xchg
jge
push
gs
add
cmp
adc
fbld
insb
dec
xchg
push
stos
dec
cmc
cmp
sar
sub
loopne
push
and
sbb
mov
push
pop
lret
and
sbbb
mov
xor
and
inc
mov
and
cmovo
mov
stos
or
sub
push
jp
push
pop
adcb
daa
sub
mov
mov
insl
test
cld
ds
call
mov
movsl
insl
dec
mov
mov
gs
mov
dec
loope
gs
movsb
insl
ret
cmp
jbe
push
pusha
subl
push
adc
incb
loop
int
cmpsb
aad
add
dec
lods
mov
dec
leave
lock
ret
push
push
push
inc
lcall
push
pop
pop
add
xor
lods
sub
jmp
pop
pop
test
aam
mov
out
push
push
cld
or
and
push
cs
sbb
or
movl
sbb
negb
in
push
mov
push
or
jge
push
pop
mov
push
ljmp
fisubrl
adc
inc
jnp
mov
insb
loop
and
adc
or
dec
adc
cmp
jecxz
dec
or
jbe
addl
gs
gs
insb
out
lds
jne
cld
sub
mov
mov
push
rorb
incb
sub
inc
mov
dec
jg
sub
sbb
jne
push
add
scas
call
jbe
pop
inc
scas
sub
addl
lock
xchg
pop
mov
inc
pop
xor
pusha
enter
push
push
and
loopne
shrb
jo
push
cwtl
pop
adc
lods
xor
sub
fcoml
pop
push
sbb
sbb
fsubrl
cwtl
sub
adc
xor
push
push
ss
pop
xchg
call
and
sub
xchg
bound
inc
test
cmpb
add
xor
or
adc
xor
sbb
repz
mov
jl
cs
int
fidivrs
sbb
clc
lds
cmpl
subl
imul
cmpsl
mov
or
mov
sub
das
jecxz
scas
xchg
mov
icebp
pop
fcmovu
sbb
gs
pop
frstor
mov
jb
js
dec
ja
fadds
jns
jae
mov
idivl
push
lea
sub
mov
bound
jle
incl
pop
sbb
dec
loop
aas
ret
fs
xor
mov
sub
mov
mov
dec
fldpi
out
push
push
adc
ljmp
imull
add
push
or
cld
sarl
adc
mov
sbb
jge
jno
cmp
aas
pop
lock
int3
mov
jo
mov
notb
fistps
and
mov
cmp
roll
clc
inc
lock
xor
hlt
mov
popf
inc
jmp
sarb
aad
scas
adc
ja
mov
push
jb
cmp
mov
adc
clc
cwtl
sbbb
push
mov
push
fdivp
push
aad
xlat
cmc
nop
ret
jmp
jo
cmp
les
cltd
xchg
outsl
sub
push
mov
orb
pop
mov
add
xchg
sarl
inc
sbb
mov
cs
pop
push
push
or
push
ds
jmp
add
mov
mov
lret
test
cld
shlb
push
fcompl
repnz
popa
insb
cmp
pop
xor
pusha
inc
je
add
adc
xchg
push
dec
test
jb
sbb
sub
call
test
sub
mov
pop
pop
pop
cld
pop
fistps
std
jmp
inc
pusha
arpl
cli
add
inc
je
movsb
push
and
push
jg
mov
xor
add
sub
add
pop
adc
xchg
lods
add
clc
xor
fstpl
nop
mov
mov
mov
mov
rorb
out
push
inc
std
lock
jbe
sahf
fcmovne
adc
add
or
dec
popa
cmp
cmp
and
aas
sbb
arpl
push
inc
test
test
add
ret
scas
push
aad
test
inc
jg
cmp
in
icebp
and
dec
and
xor
pop
jle
inc
scas
sahf
adc
add
ja
sbb
repz
es
int3
stc
add
and
jo
pop
out
mov
or
sarl
incl
call
shr
cmc
insb
rol
scas
hlt
stos
out
orb
outsl
fadds
or
mov
cmc
pusha
loopne
pop
dec
ja
push
fsubp
add
ret
or
push
jp
cmc
sbb
outsb
test
hlt
xchg
fsubrp
cmp
xlat
sbb
scas
xor
add
scas
push
rclb
inc
push
out
iret
add
das
xchg
arpl
loop
inc
pop
add
xor
out
sar
shlb
incl
push
rclb
adc
or
loopne
push
js
fcompl
movsb
pop
sti
decl
push
push
jne
insl
push
pop
jne
scas
test
scas
repz
rcrl
pop
loopne
js
lcall
call
cwtl
push
pop
lock
std
and
movl
subb
ljmp
sbbb
jl
sarb
lock
repnz
jecxz
or
and
add
push
sub
inc
mov
push
divb
mov
sti
jg
sub
cmp
icebp
mov
loop
lods
adc
dec
jg
jle
fistl
cmp
xchg
jnp
loopne
cmp
subl
adcb
or
xchg
push
adc
mov
xchg
out
cmp
push
pop
jg
xchg
adc
std
add
mov
adc
mov
jle
insl
pop
in
mov
xchg
inc
mov
repz
test
push
pop
ljmp
sbb
pop
stc
mov
pop
icebp
in
inc
movsl
adc
mov
fs
test
sahf
mov
or
call
xchg
loopne
and
arpl
loopne
out
stc
mov
rolb
aam
loop
js
out
jge
js
loop
stos
lahf
add
filds
inc
addr16
sti
adc
pushf
mov
insb
rorb
push
mov
clc
popa
mov
xchg
lcall
jmp
bound
fdiv
test
insb
lcall
sub
xchg
jnp
out
mov
xor
sti
inc
rorb
jg
sbb
dec
lds
mov
cmp
in
sub
pop
subb
xchg
neg
mov
sarl
pusha
repnz
xor
int
imul
add
add
nop
aam
mov
hlt
lods
sbb
jb
loop
fbld
push
and
adc
outsb
inc
mov
add
test
or
add
mull
jns
lcall
cmp
pushf
addr16
xchg
and
sub
pop
es
fstl
lock
jb
adc
xchg
push
jg
push
jge
push
popa
push
addb
fidivrl
mov
fdivrs
cmp
sub
add
shlb
push
popa
adc
fbld
imul
or
mov
mov
not
xchg
test
mov
or
call
cs
repnz
pushf
adc
popa
clc
mov
inc
sbbb
mov
jo
stos
add
enter
jo
lods
mov
ret
xor
jmp
push
clc
push
sbb
mov
add
push
dec
sbb
and
xchg
mov
cwtl
lock
add
popa
cld
pop
hlt
push
fisubl
mov
add
add
mov
pop
push
mov
adc
call
mov
xor
cmp
je
sbb
out
push
out
mov
xchg
iret
rolb
mov
dec
int3
std
dec
cld
inc
sbb
push
xchg
jp
push
or
dec
mov
mov
sub
dec
fdivrp
jno
mov
push
jnp
or
fld1
cli
repz
cmp
frstor
inc
lcall
hlt
pop
adc
and
fmuls
mov
aaa
jb
stc
pushf
ds
and
mov
mov
sub
test
scas
push
dec
inc
mov
and
cwtl
pop
add
push
cmp
int3
inc
aad
add
mov
decl
adc
int3
rclb
dec
outsb
adc
xlat
mov
push
daa
inc
incb
movsl
ret
fucom
cmp
sbb
test
loopne
mov
unpcklps
push
dec
outsb
es
pop
rcl
or
ss
sub
js
push
or
sub
cmc
mov
jns
xchg
push
add
outsb
cld
xchg
pop
mov
adc
cmpsl
cmp
fiadds
rol
mov
adc
jae
out
aas
push
cmp
dec
nop
jae
or
repnz
std
inc
idivb
es
arpl
mov
int
movsb
adc
jg
out
inc
bound
pop
cmp
pushf
add
lahf
or
dec
pop
push
lahf
pushf
adc
or
inc
push
incl
fwait
call
jg
mov
adc
pusha
flds
std
decl
ret
lock
mov
aad
sbb
cmp
lock
xchg
rcr
mov
filds
subb
call
mov
rolb
push
stc
push
dec
sahf
cmpsl
inc
out
cli
mov
jge
sti
lret
or
and
test
and
in
sahf
ret
pop
shll
insl
jbe
or
jno
leave
scas
mov
mov
mov
arpl
jge
jle
mov
xchg
jmp
pop
arpl
inc
pop
sbb
mov
loopne
test
cmpb
add
add
bound
cmp
dec
fs
je
call
inc
mov
add
int
punpckldq
mov
in
xchg
push
scas
enter
adc
mov
or
pusha
pushl
add
pop
adc
xor
fdivrl
aad
pop
gs
mov
lock
sub
mov
push
adc
movsb
test
mov
inc
call
rcl
dec
loop
insb
dec
int3
subb
popa
mov
and
dec
jg
lock
rorl
stos
lcall
add
push
jg
sub
inc
xor
xchg
je
ret
adc
je
mov
mov
mov
adcb
fisttps
out
dec
dec
stos
and
sub
scas
fwait
push
push
out
in
add
fistpl
jl
std
sbb
push
sbb
cmp
sbb
je
jmp
pop
pop
lock
lds
out
mov
addb
add
add
dec
xor
sbb
je
inc
js
or
test
push
test
inc
shlb
jnp
add
fsubs
dec
and
int3
mov
dec
faddp
ja
xor
sbb
xchg
js
pop
add
jns
fildl
cmp
cmp
dec
fsubrl
jge
sub
lcall
insb
mov
xchg
push
pop
hlt
es
or
stos
push
clc
mov
into
imul
fsubs
rorl
dec
dec
fsubrp
pop
rcrb
rcr
jle
ficomps
mov
fildll
test
push
mov
cld
sub
nop
bound
jle
push
cld
leave
js
out
leave
lods
add
sahf
out
add
mov
and
dec
push
out
adc
enter
ljmp
and
or
cmc
popf
loopne
loope
xchg
mov
push
inc
enter
stos
ljmp
jae
in
add
cld
shll
ds
inc
jb
in
ljmp
xchg
push
fs
aad
push
adc
stos
rorb
daa
jl
gs
mov
je
sbb
ds
pop
sub
mov
mov
and
test
arpl
movsb
xor
fiaddl
div
jbe
mov
add
cmp
add
adc
cltd
or
inc
data16
cli
sbb
roll
add
fcomip
pop
mov
mov
adc
and
add
cmp
add
mov
popa
push
add
lcall
leave
jl
fadds
sub
add
movsb
inc
push
lea
cwtl
test
inc
pop
int
out
orl
xchg
arpl
adc
loop
xchg
xchg
pop
lods
insb
cld
subb
mov
je
movsb
rclb
out
decl
cld
add
js
xor
sub
xchg
push
lods
arpl
push
call
push
adc
icebp
xchg
movsb
pop
or
and
popf
fcmovb
cmpsb
pop
cmpsb
mov
fsts
je
push
sbb
add
fadds
and
rorb
and
jg
inc
scas
jge
lds
mov
jl
jecxz
inc
and
adc
mov
hlt
dec
stos
rorb
ljmp
push
sbb
sbb
inc
cmp
dec
or
mov
push
mov
jbe
and
popf
pop
scas
jb
jg
jg
jge
iret
add
and
test
sub
lock
add
enter
add
mov
jg
cmp
pop
sub
popa
movsb
push
mov
sbb
mov
mull
xchg
testb
in
mov
ret
shll
negb
sbb
pop
dec
pusha
cmp
push
movb
sub
clts
das
sahf
or
nop
sbb
aad
or
or
decb
loopne
mov
and
cmpsl
adc
pop
mov
pop
pusha
mov
jmp
push
xchg
rcr
fisubs
das
xchg
test
push
ljmp
loope
jo
outsb
cmpsl
add
pop
xlat
repnz
orl
pop
inc
sub
xor
loope
aam
jbe
outsb
decl
call
insb
adcb
movb
jge
sbbl
adc
lods
sbb
pop
inc
daa
adc
sbb
sub
inc
out
adc
xchg
xlat
pop
xor
jl
pop
into
shlb
call
mov
dec
fstpl
mov
test
pop
nop
pop
leave
xorl
adc
shr
jno
les
imul
mov
add
push
adc
adc
icebp
cli
fsubrs
push
cld
out
mov
dec
xchg
and
js
stos
pop
xor
push
mov
imul
roll
dec
or
jo
jmp
or
sbbb
push
lds
ja
cmpsb
fdivs
mov
push
pop
lock
cmpsl
data16
ljmp
leave
sbb
lret
pop
testb
jmp
sbb
es
or
rorb
mov
fiadds
mov
aas
sar
jle
aas
ss
ds
inc
adc
add
outsl
jmp
push
mov
into
cld
std
mov
cmp
filds
arpl
decl
sub
inc
xor
out
inc
sbb
incl
fsts
lret
mov
aam
pop
mov
fdivl
insb
cld
rcrb
and
add
sub
mov
cmp
outsb
pop
mov
in
push
lods
aas
fsubrl
pop
aam
mov
lock
lret
popf
jae
subb
mov
nop
pop
pop
scas
mov
pop
in
push
pop
outsl
sub
push
clc
fistpll
jno
out
jmp
std
or
add
cld
lcall
int3
lret
jns
cli
add
add
xor
stc
and
ljmp
or
aam
lods
jb
mov
push
mov
adc
lock
imulb
cmovb
mov
adc
aam
mov
or
jp
pushf
in
fildl
outsl
clc
enterw
lea
inc
xchg
inc
sub
cltd
lret
arpl
out
fldt
pop
mov
or
push
push
push
lret
lahf
je
or
shr
icebp
xchg
cmp
cli
das
and
xlat
push
ds
test
mov
mov
popa
faddl
cld
aaa
push
xchg
cmc
rclb
inc
sbb
fbstp
push
mov
mov
loopne
add
mov
int3
jne
push
mov
hlt
scas
clc
fdivrs
push
mov
inc
mov
jge
jbe
add
sti
xchg
repz
pop
rclb
ret
and
mov
add
dec
sbb
xchg
mov
repz
stos
add
jp
push
lcall
loopne
std
imul
orb
adc
ljmp
testl
jb
shl
ja
inc
sub
fistpll
call
movsl
push
arpl
pop
pop
sub
jmp
call
jne
or
jmp
call
inc
testb
xchg
clc
scas
lods
pop
and
sub
jmp
sbb
cmc
pop
mov
adc
xchg
xchg
mov
fimuls
nop
push
inc
fdivrs
pop
mov
imul
inc
jmp
addl
fisttps
sbb
inc
push
popa
fcmovu
mov
dec
mov
dec
stos
cmp
cmc
jl
mov
clc
push
xchg
or
jb
loop
jbe
dec
inc
jmp
fisubrl
sbb
stos
clc
push
sbb
mov
arpl
repnz
in
shlb
jb
cs
push
jo
lea
insl
mov
push
xor
xor
and
decl
and
xlat
adc
push
mov
out
sbb
mov
rcrl
jo
movsb
mov
mov
and
add
in
dec
jne
js
inc
pop
push
add
push
leave
nop
or
inc
dec
ret
mov
inc
adc
xor
mov
mov
shl
add
or
push
push
xor
mov
shlb
ljmp
dec
pop
pop
mov
pushf
pop
pop
xchg
in
pusha
in
cmovno
pmuludq
fdivrp
push
daa
aas
roll
pusha
xchg
mov
lcall
push
repz
cld
jns
mov
dec
mov
cmp
mov
stos
jbe
dec
negl
cli
outsb
dec
push
faddl
stos
clc
shrb
mov
scas
ja
test
fdivrl
cmpl
scas
mov
ss
sbb
push
push
jmp
add
inc
cwtl
cmp
mov
inc
jge
mov
jge
push
jnp
xor
cmp
xor
pop
jbe
push
push
push
int3
sbb
xlat
mov
pop
push
xchg
ret
je
mov
cmpsl
mov
pop
sub
push
and
dec
push
cwtl
pop
data16
call
jg
jp
xor
jmp
daa
stos
cli
push
mov
pop
mov
call
and
mov
in
adc
mov
dec
lock
push
xchg
xor
sahf
lds
inc
mov
jp
pop
cmpsb
push
decb
mov
adc
in
xchg
pop
mov
mov
jae
mov
jp
subb
lret
or
sbb
sbb
dec
mov
das
test
cmp
lcall
inc
adc
mov
push
sbb
enter
repnz
pop
insb
sub
sub
nop
mov
jl
xor
push
cmpsb
aam
adc
rolb
and
xor
ja
ficoml
lds
repz
lock
mov
data16
cmp
icebp
sub
mov
daa
inc
gs
push
add
mov
and
lods
mov
clc
sarl
pop
xor
subb
pop
scas
or
cmp
and
rcr
sub
ficoms
dec
adc
push
pop
movsl
imulb
push
or
call
fwait
jle
aad
in
ret
int
mov
push
daa
mulb
lcall
insb
std
outsl
sub
clc
call
push
lcall
cmp
mov
fdivl
fistpll
push
sar
inc
les
pop
in
cmpsb
cs
iret
lods
out
lcall
daa
mov
les
push
cmp
test
ds
pop
push
into
stos
cwtl
test
dec
add
cltd
out
loope
test
cmpsb
int
jmp
dec
pop
xchg
lock
fs
and
out
ljmp
ss
xchg
cmpsl
xchg
sub
adc
fadds
dec
pop
jmp
mov
xchg
stc
js
sub
lret
outsb
cmp
js
rolb
push
fwait
xor
mov
and
clc
aam
decl
test
test
jle
gs
mov
aam
mov
mov
in
add
fs
or
xchg
orb
mov
pop
imul
jl
add
adc
loop
lcall
test
or
stos
into
mov
push
pop
xor
mov
das
push
jl
js
inc
mov
cmp
or
add
test
rolb
loopne
pop
cmc
cmp
pusha
xor
test
mov
sbb
dec
inc
ds
das
cs
test
jl
mov
sbb
xchg
rcrl
je
inc
or
and
jle
jmp
push
inc
jmp
das
add
call
scas
aam
jnp
adc
sub
push
xor
adc
dec
cld
or
adc
adc
jg
shrb
push
stos
mov
and
adcl
push
aaa
xor
mov
ret
jno
outsl
push
jg
or
orps
mov
std
mov
inc
cmpl
dec
cmp
js
ret
jmp
xchg
sub
push
clc
jno
or
aaa
sahf
inc
idivb
push
add
cmpsl
adc
inc
ja
jge
out
daa
inc
and
insl
daa
push
sbb
dec
jo
push
push
xor
aam
push
outsl
pushl
sbb
adc
lds
jle
and
push
push
xor
js
bound
jnp
outsb
xchg
or
sbb
sub
insl
je
mov
fcomp
popf
xchg
push
cs
mov
hlt
push
decl
cs
incb
std
dec
mov
inc
or
inc
out
mov
aaa
addr16
dec
and
fwait
xchg
stos
dec
dec
icebp
or
fimuls
mov
test
sub
je
fwait
mov
je
push
dec
aam
push
mov
mov
jns
cmc
stc
dec
bound
lret
xchg
or
mov
cmc
or
adc
or
adc
aad
scas
clc
mov
imul
hlt
ret
shlb
sahf
in
sub
hlt
nop
orl
push
xor
sub
push
fbstp
data16
mov
icebp
mov
cld
inc
xchg
inc
insb
cld
pop
push
outsb
jae
and
xchg
test
das
jle
sbb
addr16
mov
lret
mov
sahf
rcll
xor
lahf
sbb
adc
out
cmp
out
addl
cli
or
fmul
inc
aad
mov
pop
add
jmp
imul
sti
sub
stos
and
or
out
mov
cmpl
add
sbb
leave
dec
enter
shl
dec
jb
hlt
fwait
jp
into
pop
adc
cmpsl
scas
clc
or
movsl
mov
inc
iret
push
std
dec
aas
outsl
xlat
das
and
cwtl
shlb
mov
data16
roll
imul
adc
loopne
mov
push
add
mov
jne
mov
decl
andb
div
icebp
mov
inc
jmp
mov
cmp
mov
mov
inc
add
popf
movsl
test
sub
ss
or
xor
push
lock
push
loop
pusha
push
push
jbe
push
inc
push
fidivl
cs
push
incl
js
mov
out
mov
aas
inc
shlb
fbld
xchg
jne
sub
adc
adc
test
test
ffreep
and
sub
inc
xchg
dec
add
xchg
sbb
xrelease
mov
inc
imul
in
sub
and
mov
jge
lods
cmp
shlb
mov
lahf
add
stc
push
push
leave
or
cwtl
cwtl
dec
push
push
roll
xor
sti
inc
inc
and
xor
pop
in
std
jnp
jnp
jnp
jne
cmp
gs
mov
sbb
lea
push
push
adc
xchg
test
sub
movsb
adc
cli
movsb
call
sahf
jae
test
push
pop
mov
inc
lods
cmpsb
sub
rorb
add
push
ret
mov
jge
dec
out
push
lds
and
test
out
das
dec
ret
add
jo
push
xor
int3
or
pop
xor
push
mov
xchg
mov
push
push
cmp
adc
popf
loop
lods
or
xor
dec
inc
inc
and
mov
icebp
add
jae
test
mov
cli
add
cmp
dec
lcall
cs
aas
ds
mov
cmp
pusha
jge
jb
test
pop
mov
dec
movsl
dec
mov
mov
xor
inc
push
es
xor
push
cli
and
jecxz
sub
icebp
push
sub
scas
sbb
lock
cld
pop
jp,pn
ss
std
xchg
fisubrl
dec
pop
paddsw
push
loope
js
js
dec
scas
shlb
ret
xchg
aaa
stos
rcrl
imul
mov
push
arpl
dec
lods
adc
inc
push
dec
adc
insl
inc
jg
ss
aad
scas
adc
pop
dec
fildll
lea
adc
xchg
or
add
sahf
out
mov
mov
xor
mov
pop
sub
push
subb
out
or
dec
mov
out
xor
lret
popa
push
hlt
dec
cmpsb
mov
xor
xchg
lock
sub
xor
mov
shrl
jp
jmp
js
mov
pop
gs
inc
pop
into
pop
int
nop
mov
jb
inc
inc
lock
call
push
enter
cmp
rol
adc
nop
cwtl
fdivs
lock
push
mov
sbb
test
test
jbe
push
js
call
mov
outsl
mov
push
inc
add
push
pushf
pushf
movsb
loope
inc
cwtl
testb
add
fdivrs
ficoml
xchg
mov
stc
add
push
clc
sbb
pop
xchg
js
rclb
pop
inc
test
ds
dec
inc
loop
or
cli
add
ret
lea
lcall
sbb
add
sub
cmpsb
shlb
ds
lods
sub
jge,pn
pop
shll
mov
xchg
jno
dec
push
mov
inc
inc
data16
adc
lret
and
inc
sbb
gs
xchg
dec
testl
cmp
push
xchg
push
adc
jg
pop
xor
hlt
dec
dec
push
sub
cli
mov
aaa
pusha
aad
inc
adc
jl
adc
inc
cltd
bound
das
add
addl
pusha
fdivr
mov
bound
sub
sub
push
bound
pusha
push
sbb
and
pusha
test
sub
or
mov
das
push
push
adcb
arpl
sub
mov
adc
dec
repz
outsl
inc
push
out
mov
out
shlb
xchg
mov
int3
aaa
add
ret
sbb
and
mov
push
insb
es
jl
pop
enter
mov
dec
xor
jno
mov
imul
adc
sarb
and
add
mov
push
cmp
mov
xchg
sbb
cld
pop
push
out
and
into
mov
add
pop
cwtl
ret
pop
cwtl
scas
clc
or
mov
leave
mov
stos
push
add
repnz
xchg
or
cli
rclb
scas
ds
and
int
loopne
or
adc
pop
and
repnz
inc
pop
sbbb
cltd
test
mov
jg
ret
adc
or
mov
stos
pop
aad
movsb
idivb
pusha
dec
lods
mov
hlt
xchg
mov
js
nop
jmp
call
mov
sub
shlb
lds
pop
in
xor
cwtl
ficoms
cmp
mov
loope
movsl
mov
add
adc
sub
jg
clc
decb
loop
push
ss
cmp
daa
dec
fmuls
fwait
or
mov
js
addr16
pushl
dec
icebp
lret
shl
push
mov
pusha
xchg
adc
xlat
repz
jg
mov
cli
shrb
loopne
and
fdivs
clc
pop
sbb
sub
out
call
enter
inc
adc
mov
fcoms
shll
aas
cs
aas
ds
jae
jl
mov
inc
daa
clc
aam
inc
sti
and
ljmp
mov
outsb
dec
mov
enter
jo
test
mov
jae
test
xor
jg
shl
mov
sbb
cwtl
fldenv
sub
inc
xrelease
or
and
dec
push
cmpsl
rcl
xlat
nop
cmpb
adc
jb
out
push
jle
pop
idiv
fcmovnbe
xchg
fstpt
mov
jne
push
adc
mov
and
lds
mov
lahf
test
outsb
jg
inc
sbb
int
push
icebp
and
enter
sbb
sbb
add
mov
scas
adc
xor
fcmovu
mov
outsl
dec
scas
or
and
pop
push
jnp
lea
push
mov
inc
imul
dec
jo
adc
loop
sub
mov
or
scas
bswap
add
push
cmpsb
mov
scas
sarb
add
mov
fs
xchg
ja
aas
imul
shl
subb
filds
leave
jle
and
adc
popa
stos
movsl
mov
test
decl
loop
rcll
jg
sarb
mov
dec
les
stos
movsb
adc
dec
test
push
shl
cli
inc
dec
add
add
xor
push
jbe
dec
cmpsb
inc
rorl
or
or
pop
call
fdivrp
mov
out
nop
push
adc
ljmp
mov
rcrl
sbb
add
fwait
mov
test
ss
mov
loopne
push
dec
push
dec
mov
idivb
fbld
adc
popa
or
ja
stos
pushf
inc
in
mov
pushl
mov
out
aam
cmp
outsb
cli
mov
and
sbb
add
fcmovbe
fcmovnu
aas
lret
orb
in
jl
roll
stos
test
mov
jae
cmp
movsl
pop
jl
das
mov
adc
xchg
pop
std
daa
xor
mov
sub
iret
dec
mov
xchg
popf
leave
fbstp
adc
sub
enter
jne
push
cld
cli
sbb
cmp
insb
mov
out
xchg
pop
icebp
call
push
mov
arpl
stos
es
or
test
lods
insb
inc
mov
ja
test
mov
clc
addb
jne
cs
arpl
mov
sbb
mov
xchg
adc
cmp
in
xchg
pusha
add
in
pushaw
jno
int3
inc
imulb
inc
orb
rep
or
xchg
dec
jb
aaa
jne
cli
nop
dec
scas
push
lahf
add
je
shrl
andb
loopne
jg
lods
pop
cmc
dec
jo
xor
jo
fidivrl
or
inc
adc
pusha
adc
insb
inc
in
mov
pop
sub
fisubl
push
test
insl
or
rol
mov
pop
fimull
mov
inc
add
xchg
ja
bound
mov
imul
sub
pop
out
not
push
push
insb
call
add
out
jle
jo
mov
xchg
mov
mov
mov
lret
xor
and
pop
int3
push
fldt
sub
lcall
cld
pop
clc
add
inc
dec
inc
push
mov
fldt
or
mov
pop
popa
fidivs
aam
xor
sbb
ret
mov
lahf
jo
clc
jg
fimuls
xchg
daa
imul
nop
dec
mov
add
mov
adc
lcall
jp
cmp
popa
adc
dec
rolb
push
lods
loop
dec
push
push
dec
push
mov
orb
and
cli
jbe
mov
aaa
js
repnz
jecxz
mov
jno
jmp
pop
lods
fdivs
in
iret
sbb
xchg
arpl
adc
mov
xor
add
mov
jo
xchg
or
lods
outsb
or
adc
leave
mov
mov
adc
mov
pushf
data16
mov
mov
insb
clc
lea
test
push
lahf
xor
scas
mov
pop
jge
sti
int
divb
xchg
outsl
loope
ret
lods
inc
js
cli
shl
dec
shrb
xchg
dec
scas
push
add
fists
cwtl
ret
pop
sahf
cmp
test
gs
dec
outsb
dec
mov
sbb
mov
das
test
push
and
enter
cmc
pop
imul
or
je
in
push
pop
outsl
cmpsb
mov
pusha
std
loop
push
imul
adc
or
add
movsb
lods
mov
ss
add
push
jne
sbb
push
ja
fistpll
mov
shr
sbb
jge
or
addr16
aaa
repz
dec
popa
aaa
shlb
xchg
adc
dec
aam
mov
fdivrs
dec
mov
mov
sub
ret
cmpsb
add
pop
sbb
push
and
add
stos
lock
jp
dec
and
loope
inc
les
xchg
jmp
js
cmc
loope
subl
out
and
insl
xchg
or
frstor
outsb
div
xchg
vpshld
into
jp
outsb
fidivrl
lret
xchg
mov
cmp
popa
pusha
push
loope
xchg
sti
pop
in
pop
mov
push
inc
fwait
jg
sbb
fdivs
push
mov
es
test
sahf
mov
iret
inc
rcll
sub
sub
pusha
or
inc
inc
test
pusha
dec
cmpsl
and
filds
test
arpl
mov
or
fldcw
mov
add
jne
pop
mull
fs
pop
jg
adc
add
negl
lods
iret
mov
pusha
xchg
pop
in
out
sbb
outsl
mov
sub
ss
mov
sbb
mov
sbb
aaa
or
jge
lea
push
fidivs
shlb
push
mov
loope
lods
in
pushf
bound
lret
je
mov
ja
icebp
mov
enter
adcl
in
incb
lret
mov
add
mov
pop
sti
aas
aam
mov
stos
in
divb
out
xchg
lret
xchg
jl
adc
mov
iret
jbe
sub
jae
outsb
loopne
scas
loope
and
ljmp
xor
lods
jle
mov
shrl
add
dec
ljmp
in
mov
cmp
dec
inc
repz
out
out
jbe
adc
cmp
push
jg
xor
jno
fcomi
stos
xchg
adc
xor
xchg
aam
xchg
outsb
xchg
inc
inc
push
mov
es
loope
hlt
and
sbb
add
nop
fisubl
std
mov
and
in
mov
orb
pop
clc
or
pop
push
add
push
incl
dec
aad
adc
sbb
out
fs
jl
mov
sub
inc
sbb
ljmp
sbb
test
out
dec
addb
mov
mov
out
rcll
scas
inc
jno
clc
pop
scas
adc
push
add
mov
dec
mov
and
jle
xchg
pop
jb
mov
pop
and
push
mov
adc
cmp
and
inc
nop
dec
outsl
icebp
loopne
pop
push
sub
pop
mov
out
ja
in
push
cld
dec
std
and
insl
adc
cmpsl
insl
push
shlb
and
mov
jns
xchg
mov
mov
cmpsb
and
sub
mov
decb
inc
scas
pop
push
pop
movsb
jg
add
enter
hlt
inc
gs
xchg
std
xchg
lods
dec
pop
pop
xor
push
popf
jle
rcl
dec
mov
movsb
cltd
xor
sub
add
and
call
or
addr16
lods
inc
mov
and
into
inc
or
out
sbb
loope
xchg
xchg
std
xchg
and
fimuls
bound
scas
rorb
sahf
scas
adc
test
mov
pop
inc
xor
ret
adc
inc
mov
inc
imul
std
fs
sarb
push
or
lea
adc
hlt
das
mov
jge
pop
cwtl
sti
fstpt
mov
adc
cmpsb
mov
mov
or
jno
add
lock
rcrb
jle
leave
ja
pop
js,pn
jecxz
and
push
out
mov
dec
jge
test
and
mov
sbb
mov
sbb
sbb
cli
ljmp
or
xchg
daa
aad
mov
jl
push
inc
add
fistps
lcall
lods
mov
in
pusha
sti
sub
out
mov
pop
fs
add
inc
xor
sbb
pusha
adc
sahf
loopne
leave
mov
add
add
inc
xchg
xchg
out
ss
shlb
or
cmp
xor
adc
or
clc
xchg
stos
adc
mov
cmp
cmp
xchg
in
and
cld
idivb
popl
mov
jmp
inc
dec
cmp
xlat
mov
ja
sti
cwtl
mov
mov
mov
cmpsl
push
std
or
rcrb
mov
mov
daa
gs
loope
aad
popf
xchg
add
jmp
mov
sub
aam
aaa
xchg
enter
sub
mov
xchg
sti
jle
test
push
mov
add
add
mov
fnsave
test
sub
jecxz
mov
cld
mov
add
int
adc
xor
out
add
ret
add
cmp
cmp
inc
pop
jle
mov
aam
aam
push
clc
or
cli
mov
std
add
out
sti
daa
outsl
push
mov
dec
insl
insb
negb
loop
lcall
decl
and
pop
mov
jae
in
mov
mov
addl
incl
pop
adc
inc
clc
arpl
add
xchg
cld
mov
cs
mov
std
add
add
xor
jno
push
jne
out
fcomi
sub
dec
mov
add
incl
cld
je
or
scas
add
xchg
adc
mov
sub
addb
sbb
cli
adc
xlat
insb
mov
addb
std
xchg
addr16
std
jnp
andb
ljmp
sub
pop
call
lods
ss
pop
out
into
sub
nop
and
add
loop
scas
ds
mov
rorb
bound
sbb
adc
inc
mov
pop
add
sbb
xlat
inc
fsubrl
test
or
out
data16
or
cmp
movsb
das
inc
mov
arpl
sub
dec
filds
out
rcl
std
mov
stc
es
mov
aas
add
sti
negl
and
sbb
cmpsb
add
orb
mov
je
jmp
xor
push
xor
aaa
movsb
mov
mov
or
ret
xor
inc
inc
mov
dec
mov
ss
push
fdivl
or
xor
mov
cmp
out
mov
mov
lahf
xchg
lods
xor
pop
xorb
jo
mov
pop
js
jmp
sub
pop
add
mov
mov
cld
sbb
dec
or
dec
sbb
and
dec
adc
mov
cmp
or
lea
fdivl
sahf
xor
fs
xchg
inc
mov
xchg
pop
add
push
mov
mov
mov
loopne
push
aas
pusha
sti
repz
push
adc
push
mov
icebp
jns
sbb
and
addl
push
mov
jmp
ds
fisttpll
pusha
les
inc
cmp
xchg
imul
inc
add
cs
scas
cmp
push
mov
sbb
xchg
adc
jg
mov
ret
add
xor
xorl
rorb
cwtl
mov
xor
pop
xor
push
jl
sub
push
xchg
mov
or
or
insl
xchg
jg
pusha
dec
sub
mov
pop
iret
jp
jg
in
in
lods
mov
pushl
loopne
dec
adc
leave
add
loopne
mov
jg
cli
repz
aaa
add
lahf
or
mov
or
repnz
sub
pop
push
push
adc
lret
sub
pushf
jb
sbb
inc
cmpsb
sar
lahf
and
stc
lds
test
movsl
ja
stos
sub
ret
adc
idiv
xor
mov
bound
sbb
ljmp
xchg
mov
or
lcall
das
sbb
xlat
icebp
lret
push
sub
fsubrl
ljmp
rclb
mov
lret
and
addl
ljmp
inc
cmpsl
dec
test
test
sbb
call
pop
pop
es
ret
lcall
cwtl
pop
xorb
mov
push
sbb
stos
add
dec
lret
push
mov
in
rorb
stos
fdivs
lods
call
adc
rolb
outsb
loope
es
pop
pusha
cld
stos
jbe
cmc
mov
inc
xor
xchg
push
jecxz
sub
sti
and
ljmp
pop
pop
popa
filds
out
lea
mov
dec
and
rorl
lods
sbb
stos
leave
fs
xor
xchg
pop
shrb
mov
dec
aam
into
bound
jmp
stos
add
xchg
cs
mov
sub
sub
mov
xor
call
or
clc
mov
add
rcll
sbb
inc
sub
es
fadds
cli
jl
jbe
js
inc
sbb
popa
andb
nop
xchg
inc
clc
imul
aam
adc
push
mov
mov
and
pop
lds
icebp
pop
sbb
jecxz
outsb
popa
dec
mov
rolb
sbb
jg
imull
or
add
inc
add
movsl
dec
fistpll
leave
pop
or
or
inc
cmp
push
or
push
mov
adcb
and
scas
scas
fcompl
lock
clc
push
mov
repnz
mov
and
mov
cmp
fldt
arpl
and
add
xorl
or
negb
inc
loopne
inc
enter
add
out
pusha
mov
fldl
stos
repz
dec
stc
loope
push
mov
sbb
fwait
mov
in
cmc
cmpsb
push
mov
or
scas
and
or
jmp
inc
jae
ljmp
cli
pop
sub
and
add
test
and
out
fadd
push
mov
scas
dec
cmpsb
mov
test
pop
sub
aad
mov
add
push
faddp
fidivl
add
pop
pop
mov
sub
mov
adc
sub
lcall
rcrb
add
ljmp
stos
stos
jecxz
aas
leave
lcall
ret
lds
cvtdq2ps
sti
sub
pop
xchg
movsl
mov
jno,pt
xor
mov
mov
adc
sbb
imull
fstpt
sti
cli
sbbl
pop
xchg
dec
mov
cld
xchg
ljmp
or
in
sti
subb
leave
mov
sub
lcall
mov
push
sub
jg
add
jne
cld
ss
icebp
jmp
add
cs
and
outsl
shl
mov
cmp
pop
clc
pop
sbb
movsl
aas
rorb
insb
add
and
push
inc
sbb
hlt
test
popa
cld
fsin
mov
sub
mov
and
push
jmp
into
sub
clc
cld
pop
cli
arpl
jle
je
or
mov
sbb
clc
lock
push
clc
mov
callw
pop
sbb
push
stos
mov
xor
push
loop
std
cmp
pop
jne
lret
mov
ja
inc
ret
shlb
mov
insl
clc
push
add
xlat
jge
jecxz
andl
int
subl
or
mov
test
frstor
enter
mov
push
fs
movsb
jo
out
add
mov
mov
pop
mov
ljmp
inc
ret
sbb
lods
or
call
cmp
push
mov
orb
outsl
inc
dec
pop
mov
in
aam
movsb
gs
cmpsl
push
jmp
pop
jno
mov
loopne
rol
cmp
fs
out
jle
sbb
dec
lret
sti
mov
ljmp
shlb
sub
pop
and
mov
inc
lea
push
lds
fbstp
sbb
jnp
or
lods
sbb
sub
fdivs
test
imul
rol
push
notl
repz
or
lods
out
addb
cmc
idiv
andb
fcomip
fsubl
pop
cmp
lods
cmp
add
xchg
inc
dec
inc
shl
cld
dec
cmp
inc
push
mov
mov
dec
cld
push
dec
push
div
call
sub
gs
pop
std
pop
push
cli
gs
or
lock
sbb
cwtl
sub
negl
es
sbbl
push
addl
cld
icebp
inc
les
pusha
inc
dec
add
cld
ss
mov
icebp
dec
or
test
adc
pop
adc
orl
pusha
mov
rclb
add
adc
dec
sub
clc
les
das
pop
mov
add
idivb
scas
adc
adc
xchg
andb
cmp
cmp
cmp
push
mov
xchg
adc
jb
xchg
sar
add
sub
lahf
cwtl
dec
fistps
inc
aad
js
std
inc
sub
insb
ds
nop
cli
push
cld
sahf
dec
dec
xor
adc
push
adc
loopne
inc
in
xor
outsl
cmp
mov
cmp
or
rcll
cmp
mov
fwait
mov
das
adc
lods
push
inc
jns
fidivs
fildl
jle
or
jp
and
inc
mov
add
les
adc
incl
push
dec
pop
push
mov
dec
loope
js
mov
mov
xchg
push
loopne
mov
lahf
xorb
pop
stos
je
jne
sbbl
xchg
mov
add
pop
push
shlb
push
or
dec
hlt
imul
ret
add
rclb
push
lods
and
push
and
bound
fs
in
pop
test
mov
add
loop
mov
cmp
cmp
incl
orb
nop
cmc
dec
add
pushl
sub
lret
or
rol
out
and
iret
xor
pusha
jl
shlb
cmpb
iret
fisubl
cs
xchg
dec
and
dec
icebp
adc
and
int3
test
repnz
lea
into
adc
jl
jg
adcl
adc
into
adc
jg
decl
cmpb
clc
mov
jno
adc
outsl
div
fistps
jp
mov
mov
jle
inc
or
pop
aaa
cld
fistpll
push
mov
std
sbb
outsl
push
add
enter
push
xor
je
insl
cmpsl
add
pop
sahf
pop
dec
mov
dec
scas
xlat
add
data16
push
mov
pusha
jmp
xchg
inc
mov
pushf
clc
stos
and
jl
hlt
fnstsw
rcrb
mov
jb
addr16
cli
xchg
dec
cli
out
sarb
stos
mov
fildll
add
add
adc
mov
iret
cli
push
or
sbb
cltd
sarb
dec
and
mov
ret
loopne
ja
loopne
shl
decl
dec
fs
sbb
shr
ret
pop
sbb
and
mov
arpl
mov
jno
stos
pop
stc
cmp
clc
aas
mov
pushl
sub
inc
insb
outsb
arpl
popf
test
inc
or
popf
cli
pop
xor
add
into
imul
dec
nop
and
rcrb
call
sbb
repnz
aam
pusha
leave
mov
jle
mov
loope
pop
mov
mov
add
dec
mov
loop
sbb
pop
hlt
sub
jecxz
jb
hlt
bsf
mov
lock
push
pusha
inc
je
inc
xorl
xlat
pop
or
rorl
sub
fisubl
loopne
mov
sbb
xor
lahf
push
pop
popf
test
mov
fnstcw
test
fs
faddp
insl
les
inc
xchg
sar
shrb
xchg
cmp
mov
sub
popf
mov
enter
push
dec
aas
pop
cmp
jo
jge
cmpps
neg
and
inc
mov
add
in
sub
sarb
adc
push
xor
push
cld
scas
stos
fs
loop
and
xor
jp
pop
fisubl
sub
mov
mov
inc
adc
cmc
rcrl
or
lock
push
sub
or
incb
sub
repnz
jg
out
add
xchg
push
xor
add
mov
xchg
push
inc
sbbb
je
pop
jo
mov
mov
adc
add
push
cmp
adc
xchg
cli
into
lcall
or
inc
jl
mov
loopne
push
xchg
mov
jecxz
cli
mov
jnp
jl
add
cli
jmp
adc
std
filds
lods
ja
incb
add
cmp
daa
stos
or
add
je
dec
dec
lret
std
xor
sbb
adc
jp
lods
cwtl
pop
or
es
je
sbb
xchg
xchg
lret
les
sbbl
xor
cs
out
nop
push
sbb
mov
mov
or
ret
jecxz
jl
stos
lods
xchg
jg
mov
dec
add
pop
rcr
add
cwtl
sbb
xchg
mov
sub
or
mov
sbb
inc
cli
inc
in
popa
mov
push
sbb
sbb
cmp
scas
fwait
mov
jae
imul
mov
into
lods
nop
incb
mov
sbb
adc
lods
inc
mov
inc
mov
in
inc
inc
clc
mov
vpaddusb
wrmsr
roll
lret
push
mov
push
mov
push
scas
pop
in
aad
add
aam
sbb
shrb
in
jmp
mov
mov
jnp
inc
clc
in
aam
jle
xor
cmp
cmp
scas
shrb
inc
imul
dec
repnz
mov
es
jns
inc
push
mulb
in
pop
or
dec
rorb
dec
hlt
xchg
pop
pop
sbb
adc
mov
pop
mov
lea
pushf
cwtl
cltd
cli
adcb
bound
inc
inc
pop
mov
xor
or
outsl
clc
adc
add
sub
and
cwtl
xor
lock
mov
ds
adc
pop
sbb
loopne
clc
inc
incl
aas
enter
cmp
imul
mov
mov
movsb
lock
das
adc
icebp
pop
gs
xlat
sub
fildl
lock
or
xor
insb
push
inc
cs
out
clc
pop
xlat
jb
adc
hlt
fbstp
xchg
push
add
jl
sbb
jmp
mov
jb
into
fadds
push
push
notb
mov
into
nop
push
stos
aaa
fildl
addb
cltd
stos
ss
call
mov
inc
mov
sbb
sub
scas
jmp
pop
fdivrp
inc
xor
push
lock
js
pop
mov
mov
data16
ud2
inc
mov
fwait
pop
clc
jmp
inc
cmp
mov
adc
xor
in
lcall
clc
mov
cld
xlat
sub
add
daa
xchg
add
test
adcl
and
clc
sbb
test
fstpl
lret
sub
dec
push
mov
test
dec
jl
and
xor
orl
sahf
fisubrl
xchg
or
add
pop
add
cmp
inc
jecxz
inc
rolb
mov
pop
xor
pop
fistpll
mov
pop
ds
test
fwait
mov
mov
dec
cmp
sub
sarl
xchg
mov
iret
test
fsubr
movsb
imul
test
test
cwtl
lods
jp
push
outsl
clc
dec
jge
into
test
mov
mov
ljmp
fisttps
pusha
jo
test
js
aaa
push
mov
add
add
mov
and
mov
sbb
sub
data16
mov
cwtl
bound
stos
inc
mov
fsubl
push
fisubrl
jns
test
mov
jg
mov
stos
push
jge
das
sarb
jb
rcrl
rolb
mov
dec
dec
jge
ljmp
addr16
push
pop
popl
in
jg
mov
jne
mov
dec
mov
nop
adc
rol
test
pop
ljmp
cmc
dec
sbb
push
or
sbb
add
cmpsl
cmp
add
sub
std
les
stos
mov
stc
sbb
subl
loop
sbb
dec
adc
cli
shlb
decb
inc
clc
pop
pop
sti
sbb
rorl
or
jg,pt
sub
xchg
ficomps
clc
mov
lock
xor
cmp
push
jle
xor
xchg
adc
ret
pusha
adc
pop
repnz
cmp
fiadds
les
inc
jecxz
ljmp
fdivrl
and
addl
bound
out
push
ss
pop
jne
push
es
jg
xchg
cmp
aad
ffree
push
mov
pop
js
cmp
je
inc
or
rcrl
and
out
push
shll
jne
push
adc
mov
sbb
jno
hlt
or
add
add
mov
leave
xchg
into
test
inc
lcall
jle
mov
movsb
xchg
cwtl
xchg
clc
mov
mov
ss
insb
ljmp
scas
imul
lcall
clc
sti
mov
fstpl
aam
into
sub
imul
push
pusha
sarl
mov
sbb
sub
xchg
repnz
mov
dec
mov
sarl
fucomip
pop
dec
mov
bound
mov
push
jl
orl
inc
jmp
lcall
adc
popf
sub
xor
mov
out
test
mov
pushf
sbb
filds
mov
daa
inc
in
dec
jge
popf
adc
mov
push
lods
xlat
cmp
jo
or
loope
add
push
movsb
test
cmpb
inc
jne
loopne
lret
or
fildll
imul
sbb
and
testb
lods
mov
jns
int3
insb
pusha
loopne
sbb
sbb
mov
or
mov
fcomip
pop
and
dec
sub
callw
movsl
in
test
arpl
jo
movsl
add
inc
adc
in
push
fwait
jle
outsl
sahf
outsl
sbb
sub
ror
lahf
fsubl
pop
lock
notl
into
rorb
insb
aad
jmp
dec
pop
js
xor
gs
and
add
out
leave
mov
inc
imull
test
inc
push
shrl
push
mov
mov
or
pushf
inc
sub
js
mov
mov
dec
mov
jp
orb
shrb
shrl
cmc
sub
imul
mov
pushf
shlb
jp
jo
aad
jns
ret
rclb
dec
adc
push
push
mov
pop
scas
icebp
fbstp
mov
mov
in
jae
sti
xchg
mov
cld
std
xchg
lcall
mov
pop
push
xchg
les
ljmp
pop
test
dec
push
push
fs
push
dec
or
fimull
xchg
leave
stc
fmul
pop
cmp
negb
scas
jp
jb
push
insb
push
mov
aad
fsubs
cmp
fdivr
aad
jg
or
inc
sub
call
add
push
push
add
subb
add
fwait
lock
dec
xchg
gs
pop
add
or
add
imulb
lods
pop
push
and
mov
dec
call
aaa
in
xchg
jb
out
cmp
pushf
and
dec
sbb
shl
push
cmpsl
push
ljmp
sub
icebp
jns
rorb
dec
add
shr
or
xchg
lock
adc
call
pusha
pop
and
dec
lock
nop
test
stc
or
push
scas
outsb
sbb
ret
in
movsb
adc
adc
cmp
mov
jmp
enter
scas
inc
cld
and
push
loopne
mov
scas
test
pop
nop
sti
jnp
std
mov
movsb
sub
test
repz
outsb
pop
dec
lcall
sbb
or
or
shlb
loopne
shll
jp
test
xor
jbe
insb
sbb
nop
icebp
cmp
cs
shr
fwait
push
inc
sub
sbbb
jg
mov
pop
add
xor
out
js
int
jg
pushl
mov
jmp
imul
add
rcrl
out
fwait
cmc
xor
in
fcomps
inc
ret
dec
adc
sub
lcall
cmp
test
inc
pop
loope
sbb
sub
pusha
cld
mov
loopne
stos
or
lods
stos
xchg
pop
fisttpl
popf
test
mov
mov
cmp
mov
aaa
inc
scas
int
adc
neg
decb
cmp
inc
or
in
cmp
and
and
mov
outsl
inc
das
push
mov
dec
fdivp
adc
and
dec
xorl
ret
stos
xor
mov
pop
testb
insb
and
mov
out
insb
cli
inc
aam
lock
inc
mov
and
sub
test
or
jmp
jo
push
hlt
fildl
sti
popa
inc
inc
push
jl
dec
inc
adcb
jnp
mov
mov
push
ss
lds
jne
cld
xchg
sbb
mov
or
pushl
in
mov
cld
pop
push
adc
jp
xchg
add
jecxz
outsb
inc
stos
fucomi
cltd
pop
add
lds
xchg
je
push
xor
clc
clc
mov
ror
std
push
icebp
repz
jg
out
addb
popa
push
pop
inc
adc
mov
lods
jp
cmp
push
cld
bound
xchg
nop
ret
call
test
xchg
jl
or
cmpsl
ljmp
clc
mov
aaa
enter
out
xchg
and
lock
loop
xor
stos
sbb
ljmp
data16
mov
fadds
jae
insb
xchg
adcb
repnz
sub
fs
cmpl
inc
les
and
pushf
out
lock
mov
bound
loopne
mov
arpl
call
fldl
nop
mov
pop
add
lahf
aad
imul
lcall
andb
add
lock
push
std
fnsave
sub
push
mov
push
lock
pop
aad
arpl
push
stc
sbb
outsl
out
add
jl
mov
rclb
dec
iret
push
test
dec
lock
add
imul
mov
pop
lds
jne
adc
pusha
jl
fistpl
push
imul
sarl
jl
loopne
loop
sub
fistps
roll
add
lcall
xchg
clc
pop
lods
test
int
insl
xor
popf
inc
xchg
sub
not
lea
sub
stc
pushf
in
mov
mov
cmp
add
mov
and
aam
hlt
inc
mov
push
mov
jge
xor
sar
inc
pop
test
inc
test
inc
and
push
pavgb
jnp
fstl
jl
push
adc
test
xor
hlt
sub
pop
lods
mov
adc
les
lock
ss
pop
add
stos
jno
je
sbb
xor
lcall
lds
push
pop
jbe
push
mov
shrb
bound
jmp
imul
arpl
add
sub
fsubrp
push
push
sbb
call
xchg
inc
inc
in
cmp
out
cli
jae
xorb
dec
js
cmc
mov
ret
xchg
or
mov
loop
rolb
and
and
inc
insl
xchg
cmc
mov
dec
dec
ljmp
outsb
and
sub
out
jle
iret
mov
mov
or
mov
dec
jne
aas
call
nop
lea
sbb
lea
pushl
mov
outsl
jl
push
repz
out
or
jp
sub
es
mov
leave
sub
cli
push
test
mov
in
xor
out
xor
test
xchg
movsb
movsb
mov
mov
in
jb
popa
xchg
lock
mov
mov
push
movsl
rorb
push
push
ficompl
js
lock
imul
inc
or
xchg
out
out
mov
mov
lock
addl
adc
pshufw
test
into
mov
mov
xchg
int3
and
lret
xor
xchg
mov
lods
mov
push
jnp
push
inc
xor
adc
xor
js
mov
sbb
testb
je
mov
sahf
mov
mov
sbb
jg
adc
scas
adc
fisubs
xor
decl
sub
jg
insl
cmp
fiadds
ljmp
inc
in
fdivrs
lock
jg
outsb
das
fcmovbe
call
loopne
pop
movsb
dec
je
shrl
fisubrs
pop
pusha
adc
shlb
push
pop
inc
js
mov
cmp
ret
mov
or
sbb
mov
adc
add
fcmovnbe
sub
push
mov
shrb
sbb
lods
loopne
sbb
sub
mov
push
jo
fucom
xchg
scas
dec
xor
inc
subb
push
js
lock
jmp
mov
and
or
cmpsb
sbb
dec
add
rolb
xchg
lcall
enter
fwait
inc
rcrb
fistpll
mov
cmp
repnz
stc
in
int3
lds
inc
in
xor
data16
and
jbe
push
mov
repnz
call
mov
inc
cmpsb
cmp
ds
vpcmpeqw
add
gs
push
xor
pop
lock
push
mov
sub
xor
test
jns
pop
aas
pop
clc
pop
mov
sub
jno
adc
add
js
lock
fidivrs
fs
sbb
jl
mov
fisttpl
in
subl
aam
mov
repnz
sub
rcrb
mov
adc
add
or
push
add
lret
out
cli
add
mov
jecxz
ljmp
fdivl
stos
shrl
mov
or
or
fcomi
data16
add
cmpsl
sub
add
add
bound
sub
adcl
adc
sbb
pushl
rol
cltd
push
jg
xchg
xor
lds
aas
mov
jo
xchg
arpl
xor
mov
jg
xchg
mov
fwait
push
xor
sti
or
jae
movsl
pop
cmp
mov
icebp
jg
enter
add
cmc
ss
ljmp
ljmp
or
push
pop
lock
std
les
mov
and
adc
push
ljmp
cmp
stos
pop
or
inc
sti
jbe
cmp
aaa
inc
and
mov
je
add
imul
insb
test
mov
decb
insb
shrb
std
or
cmp
xor
lods
dec
mov
and
daa
inc
xor
xor
add
rorb
shrl
pop
mov
push
mov
xchg
clc
add
aas
push
scas
or
fisttps
ja
stos
dec
inc
xor
mov
aaa
pop
aam
push
clc
push
out
in
arpl
push
pop
lcall
adc
pop
mov
push
ja
add
pop
xchg
inc
mov
push
mov
stos
scas
adc
push
clc
out
jb
data16
daa
jmp
out
arpl
xchg
jo
pop
ljmp
add
adc
addb
inc
jecxz
fisubrs
fstpl
cmp
jno
shrb
rclb
out
popa
xor
or
pop
in
xor
es
xor
xchg
adc
in
clc
jbe
xchg
aad
mov
add
or
jp
pop
jns
pop
addr16
sbbb
inc
int
mov
imul
add
push
adc
cmp
sub
cld
test
in
subl
cld
test
clc
sbb
lods
cmp
fstpt
test
or
stos
push
outsb
adc
les
add
adc
pop
push
pushl
pop
les
inc
movsb
mov
and
out
into
push
add
sbb
jo
push
jl
dec
sub
mov
incl
add
jnp
inc
cmp
mov
mov
add
incb
mov
xchg
sbb
lcall
fdiv
arpl
mov
add
push
push
ljmp
mov
stos
xchg
js
cmp
xchg
sbb
dec
cmpsb
rclb
mov
add
fsubr
frstor
icebp
and
fsts
and
adc
mov
xlat
ret
xchg
push
scas
xchg
enter
lds
cmc
push
rcl
mov
jecxz
loopne
in
mov
add
dec
mov
jg
mov
jnp
je
jno
mov
insb
jae
push
out
dec
pop
frstor
push
loopne
mov
ja
dec
adc
ds
scas
mov
push
sbb
jae
jle
out
aam
adc
aaa
aad
jne
jmp
jnp
and
jns
push
pop
mov
call
push
pop
test
fidivrs
dec
push
arpl
xor
stos
cmpb
and
push
push
xchg
adc
clc
ss
dec
push
fidivrl
dec
jl
idivb
jno
out
or
adc
dec
test
ficompl
cld
jg
call
pop
ljmp
push
pusha
xchg
add
add
dec
lods
dec
cld
jo
fcoms
xchg
jle
es
xchg
out
lds
pusha
aas
call
lcall
adc
rorb
and
mov
shrb
cmp
sbb
pusha
dec
mov
mov
dec
sbb
outsb
insb
fcomip
and
sub
enter
inc
sahf
or
sub
pop
jl
das
pop
je
aaa
mov
or
jge
test
aas
mov
add
pop
scas
es
add
test
test
fists
js
and
mov
mov
sub
xchg
sub
incb
pop
sub
pop
jns
jnp,pn
cld
inc
lock
leave
mov
inc
mov
dec
and
xchg
pusha
inc
imul
mov
loopne
and
cmp
les
scas
inc
incb
rcrb
cmpsb
or
int3
xchg
aam
lock
sub
bound
ljmp
notb
mov
or
sub
ds
jo
cmc
arpl
cwtl
cmp
and
dec
loopne
xor
jl
aam
bound
pop
or
jle
push
xlat
or
jp
pop
xchg
jno
jecxz
jecxz
outsl
lods
test
mov
push
push
rol
jmp
rorb
bound
pop
insb
cwtl
and
add
roll
and
mov
mov
das
lea
sbb
mov
pop
outsb
ja
jnp
imul
sbb
jb
mov
or
sub
push
aad
faddp
dec
add
fcomip
or
test
hlt
enter
sbb
pop
ret
dec
jbe
outsb
cmp
adc
fidivrl
in
mov
add
cmp
mov
popa
xor
int3
cld
xor
jp
mov
jecxz
add
cmpsl
jo
dec
mov
loope
addr16
js,pt
sub
dec
rcrl
mov
shrl
push
xor
jp
cli
leave
subb
mov
dec
nop
mov
aas
fdivs
jecxz
sbb
in
testl
mov
add
cld
or
faddl
push
adc
fstpl
icebp
jno
subl
or
push
adc
push
and
add
pusha
xorb
jne
mov
push
sub
or
fcoms
shll
mov
test
mov
pop
pusha
sbb
imul
aam
cwtl
xor
push
sti
pusha
call
pop
jae
ret
jbe
popl
test
out
andl
mov
fwait
push
cmpsb
out
scas
hlt
push
rcrb
add
cmpsb
mov
add
dec
inc
inc
push
sbb
lods
ret
mov
fdivrs
mov
nop
pop
sub
aas
push
pop
add
push
push
add
mov
push
inc
notb
push
scas
lahf
outsb
out
or
sub
dec
shlb
enter
push
add
add
aas
fcmovnb
loop
jno
movsl
out
sarl
aad
and
fcoml
sub
aam
mov
and
icebp
jne
cmc
add
or
jae
dec
or
cmpsb
lcall
in
jg
or
inc
xchg
jnp
dec
and
mov
pop
adc
mov
sub
cld
test
cwtl
dec
inc
jl
push
inc
rorl
mov
sahf
sti
ret
mov
jl
inc
lods
ljmp
call
call
insl
jp
xchg
push
and
push
std
xchg
add
icebp
sbb
cmp
pusha
sub
add
pop
push
push
or
fwait
shl
das
mov
fsub
jg
pop
jbe
scas
xchg
icebp
mov
pushf
iret
adc
cmpsl
int3
jl
clc
daa
out
in
ljmp
inc
testb
decl
out
push
ljmp
push
cmp
pop
xor
stos
inc
ret
cli
inc
sbb
or
or
dec
pop
fwait
push
in
stos
loope
test
loop
aaa
in
mulb
xor
data16
int
pop
shlb
xchg
pop
das
clc
add
xor
push
mov
clc
insb
rorb
fs
and
cmp
nop
pop
jmp
faddl
dec
pop
das
pop
incl
and
adc
adc
out
and
fcoms
mov
call
jg
test
mov
mov
xlat
xchg
lock
jno
sub
aaa
adc
or
ret
jb
inc
pop
inc
sbb
mov
enter
shrb
sbb
les
xchg
adc
mov
ljmp
mov
scas
and
mull
jb
mov
lahf
cld
inc
add
ljmp
mov
sub
sub
sub
je
out
jl
bound
repz
psubsb
add
xchg
je
xchg
rcll
xlat
mov
adc
insl
roll
lcall
push
ret
rolb
push
fcomps
aaa
mov
sbb
inc
roll
rcll
xlat
pop
test
and
out
push
mov
andl
call
ficoms
mov
mov
or
xor
lahf
rorl
sbb
fadds
jg
xor
xor
lcall
hlt
aam
fnsave
and
adc
ror
pop
rclb
adc
push
sub
adc
int
mov
sub
testl
add
or
mov
stos
scas
loopne
jg
xor
hlt
std
add
jle
ljmp
out
push
sbb
or
and
iret
jo
stc
ljmp
mov
rclb
push
int3
xchg
adc
add
pop
pop
jge
aas
stc
pop
adc
inc
push
lcall
movsb
mov
clc
jns
add
jmp
lcall
add
inc
bound
pop
hlt
add
xchg
jbe
mov
out
out
lret
xchg
loopne
mov
or
mov
xchg
push
std
mov
jb
div
jl
mov
push
popa
mov
jnp
jno
test
lret
in
mov
sub
mov
subl
sbb
add
jmp
jg
rcr
lret
xchg
cmp
mov
movsb
outsl
cld
push
loopne
insl
movsb
mov
lcall
adc
ss
loop
nop
cmp
shrl
roll
sub
add
push
out
cmp
mov
out
nop
push
pop
push
pop
orl
test
lods
inc
adcb
ja
cmp
sub
jo
fldt
in
adc
cld
in
enter
mov
push
int
imul
jne
pusha
loope
dec
jnp
inc
loopne
mov
xchg
sbb
daa
outsb
inc
fwait
cwtl
out
inc
jno
inc
jmp
cmpsb
pop
ljmp
es
and
repnz
dec
fcoms
cs
mov
shlb
or
fildll
ljmp
cld
dec
stos
aad
cmp
xchg
mov
movsb
jo
mov
subl
in
jnp
xchg
push
and
and
pop
es
mov
cs
out
cmp
adc
lock
mov
push
cmc
xchg
pop
jg
jns
dec
aad
call
subl
push
sbb
loop
iret
movsl
cmp
cs
jae
jo
cli
test
fisttpl
es
mov
cmp
cli
sbb
inc
fwait
ss
ss
testl
sub
addr16
xchg
fdivrl
mov
std
es
jbe
cmp
shl
out
mov
insl
test
shlb
cmp
add
sbb
sub
sub
pop
adc
iret
roll
lret
enter
mov
inc
mov
hlt
xor
lahf
mov
sarb
adc
add
xchg
cltd
push
xorb
inc
push
xor
rclb
pop
pop
ja
bound
cmp
icebp
loope
aaa
xchg
add
test
cmpb
inc
jo
ror
mov
inc
jno
aas
xor
sarb
les
cmp
scas
pushf
lret
jbe
scas
jg
adc
bound
inc
lcall
adc
mov
mov
int3
jno
add
es
shlb
in
xor
push
xchg
jg
mov
mov
adc
push
mov
cwtl
sbb
pop
ret
xchg
adc
push
in
in
mov
adc
js
sbb
dec
mov
ds
addb
scas
enter
or
adcl
push
loope
jg
dec
mov
pushf
hlt
scas
add
pusha
sbb
fstpl
aaa
lret
pop
lock
fstp
ret
pop
adc
fidivs
add
test
cmpl
jecxz
in
test
dec
out
and
xchg
mov
xchg
cli
jge
test
sar
mov
rorb
sub
adc
cmp
push
rorb
mov
mov
arpl
cmpl
bound
xchg
scas
fdivr
aam
scas
js
js
adc
adc
inc
sbb
daa
loope
xor
inc
lcall
fldcw
rcr
add
sub
ret
fcmovb
insb
outsb
dec
cmpsl
adc
dec
and
add
ret
mov
inc
mov
fcompl
fdivrl
or
sub
xor
add
cmc
push
inc
pop
adc
xchg
or
or
lahf
sub
cwtl
les
mov
mov
test
aam
cmpsb
rcrl
pushf
pop
std
ret
popf
insl
sub
outsl
loop
mov
sub
inc
push
bound
in
push
test
push
sub
negb
ja
call
inc
shrb
fistl
into
adc
sbb
cmc
and
xor
push
dec
bound
xor
lahf
pusha
cmp
enter
movsl
jne
fisubs
sar
jns
mov
fcompl
sarl
xchg
sbb
xor
adc
das
cmp
lcall
push
adc
shr
xor
mov
lock
ret
add
sub
jmp
sbb
cli
mov
cmovs
add
lods
movsb
testb
mov
and
cli
mov
jg
shlb
push
pop
test
int
cmp
push
lods
mov
xor
push
jl
inc
into
les
call
mov
sbb
cmpb
pop
sub
sbb
repnz
push
cltd
and
or
ret
nop
jo
icebp
icebp
pop
xchg
std
sub
xlat
outsl
pop
call
push
cltd
je
push
mov
adc
sti
scas
das
cli
lahf
jno
popa
popa
insb
std
or
cmpsb
lahf
shlb
xchg
je
and
rolb
xlat
xlat
sbb
loope
adc
push
adc
imul
fadds
dec
test
lahf
add
lret
outsl
sub
out
aaa
dec
aad
bound
add
pop
sbb
pop
or
pop
loope
mov
frndint
aas
jg
pop
jl
mov
scas
mov
and
cmc
test
cwtl
xchg
mov
inc
xor
loope
push
push
inc
mov
rorb
dec
push
push
stos
stc
inc
xlat
div
shrb
lcall
repnz
ret
xor
xchg
jle
cmp
out
int3
dec
mov
stos
inc
mov
orb
ss
cmpb
pushf
hlt
aaa
add
jb
mov
incb
mov
pop
mov
clc
je
xchg
sbb
shll
sub
and
pop
add
dec
scas
xchg
mov
fsubrs
mov
hlt
shlb
mov
ljmp
adc
fldl
inc
popf
pop
imul
sub
bound
pop
subb
insb
mov
mov
xchg
cmc
mov
rcrb
clc
inc
pop
push
mov
sub
loop
das
xor
jecxz
pop
xor
fnsave
push
pusha
imul
xchg
pop
mov
mov
clc
xchg
js
cmp
icebp
mov
mov
adc
cmp
mov
hlt
fucomip
inc
sti
mov
pop
rorl
jle
call
shrb
mov
push
hlt
in
sub
cmpb
inc
enter
pop
add
imul
push
int3
jg
lods
cmc
lea
mov
mov
or
scas
cli
mov
mov
mov
xchg
aad
cmc
adc
mov
push
aas
outsl
call
jmp
out
push
inc
mov
mov
sub
lods
xor
lret
xchg
test
ja
sbb
mov
push
cmp
cmp
incl
loope
and
mov
popf
dec
in
je
in
push
lret
cld
push
or
jge
add
sub
mov
inc
or
stos
js
outsl
jg
in
ds
fwait
test
add
jns
xchg
dec
loopne
aaa
dec
or
push
outsl
add
shll
dec
outsb
push
inc
push
mov
incl
pop
shl
mov
and
movsb
fwait
xchg
ja
push
or
iret
add
ss
adc
or
lods
adc
mov
mov
lods
sub
inc
aaa
jl
clc
mov
les
adc
mov
jle
into
aaa
lret
cmc
inc
cmp
fidivrl
flds
imul
cmc
pusha
sub
pop
inc
mov
das
pop
test
xchg
pop
sub
pop
adc
jo
jecxz
loopne
push
aam
aas
in
es
jno
mov
data16
sbb
mov
xchg
mov
adc
subb
add
out
nop
call
adc
movsb
jle
rcll
mov
mov
push
cli
adc
test
sub
mov
fsubs
add
jns
and
cmp
call
hlt
sbb
out
pop
pop
js
pop
lock
sbb
das
add
shl
xchg
sbb
sbb
inc
push
push
ljmp
iret
vcvtsi2sdl
add
stos
out
mov
ds
ja
cmp
test
jg
loop
sbb
add
lret
sbb
inc
xchg
adc
mov
or
jp
test
and
jo
adc
clc
add
and
in
stos
add
push
cld
idivb
in
inc
rorl
xor
sarb
dec
mov
lock
cmp
stos
xlat
xchg
jb
sbb
push
in
and
sbb
inc
scas
push
andb
push
mov
mov
scas
int3
mov
fs
les
xor
inc
jne
xor
add
sbb
xchg
jb
jbe
push
jecxz
adc
cmp
popf
and
leave
add
jo
add
adc
movsb
jl
add
sbb
sbb
push
pop
scas
clc
bound
inc
lock
jle
movb
lods
jnp
mov
sbb
inc
hlt
pushf
lock
and
aaa
insb
or
dec
push
pop
xor
cmpsl
and
cmpb
fstpt
subl
cmpsb
pop
orl
popf
or
loopne
pushf
inc
cmp
shll
dec
movsb
mov
fistpll
cmp
pop
push
shr
xor
inc
loopne
jp
fldl
dec
aad
fdivrs
mov
pop
icebp
es
push
inc
clc
push
stos
jnp
roll
mov
mov
sahf
pop
push
sahf
xor
ja
out
popa
adc
pusha
fnstsw
jnp
xlat
add
sub
jl
xchg
jle
aam
dec
adc
rcrl
scas
or
adc
rorl
repz
push
ds
sub
mov
xchg
sbb
out
mov
fwait
add
cmp
mov
sar
push
dec
ja
adc
sar
pop
loopne
lret
jo
lahf
lock
shl
and
aas
sub
xlat
pop
sti
cmp
dec
mov
pop
pusha
lods
sahf
sbb
ss
cmp
fwait
icebp
inc
mov
clc
scas
sbbb
mov
pusha
add
dec
jne
fdivp
js
in
es
sbb
pop
fldl
js
mov
mov
dec
popa
push
mov
mov
lret
mov
adc
inc
push
add
mov
into
inc
ficompl
pusha
xchg
clc
adcb
pop
pop
adc
jne
xor
or
andl
rorl
mov
push
adc
add
add
mov
mov
lock
mov
push
into
push
jp
iret
ds
popa
in
jb
lcall
pop
lock
cs
int
pop
outsb
fnstsw
cld
orb
loope
adc
jg
out
mov
rolb
push
xor
in
movsb
add
int
loope
cmc
test
shll
inc
push
push
add
test
loopne
shrl
lret
cmp
sbb
dec
mov
pop
ret
add
sahf
daa
push
cli
mov
incl
loopne
ds
sbb
test
sub
jbe
pop
cwtl
and
mov
sbb
loope
repnz
test
enter
dec
mov
mov
fimuls
jne
pusha
aas
cmpb
jbe
pusha
stos
mov
mov
or
pop
out
push
cmp
pop
insb
pop
rcll
popf
pop
pop
sbb
pusha
or
in
outsl
or
dec
sbb
aad
mov
clc
xchg
inc
mov
nop
or
shlb
je
cmp
adc
movsb
add
xor
cmp
lahf
out
out
dec
sbb
jae
mov
add
js
fnstenv
or
ljmp
jbe
push
loopne
xor
lret
fdivrs
xchg
mov
cld
jmp
scas
xor
adc
inc
push
cmp
das
and
xor
jns
and
fcoml
popa
mov
add
or
jbe
incl
cmp
lock
or
sahf
lods
mov
jno
adcl
mov
inc
rol
xchg
pop
push
lock
inc
aaa
sub
and
sbb
sub
add
pushf
push
pop
mov
xchg
add
sbb
sub
mov
mov
pop
inc
mov
sbb
sub
inc
ret
aas
push
sbb
mov
stos
lahf
aad
shl
pop
loopne
and
loop
stos
mov
inc
sbb
add
cmp
jle
notl
add
and
or
aad
gs
cltd
mov
cmp
fdiv
or
jne
fsubl
mov
sub
loop
dec
fstl
adc
cmp
fisttpl
pop
test
aas
les
mov
xchg
mov
xchg
sub
fiadds
imul
push
jl
mov
insb
pop
les
jbe
xor
cs
fisubs
incl
dec
clc
mov
ljmp
or
mov
hlt
inc
jg
pushf
fdiv
rcrb
decl
nop
out
add
test
fistpll
mov
mov
ss
hlt
mov
push
xlat
add
mov
mov
sub
dec
or
cli
pop
arpl
sbb
out
cli
or
popf
sti
je
jae
cmp
jle
ret
rol
cmp
inc
out
mov
ss
xchg
inc
push
inc
xor
inc
lods
ss
aam
ret
ljmp
ret
lods
adc
jns
or
lahf
or
mov
xor
sar
mov
jecxz
sub
and
mov
add
pop
inc
add
shrb
jmp
dec
lret
mov
jmp
xor
add
cmpb
sbb
call
cmp
jmp
cmp
test
iret
sub
cmp
cmpsb
cli
add
jno
stos
fwait
add
std
or
push
cld
fisubl
idivb
mov
mov
jmp
xor
pop
xor
aam
and
inc
pop
es
or
decl
inc
outsl
mov
add
jbe
sahf
je
inc
xchg
pop
jbe
mov
xchg
ficompl
pop
insl
push
fisubs
gs
bnd
sbb
mov
pop
fcmovb
nop
fidivrl
jno
or
mov
stc
mov
js
test
cmpsl
pushf
dec
adc
adc
cld
mov
dec
xchg
ds
pop
icebp
in
enter
jne
cmpsb
adc
xorb
push
push
jbe
cmp
int3
add
mov
aad
out
loope
stos
int3
sbb
mov
xchg
xor
or
ljmp
dec
mov
jb
fsubrs
scas
xor
ret
dec
pop
sbb
aaa
bound
das
mov
call
insl
in
sbb
cli
xor
jle
sbb
cmpsb
push
bound
movsl
or
pop
add
adc
push
inc
sbb
sbb
enter
mov
jp
ds
adc
ficompl
insb
ret
call
mov
mov
jecxz
cmpsl
add
xchg
inc
xor
int3
shl
push
or
es
lcall
inc
loope
fdivrs
lret
lock
add
pop
in
mov
fdivl
and
sub
adc
push
sbb
xlat
push
fstpt
jge
pop
jbe
and
push
push
push
push
jmp
push
jecxz
mov
mov
in
stos
adc
stos
push
sub
push
mov
cmpsb
push
nop
loop
pop
test
sbb
push
sub
push
lock
insb
xor
and
dec
xchg
int3
clc
jne
in
loopne
push
loopne
adc
mov
push
jnp
fs
ja
mov
int3
into
cmp
popf
xchg
cld
pop
out
adcb
cwtl
xchg
sbb
pop
jle
xchg
inc
sub
aas
and
outsl
jle
icebp
xchg
xor
jb
pop
add
xchg
jbe
or
sbb
lds
lret
hlt
and
movsb
loope
aaa
xchg
mov
es
mov
outsb
xchg
xor
xor
push
movsb
imul
add
notl
xlat
mov
jnp
xor
subl
loopne,pt
imull
inc
adc
mov
jg
xchg
insl
mov
jo
test
clc
aaa
cld
popf
andb
fmuls
push
xlat
jb
lcall
lock
mov
ja
jmp
xor
idiv
adc
outsb
and
mov
in
test
imul
mov
push
das
clc
pushf
xorb
push
xor
add
sbb
nop
and
mov
mov
ss
test
pusha
mov
mov
pop
leave
push
fs
std
outsb
ret
fisubl
das
aam
das
xor
clc
dec
arpl
mov
lret
or
sarb
mov
and
decl
mov
pop
or
push
mov
cmc
outsl
shrl
std
out
cli
dec
and
sarl
mov
mov
mov
mov
mov
fiadds
adc
xchg
cmpb
test
popa
test
push
inc
push
mov
push
or
loop
rcll
cmp
inc
insl
ret
clc
data16
repz
fdivr
jg
jb
cmp
int
pop
lods
mov
sbb
sub
jnp
repnz
rcl
pop
fs
push
lds
inc
rorl
push
jle
jg
test
mov
jp
std
lret
add
jge
rorb
jp
out
dec
lret
in
cmp
or
push
pop
adc
cmp
std
addl
daa
outsb
and
mov
lea
insb
clc
adcb
dec
push
adc
inc
loopne
push
orl
add
fsubrl
inc
lds
mov
xor
xor
xor
pop
xchg
int3
lcall
fwait
movsb
pushf
xor
gs
mov
pop
dec
cmpsl
inc
dec
add
cmp
and
mov
scas
outsb
adc
xchg
jecxz
dec
mov
xor
mov
loopne
add
lock
xchg
mov
push
stos
fdivrs
cmpsl
or
dec
mov
das
dec
das
and
xor
jns
lahf
cmc
mov
sbb
cmp
pusha
mov
outsl
adc
jecxz
pushf
jl
sub
cltd
cltd
xor
stos
fisubs
xchg
fcompl
fsubs
adc
dec
cmpb
or
pop
sbb
call
js
mov
stos
push
xlat
movd
adc
mov
adc
and
sbb
mov
jmp
xchg
call
jp
xchg
jg
pop
mov
mov
call
orb
into
insb
divl
mov
sbb
sbb
jle
shll
inc
push
or
in
pop
hlt
sbb
add
add
add
cmpsl
fsub
xor
mov
jge
jne
push
orl
mov
push
and
outsl
es
sahf
cmpsb
add
ja
adc
pop
mov
add
test
jnp
testb
lret
mov
or
xchg
pop
xor
arpl
sub
sub
push
loope
xchg
shll
lea
sub
or
ljmp
bound
mov
xchg
stc
sub
mov
xor
or
dec
inc
rol
mov
loop
lock
je
addb
ja
movsb
repnz
and
xchg
repnz
enter
cmp
int3
inc
loope
ljmp
jp
push
stc
dec
adc
test
xor
push
ret
stos
mov
mov
push
gs
xlat
les
mov
and
lcall
lret
jl
dec
jb
test
ja
in
xchg
out
int3
pop
idivl
mov
push
ss
call
xor
nop
fisubrs
adc
mov
add
movl
imul
pop
pop
mov
mov
lea
mov
xor
insb
test
xchg
test
pop
dec
mov
pop
sub
cli
cmpsb
ffree
in
repnz
jge
das
sbb
mov
adcb
scas
test
loopne
pop
inc
sub
cmp
or
aad
lret
inc
inc
imul
ja
or
or
std
add
push
outsb
mov
push
inc
jecxz
test
stos
jecxz
test
push
jae
fnstcw
je
out
movsw
or
sbb
enter
push
int
xchg
stc
dec
add
push
jp
sti
or
lret
dec
mov
mov
jmp
fwait
add
jnp
sti
adc
js
jg
sbb
loopne
loope
ret
ja
mov
mov
aas
or
out
cwtl
push
jbe
xchg
and
add
dec
cwtl
pop
mov
in
mov
or
insb
xor
jne
pop
aam
inc
fwait
ljmp
out
xchg
push
dec
ret
andb
or
jns
stos
push
fists
pop
xor
inc
andl
shrl
int
xchg
ds
sbb
shll
insb
jns
jne
icebp
xor
shlb
dec
fmuls
sti
mov
mov
sbb
sbb
or
fwait
add
inc
and
sub
adcl
into
jmp
sbb
rolb
mov
add
mov
ss
or
push
xorl
mov
xor
xchg
outsl
push
adc
test
cmp
in
insl
bound
cld
xlat
and
push
pop
iret
xchg
lods
xor
pop
or
lods
mov
imul
lods
sbb
push
cli
mov
ds
gs
cli
pop
ss
clc
lret
xchg
push
es
lods
cwtl
mov
mov
addl
push
in
hlt
mov
pop
hlt
dec
das
lock
jge
inc
add
push
add
inc
test
and
jp
jp
fs
adc
push
inc
sar
lahf
sbb
mov
stos
mov
inc
inc
sbb
or
movsl
sarb
les
mov
sti
inc
mov
jecxz
and
cmp
fiadds
adc
or
arpl
les
jle
shll
mov
incb
jbe
mov
popf
cli
enter
mov
xchg
pop
leave
mov
lods
insl
push
mov
test
pop
cmpsb
sub
shlb
mov
xchg
mov
das
adc
xor
mov
ja
xchg
sahf
insl
shlb
jecxz
cwtl
orl
into
dec
add
bound
test
sbb
mov
sbb
jl
insb
std
ds
jg
lods
mov
xor
test
fdivr
popa
lods
inc
sbb
mov
into
imul
add
incl
push
xchg
push
mov
aad
idivl
cmp
cmp
add
jne
sub
je
aam
push
pusha
jp
pusha
inc
dec
pop
ret
fcompl
add
xor
and
popa
dec
stos
sbb
cli
int
add
fadds
push
or
int3
aam
cli
in
mov
ja
andb
ljmp
add
dec
xchg
outsl
movsb
xor
add
push
dec
es
push
ret
lcall
jl
push
pop
js
sahf
outsl
jo
jge
test
fsub
daa
sub
fsts
mov
cmp
shrl
mov
lods
fcmovnb
and
std
shll
jge
into
cs
pop
pop
sbb
pop
and
pop
xchg
push
cmc
mov
sbb
scas
jnp
dec
push
shll
js
sub
mov
jo
jle
les
xlat
dec
cmpsl
xchg
and
mov
jl
movsb
sbb
push
cmp
pusha
cmp
or
and
mov
jmp
loop
test
clc
cmp
mov
xor
insl
arpl
clc
inc
dec
pop
test
das
sbb
or
outsl
pop
ds
inc
aad
cmp
sbb
pop
dec
jns
icebp
cmp
add
mov
dec
or
scas
mov
mov
dec
dec
push
mov
push
dec
es
sbb
out
push
mov
loop
add
dec
inc
les
divb
add
mov
loopne
fadds
rcr
and
mov
out
rcrb
sbb
xor
clc
and
cmp
rol
sbb
mov
sub
lock
ret
adc
sbb
sub
inc
xorl
adcb
xabort
js
jmp
or
repnz
xor
jmp
or
xchg
call
mov
int3
xchg
jg
enter
dec
pop
push
je
rorb
sbb
or
mov
push
pusha
movsb
push
sbb
mov
repnz
ja
push
movsb
fwait
xor
or
add
xorb
shlb
stos
lcall
inc
mov
inc
push
stos
add
inc
addr16
mov
outsb
js
mov
mov
adc
pop
push
sub
stos
xlat
and
addl
jnp
dec
ret
add
inc
insb
dec
pop
sub
clc
mov
mov
imul
jne
sub
jmp
cmpps
jp
inc
sbb
and
js
cmp
pop
push
mov
rorl
xlat
mov
ret
movsl
les
lock
bound
mov
popa
cmpl
inc
or
mov
push
cld
push
ds
das
test
or
shlb
ret
mov
mov
pushl
fs
mov
push
xorl
xchg
jb
inc
pop
fmuls
je
int3
mov
adc
pusha
arpl
push
xchg
adc
cmp
test
xchg
cltd
inc
push
test
xchg
jno
pop
cmpsb
jns
mov
mov
repz
xor
testb
xor
ss
inc
pop
pop
push
mov
imul
imul
sbb
cltd
xchg
int3
xchg
xchg
clc
mov
jnp
cmp
mov
xchg
sbb
jns
inc
jne
outsl
mov
xchg
stos
pop
cmp
inc
enter
cmc
xchg
aam
clc
mov
subb
xor
pop
or
scas
xor
loopne
testb
faddp
cmpsb
xchg
aaa
lds
lock
jo
push
sti
std
loope
pop
inc
xchg
xor
dec
imul
imul
sti
jmp
adc
adc
push
or
mov
push
mov
push
ja
push
dec
loopne
mov
xor
subb
aas
sbb
cltd
push
into
xor
jmp
pop
mov
mov
jne
mov
or
and
cs
in
jle
ret
out
mov
push
subb
add
shlb
test
lock
into
xchg
push
and
jp
push
aam
push
roll
ret
pop
cmpsl
dec
cwtl
mov
sbb
pop
push
or
add
mov
cmp
pushl
add
sahf
ljmp
test
inc
pop
cwtl
bnd
clc
lock
xchg
mov
out
data16
jns
cs
push
inc
mov
mov
xor
xor
shlb
inc
aas
xchg
gs
ret
pop
enter
mov
fcmovne
pop
inc
sbb
gs
xchg
dec
or
xor
les
fcomps
push
ficomps
xchg
test
push
in
lods
movsb
shlb
jle
sbb
jmp
in
and
and
xor
popa
add
bound
xchg
mov
cmpsb
movsb
pushw
les
fwait
dec
adc
adc
jo
outsb
lret
pop
mov
sarb
scas
outsl
or
push
les
adc
push
xchg
mov
xor
rol
or
inc
addb
jl
xchg
and
repz
sub
or
pop
mov
and
fs
sub
pushf
xchg
imul
pop
call
test
or
movsb
arpl
cmp
cmp
cltd
mov
cmp
loop
and
sahf
out
jp
ret
xchg
lcall
pop
std
sub
sub
ljmp
into
ja
mov
shlb
les
adc
aas
jl
adc
les
pop
push
mov
outsb
sbb
push
lret
mov
jno
push
xor
movsb
fidivrl
sti
movsb
les
xchg
imulb
dec
out
in
ljmp
cs
cmp
ret
enter
add
mov
adc
mov
fwait
cmp
xchg
cmp
imul
fisttpl
insb
inc
in
sub
mov
aam
mov
jge
jno
icebp
inc
cmpsb
jns
loop
jmp
cs
lds
or
enter
mov
mov
lret
jbe
aad
outsb
adc
add
popf
adc
adc
mov
cmp
fcoms
push
loopne
pop
dec
add
mov
fwait
pop
sbb
xorb
jg
sbb
ret
jle
pop
or
mov
ficomps
inc
dec
push
test
sti
int3
fisttpll
incl
cmp
das
add
or
int3
pop
fs
sub
fwait
lahf
in
mov
call
mov
adc
aas
sub
add
fisttps
fs
sbb
mov
xlat
mov
scas
pop
and
out
cli
loop
and
cli
dec
in
jns
jmp
mov
cltd
sub
and
add
clc
ja
and
sbb
jp
mov
pop
call
push
and
cmp
ljmp
jnp
test
add
bound
push
shl
pop
push
or
mov
test
pop
xchg
pop
je
in
cmpb
jge
sub
ficoml
mov
out
cmpsb
in
inc
jb
addl
cli
loope
mov
cs
inc
jle
popf
adc
subb
inc
lock
add
or
sub
inc
iret
mov
fmul
lock
pop
cmpsl
jle
lcall
pop
je
jb
jge
add
push
movsb
push
test
mov
lahf
loopne
je
nop
out
cli
sti
mov
jns
cmpsl
in
outsl
dec
mov
xor
mov
mov
out
shlb
add
jnp
pop
mov
fisubrs
adc
ja
imul
push
std
cmp
mov
mov
sub
pop
test
inc
fimull
mov
sub
inc
xor
xor
cmp
insl
sub
sbb
movsl
mov
cmpsl
fcmovu
lcall
cmp
dec
bound
mov
and
pop
movsb
leave
outsl
fwait
jl
rorb
mov
lds
ljmp
mov
cmp
cld
add
sub
nop
adc
pop
std
xor
pop
mov
loop
daa
mov
outsb
jb
mov
scas
nop
mov
cli
mov
mov
pushf
cmp
aaa
nop
mov
call
mov
test
mov
sub
scas
cli
outsl
push
fcoml
out
decb
push
out
in
aaa
fsubrs
das
and
dec
inc
out
aad
add
in
bound
push
dec
in
subl
test
sbbl
cmp
xlat
adc
clc
lock
adc
xor
jle
cltd
and
cld
rolb
cmp
mov
shl
imul
incl
push
popa
cmpsb
dec
and
lcall
mov
push
push
icebp
lahf
fistpl
movsl
outsb
add
mov
cmp
leave
jno
iret
xchg
enter
adc
mov
lock
hlt
pop
push
jbe
mov
negl
pusha
imul
mov
xchg
clc
hlt
inc
add
imul
dec
pusha
add
pop
dec
mov
add
call
stos
rcrl
cmp
mov
or
push
out
fnstsw
adc
test
add
idiv
sub
mov
and
jp
sbb
push
insb
cli
jg
int3
call
sahf
mov
mov
addb
mov
add
incl
xchg
rcr
in
sbb
and
sbb
stos
lret
call
sub
mov
je
outsl
loopne
inc
push
dec
lods
addr16
mov
jb
stos
jbe
stos
stos
and
push
rclb
leave
aam
mov
out
inc
or
add
jge
fwait
mov
jbe
jnp
add
cmpsb
jns
and
pop
lds
adc
push
sti
aas
jp
div
mov
xor
repnz
fsubl
leave
and
add
in
xchg
pop
icebp
daa
xor
fsubl
out
add
xor
je
dec
mov
push
inc
nop
loopne
aaa
and
jmp
pop
imul
adc
stos
incl
mov
stc
add
clc
addb
inc
js
and
add
xor
clc
orl
add
mov
adc
mov
ret
add
cmp
push
sub
xor
ds
dec
jne
pusha
xchg
in
add
lret
mov
ss
fsubrp
mov
es
cld
loopne
pop
xor
mov
sub
pop
inc
pushf
mov
sub
movsb
mov
js
push
cs
mov
xchg
test
xchg
scas
lods
ss
mov
sbb
loope
lock
cmp
clc
test
add
xchg
adc
xchg
adc
dec
or
lahf
popf
nop
push
xchg
push
lds
enter
stos
in
enter
sub
in
mov
dec
scas
adc
inc
bound
iret
push
rclb
stos
add
sbb
add
mov
xchg
adc
xchg
mov
repnz
insb
popf
mov
add
adc
hlt
mov
bound
lock
nop
sbb
leave
add
jg
mov
mov
mov
clc
inc
sub
and
ret
cmc
stc
xchg
lock
xchg
pop
enter
push
inc
push
cld
add
inc
or
fsubr
bound
jmp
jle
xchg
or
outsl
mov
fcomps
dec
xchg
add
rcrl
fsubrl
lea
pop
dec
addl
xchg
mov
cwtl
inc
cmp
cli
test
rcl
inc
test
imull
loopne
shll
cmp
cld
add
sbb
fmull
xchg
dec
push
inc
mov
shll
or
test
sub
mov
hlt
mov
aaa
mov
test
cwtl
push
sarb
sbb
sbb
add
push
mov
cmc
xchg
and
add
push
mov
mov
icebp
sub
adc
adc
sbb
or
mov
lods
int
decb
lock
or
or
add
lret
test
ljmp
lods
or
push
push
daa
jg
mov
or
mov
inc
sti
or
add
movsbl
outsb
cmpsl
mov
cmp
push
dec
mov
lock
pusha
adc
fidivrs
call
sub
inc
imul
pop
lods
rclb
jb
or
lods
lret
cmp
jle
mov
out
sbb
les
push
lcall
xor
popa
push
xchg
mov
jg
in
push
jmp
fsubrs
or
rep
sub
call
pop
ja
sarb
xchg
xchg
inc
je
lods
repnz
das
fimull
jl
cmpsl
xchg
mov
jno
call
xlat
jb
aam
mov
cmp
xor
fnstsw
mov
mov
aaa
call
mov
ss
inc
movl
fldl
lret
jbe
notl
jo
mov
dec
ja
fistps
mov
mov
dec
mov
fbstp
dec
xchg
fidivrs
jle
idivb
xor
mov
ret
and
add
shll
shrl
das
out
shr
les
je
xchg
sbb
xchg
lcall
ljmp
cltd
rolb
mov
nop
scas
loop
adc
jle
or
mov
shll
fstpt
jnp
hlt
outsl
sub
sub
fsubs
ljmp
push
mov
push
inc
and
lock
mov
std
inc
dec
push
test
shlb
mov
out
lcall
mov
dec
and
mov
popa
xor
and
nop
or
outsb
xchg
shl
decl
mov
push
mov
ret
sbb
in
test
xor
and
arpl
adc
mov
pop
icebp
jecxz
aaa
jmp
lret
stos
mov
divb
mov
cmpsl
or
icebp
jmp
add
xor
icebp
dec
subb
jno
lods
fwait
cmp
inc
inc
cmp
movsb
mov
sbb
fsubrs
pushf
adc
inc
xchg
cmp
lods
decl
and
addb
mov
iret
fldt
cmpsb
mov
mov
xor
fwait
mov
push
or
or
es
fadds
xor
lcall
out
shl
call
test
in
aas
orb
fsubl
mov
imulb
mov
mov
arpl
cs
clc
fwait
scas
or
jg
faddl
jecxz
mov
push
push
push
pop
test
inc
add
dec
mov
cmpsb
les
dec
fwait
subb
pop
jge
loopne
sbb
js
cmp
das
ret
xchg
pop
push
xchg
dec
cmpl
les
loopne
dec
xchg
adc
add
dec
test
pop
push
adc
fdivrs
adc
cmc
mov
clc
jl
addr16
test
fisttps
xor
stos
mov
test
cmp
ret
cli
pushf
add
add
mov
cmovs
pushf
add
jb
cwtl
adc
push
and
out
fidivl
mov
cli
out
test
mov
outsl
mov
or
push
jno
fistl
in
scas
sub
call
outsb
dec
in
and
inc
mov
bound
sarb
jne
or
aam
cmp
xchg
js
sub
pop
sar
in
jmp
sahf
test
aas
testl
shrb
data16
test
sub
fcoml
mov
adc
movsb
fsts
sbb
scas
mov
xchg
cmp
jmp
xchg
mov
or
cli
insl
sub
out
cli
xchg
subl
or
frstor
outsb
mov
repz
out
jp
jle
lea
outsb
ss
test
hlt
sbb
imul
mov
test
sbb
lea
dec
push
cmp
lahf
es
js
push
xchg
xchg
cmc
push
cli
mov
cwtl
in
ficompl
pop
scas
das
fsubs
mov
ss
mov
xchg
in
mov
sub
lcall
jo
xor
scas
aas
xor
aam
mov
in
or
std
scas
jns
dec
adc
push
dec
inc
clc
pop
rolb
fs
cli
sub
sbb
in
push
fs
cltd
clc
jg
jno
in
out
adc
and
jg
cmp
mov
ss
into
xor
or
jno
hlt
cmp
fildll
sbbl
add
std
shll
cs
stos
xchg
and
jne
sub
add
ds
lods
mov
sub
std
push
add
test
mov
in
adc
jbe
nop
inc
mov
roll
filds
les
pop
push
rcr
stos
ljmp
mov
rol
and
imul
mov
sahf
rcrl
cmpsl
add
adc
xor
cld
adc
sbb
ds
enter
lds
pusha
push
js,pt
jle
adcb
jae
xchg
or
aam
aas
push
and
inc
ret
sub
pop
jb
xchg
push
mov
push
shlb
xor
mov
adc
subb
or
aas
pop
pusha
rcll
and
add
jnp
jb
icebp
mov
add
scas
ficompl
pop
xchg
fsubl
mov
sub
fisubs
cmp
aad
movsb
loop
push
jp
sub
insb
aad
test
cli
and
dec
jmp
sbb
les
les
push
data16
add
loope
subb
outsb
and
fcmovbe
adc
les
in
mov
jbe
push
popl
bound
fdivl
ret
imull
push
add
call
sarl
popf
stos
xchg
mov
stos
std
push
in
sub
ljmp
aam
jmp
push
inc
shlb
mov
stos
jg
sub
dec
lock
in
push
add
ds
into
dec
inc
fistpll
mov
xor
mov
xchg
test
add
cmpb
fidivrs
pop
icebp
mov
aad
mov
sub
mov
cmp
jg
and
ds
nop
stc
nop
rorb
inc
jge
dec
popa
lock
in
ja
xchg
push
add
push
and
push
fsubl
inc
lock
inc
xor
inc
xor
inc
mov
mov
jo
xor
xlat
mov
ja
pop
les
add
xor
mov
sbb
pop
ljmp
cwtl
add
cmp
jns
repnz
sbb
inc
lods
mov
mov
loope
scas
xchg
inc
sbb
fcomip
xchg
stos
cmc
mov
and
inc
push
pop
flds
call
sub
fcomps
mov
rcrl
imul
enter
jbe
xor
sbb
jge
sti
fcompl
push
pop
cmp
fs
testl
pop
dec
hlt
insb
xor
or
jp
adc
ret
mov
lahf
mov
mov
inc
mov
dec
in
pop
adc
stos
dec
fcomp
movsl
and
sub
nop
scas
jp
mov
sbb
mov
in
fsubrs
clc
add
push
pop
out
mov
lods
inc
rcll
mov
call
dec
loopne
sti
popa
jb
ljmp
xor
ljmp
pop
or
les
inc
inc
dec
jmp
push
and
lods
and
icebp
in
std
push
mov
loop
daa
in
jg
adc
divl
or
aas
add
sub
movsb
dec
stos
mov
mov
and
std
mov
je
mov
popf
test
add
fsub
mov
jecxz
sbb
lock
mov
shll
jmp
mov
std
mov
movsb
sahf
scas
adc
inc
or
fwait
inc
mov
out
lods
xchg
add
test
cwtl
mov
decb
iret
cmp
out
jmp
adc
cwtl
push
cmpsl
xor
inc
je
inc
add
out
insb
mov
movsl
sti
fwait
mov
pop
sbb
or
rcll
jbe
cs
sbb
mov
clc
hlt
pop
jge
scas
gs
cmp
fs
aaa
sub
jne
daa
mov
mov
in
pop
mov
cli
pop
fwait
dec
or
cltd
push
js
push
or
push
call
add
sbb
mov
stos
pop
loopne
dec
or
movsb
jge
pop
adc
outsl
cmp
mov
inc
jb
sub
pop
gs
sub
sub
dec
mov
icebp
jo
pop
cmc
in
je
push
pop
pusha
jl
pusha
push
mov
pop
mov
lock
movsl
xchg
fstl
gs
jg
cmc
fwait
stos
push
lods
pop
test
ss
je
add
mov
lcall
mov
cmc
xchg
mov
or
jle
mov
call
repnz
arpl
scas
mov
sub
inc
test
mov
popf
rorl
popa
xor
inc
mov
ljmp
sub
jnp
jo
push
mov
xchg
xchg
mov
pop
pusha
xor
push
xchg
jno
outsb
jecxz
and
xor
pushf
cmp
addl
and
pushl
cld
adc
mov
movsb
adcb
cmc
jmp
jmp
js
and
xorl
test
daa
cmp
pop
imul
lcall
and
mov
mov
outsb
aam
mov
add
ds
jg
aam
add
outsb
clc
loop
jb
jb
mov
mov
mov
add
push
addr16
pop
adc
enter
sbb
daa
incb
sub
inc
push
aas
insb
and
and
push
add
mov
loopne
mov
cmp
incl
das
cli
or
es
popa
jle
stos
sub
lods
inc
lods
add
or
in
sub
cmp
data16
test
cwtl
adc
lods
rclb
fcoms
insb
lods
sbb
push
mov
icebp
or
stos
push
ficompl
cmp
pop
jo
mov
or
mov
adc
imul
aas
in
cmp
aaa
sbb
inc
pop
lds
sti
fstp
les
or
ss
mov
jne
push
out
orb
adc
nop
lock
mov
fbld
rcrb
mov
mov
xchg
adc
mov
stos
mov
int3
and
scas
fcomip
mov
rcrl
push
pop
xor
dec
lds
cmc
xchg
xorb
dec
and
push
std
sub
add
dec
push
mov
cmp
mov
outsl
loop
dec
dec
dec
xchg
cmc
sub
je
cs
pop
outsl
cmp
fbld
jecxz
clc
movsl
xchg
mov
scas
je
push
ljmp
cs
inc
cmpsb
lret
dec
and
clc
and
inc
daa
lock
xchg
out
jg
loopne
inc
and
fs
xor
sub
adc
and
sbb
push
insl
jmp
jp
loop
xchg
mov
loopne
cwtl
xor
mov
or
cmp
push
pusha
push
and
and
stc
and
aad
cmpsb
pop
xchg
inc
inc
lods
xchg
add
mov
loopne
sub
add
sub
pop
sbb
add
mov
inc
xchg
sbbl
xor
popf
sub
mov
push
inc
mov
jae
add
add
and
mov
sub
cld
push
sub
pushf
or
lock
inc
and
mov
or
cs
and
loope
in
movsb
testb
xchg
inc
loop
inc
mov
test
push
test
divb
lahf
pushf
pop
xchg
add
in
mov
jle
ret
loopne
lcall
aam
pushl
nop
hlt
xor
cmc
inc
or
add
pushf
add
xor
pop
in
push
loop
add
arpl
dec
xorl
inc
movsb
push
insl
jo
inc
decl
inc
sub
and
xor
jo
push
lods
push
adc
jbe
ljmp
push
add
stos
lahf
and
fs
popf
roll
dec
ret
nop
imul
sbb
jns
adc
sub
add
aaa
mov
in
add
es
inc
lahf
std
ret
test
xlat
xchg
imul
jbe
adc
and
call
xchg
icebp
cmp
xchg
ss
inc
xchg
or
je
mov
jbe
int3
movsb
lock
add
or
mov
pop
and
push
in
mov
outsl
rorb
sbb
jmp
cmp
jnp
into
jp
ljmp
inc
or
mov
in
daa
dec
mov
xchg
cmp
shlb
mov
sub
sbb
rorl
popl
push
and
rolb
lret
inc
sti
dec
test
dec
add
stos
fimull
xchg
test
push
es
jne
pop
les
inc
inc
jmp
shlb
ret
mov
adc
fisubl
mov
mov
or
sbb
push
test
repnz
imul
xlat
loopne
addb
movsl
pop
cmp
mov
ret
sub
movsb
add
bound
xchg
sahf
pop
push
lret
mov
jg
jne
fisubrl
aad
in
jnp
push
call
loop
and
or
mov
das
jnp
add
mov
sbb
pop
mov
mov
fisubrl
adc
adcl
popf
add
dec
hlt
lret
bndstx
dec
sub
mov
pop
pushf
and
sbb
push
addr16
mov
inc
cmpsb
xor
mov
lods
or
fnsave
push
inc
xor
xchg
xorb
cmpb
ficompl
add
sub
and
stos
loope
mov
jle
pop
hlt
sub
sub
sbbb
call
sub
jge
add
sub
push
mov
and
es
dec
int3
cmp
xchg
dec
sub
inc
pop
inc
ret
aam
fstl
xlat
dec
sbb
jbe
mov
popf
fdivr
call
add
xlat
insl
in
and
sahf
in
push
shlb
int
jmp
mov
pop
jle
mov
xchg
xor
fcmovbe
ret
sub
or
jle
fdivs
add
jbe
mov
push
sub
adc
adc
cmpsl
call
dec
cmp
bound
xchg
icebp
adc
inc
lods
cli
inc
inc
mov
sub
and
stos
filds
imul
in
xchg
pop
push
xchg
fsubrs
repnz
lcall
xchg
pop
loopne
adc
sbb
pop
xor
out
dec
fidivl
xchg
movsl
es
push
add
enter
pop
add
mov
or
xor
lret
lcall
aam
ficoml
cli
filds
lahf
andl
or
adc
cmpsb
lock
or
out
sahf
mov
xor
mov
jp
xchg
cmp
loope
push
jae
std
dec
inc
xorl
mov
jg
ficomps
in
fildl
xchg
cmc
aad
add
and
in
inc
je
add
push
push
push
outsb
mov
push
adc
dec
out
xor
mov
xorl
or
and
lds
daa
dec
and
xchg
sbb
adc
fwait
loope
es
ja
sub
ret
dec
mov
mov
mov
cmpsb
pushf
xchg
dec
cmp
dec
jmp
mov
in
test
sbb
shll
and
call
push
sbb
adc
inc
push
cmp
add
pop
jo
push
mov
adc
and
loop
dec
call
and
mov
pusha
ds
or
ret
push
subb
pop
mov
dec
and
and
jmp
or
imul
xchg
call
setae
rcll
fadds
push
rcrl
aam
dec
int
clc
mov
ret
add
loop
pop
pop
push
or
mov
inc
popf
aam
pop
pushf
push
popa
push
out
sub
inc
or
inc
sub
sub
scas
add
and
dec
push
and
mov
mov
cwtl
stos
rep
add
orb
push
inc
fisttpl
popa
jmp
jbe
adc
movsl
pop
xchg
nop
push
push
jp
fwait
cmp
and
push
js
loop
or
dec
xor
jmp
outsb
mov
jmp
jno
pop
movsl
pop
and
mov
cli
xchg
pop
and
mov
test
outsl
es
cmp
pop
mov
mov
aaa
cmpb
mov
pop
jbe
ficoms
fistpl
test
sbb
mov
and
leave
ss
inc
jnp
aam
mov
out
jnp
xor
add
negl
add
fisttps
out
or
inc
adc
xchg
imul
jno
xor
inc
sub
inc
add
xor
jmp
mul
shll
mov
loope
dec
aad
xor
mov
mov
sbb
sub
popa
sti
lahf
and
push
jmp
lret
mov
mov
mov
cwtl
sbb
bound
xor
and
mov
ljmp
jecxz
adc
fwait
cmp
adc
and
lock
cpuid
clc
lods
cld
popa
add
xchg
repnz
push
xor
lods
icebp
sub
outsl
mov
add
andb
cmp
insb
cmp
jbe
js
ljmp
out
fs
arpl
add
pop
mov
repnz
mov
loop
jg
or
push
pop
insb
pop
enter
dec
cmp
add
mov
pop
or
fwait
scas
cmp
inc
ljmp
movsl
rorb
test
leave
pushf
pop
push
roll
adcl
adc
sbb
cs
jmp
mov
push
adc
cmovge
popf
jo
sbb
add
mov
ficoms
mov
cld
dec
xor
inc
cwtl
sti
jecxz
xor
repnz
lcall
inc
cmpsb
adc
bnd
mov
fldln2
into
jge
pop
popa
adc
cld
insl
jge
xchg
push
fsubs
hlt
loop
cmp
hlt
sarb
dec
sbb
cli
pop
outsl
mov
xor
push
sbb
pop
mov
shlb
adc
jb
adc
mov
cld
mov
fiadds
pop
push
dec
sbb
xchg
fwait
lea
sub
lcall
lea
xchg
rclb
enter
decl
pusha
xor
in
lods
and
shlb
mov
movsl
adc
jo
push
push
ficoms
cmp
sbb
cmp
push
repnz
or
sar
rclb
mov
clc
ljmp
test
cwtl
dec
dec
sub
inc
test
mov
punpckhbw
stos
outsl
lods
sbb
ds
fmuls
das
js
xchg
rolb
gs
aas
mov
repnz
push
jg
sub
scas
adc
mov
scas
fisubs
call
std
mov
pushf
dec
icebp
pop
fiadds
outsb
in
call
dec
xor
mov
aam
hlt
cmp
push
cli
mov
std
notb
inc
push
and
outsl
xor
xchg
pop
xor
cmc
push
clc
dec
js
or
mov
xchg
sub
enter
pop
push
mov
sub
and
jmp
mov
pop
add
pushf
inc
mov
add
jl
imul
cmpl
push
mov
push
mov
call
dec
cld
inc
inc
mov
in
call
mov
cmp
les
adc
cld
lcall
adc
dec
xchg
loope
outsl
sbb
cld
cmpsl
int
repnz
inc
mov
clc
aas
xchg
out
push
cmp
fisubrs
xor
cmp
mov
fidivrl
movsl
fwait
enter
stos
pop
fisubs
adc
incl
decb
mov
imul
xchg
sub
lcall
idivb
adc
sub
push
std
sahf
sub
cld
add
fistpll
or
push
and
mov
adc
dec
dec
iret
out
js
cmp
lret
sbb
ret
sbb
pushf
fimuls
push
in
push
push
outsl
xlat
test
aad
adc
in
lods
test
jle
add
scas
mov
shlb
mov
stos
ficompl
mul
das
js
mov
in
mov
sti
stos
cmp
pop
mov
sbb
add
mov
test
adcb
adc
dec
xlat
add
addl
inc
dec
pusha
into
jnp
sub
stos
mov
push
inc
jmp
xor
jle
insl
sbb
bound
fisubl
jae
add
and
add
fldt
mov
pusha
push
dec
sub
fistl
fcomps
testb
movl
hlt
adc
sbb
xchg
adc
push
xor
mov
xchg
push
push
mov
jle
mov
pop
dec
push
jg
jbe
jl
into
jns
inc
inc
or
inc
movsb
mov
loope
or
adc
pop
or
dec
dec
push
adc
xor
pusha
fistps
mov
xor
inc
hlt
add
mov
sbb
pop
mov
xor
sahf
xor
cwtl
aaa
inc
pop
idivl
sbb
das
ss
jg
inc
fadd
inc
divl
fsubrs
mov
mov
push
call
jp
jmp
cld
mov
adc
outsl
mov
inc
mov
add
jo
mov
inc
jmp
xor
pop
mov
mov
test
loope
fistl
cmpb
mov
xchg
test
cmp
gs
push
sub
ja
call
and
lcall
inc
jmp
outsb
mov
repnz
dec
popf
xchg
or
push
dec
outsl
ljmp
leave
push
jmp
adc
dec
fadd
push
lods
inc
inc
lea
mov
adc
adc
add
ret
repz
xorb
xchg
test
adc
loope
xor
pop
movb
cmc
scas
add
outsl
dec
sbb
mov
je
out
sub
mov
push
xor
mov
pushf
inc
xchg
xor
loopne
loopne
push
ss
or
insl
divb
and
stos
dec
adcb
outsb
outsl
lods
shlb
mov
insb
std
std
in
pushf
mov
fcomps
and
aas
shrb
loopne
insb
data16
lret
jbe
scas
fdivs
dec
cwtl
cltd
cli
xchg
xchg
mov
jnp
in
xchg
inc
cmpsl
mov
push
adc
cwtl
mov
rcrl
xchg
sbb
add
out
rcl
jmp
popl
das
out
adc
cs
sub
jb
dec
push
lea
int
inc
sub
xchg
inc
jo
or
fistps
pop
lea
out
jno
cmp
pop
pop
mov
cmpsl
cwtl
fs
mov
or
dec
es
out
inc
fnsave
inc
sbb
mov
in
dec
das
push
push
inc
mov
inc
add
scas
insb
jecxz
outsb
test
jnp
ss
ror
xlat
xchg
orb
mov
pop
jle
outsb
sub
adc
or
pusha
fnstcw
out
adc
adc
fidivrs
or
adc
push
adc
cmc
or
aaa
cmpsl
fidivs
inc
cmp
les
add
lods
fadd
sub
pop
xorl
mov
or
mov
xchg
std
sbb
incl
push
push
out
or
mov
cmp
mov
stos
inc
lcall
sub
add
sub
lret
cmp
xchg
outsl
call
push
lods
ja
adcl
cs
add
push
adc
mov
es
or
jecxz
pop
dec
test
es
ss
mov
dec
andl
aas
test
enter
and
sub
jecxz
lret
mov
test
pop
out
push
mov
sbb
or
sub
fsubrl
jmp
ja
or
call
mov
fwait
cs
adc
and
adc
frstor
or
dec
xchg
pop
dec
mov
inc
xorb
ljmp
lods
repz
xchg
sub
xchg
xchg
jp
cld
push
je
mov
or
mov
lock
movhps
and
negb
cmp
mov
movsl
mov
and
cmp
ret
scas
les
cmpb
lods
and
cld
outsl
push
sbb
in
inc
imul
and
rorb
jb
pop
shlb
push
fistps
movsl
nop
adc
cmp
es
out
dec
pop
std
jg
or
cmc
adcb
movsl
push
int3
rorl
mov
loopne
xor
addl
aaa
jo
ret
inc
stos
push
push
jge
jo
pushl
xor
jmp
lcall
movsl
enter
fdivs
xchg
mov
jns
mov
jns
jecxz
cmp
lea
outsl
inc
sbbb
mov
lea
dec
jl
mov
cmp
icebp
or
add
std
insl
and
jmp
cmc
cmpb
mov
sub
aaa
fcmovnb
imul
push
cmp
xor
ljmp
pushf
in
clc
pop
and
icebp
icebp
adc
cmp
fisttpl
xlat
xchg
lock
orl
pop
cmp
jg
aas
movsb
mov
xor
or
les
mov
xor
ret
pop
popf
mov
push
jecxz
xchg
loopne
or
jle
stos
jns
xor
test
cld
fwait
mov
leave
mov
cmp
inc
inc
movsb
aaa
mov
repz
lock
mov
orb
pop
addr16
aaa
clc
xchg
fadd
or
add
loop
push
xchg
incb
and
fmul
push
cmpsl
call
sub
clc
dec
out
mov
ja
aas
int3
or
sbb
ss
icebp
inc
dec
push
scas
fistpl
test
xchg
xor
sahf
sar
aas
sahf
idiv
and
mov
inc
mov
fnsave
adc
jno
dec
push
mov
xor
cmp
jo
testb
mov
addr16
push
mov
jmp
pop
cmp
sbb
pop
push
in
lock
pop
add
mov
sar
dec
mov
fiaddl
aam
out
push
dec
mov
imul
mov
xchg
fisubrl
or
sub
lret
cli
push
adc
pop
and
bound
lcall
add
cmc
xor
popa
xor
mov
adc
push
fidivrl
test
lcall
fwait
xor
add
out
sub
insb
sbb
xchg
outsl
lcall
mov
lcall
fs
xchg
pusha
add
jmp
mov
mov
xor
mov
fcmovnbe
movsb
and
push
mov
cli
add
nop
jmp
ljmp
jp
popa
inc
pop
test
cmc
mov
in
es
rol
push
dec
jb
ljmp
mov
dec
aas
fiaddl
cwtl
push
inc
jg
movsb
imul
cmpsl
push
cwtl
lods
or
jnp
addb
aaa
stos
adc
adc
test
dec
push
sub
test
jge
jbe
hlt
add
and
movsb
add
mov
fisubs
jmp
cmp
pushl
add
sbb
pop
out
pop
sub
test
sbb
jno
xor
ret
adc
or
jb
test
bound
adcb
in
add
daa
into
aaa
mov
fildl
cli
cs
dec
mov
sub
mov
cltd
add
sub
out
pop
and
jne
or
add
movsl
call
test
mov
stos
pop
scas
decb
or
subl
mov
push
and
aaa
std
mov
mov
pop
fwait
cs
sub
lahf
sar
dec
sub
mov
mov
leave
cs
mov
add
cld
rorb
mov
dec
ret
nop
jp
mov
negl
call
aam
xchg
in
mov
clc
xchg
subl
add
mov
jne
in
fcoml
push
aas
hlt
ret
insb
jle
clc
adc
jae
add
fbld
movsl
pop
jno
imul
pop
ret
jbe
adc
inc
xor
mov
mov
jge
jne
adc
and
inc
repnz
xor
adc
sbb
into
cld
mov
dec
inc
lahf
mov
push
mov
mov
test
and
or
or
sti
mov
dec
mov
jge
hlt
ret
push
add
call
das
dec
lret
sub
leave
stos
push
push
imul
inc
or
rol
and
adc
cmp
mov
pop
and
lret
lret
test
mov
jl
add
adc
or
add
icebp
fldcw
es
lret
mov
push
imul
pop
mov
les
ss
into
js
push
insl
pusha
jl
add
jae
pushl
cltd
out
adc
lods
dec
sub
loop
cmp
rorl
adc
mov
out
lds
out
sti
or
pop
out
popf
stc
xor
gs
out
rep
and
fisubs
in
fidivl
dec
cmpsb
out
adc
sbb
mov
adc
sub
adc
clc
ja
cmp
mov
addb
rol
mov
loope
fisubrs
call
aas
in
addr16
loopne
sub
push
mov
in
push
subb
dec
pushf
add
addb
loopne
rolb
sub
test
sub
shr
sbb
pop
stos
mov
dec
push
repnz
inc
pop
call
lret
xchg
mov
jo
fnstsw
sbb
push
icebp
jbe
gs
insb
gs
add
dec
mov
imul
adc
add
arpl
stos
sub
mov
xchg
inc
sbb
sub
xor
pop
repz
pop
and
xor
mov
imul
mov
lods
fadd
test
pop
pop
gs
js
out
inc
dec
adc
jecxz
std
jp
adc
iret
xchg
sahf
dec
add
pop
dec
sub
add
ficoml
test
cmp
jl
xor
out
sahf
cmp
outsb
push
cmp
add
push
jbe
fsubs
mov
xor
ret
lock
and
pop
jno
aam
shrl
lcall
jbe
je
movsb
mov
xor
fidivs
xlat
out
adc
sub
add
mov
cmpsb
mov
dec
mov
rol
inc
and
lock
add
add
mov
mov
xor
bound
or
and
push
and
add
sbb
loop
sbb
pop
xchg
aam
adc
clc
lret
sbb
mov
push
push
daa
lcall
jmp
mov
testl
xchg
pop
ljmp
push
js
out
sbb
mov
cmp
jl
and
push
ret
xchg
jbe
jle
dec
jg
ret
push
add
mov
mov
imul
sub
ja
mov
jnp
jl
cmp
sbb
and
loope
pop
movsl
mov
in
jmp
mov
clc
hlt
decb
pop
in
les
in
scas
sbb
jg
std
jmp
dec
icebp
fstl
sbb
jmp
add
hlt
sub
inc
inc
or
add
scas
je
jnp
repz
and
ja
push
hlt
daa
imul
int3
sub
cmpsl
mov
dec
jo
sbb
adc
in
mov
pop
cs
add
adc
add
mov
lret
fildll
mulb
adcb
xchg
rorb
mov
mov
or
add
cmpb
jle
fsubr
fisttpll
test
mov
stos
ljmp
hlt
test
test
push
sbb
pop
and
xor
loopne
jnp
hlt
mov
fdivrl
js
mov
adc
cli
ret
outsl
cltd
clc
or
jno
cmp
mov
pop
or
mov
mov
stc
sbb
mov
icebp
cmpsl
mov
fsubl
inc
pop
push
xchg
andb
test
sarl
addr16
xor
ds
pop
mov
ret
sbb
movsb
adc
and
cmpsb
cmp
pop
mov
cmp
das
sbb
fwait
inc
xchg
mov
push
xor
inc
or
andb
and
arpl
lea
shlb
test
cmpsb
cwtl
in
xchg
insb
shlb
insb
mov
push
pop
dec
jg
cld
and
mov
cmp
jp
cmc
test
sbb
mul
out
pop
add
xchg
push
or
sub
mov
sub
xchg
sub
and
mov
ficomps
mov
sahf
js
dec
jp
jmp
xchg
push
sti
test
rorb
push
mov
outsl
and
leave
stc
jg
into
lods
stos
mov
sub
dec
je
mov
mov
or
mov
adc
mov
push
adc
cmpl
call
mov
dec
aaa
call
dec
stos
jbe
mov
pop
js
out
xchg
pop
xor
aaa
dec
fbstp
cmp
jo
in
push
mov
xchg
lahf
shr
movsb
push
cmp
inc
inc
sub
rolb
sbb
adc
push
fdivrs
mov
push
adc
xor
leave
jg
mov
xchg
movsl
jl
addl
sbb
test
cmpsl
push
add
jmp
jb
aad
mov
gs
stos
and
setb
ret
or
xchg
mov
call
fbld
fidivrl
and
leave
lahf
scas
push
mov
movsb
repz
jle
inc
xor
test
lcall
lods
xchg
or
stos
push
pop
xor
incb
push
das
mov
push
enter
adc
dec
cmpsb
scas
inc
jg
pop
clc
mov
dec
imul
mov
nop
loope
mov
lock
jl
fdivs
jmp
aad
outsb
sbb
in
data16
stos
xchg
loope
ja
xchg
cmpsb
in
mov
outsb
add
ret
add
push
outsb
xchg
push
inc
outsb
lcall
or
xorb
push
add
clc
xor
test
add
add
pop
icebp
rorb
mov
push
cmpl
dec
mov
iret
out
fsubp
outsl
loopne
mov
xchg
sub
push
mov
test
cmp
call
xchg
fisttpl
and
minps
or
mov
jl
aam
jmp
pusha
xchg
pop
mov
cmp
xchg
push
shrl
mov
ds
enter
out
das
xor
mov
mov
or
sub
leave
push
mov
pop
mov
into
lock
movsb
in
inc
loopne
add
pop
jb
mov
jmp
idiv
or
pop
cld
call
imul
hlt
scas
push
fdivp
addr16
loopne
in
dec
lea
push
lds
decb
fsubl
mov
xchg
jns
push
mov
cmp
pop
xchg
daa
jl
jmp
or
mov
fistpll
stos
ficomps
sbb
add
or
push
dec
std
sub
jg
xchg
mov
call
jle
xor
inc
xchg
jae
into
xor
pop
cli
aaa
jecxz
mov
mov
lods
push
adc
lahf
outsb
jecxz
clc
scas
js
sub
push
or
lret
stos
mov
pop
int3
sarb
leave
in
mov
out
sbb
cli
lock
std
add
and
and
jecxz
push
mov
fisttpl
loop
push
pusha
push
xor
push
sub
pop
mov
jmp
addl
and
ljmp
xchg
mov
inc
and
adc
push
dec
push
nop
cmp
jle
repz
add
jo
cmc
jl
iret
xor
push
mov
mov
cmpsb
icebp
incl
out
mov
insb
cmp
adcb
js
and
fadds
pop
fdivrp
mov
mov
sub
fisubs
adc
bound
jle
mov
inc
fs
add
dec
xor
xchg
decb
push
inc
pop
jns
jecxz
repz
sub
sbb
fs
cli
xchg
mov
popf
repz
push
mov
mov
inc
inc
rcl
fistl
fildll
call
inc
cltd
mov
enter
in
xchg
je
sub
je
insl
fstps
clc
cmpsb
stos
cli
mov
jecxz,pn
mov
dec
aad
cmp
lret
dec
adc
pushf
mov
movl
movsb
fistpl
es
scas
mov
scas
lcall
fcoml
adc
cltd
sub
dec
lcall
and
lcall
scas
test
std
mov
inc
add
push
add
mov
aam
fucom
int3
adc
cmp
inc
cmp
mov
je
mov
adc
dec
push
shll
pop
mov
sarl
imul
push
cwtl
mov
cmp
jp
and
adc
dec
add
fcmovnb
cmp
insl
ret
or
out
sub
fiadds
xchg
decl
das
inc
rcrl
and
mov
or
ja
outsb
test
je
icebp
jne
mov
mov
rol
xor
cmp
rorb
mov
pop
cli
outsl
ja
pop
mov
xchg
add
call
xchg
mov
jmp
cli
stos
cmpb
and
ss
into
fwait
outsl
dec
mov
inc
sbb
arpl
sbb
pop
cmpsl
push
jbe
rorb
call
pop
loop
mov
popf
shlb
pushf
outsb
push
dec
add
leave
xlat
loop
shrl
pop
les
sti
sbb
pop
pop
test
js
insl
aaa
pusha
xor
jl
inc
push
jg
adc
and
movl
jge
aam
inc
sbb
jmp
mov
clc
push
sub
mov
ss
lret
xor
inc
jbe
xor
nop
push
push
add
adc
add
sarb
insb
add
cli
lock
fwait
mov
mov
jo
stc
loope
bound
push
fisubs
sub
sbb
dec
fstps
es
leave
xor
clc
addb
push
mov
inc
decl
sahf
adc
hlt
cmp
scas
pop
mov
add
or
jno
or
int3
ret
xchg
mov
into
push
cwtl
mov
jp
mov
add
push
push
dec
ja
adc
lods
or
pushf
loope
pop
andb
ljmp
mov
pushf
xchg
jle
repnz
fucomp
push
jbe
pop
sbb
sub
sub
sub
subl
add
in
jmp
cmp
push
pop
stos
or
fmul
dec
and
test
push
xor
mov
ret
lahf
push
sbb
or
mov
aad
stc
inc
jbe
and
stos
test
fnstcw
xor
in
movsl
movl
jbe
push
movl
xor
or
adcl
add
ret
rcrb
fdivrs
jae
ljmp
imul
jo
xor
pop
js
lods
rolb
pop
lret
or
ficompl
xor
pusha
fists
push
or
adc
push
aas
es
push
pushl
incb
inc
pop
mov
rclb
add
jbe
inc
cmp
in
ljmp
inc
out
jae
cld
jmp
fidivrs
add
pushf
add
gs
std
int3
jno
loope
pop
xor
ss
je
push
push
cli
adc
jbe
int3
cmp
add
faddp
cmpsl
push
push
aaa
mov
pop
mov
mov
mov
into
ret
mov
dec
adc
dec
fs
test
sbb
movsl
push
inc
shrl
inc
pop
push
fsubrl
mov
shll
add
cli
add
les
add
jl
mov
mov
fwait
xor
and
lock
loopne
lcall
inc
mov
aas
pop
dec
enter
outsl
cld
fs
std
shll
cmpsb
or
aaa
adc
out
inc
jg
xlat
cs
mov
push
sarb
mov
adc
nop
loope
or
mov
rolb
pop
clc
or
mov
add
push
int3
loopne
mov
mov
mov
mov
nop
addr16
dec
or
cmp
lods
std
adc
testl
xorb
add
loopne
clc
repnz
test
loop
push
jmp
adc
inc
xchg
or
int3
cld
inc
std
push
insl
out
loope
add
cmp
orb
aad
pusha
or
insl
cmp
and
and
mov
pop
icebp
jg
insb
mov
mov
xchg
xor
cmp
rcrl
or
add
ljmp
jp
add
sub
xor
dec
xchg
adc
outsb
add
lock
repnz
test
push
sub
cli
sbb
adc
pop
xchg
push
add
or
ds
sbb
orl
dec
aad
std
inc
in
mov
add
sbb
das
inc
mov
sbb
xchg
mov
shlb
add
adc
pop
fs
daa
pop
or
push
into
mov
pop
adcb
in
and
push
clc
dec
pusha
out
mov
mov
sbb
cmpsb
fimuls
xor
cmpsb
stos
test
adc
and
imul
pop
or
sbb
pop
mov
push
adc
leave
xchg
daa
xlat
jle
sahf
fsubrl
jnp
pop
mov
mov
cs
mov
fisttps
int3
add
mov
adc
dec
mov
jmp
popf
add
aas
decb
mov
mov
xor
js
lcall
cmp
mov
inc
pop
imul
rcll
lcall
mov
mov
int
cmpsl
cmp
sbb
dec
dec
add
or
inc
jge
adc
mov
mov
or
fbstp
sbb
bnd
xorb
rcr
xchg
sbb
std
mov
xchg
push
dec
mov
xchg
jno
or
push
add
fdivl
adcl
lods
test
dec
mulb
jl
sbb
cmc
fimuls
xchg
lods
dec
icebp
cmpsl
push
mov
mov
mov
sbb
insb
sub
imul
add
test
push
nop
lock
enter
cmpsb
hlt
and
sub
or
fcoml
pop
or
lcall
mov
xor
nop
aam
inc
testb
mov
dec
push
scas
add
lea
rcl
decl
add
movsb
push
cwtl
icebp
jmp
rclb
fidivrl
xchg
lahf
xor
bound
arpl
pop
push
loopne
jg
stos
out
or
inc
jecxz
jb
and
dec
and
add
js
lods
pop
lahf
sub
sbb
aad
shll
mov
loopne
push
imulb
adc
cltd
imul
or
mov
xchg
fistpll
jle
pop
fsubrs
fs
push
push
lods
decb
jg
subl
repz
repnz
cmp
dec
pop
mov
scas
xorb
jb
or
mov
cmp
mov
subb
int3
mov
inc
or
repnz
fst
push
push
sub
dec
popa
movsl
sarb
stos
jl
mov
cmp
mov
sub
mov
inc
enter
cmp
cmpsb
call
and
lock
dec
int
sub
pusha
add
loop
or
add
rcr
cmp
pushf
clc
test
movsl
and
incl
cwtl
mov
and
sub
cltd
sub
movb
xchg
out
mov
push
add
sub
cmpsb
into
sbb
cli
mov
ss
adc
movb
in
pop
adc
shrb
lods
jg
aaa
lcall
cmpsl
sbb
or
lods
nop
lods
jne
cwtl
lods
mov
pushf
pop
test
cwtl
dec
cmc
outsl
mov
aaa
mov
test
inc
das
mov
mov
cmc
inc
ret
inc
cmp
cmpsb
xchg
add
stc
aaa
sarb
mov
aad
rol
dec
call
lcall
mov
add
bound
outsb
sahf
ds
push
imul
call
dec
adc
mov
sub
shlb
push
inc
xor
mov
xor
xor
pop
test
sub
fnstsw
add
add
lea
jp
icebp
add
call
mov
xchg
fidivrl
pop
dec
and
push
int
iret
push
lock
loopne
stc
icebp
xchg
enter
movsl
pop
sbb
mov
mov
outsb
notl
inc
test
pushl
sar
ljmp
adc
lods
jmp
push
pop
or
dec
sbb
out
jecxz
cld
call
xchg
nop
leave
add
cmpsb
jmp
pop
pop
pop
orb
mov
outsl
mov
in
xchg
into
inc
or
xorb
sub
push
lds
dec
stc
pop
scas
pop
cld
mov
fsubl
int
aam
sbb
ret
mov
or
cmp
or
outsl
test
mov
inc
popf
and
ss
bound
adc
dec
movsl
sbb
lret
enter
icebp
hlt
rcrl
or
mov
sub
xchg
div
push
add
or
hlt
pop
pusha
xchg
lret
mov
fmuls
push
mov
mov
sahf
mov
jecxz
shl
and
gs
ffree
jp
xchg
outsl
movsb
xor
jmp
mov
mov
adc
adc
loope
add
sub
xor
mov
das
clc
fs
lds
or
mov
add
pop
movsl
clc
nop
mov
les
lock
clc
lods
stos
add
ret
mov
dec
ss
xchg
adc
mov
add
and
xchg
sarb
push
roll
loopne
clc
int3
sbb
stos
xor
cmp
and
gs
push
rorl
push
adc
out
dec
decl
pop
pop
mov
mov
mov
push
sbb
loop,pn
pop
fistpll
add
cmpsb
repnz
mov
ds
mov
sbb
push
or
shll
nop
ret
jae
data16
filds
clc
xchg
adc
loopne
cmp
xchg
mov
les
stc
loope
mov
jl
int
pop
mov
imul
shl
adc
mov
jo
pop
jl
test
int3
scas
notb
dec
insb
push
adc
mov
rorb
jne
outsl
sbb
add
in
outsb
fidivrl
hlt
mov
xlat
out
sahf
loop
dec
mov
std
cmp
lds
shr
fwait
stos
jle
mov
test
mov
xor
dec
mov
and
decb
adc
ss
mov
jg
jg
push
and
and
mov
jbe
xorb
daa
out
mov
add
std
cmp
inc
das
xor
jp
jge
icebp
stos
aam
mov
aaa
add
dec
sub
xor
fmuls
pushl
aaa
pop
je
cmc
mov
sub
inc
lret
push
adc
jle
push
insl
cmp
pusha
mov
mull
fbstp
xchg
pop
push
jg
rcrb
out
or
mov
push
cmp
inc
enter
push
sbb
sub
in
pop
push
push
push
mov
fisubrs
mov
adc
dec
ss
clc
sub
cmp
or
aad
std
cmp
cmp
push
mov
pop
dec
adcl
xchg
clc
pop
add
lret
sub
sbb
add
mov
lods
pop
nop
cltd
fsts
movsb
lret
xchg
add
scas
sub
cs
lods
mov
ss
lea
mov
pop
clc
add
lcall
stos
mov
ljmp
ja
decl
stos
mov
cmc
cmp
jge
out
push
inc
mov
rclb
sbb
adc
inc
or
call
mov
ficomps
call
pop
in
js
mov
lahf
sbb
out
add
pop
dec
insl
add
pop
push
cli
jne
lock
in
push
push
jmp
or
js
push
fidivrl
hlt
rcr
push
pop
jb
daa
cmp
push
mov
pop
sub
lds
cmpb
jo
and
incl
pop
sbb
inc
ja
std
pop
add
and
pop
jbe
add
jecxz
pop
push
jecxz
push
push
sub
ss
scas
fs
sbb
mov
test
clc
xchg
movsb
dec
push
test
jnp
cmpl
jbe
aaa
adc
pop
stos
sub
gs
push
mov
cmove
negl
fldt
pop
mov
nop
jns
jne
out
rcr
and
jl
mov
lds
lods
push
lahf
xchg
cmp
ret
add
in
dec
popa
jg
add
or
add
xor
daa
decb
or
test
jb
cmp
add
and
add
and
outsb
addb
cwtl
xchg
incb
dec
sbb
sub
or
push
cmp
jbe
out
shll
aas
cld
mov
jmp
repz
test
ret
jl
pop
add
movsl
call
mov
in
push
lcall
test
cld
push
shr
pop
pusha
shlb
add
mov
push
in
test
or
add
cmp
test
insb
xor
mov
mov
push
jle
inc
add
push
clc
clc
mov
js
lock
sub
clc
mov
in
cmp
stos
ret
sbb
sbb
pop
and
in
data16
sub
into
pop
dec
loope
les
cwtl
mov
sahf
je
mov
adc
jl
aas
sbb
aas
fprem1
sub
xchg
adc
mov
jnp
fmulp
sub
mov
pushl
cltd
lea
pop
fbld
loope
out
pop
and
loop
xchg
pusha
mov
mov
jecxz
mov
orl
nop
jmp
in
pop
dec
lea
and
fcmovbe
push
adc
repz
fwait
pusha
sti
or
sub
adc
mov
aas
test
ljmp
fcmovb
ret
icebp
scas
out
and
adc
cmpsl
lea
das
dec
push
shrb
dec
jge
add
inc
stos
rorb
mov
or
loopne
rorl
loopne
aad
jg
pop
jo
mov
ret
add
arpl
out
movsl
xchg
rolb
in
pop
pop
les
jmp
inc
out
sbb
leave
push
inc
rorl
pmaxub
push
dec
xor
jbe
dec
pushf
loopne
cmc
sub
jg
jle
ja
xchg
jge
filds
push
or
cld
jp
icebp
fstl
or
std
movd
pop
or
gs
or
xor
xchg
jns
mov
push
stos
mov
jmp
xor
rclb
ret
mulb
mov
test
test
dec
pop
lahf
pop
hlt
push
adc
rclb
cwtl
movsl
movsl
ja
dec
int3
in
cmpb
loope
xor
dec
push
or
lds
xchg
pop
test
mov
cs
xchg
call
add
cmp
insl
call
push
pop
hlt
adc
xor
ljmp
pop
aaa
insl
pop
je
shlb
pushf
aad
nop
pop
mov
push
les
pop
lcall
imul
mov
pop
sbb
xchg
in
outsl
sbb
into
imul
sub
popa
test
test
jle
idiv
mov
out
jl
ret
mov
fldt
cmp
sbb
or
icebp
fwait
lea
push
ja
push
sbb
sbb
xor
fcmovnb
fistpll
xchg
cli
jmp
push
jge
movsb
adc
push
add
ret
jo
inc
test
call
xor
mov
sbb
es
adc
roll
mov
arpl
inc
test
mov
mov
or
imul
mov
in
das
cmp
sub
loope
mov
mov
mov
sub
repz
push
xchg
js
test
ljmp
cmpsl
dec
faddl
jne
inc
cmp
aaa
cld
pusha
mov
loope
les
adc
mov
mov
jbe
pop
js
pop
pop
mov
adc
out
out
pop
aad
call
dec
ret
icebp
decl
dec
xor
bound
movsb
xor
decl
mov
adc
fwait
sub
cs
xchg
adc
pusha
add
pop
pusha
int3
hlt
xchg
inc
incl
push
test
out
mov
sti
push
movl
bound
mov
xor
repz
sub
ffreep
pop
rorb
out
xor
jb
mov
insl
movsl
xchg
test
inc
and
pop
rcr
loopne
mov
movsb
xchg
mov
adc
outsb
cli
fadds
hlt
xlat
dec
cmp
pop
inc
mov
cwtl
cs
and
popf
shrb
mov
dec
dec
inc
push
arpl
dec
add
push
cli
repz
lock
adc
mov
arpl
push
inc
pop
cmp
and
jb
push
push
std
push
cmpsb
pop
sub
aaa
mov
cld
mov
aam
push
fisubrs
jl
dec
dec
mov
test
inc
aad
mov
dec
jl
aam
jo
arpl
subl
cmpsl
loopne
mov
pusha
sub
pusha
adc
jmp
jo
iret
sub
mov
mov
sbb
inc
mov
xchg
jle
orb
pushf
andl
mov
fsubrs
je
add
mov
xlat
sarb
ss
fisttps
adc
shll
outsb
lods
adc
mov
shr
mov
sahf
mov
jl
sbb
xchg
or
scas
insb
mov
dec
xchg
xor
fs
nop
or
imul
decl
pop
movb
adc
hlt
mov
loopne
xor
pusha
mov
xchg
mov
inc
push
or
int3
dec
jl
movsb
xor
push
xchg
ret
not
pop
xor
cltd
xor
push
push
cmp
and
stos
inc
cld
pop
and
rclb
mov
pop
pop
xchg
in
cs
outsb
push
xor
add
ja
push
outsb
sbb
ret
sub
test
xchg
lods
notl
dec
nop
dec
icebp
rolb
cwtl
mov
add
es
aad
pusha
and
and
fsubl
enter
mov
or
fdivl
push
fildl
movsl
test
fiaddl
nop
inc
pop
data16
pop
and
aam
push
jg,pt
or
pop
and
inc
mov
jo
notb
jno
and
push
cmp
xor
and
test
stos
outsl
fdivrl
lock
or
mov
pop
mov
jnp
dec
add
nop
rorb
adc
jnp
loop
clc
and
jecxz
xor
std
pop
sub
pop
rclb
add
inc
call
je
bound
mov
cltd
mov
cmpsl
pusha
insb
mov
pop
or
sub
ljmp
sub
dec
mov
jle
fs
stc
mov
pop
pop
movsb
cmp
inc
cli
mov
xor
mov
or
orb
mov
scas
cmp
jo
inc
mov
add
xchg
jecxz
push
and
jmp
pushw
stos
cmpl
jg
xchg
xor
sub
and
into
mov
dec
incl
xor
insw
incl
lret
jp
iret
test
mov
out
jns
pushl
ret
fidivl
shrl
push
sub
jmp
mov
stos
icebp
mov
pushf
nop
xchg
jns
jp
xchg
push
xor
inc
pop
mov
xchg
inc
push
in
jecxz
das
sub
fmulp
dec
jmp
sbbb
outsl
push
lock
gs
mov
mov
adc
ds
sbb
out
xchg
add
jp
push
in
test
scas
ficoml
andl
pop
pop
decl
xchg
jno
pop
add
in
clc
sub
dec
mov
mov
fstpt
mov
pusha
mov
sti
add
lret
imul
jne
pop
test
or
call
idivl
test
hlt
mov
adc
xchg
loopne
push
mov
add
xchg
xor
out
data16
sahf
mov
test
inc
clc
add
add
insl
mov
je
sub
pop
cld
out
and
and
add
push
shll
jb
out
mov
lock
dec
xchg
inc
mov
jnp
pop
adc
data16
sbb
xchg
test
push
push
cs
mov
sub
lret
lcall
mov
mov
fistpl
lahf
pop
inc
das
shll
sbb
xchg
lret
or
inc
fistl
cmp
cmp
fcmovnu
shll
ret
js
ja
jno
cmp
pop
cmp
cwtl
loopne
in
loop
icebp
stos
sahf
daa
mov
shl
addr16
cli
aas
add
sbb
loope
lahf
add
or
and
mov
fwait
pop
mov
add
aas
je
inc
das
clc
mov
push
lds
ret
test
xchg
inc
jl
movb
in
jecxz
and
fsubrl
test
data16
sub
push
push
shr
je
ficoml
int3
push
mov
pop
fcomip
sbb
mov
xchg
movlps
loopne
mov
adc
jp
xor
xchg
sub
jl
add
pop
push
bound
sbb
test
pushl
xchg
sbb
out
in
mov
mov
mov
or
jo
pop
adc
mov
hlt
or
sub
movl
push
pop
inc
clc
bound
idivb
cmp
mov
mov
and
rorl
movb
mov
jmp
fcos
flds
jecxz
jnp
add
outsl
stos
add
push
cmp
push
sti
popl
daa
or
loopne
inc
sarb
or
fcomps
push
loopne
loop
cmp
flds
cwtl
lea
pop
push
adc
test
int3
jge
push
cld
mov
dec
pop
call
into
mov
or
cmp
or
fucom
std
xor
jns
adc
pusha
push
sahf
push
sub
mov
test
push
xchg
lcall
or
xchg
sub
sbb
or
ja
or
jo
aaa
sbb
jle
mov
xor
test
ljmp
test
int3
mov
sbb
aaa
pop
pop
div
lret
fcom
xchg
bound
lret
clc
not
cmp
lock
leave
and
cli
ljmp
dec
cmp
jno
pushf
push
and
add
mov
std
lods
sarb
lds
mov
cwtl
and
adc
xchg
daa
jge
cmpsb
call
xor
or
arpl
call
fbld
arpl
push
clc
ret
jg
mov
cltd
imul
ds
icebp
test
mov
sub
mov
or
pusha
xor
leave
mov
mov
pop
mov
aaa
jl
mov
and
pop
ffreep
dec
and
incl
push
jge
clc
or
outsl
inc
sub
in
push
add
mov
imul
sub
rcr
push
rcrb
jg
xchg
gs
aad
mov
mov
std
lret
pop
mov
and
andb
jne
sbb
jo
aas
jl
fdivrp
xchg
out
out
inc
mov
inc
lahf
xchg
xor
xor
jne
push
or
mov
push
cli
incl
jle
xchg
ja
je
pop
dec
arpl
jg
push
pop
js
outsl
jo
xchg
shl
sti
outsl
cld
data16
push
popa
xor
push
or
mov
nop
mov
add
pop
and
outsl
push
sbb
push
cmp
add
inc
mov
ja
add
outsb
jl
dec
jg
adc
or
movsl
mov
add
insb
jl
mov
loope
lea
lods
clc
inc
ret
push
sub
lahf
dec
fsubrs
xchg
pop
pop
or
fcom
je
test
lret
mov
pop
mov
pushl
dec
inc
adc
shrl
js
in
andb
subb
enter
scas
mov
pop
leave
into
pusha
shll
cli
lcall
nop
sub
movsl
dec
cmp
sbb
mov
dec
mov
data16
inc
or
mov
xchg
popa
and
inc
inc
pop
push
xchg
sbb
and
add
mov
jecxz
hlt
fadds
dec
or
stc
imul
clc
lret
pop
add
jo
add
popf
push
add
mov
cmpsl
and
mov
ss
mov
jbe
sti
add
or
loope
push
scas
mov
mov
test
mov
xorl
nop
ljmp
aas
pop
or
lret
das
jp
inc
shl
pop
jnp
adc
push
jno
sbb
add
push
shlb
sub
adc
or
aaa
nop
mov
or
or
ja
outsb
ficoml
adc
and
std
sti
aaa
outsb
inc
jne
pop
fidivrl
sti
push
icebp
lods
cmpsl
call
pop
icebp
pop
sub
push
jbe
mov
push
les
mov
in
decl
aad
cmp
add
inc
cmp
inc
ljmp
out
in
lcall
sub
and
mov
dec
shlb
push
mov
push
mov
fmuls
std
in
fiaddl
das
sub
mov
addl
lahf
add
inc
sbb
pop
iret
add
pop
mov
call
into
scas
add
sub
mov
push
mov
push
ja
xchg
sub
jo
xchg
outsb
sub
cmp
shll
in
and
call
xchg
xor
iret
pop
mov
push
lcall
aaa
mov
sbb
int
outsl
cmp
jb
lcall
cmc
add
aam
subb
jg
or
push
adc
or
adc
lret
sahf
or
cli
cmp
sbb
sahf
cmp
inc
pushf
movsb
and
or
les
sarb
outsl
imul
and
cs
dec
fstps
aas
or
clc
stos
adc
pop
js
xchg
lret
fstl
aam
push
out
mov
in
sbb
inc
popa
xchg
js
sbb
mov
enter
cld
adc
xor
imul
idivb
lahf
mov
inc
leave
enter
jle
ds
sahf
add
pop
fsubs
xor
fnsave
xchg
cmpsl
mov
mov
je
js
add
mov
mov
cli
mov
pop
movsl
std
ja
orb
or
les
in
jb
clc
call
scas
adc
arpl
pop
sti
inc
mov
mov
rclb
sub
movsl
add
test
fcomip
jg
and
fcmove
mov
clc
ficomps
adc
jecxz
push
add
sub
inc
int3
cmp
cli
xchg
push
xorl
jp
add
mov
mov
shl
std
test
dec
adc
xor
in
sbbb
popa
add
inc
popf
mov
rolb
pusha
push
inc
jp
pushf
int3
fwait
out
pop
push
mov
ja
std
subb
stc
sbbb
add
add
push
imul
pop
mov
cmp
into
clc
xchg
out
ret
test
push
fmull
test
daa
cli
outsl
add
jl
inc
mov
bound
lods
addl
lahf
pop
cs
pop
pop
test
lock
ss
mov
jp
sub
rcrb
ret
psllq
outsl
push
icebp
iret
jle
std
in
inc
jno
jae
lea
lea
aas
mov
lret
sub
add
mov
test
sar
rol
aas
inc
add
pop
inc
je
dec
xor
cltd
ja
adc
cmp
add
or
push
inc
adc
add
aad
pop
call
subl
movsl
push
cmpsl
stos
fimuls
test
mov
fmulp
mov
out
xlat
jg
mov
fimuls
test
xor
sbb
adc
movsb
pushl
adc
jnp
jne
lock
das
fldl
jne
sbb
and
add
jbe
clc
inc
lahf
add
sbb
into
aad
sub
aam
sub
and
adc
or
mov
push
les
mov
lods
adc
mov
xchg
mov
jbe
pop
and
out
add
inc
test
repnz
mov
and
jo
jge,pt
movsb
push
rcr
sahf
adc
mov
pop
inc
subl
cmp
add
mov
sbb
cwtl
shl
cli
in
test
dec
div
incl
ret
sbb
lret
push
data16
fwait
pop
clc
fiaddl
push
mov
pop
adc
test
mov
jle
stos
stos
xchg
push
lret
stos
cli
scas
push
das
jae
sub
jb
scas
aad
pop
aad
push
cmc
mov
dec
or
mov
sti
cld
cld
rorb
mov
jmp
stos
jno
mov
or
stos
scas
mov
scas
inc
add
bound
or
decl
sub
mov
mov
pop
cld
sbb
es
or
loopne
pop
add
add
cld
outsb
cwtl
lret
xchg
dec
inc
xchg
leave
shlb
loop
scas
nop
add
dec
js
mov
xlat
es
imul
mov
stc
or
std
mov
push
jbe
xchg
mov
icebp
jg
push
out
or
icebp
mov
std
icebp
or
mov
fcomip
xor
xchg
sti
imul
out
cmp
adcb
enter
mov
icebp
movsl
movsl
divb
pop
test
rcrb
push
and
pop
movsb
mov
inc
ja
add
sub
push
sub
cmc
aaa
sub
adc
cltd
bound
jmp
cmc
ds
int
or
mov
and
fnstcw
jae
cmp
mov
xchg
mov
cmp
mov
int3
and
lahf
jg
movl
jo
add
pop
in
js
cli
adc
push
jg
mov
jo
enter
stos
fistpll
adc
mov
in
sbb
or
shl
xchg
clts
ja
adc
scas
jns
pop
sub
insl
ret
bound
lret
jecxz
pusha
arpl
pop
dec
xchg
dec
sbb
jmp
xor
lahf
mov
call
sub
cld
out
rorb
negb
xchg
add
xchg
arpl
sbb
inc
int3
ss
sbb
arpl
pop
push
or
push
mov
popa
loope
icebp
jg
test
jg
jp
cmp
cli
outsl
js
pop
loopne
shr
pop
test
and
mov
fs
add
ja
inc
mov
movsl
or
fs
inc
js
cld
pop
int3
imul
dec
jns
pop
mov
add
jo
dec
pusha
test
fcomps
jo
repnz
add
push
gs
sub
add
push
pop
es
fcomps
push
stc
and
lret
adc
sub
mov
jns
loope
push
repnz
cli
mov
adc
sbbb
mov
or
add
movsb
or
or
mov
call
shlb
pop
ja
test
lock
sbb
rcr
js
js
mov
inc
sub
ret
mov
loope
sub
cmp
fnstcw
mov
pavgb
fcmovnu
movsb
and
imul
ret
popf
mov
lret
out
mov
dec
mov
shrb
ret
jg
pop
test
lret
out
adc
outsl
inc
in
sub
mov
js
lds
cli
fbld
es
push
xchg
add
jae
mov
aaa
add
das
mulb
js
cmp
scas
inc
loop
loopne
push
sbb
cmp
test
lcall
push
mov
sub
scas
clc
xor
sbb
arpl
sti
add
sbb
sub
or
ds
xlat
jmp
adcl
lcall
sbb
into
sub
mov
xor
stos
cmc
test
lahf
push
dec
xlat
out
pop
xor
decl
xor
js
out
ss
jmp
je
js
pop
mov
dec
cli
out
inc
fisubrs
inc
sub
pop
das
cli
dec
inc
inc
or
cmp
or
add
repz
test
xchg
or
mov
movsl
xlat
ja
fwait
add
pop
mov
mov
add
mov
xorb
scas
push
mov
mov
scas
out
add
fimuls
add
push
mov
jns
dec
aam
xchg
mov
cmpsl
ret
push
div
int3
xor
loope
add
enter
inc
lods
mov
add
inc
out
int3
sub
pop
hlt
test
je
mov
lret
jo
dec
cli
jg
xchg
and
arpl
lods
cmp
in
jecxz
cmpl
pop
dec
cmpsl
out
and
and
pop
jnp
stos
lea
xchg
sub
jg
movsl
and
ficoml
insb
stos
sub
std
adc
shlb
push
push
add
inc
test
test
dec
nop
loope
inc
mov
lcall
adc
add
or
ss
and
adc
and
out
cmp
cmc
fst
push
dec
stos
and
loop
shlb
add
jo
add
inc
mov
aas
mov
inc
lcall
mov
inc
add
jle
cmp
stos
mov
pop
add
push
cld
dec
outsb
test
divps
xor
hlt
add
sub
sbb
pusha
jns
fs
pop
js
cs
or
xchg
sahf
insl
leave
lret
aaa
shlb
push
lock
pop
out
out
loopne
pop
hlt
shlb
sub
dec
push
mov
popa
jne
aaa
or
ret
mov
in
ds
sti
mov
mov
imul
or
movsb
cmp
lret
sbb
inc
mov
je
and
test
es
aas
inc
pop
fbld
xchg
mov
nop
mov
xchg
shrb
stos
jg
stos
add
push
jg
inc
jle
aad
adc
mov
lcall
xchg
ds
inc
cmp
mov
jp
outsl
and
inc
stos
push
xor
jbe
jae
imul
sbb
sub
inc
into
out
jecxz
std
cmp
xor
cwtl
mov
jo
addl
pop
adc
xor
xor
sti
cli
rol
call
add
enter
jae
adc
imulb
jp
sbb
faddp
iret
or
sahf
mov
int3
add
cmp
cli
mov
loopne
xchg
sbb
test
mov
mov
sub
xor
sub
cltd
push
add
pop
lret
mov
int
mov
out
daa
movsb
pop
je
or
insb
fnstenv
dec
clc
sub
dec
adc
clc
inc
sbb
insl
xchg
jg
xchg
pusha
or
data16
hlt
negl
sbb
mov
or
les
mov
popa
cmp
jae
inc
mov
ljmp
dec
pop
jecxz
push
xchg
jnp
test
imul
pop
loopne
push
shrb
rcrb
es
dec
sub
add
hlt
mov
mov
jne
xchg
insl
add
add
fnstsw
xor
mov
jne
loope
adc
lods
lods
pop
iret
xor
inc
xor
mov
in
push
push
push
mov
push
push
jp
sti
adcb
xchg
repz
lods
inc
push
and
sub
pop
imul
rcl
mov
popa
xchg
dec
clc
mov
jge
inc
aas
or
aas
jae
into
jmp
sbb
xor
data16
int3
mov
inc
shlb
add
pop
mov
mov
dec
sub
sub
mov
and
loopne
add
inc
add
and
and
and
add
mov
xchg
pop
and
fdivrs
mov
xchg
jno
repz
inc
ljmp
fs
push
and
jle
stos
mov
inc
or
das
adc
xchg
jo
aas
dec
sbb
ljmp
jb
cmp
mov
insb
sub
jb,pt
aad
add
inc
sub
repnz
push
lret
push
push
shrl
push
push
pop
cmp
orb
xor
add
icebp
or
dec
insl
dec
or
loope
shrl
cmp
mov
dec
hlt
scas
insb
mov
out
mov
mov
jo
push
mov
bound
jmp
in
outsl
out
mov
or
test
lods
cld
fwait
or
cmp
lds
xchg
stos
sarl
push
push
push
push
outsl
and
lods
push
pop
sahf
sub
add
add
adc
insb
jle
test
lcall
movsb
and
ljmp
mov
or
inc
sub
pusha
into
mov
data16
sub
inc
cmpsb
insl
adcl
adc
xchg
sub
lahf
subb
and
pop
add
jmp
ret
push
sahf
xor
mov
jmp
clc
and
jns
mov
fs
jne
in
add
jnp
mov
outsl
clc
jg
pop
aad
daa
int3
das
inc
cmp
or
subl
out
xchg
pop
add
scas
repnz
adc
sti
sti
nop
fcoms
mov
adc
xor
pushf
dec
mov
pop
and
or
pop
shrb
cmp
dec
dec
cmpsb
jecxz
loopne
insb
in
cmp
lea
lcall
lock
mov
nop
cld
jns
mov
pop
je
orb
jne
xor
dec
inc
movb
rclb
ljmp
inc
jne
sbb
mov
lds
jg
push
inc
int
cwtl
add
insb
incl
cmpsl
or
in
pop
ljmp
movsl
jecxz
dec
cld
push
and
fmuls
test
or
inc
jl
pop
lods
cli
xchg
sti
fadd
les
cmp
lock
or
inc
lea
insl
popf
lea
pusha
mov
mov
or
inc
sti
stos
adc
aad
push
jge
idivl
and
vpand
xchg
add
sbb
int3
sbb
adc
test
js
enter
push
mov
cmpsl
add
dec
pop
mov
pop
repnz
imul
shlb
dec
push
and
inc
ss
icebp
add
cmpsb
sbb
mov
aas
mov
fbld
dec
mov
bound
dec
dec
mov
pop
inc
fdivrl
fcos
mov
xor
test
movsb
mov
sub
pushw
mov
mov
in
pop
lcall
cmp
inc
lret
mov
or
xor
imul
adc
push
cmp
nop
test
stos
jge
lods
jnp,pn
add
cs
sub
sahf
push
mov
leave
xor
mov
pop
sahf
or
mov
push
pop
fwait
jle
inc
mov
push
mov
and
notb
mov
dec
addr16
jmp
push
lods
psllw
push
or
inc
ja
mov
sbb
mov
shrl
pusha
jg
inc
jmp
push
sbb
test
push
dec
flds
addl
mov
inc
outsb
lea
adc
push
jg
jp
inc
je
icebp
notl
jno
ret
mov
push
test
aad
pop
mov
aas
xchg
and
mov
sub
pop
or
loop
xchg
mov
push
in
mov
test
sbb
push
push
in
call
fdivr
pop
or
shlb
addr16
roll
jle
dec
mov
inc
fisubs
insb
sub
xchg
movsl
pop
repz
dec
lods
fcom
xchg
in
rcrb
insb
push
mov
test
sti
xchg
test
int3
movsb
and
mov
mov
jecxz
fcmovnb
jne
loopne
stos
lods
and
lods
nop
lretw
cmpsb
xchg
mov
dec
push
test
sub
xor
mov
or
sub
lahf
insl
jae
push
jecxz
pushl
jae
shl
in
sbb
lret
mov
pop
sbb
cmpsb
pop
push
jmp
iret
sarb
subb
add
lahf
pushf
jns
mov
movsb
data16
xchg
cs
dec
fucomi
aad
movsb
fwait
add
incl
fists
inc
xchg
adc
inc
loope
dec
add
sbb
jnp
inc
xchg
pushf
xchg
mov
sub
push
mov
adc
push
ljmp
pushf
push
jae
sbb
push
clc
or
lret
xchg
adc
push
pop
cmpsb
icebp
or
rcr
ret
inc
lds
sbb
loopne
pop
cli
xchg
outsb
push
mov
and
outsl
cmp
and
dec
inc
inc
sbb
andb
sbb
hlt
fwait
mov
test
mov
xchg
sar
push
jecxz
inc
enter
and
xchg
fidivl
jbe,pn
lods
and
stos
adc
push
cs
inc
xchg
or
sub
add
adc
fcoms
mov
xchg
adcb
add
or
jle
and
orb
mov
mov
xchg
adc
xchg
mov
sub
dec
sub
push
mov
push
sti
int3
mov
test
out
mov
add
in
js
and
ljmp
mov
xlat
jge
shll
out
add
xchg
stc
push
sbb
out
rorb
fwait
push
dec
add
mov
and
xchg
inc
jno
cmp
out
rcll
lods
mov
in
into
and
push
add
xchg
rorb
fs
pop
xor
xor
in
adc
pop
cmpb
add
sahf
or
leave
lds
mov
aad
dec
and
push
in
fdivl
fmuls
and
cs
or
mov
adc
cmp
shrb
adc
cld
inc
ljmp
icebp
inc
mov
jg
mov
ss
mov
add
std
mov
fbld
mov
test
cltd
push
inc
insb
imul
fs
xchg
dec
push
movsl
outsl
loope
lods
clc
and
mov
adc
scas
add
jmp
push
out
fdivs
push
imul
or
xor
pop
push
mov
push
lret
lock
xor
jnp
popa
sbb
dec
outsl
movsb
xchg
push
jo
push
xor
jmp
push
cltd
ja
inc
push
xchg
mov
arpl
sarl
ss
jle
and
inc
lds
cmp
cwtl
mov
shlb
mov
popf
push
dec
loopne
pop
js
js
hlt
out
int
sbb
mov
add
mov
inc
adc
outsl
inc
fnclex
rolb
jmp
inc
ret
movsl
ficomps
cmp
mov
and
inc
push
arpl
gs
fnsave
xchg
push
leave
push
aad
loope
pop
inc
add
cmpsb
sub
addl
pushf
cs
push
add
faddl
jl
xlat
pop
and
jp
loope
or
dec
xchg
cmp
jmp
jo
push
sub
jle
or
or
push
daa
cmp
ljmp
shll
je
push
xchg
inc
add
cwtl
push
cld
mov
mov
jmp
negb
mulb
or
xorb
cwtl
clc
and
fmull
aas
adc
lods
lods
sahf
cmpb
add
add
int
sub
insl
mov
fidivs
inc
mov
mov
jno
mov
xor
xor
js
adcl
push
inc
or
dec
outsl
mov
sbb
repz
sub
shlb
pop
pop
call
enter
xor
jns
aam
push
movsl
dec
hlt
push
dec
cld
mov
push
push
dec
add
push
and
jg
inc
xchg
shll
inc
cmp
ret
cmpsb
cmp
movsb
fnclex
mov
and
sub
sub
sbb
mov
adc
loop
jo
mov
scas
adc
inc
adc
cld
iret
jge
dec
add
jp
pop
mov
or
lahf
sub
mov
mov
cmp
mov
out
int3
sub
cli
out
add
outsl
add
ljmp
aaa
addr16
pushf
je
sub
cli
or
mov
add
or
setl
mov
sub
hlt
or
in
jl
xchg
add
stos
lods
repz
pop
shlb
mov
adc
jmp
fidivs
test
push
cmp
movsl
insl
cmp
fst
mov
jle
xchg
pusha
dec
andl
sbb
inc
pusha
in
xor
pop
adcl
movsb
mov
scas
cli
xor
inc
push
mov
js
jbe
pop
mov
sbb
cmp
pop
jbe
add
pop
movsb
sub
shrl
or
xor
dec
jmp
cs
jle
ljmp
inc
lds
fdivr
ja
add
bnd
sub
sub
aaa
sub
in
adc
jecxz
jno
mov
jnp
mov
and
leave
and
mov
insb
jbe
cmp
push
fprem
call
xor
cli
test
push
inc
rolb
mov
loop
cmp
add
lcall
push
aas
jo
jne
jne
fidivrl
es
pop
cmpsb
ret
in
out
push
sbb
mov
mov
and
dec
aad
mov
stos
fwait
sub
cwtl
cmp
adc
xor
je
push
pusha
and
mov
scas
push
mov
jo
mov
add
pop
jg
and
mov
testb
or
sub
cmp
pop
pop
push
inc
fwait
fs
cmpsb
ret
imulb
push
cmpsl
push
sbb
cmp
ds
lods
clc
or
adc
or
mov
push
aam
jne
mov
cmpb
cmc
mov
loope
inc
inc
loop
ret
xor
mov
arpl
sbb
daa
mov
and
sub
xor
ret
push
mov
push
cmp
push
test
pushf
idivl
stos
mov
sbb
and
xor
push
or
push
cld
subb
pop
adc
pop
in
add
repnz
bound
dec
bound
mov
or
outsl
int3
aad
pushf
jno
test
les
sub
xchg
decb
add
xchg
dec
pop
xor
fists
rep
cltd
or
push
loopne
cli
ret
sub
sbb
add
pop
or
pop
mov
lods
nop
inc
dec
movb
sbb
sahf
add
push
jo
adc
add
shr
sbbb
and
aaa
les
jg
xchg
mov
pop
shlb
add
aaa
ret
mov
dec
push
movl
push
inc
sar
cs
xchg
nop
mov
mov
sti
repz
arpl
and
movsb
imulb
jle
add
decl
push
dec
test
pop
and
rorl
mov
dec
xchg
testl
xchg
mov
shlb
inc
push
mov
cmp
clc
ljmp
mov
cltd
stc
jmp
pop
pop
push
outsb
jl
loopne
mov
mov
sarl
out
pushf
into
sbb
out
push
ret
aas
test
daa
test
pop
les
lcall
inc
or
ds
ss
adc
mov
inc
nop
xor
lds
inc
jg
shll
pop
jle
adc
sub
mov
push
js
aaa
pop
movsb
movsb
js
out
call
adc
push
mov
mov
std
or
fcoms
pop
rcrl
aaa
out
xor
add
add
out
and
das
clc
mov
mov
je
out
xchg
outsl
mov
cmp
mov
ret
into
mov
and
add
call
cmp
mov
mov
pop
add
cmc
push
data16
cmp
in
sub
mov
inc
inc
xor
or
mov
cwtl
int
nop
push
aaa
jo
or
imul
jl
cmp
test
cmp
js
hlt
rcrb
xchg
push
push
inc
hlt
xor
ja
lret
sub
imul
outsb
xchg
fdivp
jg
pop
or
xor
pusha
insl
clc
push
sbbb
pop
call
mov
nop
lret
push
sub
inc
inc
xchg
fdiv
fsubrs
movsl
dec
enter
pop
jbe
stos
push
clc
add
repnz
and
std
sbb
xchg
push
add
xchg
inc
sbb
mov
loope
std
sbb
xchg
or
sub
sbb
stc
cmpsl
dec
xchg
push
sbb
pushl
nop
jmp
sbb
sub
mov
adc
nop
push
cmp
push
mov
imul
mov
sahf
and
movsb
add
push
aam
xchg
fs
or
mov
sarl
push
dec
bound
in
jg
cltd
jg
mov
mov
dec
popf
hlt
std
cmp
inc
js
scas
cli
je
outsl
lods
shll
cmp
jo
loop
cmp
fisubs
sti
cmp
add
mov
adc
mov
ljmp
sbb
and
gs
push
xlat
jmp
mov
mov
sahf
out
nop
jno
mov
jg
mov
sbb
icebp
xor
sbb
push
pop
jno
shl
inc
sbb
cmpb
xchg
adc
loope
outsb
pop
push
and
add
aam
xor
mov
fcompl
call
sub
add
stc
jg
jg
xchg
cmpsl
mov
push
stos
xor
or
mov
push
mov
bound
sbb
lcall
mov
pushl
nop
adc
push
mov
push
sbb
inc
adcb
mov
rcr
pop
test
call
jp
or
lds
fsubr
rcrb
inc
lea
outsb
rcrb
aaa
sub
call
xbegin
push
lcall
jmp
pushw
ds
jmp
add
push
jge
lods
adc
jne
cwtl
or
sahf
xchg
ljmp
push
and
lcall
mov
out
add
inc
sbb
rcrb
pop
icebp
dec
adc
dec
ja
xor
lcall
stc
cmp
ret
call
les
jle
jne
ret
lcall
xchg
lods
fldl
ljmp
sub
mov
jo
jae
subb
dec
dec
cmp
dec
or
xor
sti
scas
and
pushl
and
or
dec
das
ss
test
xchg
jmp
imul
and
pop
ss
fcomp
adc
decb
stos
push
jge
stos
lds
jae
jb
aam
mov
inc
call
jbe
add
jo
out
adc
shrb
cli
sub
out
je
rorl
negb
rclb
into
add
loopne
jecxz
jp
xchg
adcb
add
xchg
fwait
jo
sub
lock
inc
fstps
cwtl
inc
sbb
sar
fwait
sbb
push
mov
jle
out
imul
jmp
and
adcb
daa
mov
pop
stos
jbe
mov
call
shrl
xchg
idivb
pop
gs
sbb
pop
outsb
cli
lock
movsl
mov
push
pop
andl
ss
pop
sub
cmp
lock
movsb
push
or
or
into
cmp
xor
pop
sbb
mov
dec
adc
jl
in
or
inc
jp
inc
xchg
sub
jno
jo
push
inc
ja
lret
jb
push
hlt
nop
jbe
outsl
cmpsl
insl
cmp
out
xor
push
mov
or
ss
jbe
std
jbe
xor
lock
pop
sub
sti
test
int3
sub
sbb
das
hlt
mov
push
or
pop
ss
push
pop
loopne
sbb
mov
lock
sub
out
icebp
xor
sbbb
repnz
test
xchg
sbbb
xchg
int3
or
cltd
popa
sbb
sbb
ret
xlat
sub
js
dec
jle
inc
add
inc
data16
mov
clc
test
cmp
ds
pop
sbb
leave
call
lcall
mov
sub
out
nop
jb
repnz
sbb
js
mov
and
pop
dec
rcrl
jo
jbe
shlb
roll
mov
jecxz
inc
adc
mov
mov
lods
pusha
pop
mov
pop
add
icebp
adc
out
push
sti
jae
inc
mov
std
or
out
pop
jno
mov
cmp
ds
xchg
and
xor
sub
loopne
dec
adc
clc
push
adc
shr
in
pushf
out
clc
fisttps
add
pop
out
div
stos
std
ss
or
xor
or
add
stos
inc
mov
scas
loopne
pop
out
add
mov
xchg
jle
dec
lods
sub
mov
xchg
or
cs
push
cwtl
pop
imul
bound
inc
loop
jp
ss
pop
lock
pop
ffree
add
ja
and
xor
mov
movsb
add
ficoms
fsts
out
dec
pop
es
push
sbb
lcall
mov
and
mov
and
dec
mov
sub
sbb
enter
inc
push
mov
sbb
clc
pushf
push
and
sbb
into
mov
mov
jp
jne
movsb
fs
test
cmp
jno
lahf
fcom
ret
outsl
cmp
cmp
dec
push
xor
into
cli
add
pusha
and
aaa
add
test
popa
sbb
cmc
out
outsl
cs
pop
nop
or
fsubl
inc
xor
and
or
rorb
aaa
rorl
or
sbb
sub
repnz
rorl
das
stc
shlb
rcl
sbb
mov
dec
dec
ljmp
imul
xor
mov
lds
daa
push
imul
shll
icebp
dec
inc
pusha
jle
imul
jg
or
loopne
aas
push
cmp
sbb
lahf
ret
hlt
jns
inc
mov
jmp
ret
mov
add
inc
pop
ljmp
mov
idivb
and
ss
and
push
mov
mov
out
pop
aas
imul
scas
outsl
cli
call
std
sbb
inc
mov
push
sbb
mov
adc
ror
sub
iret
call
std
es
mull
in
bound
mov
push
lods
add
sarl
jmp
pop
inc
inc
mov
lcall
sbb
cmp
mov
mov
mov
std
aaa
push
fsubrl
lahf
das
imul
inc
mov
nop
loop
stos
mov
ljmp
fdivs
and
xchg
fisubs
xor
dec
mov
out
into
push
rorb
aaa
pop
rorb
scas
out
mov
jecxz
cmc
cli
xor
cmc
push
test
cmc
jg
sbbb
test
sbb
sub
test
outsb
cmp
jno
or
inc
incl
decl
mov
into
jle
xchg
mov
xlat
in
mov
das
cs
decl
lahf
subb
sub
aam
mov
idivl
bound
aas
stc
test
push
push
stc
negb
push
add
addl
loop
fcomi
fwait
jmp
or
ljmp
or
inc
cmp
mov
pop
add
xchg
insb
aam
cmpsl
cli
pushf
jbe
add
subl
pushf
xchg
gs
loope
jmp
add
cwtl
icebp
lcall
nop
or
fsubp
shl
adc
inc
and
cmp
outsb
xchg
or
sub
inc
add
mov
add
mov
scas
sbb
int
pop
shlb
fwait
fwait
xadd
cs
fidivs
inc
cltd
mov
aam
sbb
int
loope
add
std
popa
push
fisubrs
loopne
imul
xchg
inc
xlat
xchg
aaa
das
dec
sub
out
ja
in
mov
cmp
sbb
jle
jne
and
jge
mov
fsubrp
add
mov
lods
lcall
in
jecxz
cmc
or
std
fildl
jo
sbb
mov
imul
or
fcmovnu
xchg
out
cli
and
ljmp
xor
aas
cld
fwait
cwtl
lcall
mov
aas
mov
arpl
clc
testl
mov
js
cltd
test
sarb
jmp
sub
bound
add
mov
or
hlt
mov
test
dec
insb
les
mov
cmp
mov
mov
mov
mov
push
mov
jl
sti
je
or
jg
and
add
inc
iret
mov
mov
pop
clc
sbb
xor
sub
pop
lcall
imul
adc
add
xchg
xor
dec
cli
outsb
adc
adc
add
push
fnstsw
scas
lods
and
push
add
mov
xchg
mov
cltd
les
push
cmp
popa
jl
cmp
lcall
incl
cmpsl
sub
sub
dec
pushf
push
popf
mov
adc
mov
pushf
mov
adc
clc
push
jne
xor
or
or
mov
gs
push
aad
dec
mov
push
sub
aaa
and
inc
lcall
rcrl
and
pop
mov
sar
mov
ss
mov
adc
ret
pop
mov
pushf
mov
mov
mov
inc
stos
jne
adc
addl
daa
lds
push
movsb
add
dec
test
push
rcrb
cmp
mov
add
cld
pusha
mov
jno
dec
test
cmc
hlt
mov
loope
mov
cld
call
fadd
mov
push
enter
push
or
aas
mov
and
mov
push
filds
sbb
and
sub
and
add
or
add
mov
sbb
int3
arpl
pop
out
or
inc
das
jg
mov
mov
sub
dec
lods
dec
jns,pt
push
sbb
sbb
inc
xor
dec
enter
incl
call
xor
adc
aaa
cmc
push
shl
testl
fsub
sbb
fistl
cld
adc
mov
sbb
sbb
mov
out
fwait
add
push
lcall
push
les
shlb
mull
jge
or
sbb
ret
or
scas
mov
or
mov
sbb
in
cli
stos
ret
sahf
pusha
bound
fisttps
inc
mov
push
inc
inc
inc
or
xor
sub
aas
loope
addr16
movsb
test
add
call
sbb
cs
fisttps
lods
lock
mov
pushl
xchg
fsts
mulps
pop
scas
xchg
mov
pusha
xor
push
mov
js
jge
push
and
daa
popf
cli
push
jbe
outsl
lods
jmp
inc
pop
add
outsb
lahf
cmp
pop
stc
cs
add
insl
dec
pop
cltd
js
adc
mov
dec
hlt
or
mov
ja
add
push
xchg
imul
pop
sbb
cmp
loope
mov
fimull
pop
dec
rorl
outsb
mov
fdiv
sub
mov
or
fidivs
adc
mov
scas
add
nop
jp
and
mov
mov
addr16
test
ror
or
mov
push
xor
jo
push
cld
and
adc
add
cmp
les
mov
cs
incl
loop
out
in
sbb
xchg
pushf
add
loop
push
loope
pop
xchg
sbb
push
mov
push
fdivrl
and
or
cmp
xorl
insb
int3
imul
lods
icebp
inc
mov
fcoml
fstl
iret
cwtl
dec
pop
adc
push
js
dec
jne
pushf
mov
daa
jmp
inc
jo
dec
pop
faddl
mov
pop
push
mov
ss
mov
in
ljmp
xchg
insl
out
lahf
stos
cmpsb
loopne
jge
add
lret
aas
sbb
dec
mov
test
mov
xchg
shrb
call
jb
repnz
jl
add
inc
mov
adc
subl
jbe
inc
xor
test
mov
ljmp
xor
cs
jecxz
mov
pusha
aas
das
les
pop
mov
bound
lods
or
push
jo
adc
mov
dec
repnz
fcmovbe
sub
scas
icebp
jnp
xor
jb
call
push
clc
fbld
in
mov
pop
mov
sahf
hlt
psrad
ret
add
mov
cmp
dec
adc
sbb
out
mov
ret
shrl
pop
ffreep
cmpsl
xchg
mov
loop
sbb
and
clc
and
fs
and
cmpsb
pushl
iret
js
repz
jle
movsl
jbe
jne
inc
test
aaa
loop
ds
dec
mov
aas
jo
inc
pop
test
sub
stos
or
adc
in
or
es
rcrb
fmul
std
fidivl
lret
mov
push
push
js
push
aad
mov
and
cmpl
clc
out
or
cld
adc
les
ljmp
push
jmp
sub
mov
mov
hlt
lods
lret
mov
cli
daa
mov
lcall
mov
cmp
mov
sub
dec
sbb
add
mov
dec
or
sub
cmpsb
mov
jno
adc
dec
mov
xchg
add
jne
inc
andb
repnz
arpl
inc
adc
dec
cmp
dec
xor
jbe
dec
or
push
inc
std
inc
ret
repnz
je,pt
sahf
sub
mov
xchg
test
push
fsts
or
push
test
loop
std
in
shll
loop,pt
incl
test
pop
icebp
and
lea
mov
xchg
data16
add
adc
mov
loope
push
pop
scas
in
call
sub
push
loopne
cmp
mov
movb
mov
cmpsb
test
xor
xchg
jl
popa
xor
sub
int3
mov
inc
scas
je
jne
push
mov
mov
sbbb
insl
clc
dec
pushl
scas
mov
in
andb
cmpsb
hlt
mov
adc
mov
inc
sub
mov
scas
icebp
xchg
push
repnz
mov
test
mov
xchg
aad
movsl
movsl
and
mov
dec
fwait
jo
std
xor
mov
mov
nop
lret
adc
nop
adc
push
les
arpl
sub
nop
es
shll
ljmp
and
inc
mov
ljmp
or
dec
jg
and
loop
pop
iret
decl
xorb
shlb
icebp
or
adc
adc
movsb
add
testl
or
aam
and
inc
push
test
js
inc
pop
inc
notb
testb
and
fdivrl
arpl
rorb
ret
hlt
das
inc
mov
dec
rolb
jmp
into
jb
xor
push
push
xlat
add
das
xlat
push
mov
and
int3
scas
cmp
push
call
sub
jbe
push
pop
adc
test
jle
inc
scas
sub
mov
inc
and
movsb
lcall
xor
outsb
cs
jbe
mov
mov
and
cwtl
repz
push
outsb
popa
int3
lods
pop
push
mov
adc
std
hlt
movnti
xchg
dec
mov
xor
mov
cmp
xor
scas
xchg
mov
sub
test
ret
shrw
dec
sbb
rorl
test
cmc
insl
mov
push
int
fisubrl
cmp
shr
out
sub
lahf
adcl
fsubrl
movsb
xchg
mov
sub
out
aaa
scas
and
cwtl
addr16
inc
jl
test
sbb
loop
dec
incl
das
jle
sarl
add
add
jnp
sahf
cld
mov
ret
icebp
add
in
movsl
mov
push
inc
mov
outsb
mov
push
inc
es
mov
adc
mov
pushf
int
outsl
add
inc
sub
repnz
mov
xlat
arpl
ss
scas
shl
sbb
jg
inc
sbbb
dec
or
cmp
sub
call
mov
dec
sarl
fwait
inc
push
hlt
in
push
or
mov
mov
in
movsb
ljmp
scas
sub
cmp
and
stos
cld
jo
subl
cmp
jb
mov
repz
lds
mov
inc
and
out
adc
rorl
or
cs
sbb
and
fsubrl
jp
movsb
jbe
hlt
out
jne
test
xchg
pop
mov
in
push
nopl
hlt
mov
bound
lds
mov
outsb
xchg
mov
addl
mov
or
mov
add
jmp
cld
int3
mov
push
pop
jno
insb
fs
pushf
pusha
loopne
jmp
sbb
and
std
cli
rcl
popa
add
push
std
inc
dec
pop
rolb
pushf
fcoml
call
xor
inc
xchg
push
movsb
mov
inc
inc
loop
and
cltd
mov
cmp
sbbl
inc
cmp
fisttps
mov
and
xor
aas
fisubs
mull
xor
pop
jbe
or
in
inc
mov
nop
in
mov
int
test
movsb
test
cmp
xor
and
repnz
xor
push
mov
push
add
mov
cs
pusha
rol
std
jo
rorb
mov
mov
pop
jge
mov
sub
xchg
and
scas
xchg
popa
clc
mov
mov
repnz
mov
add
pop
xchg
and
mov
imulb
sbb
jns
sbb
out
je
out
and
jg
sbb
add
inc
mov
aad
push
adc
enter
mov
pop
dec
jl
fdivl
scas
in
nop
adc
and
sub
add
repnz
out
push
lock
mov
inc
loop
push
pop
jo
loop
xchg
or
incl
stos
inc
pop
hlt
pop
push
xor
push
mov
xchg
cli
hlt
and
and
scas
adc
jnp
push
ret
dec
decb
jle
int3
push
fsubs
lods
adc
fdiv
adc
jmp
fs
jne
mov
test
subl
loope
out
lock
pop
mov
lods
cmp
outsl
cmp
sti
dec
cld
fbstp
mov
mov
in
or
push
ret
fldl2e
push
jge
pop
mov
sbb
fmuls
in
orb
cld
ljmp
jns
add
es
cmc
or
fisubrl
mov
aaa
push
and
adc
negl
outsl
fnstsw
fs
andb
pop
cli
cmpb
icebp
dec
lods
mov
test
adc
cmp
pop
pushl
adc
mov
mov
ffree
mov
sbb
or
rorb
nop
pop
lock
push
push
fistpll
std
dec
mov
inc
call
and
xchg
and
cs
movsl
cli
enter
insl
inc
add
cmp
dec
dec
cmp
push
jns
jge
or
mov
fisttps
sbb
cmp
les
insl
push
pop
inc
mov
ret
mov
mov
pop
enter
mov
int
or
ja
mov
push
test
pop
clc
pushf
test
jo
lcall
ljmp
out
pop
inc
cli
clc
mov
test
adc
mov
pop
mov
addb
push
cmp
xchg
xchg
xchg
es
adc
lods
push
xchg
incb
cmp
loopne
mov
or
inc
lahf
incb
sbb
hlt
jbe
inc
inc
inc
or
in
adc
push
fistpll
addr16
out
xor
pop
fidivl
mov
pop
pusha
mov
jg
cmp
outsl
js
pop
aam
loope
je
or
xchg
push
mov
xchg
fiadds
divb
cmpsb
cmp
jecxz
mov
cmp
int3
cmp
jg
pop
or
negl
inc
das
les
fcomip
ljmp
call
lds
and
lret
sub
inc
dec
push
or
jo
incb
xor
call
dec
cmp
addb
or
lahf
and
pop
icebp
jg
lods
jge
add
push
mov
ficoms
cmc
adc
mov
sbb
adc
mov
inc
popa
fisubrl
ljmp
fwait
add
push
jmp
sbb
sbb
xor
loopne
inc
pop
int3
xor
data16
jo
mov
stos
clc
and
std
push
add
and
movsb
sub
test
mov
and
sbb
add
pop
inc
loop
sbb
imulb
shll
arpl
inc
jmp
enter
mulb
pop
mov
cmpsb
mov
ja
gs
xor
adc
repnz
inc
lock
js
dec
ja
fwait
scas
jl
lret
mov
inc
xchg
nop
push
insb
loop
ds
jg
ljmp
test
adc
pop
xorl
out
and
lret
fstp
popf
sbb
mov
adc
or
imul
push
movsl
mov
sahf
xor
or
xor
fiaddl
dec
add
add
sets
fisubrl
inc
scas
mov
inc
je
push
pop
and
and
dec
rcrb
adc
and
lret
xchg
jl
sub
fiadds
mov
fmul
jmp
pop
subb
pop
ret
push
imul
test
mov
filds
lahf
mov
mov
cwtl
ret
gs
pop
int3
mov
xor
pop
push
dec
loop
add
bound
mov
stos
adc
scas
jle
dec
mov
and
scas
cld
jl
mov
jg
mov
andb
inc
adc
pop
jle
dec
mov
xchg
add
bnd
add
xor
jne
clc
add
mov
mov
cmp
cmp
movsb
xchg
test
int
sub
clc
into
adc
push
hlt
clc
fcmovnbe
scas
ret
xchg
outsl
nop
aaa
cs
call
lods
inc
push
daa
mov
enter
sub
sbb
mov
add
test
ja
adc
xchg
cld
mov
adc
push
inc
je
cs
sbb
test
mov
ss
hlt
inc
mov
or
or
dec
mov
xchg
mov
sbb
decb
jno
in
sbb
mov
js
outsb
inc
push
cmpsb
ret
xchg
int3
and
push
lret
pop
mov
push
lcall
sub
ss
or
ret
lret
cmc
dec
mov
mov
or
mov
out
xor
repnz
pusha
xor
hlt
rcl
pushl
ljmp
push
inc
inc
xchg
lods
loopne
imul
xchg
fucomi
mov
push
insb
ljmp
xor
push
dec
mov
push
push
sub
scas
leave
test
inc
and
or
iret
jl
cmp
in
or
sti
mov
jae
lcall
scas
aam
mov
dec
mov
push
adc
aam
mov
decl
pop
jge
pop
dec
add
mov
insl
imul
stos
adc
je
test
or
push
cld
ljmp
js
mov
or
lcall
lcall
sub
adc
mov
arpl
xchg
and
or
jl
out
xor
dec
pushf
stos
ljmp
push
cld
aas
add
or
scas
adc
clc
sbb
ficomps
mov
or
pop
cmp
mov
and
lea
xchg
aas
dec
mov
cmp
cmp
sub
cltd
mov
rcll
mov
lods
sahf
mov
arpl
stos
dec
pop
test
fsubp
push
and
push
int3
xlat
cmc
pop
mov
sub
push
test
sti
lds
hlt
dec
call
call
sub
mov
into
movl
enter
nop
sarl
or
mov
cmp
addb
lds
ret
sub
out
fs
fdivp
push
xchg
add
jae
adc
mov
add
mov
pop
pop
inc
cwtl
xor
xor
fnsave
or
mov
and
stos
push
mov
loope
mov
inc
jg
mov
lods
fwait
dec
push
jl
je
cltd
outsb
pop
insl
push
xlat
mov
sub
scas
adc
cmp
push
sbb
cmpsb
and
mov
lock
and
jp
sti
or
jne
fistpll
inc
in
shll
lods
cmp
mov
mov
movb
sub
nop
mov
jo
xchg
out
popa
mov
fbstp
cmp
fstpt
fbld
fcoms
sbb
outsl
out
dec
mull
stos
outsb
js
mov
rclb
and
pusha
iret
dec
sub
mov
pop
jmp
movsl
hlt
push
mov
jp
xchg
push
xchg
add
mov
mov
ss
jmp
leave
or
mov
lret
sub
and
mov
add
pop
pop
or
fisttpl
addl
and
jno
or
notb
sbb
and
add
imul
pop
int3
ret
xorb
push
mov
jp
and
mov
mov
cmp
ret
ljmp
outsl
stos
cwtl
inc
stos
dec
rolb
dec
imul
das
adc
pop
pusha
insl
ret
sbb
into
fistps
test
dec
sbb
jno
dec
call
add
pop
aam
and
mov
xor
fistpl
lods
das
cli
mov
dec
push
test
fcmovb
inc
gs
enter
jo
es
or
lds
xchg
mov
jo
cld
das
dec
jg
mov
sub
xor
inc
pop
jns
sbb
sub
test
jmp
adc
cltd
xchg
ja
mov
subb
or
mov
sub
std
ss
sub
leave
gs
dec
repz
test
or
jle
adc
push
jae
or
jecxz
or
lea
lea
filds
ljmp
pop
in
loopne
inc
arpl
in
inc
pop
in
mov
mov
and
sbb
jno
lock
fwait
dec
xchg
inc
mov
adc
nopl
add
pop
cld
pop
mov
jb
fdivl
movsb
adc
pop
sbb
dec
jge
sahf
fsubrs
push
aaa
mov
dec
fistps
inc
mov
or
testb
xor
inc
push
outsb
test
dec
out
test
push
call
cmpsb
fidivrl
repnz
fisubrs
outsb
jmp
lahf
push
mov
cli
sahf
mov
test
jmp
outsl
or
outsb
cld
push
add
push
mov
repnz
shr
rcrb
ljmp
xor
js
jg
mov
movsl
js
cltd
sbb
pop
jp
dec
aad
decl
andb
js
icebp
inc
nop
pop
cmp
adc
jg
sbb
push
insl
stos
push
adc
jg
jle
add
out
loopne
push
jle
arpl
or
mov
mov
xchg
or
push
jnp
rolb
xchg
sub
xchg
adc
cmp
push
sbb
xorb
jecxz
cmpsl
inc
add
push
sti
addr16
inc
xchg
fisubl
mov
jg
gs
sbb
test
jmp
pop
lahf
icebp
test
cpuid
sub
clc
adc
sbb
ljmp
dec
dec
xchg
movsl
add
or
outsb
fadd
das
mov
ljmp
xchg
inc
les
test
add
dec
push
jge
cmp
out
dec
bnd
stos
imul
add
lock
xchg
mov
out
scas
mov
adc
add
push
jb
xor
js
aaa
test
outsb
rolb
mov
mov
or
ljmp
sbb
nop
pop
ret
sbb
and
pop
mov
in
aad
sbb
pusha
jo
xor
jbe
cmc
xor
jmp
add
stc
cli
pop
mov
inc
cmp
inc
lds
xor
rcr
xor
mov
adc
arpl
sbb
setle
not
add
xor
popa
sbb
push
icebp
enter
dec
pop
mov
data16
lds
mov
hlt
and
daa
stos
fisttps
sbb
adc
mov
jg
mov
dec
xchg
popa
sbb
add
sbbb
pop
test
js
int
or
ja
fnsave
rcl
xchg
sub
add
ret
add
shll
push
mov
lcall
and
jle
dec
lock
lret
in
sub
ret
jle
stos
test
add
push
mov
sub
in
cmp
dec
test
add
faddl
movsb
imul
insl
lcall
js
enter
loope
or
clc
and
pop
adc
movsb
fwait
pop
into
add
cli
sahf
xchg
jbe
ljmp
std
jl
xor
outsb
or
cmpsb
cmpsl
push
hlt
dec
int
cli
sbb
idiv
jmp
or
xor
pop
mov
mov
or
inc
mov
dec
insb
sbb
jno
int3
outsl
leave
mov
loop
add
ljmp
gs
or
sbb
jns
fucomi
push
mov
cli
shl
flds
jecxz
call
mov
mov
lock
mov
out
cli
and
pushf
repz
pop
arpl
loop
jbe
pop
es
sub
inc
mov
adc
push
movsb
mov
xor
xor
push
xchg
push
adc
cmp
push
mov
pop
push
sub
adc
pop
test
sub
popf
pop
xor
mov
xor
lret
jno
jecxz
add
mov
lcall
js
cmp
inc
sub
sub
xchg
inc
mov
and
push
mov
and
mov
or
rcll
test
jp
pop
or
jo
pop
fisubl
mov
dec
testb
in
mov
loopne
out
fsubrp
cs
push
adc
push
loopne
cld
pop
cwtl
sbb
inc
lock
jle
data16
adc
add
cmc
and
or
js
cmp
pop
mov
fmul
cld
mov
fdivrl
cld
fisttps
push
or
arpl
addr16
sub
out
adc
mov
icebp
pop
or
fisttps
test
mov
aam
shrb
sbb
sbb
jo
test
or
push
fstps
sub
loopne
adc
push
adc
loop
pop
jmp
sbb
ljmp
pop
xor
pop
js
fistpll
and
fcmovb
xchg
stos
push
fadds
xor
pop
inc
adc
repnz
lds
das
xor
rcll
cmc
je
imul
mov
sbb
lods
test
lcall
adc
jmp
push
insl
xor
jg
ja
cld
or
push
mov
test
cld
mov
jmp
sbb
adcb
push
xchg
cwtl
xchg
sbb
cmc
les
lcall
outsb
xor
into
mov
mov
adc
dec
or
int
jo
mov
push
and
cmp
rclb
mov
fcoml
mov
fstpl
sub
pop
xchg
pop
sbb
pop
cmp
xchg
and
mov
mov
adc
fimuls
cmpsb
mov
xor
push
xchg
mov
out
or
or
clc
out
sarb
hlt
and
and
roll
pop
xchg
xor
insb
aam
jne
nop
cmpsl
decb
jecxz
mov
inc
dec
fimuls
adc
cmp
push
nop
ret
mov
dec
mov
mov
cmp
addr16
and
and
or
xor
jp
arpl
pop
mov
seto
mov
fwait
mov
ret
shlb
mov
je
and
push
jmp
lret
adc
xchg
sub
pop
dec
aad
or
out
fsubrp
dec
adc
sbb
loope
cmp
nop
cmp
call
in
inc
push
xor
mov
aad
mov
in
call
dec
cmpsl
adc
lret
fisubrl
or
mov
mov
mov
xor
shlb
sti
js
jae
shll
fs
sti
push
das
mov
fwait
jns
xchg
push
notl
jae
push
nop
mov
pop
cmp
push
mov
scas
jb
jg
jo
inc
jl
sarb
adc
icebp
or
adc
add
out
mov
es
inc
pop
mov
sbb
jnp
out
imul
add
lock
pusha
test
mov
mov
lods
xchg
xchg
fldenv
shrb
pushf
clc
mov
sbb
in
hlt
test
jo
mov
jle
cmp
sahf
push
pushf
cmpsl
push
lock
pop
mov
mov
xchg
mov
in
pop
sbb
and
dec
clc
cwtl
sbb
das
dec
pop
aam
daa
pop
aam
push
lock
push
testb
insl
jbe
sub
inc
mov
roll
ror
push
test
add
mov
add
xchg
mov
insl
add
mov
cs
mov
in
cmpsb
loop
xchg
pop
sti
leave
add
fidivrl
push
or
test
cmp
pop
xor
adc
inc
push
popf
or
clc
pusha
push
and
out
in
cld
add
sub
jne
rorb
in
iret
std
push
and
mov
dec
dec
sti
push
push
hlt
push
pop
hlt
pop
sbb
or
sub
int
nop
in
push
js
repnz
or
lcall
sub
fld
scas
mov
ret
mov
mov
fidivrs
dec
call
mov
lock
loopne
cmp
aaa
ds
fcmovb
fs
ljmp
mov
in
in
dec
xchg
les
in
pop
mov
xor
mov
xor
scas
pop
leave
icebp
pusha
jmp
fistpll
mov
pop
fs
push
in
push
dec
ret
sub
sbb
or
pop
ljmp
push
cli
ficoml
inc
cmp
push
adc
orb
push
shlb
cs
std
inc
adc
stos
hlt
xchg
lds
shl
sbb
and
loopne
outsb
push
aam
shl
cmpsb
and
out
aam
scas
subb
adc
jecxz
mov
inc
int3
mov
icebp
add
mov
popa
or
sub
out
in
add
jbe
in
push
clc
sub
xor
inc
xor
or
adcb
xchg
xorb
loope
adc
bound
push
ss
mov
sti
ss
test
mov
cmp
adc
push
cltd
shlb
push
adc
adc
fmuls
or
je
sbb
adc
jo
lods
dec
mov
les
xor
clc
pushf
retw
inc
js
xlat
ja
lods
js
adc
repz
and
mov
femms
inc
aam
loopne
enter
pop
inc
xchg
mov
in
ss
call
cld
pop
aas
pop
add
push
ffreep
mov
aas
or
xor
mov
test
sbb
orl
sti
xor
call
cmpsb
mov
imul
xchg
cmp
cmp
push
out
mov
adc
push
cld
lret
cmp
sub
cli
outsb
sbb
add
ret
xorb
and
or
les
repz
inc
sti
mov
inc
ds
push
push
lahf
jbe
push
ja
sarl
mov
xchg
clc
rclb
testl
mov
pop
pop
imul
jle
shlb
daa
sub
stos
mov
xor
incl
fs
sbb
filds
cmp
loopne
shrb
sub
or
in
sbb
or
pop
sub
add
and
adc
add
cli
xor
jb
rolb
fdivp
sbb
inc
inc
adc
mov
push
subb
aad
iret
xchg
jl
fbstp
data16
mov
or
xor
adc
nop
pusha
xor
xor
mov
movsl
mov
push
fwait
in
fneni(8087
xor
mov
mov
ret
jmp
pop
icebp
dec
mov
rcrb
shr
mov
ret
adc
lret
or
xchg
pop
mov
je
gs
imul
push
lcall
adc
or
jmp
mov
in
push
adc
cmpsl
shrl
lods
pusha
lea
xor
adc
sub
add
push
pop
fdivrs
es
lods
in
xlat
psubw
push
incl
push
sub
sub
adc
push
cld
xchg
sub
jl
cmpsb
push
adc
or
scas
xchg
push
mov
pop
and
dec
cld
inc
pop
mov
mov
xchg
jle
aam
mov
jl
sub
testl
pop
pop
daa
dec
sbb
adc
dec
add
outsl
out
pop
mov
bound
xchg
jns
hlt
fwait
test
or
adc
lcall
push
xchg
popa
ss
inc
pop
ljmp
push
adc
xor
or
push
dec
lret
scas
clc
mov
jle
jbe
xor
je
adcb
push
mov
cmp
push
xor
pop
dec
cmp
cmp
dec
cmp
pusha
or
jne
and
cwtl
out
cmc
filds
jmp
sbb
pusha
insb
repz
call
std
sbb
shr
inc
imul
mov
negl
inc
lods
cmp
stos
scas
xor
iret
inc
insb
imul
cmpsl
fs
sub
loopne
xchg
xlat
rolb
das
clc
and
out
pop
lods
mov
ficoml
jl
sub
push
xchg
out
and
jne
int3
add
push
es
es
or
in
push
mov
xchg
xor
cmp
adc
popf
sub
mov
shr
test
jl
loopne
push
sbb
imul
pop
cmp
push
or
subl
adc
enter
ficoml
jnp
fldl
fwait
sahf
mov
out
or
pop
outsl
fstl
fidivrs
mov
std
fbld
or
add
divb
jle
sbb
dec
fistpl
xorl
add
pop
sub
sub
lret
aam
in
test
outsb
aas
xor
pop
fs
jb
mov
xchg
test
or
xchg
scas
clc
lods
fisubrl
lcall
inc
js
dec
add
mov
mov
je
dec
mov
mov
loope
jmp
mov
or
nop
ds
pop
mov
bound
sub
pushl
cld
adc
or
in
lock
test
in
rorb
jae
xchg
in
add
or
loope
addb
cmpb
rolb
add
sbb
insb
push
das
mov
jo
imul
sti
inc
mov
ss
push
in
lods
into
insb
jecxz
xchg
imul
mov
in
push
and
and
jge
sbb
sub
stos
hlt
lret
insl
pop
scas
call
nop
nop
mov
and
negb
adc
je
jns
mov
or
dec
test
sahf
mov
mov
in
cli
icebp
lods
xchg
xchg
cli
stos
icebp
not
push
ds
inc
icebp
enter
fnstcw
shrl
sub
fcoml
add
out
pop
cs
outsb
push
dec
sbb
int
inc
cmpsl
mov
sbb
js
cmpsb
shrb
movsl
xor
cli
cmpsl
out
push
shr
aas
ret
xchg
je,pt
je
decb
and
dec
jae
jl
add
xchg
xor
ret
mov
push
push
push
mov
inc
dec
testb
push
repz
push
in
movl
and
imul
pushf
adc
or
lcall
cld
mov
mov
lret
cmpsb
push
add
enter
and
repz
jo
sbb
mov
jp
int3
and
jno
adc
dec
insb
xor
sub
stos
jo
dec
insl
push
pop
test
push
mov
xor
pop
push
mov
adc
inc
test
sub
jno
mov
mov
jg
data16
popa
inc
sti
out
mov
add
cli
add
add
inc
mov
push
cmpsl
std
mov
or
jle
jbe
xor
ficompl
sarb
and
adc
mov
in
and
lret
icebp
pop
loope
push
push
xchg
or
repz
xlat
sbb
scas
mov
shlb
hlt
pop
xchg
mov
mov
cmp
fdivrs
leave
mov
pop
in
bound
mov
or
loope
ss
mov
loope
lret
fisttps
mov
sub
call
add
and
mov
les
hlt
int3
mov
sbb
add
mov
leave
mov
pop
jmp
mov
cmp
das
inc
push
pop
pop
xchg
lock
hlt
or
es
in
xchg
jecxz
lods
int3
int3
scas
je
js
fstps
je
pop
xchg
sbb
out
jg
mov
ficoml
and
imul
fdiv
inc
rolb
cmp
and
ret
pusha
loope
ret
push
mov
and
mov
mov
ds
out
sbb
stc
inc
mov
inc
sub
hlt
pushl
inc
cmpsb
push
mov
mov
test
mov
gs
insl
stos
popl
xorb
movsb
jo
call
ret
mov
js
or
mov
adc
ret
ljmp
or
jmp
pushl
imul
push
sub
jmp
clc
icebp
push
iret
lock
clc
sahf
inc
movsl
sahf
adc
sbb
dec
add
or
test
sub
les
mov
stos
mov
push
inc
push
arpl
lock
imul
sub
repnz
loopne
loope
pop
es
sarb
std
ret
and
dec
mov
aaa
sahf
cwtl
lcall
jnp
imulb
outsb
rorb
cmp
inc
orl
mov
mov
xchg
hlt
adc
lret
icebp
outsb
push
push
adc
gs
out
pop
jae
mov
fldt
sbbb
out
cmovne
je
addr16
leave
xor
sbb
loopne
mov
test
cmp
pop
clc
out
mov
out
ss
mov
lods
out
sarl
jnp
pop
lock
out
in
enter
test
popf
mov
and
xchg
or
mov
jne
decb
xchg
cli
pusha
xor
and
mov
jne
ja
cli
mov
fisttpl
ret
mov
push
push
ljmp
clc
xchg
fwait
clc
cmp
shrl
mov
add
data16
test
jecxz
or
pop
jmp
hlt
mov
out
adc
and
inc
lcall
jmp
xor
and
cmpsb
pop
mov
add
addr16
push
xor
xchg
or
or
jnp
or
dec
scas
add
mov
daa
outsb
pop
mov
cld
mov
ljmp
dec
dec
mov
mov
iret
cmp
push
sti
enter
adc
cwtl
rolb
decl
std
test
test
xchg
shl
push
dec
addr16
adcl
mov
movsl
out
mov
es
and
cmp
bound
mov
push
insl
and
sarl
data16
and
je
out
aaa
test
push
aam
sub
std
or
lods
inc
rorl
adc
dec
into
in
push
clc
sub
sbbl
cmpl
pusha
cld
sub
inc
fimuls
mov
test
push
cmpsb
mov
cs
sub
or
lcall
sub
sub
aaa
loope
in
pop
arpl
cmp
int
jg
aaa
push
lahf
lods
add
shrb
les
clc
xor
mov
insb
add
jo
addl
loop
das
clc
cmp
mov
fs
mov
mov
jmp
mov
clc
bnd
les
movsb
dec
loopne
mov
or
add
add
push
sbb
lods
lcall
cld
lods
sub
testb
jg
subl
xchg
jns
cmpsb
inc
add
push
ljmp
stos
and
mov
add
sbb
jo
ja
jle
jo
rolb
adc
and
in
xor
lock
sub
fwait
xor
daa
sbb
add
push
pop
icebp
insb
jecxz
dec
jmp
xchg
cmovs
fbld
adc
jl
mov
add
pushfw
pop
int3
aas
pop
cmpsb
mov
xchg
mov
inc
adc
imul
sbb
push
insl
jo
lds
or
pop
in
jbe
rcll
out
cli
jo
test
sub
mov
inc
cli
je
and
sbb
inc
pop
jns
js
cltd
xchg
cmp
jb
ret
rcrb
in
pop
mov
xlat
fidivrl
call
jmp
fbld
lret
sub
mov
cmp
outsb
test
mov
sti
xor
jmp
mov
mov
adc
mov
mov
mov
in
mov
push
cmc
sub
add
leave
sbb
outsb
enter
inc
fwait
or
mov
call
jmp
and
fsubl
mov
stc
adc
mov
sbb
ljmp
std
pop
mov
fmuls
add
mov
mov
jmp
fidivrs
cmpsb
ds
stc
test
inc
pusha
or
jmp
ja
lret
imul
add
sub
test
cmp
inc
mov
fwait
cli
adc
cs
ja
insb
jecxz
and
repnz
push
mov
cli
incl
mov
dec
and
fisubl
push
mov
xor
ret
xrelease
mov
sub
dec
std
or
mov
push
or
stos
sub
mov
icebp
xor
cmp
jg
cli
ds
test
mul
test
cmp
decl
gs
std
jmp
inc
adc
clc
sbb
insl
push
aam
cmp
addb
ss
inc
cmp
dec
arpl
mov
xor
sub
jge
adc
mov
lds
dec
mov
and
mov
push
fcoml
pop
test
cmp
and
ja
mov
jno
scas
push
pushf
imul
adc
das
push
mov
add
cmpb
orb
push
pop
add
mov
cmpsb
cmp
data16
fbld
pop
push
int
pushl
into
cltd
imul
ja
mov
test
loop
push
mov
dec
call
cmpl
add
jp
adc
ret
stc
dec
insl
or
out
xlat
sub
sub
adc
xor
aaa
sub
lcall
scas
or
int3
push
add
fwait
dec
iret
into
and
scas
cli
ret
sbb
das
pop
shlb
xchg
add
sub
rcrb
aam
ret
bound
jae
movsb
scas
or
addb
les
add
jp
in
fcomip
out
pop
movsl
fiadds
cmp
lock
hlt
adc
cmc
sub
or
add
push
xorb
mov
stos
xchg
push
test
std
shll
cmp
cmp
lock
cli
ja
adc
lea
popa
jmp
push
push
sub
mov
mov
jne
push
or
cmc
scas
dec
call
mov
push
mov
ret
jno
shl
fildl
add
sbb
cli
push
orb
mov
push
in
outsb
shrb
pusha
xor
mov
push
aas
jne
jp
lock
lret
idivb
sbb
mov
cmp
mov
mov
push
out
or
pop
negl
repnz
push
push
jne
test
cwtl
je
fldl
rol
test
ljmp
out
movsl
es
or
push
mov
cld
inc
jle
xchg
push
testl
int3
smsw
mov
sbb
sub
push
dec
xor
inc
dec
sar
fcoms
mov
mov
fs
rorb
shrb
sub
jg
push
xor
jg
test
aaa
mov
and
jb
lcall
out
push
mov
rcrl
pop
add
inc
push
mov
mov
aam
js
daa
test
nop
push
lret
jg
push
not
xor
insb
mov
lret
mov
push
lock
ljmp
push
cli
and
movsl
add
cmc
sbb
jg
xor
push
xchg
or
push
mov
jmp
jl
push
orb
add
jp
add
adc
lock
adc
popf
movsb
fisubs
orb
adc
cmp
adc
push
jnp
imul
imul
inc
test
and
dec
push
and
data16
insl
daa
iret
dec
or
aas
push
inc
pop
sbb
pop
push
jo
ss
nop
xor
pop
cmp
and
cmp
cmp
loope
add
pop
add
dec
sub
pop
sbb
inc
inc
loop
and
inc
dec
xchg
dec
in
sbb
insb
adc
out
inc
insl
xor
sbb
pop
push
mov
gs
cmpsb
pusha
pop
xor
es
in
cmpsb
loopne
mov
inc
and
xor
dec
adc
std
or
lcall
sbb
xor
imul
sub
inc
add
fwait
xchg
add
jle
loopne
xchg
movsl
jecxz
mov
mov
mov
es
fdivr
push
xor
xor
movsl
mov
loop
in
inc
pop
xchg
fldcw
inc
jnp
and
movsb
adc
scas
pop
loope
jnp
mov
imul
adc
mov
mov
pop
sbb
or
jl
mov
dec
dec
sub
cmp
cmp
jp
cmp
mov
adc
testb
paddd
mov
repnz
adc
mov
hlt
cwtl
pop
cmpsl
outsb
adc
shl
mov
call
data16
jmp
je
in
in
jbe
xchg
inc
add
dec
cmpsb
es
das
fisubrl
js
cmp
inc
and
pop
dec
sahf
mov
cmpsb
shll
aad
sub
adc
idivb
pop
mov
shlb
ds
shlb
pop
enter
pop
mov
inc
or
xchg
shlb
fdivr
test
pop
jle
outsl
pop
inc
adc
sbb
inc
pusha
xor
pop
sbb
jg
cmc
dec
ds
jl
pop
in
push
bound
fstpl
pop
cld
in
sbb
push
add
stc
test
sti
out
outsb
movsb
and
insb
xchg
add
test
movsl
cmp
sub
lods
add
adc
subl
pop
or
xchg
add
shlb
frstor
xor
js
aaa
loope
lods
xchg
clc
xor
js
xor
push
fs
mov
mov
test
and
pop
sub
clc
leave
adc
imul
je
hlt
aas
sub
rolb
call
push
ja
fnsave
pusha
cmp
jge
js
add
push
out
nop
sbb
into
aas
cld
inc
test
jo
ret
cmp
cmpsl
scas
not
jnp
les
inc
imul
loop
scas
mov
cwtl
cmp
add
sbb
cld
push
or
add
lods
mov
cmc
hlt
xchg
iret
jg
mov
movsb
adc
cli
jmp
call
xor
jp
das
sbb
jo
dec
ret
lock
add
loope
add
and
inc
outsl
cmp
and
jae
lods
xchg
jecxz
inc
fcom
add
enter
inc
sub
icebp
stos
and
fnsave
jno
mov
lcall
rorb
stos
xchg
inc
cmp
dec
and
push
xchg
sbb
popf
pop
mov
ljmp
cmc
loop
hlt
out
testb
add
call
incl
test
js
push
mov
cmp
xor
push
in
push
negb
push
adc
mov
lds
ret
add
clc
arpl
pushf
push
loope
and
mov
movsb
jp
dec
nop
push
jle
fdivl
ret
inc
or
outsl
fdivr
out
lcall
xor
aaa
cld
inc
cli
adc
jo
js
pop
aad
inc
push
rorl
fsubl
in
adc
sub
sub
mov
ret
or
inc
push
ss
inc
lret
push
lcall
jno
fildl
mov
addl
cmpsl
out
pop
insb
mov
add
sub
gs
or
stc
lds
mov
push
not
arpl
ss
mov
outsl
rorb
inc
adc
popa
inc
sbb
jp
mov
inc
fs
or
cmpsl
cs
stos
mov
cmp
into
out
inc
stos
lock
insb
ss
out
mov
aaa
sub
cmpsl
xor
orl
int3
sbbl
pop
les
push
sti
imulb
cwtl
add
popa
out
push
xchg
add
sbb
lcall
testb
jo
fisubrl
push
pop
aam
mov
std
add
push
loope
into
sbb
cwtl
xor
clc
inc
fisubrl
aas
pop
push
mov
ss
mov
sub
pop
dec
into
movsl
fs
mov
pop
mov
and
mov
fldt
push
fmull
mov
cmovge
sbb
loopne
mov
pop
incb
orb
lcall
mov
sbb
mov
imulb
sub
sbb
jns
push
add
test
or
outsl
bnd
das
push
jle
cld
clc
ficomps
mov
dec
aam
loope
mov
ret
in
fdivs
mov
xor
clc
ficoml
push
jmp
cmp
lret
sub
cmp
subl
sbb
add
dec
inc
inc
cmp
jp
adc
mov
jle
shl
sahf
jo
bound
clc
or
sarb
ljmp
sub
push
lods
loope
adc
in
push
or
and
pop
clc
jg
hlt
subl
jp
fcoms
or
rcr
mov
dec
hlt
push
loopne
sub
rolb
pop
sbb
ljmp
mov
xchg
in
lahf
fimuls
mov
push
int3
pop
or
jo
je
in
fstpt
mov
movb
fldt
xor
push
aaa
lcall
std
mov
push
push
sub
mov
jg
test
adc
mov
xor
or
pushl
pop
mov
in
fsubr
add
sub
or
sbb
cmp
jecxz
sub
mov
or
frstor
push
push
fnstcw
sbbb
aaa
pop
mov
lds
dec
jo
aad
inc
movsl
or
xlat
dec
push
arpl
xchg
jle
sbb
mov
repnz
ja
adc
push
inc
lcall
inc
cli
jmp
test
nop
les
fidivs
imul
sub
mov
cmp
sbb
out
test
pop
bound
daa
add
repz
negl
outsl
push
push
pop
xchg
mov
popf
clc
out
cmp
ss
add
movb
scas
push
je
mov
cmp
or
pminub
mov
inc
push
loop
mov
mov
push
scas
mov
adc
or
mov
in
addl
sbb
mov
orl
rolb
or
call
test
and
add
pop
and
rcll
and
cmc
mov
mov
jno
pushl
scas
push
add
sbb
add
jbe
stos
cmpsl
daa
push
daa
in
scas
out
add
jns
stc
repz
lock
and
pop
xorps
sub
aad
std
roll
mov
sar
jmp
inc
cmpsb
and
sub
push
outsl
sub
lahf
clc
imul
test
add
mov
sub
add
addl
xor
nop
shrl
cmpsb
push
mov
psubd
jg
ret
ret
pop
mov
push
iret
insl
mov
mov
lock
add
dec
lea
adc
mov
pusha
dec
lret
clc
pop
mov
or
dec
add
loopne
mov
sar
push
cld
out
or
xor
leave
jnp
stos
arpl
push
or
xchg
sbb
fisubrl
inc
add
dec
adc
int3
mov
push
sub
push
push
outsb
call
sub
lcall
nop
xor
inc
stos
sarl
ficoms
in
dec
inc
lods
pushl
fcoml
loopne
lret
mov
std
mov
or
popa
pop
push
test
ss
xchg
stos
sbb
add
mov
pop
or
mov
ljmp
inc
sti
int3
sarb
dec
icebp
insl
xor
add
mov
test
or
sub
les
cmp
pop
mov
and
mov
in
out
sbb
pop
mov
fdivr
sahf
pop
mov
mov
loope
popa
sbb
jg
sub
bnd
pop
add
jge
js
sbbb
subb
fnstenv
mov
test
mov
cmp
ss
cmpb
push
call
push
inc
les
out
push
fsubrp
addb
mov
ret
icebp
jg
ljmp
in
es
push
jp
scas
call
xor
dec
pop
push
jg
lret
testb
inc
or
int
sbb
lret
mov
js
sub
sub
lds
inc
jge
nop
jne
aad
insb
mov
dec
pusha
cmp
mov
adc
das
test
loopne
icebp
pushl
and
and
push
jge
push
leave
xchg
dec
scas
mov
fidivl
mov
pushl
arpl
fistpll
adc
cmc
ja
mov
loop
movsl
mov
xchg
ds
dec
sbb
mov
adc
or
push
ret
fistps
push
lock
ret
and
add
xchg
add
scas
es
pusha
add
inc
dec
sbbb
mov
xor
cmpsl
fstps
pop
loopne
clc
and
cmpb
pop
stc
adc
sbb
addb
hlt
or
inc
outsb
xor
xor
mov
shlb
hlt
std
push
push
add
and
lods
and
incl
pusha
push
js
or
int
cld
jg
sar
test
jmp
inc
repz
add
jbe
mov
fbstp
mov
adc
push
push
aaa
jb
inc
push
fdivl
add
jg
pop
scas
cmc
add
add
mov
pusha
jg
pop
std
xchg
repnz
aam
outsb
scas
adc
push
lock
inc
mov
mov
mov
inc
xchg
sbb
incb
xor
mov
lock
ss
mov
orl
orb
mov
test
int3
aas
ljmp
out
adc
incl
test
xchg
cmpl
dec
rclb
call
xchg
orb
pushf
das
test
fildll
xor
and
mov
and
stos
cmp
imul
mov
push
inc
rolb
ret
pusha
push
movhps
cwtl
cltd
mov
decl
lock
loop
fucomp
add
lock
push
pop
out
inc
mov
pop
xchg
pop
inc
pop
inc
clc
scas
call
jp
mov
daa
cmpsb
mov
insl
loopne
xor
jns
movsl
or
push
push
add
loope
xor
cmp
jg
sbb
loope
dec
inc
mov
in
xor
push
and
sbb
lea
pcmpgtd
clc
pop
stos
mov
mov
pcmpgtw
das
stos
adc
xchg
lret
insb
pusha
jmp
pop
push
push
cli
pop
sub
stc
pop
aad
pusha
sbb
inc
loop
mov
mov
sbb
add
mov
pop
adc
je
sub
std
outsl
js
test
push
xchg
repz
and
jo
pushf
cld
mov
inc
and
mov
xchg
sub
cmc
push
mov
call
cli
cmpsb
fnstsw
pop
repnz
movsb
inc
mov
je
loopne
xor
push
ret
pop
insl
aas
ljmp
add
lea
sub
cwtl
dec
push
pop
push
jl
lock
cmp
jns
mov
push
fisttps
sbb
sub
jns
push
dec
pop
jmp
scas
jae
ficomps
inc
inc
ds
or
mov
and
push
push
out
or
cmp
mov
add
mov
sbbl
outsl
test
or
add
pop
add
and
or
dec
rcll
incl
jne
jnp
push
or
push
mov
ja
inc
cmp
mov
sbb
or
clc
in
push
cli
lods
fimull
sti
or
add
xchg
xchg
adc
push
mov
test
xchg
pop
jmp
in
mov
scas
repz
sub
pop
cmp
fisttps
loopne
in
jmp
cmpsl
xchg
add
inc
adc
or
push
cli
ds
and
pushf
enter
addr16
push
std
mov
dec
shlb
xor
fisttpll
mov
cltd
pop
mov
repz
scas
movsb
ja
cmc
test
sbb
add
jle
xchg
mov
sbb
adc
inc
mov
jns
add
int3
js
incl
push
add
rolb
fcomps
jg
cmpsb
lds
lret
ljmp
inc
outsb
lahf
fstpt
push
cld
shlb
lret
out
mov
push
aaa
jl
and
adc
fnstenv
rolb
mov
sarl
mov
and
push
push
incl
push
inc
push
xchg
cmpsb
icebp
push
mov
jle
xor
adc
call
in
mov
adc
fs
push
sbb
mov
push
scas
cmp
movsb
xchg
sbb
xchg
or
mov
mov
stos
push
outsl
push
bound
in
scas
mov
push
fld
mov
inc
ja
decl
push
xchg
jbe
fdivr
adc
xchg
pop
cs
add
push
arpl
adc
lock
xor
inc
fwait
clc
add
xchg
dec
cmc
stos
pop
imul
mov
jle
and
pop
jno
out
sub
jp
add
ljmp
inc
in
xlat
pop
mov
and
push
insb
shll
sti
ja
push
lea
push
mov
add
jge
dec
push
ret
inc
mov
lock
imul
adc
mov
ficompl
push
push
pop
or
mov
fs
test
push
cmp
push
add
dec
or
xor
adc
mov
movsl
xor
mov
fucomp
ja
repnz
fdivr
shll
xor
icebp
and
aad
push
mov
pop
mov
add
data16
adc
mov
add
or
or
ja
aam
jg
in
ficoml
push
xlat
loop
cmp
inc
ficomps
hlt
adc
aam
mov
sub
push
adc
jbe
stos
sub
lret
imulb
incl
adc
or
pop
or
jg
incb
cmpsb
add
pop
pop
stos
push
les
mov
inc
mov
inc
es
sbb
adc
push
mov
outsl
xor
cs
xor
out
mov
int3
test
ljmp
mov
outsb
cmc
push
cmp
movsl
mov
mov
lods
push
fadds
cwtl
ret
imul
pop
cli
lcall
mov
inc
enter
std
cmp
push
test
inc
adc
add
add
loopne
mov
cs
push
pop
push
iret
mov
jo
test
add
adc
mov
mov
add
push
cld
push
cli
mov
shrl
inc
ret
inc
imul
test
mov
aam
push
mov
pop
push
xor
mov
bound
sqrtps
aad
or
mov
push
cli
jg
popf
adc
pushf
jbe
data16
pop
mov
sbb
enter
or
shl
stos
cmc
lcall
add
xchg
lods
rorl
jp
fdivr
outsl
insb
push
add
cmp
sbb
or
mov
shll
insl
test
xchg
lret
loope
movb
pop
jg
cmp
sbb
insb
push
ret
aaa
ss
arpl
movsb
fmull
test
dec
cmp
fsubrs
xlat
sbb
inc
xlat
dec
and
ss
ss
repz
mov
sub
cltd
pop
sub
dec
pop
cmp
inc
mov
sbb
xchg
les
fiadds
adc
imul
ror
push
popa
sub
adc
mov
test
aad
push
int3
icebp
les
pop
cmp
mov
dec
sar
mov
mov
mov
popa
sbb
pop
and
js
enter
in
ds
add
cmp
inc
push
dec
hlt
int
jmp
jg
inc
cs
mov
sar
cmpsl
push
loop
leave
jno
mov
cmp
add
sbb
push
mov
decl
mov
xchg
push
sub
add
fbstp
inc
dec
imul
pop
push
lret
and
push
cmpsb
push
rorb
mov
jg
sbb
adcb
nop
xchg
dec
xor
mov
cmpsl
lods
loop
cwtl
add
mov
cmpsl
out
sar
decl
aas
xchg
push
sbb
insl
mov
aaa
test
cli
push
insl
push
lods
movb
dec
or
ja
in
dec
in
adc
pop
div
enter
add
je
rol
nop
fisubs
and
stos
es
jns
daa
les
xchg
sahf
xchg
and
testl
clc
roll
enter
mov
fnsave
cmpl
insw
cld
stos
jl
movaps
sub
inc
pusha
mov
fwait
push
inc
mov
jge
movsb
out
pop
in
cwtl
mov
add
mov
dec
push
test
out
mov
lret
call
mov
mov
pop
icebp
sbb
xor
jo
bound
cwtl
mov
frstor
or
scas
dec
mov
xchg
adc
cwtl
mov
push
loope
adc
adc
std
sbb
jle
into
sbb
jmp
mov
pop
lods
sub
lock
cs
cld
cld
mov
call
push
jo
adc
cld
sub
xor
shr
push
inc
cmc
std
mov
jl
cmp
test
and
in
loopne
add
aam
push
test
test
sbb
xor
cmp
jg
pop
mov
out
fisttpl
add
pop
fwait
in
scas
movsb
hlt
pop
out
jp
test
jo
in
in
sbb
outsl
aam
test
incl
push
cmp
mov
es
inc
cmp
outsb
out
mov
ret
iret
mov
loopne
lods
stos
out
xor
adc
lahf
out
movsl
hlt
jmp
loop
dec
add
rcl
mov
lahf
pop
and
scas
adc
sub
fsubrs
jle
cmp
test
sub
cli
cmpl
jl
pop
mov
inc
jp
loop
cmpsb
mov
add
dec
test
push
inc
movsb
inc
xor
cwtl
sbb
loopne
sahf
jecxz
movb
pushf
pop
xchg
addb
dec
mov
cmp
ljmp
outsb
cwtl
out
decl
or
filds
mov
inc
shrb
mov
aaa
push
xor
inc
inc
cmp
lods
nop
clc
out
insb
pop
test
pop
mov
inc
ljmp
or
inc
inc
adc
std
loop
data16
enter
sar
and
mov
daa
decl
sub
cld
or
xor
mov
add
jecxz
lds
fldcw
in
mov
icebp
das
int
adc
sbb
mov
jg
sub
mov
adc
dec
pop
lods
jp
mov
adc
shrl
insl
scas
jno
sub
stos
dec
jo
and
dec
add
fisubrs
cmp
rorl
xchg
lods
scas
ficompl
mov
inc
std
jg
xor
sbb
xchg
pop
adc
mov
bound
dec
push
enter
inc
clc
jg
loope
xchg
add
dec
stos
lahf
add
xchg
xor
outsl
push
lea
dec
xor
ss
cs
loopne
js
mov
popf
pop
jbe
inc
sbb
cmp
icebp
xor
xor
inc
xchg
testl
lret
sbb
test
or
addl
icebp
sbb
fdivr
mov
pop
pop
nop
pop
sti
sbb
or
lea
popa
xchg
sbb
jns
pusha
aad
lret
sbb
push
je
test
dec
sbb
test
push
mov
ffreep
test
divb
in
je
xor
pushf
in
add
cwtl
cmp
gs
stos
push
xchg
test
test
insb
mov
sub
outsl
xchg
add
inc
mov
enter
jg
sub
cli
add
xlat
cmp
mov
mov
aaa
insb
je
lock
or
test
sarl
scas
inc
sbb
add
mov
mov
jecxz
imul
add
cmpsl
imul
arpl
pop
xchg
cmp
inc
add
or
mov
mov
pop
jo
xchg
and
push
and
daa
test
and
mov
cmp
adc
bound
jg
stos
mov
pushl
sbb
mov
mov
fwait
fs
cmpl
test
push
in
aas
push
aam
shlb
xlat
testl
xor
xchg
inc
mov
icebp
pusha
xchg
adc
lods
imul
pop
test
imul
cld
pop
test
xor
mov
add
in
jl
pop
sub
icebp
leave
clc
jp
popf
or
int3
and
pop
mov
xor
mov
orb
dec
mov
jo
pop
test
sahf
adc
lods
shl
iret
addb
sub
roll
push
ret
roll
ljmp
mov
sub
dec
mov
mov
insl
mov
and
mov
pop
xchg
subl
push
add
mov
mov
mov
inc
adc
pop
fnstcw
add
ds
rcrl
aaa
dec
jns
fs
add
mov
packuswb
ret
jmp
mov
fcoml
mov
mov
mov
inc
ret
scas
fsubrs
pop
enter
rcrl
adc
lds
inc
or
ret
lods
in
insl
scas
mov
inc
outsb
insb
push
pop
cli
ret
jge
stos
aad
and
dec
mov
mov
loopne
fcomps
hlt
pushf
or
out
or
scas
jp
test
and
push
or
mov
movsb
out
fsubs
xchg
ljmp
lock
mov
add
scas
adc
mov
jecxz
out
aam
fdiv
sbb
bound
ds
sbb
sbb
jp
jmp
mov
or
mov
xchg
jmp
popa
mov
push
add
cld
and
cwtl
repz
pop
addb
jp
add
inc
rorl
mov
stos
testb
xchg
ljmp
push
dec
outsb
or
sub
jge
loop
mov
sbb
push
stos
mov
xor
lds
fcompl
and
fildl
cmp
loop
cltd
push
rorl
lret
test
lock
xchg
or
xchg
pop
pop
jl
push
jg
addr16
sub
outsb
mov
aas
sbb
pop
xchg
mov
int3
retw
lock
call
imul
dec
jecxz
mov
xor
outsb
mov
js
clc
enter
call
test
icebp
jne
lock
adc
std
ja
movsb
jae
sbb
cmp
decl
cli
xlat
cs
sub
loopne
imulb
pop
and
aaa
xor
mulb
xchg
push
mov
add
ret
cmp
fnsave
arpl
inc
filds
mov
mov
dec
jecxz
insb
adc
out
hlt
getsec
cli
lret
push
or
cmpsl
add
dec
mov
leave
test
lds
in
outsl
add
xacquire
ret
lods
fidivrl
pushl
dec
lock
push
pop
push
inc
loop
in
add
ss
adc
pop
push
test
cmp
fstpl
cs
in
jmp
pop
pop
and
sub
hlt
add
ljmp
test
inc
pusha
in
add
addl
frstor
add
inc
or
std
cltd
clc
aaa
cmp
push
xchg
push
dec
rorb
push
inc
les
adc
inc
lcall
adc
jg
test
icebp
es
inc
jb
sub
pop
sub
cmovs
sub
clc
sub
pop
cmp
or
movsb
aas
mov
cli
dec
jmp
orb
pop
or
push
iret
sahf
sbb
mov
xlat
decb
adc
mov
xor
inc
movsb
pop
cmpsl
vmread
or
xchg
push
ret
push
pop
icebp
jg
ds
push
mov
push
movsl
sub
ds
push
pushl
or
push
test
call
mov
xlat
lea
ljmp
xor
jl
data16
decb
push
fs
test
xchg
or
cmpsb
sub
popf
mov
xor
mov
xchg
cltd
jne
mov
mov
sbb
mull
xchg
ds
xchg
pop
hlt
cmp
out
iret
cli
cmp
std
enter
and
add
data16
std
cli
mov
cwtl
adc
sub
dec
mov
pop
mov
mov
es
mov
mov
cli
icebp
inc
outsb
out
lret
sub
mov
pop
sbb
jg
hlt
mov
nop
inc
cmp
and
add
jge
jno
mov
add
jnp
popw
sbb
xchg
and
mov
push
add
pop
and
neg
je
call
icebp
test
out
dec
outsb
jp
dec
stc
or
cmpsb
test
cmp
or
xor
dec
push
pusha
call
fadds
sub
xchg
loopne
pop
jle
dec
push
out
lods
aam
push
incl
sub
cltd
dec
std
lret
outsl
incl
sbb
mov
cmp
mov
fldl
mov
dec
xchg
inc
repnz
in
adc
addr16
inc
jmp
xor
rolb
mov
mov
adc
popa
push
test
outsb
stos
clc
incl
inc
fadds
enter
or
mov
in
jb
rcll
stos
and
test
add
int
je
nop
lock
jl
push
lcall
push
pop
mov
mov
adc
add
out
mov
shll
jp
xchg
pop
cld
mov
xor
sbb
pop
pushf
lods
insb
fisubrl
jge
cmpsb
aam
mov
or
jbe
shrl
cmp
or
pop
fbld
sub
or
cmc
push
imul
xchg
dec
ds
sub
ss
aaa
loope
xchg
mov
bound
scas
lcall
sbb
mov
mov
imul
lcall
mov
addb
sbb
outsb
inc
sub
pop
jno
hlt
ja
adc
and
ss
pusha
mov
ljmp
inc
or
xor
stos
jmp
mov
mov
cmp
ja
sub
outsb
mov
pop
and
je
dec
mov
rclb
rcrb
movsb
stos
jo
cli
add
lcall
flds
pop
std
dec
add
les
and
sbb
adc
sbb
push
sbb
mov
push
decl
mov
sub
sbb
xchg
sbb
ror
add
call
test
adc
mov
adcb
jle
lcall
jecxz
mov
mov
in
push
lods
popa
or
aaa
mov
push
out
cwtl
pop
mov
pop
inc
inc
es
sarb
push
jnp
std
sub
mov
cmp
out
inc
int3
push
sti
clc
inc
inc
and
shl
sbbb
movsl
push
push
mov
out
push
mov
push
cmp
add
sarb
pop
test
xor
or
lods
loopne
ret
xlat
les
rclb
dec
sarb
addb
sbb
xor
sarb
jb
xor
roll
add
push
mov
or
ret
push
sahf
test
add
cmp
mov
insb
jge
inc
adc
gs
sbb
jecxz
cltd
cmc
negb
aaa
and
scas
cwtl
and
xchg
test
lock
adc
popa
sti
or
xor
es
dec
and
call
xor
clc
ljmp
nop
push
xor
jmp
sbb
call
ss
mov
lret
sub
jbe
ljmp
and
sbb
add
inc
adc
das
and
inc
loop
insb
clc
lahf
cli
mov
cmp
mov
add
stc
xor
push
loopne
sub
mov
sbb
mov
fcomps
scas
or
cmpb
jo
cli
cmp
xchg
pop
push
shrb
rorb
mov
out
popl
fiaddl
cmp
xchg
shll
dec
jl
pop
push
or
xchg
decl
or
stc
jno
xchg
sub
cld
jp
or
or
xchg
cmc
mov
roll
decb
push
jae
pusha
jle
xchg
jo
mov
push
fwait
sub
insb
in
movaps
pop
jp
sub
data16
sub
mov
jno
dec
pop
push
icebp
sbb
mov
mov
fsubs
adc
callw
add
nop
imulb
mov
inc
movsb
stc
push
lret
mov
inc
sub
shlb
in
sbb
push
pushf
push
xchg
mov
lods
jne
mov
mov
dec
add
cld
stos
rcr
movsb
mov
jmp
pop
add
pop
std
dec
ficompl
popf
call
add
adc
fnsave
adc
pop
cmc
inc
stos
mov
out
mov
pushf
pushf
mov
dec
sbb
out
add
inc
fs
dec
sbb
ja
cvtpi2ps
and
xor
push
in
je
mov
test
fmuls
arpl
cmp
cwtl
mov
or
fs
cmp
push
pop
jle
icebp
and
repnz
jns
or
es
div
xchg
xchg
clc
fistl
mov
xchg
inc
mov
add
addb
cmp
nop
or
pop
mov
inc
int3
mov
mov
push
ret
jb
fwait
push
xchg
sbb
dec
jp
jg
pop
xchg
push
loope
add
xchg
inc
out
insb
inc
dec
jp
cmp
push
lock
sub
aad
das
es
js
fistl
adc
or
sarl
add
add
mov
jne
cmp
mov
pusha
stc
loopne
jmp
dec
jg
mov
sub
xchg
inc
fidivrl
and
jbe
pusha
loopne
jmp
lds
inc
int3
xchg
std
add
movsb
jbe
xlat
xchg
imul
testl
call
inc
js
test
inc
mov
outsb
lcall
push
pop
mov
pop
aad
pop
in
popf
fldenv
je
or
stos
mov
iret
mov
cmp
jb
or
aas
faddp
fists
inc
pusha
push
mov
and
inc
xor
ljmp
cmp
add
jecxz
add
and
pop
loope
loop
movq
das
sbb
aad
popf
inc
push
add
dec
sub
mov
and
cli
mov
add
lock
sub
mov
aad
mov
test
dec
mov
loop
mov
xor
cs
das
or
jo
std
fdiv
or
adc
insb
adc
jge
cltd
sub
push
adc
test
push
lret
add
or
fwait
std
add
lea
push
adc
pusha
sub
pop
scas
mov
cwtl
or
popa
es
mov
or
ja,pt
jge
sub
dec
stc
addl
iret
test
outsl
pop
int
dec
inc
lcall
or
and
jle
mov
lcall
mov
add
xchg
test
ljmp
insl
adc
mov
test
jl
mov
sub
ss
adc
sub
jmp
jno
ds
punpcklbw
cmp
sbb
or
jp
push
out
out
fimull
cwtl
or
mov
jge
mov
jge
loopw
fwait
mov
dec
cmpsb
das
clc
das
clc
xor
xor
lock
outsb
mov
push
sbb
xor
fisubs
adc
push
test
movsb
inc
cmp
push
clc
inc
push
fildll
loop
sub
xor
call
mov
adc
push
inc
js
pop
cmc
mov
mov
inc
xor
cli
dec
push
cli
mov
mov
pop
pushw
xor
stos
or
icebp
jg
loopne
mov
cli
ds
push
mov
push
xor
shlb
repnz
jmp
adc
xor
rcll
push
popa
insb
fiaddl
mov
loop
add
add
lods
sarb
xchg
jmp
sub
lret
push
push
xchg
dec
sahf
insb
gs
lods
daa
lods
loop
and
stos
add
and
int3
and
arpl
sbb
mov
mov
les
lds
sbbb
les
pop
mov
lcall
fnsave
xlat
mov
push
push
cmpb
and
pop
cltd
fiadds
lock
lea
scas
dec
mov
daa
dec
loopne
setge
pop
mov
mov
push
enter
rolb
adc
cmp
mov
cs
cs
mov
push
xchg
ljmp
ja
push
lds
xchg
push
xchg
or
mov
add
mov
je
jns
int
arpl
lds
add
leave
push
das
or
inc
sub
subb
push
or
negl
jp
or
jnp
mov
sub
aas
add
divb
dec
sahf
mov
or
xchg
jo
std
dec
bound
or
jp
mov
dec
andb
outsl
cmp
xor
cld
cmpsl
mov
shrb
jb
xor
cld
or
rol
pop
push
loopne
add
aam
add
push
xchg
adc
nop
jmp
les
sbb
fwait
adc
out
std
stos
mov
push
imul
andl
shl
fildll
xor
loop
mov
andl
add
mov
dec
adc
pusha
addr16
pusha
jae
inc
mov
jmp
dec
sbb
push
adc
jno
movsl
pop
jp
mov
mov
cli
pop
or
xor
outsb
das
call
cmpsl
mov
jge
negb
push
lods
pushf
add
inc
mov
je
inc
stos
cmpsb
aaa
insl
dec
sbb
jo
sbb
and
pop
push
mov
sbb
mov
incl
sarb
push
dec
mov
inc
add
nop
aam
and
call
and
movsb
outsb
cmpsb
sbb
sarl
add
stc
push
not
jns
lods
test
ret
fistpl
xchg
data16
cltd
inc
push
jg
out
aas
rorb
jp
mov
jg
test
jl
pop
xchg
mov
loope
jle
ror
loop
scas
daa
pop
es
pop
daa
mov
mov
adc
push
cld
pop
cmpsb
lods
in
push
jle
and
adc
lods
test
add
mov
inc
lock
hlt
cltd
cmp
and
add
mov
sub
jb
jle
adc
loope
and
cli
scas
aam
dec
imul
jge
loop
pop
in
lahf
repz
or
sub
or
or
loopne
jg
dec
xchg
push
xor
jg
add
pop
mov
adc
jge
mov
sarl
or
sbb
mov
xabort
push
jle
jl
jmp
jae
mov
bound
jo
xchg
jle
sub
sbb
xchg
sub
push
mov
add
fwait
movsb
ret
fstpt
rorl
rorb
add
mov
jbe
cltd
push
xchg
mov
inc
dec
scas
or
mov
mov
nop
es
mov
push
or
aaa
jl
jns
pop
cltd
cmp
fdivl
mov
lods
pop
std
enter
shr
sub
xor
decl
mov
aas
mov
in
sahf
mov
cld
xchg
fnsave
xor
loope
pop
jno
repnz
aaa
out
das
repz
sbb
sbb
fcompl
mov
xor
add
sub
stos
ds
cltd
rorl
mov
xor
mov
mov
sbbb
mov
in
outsb
cmp
add
xchg
inc
clc
pusha
mov
xchg
not
dec
adc
test
jl
icebp
push
ret
xchg
pop
dec
jecxz
movsb
jl
add
adc
xchg
scas
jecxz
inc
cwtl
fcomps
dec
push
insl
pop
pop
xchg
push
outsl
jmp
jge
clc
sbb
adc
inc
and
or
and
xchg
mov
xchg
ret
ja
dec
jecxz
push
adc
lods
movsb
roll
cmp
mov
push
lods
pop
lea
jle
aam
xchg
mov
call
add
or
adc
mov
add
jb
sbb
or
ljmp
jp
call
dec
mov
xor
loop
and
movsl
mov
inc
les
fbld
push
mov
in
pop
push
mov
jmp
outsb
cmp
jecxz
mov
cld
or
mov
jl
pop
sbb
leave
xor
imul
aas
es
push
test
cld
scas
dec
adc
jmp
xchg
lret
dec
push
xchg
icebp
outsl
or
nop
adc
mov
pop
hlt
mov
enter
cmpb
in
lods
out
sub
test
xchg
cs
js
push
lea
pushf
daa
adc
sbb
arpl
push
std
fs
cs
stos
inc
xor
xor
mov
mov
push
lcall
es
pop
adc
ljmp
call
sub
inc
mov
push
insl
mov
out
adc
cmpsb
xchg
scas
mov
dec
adc
and
outsb
loopne
xchg
or
push
push
or
shl
cmpsl
insb
int
sbb
int
add
pop
jno
push
sub
or
dec
xchg
pusha
lds
dec
inc
and
add
fadd
imul
ja
pop
leave
cli
xlat
popf
pusha
fstpl
inc
pushf
inc
mov
das
sub
aas
jl
mov
lods
pop
outsl
mov
mov
jge
lock
fcomip
lods
lea
mov
in
xor
das
jmp
xor
movzbl
cmpsb
cmp
mov
cmp
dec
loop
mov
and
mov
pop
mov
push
jg
sbb
mov
js
sub
repz
lea
push
jecxz
cmp
stc
mov
adc
test
pop
filds
pop
fs
enter
mov
or
jb
jmp
xor
sub
mov
movsb
adc
xchg
dec
inc
or
filds
and
pushf
pusha
pop
hlt
out
push
jecxz
cld
and
adc
xchg
lods
call
xchg
dec
push
shlb
push
xchg
sub
mov
mov
jl
lods
jo
xchg
jns
fwait
imul
cld
mov
test
pop
jp
inc
jge
fcoml
out
cmpsb
push
xor
xor
fisttpl
fmuls
push
pop
insb
dec
pop
mov
cmp
and
hlt
mov
cmpsl
mov
cmpsl
or
ret
pminub
mov
sub
ja
subb
js
pop
cs
clc
pusha
lahf
mov
pop
cmpsb
js
jne
nop
mov
add
push
push
arpl
push
pop
lret
mov
jecxz
mov
scas
sbb
mov
cmp
sti
outsl
add
andps
cld
or
fwait
loope
cmp
cmpsb
cmpsl
cs
xchg
rol
mov
rcrl
cmp
jge
xor
mov
pushf
push
jp
sbb
aad
dec
mov
clc
sub
dec
cli
inc
out
dec
add
mov
test
sbb
fcmovnb
push
sbb
adc
and
sbb
fwait
cmp
pop
dec
aas
les
xchg
inc
inc
cltd
out
lods
jcxz
fiadds
dec
fucomp
push
jl
mov
add
adc
mov
test
shll
loopne
pop
loopne
stos
mov
outsb
cmp
loop
adc
cld
pop
xchg
mov
cmp
push
mov
xor
enter
inc
cs
repnz
aam
lock
sub
add
push
push
in
aam
pop
push
insl
orl
cli
repz
mov
sbb
or
jp
jbe
mov
or
sahf
inc
mov
das
add
dec
shlb
insl
in
dec
adc
adc
popa
hlt
sub
adc
loopne
mov
cmp
xchg
jne
mov
adc
push
jmp
dec
xchg
pop
inc
sub
or
scas
or
mov
xor
out
outsb
sub
mov
test
mov
lea
and
adc
cmpsb
sahf
lret
nop
and
jg
add
sahf
pop
rcrl
nop
popa
sbb
lcall
jno
fisubrs
sete
sub
push
add
push
popa
pop
sub
inc
add
push
or
fsubs
scas
pop
push
mov
rorl
inc
sti
mov
out
movsb
cmp
pop
cmp
mov
jae
stc
pushl
inc
js
notl
jecxz,pn
mov
ja
push
fcmovu
push
push
sbb
jle
or
sub
cs
clc
pop
xchg
sub
xorb
mov
hlt
call
push
and
jmp
int
mov
xchg
lods
adc
pop
in
pop
fs
jg
mov
xchg
sub
xchg
mov
or
es
out
les
in
cltd
mov
xchg
mov
es
or
mov
mov
mov
sbb
mov
jbe
xchg
mov
rolb
in
mov
fwait
bound
call
sub
int3
and
mov
stos
jle
lea
jmp
nop
cwtl
jo
mov
sub
mov
pop
jl
subb
ss
pop
into
sbb
lahf
cld
jbe
and
push
test
jl
in
aam
add
in
sbb
je
cld
pop
jnp
rorl
subb
pop
jnp
pop
aad
add
je
mov
adc
jb
pop
pop
sub
add
push
jo
lock
or
loopne
stos
mov
push
nop
call
lods
inc
loope
sbb
jno
mov
test
repz
jno
repnz
or
out
fisubs
test
adc
or
pushf
cltd
clc
mov
aam
movsl
fcomip
dec
jb
xchg
insb
int
aad
jp
pop
xchg
notb
aad
lock
pop
nop
mov
fdivrs
stos
lea
lea
mov
jns
pop
arpl
jnp
lret
in
sub
out
insl
mov
push
pusha
push
mov
lods
daa
dec
mov
out
push
sbb
pop
jb
or
jg,pn
ret
or
jnp
aam
cmp
add
or
testb
fcomps
das
nop
std
xchg
jp
or
rorb
enter
cli
andl
add
test
cs
sbb
pusha
mov
cmp
cwtl
daa
ret
adc
clc
call
jbe,pn
sahf
mov
xor
cwtl
mov
nop
int3
inc
mov
std
into
arpl
std
icebp
pop
arpl
int
and
mov
mov
pop
outsl
iret
pop
adc
cmp
push
cmp
rcr
les
mov
mov
jl
or
outsb
ficoml
cmc
cld
je
xor
xchg
inc
push
imul
js
xorl
and
add
ud2
ficompl
and
out
xchg
push
std
lret
icebp
clc
lea
jp
stos
mov
jp
mov
add
jmp
imul
js
and
push
leave
cli
cmpsl
test
mov
insl
adc
imul
adc
rcr
je
jp
insb
rclb
lahf
cmp
arpl
sbb
inc
ljmp
in
mov
mov
mov
and
pushf
mov
mov
inc
add
aaa
sub
sbb
cld
cs
pop
test
inc
inc
out
adc
and
xchg
hlt
ret
mov
divl
xchg
sbb
sub
push
pop
sar
or
mov
xchg
nop
push
push
jns
cmpsb
dec
jmp
cmc
push
lea
adc
add
push
mov
out
sbb
sub
hlt
pop
mov
push
movhps
adc
fcomps
cmpsl
loope
pop
dec
psubsw
pop
jmp
xor
sbb
mov
scas
and
pushl
inc
loope
data16
out
adc
mov
add
pop
cld
cwtl
fwait
mov
mov
push
and
mov
sub
insb
mov
out
push
cld
dec
xchg
out
add
fsubr
push
push
mov
sbb
xchg
icebp
sbb
mov
pop
js
mov
cli
or
pop
daa
ds
cmc
cli
movsb
inc
xor
cmp
sbb
negl
scas
test
pop
and
mov
dec
cmp
sub
mov
xchg
test
or
lret
jl
adc
add
pop
lahf
cld
daa
xor
mov
sbb
das
les
mov
push
negb
fdivr
scas
and
push
test
cmc
adc
outsl
je
add
mov
sbb
jns
jmp
xor
outsl
push
xor
pop
mov
fstpt
mov
clc
sub
cmpsb
pop
and
stos
dec
dec
inc
add
xchg
orl
data16
jp
icebp
loope
mov
test
mov
dec
ja
mov
sbb
pusha
repz
movsl
and
mov
inc
adcb
lods
decl
cmp
inc
std
and
push
orb
xchg
and
inc
repz
sub
sbb
cmpb
mov
cmp
fcomip
stos
adc
inc
outsl
fisubl
mov
loopne
sarb
je
and
push
mov
jmp
push
mov
loopne
enter
mov
jl
imulb
inc
jge
rcrl
add
sbb
cmp
jl
call
lock
cmp
fdivs
aas
pop
mov
rclb
stos
in
and
mov
cmp
in
lods
jg
sub
mov
mov
xor
jne
mov
dec
xchg
xlat
and
ret
mov
adc
cmovp
adc
loop
dec
arpl
fildll
adc
mov
sbb
mov
fdivr
pop
dec
pop
push
inc
je
notl
sub
xorb
mov
jbe
pop
mov
add
aaa
loope
frstor
outsb
lods
and
daa
jle
mov
in
hlt
pop
add
rclb
dec
lods
pop
test
decb
or
and
add
and
aam
dec
std
test
shl
mov
pusha
jmp
aam
push
fcomps
test
cmp
pop
sbbb
mov
or
inc
sub
adc
std
mov
xor
push
test
mov
clc
cmpl
mov
daa
mov
dec
test
cs
out
je
mov
into
add
cmp
mov
fsubrl
pop
mov
pop
lods
mov
or
mov
stc
ficoms
sub
cmpsb
sub
dec
mov
adc
sub
add
mov
je
jnp
jae,pn
mov
and
test
fwait
popf
sbb
add
mov
xchg
or
push
incl
sub
mov
std
mov
lds
in
add
sub
dec
stos
mov
cs
bound
push
test
xor
scas
add
dec
xor
sti
xchg
inc
mov
xchg
sub
inc
jmp
cs
cmpsb
pop
arpl
jp
sub
inc
fwait
push
inc
pushf
lods
xor
jmp
loop
js
test
inc
cwtl
cs
adc
stos
ljmp
or
cmc
push
adcb
pop
push
pop
pop
mov
xlat
jp
pop
into
cmp
pop
push
pop
mov
xor
push
fbld
dec
into
dec
mov
pop
mov
dec
inc
insl
adc
lods
icebp
mov
cltd
add
add
mov
hlt
sub
fdivrp
test
add
or
push
pop
mov
cwtl
xor
movsb
push
aas
pusha
andb
into
and
inc
in
and
cld
subb
hlt
push
inc
adc
add
lret
or
adc
push
add
cmp
and
fiadds
jns
mov
or
add
movups
nop
aas
xor
inc
ljmp
cld
dec
sahf
call
push
add
mov
loopne
pop
sbb
push
sbb
and
dec
push
stc
insl
sbb
mov
int3
int
fdivs
push
add
ficoml
decl
mov
sub
fs
popa
mov
rolb
out
mov
pop
add
lods
popa
inc
add
call
jecxz
decl
jg
jl
xchg
mov
adc
sub
push
test
outsl
sub
pusha
adc
sbb
lds
loopne
inc
or
das
js
dec
lock
stos
ljmp
das
test
pop
mov
ja
repz
rcl
jp
je
dec
pop
jbe
js
xchg
outsb
or
sub
sbb
xchg
dec
xchg
decl
push
mov
push
mov
inc
inc
pop
xchg
je
pushf
adc
xchg
mov
dec
ds
sub
sbb
subb
xor
enter
cmpl
fildl
incl
lret
jae
sub
or
sub
pop
mov
mov
xchg
enter
das
mov
push
xor
idivl
ret
lock
pusha
mov
adc
pop
mov
xor
cwtl
mov
sbb
inc
pop
push
ljmp
nop
jo
rcrb
cs
jp
das
jp
fdivp
stos
and
stc
add
loop
xchg
jae
enter
sbb
insl
fcmovnbe
in
sbb
push
add
jo
sbbb
lods
xchg
lahf
jp
outsl
shlb
pop
imul
mov
adc
sbb
lods
jmp
in
cmpl
mov
inc
sub
fnsave
push
mov
jg
les
lcall
lock
mov
push
mov
dec
scas
outsl
clc
mov
push
inc
testb
jne
mov
mov
insb
sbbb
and
cwtl
dec
leave
push
outsl
and
ljmp
es
or
loopne
adc
cmc
inc
xchg
sbb
fwait
outsb
nop
hlt
xchg
loop
mov
icebp
inc
mov
pop
js
cmpsb
loope
bound
cmpsl
fimull
stc
fcomip
mov
sbb
cld
jl
and
stos
fs
nop
pop
xchg
rol
call
pop
xchg
lock
js
mov
shl
outsl
push
cmc
in
hlt
xchg
mov
inc
lret
xor
cmp
inc
xor
rolb
lcall
add
andl
mov
sbb
mov
dec
mov
push
sahf
and
mov
add
cs
pushf
fidivrl
hlt
out
and
imul
pop
xchg
xchg
xchg
les
gs
cltd
dec
sti
pop
push
lods
fbld
iret
ss
mov
sbb
daa
sbb
cli
and
aam
inc
xchg
cld
pop
cmp
cmp
fs
fildl
pop
adc
pusha
mov
and
int3
sub
xchg
or
dec
loop
or
lock
jg
mov
pushf
mov
push
xchg
pop
jno
mov
jmp
repnz
nop
pop
loopne
out
sbb
fsubl
sbb
fildl
push
cmc
or
xor
jmp
shlb
sub
fcompl
das
xor
ret
std
mov
xchg
das
lods
pop
test
push
push
mov
scas
jnp
xorb
mov
adc
sbb
mov
sub
frstor
adc
xlat
pusha
mov
push
out
push
jbe
push
imul
add
xchg
dec
test
or
push
push
add
xor
cmp
push
add
push
xor
mov
mov
out
pushf
mov
pop
pusha
cmc
sub
adc
mov
sub
mov
or
je
nop
jne
iret
rclb
insb
sub
inc
cmp
nop
lcall
adc
mov
cmpsb
sub
iret
fistl
lock
scas
sbb
ret
cs
jb
inc
xchg
jnp
mov
jb
push
rorl
cwtl
cld
xchg
push
enterw
je
lods
sub
notb
add
or
and
insb
call
pmulhw
push
fucomi
lahf
jg
xor
xor
add
aad
pop
es
add
pop
outsb
xchg
mov
repnz
pusha
push
mov
add
pushf
das
sbb
or
inc
push
lock
call
mov
pop
mov
daa
push
cmpsl
or
sbb
data16
shlb
aaa
sbb
jbe
mov
mov
sbb
mov
shll
fdivs
pop
jmp
pop
push
repnz
dec
jle
mov
jmp
push
stos
mov
inc
pushf
iret
add
dec
sbb
and
fwait
push
pop
outsl
popf
dec
ffree
push
fldenv
jae
xchg
pusha
and
sub
insb
push
cs
shll
lock
daa
repnz
adc
lea
dec
dec
ljmp
sub
movsl
insb
mov
adc
lds
push
xchg
sbbb
lods
jl
xchg
test
dec
fbld
jle
in
mov
mov
ret
decb
into
dec
imul
cs
and
jne
cmpb
icebp
clc
dec
pop
subl
adc
ret
or
inc
sub
push
outsb
mov
push
cli
es
test
push
cmp
inc
sbb
nop
add
lahf
adc
mov
jb
fcoml
jle
dec
cmp
push
test
jecxz
jecxz
cmpsl
sub
dec
inc
rcrl
ret
lods
and
mov
popl
dec
xchg
mov
ja
loop
lret
ljmp
push
add
jmp
dec
inc
loop
push
ljmp
mov
xlat
repnz
dec
aam
xchg
ds
ss
dec
aam
imul
adc
mov
or
popl
dec
outsb
mov
mov
fsubrs
rcll
mov
inc
test
inc
in
add
pop
sub
in
cltd
fimuls
pop
add
fsubs
cli
dec
fnstsw
xchg
xor
insl
mov
or
addb
and
out
push
cmp
and
fmul
ret
jmp
add
inc
out
jp
mov
pop
dec
cmp
add
xchg
out
icebp
xchg
clc
mov
sbb
adc
mov
add
sub
cwtl
fs
and
jmp
dec
add
adc
movsl
sbb
pusha
pop
and
push
xchg
rorb
pusha
push
mov
sub
fisubl
xor
lea
pop
hlt
xchg
or
jmp
std
mov
shrb
sti
es
xchg
sbb
mov
mov
movsb
shrl
jge
pop
hlt
out
mov
aas
lock
push
pop
js
xor
inc
jnp
fisttpl
lock
add
dec
outsb
adc
xchg
loopne
xor
xchg
inc
jge
fldt
adc
inc
cmp
mov
data16
lcall
cmp
cmp
mov
dec
adc
jb
mov
ret
clc
ds
mov
and
xor
loop
dec
ja
push
je
adc
shll
xchg
loop
je
les
ss
mov
or
xchg
mov
shrb
shll
xor
add
adc
mov
jle
lock
pop
ss
dec
xchg
sahf
fidivrs
and
mov
xor
sbb
fs
clc
outsl
inc
cld
jg
xor
fldcw
call
sub
or
push
mov
loope
mov
mov
out
jne
lods
shrb
xor
mov
pop
ljmp
addl
outsl
loopne
jle
jl
cltd
mov
push
pop
pop
push
mov
out
fstps
lock
loope
jb
daa
cmpsb
cli
xor
or
cmp
mov
fmuls
xchg
jnp
mov
lock
out
stc
leave
mov
lea
push
or
sar
incl
int
xlat
dec
mov
loopne
xor
fldl
shl
adc
mov
addps
lds
mov
jg
lcall
sub
jle
aas
cmc
cli
push
cmpl
cmp
mov
cmp
hlt
icebp
inc
and
add
fwait
rclb
jmp
and
push
mov
mov
jl
in
stc
movb
out
xchg
and
ss
pop
and
mov
inc
cmp
incb
and
cmpsl
repnz
jle
add
jo
mov
mulb
es
out
sbb
andb
dec
fidivrs
mov
push
icebp
add
cmp
dec
bound
push
lods
test
xor
xchg
inc
push
nop
fisubrl
lcall
mov
xchg
addr16
andl
enter
clc
mov
or
mov
aaa
sbb
fisubrs
clc
adc
push
xchg
rclb
in
mov
or
pop
js
fnstsw
push
lret
fidivrs
sub
sbb
das
dec
clc
ds
fdiv
add
or
mov
cli
pop
xchg
xchg
ficoms
inc
mov
mov
xor
data16
icebp
scas
scas
insb
aam
and
xor
out
pop
fimull
movb
loop
or
push
dec
insb
sub
int3
iret
xchg
repz
mov
jne
push
lock
jo
in
cmp
loop
mov
add
or
imul
fxch
cmp
mov
add
and
cmp
jecxz
decl
jne
push
dec
jb
sub
ja
xor
mov
insl
movsb
je
iret
incl
dec
loop
in
jns
fmull
sbb
cmp
jns
sti
mov
inc
ret
aam
subb
push
inc
inc
int
push
ljmp
xor
jge
inc
pop
cmp
adc
inc
mov
inc
call
xchg
repnz
pop
mov
push
loopne
enter
data16
add
sahf
out
fsub
mov
lret
mov
push
ret
into
cli
adc
dec
xchg
hlt
mov
test
add
rcrb
push
insb
stc
and
and
and
bound
sub
cmpsl
push
adc
test
sub
retw
mov
mov
mov
imul
mov
and
inc
int
mov
pop
cmp
rcll
dec
aas
dec
int3
push
jp
je
sub
adc
addl
add
inc
pop
popa
fs
fwait
or
aaa
data16
cmp
sub
stc
outsl
sbb
jg
push
fstl
push
pop
xor
mov
add
out
cmp
fsubs
dec
jp
or
sub
adc
jbe
push
ja
and
scas
leave
mov
js
xorl
or
outsl
mov
js
and
mov
push
push
jb
push
xchg
and
sahf
stc
mov
and
mov
pop
pushf
pop
jl
mov
clc
sbb
cmp
dec
movsb
mov
sbb
mov
mov
inc
js
movsl
repz
lret
push
mov
mov
cmc
scas
add
test
lahf
mov
sub
mov
in
xorb
sub
cmp
pop
jmp
jnp
sbb
into
push
jecxz
addb
push
daa
call
add
sub
cmpsb
aam
push
push
pop
xor
mov
mov
test
mulb
add
sbb
sub
aaa
nop
dec
icebp
lds
mov
push
imul
mov
pop
int3
mov
and
fnsave
mov
adc
push
mov
and
sbb
sub
xchg
lar
dec
adc
movsl
cmpsb
mov
out
or
enter
mov
hlt
fdivrl
nop
dec
pushf
add
aaa
push
add
adc
push
xchg
mov
fs
and
ret
notb
les
mov
mov
push
dec
jle
jl
inc
dec
enter
lds
sbb
sar
imul
add
cs
faddp
dec
shlb
in
mov
aam
test
adc
hlt
xchg
mov
aas
sbb
lods
mov
js
add
mov
xor
sbb
enter
pop
mov
fadd
dec
mov
mov
sub
int3
jl
ret
mov
dec
cld
insl
insl
pop
out
in
mov
lcall
nop
test
sub
ljmp
sbb
js
lcall
jp
cmovne
and
dec
add
adc
xchg
cmp
sbb
adc
dec
mov
sub
orb
jns
movsl
add
jl
pusha
push
adc
mov
sarl
adc
das
test
in
mov
push
scas
movsl
hlt
inc
dec
adc
fidivrl
adc
ret
jo
sub
xchg
outsb
ljmp
pop
dec
xor
sbb
sbb
mov
js
aaa
lcall
jno
loopne
ret
aaa
adc
fsubs
xor
jg
loopne
mov
jg
jo
and
lret
aad
push
test
sub
xchg
out
add
add
out
sarl
inc
enter
adc
lods
pusha
js
jecxz
icebp
adc
lcall
mov
mov
pop
add
shll
inc
insb
decl
inc
inc
fadd
loop
dec
cmp
pushf
js
jecxz
push
scas
lock
sahf
pop
mov
mov
fs
pop
xor
clc
int
inc
jp
mov
sbb
adc
inc
mov
iret
inc
add
dec
adc
stos
es
out
push
cltd
add
inc
pop
icebp
nop
loop
stos
sub
mov
mov
loop
cmc
and
adc
xor
std
pushf
clc
in
jg
les
push
jle
jmp
rclb
scas
mov
cld
decl
mov
xor
cmpb
mov
push
sub
aam
out
mov
and
clc
mov
aam
pop
dec
xchg
pushf
jb
pop
fsubrp
push
outsb
out
lock
xchg
loopne
mov
test
pushf
pop
jge
ret
lods
stos
stos
inc
fsubl
pop
lods
stos
and
cmp
insl
dec
stos
ljmp
addr16
adc
fisttps
and
mov
fstpl
adc
pop
sbb
mov
fildll
and
stc
push
add
daa
push
cmp
lcall
shlb
or
adc
xorb
xchg
in
movsb
xchg
push
sbb
sbb
sub
sti
pop
pop
cmp
stos
pusha
loope
daa
lods
adc
or
cmp
test
mov
clc
out
mov
test
jp
lcall
xlat
inc
addr16
lds
mov
icebp
mov
aaa
add
sarb
mov
loopne
inc
rorb
add
clc
insl
dec
loope
call
test
adc
mov
xchg
lock
inc
pop
adc
ret
les
das
cwtl
cmc
ljmp
push
shlb
mov
pop
sub
in
xor
mov
fistpll
fwait
xor
cmp
das
xchg
xchg
xchg
fucomp
mov
push
and
test
fs
ljmp
insb
repz
cmp
lods
stos
mov
insb
jae
negl
cmpsl
test
or
jl
lret
adc
aas
mov
push
addb
adc
movsl
dec
sub
inc
sub
insl
push
outsl
iret
mov
lcall
xor
push
adc
inc
add
mov
test
inc
xchg
jg
aas
mov
jnp
pop
into
nop
mov
aaa
push
sbb
mov
popa
sbb
js
cmp
ja
test
cmp
push
jmp
inc
mov
outsb
push
cmp
iret
mov
sbb
int
addl
mov
leave
push
sbb
push
push
jge
pop
addr16
adc
add
xor
sbb
punpckldq
addb
ljmp
cmp
and
movsl
push
cli
pop
inc
sbb
stc
cwtl
roll
mov
cwtl
fs
fisttps
xchg
pop
adc
insb
sbb
and
ss
ss
xchg
jp
sub
sub
insl
and
inc
pop
fdivr
ja
jmp
loop
loope
cmp
add
dec
adcl
adc
movsb
scas
push
loope
fisubrl
pop
jb
sub
inc
xchg
add
test
pop
pop
mov
cmpsl
rcrb
insl
out
dec
insl
mov
roll
dec
jmp
ljmp
xchg
test
jp
xchg
pop
ret
xchg
fistps
cmpsb
and
cwtl
pop
popf
jmp
sbb
sbb
mov
mov
and
push
add
lock
or
sbb
faddl
jmp
push
stos
test
movsl
pop
test
pop
add
dec
inc
out
js
xchg
dec
jns
sbb
mov
add
xor
or
mov
cmp
jo
cltd
and
mov
cld
adc
jbe
pusha
sbb
or
nop
jo
or
xchg
sub
lret
xchg
movsl
mov
sbb
dec
insl
sarb
or
dec
xor
repnz
xchg
push
dec
cwtl
aad
data16
fistpl
dec
mov
fbstp
mov
loopne
lods
and
xor
push
dec
gs
and
adc
clc
cmp
add
xorb
sbb
mov
mov
xor
sbb
add
sub
mov
fsubl
inc
sarb
test
shrb
pop
xchg
mov
rcr
pop
notb
lcall
fadds
and
fsubr
sub
add
jae
push
les
mov
xlat
test
xchg
pop
jo
je
and
push
ret
push
call
push
xchg
jmp
sti
shrl
mov
sub
mov
out
outsb
sbb
stc
sub
mov
mov
and
ret
mov
imul
aas
btc
mov
pop
or
enter
add
dec
jo
ret
sub
insb
pop
pop
xor
sub
test
xorb
push
in
jno
adc
inc
cwtl
push
push
push
clc
sbb
outsl
andl
lods
in
orb
xchg
out
adc
mov
js
push
mul
mov
and
xchg
cs
jo
fadds
mov
mov
push
add
test
cmp
rcl
sub
movsl
push
movsb
fistpll
add
sub
popa
mov
push
out
sub
jl,pn
addr16
lcall
cwtl
push
das
push
push
xchg
outsb
data16
inc
shll
into
fxch
xchg
pusha
ja
adc
nop
pop
cmpsb
adc
or
jne
jle
mov
ret
daa
mov
repz
cmpsb
push
pop
dec
adc
ss
imul
scas
xchg
mov
add
sbb
jnp
mov
xchg
je
sub
inc
mov
xchg
pop
jecxz
mov
adc
shrb
shlb
cmc
and
dec
stos
pop
jo
cmp
fwait
aam
cmpsb
pop
xchg
sbb
add
les
and
inc
fstpl
sbb
sub
sub
rcrl
fists
push
lods
popl
adc
dec
lock
cmp
jb
pop
mov
popa
imull
cmp
xor
pop
cmpsb
sahf
push
dec
repz
mov
push
hlt
andl
inc
scas
je
cmp
push
fbld
and
shlb
xchg
cwtl
mov
pop
ljmp
sbb
mov
pushl
call
icebp
int3
test
gs
push
outsb
inc
sbb
sbb
fwait
in
cmp
fucomi
mov
push
iret
std
test
mov
xchg
mov
clc
and
fcomip
jmp
lea
rol
cmpsb
jle
sbb
dec
daa
aad
add
mov
incl
fildl
pop
stos
cmp
pop
mov
aam
sbb
pop
inc
in
lcall
bound
mov
xchg
mov
scas
jb
jge
jne
jns
incl
nop
loopne
or
fcmovbe
lea
mov
hlt
repz
dec
dec
lods
das
dec
dec
dec
ret
ljmp
nopl
fcmovnbe
adc
das
mov
stc
mov
rcll
add
test
ljmp
inc
mov
popf
xchg
push
clc
lcall
in
rcrb
pop
xor
mov
and
or
sbb
pop
pop
pop
push
xor
xchg
cmp
push
or
loop
dec
xchg
jge
pushl
pop
push
nop
mov
stos
arpl
mov
dec
jne
xchg
push
jae
js
adc
lods
lock
je
sbb
add
add
lret
cmp
call
call
movl
dec
clc
or
bound
lock
xchg
adc
dec
jmp
adc
cmp
sub
cmpb
pop
outsb
stc
shll
outsl
ljmp
pop
addb
ror
call
sub
xor
jp
outsl
stos
outsl
dec
popf
mov
movsb
dec
mov
call
add
xor
push
xchg
and
arpl
inc
dec
sahf
clc
jns
or
mov
sub
pushl
lods
mov
pusha
fwait
adc
in
jmp
insl
popf
sub
filds
mov
mov
dec
sub
shlb
sub
xchg
ficompl
push
cs
ljmp
sbb
mov
stos
lea
mov
gs
pop
sub
cld
fcomps
js
inc
lret
cli
cmp
test
jne
pop
push
pusha
dec
xchg
cmc
insl
loope
call
dec
inc
ljmp
pop
pop
adc
and
incl
sub
adc
mov
int3
dec
pop
cmc
adc
inc
push
mov
xchg
call
push
insl
ds
sarl
mov
imul
fcompl
scas
push
adc
ljmp
outsb
jl
hlt
jns
mov
repnz
ja
ljmp
jbe
les
fsubrl
pushl
jb
xchg
jb
cmc
ret
sbb
xor
xchg
xor
in
lea
cmpl
lcall
mov
add
inc
cld
sbb
mov
dec
out
testl
mov
cld
incl
incb
sarb
movsb
adc
add
pop
inc
add
jb
lret
mov
pushl
fsubrs
add
test
jp
sahf
push
jg
and
lahf
adc
xor
cltd
jl
fbld
loope
sub
add
xor
push
sti
and
rclb
out
xchg
and
push
stos
inc
xor
or
lahf
ds
enter
push
mov
ljmp
insl
aad
insl
xor
std
decl
int
pop
push
int3
push
pop
insl
fisttps
jbe
xchg
push
pushl
cld
jg
js
outsb
pop
xor
jl
sbb
xchg
incl
pop
insb
hlt
pusha
fsubrl
clc
lods
je
notl
jge
imul
in
fdivrl
jmp
inc
sub
mov
out
mov
dec
push
test
adc
decl
jmp
lret
mov
cmc
and
ss
xchg
lea
idiv
jl
mov
mov
pusha
adc
or
ret
push
inc
cmpsl
pop
movsb
ret
push
and
jns
dec
mov
inc
insl
pushl
sbb
push
outsb
sub
iret
addl
fwait
mov
cld
call
and
mov
mov
adc
jb
xor
call
inc
sub
mov
fdivrl
and
ljmp
jecxz
mov
out
movsl
xchg
movsl
cmp
mov
and
dec
and
fs
cmpsl
out
pop
lcall
das
xor
in
xlat
pop
inc
sti
add
movsl
bound
and
sub
mov
cmc
dec
lods
orb
mov
stos
nop
inc
jo
enterw
mov
lahf
sub
jb
mov
andl
pushw
je
or
pushl
nop
push
adc
push
mov
hlt
push
jle
add
mov
mov
out
dec
ret
sub
add
call
cld
add
stos
cmp
into
decb
lcall
jl
imul
add
ljmp
jmp
add
sub
push
rcl
movsl
inc
jmp
mov
decl
das
xchg
xchg
and
sbb
call
pusha
and
imul
pushl
or
in
out
pop
ds
insb
jg
mov
adc
mov
inc
shlb
loope
lcall
mov
subl
sub
cmp
sbb
cmp
frstor
aad
insb
lcall
js
iret
nop
dec
loopne
popf
pop
js
loope
in
and
mov
jg
out
fwait
rcrb
rcr
or
aad
pop
filds
xor
push
and
cli
incl
ficoml
insb
call
rcrb
jle
in
xor
out
sub
jb
and
push
xchg
out
and
adc
out
out
adc
scas
mov
cmp
imul
arpl
repz
fists
fxch
dec
adc
sub
out
dec
test
call
je
imul
sub
inc
out
add
stos
cmc
jns
dec
movb
cld
cmpsl
out
pop
cmp
dec
and
sub
push
mov
and
sub
cmp
sahf
mov
xor
inc
cmp
jmp
xor
xlat
mov
cmpsl
push
adc
jl
mov
sub
je
mov
scas
pop
inc
pop
lea
ret
xchg
test
inc
sarl
pop
decl
sub
iret
adc
enter
lcall
and
sub
pop
aaa
gs
ljmp
loopne
lds
add
cmp
adc
dec
ds
add
call
shll
scas
fisubl
cmpsl
out
jns
les
aas
xor
ja
fxch
lcall
mov
xor
adc
xchg
xor
ljmp
cmp
push
inc
hlt
jo
cld
adc
xchg
cmpl
scas
pop
push
pop
daa
adc
cmp
jg
call
or
lcall
xor
push
test
aas
jo
sub
jmp
shr
call
faddl
stc
aaa
xchg
sarl
std
fildll
cmp
inc
and
sub
jno
das
pop
push
push
pop
xor
lcall
clc
and
pop
xchg
jg
lret
jns
flds
add
add
dec
jae
lcall
nop
addb
das
jnp
lods
pop
pop
adc
out
push
push
popf
ljmp
push
ss
xchg
shrb
jae
push
popa
fnstenv
mov
dec
add
sub
add
or
xor
and
add
popa
ret
js
js
mov
add
jae
mov
loopne
push
adc
ds
notb
inc
xchg
jnp
xchg
jno
into
dec
test
insb
incl
dec
add
sti
cltd
je
inc
lea
ja
mov
mov
out
cli
jnp
sbb
xchg
inc
dec
mov
push
cmpsl
cmpsl
or
add
mov
test
adc
out
fnstcw
js
push
insl
test
jne
test
pop
insl
sub
jg
icebp
cmp
rcll
xchg
pop
in
addl
mov
js
insl
cmp
xchg
dec
jmp
push
or
pop
adc
sub
push
and
add
fsts
and
mov
xchg
mov
jb,pn
push
inc
mov
stc
addr16
lcall
add
aad
mov
ljmp
jg
stos
pushf
xchg
stos
inc
xchg
mov
pushl
pusha
xchg
cmpsb
aam
or
cmpsb
or
sbbb
pop
push
sbb
mov
imul
jmp
pop
xor
inc
pop
cmp
cmp
jmp
je
es
aad
ljmp
aad
bound
mov
adc
and
out
push
fwait
lcall
scas
mov
inc
lds
stc
les
sahf
ret
jle
push
aas
push
jl
jecxz
pushl
insb
jp
outsb
push
mov
mov
in
loopne
pop
add
je
daa
and
ljmp
mov
cmc
cmp
push
lahf
hlt
js
pop
mov
mov
leave
xchg
xchg
lret
and
push
pop
jg
fdivs
sub
sbb
repz
es
adc
adc
xchg
xor
xchg
scas
pushl
call
aad
rclb
in
out
dec
sbb
jmp
xlat
xchg
fs
mov
dec
shrl
pop
out
jecxz
pop
xchg
loopne
push
in
pop
pop
jno
push
jnp
hlt
inc
mov
stc
sub
cmc
cmc
mov
inc
addl
adc
mov
cwtl
loopne,pn
leave
adc
mov
outsb
or
mov
fstl
mov
cmp
xor
or
fsubrl
mov
mov
cmp
and
add
pop
icebp
sbb
xchg
mov
xor
mov
testl
testb
mov
and
push
out
mull
pushl
jg
int
cmp
adc
outsl
mov
out
fdivs
fistpl
pop
adc
incl
hlt
xchg
cmp
test
push
test
mov
mov
xchg
daa
jl
popa
inc
das
add
lcall
mov
js
dec
xchg
jne
push
mov
push
and
add
or
mov
lahf
andl
mov
jmp
sbb
pop
mov
dec
xchg
jmp
inc
dec
decl
cmpsb
aas
and
mov
jle
add
fcoms
mov
sbb
scas
ljmp
leave
clc
lret
iret
xchg
lret
push
mov
mov
lods
pop
int3
rcl
dec
jle
aad
lahf
jbe
outsb
movsl
and
add
mov
add
decl
call
hlt
mov
mov
test
jg
call
clc
push
cltd
mov
hlt
push
test
out
loop
jbe
jae
jle
mov
pop
test
stos
faddl
js
mov
out
clc
xor
and
push
sbb
lret
mov
lret
fldl
and
jg
mov
rorl
cmp
data16
mov
scas
mov
fcmovnbe
ret
fisubrs
shl
mov
call
loopne
je
cmpl
cmpsl
sahf
mov
lret
or
scas
lea
mov
call
adcl
sahf
pop
cmp
or
pushf
and
ja
movsl
imull
push
xchg
popl
les
lcall
or
sub
xor
jns
int3
inc
push
add
call
ss
outsl
int
sub
xchg
push
or
popf
dec
jns
add
popf
sub
mov
lcall
jmp
enter
jecxz
adc
or
jg
lods
push
arpl
jg
ja
add
push
fyl2x
in
pushl
aad
adc
vpminub
fstpl
into
ljmp
mov
call
lcall
xchg
test
or
jns
rcll
jno
psubsb
inc
imul
int3
pop
pop
inc
xor
fidivrl
into
and
push
mov
jnp
sti
lods
icebp
inc
sub
adc
imul
fcomps
leave
push
popf
and
inc
gs
stc
sbbl
outsl
mov
les
sub
iret
pop
xor
cmp
js
xchg
sbb
fnstcw
ds
stos
push
lock
cmp
rol
mov
jno
jne
call
incb
jb
arpl
add
or
xor
in
push
fisttps
incl
xchg
ds
loopne
xor
mov
pop
cli
test
imul
aas
test
fistpll
out
stc
stos
icebp
mov
hlt
mov
sahf
sub
lret
push
test
arpl
decl
dec
mov
inc
push
shrb
jecxz
sbbb
ret
lret
pop
hlt
call
movsb
push
mov
dec
int3
pop
jbe
jle
pop
and
push
cmpsb
testb
pushf
pop
jg
dec
and
in
fiadds
es
inc
mov
call
dec
pushf
mov
dec
or
data16
js
mov
pushw
and
push
jno
push
into
xchg
out
cli
ljmp
jecxz
fists
lcall
or
mov
jmp
mov
sbb
jns
adc
or
xor
mov
out
and
cmp
jo
ficompl
incl
add
stos
jns
jne
inc
into
js
cmp
xor
js
dec
or
sbb
mov
mov
xor
popa
imulb
call
lahf
xchg
ljmp
and
add
cmp
mov
push
cmp
ljmp
cltd
and
sbb
push
bound
jge
movsl
jb
push
inc
dec
addr16
pop
std
decl
mov
pop
repnz
and
mov
stos
cs
loopne
jp
jbe
xor
loope
addb
cmpsl
sbb
inc
and
cli
loopne
cmp
push
jno
shrb
adc
stc
fwait
test
fnsave
adc
push
xlat
pushl
sbb
test
or
cwtl
fldenv
jl
push
cmpsb
jmp
xor
insb
scas
clc
mov
mov
repz
dec
jbe
xor
adc
pushl
xchg
jecxz
gs
inc
push
rcll
sub
xchg
sub
xchg
mov
push
mov
jp
pop
movb
jno
jo
cmp
lcall
adc
insl
mov
push
inc
cli
and
cld
callw
add
xor
dec
in
jecxz
ud0
decl
cli
adc
ret
int3
sub
aad
adc
clc
enter
divl
or
mov
inc
lea
scas
test
adc
or
outsb
push
cmp
sar
lahf
sbb
xorl
lcall
pop
cmp
pop
cld
jno
shlb
fists
rcrl
mov
rcrl
inc
adc
je
call
adc
aam
mov
mov
ljmp
iret
and
push
insl
adc
jmp
gs
mov
lods
push
data16
call
xchg
mov
out
mov
ljmp
mov
insl
movl
push
lock
ljmp
in
mov
sub
mov
jnp
test
push
test
cltd
push
sub
sbb
push
jp
fisttpl
dec
popf
pop
popa
mov
ds
scas
nop
xor
popa
mov
aam
jg
popf
fisubrs
dec
xchg
sub
jge
das
in
jbe
jecxz
jecxz
scas
inc
mov
pop
fucomi
fsub
push
std
lcall
pusha
xchg
out
xchg
int
stos
arpl
jno
out
pcmpeqd
out
sbb
in
lcall
aad
leave
cmp
stc
in
adc
sbb
mov
fildl
pushf
push
lea
jae
sub
add
xor
mov
and
test
imul
adc
scas
in
std
jb
leave
fidivrl
lahf
fiaddl
or
cmp
jecxz
dec
add
pushf
loopne
fcmovnu
xor
xlat
pop
mov
aad
shl
mov
aad
mov
sub
and
xor
push
out
shlb
ljmp
call
les
stos
pop
add
cmp
pop
stc
push
ficompl
push
call
decl
lahf
cmc
pop
xor
aam
and
pop
cmp
inc
push
std
sub
push
xchg
mov
aad
and
inc
popa
lds
test
jmp
js
repnz
idivb
jmp
jl
inc
testl
xchg
pop
clc
dec
lds
jl
push
paddq
pop
pop
mov
push
out
xchg
call
xor
adc
lcall
cmp
mov
xlat
in
sbb
stc
clc
loop
enter
daa
outsb
cmp
jo
aaa
std
push
dec
lret
mov
mov
scas
mov
insb
mov
dec
push
push
cli
pop
arpl
aas
roll
jle
mov
inc
aam
lret
push
stos
mov
movsb
mov
pusha
push
dec
cmp
mov
jbe
mov
ret
or
add
scas
push
ljmp
fimuls
movl
repnz
call
movups
daa
cmp
aad
sub
xor
ja
cli
jmp
popa
leave
pop
fnstcw
push
dec
lea
add
cmp
and
inc
pop
sahf
int3
adc
out
inc
xchg
cmp
pushl
fbld
xor
fstp
pop
loopne
into
inc
mov
xor
test
cld
je
ja
loopne
incl
addr16
xchg
pop
inc
pop
rcll
mov
xchg
dec
pop
adc
mov
repnz
enter
inc
dec
and
adc
aam
xor
test
punpcklbw
rcrl
push
xchg
jo
xchg
movsl
icebp
mov
xchg
mov
lcall
adc
cmp
insb
imul
mov
outsb
enter
mov
mov
in
std
pushf
int3
pop
pause
push
cmp
dec
mov
into
stos
icebp
ret
insl
pusha
movsl
xchg
jmp
mov
pop
insl
mov
or
decl
push
sub
out
lahf
xor
aaa
data16
sub
push
mov
hlt
out
ss
mov
pop
dec
leave
inc
xor
jg
push
push
mov
mov
jae
dec
pop
jg
movl
jnp
fiaddl
imul
out
and
and
and
scas
dec
lret
mov
pop
jae
jno
mov
mov
or
ficoms
addb
test
pop
iret
xchg
in
call
dec
sbb
xor
into
xchg
call
jle
sbb
dec
xchg
fnstcw
in
popf
test
push
je
loop
fdivrl
mov
ljmp
imul
fsubr
bound
mov
pop
sbb
repnz
out
fwait
pop
pusha
and
cli
push
out
jmp
adc
cwtl
xor
jecxz
jp
jbe
jnp
push
lea
mov
sbb
xor
jmp
lock
pop
mov
jnp
inc
in
lock
sub
push
inc
or
jb
xchg
ret
add
filds
clc
cli
lcall
jle
jg
lea
mov
mov
sbb
ljmp
push
clc
cwtl
je
aaa
es
in
ja
lock
cmp
mov
jmp
jl
out
lods
push
xor
rclb
fcmovne
xorb
int3
pushf
lcall
and
mov
mov
fbld
stos
leave
mov
out
jbe
mov
fwait
sar
mov
rcrb
sub
out
and
cltd
call
sti
xchg
xor
mov
dec
cmp
xlat
mov
adc
out
call
push
add
ljmp
sahf
push
inc
dec
pop
iret
ret
inc
xchg
in
jno
dec
icebp
mov
sbb
fcomip
cmp
fidivrl
std
jbe
repz
fnsave
bound
mov
nop
repnz
fwait
inc
lret
and
and
das
add
mov
xor
or
or
sbbl
push
mov
pop
xor
rcrl
inc
cs
bound
jne
lods
insb
add
aam
dec
leave
add
pop
pop
ret
lock
jg
aaa
subb
pop
ret
sahf
inc
sbb
dec
fldz
and
pop
mov
aas
mov
ja
jmp
or
test
xchg
sti
mov
push
popa
lcall
xchg
popf
mov
call
pushl
cmpsl
pop
test
or
lods
cmpsb
mov
enter
and
lcall
cmp
cli
insl
dec
inc
or
data16
into
push
cmpsb
out
hlt
add
xchg
inc
xor
pop
loopne
hlt
ja
xchg
or
ljmp
popf
sbb
repz
popa
lret
jg
ljmp
jg
add
mov
int3
cmp
sbb
mov
inc
xor
lret
or
cmpb
fwait
pop
jnp
add
mov
xchg
xchg
nop
xor
xchg
cld
out
cmpsb
cld
mov
lock
lcall
jmp
xchg
pop
out
sbb
adc
rcll
push
aam
pushl
sub
lods
mov
push
daa
fbstp
cli
imul
ja
ljmp
call
or
xchg
bound
pop
mov
jb
push
cmp
daa
jmp
mov
testb
pop
cmp
out
lea
pop
add
mov
in
inc
adc
mov
cmp
pop
push
fmull
in
pop
inc
jmp
push
xchg
roll
lret
pusha
or
cwtl
clc
popa
rcrl
push
out
cmp
outsl
scas
insb
adc
lcall
dec
mov
aas
scas
xchg
cmp
mov
xor
mov
pop
dec
and
sbb
pop
out
add
in
je
fidivrl
jge
jmp
mov
popf
push
xlat
adc
jecxz
jo
add
mov
fs
lcall
fstpl
cs
mov
fiaddl
add
nop
ficompl
in
adc
jg
out
loope
cmc
jmp
inc
fstps
mov
call
cltd
sbb
and
inc
ret
cltd
fcmovbe
xlat
dec
movsb
into
dec
xchg
pop
sub
jno
dec
sahf
stos
push
mov
jmp
lock
sbb
or
mov
mov
sbb
lods
lcall
insl
stos
loope
jnp
xor
mov
insl
mov
cmp
inc
sub
out
ljmp
mov
cmp
or
jp
shll
mov
cmpsl
mov
in
dec
jp
fbld
loope
je
shrl
in
xchg
jns
imul
pop
fwait
sbb
push
cmpsl
popf
sahf
xlat
cld
sbb
bound
push
ljmp
pop
ficompl
int3
inc
inc
cmp
enter
jno
outsl
sbbl
inc
add
call
push
lcall
out
ds
push
adc
xchg
iret
mov
dec
dec
mov
ret
xor
cltd
nop
jmp
pop
cmp
mov
jg
or
cmpsl
xchg
dec
hlt
lea
aaa
cld
call
ficoml
cmp
mov
fisttpll
fidivs
decl
mov
stos
and
sub
stos
test
outsl
mov
xor
jmp
fisubrl
xor
push
sub
in
push
cmp
jecxz
xchg
lods
push
cs
xor
outsb
shr
ljmp
cmove
inc
call
dec
pushf
dec
loop
mov
jno
pop
arpl
xchg
movsb
out
xlat
pop
mov
cmpsb
cmc
cmpsl
mov
sub
dec
sub
out
adc
mov
jae
je
lcall
mov
jp
xor
mov
add
in
xchg
jge
lcall
push
std
pop
lahf
cltd
cmpsb
jge
jne
movsl
jp
xorl
push
fisubrs
jmp
xor
std
test
and
pop
mov
pop
shrl
or
icebp
shlb
test
outsl
clc
incl
ss
adc
xchg
xor
add
out
mov
dec
push
les
incl
mov
push
gs
push
xor
lds
addr16
mov
push
pop
xlat
aaa
push
xchg
mov
mov
xchg
sub
pop
stc
test
xchg
push
lods
cltd
test
push
add
int3
dec
popf
pop
nop
es
sub
mov
jo
imul
icebp
bound
lcall
sub
pusha
sub
jnp
enterw
decl
popa
incb
decl
rolb
mov
mull
mov
add
mov
mov
ljmp
sbb
adc
orl
sub
sub
cmp
jno
cmp
jmp
and
rolb
dec
inc
and
test
aaa
mov
roll
jae
or
in
call
jl
pusha
mov
cmpl
jmp
dec
push
dec
adc
incl
and
jg
fcoml
fwait
clc
shrb
xor
filds
push
sbb
aas
mov
inc
incl
mov
negl
lods
mov
imul
decl
stos
adc
ret
outsl
out
fldl
aaa
push
jne
sbb
ds
out
cmp
jmp
mov
aad
aas
rcll
mov
mov
shl
dec
into
orb
lock
sbb
ss
std
cmp
pop
lahf
out
stos
xchg
push
lods
into
mov
stos
pushf
add
mov
sahf
andb
negl
push
lds
xor
loopne
dec
popf
andl
lcall
ret
mov
sbb
adc
mov
jbe
xlat
xchg
sar
ljmp
push
add
mov
pop
hlt
mov
movsl
cltd
arpl
call
push
jle
sbb
push
pop
add
cld
in
shll
adc
cmp
icebp
rcrl
sarl
and
insl
add
mov
in
sub
decb
and
cli
push
mulb
fwait
inc
shll
test
mov
data16
idiv
popf
mov
fs
push
lods
and
mov
loopne
call
mov
lret
xchg
popa
lahf
les
pusha
jb
aam
jo
inc
mov
xchg
fstpt
test
and
insb
pop
ret
mov
cmc
xor
decl
decl
jle
sub
dec
test
sbb
imul
or
ljmp
imul
lods
mov
sbb
dec
scas
arpl
mov
ljmp
pusha
jmp
ret
lds
inc
cmpsl
clc
fwait
lods
fwait
ds
push
pop
pushl
idivl
lea
stos
mov
loopne
mov
fistps
push
fldt
in
inc
sub
fidivrl
or
ret
jns
mov
xor
pop
std
pushl
push
movl
sub
cs
add
sbb
out
sbb
rol
decb
push
into
adc
loopne
inc
ret
shlb
sar
pushl
inc
fcompl
clc
sub
dec
outsl
fcoms
cmp
cmp
jno
clc
int
outsl
call
loopne
inc
cmp
push
js
flds
dec
fcoml
adcl
out
incl
hlt
pop
jno
icebp
repz
pop
popa
push
mov
loopne
jo
adc
or
xchg
mov
mov
xor
fldt
shrb
xor
sub
sub
fcomip
push
jge
repz
lea
shlb
pop
push
orl
mov
ret
mov
fcompl
cmp
sbb
aaa
hlt
pop
xor
fcom
mov
rorb
sub
push
je
xchg
cmp
mov
mov
inc
ret
mov
jo
mov
push
xor
mov
dec
stos
xchg
xor
filds
fimull
mov
and
out
dec
pop
and
jns
in
out
call
divb
xchg
mov
jne
jns
and
sbb
cwtl
fmuls
sbb
incl
pop
add
stc
pop
div
dec
call
pop
ja,pn
add
jmp
sahf
and
decl
push
push
xor
cmp
jnp
into
jp
dec
push
rcrl
outsb
jnp
sub
call
movb
lods
push
loope
dec
int3
add
cmp
sahf
fcoml
aam
mov
int3
scas
sbb
subl
nop
cld
mov
add
mov
sahf
mov
inc
or
push
mov
sti
cmpl
cmpsb
mov
int
xor
into
or
icebp
sub
ds
sar
xor
lar
call
loopne
into
jnp
mov
loope
aam
iret
enter
outsb
push
xchg
and
andb
call
sub
sub
pushw
mov
sub
out
jg
push
push
and
xchg
es
cli
repnz
ds
fldt
scas
sub
adc
push
push
cwtl
jae
and
stos
push
lea
cld
jg
nop
scas
cmp
jno
or
leave
repz
mov
cmp
mov
mov
imul
pop
dec
ljmp
add
or
jb
xor
add
sub
mov
jle
push
loopne
testl
sbb
test
popf
lahf
popa
xor
aaa
cmp
mov
lcall
xor
or
les
mov
scas
mov
push
jae
in
inc
ljmp
loopne
orl
testb
push
clc
les
and
aad
idiv
pushl
cld
xchg
xchg
pop
nop
cmpsb
mov
and
std
es
clc
fbstp
fsts
xchg
lods
cmp
mov
xchg
sbb
aaa
lahf
mov
lock
dec
rorb
scas
cmp
insl
sbb
loop
sub
ficomps
xchg
jae,pt
call
xlat
sub
dec
add
xor
sub
int3
fstpt
xchg
mov
and
jo
inc
pop
xor
shlb
decb
xor
pop
add
call
xor
cwtl
cmp
scas
mov
ss
mov
mov
aaa
mov
imul
jg
ljmp
popf
push
push
jp
addr16
lahf
push
sub
jnp
ljmp
xor
lret
icebp
sub
jne
xchg
int3
fadds
sbb
out
loop
out
adc
decl
sub
and
and
xor
push
xchg
mov
sub
cmp
or
mov
enter
jo
decl
mov
leave
ja
data16
mov
push
or
hlt
pop
popa
enter
icebp
fcomip
insl
sbb
mov
mov
cmp
pusha
cld
pop
or
pop
int3
cmpsb
or
mov
dec
dec
pushl
jo
adc
sub
add
call
push
adc
aas
push
int3
daa
sub
out
pop
add
ja
jmp
outsl
xchg
xchg
mov
ss
cmp
pop
repz
and
hlt
jo
sub
push
rcrl
push
mov
adc
fiaddl
into
pop
movsb
rcll
ljmp
sbb
nop
pop
mov
adc
ret
xor
lds
mov
or
jl
jmp
test
adc
test
ss
incl
mov
adcb
xchg
xchg
cmpsl
pop
aam
xlat
test
leave
pop
enter
stos
fs
orb
pop
inc
cmp
inc
xor
push
sbb
lea
jecxz
sub
cli
dec
shrl
jle
lock
in
pop
add
mov
adc
push
imul
mov
push
jl
ret
and
hlt
mov
add
xchg
test
inc
lcall
inc
pop
int
imul
decl
mov
lret
in
jg
aas
pop
mov
addb
mov
xchg
addr16
jg
gs
data16
mov
dec
loop
and
mov
push
into
les
shrb
dec
and
mov
sbb
cltd
add
or
and
popf
rorl
and
or
lcall
cmp
int
incl
cmc
sub
dec
fwait
out
pop
cmc
orb
sub
inc
adc
jmp
lods
incl
inc
pop
out
ss
jo
fdivp
test
arpl
out
es
mov
jp
mov
push
xchg
push
mov
mov
out
out
out
push
in
pusha
lods
push
pop
loopne
fdivrp
lcall
scas
repz
dec
jne
mov
cli
fiadds
pushf
into
xchg
inc
and
dec
out
std
outsb
in
stos
std
test
pop
into
faddp
mov
push
push
xor
notl
je
jge
or
popf
jl
stos
and
cmpsb
fs
dec
lret
cltd
xor
scas
jne
adc
fwait
pop
es
mov
pop
pusha
inc
lods
mov
ffreep
lods
push
pushl
repnz
test
xor
xchg
mov
lea
mov
xchg
loopne
jmp
pop
jo
popa
jle
mov
in
cld
adc
lods
cmp
nop
jecxz
mov
mov
movsl
ret
addr16
fwait
cmp
adc
mov
pop
push
lret
xor
imul
xchg
imul
jge
les
pop
jle
lahf
jno
aaa
pop
pop
xchg
rcr
daa
push
pop
nop
dec
jbe
clc
movsl
jnp
pushl
sbb
cmp
jne
ljmp
repz
loopne
and
dec
fcomip
decl
and
lret
mov
scas
loop
or
pop
sbb
cmp
xchg
cmp
sub
add
ljmp
dec
pop
mov
pop
xchg
iret
xchg
xchg
inc
lret
lret
test
lea
xor
rolb
jle
stc
ljmp
sbb
lds
jecxz
xchg
sbb
mov
push
xlat
xchg
or
and
and
incl
or
sub
dec
or
xchg
pop
sbb
jle
dec
roll
push
test
sub
pushl
sub
or
jb
outsb
gs
mov
pop
into
push
inc
sub
sarl
mov
aaa
and
xchg
jp
insb
sub
jnp
dec
cld
fwait
fucomi
mov
test
imul
insl
addr16
jg
pusha
rcl
les
and
loop
mov
inc
inc
xchg
clc
insb
add
dec
add
insb
fwait
js
jbe
call
jmp
xchg
call
or
stc
and
push
push
aaa
nop
ljmp
mov
stos
xchg
shlb
popa
mov
fs
xchg
lods
mov
sbb
sbb
call
lcall
out
push
pop
mov
sub
movsb
imul
cwtl
test
incl
jmp
out
push
push
rcrb
cmp
addr16
cmc
jg
outsl
mov
das
sbb
mov
and
int
add
jmp
movsl
movsb
adc
shlb
sarl
aas
out
fwait
mov
das
lods
lret
add
mov
fadds
and
mov
outsb
shll
cs
inc
rorb
inc
cmp
fs
sahf
in
jl
ljmp
loopne
lock
pusha
add
adcb
lods
lahf
scas
cmp
scas
lcall
incl
dec
rclb
mov
outsb
jbe
mov
out
jle
daa
popa
pop
mov
inc
jp
into
jae
pop
or
outsl
xchg
mov
daa
xor
out
aam
dec
cs
sbbb
mov
imul
outsl
fdiv
sub
pop
or
adc
jbe
lock
add
xchg
shr
lods
and
inc
or
out
lods
sub
xchg
jg
hlt
xchg
add
adc
cli
mov
clc
inc
lret
fldcw
call
add
mov
sub
pushf
popf
movsb
imul
sti
sahf
divl
out
decl
jmp
dec
inc
les
cmpsl
icebp
mov
lcall
lret
movsb
jg
jg
enter
or
js
cmp
sbb
adc
mov
sbb
push
outsb
orb
cwtl
clc
jg
push
mov
shrb
iret
sti
jae
cmp
sub
jecxz
and
incl
pop
test
mov
cwtl
dec
xchg
lahf
mov
sub
call
addb
outsb
dec
sbb
mov
hlt
in
call
mov
mov
mov
mov
dec
scas
or
into
push
fs
xlat
adc
das
dec
flds
xchg
mov
cmp
cmpsb
pop
inc
mov
rolb
lods
jp
xchg
or
pop
xorb
and
jmp
repnz
lret
inc
in
cmp
xor
incl
mov
femms
fcomip
xor
xchg
out
popf
inc
lock
jns
pushf
bound
dec
cld
data16
jae
hlt
mov
aaa
mov
push
decl
cmp
sbb
mov
and
mov
push
pop
sahf
roll
adc
lcall
dec
sub
into
les
inc
lods
pop
sbb
out
fmul
test
popa
jnp
mov
movsb
mov
pushl
cmp
push
pusha
xchg
je
and
scas
lahf
pop
mov
and
mov
ds
in
dec
imul
ja
pushl
jnp
jl
scas
dec
stos
xlat
int
push
aad
push
add
dec
lcall
mov
inc
lea
mov
xchg
cmp
cwtl
sub
push
decl
and
cmp
dec
xor
cld
xchg
roll
outsb
cmpsb
stc
aas
js
fst
push
sar
filds
gs
fcompl
add
stos
cmp
loope
lcall
push
mov
sbb
mov
and
lea
pop
pop
ss
test
data16
inc
subb
std
pushl
js
in
xor
cmp
push
test
inc
mov
pop
mov
mov
ror
out
movsl
sbb
pop
cld
call
xor
movsb
and
mov
daa
lds
push
and
push
call
mov
cmp
dec
sbb
adc
ret
xlat
mov
pop
inc
punpckhbw
incl
sahf
pop
adc
rolb
sub
xor
fldenv
lret
lcall
ss
in
mov
aaa
sbb
xchg
push
in
imul
or
call
arpl
sbb
jge
je
imul
xor
cmp
cmpsl
xor
pop
jp
lahf
sahf
pop
sbb
sahf
dec
jle
in
outsl
pushl
push
push
pop
mov
xor
mov
sbb
mov
lods
sbb
fiaddl
mov
in
mov
dec
ficompl
pop
test
dec
dec
jo
ss
movsb
insb
push
cmpsb
inc
dec
jg
sbb
or
push
rcl
push
cmpsb
or
sbb
data16
sbb
loope
insl
and
int3
xor
out
decl
sbb
add
lret
mov
mov
movsl
bound
dec
jo
push
repz
mov
ror
out
clc
pop
fwait
dec
in
cmpsb
jo
push
cs
sub
xor
jmp
in
and
fcompl
pushl
push
dec
stos
cs
xchg
dec
and
lods
jp
clc
divl
or
cmp
clc
stos
lock
in
jl
mov
jp
testb
jg
xchg
push
push
jb
cmpsl
sbb
dec
push
mov
stos
out
int3
cltd
aas
inc
ficompl
loopne
call
adc
xchg
jae
push
stc
jle
lcall
fimuls
inc
lea
or
std
jg
ret
dec
and
dec
xorb
adc
push
ds
xchg
in
incl
xchg
les
inc
push
nop
ja
repz
cmp
dec
mov
js
bound
aad
pop
hlt
jecxz
mov
out
xor
mov
sub
lret
inc
dec
push
jg
push
pop
push
xor
lock
cmp
call
divl
adc
or
add
sbb
and
incl
sbb
jne
pop
hlt
mov
inc
cmp
dec
mov
and
aad
mov
mov
mov
rclb
xlat
jns
jnp
mov
aaa
faddl
test
stos
stos
addb
mov
aas
xor
aam
pop
arpl
ja
mov
cmp
sti
pop
pop
cltd
sub
mov
mov
xchg
push
mov
lds
call
push
cmp
jnp
push
or
loope
sub
call
dec
pop
je
out
or
ljmp
cs
push
imul
dec
and
cmp
inc
imul
mov
adc
push
adcl
jecxz
and
fstps
inc
lret
add
testb
shlb
pop
stos
out
jnp
cmp
sahf
and
sub
jg
pushl
test
inc
xchg
dec
in
lods
pushf
xchg
xlat
mov
out
aad
lock
incl
mov
xor
jae
idivl
pop
fmul
sub
sub
in
xor
add
pushl
and
pop
in
stos
call
in
push
or
loop
fstl
fs
push
mulb
jmp
ja
and
sub
lret
subl
jle
mov
call
jp
lret
incb
push
test
sub
sahf
sub
lret
out
jne
leave
adc
adc
mov
pop
and
mov
pop
enter
nop
lods
shll
out
int3
push
mov
iret
inc
into
loope
xor
push
into
bound
mov
stos
xor
rcl
incl
incb
rorb
sub
fimull
or
ds
sysenter
stos
mov
and
negb
ljmp
ret
jne
cwtl
out
data16
flds
xchg
pop
xchg
sbb
dec
add
imul
loopne
in
insl
mov
xor
push
pop
inc
or
lahf
push
aad
cltd
js
push
faddl
popf
mov
ljmp
sahf
fnstcw
clc
push
dec
loopne
into
sub
call
adc
jno
mov
xlat
adc
gs
imulb
shlb
jp
xor
dec
push
aaa
push
inc
mov
mov
pop
clc
ja
adc
enter
gs
aas
decl
cwtl
dec
cmpsl
outsl
add
dec
out
data16
jb
out
inc
inc
into
sar
and
lret
stc
sbb
incl
cmc
jp
mov
aad
jg
hlt
xchg
xchg
inc
mov
mov
insb
push
cwtl
fnstsw
mov
cmp
cmp
and
clc
pop
xchg
sarl
dec
mov
cmp
mov
cld
pop
push
pop
mov
sub
sub
adc
push
ljmp
pushf
cmp
addl
call
leave
adc
or
jp
dec
adc
jp
fisttps
sar
stc
mov
es
inc
test
jp
pop
push
sub
pop
jbe
lcall
push
ja
ret
clc
pop
mov
push
xchg
test
mov
cltd
add
jl
push
sbb
push
jmp
cmc
shll
incl
mov
adc
sahf
xor
sub
jbe
shl
xor
pop
jae
mov
decl
jne
and
aad
or
fistl
inc
and
mov
cmp
sbb
mov
ret
mov
fcoms
push
mov
std
insl
faddl
mov
mov
fs
xor
call
insl
cmp
std
push
cld
push
je
inc
or
incl
js
sbb
xchg
icebp
rorl
in
and
shrb
pop
pop
lret
test
mov
rclb
sbb
ret
cmp
pop
push
dec
nop
add
add
out
mov
into
mov
mov
adc
clc
inc
inc
shll
inc
adc
and
movsb
mov
scas
insb
dec
inc
imul
mov
or
sub
add
adc
mov
xchg
lods
cmp
outsl
sarl
dec
push
or
xchg
loopne
inc
clc
data16
cmp
jl
cld
fildl
clc
cld
cmp
sbb
mov
add
pop
xchg
in
add
mov
cmp
mov
stos
rorb
jge
out
nop
dec
cmp
cmpsl
ljmp
nop
call
jmp
rclb
jge
or
inc
xchg
out
lods
mov
std
js
outsb
jecxz
int
mov
fs
xchg
call
lock
or
insb
pop
bound
popa
jle
inc
add
sub
push
jp
dec
imul
xor
lahf
daa
int
mov
or
vaddsubpd
cmc
pop
add
sbbb
xchg
mov
mov
test
jge
sbb
outsb
aad
mov
xlat
lret
cli
mov
sbb
xlat
push
ds
cld
or
jecxz
mov
mov
popa
loopne
pop
aas
mov
dec
jecxz
pusha
sub
loope
add
scas
and
mov
enter
fsubs
mov
push
sub
jg
xchg
decl
push
xor
insb
fsubrs
frstor
push
cmc
adc
hlt
cmpsb
sub
inc
shll
mov
ret
add
lods
mov
test
call
add
and
mov
test
ficoms
outsb
push
mov
shlb
mov
pop
ds
and
pusha
std
mov
cli
xchg
jne
cltd
int3
popa
add
lods
mov
sbb
mull
out
jnp
mov
xor
lods
lret
push
inc
sbb
pusha
mov
lock
inc
loope
mov
aad
or
call
ljmp
push
mov
xchg
roll
in
bound
adc
mov
and
dec
and
inc
jb
out
push
push
in
push
ret
clc
lea
aam
pop
pop
pop
test
scas
mov
adc
mov
mov
andb
call
mov
and
jmp
add
outsl
xchg
dec
fwait
stos
test
inc
scas
sbb
shlb
mov
jmp
sbb
call
int3
test
xor
inc
pop
lcall
add
inc
into
push
jl
and
daa
mov
dec
outsl
xchg
mov
call
adc
in
aam
in
xchg
add
lods
push
or
nop
and
push
cwtl
in
cs
mov
cli
mov
lock
movsb
rolb
pop
fsubrs
or
xor
hlt
add
in
bound
inc
test
ljmp
incb
arpl
stos
lock
cmp
ja
enter
incb
or
testl
pop
or
shlb
add
xor
push
cmpsb
fdivl
bound
clc
dec
insb
fidivrl
fiaddl
cmpsl
lds
mulb
or
mov
pop
cli
outsl
push
or
clc
mull
addr16
inc
push
adc
ljmp
lcall
mov
pop
sub
cmp
mov
icebp
jae
xor
cmpsl
pushl
and
inc
jb
movsb
cld
scas
repz
mov
adc
inc
adc
push
push
pop
rolb
icebp
out
add
popa
add
test
xorl
inc
jo
mov
ret
dec
inc
jbe
pop
movsl
pusha
pop
and
dec
mov
aam
push
sahf
add
loope
les
xlat
lock
push
outsl
pop
cmp
ret
movsl
pusha
das
jbe
cmc
mov
out
int
ljmp
pop
mov
adc
je
mov
lcall
dec
pusha
and
iret
adc
mov
sbb
or
lahf
and
pop
fidivl
incl
cs
jne
mov
sti
mov
xchg
add
scas
ss
addl
test
dec
sbb
bound
or
xchg
popa
or
decb
adc
mov
push
out
clc
scas
pop
cmp
call
or
fisubs
scas
lods
adc
fdivp
jecxz
mov
adc
into
jnp
lret
popf
mov
inc
scas
ja
xchg
mov
daa
movsb
push
xor
lahf
xor
inc
cmpsb
fimull
fildl
add
sbb
scas
sub
inc
in
dec
mov
mov
outsb
fdivs
loop
mov
push
scas
push
cld
jg
fisubrs
add
fidivrs
loope
es
mov
popa
xchg
pop
fsubs
push
jns
push
mov
jbe
push
orb
fildll
pushl
loop
int3
adcl
js
mov
and
lods
add
cs
cmpb
fwait
dec
add
das
and
ret
daa
bound
mov
fsubr
aad
jle
scas
cmp
sub
movsb
idiv
insb
add
inc
dec
sub
lret
fiaddl
test
cmp
sub
dec
lcall
scas
out
cli
ljmp
fcoms
loop
pop
inc
jle
stc
arpl
add
ss
push
mov
push
rcrb
daa
push
idivb
pop
pop
std
mov
hlt
push
or
add
push
mov
ss
icebp
dec
sub
dec
stos
int
call
sar
bound
aad
popf
or
imul
addb
es
cltd
gs
mov
inc
xchg
xor
cs
shr
inc
jae
imul
mov
ljmp
cmpsl
jne
pusha
push
fdivrl
pop
jne
imul
cmpsb
sarb
inc
mov
cmp
shrb
fisttpl
mov
mov
adcb
cmp
mov
orb
std
push
add
fcoml
pop
push
icebp
push
enter
jge
cli
loop
orb
sbb
fdivrl
call
loope
jmp
sahf
inc
xor
incl
data16
out
ficoms
mov
jle
ss
stos
dec
push
cltd
mov
lret
mov
xor
push
lods
xor
or
arpl
fldt
icebp
test
and
push
sarb
es
add
dec
pop
inc
sbb
repnz
notl
cmp
fmuls
js
fcoml
mov
cmp
pop
in
aam
das
scas
push
nop
mov
loopne
pop
outsb
pusha
lds
ret
in
ljmp
cmpsb
out
clc
mov
push
cmpsb
xchg
adc
cld
push
adc
xchg
scas
fidivl
add
inc
push
add
cmp
cwtl
or
inc
cmpb
jmp
sbb
xchg
ret
cld
cmpsb
add
je
shll
std
scas
pusha
rdmsr
sbbb
mov
push
js
iret
bnd
mov
add
loop
fs
jge
mov
js
and
dec
out
ljmp
lods
int3
xor
js
xchg
mov
jb
shll
sbbb
sub
adc
ss
inc
adc
adcl
arpl
or
ljmp
cmpsb
out
ficoms
test
cld
pop
aaa
dec
inc
lret
xchg
xor
clc
mov
push
mov
mov
ljmp
add
jb
pop
add
or
push
inc
ja
sahf
xchg
mov
push
inc
inc
jns
test
mov
push
xor
sub
shrb
cmp
in
aam
or
push
scas
mov
js
mov
mov
sarb
mov
pop
inc
pushf
mov
movsb
cld
testb
pop
xorl
fidivrs
jg
mov
mull
rcrb
add
outsb
nop
jno
sbb
jne
data16
push
sysenter
jbe
adc
pop
and
stos
xlat
dec
aam
movsl
ds
stc
out
mov
dec
sbb
fwait
dec
je
call
xor
addl
stos
push
cmpsb
mov
dec
dec
adc
sbb
in
adcb
fs
sahf
or
repnz
popa
jmp
bound
jl
cmp
cmp
lret
call
pop
sbb
pusha
jecxz
sub
or
ljmp
ret
or
loopne
insb
pop
sub
jno
call
popf
add
rclb
push
mov
std
pop
lldt
adc
das
cmp
fs
push
nop
jo
out
subb
ljmp
jno
test
rol
test
dec
dec
mov
popa
mov
cmp
cmp
and
jp,pt
inc
or
jp
call
inc
add
dec
js
mov
jmp
ficoml
es
dec
sbb
mov
xor
jo
loop
cmp
mov
cmp
adc
adc
in
sbb
push
rolb
lods
scas
xchg
mov
subb
sbb
ljmp
decl
dec
sbb
lods
inc
adc
movsb
pop
ss
or
pop
hlt
aaa
push
pop
cmp
adc
push
push
adcl
cmp
std
outsl
mov
out
add
mov
pop
xor
inc
push
fwait
inc
mov
stc
pop
rolb
push
aad
add
sti
mov
test
or
sub
mov
mov
sbb
push
ss
add
sahf
lea
dec
inc
mov
mov
shl
or
loopne
outsl
dec
out
pop
pop
test
lods
movsl
fs
cmp
inc
and
in
adc
dec
dec
or
dec
data16
mov
mov
push
loopne
xor
pusha
and
fs
leave
mov
loopne
cmp
push
addb
sub
arpl
add
xor
push
sub
xor
cmp
or
loop
mov
out
stc
enter
orl
rcrb
jl
pop
testl
pop
mov
sbb
insb
jbe
je
mov
and
add
test
out
push
cmpsb
jmp
lods
in
push
xchg
je
ret
xchg
or
mov
xor
adc
and
mov
test
xor
mov
or
repnz
rol
in
sti
xor
mov
push
cld
adc
out
push
and
push
xchg
or
int
and
cwtl
shlb
xchg
scas
pop
jns
idivb
je
cld
pushf
shl
xor
adc
sbb
mov
call
adc
jns
jmp
mov
cli
pop
push
mov
cmc
mov
add
push
leave
mov
push
sarl
jecxz
add
mov
cmpsb
xchg
aam
add
mov
add
xchg
fadds
jne
pop
push
hlt
js
lret
jo
mov
hlt
push
sub
das
mov
out
int3
sarl
jne
inc
mov
xchg
xorb
lret
mov
stos
mov
lods
fbstp
push
dec
enter
adc
cld
cwtl
pop
jmp
jl,pt
sub
xchg
gs
jo
or
and
imulb
adcb
ret
mov
loopne
bound
inc
jno
mov
pop
dec
stos
outsl
mov
data16
mov
jns
loopne
push
ret
sub
mov
dec
test
cmp
pop
xchg
inc
aas
xchg
cltd
jae
test
pusha
hlt
sub
sub
inc
sbb
push
aam
mov
lock
popa
das
inc
and
aad
scas
dec
sbb
aam
dec
add
sbb
xor
or
aam
xlat
pop
jne
add
and
ss
sbb
lahf
rcrl
jo
adc
inc
into
jle
mov
mov
js
shrb
pushf
adc
loopne
mov
push
push
pop
popf
leave
cli
andb
aaa
push
xchg
stc
cmc
cmp
add
mov
jl
push
insl
sbb
inc
aaa
das
push
in
lds
test
pop
add
cmp
add
add
icebp
das
into
test
call
sti
cmp
cmp
das
jle
ss
fldl
ss
into
mov
mov
in
mov
mov
cmp
xchg
sub
cs
inc
call
cli
lods
loope
out
sub
loopne
loopne
cmp
insl
sbbb
in
push
cmp
sbb
push
dec
jmp
loopne
or
and
dec
lea
insb
mov
lcall
invd
test
pusha
sti
sbb
shl
mov
lret
mov
jns
pop
subb
xchg
jp
rorb
inc
dec
adcb
cld
or
dec
push
xchg
repz
jg
dec
out
shrb
scas
inc
mov
pop
inc
std
cmpl
fs
test
inc
ljmp
and
leave
sub
fwait
inc
xchg
push
call
clc
add
popa
add
fisubrs
mov
or
cmp
mov
pusha
negb
mull
add
clc
into
push
pop
dec
and
push
sbb
cmpsb
push
call
and
loope
adc
add
cmpb
and
inc
cmp
sub
push
cli
clc
jl
add
pushl
ret
xchg
jb
mov
and
mov
cmc
fwait
xchg
stc
cwtl
lods
mov
out
ds
lret
and
lock
sub
and
add
dec
sub
xor
arpl
sub
notl
lret
sbb
hlt
xor
loop
sub
lods
ss
mov
es
lock
scas
and
xor
nop
xchg
sahf
mov
adc
movsb
add
jecxz
mov
or
push
push
rorb
sbb
push
mov
aad
das
add
xor
insb
int3
and
ds
adc
xchg
add
pop
or
xchg
pop
dec
cmp
inc
cmp
out
jmp
cli
cmp
adc
decb
pop
and
xorb
add
ljmp
push
or
cli
idivl
inc
lcall
sbb
push
icebp
lahf
or
out
mov
push
test
popa
aaa
imul
xor
dec
mov
sti
in
pop
ret
cmp
mov
movsl
add
stos
sbbb
and
pusha
jp
lock
xchg
cld
adc
and
add
add
repz
ljmp
stos
ret
and
cmp
ss
out
cli
lds
cld
gs
cmp
mov
or
ret
cmpb
ret
rsqrtps
popa
jns
lock
ds
add
jo
mov
mov
mov
repnz
fiaddl
test
clc
jb
cld
mov
fcoml
xor
cltd
shl
cld
xorl
shl
aaa
inc
sbb
xchg
sbb
ss
cli
mov
push
ret
push
cmc
add
cmp
add
orl
frstor
test
mov
sub
push
sbb
pop
or
les
pop
gs
and
sbb
outsb
xor
xor
mov
outsl
outsl
mov
jno
addr16
sarb
inc
adc
or
fildl
lods
mov
push
cmp
push
adc
pop
pusha
data16
inc
sub
ss
add
mov
pusha
pusha
add
fistpl
sbb
mov
imul
pop
pop
mov
vmovdqu
xlat
jg
push
stc
aad
sarb
inc
lea
fs
sbb
xchg
scas
test
sahf
sbb
test
mov
mov
adc
jg
std
push
or
dec
aas
cmp
ficompl
cmc
outsl
clc
mov
and
mov
inc
push
lret
cwtl
fs
cwtl
sub
lret
cwtl
fnstenv
pop
stc
data16
shl
mov
sti
push
xchg
call
inc
sti
sbb
push
mov
push
inc
mov
popa
ret
mov
cltd
adc
push
and
data16
sub
cmp
loopne
sub
incb
clc
loopne
adc
sbb
dec
jp
ret
mov
adc
jno
stos
imul
cmpsb
mov
mov
loop
jne
add
xchg
lock
or
in
insl
sub
insb
es
push
shll
stos
or
sbb
adc
scas
inc
in
rolb
hlt
xchg
ret
jl
sub
inc
xchg
lret
out
scas
or
xlat
cmpsb
nop
jb
mov
cmpsb
hlt
or
and
xor
pop
jl
inc
pop
and
stos
add
jne
pop
mov
pusha
inc
push
stos
shlb
in
sar
cld
push
and
cmpsl
or
mov
das
clc
add
dec
test
cli
stos
fcomps
das
gs
mov
jg
push
xor
inc
mov
push
sti
test
push
mov
and
mov
sahf
loope
sbb
inc
pop
fwait
loope
push
pusha
cmp
aaa
adc
sub
subb
sub
outsl
add
jge
test
cmpsl
lods
add
out
out
clc
cli
xor
push
lods
jg
jmp
call
movsl
add
cld
mov
lock
cmp
fcoms
sub
sub
jmp
out
mov
sub
inc
rolb
cli
outsb
add
mov
and
in
and
mov
adcl
sub
in
sub
sahf
push
sub
insl
std
dec
ds
add
jo
insb
sbb
mov
clc
and
cmp
cmc
clc
int
sub
faddl
xlat
adc
jp
add
lcall
ljmp
mov
adc
pop
inc
ja
testb
mov
and
sub
mov
imul
movb
lds
in
fcomps
and
es
arpl
dec
adc
jne
scas
shrl
sub
mov
bound
add
or
les
pushl
dec
mov
xchg
push
test
push
mov
cmp
dec
std
inc
adcl
inc
jmp
lret
lcall
sub
clc
jo
lcall
fcmovne
or
test
sbb
jecxz
mov
les
dec
jge
ljmp
add
add
mov
push
insb
add
inc
lcall
loopne
sar
loopne
cld
rclb
arpl
loopne
jbe
push
test
or
decl
orb
bound
and
sbb
dec
addb
ljmp
push
in
jnp
in
push
icebp
jno
sub
mov
bound
in
mov
dec
pop
or
push
int3
repnz
data16
pop
cmpsl
fwait
std
xor
nop
or
int3
xchg
mov
mov
test
fstpt
into
movsb
orl
mov
nop
push
ss
push
mov
imul
mov
jle
call
inc
fidivrl
sbb
jle
cmp
loop
pop
fstpl
xchg
jecxz
mov
adc
dec
js
pop
pusha
out
dec
mov
loope
jns
popa
roll
fisubs
sub
stos
cmp
scas
jno
xchg
add
or
mov
hlt
add
nop
xor
xor
adc
rol
pop
lock
pushf
xchg
jne
js
dec
lahf
ljmp
rcrb
mov
inc
mov
mov
dec
subb
xor
cmp
repnz
push
or
and
sahf
push
hlt
sahf
int3
push
cmp
into
cwtl
or
inc
cld
fsubl
mov
add
xor
in
stos
daa
and
sti
rcr
shlb
fwait
mov
mov
add
xor
add
lret
les
pop
xchg
sbbb
xor
mov
mov
aas
shr
mov
sti
mov
jp
movsb
pop
ja
dec
xor
mov
pop
out
xchg
jecxz
mov
fwait
adc
adc
scas
lret
mov
aam
jmpw
pushl
adc
cwtl
adc
or
inc
cmp
push
sub
push
dec
outsb
pop
iret
ljmp
icebp
mov
iret
cli
fs
fldcw
jnp
fsubl
xchg
or
loope
mov
adc
lods
dec
ja
dec
and
mov
sarl
jp
roll
push
repz
sbb
dec
cmpsb
xchg
xchg
aad
mov
mov
jmp
cld
pop
mov
sahf
mov
into
lock
ret
jg
mov
adc
xor
cld
mov
jo
mov
nop
or
sub
jle
push
decl
and
loop
xchg
mov
cmpsl
clc
inc
push
inc
lods
adc
negb
repnz
push
adc
pop
adc
push
loope
call
mov
aad
fwait
pop
jg
and
pop
out
ss
std
outsl
xor
rol
scas
cmpsl
les
rolb
pop
and
mov
adc
lock
fisttpl
sarb
xchg
cmp
xorb
stos
shr
lcall
idivl
lock
mov
sbb
vmaxsd
lock
pop
pop
sahf
dec
loope
mov
mov
push
sbb
mov
and
mov
scas
jo
call
adc
pop
ss
leave
js,pt
adc
jmp
push
fimuls
sbb
xchg
outsb
sub
adc
leave
ss
push
push
ljmp
icebp
fcmovu
xchg
mov
inc
pop
push
push
add
mov
adc
lods
jne
dec
std
mov
mov
std
jbe
dec
cli
push
fisubrs
sbb
mov
movsl
xor
pushf
xchg
sbb
inc
mulb
test
das
xorb
and
and
xchg
add
call
sbb
or
fdivs
xchg
mov
and
xchg
fdivl
inc
pusha
es
fs
popa
ss
dec
flds
scas
popa
clc
and
push
jle
andb
lock
cli
push
sub
test
jno
clc
adc
and
sub
push
fidivl
cmp
cmp
inc
and
mov
ljmp
add
dec
xor
pop
xor
ds
and
dec
fcompl
cmp
add
dec
stc
cs
dec
test
xchg
cs
adc
push
psubb
and
jg
mov
in
movl
mov
mov
cld
stos
bound
leave
rclb
lods
inc
repz
pop
lcall
ja
or
adc
lret
mov
aas
test
pop
sar
out
jbe
negl
cli
bound
fisubrl
std
mov
jbe,pt
test
mov
adc
add
mov
push
stos
ja
jo
mov
cmc
loope
mov
mov
test
pop
cmp
and
mov
fnsave
mull
outsl
mov
mov
imul
out
lret
sub
xor
in
xor
fdivp
xchg
mov
sbb
xchg
sbbl
dec
test
pop
pop
sub
divb
out
ror
jne
push
push
adc
shll
dec
inc
ljmp
faddp
push
push
loopne
jne
dec
clc
sub
pop
data16
incl
aam
or
cld
xor
insl
xchg
jnp
pusha
ljmp
sbb
dec
mov
mov
push
cwtl
xchg
push
pusha
mov
cmp
out
mov
mov
data16
inc
call
adc
cli
popf
fstpl
adc
test
pop
mov
adc
cmp
pop
lds
imul
movsl
xor
add
jg
cmp
mov
adc
mov
popf
in
repnz
lret
push
in
nop
test
lods
pop
je
xor
cmp
add
icebp
push
aaa
and
mov
and
push
adc
mov
insl
xchg
aam
push
add
pop
adc
xchg
or
adc
out
mov
pop
orb
pop
xchg
sahf
adc
movsl
inc
xorb
pop
clc
jbe
out
sti
int3
mov
dec
nop
mov
orb
mov
inc
add
std
fisubrl
mov
push
pop
xchg
mov
inc
clc
decl
xor
or
cli
lods
push
mov
scas
cmc
add
arpl
push
psadbw
xchg
add
ds
and
lret
decb
je
or
or
ds
lock
pop
mov
pushf
mov
cmpsb
cs
jae
xor
ljmp
push
dec
js
test
push
pop
mov
call
mov
xchg
or
pop
mov
js
call
xor
push
push
or
into
cmp
mov
pushl
sub
and
arpl
pop
cmp
xchg
jne
dec
and
cmp
sbb
and
mov
sbbb
push
or
out
push
popa
add
sbb
mov
sbb
dec
sub
jp
adc
ficomps
push
mov
mov
bound
and
lods
sahf
sti
and
cli
sti
lea
inc
or
gs
pop
pop
mov
xchg
sub
push
adc
mov
popa
cli
lock
add
and
inc
das
xchg
or
xor
ss
pop
and
sbb
or
mov
dec
call
adc
pusha
cld
jbe
repz
jns
subb
hlt
push
mov
lock
push
and
jle
mov
pop
adc
and
lds
xorl
or
push
aad
xor
jns
jle
mov
ljmp
jno
mov
data16
bound
mov
jl
dec
mov
push
les
or
roll
jle
nop
mov
rorb
cmpb
icebp
mov
movsb
fistpl
mov
push
cmp
and
and
fnsave
pop
outsl
and
xchg
push
xchg
xlat
inc
aam
xor
lret
dec
cwtl
xor
jmp
push
cmp
jbe
lock
sbb
adc
in
in
mov
push
cmp
push
mov
adc
push
rclb
sahf
test
shll
rclb
add
sbb
dec
add
dec
jmp
dec
adc
pop
sbb
sti
cld
xchg
xchg
enter
jno
pushf
dec
xor
pop
push
sbb
xor
mov
sub
lods
es
out
push
and
sub
pop
push
out
lock
bound
in
jmp
pop
js
insb
clc
jb
mov
add
lds
xor
jnp
sti
jnp,pn
mov
fidivrs
add
pop
test
lock
sahf
sub
clc
pop
pop
dec
xchg
adc
jno
test
cli
push
roll
inc
jnp
sub
adc
cmp
adc
fs
xorl
arpl
jno
test
js
fadd
or
mov
test
or
inc
jne
cmp
mov
ds
sbb
pop
daa
add
sbb
mov
insb
jge
dec
notb
cmp
pop
pop
cmc
out
lea
in
mov
sti
sub
data16
cmpsl
or
test
xchg
mov
sub
xchg
in
imul
mov
pop
jl
cmp
jb
fnstsw
loop
repnz
mov
cmpsb
cli
into
inc
mov
jbe
into
lret
sbb
mov
sub
xchg
imulb
xor
jle
lret
subb
sbb
inc
dec
int3
out
cmpsl
lahf
mov
test
xor
jecxz
mov
in
inc
cmp
sub
xor
or
ret
mov
repnz
push
loopne
xchg
sbb
inc
fisubrl
ret
lea
aam
or
mov
ljmp
pop
bound
sub
pop
fcmovb
push
test
or
cld
ss
add
call
sub
out
test
add
mov
std
loopne
jge
data16
bound
add
pop
stos
sarl
jle
repnz
fildl
inc
testb
mov
clc
mov
or
inc
inc
pop
adc
inc
jg
pushl
out
adc
addb
add
and
addb
add
cmp
aam
jg
jg
inc
or
and
fwait
clc
lahf
mov
and
adc
or
out
sbb
jmp
jg
jg
add
adc
inc
jg
inc
nop
xchg
in
add
add
mov
incl
cmp
sbb
or
dec
or
mov
mov
inc
sti
and
or
adc
scas
adc
pop
mov
xor
incl
ljmp
inc
add
add
jg
mov
andb
inc
and
xor
insb
jnp
mov
mov
add
add
jl
adc
adc
mov
out
cmpb
mov
stos
adc
adc
and
add
and
adc
inc
dec
int3
insb
rolb
data16
outsb
sahf
or
dec
sub
adc
sub
push
int3
lcall
inc
enter
xor
mov
jg
jg
adc
adc
sbb
insl
cmp
inc
nop
inc
mov
mov
adc
fiadds
adc
mov
incl
ss
mov
addb
push
xchg
mov
mov
mov
jb
push
imul
push
stos
inc
ficoms
into
aam
push
dec
ds
xor
mov
push
adc
inc
sub
sti
stos
sbb
fmuls
in
adc
adc
ret
adc
fsubrp
pop
inc
andb
adc
xchg
lret
sti
out
fld
mov
adc
out
ret
mov
pop
adc
insb
and
or
data16
ljmp
cmp
pop
push
inc
aam
lock
cmp
test
jno
dec
sti
les
push
int3
lods
shll
pushl
cmp
ret
shrl
clc
scas
inc
adc
rdpmc
push
fsubr
inc
inc
or
icebp
adc
mov
ss
test
xorb
push
xchg
enter
pushf
js
push
xorl
mov
orl
inc
mov
dec
out
xchg
xor
jecxz
add
out
push
or
dec
lock
mov
int
or
add
sub
sbb
push
out
xor
ret
cli
sub
divb
push
sahf
orb
enter
enter
ror
xchg
mov
xchg
add
sbb
andb
lcall
push
pushf
pop
dec
push
es
and
cmp
cwtl
dec
xchg
or
movsb
add
or
sub
in
jno
scas
repnz
cli
push
push
mov
js
iret
mov
rcl
mov
outsb
inc
stos
clc
cmp
sbb
mov
in
sbb
sbb
sbb
sub
adc
add
fisubrs
sbb
sbbl
inc
popl
push
mov
int3
popa
jbe
dec
add
aam
push
or
rorb
push
mov
xor
and
push
add
rorl
fs
push
pop
jo
dec
pusha
or
loopne
bound
jp
push
jg
loopne
mov
cltd
in
int3
cs
pop
inc
push
int3
out
fs
test
push
cwtl
ret
rorl
xor
inc
jnp
repnz
inc
jbe
sbbl
mov
add
ds
inc
lods
out
fisubl
into
xchg
pop
cmp
xchg
pop
lock
rorl
pushf
push
psrlw
mov
les
mov
mov
stos
sub
dec
pusha
sub
ror
or
jl
push
push
jl
sub
scas
ss
sbb
dec
push
lcall
pop
mov
jo
jb
rcrb
ljmp
mov
nop
mulb
addl
loopne
adc
xchg
or
in
outsb
in
pop
ret
inc
xor
pop
adc
cld
loopne
divb
cld
adc
adc
push
push
ret
pop
xchg
es
xor
or
xor
or
cmp
dec
bound
rorb
pusha
jle
push
inc
mov
push
and
data16
imul
or
inc
nop
mov
dec
push
add
pop
cmpsb
scas
ret
test
into
in
mov
push
mov
mov
sbb
push
in
data16
and
mov
add
sbb
inc
fimull
push
mov
andl
or
shll
cmp
dec
push
ret
and
inc
adc
and
adc
add
adc
inc
js
mov
adc
in
fidivrs
and
imul
ds
add
popa
andb
fisubs
test
or
xor
cwtl
or
jle
mov
out
pop
mov
and
add
add
es
or
loope
addl
and
jb
xchg
shrb
loopne
push
inc
and
xchg
or
mov
add
add
inc
sti
push
inc
adc
add
inc
adc
xor
ficompl
xchg
add
adc
push
add
cmpsb
test
ss
pushf
mov
adc
sbb
divb
add
js
data16
mov
or
test
movsb
jg
pusha
sub
and
add
or
push
add
sbb
add
mov
ds
sbb
inc
addl
dec
adc
scas
add
add
inc
push
sahf
push
mov
in
dec
pop
xor
add
or
mov
mov
orl
mov
int3
test
cwtl
add
mov
ror
xchg
mov
add
sbb
xor
mov
sbb
push
lcall
inc
nop
ss
push
outsb
inc
xor
lcall
sahf
je
cmpsb
pusha
or
les
or
and
pop
xor
faddp
repnz
data16
jo
sahf
sub
cmpsl
adc
or
roll
cmp
xchg
pushf
dec
rorl
mov
andb
sti
mov
sub
adc
mov
xor
xlat
and
test
push
jno
pop
xor
out
push
outsb
adc
push
inc
push
sbbb
add
data16
push
call
add
or
cmp
cmp
xor
xchg
add
cmpsl
pusha
es
cli
mov
iret
push
add
mov
dec
cltd
sbb
int3
sub
or
push
or
mull
mov
push
inc
cmp
andb
fadds
add
push
or
inc
fs
pushf
cmpsb
push
out
fistps
adc
clc
sbb
mov
mulb
add
sub
or
inc
xor
or
cmp
stos
or
add
hlt
push
shl
xor
dec
rorb
add
push
pushf
call
or
sbb
call
addr16
add
mov
mov
cld
and
sub
or
add
pusha
adc
xchg
xor
adc
and
rclb
xchg
test
sub
jp
mov
and
sahf
jge
mov
sti
add
add
mov
shl
sbb
add
out
insb
adcb
push
mov
lret
jle
loop
pop
add
out
and
orb
test
inc
shl
je
adcb
addb
inc
sub
movsb
xor
jg
and
push
clc
sbb
push
and
dec
pusha
call
int3
sub
adc
adc
gs
xor
lods
jle
xchg
into
dec
pop
cmp
add
xor
add
call
clc
mov
lods
dec
or
popa
sub
andb
adc
fsubrp
aam
js
comiss
mov
out
mov
push
lds
pushf
xor
inc
and
xor
movl
cmp
fadd
jno
adc
in
and
shrb
pop
sub
rorb
adc
test
or
push
pop
and
or
ljmp
push
sbb
shlb
cmp
xchg
loop
cwtl
loope
pusha
pop
mov
rol
rclb
stos
adc
cld
adc
into
xchg
ret
add
adc
in
xor
fisubrl
push
cwtl
cltd
stos
jb
inc
outsb
adc
pop
test
push
es
adc
es
xor
add
push
sub
mov
xchg
adc
enter
push
ret
add
dec
jo
jo
mov
adc
pushf
cmp
or
mov
je
pop
lcall
sti
adc
roll
inc
pushf
loopne
fsubs
xchg
loope
dec
into
lcall
push
or
xchg
push
or
cmp
mov
es
lock
cwtl
test
lods
dec
mov
and
inc
add
add
mov
stos
mov
je
adc
rorb
xchg
sub
arpl
xor
or
dec
add
outsb
add
fidivrl
ljmp
mov
popa
popa
nop
push
jo
fdivl
sub
sti
ds
jbe
xchg
or
cmp
sbb
ljmp
les
mov
mov
fsub
mov
fcomps
hlt
mov
data16
xadd
or
push
pop
sbb
arpl
cmp
xor
jp
pop
add
inc
fimull
pop
and
popa
sub
jbe
imul
pop
inc
shl
cltd
ret
xchg
nop
sbb
sbb
mov
xchg
push
adc
dec
xor
hlt
cmp
cli
sub
sub
in
bound
mov
cmp
mov
data16
ljmp
data16
jle
or
in
rolb
cmp
or
cmp
cmpsb
mov
mov
xor
js
cmp
jmp
add
loope
pop
fsubl
scas
ret
popa
clc
clc
dec
dec
add
or
mov
mov
lcall
mov
jbe
add
sbb
sbbb
inc
les
out
sub
adc
mov
cmp
pop
push
sti
dec
mov
mov
mulb
inc
out
jp
addr16
cmc
in
push
or
xor
lods
inc
xchg
or
cmp
adc
movsb
xor
pushf
sti
ficoms
js
push
mov
push
bound
xchg
pop
xor
adc
inc
adc
filds
mov
add
divl
and
sub
inc
cmp
inc
std
inc
std
add
mov
pop
adc
decb
std
incb
mov
inc
js
adc
cmpb
mov
aaa
aam
fildll
addb
mov
fiaddl
addb
inc
add
and
imul
mov
dec
std
or
and
pushf
adc
insb
movsb
stos
push
xchg
or
out
mov
add
mov
jg
inc
add
mov
in
inc
dec
and
testl
mov
add
jg
std
dec
adc
incb
add
inc
aaa
mov
dec
decb
lcall
adc
jg
dec
aad
outsb
add
add
push
bound
ss
cmp
js
out
and
dec
aam
jl
mov
xchg
inc
fcomip
inc
add
inc
add
and
and
add
xchg
inc
adc
pop
inc
add
mov
out
and
filds
add
adc
ja
push
push
lret
inc
sbb
add
mov
inc
dec
popa
jo
je
imul
push
je
dec
popa
outsb
fs
gs
neg
dec
gs
jp
das
inc
jne
jb
outsb
je
push
outsl
add
gs
je
inc
imul
pop
adc
pop
inc
js
je
jb
arpl
jae
push
imul
dec
outsl
jb
popa
je
dec
lods
mov
dec
push
insb
jae
push
sbb
fldcw
jbe
sub
imul
data16
or
dec
lret
cmc
mov
imul
mov
insl
mov
bound
insb
or
fstl
mov
add
mov
je
nop
lods
sbb
cmpsl
aaa
xor
jne
push
sbb
imul
adc
gs
cwtl
and
push
inc
outsl
insl
insl
shr
xchg
push
sub
push
fcompl
scas
adc
mov
jae
adc
ret
out
addl
data16
push
inc
mov
gs
data16
cwtl
in
jne
enter
cltd
cmc
jno
andb
dec
popa
shll
push
inc
pushf
adc
xlat
mov
outsl
in
popa
popa
bound
jae
sub
push
jns
gs
repz
jae
adc
lds
jns
sbb
add
push
mov
inc
xlat
push
data16
pushf
jno
adc
or
adc
cmp
and
dec
outsb
outsw
inc
testb
mov
push
jae
xor
popa
arpl
dec
outsl
fs
movsl
dec
popa
insl
daa
sbb
and
push
sub
fisubs
ja
push
outsl
push
jp
dec
mov
mov
inc
dec
rol
rcll
sbb
sbb
js
lock
popa
dec
mov
lods
fldenv
scas
sub
outsb
mov
sarl
popa
inc
push
fsubs
bound
and
loope
mov
jne
mov
jne,pn
xor
outsb
inc
or
xor
and
pop
addr16
mov
and
imul
cs
in
push
inc
push
dec
add
jg
popf
loopne
sidtl
add
mov
xor
daa
arpl
push
adc
fists
or
fucomp
pop
add
mov
mov
divb
jae
adc
adc
sub
lock
sub
and
add
in
xchg
jle
je
inc
xor
addb
mov
xchg
add
or
insb
push
testb
add
shrb
jb
xchg
movsl
add
rolb
inc
add
jo
or
enter
inc
ljmp
or
push
repnz
push
pop
dec
adc
in
aaa
or
lds
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
orb
add
sub
add
sub
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
or
add
add
push
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
or
add
add
je
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
add
add
insb
ret
aam
add
sbbb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
popa
add
add
imul
and
dec
add
arpl
add
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
jae
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
push
add
imul
and
push
add
bound
jae
and
inc
add
imul
add
pop
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
insb
add
jb
and
test
add
outsb
add
jns
and
dec
add
jb
jns
and
xor
cmp
cmp
xor
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
add
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jne
outsb
add
add
add
add
add
jne
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
lds
add
lds
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
