add
add
add
xor
hlt
push
xor
aaa
mov
repz
ds
dec
gs
jno
or
lea
dec
movsl
in
pop
xchg
sqrtps
test
xor
das
sbb
pop
ret
sbb
add
xor
mov
lea
ljmp
loop
mov
loope
jns
pop
xchg
fcmovnb
iret
notb
mov
lods
push
aad
je
pop
enter
out
mov
dec
call
jle
push
fidivrl
adc
imul
rclb
js
jae
cld
pop
pshufw
push
pop
mov
mov
fs
or
lret
jae
or
test
arpl
cmp
cmp
sahf
mov
sbb
outsb
pop
cmc
call
lcall
call
scas
and
rcrb
add
iret
mov
movsl
mov
mov
xchg
pop
and
stos
mov
mov
fsts
sahf
rol
cmp
jae
xchg
fwait
xchg
jno
xlat
fdivl
in
popf
jb
testb
int3
add
imul
in
cmc
scas
and
nop
add
das
sbb
es
jno
lods
out
xchg
pop
pusha
xor
push
cmc
xlat
cmp
dec
pushl
jne
xor
lds
test
inc
mov
stos
out
inc
xor
jp
push
in
dec
mov
mov
les
mov
int3
call
mov
js
orl
and
push
cli
push
ret
or
int
add
mov
ss
push
pop
loop
jmp
or
mov
loope
mov
data16
cmp
shr
adc
nop
loope
push
movsl
jecxz
icebp
ljmp
lret
outsb
or
in
push
inc
jg
aam
sbb
dec
neg
rol
mov
mov
cmp
xchg
les
or
sbb
push
das
leave
pop
out
pushf
xchg
jmp
frstor
aas
xchg
adc
or
loop
sbb
mov
shll
add
sbb
mov
movsl
stos
xchg
ret
dec
pop
fsubrp
mov
mov
std
int
aam
cmp
push
xchg
lret
clc
jmp
mov
sub
popa
pop
mov
pop
icebp
incl
incl
incl
leave
int3
imul
xchg
loop
dec
fnsave
push
xchg
inc
adc
aaa
lret
insb
inc
xor
cmp
xor
mov
movsl
jne
cli
and
loop
fnstsw
mov
push
xor
stc
mov
cwtl
iret
es
daa
mov
mov
xorb
rolb
fnstcw
jle
sub
jg
fcomp
mull
or
mov
mov
fs
pusha
xchg
xchg
pop
push
ja
out
out
xchg
jb
mov
add
mov
adc
fstl
out
jle
filds
xor
pop
pop
xor
sti
mov
shlb
dec
mov
jl
loope
lods
push
adc
mov
and
sbb
jne
inc
in
aas
dec
popf
aaa
inc
lret
scas
in
sub
test
push
xlat
daa
xchg
mov
push
mov
icebp
jns
add
aad
inc
shld
mov
jne
adc
mov
xlat
or
xor
mov
outsb
inc
mov
mov
cmp
js
stos
hlt
jnp
js
jmp
negb
enter
data16
lcall
lock
sarb
push
outsl
iret
mov
clc
test
les
fdivl
sahf
subl
inc
outsb
loopne
gs
call
test
push
jo
jp
cli
jmp
push
mov
repnz
sbb
fisubrl
mov
push
cwtl
pop
xor
les
sbb
and
in
enter
das
fidivrl
inc
xchg
movsl
js
inc
sub
inc
push
ja
lcall
sub
movsl
iret
inc
nop
cmp
xor
int3
call
xchg
int
sbb
icebp
sub
test
cmpsl
inc
ret
aad
mov
aas
adc
enter
addr16
mov
or
push
dec
test
testb
pushf
sti
imul
xchg
mov
pop
fsubrp
jecxz
adc
jmp
out
cmp
int
add
push
inc
cmpsb
and
insl
cmpsb
jno
bound
push
arpl
lret
cmc
push
or
ficoms
ljmp
cmp
int3
pop
inc
adc
cmp
mov
les
dec
mov
push
mov
xchg
mov
inc
jno
ds
rcrb
dec
sahf
jae
inc
xor
test
mov
cmp
adcb
cmp
add
or
mov
test
xchg
divb
xchg
aas
adc
mov
cs
leave
enter
stos
arpl
dec
jmp
or
int3
add
add
add
lea
mov
cmp
push
pop
out
mov
ljmp
pop
mov
xchg
dec
and
mov
or
lods
sbb
and
sub
and
fs
xlat
cmp
pop
fs
and
push
mov
pop
cltd
fwait
pusha
fisubs
sub
push
std
add
jae
rcrl
mov
jnp
mov
cmp
xor
or
add
add
mov
push
xlat
inc
testl
ret
jo
scas
in
pop
scas
xchg
sbb
pop
pushf
mov
addr16
push
ret
xor
xor
push
cmpsl
sbb
nop
xor
imul
cmpsl
pop
mov
in
in
add
pop
or
popl
and
jge
divb
inc
sub
push
movsl
sbb
and
scas
bound
ret
adc
loope
lock
add
aas
or
pushf
imul
adc
sbb
in
sub
sub
sahf
arpl
adc
push
push
loopne
enter
sub
mov
rcrl
mov
pop
xor
pop
lea
and
mov
mov
dec
pshufw
push
aam
daa
bound
xchg
xchg
inc
mov
mov
in
loop
mov
popf
aad
or
outsb
fsub
mov
mov
mov
add
popf
mov
cltd
rol
popf
int
mov
sub
loopne
sbb
mov
mov
pop
aaa
add
jns
lahf
push
movb
ds
mov
adc
push
sbb
fwait
popf
mov
mov
mov
xor
lret
das
adc
fcmove
push
push
jp
jne
pop
test
add
outsl
jp
cwtl
inc
cwtl
push
xor
stos
dec
xor
pop
js
or
push
int3
add
add
fnstenv
lods
repz
jmp
insl
test
es
sahf
pusha
repz
add
stos
sbb
outsl
in
adc
xor
push
add
popf
mov
subl
inc
push
sbb
popa
ret
mov
and
test
mov
repz
imul
xchg
loope
dec
mov
call
adcb
adcl
add
add
add
add
push
cmp
add
add
int3
arpl
cmp
add
mov
addl
mov
sub
add
and
inc
or
cmp
add
add
pushl
mov
inc
and
int3
int3
int3
jae
jne
add
int3
dec
int3
nop
nop
adc
add
add
and
add
mov
cs
push
mov
add
add
add
sub
add
add
add
push
dec
adc
add
cmp
sub
add
dec
das
xor
add
inc
mov
add
add
add
int3
jae
jg
int3
add
add
dec
insl
inc
push
lcall
jle
xor
inc
jno
jb
add
nop
incl
nop
nop
int3
int3
nop
nop
nop
bound
pop
push
push
jnp
jo
add
jns
jp
int3
mov
call
sbb
add
add
int3
dec
sbb
arpl
add
mov
jae
addl
cmpl
int3
int3
dec
jge
add
int3
nop
nop
nop
nop
nop
add
mov
decl
push
push
push
call
add
int3
cmp
mov
add
mov
add
int3
nop
and
and
pushl
push
jae
xchg
sub
int3
int3
das
insb
sbb
add
bound
lcall
nop
add
int3
nop
nop
lea
daa
dec
jae
adc
xor
es
jo
nop
add
add
add
sub
cmp
add
sbb
push
sub
insl
xor
sbbl
pop
nop
nop
imul
jge
add
inc
call
add
add
popa
pop
int3
int3
cmp
sub
nop
pop
dec
adc
pop
nop
int3
add
dec
int3
int3
int3
popa
sbb
and
adc
and
add
add
int3
incl
add
pop
inc
nop
nop
int3
int3
sbbb
xor
dec
inc
nop
nop
int3
int3
add
add
incl
add
and
andl
add
pushl
pop
int3
int3
je
add
add
int3
int3
jge
ss
test
jns
jbe
inc
nop
nop
add
int3
int3
lea
jp
mov
add
int3
int3
xor
dec
xor
push
xor
add
nop
jmp
incl
lcall
jb
sub
cmp
outsl
incl
add
add
cmp
lea
aas
inc
xor
and
adc
add
add
add
xor
nop
add
nop
nop
nop
nop
add
pop
inc
bound
int3
int3
int3
int3
push
mov
sub
push
movw
movl
movl
mov
mov
mov
mov
movzwl
movzwl
lea
mov
mov
mov
mov
mov
movzwl
sub
movzwl
sub
mov
lea
add
sub
inc
mov
add
mov
movl
movzbl
mov
lea
mov
mov
mov
mov
movzwl
mov
imul
cmp
je
movzwl
sub
sub
mov
jmp
movzwl
sub
movzbl
sub
mov
movzwl
sub
movzbl
sub
mov
movl
jmp
mov
sub
mov
cmpl
jle
movzwl
movzwl
imul
cmp
je
movzwl
sub
movzwl
sub
mov
jmp
mov
sub
movzbl
sub
mov
movzwl
cmp
jne
mov
imul
cmp
jbe
movzwl
movzwl
lea
sub
mov
movzwl
movzwl
lea
sub
mov
movzwl
movzwl
cmp
jne
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
movzwl
sub
movzwl
sub
mov
jmp
movzwl
movzwl
lea
mov
jmp
movzwl
movzbl
lea
mov
jmp
movzwl
mov
sub
movzwl
sub
mov
movzwl
mov
lea
cmp
jb
movzwl
mov
lea
movzwl
sub
mov
jmp
mov
sub
mov
mov
sub
movzbl
sub
mov
movzwl
mov
lea
movzwl
cmp
jne
mov
sub
movzbl
sub
mov
call
movzwl
mov
imul
cmp
je
movzwl
sub
sub
mov
jmp
movzwl
sub
movzbl
sub
mov
movzwl
mov
lea
movzwl
sub
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
push
movw
movl
mov
sub
mov
sbb
movzbl
cltd
sub
sbb
mov
movl
jmp
mov
add
mov
cmpl
jge
movzwl
cltd
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
mov
sub
mov
sbb
movzwl
cltd
add
adc
mov
movzwl
cmp
jne
jmp
movzwl
movzwl
lea
cmp
jl
movzwl
movzwl
lea
cltd
sub
sbb
mov
mov
movzwl
movzwl
cmp
jne
jmp
movzwl
add
cltd
mov
mov
add
adc
movzwl
cltd
sub
sbb
mov
jmp
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
add
mov
adc
movzbl
cltd
add
adc
mov
push
mov
push
push
mov
push
mov
push
call
add
movzwl
sub
mov
movzbl
sub
mov
jmp
movzwl
cltd
mov
mov
add
adc
add
adc
movzwl
cltd
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
sbb
movzbl
cltd
sub
sbb
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
movzwl
sub
sub
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
movzbl
sub
sub
mov
jmp
push
mov
push
call
add
movzwl
cltd
mov
mov
sub
sbb
movzwl
cltd
sub
sbb
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movb
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movzwl
cmp
jne
jmp
movzwl
mov
lea
mov
cmpl
jne
jmp
mov
mov
lea
cmp
jb
mov
mov
lea
movzwl
sub
mov
movzwl
movzwl
cmp
jne
jmp
movzwl
mov
lea
sub
mov
jmp
mov
sub
mov
mov
mov
lea
mov
movl
mov
sub
movzwl
sub
mov
push
mov
push
call
test
jne
movzwl
sub
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
movzwl
mov
lea
mov
mov
add
mov
mov
movzbl
test
jne
movzwl
mov
lea
sub
mov
mov
add
mov
movb
jmp
movb
movzbl
mov
lea
mov
mov
sub
mov
mov
add
mov
mov
movzwl
mov
sub
movzwl
sub
mov
jmp
mov
sub
sub
mov
mov
imul
mov
sub
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movw
movzwl
imul
cmp
jle
movzwl
mov
lea
movzwl
sub
mov
movzwl
sub
movzbl
sub
mov
movl
jmp
mov
sub
mov
cmpl
jle
movzwl
imul
cmp
je
mov
sub
movzwl
sub
mov
jmp
movzwl
sub
movzbl
sub
mov
movzwl
movzwl
cmp
jne
movzwl
imul
cmp
jle
movzwl
mov
lea
movzwl
sub
mov
movzwl
mov
lea
movzwl
sub
mov
movzwl
movzwl
cmp
jne
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
sub
movzwl
sub
mov
jmp
movzwl
mov
lea
mov
jmp
movzwl
movzbl
lea
mov
jmp
movzwl
movzwl
sub
movzwl
sub
mov
movzwl
mov
lea
cmp
jb
movzwl
mov
lea
movzwl
sub
mov
jmp
movzwl
sub
movzbl
sub
mov
push
call
add
mov
mov
imul
mov
sub
mov
push
push
mov
push
call
add
mov
mov
lea
movzwl
sub
mov
movzwl
push
mov
push
call
add
mov
movzwl
sub
movzwl
sub
mov
mov
push
call
add
mov
mov
movzwl
sub
movzwl
sub
mov
xor
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
push
mov
push
or
testb
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
ret
push
push
call
orl
mov
testb
je
andl
mov
call
ret
push
call
pop
andl
push
call
pop
mov
orl
call
jmp
mov
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
imul
test
mov
mov
mov
jne
xor
jmp
push
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
mov
sub
xor
divl
jmp
orl
jmp
push
push
call
pushl
call
pop
andl
pushl
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
mov
mov
test
push
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
test
pop
jns
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
xor
add
cmp
setne
dec
mov
jmp
call
movl
or
pop
pop
ret
push
push
call
pushl
call
pop
andl
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
push
call
call
mov
test
jne
call
movl
xor
jmp
andl
push
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
pushl
pushl
call
add
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
cmpl
je
call
pushl
call
push
call
pop
pop
ret
cmpl
je
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
cmp
pop
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
test
pop
lea
movb
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
push
call
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
jns
and
mov
jmp
orl
or
pop
mov
andl
mov
pop
mov
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
pop
neg
sbb
pop
ret
xor
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
mov
cmp
je
testb
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
incl
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
pushl
push
call
pop
pop
ret
orl
call
cmpl
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
pushl
call
pop
mov
pushl
call
pop
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
call
pop
ret
mov
ret
mov
test
push
push
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
test
pop
pop
mov
jne
push
push
mov
call
test
pop
pop
mov
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
and
sar
mov
lea
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
xor
pop
ret
call
cmpb
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
sub
andl
cmpl
push
mov
push
push
mov
je
mov
mov
and
sar
lea
lea
mov
shl
add
mov
test
jne
test
je
cmpb
je
mov
mov
decl
mov
mov
lea
movl
movb
push
lea
push
pushl
mov
push
pushl
call
test
jne
call
push
pop
cmp
jne
call
movl
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
testb
je
test
je
cmpb
jne
mov
lea
orb
jmp
mov
lea
andb
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
mov
jmp
incl
push
lea
push
push
lea
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
testb
jne
lea
orb
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
cmp
xor
inc
add
cmp
and
inc
add
cmp
adc
inc
add
cmp
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
cmp
cmp
jo
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
cmp
and
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
cmp
movsb
cmp
lods
cmp
mov
inc
add
inc
add
cmp
fistpll
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
cmp
add
inc
add
cmp
and
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
call
add
ret
call
add
ret
push
call
mov
mov
xor
cmp
je
inc
cmp
jb
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
mov
pop
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
push
mov
push
call
cmp
pop
jne
call
movl
or
pop
ret
push
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
lea
andb
mov
pop
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
sub
push
push
push
mov
mov
xor
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
mov
and
lea
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
cmp
jb
cmpl
jne
mov
jmp
test
js
call
movl
or
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
jmp
cmpb
jne
incl
inc
cmp
jb
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
push
call
pushl
call
pop
andl
pushl
call
pop
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
xor
inc
jmp
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
je
xor
jmp
movl
or
jmp
test
jne
or
inc
mov
cmp
jne
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
mov
cmp
je
testb
jne
cmp
jle
cmp
jge
lea
push
call
pop
test
je
mov
pushl
push
call
pop
pop
mov
mov
testb
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
mov
cmp
je
push
add
push
call
pop
pop
test
mov
jne
pushl
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
orl
orl
call
mov
call
ret
mov
push
call
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
pop
ret
push
push
call
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
movl
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
call
movl
push
lea
push
call
add
xor
jmp
mov
jmp
push
call
pop
orl
call
xor
inc
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
push
push
call
mov
mov
push
mov
call
pop
pop
mov
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
jne
pushl
call
push
call
mov
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
jb
mov
cmp
je
call
jmp
push
mov
call
pop
push
mov
call
pop
orl
call
cmp
jne
mov
pushl
call
xor
xor
inc
cmp
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
mov
push
xor
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
jmp
push
call
mov
inc
cmpw
pop
je
lea
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
lea
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
push
mov
mov
mov
xor
cmp
mov
movl
mov
je
mov
addl
mov
push
pop
cmpw
jne
mov
xor
test
sete
push
add
mov
pop
jmp
incl
test
je
mov
mov
add
mov
add
test
je
test
jne
cmp
je
cmp
jne
test
je
andw
andl
xor
cmp
je
mov
cmp
je
cmp
jne
add
jmp
sub
jmp
cmp
je
cmp
je
mov
addl
mov
mov
incl
xor
inc
xor
jmp
add
inc
cmpw
je
cmpw
jne
test
jne
cmpl
je
lea
cmpw
jne
mov
jmp
xor
xor
cmp
push
sete
pop
mov
shr
test
je
test
je
movw
add
mov
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
mov
add
mov
incl
add
jmp
test
je
andw
add
mov
incl
jmp
mov
cmp
pop
pop
pop
je
mov
mov
incl
pop
ret
push
mov
push
push
push
push
push
push
mov
xor
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
lea
push
lea
push
push
push
xor
call
mov
mov
lea
shl
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
push
lea
push
call
mov
add
dec
mov
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
cmp
pop
jne
xor
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
mov
je
push
push
push
push
push
push
call
cmp
je
push
add
call
lea
cmp
pop
jne
inc
lea
push
mov
call
cmp
pop
mov
je
cmp
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
push
call
test
je
push
call
push
lea
call
cmp
pop
pop
lea
jne
push
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
pushl
call
pop
push
call
jmp
mov
push
xor
cmp
push
mov
jne
call
test
je
movl
jmp
call
cmp
jne
movl
jmp
xor
jmp
cmp
jne
call
jmp
cmp
jne
push
push
call
mov
push
push
push
mov
push
push
push
call
mov
cmp
je
lea
push
call
mov
test
pop
je
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
jmp
mov
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
ret
mov
cmp
je
push
call
orl
jmp
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
mov
mov
mov
cmp
je
decl
jne
cmp
je
push
call
pop
orl
call
push
call
pop
movl
mov
mov
cmp
je
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
mov
decl
cmp
je
cmp
je
cmp
jne
push
call
pop
orl
call
push
call
pop
call
ret
xor
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
cmp
je
mov
test
jne
push
call
push
call
push
pushl
call
ret
jmp
jmp
call
test
jne
call
xor
ret
push
push
push
call
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
jne
mov
mov
mov
mov
mov
movl
mov
push
call
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
mov
call
orl
mov
mov
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
lea
lea
testb
je
mov
ret
call
movl
call
andl
or
ret
push
push
call
mov
mov
sar
mov
and
lea
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
push
lea
push
call
pop
pop
xor
jmp
incl
orl
call
mov
sar
and
lea
mov
lea
push
call
xor
inc
call
ret
mov
push
call
pop
ret
mov
mov
and
sar
mov
lea
lea
push
call
ret
push
push
call
orl
push
call
pop
test
je
push
call
pop
xor
mov
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
testb
jne
xor
cmp
jne
push
call
pop
movl
cmp
jne
push
lea
push
call
pop
pop
test
jne
push
lea
push
call
pop
pop
or
jmp
incl
mov
call
lea
push
call
testb
je
push
call
add
jmp
mov
mov
push
call
pop
ret
orl
mov
sub
cltd
push
pop
idiv
mov
shl
add
mov
cmpl
jne
inc
jmp
mov
push
call
pop
mov
test
je
lea
mov
addl
mov
add
cmp
jae
movb
orl
movb
andl
add
mov
jmp
shl
mov
push
call
pop
test
jne
orl
orl
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
testb
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
mov
cmp
jne
call
movl
call
andl
or
jmp
andl
pushl
push
call
pop
pop
or
mov
mov
sar
mov
and
lea
mov
mov
orl
call
mov
call
ret
mov
push
call
pop
ret
push
lea
sub
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
mov
push
mov
and
sar
push
lea
lea
mov
shl
testb
je
push
push
push
pushl
call
add
mov
add
testb
je
cmp
mov
mov
mov
jbe
mov
sub
lea
mov
cmp
jae
mov
incl
mov
inc
cmp
jne
incl
movb
inc
incl
mov
inc
incl
cmpl
jl
mov
lea
sub
push
lea
push
push
lea
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
xor
cmp
jb
jmp
call
mov
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
movl
call
mov
jmp
push
lea
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
jne
xor
jmp
call
movl
call
mov
or
jmp
sub
pop
pop
mov
pop
call
add
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
push
call
pop
push
call
test
jne
call
mov
jmp
andl
cmpl
je
call
mov
mov
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
mov
cmp
je
testb
je
push
call
pop
cmp
je
incl
cmp
jl
mov
mov
add
push
call
mov
pushl
call
pop
mov
mov
inc
jmp
orl
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
incl
push
call
test
pop
mov
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
push
mov
sub
mov
push
push
xor
test
movl
mov
jns
mov
movb
jmp
movl
movb
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
cmp
je
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
push
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
movl
jmp
movl
mov
test
mov
je
mov
not
and
test
js
xor
inc
test
je
orb
or
cmpl
jne
orl
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
call
movl
call
andl
mov
jmp
mov
push
push
pushl
movl
mov
mov
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
orb
mov
sar
lea
mov
and
lea
mov
pop
pop
mov
shl
mov
andb
mov
jne
test
jns
testb
je
push
push
push
call
add
cmp
mov
jne
call
cmpl
jne
cmpb
jne
testb
je
mov
lea
orb
mov
pop
pop
pop
leave
ret
push
lea
push
push
movb
call
add
test
jne
cmpb
jne
pushl
push
call
cmp
pop
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
jmp
push
push
call
andl
andl
pushl
pushl
pushl
lea
push
lea
push
push
pop
call
add
mov
orl
call
mov
call
ret
cmpl
je
pushl
call
pop
ret
push
push
call
andl
andl
pushl
pushl
pushl
lea
push
lea
push
mov
call
add
mov
orl
call
mov
call
ret
cmpl
je
pushl
call
pop
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
jae
add
jae
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jae
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
je
add
je
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
xchg
je
add
je
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
int3
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jbe
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
jbe
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
mov
cmpw
mov
je
inc
inc
cmpw
jne
push
mov
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
ret
mov
mov
inc
inc
test
jne
sub
sar
dec
ret
mov
ret
mov
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
mov
sub
push
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
xor
cmp
je
mov
decl
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
decl
mov
mov
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
mov
incl
cmp
je
cmp
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
mov
test
jle
push
lea
add
pushl
pushl
call
dec
pop
pop
jne
pop
pop
ret
push
mov
push
push
mov
push
push
push
call
mov
mov
add
test
je
cmp
jne
lea
cmpb
je
push
push
lea
push
call
add
movb
xor
jmp
andl
push
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
add
push
push
call
add
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
xor
jmp
push
mov
push
pushl
call
lea
cmpb
pop
pop
je
push
push
push
pushl
call
add
lea
cmpb
pop
je
push
push
push
pushl
call
add
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
mov
push
xor
inc
test
jne
push
call
test
pop
mov
jne
pop
ret
push
push
push
movb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
add
pushl
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
test
pop
pop
pop
jne
mov
pop
ret
pushl
call
andl
mov
pop
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
mov
jne
xor
jmp
cmpb
jne
cmpb
jne
mov
mov
cmp
movb
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
push
push
push
call
mov
cmp
pop
mov
jae
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
je
lea
push
push
call
test
pop
pop
jne
lea
push
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
call
cmp
pop
jb
mov
push
push
push
movb
call
add
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
mov
push
pushl
call
pop
pop
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
mov
push
lea
push
lea
push
lea
push
pushl
call
add
test
je
push
lea
shl
pushl
lea
push
call
test
pop
pop
jne
mov
jmp
lea
push
call
inc
push
call
test
pop
pop
mov
je
mov
push
mov
lea
mov
mov
lea
lea
push
push
mov
lea
push
call
mov
mov
lea
push
pushl
call
mov
movzwl
mov
push
lea
push
pushl
call
add
cmp
jne
mov
mov
andl
mov
mov
mov
mov
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmp
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
call
add
test
je
xor
andb
inc
cmp
jb
push
lea
push
push
call
add
neg
sbb
inc
jmp
xor
mov
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
call
test
je
mov
pushl
mov
call
mov
mov
mov
mov
pop
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
mov
call
add
leave
ret
push
lea
sub
mov
push
push
mov
xor
cmp
push
mov
mov
je
cmp
je
push
call
pop
jmp
lea
mov
jmp
cmp
movl
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
test
pop
pop
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
test
pop
pop
jne
cmpb
jne
mov
cmp
jg
push
lea
push
push
call
lea
push
movb
call
add
test
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
call
mov
mov
mov
pop
pop
pop
call
add
leave
ret
xor
jmp
push
push
push
lea
push
push
call
mov
add
cmp
je
mov
xor
mov
cmp
je
pushl
lea
push
call
test
pop
pop
je
lea
push
call
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jne
xor
jmp
push
push
call
mov
xor
cmp
jl
cmp
jg
push
call
pop
mov
cmp
jne
xor
mov
call
mov
push
lea
push
call
pop
pop
mov
jmp
push
call
pop
mov
mov
cmp
jne
mov
jmp
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
cmp
jg
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
push
call
pop
mov
call
cmp
jne
cmp
je
push
call
pop
orl
call
mov
jmp
push
call
pop
ret
xor
call
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
push
call
push
call
pop
andl
call
mov
mov
mov
mov
cmp
je
test
je
decl
jne
push
call
pop
mov
mov
mov
mov
incl
orl
call
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
movl
jmp
pushl
lea
push
pushl
push
call
cmp
mov
jne
call
test
je
push
call
pop
mov
mov
jmp
mov
sar
mov
and
lea
lea
andb
mov
mov
pop
pop
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
pushl
push
call
add
mov
mov
jmp
call
movl
call
andl
orl
orl
orl
call
mov
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
mov
call
ret
push
mov
mov
call
mov
push
push
push
xor
push
pushl
mov
call
or
add
cmp
mov
je
push
push
pushl
call
add
cmp
je
push
mov
sub
test
jle
mov
push
lea
push
push
call
push
pushl
call
add
mov
cmp
mov
jge
mov
push
lea
push
pushl
call
add
cmp
je
sub
test
jg
jmp
call
cmpl
jne
call
movl
or
pushl
pushl
call
pop
pop
jmp
jge
push
pushl
pushl
call
pushl
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
call
movl
call
mov
call
mov
push
pushl
pushl
call
add
mov
pop
jmp
mov
mov
pop
pop
call
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
push
call
pop
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
push
push
push
push
mov
xor
xor
pushl
call
pushl
mov
call
add
inc
cmp
pop
pop
lea
jb
inc
push
call
mov
test
pop
je
mov
xor
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
inc
cmp
jb
movb
pop
pop
mov
pop
pop
ret
push
mov
push
push
andl
push
push
push
mov
lea
movl
pushl
call
pushl
mov
call
add
pop
lea
add
decl
pop
mov
jne
inc
push
call
mov
test
pop
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
movb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
mov
movl
mov
pushl
call
pushl
mov
call
addl
pop
pop
mov
add
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
pushl
lea
push
call
andl
lea
mov
add
sub
mov
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
add
incl
cmpl
lea
jb
lea
mov
lea
mov
movl
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
add
pop
pop
mov
pop
leave
ret
cmpl
push
mov
je
push
mov
test
je
mov
mov
incl
inc
decl
cmpl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
je
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
dec
lea
test
je
push
cltd
pop
idiv
mov
add
incl
mov
dec
cmp
jne
mov
add
sub
jmp
mov
pop
pop
leave
ret
push
mov
movsbl
cmp
push
mov
push
mov
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
cltd
push
pop
idiv
mov
test
jne
push
pop
jmp
pushl
mov
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
movb
incl
decl
jmp
pushl
mov
push
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
pop
mov
call
pop
jmp
pushl
push
push
push
push
pushl
call
add
test
jne
xor
jmp
mov
test
jne
push
pop
jmp
lea
jmp
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
cmp
jl
jmp
pushl
mov
push
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
pushl
mov
inc
push
jmp
pushl
mov
push
jmp
cmpl
pushl
push
push
push
je
push
pushl
call
add
test
je
cmpl
je
mov
movb
incl
decl
jmp
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
inc
pushl
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
xor
cmp
setne
mov
jmp
pushl
mov
cltd
push
pop
idiv
mov
jmp
cmpl
pushl
push
push
push
je
push
jmp
push
jmp
pushl
mov
xor
inc
jmp
cmpl
mov
jg
mov
jmp
mov
mov
mov
call
xor
inc
pop
pop
pop
ret
push
push
call
mov
xor
sub
je
dec
mov
je
mov
jmp
mov
jmp
mov
mov
mov
mov
cmpl
je
cmpl
mov
jne
mov
mov
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
lea
push
push
pushl
call
mov
cmp
je
mov
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
xor
cmp
jne
pushl
call
pop
mov
cmp
je
movl
mov
pushl
push
pushl
lea
push
push
mov
pushl
call
dec
cmp
jle
mov
mov
cmpl
jbe
mov
mov
mov
mov
incl
incl
decl
dec
test
jg
cmpl
je
push
call
pop
xor
inc
lea
call
ret
mov
mov
mov
test
je
mov
mov
jmp
mov
cmpl
je
movb
xor
mov
mov
inc
inc
cmp
je
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
push
call
pop
pop
test
jne
add
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
pop
test
jne
add
mov
movb
jmp
add
test
je
mov
jmp
mov
test
je
cmp
je
movzbl
mov
mov
testb
je
cmp
jbe
mov
inc
cmpb
je
mov
mov
incl
mov
decl
jmp
mov
mov
mov
mov
incl
inc
mov
decl
mov
test
jne
jmp
incl
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
jg
mov
jmp
mov
cmp
jne
cmpl
jbe
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
decl
jmp
cmpl
jbe
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
mov
test
jne
mov
mov
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
mov
test
je
pushl
pushl
pushl
pushl
mov
mov
call
add
test
jne
xor
jmp
mov
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
mov
decl
mov
mov
test
jne
jmp
push
mov
push
mov
test
push
mov
jne
mov
mov
mov
test
je
test
push
push
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
jmp
inc
xor
cmpb
jne
inc
inc
push
pushl
mov
pushl
lea
push
lea
call
add
test
je
inc
cmpl
ja
cmpl
jbe
mov
movb
mov
sub
jmp
cmpl
jne
decl
mov
movb
xor
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
call
pushl
pushl
pushl
pushl
pushl
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
mov
ret
mov
ret
mov
ret
push
mov
push
push
test
movzwl
movzwl
mov
mov
jne
or
leave
ret
push
push
lea
push
push
xor
push
inc
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
mov
or
lea
push
push
push
push
call
add
or
mov
mov
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
cmpl
push
je
push
push
call
mov
test
pop
pop
jne
xor
inc
pop
ret
call
test
je
push
call
push
call
pop
pop
jmp
mov
mov
jmp
andl
movl
xor
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
push
xor
cmp
push
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
je
mov
push
pop
mov
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
xor
inc
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
jmp
mov
movzwl
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
pop
or
push
call
pushl
call
pop
pop
mov
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
test
je
cmpl
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
leave
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
jne
cmp
jne
mov
mov
movl
mov
jmp
push
push
call
mov
cmp
pop
pop
je
push
call
mov
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzwl
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
push
call
pushl
call
add
xor
inc
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
push
pop
mov
mov
rep
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
push
call
mov
mov
movl
call
mov
movl
call
cmp
pop
mov
je
cmp
je
cmp
je
mov
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
cmpb
jne
xor
push
push
push
lea
push
push
pushl
mov
push
call
add
test
je
lea
andw
cmpl
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
jg
lea
movw
movzbl
inc
inc
inc
cmp
jle
mov
inc
inc
cmpb
jne
push
lea
push
push
call
mov
add
mov
mov
mov
xor
pushl
call
pop
mov
pop
pop
jmp
mov
pushl
call
push
call
pop
xor
pop
inc
jmp
movl
mov
mov
xor
mov
pop
call
leave
ret
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
add
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
orw
call
mov
mov
ret
push
mov
sub
mov
push
mov
test
mov
je
cmpb
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
pushl
call
test
je
lea
push
call
pop
mov
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
mov
push
push
push
push
xor
pop
mov
lea
cltd
sub
sar
mov
imul
mov
cmp
je
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
xor
add
movb
inc
jmp
xor
jmp
inc
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
mov
test
jne
ret
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
mov
and
push
or
push
call
test
je
lea
call
cmp
je
cmpl
je
push
pushl
call
mov
pop
mov
call
cmp
pop
jne
xor
jmp
xor
inc
mov
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
push
push
lea
push
pushl
call
test
pop
pop
mov
mov
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
test
pop
pop
jne
orw
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
mov
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
pop
xor
test
pop
jne
orb
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orb
cmp
jne
mov
mov
shr
not
and
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
pushl
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
testb
jne
andl
ret
push
xor
cmp
push
jne
cmpl
jne
mov
mov
jmp
movl
mov
cmp
je
lea
cmp
mov
mov
mov
je
cmp
je
push
push
push
call
mov
mov
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
jne
xor
jmp
push
lea
call
mov
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
je
cmpw
jne
push
push
call
pop
pop
jmp
push
push
push
push
call
test
je
push
lea
push
push
pushl
call
test
je
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
mov
mov
sar
and
lea
lea
mov
shl
movzbl
push
mov
and
cmp
jne
mov
lea
andb
jmp
cmpl
jne
mov
lea
orb
neg
sbb
and
add
pop
ret
call
movl
or
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
push
call
pop
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
push
call
xor
mov
push
call
pop
mov
mov
mov
mov
orl
orl
push
call
pop
mov
mov
cmp
je
cmpb
je
mov
cmp
je
push
push
call
pop
pop
test
je
mov
cmp
je
push
call
pop
push
call
inc
push
call
pop
pop
mov
cmp
je
push
push
call
pop
pop
orl
call
push
push
pushl
call
add
mov
movb
add
cmpb
jne
movl
inc
push
call
pop
imul
mov
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
mov
cmp
je
push
call
pop
mov
push
call
cmp
je
xor
inc
mov
mov
imul
mov
cmp
je
mov
imul
add
mov
cmp
je
mov
cmp
je
mov
sub
imul
mov
jmp
mov
mov
lea
push
push
push
pushl
push
push
push
push
mov
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
lea
push
push
push
pushl
push
push
push
push
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
push
lea
push
call
pop
pop
jmp
mov
xor
push
call
pop
ret
cmpb
jne
inc
push
call
pop
imul
add
jmp
cmp
jg
inc
mov
cmp
jge
cmpb
jne
inc
push
call
pop
add
jmp
cmp
jg
inc
mov
cmp
jge
cmp
je
negl
movsbl
mov
cmp
je
push
push
pushl
call
add
mov
movb
jmp
mov
movb
call
ret
push
mov
push
push
push
push
push
mov
mov
mov
push
cltd
pop
idiv
cmpl
jne
test
mov
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
shl
mov
jmp
mov
shl
mov
mov
lea
cltd
lea
mov
idiv
push
pop
inc
push
mov
mov
cltd
idiv
mov
pop
push
sub
mov
dec
mov
cltd
idiv
mov
mov
imul
add
add
lea
cltd
pop
idiv
mov
imul
sub
add
cmp
jg
lea
jmp
add
cmpl
jne
cmpl
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
mov
jmp
mov
mov
cmp
jle
sub
jmp
test
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
jmp
mov
add
imul
add
imul
cmpl
jne
add
mov
imul
add
mov
mov
jmp
add
mov
add
imul
add
mov
jns
add
dec
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
leave
ret
push
xor
cmp
jne
xor
pop
ret
push
xor
push
mov
inc
cmp
jne
cmp
je
cmp
je
cmp
movzwl
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
jmp
movzwl
push
push
push
push
push
movzwl
push
call
movzwl
movzwl
add
cmp
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
movzwl
push
call
add
jmp
movzwl
push
push
push
push
push
jmp
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
add
mov
mov
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
xor
jmp
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
push
call
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
incl
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
call
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
call
mov
orl
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
xor
cmpl
mov
push
jne
push
lea
push
mov
push
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
cmp
pop
je
push
push
push
pushl
movl
pushl
call
mov
add
cmp
je
push
call
cmp
pop
mov
mov
jne
cmp
je
push
call
pop
or
mov
pop
pop
pop
call
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmp
jne
push
push
mov
push
pushl
pushl
call
add
test
je
mov
mov
mov
movzbl
push
call
test
pop
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
xor
jmp
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
jne
pushl
pushl
call
pop
pop
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
mov
mov
inc
test
je
cmp
je
pop
sub
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
jmp
push
push
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
inc
decl
mov
je
cmpl
je
cmp
je
mov
pop
sub
pop
jmp
xor
pop
leave
ret
cmpl
je
movb
inc
neg
push
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
push
mov
push
xor
cmp
mov
mov
push
je
movb
inc
neg
adc
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
mov
push
pushl
pushl
pushl
call
mov
pop
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
cmpl
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
push
call
pop
andl
pushl
call
pop
mov
orl
call
mov
call
ret
push
call
pop
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
cmpl
sbb
neg
ret
mov
and
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
push
push
call
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
xor
inc
cmp
jne
pushl
call
pop
mov
cmp
je
mov
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
mov
cmp
jne
xor
jmp
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
push
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
jmp
pushl
pushl
pushl
pushl
call
lea
call
ret
mov
add
ret
push
mov
push
push
mov
push
mov
cmpl
push
je
cmpl
je
cmp
jbe
xor
inc
cmp
jae
cmp
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
mov
mov
sar
movzbl
testb
je
push
mov
mov
movb
pop
jmp
mov
movb
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
jmp
cmp
jl
cmp
lea
jle
mov
pop
pop
pop
leave
ret
call
mov
cmp
je
call
pushl
push
call
pop
pop
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
call
mov
cmp
je
call
pushl
pushl
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
pop
mov
je
push
push
pushl
push
push
pushl
push
push
call
test
je
lea
push
push
call
test
pop
pop
jge
cmp
je
pushl
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
pushl
call
pop
or
jmp
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
mov
mov
xor
xor
inc
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
pushl
mov
call
pop
mov
mov
cmp
jle
push
mov
call
pop
mov
mov
push
pop
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
jmp
cmp
jg
cmp
jle
push
pop
jmp
lea
push
pushl
call
test
je
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
andl
orl
mov
xor
inc
xor
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
mov
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
test
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
mov
test
jne
lea
push
call
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
cmpl
je
push
call
pop
cmpl
je
pushl
call
pop
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
push
push
lea
push
pushl
push
push
call
add
mov
test
jne
push
call
pop
jmp
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
test
je
push
call
pushl
call
pop
pop
mov
lea
mov
call
call
ret
push
mov
jmp
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
pop
sar
neg
ret
mov
sub
pop
sar
ret
push
mov
push
xor
test
mov
jne
leave
ret
cmpl
je
add
inc
cmpl
jne
push
lea
push
push
call
mov
test
pop
mov
jne
push
call
pop
mov
mov
jmp
push
call
mov
add
add
mov
pop
test
jne
and
mov
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
push
mov
jne
or
jmp
push
mov
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
cmp
je
xor
cmp
mov
sete
cmp
mov
jne
mov
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
je
xor
jmp
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
mov
sub
pushl
mov
call
mov
cmp
pop
jl
cmp
je
lea
pushl
call
cmp
pop
jne
mov
mov
mov
mov
jmp
mov
mov
inc
add
cmp
jne
mov
shl
push
pushl
call
cmp
pop
pop
je
jmp
cmp
jne
cmp
jge
neg
lea
push
pushl
call
cmp
pop
pop
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
pushl
call
inc
inc
push
call
mov
cmp
pop
pop
je
pushl
push
call
mov
sub
pop
add
pop
mov
mov
inc
neg
sbb
not
and
push
push
call
test
jne
orl
push
call
pop
cmp
je
pushl
call
pop
mov
jmp
pushl
call
mov
pop
mov
jmp
push
mov
test
je
push
call
inc
push
call
test
pop
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
pop
jmp
mov
push
push
jmp
movzbl
testb
je
inc
mov
test
je
movzwl
movzbl
shl
or
cmp
jne
lea
jmp
movzwl
cmp
je
inc
movzbw
test
jne
mov
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sahf
loopne
add
in
add
in
add
in
add
in
add
in
add
add
in
add
add
inc
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
outsb
in
add
add
add
cmp
add
sub
add
and
add
push
in
add
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
push
add
pusha
jecxz
add
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
dec
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
add
pushf
loope
add
add
outsb
loope
add
add
push
loope
add
add
xor
add
sbb
add
loopne,pn
add
add
dec
loopne
add
add
push
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
add
add
adc
add
clc
filds
add
filds
add
filds
add
filds
add
add
add
fildl
add
faddl
add
faddl
add
faddl
add
add
dec
faddl
add
add
add
add
test
add
mov
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
outsb
fldl
add
add
fldl
add
fildl
add
fldl
add
fldl
add
add
add
add
push
filds
add
add
sub
add
adc
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fldl
add
fiadds
add
fiadds
add
add
jp
add
data16
add
add
add
add
orb
add
adc
add
pop
add
orb
add
or
add
or
add
jo
fimull
add
add
add
add
add
add
fadds
add
add
add
mov
popl
add
mov
and
push
and
mov
xor
mov
add
sahf
xchg
xlat
pusha
incl
incl
orl
imul
xor
es
call
stos
fwait
lahf
cmp
push
fs
mov
sarb
mov
sbb
mulb
ds
ss
movsl
shll
imul
mov
mov
daa
flds
push
ja
rol
in
outsl
sub
mov
and
data16
rorb
pop
les
js
jecxz
xor
add
add
jo
push
repz
sub
les
mov
mov
mov
aad
sub
sbb
pop
pusha
xchg
sub
hlt
and
xchg
xchg
rcl
jmp
loop
mov
icebp
mov
in
popw
add
jmp
and
cmc
mov
stos
shl
addb
mov
xor
mov
inc
jae
mov
mov
cmp
and
lock
pop
mov
call
xor
mov
add
inc
mov
or
add
cltd
in
stc
test
icebp
jo
fisubl
in
and
pop
adc
cmp
xchg
mov
cli
call
fmul
stos
es
add
sahf
or
mov
dec
jne
test
shlb
jb
hlt
sub
test
sub
cmp
fldcw
fstps
jae
sti
mov
push
dec
mov
dec
jnp
jns
jb
aaa
movsb
pop
cmp
jle
mov
pop
add
ljmp
cmp
mov
adc
pop
mov
repz
xchg
add
dec
shlb
fidivrs
and
fisubrs
stos
adc
push
xor
xchg
and
jl
cmp
pop
xor
mov
mov
adc
insl
lcall
or
out
es
or
pop
lcall
mov
incl
sub
push
xor
movsb
and
lds
cmp
ja
adc
int3
call
adc
ret
inc
or
into
and
cmp
and
lahf
icebp
push
adc
mov
rolb
dec
fst
add
sbb
enter
test
jecxz
cld
cs
mov
mov
pushf
je
adc
cmpsl
sbb
cltd
jbe
adc
add
lds
xchg
sub
jb
hlt
call
in
rcl
push
addl
jecxz
jns
jle
lock
out
dec
fwait
dec
xchg
dec
pop
repz
cli
xlat
aas
stc
fildl
fwait
int3
inc
fstpl
sbb
rol
loopw
cmp
inc
loop
das
adc
or
pop
into
or
pushl
or
fucomi
bound
xchg
lock
add
pop
dec
jae
add
sbb
pop
mov
negl
cmc
push
aam
es
icebp
clc
fdivs
mov
rolb
add
pop
push
push
mov
pushf
loopne
push
dec
mov
icebp
xchg
mov
loop
hlt
xlat
mov
cmpsb
xor
fmul
enter
lahf
in
fcoms
adc
je
daa
insb
or
xchg
call
pop
or
test
and
mov
in
mov
jbe
repnz
push
in
push
stos
lret
repz
xchg
in
rolb
fwait
mov
push
sarb
int
mov
decl
fildll
and
xlat
xchg
mov
or
push
aad
pop
xchg
loop
clc
jmp
sbb
inc
xor
aas
push
xchg
jno
and
loop
pushf
sbb
xchg
test
cmp
mov
mov
movl
mov
mov
pop
jns
int3
dec
add
mov
push
mov
mov
int3
int
mov
sti
cmp
sahf
push
adc
mov
incl
incl
mov
mov
nop
mov
outsl
lods
ss
jecxz
cmp
sbb
and
lods
dec
cs
xchg
sbb
int3
outsl
nop
inc
addb
mov
mov
jg
pop
pop
xchg
mov
lods
mov
pop
mov
int
cmpsl
ficoms
sarl
cmc
mov
mov
testl
test
fcoml
aaa
dec
repz
add
mov
mov
mov
pop
nop
sbbl
ficoml
mov
cwtl
xchg
pop
cs
add
push
xchg
movb
xchg
fsubrs
fstp
sbb
add
xor
lahf
gs
pop
test
shrb
lds
xchg
inc
cmp
outsl
call
popa
cltd
fnstcw
pop
cmp
in
mov
add
add
insl
ror
mov
cltd
fmuls
cmpsl
or
dec
adcl
push
mov
daa
int3
shrb
sub
xchg
pop
incl
incl
push
arpl
stos
rcl
jb
aas
sub
dec
pop
jo
or
imul
add
ja
insl
pop
pop
xor
dec
loopne
inc
push
in
adc
and
call
cs
lret
cmp
ret
into
push
xlat
cmpsb
dec
mov
loope
lret
jne
jle
decl
pop
cltd
lahf
push
shlb
aas
cli
dec
imul
lret
mov
dec
mov
pop
ljmp
mov
dec
inc
add
stos
jge
test
dec
cmp
in
mov
ret
cmpsl
mov
pop
pop
ss
push
jne
aam
xchg
mov
sub
shlb
mov
dec
xor
addr16
mov
mov
or
jmp
pop
jo,pn
test
xchg
inc
enter
push
sub
pop
rolb
or
push
cmp
jnp
mov
pop
lods
mov
lahf
ds
and
stos
dec
loopne
add
cmpsb
and
sbb
lods
pop
shrb
scas
mov
add
outsb
cmp
sbb
dec
xchg
int3
call
xor
cmpsb
adc
and
scas
filds
xlat
negb
jg
scas
mov
or
or
push
and
out
mov
jns
sbb
clc
fwait
outsl
mov
insl
pop
sub
pusha
mov
fistpll
xor
pop
mov
sub
push
mov
incl
incl
addl
jae
fs
insb
mov
rorb
mov
xor
es
inc
inc
lods
cmc
pop
and
or
out
sbb
lret
aas
test
jns
incl
incl
decl
fidivrs
fs
and
fcoml
sbb
ds
sub
add
push
pop
in
sbb
scas
ret
lods
xor
mov
inc
mov
mov
dec
lods
and
dec
sub
fucomip
mov
popa
out
jp
icebp
mov
mov
inc
je
sbb
mov
imul
shr
sahf
dec
cs
int3
call
jae
jbe,pn
sbb
movsl
pop
aam
and
xchg
xchg
pop
pop
nop
pop
ja
mov
cltd
xor
lahf
push
xchg
xor
adc
mov
movsb
cmpsb
in
jno
cmpsb
mov
mov
lret
adc
xchg
and
mov
jp
xchg
and
mov
popf
push
das
out
outsl
fildl
jl
dec
xchg
fisttps
negl
imul
mov
mov
and
mov
pop
cwtl
push
mov
ret
in
pop
dec
mov
and
inc
scas
in
xchg
sub
adc
mov
inc
mov
sub
movsb
aad
jbe
outsb
mov
cmp
adc
mov
repnz
or
mov
les
std
pop
lds
jg
inc
or
xchg
int3
sub
mov
shlb
xorl
call
adc
add
add
jns
mov
push
sbb
sbb
loopne
fsubs
sub
mov
cmp
sarb
cmp
push
pop
mov
cld
jne
mov
sub
mov
jnp
scas
xchg
ret
cmp
push
lock
xor
adc
or
cwtl
inc
pop
bnd
push
gs
lret
daa
test
sbb
adc
stc
aaa
dec
pop
push
push
pop
mov
cmp
lret
adc
out
in
sarl
xchg
mulb
sbb
jnp
ljmp
fisubrs
add
bound
push
jbe
and
dec
push
inc
jle
daa
and
setge
in
stos
push
scas
test
sub
daa
pop
adc
dec
xor
and
pop
inc
cli
in
add
add
and
and
pusha
xor
push
or
sarl
cmpb
cltd
mov
decl
xchg
jne
mov
movsl
inc
inc
xchg
subb
pop
push
dec
ja
fwait
cmp
popa
jo
ljmp
and
imul
push
xor
sub
mov
and
inc
popf
lods
loope
jbe
push
adc
cmp
jbe
inc
push
fimuls
mov
insl
mov
pop
leave
fnstcw
pop
pop
jb
dec
test
mov
imul
lcall
scas
roll
inc
adc
sub
icebp
ret
sar
inc
dec
xchg
mov
add
add
gs
stc
jno
cltd
mov
les
cwtl
lahf
and
xor
addb
into
push
outsb
addl
push
sub
mov
xor
ss
xchg
imul
sub
lcall
inc
aaa
scas
or
movsb
into
fadds
mov
mov
sub
ror
negb
xchg
pop
adc
mov
add
daa
xchg
mov
scas
inc
shl
xor
aas
pop
adc
adc
int3
call
clc
sbb
insb
or
jecxz
push
push
sbb
aas
loope
mov
psubsw
sbb
stos
leave
cmovge
sub
imull
into
mov
jp
loopne
cmc
mov
pop
cmp
mov
pop
fidivs
sub
cmp
xchg
insl
das
xor
roll
push
dec
mov
inc
mov
clc
inc
mov
popf
inc
dec
push
adc
mov
mov
jo
add
in
aad
outsb
mov
negb
inc
push
adc
push
inc
popf
loop
sub
loop
mov
repz
fcomps
sti
fsubrl
fsubrl
add
cmp
addl
pop
imul
inc
cmp
xor
add
xchg
lret
cmpsb
insl
or
xchg
stos
jo
add
add
cltd
lea
sbbl
pop
cmpsl
icebp
gs
loopne
mov
sub
jmp
push
cs
mov
cmp
mov
divb
pusha
rcrl
call
call
push
inc
call
sbb
lea
pop
repnz
mov
inc
xorl
push
addb
cmp
sub
sub
mov
cmpsb
stos
repz
imul
testb
adc
jnp
pop
jbe
mov
repnz
jmp
mov
arpl
insb
xchg
adc
sbb
inc
push
iret
sub
loop
adc
addb
shrl
out
shlb
cmp
add
jnp
jb
insl
sub
call
int3
xchg
add
out
and
or
in
mov
mov
dec
fmul
stc
xor
jge
xchg
jge
mov
loop
movb
enter
inc
cmpsl
jl
cmp
jno
mov
cmp
outsb
mov
dec
inc
and
push
push
test
ret
adc
ss
cmp
mov
inc
mov
sub
dec
outsb
xchg
addr16
hlt
mov
mov
mov
jp
into
test
push
call
enter
pop
adc
aam
jl
decl
and
jae
mov
mull
jns
rcrl
scas
and
xlat
lods
dec
pop
lcall
cmpsb
daa
out
shlb
jmp
add
add
add
nop
outsl
fsubs
fs
clc
ss
ret
add
cmp
repz
popf
fiadds
loope
cmpb
divl
xor
mov
imul
pushf
adc
cli
int3
or
ja
es
leave
xchg
push
notl
jb
and
call
pop
add
push
loop
int
inc
stos
sub
mov
ljmp
sub
inc
incl
incl
dec
jge
movsb
dec
jno
and
aaa
aaa
sbb
in
movsb
jae
rcrl
jne
dec
fidivrl
aam
sbb
fs
imul
mov
mov
jl
in
mov
dec
xchg
enter
inc
xchg
test
mov
cmpb
mov
mov
pusha
cmpb
add
add
imull
pop
jo
sarl
stc
cs
sbb
es
movsb
mov
pop
jbe
scas
call
mov
mov
enter
push
pop
sub
jnp
inc
push
shll
mov
sub
xchg
inc
pop
or
loope
adc
call
jbe
and
jb
mov
incl
incl
popa
cmp
lea
xchg
mov
xchg
imul
lret
add
add
add
les
jno
fnstenv
add
inc
cld
shl
mov
or
pop
lods
cltd
mov
mov
mov
idivb
imul
mov
inc
addl
and
add
ret
repnz
insb
mov
sbb
lock
pop
js
mov
mov
add
daa
int
ficompl
mov
and
outsl
loop
cld
cltd
or
rolb
pop
daa
inc
in
cmpsl
cltd
mov
out
dec
addr16
mov
js
and
push
lock
adc
frstor
dec
repz
out
mov
sub
arpl
cmc
mov
in
pop
lcall
pop
scas
or
dec
pop
xchg
mov
test
add
and
test
lock
lret
adc
or
es
pop
dec
gs
dec
xor
xchg
mov
add
out
out
push
xchg
jb
das
sti
and
fsubs
out
aad
mov
mov
xor
in
sbb
adc
adc
and
push
push
mov
hlt
addr16
call
push
ss
jbe
mov
inc
add
lret
jns
xor
repnz
mov
scas
jae
xchg
int3
pop
xor
or
lret
int
mov
pop
adc
add
add
or
jecxz
jp
push
xor
test
pop
mov
mov
pop
pop
stc
mov
scas
fcoml
loopne
push
mov
int3
add
mov
push
or
mov
push
dec
decl
pop
mov
stc
jo
rcl
insl
mov
mov
mov
mov
cmpsl
inc
sub
call
inc
mov
mov
stos
out
loopne
and
and
fmuls
stc
cmc
pushf
mov
mov
call
mov
inc
fsubrs
mov
mov
nop
xor
push
xor
cwtl
stc
bnd
mov
in
mov
pop
inc
cmp
and
adc
dec
lret
mov
dec
mov
fisubrs
lahf
jp
out
loope
in
jg
pop
or
push
rorl
fldenv
sub
daa
cs
mov
xor
int
pop
hlt
fstps
jg
jns
push
icebp
sahf
pop
das
mov
aam
pop
incl
incl
ss
sbb
lcall
cmpsl
mov
lcall
adc
fmuls
in
cwtl
outsb
dec
je
cmpsb
shll
hlt
outsl
push
leave
rorb
jecxz
arpl
popa
mov
lea
rclb
mov
in
out
pop
jo
pop
push
rorl
pop
leave
mov
movsb
xchg
int3
add
add
add
int3
mov
sub
shlb
cltd
inc
ds
cli
jp
pop
notb
xor
add
ds
and
or
pop
shlb
hlt
mov
movsb
mov
call
mov
lock
mov
and
push
sti
mov
inc
into
aaa
sub
loop
mov
repz
clc
arpl
jp
dec
aaa
sub
dec
or
mov
mov
ss
sub
cmpsl
pop
ljmp
jo
les
fcmovu
adc
pop
test
or
mov
ljmp
repz
ss
cwtl
inc
lods
pop
mov
std
push
aas
jne
mov
mov
mov
lds
jne
xor
cltd
loope
cld
mov
mov
gs
push
xor
stc
stos
out
div
aas
add
xlat
push
aaa
pop
mov
dec
repz
jno
scas
stc
test
inc
aam
mov
hlt
mov
inc
xchg
sub
scas
out
aaa
push
mov
pop
mov
xor
sub
jg
add
adc
xchg
sbb
push
and
lret
outsl
dec
inc
aas
jl
stc
add
xor
repnz
clc
or
inc
inc
push
ret
lret
mov
dec
lds
sbb
out
rol
pop
loope
sub
sti
cmp
push
aam
into
xchg
push
adc
jecxz
xor
or
xlat
xor
xor
aam
xchg
or
mov
cltd
sub
add
add
or
mov
addl
leave
mov
dec
or
mov
pop
aad
dec
dec
mov
out
shrb
mov
lock
and
pop
add
adc
in
in
xchg
stos
push
in
pop
sbb
lods
int3
add
add
cmpsb
lahf
call
pop
int
fcoms
les
cltd
xor
mov
mov
jb
adc
stos
mov
inc
mov
into
in
add
add
add
mov
pop
and
add
mov
aaa
adc
test
add
jmp
or
into
or
subb
decl
cwtl
dec
std
add
dec
js
cld
xor
js
xor
in
std
push
lods
std
cld
in
add
and
ret
ja
loopne
add
xchg
push
mov
mov
mov
push
sahf
dec
cmpsb
pop
inc
lret
cli
in
mov
es
mov
int3
pop
dec
adc
idiv
push
or
mov
adc
aas
aas
outsl
fmuls
push
lahf
or
push
lahf
gs
mov
mov
out
adc
jo
mov
enter
add
mov
adc
cmp
ficompl
mov
jmp
mov
pop
aam
inc
jp
inc
sti
fsts
pop
dec
int
cmp
jp
and
call
or
enter
add
add
sbb
and
popa
xor
test
xorb
fists
push
inc
xlat
mov
mov
cmp
ja
scas
adc
cltd
daa
xchg
les
push
jge
cmp
pop
xchg
push
inc
xchg
paddq
cmp
mov
xor
sti
idivb
adc
sti
mov
loope
push
cmp
mov
loopne
cmp
add
add
inc
mov
ja
cmp
xchg
add
pop
rolb
inc
pop
or
mov
out
in
mov
mov
inc
lahf
sbb
jmp
lods
movsl
stos
sbb
subl
sbb
jp
dec
loopne
out
shl
sbb
loopne
adc
adc
cmc
cmpsb
repz
mov
ret
lods
cwtl
push
jno
mov
shr
test
xchg
add
push
das
inc
iret
mov
andl
push
push
int3
add
mov
mov
sahf
or
xchg
xlat
dec
lds
aad
sbbl
add
or
fisttpll
pop
cmpsb
inc
cmpsl
push
push
cmp
cmp
enter
orl
jecxz
dec
xor
imul
popf
cmpsl
out
in
mov
dec
or
fnstenv
sbb
test
pop
insl
mov
ret
adc
mov
fisttpll
or
ja
and
in
mov
lods
cmpsl
lock
jns
imull
xchg
push
jmp
xchg
fcomps
mov
mov
mov
xor
and
subb
sbb
cld
dec
push
in
js
dec
push
cs
dec
mov
repz
fldt
add
pop
push
mov
push
lods
push
jg
mov
into
nop
pop
shrl
popf
inc
cmp
aad
pop
pusha
xor
xor
fucomi
out
xchg
loope
repz
ljmp
fsts
cmp
insl
lds
jno
sti
dec
int3
add
add
xchg
addl
mov
mov
aas
lds
inc
inc
or
adc
decl
sbb
cmp
fiadds
cmc
pop
cmp
lock
stc
dec
cmp
mov
call
pop
push
sub
dec
jns
je
pop
scas
cmpsl
shll
sbb
loope
xlat
fwait
sar
popa
out
hlt
ds
call
ret
mov
mov
adc
mov
mov
repnz
adc
ja
mov
mov
mov
mov
test
cmp
jo
in
call
movsb
rcrb
mov
dec
shrl
bound
cmpsl
lret
adc
inc
pop
jns
shlb
aaa
jo
push
dec
test
cmp
popa
cmp
rorb
xchg
mov
mov
mov
addr16
inc
or
shrb
dec
mov
sbb
fisubl
dec
int
mov
lock
rcll
cs
incl
incl
incl
jg
test
loope
push
imulb
lret
popa
jb
jae
ljmp
push
int3
inc
lret
cli
fisubrs
cli
shll
jns
rcrl
jb
cs
ret
sbb
xor
addr16
arpl
ret
je
fsin
mov
out
or
imul
add
rcll
jecxz
xchg
xor
add
add
add
repz
adcb
aad
imull
lahf
push
ret
jo
out
es
jp
incl
incl
incl
xor
xchg
dec
sbb
outsb
test
in
sti
jns
js
xchg
addl
pop
push
scas
fmull
pop
push
and
bound
inc
jecxz
dec
push
inc
inc
fsubrs
mov
adc
into
mov
mov
je
jge
cwtl
rcr
js
dec
insb
xor
mov
sbb
mov
icebp
iret
stc
sbb
stos
mov
int3
call
imul
mov
lcall
lds
cmp
or
cmpsl
lea
mov
xor
bswap
testl
cmc
push
jnp
push
mov
cmp
sbb
dec
mov
cmp
hlt
pop
adc
test
movsb
pop
add
xlat
mov
add
add
dec
mov
adc
out
outsl
addr16
imul
mov
adc
sbb
xlat
sbb
decl
negb
xchg
std
lret
and
inc
mov
sbb
mov
push
mov
jle
dec
cltd
test
rorb
push
int
aad
stc
fwait
js
add
xchg
mov
push
outsl
arpl
adc
xor
dec
test
mov
mov
cmp
or
stos
mov
dec
jg
jg
movsl
bound
inc
andb
bound
sbb
dec
mov
inc
bound
cmp
fwait
xchg
add
mov
add
sbb
mov
ja
mov
lods
test
lea
hlt
sub
hlt
and
or
or
inc
xchg
push
loope
mov
inc
jg
cmovs
ds
popf
call
sti
loopne
xor
mov
imul
mull
aad
lods
clc
fdivs
sbb
in
mov
and
movsl
fsubrs
pop
xchg
outsb
fwait
mov
add
mov
mov
adc
add
add
add
xchg
jo
outsl
jbe
and
push
xor
pushf
jb
jae
mov
pop
cmpsb
sub
xchg
ss
inc
fsubrl
pop
adc
pop
add
out
pop
shr
xlat
add
sbb
jo
mov
push
fnstsw
hlt
movsb
out
daa
cli
std
es
in
fwait
push
push
sub
push
aas
call
cmpsl
mov
je
ljmp
xchg
lods
sbb
dec
imul
cs
xchg
add
jle
mov
mov
adc
int3
call
xor
xor
cmp
test
adc
dec
icebp
call
mov
mov
int3
loop
adc
mov
test
imulb
sbb
push
lcall
int
push
out
ljmp
sub
es
ret
add
rorb
xchg
jl
icebp
icebp
stc
adc
adcl
pusha
fiadds
jmp
sbb
data16
cs
out
std
dec
lock
cmp
lret
test
aas
insb
or
in
pop
rcr
fimull
mov
add
add
add
nop
push
loope
iret
mov
add
pop
or
mov
jmp
pop
sbb
ja
add
repnz
push
cwtl
mov
aad
add
push
sbb
les
rorl
fcos
sub
mov
jb
or
shll
cmpsl
xlat
adc
xchg
out
test
fs
jge
adc
add
ljmp
arpl
push
pop
inc
nop
xor
stc
out
test
mov
jne
rcr
arpl
pop
sarl
in
push
xchg
fsub
lret
repz
js
jl
fstpl
arpl
mov
jbe
int3
add
repz
ror
aam
dec
inc
out
adc
push
fnstenv
dec
mov
data16
ds
sub
mov
pushf
pop
and
arpl
mov
pop
cmp
pop
jnp
jecxz
out
pop
lcall
cmp
filds
fiaddl
sarl
mov
mov
mov
addr16
insl
adc
xlat
lock
cmc
jns
ret
ret
jne
enter
std
rcll
mov
jnp
push
adc
stos
sbb
dec
dec
add
push
push
repz
add
push
imul
add
mov
jne
lock
adc
mov
xlat
js
data16
jl
jno
adc
add
pop
mov
popf
add
imul
jp
jno
dec
jecxz
stos
rcrb
xchg
bound
out
aam
das
cmc
fs
sub
push
aas
xchg
sub
fcmove
jmp
fsubrs
xchg
daa
out
fsubl
mov
subb
in
add
iret
xchg
outsl
call
cltd
inc
mov
add
shll
jne
mov
mov
cmp
pop
mov
mov
jmp
jns
in
cmp
arpl
inc
call
xchg
add
and
inc
adc
ret
repz
incb
into
pop
push
sub
in
decb
mov
call
ja
fs
push
sub
call
shrl
pop
mov
test
into
sub
add
inc
and
mov
mov
push
std
adcb
dec
add
aam
stos
dec
push
pop
mov
dec
outsb
icebp
in
and
adc
das
adc
leave
push
call
ret
cmpsb
and
ljmp
dec
lea
cmpl
out
and
fimuls
xchg
mov
jae
jnp
in
fwait
jmp
xchg
push
lods
pop
repz
jno
movsb
das
lea
decl
loop
sbb
addr16
xchg
inc
imul
subb
mov
mov
out
in
sbb
add
pushf
dec
shlb
mov
mov
mov
and
scas
adc
jl
lods
es
mov
xor
lahf
jns
cwtl
shr
mov
movsb
xchg
add
int3
jno
fmul
pop
pop
in
in
mov
popa
sub
js
fidivl
mov
divb
js
pop
hlt
pop
imul
mov
lret
xchg
add
lfs
arpl
jne
ret
dec
push
imul
notl
add
cli
repz
inc
xchg
sbb
jne
repz
test
mov
ret
outsb
mov
jmp
bound
nop
jno
dec
in
in
rcrb
outsl
and
push
repnz
out
xchg
pushf
mov
push
sbb
sub
fstps
pusha
popf
jmp
mov
aad
nop
repz
call
push
mov
sub
test
shr
gs
das
push
into
and
icebp
nop
cmpsb
movsb
adc
xchg
ss
mov
add
mov
push
jne
rcll
sbb
xor
cmp
pop
inc
scas
pop
les
ficomps
lret
cmp
adc
jnp
sub
cmp
mov
cmp
dec
hlt
push
mov
dec
es
adc
add
mov
mov
mov
insl
cs
adc
ret
hlt
inc
sub
mov
and
sbb
add
cmp
int3
call
icebp
outsb
inc
xchg
cli
jle
inc
icebp
dec
jmp
jecxz
xor
sbb
or
rorb
sbb
mov
fwait
pop
push
mov
push
loopne
sub
flds
dec
jnp,pn
inc
mov
scas
test
push
mov
mov
push
push
mov
mov
vpaddw
cmpb
xor
xchg
mov
and
sti
scas
sub
pop
testb
adc
xchg
dec
xor
pop
pop
mov
sbb
lretw
jno
adc
push
adc
negl
push
or
andb
lods
cld
xchg
or
nop
mov
mov
aam
jg
test
mov
icebp
in
push
push
imul
xor
rol
push
jo
lret
lods
xchg
je
insb
and
inc
outsb
push
add
sbb
punpckldq
add
xchg
ja
push
mov
aam
jne
dec
xor
pop
sbb
jp
sub
or
scas
push
subl
sbb
int3
call
add
dec
jb
stc
fwait
or
and
mov
mov
nop
arpl
popf
xor
xor
ljmp
std
jle
sti
and
xchg
mov
insl
or
add
fcompl
fbstp
dec
fiadds
lods
xchg
and
jno
call
leave
mov
lret
rol
sti
xor
lret
add
in
shll
push
jl
std
mov
add
add
jns
in
cmp
xchg
outsb
dec
fadd
dec
out
mov
fs
mov
or
ja
mov
lock
cltd
faddp
sarb
mov
and
add
mov
add
inc
stc
hlt
add
cmp
cwtl
dec
cmpsl
loope
lods
jge
sahf
fmull
lret
bswap
movsb
xchg
xchg
pop
loope
push
lds
add
ljmp
xchg
scas
cs
scas
cli
addr16
cwtl
mov
ljmp
xchg
mov
mov
dec
mov
dec
jne
outsl
jae
icebp
je
or
lret
sahf
jecxz
cmp
dec
loop
rorl
mov
repz
loop
jmp
es
sub
jns
mov
lea
cmc
push
incl
incl
cmp
divb
bound
add
into
call
call
das
or
out
mov
add
push
std
aam
xchg
mov
scas
inc
mov
sbb
fcomps
mov
mov
add
iret
push
in
adc
mov
movsb
fld1
int3
call
pop
ret
inc
cmc
and
cmpsb
adc
jmp
push
pop
xor
xor
pop
xlat
fstp
hlt
pop
inc
loopne
and
mov
xchg
lock
sahf
adc
int3
out
sarl
cs
push
mov
aas
sub
add
outsb
adc
push
cmp
lock
mov
inc
jbe
dec
scas
mov
sub
sbb
mov
rcll
pop
std
mov
or
daa
add
in
stos
imulb
xchg
add
cmp
xchg
mov
mov
mov
aad
add
sub
mov
aam
incl
incl
mov
xor
jb
mov
mov
testb
int
lds
mov
xor
gs
cwtl
cmpsb
cs
lods
mov
nop
rol
stc
xor
dec
cltd
sub
fcoms
dec
decl
jno
in
hlt
repnz
jmp
loopne
dec
add
xlat
adc
in
in
or
addr16
ds
add
add
fwait
divb
imul
and
xor
dec
ds
mov
or
push
pop
mov
pusha
shl
incl
mov
das
div
lahf
xor
bound
push
mov
es
inc
fdivrp
call
lret
pop
dec
xchg
mov
scas
out
mov
mov
mov
sbb
lods
les
daa
sub
jmp
jb
inc
mov
mov
mov
sbb
jne
cmc
scas
pop
outsb
lock
aas
sub
sahf
or
out
xor
in
ds
aas
xchg
sbb
jmp
shlb
sub
cmp
add
jl
fcomip
and
add
aas
fucom
sbb
sub
das
lea
jp
lahf
jnp
jmp
lds
ret
fistpll
shrl
dec
pushf
and
out
push
je
sti
in
adc
xchg
adc
add
mov
mov
cmpsl
add
repnz
cli
ret
roll
mov
lahf
loopne
pop
rorb
dec
push
inc
mov
pushf
xchg
mov
mov
cmc
ljmp
movsl
dec
incl
incl
ljmp
js
rcrl
in
mov
mov
adc
and
inc
push
xor
jecxz
arpl
mov
cmp
mov
insl
sub
adc
ret
cmp
jge
push
adc
pop
adc
out
lods
mov
je
cmpsb
gs
call
dec
lret
adcl
int3
aam
sub
dec
push
out
sarl
pop
cli
pop
cmpsl
cwtl
adc
adc
mov
sub
mov
test
pushf
test
pop
sti
cmp
push
sub
into
repnz
data16
loope
xorl
cmpb
adc
jmp
lds
sbb
mov
idiv
decl
imul
scas
int3
add
add
dec
mov
adc
je
incl
incl
incl
movsb
cmc
lret
add
sahf
addr16
das
pop
sti
sahf
adc
mov
sbb
lock
lret
cmp
mov
ljmp
push
sub
call
and
cmp
push
inc
pop
jl
in
das
repz
out
and
cltd
scas
orl
call
jno
out
decb
mov
test
gs
lds
fidivrs
push
dec
push
inc
pop
cli
xor
mov
jecxz
pop
jbe
xor
sub
inc
out
cmpsb
add
lahf
cmp
daa
and
cld
jl
add
add
add
lods
inc
push
xor
mov
ja
push
mov
imul
xchg
mov
les
push
in
dec
lock
fisttpll
xchg
xchg
cli
sub
insb
inc
sub
xchg
sbb
aaa
scas
in
jns
and
xor
lods
pop
das
addr16
xor
out
leave
xor
adc
jnp
imul
adc
pusha
xor
repnz
incl
lcall
pop
jge
xchg
enter
push
add
add
loop
mov
lret
and
arpl
sub
adc
fisttpll
xor
cmp
and
clc
adc
sub
and
clc
mov
jmp
and
inc
or
fs
in
cmp
fucomp
int3
call
orb
mov
outsb
test
sub
mov
cmpsb
fidivl
stc
xchg
adc
dec
dec
fcmovnb
mov
jne
leave
pop
pop
mov
test
rorl
pop
gs
lods
mov
popf
xchg
ja
shll
lahf
inc
dec
clc
mov
popa
pusha
and
pop
mov
jbe
mov
inc
aas
sbb
sub
pop
mov
add
loope,pt
sub
cmp
addr16
pop
xor
and
faddl
add
in
lock
cmp
rcl
cmpl
add
add
pop
repnz
mov
add
push
aas
or
sub
jge
jmp
add
or
jl
pop
add
mov
mov
mov
xchg
sub
movsl
js
mov
push
xchg
sbb
or
mov
push
int
out
ss
iret
push
loope
sbb
sar
popa
fstps
jge
sarl
push
xor
mov
mov
mov
xchg
xor
inc
push
and
push
loopne
dec
sub
pop
pop
xlat
push
outsb
leave
out
cltd
pushl
mov
mov
popa
pop
adc
inc
insb
cwtl
xor
cmp
addr16
insl
pusha
cmp
and
fidivs
inc
push
pop
stos
xor
cwtl
sub
lods
bound
fs
mov
ss
aad
add
adcb
jne
inc
add
xchg
cmp
adc
xchg
dec
insb
scas
ljmp
and
adc
sub
loope
stos
stos
cmc
and
cmp
inc
sub
in
stos
mov
pushf
push
sub
xor
mov
sbb
xchg
mov
push
hlt
mov
xor
repz
incl
rep
std
bound
adc
push
push
inc
xor
or
sub
jnp
jl
jmp
pop
push
mov
shrl
bound
mov
push
movsl
gs
xchg
xchg
cmpsb
ja
jns
nop
and
mov
cmp
xor
add
fdivs
mov
pop
sub
mov
fidivl
inc
sbb
adc
mov
inc
xor
xchg
adc
adc
movsl
ficompl
inc
enter
mov
mov
mov
and
push
jge
add
stos
jl
lods
or
add
cltd
aam
movl
in
in
and
mov
dec
and
int
lock
out
popf
incl
jmp
fisubrl
adc
in
out
cltd
lods
int3
or
jmp
mov
int
add
in
mov
rclb
add
movsb
iret
enter
or
out
insl
insl
dec
in
aas
bound
in
out
pusha
stos
ds
lods
fildl
sbb
pusha
outsl
movsb
out
xchg
adc
add
stos
and
pop
das
or
jbe
or
dec
push
jmp
push
divb
gs
lret
add
bound
test
and
arpl
icebp
adc
or
ljmp
movsb
loope
icebp
add
scas
jl
arpl
cmp
fldcw
pop
pop
mov
cmp
jb
cs
cmp
dec
addr16
test
test
dec
cwtl
dec
xchg
sahf
idivl
aam
add
sub
scas
iret
jl
out
test
scas
popf
lock
fnstenv
pop
aas
into
and
addb
mov
fimull
insb
mov
and
jcxz
imull
sbb
mov
les
std
and
xor
add
jae
data16
incb
dec
jnp
shrl
pop
or
mov
mov
outsl
imul
outsb
addb
les
sub
xchg
notb
dec
jle
cltd
add
adc
pop
mov
out
test
xchg
in
imul
sub
cwtl
mov
flds
sbb
push
mov
movb
pop
pop
dec
pop
rorl
xor
cmc
out
lods
sub
push
loop
sbb
in
xor
jg
cmc
test
sbb
sub
sti
jo
cmpsb
fincstp
cmc
dec
cvtpi2ps
xor
xchg
les
dec
fnstsw
push
xchg
push
mov
mov
cli
inc
imul
xor
or
int3
jg
outsl
aad
or
or
nop
stc
subl
mov
jl
mov
out
push
pop
movsl
mov
and
lcall
mov
jmp
or
inc
call
in
pop
add
pop
add
mulb
sub
xchg
addl
call
addr16
xor
data16
mov
jge
out
xor
push
jecxz
mov
jg
fwait
lods
jo
hlt
lods
push
divb
cmp
in
add
int3
push
mov
mov
xchg
ret
pop
push
pop
insl
adc
add
xor
jmp
jle
movsl
mov
repnz
repz
inc
pop
sahf
xchg
and
dec
adc
dec
bnd
push
js
jg
cmpsb
and
sbb
xor
sahf
out
xchg
lea
aaa
leave
stos
sbb
jae
fimull
mov
ret
cltd
mov
lds
push
xlat
push
pop
dec
xlat
bound
cmpsl
mov
int3
call
xchg
fistl
dec
jno
add
mov
addr16
cs
lcall
aad
push
inc
repz
inc
in
xchg
imul
mov
jge
sbb
cli
or
cmpsb
mov
xor
pop
adc
xchg
aaa
mov
sub
pop
jo
push
popf
sbb
cmp
and
adc
sbb
mov
ss
faddp
mov
shlb
push
insl
inc
push
call
pop
hlt
vpunpckhqdq
xor
ds
adc
mov
mov
mov
mov
adc
in
out
jb
xchg
jmp
and
and
push
jne
imul
bnd
push
stos
add
cmpl
or
mov
call
ljmp
or
fwait
xor
pop
inc
and
fisubrs
push
xchg
int
jecxz
mov
stc
in
cmpsb
sbb
out
cmc
bound
loope
imul
sbb
jnp
push
mov
xor
lcall
inc
insl
add
sbbb
int
mov
ret
xchg
sbb
xchg
fwait
lahf
xchg
ret
mov
call
bound
jae
jnp
aam
mov
mov
mov
cmc
fwait
and
push
adc
pop
add
mov
popa
enter
jp
ja
notb
xchg
xor
push
push
jbe
mov
hlt
fisubs
and
cltd
dec
push
adc
xor
push
and
ret
pop
jge
jne
push
clc
sbb
adc
push
sub
xchg
and
int3
xchg
das
lea
movaps
lock
int
dec
mov
negl
mov
sub
jmp
inc
sbb
divl
mov
int3
dec
xchg
rcr
cwtl
xor
mov
cmc
into
mov
mov
popa
add
iret
ljmp
push
push
mov
dec
test
incl
incl
inc
ret
clc
loopne
push
cwtl
inc
out
xchg
or
inc
data16
fadds
ss
push
cmpsl
sahf
fcmovnbe
inc
out
je
das
aam
inc
sbb
push
adc
out
cmpsb
lcall
rclb
and
adc
int3
add
cmp
into
and
out
sbb
rol
enter
or
inc
push
enter
cmpsl
pop
int
xchg
jbe
push
cmc
fsubrp
test
jp
hlt
fidivrl
es
std
scas
inc
xchg
jl
mov
pop
movsl
mov
sub
adc
mov
je
push
fldcw
iret
data16
mov
jne
popf
leave
std
jecxz
xor
and
jl
lret
cmp
xor
adc
in
fdivrp
pop
std
fists
mov
mov
jns
test
rol
mov
cmpsl
shll
ror
pushf
cmp
out
fmuls
aaa
lock
inc
pop
mov
mov
mov
bound
add
fsub
jb
and
insb
push
inc
dec
xchg
cmp
outsb
js
lds
mov
lds
stos
sbb
jae
int
cmpsl
bound
arpl
jns
fisubl
inc
inc
push
push
call
sbb
stos
jmp
xchg
mov
bound
outsb
mov
dec
out
push
bound
cltd
mov
int3
jno
cmpsl
idiv
jno
pusha
fisubrs
jae
lods
insl
inc
mov
repz
imul
pusha
mov
adc
call
jge
push
shll
int3
sbb
push
adc
inc
jnp
jnp
iret
inc
jne
out
arpl
dec
in
cltd
add
and
mov
adc
push
and
sub
pop
mov
inc
roll
jae
not
mov
xchg
int
add
add
add
mov
stos
daa
xchg
add
fcmovu
fs
adc
sbb
mov
pushf
ja
jns
cmp
xor
fistpl
inc
out
dec
inc
jl
cmpsb
push
repnz
ja
stos
xchg
popa
aas
jnp
nop
out
inc
fucomi
sbbb
mov
mov
leave
cmp
scas
scas
sub
xor
push
cmp
or
mov
push
adc
fnstsw
ljmp
movsb
das
xchg
or
movsl
jp
stc
xchg
cmpsb
fisubrl
dec
jle
sub
mov
mov
stos
adc
pusha
cmp
push
fs
pop
and
cmp
scas
call
mov
cltd
pushl
in
sarl
into
sti
sbb
pop
inc
adc
das
push
js
lock
or
rcrb
mov
pop
cmp
loope
rorb
popa
dec
fnstcw
mov
mov
iret
je
and
or
cld
filds
int
push
adc
es
dec
mov
stos
bound
add
leave
xor
mov
add
add
add
mov
add
or
movsl
sbb
ja
push
jns
ret
and
push
xlat
jno
pop
sahf
mov
insl
jmp
xchg
nop
xor
out
fistps
inc
mulb
fs
cld
xchg
add
into
lds
sbb
pop
out
jne
sub
jg
outsb
cmp
jmp
fcmovne
mov
movsb
or
call
add
sub
test
lods
xchg
xchg
push
pushf
push
sbb
inc
push
out
mov
sbb
xor
mov
pop
push
cmpb
in
pusha
jg
or
pop
insl
dec
iret
lret
inc
sub
fmulp
sbb
dec
iret
outsl
inc
inc
ds
popf
xor
call
lea
iret
shrl
sti
adc
jl
outsb
xchg
xchg
xchg
and
sub
notb
test
mov
das
fs
rcll
add
mov
test
fwait
icebp
les
lea
fsubr
jge
fstpt
adc
fs
test
jecxz
fidivl
mov
mov
dec
pop
sub
idivl
popa
les
mov
and
out
imul
add
cmp
cs
dec
decb
add
jmp
add
dec
jmp
cmp
mov
push
mov
xor
or
pop
and
test
and
jnp
mov
xor
sub
push
test
mov
mov
in
out
xor
idiv
orl
shrl
xchg
mov
mov
int
sbb
add
pusha
subb
mov
jno
adc
mov
pop
std
push
out
pop
jne
popl
sub
mov
sub
nop
mov
arpl
jecxz
mov
mov
cmc
in
imul
data16
jg
insb
add
mov
call
mov
ret
out
aaa
push
cmpsb
sbb
loopne
shl
inc
dec
loopne
jno
pop
xlat
xor
call
sbb
push
sub
clc
aas
xor
sbb
mov
cmp
lods
adc
pop
insl
or
sti
arpl
mov
push
push
sub
das
push
stos
or
sbb
rcrl
scas
pop
push
pushf
mov
mov
mov
mov
xlat
cli
in
mov
stos
pop
aam
pop
test
nop
jge
arpl
inc
or
mov
out
xchg
lock
and
test
iret
std
mov
ljmp
lds
fcomi
add
xor
les
xor
daa
mov
in
subl
inc
int
mov
cmc
mov
adc
scas
mov
sub
dec
dec
push
sbb
iret
notl
xchg
jo
call
int3
aad
in
jg
inc
cmp
ror
mov
xorb
inc
mov
leave
ror
fsubrp
or
mov
xor
mov
mov
outsb
imul
inc
lcall
bound
pop
push
push
hlt
daa
data16
bound
popf
inc
mov
mov
inc
mov
in
insb
pop
push
mov
adc
add
xor
push
or
outsl
pop
pop
cmpsb
aaa
pop
lahf
testb
xchg
daa
inc
mov
lret
lret
cmpsb
ljmp
mov
mov
sub
xorl
sbb
xchg
les
ljmp
mov
out
mov
ror
add
arpl
pop
lret
fwait
out
rol
fmull
push
cmpsb
out
imul
add
repz
jmp
push
das
mov
adc
mov
out
mov
sti
pop
jno
cmp
xchg
sti
sti
pop
or
cltd
fiadds
bound
and
push
xor
dec
rorl
in
and
jecxz
push
mov
mov
inc
push
adc
jp
ljmp
loope
rcr
cmp
pop
lock
aad
mov
cmc
adc
xorl
mov
mov
jno
scas
pop
mov
je
int
das
dec
inc
aas
repnz
insb
lcall
or
loopne
ds
iret
xchg
frstor
push
push
ds
cmpsb
fisttpl
xchg
movsb
call
mov
leave
mov
mov
adc
imul
push
cwtl
jno
push
pop
push
es
fstps
mov
insl
and
shl
insb
loope
xor
mov
test
leave
xchg
leave
push
jb
and
icebp
aas
inc
scas
sbbb
or
mov
cmpl
shlb
push
mov
jl
ja
sbb
test
cs
cmp
cmc
push
insb
jecxz
add
call
call
pop
jmp
inc
int
cmp
mov
sbbb
cmc
dec
lahf
out
mov
stos
push
mov
xchg
pop
dec
fs
or
stos
cmpsb
xor
movsb
add
xor
or
and
or
movsb
adc
adcl
lahf
jno
xorl
jno
lds
aas
add
dec
movsb
arpl
mov
jae
das
or
cwtl
xchg
lds
sti
mov
out
int
lock
insb
inc
jmp
out
sar
loopne
aad
pushf
add
adc
xor
mov
aas
mov
xchg
arpl
lcall
sahf
imul
cmova
xor
sub
sub
mov
xchg
sbb
xchg
mov
dec
movb
int3
call
mov
mov
je
sub
mov
push
xchg
decb
pop
loop
add
dec
push
inc
mov
test
mov
mov
or
cmp
sarl
or
xor
push
pop
adc
mov
inc
cltd
pop
mov
movsl
std
cmp
adc
sub
aaa
or
pop
xchg
daa
notl
xor
dec
fisubs
stos
mov
cli
pusha
jecxz
jecxz
sub
int3
add
add
mov
mov
daa
hlt
aaa
lea
sbb
cmp
add
add
mov
pop
jp
call
ljmp
dec
mov
aaa
vmovups
gs
jne
adc
mov
shrb
mov
out
mov
mov
lcall
jl
pop
dec
fs
adc
pop
loop
and
scas
test
or
mov
ret
scas
in
je
ja
mov
inc
push
test
inc
adc
mov
sub
sub
mov
mov
mov
mov
xchg
scas
je
rcll
aaa
insb
arpl
loope
inc
andb
jl
inc
lock
int
dec
add
clc
xchg
add
popf
fs
push
mov
sahf
cmp
les
xor
mov
bound
xchg
call
mov
cmc
or
mov
imul
push
fdivl
fsubp
movl
push
xchg
jae
dec
filds
cmp
push
roll
loope
mov
or
in
pop
repz
mov
xor
and
ret
nop
push
or
call
sbb
negl
aas
out
mov
call
sbb
imulb
xor
in
lods
out
mov
cmp
mov
loop
or
jbe
sbbb
inc
aas
movsb
int3
insl
int3
mov
xchg
dec
dec
and
pop
jl
int3
call
push
pop
call
syscall
test
inc
int3
cmp
ljmp
sbb
pop
dec
pop
sbb
loop
sahf
popa
cmc
dec
out
xor
stos
or
mov
stc
dec
ror
and
or
outsl
jg
insb
jge
repz
ret
negl
adc
aas
mull
mull
or
stos
enter
xchg
dec
mov
pop
lods
pushf
jnp
cli
mov
sahf
adc
subb
in
incl
incl
incl
jg
sbb
cmp
movzwl
sbb
lahf
inc
jmp
test
cwtl
mov
push
cmpsb
mov
scas
adc
test
dec
cmc
nop
xchg
pop
pop
xchg
mov
es
pop
jmp
imul
test
adc
sti
rcll
rolb
scas
dec
lcall
jge
pop
xorb
shlb
cs
jl
push
sahf
je
jb
int3
call
inc
mov
in
adc
movsb
sbb
mov
push
int3
imul
adc
out
faddl
shll
jecxz
sub
jle
int3
inc
pop
pop
outsl
adc
sub
jnp
jle
push
clc
mov
mov
test
scas
insl
je
repz
lret
mov
mov
xchg
testb
test
cmc
enter
or
inc
lds
and
adc
push
push
pop
cltd
cmovnp
xor
fwait
inc
call
add
xlat
dec
pcmpeqw
sbb
shlb
and
xor
or
or
cmp
mov
in
loopne
push
outsl
stos
mov
push
inc
xor
rcll
jp
test
pusha
bound
sti
xchg
jo
flds
push
xchg
dec
lcall
or
xchg
das
and
cmpsb
push
xchg
and
pop
cmp
mov
push
leave
pop
jge
jns
cmp
add
add
mov
ss
push
push
je
movsl
ficoms
xchg
ds
add
jp
int3
call
je
jp
adc
mov
cltd
mov
lock
test
jb
mov
push
loope
insl
mov
dec
pop
jb
pop
sbbl
js
call
xchg
mov
sub
sbb
add
clc
sahf
aad
sub
push
pop
clc
icebp
les
sub
lea
idivb
pop
les
scas
mov
lahf
loop
jg
call
inc
inc
into
cltd
lcall
push
adc
es
popa
inc
testl
call
fwait
cli
push
add
push
leave
test
mov
sar
adc
cmp
testl
test
roll
or
nop
cmp
insb
repnz
mov
and
jae
cmpsl
jnp
subl
lea
fbstp
int3
call
and
adc
fnsave
loope
bound
mov
call
inc
or
cmp
call
repz
mov
loopne
add
jp
clc
cmp
inc
test
add
add
pop
add
xor
jae
stos
pop
clc
mov
pop
mov
jg
pop
out
adcl
xchg
lret
or
adc
jp
loope
inc
out
add
sti
subl
paddb
scas
icebp
test
cwtl
adcb
cli
cmp
in
mov
mov
imul
push
adc
data16
push
fiadds
data16
lea
aas
ret
mov
mov
mov
pop
jg
lea
mov
hlt
std
mov
mov
mov
jbe
movsl
xor
fcomp
cmpsb
into
mov
stos
lds
mov
lds
out
outsb
dec
cmp
fdivrl
add
add
add
imul
mov
call
adc
movsl
insl
repnz
push
loop
or
add
xlat
mov
into
js
jnp
mov
xchg
jg
mov
cmp
and
pop
shll
dec
and
rol
int3
xor
cmp
mov
and
mov
call
je
in
sub
ds
push
mov
enter
xchg
movb
cmp
push
adc
or
iret
jmp
jbe
mov
outsb
inc
negb
scas
in
test
mov
icebp
test
mov
add
jno
bound
and
mov
jnp
cmp
push
daa
stos
std
add
stos
fdivrs
mov
mov
mov
and
pop
or
or
arpl
and
lahf
sbb
fcompl
outsb
fwait
inc
in
sarl
subl
into
mov
popl
pop
std
in
add
push
pop
pop
mov
dec
adcl
cmp
mov
mov
addr16
js
adc
xchg
push
pop
xor
xor
jae
xor
lret
repz
jecxz
mov
pusha
sub
sub
mov
cmc
fstpt
and
jp
in
pop
movsl
pop
cwtl
les
xchg
mov
int3
call
imul
out
outsb
adc
test
lahf
push
mov
icebp
or
and
call
clc
dec
mov
xor
out
xchg
xor
icebp
adc
push
pop
ret
cmp
outsb
or
cmp
pop
dec
sbb
adc
cli
fistpll
idivb
lahf
dec
jge
mov
movsb
hlt
sub
add
xchg
clc
repnz
pop
push
fadds
lods
or
lret
jecxz
fcomip
mov
ret
xchg
pop
loopne
and
cmp
sti
pop
sbbl
and
or
sbb
inc
bound
addr16
or
sahf
out
mov
xchg
mov
fiaddl
movsb
ds
aam
adc
clc
outsl
add
mov
mov
daa
loopne
sbb
into
xchg
pusha
fimuls
sub
and
inc
aas
push
mov
je
call
outsb
jae
jl
sbb
push
jnp
lahf
add
lods
lret
dec
movsb
mov
xchg
push
out
cmp
dec
repz
xchg
out
mov
add
add
add
add
dec
popf
adc
lahf
ja
ret
push
mov
dec
cmp
pop
jno
ljmp
inc
hlt
sbb
or
mov
lods
outsl
and
dec
je
push
in
pop
pop
add
stc
pop
mov
jl
test
cmp
dec
sbb
ret
xor
sbb
cmpsl
cwtl
jbe
push
arpl
mov
add
add
in
pop
inc
cmp
mov
nop
test
loop
sbb
shlb
lret
stos
adc
push
xchg
push
out
push
es
push
out
int
jne
ljmp
push
add
daa
stos
cmp
incl
incl
decl
cmp
subb
adc
ds
stos
outsl
into
rclb
fildll
xlat
pop
mov
in
das
loop
mov
or
pop
xor
mov
mov
or
sbb
sbb
dec
rcr
mov
jnp
add
jbe
jb
fildll
ljmp
incl
xor
negl
xor
std
xlat
cmc
or
fistl
in
xchg
sub
pop
xor
lret
cmpsb
pop
fimull
out
mov
aam
push
xor
xlat
mov
xor
out
xor
pop
rolb
sub
xlat
inc
inc
mov
cmpsl
pop
pop
fisubs
jnp
mov
pop
adc
push
out
or
mov
adc
mov
outsl
jo
fmul
movsb
xor
insb
std
iret
push
mov
shrb
lea
rorb
adc
add
loope
inc
loopne
jno
fwait
mov
add
pop
mov
int
push
testb
sti
mov
inc
cmp
jecxz
inc
push
int
pop
insb
mov
aas
data16
sbb
push
sahf
fdivrp
out
sub
pop
mov
mov
fs
add
add
pop
or
sbb
jl,pn
sahf
bound
ljmp
cmc
fiaddl
lods
inc
negb
popf
pop
inc
imul
xor
push
lds
es
sbb
pop
std
std
dec
add
push
fstl
inc
jmp
outsl
into
or
dec
lds
test
pushw
pusha
sub
mov
aas
mov
mov
push
xor
dec
les
add
lods
jmp
lret
sbb
out
nop
shlb
std
mov
pop
cmp
inc
scas
jle
jmp
pop
int
and
jle
iret
out
rcl
pop
nop
sub
aas
lret
push
lea
xchg
add
and
jp
mov
add
add
add
call
mov
mov
add
popf
xchg
dec
cld
adc
pop
sbb
sbb
mov
repz
mov
aad
nop
movsl
pop
int3
ljmp
insl
movsl
sarl
int3
call
ds
add
fimull
xchg
lret
lret
adc
mov
mov
outsl
xchg
addr16
out
iret
cmp
out
lret
mov
push
pop
sub
enter
jmp
cltd
jne
loopne
push
xchg
and
sbb
hlt
gs
std
shrl
jp
ret
frstor
mov
dec
push
out
jb
sbb
pop
and
dec
add
and
je
imul
mov
test
ret
xor
or
xchg
dec
mov
mov
xor
cmp
mov
xor
ret
and
aas
xchg
sahf
scas
popa
ret
fdivrs
and
aad
fisubrl
data16
inc
fisttpll
std
xor
fwait
and
popf
call
push
cmpl
cmpsb
lods
jmp
gs
lods
mov
mov
adc
jmp
nop
cmp
insl
xor
lods
out
das
adc
jg
call
mov
pop
sbb
add
std
push
push
ror
add
add
add
and
jnp
push
fisttpll
or
mov
test
sbb
jnp
and
stos
lret
mov
cmp
pop
out
or
jne
jb
hlt
xchg
mov
aaa
leave
mov
rorl
mov
rorb
sub
sar
xor
xchg
mov
fcmovnu
xlat
xor
push
mov
push
in
fistl
push
or
notb
out
int3
add
add
or
jg
xor
lahf
nop
rcrl
jge
inc
sbb
ss
pop
sbbl
stos
or
shl
insl
adcb
pop
fwait
rclb
cmp
mov
mov
outsl
mov
iret
dec
or
notb
sbb
mov
pop
push
loope
jnp
mov
aas
or
cltd
and
xchg
add
or
push
mov
lds
jnp
push
xchg
xchg
adc
mov
mov
dec
repz
out
dec
popf
das
sbb
js
or
mov
mov
js
loop
cld
mov
push
xor
call
loop
add
push
lea
sbb
push
repz
cmp
mov
inc
inc
xchg
add
pop
fs
adc
cmp
divl
or
add
cmp
mov
inc
push
pusha
adc
sub
mov
push
jb
outsl
inc
fs
adc
mov
lcall
sub
add
hlt
in
pop
int3
add
add
add
pop
test
lds
test
xchg
addr16
or
or
sbb
hlt
mov
xchg
pop
sub
pop
push
push
adc
dec
or
xchg
out
inc
sub
cmp
in
in
mov
cmc
jb
xor
clc
stc
push
or
jo
es
jne
dec
and
aam
pop
mov
addl
mov
mov
mov
add
cmp
out
xor
fwait
push
icebp
sub
sub
sub
aas
mov
out
das
rolb
mov
mov
ret
sahf
rcll
test
xchg
pop
jg
push
inc
iret
push
and
js
cmp
sbbb
test
pop
ja
int3
push
and
adc
cmpsb
nop
in
popa
cmc
in
sbb
popf
jl
adc
mov
scas
jbe
sub
dec
lcall
and
pop
popf
dec
fmulp
add
add
jge
and
jl
mov
adc
push
cmp
jp
stos
stos
fdivrp
sbb
mov
adc
insb
jge
call
adc
clc
imul
or
icebp
sahf
xor
add
mov
icebp
jecxz
ss
fldl
fldenv
fisubs
out
test
and
dec
inc
pushf
mov
mov
push
dec
cmpsb
sub
ficompl
pop
inc
std
in
lods
out
push
sub
cmp
xchg
ret
inc
test
fs
lret
sarl
fistps
rorl
fcomp
stos
jno
into
adc
add
test
fisubs
and
rcll
push
out
add
fidivrs
adc
ljmp
jb
mov
jo
dec
jecxz
call
or
aam
mov
xchg
or
mov
add
add
sub
in
into
decl
sbb
bound
dec
and
popa
je
inc
movsb
xor
or
and
mov
xor
and
mov
int
xchg
xchg
pop
mov
adc
jp
in
mulb
mov
mov
mov
idivb
inc
in
and
stos
lock
fmuls
mov
push
scas
jmp
add
add
inc
jns
bswap
js
inc
and
xchg
sub
lret
inc
mov
icebp
lock
cmpsb
mov
lea
fwait
lds
pop
test
das
lcall
movsl
or
incl
incl
testb
pushf
xchg
adcl
inc
push
add
cmp
sahf
addr16
notl
fdivl
fcompl
nop
test
into
mov
repz
cmp
jg
mov
das
pop
xor
push
int
pop
jnp
cs
pop
push
test
aaa
xchg
leave
and
in
inc
fldcw
stc
insb
add
pop
sbb
lret
decl
icebp
das
mov
mov
ljmp
sbb
rcrb
push
mov
cmp
stos
repz
add
scas
repz
pushf
push
push
adc
xchg
test
xchg
int
jbe
shlb
push
out
and
mov
push
and
jg
sub
xor
call
lahf
test
adcb
add
and
sbb
pop
cmp
pushl
lds
int
cli
add
movsl
push
dec
cmpsb
xlat
sub
pop
movsl
in
sub
es
jne
scas
xlat
jg
jo
mov
mov
sub
sbb
adc
stos
data16
add
add
add
sub
adc
push
sub
lods
and
aam
push
xchg
lret
test
pop
fisubs
arpl
cli
lods
push
or
daa
mov
popa
xchg
and
dec
cmpsb
movsl
jg
repnz
bound
lea
outsb
xor
cmp
orb
adc
jge
sub
xchg
cmp
and
outsl
jmp
add
pop
inc
or
test
cmpsb
mov
dec
pushl
mov
cmp
icebp
cwtl
xorl
stos
sarl
pop
ja
and
arpl
movsl
mov
mov
mov
xchg
cmpsb
jnp
or
cmpsb
mov
aaa
push
dec
and
pop
gs
inc
inc
mov
dec
xchg
nop
xlat
iret
outsb
call
imul
data16
arpl
stos
xor
mov
mov
aas
push
inc
loop
mov
sub
push
pop
cld
adc
dec
out
inc
jp
stc
aam
js
jne
sub
sbb
into
mov
xlat
or
incl
incl
jmp
mov
jne
loope
xor
jge
and
notb
lock
and
mov
dec
gs
jb
daa
cmc
jg
nop
addr16
filds
fstl
xor
mov
or
call
cmp
or
in
mov
arpl
sbb
sbb
in
cli
pop
xor
ret
pop
add
mov
mov
stos
stc
gs
fists
jmp
mov
inc
inc
push
sbb
pusha
adc
js
movsb
stos
and
pushf
push
out
clc
mov
mov
xlat
je
push
popa
cmp
hlt
add
orb
das
add
jno,pt
aaa
cs
cmp
fsts
mov
jae
push
add
push
lret
dec
nop
sub
cs
jecxz
cmpsl
mov
jno
sbb
fwait
in
sbb
sbb
es
add
paddw
test
xchg
add
mov
xchg
out
mov
push
mov
call
std
ljmp
pop
dec
jne
into
rcrb
xchg
mov
jbe
lock
sbbb
pop
cli
push
add
push
fidivrl
or
rorb
mov
in
adc
lret
call
leave
push
fmuls
lret
loope
fstpt
add
js
mov
xchg
adc
fnstsw
pusha
xor
sub
sub
sarb
in
add
cli
sub
xchg
ficomps
jecxz
mov
mov
cmp
mov
mov
inc
fcompl
leave
fbstp
lea
ljmp
std
push
int3
add
mov
cmpsb
xchg
jae
hlt
mov
insb
hlt
data16
add
inc
jmp
repz
add
add
and
sbb
jge
cmp
mov
mov
xchg
in
xchg
ja
incl
fst
mov
pop
cmp
xor
mov
xor
cmp
mov
int3
stos
sbb
pop
and
xor
pop
inc
loope
adc
or
pusha
bound
stos
lock
pop
fcomi
adc
repz
push
push
inc
inc
iret
xchg
scas
lahf
cmp
pop
xor
cmp
ljmp
jb
cmpsb
jg
jg
sub
ja
sub
decl
ret
mov
clc
and
mov
bndldx
mov
repz
in
popa
subb
sar
je
or
div
daa
call
push
leave
push
incl
daa
and
arpl
mov
push
cltd
xor
ret
int
adc
sub
lods
cmovo
bound
mov
dec
test
adc
ror
jmp
pop
mov
add
addr16
jge
xchg
mov
rorl
sti
cmpsl
mov
sub
sbb
mov
decl
cltd
sbb
fwait
in
inc
mov
out
xchg
testl
mov
ficoml
shrb
add
aad
aaa
iret
inc
jp
cmp
stos
int3
shll
and
sbb
jne
imul
jmp
xlat
pop
pusha
mov
dec
leave
inc
stc
iret
pop
pop
shl
jns
pop
dec
leave
xor
popa
jl
cld
data16
dec
rcl
xchg
push
je
cld
lret
pop
xchg
sbb
incl
add
xchg
call
fldcw
xchg
je
leave
test
fucomi
pop
in
pop
fcoml
clc
leave
outsb
cmp
outsb
dec
lods
adc
lret
or
leave
daa
mov
or
scas
push
mov
das
stc
add
sub
std
sbb
test
leave
fidivrl
int3
add
ret
jns
xor
stc
rcl
inc
adc
ret
jmp
in
ljmp
cld
jbe
mov
jmp
add
push
add
mov
ja
sbb
mov
ds
mov
xchg
cmp
into
rorl
xchg
jle
hlt
or
mov
fs
add
ror
push
icebp
jg
and
pop
mov
adc
ret
popa
enter
and
sbb
sbb
sub
test
push
cmpl
je
dec
push
fs
les
sub
sahf
loope
dec
push
dec
adc
outsl
pop
or
cmp
es
xchg
dec
push
ret
inc
ja
mov
js
xchg
lea
and
sub
and
cmpsb
out
jae
test
test
mov
sbb
lcall
sub
jg
mov
int3
add
add
xchg
lret
mov
and
pop
xchg
mov
rcrb
out
leave
das
in
lock
not
dec
jp
scas
inc
movsl
push
cmp
jnp
jnp
jl
fildll
aas
lret
mov
mov
fdivrl
xor
pop
or
mov
lods
ljmp
testl
mul
hlt
sbb
in
movsb
sbbb
cmp
pusha
negb
or
or
jecxz
and
mov
shlb
push
pop
sbb
test
test
lret
mull
jo
call
in
mov
fucomp
cmp
sbb
movsl
aaa
loopne
mulb
xchg
mov
gs
pusha
rcrb
fst
shll
in
add
lds
cld
push
test
fwait
xchg
dec
pop
xchg
dec
push
test
repz
pop
testb
xchg
push
pop
inc
mov
out
xor
push
mov
pop
xor
cmp
sbb
fstps
and
push
lock
xchg
push
mov
adc
ror
push
gs
loope
imul
xor
cwtl
add
adc
dec
fsubr
sub
icebp
mov
insl
jp
push
or
int
cltd
rcrb
jl
pop
jge
inc
jae
pop
and
out
daa
adc
cmc
jl
push
or
decl
out
xchg
popa
stos
mov
and
dec
call
mov
dec
ljmp
add
add
add
lods
inc
cmpsb
cmp
cmpsl
rcrl
cld
into
andb
aam
lds
sbb
in
jb
ficompl
jns
inc
mov
add
adc
fwait
cmp
mov
repnz
cs
xlat
sub
dec
loopne
mov
jns
mov
jp
and
out
mov
xor
mov
cmp
cmp
loope
mov
pop
leave
xchg
cmp
in
push
and
mov
adc
loope
adc
sub
in
xchg
mov
jb
adc
shll
insl
cmp
lahf
sub
xchg
gs
gs
outsl
pop
enter
push
loopne
sbb
dec
aas
adc
fcmovnu
fistpl
or
add
add
push
pop
jo
scas
pop
shll
cwtl
bound
xchg
push
or
pop
sub
fs
fbld
sbb
sbb
push
mov
jmp
int3
call
lret
insb
push
mov
addr16
add
add
add
int3
adc
stc
jl
test
lods
aas
shl
cmc
pop
sub
seta
int3
add
add
icebp
cld
test
pusha
push
sub
adc
popf
or
mov
shrl
mov
call
xor
xchg
fwait
sbb
xchg
and
mov
scas
repnz
mov
add
adc
fbld
mov
aas
in
push
fs
inc
daa
lcall
mov
sti
loopne
cmpsb
or
adc
xor
push
andl
pop
pop
lahf
jg
insb
dec
aas
push
rcr
in
ret
ret
mov
jo
dec
stos
fidivl
add
push
dec
push
pusha
adc
gs
and
push
sbb
cmpsb
pop
mov
adc
sahf
or
out
iret
leave
pop
std
and
add
add
jns
lock
xor
cwtl
sahf
scas
mov
shrd
pop
and
mov
adc
ret
repnz
cmc
and
jg
xchg
cmp
rorb
pop
mov
scas
mov
mov
jle
icebp
push
inc
mov
popa
add
add
cmp
sbb
test
or
cmpsb
dec
sub
push
scas
daa
loope
es
lods
fs
mov
inc
sbb
aad
cmpsl
aam
int3
add
pushf
leave
dec
ja
xor
pop
push
or
fistpll
push
xchg
in
add
out
mov
pop
lcall
add
add
add
sbb
lret
fnstcw
adc
lret
mov
push
int3
add
add
add
cmp
or
fsubl
mov
xchg
adc
jno
insl
pop
jmp
pop
sub
iret
pop
outsl
movsl
cmpsb
sub
inc
repz
mov
int
push
mov
xor
jnp
scas
push
and
jg
inc
mov
mov
testb
lret
jae
leave
mov
loop
inc
shl
pop
xchg
push
movsl
dec
jae
int3
data16
push
testl
aaa
jl
nop
push
sub
scas
jnp
mov
pushf
sub
in
jg
imul
dec
ficomps
pusha
push
test
fcoml
mov
icebp
ret
into
pop
data16
sar
incl
jmp
gs
dec
mov
xchg
test
stos
out
repz
pop
daa
push
jne
call
fstpt
fistps
and
mov
mov
jno
rorb
ret
sub
shll
and
jl
jl
xchg
mulb
jmp
xchg
dec
pop
popf
arpl
dec
shll
lods
xlat
adc
jp
jmp
and
mov
push
repnz
out
nop
mov
mov
lods
jno
adc
shl
add
decl
dec
loop
sbb
mov
xchg
into
lret
cmp
cltd
loopne
mov
mov
sbb
out
out
mov
jne
aam
inc
inc
add
and
inc
jne
movsl
inc
xor
es
in
lahf
mov
mov
jbe
int3
call
or
aad
cmpsb
mov
push
cmp
jb
push
jb
xchg
xchg
and
mov
sahf
iret
shrb
das
mov
sub
xor
and
cmp
jecxz
sub
outsl
js
leave
sbb
cwtl
stos
mov
pop
and
call
scas
jae
push
repnz
fisttpll
addr16
add
cmc
mov
cmpsl
xor
adc
inc
xchg
out
xchg
xlat
and
mov
outsb
rclb
mov
adc
or
leave
outsl
pop
jno
nop
insl
inc
cmp
mov
fisubs
mov
je
into
enter
mull
shll
xchg
add
sbb
loopnew
cmp
insl
xchg
inc
sbb
lcall
xor
xchg
push
imul
and
lods
int
hlt
dec
sbb
int3
jo
out
and
xchg
jmp
adc
test
cmpsl
bound
test
xor
decl
data16
testb
mov
push
push
scas
mov
inc
jb
mov
push
jmp
pushl
mov
not
and
mov
mov
xlat
les
lea
jge
sarl
into
add
sub
and
or
mov
hlt
imul
mov
adc
mov
push
xchg
pop
pop
cwtl
mov
dec
lahf
daa
ds
cmp
int3
add
add
add
incb
aas
test
lcall
add
pop
les
and
std
dec
xchg
dec
stc
rcr
xor
push
outsb
fbstp
sbb
je
add
inc
imul
outsl
sbb
mov
aad
jp
jbe
mov
mov
ja
lds
dec
addr16
push
cmp
pop
xor
xor
inc
sbb
jl
arpl
mov
psubsb
call
add
iret
jb
fsub
daa
mov
cmp
shlb
repz
inc
data16
in
mov
in
ret
stos
inc
lcall
dec
push
ret
aam
ljmp
mov
arpl
divb
or
outsb
cld
mov
inc
inc
dec
mov
jb
mov
call
push
outsb
loop
mov
dec
popa
sbb
stos
pop
sarb
ds
imul
mov
cmpsl
fsubrl
mov
mov
add
insl
sub
and
or
out
mov
xchg
pusha
icebp
cmp
dec
sbbb
xchg
sub
xchg
inc
nop
dec
mov
jno
mov
pop
xchg
fidivl
pop
popf
xor
fidivrs
loope
lods
pop
mov
or
dec
mov
inc
cs
cmpsb
cmpsl
adc
sub
mov
sub
ja
and
add
fwait
cld
dec
xchg
cmp
mov
inc
add
pop
mov
mov
mov
push
mov
in
imul
pop
loop
es
test
jmp
dec
jp
jp
fstps
call
fildl
cli
jle
inc
stos
xlat
cmpsl
add
xchg
jb
scas
push
sbb
cmp
xlat
adc
sbbl
or
cmp
ret
push
sub
or
xor
jb
enter
inc
lods
js
sub
inc
cmc
pop
in
or
fnstsw
mov
ljmp
add
add
cmp
mov
mov
sbb
pop
jmp
push
lock
pop
cmpsb
adc
nop
hlt
or
int
xor
out
adc
sub
push
test
adc
in
cmpsl
sbb
shlb
xorl
aad
xchg
jne
push
ficomps
jp
cmpsb
and
nop
movsl
rcl
or
clc
push
cmp
sub
insl
xchg
xor
out
or
fcomip
xchg
cmp
xchg
xchg
jnp
test
and
ds
rcr
mov
inc
int
push
pop
mov
mov
jnp
cmpsl
incl
call
mov
jb
dec
sub
mov
cs
movnti
lds
mul
inc
push
adc
imul
adc
adc
dec
and
outsl
cmpsl
loopne
shr
insb
fwait
pop
mov
xor
pusha
jecxz
add
add
insl
cld
testb
push
or
dec
and
mov
jb
ret
inc
pop
cmp
cmp
dec
mov
mov
fnsave
outsb
sub
fs
xchg
inc
fsts
mov
in
xchg
in
dec
inc
adc
lcall
and
mov
loop
out
dec
adc
jns
fcomps
sahf
mov
inc
jecxz
cmp
lret
rcrb
into
je
pop
scas
mov
cmc
test
je
xchg
mov
outsb
mov
int3
aaa
ds
lret
dec
mov
ljmp
outsl
testb
scas
push
mov
mov
fsubs
mov
stos
jno
add
call
dec
or
mov
daa
out
xchg
or
mov
pushf
sarl
push
repnz
ljmp
pop
pusha
xor
fldt
adc
outsb
dec
xor
mov
mov
cli
cmp
pop
fmuls
pop
or
lds
or
dec
mov
imul
inc
dec
int3
out
mov
mov
leave
lcall
call
lea
cmp
push
xchg
mov
sbbb
pop
xor
imul
jae
fisubrl
push
insl
lds
repz
push
sarl
pop
imul
sub
xor
cmp
sbb
loopne
or
rclb
inc
mov
pushf
ret
and
das
dec
add
les
into
ret
jl
mov
outsl
stc
daa
int
sahf
dec
mov
lods
mov
fcmovb
sbb
call
test
mov
and
and
sti
leave
sbb
pusha
jp
push
test
mov
xchg
xchg
pop
inc
sbb
mov
xchg
cwtl
push
or
pop
flds
xchg
push
es
in
int
inc
push
faddl
lea
testb
jne
pop
shll
dec
iret
jle
dec
out
data16
mov
jno
in
enter
cmp
sub
xor
test
pop
jg
fildl
push
decb
test
call
int3
enter
inc
sbb
je
fadds
imull
sti
push
dec
into
xor
inc
xor
add
scas
jmp
add
xchg
test
scas
sub
pop
mov
mov
scas
insl
shl
cld
lret
rorl
or
adc
inc
call
shlb
inc
mov
test
add
or
pop
xchg
in
inc
push
or
add
xchg
or
xor
in
add
push
and
mov
scas
jge
or
ja
dec
mov
shll
mov
mov
push
xor
push
add
lods
scas
in
add
cld
push
js
mov
inc
add
or
in
popf
xchg
sub
out
das
test
arpl
imul
orb
ljmp
add
fisttpll
mov
and
add
mov
sbb
leave
pop
pop
cmp
ret
rorl
mov
adc
ffree
cmp
in
loope
lods
mov
test
sub
in
cltd
fdivs
sti
mov
inc
xchg
ret
xor
pusha
mov
xor
mov
pop
pop
jg
cmc
shrl
jle
aas
add
ret
outsb
out
mov
mov
mov
loopne
xchg
fs
mov
mov
cmp
dec
xor
dec
pop
call
xor
jle
mov
push
lods
outsb
add
repz
dec
dec
fistpll
adc
sub
mov
sti
cmc
adc
shll
shll
inc
js
je
push
push
imul
fmuls
repnz
fnsave
mov
adc
test
rcr
shlb
sub
outsl
xor
testb
fildll
andb
push
psubsb
pop
dec
rolb
push
and
into
mull
xor
div
pop
jmp
movsl
leave
and
mov
lods
clc
mov
mov
or
xchg
and
jno
lods
jg
jle
pop
dec
dec
sbb
aas
movsb
mov
mov
mov
lret
out
repnz
add
adc
std
scas
aam
ds
push
rcll
into
pushf
pop
mov
stc
xor
xchg
or
xchg
adc
in
inc
inc
push
test
hlt
mov
mov
mov
pop
sahf
aad
xor
jb
add
rorb
aaa
jae
and
and
insl
std
inc
jo
imul
mov
and
in
dec
inc
jle
xor
insb
or
ficoml
rcr
andl
jno
loope
jbe
hlt
adc
cld
mov
adc
jl
mov
popf
mov
xchg
mov
xchg
enter
sub
sbb
mov
aaa
mov
cmp
dec
inc
lret
aaa
adc
mov
nop
mov
adc
mov
xor
add
mov
sub
push
lret
xlat
pop
adc
add
cmp
insb
and
into
arpl
cltd
mov
repnz
imul
xrelease
xchg
mov
pushf
mov
insb
test
cmp
movl
cmpsb
mov
jg
xor
subl
adc
iret
mov
aaa
fwait
out
andb
ljmp
fcmovbe
mov
movsl
idivl
and
jecxz
pop
hlt
fidivl
add
mov
addr16
mov
mov
lret
push
aad
xlat
pop
pop
outsb
inc
add
cmpsb
imul
cmp
push
xchg
call
and
cwtl
xlat
push
xor
test
push
xchg
add
inc
call
push
das
xor
or
lret
adc
fcmovnb
shll
or
and
adc
and
testw
into
dec
fmulp
adc
out
sub
dec
push
jecxz
ljmp
add
cli
push
or
mov
jno
xor
repz
daa
mov
lret
data16
pushf
enter
jne
xlat
test
jmp
popa
jge,pt
mov
loop
pop
mov
add
xchg
inc
jb
push
aaa
inc
les
mov
mov
mov
lret
ljmp
push
std
inc
pop
adc
cmc
jae
or
loopne
jge
or
test
out
dec
lea
inc
pop
icebp
push
push
shlb
mov
or
gs
or
xor
fisttpl
lods
pusha
fdivr
repnz
lahf
mov
rcr
sbb
jns,pt
adc
loope
add
add
add
lret
add
lds
aam
adc
pushf
ret
addr16
idivl
xor
repnz
call
jno
inc
jge
pop
xor
cmpl
or
pop
pushf
inc
xchg
or
xchg
pop
lock
xchg
sub
movsb
mov
sti
xchg
stos
pop
sahf
or
in
jno
mov
add
or
in
lods
push
into
enter
sbbl
clc
cwtl
fs
in
aad
sbb
add
and
cmp
pushf
bound
imul
out
dec
in
fsubrp
or
dec
jo
pop
scas
mov
fs
add
add
jne
repnz
adc
aam
mov
xor
es
and
mov
mov
jne
imul
sbb
nop
mov
call
lcall
rolb
xor
inc
hlt
and
sub
add
mov
and
jb
add
push
mov
or
jnp
push
pop
leave
popf
das
rcl
call
int3
icebp
xlat
nop
in
jno
cwtl
mov
ljmp
ja
and
imul
xor
andb
adc
or
cmp
stc
aaa
scas
mov
xor
mov
mov
pop
lcall
incl
incl
clc
ja
loop
iret
mov
mov
add
and
mov
dec
and
cld
pop
xchg
pusha
test
leave
xchg
out
push
stos
ret
scas
scas
scas
mov
ret
mov
xchg
clc
jns
push
mov
jle
inc
std
xlat
push
or
dec
scas
mov
in
mov
or
jle
jmp
lea
or
mov
test
pusha
dec
or
scas
int3
add
lahf
dec
insb
xor
aad
mov
sbb
or
ds
ds
sub
jl
sbb
xor
ret
sbb
out
out
ret
mov
leave
clgi
mov
mov
mov
push
pop
into
mov
add
rcrl
ljmp
fdivp
jp
fst
shlb
cltd
cmpsb
pop
fstps
mov
cld
pushf
lock
shlb
mov
dec
int
cli
popf
call
xchg
nop
cmp
stc
bound
or
jg
mov
and
sbb
cmp
mov
pop
xor
xlat
clc
cmc
xchg
lret
sub
mov
mov
mov
xchg
incl
incl
incl
mov
pop
sub
fstl
xchg
jmp
mov
fstpl
call
mov
mov
adc
ss
push
push
push
dec
push
jp
cmp
int3
add
add
add
lea
icebp
xchg
fistpl
mov
mov
lahf
out
enter
in
test
clc
hlt
adc
adc
xchg
inc
xchg
push
mov
stc
repz
lds
cmpsb
pop
imul
lcall
test
mov
adc
jle
lret
js
popa
andb
leave
js
mov
add
add
add
cmp
cli
jnp
xchg
dec
xchg
sti
push
std
push
adc
sbb
sub
repnz
xchg
in
mov
xlat
jg
cli
mov
into
sbb
aam
pop
and
inc
xchg
inc
mov
shl
insl
inc
cs
pop
and
jg
jno
aad
adc
lcall
xchg
ljmp
jns
mov
mov
pop
mov
outsl
in
outsb
stc
push
jbe
lret
fldcw
jecxz
adc
cmp
shlb
inc
lds
dec
js
aaa
sbb
ror
incl
add
test
pop
mov
xchg
push
xor
or
loopne
xchg
cld
push
roll
xor
sub
arpl
leave
imul
pop
xor
ret
xchg
std
fiadds
insl
sbb
dec
scas
cmp
and
cld
jne
out
cli
pop
xchg
mov
nop
repz
push
addr16
add
movsb
mov
testl
jecxz
sub
push
cmp
pop
dec
push
mov
inc
lds
add
mov
dec
out
test
adc
dec
pop
dec
loop
pop
xchg
add
cmc
int3
repnz
lds
pop
call
je
add
or
jge
xchg
in
jnp
adc
cmp
cmp
orl
cmp
or
sub
add
iret
add
lahf
xacquire
mov
mov
bound
pop
loope
enter
cmp
test
rclb
add
and
mov
jnp
mov
sbb
sbb
sbb
add
sub
call
or
into
jnp
lret
pop
inc
dec
sahf
and
aad
mov
pop
push
call
gs
xchg
xchg
dec
int3
add
scas
test
lret
movsb
sub
mov
imul
mov
mov
jb
fs
xchg
aam
lods
mov
div
clc
incl
incl
incl
mov
jo
cmp
int
inc
mov
lcall
imul
call
lcall
aad
mov
inc
push
mov
ljmp
jl
inc
arpl
in
call
loope
mov
mov
mov
out
shr
adc
cmp
idivl
push
fadd
mov
sub
mov
mov
xlat
pop
ret
sub
xchg
mov
fstpl
repnz
fwait
jno
xchg
or
rolb
shll
and
or
mull
loopne
stos
test
pop
or
call
in
in
stos
jae
cwtl
data16
mov
mov
mov
mov
pop
mov
fst
test
mov
adc
push
cmp
shrb
cmp
push
lcall
jo
mov
xor
enter
aad
int3
out
sub
or
dec
sbb
xchg
es
xor
addr16
jge
mov
lret
ljmp
repnz
add
popa
ss
idiv
xlat
test
cmp
es
mov
call
and
movsl
dec
cli
rorl
aam
push
pop
fnstenv
ljmp
shlb
cmp
call
jmp
cli
outsb
mov
cltd
dec
shll
mov
mov
mov
loope
pop
aad
sti
cli
lods
mov
sbbl
mov
push
mov
inc
shl
sarl
cmc
xchg
mov
jnp
repz
int3
lret
repnz
dec
getsec
pop
lret
insl
xor
rorl
int3
add
dec
sub
mov
mov
lret
punpckhwd
andl
cmp
adc
pop
aad
adc
pop
ret
fidivl
sahf
loope
adc
jmp
add
xor
shrl
insl
fisubrs
les
add
outsb
push
inc
or
imul
cmpb
shl
mov
mov
mov
and
iret
mov
dec
cmp
aad
lods
adc
mov
lcall
dec
in
lcall
add
incl
jle
cmpsl
push
jmp
mov
mov
lret
and
xor
popf
fcmovbe
clc
pop
insl
call
int3
adc
vpaddq
dec
out
test
cmpsb
hlt
sbb
in
rorb
and
out
fldcw
jne
js
push
add
add
mov
lret
mov
pop
and
sahf
cmc
aad
mov
or
xor
rolb
and
pusha
lock
cmp
fstl
push
movsb
mov
btc
and
push
loopne
filds
sbb
call
aas
push
out
dec
mov
push
mov
movsl
arpl
xlat
sub
ret
sbb
xchg
repz
add
fnstenv
cmpsl
or
and
adc
cmp
xchg
jl
dec
mov
cld
popa
mov
xchg
pop
test
movsl
cli
repnz
out
inc
loopne
insb
ffree
push
sbb
cmpsb
dec
pop
sahf
push
fdivp
pmulhuw
iret
sub
jns
loope
cld
jp
add
add
imulb
or
or
add
test
subl
and
dec
push
jns
add
xchg
push
jbe
push
sub
inc
test
shlb
js
mov
xor
inc
sub
aad
push
insl
fs
popf
or
xchg
out
ret
imul
push
sub
call
adc
sub
push
stc
mov
mull
lods
push
fiadds
dec
mov
out
lock
fstp
inc
jmp
inc
or
hlt
and
mov
idivl
mov
clc
xchg
lods
insb
test
and
mov
shll
dec
das
adc
inc
or
push
lahf
addr16
insl
mov
mov
mov
testb
add
mov
clc
dec
decb
mov
add
je
je
in
cltd
push
dec
push
dec
bound
call
gs
xor
jmp
loopne
push
dec
sbb
mov
mov
fwait
push
out
add
sbb
sbb
or
or
aaa
aad
cmp
daa
sub
aas
and
jecxz
rcrb
fisttps
and
ret
fcomip
lock
test
pop
pop
inc
bound
jl
repnz
xorb
je
mov
lea
mov
int3
inc
pop
jecxz
pop
inc
call
test
mov
fstl
in
jp
xor
pop
fnstcw
clc
cld
jb
addl
or
gs
mov
add
ss
mov
inc
inc
movsb
dec
xlat
or
adc
or
cwtl
or
sahf
pop
fdivrs
inc
iret
push
xlat
mov
int
xor
enter
or
repnz
jmp
cld
cmpsl
or
jmp
add
cmp
enter
in
push
lcall
xchg
push
aaa
sahf
sbb
sub
incl
incl
incl
outsb
xchg
xchg
insl
test
jne
xor
int
xlat
sub
pop
and
jnp
push
xchg
cmp
jge
or
cwtl
movsb
stos
mov
out
aaa
mov
ljmp
aad
ret
add
incl
stc
rcrb
cwtl
add
data16
testb
imul
mov
jle,pn
ds
inc
xchg
inc
mov
cmp
pop
add
fadds
test
popa
daa
mov
hlt
push
popa
pop
mov
xor
lea
lcall
insl
xorl
adc
mov
stos
inc
sbb
aas
lods
pop
inc
and
cmpsl
cld
push
dec
sub
ss
cmp
js
inc
mov
lea
jb
xor
cmp
push
jbe
int
int
arpl
repz
data16
test
inc
xchg
incl
sbb
jg
mov
push
lods
insl
jbe
in
mov
arpl
shll
add
stc
clc
sahf
outsb
imulb
sub
roll
lcall
icebp
pop
cmp
lds
cmp
in
std
dec
arpl
negb
repnz
in
imul
fs
adc
aam
into
xchg
mov
enter
notb
fwait
mov
push
pop
popf
cli
shll
repz
aaa
into
dec
cltd
push
mov
xchg
repnz
psadbw
sub
and
mov
lds
mov
or
fcmovnb
inc
cwtl
xchg
mov
cmp
icebp
lahf
xchg
pop
cmp
imul
pop
mov
rep
cmp
clc
cmc
push
ds
shlb
decb
test
cld
push
xor
cli
je
mov
pop
sbb
xchg
sub
fdiv
loope
pusha
out
xor
adc
or
push
test
push
ljmp
pop
push
lahf
sub
xchg
std
insl
jns
pusha
jg
and
ret
mov
decl
xlat
jp
gs
popf
sbb
call
add
push
ret
push
mov
push
clc
iret
and
ret
mov
or
mov
clc
je
aad
mov
mov
pop
test
clc
roll
and
je
sub
adc
loop
int3
add
add
add
jecxz
push
mov
pop
adc
mov
jl
cmp
xor
aam
jl
add
loop
orb
add
pop
inc
xchg
and
call
add
cmp
ss
out
nop
arpl
xchg
dec
shrl
pushf
sbb
add
inc
nop
dec
andb
add
xchg
shr
lock
test
mov
dec
out
sub
lret
jl
stos
loop
xchg
ja
xchg
in
loopne
in
rclb
cmc
es
dec
pop
xchg
mov
iret
mov
pop
fisubrl
stos
cmp
test
iret
cmp
sbb
ljmp
mov
std
dec
adc
jbe,pt
test
ss
mov
sbb
int3
ret
int3
mov
sub
and
dec
sahf
aaa
aam
lea
xchg
pop
nop
pop
push
cmp
pop
andb
push
clc
or
xlat
mov
js
insl
pop
mov
subb
sbb
arpl
jbe
sbb
pushf
push
sahf
imul
shrl
andb
jbe
outsl
lret
clc
addl
and
aam
decl
insb
cmc
or
pop
dec
inc
sub
inc
arpl
mov
sbb
push
mov
or
fldl
pop
nop
adc
mov
lret
push
cbtw
push
loop
adc
push
dec
leave
lock
adc
xor
shl
mov
idiv
inc
xchg
dec
xor
outsb
xor
xlat
adc
outsb
xchg
xchg
cltd
incl
incl
and
mov
sbb
imul
jno
lret
dec
lea
cmp
inc
fs
dec
pop
repz
mov
and
sub
fwait
or
fwait
dec
xor
inc
xchg
jne,pn
arpl
push
xlat
iret
mov
popa
and
addr16
incl
incl
incl
sbb
pop
push
sbb
xchg
sub
enter
cli
imul
int
cmc
enter
nop
push
pop
add
and
mov
in
sub
pop
mov
ret
outsb
jnp
or
and
mov
notl
cmp
jp
push
dec
fcmovu
sub
orl
and
add
mov
fwait
and
adc
xor
outsl
mov
push
push
lret
add
add
mov
pop
mov
jae
cmp
push
mov
arpl
inc
fldenv
out
inc
cs
js
sbbl
das
jg
dec
mov
xchg
jae
ret
loope
or
insb
cmp
xor
ret
mov
adc
sbb
jge
cmp
cwtl
jle
mov
imul
imul
cmp
sub
and
jno
or
mov
call
sub
adcb
cwtl
sbbl
das
dec
addl
push
repz
mov
mov
out
lcall
mov
sbb
lret
push
addb
adc
aam
sarb
add
add
xorb
movl
fists
adc
into
out
inc
scas
pop
daa
enter
enter
sub
push
fwait
push
jge
xor
cmpsb
cmp
stc
sbb
rcrb
cmp
mov
rclb
mov
cmp
iret
lea
notl
sub
int3
rcl
mov
mov
dec
iret
mov
lret
jmp
int
mov
inc
cmc
push
xor
xchg
lea
inc
arpl
loope
xchg
mov
or
cmp
jb
add
xchg
ljmp
jns
test
inc
std
stos
mov
mov
push
mov
push
inc
scas
or
incl
mov
push
aaa
cmc
arpl
mov
add
add
pushf
cmpsb
cmp
inc
test
xor
int
jl
pusha
les
mov
push
clc
je
mov
jns
push
sub
jmp
lret
fdivl
popf
pop
lods
repnz
shlb
or
clc
and
cltd
mov
sahf
mov
imul
mov
aaa
mov
push
cltd
js
mov
stc
call
pop
sbb
mov
jge
fmulp
cltd
int3
cmp
jne
add
and
push
mov
xlat
fbstp
fildl
or
lea
add
xchg
test
bound
xchg
sbb
pop
inc
out
dec
imul
inc
pop
mov
sbb
mov
push
incl
incl
incl
aas
cmp
lds
idiv
xchg
jg
push
movsb
ret
mov
stc
xchg
mov
add
into
jl
ret
cmp
push
fsubrs
mov
mov
fistps
xrelease
scas
mov
pop
jecxz
cld
dec
xchg
lahf
push
call
fisubrs
xchg
mov
inc
cmc
rcr
jb
pop
mov
jno
xor
adc
movsb
addr16
ja
lea
pop
mov
scas
mov
fstpl
add
add
outsb
push
test
iret
js
cwtl
sub
jb
aad
cmc
sbb
pop
push
mov
loop
int3
jnp
loope
or
out
pop
or
pop
pushf
shl
pusha
adc
sarb
fs
xchg
xchg
es
mov
stc
mov
mov
dec
lahf
jg
out
ljmp
sub
add
mov
shll
les
pop
je
sub
adc
cli
mov
push
jmp
lcall
bound
cmpsl
jp
mov
pop
inc
movsl
call
arpl
aad
pop
ret
sbb
les
lcall
cmc
sbb
sub
popf
test
lock
inc
ret
nop
test
inc
lret
imul
loop
jge
daa
cmp
push
in
call
mov
shr
enter
loope
xchg
lret
call
lret
mov
cmp
stos
xchg
mov
push
push
inc
sahf
mov
pop
stos
or
repnz
sbb
outsb
stc
mov
imul
int3
mov
cmpsb
fs
inc
loope
cmpsb
add
dec
push
inc
fwait
and
xchg
call
loop
test
inc
cld
notb
xchg
movsl
adc
mov
pop
dec
mov
lret
inc
popa
inc
fstp
jno
daa
pushf
out
and
dec
mov
mov
add
scas
lcall
lret
sahf
adc
aam
adc
pusha
adc
pushf
call
cmp
sbb
pop
xor
loope
pop
jnp
or
mov
push
inc
outsl
mov
add
dec
int3
add
sbb
imul
cmp
into
xchg
arpl
sbb
into
repz
rclb
test
xchg
imul
mov
mov
xchg
jecxz
ror
adc
cmpsb
jnp
clc
mov
cld
pushf
dec
mov
jg
scas
dec
repz
stos
test
test
stos
js
mov
inc
inc
sbb
in
mov
mov
ficomps
out
adc
or
fs
xor
fdivl
jecxz
incl
incl
incl
and
je
setno
push
repz
xchg
inc
push
cmp
sahf
sti
jp
call
cmp
scas
sbb
loop
clc
pushf
mov
mov
and
cmpl
xchg
imul
cltd
out
inc
adc
push
rorl
dec
jle
sar
and
xor
push
jge
jl
test
loop
jp
aaa
lahf
xor
cmpsb
inc
in
lret
insb
stc
or
push
jo
imull
add
xchg
stos
push
test
in
mov
lret
jecxz
insb
call
int3
enter
pop
decl
shlb
mov
inc
push
inc
or
sub
adc
repnz
subb
inc
stc
ja
jnp
xchg
test
inc
pop
inc
in
mov
sbb
daa
xchg
push
adc
or
incl
out
adc
dec
nop
mov
es
rorb
or
int3
add
add
ss
mov
jbe
cmp
fldcw
adc
mov
push
cli
sbb
mov
xlat
cli
les
jge
enter
dec
push
leave
sahf
shlb
je
xlat
insb
rcll
lahf
mov
mov
dec
inc
divl
xadd
inc
test
push
mov
addr16
push
into
inc
dec
loop
push
test
mov
mov
enter
insl
lea
jnp
xchg
ss
jbe
loop
popf
adc
jge
popa
inc
in
sub
incl
incl
jmp
and
aas
pop
pop
adcb
jb
jmp
pop
push
clc
or
pop
fcomip
jecxz
pop
pop
adc
inc
sbb
lock
push
push
mov
or
and
jnp
inc
loope
xor
xor
shrl
and
lret
jne
xor
icebp
dec
es
gs
lds
iret
lcall
fs
inc
mov
or
mov
gs
jns
mov
frstor
xchg
notb
inc
sahf
mov
in
int3
add
add
arpl
in
sarl
push
jae
or
loopne
push
mov
fstpl
mov
push
push
pop
cmc
push
leave
and
mov
cmp
mov
inc
xor
lods
sbb
inc
inc
ljmp
dec
call
stc
mov
cmp
pop
in
push
mov
std
mov
jmp
iret
add
push
sub
dec
add
nop
push
jnp
pop
mov
add
push
xchg
pop
lods
jb
aam
sbb
mov
lret
imul
cmp
cmp
pop
lods
adc
lods
xor
push
cli
stc
popa
mov
add
add
pop
jl
pop
aad
push
push
popa
pop
inc
lret
xor
xchg
inc
fldl
sbb
neg
roll
cltd
cwtl
fcmovne
cmp
adc
push
or
orl
and
test
xchg
push
loope
pop
xchg
es
push
call
lock
jnp
and
xchg
cld
and
cmpsb
loope
lods
sub
test
cmp
cmp
and
sbb
int3
out
lock
sarl
mov
mov
inc
pop
dec
ja
inc
sahf
jmp
mov
fiaddl
scas
movsl
jo
and
mov
mov
dec
rsqrtps
mov
mov
and
mov
sbb
sbb
imul
lods
pop
pop
cli
ljmp
xchg
push
sub
mov
aaa
shlb
xchg
and
add
add
test
repnz
mov
inc
xor
add
icebp
sub
ficomps
outsl
ss
jb
cmp
arpl
fisubrl
dec
pop
vpclmulqdq
out
mov
hlt
cmp
imul
jns
insb
add
mov
in
shll
or
push
loope
pop
mov
add
add
mov
in
xchg
jb
in
push
lret
cmpsb
test
jmp
test
push
fs
jae
cmpsb
inc
pop
dec
mov
mov
call
negl
sbb
mov
mov
mov
fcmove
dec
push
aaa
loopne
dec
sub
fnstsw
fyl2xp1
scas
test
mov
mull
fwait
sbb
xor
or
stos
inc
xchg
subl
cmp
mov
cmpsl
aas
std
rorl
mov
pop
pop
int3
ret
cmp
mov
sbb
dec
dec
cmpsl
enter
mov
mov
pusha
cli
pop
imul
mov
decl
outsl
push
cmp
mov
pop
xchg
mov
fisubrl
xor
cltd
div
into
cmpsb
stc
lods
outsl
mov
jno
stc
jb
jg
nop
cmp
dec
xchg
es
lahf
pop
sbb
shrl
dec
inc
jno
test
in
pop
movsb
and
and
daa
out
and
nop
xchg
mov
and
cs
mov
incl
incl
add
lsl
lret
mov
fldenv
bound
icebp
mov
push
out
lret
pop
data16
mov
mov
push
fdivl
mov
add
dec
loope
test
mov
stos
jbe
mov
xchg
push
dec
xor
iret
sbb
cs
dec
and
aam
test
add
ret
test
push
aam
pop
jbe
out
pop
add
or
jbe
in
lret
mov
mov
leave
ljmp
out
pop
mov
jmp
in
ret
cmp
faddp
in
cmp
sub
and
pop
lods
sbb
aam
cmp
push
pop
test
fsubrp
imul
mov
mov
and
and
pop
stos
dec
aad
call
int3
dec
mov
push
les
pop
dec
pop
and
pop
jg
or
inc
cmp
sub
outsl
xchg
sub
sub
fldl
in
in
iret
mov
xchg
mov
decl
mov
ficomps
shlb
fcomps
dec
cmp
outsl
sub
xchg
insb
push
cli
cmc
jmp
mov
aaa
in
jnp
icebp
cmp
in
call
xchg
jle
clc
aaa
nop
pop
add
and
inc
sbb
stos
int
xor
inc
sub
add
popf
mov
outsb
aas
mov
cld
nop
lret
mov
cltd
daa
mov
ljmp
mov
xchg
lock
inc
xor
mov
adc
int3
sub
xchg
test
subl
mov
loop
pop
stc
sub
sub
mov
shrl
popa
mov
aad
aas
incl
shll
cld
push
jl
mov
xor
mov
xchg
call
sahf
mov
cmp
dec
jae
hlt
pushf
inc
add
sbb
ljmp
inc
inc
loopne
push
fs
shll
rolb
xchg
cmpsl
lock
inc
mov
or
rcll
scas
insl
pop
push
call
add
test
stos
adc
mov
sbb
stos
les
std
call
rorl
xchg
add
add
loope
mov
incl
incl
call
in
add
mov
mov
cmp
fwait
std
jl
in
call
fwait
dec
nop
lahf
or
filds
call
test
ja
or
cmp
push
xchg
mov
sub
rolb
sub
or
loop
cwtl
fdivs
sbb
inc
push
iret
popa
xchg
cmp
fs
sub
sub
sbb
jns
stc
call
int3
and
mov
mov
shll
fwait
lret
or
xchg
push
pop
sub
movq
int
add
out
fildll
xchg
fwait
add
dec
sahf
inc
sub
ljmp
lahf
jno
pop
jb
int
mov
push
push
xchg
filds
adc
imul
jne
js
push
repz
mov
clc
sti
jg
inc
scas
jecxz
mov
mov
mov
push
lahf
jecxz
loopne
and
int3
stos
int3
jg
rolb
mov
imul
das
jg
ljmp
mov
daa
mov
add
imul
decb
mov
je
sub
sub
hlt
and
call
adc
pop
outsb
ja
pop
dec
stos
int3
add
add
inc
and
ljmp
fstps
test
daa
cmp
xchg
inc
adc
lods
je
mov
xchg
pop
imul
aas
pop
popl
fistpll
jb
pop
cmp
repz
xchg
jl
ficoms
add
mov
scas
add
addr16
stos
dec
pop
pop
cmp
or
loop
call
std
ret
jp
dec
dec
int3
into
test
clc
out
xor
pusha
pop
lahf
xchg
dec
icebp
dec
iret
mov
andb
add
loop
stc
data16
xor
pushf
pop
mov
shll
xchg
jne
leave
test
dec
mov
mov
aad
jbe
cmp
cmp
mov
xorb
loope
jno
inc
out
and
scas
je
adc
dec
xchg
decl
pushl
cld
scas
dec
shrb
lds
or
icebp
cld
cmp
adc
jl
lods
popa
cmp
add
stos
icebp
push
rorb
sbb
inc
xor
aas
push
shl
pop
aad
add
pop
jb
jecxz
add
inc
adc
in
in
mov
mov
push
cmpsl
mov
cltd
mov
insl
sub
int
adc
mov
jae
adc
xchg
fisubrs
sarb
shlb
inc
push
pop
mov
cmp
test
add
or
xor
pop
jbe
ja
adc
mov
imul
fs
frndint
inc
aad
push
inc
adc
filds
std
xor
dec
jle
or
in
xor
incl
cmp
loope
add
xchg
filds
xchg
movl
mov
int3
lea
popa
or
push
push
call
dec
shlb
aad
test
xor
jno
and
cmp
pop
cli
je
shl
mov
aad
stos
xor
loopne
jp
or
pop
incl
incl
incl
mov
fstps
mov
cmpsl
jnp
fisubrs
aaa
jns
bound
add
jae
adc
or
leave
das
cmc
test
mov
decl
cltd
xchg
and
cli
mov
movsl
lret
mov
roll
es
fsubl
jne
xchg
in
ljmp
cmp
incl
incl
ret
sbb
call
mov
cmp
inc
or
pop
in
ret
push
rorl
or
scas
int3
scas
mov
inc
xchg
push
xchg
les
jle
test
aas
pop
sbbb
xchg
and
mov
in
cmp
pop
shrb
sbb
and
bound
mov
hlt
je
test
and
int3
nop
ret
push
pop
jl
lahf
pop
test
mov
gs
fiaddl
gs
ret
jecxz
ret
xchg
testl
cwtl
and
sub
xchg
add
mull
arpl
std
faddl
out
add
imul
js
scas
push
cmp
sbb
push
xchg
push
xchg
inc
pop
incl
incl
incl
cmp
xor
in
inc
aam
jmp
int
and
repz
ret
imul
test
and
mov
jnp
mov
arpl
out
lock
inc
movsl
push
fnstsw
cli
mov
jo
lcall
dec
lret
insl
or
mov
lcall
lcall
xchg
int
fsub
gs
pop
pop
fs
push
mov
les
cmpsl
pushf
cmp
rorl
cmp
repnz
mov
incl
jecxz
or
das
jo
and
dec
icebp
mov
pusha
mov
call
add
bnd
mov
les
popa
leave
addl
dec
call
frstor
scas
mov
jae
adc
mov
and
mov
push
jb
mov
cli
enter
mov
push
push
popa
inc
mov
in
jmp
cltd
cmp
repz
xchg
jle
dec
sbb
subl
filds
mov
mov
push
mov
mov
jg
das
lods
mulb
aaa
cmp
xor
insb
and
insl
insl
fisttpl
jg
inc
pop
jge
and
xor
int3
add
add
frstor
mov
lret
adc
fildl
ds
pop
arpl
cmpsb
into
xchg
cmp
or
dec
movsl
loope
pop
ficomps
out
loope
gs
push
lds
lock
lods
xlat
imul
and
jnp
into
jp
add
push
lcall
stos
pop
out
xor
sahf
jno
jp
insb
test
jnp
shlb
push
aad
jae
fmuls
rep
int3
mov
lea
add
add
sbb
int3
push
xchg
adc
in
adc
ret
shl
std
inc
mov
pusha
loopne
shlb
pop
ret
movlhps
or
sub
movsb
cld
fmull
adc
mov
lods
loopne
pop
sahf
loope
gs
mov
xchg
popa
call
ret
jle
xchg
out
insl
in
xor
or
int
push
mov
into
push
roll
pop
loope
jge
mov
and
sbb
leave
or
add
add
add
ljmp
scas
pop
stos
mov
and
cmp
popa
mov
fcoml
mov
mov
ret
jl
loope
mov
ljmp
lahf
xchg
cmp
jmp
xor
decl
add
add
pop
mov
mov
mov
popf
jp
pop
sbb
push
ret
decl
jnp
push
adc
jnp
jb
cmp
fdivp
inc
mov
jp
or
rcll
push
fwait
push
and
xor
mov
test
cmpsl
push
call
add
push
gs
and
adc
jg
and
pop
lods
es
lds
ds
pop
push
inc
es
adc
sub
fwait
push
stos
mov
or
lods
adc
mov
xchg
mov
mov
cwtl
pop
push
shrb
xor
mov
lret
mov
nop
dec
adc
cmp
mov
mov
mov
push
insb
jne
push
adc
cli
iret
jmp
jp
push
lret
adc
loopne
xor
addb
xchg
lahf
adc
or
and
imul
add
lds
aas
sarb
lock
push
mov
push
mov
insb
pop
fiadds
mov
xchg
je
dec
je
or
dec
add
mov
stc
adc
movsb
rcrb
sbb
out
mov
sbbl
xchg
fsub
lods
jbe
push
xlat
lret
test
sbb
add
out
inc
sbb
int3
add
add
push
pop
mov
dec
lret
push
int3
sub
push
mov
push
fs
cmp
fs
scas
fnsave
loop
xchg
repnz
or
push
sbb
jl
jecxz
ljmp
stc
mov
cwtl
in
cltd
fcmovb
lret
pop
out
pop
leave
rclb
sbb
cli
inc
imul
ret
sahf
testl
mov
je
scas
xor
mov
bound
insl
ja
add
int3
call
jo
outsl
mov
jns
fsubrl
push
add
aas
or
lret
mov
mov
mov
add
lds
sahf
aad
adc
incl
popf
lods
pop
inc
daa
aaa
dec
mov
mov
mov
mov
mov
shl
les
ror
adc
cmp
mov
mov
xchg
ret
incl
incl
mov
cwtl
jb
jl
aaa
std
push
je
add
loop
push
ficompl
out
jae
jg
cmp
mov
dec
sub
dec
imul
ljmp
jns
push
cmp
in
and
cmp
movsb
dec
ret
sbb
les
xchg
int3
add
add
jns
loope
or
out
ret
mov
xchg
dec
xorl
jne
sub
call
or
mull
and
pusha
fs
inc
cmp
into
push
bound
mov
lcall
mov
pop
xchg
cs
mov
sbb
mov
cmp
ret
xchg
push
sbb
or
ljmp
mov
mov
lods
pop
fistl
pop
shll
popf
lcall
mov
sub
adc
data16
lds
cmp
out
jmp
push
pop
mov
or
mov
inc
aaa
js
xlat
shll
xchg
cli
mov
ret
jnp
les
rolb
cld
push
push
dec
loop
int3
add
add
jbe
les
std
pop
aas
ja
jecxz
enter
pop
subl
pmullw
pop
mov
mov
jbe
mov
mov
mov
jecxz
subw
repz
lret
pop
xor
cmp
push
iret
jp
andb
mov
cmpsb
lea
mov
add
cld
pusha
and
out
int3
cltd
mov
dec
pop
cmpsb
mov
pop
push
mov
call
lods
mov
jno
scas
movsb
inc
cmp
fldcw
incl
incl
data16
adc
mov
int
aas
push
inc
inc
loope
les
push
mov
mul
ja
cs
test
adc
mov
mov
mov
fisttps
sub
je
cli
jne
pop
shr
aam
xchg
ja
dec
mov
daa
jbe
movsl
mov
bound
add
into
sbb
jnp
ret
xchg
lret
add
inc
pop
push
outsb
sbb
dec
in
adcl
ss
cs
arpl
add
in
inc
out
cmp
aaa
mov
push
push
enter
ret
rolb
loopne
loopne
mov
cmp
add
pop
repnz
test
test
pop
insb
pop
rorb
pushf
les
js
ffree
sbb
pop
mov
pop
ret
jp
mov
xor
mov
mov
dec
adc
mov
sbbb
movsl
inc
jp
add
and
shrl
pop
lea
shrl
or
mov
add
add
incl
inc
inc
movsl
inc
xlat
fwait
pop
gs
aas
lea
mov
stos
jns
cmpsl
or
mov
xchg
cmp
gs
mov
sbb
cmpsb
and
fidivrl
pusha
sub
mov
decl
jg
xor
mov
loope
test
push
add
and
stos
or
cmpsb
and
mov
fwait
lock
popf
bound
cld
mov
sarb
xlat
pop
in
xor
ss
pop
int
push
ret
cmp
fwait
pop
mov
add
sub
daa
rorl
dec
or
aas
xchg
push
pop
dec
mov
out
jmp
pop
mov
filds
scas
sbb
push
test
mov
imul
int3
call
insl
test
push
int
xchg
es
sub
inc
cwtl
cmp
inc
and
mov
sbb
cmp
inc
push
sub
push
cmpl
arpl
mov
and
mov
mov
push
in
lods
pop
adc
fistps
int
mov
test
cmp
outsl
mov
mov
sbb
and
xchg
addr16
jo
or
xchg
add
add
pop
adc
mov
or
push
xchg
movsb
push
ret
lock
mov
fisttps
mov
movb
aaa
test
push
shll
sbb
lock
mov
loopne
sbb
or
das
jo
cmp
mov
cmp
add
sti
inc
shll
rclb
mov
ret
sbb
sbb
push
or
rolb
pop
popf
dec
cmp
pop
inc
sahf
gs
jae
mov
int3
shlb
jne
icebp
idiv
leave
call
pop
sub
dec
loopne
inc
fs
stc
dec
cmp
in
ja
sub
mov
les
sbb
mov
shl
xlat
push
cmpsl
or
outsl
std
stos
es
push
imul
jbe
dec
sahf
dec
jge
pop
cmp
pop
cltd
xchg
fildl
addr16
jno
xor
and
icebp
cmpsb
pop
adc
rolb
daa
cmpsb
call
or
or
mov
xor
inc
mov
push
in
sbb
pop
lcall
xor
xchg
lret
insb
lea
mov
addr16
in
mov
sti
dec
nop
stc
mov
popa
rcrb
lret
mov
sub
out
cmp
pop
pop
out
lret
mov
mov
andl
push
pop
rorl
cli
nop
outsl
imul
loop
mov
mov
pop
pop
cmpsl
push
xchg
cltd
mov
and
dec
xchg
and
xchg
jecxz
aas
leave
sub
in
or
mov
int
iret
ja
dec
jnp
sub
ss
pop
lods
cltd
mov
xchg
dec
and
test
mov
sub
push
push
add
pop
inc
mov
mov
xlat
mov
push
jns
aad
mov
mov
and
xor
ja
sbb
cmp
repnz
ret
push
dec
mov
pop
adc
insb
add
lret
ljmp
pushw
xchg
sbb
int3
call
xor
mov
inc
fsubl
xor
lods
mov
xorl
andb
mov
inc
fcos
divl
inc
ds
jbe
je
adc
push
xchg
fnstenv
iret
dec
aas
imul
sub
add
in
pusha
pop
outsb
jnp
or
xor
test
rcrb
or
push
std
call
xor
pop
ljmp
mov
push
push
mov
xor
fsubrl
add
outsl
add
pushf
test
aaa
fldl
popa
or
call
out
mov
xchg
sub
add
and
scas
xor
lcall
fucomi
js
mov
mov
adc
cwtl
or
mov
pop
popa
and
ret
sub
sbb
gs
xchg
xlat
ds
mov
mov
mov
jbe
push
push
and
or
gs
inc
add
sub
sbb
fwait
pop
scas
out
pop
sbb
mov
cmp
ja
addr16
dec
add
mov
pop
mov
and
push
jmp
idivb
mov
notb
in
in
mov
push
mov
iret
and
cmc
or
jbe
lret
loopne
jmp
sub
testb
mov
lea
pop
cld
or
inc
sub
mov
stc
fcomi
data16
lret
fcmovnu
pushf
pop
push
fst
pop
adc
mov
xor
in
int
or
aad
pop
jmp
iret
call
fistpl
push
xchg
xor
mov
negb
or
ret
xchg
mov
cmp
decl
xchg
pop
fstpt
stos
jbe
xchg
into
inc
cmc
jge
add
int3
incl
fisubs
imul
outsl
das
cmpsb
push
negl
push
mov
dec
mov
push
insb
imul
cmp
inc
scas
mov
jae
mov
and
xchg
add
cmpsb
cmpsb
pop
icebp
call
xchg
movsw
sbb
sbb
imul
pop
fs
mov
ret
rorl
outsb
push
xor
mov
xchg
pop
or
sub
jns
xchg
stos
jnp,pt
sbb
mov
cmp
shll
jae
jl
add
ret
add
jg
ret
cmp
es
or
loop
rcll
push
sub
loopne,pn
lods
stos
das
push
inc
jg
pop
imul
push
cmp
and
addb
inc
int3
add
push
sub
mov
jg
leave
jmp
adc
andb
dec
movsb
push
leave
mov
lods
lret
int3
add
sbb
adc
pop
jmp
jbe
cltd
fldl
dec
inc
sarl
cmc
and
mov
lcall
jg
mov
pushf
arpl
mov
mov
lods
aas
mov
xor
adc
pop
scas
aad
xchg
dec
adc
pop
aam
xor
lods
adc
cmp
inc
das
popa
jmp
xchg
std
les
call
int3
lea
mov
js
stos
shl
jg
pop
and
test
idivl
push
inc
aam
push
test
cld
sbb
cmp
shll
jne
mov
mov
mov
loope
jae
sbb
js
fs
jo
inc
popa
or
adc
sub
cmp
jb
xor
outsb
das
movsl
es
aam
jl
add
arpl
add
aad
mov
xchg
jae
mov
push
shlb
push
int
cmpsl
loope
xchg
pop
int
stos
sub
loopne
icebp
xlat
xchg
and
rclb
rcll
mov
lock
mov
cwtl
mov
int
sub
hlt
popf
outsl
xor
inc
fisubrs
push
out
loope
std
xor
push
mov
std
bnd
mov
iret
sahf
inc
and
ss
or
sub
scas
sbb
dec
mov
call
add
pusha
dec
mov
sub
xchg
and
push
xor
dec
call
shlb
test
int3
call
push
lcall
push
lock
sub
lds
andb
lahf
jge
fiadds
bound
stos
cmp
in
pop
push
sub
cmpsl
cmp
stos
xor
and
insl
out
fs
in
and
addb
repnz
addl
ds
dec
xchg
mov
andb
xchg
inc
lea
xchg
inc
pop
ss
fwait
into
lahf
lcall
pop
das
inc
mov
mov
add
stos
ja
and
push
jne
addb
fdivs
scas
aad
mov
in
mov
mov
mov
fwait
cld
jnp
loop
test
or
movsl
test
push
movsl
jmp
imul
add
cwtl
xor
sbb
paddusw
lock
jg
or
insb
movaps
test
repnz
xor
decb
and
icebp
push
push
add
imul
mov
outsl
subb
jo
pop
orl
dec
outsl
jecxz
mov
sub
movsl
fildll
dec
adc
jb
adc
dec
imul
cmp
xor
pushl
aam
mov
xchg
flds
out
jmp
retw
fildll
fisttpl
scas
and
sti
mov
jle
mov
mov
mov
mov
daa
les
xchg
dec
mov
ds
bound
icebp
inc
movsl
in
fwait
mov
js
popf
nop
mov
call
mov
jmp
fnstcw
inc
mov
pop
test
xorb
add
pop
int
fsts
pop
dec
aam
daa
cwtl
or
adc
addr16
mov
mov
in
jp
inc
xor
mov
xor
scas
push
jnp
add
jb
imul
push
lret
mov
scas
arpl
push
arpl
xchg
leave
mov
popa
stos
push
or
addl
mov
push
xchg
lcall
adc
sub
jbe
call
sbb
popf
inc
repnz
mov
imul
xlat
insb
adc
cmp
jge
cli
cmpsb
dec
and
addr16
insl
aad
jp
or
pop
pop
movsl
ljmp
insl
imul
pop
sbb
pushf
pop
addl
jb,pt
rorb
mov
ss
lret
adc
xor
ss
mull
ljmp
push
es
ds
jl
inc
iret
jp
imul
shll
mov
and
mov
add
add
sbb
jb
adc
push
cld
and
sub
push
adc
sbb
shlb
cmpsl
jno
fnsetpm(287
inc
pop
ljmp
adc
dec
lods
negb
push
xor
repnz
xorw
in
arpl
lret
and
sarl
dec
mov
int
mov
pop
inc
mov
rolb
sub
daa
push
mov
push
cmp
xor
mov
xchg
xchg
lea
sub
and
push
sbb
mov
jns
pushf
mov
mov
movsb
enter
pop
jge
cmpsb
push
xchg
pop
orb
or
outsb
sub
or
sub
mov
iret
xor
add
xchg
mov
inc
mov
or
sub
inc
je
out
popa
ss
cwtl
std
rcrb
rorb
in
push
sbb
cld
mov
mov
cmp
mov
lret
aaa
xchg
ds
popf
pop
push
push
xor
sub
jo
push
dec
test
cmp
pop
js
mov
cmp
add
test
cmp
clc
push
shl
jmp
adc
repnz
lcall
sbb
insl
sbb
fists
dec
lods
lea
bound
imul
imul
mov
push
xor
add
mull
jge
ja
pop
loopne
test
bound
sahf
es
fwait
leave
cmp
int3
decl
aam
int3
add
add
add
into
jp
mov
mov
xor
ja
and
mov
dec
sbb
call
mov
fcmovu
stc
push
cwtl
inc
cmpsl
xlat
call
ficomps
flds
jbe
sub
jb
xor
dec
jmpw
ret
inc
pop
push
ja
out
test
loopne
push
and
fisubs
stos
xchg
ret
loop
lcall
inc
lock
jns
movsl
fcmovnbe
sub
fisttpll
inc
ljmp
leave
ret
insb
push
popa
jle
jmp
pop
mov
fwait
dec
inc
mov
mov
cli
and
pop
dec
loopne
jo
add
inc
jp
call
add
mov
mov
push
sub
xor
or
lock
dec
out
xchg
lcall
lea
adc
mov
pop
movsl
mov
jnp
adc
cld
dec
inc
test
add
adc
aaa
inc
inc
pop
cmp
dec
inc
sub
stos
dec
orb
xor
imul
cmp
adc
in
mov
jge
or
lcall
test
call
lock
xlat
mov
jle
or
nop
in
mov
dec
xor
add
add
adc
fucompp
loope
ss
psubusw
push
ss
jp
inc
push
jnp
call
push
lods
dec
jne
push
or
shl
outsb
ds
mov
ds
add
add
add
mov
adc
lods
push
pushf
jo
cmp
xor
dec
mov
dec
xchg
enter
es
mov
mov
addr16
dec
inc
test
jl
push
mov
mov
loope
xor
stc
subb
sahf
jle
sarl
ret
int
push
mov
sub
icebp
push
out
leave
dec
les
xlat
js,pn
sbb
push
add
ja
add
das
aad
mov
fldl
lret
mov
call
addl
adc
leave
arpl
mov
scas
dec
frstor
retw
mov
mov
pusha
mov
das
xchg
ret
jb
mov
int
pop
out
nop
mov
ds
hlt
push
sub
enter
add
xchg
into
out
scas
fidivl
add
clc
dec
or
push
popf
pop
jbe
cmp
sbb
mov
jle
push
imul
sti
pusha
jo
cwtl
popf
mov
adc
les
out
lret
adc
jg
into
mov
outsb
cmp
lret
inc
rcr
std
inc
mov
shll
mov
mov
leave
sub
out
dec
inc
dec
rorl
mov
dec
mov
hlt
push
mov
leave
lret
xor
in
iret
cmp
out
mov
pop
das
dec
sub
sbb
dec
cmp
repnz
lock
lds
dec
pop
std
cmp
xor
add
add
or
lcall
xchg
loopne
aaa
or
pusha
add
incl
incl
incl
add
loop
xchg
mov
cmp
xor
adc
xor
lea
mov
xor
stos
adc
flds
clc
inc
lret
fimull
jecxz
pop
mov
or
mov
inc
lcall
jg
mov
sbb
cltd
jg
cmp
adc
rolb
mov
jnp
daa
test
int3
call
outsl
stos
ds
rclb
leave
push
call
or
daa
mov
push
sti
pop
lcall
cmp
or
lods
push
sbb
push
mov
hlt
shr
sub
jg
outsl
pop
or
ds
repz
mov
in
enter
cmpsl
clc
pop
cli
or
mov
mov
mov
sbb
lds
sub
mov
pop
mov
dec
ret
ret
xchg
and
adcl
mulb
cs
add
out
adc
jmp
lock
dec
movsb
lods
mov
mov
jl
imul
sub
je
lock
sub
add
and
mov
jns
rcl
test
outsb
push
inc
push
inc
add
or
lret
clc
je
mov
out
adc
clc
fiaddl
dec
push
int3
xchg
ret
xor
in
push
jne
fbstp
jp
push
add
xchg
loopne
or
sbb
jno
decb
cmpsb
xchg
fcoml
pop
mov
mov
push
add
pop
jmp
fmuls
cmc
pop
dec
xchg
push
xchg
aaa
adc
sub
xor
jecxz
pop
les
dec
inc
push
cmp
lods
cltd
xor
add
mov
adc
movsl
test
loop
xchg
rcll
dec
dec
lahf
js
add
shll
or
cmp
shl
fisttpll
inc
addr16
push
in
sub
dec
test
mov
xor
jecxz
push
xlat
sub
movsl
insl
cmp
add
jbe
push
test
sbbl
aad
mov
add
pop
repz
mov
fucom
push
into
ds
xor
cmpsl
out
aas
jae
call
imul
xor
fldl
insl
bswap
in
int3
lahf
test
fdivr
das
fists
call
loopne
mov
shlb
pop
xchg
scas
dec
adc
jno
shlb
lahf
call
push
popf
bnd
cmp
cmovae
cs
repz
jp
jns
or
or
cmp
out
mov
xor
push
in
jge
mov
cmp
and
and
shlb
add
enter
push
faddl
dec
push
inc
mov
imul
mov
cld
pop
inc
out
movsb
dec
or
add
add
lcall
mov
jge
cmpsb
mov
std
rclb
cmpsb
shl
mov
inc
jle
xor
loop
jno
icebp
lock
out
jecxz
xchg
loope
jl
ret
jg
and
aam
ds
insb
hlt
dec
lods
jmp
pop
pop
pop
push
test
jnp
sahf
mov
in
arpl
fwait
lahf
xor
pop
int3
pop
sub
insb
pop
add
movsb
fwait
cmp
mov
ss
cltd
inc
inc
or
sahf
fmuls
xor
and
mov
push
dec
test
pop
hlt
mov
mov
mov
add
jae
not
out
test
rcl
sbb
mov
ret
adc
mov
scas
stc
int3
jo
jmp
leave
jo
pop
jge
fs
mov
dec
adc
pop
cmp
pusha
xchg
xchg
pop
cmpsb
iret
outsb
pop
xlat
dec
cli
push
outsl
push
js
mov
int3
add
add
pop
lret
mov
xchg
pop
aas
pop
pop
jnp
loop
lret
push
push
mov
in
push
fldenv
roll
clc
mov
int3
call
cmp
sub
pop
add
dec
lcall
emms
arpl
inc
jno
hlt
add
mov
mov
shlb
or
push
and
scas
je
pop
push
fwait
ds
add
xor
popl
and
adc
add
arpl
es
cmp
ja
cmpsl
push
mov
psubd
fstpt
out
das
adc
push
inc
fcomi
popa
loop
sbb
aam
cmpsb
loopne
and
outsl
lock
leave
bswap
stc
mov
pop
push
push
or
iret
fisttpl
jl
sub
stc
lds
incl
incl
adc
idivb
leave
add
pop
adc
xor
cmp
and
mov
rorl
testl
jle
hlt
in
mov
xlat
dec
mov
sub
xchg
and
sbb
push
jge
testb
lahf
xor
and
or
jne
pop
cmp
ret
sbb
mov
ja
movsb
push
xchg
aam
xor
shll
adc
incl
incl
jmp
sub
xor
mov
aaa
jg
add
push
add
out
mov
cmp
xchg
and
add
ficoml
arpl
cmp
mov
adc
mov
mov
mov
std
push
popa
jne
xorl
aas
or
stos
mull
xchg
movsb
test
sub
pop
pop
sub
push
push
lcall
call
xchg
cmc
fidivl
cmp
test
and
xchg
push
sbb
push
rorb
add
loopne
cwtl
jmp
mov
fstp
xor
test
jge
mov
mov
insl
sbbb
aaa
dec
jbe
dec
testb
push
mov
fstps
xchg
pop
mov
imul
test
ja
incl
incl
call
icebp
xchg
adc
xchg
mov
add
push
pop
out
push
cmpb
aaa
or
shll
dec
test
stos
scas
pop
xor
push
cmp
and
pop
movsl
int3
add
bound
outsb
movsb
test
int
or
ret
mov
test
call
sbb
sti
cltd
flds
mov
jo
addr16
mov
repnz
stos
fistpl
push
mov
adc
pop
lds
dec
sub
out
lods
bound
mov
rcl
call
push
jno
xchg
xor
lods
inc
loopne
sbb
dec
lahf
xchg
movsl
movb
cmp
xchg
fsubrp
int3
call
daa
fdivs
mov
mov
js
xorb
test
jmp
add
sub
cld
mov
xor
imul
sub
mov
mov
mov
fistps
ret
int
or
mov
aaa
cld
dec
ja
fistps
in
inc
mov
push
js
loopne
add
adc
std
mov
xor
rorb
add
xchg
add
inc
andb
mov
pop
add
cmpsl
adc
insb
add
xchg
xor
lock
les
adc
sbb
mov
je
mov
aad
pop
mov
scas
or
push
pop
decl
adc
add
call
outsb
adc
popa
ss
scas
dec
out
ret
call
xor
mov
push
dec
dec
adc
push
pop
call
dec
dec
cmc
shll
test
decl
movsb
clc
lret
ss
in
daa
popa
cmpsl
test
lods
cmpsb
js
jb
andb
push
mov
adc
pop
iret
fmulp
jae
lods
adc
test
and
cs
lcall
push
pop
rclb
mov
or
fdivs
jg
adc
in
xchg
ljmp
decl
pop
lea
dec
sti
adc
cld
push
negb
dec
loop
sbb
push
xor
mov
pop
xor
mov
imul
mov
push
fdivs
pop
jnp
dec
stos
adc
sub
xchg
xlat
stc
mov
dec
data16
fcoms
lahf
imul
call
lcall
lahf
pop
mov
lods
icebp
push
inc
ds
inc
scas
and
xlat
inc
aam
mov
sahf
inc
imul
outsl
push
iret
pop
dec
mov
jge
adcl
jbe,pt
lret
mov
aad
jae
mov
int3
call
mov
cld
mov
in
cmc
push
mov
mov
mov
repnz
jmp
insb
sti
daa
cmp
xor
push
aam
or
ficoml
movb
lock
add
fcomip
jne
adc
cmp
jbe
cli
cs
sti
aam
inc
cmp
repnz
lods
add
out
repnz
dec
ds
sbb
push
repz
daa
loopne
pop
dec
fcmovne
add
sti
fmulp
fdivl
das
int
sub
into
mov
lret
inc
mov
int3
call
aam
xor
push
das
jecxz
addb
push
icebp
mov
sbb
jmp
mov
pusha
or
cmp
dec
scas
jge
xchg
pushf
loopne
pop
mov
dec
sub
cmc
pop
mov
and
push
inc
xor
shll
ss
sub
jg
sub
sub
test
mov
mov
or
mov
mov
jl
xlat
push
add
sub
mov
fwait
pop
cmp
inc
dec
xor
pop
in
xor
or
xchg
pop
rcll
push
nop
stc
mov
lahf
add
jnp
push
add
int3
add
inc
loopne
dec
jl
mov
add
loop
or
xor
inc
xchg
push
sbb
loopne
fisubrs
pop
jle
mov
xchg
xor
dec
test
mov
xchg
jnp
xor
sbb
scas
imul
sub
aad
rcrb
fidivs
mov
dec
mov
pop
int
jnp
movsb
pusha
shr
xlat
xchg
sarb
add
out
push
repz
sbb
lcall
fsubl
adc
adc
pop
pop
xor
push
and
leave
test
into
lods
cs
jg
cld
jnp
ret
mov
mov
and
add
or
push
xor
cmp
hlt
jecxz
int3
add
sar
pop
lods
call
mov
sti
out
loop
mov
add
push
and
sbbb
cmpsb
sbb
lock
sub
lds
xor
pop
and
in
outsb
leave
mov
lret
or
dec
aas
js
jbe
inc
add
mov
mov
sub
mov
inc
push
jmp
add
mov
mov
adc
stos
sahf
mov
andl
push
push
inc
mov
dec
out
jbe
or
clc
icebp
in
movsl
jmp
out
push
negb
cmpsl
ds
inc
divb
add
je
dec
mov
sub
sti
enter
insl
adc
mov
rcrl
lock
mov
rolb
mov
dec
inc
push
aas
call
mov
push
iret
lret
adc
lret
ljmp
pop
cs
decl
test
ficoms
pop
xchg
lret
mov
and
jmp
in
xor
dec
inc
cmp
mov
mov
sub
sahf
and
test
xchg
and
jbe
push
lds
or
out
out
cltd
in
outsb
popf
push
loopne
mov
out
psubw
jne
imul
call
fisubrs
in
lahf
cmp
or
int3
sbb
mov
mov
xchg
lods
and
dec
iret
aad
out
adc
iret
incl
incl
pushl
into
aam
jp
out
xchg
movsb
push
out
dec
cli
test
xor
scas
pop
dec
mov
mov
xor
xor
push
and
orb
xchg
enter
pop
inc
pop
mov
sbb
inc
push
cmp
ficoms
adc
cltd
cmp
push
xchg
ljmp
mov
push
sbb
mov
mov
inc
push
and
fs
fwait
insb
test
inc
or
inc
int3
add
add
xor
aam
cmpsb
clc
xor
add
iret
pushf
icebp
nop
iret
shrl
mov
jmp
imul
int3
call
jbe
and
cmp
loope
jle
mov
push
add
jmp
mov
or
fsubl
out
sbb
dec
dec
dec
sub
inc
mov
mov
and
lcall
mov
pop
dec
bound
jg
js
aas
in
dec
inc
xchg
sbb
dec
add
push
push
xlat
inc
mov
clc
push
sub
sahf
push
cmp
inc
fistps
idivb
mov
add
enter
dec
lahf
into
sahf
dec
call
insb
pushf
in
mov
pusha
pop
and
inc
aas
adc
push
push
call
fbld
dec
mov
fmuls
add
pop
or
mov
imul
hlt
call
adc
jne
or
xchg
push
and
shrl
add
and
or
xor
fcmovbe
fstl
push
jp
pop
ret
mov
mov
push
mov
je
or
pusha
mov
xchg
mov
addr16
inc
mov
int3
call
pusha
xchg
adc
mov
loop
push
hlt
imul
jbe
out
sub
lret
imul
into
cli
add
jbe
mov
xchg
mov
push
dec
stc
into
xchg
rcll
mov
jo
add
pop
mov
scas
aam
adc
push
mov
cmp
dec
pusha
daa
fsubr
inc
arpl
push
add
jmp
dec
loopne
cmp
mov
adc
push
popf
xchg
test
mov
adc
and
mov
mov
mov
pop
or
hlt
or
sub
xlat
cmp
xor
mov
imul
dec
in
sarl
adc
addr16
out
decl
mov
or
xor
ret
daa
nop
xor
jl
mov
jns
fidivl
push
push
lock
icebp
add
test
mov
sub
das
pop
or
out
incb
add
cmp
outsl
bnd
cmp
push
les
imul
cmp
in
inc
cmpsl
jo
push
les
push
sbb
test
ficomps
jge
adc
movsb
mov
mov
mov
jb
jmp
aas
xchg
out
jmp
jg
push
stos
fwait
lods
xchg
int3
push
jns
fistps
inc
pop
xor
mov
ds
dec
xchg
insb
rcrb
das
push
test
int
lods
sub
scas
gs
mov
sub
mov
push
movsl
out
ds
add
and
aad
out
pop
out
dec
or
cmovno
sub
cwtl
mov
fs
js
fnstsw
ret
inc
aas
jno
int3
add
cmp
icebp
xchg
jne
test
loopne
ret
mov
pop
pop
mov
adc
int3
call
fstpt
imul
dec
mov
mov
pop
in
pushf
lods
add
sbb
cli
int
clc
dec
fs
subl
push
lcall
outsb
inc
mov
fistpll
dec
daa
jecxz
mov
incl
incl
incl
or
add
sbb
jecxz
cmp
jge
ficoml
mov
lods
sub
fstps
cwtl
push
clc
xor
fwait
add
js
test
xor
out
mov
popa
jle
jmp
pop
mov
mov
mov
leave
cmpsl
adc
int
mov
movsb
dec
push
cmp
out
clc
cmp
and
or
sub
mov
rorl
fldl2e
pop
adc
dec
pop
xor
dec
push
mov
jne
mov
adc
jo
roll
or
fsts
in
rclb
add
add
push
pop
loopne
sbb
xchg
dec
sub
nop
call
movsl
aas
add
inc
fistl
lret
pop
push
scas
mov
call
sbb
inc
push
ds
lahf
xor
jnp
cltd
fcmovne
pop
inc
sub
cmp
xor
sub
mov
or
ret
das
outsb
and
xchg
mov
cmp
out
or
cld
lcall
and
incl
incl
incl
pusha
jne
shll
cmp
xor
adc
cwtl
and
mov
adc
ret
inc
and
push
pop
or
ljmp
daa
and
lret
adc
push
adc
push
sbb
mov
push
jg
hlt
adc
dec
and
sahf
loope
aad
mov
cld
test
add
push
cmpsl
call
imul
fnstenv
xor
cld
mov
je
cmp
adc
out
push
ds
ds
sbb
cltd
test
nop
fnstsw
xor
lret
inc
lret
add
vpshaw
xchg
aam
push
dec
mov
loopne
and
mov
sub
cmpsb
mov
jo
xchg
inc
fstpt
mov
pop
dec
xor
push
stos
roll
aas
push
out
mov
mov
int3
inc
inc
push
mov
lahf
xchg
dec
es
call
lret
mov
aaa
cmc
in
das
mov
jle
push
fwait
pop
aam
cmpsb
lret
out
test
sbb
int3
push
in
push
or
cmp
and
inc
and
lea
and
xlat
sbb
cmp
pushf
pop
addr16
mov
cmc
push
or
sbb
pop
das
mov
xor
jecxz
cmpsb
or
mov
cwtl
ss
fs
mov
into
cmpsb
mov
sub
je
lds
ret
sarl
cmp
addl
out
push
sbb
adc
jnp
cmp
pushl
xchg
sub
ljmp
out
fbstp
aas
and
popf
fisubl
add
mov
dec
sub
mov
xchg
mov
call
mov
adc
xchg
stos
cmp
xlat
xor
stos
xorb
add
mov
xchg
addr16
test
scas
inc
mov
mov
mov
lods
leave
mov
dec
push
je
pop
fsubl
enter
jmp
xchg
in
movsb
in
lret
repz
push
mov
sub
adc
lret
and
rcrl
pop
loope
mov
cmp
popa
lods
int3
add
scas
mov
adc
mov
gs
jne
scas
inc
mov
mov
mov
pop
sub
stos
nop
hlt
fcom
into
lock
ret
add
in
push
fldl
fiaddl
in
es
add
xorl
xchg
cmc
sub
jbe
inc
jbe
sete
sbb
jo
cmp
jo
cmp
xorb
or
sub
dec
imul
jo
cmp
repnz
ss
outsb
imul
call
ljmp
pusha
adc
sbbb
leave
dec
push
fnstsw
push
mov
cmp
popf
sub
enter
addr16
loope
adc
dec
cmpsl
xchg
inc
inc
mov
addr16
sbb
sti
pop
inc
cmp
jns
fnstcw
xor
sbb
mov
mov
adc
xlat
mov
mov
test
rcrl
or
rcrl
fmuls
jns
mov
mov
stos
jbe
dec
inc
call
xor
adc
mov
push
mov
mov
dec
jmp
push
test
frstor
scas
test
clc
lcall
shll
nop
jns
ret
cmpsl
xchg
in
mov
repnz
aad
call
shl
loope
pop
in
loopne
fcoml
push
sub
mov
cmp
jae
dec
xor
and
js
add
or
or
dec
data16
mov
mov
mov
inc
xorl
mov
jl
xchg
inc
and
lds
pop
add
lahf
movsl
test
decl
xor
repnz
aam
dec
mov
jl
addr16
sarb
mov
pop
adc
xor
xor
mov
cmp
es
push
test
sti
rolb
pop
pop
arpl
leave
lods
popf
sbb
mov
out
and
mov
adc
cs
aam
cmc
in
pop
enter
pop
pushf
push
loope
outsb
mov
lahf
mov
mov
mov
mov
maskmovq
idivl
nop
mov
and
lods
stc
pushf
ret
icebp
mov
pop
sub
imul
test
out
inc
ret
pop
mov
push
icebp
pop
daa
scas
int3
pop
test
psubusw
mov
ret
dec
pushl
dec
sbb
mov
jb
shlb
mov
xchg
decl
mov
data16
dec
add
jp
shlb
icebp
negb
icebp
push
neg
into
pop
xchg
out
inc
add
pop
pop
pop
push
or
pop
adc
jb
inc
cmpsl
adc
xchg
js
int
inc
movsb
push
xchg
repz
add
adc
adc
ret
popf
jmp
ret
xor
mov
mov
mov
cltd
ret
mov
add
inc
adc
mov
xchg
jae
in
lcall
pushf
pop
sbb
mov
push
js
gs
test
pop
mov
loope
pcmpgtb
pop
pop
dec
fsubrs
into
pop
pop
popf
stos
inc
jno
push
pop
xor
hlt
rclb
sbb
das
cmpsl
jp
movsl
leave
cli
cmp
scas
int
adc
jecxz
jmp
test
cli
pop
das
aaa
mov
orb
movsb
roll
aaa
mov
mov
mov
fincstp
xchg
in
adc
or
jnp
mov
vunpckhps
int3
add
test
stos
mov
popf
cmp
popf
cmp
subl
add
enter
hlt
incb
lret
js
xchg
ds
mov
cld
lret
sbb
mov
mov
pop
cld
sub
mov
out
lods
pusha
cwtl
nop
lcall
into
mov
sub
addr16
xchg
fdivrs
out
insl
in
or
inc
addr16
pop
out
mov
sbb
sub
incl
incl
fsubr
out
xadd
xor
repz
inc
mov
ficoms
sub
add
mov
mov
mov
xchg
pop
mov
ljmp
jecxz
inc
or
sub
mov
int3
call
aam
push
add
adc
and
pop
xchg
cmp
cwtl
mov
and
test
lods
xchg
sub
jecxz
dec
xchg
cmp
sbb
adc
adc
cmp
pop
jle
dec
mov
cltd
pop
mov
and
cmp
shl
lahf
adc
xchg
fmull
movl
incl
jle
add
scas
imul
sub
insb
mov
or
jns
push
insl
mov
cmc
in
and
pusha
arpl
cli
or
inc
mov
outsl
gs
sub
imul
jmp
notb
adc
adc
jle
dec
test
mov
divb
mov
jnp
gs
push
cmpb
mov
jp
adc
das
stc
imul
call
test
stos
xchg
repz
inc
sbb
pop
cmp
idivb
pop
push
movsl
subb
adc
and
lea
push
out
jns
int
sbb
jns
adc
dec
out
dec
mov
idiv
mov
jne
push
repnz
adc
inc
nop
mov
dec
push
pop
test
call
int3
xchg
xlat
mov
pop
sbb
imul
mov
push
push
stos
push
xchg
data16
mov
mov
cmp
sbb
or
xchg
mov
fcompp
jmp
test
inc
pop
mov
or
testb
dec
jl
fmul
pop
sar
leave
out
lret
dec
mov
jg
insl
les
call
int3
retw
pop
adc
jmp
int
lock
push
pop
scas
lcall
mov
cld
lods
inc
cmc
sub
mov
push
lret
push
out
fs
lret
data16
xchg
pop
inc
sub
inc
ret
sub
mov
mov
mov
mov
dec
je
adc
outsl
sbb
fcompl
pop
mov
jmp
xor
cmp
hlt
fstps
ret
adc
movsl
adc
mov
popf
push
loopne
inc
pop
imul
inc
outsl
push
cmp
add
add
add
and
push
xchg
mov
gs
pop
popaw
nop
pop
outsl
sarl
cmp
pusha
sbb
cs
sbb
aas
bound
push
sub
add
movsb
sti
mov
lahf
cmp
test
mov
mov
push
into
scas
xchg
movsb
aad
fcomps
pop
sub
push
pop
enter
cli
push
mov
int3
pop
fwait
push
dec
out
fidivs
mov
scas
and
scas
jmp
push
les
ds
out
xchg
ret
add
fmuls
sbb
pop
jns
int3
loop
cld
mov
out
mov
decl
cmc
xchg
out
xchg
stc
inc
outsl
test
int3
popa
loope
leave
jl
and
or
rcrl
leave
xchg
out
inc
inc
cmp
in
jmp
pop
les
sbb
cli
sbb
inc
pop
inc
jp
cmp
dec
cmp
xchg
jo
imul
bound
add
xchg
arpl
daa
jmp
mov
movsl
cld
fwait
xchg
jnp
mov
add
outsb
cmp
dec
jae
mov
popa
inc
cmp
stos
jo
pushf
mov
jo
fmuls
jmp
jnp
addl
add
aad
mov
or
addb
mov
ds
std
std
pop
or
sahf
lahf
rorb
sbb
mov
das
cmp
scas
outsl
test
sahf
lcall
pop
inc
iret
adc
bound
mov
mov
repz
mov
cmp
add
sti
mov
xchg
std
and
inc
mov
hlt
pop
fwait
jnp,pn
std
xchg
packsswb
nop
shlb
jge
sbb
and
pop
push
adc
cwtl
lret
pushf
rorl
ljmp
mov
pop
pop
rol
std
in
aam
ret
dec
notl
je
rcrl
push
arpl
jbe
dec
adc
mov
adc
sbb
repnz
mov
mov
inc
xor
in
les
mov
int3
in
jp
pop
orl
xchg
cmp
addr16
add
pushl
fcmovnbe
jo
push
out
adc
shl
adc
dec
push
test
mov
scas
flds
xchg
out
cmp
int3
aad
cmpsl
aad
int3
add
add
sahf
push
int
aad
cld
and
mov
stos
xchg
imul
sbb
fiadds
cmp
in
loop
std
std
insb
xor
daa
xor
push
int
fsubr
inc
out
fiaddl
decl
ret
movb
test
fbld
xchg
mov
add
imul
and
cmp
push
daa
data16
mov
jbe
sbb
int3
add
add
add
idiv
jmp
add
cmp
mov
sub
rcr
cwtl
test
cld
jb
add
add
sub
aaa
pusha
popa
es
pop
fdivp
add
fidivrl
mov
xor
push
lret
rcrb
mov
push
test
fwait
dec
mov
sub
mov
add
push
dec
mov
push
and
mov
fdivrs
dec
mov
addr16
jge
pop
aad
cmp
inc
push
loop
push
movsb
cs
jns
fwait
push
dec
fstp
cmc
rol
imul
hlt
pushf
ffree
xchg
rclb
int3
xchg
test
aas
jae
loopne
fsubs
enter
mov
loope
push
sbbl
dec
fldcw
pop
jle
mov
iret
repnz
push
addr16
in
es
outsb
dec
or
pop
xlat
adc
sub
adc
sub
push
inc
push
jecxz
dec
pusha
in
iret
in
xchg
jae
mov
rol
cwtl
mov
pusha
call
jmp
sbb
mov
shl
push
jo
movsb
fisttpl
jmp
mov
cmp
cmp
mov
addb
sahf
movsl
mov
xchg
inc
push
mov
sub
mov
mov
repnz
mov
mov
clc
sti
enter
mov
arpl
imul
ja
cli
and
push
scas
lea
ret
in
add
lcall
sub
ret
mov
sbb
out
xchg
popa
pop
dec
sahf
or
mov
jne
into
out
ds
sub
xlat
insb
cmpl
mov
cli
lahf
ret
je
scas
mov
imul
aad
cmp
mov
cli
rorl
mov
sub
jmp
push
add
scas
mov
mov
pop
pop
inc
mov
push
lcall
push
push
mov
cmp
pushf
pushf
inc
and
daa
movl
in
xlat
push
movsl
mov
faddl
xchg
jno
hlt
and
sub
add
dec
pop
mov
jle
pop
out
cmpsb
and
jg
or
mov
mov
xchg
xchg
push
xchg
cmp
cltd
inc
les
fisubl
and
mov
ret
adc
jo
mov
xor
adc
mov
pop
loop
rolb
mov
in
dec
and
cmp
adc
pop
rcll
addb
jb
jp
dec
je
test
jno
dec
adc
sbb
call
add
pop
mov
dec
imull
and
push
mov
imull
jge
lret
cltd
daa
das
sub
xchg
aas
aas
pop
xor
sub
push
pop
jp,pt
mov
push
stos
or
mov
push
sbb
mov
aad
mov
mov
call
cld
pop
sbb
sbb
hlt
sub
add
add
jg
pushl
or
pop
cmpsb
mov
ljmp
dec
xlat
out
incl
ljmp
mov
xchg
fisttpl
dec
jmp
imul
push
xchg
ds
jge
and
xor
in
pop
ds
push
jns
repnz
inc
gs
rclb
loop
dec
add
jp
dec
jg
pop
popa
loopne
movsl
insb
and
dec
scas
add
stos
rolb
and
or
xchg
dec
addr16
insl
xor
pop
fucom
fucomp
add
add
test
mov
and
call
cmc
subb
cwtl
jg
mov
sub
push
mov
push
push
decb
stos
cmp
pusha
xchg
arpl
and
fwait
adc
pop
ja
pop
cmp
adc
arpl
xlat
add
cmp
das
xchg
into
repz
adc
add
xchg
pop
sbb
popf
xchg
cmp
outsl
shll
pusha
outsb
repz
je
rcrb
sbb
rcl
decl
pop
lret
jp
loop
and
call
sbb
add
xor
inc
mov
hlt
jns
adc
mov
and
xchg
xchg
xchg
push
sbb
pushf
lret
mov
and
fdivrs
inc
mov
mov
mov
mov
test
mov
dec
sti
sub
and
addr16
add
cmp
rclb
jno
aam
inc
jmp
push
ljmp
mov
scas
stc
inc
icebp
pop
popf
mov
xor
call
and
mov
cmp
cmp
out
mov
mov
mov
pop
adc
pop
sub
enter
mov
push
push
pop
mov
jo
js
leave
fisttps
ret
sahf
xor
test
jecxz
or
imul
add
cmp
mov
enter
ret
push
sti
cmc
mov
and
pop
stos
out
addr16
popf
push
lea
stc
inc
xor
xor
mov
mov
int3
fidivl
dec
out
inc
adc
call
decb
lock
cltd
xor
lods
push
cld
push
mov
dec
and
mov
add
inc
pop
xor
push
jne
outsl
jo
add
arpl
add
add
xor
xor
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
sub
add
add
incl
add
add
add
add
incl
add
add
sub
add
add
lcall
sub
add
incl
add
add
cs
add
add
add
incl
add
add
inc
add
inc
add
incl
add
add
xor
add
add
incl
add
add
ss
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
push
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
decl
pop
inc
add
pop
inc
add
add
add
call
inc
add
inc
add
add
add
incl
add
add
inc
add
incl
add
add
inc
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
gs
xor
cs
insb
incl
add
add
add
add
incl
add
add
inc
add
incl
add
add
addr16
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
jb
add
add
add
incl
add
add
inc
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
add
add
push
jb
add
jae
add
add
add
incl
add
add
inc
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
cmp
add
inc
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pop
cs
add
add
add
add
add
incl
add
add
jle
add
add
add
cmp
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
nop
inc
add
add
add
incl
add
add
jb
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
cmp
xchg
inc
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
dec
lcall
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
popa
add
add
add
inc
add
push
add
into
inc
add
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
into
inc
add
dec
add
into
inc
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
into
inc
add
inc
add
into
inc
add
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
int3
into
inc
add
dec
add
into
inc
add
dec
add
xor
add
xor
xor
add
xor
add
add
mov
push
inc
add
inc
add
xor
add
xor
xor
add
xor
add
add
lods
into
inc
add
push
add
into
inc
add
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
movsb
into
inc
add
dec
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
into
inc
add
inc
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
mov
inc
add
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
add
inc
add
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
pop
into
inc
add
dec
add
into
inc
add
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
into
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
movsb
into
inc
add
inc
add
add
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
into
inc
add
push
add
into
inc
add
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
movsb
into
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
into
inc
add
dec
add
into
inc
add
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
movsb
into
inc
add
inc
add
into
inc
add
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
add
push
add
into
inc
add
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
movsb
into
inc
add
inc
add
int
add
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
movsb
into
inc
add
push
add
int
add
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
movsb
into
inc
add
dec
add
int
add
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
movsb
into
inc
add
push
add
int
add
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
movsb
into
inc
add
push
add
int
add
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
movsb
into
inc
add
inc
add
int
add
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
movsb
into
inc
add
dec
add
dec
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
movsb
into
inc
add
pop
add
push
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
movsb
into
inc
add
pop
add
pop
add
xor
add
xor
xor
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
or
sbb
adc
add
or
adc
or
add
inc
add
rolb
inc
inc
push
add
rolb
inc
dec
dec
add
inc
add
push
add
push
add
inc
add
dec
inc
add
dec
add
pop
dec
add
add
dec
add
inc
add
dec
add
add
dec
add
add
dec
add
add
inc
add
rolb
dec
dec
push
add
rolb
pop
inc
inc
add
inc
add
push
add
rolb
push
push
dec
add
rolb
inc
inc
push
add
iret
inc
add
push
add
iret
inc
add
inc
add
rolb
push
push
inc
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
add
add
lock
inc
add
push
add
inc
add
push
add
inc
add
push
add
inc
add
inc
add
dec
inc
add
dec
add
dec
dec
add
dec
push
add
dec
add
inc
add
push
add
add
dec
add
inc
add
push
add
inc
add
inc
add
inc
add
push
add
inc
add
inc
add
inc
add
dec
add
aad
add
inc
add
aad
add
inc
add
aad
add
dec
add
aad
add
dec
add
aad
add
pop
add
dec
push
add
push
add
dec
inc
add
add
push
add
inc
add
push
add
inc
add
inc
add
inc
add
inc
add
dec
add
push
add
inc
add
aad
add
add
aam
add
add
aam
add
add
aam
add
dec
add
push
add
dec
push
add
push
add
dec
dec
add
inc
add
inc
add
add
push
add
add
inc
add
inc
add
dec
add
aam
add
dec
add
inc
add
inc
add
roll
inc
push
inc
add
roll
inc
push
inc
add
roll
inc
push
inc
add
roll
inc
push
inc
add
dec
add
dec
add
dec
add
inc
add
dec
add
inc
add
inc
add
add
pop
add
add
push
add
roll
inc
push
push
add
roll
inc
push
pop
add
inc
add
push
add
rolb
push
push
inc
add
rolb
inc
inc
push
add
rolb
inc
dec
inc
add
rolb
inc
dec
push
add
rolb
inc
dec
push
add
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
jb
imul
outsl
jb
imul
add
call
inc
add
inc
add
add
add
call
mov
call
mov
jmp
inc
add
add
add
add
incl
add
add
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
les
add
add
sti
lret
inc
add
lret
inc
add
add
add
incl
add
add
add
add
decl
inc
add
inc
add
add
add
pushl
inc
add
inc
add
add
add
incl
fadds
jmp
flds
and
add
add
inc
add
fadds
add
add
push
push
inc
push
mov
lock
jecxz
lods
dec
xchg
mov
cmp
add
add
inc
cmp
gs
dec
jne
jns
jo
bound
add
add
add
in
add
in
add
je
add
lods
fildl
add
fldl
add
add
pusha
fildl
add
add
lock
add
fiaddl
add
loopne
add
add
add
sbb
add
add
add
sahf
loopne
add
in
add
in
add
in
add
in
add
in
add
add
in
add
add
inc
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
outsb
in
add
add
add
cmp
add
sub
add
and
add
push
in
add
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
push
add
pusha
jecxz
add
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
dec
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
add
pushf
loope
add
add
outsb
loope
add
add
push
loope
add
add
xor
add
sbb
add
loopne,pn
add
add
dec
loopne
add
add
push
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
add
add
adc
add
clc
filds
add
filds
add
filds
add
filds
add
add
add
fildl
add
faddl
add
faddl
add
faddl
add
add
dec
faddl
add
add
add
add
test
add
mov
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
outsb
fldl
add
add
fldl
add
fildl
add
fldl
add
fldl
add
add
add
add
push
filds
add
add
sub
add
adc
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fldl
add
fiadds
add
fiadds
add
add
jp
add
data16
add
add
add
add
orb
add
adc
add
pop
add
orb
add
or
add
or
add
add
add
sub
push
imul
outsb
outsl
ja
gs
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
dec
add
je
jb
jo
add
mov
push
outsb
jb
imul
je
gs
add
inc
jb
popa
je
dec
outsb
jne
add
gs
imul
jae
add
inc
imul
push
imul
jae
ret
add
insb
imul
je
add
add
jae
dec
gs
popa
addr16
add
xchg
add
jbe
insb
imul
je
add
add
jo
jns
insb
imul
add
or
imul
add
xchg
add
je
outsl
jns
outsb
jne
pop
add
je
jns
je
insl
dec
gs
imul
dec
popa
jo
imul
imul
inc
gs
arpl
dec
outsb
outsw
add
push
imul
js
push
add
inc
add
outsb
fs
gs
popa
addr16
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
fs
imul
add
inc
imul
jae
popa
addr16
add
popa
add
gs
je
push
imul
push
add
inc
gs
jns
inc
outsl
insb
outsl
jb
in
dec
gs
popa
addr16
outsl
js
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
push
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
imul
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
arpl
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
arpl
push
add
inc
push
xor
cs
insb
add
push
push
xor
xor
fs
insb
add
push
add
je
inc
fs
gs
gs
dec
gs
fs
push
add
push
add
je
dec
jo
outsb
push
gs
gs
push
add
pop
add
je
push
jne
jb
dec
outsb
outsw
push
add
pop
add
je
push
outsb
fs
gs
gs
push
add
imul
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
add
dec
outsb
je
jb
gs
jb
arpl
jb
push
add
dec
outsb
je
jb
gs
jb
outsl
jb
insb
add
xchg
dec
outsb
je
jb
gs
gs
outsl
outsl
imul
add
xchg
add
je
jb
gs
jo
outsb
push
add
gs
gs
jne
jb
inc
popa
je
inc
jbe
imul
cltd
add
je
jb
gs
jne
jb
dec
jo
imul
add
je
jb
gs
gs
fs
imul
outsb
je
jb
gs
gs
jo
imul
add
je
jb
gs
jb
je
inc
imul
je
inc
outsb
fs
gs
gs
push
add
dec
outsb
je
jb
gs
je
gs
jo
inc
outsl
outsb
outsb
arpl
pop
add
je
push
outsb
fs
gs
gs
inc
js
add
push
dec
dec
dec
dec
inc
push
cs
insb
add
push
gs
gs
imul
add
arpl
insl
je
gs
gs
gs
je
arpl
imul
pop
push
jo
inc
imul
jae
insb
imul
popa
insb
add
dec
fs
gs
gs
popa
insb
insb
xor
add
push
gs
jb
push
outsl
push
gs
data16
push
jo
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
imul
jb
outsb
addr16
add
inc
push
push
xor
fs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
fs
imul
gs
imul
push
add
je
imul
gs
add
inc
jb
popa
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
je
inc
outsl
outsb
jae
insb
gs
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
dec
gs
jo
jb
add
push
add
popa
jo
insb
insb
outsl
arpl
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
filds
inc
gs
gs
imul
imul
popa
jae
inc
jb
outsl
jb
add
gs
jb
je
arpl
push
arpl
outsb
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
popa
insb
inc
jo
inc
js
je
add
push
imul
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
sub
dec
jae
popa
fs
jb
je
push
je
add
je
jb
arpl
jae
cwtl
add
je
jb
arpl
fs
jae
add
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
add
imul
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
insb
jae
insb
insb
outsl
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
cmp
inc
jne
jb
outsb
je
push
add
push
add
inc
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
add
je
je
dec
popa
outsb
fs
add
in
inc
insb
jne
push
inc
jne
data16
add
lret
je
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
dec
add
gs
je
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsl
popa
fs
imul
add
cmc
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsb
fs
inc
imul
gs
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
imul
popa
je
add
aas
add
je
popa
je
inc
outsl
jb
popa
je
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
aaa
add
push
popa
insb
imul
add
popa
insb
imul
add
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
cmp
dec
inc
dec
popa
jo
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
popa
jo
je
imul
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jns
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
xor
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
add
lahf
xchg
inc
add
xor
in
jbe
add
inc
add
add
add
push
add
add
add
popa
add
add
add
add
sub
add
add
add
loop
vpcmpeqb
ud0
adc
ss
les
stos
rcrb
inc
shll
js
pusha
or
int3
sub
test
ret
sahf
push
popa
fists
pop
cmp
ret
xchg
outsl
inc
inc
push
lea
mov
loop
lcall
mov
mov
ja
lret
dec
sub
xchg
pop
jmp
les
sbb
mov
aam
and
aas
push
pop
scas
jnp
rorb
fcmove
lret
in
jae
jno
or
fiadds
lahf
xor
adc
inc
divb
nop
imul
jecxz
test
jnp
push
lods
jae
adc
fcmovnbe
repnz
mov
or
xchg
sbbl
lea
out
lret
lods
jns
push
cmpsb
mov
or
lahf
xor
push
xor
stc
mov
or
repz
ret
cmp
flds
inc
mov
cld
mov
sbb
or
mov
fwait
mov
push
addr16
in
adcl
adc
enter
ljmp
push
mov
push
clc
mov
es
xchg
cmpsl
xchg
movsl
sbb
adc
repz
cmpsl
mov
and
jae
data16
pop
add
ret
push
out
mov
and
and
xchg
js
icebp
sbb
push
mov
push
inc
mov
and
pop
fs
lcall
lahf
pop
lahf
addr16
jl
fucomi
mov
pop
mov
cmp
inc
push
testl
dec
sub
cld
test
mov
mov
jmp
in
fnstenv
cmp
fisttps
jo
xchg
push
or
cmp
sbb
iret
fidivs
mov
pop
stc
push
les
cli
pop
and
cmp
in
sub
xor
jmp
and
and
inc
in
cli
sub
inc
push
sub
push
sahf
rclb
push
imul
int
xchg
cmpsb
hlt
push
icebp
dec
rcrl
jle
xchg
into
pop
sbb
sbb
cmp
cs
lods
test
movsb
leave
dec
xchg
nopl
inc
jb
sti
int3
push
jns
les
xchg
ja
push
rcl
shlb
mov
push
loop
enter
mov
mov
fs
adc
cmp
shll
pop
fidivs
inc
out
sbb
fadds
lds
jl
jno
cltd
decl
inc
dec
call
rorb
and
xchg
dec
inc
pushf
mov
cltd
mov
mov
movsb
les
ret
pushl
pusha
and
inc
iret
mov
mov
pop
dec
jle
int
test
ror
add
cmp
mov
lret
movsb
ret
adc
cmpsb
dec
pusha
xor
js
mov
xor
inc
aas
sar
jg
xor
jg
mov
cld
cmp
mov
pop
lods
bnd
pushf
xor
pop
pop
inc
mov
out
ret
mov
push
sbb
or
push
fnstcw
xchg
scas
xchg
inc
pop
inc
jg
inc
jg
mov
cmp
mov
out
dec
push
sbb
lret
push
rcl
lret
imul
cmpsb
inc
sbb
inc
scas
js
push
inc
jmp
enter
dec
add
ss
cld
ds
jb
mov
shrl
lds
pop
testb
or
inc
or
clc
xchg
pop
mov
rcrl
cld
outsb
dec
lock
je
and
and
lret
adc
inc
pop
dec
xchg
jecxz
dec
aad
inc
jns
jecxz
dec
insl
repnz
inc
dec
cmp
jne
dec
in
sbb
dec
inc
insb
and
mov
xchg
and
pop
lret
xlat
pop
jle
adc
aaa
mov
fwait
lret
sti
dec
sbb
decb
adc
lret
decl
mov
mov
outsl
adc
xchg
and
mov
test
mov
ret
adc
pop
add
mov
xchg
push
cs
push
push
dec
test
pop
inc
int
xorb
dec
xor
adc
inc
or
loope
or
dec
and
xchg
add
ja
xchg
mov
add
test
imul
les
cmpsl
rorl
out
sub
mov
jo
clc
inc
inc
mov
sbb
cld
rorb
mov
mov
dec
pop
inc
ficoms
dec
sbb
ret
and
cs
nop
popf
cli
lds
jmp
ret
and
dec
add
inc
dec
lcall
addl
jg
repnz
jecxz
repnz
inc
push
movsb
movsb
aas
jecxz
push
jns
add
es
rolb
mov
cli
rorb
dec
mov
pop
adc
js
and
call
jge
lret
out
loop
mov
pop
cmpsb
xchg
xchg
inc
inc
and
addr16
outsl
ljmp
inc
cmpsl
das
ficompl
xlat
ret
subb
lret
leave
rclb
mov
stos
into
mov
fdivs
push
mov
or
fisubl
sbb
inc
xor
sub
inc
movsl
out
push
push
loope
clc
xchg
mov
sbb
js
adc
psubusw
js
pop
or
inc
or
pop
mov
shll
int3
jbe
in
mov
jbe
sbb
int3
out
int3
inc
mov
int
adc
fidivl
cld
add
cmp
sbb
add
cmp
mov
jge
mov
rol
sub
cs
jns
idiv
fbld
adc
sar
mov
lods
mov
dec
xor
mov
xchg
roll
icebp
test
mov
insl
adc
int3
out
rcrl
mov
pop
xor
into
jbe
test
or
movsl
int
or
push
aam
mov
shll
xor
xorb
sbb
push
cmp
cmp
mov
inc
add
mov
xchg
int3
jo
enter
inc
movmskps
out
mov
add
loope
jmp
bound
and
or
jno
mov
cwtl
lock
inc
sub
inc
dec
adc
adc
pop
fsubrl
hlt
cmpsb
repnz
adc
jnp
push
dec
xchg
lds
test
inc
inc
dec
lahf
or
out
xchg
shll
addr16
xor
gs
dec
dec
inc
mov
aam
dec
xlat
aaa
sbb
jmp
pop
jns
push
int
aam
cli
test
fiaddl
dec
push
aam
dec
and
aam
push
inc
inc
int
in
dec
cmpb
dec
mov
or
shrl
dec
nop
inc
shrb
xchg
pop
dec
cmp
dec
dec
cmp
jg
sub
lcall
add
aam
dec
in
mov
mov
or
bound
mov
lret
sarb
out
int
xchg
xchg
rcrb
movsl
push
aam
inc
imul
inc
fldl
dec
mov
adc
psrld
movl
lret
inc
inc
loope
mov
mov
sub
xor
lods
filds
in
mov
jno
int
pop
cmp
or
inc
movsb
aas
cmpsb
aad
insl
es
mov
or
fcoms
sbb
mov
scas
rcrb
or
xchg
outsl
cmp
stc
xchg
cmp
inc
push
test
inc
push
inc
cmc
push
push
cmp
mov
sbb
cwtl
adc
in
mov
mov
inc
cmp
imul
push
rcrb
iret
push
sarl
in
and
mov
gs
outsl
and
int
data16
daa
loop
jp
add
dec
ja
les
imul
addr16
divb
push
mov
insl
jge
out
mov
add
adc
cmpsl
daa
mov
cmpsb
int
repz
cld
clc
and
mov
push
hlt
pusha
xchg
mov
or
push
or
mov
test
mov
call
movsb
mov
cmp
xchg
js
orb
jmp
outsb
gs
daa
jl
inc
lret
jae
jno
cli
mov
mov
cmp
adc
pop
adc
in
add
pop
imul
hlt
fiadds
incl
ljmp
icebp
pop
mov
idivl
rcll
ss
aam
fld
mov
adc
or
cmp
push
cmpsb
repz
loop
dec
imul
mov
clc
sub
sub
decl
mov
pop
jl
clc
add
pop
sahf
push
test
sub
je
out
dec
xchg
xchg
xchg
mov
rcr
das
js
inc
mov
push
movb
mov
and
addr16
xchg
call
xchg
inc
xchg
bt
leave
or
lret
ds
mov
mov
out
enter
add
pop
cmp
inc
out
cmp
jne
mov
inc
xchg
icebp
sub
jmp
mov
mov
mov
xchg
sbb
je
and
gs
in
mov
sbb
rorl
outsb
dec
jns
pop
bswap
mov
adc
sbb
add
cmpl
and
sub
add
js
rolb
sub
mov
int3
jae
clc
or
nop
test
or
pop
lock
jp
sbb
je
xchg
pop
sbb
sbb
int3
call
lahf
pop
cmp
cmp
mov
lcall
cmp
js
sahf
xor
mov
mov
mov
sbb
fsubl
lea
add
xchg
ret
cmp
push
adc
flds
lea
inc
sbbl
cmpl
push
dec
scas
popf
js
daa
leave
mov
jg
shll
int3
test
inc
fidivrs
inc
sub
or
mov
rcrb
mov
arpl
cwtl
out
push
cmp
and
jae
adc
add
xlat
daa
daa
jnp
jmp
dec
loopne
push
pop
nop
add
lds
hlt
jbe
decl
jbe
mov
nop
add
cld
out
dec
mov
arpl
or
jno
aad
pop
cmpl
adc
dec
daa
inc
je
xchg
lock
adc
je
aaa
int
imul
out
ja
test
sbb
cmp
addb
cmovbe
aam
rcll
dec
jb
insl
xchg
int
lods
cmp
dec
jbe
into
xor
sub
fbld
jbe
imul
enter
adc
xor
aaa
sub
call
stc
ret
pop
inc
jne
cmp
sub
adc
add
out
and
jge
in
adc
cmp
xchg
inc
dec
hlt
incl
incl
mov
in
ret
xlat
or
push
lods
mov
xorb
mov
fidivrl
cwtl
sarb
fidivrs
scas
inc
xchg
mov
mov
dec
mov
mov
cmp
int3
call
fidivrs
lods
cli
sbb
lock
imulb
fistl
adc
repnz
xchg
cmp
in
dec
cmp
mov
pop
arpl
push
sub
and
sbb
lcall
xchg
or
xor
pop
aas
inc
mov
outsl
mov
jo
mov
pop
fcomps
push
pop
sub
es
leave
outsl
push
xor
leave
cmc
fsubrl
in
int3
xor
add
add
daa
repnz
mov
outsb
mov
test
jb
xchg
outsl
mov
xor
xchg
push
loope
xchg
loopne
inc
fucomip
mov
xchg
popf
imul
call
cmpsb
pop
pusha
inc
inc
adc
call
mul
cmp
pop
and
sub
add
std
in
dec
mov
rolb
or
cmp
push
dec
and
sbb
gs
mov
loopne
push
jmp
jae
fcmovu
orb
and
jle
jb
mov
pop
ret
test
mov
push
xchg
xor
iret
outsl
lock
fdivrl
addr16
sbb
mov
mov
lahf
mov
sub
decl
and
pop
inc
icebp
loop
lods
pop
mov
xor
mov
daa
or
jge
mov
icebp
inc
xchg
ret
sub
inc
cs
cltd
scas
inc
push
mov
adc
inc
testl
inc
mov
push
fcomi
push
xchg
push
lea
xchg
adc
xor
testb
ret
sti
ds
lret
pop
xchg
mov
mov
movsb
fsubr
inc
pop
test
jle
jns
lods
in
loop
js
call
lock
ja
je
pop
lret
xchg
sti
lods
loope
lods
test
fs
cmpsl
insl
sub
jb
lcall
push
outsb
aad
pop
out
jnp
je
push
pop
push
inc
cmp
incl
incl
mov
popf
and
out
or
sub
leave
sbb
icebp
dec
inc
mov
ja
lahf
stos
movsb
xchg
mov
stos
in
rcl
mov
cmp
xchg
mov
in
inc
dec
in
adc
add
fmulp
inc
add
push
adc
sub
lret
jp
adc
scas
jnp
push
and
push
loope
jne
sub
xchg
cli
adc
leave
xchg
adc
in
gs
sub
sub
cmc
call
insl
lcall
or
add
int3
movsb
sahf
cmp
aaa
lahf
adc
and
jp
enter
or
xor
inc
mov
mov
cmp
push
mov
sbb
add
add
add
stos
adc
cli
ret
pop
faddl
xchg
sbb
lret
lds
lret
pop
mov
int3
pop
and
mov
and
pop
mov
push
xchg
lods
and
clc
add
mov
repnz
sbb
scas
push
mov
sub
cmc
mov
test
add
add
add
scas
lea
cmp
test
fnstsw
ret
call
cwtl
mov
xchg
lea
out
push
fldz
xor
dec
rorl
mov
push
test
insl
dec
push
jl
push
dec
addl
test
popa
push
cmpsb
add
ds
outsl
cmc
iret
clc
jecxz
dec
insl
sbb
loope
jno
and
mov
cmpsl
fsubrs
sbb
lods
test
jge
aaa
xlat
testl
push
jb
lds
call
jae
aam
cli
jle
push
les
pop
imul
lret
sahf
push
xchg
nop
addb
sub
loopne
test
xchg
xor
mov
sub
fdivrs
jne
inc
jle
insb
push
fsubrp
sbb
cmpsb
out
sbb
xchg
cmp
sarl
adc
inc
scas
pop
jns
nop
xchg
inc
ret
and
push
cmp
mov
gs
stos
adc
xor
scas
mov
test
mov
mov
mov
stc
ror
insb
adc
push
xlat
xor
mov
xchg
pusha
mov
and
pusha
repnz
pop
aas
ja
roll
mov
and
mov
ror
cmpsb
lahf
pop
shll
adc
jecxz
cmp
out
xor
dec
push
outsl
nop
adc
pushf
mov
mov
mov
xor
pop
loopne
push
lret
mov
push
dec
sub
inc
xchg
dec
push
cmp
mov
adc
xor
hlt
adc
daa
pushf
jbe
push
bound
pmaxsw
adc
mov
cltd
in
sahf
out
adc
mov
int3
inc
mov
rcrb
xor
xchg
inc
dec
cmp
or
sub
pop
cmp
stos
mov
and
stc
and
rcl
js
sub
cmpsb
je
add
inc
inc
sbb
push
lcall
pop
aas
inc
out
mov
addl
dec
add
mov
inc
aam
sub
push
cli
int
pop
loopne
sub
and
lea
enter
mov
shlb
mov
int3
xchg
jg
push
stos
fildl
jae
inc
inc
adc
cwtl
es
stc
into
imul
mov
sbb
jge
add
iret
or
outsb
sbbl
xor
repz
inc
fisttps
es
mov
push
and
jge
adc
adc
incl
in
dec
in
insb
sub
lret
ret
pop
lret
inc
mov
dec
sbb
ret
xor
test
adc
jl
push
inc
mov
pop
sub
push
movsb
dec
add
mov
lahf
fs
xchg
dec
dec
into
fildl
enter
bound
dec
fistpll
xchg
loopne
not
sbb
pushf
mull
int3
call
mov
in
ss
decl
repnz
jge
les
adc
mov
xor
sbb
push
mov
add
mov
rcrb
test
pusha
sub
scas
test
hlt
call
pop
fwait
xchg
cmpsl
or
fs
add
jno
pop
int
dec
dec
mov
into
int3
adc
inc
test
sti
adc
leave
inc
jle
loop
mov
stc
xor
mov
mov
mov
mov
sub
sbb
pop
pop
push
in
cwtl
mov
pushf
xchg
in
pop
iret
cwtl
mov
adc
movsb
sbbb
pop
inc
repnz
aaa
cld
call
dec
int
lret
mov
mov
push
enter
and
gs
cmpsl
xor
dec
shrb
add
outsl
lods
mov
les
add
inc
insl
push
lds
cmpl
or
xchg
push
mov
sti
mov
jle
icebp
mov
ror
jge
test
lods
adc
mov
jno
jg
push
mov
mov
mov
fdiv
push
movl
int3
cmp
mov
cmpsl
fistl
mov
lea
sub
push
mov
add
aad
pop
push
push
add
or
into
pop
xor
sub
push
shr
int3
call
jnp
outsl
and
ret
cmp
pop
push
jb
xchg
sub
jno
mov
xchg
test
andl
cmp
enter
or
ret
lret
ret
inc
push
xchg
loop
mov
mov
mov
popf
lret
push
lods
lret
push
out
incb
insl
inc
cwtl
push
aam
cmp
inc
adc
mov
rclb
repz
sub
popf
push
int
jae
mull
cmp
add
sub
loopne
call
dec
and
shl
lds
sti
mov
jbe
jl
sbbb
test
mov
cld
sbb
bound
fsub
loop
lcall
push
mov
js
sarb
aaa
rcll
and
dec
cmp
sti
jmp
testl
sub
iret
addr16
test
test
stos
mov
adc
xchg
or
pop
std
sti
dec
int
and
inc
in
cwtl
shr
xor
pop
adc
or
repnz
sub
dec
adc
sbb
jmp
jecxz
add
mov
mov
inc
negl
ss
mov
sbb
out
sub
dec
enter
fbstp
mov
aam
mov
inc
cmc
sub
mov
popf
dec
or
pop
sbb
or
scas
popa
std
cmpsl
inc
sub
inc
mov
leave
xchg
dec
dec
pop
daa
out
lret
clc
push
xchg
xchg
rclb
mov
sbb
pop
mov
push
jmp
pop
pop
sar
incl
mov
pop
mov
test
clc
sbb
jecxz
jecxz
cld
lcall
pop
clc
xor
cmp
fs
repz
inc
cmpsl
jge
push
ret
hlt
or
mov
cs
jno
adc
add
add
cmp
je
das
in
testl
dec
ret
int3
aaa
call
inc
adc
aam
xor
sbb
stos
inc
push
loop
data16
inc
mov
mov
pop
mov
mov
mov
push
movsl
sbb
mov
pushf
sbb
lahf
xchg
xchg
adc
js,pn
jecxz
mov
xchg
and
mov
jno
mov
aas
popa
pop
mov
subb
ja
push
sarl
out
mov
mov
sbb
jb
sbb
adc
decb
fistps
cmp
xor
xchg
mov
pusha
adc
int
xor
lods
je
lret
dec
int3
insl
add
lret
scas
add
xchg
xorl
push
outsb
imul
sbb
call
jp
pop
sbb
jae
setns
xor
sbb
inc
lods
add
ja
sub
iret
mov
sub
mov
incl
and
jecxz
and
arpl
mov
xchg
and
or
nop
sub
clc
enter
or
mov
addr16
xor
jnp
repnz
and
cmpb
sbb
push
gs
push
imul
or
popf
and
stos
mulb
notl
xor
push
out
out
aad
mov
hlt
out
pop
std
std
sbb
out
lea
sbb
lods
adc
in
inc
inc
or
or
aas
iret
imul
lcall
mov
xchg
add
test
xor
imul
push
sbb
sbb
out
out
fs
stc
aam
xchg
mov
jbe
test
sub
cltd
or
repnz
pop
aas
ss
mov
hlt
or
sbb
ljmp
jmp
or
add
add
add
out
aas
outsl
outsl
inc
xor
data16
dec
fld
mov
lods
inc
stos
inc
jno
loop
incb
in
cwtl
inc
sub
pop
sti
jae
or
dec
dec
mov
jne
es
inc
adc
mov
xchg
fbstp
and
mov
addl
cmpsl
test
jo
stos
lret
xlat
and
add
std
pop
call
movsl
aaa
xchg
jne
scas
icebp
ds
ja
sub
inc
out
popf
pop
cmp
mov
sub
das
xchg
addr16
mov
imul
fcomps
js
inc
jge
aam
imul
int3
popa
js
imul
jge
loop
test
or
xchg
pop
mov
addr16
xor
movsb
fsubl
loopne
or
std
mov
in
int
or
imul
outsl
xchg
pop
test
jne
mov
push
scas
sar
add
add
sub
xchg
jmp
add
imul
out
and
imul
xor
xor
cmp
rorl
inc
test
jo
adc
outsb
inc
in
mov
xchg
stc
pop
in
test
rcrl
call
int3
enter
add
in
adc
call
lods
cmp
mov
loope
icebp
insl
jl
xor
mov
and
pushf
bound
test
jle
shlb
sub
lea
push
enter
mov
add
sbb
mov
leave
fs
insb
out
xchg
jbe
jmp
pop
pop
aaa
pop
inc
lock
inc
repnz
out
popa
dec
mov
jecxz
mov
and
cltd
jns
sbbl
fcoml
lods
addb
cmp
cli
push
int
fs
push
cmpsl
aad
aas
and
popf
dec
adc
or
and
push
dec
adc
incl
sub
mov
hlt
sbb
sub
pop
inc
cmp
dec
and
cltd
mov
leave
pop
jno
xor
xor
add
sub
sbb
adc
and
xchg
clc
data16
sti
pop
pop
adc
fstpt
fbld
add
popf
mov
test
inc
xor
int3
add
outsl
aad
add
adcb
mov
inc
jbe
push
lret
inc
adc
jnp
stos
inc
test
dec
mov
sub
xchg
lock
test
dec
dec
test
fwait
repnz
popa
push
ja
xorl
int3
call
inc
inc
std
inc
dec
push
xchg
fsubrs
xchg
pop
das
aas
addb
jmp
lahf
mov
shll
inc
lods
dec
cmp
popa
lea
test
rorl
movsb
adc
cmpsb
push
dec
sub
add
int3
call
dec
sbb
sbb
push
mov
xor
movsl
hlt
movsl
std
pop
mov
mov
xchg
xchg
adc
fisubs
out
sbb
rolb
push
jnp
inc
mov
clc
adc
inc
adc
cs
xchg
fnstsw
jnp
repnz
insb
push
mov
out
enter
cli
mov
add
sub
jnp
fisubl
stc
lea
dec
ret
fbstp
push
gs
mov
mov
mov
add
fsubrl
les
pop
das
push
shl
jnp
out
xchg
les
sbbl
addb
call
jnp
lret
jo
xchg
mov
stos
test
or
adc
sub
adc
gs
or
cmc
repz
test
push
jb
loopne
out
loop
pop
or
call
stos
push
sub
push
add
push
pop
jg
mov
mov
mov
sbb
xor
jl
and
adc
cli
fdivp
xlat
aas
fcompp
xlat
hlt
enter
movq
ss
jmp
pop
sti
xchg
addr16
sahf
call
sti
out
xchg
imul
test
cmpsl
pop
mov
les
ja
addr16
incl
incl
shll
or
dec
cmp
stos
and
xor
or
loope
dec
aam
nop
int3
jl
fld
bound
test
mov
dec
mov
push
shll
repnz
or
fsub
jle
pop
mov
push
cmp
faddl
jg
mov
into
sahf
pusha
jae
call
out
dec
pop
lcall
push
pushw
cmc
add
rolb
or
and
lock
or
and
stc
fcoml
dec
lcall
ss
cmp
loopne
and
mov
hlt
mov
fsubl
enter
int3
call
fucomi
movsb
mov
mov
xchg
fs
clc
jne
pushf
cmp
stos
test
test
or
outsl
pop
pop
xchg
push
cmp
das
adc
xchg
jmp
xchg
ss
int3
xchg
outsl
ds
scas
pop
or
mov
test
mov
fidivrs
cmp
aad
into
dec
call
rcl
mov
jmpw
jbe
cmpsl
push
or
movsl
orl
push
inc
pop
icebp
push
cmp
popf
dec
popa
dec
aaa
xchg
adc
push
pop
mov
mov
mov
push
pop
shll
rclb
mov
adc
xchg
jle
lea
movsb
and
je
add
jo
pop
iret
mov
lds
daa
mov
push
push
cs
dec
mov
loopne
mov
fbld
test
into
or
dec
jno
cmc
aas
movsb
les
cmpsb
lds
push
repnz
dec
and
mov
push
inc
push
jge
fsubl
insl
adc
nop
cmc
mov
add
add
mov
iret
pop
adc
and
push
or
adc
adc
into
and
sbb
aam
cmp
mov
pop
jp
push
cli
mov
xorl
imull
or
add
aam
in
push
pop
dec
int
daa
mov
push
popa
jmp
nop
int3
add
mov
jnp
jle
loopne
push
push
in
loope
dec
add
push
add
fldlg2
or
xchg
xor
test
sub
je
sbb
pop
gs
ret
and
adc
adc
and
rcll
imul
inc
cmp
nop
and
ja
movsb
mov
mov
aas
inc
gs
inc
sub
jnp
pop
jae
or
loope
aaa
ja
adc
sbb
into
data16
decl
loope
xchg
sbb
cmp
jp
insl
repnz
dec
mov
out
xchg
pop
leave
fiadds
jno
cltd
xor
inc
dec
jg
sbb
jecxz
cmovo
subl
mov
popa
xchg
popa
jno
das
outsb
popf
insb
dec
fnstsw
cltd
sub
xchg
in
xor
stos
jle
das
xchg
pop
push
leave
lods
iret
jecxz
out
inc
mov
lods
out
mov
dec
or
imul
add
add
sub
sbb
adc
mov
pop
test
mov
fucomip
push
push
repz
stos
ljmp
and
pop
xor
and
pop
sub
out
insl
loopne
xor
test
inc
or
push
aaa
dec
sbb
and
cmp
daa
pop
fsubl
jecxz
mov
push
jae
jo
fstpl
jno
xchg
pop
call
inc
ljmp
adc
imul
inc
in
nop
jno
lret
jbe
int3
call
jg
jnp
lret
sub
mov
xor
dec
idivb
mov
and
jecxz
mov
dec
stos
sub
pop
jb
enter
stos
xchg
mov
add
fadds
rcrl
and
test
iret
mov
mov
cmp
rorl
incl
cmp
nop
xor
push
ds
int
cmp
push
mov
pop
xchg
push
or
cmp
mov
pop
pop
shlb
cli
lea
mov
push
lea
fcoml
mov
call
leave
sub
loope
outsb
ret
rcrl
pop
adc
mov
and
int3
call
jbe
test
mov
mov
dec
fnstenv
aaa
and
sbb
dec
mov
sarb
add
add
mov
lcall
loopne
cmp
gs
int
xchg
xor
inc
mov
pop
stc
dec
sub
xor
mov
mov
incl
ljmp
rol
add
and
js
lods
ret
or
push
adc
adcl
push
cmp
adcl
mov
mov
mov
outsb
xchg
push
and
mov
push
testb
in
addr16
pop
scas
lcall
xchg
sbb
add
add
aas
push
fiadds
mov
aas
into
daa
in
rcr
lea
inc
fbld
ljmp
add
add
add
add
aad
jge
and
pop
jg
in
inc
mov
outsl
mov
pop
scas
or
sbb
xchg
jge
lods
sbb
loope
dec
ficoml
sbb
pop
jb
mov
mov
call
int3
nop
push
lods
arpl
sahf
hlt
cmp
push
call
adc
fmul
aaa
out
xor
jnp
cmp
add
xchg
adc
and
test
aam
in
xor
push
xlat
mov
mov
sbb
sub
jo
xor
jnp
sbb
cmp
push
dec
popf
ljmp
sbb
adc
ljmp
rclb
test
lock
adc
push
sbb
sbb
cli
mov
decl
mov
daa
xchg
or
add
shl
ret
mov
aaa
pop
push
call
xor
fs
mov
les
stc
xor
jo
mov
fisttpll
jae
dec
out
insl
mov
pop
stc
add
sub
std
pop
fldlg2
add
xchg
or
pop
add
mov
inc
rcl
add
xor
cmpb
mov
jb
mov
enter
int3
call
mulb
add
js
scas
out
add
sub
ds
pop
shrb
lret
cmp
mov
push
imul
or
cmp
jnp
mov
mov
pop
cmpsb
pop
ret
or
push
cmp
mov
adc
inc
cld
roll
fucomi
inc
jbe
cmp
add
add
add
mov
outsb
mov
jg
cltd
mov
cmp
or
xor
inc
mov
sub
stc
cli
pop
aad
ljmp
addb
dec
xchg
push
lret
push
pop
lds
push
dec
fwait
mov
sbb
imul
cmp
cs
push
and
adc
cmc
or
xchg
stc
add
and
mov
mov
mov
mov
int
nop
mov
push
sar
movsl
sbb
mov
enter
add
sbb
gs
pop
js
sub
fldcw
adc
xchg
test
and
insl
hlt
xchg
add
loop
pop
adc
js
cltd
sbb
ret
andl
mov
jge
push
loopne
xor
js
add
mov
pop
ds
incl
incl
ljmp
test
incb
sub
mov
stos
aam
push
jno
stos
loopne
pop
cmp
pop
sbb
sub
xchg
add
jbe
mov
lret
jge
pushf
pop
std
dec
sarl
cltd
pusha
xchg
cmpsb
std
arpl
ror
adc
or
lods
fdivs
sub
int
or
incl
incl
call
pop
adc
dec
iret
jmp
aas
loop
hlt
adc
int
cmp
xorb
fcmovu
sub
in
ljmp
lcall
in
or
mov
push
lcall
and
inc
stos
ret
jl
adc
rcrl
add
jmp
cmp
int3
in
lods
je
lea
xchg
outsb
mov
lret
inc
arpl
inc
pop
out
jno
or
mov
mov
or
push
les
out
sbb
xchg
sub
xchg
or
mov
or
call
shlb
test
mov
clc
and
adc
mov
bnd
xchg
push
xchg
sbb
mov
in
rcll
call
arpl
aas
sarl
jne
pop
lods
pop
pop
sub
test
call
stos
call
inc
push
xchg
cs
sbb
sub
add
packssdw
pop
test
mov
jns
hlt
andl
sub
xbegin
cltd
std
int
cwtl
mov
inc
lahf
push
jns
push
stos
cmpsl
jno
imul
test
jb
push
or
pop
mov
popf
mov
mov
mov
cmpl
clc
fmull
mov
cli
or
pop
ret
jg
ret
lret
mov
mov
add
fmuls
sub
add
popf
call
stc
lea
in
jg
and
stc
adc
xor
call
adc
add
ret
test
xor
mov
dec
pop
inc
scas
inc
cmp
mov
insl
pop
or
add
fimuls
enter
xchg
popa
loopne
emms
lea
les
sti
fbstp
push
repnz
aad
ds
jg
or
addr16
mov
add
mov
loope
push
pop
iret
inc
cmp
lock
decl
add
push
int3
les
push
inc
ss
jmp
shll
hlt
movl
jecxz
loopne
cmp
sub
inc
das
add
mov
pslld
mov
sub
mov
xor
or
mov
mov
mov
out
lahf
push
leave
jp
mov
std
sbb
xchg
mov
lret
or
cli
hlt
loope
mov
add
add
add
pusha
pushf
mov
adc
push
dec
fwait
cmp
jno
add
add
sbb
sbb
jecxz
loop
mov
sbb
dec
add
or
mov
sub
into
stos
xor
add
add
call
pop
into
xor
loope
sub
push
je
jle,pt
push
loope
jecxz
cltd
fstpt
sti
mov
add
insb
push
out
pop
inc
rorb
cmp
fnstenv
lret
inc
addr16
or
jae
add
imul
lods
stos
mov
push
add
sbb
clc
sub
aam
push
xchg
cmpsb
mov
into
das
mov
lock
data16
and
pop
lods
das
xchg
or
inc
in
mov
add
push
push
in
pop
push
mov
sbb
dec
clc
add
jb
enter
pushl
ret
mov
pop
mov
sbb
pop
movb
pusha
xchg
inc
pop
cmp
mov
mov
and
jne
outsl
repz
sbb
mov
or
rol
loope
adc
mov
jno
pop
push
pop
lahf
lods
pop
adc
mov
shlb
sub
testl
ss
adc
add
aaa
xchg
sbb
aad
add
pusha
push
loop
lret
test
inc
incl
incl
inc
in
inc
mov
cmpsl
dec
hlt
scas
outsl
mov
and
mov
cmp
adc
ret
pop
stc
dec
pop
fimull
push
xchg
imul
mov
mov
js
out
sub
dec
push
or
pop
xchg
enter
or
jmp
shlb
leave
cli
dec
popf
fdivrl
push
inc
pop
or
or
add
repnz
aaa
add
inc
jmp
and
push
mov
sbb
adc
into
sbb
daa
stc
cmp
or
inc
xchg
lds
int3
call
jecxz
xchg
lds
jns
fld
rcr
mov
int3
in
mov
add
data16
jae
int
daa
mov
bound
cld
mov
xor
stc
subb
inc
addb
sub
sub
cmpsl
xchg
hlt
jmp
adc
xchg
mov
lock
aas
xor
test
lcall
in
push
lret
add
mov
xchg
lds
ret
inc
icebp
mov
mov
call
in
add
addr16
mov
roll
jae
fstcw
or
add
incl
incl
incl
pop
dec
jl
in
dec
pop
and
filds
dec
incb
dec
jg
int3
push
sbb
push
mov
scas
leave
push
or
cli
rolb
out
insb
and
clc
jo
rorl
add
pop
loop
or
mov
sti
out
adc
push
pop
fsubrp
jb
xchg
loopne
sub
enterw
jle
mov
adc
dec
cmp
dec
jg
xor
jno
mov
mov
xor
mov
mov
fs
or
sbb
stos
pop
test
imul
sub
mov
icebp
and
push
mov
jl
sub
into
fst
jle
divb
dec
in
jl
jp
or
sbb
movsl
ffree
mov
in
add
and
xchg
jnp
sti
dec
enter
add
repnz
cmp
sbb
mulb
imul
movsb
cmp
lcall
mov
pop
jo
xchg
mov
or
std
mov
sbb
inc
push
js
pusha
inc
jg
sub
or
das
daa
mov
sbb
cld
clc
pop
fisttpl
xor
xchg
xor
lea
ret
call
pop
sbb
aas
mov
mov
adc
fs
adc
pop
mov
outsl
in
jae
pop
mov
add
and
addr16
sub
enter
add
add
std
jne
pop
jg
cltd
leave
mov
inc
mov
cmc
clc
push
lods
push
mov
push
mov
jl
and
xor
or
ret
fisttpl
sub
mov
scas
je
out
add
sub
add
xchg
jl
cltd
fcomp
sub
pop
cmp
jns
std
inc
pop
mov
ret
cltd
out
adc
in
inc
jmp
mov
mul
xchg
iret
imul
cmp
sub
add
jnp
enter
fldlg2
shll
fmul
sub
cmc
xchg
movsb
dec
sub
mov
dec
dec
sub
push
jbe
andl
ret
jle
nop
sti
out
adc
xchg
jl
mov
mov
test
cmpsb
enter
mov
in
test
mov
mov
add
fcomip
shl
aas
jnp
movsb
shrb
sti
repz
cmpsl
cli
not
imul
lahf
sub
ds
lcall
jmp
mov
cld
mov
clc
out
mov
push
addr16
in
mov
rcl
and
pushf
std
adc
pop
xchg
inc
inc
adc
int
add
pop
lret
pop
js
fs
nop
pop
push
rcrb
ret
push
pop
mov
insl
cmp
decl
outsb
mov
add
push
clc
jb
pusha
jbe
pop
jb
cmp
stos
loop
mov
inc
shrb
ffree
in
in
cmpsl
mov
mov
cmc
mov
fwait
push
mov
push
arpl
sub
fisttps
pushf
int
arpl
mov
inc
shlb
add
add
loope
test
jnp
ja
mov
cmc
pop
les
add
pop
jl
leave
adc
push
push
push
xchg
shrl
xchg
ret
cs
inc
mov
mov
mov
inc
fists
mov
xor
dec
lret
mov
loopne
nop
cmc
xchg
sbbl
adc
cmp
testb
cmc
xchg
or
mov
mov
imul
pop
cli
and
pop
xor
sti
inc
mov
inc
sub
mov
xor
mov
mov
cltd
mov
in
aad
push
popa
mov
mov
call
sub
mov
push
flds
stc
repnz
pushf
in
mov
aas
sbb
stc
ret
sbb
mov
pop
cld
rolb
fcomps
push
pushf
or
add
add
add
sarb
sub
push
ljmp
inc
dec
cwtl
test
pop
mov
mov
mov
dec
out
fwait
dec
mov
inc
mov
xchg
outsl
adc
or
lret
in
xchg
ror
scas
push
sub
add
outsw
pop
pop
outsl
cs
mov
inc
andl
je
cmc
cwtl
xor
imul
xchg
sbb
jge
inc
push
and
cmp
out
and
xchg
add
incl
jge
movsb
pop
mov
ja
int3
add
jne
pop
inc
or
jle
adc
or
mov
inc
test
movsl
inc
jl
xor
add
jp
mov
mov
mov
adc
popl
inc
or
adc
lods
movsb
xchg
jns
mov
mov
pavgb
clc
mov
xor
pop
inc
sahf
faddp
jmp
sbb
out
repz
add
or
outsb
call
xlat
dec
sbb
shl
in
popf
sbb
mov
mov
stos
cltd
rcrl
jp
scas
sbb
mov
push
outsb
push
fnstsw
stc
mov
xor
stos
fwait
cli
sbbb
mov
or
jl
daa
lcall
outsl
in
inc
mov
mov
mov
and
rorb
fmuls
fwait
mov
daa
adc
mov
mov
scas
cmp
mov
jns
mov
and
outsl
movsl
outsl
or
and
mov
mov
fidivl
adc
add
pop
mov
aad
push
outsb
dec
push
cmc
pop
mov
mov
cmp
add
mov
mov
imul
scas
pushf
push
xchg
pop
jge
insl
cmp
or
push
sub
pop
movl
out
jbe
cmp
lock
push
xor
sub
mov
xchg
imulb
cmp
call
or
xor
and
ret
popa
hlt
int
test
movsl
nop
aaa
push
mov
xor
mov
rclb
pop
incl
incl
test
push
cltd
fisubs
sahf
insb
popl
mov
sub
bound
sarb
pop
push
arpl
cmp
fistpl
iret
aam
mov
sub
adcb
cmp
gs
jae
jae
out
xchg
sahf
or
add
push
push
push
scas
xchg
cmc
add
and
pop
daa
mov
cmc
out
test
pop
adc
pop
test
lock
test
add
inc
xchg
push
test
dec
push
mov
jge
int
push
call
lods
sbb
divb
xor
call
xchg
dec
scas
shll
jmp
mov
mov
inc
xchg
cltd
outsb
pop
scas
sub
mov
mov
lods
push
jg
repz
enter
cmpsl
std
inc
xchg
add
add
mov
jl
jmp
jbe
lret
sub
xchg
jmp
and
cmpsl
dec
inc
mov
push
xor
fisttpl
xchg
sub
enter
jge
test
or
add
push
jl
fwait
loope
xor
jne
push
iret
mov
cmp
lods
cmc
adc
ds
dec
mov
push
rclb
andb
aaa
or
faddp
mulb
push
cmp
out
int3
add
add
and
mov
dec
or
or
ljmp
js
and
sub
add
in
mov
mov
push
out
jno
movsb
ret
inc
sub
xor
fdivs
push
stc
cmpsl
adc
test
pushf
adc
jno
sahf
push
imul
in
repz
repnz
xchg
pusha
xorl
cmp
int3
call
sbb
in
shr
outsl
stos
mov
fsts
jmp
fbld
pop
mov
cld
lods
jno
in
sbb
ret
add
add
sbb
jb
push
out
out
imul
aaa
cli
xor
cmp
add
jle
popa
mov
pmullw
aaa
sbb
repnz
cli
and
dec
jae
dec
mov
xchg
dec
sub
adcl
mov
pop
into
sbb
mov
sbb
repnz
addr16
aam
add
sbb
pusha
jb
push
aas
cmp
stos
mov
sbb
imull
jns
js
pop
push
aam
push
adc
call
arpl
arpl
les
jne
xchg
inc
ljmp
sub
ficoml
jge
nop
int3
and
fwait
and
mov
mov
leave
jae
mov
mov
js
inc
pop
mov
cmc
popf
pop
rcr
les
push
test
xchg
in
loope
sub
rclb
cmpsb
inc
mov
add
sahf
push
xchg
mov
sub
mov
cmp
jbe
mov
mov
mov
enter
gs
xor
mov
test
cmp
inc
adc
mov
das
stos
hlt
lahf
stc
aad
jbe
stos
icebp
ss
adc
das
pop
cmp
xchg
in
insl
pop
cld
cmpsl
and
roll
dec
jecxz
pop
insl
cmc
xchg
fidivrl
xorb
std
repnz
sub
scas
test
push
push
nop
mov
ret
sub
int3
call
mov
pop
mov
cwtl
adc
jnp
push
push
pop
out
inc
subl
rclb
mov
or
stos
mov
push
ss
bound
adc
cli
mov
mov
lret
mov
jns
call
data16
add
add
add
out
fstl
push
and
mov
dec
push
jl
icebp
test
dec
cmp
sub
sub
sub
outsb
cmp
stos
inc
dec
push
add
xchg
das
int
testb
das
add
sti
jno
dec
sbb
mov
aaa
lds
into
loopne
pop
pop
data16
ljmp
push
int3
add
add
add
dec
pop
sbb
adc
dec
inc
out
mov
adcl
push
movsb
sti
sbb
push
sarb
mov
adc
divb
nop
sahf
xchg
pop
pop
push
push
mov
mov
stos
xor
dec
jle
dec
loopne
aad
pop
movsb
icebp
cmp
mov
out
pushf
out
iret
jns
mov
cmp
jmp
and
out
rclb
dec
cltd
inc
fcmovb
das
out
dec
test
adc
stos
inc
dec
push
sbb
cmp
xchg
cmc
mov
jae
sub
xor
mov
dec
mov
shrl
arpl
fwait
add
ljmp
mov
jno
ljmp
inc
mov
cvtps2pi
out
adc
push
in
fwait
stc
dec
pop
cwtl
das
call
mov
sub
sub
mov
sbb
fwait
add
shlb
lret
pop
ret
mov
icebp
cmp
nop
pop
and
inc
xor
inc
xchg
jb
add
cltd
and
sbb
xchg
pop
push
mov
cmpsl
add
test
ss
pop
jge
mov
pop
mov
std
insl
add
add
out
lret
imul
mov
add
popf
adc
jg
fnsave
les
into
int3
add
add
std
xchg
jae
or
insb
fmul
mov
add
icebp
pop
pop
add
popa
pop
or
test
sbb
inc
rolb
cmpsb
repz
pop
outsb
out
fucom
cmpsb
pusha
pop
sbb
mov
mov
aas
inc
ret
xchg
and
add
lret
sbb
orl
jle
je
sahf
push
jbe
sbb
subb
xchg
sar
es
fdivr
call
insl
inc
cmc
sbb
push
pop
fists
xchg
aas
test
push
cwtl
mov
mov
or
and
in
mov
cltd
cmp
jno
cmp
aad
les
or
ja
pop
push
jne
aas
mov
mov
lahf
xchg
jmp
pop
xchg
sub
xchg
nop
sbb
call
or
test
adc
sahf
push
call
xchg
mov
stos
negb
call
ja
out
in
int
xchg
imul
sbb
xor
std
cmp
xlat
popf
and
aam
scas
xchg
jmp
jle
add
jg
mov
dec
jg
add
add
and
stos
sbb
int3
call
std
bound
dec
pushf
cmp
out
pop
mov
repz
and
ljmp
in
addr16
fwait
mov
mov
mov
sbb
lea
jns
js
cmp
lcall
or
or
lret
addr16
xchg
add
insb
mov
mov
mov
and
pop
push
test
mov
stc
cli
int3
add
add
add
dec
push
dec
and
dec
mov
popf
rclb
icebp
outsl
cmp
lcall
outsl
lea
scas
outsb
adc
dec
add
xor
sbb
cmp
dec
sub
adc
in
mov
mov
push
mov
clc
cli
cmpb
xchg
push
stc
sbb
cmp
insl
out
cs
mov
lret
lods
mov
cld
enter
sbb
push
sbbb
call
out
mov
aam
psllq
jmp
call
push
test
fs
mov
push
mov
clc
cmp
jp
adc
adc
sahf
push
fldcw
push
clc
outsl
sbb
repz
sub
rcrl
and
mov
xorl
xchg
fwait
out
adc
call
ss
pop
in
pop
mov
push
dec
mov
stc
mov
mov
jnp
arpl
cwtl
xchg
pop
mov
cmp
jp
in
dec
push
icebp
movsl
cmp
jno
mov
mov
push
pop
xchg
in
mov
mov
sbb
leave
sub
jmp
mov
ficoml
xor
push
orb
mov
push
sar
shll
jge
dec
pushf
ss
jno
cmc
out
xchg
inc
vmread
mov
cmp
xchg
add
and
fsubrs
sbb
pusha
mov
and
or
mov
movsb
add
int3
add
add
scas
mov
lret
test
loope
jnp
arpl
sarl
and
loop
cmp
aas
adc
hlt
pop
xor
ja
cmp
jmp
jo
cmpsl
cmc
cmp
xchg
push
dec
mov
xchg
mov
jl
fcomps
xchg
mov
ret
std
jecxz
sti
cmpl
jnp
sbb
dec
add
add
jge
and
aaa
adc
xor
push
loopne
push
or
cmp
shl
or
xor
adc
jp
repnz
enter
movsl
clc
ficoms
adc
mov
inc
imul
inc
pop
inc
sbb
adc
cltd
sbb
popf
call
stc
mov
dec
out
fsubrl
push
lea
add
test
outsb
stos
push
jl
inc
enter
xor
push
jb
or
add
add
repz
notl
mulb
mov
push
pop
add
sub
int
pop
std
jp
mov
out
jg
jecxz
in
lds
negl
ss
sub
inc
imul
mov
mov
dec
dec
pop
call
out
outsb
jno
jne
call
adc
or
jl
fstps
xchg
cmpb
pop
xchg
mov
xor
sarl
decl
push
ss
lock
jne
call
int3
aam
pop
enter
lods
cmc
decl
mov
push
jbe
call
sub
and
cmp
dec
aas
vmwrite
fisttps
xchg
pop
cmp
cs
cmpl
mov
sbb
ds
pop
push
jae
or
fstp
sbb
inc
shr
add
add
lods
inc
icebp
jle
inc
jl
mov
mov
cmp
or
ja
mov
lret
pusha
nop
mov
ljmp
jmp
mov
gs
dec
mov
pop
xorl
or
xchg
push
push
in
push
cld
incl
incl
jmp
push
sub
lret
mov
cmp
mov
dec
jmp
sbb
mov
movsb
xchg
pop
adc
and
fidivs
inc
push
push
pop
dec
cltd
mov
mov
mov
jl
mov
mov
dec
cwtl
mov
pop
or
icebp
jbe
ljmp
fwait
adc
push
sbb
dec
jae
leave
inc
push
jmp
push
mov
xor
and
pop
sahf
pop
mov
das
pushf
mov
mov
mov
push
pop
inc
pop
and
push
xchg
out
std
jbe
rcrb
xor
mov
cmp
pop
adc
adc
inc
fistl
aam
or
jns
cs
jnp
mov
cmc
sub
cmp
mov
arpl
xor
xor
call
adc
ret
mov
ret
test
xor
cld
inc
mov
push
xchg
mov
sub
int3
les
xchg
aad
test
jle
dec
shl
jecxz
lods
pusha
imul
adc
sub
add
pop
mov
fnstcw
adc
xor
lahf
int3
add
push
scas
out
shrl
shlb
or
fs
cwtl
xor
loopne
mov
leave
outsb
sahf
push
dec
cmp
jbe
xor
pop
push
cmpsb
or
pop
das
push
lea
sti
in
int3
add
movsb
rsqrtps
cltd
push
shl
xchg
outsb
xchg
int
incl
call
pushf
inc
stos
gs
stos
jno
pop
xlat
lcall
movsb
sbb
cmc
push
std
test
adc
call
inc
bound
out
cltd
mov
int
xchg
pushf
push
rorl
inc
sbb
cltd
or
sub
and
lret
and
mov
xchg
std
lock
jns,pt
pop
bound
mov
pusha
andb
add
add
lock
pusha
adc
cld
xor
mov
add
data16
pop
std
inc
push
arpl
aam
movsb
and
movsb
out
fs
cltd
mov
rorb
xchg
lret
loope
enter
and
push
xchg
mov
aaa
mov
ljmp
fiaddl
dec
inc
mov
ret
cmpsb
cmc
clc
sub
or
hlt
leave
xchg
mov
mov
ret
mov
jp
scas
insl
or
outsl
insl
out
or
pushf
sub
cmp
stos
mov
call
loope
pushf
mov
out
pushf
and
or
jmp
adc
lock
cmc
outsl
or
and
test
mov
dec
std
mov
test
inc
dec
jno
jo
dec
orl
cmc
rol
std
fidivl
jecxz
outsb
pusha
xchg
pop
loope
jne
into
sbb
inc
test
mov
in
scas
ret
adc
jb
mov
es
cltd
jle
xchg
push
fwait
addr16
mov
test
test
push
mov
hlt
mov
pop
xchg
addb
call
or
and
xchg
test
shll
orl
fcompl
repz
stc
lahf
sbb
jg
movsl
int
xchg
xorb
push
lret
call
ret
lret
fwait
mov
mov
mov
test
push
addr16
inc
mov
sbb
sbb
mov
mov
dec
dec
test
or
ret
lea
xor
mov
mov
push
pop
dec
dec
leave
xchg
stos
push
inc
mov
xorb
xlat
sub
mov
fldt
mov
in
add
shr
in
jl
mov
popf
je
lods
in
xchg
jae
pop
cltd
sub
jecxz
mov
call
int3
jmp
pop
mov
test
mov
or
or
add
dec
cmp
into
mov
insb
shrl
lods
pushf
lahf
mov
out
cltd
test
lods
jle
pop
xchg
loopne
sarl
ljmp
mulb
lods
mov
inc
pop
inc
jae
mov
mov
icebp
call
ss
rolb
push
cmpsb
mov
ret
int3
int
push
jnp
call
add
cmp
jns
leave
hlt
dec
cmp
data16
cmp
jle
fistpl
cmp
jae
addr16
icebp
xchg
and
dec
ljmp
sahf
je
jp
loopne
adc
adc
and
loope
shlb
je
std
pop
xor
in
stos
mov
les
push
into
out
xchg
out
and
sbb
or
pop
aas
loop
mov
pop
scas
xor
jns
loop
xchg
and
int3
sbb
test
int3
mov
es
xor
cmpsb
push
xor
aas
clc
or
nop
loopne
add
andb
push
outsb
xchg
jle
int3
add
add
and
mov
enter
sbb
jo
retw
and
int
push
sti
xchg
adc
or
add
add
mov
and
mov
inc
pminsw
andl
push
mov
mov
add
orl
aam
pop
shlb
push
xor
or
mov
cmpl
test
sbb
orb
dec
inc
push
rcr
mov
adc
enter
sbb
loopne
es
pop
fcmovnb
mov
mov
cwtl
punpckhdq
test
dec
test
mov
mov
dec
jge
lahf
cwtl
scas
icebp
cli
xchg
cmp
fld
push
push
scas
xchg
loop
sbb
enter
or
xor
test
inc
gs
mov
sti
scas
push
ret
into
fcoml
mov
jge
dec
repz
dec
sahf
leave
cmpsl
call
mov
dec
addr16
xchg
sbb
idiv
add
add
movsl
pop
inc
stc
cmp
cmp
repz
cmp
popf
sub
cld
int3
pop
add
aad
adc
xor
add
dec
jmp
lods
mov
cli
ficoms
pop
cwtl
mov
pop
call
and
addr16
lock
lds
add
add
movsl
outsb
data16
data16
imul
add
add
fs
pop
ljmp
inc
lods
dec
std
jae
mov
mov
mov
in
stos
jg
nop
xor
dec
testl
sbb
mov
jecxz
repz
jnp
insl
cs
out
pop
test
cmp
inc
cmpsb
movl
cmp
mov
and
into
inc
adc
in
or
mov
gs
push
mov
adc
or
fnstcw
mov
iret
jle
dec
mov
inc
scas
push
test
mov
dec
rcrb
mov
nop
add
mov
mov
sbb
nop
pop
push
das
inc
jmp
add
fwait
add
add
notb
pusha
fcom
int
cmp
fstps
mov
inc
out
lods
nop
ret
fldenv
push
icebp
ss
mov
mov
mov
jecxz
inc
xor
fnstsw
sbb
jl
lds
mov
mov
sub
addr16
and
add
add
mov
pop
neg
hlt
sbb
jae
or
mov
xchg
mov
inc
push
mov
dec
xchg
dec
mov
mov
mov
lcall
loopne
imul
jo
mov
xchg
mov
or
test
imul
mov
mov
and
mov
add
lods
rcrb
lret
sahf
movsb
imul
jl
out
nop
xor
in
jnp
xor
push
sarl
sub
add
loopne
repz
jo
jp
xchg
push
mov
sbb
stc
and
mov
test
jb
in
lahf
add
sbb
and
sbb
clc
cmpsl
loop
bound
lret
cmpsb
push
adc
roll
cmpsl
fidivs
lock
decl
dec
aaa
clc
lods
or
aam
push
mov
insb
out
push
test
daa
cmp
lahf
or
mov
aaa
mov
xor
and
cmp
mov
lock
or
sub
sub
shlb
xor
loop
sbbl
lds
lret
insl
fbld
inc
sub
jo
popl
cmp
mov
ror
push
dec
cltd
aad
leave
add
or
pop
js
mov
int3
call
mov
fistps
nop
fbstp
cli
cmp
cs
call
add
and
lods
add
cmp
lret
rolb
rcll
pop
inc
xor
pusha
adc
xor
out
pop
sbb
mov
add
add
outsl
stos
les
addr16
inc
fsubrl
stc
imul
cmp
adc
mov
lock
pop
push
lds
jo
and
fsubrs
dec
ret
out
pop
ja
jle
xor
pop
inc
xchg
fbld
mov
mov
mov
in
pop
xchg
jb
mov
mov
adc
test
data16
cmpsb
inc
pop
fs
jns
mov
rorl
jg
inc
sti
push
mov
push
fwait
xor
aad
lods
cs
xlat
push
mov
aam
cwtl
data16
std
nop
fsub
adc
rclb
xor
ljmp
jns
and
fstpt
std
call
xchg
xor
adc
and
cmpsl
lahf
jp
fisttpll
mov
imul
xchg
es
inc
mov
adc
dec
mov
pop
mov
aam
repz
scas
movsl
xor
aam
cmpsl
test
dec
push
adc
call
outsb
cs
mov
dec
leave
mov
inc
lods
or
cmpsb
mov
movsl
lods
xchg
lock
xor
and
in
pop
mov
scas
fiadds
test
pop
bound
neg
xchg
mov
jo
add
jne
in
and
pop
rclb
loop
push
popl
and
adc
sub
fidivs
imul
adc
shlb
cmp
ret
pop
iret
jne
aad
stc
into
xchg
adc
loop
in
xchg
shl
inc
mov
leave
mov
mov
mov
jecxz
push
sbb
pop
in
lret
jg
pop
sbb
mov
rorl
mov
ja
ds
shll
pop
addr16
mov
mov
clc
cmp
inc
jge
pop
push
imul
dec
push
cltd
xchg
xchg
jp
cmc
mov
xlat
pushl
xchg
push
int3
add
add
aam
ret
mov
adc
jae
push
nop
sbbb
cltd
clc
int3
add
add
push
sbb
lea
cli
sub
ljmp
lock
loop
mov
mov
test
stos
sub
into
lds
sub
ljmp
mov
mov
sub
addr16
add
lock
in
iret
es
int
xchg
or
dec
xchg
outsl
iret
inc
cmp
das
mov
jae
push
jae
cmp
mov
rorl
lods
adc
cmpsl
push
fcomps
sbb
mov
cmc
xchg
push
add
cmp
add
add
lods
in
xchg
push
ret
dec
mov
pushf
or
mov
mov
and
and
sub
mov
rcl
int
adc
int3
push
push
pop
sti
dec
pop
mov
lahf
test
es
fiadds
push
js
cmp
mov
inc
fcomps
inc
or
iret
popf
mov
cs
into
sub
xor
adc
jo
mov
mov
dec
cld
cmp
dec
sbb
rclb
mov
decl
jecxz
pop
xor
imul
mov
and
jecxz
cmp
sbb
jp
sar
lods
insl
lret
mov
call
test
shlb
mov
push
pop
pop
xor
lock
mov
xlat
xor
pop
ret
std
push
aam
push
adc
outsl
sbb
push
aaa
mov
pop
mov
mov
add
icebp
push
add
mov
xchg
pop
xchg
push
clc
push
xchg
aam
daa
call
mov
inc
xor
outsl
push
mov
xchg
pushf
jno
inc
popa
lret
or
mov
out
cltd
pop
push
je
movsb
pop
pop
sub
xchg
lock
out
xor
mov
inc
ljmp
rclb
cmc
stos
mov
into
fst
jge
imul
jns
xchg
sub
sarl
cmpsb
call
ljmp
push
ja
pop
call
int3
inc
mov
lret
pop
mov
int3
add
add
mov
add
dec
aam
push
inc
pop
cli
mov
fmull
popf
popf
add
adc
roll
ret
xlat
and
in
sub
call
aad
mov
shll
shrl
aas
int3
js
cwtl
mov
jb
pop
fmull
pop
imul
lcall
scas
dec
data16
in
xchg
add
mov
jecxz
or
sub
add
test
mov
mov
call
jmp
pusha
out
repz
hlt
push
lcall
loopne
sub
jnp
inc
lock
and
mov
inc
ss
push
cmp
inc
mov
and
mov
in
dec
cs
decb
push
and
inc
dec
adc
call
add
movsl
cwtl
out
test
cmp
xor
xor
pop
rorl
xorb
inc
clc
bound
loop
mov
mov
lods
ss
in
mov
mov
ds
cmp
sub
int
pop
adc
cmp
push
dec
sbb
pop
dec
adcl
enter
in
ss
call
add
aaa
cmp
pop
fcompl
lcall
lret
sbb
xor
clc
xchg
pop
jne
adc
jle
clc
push
dec
je
scas
push
lds
std
aas
sti
hlt
sub
xor
out
mov
sub
push
pop
xor
movsl
cmp
outsl
push
cmp
shll
xchg
es
cmp
data16
mov
ret
fcompp
sbb
ret
lea
in
repz
nop
fwait
mov
xorl
jns
mov
cmp
mov
push
cmovns
shll
out
pop
xchg
out
push
xlat
cmpsl
sub
add
fistl
lods
mov
shlb
inc
lret
sub
pop
mov
enter
test
fs
int3
shrl
dec
test
dec
dec
inc
addr16
mov
call
push
loopne
faddl
lds
idivl
push
dec
es
fists
dec
jecxz
repz
push
je
or
loope
cmp
into
inc
mov
mov
mov
sub
push
jmp
jo
in
les
xor
mov
call
leave
push
pop
repz
push
adc
jmp
pop
xchg
adc
inc
xor
jno
or
adc
xor
pop
push
andl
inc
and
fimull
lret
shl
out
lea
inc
mov
imul
pushf
pushf
mov
adc
nop
push
roll
cmpsb
inc
sbb
call
xchg
sbb
pop
repz
push
add
pop
jp
xchg
ret
loope
jo
out
test
dec
mov
sub
sub
mov
jnp
dec
stos
cmc
pop
adc
lcall
les
test
fdiv
jbe
icebp
jp
cmc
xchg
enter
loop
call
mov
sub
jg
insb
leave
cmp
and
mov
mov
xchg
sbb
jecxz
daa
in
or
in
pop
jge
mov
mov
daa
cmp
sbb
push
in
and
xorb
inc
inc
repz
push
out
push
icebp
stc
dec
push
push
inc
das
inc
mov
sti
xchg
jl
rcll
mov
adc
cmc
fldt
pop
into
adc
sarl
lret
enter
iret
cmp
dec
call
das
out
js
adc
sub
out
pop
lods
xor
mov
outsb
mov
cmp
lea
push
fstp
idiv
sub
in
xor
sbb
out
jp
ljmp
cmpsl
push
movsb
rorl
out
push
dec
jno
mov
jns
aad
out
mov
daa
jecxz
leave
mov
jl
push
mov
dec
jo
pushf
inc
mov
add
add
add
add
mov
mov
idivl
out
push
adc
in
insl
in
ss
mov
lock
into
fstpt
ljmp
imul
iret
or
lea
or
jg
stc
mov
loop
push
shlb
lret
cwtl
test
stc
push
iret
int
mov
pop
push
jmp
hlt
add
mov
cltd
stc
or
cmp
outsb
inc
sbb
in
push
add
pop
cmp
int3
pop
stos
mov
cmc
cltd
loope
jle
pop
mov
or
es
push
cmp
incl
incl
inc
jl
repz
pop
ljmp
or
cwtl
fisttpll
lds
shlb
add
pop
fdivs
mov
sbb
mull
xchg
std
jno
or
xor
mov
mov
mov
xor
into
mov
and
out
push
fcmovne
xchg
mov
fs
or
mov
push
pop
pusha
daa
ljmp
dec
out
sbbb
mov
sbb
ficoms
xchg
fdivl
xchg
inc
jp
pop
cwtl
and
mov
xlat
cld
xchg
jge
push
rclb
push
ret
xchg
aas
call
pop
push
aaa
mov
mov
imul
lcall
out
mov
int3
add
add
shr
jmp
gs
nop
insb
outsb
add
out
rclb
sbb
mov
sbb
adc
rclb
jo
jne
addr16
int3
add
add
cmpsb
mov
lods
lret
xor
pop
xchg
sbb
dec
sbb
mov
push
jecxz
repnz
mov
mov
loopne
sbb
mov
mov
popa
jno
sbb
sbb
jmp
fldl
sub
stos
ret
mov
jno
pusha
test
mov
jecxz
jb
cmpsb
cli
outsl
xor
test
scas
sbb
call
xlat
pop
inc
je
xchg
add
mov
add
jns
push
sahf
fwait
xadd
int3
call
push
ret
repnz
and
je
add
add
add
ficoms
xchg
in
fldenv
call
fcmovu
imul
mov
mov
mov
and
mov
sub
inc
dec
xchg
xchg
bound
loopne
sub
fcmovnb
adc
cmp
in
or
testl
das
sub
test
test
lahf
xor
sbb
pop
es
call
fptan
aas
je
push
dec
lret
arpl
mov
out
es
int3
add
add
add
lret
imulb
adc
or
int3
add
iret
mov
subl
int
jnp
dec
mov
xchg
inc
cs
pop
int3
add
mov
das
mov
dec
addl
push
push
ljmp
stc
add
mov
fwait
sbb
xchg
jecxz
mov
ss
lea
enter
lods
arpl
inc
shlb
fwait
xchg
fiadds
and
paddusb
xor
xor
xor
ljmp
imul
addb
mov
fimuls
cmp
jp
rcr
vpunpcklbw
mov
or
lds
cmpsb
jmp
jge
das
lds
and
sarl
int3
call
xchg
xchg
outsl
jae
leave
sub
ljmp
scas
sub
out
mov
adc
pop
dec
popf
mov
loopne
pop
mov
int
cwtl
dec
ret
pusha
adc
push
pushf
dec
fdivl
aaa
sub
fld
cmp
insl
fcmovnbe
movb
or
pop
movsl
mov
mov
dec
ret
inc
insl
cmp
pop
dec
push
out
inc
rol
jno
or
lods
loop
mov
sub
pop
push
xor
push
xchg
sub
popa
mov
into
xorb
xchg
pushl
xor
cmp
fistps
decl
rcrb
test
repnz
stc
test
les
cmp
insb
push
xchg
adc
lea
jmp
int3
nop
xchg
jno
pop
std
call
in
push
push
cmp
mov
push
int3
add
add
int
sbb
daa
xor
loop
adc
and
ret
imul
mov
dec
inc
jb
cmp
lock
or
cmp
xchg
cmp
cmp
adc
jmp
out
add
pop
mov
xchg
jbe
add
inc
push
jnp
addr16
dec
dec
filds
mov
shl
ja
pop
das
cld
or
and
out
div
xor
inc
scas
inc
aad
push
lock
insb
mov
mov
mov
dec
mov
jae
jb
fbld
xchg
cmp
in
loopne
fdivl
out
lods
sbb
xchg
dec
jp
pushf
mov
mov
xor
fmull
push
jg
jno
in
sub
or
fnstsw
cmp
push
xor
push
mov
shl
xchg
dec
mov
stos
shll
fsts
dec
xchg
sub
mov
cmp
mov
je
insl
xor
inc
std
out
test
bound
test
mov
outsl
lahf
rcr
movsb
stos
jb
adc
fnstcw
cmp
rorl
mov
jb
pop
adc
fisubrl
push
idivb
packssdw
sahf
cmc
xor
push
sbb
stc
mov
and
lock
mov
mov
les
lret
and
lahf
dec
mov
in
imul
int3
imul
jecxz
xchg
dec
fcmove
push
outsl
pop
adc
test
fmull
scas
andb
dec
fiadds
loope
icebp
jle
pushf
shl
repz
push
ret
mov
push
inc
imul
movsl
inc
dec
mov
jp
ret
or
pop
incl
incl
add
gs
sbb
movsl
mov
add
mov
jl
lea
xchg
ss
in
jp
inc
cmpsb
in
jge
jge
fucomip
test
int3
push
sahf
loope
cwtl
xchg
dec
adc
push
fs
enter
mov
add
pop
jmp
std
and
cltd
and
out
xchg
lods
scas
add
gs
adc
sbb
out
pop
jle
filds
cmp
push
pop
push
call
and
inc
or
dec
fisubrl
add
xchg
int
fisttps
sbb
in
add
nop
call
push
sub
data16
inc
mov
movsb
jecxz
and
pop
movsl
jecxz
or
xor
dec
mov
daa
cltd
call
mov
mov
jno
cmp
and
fstp
jge
push
sub
xchg
mov
mov
jl
push
adc
cmpsb
cmp
leave
repnz
sahf
fmull
mov
mov
cmpsb
out
jnp
add
and
dec
mul
add
mov
addr16
pop
xchg
fst
or
ljmp
xlat
jg
sbbl
pandn
sbb
jne
mov
mov
fisubl
jne
mov
cltd
mov
insb
mov
jno
and
sbb
addr16
jno
ret
pop
jae
push
mov
rcr
in
fldl
adc
add
or
pop
add
jp
mov
inc
mov
mov
in
data16
mov
lea
movsl
orb
lods
das
pushf
jbe
insb
out
ljmp
inc
gs
aam
add
sbb
xor
rcl
insb
cmp
les
dec
cld
push
out
jb
incl
incl
clc
stc
dec
icebp
repnz
mov
aad
jb
cmp
enter
jl
aam
fldl
int
arpl
pop
or
leave
cwtl
xchg
gs
adc
mov
pop
stos
inc
imul
sub
std
adc
mov
cmp
cld
fs
sbb
pop
ret
lcall
dec
inc
fwait
mov
test
cs
lret
jnp
sti
lahf
and
imul
call
bnd
addr16
mov
and
xchg
push
push
aas
sub
out
xchg
into
outsb
fwait
sbb
js
das
ljmp
mov
cmpsb
pop
xorl
pop
and
into
insb
test
popf
adc
sub
push
mov
mov
mov
jmp
jmp
idivl
sbb
cmp
movl
decl
pop
lahf
pop
sub
cmp
out
movsl
adc
pop
int
inc
push
vpminub
jnp
sbb
notl
sbb
mov
mov
out
sbb
out
adc
stos
xor
call
repz
jp,pt
jae
mov
cmpsb
pop
mov
icebp
fdivl
sbb
mov
out
pop
jle
stc
dec
or
notb
sbb
scas
jg
push
lods
mov
popf
jnp
popf
add
rclb
ja
xorb
movsb
popa
insl
cmp
mov
popa
mov
and
into
dec
mov
mov
lret
ss
int3
add
add
movsb
dec
sti
movsl
leave
fadds
pop
or
mov
cmc
enter
cmpsl
xchg
and
or
xchg
mov
sub
fisttpll
jne
cmpsl
addr16
cwtl
ret
jge
cmc
test
sub
pop
or
fimuls
or
mov
xor
sti
cmp
dec
mov
dec
lret
cwtl
scas
jns
sub
int3
add
add
xor
rclb
push
add
mov
mov
mov
test
or
cmp
aaa
out
mov
xchg
lcall
push
xor
repz
push
call
lea
push
sbb
mov
mov
mov
movsl
sbb
mov
mov
mov
popf
cmp
sbb
xor
icebp
mov
mov
sbb
cmpl
sub
xor
jl
insb
jecxz
or
jle
mov
ljmp
xchg
in
xchg
out
imul
sbb
mov
adc
sbb
push
cmp
mov
loopne
pop
cli
sbb
inc
test
pop
mov
cmp
aaa
mov
pop
xor
or
ds
xchg
cmp
jns
arpl
adc
sub
iret
in
cmp
aam
sub
rolb
inc
popf
lock
add
ds
pushf
test
cmp
test
pushf
test
xor
mov
add
jnp
xchg
xor
or
and
aaa
jae
sub
cmpsb
cmp
add
xor
lcall
xorl
outsl
lea
lahf
lods
stos
pusha
push
adc
inc
fisubrl
popl
les
ljmp
sbb
and
inc
xor
xor
outsb
fst
mov
pusha
lret
les
dec
rcrb
call
dec
jne
loop
or
or
adc
lds
adc
and
aas
xchg
mov
push
stos
dec
mov
add
add
mov
xchg
stos
out
add
daa
push
out
fisttpl
icebp
enter
std
shl
cld
ret
test
push
xor
add
fcomps
pop
jns
loope
ja
or
ficomps
push
enter
push
pop
mov
inc
jae
dec
jle
cli
adc
scas
mov
frndint
pop
pop
xorl
add
sbb
sbb
pop
fnsave
mov
mov
call
jbe
and
stos
fdivrs
add
imul
adc
lcall
xor
inc
dec
sub
mov
loop
lret
out
repnz
mov
pop
mov
xor
sbb
pop
sbb
leave
icebp
sti
and
lods
hlt
inc
adc
sub
js
repnz
in
mov
push
xor
icebp
dec
dec
and
leave
adc
add
sbb
das
add
xchg
pop
inc
xor
aam
adc
js
sub
sbb
adc
cmp
ljmp
cmc
mov
repz
xchg
pop
cli
sub
jae
pop
mov
mov
xchg
bound
mov
in
dec
or
daa
ret
fwait
add
dec
dec
sahf
jbe
mov
scas
ja
pop
addr16
push
out
xchg
outsl
cmp
mov
sti
and
or
or
or
push
mov
sub
fucomi
add
add
add
lea
movsl
mov
out
pop
pop
jg
cltd
aas
aaa
or
mov
pop
dec
sub
mov
cs
xchg
sbb
inc
jno
add
adc
rcrl
cltd
jae
sbb
pop
add
xor
mov
cmp
adc
fidivs
in
or
push
cmp
test
dec
into
mov
aam
or
scas
add
lds
push
lret
mov
sbb
out
xor
push
das
jae
xor
fidivl
or
insl
popf
and
dec
aas
decl
push
or
in
cmp
ss
jecxz
dec
ljmp
loopne
mov
scas
xor
pop
mov
cmp
push
push
push
mov
mov
loopne
and
ret
sub
test
outsl
lods
pop
mov
push
jo
jnp
and
outsl
mov
js
adc
call
data16
in
pop
out
das
sub
jne
clc
adcb
ss
mov
ja
mov
xchg
mov
cli
push
mov
push
jle
pop
arpl
jb
stc
xor
orl
sub
data16
jo
mov
push
mov
inc
imul
sahf
add
call
int3
aam
cltd
cmp
sub
inc
mov
ficompl
jae
ja
mov
mov
mov
push
cmp
mov
jno
mov
push
pop
mov
fsubrs
xchg
add
xchg
fst
aaa
mov
je
stos
push
sub
inc
jo
mov
idivl
insl
hlt
push
int
cmpsb
add
sbb
mov
push
je
decb
inc
jmp
sahf
or
mov
repnz
movsl
pop
fsubrl
sbb
push
sub
test
mov
and
jle
in
jns
sbb
imul
test
insl
ja
lret
stc
add
xor
int3
call
mov
adc
hlt
loope
xchg
stc
push
mov
fldt
out
jge
sti
xor
ffree
imul
mov
cmp
sub
add
xor
iret
ficoms
push
stos
int3
add
xor
jmp
rcl
aaa
std
pop
lea
pop
add
les
cmp
jl
sarl
push
fiadds
xchg
xor
adc
mov
add
dec
adc
sahf
fs
mov
mov
mov
mov
inc
xchg
ljmp
stc
mov
nop
movsb
ljmp
xor
mov
cmp
fsubrs
jae
add
dec
pop
jnp
fisubrs
pop
popf
inc
popa
aas
cmpsb
sub
mov
lods
call
push
scas
sub
dec
dec
leave
push
mov
fxch
stc
test
lahf
xchg
sbb
inc
push
jbe
in
aad
fmuls
sub
cmp
dec
popf
inc
add
xor
int3
add
add
xor
dec
mov
mov
ss
xor
dec
fwait
rclw
sbb
call
jp
testl
stos
cld
fdivrl
mov
mov
inc
ret
pop
ljmp
aam
mov
xlat
stos
and
adc
call
les
das
or
ds
jnp
shl
lea
dec
mov
mov
fsubl
sub
jno
decb
adc
call
add
call
lret
std
adc
fdivrs
mov
pop
push
dec
aad
and
int3
call
mov
cmp
xor
adc
sub
negb
orb
and
mov
es
pop
clc
not
push
sbb
pop
les
call
outsl
adc
aam
enter
push
out
mov
sbb
les
pop
arpl
mov
mov
dec
jg
or
mov
cmp
sbb
aam
pop
pop
cltd
mov
movsb
mov
das
testb
dec
pop
pop
outsl
push
insl
sbb
lcall
pop
in
mov
inc
sub
jae
decl
in
mov
int
cmpl
dec
test
mov
movsl
push
dec
daa
sbb
fwait
in
jmp
mov
ret
jl
dec
jge
mov
jl
adc
xchg
xlat
mov
fsubr
inc
or
fldt
loopne
cmp
enter
adc
int
sub
popa
jecxz
xor
fstpl
inc
inc
cmp
icebp
mov
jmp
cmp
gs
ror
or
mov
loopw
fs
add
add
dec
add
lock
out
sub
mov
pop
sub
sbb
sub
xor
mov
jne
inc
pop
mov
cwtl
repnz
xchg
jno
test
mov
jb,pt
dec
or
sub
fdivrs
sub
imul
ror
mov
out
fwait
es
test
fdivr
push
jbe
loop
xlat
enter
sbb
pop
fwait
sahf
push
xchg
ljmp
pop
mov
adc
lods
lock
jne
mov
sub
adc
fcompl
sub
mov
in
dec
mull
mov
gs
xor
push
inc
cmp
sti
adc
sti
imul
or
add
dec
or
jge
fists
jge
lahf
mov
sub
inc
in
mov
out
mov
mov
repz
adc
inc
push
fdivl
xor
cmc
frstor
mov
roll
scas
cmpsl
insl
addb
dec
inc
repz
out
xchg
js
jae
or
imul
lahf
cmp
sub
mov
flds
in
adc
pop
lods
push
sbb
xchg
call
adc
dec
mov
mov
add
pusha
xor
mov
inc
cmp
xor
jl
movsl
add
jo
add
fwait
in
inc
jnp
jns
sbb
inc
aad
cltd
jnp
call
pop
fadds
push
ficompl
incl
mov
pop
push
and
jno
out
insl
ljmp
fimuls
fcmovnu
jns
insl
push
in
sub
add
in
mov
out
push
jge
cmpsl
out
cld
dec
jmp
xchg
inc
jg
push
mov
jl
dec
addr16
hlt
mov
cmc
inc
jl
aam
es
shll
push
mov
int3
add
pushf
pop
xlat
dec
jo
mov
mov
and
out
pop
shr
mov
adc
repnz
mov
add
jae
dec
sbb
aad
fistpl
jg
mov
push
cmpl
push
cmp
aad
test
rcrb
sbb
jb
xor
sbb
adc
lcall
xchg
sbb
lret
adc
inc
ds
out
mov
int
rcrl
mov
dec
aaa
xchg
sub
cwtl
add
je
pop
arpl
mov
call
shlb
mov
mov
out
ret
fneni(8087
test
test
les
jecxz
xor
lods
push
mov
outsb
stc
inc
push
cmc
fisttpl
pop
dec
adc
out
iret
mov
dec
xor
add
mov
daa
mov
inc
sbb
pop
push
pop
dec
sub
cmp
jae
push
xchg
bound
cmpsb
fistpll
lcall
jb
rorl
xlat
movsb
movsb
jmp
decl
jecxz
cmp
fisttpl
cld
testl
je
popa
sub
cmp
imul
adc
xchg
sub
cmp
add
lods
pop
ja
bound
pop
pop
pop
add
std
into
and
mov
adc
pushf
dec
insl
and
pop
iret
mov
mov
js
fwait
popa
mov
mov
es
and
mov
push
in
sub
jg
insb
lock
call
add
dec
jecxz
pop
jp
loope
popa
cwtl
stos
mov
lea
shr
addl
xor
hlt
inc
mov
add
push
jbe,pt
xbegin
push
cmp
jge
pop
xor
pop
inc
cltd
pop
mov
and
int
loope
sahf
gs
pop
mov
je
in
shlb
push
call
inc
es
or
xlat
pop
dec
les
out
mov
or
jo
inc
pop
fmul
mov
mov
loope
dec
dec
test
repz
call
pop
mov
jmp
and
decl
insb
and
mov
adc
mov
mov
dec
aas
aas
mov
push
mov
dec
loopne
mov
ret
int
or
adc
aad
stos
or
ret
repnz
jb
mov
pop
inc
cmp
jb
jp
lcall
aaa
xchg
mov
repz
fmull
add
pextrw
sub
mov
bound
loopne
popa
int3
add
add
test
and
mov
testb
xor
and
stc
xor
jo
mov
test
ja
jns
out
out
sbb
inc
jl
and
fldenv
daa
cmpsl
sub
fdivrs
repz
jbe
je
jp
mov
mov
pop
jae
pop
cli
mov
shrb
pushf
scas
call
sbb
push
out
fdivrl
call
xchg
or
add
mov
enter
mov
mov
aam
inc
pop
add
sub
dec
fists
int3
cmp
cmpsb
pop
arpl
pop
je
inc
rclb
adc
les
sbb
add
iret
addb
jecxz
arpl
outsb
sbb
mov
pushf
ret
aaa
cmpsl
int3
add
add
loopne
sbb
rorl
lret
push
jno
arpl
dec
xchg
sbb
mov
leave
or
adcb
inc
dec
inc
push
lret
jmp
jecxz
sbb
pop
cli
stos
lods
adc
jge
scas
pop
adc
jmp
addr16
push
pop
rol
sub
es
roll
inc
push
mov
dec
test
incl
stc
mov
ds
clc
jp
je
outsl
sarl
and
add
add
add
stos
popf
dec
out
add
insb
fimull
arpl
dec
cmpsl
adc
test
push
lret
adc
or
mov
mov
lret
inc
inc
and
out
rcr
dec
loope
jnp
pop
mov
dec
mov
outsl
jnp
icebp
push
es
das
hlt
add
cmp
sbbl
adc
fldenv
jne
sbb
cmpb
add
insb
add
aaa
sub
inc
cmc
xor
jns
shlb
fcmovbe
cmp
int3
push
lods
cld
xor
xor
adc
mov
mov
jle
cltd
or
int3
add
mov
pop
xchg
push
dec
fs
jp
addr16
hlt
into
or
in
mov
aas
pop
loop
stos
gs
jae
mov
out
es
cmp
sbb
and
lods
pop
adc
lahf
sti
mov
xchg
cld
mov
out
loope
lret
or
stc
or
push
scas
push
cwtl
mov
loopne
imul
cwtl
sub
sbb
test
mov
or
call
or
adc
mov
outsb
or
adc
and
out
sbb
and
jno
pop
inc
sub
xchg
push
xchg
lret
outsl
cmpsb
clc
fdivr
push
xor
in
loope
push
lods
xchg
push
xor
je
cmp
xchg
mov
pop
decl
das
addr16
lds
and
cld
xor
xor
call
ljmp
cmp
scas
sbb
add
add
rcrl
mov
sub
sbb
imul
mov
add
jne
pop
addr16
bound
xor
inc
shlb
or
or
pop
dec
dec
cmp
out
int3
add
add
adc
sub
int3
jbe
and
shll
shl
push
push
or
call
lock
aad
mov
xor
cmp
aam
pushf
push
mov
jnp
je
cmp
pushf
aas
pop
fsubp
push
jl
js
stc
fisubrs
inc
scas
repz
mov
or
fs
es
rclb
pop
dec
lret
jne
pop
xor
shrb
mov
fs
lret
add
push
xor
and
adc
adc
and
hlt
filds
jne
mov
dec
out
xchg
int3
repnz
or
xor
adc
jecxz
fisubs
orb
leave
mov
stos
pushf
or
jp
ja
pop
jns
add
dec
lea
dec
mov
sub
sbb
xlat
or
jnp
cmp
cmc
lock
mov
mov
mov
dec
adc
push
andb
sarl
cli
cmp
testl
cs
cltd
popf
sub
hlt
ret
mov
ljmp
cld
cltd
cmp
pop
and
pop
fistpl
push
dec
pushw
lret
and
jle
out
cmp
arpl
xchg
xchg
test
loopne
mov
sbb
cld
mov
insb
addl
cmp
jge
pop
rcrb
js
add
push
gs
add
arpl
ficoml
pop
int3
add
xor
movb
push
test
jecxz
movsl
out
add
pop
xchg
test
das
adc
cs
push
adc
imul
dec
test
pop
cmpsb
mov
mov
lods
iret
or
jno
sub
sbbb
lds
sti
shlb
or
and
ljmp
mov
xor
xchg
jle
scas
outsb
jge
dec
push
dec
orl
jae
jnp
decl
test
pop
subl
icebp
mov
jns
push
sub
cmpsl
test
or
dec
xor
pushf
push
outsb
jmp
and
fcmovu
xchg
sti
push
lcall
add
fcmovb
sbb
bound
push
addr16
pop
xchg
pop
cmp
fimull
popa
aam
push
in
shr
mov
inc
ficomps
into
push
into
jnp
arpl
adc
insb
xor
mov
mov
ret
xor
xor
add
mov
mov
repnz
loop
int
lods
out
jcxz
iret
or
data16
mov
push
mov
mov
mov
adc
cmp
cmp
pop
mov
mov
and
nop
and
orb
sahf
pop
cmp
mov
hlt
xor
sbb
mov
jle
and
orb
sarb
pop
loop
mov
inc
pushf
ja
jmp
xor
mov
add
or
mov
jno
outsb
aas
mov
enter
rcll
cltd
imul
ret
lods
jle
dec
pop
xchg
std
je
leave
push
in
lock
ljmp
push
fcmovu
mov
mov
cmpsb
mov
dec
cld
lcall
or
flds
add
out
int3
dec
and
mov
outsl
into
jp
sarl
daa
fsts
daa
ds
jl
pushl
repnz
stos
adc
ja
jge
fmuls
into
xor
fdivl
data16
stos
gs
sar
out
shll
add
add
add
sub
bound
outsb
push
sbb
test
cmc
call
add
ja
sbb
loope
push
dec
add
pop
lock
ss
mov
push
inc
jne
jg
pop
adc
or
push
and
and
andl
clc
test
addb
xor
mov
or
mov
stc
pop
pop
fwait
sbb
scas
clc
jns
inc
lock
jl
popa
mov
fstl
lcall
call
in
xchg
mov
jns
bound
jne
icebp
popf
neg
cmp
in
lcall
add
gs
ss
sub
pop
int
movsl
sbb
loopne
lcall
popa
aam
fwait
sti
jl
push
jnp
ljmp
pusha
mov
adc
push
das
or
adc
fwait
xchg
aad
enter
mov
push
fistps
test
sbb
jb
out
lds
insl
int3
add
movsb
sti
lret
js
loopne
cmp
andb
jp
inc
push
lcall
xor
shr
stos
push
cmp
add
jae
ljmp
add
and
pop
aaa
jp
mov
lret
clc
fdivrs
cmpsb
jmp
fstl
pop
ss
jno
mov
nop
icebp
imul
xchg
push
subb
mov
and
and
movsb
inc
add
dec
inc
pop
mov
leave
int3
add
add
loope
add
cli
and
push
movb
rclb
sub
jo
clc
je
mov
mov
sbb
xorl
sbb
mov
push
and
clc
faddp
inc
addr16
xorb
subb
push
andl
pop
pop
mov
test
dec
cwtl
push
int
cmc
xor
es
lds
inc
call
jl
sub
add
scas
push
and
iret
mov
pushf
mov
xor
mov
xor
or
sti
test
in
mov
cmc
aaa
sub
in
cmp
jno,pt
push
rcl
aas
mov
mov
cmpsb
cwtl
sahf
jg
sub
push
sarl
sbb
lret
or
xchg
push
sbb
call
sarb
stc
mov
inc
std
adc
cmpsb
xchg
add
dec
or
mov
std
dec
clc
add
pop
lods
sti
pop
popf
pop
lahf
push
and
push
in
inc
mov
mov
push
pop
sub
leave
out
test
ds
xorl
dec
xchg
dec
sub
fisubrs
or
ja
fisttpl
dec
and
xlat
call
add
mov
faddl
push
mov
fistl
adcb
jnp
jnp,pn
push
cmc
mov
mov
mov
add
mov
test
mov
stos
ss
sti
add
pusha
pop
push
dec
cmp
cmp
int3
call
shll
mov
mov
push
adc
negb
sbb
call
xchg
sub
sub
sbb
mov
dec
ljmp
mov
ret
jmp
xor
imul
cmp
jmp
int3
call
xor
cld
or
inc
fiaddl
ret
xor
push
ret
movsl
out
fmull
add
push
cld
mov
cmp
add
mov
jbe
jno
imul
push
insb
icebp
sub
call
fsubr
stos
test
in
in
cld
stos
pop
repz
sub
decl
dec
cmc
cld
mov
inc
sub
or
lods
add
mov
dec
movsl
jecxz
fistpll
iret
imul
fwait
popa
pop
sbb
std
sub
xor
xchg
fildll
adc
pop
test
test
xchg
insb
mov
xchg
lret
inc
icebp
stc
mov
mov
popa
in
push
sub
dec
cmpsl
sub
sbb
sub
in
mov
push
into
push
dec
fsubrl
push
andb
mov
and
adc
cmp
pop
dec
jno
pop
add
pop
add
jecxz
out
mov
icebp
pop
les
sbb
xchg
rolb
ljmp
and
add
popf
xchg
xchg
sbb
fwait
das
inc
sub
mov
arpl
add
aam
ljmp
in
sahf
stc
xchg
inc
xchg
xorb
test
stc
movsb
xchg
xchg
movsl
ljmp
jle
fwait
xchg
mov
das
push
xor
pop
adc
xchg
xchg
loop
cmp
aas
jae
lods
ror
add
in
mov
pop
xchg
mov
loop
int3
icebp
inc
lcall
pop
loope
jge
push
sub
int3
add
sbb
push
js
scas
int
mov
sub
shl
aad
inc
je
jge
clc
out
cmc
dec
pushf
cmpsl
push
push
ror
out
shrl
js
mov
repz
stc
fcompl
ret
shlb
in
div
fucomip
jge
int3
in
sub
loopne
push
lcall
pop
push
lods
ljmp
cli
leave
int3
inc
gs
jbe
xor
dec
repz
pop
pop
roll
aam
mov
hlt
dec
test
fmul
inc
loope
add
add
pop
js
or
sbb
mov
imul
lcall
jmp
inc
rcll
mov
xor
jle
cmp
out
jle
jo
test
jns
lea
mov
adc
jns
xchg
shl
add
jmp
pop
cld
cmpsl
addr16
popf
lods
push
dec
sar
push
mov
mov
and
add
pushl
mov
lret
push
arpl
pushf
call
aad
pop
dec
insl
movsb
sbb
das
xor
push
jp
popa
std
ret
jbe
jae
sub
adc
fsubl
add
sbb
pop
or
xchg
cld
pop
mov
adc
bound
push
pop
clc
sbb
xchg
lahf
dec
ret
ss
leave
mov
sbb
jl
add
lods
aad
sub
or
jae
or
or
jno
sbb
ss
and
lcall
rorl
das
adc
mov
adc
mov
out
leave
sub
roll
fildl
fucomip
inc
xor
mov
sahf
adc
push
inc
je
lahf
gs
sub
cltd
addr16
jb
mov
iret
loopne
scas
adc
pop
rorb
lret
scas
xor
adc
cmpsb
call
add
xor
mov
out
out
hlt
sub
loopne
scas
outsl
adc
scas
cs
pop
dec
out
int3
add
add
inc
jne
add
test
xlat
lea
pop
mul
jns
dec
lock
cs
and
mov
das
imul
pop
adc
adc
jmp
vmovlps
pushf
and
sbb
add
sbbl
adc
or
pop
lcall
jecxz
mov
cmp
subb
mov
insb
dec
bound
loopne
dec
sbb
call
mov
xchg
lods
aad
fcmovbe
fs
xchg
jbe
or
movb
daa
jbe
leave
mov
push
dec
and
inc
aam
popa
xchg
mov
loop
ja
jmp
adc
aaa
adc
or
int
andb
aam
mov
les
jmp
mov
jo
aam
lcall
xor
jae
cmpsl
ret
mov
pop
shll
lea
mov
test
js
cmp
adc
ret
lds
in
cmp
fildl
mull
repnz
pop
pop
jmp
loopne
repnz
cs
test
mov
jo
fbstp
mov
enter
add
add
out
sub
js
decl
pushf
cmp
stc
lcall
std
jg
xor
sti
mov
nop
push
or
shrl
xor
int
inc
mov
mov
pop
sub
sbb
xorl
inc
int3
add
add
pop
aaa
and
idivl
scas
jg
lods
pop
idivl
ds
movsb
xor
pushf
jmp
cmp
add
pop
xchg
js
scas
jecxz
sahf
mov
xchg
ret
jae
ret
jl
sbb
les
pop
cwtl
imul
movsl
mov
in
jle
aad
test
adc
repnz
push
lahf
fstl
gs
mov
dec
stc
add
mov
mov
mov
shll
test
jns
push
mov
mov
int
pop
movsb
out
xchg
outsb
push
mov
out
insl
xor
shll
das
inc
nop
addr16
cmc
int3
lds
pop
push
incl
incl
mov
int
shlb
push
jecxz
or
fadd
and
and
aaa
xchg
lret
rolb
add
add
dec
mov
sbb
mov
jge
push
stos
jl
loop
lret
or
xchg
xchg
dec
pop
sub
aad
ret
mov
jae
or
cmpsb
xchg
scas
movsl
lret
in
cwtl
ficomps
ret
call
sbb
gs
fldt
mov
sbb
cmpsb
scas
movsb
pop
fwait
dec
ds
jno
call
push
lahf
cmp
fimuls
stos
sub
xchg
xor
outsl
blci
negb
jno
idivl
xor
mov
mov
mov
popa
cmpsb
shlb
push
jmp
lock
roll
mov
jno
and
into
movsl
mov
push
push
or
lret
cltd
sbb
push
imul
mull
call
pushl
ds
xchg
sbb
loope
add
lods
sti
out
movsl
repnz
xor
dec
pop
jnp
rorl
ds
pushf
sbb
add
pushf
scas
and
mov
lds
shrl
mov
cmpsb
add
jns
pop
or
cld
fildl
into
push
xlat
cmc
or
ja
mov
dec
mov
decl
inc
inc
or
aam
pop
push
xorl
xchg
lock
test
pusha
imul
addr16
sahf
or
xchg
or
xor
loop
jb
jmp
int3
sub
push
test
pop
test
cmp
fdivrs
inc
push
pushl
inc
xor
sbb
sub
pop
mov
addr16
std
or
mov
mov
xchg
pusha
pusha
pop
cmpsl
inc
lcall
or
sbb
adc
dec
pop
sub
jle
andl
xchg
daa
mov
scas
sub
add
add
mov
push
incl
incl
incl
sbb
dec
jg
jg
sahf
adc
lock
xor
leave
lds
cmp
xchg
cmp
pusha
dec
and
add
cmp
cmp
dec
incl
incl
incl
dec
jmp
or
loop
test
fbld
addr16
into
and
dec
pop
pop
in
stos
sbb
lea
push
ds
outsl
sub
lods
xor
outsl
add
or
data16
es
insb
addb
cmp
mov
adc
mov
jo
push
jecxz
pop
test
jne
into
adcb
mov
and
fwait
decl
jl
and
les
fst
mov
mov
and
andb
push
or
imul
push
dec
jle
pop
jle
cmp
mov
fwait
xor
test
inc
jge
insb
ret
and
aad
adc
lahf
jmp
loopne
jo
jne
xlat
mov
div
icebp
jne
adcb
fs
or
adc
mov
ljmp
aas
scas
sti
adc
jae
outsb
push
sbb
int3
add
fucomi
pop
ja
enter
push
ljmp
hlt
stos
mov
jle
iret
mov
rcrb
xor
jecxz
inc
cmpsl
fsts
out
mov
or
int
imul
rcll
pop
pop
arpl
mov
or
xor
mov
repnz
movsl
xchg
ret
push
jg
aaa
cmc
mov
sub
mov
iret
iret
ja
adc
mov
mov
insb
dec
sbb
inc
cmp
cmp
or
pushf
aaa
addr16
pop
mov
pushf
pop
bound
movsb
mov
and
xor
mov
mov
scas
cli
sub
sbb
sbb
out
mov
dec
popf
cmc
mov
sub
push
pop
xchg
fs
mov
lret
js
rclb
jne
lock
add
dec
xor
inc
incl
incl
ljmp
lock
sahf
rclb
sahf
cmpb
outsl
inc
paddsw
jnp
jo
ss
int
call
bound
push
inc
and
cs
xchg
add
add
popa
or
or
fwait
shll
add
dec
sbb
ret
cltd
pop
xor
daa
pop
push
dec
or
lods
adc
or
mov
out
cmp
add
data16
aas
inc
inc
push
scas
mov
scas
xchg
aaa
pop
sbb
clc
imulb
mov
sbb
xor
jbe
aaa
adc
enter
fs
aas
pop
into
aam
mov
cli
pop
int3
fsubs
jmp
dec
daa
xchg
subb
stos
inc
ljmp
leave
cs
movsb
inc
rorb
clc
aaa
jae
in
jl
push
sub
sub
int3
add
out
pop
inc
test
inc
insl
hlt
cmp
mov
lea
xchg
cmp
popf
pop
js
jns
fwait
fs
incl
sub
jae
sub
jp
push
mov
pop
jbe
hlt
test
xor
or
setp
adc
adc
pop
mov
fistps
sub
outsb
andb
cld
mov
dec
xchg
mov
in
xchg
sub
lret
int3
mov
pop
fidivl
sub
iret
and
leave
aam
ds
iret
cmp
add
xchg
dec
cmpsl
and
jnp
push
out
into
cmpsl
out
sub
bound
mov
lods
int3
add
sarl
mov
sahf
loopne
addb
mov
adcb
fldcw
inc
cmc
or
pop
inc
lahf
and
pop
xchg
repnz
aaa
cmp
into
test
ja
jmp
xchg
pusha
mov
pop
loop
sub
sbb
lahf
lret
mov
mov
jp
sbb
mov
sbbl
int3
call
cwtl
stc
mov
cmp
mov
add
jns
adc
push
dec
cvtpi2ps
jno
fdivl
adc
icebp
lods
sbb
add
and
pusha
sbb
in
add
icebp
xor
std
push
testl
dec
mov
jecxz
ret
lock
ds
push
popf
mov
sbb
pop
fldcw
xchg
xchg
js
mov
mov
push
push
int3
add
add
add
imul
daa
out
xor
dec
inc
and
ljmp
repz
jbe
or
in
addr16
push
mov
in
xchg
or
out
pop
pusha
jmp
movsl
out
test
adc
es
jg
fisubrl
loop
add
push
pop
sbb
mov
jmp
mov
scas
fsubl
sahf
adc
cltd
and
iret
xor
loopne
leave
mov
xchg
clc
mov
mov
xchg
fwait
mov
or
incl
incl
inc
mov
stos
adc
out
jbe
dec
pop
xor
pop
dec
js
push
jl
gs
push
adc
cmpsl
ret
xchg
daa
cmp
and
loop
fnstsw
cmp
xchg
out
mov
addr16
sti
push
add
mov
mov
push
inc
sbb
and
inc
mov
and
cmp
sub
imul
aad
and
adc
jp
lret
xchg
xchg
cmpb
fs
sbb
int3
call
cmp
call
add
pop
fistps
popf
incl
add
fucomi
dec
int3
or
xchg
clc
test
fistpll
jmp
leave
lcall
adc
mov
mov
mov
inc
sbb
push
sbb
inc
in
push
cmp
sub
inc
or
push
aaa
popa
imul
jle
popf
sbb
xchg
add
mov
add
iret
add
sahf
push
negb
ret
mov
jbe
lea
sub
mov
scas
mov
mov
pop
mov
cmc
ja
lea
aas
stos
mov
add
add
jp
rcr
insl
mov
mov
mov
push
push
mov
out
lods
in
mov
int3
lock
or
jmp
pop
jne
cmp
push
jmp
xor
cmp
in
pop
jbe
mov
mov
mov
or
mov
je
mov
cwtl
cmp
mov
add
xchg
dec
pop
push
sahf
add
cwtl
add
jae
jo
xor
add
add
notb
ret
movsl
cmp
loopne
loope
adc
aas
icebp
in
xor
pusha
inc
into
inc
jo
es
xchg
adc
push
push
roll
inc
ftst
push
aam
mov
mov
xor
in
icebp
aad
dec
mov
xchg
sahf
lret
outsb
jmp
fs
push
inc
testl
mov
adc
mov
je
cmp
ret
loop
in
loope
lods
sub
call
pushf
dec
arpl
sbbb
sbb
addb
fcmovu
cwtl
and
lret
bound
pushf
adc
aaa
sarb
int
outsl
jbe
xchg
sub
arpl
aam
inc
out
and
add
add
add
loopne
jle
push
push
cmova
mov
xchg
in
cli
movsb
test
in
fldcw
data16
lea
fwait
sti
mov
clc
sub
pop
xchg
xor
outsl
and
out
pop
stos
cmp
aas
test
mov
fwait
pop
sub
lea
incl
leave
scas
jp
les
lods
fldt
inc
jns
jle
mov
std
adc
rol
addr16
je
fistpll
das
xchg
mov
pushf
or
jo
jns
push
js
jne
lea
outsb
and
mov
outsl
cmp
cmp
push
or
or
jnp
adc
outsb
mov
daa
push
push
mov
inc
ret
xchg
push
dec
push
cmpsl
ror
add
push
test
xchg
xor
xor
or
scas
dec
sub
mov
in
test
in
ret
incl
incl
jmp
jge
ja
hlt
and
out
gs
out
xchg
outsb
sub
test
sarb
imul
aas
mov
jno
aad
fldenv
pop
pop
test
pop
push
adc
jle
inc
fs
filds
sbb
xchg
dec
inc
movsl
imul
adc
add
sub
adc
inc
and
cmp
add
add
add
push
insl
push
sti
cmc
mov
add
call
out
pop
push
cmpsb
adc
insb
jne
mov
mov
dec
test
ret
call
mul
dec
popa
in
aas
pop
pop
loopne
dec
mov
pop
or
xchg
pop
inc
clc
test
and
xchg
sarl
jmp
jge
imul
adcl
pop
mov
popa
mov
push
loopne
push
xchg
cmp
inc
mov
cmpsb
xchg
adc
movl
push
int
cmp
test
jle
test
mov
cmp
dec
jno
jno
inc
outsb
dec
pop
imul
call
into
test
out
fchs
fisttps
pop
in
sub
mov
add
and
insl
sbb
pop
jno
mov
xchg
ds
jmp
or
push
pop
mov
test
arpl
and
jne
mov
pushf
fadd
and
push
mov
decl
cmp
push
xchg
push
repnz
js
inc
lret
xor
les
jge
xchg
testl
jecxz
sub
test
rcrl
out
lea
or
lret
push
and
cltd
lret
dec
and
outsb
and
sub
inc
mov
ret
xor
adcb
scas
out
loop
cmp
lret
rcr
roll
inc
or
dec
dec
adc
rorl
mov
addl
mov
stos
in
test
cmp
cld
xchg
incl
incl
pushl
dec
gs
ds
add
dec
popf
jns
jo
pop
jmp
jns
cwtl
shlb
mov
mov
jmp
xchg
pop
xchg
cmp
jbe
adc
or
xor
jb
aaa
adc
ret
push
test
in
push
xorb
cmp
mulb
and
call
mov
pusha
and
mov
in
dec
xor
jecxz
push
cs
leave
inc
mov
push
ss
push
sbb
mov
dec
popa
call
add
add
add
adc
add
incl
mov
in
outsb
stc
mov
push
sar
cmp
sbb
adc
pop
rcll
sub
clc
cmc
push
lret
push
mov
xor
mov
insb
ljmp
outsb
mov
xchg
mov
ret
xchg
push
fcoms
adc
shl
ljmp
rep
lock
dec
jno
stc
call
sub
fdiv
inc
pop
xchg
dec
adc
xorl
cmp
es
pop
xor
mov
and
xchg
addr16
jmp
daa
aaa
push
ficomps
cltd
in
mov
mov
ja
push
fwait
shrl
fnstsw
sub
inc
popa
xor
movl
lock
push
xchg
xor
test
xchg
xchg
std
filds
mov
jne
stos
arpl
out
fs
jb
movsb
mov
repnz
or
into
stos
cmp
js
jae
or
pop
jmp
or
mov
push
mov
popf
gs
add
mov
mov
je
mov
adc
std
lods
pusha
les
lcall
pop
cli
in
mov
push
andb
xor
xchg
into
or
sbb
or
and
shll
dec
sarb
add
or
xor
mov
lahf
leave
dec
sbb
movsl
scas
and
sub
jge
iret
lea
call
inc
loope
add
add
inc
pushf
fidivl
jns
push
xchg
sbb
loopne
mov
es
xchg
es
push
or
dec
scas
sbb
movsl
iret
ja
out
loope
sbb
cmpsb
outsl
test
repz
cmpsl
mov
mov
std
inc
and
loope,pn
cmp
sti
mov
sbb
out
sbb
aaa
xchg
or
int
out
add
popa
sub
stos
cmpb
sarl
cmpsl
push
aad
sub
xor
and
mov
in
inc
call
fisttps
and
adc
push
adc
lock
cld
and
negb
xor
xor
xor
arpl
push
inc
sarl
mov
cmp
loop
js
inc
add
daa
pop
push
pop
scas
xor
xor
push
jmp
add
incl
dec
setge
inc
out
push
outsl
mov
inc
ja
mov
sbb
and
jg
lods
stos
xchg
lret
adc
test
add
push
cmp
pop
data16
and
push
fldcw
popa
mov
dec
cmc
jp,pt
or
fs
call
or
mov
nop
pop
inc
test
sbb
dec
jo
out
xor
adc
push
out
mov
outsb
and
mov
repnz
xor
sbbl
cmp
jg
mov
hlt
mov
adcb
xchg
aam
ljmp
movsl
repnz
mov
jae
insb
loope
aad
jns
cld
xchg
jge
stos
jmp
loope,pt
shlb
cmp
call
pop
cmp
xor
andl
icebp
cli
jnp
or
cmpsb
push
and
shlb
pop
lea
xchg
mov
insb
dec
mov
aad
aam
jbe
pushf
adc
push
inc
sti
repz
xchg
addb
dec
shlb
sub
les
outsb
jp
repz
jo
xchg
cwtl
add
testl
call
push
jns
fcompl
inc
nop
imul
aam
in
xor
adc
lods
xor
and
mov
sub
enter
loop
call
dec
ret
test
arpl
je
mov
cmpsb
popf
hlt
es
jg
inc
cltd
push
dec
sub
adc
pop
dec
sbb
bound
xchg
mov
movb
push
into
stc
sbb
add
sbb
mov
lret
int3
add
add
add
ds
lahf
outsb
pop
adc
add
popa
stos
das
imulb
enter
fcoms
fs
out
call
int3
xchg
mov
arpl
neg
cs
clc
lcall
les
mov
test
stos
and
mov
mov
mov
test
xchg
daa
xor
push
mov
dec
lcall
pop
pusha
or
bound
hlt
stos
movsb
fwait
xchg
mov
inc
jmp
jmp
lret
jecxz
push
fdivs
das
imulb
dec
push
push
addl
sarb
rcl
jae
jle
or
cmpsl
jl
push
mov
mov
jb
rcl
lock
xchg
jae
xchg
mov
mov
mov
push
push
mov
arpl
repnz
push
push
sub
or
aam
mov
or
push
incl
incl
add
je
xor
mov
jp
lcall
add
cmp
pop
push
sbb
inc
shrl
add
dec
nop
mov
pop
dec
call
sub
xchg
cwtl
fcompl
mov
testl
fucom
xlat
xchg
test
loope
mov
sarl
fwait
jp
mov
mov
aaa
adc
jl
arpl
fldln2
inc
cmp
mov
decl
push
cltd
nop
fcomps
or
xchg
leave
pusha
xor
call
test
fst
lret
lds
add
xor
das
notb
mov
lahf
mov
nop
lret
xlat
mov
outsl
leave
pop
addr16
stos
push
notb
lock
xorl
arpl
push
mov
xchg
rorb
cmp
adc
into
cmc
push
or
sub
rcl
shl
xchg
aad
lahf
out
mov
push
nop
push
adc
jo
push
cmp
inc
hlt
and
cmp
daa
rcll
inc
cli
and
incl
incl
push
sub
adc
sub
dec
xchg
mov
push
rcll
out
rcrb
jg
push
xchg
or
cld
mov
ljmp
fstps
lahf
test
loopne
data16
push
or
sbb
jo
push
push
push
repz
cmp
inc
and
sub
aad
add
gs
incl
faddp
sbb
dec
pop
xlat
lods
pop
mov
cltd
addb
loop
lock
inc
xor
xchg
loopne
decl
xor
sbb
xor
pop
in
inc
adc
mov
insb
adc
popf
fld
out
idiv
jmp
jbe
dec
jp
test
cld
jno
xchg
js
mov
inc
jecxz
jae
movsl
int
pop
dec
push
jl
daa
stc
test
inc
and
xor
add
jmp
test
push
xor
jge
mov
xchg
dec
xchg
je
ss
xchg
jl
imul
imul
mov
add
pop
jecxz
and
int
aad
ljmp
mov
out
test
lods
and
bound
mov
repz
test
dec
in
stos
xchg
leave
out
imul
mov
mov
and
adc
xchg
or
jno
mov
mov
xor
repz
cmc
loop
inc
lcall
mov
lods
push
mov
dec
rol
cmpb
push
add
push
mov
movsb
js
int3
add
add
clc
cmpsb
push
sub
dec
and
fwait
nop
aad
sub
push
sti
addr16
sub
lock
mov
add
cmpsl
mov
add
call
daa
imul
mov
pop
cltd
mov
cmpsb
mov
dec
and
mov
rcll
mov
aad
sub
scas
ds
inc
xor
mov
cli
mov
mov
mov
rcrl
pop
mov
dec
movsl
hlt
jb
push
push
mov
cmp
ret
test
repnz
pop
add
or
fldl
jno
loopne
push
cmc
sbb
repz
sbb
inc
mov
pushf
sti
shrl
add
sbb
movsl
fimuls
int
or
xor
jns
sub
jmp
out
in
ret
inc
pop
push
lds
push
pop
mov
cmp
jno
mov
xor
sbb
std
lahf
repnz
xchg
xchg
cmp
sub
adcb
int3
call
inc
pop
in
test
aam
mov
cmp
adc
addr16
movaps
das
rolb
test
adc
sub
xchg
inc
mov
mov
lcall
pop
pusha
push
in
fcos
or
cmpb
hlt
clc
push
inc
or
call
sub
push
sti
je
mov
fcompl
cwtl
xor
cmp
add
aaa
in
fdivrl
dec
mov
sbb
loope
cmc
ror
adc
sub
lock
pop
roll
xor
xchg
xor
lods
lret
mov
jle
inc
sub
add
lock
jecxz
add
cmpsb
and
das
stos
jns
flds
xor
xor
mov
push
sub
imul
imul
repz
push
jae
sbb
mov
rclb
pop
stos
lahf
push
pusha
add
inc
inc
sbb
sbb
adc
jmp
jle
repz
push
or
jmp
add
aam
mov
sub
xor
cmp
mov
push
test
mov
add
add
add
mov
shl
cmc
adc
add
call
push
testl
mov
outsb
das
lahf
mov
mov
cmp
add
jns
iret
push
stos
add
cmp
addr16
les
fstps
nop
lahf
test
or
iret
pop
xchg
sahf
inc
cli
add
in
or
ljmp
mov
inc
cmc
push
sarb
mov
adcl
in
outsl
subb
add
clc
movsb
inc
cmp
mov
mov
dec
pop
sbb
addl
int3
add
add
xor
cmp
orl
sbb
adc
or
iret
push
jl
dec
ss
pop
adc
int3
add
sub
ljmp
mov
sbb
and
and
das
pop
pop
std
addr16
push
pop
jb
pop
movsb
and
js
cli
sub
ds
mov
aam
xlat
push
int3
out
movsb
stos
cmp
add
add
add
les
addr16
incl
push
mov
loope
jl
inc
insb
pop
pop
push
inc
push
push
xchg
clc
je
push
sub
push
jns
xchg
push
jmp
sbb
add
mov
mov
mov
repnz
leave
lcall
lods
mov
mov
xchg
int
add
insb
pop
in
into
sbb
xchg
mov
xor
xorl
dec
lds
cmp
add
sub
lods
scas
lock
leave
mov
xor
adc
negb
loope
pop
cs
xor
outsb
add
mov
mov
pop
mov
lahf
adc
mov
mov
mov
dec
sub
and
inc
adc
out
out
sbb
je
push
jbe
push
jmp
mov
leave
daa
and
cli
fwait
das
jne
and
push
add
mov
sbb
push
out
xchg
movsb
insb
mov
lret
rcll
xchg
cwtl
mov
mov
mov
jge
loop
xchg
adc
orb
test
sbb
or
or
mov
push
adc
mov
xor
mov
call
add
pop
test
in
jb
ljmp
pop
rolb
sub
nop
into
sbb
inc
pop
dec
push
xchg
stos
xor
sub
js
fistpl
lahf
adc
test
sbb
xchg
loope
js
pop
mov
or
movsl
mov
les
add
adc
or
jnp
mov
sbb
cmpsl
rcr
mov
pop
outsb
imul
adc
out
mov
sub
sub
jbe
in
lods
cmp
mov
decl
ja
push
ss
dec
pop
xchg
push
push
mov
out
and
inc
outsl
ljmp
aad
and
fiadds
loop
jg
into
inc
mov
pop
mov
int
or
ret
outsb
sub
or
inc
fcoml
mov
cmp
adc
jbe
lret
push
call
int3
outsb
js
int
sbb
fwait
ds
jge
loope
aaa
adc
jae
pop
xor
aad
stos
je
fnstcw
cmpsb
cmp
push
shufps
repz
movsb
mov
inc
out
loopne
jnp
sbb
inc
mov
pop
es
pcmpeqd
out
nop
cmpsb
arpl
or
popa
pop
pop
addb
ret
adc
decl
pop
shlb
or
outsl
mov
test
js
js
jp
xchg
fisubl
adcb
shr
push
mov
mov
xor
dec
popf
jae
push
lods
xchg
lea
pop
mov
lea
data16
mov
stos
pusha
mov
mov
and
decl
inc
scas
mov
mov
clc
fadd
andl
or
je
or
scas
push
push
push
jl
scas
xchg
stos
aad
cmp
xor
sbb
pcmpgtw
shlb
adc
gs
or
dec
adc
xchg
cmpb
fisttps
test
add
add
cmp
pop
pusha
or
test
push
cmp
xchg
lret
leave
push
sbb
lahf
mov
mov
ja
fisubrs
call
jbe
add
dec
lret
inc
iret
repz
jb
std
bound
ja
test
lods
out
adc
sbb
mov
jae
inc
fstps
mov
fsub
cs
cmpsb
aam
lcall
mov
mov
out
jo
mov
dec
lods
pop
arpl
xchg
add
push
andb
cmp
les
movsb
xor
inc
aas
out
jle
gs
or
mov
movsb
ja
xchg
pushf
push
pop
roll
aas
cmp
shl
xor
push
lds
cmpb
sub
notb
xor
incl
incl
add
inc
out
cmpsb
or
mov
and
mov
and
add
lods
or
popf
outsl
xchg
pop
fadds
mov
dec
fildl
int3
call
repz
mov
mov
add
nop
mov
sub
pop
or
cwtl
and
scas
mov
in
lods
add
and
mov
mov
push
push
cmp
in
xchg
mov
xchg
divb
in
pop
lea
push
cmp
lods
lock
shlb
adcl
pop
add
add
cli
movsb
orl
incl
incl
ljmp
loopne
mov
movsb
inc
rorb
movsb
ds
add
rcll
stos
clc
xchg
xchg
add
faddp
inc
int3
scas
or
push
xchg
dec
std
bound
int3
add
xor
pop
push
pusha
inc
pop
jge
iret
aad
push
pop
mov
enter
add
scas
pop
pusha
pop
scas
add
shrl
mov
jecxz
inc
dec
and
sbb
pop
je
and
inc
mov
mov
int3
mov
in
out
cwtl
mov
je
xchg
xchg
adc
mov
mov
mov
mov
push
data16
inc
fwait
loopne
movsl
loope
test
int3
scas
pushl
mov
xchg
loope
mov
in
dec
enter
fldt
xor
popa
sub
xchg
scas
shlb
mov
push
xor
lea
repnz
cwtl
je
inc
ja
shrb
subb
push
inc
and
jo
or
push
mov
mov
jne
cltd
inc
pusha
fidivs
xor
push
adc
cwtl
sub
fwait
aam
dec
push
push
dec
dec
stos
cmc
fwait
mov
mov
or
and
repnz
aas
mov
les
and
inc
shll
call
lcall
jb
pusha
shlb
test
xchg
push
sti
lods
jne
jmp
cmp
jnp
enter
sub
lahf
in
add
add
call
xor
adc
pop
mov
call
sub
out
test
mov
movb
xorl
pushf
data16
xchg
in
dec
divb
sbb
xchg
fdivrl
inc
mov
sarb
cltd
push
adc
jmp
push
pushf
fildll
and
jnp
cmpsl
aad
jae
ds
mov
mov
mov
xchg
stos
and
fimuls
mov
stc
mov
push
sub
lock
mov
push
fbld
popf
mov
pop
add
dec
adc
pop
mov
mov
fucomip
add
add
rol
push
pop
xlat
mov
sbb
jge
rcll
mov
scas
pusha
pusha
inc
or
adc
xchg
cmpps
sub
out
and
inc
pop
and
jno
sub
xchg
les
scas
loope
add
push
in
rorl
cli
insb
mov
mov
pop
sti
and
nopl
xchg
gs
mov
out
lahf
movsl
imul
fbstp
xchg
add
add
add
arpl
aad
jae
jo
repz
stos
cmp
test
push
movsl
jbe
repz
push
notl
sarb
test
or
sub
dec
lcall
andl
push
mov
mov
sub
dec
idiv
incl
incl
incl
sub
mov
mulb
mov
mov
andb
mov
jno
pop
dec
testb
mov
pop
jno
insl
sbb
addr16
iret
mov
inc
daa
cld
in
push
lods
inc
jo
jno
xchg
and
imul
sub
fists
mov
mov
shll
imul
out
std
mov
mov
mov
sbb
xor
popf
lahf
jae
mov
psubsb
call
out
enter
adc
fdivrp
fsubrp
and
cmp
faddl
add
scas
cmp
arpl
bound
sarb
or
or
jae
xchg
push
dec
repz
inc
pushf
dec
mov
andb
xchg
cmpsl
mov
mov
sbb
xchg
lds
call
xor
enter
inc
xchg
arpl
jle
adc
out
jg
rclb
iret
jmp
dec
xorb
mov
sbb
xor
int3
mov
pushf
or
jns
popa
add
lods
jns
repnz
test
add
inc
fwait
mov
in
xchg
add
int3
call
xchg
add
jl
movl
repz
das
push
incl
incl
incl
lods
dec
pusha
mov
fsubs
subl
cmp
enter
adc
dec
jl
sbbl
mov
mov
inc
fadds
jle
dec
mov
int3
jo
sbb
xchg
sti
jecxz
imul
in
mov
ja
sub
mov
jl
jle
lret
cmp
daa
pushf
mov
xchg
lret
sbb
movaps
jge
mov
cli
popa
add
lods
add
scas
mov
call
pop
in
sub
jbe
cmp
jmp
incl
fnsave
lds
xor
add
add
adc
fwait
sub
aas
xlat
out
mov
js
fcmovnu
icebp
stos
sbb
fwait
movsl
cmc
mov
lods
bound
jle
movsl
mov
dec
jle
incl
incl
test
dec
xor
cmp
in
rcll
mov
mov
sti
sub
sbb
sahf
inc
cmp
iret
in
mov
lret
xor
addb
int3
call
pushf
inc
stos
clc
lods
repnz
jae
flds
imul
jae
dec
hlt
stos
sub
imul
loop
ja
cli
jb
lods
in
aam
test
aad
das
xchg
test
je
iret
ds
pop
cmpsl
mov
lcall
ja
mov
mov
push
xor
push
cmp
lods
inc
ja
cmp
add
and
mov
add
dec
jae
mov
add
add
inc
stos
ds
pop
xchg
or
loop
pushw
xor
scas
lods
into
jb
xor
pop
jb
xor
sub
add
add
xor
jmp
out
cltd
fsubrl
mov
add
movb
cmp
cmp
aad
xor
sub
inc
cli
xor
mov
out
mov
sbb
mov
jp
stos
pop
pop
test
xchg
jge
push
mov
movsb
dec
ljmp
lock
stos
mov
xorb
sti
sub
xchg
mov
stos
inc
frstor
cli
xchg
loop
repz
mov
mov
mov
mov
or
mov
jb
add
cmpsl
sub
mov
sub
sbb
ret
inc
mov
int3
push
mov
fstps
inc
add
scas
orb
push
mov
gs
lods
lcall
sarb
sbb
aad
movsl
icebp
add
mov
push
jne
movsb
bound
mov
mov
mov
lods
jecxz
loope
aad
dec
push
fwait
enter
dec
out
mov
call
cwtl
shl
jnp
xor
sbb
mov
pop
or
dec
mov
xchg
jp
mov
jne
loopne
and
imul
rcl
stos
mov
mov
bnd
lock
xor
repz
and
inc
pop
clc
mov
mov
mov
add
jnp
pop
push
jo
adc
jmp
cmp
sbbl
mov
sub
pop
icebp
aad
cltd
push
mov
mov
dec
arpl
rcl
sub
lods
or
lcall
add
add
inc
fsubrs
mov
clc
push
incb
mov
mov
mov
lcall
mov
adc
pushf
scas
xrelease
es
cmp
mov
cmp
repnz
mov
repnz
sub
or
and
insb
sbb
jns
lds
xor
ss
lea
and
lea
push
jl
dec
push
and
dec
push
xchg
add
pop
shlb
nop
xor
sarb
pop
int3
scas
adc
sub
or
je
int
sbb
fcompl
pop
push
mov
mov
mov
int3
into
sub
fcoms
mov
add
bound
rcll
enter
pop
inc
imul
jg
iret
pop
iret
les
sti
inc
cmpsb
push
jae
aas
mov
ret
xchg
mov
sbb
cmp
push
or
cli
int3
add
add
add
clc
and
dec
ret
xor
shr
push
dec
adc
mov
test
mov
inc
mov
sbb
rclb
xor
xorb
xor
in
mov
mov
mov
pop
loopne
inc
add
rclb
std
hlt
mov
mov
jnp
lahf
dec
in
stc
aaa
pop
inc
js
mov
dec
jns
outsl
repz
jbe
fwait
roll
pop
out
in
cmp
jae
add
ror
add
add
add
sbb
test
jg
aam
out
cmp
shll
xchg
cmp
jns
inc
add
and
mov
out
push
popa
lret
mov
dec
pop
mov
mov
pushf
inc
out
insl
cmp
xchg
out
or
jp
push
inc
mov
sbb
jge
xor
push
mov
std
arpl
mov
dec
pop
jp
cmpsb
inc
fiaddl
mov
cmp
scas
lahf
inc
scas
pop
dec
imul
mov
add
add
sbb
in
ja
jl
aas
rol
cmp
aam
push
inc
sbb
loop
bound
add
popa
das
sub
sbb
inc
push
pop
insb
movsl
jge
jg
out
mull
loopne
sbb
imul
sbb
in
cld
sub
pop
mov
mov
pop
xchg
mov
lods
mov
int3
outsl
dec
cwtl
mov
inc
loopne
call
jbe
ds
xor
mov
shlb
xchg
and
or
addl
add
test
insb
and
mov
adc
sahf
inc
daa
pop
cmp
incl
inc
mov
add
mov
mov
and
mov
pop
push
popf
stos
cmp
sbb
cs
lret
and
ret
dec
loopne
and
mov
in
out
adc
xchg
repnz
xor
call
stos
add
cmc
mov
incl
incl
jmp
add
popf
inc
mov
sub
sbb
call
je
shrl
hlt
jb
bound
icebp
and
and
adc
pop
aad
movsl
mov
dec
out
xorl
push
dec
dec
mov
out
inc
xchg
sbb
jp
push
xor
leave
sarl
into
rcrb
dec
iret
sbb
and
mov
add
mov
clc
aad
jae
add
idiv
jp
ja
sub
hlt
and
aas
dec
cli
loop
sub
loop
push
mov
sbb
push
xchg
adc
mov
rclb
xor
add
fnsave
aas
fwait
pop
arpl
mov
lea
out
cmpsl
imul
sub
incl
incl
ljmp
pop
std
cmp
xchg
sbb
decb
ffreep
add
xchg
mov
adc
aam
mov
sbb
add
xor
xchg
ljmp
adc
ss
movb
mov
lea
ret
ja
jecxz
insl
xchg
mov
mov
jae
or
jnp
sbbl
pop
inc
push
and
mov
jb
arpl
dec
xchg
cmp
or
out
popf
cli
xlat
cmp
push
orl
jo
fsubs
xchg
or
icebp
jo
jno
sbb
pop
push
mov
test
test
shrb
add
sub
lods
into
xor
sub
jns
push
stc
repz
incl
lcall
sub
lock
pop
jp
jb
jp
clc
scas
mov
xchg
jo
cs
sub
daa
call
imul
icebp
aaa
xor
icebp
push
and
push
push
sarb
xchg
das
shlw
mov
sbb
add
add
ljmp
mov
cmc
gs
pusha
and
stos
sub
mov
dec
lret
fwait
push
sbb
inc
push
aas
mov
pop
pusha
fmull
mov
add
cs
or
and
pop
pop
mov
scas
dec
popa
sbb
mov
jecxz
sbb
mov
cmc
lods
adc
xor
lods
cmp
sbb
xor
nop
aam
insb
jge
inc
mov
sbb
inc
mov
daa
inc
inc
xlat
push
inc
call
add
inc
cmp
xlat
mov
add
fisttpl
sti
cmc
mov
mov
loop
loopne
lret
je
hlt
and
mov
sub
call
xor
data16
cmp
pop
in
repz
push
cmp
mov
jo
pop
dec
sbb
ret
stos
out
sub
out
insb
add
sbb
inc
sub
mov
jb
mov
xor
pushf
jno
jne
add
or
mov
pop
mov
pop
jp
movsl
xchg
adc
xor
mov
js
fs
push
ljmp
repnz
jecxz
xlat
pop
pop
jns
jno
lods
mov
stos
rcr
xor
call
jmp
daa
jecxz
lret
sub
xor
addr16
mov
jle
pusha
mov
andl
stos
sub
aaa
arpl
popf
mov
mov
push
fs
leave
daa
or
inc
jle
lea
fisubrl
jp
inc
fstl
int3
cmp
mov
lret
add
sti
in
pop
pop
mov
aad
lock
ss
sub
jns
cli
loopne,pt
int
call
loope
cmpl
jge
lods
pop
ret
push
push
pop
imulb
inc
mov
loop
add
xlat
sub
dec
adc
subl
loopne
push
nop
jne
jne
in
in
jne
sahf
ljmp
xchg
cwtl
cmc
das
movsl
xchg
loopne
movsl
or
rorl
jns
cmpsl
cmp
or
int3
call
inc
mov
jge
mov
adc
mov
mov
xchg
bound
push
aad
inc
jne
idiv
jp
xchg
cld
inc
aas
mov
adc
shrl
out
mov
imul
or
cltd
push
xchg
fistpll
adc
or
outsl
lods
insl
push
jp
test
jnp
insb
add
aad
into
adc
mov
les
cmpl
or
cmc
pop
cmp
jnp
jnp
mov
repz
arpl
cmp
pop
push
out
shrl
adc
test
add
test
cmp
fdivrl
jg
test
cmp
jae
adc
pop
mov
push
movsb
test
nop
mov
faddl
cmpb
push
out
movsl
sbbl
clc
pop
adc
jbe
pop
std
repz
inc
out
enter
je
mov
rcll
std
test
incl
lcall
aam
int
jg
adc
sbb
lret
movsb
pop
jmp
js
or
or
fdiv
imul
bound
pop
sub
jb
mov
js
dec
arpl
sti
in
push
insb
subl
fcmovnu
repnz
stos
jnp
jb
loopne
push
push
imul
inc
add
inc
ljmp
xchg
cmc
or
mov
pop
out
cmp
fsubp
jno
jae
into
lock
movsb
mull
push
rcrb
pop
pushf
inc
in
xchg
test
loopne
xchg
dec
movsl
lea
xchg
jb
and
mov
adc
lds
scas
scas
scas
xlat
mov
jne
into
sbb
lret
leave
ds
repz
sbb
rcl
jp
shll
or
int3
call
popf
int
pushl
push
fcoms
leave
add
push
xchg
mov
mov
pusha
loop,pt
je
inc
or
pusha
adc
jnp
sbb
xchg
xchg
or
into
jecxz
mov
sarl
add
add
jge
push
pop
rcr
ret
add
pop
pop
negb
testb
imul
imul
sahf
and
mov
dec
mov
push
sub
jno
lods
es
push
jb
sbb
add
out
fs
push
xorb
jecxz
xchg
hlt
sub
or
out
xchg
jmp
jb
outsb
adc
mov
cmpsl
sbbb
adc
and
sbbb
in
and
dec
clc
imul
int3
call
movsb
dec
mov
iret
lods
fdivrl
xor
push
rolb
mov
pop
xor
daa
fimuls
out
sahf
inc
jmp
je
imul
subb
adc
inc
cld
mov
sbb
incb
pushf
jno
add
add
dec
ljmp
inc
cmp
inc
mov
lcall
push
mov
fadds
mov
xchg
cmp
and
pop
les
dec
mov
xor
mov
sbb
pop
mov
pop
sbb
fs
pusha
rorl
fs
jo
add
test
std
imul
mov
mov
adc
shlb
roll
shrl
jl
mov
cmpsl
in
testb
or
pop
shr
jecxz
mov
adc
pusha
mov
sar
inc
add
sub
jb
shlb
addr16
jae
test
loopne
adc
inc
cmp
xor
push
push
sbb
incl
incl
andl
adc
xor
scas
nop
cmp
dec
or
dec
sbb
scas
nop
jecxz
lret
pushf
scas
inc
pop
dec
lock
cmp
or
dec
jno
sbb
inc
ljmp
vmovshdup
pop
push
mov
jns
decl
pushf
data16
std
jbe
scas
ret
test
dec
xor
jno
add
mov
cmp
pop
adcb
out
bound
add
outsb
dec
push
jmp
cmp
dec
push
pop
xor
and
arpl
pop
aad
cli
push
mov
ljmp
dec
inc
fisttpl
mov
bound
in
xor
jo
lahf
pop
sarl
cmp
int3
call
jns
mov
gs
push
in
cmp
push
rcrl
ret
mov
mov
mov
mov
repnz
sub
leave
in
out
pop
push
cwtl
enter
push
lret
cmc
dec
jb
pop
pop
test
cmp
jnp
or
add
sysenter
jmp
mov
jge
mov
movsb
ret
jo
and
leave
or
fidivs
das
gs
cmp
rorb
pop
dec
testl
add
add
add
push
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
add
adc
inc
add
add
add
mov
add
push
mov
add
and
inc
add
add
add
mov
add
sarb
add
movsb
mov
add
insb
mov
add
inc
mov
add
or
inc
add
add
add
mov
add
lods
mov
add
or
add
clc
mov
add
call
add
add
mov
add
aam
inc
add
add
add
mov
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
incl
add
add
add
add
add
add
dec
out
mov
inc
add
add
add
add
add
add
add
add
add
add
inc
add
les
pop
cmpsb
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
inc
add
add
inc
add
lods
inc
add
inc
add
inc
add
rolb
mov
inc
add
rolb
mov
inc
add
rolb
mov
inc
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
add
add
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
inc
add
inc
add
ret
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
ret
inc
add
ret
in
ret
loopne
inc
add
ret
fadd
inc
add
ret
mov
ret
or
add
add
add
add
add
les
cli
movb
add
add
cmpsl
inc
add
fwait
dec
add
fwait
dec
add
fwait
dec
add
fwait
dec
add
jg
jg
jg
jg
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
incl
add
add
push
add
push
add
cmpsl
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
