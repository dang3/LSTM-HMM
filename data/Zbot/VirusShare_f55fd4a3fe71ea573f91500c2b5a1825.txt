push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
cmpl
je
jmp
mov
push
call
mov
push
call
push
mov
push
call
lea
push
mov
push
call
mov
mov
mov
add
mov
mov
push
mov
push
call
xor
jmp
mov
imul
mov
mov
shl
mov
mov
and
movzwl
mov
mov
shr
and
movzwl
mov
xor
jmp
push
push
mov
push
call
lea
push
mov
push
call
mov
push
call
push
mov
push
call
push
mov
push
call
push
push
mov
push
mov
imul
push
mov
push
call
push
push
mov
push
mov
imul
push
mov
push
call
xor
jmp
push
push
mov
neg
push
push
mov
push
call
mov
push
call
mov
push
call
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
mov
add
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
movl
movl
movl
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
mov
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
xor
jmp
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
push
push
call
mov
push
push
call
push
push
push
push
push
push
push
call
mov
movl
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
mov
add
mov
popa
jmp
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
mov
mov
call
mov
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
push
dec
inc
push
push
push
dec
dec
add
add
add
add
add
xor
add
xor
add
jb
add
data16
data16
add
add
gs
jo
outsb
dec
gs
add
add
add
dec
add
outsb
add
add
xor
xor
xor
add
inc
add
xor
sub
add
xor
sub
add
add
add
xor
sub
add
xor
xor
inc
add
add
cmp
xor
cmp
jge
pop
add
js
je
add
add
add
jb
jb
outsl
add
jae
pop
add
xor
xor
xor
add
inc
add
xor
sub
add
xor
sub
add
add
add
xor
sub
add
xor
xor
inc
add
add
cmp
xor
cmp
jge
add
add
inc
add
jns
jae
je
add
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
add
add
repz
push
rclb
idivb
test
mov
add
xor
add
sbb
iret
sub
iret
arpl
iret
js
test
cmp
into
loope
repz
insl
cmp
dec
int3
gs
dec
popf
aas
adc
jecxz
add
ret
push
xor
ret
jns
xor
add
add
ret
mov
xor
ret
mov
ret
pushf
lds
xor
lds
test
xor
lds
xor
divb
jle
adc
xor
xor
jne
dec
xor
xor
xor
xchg
xor
fdivs
sub
in
inc
cli
xor
mov
jnp
push
rorb
shrb
sarb
fnstenv
mov
clc
xor
mov
sub
sub
insb
xor
push
rcr
insb
shl
jae
add
xchg
rcll
shrl
mov
pop
lods
shll
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
xchg
je
fcomps
flds
popa
fs
lcall
mov
add
mov
lcall
xchg
movsb
add
lds
jne
addr16
gs
mov
add
dec
andl
xchg
inc
add
je
sub
add
dec
xchg
je
and
inc
imul
cmpl
int
je
in
jne
out
mov
gs
mov
add
xchg
inc
add
inc
add
testb
testb
testb
testb
testb
nop
je
cwtl
lcall
jns
add
dec
lcall
imul
add
add
jno
jb
outsl
xchg
xor
pushf
insb
insb
mov
add
das
xchg
cmp
fs
xchg
add
aaa
nop
insl
jae
jg
add
xchg
sbb
notb
insl
arpl
mov
add
pushf
jb
fists
arpl
pushf
jb
mov
xchg
outsl
arpl
cltd
insl
popa
lcall
add
xchg
add
insb
push
js
je
imul
jo
xchg
insb
outsl
imul
jb
addr16
xor
je
insb
insb
mov
add
dec
nop
je
cmp
dec
sub
incb
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
repz
add
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
add
repz
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
xor
jmp
mov
add
xchg
add
mov
add
std
repnz
fcomip
add
mov
add
jns
add
sub
add
mov
add
xchg
add
mov
add
mov
add
mov
add
mov
add
dec
out
add
int
jmp
mov
addl
mov
repnz
mov
add
mov
repnz
jae
add
jae
add
push
pop
add
pop
icebp
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
ljmp
xor
add
and
add
and
add
repz
add
repz
add
jecxz
add
jecxz
add
repz
add
repz
add
jecxz
add
jecxz
add
mov
add
sbb
add
sbb
add
sbb
add
sub
add
add
add
add
sbb
call
add
mov
add
mov
add
mov
add
stos
fsubl
mov
add
mov
jecxz
mov
or
mov
lret
add
sbb
add
fiaddl
lret
outsb
add
mov
adc
repz
add
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jecxz
add
repz
repz
jecxz
add
jecxz
add
mov
add
mov
add
mov
testb
mov
add
mov
add
mov
testb
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
repz
add
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
cwtl
mov
add
hlt
mov
add
int3
lret
add
pushf
lret
add
or
mov
mov
add
repz
mov
idivl
mov
and
mov
mov
icebp
mov
mov
lea
add
add
repz
mov
mov
icebp
mov
mov
lea
repz
mov
push
lret
jmp
ret
sbb
ret
cmp
rorl
xor
ret
jmp
rorl
add
dec
hlt
add
cmp
add
add
repz
lret
repz
lret
repz
lret
add
repz
lret
sub
in
repz
mov
add
repz
mov
add
fdiv
add
sub
add
sbb
add
repz
repz
sbb
add
out
repnz
out
add
add
sub
add
dec
add
insl
inc
add
xchg
inc
add
stos
inc
add
outsl
inc
add
jns
add
mov
inc
add
std
inc
add
push
inc
add
mov
add
rorl
mov
add
dec
add
out
dec
add
xlat
dec
add
daa
dec
add
xor
add
dec
add
fisttpl
add
dec
add
movsl
dec
add
test
dec
add
orl
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
xorb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
enter
lods
aad
mov
aad
mov
aad
mov
aad
mov
lods
add
push
lods
add
repz
stos
mov
mov
mov
stos
stos
mov
jge
mov
arpl
mov
cmp
mov
cmp
stos
mov
fldt
mov
repz
mov
subl
mov
fwait
lods
mov
lods
mov
jae
mov
imul
mov
cmpsl
lods
mov
xlat
lods
mov
imull
repz
mov
sbb
lock
imul
add
loope
add
out
add
out
add
out
out
add
out
add
loope
add
ss
xor
add
xor
add
adc
add
lock
lock
out
add
hlt
out
add
cmc
out
add
fsubr
add
aam
add
fsubr
add
xlat
out
add
aas
testl
cmp
testl
dec
pop
testl
add
inc
add
ret
inc
add
movl
add
add
push
dec
add
xor
add
add
jnp
add
lods
add
repz
in
testb
jmp
add
icebp
testb
jecxz
add
gs
add
cmp
add
cmp
add
add
jnp
add
mov
cmp
add
cmp
add
leave
cmp
add
mov
mov
add
scas
mov
add
cwtl
mov
add
out
add
or
add
es
add
jb
add
push
mov
add
pop
mov
add
add
add
ljmp
mov
add
mov
add
repz
mov
dec
rorb
inc
rorb
or
mov
mov
cmc
mov
mov
sbb
mov
sub
mov
sbb
mov
dec
rorb
daa
rorb
add
mov
ja
mov
pop
rorb
scas
rorb
ja
mov
repz
add
mov
stos
rorb
mov
mov
add
hlt
add
hlt
add
dec
hlt
add
inc
hlt
add
hlt
add
hlt
add
dec
hlt
add
dec
hlt
add
lock
dec
hlt
add
dec
hlt
add
leave
repz
repz
into
repz
leave
repz
repz
repz
repz
int3
repz
repz
repz
int3
repz
mov
add
movsl
sub
add
das
add
mov
add
mov
das
add
das
add
mov
add
in
add
mov
das
add
sbb
add
jmp
add
out
das
add
das
xor
add
and
add
and
add
imul
add
add
add
gs
shll
add
pop
xor
add
das
add
mov
clc
roll
lock
add
add
add
inc
ret
pusha
ret
or
add
pop
aad
mov
add
push
rolb
mov
rolb
mov
rolb
mov
aam
mov
add
adc
mov
add
add
add
push
roll
mov
add
in
mov
add
add
add
mov
mov
mov
mov
jmp
mov
repz
mov
repz
add
jae
add
repz
jae
add
jae
mov
mov
in
add
jae
add
jae
add
repz
mov
add
add
add
jae
mov
mov
mov
mov
stc
add
jae
add
lock
push
add
mov
xor
repz
repz
lock
pop
lock
push
lock
pop
lock
lock
aas
lock
aaa
lock
cmp
add
pop
lock
pop
lock
pop
lock
cmp
add
mov
add
out
add
out
add
lock
inc
lock
xor
add
xor
lock
adc
lock
jecxz
add
mov
add
sbb
cmp
jecxz
into
sbbl
dec
push
call
scas
push
cmp
rcrb
add
add
hlt
pop
dec
int3
xor
mov
inc
cltd
mov
jecxz
repz
repnz
mov
fidivrs
paddw
movsb
jae
pop
inc
jmp
jmp
sbb
jo
mov
xor
jge
rcll
xchg
jmp
aas
pusha
pop
cwtl
xor
std
pop
rcll
push
jmp
aas
pusha
mov
jne
fildll
mov
add
inc
es
out
dec
inc
push
cld
xchg
cld
insl
mov
daa
sbb
sbb
call
cmp
aas
sub
push
xchg
mov
jp
sbb
dec
push
cmp
mov
or
xchg
xor
sbb
fimull
aas
movsl
xchg
insb
sarb
jl
cld
jge
sbb
push
fmuls
jnp
and
movsb
testl
jo
jae
add
mov
imul
mov
jb
pop
cmp
push
mov
mov
lods
adc
popf
cwtl
iret
scas
jo
add
mov
jno
mov
add
mov
outsl
popf
cwtl
iret
outsl
jo
add
mov
add
insb
pop
jmp
push
cmp
popf
call
enter
clc
xor
adc
repz
mov
lcall
and
adc
repz
jl
std
jecxz
inc
insl
sahf
ret
adc
add
hlt
in
sbb
xchg
out
shrb
xor
ljmp
push
outsl
js
fidivl
adc
repz
xchg
lds
les
insb
adc
je
lods
dec
dec
mov
add
mov
jbe
adc
dec
rclb
cmp
lea
daa
lea
adc
hlt
jg
push
adc
mov
rclb
std
cltd
add
in
mov
inc
jns
rclb
cli
icebp
add
fistpl
shl
rcll
mov
stos
cld
decl
mov
adc
dec
add
in
stos
cld
jmp
ljmp
pop
inc
aas
std
mov
xor
fwait
xchg
add
sbb
loop
loope
adc
jnp
lret
sbb
pop
sahf
push
mov
add
adc
orl
cmp
jnp
mov
lret
std
xchg
addr16
dec
mov
and
and
mov
mov
jnp
add
jp
add
ret
or
cmp
decl
xchg
jns
lahf
movsl
xor
jnp
xchg
lret
das
lcall
out
mov
pop
incb
add
add
jecxz
mov
filds
xchg
ja
dec
repz
xchg
testl
dec
repz
mov
movl
dec
repz
xchg
xlat
add
inc
add
out
add
pop
add
repz
add
repz
add
hlt
inc
add
repz
stos
repz
add
xrelease
mov
pop
add
xrelease
mov
add
mov
adc
mov
add
mov
add
mov
add
repz
xchg
inc
add
xchg
add
aad
pusha
add
test
jmp
xchg
and
jmp
test
add
xchg
push
add
xchg
adc
jmp
xor
add
xchg
xor
jmp
test
add
xchg
dec
add
xchg
or
jmp
test
add
xchg
imul
xchg
sub
jmp
test
add
xchg
pop
add
xor
sub
and
mov
and
or
xor
mov
xor
dec
add
push
add
cmc
add
repz
notl
fdivp
loope
shl
sub
repz
divl
jecxz
enter
or
mov
add
test
mov
add
add
testl
hlt
or
jae
pop
add
sbb
arpl
cwtl
add
push
add
jl
jae
cmp
arpl
fadds
mov
pop
pop
mov
or
or
fmull
or
fmull
mov
fmull
clc
mov
add
push
mov
or
mov
add
jb
add
add
fmull
les
fmull
bound
fmull
movsb
mov
or
mov
or
mov
or
mov
add
pop
mov
or
mov
or
fmull
jp
repz
nop
repz
ss
add
repz
mov
out
pusha
repz
div
out
nop
repz
adc
out
shl
or
repz
repz
pushf
repz
or
repz
repz
push
repz
pushf
repz
mov
repz
and
out
insb
repz
fdivp
out
mov
out
add
out
dec
repz
sahf
repnz
repz
xchg
repz
push
hlt
add
mov
xchg
imul
jmp
add
sti
mov
jmp
sbbl
add
xchg
stc
add
xchg
jns
jmp
jle
add
repz
xchg
inc
add
addl
add
mov
add
xchg
bound
jmp
jle
add
mov
add
xchg
push
add
adcl
add
xchg
repnz
xchg
jb
jmp
jle
add
mov
add
xchg
dec
add
arpl
pop
add
xchg
add
cmp
jae
ja
arpl
aaa
add
rolb
inc
cmc
xor
add
cld
daa
add
divl
add
cld
xchg
and
inc
add
div
add
cmc
add
repz
push
add
sti
adc
sar
add
shl
add
sti
jae
jecxz
xor
jecxz
lret
hlt
or
mov
arpl
mov
imulb
add
sti
inc
add
in
add
mov
or
fmull
sbb
mov
add
fmull
jge
fmull
cmp
mov
add
mov
or
fmull
sub
mov
or
mov
or
fmull
cli
mov
add
mov
or
add
add
mov
add
mov
or
fmull
xor
jmp
or
fmull
and
fmull
add
repz
dec
repz
insb
repz
shl
out
xchg
repz
cld
repnz
leave
repz
shl
out
xchg
repz
pop
repz
add
repz
popa
repz
fdiv
out
xchg
repz
add
out
shl
or
repnz
pop
repz
xchg
repz
or
repz
cltd
repz
pop
repz
xchg
repz
aam
clc
add
repz
gs
hlt
repnz
xchg
out
add
subl
jmp
mov
add
addl
nop
test
fisttpll
fs
andl
sti
mov
add
adcl
nop
movsl
add
xchg
hlt
add
xorl
xchg
in
dec
std
in
jmp
addl
add
faddl
add
andl
add
mov
push
add
mov
negl
add
clc
addb
clc
inc
add
filds
and
add
pop
add
sbb
jae
popl
inc
in
add
js
arpl
cmp
xor
iret
add
adc
and
push
add
imull
add
clc
mov
and
dec
add
imul
add
in
add
notl
notl
mov
in
add
divl
divl
mov
movl
mov
or
or
fimull
add
fimull
test
int3
or
pop
mov
or
or
int3
or
push
mov
or
or
int3
or
push
mov
or
or
int3
or
or
int3
or
add
add
add
add
int3
or
mov
std
add
int3
or
mov
or
mov
or
repz
js
out
repz
cld
xor
or
repz
push
repz
mov
out
or
out
enter
addr16
mov
out
shl
out
xor
or
repnz
enter
shl
out
xor
or
stc
cld
cwtl
repz
mov
repz
xlat
repnz
xor
or
repz
push
repz
div
idiv
mov
out
push
repz
jl
daa
or
repz
and
jmp
xchg
sub
jmp
mov
add
sbbl
jmp
cmp
add
xchg
cmp
jmp
nop
into
add
jbe
add
addl
jmp
push
push
add
andl
jmp
incb
jmp
xchg
adc
jmp
xor
add
add
add
filds
dec
xor
add
repz
add
in
sbb
add
ffreep
add
fsubl
mov
and
mov
mov
add
faddl
jae
jecxz
jae
push
add
pop
add
sbb
jae
xchg
add
in
cmp
arpl
jns
xor
cmp
xor
roll
xor
verr
fsubrl
xor
sub
xor
mov
and
or
and
mov
repz
repz
add
add
add
lret
mov
or
mov
cli
je
lret
mov
std
lret
or
mov
cli
and
lret
mov
cli
add
lret
mov
cli
inc
mov
std
ljmp
cli
pop
mov
cli
sbb
int3
std
lcall
cli
jl
int3
cli
cmp
int3
std
fimull
int3
cli
insb
mov
cli
sub
int3
std
mov
mov
cli
mov
repz
lock
cmp
out
js
aam
enter
test
repz
js
out
int3
repz
or
repz
push
repz
mov
out
or
out
enter
insb
repz
shl
sti
xor
cli
cld
repnz
leave
repz
shl
sti
xor
cli
pop
repz
or
repz
jo
out
fdiv
add
adc
add
add
jmp
lock
stc
cmp
jmp
loope
add
fiaddl
fs
shll
mov
add
sub
jmp
mov
add
add
hlt
add
xorl
jmp
sub
jmp
popa
incb
jmp
adcb
inc
pop
add
inc
push
add
xor
add
and
add
fldcw
add
fidivrl
add
fmuls
add
add
jmp
fsubr
incl
shr
add
jmp
sldt
add
mov
add
incl
mov
jmp
aas
mov
add
fwait
jmp
add
jmp
pop
mov
pop
add
incl
jge
jg
and
add
jae
add
pop
jmp
add
pop
add
call
xor
add
add
ss
pop
mov
or
loop
add
mov
or
mov
or
mov
or
mov
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
repz
add
repz
repz
mov
jecxz
mov
jmp
mov
jecxz
mov
in
add
repz
add
repz
mov
div
repz
icebp
loope
xchg
out
repz
repz
mov
out
mov
out
mov
out
mov
call
add
repz
ljmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
hlt
add
repz
add
push
or
pop
out
or
scas
out
or
out
or
jg
or
out
or
dec
out
or
out
or
out
or
das
out
or
pop
out
or
out
out
or
iret
hlt
or
dec
out
or
jg
or
out
out
or
popa
hlt
or
loope
or
mov
or
insb
add
or
faddl
or
pushf
add
mov
or
pop
add
mov
add
mov
add
mov
mov
or
test
or
mov
or
je
or
movsb
add
mov
or
bound
or
repz
repz
add
repz
xchg
repz
xchg
repz
add
repz
xchg
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
xchg
repz
add
repz
xor
add
repz
mov
add
jmp
call
mov
add
mov
add
xchg
add
mov
add
jmp
clc
mov
add
jmp
mov
mov
add
mov
add
jmp
clc
mov
add
mov
add
jmp
and
jmp
adc
add
add
jmp
rorb
add
xchg
add
lret
add
lock
jp
or
cli
lock
pop
icebp
or
out
lock
cs
or
scas
lock
jle
or
push
icebp
or
dec
icebp
or
into
lock
cs
or
sahf
lock
fdivp
or
pop
lock
into
lock
mov
add
add
or
icebp
or
div
or
jbe
or
cmpsb
out
or
imul
or
jbe
or
push
lock
inc
out
or
imul
or
xchg
or
es
or
mov
add
or
pop
add
or
flds
or
pop
add
or
jns
or
add
add
mov
add
or
pop
add
mov
or
flds
or
push
add
mov
or
and
mov
add
add
repz
add
repz
repz
xor
add
add
add
repz
xor
add
repz
add
repz
xor
add
repz
xchg
repz
xchg
repz
add
repz
repz
repnz
repz
add
rep
add
repz
repz
cld
add
mov
add
mov
add
cld
add
cld
add
mov
add
mov
add
mov
add
mov
add
mov
add
cld
add
cld
add
mov
add
mov
add
mov
add
mov
add
mov
add
cld
add
cld
add
cld
add
cld
add
mov
add
mov
add
mov
add
mov
add
cld
add
cld
add
jl
pop
add
add
cmc
pop
add
pop
add
hlt
pop
add
add
add
pop
add
pop
add
pop
add
hlt
pop
add
cmc
pop
add
hlt
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
cmc
pop
add
repnz
add
hlt
add
add
cmp
pop
mov
add
mov
add
mov
add
pop
mov
add
pop
mov
add
mov
add
mov
add
pop
mov
add
mov
add
mov
add
mov
add
mov
pop
mov
add
mov
add
mov
or
sbb
add
mov
add
mov
add
mov
out
xchg
testl
xchg
out
add
repz
repz
xchg
lret
add
repz
add
repz
add
add
add
repz
repz
xchg
int
repz
add
repz
repz
repz
xchg
int3
add
repz
add
repz
repz
add
icebp
add
clc
add
xchg
cmc
push
out
testb
xchg
sti
or
nop
cld
pop
lock
jecxz
stc
or
xchg
stc
or
stc
or
xchg
or
jle
or
xchg
cli
or
mov
or
xchg
or
jge
or
xchg
decl
test
or
jge
or
xchg
decl
test
or
jl
or
xchg
add
mov
or
test
or
jl
or
xchg
add
idiv
or
out
or
push
aad
push
push
in
push
push
in
push
push
in
push
push
mov
push
push
movsl
jecxz
push
movsl
jecxz
push
push
xchg
jecxz
push
movsl
jecxz
push
movsl
jecxz
push
gs
push
jne
push
push
gs
push
fs
cmove
or
pcmpgtb
or
pcmpgtb
or
mov
or
add
or
unpcklps
or
jp
lods
adc
lds
jne
fiaddl
adc
adc
jns
push
adc
sbb
pushf
les
xchg
lods
pop
pop
popf
movsl
pop
pop
xchg
mov
sbb
xor
sbb
sbb
jb
sbb
sbb
rcrl
sbb
add
add
lock
jo
sbb
jo
sbb
mov
rcrb
sbb
mov
sbb
xor
add
jno
repnz
call
loop
xchg
call
lret
pop
jle
add
jbe
sti
pop
outsb
out
repz
cmpsb
out
jmp
sahf
out
jecxz
xchg
out
fistpl
mov
rcrl
xchg
lret
pop
jle
add
jbe
sti
pop
outsb
out
repz
cmpsb
out
pop
sahf
out
pop
xchg
out
pop
mov
aam
xchg
int3
and
add
ja
cld
and
hlt
and
call
fsubl
push
sbb
push
sbb
call
sbb
stos
call
sbb
stos
call
sbb
mov
add
xchg
icebp
add
add
decb
in
testl
xchg
push
out
jle
or
fnstcw
adc
js
psubb
psubq
in
ficompl
out
fnstsw
adc
jne
adc
jge
adc
jne
adc
pushf
loopne
hlt
xchg
loopne
add
adc
inc
loopne
push
xor
loopne
push
adc
fists
pop
aam
adc
pop
mov
in
sbb
mov
sbb
mov
sbb
mov
in
sbb
stos
in
sbb
stos
in
sbb
mov
in
pop
sbb
out
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
jmp
sbb
jmp
sbb
in
sbb
mov
sbb
mov
aam
sbb
movsl
sbb
andl
pop
sbb
lds
sbb
aad
sbb
fildl
add
fldl
add
iret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
add
repz
add
repz
add
xrelease
mov
addr16
xrelease
repz
add
repz
add
repz
mov
out
mov
out
mov
call
add
repz
mov
in
mov
filds
mov
fildl
mov
xlat
add
repz
add
repz
mov
pop
add
repz
add
repz
repz
xchg
add
mov
add
dec
jmp
xchg
repz
repz
cltd
repz
xor
jmp
leave
repz
test
repz
in
jne
cmpsb
cmc
out
inc
ds
xchg
rcrb
pop
jno
sub
push
lahf
sbb
stos
jne
loopne
loope
shll
insb
push
test
movsb
jle
js
xchg
fwait
outsb
xchg
imul
add
test
fistpl
or
aad
insb
inc
rolb
arpl
fs
mov
xlat
mov
add
sbb
arpl
mov
or
and
xor
popa
add
adcb
dec
out
or
pop
push
or
ja
mov
or
mov
xor
fiadds
in
fmul
mov
repnz
push
xlat
push
popf
and
sbb
mov
mov
add
mov
dec
out
test
outsl
gs
inc
push
lret
cmpsl
out
xor
inc
fdivrl
fisttpl
mov
jg
pop
mov
mov
ja
mov
mov
int3
pop
xor
mov
or
rcrb
push
add
add
repz
out
jmp
push
loope
or
out
outsb
cs
roll
mov
sub
lea
mov
jl
ja
mov
pop
sbb
push
mov
cmp
jbe
inc
mov
cmp
push
push
aaa
or
nop
or
and
pop
xchg
mov
push
rcr
jecxz
aam
inc
lods
and
int3
fcompl
sub
jnp
test
inc
les
xor
in
stos
mov
lock
mov
cmc
and
addr16
push
cmp
push
and
push
pop
mov
out
mov
sub
push
movsb
mov
mov
ficoms
xchg
addb
add
mov
movsl
jge
leave
or
js
fwait
cmc
sub
jne
xchg
test
ds
movsl
pushf
cld
out
add
sti
adcb
mov
xchg
add
sbb
pmulhuw
mov
xchg
push
pop
add
loop
push
jge
fs
lock
jnp
add
fnsave
arpl
sub
arpl
push
fcmovnbe
inc
int3
rorl
outsl
sub
mov
mov
dec
mov
mov
mov
mov
std
shlb
add
roll
mov
aas
js
mov
mov
pop
or
orl
dec
lea
xor
outsb
mov
add
add
push
jno
inc
lds
outsl
cmpsl
mov
or
into
cmp
add
fiadds
push
pop
mov
jno
sub
dec
mov
xchg
fldcw
sbb
adc
popa
push
les
or
xchg
in
or
test
pop
mov
imul
in
data16
sub
fidivrl
paddusb
push
cmpb
pop
mov
push
in
mov
cmpsb
ds
aas
dec
push
xchg
loopne
sbb
adc
add
dec
cmp
dec
xlat
dec
std
fimull
subb
xchg
shlb
xchg
decb
jo
popa
push
push
movsl
ret
movsl
adcb
add
xor
ja
cli
add
mov
dec
dec
ret
aas
and
fmuls
mov
sbb
jg
movsb
sbb
es
addb
mov
cmc
aaa
cmpl
in
xchg
pop
xchg
cmpsb
int3
adc
popf
push
sahf
pusha
pushf
and
pop
push
mov
addr16
add
add
sub
fwait
ljmp
fprem
pop
insb
sub
sub
mov
add
jno
aaa
xor
stos
insl
fs
xchg
sub
pop
inc
dec
stos
inc
fmul
push
ret
rcrl
pop
out
cli
fsubrs
mov
cmpsb
add
sahf
and
cwtl
xchg
xlat
fsts
pop
cmc
js
add
add
pushf
scas
cs
mov
mov
imul
fwait
push
xorb
imulb
out
les
jne
pop
int
sub
cmp
adc
mov
imul
or
mov
repz
sbb
ss
shlb
pop
inc
mov
inc
inc
in
imul
add
adc
sbb
sub
out
in
sbb
sbb
pop
inc
mov
daa
imul
sub
add
xchg
sbb
out
pop
sbb
outsb
lahf
jge
jg
mov
lahf
mov
add
cmp
jo
movsb
or
xor
sbb
inc
arpl
movsb
xor
outsl
fiadds
cwtl
jmp
add
outsb
imul
in
ljmp
addr16
jmp
loopne
push
pop
and
push
ss
jo
mov
imul
jns
pop
sub
push
mull
mov
fstps
cmp
xor
mov
test
in
movsl
mov
xor
mov
in
push
rolb
add
add
out
inc
mov
adc
cmpl
push
test
stos
dec
dec
bound
or
xchg
xor
jle
xchg
push
lods
mov
or
popf
dec
sbb
xchg
mov
cmp
adc
cli
sub
std
sub
mov
in
jnp
es
cmp
sub
flds
add
add
js
or
shl
mov
incl
dec
pusha
rcl
push
push
lret
rorb
sub
mov
test
outsl
cmpb
pop
cltd
and
jge
adc
and
pop
fstp
hlt
inc
dec
fldcw
mov
pop
repz
inc
ljmp
jbe
mov
aaa
xchg
gs
sub
es
add
out
sbb
dec
pop
push
sub
sub
setp
daa
outsb
jecxz
mov
repz
and
sbb
mov
into
aaa
fs
xchg
bnd
sub
jle
sbb
movsl
popf
sub
out
sub
idivl
fldenv
or
jmp
add
stos
stos
hlt
frstor
add
call
xlat
cmpsl
mov
mov
test
mov
and
fs
ficoms
mov
call
or
mov
hlt
and
jmp
lea
push
stc
inc
pusha
fnstcw
mov
popa
and
addb
inc
push
cmpsb
aam
add
add
lods
fbld
mov
shll
loopne
xorb
loope
cs
imul
stos
jmp
add
xchg
or
mov
push
jmp
fidivrs
test
repz
imul
test
test
mov
in
aas
sub
andb
mov
rorb
arpl
jp
xchg
cmpsl
arpl
jg
sub
fs
xor
cmp
xchg
pop
add
int3
dec
inc
xchg
imulb
insl
into
sub
add
ljmp
imul
int
nop
xchg
test
mov
bound
leave
in
repz
mov
ror
into
fcoms
adc
add
es
inc
nop
aas
jp
into
jo
jecxz
imul
cld
pop
aad
fdivrl
mov
inc
testl
jle
mov
mov
add
test
ljmp
pop
mov
mov
loope
add
xor
rorl
in
ss
or
push
pop
push
or
mov
or
popf
pushf
or
pop
or
or
xor
pushf
xor
cs
and
in
nop
or
stos
sbbb
imul
data16
fwait
sbb
jae
cwtl
dec
cmp
jmp
js
jl
sahf
jp
in
inc
dec
xchg
std
fmuls
xorl
add
addb
xchg
mov
pop
add
pop
pop
cmc
and
fidivrl
inc
imul
repz
sbb
add
sahf
loope
inc
js
jbe
dec
outsl
or
repz
adc
mov
cmc
mov
adc
jo
or
leave
rorb
scas
and
or
pop
jnp
sub
cmp
cmpb
add
jbe
inc
pop
mov
movsb
inc
popa
hlt
loope
aam
sbb
pop
mov
aas
and
enter
outsb
inc
xor
sti
xchg
or
dec
aaa
add
test
jns
out
out
jp
and
insl
lretw
cmpsl
lock
insl
nop
push
mov
push
adc
jmp
add
shrl
test
jnp
iret
pusha
or
leave
popa
sbb
arpl
arpl
shll
adc
mov
and
jp
dec
cmc
push
xlat
dec
jnp
sbb
rcrb
jno
scas
inc
jle
in
inc
add
inc
inc
xor
addb
inc
mov
push
inc
cmp
mov
push
test
xor
sbb
shll
js
cmp
add
push
fdivrs
pop
pop
inc
and
mov
xorb
pop
testl
outsb
pop
push
lret
arpl
xor
xor
cmc
loopne
imul
out
sar
adcl
add
cmpsb
test
cmp
popf
shl
jecxz
adc
pusha
shlb
jge
jae
out
stos
jno
dec
imul
rcl
inc
sbb
xchg
cmp
call
adc
xor
sub
and
sahf
and
push
pop
adc
sbb
add
cli
lret
sti
dec
inc
or
jl
lret
lea
fdivrl
js
push
jnp
loopne
mov
jno
adc
mov
repnz
cmp
mov
and
mov
lret
insl
enter
in
pop
call
ret
adc
lds
movsl
lods
mov
es
xor
movsb
dec
aad
jae
mov
cmpl
mov
push
mov
mov
cmp
cmpl
add
lret
push
shrl
aaa
adc
jno
loope
mov
push
xchg
inc
push
pop
xchg
fucomi
aad
movsb
push
xchg
xchg
rol
outsl
sahf
sahf
sti
xor
mov
cwtd
ficoml
loop
sbb
movsb
fstenv
jnp
out
add
add
cmp
daa
out
mov
add
jae
xchg
add
xchg
lea
dec
push
adc
popf
mov
inc
test
loope
xchg
jg
xchg
xchg
test
shrl
stos
mov
movsb
stos
aaa
or
scas
call
pop
outsb
lods
mov
lock
test
cmpsb
mov
xchg
mov
pop
mov
cmp
sub
mov
mov
mov
sbb
mov
outsb
int3
mov
inc
push
mov
add
mov
xor
adc
in
mov
repnz
mov
jo
sbb
mov
mov
mov
loopne
jb
cwtl
lea
adc
mov
fst
out
mov
mov
adc
incl
mov
push
and
sarb
push
leave
sbb
push
hlt
bound
adc
xor
adcl
enter
inc
out
addr16
movsl
pop
or
imulb
into
aas
int3
and
scas
xor
mov
mov
add
pop
xchg
jae
repz
in
bound
dec
push
sti
aad
js
mov
or
cmp
add
popa
sbb
scas
test
xchg
xor
js
out
mov
mov
add
and
repz
adc
stos
dec
fwait
jno
movsb
adcb
das
cmp
jle
shrl
or
mov
push
push
pop
cmpsb
mov
out
pop
test
lea
rclb
mov
jnp
cmpsl
adc
and
aam
pop
lcall
push
xor
adc
cmpl
lods
enter
gs
mov
jne
out
pop
cmc
std
sub
dec
insb
sub
add
add
sub
jp
mov
dec
cmpsb
outsb
bound
dec
negl
cmpsb
imul
cmpsb
sbb
pop
std
mov
out
add
push
add
mov
movsl
pop
mov
add
sbb
aas
fiaddl
push
psrlq
ja
insb
xchg
mov
daa
cmp
int3
das
xchg
jle
xchg
sub
rolb
hlt
clc
or
add
add
pop
dec
push
jmp
push
ljmp
push
popa
pop
es
fdivrs
icebp
jno
lcall
xchg
push
inc
arpl
mov
rcll
shll
mov
rcrl
out
pop
jecxz
push
dec
xchg
jmp
mov
scas
aaa
pushf
xor
addb
std
call
repz
mov
add
push
pop
jns
push
pop
scas
pop
mov
pop
in
sbb
cld
jmp
jo
cmp
xchg
inc
xchg
push
mov
push
lcall
not
push
mov
mov
xor
ret
xchg
data16
aaa
mov
cld
pop
jmp
xchg
out
cmc
cmc
sub
and
repnz
add
fistps
mov
mov
sbb
sub
insl
inc
mov
add
les
cmp
mov
inc
sbb
xor
mov
sub
lcall
sub
inc
mov
pushf
loop
jl
xor
push
jecxz
lock
pop
icebp
pop
mov
sub
xchg
jno
mov
dec
flds
dec
stc
add
push
sub
pushf
dec
sbb
mov
jae
shlb
or
dec
push
cmpsb
pop
or
push
mov
cld
sub
out
ss
add
fstl
dec
stos
gs
sbb
mov
test
aaa
rcll
cmp
mov
out
or
mov
mov
xchg
cmp
test
into
test
jo
aas
daa
lock
sbb
loope
in
xor
enter
ficoms
add
push
loope
lock
imul
icebp
xchg
cmc
subb
aam
mov
ss
jle,pn
out
ret
outsb
jo
ja
jge
lret
les
sbb
test
test
test
adc
std
jne
cmpsl
adc
mov
repz
and
lds
mov
pop
adc
outsl
jbe
pop
shl
sub
add
aas
mov
or
mov
cmpsl
cmp
fildl
add
add
outsb
jne
cmp
enter
and
add
mov
xor
pop
popa
jbe
or
les
sub
std
ret
and
mov
mov
mov
test
push
dec
mov
repz
ja
lahf
test
push
lcall
pop
fwait
cmp
add
add
ds
mov
lcall
pop
scas
sti
daa
adc
inc
es
jb
rcll
lret
add
and
xchg
insl
or
mov
pushf
sub
and
mov
cmpsl
test
and
mov
push
arpl
sti
adc
loop
adc
int
clc
out
iret
lock
cmp
repz
fsts
pop
enter
pop
mov
and
addr16
mov
mov
scas
in
insb
or
lret
mov
xchg
push
cmp
out
and
popa
mov
js
outsb
mov
cmp
xchg
movsb
rcr
mov
mov
add
imulb
sbb
cmp
add
fmuls
pop
int3
pop
bound
roll
dec
movsl
xchg
in
cmp
mov
rcll
push
aas
fadd
icebp
xor
push
pop
cmp
mov
sbb
mov
sub
aas
pusha
jge
push
inc
pusha
pop
flds
into
push
dec
add
xor
jmp
addr16
xlat
pop
push
cmc
sti
mov
sub
loopne
daa
fldenv
pop
mov
push
and
fstps
or
or
pushl
mov
or
jp
push
and
sub
test
push
sbb
xchg
shlb
adc
repz
cwtl
test
scas
test
test
jne
dec
or
or
pop
subl
mov
lea
sub
lock
ja
repz
movsb
or
pushf
jbe
and
ja
es
sub
out
pop
or
repnz
fstps
pop
fs
add
jmp
or
decb
jg
mov
push
sub
push
mov
sub
mov
fdivrs
inc
scas
xor
adc
mov
decl
mov
enter
mov
stc
and
mov
cwtl
inc
add
xor
lock
loop
data16
fsubr
dec
mov
add
add
dec
decl
sbb
ret
rclb
out
daa
popa
popa
js
push
je
int3
lds
movsl
test
xchg
xor
or
sub
fdivrl
adc
cmp
add
je
mov
aad
orb
lea
add
test
mov
or
in
push
test
loope
test
push
adc
inc
dec
adcb
adc
inc
sub
mov
fwait
dec
pop
mov
mov
push
fisubs
popf
push
jecxz
jnp
mov
xor
subb
pop
int
cs
pop
aam
jbe
mov
ja
lahf
pop
out
hlt
push
int
cmp
mov
or
sahf
jnp
scas
imul
dec
inc
mov
jmp
and
call
lods
addr16
cmpl
pop
mov
xor
es
and
jne
sbb
and
ja
push
arpl
or
movsl
stos
cmp
dec
scas
fldcw
sahf
inc
into
push
iret
mov
pop
jmp
dec
push
xacquire
ret
push
xchg
pop
mov
mov
jg
push
sbb
push
mov
jp
jp
fsubs
and
sbb
and
mov
jmp
rorl
cli
int3
add
mov
lock
pop
xor
fldcw
jno
loopne
mov
pop
dec
imull
cmp
cs
mov
stos
adc
mov
mov
xor
je
mov
insl
insb
mov
cmp
lcall
popa
fldl
push
in
add
aas
in
push
test
std
cmp
xor
ja
sarl
add
inc
pop
cs
sbb
sub
in
sahf
jl
xlat
mov
dec
cmp
and
xor
pusha
clc
and
out
cmp
ret
inc
bound
dec
stos
and
ja
sub
jbe
push
or
repnz
sti
sbb
in
cmpsl
insb
hlt
mov
jns
jo
outsb
push
xor
out
testb
mov
in
je
adcb
pop
pop
cli
filds
cmp
jns
inc
out
cmp
mov
leave
js
mov
lret
bound
cmp
jmp
jle
popa
xor
push
movsl
mov
fdivp
mov
orl
ret
les
pop
cmpsb
xor
into
lahf
mov
or
xor
imul
mov
pop
insl
adc
mov
seta
mov
adc
add
add
sti
rclb
lret
mov
or
mov
push
aas
test
mov
lret
mov
xchg
imul
movsb
pop
lods
jl
or
mov
out
mov
sub
js
push
push
push
std
ljmp
iret
fs
sbbb
cmp
jl
adc
arpl
ja
mov
js
ret
out
fisttpll
lock
cmp
cmp
loopne
int3
and
or
fstps
sbb
mov
je
push
je
pop
pop
dec
push
sbb
das
addb
lret
in
lock
nop
lods
fcomps
imul
out
push
stos
lods
test
ret
add
xchg
fldt
js
ret
cmc
test
fidivl
push
xor
das
icebp
dec
add
scas
pop
jmp
adc
ljmp
sarl
and
jecxz
add
fsubrl
pop
fstp
pop
pop
push
jecxz
pushf
pop
mov
fistl
or
push
jb
adc
rclb
mov
and
enter
icebp
adc
xchg
push
lcall
fs
mov
and
sub
enter
dec
sub
fisttps
icebp
mov
sub
mov
flds
push
daa
lea
mov
js
add
or
xor
cld
jnp
cmp
pop
std
adc
or
clc
jo
jg
mov
add
jle
adc
in
inc
xor
loopne
adc
shl
jmp
lret
push
push
out
mov
int3
xchg
pop
test
mov
enter
mov
pop
inc
pop
lods
push
push
mov
or
int3
fcompl
add
cli
shlb
orl
add
add
lock
fisubs
add
fldenv
bound
enter
push
movsl
dec
jge
mov
mov
sub
out
ja
cltd
sahf
jo
pop
icebp
dec
call
mov
push
and
fistpll
xchg
hlt
pop
aaa
mov
bound
ficoms
fwait
lret
fs
arpl
ss
dec
daa
imul
lods
pop
jl
gs
mov
jmp
cmpsl
mov
mov
sub
bound
cwtl
into
jge
xlat
mov
mov
pop
add
dec
fcmovb
mov
xor
popa
pusha
and
ss
fidivs
cmp
fs
or
jb
shl
jp
sahf
and
add
fsubrp
jg
add
add
cmp
out
cld
sub
mov
jbe
popa
in
je
out
mov
data16
jo
mov
add
daa
fwait
gs
adcl
gs
sub
in
in
stos
inc
out
push
pop
fildll
call
lcall
pusha
hlt
sti
les
fcomps
cmpsb
fsts
add
add
cmp
call
jnp
dec
rcrl
rclb
aad
inc
orb
mov
cmp
and
test
pop
mov
push
outsb
add
ret
mov
test
push
aam
inc
pusha
push
inc
mov
jecxz
inc
cmp
inc
mov
dec
dec
rcll
jnp
push
cwtl
and
out
sub
imul
test
sbb
ret
mov
ret
mov
shl
in
add
xor
cmc
loope
sub
test
jb
bound
and
clc
pop
xchg
mov
imul
je
loope
push
stc
iret
add
pop
out
dec
ficoml
int3
stc
fsub
mov
pop
lock
push
mov
xchg
cmp
test
fldt
pop
cmpsl
pop
xlat
lods
push
mov
loopne
mov
lret
push
icebp
mov
int3
inc
jne
repz
movsb
arpl
out
push
hlt
xor
adc
pop
cs
daa
xor
mov
outsb
mov
mov
mov
fisubrs
jnp
icebp
cmp
mov
pop
adc
rclb
mov
jg
lret
mov
inc
push
test
mov
pop
mov
sbb
or
enter
test
inc
sub
add
and
shlb
or
dec
mov
add
inc
inc
pop
push
shrd
sbb
lds
cmp
mov
test
push
int3
outsb
xchg
push
xchg
in
std
jp
xchg
ret
leave
mov
sbb
lea
movsl
movb
stc
cmpsl
jae
add
pusha
fs
popa
mov
add
add
jne
cmp
shlb
cmp
cmp
jecxz
mov
pop
pop
xchg
int3
xor
popa
xor
enter
jnp
push
test
jecxz
xchg
in
mov
inc
andb
pop
rorb
in
or
std
sub
fnstenv
adc
movsb
add
adc
jno
shll
adc
add
add
sbb
jle
popf
ds
and
push
int3
xor
cmp
mov
test
lods
test
pop
les
jp
adc
rolb
je
push
insb
inc
push
mov
sbb
mov
mov
push
xchg
lret
cld
cmc
sub
inc
movsb
sub
pop
ds
sub
push
xor
daa
ljmp
rol
and
lods
dec
push
cmp
jns
and
add
jne
mov
pop
mov
test
adc
push
and
arpl
test
or
add
pop
sbb
fisttpll
lods
sbb
fistpl
aam
sub
outsb
sbb
gs
sbb
inc
pop
push
inc
and
addr16
ljmp
add
add
add
mov
inc
outsl
loop
aas
sub
and
mov
or
test
xor
mov
fiadds
mov
mov
cmp
push
pop
dec
shl
pop
inc
jns
push
or
dec
aaa
test
cmp
sbb
cwtl
int3
test
cwtl
mov
xchg
pop
push
cs
cmc
adcb
add
add
add
push
lds
jne
jns
insb
jge
andb
fistpl
jmp
mov
add
push
fs
xchg
out
outsw
gs
mov
xorl
addr16
mov
add
in
dec
mov
mov
xchg
gs
mov
and
dec
mov
mov
push
cmp
ret
cli
sbbl
jo
out
leave
push
push
push
lods
cmc
inc
sub
push
daa
jl
or
adc
mov
sti
and
rcrb
adc
and
lds
pop
jns
gs
jp
rorb
imul
xchg
xchg
jns
shr
into
loopne
cld
arpl
je
sub
dec
adc
add
subl
mov
mov
test
push
push
dec
fdivrl
or
mov
out
lahf
rorb
mov
adc
jg,pn
add
sbbl
clc
and
out
add
pop
mov
dec
pop
nop
xor
mov
into
lock
dec
test
add
add
xchg
inc
pusha
push
les
std
dec
lods
mov
imul
xor
jg
rorl
jl
testb
adc
sub
mov
int
or
mov
fsubrp
xchg
xlat
sbb
push
out
or
in
gs
or
mov
push
imul
or
push
adc
out
movsb
jg
and
sbb
pop
das
lods
jnp
xchg
ret
enter
jnp
les
je
dec
xchg
pop
cwtl
es
fwait
xchg
adc
es
iret
fs
or
in
and
aas
sub
or
test
mov
ror
outsl
and
push
xor
xchg
jl
idivl
in
or
jge
rcrb
push
mov
inc
jb
mov
lret
add
inc
cmp
or
mov
xor
mov
pushf
out
adc
addl
imul
imul
cmp
pop
sbb
hlt
pop
mov
push
rclb
xchg
movsl
in
jno
add
mov
dec
dec
and
jbe
imul
js
pusha
fcomps
arpl
add
mov
popa
pop
sbb
jns
xchg
xchg
mov
out
repnz
sbb
jl
rorl
mov
mov
inc
call
flds
dec
and
add
add
and
popa
test
dec
cmpsl
mov
mov
outsl
ss
cld
pop
push
mov
dec
adc
dec
sub
leave
clc
test
inc
loope
sub
fld
mov
mov
dec
sbb
data16
mov
dec
scas
movsb
lock
icebp
push
iret
scas
cmp
dec
adc
push
jb
jmp
outsb
jp
jb
sub
pop
xchg
push
xchg
int
mov
movsl
lahf
std
insb
jl
and
jb
test
leave
push
aam
and
xor
jge
and
into
iret
xor
insb
int3
xchg
in
fs
inc
xor
jmp
lods
sub
dec
sbb
mov
mov
mov
inc
xchg
rcrl
les
sub
cs
push
pop
sahf
xor
mov
sti
lret
inc
movsb
sub
insb
sahf
xchg
sbb
or
movsb
xor
sahf
xor
inc
addl
int
push
out
addl
xchg
and
outsl
jmp
movsl
iret
dec
add
aad
test
push
xor
dec
loopne
jae
cmp
mov
not
push
stos
pop
lds
mov
jge
cwtl
test
cmpsl
and
test
xchg
aas
mov
out
ljmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
mov
add
xchg
add
jo
push
add
out
jno
mov
out
loope
icebp
lock
repz
add
repz
adc
repz
adc
ret
icebp
adc
ret
icebp
adc
mov
mov
sldt
icebp
adc
shl
add
icebp
adc
icebp
adc
mov
adc
mov
adc
mov
adc
xor
add
icebp
add
add
pusha
icebp
add
jbe
add
add
icebp
pop
add
das
add
pop
add
fwait
add
mov
or
xchg
and
mov
lcall
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
pop
add
push
call
arpl
ja
jae
or
jo
or
fs
repz
lock
shrl
and
incb
mov
push
jecxz
sbb
addr16
out
mov
mov
dec
repz
insb
dec
repz
mov
in
orl
push
adc
jae
add
outsb
insl
add
add
add
and
mov
out
insl
lret
xchg
into
sbb
ret
not
cmp
ror
adcl
push
jecxz
or
sti
in
add
in
add
mov
or
xchg
repz
dec
mov
add
add
add
sidtl
repz
cmp
dec
cmp
adc
and
add
loope
jne
mov
add
mov
add
add
mov
push
add
scas
push
add
mov
fs
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
xor
rcrl
call
mull
add
testb
xchg
mull
add
and
xor
add
add
mov
cltd
je
mov
mov
mov
jo
test
push
nop
mov
out
mov
jns
lds
insl
gs
inc
insb
les
push
add
cmc
xor
push
cmc
add
add
add
mov
or
jbe
imul
or
ljmp
push
cmp
jae
ljmp
mov
frstor
jmp
add
or
call
and
mov
add
ljmp
mov
add
mov
outsl
mov
add
lods
add
mov
out
mov
out
mov
cmp
enter
enter
mov
sub
imul
pop
xchg
repz
sbb
test
test
or
mov
test
or
pop
test
push
fiaddl
test
mov
insl
dec
push
sbb
add
add
push
test
add
sub
testb
mov
or
out
aaa
sub
push
fdivl
xor
jbe
insl
in
sub
jbe
jbe
jbe
pop
fs
mov
fs
leave
arpl
cmc
arpl
mov
jbe
testl
jbe
xlat
push
jbe
scas
mov
test
add
add
push
jbe
loopne
jbe
aaa
pcmpeqd
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
outsb
repz
mov
sub
push
add
xchg
xor
xchg
mov
add
jae
add
arpl
or
fists
jo
xlat
jnp
ja
add
add
repnz
pop
ret
xchg
pusha
arpl
xchg
fs
lcall
push
xorb
xchg
mov
scas
idivl
jecxz
add
jecxz
add
repz
add
repz
add
jecxz
add
jecxz
add
mov
add
mov
add
mov
icebp
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
jno
in
pop
jno
in
jno
call
jne
dec
std
jo
lds
jno
mov
data16
jl
jo
jl
jo
jl
jo
jl
add
hlt
jl
das
jo
jl
std
sub
add
jl
jo
jl
jo
jl
outsl
inc
jl
outsl
cmp
jl
cli
sub
std
xchg
jl
outsl
sbb
jl
outsl
or
jl
outsl
std
jnp
outsl
cmc
jnp
add
add
add
repz
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jecxz
add
mov
add
mov
add
mov
out
pushl
out
incl
mov
out
incl
jb
incl
jb
incl
out
jmp
incl
jb
incl
jb
incl
out
incl
out
incl
xor
incl
xor
incl
and
incl
and
incl
xor
incl
xor
incl
and
incl
and
incl
repnz
incl
repnz
incl
loop
jmp
cmc
add
repz
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
repz
mov
jecxz
test
sub
incb
add
add
xlat
adc
loopne
or
fadds
and
add
fs
sbb
sti
push
pop
enter
repz
out
sub
mov
test
out
sbb
or
or
mov
add
mov
mov
iret
sbb
stos
adc
loope
adc
mov
or
cmc
jnp
xor
ja
add
out
jns
jecxz
jge
pcmpeqw
popa
push
insl
mov
imul
push
pop
pop
lcall
push
mov
xor
dec
scas
jns
inc
mov
cmp
mov
daa
cmp
sub
mov
and
xchg
test
into
sbb
mov
add
fistpl
fimull
scas
xchg
loop
stos
out
mov
ljmp
add
repz
add
idivl
or
sti
pop
or
push
out
add
out
push
pop
jmp
or
scas
jnp
pavgw
adc
xlat
jecxz
pop
sbb
mov
shlb
and
fsubrs
sub
mov
ss
jnp
cmp
pop
lret
ds
xor
or
iret
fwait
insb
outsl
ret
jg
jae
xorl
js
ljmp
inc
inc
addr16
inc
mov
mov
dec
push
push
pop
loopne
push
pop
in
pop
jno
in
gs
orb
jle
or
sbb
adc
and
lcall
add
add
add
adc
xchg
jmp
jae
stos
loope
xchg
scas
xor
ljmp
mov
and
iret
cmp
lret
xor
rcrb
dec
pop
jecxz
ficoml
inc
fiadds
bound
xchg
les
rcrb
mov
jb
xorb
js
data16
add
in
call
add
repz
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
xchg
lock
mov
int
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
push
lock
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
movsl
je
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
and
jb
jmp
mov
add
mov
add
mov
add
mov
add
in
jb
push
in
decb
lods
jb
add
testl
add
testl
add
testl
pushl
std
call
fscale
jg
testb
jecxz
add
jecxz
add
repz
repz
cmc
flds
cld
loop
add
mov
add
testb
mov
testb
mov
add
and
std
jmp
add
add
testb
jae
add
arpl
add
arpl
add
jae
add
repz
arpl
add
mov
mov
add
pop
add
mov
mov
mov
add
faddl
mov
sbb
push
push
sbb
dec
push
add
pop
or
jo
or
js
adc
cwtl
outsb
adc
cwtl
dec
adc
cwtl
dec
adc
cwtl
dec
adc
or
add
jp
or
jo
or
js
adc
cwtl
insb
adc
cwtl
dec
adc
cwtl
dec
adc
cwtl
dec
adc
or
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
push
xorb
xorb
inc
inc
iret
cld
jg
movb
add
cld
xorb
rorb
stos
movsb
repz
fldt
lret
test
cmp
out
jno
fsubs
and
mov
sub
mov
jbe
lods
jl
mov
jl
out
inc
incb
adc
adc
pop
testb
lods
daa
ret
ljmp
das
and
mov
je
cltd
add
add
add
xchg
scas
xchg
add
push
ja
pop
or
xor
jmp
pushf
push
into
shll
fisubrs
les
inc
sub
push
in
mov
mov
mov
xor
lods
ds
or
mov
jle
mov
jnp
clc
rolb
daa
ret
sub
rclb
js
out
bound
das
cli
pop
mov
test
mov
int
bound
push
mov
xor
inc
cwtl
ss
je
adc
jbe
fbstp
fimuls
sub
arpl
cld
cmpsb
jno
adcl
popf
dec
rcll
add
faddl
add
xchg
add
add
jno
add
incl
mov
add
mov
push
add
movl
mov
add
mov
add
add
repz
add
repz
adc
repz
mov
dec
nop
lret
add
repz
repz
add
repz
nop
lret
add
repz
repz
add
add
add
repz
repz
mov
jecxz
mov
out
mov
out
mov
out
mov
call
add
bnd
add
bnd
mov
jmp
xchg
ljmp
add
testl
icebp
add
xchg
add
icebp
add
xchg
add
icebp
add
test
add
bnd
mov
jmp
mov
and
xchg
push
ljmp
add
mov
add
mov
add
mov
add
xchg
add
mov
add
mov
jmp
mov
add
xchg
add
xchg
add
testl
add
jg
add
add
ja
add
testl
pop
notl
out
inc
add
add
jg
add
add
pop
jg
add
imull
add
testb
out
inc
add
testb
fistpll
add
testb
ja
add
adc
xlat
jle
add
pop
add
jle
add
testb
sbb
add
testb
and
add
call
add
mov
or
inc
add
mov
xchg
add
inc
mov
add
mov
xchg
bound
add
je
inc
mov
add
mov
xchg
int
push
mov
xchg
cmc
add
mov
xchg
mov
add
faddl
or
pushf
add
add
inc
add
mov
addl
add
inc
mov
test
xrelease
repz
add
repz
mov
xchg
stos
repz
xchg
repz
add
repz
xchg
xrelease
repz
test
rep
add
repz
test
repz
add
repz
test
add
add
repz
xchg
repz
repz
mov
testl
dec
repz
repz
xchg
add
add
add
mov
add
mov
add
mov
out
mov
add
mov
cli
mov
add
mov
push
mov
add
mov
add
mov
jg
add
add
mov
js
sti
add
mov
add
mov
add
mov
add
mov
add
mov
add
cli
add
or
adc
out
inc
add
jae
add
jae
add
add
add
or
add
add
pop
add
jb
add
or
sub
mov
add
adc
out
inc
add
outsb
inc
add
push
add
outsb
inc
add
insl
inc
add
or
jnp
inc
add
xor
insl
inc
add
repnz
add
repz
add
addl
inc
mov
inc
mov
add
inc
mov
add
pop
test
mov
test
pushf
add
mov
inc
mov
push
mov
inc
mov
add
mov
add
mov
add
mov
inc
mov
test
cmp
pop
mov
test
mov
test
sbb
add
mov
add
add
add
repz
pushf
repz
orl
add
repz
jp
add
test
lret
orb
add
repz
pop
repz
dec
repz
jne
xchg
test
dec
add
repz
repz
pop
test
repz
add
repz
or
daa
add
repz
add
repz
nop
repz
xchg
xlat
or
jne
xchg
iret
or
add
xchg
add
or
in
mov
mov
ret
push
xchg
add
mov
add
add
cltd
loop
add
add
add
ret
and
add
and
or
and
sub
add
add
and
inc
mov
add
mov
add
xor
stos
mov
add
arpl
testb
add
mov
add
inc
and
add
lock
add
dec
add
or
repz
ds
out
add
jmp
ds
out
push
add
cmp
add
add
add
cmp
add
out
push
add
cmp
add
inc
cmp
push
add
cmp
pop
add
dec
add
clc
or
out
add
dec
add
or
adc
add
testl
add
pop
add
add
xchg
aam
mov
or
imul
mov
add
aas
mov
fnstcw
mov
add
aas
mov
add
mov
add
cwtl
fnstcw
mov
fdivrs
mov
or
mov
or
fdivrs
mov
add
mov
fdivrs
mov
add
mov
aas
mov
fnstcw
mov
fnstcw
mov
incb
test
fcmovnu
insl
repz
jp
mov
add
rcr
dec
repz
lahf
repz
mov
repz
fsubrs
repz
repz
repz
dec
fdivrs
hlt
add
repz
add
repz
pop
repz
repz
mov
repz
repz
lods
repz
add
add
repz
repz
incl
inc
arpl
add
mov
add
mov
add
inc
and
nop
mov
add
loop
add
mov
add
shll
add
mov
add
ret
and
and
and
inc
mov
add
mov
add
mov
add
and
inc
mov
add
and
movsl
mov
add
pusha
and
das
mov
add
and
int3
mov
add
cmpsl
hlt
or
jae
add
cmp
sub
pop
cmp
add
add
or
fistpll
add
hlt
or
xor
or
xchg
cs
repz
mov
add
or
scas
cs
testl
div
sub
out
cs
cs
das
add
das
add
add
ror
aas
mov
add
mov
int3
aas
mov
add
mov
aas
mov
add
aas
mov
lret
data16
mov
mov
aas
mov
or
dec
add
mov
aas
mov
add
mov
add
mov
add
dec
add
mov
call
dec
add
mov
add
repz
add
pop
mov
hlt
mov
icebp
mov
hlt
test
hlt
lea
add
add
hlt
addb
push
add
hlt
push
add
hlt
inc
add
hlt
cmp
add
hlt
cmp
hlt
cmp
lock
hlt
pushf
add
sahf
add
lock
add
addl
das
hlt
jae
inc
hlt
insb
add
lock
pop
add
hlt
cmpsl
add
hlt
stos
add
hlt
movsl
add
jmp
mov
pushl
stc
ljmp
mov
add
mov
call
mov
call
mov
incl
jecxz
ds
decl
mov
decl
mov
decl
mov
add
mov
incl
mov
incl
mov
call
mov
dec
mov
fmuls
mov
mov
mov
pushl
mov
jmp
mov
lcall
mov
add
adc
and
xor
enter
mov
xor
adc
and
add
cmc
das
add
cmc
sbb
add
or
insl
testb
sahf
mulb
add
negb
data16
negb
testb
jge
pop
add
negb
add
negb
add
imulb
in
pop
add
add
add
lock
adc
push
add
lock
std
out
cmp
sbb
adc
or
and
aaa
lock
push
add
lock
add
rolb
mov
add
pop
add
or
dec
mov
add
adc
push
mov
add
mov
add
incb
dec
mov
add
mov
add
scas
add
sbb
push
add
add
icebp
add
mov
add
mov
add
mov
inc
mov
dec
mov
add
aas
add
sub
imul
push
add
push
or
insl
push
or
mov
inc
pop
mov
and
jmp
push
pop
sub
push
pop
daa
and
sub
and
and
add
add
jg
dec
and
inc
and
call
and
in
pop
pop
repnz
lock
loope
push
pop
fbld
inc
pop
xor
and
pop
cmp
xor
aaa
and
and
xchg
or
and
or
and
stos
subb
stos
xorb
lods
xchg
sub
movsb
xchg
sub
xor
andb
mov
xor
subb
mov
xchg
xor
cmp
daa
cmpb
cmpb
sbb
push
xor
adcb
adcb
xchg
dec
xor
push
xor
orb
orb
xchg
dec
xor
xchg
dec
xor
addb
addb
lea
mov
lea
test
add
repnz
or
sbb
cmp
sbb
push
icebp
icebp
and
lock
and
out
and
out
and
xor
icebp
and
push
sub
daa
push
cltd
icebp
sub
cwtl
icebp
sub
scas
icebp
sub
outsb
icebp
sub
jge
cs
insb
icebp
sub
push
xchg
icebp
das
push
popa
icebp
xor
pusha
icebp
xor
push
icebp
xor
push
icebp
xor
movsl
icebp
ss
xchg
icebp
xor
push
lcall
push
shl
inc
push
mov
add
sub
inc
mov
add
add
xor
inc
mov
inc
test
add
je
dec
mov
add
add
decl
mov
decl
mov
call
imul
xchg
push
mov
push
xchg
push
mov
add
movsl
add
mov
pop
mov
add
ret
mov
add
xchg
add
out
lea
xor
xchg
sub
adc
add
out
jp
mov
jae
mov
pop
add
out
pop
add
out
inc
add
out
xor
sub
movsb
add
out
popf
add
daa
add
out
sub
jp
sub
jnp
sub
out
and
pop
out
sub
push
out
and
add
pop
add
xor
ret
add
sbb
mov
pop
add
cmpsb
mov
add
fwait
mov
add
mov
add
mov
add
mov
mov
lea
stos
add
mov
dec
mov
add
dec
mov
add
mov
add
mov
add
add
icebp
sbb
icebp
pop
add
icebp
sbb
repnz
add
add
repnz
repnz
add
repnz
add
repnz
repnz
add
repnz
repnz
repnz
repnz
or
sub
repnz
add
repnz
repnz
add
repnz
add
xrelease
adc
mov
add
xchg
push
mov
push
rep
add
repz
mov
mov
stos
mov
add
stos
sbb
lods
mov
add
mov
scas
mov
leave
mov
mov
std
lret
mov
int3
mov
std
lret
std
scas
mov
std
int
mov
nop
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cwtl
mov
cltd
mov
fwait
mov
pushf
mov
popf
mov
std
sahf
mov
aaa
push
idivb
ljmp
ljmp
negl
notl
ljmp
ud0
test
sti
test
clc
test
stc
test
div
int
fcomip
aam
nop
shl
cmp
inc
testb
xor
mov
testb
sbb
push
adc
negb
dec
negb
dec
idivb
decb
xor
inc
testb
and
add
sbb
add
adc
add
or
add
mov
dec
add
and
push
and
dec
loope
and
repz
into
xchg
and
mov
insb
and
cmpsb
outsl
and
jno
push
xchg
cltd
and
popf
and
aad
dec
jle
and
fsubs
outsb
push
and
pop
lock
push
out
and
cli
and
inc
or
and
jle
shlb
pop
dec
shlb
insb
dec
popa
and
sbb
leave
dec
andb
dec
andl
dec
sub
scas
dec
sub
lods
dec
daa
and
add
aad
nop
add
dec
mov
scas
dec
xchg
and
dec
nop
and
dec
xchg
and
dec
and
dec
les
rorl
and
dec
or
dec
or
and
dec
and
dec
or
dec
push
and
fisttps
and
mov
mov
cli
mov
data16
mov
imul
cli
and
cli
xor
loop
add
mov
testl
stos
jg
pop
stos
js
or
wbinvd
push
push
unpcklps
movlps
mov
rorb
es
push
and
stos
stos
push
push
stos
stos
push
push
stos
or
push
stos
or
push
stos
addps
repz
push
mov
mov
push
cwtl
adc
pop
repz
jo
sub
rcll
mov
sub
push
fs
push
test
and
cltd
adc
sub
push
rcrl
pop
push
and
adc
or
xchg
adc
pop
adc
add
xchg
or
ficomps
mov
or
inc
sbb
or
lcall
jg
and
xchg
nop
and
cmc
es
xchg
and
cltd
and
xchg
andl
xchg
adc
es
aad
incl
adc
clc
xchg
adc
sti
mov
cli
xchg
and
aam
fisubs
fisttps
sarl
xchg
std
es
call
pop
movsl
jl
and
in
and
sgdtl
mov
sub
lret
and
ljmp
and
daa
and
or
insl
pop
add
sbb
ja
xchg
and
movsb
and
and
push
decb
and
incb
and
jmp
and
cld
iret
add
sar
roll
mov
cld
add
lret
cld
fadds
sbb
fiaddl
into
or
fisttpll
jne
fisttps
stos
or
add
test
or
in
add
out
or
push
call
adc
ljmp
push
add
add
push
add
jl
adc
xchg
bound
or
adc
jl
adc
xchg
jle
or
ja
or
jl
push
adc
add
add
stc
pop
adc
stc
xor
jbe
cmp
jg
xor
adc
stc
nop
adc
stc
adcb
stc
jnp
jle
je
ja
insl
adc
adc
stc
sub
stos
stc
sub
test
sub
test
stc
sub
scas
stc
and
adc
scas
adc
mov
add
mov
adc
stos
adc
add
sbb
mov
sbb
mov
lcall
lcall
push
pushf
jp
seta
lcall
xor
or
nopl
cmovns
push
dec
jp
push
or
mov
or
lcall
push
jp
push
add
push
add
push
rcll
mov
push
mov
jecxz
push
push
loop
dec
push
sar
push
push
sar
push
push
daa
stc
push
push
push
stc
push
push
adc
stc
push
push
or
pop
push
or
push
push
ret
xor
stc
xor
adc
xor
pop
cli
xor
push
cli
xor
add
add
add
xor
xor
cli
aaa
xor
cli
cmp
pop
stc
cmp
dec
stc
cmp
dec
stc
cmp
lods
stc
xor
cmp
xor
stc
inc
xor
testl
mov
inc
jnp
or
pop
leave
or
jb
dec
pop
ret
or
les
dec
mov
cmpsb
or
or
mov
or
add
add
fwait
or
fwait
pushf
or
jnp
or
jnp
or
jnp
or
jnp
or
pop
sbb
pop
add
pop
adc
pop
adc
pop
mov
push
or
mov
call
or
fwait
ljmp
fwait
in
or
repz
or
loope
or
loope
or
loope
or
loope
or
add
add
loope
or
loope
or
mov
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
or
in
or
in
or
in
or
clc
or
add
or
sti
xchg
das
ficoml
outsl
xor
subl
xchg
js
mov
sbbl
addl
xchg
dec
adc
pushf
xchg
and
mov
incl
lret
decl
and
xchg
and
xchg
and
sub
and
sub
and
jmp
cwtl
and
cltd
and
mov
add
mov
add
fimull
add
add
call
icebp
add
mov
add
cmpsb
icebp
add
mov
add
mov
or
add
or
add
or
add
add
mov
add
dec
repnz
orl
add
jo
add
dec
repnz
decl
add
fwait
lock
out
or
add
or
add
or
add
or
add
lock
mov
add
js
add
jns
add
mov
add
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
add
add
lret
cmp
mov
add
mov
add
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
add
in
add
mov
jg
mov
movb
repz
mov
mov
cmp
repz
cmp
repz
repz
add
add
repz
mov
gs
mov
or
mov
push
aaa
mov
std
add
repz
repz
aaa
mov
add
repz
aaa
mov
or
repz
aaa
mov
cld
add
repz
mov
xchg
mov
mov
aaa
mov
movl
mov
repz
repz
popf
repz
popf
repz
jge
add
repz
repz
xchg
add
xchg
add
repz
repz
repz
xchg
add
repz
xchg
add
mov
add
mov
add
jl
add
mov
add
pop
repz
mov
add
or
add
cmc
add
mov
add
xor
add
movsl
or
add
testb
mov
add
cli
cmc
add
fwait
or
add
testb
push
add
cmp
add
stc
pop
add
dec
testl
add
add
filds
add
dec
testl
add
add
jecxz
add
sub
add
repnz
add
push
add
loope
add
and
add
mov
add
jno
add
cmpsl
testl
add
fidivs
add
fbstp
add
jmp
add
in
xor
mov
xor
mov
add
and
add
ja
add
add
add
ss
add
incl
mov
imul
pushf
stos
mov
stos
lods
push
jne
insb
in
mov
jb
insb
ss
xor
and
mov
popa
dec
imul
mov
mov
push
fdivrl
cltd
dec
and
mov
xor
andl
push
stos
fists
aaa
jne
push
je
insb
and
xchg
push
sub
adc
or
movsl
fcmovnbe
add
into
cmp
sahf
adc
out
cmp
xchg
in
cmp
mov
add
adc
jmp
rcrl
xor
dec
or
xchg
mov
dec
pop
cmpsb
xor
sbb
add
add
aad
das
jns
sarl
test
aad
xor
cli
push
fmull
xchg
push
jbe
in
ljmp
jnp
mov
ret
loopne
fs
lods
inc
call
insl
arpl
fisubl
sti
adc
xor
nop
fisubl
rclb
jnp
fmul
xor
mov
fisubrl
clc
inc
lcall
loop
imul
xorl
sbb
ljmp
enter
dec
push
mov
push
sahf
ss
inc
xor
das
jp
cmc
sarb
push
jecxz
outsl
mov
jg
adc
ja
dec
pop
mov
int3
cld
inc
ljmp
add
add
or
pop
inc
sbb
mov
icebp
sub
sbb
and
xor
inc
jnp
xor
or
in
mov
lock
push
lock
lock
fstpt
inc
les
dec
stc
xlat
jmp
push
mov
mov
cld
ss
inc
jp
repnz
repnz
jp
repnz
jp
hlt
imul
add
pop
cmpsb
hlt
mov
loop
cmp
push
repnz
xor
leave
cmp
add
test
push
aam
leave
push
sbb
mov
cmp
cwtl
fstpl
mov
sbb
mov
push
adc
add
and
jmp
add
clc
stc
mov
cmpsb
ror
scas
mov
cli
jp
iret
int
fstpt
cmp
mov
mov
xor
xchg
add
clc
lea
imull
or
insl
add
negl
or
and
jmp
cmpsl
mov
add
jp
cmc
inc
ret
addl
movsl
xchg
add
ss
int
dec
pop
mov
rcl
xor
lea
and
rcrl
push
mov
out
cmp
div
cmp
lock
cld
mov
jno
cmp
movsl
je
jecxz
pop
cmp
cmp
into
cmp
cmp
lret
dec
jp
daa
mov
fwait
stos
mov
mov
and
leave
shll
add
lea
ss
jnp
dec
cmp
fwait
inc
pop
cmp
jl
sbb
mov
ljmpw
xor
sahf
aas
ja
mov
outsl
dec
mov
aas
scas
dec
jmp
rcrb
sbb
pop
mov
push
rcrl
mov
ret
scas
adc
pop
repnz
add
add
mov
inc
negb
mov
xor
lock
lods
sbb
add
adcb
repnz
push
notl
fcomip
popa
ja
cmc
imul
jne
push
idivl
mov
xor
push
nop
sbb
and
mov
mov
and
iret
lahf
div
fsts
jecxz
in
ja
xor
and
cld
lds
or
imul
test
fbstp
add
idivb
add
test
or
fildll
push
stos
cmpsl
or
jp
nop
push
cmpsl
mov
jg
lds
icebp
add
cmc
aad
sub
cmc
flds
leave
icebp
or
aas
stos
std
push
sti
shrl
dec
mov
add
xchg
hlt
jae
out
hlt
imul
mov
mov
mov
push
pop
je
out
add
jbe
mov
xchg
aam
jecxz
aas
adc
and
push
jns
test
ss
pop
jg
pop
pop
xor
movsl
cmpsb
adc
or
inc
or
push
mov
add
add
cltd
scas
mov
xor
cmp
dec
cmp
xlat
aaa
sti
out
cli
aaa
mov
mov
sbb
addl
inc
inc
mov
push
and
mov
cmp
inc
inc
cmp
inc
pop
cmp
inc
mov
or
daa
or
hlt
cmovns
xchg
enter
and
and
pop
es
xchg
sub
sub
div
dec
addb
add
pop
fistpll
cmp
mov
or
sbb
sub
xor
lcall
lock
jo
stos
or
mov
dec
push
sahf
pop
xchg
xorb
or
sbb
sbb
cmp
test
sub
mov
daa
and
in
add
add
cmp
mov
add
mov
push
inc
mov
add
mov
add
mov
mov
add
mov
dec
inc
mov
add
mov
add
mov
add
mov
add
mov
inc
mov
add
mov
push
inc
mov
push
inc
mov
add
mov
jbe
mov
lock
dec
repz
mov
dec
dec
dec
repz
add
repz
dec
dec
repz
add
repz
repz
mov
ficoml
repz
mov
sbb
add
repz
add
repz
mov
sbb
rep
add
repz
add
repz
add
repz
repz
add
add
repz
mov
dec
dec
dec
repz
repz
repz
mov
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
ds
leave
xor
add
mov
add
mov
add
mov
add
lock
jecxz
mov
xor
mov
flds
add
add
mov
lret
daa
mov
lret
add
cltd
mov
sbb
mov
add
mov
push
add
divb
notl
testl
add
in
inc
add
mulb
divl
testb
add
arpl
add
push
add
insl
add
imull
ret
divl
jbe
insb
add
mull
testl
add
mov
fs
xor
push
imul
testl
add
das
add
sbb
add
inc
add
mov
add
aas
add
aaa
add
sbb
add
add
add
pop
clc
jmp
dec
add
mov
or
xor
inc
mov
add
mov
or
sbb
or
jb
inc
mov
push
inc
mov
push
inc
mov
pop
inc
mov
flds
insb
jecxz
mov
mov
inc
mov
cltd
fcmovne
repz
dec
rep
fisttpl
fmull
adc
mov
out
mov
cmpsb
mov
cmp
into
bnd
out
mov
test
sub
mov
es
movl
pop
mov
inc
xchg
ret
shrl
cwtl
in
dec
testl
xchg
cmp
fsts
or
lret
xchg
mov
mov
add
mov
add
and
mov
inc
dec
dec
add
lret
mov
add
sub
ret
sub
test
fldt
jne
push
mov
jmp
cld
xor
mov
loop
clc
mov
pop
sbb
pop
adc
add
sub
mov
add
sub
jne
mov
add
dec
adc
gs
fbld
in
add
dec
cs
repz
pusha
enter
lahf
out
icebp
shll
add
loope
notl
hlt
loop
mov
cli
out
ja
jecxz
lods
or
jmp
cld
add
add
out
cli
add
mov
sbb
add
cmc
add
xor
xor
push
push
movsb
fs
inc
mov
dec
add
pusha
or
pop
add
jns
imul
arpl
or
dec
scas
sbb
add
dec
pop
add
sti
add
xchg
jnp
or
jno
sbbb
jp
lcall
pop
out
or
mov
mov
or
jne
sbb
add
stc
pop
ljmp
add
mov
les
rclb
movsb
jo
in
mov
call
outsb
mov
in
and
cmc
repz
jnp
leave
jmp
cltd
aad
jno
test
inc
dec
aaa
pop
ds
dec
call
add
push
cs
repz
add
insb
or
jg
mov
pop
jns
and
imul
xchg
repnz
inc
pop
jmp
popa
inc
add
repz
jp
inc
movb
jg
pop
xor
cmp
xchg
mov
cmp
bound
data16
jno
mov
gs
jl
push
test
mov
push
test
pop
stos
mov
xchg
sti
adc
mov
add
mov
add
test
mov
pop
in
imul
cwtl
and
in
orb
dec
sub
pop
push
sub
daa
jo
bound
mov
ds
xchg
mov
js
add
add
test
add
xchg
movsb
mov
inc
sar
call
and
repnz
cwtl
mov
or
fsubl
mov
ja
out
add
lods
mov
ja
jmp
push
jecxz
aad
shll
push
mov
in
fs
mov
lea
cmp
add
cmp
cli
mov
add
lea
repnz
cltd
ficompl
stc
pop
cmpsb
repnz
insb
aas
lret
push
aad
dec
cmp
cmp
add
mov
mov
and
xchg
fbstp
dec
in
out
movsb
fnstcw
mov
leave
shll
jno
mov
mov
jns
or
xchg
mov
add
mov
sub
or
jle
std
or
sbb
add
sbb
loop
scas
repz
in
mov
ss
ror
add
cli
fmull
jo
roll
mov
jmp
cmc
cwtl
add
or
leave
shll
clc
aad
into
jecxz
mov
filds
xor
scas
mov
sub
or
add
mov
jbe
out
add
mov
cwtl
push
mov
int3
xchg
mov
repz
or
mov
lds
add
inc
mov
push
ss
push
sub
jno
and
dec
aas
divw
fnstenv
sub
ret
push
movsl
xor
loopne
stc
push
ficoms
cmc
inc
jmp
imul
cli
dec
stos
repz
xchg
jp
addl
adc
mov
cs
lds
push
outsl
mov
inc
xor
xchg
jmp
fcmovnb
push
add
inc
add
add
add
cmc
add
jne
mov
jae
rclb
cmp
mov
mov
gs
push
imul
adc
movsb
icebp
push
xchg
jmp
or
idiv
cld
mov
hlt
sti
xchg
imul
push
repz
test
jnp
add
sub
inc
mov
popl
xor
inc
jo
mov
out
add
outsl
movsl
outsb
jo
movsl
push
pop
mov
xchg
push
roll
mov
jno
or
mov
jo
add
sbb
add
fadd
inc
int
enter
dec
mov
pop
inc
rolb
fstp
xchg
int
add
add
mov
fadd
xchg
sub
les
pusha
mov
nop
insb
pop
bound
pop
cmp
out
mov
xor
aaa
getsec
mov
dec
and
mov
pop
adc
mov
hlt
adc
and
daa
arpl
int
popa
sbb
ss
add
repz
in
xchg
fsubr
in
lahf
loop
loope
loopne
add
add
add
lea
mov
lcall
jnp
mov
xchg
xchg
cmp
push
add
xor
roll
dec
int
sbb
shll
and
jb
pop
mov
push
and
jl
dec
lods
pop
xor
pop
cmp
data16
lods
inc
sub
pop
lock
mov
lds
add
add
cmp
stos
mov
jmp
stc
jb
sbb
popa
dec
repnz
add
dec
rolb
mov
cs
add
dec
cltd
inc
sbb
enter
stos
push
jmp
push
adc
cmp
inc
aad
movsb
cmp
or
or
add
and
adc
inc
xor
mov
fmulp
loopne
add
add
into
lret
outsb
out
shlb
jmp
popa
lods
int3
ret
scas
testb
packuswb
mov
dec
dec
lods
pusha
pop
push
mov
pop
dec
dec
movsl
cmp
jmp
adc
adc
hlt
add
cmp
add
pop
ss
jno
jb,pn
jb
jmp
push
jg
das
dec
dec
fwait
imul
add
mov
mov
mov
adc
fxch
adc
ljmp
and
out
addr16
xor
add
mov
push
mov
or
add
lret
push
clc
sub
jecxz
or
add
inc
das
fnstcw
push
add
mov
adc
cmp
add
mov
cmp
inc
push
inc
filds
add
add
data16
cmp
lahf
jbe
push
mov
repz
pop
jne
addr16
push
sub
ret
jno
inc
mov
push
push
int3
inc
adc
pop
jae
repz
pop
loop
call
inc
mov
cmp
aas
call
pop
dec
adc
repz
cmc
mov
add
loopne
add
add
add
call
mov
int3
mov
mov
les
out
mov
mov
xlat
pop
imul
add
pop
arpl
mov
add
mov
cmp
mov
add
mov
sbb
mov
add
ss
scas
inc
inc
push
ljmp
add
add
push
mov
inc
fsts
xchg
jmp
in
adc
fnsave
mov
inc
xchg
mov
add
xor
ds
iret
xor
ficoms
outsl
add
or
xor
and
cmp
aas
or
xor
aas
or
xor
out
and
call
testl
add
xchg
mov
lea
scas
mov
ret
out
insb
add
sub
dec
ja
dec
sub
insl
cld
repnz
in
mov
mov
out
mov
add
add
repz
fstpt
add
dec
add
cli
stc
xchg
fucom
mov
add
fldcw
sub
mov
sub
mov
mov
outsb
pop
cli
cmc
jg
mov
std
or
add
or
fcmovnb
loope
int3
rcl
mov
loope
fidivrl
fnstsw
cli
sub
lock
push
jecxz
fldenv
mov
adc
cld
addr16
push
or
add
add
sub
pmullw
xor
cmp
pop
cmp
cmp
mov
push
jne
xor
mov
cmp
cmp
ds
inc
jb
orl
lcall
jns
jns
je
jns
repnz
aas
leave
sub
daa
enter
sarl
aas
inc
enter
int3
cmp
add
cmp
sub
das
or
adc
and
sbb
adc
sub
movsl
repz
mov
insb
data16
mov
imul
arpl
sahf
outsb
adc
mov
sub
lods
popa
inc
shll
daa
nop
xchg
or
mov
lds
dec
ds
pop
movsb
repz
js
lock
mov
sbb
ds
or
jmp
xchg
dec
xchg
add
push
xor
sbb
lret
cs
xchg
push
mov
daa
cmpsl
outsb
sub
inc
cli
das
mov
add
nop
lock
mov
ljmp
dec
lock
xchg
mov
mov
mov
xchg
cmpsl
mov
mov
push
stc
mov
mov
add
mov
push
add
jns
mov
loop
mov
add
movsb
cltd
mov
add
push
fcmovnbe
xlat
mov
or
add
adc
imul
add
mov
jmp
xchg
mul
jnp
loop
jbe
add
daa
pop
sub
gs
fnstenv
jns
in
mov
fwait
adc
add
mov
outsl
xchg
sbb
push
cltd
add
add
mov
iret
jecxz
or
ror
cs
stos
lret
sub
filds
or
cs
clc
sbb
mov
out
bnd
add
mov
xor
pop
push
xor
imul
popa
mov
mov
pop
pop
add
pop
outsl
outsb
repnz
jge
pushl
dec
repnz
dec
data16
push
xlat
dec
je
es
dec
pop
pop
subb
jns
push
push
jnp
jle
repz
pop
mov
ror
xchg
jbe
jae
orl
je
dec
jbe
add
sub
lock
cmp
outsl
cmp
add
nop
jno
cld
sahf
pusha
push
imul
pop
cs
jle
sub
bound
pop
push
and
outsl
cmp
pushf
imul
mov
jecxz
icebp
add
hlt
adc
sub
pop
ds
mov
and
xor
dec
add
mov
lret
cs
mov
pop
lods
mov
add
repnz
pop
cltd
sahf
pop
xchg
into
mov
vpslld
int
inc
stos
nop
mov
pushf
inc
stos
inc
add
push
jl
xorb
sub
and
call
push
insb
ret
ss
jecxz
je
es
push
push
pop
push
sbb
cmp
adc
mov
inc
push
lock
and
inc
dec
mov
decl
sub
pushf
fs
add
adc
and
mov
sub
je
and
mov
lret
lahf
enter
xlat
iret
roll
nop
xlat
push
mov
enter
mov
pop
call
push
mov
popa
push
push
in
and
psrad
or
bound
daa
out
fs
in
inc
and
call
jns
aam
add
add
mov
xor
sub
ret
jno
or
dec
test
cmc
stos
push
cmpsb
and
arpl
push
push
sbb
in
mov
push
cmp
xor
dec
push
movl
mov
mov
out
mov
jbe
loope
jbe
in
mov
add
jmp
pop
mov
xchg
pop
mov
mov
int3
or
fisubrs
outsl
push
jmp
call
out
loopne
iret
imul
movl
jb
add
cmp
daa
mov
call
inc
fsubrs
outsl
sub
cwtl
repz
or
mov
add
add
arpl
mov
add
cwtl
pop
lock
inc
mov
imul
rcrb
repnz
add
imul
add
xchg
daa
lock
push
inc
push
aas
int3
xchg
jle
std
lcall
imull
inc
xor
cmp
pop
fcmovnu
sbb
add
add
in
mov
sbb
mov
add
inc
out
std
xor
cltd
cwtl
cltd
mov
into
loopne
insl
lahf
xorb
add
jnp
jo
jl
data16
jbe
add
sub
popf
add
lock
addr16
jo
jnp
sub
xor
add
dec
in
in
jmp
add
add
notl
ljmp
mov
xchg
fwait
jb
xchg
adcl
xchg
mov
push
xchg
adc
addr16
divl
xor
pop
shrl
sbb
xor
push
fbld
sbb
add
mov
lcall
dec
ret
pop
xor
sbb
add
add
pop
aam
pusha
hlt
xchg
neg
sub
aad
mov
stc
or
mov
add
mov
testb
daa
hlt
setbe
mov
lret
and
lcall
or
add
push
insb
inc
fldenv
sub
into
xor
es
test
daa
aaa
sub
jge
sbb
cmp
add
add
sub
add
outsl
or
push
insb
add
popf
sbb
push
lret
add
incl
jns
jge
cmp
sahf
cmp
push
jge
sub
jle
insb
jae
sbb
jae
and
pop
cmp
jge
pop
push
inc
xchg
dec
or
dec
jg
fwait
mov
add
push
testl
push
sub
ds
orl
pop
hlt
sbb
pop
mov
push
les
inc
shll
mov
add
call
popa
and
outsl
stc
aaa
adc
xchg
int
shlb
repz
popa
mov
mov
add
fsubrs
add
push
mov
mov
pop
call
mov
mov
ljmp
test
cmpl
mov
dec
out
leave
mov
pop
add
hlt
jg
lock
testl
addr16
add
out
xchg
mov
add
popf
pop
test
add
ret
fsubl
hlt
add
mov
hlt
add
rcrb
imul
push
jne
testl
sbb
inc
fstpt
inc
out
in
sti
or
sbb
xchg
and
cmp
fcmovbe
xor
mov
add
mov
mov
jge
pop
scas
fs
add
mov
sub
dec
call
add
sbb
xor
outsl
test
push
sbb
mov
out
in
mov
add
repz
add
call
jmp
mov
ljmp
lock
jne
out
sub
hlt
out
pop
push
lods
mov
sub
cld
aas
addr16
add
sbb
scas
addb
add
dec
xchg
scas
xor
in
push
inc
mov
push
dec
mov
das
push
xor
sbb
inc
jbe
and
cwtl
sbb
pop
xchg
sbb
bound
inc
jnp
insl
add
pusha
fdivs
mov
repz
mov
mov
pop
cs
in
clc
push
repz
mov
add
add
repz
dec
rcrl
jmp
into
and
sub
aaa
add
outsl
xchg
push
hlt
mov
mov
add
repnz
push
in
mov
add
mov
add
mov
mov
mov
fidivl
add
jbe
aas
add
inc
add
aas
add
cmovno
push
cmpsl
aas
add
movsb
aas
add
lods
aas
add
aas
add
aas
add
lock
jecxz
add
mov
add
mov
call
movsb
aas
add
scas
aas
add
lods
aas
add
lods
aas
add
lock
inc
lock
pop
lock
sub
lock
inc
lock
inc
lock
sbb
js
xor
add
cltd
testl
add
bound
inc
mov
inc
mov
mov
jne
lods
divb
mov
push
jae
push
arpl
pop
jb
mov
push
jae
and
es
imul
sub
inc
xor
popa
sbb
pop
push
inc
dec
fidivrs
inc
push
mov
imul
add
add
mov
pop
arpl
sbb
add
push
addr16
repz
movsl
nop
and
test
xchg
insl
mov
repz
xchg
mov
sub
imul
es
push
nop
xor
xchg
or
pop
cmpsb
repz
xchg
aam
mov
xchg
call
pop
mov
loope
add
add
cltd
or
repz
movsl
sahf
pop
jecxz
mov
push
aad
cmpsb
push
stos
ret
add
nop
mov
repz
cmpb
push
push
lods
mov
aad
sti
gs
adc
xor
or
and
imul
cs
stos
mov
or
adc
add
add
repz
stos
mov
lea
addr16
and
imul
scas
shrl
in
push
and
jae
or
cmp
in
shlb
adc
or
jecxz
repz
mov
add
sarb
add
sub
insb
fdivrl
add
mov
add
jae
push
push
sub
add
add
add
push
add
add
add
inc
add
add
iret
add
inc
add
inc
add
inc
add
or
insl
or
mov
inc
add
fnstsw
add
or
inc
add
add
cmc
inc
add
cmc
inc
add
dec
inc
inc
rolb
dec
push
dec
dec
mov
pop
push
push
loop
pop
popa
test
push
imul
int
jne
leave
jl
orb
xor
adc
sub
sbb
add
pop
jo
push
pop
je
inc
add
data16
and
out
sub
insl
pop
inc
inc
dec
dec
inc
inc
inc
inc
dec
dec
inc
push
dec
dec
cmp
add
add
pusha
push
push
aad
lret
daa
scas
iret
ret
daa
shrb
pop
ljmp
fs
subl
test
add
repz
repz
repz
repz
xchg
mov
dec
jo
xchg
or
add
hlt
pop
add
repz
repz
add
or
repz
add
add
add
repz
add
repz
push
repz
repz
add
repz
mov
add
mov
test
xchg
add
repz
mov
add
mov
add
lods
add
xchg
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
mov
add
lock
ja
shl
push
add
pop
add
insl
add
add
and
icebp
add
stc
inc
inc
add
ja
add
ja
add
inc
add
inc
add
add
add
inc
add
jge
add
jge
add
jge
add
inc
add
fildl
popf
fiaddl
test
inc
add
lock
lods
roll
roll
inc
add
roll
leave
inc
add
sub
dec
ss
jb
dec
jne
mov
popa
out
imul
je
lret
sbb
add
outsl
arpl
push
out
pop
add
outsl
arpl
jae
mov
mov
jae
in
push
lahf
mov
jns
mov
outsl
js
popa
je
lds
js
arpl
jmp
jo
aaa
jmp
jbe
imul
je
or
mov
pusha
jb
repz
bound
scas
lret
addr16
mov
add
lods
les
xchg
rorl
xchg
ret
addr16
repz
repz
add
repz
iret
repz
repz
jp
mov
lea
mov
mov
push
add
repz
add
repz
add
repz
add
repz
repz
repz
repz
add
repz
repz
pop
repz
repz
repz
repz
add
mov
std
mov
add
mov
add
mov
add
mov
add
mov
xchg
xchg
add
mov
add
mov
pop
call
dec
xor
dec
xor
push
mov
inc
lcall
add
jne
jne
bound
lcall
mov
add
pop
xchg
movsb
shlb
shll
je
gs
mov
popa
outsl
xchg
add
addr16
add
ja
add
lods
inc
gs
xchg
inc
outsl
mov
arpl
cwtl
je
jae
add
jbe
jbe
arpl
add
sub
je
or
insl
jb
xchg
je
adc
inc
jns
xchg
outsb
fs
inc
js
cmc
add
pusha
mov
arpl
mov
je
push
cltd
inc
jns
xchg
outsb
fs
add
pushf
imull
mull
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
sbb
or
jbe
mov
sbb
inc
mov
sbb
inc
mov
add
push
add
mov
add
imul
cmp
movb
jecxz
add
ljmp
mov
jle
mov
sbb
inc
mov
ljmp
repz
repz
repz
mov
or
repz
movsl
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
xrelease
in
out
mov
mov
add
xrelease
repz
add
repz
add
repz
add
repz
repz
mov
repz
ret
add
mov
inc
mov
add
xchg
add
inc
mov
fstps
ret
mov
add
inc
mov
jmp
divl
iret
loope
add
mov
add
mov
add
mov
mov
mov
push
stos
mov
inc
lods
mov
add
repz
add
add
add
mov
add
mov
inc
inc
mov
icebp
add
mov
push
dec
xchg
mov
add
fwait
add
cmpsb
mov
dec
jo
add
nop
lods
aas
push
pusha
mov
dec
push
jecxz
push
inc
jmp
add
shll
dec
inc
jae
add
cs
inc
arpl
add
push
mov
add
das
icebp
add
das
mov
dec
arpl
add
lock
pop
xor
add
pop
cmpsl
aas
inc
out
add
pop
cmpsl
push
dec
insb
mov
add
xlat
inc
push
mov
push
push
mov
inc
inc
dec
or
add
mov
pop
outsb
fs
arpl
pop
add
repz
sub
pop
outsl
xor
add
mov
popa
outsb
push
das
pusha
je
outsb
in
ds
add
cmp
clc
jmp
jmp
jne
add
imul
imul
mov
gs
repz
addr16
dec
pusha
movsl
orb
cmp
repz
repz
add
repz
repz
add
repz
add
repz
mov
mov
add
repz
mov
in
jle
out
mov
pop
call
repz
mov
iret
add
repz
repz
push
mov
testb
out
cmp
xrelease
jecxz
test
out
xchg
add
add
repz
lods
xchg
je
xchg
add
leave
lods
aas
dec
mov
add
add
add
dec
lods
inc
dec
jae
push
aas
jae
add
dec
lods
inc
add
jg
push
pop
repz
mov
mov
mov
add
inc
repz
push
repz
push
repz
push
repz
mov
repz
mov
addl
popf
fcomi
add
fcomi
add
mov
add
xor
add
and
add
sub
pop
and
cld
pop
or
cld
pop
or
jnp
add
xchg
jno
mov
add
mov
iret
add
repz
add
repz
add
jecxz
add
mov
push
andb
add
repnz
add
sub
pop
daa
or
mov
int
pxor
pushl
cmp
push
mov
push
or
or
lods
out
sub
arpl
std
jne
adc
bswap
incb
fldenv
push
pop
out
je
or
sbb
mov
je
sub
loopne
lret
jl
jns
bound
inc
add
call
ja
test
cmp
push
or
je
fcoml
aaa
sbb
mov
jnp
push
cli
mov
dec
add
push
cmp
dec
push
lret
mov
dec
ret
pop
repz
out
jp
fbld
lcall
in
mov
clc
jl
mov
clc
cld
stos
test
adc
jns
adc
jbe
sbb
add
add
add
fldl
inc
into
xchg
xor
add
xchg
andb
insb
ret
sbb
push
xor
scas
push
js
push
repz
xor
popa
adc
cld
aas
xchg
jecxz
inc
add
idiv
push
fnstenv
int3
scas
clc
mov
xlat
mov
push
pushf
adc
pop
mov
push
add
add
push
out
add
and
adc
movb
imul
mov
sti
push
cmp
adc
xchg
xchg
mov
add
out
sub
jg
push
push
lcall
cmp
jb
imul
mov
enter
scas
add
ja
adc
add
add
repz
in
sub
mov
test
js
cmp
test
mov
add
pop
hlt
addr16
xchg
jns
inc
pusha
xor
cmp
xchg
shlb
xchg
inc
push
xchg
sahf
push
sbb
sub
jae
mov
enter
cmp
xor
fwait
je
clc
mov
or
hlt
cmpsb
fstps
dec
aas
adc
mov
inc
cld
or
adc
iret
push
je
adc
cmp
out
jo
cli
or
or
adc
out
or
pop
dec
dec
pop
popa
push
movl
dec
or
jbe
roll
inc
add
dec
inc
add
std
mov
movl
add
add
add
add
sbb
aas
mov
mov
mov
jmp
inc
cmovp
mov
push
fisubs
inc
mov
bswap
repz
mov
mov
sub
add
push
pop
bswap
repz
and
mov
mov
jmp
push
sbb
lret
inc
es
mov
sub
test
dec
repz
scas
out
adc
orl
dec
repz
subl
daa
add
bound
js
add
cmovb
call
xchg
mov
repz
test
dec
xlat
inc
jmp
mov
lahf
in
xor
dec
sub
inc
jmp
mov
lahf
loope
xor
dec
mov
inc
jmp
xchg
lahf
cmp
fadds
es
adc
mov
lahf
movsl
jp
add
fadds
out
xchg
adc
xchg
lahf
add
push
in
mov
sbb
ds
adc
inc
arpl
add
and
mov
mov
add
mov
repz
mov
mov
shlb
adc
mov
add
adc
in
repz
add
lock
add
adc
out
jecxz
pop
adc
or
in
adc
cmp
movsb
repz
add
jle
add
add
pop
adc
jge
out
fisubl
fidivrl
inc
add
inc
push
inc
mov
out
fisubl
fiaddl
inc
add
mov
and
fisubl
cli
clc
inc
add
loop
inc
mov
mov
mov
sub
push
inc
mov
in
fisubl
add
add
add
hlt
mov
dec
repz
in
xor
mov
jmp
xchg
pop
cmovp
dec
add
xor
mov
sub
inc
inc
mov
mov
add
inc
mov
dec
inc
sub
add
add
xor
mov
xor
repz
add
add
lcall
repz
mov
xor
dec
cmc
enter
xor
dec
sub
inc
mov
add
xchg
sbb
xor
sahf
iret
push
fldenv
dec
repz
dec
or
inc
jmp
push
xor
push
jmp
in
xchg
roll
mov
inc
add
std
inc
jecxz
test
in
sbb
cld
icebp
aad
jmp
shlb
inc
jmp
lret
aam
inc
jmp
lret
inc
xchg
mov
stos
ret
jp
cmp
addb
pop
or
push
sti
xor
and
xor
test
dec
cmp
xchg
call
mov
jge
je
jne
or
inc
and
cmpsl
shll
add
jne
rcll
xorl
test
into
daa
add
idiv
es
std
adc
call
incl
push
mov
sub
xor
fstl
repz
mov
mov
cmp
inc
xor
out
dec
push
xor
in
repz
add
mov
fsts
dec
fsubr
adc
pop
aad
inc
in
add
dec
in
push
loop
mov
add
add
pushf
pop
call
cltd
sbb
mov
adc
leave
enter
add
jmp
or
fcmovnu
shlb
lahf
fdivp
aas
mov
inc
add
sbb
pop
mov
outsb
incl
orl
mov
nop
inc
ss
je
adc
add
mov
repz
mov
hlt
sti
test
call
xor
repnz
sbb
pop
jmp
divl
sub
mov
adc
rep
les
icebp
pop
add
pand
jns
cmp
fistpll
xor
inc
insl
inc
jb
ret
in
sbb
popf
repz
xchg
mov
jle
ffreep
inc
mov
add
les
popa
push
and
add
pop
push
mov
sub
push
outsb
inc
jmp
bound
jle
mov
xchg
pop
sbb
add
je
stos
and
inc
jmp
paddsb
stos
xor
push
aas
leave
xor
mov
sub
and
push
bound
add
add
repz
jmp
dec
notb
cmpsb
sbb
jmp
sub
sbb
add
and
cld
repz
in
dec
mov
std
adc
pop
scas
jno
dec
testl
mov
scas
jno
inc
std
push
cltd
lret
cs
je
shll
std
add
mov
and
push
push
inc
mov
testb
cld
test
je
dec
xor
ds
pop
inc
arpl
or
cmp
inc
xor
add
xchg
or
mov
mov
aam
push
mov
lcall
faddl
add
xorb
push
sar
pop
cltd
sbb
test
inc
sub
pop
in
push
adc
nop
inc
out
fidivs
out
mov
ljmp
call
mov
pop
push
fldl2e
mov
or
push
mov
adc
imul
fidivs
stc
dec
lret
call
or
push
jmp
sbb
cmp
imul
inc
add
dec
add
lds
add
add
lods
testl
iret
adc
call
aam
sub
add
mov
add
jl
xorl
repz
mov
xor
mov
ret
outsl
movsb
add
repz
adc
aam
mov
xor
xor
mov
fbstp
push
shll
sub
push
xchg
outsl
xchg
jmp
xchg
jmp
mov
cmp
fs
pop
add
jmp
movsl
mov
jp
cs
ds
call
add
testl
repnz
pop
add
mov
aaa
mov
cmp
jle
or
les
repz
test
mov
aam
std
cld
pop
testl
xor
std
sbb
repz
insb
cmp
inc
in
sub
jno
mov
jne
lret
adc
loopne
add
jl
lock
mov
inc
add
jbe
sbb
xor
test
inc
add
mov
jno
mov
add
add
lock
and
in
ds
push
jns
std
jne
leave
je
cld
inc
or
leave
adc
jno
add
mov
add
cltd
sbb
ret
xor
mov
add
push
cmp
std
jg
jg
icebp
aas
mov
sti
add
fimull
je
dec
dec
fcompl
add
insb
fnsave
xchg
jle
cmp
pop
dec
mov
in
or
lret
mov
jno
xor
mov
jmp
outsl
gs
pop
hlt
insb
outsb
in
xor
xchg
cmpsb
inc
mov
or
push
in
ret
jl
dec
add
out
fcmovb
jbe
cs
xor
add
add
repz
and
push
fidivrl
das
loopne
ss
sub
mov
push
xchg
jo
pop
fsts
insb
jg
out
movsb
lret
cmpsb
dec
cmpb
xchg
fidivrs
hlt
out
ljmp
xlat
test
add
out
mov
push
call
std
push
outsb
fstl
mov
push
in
mov
call
pop
in
mov
mov
adc
push
and
mov
mov
lds
fs
je
dec
repz
or
jbe
push
out
std
sbb
in
scas
insb
cmpsl
inc
jmp
scas
repnz
mov
or
push
lret
imull
loopne
negl
rorb
out
jb
jmp
es
xor
loop
push
push
test
cmp
mov
and
test
pop
mov
push
add
and
add
mov
lcallw
testb
mov
std
push
push
testl
lea
mov
add
icebp
int3
add
ss
aad
push
jecxz
jmp
push
fldl
cmp
mov
int3
jmp
mov
in
andb
in
or
add
mov
inc
in
mov
inc
hlt
pop
mov
leave
mov
inc
mov
adc
ja
aas
pop
cmp
push
inc
jg
mov
incl
add
add
int3
jne
sbb
xchg
add
in
rcll
int3
cmpb
sti
aad
xchg
mov
add
mov
movsl
addr16
data16
add
xchg
push
aam
xchg
jb
add
pop
imul
lock
out
dec
pop
popa
decb
push
add
insb
call
jmp
add
add
pop
ljmp
das
sbb
faddl
out
shl
mov
push
aam
out
cmc
int3
jmp
add
mov
iret
ss
pop
loope
sub
stc
pop
inc
mov
and
incb
dec
or
scas
xchg
adc
dec
ds
cli
rolb
aaa
icebp
out
add
add
loopne
mov
add
adc
pop
cmp
mov
fsubrp
xchg
loopne
insl
dec
addr16
bound
push
adc
lcall
add
push
add
add
mov
in
loopne
cltd
lcall
gs
arpl
out
ja
into
mov
dec
add
add
fcmovnbe
je
lods
outsb
mov
add
data16
add
pop
repz
cli
add
hlt
mov
insb
inc
call
xor
push
insb
add
icebp
xor
pop
mov
arpl
mov
mov
enter
mov
adc
je
int3
insb
notl
test
addr16
dec
sub
sbb
dec
je
sub
into
movb
add
xlat
call
or
loopne
inc
out
add
mov
je
les
mov
add
cmp
add
add
jo
add
mov
popaw
dec
lock
xor
iret
and
add
mov
add
push
xchg
dec
jle
xor
sub
fldl
in
push
or
std
jg
loopne
invd
pop
sar
std
pusha
dec
fmull
or
or
aam
cmp
out
xchg
out
or
push
mov
out
enter
mov
out
mov
ja
push
sub
xchg
out
add
add
or
add
repz
stos
roll
shrb
adc
mov
jb
xchg
push
xchg
xchg
repnz
sub
out
add
repz
mov
xchg
mov
pop
adc
adc
xor
aaa
xor
cmc
push
add
int
mov
sub
pop
sar
call
inc
jnp
call
lock
arpl
fidivrl
repz
add
add
fcoml
inc
je
add
cmp
jmp
lea
rcll
mov
push
in
std
jle
fdivs
hlt
call
scas
jno
call
push
repnz
push
and
mov
lods
xor
add
out
add
mov
cmp
cmp
pop
add
jecxz
xchg
add
add
and
add
add
outsb
sar
std
repnz
out
add
lahf
out
add
aaa
add
jb
add
cs
std
lds
std
push
in
xor
rcl
mov
mov
jno
setg
pushl
pop
inc
or
mov
xor
testl
test
mov
add
mov
add
cmp
mov
shlb
mov
mov
mov
lret
fidivrl
mov
mov
int3
add
lret
adc
je
gs
add
mov
add
or
je
push
dec
in
lea
add
push
inc
into
push
xor
cmp
add
add
cld
repnz
mov
into
add
adc
add
out
lea
cltd
es
jl
gs
out
add
lods
dec
aam
jo
int
int
fmul
dec
mov
ljmp
es
pop
jp
sub
adc
xor
push
lods
repz
scas
jae
into
jne
into
addb
add
out
arpl
pop
jle
add
mov
jb
mov
daa
push
subb
ficompl
mov
add
daa
add
dec
add
sti
leave
repz
movsb
inc
outsb
inc
adc
repz
jae
call
out
xor
add
sahf
cmp
lret
aas
mov
jg
clc
jb
add
cmpsl
je
jmp
mov
fdivr
jmp
in
add
in
jno
call
cld
dec
add
or
add
pop
xchg
add
and
mov
test
stc
mov
pop
mov
jo
je
pop
inc
or
jno
or
push
call
lahf
cmovo
jo
jne
pop
inc
jo
add
add
icebp
test
inc
das
mov
jb
push
aam
sbb
cmpb
push
xor
push
in
loopne
push
arpl
add
imul
pop
xor
je
test
clc
clc
sub
add
jae
xchg
jmp
pop
jne
fdivs
js
mov
js
addb
orl
adc
mov
add
add
out
mov
add
inc
add
dec
mov
inc
sub
mov
push
add
mov
mov
cmp
rol
and
push
cmp
jne
popa
xchg
mov
enter
or
push
mov
fsts
jg
int3
add
add
repz
push
cmpb
sub
ss
mov
pop
sbb
sub
repz
push
cmp
out
mov
and
test
jae
imull
dec
sbb
mov
out
repnz
jp
hlt
out
xor
add
xor
sbb
gs
scas
xor
pop
orl
add
add
repz
jbe
add
jmp
mov
xchg
mov
add
xor
or
aam
push
adc
mov
repz
mov
mov
pop
int
dec
repz
repnz
cltd
aam
or
jmp
lcall
call
mov
xchg
repnz
ret
and
push
repz
sbb
xchg
call
lock
add
mov
gs
add
add
pop
mov
and
jmp
inc
and
icebp
je
cld
mov
sbb
in
add
add
imul
adc
out
mov
enter
stos
inc
pop
mov
add
add
xor
ret
add
and
add
jecxz
pop
mov
add
call
cs
jo
popf
pop
mov
add
push
xor
in
cli
decl
adcb
sti
scas
add
adc
add
loope
lcall
push
andl
add
add
fildl
add
mov
fs
test
jbe
mov
xor
fdivrl
test
ret
movsb
insb
aas
mov
jge
aaa
rclb
or
add
or
push
add
repz
mov
mov
out
dec
cmp
movl
add
add
add
add
flds
je
sub
repz
dec
repz
fstpt
fcompl
push
or
lahf
add
repz
push
inc
sahf
js
es
out
repz
jns
gs
mov
psllw
cmpsl
add
jp
add
repz
testb
push
add
repz
sahf
mov
sub
mov
mov
add
jecxz
jmp
dec
sub
lret
ss
dec
adc
out
sahf
jo
and
jne
call
lret
push
hlt
xchg
adc
cli
push
jl
inc
mov
mov
mov
mov
sbb
insb
ss
inc
shlb
xor
push
out
adc
add
add
nop
and
xor
subl
mov
sub
jae
xchg
dec
adcl
mov
hlt
add
mov
add
loopne
mov
and
movsb
inc
mov
cmp
push
push
jle
lods
divl
mov
call
adc
cltd
adc
pop
std
mov
add
and
push
xor
testl
lock
je
and
sbbl
mov
xrelease
jae
mov
fsubl
inc
aas
fcoml
pop
cmc
mov
les
xchg
mov
xor
inc
dec
or
int3
call
clc
rorb
loopne
les
dec
sbb
add
add
in
mov
les
fwait
and
cmovle
adc
repz
or
loopne
inc
std
fcmovnu
aas
mov
add
loop
les
xchg
cltd
hlt
cmp
mov
xor
dec
repz
mov
ret
push
sub
out
adc
push
xchg
jb
rclb
fcoml
jbe
add
mov
jo
jle
sub
cmp
ret
or
in
mov
call
sub
xor
dec
hlt
add
into
mov
mov
xchg
add
cmp
pusha
icebp
push
fldt
dec
out
xchg
scas
addl
and
shlb
in
jp
icebp
loope
enter
sub
enter
push
jb
jo
sub
aaa
adc
frstpm(287
and
mov
repz
push
imul
mov
sub
call
iret
add
loope
mov
mov
mov
repz
arpl
inc
dec
mov
shll
mov
add
add
aaa
cmc
add
arpl
test
push
add
mov
movl
lock
adc
cs
xchg
outsb
in
sbb
add
out
jge
jmp
inc
enter
call
out
mov
inc
fadds
xor
es
and
push
call
lret
jp
add
jns
add
mov
cltd
xchg
testl
mov
test
or
fistl
cmp
mov
lods
sub
inc
mov
jp
call
mov
int
xor
lcall
rcr
add
xchg
add
mov
fcoml
les
add
lock
xchg
fildl
add
pop
pop
les
push
add
add
adc
add
or
loopne
or
fildl
add
jo
or
ret
fwait
xor
mov
pop
mov
cmp
stos
push
mov
add
mov
jmp
jge
sbb
mov
gs
lret
sbbl
add
add
add
add
repz
inc
mov
lods
pop
mov
add
adc
push
fistpl
dec
push
outsl
cmpsl
cmp
sub
repz
addl
mov
outsl
jle
lret
xchg
lret
jnp
call
xchg
addr16
push
jb
jne
mov
js
orl
jl
stc
or
rcr
repz
comiss
and
push
add
mov
mov
mov
add
mov
add
mov
sti
mov
mov
jmp
fs
cli
xchg
add
test
xchg
out
xor
sbb
cmc
mov
shll
js
xchg
mov
loope
add
jle
clc
mov
add
add
add
repz
mov
xchg
mov
add
cmp
mov
or
mov
and
rcr
fwait
add
sbb
lea
mov
mov
jo
je
scas
inc
pushl
je
sub
rclb
out
jmp
call
out
add
jnp
or
add
add
repnz
push
and
add
push
sbb
add
xchg
mov
cmp
add
mov
mov
repnz
jle
aad
dec
clc
or
aaa
lds
addb
andb
add
xchg
dec
add
popf
mov
push
les
add
je
push
inc
or
add
add
jnp
insl
inc
inc
inc
dec
rcll
xchg
add
stos
inc
add
hlt
aas
shl
or
jmp
mov
mov
mov
lcall
bound
dec
rep
aaa
scas
sub
sub
mov
js
out
repz
pop
adc
add
add
add
pop
jmp
loopne
repz
add
out
push
add
add
repz
mov
mov
hlt
mov
je
cmpsb
sub
imul
mov
mov
repz
xor
out
xlat
dec
repz
adc
and
es
in
mov
mov
cmp
sarl
push
xor
xchg
pop
js
or
repz
lods
jne
call
pop
push
add
mov
mov
inc
jns
call
mov
add
add
xor
fucomi
add
mov
push
pushl
andl
add
add
icebp
mov
mov
data16
and
or
repz
and
lock
sbb
xchg
jg
decl
stc
call
test
add
mov
xchg
inc
mov
jne
sub
add
daa
jmp
test
adc
mov
xchg
add
add
ljmp
lea
ljmp
mov
inc
add
and
add
cmp
aaa
mov
add
lret
xchg
push
loop
mov
in
inc
and
repnz
mov
lods
mov
mov
add
or
movsl
jge
mov
add
mov
int3
je
loope
jae
add
add
jle
jno
mov
pushf
or
adc
or
dec
in
adc
adc
inc
int3
adc
hlt
out
xchg
mov
orb
idivb
hlt
out
cmp
mov
in
dec
in
mov
mov
or
mov
stos
filds
add
add
jae
sbbl
mov
out
pop
mov
les
ret
js
mov
ret
or
jmp
cmp
outsb
test
repz
adcb
sbb
std
jmp
rorl
xchg
jnp
mulb
insl
jbe
add
mov
xchg
sub
xorb
clc
push
add
push
test
mov
dec
je
push
stc
jmp
int3
rclb
rolb
gs
roll
jmp
mov
test
mov
and
jae
push
mov
cmc
mov
out
jno
fsubs
cmc
cld
mov
arpl
testb
xstore-rng
cmpsl
pop
incl
add
add
add
xor
xchg
shlb
mov
test
push
dec
out
lcall
mov
jmp
mov
imul
adc
mov
mov
lds
lret
dec
lret
sahf
int3
add
mov
push
and
add
add
push
fisubrs
push
and
fdivrp
mov
lcall
inc
and
bound
cmp
stos
push
cmp
andl
and
and
and
mov
push
pop
push
push
sahf
pop
leave
data16
cmp
mov
cmp
inc
inc
out
add
mov
mov
ficompl
xor
xchg
mov
lret
jmp
cmpl
lods
out
jle
or
mov
div
inc
cmp
push
jno
or
cs
fildll
lds
nop
int
hlt
out
inc
mov
mov
jae
mov
mov
mov
sub
test
pop
imul
test
call
clc
enter
mov
out
sahf
arpl
inc
mov
mov
clc
enter
mov
add
jge
pop
mov
mov
and
call
or
or
insb
pop
or
or
je
repz
mov
jbe
sub
ficoms
jb
and
ja
fimuls
push
add
jb
rcr
add
inc
xchg
lret
ret
xrelease
mov
jmp
xor
inc
mov
adcb
add
xchg
add
xor
sbb
mov
jmp
mov
in
add
xor
sub
xor
push
jb
and
sub
loopne
add
add
lock
xor
call
xor
sub
rorl
cld
xor
shll
and
lock
and
jnp
add
adc
les
ret
addr16
add
lock
add
pop
or
ds
mov
lds
and
pop
sbb
or
dec
mov
test
xlat
movl
jge
and
mov
adc
scas
adc
inc
mov
and
or
dec
ret
filds
andb
sub
enter
jl
je
test
or
sub
add
lret
adc
repz
pop
imul
add
add
add
mov
mov
add
repz
inc
jg
mov
add
cwtl
out
mov
call
sbb
daa
add
cmp
test
sbb
sbb
jns
nop
aad
hlt
out
or
call
cwtl
push
mov
or
push
ljmp
cmp
outsb
add
cmp
add
cmp
lds
dec
aas
mov
ds
jmp
or
jle
push
das
or
sahf
mov
push
sbb
cmp
shlb
shll
ds
leave
and
cld
sbb
inc
jmp
jg
add
add
ret
sbb
xor
jmp
push
enter
or
or
add
jecxz
mov
and
jb
and
mov
mov
push
push
pop
and
cmc
call
mov
rorl
in
mov
add
imulb
in
xor
out
std
adc
ljmp
mov
pop
adc
jae
testb
je
pop
jmp
mov
es
add
pop
mov
mov
lds
xor
es
add
mov
inc
add
mov
mov
mov
mov
cmp
lret
add
pop
int
mov
leave
ja
jmp
dec
sub
mov
dec
cld
pop
mov
inc
add
ret
mov
add
mov
adc
mov
dec
testl
pop
mov
and
lret
push
mov
push
inc
aam
add
sbb
adc
add
fnstsw
push
fidivrl
xor
call
push
out
add
daa
aaa
mov
mov
sbbb
xor
add
add
add
inc
adc
clc
jnp
sub
lret
out
push
add
push
popf
jae
add
and
cmp
inc
cld
and
jb
adc
or
dec
and
aaa
mov
or
cmp
lods
cwtl
lret
mov
ret
ftst
jb
xchg
lret
inc
lds
loop
xchg
inc
in
leave
vmload
mov
fisttpll
aas
sub
xchg
mov
jmp
imul
loop
das
xchg
sbb
add
jmp
testl
iret
pop
sub
out
push
add
add
adc
and
and
xchg
rcll
out
test
lret
shll
call
mov
mov
mov
jmp
lea
roll
inc
adc
add
ret
mov
js
and
adcl
push
mov
mov
fildll
cld
ss
mov
sbb
cwtl
addr16
enter
mov
mov
and
shll
sbb
and
inc
iret
in
add
out
ljmp
add
call
hlt
and
fisubl
je
out
rol
std
jmp
aam
and
cmp
mov
pushf
ds
add
xor
add
ficompl
xchg
or
ja
imul
or
decl
js
cmpsb
mov
call
and
jle
mov
dec
ret
push
ds
dec
sub
mov
cmpl
mov
mov
ficompl
mov
and
mov
inc
mov
out
rorl
add
jbe
add
icebp
out
inc
outsl
lret
dec
mov
out
xchg
xor
fwait
push
cs
add
test
push
fistps
and
cmpsb
ljmp
inc
outsb
pushl
repz
aaa
repnz
mov
fistpll
fildll
fs
mov
aaa
inc
mov
rorb
or
cmpb
jle
xchg
fdivrl
jne
add
testb
mov
add
sub
xlat
inc
pop
insl
xlat
and
popf
es
vmovapd
dec
aaa
and
add
mov
mov
mov
repz
xlat
sbb
daa
add
mov
gs
aam
add
jmp
mov
test
les
int3
ret
mov
ss
mov
jl
cmp
inc
add
inc
and
test
add
stos
lcall
pop
icebp
repnz
mov
add
xor
inc
div
mov
inc
mov
add
or
xor
and
add
adc
mov
add
imul
mov
add
mov
adc
add
add
sbb
ljmp
je
or
inc
ljmp
push
iret
mov
add
arpl
js
loopne
cmpsb
ficompl
inc
in
jb
or
sbb
cmpsl
push
lahf
in
pop
adc
pop
and
add
cmp
dec
cltd
std
out
iret
pushl
js
inc
icebp
cmpsb
cmp
inc
lock
add
cmp
arpl
mov
js
stos
push
dec
jg
add
dec
into
add
fadds
mov
inc
cld
js
add
jno
repnz
into
scas
in
add
jnp
div
imull
inc
gs
cs
cmpsb
aas
xchg
imulb
dec
xchg
out
scas
push
mov
aas
ds
jg
sbbb
mov
or
sub
add
out
cmp
das
orb
aas
push
out
jns
jecxz
lea
addb
xor
jo
stos
lcall
movb
stos
mov
add
lds
add
jbe
inc
sarb
stos
std
mov
mov
test
mov
or
jecxz
jmp
in
stos
std
xchg
cmp
faddp
sbb
outsb
add
repz
mulb
pusha
movsb
xchg
push
push
aaa
in
inc
fwait
mov
repz
mov
repz
xchg
jae
cmp
out
mov
add
push
cs
jmp
inc
imul
les
push
test
add
add
mov
repnz
inc
jbe
add
cmpb
or
add
cmp
add
stos
std
jmp
mov
add
clc
add
inc
lret
cmc
add
and
add
hlt
dec
inc
cmp
cmp
xor
mov
push
test
testb
sbb
jne
sub
test
icebp
add
mov
test
add
add
hlt
test
dec
add
xchg
mov
add
mov
push
push
mov
cli
pop
in
and
push
pop
xchg
sbb
mov
stc
mov
ss
dec
dec
idivb
lcall
mov
test
mov
xchg
push
cmp
adc
xor
pop
dec
push
ret
cmp
add
movsl
outsl
jg
pop
adc
dec
inc
fwait
nop
push
or
mov
push
lods
aam
xchg
xor
xchg
movsb
jmp
add
out
cwtl
shll
call
jge
adc
pop
pop
cmpb
pop
xchg
js
add
sbb
daa
mov
sahf
mov
cmpsl
lret
jecxz
xchg
mov
sub
adc
lcall
add
mov
xor
add
push
in
mov
jnp
add
inc
add
loope
sbb
adc
insb
je
mov
push
sub
in
in
int
std
mov
xor
adc
pop
cmpsl
les
add
pop
sbb
or
js
jne
imul
fcomi
xchg
mov
inc
imul
xor
sbb
cmpsb
mov
mov
cld
clc
test
pop
jmp
in
mov
repz
movsb
repz
mov
test
ja
shrb
fldenv
cmp
andnps
les
jb
add
daa
mov
add
mov
xor
pop
mov
jle
arpl
xchg
js
lods
mov
jl
decl
dec
push
cld
stos
sub
jae
add
jnp
add
testb
pop
mov
pushl
std
adc
jbe
push
test
je
sub
mov
pop
mov
sahf
pop
mov
popf
incb
add
add
aas
aad
mov
rcrl
jmp
add
push
push
or
mov
or
lods
add
lcall
adc
xlat
xchg
ret
inc
pop
pushf
lods
pop
xchg
mov
sahf
je
jmp
sahf
andb
push
test
add
add
lods
cmpb
fwait
incb
add
add
sbb
inc
into
jp
cmpsl
int3
outsb
sti
popf
fsubrl
jo
jne
ds
adc
popf
mov
repz
ss
insb
mov
push
sahf
movsl
jle
add
inc
nop
sahf
test
out
jge
loopne
sahf
das
incb
outsb
cmpsl
or
mov
fistpl
cmp
add
add
add
outsl
dec
add
inc
pop
xchg
xchg
add
add
mov
jae
pop
jmp
decl
mov
pop
aad
sti
clc
mov
repz
in
or
jmp
push
test
adc
pop
test
add
outsl
je
jmp
stc
mov
std
mulb
xor
push
cmpsb
jmp
add
imul
jo
into
mulb
std
mov
mov
fimuls
add
mov
jmp
testb
xor
push
add
leave
pop
in
jne
jne
sub
xchg
push
jbe
xchg
std
xor
dec
call
mov
xchg
pop
testb
cmp
add
test
inc
in
jae
jmp
mov
push
and
add
or
sti
dec
pxor
dec
je
aaa
push
test
lock
mov
adc
aad
add
and
adc
sub
jge
mov
or
test
push
aas
lock
pushf
add
loop
add
mov
in
call
out
add
add
or
jge
mov
inc
lea
add
mov
xchg
mov
negl
pop
mov
cltd
jne
mov
or
mov
push
xor
mov
adc
dec
scas
xor
lahf
out
repnz
mov
ret
hlt
add
mov
fnstenv
dec
jmp
add
jns
push
int
cmp
ret
setns
clc
mov
hlt
out
mov
popf
mov
aas
lods
fdiv
out
add
xor
aaa
cmp
jno
ss
lea
pushf
cld
pushf
pop
add
lcall
cltd
jl
and
sahf
inc
mov
out
mov
out
loopne
das
and
add
add
outsb
adc
cvttps2pi
in
jns
cmp
movsl
std
cmp
icebp
stc
mov
add
pop
sti
pop
lock
hlt
sub
std
add
push
rorl
movsb
std
jmp
rep
push
jns
adc
push
outsl
sub
adc
cld
push
add
mov
cmpxchg
cmp
add
add
insb
inc
sbb
mov
push
stos
std
mul
inc
add
mov
shrb
adc
add
lock
mov
push
mov
lcall
jbe
jne
jns
sub
jl
push
js
aam
jecxz
ret
mov
in
call
adc
ja
in
cmp
test
negb
test
jl
decl
mov
mov
mov
jmp
loope
push
and
jl
dec
xor
cmc
add
xor
out
jne
mov
inc
add
sub
cmp
arpl
mov
or
xchg
push
xchg
aas
std
rorl
movsb
add
add
add
dec
cmpl
pop
push
js
ljmp
inc
push
js
push
incl
add
mov
xchg
decb
clc
xor
xchg
pushl
sahf
mov
inc
cwtl
gs
cmp
mov
rclb
mov
shlb
and
js
push
sub
push
les
ja
xchg
sbb
push
mov
out
pop
mov
xchg
mov
orb
mov
xchg
aam
mov
int
add
test
insb
ret
mov
xchg
mov
bound
sahf
mov
movsl
mov
push
adc
ljmp
imul
add
add
push
cmpsl
add
mov
out
jmp
insb
je
mulb
out
push
or
or
fiadds
add
mov
cmpsl
out
mov
mov
xchg
ret
addl
jge
push
pop
mov
lock
mull
fildl
inc
loope
outsb
inc
sbb
pushl
mov
call
add
std
push
mov
or
mov
mov
cs
or
jecxz
push
je
or
mov
jp
jmp
or
scas
arpl
mov
xrelease
dec
jmp
and
cmp
in
incb
fstp
stc
add
sub
lods
add
imul
jne
je
sub
mov
call
lock
pushl
je
pop
call
cmc
add
jmp
pop
stos
shr
incb
add
movsl
jae
decl
add
aaa
sti
bound
ljmp
or
jb
add
mov
dec
sti
xchg
mov
test
ret
xchg
decb
das
lcall
pop
xchg
je
gs
divl
test
notb
add
add
adcl
out
xchg
sbb
clc
add
dec
lea
push
movsl
dec
int
std
dec
xor
mov
in
adc
push
mov
adc
xchg
pop
int3
stc
dec
repz
fwait
lea
xchg
adc
or
lock
movsl
jno
jp
and
jecxz
fs
ds
iret
sbb
xchg
xchg
bound
mov
js
imul
lahf
mov
push
sbb
stos
stos
add
filds
or
ss
xor
cltd
pusha
inc
scas
mov
ret
ss
add
leave
mov
movsb
add
jno
or
push
orl
add
mov
repz
xchg
mov
push
in
out
inc
xlat
add
cli
fwait
mov
dec
imul
jmp
cs
mov
loope
mov
scas
int
pop
fdivr
fwait
std
jmp
mov
push
xchg
repnz
sub
jmp
push
push
bound
xor
pop
sldt
add
add
jo
jmp
js
ljmp
inc
jae
xor
aam
mov
inc
push
jge
mov
add
in
movb
jmp
jmp
jo
add
add
mov
mov
ljmp
jo
add
sbb
push
ja
add
idiv
jne
test
cmc
add
je
movb
add
add
add
add
jnp
mov
add
data16
add
clc
adc
mov
mov
std
imul
xor
femms
inc
add
mov
dec
inc
cwtl
pop
jae
add
mov
inc
shlb
popa
jmp
xchg
mov
pushf
cmp
xlat
test
pop
pushf
and
lea
mov
addb
add
cld
pushf
xor
xchg
jl
notl
jmp
or
je
and
xchg
pop
repz
add
mov
mov
add
xor
jmp
mov
push
inc
push
mov
cltd
ss
jne
add
stos
mov
sbb
out
push
jne
push
insb
jmp
testb
add
add
add
add
pop
dec
das
jecxz
add
jecxz
in
mov
jnp
mov
mov
dec
sub
das
xchg
fwait
sub
add
movsb
push
add
imul
cwtl
mov
mov
add
cltd
mov
add
andl
add
push
lcall
add
lods
adc
add
cmp
call
mov
xchg
push
xchg
xchg
jl
or
lcall
rcr
pop
jmp
push
mov
mov
mov
out
xchg
repnz
nop
cltd
jae
or
xchg
nop
test
mov
xor
sub
test
add
add
add
in
test
in
incl
shll
xlat
push
fdivrs
push
fs
push
inc
in
adc
pop
mov
xor
xor
stos
pop
fistps
xor
roll
push
lret
std
inc
and
test
cmp
xchg
add
outsb
mov
ret
outsb
lcall
lea
test
pop
adc
in
insl
xor
jg
lock
mov
decb
xchg
add
adc
movb
add
add
mov
xchg
jb
cmp
mov
add
adc
push
jne
lea
push
jle
cli
repz
mov
xchg
adc
cmp
aaa
adcb
pcmpeqw
sbb
inc
add
pop
repz
sti
or
add
jae
add
or
add
pushf
outsb
mov
xor
jle
jno
mov
cld
dec
icebp
mov
fwait
xchg
adc
xchg
lods
xchg
sbb
mov
out
push
mov
js
add
add
xchg
mov
insl
pop
add
gs
negb
ljmp
inc
and
jnp
call
stc
inc
mov
sub
ss
jp
mov
std
cmpsb
mov
repz
sbb
lea
xchg
mov
add
sti
jbe
scas
add
dec
sub
das
or
mov
push
bound
add
add
xchg
std
lcall
std
cs
xor
mov
cmpsl
adc
call
lea
imul
daa
lods
cwtl
cltd
andw
inc
hlt
dec
add
inc
mov
sbb
shlb
pop
fldl
or
adc
inc
lods
ret
negl
mov
data16
incl
add
add
out
add
add
cmp
in
xor
xchg
cs
sti
cmp
dec
inc
push
adc
push
mov
push
sbb
aam
outsl
and
jae
jg
push
push
adc
xor
les
mov
out
dec
testl
cmp
ja
xor
mov
mov
jne
movsl
mov
mov
add
add
push
mov
into
jae
mov
ret
xor
add
imul
pushl
hlt
aas
mov
aas
lock
add
mov
jg
popf
cmp
cli
xchg
leave
xor
test
sbb
jge
mov
add
popf
sbb
loop
add
or
jg
inc
repz
int
and
sub
ja
testl
andb
cmpb
scas
mov
jg
pop
or
xchg
bound
cmp
or
adc
push
out
dec
subb
mov
jle
andl
fsubrl
js
call
sti
xlat
sub
jb
add
repz
dec
pop
movsb
sub
push
xchg
add
icebp
dec
jne
mov
mov
inc
call
lcall
jmp
xchg
lods
je
xchg
ja
mov
xchg
push
xchg
lahf
pop
call
lcall
dec
xchg
mov
std
jbe
nop
jae
or
pushf
sti
dec
repz
ja
push
add
jmp
inc
xchg
jmp
inc
mov
pop
icebp
es
adc
mov
mov
std
add
jae
call
aas
in
add
hlt
mov
add
add
xor
aad
pop
fidivl
or
sub
add
add
ret
lret
jae
add
adc
xor
jl
scas
xchg
or
lahf
mov
dec
push
fdivrp
adc
cs
arpl
sti
and
mov
pop
add
sbb
je
xchg
in
mov
decb
pop
scas
sbb
add
adc
imul
or
sub
add
add
pushf
mov
roll
sar
mov
mov
sbb
add
adc
call
add
mov
in
loopne
push
mov
nop/reserved
xchg
aaa
test
dec
inc
js
inc
pushl
add
decl
adc
or
pushf
xlat
je
rolb
add
add
add
add
xlat
push
push
stos
mov
fsubp
decb
fmuls
call
inc
jl
mov
leave
imul
out
pop
stos
out
fcomip
out
or
hlt
add
repz
gs
out
sbb
out
cwtl
mov
fwait
xor
mov
std
imul
inc
aad
mov
pop
mov
xchg
repnz
xor
add
sbb
cltd
icebp
inc
jge
mov
jo
roll
aam
mov
add
or
testb
mov
mov
ss
fs
std
mov
call
dec
lea
jne
std
scas
mov
mov
div
xchg
int3
mov
add
mov
insb
add
sti
jbe
cmp
in
or
std
push
repz
call
mov
std
test
punpckhbw
std
decl
std
jne
jno
pushl
cmovo
je
mov
sbb
and
pop
pop
fdivrs
sub
push
jge
call
cmpsl
aaa
jne
pop
jb
and
std
push
jne
je
je
jne
popf
std
mov
std
adc
mov
je
push
jb
or
and
mov
jb
push
es
or
and
add
test
cmc
inc
aam
insb
inc
mov
dec
scas
sar
nop
sub
leave
pushf
add
fs
dec
lret
adc
sar
or
add
add
cmc
insb
add
ljmp
or
mov
adc
shl
mov
ffree
lcall
sub
mov
mov
xchg
xchg
stos
test
pop
inc
mov
mov
repz
push
hlt
out
adc
mov
xchg
fs
add
add
add
sti
popf
sarl
add
sti
mov
fs
add
sti
popf
rorl
add
sti
pop
cmp
call
inc
xchg
sub
jno
adc
xor
jmp
dec
lahf
fiaddl
movlhps
in
sbb
addr16
pusha
in
jae
add
mov
add
add
or
cli
mov
clc
insb
mov
cmp
mov
xor
push
icebp
std
mov
mov
in
xor
fcmovu
ja
or
js
add
xchg
adc
mov
inc
popf
cmp
pushf
mov
loop
out
mov
sbb
std
sbb
popf
adc
add
add
jae
and
cmp
mov
addb
stc
push
mov
out
add
sub
adc
cs
je
int
jl
inc
mov
mov
ljmp
aaa
rorb
stos
mov
and
lea
or
test
orl
decb
sub
cld
cli
xor
push
movsb
mov
pop
js
cld
push
lahf
xor
inc
movsb
inc
test
andb
scas
jae
or
add
push
add
sbb
add
or
sbb
jnp
adc
mov
or
mov
scas
dec
rorl
mov
roll
adcb
test
call
add
add
into
mov
add
xchg
aam
xor
add
add
fistpl
xchg
add
icebp
rcll
pop
jl
mov
push
lahf
hlt
xchg
sbb
mov
lods
testb
jmp
add
insl
repz
xor
jecxz
lds
cmp
ffree
lds
wrmsr
icebp
add
and
hlt
cs
adc
or
lret
in
mov
mov
jae
mov
int3
xchg
aaa
xor
pop
ljmp
rcl
xchg
divl
call
adc
or
xor
int3
jns
sub
or
inc
sbb
and
ficompl
aam
xchg
xor
jmp
rcrb
pop
jb
sub
ret
mov
jmp
mov
hlt
mov
jl
addl
xor
jae
push
pop
stc
pusha
ret
mov
fwait
loope
mov
test
jnp,pn
call
xor
hlt
add
repnz
pop
dec
fs
repz
sahf
jbe
and
sbb
in
jle
call
push
jl
repz
add
mov
lock
jp
insl
in
jae
jecxz
mov
xchg
mov
je
test
xchg
push
cmpb
je
xchg
lds
mov
call
mov
jae
je
sbb
mov
repnz
mov
lock
add
je
jne
call
out
jb
call
js
add
icebp
push
test
call
lock
pop
pop
enter
xor
and
lcall
jbe
xchg
jge
jbe
ror
or
push
or
push
imul
dec
loop
mov
lahf
inc
push
cld
pop
out
add
add
pop
adc
jmp
aam
and
mov
roll
add
in
inc
sub
adc
adc
inc
dec
jb
insl
add
int
mov
jo
add
cwtl
in
lret
or
sbbb
inc
mov
mov
out
jg
in
js
out
je
pop
and
js
out
mov
scas
lds
adc
jg
or
fninit
icebp
mov
cmpsl
insb
mov
xor
adc
cmc
out
adc
shll
cmp
rcl
sbbb
shrl
mov
cmpb
adc
les
shrl
jne
jmp
adc
out
lods
mov
out
popf
testb
mov
push
mov
stc
add
iret
jge
call
jb
mov
mov
add
add
or
hlt
roll
adc
addr16
ljmp
fdivl
movsl
repz
es
fcoml
aam
inc
pop
js
aad
outsb
inc
jmp
inc
je
out
hlt
call
hlt
add
xchg
cltd
push
add
inc
outsb
jl
jge
jmp
add
or
xor
mov
xchg
add
jmp
add
mov
je
jecxz
movsl
adc
add
dec
xor
enter
pop
xor
sub
jne
or
sahf
mov
insl
inc
in
mov
mov
ljmp
or
mov
mov
push
fistpl
add
adc
push
or
lcall
in
call
add
hlt
add
jae
mov
lock
pop
or
lahf
sub
add
lret
pop
dec
ljmp
add
jg,pt
add
lret
xor
or
adc
mov
mov
sbb
hlt
mov
push
push
roll
add
and
dec
or
add
add
mov
add
jne
xor
mov
pop
stos
mov
call
pop
mov
test
or
imul
add
mov
add
inc
pushf
add
jo
and
fcmovne
add
cmc
out
and
jle
xchg
iret
roll
add
add
pop
int3
and
push
and
sub
jbe
arpl
aaa
les
mov
push
insb
fistpl
dec
mov
inc
mov
add
xlat
add
mov
xchg
add
and
flds
cli
and
mov
mov
ret
bound
test
push
xchg
xchg
add
andb
add
dec
add
je
shll
inc
mov
call
pop
sub
out
xchg
std
xchg
rcl
adc
lret
xchg
push
ds
call
mov
out
add
jbe
je
mov
inc
add
xchg
call
lea
aad
call
fidivrs
adc
aad
add
add
push
sbb
repnz
mov
inc
mov
aam
cmp
in
sbb
lcall
add
clc
jae
and
sbb
mov
lock
mov
mov
in
xor
cmpl
movsl
push
push
lock
in
call
out
call
sahf
decl
mulb
push
bound
add
cmp
mov
idivb
push
bound
jb
mov
mov
femms
imul
mov
and
test
mov
cmp
test
cmp
cmc
adc
and
sub
in
movb
adc
xchg
mov
add
into
sub
add
and
sarb
imulb
sbb
add
add
incl
popf
test
daa
xor
scas
mov
clc
test
dec
leave
iret
out
pop
sbb
xor
out
loope
loope
dec
imul
jp
iret
fistpll
iret
fcmovne
cmpsl
outsb
arpl
add
out
movsb
jo
notl
ljmp
add
addb
add
in
out
push
mov
or
sub
or
imul
les
jne
jo
imul
inc
lds
inc
or
lods
das
cld
gs
jmp
lock
cltd
xchg
repz
mov
and
mov
xchg
cmpsb
mov
or
sahf
scas
mov
pop
lahf
repz
and
inc
adc
cltd
jns
add
fcmovbe
adc
ret
call
pusha
ss
jle
and
lret
js
mov
and
mov
je
and
and
cmpl
mov
rcrl
xlat
incl
add
jnp
sub
shll
xchg
pop
call
add
std
je
fucomp
loope
out
add
pop
shll
call
in
xchg
call
jmp
push
test
and
jbe
or
std
mov
call
fdiv
xor
pop
or
out
hlt
push
mov
jbe
clc
pusha
addl
mov
add
mov
mov
rclb
rol
xchg
iret
imul
add
add
add
add
push
outsl
decb
add
out
or
mov
add
insl
pop
int3
add
sbbb
decl
pop
stc
add
adc
incb
adc
push
mov
add
pop
mov
sar
mov
add
add
mov
add
pop
push
push
mov
xchg
outsb
stos
outsl
lods
ja
pop
es
out
push
mov
out
std
sbbl
add
test
jno
and
jle
cwtl
dec
insl
insb
and
pop
and
add
mov
sub
and
jg
cmpl
jg
iret
xor
ja
inc
cltd
fdiv
ss
repz
outsb
add
aaa
jg
add
add
aaa
pop
pop
psubsb
add
jle
or
push
add
mov
repz
mov
cld
mov
jmp
call
xor
std
sbb
std
add
jl
adc
xchg
cmp
mov
add
addr16
push
mov
mov
hlt
jbe
or
cltd
or
pop
jmp
mov
jne
ret
push
xchg
pushf
outsl
fdiv
mov
jne
inc
popf
xor
push
or
sub
call
add
je
std
sbb
dec
call
ss
setne
push
call
pop
cmc
inc
ljmp
ret
call
mov
das
add
inc
xchg
std
xor
xchg
std
inc
lret
xchg
arpl
ret
repz
push
es
jmp
cwtl
sbb
lock
popa
call
test
test
cmpsl
les
dec
popa
or
add
std
or
je
test
xchg
push
adc
aam
mov
jb
fdivl
add
lahf
notb
inc
mov
roll
add
outsb
xchg
imul
mov
out
push
lock
ljmp
outsb
insl
enter
add
outsb
ljmp
arpl
inc
int
stc
xor
mov
mov
mov
mov
push
leave
in
mov
repnz
push
and
imul
xor
mov
add
xlat
loope
aad
sub
jns
or
dec
inc
or
imul
xchg
mov
inc
jl
cmpsl
cs
jmp
jo
inc
jno
imul
subb
jl,pt
mov
out
push
fsubl
test
je
dec
jno
imul
mov
test
jle
incl
add
add
push
push
out
xchg
orl
xchg
sarb
jmp
sti
into
jb
call
rcr
jg
cltd
fs
sbb
pushf
call
jno
add
mov
push
sbb
sti
call
lret
pop
or
test
gs
xchg
mov
add
pop
pop
sbb
int
inc
dec
xor
jmp
rcll
ljmp
and
jecxz
call
ret
inc
mov
jo
adc
mov
in
fmuls
insl
mov
push
and
cmp
push
test
testb
fs
testl
add
xor
mov
call
test
arpl
push
add
add
jecxz
jb
cmp
pop
add
js
lock
lods
aaa
add
arpl
jbe
arpl
pushl
jae
enter
inc
or
mov
je
ret
cmp
pop
pop
adc
pop
add
push
mov
push
xlat
inc
je
mov
call
adc
jl
adc
or
sbb
test
add
add
sbb
aas
mov
popa
mov
inc
jp
pushl
pushf
lods
inc
cmp
movl
aam
cmp
xchg
mov
pop
testl
pop
cmpb
push
fst
outsl
mov
popf
jecxz
xor
mov
cmpsb
sti
jmp
jl
pop
aam
cmpl
repnz
out
add
add
add
jmp
pop
mov
mov
out
push
mull
prefetcht2
out
push
xor
or
iret
ret
pop
popf
out
setne
out
pop
cmp
add
xor
ljmp
xor
dec
clc
out
adc
pop
xorl
sahf
ret
xor
sbb
sub
or
lea
loope
jl
adc
imul
cltd
popa
outsl
push
jmp
ja
pop
sahf
outsb
jae
push
mov
call
les
ret
ret
pop
insl
jbe
cs
std
push
mov
inc
mov
sbb
push
pop
call
aas
mov
mov
push
mov
jbe
fwait
jmp
mov
xor
out
add
add
push
lret
stos
ljmp
in
dec
or
mov
icebp
xchg
das
or
sgdtl
xor
orb
repz
jbe
or
je
or
nop
mov
cmpsb
add
mov
add
nop
cmp
sbb
add
sub
or
mov
add
jl
or
cmp
call
call
inc
and
mov
pop
mov
mov
push
mov
mov
lahf
inc
idivb
mov
add
and
push
loope
jp
inc
pop
mov
pop
push
ror
or
enter
or
mov
insl
sub
mov
pop
push
add
cmp
mov
add
dec
or
jmp
call
pop
fwait
aad
add
xchg
sbb
jmp
test
mov
out
testl
sbb
mov
loope
in
bound
insb
scas
push
scas
sti
cltd
jb
icebp
mov
sarb
dec
mul
mov
add
outsl
icebp
out
pop
js
mov
cmp
ja
imul
dec
lcall
dec
push
inc
testb
mov
mov
sbb
int
fs
sbb
add
movsl
imul
or
add
movntps
push
incl
push
sti
add
dec
repz
bound
ret
test
test
push
mov
imull
inc
pop
or
mov
jle
mov
xchg
sbb
mov
std
cmp
add
add
lret
in
mov
xor
repz
push
adc
xchg
push
inc
mov
scas
mov
cmp
in
rorb
and
testb
lahf
sbb
jmp
cmp
pushl
inc
and
lahf
jb
rcll
popa
ss
test
fisttps
fs
mov
inc
dec
push
push
lcall
mov
inc
and
mov
jbe
and
icebp
cmc
add
and
js
mov
js
arpl
dec
jbe
pop
or
jne
movsb
cmpb
mov
js
xor
or
mov
xchg
shr
add
or
add
loop
fmuls
add
sub
mov
push
mov
stc
aad
add
pmaddwd
cli
pop
and
or
push
xchg
and
or
add
add
sbb
add
pop
add
add
sub
fwait
pop
dec
or
call
mov
daa
pop
out
out
cmp
sub
outsb
sub
jle
mov
mov
int
xchg
add
in
cli
jecxz
mov
jecxz
push
mov
je
pop
mov
pop
cmp
add
add
repz
sub
shll
scas
jmp
test
mov
pop
out
mov
je
les
pop
mov
add
xchg
call
sub
add
push
sarb
stc
sbbb
add
xchg
mov
fiadds
xchg
call
mov
add
add
clc
jmp
mov
mov
and
jb
dec
mov
mov
subl
jne
call
adc
dec
inc
fmuls
push
testb
or
and
add
ret
sbb
std
mov
stos
cld
in
popa
mov
mov
sub
in
and
add
arpl
add
je
sbb
call
mov
lret
jnp
cmp
cli
cmp
jp
je
mov
cmp
jmp
sarl
je
je
add
mov
xor
subl
add
pop
mov
add
into
or
nopl
dec
movsb
insb
movsb
pop
add
push
pop
jo
mov
loope
repz
pop
mov
lahf
mov
sti
cmovg
push
add
insl
xor
es
xor
push
cmpsl
push
pop
push
pop
pop
pop
adc
pop
insb
xchg
add
add
data16
popa
in
pop
outsb
call
adc
movsb
negl
out
or
sti
sbb
cmc
fsubp
mov
enter
pop
jmp
out
add
or
or
scas
ja
into
mull
add
push
jb
xchg
mov
imul
aaa
lret
subb
pop
sub
out
into
imul
adc
dec
and
int
shl
in
adc
les
push
xor
jmp
bound
cmp
dec
cs
xchg
mov
pushf
fistps
push
inc
fisttps
push
or
addl
jo
lea
add
add
pop
pusha
inc
mov
test
in
inc
xchg
mov
mov
inc
mov
add
add
aam
mov
ja
mov
jo
adc
mov
out
mov
add
jo
in
add
in
push
mov
add
loop
jne
jns
lock
int
add
mov
mov
add
and
into
xor
mov
xchg
jns
hlt
push
dec
xchg
add
call
mov
insl
je
faddp
push
test
add
fsubrs
rorl
scas
sub
test
testb
and
push
sub
cmp
addl
mov
jl
dec
into
and
xchg
xchg
jl
adc
add
add
sar
nop
or
inc
mov
add
pop
cltd
jbe
aad
mov
or
add
sbb
xchg
cld
clc
mov
shl
push
mov
mov
bound
push
adc
pusha
sar
pop
or
mov
cmp
inc
add
testl
adc
cmp
popf
mov
add
add
mov
cmp
push
mov
insb
insl
push
call
and
push
call
push
int3
leave
mov
jmp
dec
insb
shl
mov
mov
dec
rclb
shrb
and
xlat
lret
pop
add
repnz
adc
jg
imul
add
fisubs
inc
and
out
mov
icebp
out
psllq
jmp
cmp
loope
add
leave
rcrl
xor
sub
imull
sub
cld
mull
push
in
push
adc
test
jmp
pop
js
lds
int
call
push
dec
insl
rol
dec
pusha
std
jmp
mov
add
add
push
fs
cmc
data16
loop
push
push
je
xchg
js
dec
jb
mov
imul
push
xchg
add
in
mov
arpl
repz
je
add
pop
pop
pusha
lea
outsl
in
outsl
or
stos
jno
xor
sub
dec
icebp
jae
js
pop
cmp
cs
mov
add
cmp
push
ds
int
and
rorb
ret
jne
mov
movsb
out
add
fidivs
ror
sbb
mov
inc
cmp
das
or
add
sar
divb
jmp
adc
add
and
add
ret
call
push
mov
jg
xchg
cmpsb
add
nop
outsb
jle
jbe
adc
or
es
cmp
icebp
dec
cmp
out
or
mov
aam
cmc
or
ja
mov
or
sub
sarb
push
or
add
sbb
test
pop
push
adcl
mov
mov
je
add
insl
dec
add
push
scas
ret
fiadds
in
repz
mov
sbb
fcmovnu
mov
add
mov
xchg
and
testb
xlat
xchg
lods
jle
addl
test
xchg
ljmp
fiaddl
and
mov
in
fiaddl
bound
jae
jo
or
call
jmp
mov
ljmp
add
add
xor
cld
adc
add
ja
inc
je
mov
pop
xchg
xor
roll
pop
sub
pop
aaa
sahf
adc
div
mov
push
repnz
mov
sahf
loopne
push
repz
mov
cmc
mov
icebp
push
das
dec
inc
or
cmp
add
daa
repz
mov
mov
add
add
cmovo
cmc
test
inc
or
pop
cmp
mov
or
push
test
push
push
or
je
and
push
push
stos
mov
decl
stos
cmovo
xlat
cmc
cmp
les
in
add
xlat
in
cmp
add
add
inc
inc
sub
repnz
inc
jecxz
push
push
scas
decl
mov
push
push
jl
adc
shll
std
mov
cmp
pop
dec
adc
rcll
mov
std
jne
push
push
adc
pop
sar
pop
push
add
fcos
fisttpll
mov
pop
sar
mov
add
push
pop
shll
inc
pop
mov
jmp
mov
add
add
add
lock
mov
decb
outsl
dec
push
jo
push
adc
cmp
push
mov
xor
mov
dec
lods
sti
dec
je
nop
xchg
mov
ja
pop
repnz
dec
jge
out
push
pushf
mov
sbb
out
mov
incb
add
add
aas
out
mov
or
add
testb
sbb
dec
fwait
dec
cwtl
pop
repz
call
or
call
out
ss
add
in
popl
xchg
out
jle
fld
int
xlat
or
pop
out
dec
dec
aaa
mov
leave
jl
movsb
shll
inc
add
jae
ret
in
mov
jmp
incl
stc
dec
pop
cmp
rcrl
inc
les
insl
dec
pop
mov
loope
fucomip
mov
fmull
dec
push
or
mov
mov
add
call
gs
in
jb
pusha
mov
std
push
jo
hlt
push
rorb
lods
push
pop
inc
or
std
lahf
sti
out
aas
push
dec
out
pop
test
loop
sub
repz
rcll
call
shrl
jo
std
fsubl
adc
out
push
test
cmpsb
decl
in
incl
jmp
in
insb
outsb
mov
fsubrl
fbstp
repz
mov
push
xor
adc
ljmp
xor
push
test
mov
mov
sbb
mov
add
add
insb
add
scas
add
mov
inc
jecxz
loopne
scas
imul
inc
mov
ret
mov
aam
mov
fimull
xor
psrld
popf
dec
decb
fists
add
cmp
inc
mov
inc
xor
dec
js
cmp
mov
sar
push
jle
cmp
add
add
das
xor
add
mov
decl
fists
jmp
dec
js
mov
cwtl
add
add
add
add
pop
dec
mov
pop
pusha
or
mov
fsts
lea
fiaddl
fiaddl
mov
push
mov
arpl
repz
pop
sarl
dec
mov
pop
cmp
jmp
gs
stos
add
nop
sti
pop
enter
dec
dec
repnz
inc
imul
dec
lret
push
shrb
and
xor
ficoms
shrb
inc
in
mov
bound
ret
dec
sbbl
int3
sti
leave
push
mov
movsb
std
hlt
roll
jmp
or
lods
fcmovne
push
ljmp
push
std
sahf
sbb
stos
push
inc
hlt
sub
adc
stos
or
xorl
test
mov
pop
sar
push
je
adc
stos
mov
xorl
push
push
test
lds
in
insl
pop
inc
jmp
repz
addb
add
xlat
sub
sarb
jge
call
insl
cmc
jmp
aad
pop
gs
cmp
add
and
test
xor
mov
call
inc
or
neg
mov
pop
ret
push
xor
and
jns
das
test
call
cwtl
mov
or
add
add
inc
and
and
pop
pop
mov
aad
xor
scas
push
sub
pushf
aad
dec
mov
ror
divl
arpl
add
pop
pop
mov
inc
mov
jne
pop
pop
or
cld
sbb
mov
pop
mov
push
shll
cmp
jg
mov
push
test
lcall
js
stos
dec
repz
add
mov
test
pop
inc
inc
cli
jmp
aas
mov
adc
int3
mov
xor
out
dec
inc
dec
rcrl
repz
fptan
jnp
adc
ret
jne
add
scas
push
jnp
mov
add
repz
cmp
add
jecxz
movsl
stos
inc
jge
add
add
pop
jnp
mov
popf
rorl
cld
std
pop
mov
sbb
or
push
outsb
fiaddl
inc
xor
stos
aas
inc
pop
push
inc
jnp
out
int
add
and
mov
adc
ja
lret
cld
mov
xor
shrl
jbe
mov
xchg
sub
push
inc
push
incb
add
push
imulb
repz
cmc
xor
stc
jae
cmp
or
push
add
jb
sbbl
popa
les
xchg
mov
jle
bnd
adc
std
jmp
mov
clc
stos
les
sbbl
std
add
mov
jno
jbe
jno
push
and
data16
add
pusha
jmp
jne
je
add
and
jmp
int3
inc
or
pmuludq
dec
arpl
mov
push
outsl
or
mov
shl
int3
add
ret
push
mov
adcl
mov
mov
cld
pop
lea
mov
mov
fdivp
cmp
jbe
addb
add
and
add
repz
mov
int3
aaa
add
add
push
sbb
cmc
mov
leave
push
cmp
in
mov
pushf
add
inc
dec
or
inc
sbb
clc
adc
leave
sub
cmc
ja
xchg
pop
add
xchg
inc
pop
cmp
cmp
sbbb
or
or
mov
sub
incl
xchg
add
pop
add
or
add
pop
int3
das
pop
add
add
push
pushf
int
cmp
repz
lcall
lock
repz
popf
and
mov
or
sarl
cmp
mov
inc
dec
lods
sub
in
popa
xor
and
fldl
push
out
iret
add
mov
cld
xor
or
xchg
add
pop
pusha
cmc
out
sbb
aam
push
insb
icebp
inc
fsts
in
inc
jbe
clc
ret
push
repnz
aam
enter
pop
add
add
cmp
add
or
std
fmull
dec
adc
ja
add
jecxz
and
repz
in
xor
in
jo
int
repz
fmull
add
je
test
lahf
mov
aas
sbb
add
subl
repz
or
leave
shlb
repz
stos
test
sbbl
pop
mov
add
jne
ds
std
je
clc
std
adc
mov
jnp
je
sbb
and
add
cld
push
incl
add
add
push
or
add
push
mov
mov
or
push
lock
aas
push
or
decl
jnp
cmp
and
add
sbb
mov
jp
aas
mov
pop
adc
cmpsl
test
add
mov
inc
pop
lods
adc
shlb
add
add
aad
mov
sub
mov
adc
fnstsw
lahf
push
inc
jae
sub
adc
mov
pop
imul
add
aad
push
aad
in
mov
aad
xchg
push
add
cli
pop
sub
js
loopne
push
sahf
add
nop
jnp
add
push
xor
dec
xor
jge
push
js
std
fnstsw
pop
div
sti
test
sbb
or
mov
mov
or
ret
js
push
push
test
lret
and
xor
ret
jbe
jecxz
fildll
xchg
push
mov
add
out
scas
lret
mov
nop
and
or
mul
rcrb
incl
ret
adc
ss
jbe
stc
ret
xchg
outsb
cmpsl
mov
push
add
add
mov
das
lea
out
dec
and
adc
leave
add
lcall
jl
and
sbb
adc
hlt
add
das
imul
pop
mov
aaa
repnz
pushf
lea
negb
andl
in
mov
pop
sub
sahf
xor
adc
xchg
xchg
mov
aam
or
push
out
and
data16
add
pushl
jmp
data16
add
pushl
hlt
test
aaa
icebp
or
bound
jmp
mov
add
out
mov
mov
ljmp
test
inc
lock
pop
repnz
sbb
sbb
or
stc
add
std
push
cs
add
cmp
sbbl
mov
dec
hlt
mov
push
mov
mov
out
imulb
mov
mov
scas
or
sub
push
jp
add
repz
add
add
lret
ror
pop
xor
mov
pop
add
pop
inc
mov
mov
sbb
test
jbe
cmp
cli
roll
inc
pop
cmp
adc
push
faddp
or
aam
or
add
cwtl
cmp
aaa
mov
add
inc
fimuls
xchg
or
cmp
jno
adc
mov
inc
jb
mov
cmp
pop
xor
xor
wbinvd
sarb
fstps
call
mov
inc
jo
sbb
sub
push
out
mov
addl
mov
or
xchg
push
fs
idivb
jae
cmp
inc
out
test
add
rorl
mov
or
or
lcall
adc
ljmp
or
and
jnp
mov
mov
or
xchg
jae
loopne
lock
cmp
xchg
inc
std
jmp
xchg
fnsave
sbb
xchg
es
sbb
pop
dec
inc
jmp
and
shl
repz
enter
popf
or
mov
inc
dec
xor
popf
jns
and
stc
mov
mov
add
outsl
sbb
je
leave
jae
jne
cmp
cmp
or
pushl
mov
jae
je
or
call
mov
mov
and
hlt
or
mov
mov
sbb
roll
and
call
mov
mov
or
int
out
orl
mov
ja
hlt
clc
lods
push
orl
add
rolb
mov
cmp
cmp
clc
pop
or
and
dec
je
flds
adc
cmp
leave
cmpsl
pop
cmp
dec
test
xor
int
add
add
testb
test
jecxz
cmp
mov
popa
sbb
mov
int
pop
mov
incb
lock
add
mov
sti
leave
xchg
push
test
mov
push
sub
mov
gs
and
inc
in
mov
inc
or
pop
dec
adc
test
cmc
sarb
and
cmp
imull
mov
bound
add
add
jmp
dec
cmp
clc
out
mov
sub
call
clc
push
push
xor
mov
mov
ret
jo
cmpsb
scas
push
outsb
stos
sub
cmp
into
xor
xor
sbb
inc
push
mov
add
push
or
cmp
adc
imul
add
inc
pop
popl
add
add
dec
orl
adc
aaa
pushf
test
xchg
repz
dec
mov
jo
jno
repnz
sub
inc
mov
insl
lret
flds
dec
or
cmp
mov
xchg
inc
std
jmp
xchg
je
jmp
mov
push
or
and
repz
data16
add
jnp
pop
mov
adc
lods
pop
loope
enter
xor
call
ja
jno
jo
cmc
add
icebp
jbe
mov
jnp
je
jmp
sbb
mov
sbb
xor
xor
lea
in
pop
or
add
pop
jle
dec
hlt
je
fsts
ljmpw
mov
mov
incb
add
add
insl
inc
clc
pop
xor
cmpxchg
ret
sbb
ret
std
jne
or
aam
hlt
xor
mov
mov
push
adc
xor
jge
adc
sub
test
pushw
xor
mov
mov
xor
loop
ljmp
outsb
cmovo
fidivrl
jle
lods
and
add
add
dec
add
mov
jp
push
mov
fstpt
xor
pop
mov
xor
pop
rol
pop
add
lods
or
push
mov
jb
cmp
pop
mov
js
mov
add
jg
mov
out
jl
cmp
nop
xor
xor
add
add
fs
mov
inc
pop
sbb
lcall
xor
inc
inc
test
xor
jno
mov
inc
insb
dec
imul
fs
out
dec
pop
dec
dec
add
out
fiaddl
dec
jp
mov
fiaddl
outsl
out
mov
add
xchg
outsb
in
and
jae,pt
popl
sub
add
add
sub
emms
shlb
xchg
rcrb
mov
or
jno
cmc
jbe
pop
xchg
pop
and
fldl
cmpsl
or
push
and
pop
insb
aam
sbb
into
ja
inc
jg
mov
mov
push
repnz
pop
inc
xor
movsb
mov
pushf
scas
sbb
js
dec
or
mov
in
inc
mov
stc
test
add
ret
std
jae
sbb
sbb
ficoml
cmp
lcall
or
mov
leave
or
and
push
movsb
fistl
ret
mov
sub
ret
nop
mov
add
pop
imul
outsb
jne
js
push
push
sti
rolb
xor
and
push
rcll
add
adc
sbb
decl
repz
push
xlat
ja
adc
xor
xchg
add
leave
xchg
pop
leave
test
mov
jp
xor
inc
mov
push
sbb
mov
into
aaa
js
in
mov
add
add
add
jnp
adc
mov
mov
ret
and
aad
push
add
jge
jle
das
je
lds
dec
xor
jns
dec
hlt
push
inc
roll
pusha
shl
xor
loopne
ja
fistl
repz
rolb
mov
das
fs
xor
outsb
inc
rorl
rorl
push
push
mov
push
mov
sbb
add
add
inc
insb
cmp
push
mov
dec
xor
repz
add
jo
adc
xchg
cmp
cmp
add
out
sbb
and
bound
or
mov
cmp
call
stc
loop
jmp
sti
adc
bound
je
cltd
lret
out
mov
call
jo
jo
std
js
xchg
test
adc
lahf
mov
jo
icebp
mov
xchg
hlt
xor
fidivl
add
xchg
addr16
adc
fsubs
jne
push
adc
pushw
sahf
je
rep
rcrb
add
hlt
data16
roll
push
hlt
or
test
sub
add
ja
or
push
or
data16
into
mov
xor
add
divl
into
push
add
add
hlt
jae
mov
mov
mov
in
pusha
adc
push
xor
jmp
addr16
jae
shl
fcompl
shll
fdivs
fcmovnbe
or
pop
mov
pop
mov
cmp
sbb
cs
mov
add
add
test
in
psubusb
lret
pop
popa
or
bound
mov
ss
mov
sbb
ret
adc
pop
xor
adcl
add
pop
xchg
les
add
mov
cmp
incb
orb
lret
pop
rorl
pop
mov
jecxz
add
add
cmp
mov
jp
jbe
fdivr
xchg
or
jae
repz
mov
sub
orl
mov
addr16
insl
dec
add
fidivs
xchg
jge
loope
sbb
repz
dec
xchg
jne
sub
jns
out
ss
cmc
imul
jbe
sub
test
call
das
jmp
ds
push
cld
call
sub
xchg
dec
into
adcl
std
out
mov
stc
hlt
jle
push
fisubs
stc
dec
loope
jno
scas
xor
push
call
jbe
std
sub
hlt
es
clc
sub
hlt
pusha
dec
inc
cmp
push
in
in
xor
leave
inc
inc
int
insb
jle
inc
ret
cltd
out
sub
imul
mov
roll
mov
jae
xor
std
push
add
push
add
jne
push
jnp
into
add
cs
in
jmp
add
inc
fsubr
xor
add
dec
rcr
xor
call
test
in
hlt
mov
sbb
or
ljmp
adc
lahf
call
inc
or
pushl
cmc
xor
add
xor
add
add
add
lods
addr16
mov
inc
jecxz
mov
fnstenv
add
cvtps2pi
decl
dec
xchg
jle
or
cmp
insb
cmpl
iret
dec
imul
or
mov
sub
sbb
decl
xchg
test
mov
out
test
add
je
iret
das
jae
fldcw
je
fsubrl
adc
adc
decl
mov
lds
xchg
sub
repnz
mov
dec
push
bnd
add
add
add
inc
aas
leave
shlb
pop
lods
shrl
daa
movsb
add
sbb
pop
jmp
rolb
inc
push
jge
sti
scas
fmul
ja,pt
xlat
pop
sbb
jo
sub
cmp
adcb
out
inc
xor
js
bndstx
hlt
out
mov
lret
sbb
and
add
and
xor
sbb
add
mov
cmp
hlt
leave
jno
in
and
mov
scas
je
stos
fistpll
es
or
mov
fnstenv
dec
icebp
nop
cmp
mov
dec
mov
scas
and
jno
dec
jmp
cld
cmpsb
and
mov
jle
add
in
call
sbb
cmpsb
and
pop
xor
add
add
popl
call
jb
ret
in
jmp
insl
dec
cmpsb
adc
adc
and
inc
std
add
and
push
add
cmpsl
test
and
cmp
add
movl
add
push
or
call
insl
cli
xor
and
xchg
addr16
stos
inc
xor
mov
mov
or
test
xchg
mov
mov
sahf
inc
and
fdivs
out
xchg
push
testl
or
and
mov
rcr
sarl
pop
fstpl
add
sar
pop
adc
mov
ds
cmp
add
add
ds
and
in
test
sbb
in
pop
aad
push
and
aas
mov
xchg
push
loope
mov
inc
rorl
mov
orb
sbb
lcall
outsb
adc
test
loope
fdiv
mov
filds
add
add
xlat
out
jp
ret
inc
aam
jle
fbstp
sbb
das
popa
inc
mov
add
adc
test
popa
sub
es
jecxz
jb
das
out
lock
sbb
mov
cmp
jno
mov
sub
repz
fsubrl
sub
cs
inc
fwait
mov
andl
roll
add
sbb
cs
mov
add
cs
jne
cs
in
dec
sub
mov
std
cld
popf
add
jmp
into
daa
inc
jmp
mov
lahf
popf
insb
mov
push
div
stos
mov
push
fs
dec
mov
in
mov
scas
pop
jge
dec
cs
bound
std
jmp
mov
mov
aam
or
jmp
pop
sub
add
ret
stos
cmc
clc
push
adcl
mov
add
repnz
inc
mov
inc
gs
xor
push
jp
jmp
adc
js
je
pop
insl
cmc
test
pop
or
mov
hlt
xor
xlat
jno
es
mov
arpl
cltd
inc
mov
stos
ret
insl
std
pushl
fistpll
jne
mov
scas
lret
dec
jg
mov
push
add
data16
mov
fbld
mov
icebp
add
incl
mov
and
jb
push
and
dec
test
adc
lret
test
dec
sbb
push
or
or
call
sub
rcrb
add
sbb
cmc
dec
sbb
sbb
insl
out
cmp
inc
push
pop
loope
repnz
outsl
fcompl
movsb
shl
and
pminub
cmp
push
xchg
sbb
dec
cltd
cltd
add
and
xor
repz
mov
jmp
mov
cltd
out
cmp
and
add
add
cmpsb
lret
negl
repz
sub
out
sub
aaa
js
out
lret
add
mov
pop
sub
out
sub
out
lds
xchg
imul
cmpsl
add
sub
hlt
addl
jg
ret
xlat
add
jle
andl
add
cmc
aas
adc
xchg
push
sbb
rorb
mov
loope
add
add
or
jmp
imul
xchg
dec
hlt
add
cmp
jmp
fildll
or
cli
xchg
sub
imul
das
hlt
push
pop
ret
cli
push
je
cs
insl
dec
stc
test
repz
push
insb
cmc
sbb
cld
repz
stc
test
repz
cmp
jne
or
add
mov
inc
pop
inc
lds
or
lahf
call
shll
and
shlb
inc
out
frstor
xor
mov
and
add
or
adc
jmp
js
cld
pop
and
push
cmp
ret
pusha
in
mov
add
div
add
push
jno
std
jl
test
jecxz
je
mov
inc
jg
inc
cld
fwait
sub
arpl
jmp
arpl
mov
cmp
scas
mov
sub
mov
sbb
add
popl
and
jecxz
stc
pop
pop
mov
add
ja
add
add
pop
xchg
inc
mov
add
and
std
int
sub
dec
sbb
cmp
xchg
add
jg
jne
xchg
mov
dec
cmp
out
mov
pop
in
in
mov
add
jne
cld
aas
ret
lahf
pop
mov
repz
in
lods
repz
add
fcmovnu
out
cmp
sub
jl
or
xor
or
mov
pusha
mov
lret
out
out
xchg
jns
insb
inc
jns
pop
pop
jle
stc
ret
fnstsw
dec
movsb
call
dec
mov
jb
enter
or
iret
add
dec
je
mov
push
push
add
fisttps
hlt
out
sub
jp
daa
mov
ljmp
inc
aas
dec
cmp
add
add
push
into
cmp
ljmp
outsb
nop
aaa
adc
jl
cmp
pusha
mov
mov
pop
xchg
es
stc
shr
sub
cmc
xchg
sub
xor
mov
insb
out
call
jo
std
ds
incl
adc
pop
bound
sub
imul
or
jns
push
add
add
out
add
arpl
or
mov
and
mov
add
cli
dec
mov
fisubrl
push
pop
add
outsb
sahf
add
repnz
ret
inc
pop
std
out
inc
add
cwtl
orl
push
xchg
add
jno
js
or
jecxz
push
lea
cmp
insl
mov
and
je
and
add
add
js
and
fnstcw
sbb
sub
jnp
movb
sbb
out
int
add
ja
or
adc
dec
mov
mov
xchg
int3
pop
adc
mov
mov
aas
inc
dec
add
sahf
out
hlt
mov
orl
mov
add
mov
rorl
add
jg
lea
push
mov
roll
and
or
sub
lods
sbb
fsubl
test
inc
jge
mov
out
pop
test
repz
lret
rep
pop
out
add
outsl
daa
or
and
jnp
test
repz
in
sub
mov
jg
repz
and
mov
add
add
sbb
out
imul
and
mov
pop
jmp
inc
inc
cltd
or
in
pop
add
push
popa
out
mov
fistpll
aas
sub
insl
cmp
fistpll
add
lock
jmp
mov
cli
popa
mov
mov
lds
and
jmp
adc
repz
rorl
call
sbb
push
sub
push
push
loopne
call
pop
push
mov
fidivl
call
xor
and
mov
and
mov
push
push
sbb
or
in
movsl
lods
repnz
inc
aaa
sar
call
jne
sbb
testl
call
ret
add
outsb
inc
and
into
fcmovnb
jb
cmpb
je
outsl
ret
sti
xor
scas
loop
add
into
ret
lds
xor
mov
mov
mov
in
mov
inc
add
xor
sbb
mulb
push
push
add
repz
out
sti
dec
call
js
xor
sbb
push
test
add
pop
bound
adc
insl
pop
and
and
lret
xchg
or
test
sub
mov
lea
hlt
dec
mov
stc
add
xchg
cs
push
lock
mov
hlt
pop
add
aam
mov
les
sub
clts
dec
add
mov
xchg
mov
cmpsl
or
pop
mov
mov
sub
mov
sub
mov
add
repnz
sbb
mov
jge
xchg
mov
fisttpll
cmpsl
add
hlt
lods
or
aad
lods
fnstenv
pop
push
push
out
mov
mov
xchg
jne
mov
and
call
jg
repz
mov
repz
jl
je
lock
add
xor
xchg
sahf
testl
add
add
xchg
and
lea
sub
shr
push
xor
lods
push
lahf
or
inc
mov
pop
mov
pop
or
adc
add
mov
cmpsl
mov
cmp
daa
add
fdivr
call
add
mov
add
mov
mov
mov
add
ss
leave
stos
jae
jecxz
mov
mov
pop
push
sub
dec
xor
call
mov
mov
call
lret
sbb
mov
pop
stos
sbb
push
bound
push
push
ret
loopne
mov
ret
push
fcmovb
sbb
jae
pushf
insb
inc
mov
repz
xchg
inc
clc
pop
call
cmc
cmp
add
add
sub
add
jne
cld
push
push
mov
mov
clc
cmp
jne
inc
dec
jmp
data16
stc
fists
xorl
stos
mov
add
push
andb
push
lea
dec
ljmp
mov
bound
mov
insl
add
xor
dec
mov
jo
add
add
fimuls
andb
idivl
movsl
mov
pop
xlat
sub
push
pop
add
in
jns
or
test
pop
jmp
pop
call
mov
xchg
add
and
cmpsb
xchg
adc
bound
jmp
arpl
mov
scas
mov
and
je
cmpsl
repz
sbb
mov
out
mov
lret
pop
xchg
pop
xchg
repz
cld
lahf
cmp
inc
repz
icebp
xchg
adc
popa
sub
push
stos
add
inc
sub
and
adc
pop
mov
mov
mov
mov
cs
push
fdiv
push
repz
rclb
mov
push
adc
sarb
mov
orb
add
pop
ret
idiv
push
add
lds
jbe
adc
aaa
sbb
mov
cmp
push
jbe
adc
add
jbe
or
mov
sbb
jl
add
or
mov
sbb
jle
inc
mov
std
outsb
sbb
fmuls
mov
push
bound
repz
js
push
mov
push
push
sahf
jne
jmp
jbe
inc
adc
ljmp
mov
add
jmp
mov
sbb
loope
push
add
ljmp
inc
arpl
ljmp
out
testb
out
mov
pusha
mov
push
jns
call
mov
add
add
jne
inc
mov
lock
in
in
cmc
add
cltd
inc
lock
notb
mov
adc
outsl
rorl
cmc
lea
push
dec
push
call
sub
add
arpl
ret
push
mov
push
adc
std
push
mov
adc
dec
aam
jle
add
xor
push
pop
adc
push
adc
add
xchg
push
aaa
test
mov
xchg
mov
in
cmp
add
add
inc
xchg
pop
adc
fwait
add
mov
xchg
jns
jno
or
xor
roll
mov
imulb
std
xor
jle
insl
ljmp
mov
xchg
and
mov
dec
or
pmuludq
cwtl
cltd
shll
sahf
psubw
sub
sbb
add
dec
repz
fs
stos
stos
lret
jmp
push
jns
jmp
xchg
pop
cli
ret
in
pop
fcompl
jle
adc
iret
jecxz
sahf
ret
mov
in
lret
out
out
adc
push
jno
xchg
shlb
pop
test
rep
mov
or
lret
add
jne
push
add
repz
pop
sub
xchg
repz
and
sub
add
stc
insb
cmp
sbb
testb
adc
sbb
add
mov
sbb
mov
mov
push
icebp
shlb
or
mov
dec
add
mov
rclb
add
add
sbb
mov
lock
pop
mov
shlb
cmp
jae
test
cmp
pop
mov
push
and
out
pop
xor
std
dec
push
pop
fstl
repz
push
pop
int
call
jne
popa
adc
fwait
inc
incb
pop
call
icebp
adc
jg
cmp
add
add
icebp
call
push
jle
ljmp
pushf
inc
inc
dec
pop
leave
popa
jmp
push
leave
out
jbe
out
aam
xor
mov
and
add
xor
or
xchg
or
arpl
mov
sbb
mov
xor
mov
and
add
xchg
jl
mov
pushl
sar
cmp
add
dec
fsubr
push
pop
dec
mov
ja
add
pop
and
and
xor
aas
mov
jg
cmc
aas
mov
add
jo
jmp
stc
mov
adc
cmc
mov
nop
or
jg
out
aas
mov
stc
add
cmp
add
push
lar
stc
ret
pop
push
add
lds
cmovl
mov
inc
mov
add
repz
xchg
push
out
mov
adc
repnz
mov
call
adc
movsl
out
dec
sbb
mov
nop
jp
pop
nop
movsl
jo
add
int
nop
stos
aam
mov
or
jmp
sbb
add
lea
sbb
imul
jmp
push
jo
add
pushf
jne
inc
add
adc
gs
add
dec
push
xchg
adc
adc
dec
adc
jmp
push
mov
fs
scas
sbb
std
cld
jmp
mov
xchg
ficoml
adc
xchg
jge
scas
in
adc
nop
add
stc
push
call
pop
sbb
jmp
lcall
pop
call
ljmp
arpl
add
orl
sub
idivl
sub
xlat
es
testl
je
xor
scas
std
jmp
mov
cld
sub
add
and
stc
push
and
add
inc
mov
cld
lock
add
sbb
movb
std
push
out
or
add
imul
pop
and
stc
mov
mov
adc
mov
std
mov
nop
inc
or
sbb
jne
test
mov
cmp
sbb
out
sbb
add
rcrl
mov
sub
lds
ja
in
aas
mov
mov
add
add
add
mov
add
mov
jl
xchg
xchg
mov
adc
jp
sbb
add
mov
jl
xchg
stos
enter
push
adc
push
push
jmp
jb
or
call
repz
out
mov
mov
add
repz
mov
add
add
int
xchg
mov
out
xchg
add
mov
jle
pop
aad
mov
hlt
cmp
cli
dec
movsb
cmp
sbb
fucomip
push
rep
inc
cltd
out
mov
mul
jg
repnz
or
out
add
repz
insw
repnz
test
hlt
jl
cmpsb
jnp
xlat
add
leave
adc
mov
xchg
jo
add
add
or
or
xchg
add
and
das
sub
aas
call
es
or
pushf
insl
adc
jno
incb
test
out
mov
add
sbb
std
je
sbb
adc
loope
orl
insl
jb
std
jmp
jge
add
mov
std
mov
add
add
and
adcl
mov
and
mov
repz
popf
add
xchg
std
jmp
clc
add
call
insl
std
imul
cmp
cld
test
mov
mov
jg
push
mov
jmp
mov
or
jle
jmp
add
add
repz
pop
imull
enter
jecxz
add
mov
std
jne
cmp
mov
int3
pushf
adc
add
pop
out
enter
cmp
xchg
cwtl
push
lcall
sbb
jmp
clc
pop
incl
jg
add
sbb
cmp
xlat
ja
xorb
xlat
sub
fmuls
add
aad
sub
sbb
add
cmp
shll
sbb
pushl
dec
pop
cli
sbb
jmp
repz
xchg
xchg
hlt
bsf
repnz
inc
push
cltd
xchg
add
out
jg
outsb
add
push
out
mov
add
add
add
add
add
out
addr16
cs
into
es
dec
push
add
or
out
mov
mov
pop
cmp
ja
add
or
call
sub
hlt
out
mov
mov
mov
jbe
repz
hlt
and
add
cwtl
jo
cmpsb
mov
shl
cmc
std
mov
jo
jg
add
add
push
jae
pop
mov
push
mov
addl
jp
fchs
ret
or
lock
call
sar
call
mov
inc
add
or
je
lahf
or
ds
sub
sahf
pop
push
std
ret
and
repz
jp
hlt
cmp
add
mov
sbb
out
or
push
jecxz
pop
mov
out
add
mov
out
add
pop
loope
jle
out
add
ret
lock
dec
lock
mov
add
pop
scas
mov
fsubs
std
pop
lock
lahf
je
sbb
out
xor
add
add
scas
mov
cwtl
and
add
cmpsl
xor
je
cmpsb
add
test
adc
pop
mov
xchg
shr
iret
lock
adc
adc
sbb
add
mov
add
mov
je
testl
mov
cld
add
fnsave
add
div
mov
add
cmp
sbb
mov
cmp
inc
mov
inc
cld
adc
filds
and
add
into
inc
clc
jbe
push
add
or
mov
fwait
out
adc
mov
dec
or
add
test
xchg
jle
push
scas
pop
dec
rep
ret
push
out
add
std
adc
push
icebp
push
inc
outsb
icebp
mov
enter
add
loop
jle
repnz
insl
dec
fwait
out
mov
and
int
decl
or
out
mov
call
mov
lds
movl
in
popf
mov
insb
testb
lods
adc
sbb
or
jmp
add
add
clc
call
mov
call
add
jmp
ret
or
in
pusha
mov
sub
cli
clc
push
mov
icebp
or
xchg
icebp
push
ljmp
or
mov
pushf
mov
add
hlt
add
sahf
or
inc
sti
mov
call
mov
pushl
in
add
push
add
jecxz
add
repz
std
mov
dec
push
mov
add
repz
jne
arpl
xchg
or
sub
call
xorl
push
push
pop
out
add
arpl
adc
push
sti
adc
push
push
sti
sti
add
mov
jae
add
add
dec
test
in
js
add
jmp
test
add
jg
push
push
mov
xor
lods
push
cmc
mov
cltd
cli
in
repz
xchg
sbb
add
sub
mov
je
sbb
and
jp
leave
dec
xor
decl
pop
and
pop
loope
ret
mov
add
stc
in
sahf
lahf
repz
sbb
clc
pop
cli
lret
repz
divb
mov
adc
or
xor
es
daa
add
lock
decl
jecxz
ret
aas
cmc
add
bound
out
fs
push
shlb
fimull
sub
jl
add
clc
ja
dec
repz
xchg
out
or
mov
pop
mov
daa
call
cltd
mov
cmc
mov
inc
inc
mov
mov
iret
add
mov
test
aad
lahf
sbb
add
iret
add
adc
call
cmpl
pusha
or
call
dec
cld
add
imul
flds
mov
in
pop
popf
push
xor
dec
sbb
cmc
mov
test
stos
jecxz
xchg
lea
push
fcmovu
inc
loopne
dec
repz
push
inc
stos
ret
push
adc
jg
add
fwait
jnp
test
ss
push
adc
shll
mov
fstps
movsl
sti
and
jne
lock
lock
add
repnz
mov
lock
mov
sti
adc
fldl
test
lock
pusha
out
xor
add
dec
push
mov
mov
aas
add
push
idiv
sub
rcrb
mov
pop
shrl
and
xor
out
add
xchg
mov
cmp
arpl
adc
or
or
inc
add
or
add
adc
push
or
dec
std
lahf
adc
jae
pop
push
push
fidivrl
inc
add
pop
out
std
adc
dec
mov
fs
pop
std
cmpsl
or
inc
mov
insl
aaa
or
and
loopne
testb
insl
and
nop
les
hlt
cli
dec
or
orb
add
add
lods
paddsw
popa
inc
mov
add
out
int3
fldt
add
jmp
clc
xlat
iret
clc
clc
xlat
call
call
cld
fisttps
arpl
das
add
mov
bound
jmp
stc
xchg
xlat
clc
jle
out
clc
jbe
out
push
mul
lret
cmovp
jb
aas
or
stc
filds
shlb
test
add
outsb
sbb
push
add
mov
cmp
jle
xchg
test
adc
mov
mov
imul
jecxz
ret
movsb
mov
push
icebp
mov
test
in
std
pushf
test
inc
jmp
xchg
cld
push
ss
lahf
mov
mov
or
adc
add
add
orl
xor
repz
adc
js
add
repz
add
popa
inc
lea
mov
repz
mov
xor
cmp
dec
lea
push
lcall
hlt
inc
add
xchg
les
add
mov
mov
push
lock
fcoml
or
movsb
ret
out
repz
test
add
sbb
add
or
in
das
rolb
push
mov
clc
mov
aaa
sti
pop
xor
or
add
repz
adc
mov
sub
add
fcomi
add
insb
jmp
add
cli
push
call
adc
in
inc
inc
mov
xchg
ds
lcall
cld
test
add
jge
fld1
jo
add
and
and
into
test
or
inc
mov
out
std
mov
add
cmp
add
std
adc
or
inc
xchg
or
jae
sub
hlt
jbe
cmp
add
into
and
int
sbb
push
dec
repz
xchg
clc
scas
or
xor
mov
mov
or
inc
mov
jno
bound
out
leave
out
aas
or
icebp
out
xchg
repz
mov
inc
pop
mov
out
mov
lods
inc
sbb
add
mov
insb
sar
out
adc
xchg
add
mov
addb
fdivrs
jo
mov
out
jae
dec
sub
imul
add
scas
hlt
out
jb
add
repz
jne
mov
aam
mov
repz
xchg
inc
xchg
push
xor
gs
cld
jmp
mov
inc
xor
pop
mov
rorl
repz
test
test
xchg
push
fadds
and
push
lods
xor
adc
add
dec
orl
insl
inc
or
jo
adc
push
adc
mov
push
adc
add
je
add
lock
ret
add
test
add
sub
lcall
sbb
fdivs
add
test
testl
push
sahf
add
inc
add
dec
adc
lock
push
je
jne
cld
jae
push
push
pushf
fisubrl
lock
aas
jg
int3
popf
add
mov
lret
lea
pop
inc
cmc
xor
jg
pop
add
push
shrb
inc
ret
js
call
mov
dec
repnz
inc
add
cli
clc
call
add
push
pop
pop
mov
fnstcw
or
mov
jo
push
push
insl
js
movsl
push
pop
push
dec
or
push
mov
mov
je
cltd
js
jne
or
lret
pushl
xor
jb
jo
mov
add
out
scas
push
xchg
lfs
frstor
jo
push
xor
fs
repz
push
mov
cmp
dec
lods
sub
add
repz
mov
testl
add
ja
sti
push
mov
outsb
adc
cltd
in
leave
loop
mov
fs
test
inc
ds
das
mov
das
test
jb
jo
mov
inc
addl
adc
test
mov
cltd
mov
test
xchg
mov
add
popf
xchg
dec
cwtl
mov
sldt
add
sbb
scas
mulb
xchg
ljmp
or
cld
sbb
ret
repz
mov
inc
dec
adc
add
cmp
mov
jl
out
rol
pop
sbb
movlps
shlb
xor
jae
out
and
repz
jl
ret
nop
sbb
mov
mov
ss
inc
popa
cmp
cwtl
fs
sbb
js
dec
xor
sbb
sub
jb
clc
jl
sbb
cmp
cmp
lds
jne
addr16
cmp
lahf
hlt
push
mov
outsb
in
lods
mov
add
mov
fsubrs
add
add
hlt
add
add
add
mov
sti
adc
loopne
or
in
movsb
push
out
sub
xchg
xor
mov
add
mov
pop
inc
js
add
push
add
push
push
mov
inc
add
in
cmp
sahf
or
sarl
out
mov
fstps
dec
out
xor
mov
pop
ret
dec
stc
push
insl
jae
mov
push
or
pop
test
push
xor
or
mov
cmp
std
jne
push
push
shll
les
shll
inc
mov
cwtl
push
push
xor
fcmovb
or
or
dec
call
or
mov
push
mov
hlt
lcall
divb
in
jns
scas
inc
cli
scas
out
mov
jp
out
lret
jle
mov
jp
or
in
scas
notb
clc
cmp
les
jecxz
ja
not
das
cwtl
mov
xorb
add
hlt
push
ja
push
adc
out
cmp
mov
dec
sbb
mov
sub
add
mov
pop
xor
mov
jne
add
mov
add
jne
mov
or
and
pop
xchg
mov
lock
jmp
pop
xchg
idiv
insb
leave
sbb
fcmovne
or
sbb
add
push
std
cld
xchg
push
in
mov
dec
call
push
and
or
cli
pop
pop
movsb
push
daa
out
add
add
add
shlb
lea
mov
add
iret
or
jne
clc
decb
sti
push
mov
in
ja
divps
std
mov
stos
std
pushl
xor
lods
test
or
jbe
in
cmp
mov
jle
mov
cld
pushl
xor
add
add
push
insl
add
mov
push
pop
lock
decl
or
addl
leave
push
js
pop
pop
adc
jg
adc
int
cmp
les
inc
cmp
dec
inc
mov
push
gs
inc
add
add
test
cmp
inc
add
mov
adc
add
add
mov
add
inc
add
mov
cmc
mov
add
decl
push
mov
test
add
ja
mull
clc
call
rclb
ljmp
repz
ret
push
mov
cli
or
daa
pop
jmp
ljmp
outsl
rcrl
fdivrp
bnd
jns
mov
jl
mov
push
jmp
pop
ret
jmp
adc
rorl
cmc
jmp
js
repz
aas
enter
and
jp
mov
jbe
out
cli
jle
scas
jmp
jnp
mov
adc
push
dec
pop
mov
into
sti
add
mov
pop
jne
push
je
add
add
repz
mov
cld
mov
inc
jmp
xor
cld
jmp
repnz
ret
jmp
loope
jbe
pop
jns
in
mov
push
pop
push
pop
add
mov
cltd
jae
jmp
sbb
cld
cmpsb
jns,pn
out
xrelease
sti
add
fyl2x
pop
add
mov
add
xchg
popf
hlt
add
add
add
hlt
jmp
loopne
and
js
jle
out
xchg
mov
push
mov
jo
and
inc
cmc
add
and
push
inc
jecxz
pop
lock
add
and
stc
paddb
and
aaa
add
sbb
add
jge
xchg
sbb
jge
and
mov
aad
inc
mov
inc
sarl
adc
mov
fsts
add
or
or
inc
ficompl
mov
dec
jb
in
data16
hlt
sbbl
add
and
push
mov
xchg
roll
push
mov
adc
sbb
jge
sarb
push
adc
add
add
sbb
adcb
inc
fwait
pop
jno
cli
fcmovbe
pop
test
or
mov
add
test
sub
mov
sti
out
cli
mov
ss
mov
mov
imulb
ja
idiv
mov
incl
hlt
call
jg
call
clc
fs
out
ljmp
imul
inc
mov
xor
dec
out
fidivrl
fcmovnb
in
jmp
jg
stos
pop
or
in
xchg
add
xchg
mov
jmp
mov
pop
jmp
mov
out
pop
mov
inc
loope
or
inc
jl
push
rcpps
add
addr16
xor
sbb
pop
cld
mov
js
add
and
out
stc
mov
jne
ss
call
aas
sbb
mov
icebp
loop
fs
xlat
dec
pop
and
mov
mov
stc
add
lock
out
jmp
out
or
add
mov
int
pop
inc
add
push
push
adc
xor
test
out
fnsave
fs
aam
xchg
xchg
pop
adc
je
or
add
add
ret
push
push
mov
adc
out
push
test
icebp
add
adc
js
and
and
lock
add
xor
subb
add
je,pn
add
fsubrs
data16
add
cmpl
sub
lods
mov
add
ret
loopne
int3
sarl
add
pop
and
lea
cmp
pop
lret
cmpsb
out
mov
add
std
pop
pop
lds
dec
or
pop
bound
mov
aam
push
dec
sarl
popa
int3
std
outsb
add
stos
xor
or
add
dec
divb
pop
jo
std
xchg
scas
idivb
mov
outsb
dec
loop
mov
xchg
pop
cmpsb
mul
cmp
loop
cltd
xchg
pushw
xchg
ljmp
sbb
imul
icebp
xor
mov
stos
inc
add
imul
add
fisubs
sbb
in
out
arpl
adc
hlt
jmp
fsubl
ljmp
add
add
add
add
ljmp
repz
ret
mov
ja
fdivl
icebp
mov
sbbb
in
sti
jne
push
jecxz
cmp
sar
jne
ret
cmc
add
mov
out
pop
jecxz
adc
mov
jp
or
xchg
mov
je
or
and
mov
jp
or
sub
xchg
jnp
inc
cmc
call
sahf
mov
lods
testl
or
add
mov
out
ja
call
loope
cld
adcb
push
call
lock
and
xor
and
add
sub
push
mov
outsb
jns
aam
or
cmc
cmpl
add
add
add
add
inc
adc
add
xchg
or
rorl
mov
call
mov
inc
inc
sbb
int
jmp
jp
or
push
decl
mov
inc
or
popf
add
stos
xor
push
fisubrl
test
or
rorl
incl
push
pop
push
cmp
nop
pushl
or
ret
cmp
mov
add
dec
sar
fiaddl
cmp
add
dec
test
popf
xor
push
nop
lods
call
push
cmc
fcoml
sbb
call
mov
dec
inc
or
repz
test
test
add
add
xchg
jne
out
pop
out
sub
in
bnd
shr
fcmovnu
loop
roll
lods
ljmp
call
rolb
mov
test
mov
outsl
out
or
repz
in
ljmp
js
add
mov
mov
xchg
mov
cmp
adc
pusha
dec
inc
pusha
or
mov
out
ss
hlt
lea
cld
and
jmp
sbb
stc
pop
adc
sti
push
aam
rclb
repz
sbb
cmp
inc
push
fs
iret
std
into
fbstp
add
mov
outsl
shll
cmp
pop
lahf
fcmove
inc
pop
mov
inc
fdiv
sbb
add
add
xlat
orb
jl
lods
adc
sbb
mov
inc
push
bound
inc
add
sbb
and
xchg
pop
addr16
insb
ds
adc
jbe
jne
loopne
mov
or
jne
push
mov
mov
jnp
adc
lods
sub
sbbb
jne
scas
inc
jmp
add
add
push
call
jne
jo
in
fcompl
mov
std
jne
jl
push
or
sbb
mov
add
mov
cld
rcll
inc
mov
or
xlat
push
iret
lds
push
push
xor
pop
dec
xlat
add
dec
fwait
xchg
pop
sbb
aas
jb
inc
pop
popa
iret
subl
add
push
xor
xchg
add
cmp
push
add
lds
call
push
mov
inc
cmp
add
mov
nop
jmp
cltd
das
mov
aas
push
ret
and
lock
jne
repz
adc
jmp
adc
les
add
add
add
das
push
or
jp
pop
iret
sub
add
xor
repz
ficoml
fcmovu
pop
out
rcr
icebp
icebp
jmp
shl
inc
sub
xor
popf
ja
xor
cmp
push
jge
call
hlt
push
xor
testl
adc
int3
inc
add
mov
add
add
add
pop
adc
cld
aad
add
fidivrs
repz
hlt
and
mov
xor
cltd
pop
call
mov
je
mov
mov
cmp
dec
aas
les
mov
or
repz
inc
sarb
shr
cli
mov
add
push
stc
push
shrl
jmp
mov
sti
pop
mov
xor
cmpl
add
aaa
add
lock
stc
jne
jo
adc
xor
dec
push
adc
insb
divb
idivb
inc
sti
xor
ja
outsb
inc
pop
cwtl
sub
test
fimuls
adc
loop
pop
inc
testb
mov
add
xor
sbb
push
cmp
dec
mov
push
mov
and
add
cmc
xchg
and
add
mov
sbb
sti
decl
push
cmp
add
icebp
push
adc
cmp
dec
ljmp
mov
test
xchg
sarl
lret
into
loop
clc
adc
jl
mov
add
jbe
dec
dec
test
add
sarl
lret
aad
or
push
fcmovbe
adc
call
icebp
xchg
inc
adc
adc
shll
lds
mov
syscall
adc
insb
sahf
push
out
jmp
jg
add
mov
pop
push
fimuls
xchg
insb
repz
out
inc
sub
add
add
jg
movl
sub
mov
int3
push
mov
xor
loopne
pop
add
not
pop
jmp
xlat
mov
data16
mov
hlt
lods
xchg
lahf
add
jbe
push
or
lret
scas
imul
fucomi
push
nop
je
mov
pop
push
bound
and
and
xor
sti
test
mov
pop
mov
add
mov
add
push
sbb
adc
out
push
cli
dec
push
and
add
mov
jmp
lret
inc
xlat
xor
call
mov
jne
loope
cld
cmp
loopne
loope
ss
cmp
cwtl
add
or
push
push
mov
add
inc
adc
xlat
add
mov
sbb
outsl
repnz
mov
iret
adc
arpl
repnz
push
ljmp
repnz
xor
ja
lahf
push
and
call
sahf
jo
add
bnd
aam
jmp
in
jne
jecxz
ret
lret
dec
push
pop
ss
add
push
jmp
mov
loope
lock
cld
decl
pop
fldl
inc
fdivr
mov
mov
mov
testb
jae
push
sbb
idivl
inc
add
data16
push
cmc
mov
jae
dec
mov
add
lods
mov
les
add
add
mov
sub
arpl
cmp
jmp
out
sub
lcall
xchg
aam
dec
mov
insb
shlb
das
lds
out
lret
xor
rep
lret
movsb
add
inc
pop
aam
xchg
pop
mov
gs
jle
jecxz
dec
addr16
pop
push
mov
push
cmpsb
out
jmp
add
fsubr
shlb
pop
jp
ljmp
and
fisttps
mov
add
push
xor
into
xor
jmp
int
repz
sub
jns
push
add
pushw
push
filds
mov
cmc
je
pushf
mov
push
icebp
ljmp
inc
inc
mov
insb
fnstenv
int3
lods
jle
fnstcw
xchg
mov
cs
pop
or
xchg
add
lods
jecxz
push
ret
sub
mov
jl
jo
xchg
mov
insb
push
loop
imul
xchg
stos
outsl
add
add
lds
lock
ja
lds
and
add
add
add
mov
mov
mov
jne
pop
ret
xor
xor
cld
imul
repz
push
or
add
xor
je
push
adc
xor
cmp
inc
or
mov
cmp
cmc
subl
push
ficoms
and
outsl
leave
call
xchg
pop
call
add
repz
or
add
sahf
xor
xor
sbbl
inc
mov
aaa
insb
pop
aas
or
sbb
jmp
mov
add
sub
mov
inc
mov
shl
jle
jg
add
cmp
leave
lret
icebp
pop
sbb
lahf
and
inc
mov
sbb
std
xor
add
loopne
adc
add
add
lret
xchg
ja
xchg
arpl
or
jns
xchg
xor
adc
ret
daa
add
sub
mov
shll
rolb
sub
inc
mov
pop
xchg
je
add
repz
lret
push
movsl
movsl
fmul
push
jp
sub
lods
insl
test
fdivrs
insl
or
sub
loope
push
aam
xchg
in
fmuls
pop
xor
jp
outsb
stos
pop
leave
insb
fnstsw
cmp
jp
dec
xor
daa
stc
stos
or
ljmp
pop
cmp
mov
pop
add
mov
repz
mov
inc
jmp
inc
mov
dec
sahf
in
jmp
mov
movsl
loop
add
aad
push
aaa
stos
mov
mov
shll
add
add
jmp
jb
jmp
test
mov
xchg
je
fcmovbe
and
push
push
jne
or
imul
insb
dec
fisttpll
push
std
jmp
or
or
push
arpl
mov
call
jg
and
xlat
loop
decl
push
push
insb
add
inc
jecxz
adc
mov
cli
incl
add
add
jne
sub
dec
cmc
lock
cmpsl
ds
call
test
push
int3
faddp
adc
or
push
loopne
adc
std
jne
cmpsl
jo
or
adc
push
push
pushl
pop
leave
icebp
push
mov
mov
fstl
rorb
pop
or
mov
std
ja
out
aas
mov
dec
and
int3
pop
sub
repnz
lret
add
in
pop
js
add
addl
add
add
sbb
dec
int3
adc
popa
push
adc
fistps
repz
int3
pop
sbb
lds
rorl
mov
mov
inc
mov
sahf
mov
test
jge
jo
mov
lahf
sub
or
xlat
lret
rep
push
bound
stos
add
jb
push
pop
fisubs
daa
stc
xor
int3
fsubrl
or
pop
mov
push
cmpsb
fisubs
rcll
add
add
lods
add
push
add
sub
ljmp
loopne
lret
or
into
imulb
ror
filds
cmc
xor
aam
pop
pop
xor
lret
add
xchg
lds
add
aad
or
jae
or
fmul
add
xchg
and
sub
out
mov
and
adc
fldenv
inc
xor
cltd
pop
aam
pusha
inc
xlat
cld
mov
and
cmc
insb
ficomps
shl
cld
or
aaa
std
sbb
aaa
stc
sbb
out
jo
iret
cld
mov
mov
out
dec
stc
jmp
cmpsb
mov
ljmp
nop
ret
sub
add
notl
test
int3
adc
notb
les
xor
xor
mov
push
dec
cmc
and
cmpl
test
sbb
or
fiadds
inc
mov
lds
mov
cld
inc
mov
or
add
mov
cmp
mov
inc
push
pop
dec
xor
add
dec
lea
pop
call
push
or
inc
add
sbb
incl
pop
xor
call
clc
add
add
test
aaa
jb
add
pop
dec
push
bound
sbb
outsb
adc
mov
cmp
add
cmp
pop
inc
pop
lds
push
add
inc
cmp
cmp
decl
pushf
adc
lea
je
pop
pop
jo
xor
mov
or
ja
mov
faddl
add
add
mov
std
mov
push
sub
mov
mov
lock
and
add
xchg
jbe
cmpsl
lcall
das
fiaddl
jbe
dec
xchg
jl
xor
inc
sahf
fcmovne
and
add
cmc
mov
push
mov
hlt
adc
cmpsb
xor
aaa
push
xor
mov
jmp
pop
mov
push
cmp
js
aas
sbb
cmpsl
add
imull
sar
add
ret
mov
sub
ss
add
fistl
mov
data16
cmp
mov
lahf
xor
aam
inc
mov
dec
inc
push
jmp
inc
jl
test
mov
xor
into
cld
mov
add
add
pop
ljmp
aaa
pop
bound
into
cld
out
mov
jmp
jge
cld
fs
inc
sbb
lock
insl
add
xrelease
pop
addr16
dec
addb
push
sti
loop
add
movb
decb
and
pop
popf
sbb
push
cwtl
cmpsb
jl
push
lret
cld
jmp
mov
or
add
add
in
inc
xor
add
push
test
clc
add
pop
or
push
stc
repnz
lea
mov
decb
sub
stc
call
xor
sti
decl
jmp
into
out
pop
push
xorb
add
ljmp
je
add
push
inc
fdivs
fcoml
rolb
add
add
out
cmp
aad
fmuls
les
push
inc
adc
adc
jl
mov
add
and
mov
loopne
fstp
jl
mov
add
sbb
jo
or
loope
addl
add
or
push
add
ja
add
and
jns
fdivr
mov
incb
gs
test
xchg
push
int
loopne
int
sub
jo
les
jle
enter
les
js
dec
iret
js
roll
dec
dec
sub
jle
stos
pop
mov
cld
std
int3
insl
mov
lds
out
testl
js
xor
aas
push
fisttpl
add
push
mov
out
aaa
add
mov
inc
loope
mov
jle
leave
into
cld
ret
jbe
ss
mov
inc
mov
inc
cmc
ror
add
call
sub
push
cli
jns
cmc
push
fisttps
jmp
repz
push
pop
push
outsb
arpl
lea
cld
pop
mov
add
jmp
inc
ss
insb
cs
add
add
fistpl
leave
int
movsb
test
popf
int
push
mov
loope
add
or
add
add
sarb
mov
hlt
add
or
push
inc
in
insb
push
mov
lock
or
or
call
xchg
sub
inc
pop
lock
out
stc
std
add
push
call
lock
leave
icebp
incb
xor
add
add
mov
in
mov
cmp
push
sub
push
data16
adc
testb
adc
and
aam
mov
pop
sbb
xchg
aaa
inc
mov
and
push
inc
and
inc
dec
and
test
add
push
aas
cmp
adc
outsl
xchg
faddl
mov
lock
mov
add
into
mov
xchg
mov
add
mov
dec
push
decl
jmp
and
nop
in
mov
add
int
in
mov
add
loop
or
in
push
push
pop
nop
in
cmp
mov
add
mov
adc
pop
js
out
jl
out
fisttpl
les
psubd
add
add
add
add
pusha
add
xor
sbb
aaa
testb
mov
add
or
outsl
mov
repnz
lret
or
cmp
mov
add
jl
test
push
pop
pop
mov
lods
mov
mov
rorl
pop
cli
push
rclb
add
fldt
mov
dec
cmc
mov
add
add
dec
adc
mov
insb
aas
pushl
and
jmp
loope
fmulp
jb
std
fcomp
cmp
repz
daa
shll
add
and
scas
out
adc
mov
jb
jecxz
leave
mov
jmp
in
inc
jmp
leave
xrelease
xor
inc
shlb
aam
add
add
loope
add
fistpl
outsb
cmp
push
and
inc
test
std
adc
sub
int
jcxz
pop
orl
mov
rep
adc
cmp
push
push
mov
lods
or
incl
lcall
pop
sbb
or
adc
inc
add
mov
sbb
in
adc
aaa
in
add
add
repz
fs
or
xchg
ljmp
push
in
enter
mov
test
adc
add
dec
add
std
push
add
orb
jae
push
dec
adc
faddl
mov
pop
pop
inc
adc
adc
pop
xchg
or
orl
rclb
fcoml
loop
mov
mov
std
cmp
out
mov
xchg
mov
add
sbb
xor
mov
aaa
int3
mov
call
pop
add
jecxz
dec
mov
lock
add
mov
adc
sti
data16
jecxz
and
jmp
lds
jge
add
add
cmpsl
add
cmpsb
out
std
js
ljmp
dec
ss
and
aaa
cmpsb
inc
scas
das
mov
gs
lods
mov
cmpsb
fcompl
cmp
lds
mov
mov
add
movups
xchg
call
icebp
repz
pop
dec
cltd
sub
call
add
sub
lds
out
callw
xchg
fimuls
or
cmpsl
jns
inc
int
jnp
aad
stos
mov
push
or
repz
add
and
pusha
mov
test
mov
enterw
mov
decb
clc
adc
and
or
pop
movsb
xor
pop
movsb
xor
add
add
push
add
and
add
fbld
and
or
add
jbe
and
inc
add
jecxz
addl
stos
cmp
stc
je
jp
and
pop
push
lcall
movsb
sbb
lods
pop
add
mov
aaa
add
lods
out
cmp
scas
ljmp
lahf
shll
lcall
add
add
ss
es
add
and
and
je
xchg
mov
mov
data16
sbbb
mov
hlt
xchg
inc
cmpsb
rorb
or
and
adc
or
aaa
mov
add
mov
js
popf
push
inc
or
dec
add
dec
push
or
pop
lds
je
push
aas
sbb
mov
lcall
cmp
add
adc
push
or
out
add
ss
outsb
loopne,pn
and
sahf
repz
xchg
ret
popf
lret
ds
in
addr16
inc
enter
leave
rol
dec
stc
in
or
jp
roll
inc
in
add
jne
adc
dec
cs
adc
mov
jmp
add
ljmp
dec
add
sbb
clc
in
jnp
sbb
fs
sbbb
sbb
out
call
xorb
pop
js
in
xor
add
xor
pop
pop
inc
out
push
cltd
xor
inc
loope
mov
out
sub
mov
add
push
insb
repnz
test
add
loop
or
push
in
add
cmp
stc
adc
cmp
mov
add
add
jae
adc
ss
sbbl
outsl
adc
xor
jbe
je
lock
jp
jle
add
sbb
testb
mov
mov
inc
sbb
xor
lea
mov
mov
add
mov
jb
je
outsb
dec
and
add
push
mov
mov
add
add
xor
call
in
call
test
data16
stc
out
pop
mov
xor
mov
xorb
lcall
xorb
mov
and
int
and
movsb
add
jnp
mov
pop
and
xchg
mov
dec
call
repnz
pop
fldl
inc
sbb
push
enter
adc
jle
ret
jl
nop
or
push
test
std
pop
inc
inc
or
aas
or
pop
repz
loopne
insb
loopne,pt
lret
inc
mov
mov
in
mov
outsb
aas
or
scas
dec
mov
outsb
mov
mov
pusha
inc
data16
sahf
call
jmp
inc
mov
loopne
repz
cmpsl
std
mov
insl
sub
ljmp
lds
dec
pop
in
xchg
inc
push
cmp
sub
cmp
mov
popf
inc
add
movb
into
fbld
ja
sub
mov
pop
testb
ds
and
call
push
rclb
jp
add
pop
sub
insb
dec
dec
push
jo
pop
adc
lds
aaa
and
add
add
add
push
jmp
jb
nop
push
test
mov
cld
mov
mov
jge
scas
and
cwtl
test
add
repz
dec
cld
out
cld
add
call
xchg
push
call
rcr
mov
jne
adc
xor
xor
push
adc
rclb
testl
add
add
add
jbe
add
cmp
icebp
call
shll
jmp
cmp
cli
imul
fwait
xorb
cmp
xor
push
dec
xchg
repz
fwait
dec
sahf
xor
decl
ljmp
push
out
inc
mov
ret
push
out
add
outsb
or
mov
cmp
pop
mov
add
ja
add
xchg
lahf
inc
add
add
jnp
or
adc
adc
cmp
lcall
cld
mov
sub
mov
cwtl
jmp
mov
scas
je
mov
add
mov
adc
fwait
add
add
enter
xchg
in
adc
mov
or
dec
pop
inc
jle
popa
add
loopne
adc
or
mov
mov
cmp
mov
jecxz
ret
mov
ss
out
fstpl
hlt
jmp
jge
sub
add
in
add
das
movb
pop
add
outsb
es
add
mov
add
lret
fnstsw
xchg
hlt
xlat
sti
add
out
add
mov
or
fdivl
out
jmp
mov
and
fidivs
dec
sbb
add
inc
add
sbb
pop
stos
xchg
repz
jb
int3
pop
testb
add
pop
xor
jecxz
jbe
pop
cmp
or
repz
inc
adc
out
aam
mov
lea
pusha
xchg
jecxz
add
mov
mov
and
push
mov
std
decl
push
pop
mov
mov
jecxz
push
ret
dec
mov
pop
sub
add
shll
push
add
add
outsl
or
ficoml
cld
fnstenv
out
add
cmp
pushl
push
call
dec
add
je
jecxz
push
fcomi
add
add
stos
je
ret
xorb
test
mov
xchg
out
xchg
out
sbb
decl
stos
jae
popf
mov
add
out
stos
std
or
stos
jae
dec
dec
and
icebp
decl
xchg
xchg
cmp
and
cld
jg
sbb
ja
out
adc
xlat
push
pushf
subl
pushf
push
jl
add
jecxz
mov
mov
ss
cmp
push
fsubrl
inc
mov
dec
das
push
cld
movsl
repz
cmp
add
add
push
pop
sbb
jmp
aaa
outsb
cld
popf
out
aas
cld
sbb
aas
or
inc
repnz
cltd
fldl
insb
jbe
test
cltd
push
gs
cmpsb
adc
push
push
inc
repnz
lret
movsb
test
aas
inc
into
jle
pslld
daa
inc
repnz
cltd
fisttps
aaa
xorb
add
insb
out
enter
push
insb
jne
mov
inc
jmp
jne
cld
gs
ds
stos
mov
cld
cld
leave
loopne
jmp
out
jae
push
push
bnd
xchg
ss
fcmovne
repz
repnz
stos
test
push
jb
int3
jbe
mov
test
pusha
xor
flds
add
add
cmp
aas
sbb
mov
cmc
movsb
xor
xchg
push
jecxz
adc
lret
dec
add
jo
xchg
xchg
aam
xor
pop
mov
push
push
call
push
cld
and
sbb
out
inc
mov
or
fsubl
shll
dec
fidivrs
incb
fs
adc
into
fists
mov
loop
add
and
add
xor
je
mov
mov
or
mov
mov
add
mov
testb
lcall
cmpsb
mov
dec
lret
lcall
adc
lret
pop
mov
or
pop
cmpsl
adc
xchg
inc
add
jg
out
add
add
frstor
je
jno
sub
lret
sahf
fwait
xor
repz
add
inc
and
fdivr
push
pop
mov
adc
pushf
inc
pop
scas
mov
add
cmpsl
rolb
pop
add
xor
cltd
pop
mov
loopne
or
add
inc
fiadds
ja
das
test
loopne
fwait
out
cltd
out
mov
loopne
add
add
or
xchg
call
jle
pop
jmp
sti
add
fwait
cmp
int
jns
ljmp
mov
jmp
into
mov
cli
rcr
mov
jmp
push
dec
sub
push
inc
or
lret
push
mov
call
loopne
es
add
inc
push
dec
adc
dec
ss
mov
add
mov
in
pop
mov
outsb
clc
scas
push
inc
xchg
xor
push
cli
sti
movsb
shll
mov
pop
mov
fptan
and
push
dec
jge
add
divl
sub
xchg
idiv
add
mov
pushf
inc
add
lahf
fidivrl
add
cld
jmp
fs
push
sub
add
add
inc
cld
add
arpl
xor
test
loopne
push
fadd
andb
cmp
ret
cwtl
xor
test
loopne
push
cld
add
data16
hlt
rcll
jl
fcomi
add
and
inc
aas
ja
cld
loope
mov
cld
hlt
std
or
loopne
mov
or
add
xor
mov
test
loope
mov
mul
inc
add
lgdtl
sbb
inc
arpl
add
loopne
add
or
leave
sub
lcall
push
outsl
add
mov
mov
mov
add
fiaddl
orl
adc
add
cmp
stc
out
in
add
push
addl
add
setp
add
push
clc
dec
pop
pop
scas
lods
loopne
lds
add
popf
cltd
mov
add
fidivl
addr16
testb
mov
or
sbb
mull
cmpsb
mov
rcll
or
lret
inc
xchg
js
das
jne
fnstcw
pushf
lods
cmpsb
daa
sbb
cs
cmpsl
jns
cld
inc
mov
cld
or
add
mov
sub
js
lods
in
scas
imul
repnz
outsb
inc
addb
jnp
pop
xorb
mov
mov
sub
adc
sbb
sbb
daa
stos
add
jb
add
lsl
lcall
orl
mov
leave
repz
mov
add
rcrl
cld
cmp
pop
ret
mov
in
inc
mov
mov
or
push
sbb
aaa
das
add
dec
repz
bnd
jno
jo
jl
jmp
xlat
jno
jmp
cltd
repz
xchg
repz
mov
js
add
mov
mov
dec
push
add
adc
cld
inc
add
mov
dec
fsubr
cld
test
fnstsw
add
pushf
inc
or
sahf
jg
jg
mov
hlt
enter
cld
ljmp
mov
inc
adc
js
cld
sbbl
sti
inc
out
mov
add
and
ljmp
add
mov
lock
add
adc
pop
leave
jno
cld
push
sbb
push
mov
lcall
mov
add
and
push
cmpsl
loopne
lret
clc
or
add
add
xchg
mov
sbb
pop
sbb
out
aaa
stos
adc
pop
jne
adc
mov
dec
lcall
ss
dec
lock
dec
or
or
xchg
push
cli
aas
mov
lds
dec
lock
fstps
sub
and
push
ljmp
inc
lcall
repz
inc
mov
sbb
sub
pop
sub
xchg
jge
stos
dec
aaa
cmc
mov
lea
pop
testl
add
add
add
add
and
mov
mov
jmp
aas
lds
jle
out
pushl
nop
pop
xchg
inc
ret
fxtract
jmp
xorl
call
movsb
test
pop
and
call
sti
sti
pushf
and
or
incb
jne
sub
sbb
sar
pop
push
jnp
fiadds
add
add
jmp
gs
pop
add
cli
out
cmpsl
jbe
neg
xchg
mov
xchg
mov
aaa
mov
in
mov
xchg
mov
xor
jbe
xchg
movaps
mov
jmp
mov
mov
mov
add
adc
xor
fidivl
add
mov
ret
aaa
cmc
std
adc
clc
xchg
lea
mov
lods
push
push
add
add
mov
jo
test
std
cmp
add
in
add
call
int
jo
in
mov
mov
lods
out
ret
xchg
jbe
push
pusha
sar
add
xor
push
pop
xor
push
mov
inc
adc
mov
xlat
inc
scas
pop
inc
std
jg
idivb
mov
lea
pop
adc
jb
xchg
jge
cwtl
xorl
mov
cmpsb
das
push
lock
mov
adc
iret
adc
iret
mov
or
pop
test
aad
in
xchg
clc
int
sbbb
arpl
lcall
mov
xchg
inc
out
or
add
cmpsb
or
push
xchg
fwait
psllq
sbb
in
push
stc
mov
stos
add
stos
rcrb
jl
lahf
or
jne
xchg
cmpsl
outsl
pushf
or
push
xor
cmpsb
xchg
emms
and
sahf
push
jae
add
jae
xchg
stos
dec
jl
add
mov
add
jp
xor
jb
mov
mov
aaa
daa
and
sahf
jns
fadds
cmpsb
sbb
clc
vdivsd
mull
negb
cmpsb
ljmp
test
fs
and
rcrb
stc
shll
in
fdiv
inc
mov
mov
fwait
aaa
popa
xchg
mov
xor
mov
testb
mov
std
cltd
add
stc
sahf
cld
and
out
push
je
call
jno,pt
pop
test
add
xchg
pushf
pop
mov
push
cmpsb
cld
cli
dec
dec
pop
inc
inc
mov
jmp
cmp
dec
aaa
add
mov
push
jns
pop
lea
mov
into
xchg
cmp
cld
jge
cmp
test
scas
jne
es
push
ss
push
stc
pushf
dec
mov
stc
sbbl
sar
push
stc
addl
and
add
out
pop
stos
mov
add
jle
or
icebp
add
sti
xor
pop
aad
gs
icebp
push
push
test
mov
add
sub
adc
pop
shlb
repz
fiaddl
shlb
cwtl
inc
ljmp
rorb
mov
mov
xor
addr16
pop
xchg
popf
or
jb
and
pop
ficoml
add
xchg
jmp
add
je
dec
sahf
add
lret
rolb
inc
inc
add
lock
mov
xchg
fwait
or
mov
in
test
add
add
outsl
test
xchg
xchg
cs
xor
jns
out
neg
subl
and
xchg
hlt
arpl
ss
stc
mov
aaa
outsb
add
fisttps
repz
xor
cmp
xor
dec
adc
into
xlat
icebp
fiadds
icebp
ror
jmp
add
cli
pop
pop
xchg
add
pusha
scas
js
pcmpgtw
jp
push
roll
sbb
es
test
nop
push
dec
adc
jp
bound
xlat
xor
cmp
and
test
mov
push
fs
sub
sti
add
jno
cld
ds
mov
mov
xchg
lea
or
lret
pop
cld
xchg
subl
cmp
mov
test
mov
sbb
inc
add
ss
and
cmc
call
lea
sbb
mov
sbb
jp
add
xor
and
inc
xchg
mov
addl
or
incl
add
add
xor
mov
mov
shrb
mov
xor
mov
push
jecxz
push
addr16
mov
fldenv
lret
inc
jmp
data16
or
add
add
mov
mov
pop
jl
cmp
mov
js
xchg
push
sbb
add
add
aam
insb
pop
popf
cwtd
je
std
mov
inc
adc
inc
sbbw
imul
or
int
mov
mov
xor
cmovne
inc
rclb
cld
cmc
lock
out
lock
jp
jae
repnz
movsb
inc
repz
push
mov
xor
dec
xorl
push
repnz
add
adc
orb
in
lahf
mov
mov
outsl
sbb
mov
ljmp
imul
or
xchg
mov
sbb
mov
xchg
decb
fsubrp
or
sub
add
add
repz
or
jmp
inc
imul
je
sub
adc
add
mov
push
push
insb
lret
shll
xchg
loopne
mov
add
cld
jae
mov
sub
jae
adc
xlat
xchg
insb
inc
frndint
mov
stc
push
sti
push
pop
lcall
dec
cmp
jmp
mov
xchg
push
cmp
add
repnz
mov
insb
enter
adc
arpl
cmp
cmc
jle
xor
add
sahf
cld
jmp
mov
arpl
nop
dec
mov
add
jb
add
imul
mov
test
add
andl
or
pusha
out
icebp
add
and
add
add
icebp
add
stos
jne
cmp
cli
leave
and
jbe
push
or
xchg
cli
inc
mov
daa
idiv
push
loop
ret
js
fwait
push
mov
je
pop
mov
ret
iret
and
pop
sar
mov
dec
or
dec
lea
cmc
push
repnz
sbb
cli
loope
mov
add
add
dec
xchg
mov
ud1
cmp
add
test
insb
insl
xchg
mov
and
or
cwtl
pop
std
int
cmp
mov
sarb
enter
add
jg
scas
mov
add
jl
mov
mov
sbb
xor
add
xor
andb
jg
icebp
jmp
fxch
sub
lds
jle
or
add
xchg
test
add
ss
mov
jle
mov
or
repz
lret
loop
pushf
xchg
out
mov
add
repnz
add
adc
lods
pushf
adc
outsl
dec
lcall
xchg
sbb
push
lods
xorl
add
add
aaa
inc
sbb
mov
shr
add
add
mov
sbb
mov
or
insb
fildl
lahf
push
cld
out
mov
cwtl
cld
rolb
jmp
sahf
inc
jmp
or
int3
lcall
sbb
cmc
pusha
mov
add
mov
jno
jns
xor
push
xor
mov
or
es
pop
inc
jmp
add
shlb
add
jno
clc
imul
ret
sub
push
testb
push
test
fidivs
or
dec
testb
imul
cmp
ret
jbe
es
mov
test
cwtl
xor
andl
cmp
mov
add
movsb
addb
add
add
outsb
js
repz
outsb
jnp
inc
cmp
mov
sub
popl
lea
popa
xchg
adc
mov
add
cmovbe
fidivl
inc
call
xchg
dec
add
mov
xchg
dec
jnp
inc
inc
jnp
adc
and
sub
jbe
adc
mov
cli
jnp
mov
xchg
adc
inc
add
adc
dec
cld
jg
mov
xchg
adcl
nop
push
mov
gs
mov
pop
or
or
jle
cmc
mov
nop
mov
adc
cwtl
je
fimuls
mov
nop
rcll
nop
adc
fidivrs
add
iret
add
push
mov
mov
enter
pushl
mov
add
mov
cwtl
sbb
or
fwait
xchg
insl
stos
popl
mov
lcall
xchg
cmpl
adc
cld
outsb
xor
cld
pop
sbbl
arpl
mov
sahf
cld
and
push
lcall
and
add
xchg
cld
jmp
jnp
xchg
shl
sti
cmp
inc
cmc
addl
sbb
mov
out
roll
mov
adc
add
push
mov
mov
mov
leave
pop
sbb
xchg
push
xchg
jno
xchg
mov
add
add
jb
or
mov
test
add
imul
mov
mov
test
out
add
dec
jno
xor
incb
ds
jl
imul
add
nop
rorb
std
incl
xchg
adc
push
mov
std
shll
mov
jecxz
rorl
xor
incl
add
add
sbb
mov
cld
jmp
adc
hlt
pop
call
inc
out
xor
mov
adc
packsswb
xorl
add
mov
scas
pop
xor
cmpsl
sar
mov
and
std
cmp
add
mov
xor
loopne
sub
cmp
inc
sbb
push
lea
mov
xchg
push
pop
push
dec
push
cmp
add
add
mov
or
std
and
xchg
sbbl
std
repnz
rolb
xor
pop
pop
clc
dec
mov
hlt
aad
out
xchg
repnz
repz
cld
or
add
in
pop
mov
jmp
inc
adc
cmp
mov
pop
mov
pop
xchg
inc
mov
data16
mull
sub
mov
jae
xor
call
add
mov
pop
fmul
daa
pop
or
add
sahf
adc
cltd
ss
inc
subb
packsswb
mov
rorl
repz
adc
subl
xor
jb
cmp
cld
jmp
mov
push
push
ljmp
mov
out
add
lret
cwtl
imul
cmc
mov
jl
loope
mov
add
mov
pop
and
mov
lahf
orb
repz
mov
and
jmp
xchg
stc
xchg
mov
add
jns
add
adc
rcll
dec
or
or
pop
lret
imul
jnp
cmp
and
es
jne
sub
add
std
jbe
or
scas
outsb
std
cmp
push
call
out
add
add
mov
ret
dec
mov
adc
mov
xchg
in
into
testb
mov
andl
std
adc
mov
lock
ds
add
movb
in
ret
js
add
push
push
adc
adc
cld
adc
cmp
mov
imul
add
fsubrl
dec
sbb
add
add
dec
cld
mov
insl
das
push
add
push
cwtl
fiaddl
add
add
fwait
add
mov
lock
int3
gs
mov
jmp
xchg
xchg
lods
mov
pop
xchg
or
pop
aad
dec
xchg
jmp
xchg
stos
sbb
jo
insb
fisubs
jg
arpl
ss
pop
and
inc
or
outsb
comiss
pop
mov
jnp
add
add
add
sub
repz
shr
nop
sub
ffreep
fmul
loope
xchg
fdivrl
pop
mov
mov
mov
iret
scas
xor
add
sti
push
mov
adc
ljmp
fwait
sti
lea
out
xchg
dec
push
mov
xchg
or
xor
enter
inc
lahf
addb
aaa
and
iret
push
aaa
and
xchg
push
hlt
add
mov
mov
push
add
pusha
mov
xlat
adc
lret
jmp
dec
xchg
cmp
xchg
push
in
decl
xor
push
imul
aam
mov
outsb
orb
shl
add
dec
movlps
repz
call
pop
jp
jmp
sti
add
cltd
sbb
cmp
sub
clc
jo
in
stos
push
mov
bound
push
repnz
es
push
aam
js
xor
call
xor
xor
das
scas
or
or
lods
xorb
and
fwait
add
jns
jle
mov
add
fwait
mov
jle
add
loop
repnz
in
cmp
dec
clc
adc
loopne
cmpxchg
add
xchg
xor
js
leave
jnp
mov
loopne
xchg
lds
add
fwait
or
je
dec
jae
cmpsb
xchg
jae
scas
cmpsb
cwtl
test
fwait
add
out
in
orb
decb
cmc
dec
jp
js
xlat
in
fwait
add
test
jbe
xchg
repz
cmpsl
enter
cld
lods
or
sarl
xlat
stc
js
jecxz
add
aaa
js
xlat
fnstsw
inc
jmp
sahf
xor
jno
mov
loopne
fwait
pop
or
xchg
sbb
jns
add
add
js
testl
ss
jg
push
out
shlb
ret
add
mov
call
insb
dec
pop
or
and
stc
adc
add
bound
repz
ss
aad
xor
jmp
cmp
add
or
ret
xchg
add
sti
push
orl
push
adc
mov
mov
faddl
jp
push
sahf
rolb
les
sub
jecxz
push
call
jp
or
lock
add
add
lods
clc
call
cmpsl
das
jne
mov
cld
add
testl
and
jmp
mov
jl
je
jns
cld
push
sub
add
and
add
cmp
cld
sub
cld
ljmp
cld
decl
xchg
call
push
push
push
test
cltd
rorb
push
add
test
sahf
sahf
add
or
std
fldcw
fldenv
jg
std
mov
lcall
pop
pop
jno
std
mov
xorl
pushf
lock
inc
stc
inc
or
adc
push
mov
pop
mov
pushf
add
inc
xorl
fwait
out
ljmp
mov
negl
add
add
inc
stc
in
inc
pop
pop
out
add
mov
add
repz
or
jge
add
movsl
jnp
addr16
add
mov
pop
jo
and
rorb
and
mov
xchg
imul
enter
inc
add
mov
rcrl
xlat
dec
mov
xchg
in
mov
add
add
jecxz
add
xor
jmp
repnz
mov
mov
add
add
or
xchg
adc
jp
inc
or
leave
xor
jmp
mov
stc
mov
add
push
pop
mov
and
movsb
cmpl
mov
out
mov
jmp
add
xchg
jp
bound
add
fstpt
loopne
xchg
outsl
repz
cmp
add
in
add
or
shrb
push
or
jmp
pushl
mov
rorl
add
arpl
mov
in
jne
pop
mov
jb
push
jo
pusha
add
mov
incl
test
lahf
mov
inc
addl
fsubl
std
jne
icebp
out
lcall
adc
xchg
popf
in
and
jmp
rolb
repnz
outsl
sbb
inc
repnz
add
rclb
mov
lea
add
dec
adc
cwtl
adc
paddusb
add
test
rclb
add
mov
xor
jae
in
incb
jle
lcall
clc
lahf
in
adc
xchg
loope
call
js
pop
int3
aam
arpl
call
fld
enter
adc
add
cmp
aad
push
repz
mov
xchg
popf
jge
test
shrd
jmp
bnd
add
lods
add
movsl
add
repz
xchg
test
jge
test
adc
outsl
push
jg
test
ret
push
jo
clc
mov
add
sbb
jmp
test
ret
add
jg
test
cmpsb
push
add
dec
jg
xchg
incb
jge
jecxz
movb
mov
dec
or
cmc
scas
aam
jg
inc
xchg
pop
mov
and
adc
xchg
push
js
add
adc
push
sbb
gs
cmpsb
xchg
out
loopne
fimull
jg
lea
enter
test
cmp
repz
cld
push
cld
das
or
jmp
add
or
jmp
mov
lods
mov
add
pop
inc
push
mov
inc
add
cmp
cmp
pop
ret
push
push
mov
xchg
test
jbe
push
emms
mov
std
jbe
pop
pop
ja
out
std
ss
jne
jae
ret
add
test
pop
sbb
xlat
addl
fsts
sahf
add
cld
cli
lds
mov
add
xor
xchg
outsl
pop
sbb
sahf
sbb
cld
loop
pop
dec
cmpsl
movb
std
adc
outsb
test
mov
mov
jne
loop
pop
mov
pop
mov
add
pop
fcmovnb
pop
adc
add
pushf
shlb
or
sbb
decb
nop
add
xor
dec
or
add
mov
dec
add
pop
mov
adc
mov
rclb
mov
nop
add
in
std
adc
push
js
dec
repz
faddl
js
lock
adcb
adc
sub
shl
lret
xor
mov
sahf
cmp
push
jo
sbb
xor
iret
cmp
cmp
or
add
cmc
mov
repz
dec
daa
pop
push
cmp
jmp
adc
adc
add
adc
add
int
lret
mov
test
jg
rcrl
in
in
testl
icebp
fstps
test
cmc
int3
xchg
out
hlt
lea
and
push
cwtl
xor
jb
in
xchg
push
mov
inc
jo
in
test
push
fiadds
insb
leave
pop
adc
jmp
icebp
or
mov
jmp
sti
leave
and
sub
push
js
mov
mov
add
addr16
jmp
outsl
inc
or
or
hlt
jno
add
repz
jp
stos
clc
mov
mov
push
mov
add
adc
mov
jle
mov
rdtsc
lcall
mov
test
out
aaa
push
test
mov
lea
test
pop
pop
inc
je
mov
xor
adc
mov
mov
sarl
add
add
adc
add
loopne
jae
in
jg
adc
mov
push
aad
jae
jle
cs
lahf
mov
cmp
cmovge
or
mov
andl
cld
or
ljmp
aad
or
xchg
add
lcall
push
fidivl
jge
mov
or
pop
xor
popf
ljmp
mov
sti
cltd
ret
lret
fimuls
mov
sub
sar
mov
aam
and
add
mov
xchg
mov
jo
insl
js
out
mov
loop
testb
dec
jmp
int3
xchg
push
jb
add
lret
idivl
add
mov
and
add
hlt
sub
mov
dec
jge
cmpsb
xchg
push
xchg
rclb
and
into
jge
cmpsb
xchg
pop
add
insb
sub
jmp
sbb
pop
and
or
jecxz
push
shll
std
jmp
adc
or
pushf
cmp
sub
cmpsl
mov
add
hlt
in
je
cmp
aad
or
hlt
mov
cld
xchg
add
cmp
testl
add
mov
pusha
and
add
out
divb
mov
loope
xor
mov
testb
xor
mov
adcl
pushl
mov
pop
sub
jg
xchg
mov
jg
in
je
mov
jne
cli
aas
or
loop
add
shll
add
add
mov
or
cli
fcmovnb
add
fistl
dec
push
out
leave
outsl
std
add
aaa
mov
insb
std
fimull
pusha
out
jns
std
mov
jo
addl
push
cmp
mov
mov
push
pop
fldcw
mov
leave
sti
pop
rclb
xchg
or
mov
pop
stc
mov
orl
aad
mov
mov
repz
mov
pop
in
jmp
mov
bnd
jle
lahf
imul
sbb
mov
jmp
add
pop
ljmp
mov
xchg
cmc
jns
inc
jns
fcomi
aad
div
fdivrl
dec
or
cltd
jge
cmp
adc
sub
aam
push
sbb
sbb
out
jge
add
icebp
rolb
cmc
test
movsl
sub
mov
je
aam
pop
push
inc
push
icebp
call
popa
inc
call
add
lods
xor
mov
mov
fiadds
add
add
jge
adc
add
add
or
into
ja
out
std
cld
jmp
pop
and
sar
js
jae
out
fmuls
std
cld
jmp
cmp
jmp
fisttpl
pop
xor
or
mov
sbb
lcall
add
add
or
ljmp
add
aam
inc
xor
aas
hlt
mov
je
movsb
xchg
movsb
in
aas
cmc
add
std
adc
lret
je
add
in
dec
adc
jp
ds
adc
mov
js
hlt
jp
jle
std
adc
shll
pop
mov
cmp
inc
push
cmp
add
add
nop
sub
std
notl
insb
mov
add
fbld
adc
push
insb
cmp
cwtl
std
mov
test
daa
imul
loopne
fcoms
cltd
sar
mull
xchg
div
fisubrs
andb
je
popf
stc
repz
jp
loope
push
adc
adc
add
add
pushf
sar
inc
push
xor
test
inc
push
int3
or
xlat
lods
pop
lds
addr16
lds
add
xchg
jbe
lcall
repnz
jnp
testl
clc
xlat
insl
int3
jecxz
mov
mov
clc
inc
iret
adc
cmpsb
daa
mov
adc
xlat
mov
iret
xor
or
add
add
jmp
jl
and
inc
jmp
push
xchg
movsl
push
adc
testb
add
push
mov
cmc
mov
add
fnstenv
pop
mov
in
push
jnp
lea
pop
mov
insl
je
add
movsl
out
rcl
sub
mov
jmp
push
push
std
pop
js
dec
jnp
add
cmpsb
push
jmp
fs
incl
mov
cltd
test
repz
mov
sbb
push
das
or
sti
je
or
xchg
xchg
push
pushl
adc
out
add
clc
loopne
inc
loopne
pushl
adc
or
test
ja
push
lea
pop
xor
add
add
add
add
pop
pop
pop
add
pop
mov
movsl
ret
sti
inc
and
sahf
push
mov
cmc
jne
test
xchg
sti
inc
or
orb
jmp
cmp
cwtl
repnz
paddb
add
and
mov
les
add
mov
shll
icebp
lds
cmp
inc
loopne
fidivrl
mov
outsb
mov
jnp
mov
push
and
pop
loope
in
cmc
pop
jnp
mov
add
mov
xchg
loopne
bound
xor
inc
je
sub
push
cmpsb
addb
mov
shlb
xor
jge
xorb
push
mov
mov
rol
outsl
hlt
jmp
add
imul
ss
rcrb
add
jle
jb
jle
jle
add
rep
add
ret
in
push
push
cmpsl
cs
push
adc
icebp
push
aas
out
insl
jno
dec
js
jmp
add
inc
mov
mov
mov
xor
stc
movsl
jl
rep
cmp
stc
pop
add
hlt
and
adc
vunpcklps
in
incl
mov
out
vphadduwd
jmp
sub
jno
bound
pop
xchg
call
insl
ret
push
lea
adc
mov
rorb
xchg
int
cld
int3
popf
pop
inc
jmp
jno
int3
sub
jmp
and
xchg
sti
aam
add
mov
fdivrl
lods
dec
mov
test
cmp
in
jo
jmp
lret
hlt
mov
mov
add
sti
dec
jno
arpl
adc
add
add
pusha
push
add
imul
mov
insl
cld
push
push
hlt
add
outsl
adc
add
push
call
sub
dec
mov
jbe
js
hlt
add
insl
push
addl
add
jae
cmp
mov
mov
sbb
xadd
cld
jg
xchg
std
inc
xor
outsl
sbb
adc
pushl
je
mov
mov
fidivs
lds
xchg
std
inc
mov
push
add
pop
jae
testb
std
cmp
pop
mov
cld
aad
add
push
push
mov
xchg
ss
add
add
lcall
pushf
cwtl
fs
sub
jo
decl
cltd
stc
cmpb
arpl
jne
ret
jae
fldcw
jge
stc
incb
dec
xchg
stc
adc
push
xor
pop
add
repz
jp
sti
jo
mov
cmp
adc
add
loop
ljmp
mul
out
mov
sub
dec
out
mov
lret
int3
and
add
sub
xchg
clc
xor
add
aad
cmc
addr16
mov
xor
andb
in
idiv
xor
out
mov
adc
sub
or
lret
mov
imul
cltd
lods
in
jp,pn
adc
pcmpeqw
cmp
push
out
cmc
sti
fdiv
pop
inc
jmp
fwait
xor
bound
bnd
outsl
out
push
mov
sti
cld
roll
inc
jmp
test
dec
in
jl,pn
loope
xor
mov
mov
push
cmc
add
sarb
add
icebp
sti
aam
add
add
inc
jmp
shl
or
cmp
jg
in
je
pop
cld
cmp
repz
xor
jne
dec
or
xrelease
inc
mov
dec
sbb
out
cld
pushl
outsl
and
lods
mov
aaa
insb
xor
pop
sbb
jbe
cld
jae
je
mov
jbe
adc
mov
add
add
insb
cld
scas
mov
sub
ljmp
sti
jmp
aas
cld
and
mov
xlat
std
push
cmp
arpl
decl
push
cmp
decl
lcall
ucomiss
or
pop
pop
add
pop
cmc
mov
mov
add
lret
adc
cltd
jmp
xor
sub
movb
lret
add
jmp
les
push
or
pop
adc
leave
incl
pop
dec
div
push
dec
dec
xchg
add
and
or
test
jae
lods
inc
shl
mov
mov
aad
sub
inc
imul
fucomp
bound
imul
ja
jmp
leave
adc
sbb
lea
pop
incl
mov
cmp
out
jmp
mov
pop
ja
iret
push
out
lds
or
mov
bound
jne
movups
loope
sbb
mov
add
dec
out
inc
lret
pop
mov
daa
xchg
or
add
call
push
inc
dec
stos
inc
sub
add
add
mov
fsts
insl
cld
ss
and
outsb
cld
push
or
mov
jne
pop
adc
lret
add
dec
jle
out
push
sbb
in
sub
adc
leave
imul
jmp
add
insl
cmp
frstor
mov
add
add
cld
add
cmovo
aad
xor
jmp
test
ljmp
adc
inc
jae
mov
push
or
mov
add
scas
scas
je
enter
jg
je
movsb
inc
loopne
inc
cmovo
inc
pop
and
hlt
push
mov
inc
andb
push
aam
rorb
jns
add
fdivr
incl
add
add
jo
je
xlat
and
aam
test
pop
xor
add
and
mov
popa
jae
pop
sbb
push
mov
push
pusha
add
ja
cli
aas
mov
aas
jae
or
notb
std
pushf
dec
popa
adc
inc
sar
sbb
add
pop
insl
push
add
pop
clc
loop
pop
std
in
mov
fidivrs
sar
sbb
pop
enter
add
xchg
push
pop
add
pop
sub
jge
aad
mov
mov
std
movsl
ret
add
mov
sub
mov
ret
or
rep
adc
popf
pop
jg
sbb
loopne
addr16
cs
add
jb
push
jnp
out
mov
push
xor
addr16
mov
mov
outsb
jo
push
pop
add
add
add
js
push
addr16
add
icebp
jmp
les
jmp
pusha
mov
jmp
bound
or
stos
sbb
mov
addr16
subb
ljmp
imul
dec
xor
inc
pushl
cmpsb
in
mov
fsts
or
sti
mov
pop
rolb
and
faddl
add
add
inc
jmp
mov
and
pop
adc
and
mov
add
push
pop
adc
xchg
sti
lods
mov
repz
loopne
popa
outsl
dec
fwait
xor
dec
out
add
pop
hlt
pushf
adc
xchg
adc
cld
pusha
ret
sub
pusha
flds
inc
jp
aad
xor
aad
sti
add
std
adc
sub
cmp
fmull
push
pop
cld
push
sbb
push
push
mov
fptan
addr16
jg
push
popa
push
mov
xlat
fs
fadd
mov
fsubr
xor
fsubrs
xor
lock
repz
pop
and
push
stc
lcall
je
jl
jmp
pop
add
sbb
push
push
test
inc
jecxz
std
adc
js
std
adc
push
repnz
lods
pusha
push
pushl
pop
adc
push
adc
enter
mov
aam
jle
iret
add
pop
inc
or
out
push
mov
jmp
fisubl
mov
mov
mov
inc
stos
add
dec
inc
push
add
pop
jmp
jg
repnz
mov
and
mov
ffreep
roll
add
add
ret
cmp
mov
or
sub
inc
pop
je
mov
push
inc
fdivp
call
cmp
fimuls
subl
xor
add
fimuls
add
fs
cltd
mov
adc
stc
dec
jg
outsl
jmp
outsb
push
xor
pop
add
jmp
cmp
xor
xor
sub
bound
pop
movsl
divl
icebp
insl
or
add
sbb
test
out
or
mov
ja
jmp
pushf
cld
dec
cmp
les
or
ds
jmp
ds
cmpsb
fld
xchg
leave
loope
ljmp
ss
jp
adc
mov
xor
mov
jne
mov
or
push
bound
data16
test
jmp
xor
xor
dec
jbe,pt
or
jns
popa
pop
popl
icebp
mov
jbe
push
push
cmc
hlt
leave
popa
out
loop
mov
push
mov
cld
pop
adc
lcall
sbb
push
repz
adc
andl
mov
jmp
shl
add
lret
sub
sbb
adc
push
or
add
inc
push
out
rclb
mov
xor
rorb
inc
pop
stc
je
mov
outsl
adc
outsl
lret
lcall
in
std
push
repz
je
xchg
push
push
pop
jae
add
add
mov
xor
mov
lcall
or
mov
pop
jae
aad
push
je
add
fmuls
xlat
aas
je
int
std
arpl
decl
dec
xchg
iret
cmp
jecxz
testl
pop
cmp
in
mov
addr16
adc
dec
fadds
add
add
adc
add
int3
mov
cli
std
repnz
out
mov
sar
pop
inc
jmp
sub
insb
jno
incl
pop
ljmp
mov
mov
call
ds
pop
push
pop
mov
ret
pusha
xor
pop
jns
rorb
loope
add
in
xchg
shll
cmc
dec
jns
jmp
dec
dec
lock
push
lds
or
jo
dec
mov
jnp
roll
pop
cld
jmp
pop
add
lods
mov
popa
fstps
push
fucomi
adc
dec
mov
sub
scas
in
cwtl
xor
cmp
jbe
lds
pop
xlat
leave
pop
repz
sbbb
cmp
and
aaa
dec
fidivrs
jmp
xchg
pop
inc
jmp
cmp
add
xchg
std
stos
mov
jne
sahf
push
repz
mov
aaa
push
add
movb
mov
pushf
cld
xor
push
push
sbb
inc
and
leave
add
mov
mov
stc
pop
mov
and
add
or
add
push
imul
mov
enter
add
mov
mov
xchg
rcrb
movsb
mov
enter
cmpsb
push
sbb
push
xor
mov
inc
out
mov
push
lods
dec
mov
sbb
mov
out
pop
push
std
push
or
push
int
pushf
cld
dec
dec
or
add
add
inc
decl
pop
sar
nop
or
dec
push
push
mov
dec
xchg
leave
push
std
pop
dec
adc
mov
mov
xchg
pushl
mov
xlat
cmpsb
scas
push
ud0
fstps
xchg
push
mov
push
mov
mulps
cmp
push
std
xlat
or
cmpb
jle
sbb
or
add
add
add
out
mov
outsb
lods
push
pop
pop
mov
mul
icebp
mov
les
into
fstpl
jle
out
push
pop
jmp
mov
bnd
int
pop
aad
lahf
mov
jle
jmp
mov
sub
pusha
or
mov
testl
ja
dec
mov
dec
leave
pop
ljmp
add
add
add
add
lods
leave
pop
hlt
mov
pop
imul
add
shrl
cmc
outsl
outsb
inc
pop
idivb
push
push
and
test
mov
mov
imul
dec
add
icebp
mov
push
add
pop
push
push
rol
push
test
sti
mov
in
cmp
pop
mov
pop
mov
mov
pop
cmp
rcr
pop
jl
sub
jmp
xor
sahf
or
mulb
outsb
xor
lds
xchg
std
inc
xor
push
lcall
push
inc
and
jne
fnstcw
or
lds
push
add
repz
push
ds
std
adc
outsb
mov
adc
push
addl
add
jecxz
outsl
or
pop
add
repz
rorb
or
outsb
fsubr
push
pusha
add
push
pop
out
mov
mov
push
lcall
push
inc
arpl
pop
mov
mov
push
test
out
les
mov
add
ss
add
ret
js
add
mov
add
mov
lret
add
mov
add
lahf
cld
xchg
push
aad
or
daa
js
clc
xchg
mov
popf
pop
rorl
mov
cmp
push
lods
mov
cld
jg
idivb
mov
inc
or
mov
fimull
pop
loope
inc
or
xchg
mov
mov
icebp
add
pop
popa
outsb
stos
jle
icebp
push
cltd
pop
aad
cmp
bnd
sti
pop
xor
leave
pop
ljmp
out
aad
stos
sti
or
or
jmp
outsb
sub
subl
lods
or
push
cmp
addr16
bnd
add
lds
pop
ljmp
push
call
xchg
add
add
dec
add
out
xchg
jb
adc
push
jb
call
mov
call
fldcw
popa
or
or
repz
hlt
flds
inc
jmp
cmpsb
push
cld
jmp
in
jb
jmp
stc
jb
out
repnz
mov
mov
add
dec
loop
bound
add
add
in
mov
insb
dec
lret
jge
jb
push
outsl
insb
add
fwait
call
pushl
jmp
rcrb
jae
test
insb
imul
pop
imul
pop
mov
sub
push
ret
movsl
outsl
adc
cmpsl
std
jmp
repnz
js
push
incl
add
add
ret
lods
mov
jg
cli
lret
jg
cli
repnz
adc
incb
add
jne
je
fdivrl
les
scas
outsl
push
js
ret
out
dec
dec
jo
xchg
hlt
push
pushf
or
lds
dec
roll
fsts
dec
jae
ffreep
xlat
mov
mov
mov
cmp
incl
add
add
decl
mov
shlb
pop
or
pop
add
push
decl
or
add
js
jmp
mov
inc
inc
mov
dec
jae
repnz
pop
mov
jmp
lods
aaa
mov
aad
cltd
pop
ffree
jge
and
add
push
data16
add
add
xor
out
insb
dec
jg
jb
mov
data16
repz
fidivrl
stos
sbb
push
pop
adc
out
sbb
repz
jns
outsb
stc
addr16
sub
add
movsl
xor
scas
icebp
or
dec
subl
mov
movsb
inc
push
adc
and
add
fsts
pop
cwtl
adc
push
incl
and
jl
ror
add
sarb
inc
popf
aad
cld
ljmp
cld
sub
jl
in
mov
call
or
and
pop
rcll
dec
xor
bound
les
testb
jne
jne
jb
or
mov
mov
cs
jmp
ds
jecxz
shll
popf
rcll
dec
push
pop
xchg
stos
mov
add
inc
inc
cmp
bound
xor
scas
sbbb
cmp
jg
xorl
add
and
repz
xorl
xor
mov
mov
mov
add
add
sub
jecxz
rcrb
ret
ret
push
mov
outsb
pcmpeqw
mov
aas
je
jne
cmp
hlt
scas
dec
mov
aam
sbbl
push
and
add
mov
inc
call
aam
sub
mov
sahf
pop
push
lock
fcoms
dec
arpl
pop
test
or
add
add
fstl
dec
std
cmp
int
lcall
or
lret
sub
mov
xchg
aas
or
lods
pop
cmp
es
add
mov
add
adc
jne
in
leave
pusha
jl
add
fldenv
pop
repz
xor
inc
outsb
mov
std
rcrl
ljmp
add
add
hlt
mov
inc
mov
and
mov
dec
imul
jl
pop
out
adc
rcll
insl
inc
cmpsl
out
inc
test
imul
push
jle
iret
in
lret
adc
mov
inc
xchg
add
adc
bound
xrelease
mov
shrl
popl
xchg
mov
lock
dec
push
push
ret
add
jle
xor
mov
jg
jp
mov
stos
sti
push
jb
adc
mov
je
loope
je
icebp
mov
add
mov
in
mov
rcrb
orb
mov
or
fdiv
xor
cmp
cmc
jb
add
repnz
js
aas
lock
lock
dec
jle
pop
pushf
hlt
jmp
loope
mov
icebp
ja
cmp
sub
dec
xchg
push
push
int3
inc
or
pshufw
jg
mov
std
inc
das
leave
aas
cld
lock
cmp
lret
bound
outsl
sbb
sub
jb
dec
mov
add
add
std
adc
mov
lahf
dec
mov
ja
fadd
divl
lods
jbe
xchg
cmp
dec
stos
add
xchg
inc
mov
aas
js
popa
add
pop
add
adcb
add
xor
jp
adc
pop
jb
jne
mov
das
xchg
dec
or
xor
add
add
adc
mov
and
loope
add
push
jns
mov
or
aas
mov
negl
jno
test
xchg
cmc
lods
mov
js
jo
les
fyl2x
jbe
aaa
nop
add
dec
cmc
iret
lahf
mov
js
fcomip
ret
mov
fnsave
repnz
jbe
aas
lcall
jo
jmp
add
add
jle
out
int
and
fldl
mov
orb
jnp
push
mov
mov
add
or
into
add
mov
mov
mov
mov
and
jns
sbb
push
jmp
aam
mov
xor
sbb
cld
scas
mov
add
inc
bound
dec
cld
pusha
push
lock
xor
cld
push
dec
ja
popf
lods
rorl
movsl
sti
aam
in
jmp
mov
in
cmp
or
call
xchg
mov
mov
je
sti
mov
aaa
pop
dec
push
sbb
testl
or
std
jmp
test
fidivrs
xor
out
or
out
arpl
or
in
inc
add
or
cs
push
sub
sbb
stos
xor
movsl
jbe
or
mov
data16
sbb
out
mov
xor
xor
pop
push
push
push
lea
lea
jmp
push
mov
jnp
je
sub
ret
mov
rclb
repz
cmp
add
add
cmp
mov
xor
cld
ja
push
inc
mov
inc
or
xchg
aas
call
ret
xor
cmpb
mov
xor
xchg
aas
incl
aas
pop
xor
inc
or
aad
mov
add
lret
mov
pop
xchg
clc
push
mov
add
dec
xlat
inc
je
cmp
add
add
add
add
imul
add
loopne
in
add
xor
or
aam
jbe
pop
and
lahf
sti
out
sti
hlt
pop
dec
pop
or
mov
mov
lock
mov
push
pushf
mov
jmp
das
pop
jbe
pop
cmp
mov
mov
test
mull
in
test
or
loope
and
les
add
adc
psubusw
shrl
mov
loope
jbe
add
sbb
repz
mov
test
ret
inc
xchg
inc
pop
xor
out
add
pop
hlt
mov
aad
arpl
jecxz
push
sbb
jecxz
stc
std
testb
mov
in
or
cltd
jae
fnstsw
rorl
sahf
xchg
out
jecxz
and
dec
xor
adc
add
stos
xor
pop
jp
cmc
or
insb
arpl
jmp
bound
xchg
sahf
testl
adc
cmp
push
mov
in
jo
arpl
add
xor
in
mov
std
add
add
add
repz
push
scas
int3
add
insb
push
jmp
xor
pop
test
fisttpl
push
add
cld
add
xchg
repz
call
dec
pop
out
inc
mov
shll
lea
jnp
ljmp
pop
mov
add
hlt
xchg
jb
mov
mov
aas
je
roll
cli
fdivr
incl
pop
add
add
pop
cmp
mov
lahf
jae
pushl
xor
cld
ja
push
inc
mov
adc
cmc
mov
cld
xchg
mov
inc
mov
inc
sbb
xor
ds
call
push
add
add
in
mov
aaa
jecxz
mov
or
add
pop
jle
xchg
es
inc
cmc
inc
cwtl
mov
xorl
cmp
cmp
jg
add
add
inc
lret
repz
adc
repz
daa
add
fcmovu
sub
inc
imul
inc
cmc
mov
mov
add
push
pop
xorl
inc
xchg
xchg
aad
or
add
js
cmp
mov
out
adc
xorl
into
ja
sub
jne
lea
or
dec
out
incb
subb
adc
not
in
dec
xor
or
inc
inc
sahf
js
icebp
pop
jns
lds
rorb
add
decl
leave
push
or
mull
enter
add
roll
add
add
js
cmc
flds
adc
inc
dec
push
or
mull
dec
int
scas
test
jp
mov
icebp
ret
add
mov
data16
cltd
sti
addr16
inc
je
add
jle
adc
jb
adcl
ss
or
push
adc
out
jle
std
jne
and
inc
add
clc
push
ds
inc
and
add
out
std
jne
push
les
mov
testb
sub
loopne
push
push
mov
mov
pushl
std
mov
ss
mov
icebp
mov
js
adc
mov
orl
lcall
push
add
cmp
les
add
add
pop
lea
jno
scas
add
dec
lock
iret
cld
lahf
and
inc
mov
add
dec
call
or
push
sbb
push
adc
je
aad
pop
rcll
jmp
mov
xchg
mov
add
push
push
aaa
adc
repz
int3
xor
add
mov
add
lret
jmp
add
inc
xchg
mov
mov
jmp
xor
clc
xor
cltd
fcomip
ret
gs
cmpsb
iret
adc
sub
jmp
xchg
inc
scas
cmp
movsb
adc
mov
jmp
ret
and
repz
cmp
inc
imul
neg
ret
cmc
fsub
mov
mov
in
ljmp
add
add
dec
dec
xchg
inc
add
jecxz
xor
mov
cld
push
mov
pop
call
jne
lret
or
add
das
inc
push
daa
inc
fs
xor
sti
hlt
imul
cld
xor
mov
add
mull
test
jmp
cmp
sbb
dec
inc
lods
call
gs
add
cmpsb
lea
cld
pop
bnd
jns
inc
add
sub
cmc
jecxz
add
inc
imul
xchg
cmp
repz
ja
repz
mov
push
leave
clc
std
mov
jmp
andl
sub
inc
sti
std
jmp
cli
out
arpl
sub
cld
jbe
std
adc
cmpsb
mov
pcmpeqw
fs
pop
leave
loope
add
xor
jne
divb
adc
add
shl
mov
fs
mov
xor
mov
xor
or
push
add
or
adc
xlat
sub
shll
or
xor
mov
mov
in
iret
aas
jae
shll
xor
lcall
or
addl
sar
xchg
dec
adc
jmp
test
cmp
leave
cmp
call
fadds
xor
mov
jno
cmp
mov
into
sub
push
add
add
ret
sub
mov
out
mov
cltd
ss
mov
ret
jne
fiaddl
adc
clc
mov
jmp
xor
adc
clc
mov
jmp
loopne
mov
jmp
sub
mov
fldcw
ljmp
push
subb
xchg
mov
cld
pop
or
adc
mov
push
xchg
jle
pushf
fcmovne
cmp
sub
xchg
push
es
pop
mov
sub
repz
push
test
adc
popf
in
inc
jmp
add
pop
jb
cwtl
mov
aas
fnsave
jb
sti
je
xchg
or
or
add
fcmovne
popf
mov
add
mov
or
push
inc
push
mov
cmp
jbe
jb
dec
in
xor
sub
add
repz
in
imul
sub
inc
negl
mull
shl
push
lea
or
incl
sti
incl
mov
ljmp
push
inc
jae
stc
add
add
add
repz
jne
push
std
adc
cmp
or
pop
aaa
xor
xchg
jb
sbb
mov
jmp
pop
loope
sbb
pop
adc
mov
add
out
mov
std
push
or
cld
ds
je
dec
add
mov
inc
jmp
push
xor
std
push
sub
std
xor
std
xchg
nop
sbb
test
and
xchg
rorb
or
mov
sub
lret
lock
inc
or
loop
xchg
pusha
stos
mov
dec
xlat
cmp
mov
fstl
pushf
mov
mov
mov
and
dec
repz
out
and
lret
pop
inc
movsb
mov
addr16
sti
xchg
andb
mov
mov
jo
mov
sbb
fs
push
jmp
cmp
repz
jle
jmp
loopne
mov
test
push
adc
ret
shll
jmp
adc
cld
out
aaa
xchg
ss
xchg
call
xchg
rcrl
lret
add
add
fiadds
jbe
cld
push
cmp
and
xchg
jb
jmp
sti
sti
dec
fwait
push
jb
inc
xchg
add
jg
jnp
pop
xor
cld
push
pop
inc
cld
pushf
gs
fidivrl
mov
rcrb
pop
xchg
push
and
out
add
inc
imul
loop
out
idivl
dec
into
je
push
add
mov
mov
je
ds
mov
adcl
add
and
push
cld
loopne
push
mov
jg
idivb
push
xchg
add
in
xor
test
dec
push
inc
jecxz
mov
cmp
dec
push
repz
call
decl
inc
mov
mov
pop
jo
xchg
jnp
xchg
lock
aad
mov
inc
std
jmp
add
jge
cmp
jle
mov
pushf
cld
dec
es
dec
mov
dec
jge
sahf
ficomps
psllw
std
adc
adc
inc
mov
leave
or
jl
aam
pop
icebp
daa
std
in
sub
xchg
sbb
add
inc
xor
cmp
xchg
subb
sub
cmp
inc
es
xchg
imul
andl
sub
ficoml
and
sub
mov
add
loop
aaa
jb
add
push
sub
or
ds
add
pop
jle
jmp
cld
mov
lcall
jno
ret
jp
insb
inc
jbe
mov
xor
add
add
add
rclb
icebp
jmp
jl
aaa
rolb
push
cmp
or
ds
cmp
jmp
jp
xor
add
ss
adc
outsl
push
sub
add
mov
jmp
rorb
mov
lea
cld
push
lret
add
xchg
xor
lret
dec
into
mov
sti
hlt
pop
loopne
jmp
shrl
stc
jle
inc
xor
ljmp
scas
dec
ds
cmpsl
test
adc
xor
push
mov
dec
aad
xor
mov
add
xchg
mov
jbe
leave
dec
daa
push
pop
adcb
mov
or
lock
push
xor
add
std
adc
xchg
mov
add
push
je
pop
add
fstpl
arpl
push
decl
push
inc
xor
push
jns
push
decl
add
inc
repz
jne
xor
or
loopne
jae
sbb
push
push
dec
out
adc
insb
shll
adc
and
std
mov
push
sbb
fdivrl
add
mov
mov
sbb
fxch
mov
lods
add
loope
jnp
dec
cmpsl
sbb
sub
sub
test
add
and
add
test
mov
enter
fwait
cmpsb
decb
ljmp
stos
sbb
cltd
fcompl
jecxz
movsl
sbb
xor
add
push
iret
mov
dec
add
adc
cmp
cli
or
cli
add
jle
or
jle
pop
add
cmp
push
jl
or
add
pop
repz
std
jnp
sub
sub
push
pusha
add
add
xchg
sub
xlat
je
out
mov
cli
aas
mov
add
aaa
ret
ljmp
or
aad
or
sbb
add
repz
imull
and
or
mov
jb
cltd
daa
xor
mov
daa
and
mov
jo
pop
mov
dec
cmp
dec
test
popa
jp
cltd
push
addr16
out
jb
lahf
add
mov
mov
mov
icebp
jb,pn
sub
jp
fsts
fstpt
push
jns
jmp
outsb
jp
popa
mov
add
les
xor
jmp
mov
xor
jecxz
repz
cmp
sub
mov
inc
add
adc
jbe
pushfw
mov
add
cmp
hlt
add
mov
pop
lock
cmc
jbe
push
movsb
hlt
or
loopne
das
mov
add
hlt
mov
aaa
dec
push
mov
jbe
mov
push
fisubrl
sbb
or
xchg
das
in
or
cmc
or
add
je
scas
std
cld
ljmp
jg
mov
add
mov
or
dec
sbb
add
rolb
add
add
mov
inc
cmp
mov
cmpb
add
repz
add
dec
mov
imul
iret
insb
jle
push
out
fimuls
sbb
mov
sbb
andb
cmp
mov
cld
inc
sub
sahf
mov
in
les
add
mov
hlt
mov
shll
add
arpl
addr16
mov
pop
shll
cmc
sbbl
mov
jp
xor
jmp
inc
push
fiadds
xor
sarl
jp
jmp
or
fidivrl
hlt
jmp
add
add
pop
mov
outsl
rcrb
pop
shl
stos
add
and
ljmp
shr
jbe,pn
insb
add
mov
xor
xor
or
sub
dec
xchg
cli
shr
in
inc
stc
xor
xchg
mov
lea
repz
and
negb
ljmp
and
xchg
pop
or
ss
shr
jb
mov
mov
or
add
or
add
sub
jl
sbb
mov
add
xlat
outsl
sbb
mov
std
jne
stos
leave
fisubs
cld
inc
jecxz
jge
add
mov
into
comiss
jmp
inc
outsl
daa
mov
outsb
mov
or
addl
std
pushl
or
add
xor
pandn
sti
pushl
jae
hlt
xor
lock
es
inc
xlat
std
mov
andl
testl
mov
ljmp
mov
sub
jnp
mov
mov
ja
mov
inc
in
js
xchg
add
cld
lods
mov
inc
mov
mov
jne
xchg
mov
xchg
or
rorb
aas
add
icebp
or
ret
xchg
aas
jae
xchg
mov
jge
testb
add
ret
js
mov
inc
mov
sbb
lea
loopne
cmp
and
mov
add
add
pop
leave
cltd
out
sub
xchg
js
and
sub
loope
stos
push
add
and
leave
imul
scas
mov
aam
popf
lret
nop
mov
cli
data16
and
mov
xor
or
xor
xchg
bnd
sbb
push
sub
add
fstpl
adc
dec
push
and
xor
jmp
pop
cltd
cli
cmpsb
test
mov
xchg
mov
mov
loope
push
fisttpll
jno
jmp
shrb
add
mov
jmp
rorl
push
aad
rcll
pop
jl
pop
cld
mov
jo
icebp
xchg
pop
xchg
mov
jns
inc
fnstcw
sub
xchg
stc
jo
add
mov
jge
repz
shr
add
out
xor
xor
add
fidivrs
cmc
add
repz
add
loope
std
ja
shll
pop
and
mov
ja
or
xor
out
add
dec
inc
stc
decl
inc
mov
inc
sbb
mov
clc
xor
inc
inc
push
cld
imul
add
orb
shrb
pop
addl
mov
cld
jae
dec
adc
mov
je
aas
je
out
sti
sbb
cmc
add
jge
enter
rolb
lret
jns
or
sbb
subb
lea
mov
add
or
or
lahf
sti
inc
mov
jnp
sbb
or
fsubl
mov
mov
jg
ss
sub
or
decl
pop
lock
add
std
adc
aas
mov
sbb
add
hlt
adc
fistpl
and
iret
pop
daa
jae
add
mov
hlt
cld
adc
stos
femms
addb
mov
std
pop
mull
push
shll
lahf
aad
andl
pop
pop
shrb
cli
lods
std
shll
wbinvd
lock
lods
cmc
xchg
iret
mov
or
xor
sbb
out
xchg
stc
sbb
push
cmp
call
inc
push
fiadds
push
mov
shr
push
or
add
mov
jg
mov
cld
loopne
sub
dec
and
ror
cld
rcll
in
pop
push
test
aad
repz
mov
out
or
mov
lds
add
mov
mov
jl
add
movsb
sub
fsts
daa
and
jp
inc
jl
mov
lahf
sti
movsb
insb
mov
pushf
es
jb
fcmove
out
scas
daa
test
jno
mov
repnz
fs
mov
sbb
clc
or
stos
sub
mov
xchg
sub
loopne
mov
mov
push
test
jecxz
mov
pop
inc
outsb
push
std
incl
add
jecxz
inc
mov
add
mov
mov
add
adc
pushl
scas
add
jne
lcall
test
mov
add
push
pop
jo
out
add
mov
sbb
or
pop
call
or
pushl
xchg
aas
je
pop
sti
sti
sub
testl
test
or
sbb
cmpb
mov
add
add
ret
or
fcoml
popl
sbb
sbb
loopne
and
add
out
cmp
mov
add
lcall
sbb
rcrb
push
test
addr16
add
fsub
mov
shll
mov
or
mov
out
inc
or
xlat
sub
add
add
add
add
pop
dec
mov
repz
add
test
cmp
jns
fwait
xchg
andl
xchg
sbb
js
or
or
add
mov
add
icebp
xchg
lret
mov
or
xor
sbb
jecxz
mov
and
bound
inc
test
sbb
xchg
xchg
cmpsb
sbb
leave
sti
xchg
pop
pop
jbe
jo
or
mov
xor
int3
add
jmp
subb
into
adc
loop
hlt
clc
imul
inc
mov
mov
dec
call
inc
inc
or
push
hlt
shrl
je
add
and
pop
mov
jbe
decb
add
repnz
fmull
xchg
repz
add
add
rcrb
mov
jl
inc
add
add
stc
clc
orb
jp
clc
cmp
mov
xor
mov
and
mov
mov
adc
daa
mov
jo
add
in
adcl
dec
sbb
hlt
andl
cld
pop
packuswb
hlt
pop
fsubl
cmp
ljmp
sub
test
mov
pop
test
xor
pop
pop
addb
add
jge
int3
add
jmp
or
lock
add
xchg
add
mov
adc
or
add
ds
lret
cmc
sub
add
add
xchg
jmp
adc
or
add
mov
xlat
adc
jp
incb
lcall
sbb
fstp
je
in
pop
insb
push
mov
repz
and
push
mov
ja
xchg
icebp
lods
rep
sarb
or
or
jle
movsl
sti
sub
cld
pop
aas
imul
rorl
leave
jge
insl
cmpsb
and
lret
pop
mov
sti
cmp
xor
subl
insb
jmp
repz
mov
repz
mov
scas
push
outsb
sbb
xchg
xchg
mov
call
fs
lock
xchg
push
cld
add
or
add
add
add
or
aaa
scas
and
test
dec
push
jl
push
adcl
insb
out
movsl
int3
sbb
mov
or
jne
xor
addr16
add
push
sbb
lds
dec
or
jl
xchg
mov
out
mov
inc
sbb
test
notb
mov
add
add
dec
sub
cs
mov
cmc
xchg
cmp
fs
pop
arpl
inc
jmp
push
imul
fcomps
lret
out
sbb
je
push
insb
push
pop
adc
jecxz
or
push
out
ret
cwtl
std
dec
push
les
lret
mov
adc
dec
sahf
and
add
add
call
mov
outsb
sbbl
in
decl
addr16
mov
ss
decb
inc
je
adc
or
push
jo
push
jnp
mov
push
xchg
cmp
xchg
rclb
or
daa
adc
clc
sub
add
add
cmp
or
out
add
add
pushl
rep
shl
and
mov
in
aad
pop
mov
lods
xlat
jp
mov
jno
in
lods
sbb
cmpsb
sbb
dec
push
cmp
sbb
popf
jo
nop
test
add
jnp
sbb
fxch
inc
add
ljmp
sbb
xchg
into
mov
cmp
ret
frstor
loopne
adc
or
hlt
dec
mov
add
sar
roll
ljmp
xchg
jne
mov
call
notb
mov
ficoms
sti
jb
out
xchg
mov
roll
loop
mov
imul
xor
inc
mov
into
stos
out
pop
loop
call
add
leave
or
mul
hlt
xchg
pop
jmp
jae
scas
and
cmpsb
or
pop
fadd
ficoms
inc
sarb
xor
pop
push
jno
repz
in
cld
add
mov
push
je
add
add
ja
dec
cs
sbb
sub
add
push
cmp
ljmp
sub
ja
xchg
or
sub
in
sti
push
imul
std
jl
inc
add
sub
movntq
out
cli
decl
push
lcall
inc
jl
scas
or
decl
nop
sub
movb
add
dec
mov
add
jo
lods
out
js
std
xchg
loopne
jo
cmp
adc
fadds
push
clc
add
gs
sbb
mov
movsl
mov
or
mov
out
xlat
adc
mov
pushf
jo
cmp
adc
inc
push
push
clc
bound
mov
mov
movsl
mov
add
sbb
mov
ds
repz
add
mov
fwait
add
test
icebp
repz
mov
mov
out
repz
mov
dec
and
sti
jge
imul
sub
pop
jecxz
mov
ljmp
push
adc
shll
xchg
lahf
or
or
jmp
add
std
in
call
add
sbb
push
fld
jecxz
pop
fisttpl
jnp
ror
out
insb
cwtl
sbb
out
xorl
out
out
or
jge
cmp
add
enter
inc
rolb
cld
mov
mov
sti
cmpsb
call
sbb
mov
insl
push
sbb
jle
sbb
out
inc
outsb
xchg
je
or
sbb
mov
jns
inc
fiaddl
cmp
in
mov
add
pop
je
sbb
imul
std
add
add
lahf
jbe
pushl
pop
and
repnz
pushl
xor
repz
pop
inc
push
andl
icebp
mov
mov
add
scas
jne
in
xor
adc
cmp
aaa
in
cmpl
or
jmp
add
mov
in
cmp
ficoml
mov
cld
pop
arpl
or
jmp
sbb
arpl
xchg
mov
or
xchg
cmp
push
push
cmp
sub
add
push
int3
incl
add
add
add
je
push
std
rol
or
inc
or
cmc
add
or
xchg
mov
fisttpll
clc
xchg
push
cmp
or
add
xchg
lret
and
or
or
popf
iret
xlat
pop
mov
std
test
mov
or
jge
stos
imul
std
mov
dec
cmp
or
sbb
or
in
je
insb
add
repz
int3
leave
add
adc
into
fs
add
adc
mov
aaa
lods
call
inc
ljmp
inc
mov
adc
scas
stc
mov
out
push
mov
inc
dec
pop
inc
and
fcompl
jmp
flds
inc
jle
add
mov
add
and
test
mov
add
fildll
dec
neg
mov
mov
push
loop
adc
or
dec
hlt
ror
cld
mov
sub
xchg
addl
pop
subb
xor
call
ds
addr16
adc
aaa
push
xchg
xchg
inc
popa
or
loope
adc
dec
adc
add
je
movntq
in
lcall
adc
cltd
jnp
push
sbb
outsl
lock
mov
fwait
jno
ljmp
rorl
fs
xor
push
hlt
sub
adc
fistpll
mov
add
add
inc
les
addr16
in
lcall
js
repz
mov
cmpsb
sti
addl
aas
and
nop
aas
and
lock
std
jne
nop
dec
hlt
sub
in
mov
leave
call
mov
icebp
pushl
test
std
gs
mov
xchg
out
jge
mov
push
push
xchg
cmp
bound
add
add
ret
dec
xchg
sarb
xchg
es
mov
sbb
fists
fiaddl
roll
or
and
std
push
cmpl
jge
push
rorb
dec
subl
jecxz
decl
test
pop
or
xchg
dec
ja
inc
mov
idivb
movsl
jl
jnp
punpcklwd
add
cmc
int3
push
fcmovne
fistps
add
jg
out
push
les
test
jl
adc
sbb
jge
sti
es
lods
or
outsb
mov
leave
and
pop
ds
mov
or
or
jae
sbb
ja
out
lods
movq
push
andb
jmp
rcr
test
dec
or
inc
loop
jmp
dec
push
or
cld
jo,pn
out
cmpb
sub
dec
int3
rcr
call
mov
cmpsb
mov
out
rolb
and
push
out
std
dec
inc
call
dec
adc
repnz
jbe
mov
clc
aaa
inc
mov
repz
aam
inc
call
or
or
mov
add
mov
push
pop
ljmp
loop,pn
pushl
inc
jmp
and
cs
repnz
clc
add
inc
mov
loop
jmp
mov
mov
sti
mov
out
mov
xor
cmp
in
mov
lcall
mov
push
hlt
sbb
sti
mov
or
add
sub
pop
push
or
mov
dec
mov
xorl
mov
iret
rorl
cmpsb
imul
adc
xchg
mov
test
leave
repz
negb
add
xchg
mov
jge
add
add
cmp
xor
add
add
xchg
pop
jge
jbe
mov
mov
xchg
mov
test
mov
adc
flds
adc
sbb
add
sub
subb
ret
add
and
push
xchg
or
adcl
int
add
jno
or
or
mov
test
and
add
int
inc
or
jmp
or
repz
add
sti
add
push
or
mov
dec
in
add
in
nop
cmp
push
or
or
mov
xor
lock
or
add
or
xchg
add
push
cld
fidivrs
cli
aas
loopne
decl
fs
xchg
mov
cmp
fcmovnb
popa
incb
add
add
out
fs
in
jmp
scas
mov
add
outsl
ficoml
or
sbb
jbe
dec
or
push
mov
popf
mov
mov
movsb
and
mov
xchg
out
stc
out
je
flds
pop
cld
adc
add
add
or
jno
cmc
lcall
aas
and
js
and
lea
add
add
xchg
rorl
push
cld
mov
jmp
push
add
sbb
dec
test
out
or
or
lret
mov
jno
clc
pushf
testb
cmp
je
mov
scas
sti
mov
incb
add
add
add
or
sbb
jecxz
adc
std
andnps
cmp
fcoms
or
or
ljmp
or
sbb
or
hlt
rolb
das
pusha
add
pop
outsb
xor
sbb
mov
push
lock
add
int
push
xor
lea
test
jno
andb
xor
lret
lock
inc
or
cld
push
push
andl
sbb
add
cmpsl
inc
aam
hlt
enter
int
xor
outsb
pop
dec
repz
gs
inc
mov
sub
or
or
cld
xchg
dec
mov
icebp
add
adc
add
add
add
inc
ficoms
mov
jl
dec
jp
pop
mov
into
jae,pn
not
lret
int3
fwait
outsl
xchg
mov
fidivrl
popl
or
jle
mov
or
inc
jbe
lods
lcall
fisttpll
and
and
push
sbbb
and
testb
cmp
cmp
pop
adcb
add
xchg
jbe
mov
xchg
dec
popf
xor
fistpll
sub
xchg
xchg
ja
inc
cmc
add
jne
stos
or
fwait
leave
test
mov
mov
faddl
add
or
out
mov
pop
sub
mov
mov
or
push
and
xor
outsl
sbb
aaa
std
jne
lods
std
jne
add
add
rep
or
mov
call
pop
das
or
add
sub
rorl
pop
std
mov
out
add
mov
sarb
pop
cmpsl
cmc
or
pop
cli
inc
cmp
or
jmp
mov
xor
mov
cmp
push
std
adcl
cld
mov
fimuls
add
je
cmp
and
hlt
jae
pop
sti
inc
jbe
dec
adc
repnz
adc
addb
adc
push
cltd
push
inc
xchg
mov
int
jg
mov
sti
cld
jno
add
movsl
nop
dec
and
orl
and
pushl
xchg
jge
sbb
add
add
adc
testl
jno
pop
scas
mov
mov
inc
cmp
outsb
aam
hlt
icebp
clc
ss
loop
into
icebp
sub
test
xor
or
ljmp
lock
xor
call
ret
out
leave
or
shll
shrb
mov
sub
add
inc
pop
pop
dec
mov
add
add
scas
jne
jae
mov
mov
add
lret
lods
shrb
rolb
popa
inc
pop
lods
dec
inc
xchg
add
jp
les
cli
movb
js
adc
or
inc
cmpb
mov
fidivrs
insl
mov
jo
pop
mov
add
add
jo
push
mov
xchg
fimuls
push
mov
inc
or
cs
or
imull
testb
mov
iret
xchg
bnd
mov
stos
mov
ljmp
add
cmp
flds
pop
je
packsswb
cmpl
idiv
jbe
jb
sbb
xor
popf
scas
cld
test
add
add
jg
adc
cld
mov
add
and
test
jno
cmp
add
push
addr16
dec
jno
add
cs
in
jb
clc
pusha
ds
mov
jle
adc
add
rcl
cmp
out
test
pop
cld
add
adc
add
lds
testl
testl
add
add
add
add
xor
sub
mov
inc
or
or
mov
and
jp
or
or
cli
orb
repnz
cmc
mov
mov
andl
or
out
push
add
sub
cmp
aas
arpl
movsb
pop
inc
adc
or
add
fs
add
lea
hlt
jge
push
mov
repz
xchg
ljmp
decb
or
cli
dec
jae
mov
push
out
ss
add
jns
or
add
jle
jmp
add
outsl
fiaddl
data16
cli
add
or
push
adc
decb
jo
jb
movsb
lds
ljmp
add
jns
or
aas
jle
jmp
add
repz
cs
pop
xchg
dec
adc
test
hlt
xorb
inc
incl
jmp
xor
sti
movsb
xchg
enter
xor
insl
mov
add
dec
out
jmp
mov
mov
repz
push
or
add
xchg
dec
adc
psubd
testb
mul
inc
out
xorl
mov
enter
xor
add
add
inc
sub
sahf
jecxz
ret
dec
add
jmp
cmp
testb
push
inc
or
bound
add
das
in
jg
xchg
sti
cld
out
out
xor
jge
jmp
shrb
inc
mov
out
cmp
in
push
add
bnd
cmp
jmp
add
xchg
mov
loope
cmc
test
repnz
std
lcall
xor
mov
jmp
mov
rolb
loopne
cmp
test
mov
jmp
mov
fs
mov
sub
jle
aas
subb
add
xor
add
xor
rolb
inc
or
dec
add
add
mov
rolb
outsb
fs
mov
xor
jmp
add
into
adc
dec
sub
mov
add
add
mov
out
mov
in
data16
mov
jmp
dec
mov
notb
jae
adc
std
dec
inc
jbe
lods
pinsrw
xor
test
fsub
out
shll
test
mov
out
jmp
mov
outsl
pop
lea
gs
and
jbe
mov
inc
sti
push
ret
jle
push
ffreep
cld
data16
repz
xor
push
jmp
or
divl
jg
out
adcl
repz
leave
xrelease
mov
inc
aad
sbb
or
jmp
push
xchg
jb
imul
add
sti
fs
adcl
adc
add
dec
mov
add
iret
jne
or
add
imul
lcall
std
pop
inc
call
add
mov
cwtl
and
lret
mov
sub
adc
pop
out
jb
mov
cmp
jl
arpl
cld
incl
test
sbb
ljmp
shl
mov
add
add
outsb
aas
and
mov
xchg
mov
push
loop
lret
pop
mov
push
insb
mov
push
repnz
jne
cmovg
jl
dec
test
testb
push
add
mov
in
in
repnz
add
adc
in
jp
xchg
inc
insb
adcl
mov
jns
dec
add
sub
pop
xor
push
or
jae
lea
mov
addl
xchg
je
mov
orb
out
cld
push
dec
out
inc
jbe
inc
adc
jb
pop
cmp
xor
subb
cld
xchg
lcall
shl
cld
or
and
push
dec
out
cld
std
mov
lahf
mov
or
in
es
mov
int
repnz
mov
repnz
add
mov
jbe
cld
cmp
in
test
test
ljmp
lret
outsl
bound
jl
jbe
scas
push
fsubrp
data16
addr16
bound
adc
in
sub
fmull
dec
xchg
xacquire
cmp
or
in
push
and
es
add
stc
push
add
clc
cmpsb
inc
mov
add
adc
push
jg
fdiv
sti
out
in
rol
test
push
jmp
xlat
push
sti
or
cltd
jb
fcompl
stc
sti
jmp
fwait
idivl
sub
js
jle
jno
fstpl
stc
sti
scas
cltd
insb
out
push
mov
mov
sahf
xor
xchg
jecxz
out
or
cli
add
add
cmp
dec
std
lods
sbb
scas
sbb
sti
pusha
sub
add
cmp
add
inc
cmp
mov
out
or
pushl
aas
adc
mov
sbb
hlt
add
movlhps
cli
push
pop
insb
movsb
outsb
out
std
adc
or
xor
out
adc
outsb
hlt
std
hlt
add
fbstp
dec
pop
xchg
jmp
stos
lods
adc
jb
xchg
jbe
std
cmp
add
add
mov
decb
iret
ljmp
xor
adc
mov
add
es
int
sub
adc
in
or
or
jbe
or
jp
mov
lahf
dec
in
inc
xchg
iret
sbb
aas
clc
imul
mov
cld
jge
dec
adc
dec
cld
mov
jg
cld
mov
xor
cld
push
add
xor
mov
prefetch
sub
cld
xor
add
cmpsb
out
push
pop
repz
xchg
mov
cli
cmp
xchg
mov
jmp
aaa
scas
call
les
add
add
jg
fcompl
bswap
out
mov
adc
in
adc
cli
shrl
clc
mov
cmp
mov
jmp
std
inc
scas
leave
add
jo
and
or
jnp
iret
test
call
in
push
js
in
xchg
std
lcall
push
sahf
add
mov
orb
jmp
ret
add
es
sti
insb
leave
addb
idiv
push
hlt
jno
repnz
or
dec
hlt
or
pushf
icebp
ror
jmp
ljmp
mov
mov
icebp
mov
cmp
or
jmp
mov
or
out
imul
out
repz
jne
jbe
sbb
outsl
adcl
aam
or
dec
aaa
testl
mov
iret
jmp
mov
fstpt
push
roll
outsl
sbb
cmp
jne
popf
std
jne
pop
outsl
or
jl
call
jbe
or
jmp
add
mov
inc
add
in
or
lcall
jecxz
test
sbb
divb
incl
add
add
loopne
sbb
cmp
lret
jne
outsb
adc
lock
pop
test
aas
add
fmulp
out
cmp
cld
adc
in
cld
lahf
imul
jne
adc
add
faddl
nopl
add
fdivr
adcb
add
and
xchg
add
add
out
call
and
inc
cmp
add
pop
lock
mov
dec
std
test
repz
xlat
aam
xor
mov
addb
add
pop
fildll
repnz
inc
outsb
xor
mov
repnz
pop
jg
jns
pop
xor
ljmp
jl
add
jl
in
or
ja
cli
or
out
out
icebp
rorb
ret
pop
jmp
ds
sub
or
mov
addl
add
addr16
dec
dec
xorl
cltd
ljmp
jne
xor
pushaw
jbe
out
or
jmp
and
jg
xchg
pop
mov
add
clc
add
xchg
xor
jne
add
or
sbb
jne
mov
push
imulb
mov
loopne
or
and
out
sti
insb
incl
jo
arpl
sarb
and
sub
out
jne
andb
add
idiv
jne
add
add
test
add
scas
cld
jne
int3
out
faddp
fidivrl
xor
out
or
hlt
add
fwait
clc
cld
jmp
or
xrelease
xor
push
adc
mov
fisubrl
hlt
mov
add
pop
cld
add
fisubrl
cmp
outsb
or
movsl
les
ucomiss
sbb
add
dec
stc
mov
sub
push
jge
add
clc
mov
popf
inc
inc
mov
sbb
in
add
cmp
imul
leave
cld
and
mov
call
push
xlat
out
push
jmp
fimuls
test
mov
sti
xchg
jl
jp
xor
add
cmc
mov
sbb
mov
add
call
xor
cld
sub
jb
rep
inc
stos
icebp
jmp
sub
ljmp
pop
jnp
cmpsb
cmp
push
push
sub
repz
jno
repnz
mov
out
mov
out
sti
inc
fidivs
out
sub
movsb
out
sbb
mov
push
in
pop
cmp
jnp
and
jmp
negb
inc
call
mov
push
addr16
pop
lcall
xchg
jp
hlt
or
fnstcw
incl
bound
fisttps
aaa
sahf
sbb
add
jmp
int
sub
test
lock
or
jmp
testl
add
xor
or
ja
lods
pop
test
mov
push
es
mov
in
or
mov
leave
incl
add
aam
out
mov
and
xor
inc
or
je
add
sbb
push
jp
inc
mov
xchg
cmpsb
out
addb
add
xchg
push
or
insl
cwtl
add
mov
sbb
or
cld
sbbb
in
and
add
arpl
in
and
cs
push
xchg
decl
sub
roll
push
outsb
push
pusha
dec
aad
mov
push
mov
repz
loope
ljmp
inc
lock
cmp
aad
add
add
mov
adc
xchg
add
stos
pop
call
mov
in
add
leave
call
imul
adc
jle
add
sbb
orb
imul
js
sub
add
cmp
and
mov
cmp
add
js
stos
data16
xchg
stc
and
add
add
pop
mov
and
addr16
adc
cmc
mov
hlt
test
cmp
rcrl
jle
jecxz
or
sbb
mov
or
jle
clc
or
call
add
ljmp
or
outsb
jecxz
pusha
nop
enter
sbb
jmp
lds
cltd
loop
add
add
ljmp
dec
adc
cltd
inc
hlt
ljmp
pop
pop
and
repz
popf
js
js
test
xchg
jp
mov
mov
lea
sti
jl
or
sar
mov
add
lret
jmp
jb
lea
sti
mov
mov
add
xrelease
rorb
stc
jnp
cmp
mov
lea
sti
inc
jl
je
sub
mov
sub
pop
push
call
jp
std
dec
inc
cld
xchg
test
aad
call
aam
adc
jp
add
jge
je
cmp
ds
mov
adc
incl
add
add
shrb
call
mov
jecxz
cmp
cld
test
add
add
cld
inc
das
shrl
mov
std
jne
jbe
lcall
mov
in
shrb
aam
or
in
imul
scas
jmp
jp
std
mov
loopne
enter
std
pop
loop
push
lock
lock
mov
loop
mov
add
dec
lds
fnstsw
hlt
mov
stc
mov
sbb
mov
gs
jl
mov
jno
cltd
loope
or
ficoms
lret
pop
mov
adc
mov
mov
inc
and
push
inc
and
enter
ret
cld
mov
mov
and
test
cld
lahf
fsub
jb
xor
fiaddl
add
add
repz
ds
cmp
jecxz
add
add
jle
imulb
test
ljmp
rcr
fbstp
loop
or
fistps
cs
sbb
fdivl
subb
outsb
out
cmp
addr16
nop
outsb
int3
lcall
loop
cmp
sub
xor
xchg
outsl
insl
jmp
jle
mov
mov
pop
mov
frstor
jb
aas
cld
xchg
stc
out
in
pusha
or
sbb
je
fbstp
in
mov
inc
insl
pop
pop
clc
mov
adc
add
xchg
movsb
call
cmp
sub
adc
add
pushl
sub
imul
add
jo
or
xchg
and
sub
aaa
pop
and
mov
lret
out
imul
sti
add
jns
and
ja
and
dec
and
call
in
lret
mov
push
jl
adc
div
std
jne
fadds
int3
jle
lods
jnp
add
shll
fcmovbe
mov
scas
or
jmp
cld
decl
mov
ljmp
icebp
in
mov
insb
mov
decl
pop
or
in
movb
sbb
cld
mov
xor
mov
in
inc
adc
inc
adc
push
jb
add
lds
or
add
add
add
faddl
cld
dec
fdivl
jo
cld
aas
out
mov
lods
ds
mov
and
jb
mov
or
es
cld
jge
add
mov
and
arpl
mov
test
inc
jle
mov
in
or
cld
test
fwait
add
sbb
xlat
xchg
js
call
jle
mov
push
cmpsb
outsb
sbb
js
pop
enter
repz
push
add
adc
cmc
jmp
inc
add
adc
mov
and
out
loop
cmp
repnz
test
negb
mov
ss
jbe
gs
push
xchg
fcmovne
pop
mov
dec
ljmp
add
add
add
add
ljmp
inc
push
push
outsb
fildl
cld
faddl
jmp
rcl
fdivr
call
movsl
xor
add
pop
or
or
inc
insl
fimuls
in
mov
mov
dec
sub
nop
ja
or
fdivrp
sub
fidivs
xor
sti
pop
mov
sti
xchg
pusha
or
jmp
mov
loopne
insb
dec
gs
jmp
mov
add
fdivs
std
mov
mov
xor
in
and
add
pop
out
xchg
aad
cmp
hlt
jns
in
mov
outsl
inc
js
sbb
repz
push
out
shr
inc
ljmp
mov
test
add
add
xlat
cld
decl
push
leave
cmp
inc
sbb
sub
rolb
aad
mov
ss
jbe
test
add
or
mov
test
jge
xorb
push
mov
sub
aam
lret
add
loop
adc
mov
cld
cmp
lret
test
loope
sbb
shlb
jecxz
aad
test
int
sbb
roll
jno
or
dec
ret
imul
leave
test
add
pop
test
fadds
fldt
decl
fdiv
dec
aam
xchg
and
fs
dec
fucomip
or
sub
test
add
add
fdiv
or
dec
fcomps
and
mov
ds
or
out
or
or
jb
push
jl
in
jle
fsubrp
in
xlat
push
paddq
loope
loop
pop
dec
xchg
in
or
daa
cld
decb
cs
into
mov
call
adc
outsb
inc
mov
out
add
mov
adc
add
popa
sbb
icebp
add
cld
hlt
test
jne
and
shrb
jno
mulb
lret
inc
xor
scas
push
mov
or
repz
mov
repz
dec
repz
imul
push
push
dec
repz
repz
push
inc
repz
push
inc
repz
repz
repz
add
aaa
add
lock
add
aaa
add
pushf
ss
lods
add
add
add
jl
add
mov
add
cmpsb
aaa
add
aaa
add
aaa
add
mov
add
movsl
aaa
add
aaa
add
aaa
add
gs
add
aaa
add
pop
aaa
add
pop
aaa
add
imul
in
imul
cli
cmp
add
sub
add
sub
add
xor
push
sbb
add
inc
add
push
inc
add
inc
add
dec
inc
add
cmp
inc
add
aas
add
add
test
inc
add
lock
add
cmp
in
inc
add
add
lds
add
pop
inc
add
inc
add
inc
inc
add
cmp
inc
add
add
addr16
add
dec
inc
add
jb
add
inc
inc
add
repz
incb
call
fldl
cwtl
push
out
lahf
add
cli
xchg
std
iret
stc
cmp
clc
cmp
leave
and
leave
and
add
add
into
push
fs
sub
ret
or
sub
adc
lds
dec
int
mov
adc
and
push
mov
push
icebp
sbb
sub
push
xchg
sbb
ds
rep
dec
sbb
add
repz
pop
dec
repz
mov
addr16
repz
repz
jne
add
add
repz
insl
iret
repz
rorl
push
jne
repz
fs
repz
pop
iret
xrelease
dec
pop
iret
repz
scas
pop
iret
repz
repz
repz
jnp
repz
pop
dec
rep
jbe
rep
outsb
dec
repz
rorl
sbb
jns
repz
jns
repz
repz
add
add
push
xor
add
xor
or
add
das
add
adc
das
add
aad
add
xlat
das
add
xlat
das
add
xor
mov
das
add
mov
add
cmpsb
das
add
mov
add
mov
cmc
pushl
xor
call
pop
push
or
lods
xchg
push
dec
loopne
add
add
leave
mov
mov
call
mov
or
xchg
dec
and
mov
or
test
add
lret
jp
std
ss
add
push
pop
stc
jp
xor
out
leave
incl
mov
mov
cmp
add
std
dec
addl
or
sar
repnz
mov
sub
add
add
cli
sar
adc
xchg
mov
ret
enter
xor
inc
cmp
je
rcr
sarl
fisttpl
sarl
mov
add
pop
jecxz
sahf
leave
jbe
mov
push
mov
xor
jl
mov
cmc
cmp
in
test
data16
insb
sub
xchg
sahf
and
add
ret
es
ret
data16
insb
pop
daa
aas
xlat
addb
and
loop
iret
sti
pusha
cs
repnz
decl
xor
pop
mov
stos
sti
xor
in
lds
or
insl
test
inc
jmp
adc
adc
pusha
dec
iret
mov
sti
push
xor
sub
stc
pop
sub
jno
out
int
xchg
xchg
xchg
call
insb
sti
into
add
stc
jo
ds
mov
mov
mov
sti
cmpsb
xlat
subl
fcmovu
sti
mov
insl
push
lods
cmpsl
inc
mov
inc
imul
cmp
call
pop
fisubs
sarl
jmp
push
dec
mov
or
stc
repz
je
add
add
icebp
je
into
icebp
add
mov
icebp
xor
pop
add
add
add
out
je
leave
mov
test
add
ljmp
jmp
add
pop
cmpb
jae
ljmp
cld
decl
or
or
into
push
mov
add
mov
std
std
and
inc
std
in
adc
inc
std
fldl
lret
cld
add
jle
test
pop
mov
lret
push
pop
add
or
mov
sub
adc
adc
clc
mov
push
sub
xor
imul
cld
jg
loop
mov
xchg
mov
cld
cmp
add
out
into
decl
in
sbb
rep
inc
jp
sbb
aam
jns
gs
sbb
fldenv
inc
aam
int
jo
lahf
imul
pop
adc
mov
lods
add
fimuls
push
fisttps
mov
into
push
mov
mov
int3
daa
jg
add
add
clc
pop
subb
fninit
data16
push
ja
pop
xchg
mov
shll
push
hlt
cld
push
xor
out
add
cmp
mov
add
loope
jg
mov
push
jo
leave
mov
iret
sti
out
testb
dec
repnz
int
je
movb
add
add
add
rorl
icebp
xchg
mov
push
ds
pusha
lret
mov
push
stc
fs
fisttps
sbb
enter
daa
add
ret
cmpsl
add
push
mov
fadds
xchg
jae
jp
inc
movsb
mov
jne
push
inc
xchg
inc
fs
inc
mov
add
das
mov
jecxz
pop
mov
jle
push
jmp
xchg
sub
xor
incl
add
jmp
jmp
adc
xor
incl
inc
mov
xchg
jb
push
ja
push
mov
inc
out
cmp
outsb
outsl
mov
or
fdivrl
sarb
cld
xchg
or
pop
popa
pop
rorl
outsl
decl
push
xor
cmp
mov
xor
or
loope
mov
inc
add
cmp
push
jmp
mov
or
push
add
mov
ja
xchg
fcmovu
popa
or
add
mov
sub
inc
cmp
gs
jne
negl
add
push
mov
mov
leave
jl,pt
enter
or
push
outsl
xchg
sarb
adc
pop
add
insb
jge
xor
rcrb
lret
sbb
or
inc
cli
test
icebp
mov
enter
cmp
inc
loope
add
call
idivl
adc
insl
rolb
leave
movsb
inc
icebp
test
xor
enter
stc
push
notb
pop
clc
mull
jnp
iret
pop
inc
jb
mov
loopne
add
es
add
cmp
sub
dec
or
ljmp
cmp
add
and
dec
inc
mov
scas
je
jle
or
into
sti
jmp
xchg
icebp
aad
or
xor
aaa
fucom
roll
into
sti
jmp
ret
test
mov
fwait
fildl
mov
mov
sti
jmp
inc
iret
xchg
add
cmp
sar
into
repz
add
push
mov
xchg
mov
sbb
jecxz
in
mov
xor
dec
aam
pop
jae
or
jmp
mov
push
add
add
out
jecxz
add
dec
and
mov
fcomps
fiaddl
mov
jnp
mov
lret
int3
jb
add
or
fcmovnu
sbb
je
dec
aas
cld
stos
pop
cmp
pop
mov
xor
add
jb
inc
cmp
xchg
popf
ret
jg
std
cmp
add
add
inc
add
mov
aaa
cmpsl
push
dec
mov
aam
cmp
push
pop
mov
pop
and
push
adc
fisttpll
adcl
push
or
mov
xchg
out
pop
shlb
cmp
repnz
pop
or
or
mov
jnp
dec
sbb
test
inc
repz
add
xor
lret
lds
cmp
lds
out
test
inc
inc
int3
mov
jnp
iret
enter
insb
adc
int3
sbb
iret
jp
pop
test
repz
test
les
inc
push
bound
jmp
lret
push
push
pop
jo
jecxz
aas
idivb
pop
cmp
lret
faddl
mov
clc
fisubrs
movsb
cltd
jmp
add
mov
add
mov
mov
repz
mov
xchg
jb
bound
inc
in
inc
jne
jmp
xor
xor
add
int
sbbb
xchg
mov
push
jb
push
cld
jle
je
loope
jl
mov
mov
dec
repz
cmc
add
dec
icebp
mov
add
add
add
add
sti
ds
jge
ss
aam
aam
jmp
into
movl
add
pop
sub
jb
cmp
xor
mov
jp
adc
loopne
push
neg
dec
nop
fisubl
add
pop
je
pop
leave
icebp
fiadds
push
mov
testb
pop
fildl
add
push
call
cwtl
mov
push
push
pushf
jp
xor
fadd
in
push
addl
insb
or
ret
sbb
add
pusha
cmc
sti
je
mov
or
sbb
mov
jne
fwait
sbb
mov
mov
sbb
mov
fstps
inc
or
xchg
fisubl
pop
movl
xor
add
add
or
movsb
inc
pop
or
aad
adc
add
mov
cmp
adcl
ror
inc
std
fldt
dec
in
cmpsb
or
fs
add
pop
push
add
add
xor
call
mov
fsubl
pop
xchg
fidivs
dec
repz
add
test
xor
or
icebp
test
pop
sbb
out
push
lock
dec
mov
sarl
inc
mov
or
add
jecxz
enter
iret
adc
iret
adc
mov
icebp
jae
in
pop
add
sti
jo
loop
bnd
adc
jns
add
xor
add
pop
adc
push
sti
sti
pushf
xchg
jb
push
shll
call
pushf
push
cld
testb
pusha
lds
sbb
dec
enter
jge
xchg
in
mov
xchg
fucomip
shll
iret
mov
std
jge
jne
cmp
inc
and
pop
fbstp
dec
in
jb
jge
adc
fstps
pop
mov
push
sbb
xchg
lret
add
call
add
mov
fmull
adc
mov
outsb
in
unpcklps
mov
mov
add
ja
cmpl
jne
outsl
pop
call
jae
ds
enter
arpl
hlt
jae
pop
cmp
repnz
xchg
push
pushl
std
jne
xchg
or
or
and
cmc
mov
xchg
adc
and
std
jne
xchg
or
repnz
xchg
enter
jge
std
mov
add
fstpl
add
cwtl
sbb
rcrl
shlb
je
mov
or
add
lret
orb
pop
add
mov
mov
sub
jmp
add
sbb
dec
addb
dec
repz
aam
add
add
call
daa
mov
mov
shlb
add
int
into
mov
out
nop
inc
sbb
add
icebp
pop
les
mov
push
iret
xor
mov
mov
test
dec
mov
add
xor
pop
arpl
loop
test
or
mov
push
fidivl
pop
jb
rolb
and
in
sbbl
push
fwait
mov
xchg
mov
js
mov
ss
das
les
lret
or
repz
icebp
int
sbb
mov
add
jmp
jmp
cmp
imul
add
add
jo
mov
cld
xor
clc
jb
jb,pn
inc
push
mov
ret
fimull
leave
jmp
jmp
inc
inc
sub
mov
or
mov
mov
shll
add
add
incb
mov
cmc
xorb
aas
jmp
xor
mov
add
add
gs
call
out
inc
repz
mov
outsb
mov
inc
js
fs
xor
mov
lret
or
testb
test
in
jnp
stos
out
add
hlt
or
cmp
pop
mov
or
sbb
inc
jae
xchg
jb
cmpl
push
ret
mov
lret
test
nop
jle
shlb
add
xchg
std
imul
jbe
and
test
xor
add
test
decl
fs
dec
cmpb
and
std
in
cmpb
lret
mov
jbe
push
push
rorb
incl
cmp
pop
mov
stos
push
pop
xchg
sti
mov
iret
sti
call
inc
inc
or
cwtl
pop
jbe
add
add
add
add
sbb
adc
mov
into
ret
into
incl
mov
daa
mov
out
aad
xchg
fidivs
jmp
mov
push
lret
lods
adc
rorb
pushf
int3
fldenv
movsl
stc
bnd
and
ret
inc
jb
bnd
add
mov
add
add
shr
pop
orb
adc
addr16
sub
out
adc
jae
xchg
mov
mov
xchg
test
add
jno
incl
sbb
out
adc
mov
mov
mov
add
outsl
rclb
scas
add
mov
push
ds
les
jmp
xchg
xor
push
pop
or
jmp
call
insb
into
inc
or
repz
adc
mov
lcall
jmp
fldt
mov
sahf
xor
rcr
repz
pop
push
call
bound
jb
push
jne
insl
add
subl
test
repz
add
add
repz
push
cld
in
les
mov
pop
pop
jl
inc
push
mov
and
jne
jnp
adc
std
adc
cmp
call
test
or
and
jne
jnp
or
outsl
lds
mov
out
call
adc
mov
jmp
jne
add
add
outsb
sbb
add
adc
or
xchg
test
mov
sahf
fsubs
orl
mov
fmuls
xor
rcr
jno
push
add
add
in
int3
cltd
incb
aam
push
or
cmpsl
stos
mov
jg
jb
pusha
xchg
mov
pop
enter
add
dec
std
pop
enter
cmc
xor
mov
sbbb
cmp
das
outsb
jbe
xor
pusha
mov
sub
mov
popf
mov
imul
push
push
push
cld
jecxz
aas
fidivs
andb
xor
add
add
xor
mov
fs
cmp
insl
lods
cmp
push
add
jmp
mov
das
adcb
jbe
adc
sbb
inc
add
adc
push
inc
and
lcall
fiaddl
mov
and
lret
pop
push
mov
cmp
leave
repz
sbb
lret
shll
add
add
jmp
hlt
or
xchg
push
pop
ret
sbb
push
mov
std
or
and
inc
jp
add
fimull
out
lcall
in
mov
jl
fdiv
dec
outsb
push
add
and
mov
add
mov
repz
decl
or
mov
and
outsl
sar
test
out
pop
fcompl
ud0
roll
mov
ret
push
js
movlps
ss
sbb
aad
insl
cmp
xor
mov
xor
andb
mov
cs
outsl
sub
mov
es
cld
push
leave
idiv
jne
jg
test
adc
mov
mov
sub
jb
incl
add
add
xchg
clc
mov
int3
pop
mov
mov
xor
inc
lods
addr16
inc
cs
mov
addr16
push
inc
add
pop
sbb
add
lock
repz
adc
xorl
int3
pushl
aas
sbb
test
pushl
add
add
add
add
add
call
mov
psllq
add
push
jge
mov
repnz
das
out
dec
jmp
jmp
xchg
jmp
add
insb
mov
shrb
aas
mov
cwtl
mov
pop
sbb
cmp
sbb
jg
pop
cs
out
sbb
in
add
add
add
mov
incb
sub
xchg
ds
xor
mov
les
fwait
jecxz
add
mov
sub
icebp
push
psubsb
je
jmp
and
xor
ret
push
push
idivb
adc
nop
add
xchg
dec
mov
jbe
cmp
fsts
insb
inc
jne
lret
fildl
add
add
dec
sar
xor
mov
jle
mov
std
test
ror
sub
aam
inc
jnp
lods
xor
mov
mov
jne
orb
scas
mov
sti
or
fwait
cmp
clc
mov
mov
xor
rcl
adc
jmp
sarb
int
std
xor
dec
cmp
add
sarb
adc
inc
xor
cmc
pusha
out
rcll
sub
cmp
push
mov
call
jle
or
xor
fmull
and
jo
sub
call
xor
lock
or
add
add
aad
inc
jge
xor
out
incl
int
jl
push
dec
icebp
cs
and
cld
iret
movsb
in
inc
inc
sbb
ss
cmpsl
or
int3
jbe
or
add
dec
mov
dec
xchg
or
dec
mov
mov
lret
ret
lds
jmp
add
repz
add
bnd
scas
enter
mov
xchg
cmp
aas
lds
ret
subb
out
int3
loope
jg
rcll
jg
add
xor
ljmp
into
xor
sub
mov
jp
mov
into
jp
add
add
jg
add
fidivrl
fisttps
roll
jbe
stc
mov
jne
mov
je
hlt
jne
or
xor
jb
out
fisttps
mov
idiv
push
or
sub
aam
mov
js
call
bound
call
add
or
scas
lds
add
mov
mov
loop
or
mov
scas
push
cmp
jmp
icebp
xor
sbb
add
sub
lret
repz
xor
push
push
in
add
adc
push
mov
mov
inc
rep
mov
jmp
mov
xlat
out
push
mov
push
jecxz
fdiv
add
pop
rolb
xchg
scas
addb
andl
sub
in
scas
cmp
mov
push
das
testl
xchg
add
mov
add
gs
or
mov
fmuls
mov
rorb
add
mov
xor
add
xchg
pinsrw
lret
scas
mov
aad
add
add
sahf
sbb
mov
stos
cld
xchg
sbb
or
jbe
add
repnz
pushf
xchg
jecxz
stc
lods
orl
orb
js
andb
lock
fs
faddl
push
pop
int3
jge
pop
inc
sarb
xchg
add
xor
or
scas
add
inc
scas
push
add
jo
rcrb
add
mov
insl
les
pop
xor
lcall
loop
mov
iret
aaa
push
add
aaa
aas
add
sub
xchg
repz
push
xchg
xchg
orb
gs
stos
data16
xor
lods
ret
insl
aaa
aam
mov
aas
daa
ret
jle
les
lcall
or
add
jae
jmp
repz
sub
add
mov
repz
repz
loopne
mov
jg
adcb
or
mov
jmp
leave
and
or
mov
je
repz
dec
mov
jmp
mov
add
stos
add
or
add
and
sti
jb
xchg
movsl
cmp
jbe
data16
aas
jl
add
add
test
jecxz
inc
testl
movq
adc
decl
push
push
je
adc
sbb
aas
push
lcall
adc
adc
rol
sti
sbbb
sbb
and
lods
pop
mov
jae
add
jl
std
dec
cs
ljmp
es
movsb
sub
repnz
mov
xorb
ret
sbb
or
adc
mov
xor
sub
mov
cltd
pop
and
lds
incb
add
add
inc
test
aas
push
outsl
cmpsb
mov
in
roll
jl
or
repz
jg
sbb
mov
pop
pushf
hlt
cld
pop
pop
lods
std
dec
popf
out
cmc
adc
sub
cmc
ss
sub
xchg
and
repz
add
mov
movsl
cmpsl
push
add
add
add
aaa
scas
add
xchg
data16
lods
faddl
xor
addb
mov
dec
push
andb
inc
push
lahf
daa
dec
cmpsl
js
fiaddl
scas
mov
or
adc
add
xor
ja
add
repz
shl
jmp
subb
cmp
icebp
jmp
mov
xchg
jne
fbstp
imul
nop
repz
repz
cmpsl
or
push
mov
sti
xchg
jo
in
je
add
xchg
add
ds
jae
push
dec
aad
jle
add
inc
mov
lods
stc
jno
out
pop
add
mov
sbb
in
adc
out
or
repz
lods
je
push
lret
or
call
mov
pop
xchg
push
outsb
hlt
mov
cmpsb
mov
stos
in
call
jge
outsb
call
mov
in
mov
mov
xorl
inc
mov
xor
jne
cwtl
push
hlt
into
stos
cmp
mov
popl
mov
xor
jne
sub
repnz
sbb
fidivrs
call
out
scas
outsl
gs
loopne
mov
popf
std
adc
xor
mov
fwait
call
adc
mov
in
mov
mov
or
les
std
xchg
movsb
js
mov
jp
shlb
loop
out
enter
cmp
add
add
mov
cwtl
and
mov
jmp
xor
or
pushf
movsb
je
and
hlt
decl
jns
cld
div
gs
jmp
call
cmp
push
sub
mov
add
dec
xchg
dec
adc
repnz
xor
mov
stc
insl
dec
mov
jmp
adc
in
out
mov
ljmp
repz
lods
test
add
adc
dec
mov
outsl
rol
das
mov
lea
push
popa
fwait
repz
mov
sbb
repnz
xchg
repnz
adc
add
mov
in
shll
shufps
sbb
repz
ret
stos
add
pop
jle
and
xor
jmp
add
insl
cwtl
test
or
sub
cmpsb
rcrl
aad
xchg
sub
sbb
jge
mov
mov
fs
mov
jmp
mov
iret
lea
cmpsl
mov
out
cmp
add
add
add
add
push
push
cld
xlat
mov
in
push
insb
mov
mov
decl
cld
movzwl
cli
pushl
jns
sub
lock
add
es
lcall
jnp
call
addr16
jmp
jl
in
ljmp
push
jbe
in
pop
xor
orl
cld
push
aaa
sbb
pushl
add
add
testl
xchg
xor
test
gs
inc
add
adc
mov
xchg
inc
in
imul
xchg
and
xor
push
xor
dec
fsubrs
and
and
pushf
mov
and
add
pop
xchg
leave
inc
cltd
decl
add
add
test
mov
and
xchg
iret
test
notl
mov
hlt
int3
repz
add
xor
lcall
cmc
push
rep
dec
lcall
xchg
mov
call
jb,pt
pushf
or
decb
push
xlat
inc
cmpsb
repnz
ljmp
ss
sub
and
push
or
and
add
lahf
pusha
inc
scas
jl
in
das
lahf
add
pusha
lret
adc
dec
xchg
outsb
and
cmpsb
sti
pop
xchg
mov
sti
jae
lods
out
cli
and
inc
pop
add
jmp
shrb
setns
icebp
mov
jg
add
add
xchg
sbb
lods
hlt
cmpsl
sti
aam
add
cmpsb
test
stos
mov
test
xor
jo
mov
xor
cmc
jnp
aaa
and
and
mov
idivb
icebp
or
or
sbb
in
add
lock
mov
mov
lret
add
jno
lock
outsb
call
stos
fadds
loopne
std
adc
clc
xor
mov
test
popa
lock
lock
sti
orb
loopne
pop
ja
cmp
jno
enter
rclb
ret
pop
adc
mov
jecxz
and
add
lock
or
add
data16
mull
les
repnz
repz
idivl
lcall
mov
les
xchg
decl
lcall
mov
or
push
enter
jmp
xor
xor
cmp
push
mov
pop
paddw
and
ret
mov
repz
pop
mov
jp
adc
xorb
mov
lds
add
add
or
std
cmc
push
das
mov
repz
mov
out
mov
push
stos
add
mov
imul
insb
xchg
mov
and
stos
mov
mov
jbe
ja
push
out
and
push
mov
jmp
fwait
ds
jne
add
rorb
or
dec
jl
mov
inc
mov
daa
add
add
scas
adc
subl
aaa
subb
xchg
das
test
xor
xor
shll
or
sti
dec
icebp
xor
ds
jp
mov
call
adc
clc
cmp
test
cmp
jge
cmp
lahf
imull
adc
out
scas
in
ljmp
in
repnz
call
lock
push
cmp
pop
adc
jb
call
addr16
sub
cmp
orl
je
jnp
test
mov
add
and
add
sub
or
sub
add
testb
addl
mov
arpl
test
in
outsb
hlt
add
jnp
or
add
jmp
inc
sub
jns
in
adc
mov
mov
mov
xor
mov
mov
mov
and
adc
add
dec
push
lods
lret
lret
lcall
lods
popa
in
jmp
out
cmp
adc
cld
jge
sub
jmp
xchg
dec
incl
ss
cld
add
inc
std
dec
out
addl
cmp
mov
lea
or
add
add
xor
mov
lret
or
add
pushf
call
cwtl
out
jb
dec
out
mov
cwtl
sahf
fs
pushf
mov
mov
sahf
jb
dec
cmpsb
jmp
cwtl
aaa
sahf
aam
aas
sahf
cld
pop
js
ljmp
scas
ss
jbe
sub
fwait
jo
scas
insl
xchg
cmc
add
add
add
xor
adc
push
stos
sti
out
jmp
icebp
mov
sub
push
sub
popf
cld
sahf
sti
xor
ss
sbb
incb
mov
into
and
pushf
cmp
test
test
es
xchg
mov
sti
jo
aaa
scas
lcall
jb
jecxz
es
bound
scas
and
ret
push
mov
and
jnp
adc
mov
lcall
jmp
push
in
out
push
push
xor
pop
outsl
pop
mov
lret
pushf
std
pushl
call
jmp
mov
mov
dec
xor
xor
add
mov
rclb
in
lea
imul
jnp
sahf
xor
sar
xor
jne
test
cmp
add
dec
add
sbb
cmc
ljmp
mov
cmp
outsl
push
lock
sub
cld
cmc
repnz
mov
loopne
xchg
icebp
std
jg
popf
pushl
or
sbbb
mov
mov
mov
getsec
push
push
loop
adc
dec
jo
test
aam
pushf
divps
or
lds
adc
xchg
sbb
jnp
mov
inc
sub
mov
jp
cwtl
and
lcall
jb
rolb
adc
pop
mov
sbb
hlt
jmp
pop
repnz
movsb
mov
cli
mov
orb
mov
ljmp
pop
xchg
or
fwait
jmp
push
stc
mulb
ret
jnp
ljmp
adc
pop
xor
push
mov
and
int3
xchg
xor
jo
pshufw
out
movsl
mulb
jb,pt
aaa
push
adc
int
mov
jecxz
add
xchg
sbb
lods
outsb
emms
cwtl
adc
push
lcall
add
roll
jmp
mov
jmp
mov
cwtl
sti
xchg
repz
mov
mov
or
cmpsl
stc
xchg
push
adc
gs
sbb
adc
push
add
add
cltd
je
jg
lea
mov
sbb
sbb
int3
test
pop
fcmovnb
jbe
pushf
jo
in
jae
dec
call
out
cli
inc
add
jns
sarb
roll
movhps
adc
in
xchg
fdivr
lock
rcr
push
jle
inc
std
sub
dec
xor
jb
in
sub
out
or
shrb
cld
and
addl
call
call
out
add
mov
jecxz
mov
incb
mov
xor
add
mov
das
mov
add
xor
sbb
and
jp
push
or
call
mov
cld
std
or
cmp
xchg
clc
adc
movsb
push
mov
mov
xor
arpl
add
iret
in
andb
jl
xchg
or
mov
repz
jl
jmp
mov
xchg
jmp
mov
add
add
sub
jge
loop
jg
xchg
decb
or
int3
push
test
mov
dec
push
std
cltd
dec
cmc
fiaddl
or
test
nop
inc
xchg
cmp
add
cwtl
jmp
add
pushf
call
add
jb
add
push
add
out
daa
jo
sub
call
mov
mov
jno
testb
mov
add
dec
call
iret
add
inc
xor
icebp
sbb
loope
xchg
xchg
inc
test
movsl
sbb
cmc
jo
mov
dec
call
mov
cmp
mov
fwait
cmp
xchg
jne
or
cmp
repnz
cmp
add
add
inc
add
mov
dec
pop
je
add
leave
sti
add
adc
loopne
pop
ljmp
imul
mov
test
mov
outsl
push
movsb
jb
cmp
sar
test
add
pop
leave
jno
sti
xor
out
ljmp
out
add
loope
mov
pusha
je
mov
fisttpll
push
loopne
arpl
xor
mov
sub
mov
push
adc
dec
std
mov
jbe
pop
cmp
testl
add
mov
mov
loop
call
pop
dec
xchg
dec
jb
mov
jae
popf
push
inc
ss
jbe
fidivl
pop
pop
jg
out
add
add
mov
cld
mov
subl
add
cmp
mov
and
lahf
aaa
or
ficoms
je
add
into
mov
mov
push
xor
xchg
hlt
pop
xchg
xor
js
jmp
sti
add
add
enterw
jns
repz
sbb
xor
call
call
add
add
add
lods
fs
push
xchg
pop
inc
dec
xor
sub
icebp
add
jle
andl
jle
sbb
js
into
notl
outsl
jle
leave
sti
add
pop
clc
outsl
jle
hlt
addr16
or
adc
testb
shlb
nop
cmp
add
fdiv
cmpsl
inc
nop
add
orl
cmc
push
or
or
sbb
xchg
jmp
and
jg
add
add
xchg
outsl
xor
stc
cltd
icebp
push
cli
es
jnp
adc
or
ss
and
std
pop
jle
icebp
pop
nop
outsl
stc
adc
icebp
shl
sti
into
or
add
cli
push
adc
enter
jmp
cmpl
testl
inc
mov
sub
add
divl
shlb
or
add
test
or
jmp
jns
fisubs
add
pusha
cld
hlt
movntq
pushl
adc
call
stos
xor
test
jg
xor
add
aad
jo
repz
insb
xor
stc
aas
adc
pop
decl
mov
out
aas
mov
lock
sbb
cmp
mov
add
les
xchg
cs
add
pop
repz
sbb
incl
sahf
loopne
std
mov
add
add
jp
jp
mov
add
mov
xor
dec
lock
incl
pop
xchg
adc
xchg
fwait
incl
add
mov
jle
int3
hlt
xchg
dec
xchg
les
outsb
add
mov
mov
aam
mov
fidivrs
movsl
clc
iret
imul
std
inc
jp
mov
mov
jge
nop
adc
xor
outsl
cwtl
or
sub
add
loop
enter
jb
mov
add
jnp
jmp
or
aad
fwait
sti
add
ficomps
cs
cli
jg
incb
insl
mov
or
jb
jmp
mov
nop
test
mov
xchg
pop
mov
jae
mov
je
out
add
add
repz
push
xchg
testb
add
mov
inc
jne
ja
jmp
mov
add
sub
or
and
push
push
dec
and
mov
jb
negl
lds
jecxz
cmp
xchg
xor
jnp
adc
push
add
jbe
add
mov
or
mov
inc
lock
dec
dec
lcall
outsl
inc
std
hlt
jne
rcrb
outsb
clc
pop
testl
jge
or
sub
add
lock
cld
push
je
pop
call
je
jge
divl
aam
add
pop
jmp
call
mov
je
hlt
xchg
loop
push
lcall
push
fwait
pushl
xchg
lret
push
int
fwait
cld
jg
xchg
push
mov
pushl
xchg
inc
mov
add
loope
cmp
aad
mov
inc
mov
mov
cmp
ja
or
jno
mov
cld
sbb
or
fbstp
sbb
mov
xchg
jp
inc
mov
add
xchg
inc
push
shlb
and
add
jge
lret
clc
add
and
lock
lock
in
clc
das
ljmp
ss
add
outsl
dec
mov
xchg
add
in
repnz
stos
aas
mov
sub
or
mov
jb
div
or
mov
dec
xchg
sbb
int
jnp
loop
cmpsl
add
add
fwait
outsl
add
fwait
push
add
fwait
pop
popl
jmp
and
jb
adc
jb
add
jb
mov
call
aas
push
mov
jmp
xchg
out
call
movb
add
add
call
stos
data16
fs
pop
adc
and
xchg
mov
je
popf
jae
loope
mov
jbe
cmpsl
sub
insl
add
jg
adc
loope
sahf
pop
add
xlat
push
call
mov
scas
in
add
testb
pop
call
sti
add
mov
add
cld
add
shrd
and
cld
mov
add
mov
cld
adc
jne
aas
and
sbb
xor
or
add
imul
mov
cld
je
sar
fucomip
inc
add
mov
or
add
fwait
jg
jb
shrl
pushl
add
je
add
add
lcall
mov
xchg
dec
push
test
mov
add
jle
push
add
add
push
sub
repz
sbb
cmc
jae
push
add
add
out
int3
push
mov
loop
add
push
iret
push
xchg
cmpsl
mov
push
pop
jle
dec
loop
xchg
jae
add
add
bound
popf
sub
cli
cltd
mov
pop
add
push
int3
mov
and
mov
xchg
insb
inc
scas
in
xchg
add
mov
sbb
pop
repnz
add
fcmovnu
hlt
test
fstl
jl
not
adc
push
xor
and
adc
mov
leave
fxch
cs
aas
xchg
jmp
aaa
push
test
or
jmp
jne
adc
or
popf
xor
ss
rcrl
cs
inc
adc
lds
jl
jbe
or
mov
push
or
and
jmp
mov
repz
aas
lahf
mov
bound
in
mov
fwait
mov
mov
sti
cmp
xor
jae
adc
and
sbb
mov
push
imulb
les
jp
and
pop
shlb
mov
js
jo
call
add
mull
fs
mov
sbb
xor
cmp
je
xor
test
je
ja
and
je
mov
lret
fidivs
out
lea
inc
repz
std
xor
push
in
clc
lds
loopne
inc
stc
mov
int
lea
daa
leave
and
shl
mov
jmp
jl
adc
dec
mov
add
add
sub
pop
call
pop
add
xchg
jp
scas
mov
mov
not
push
and
add
mov
je
leave
iret
push
jb
inc
ds
iret
cld
jg
adc
add
or
fwait
pushw
mov
movsl
mov
jmp
fcmovnb
mov
xor
add
add
bound
mov
out
pusha
fldl
mov
lret
xchg
outsb
and
lea
or
js
or
js
pop
mov
cmc
mov
aaa
clc
pop
lret
fdivr
xchg
xor
xchg
shrb
or
fiadds
add
testb
push
in
xor
imul
add
add
add
enter
icebp
add
jge
push
lods
jnp
mov
lret
inc
icebp
pushf
iret
cmp
addl
add
xchg
je
jmp
ss
sbb
and
dec
mov
sbb
ret
insl
fwait
jg
int
sub
mov
jmp
mov
sub
push
repz
cld
inc
pusha
add
jg
fiaddl
add
add
jg
push
xchg
push
jle
cmp
xchg
push
call
jne
jne
iret
imul
jbe
imul
mov
cld
pushl
jecxz
hlt
testb
or
add
ret
insb
out
pop
jp
outsl
stc
add
and
adc
mov
xorb
enter
test
test
and
add
sbb
push
sbbl
pop
inc
out
ret
adc
cld
call
push
lds
orb
mov
mov
adc
out
lods
jbe
xadd
and
or
mov
jno
mov
or
test
decl
insl
jns
mov
inc
add
test
mov
add
imul
les
psllw
jb
sub
dec
xor
lcall
aas
and
sub
pop
adc
mov
adc
and
mov
or
mov
pop
inc
repz
inc
inc
insb
fmul
imul
adcl
cmp
push
sub
jp
sub
in
shrl
aas
sub
add
test
jb
loopne
mov
out
adc
stc
jmp
shlb
adc
jp
fcomip
ret
dec
and
xor
xchg
in
push
aad
jle
andb
test
jmp
out
popf
outsb
lods
push
dec
xorb
add
popa
icebp
mov
mov
ffree
shrb
repnz
test
aam
in
push
mov
jmp
lcall
sahf
adc
add
push
int
sbb
sbb
sti
fs
rcll
imulb
data16
rcl
je
or
movsl
and
movsl
xchg
jmp
lods
fildl
int
mov
add
jno
add
mov
sti
add
repnz
jmp
bnd
pop
pop
sbb
out
ljmp
sti
cld
push
fcmovne
std
push
mov
clc
out
cld
call
ljmp
sbb
mov
add
lea
testb
dec
icebp
push
mov
add
push
and
mov
jmp
outsl
add
mov
cmc
push
decb
cmp
or
jp
mov
pop
pop
addr16
jo
out
cmp
incl
inc
mov
in
rcll
ret
sar
sbb
push
lock
and
lret
cld
ja
adc
add
add
loopne
push
loopne
addr16
mov
mov
je
stos
add
adc
add
std
inc
pop
inc
jae
add
adc
in
incl
dec
aas
xor
std
sbb
mov
add
aaa
push
mov
inc
mov
push
outsb
push
pop
shl
and
ja
lret
outsb
rcl
loope
and
jbe
add
add
out
outsb
std
pop
jl
adc
or
jbe
jmp
ja
daa
gs
jle
les
jl
lock
int
and
mov
jecxz
std
mov
and
adcb
rcr
adc
pop
enter
jbe
notl
insb
leave
add
push
add
sbb
dec
push
test
cli
fdivr
jl
add
add
jle
in
mov
mov
and
push
cmp
sub
cld
cmp
and
sbb
jo
cmp
adc
dec
cmpsb
mov
mov
stc
mov
mov
insb
call
aas
adc
arpl
arpl
sub
xor
jnp
add
movsb
push
mov
add
add
add
or
das
outsl
popa
cwtl
jns
dec
imul
push
idiv
mov
mov
imull
imul
cmp
aaa
lds
test
add
call
add
sub
mov
in
stos
inc
mov
pop
std
lcall
sti
pushl
hlt
std
or
mov
xchg
add
add
add
cmp
mov
cld
push
pop
imul
mov
aaa
add
mov
shlb
lods
mov
adc
int
mov
or
mov
push
pop
pop
mov
push
pop
cli
fisttpll
jp
add
mov
xchg
orb
outsl
cld
cmp
add
incl
iret
add
push
imul
aam
aam
cltd
add
jp
repz
push
loopne
insb
mov
jp
jae
and
lcall
or
jns
aad
incl
mov
clc
data16
js
aam
mov
insb
adc
pop
roll
add
shll
jecxz
jge
fcmovnbe
xchg
outsb
test
jo
insl
jmp
inc
jnp
jae
fistps
jae
jecxz
inc
sbb
callw
pmaddwd
insl
lret
gs
std
jb
or
and
add
imul
cld
jb
mov
mov
mov
jge
mov
mov
insb
dec
inc
add
or
xor
inc
lods
or
sub
pushf
insl
sub
xchg
icebp
insb
inc
insl
fnstenv
jge
adc
inc
nop
add
pop
ja
movsl
lcall
jmp
push
ret
mov
jmp
push
mov
repz
jb
cmc
in
insl
test
add
push
and
ret
cmc
cmp
jnp
mov
sbb
lock
xorl
add
fcmovne
icebp
imul
sti
jmp
clc
add
mov
or
push
rep
mov
jmp
clc
add
push
pushf
cld
push
ljmp
divps
sti
push
sbb
inc
out
add
in
xor
mov
sti
or
dec
repnz
sub
sti
add
jb
incl
add
add
mov
adc
insl
into
adc
dec
repz
fbstp
bnd
pop
or
cld
inc
cmp
out
jnp
incl
dec
outsl
mov
xor
mov
mov
add
jbe
jo
sahf
cmovo
cltd
jo
fwait
jb
mov
or
cld
in
aam
pop
fwait
incl
test
outsl
call
mov
or
cld
mov
add
add
jbe
jno
clc
add
pop
ja
lcall
inc
ret
jb
jmp
in
stos
jne
sub
and
or
fistps
lret
dec
add
bound
pop
outsl
or
pop
je
jg
add
sbb
pop
sub
jne
pop
or
push
add
cs
add
jg
add
and
add
fisttpl
imul
add
loope
jae
pop
neg
mov
mov
nop
fwait
or
add
loop
inc
push
push
add
lock
arpl
lea
sbb
mov
ja
pop
inc
jl
adc
repz
test
stos
js
imul
xchg
jecxz
push
mov
cli
mov
push
bound
call
add
orb
pop
or
cwtl
pop
adc
or
push
or
stc
mov
xchg
or
ljmp
adc
ss
adc
xor
roll
into
xor
jmp
inc
add
lahf
add
decb
push
ret
loopne
adc
mov
test
cmp
mov
add
add
cld
push
imul
push
faddl
mov
imul
pop
pop
clc
sub
jp
scas
testl
mov
cld
call
jae
xor
pop
dec
mov
jecxz
mov
jns
jle
jmp
or
outsb
xchg
inc
mov
mov
aad
sbb
decl
in
or
add
add
xor
lret
sahf
idiv
pop
jle
cwtl
decl
outsl
notl
aad
fadds
push
aam
repnz
mov
insb
cld
mov
xchg
outsl
push
and
aad
jns
ret
add
cld
cmc
or
push
pusha
mov
xchg
push
push
fnsave
xor
add
add
xchg
addr16
repz
jne
or
sub
or
int
inc
pop
xor
jns
push
sar
jo
jge
loopnew
gs
adc
mov
jno
icebp
gs
aam
decl
jns
xchg
push
add
jo
int
jle
arpl
dec
inc
dec
xchg
jo
aaa
inc
jno
imul
pop
adc
mov
je
add
insb
push
call
add
xor
out
mov
sbb
mov
push
cmc
call
pusha
lret
stos
lods
mov
mov
mov
shrl
cld
scas
add
mov
cmp
dec
xchg
jp
lea
ret
push
xchg
adc
mov
call
jge
inc
xor
add
add
nop
divps
mov
dec
jp
push
test
mov
ljmp
sub
es
call
sbb
jne
rcll
add
fdivr
mov
fisttps
mov
mov
lret
cmp
imul
je
out
lds
jae
outsb
loopne
lock
pushl
outsb
or
add
add
icebp
rorl
add
add
fsubrl
or
add
fsubrl
mov
repnz
aam
jmp
pop
fsubrl
ja
aad
into
imul
dec
mov
pop
call
mov
incl
aas
push
jb
push
push
push
out
mov
xlat
aas
or
cmp
decl
movsl
push
inc
jle
imul
lea
jge
push
gs
rorl
pop
pop
stc
dec
mov
mov
pop
incl
mov
pop
jl
pop
cmpsl
notl
mov
sbb
sbb
xor
lcall
repz
stos
pop
pop
inc
loopne
insl
pop
mov
add
add
ret
cmp
insl
repnz
lea
daa
fwait
mov
jp
gs
lretw
enter
subb
jmp
test
pop
fistpll
outsb
roll
aaa
jnp
ret
or
jmp
icebp
cmpb
sub
jnp
outsl
and
data16
hlt
mov
int3
and
jns
testl
dec
dec
bound
es
addl
pushf
loop
jne
ds
pop
insl
jne
add
lock
xor
inc
mov
pop
rorl
loope
bound
jno
andb
icebp
fs
inc
mov
dec
dec
xchg
or
jmp
gs
mov
pop
pop
mov
sti
pop
jns
icebp
pop
push
add
lods
outsl
jg
lea
add
jmp
je
outsb
clc
mov
repnz
or
data16
or
jne
cmp
fstpt
gs
jmp
add
sub
dec
mov
jecxz
mov
bound
loopne
jae
push
rcll
int3
dec
cld
fisubrs
lds
stos
pop
call
out
outsl
add
pop
fistps
mov
ds
aaa
mov
repz
or
mov
sti
sbb
pop
rolb
icebp
or
dec
clc
add
in
or
xchg
hlt
dec
call
add
fs
xchg
aad
sti
adc
cld
pop
fs
in
sti
setge
add
cmp
ret
sahf
idiv
push
jle
les
add
rorb
fwait
int
movswl
cld
push
jno
inc
bound
aas
mov
aas
xor
iret
fildl
loopne
lret
sub
jle
roll
jo
fs
push
test
push
addl
add
adc
outsb
inc
in
lahf
add
stc
gs
aad
jmp
jg
bnd
out
leave
lret
mov
imul
js
fmuls
jp
pop
add
mov
cwtl
stc
ret
insl
jo
fnstcw
sub
int
pop
dec
lds
pop
gs
incb
mov
jbe
repz
test
popa
sti
aam
fisttpl
fs
pop
push
mov
dec
imul
jecxz
pop
inc
movsb
aam
es
mov
mov
pop
add
std
push
imul
pusha
rorl
mov
jge
mov
mov
add
mov
ret
and
repnz
mov
adc
add
add
and
loope
lock
rolb
out
add
roll
mov
mov
hlt
push
push
fcoml
lea
je
call
adc
push
mov
sar
jnp
add
arpl
scas
jns
repz
loope
add
mov
repz
mov
xor
cmp
add
add
add
push
js
les
cmp
inc
aad
mov
pop
movlps
outsl
les
mov
mov
in
orb
mov
pop
decl
pop
mov
dec
push
mov
mov
or
cmpb
decl
jmp
aas
push
jo
mov
pop
and
jb
mov
or
or
xchg
decl
pop
xorb
pop
decl
pop
and
and
mov
dec
ret
or
xor
outsb
insl
jp
mov
data16
or
xacquire
jmp
mov
ret
dec
ret
pop
mov
jo
adc
add
add
dec
jmp
aas
or
cmp
mov
gs
into
jmp
jl
push
pushf
vmovupd
jmp
outsl
adc
loope
xor
cmp
out
adc
movsl
lock
push
scas
loope
dec
ret
ret
add
add
xor
cmp
or
call
arpl
add
add
sub
addr16
insb
into
loopne
add
addr16
xor
jno
aad
mov
dec
inc
outsb
outsl
or
push
jp
xchg
popa
dec
call
xchg
fldenv
roll
jns
add
fisttpl
pop
addr16
std
add
adc
int3
lock
addr16
js
xchg
addr16
jnp
add
lahf
adc
cmpsb
mov
inc
lock
or
clc
or
call
mov
mov
jns
push
pushf
lahf
add
jecxz
dec
or
sub
sbb
fisttpl
jmp
ds
pop
clc
push
jmp
clc
mov
pop
pop
pop
mov
decl
add
mov
out
pop
pop
sbb
jp
out
add
mov
mov
and
idivb
mov
aam
lret
int
stos
pop
mov
fcmovnu
setp
jmp
sub
test
pop
imul
rorb
call
adc
push
or
imul
add
mov
iret
inc
or
push
decl
jge
cld
lds
mov
mov
pop
push
scas
or
rep
mov
lds
pop
cmp
gs
xchg
js
add
outsb
loope
fsubs
in
lds
sub
clc
xchg
jmp
or
mov
mov
js
pop
bound
ljmp
pop
pop
sub
mov
mov
out
jo
imul
jbe
popa
and
jmp
mov
mov
xchg
out
jmp
leave
pop
sti
out
fcomps
jne
and
fs
out
or
sti
into
loope
jg
loope
dec
mov
aaa
or
shll
bound
adc
outsb
dec
popf
fisubs
push
push
fidivl
imul
outsb
xchg
pop
mov
inc
pop
std
clc
push
dec
aas
stc
xchg
imul
ss
stc
xchg
mov
fs
imul
clc
or
pop
sti
add
add
mov
add
dec
iret
shr
mov
pop
pop
pop
scas
rclb
add
add
out
mov
std
jmp
or
test
cld
decl
clc
cld
call
jae
add
imul
mov
rclb
jp
push
repz
frstor
mov
push
je
xor
subb
outsl
xor
cmp
add
adc
incl
add
add
sbb
jne
push
mov
mov
jmp
sti
ficoml
push
imul
lcall
dec
jp
pop
adc
shlb
add
and
or
iret
inc
scas
addr16
dec
jmp
addb
in
leave
mov
inc
leave
add
add
jnp
mov
lea
push
insl
out
dec
incl
lea
add
cmpl
data16
in
decl
pop
mov
mov
insb
ja
add
pop
jo
mov
repnz
xlat
jae
or
pushl
push
add
adc
les
mov
rcll
pop
jmp
add
js
pop
push
pop
mov
add
add
out
data16
add
es
mov
add
ljmp
sub
or
jecxz
add
pop
push
cs
loope
test
inc
enter
jmp
lahf
xchg
push
test
sti
push
pop
jmp
lret
jmp
mov
push
vpexpandw
repnz
push
bound
add
add
imul
mov
sti
cmpsb
or
cld
bound
or
int3
pop
sti
jmp
push
or
stos
or
fldl
jmp
repz
sti
add
mov
fsub
mov
or
mov
sub
pop
or
push
sub
outsl
or
add
add
inc
or
out
imul
or
ss
sti
out
sub
mov
fisubrs
lret
push
sbb
pop
call
cld
mov
jae
je
mov
cld
mov
testb
or
mov
cwtl
jo
add
lock
push
mov
dec
push
mov
jg
scas
mov
add
add
shrl
push
das
push
jb
loope
cld
push
bound
mov
fs
mov
lock
xor
insb
mov
ret
xchg
aaa
loope
subb
jmp
sbb
or
lock
sbbb
insb
xchg
push
xchg
push
xchg
xor
orl
adcl
decl
mov
leave
jmp
js
test
or
add
js
ds
outsb
jmp
inc
psrad
imul
jmp
repz
add
outsl
sub
dec
sbb
add
xor
shrb
sub
xor
mov
out
push
sbb
out
imul
add
xor
ja
cmc
mov
add
gs
jmp
add
jmp
sti
or
leave
pmaxsw
xchg
mov
adc
add
and
push
test
sahf
ret
or
and
mov
mov
cmc
jne
ss
fnstcw
out
stc
popa
out
push
pop
dec
or
sbb
jg
sti
push
add
and
ds
movsl
sub
xchg
and
je
adcb
xchg
xchg
jecxz
mov
into
insl
jae
mov
std
cmpsb
mov
xchg
std
xchg
fldcw
sar
adc
add
cmp
movsb
pop
pop
adc
hlt
pop
pop
mov
mov
sub
dec
ficomps
dec
jmp
add
push
icebp
rorb
push
fistps
adcb
jge
add
jge
add
sahf
pop
andps
mov
jmp
enter
ds
mov
inc
pop
adc
std
std
adc
lock
jmp
jno
add
hlt
dec
mov
sarb
cmp
and
iret
pop
icebp
dec
subb
testl
mov
mov
mov
jg
idivb
mov
leave
or
or
adc
pcmpgtd
lods
loop
notl
nop
testl
mov
lret
testl
pop
test
dec
xlat
das
fisttps
xchg
xor
mov
pop
and
add
add
add
and
push
or
jge
pop
pop
mov
mov
xor
repnz
mov
shll
jle
push
mov
in
or
imul
inc
mov
mov
daa
cmpb
sbb
jne
jp
cld
inc
fwait
mov
jl
out
push
leave
fisttpll
dec
leave
add
fsubp
jl
ret
cmp
loop
adc
add
jmp
mov
xor
sbb
lods
pop
push
add
mov
pop
sub
push
xchg
out
ret
adc
push
or
add
jmp
pop
and
hlt
lods
add
push
adc
addl
add
add
add
add
sti
jmp
mov
xor
mov
pushf
leave
adc
mov
cmp
bound
and
lds
and
repz
add
fisubl
imul
in
pop
outsl
push
jae
mov
add
test
jge
icebp
jb
sub
or
scas
loope
lds
unpcklps
mov
dec
movsb
addl
rorl
lcall
or
andl
je
cwtl
outsl
adc
jo
pushl
pop
outsl
push
jecxz
add
cli
ss
mov
lea
jp
decl
mov
dec
xlat
incl
jmp
mov
mov
add
dec
pop
jmp
add
xor
push
add
fimull
add
stc
daa
cmp
ds
mov
ss
inc
sbb
cmp
xchg
add
lret
push
cmp
dec
jb
cltd
dec
jb
std
clc
das
fwait
mov
cmp
imul
cmp
or
dec
inc
rolb
repz
add
jno
shlb
pop
pusha
adc
jmp
add
push
push
dec
leave
loope
daa
push
mov
dec
mov
inc
and
and
mov
xchg
enter
jecxz
mov
leave
cmc
jle
push
pop
xlat
lea
dec
out
push
push
inc
pop
std
fwait
pop
jmp
stc
add
out
xchg
jle
test
jge
mov
mov
sub
lea
ljmp
add
add
imulb
test
jle
push
push
jmpw
or
push
push
adc
mov
aaa
in
jge
mov
adc
cmp
push
add
push
inc
das
fwait
daa
jns
sbb
incb
sbb
pop
xchg
cmpsl
push
rorl
dec
sti
fdiv
pop
popf
dec
push
dec
xchg
dec
jnp
jp
out
jl
out
stc
pop
inc
inc
mov
xchg
or
je
xor
or
test
add
pop
mov
lds
jecxz
inc
clc
add
xor
lds
lcall
lock
or
test
call
inc
dec
push
fwait
paddb
and
imul
xor
lcall
dec
jg
and
add
cld
dec
andl
cmpsb
cmp
aam
mov
jecxz
push
push
mov
repz
mov
add
mov
inc
cmpsb
mov
lock
incl
jge
incb
or
xchg
mov
out
jg
call
and
push
pop
cmpb
testb
pop
dec
push
and
loope
sub
popl
mov
enter
adc
addb
mov
aas
jb
in
dec
cld
jg
push
jge
pop
call
sub
ffree
inc
out
pop
dec
mov
dec
push
pop
pop
lock
mov
lea
mov
xor
cmc
adc
in
pop
jb
jmp
cmpb
into
mov
scas
loope
jmpw
popf
rep
inc
insl
add
add
mov
jge
dec
jo
popa
jp
cld
add
fstps
dec
mov
and
adc
dec
mov
mov
jp
pop
arpl
leave
loope
add
enter
cmpsb
lcall
jnp
scas
lea
mov
cmpsl
call
mov
xor
jmp
mov
cli
mov
iret
sti
jg
push
adc
xor
mov
mov
je
std
mov
adc
fs
ret
dec
idiv
out
repz
rolb
cld
aam
jecxz
jmp
cmp
mov
mov
jmp
mov
in
repz
push
je
jmp
jbe
cld
mov
add
add
fldl
jecxz
push
call
shlb
hlt
fwait
push
add
repnz
call
pushf
mov
and
add
cmp
pushl
adc
loop
cmp
lea
cmp
and
mov
lea
mov
xor
adc
daa
mov
imul
cwtl
mov
and
out
adc
jmp
nop
add
and
decl
mov
cmp
push
mov
sub
xchg
mov
imul
jo
dec
popf
addr16
jg
in
aas
mov
inc
or
push
out
aas
mov
jmp
dec
dec
mov
pop
inc
cwtl
sti
incl
add
add
sub
pushl
xchg
adc
pop
jbe
pop
sbb
dec
adc
push
cld
jg
icebp
aas
mov
or
scas
inc
ret
repz
subb
mov
adc
lods
jmp
mov
xchg
mov
or
insb
inc
cmp
sti
sbb
pushl
mov
mov
jb
pop
sti
or
push
xor
dec
popa
icebp
pop
dec
push
out
mov
mov
xor
or
in
pop
mov
cld
and
dec
and
add
in
or
add
dec
fnsave
push
test
daa
lods
leave
sub
dec
push
jb
jae
inc
or
bound
add
add
repz
and
and
or
sti
lahf
mov
mov
mov
xor
add
dec
sti
jmp
mov
test
sub
xor
pop
dec
repnz
cmpsb
sbb
push
sub
mov
mov
jo
mov
testb
jnp
inc
and
mov
or
scas
outsb
push
cmc
jne
adc
stos
add
jmp
xchg
test
adc
push
scas
outsl
mov
lods
mov
mov
test
push
data16
lods
cwtl
add
test
jmp
std
je
inc
push
push
xchg
sti
imul
lret
jmp
and
lock
and
jo
adcb
add
push
fadds
xor
inc
decl
ljmp
adc
rcrb
and
shl
mov
cmp
fiadds
cmp
decl
mov
adc
lcall
push
incl
cmp
dec
cmp
xor
jne
pop
pop
inc
pop
incl
add
add
lahf
cmp
adc
pop
ficomps
popf
fmuls
mov
push
fsub
mov
rep
or
jae
add
repz
pop
or
xchg
dec
enter
adc
cmp
sub
inc
jmp
out
dec
dec
mov
jae
add
mov
inc
sahf
mov
push
add
dec
jg
cmp
mov
mov
xchg
orl
xor
js
daa
int
sub
lds
scas
ja
jmp
or
mov
int3
add
cmc
cmp
shl
leave
xchg
fnstsw
bound
xchg
call
jle
aas
lea
into
adc
mov
xchg
mov
imul
rcr
add
add
mov
jbe,pt
ds
jns
and
add
add
add
sti
push
dec
mov
imul
pop
cld
push
lret
add
sahf
imul
pop
inc
es
jb
dec
or
lret
mov
leave
or
adc
sti
add
sbb
fsubs
repnz
cwtl
or
fwait
and
add
add
add
pop
popf
push
jl
push
push
cmc
xchg
mov
mov
mov
insl
arpl
dec
mov
inc
cmp
jecxz
int
cld
test
cmp
dec
fstpt
orb
mov
ja
test
mov
call
jbe
mov
sbb
insb
add
xchg
dec
or
add
xchg
and
cmp
fidivl
lret
xchg
xchg
add
cmp
mov
sbb
pop
filds
pop
ljmp
aaa
jecxz
cld
in
rcrb
out
cld
adc
pop
push
iret
leave
fistpll
mov
sti
lds
lret
rol
jmp
sarb
in
cld
aas
shll
jle
pop
or
mov
cld
xchg
mov
inc
mov
roll
add
loop
or
sahf
lds
mov
and
ret
or
cmp
js
sarb
inc
jmp
or
jae
add
repz
inc
je
in
pop
pop
loopne
inc
insl
inc
jns
push
cmc
ja
aaa
in
leave
add
pop
push
inc
xchg
jne
add
add
add
dec
xor
movsl
xchg
xor
repnz
mov
dec
adc
cmp
mov
jmp
mov
jl
mov
adc
je
or
dec
push
into
inc
sti
jmp
xchg
aaa
stos
loop
cmp
push
cmp
push
orl
stos
or
test
add
sahf
das
clc
outsb
cmpsl
jns
popa
mov
mov
cmpsb
cmp
push
cli
dec
pop
arpl
dec
rcll
sti
jmp
cld
inc
sti
es
add
mov
sti
mov
roll
jae
push
call
je
jmp
stos
test
fdivr
std
jne
imul
jbe
add
imul
cs
xor
jb
clc
and
xchg
rolb
add
xchg
sbb
ret
data16
sub
and
cld
adc
pusha
mov
add
xor
or
push
jo
push
cbtw
mov
pop
adc
in
bound
and
sti
pushl
or
mov
mov
in
jge
fldl
or
adc
daa
mov
ud2
mov
or
mov
aaa
adc
pop
mov
or
push
push
xor
dec
call
sbb
mov
adc
loope
add
or
add
mov
imul
lahf
mov
addl
setns
xorb
adc
aad
or
push
or
add
add
mov
test
xorb
loope
mov
adc
gs
fnstenv
cmpsb
shll
jmp
roll
inc
rcll
repz
add
stc
xor
sub
add
cmp
inc
mov
outsb
rorl
jmp
mov
je
or
add
add
in
pop
dec
rep
dec
lods
sub
scas
movsl
add
mov
cli
pop
cmpsb
push
mov
mov
loope
testl
cmp
jge
add
push
push
cmpsb
out
jmp
subl
jo
add
leave
dec
sbb
arpl
or
lea
fdivs
cld
ficompl
add
add
add
and
mov
lea
lods
push
pop
mov
cmpsl
sti
mov
push
clc
push
dec
testb
out
cmp
jecxz
xor
sarb
push
jo
aad
imul
or
std
jne
cld
push
mov
xor
test
ljmp
cmp
mov
imul
movsb
mov
mov
test
mov
rorl
sbb
rorb
dec
jne
push
inc
add
icebp
add
ret
jo
sti
je
mov
add
add
mov
jle
adc
mov
add
cmc
mov
adc
push
andl
or
add
mov
xor
dec
stos
xor
dec
sar
jg
push
inc
mov
stc
ja
or
jns
xor
outsl
push
cmp
dec
cmp
decl
cmp
rcrb
inc
inc
movl
xlat
inc
jae
repz
ret
lds
xorl
add
add
test
mov
inc
outsb
mov
stc
sahf
add
jle
or
sub
divl
repz
in
lret
mov
imull
mov
ds
and
cmp
cmp
add
sub
xor
add
cmp
pop
out
sahf
cmp
jmp
jmp
inc
cld
out
adc
das
xor
lds
jb
repz
in
das
sbb
push
sti
jmp
addl
aas
jmp
cmp
mov
stc
cmp
inc
xor
std
cmp
add
sti
xor
push
cmp
inc
adc
mov
out
pop
mov
testl
pop
int
push
add
cmp
mov
cmp
scas
add
mov
scas
call
sarb
cmp
push
sub
sub
out
or
je
add
lcall
repnz
test
std
out
scas
outsl
psubsb
jecxz
fs
cld
test
mov
mov
or
xor
jo
hlt
dec
pusha
std
incl
ret
push
sub
add
testb
rorl
jmp
jae
incl
lret
mov
push
push
test
adc
icebp
mov
pop
or
or
xchg
movsb
ret
bound
push
out
mov
add
add
xchg
ret
jge
mov
xchg
add
mov
jge
mov
mov
pop
mov
out
bound
decl
dec
mov
fdivl
not
mov
or
sbb
dec
inc
add
add
cmp
in
stc
add
out
mov
fstps
aad
jmp
movsb
cltd
repz
fildl
mov
cld
or
rcll
mov
sbb
jmp
addb
sbb
add
jmp
add
mov
xchg
fimull
or
mov
jecxz
or
outsb
ret
inc
arpl
mov
add
mov
or
adc
insb
shl
xchg
mov
es
popf
sti
std
in
jecxz
js
les
mov
imul
cmp
xor
call
mov
mov
push
loop
jb
dec
mov
xor
jecxz
sbb
xor
aaa
jge
add
lahf
repz
pop
insb
mov
add
ljmp
sbbb
jne
sbb
stc
aad
and
and
sti
mov
out
add
data16
or
addr16
add
pop
lods
jecxz
pop
add
test
jg
subb
jmp
add
icebp
add
repnz
pop
call
sub
pop
add
repnz
mov
cs
push
call
loopne
add
xchg
push
pop
mov
mov
pop
movsl
imul
mov
inc
jae
and
add
ds
decl
cld
decl
dec
call
mov
pop
dec
cltd
dec
decl
xchg
fidivs
jb
je
imul
or
call
sbb
aaa
cmp
mov
add
add
dec
incb
jg
jae
iret
cmp
rorl
fdivs
cld
push
or
xor
mov
dec
mov
sbb
push
xor
stc
sbb
xchg
cmc
addb
call
jl
cmp
xchg
dec
mov
mov
loop
testl
adc
jae
test
lcall
pop
mov
movsl
xchg
mov
cmp
out
orb
js,pn
xlat
ret
test
sub
push
pop
or
xor
cs
cmc
jae
add
mov
sub
inc
sti
pop
orb
mov
jg
sbb
add
add
xchg
mov
cltd
or
and
pushf
loope
sti
leave
xor
mov
mov
aad
lods
fsubrl
in
inc
cmp
es
add
xor
adc
jnp
add
inc
in
shl
sti
cmc
icebp
das
adc
jb
idivl
loope
out
loopne
mov
inc
cs
sub
add
in
mov
add
arpl
add
inc
cld
je
das
cld
adc
jne
push
ret
outsb
lods
out
mov
dec
dec
mov
push
inc
add
mov
jle
jecxz
add
jbe
or
add
xor
lea
push
call
das
mov
insl
lock
incb
add
add
push
jne
fildll
xor
push
fmull
or
lock
insb
out
jle
jmp
cld
mov
sub
inc
mov
adc
js
add
mov
faddl
add
sbb
or
pop
xor
aam
call
inc
mov
push
add
cld
lea
adc
add
add
mov
jb
enter
pop
lcall
enter
cmp
call
repz
or
loope
popw
es
repz
dec
mov
ret
mov
jl
fmuls
loope
mov
jl
add
add
imul
addb
xchg
mov
flds
add
add
mov
les
mov
shl
push
cmpsb
push
dec
repz
shrb
leave
lret
dec
xlat
icebp
cli
fidivs
xor
popf
xor
sub
xlat
icebp
sbb
xor
in
sub
jmp
enter
dec
xor
inc
xor
xchg
push
das
xor
out
lcall
push
xchg
jb
add
and
jmp
pop
icebp
add
sub
mov
or
xchg
add
jbe
push
call
inc
ds
add
add
repz
fidivrl
push
cld
jg
insl
xor
push
hlt
mov
call
call
jno
cmp
lds
jae
ljmp
je
jne
scas
or
mov
add
outsb
or
leave
repz
mov
testb
and
sub
repz
dec
adc
sub
clc
sbb
push
call
mov
pop
fsubp
bound
mov
cmp
leave
icebp
sub
push
cmp
les
out
cmp
mov
add
and
jae
xchg
in
push
sbb
mov
add
add
gs
push
mov
sub
push
dec
clc
xor
and
clc
mov
sbb
incl
out
cld
addb
or
sbb
adc
jb
out
clc
les
fs
cmc
pop
decl
xchg
push
mov
into
jp
aam
sub
mov
or
jae
dec
jno
mov
je
fldl2t
xor
mov
inc
rol
bnd
scas
lcall
inc
dec
imulb
jp
mov
fs
setnp
fdivr
cmpl
add
hlt
jmp
inc
mov
repnz
ss
add
inc
mov
push
cmp
dec
cld
jmp
ret
std
ja
mov
fwait
imul
cltd
jmp
push
dec
rep
roll
add
gs
push
outsb
sti
hlt
dec
cmp
in
add
sti
fcoml
das
shrl
clc
xchg
mov
movl
sub
jns
sub
jo
cld
bound
add
add
jg
cltd
repz
test
mov
pop
and
das
aad
dec
lcall
sahf
jb
mov
cltd
add
push
push
mov
adc
mov
xor
pop
cwtl
mov
mov
jno
clc
lock
push
push
mov
sbb
sti
lcall
or
testb
add
add
mov
arpl
test
movlps
test
add
lcall
or
scas
cs
aaa
sti
mov
adc
cs
and
fstl
jmp
incb
xor
xor
cmp
mov
ss
inc
mov
pop
mov
leave
mov
xlat
add
cwtl
jg
mov
incl
add
add
dec
push
lods
daa
sti
adc
iret
cld
ja
adc
ss
mov
push
jb
iret
jge
mov
pop
mov
sbb
pushl
xchg
and
mov
decl
out
clc
xor
sbb
mov
lods
decl
xchg
call
mov
dec
inc
or
push
pop
or
add
mov
clc
ret
in
cmpsb
movsl
fwait
js
mov
iret
sahf
out
cmpb
or
jbe
sarb
insb
jle
sub
inc
sbb
mov
xchg
jle
jmp
xor
and
sbb
add
sub
jnp
mov
scas
inc
ja
cmpsl
inc
sub
shlb
pushl
lret
mov
add
add
sub
jae
mov
mov
mov
jmp
adc
jle
rorl
jmp
test
add
sub
add
mov
sti
mov
repz
jmp
iret
jmp
fdivrl
mov
jmp
mov
dec
repz
lea
sti
ds
inc
adc
add
add
adc
xor
push
nop
jmp
jge
sti
je
jge
sub
jg
std
xor
vcmpss
in
lods
add
sti
xor
popa
push
push
nop
js
call
mov
cs
push
imul
call
lret
xor
jne
inc
shlb
mov
inc
fdivl
pop
leave
pusha
imul
jae
push
push
adc
sti
mov
inc
cld
lcall
cld
call
out
mov
add
inc
fdivrs
into
jnp
ljmp
dec
push
mov
add
lret
negb
push
inc
inc
adc
mov
in
stos
jae
mov
in
mov
add
and
dec
mov
push
pop
cwtl
aam
lods
xchg
mov
pop
nop
sub
inc
sbb
call
lret
decb
sbb
mov
dec
lods
call
adc
jg
adc
add
imul
movsbl
mov
xchg
repz
adc
sbb
or
add
add
outsb
cltd
mov
cmp
jg
pop
leave
andl
mov
jg
es
xchg
movsl
fsts
inc
es
and
test
aad
dec
and
xor
shl
daa
or
pop
xor
lea
and
sti
loop
or
jno
and
add
add
xor
inc
repz
lea
add
adc
add
add
cltd
add
jns
icebp
mov
add
mov
ret
js
jmp
aad
add
add
pop
stos
xchg
xrelease
dec
xchg
jmp
lret
daa
je
jp
sbb
daa
xchg
add
cmp
adc
jb
add
add
in
add
add
mov
cmc
sbb
xor
testb
mov
pop
stos
add
mov
incl
jmp
mov
xor
in
jo
repz
xor
nop
pop
mov
push
pop
adc
sub
sbb
pop
sbb
sub
sub
call
sub
adc
or
mov
out
lds
pop
mov
out
xorl
inc
leave
add
mov
addr16
xor
mov
mov
jmp
outsb
dec
add
xchg
add
fidivrs
notl
jge
test
aam
mov
sti
mov
cmp
mov
lock
cmp
add
add
or
mul
push
dec
in
dec
add
sbb
xchg
dec
cwtl
mov
scas
iret
inc
push
adc
jmp
xchg
xchg
add
adc
xchg
daa
std
lds
pop
dec
push
out
or
or
push
mov
insl
and
inc
xchg
and
sbb
and
sub
and
and
mov
pop
mov
or
add
add
and
popf
xor
fstl
mul
subl
adc
jmp
out
and
add
and
adc
loope
push
jmp
mov
outsb
lds
fwait
and
mov
dec
mov
mov
pop
jle,pn
push
sub
add
add
pop
jb
jno
ret
jmp
mov
icebp
mov
mov
mov
dec
aad
call
in
add
or
pop
stos
mov
xchg
add
andb
stos
add
push
add
dec
inc
adc
jbe
call
repnz
xor
jb
xchg
jno
sti
sbb
add
add
ret
adc
hlt
add
arpl
push
push
clc
jp
push
pop
mov
mov
int3
cmpsb
ljmp
jne
outsl
inc
add
xor
call
mov
xor
mov
add
nop
out
roll
push
or
les
js
mov
rcl
or
test
adc
les
sub
mov
roll
or
test
adc
mov
roll
rorl
cmp
xor
pusha
and
pop
or
aaa
mov
and
xor
xor
pop
or
mov
or
xor
xor
or
cmp
push
dec
sahf
xchg
mov
add
sub
mov
fs
scas
sbb
xor
imul
push
push
cld
lods
mov
mov
je
std
xchg
repz
lods
or
sbb
pusha
ret
mov
mov
mov
pop
sub
syscall
add
cmp
ret
xor
lahf
push
hlt
cltd
in
pop
dec
and
or
mov
ja
add
ja
mov
in
mov
outsb
xor
jo
push
out
roll
jmp
sbb
ret
int
sub
test
pop
bnd
sbb
sbb
outsb
lea
sti
push
cmp
adc
insb
leave
mov
test
pop
sti
cltd
sbb
adc
insb
les
notl
mov
sbb
sti
je
call
gs
mov
jne
or
pop
in
xchg
adc
mov
sti
faddl
inc
jmp
jne
sti
jns
or
fimull
push
mov
call
cmpl
popa
push
push
and
inc
std
jo
xchg
iret
add
add
shlb
jae
cmpl
imull
movsb
orb
push
hlt
std
jne
add
lock
std
jmp
jmp
sbb
dec
mov
dec
cld
jne
enter
lock
xchg
xor
call
outsb
out
outsl
push
dec
pop
jmp
inc
mov
test
add
add
add
jmp
pop
mov
cmp
jecxz
mov
adc
cmovp
std
movsl
pushf
mov
pop
adc
mov
jmp
xor
adc
push
int
cmp
push
add
add
mov
cld
mov
cmpsb
ret
mov
inc
dec
xor
add
xchg
and
jle
lods
push
mov
mov
xchg
dec
mov
pushl
or
rcll
inc
xorb
out
push
jmp
rorb
xor
lea
jmp
mov
out
cld
into
cmpsl
mov
ljmp
adc
in
cwtl
jae
ret
insl
mov
loopne
mov
add
pusha
mov
add
add
movsb
pop
sub
sbb
mov
loope
jg
jmp
fsubrl
out
and
xchg
mov
jbe
repz
ret
out
jmp
cmc
sbb
mov
cmc
add
xchg
mov
jno
jmp
xchg
ret
sti
cld
dec
add
jmp
jle
leave
cmc
int
aas
aad
ljmp
xchg
movsl
push
jb
sbb
add
cltd
or
jb
cmc
aaa
xchg
andl
jg
fwait
jp
repnz
ljmp
jnp
insb
jne
lahf
push
out
add
outsb
std
push
mov
jmp
cld
fadds
arpl
out
add
xchg
inc
add
scas
movsl
add
hlt
orl
sldt
add
mov
fisttpll
iret
xchg
cld
mov
mov
test
xchg
lods
mov
cltd
jmp
in
add
jae
add
xor
je
cwtl
ds
mov
xchg
inc
add
mov
jmp
inc
or
add
shlb
sti
xor
cld
cmp
pcmpeqw
sub
inc
and
and
imul
add
add
int
and
je
add
into
or
mov
es
cmp
sti
mov
stc
js
in
or
arpl
rcll
jmp
adc
cmp
pop
dec
adc
mov
out
mov
cmpsl
aas
or
int
mov
xchg
push
cld
add
push
inc
jns
sqrtps
and
xchg
dec
incl
xor
jp
outsb
or
mov
hlt
outsb
leave
test
in
jl
repnz
xchg
xchg
push
inc
inc
int
mov
inc
cmp
lcall
push
fnstsw
mov
pop
enter
ret
clc
jp
jmp
inc
cmpl
add
and
jmp
mov
pop
cwtl
mov
push
jle
repz
adc
imul
mov
popa
mov
les
sti
bound
add
cmp
push
or
xor
iret
mov
pop
cli
add
out
mov
mov
mov
xchg
call
xchg
xchg
loope
mov
add
adc
cmc
iret
insl
or
jnp
or
inc
mov
mov
adc
jmp
icebp
adc
leave
sub
jecxz
insb
jp
and
cltd
push
out
mov
sbb
xlat
or
jne
inc
ret
jge
pop
sbb
repz
mov
js
add
lock
add
dec
clc
insl
cmp
push
sub
imul
es
pop
and
xchg
in
or
sub
mov
lock
into
or
es
add
jae
mov
lret
add
add
add
decl
add
addr16
add
add
add
adc
mov
add
push
add
out
jp
pop
xchg
or
pushf
sar
sub
mov
mov
mov
nop
jp
js
xchg
push
jb
add
sarl
cmp
adc
add
inc
add
push
adc
cmpsl
decb
sbb
add
mov
xacquire
sbb
into
mov
fcmove
sti
and
repz
jp
ja
mov
jle
sti
adc
stos
std
or
add
and
idivl
or
fldl
adc
sbb
sbb
sbb
add
dec
repz
mov
add
add
add
test
sub
and
test
dec
xchg
lds
add
in
stos
or
movsl
xlat
jne
xchg
bnd
adc
or
or
push
xchg
push
ror
std
dec
loop
adc
test
popa
mov
das
mov
mov
insb
jnp
adc
sub
mov
sti
and
jp
insb
pusha
test
sub
cmp
or
push
sti
jbe
jl
jne
mov
and
mov
pop
jecxz
mov
or
add
adc
sub
jmp
and
mov
jmp
pop
add
andps
xchg
sbb
push
or
addr16
xor
add
data16
or
add
add
sub
orl
dec
ss
add
inc
mov
jb
xor
movsl
inc
orl
inc
incb
hlt
add
mov
mov
bound
hlt
mov
xchg
stc
lgs
mov
mov
xchg
adc
dec
pop
xor
push
test
decb
push
xchg
mov
jb
fadd
cld
mov
jb
popa
test
jmp
or
add
lock
add
sbb
jae
push
push
adc
sub
roll
pushl
rcll
xchg
add
or
push
jb
pop
cld
jne
es
jb
add
fsubl
add
inc
push
fdivp
testl
sbb
or
jmp
inc
setns
adc
pop
xor
sbb
xchg
notl
pop
decb
cmp
js
inc
adc
sbb
orb
jbe
xor
jge
jp
jge
sbb
scas
push
mov
xor
jle
xor
xor
add
xchg
cmp
addl
incb
stc
jne
ret
jb
push
mov
movntq
out
push
dec
add
sub
ds
jnp
sub
cmc
push
mov
cmpsb
xchg
cli
jecxz
pushf
and
jns
jmp
push
icebp
sub
repz
sbb
aas
fwait
sbb
call
bound
add
add
jp
add
xchg
jne
xor
adc
aaa
out
ficoml
add
xor
imul
mov
popl
sbb
je
sbb
or
je
jno
pop
ret
in
inc
mov
fisttpl
std
pushl
push
fs
add
cwtl
mov
mov
clc
incl
push
mov
add
add
hlt
stos
add
jnp
or
out
ds
enter
pusha
out
sti
jae
dec
outsl
and
adc
or
sbb
roll
cld
jmp
sub
aaa
cmpl
sti
jge
pop
pop
jne
testl
popa
movsl
add
xchg
mov
push
mov
add
cmp
jl
add
testl
inc
mov
xlat
mov
add
repnz
scas
jbe,pn
cmpsb
push
jbe
adc
frstor
or
testb
cmpl
test
lret
inc
repz
mov
test
mov
cmp
test
or
sbb
add
add
pop
push
inc
xchg
outsl
rolb
repz
jmp
repnz
and
dec
cmc
jmp
cmp
xor
inc
mov
add
repz
shrb
js
sub
testb
call
mov
out
fisttpll
cld
sub
jl
and
push
ljmp
mov
add
pop
cli
inc
jmp
dec
testl
cmp
jp
mov
jmp
lret
xchg
fs
in
fisttpll
test
sbb
lea
in
jmp
mov
adc
mov
data16
stc
mov
push
out
cld
sbb
add
cli
inc
jmp
dec
xchg
cmp
xlat
adc
push
pushl
cld
sub
cmp
jns
push
push
inc
push
pushl
cld
jne
inc
push
pushl
cld
adc
out
outsl
cmp
mov
mov
mov
xchg
inc
lret
cwtl
dec
mov
jmp
dec
push
pop
jns
jmp
cmp
add
xor
outsb
or
loopne
mov
out
cld
mov
addb
outsb
jbe
jmp
ljmp
push
and
adc
push
dec
sbb
lcall
and
dec
lea
imul
dec
sbb
mov
bound
call
adc
pop
mov
add
add
popf
lock
jo
stc
leave
sbb
aas
mov
add
mov
sbb
pop
incl
sbb
mov
or
test
lahf
loopne
es
and
mov
shll
cmp
jmp
rolb
cmpsl
js
xor
mov
movsl
xchg
mov
add
add
lret
jge
mov
sbb
xchg
cld
imul
lret
xchg
sub
jmp
sti
mov
inc
inc
mov
ds
je
mov
repnz
inc
jmp
and
jb
or
or
add
and
xor
out
or
add
enter
aaa
stos
push
cld
ret
add
add
or
or
mov
jne
ret
lock
dec
mov
or
jmp
push
add
lret
sti
jmp
jge
stc
sub
std
ds
jne
imulb
std
ds
mov
add
inc
stc
stos
mov
cmp
js
add
or
repnz
mov
sub
and
push
data16
inc
jecxz
mov
push
cmp
mov
adc
dec
push
mov
jo
notl
and
or
xor
enter
add
stos
mov
imull
rclb
icebp
cmpb
jle
call
scas
xor
int
cld
lock
cs
inc
and
dec
decl
sbb
inc
hlt
inc
add
lcall
pop
aas
pop
mov
cmp
sbb
js
add
xchg
inc
mov
js
mov
xchg
les
sub
sahf
flds
int3
rdseed
dec
sbb
test
ret
sbb
ss
add
xchg
mov
out
int3
cld
leave
sbb
mov
fdivr
leave
sbb
xchg
fimull
inc
mov
and
cs
pushl
in
std
sbb
jg
mov
adc
lret
scas
jmp
jl
jmp
inc
mov
add
fldl
adc
push
ret
ds
push
mov
push
mov
aad
dec
repz
ret
add
push
ficompl
mov
lahf
inc
mov
popl
movsb
cmpb
std
and
cld
movsl
repz
pop
xor
add
mov
lods
int3
add
movsb
lcall
or
mov
cli
bound
or
sub
repz
test
adc
push
add
sti
out
adc
call
insb
into
mov
xchg
mov
add
test
mov
jmpw
adc
je
add
out
jg
lcall
xchg
stos
insb
add
or
js
add
jne
adc
inc
in
or
add
or
mov
add
in
sub
add
mov
out
je
insb
push
test
jne
imul
push
jne
push
call
enter
lret
push
call
jl
add
or
mov
pop
sbbb
or
jl
add
sub
sbb
push
call
test
dec
xor
add
insb
in
orl
add
mov
pop
addb
push
or
cld
mov
pushl
xchg
jae
lcall
bound
or
bound
pop
and
test
dec
test
dec
in
and
lea
out
sbb
add
and
int
and
in
pusha
sti
lea
add
sahf
and
add
mov
in
inc
fadds
dec
sbb
xchg
inc
inc
mov
add
into
xlat
stc
ds
lock
jmp
cli
and
mov
push
adc
outsb
pop
sbb
call
add
hlt
ret
pop
lods
in
push
pop
add
addb
xchg
loop
lret
in
mov
jmp
add
into
ret
cli
mov
xor
cli
push
xlat
aad
xlat
std
jmp
xchg
lcall
push
and
jo
and
add
or
or
subl
filds
fcoml
stc
cli
push
xorb
xchg
divl
mov
sti
out
stos
cli
cli
push
xlat
adc
out
js
jmp
mov
pop
mov
inc
jmp
stos
addr16
mov
sub
and
js
pop
mov
add
scas
lret
xchg
ja
testb
add
cld
jmp
sub
add
aaa
pop
test
add
in
inc
adc
repnz
xor
inc
and
sarl
out
pop
sldt
add
sahf
pop
add
xor
sub
lret
int
jmp
and
cmc
add
inc
nop
add
sbb
je
pop
xor
outsl
rorl
mov
jl
je
lea
jbe
and
test
mov
jbe
or
jle
nop
mov
rcll
mov
and
ficompl
push
dec
pop
xchg
sbb
add
sbb
cmp
cwtl
mov
jp
push
clc
adc
sbb
or
bswap
or
rolb
mov
decb
pop
call
cli
ja
or
mov
jge
jo
lds
pop
mov
decl
or
mov
ds
mov
inc
and
repz
xlat
std
mov
test
xlat
sub
test
xlat
sub
mov
imul
jmp
fldcw
jmp
das
imul
insb
andb
insb
push
mov
outsb
pop
xchg
push
in
sar
pop
jo
out
add
cld
fsts
cmp
sub
lret
loopne
xor
add
push
cmp
mov
dec
aas
adc
sti
xchg
add
dec
jmp
test
call
outsb
insb
inc
push
aam
je
fbstp
mov
xor
clc
jo
sti
jle
adc
and
mov
or
add
add
psubsw
scas
add
lcall
out
repz
xchg
loope
dec
out
cmpsb
call
fs
std
into
mov
jg
add
fcompl
enter
sbb
inc
out
je
call
insb
jne
inc
cmc
pop
mov
or
sbb
jb
add
add
add
imul
pop
sbb
testl
pop
add
lea
cmp
add
lods
jne
add
repz
push
jo
clc
repz
mov
idiv
push
dec
add
mov
jge
mov
jne
or
add
mov
mov
jge
add
add
push
test
push
in
jb
mov
pop
xchg
popa
or
imul
cmp
rolb
push
ret
push
inc
push
hlt
add
inc
pop
jg
mov
cmp
add
fldcw
in
mov
cli
xchg
and
inc
mov
xchg
imul
mov
push
rolb
add
add
jbe
jge
out
roll
mov
jle
pop
mov
clc
sbb
jb
push
add
jae
repz
gs
popa
clc
cmpl
clc
jno
iret
clc
call
add
outsb
fcomip
xor
mov
mov
inc
mov
inc
rep
mov
jmp
add
insb
sub
mov
sub
add
add
xor
add
insb
adc
pop
cmp
int3
xchg
loope
sub
icebp
or
cld
jmp
mov
lea
andb
roll
cmpsb
or
ss
fs
leave
repz
or
jb
or
lahf
pop
sti
dec
fs
lods
push
pop
mov
ficompl
sti
je
or
add
mov
cli
je
mov
xchg
fldt
clc
jbe
stc
add
sbb
add
jmp
inc
hlt
push
add
fisubrs
xrelease
imul
das
push
adc
cmp
pop
div
jne
add
or
cli
andb
pop
push
add
incl
add
add
lret
arpl
test
jnp
mov
push
inc
xor
push
fsubr
push
jmp
imul
pushf
push
jmp
sub
pushaw
test
xchg
dec
push
pop
das
jg
orb
insb
mov
mov
push
xor
add
orb
add
lock
lahf
or
mov
cmp
sub
mov
mov
mov
jbe
jecxz
or
dec
mov
sub
cmp
jb
xor
testb
mov
pushl
sbb
add
dec
jmp
lahf
repz
mov
add
lods
call
add
jecxz
push
cmpsb
filds
mov
inc
iret
cmc
xorb
jmp
and
mov
orl
shll
jmp
orb
jo
out
js
hlt
shr
ja
xlat
inc
mov
and
xchg
pop
cmpsl
lds
insb
sbb
pop
mov
fiaddl
or
ds
bt
pop
xchg
add
addr16
dec
push
std
add
pushf
out
test
loope
mov
xor
out
rorb
imul
xchg
jne
add
scas
and
xchg
add
mov
or
out
andb
pop
or
je
mov
ss
cli
sahf
lock
and
jmp
jns
jmp
insb
dec
incl
add
cli
je
pop
sbb
mov
fs
push
and
cmp
jp
xchg
add
je
and
dec
add
xchg
outsl
add
jne
or
sbb
inc
push
dec
push
mov
idivb
mov
inc
jmp
and
inc
jne
inc
jmp
push
sub
int
cmpsl
div
adc
ds
pushl
jle
or
idiv
push
sbb
add
mov
pop
dec
imul
popa
sti
add
push
loope
cs
push
push
mov
mov
lock
sti
cmc
pop
clc
mov
cld
cmp
add
fdivrl
add
or
das
lret
xor
fdivr
test
add
add
pop
jae
mov
jno
mov
dec
xchg
adc
mov
xchg
or
push
hlt
je
imul
pop
sbb
sti
setnp
in
add
jne
clc
ja
mov
leave
sub
out
and
in
dec
adc
gs
pop
sbb
insl
inc
inc
inc
mov
out
pop
aaa
lock
call
add
add
xor
out
lret
js
out
mov
mov
outsl
mov
outsl
inc
xor
addl
sub
jmp
inc
rcrb
xor
out
push
fiaddl
lock
jbe
sti
or
add
addr16
popf
mov
add
jae
loope
testb
sbb
inc
xchg
xchg
dec
shrl
stc
jno
imul
sbb
roll
push
and
bound
imul
cld
mov
popl
out
xor
imul
add
push
inc
or
xor
jnp
ja
sbb
jmp
or
dec
pop
stos
pushf
mov
mov
imul
test
pop
push
mov
outsl
enter
roll
stc
pop
jmp
jae
sub
idivl
push
add
loop
jae
cmp
dec
out
or
jmp
out
data16
xor
cmp
cmp
inc
fadds
enter
into
sbb
je
cmp
pop
mov
add
jecxz
or
hlt
pop
ret
sahf
jo
xorl
inc
mov
mov
mov
jae
data16
sti
fiaddl
pop
sti
jne
mov
mov
jp
repz
decl
push
add
stc
pop
sbb
inc
int3
aas
push
scas
out
push
xchg
sti
pusha
lock
lea
or
jmp
add
add
add
pop
cmp
pop
hlt
push
jb
fsubl
das
mov
jae
pop
cmp
cmp
pusha
sti
pop
mov
dec
mov
jp
jo
add
xchg
lds
scas
jg
hlt
out
mov
push
add
add
in
ds
inc
stos
ds
out
mov
fldl
xor
jle
push
movsl
jmp
aaa
push
jp
pop
cmp
ljmp
add
in
ffree
fwait
xor
jbe
ret
mov
add
aaa
add
adc
call
loop
test
add
in
jg
jp
fldcw
insl
inc
stos
inc
pop
inc
sbbb
pop
mov
fidivl
push
add
scas
push
add
gs
jne
leave
repz
push
push
and
in
inc
call
hlt
lock
je
pop
mov
je
pop
lods
jp
out
xorb
cltd
loope
js
mov
subl
std
test
mov
or
fstps
std
cltd
sar
ja
mov
pop
js
dec
fnsave
or
fldl
pusha
push
hlt
call
add
xor
push
dec
xor
arpl
bound
jl
mov
dec
mov
iret
lods
xor
mov
inc
imul
dec
je
je
jbe
cld
jae
add
mov
iret
imul
in
subl
ljmp
fcomi
jmp
dec
add
cmp
inc
mov
add
jbe
test
aaa
add
lea
sub
pop
les
jl
add
decl
shll
sub
rorl
nop
stc
cli
jg
cmovo
mov
lret
decl
add
ss
shll
enter
lds
mov
xchg
std
add
clc
pop
inc
jp
out
in
jo
ja
rolb
or
jns
incb
pop
cmp
sti
mov
jns
mov
push
mov
ljmp
clc
cmp
pop
mov
int3
std
scas
in
jbe
mov
ja
scas
sbb
cmpsl
cmp
lahf
cmp
jmp
call
xor
js
lahf
pop
ss
call
sbb
add
add
push
dec
push
pop
fisttpl
rep
repz
fistps
jbe
add
popf
cld
pushf
call
out
std
fcmovnu
cwtl
mov
add
outsb
cli
jne
mov
call
mov
call
mov
fistl
xor
mov
xchg
es
jp
icebp
repz
mov
leave
repz
mull
rcr
arpl
std
bound
roll
or
mov
dec
push
sar
mov
xchg
call
or
notb
push
xlat
dec
cs
mov
fldcw
in
cltd
cld
mov
jnp
je
lea
sbbb
lds
dec
aad
cwtl
stos
idiv
push
dec
in
call
es
loope
dec
stos
idiv
clc
cmp
mov
mov
ret
dec
push
pushf
mov
out
push
jne
rolb
xor
jp
add
inc
and
sbb
mov
add
sub
aad
hlt
enter
jae
dec
dec
out
inc
outsb
shll
int3
mov
add
out
mov
dec
fisubrs
push
add
dec
lods
call
dec
add
mov
cld
dec
fcoml
cmp
xchg
loope
mov
mul
mov
loopne
push
pushf
pop
or
leave
fmul
add
mov
add
push
cli
cmp
mov
int
adc
mov
push
mov
out
jle
push
lcall
cmp
jg
out
aas
mov
mov
xchg
mov
or
add
fdiv
out
and
repnz
mov
mov
and
in
add
repz
jo
je
repz
aad
inc
sub
repz
dec
in
call
loopne
inc
testl
jbe
daa
sbb
out
mov
xor
mov
verw
test
pop
xor
pop
in
xlat
lcall
mov
mov
test
daa
ret
das
and
lds
add
mov
lds
pop
int
jnp
lds
pop
or
xchg
adc
test
out
add
add
and
add
add
unpckhps
cli
push
add
popa
mov
mov
movsb
shrl
jp
lds
xor
and
adc
push
test
or
cmp
add
add
jecxz
push
test
out
add
sub
test
fdivrl
add
add
mov
out
test
lods
imul
mov
push
lea
or
add
push
push
shlb
push
cmp
push
xor
test
and
test
sti
pushl
test
add
aaa
add
enter
xchg
pop
pop
mov
incb
push
and
mov
mov
pop
xchg
adc
ret
mov
sbb
cmp
les
out
out
adc
fsub
adc
adc
or
into
lock
jb
fdivr
jne
dec
and
lret
adc
jae
pop
lcall
inc
sbb
or
shl
mov
ds
call
sub
std
mov
cs
jg
lret
repnz
add
dec
repz
pop
dec
cmpsb
sbb
hlt
insb
lods
daa
scas
insb
mov
inc
adc
fimuls
dec
icebp
insl
dec
outsb
icebp
fldl
lock
push
outsb
add
mov
daa
subb
or
add
ss
add
lock
jo
ret
sub
add
or
pop
aam
andb
pop
int3
jmp
add
add
cltd
call
in
mul
ss
fdivrl
jne
push
mov
js
fs
pop
sbb
jo
pop
and
pop
and
test
adc
jmp
add
cmp
jne
adc
sub
dec
add
add
je
call
sbb
add
add
jge
jnp
arpl
pop
repz
bound
push
int
sub
out
call
cmp
add
mov
filds
test
add
and
test
repz
outsb
flds
add
lret
push
in
movsb
mov
in
inc
add
rolb
andl
ja
mov
repz
jae
jmp
xor
and
enter
cmp
jmp
outsb
ds
mov
dec
clc
sub
orl
push
int
cmp
sahf
filds
dec
or
jg
fldcw
cmp
popa
andl
adc
cli
inc
cmpsb
cli
or
faddl
add
cltd
sbb
cmp
mov
dec
xlat
jne
jbe
inc
subb
outsb
mov
xlat
add
adc
shrl
mov
fs
and
xchg
fdivr
mov
pusha
mov
clc
daa
aaa
dec
sbb
and
lock
repz
sub
pop
les
xor
add
js
push
xchg
sub
subl
pop
in
jle
adc
hlt
in
repz
lret
xor
popf
loop
dec
adc
or
xchg
std
test
test
push
jle
out
insl
xchg
add
fidivs
jo
pop
lret
ljmp
neg
aas
cmpsb
stc
sarb
scas
add
cmpsb
add
xchg
sbb
push
inc
and
xchg
fwait
lret
test
mov
data16
pop
inc
sahf
bound
rcrb
dec
pusha
jne
adc
and
insb
arpl
jge
adc
faddl
stc
push
mov
mov
add
mov
mov
iret
flds
mov
pop
mov
and
xchg
add
das
jmp
lods
jne
push
lcall
and
jmp
cmpsb
je
add
mov
cmp
add
inc
and
and
pop
ret
push
mov
jo
jo
or
dec
pushl
sub
inc
and
or
xor
mov
jecxz
cmc
adc
jbe
jne
pop
xor
lods
mov
jb
jne
jo
call
sub
jmp
outsb
inc
hlt
sbb
out
push
pushl
jg
pushl
xor
mov
mov
fsub
arpl
add
mov
jne
push
test
fisttpll
xchg
cld
pushf
adc
mov
add
adc
sbb
int3
push
cli
aam
inc
mov
rcl
jo
xchg
aad
mov
arpl
sti
mov
pop
shll
lds
pop
xchg
push
inc
mov
leave
leave
ja
in
or
aad
jbe
sbb
mov
ss
test
push
insb
sub
shrb
and
mov
and
mov
fimuls
or
dec
push
pop
push
outsb
sbb
and
push
xchg
lcall
out
xor
out
leave
cs
sahf
outsb
test
adc
or
adc
add
loop
rcl
shll
and
repnz
add
repz
mov
pop
mov
pop
inc
adc
flds
testb
and
cmp
add
add
lret
dec
pushf
fldl
call
shr
jmp
adc
and
cmp
or
and
rorl
and
aad
xor
jmp
mov
add
adc
and
insb
add
repz
loopne
cmovne
add
add
stc
adc
and
comiss
test
hlt
add
ret
push
pop
and
push
call
inc
and
pop
or
jo
xor
cmp
push
scas
scas
jne
stos
and
cmp
xor
mov
adc
xor
test
sti
jb
and
sbb
add
out
push
cmp
daa
jecxz
push
push
jecxz
sar
jp
iret
aaa
add
pop
inc
and
mov
or
popf
adcl
jp
mov
push
lcall
jl
cmp
je
push
inc
and
add
je
es
faddp
cs
call
mov
xor
cli
xor
sbb
adc
adc
sub
in
sti
mov
les
pop
dec
xor
sbb
dec
inc
and
ror
dec
cmpsb
add
test
push
iret
sti
lcall
mov
push
outsb
adc
jbe
adc
sarb
lods
daa
push
insl
inc
mov
outsb
jmp
fs
testb
dec
scas
or
ds
xlat
inc
lret
xor
add
add
add
push
insb
mov
les
and
add
adc
jl
sldt
inc
jle
hlt
out
jp
xchg
leave
aam
adc
repz
outsl
cli
mov
outsb
inc
int
outsb
xor
mov
add
hlt
ret
insl
inc
int
imul
add
add
das
and
arpl
punpckhwd
lock
mov
jmp
adc
mov
test
shl
and
add
pop
pusha
and
out
adc
add
mov
and
jle
insb
pop
int
push
vhaddpd
mov
sahf
lret
data16
mov
fmuls
add
add
sub
mov
in
scas
add
test
or
lahf
mov
mov
fdivs
lret
dec
mov
jmp
adc
add
pusha
mov
rolb
pop
or
repnz
pcmpeqw
rolb
pop
or
pusha
das
lock
insl
in
add
lock
sbb
add
add
add
out
add
dec
pop
divb
ror
adc
add
mov
dec
add
sti
jns
lret
cmpl
add
dec
lret
cmpsb
dec
sti
cmp
call
pop
or
or
add
jecxz
outsb
push
out
les
xor
push
sti
mov
jbe
ficoml
inc
add
cmp
test
push
fucom
addb
fsubrl
call
sbb
fdivrl
xchg
sti
jg
adc
repz
decl
andb
adc
cwtl
scas
repz
inc
ja
into
lahf
or
inc
mov
jl
pushf
mov
hlt
insb
dec
push
and
icebp
add
pop
call
xor
pop
jmp
add
sar
popl
add
add
jp
decl
mov
insb
xor
adc
sub
and
xor
gs
inc
jbe
mov
jle
ja
pop
movsb
xchg
add
jno
inc
lds
and
pop
mov
push
mov
out
fisttpl
xchg
xchg
mov
insl
jp
cli
jl,pn
push
xchg
mov
cli
hlt
add
xchg
mov
gs
into
cli
push
adc
adc
mov
jp
rorl
imul
ds
hlt
leave
xrelease
or
fimuls
js
xchg
cmp
add
inc
mov
bound
sarl
movsl
addr16
inc
cmc
pusha
lret
mov
cmp
jne
dec
cmp
je
ficoms
mov
leave
dec
push
sbb
add
add
push
inc
lock
je
cmp
sti
xor
je
sub
sbb
adc
xchg
iret
jle
mov
movsb
pop
mov
into
pusha
rorl
mov
je
cmp
cmp
addb
rcrb
inc
aas
lods
daa
lahf
xor
cmpb
mov
test
testb
mov
cmp
add
add
add
call
jo
push
push
dec
push
xor
add
outsl
outsl
std
aad
fst
je
incb
mov
dec
repz
add
fidivrl
dec
pop
jecxz
decb
xchg
sti
test
aas
fisubrl
adc
inc
inc
test
test
decb
add
add
add
add
pusha
cs
inc
out
sub
sbb
aas
mov
jo
stos
hlt
out
push
mov
jg
int
lret
sahf
xor
jle
or
inc
and
cmpsl
add
jae
add
repz
ret
pop
add
lret
fadds
jl
daa
mov
out
leave
inc
pushl
mov
repz
mov
cmpsl
add
jae
add
add
add
imull
inc
jge
xchg
xor
cmp
movsl
rep
aas
push
xor
add
repz
jp
das
and
test
fbstp
in
sahf
adc
test
cmp
in
lret
cli
std
mov
cli
aam
in
jmp
movb
ret
cmpsl
fnstenv
mov
cmp
subl
into
dec
lds
jno
call
push
sbb
add
mov
adc
jbe
add
xor
jmp
and
mov
xor
add
cld
adc
addl
push
mov
add
repz
shll
push
jl
into
adc
lock
add
cs
cmc
dec
add
mov
adc
xlat
xor
andl
sbb
mov
add
mov
divl
and
xchg
mov
jle
and
sbb
cmp
sub
cmp
or
cmp
add
cmp
or
test
add
add
jbe
add
ss
das
dec
jno
xchg
inc
inc
push
icebp
test
sub
pushl
jp
sub
call
xadd
xlat
ja
add
je
mov
je
pop
je
mov
je
test
mov
rolb
add
push
mov
jle
fistpll
xchg
jle
add
add
idivl
jecxz
add
mov
push
add
mov
adc
es
lret
or
xchg
add
daa
testb
xchg
lock
mov
pusha
lcall
or
ds
xor
cmc
mov
ja
hlt
inc
mov
dec
jbe,pt
pop
mov
mov
aas
outsb
notl
sbb
xchg
enter
add
mov
js
pmulhuw
sete
popf
push
jne
fimull
add
cmc
ret
or
lock
repz
inc
push
add
fcomi
mov
dec
sub
call
adc
xor
bound
jl
jb
add
sbb
je
call
mov
xchg
xlat
pop
leave
ja
xchg
pusha
jecxz
lods
int
push
or
pop
jl
adc
push
mov
mov
stc
add
adc
decl
adc
je
add
jmp
leave
lock
dec
mov
dec
aas
adc
fs
mov
testb
bound
lret
add
add
cmpsb
roll
repz
shll
and
add
or
out
je
push
ret
cmc
je
lret
add
cmp
or
lods
loopnew
scas
mov
in
xor
jnp
xchg
add
mov
std
xchg
dec
push
add
decl
ret
or
sarl
or
dec
adc
ud1
test
decl
push
jmp
adc
pop
mov
inc
outsb
lret
xchg
incb
jmp
add
lcall
push
ret
inc
mov
loop
dec
in
and
scas
fisubl
lods
dec
or
mov
mov
add
enter
xor
mov
add
add
inc
subl
push
mov
xor
mov
psubb
mov
cld
aaa
mov
cmc
dec
xchg
xor
sub
lock
mov
aad
jbe
call
adc
mov
add
repnz
out
clc
das
int3
adc
and
inc
jg
call
adc
xchg
call
out
add
add
inc
add
enter
dec
repz
outsl
mov
mov
jmpw
or
mov
sub
xchg
mov
add
ret
lret
jne
add
cwtl
ret
jbe
or
mov
add
sbb
lret
xchg
xor
push
leave
jne
insb
repz
and
mov
add
mov
inc
jmp
mov
fsts
das
and
rorl
das
and
shr
add
jp
and
jp
and
cltd
adc
mov
mov
cmc
adc
mov
adc
or
sub
enter
and
add
xchg
jp
mov
dec
xor
add
shl
cmp
add
jbe
pushf
push
pop
mov
xlat
out
lock
mul
mov
mov
or
std
or
adc
icebp
loope
sub
adc
mov
rcll
sbb
add
add
sbb
mov
add
aam
mov
jne
push
adc
jbe
add
pop
cltd
incb
mov
sti
lods
repnz
orl
aaa
jg
mov
mov
adc
lahf
stos
xchg
xchg
cmp
and
sar
popa
adc
jne
cld
mov
lods
xchg
sbb
add
push
mov
repz
rorb
in
imul
push
mov
imul
jmp
clc
lods
enter
jecxz
cmp
add
add
mov
xchg
cmp
adc
sahf
ret
fadd
jne
popa
jmp
mov
in
pop
add
shlb
xchg
pop
cmp
loope
add
mov
sbb
or
mov
adc
mov
xchg
cmp
ret
icebp
dec
aam
pop
jecxz
pop
sbb
mov
add
mov
push
in
lds
cmc
add
in
push
jp
in
pop
adc
or
leave
inc
sbb
xchg
stos
mov
push
ret
pushf
popf
mov
std
daa
ficoml
notb
and
adc
mov
adcl
mov
mov
push
bound
je
out
sbb
mov
adc
cmpsb
or
inc
add
adc
mov
dec
sbb
call
or
cmc
jne
xorb
je
push
or
mov
pop
pop
ret
push
mov
add
addr16
add
push
adc
loop
jbe
add
repz
jae
adc
fsubrp
orl
sub
jmp
incl
add
add
fcomip
jne
daa
divb
xorb
add
loope
add
nop
out
add
mov
push
xchg
xor
loop
sbb
mov
je
test
out
or
xor
adc
cmpsb
pop
mov
mov
adc
xchg
push
popf
jg
sti
jg
adc
mov
push
xchg
add
jbe
incb
aam
xor
stos
cmpsb
add
incb
xchg
mov
adc
dec
sahf
mov
or
mov
sti
xchg
sahf
mov
jp
mov
xor
adc
out
add
push
cmpsb
adc
es
test
cmc
ja
movsl
repz
add
lret
test
mov
imul
fistpl
icebp
movsl
mov
dec
xor
add
add
inc
in
stos
and
xor
popf
psubusb
loopne
lahf
xor
mov
xchg
mov
in
mov
xor
mov
adc
xor
dec
lock
jbe
mov
mov
ret
xor
lret
xor
inc
dec
sbb
mov
add
add
xor
pop
xor
jmp
dec
repz
inc
lock
mov
in
call
mov
sub
jae
add
es
dec
out
jmp
sbb
add
mov
or
in
stc
mov
xchg
sub
jecxz
add
xor
shll
add
jo
add
pop
idiv
sub
shll
push
outsb
fsts
sub
fsubrl
fcoms
repnz
pushl
sbb
ret
push
mov
in
sub
ljmp
push
or
fwait
sbb
sahf
test
pop
rolb
jl
test
out
bound
cmc
jne
fadds
add
add
mov
xchg
arpl
xchg
jbe
fadds
movsl
or
push
mov
pushl
mov
inc
add
out
out
sar
push
mov
es
sub
or
je
push
inc
or
dec
mov
je
mov
into
push
mov
inc
cmp
sets
push
mov
add
add
or
mov
mov
dec
mov
cld
leave
lret
adc
je
repnz
mov
jp
mov
inc
add
add
loopne
in
mov
xor
lods
add
mov
callw
rorb
and
daa
add
stos
cmpsb
add
jmp
incb
add
add
xor
aas
mulb
mov
fisubrl
movsb
sub
xor
mov
lret
mov
mov
imul
repnz
decb
adc
or
icebp
xchg
stos
add
add
mov
orl
cs
fidivl
cmp
jb
insb
out
inc
add
insb
aam
adc
add
add
in
add
mov
insb
lods
xor
mov
sub
mov
andl
mov
jae
add
callw
cli
fsts
xor
sahf
jp
aas
pop
mov
addr16
int3
or
jmpw
faddl
inc
add
imul
xor
incl
mov
add
ds
daa
imul
inc
repz
xchg
add
push
call
js
push
ret
addl
sar
push
out
insl
sbb
out
js
xor
and
call
hlt
cmp
je
inc
add
mov
mov
add
mov
call
jecxz
mov
jbe
add
add
lret
cmpsb
push
add
push
mov
lret
fdiv
mov
ret
cli
call
push
mov
in
mov
mov
or
fptan
addr16
add
cmpsb
out
pop
pop
or
add
inc
decl
lret
dec
dec
fimull
mov
incb
pop
mov
push
call
sbb
push
push
add
repz
into
ud0
jno
in
jg
call
call
push
in
jge
inc
aas
fbld
push
call
jge
loopne
rcl
jo
xchg
add
mov
adc
aaa
les
mov
imul
call
add
cmovo
repz
mov
sbbb
mov
sub
repz
js
repz
popf
out
mov
jg
fimuls
lods
pop
jmp
or
and
std
mov
xor
lds
daa
jmp
push
faddl
mov
movsb
mov
jmp
out
je
add
inc
adc
rorb
sbb
repnz
xchg
jo
cmc
jnp
je
inc
das
and
jb
jb
lret
lods
add
mov
ret
into
pop
add
adc
aad
add
jne
push
pop
xchg
arpl
cmpb
movntq
add
arpl
add
out
test
add
xor
je
mov
repnz
sub
popa
add
repnz
test
shrb
jo
and
add
insb
dec
add
icebp
mov
jmp
add
movsb
test
mov
test
out
add
mov
pop
mov
jmp
cmp
dec
or
mov
jl
pop
loop
shr
push
lea
add
dec
int
mov
test
decb
push
icebp
add
mov
push
pop
dec
jmp
push
add
push
xchg
and
inc
mov
cmp
cmp
xchg
inc
iret
add
aas
andb
cmp
adc
xchg
mov
lds
das
lret
rolb
out
out
push
xchg
call
sbb
or
out
add
jnp
repz
push
pcmpgtb
mov
mov
loopne
mov
mov
mov
pop
cmp
clc
das
adc
push
loopne
pop
imul
lret
clc
xchg
mov
sbb
add
add
aaa
int3
in
aas
xor
xchg
repz
pop
das
int3
inc
loop
inc
add
outsb
add
in
out
nop
repz
and
daa
and
jmp
jge
shlb
or
push
mov
mov
scas
cli
mov
mov
jbe
mov
add
cmp
mov
jmp
mov
jp
xor
add
cmp
daa
and
jmp
xchg
mov
loope
fwait
mov
repz
lock
repnz
cmpsb
flds
stos
mov
add
clc
add
lods
dec
fisubs
pop
add
add
or
jecxz
add
cli
sub
fdivr
xchg
add
mov
in
loop
popa
add
add
add
dec
mov
scas
push
push
or
mov
and
cli
lcall
hlt
pop
jmp
mov
lods
std
inc
pusha
push
lea
repnz
notb
jp
or
mov
or
mov
lods
lea
push
stos
sti
lds
mov
test
rolb
mov
xchg
out
inc
lods
sti
cmp
push
xchg
lds
lods
add
add
lods
outsl
fisubrl
add
pushf
xor
lcall
int
inc
mov
call
push
fstpt
test
pop
std
sbb
jmp
test
mov
jae
pop
sbb
popa
lods
push
pop
repz
lods
fwait
lods
cmp
add
aad
gs
push
testb
pop
pop
outsl
lods
mov
pop
mov
mov
daa
movsl
adcb
out
bnd
js
dec
gs
es
sub
je
add
arpl
and
mov
mov
sti
jmp
movsl
jle
lret
aas
mov
push
and
add
jl
jle
jle
pop
pop
mov
push
mov
mov
push
pcmpeqd
test
lods
cli
sbb
or
xchg
out
repz
mov
cwtl
push
mov
rolb
aam
add
and
test
sti
jge
jl
inc
lea
subl
pop
fcmovne
repz
rorl
xor
insb
pop
sub
xchg
pop
out
cmp
pusha
jbe
ret
lods
cli
jmp
mov
xlat
or
rolb
inc
addb
mov
and
in
cmp
xor
pushl
cmpsb
notl
es
sub
mov
loop
sbb
psrlq
and
pop
adc
pusha
xor
test
add
add
cmpsb
loop
scas
pop
idivb
mov
jecxz
mov
scas
cli
push
call
clc
add
and
add
rol
mov
jmp
push
test
mov
and
aaa
andb
jns
jge
cmp
jp
fmull
push
mov
add
pop
adc
add
scas
push
mov
pop
push
pop
cli
popf
dec
popf
pop
addb
and
cmpsl
sti
fiaddl
daa
mov
incl
lcall
in
ret
inc
add
jg
or
add
shlb
daa
ja
repz
mov
pop
fwait
leave
loopne
lods
insb
ret
jbe
dec
adc
and
sbb
add
add
repz
loope
mov
repz
lret
push
xchg
test
sbb
icebp
lods
gs
add
jle
pop
mov
push
int3
adc
cvtdq2ps
addl
test
fwait
pop
loopne
lods
insb
ret
stc
outsb
jp,pt
call
or
mov
cli
lock
repz
add
add
add
jle
jmp
sarl
stos
mov
push
jb
inc
xchg
mov
add
or
in
xchg
and
push
addl
mov
in
xor
std
scas
inc
jmp
and
mov
sub
jb
push
lods
jle
bound
cs
das
and
in
fisubrs
and
pusha
xchg
iret
adc
ror
adc
insb
xor
add
xor
sub
add
sub
mov
pop
and
sub
xchg
mov
jg
push
push
xchg
add
jge
out
call
pop
mov
dec
call
xor
and
xor
mov
mov
pusha
test
dec
mov
add
add
mov
mov
inc
imul
ret
inc
idiv
call
mov
add
ljmp
into
mov
dec
addps
sbb
and
movsb
sti
mov
add
mov
jl
sti
jo
jae
scas
rorb
clc
call
sti
cmp
add
loopne
adc
xchg
and
call
add
notb
adc
je
cmovno
push
pop
cmpsb
xchg
inc
ficompl
loop
and
hlt
das
in
xor
ud0
int3
pminub
adc
fcomi
out
mov
xlat
fwait
or
out
popf
not
cmpsl
push
repz
mov
out
insb
jmp
cmpsb
or
push
fdivrp
daa
add
pop
or
repnz
sbb
pushf
xor
sti
pop
out
jg
repz
inc
iret
filds
rorl
xchg
cmp
call
movsb
add
repz
or
inc
subb
sbb
incb
adc
repz
movsl
inc
add
jno
add
or
adc
test
mov
int
fwait
dec
out
pop
xchg
shlb
mov
push
jb
inc
cs
add
push
adc
xor
shl
cmpsl
cli
repnz
add
bound
fwait
jle
mov
test
cwtl
jne
ja
call
and
push
add
sbb
mov
add
xchg
or
repz
pop
xchg
mov
inc
stc
cli
call
cmp
add
and
mov
js
add
in
sub
fsubrs
loop
cltd
repnz
inc
addl
push
rorb
sub
xor
cmpsl
clc
push
mov
push
adc
shlb
add
lock
in
xor
push
xchg
jbe
pusha
xor
xor
repnz
call
push
je
mov
or
aas
mov
dec
cld
or
cld
lds
mov
outsb
stos
adc
decl
push
inc
cmpsl
push
adc
sub
add
inc
dec
loopne
lea
out
mov
repnz
cwtl
faddl
cmpsl
enter
add
add
xor
dec
sahf
push
adc
add
xchg
cs
lahf
nop
cmc
aas
mov
std
out
push
mov
fwait
repnz
cmc
lea
filds
imul
mov
js
call
lds
lods
loop
pop
xor
xchg
out
mov
jo
or
sub
mov
mov
pop
in
push
mov
call
inc
mov
js
lods
repz
push
arpl
mov
pushf
js
test
call
cmp
inc
in
xchg
push
mov
gs
push
or
bound
inc
cli
mov
lea
push
mov
push
sti
push
inc
mov
test
loope
cs
popl
add
add
jne
add
or
aad
and
xchg
jnp
inc
icebp
push
push
std
jmp
std
xor
out
pop
cmp
sub
test
mov
adc
xchg
mov
movsl
jle
cli
insl
repz
mov
stc
cld
push
hlt
inc
jmp
add
xor
lods
fmull
orl
mov
add
add
mov
mov
dec
incl
test
pop
popf
divl
addl
adcl
call
adcb
mov
or
out
sub
or
adc
inc
aaa
add
aaa
notl
aaa
call
dec
call
push
cmp
daa
testl
cvttps2pi
push
jge
push
sub
or
add
movsl
cld
or
inc
sub
sbb
movsl
sub
fiaddl
push
adc
fdivl
or
dec
mov
adc
addr16
cli
xlat
test
and
fwait
xchg
fwait
jne
mov
dec
or
test
adc
mov
adc
lcall
std
fnsetpm(287
xchg
adc
push
in
sti
or
rcll
sti
cmp
shll
add
repz
mov
adc
mov
movb
mov
popl
xor
pusha
cmp
mov
lcall
or
mov
divl
jp
add
add
jns
add
repz
stos
mov
repz
shlb
fs
popf
add
add
sbb
out
cmp
add
pushf
add
mov
push
test
push
in
mov
arpl
test
addr16
sti
jle
fs
push
xchg
js
push
rorl
push
xchg
mov
sub
add
add
popf
cli
out
mov
sub
repz
dec
enter
push
fldl
inc
div
add
push
sbb
lcall
jge
xchg
outsb
inc
sub
aad
mov
mov
add
jo
mov
xlat
push
inc
mov
cmp
lea
jae
jp
mov
add
imul
and
jecxz
addl
add
xor
andl
add
out
jno
add
push
in
add
xor
cmp
and
or
idiv
pushl
jecxz
xchg
testb
repz
xchg
add
repnz
mov
mov
mov
sti
mov
jne
dec
xchg
or
dec
and
and
insb
cli
movsl
movsl
dec
rclb
mov
andb
lods
add
leave
xor
dec
cli
dec
lock
mov
and
adc
lea
mov
mov
mov
incl
add
add
mov
dec
add
repnz
pop
jb
add
repz
xchg
mov
mov
xchg
mov
cmp
repz
lret
cs
insl
movsb
add
jb
add
or
cwtl
xchg
out
inc
mov
sbb
repz
call
daa
loope
inc
pop
in
add
jno
add
icebp
out
lods
jmp
test
repnz
mov
pushf
cli
jmp
cmp
repnz
and
jmp
int
mov
pushf
cli
jmp
pop
repnz
jns
add
mov
add
adc
stc
ljmp
add
nop
in
in
int
movl
repnz
adc
out
mov
data16
or
ret
call
or
add
mov
ss
mov
fs
lods
add
mov
add
repnz
jnp
dec
add
sbb
dec
push
jbe
lret
add
out
push
push
leave
add
fisubrs
sarl
cmp
mov
pop
cmp
add
add
stc
add
jecxz
xchg
sub
add
fwait
add
mov
dec
sub
lock
lock
aam
add
and
lds
idiv
loopne
or
lcall
dec
or
add
sti
push
iret
or
mov
movsl
test
outsb
xchg
call
push
and
add
add
xchg
add
mov
mov
cld
xchg
cmpsb
rol
push
xchg
xchg
pop
ljmp
push
call
xor
mov
xchg
mov
dec
aam
dec
mov
pop
lcall
pusha
das
dec
loopne
sub
dec
pop
ficompl
fnstcw
adc
mov
es
js
in
pop
cmp
jns
int3
outsl
cld
cmpsl
jmp
push
scas
lcall
hlt
out
pop
lcall
dec
iret
pop
mov
dec
jmp
or
hlt
adc
add
out
std
lea
xor
pop
push
mov
out
cmpsl
aas
call
rorb
pop
xor
call
xor
and
les
popf
add
add
call
mov
int3
fwait
add
pushf
lret
jae
stc
popf
push
add
add
pop
pushf
adc
das
flds
jb
iret
and
lods
add
mov
vmulpd
pop
inc
enter
nop
repnz
add
lods
data16
mov
add
ja
add
fcmovb
ss
xchg
dec
cmp
push
cmp
and
hlt
mov
pop
jnp
add
xor
or
sbb
gs
xor
xor
push
fsubr
cmp
addr16
cmp
sbb
jno
lahf
and
and
or
jg
and
repz
dec
jle
test
in
jb
sarb
push
add
add
hlt
lods
add
jb
subl
ja
push
cmp
add
pusha
fldl
add
xor
fimull
sbb
adc
xorb
adc
cmp
sbb
mov
push
loopne
addl
xchg
adc
pop
int
add
mov
push
mov
add
add
sbb
add
sub
mov
and
mov
xor
add
clc
xchg
dec
sbb
cltd
mov
popa
lods
mov
push
loop
xchg
jnp
incl
jns
or
push
mull
pop
xchg
popa
push
loopne
popf
repz
fucomip
cmc
ret
arpl
call
add
inc
pop
lock
add
sbb
xchg
pmaxub
push
lcall
out
mov
push
lret
imul
xor
outsl
test
mov
cmpsl
fwait
hlt
repnz
cmp
mov
mov
outsl
lret
add
push
lcall
inc
jmp
add
add
test
repz
add
fs
repz
hlt
xor
add
stos
mov
inc
jmp
repz
aad
aad
testb
pop
dec
repz
sbb
xchg
ds
xchg
inc
jmp
dec
repz
aad
aad
scas
repz
je
repz
aam
xchg
ds
mov
std
inc
jae
cmp
jne
test
add
cmp
je
test
add
mov
jmp
mov
mov
pop
outsl
fiaddl
lahf
loop
jmp
testb
std
inc
jecxz
dec
push
and
std
inc
repz
call
pop
add
sti
inc
mov
add
jmp
rcrb
bound
sub
call
xchg
jno
ret
lea
sti
ja
add
or
add
fstl
adc
ret
sti
pop
jmp
lcall
pop
add
sahf
adc
mov
add
add
dec
mov
jmp
pop
lds
mov
std
scas
decb
dec
pushf
cs
repnz
aas
add
test
into
mov
pusha
sahf
es
cli
fwait
sub
add
xchg
test
mov
sbb
nop
daa
add
repz
rcll
or
shrl
xchg
cmpsl
add
add
add
cmc
aas
in
jle
out
dec
pop
push
sbb
js
nop
xor
std
aaa
jnp
call
mov
and
sbb
nop
add
mov
mov
outsl
mov
mov
flds
hlt
ss
insb
xchg
adc
call
pop
jg
jmp
push
adc
add
sahf
sub
or
imul
or
and
sub
sub
jmp
pop
roll
insb
dec
pop
es
and
insb
push
cli
jbe,pn
jmp
fs
or
push
cmp
jle
add
out
fisttpl
subl
clc
jge
in
jge
xchg
and
fldl
add
add
adc
or
imul
cmpsb
fs
inc
mov
je
xor
loopne
mov
cmc
push
leave
xor
add
jo
in
push
testb
and
dec
mov
or
in
hlt
add
hlt
cmc
xlat
inc
pop
arpl
inc
mov
mov
adc
cmp
data16
and
cltd
in
and
add
out
push
cli
inc
repz
je
xor
andl
mov
ljmp
sti
int
inc
jl
jge
aas
mov
add
mov
js
rclb
arpl
scas
mov
push
mov
adc
dec
scas
push
mov
nop
lret
pushf
lret
mov
in
push
cmp
adc
or
lock
test
jns
cmp
pop
or
lds
xchg
sahf
pushf
incb
repz
adc
jns
mov
mov
js
stos
mov
inc
inc
or
add
jns
mov
jnp
inc
mov
mov
add
add
incb
repz
or
pop
xor
push
mov
rcl
inc
mov
xchg
mov
mov
js
mov
mov
hlt
ret
jbe
outsb
inc
idivb
lods
add
cli
aam
cld
inc
jmp
push
mov
xor
je
fimuls
rcl
mov
leave
mov
add
add
mov
imul
add
cli
orl
hlt
sub
int3
add
or
rclb
xchg
cli
push
outsb
outsl
dec
test
ss
add
or
fwait
sbb
adc
aaa
sub
jge
xor
cwtl
add
negb
and
pop
stos
mov
mov
add
add
ja
clc
jb
in
push
jecxz
dec
push
mov
fiadds
cmp
and
cmp
jae
sub
dec
call
pop
mov
pop
popa
mov
inc
jb
add
testl
adc
adc
arpl
adc
inc
xor
mov
mov
out
loope
insl
lock
ljmp
cmp
mov
pop
adc
or
add
push
dec
lcall
mov
cmc
out
lcall
pop
xor
std
mov
mov
ljmp
xchg
test
in
jle
and
add
pop
add
inc
push
lret
or
push
jle
dec
pushf
mov
cmp
lret
dec
xchg
jp
and
repz
imull
jo
testl
mov
jg
xor
bound
stos
add
loope
mov
repz
add
arpl
rorb
inc
mov
add
out
mov
fidivl
push
jmp
add
repz
iret
test
mov
pop
xchg
dec
lock
repz
sbb
data16
xor
add
fwait
add
dec
incb
push
iret
or
jge
call
add
std
xchg
sub
mov
int
je
cltd
iret
mov
aas
ja
mov
jmp
mov
or
pop
mov
jmp
push
call
jno
dec
lds
imul
xor
repnz
shlb
dec
aam
ja
add
in
sub
lock
cmc
adc
cwtl
pop
test
notl
cmp
into
aaa
add
jecxz
pop
push
in
cltd
push
adc
cmc
sub
or
mov
ret
push
mov
jae
clc
xor
add
outsl
xchg
add
add
in
stc
adc
lods
dec
jmp
std
inc
jae
inc
or
insb
int3
sub
hlt
push
mov
sarl
in
loopne
imul
dec
push
xor
enter
push
push
mov
push
sub
pop
cli
ja
out
aas
mov
jmp
adc
pminub
adc
mov
rsqrtps
jle
cmovp
inc
or
fimuls
or
cmp
insb
and
cs
adc
test
pop
insb
lds
add
add
jmp
into
push
push
hlt
fmull
add
pop
out
inc
xchg
ret
xor
mov
in
dec
movl
aam
iret
idivl
ret
add
xor
cs
out
add
in
sbb
push
dec
mov
xchg
and
fcmovbe
popf
insl
inc
push
repnz
shlb
pop
mov
out
lods
sbb
push
dec
mov
xchg
and
fistl
add
or
repnz
mov
insl
test
jnp
fwait
add
loope
cli
gs
add
inc
mov
adc
xchg
jmp
mov
dec
or
cld
movsb
or
pop
es
repz
or
nop
fcmovne
test
mov
mov
bound
add
add
jge
and
add
mov
xchg
lahf
movaps
sbb
mov
jae
in
repz
std
das
cmp
cs
test
mov
add
testb
arpl
call
mov
mov
add
add
cmc
lea
add
add
decl
lds
insb
jno
xchg
jb
mov
clc
incl
cli
test
insb
jno
in
loop
pop
out
pushl
jae
push
xchg
jb
sub
mov
dec
roll
lock
lea
lcall
insl
add
pop
iret
nop
push
sbb
adc
cli
cmp
adc
mov
lcall
pop
dec
out
dec
mov
xor
mov
add
outsl
adc
cli
lahf
push
push
inc
mov
jne,pt
pop
ret
cmp
inc
xchg
push
jge
mov
decl
push
jp
mov
stc
push
jno
repz
inc
clc
addr16
gs
insb
xor
orl
out
or
adc
movsl
cmp
into
subb
js
jge
cmpl
fisttpll
into
or
cmp
cmpsb
sbb
out
and
leave
in
popf
repz
outsb
and
mov
lods
dec
jle
jbe
adc
insb
sub
add
add
add
in
popl
repz
mov
ret
jbe
not
mov
in
mov
add
jbe
push
xchg
cli
cld
gs
jmp
dec
cmp
test
or
jae
hlt
xor
dec
sub
pop
push
inc
push
bound
repz
mov
sarl
jge
push
jno
mov
je
or
aaa
scas
sti
incb
add
mov
subl
aad
je
jge
fcompp
and
adc
mov
fldl
testb
mov
add
sti
xor
fwait
leave
ret
push
mov
je
cmp
add
cmpsb
mov
cmc
add
ljmp
add
cli
mov
cmpsl
mov
add
rorl
or
js
cmc
sub
adc
xor
mov
clc
out
cld
xor
or
shlb
je
mov
fs
mov
test
cmc
push
mov
jl
push
dec
repnz
adc
int3
mov
adc
testl
pusha
hlt
das
mov
xchg
mov
add
add
mov
rcr
add
adc
callw
jnp
push
lret
add
data16
cmp
xchg
xor
pop
aas
callw
jnp
mov
into
jnp
cmc
jae
dec
in
xchg
adc
add
xor
inc
mov
mov
push
add
cmp
imul
add
push
mov
or
call
ret
mov
add
mov
jg
hlt
out
sub
or
hlt
out
repz
add
hlt
out
and
es
cmc
inc
adc
mov
fildl
jg
je
icebp
jno
push
sbb
gs
cli
add
jg
add
add
add
inc
movsl
repz
jp
incl
cli
mov
call
bound
sub
in
jmp
add
in
jg
jmp
xchg
mov
repz
mov
pop
or
in
push
sbb
jb
xchg
lcall
mov
jle
jl
jp
rorl
add
add
out
xchg
dec
xor
bound
fstps
lods
add
mov
out
pop
idiv
int
ljmp
or
pop
stos
lea
mov
hlt
inc
mov
shll
mov
mov
mov
movsl
adc
dec
call
mov
push
leave
xor
add
or
add
cmp
push
movsb
mov
out
sti
add
mov
shlb
fsubrp
mov
and
add
je
add
cmc
std
xchg
cli
call
sti
inc
inc
jnp
pop
mov
addr16
incb
lds
decl
dec
ljmp
adc
popf
lahf
xchg
cmovp
ret
fimull
addb
add
cwtl
lret
pop
shll
cmpb
dec
adc
sti
jg
adc
in
test
or
lret
xchg
or
mov
and
sti
push
lret
mov
lds
xor
cmp
call
mov
sbb
or
mov
and
or
add
mov
mov
add
aas
out
int3
jno
adc
cmp
call
enter
dec
xchg
xchg
testl
jnp
inc
xor
out
add
addr16
xor
cmc
insb
shl
gs
addr16
les
jl
ja
xor
sub
jo
icebp
outsb
or
add
jg
cli
je
bound
and
mov
loop
cmp
lahf
mov
mov
xchg
adc
in
add
aam
cli
adc
ja
jmp
dec
das
and
int3
hlt
jle
test
stos
xlat
stc
sbb
stos
filds
fcmovbe
jle
lea
fdivl
push
add
xchg
out
daa
insl
jge
aaa
outsl
jge
jecxz
add
xrelease
cmc
add
je
add
stc
rorb
jno
jmp
mov
lea
fisubl
seto
or
mov
dec
push
lea
std
jo
cmc
adc
sbb
xor
stc
pop
add
cmc
adc
clc
loopne
adc
add
add
add
cmpsl
not
adc
test
sub
cmp
xor
call
test
cmp
mov
push
lea
out
add
test
incl
lret
jmp
add
in
sti
fs
decl
setno
xchg
incl
mov
mov
and
jae
cli
fwait
mov
xor
dec
iret
out
xor
das
dec
in
out
xchg
pushl
nop
cli
pop
pusha
sti
out
push
int
adc
xchg
incl
jle
xchg
or
aam
repz
add
mov
sub
inc
cmp
movsb
pop
push
mov
push
add
cmpsl
add
in
mov
ret
aad
add
add
add
inc
ja
int3
lret
les
mov
jg
iret
repz
sbb
out
sbb
call
out
xchg
das
cmp
outsl
shlb
testl
push
shl
push
mov
pop
ss
mov
sbb
jns
gs
lds
dec
ja
lcall
out
jmp
mov
mov
xchg
add
hlt
jae
pop
add
stos
mov
in
test
test
mov
pop
scas
addr16
add
or
in
repz
ret
ss
mov
cli
jp
gs
ljmp
pusha
ljmp
fadds
or
jnp
inc
xor
outsl
lret
add
mov
mov
sbb
xor
mov
cmp
xor
xchg
add
repnz
push
xor
lods
cli
push
jbe
and
push
mov
incb
push
bswap
movsl
push
xchg
add
push
fs
aaa
push
jo
call
lea
pusha
push
jo
add
add
add
add
mov
int
inc
dec
jmp
or
mov
outsl
adc
xor
push
push
mov
js
call
loopne
bswap
mov
pop
xchg
repnz
aad
je
repnz
rcll
xchg
adc
push
cmpsb
push
call
or
add
xorl
lods
jecxz
stc
lods
mov
mov
inc
out
pop
xor
jnp
das
dec
idiv
fiadds
pop
push
fnstcw
cs
mov
out
insl
repz
gs
out
in
in
add
sbbl
sbb
jg
call
adc
repz
imul
aam
mov
ja
roll
xchg
test
insb
mov
add
pushf
in
mov
pop
les
cmp
test
dec
test
lock
and
mov
rcrl
push
frstor
add
push
pushf
add
repz
cld
cld
ds
shlb
mov
scas
ss
or
dec
jae
cs
cld
push
outsb
jmp
ja
arpl
stos
mov
xchg
add
add
pop
addr16
mov
sbb
out
xorb
add
dec
pop
mov
pop
mov
add
outsb
cli
push
inc
dec
test
ret
in
cmp
jmp
xor
mov
xor
cs
out
push
call
adc
xor
inc
dec
push
fidivs
notb
clc
bound
cld
push
mov
inc
or
jnp
jne
dec
add
and
dec
imulb
pushl
jb
jne
into
fadds
and
sbb
mov
lock
loop
arpl
in
jl
loope
push
test
pop
mov
cwtl
inc
shr
cs
add
inc
jmp
xor
incl
add
add
ljmp
leave
in
jecxz
inc
adc
and
push
add
xor
notl
jb
jnp
or
mov
push
cmp
pop
add
pop
add
lods
pop
incb
inc
ret
rcrl
push
pop
fucom
sti
mov
mov
mov
repnz
add
lret
add
add
add
push
aam
mov
sar
iret
roll
repz
xchg
jle
insb
mov
sarl
addb
fcomip
mov
mov
push
xor
test
mov
roll
xlat
adcb
testb
push
and
rclb
repz
xor
mov
dec
push
push
test
add
add
add
cltd
shlb
mov
sarb
xchg
sti
std
icebp
out
or
jo
mov
add
aad
inc
jmp
xor
sbb
fwait
add
pop
jbe
stc
push
subb
icebp
or
dec
outsl
test
lock
adc
mov
xor
jbe
push
jge
cmpsb
push
pop
lods
sub
dec
outsl
lea
push
in
sar
mov
mov
call
ss
testl
sub
es
add
xor
cmp
es
out
dec
push
mov
push
push
movsb
arpl
jl
into
test
arpl
mov
out
or
cmp
or
sahf
jecxz
movsl
jne
add
cmp
adc
xor
mov
push
pop
cli
mov
add
inc
dec
lcall
push
sbb
jge
adc
xor
insl
out
fdiv
mov
fsts
pusha
shll
cli
mov
and
push
inc
mov
out
ds
sarl
das
rorl
decl
add
add
popa
adc
adc
jg
push
inc
mov
inc
or
xchg
inc
push
adc
icebp
cld
add
push
shl
cmpsl
add
add
xchg
mov
xchg
xchg
lcall
dec
add
push
add
lret
jb
ret
mov
add
dec
mov
pop
mov
mov
cli
jg
adc
add
add
jbe
out
mov
xlat
inc
dec
xor
mov
pop
insb
data16
xor
xor
mov
or
mov
test
test
imul
lret
pusha
bound
sarl
insb
popa
mov
mov
mov
jle
out
and
orl
add
mov
fnstsw
mov
and
iret
push
push
js
imul
out
fiadds
jle
pop
loop
add
push
addr16
pop
mov
mov
out
cli
push
cmp
mov
adc
xor
jmp
les
push
jl
add
js
fsts
shl
outsb
adc
jl
add
or
in
outsb
pop
aas
shll
mov
cli
mul
xor
jmp
movsb
test
mov
mov
pop
addr16
arpl
push
or
push
and
mov
in
inc
and
out
add
std
mov
testb
xlat
shll
inc
not
xor
add
lods
shll
mov
add
add
jnp
not
loopne
or
add
push
dec
xor
xor
cmpsb
sbb
push
or
rcll
out
cmp
push
lock
add
mov
incl
dec
xchg
cld
dec
pop
cmp
xor
mov
adc
add
jge
ret
cli
test
sar
push
sar
dec
pop
iret
dec
cmp
mov
mov
inc
test
idiv
iret
xor
xlat
jno
mov
movups
mov
in
push
push
sahf
lret
ficomps
fldcw
xchg
cld
leave
pop
jmp
faddl
mov
ret
add
mov
out
xchg
xor
inc
hlt
mov
fs
out
ret
addr16
repz
repz
push
push
aas
push
mov
sub
dec
repz
adc
add
arpl
cltd
jnp
gs
xchg
mov
xorl
mov
jle
stos
fs
xor
mov
push
fildl
add
add
fidivs
jg
add
dec
push
pop
addr16
insb
sbb
iret
mov
adc
jg
add
mul
jmp
repnz
insb
pop
jae
rol
mov
mov
cmp
adc
jmp
sub
inc
sti
dec
addr16
add
jmp
mov
ds
push
or
in
addr16
int
inc
jmp
int3
fbstp
add
outsb
sub
push
dec
pop
arpl
scas
mov
add
xor
bound
or
cli
imul
cmp
leave
sbb
adc
inc
jecxz
push
jmp
xchg
rcll
repz
inc
daa
cli
inc
mov
std
push
add
xor
mov
add
mov
pop
or
flds
scas
out
xor
sahf
add
and
flds
lahf
out
loope
shrb
cli
inc
mov
xor
push
mov
mov
out
call
sbb
adc
out
mov
out
add
in
push
xchg
sbb
stos
jl
flds
pop
adc
in
imul
out
adc
mov
dec
jns
add
cs
push
mov
add
loope
push
or
cmc
inc
jp
cmpl
repz
lds
pop
xlat
lea
add
rep
iret
xchg
pop
sbb
shr
call
adc
call
repz
incl
mov
pop
xchg
sub
test
dec
popf
or
xor
xchg
hlt
out
sysenter
xchg
sub
xchg
jbe
cld
lahf
mov
cmpl
in
mov
mov
pop
push
bound
add
loopne
insb
xchg
fisttps
cmp
mov
inc
sarb
cwtl
imul
leave
sub
jle
ljmp
outsb
sbb
fwait
rorl
jmp
cld
in
inc
jmp
mov
repz
push
mov
push
jmp
xchg
add
insb
je
push
scas
cld
pop
lds
cltd
sub
adc
leave
arpl
jge
stc
cld
and
add
add
ss
cwtl
xor
xor
add
bound
cmpsl
xchg
iret
cli
xor
sub
push
cmp
mov
cli
shrl
adc
inc
add
sbb
inc
push
test
inc
dec
cld
pop
test
clc
jae
outsb
jo
lock
pop
xor
ss
test
jo
in
inc
idiv
cmp
inc
ret
sub
push
ret
cmc
xor
jecxz
mov
mov
loopne
call
mov
aad
pop
or
and
data16
or
mov
decl
dec
incl
daa
cmc
test
orb
fadds
pop
or
fsubs
test
xor
mov
add
add
or
adc
jg
dec
rclb
jge
jg
arpl
inc
setbe
movsl
shl
wbinvd
ja
add
jg
aaa
mov
adc
fnstsw
pop
and
das
je
repz
add
out
mov
jnp
test
mov
aad
insb
xor
sbb
jno
add
push
jg
sub
add
add
je
pusha
and
int3
insb
add
pop
lods
xor
movsb
repnz
jle
mov
rcr
xor
mov
pop
push
popf
cmp
mov
add
mov
out
mov
lcall
or
fcmovne
pusha
mov
lds
movsb
lret
add
add
mov
sub
cmp
jns
dec
pop
add
loopne
xchg
pop
cli
scas
or
stc
adc
pop
je
into
out
mov
movaps
fldenv
push
cli
hlt
lds
into
mov
cmp
jae
jmp
ds
fsubrl
test
or
loopne
test
shrl
scas
cld
add
add
add
add
popa
clc
add
dec
sub
xchg
clc
add
jae
ds
mov
call
or
repz
enter
sahf
pop
jp
and
push
mov
stc
movb
fiaddl
aad
aad
sub
xor
mov
daa
addb
mov
daa
lret
call
add
fdivp
mov
lcall
shl
push
cmpsl
jae
je
sub
jg
push
addl
imul
psllw
sub
jl
out
stc
inc
inc
dec
shl
out
lcall
cwtl
mov
fwait
dec
mov
mov
test
mov
xlat
add
pop
mov
jo
inc
pop
loope
or
dec
call
rorb
add
add
adc
test
xchg
mov
rcl
xlat
adc
mov
and
jns
rcr
filds
push
or
popf
or
enter
xor
and
or
in
outsb
pusha
jno
out
fs
inc
lret
fbld
sub
pop
popa
push
popa
bound
loopne
fildll
addl
add
cs
push
andl
jmp
or
mov
mov
test
xchg
call
insb
mov
loopne
dec
xchg
pop
inc
pop
shll
ss
add
dec
jbe
es
pop
add
jp
pop
cli
scas
push
popf
or
in
in
push
pop
push
push
call
je
pop
mov
cli
jbe
loopne
bound
test
push
mov
insb
inc
add
fimull
inc
xchg
test
loop
ljmp
jne
mov
or
je
fnstcw
outsl
jnp
jno
stc
push
je
cmc
fisttpll
bound
test
movsb
xor
jmp
cmc
add
xor
stos
add
add
add
cltd
push
mov
mov
push
jl
or
mov
pop
hlt
cli
pushf
imul
int3
add
out
jae
dec
inc
out
call
test
jmp
call
ret
jae
cld
inc
add
jb
cmc
lcall
scas
jae
push
ss
daa
pusha
scas
xor
in
push
or
add
add
aad
xchg
add
jg
lcall
jo
dec
push
aaa
mov
or
das
lret
xchg
filds
xchg
dec
test
mov
mov
and
inc
xchg
data16
dec
pop
cmp
ss
test
std
test
jle
dec
scas
out
call
add
adc
je
loop
add
mov
xor
loop
repz
loop
push
iret
mov
jmp
rolb
pop
xor
shrl
mov
out
mov
mov
dec
jmp
cmp
pop
or
sub
out
jge
jl
gs
pop
mov
testb
iret
popa
dec
adc
pop
pop
pop
inc
mov
mov
xchg
mov
imul
stos
push
or
push
mov
xchg
xor
mov
mov
mov
incl
mov
in
jne
cli
push
push
pop
aas
pop
xchg
gs
fbld
pop
jo
insb
push
filds
fs
add
in
xchg
adc
add
add
add
scas
or
cmp
push
bound
or
repz
jp
xchg
mov
fistpll
mov
add
or
inc
in
loopne
add
mov
pop
int3
mov
icebp
mov
mov
add
xchg
push
jmp
push
cmp
sub
mov
pop
sbb
test
push
jne
cmpsb
inc
add
repz
add
fs
mov
call
cs
fstps
push
add
mov
add
adc
jmp
jb
pushl
mov
push
jecxz
loopne
add
mov
cmc
call
push
xor
push
divl
in
xor
arpl
sbb
mov
lcall
mov
add
inc
jge
xchg
loope
xchg
jge
jle
inc
xchg
mov
jle
dec
rclb
mov
xchg
xorb
sti
mov
in
popf
shrl
cmpl
subl
sar
xchg
loope
pop
adc
dec
jle
mov
bt
or
fcmovne
cmp
clc
mov
daa
add
das
in
iret
push
jmp
jle
dec
cld
push
add
dec
orps
jae
mov
adc
fisubs
mov
ret
je
movsl
and
pop
aas
xor
xor
push
dec
mov
mov
repz
into
jns
lods
dec
punpcklbw
push
xor
jmp
subb
jne
gs
pusha
push
rcrl
lret
push
push
test
pop
mov
fs
dec
push
dec
mov
ljmp
mov
cli
xchg
sahf
jle
insb
inc
fnsave
test
mov
jmp
es
stc
mov
in
popa
and
sarl
arpl
jmp
add
add
test
ret
fnsave
out
inc
jmp
dec
push
mov
or
jne
out
cmpsl
and
shlb
add
push
in
into
xor
add
out
add
ja
add
inc
pop
icebp
jmp
push
cwtl
mov
in
sbb
add
push
out
push
js
xor
imul
jecxz
mov
in
decl
add
add
sub
xchg
cmp
push
adc
out
xor
push
lock
xor
divl
outsb
movsb
call
out
jns
jl
call
test
mov
lea
inc
pop
test
cmp
pop
and
decl
lds
xchg
call
adc
dec
call
adc
stc
lds
jle
insb
mov
inc
mov
shl
cmp
lcall
xchg
insb
dec
adc
or
add
xchg
mov
pop
mov
push
push
jg
mov
cs
xlat
inc
je
rcll
jl
iret
or
pop
test
push
push
pop
inc
mov
mov
jnp
jbe
decl
fbstp
or
repz
leave
or
pop
push
mov
loopne
fistpl
ja
outsl
aam
jl
push
andl
aad
mov
movsl
jl
sti
movsb
clc
jo
lea
and
inc
repz
inc
pop
out
lea
xchg
jp
out
leave
or
add
adc
enter
shl
mov
in
jecxz
mov
dec
adc
scas
cmp
push
ficoml
lds
cmpsl
cmp
push
sbb
jb
dec
mov
jmp
push
roll
imul
sti
cmp
nop
outsl
inc
inc
sbb
lods
rcrl
bound
add
add
test
xor
jge
adc
in
xor
mov
cld
ljmp
pop
scas
xor
mov
mov
hlt
add
xchg
jne
lret
clc
call
rorl
add
mov
pop
sbb
jmp
jecxz
data16
out
add
hlt
add
add
pop
test
daa
add
jbe
add
pusha
or
mov
mov
jae
push
out
mulb
pop
in
jns
pushl
add
dec
cmp
cs
pop
mov
jmp
adc
mov
pop
orl
inc
or
notb
mov
push
adc
add
sub
icebp
inc
mov
insb
jp
add
loopne
or
push
sbb
adc
pop
xchg
and
pop
lock
inc
push
pop
ljmp
dec
pop
inc
pop
scas
jg
mov
cwtl
sub
out
jg
xchg
cmpsl
mov
negb
sbb
mov
int3
orb
dec
shr
push
dec
jl
pop
add
add
add
dec
jmp
xchg
xor
lods
xor
shlb
jnp
loop
test
xlat
loop
jg
dec
mov
aad
aad
jbe
out
adc
lahf
cli
or
xchg
dec
add
daa
add
mov
sbb
movsl
repz
push
xchg
ja
dec
rorl
enter
out
dec
cmc
daa
lcall
inc
aaa
incl
lahf
push
call
add
leave
dec
jmp
daa
lret
xchg
scas
mov
call
out
mov
bound
movsb
lods
jp
shll
es
xor
repz
mov
mov
in
push
imull
xchg
push
xchg
scas
lods
sahf
sbb
jae
xchg
mov
in
add
les
lods
push
addb
adc
in
add
gs
leave
dec
mov
out
aaa
pop
aas
cmp
cmp
mov
jae
insb
cmp
push
insb
pop
cmpsb
adc
lock
scas
adc
insb
mov
test
jae
cmc
jne
enter
add
pop
mov
andb
lock
jbe
notl
test
add
lds
sti
sar
lcall
jae
mov
adc
shrl
cli
jg
inc
add
jbe
add
repz
pop
call
sar
pop
in
cs
roll
push
mov
cmp
dec
pop
ja
sahf
inc
mov
cli
pop
decb
mov
dec
mov
dec
pop
subb
adc
sti
mov
shl
cmp
xor
add
lret
inc
add
lock
lcall
or
add
adc
pop
scas
dec
jo
inc
jne
aam
fwait
cmc
imul
adc
repz
ja
hlt
ret
lds
sti
daa
hlt
pop
mov
mov
xchg
inc
pop
dec
cs
popf
dec
aad
jnp
out
dec
inc
movsl
dec
mov
add
fists
add
cmpsb
cli
shlb
jge
mov
mov
mov
mov
jp
pop
in
inc
inc
dec
ds
fcmovnu
add
dec
fstl
mov
inc
add
dec
xchg
inc
ja
xor
daa
fadd
in
lahf
jp
aad
add
xchg
jb
lods
push
xor
add
inc
or
fs
cmp
aaa
movsb
pop
mov
lock
popf
adc
lds
add
inc
cli
push
cmp
adc
pop
or
insb
leave
mov
out
mov
dec
cmp
cmpsl
and
out
test
fbstp
push
loopne
outsl
shll
dec
xor
push
or
xchg
in
adc
mov
add
je
enter
leave
sub
push
or
or
inc
addl
cmp
inc
mov
jnp
fwait
xchg
loop
div
add
mov
scas
adc
jle
cli
pop
and
mov
lock
add
lret
imul
call
scas
mov
sbb
cli
pusha
out
cmc
adc
scas
mov
or
and
je
jecxz
inc
clc
dec
divl
push
decl
pop
movsb
mov
idivb
add
jge
es
sti
push
sbb
sub
pop
inc
adc
adc
jnp
push
or
addr16
icebp
iret
dec
je,pt
or
pop
adc
pop
jns
xchg
push
cld
add
inc
jne
push
int3
or
sbb
pop
fdivr
inc
or
push
or
sbb
and
cmp
cmpsl
mov
hlt
mov
inc
lahf
pop
stc
ret
in
outsl
test
xchg
or
pop
push
sti
test
or
out
mov
ret
mov
cmp
out
cmp
out
mov
add
hlt
push
sub
xor
and
repz
push
in
add
xor
ret
jecxz
test
fildll
mov
daa
add
xor
add
lock
aas
insl
repz
or
add
xchg
adc
shr
cli
scas
add
add
mov
sbb
xor
in
or
xchg
push
shrl
out
push
outsb
adc
lahf
adc
mov
lock
int3
inc
cltd
or
or
dec
cli
insl
leave
mov
imull
xchg
mov
jb
outsb
repz
pop
in
adc
je
div
mov
lcall
push
dec
inc
cli
add
push
dec
call
cmc
adc
cltd
out
cmc
jbe
ja
push
pop
notl
cmpsl
adc
je
outsb
or
fmul
adc
lock
xor
addb
hlt
cmc
jne
mov
or
mov
or
xor
pop
clc
and
sub
in
lock
xor
add
call
and
lods
mov
test
or
inc
arpl
cli
mov
add
add
out
je
pop
cld
pop
xchg
inc
jb
test
sti
xchg
es
adc
or
adc
jle
fsqrt
je
inc
adc
jae
inc
jb
shll
adc
mov
sbb
pop
popf
mov
dec
rol
sbb
pop
loope
mov
add
mov
sti
cmp
jne
jge
adc
bound
dec
test
mov
outsb
mov
pop
in
add
mov
ss
stos
push
inc
mov
jmp
add
mov
out
push
ljmp
mov
out
loope
lcall
inc
cmpb
inc
adcl
outsb
mov
add
in
daa
out
ror
movsb
mov
cmp
dec
sbb
cmpsl
add
mov
dec
sub
nop
cmp
xchg
rol
xor
mov
aam
mov
gs
inc
add
cmp
incl
shll
enter
aad
fs
cli
sahf
dec
add
mov
or
cli
popa
mov
mov
fs
ds
xchg
mov
fisttpll
jmp
adc
fwait
push
fs
sbb
inc
jg
test
jb
sbb
dec
fs
call
lea
movsb
dec
xchg
mov
ja
or
cmp
add
and
jne
inc
mov
lea
push
lea
add
and
loop
pop
testl
add
repz
aam
push
ljmp
test
shll
ss
pushf
adc
cmc
jmp
enter
lods
mov
in
jb
and
daa
add
adc
hlt
push
lcall
pushl
in
dec
xor
mov
dec
mov
adc
test
xchg
loop
mov
add
add
dec
mov
or
loope
inc
jmp
cmp
mov
inc
add
dec
sub
sar
xchg
xor
lock
decl
or
sti
mov
in
lea
push
push
int
cmp
ror
cmp
pop
add
sub
mov
cli
pop
push
mov
jb
je
jge
bnd
insl
movsl
aaa
and
loop
enter
ud1
rclb
out
cmp
imul
inc
js
mov
leave
in
leave
mov
gs
popa
mov
jne
adc
mov
add
jns
cmp
aas
cmp
das
fwait
cmp
mov
and
cmp
mov
scas
push
inc
and
cmp
out
pop
push
addl
fmuls
lret
out
jb
cmp
add
repnz
mov
cmp
stc
cld
inc
loop
jmp
daa
sar
jbe
cmp
ljmp
loope
cli
movsl
xor
or
scas
add
xchg
add
mov
push
jmp
mov
jb
mov
cli
adc
aad
xchg
sbb
stc
push
adc
add
nop
call
test
test
add
jmp
inc
jmp
or
adc
and
pushl
inc
dec
sbb
sarl
cmc
ss
pushf
adc
icebp
call
mov
cmc
in
inc
push
icebp
add
repz
mov
jl
push
cmp
and
jae
bound
sahf
jl
push
int3
ret
repz
adc
cltd
ljmp
cld
ret
repz
adc
xchg
lock
pop
ljmp
addl
in
scas
daa
push
mov
test
push
dec
decl
out
adc
jge
adc
dec
jnp
jge
xchg
add
ror
and
add
add
stc
out
shl
jle
out
das
rorl
mov
mov
iret
mov
iret
pop
mov
xchg
lret
jne
sarl
fldl
adc
dec
jnp
push
fmuls
rolb
add
mov
gs
xchg
data16
add
jg
stc
cmp
out
add
sbb
ja
and
insb
lods
fistpll
mov
jmp
loope
bswap
rep
inc
mov
xchg
xchg
paddb
and
lcall
mov
outsl
add
cmp
mov
mov
daa
add
mov
nop
addl
add
out
out
stos
aad
mov
sarl
aad
cmp
fcompl
rorb
jnp
push
test
fcomi
sub
repz
insb
pushf
xchg
mov
jle
cmp
push
or
jno
call
add
stos
jge
push
jb
movsb
dec
fs
inc
push
bound
add
add
stc
stc
push
loopne
fmul
cmp
test
scas
insb
add
cmp
add
outsb
outsb
in
adcl
jns
aas
testb
mov
lea
or
mov
add
inc
notl
out
mov
add
mov
or
insl
outsb
inc
clc
ljmp
ret
add
pop
cmc
cmc
je
icebp
bound
xor
push
adc
push
adc
notl
cmp
adc
cmp
mov
in
pop
out
mov
and
jne
imul
push
inc
call
or
cmp
add
xorl
lds
add
pop
cmp
pop
in
push
faddl
cmp
mov
mov
add
dec
stos
sbb
daa
push
dec
dec
xchg
adc
mov
leave
dec
cmp
cli
in
mov
adc
xlat
stos
pop
dec
dec
stc
mov
int3
or
inc
mov
aas
je
mov
into
cli
lahf
push
adc
repz
push
in
out
sbb
jmp
adc
test
lea
pop
xchg
xor
cmp
add
sti
jbe
dec
rorb
cmp
jge
xor
dec
loop
add
repz
sbb
flds
add
repz
push
cs
add
fsts
jge
sub
add
popf
loop
dec
loop
add
xchg
enter
push
inc
xchg
or
push
mov
xor
add
add
ss
stos
xor
push
cmp
ss
mov
rolb
dec
adc
lret
add
cmp
jle
stc
sbb
repnz
js
jmp
stos
pop
push
sahf
hlt
mov
cli
popf
xor
sbbb
mov
cmp
incb
jbe
jb
add
add
or
movsb
add
dec
ss
or
je
cmp
jns
out
insb
jl
jecxz
or
push
cld
jp
call
movsl
je
movsb
je
in
push
not
and
out
sub
or
push
aad
test
mov
incl
divl
add
call
cmovo
shll
add
insb
divb
shlb
add
add
gs
andb
add
leave
ret
push
mov
and
mov
notl
mov
sub
jle
orl
test
lcall
data16
loop
add
iret
sar
pop
xor
je
loopne
data16
jp
cmpsb
mov
add
popf
xchg
mov
push
dec
jnp
mov
je
jno
jnp
jbe
jae
insl
add
inc
or
out
jg
jbe
jge
dec
fdivs
loop
xchg
xor
mov
out
ror
dec
xchg
adc
inc
xchg
mov
outsb
divb
daa
add
in
cld
lock
clc
shl
sbb
inc
xchg
add
xor
decl
scas
ret
or
lcall
repz
and
pop
mov
data16
out
mov
hlt
popf
test
mov
pop
mov
adc
sti
mov
insl
dec
adc
xor
xor
xor
add
xchg
pop
adc
fnstcw
xchg
sbb
add
add
push
movb
mov
xchg
jne
xchg
cs
ja
add
jno,pt
jmp
push
jle
jp
dec
pop
push
mov
jmp
mov
cli
fcoml
inc
testb
shll
jg
cmp
ja
xchg
cmp
aad
cmp
jb
shrb
and
mov
pop
pop
imul
push
cmp
std
cmp
push
push
jbe
add
inc
divl
loope
or
xor
push
mov
cld
xchg
or
cld
or
mov
push
dec
sti
xor
sub
lds
ret
xchg
sub
mov
loope
cmp
enter
bound
call
add
dec
call
mov
imul
lar
icebp
add
push
fldcw
mov
and
pop
sub
add
repnz
adc
out
ljmp
add
mov
enter
add
pop
pop
mov
add
xor
nop
add
dec
xorb
mov
jns
pop
xchg
out
lahf
sub
or
dec
dec
push
adc
jg
lcall
inc
mov
lods
sub
les
iret
inc
fwait
call
push
pop
xor
mov
mov
jp
sti
dec
or
cmpsb
jecxz
mov
cmp
icebp
jge
xor
add
add
sub
add
ss
aad
mov
sub
daa
adcl
add
cld
jb
lea
sub
movsl
sub
xor
sub
mov
add
addb
insl
jnp
cmp
cmp
push
fcmove
orb
mov
aad
xchg
ret
or
add
jne
dec
jge
add
cld
mov
stc
mov
lock
push
jae
movsl
mov
sub
jnp
push
sub
sub
cmp
leave
cli
leave
test
sub
cli
jbe
sub
add
jg
xchg
mov
sub
mov
cmp
add
pop
mov
jne
and
add
ljmp
call
push
inc
xor
jne
movsl
ljmp
loop
in
icebp
add
mov
pop
mov
sub
sub
testb
nop
inc
dec
push
fdivs
push
inc
loop
popf
testl
xor
mov
inc
xor
and
mov
sub
inc
and
add
out
aas
orl
test
jmp
call
pop
mov
sti
push
add
dec
push
pushf
pavgb
adc
std
sub
or
inc
cmpsl
flds
es
insb
push
in
mov
pushf
add
adc
add
test
xor
mov
es
pop
imull
add
ljmp
push
aam
enter
push
adc
in
inc
sbb
cmp
push
dec
cmp
mov
scas
lea
mov
jae
dec
sti
mov
notb
js
in
cmpsl
ret
jl
pushl
sub
add
idiv
lods
test
and
pop
jg
sub
sub
add
add
mov
shl
arpl
icebp
outsl
lods
adc
shrb
or
scas
jns
and
cld
rolb
sub
sub
cpuid
subl
jmp
push
insl
adc
push
jb
push
mov
movsb
jno
dec
jb
push
test
push
scas
or
sbb
xchg
inc
js
sub
add
add
arpl
arpl
cli
jg
jb
push
idivb
jb
roll
stc
fimuls
xor
push
and
mov
call
insb
lret
repnz
mov
xlat
call
insb
inc
lahf
fs
repnz
les
or
cltd
sub
cmc
ljmp
imul
push
shrl
pop
sub
adc
pop
sbb
push
bound
push
stos
jnp
sti
or
cmc
jbe
lods
mov
incl
lods
vandps
je
test
push
push
shrl
mov
shl
pushl
push
mov
je
sbb
inc
dec
mov
push
and
push
mov
and
push
pop
repz
add
repnz
cmp
pop
sub
xchg
cmp
decl
pusha
sub
mov
shl
adcl
aaa
dec
dec
jp
mov
jle
adc
das
int
js
xchg
push
sti
pop
and
mov
mov
and
jne
sahf
aas
add
ja
lods
cmp
jmp
cmp
add
add
lock
aas
or
mov
shrl
inc
ss
mov
popf
jp
das
and
scas
jae
pop
andl
repz
mov
sbb
in
shll
push
jns
sub
and
test
repz
push
stc
ret
inc
outsl
sub
xor
daa
aam
daa
sarl
add
add
outsb
sub
cltd
je
and
mov
xchg
roll
adc
out
fisubl
test
mov
testl
gs
sahf
add
jb
xchg
dec
int
sub
cmpsb
in
icebp
pop
lds
mov
aad
scas
mov
cli
shlb
dec
mov
add
sbb
imull
test
push
jae
jmp
and
jmp
insl
dec
lahf
jnp
sar
add
sbb
out
mov
mov
pusha
fs
cld
dec
not
ss
je
xor
xchg
inc
dec
lea
add
add
push
jmp
cmc
jne
shrl
je
jbe
or
insl
and
sub
inc
pop
rcll
movsb
inc
xor
push
imul
fldl2t
icebp
add
sbb
out
shlb
mov
sub
inc
mov
jne
xor
inc
mov
mov
sbbb
ficomps
add
pop
mov
lahf
pop
inc
lods
add
into
sbb
cmp
mov
clc
daa
xchg
rolb
mov
testb
sbb
out
iret
mov
sbb
dec
sbb
add
fistpl
push
add
and
test
push
cs
xchg
out
add
xchg
fisttpl
dec
divl
test
clc
sbb
js
or
mov
mov
jo
and
cltd
inc
xchg
cmp
and
mov
lahf
adc
sbb
mov
pop
fcomps
dec
lret
jge
outsl
cmp
dec
fadd
push
sbb
inc
divl
cmp
sub
sub
call
add
xchg
cltd
call
mov
das
sub
sbb
and
jnp
fs
lahf
add
mov
cmp
aad
das
daa
lret
mov
int
scas
or
add
add
sbb
sahf
lcall
pop
cld
adc
mov
sub
gs
lahf
jl
int3
pop
jb
pop
sti
test
nop
jge
cltd
repz
jge
jmpw
hlt
jb
push
je
mov
ja
popf
negl
push
mov
push
clc
add
mov
sahf
sub
jno
sbb
testb
mov
dec
shll
clc
loopne
out
xorl
jns
jecxz
push
lock
adcl
sbb
inc
hlt
fsubrs
push
ja
add
add
outsb
fwait
shll
or
std
sub
add
test
pop
rolb
adc
mov
mov
icebp
xchg
ljmp
add
inc
out
in
mov
mulb
jnp
xchg
repz
je
add
iret
sbb
inc
xchg
in
dec
jg
pop
mov
dec
adc
dec
ficomps
shl
add
sarl
data16
or
ds
mov
xchg
mov
adc
xchg
xchg
cmp
iret
mov
repz
sar
xchg
or
aas
mov
mov
sti
xchg
jmp
bound
lret
push
mov
daa
shr
sub
mov
sti
pop
add
add
dec
push
xor
js
outsl
test
out
insb
xor
or
xor
dec
push
xor
jbe
outsb
sub
push
xlat
jmp
push
sti
pop
add
or
sub
xchg
or
insb
xor
add
adc
dec
push
xor
jbe
outsb
test
mov
sti
pop
add
xlat
rolb
sub
divl
add
mov
jb
or
std
cmp
test
popl
mov
rcll
repnz
cltd
add
insl
dec
in
xchg
test
mov
stos
pop
mov
push
xor
and
mov
jo
imul
and
push
fadd
cs
jne
xchg
fstpl
mov
aam
fldl
cmpsb
fildl
dec
pop
ret
es
xchg
jne
mov
inc
movsl
adc
mov
pop
add
add
fdivs
push
or
push
add
or
add
lock
dec
repz
addr16
cmc
xchg
cmc
inc
rorl
js
push
adc
ljmp
cmpl
ja
jae
je
clc
sarb
push
sldt
add
sub
pop
out
lcall
xor
mov
mov
xor
or
int
and
mov
mov
fmuls
or
mov
mov
btr
inc
outsl
mov
ds
add
loop
data16
mov
xchg
or
pop
adc
shrb
js
sarb
jge
shlb
mov
mov
push
test
inc
aaa
rcr
lret
push
mov
adc
je
mov
mov
jle
cmp
add
cltd
xchg
icebp
push
cltd
mov
adc
or
mov
out
lea
fists
xchg
mov
outsl
inc
insl
xor
xchg
sub
sub
daa
mov
jno,pn
into
lds
add
mov
sub
or
sbb
ret
sbb
sbb
jo
hlt
pop
adc
inc
popa
mov
out
movsb
jae
or
sub
add
mov
addr16
xchg
repz
aaa
and
std
outsl
sub
add
add
jb
push
scas
or
adc
fildll
push
cmpsb
sbb
ss
mov
jb
out
movsb
jge
fists
or
xchg
jmp
cmpsb
je
add
xchg
cli
out
daa
out
xchg
outsb
je
and
test
xor
leave
add
cld
sbb
je
cmp
lods
push
add
jb
add
lds
pushf
movl
inc
arpl
addl
mov
inc
mov
sti
push
mov
outsl
in
adc
dec
add
or
jecxz
add
jge
fneni(8087
pop
fs
sti
adc
cli
test
pop
notb
imulb
je
cli
fiadds
shll
add
inc
hlt
jae
inc
clc
mov
add
pop
repnz
jae
je
sbb
jne
imul
bswap
or
sar
adc
xchg
out
pop
js
jle
rclb
pop
inc
add
test
decl
addb
iret
enter
int3
mov
dec
pop
xchg
mov
sbb
incl
add
add
mov
sti
jg
adc
pop
dec
xchg
xor
dec
or
clc
push
mov
add
inc
or
xchg
repz
mov
sar
xchg
lahf
fists
mov
insb
mov
mov
repz
sub
lock
mov
add
std
add
add
sbb
fidivl
lcall
mov
mov
push
pop
or
mov
add
hlt
stos
add
push
fadds
dec
repz
leave
add
call
adc
mov
adc
xor
fcmovne
sbb
jbe
or
sub
sbb
pop
outsb
sbb
jmp
xor
jmp
xchg
test
test
lods
mov
adc
sbb
fwait
or
dec
cwtl
stc
movaps
popa
sbb
jmp
jbe
and
fisttpl
adc
mov
bound
pop
movsb
mov
xor
jmp
insl
dec
lahf
and
or
sub
add
in
mov
mov
cli
inc
mov
je
inc
xchg
fiaddl
repz
mov
dec
out
add
cmc
adc
test
pop
pop
and
cli
push
popf
out
inc
jae
notl
dec
pop
push
pushl
stc
inc
xor
in
xor
out
xor
pushl
mov
inc
push
jmp
or
push
je
out
push
call
and
repz
adc
std
mov
add
out
in
mov
mov
adc
cmpb
or
out
push
push
sti
push
dec
incb
add
or
xchg
xchg
mov
repz
add
xchg
dec
repz
mov
cmpl
or
mov
lods
add
movsb
or
in
mov
mov
add
add
or
pushl
sub
adc
inc
mov
add
popl
cwtl
and
repz
xchg
adc
lahf
or
adc
or
daa
mov
out
lret
jle
adc
out
nop
fisttps
add
test
lock
out
repz
jb
rcll
popa
imul
repz
mov
adc
jmp
nop
test
and
dec
add
add
jo
sti
xchg
lahf
addl
sbb
fst
add
push
push
mov
sbb
inc
outsl
and
sbb
sbb
jmp
sahf
sbb
xchg
aam
insb
inc
cltd
sub
bnd
push
cwtl
or
sbb
push
andb
iret
push
xchg
and
imul
mov
ljmp
mov
fstpt
jmp
xchg
notl
push
divl
in
test
ds
lret
add
outsl
add
mov
adc
add
je
pop
notl
call
pop
add
imul
or
je
lock
je
nop
icebp
jmp
jno
push
dec
imul
jmp
lret
out
add
inc
fs
out
jge
jp
je
movsl
hlt
add
testb
push
dec
sbb
mov
les
or
push
hlt
xor
cli
ja
out
aas
mov
add
ss
sbb
cli
aaa
add
adc
push
xchg
movl
xchg
xchg
adc
mov
or
testb
xlat
subl
lea
jl
inc
xchg
movl
adc
iret
mov
cs
mov
insb
and
repz
out
pop
cs
fnstsw
movsl
or
cli
insl
cmp
adc
inc
repnz
addr16
imul
lret
add
dec
mov
mov
roll
xor
orb
mov
test
or
inc
jmp
int
in
shll
stc
mov
rorl
jae
sub
aas
gs
cld
sub
xchg
add
xor
movsl
sti
cmpsl
div
xor
or
mov
add
int3
repnz
rclb
out
nop
mov
push
mov
push
sbb
mov
ljmp
iret
je
xor
add
rolb
inc
loope
xchg
cmpsb
mov
add
mov
mov
scas
add
jae
test
mov
add
jle
mov
push
subl
sub
jmp
mov
sbb
int3
or
pop
push
cmc
addl
mov
pushl
sbbl
cli
push
push
or
adc
cwtl
pop
divl
add
add
adc
shll
cmp
hlt
add
ss
addl
int3
mov
hlt
in
inc
fistl
jns
in
cmc
inc
out
ja
je
mov
call
repz
mov
xor
call
mov
mov
aas
or
iret
shll
sbb
or
dec
push
pop
dec
sbb
xchg
inc
inc
add
inc
jns
or
push
sbb
imul
sbb
loopne
mov
dec
cli
mov
nop
lmsw
cld
cli
pop
sbb
xor
cmpsb
xchg
fs
mov
sar
sarl
ret
repnz
lea
mov
sbb
adc
add
add
mov
imul
movsb
fists
popl
in
xor
fnsave
sti
push
popa
call
sbb
pop
andb
out
pop
andb
out
cmp
jecxz
int
pop
inc
aas
sub
imul
cld
out
sbb
filds
mov
add
mov
out
fstpt
or
negl
clts
add
mov
mov
rolb
jmp
std
bound
add
mov
ret
jbe,pn
push
shrl
sti
or
insl
call
cmp
orb
mov
sarb
or
adc
or
xchg
fstps
fs
xchg
out
cld
test
xchg
xchg
mov
or
insl
inc
clc
test
xchg
or
inc
fwait
jg
add
inc
or
adc
addl
arpl
add
repz
idiv
call
call
push
add
lock
std
mov
loopne
lock
or
lock
repz
push
lcall
add
jne
inc
divl
out
fsub
cli
xorl
out
add
lret
lahf
xchg
inc
mov
mov
pop
js
jecxz
loope
cli
push
sbb
jg
scas
icebp
add
mov
scas
push
pop
mov
push
jo
mov
das
inc
nop
mov
out
add
adc
inc
xchg
mov
add
fdivrp
ljmp
inc
into
mov
mov
out
jl
decl
fisttpll
sti
jg
adc
cli
pop
add
mov
pop
andl
pop
pop
or
mov
ja
mov
sbb
sub
or
loope
pop
pop
add
repz
lret
adc
out
idiv
pusha
shll
enter
add
jno
pop
jl
or
test
pop
jg
mov
out
popf
js
daa
loop
loope
xor
pop
mov
cmp
pop
int
add
mov
inc
faddl
pop
js
sbb
repz
ljmp
enter
sarl
add
out
mov
and
xchg
lods
dec
lret
repz
js
test
jbe
inc
adc
lods
pop
xor
or
add
push
aad
fiadds
or
test
fcmovb
insb
leave
cld
xchg
sub
sti
add
pop
cli
jmp
arpl
add
fsubs
dec
pop
stc
hlt
inc
jmp
add
mull
add
lods
mov
call
insb
dec
dec
cld
sbb
xchg
xchg
add
mov
call
cwtl
mov
dec
cltd
add
push
mov
notl
dec
mov
aaa
out
dec
inc
fadds
or
inc
jno
xor
mov
scas
js
mov
mov
addb
add
add
mov
shrl
sarb
js
xor
inc
cli
mov
outsb
mov
sbb
jne
jl
stos
add
adc
push
add
sti
or
add
or
dec
cld
leave
sbb
push
imull
inc
fdivs
add
insl
add
push
lret
cmp
push
or
out
add
add
add
push
fisttpll
cld
leave
sbb
roll
lods
cli
ja
out
aas
mov
add
sbb
ljmp
add
mov
ljmp
or
add
push
dec
sbb
rclb
jg
repz
ss
add
ret
sysenter
cmp
add
cmc
ja
movsl
in
pop
lret
add
insb
sbb
ret
aas
out
out
or
jae
mov
mov
add
sub
popf
push
dec
loope
add
enter
repz
cltd
sbb
and
insb
les
push
cmpsl
add
mov
add
push
cmc
movl
sbb
dec
xor
pop
xchg
add
pop
outsb
ret
rcr
mov
pop
out
mov
mov
fs
cld
xor
adc
or
adc
jle
xchg
xchg
jnp
sub
xor
mul
or
push
call
sahf
test
sbb
mov
adcb
inc
jmp
or
jb
pop
xor
faddl
xor
cmp
add
add
mov
xchg
xchg
insb
ret
add
sbb
call
repnz
ret
mov
mov
add
lock
jae
in
fsubrs
add
add
lock
dec
sahf
or
lret
add
adc
mov
jae
test
xlat
repnz
call
mov
je
enter
add
repnz
call
mov
cli
and
outsb
add
push
mov
add
pop
mov
mov
sti
test
jle
sbb
or
pop
mov
xchg
nop
pop
or
xchg
mov
jp
divl
out
add
push
add
dec
or
imul
je
add
add
or
xchg
xchg
fmull
push
xor
cli
sbb
adc
mov
insb
cmp
repz
pop
jns
lock
add
insl
daa
pusha
xor
pushf
mov
adc
mov
ss
pop
jo
sub
hlt
out
mov
js
nop
jo
sub
mov
xchg
outsb
mov
pushl
sub
lcall
mov
in
jecxz
inc
mov
pusha
pusha
shlw
jecxz
add
xor
sbb
mov
adc
mov
add
icebp
cmp
es
sbb
imul
in
test
add
mov
add
enter
mov
add
xlat
sbb
xor
push
fidivs
xlat
sbb
aad
pop
ljmp
std
call
mov
mov
adc
jno
cmp
mov
int
rcl
insb
add
repz
pop
vsubsd
xlat
pop
push
jecxz
stc
push
adc
jne
sbb
inc
and
add
add
outsb
rorb
cltd
jp
js
or
mov
aas
call
test
xchg
jmp
insb
adc
jnp
mov
fmuls
mov
call
test
insb
adc
mov
xor
sahf
push
pop
call
hlt
push
mov
movsb
dec
lea
or
decb
test
push
loop
jge
jmp
or
add
add
mov
jecxz
repz
aaa
mov
cs
push
mov
mov
mov
push
cli
cmc
test
test
gs
add
mov
push
call
push
bnd
xor
add
loopne
add
pop
pop
ret
dec
add
aaa
test
jle
inc
jg
ficoms
fstl
or
cld
cli
gs
mov
and
fs
dec
jle
dec
xchg
xchg
andl
int
shrl
jmp
in
out
mov
in
mov
daa
jle
out
add
mov
movl
push
push
cmp
out
jmp
mov
repz
and
push
mov
loop
popf
js
jno
shll
adc
repz
mov
pop
fisubl
aam
cwtl
mov
xchg
xor
add
add
hlt
sub
pop
mul
push
add
cmpsb
add
push
add
stc
jmp
and
insb
sbb
callw
test
imulb
stc
fs
xchg
mov
loope
xor
mov
mov
sub
mov
or
xor
add
jl
jmp
rcrb
inc
loope
xchg
add
cli
jae
mov
js
cmp
int
ret
jae
loope
add
mov
push
xchg
pusha
cli
stc
adc
jne
add
xor
xor
pop
xchg
xor
out
in
mov
xor
je
mov
je
jecxz
jns
pop
insb
inc
cld
and
idiv
push
std
sub
js
addl
cmc
bound
mov
cmc
adc
and
push
add
xor
out
mov
jns
jnp
je
leave
shl
jne
jne
fdivl
mov
addl
add
mov
iret
dec
push
data16
and
adc
add
or
cli
sub
mov
lcall
fld
mov
jo
push
mov
out
lea
xor
pop
fisubs
push
or
mov
cmp
pop
loop
idivb
xchg
stos
ljmp
and
dec
cmpb
pop
xchg
stc
xchg
adc
out
fstl
in
pusha
jo
outsb
test
out
pop
movl
mov
mov
stc
outsb
mov
out
and
mov
outsb
mov
jmp
xchg
out
mov
outsl
dec
cli
xchg
repz
add
pop
sti
inc
xlat
cli
add
movsl
dec
mov
mov
jne
movsl
imul
mov
cli
pop
or
cli
hlt
pop
jnp
out
inc
jg
mov
or
rcll
je
jno
mov
adc
std
mov
adc
cmp
popf
push
mov
add
push
mov
lret
sti
push
roll
jmp
std
jo
daa
dec
incb
insb
in
cmp
inc
sti
add
push
repnz
mov
les
lret
stc
jl
push
adc
mov
push
in
subl
ret
rcll
and
pop
movsb
xor
cmc
addb
push
pop
sbb
call
out
push
movsl
xorl
ds
add
add
pushf
orl
ror
add
stc
sub
enter
jmp
add
inc
div
call
leave
add
pop
xor
push
xor
ret
push
pop
push
xor
add
outsb
out
bound
push
jmp
test
test
sbb
iret
adc
repz
xchg
je
adc
fcoms
mov
incb
xor
sub
mov
add
mov
or
mov
push
xor
sbb
and
mov
xor
or
add
lret
cmp
xchg
dec
or
cli
mov
int
add
repz
add
pop
call
jmp
cli
lret
xchg
push
pop
cmp
out
or
push
jge
mov
popl
xchg
mov
xchg
outsl
push
sub
add
pushl
push
xor
or
push
call
lods
repz
lret
lret
out
gs
or
mov
add
hlt
out
add
iret
add
mov
outsb
icebp
insb
mov
or
add
mov
rcrl
stc
mov
movb
out
out
mov
repz
dec
push
mov
int
mov
test
movsb
push
pop
shl
push
roll
add
add
idiv
jmp
sbb
fs
sbbb
mull
mov
outsb
iret
mov
mov
test
or
mov
mov
sub
adc
lcall
outsb
add
dec
pop
push
enter
sbb
stos
cld
push
mov
test
sahf
icebp
aaa
jne
jg
mov
add
add
das
jecxz
adcb
xor
icebp
sub
xchg
ss
in
mov
repnz
mov
or
rcrb
mov
cmp
dec
ds
loope
icebp
lock
out
mov
bound
out
fucomp
cli
push
add
pop
cmp
incl
lret
xor
pop
fs
dec
fnsave
sub
jnp
out
or
mov
push
jb
add
cld
ss
mov
push
jne
adc
adc
aaa
add
fucomi
jns
faddl
lret
xchg
adc
add
or
add
mov
icebp
jae
add
adc
sbb
add
loop
gs
xor
icebp
repnz
pop
pop
jl
test
add
add
mov
push
mov
mov
xchg
jle
push
mov
hlt
cld
pop
js
out
leave
out
push
mov
stc
jl
divl
hlt
iret
ficomps
imul
jl
repnz
dec
inc
in
push
inc
push
fcompl
xor
test
jmp
or
repz
dec
xchg
pop
or
add
add
mov
add
mov
cmp
lea
rcll
inc
cli
pushf
sarl
fwait
out
stc
push
ss
je
ja
jl
and
add
push
out
push
movaps
dec
add
es
gs
outsl
inc
push
mov
sti
stc
aam
add
add
lods
mov
nop
xchg
xchg
add
add
mov
mov
dec
in
imul
stos
pop
repz
xchg
repz
ljmp
lods
insb
adc
dec
pop
push
andps
inc
jecxz
add
loope
jmp
andl
shlb
mov
inc
mov
inc
mov
inc
addb
sub
jbe
adc
arpl
add
add
add
into
sti
xor
mov
or
dec
cmp
dec
jmp
test
pop
jo
adc
adc
mov
test
imul
and
test
std
add
ss
mov
loope
push
sti
pop
sbb
cmp
push
inc
mov
lsl
mov
jb
add
add
mov
xlat
add
out
sub
dec
and
fincstp
in
dec
scas
or
fdivl
mov
mov
xchg
push
call
jns
daa
mov
lahf
fbld
das
dec
repz
mov
pushf
addr16
gs
pop
repz
clc
flds
add
add
pop
jne
roll
roll
enter
add
std
scas
lds
stc
jae
or
lret
jmp
jmp
wrmsr
push
jns
dec
insl
enter
lret
pop
aas
cmpsb
jmp
icebp
jo
mov
cmpsb
sti
inc
js
ja
stos
mov
xor
jns
and
add
test
hlt
push
js
faddl
sbbl
test
icebp
and
ljmp
out
and
out
or
mov
mov
jmp
jne
stc
mov
push
bound
sub
out
add
xor
call
mov
insb
js
or
jno
add
inc
jnp
ret
and
int3
mov
xchg
mov
subl
arpl
orb
xor
sbb
cmp
movsb
fidivl
in
cltd
dec
add
jno
cmp
bound
inc
repz
je
outsb
add
shlb
je
stos
sub
cmpb
incl
add
xor
dec
push
outsb
in
xor
add
add
rcrb
out
xchg
pop
jg
insl
push
frndint
push
test
pop
incb
outsb
iret
test
sahf
lock
dec
mov
add
popa
xor
push
mov
pop
mov
ret
add
pop
popa
cld
mov
lret
scas
and
mov
es
mov
adc
or
loope
mov
add
add
cltd
aaa
jne
xchg
xor
loope
call
xchg
pusha
incb
or
lds
fstpt
pop
lds
push
or
push
push
cwtl
cld
pushl
xchg
imul
inc
insl
outsl
jg
in
test
mov
add
je
aam
pop
fdivrs
and
mov
neg
mov
lock
jle
addr16
lds
sub
or
outsl
fadd
gs
mov
adc
mov
daa
insb
js
adc
jno
repz
push
ss
jbe
and
adc
lret
data16
js
push
mov
fcoml
dec
xchg
js
sub
cmp
xchg
xchg
out
stc
sahf
les
in
cmp
add
add
jl
test
jecxz
pusha
push
sti
call
insb
leave
bound
out
mov
loop
subl
and
in
data16
xchg
sti
loopne
pop
sub
roll
repz
or
or
je
ja
loope
jb
in
adc
test
roll
insb
insl
data16
das
push
mov
pop
xor
ret
adcl
push
jmp
adc
jmp
insl
dec
and
imul
inc
inc
divb
addb
pop
outsl
shl
ret
ss
out
xor
or
mov
idiv
jg
data16
jmp
mov
sarb
popf
dec
add
stc
add
testb
add
add
outsb
mov
mov
test
jne
clc
mov
add
xchg
dec
fbstp
std
orl
sti
xlat
mov
jo
adc
in
xchg
push
sub
jno
add
loopne
lcall
inc
jg
mov
jbe
push
movsl
mov
jne
fnstcw
repz
in
je
add
add
push
inc
or
mov
mov
lahf
jbe
pop
stos
jle
sbb
add
mov
add
push
insb
xchg
dec
call
adc
mov
stos
fdiv
ljmp
repz
adcl
add
jb
in
call
xchg
in
push
push
ja
jmp
xchg
insb
repz
int
mov
jle
outsb
dec
lcall
jns
fidivrl
hlt
or
mov
push
or
add
sahf
and
fiaddl
sbb
dec
and
xchg
repz
push
lock
lcall
test
hlt
sub
sub
cmc
movups
in
movups
mov
stc
scas
dec
jno
sub
in
call
jae
jmp
repnz
xchg
and
in
out
lret
mov
mov
ds
pushl
stc
mov
pop
ljmp
xor
sub
out
bound
xor
mov
mov
mov
stc
add
push
mov
push
jmp
incl
add
add
add
cli
leave
inc
mov
mov
add
xchg
out
add
xor
mov
pop
das
insl
fs
in
xlat
addl
inc
or
sub
add
pop
add
sub
call
inc
and
inc
or
mov
xor
cmp
inc
mov
rorl
repnz
dec
clc
xlat
out
jae
mov
adc
leave
test
dec
cltd
sbb
sbb
ljmp
sbb
decb
pop
xchg
add
cmp
lret
xor
mov
adc
inc
aas
jno
push
repnz
aam
mov
iret
or
cmp
enter
adc
sub
test
add
mov
or
mov
inc
lea
cmp
add
push
mov
hlt
call
or
aas
xor
push
xlat
pop
push
jp
pushf
fistpl
xchg
sub
out
or
jmp
adc
lock
and
pop
loope
cs
out
xor
dec
outsl
pop
es
fadds
pushf
lea
add
add
pop
sub
mov
pop
aas
sub
sbb
in
stos
sbb
add
aad
sub
mov
jmp
data16
add
cmp
loopew
sub
xor
stos
sahf
out
jge
test
bnd
inc
sbb
aad
cwtl
test
dec
add
xor
jo
xlat
test
sbb
add
add
inc
in
ds
test
popf
lcall
jb
xlat
xchg
fiaddl
bound
xor
arpl
jo
jmp
loop
es
jp
fstps
mov
stc
jmp
cmp
add
pop
dec
or
ljmp
repnz
rolb
sub
leave
jae
std
mov
add
add
roll
lret
orl
jl
cli
sub
mov
adcb
dec
clc
pusha
cmpsl
mov
insl
push
fsubrl
insl
dec
clc
sbb
jp
pop
ret
test
loope
jbe
sbbb
iret
mov
add
cmp
inc
adc
es
inc
outsb
dec
hlt
mov
fiaddl
push
adc
add
add
dec
mov
cmp
jle
mov
lock
mov
or
push
push
or
out
xlat
gs
push
dec
sbb
add
adc
mov
std
ror
std
mov
inc
lea
dec
call
inc
int3
std
pushl
repz
in
insl
mov
or
sub
outsb
jae
mov
push
ret
sbb
mov
add
mov
out
push
sbb
pusha
popf
imul
pop
out
into
mov
xor
lock
loopne
fsubs
fsubr
dec
ffreep
fldl
cs
jecxz
addr16
insb
and
push
mov
stos
mov
scas
inc
add
cmpsl
dec
ljmp
inc
arpl
pop
dec
push
xlat
add
mov
jno
faddl
mov
mov
fbstp
ss
jmp
dec
add
fsubrl
stos
stc
movsb
inc
pop
jle
xor
mov
pop
mov
mov
jb
loope
jle
inc
mov
xchg
add
imul
add
cmpl
adc
and
or
imul
add
jne
add
repnz
jb
aam
insb
jae
jb
mov
push
pop
push
xor
inc
sbb
add
add
lock
push
js
loop
xchg
loop
inc
test
mov
je
aad
outsl
lock
jne
mov
cmc
push
xor
icebp
call
pusha
ret
jle
divb
ljmp
xor
push
in
add
icebp
mov
lret
mov
inc
std
adc
xlat
out
popa
cli
add
or
mov
add
iret
fwait
in
movsl
int3
std
fmuls
in
jp
inc
in
or
mov
cli
lods
dec
inc
call
or
sqrtps
xlat
cli
test
int3
mov
pop
dec
loop
mov
cli
aad
cltd
mov
adc
mov
push
sahf
mov
out
or
add
add
imul
int3
in
imul
fistps
cli
lock
jmp
fidivrl
repnz
or
outsb
xchg
fcmove
ss
add
repz
mov
movsl
out
push
push
pop
dec
lcall
mov
faddl
inc
or
sbb
inc
bound
clc
shlb
inc
xchg
pop
fcoms
sub
shll
iret
xchg
and
mov
pop
jl
mov
shlb
add
pop
xlat
add
add
lahf
mov
stc
scas
xchg
fnsave
jne
inc
pop
das
in
add
and
xchg
mov
push
cmp
jne
and
stos
adc
out
int
das
xor
test
cmc
test
pop
sbb
push
xchg
in
push
inc
adc
and
add
mov
mov
inc
pushl
sbb
push
orl
push
add
sti
mov
call
orl
enter
mov
call
inc
aaa
mov
mov
mov
mov
mov
in
xor
add
push
fsubrs
or
mov
mov
std
jmp
outsl
jl
pop
sub
mov
xlat
sbbb
shl
push
adc
cmc
inc
fdivrs
mov
loopne
xlat
xchg
adc
cli
iret
addb
xchg
pusha
cmp
std
pop
push
into
mov
in
ret
lock
adc
pop
cli
aad
xchg
dec
fcoml
in
ret
ss
enter
lret
push
adc
jle
cmp
or
xchg
icebp
push
xor
mov
xor
mov
cmc
mov
hlt
out
fsub
mov
mov
and
jl
repnz
repz
insl
stos
push
lea
aas
clc
mov
xchg
jo
sbb
call
mov
mov
or
cmp
loop
mov
xchg
mov
add
das
push
mov
push
lds
jo
loop
pushf
mov
andb
xor
call
xor
add
jle
add
add
add
add
add
fdivrs
outsb
fdivrs
push
mov
mov
jge
aaa
aad
jne
ret
bnd
repz
aaa
jle
fdivs
movsb
adc
mov
xchg
and
pop
add
lods
lret
in
or
jmp
adc
adc
add
loope
mov
faddl
add
lds
inc
mov
add
mov
cmp
aas
xchg
in
iret
cs
adc
jmp
jbe
lock
inc
xchg
lock
push
xchg
int3
add
cld
adc
fldl
jle
insl
push
int
inc
sarb
mov
std
or
sti
ljmp
cmc
icebp
xchg
je
add
push
add
push
xchg
add
repnz
jb
rolb
add
add
insb
jae
outsl
jl
jecxz
add
add
mov
push
xchg
out
add
lods
imul
pop
sarl
inc
mov
inc
iret
in
mov
xor
rorl
cmp
mov
xlat
pushf
jg
test
lods
cli
mov
cwtl
fsubl
xchg
int
sbb
test
lea
add
adc
push
aad
jg
jns
xchg
xchg
jge
in
jbe
fisttpll
xchg
stos
dec
int
sar
iret
fwait
aad
imul
dec
lock
punpcklwd
lods
popl
aad
dec
jbe
pop
dec
outsb
jno
mov
andb
pusha
aad
xor
add
cmp
add
add
inc
xor
insl
shl
enter
jecxz
cmp
imul
push
xchg
or
ljmp
daa
loopne
push
iret
jo
ljmp
push
int3
in
orl
outsb
xor
mov
add
xchg
call
arpl
mov
add
es
stc
pop
pop
fadd
lods
mov
add
mov
sar
jnp
cld
daa
fnstenv
mov
mov
adc
dec
loope
out
pop
nop
xor
dec
ss
out
ss
jae
mov
icebp
pusha
aad
xor
outsl
vhsubps
aam
loope
push
icebp
or
push
dec
jmp
test
aad
ljmp
test
lods
insb
dec
pop
cmpsl
es
add
add
add
xor
add
sbb
mov
mov
pop
in
mov
mov
repnz
repnz
test
call
scas
loop
clc
and
mov
scas
jns
dec
testl
push
inc
hlt
movsl
push
aaa
mov
add
testb
fdivrl
fldl
jbe
jae
cwtl
adc
mov
jmp
dec
sbb
aaa
loop
inc
aaa
loope
dec
sti
imul
add
std
mov
ret
mov
mov
xor
enter
lea
cld
lds
fildl
add
or
push
bound
cld
mov
jbe
inc
push
xor
adc
out
inc
inc
cld
popa
jle
inc
test
fldl
sbb
mov
inc
aaa
iret
fs
loop
pop
cmc
cli
xchg
add
push
inc
clc
shr
jnp
js
cld
add
cmc
cmp
cli
mov
lret
repz
in
repnz
jecxz
push
movsl
testl
jge
scas
add
xor
adc
sbb
add
jl
sti
add
fdivl
mov
aas
fdivrs
jge
add
out
je
test
dec
xor
jo
cli
jp
les
aaa
rorb
add
mov
out
inc
jnp
mov
mov
add
xchg
or
add
mov
add
adcb
jno
mov
dec
pop
ds
stc
adc
dec
outsl
inc
movl
add
inc
stc
div
aas
jmp
pop
ret
xchg
pop
jns
icebp
push
shl
push
jns
icebp
pop
popf
inc
cmc
or
jmp
or
jmp
mov
icebp
je
in
inc
cmpsl
xrelease
jnp
jne
aaa
aad
lds
add
dec
push
roll
add
clc
addl
icebp
cli
inc
fadds
add
add
clc
cmc
inc
inc
stos
adc
out
stc
je
mov
adc
cmp
jne
mov
aad
popa
sti
jns
dec
divl
cwtl
sti
mov
inc
cli
inc
loopne
lret
stos
dec
dec
fmull
dec
dec
fsub
cmp
xor
sub
and
lret
adcl
or
pop
mov
dec
push
mov
jne
xchg
fld
inc
in
fildl
jp
fdivr
jg
les
fcmovu
ja
ss
test
push
add
pop
loopne
mov
sbb
out
inc
inc
sbb
int3
jbe
ss
pop
add
jmp
inc
lahf
int3
add
push
add
or
roll
add
iret
lods
add
test
out
mov
lds
dec
hlt
mov
aaa
leave
cli
or
mov
push
add
sti
cmp
lret
jbe
repnz
fistpll
fidivrl
mov
cmc
call
inc
sarb
movsl
jle
lret
mov
movsb
xor
in
cwtl
fldt
out
frstor
jbe
outsb
inc
outsb
jno
mov
or
leave
pusha
int
inc
jb
pop
inc
bound
mov
nop
jg
lret
xor
mov
jg
jns
clc
push
ss
adc
jmp
test
ljmp
adc
icebp
lock
mov
xor
dec
sti
or
test
adc
loope
daa
adc
stos
popf
int
xor
lock
in
test
mov
incl
addl
aas
pop
sbb
je
sub
add
pop
pop
aad
imul
insl
add
dec
sbb
jmp
lret
cli
inc
decl
or
or
pcmpgtw
idiv
cld
sbb
cmp
add
out
outsb
lret
push
mov
int
in
out
dec
xor
cmp
dec
getsec
adc
pushl
push
xor
lods
dec
sbb
jae
add
iret
insb
fs
mov
pop
mov
lock
add
scas
shr
sbb
mov
xchg
mov
dec
pop
int3
mov
xchg
sbb
jge
mov
add
xor
cltd
xlat
jbe
sbb
jbe
cli
repnz
roll
or
aam
mov
aad
clc
mov
dec
stc
mov
in
imull
test
incl
subb
movb
popa
sbb
mov
mov
push
in
aad
outsb
xchg
hlt
popa
mov
push
cmp
in
mov
les
add
add
fcompl
iret
sar
push
repz
mov
ljmp
sti
fimull
sub
cmc
adc
subb
repnz
out
repnz
xor
sbbb
xchg
ret
jge
clc
push
or
jl
stos
pusha
inc
push
cli
imul
add
mov
jnp
or
call
add
cmp
dec
cmc
das
jge
mov
in
pop
aaa
xchg
sbb
add
fildl
jecxz
xor
add
mov
movsb
dec
push
ljmp
mov
add
je
mov
jbe
call
divb
xchg
mov
insl
hlt
jo
adc
jo
mov
hlt
leave
push
xchg
iret
push
ss
mov
mov
in
mov
pop
or
mul
pushf
outsl
xor
mov
test
nop
mov
outsb
xchg
repnz
lock
std
daa
mov
adc
pusha
lahf
mov
dec
jne
mov
cmp
and
xor
rcrl
jbe
stos
out
add
hlt
add
add
add
pusha
cs
add
pop
xchg
add
or
std
lea
mov
dec
cld
or
or
cmp
call
das
scas
push
test
out
add
sub
in
add
pop
mov
rcrl
mov
int3
pop
xchg
lds
mov
int3
pop
rorl
mov
add
add
fcomps
fbld
pop
mov
inc
or
push
cmp
xchg
xchg
dec
call
pop
fs
in
pop
fmuls
push
cmp
dec
pop
mov
andb
dec
mov
add
je
push
cmp
cmp
xor
cli
mov
push
sub
test
xchg
repz
xor
add
add
fistl
out
pusha
inc
xor
lahf
add
jp
mov
push
add
ljmp
clc
outsb
push
push
sub
push
das
jmp
into
mov
and
or
enter
and
pop
out
mov
aam
std
pushf
mov
lea
std
pop
wrmsr
hlt
push
mov
lock
add
add
mov
sub
sub
stos
jnp
inc
ret
or
add
inc
ret
sti
call
gs
inc
add
and
out
push
ret
stc
jl
int
jecxz
repz
cmc
sub
in
add
aas
into
add
icebp
lret
xchg
stc
jb
syscall
inc
inc
xchg
in
add
xor
add
add
mov
loopew
in
in
dec
repz
shl
jmp
cwtl
outsl
insb
call
xchg
repz
jae
add
lds
or
testb
ja
or
add
add
push
and
add
or
add
xor
adc
push
pusha
xchg
xchg
jmp
dec
mov
add
mov
inc
xor
emms
jecxz
push
jbe
or
dec
dec
or
cmp
setne
aas
or
out
je
xor
xchg
jne
push
mov
and
and
mov
out
dec
inc
or
xchg
in
mov
or
mov
add
dec
nop
add
ret
popf
cmp
cli
add
mov
xor
mov
std
cli
mov
enter
std
decl
dec
dec
and
push
inc
or
mov
daa
cmp
and
inc
clc
mov
mov
dec
pop
and
jb
pop
inc
xchg
lret
xchg
rcll
add
cmp
lret
jg
mov
pop
dec
mov
mov
cmovs
aam
btr
loopne
mov
pop
mov
sbb
dec
clc
mov
xchg
xor
mov
mull
imull
lods
mov
out
or
add
in
ss
push
repnz
add
and
pop
shll
in
add
cld
int
inc
jmp
adc
test
loope
sbb
mov
jmp
and
jmp
sub
mov
fs
repz
and
stc
out
js
test
lock
enter
jmp
cltd
clc
test
add
add
stc
mov
jo
mov
std
cmp
mov
add
mov
je
divb
xorl
js
je
inc
add
mov
mov
add
insl
in
movl
sbbb
dec
mov
in
bound
xor
inc
arpl
jmp
test
test
sub
add
add
add
or
add
jecxz
inc
jmp
test
in
test
sbb
add
sbb
cmpsb
scas
push
mov
sbb
add
mov
add
inc
inc
iret
pop
mov
lods
mov
das
das
mov
jge
mov
or
dec
aaa
or
aas
cmp
shrl
pop
dec
je
xadd
insl
push
add
aaa
dec
test
orl
mov
hlt
inc
push
pop
push
mov
in
adc
or
cli
mov
movl
lret
xrelease
lea
mov
loop
test
test
xorl
ljmp
leave
mov
in
addb
add
push
iret
pop
mov
stos
xchg
in
arpl
xchg
js
add
stc
push
add
mov
adc
mul
add
inc
sti
add
mov
bnd
cmc
out
add
repz
inc
add
jne
ljmp
insb
call
add
push
jae
adc
or
repz
add
jbe
push
movaps
jbe
or
or
into
popf
or
jl
bound
pop
bound
cmc
or
hlt
bound
es
movsb
add
int3
mov
stc
jmp
sahf
hlt
mov
flds
sbb
rcll
mov
sub
add
add
adc
jle
mov
add
adc
inc
pop
jmp
add
xor
or
and
jne
mov
shrb
inc
in
dec
pushl
mov
sarb
jae
cmpl
jae
testl
adc
add
add
jns
push
and
mov
lahf
not
gs
out
lea
movsl
dec
push
or
inc
sub
adc
test
or
add
mov
add
scas
lret
std
incl
prefetchwt1
mov
ret
test
leave
std
ljmp
lret
gs
rcpps
decl
add
add
cli
sub
int3
mov
or
jl
dec
sbb
mov
jae
dec
sbb
mov
or
mov
xor
lock
int
cmp
inc
pop
mov
iret
cwtl
clc
mov
fidivrl
lock
pop
mov
jg
lock
dec
mov
sub
dec
and
ds
inc
mov
jp
or
lret
cltd
jp
in
mov
in
loope
add
jecxz
ds
in
out
bound
test
or
push
adc
inc
loopne
adc
xor
or
jae
mov
mov
test
addr16
cli
push
mov
add
push
sub
gs
mov
jmp
mov
add
test
call
sub
sub
insb
div
add
popa
xor
mov
pop
lret
arpl
or
out
add
mov
jb
xchg
insb
lret
scas
push
add
cli
push
or
add
outsb
dec
les
add
add
cmp
loop
jecxz
sbb
or
repz
iret
rcr
mov
mov
std
jmp
mov
jecxz
xor
test
das
outsb
sbb
xchg
shlb
add
hlt
addl
in
dec
call
loopne
call
lret
jmp
outsb
sbb
lods
dec
xor
mov
or
jecxz
decl
ret
iret
popf
or
jne
mov
mov
add
xchg
icebp
adc
jp
fs
cmp
xchg
pop
cmp
sarl
icebp
pop
les
xchg
sbb
dec
pop
xor
mov
cmp
add
mov
mov
add
add
sub
xor
ret
xchg
push
das
push
in
jge
sub
jle
lret
test
cltd
adc
dec
jns
repnz
mov
les
cmp
test
lock
sbb
xor
mov
loop
mov
in
test
sub
add
mov
sub
ljmp
inc
ret
addr16
out
int
clc
lock
outsl
mov
push
mov
or
ljmp
orl
ret
repz
mov
push
jp,pt
mov
lds
add
mov
addr16
das
icebp
mov
and
jmp
cli
and
cmpsb
das
lock
add
or
out
mov
mov
add
pop
jmp
sub
fiadds
inc
xchg
push
lea
mov
mov
mov
andb
or
mov
pop
outsb
inc
jbe
cmpsb
test
in
stc
jbe
out
iret
fidivs
cli
jmp
shl
mov
add
rorb
lret
ljmp
outsb
sbb
pop
lea
add
add
je
call
cmpsl
scas
push
test
out
add
adc
or
inc
fdivrl
add
sub
or
int
cld
pop
mov
mov
sti
adc
in
cmp
cld
add
mov
mov
jb
jl
xchg
out
inc
sub
or
xor
or
subl
icebp
std
cld
fdivp
sbb
pop
xchg
or
ds
addr16
add
repnz
inc
aad
mov
jl
xchg
xor
mov
pop
test
stc
in
lds
push
aas
decl
dec
and
mov
and
leave
std
incl
add
add
imul
shrb
dec
and
lds
push
repz
mov
ljmp
daa
movsb
jl
pushf
cmc
adc
ja
add
push
call
das
xchg
fwait
shll
mov
les
repz
jp
mov
xlat
repz
es
add
add
ret
jl
mov
adc
stos
bnd
imulb
sti
test
jo
add
and
push
fwait
add
test
subl
outsl
dec
aas
cli
movsb
cltd
adc
mov
test
ds
test
sub
xchg
data16
mov
fidivs
stc
add
add
mov
stc
in
loopne
bound
or
stc
sahf
testl
repz
add
mov
add
je
mov
xchg
add
iret
push
add
xor
sbb
or
repz
inc
ja
mull
in
or
and
out
mov
test
testl
push
xor
adc
dec
add
jmp
test
bound
aaa
jne
mov
jmp
add
je
mov
jmp
mov
mov
pop
lods
jns
pop
hlt
bound
in
mov
inc
das
inc
mov
inc
mov
call
add
js
mov
jne
dec
jae
testb
add
xchg
and
jbe
xor
test
adc
xchg
outsb
cmovo
inc
das
adc
mov
in
bound
add
repnz
repz
das
xchg
cli
lahf
mov
stos
pop
mov
mov
xchg
push
mov
pop
adc
test
inc
cmp
fdiv
fnstenv
call
popf
jmp
xchg
add
add
ret
inc
stos
xlat
das
cltd
inc
push
jo
test
mov
add
push
dec
push
mov
call
ret
loop
dec
scas
out
mov
js
dec
daa
sbb
dec
daa
push
or
jae
sub
jp
lods
insb
jmp
xchg
hlt
outsb
inc
mov
js
sub
adcb
add
outsl
icebp
aas
fwait
repz
insb
add
cmpsb
rcrl
pushf
and
lods
cmp
scas
cmp
and
lahf
out
dec
pop
insb
leave
sub
fcmove
out
out
mov
add
dec
inc
push
push
or
inc
mov
movsl
xlat
cmp
xlat
cmp
mov
inc
push
sub
ss
or
insl
lds
add
out
fsubrl
xor
xor
push
jno
jge
stos
je
jne
inc
or
xor
cmpsb
mov
xchg
adc
cmpsb
lret
pop
adc
xor
xchg
xor
xchg
cwtl
xorb
inc
movl
pop
mov
pop
jge
xchg
lods
testb
sahf
pop
inc
and
in
incl
add
add
or
fidivs
and
pushf
movsb
mov
vmptrld
and
mov
and
mov
sbbb
push
mov
test
add
or
push
cmp
adc
pop
adc
adc
mov
fsubl
jge
add
add
test
jp
sbb
je
pop
inc
lock
inc
and
mov
jle
mov
notb
pop
push
push
push
incl
push
mov
dec
jge
repnz
out
sub
aaa
add
sbb
movsb
cmpsl
gs
jno
add
loop
pusha
jle
mov
fwait
pop
jbe
stos
retw
add
mov
cmp
add
stos
stos
push
pop
lods
cld
das
cwtl
xor
test
std
add
xor
lock
testl
scas
decb
mov
add
pop
pushf
ja
out
mov
stos
cmc
ret
bound
mov
adc
adc
push
popa
sbb
add
dec
das
jnp
mov
jg
adc
sub
xor
mov
stc
pop
scas
adc
sbb
repz
stos
jl
inc
das
cmc
xchg
xchg
add
pusha
pop
mov
mov
xchg
add
xchg
gs
jge
pop
cltd
add
frstor
lods
lret
or
test
or
out
call
add
add
dec
std
test
xchg
add
std
mov
and
in
lahf
sub
or
lods
dec
push
adc
jo
jecxz
jns
out
mov
clc
js
stc
sbbl
xor
xor
divps
add
mov
popl
mov
add
add
out
adc
jle
loope
xchg
cmc
add
add
add
sub
loopne
mov
jle
cmovo
mov
xorl
push
or
sub
stos
cmp
ljmp
pop
add
mov
lock
dec
mov
jbe
repnz
cmc
push
mov
add
sbb
psubq
ja
mov
outsb
stc
mov
pop
xacquire
sar
xchg
jbe
or
inc
push
or
or
sbb
pop
or
dec
pop
dec
jb
sar
push
les
outsb
cmovno
repz
or
test
testb
out
mov
pusha
jmp
in
clc
clc
cmpsl
add
lods
je
call
pushf
sbb
rcrb
xor
jle
push
in
mov
xlat
popl
test
cmc
fdivs
or
lods
lcall
les
hlt
jp
stos
fs
dec
inc
inc
add
cmpsb
inc
orl
add
xchg
call
fiaddl
add
add
sub
xchg
iret
outsb
inc
loope
cs
jmp
push
inc
xchg
push
stos
mov
outsb
dec
test
mov
push
pop
xchg
lods
stc
rcl
ja
int
mov
out
rcrb
das
or
and
je
out
test
jle
data16
cld
aaa
in
xchg
pop
cli
data16
adc
es
int
int3
ret
sub
add
in
andl
xor
notb
mov
dec
idiv
insb
aad
call
test
mov
dec
sub
sahf
xor
pop
inc
repz
push
mov
dec
lock
cmc
mov
mov
mov
sbb
jecxz
jns
out
jl
mov
test
push
idiv
xchg
dec
loope
test
add
stos
add
mov
add
add
je
or
add
arpl
je
pop
jb
pop
mov
dec
std
push
add
and
sbb
push
adc
xor
test
add
sahf
mov
jno
mov
repnz
mov
sahf
cmpsb
cld
xchg
mov
mov
loope
dec
aas
mov
testb
add
fnsave
xor
ljmp
lret
xchg
mov
pushf
std
pushl
pop
out
mov
popf
adc
enter
pop
adc
test
mov
add
push
lahf
fldenv
lahf
nop
outsl
into
add
rep
lret
lea
imul
aas
or
outsl
cmp
xor
add
add
ds
add
out
loop
cmp
lods
sub
repnz
mov
xor
xchg
jne
add
repz
cmpsb
or
mov
arpl
cmp
outsl
fldcw
loopne
mov
push
mov
push
jnp
call
xchg
jp
imul
inc
jmp
fs
out
xchg
add
add
xlat
adc
xlat
adc
lahf
mov
stc
gs
daa
sbb
shl
orb
popa
test
sbb
jge
or
scas
inc
xlat
adc
push
aaa
and
jge
loop
sub
sub
mov
jns
in
mov
sti
sahf
or
ss
add
loop
push
jg
or
in
ds
jle
jge
js
sbb
leave
not
mov
and
movsb
xor
sub
notl
les
je
loopne
push
call
scas
mov
or
iret
cli
push
fwait
insb
repz
or
decl
dec
call
push
clc
add
mov
add
add
xor
addl
mov
aas
mov
lds
subps
out
pop
std
incl
push
add
int3
or
cli
add
add
test
aam
xchg
mov
add
mov
xchg
ret
nop
aas
mov
add
repnz
or
mov
add
enter
add
xchg
pop
jp
ret
xchg
mov
mov
aas
mov
sbb
mov
push
add
push
xrelease
xchg
fnstsw
cmpsb
jp
fdivl
dec
xchg
sahf
push
mov
or
ret
push
ret
pop
fwait
sub
pop
cltd
fmuls
arpl
cltd
mulb
andb
mov
outsb
inc
scas
out
outsb
dec
cmpsb
jmp
mov
fistps
cmp
repnz
dec
or
mov
add
jns
inc
mov
ss
cmp
mov
xchg
call
jp
inc
test
popf
enter
popa
or
pushf
jbe
jb
out
jge
push
jle,pn
push
inc
push
add
repz
mov
jmp
sbbl
push
jo
cmpsl
call
mov
dec
repz
lcall
jmp
mov
xchg
outsl
inc
lds
mov
idiv
cmp
add
mov
jp
xchg
add
imul
int3
adc
jbe
dec
call
cmovo
mov
or
add
mov
fucomi
cmp
out
repnz
idivb
jno
fs
pop
roll
mov
add
ja
imul
mov
jp
or
lret
subb
jae
add
add
mov
incl
jge
xlat
rorl
mov
je
xorl
mov
je
xor
mov
inc
insl
push
sarl
dec
std
xchg
inc
mov
mov
xlat
mov
xchg
adc
mov
inc
adc
iret
or
inc
repnz
iret
add
add
and
pop
popf
adc
insb
adc
or
aad
push
in
cld
daa
js
call
lcall
rcrl
mov
lcall
shrl
mov
cld
lcall
sbbl
in
mov
andb
mov
pop
push
es
mov
add
add
lock
pushf
insl
mov
cmpsl
cmc
out
pop
sbb
cmpxchg
xor
or
inc
xchg
xor
ss
mov
cltd
test
adc
cmc
fs
bound
inc
push
rcll
lahf
stc
mov
lcall
enter
adc
je
add
fwait
xchg
adc
jb
in
sahf
jae
mov
out
xor
lock
clc
es
add
mov
stc
insl
inc
daa
add
adc
stc
cli
push
pop
sbb
push
lds
roll
out
testb
mov
mov
in
mov
lahf
dec
mov
jno
push
nop
jg
jle
add
add
jmp
inc
fisttpl
xchg
in
pop
sub
push
mov
loop
out
push
je
push
loope
jmp
outsl
mov
mov
dec
mov
jne
jmp
clc
call
jnp
test
roll
pop
addr16
or
cmc
add
fdivrl
cld
mov
mov
jmp
cwtl
je
sbbb
out
repz
in
jle
loop
adc
rolb
test
aaa
clc
push
lds
cltd
stc
shlb
cmp
xchg
dec
inc
mov
test
aam
pop
adcl
loope
mov
jmp
addr16
push
mov
inc
xor
out
cltd
inc
mov
mov
mov
incl
xorb
inc
pop
add
mov
out
xchg
into
mov
fucomi
out
in
mov
sbb
je
add
fistpl
inc
ror
ret
cwtl
fidivrl
and
and
or
dec
lock
das
pusha
sub
js
call
ret
sbb
and
mov
mov
imul
fisttpl
movsb
add
add
add
aaa
arpl
push
cwtl
lcall
sub
mov
mov
mov
or
xor
inc
sbb
cmp
add
or
adc
mov
repz
test
mov
push
cltd
jl
testb
add
adc
add
mov
subl
add
xchg
cmp
jns
cmp
repz
lahf
add
mov
add
push
inc
ret
stc
dec
adc
xor
jl
in
jns
cmp
je
sahf
add
push
xorb
adc
cmc
xor
andl
cmp
add
mov
loop
cmp
stc
cli
cwtl
jl
sbb
aad
imul
repz
add
repnz
jno
mov
mov
loop
and
jg
push
or
sti
jmp
je
mov
cmp
std
xchg
inc
ror
xor
pop
jecxz
pop
roll
cmp
xor
add
inc
popa
or
in
add
popa
lret
ljmp
inc
addb
or
into
push
out
cmpb
incb
and
pusha
or
int
popa
add
lret
popa
lret
push
popa
xchg
dec
es
aam
inc
mov
iret
pop
dec
gs
mov
repz
xchg
int
xor
xchg
inc
in
lds
loopne
xchg
cmp
das
loopne
gs
movsb
lock
xchg
add
cmpsl
in
push
rclb
push
das
inc
sbb
add
xchg
fiaddl
add
cmp
pop
cmp
pop
fists
js
xchg
or
clc
jle
add
add
out
add
push
fbld
add
cwtl
push
in
push
or
add
les
cmc
ljmp
sbbl
jg
ss
xchg
stc
jmp
sbb
out
xchg
adc
sbb
ret
jo
jp
jb
push
test
cli
push
in
push
call
adc
mov
add
je
push
jb
xchg
mov
add
test
cli
daa
xchg
jnp
xchg
jmp
stc
cli
dec
subb
cmp
imul
clc
mov
add
int3
call
jmp
test
stc
out
addb
call
push
fwait
inc
add
repz
mov
fs
repz
add
lret
in
jge
das
test
in
in
outsb
pop
dec
mov
ja
or
mov
or
mov
hlt
call
mov
push
sub
nop
out
stos
nop
cli
xlat
pushf
xchg
je
inc
inc
mov
sub
xchg
call
maxps
cs
dec
jbe
jle
mov
inc
xchg
test
jae
subl
xchg
cwtl
jp
xchg
add
dec
or
nop
adc
mov
add
fdivr
test
aas
or
lods
add
movsl
out
sbb
or
test
jp
inc
or
pusha
mov
jecxz
repz
idiv
jg
dec
xchg
mov
cmpsb
jle
jl
repz
jbe
fiaddl
add
add
mov
addb
lods
imul
hlt
pop
cwtl
xor
orb
dec
adc
pop
dec
xchg
sub
add
loope,pt
nop
or
into
fwait
sbb
repz
sbb
fwait
and
repz
dec
aad
inc
sub
mov
add
mov
mov
subb
roll
add
hlt
dec
add
add
leave
pop
adc
xchg
add
xchg
stc
mov
repz
jmp
leave
repz
nop
das
sub
add
and
lea
push
jl
add
or
add
jns
es
xlat
add
leave
push
or
inc
repz
std
inc
jmp
mov
out
add
add
jbe
pop
and
ret
add
and
mov
add
in
or
xchg
outsl
std
inc
jae
adc
xorl
and
arpl
add
xor
call
std
imul
add
inc
mov
std
jmp
out
jmp
xchg
std
imul
aaa
add
ss
or
mov
incl
add
add
jmp
test
stos
scas
call
data16
hlt
push
ljmp
dec
mov
inc
jmp
pop
cltd
js
pop
xor
stc
incl
push
adc
add
and
pop
add
mov
mov
mov
xchg
pop
dec
cwtl
std
push
push
nop
loope
hlt
mov
inc
add
cli
mov
clc
add
scas
sbb
lret
ret
xchg
les
xchg
std
xchg
rcll
lret
xchg
loop
cmp
repz
into
repnz
jp
lahf
mov
cmpsl
sub
mul
xor
ret
and
jmp
jg
mov
add
fnstsw
mov
add
add
pushf
ret
shrb
mov
inc
test
setns
mov
mov
filds
xor
xchg
es
sbb
xlat
jecxz
insl
fimull
jg
and
adc
add
inc
mov
clc
push
mov
cli
dec
xor
or
ljmp
jmp
mov
add
add
mov
loopne
fdivs
and
dec
repz
jge
incl
mov
push
jno
call
mov
jae
push
lcall
imul
clc
jle
mov
add
add
add
lahf
out
jmp
jmp
andb
or
add
out
orb
add
xor
ucomiss
adc
jbe
das
les
add
mov
stc
test
add
fistpll
add
xchg
push
ret
jmp
push
pop
stc
outsb
sbb
jle
jl
ja
cmp
jecxz
sbb
push
test
add
cmp
add
cltd
mov
and
push
idiv
outsb
lock
sub
clc
cmp
dec
or
or
shll
sbb
sub
sbb
clc
subb
jg
jmp
std
pushl
cltd
and
mov
xchg
jmp
dec
sbb
das
xchg
jge
mov
jmp
cmp
out
add
mov
jg
mov
test
add
add
pushf
std
pushl
adc
or
xchg
cmp
sbb
or
mov
sbb
repz
add
aad
imul
les
dec
xchg
inc
mov
jnp
das
rorl
adc
mov
mov
inc
mov
xor
and
movnti
add
add
jae
jmp
xchg
addb
pop
dec
xor
clc
aad
jb
hlt
mov
jge
je
mov
sub
mov
and
mov
sub
mov
and
mov
add
rep
and
repz
rep
and
repz
dec
repz
repz
sub
repz
dec
repz
dec
repz
daa
dec
repz
adc
popf
sub
sti
push
jb
fld
pusha
pusha
mov
iret
sbb
lods
iret
adc
cmpsl
in
and
push
jns
roll
or
addb
jae
mov
add
add
imul
je
add
addr16
loop
aad
mov
add
add
sbb
lods
jno
test
cltd
sbb
inc
in
mov
sub
sub
arpl
mov
addb
daa
jne
or
and
scas
sub
or
push
lahf
or
mov
orb
inc
cmpsl
xor
pop
pop
addr16
repz
sbbl
xor
daa
jb
add
pushf
cmp
xchg
test
mov
fwait
xor
adcb
jp
ret
jg
cmpsl
hlt
xorl
decl
repnz
cmpsl
hlt
mov
mov
clc
cli
adc
jns
mov
ror
out
out
sbb
or
sbb
nop
lea
test
out
sbb
or
sbb
testb
out
movsl
pop
or
sbb
ljmp
enter
jns
pop
das
cmpsb
fistps
scas
jecxz
mov
aad
daa
je
outsl
repz
fmulp
add
das
hlt
xorb
mov
callw
out
dec
xchg
adcl
jmp
mov
or
mov
test
xor
xchg
test
mov
out
cmpsl
insb
inc
dec
add
cwtl
outsb
call
scas
xchg
test
and
adc
out
je
pop
mov
ljmp
push
lods
movsl
clc
mov
add
cli
adc
stc
cmp
add
add
sti
add
or
andb
and
add
and
fisttps
mov
and
lcall
lcall
fisttpll
xchg
mov
add
sbb
shrb
clc
adcl
jns
out
jne
jne
and
add
add
ja
and
aam
sbb
int3
xor
sub
fisttps
inc
iret
filds
mov
jecxz
add
add
cli
stos
sbb
inc
jno
jge
jbe
adc
das
outsb
sub
clc
mov
inc
push
call
aaa
outsb
or
lods
push
and
adc
add
fistl
xchg
mov
add
adc
sub
lea
lret
cli
xor
hlt
add
xchg
and
or
dec
or
mov
add
mov
or
mov
mov
je
adc
jg
pop
int
add
or
mov
lock
push
mov
ret
add
add
mov
or
daa
adc
jle
hlt
pop
or
push
ret
mov
out
imul
fwait
cmc
sub
and
and
mov
inc
inc
xor
rorw
andb
pop
pop
xor
fwait
mov
scas
adc
icebp
in
mov
jl
rolb
popl
add
add
hlt
jmp
add
jle
paddw
add
mov
imul
hlt
add
iret
xor
icebp
out
sbb
mov
mov
ret
ljmp
dec
mov
lock
arpl
filds
push
shlb
inc
icebp
ret
stc
out
lcall
loopne
add
add
add
jbe
or
mov
adcb
cld
and
mov
push
popl
bound
shlb
lock
mov
add
mov
add
jae
add
aas
pop
xchg
dec
or
add
cmp
aas
out
insl
in
test
mov
test
xchg
outsb
aas
adc
mov
or
sbb
add
je
and
add
add
mov
sub
add
jae
cmp
xchg
addb
shr
push
mov
add
outsl
aas
adc
rolb
xchg
push
mov
repz
mov
xor
orb
mov
jg
jmp
std
call
xlat
adc
cltd
or
loopne
std
call
lret
xchg
in
bound
iret
sbb
dec
push
bound
dec
loop
and
std
popa
adc
bound
repz
and
add
loop
testb
icebp
mov
push
decb
repz
or
mov
or
xchg
inc
inc
mov
xchg
mov
jg
orb
push
sub
repz
or
add
add
out
lcall
out
jl
loop
jns
out
or
or
mov
add
sub
hlt
jl
mov
and
jecxz
enter
data16
repnz
out
cmpl
call
lret
jns
imul
pop
iret
imul
leave
lret
pop
mov
nop
js
or
jmp
inc
xlat
nop
xchg
push
scas
enter
mov
xchg
dec
cmpsl
dec
jecxz
rorb
inc
xlat
mov
ret
call
adc
jno
jne
push
add
xchg
jbe
repz
ret
call
adc
lods
loop
cmpsl
jnp
in
lret
xor
stc
je
ret
jl
in
xor
out
dec
xor
sti
es
jo
out
push
gs
jmp
nop
inc
mov
push
xorb
sub
jns
lods
lock
fnsave
pushl
dec
add
cmp
add
add
incl
outsb
jmp
or
insl
loope
jmp
mov
sub
repnz
and
mov
inc
std
out
jmp
dec
out
jae
arpl
add
outsl
repnz
out
mov
rorl
loopne
jne
or
aas
cmpl
xchg
cltd
insb
mov
mov
xchg
and
dec
mov
jge
jge
mov
std
jg
int3
pop
test
xchg
decl
adc
add
mov
adc
mov
orb
roll
and
sub
or
shll
mov
jg
repz
adc
xor
jle
in
out
enter
movsl
das
push
andl
xor
adc
ljmp
cmpsb
mov
adc
lret
out
bnd
in
out
or
mov
add
jo
or
call
out
inc
jmp
add
jle
or
mov
add
repz
add
add
add
inc
add
aam
add
lret
repnz
sti
xor
arpl
mov
cmpsl
mov
or
mov
jne
or
push
std
pop
jmp
insl
mov
imul
cmpsl
xorb
out
repnz
inc
call
leave
adc
adc
orb
rdpmc
psadbw
cmp
fcmovbe
and
test
out
add
std
test
adc
mov
sub
inc
mov
jp
mov
cmp
and
insb
cmp
adc
shll
add
or
jae
repnz
pop
arpl
cmp
lock
add
movsl
out
and
stc
js
pushl
sbb
decl
aas
add
rolb
xor
cmp
lock
add
in
push
jmp
std
or
test
stos
sti
in
mov
imul
mov
jb
int3
inc
add
mov
sti
pushl
addb
add
mov
sub
insl
das
and
mov
sub
cld
pushl
js
jge
ret
cmp
repnz
lea
or
data16
hlt
dec
fidivrl
cmp
cmp
mov
dec
repz
or
out
xchg
lods
test
cld
cmc
jbe
jns
out
and
jbe
imul
jne
jp
add
loopne
jne
add
add
imul
add
mov
cld
popf
jbe
lods
aam
addr16
inc
out
orb
jecxz
imul
outsb
test
xlat
fidivl
dec
sub
jmp
imul
repz
out
insb
aaa
repz
push
xor
lock
mov
jmp
add
add
mov
scas
mov
out
out
stc
das
pop
js
inc
sbb
add
xchg
jae
ds
test
xor
ljmp
test
sbbl
push
sti
das
test
cli
mov
jne
pop
mov
add
mov
cmpsl
mov
std
dec
ja
jmp
sub
or
inc
jge
xchg
repz
and
sbb
add
icebp
mov
dec
in
lock
sub
jo
or
imul
mov
lds
xor
stc
pushl
imul
mov
lock
in
in
orb
clc
adc
add
dec
repnz
push
fisubrs
pushl
clc
cmovs
clc
inc
pusha
testb
pop
or
lock
rorl
lret
mov
cmovge
mov
mov
std
stc
dec
mov
mov
insl
adc
mov
out
subb
std
je
or
test
mov
mov
pop
cmpsl
xchg
jnp
mov
insl
add
add
add
aas
cmpl
std
je
or
xchg
xlat
jne
mov
mov
jg
pop
std
jg
std
incl
dec
sbb
add
adc
mov
insl
ja
and
hlt
mov
xchg
fs
xchg
out
nop
sti
fs
sbb
test
jle
jno
js
clc
xchg
sbb
add
add
mov
add
add
js
imul
callw
call
add
outsl
in
testb
aaa
test
out
dec
mov
insb
lea
insb
outsb
mov
out
push
cld
add
or
and
loopne
push
adc
int
jl
lds
jnp
ljmp
add
aam
shll
and
and
adc
add
mov
fstpl
and
pop
mov
fnstenv
push
bound
shrl
push
jae
add
insl
mov
mov
insl
out
mov
repnz
out
or
and
mov
in
repz
call
sub
cmp
add
adc
add
push
inc
dec
cmpsl
push
dec
je
mov
inc
and
add
add
sti
add
fists
xchg
jecxz
shll
sub
in
jns
add
hlt
add
xor
aas
or
add
add
cmp
or
mov
mov
enter
inc
mov
hlt
jns
xchg
or
movsl
imulb
jp
pop
jbe
xchg
fildll
mov
lock
pop
or
std
decl
pop
std
jle
pop
cli
addl
decl
jae
or
mov
decl
popa
add
push
pop
std
decl
mov
or
je
decl
into
xor
pop
jge
andl
mov
xchg
xlat
call
hlt
or
repnz
xchg
iret
jno
hlt
out
jb
scas
sub
fiaddl
frndint
in
gs
outsl
out
dec
adc
xchg
repz
add
fistpll
call
insl
lret
repnz
mov
xchg
jbe
outsl
add
mov
add
add
sub
sbb
insl
loopne
inc
push
cmpl
mov
adc
mov
std
fwait
mov
js
sub
in
or
bound
dec
repz
loopne
std
call
repz
or
outsl
stc
mov
or
sbbl
imul
insb
movsb
jo
jmp
rorb
mov
ljmp
or
outsb
stc
pop
mulb
subl
sti
or
stc
jmp
pusha
lcall
scas
jbe
push
imul
cmpb
inc
mov
gs
dec
je
test
arpl
orb
sarb
jae
orb
shlb
arpl
orb
shrb
xor
mov
imul
add
xor
add
push
addl
testb
xor
repz
adc
loopne
roll
add
aam
xor
into
xchg
rolb
fadds
or
pop
pop
adc
add
add
gs
or
jg
push
orb
jnp
add
sbb
or
movsb
add
mov
mov
xchg
push
je
loope
out
pop
std
decl
lcall
fcompl
xor
data16
roll
rcrl
or
xchg
mov
mov
pop
arpl
inc
mov
mov
pop
std
xchg
repnz
sti
imul
imul
lret
cli
xor
inc
mov
subb
test
jle
and
and
cmpb
scas
mov
shr
repz
sti
ss
test
les
add
push
jg
cmc
out
xchg
test
out
jp
add
add
pop
adc
cld
clc
aam
lret
mov
xor
mov
add
test
repz
insl
jae
or
popf
mov
cmc
leave
mov
or
mov
ret
and
out
repz
incb
ficomps
testb
mov
mov
psllq
jmp
inc
std
jle
mov
add
or
push
insl
or
repz
mov
std
out
mov
add
testl
jmp
out
cld
adcl
jge
lds
or
insb
sbb
pop
fdecstp
jmp
add
lcall
or
push
sbb
mov
insl
and
jo
or
cmp
outsl
or
repz
shl
add
xchg
add
call
adc
sbb
in
mov
or
sub
dec
into
push
orb
push
test
pop
sbb
add
inc
or
testb
out
adc
enter
mov
add
add
fs
xchg
jnp,pn
mov
mov
and
loop
and
adcb
cs
testb
bound
dec
std
ror
cs
out
adc
into
notb
inc
gs
xchg
cmp
jle
push
std
or
cmp
mov
mov
sbb
std
incl
repz
add
pmuludq
add
dec
push
push
xor
pop
inc
mul
jnp
add
mov
clc
repnz
or
or
add
jl
cli
adc
lret
inc
mov
addr16
lret
decb
ja
clc
mov
pop
div
aam
mov
sub
sub
pcmpgtw
mov
or
adc
pop
or
out
sysenter
add
lcall
sub
adc
push
add
ljmp
test
cmp
insl
lret
outsl
shr
adc
push
daa
jo
divb
or
adc
testb
adc
push
cli
adc
outsb
jo
testb
add
loope
adc
add
mov
xor
ljmp
dec
cli
subl
incl
and
inc
or
ret
ljmp
inc
in
add
aas
pop
cmp
in
incl
jl
lmsw
cmp
mov
daa
cmp
sbb
dec
iret
adc
jne
leave
test
add
xrelease
xlat
aas
pop
in
test
inc
shl
xorl
addb
mov
and
jbe
sub
sahf
or
pop
test
jg
addb
and
jne
adc
fstpl
dec
dec
mov
pop
enter
cmp
push
ret
incl
add
add
and
ljmp
adc
call
and
decl
ret
cmp
ret
jmp
and
lcall
ret
incl
adc
push
mov
ret
ljmp
xchg
ret
call
xchg
ljmp
lahf
ret
ljmp
ret
ljmp
ret
ljmp
ret
ljmp
mov
and
adc
lds
add
add
and
xor
in
sub
frstor
and
aad
sbb
int
xor
lds
and
mov
sbb
lods
pop
xor
movsl
jmp
lds
sub
lds
jmp
sub
jne
sbb
insl
xchg
mov
pop
sbb
dec
sub
movb
add
cmp
arpl
xchg
inc
arpl
dec
arpl
mov
inc
arpl
mov
bound
pushf
int3
bound
xchg
les
cmp
bound
cmp
bound
int3
bound
les
sbb
bound
sbb
call
les
cmp
bound
cmp
bound
cmp
bound
cmp
bound
mov
ljmp
add
pop
push
push
leave
fsubs
gs
ds
push
pop
fwait
fwait
int3
jmp
mov
pop
data16
mov
jne
mov
jne
outsl
aas
or
add
add
and
rcrl
xor
jbe
adc
cmp
pushaw
push
or
mov
out
push
jecxz
or
jae
mov
testl
add
add
add
add
idiv
insb
mov
push
ret
aam
ja
or
arpl
and
xor
inc
and
js
or
hlt
xor
lock
sbb
jns
adc
add
cmp
jle
out
or
jge
inc
mov
dec
jg
imul
mov
ret
adc
jnp
fnstsw
or
or
add
add
add
and
fnsave
xor
call
jl
mov
cmpsb
lret
jo
mov
mov
adc
popf
lcall
mov
xlat
pop
lock
gs
pop
test
out
mov
loop
int
hlt
add
out
or
dec
pop
pop
mov
insb
mov
jae
add
add
add
aaa
ljmp
fs
nop
xchg
mov
add
mov
mov
loop
xchg
imul
shl
pop
add
push
mov
lods
repz
inc
sbb
mov
push
pop
pop
fadds
sti
mov
jge
rdmsr
sahf
pop
add
or
or
leave
fmull
out
notl
test
sti
scas
out
rcrl
call
mov
jmp
aam
out
inc
jmp
mov
test
adc
pop
stc
jmp
dec
jne
sbb
cmc
sti
leave
pop
mov
inc
add
mov
mov
inc
dec
sar
adc
adc
ficomps
adc
das
inc
test
adc
test
shlb
mov
je
sub
enter
pushl
lret
inc
mov
je
hlt
daa
sub
test
xor
jg
cmp
inc
outsb
cmp
inc
push
dec
loope
add
icebp
mov
int3
shlb
stc
mov
inc
or
mov
mov
add
dec
shl
ss
in
push
leave
lock
push
je
test
std
sub
stos
inc
icebp
jbe
xor
or
adc
jg
dec
rclb
adc
outsb
mov
push
je
sbb
cli
leave
leave
or
pop
insl
pop
cmpsb
iret
repz
xchg
push
adc
pop
mov
enter
push
fiaddl
xlat
sub
addr16
enter
xchg
fsubrs
push
jo
xor
jnp
and
loop
and
cmp
enter
or
cmc
inc
enter
repz
out
push
mov
loop
popf
lock
call
adc
jb
and
movsl
in
adc
inc
mov
cmpsb
mov
or
xchg
jmp
add
loope
mov
gs
inc
mov
jge
sub
xchg
xchg
les
mov
dec
or
adc
fdivrs
and
loopne
mov
xor
adcl
imul
fwait
ret
inc
mov
add
xchg
repz
add
test
add
add
push
imul
movsl
jp
jp
aam
jecxz
push
push
out
and
push
fisubrs
jns
cwtl
aas
mov
sub
or
cmpsl
dec
add
and
add
mov
test
shlb
std
pop
sbb
or
pop
test
fldenv
icebp
mov
push
imul
loope
dec
xlat
int3
ficoms
out
sbb
jno
dec
nop
xor
mov
dec
clc
pop
rclb
mov
in
inc
pop
stc
call
testb
insb
sub
push
sub
gs
jae
jns
pop
jno
in
mov
idiv
leave
pop
mov
stos
dec
add
pop
out
mov
add
testb
pushf
sub
xor
int
add
cmc
mov
cmp
decl
jns
adc
lahf
sub
jp
movsl
and
xor
xchg
push
or
dec
dec
jp
add
orb
loopne
repz
jae
int
adc
sub
decb
aaa
mov
idivb
mov
cli
pop
mov
xchg
dec
movl
add
add
enter
jp
xor
jg
decl
sarb
div
jno
cli
xchg
outsb
out
aas
mov
inc
mov
outsl
push
cli
aad
fildl
enter
push
ficoms
xor
push
lret
repz
inc
fiadds
mov
out
or
push
add
rcl
fsubs
inc
cmp
imul
insb
and
add
add
sbb
push
push
xchg
out
mov
test
and
jo
and
lds
push
adc
repz
inc
jns
pop
enter
mov
xor
sub
hlt
call
xor
jae
adc
push
push
pop
push
ret
mov
stc
shrl
inc
jmp
add
and
pop
push
push
jp
pop
mov
xchg
pop
stc
cltd
adc
hlt
mov
push
out
gs
sub
outsb
inc
roll
pop
stc
sbb
das
stc
insb
adc
dec
fistpll
repz
adc
pop
adc
cli
push
add
cmp
jae
faddl
jmp
imul
les
stc
mov
lret
out
mov
out
ret
inc
outsb
inc
clc
add
push
add
clc
fs
and
inc
xchg
cld
mov
add
add
add
icebp
pxor
out
cmp
mov
add
cmpsb
xchg
in
push
test
icebp
push
mov
adc
inc
xor
test
out
adcl
ret
xor
mov
test
add
add
stos
push
cli
in
push
outsl
jp
lret
insb
aad
jns
push
addb
jp
mov
push
dec
pop
les
jns
adc
mov
ljmp
mov
addb
jge
gs
lods
mov
stos
push
cli
push
jnp
out
ret
dec
cli
jnp
xchg
flds
sbb
xor
test
mov
outsb
leave
stc
push
pop
hlt
lret
scas
xchg
add
lock
cld
push
loopne
mov
popf
repz
pop
arpl
test
bound
ficomps
xchg
and
ret
mov
int3
pop
cmpsl
repz
xchg
outsl
dec
push
mov
pop
sub
leave
call
cmpl
push
sahf
ret
test
outsl
daa
flds
add
add
push
repnz
jae
add
pop
ficoml
sarb
in
fcompp
mov
outsb
push
dec
and
fisttpll
int3
mov
out
ret
xrelease
mov
push
jb
jae
gs
add
adc
mov
push
stc
popaw
mov
pop
pop
mov
stc
inc
iret
lahf
stc
inc
and
xor
add
push
adc
mov
mov
dec
mov
cmp
mov
es
je
add
adc
outsl
and
inc
shl
sub
ret
mov
jp
neg
movsb
dec
call
cmpsb
mov
xchg
xor
mov
pushw
stc
idiv
movsb
cmpb
jp
testb
add
pop
movsb
dec
push
rorb
pusha
push
jne
leave
dec
mov
xchg
es
lcall
push
pop
or
mov
pusha
cmp
movsb
insl
or
mov
shlb
mov
xchg
pop
aaa
stc
mov
xchg
test
pushf
add
xchg
dec
cmp
cmc
or
xchg
push
cli
pop
jno
cli
mov
out
out
add
or
mov
add
or
mov
cli
lahf
adc
aas
mov
mov
mov
stc
lea
push
out
fisttps
pop
fcoms
insl
add
sbb
push
ss
iret
mov
jle
mov
test
add
add
hlt
loope
inc
movsb
ss
sub
inc
mov
pop
ror
dec
or
xchg
dec
fcmovnbe
pop
add
out
repz
pop
push
lcall
pop
cs
jecxz
je
sub
jle
dec
fsts
mov
aas
jbe
lcall
xor
inc
ss
push
inc
sub
dec
cltd
push
cmp
nop
mov
addr16
xchg
fcomi
ret
jne
fsubrl
cltd
mov
orb
add
mov
add
mov
ja
in
dec
push
insb
add
not
mov
adc
int3
dec
mov
roll
cli
scas
or
movsl
dec
dec
push
insb
add
notl
icebp
dec
stc
xchg
jg
icebp
inc
dec
stc
sbb
push
cs
add
or
add
inc
dec
call
push
in
sub
testl
in
mov
movl
clc
dec
dec
mov
add
jnp
std
push
roll
adc
test
push
das
mov
or
add
mov
cld
pusha
divl
je
testb
notb
fistpl
cld
mov
jae
sti
adc
mov
mov
xor
lds
icebp
dec
ljmp
leave
pop
cld
push
rcll
insl
add
mov
add
ljmp
js
jb
sub
or
push
sbb
std
decl
std
add
add
xchg
mov
mov
pop
push
test
pop
std
jle
mov
xchg
dec
das
repnz
cmc
pusha
add
lret
xchg
orb
inc
sbb
add
movsb
xchg
inc
cltd
add
xor
incl
std
out
jb
decl
aaa
dec
call
lahf
cmc
cli
pop
movsb
mov
pop
jbe
outsb
mov
cs
hlt
cmpsl
inc
or
cmove
push
outsl
dec
pusha
dec
mov
add
popa
dec
outsb
imul
mov
fcmovnu
sub
jmp
add
jo
dec
and
add
push
mov
out
push
mov
inc
add
popl
push
jg
lock
mov
pop
shr
lret
dec
movsl
add
jge
add
cs
add
js
negl
leave
mov
movsb
lcall
add
add
add
add
xchg
jle
sti
add
sahf
pop
pop
lret
mov
xchg
push
adc
leave
or
bound
popaw
es
add
pushf
dec
test
ret
fs
mov
out
jp
jmp
fmuls
xor
lret
jo
roll
das
mov
test
rolb
and
add
add
xchg
mov
ds
jb
imul
es
lret
add
push
addb
aas
sbb
lret
inc
enter
lret
add
lret
add
lret
add
lret
add
mov
inc
fwait
clc
mov
xor
shr
xchg
adc
and
add
mov
cmp
add
sti
mulb
mov
xchg
scas
out
jecxz
jns
dec
out
bound
sub
das
outsl
mov
test
xor
xor
dec
mov
test
jl
data16
cmpsl
mov
mov
addr16
rol
jmp
pushf
call
fsincos
mov
mov
add
movsl
pop
std
mov
cmp
pushf
mov
ret
gs
adc
mov
xor
add
fcmovb
in
out
fstp
mov
bswap
ds
xchg
dec
das
mov
fcos
mov
insb
inc
xor
jl
test
dec
out
test
movsb
clc
testb
pop
fisubs
movsb
pop
sbb
mov
dec
or
or
fwait
out
adc
out
add
cwtl
mov
sub
cmpsb
enter
sti
jo
add
add
or
clc
hlt
dec
repz
mov
movsb
mov
lea
clc
inc
fistl
das
or
into
push
arpl
pop
mov
mov
jp
dec
inc
add
stc
mov
add
stc
aam
mov
stc
dec
gs
mov
out
fdivl
lds
roll
dec
and
jb
mov
loopne
adc
hlt
xchg
cwtl
lcall
inc
dec
xchg
pop
dec
stc
fs
lret
add
push
or
int
and
les
inc
xchg
jmp
pop
movsl
jae
pusha
mov
cmp
lds
add
dec
inc
mov
jno
sub
sub
cmpb
or
and
fnstenv
arpl
loope
push
lret
mov
mov
xor
ret
inc
cmp
out
jmp
add
mov
push
cmpsb
xor
push
and
add
cs
adc
int3
inc
clc
test
cmc
push
inc
stc
jg
jmp
stc
andb
inc
bound
gs
lcall
mov
decl
shl
sub
iret
xor
daa
adc
aas
or
jge
popf
pop
or
sbb
js
mov
mov
jle
adc
jl
gs
jp
cmp
mov
out
xor
mov
pop
sarl
cli
adc
mov
js
lahf
jmp
push
mov
adc
out
xchg
inc
or
sbb
or
int3
decb
xchg
mov
dec
adc
repz
mov
repz
roll
dec
paddb
mov
add
add
mov
lcall
mov
jmp
pusha
inc
mov
test
lock
je
mov
push
cmp
or
fstpt
ds
lahf
stc
daa
xchg
add
inc
cmpsl
inc
mov
push
enter
lahf
mov
inc
inc
adc
cmp
dec
test
jle
clc
add
inc
sbb
je
add
or
lock
insb
sarl
hlt
sub
mov
or
or
fisttps
ja
xor
bnd
mov
xor
ret
ljmp
xorl
dec
repnz
mov
pop
jns
inc
icebp
adc
cmp
dec
in
cwtl
mov
or
add
add
or
out
idiv
sbb
add
push
cmpsb
idiv
cld
mov
cld
mov
call
cmp
and
das
cmpsb
idiv
mov
dec
call
gs
cli
ret
dec
push
sub
imul
jo
sub
pushf
jge
mov
pop
fidivrl
ja
push
push
fidivrl
mov
testb
fwait
and
add
cmp
sarb
lods
out
adc
adc
mov
aas
or
mov
std
or
call
sub
inc
mov
cmp
lret
xchg
add
dec
push
mov
nop
adc
leave
aas
cli
or
xchg
sahf
sti
notl
testb
jnp
inc
cli
stos
inc
in
dec
sub
adc
cmpsb
enter
call
add
adc
inc
stc
test
push
sar
push
push
dec
addr16
or
shrl
repz
scas
mov
jbe
inc
lret
dec
mov
xchg
mov
cmp
shll
xchg
hlt
out
add
xlat
jle
shlb
inc
push
xor
xchg
add
add
out
and
insb
mov
lcall
dec
movsb
je
jmp
outsb
insb
fbstp
sub
insl
adc
adc
call
filds
add
inc
out
adc
repz
cmp
stc
jmp
test
push
cmp
stc
inc
shrb
jns
pop
je
mov
data16
enter
lret
dec
cmpsl
popf
mov
and
inc
push
out
mov
cmp
mov
push
insb
lret
sbb
loopne
cmp
clc
call
mov
mov
stc
dec
pop
stc
je
nop
push
jb
mov
fsubl
dec
jge
popf
in
test
add
testl
das
testl
std
xor
dec
xor
and
inc
xlat
and
adc
outsb
mov
pusha
jbe
gs
xor
pusha
cmp
cld
pushl
or
jne
mov
jge
add
add
xorl
es
add
cs
repnz
mov
inc
or
sarb
mov
enter
divl
add
mov
mov
cmp
cli
or
cmp
jge
out
and
cmpl
mov
mov
or
mov
add
or
push
not
xor
cli
adc
cwtl
sti
int
aam
stos
aas
cmp
pop
lea
test
dec
std
jns
shlb
dec
std
pushl
dec
shll
and
decl
add
add
mov
cli
fidivl
std
mov
or
mov
leave
mov
cmp
and
movsl
outsb
imull
mov
call
xchg
cmp
cmp
ds
inc
add
add
inc
out
jl
sbb
shl
add
dec
repz
add
add
add
inc
jp
mov
cltd
xchg
loopne
push
cmp
pop
in
dec
add
mov
cmp
out
aas
cmp
mov
add
adc
mov
stc
push
cmp
outsl
xchg
pop
pop
mov
in
push
aam
mov
repz
jmp
add
cmp
jmp
xchg
adc
pushf
mov
fs
jmp
add
jp
or
mov
inc
jmp
mov
add
pop
dec
shlb
jne
fs
shlb
jne
push
idiv
push
pop
outsl
jae
add
inc
add
lods
and
ljmp
ds
out
push
push
call
mov
mov
add
add
and
lret
aaa
cli
testb
pop
mov
pushl
insl
sbb
xor
fildl
idiv
sub
cmc
call
enter
sti
mov
push
pop
ljmp
sbb
xchg
lock
sub
jg
inc
add
mov
xchg
inc
bound
xchg
add
iret
push
sti
xchg
incl
cmp
xchg
stos
cmp
hlt
stc
inc
mov
mov
add
cld
ss
adc
adc
dec
dec
cmp
pusha
mulb
mov
add
out
cld
ss
add
cli
inc
mov
gs
or
inc
dec
cmpb
adc
add
add
lret
int
mov
push
out
in
test
cmp
into
repz
gs
dec
cmp
cmp
lea
sub
mov
stos
add
inc
hlt
mov
jecxz
xor
jmp
mov
jle
jecxz
adc
sbb
les
icebp
pop
push
sarb
add
cltd
push
dec
daa
into
add
data16
popa
mov
fstpt
xchg
lods
jnp
or
pop
dec
dec
enter
cmc
push
mov
xchg
push
push
cmp
jnp
or
loopne
das
aaa
push
mov
andl
in
call
push
mov
je
test
aas
mov
andl
repz
push
xchg
mov
add
add
add
in
test
inc
dec
add
jne
call
mov
push
push
mov
xchg
outsl
shr
insb
call
mov
test
and
add
ss
push
xor
dec
jg
add
fs
jns
mov
add
add
xor
push
dec
cmc
dec
push
jnp
sbb
add
addr16
enter
test
icebp
add
mov
mov
pop
loope
cmc
std
testb
and
lcall
call
test
mov
andl
cli
jmp
je
clc
f2xm1
jge
mov
add
aad
testl
jae
cli
pop
aaa
sub
mov
std
jl
xor
mov
data16
repz
and
mov
pop
mov
std
or
filds
mov
rolb
dec
decl
jb
ret
cmc
jmp
mov
sub
dec
mov
jns
jbe
cmpsb
cmp
test
push
loop
ret
stc
in
rcr
push
mov
loop
push
cli
int
insb
inc
ds
xchg
mov
out
add
ja
push
inc
ljmp
jmp
jle
mov
pop
xor
xor
aas
push
mov
push
push
and
pushf
xor
or
out
roll
das
add
pusha
mov
dec
xlat
dec
and
call
dec
xchg
cld
mov
or
jecxz
xor
loope
sbb
test
scas
mov
or
lret
xor
in
add
pop
xchg
sub
clc
sbb
xor
fsub
stc
fmull
repz
loopne
aam
outsl
repnz
mov
clc
xor
imul
add
xchg
xor
mov
ret
add
add
mov
insb
cmp
stc
out
lea
inc
fidivrs
repz
mov
ss
sbb
and
adc
jp
call
es
insl
adc
and
test
testl
out
ja
sbb
jns
mov
clc
mov
add
add
cmp
incl
testl
xor
jne
jnp
sbb
xor
and
xchg
jb
xor
jb
sub
cli
sub
out
out
add
mov
push
loop
and
xor
rol
aas
add
std
mov
sbb
pushf
mov
jle
add
add
mov
stc
fisubs
roll
mov
xlat
jae
les
out
psllq
stos
mov
jl
gs
mov
clc
int
inc
sar
lahf
adc
mov
std
mov
filds
popl
push
adc
or
repz
addl
add
add
add
cmp
mov
jl
sub
lds
aad
xor
roll
add
xor
mov
das
add
push
testl
xor
lods
das
mov
lret
push
xor
and
mov
and
sti
mov
xor
jl
ret
pop
sub
mov
ja
and
stc
mov
add
adc
push
jge
sbb
addb
sub
icebp
jp
xor
lds
pop
xor
ljmp
push
jo
jmp
jle
adc
mov
loopne
add
es
inc
data16
stc
cs
add
add
or
dec
xor
xchg
xor
test
out
idiv
std
jecxz
les
xor
push
ret
rorb
repz
out
loopne
inc
rep
rcrl
mov
insl
xor
jo
je
sbb
mov
or
cmp
push
add
rcll
imul
in
pavgb
cmp
insl
add
aam
notb
xor
add
mov
mov
and
push
add
dec
pop
sbb
push
mov
add
rclb
xchg
mov
je
lcall
jle
sar
es
or
or
or
repz
add
add
nop
sub
mov
subb
repz
mov
cli
and
out
mov
cli
repnz
inc
mov
sbb
cwtl
pop
std
pop
adc
lret
sbb
add
fnsave
and
hlt
sbb
sub
jp
mov
xlat
mul
fadds
data16
std
je
xchg
std
cs
pop
jp
cld
add
push
jl
call
xchg
sarl
shll
imul
aad
dec
xlat
xlat
jle
xlat
aaa
int3
movsl
shrl
call
push
int
roll
adc
xlat
pop
jnp
xlat
add
push
call
fmull
add
inc
jne
cmc
mov
adc
shlb
pusha
push
shlb
add
addb
call
gs
stc
test
mov
add
jle
or
and
jb
mov
call
scas
mov
lds
sbb
sahf
pop
sub
and
and
mov
je
popf
sub
push
ja
add
clc
mov
and
inc
adc
mov
mov
add
push
loopne
call
mov
insl
cmp
xor
pusha
repz
xor
stc
mov
add
xchg
out
idiv
cmpsl
mov
test
add
outsb
xor
pusha
and
fstpt
sbb
repz
mov
scas
cli
out
mov
pop
sbb
dec
in
fmuls
ja
xor
push
cmp
jo
pushl
dec
cld
out
fdivrs
jg
mov
and
sub
adc
jns
scas
dec
aam
add
fidivl
adc
mov
incb
mov
sub
push
in
xor
cli
adc
mov
stc
addr16
incl
es
in
dec
jp
or
stc
nop
in
jae
push
aam
fistps
cli
mov
jp
xchg
pop
scas
daa
mov
mov
aad
inc
xor
add
fsub
sti
pop
es
lock
iret
out
mov
cli
cmp
call
lret
pop
and
jle
xchg
xchg
rorl
jecxz
ret
mul
rolb
rep
mov
jbe
daa
sbb
popf
and
jg
jl
add
add
fs
jle
adc
add
aas
das
sbb
mov
insb
cmpsl
add
sub
sub
daa
ss
or
add
sbb
mov
push
ja
daa
add
cs
imul
sti
and
sub
mov
insl
ret
dec
sub
ret
cmp
cmp
add
add
out
scas
arpl
inc
sub
ja
add
xchg
lahf
pushf
adc
ss
dec
cmpsb
ret
jb
jno
cmp
cld
fs
call
insb
dec
cmpsb
xor
jmp
hlt
and
jecxz
sub
and
icebp
test
jno
add
pop
rorb
subl
data16
add
cli
cmp
mov
and
enter
mov
fucomp
outsb
test
imulb
add
int3
jmp
test
sub
je
testb
add
decl
arpl
fidivrs
icebp
add
jae
pushl
jae
cmp
pop
push
pop
mov
inc
mov
loope
push
shl
mov
loope
add
testb
push
push
push
lea
icebp
xchg
and
add
jb
cmc
outsl
xchg
lret
pop
or
and
push
xor
add
idivl
sbb
testl
js
subb
dec
add
add
inc
jbe
jle
add
xchg
sub
or
push
icebp
rorl
jbe
xchg
movsl
mov
add
mov
mov
inc
out
ret
add
cli
sbb
pop
push
push
aas
pop
mov
outsb
ret
mov
lcall
je
cpuid
dec
pop
pop
aaa
lock
add
popw
cltd
ret
pop
jnp
or
sarl
into
daa
fs
outsl
add
lods
cltd
repz
ret
scas
in
test
int3
lcall
lret
and
aad
nop
pop
mov
shrl
mov
aaa
iret
jns
sub
or
add
ss
outsb
mov
shlb
mov
addr16
or
stc
xchg
mov
incb
lret
sbb
subl
cmc
ss
push
add
dec
mov
stc
fs
or
test
rol
or
inc
or
jb
sub
mov
sub
insl
into
mov
pop
ret
add
cmp
test
dec
mov
add
mov
divb
xchg
int3
into
cmpsb
leave
addl
push
add
sti
into
loop
sub
xchg
add
or
cld
into
jge
ja
sub
lods
sub
ret
addl
push
sbb
pop
inc
add
pop
sbb
call
sbb
test
mulb
cld
xor
std
ljmp
push
adc
xor
push
mov
xchg
sbb
test
push
pop
adcb
add
xchg
mov
loop
and
lds
cmp
add
xor
inc
jge
int3
pusha
sar
jmp
cmp
cmp
orl
jno
sbb
jle
push
std
or
add
mov
pop
mov
std
xchg
adc
cli
push
fimull
incl
pop
cmp
or
in
mov
cmc
sbb
idiv
adc
add
add
mov
std
push
mov
out
mov
and
in
addr16
inc
repz
rcrb
pop
mov
stos
sub
lock
add
movb
adc
jo
jns
sub
add
push
sbb
call
cwtl
xor
inc
xorb
mov
pop
enter
mov
movd
hlt
out
push
inc
xchg
mov
mov
arpl
imul
sbb
daa
jno
and
jmp
push
ja
jmp
mov
mov
mov
add
pop
mov
add
mov
push
mov
mov
jno
push
addl
add
add
add
add
stc
movzww
push
lock
or
inc
and
cmp
push
jae
push
or
adc
testl
js
out
mov
call
pushf
jo
or
outsb
icebp
mov
jnp
in
test
loop
add
sahf
inc
mov
adc
mov
into
movsb
out
in
mov
js
nop
add
jae
mov
jmp
mov
testb
xor
inc
cmp
lret
mov
icebp
mov
pop
cmp
or
test
in
mov
xor
fcmovnbe
idiv
cmp
jmp
xchg
cmp
pop
fstpt
in
or
or
cmpl
add
add
add
add
test
pop
fs
adc
mov
cmp
iret
mov
dec
cli
xchg
movsl
jmp
fcoms
dec
mov
add
mov
test
jne
mov
std
cs
movsl
cmp
mov
sbb
je
pushf
sub
lret
movsl
rcrl
cli
pop
repz
femms
add
add
add
add
sahf
psrlq
cwtl
rcrb
pop
out
lret
out
arpl
repnz
push
ljmp
or
mov
insl
lret
pop
shlb
mov
mov
outsb
shlb
mov
outsb
enter
mov
pushf
cmp
test
or
push
mov
lret
pop
enter
add
jae
jg
jb
mov
mov
add
psubw
je
test
enter
jne
stc
and
jle
cmc
scas
call
add
mov
xlat
leave
test
cmc
push
ret
in
cmp
jmp
sbb
scas
xchg
testb
mov
daa
arpl
sub
add
add
sub
push
jne
roll
mov
bound
test
pop
jne
push
add
xchg
and
cmp
and
in
mov
push
xchg
jae
inc
jge
ss
jne
iret
pop
in
pushf
add
insl
mov
testl
out
hlt
inc
add
and
adc
cmp
mov
stc
mov
or
add
add
lret
fsubl
add
and
notb
or
or
jbe
cmc
jne
add
andb
push
pop
dec
stos
mov
push
mov
loop
mov
ja
add
sbb
adc
aas
mov
xchg
and
xlat
or
or
add
add
sbb
repz
scas
inc
adc
je
mov
push
adcl
incl
sub
xor
call
pop
mov
adc
loop
mov
rclb
cli
gs
push
jb
cmp
or
int
push
aas
jl
dec
icebp
dec
add
mov
add
add
mov
add
jae
cmpsl
or
push
xchg
add
or
out
mov
xchg
fildl
dec
repz
leave
add
add
mov
pop
xchg
mulb
add
sbb
aas
jg
out
sbb
mov
nop
cmpsb
lret
sti
add
ret
sti
fistpl
cld
sbb
ja
pop
in
push
jp
lahf
ret
pop
pop
push
sub
sbb
or
inc
nop
sbb
or
in
pop
nop
insb
in
sub
sbb
jmp
inc
sbb
mov
stc
hlt
mov
inc
jmp
and
or
sbb
push
and
or
stc
jmp
sti
loop
scas
xchg
flds
imulb
or
and
add
add
repz
cmp
out
test
repz
cmp
or
cmc
mov
je
jge
dec
hlt
in
jge
push
lcall
cs
stc
push
les
mov
sarl
outsb
insl
and
outsl
idiv
out
pop
push
add
sub
add
daa
test
mov
push
cmp
add
add
outsl
adc
xor
lcall
add
fdivr
idiv
mov
jo
and
cld
je
in
add
and
idiv
mov
adc
inc
scas
adc
xchg
xchg
enter
cli
lahf
into
repz
mov
mov
xor
and
adc
ud1
or
add
test
xchg
cmp
rorl
dec
add
mov
and
mov
frstor
dec
out
int3
out
push
adc
pop
sub
ret
cwtl
lret
xor
cli
popf
popa
out
pop
into
add
xor
dec
orb
loope
out
mov
iret
repz
stos
mov
out
inc
or
sub
push
cmp
jg
repnz
mov
sbb
add
outsb
push
add
rep
mov
out
mov
or
sbb
mov
lahf
mov
ret
sub
pop
ret
sbb
out
dec
iret
rorb
mov
iret
sti
rcrb
rolb
subl
pop
mov
sbb
xchg
fwait
xlat
add
hlt
xor
xchg
pushf
mov
sbb
dec
pop
xchg
cmp
outsl
loopne
mov
mov
rcrl
bound
test
repz
xchg
xor
out
xor
cmpsl
loope
inc
xchg
mov
pop
xchg
sbb
pushf
stc
sbb
mov
imul
sarb
lds
pop
stc
jmp
xchg
add
cmp
cli
into
popa
add
mov
mov
and
insb
cmp
jmp
jnp
jge
jecxz
add
ljmp
add
bound
ljmp
pop
fistpl
aaa
fmull
lea
and
repz
insb
mov
cmp
je
pop
sbbl
repz
and
and
pop
loope
into
push
mov
sbb
and
stc
lcall
sbb
jle
cmp
es
int
scas
cli
push
lock
data16
incl
shl
adc
pop
xchg
stos
xchg
es
test
or
pop
jp
stc
xchg
cs
dec
inc
aaa
fnstenv
lret
outsb
lods
out
mov
fldcw
add
add
dec
fsts
and
inc
cli
or
or
je
xchg
xchg
and
add
aaa
pop
push
mov
cmp
add
decl
dec
iret
pop
sbb
sub
adc
or
sbb
inc
add
scas
aas
jg
iret
sarl
outsb
leave
lea
adc
push
adcb
scas
ret
mov
insl
out
stos
adc
and
mov
xor
lods
sub
adc
and
jle
jae
xor
mov
add
mov
fidivs
jns
rclb
adc
jae
insl
out
in
lds
cli
aam
out
jmp
int3
and
bnd
and
adc
mov
scas
mov
popa
mov
add
xchg
fildl
and
xchg
add
inc
jp
xchg
or
stc
jbe
push
je
mov
mov
fdivl
clc
inc
jmp
dec
adc
mov
push
jae
aam
adc
xchg
mov
push
pop
mov
in
testl
ss
xor
add
mov
add
add
test
insb
inc
mov
sub
add
scas
jbe
sub
cmp
in
loop
repz
cmp
outsl
out
or
lea
rolb
adc
adc
cli
sub
test
pop
clc
in
fidivrs
sbb
imul
sarl
jmp
mov
push
js
sldt
add
outsl
mov
xor
dec
les
push
jp
imul
loop
or
lds
adc
out
sbb
decl
and
std
decl
push
incl
fdivr
and
lds
push
jno
jnp
mov
jle
sbb
xchg
test
pushl
jge
mov
cmp
add
pop
aas
sahf
movsl
cmpsb
xchg
adc
out
popf
cli
and
aas
jle
xchg
add
repz
int
push
lret
cmpsl
in
in
ficompl
out
push
fiadds
cmp
lods
and
add
ljmp
jecxz
push
pop
ljmp
fdivs
data16
jp
shlb
add
add
in
arpl
call
ret
call
ret
call
ret
call
ret
in
adc
dec
add
enter
enter
enter
enter
enter
enter
mov
adc
mov
aad
incb
scas
xchg
pop
data16
xchg
je
push
mov
and
iret
xor
mov
xchg
or
clc
push
loop
aas
sbb
and
cld
push
jl
lds
dec
int
or
cmc
xor
ja
out
add
cli
mov
and
dec
call
push
or
push
mov
adc
mov
push
push
add
repnz
incl
add
add
or
jne
and
jmp
mov
call
xorb
out
mov
adc
js
xor
or
repnz
mov
enter
mov
push
pushl
xor
dec
imul
mov
add
and
repz
mov
loope
sbb
add
add
into
cwtl
std
add
lods
pop
adc
cmpsl
xchg
jle
pop
mov
lock
gs
ret
outsb
aas
mov
xor
loop
push
and
and
mov
inc
pop
add
aaa
xchg
sbb
adc
clc
adc
or
xchg
xchg
fstl
add
lcall
xchg
jg
ljmp
add
les
add
data16
movsb
mov
or
cmp
dec
sbb
lds
or
sti
push
mov
lcall
daa
sbb
mov
leave
hlt
xchg
inc
inc
or
js
sbb
or
outsb
rcrl
add
lods
enter
jns
jle
or
scas
inc
xor
add
lret
jmp
dec
or
adcb
or
jbe
cmpsl
test
je
cmc
hlt
mov
sbb
aad
mov
or
jg
jb
sti
subl
jo
call
cmp
jmp
mov
inc
or
insl
cld
shll
add
leave
adc
es
pop
add
mov
and
inc
add
mov
sbb
call
push
xor
sub
jmp
repz
mov
jae
shrb
xor
pop
or
add
testl
add
js
je
jo
cmp
pop
dec
call
push
add
add
push
addb
mov
jmp
push
std
out
mov
insl
add
mov
or
jmp
sub
mov
mov
adc
scas
insl
inc
ljmp
jmp
arpl
add
cmc
decl
hlt
pop
cli
push
pop
nop
add
push
sbb
adc
in
test
add
add
cmp
pop
xchg
pop
jae
xchg
aas
out
and
cli
pop
movsb
pop
mov
jecxz
pop
cli
or
pop
pop
inc
xor
jp
pop
cmp
inc
xor
cmp
jnp
adc
xchg
sub
push
js
add
js
mov
xorb
and
inc
or
hlt
sbb
pusha
fisttps
add
fs
icebp
stos
add
repz
mov
repz
and
ds
sub
sahf
test
or
rcll
jns
pop
add
mov
clc
nop
or
jl
mov
scas
fbstp
rol
add
add
xor
jb
fisttps
pop
add
jmp
add
add
repz
movsb
loop
aas
insb
jecxz
rcll
shr
or
jmp
xor
test
mov
repnz
hlt
mov
jbe
scas
jge
xchg
mov
lock
aam
mov
mov
cmc
sub
stc
dec
mov
dec
cltd
jo
call
insl
dec
test
adc
add
add
push
jge
jo
add
in
aam
testb
cmc
in
or
push
jmp
cmp
push
leave
xor
stc
test
out
insl
push
movsb
mov
test
jbe
mov
pop
addr16
in
dec
call
xchg
out
mov
jl
test
inc
or
add
add
add
mov
sbbl
test
mov
arpl
mov
or
sub
repnz
push
mov
mov
cmp
lcall
test
aaa
add
add
mov
ja
cmpsb
adc
xchg
lock
cli
fidivrs
in
out
add
mov
ja
cmpsb
adc
mov
xor
cli
mov
xchg
add
inc
data16
xchg
mov
cli
fnstenv
cmpsb
sbb
scas
sbb
data16
out
in
cli
xor
lcall
pop
hlt
add
mov
add
lcall
add
fbld
pop
lret
sbb
lcall
add
add
add
addb
inc
inc
xor
pusha
cmp
pop
test
out
mov
js
or
cltd
or
dec
pop
push
adc
cmp
aam
fs
jp
add
push
xorb
mov
icebp
testb
add
sbb
daa
adc
cmp
jb
fisttpll
add
add
les
fs
subb
add
fimuls
testb
cmp
mov
inc
jg
bound
testl
sbbb
test
aam
push
pop
fimuls
jae
aam
stc
aam
hlt
inc
jmp
push
jns
cli
divb
adc
je
mov
fsubl
popa
pop
jae
mov
insb
testl
or
mov
add
push
pop
jp
sub
jecxz
dec
mov
test
jge
test
jne
xchg
add
divb
mov
lock
jge
lahf
xchg
and
bound
xchg
imulb
ds
or
insb
shlb
cmp
incl
add
add
test
cmpsb
test
cmpsb
notl
outsb
ss
mov
adc
cmpsb
notl
pop
stos
les
stos
cmp
mov
or
pop
adc
jbe
jb
xchg
call
pop
pop
pop
push
dec
push
test
lock
pop
and
lret
test
hlt
stc
pop
xchg
les
test
add
or
mov
std
mov
push
adc
or
jmp
jl
add
or
stc
fcoml
inc
or
dec
add
in
mov
in
fisubs
add
hlt
mov
xchg
mov
pop
add
add
add
inc
jecxz
mov
cmp
andb
add
out
adc
repz
loopne
je
leave
sti
fwait
add
data16
hlt
adc
ja
add
xor
mov
add
pop
mov
mov
jmp
sub
xchg
jmp
mov
add
xor
xchg
add
mov
rorb
scas
sub
add
push
add
mov
stc
aam
icebp
inc
jmp
jp
nop
jmp
jg
add
cli
xor
xchg
mov
inc
loope
je,pt
mov
cmp
js
add
jbe
inc
jmp
adc
inc
jmp
pop
cli
shlb
jmp
adc
mov
jo
jmp
pop
add
mov
add
add
pushf
sub
adc
or
fwait
add
les
xor
xchg
or
xor
in
push
ret
push
btcl
sub
inc
arpl
xor
lcall
test
add
xchg
ds
arpl
dec
incl
or
add
add
insb
shlb
shr
repz
test
or
mov
repz
stc
pop
int
fiadds
inc
add
jns
mov
dec
addb
test
sub
mov
cwtl
pushw
std
call
push
add
add
mov
mov
incl
add
add
sbbl
adc
in
orl
adc
cwtl
fcoms
std
incl
into
or
cmp
add
mov
sti
adc
push
or
repz
jmp
add
rcll
xchg
mov
mov
xchg
mov
ret
jmp
mov
cmp
mov
inc
mov
jg
mov
es
pop
loope
mov
aas
mov
dec
mov
arpl
add
mov
orb
lret
cs
xchg
outsb
inc
mov
jae
add
je
push
stc
mov
or
add
or
or
ss
jb
loopne
clc
dec
repz
jp
mov
add
add
xchg
jb
jmp
xorl
call
jno
xchg
jno
sarb
stc
xor
push
into
nop
push
cli
subl
repz
call
fsqrt
jb
aaa
movsl
call
mov
add
add
lahf
adc
sbb
or
hlt
xor
stc
cmp
sub
mov
xchg
mov
mov
push
cld
xchg
xchg
repz
divl
test
jge
mov
mov
push
cld
pop
mov
jne
movzbl
dec
jmp
stos
mov
sub
je
rol
add
add
dec
mov
imul
push
or
push
sub
jne
stc
sbb
fimull
or
test
or
xchg
outsb
add
xchg
inc
clc
out
mov
push
pop
nop
cmc
sti
ffree
dec
call
sub
mov
or
push
enter
add
sub
pop
dec
sub
dec
call
add
add
test
and
je
int3
add
inc
add
call
push
nop
les
push
repz
add
repz
cli
les
rep
jno
push
and
cmpsl
add
call
sbb
cmpsl
add
sub
stc
ss
inc
add
add
add
out
insb
aas
scas
insl
and
mov
mov
mov
jg
ds
imul
es
clc
push
stc
mov
and
insl
jo
outsb
addr16
or
dec
mov
and
mov
xchg
xchg
std
clc
sahf
push
mov
and
cli
jb
xor
jle
rcrl
lock
hlt
cmp
adc
sahf
mov
jae
add
add
rolb
cld
clc
inc
push
mov
mov
testb
cli
jb
loope
mov
ret
cmp
cli
adc
xchg
mov
mov
out
add
outsb
jae
aam
adc
mov
pusha
lret
idivl
xchg
add
sbb
sub
or
pop
mov
iret
pop
mov
daa
out
mov
xor
and
fpatan
je
bound
inc
ja
insl
mov
mov
xor
jae
xor
or
idivb
pushf
fldcw
ds
sbb
dec
pushl
jb
jne
movsl
notl
mov
and
sub
mov
pop
mov
lret
mov
orb
jbe
loope
mov
aad
aad
iret
rorb
adc
add
dec
int
les
inc
fcoms
enter
js
inc
dec
fisttpll
or
enter
add
add
or
gs
in
pop
mov
xchg
in
xlat
mov
leave
imul
lcall
dec
sahf
std
cmp
push
addr16
aas
jle
sub
add
add
scas
call
xor
in
pop
inc
mov
add
xor
js
scas
xor
jge
xor
ja
xor
sti
testl
jmp
add
or
movsl
aas
sub
dec
out
sub
add
add
xlat
ljmp
jmp
mov
orl
push
in
outsl
mov
add
dec
jmp
inc
testl
mov
adc
int3
mov
jae
lcall
cmpsb
ss
adc
add
mov
mov
jb
push
loope
fcmove
repz
rorl
stc
inc
mov
add
cmp
push
lcall
inc
jmp
and
push
andl
incl
mov
add
jne
or
mov
add
jne
pop
ss
add
leave
xor
add
jg
push
jnp
inc
mov
daa
jne
stos
dec
lcall
fidivrl
out
jge
push
int
add
imul
cmp
and
add
ret
add
je
ret
ss
ret
daa
jne
aas
stc
ljmp
add
adc
ret
mov
orl
xchg
outsl
lock
in
inc
add
adcl
add
cmc
sub
adc
hlt
loop
cmp
or
gs
out
fildl
pop
jmp
sub
pshufw
gs
hlt
xor
fimull
test
lock
and
jns
jg
test
mov
mov
add
mov
add
jb
mov
or
xor
stc
lds
add
add
add
repz
fdiv
repz
cs
imul
add
out
xorl
lea
jbe
mov
lahf
inc
arpl
out
mov
adc
inc
mov
scas
jp
repnz
xchg
sub
cmp
fstpt
mov
cld
adc
outsl
test
fnstsw
add
cmp
or
movsb
sub
mov
or
add
cmp
cmc
les
in
mov
gs
bound
sub
pop
jmp
jle
pop
nop
in
inc
jmp
fldl2e
push
gs
xor
fs
gs
int3
jmp
and
cmc
mov
icebp
iret
cmc
mov
jl
iret
cmp
inc
jo
add
add
sbbb
xor
rolb
cmp
in
inc
mov
push
rcrl
sub
mov
add
lock
inc
and
outsb
add
jne
mov
bound
xor
sub
cmpsb
je
cs
add
cmpb
adc
inc
movsb
subb
add
jbe
lock
push
jg
and
std
jg
lock
sub
lcall
je
xor
mov
lcall
je
xor
cli
xor
inc
testl
xchg
add
xorb
call
add
gs
and
test
std
gs
sbb
add
add
fs
adcl
clc
idivb
out
add
inc
mov
pop
fmuls
xor
jae
popf
sbb
std
xchg
nop
fildl
add
add
sbb
test
call
cld
test
sbbl
push
int3
push
add
mov
push
push
or
repnz
add
sarl
xor
sti
cmp
pop
lcall
ja
jb
adc
js
xchg
push
cltd
outsl
fildl
js
ja
jp
lock
jmp
xchg
ja
add
repz
push
sub
dec
loopne
mov
outsl
lcall
jns
pop
ret
repz
add
add
not
js
sub
xchg
jnp
mov
or
and
xchg
jae
lock
adcb
or
daa
mov
inc
fcomip
add
cmp
xorl
pusha
std
pop
xor
icebp
fwait
mov
lahf
test
push
call
cltd
in
insl
fcomi
dec
stc
sub
mov
ja
ror
add
int3
out
xor
push
les
add
add
jns
ljmp
adc
and
aam
imul
out
add
add
repz
adc
fildl
push
inc
push
push
dec
cli
jne
fists
loope
add
jnp
inc
or
sbb
cmp
push
sub
call
add
jne
imul
cli
pop
cmc
jmp
flds
cmp
sub
sub
xor
xorb
stc
lea
sub
cmp
fsubl
jae
sub
xchg
lret
xchg
inc
add
lcall
in
into
loopne
in
push
adc
adc
or
push
stc
cld
inc
std
adc
add
mov
lahf
lock
inc
and
in
or
adc
xor
jno
adc
jmp
jne
adc
shr
rclb
sbb
xchg
int3
ja
addb
add
ret
jle
add
repz
fldt
xor
js
repz
ret
pop
push
repz
cltd
addr16
inc
mov
jo
jae
das
pushf
pusha
sarb
jmp
dec
push
cmp
jle
out
mov
aad
out
insb
aas
jnp
loop
mov
add
jle
fildl
sub
imul
std
xchg
push
ja
lcall
push
iret
outsl
push
mov
or
js
or
fildl
inc
adc
clc
ljmp
add
es
sbb
jbe
fmuls
call
cli
pop
xlat
out
dec
clc
outsb
jecxz
mov
add
mov
cmp
int
xor
xchg
mov
add
loope
jmp
aas
and
mov
mov
sub
xchg
xchg
ljmp
inc
pusha
dec
test
mov
jge
and
add
add
jg
jmp
add
imul
jne
inc
jmp
push
fdivl
stc
adcb
out
stc
jne
push
pcmpgtd
or
jmp
inc
cld
pop
gs
out
mov
fimuls
cmp
add
sarb
pop
pop
sbb
jle
xor
adc
mov
inc
push
aam
add
mov
das
inc
jnp
sbbb
addb
std
mov
decl
pop
std
decl
loop
imull
adc
or
sahf
or
jno
lds
jno
pop
push
push
pop
inc
mov
in
loopne
pop
dec
aad
add
mov
lock
les
jl
pop
adc
push
stc
xchg
pop
adc
mov
sbbl
push
mov
faddl
lret
jl
jnp
xchg
inc
aad
jne
insl
hlt
adc
cmp
jmp
push
xor
sbb
mov
push
mov
cmpsb
mov
mov
xor
add
add
mov
add
jp
comiss
add
mov
pop
icebp
jb
or
into
sbb
xor
jp
imull
inc
mov
call
adc
add
mov
nop
bound
jl
adc
dec
sub
inc
mov
pushf
lock
dec
jge
push
jb
jmp
xorb
lds
add
push
test
daa
cs
lret
or
pop
sbb
jp
test
out
jl
jmp
ss
push
sub
jo
aad
outsb
inc
or
pop
in
shrb
cli
mov
sbb
insl
in
adc
sbb
mov
scas
out
push
push
insb
aaa
inc
fisubrs
sbb
push
xor
jbe
imul
xor
test
push
or
adc
pop
pop
push
incl
je
or
pop
jle
aas
inc
push
incl
mov
push
fists
sbb
lock
lds
jbe
ss
sti
call
pop
jno
clc
lret
addr16
add
add
es
push
sub
cs
std
bnd
cs
je
mov
les
mov
xchg
jns
fisttpll
add
adc
les
in
push
jp
xor
es
mov
and
scas
rolb
pop
dec
pop
aad
sahf
aam
inc
pop
and
inc
add
movsb
std
jns
push
int3
pop
leave
test
int3
into
sbb
ror
mov
test
test
inc
or
adc
xchg
mov
jae
pop
jbe
loop
jecxz
jecxz
jae
mov
pop
adc
aas
ljmp
aaa
add
or
jo
mov
sub
aas
pminub
imul
add
add
stos
push
mov
stos
out
or
stos
dec
push
outsb
das
inc
xsavec
push
sbb
movsl
loope
in
fcompl
sub
int3
and
jmp
mov
repnz
repz
or
insl
ljmp
cmp
lret
ljmp
js
jne
mov
test
xchg
pusha
sti
ljmp
add
add
add
mov
js
adc
sub
add
in
scas
in
jns,pt
xor
rorb
jg
lock
dec
add
add
xor
bound
mov
mov
movsl
cmp
sub
aad
push
push
adc
jne
inc
mov
rcrw
cmp
gs
sub
adcb
mov
add
add
adc
jae
dec
je
lods
aaa
orl
je
repnz
insl
push
jb
add
jo
sub
add
mov
sti
decl
rclb
mov
shll
ja
divb
sub
jle
jb
testl
dec
div
jmp
outsl
inc
cmp
stos
inc
push
or
dec
add
ja
or
mov
mov
add
add
lret
scas
xchg
mov
add
cmc
int3
jg
int3
add
mov
int3
xor
jnp
push
cmp
lret
mov
or
lret
add
mov
fldt
mov
gs
or
mov
push
dec
psraw
sbb
cltd
std
lcall
push
aas
je
add
add
cmp
cwtl
xlat
call
adc
pop
or
subb
xor
arpl
imul
mov
jmp
pop
push
ret
mov
ss
push
outsl
or
rolb
inc
lret
in
adc
ljmp
in
lcall
push
imul
insb
and
std
add
add
imul
mov
ljmp
inc
ss
psrlq
sbb
fdivp
js
pop
mov
sbb
mov
orb
push
mov
mov
lds
sbb
mov
js
push
add
fiadds
xor
lods
cmp
sub
js
mov
js
fldl
mov
clc
inc
jno
xlat
mov
add
mov
xor
bound
mov
hlt
mov
sahf
loopne
ret
shll
imul
scas
push
sbb
sbb
js
push
add
xchg
xlat
fisttpl
mov
pop
mov
andl
jge
mov
inc
xlat
push
pop
cwtl
mov
xor
cmp
add
pop
int3
divl
push
add
popa
daa
dec
push
jnp
inc
add
push
insb
call
push
pop
fwait
add
jmp
sbb
clc
push
out
push
cli
jmp
add
icebp
add
aad
ret
pop
lods
lods
lods
push
push
jge
je
dec
jp
push
lock
mov
je
aam
add
addb
frstor
inc
pop
dec
lret
or
or
lea
mov
jg
jge
cmp
clc
mov
mov
popa
cs
adc
push
inc
cmp
cltd
ret
sbb
test
mov
sub
add
xor
add
push
dec
insb
imul
or
mov
mov
push
xor
add
lods
push
pop
insb
movsb
repz
dec
jbe
push
mov
inc
mov
ret
add
fucomi
push
les
xor
lret
xchg
cmp
repz
xchg
push
arpl
pop
lret
jno
add
repz
mov
shrb
arpl
ljmp
mov
lock
insb
xor
andb
sub
ljmp
add
add
jmp
xchg
sbb
inc
mov
ja
jnp
add
jnp
call
loopne
add
jmp
sub
mov
movsl
sbb
xor
addb
add
sbb
adc
pop
call
mov
mov
add
sub
jbe
mov
scas
jmp
xor
inc
xchg
mov
jmp
add
add
lahf
sub
push
pop
inc
gs
sub
andl
jecxz
sub
inc
push
test
sub
mov
xor
fisubrl
inc
pushw
dec
shld
push
cmpsl
push
addb
dec
pusha
call
add
add
out
add
mov
cmc
push
iret
dec
pop
fs
add
in
jg
cmp
clc
xor
xor
push
insb
call
out
jge
adc
clc
mov
lret
sub
gs
je
add
add
repnz
jo
adc
add
add
call
add
mov
pushf
je
add
push
dec
push
into
jno
sbb
test
stc
cmp
test
mov
js
xchg
and
test
ja
add
test
int
in
mov
data16
add
inc
ficoms
jge
repz
mov
aaa
shlb
fmul
mov
add
add
jmp
mov
mov
stos
cmp
insb
mov
add
sbb
cmp
je
or
repz
cmp
push
sub
add
lret
in
adc
inc
add
pop
inc
mov
pop
sub
add
inc
mov
es
add
xchg
enter
pop
out
fcmove
mov
subb
mov
mov
xchg
sub
add
mov
insb
mov
inc
push
insb
sti
pop
add
sbb
and
xor
pop
es
shrl
add
add
bound
inc
push
xchg
fsub
clc
xchg
add
adcl
pop
insl
imul
mov
int
lds
int
lds
arpl
sahf
add
clc
jmp
inc
pop
xorb
aad
jmp
popa
cmp
push
push
jo
xchg
push
fdivrp
pushl
add
jno
or
in
jl
xor
add
and
add
jecxz
lock
sub
pop
insb
dec
pop
cwtl
add
loopne
sub
or
shlb
dec
inc
sarb
inc
dec
lea
jge
std
jns
sub
jge
jecxz
mov
jmp
add
gs
ds
push
jle
inc
xor
jae
jg
sub
mov
pusha
ud2
push
inc
mov
lret
add
test
xchg
sub
or
idiv
xor
cli
sub
xor
add
or
add
adc
inc
sbb
and
add
xchg
add
push
es
mov
dec
jg
lret
aad
add
inc
dec
fdivr
mov
pushl
int
fs
add
adc
bound
pop
test
dec
lods
sub
adc
jg
cwtl
repz
mov
pop
xlat
mov
mov
add
add
add
xchg
rolb
mov
insb
cwtl
repz
in
xchg
popf
stos
sbb
jbe
cli
or
add
inc
mov
outsl
sbb
add
out
jmp
rorl
shr
imul
xor
clc
jno
sbb
repz
add
jmp
cltd
adc
adc
mov
call
mov
mov
in
jmp
xchg
jne
testl
shrb
and
mov
jp
icebp
or
add
pop
pop
mov
stos
or
js,pt
aas
xor
pop
aam
jl
cmp
adc
jmp
xchg
and
mov
xor
inc
lret
dec
sub
jp
adc
add
add
pop
pusha
lea
mov
add
jne
negl
lock
add
cmp
and
test
adc
add
jae
jl
mov
test
mov
clc
mov
push
out
mov
bound
add
mov
add
mov
movsb
cli
mov
jbe
adc
add
add
repnz
call
jbe
jnp
or
cmp
jle
mov
jl
lcall
faddl
fistl
cwtl
xchg
fiaddl
insl
inc
or
mov
adc
addl
decl
fildl
add
adc
add
add
movsb
adc
or
addl
test
mov
add
popa
data16
aad
push
fiaddl
or
aam
mov
roll
push
shrb
add
repnz
pop
xchg
inc
scas
jp
pop
inc
int3
jle
daa
test
pop
ljmp
cmp
jge
add
add
cmc
push
jl
xchg
fadds
mov
cwtl
repz
bswap
jl
movsb
cwtl
repz
add
outsb
mov
or
pop
jmp
add
repz
jnp
pop
arpl
mov
add
cld
pop
xor
psubsw
das
jle
dec
repnz
or
lret
lea
mov
sub
int
aaa
push
in
cmpsl
lods
fstpt
adc
js
cmp
inc
sub
into
push
stos
or
add
js
sub
nop
cmp
ljmp
add
enter
into
lods
dec
jmp
popa
or
cmpsl
scas
out
inc
mov
adc
aam
pusha
and
pop
pop
sbb
vzeroall
mov
int3
push
mov
int3
mov
dec
in
push
lret
stc
lret
dec
cmp
mov
adc
jno
dec
push
cmp
bnd
orl
repnz
lcall
add
pop
xorb
jno
sub
or
mov
or
dec
inc
xchg
jge
jno
add
rorl
ljmp
call
or
loop
stc
xchg
popf
daa
mov
push
pop
ror
jo
in
add
sub
sarb
sbb
sbb
mov
imul
fimull
add
cmp
xlat
add
sub
cwtl
add
dec
adc
add
hlt
push
pop
test
adc
cmp
pop
dec
pop
push
dec
or
hlt
xchg
dec
mov
ret
aam
fsub
js
mov
pop
jo
adc
push
xchg
jbe
push
cwtl
jo
sti
xor
push
xchg
dec
out
aaa
mov
xchg
int3
cmpsl
cs
sti
jmp
ret
imul
lock
scas
inc
iret
xor
xor
js
pop
mov
sti
mov
lret
pop
ljmp
sti
pusha
push
outsb
fistl
das
ret
lods
cld
sbb
int3
daa
sub
cli
jmp
mov
jne
mov
ds
xchg
mov
gs
add
sub
or
jb
sti
cmp
cli
mov
data16
add
sub
dec
ror
mov
cld
cmp
sbb
mov
mov
add
inc
add
push
push
int
pushf
inc
in
bound
push
pusha
shl
jo
call
sbb
add
stc
shll
or
movsl
incl
add
add
negb
pop
mov
pop
and
clc
mov
mov
mov
mov
ss
and
ss
repz
add
push
pop
inc
mov
testb
mov
dec
in
adc
cmp
add
stc
jne
dec
dec
and
add
mov
mov
sub
dec
adc
jg
ja
shll
sub
fs
fcomps
int3
les
dec
hlt
inc
or
mov
add
mov
push
inc
sub
add
inc
jb
int3
outsb
bound
or
loop
push
jno
xor
mov
cmp
mov
sub
adc
xchg
fisubrs
rol
add
mov
or
pop
dec
cmpsb
inc
xor
nop
shlb
add
add
add
add
testl
aam
std
push
jp
adc
push
aad
jmp
test
add
xchg
packsswb
xor
pop
sbb
xor
out
cmp
je
testl
mov
fisubs
jae
jb
daa
adc
xor
adc
repz
or
mov
add
sub
into
xchg
les
xchg
jl
jl
sti
out
fidivl
or
jmp
jle
clc
gs
repz
jmp
mov
andl
inc
or
out
add
or
jmp
pop
cmc
mov
jmp
fidivs
xchg
popa
cmp
jb
out
push
bound
add
add
outsl
ds
inc
repnz
jb
pop
mov
outsl
dec
jno
cmp
cs
stos
add
mov
adcl
jg
jg
clc
inc
stos
jb
add
repz
pusha
mov
cmc
mov
add
add
add
or
adc
xchg
or
jns
incb
scas
jle
loopne
aaa
sub
jg
cmp
fadds
cmp
in
ja
aam
add
sahf
cmc
pop
add
pop
add
mov
inc
sbb
sub
sbb
out
add
sbb
add
jae
add
and
and
sbb
clc
pushl
add
lods
cli
decl
fucomi
sbbl
add
test
ret
aam
lds
sti
cld
dec
jmp
add
adc
sbb
out
jg
ret
dec
push
add
cmc
test
test
inc
mov
adc
fiaddl
addl
or
or
xchg
fildl
mov
jecxz
mov
fsubrl
ret
test
add
add
sbb
or
cmp
test
jmp
xor
jp
add
adc
fildl
sub
scas
arpl
and
jns
adc
lods
sub
fstpt
ret
in
add
ficoml
jo
enter
movsl
jp
jmp
ss
js
mov
xor
cmpb
scas
pushf
imul
add
add
mov
jecxz
enter
aaa
jp
jmp
add
sti
push
inc
xchg
popf
add
pop
clc
jb
adc
mov
int3
or
les
jmp
das
insb
push
std
dec
into
or
js
int
daa
out
push
jmp
cmp
xchg
inc
jmp
pushl
sbb
les
add
xchg
mov
imul
dec
cmc
jmp
mov
pop
aaa
test
inc
jne
mov
mov
ljmp
mov
aaa
cli
jg
addr16
adc
add
pop
lds
mov
xchg
adc
mov
pop
add
sub
mov
orl
test
sbb
add
add
daa
dec
and
jge
fldt
sbb
out
cmc
jmp
neg
add
xchg
jp
cld
jecxz
jl
fdiv
add
gs
stc
dec
lret
roll
cmp
mov
sahf
jbe
ret
or
mov
add
fdivrl
mov
stc
mov
add
ret
dec
stos
inc
mov
aas
mov
dec
adc
add
add
ret
or
push
es
popa
jmp
cltd
sbb
mov
int3
xchg
inc
dec
sbb
out
icebp
int
add
mov
mov
add
fwait
sub
add
int3
adc
adc
loopne
dec
lret
or
out
std
mov
jb
inc
push
jo
dec
js
cmp
add
add
cmp
add
aaa
nop
imul
pop
jo
scas
add
or
push
xor
mov
mov
push
add
cmpsl
jecxz
mov
or
cli
add
imul
add
imul
add
repz
insb
adc
cld
or
fisttpll
add
add
mov
xchg
repz
xchg
inc
add
inc
cmpsl
jle
push
pop
mov
outsb
sub
mov
inc
incb
mov
mov
push
and
mov
int3
xlat
push
mov
mov
std
add
push
out
out
scas
jns
add
mov
jb
mov
jbe
icebp
pop
and
insl
cmp
jmp
dec
fisttpl
lods
mov
dec
mov
mov
mov
mov
add
repz
sbb
adc
fwait
repz
out
jbe
add
jl
arpl
jl
jne
add
mov
inc
add
adc
jo
hlt
fdivs
and
pop
fdivrs
daa
jo
aam
add
add
cs
cmp
shlb
test
int
pop
mov
inc
push
mov
je
imul
test
jecxz
add
outsl
out
dec
pop
push
clc
mov
sbb
dec
call
adc
mov
inc
movsb
mov
mov
cld
mov
cmpb
test
aad
mov
int3
add
jl
aas
and
add
add
or
add
sbb
mov
add
lds
add
xchg
adc
lcall
add
popf
cmpb
add
lret
and
aad
or
or
inc
testb
adc
test
test
mov
repnz
ds
dec
dec
cli
and
es
bound
push
repz
dec
xor
xchg
jno
cmpsl
mov
mov
and
inc
mov
jecxz
add
das
mov
and
mov
mov
leave
mov
andl
out
jmp
inc
stos
jbe
aaa
mov
add
hlt
icebp
add
repz
mov
insb
in
or
pushf
jmp
je
add
add
ljmp
scas
loope
or
add
or
scas
sahf
xchg
push
or
cld
ds
push
fdivr
pop
jbe
or
sub
sub
hlt
orl
je
mov
lret
add
jmp
arpl
push
loope
dec
jmp
or
stc
pusha
dec
fisttpl
add
out
add
mov
je
and
testb
dec
jmp
add
jle
add
jg
sbb
fadds
clc
stos
jle
mov
adc
arpl
enter
jmp
and
pusha
mov
dec
cmp
addb
cmp
push
lcall
xor
jne
das
testl
add
pop
add
call
incl
add
ds
add
or
loopne
add
into
add
xchg
sub
xchg
jg
test
and
mov
add
rcl
add
or
ljmp
add
mov
cld
mov
add
hlt
int
dec
ss
lret
mov
xchg
inc
push
clc
mov
cli
mov
fiaddl
leave
repnz
std
je
add
repnz
dec
push
jecxz
gs
xchg
ss
repz
stos
ret
in
jmp
add
mov
lea
out
rorb
mov
stos
xchg
pop
or
je
out
mov
jmp
aam
repz
inc
jb
mov
mov
jmp
stos
das
int3
dec
push
mov
jb
lahf
rcr
in
and
add
pop
mov
jbe
mov
jl
xchg
add
jnp
negl
outsl
lcall
dec
mov
fwait
test
into
outsb
les
mov
roll
fdivrp
jle
push
fdivrl
mov
test
mov
pop
insl
sti
icebp
add
dec
repnz
jmp
leave
jo
cmp
mov
sub
loop
inc
popa
dec
jo
adc
push
sub
add
jae
cwtl
mov
inc
rorl
outsb
push
insb
dec
hlt
js
stc
mov
xchg
inc
repz
pop
out
inc
clc
mov
cmc
sub
clc
inc
sbb
and
loopne
stos
repz
adc
add
or
or
call
jb
or
add
add
and
add
mov
sbb
cwtl
hlt
ja
and
add
mov
xchg
insb
mov
jge
xchg
sbb
mov
add
lahf
jle
sub
in
int3
test
push
aas
pop
lea
not
jne
clc
insb
int
sub
inc
in
decl
int3
add
adc
and
dec
adc
mov
dec
scas
std
clc
stos
cmpl
incl
jge
add
xlat
sub
jge
les
jge
leave
xor
adc
cmpsb
sub
adc
movsb
mov
inc
lret
inc
idivl
inc
lret
lock
and
inc
fwait
jl
repz
xor
out
pminsw
mov
bound
out
or
int3
inc
mov
mov
xor
sub
cld
popf
add
decb
push
mov
daa
insl
lea
jmp
dec
mov
repz
cmp
mov
mov
icebp
ss
insb
dec
jmp
inc
mov
add
dec
shl
repz
adc
pop
ljmp
or
repz
pop
mov
lcall
ret
bound
lret
or
daa
mov
sub
mov
lea
repz
pop
mov
and
outsb
lcall
mov
call
sub
add
imul
jno
roll
add
jb
or
aad
orb
ret
imul
ja
jne
xor
xadd
mov
dec
push
inc
addb
repz
jecxz
imul
repz
sub
fwait
mov
add
add
or
call
xor
inc
loopne
or
lret
divb
adc
xor
mov
push
cwtl
and
push
dec
or
mov
ja
or
jl
sahf
mov
in
pusha
mov
in
sahf
xchg
mov
or
setne
cmp
fdivr
xor
in
aad
lds
sbb
pushf
add
hlt
sahf
mov
cmpsb
adc
inc
fmull
lret
push
cmpl
shrl
pop
repz
jle
jbe
or
mov
jl
cmpsl
sub
push
mov
inc
adc
out
sub
scas
ljmp
add
and
jle
or
iret
lods
xchg
cli
ljmp
stos
and
add
add
mov
movsb
arpl
std
or
mov
out
subl
dec
cmpsl
cmpsl
inc
cmpsb
bnd
sbb
mov
es
mov
add
mov
jbe
mov
adc
ljmp
clc
pushf
sbb
and
cmpsb
mov
and
imul
push
pop
fldt
jl
xor
xchg
imul
repz
or
jl
sbb
pop
mov
push
xor
repnz
mov
data16
adc
mov
clc
jmp
sbb
adcl
cmp
test
repz
adc
out
icebp
add
add
add
inc
lea
push
push
mov
cli
add
and
inc
repz
add
add
ja
sbb
repz
cli
andl
mov
repz
in
je
jecxz
roll
repz
xor
hlt
push
adcl
idiv
mov
scas
jge
mov
push
lcall
add
out
xchg
or
dec
xchg
mov
jne
sahf
xor
inc
mov
or
gs
frstor
call
mov
leave
or
sti
xchg
or
push
adc
cld
xchg
pop
popa
add
roll
xchg
cmpsl
stc
repz
or
mov
aaa
push
adc
roll
add
or
pushf
add
mov
jecxz
add
mov
dec
aas
jae
adc
les
jl
mov
pop
scas
imul
repz
xchg
gs
scas
shrl
arpl
mov
imul
repnz
scas
ljmp
jl
stos
rcl
sub
je
mov
fstpt
daa
add
add
cmp
mov
add
imul
mov
ret
in
cli
pusha
aas
mov
ja
or
mov
mov
push
jmp
and
frstor
stos
outsb
aam
adc
in
test
add
test
mov
std
pusha
outsl
arpl
loope
in
sub
sti
pop
lahf
dec
scas
rcll
and
mov
jmp
gs
add
add
cli
scas
jmp
mov
aad
dec
scas
inc
ljmp
fucom
jg
add
pop
lods
clc
jmp
pushf
xchg
test
xchg
push
les
and
test
out
inc
mov
mov
or
cs
je
or
test
mov
pop
lock
insb
rolb
mov
add
fisubrs
subb
in
push
dec
inc
cmpsl
mov
or
add
lock
daa
lock
je
push
add
pop
cli
cld
scas
add
jecxz
add
xchg
repz
sti
ss
jp
flds
cmp
cld
out
xchg
add
test
dec
push
pop
add
mov
add
stc
ret
jns
cmpsb
pushf
add
mov
js
mov
dec
push
push
mov
ret
push
clc
mov
out
ret
test
popf
add
sub
lods
dec
imul
xchg
call
pop
add
adc
add
add
add
add
cmc
jmp
cmp
xor
jg
jnp
mov
fstpt
xor
imul
repz
jg
imul
add
cmpsl
arpl
ret
rcll
ljmp
jl
stos
rcl
sub
je
mov
fstpt
daa
xor
add
add
pop
sbb
or
add
cli
jo
fdivrp
add
jb,pn
add
xchg
push
jmp
inc
fnsave
cmpsl
data16
aaa
ds
test
add
daa
mov
std
jo
arpl
adc
in
test
cld
pop
aas
inc
cmpsl
rol
es
push
cmpsl
add
in
add
mov
scas
jmp
mov
add
iret
cmp
dec
jge
inc
ljmp
fucom
mov
test
jmp
pop
popl
movb
add
mov
push
mov
jne
inc
mov
and
add
dec
or
mov
mov
mov
mov
or
push
add
fisubrs
add
dec
in
xor
psubsb
or
mov
shlb
hlt
fistps
hlt
add
jb
adc
out
sub
dec
pop
repz
xor
jge
fldt
shll
jae
mov
stc
sbbl
add
test
std
clc
aas
sahf
jl
mov
mov
int3
xor
adc
xor
add
mov
ret
decl
in
and
adc
jb
add
or
lods
add
popf
jnp
push
cmp
adc
inc
xor
dec
and
hlt
xchg
push
shlb
sbb
mov
punpckhwd
sub
mov
rol
getsec
into
add
fisubl
fwait
xchg
out
scas
mov
movsl
scas
or
xor
mov
test
jns
test
pushf
addr16
and
jl
lahf
arpl
lcall
jl
lahf
ret
mov
rol
sarl
ret
xor
ficoml
add
lcall
pop
jns
add
xor
xorb
cmp
add
add
jl
lods
add
in
xor
testb
add
mov
add
movsb
clc
jmp
hlt
jno
call
add
sub
inc
ficoms
mov
cmc
mov
add
sahf
cmpsb
clc
jmp
sahf
jno
jmp
scas
push
pop
insb
push
add
cmpsl
add
std
xor
jmp
es
bound
add
add
loope
or
add
or
ds
arpl
icebp
add
hlt
testl
scas
insl
sub
clc
push
sub
inc
inc
je
mov
cmp
mov
dec
or
stc
mov
jp
mov
inc
lock
loopne
loopne
adc
add
imul
fdivs
add
jae
mov
jnp
mov
cmp
cs
cmp
add
es
inc
mov
cltd
push
jns
lock
dec
xchg
or
mov
in
orl
add
dec
adc
jge
js
mov
loop
ja
add
push
and
mov
mov
add
push
add
fmuls
mov
insl
aam
inc
sbb
incb
sbb
add
mov
add
add
mov
jne
mov
push
lds
add
iret
repz
mov
mov
xchg
outsb
popf
xchg
add
insl
mov
add
fimuls
fistl
add
add
add
in
jmp
lret
mov
jmp
mov
out
push
dec
mov
fbld
rdtsc
ret
out
bound
insb
fimull
jp
sbb
pop
and
add
inc
loop
sbb
or
push
xor
cli
push
xchg
and
xchg
add
xchg
and
lea
and
ret
mov
xchg
mov
inc
call
pop
shr
repz
lret
dec
mov
mov
push
sub
js
cmp
xor
popa
dec
xchg
sub
stc
mov
or
outsb
xor
xor
es
add
cmp
js
loope
scas
push
sbb
mov
mov
mov
xchg
lret
cmp
add
add
mov
pushf
lahf
jg
and
sbb
je
sub
or
arpl
add
insb
cmp
add
cmc
add
sub
inc
sbbl
xchg
popa
testb
jbe
xor
add
mov
push
cmp
add
add
and
out
jns
je
ja
or
or
mov
test
movsb
jns
incb
add
add
push
pop
pop
or
jle
jbe
or
sub
fstps
xor
mov
mov
test
mov
cmp
cmp
cmp
dec
in
cmp
jp
cmp
imul
cmp
insl
jmp
mov
cmp
in
mov
cmp
fwait
call
cmp
aas
call
cmp
adc
cmp
mul
cmp
add
add
pop
repnz
int
cmp
cmp
cmp
lock
out
sarb
or
cmp
and
fidivrl
int
cmp
xchg
iret
cmp
lahf
iret
cmp
repz
repz
mov
repz
scas
repz
lock
repz
sahf
repz
lock
sub
rorb
mov
es
arpl
cmpb
popa
push
decl
mov
aad
decb
dec
out
les
mov
sahf
mov
cs
mov
lret
bound
inc
pushf
sahf
mov
xor
jmp
ret
sbbl
mov
lds
dec
scas
lds
push
bound
adc
add
rcrb
push
add
xlat
xor
mov
pop
pop
mov
mov
pop
sub
or
inc
or
jb
cmp
mov
mov
mov
cli
xor
jb
inc
shrb
sahf
out
pushf
mov
pop
mov
add
orb
fdivrl
les
add
add
push
cld
clc
sub
pop
xor
or
fidivrs
mov
imul
roll
icebp
add
js
in
jo
ret
imul
lock
mov
insb
inc
cld
cwtl
adcb
jl
add
icebp
call
mov
jge
out
rolb
push
jge
call
push
add
add
push
or
leave
jne
jne
xchg
xchg
fisubl
dec
pop
add
addl
movsb
cli
je
xchg
jge
xchg
jg
fistpll
inc
or
jns
xchg
leave
mov
gs
mov
mov
jg
in
or
pop
dec
pop
pop
mov
xorps
inc
out
mov
mov
push
cli
fstpl
xchg
or
incl
jne
adc
mov
mov
push
push
or
mov
or
fwait
test
orl
cmp
fcomps
fimuls
cmc
ljmp
std
xchg
cli
push
push
jno
adc
mov
rorb
push
or
mov
or
xchg
out
xor
push
xchg
cltd
stos
lods
cltd
negl
cld
stos
mov
ja
push
subb
ja
sbb
add
leave
jb
xchg
lcall
jbe
sbb
outsb
ds
mov
pushf
test
lret
test
add
sub
jne
hlt
pop
insl
inc
gs
loop
adc
arpl
and
xchg
lcall
movsb
or
into
mov
pop
jo
cmp
mov
xchg
push
add
fcmovnb
add
cmc
add
insb
ss
pushl
xlat
jge
jbe
stos
stos
stos
push
inc
mov
jmp
push
clc
add
xor
ficoms
scas
cmp
arpl
jg
fldt
stos
call
add
mov
add
pop
cmc
mov
jge
imulb
inc
add
addr16
subl
aam
mov
addl
add
in
out
insl
xchg
or
insl
adcb
hlt
adc
pushf
test
mov
jmp
mov
add
inc
add
push
sbb
movb
add
jle
add
xchg
iret
lea
movsl
or
adc
test
and
mov
mov
incl
add
add
enter
xchg
iret
jl
mov
bnd
cli
mov
mov
popa
inc
fisubrl
mov
out
xor
push
mov
pop
ret
sub
push
or
lcall
fsubrp
fldl
mov
or
es
mov
adc
repz
xchg
jo
adc
push
cwtl
pop
xor
xor
add
add
inc
jae
subb
push
inc
fidivs
ret
lcall
cwtl
or
dec
or
icebp
xor
jmp
mov
adcl
insb
out
mov
and
in
cltd
ljmp
or
cmovae
pop
mov
loope,pt
xor
out
into
test
inc
lahf
cmp
add
add
in
adc
pushf
clc
bound
pushf
push
push
push
fadds
lret
xor
sbb
jb
cmp
sbb
xchg
addl
pop
jae
dec
mov
sub
add
gs
jmp
bnd
mov
add
call
pusha
push
or
pop
sub
fnstcw
out
mov
push
mov
xor
or
push
sbbb
push
loopne
popa
jb
inc
out
sti
int3
jg
add
jg
inc
imul
icebp
add
lret
add
inc
lock
jae
mov
test
add
xor
cmp
pushl
icebp
sub
add
icebp
jge
mov
adc
jl
mov
and
xor
adc
test
mov
and
hlt
or
cld
add
mov
outsb
jl
clc
xor
adc
xchg
mov
shl
push
cmpsb
mov
adc
loopne
rcrb
add
jp
icebp
mov
outsb
fwait
cmc
add
jae
clc
jmp
cmc
mov
mov
popa
mov
flds
iret
or
aad
sub
and
mov
mov
push
jle
sub
lods
push
out
xor
mov
xor
shrb
fsubrs
push
cmp
xchg
or
decb
xlat
icebp
xor
imul
xorb
scas
in
dec
or
pop
loop
mov
loopne
lret
lahf
cmpl
xchg
stos
popa
dec
ljmpw
out
push
cmp
test
jb
push
int
mov
sbb
mov
out
push
movsb
in
js
push
lea
shl
add
jns
icebp
repz
mov
inc
repz
out
sub
lea
es
mov
push
add
add
idivl
mov
iret
clc
mov
cmpsb
add
jmp
push
idivl
mov
lahf
clc
mov
sub
sti
jge
sti
mov
add
lret
aam
mov
mov
mov
test
cmp
push
test
jle
mov
jns
add
mov
test
arpl
jmp
hlt
add
jp
std
je
jle
adcl
fdiv
enter
outsb
sbb
cmc
jne
fistpll
nopl
inc
adc
adc
mov
outsb
xor
les
les
rorl
mov
jmp
add
je
mov
test
pop
xor
outsb
test
lock
in
add
hlt
dec
aam
adc
lcall
jp
mov
and
sahf
sbb
gs
test
mov
flds
add
adc
push
sti
jl
jns
roll
add
lret
repnz
xchg
cmpsb
jne
add
jge
jge
or
pop
add
icebp
ret
in
pop
mov
jl
repz
jp
sub
mov
mov
ds
cmpsb
mov
es
pop
mov
les
ss
push
push
mov
insl
mov
mov
jl
sub
dec
inc
jl
das
jg
scas
jl
ret
scas
xor
and
ljmp
push
fldl
ss
xor
cmp
jnp
lcall
mov
sbb
add
add
push
and
data16
cmpsb
adc
cmp
push
decb
test
add
and
mov
clc
push
clc
jge
jb
xorl
jnp
push
mov
aas
stc
jo
jmp
push
idivl
adcb
cmp
jns
add
add
clc
push
idivl
xchg
nop
xorl
and
xchg
add
std
test
out
subb
jle
mov
mov
xchg
std
jl
mov
jge
sbb
stc
mov
mov
add
mov
jge
lret
stc
clc
mov
mov
add
cli
mov
add
add
jle
dec
lahf
cmove
push
cmpb
dec
clc
jl
jbe
mov
shll
ljmp
lret
hlt
out
push
mov
jge
sbb
movsb
mov
movsb
xchg
or
orl
jge
inc
jp
mov
add
stc
or
orl
jge
jbe
inc
jp
xor
add
add
add
or
inc
es
dec
dec
jns
mov
movb
lret
jge
aad
inc
lcall
call
or
or
roll
enter
mov
xchg
jo
pop
or
jle
sbb
ret
bound
arpl
pop
or
js
popa
push
xor
push
add
gs
jbe
add
jbe
pop
push
js
notl
or
push
add
push
or
cmp
arpl
mov
pushf
mov
outsl
push
repz
add
xchg
mov
in
add
add
or
fs
insl
push
jmp
push
mov
push
adc
decb
jbe
mov
and
xchg
xchg
and
es
ss
or
orb
mov
aam
mov
test
sbb
ret
mov
mov
mov
leave
loop
add
add
push
fxch
ror
mov
int3
add
push
iret
mov
or
ret
hlt
mov
jae
nopl
pushl
rorl
xchg
idiv
arpl
in
je
or
call
inc
xor
testb
out
cltd
jne
mov
shll
inc
cld
or
jge
mov
jno
mov
and
add
mov
jge
dec
mov
pushl
insl
add
jle
mov
lret
mov
mov
mov
adc
jle
lcall
jae
sbb
repnz
pop
sub
lret
xchg
stc
gs
roll
adc
add
jp
call
add
xor
jb
add
pusha
dec
add
xchg
sbb
mov
xchg
ja
sahf
pushf
jne
push
lahf
cwtl
jae
sbb
icebp
test
push
out
jne
repnz
xchg
stc
push
mov
adc
jge
lret
inc
mov
fsts
das
push
xor
xor
mov
pushf
cmc
jl
mov
pop
sbb
cmp
jb
incb
mov
or
arpl
push
jl
mov
das
repnz
xchg
int3
enter
mov
lods
out
push
repz
add
jnp
fists
fcomi
push
push
or
xchg
jmp
add
add
out
lods
or
and
stos
lret
add
push
scas
or
push
mov
mov
andl
adc
or
rorl
in
mov
mov
mov
cmc
lods
or
sahf
movsb
jo
xor
xchg
push
stos
or
or
jge
mov
and
psubsw
cwtl
sahf
jb
idivl
lcall
add
adc
cmp
dec
mov
mov
lahf
dec
dec
or
mov
cmpsb
jge
ret
or
or
or
or
or
rcrl
or
movsl
in
decl
and
or
push
call
loop
lea
test
mov
jge
and
add
add
add
in
add
sahf
sbb
add
repnz
lea
pushf
xor
int3
add
pop
lds
add
pusha
add
mov
test
test
jge
mov
les
cmp
jnp
cmp
ret
inc
mov
int3
push
enter
adc
or
inc
or
dec
push
pop
add
adc
sbb
int3
testb
adc
jle
inc
mov
jns
jb
jns
outsb
sbb
jae
movd
jb
mov
mov
or
adc
jns
add
push
test
test
sub
mov
push
mov
jmp
add
repz
jbe
loop
add
test
sub
push
cs
inc
add
repz
fdivp
insb
jne
repz
orl
xchg
lock
test
addb
mov
adc
sbb
push
or
out
add
cmp
xchg
mov
xchg
or
bound
add
in
push
mov
mov
mov
add
aaa
adc
in
add
and
xor
icebp
loopne
jmp
adc
cs
xor
push
bound
jge
lods
xorb
xchg
add
xchg
lods
in
orl
sti
insb
add
xchg
fs
cld
jae
inc
xor
add
add
cli
subl
jne
inc
jb
xor
lock
push
jbe
sbbl
jne
xchg
jb
xor
cld
push
cmp
cli
subl
rcrb
jne
movsb
adc
test
mov
jb
add
inc
cld
scas
in
rcrb
incb
in
cli
jmp
inc
cld
mov
call
or
orl
jl
adc
sti
pop
cmp
stc
cmc
adc
incl
int
popw
psrlw
adc
aas
js
sbb
add
mov
repnz
xchg
stc
add
adc
sti
cmp
imul
cmpb
jg
testb
add
and
mull
sbb
pop
shlb
dec
xchg
add
hlt
jmp
inc
addb
sar
ja
pop
cmp
lea
out
add
sub
mov
out
jb
loope
inc
adcl
cli
inc
xchg
jno
add
repz
ja
inc
add
repz
mov
inc
popa
andl
insb
mov
in
xlat
addb
rolb
imulb
arpl
in
pop
test
in
dec
push
loope,pt
fildl
das
pop
jbe
xchg
pop
nop
clc
jbe
mov
arpl
pop
add
pop
jp
movsb
lea
stc
mov
repz
jle
aad
mov
subl
shr
add
mov
push
sub
pusha
popl
pop
jb
sbb
sub
push
popl
mov
leave
ret
push
jae
xchg
push
add
in
push
fadds
add
sub
lcall
pop
ret
das
push
xchg
jecxz
pushf
or
stc
pop
cwtl
or
ret
inc
mov
sub
xor
xor
or
xor
mov
add
test
cmp
mov
cmp
jnp
mov
outsl
dec
adc
imul
jo
jo
movsl
repz
jno
loope
jb
repz
mov
add
test
or
adc
mov
movups
mov
mov
orb
adc
addb
dec
add
pop
int3
out
push
pop
nop
cmp
pop
orl
decl
mov
mov
jns
rolb
add
cmp
adcb
jmp
or
inc
call
sbb
push
pcmpgtd
mov
bound
jae
push
hlt
jmp
push
cmpsl
mov
cmp
pop
cmp
jge
mov
test
mov
or
sti
lock
push
xchg
in
mov
lods
ljmp
jnp
or
xchg
ljmp
cs
xchg
outsl
add
std
je
stc
icebp
sub
loope,pt
mov
fmull
stc
adc
push
repz
mov
jbe
sarl
mov
shl
call
push
jne
jns
xor
dec
in
dec
sbb
xchg
cli
rorl
add
or
add
add
icebp
pusha
or
ja
repz
mov
in
jb
repz
push
jle
mov
in
xchg
add
or
or
add
aad
je
sbb
cmp
lret
rolb
insb
inc
add
movsl
add
pop
out
dec
inc
outsl
or
jb
imul
lods
push
jge
add
add
mov
mov
add
lds
add
push
jge
repz
jle
jp
loop
or
aad
idivl
out
jnp
jo
adc
in
push
xchg
jge
ja
dec
pop
cmp
ret
pop
pop
mov
fnstcw
or
jnp
add
fnstcw
dec
inc
inc
int3
inc
dec
inc
int3
ds
in
mov
jge
adcl
pop
dec
xchg
push
out
clc
call
add
add
xor
push
mov
push
ficompl
iret
ds
add
add
or
add
mov
add
mov
aaa
dec
push
cmp
mov
and
stc
lahf
add
mov
push
xorb
test
add
mov
jmp
incl
lcall
mov
lret
jge
ljmp
repz
xchg
sbb
add
insb
stos
fucom
mov
add
scas
dec
inc
test
dec
ds
lea
jae
or
and
aad
jmp
jo
jns
jne
insl
movsl
or
xchg
jg
jns
add
add
and
or
js
inc
mov
test
xor
rorb
jl
xchg
add
adc
add
mov
out
push
mov
ret
jo
int
outsl
mov
clc
mov
or
jp
scas
hlt
fwait
add
mov
call
push
fistpll
and
outsb
jle
cmpb
les
je
jg
pop
jb
jbe
bound
and
pop
out
jne
mov
and
sti
stc
lea
adc
ds
decl
jne
cmpsl
clc
shlb
lcall
cmp
push
call
decl
lcall
in
cmp
mov
add
sub
mov
add
add
sar
cld
insb
dec
lock
stc
call
mov
std
test
xor
fdivr
jge
inc
stc
ljmp
call
insb
call
orl
add
sub
mov
nop/reserved
mov
ficomps
mov
lds
jne
mov
add
add
mov
stc
jge
mov
bound
add
dec
call
test
lock
stc
inc
psrlw
fcoms
mov
xor
outsl
call
or
orb
jge
insl
mov
mov
sub
std
outsb
jae
adc
sti
mov
insb
xor
jne
lock
mov
adc
in
in
cmc
jne
jbe
jo
ja
add
add
jne
nop
jbe,pn
jbe
push
packssdw
out
lret
orb
sub
out
fisubrl
and
xlat
xchg
adc
arpl
inc
xchg
lock
jb
jne
aaa
out
je
jne
xchg
sub
rorb
push
jbe
jne
mov
bound
leave
push
add
add
or
add
fst
mov
lret
push
adc
dec
pop
jp
lahf
mov
jns
ss
insl
jbe
es
xor
mov
mov
ljmp
testl
pop
imul
out
scas
std
arpl
incl
push
jp
fs
clc
movb
sbb
jp
and
add
add
jge
xor
push
jle
aas
stc
pushl
in
je
call
sbbl
jne
xor
test
stc
lea
cld
inc
lea
add
pushl
ljmp
shlb
ljmp
movsl
cld
out
sti
push
mov
aam
incl
stc
mov
sbb
jmp
xor
add
add
call
loopne
cld
test
insb
cmc
cmp
jge
imull
sarb
adc
jmp
insb
push
cmp
mov
add
xchg
icebp
out
jle
cmpsl
xchg
std
jmp
jae
in
out
sti
cmp
xor
shll
or
shrl
js
mov
leave
sti
pop
in
and
adc
add
add
adc
xchg
rcrl
xchg
jae
jge
aaa
out
popa
jg
xchg
inc
je
fnsave
stc
adc
jno
psubb
dec
out
xor
mov
xchg
mov
orb
jl
repz
pop
pop
pop
xchg
aaa
out
lret
xchg
jno
cwtl
data16
jb
mov
jb
jno
mov
dec
jb
add
add
cmp
shlb
jno
je
add
test
in
ss
inc
idivl
gs
xchg
jno
jle
add
jno
les
jno
jne
sti
rcl
sbb
mov
sbb
stc
jecxz
jno
sbb
add
xchg
add
mov
mov
clc
xchg
xchg
test
fwait
push
insb
fisubrl
jle
movsb
popa
jbe
push
sbb
js
inc
pop
add
pusha
jo
xor
cmp
cmpb
jmp
cmp
xor
pop
sahf
adc
clc
push
mov
ja
lods
inc
aas
lds
lret
pushf
negb
std
lds
and
out
ds
add
mov
daa
out
mov
jg
out
inc
or
hlt
mov
lret
jp
cld
loop
les
inc
pop
mov
inc
mov
repz
dec
or
repz
cmp
mov
pop
mov
xor
int3
outsl
xor
int3
push
out
in
sub
test
jge
pop
popa
clc
add
jae
insb
push
adc
fistpll
xor
dec
sbb
inc
adc
mov
mov
clc
ja
cmp
dec
adc
pop
dec
popa
add
ds
inc
int3
push
test
inc
int3
inc
xor
icebp
add
jne
jnp
push
movl
adc
adc
pop
adcl
push
add
rcl
xchg
pop
and
add
push
into
out
add
decl
jo
seta
bound
dec
or
repz
mov
iret
into
push
pop
and
fmull
jmp
outsl
cltd
mov
ret
jmp
dec
sahf
mov
add
repz
sbb
insb
sub
shlb
add
add
popa
mov
add
pop
imul
jmp
dec
lret
jo
pop
jl
out
andb
mov
repnz
sbb
mov
repz
or
stos
and
insl
jecxz
std
iret
aaa
or
jmp
jo
cmp
or
add
sar
mov
es
add
mov
add
jl
jmp
mov
loopne
or
sub
jmp
cli
addl
insb
clc
jmp
mov
jmp
mov
add
mov
jge
repz
fmull
int
cs
bound
add
mov
xchg
add
sbb
push
repz
add
xchg
enter
arpl
in
call
add
add
mov
add
dec
dec
jo
jg
out
out
add
mov
in
add
and
or
dec
sub
sbb
add
and
add
push
out
jg
mov
nop
pushf
jecxz
add
adc
add
pop
jmp
add
out
jge
add
cmp
add
mov
mov
xchg
faddl
add
add
sbb
or
adc
jnp
push
add
rcl
in
pop
add
cltd
pushf
int3
test
aas
adc
frstor
mov
daa
sarl
mov
jne
mov
leave
pop
xchg
sbb
xchg
jns
xchg
outsb
push
add
sbb
repnz
fucom
insb
xor
inc
push
inc
cmp
mov
sar
mov
rclb
inc
test
dec
pop
jg
xchg
repz
leave
mov
test
aaa
push
cmp
cmp
cmp
aaa
xchg
jle
jle
testl
repz
add
repz
push
xor
cmpsb
aaa
ds
adc
jg
sti
cmpsb
add
dec
cmpsl
add
add
add
push
jmp
lret
add
xor
add
lcall
add
repz
add
imul
aas
dec
out
insb
fisttps
clc
jmp
test
add
push
test
sub
repz
leave
xor
jmp
repz
aaa
lds
into
je
push
jbe
test
dec
icebp
xor
lea
icebp
push
idivl
cmc
cld
dec
mov
outsb
mov
pop
mov
bswap
cmpsl
lds
xchg
aaa
lds
out
add
inc
push
out
push
out
mov
loopne
cld
mov
call
mov
pusha
jne
addr16
add
insb
out
cld
out
insb
sbb
cmp
push
add
push
hlt
xchg
out
lock
inc
dec
push
pop
stc
and
jae
jge
pop
pop
stc
in
cmp
push
xor
int3
fistps
pop
vshufps
push
mov
jae
xor
je
out
test
pop
sbb
lea
rclb
mov
imul
push
sbb
shld
push
dec
pop
jge
insb
xchg
sub
loop
add
cwtl
pusha
pop
adc
mov
int3
sbb
int3
push
mov
mov
or
repnz
xchg
icebp
and
or
push
decl
imul
or
mov
incl
popf
repnz
push
cmp
add
lret
add
add
add
sbb
adc
mov
mov
aaa
mov
scas
jb
cld
pop
jp
negl
aaa
adc
imul
sub
lock
jp
sub
flds
mov
jmp
xchg
mov
jl
imul
loopne
jnp
push
cld
ret
inc
gs
dec
pop
jl
add
jb
cmpsw
cmp
add
push
add
jp
addr16
push
push
sub
aaa
ss
aaa
mov
add
push
dec
xor
or
clc
fs
filds
bound
dec
add
out
xor
repz
xor
mov
adc
fistps
mov
dec
add
cmp
jnp
add
add
add
push
mul
add
sti
dec
mov
mov
enter
ret
cli
leave
leave
push
stos
bound
lds
push
dec
push
xchg
call
jle
cli
decl
loopne
imul
out
inc
add
xlat
push
push
iret
adc
addr16
mov
pop
ret
jmp
mov
pop
jne
inc
in
je
jmp
add
mov
int3
ja
add
add
sub
int3
ds
mov
push
xor
sar
clc
and
push
mov
push
push
inc
xor
inc
adc
xor
adc
jl
clc
jae
pusha
push
pusha
out
roll
add
repz
add
pop
xor
movb
int3
xchg
xor
into
into
adcl
add
add
and
or
repnz
fdivrs
mov
sbb
jae
xor
or
outsb
jle
push
add
xor
add
mov
xlat
and
popf
add
add
mov
add
jns
xchg
dec
add
adc
movsb
adc
repz
cwtl
repz
push
mov
das
cmpsb
push
into
das
adc
je
pop
ljmp
outsb
outsb
xchg
push
out
jmp
mov
add
jb
add
rep
sbb
test
in
repz
push
mov
lcall
sbbb
in
fdivrs
dec
or
cmpsl
jb
xchg
jmp
add
stc
xor
sub
outsb
outsb
mov
js
lods
js
or
push
repz
into
in
bound
pop
mov
mov
xchg
out
adc
add
mov
mov
testb
add
push
cmc
mov
mov
mov
mov
js
sub
xchg
repz
int3
jbe
or
cld
lods
or
mov
add
jg
inc
xchg
repz
pushl
xor
das
lds
ffreep
int3
out
ret
int3
jbe
in
iret
movd
cmpsl
jge
js
add
push
fmull
jbe
jge
jmp
jge
mov
rorb
outsb
mov
leave
sub
or
add
add
out
add
sub
or
out
add
cli
outsl
inc
or
jg
xor
add
fisubrl
or
jg
sti
out
add
call
hlt
jge
mov
dec
or
mov
dec
add
sbb
mov
rcl
sti
adc
push
jg
aas
decl
dec
add
loope
add
add
add
and
dec
dec
and
push
scas
loop
out
sbb
repz
mov
mov
test
dec
gs
jp
cwtl
test
adc
insl
mov
insb
jns
rcl
jecxz
cmc
jg
sahf
popa
add
cltd
pop
sbb
into
push
test
jno
mov
push
jae
sti
out
xchg
and
repnz
psllq
jmp
add
add
add
mov
mov
cmp
js
decl
scas
fcomi
jns
cwtl
repz
jb
pop
mov
jo
outsl
pop
push
xchg
ja
add
repz
mov
pop
dec
aad
mov
mov
pop
js
pop
jecxz
mov
clc
nop
es
ljmp
stos
jg
pushf
repz
call
ljmp
mov
out
in
add
xchg
xor
add
or
insb
mov
scas
jb
pop
jle
xor
in
scas
out
fs
out
fimull
push
adc
pushf
jmp
mov
loopne
in
push
loop
and
push
js
jge
jne
mov
jb
sub
mov
jbe
add
cld
bound
add
add
or
jbe
dec
pop
mov
ja
clc
xchg
add
add
lds
pop
imul
jae
test
in
adcl
jecxz
xchg
je
dec
mov
mov
xlat
ret
int3
out
int3
outsb
push
addl
push
mov
out
mov
loope
mov
add
jg
push
insb
aas
pop
inc
add
repz
add
cmp
add
es
cmc
mov
mov
cmp
nop
add
mov
imul
les
mov
mov
adc
xor
xor
iret
or
fidivrs
dec
add
pop
iret
inc
je
add
notl
aad
add
or
sub
add
pop
aad
test
nop
dec
add
test
push
or
js
inc
ret
jae
xchg
mov
mov
outsb
mov
or
pop
fwait
push
in
jecxz
decl
hlt
push
jno
push
into
jns
imul
sub
dec
sub
dec
shll
mov
add
pop
inc
aaa
sbb
pop
mov
mov
repnz
sar
jmp
roll
repz
rcr
jmp
or
and
add
insb
in
push
add
pop
ljmp
ljmp
insb
lods
pop
add
hlt
repnz
or
fsubr
jl
mov
add
sbb
pop
sub
add
add
add
sbb
add
xchg
psubsw
repz
andl
inc
mov
mov
xchg
or
add
cltd
push
fistpl
jb
push
mov
pop
inc
fstl
pop
clc
jb
add
adc
testl
add
add
add
add
js
jmp
pop
mov
dec
imul
adc
jae
je
mov
mov
cmc
xchg
push
decl
and
mov
cmpsb
push
stc
decl
add
cmc
xor
fdivrs
jne
jmp
stos
jecxz
add
inc
imul
mov
add
mov
mov
cmp
mov
mov
adc
test
jecxz
jecxz
push
je
xchg
dec
add
ficoml
xorb
add
adc
test
out
add
in
adc
mov
repz
cmp
fimull
jnp
dec
mov
lods
jge
test
add
add
lcall
add
pop
bound
rcrb
pop
fs
mov
fs
fs
test
push
repnz
mov
repnz
or
push
add
fldt
or
jge
ljmp
insb
push
icebp
gs
rorl
into
nop
cli
xchg
hlt
add
add
add
jmp
mov
repnz
jmp
mov
pushf
lock
mov
add
cltd
push
or
test
in
push
jb
xchg
push
cwtl
js
jmp
mov
int3
int
lcall
or
xorl
xor
add
jmp
es
or
mov
roll
in
mov
ljmp
add
add
fisttps
fdivr
out
mov
ror
add
pop
loopne
fwait
psubsw
jae
xlat
mov
mov
imulb
lds
add
jmp
in
mov
xor
add
cltd
adc
rorl
mov
ret
xchg
mov
sub
push
mov
icebp
add
shlb
sarl
add
mov
pushl
adc
arpl
jne
pop
out
mov
xor
add
jl
mov
and
sbb
mov
cld
leave
jle
out
mov
jecxz
add
jp
in
data16
jge
jmp
inc
in
add
add
nop
mov
mov
icebp
test
ret
out
int
add
adc
popa
call
mov
rol
pop
add
fwait
adc
shrl
dec
add
movsbl
pop
sahf
fucomi
and
add
mov
pusha
push
xchg
mov
lcall
cmpsl
sti
in
rcll
push
mov
lods
stc
push
test
mov
incl
add
add
push
add
mov
push
xchg
outsb
out
add
dec
add
enter
jg
pop
mov
into
push
arpl
lea
pusha
push
repz
xor
jmp
mov
jmp
out
jae
jae
lea
add
outsb
in
jne
arpl
popa
cmc
shr
in
dec
call
inc
popa
jae
ljmp
cwtl
repz
add
arpl
inc
pop
pop
stc
add
repz
lcall
add
outsb
psubsw
sti
scas
jns
stc
add
dec
cmpsb
in
jge
mov
mov
stc
nop
xor
out
imul
add
add
notl
jge
jns
cld
mov
psubsw
arpl
xchg
mov
push
cmc
mul
sub
xor
call
popf
aaa
bound
jmp
lahf
mov
or
ja
add
push
clc
incl
loop
imul
mov
dec
clc
push
xor
mov
adc
jecxz
mov
stos
jne
stos
and
xchg
shll
push
rorl
sbb
in
stos
lds
push
addr16
cmpb
dec
jge
negl
fdivrs
mov
jg
add
dec
or
dec
or
xor
jnp
and
mov
ret
nop
mov
movsb
roll
pushf
pop
add
cltd
mov
je
xchg
pop
add
lret
popa
jnp
push
dec
add
add
pop
sub
je
cld
decl
pop
add
mov
add
add
mov
push
or
pop
add
mov
shl
pop
add
or
pop
or
push
inc
stc
dec
mov
cmpsl
mov
dec
push
inc
int3
inc
outsl
jne
fcmovnbe
mov
js
jmp
push
adc
jmp
mov
mov
jp
push
push
repz
mov
jmp
fadds
push
out
jns
call
cmc
jl
sti
jb
xchg
jp
add
imul
sbb
dec
sbb
xor
add
out
add
jg
sub
lock
out
add
jns
xlat
mov
mov
js
popf
sbb
clc
and
inc
or
cmp
mov
xor
mov
rorl
push
push
loop
jmp
or
psubsw
test
psubsw
add
add
mov
mov
pushf
ja
popf
pushf
dec
clc
call
mov
rol
xor
popa
mov
mov
pop
pusha
or
psubsw
push
pop
loopne
mov
jmp
cs
mov
inc
jge
ja
clc
pushl
dec
jp
mov
aam
dec
inc
cld
dec
push
xchg
mov
jge
jle
imul
pop
testb
xchg
dec
jle
pop
dec
clc
cmp
mov
jge
aaa
lret
sub
mov
mov
negl
adc
imul
mov
jl
add
jg
sti
inc
clc
dec
inc
xchg
push
incl
mov
cmp
adc
adc
jae
repz
movsb
add
mov
jne
je
add
adc
popa
jge
outsb
cmp
sbb
or
pop
add
add
int3
call
inc
outsb
mov
adc
test
mov
push
xchg
ret
mov
stc
or
movsb
mov
mov
dec
jbe
scas
pop
add
test
out
incl
cmp
call
mov
adc
sbb
adc
mov
add
add
jmp
add
jae
and
repz
push
jne
stc
and
aad
jne
in
add
lock
jecxz
jg
dec
scas
dec
movsbl
mov
mov
jb
loop
xchg
dec
ret
ja
add
pop
jnp
repz
dec
mov
push
mov
aas
mov
ja
repz
jle
sti
cmpsb
cmp
mov
jnp
mov
clc
fiadds
push
add
add
inc
mov
in
jmp
mov
cltd
fisttps
sbb
roll
jno
out
jmp
mov
jge
mov
add
sbb
mov
pop
in
jmp
xchg
int
out
clc
pushl
add
pop
mov
stos
icebp
nop
inc
mov
imul
movsl
jb
clc
inc
mov
out
imul
cmp
push
jnp
adc
call
idiv
inc
push
leave
pop
or
add
lea
clc
lock
push
and
fstl
adc
add
data16
mov
into
push
mov
repz
jge
aaa
stc
mov
jno
stc
ljmp
clc
lcall
mov
mov
scas
adc
stc
mov
pushl
dec
clc
inc
enter
sarb
mov
push
sbb
pushl
xchg
cwtl
xor
add
adc
xchg
dec
inc
jle
xchg
cwtl
adc
add
xchg
call
sbb
add
add
pop
add
lret
adc
loop
and
mov
mov
add
rorl
push
lds
leave
push
xchg
mov
test
add
add
add
jb
push
xorb
xchg
loopne
clc
call
sarl
btc
loope
arpl
xchg
adc
lcall
fucomip
xchg
repnz
add
mov
jb
out
loopne
add
cmpsb
stc
dec
lret
hlt
outsl
cmp
and
push
add
inc
dec
jnp
mov
add
pop
je
mov
jmp
sti
adc
hlt
adc
or
inc
jae
loopne
add
leave
inc
mov
jo
pop
or
insl
jecxz
pushl
mov
xor
jo
xchg
push
mov
adc
add
xor
clc
jb
jecxz
aad
dec
inc
aad
test
jb
out
mov
outsb
adc
fisttps
xchg
adc
mov
mov
lock
inc
cmpl
xlat
aaa
filds
jge
test
mov
enter
repnz
test
sub
and
push
sbb
repnz
or
mov
in
inc
add
mov
fdivrl
cmpsl
add
repnz
adc
repnz
test
jnp
fmuls
jnp
test
or
in
in
cmpsb
data16
arpl
ror
dec
or
mov
pop
fidivrl
push
mov
xor
jnp
or
mov
add
push
adc
inc
jle
hlt
and
adc
push
xchg
ja
ljmp
mov
in
ret
mov
jae
test
in
fildll
ret
mov
leave
add
jg
mov
cmp
push
inc
mov
test
pop
dec
out
orl
xchg
add
jmp
in
fstpl
icebp
xchg
fs
mov
repz
inc
ret
int
push
sub
mov
sti
cli
fisttpll
das
insb
loop
jmp
jnp
add
cltd
hlt
insb
xor
ret
in
js
sti
jno
xchg
js
mov
jmp
hlt
cmpsl
cmp
je
fucomp
add
lahf
rclb
cmpsb
icebp
jp
xchg
add
inc
cmpb
in
mov
mov
mov
mov
rolb
mov
ret
popf
xchg
aaa
lds
jne
lds
cmp
lcall
jmp
dec
inc
je
scas
cmp
push
mov
push
not
inc
or
iret
rcl
addl
sub
or
jmp
mov
repz
mov
and
repz
pushf
insl
or
je
add
mov
je
std
add
xchg
add
repz
int3
shlb
jecxz
mov
sti
rolb
push
mov
fbld
int3
sub
push
mov
out
aaa
insb
mov
add
pop
outsb
adc
pmullw
push
arpl
jge
inc
jno
or
jmp
add
add
testb
fwait
jae
add
and
daa
js
add
mov
mov
pop
push
xchg
ret
je
add
dec
and
push
sub
ret
nop
add
add
dec
int3
mov
xchg
into
aam
mov
or
or
push
jp
xor
add
jnp
test
add
add
inc
mov
add
adc
xchg
adc
and
sbb
mov
adc
ret
push
jle
fwait
mov
jbe
inc
inc
jbe
inc
bound
hlt
jno
cwtl
repz
add
das
scas
push
into
das
cmpsb
push
das
adc
or
xchg
inc
aaa
mov
int3
jns
sbb
add
add
loopne
inc
dec
out
aam
test
mov
gs
adc
mov
jae
pop
and
jnp
stos
pop
pop
mov
jb
cmp
sub
subb
xor
jbe
adc
mov
add
in
cltd
xchg
mov
inc
mov
jno
lock
cmp
shll
mov
pop
sbb
add
add
lds
dec
test
fs
lret
repz
sahf
and
std
xchg
pop
pop
ljmp
movl
dec
sar
dec
push
xor
add
jns
jnp
dec
jle
jb
mov
in
scas
lods
xor
mov
dec
aad
lods
push
pop
jmp
popl
clc
scas
cmpsl
es
ja
addr16
jge
divb
add
out
outsl
in
pop
ljmp
stos
push
or
or
jmp
mov
push
lret
jo
cld
sbb
push
adc
repnz
mov
roll
hlt
add
mov
xor
lcall
imul
or
jg
xlat
mov
xor
out
add
leave
jmp
inc
data16
add
stos
sbb
clc
pop
lods
jne
mov
mov
dec
or
add
mov
mov
mov
pop
dec
add
add
lea
add
mov
insb
ret
jno
sahf
dec
add
mov
dec
mov
ss
pop
mov
leave
add
add
or
push
jbe
add
add
test
add
add
fadds
add
adc
mov
ljmp
mov
jnp
pop
mov
xor
stc
cmp
clc
push
sub
cmp
adc
pop
ljmp
out
add
jo
loopne
repz
add
out
add
inc
add
repz
add
add
aam
add
data16
out
add
repz
add
repz
or
je
add
add
inc
pop
pusha
mov
fwait
or
mov
out
inc
loopne
jmp
mov
ds
aas
pop
jbe
icebp
mov
fwait
or
mov
scas
mov
mov
mov
sub
add
enter
inc
je
mov
outsb
mov
push
cmc
mov
add
add
idivl
cmp
bound
mov
add
xrelease
cwtl
or
arpl
jge
mov
imul
xor
mov
idiv
pop
fsubrs
pop
jo
int3
pop
stos
int3
pop
stos
int3
and
jmp
imul
lret
ljmp
fdiv
add
mov
loopne
std
stc
lea
es
stc
and
mov
jmp
imul
les
gs
mov
testb
mov
movsl
or
add
add
negl
dec
mov
add
sbbb
mov
jmp
push
add
mov
or
fwait
cmc
sbb
dec
mov
add
mov
push
jp
iret
mov
test
dec
add
leave
add
mov
and
push
lea
mov
mov
test
dec
add
leave
int3
sub
incb
mov
adc
hlt
sub
inc
push
sub
or
insb
jle
mov
push
xchg
mov
lods
push
insb
cmp
shl
xchg
loop
jmp
jnp
repz
pop
call
jmp
mov
aam
imul
pcmpgtb
mov
mov
cltd
sbb
rcrl
test
inc
jno
out
jmp
mov
mov
pop
fucomp
repnz
comiss
ret
aad
mov
aad
dec
pop
js
pusha
push
ja
jmp
jmp
nop
jno
repz
in
push
popa
mov
push
arpl
lds
ret
sub
push
daa
lds
pushf
jmp
lods
dec
daa
lds
inc
push
cmp
pushf
adc
inc
or
outsl
add
mov
dec
cmpsb
hlt
cmp
jmp
pop
std
adcl
xor
cli
add
jg
push
outsb
sbbl
repz
inc
cld
jmp
insl
mov
repz
inc
cld
inc
outsl
mov
and
add
add
lret
and
lods
sub
call
fiadds
bound
testb
repz
data16
add
test
jno
pop
xor
test
test
inc
jecxz
push
jae
loopne
add
dec
mov
add
mov
or
and
push
mov
jle
xchg
dec
add
mull
mov
leave
xor
test
push
loopne
push
or
je
mov
sbb
push
add
lock
clc
int3
inc
pushl
mov
mov
add
mov
push
add
cmc
lea
scas
lcall
rcr
jne
jl
add
add
sub
sbbl
add
icebp
jo
jmp
mov
or
add
repz
ret
xchg
xor
gs
jmp
add
repz
es
inc
mov
js
add
lods
jmp
adc
push
arpl
cltd
int
lea
fsubrp
add
add
add
repz
sbb
sub
xchg
jge
jnp
repz
add
mov
mov
add
mov
mov
jp
popa
mov
mov
pop
pusha
in
jnp
jmp
mov
jnp
jmp
adc
xlat
mov
push
rcll
jmp
add
clc
push
jmp
aaa
pop
mov
push
mov
outsb
mov
out
cltd
pop
jb
cwtl
ret
lods
inc
daa
lds
inc
mov
cmpsb
mov
outsb
fists
lret
adc
adc
jmp
test
mov
repnz
add
add
arpl
out
sbb
add
arpl
ret
push
pop
or
pop
ret
push
mov
cli
xor
cld
mov
dec
pop
pop
fidivs
jae
mov
je
jns
and
testb
in
mov
cmc
clc
cwtl
insb
repz
sbb
add
xor
stc
mov
outsl
or
test
lods
pop
pop
or
pop
loopne,pt
inc
ds
repnz
mov
xor
ds
fwait
daa
mov
sbb
or
mov
decl
cmp
fisttpll
testl
add
decl
sbb
mov
add
mov
add
mov
add
mov
add
mov
add
aad
mov
sbb
out
aad
mov
add
enter
cmc
mov
clc
enter
cmc
mov
push
xchg
cmc
mov
fmul
jecxz
xchg
cmc
mov
push
jne
mov
cmp
fldl
jne
mov
push
push
cmc
xor
sbb
filds
push
cmc
and
clc
leave
out
push
xor
jne
adc
add
and
pop
imul
sub
mov
incl
les
orl
jmp
push
aas
or
lcall
out
out
into
jnp
fdiv
add
scas
sti
repz
loop
add
adc
dec
call
mov
jmp
sub
mov
ljmp
dec
in
xchg
add
mov
in
xchg
add
mov
out
xchg
add
mov
out
xchg
add
mov
loope
sub
mov
add
imul
add
imul
add
imul
add
repz
out
out
add
repnz
mov
out
add
repnz
movsl
imul
add
repnz
xchg
imul
add
jbe
adc
imul
jg
stc
out
mov
add
lods
add
sub
repz
lods
shll
rdpmc
in
add
sbbb
repnz
adc
imul
out
mov
sub
add
push
mov
mov
or
repnz
incl
add
and
mov
sub
insl
std
decl
add
add
cltd
add
cld
ds
pop
and
cltd
and
sbb
cli
dec
jge
test
std
test
pop
sbb
adc
stc
mov
jg
mov
sbb
js
xchg
add
add
inc
repz
jb
in
nop
mov
test
add
in
test
jp
xor
adc
add
add
jp
mov
dec
test
cs
jmp
clc
repz
sbb
xrelease
push
add
mov
repnz
sti
bound
sbb
jp
xor
aam
push
add
hlt
jmp
add
jmp
jmp
shrl
sbb
xchg
jmp
mov
add
clc
add
out
add
dec
sbb
les
jge
fsubr
add
insb
in
loope
dec
clc
jmp
cld
repz
test
or
xchg
fiaddl
sub
sub
add
test
add
mov
jl
faddl
or
add
lock
push
jge
xor
jb
sbb
pop
jge
sub
repz
add
divl
and
and
rorl
add
mov
or
adc
and
sub
add
mov
sar
add
and
inc
arpl
xor
lock
mov
push
mov
or
aam
add
lahf
add
lret
dec
xchg
push
pop
add
xor
sbb
pop
and
and
sbb
add
pop
add
cmp
jo
lret
hlt
adc
aad
add
add
addl
loopne
sbb
or
sub
mov
add
sbb
inc
mov
out
sbb
aas
mov
add
mov
cld
ss
or
mov
sub
repz
push
cvtpi2ps
add
xor
adc
adc
add
repz
call
adc
sti
push
add
add
add
xor
or
out
add
mov
loopne
bnd
add
jmp
jg
lahf
jbe
push
jo
scas
jg
fbstp
out
test
xchg
sti
mov
je
mov
jmp
xor
stos
aaa
push
cmp
sbb
pop
mov
jbe
fmull
testl
movsb
xor
push
inc
pusha
sub
sbb
pop
dec
jge
mov
xor
test
shlb
pushf
pop
pop
mov
outsl
ds
cmp
add
in
push
stos
jb
lds
mov
iret
mov
push
mov
outsl
fwait
pop
mov
add
dec
scas
jge
pop
cmpsl
dec
jl
out
mov
popa
addr16
push
daa
rorb
ret
out
add
test
je
imul
imul
stos
arpl
cwtl
mov
sbb
mov
dec
sbb
sub
inc
iret
idivl
movl
call
cmp
jo
outsl
adc
shrl
pop
sbb
and
movsb
mov
push
and
cmpsb
outsb
inc
clc
negb
mov
outsl
inc
mov
or
push
and
sbb
jg
sbb
jl
mov
or
pop
repz
jno
cmpsb
fiaddl
pop
fadds
xchg
popf
idiv
pusha
pop
fmuls
lahf
add
cmpsl
and
sbb
test
or
pop
jmp
add
push
insl
cld
dec
sbb
add
or
ss
sub
js
repz
jo
mov
or
jb
xor
stc
repz
inc
jl
adcb
push
mov
jmp
cmpsb
lods
add
ljmp
jp
fbld
jp
filds
std
testl
es
daa
pop
mov
pop
add
test
jp
iret
in
fidivrl
filds
arpl
xchg
jp
fbld
loopne,pn
cs
icebp
call
and
outsb
dec
add
lea
adc
lock
push
push
vpsrld
jmp
ret
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
mov
add
fbld
neg
and
out
xchg
add
scas
and
fsubp
and
outsl
repz
addr16
add
into
cmc
fmul
add
fmul
or
fmul
sbb
sub
cmp
sbb
jns
sbb
stc
add
int
add
stc
add
into
stc
pop
fmul
stc
paddusb
stc
pop
lods
into
stc
aas
fmul
stc
jg
into
stc
push
xor
in
pop
stos
insb
and
stos
jp
test
add
cmc
repnz
cmp
repz
xlat
sub
ret
stos
pop
or
or
fucom
or
mov
add
mov
jg
mov
call
xchg
or
inc
jns
cmp
scas
and
or
dec
ficomps
dec
add
fdivs
adc
int3
push
jnp
cmpsb
sbb
jb
lods
das
adc
xchg
lock
lock
lods
hlt
jns
push
xchg
cmpsl
and
scas
and
lea
mov
add
add
cmpsl
lahf
and
push
test
pop
inc
in
and
cmpsl
and
pop
sar
mov
repz
hlt
jbe
je
dec
outsb
mov
xlat
jmp
and
or
sub
lahf
loopne
and
repz
push
insb
in
add
les
orb
lds
repz
aam
cmp
or
push
lret
test
mov
push
je
mov
cwtl
mov
lods
jae
mov
movsl
pop
jmp
gs
icebp
push
mov
add
or
insl
jmp
out
mov
jmp
pop
stc
mov
jmp
xlat
enter
je
imul
subl
or
sbb
insb
inc
mov
jns
ret
test
out
leave
movsb
sbb
popa
add
ficoms
ret
mov
insb
add
shl
add
adc
ret
jbe
push
stc
jmp
sbb
scas
ljmp
mov
loopne
mov
je
adc
fdivr
out
mov
add
das
push
fsts
add
add
pop
js
fs
xor
dec
stos
mov
ja
adc
xlat
std
out
pop
and
fadds
or
jmp
rol
or
jle
cltd
mov
in
mov
js
add
hlt
and
mov
push
pop
mov
inc
mov
xorb
jle
mov
add
mov
sub
sbb
mov
ss
and
or
sahf
add
mov
sbb
add
mov
adc
add
mov
jl
or
sub
and
dec
mov
jnp
add
mov
mov
or
or
or
adc
add
mov
stc
std
repz
ret
cmpb
mov
push
add
stos
lret
xor
mov
jmp
pop
inc
or
and
push
xchg
les
repz
add
stos
stos
or
xor
mov
add
rcrl
sbbl
dec
movzwl
cwtl
test
jno
add
lahf
cmpsl
mov
add
icebp
pop
mov
xlat
add
in
movsb
leave
ljmp
cmp
mov
lret
cltd
push
mov
icebp
paddsb
shlb
sbb
mov
sub
loopne
mov
sbb
sub
cltd
push
mov
in
sub
sti
sub
mov
and
adc
outsl
icebp
pusha
pop
hlt
inc
add
sub
adc
inc
adc
idivb
jbe
out
in
data16
adc
or
sub
ljmp
jae
out
pop
imul
in
loope
subl
repz
jne,pt
imul
in
jo
and
js
or
sub
loopne
jge
mov
out
push
cwtl
enter
sbb
jl
daa
or
jp
and
mov
fists
popa
lock
lret
daa
or
xlat
or
dec
rorb
mov
call
push
xor
add
mov
and
or
or
stc
lret
add
add
or
add
add
repnz
jge
in
test
lret
jno
add
or
outsb
add
mov
add
jge
inc
and
push
sar
xor
shll
add
add
addr16
jno
and
xchg
std
xchg
insl
mov
cmpsl
xor
mov
add
add
hlt
popa
mov
jbe
add
push
jae
test
jmp
out
repnz
mov
push
in
push
fisubl
rcll
repz
jb
add
mov
mov
push
xchg
xchg
popl
loope
mov
sbb
sbb
add
repz
xchg
ljmp
xorl
dec
pop
out
bound
inc
sbb
pop
sbb
xchg
jo
inc
xchg
add
in
pop
cmp
in
jbe
sub
add
add
mov
add
mov
jo
int
and
jb
aad
rolb
dec
mov
add
cmp
je
fstps
insl
leave
lods
pop
add
aam
outsl
inc
popf
sub
test
sub
insb
lods
cmp
je
mov
or
xor
test
sub
insb
xor
sti
into
sub
repnz
mov
sub
adc
popf
mov
lock
or
repz
repnz
imul
and
sbb
je
scas
fdivr
xor
mov
cwtl
adc
add
hlt
add
mov
cs
mov
mov
or
mov
sbb
jge
dec
pop
or
idiv
xchg
and
in
iret
aas
sub
cld
std
mov
inc
fcoms
in
push
jle
sub
pusha
mov
cmp
addb
push
mov
out
clc
ss
es
test
or
jge
xchg
or
mov
or
fldcw
cmp
test
or
or
inc
mov
xchg
scas
and
repz
out
repz
out
orb
sub
jb
imul
add
mov
xor
add
or
in
push
pop
daa
orb
add
das
stos
jbe
mov
cs
daa
es
into
daa
mov
out
notb
add
xor
sub
dec
dec
jno
icebp
insb
and
lea
jno
inc
insb
sbb
push
add
add
mov
imul
jne
inc
dec
adc
ret
jo
roll
jmp
or
mov
nop
iret
or
mov
sbb
mov
shrl
hlt
jb
jb
xchg
out
outsb
ds
add
shlb
inc
in
sub
outsb
adc
cwtl
add
fdivl
jmp
mov
add
dec
mov
push
add
lock
jae
mov
outsb
ja
jl
xchg
add
xor
lret
jo
jg
mov
jge
scas
je
add
insb
dec
icebp
sub
adc
testl
or
out
add
jmp
std
pop
mov
add
add
mov
fisttpll
ds
add
push
add
mov
jne
mov
jg
mov
js
xchg
add
out
imul
sub
xor
cmpl
mov
xchg
in
add
aad
inc
movsb
xchg
rorb
xchg
push
mov
outsb
mov
add
and
pop
stc
or
bound
addb
roll
dec
dec
or
mov
dec
lcall
mov
mov
lods
or
add
scas
in
mov
lahf
mov
mov
pop
aad
jl
test
mov
xadd
add
ljmp
jg
xchg
adc
pop
jge
cmp
shrl
push
cmpsl
ljmp
divb
mov
imul
adc
mov
out
jo
in
push
loopne
dec
repz
xadd
xchg
pop
je
insb
xor
or
mov
and
or
movzbl
ret
add
mov
jb
and
jbe
js
leave
test
mov
popa
jp
stc
fdivrl
or
iret
mov
addb
push
add
mov
adc
fmul
js
popa
int3
adc
jmp
dec
push
aam
test
xchg
jb
add
mov
lock
mov
movsb
fnstcw
mov
add
dec
fadd
pusha
xlat
test
add
push
stc
mov
nop
xlat
jge
fwait
jp
je
jb
and
cmc
add
shr
add
add
xor
movl
dec
inc
inc
sub
add
arpl
lock
mov
bound
outsl
inc
movsb
jne
inc
pop
in
and
mov
dec
ret
cmc
mov
cwtl
cmp
in
and
add
xchg
in
incl
add
add
int3
and
std
jg
scas
inc
jae
aam
idiv
je
jge
mov
mov
aas
adc
mov
in
jbe
mov
pop
jl
shl
xchg
inc
decl
dec
sbb
sbb
scas
mov
mov
add
push
mov
cld
or
jne
jae
test
mov
mov
add
cmp
rclb
pop
xor
mov
cld
jle
inc
std
decl
sbb
std
in
lea
repz
jge
out
or
jns
nop
jge
movlps
jb
movsl
inc
popf
hlt
pusha
mov
cwtl
jo
add
bswap
jl
or
imul
adc
add
fstpt
add
mov
mov
scas
test
hlt
add
insb
jl
sub
inc
sub
add
mov
sbb
repz
lods
bound
add
mov
aas
mov
pop
mov
xchg
jb
decl
mov
rclb
nop
mov
movsb
cltd
ja
fldl
add
add
ja
add
xlat
or
push
call
lret
mov
aas
lds
loope
mov
ja
stc
add
insl
add
mov
push
bound
loop
jb
std
push
jb
stc
push
sbb
test
xor
inc
dec
outsb
in
shlb
enter
mov
push
sbb
add
dec
mov
push
dec
mov
add
add
sub
xchg
jb
adc
mov
int3
lahf
mov
int3
jg
int3
pop
mov
int3
push
mov
mov
or
xchg
icebp
jge
lahf
mov
ret
or
xor
adc
or
cld
rolb
sub
add
and
jle
and
call
shl
xor
and
mov
add
add
movsl
je
fidivrs
sub
in
int
fwait
mov
mov
sti
aad
je
mov
xchg
js
mov
mov
sti
lods
or
adc
popf
je
or
push
stc
and
pop
rolb
push
sti
jne
jno
pop
dec
or
gs
mov
sti
push
push
js
xchg
xor
add
add
push
cmp
mov
stc
sub
sbb
in
repz
or
mov
cwtl
repz
or
in
es
mov
ds
dec
adc
add
sbb
mov
bound
aam
testb
or
add
add
in
jmp
jnp
ret
lods
jo
xchg
je
cmovno
xchg
aas
inc
cmp
aas
push
cmp
fnstcw
mov
mov
ret
or
incb
lods
jge
jmp
test
mov
ret
dec
sbb
bound
push
xchg
sbb
stc
or
add
bound
insl
fldl
add
add
add
xor
mov
adc
jmp
mov
fisttps
arpl
or
aaa
out
jecxz
fs
lock
decb
loop
test
repz
lds
test
int3
test
push
mov
testb
js
add
jl
test
add
add
mov
addr16
imul
addr16
mov
clc
pushl
jne
iret
pop
dec
mov
or
es
je
cld
adc
clc
imul
clc
imul
add
stc
jmp
enter
pop
jge
mov
mov
mov
add
add
sbb
mov
or
and
add
mov
cs
hlt
pop
jg
xchg
inc
in
inc
and
jle
lods
push
cmp
or
or
repz
sbb
add
push
pop
ret
jbe
cmp
scas
clc
aaa
push
jge
xchg
cmp
mov
jbe
bound
mov
mov
lods
clc
mov
repz
shl
scas
lea
negl
and
xor
jae
jge
btr
sahf
aad
dec
negl
divl
xchg
jl
jge
sbb
or
pop
adc
xchg
int3
pop
xchg
jns
xchg
jmp
movsb
fwait
or
fildll
xchg
outsb
sub
nop
hlt
movsb
repz
add
cmp
add
fildll
jle
stos
mov
jmp
xchg
jp
in
mov
filds
push
idivl
add
cmp
sbb
rcrb
lods
mov
cld
scas
aad
jnp
loop
inc
adc
push
pop
lahf
xor
mov
jle
lock
mov
or
ds
sbb
mov
add
cmp
push
shr
ljmp
cmp
sbb
mov
mov
jge
std
or
jmp
add
mov
sar
movsl
add
imul
sbb
adc
daa
or
inc
pop
mov
test
jge
dec
leave
sbb
sub
gs
cmpsl
mov
insb
out
jg
outsb
out
stc
lcall
dec
push
cmp
jae
mov
pop
or
popf
out
stc
cmp
adc
ja,pn
jl
mov
xacquire
fadd
gs
sub
out
jle
imul
decb
or
pop
lcall
add
clc
dec
xchg
addr16
clc
adc
incl
and
out
stc
adc
ljmp
adc
adc
dec
fcoms
push
dec
mov
cmp
cwtl
orb
clc
lahf
sbb
mov
fisttps
rol
adc
pop
cs
loopne
lods
sbb
inc
add
outsb
rcll
add
fists
mov
out
adc
fcom
insb
rcr
jbe
push
jp
jecxz
ret
mov
bnd
cld
and
dec
jmp
rorl
adcb
add
ljmp
test
in
jmp
add
scas
mov
push
or
add
add
jmp
xchg
xchg
add
repz
addb
jno
imul
mov
cmp
or
mov
add
lret
sub
xchg
negl
pop
sbb
sahf
mov
subl
cmpsb
dec
push
mov
pop
shr
mov
es
push
sub
mov
inc
imul
add
add
rol
cli
mov
shl
cmpsl
cmpsb
mov
mov
inc
jmp
scas
testb
cmc
dec
pop
ret
out
jnp
and
inc
inc
or
pop
cmc
stc
jmp
sub
pop
and
int3
daa
and
int3
call
jp
sbb
xchg
or
test
or
inc
popf
jge
in
stos
stc
add
stos
in
add
testb
clc
in
clc
gs
mov
jecxz
lcall
bnd
xlat
jo
or
and
or
hlt
push
or
lods
adc
repz
bound
cs
xchg
dec
mov
inc
cld
adc
xchg
xchg
xchg
dec
in
or
add
or
mov
lcall
add
add
fsubr
test
push
jo
adc
pop
xor
imul
jns
test
add
testl
add
or
mov
add
aam
adc
fstpl
test
push
orb
push
mov
jb
mov
pop
lods
lret
add
insb
popf
adc
add
add
adc
mov
jmp
pop
into
repz
ljmp
lock
call
pop
into
repz
test
xor
add
insb
and
ja
insb
adc
aad
sub
repz
dec
out
dec
loop
mov
cld
roll
add
fcmove
add
mov
mov
inc
ficoml
jbe
stc
push
mov
dec
testl
out
pop
gs
not
push
stos
or
ret
js
shr
stc
idivl
mov
sbb
cmpsb
insb
jnp
sub
mov
mov
mov
fldl
js
int
add
jbe
add
add
jg
jmp
add
sbb
mov
jbe
mov
jge
xchg
icebp
fadds
inc
and
push
and
lock
dec
and
outsl
inc
and
mov
mov
adc
subb
mov
lret
sbb
cmpsl
lret
adc
cmp
iret
sarl
sub
or
jl
testl
add
add
imul
orb
ja
or
sbb
jbe
scas
and
jne
add
testl
sbb
or
mov
xchg
in
mov
add
ja
in
mov
add
mov
lods
nop
adc
add
add
xchg
adc
jb
cld
popa
push
sbb
out
or
pop
in
cmp
mov
and
inc
add
cld
fwait
or
or
out
or
out
repz
pop
in
mov
mov
adc
shlb
add
bnd
add
add
inc
mov
add
repz
mov
pop
inc
mov
jmp
jecxz
repz
mov
fdivrp
or
leave
inc
mov
loopne
cld
push
cld
aam
jl
jmp
add
out
adc
repz
xchg
test
inc
mov
sub
add
adc
outsb
adc
test
stc
adc
add
lcall
lods
movsl
jmp
cmp
or
sub
xor
das
mov
sbb
mov
scas
adc
lods
insl
jecxz
popf
gs
mov
pop
and
add
or
hlt
out
ficoml
or
dec
mov
mov
push
adc
cmp
mov
jmp
lock
sarb
jge
fildl
cmp
sbb
jl
icebp
fsubs
clc
mov
imul
lods
cwtl
mov
jecxz
int3
int3
lock
lods
push
push
mov
jmp
mov
xor
or
stos
or
mov
inc
push
jmp
pop
pop
sub
add
int3
xchg
sub
int3
aaa
sub
int3
aaa
sub
int3
call
push
or
add
add
lods
dec
add
xchg
das
add
and
inc
daa
icebp
mov
sub
jno
pop
ds
mov
push
dec
mov
mov
enter
sti
push
add
inc
cmp
les
mov
sbb
test
push
mov
sbb
xchg
pop
pop
test
sbb
insl
xchg
test
jecxz
cmc
clc
adc
jge
jecxz
rcr
and
sarb
add
cli
cmpb
xor
pusha
cld
mov
jmp
cli
and
bound
int3
cmpsl
push
pop
or
add
adc
xor
cs
mov
vpsubusb
pop
adc
ret
inc
cli
sar
push
and
scas
inc
mov
add
add
mov
add
insb
sub
push
popl
ret
pop
cli
xchg
clc
mov
add
jmp
inc
cmpsb
jecxz
lret
push
cmpsl
std
pop
fldl2e
bound
out
into
jecxz
jecxz
push
cmp
jae
push
scas
add
lcall
xchg
sub
shlb
dec
call
inc
jmp
mov
add
add
add
adc
iret
adc
adc
out
dec
mov
mov
cmp
jo
or
mov
lret
mov
daa
mov
sti
test
repz
pop
stos
lock
ljmp
rcrb
push
stos
push
cld
dec
bound
insl
cmc
push
adcb
dec
xchg
jbe
push
push
addr16
add
jg
cld
outsl
les
pop
xor
and
js
mov
repz
nop
mov
std
mov
xchg
jge
xchg
and
fdivrs
mov
or
add
dec
mov
enter
adc
cmpsb
sbb
sbb
fistl
fdivrs
jae
je
jge
je
sbb
call
add
add
pop
pushw
mov
push
and
popf
add
icebp
inc
and
mov
mov
int3
loope
jp
or
lahf
mov
add
subl
xchg
lcall
inc
loop
popa
call
int
lock
int
out
xchg
mov
das
mov
mov
adc
add
mov
dec
leave
in
pushf
pushf
dec
add
dec
enter
out
clc
insl
or
mov
shl
cmc
jmp
notb
ret
xchg
repz
divb
cmc
mov
addr16
loopne
repz
notb
cmc
jb
repz
loopne
repz
div
hlt
push
loope
repz
repz
add
hlt
imul
jg
jmp
divb
repz
fistps
jmp
notb
repz
mov
repz
ja
imull
push
mov
jmp
push
sti
div
fdivl
add
mov
add
ret
dec
ret
jmp
pop
sti
negl
arpl
add
mov
add
cli
imul
inc
mov
imul
add
cli
imull
shlb
ss
negl
mov
jp
mov
jmp
xchg
cli
testl
jno
aaa
add
add
je
clc
push
aam
add
shll
add
clc
incl
add
add
push
cmp
and
add
hlt
out
ljmp
aaa
add
aaa
add
testl
jmp
jecxz
add
aaa
add
testb
mov
push
inc
push
sbb
mulb
jecxz
push
adc
testb
pop
adc
testb
mov
faddl
cmp
faddl
cmp
add
add
faddl
inc
faddl
jl
faddl
push
jo
add
jnp
add
faddl
sbb
faddl
and
faddl
pop
jnp
add
faddl
inc
jnp
add
jnp
add
lcall
hlt
lcall
cmp
faddl
sub
add
faddl
loopne
faddl
fcompl
faddl
aam
add
add
faddl
sbb
faddl
mov
mov
add
add
add
ljmp
add
add
ljmp
add
add
ljmp
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
jmp
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
rep
adc
repz
pop
mov
repz
adc
les
arpl
sub
arpl
rorb
repz
jae
mov
packsswb
lods
rdpmc
repz
xor
movsb
mov
test
and
pushf
rdpmc
repz
mov
cwtl
mov
mov
repz
psllq
test
jecxz
mov
jecxz
jl
repz
bnd
jecxz
js
jecxz
int
mov
add
faddl
int3
faddl
leave
jge
add
faddl
dec
faddl
dec
test
add
add
faddl
cmp
faddl
cmp
faddl
xor
faddl
sub
faddl
xor
faddl
sub
faddl
and
faddl
sbb
faddl
adc
faddl
mov
jge
add
xchg
faddl
cld
mov
add
test
jmp
add
cld
jmp
add
ljmp
add
add
cld
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
std
jmp
add
std
jmp
add
std
jmp
add
std
jmp
add
add
add
std
jmp
add
std
jmp
add
mov
push
jmp
mov
push
jmp
mov
pop
jmp
mov
jmp
mov
or
mov
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
or
mov
pop
jmp
mov
jmp
mov
add
out
test
sbb
out
js
jecxz
ficompl
jecxz
daa
sbb
out
lock
mov
out
fmull
mov
out
fmuls
jae
add
arpl
ret
test
or
arpl
mov
or
xor
movsb
or
and
xor
xor
mov
or
and
dec
adc
notb
mov
faddl
test
faddl
jl
faddl
test
faddl
ret
lcall
stc
lcall
add
add
add
xchg
add
faddl
push
xchg
faddl
push
faddl
dec
xchg
add
xchg
faddl
lcall
add
jg
add
faddl
sbb
faddl
sbb
add
faddl
adc
faddl
or
jmp
add
jmp
add
imul
add
add
add
imul
add
imul
add
imul
add
imul
add
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
clc
jmp
add
clc
jmp
add
clc
jmp
add
imul
add
imul
add
imul
add
imul
add
add
add
testl
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
sbb
jmp
mov
add
add
hlt
or
xor
adc
hlt
add
and
or
repz
or
repz
repz
or
repz
or
repz
or
repz
repz
jecxz
call
or
repz
mov
repz
or
repz
mov
repz
or
mov
arpl
mov
or
mov
or
test
xor
pushf
or
repz
mov
faddl
pushf
jnp
add
sbb
add
faddl
jl
faddl
loop
faddl
fimuls
faddl
insb
sbb
add
xchg
faddl
fs
faddl
mov
faddl
lods
sbb
add
xchg
add
faddl
cwtl
xchg
faddl
xchg
xchg
faddl
nop
sbb
add
xchg
faddl
addb
add
repz
add
jmp
add
cli
jmp
add
jmp
add
add
add
cli
jmp
add
clc
jmp
add
clc
jmp
add
clc
jmp
add
clc
jmp
add
jmp
add
imul
add
jmp
add
jmp
add
xchg
or
mov
jmp
mov
or
mov
or
mov
or
mov
jmp
mov
jmp
mov
push
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
or
mov
jmp
mov
or
mov
or
jae
cmp
arpl
inc
or
xor
xor
cmp
xor
sub
and
and
and
adc
xor
sbb
xor
or
and
adc
and
add
repz
lahf
or
out
cld
or
out
add
jecxz
hlt
or
out
clc
or
out
in
or
out
lock
out
in
mov
call
or
out
aam
mov
fmuls
mov
int3
or
out
les
jae
pop
or
mov
or
int3
add
or
mov
int3
add
int3
add
int3
add
int3
add
int3
add
int3
add
int3
add
add
add
add
int3
add
int3
add
add
int3
add
or
add
add
int3
add
add
int3
add
add
repz
add
in
jmp
add
in
jmp
add
jmp
add
jmp
add
jmp
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
mov
jmp
add
ljmp
mov
ljmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
mov
or
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
add
add
scas
or
mov
arpl
cmpsb
or
stos
or
sahf
or
mov
or
lcall
hlt
xchg
or
hlt
xchg
and
mov
xor
jle
xor
orb
hlt
jbe
and
jp
repz
or
repz
jecxz
data16
repz
repz
or
repz
jecxz
push
or
repz
or
add
add
repz
or
lret
nop
lret
or
ds
cmp
int3
add
or
cs
sub
int3
add
or
push
or
sbb
int3
add
or
push
or
or
int3
add
or
incb
int3
add
xchg
int3
add
or
out
or
ljmp
add
or
fiadds
int3
add
xchg
int3
add
xor
add
jmp
add
in
jmp
add
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
jmp
add
in
jmp
add
in
jmp
add
in
jmp
add
add
jmp
add
jmp
add
add
mov
jmp
mov
or
mov
or
mov
or
mov
or
mov
add
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
jecxz
or
lock
or
lock
or
add
add
lock
lock
jae
mov
or
mov
arpl
cmpsb
or
stos
or
sahf
or
mov
or
lock
lock
or
lock
xor
mov
xor
jle
and
orb
lock
repz
jp
repz
outsb
or
out
jb
jecxz
data16
out
push
mov
add
add
add
lret
xchg
lret
xchg
lret
or
push
or
dec
xchg
lret
xchg
lret
or
inc
or
ds
int3
add
xchg
int3
add
or
xor
int3
add
xchg
int3
add
or
and
int3
add
xchg
int3
add
or
adc
int3
add
test
add
or
decb
int3
add
int3
add
test
jmp
add
bnd
add
bnd
add
bnd
add
bnd
add
bnd
add
bnd
add
jmp
add
bnd
add
lock
add
add
add
lock
add
lock
add
jmp
add
jmp
add
add
mov
call
mov
call
mov
jmp
mov
add
mov
add
mov
jmp
mov
std
call
mov
cld
call
mov
add
mov
add
mov
add
mov
call
mov
add
mov
call
mov
call
repz
testb
hlt
cli
push
jecxz
out
push
jecxz
repnz
repz
out
repz
ljmp
hlt
loop
mov
push
mov
fiaddl
mov
hlt
rolb
mov
movb
hlt
jge
mov
hlt
jne
jae
mov
jae
mov
push
arpl
mov
jae
cmpsb
push
jae
stos
push
arpl
sahf
push
arpl
mov
push
xor
lcall
hlt
xchg
push
xor
xchg
xor
mov
mov
add
mov
add
lret
mov
add
add
add
add
lret
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
xchg
add
mov
add
mov
add
mov
add
test
add
mov
add
test
add
mov
add
test
add
mov
add
test
add
mov
add
test
add
mov
jmp
add
in
jmp
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
jmp
add
jmp
add
add
add
jmp
add
jmp
add
jmp
jmp
mov
std
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
pushl
icebp
push
add
and
push
add
xor
push
add
and
incb
lock
jecxz
cli
add
lock
add
lock
lock
jecxz
ljmp
add
add
add
add
lock
lock
mov
add
lock
lock
add
lock
lock
lret
lock
add
lock
arpl
mov
add
lock
jae
cmpsb
add
lock
add
lret
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
lret
mov
add
faddl
ds
add
xchg
add
mov
add
xchg
jmp
add
imul
add
add
add
jmp
add
imul
add
jmp
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
jmp
add
imul
add
jmp
add
jmp
add
add
add
hlt
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
cmp
add
inc
add
cmp
and
add
fs
add
test
push
pcmpeqw
mov
sti
stc
shlb
push
inc
and
sub
push
jbe
test
mov
jecxz
inc
sbb
hlt
add
push
xor
and
cmc
add
push
add
mov
mull
push
inc
or
mov
inc
sbb
clc
jne
mov
jg
popf
mov
add
mov
add
pop
fidivs
insl
pop
les
gs
lret
fists
lahf
stc
mov
push
sbb
aam
test
mov
add
lret
fisttps
das
out
add
jl
nop
fimull
or
out
leave
pop
dec
add
movsb
mov
push
jl
mov
adc
incb
jl
imul
mov
push
iret
jae
add
popa
iret
inc
shll
fsubl
test
icebp
fsts
roll
add
add
push
inc
outsl
mov
and
les
cmc
adc
and
lret
les
clc
push
outsl
clc
stos
test
jmp
jle
in
inc
jns
push
cld
stos
test
or
jb
and
outsl
repnz
fildl
mov
ret
les
push
mov
inc
movsb
push
add
mov
mull
js
or
add
add
jns
jmp
cmp
add
dec
lret
cmp
cli
leave
inc
and
lock
inc
incl
loop
imul
inc
ja
lret
or
add
push
mov
in
mov
push
lock
jae
or
inc
call
push
into
imul
enter
aad
or
add
or
orl
jne
mov
mov
mov
or
push
add
sub
call
mov
mov
inc
nop
sti
mov
adc
loopne
es
push
imul
sub
mov
incl
clc
adcl
lahf
and
mov
add
add
xor
and
mov
jge
xor
cmp
or
jb
and
mov
jge
shlb
cmp
add
mov
and
leave
pop
dec
sbb
mov
pop
add
sbb
leave
mov
add
neg
fistl
or
cld
fildl
adc
add
mov
fstpt
xor
mov
mov
cmpl
pop
add
and
mov
dec
add
pop
and
leave
pop
inc
sbb
addr16
jae
mov
sti
aad
jns
jo
call
and
lret
xchg
jmp
sbb
xchg
in
add
mov
aam
divl
or
das
ja
and
lret
cs
iret
inc
lret
sub
jae
jmp
adc
inc
in
enter
sahf
dec
in
and
lock
orb
sarb
add
shrl
mov
add
lret
imull
dec
inc
call
lret
mov
add
add
ret
leave
pop
cmc
xchg
shrb
mov
out
ret
push
call
xor
mov
push
lret
call
push
in
mov
outsl
cmp
push
call
psubsb
cmc
call
sub
call
ret
leave
pop
pop
xchg
fstpt
ror
mov
jo
adc
xchg
lret
mov
xor
push
lock
push
mov
add
mov
inc
sbb
adc
ret
cmc
lcall
cld
in
mov
jae
call
adc
nop
repz
push
ret
divb
sub
mov
testb
and
mov
and
clc
call
mov
adc
popf
bnd
ret
js
smsw
std
mov
in
dec
adc
lret
mov
hlt
lds
inc
sbb
enter
movsl
jno
and
test
jp
jb
stc
test
test
hlt
std
inc
test
sbb
lret
out
push
lret
clc
or
incl
add
add
movsb
jle
nop
sub
add
or
add
sahf
jmp
leave
leave
mov
xchg
movsb
jle
nop
repz
je
cli
in
clc
push
xchg
jmp
leave
push
je
repnz
fiaddl
push
ljmp
stos
test
loope
dec
mov
xchg
ds
aaa
leave
leavew
inc
jae
icebp
mov
test
stc
ljmp
sub
mov
in
leave
push
sub
mov
std
ss
push
leave
out
jl
mov
test
jmp
insb
sahf
xor
push
dec
pop
jmp
ret
lret
imull
rolb
cmp
pop
xor
into
into
out
ror
call
push
loope
or
lret
ret
jb
fldl
sub
dec
ds
call
push
js
notl
dec
psubsw
icebp
call
sub
dec
por
imull
push
dec
pminsw
icebp
call
sub
dec
verw
xor
clc
jmp
jp
out
xor
call
and
push
fsubrl
add
imul
loop
push
sbbl
in
jmp
jno
push
mov
mov
jp
mov
add
cmpl
jno
or
ss
incl
dec
add
dec
lods
clc
ret
lock
add
fistpll
mov
adc
rcr
imul
add
add
add
test
and
out
mov
add
mov
add
fildl
lock
mov
je
mov
ret
jle
clc
leave
push
inc
push
mov
and
dec
mov
leave
clc
movsl
pop
dec
adc
inc
mov
adc
dec
mov
adc
add
add
mov
cld
fldcw
mov
or
out
out
push
out
outsl
mov
mov
stc
fildl
lret
xchg
inc
hlt
add
out
jle
clc
js
shll
ret
into
shll
std
pop
loop
dec
ffree
mov
push
stc
ljmp
ret
stos
fsubl
xchg
and
movsb
cs
addb
add
dec
adc
shrb
in
in
test
fcmovnu
mov
aam
insb
dec
call
lds
ja
in
push
dec
int
lcall
jecxz
in
jl
mov
add
xchg
mov
jbe
mov
push
roll
sbb
push
lock
mov
jae
lock
faddp
jg
in
mov
paddsw
add
add
jmp
or
pmulhuw
popf
ret
stos
or
pxor
mov
mov
add
jo
aad
dec
mov
jbe
jns
adc
lret
or
add
pushl
lods
sti
insb
mov
mov
lret
testb
and
mov
jmp
mov
orl
divl
add
ss
nop
clc
cld
mov
jge
repnz
mov
divb
mov
jp
or
cmc
add
xchg
cmp
loopne
jp
mov
adc
xchg
jg
jmp
xor
add
call
ret
loopne
adc
push
call
clc
or
stos
cmp
or
stos
xor
sbb
mov
lahf
mov
ret
jl
jb
loop
cmc
add
test
jae
mov
jle
nop
int
pop
repnz
jp
flds
mov
mov
call
leave
inc
dec
push
mov
loopne
inc
lods
std
mov
lea
adc
add
add
ret
clc
or
fmull
push
mov
les
push
inc
fldcw
ds
mov
rcrb
scas
ds
sbb
push
xchg
lret
dec
mov
sub
cmp
mov
push
adc
imul
test
mov
aam
dec
adc
inc
xchg
cmc
stos
rorl
inc
movsb
out
jmp
out
ds
adc
stc
xchg
popa
jl
add
js
lret
or
add
push
jg
push
ss
jmp
mov
cmp
imul
sub
jb
icebp
roll
adc
jmp
loopne
aas
jle
cld
outsb
repz
mov
ror
add
ljmp
inc
fldl
out
and
stc
mov
cmpsl
jmp
jmp
lods
xchg
insb
out
movsl
mov
mov
jmp
add
div
mov
insl
add
outsl
mov
cs
les
ja
xchg
in
push
lret
aas
out
jmp
inc
inc
jecxz
add
jae
aaa
push
je
inc
push
je
inc
dec
je
inc
dec
je
aaa
push
je
daa
dec
je
cmpsl
inc
je
xchg
ja
je
xchg
push
xchg
insl
adc
add
mov
insl
or
in
insb
add
ljmp
dec
test
or
xchg
ror
add
iret
call
add
test
cmp
bound
mov
int
pop
cmovg
std
sub
sti
ret
clc
test
inc
push
jge
out
repz
leave
push
dec
sbb
push
inc
add
mov
add
or
mov
test
add
or
int3
stos
cmc
mov
mov
add
and
xchg
test
nop
or
sldt
add
mov
ljmp
mov
dec
xchg
repz
jecxz
test
add
lds
into
fadds
shl
jle
mov
sub
xor
sbb
adc
ret
hlt
add
adc
jne
repnz
jle
mov
mov
loop
push
js
push
sub
lock
add
add
rolb
xorb
pop
add
xchg
xchg
je
push
ljmp
sarl
stc
jle
js
jae
inc
xor
mov
stc
pop
pop
js
push
mov
inc
mov
cli
out
cmc
call
sub
ret
lret
xor
fistpll
insl
out
adc
push
inc
js
loopne
mov
add
js
and
repz
mov
or
inc
add
idivb
lret
mov
jp
mov
es
loopne
mov
mov
mov
ljmp
jne
dec
add
sub
insb
adc
mov
cli
sub
add
ja
clc
incl
add
add
mov
jl
jl
pop
cmc
inc
and
scas
inc
sbb
testb
test
push
pextrw
ss
cmp
testb
jl
call
subl
jae
jo
push
mov
daa
or
daa
adc
inc
into
cmpsb
ds
mov
mov
stc
mov
pop
inc
mov
mov
nop
cltd
xor
or
stos
dec
mov
stc
movsl
jle
mov
mov
or
aad
testb
mov
repz
lret
inc
sbb
dec
adc
mov
add
add
cld
cmp
fwait
stos
pop
test
jl
repz
fstpt
jmp
mov
mov
decl
push
xorb
icebp
xchg
mov
mov
lcall
das
lret
xchg
adc
dec
cs
mov
jmp
jno
repnz
push
mov
jecxz
inc
mov
lods
or
cmc
inc
cmc
sub
mov
ret
adc
push
out
out
jo
jle
out
jmp
add
cli
loope
add
add
mov
pop
pop
mov
mov
add
idivl
insb
andl
ret
loope
jmp
cmpsl
ljmp
mov
ja
and
jbe
cmp
mov
and
shl
dec
cli
shr
repz
adc
push
mov
push
jmp
xor
in
insb
out
icebp
or
push
shll
int3
mov
add
shlb
lock
push
flds
add
bnd
nop
in
mov
loop
mov
adc
sub
inc
outsl
jp
lods
cld
inc
call
lock
je
sbb
mov
adc
jne
ja
add
add
in
or
mov
add
add
js
jne
outsl
out
add
jne
cmp
adc
arpl
in
pmaxub
jne
sbb
add
mov
clc
decl
in
test
add
dec
aaa
sbb
addr16
add
mov
add
mov
or
mov
cld
mov
add
mov
add
mov
mov
popf
imul
mov
pop
cld
lret
add
mov
add
mov
cld
jne
adc
mov
add
mov
add
mov
cld
dec
stos
adc
mov
cld
cmp
lret
mov
cld
and
repz
push
mov
add
repz
lret
sbb
mov
in
out
mov
add
repz
mov
or
mov
add
repz
enter
adc
mov
add
repz
xchg
data16
jmp
add
mov
adc
mov
add
repz
adc
mov
jmp
mov
add
ss
aad
repz
add
add
imul
mov
add
mov
add
mov
mov
pop
mov
jmp
mov
add
sahf
repz
mov
add
mov
add
mov
repz
mov
add
mov
add
mov
icebp
xchg
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jno
dec
jno
lcall
hlt
call
jo
cmp
pushl
jo
cmp
pushl
hlt
decl
hlt
jmp
jo
dec
outsl
hlt
mov
mov
hlt
lcall
mov
hlt
incl
hlt
ljmp
hlt
call
mov
hlt
fstpt
hlt
incl
add
add
mov
hlt
incl
mov
lret
sub
cld
xor
pushf
add
mov
mov
cld
adc
inc
mov
cld
std
lea
cld
in
leave
mov
add
iret
sar
dec
ret
mov
sar
cmp
sar
add
add
ffree
cld
xchg
rol
cld
lea
sar
xchg
sar
pop
sar
inc
sar
fwait
add
mov
into
cld
push
hlt
jmp
outsl
inc
mov
outsb
ds
outsb
ss
outsb
cs
outsl
es
outsl
push
mov
outsl
push
mov
outsl
push
mov
outsl
push
mov
outsl
mov
outsb
divb
out
out
shrl
add
add
mov
outsl
mov
jo
mov
jo
mov
jo
mov
jo
mov
outsl
scas
mov
outsl
cmpsb
mov
outsl
sahf
mov
outsl
xchg
mov
outsl
mov
out
jle
sti
jo
mov
jo
mov
jno
mov
adc
fisubrl
idivl
scas
divl
scas
testl
lcall
add
movsl
scas
testl
jnp
div
jnp
test
jnp
imull
pop
scas
idivl
scas
mull
scas
imull
scas
testl
cmp
divl
sbb
mull
sti
scas
notl
sti
scas
testl
shll
push
and
incl
add
add
rol
hlt
jmp
hlt
jmp
hlt
lcall
hlt
ljmp
and
aas
and
jmp
cmc
call
sbb
cmc
jmp
sbb
cmc
ljmp
cmc
pushl
sbb
cmc
jg
cmc
ljmp
cmc
pushl
and
ljmp
sbb
sti
sbb
incl
add
add
cmc
decl
dec
imul
ds
adc
pop
sbb
cld
push
scas
push
dec
mov
push
cmp
cmpsb
push
sub
inc
addr16
sbb
or
fisubrl
add
and
adc
jne
cld
in
imul
subl
push
imul
shll
sti
fs
mov
lds
lods
push
outsl
cld
movsl
push
outsl
cld
popf
and
outsl
cld
bnd
xchg
pop
ja
lods
das
ja
lods
ret
jbe
lods
jbe
lods
iret
jbe
lods
xlat
jbe
lods
pop
jbe
lods
inc
jbe
lods
das
jbe
lods
cmp
lods
cmc
jne
lods
jne
push
lods
xorl
inc
jbe
lods
imul
cltd
jne
lods
lods
jne
add
add
lods
xchg
jne
lods
test
jo
lods
jmp
aam
lods
inc
aad
lods
pop
aad
lods
jmp
add
jae
add
repz
repz
scas
mull
inc
scas
testl
mov
add
and
not
adc
testl
scas
negl
repz
imull
jecxz
testl
inc
scas
divl
scas
negl
xor
test
adc
addb
scas
imul
add
test
jmp
hlt
jmp
addr16
decl
out
add
inc
insl
hlt
pushl
insl
hlt
dec
insb
hlt
jmp
add
push
mov
incl
hlt
hlt
jge
hlt
lcall
mov
pushl
mov
jmp
mov
pushl
hlt
call
mov
jmp
mov
push
mov
call
mov
jmp
mov
jmp
mov
push
mov
call
hlt
ljmp
hlt
decl
push
sar
adc
cld
popf
cs
pop
mov
cld
test
jge
mov
cld
insl
cmpsb
mov
cld
pop
fidivrs
cld
dec
ds
cld
cmp
int3
mov
cld
and
mov
cld
adc
insb
mov
cld
std
dec
mov
cld
in
addr16
cld
fstl
add
aad
ret
cld
int
ret
cld
les
test
dec
les
test
pop
mov
adc
jle
inc
jbe
sbb
lds
mov
lds
aad
dec
test
pop
lds
test
aaa
lds
test
add
push
test
add
push
test
lahf
test
imulb
push
out
sub
rcl
add
lret
cmpsl
imul
lret
cmpsl
test
lret
xchg
lret
or
cmpsl
mull
cmpsl
idivl
lret
cmpsl
testl
cmpsl
testl
dec
cmpsl
neg
inc
cmpsl
test
inc
cmpsl
mull
dec
cmpsl
test
mov
add
push
cmpsl
neg
aas
cmpsl
divl
mov
add
cmpsl
imul
fisubs
idivl
fldenv
negl
cmpsb
testl
arpl
hlt
std
ret
hlt
jmp
mov
hlt
lcall
push
call
hlt
incl
hlt
decl
hlt
fildll
loope
hlt
cmp
pushl
insl
hlt
incl
insl
hlt
pushl
add
daa
pop
hlt
incl
pop
hlt
jmp
add
push
repz
sbb
add
fcomip
add
ljmp
out
repnz
mov
add
or
add
or
scas
cld
int
add
or
add
or
cld
lods
sub
scas
cld
popf
adc
add
lcall
or
mov
cld
insl
cmpsb
add
or
add
mov
sar
dec
in
cld
inc
sar
cmp
ljmp
and
ljmp
or
int
std
repnz
aad
movsl
rcl
out
movsl
aad
out
repz
movsl
jmp
mov
movsl
insl
mov
movsl
jne
mov
movsl
sub
cmpsb
movsl
out
mov
movsl
in
xchg
movsl
mov
add
and
xor
sub
pop
add
and
and
push
sub
mov
and
cmp
adc
add
lret
push
cmp
add
add
cmp
adc
mov
add
adc
pop
fwait
stos
push
je
mov
add
cmpsl
or
mov
pop
xchg
bound
inc
arpl
inc
add
xor
imul
dec
pop
inc
jae
mov
sub
bound
test
repz
leave
and
stos
sbb
jbe
pop
or
cmp
xchg
inc
jae
push
data16
mov
jge
xor
in
addr16
out
cmp
das
std
push
fs
pop
push
jb
loop
push
jecxz
mov
adc
xor
out
testb
shrb
loope
inc
push
loope
jb
out
xor
outsl
push
fs
push
jb
add
add
outsl
inc
mov
in
jb
or
mov
mov
popa
xchg
dec
outsl
pop
or
jg
and
jo
ljmp
xor
mov
loopne
arpl
add
mov
add
mov
daa
arpl
xor
mov
pop
pop
push
pop
jbe
or
mov
add
jae
inc
gs
push
add
add
pop
jns
arpl
sbb
sub
mov
pop
je
dec
sbb
mov
fimuls
inc
and
and
sbb
jmp
in
xor
repnz
lods
mov
sbb
cld
cld
ss
pop
pop
aam
inc
outsb
mov
sbb
mov
aad
mov
rep
adc
movsb
or
sbb
add
add
mov
jae
ljmp
adc
push
dec
sub
add
notb
adc
xor
ss
pop
sub
dec
sub
dec
pop
mov
mov
sub
sbb
push
and
bndstx
fbld
inc
xor
repz
push
lret
push
push
aaa
frstor
sub
inc
add
jmp
push
out
aaa
lods
adc
add
add
add
or
popf
repz
xchg
push
je
aas
shlb
jmp
mov
je
push
sbb
dec
and
mov
int
scas
scas
or
je
mov
cmpsl
jbe
pop
cmpsl
jb
insl
cmpsl
divpd
xchg
es
dec
inc
je
bound
or
arpl
insl
jmp
mov
dec
inc
pushf
adc
or
mov
insl
jmp
cmpsl
adc
dec
xlat
fs
inc
lret
arpl
hlt
inc
add
push
push
in
gs
or
xor
dec
add
aaa
lret
push
repz
rcl
push
jecxz
sbb
cs
jo
add
into
outsw
cmc
loop
outsb
aas
jmp
popa
jae
hlt
jmp
add
insb
gs
jecxz
arpl
pop
dec
push
data16
jae
fldl
stos
loope
gs
imul
fsubs
mov
pop
push
mov
cmpsl
mov
push
arpl
divl
je
or
add
mov
arpl
ret
or
cwtl
mov
imul
add
bound
decb
ja
ja
outsl
or
pop
sub
push
cmp
daa
cmp
dec
xor
je
cmp
push
mov
dec
mov
xor
xor
out
std
ret
pop
je
repz
hlt
sbb
sbb
pop
and
mov
cli
pop
xlat
sbb
dec
frstor
testb
notl
aam
add
add
mov
daa
mov
add
scas
inc
jae
mov
sub
mov
cmp
movsb
and
andl
gs
xor
adc
cmp
xor
gs
and
push
sbb
sub
cli
and
jmp
add
mov
adc
cmp
or
lcall
cli
mov
or
add
jns
fs
add
inc
push
jne
aad
and
sahf
xor
mov
fwait
mov
or
push
inc
mov
mov
insl
je
sqrtps
daa
pop
mov
xchg
cld
outsl
or
inc
cmp
pop
or
incl
add
sti
arpl
int3
push
addb
gs
data16
lock
je
xlat
fs
inc
int
gs
add
dec
gs
add
inc
lret
add
outsb
repnz
gs
add
jb
insb
gs
or
lret
gs
sub
std
add
add
jmp
jae
add
cli
int
add
ljmp
cmp
add
nop
testl
xor
cmp
push
mov
push
imul
enter
das
adc
mov
ljmp
add
pop
fiaddl
add
cwtl
dec
pop
lods
lock
repnz
imul
or
das
arpl
cmpsl
inc
pop
outsl
scas
sub
mov
std
cmp
scas
and
sub
insl
punpckhwd
sub
mov
adc
push
add
mov
je
repz
xor
xor
sbb
dec
pop
push
adc
mov
test
sub
or
daa
mov
pop
add
adc
cmp
or
xor
pop
add
lret
adc
inc
movsl
pop
std
xor
add
add
repz
or
pop
cltd
adc
inc
cmpsb
pop
mov
pop
push
adc
sub
adc
pop
arpl
mov
dec
adc
inc
push
pop
pushf
sub
es
inc
ljmp
pop
jae
je
inc
jmp
jge
jae
arpl
push
mov
sbb
or
mov
add
add
swapgs
mov
add
je
push
adc
and
mov
add
fwait
pop
insl
add
and
insl
or
jne
inc
shll
dec
xor
dec
sbb
dec
or
popf
or
scas
sgdtl
movsl
or
cmpsb
sqrtps
sbb
outsl
add
repnz
outsl
sub
add
add
roll
pop
out
and
insb
shrb
add
into
loopne
jae
shrb
vpunpckhwd
in
inc
gs
in
jb
imul
icebp
inc
gs
loopne
jae
shrl
mov
push
jne
add
into
push
ds
popa
gs
inc
add
shrb
int3
push
gs
add
shlb
iret
in
inc
gs
sub
dec
arpl
iret
arpl
imul
pop
mov
xchg
je
insl
sub
mov
rorb
sub
daa
sub
fstl
pop
aas
push
inc
add
pop
je
fsts
outsb
into
das
and
add
push
ret
enter
mull
popa
scas
mov
lret
pop
je
add
les
and
inc
sbb
add
add
mov
push
arpl
and
cmpsl
and
sub
es
cmp
repz
pop
adc
xor
pop
jnp
es
xchg
repz
add
pop
jnp
sub
inc
add
repnz
add
push
xor
sbb
fisubl
aas
and
ret
pop
fidivs
sbb
jecxz
sbb
add
hlt
es
mov
and
push
mov
or
test
repnz
adc
add
sub
dec
adc
mov
ja
mov
dec
test
aad
test
bound
mov
test
adc
mov
aas
gs
mov
pop
outsb
dec
mov
inc
lods
xor
inc
xchg
add
je
mov
std
cmp
lcall
pop
pop
jmp
imul
add
push
or
jnp
jns
mov
aas
add
int3
arpl
arpl
mov
xlat
pop
insb
push
lds
push
icebp
rolb
not
fs
add
pop
aam
imul
out
inc
gs
pop
insb
push
sub
cmp
insb
popa
aaa
imul
shll
lock
add
jae
sub
imul
rorb
xchg
int
push
pushf
push
xchg
out
mov
bound
leave
add
repnz
insb
mov
sbb
add
sub
mov
add
stos
adc
dec
pop
insb
imul
je
js
pop
daa
jns
dec
das
imul
mov
arpl
dec
and
sbb
idivb
xor
sub
and
mov
inc
pop
aaa
xor
pushl
imul
repz
arpl
lea
arpl
add
add
lock
push
mov
repz
and
dec
pusha
sbb
adc
mov
jae
ljmp
aas
xchg
gs
mov
xor
ljmp
and
adc
push
cmp
inc
xor
add
ljmp
and
clc
adc
pop
mov
pop
cmp
add
hlt
pop
sub
sbb
and
int
std
das
lods
and
or
xlat
add
popa
pop
pop
mov
scas
aas
push
shrb
add
inc
loopne
pushl
gs
movsb
adc
lcall
je
dec
repz
aaa
pop
popl
add
add
bound
jae
gs
inc
xor
lret
adc
pop
scas
adc
test
aaa
pop
dec
mov
add
test
in
add
addr16
gs
sbb
push
jb
fcoms
ss
xor
imul
cmc
dec
add
fsubl
xor
arpl
icebp
push
jae
into
add
iret
testb
fistl
push
cmp
pop
in
mov
out
iret
xor
push
adc
push
inc
mov
fisubl
fcoml
mov
aaa
add
inc
ja
jmp
push
lahf
aam
add
hlt
cmp
lea
cmp
cmpsb
imulb
popf
std
cmp
mov
jae,pt
lea
outsb
mov
jne
inc
sarb
fs
jno
dec
and
lcall
outsl
mov
add
mov
arpl
push
sub
jnp
arpl
add
mov
je
pop
dec
js
dec
std
dec
daa
aas
push
dec
out
sub
pop
in
cmp
mov
cmp
imul
enter
repz
xlat
sbb
inc
mov
and
adc
repz
aam
lcall
scas
pop
add
adc
mov
push
push
push
add
and
leave
pop
imul
es
loope
dec
sbb
push
xor
ljmp
aaa
stos
add
cmc
cmpsb
es
sub
cmp
adc
xor
daa
jmp
dec
xor
add
add
sbb
sbb
add
int
cmp
aaa
add
insl
jbe,pt
add
aaa
pop
pop
rcrb
jae
data16
add
pop
pop
rcrb
pusha
sbb
push
xchg
mov
cltd
pop
outsb
fldt
pop
mov
stos
add
stos
mov
add
popf
adc
popf
je,pn
dec
or
mov
add
jbe
bound
mov
pop
ret
add
mov
repz
xchg
pop
add
popa
mov
in
pop
push
xchg
out
push
xor
cmp
pusha
out
push
jb
in
dec
gs
add
dec
icebp
xor
outsl
adc
push
repz
stc
pop
je
lock
sub
gs
lret
lock
jb
out
jno
adc
add
fdivp
dec
jo
out
push
imul
in
push
mov
jge
in
insb
push
adc
dec
shr
arpl
into
push
mov
push
imul
jmp
adc
ss
arpl
lcall
mov
add
add
lcall
pushf
sub
scas
push
jo
lcall
pop
test
pop
outsl
dec
adc
mov
maxps
push
push
push
cmp
das
dec
adc
es
packuswb
push
add
push
push
out
dec
xor
adc
sbb
sbb
add
hlt
es
pop
push
adc
adc
dec
jmp
add
add
cmc
cmp
mov
adc
adc
add
sbb
repz
add
add
sahf
es
sbb
and
add
adc
pop
dec
sbb
add
xchg
xor
sbb
cmp
adcb
adc
xor
mov
das
push
mov
mov
add
mov
bound
adc
lahf
add
dec
xchg
sbb
add
lods
sbb
je
scas
push
push
jmp
fwait
and
pop
jb
jo
mov
add
gs
je
addr16
dec
adc
push
cmpsl
mov
pop
fnsave
add
lcall
mov
jp
addr16
mov
cmpsb
insb
decl
lahf
punpckhbw
jbe
add
mov
add
xor
adc
inc
outsl
add
cmc
inc
gs
pop
outsb
iret
in
jno
vpunpckhwd
iret
out
inc
gs
mov
insb
add
push
outsl
and
mov
les
add
les
in
jno
mov
insb
add
out
dec
popa
add
pop
jb
jecxz
insb
cmp
outsl
push
jecxz
xor
xor
push
jb
in
gs
add
shr
inc
gs
push
outsl
adc
cmc
roll
push
or
imul
and
pcmpeqb
pop
cmp
sub
pop
stc
lcall
cmp
je
and
fstpl
and
add
and
adc
add
idivb
arpl
adc
dec
addr16
jle
sbb
mov
decb
lods
pop
push
jb
and
push
and
mov
add
repz
and
ss
cmp
xchg
and
xor
adc
jmp
and
test
stc
and
notb
ljmp
add
add
add
add
ds
add
and
adc
add
repnz
inc
pop
ficoml
and
add
sbb
repnz
xor
add
adc
adc
cmovns
ljmp
cmp
push
jno
mov
add
scas
imul
outsb
mov
adc
xchg
sbb
mov
mov
add
cmp
xchg
repz
cmp
mov
jp
xchg
es
lahf
jmp
jge
add
mov
xor
cmp
add
mov
insl
or
and
jge
jo
jne
je
imul
jmp
mov
sub
mov
je
stos
adc
mov
add
push
fbld
ret
inc
int3
fisttps
push
pop
jo
in
bound
in
je
repnz
fistps
pop
ret
pop
outsb
pop
jmp
add
shll
shrb
out
aas
outsb
shlb
shrb
shrb
lock
shl
inc
fs
rolb
add
jmp
gs
jecxz
add
repnz
outsl
jbe
pop
arpl
add
leave
arpl
fstl
mov
and
mov
inc
outsl
inc
es
scas
push
jno
add
ds
push
jno
jne
popa
cmp
cmp
push
inc
sbb
push
cmc
jae
je
test
dec
in
and
cmp
arpl
int
je
add
add
xor
imul
pushf
pop
insb
sahf
lcall
lods
lret
test
cmc
sbb
lcall
pop
repz
aas
dec
inc
pop
inc
push
insb
sbb
or
repz
adc
pop
jle
add
sahf
and
and
inc
sbb
xchg
push
sbb
outsb
or
adc
div
xchg
add
sbb
jecxz
cmp
adc
in
adc
into
repz
test
add
sbb
sub
pop
mov
ljmp
push
cmc
adc
sidtl
push
dec
or
faddl
test
sbb
lea
push
mov
movsb
adc
mov
lahf
sbb
push
adc
je
imul
lds
scas
pushf
pop
inc
test
sbb
mov
jno
movsb
push
jae
insb
or
or
pop
push
mov
jno
addr16
insl
and
push
or
data16
idivb
jo
add
add
mov
insb
dec
mov
cmc
xor
inc
into
loop
jb
in
cmp
add
jecxz
jo
shll
in
jns
aam
push
loopne
outsl
jo
mov
gs
div
cmpsl
add
mov
jno
mov
mov
jg
push
xor
mov
jo
add
add
bound
fs
imul
std
cmp
repz
jae
jl
pop
jbe
les
repnz
mov
jbe
cmpsb
lret
pop
pop
mov
pop
pop
stos
add
das
scas
out
sub
cli
imul
add
sbb
cs
repnz
push
cld
in
in
pop
in
aad
add
mov
leave
sbb
pop
fidivs
enter
hlt
push
mov
decb
xor
jb
mov
cli
iret
ret
sub
push
call
lods
push
add
test
sbb
mov
push
inc
jno
sti
call
jo
mov
idivl
adc
fcmove
jg
add
adc
mull
mov
call
sbb
popf
call
and
jg
add
call
pop
jno
call
add
out
aaa
dec
in
repz
add
push
push
cli
test
cs
add
inc
cmp
inc
daa
add
and
cmp
add
add
xor
or
add
add
cmp
add
add
ret
lods
mov
fnstsw
adc
je
mov
jno
mov
or
arpl
fs
lahf
adc
je
jg
jno
jp
push
mov
add
mov
jb
imul
imull
inc
and
cmp
xor
popf
mov
xor
jge
xchg
xchg
jae
xchg
xchg
push
test
inc
jo
add
add
notl
pop
mov
lea
dec
popa
out
xchg
push
add
icebp
push
popa
mov
jae,pt
test
push
jecxz
addl
xchg
jae
and
xor
insb
adc
jo
hlt
jnp
jae
xchg
pop
mov
or
jno
or
xorl
notl
add
aaa
in
dec
mov
add
fcmovu
jae
ret
repz
mov
mov
add
mov
call
bound
push
mov
fnsave
aam
imul
repnz
dec
stc
cld
dec
sub
jmp
xor
out
push
mov
jmp
sub
clc
push
sub
insb
fisttpll
out
insl
fmuls
insl
lret
mov
pop
mov
cmp
out
xor
int3
and
add
cmp
mov
push
repnz
loop
movl
sbb
and
pop
sbb
mov
repz
add
pop
cld
ret
sub
repnz
pop
xor
repz
sub
in
or
shlb
add
add
and
add
cltd
in
or
in
sbb
test
and
test
cmp
xchg
add
adc
jmp
adc
loop
add
sbb
mov
dec
aaa
pop
dec
insl
pop
pop
aas
imul
idivl
sub
sub
xor
aas
jnp
mov
fs
push
cli
icebp
and
adc
add
add
or
cli
ljmp
mov
mov
push
add
mov
imul
movsb
pop
outsb
mov
and
out
mov
lea
test
inc
add
nop
jno
arpl
mov
adc
push
push
ret
push
arpl
inc
dec
outsb
mov
pop
insb
out
adc
pop
xchg
push
jb
jg
dec
mov
decl
testb
test
ljmp
pusha
gs
sbb
lods
xchg
jae
rclb
inc
mov
xchg
push
jne
ret
es
mov
shl
xor
popa
call
push
outsb
mov
incl
push
in
in
out
data16
ljmp
add
add
add
add
mov
inc
mov
jmp
in
icebp
data16
out
scas
mov
in
mov
add
mov
jmp
mov
icebp
stos
fsubp
jne
iret
hlt
decl
out
fnsave
insl
outsl
jmp
dec
pop
rol
imul
imul
loopne
cmp
pop
sub
loopne
mov
fsubrl
loopne
inc
repz
loopne
repz
add
mov
ljmp
jg
cmc
repnz
add
xor
lahf
repz
cmpsb
pop
dec
add
repz
test
ss
or
out
push
sub
cltd
push
or
add
push
push
loope
push
daa
out
push
or
in
mov
mov
dec
xor
adc
xchg
cmpsb
int3
ja
mov
mov
idiv
mov
pop
stos
mov
push
arpl
xor
add
lcall
arpl
mov
add
push
adc
xor
mov
cs
add
dec
dec
push
jno
xchg
pop
adc
sub
call
inc
adc
test
jae
lret
xor
push
add
jae
les
fs
jne
mov
cmp
inc
gs
movsb
pop
gs
push
addr16
pushl
xor
int3
pop
insb
mov
mov
add
mov
addr16
push
push
bound
mov
aad
bound
xchg
arpl
mov
and
jg
xchg
xchg
jae
xchg
push
push
mov
jae
mov
arpl
fs
xor
int3
ds
test
insl
daa
cmp
push
xor
ss
mov
insl
out
imul
pop
imul
pop
int3
ds
hlt
imul
sub
decl
cld
push
fxch
shrl
mov
insl
mov
mov
lcall
lret
lds
fsubrp
incl
lret
ret
imul
inc
je
fidivs
aad
sub
outsb
repz
int
out
add
sub
mov
cmp
and
add
stos
loopne
jmp
loopne
push
pushf
out
in
and
filds
loopne
je
add
add
lock
cmp
mov
je
add
cmp
pop
pop
aaa
repz
push
out
push
ljmp
lcall
js
sub
pop
call
fisubrs
or
adc
es
fistl
add
mov
fldt
or
enter
les
push
bound
popf
adc
mov
cmp
jge
jb
cmp
addr16
mov
jmp
pop
ljmp
daa
out
dec
cmp
imull
cmp
push
sbb
and
add
mov
pop
pop
ljmp
add
mov
inc
repz
arpl
jb
bound
cmp
idiv
div
dec
je
inc
gs
inc
gs
bound
mov
push
mov
pop
jae
and
je
push
jae
pop
push
jae
lock
pop
push
push
arpl
add
add
xor
aas
outsb
scas
push
outsb
into
arpl
into
outsb
inc
ret
inc
insl
push
pop
insb
rclb
gs
mov
gs
bound
push
mov
in
imul
ds
add
push
lock
outsl
sti
loopne
arpl
inc
jg
inc
sub
insl
and
out
daa
mov
outsl
push
inc
fsubrl
pop
add
add
add
lods
imul
jg
jae
pop
add
in
frstor
jae
out
jae
int
pop
mov
ficomps
mov
pushl
cs
dec
scas
shr
cmpsl
sub
bound
hlt
adc
loope
clc
mov
div
push
add
es
mov
lret
mov
imull
ljmp
aas
repz
sbb
test
sub
hlt
sbb
mov
out
in
fidivrl
mov
rep
xlat
test
call
out
call
fidivs
xor
mov
out
stc
test
inc
ret
mov
push
jecxz
mov
jmp
sub
pop
sbb
add
add
aam
sub
fldenv
in
jecxz
jmp
call
aam
sbb
aam
lock
test
dec
jmp
mov
aam
fwait
mov
insl
les
add
imul
scas
jns
data16
loopne
mov
imul
stos
push
into
arpl
mov
pop
pop
sub
insb
cmp
fsubrs
xor
pushl
dec
insl
ss
cs
push
imul
xor
mov
and
int
imul
add
push
gs
xchg
outsb
test
repnz
xlat
xor
loope
popa
data16
push
idiv
pop
testl
shll
dec
inc
aaa
xor
push
sub
fs
dec
idiv
dec
repnz
xlat
xor
shll
jb
xor
loope
fs
push
int
mov
push
leave
dec
into
pop
add
add
loop
add
or
in
neg
push
or
jmp
cmp
addr16
pop
add
xchg
push
aas
out
mov
dec
in
bound
add
add
cmp
imul
push
xchg
repz
jge
lcall
mov
data16
cld
pop
filds
add
mov
rep
mov
dec
clc
stos
repz
shl
pop
ficomps
aad
add
lock
stc
mov
insl
rorl
or
gs
add
pop
jecxz
out
out
add
add
jmp
jmp
push
fcmove
fldl
ficomps
filds
pop
fcmovnbe
sbb
mov
clc
sub
jmp
call
call
fidivrl
fnstsw
fiaddl
enter
mov
fadds
dec
xchg
mov
fs
push
fldt
and
jb
mov
adc
jo
adc
push
sbb
iret
imul
test
outsl
adc
pop
std
enter
mov
insb
mov
mov
shlb
fstps
iret
cmp
mov
data16
imul
lea
push
add
push
inc
js
pop
addr16
dec
imul
out
pop
add
arpl
push
imul
add
and
add
repz
repz
jecxz
add
jecxz
add
repz
repz
jecxz
add
jecxz
add
mov
add
mov
add
mov
testb
mov
add
mov
add
mov
add
add
testb
jae
add
arpl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
repz
daa
lret
and
repz
add
repz
sbb
repz
lret
add
repz
add
repz
lret
add
add
add
repz
add
lods
cmp
mov
leave
add
or
add
repz
jmp
push
repnz
repz
test
add
repz
imul
mov
add
mov
add
mov
add
repz
mov
add
mov
add
jmp
repz
mov
add
popa
cmc
inc
jmp
mov
add
ja
inc
jmp
mov
add
add
inc
jmp
mov
add
dec
sti
inc
jmp
mov
add
sub
repz
mov
cmpb
inc
jmp
mov
lcall
jae
mov
inc
arpl
add
mov
dec
inc
inc
jecxz
mov
add
pop
inc
mov
testb
ret
xchg
jo
add
dec
popf
xchg
inc
into
jb
jb
scas
inc
insb
sbb
cmpsb
sbb
ds
jnp
les
mov
mov
outsl
mov
inc
jg
pop
push
les
mov
rcl
jnp
imul
add
ss
dec
dec
jnp
jno
sbb
mov
andl
hlt
or
and
punpckhwd
inc
cmc
into
icebp
mov
faddp
jb
enter
rcrb
mov
pushf
int3
pop
adc
addl
and
jecxz
enter
je
ljmp
ss
mov
mov
fidivrl
add
ss
outsl
xor
pop
test
loope
and
push
and
repnz
test
and
jge
jle
ret
leave
aas
push
repz
push
cmp
aaa
jbe
cltd
mov
repz
and
cmpsb
jbe
fildl
into
add
cld
mov
and
push
or
add
add
xchg
movsb
lahf
and
cmp
jge
and
sub
mov
popa
mov
and
imul
fsubl
cmc
mov
mov
aaa
jnp
mov
cmp
add
add
push
js
xorb
test
pop
xor
cmp
je
and
aaa
push
fcompl
xchg
out
jge
mov
nop
jmp
push
decb
faddl
push
shll
icebp
icebp
les
andl
push
sbb
jmp
cwtl
xor
ret
cmp
movsl
nop
mov
pop
call
sub
in
inc
lods
xchg
mov
mov
add
subb
nop
scas
and
cmp
lods
mov
xor
inc
cwtl
inc
ljmp
sub
adc
add
rol
movsl
sarb
xchg
mov
xchg
pushf
bound
jne
scas
in
jb
adc
adcb
xchg
xchg
xlat
nop
dec
add
mov
in
mov
xchg
aas
mov
in
mov
xchg
aas
mov
xchg
aas
mov
mov
aas
mov
mov
mov
aas
mov
mov
mov
aas
mov
aas
mov
lea
mov
aas
mov
xchg
aas
mov
xchg
aas
mov
xchg
aas
mov
lea
mov
add
mov
mov
cmpsl
repz
icebp
lahf
repz
add
repz
add
repz
add
repz
xor
jmp
add
rep
xor
repz
add
repz
add
repz
insl
repz
add
repz
dec
repz
add
repz
and
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
and
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
and
jmp
mov
add
mov
add
mov
add
jb
add
mov
add
mov
add
mov
add
xchg
and
jmp
mov
add
mov
add
and
add
repz
repz
jecxz
add
adc
add
repz
jecxz
add
scas
mov
add
mov
add
mov
mov
add
mov
add
mov
mov
add
jae
add
arpl
add
mov
repz
jae
add
arpl
add
dec
or
add
repz
xor
add
and
add
dec
adc
add
repz
xor
add
mov
mov
daa
mov
mov
mov
mov
es
mov
mov
mov
add
mov
mov
mov
and
mov
mov
mov
mov
add
mov
mov
mov
and
add
dec
add
mov
and
add
dec
add
mov
jmp
add
add
add
repz
add
repz
movsb
repz
add
repz
das
test
jmp
add
repz
cs
add
repz
cs
repz
add
repz
cmpsl
repz
add
repz
call
xchg
jmp
add
repz
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jbe
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
lock
and
add
and
add
mov
aaa
add
lock
and
add
and
add
xchg
add
add
out
add
jecxz
add
jecxz
add
mov
cmp
repz
add
jecxz
add
jecxz
add
daa
in
aaa
add
add
add
out
add
mov
cmp
mov
add
mov
out
add
add
add
add
arpl
add
arpl
add
fadds
cmp
jae
add
arpl
add
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
dec
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
aas
mov
mov
mov
mov
push
cmp
mov
mov
mov
mov
jmp
add
repz
mov
jmp
add
add
add
repz
add
repz
pop
mov
repz
add
jl
aad
repz
jno
repz
jb
repz
jno
repz
jno
repz
jno
repz
repz
jno
rep
jno
repz
jno
repz
mov
add
mov
add
mov
add
mov
add
cmp
in
mov
add
lahf
cmp
nop
daa
cmp
orb
adcl
ja
cmp
dec
pop
mul
mov
add
cmp
pop
xchg
add
jns
xor
jns
xor
jns
cmp
cmpsl
jnp
inc
lahf
pop
cmp
mov
cmp
jg
cmp
add
add
jne
ja
lea
cmp
cmpsl
stc
les
xchg
stc
aam
xlat
stc
in
xchg
stc
hlt
cmp
add
push
stc
adc
push
stc
and
push
stc
xor
out
inc
cmp
stc
push
cmp
stc
cmp
stc
test
xchg
stc
xchg
cmp
stc
movsb
cmp
stc
mov
daa
stc
les
pop
stc
aam
xlat
clc
in
pop
stc
hlt
cmp
incl
xlat
call
xlat
jmp
xlat
pushl
addr16
inc
cmp
sti
push
cmp
sti
fs
pushl
add
cmp
push
bsf
add
fsubl
and
cld
xchg
dec
sbb
pusha
sbb
sub
sub
inc
sbb
mov
dec
outsl
sbbb
addr16
sbb
jl
push
bsf
orb
cmpsl
sub
in
lahf
mov
sbb
pusha
sbb
sub
sub
inc
sbb
or
dec
insb
add
pop
fs
sbb
gs
adc
xchg
cs
sbb
adc
inc
sbb
sbb
out
jle
out
sbb
add
add
into
sbb
cmpsb
sbb
push
xchg
scas
push
outsb
sbb
adc
xchg
cs
mov
ss
cmpsb
sbb
adc
scas
sbb
adc
loope
mov
in
mov
out
adc
and
sub
jle
xor
jns
xor
cltd
xlat
xor
xor
add
add
xchg
jne
repz
cmp
pop
mov
add
xchg
pop
cs
scas
sub
movsl
jl
sub
jne
outsl
sub
test
sub
xchg
fwait
das
sub
movsl
fwait
dec
sub
fisttpll
pop
das
loope
pop
das
sub
cmp
add
imul
ss
in
ss
in
aaa
in
aaa
jg
sub
xchg
in
aaa
lahf
in
aaa
xchg
inc
aaa
pop
in
aaa
aaa
in
aaa
jmp
pop
aaa
pop
in
aaa
jmp
shlb
jg
add
xor
ljmp
add
dec
negl
cmp
and
dec
imull
cmp
divb
cmp
cmp
cmpsl
testb
testb
negb
mulb
add
add
negl
xor
cld
cmp
pop
sbb
cmp
xor
xor
cmp
or
popa
adc
push
cli
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lahf
pop
sbb
xchg
sub
sbb
cmp
sub
sbb
ja
sbb
outsl
cmp
inc
test
dec
pop
insb
sbb
sbb
push
aam
xor
pop
mov
mov
or
test
js
mov
enter
repz
adc
rclb
sahf
adc
lods
push
cmp
adc
add
adc
add
adc
mov
add
xor
outsl
add
popa
adc
push
hlt
rsm
pop
hlt
sldt
add
ljmp
adc
mov
push
jl
stos
push
or
push
ret
push
mov
jg
sahf
or
js
arpl
or
gs
or
push
push
push
or
add
mov
xor
add
sub
mov
and
scas
jl
sub
jp
dec
sub
out
add
add
cs
xchg
in
add
das
jg
das
add
movsb
xchg
cs
jg
mov
ret
cs
xchg
mov
jo,pn
jge
pop
imul
xchg
inc
jg
cs
mov
xor
lods
nop
cmp
sahf
nop
daa
add
out
fidivl
shr
call
ss
hlt
add
add
mov
add
mov
in
push
aaa
pushf
in
sbb
mov
in
cmp
fsubrp
ss
fs
inc
aaa
inc
in
push
aaa
dec
in
pusha
aaa
inc
in
pop
aaa
sub
insb
aaa
dec
in
jp
out
jle
mov
in
popf
aaa
loope
mov
aaa
outsl
in
aaa
js
loopne
and
out
aaa
sbb
add
sub
sbb
cmp
xchg
cmp
add
add
mov
mov
or
mov
or
mov
add
push
mov
pop
add
and
add
mov
pusha
xor
aas
push
out
pop
push
push
sti
pop
movsb
sarl
sbb
scas
aam
xchg
cmpsb
adc
adc
adcb
movsl
adc
test
adc
mov
sub
sub
dec
pop
test
lds
or
pop
mov
add
sbb
or
pop
sbb
xchg
pop
mov
mov
cmc
add
adc
inc
or
or
or
or
or
or
or
or
mov
rorl
cmp
cmc
push
fists
push
sldt
add
mov
or
mov
jae
cmp
inc
adc
ljmp
rep
adc
add
out
clc
adc
adcb
add
push
ljmp
rcrb
shrl
jne
mov
je
cs
jae
das
xor
cs
xchg
fs
nop
mov
cmp
xchg
in
push
popl
xor
add
fwait
outsb
ss
fwait
repz
leave
dec
mull
repz
mov
dec
js
xor
popf
shrl
popf
call
sub
add
ljmp
mov
jmp
aaa
enter
mov
cmpl
jmp
cmp
add
add
sti
cmp
call
cmp
imul
and
xchg
cmp
inc
cmp
decl
cmp
stc
jl
das
stc
aam
clc
sarl
clc
sub
jecxz
cmp
loop
aas
jae
clc
call
lock
movsl
out
xor
xchg
mov
in
xor
jmp
xor
mov
sbb
into
sbb
add
add
sbb
ja
mov
push
psubd
or
add
mov
xlat
pop
and
sub
inc
int
add
adc
xchg
jnp
or
pop
mov
or
pop
jb
or
adc
lods
adc
mov
xor
imul
sbb
movl
add
add
add
add
mov
sti
jns
sti
pop
imul
pop
jbe
mov
pop
sar
pop
stc
jmp
jmp
add
pop
sar
mov
sar
mov
push
mov
jecxz
jbe
mov
sub
add
pop
xchg
je
je
insb
adc
or
or
or
or
or
or
add
add
pop
cmp
aam
cli
or
or
push
insl
dec
lods
add
add
adc
add
xor
test
xchg
fisubrs
xchg
cmp
dec
xchg
aaa
cs
jl
xor
jbe
xor
jle
das
scas
jbe
das
nop
sahf
stos
das
adcb
das
xchg
xchg
cmp
leave
jle
cmp
fidivrl
movsb
addl
setae
add
divl
jle
xor
mov
cld
js
xor
jnp
xor
cwtl
ja
dec
fwait
xorl
fwait
dec
xor
lcall
mov
call
jecxz
xor
jecxz
xor
mov
loopne
xor
loopne
xor
loope
xor
hlt
ss
fistps
outsl
std
cmpsl
cmp
add
add
push
arpl
mov
adc
scas
cmp
stc
xlat
cmp
clc
clc
cmp
lock
sti
inc
cmp
sti
push
cmp
sti
jp
xor
xchg
cmp
sti
mov
cmp
cld
loope
mov
sti
xor
sahf
cli
dec
cmp
mov
sti
cmp
pushf
in
pop
xchg
cmp
jp
lods
or
jge
or
insl
in
out
gs
repz
sbb
cmp
pop
pop
int3
adc
mov
mov
jle
cli
push
and
rorb
cwtl
imul
jns
push
pop
jle
pop
dec
ja
adc
pop
pop
adc
adc
push
adc
mov
adc
xchg
mov
fisttpll
xor
push
push
jnp
mov
adc
or
or
pop
or
inc
dec
add
add
adc
add
adc
add
adc
add
scas
adc
add
adc
dec
add
or
pop
push
lock
push
mov
fcoml
add
adc
add
adc
lsl
jmp
add
adc
stc
sub
test
sub
xchg
into
sub
lea
aas
jp
sub
jp
sub
scas
mov
data16
cmp
scas
cmp
xchg
inc
jl
cmp
xchg
pop
cmp
mov
push
xchg
addb
xor
push
adcl
jmp
mov
add
sahf
sbb
aas
xchg
shlb
and
xor
xor
xorl
add
call
xor
loop
xor
loope
xor
loope
xor
xor
dec
xor
xor
mov
mov
cmc
push
xor
hlt
sahf
xor
hlt
into
xor
mulb
loop
pop
xor
lods
cmc
in
xor
mov
and
lods
cmc
inc
ss
pushf
ss
cmc
mov
ss
cmc
adc
insb
hlt
insb
aaa
push
hlt
enter
dec
cmp
mov
mov
add
gs
inc
add
ret
cld
add
inc
mov
or
mov
cmp
scas
xchg
cld
or
xchg
or
jae
aas
je
std
decl
xchg
add
pusha
or
pop
or
test
or
ret
adc
adc
adc
bound
mov
or
xor
or
add
jp
mov
rorl
push
push
or
push
push
or
add
cs
add
cmp
mov
jmp
add
add
adc
les
xchg
dec
push
mov
in
pop
jb
inc
or
adc
adc
popf
adc
or
adc
ja
jae
sbb
movswl
leave
pxor
xlat
psrlw
fisttpll
or
popf
push
cmpsb
or
mov
test
das
or
xor
xchg
cmpsb
das
sbb
sarb
gs
cmp
xor
lret
cmp
add
cmp
cmp
nop
pop
cmpl
fs
mov
push
xchg
push
xor
sub
mov
jae
xchg
xor
test
mov
sbb
ss
xchg
icebp
mov
cmp
shll
pop
xchg
aaa
add
jne
push
mull
add
cmc
add
xchg
in
xor
out
xor
popf
xor
in
xor
clc
xor
xor
in
xor
out
xor
out
xor
xchg
xor
adc
xor
add
add
jecxz
xor
icebp
or
pushf
out
fdivs
fucomp
jnp
jo
or
xor
cmp
sarb
outsb
in
test
lods
inc
cmp
sarl
mov
testb
dec
negb
sub
testb
clc
pop
jno
clc
jg
repz
add
jne
fadds
mov
pop
add
mov
add
mov
add
add
lahf
mov
add
test
add
mov
and
repz
sub
in
cmpsb
pop
adc
sarl
mov
in
fidivrl
repz
cmc
dec
add
or
div
add
idiv
push
insl
not
push
adc
and
mov
cld
inc
cli
dec
std
aas
cld
xchg
add
aas
leave
add
pop
pop
stc
mov
push
or
stos
cld
jns
cli
cli
adc
xchg
cmp
xor
mov
inc
cmc
insb
add
mulb
stos
mull
or
pop
add
push
cli
popf
sti
add
cmp
loope
cmp
fst
ss
mov
ss
mov
ss
mov
outsb
mov
outsb
mov
pop
mov
dec
mov
dec
mov
ss
mov
ss
mov
ss
mov
ss
mov
mov
pop
ss
mov
pop
mov
dec
mov
out
mov
aaa
out
mov
aaa
fimuls
loopne
into
mov
cmp
mov
cmp
mov
cmp
mov
cmp
sub
cmp
aas
or
dec
aas
adc
push
aas
dec
hlt
pop
aas
inc
hlt
gs
sub
insl
aas
push
hlt
jne
sub
jge
and
add
mov
icebp
add
cwtl
inc
or
nop
inc
adc
cwtl
inc
sbb
push
inc
and
pop
inc
sub
xor
xor
inc
cmp
mov
inc
xor
inc
dec
xor
inc
push
xor
inc
pop
xor
pusha
xor
add
add
push
xor
inc
js
mov
xorb
inc
mov
nop
inc
nop
xor
test
repz
stc
repz
add
mov
lcall
aam
pop
out
pop
add
or
push
sti
pop
popa
sti
xchg
popa
lods
sti
lods
push
sar
lret
sti
push
movb
mov
add
add
pop
add
add
or
in
lock
and
clc
enter
jmp
repz
repz
iret
repz
add
hlt
popl
aam
adc
add
cmc
add
int3
mull
cmp
inc
add
test
and
mov
stc
pop
stc
popa
stc
iret
clc
sar
clc
ja
cmp
mov
ret
cld
cmp
cmp
stos
pop
sti
cmp
fs
add
add
repz
icebp
jae
std
repnz
test
sbbl
push
adc
aas
cs
lock
hlt
hlt
adc
mov
icebp
sarb
js
add
add
cmp
xor
repz
cmp
rol
lock
mov
cmp
mov
xor
mov
xor
mov
sub
aaa
arpl
aaa
jmp
xchg
add
pop
lods
xor
pop
clc
xor
inc
push
sub
xor
sub
ss
inc
lret
aaa
and
pusha
cmp
add
add
cmp
dec
cmp
cmp
cmp
lret
cmp
cmp
cmp
jne
idiv
jecxz
idiv
push
testb
imul
xor
inc
repz
inc
mov
cs
xor
inc
cli
xor
inc
cmpsb
xor
inc
dec
xor
ret
inc
mov
es
sbb
addb
mov
cwtl
add
add
sub
mov
aaa
mov
in
gs
sti
add
sti
jae
xor
mov
stc
sbb
int3
test
movb
mov
leave
idivb
movsb
sbb
pop
pushf
sub
das
xchg
fsqrt
cmp
cli
into
jl
cli
dec
jne
sti
repnz
dec
xor
movsl
push
decl
mov
add
pop
out
out
out
daa
mov
into
out
mov
cltd
pop
out
fstpl
repz
sar
out
mov
jns
sbb
test
loope
xor
sar
icebp
jb
sahf
icebp
or
sub
adc
mov
div
mov
mov
push
add
repz
int
test
test
push
sti
imul
adc
or
je
es
int3
stc
scas
cld
popf
std
hlt
std
and
cld
mov
cmp
push
shl
jge
jge
sar
cmc
inc
stc
imulb
add
jns
repz
pop
mov
xor
shlb
aad
pop
xor
sbb
das
sbb
push
cs
sbb
das
enter
mov
shrl
pushf
clc
mov
das
sbb
cmp
cmp
loope
cmp
into
cmp
outsl
cmp
push
cmp
scas
daa
cmp
hlt
cmp
nop
fistpll
int3
nop
pop
cmp
subb
add
cmp
insl
cmp
fnstcw
lcall
cmp
cmp
cmp
cmp
cmp
cmp
add
add
cmp
cmp
cmp
cmp
aaa
cmp
dec
cmp
sbb
imul
push
xor
mov
cmp
xor
std
cmp
cmp
cmp
fidivrs
bound
ds
ds
cmp
push
cmp
ds
cmp
aas
jae
idiv
mov
repz
mov
inc
repnz
adc
push
fwait
mov
in
cwtl
repnz
js
in
xor
in
mov
pop
inc
icebp
cmp
or
mov
inc
push
enter
lock
sbb
mov
cld
lret
sti
fldenv
aas
cli
cld
xchg
pop
cli
pop
xchg
fcomi
xor
cmc
cmc
jae
mov
cmc
rolb
add
add
cmc
out
loopne
test
push
cli
out
push
repz
sti
leave
mull
jmp
cmc
or
sbb
mov
jecxz
xor
add
repz
hlt
add
sub
mov
hlt
fiadds
fcomi
mov
add
xchg
add
repnz
add
repnz
add
loope
cmp
mov
lock
das
lock
jmp
jge
shl
mov
decb
pop
mov
in
cld
mov
test
out
insl
cld
jo
adc
aam
outsb
sti
add
xchg
sahf
cmp
mov
jl
push
cmp
cmp
outsb
mov
or
lods
cmp
jns
pop
push
push
cmp
inc
cli
cmp
inc
fstpt
mov
xor
cmp
and
cmp
adc
cmp
adc
cmp
pop
cmp
inc
cmp
fucomp
xor
aad
xor
fldl
xor
ret
fidivl
xor
cmp
adc
repz
jmp
mov
aas
dec
daa
mov
and
idiv
jae
cmc
call
add
lds
shlb
add
sub
xor
and
xor
out
pop
mov
mov
aaa
or
lret
and
aaa
jp
mov
test
xlat
cmp
sub
cmp
sub
cmp
sub
xchg
cmp
and
cwtl
sub
inc
cmp
sub
out
push
pop
pop
out
and
sbb
out
addl
add
lds
jge
ret
std
jne
add
mov
in
inc
lcall
std
lcall
es
repnz
jnp
repnz
jnp
repnz
mov
repnz
pop
jg
movsb
pop
stos
repnz
xchg
repnz
mov
stc
repnz
cwtl
adc
sbb
icebp
pusha
cwtl
mov
js
sbb
jne
push
out
not
in
notb
in
imull
in
testl
in
testl
cltd
idivl
test
data16
notl
out
clc
sbb
stos
clc
sub
in
cwtl
out
clc
clc
iret
out
clc
movsb
out
stc
frstpm(287
or
stc
and
in
stc
nop
jmp
add
pushf
jmp
mov
stc
inc
jmp
add
push
cs
cmp
mov
mov
das
pop
mov
das
pop
mov
and
mov
mov
popf
cmp
outsb
scas
cmp
mov
dec
popa
jno
cmpsb
jno
cmp
adc
and
cmp
repz
daa
cmp
pop
pop
les
in
jmp
xor
and
pop
xor
cmc
imul
cli
add
sahf
cmp
in
inc
ds
and
aas
fwait
and
aas
xchg
and
aas
cld
and
aas
frstor
aas
mov
cmc
dec
testl
xor
daa
xorl
cmp
in
inc
and
add
and
xor
and
xor
daa
push
xor
and
xorb
sub
xor
es
sbb
inc
xor
sub
xor
sub
xor
lahf
mov
mov
pushf
inc
stc
gs
call
cli
iret
je
stc
fdivrs
out
xor
clc
dec
push
adc
push
pop
mov
stc
jae
loopne
jg
mov
clc
out
pop
jmp
mov
inc
jmp
xchg
addr16
xchg
add
pop
subb
jb
adc
xorb
xchg
jb
jmp
bound
mov
ja
in
push
in
jmp
push
int3
ljmp
repz
mov
jmp
pop
in
repz
add
sbb
jmp
add
jecxz
hlt
or
jb
and
call
neg
out
clc
clc
sahf
out
clc
ret
out
stc
aad
or
repz
stc
dec
out
stc
out
cmc
xchg
in
mul
in
cmc
clc
in
testb
idivb
in
negb
in
testb
mov
in
sub
inc
in
testl
add
add
add
add
in
in
icebp
add
cmp
loope
cmp
test
inc
out
data16
out
cmp
fisubrs
cmp
mov
cmp
cmpsl
movsl
cmp
cmpb
mov
cmp
cmpsb
iret
cmp
jb
sahf
jae
cmp
int
add
nop
cmp
jno
cmp
test
dec
pusha
pop
cmp
pusha
cld
xor
cmp
xor
and
out
mov
sbb
xor
ds
sbb
in
sbb
add
pusha
aas
sbb
clc
sbb
sbb
aas
inc
sbb
aas
nop
sbb
aas
rcrl
out
aas
mov
lock
mov
add
lahf
es
xor
add
add
cmp
cmpsl
pop
mov
adc
add
push
and
sub
dec
and
xor
xchg
xor
and
xor
and
and
xor
push
mov
jo
add
je
in
ret
mov
jmp
mov
jmp
jecxz
mov
icebp
xchg
sbb
adc
in
jl
out
je
in
insb
inc
in
fs
pop
pop
sbb
es
add
xor
in
lds
in
mov
in
lods
pop
in
movsl
addr16
popf
outsl
in
xchg
sbb
add
or
push
jp
ret
jecxz
repz
sub
sbb
push
repz
std
repnz
jecxz
repnz
call
repnz
add
cmpsb
in
lock
in
test
loope
hlt
mov
fcomip
dec
loopne
hlt
clc
loopne
repz
shl
repz
fdiv
popf
loopne
repz
jmp
jmp
in
fucomi
add
in
lock
in
inc
jmp
in
jg
push
in
xor
xor
mov
jns
js
add
and
andl
add
add
and
add
push
xorl
hlt
jmp
xor
cmc
nop
sub
imul
imul
add
mov
cmp
scas
or
lods
cmpsl
sarb
pushf
jp
call
mov
xor
mov
shlb
jmp
mov
add
jl
xor
pop
std
cs
add
add
cs
popa
movsb
cmp
xlat
sbb
cmp
pop
sub
outsl
adc
mov
imul
push
cmp
sbb
aas
and
add
and
adc
xor
bound
inc
and
xor
sbb
or
xor
push
dec
xor
add
xor
and
xor
add
add
and
test
pop
shlb
pusha
ss
nop
and
test
js
mov
repnz
lock
jmp
std
sub
icebp
in
insb
pop
jns
mov
pop
cmp
lods
mov
xor
pop
mov
jmp
mov
jmp
mov
sub
addb
add
xchg
mov
in
add
cwtl
jb
in
jb
jmp
bound
jmp
push
pop
jmp
push
popa
jmp
ret
rol
sub
loopne
repz
jmp
in
lcall
in
ljmp
ljmp
xchg
ljmp
jb
sbb
pop
ljmp
lret
ljmp
add
add
add
push
ljmp
push
ljmp
jb
lcall
ljmp
std
jmp
mov
pop
call
scas
jmp
out
call
inc
out
jmp
cmp
shr
in
imulb
ss
fs
mull
ds
mov
imul
imul
add
xchg
add
ss
or
pop
xor
pop
cmp
cmp
inc
xor
sti
movsb
xor
sub
xlat
clc
fnstenv
hlt
clc
out
stos
fdivs
xor
xor
fnsave
sub
xor
daa
add
mov
push
pop
das
lea
jmp
cmp
add
add
ud2
cmp
push
mov
mov
or
pop
cmp
or
cmp
sbb
cmp
sbb
cmp
sbb
cmp
or
cmp
or
or
cmp
ds
cmp
or
cmp
jecxz
cmc
call
add
xor
jl
mov
in
xor
add
add
and
cmp
cwtl
pop
ja
xlat
mov
push
icebp
hlt
mov
inc
in
pushf
out
inc
xchg
jbe
sub
jmp
jne
cmpsb
in
xor
jb
mov
call
cwtl
popa
outsl
jmp
enter
repz
or
or
mov
call
mov
cmpsb
fsubrp
in
aad
add
jp
jge
fcomp
in
cmp
sub
insb
or
std
movsl
repnz
hlt
add
je
xlat
loop
repz
mov
jl
fdivp
jecxz,pn
icebp
lret
repnz
cmp
mov
in
repnz
icebp
mov
in
icebp
pop
out
icebp
mov
std
lock
add
data16
lock
out
in
movsl
jmp
or
pop
fstpt
jmp
jmp
fcmovbe
ljmp
pop
ljmp
mov
mov
fnstsw
mov
mov
mov
lods
sarl
gs
cmp
jae
insl
push
jno
pop
dec
xchg
mov
cmp
cmp
add
add
xor
push
xor
sub
xor
push
sub
sub
ss
mov
ss
sub
aaa
pop
sub
imul
stc
push
testl
fsts
xor
lret
mov
xchg
push
mov
cmc
sub
fnstsw
xor
cmp
jne
adc
pop
cmp
mov
add
add
add
mov
inc
les
inc
pop
ss
xchg
aaa
and
push
cmp
cmp
idiv
arpl
pushl
add
dec
inc
shll
out
cmp
aas
iret
cmp
aas
xlat
cmp
aas
fistpll
aas
out
pop
aas
out
cmp
idivl
out
inc
cmp
inc
pop
cmp
cmp
pop
cmp
add
add
cmp
aas
jo
aad
jo
aad
pusha
mov
pushf
pop
pop
loop
push
or
cld
lea
add
sbb
pushl
mov
insl
sar
decl
mov
into
sub
sti
fdivs
ja
iret
popf
jg
iret
out
ja
fnstcw
pop
mov
fcoms
xchg
mov
fldenv
or
decl
loop
ret
xlat
sub
fistpll
fbld
xor
sbb
dec
add
repz
out
loope
add
jae
adc
jns
xor
mov
aad
loop
aam
loopne
aam
loopne
aad
loopne
aam
loopne
aam
add
add
loope
aam
loopne
aam
loope
aam
loope
xlat
jae
sbb
push
out
xlat
jbe
pop
xlat
or
pop
xlat
xor
cmc
fistl
add
fdivs
mov
xor
lods
lret
xor
jg
mov
aaa
jmp
mov
add
mov
xor
sahf
xor
sub
pop
and
call
push
in
jne
add
add
cmp
inc
cwtl
cmp
je
ja
cmpb
xor
inc
pusha
dec
cmp
pop
cmp
cmp
addb
jbe
sbb
out
xor
cmp
xor
cmp
loope
cmp
loope
cmp
pop
cmp
cmp
mov
adc
pop
adc
ds
mov
pop
cmp
sarl
imul
add
cmp
adc
mov
aas
mov
xor
fwait
cmp
mov
cmp
lret
cmp
fwait
cmp
aas
or
mov
aas
fstpt
ret
aas
sti
cmp
jmp
xlat
hlt
call
testl
xor
inc
wrmsr
jg
inc
xor
dec
rcrb
sub
addr16
pop
shlb
add
add
mov
xchg
cwtl
rclb
jns
shlb
pop
fcom
mov
enter
sub
repz
adc
adc
rcr
push
mov
nop
fcoms
xchg
push
fcom
sahf
push
into
adc
into
xor
iret
push
jg
iret
jae
nop
iret
xchg
pop
test
mov
push
iret
roll
add
add
inc
xlat
sbb
fst
cltd
loope
mov
loope
aad
loope
stc
loopne
sbb
sbb
fchs
fst
cltd
loop
aam
loop
aam
loop
aam
loop
aad
loope
aad
loope
aad
loope
aam
loope
aam
loope
aam
loope
aam
loope
aam
loope
add
repz
add
add
add
repz
add
repz
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
xor
add
xor
add
and
add
and
add
repz
repz
jecxz
add
jecxz
add
repz
repz
jecxz
add
jecxz
add
mov
add
mov
add
mov
repz
mov
add
mov
add
mov
repz
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
repz
add
repz
add
jecxz
add
jecxz
add
repz
add
repz
add
jecxz
add
jecxz
add
mov
add
mov
add
mov
out
add
mov
add
mov
add
mov
out
add
jae
add
jae
add
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
repz
add
repz
add
repz
add
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
hlt
add
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
repz
repz
jecxz
add
jecxz
add
repz
repz
jecxz
add
jecxz
add
mov
add
mov
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
repz
add
repz
add
repz
add
repz
add
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jecxz
add
jecxz
add
mov
add
mov
add
mov
lock
mov
add
mov
add
mov
lock
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
repz
add
repz
add
jecxz
add
jecxz
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
repz
add
repz
add
jecxz
add
jecxz
add
repz
add
repz
add
jecxz
add
jecxz
add
mov
add
mov
add
mov
hlt
add
mov
add
mov
add
mov
hlt
add
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
add
repz
add
repz
add
repz
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
xrelease
xrelease
jecxz
add
jecxz
add
xrelease
xrelease
jecxz
add
jecxz
add
mov
add
mov
add
mov
lock
mov
add
mov
add
mov
lock
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
add
repz
add
repz
add
repz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
arpl
add
arpl
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
repz
add
repz
add
jecxz
add
jecxz
add
repz
add
repz
add
jecxz
add
jecxz
add
mov
add
mov
add
mov
hlt
add
mov
add
mov
add
mov
sti
jp
iret
sbb
ret
es
dec
inc
mov
dec
jl
jb
mov
out
hlt
push
jno
roll
add
or
mov
ret
sub
xchg
rorb
push
addb
fists
push
lds
dec
ret
stos
or
push
mov
cmc
or
inc
push
cmc
aam
outsb
bound
adc
add
mov
dec
stos
insb
push
sub
jb
sbb
bound
push
mov
inc
dec
int3
stos
or
push
mov
sbb
xorb
xor
pop
test
test
arpl
fcoml
cli
pop
push
mov
mov
cmp
ljmp
mov
fldl
sbb
leave
aad
mov
daa
dec
rcrb
ljmp
pushf
pushf
dec
out
xor
jp
fildll
sti
dec
cld
adc
add
xchg
imul
shll
ret
pop
out
mov
mov
bound
imul
adc
insl
jp
in
adc
iret
pop
or
cwtl
cmpsb
popf
push
push
movsb
mov
in
inc
lods
pop
fwait
cmp
xor
movsl
sbb
jmp
icebp
clc
push
xchg
sub
sbb
lcall
lret
out
leave
lea
dec
xchg
jmp
mov
mov
les
into
adc
js
add
nop
push
jbe
inc
cmp
add
adc
daa
adc
push
mov
lods
lods
incl
popf
push
repnz
test
xor
cmp
mov
decb
fisubl
inc
or
or
lea
add
add
jle
stos
jle
pop
xchg
in
xchg
pop
mov
outsb
pop
sbb
sbb
pop
jns
movsl
and
adc
mov
pop
xchg
out
ficomps
fsubrl
mov
mov
gs
mov
jmp
shrb
out
in
mov
int3
dec
das
int3
fildll
push
add
add
xchg
imul
push
push
ret
mov
movsb
xor
scas
push
add
mov
push
cld
adc
mov
imul
add
repz
push
mov
popf
ret
int3
pop
push
mov
push
loopne
scas
loopne
aas
adc
push
mov
in
mov
mov
add
push
clc
add
add
add
add
scas
clc
mov
roll
push
xchg
insb
dec
lock
add
insb
inc
cld
dec
mov
add
outsb
dec
hlt
or
add
inc
outsl
inc
hlt
jno
sbb
outsb
dec
lock
add
insb
cmp
lods
mov
push
call
or
add
lret
mov
decl
or
add
add
insb
inc
in
add
mov
idivl
dec
mov
test
rorb
daa
int3
push
daa
int3
dec
daa
int3
fildll
sbbl
add
or
sub
testb
scas
add
cmc
inc
add
test
push
and
repz
push
add
add
cmc
inc
add
fisttps
inc
loop
cmp
add
jmp
push
jne
add
mov
pop
jae
outsb
cmp
mov
mov
jl
dec
repz
imul
push
loop
add
mov
xlat
xor
int3
ds
int3
push
sub
int3
dec
sub
int3
mov
loop
add
or
add
int3
push
sub
int3
dec
sub
int3
mov
out
mov
push
call
xchg
ret
int3
mov
daa
int3
into
daa
int3
aas
insb
in
fsubrp
push
xor
push
lcall
push
clc
xor
add
insb
cmp
decl
push
cld
adc
add
add
hlt
mov
ret
int3
mov
scas
hlt
add
insb
cmp
mov
testl
push
xor
cld
jge
add
out
adc
repnz
mov
ljmp
ret
int3
mov
es
int3
into
es
int3
pop
insb
in
xchg
repz
cs
or
mov
int3
push
sub
int3
dec
sub
int3
fildll
sbbl
inc
xchg
jb
add
out
mov
jmp
push
mov
or
mov
imul
iret
add
add
testl
cmp
jb
add
pop
mov
mov
cli
xchg
add
mov
push
lock
or
or
testl
mov
test
dec
clc
add
adc
iret
jecxz
dec
xchg
push
or
in
dec
jb
cld
or
mov
push
or
jmp
imul
mov
cwtl
ret
int3
fildll
sbbl
mov
add
add
test
mov
insb
dec
call
adc
add
js
add
repz
repnz
lock
cmpl
pop
test
repz
adc
add
mov
cmp
adc
cmpl
jg
mov
lock
mov
mov
imul
xlat
pop
jmp
adc
add
push
hlt
adc
add
add
decl
jo
adc
adc
movb
add
jo
add
xchg
mov
push
add
or
mov
addr16
idiv
adc
mov
testb
or
xlat
decl
lea
scas
hlt
push
bound
inc
jo
or
scas
aam
movl
adc
xchg
hlt
add
mov
pop
mov
add
push
loopne
in
jmp
fstpl
es
int3
aas
push
add
fsubrp
push
call
push
clc
and
add
push
ss
xchg
repz
push
cld
adc
push
adc
push
add
or
dec
cmc
mov
ret
rol
mov
or
mov
jl
add
mov
push
push
ret
rol
mov
add
add
enter
xor
adc
hlt
add
in
mov
xchg
jle
clc
adc
mov
pop
mov
inc
or
add
divl
shlb
push
sbb
dec
or
jle
clc
add
mov
jp
adc
xor
add
popa
or
mov
add
add
jmp
inc
xor
cmp
mov
xor
xor
jmp
in
mov
int3
ds
mov
in
fimuls
mov
add
repz
int3
je
add
inc
cmc
mov
cmp
push
jle
clc
cmp
lods
je
add
mov
dec
hlt
sub
xor
pushf
aaa
add
idiv
mov
jmp
jl
add
jecxz
add
hlt
inc
add
pop
popf
push
repz
mov
add
mov
icebp
add
stos
add
dec
repz
mov
add
mov
mov
jl
aam
aaa
add
cwtl
cmove
inc
jmp
addl
add
decl
add
fisttpl
mov
ret
mov
in
sti
cmp
decb
popa
hlt
mov
dec
ret
mov
jl
sbbl
mov
add
jl
or
xchg
hlt
dec
cmp
inc
loope
dec
roll
mov
pop
mov
add
add
jge
or
pop
std
aas
mov
pushf
aaa
add
aas
cli
pushl
ss
push
pop
add
mov
push
push
lock
lock
fisttpll
fiadds
dec
addb
inc
jmp
orl
inc
push
hlt
add
mov
or
mov
add
paddusw
mov
jb
add
jmp
je
jp
call
jle
mov
jp
adc
inc
loope
cmp
test
mov
and
idivl
das
mov
movsl
inc
jbe
mov
jp
or
dec
jmp
inc
jle
jmp
addl
dec
bound
sub
inc
jmp
in
fildl
cld
push
out
add
pop
sbb
int3
xchg
aaa
add
jp
ljmp
cmp
sbbl
inc
mov
imul
add
push
dec
repz
call
cmpb
push
add
mov
mov
inc
mov
jns
xor
out
dec
lock
fimull
dec
pop
add
mov
mov
inc
imul
inc
icebp
mov
out
cmp
push
repz
pop
inc
push
adc
cmc
push
lock
push
pop
xchg
popf
push
xrelease
jnp
fcoms
inc
outsb
jp
loopne
aas
loope
mov
xlat
push
mov
cmove
in
testb
jo
movsb
mov
add
push
sub
fmuls
add
add
js
loopne
xchg
cmove
cmove
aaa
add
pop
popf
push
into
repz
mov
fists
imul
idiv
or
mov
mov
mov
cmove
aaa
add
mov
aaa
add
fcoml
repz
mov
cmove
in
testb
add
add
add
add
lahf
movsb
pushf
aaa
add
xor
jmp
outsl
mov
xor
xor
mov
cmove
jmp
or
xchg
ja
movsb
jl
add
ss
xchg
dec
sub
jle
rclb
ljmp
mov
inc
mov
and
repz
xlat
jmp
push
pop
decl
lahf
xlat
cmove
fsub
sti
sbb
repz
mov
vmaxps
mov
mov
dec
ret
mov
int3
aas
jle
push
xor
mov
adc
mov
dec
xrelease
inc
dec
pop
pop
leave
mov
int3
aas
jle
push
and
std
aas
mov
call
or
mov
inc
imul
add
push
repz
mov
fbstp
in
push
movsbl
repz
mov
add
inc
xor
add
out
add
repnz
mov
or
clc
rclb
repz
mov
addr16
xchg
add
mov
add
mov
or
mov
add
mov
xchg
das
add
std
mov
add
daa
leave
push
into
repz
pop
add
lahf
orl
mov
or
adc
jmp
inc
mov
mov
mov
jp
lods
pushf
das
add
out
inc
add
nop
push
inc
repz
movl
pop
popa
add
xrelease
cmp
ret
negl
xchg
fsts
inc
repz
adc
sub
cmove
repz
call
or
mov
inc
jmp
addl
les
push
push
xchg
mov
call
neg
idiv
or
mov
jnp
cld
mov
icebp
jae
jl
loopne
jl
fdivrl
les
xrelease
pop
xchg
aad
inc
repz
inc
mov
mov
cmc
push
mov
jae
or
inc
in
add
movl
in
xor
add
mov
jnp
loopne
add
add
xrelease
fistl
add
inc
stc
orl
push
adc
clc
push
xor
jae
jp
les
mov
mov
mov
mov
stc
mov
inc
clc
or
mov
mov
xor
repz
jl
jmp
jl
mov
das
add
mov
enter
cmove
cmpsl
cmove
out
or
adc
stc
mov
or
add
mov
mov
sbb
mov
cmove
repz
call
or
cmove
in
test
pop
std
xor
fldcw
mov
jb
add
add
add
sub
push
dec
repz
popf
push
dec
xrelease
call
mov
cmove
jns
pop
dec
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
adc
orb
inc
or
mov
mulb
cmp
js
jns
push
push
cmp
adc
in
push
cmc
add
cmpsl
aam
xor
pop
rorb
imul
jle
lcall
je
hlt
out
jge
dec
inc
mull
mov
mov
enter
push
push
inc
cs
cs
popa
cmp
fs
mov
pop
xchg
push
mov
leave
sub
dec
int
pusha
sbb
lods
pop
int3
shrl
adc
ljmp
ret
push
and
push
addb
fsubrs
into
push
test
sub
sbb
add
inc
and
cmp
push
or
stos
jp
out
fwait
xor
nop
lds
sbb
addr16
inc
aad
or
outsb
xorl
fucomp
push
xchg
insl
inc
pop
cltd
xchg
inc
iret
mov
shlb
fcompl
inc
repz
bound
xchg
jns
xchg
jecxz
pop
pushf
ds
outsb
cld
mov
add
fucom
les
mov
push
daa
dec
xor
mov
je
jno
insb
jl
hlt
and
es
push
adcl
aaa
dec
pusha
jg
push
out
rep
out
adc
xchg
jp
fsubrl
cmp
xor
bound
mov
xchg
xchg
out
int3
std
rcrb
cmp
insb
push
sbb
rol
pusha
mov
out
dec
aaa
dec
jbe
or
xor
or
jo
pusha
rorb
push
add
into
les
mov
scas
cmp
jbe
push
cwtl
in
insb
fdiv
fwait
adc
jnp
xlat
cmpsb
push
push
mov
rcll
aaa
lcall
ja
mov
cmovp
mov
mov
aaa
bound
mov
add
sbb
jno
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
push
gs
fs
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
inc
gs
jb
arpl
fs
jae
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
push
dec
inc
dec
xor
cs
insb
add
sbb
inc
gs
inc
add
gs
gs
jae
inc
inc
add
popa
insb
imul
je
add
add
imul
add
push
add
jb
insb
insb
push
imul
aad
inc
outsb
fs
popa
imul
push
outsl
jae
push
jne
je
gs
popa
add
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
pop
add
insb
arpl
push
arpl
or
inc
gs
gs
dec
gs
imul
push
gs
imul
add
je
jne
inc
add
inc
inc
dec
xor
cs
insb
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
cmc
test
add
add
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
cmc
test
add
add
add
add
add
add
push
add
addb
add
js
add
cmc
test
add
add
add
add
or
add
add
pusha
popa
add
add
test
add
add
add
add
or
add
bound
add
test
add
add
add
add
add
add
mov
add
add
test
add
add
add
add
or
add
add
add
add
add
test
add
add
add
add
mov
add
addb
add
cmc
test
add
add
add
add
or
add
add
add
add
add
add
test
add
add
add
add
add
add
cmp
add
cmc
test
add
add
add
add
or
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
addb
or
add
add
add
add
add
add
add
xor
xor
add
add
or
xor
add
add
or
mov
or
orb
mov
add
add
incl
xor
add
add
xor
add
pop
add
cld
sldt
clc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
rolb
add
add
add
add
add
add
add
sldt
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
jnp
mov
pop
mov
add
pop
add
or
mov
mov
xor
add
or
add
add
add
sti
mov
add
sti
mov
add
or
add
or
add
sti
mov
add
cmp
add
aas
mov
add
add
mov
mov
add
add
or
or
add
add
add
xor
add
add
add
or
add
xor
mov
or
mov
add
add
add
mov
jnp
add
add
xor
add
mov
xor
add
add
xor
add
mov
add
add
add
mov
xor
or
add
add
add
add
mov
or
add
sti
mov
mov
add
add
add
mov
mov
add
add
add
sti
mov
lock
add
add
incl
add
add
add
aas
clc
lock
add
clc
decl
add
xor
xor
add
add
push
pop
call
pop
jmp
loopne
fnstsw
add
fnstsw
add
fnstsw
add
jmp
pop
jmp
rolb
test
add
sti
add
clc
and
repz
jo
ret
jo
xchg
clc
add
lock
add
lock
add
lock
add
nop
add
or
add
add
add
lock
or
add
or
add
paddb
add
incb
add
incb
add
xlat
addb
jg
add
push
add
add
add
dec
add
add
and
ja
imul
insb
add
xor
xor
add
js
add
add
imul
jb
jns
and
imul
je
push
add
imul
outsl
add
jae
and
add
jb
add
je
outsl
add
jns
and
imul
arpl
outsl
add
jb
jne
jo
je
sub
and
jo
insb
add
popa
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
arpl
outsl
add
jb
add
je
and
add
add
jne
je
popa
add
insb
add
and
outsb
add
insl
add
sub
and
insl
add
jae
je
and
bound
add
add
imul
insb
add
xor
xor
add
js
add
and
insb
add
arpl
popa
add
add
add
outsb
add
add
add
and
push
add
jae
je
add
and
add
jb
add
je
outsl
add
jns
add
add
add
add
add
adc
add
add
sub
add
add
and
add
add
add
call
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
outsb
add
insb
add
xor
xor
and
push
add
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
push
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
dec
add
xor
xor
add
pop
add
add
add
jle
das
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
loopne
add
xor
test
xchg
xor
xor
mov
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
jnp
xorl
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
aaa
mov
nop
aaa
pushf
aaa
mov
aaa
aaa
jecxz
cmc
aaa
or
sub
xor
jl
cmpl
lahf
cmp
in
jmp
cmp
cmp
adc
dec
cmp
mov
int
stc
cmp
cmp
cmp
add
addb
adc
add
fidivrs
in
ljmp
aas
add
add
add
or
push
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
mov
add
adc
