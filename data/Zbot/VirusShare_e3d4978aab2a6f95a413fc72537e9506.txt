push
mov
push
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
movl
movl
movl
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
mov
mov
add
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
mov
movb
mov
movb
mov
movb
movl
movl
movl
movl
movl
movl
push
lea
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
push
call
test
je
mov
push
push
push
mov
push
call
push
call
mov
mov
mov
lea
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
mov
mov
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
movl
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
push
mov
sub
mov
pop
add
movl
add
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
mov
lea
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
ret
mov
pop
ret
int3
int3
int3
push
mov
sub
push
movl
mov
push
call
add
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
push
mov
push
call
add
sar
cmp
jne
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
nop
inc
add
inc
add
inc
add
nop
inc
add
inc
add
inc
add
inc
add
nop
inc
add
add
inc
add
inc
add
nop
inc
add
add
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
add
inc
add
nop
inc
add
nop
inc
add
add
add
inc
add
inc
add
add
xchg
inc
add
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
inc
add
add
nop
inc
add
add
xchg
inc
add
nop
inc
add
nop
inc
add
add
inc
add
inc
add
add
inc
add
nop
inc
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
xchg
inc
add
nop
inc
add
inc
add
add
xchg
inc
add
nop
inc
add
nop
inc
add
inc
add
xchg
inc
add
nop
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
cs
mov
ja
fsub
pusha
inc
repnz
jno
add
bound
popa
jb
stc
jp
mov
add
bound
popa
jb
stc
jp
xchg
faddl
add
ja
jno
jbe
jae
bound
out
inc
mov
popaw
out
inc
imul
ja
sub
mov
add
ja
add
in
outsl
sbb
inc
imul
jp
mov
ja
jmp
ret
bound
fbld
mov
inc
add
inc
add
inc
add
inc
add
mov
fimull
inc
add
call
pusha
inc
jb
jno
jge
add
dec
loop
fs
in
jb
std
jp
add
add
gs
xor
js
outsl
insb
mov
jne
cmp
sub
add
call
add
and
jne
cld
imull
add
call
add
shl
je
in
outsl
inc
ljmp
add
loope
popa
mov
ret
cmpsl
fbld
shl
je
in
outsl
push
add
add
push
call
outsl
outsl
insl
mov
add
jno
jae
xor
mov
outsl
insb
mov
ja
cmp
pusha
gs
sti
add
mov
pop
add
add
mov
mov
add
bound
add
bound
add
bound
add
mov
add
bound
add
inc
pop
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
mov
fs
jae
jmp
lea
add
mov
add
lds
add
mov
add
std
mov
jmp
jmp
xchg
mov
in
lea
add
mov
add
ljmp
cmpsl
mov
add
mov
add
mov
add
add
ja
add
push
mov
add
add
ja
add
roll
add
mov
add
add
aaa
mov
add
mov
add
mov
add
daa
mov
add
mov
add
stos
pop
add
cmpsl
add
daa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
mov
add
add
mov
mov
add
add
mov
add
bound
add
out
pop
add
bound
add
cld
incl
add
mov
add
inc
add
scas
inc
pop
popa
mov
daa
add
cld
stc
aam
mov
ljmp
mov
jb
bound
mov
and
mov
jecxz
lea
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
lea
add
lea
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
ja
add
mov
add
add
ja
add
ja
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
sahf
fildl
mov
mov
add
push
aam
mov
mov
roll
mov
roll
mov
roll
mov
roll
mov
roll
mov
roll
mov
adc
lea
repnz
mov
rorl
mov
rorb
mov
rorl
mov
rolb
lea
or
lea
push
rorb
mov
add
mov
out
mov
out
mov
lea
mul
lea
pop
out
mov
add
mov
mov
xor
sub
mov
cmp
mov
das
lock
adc
mov
jmp
add
mov
jmp
mov
mov
sub
loope
add
mov
aas
loope
add
mov
inc
mov
jecxz
mov
mov
mov
xorl
mov
arpl
add
mov
das
inc
mov
mov
mov
ret
inc
mov
sarl
mov
out
mov
add
add
xchg
inc
add
xor
add
jae
add
arpl
add
add
movsl
inc
add
xchg
add
add
mov
add
sub
add
inc
add
cmp
add
inc
add
fldl
add
inc
add
and
lds
add
inc
add
sbb
sbb
dec
inc
add
loope
add
movsl
inc
add
incl
add
add
jne
add
add
add
pop
push
add
mov
add
ror
add
enter
enter
enter
enter
enter
movl
mov
add
and
add
hlt
leave
add
adc
add
mov
add
mov
add
mov
add
inc
into
add
mov
add
jl
add
mov
mov
lea
test
lea
mov
fmuls
mov
lea
fcom
lea
aam
lea
jbe
lea
repnz
lea
add
lea
leave
lea
jle
lea
push
rorl
mov
lea
jb
lea
add
cmp
mov
add
add
pop
mov
jmp
pop
mov
sarl
add
aas
mov
popa
aas
mov
inc
add
xchg
jns
xchg
add
xchg
or
xchg
sub
mov
xchg
stc
mov
xchg
cmp
loop
add
fiaddl
add
ret
jge
xchg
jns
popl
xchg
pop
popl
add
cmp
add
cmp
add
popl
add
push
add
push
add
aaa
popl
add
popl
cmpb
add
xor
popl
add
add
jg
add
xor
mov
add
dec
add
insl
push
add
adc
add
push
add
sbb
push
add
pop
push
add
out
dec
add
lods
outsb
add
rorl
add
outsb
add
mov
loopne
mov
add
mov
loopne
mov
add
ss
add
nop
into
add
pop
iret
add
dec
into
add
fmulp
add
ror
add
insb
loope
mov
loopne
mov
loopne
mov
loope
mov
mov
mov
add
xchg
add
mov
lret
add
sbb
add
mov
mov
lea
sub
lea
dec
leave
lea
push
iret
lea
mov
lea
js
lea
shl
lea
cwtl
loopne
mov
lea
pusha
loopne
lea
clc
fisttps
mov
add
or
add
or
ljmp
xor
mov
popf
lea
sbbl
mov
mov
jo
add
push
mov
out
mov
mov
mov
test
ds
mov
outsl
repz
sti
lea
sbb
mov
imul
mov
in
mov
jge
mov
lahf
stos
mov
fimull
mov
add
insb
add
mov
add
lods
imul
add
insl
add
push
insl
add
dec
insl
add
sbb
insb
add
add
imul
add
mov
add
cmp
add
add
sub
add
test
mov
add
push
add
add
xchg
add
imul
add
imul
mov
add
mov
add
mov
mov
sar
enter
insl
pop
mov
loop
iret
dec
add
jg
or
mov
jnp
test
sub
lahf
mov
push
cli
pop
leave
or
ljmp
cmp
xchg
inc
push
pop
rcr
fisttps
mov
test
or
jge
mov
xor
mov
outsb
and
jecxz
mov
stos
add
stos
jg
jge
adc
fdivrl
stc
test
jmp
es
xor
inc
je
mov
aaa
and
dec
inc
data16
cmp
or
mov
adc
insb
jmp
in
mov
imul
adc
mov
mov
push
mov
mov
in
xchg
inc
xor
inc
xchg
or
arpl
sub
inc
inc
jge
and
and
xchg
dec
ret
adc
repz
call
sbb
mov
imul
dec
adc
mov
popa
dec
xchg
jecxz
adc
mov
je
add
pusha
pop
or
mov
cs
pop
cld
mov
dec
jge
popf
cmp
push
sbb
pop
cld
jo
xchg
dec
add
adc
inc
incb
shlb
lcallw
sub
adc
xlat
cmp
lea
mov
sbb
push
cmpsl
hlt
rcrl
insl
cwtl
jne
adc
pop
add
xor
mov
loop
test
add
adc
pop
add
xor
mov
pop
xchg
mov
cmp
adc
test
adc
nop
push
pop
push
mov
rclb
add
add
jo
js
lods
insl
sbb
add
mov
mov
mov
popf
adc
mov
jg
xor
xor
cmp
mov
xor
lahf
out
add
jle
mov
add
or
jle
pop
push
xor
sahf
lods
dec
test
rcrb
sub
jae
repz
imul
fistps
sarb
lahf
pushl
dec
test
aas
jns
jae
into
jg
dec
add
mov
or
mov
mov
sti
jmp
rcl
push
mov
mov
lods
xor
dec
popa
cmpsl
fdivrl
iret
mov
add
popl
and
ret
or
mov
dec
lods
lret
fwait
pop
mov
fistpl
dec
mov
lods
push
lods
push
loop
fnstenv
cmp
push
mov
push
lods
pop
daa
fwait
ret
pop
jnp
stos
mov
lcall
dec
push
pop
jnp
push
mov
scas
add
lahf
dec
jae
adc
jne
dec
cmp
bound
scas
and
pop
add
jmp
lea
add
lea
add
push
int3
add
lea
add
dec
int3
add
lea
add
ror
add
lea
add
xlat
int3
add
lea
leave
add
int3
add
lea
imul
stos
add
mov
add
xlat
roll
popl
add
ret
mov
add
mov
adc
ret
testl
add
mov
push
add
xorl
test
mov
jae
mov
xor
cmpsl
xchg
add
ja
arpl
ja
and
mov
addl
ja
addl
addl
mov
add
addb
aaa
sbbl
daa
adcb
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
add
or
or
pop
or
mov
sub
or
fs
mov
or
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
or
mov
or
ljmp
mov
or
ljmp
ss
or
mov
or
ljmp
mov
or
or
stc
or
ljmp
mov
or
mov
or
mov
or
ljmp
mov
or
mov
or
add
xchg
mov
jmp
test
jmp
std
nop
enter
roll
jmp
cmpb
fistl
loope
jmp
sbbb
jmp
xchg
add
jmp
sbbb
nop
mov
jmp
test
test
nop
cwtl
add
xchg
fldl
jmp
addb
nop
test
jmp
test
add
add
or
inc
add
out
add
or
aaa
sbbb
sbbb
sub
jge
daa
cmpb
in
sbb
idivl
add
jg
add
xchg
add
jg
add
jg
add
xchg
add
jg
add
jg
add
mov
jb
cmpsl
jg
add
mov
add
bound
xchg
add
mov
add
or
psrad
or
or
mov
mov
cmp
or
mov
mov
pop
adc
or
mov
mov
mov
add
fs
mov
add
or
or
push
pop
sub
or
mov
pop
or
mov
ljmp
mov
or
mov
or
mov
or
fiaddl
mov
or
mov
or
mov
add
mov
or
push
mov
or
mov
add
mov
or
ljmp
mov
or
mov
or
ljmp
mov
or
ljmp
mov
add
mov
or
mov
or
add
mov
jmp
xchg
sub
jmp
test
jmp
add
add
test
jmp
mov
add
test
add
test
fisttpl
add
test
jmp
test
jmp
lcall
jmp
test
test
mov
add
jg
add
lea
test
test
add
lods
add
add
test
test
jg
add
or
daa
test
test
aaa
jg
add
lea
daa
test
test
idivl
add
mov
add
subl
sub
idivl
add
orl
orl
jle
add
cmpsl
adcl
adcl
mov
push
add
mov
jo
bound
xor
xor
or
or
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
cmp
or
mov
mov
add
mov
add
or
mov
mov
mov
mov
add
or
ljmp
mov
add
ljmp
mov
or
fildl
mov
ljmp
mov
or
mov
or
mov
or
mov
add
mov
or
mov
incb
mov
mov
or
mov
or
mov
add
mov
or
mov
or
mov
or
ljmp
mov
jmp
xchg
jns
hlt
xchg
sub
cli
mov
add
xchg
cltd
add
xchg
inc
add
mov
add
xchg
test
es
test
add
xchg
leave
add
xchg
add
mov
jmp
xchg
testb
sbb
add
test
add
xchg
xchg
add
xchg
ss
clc
jns
jmp
xchg
mov
add
test
add
mov
dec
add
dec
pop
add
adcb
add
jne
ja
xor
add
or
add
and
add
add
add
addb
jg
add
or
daa
sbbb
sbbb
sbb
add
cmpb
jg
add
jle
add
dec
sbb
out
insl
add
jg
add
jle
add
mov
mov
bound
std
mov
or
bound
adc
push
std
push
mov
jno
xor
xor
fs
or
xor
and
xor
add
xor
inc
mov
jecxz
fs
add
mov
sbb
inc
cmp
mov
cmp
arpl
adc
mov
or
mov
or
mov
or
ljmp
mov
or
ljmp
mov
cld
fs
or
mov
or
mov
cld
orb
or
mov
or
mov
or
lret
mov
or
mov
or
mov
or
mov
cld
mov
mov
or
mov
or
mov
fcomi
mov
add
xchg
js
jmp
test
add
xchg
fadds
jmp
mov
add
xchg
fiadds
jmp
test
cli
xchg
insb
add
xchg
mov
add
add
add
xchg
lods
add
xchg
insb
add
test
add
test
jmp
test
add
xor
add
and
and
std
test
add
add
inc
cmp
out
aad
aad
adc
testl
out
mov
out
or
mov
mov
mov
dec
add
xlat
xchg
push
add
inc
adc
call
jne
ja
xor
add
or
ja
add
and
add
add
add
inc
inc
add
inc
in
add
or
aaa
inc
pop
add
inc
sbb
add
xor
jle
xor
mov
fimuls
mov
clc
outsb
mov
clc
mov
mov
mov
clc
mov
xor
decb
popa
or
popl
adc
inc
or
mov
inc
mov
add
or
mov
mov
and
inc
or
mov
or
xchg
or
mov
mov
addl
ja
add
mov
repz
filds
outsl
mov
push
stos
fiaddl
xchg
mov
push
lahf
mov
push
jnp
push
fwait
mov
push
xchg
faddl
iret
mov
pop
mov
fadds
mov
repz
mov
add
mov
add
fldl
mov
mov
add
mov
add
mov
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
mov
in
lea
add
lea
add
xchg
xchg
add
cmc
xchg
xchg
add
mov
jmp
daa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
add
inc
mov
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
or
sahf
pop
or
dec
add
mov
add
mov
add
mov
add
mov
out
xchg
xchg
add
xchg
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
xchg
xchg
add
lea
add
xchg
xchg
add
lea
add
xchg
xchg
add
mov
add
xchg
add
lea
add
xchg
add
mov
add
lea
add
mov
add
lea
xchg
add
mov
add
mov
add
lea
add
imul
or
mov
add
mov
add
lea
add
lea
add
mov
add
or
xchg
or
push
xchg
add
xchg
add
mov
add
or
add
xchg
add
xchg
add
mov
add
xchg
add
or
out
xchg
add
or
push
xchg
add
lret
pop
or
stos
pop
or
fwait
pop
or
stos
pop
or
fwait
pop
or
cmpsl
pop
or
mov
or
pop
add
mov
pop
or
pop
add
mov
add
mov
add
mov
or
lahf
pop
or
aaa
add
mov
pop
or
mov
add
mov
add
mov
add
mov
add
xchg
pop
add
mov
add
mov
add
mov
xchg
cmp
mov
add
mov
add
mov
xchg
sbb
mov
add
mov
add
mov
bound
xchg
add
mov
xchg
add
xchg
xchg
add
lea
adc
xchg
add
lea
add
xchg
add
lea
push
xchg
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
xchg
add
xchg
add
xchg
xchg
add
add
xchg
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
cmp
or
mov
xchg
add
cmp
or
call
xchg
add
or
pop
xchg
add
xchg
add
adc
add
mov
pop
or
cmc
decl
mov
push
or
popf
push
or
lea
or
mov
add
mov
pop
or
mov
add
mov
or
int
or
jge
or
in
push
or
cmp
add
mov
and
add
xchg
ljmp
mov
add
mov
add
mov
add
mov
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
xchg
mov
add
mov
sub
addl
lea
add
mov
add
add
nop
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
hlt
lea
add
mov
push
add
lea
add
lea
add
lea
add
cmp
add
mov
add
or
add
jle
or
jle
or
insl
xor
or
or
pop
xor
or
or
insb
xor
or
or
cmp
or
cmp
or
sub
or
inc
or
inc
or
inc
or
sub
or
inc
or
mov
or
mov
or
das
adc
xchg
aas
adc
subl
or
xchg
aas
adc
xorl
push
cwtl
pop
adc
nop
inc
adc
mov
adc
xorb
push
cwtl
pop
adc
nop
inc
adc
mov
adc
xorb
push
cwtl
pop
adc
nop
inc
adc
mov
adc
xorb
push
add
inc
adc
mov
adc
xorb
setns
setno
jns
xor
setns
setno
in
adc
mov
adc
mov
adc
mov
adc
mov
adc
lcall
sbbb
sbb
cwtl
popf
std
sbb
sahf
repnz
xchg
loop
jbe
loop
jbe
rcrl
xchg
rcrl
xchg
add
xchg
xchg
lock
test
loopne
je
add
stos
xchg
sbb
mov
xchg
sbb
nop
xchg
sbb
mov
sbb
jp
sbb
jb
sbb
stos
xchg
sbb
mov
fwait
xchg
sbb
xchg
xchg
sbb
mov
pop
in
xchg
pop
fnsave
pop
aad
xchg
pop
int
xchg
pop
add
xchg
xchg
pop
cmc
mov
pop
in
xchg
pop
fnsave
pop
aad
xchg
pop
int
xchg
pop
add
xchg
xchg
pop
hlt
mov
push
add
xchg
push
sbb
loop
push
sbb
xchg
xchg
push
sbb
sbb
repnz
push
sbb
mov
push
sbb
rclb
sbb
mov
add
stos
mov
or
test
or
xchg
or
pusha
pushf
or
addr16
adc
addr16
adc
ss
gs
adc
gs
adc
xor
adc
xor
adc
add
ds
adcb
jp
adc
mov
pop
adc
adc
xorl
js
push
push
adcb
pop
push
push
mov
pop
adc
pop
cltd
cmp
sbb
xchg
sbb
jbe
sbb
jbe
sbb
cmpsb
pop
sbb
cmpsb
pop
sbb
xchg
mov
sbb
cmp
sbb
xchg
pop
sbb
pop
sbb
pop
sbb
pop
pop
sbb
xchg
add
test
loopne
je
loopne
movsb
xchg
rcrb
movsb
xchg
rcrb
xchg
xchg
add
xchg
xchg
add
test
icebp
sbb
loope
jne
loope
movsl
nop
rcrl
movsl
nop
rcrl
xchg
nop
add
xchg
nop
add
test
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
aad
mov
add
mov
leave
lea
add
lea
add
mov
add
mov
mov
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
daa
mov
add
add
mov
add
xchg
add
lea
add
mov
add
mov
add
mov
add
testl
add
out
add
notl
cld
jmp
cmp
add
mov
add
mov
add
popa
ds
out
sub
dec
outsb
pop
cmp
push
jmp
inc
add
fistpll
in
loopne
push
rcll
xchg
cmp
xor
sbb
adc
movsb
cli
xor
or
aam
je
movsb
frstor
push
rorl
bound
push
mov
gs
pop
add
testl
insl
jne
pop
imul
ss
repz
add
pop
orb
mov
cs
mov
mov
and
dec
sub
jge
push
xor
xor
clc
pop
in
hlt
push
imul
push
inc
inc
hlt
and
lock
mov
imul
xchg
inc
inc
in
pusha
inc
repz
jl
arpl
mov
dec
push
lods
xchg
cli
insb
aaa
imul
sbb
dec
call
fidivrl
mov
mov
pop
arpl
fmuls
mov
dec
dec
xchg
xor
add
jle
xchg
xchg
or
cmpsl
xchg
call
loop
push
inc
sbb
test
outsl
xchg
scas
mov
sub
test
das
gs
and
adc
add
xchg
cmc
mov
push
popa
and
push
push
mov
push
push
clc
adc
dec
lahf
pop
clc
cmp
lcall
mov
push
add
sti
aam
loop
inc
jecxz
insl
xor
add
scas
arpl
xor
add
add
lock
stos
jle
push
fldl
push
push
or
lcall
leave
dec
popf
imul
insb
and
cmp
popa
into
icebp
lock
inc
fisubrl
xchg
psrlq
fdivs
pop
test
mov
mov
or
lcall
mov
mov
aad
insb
xor
sub
fimull
push
packsswb
jmp
gs
push
aam
lret
push
push
mov
add
xchg
xchg
or
sbb
push
cmpsl
notl
sbb
gs
mov
imul
pop
aam
sub
pop
leave
cmp
jle
dec
fnsave
aam
xlat
pop
movsb
mov
cltd
pop
test
fcomps
out
mov
mov
mov
pop
add
cmp
aas
ret
nop
jmp
push
push
sbb
lret
lret
out
dec
mov
mov
push
xchg
lds
scas
inc
rolb
mov
aam
cmpsb
fnstcw
cmpb
ds
lock
push
mov
fstl
inc
ret
stc
ja
sbb
sub
dec
sbb
add
cmc
jo
out
fbld
iret
add
cmpsb
cwtl
pop
fsubl
jbe
cld
popf
add
sbbb
mov
mov
imul
xchg
aad
jecxz
xchg
je
ja
jne
push
jb
ds
fadd
inc
out
call
inc
or
out
aas
repnz
sbb
sub
mov
jecxz
or
mov
imul
sbb
push
xchg
mov
lcall
xchg
inc
xor
addr16
jb
outsl
push
jg
or
arpl
dec
in
add
xchg
cmpsl
and
push
sub
insl
lods
jne
scas
sbb
aad
push
xchg
faddl
and
aaa
adc
mov
fimuls
mov
add
loopne
xor
mov
lret
scas
push
shrl
mov
fstl
fisubl
leave
arpl
lahf
aad
cmc
subb
xor
mov
xchg
mov
add
add
mov
sbb
cmc
push
sub
repnz
mov
add
lea
shrl
fsts
jp
aas
popf
test
push
pop
fxtract
insl
das
inc
mov
pop
ss
sti
mov
adc
or
ret
jecxz
mov
movsb
inc
out
scas
out
scas
mov
mov
lcall
sbb
imul
stos
fstpt
cwtl
repnz
inc
xor
pop
xor
movsl
repz
aas
pop
add
call
sbb
sbb
dec
fdiv
or
out
dec
movsl
jbe
test
jge
into
xchg
pop
jbe
inc
inc
lret
movb
in
shll
jg
cmp
std
nop
xchg
iret
jmp
jge
cli
rorl
or
push
fwait
push
sahf
fisubrl
movsl
pop
sbb
mov
adc
bnd
adc
add
prefetch
icebp
and
jp
jo
test
imul
pop
in
dec
mov
ljmp
mov
xchg
sub
xchg
mov
imul
push
in
cmp
in
or
negl
adc
lea
mov
jae
insl
xor
sub
popf
mov
jmp
aas
add
mov
std
xchg
mov
bound
add
in
cmc
add
jb
hlt
jns
rcrl
dec
pop
jg
or
paddsw
and
lret
sbb
in
lret
push
mov
int3
dec
aam
xchg
add
out
xor
ljmp
adcb
lahf
add
or
int
push
rcrb
arpl
imul
ss
xchg
or
mov
jl
pop
movsb
shlb
jecxz
jle
push
mov
jmp
scas
nop
sarb
cmp
mov
int3
pop
mov
imulb
andl
cwtl
insb
fldt
scas
add
inc
sbb
rcr
repnz
mov
ret
adc
inc
fs
insb
dec
mov
ja
neg
sbb
jne
jmp
test
ljmp
pop
cmpsb
mov
lret
hlt
inc
mov
lods
xor
xchg
data16
fadds
push
jecxz
repnz
jns
and
mov
enter
xor
addr16
xor
xchg
sbb
addl
mov
xchg
cmp
sub
pop
push
movsb
leave
push
mov
cmp
mov
xchg
or
or
jno
dec
out
or
jecxz
pop
aad
ds
push
movsl
repnz
fstps
jle
pop
test
idivb
clc
jbe
sbb
sbb
popf
ljmp
decl
pusha
daa
mov
sub
mov
push
cli
insb
adc
jecxz
pushf
stc
stos
loop
adc
jo
out
das
mov
arpl
sub
dec
xchg
sub
fidivl
hlt
jns
mov
pusha
dec
cmp
or
pop
cwtl
or
adc
in
sbb
outsb
insb
popa
xlat
scas
mov
loop
add
push
push
inc
aad
add
les
xor
pushl
push
lret
fdivrl
dec
inc
jns
dec
insb
pop
scas
push
jne
sbb
cmp
mov
and
cmp
cmp
adc
xchg
rcrb
popl
xchg
movsb
nop
inc
mov
cmp
jl
and
xchg
sahf
out
xchg
mov
cmpsl
subl
mov
mov
adc
addr16
inc
out
push
aaa
std
inc
pop
sbb
pop
dec
jle
cmp
mov
add
testb
out
and
aas
adc
lods
and
std
xor
add
jp
test
push
or
fs
xchg
cmpsl
push
dec
mov
adc
mov
and
into
stos
xchg
xchg
mov
fimuls
xchg
incl
mov
mov
sub
rorl
outsb
addl
jecxz
sub
xor
andb
add
jl
loop
jp
cmp
jbe
hlt
mov
inc
jp
jns
mov
dec
arpl
xchg
push
arpl
pusha
loope
or
out
sub
push
mov
adc
xor
pop
push
inc
ss
movsl
mov
xor
cmp
sbb
jp
pop
out
mov
xchg
xchg
repnz
xor
and
xchg
in
jmp
lret
sbb
and
sbb
shrl
into
in
das
jb
sub
pop
sub
xchg
lcall
in
sub
test
in
ret
fidivrl
cmpb
cmc
outsb
cli
jae
mov
jne
fcoms
je
push
jne
inc
mov
cltd
dec
jg
dec
and
jge
gs
jl
outsl
cmpl
inc
js
stos
pop
jp
loopne
jnp
inc
mov
insl
push
lock
cli
clc
outsb
adc
jae
cmc
mov
icebp
imul
jl
arpl
sub
dec
ljmp
cmpsb
addr16
and
xchg
rorl
test
push
dec
add
clc
and
sbb
ret
rol
les
enter
sarl
jecxz
shl
cmc
int3
iret
inc
dec
bswap
jp
dec
int3
aas
je
int
sbb
mov
es
sbb
mov
test
clc
pop
mov
adc
sub
xor
push
and
xchg
add
push
adcb
dec
push
outsl
inc
iret
fisubrl
xchg
xor
outsb
mov
std
sub
jne
and
mov
not
daa
mov
test
fucom
sub
das
lret
scas
scas
cs
movsl
popa
xor
jnp
xor
hlt
xor
cmpsl
xor
imul
aad
pop
test
sbb
push
add
adc
xchg
and
sub
add
ja
cmp
mov
test
sbb
or
sbb
xchg
mov
aam
rclb
adc
ficoml
jns
add
fchs
sub
fcoms
lcall
imul
test
mov
jle
repnz
push
sub
push
shrl
ljmp
xchg
fldpi
mov
cmpsl
out
lds
inc
mov
adc
idivb
push
cli
jns
inc
cmp
enter
leave
scas
je
lret
fsubs
iret
sub
cmp
iret
mov
lods
xchg
shl
nop
pop
int
xchg
mov
jmp
sti
xor
xchg
add
hlt
and
mov
sahf
sarl
push
push
mov
and
je
frstor
lock
dec
mov
out
or
mov
orl
push
pop
mov
jp
cmpl
adc
sbb
orl
movhps
adc
xor
or
imul
and
adc
and
insl
adc
xor
push
outsl
sub
lods
and
icebp
icebp
fcomps
jne
loop
mov
addr16
out
mov
cmp
std
mov
mov
inc
rorl
push
cmp
mov
cmp
lret
int
cmp
testl
push
or
add
mov
lods
pop
rcrl
mov
aam
jns
push
inc
xor
into
out
stc
fsubr
add
aam
mov
cmp
in
or
mov
popa
cmpsb
inc
in
inc
jmp
testl
sti
test
jl
inc
xchg
fs
das
lret
mov
stc
sub
sub
adc
cmpsl
mov
incb
into
and
cmp
pop
leave
mov
sti
pop
sahf
les
inc
add
out
aam
jp
loop
out
cmp
jae
push
cli
dec
sbb
std
pushf
mov
mov
xchg
or
cld
pop
mov
pop
movsl
push
or
dec
enter
daa
xchg
mov
mov
data16
ds
adc
ljmp
push
and
outsl
and
dec
test
inc
shrl
repz
scas
mov
loopne
popf
ret
xchg
push
les
adc
ljmp
fistpl
ljmp
daa
sahf
mov
xor
jecxz
test
push
pop
fwait
lahf
sub
xor
mov
adc
mov
jl
jmp
rolb
jnp
pop
js
sbb
dec
mov
hlt
xchg
dec
push
dec
mov
or
and
leave
jnp
ret
je
adc
bound
popa
and
js
dec
xchg
mov
data16
pusha
out
call
add
add
add
fisttpl
mov
shlb
add
and
lcall
aas
xchg
mov
daa
inc
sbb
or
mov
outsb
dec
jo
shl
lock
inc
sti
lcall
dec
lock
repnz
inc
adc
stc
xor
shlb
pop
lret
mov
sub
adc
and
inc
das
cmp
out
mov
mov
mov
jns
adc
jge
inc
or
jg
imul
add
hlt
xchg
mov
ljmp
mov
mov
mov
jne
push
jecxz
test
lea
sbb
lcall
and
rcll
add
in
inc
xor
bnd
iret
imul
int3
mov
in
adc
aas
push
lods
sbb
testb
add
and
aas
ret
ret
test
jo
imul
mov
hlt
pop
mov
andb
ja
test
pop
cmp
add
add
fidivrs
enter
xor
rolb
subb
in
mov
add
push
mov
and
or
test
into
movsl
testb
rsm
adc
and
sbb
aam
cmpsb
addb
fcom
mov
test
inc
jo
xchg
cmpsb
push
jo
sbb
add
ss
std
cmp
inc
jno
dec
jbe
add
into
cli
sub
inc
sti
cmpsb
jo
stc
inc
adc
push
mov
cwtl
jmp
dec
cli
mov
cmpsl
inc
or
repz
pusha
dec
mov
pop
pop
or
jg
and
popf
cs
pop
push
mov
mov
pop
sbb
cmc
loopne
push
xor
jg
movsl
aas
add
xchg
ja
lods
xor
cmp
push
or
push
lahf
addl
mov
loope
aaa
add
in
loopne
mov
fisubrl
mov
push
mov
cmp
icebp
daa
lret
popf
push
or
bound
mov
out
inc
jnp
addr16
aad
pop
int3
xor
mov
or
adc
push
mov
mov
test
push
faddl
in
jne
fstp
int
cmp
push
test
jb
mov
push
into
adcb
add
mov
xchg
or
mov
jae
sub
xchg
and
push
pop
daa
sbb
add
add
add
lock
shll
jbe
xor
iret
mov
pop
add
bound
aam
jnp
ret
pop
imul
inc
lcall
pop
cmp
adc
call
push
push
fisubrl
push
test
ret
adc
outsl
inc
out
std
xchg
scas
dec
dec
mov
pusha
insb
xchg
jle
repnz
imul
add
lret
lods
lcall
mov
inc
add
xorl
insb
int3
mov
adc
outsb
jecxz
aam
jne
fisttpll
pop
mov
xor
fcoml
inc
xlat
popa
push
mov
and
mov
bswap
test
or
stc
xchg
mov
sub
xchg
dec
adc
push
cs
data16
jno
psubusw
mov
mov
test
daa
push
mov
movsl
pop
in
cld
push
aam
sbb
leave
in
sub
push
adc
or
aad
sub
sbb
and
push
cli
inc
and
insb
lahf
and
add
jb
add
add
inc
mov
or
popa
decl
enter
ds
pop
mov
sbb
mov
mov
mov
jl
dec
mov
repz
popa
sbb
pop
mov
mov
and
and
dec
mov
mov
sub
daa
mov
xchg
and
lds
add
cmp
add
push
scas
pop
pop
jp
lcall
loope
or
scas
add
lret
fiaddl
fiaddl
xchg
mov
xlat
repnz
mov
imul
dec
fwait
or
loop
stos
pop
ljmp
push
fdivs
mov
and
cmp
lods
in
add
cli
add
mov
adc
push
xchg
push
mov
dec
xchg
jp
or
repz
frstor
mov
xchg
inc
xchg
call
imul
mov
imul
test
mul
jo
pusha
loop
jecxz
out
pop
inc
xlat
ror
xor
pop
add
sbb
add
mov
aad
fstpl
jle
rol
les
mov
icebp
shll
add
dec
pop
subb
push
mov
out
jp
pop
addr16
ret
fcoml
data16
out
xor
jns
data16
jnp
sbbb
shll
stos
xorl
inc
add
aad
adc
das
bound
or
jl
pop
xchg
pop
mov
lods
pushl
and
sahf
add
pop
sbb
push
dec
and
test
sub
test
push
addl
call
addr16
dec
or
pop
jp
in
push
sub
clc
dec
sbb
mov
and
shlb
mov
rol
ret
lods
loop
sbb
mov
or
push
push
ja
in
dec
inc
cmp
mov
add
push
aad
add
or
and
je
sub
shll
inc
push
mov
insb
adcl
or
int
sbb
cwtl
add
sub
pop
mov
inc
mov
push
xchg
scas
out
mov
jno
mov
cmp
pop
and
lods
push
leave
mov
dec
icebp
repz
fsubl
mov
dec
sub
nop
pop
lods
mov
sahf
mov
mov
mov
mov
mov
adc
xchg
popf
xchg
dec
xor
mov
mov
or
clc
jmp
shlb
inc
fisttpl
adc
jbe
push
or
incl
je
test
int
les
dec
inc
dec
arpl
xrelease
jecxz
test
sete
dec
addr16
mov
data16
int3
mov
and
adc
sub
xor
push
push
icebp
push
add
or
pop
add
stos
sbb
ljmp
pop
movsb
pop
pop
push
stos
outsl
sbb
dec
cmp
and
daa
mov
enter
mov
je
es
loop
mov
out
cmp
and
shll
stos
imul
inc
test
imul
xchg
or
push
xor
mov
sbbb
xor
push
roll
pause
cmp
mov
movsl
out
aam
pop
ficoms
cmpsb
push
out
popa
xchg
jns
dec
lahf
dec
cmp
sub
lret
and
sub
push
mov
mov
push
in
or
cmp
dec
hlt
lret
cmpsl
add
add
add
fimuls
push
aam
dec
pop
cmp
pusha
insb
orl
jns
push
xor
es
and
movsb
mov
testb
orl
in
inc
adc
cld
add
push
int3
loope
in
and
cmc
cs
mov
cmp
xchg
outsl
jmp
lock
jge
jmp
rorb
imul
ss
test
or
fs
aas
ja
cmp
xor
xor
dec
mov
daa
popa
jae
push
mov
dec
mov
aad
ja
ret
mov
mov
jne
mov
push
divb
push
hlt
stc
cld
out
or
mov
lods
dec
sub
push
add
mov
xchg
imulb
repnz
or
xor
lock
rorb
daa
push
js
adc
into
cmc
push
xchg
jp
cltd
inc
or
add
jno
ret
dec
cmpl
inc
pop
fsubr
add
add
jg
es
mov
iret
mov
pop
and
jmp
int
fcmovu
ret
push
add
loop
pop
shl
pushf
jmp
jo
adc
xor
gs
nop
add
and
push
xor
push
pop
leave
mov
aad
mov
test
imul
jp
hlt
sahf
dec
lods
sbb
dec
sub
xchg
xor
add
cmp
data16
clc
pop
ret
add
test
lret
mov
lahf
xlat
ret
nop
int3
test
pop
imul
push
pop
mov
insb
or
mov
and
jmp
fidivrs
add
inc
mov
lods
pop
loope
les
sarb
inc
andl
mov
enter
subl
mov
adc
adc
pop
andl
addr16
jo
push
imul
rcr
imul
adc
xchg
or
ds
dec
int3
aaa
daa
lahf
or
lret
lods
and
or
lret
shlb
pop
std
lock
sbb
push
aaa
mov
sbb
or
jecxz
movsb
dec
lcall
mov
xlat
push
jg
sahf
push
jbe
pop
in
jbe
in
add
adc
pop
out
and
dec
xor
cmp
jno
xor
mov
icebp
xor
cli
mov
out
jne
int3
stos
mov
pop
mov
out
mov
cmpsb
gs
test
jecxz
cmp
mov
and
repnz
fisttpll
mov
iret
inc
push
cmp
cmp
jge
std
cmpsb
mov
stos
repz
cmp
add
mov
andb
mov
ret
jne
je
mov
jg
repz
aad
pop
imul
add
dec
jbe
ljmp
pop
out
xor
test
add
cmpb
rclb
xor
cmp
repz
cli
fs
xor
push
or
mov
cmp
add
sub
inc
nop
insl
je
shrl
mov
arpl
ret
mov
mov
icebp
enter
incl
cltd
dec
xchg
jp
pop
adc
adc
and
lea
mov
dec
pop
ret
inc
loopne
test
xlat
sub
xchg
mov
fnstcw
out
jb
addl
inc
sub
mov
fs
jns
lods
ret
mov
mov
jb
sbb
add
add
xchg
icebp
rcrb
pop
aam
dec
inc
aam
daa
and
rcr
repnz
mov
int
fisubrs
pushf
leave
or
xchg
sbb
add
dec
xchg
xchg
enter
mov
dec
les
out
mov
ljmp
and
ja
lahf
adc
fnstenv
divl
xor
clc
mov
roll
mov
sar
rol
rol
movb
mov
lret
fisttpll
push
or
adc
mov
pop
adc
dec
fnsave
pop
dec
bound
inc
and
ljmp
out
add
pop
shlb
and
sub
jnp
dec
xor
imul
xor
stos
loopne
das
dec
and
lods
dec
dec
cmc
movsl
adc
inc
test
movsb
in
stos
pop
nopl
loop
fs
pop
aad
mov
mov
mov
xchg
jmp
jmp
insl
pop
faddl
out
test
add
xor
sbb
sub
test
push
sub
inc
into
sbb
adc
cwtl
cmpsb
flds
lds
imul
xor
push
add
mov
cvtdq2ps
push
dec
test
popa
dec
jecxz
in
dec
adc
xor
mov
jnp
rol
imul
test
jl
jns
mov
inc
movsb
lods
jne
mov
dec
test
jg
or
mov
std
inc
add
mov
sub
xor
incl
minps
enter
leave
push
cmc
ljmp
xchg
and
int3
dec
sub
pop
data16
mov
fidivl
xchg
ret
addr16
popf
mov
jecxz
xor
imul
out
aas
inc
mov
push
fidivl
mov
in
mov
out
test
scas
ss
je
and
cli
sahf
cld
movsl
aas
xchg
jg
jge
dec
mov
add
test
pop
sbb
js
iret
test
jl
push
es
loope
push
mov
shl
dec
add
pushf
and
ja
jb
jns
jae
mov
pusha
xchg
mov
mov
je
scas
pop
insl
mov
gs
orl
pusha
inc
cltd
jb
inc
or
inc
add
outsl
mov
mov
es
insl
ffreep
push
fs
xor
imul
sub
mov
push
cwtl
int
scas
imul
ds
pushf
dec
push
andl
dec
mov
or
inc
sub
inc
mov
mov
dec
lock
and
shll
xchg
in
push
xor
pop
loope
push
pop
fwait
cmp
add
or
push
je
push
mov
call
cmc
push
jle,pn
xor
das
mov
mov
aaa
in
aaa
lea
add
cmc
ret
mov
stos
xchg
push
cmp
repz
pop
fdivl
dec
sub
add
hlt
dec
mov
push
jecxz
mov
daa
mov
fldl
je
das
lods
adc
out
lahf
dec
pop
xor
insl
cld
pushf
adc
pusha
sti
jno
rorl
adc
or
mov
mov
push
jg
aaa
icebp
pop
mov
jno
rorb
cld
push
call
int3
jb
and
cli
std
inc
push
add
enter
cmp
sti
push
mov
ds
aaa
mov
jae
mov
out
sub
imul
push
cmp
dec
push
loope
sub
xor
jbe
and
orl
ss
clc
out
sub
and
inc
dec
xchg
int3
xor
and
call
xchg
mov
daa
inc
mov
rolb
jmp
xchg
call
ja
sbb
pop
out
or
jae,pt
and
std
stc
push
bound
dec
out
inc
add
unpcklps
ds
lods
ss
scas
sbb
mov
inc
jmp
in
rorb
sub
push
bound
and
les
add
sub
pushf
push
testb
inc
jge
jmp
sbb
inc
scas
dec
aaa
xchg
lea
out
std
cltd
add
adc
jnp
mov
xchg
div
ja
ljmp
sbb
jg
mov
add
pop
push
push
push
fstl
faddl
mov
daa
mov
sahf
fs
mov
add
add
mov
add
in
int3
dec
mov
stc
data16
pop
out
pop
or
xchg
xor
jmp
push
scas
cld
inc
andl
jae
mov
push
arpl
inc
clc
or
popf
xchg
pusha
sbb
jae
fsubrl
scas
inc
aad
lret
mov
mov
fistpll
or
aad
mov
insb
add
add
fistpll
lea
push
fsqrt
mov
insb
push
pop
lods
xlat
xor
mov
outsb
call
jg
cmpsb
xor
loopne
out
jnp
iret
cmc
enter
jne
push
shlb
adc
push
mov
mov
mov
addb
pop
gs
xchg
pop
jp
sub
add
scas
pushf
xchg
and
pop
icebp
cmp
call
jle
add
pop
mov
and
mov
pop
inc
out
ret
and
pop
xor
xor
push
add
sub
in
shlb
lea
cmp
xlat
icebp
dec
adc
sti
adc
js
mov
mov
sbb
lahf
dec
push
clc
scas
adc
js
stc
mov
scas
repnz
pop
cmp
sbb
dec
mov
and
adc
sub
mov
add
jl
jecxz
cs
pop
sub
aas
nop
cltd
fdivs
add
jp
jmp
add
popa
mov
arpl
test
fcomps
adc
icebp
push
xor
jne
jnp
aad
cltd
je
arpl
test
enter
or
and
in
sbb
xchg
push
clc
wrmsr
cmc
push
fdivrs
mov
inc
or
and
pop
shrl
cmp
aas
iret
test
mov
aam
aam
jns
imul
xchg
sbb
addl
dec
clc
or
pop
imul
lds
arpl
std
orb
xor
outsb
sub
adc
ret
pop
mov
lock
in
aam
dec
jnp
ds
dec
jl
pop
sub
cmpsb
out
cmpsb
xor
int
fnstenv
xchg
and
pop
add
sub
or
push
lea
add
sar
adc
in
lcall
mov
ljmp
mov
add
mov
mov
mov
add
mov
decl
sar
jle
repnz
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
add
idiv
adc
idiv
adc
sar
lret
pop
add
in
add
mov
add
mov
add
mov
iret
mov
add
mov
add
mov
jmp
xchg
jmp
mov
ljmp
mov
add
sti
add
jg
clc
add
add
testb
mov
add
mov
add
mov
add
mov
add
mov
add
out
add
mov
add
mov
and
bound
sub
or
jnp
sbb
bound
add
leave
icebp
pop
and
mov
jbe
arpl
mov
jbe
call
out
or
lea
add
lea
test
or
jmp
cmp
mov
dec
pop
xchg
add
or
cmpsb
cmp
aas
outsb
add
lea
mov
lea
mov
out
push
xor
imul
imul
das
mov
or
addl
add
imul
mov
rorl
insl
add
mov
into
mov
fimuls
fs
mov
add
inc
add
pop
inc
add
cmp
lret
add
add
pop
mov
push
mov
mov
add
mov
movl
mov
add
inc
mov
inc
mov
add
out
add
test
add
xor
or
cltd
ljmp
xchg
ret
lods
sbb
test
jle
mov
xchg
sub
jns
cmp
jne
xor
jno
loope
sub
sbb
imul
push
in
jne
stc
or
jns
push
aad
roll
loope
in
push
frstor
mov
out
dec
jmp
mov
je
std
mov
ds
mov
push
or
orw
lea
outsb
mov
cld
jns
sbb
jbe
sbb
popf
adc
pop
cltd
adc
movsl
sub
inc
mov
and
mov
cld
aaa
xchg
mov
xor
jle
lock
inc
int3
and
dec
les
cmp
mov
and
sbb
or
in
filds
ljmp
fld
fucomp
aad
loope
sarl
sti
jmp
mov
or
xchg
adc
sahf
adcl
add
lods
and
scas
mov
adc
mov
xor
jnp
cmp
jbe
cmp
mov
pusha
lds
je
lea
pop
jo
jle
je
movntq
adc
pop
pop
pop
iret
inc
inc
sub
inc
inc
lahf
dec
dec
mov
mov
push
push
outsl
pop
jnp
loop
jg
mov
addl
mov
nop
xchg
jnp
xchg
xchg
outsl
push
cltd
fwait
push
add
mov
pushl
lods
scas
daa
push
mov
sbb
mov
mov
mov
imul
lret
arpl
iret
mov
dec
popa
stos
pop
ficoml
push
fimuls
pusha
loop
insl
pop
out
mov
fs
cmp
jo
cmp
lret
js
xor
repz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decb
enter
repnz
decl
repnz
decl
repnz
decl
lea
ljmp
mov
add
mov
add
mov
add
nop
ljmp
mov
add
mov
add
mov
add
mov
mov
ljmp
mov
add
mov
rorl
pop
jae
mov
add
mov
add
mov
das
sbb
call
jnp
lea
add
lea
add
lea
sti
out
out
fidivrs
add
lea
add
lea
add
lea
mov
lea
add
lea
add
out
jmp
lea
sub
mov
jmp
cmpsl
mov
add
mov
add
popl
add
add
ja
add
mov
add
add
ja
add
jbe
add
out
add
out
addl
cmp
pop
sbb
xchg
add
aaa
mov
xorb
sbb
cmp
adcb
add
adcb
cmc
jg
adc
jg
xorb
adc
xchg
sbb
mov
jg
adc
jg
adc
loop
adc
pop
add
hlt
decl
repnz
decl
mov
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
repnz
decl
mov
add
mov
add
mov
ljmp
mov
add
mov
ja
mov
mov
stc
add
outsl
sarl
lds
cmc
add
lods
iret
mov
mov
iret
mov
lret
cmp
mov
xor
cmp
mov
rolb
xor
cmp
xor
add
mov
dec
add
lahf
xor
mov
add
fyl2x
ja
cmp
pop
daa
cmp
and
dec
add
mov
mov
dec
add
mov
add
xchg
dec
popf
dec
add
jl
add
add
mov
jg
adc
fldl
dec
add
mov
out
daa
dec
add
mov
add
mov
movsb
inc
add
pop
push
movsb
inc
add
mov
add
xchg
add
and
cmpsb
lods
add
and
jne
add
dec
and
lods
add
and
jnp
add
sbb
add
add
mov
inc
add
lods
add
into
sbb
sub
add
lods
add
outsb
sbb
lods
add
jle
inc
add
jl
add
in
and
mov
adc
mov
mov
and
mov
inc
mov
and
mov
mov
mov
xor
mov
mov
mov
and
mov
mov
mov
and
add
in
add
in
add
mov
mov
mov
mov
mov
and
mov
inc
mov
and
mov
and
mov
adc
mov
inc
mov
jp
dec
mov
adc
mov
adc
mov
adc
dec
mov
mov
cmc
and
mov
and
mov
and
mov
and
mov
and
mov
adc
mov
adc
mov
iret
mov
mov
mov
es
mov
mov
mov
add
add
aas
dec
add
add
dec
add
stos
mov
xor
dec
add
stos
mov
and
dec
add
stos
mov
adc
dec
add
push
dec
add
push
dec
add
imul
clc
imul
fldt
dec
add
stos
mov
mov
dec
add
push
dec
add
dec
add
fwait
mov
jns
cld
dec
add
fwait
mov
jns
dec
add
js
add
js
add
inc
add
ja
add
inc
add
ja
add
inc
add
ja
add
sbb
sbb
add
inc
add
add
aaa
sbb
cwtl
js
add
sbb
imull
inc
add
test
add
sbb
xor
sbb
add
add
push
sbb
xor
inc
add
test
add
sbb
jno
add
into
cs
add
fwait
lods
inc
mov
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
add
and
sbb
add
add
add
and
add
and
add
and
inc
mov
and
inc
mov
inc
scas
iret
mov
scas
iret
mov
es
mov
scas
iret
mov
es
mov
scas
dec
mov
mov
dec
mov
es
mov
scas
add
es
mov
scas
dec
mov
es
mov
scas
dec
mov
and
dec
mov
scas
dec
mov
and
dec
mov
and
iret
mov
scas
iret
mov
scas
iret
mov
scas
iret
mov
mov
add
insb
mov
inc
decl
dec
insb
mov
xor
dec
add
insb
mov
and
dec
add
mov
adc
dec
add
lods
mov
inc
aas
dec
add
lods
mov
xor
dec
add
pop
dec
add
mov
adc
dec
add
outsl
mov
sar
add
outsl
mov
mov
dec
add
fimuls
mov
ds
add
ds
add
push
dec
add
fldt
inc
add
lods
add
push
sbb
add
lods
add
into
sbb
add
lods
add
pop
sbb
add
addb
mov
inc
add
sub
lods
addb
ja
inc
add
add
inc
add
sub
ret
add
inc
add
sbb
shrb
daa
fwait
adc
out
sbb
add
fwait
adc
push
sbb
in
adc
dec
sbb
mov
adc
push
mov
mov
adc
push
adc
imul
mov
mov
sub
mov
inc
mov
adc
insl
sub
mov
sub
mov
sub
add
bound
mov
lods
inc
mov
adc
xor
add
xor
add
mov
mov
scas
iret
mov
mov
and
mov
mov
and
mov
mov
scas
iret
mov
mov
scas
dec
mov
mov
scas
add
andb
mov
dec
mov
mov
scas
dec
mov
mov
scas
dec
mov
mov
scas
dec
mov
dec
mov
mov
and
mov
mov
dec
add
mov
sarb
add
mov
mov
dec
add
mov
mov
outsl
mov
nop
call
cmp
sti
jns
dec
add
cmc
dec
add
daa
dec
add
pop
dec
add
mov
inc
pop
dec
add
mov
xor
dec
add
mov
and
dec
add
add
pop
dec
add
push
dec
add
testb
pop
mov
add
hlt
inc
add
scas
add
push
hlt
inc
add
lods
add
add
inc
add
lods
add
push
hlt
inc
add
repz
add
hlt
inc
add
mov
add
hlt
inc
add
mov
add
inc
add
loopne
jmp
inc
add
sti
call
inc
add
add
dec
hlt
inc
add
add
sahf
hlt
inc
add
add
outsb
hlt
inc
add
add
sahf
hlt
inc
add
mov
add
repz
add
mov
and
inc
mov
inc
mov
lcall
lret
lcall
sbb
add
cmpsl
adc
inc
mov
push
add
and
xchg
inc
mov
inc
mov
and
inc
mov
and
inc
mov
and
xchg
inc
mov
and
inc
mov
and
inc
mov
ret
xchg
dec
mov
xchg
dec
mov
repz
pop
cltd
iret
mov
es
mov
es
mov
xchg
iret
mov
es
mov
es
mov
es
mov
and
iret
mov
xchg
add
mov
xchg
dec
mov
xchg
dec
mov
and
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
jae
add
sbb
inc
jae
add
clc
dec
add
jae
add
mov
add
mov
add
mov
add
clc
dec
add
mov
add
add
add
jae
add
insb
mov
inc
pop
dec
add
insb
mov
xor
dec
add
lods
mov
and
dec
add
lods
mov
adc
dec
add
pop
dec
add
testl
add
inc
add
test
inc
add
add
into
repnz
add
add
fdivp
inc
add
fdivr
incl
out
inc
add
hlt
inc
add
hlt
inc
add
add
hlt
inc
add
add
out
repz
add
lods
add
push
hlt
inc
add
add
into
hlt
inc
add
lods
add
pop
hlt
inc
add
lods
add
scas
hlt
inc
add
lods
add
sahf
hlt
inc
add
hlt
inc
add
fwait
lcall
stos
lcall
mov
inc
mov
add
cmp
call
in
decl
in
decl
in
decl
in
decl
in
decl
in
decl
in
decl
in
decl
in
decl
jecxz
add
out
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
pop
xchg
xchg
pop
mov
out
pop
mov
out
pop
mov
out
pop
mov
xchg
pop
mov
out
pop
mov
out
pop
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
scas
mov
nop
add
call
rolb
add
scas
mov
mov
dec
add
outsl
mov
mov
outsl
mov
nop
add
in
jle
add
dec
add
sbb
sti
xor
dec
add
lock
sti
ljmp
movsl
add
jle
inc
add
movsl
add
dec
cli
inc
add
movsl
add
jle
inc
add
inc
add
cli
inc
add
into
cli
inc
add
cld
inc
add
sti
out
cli
inc
add
add
sti
inc
add
add
dec
cld
inc
add
add
sti
inc
add
add
sti
inc
add
add
sti
inc
add
jl
add
cld
inc
add
pushf
xchg
inc
mov
xchg
inc
mov
inc
mov
xchg
inc
add
fwait
xchg
inc
mov
and
inc
mov
xchg
inc
mov
xchg
inc
mov
idiv
mov
xchg
inc
mov
idiv
jns
xchg
inc
mov
inc
mov
and
inc
mov
and
inc
mov
and
inc
mov
and
inc
mov
inc
iret
mov
add
into
sbb
repz
int
dec
mov
es
mov
dec
mov
and
dec
mov
and
dec
mov
and
dec
mov
and
dec
mov
jle
mov
mov
popf
xchg
iret
mov
mov
mov
and
iret
mov
and
iret
mov
and
add
mov
mov
mov
mov
adc
sbb
mov
inc
add
pop
std
int3
sti
sbb
cld
int3
sti
and
dec
add
mov
add
adc
loopne
mov
inc
add
shll
add
adc
ret
add
add
mov
mov
adc
dec
add
mov
rolb
add
jge
sti
popf
pop
dec
add
add
sti
mov
pop
int3
sti
nop
adc
test
int3
sti
rolb
add
adc
add
fdivr
out
cld
inc
add
fdivr
cld
inc
add
sti
dec
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
sti
jle
inc
add
incl
outsb
cli
inc
add
sti
jle
inc
add
sti
dec
cli
inc
add
sar
ds
add
sti
ljmp
sbb
add
sar
sbb
push
sar
dec
sbb
add
cld
xchg
inc
mov
xchg
inc
mov
idiv
and
inc
mov
xchg
inc
mov
xchg
inc
mov
xchg
inc
add
fwait
xchg
inc
mov
call
dec
xchg
inc
mov
inc
jnp
inc
mov
pushl
mov
xchg
inc
mov
idiv
xchg
lret
xchg
inc
mov
idiv
cmp
idiv
jno
xchg
inc
mov
idiv
popa
sbb
hlt
push
lret
iret
mov
nop
iret
mov
nop
iret
mov
popf
iret
mov
adc
sub
repz
fwait
lea
dec
repz
leave
mov
jle
mov
mov
dec
mov
and
mov
adc
mov
repz
mov
repnz
leave
ret
mov
repnz
aad
jno
mov
mov
add
dec
add
sbb
fwait
outsl
fwait
add
dec
add
fwait
add
dec
add
fwait
add
dec
add
add
dec
add
fwait
add
dec
add
lods
fwait
add
dec
add
lods
fwait
add
dec
add
lods
fwait
add
dec
add
insb
fwait
add
dec
add
insb
fwait
add
dec
add
outsl
fwait
add
dec
add
add
add
dec
add
scas
fwait
add
dec
add
dec
push
add
push
inc
add
fwait
add
sbb
out
add
sbb
mov
add
sbb
movsb
fwait
add
out
sbb
mov
add
sbb
mov
and
jno
add
mov
jno
add
jno
add
inc
add
add
add
inc
add
and
cmp
add
outsb
and
sub
add
inc
add
jno
add
inc
add
sti
lcall
jmp
inc
mov
pop
sbb
inc
mov
decl
lcall
cld
lcall
in
lcall
sbb
inc
mov
decl
dec
lcall
stc
jnp
inc
mov
jmp
pop
idiv
fstps
idiv
leave
dec
lcall
jnp
inc
mov
idiv
test
pusha
idiv
cltd
fwait
lcall
mov
iret
mov
mov
iret
mov
imul
mov
mov
cwtl
iret
mov
mov
cwtl
iret
mov
add
mov
mov
cwtl
iret
mov
sbb
xchg
cwtl
iret
mov
xchg
dec
mov
dec
mov
xchg
dec
mov
xchg
dec
mov
mov
inc
repz
mov
test
mov
inc
popf
vmovsd
dec
add
dec
add
add
dec
add
clc
dec
add
mov
nop
clc
dec
add
mov
rcrb
add
mov
mov
dec
add
jo
add
jo
add
mov
add
dec
add
sbb
jle
mov
and
dec
add
mov
pusha
mov
dec
add
mov
xor
dec
add
add
add
inc
add
add
jle
inc
add
popf
add
dec
sbb
add
ds
add
cs
add
sbb
add
add
dec
sbb
add
sbb
add
out
sbb
add
add
sbb
add
imul
add
cwtl
add
mov
int
add
scas
and
das
sar
jle
inc
add
mov
inc
add
jnp
inc
mov
cmc
call
out
cmc
incl
ja
add
push
incl
jns
call
movsb
and
mov
fwait
inc
mov
lcall
sti
lcall
jmp
inc
add
sbb
add
add
push
inc
xchg
inc
mov
idiv
loope
lcall
fwait
lcall
mov
dec
mov
cltd
dec
mov
cltd
dec
mov
cltd
iret
mov
mov
cwtl
iret
mov
mov
and
mov
add
xchg
cwtl
iret
mov
and
mov
and
mov
and
push
and
mov
and
mov
and
mov
and
mov
sarl
adc
dec
add
and
sti
rorl
add
insb
fwait
add
dec
add
add
dec
add
sti
shlb
add
sar
add
push
pop
sar
add
cmp
sti
popf
and
sbb
dec
add
cmp
dec
add
sbb
sti
lods
add
std
sbb
sti
nop
and
fdivr
sar
and
fisttps
dec
add
and
inc
add
mov
inc
add
out
mov
inc
add
sbb
or
sti
ljmp
inc
add
mov
inc
add
mov
inc
add
push
add
sbb
enter
push
adc
add
add
aaa
mov
add
or
adc
cmp
adc
or
pop
aad
add
pop
add
mov
add
xchg
add
or
add
push
into
aas
mov
pop
jle
scas
call
mov
int
mov
int
mov
pop
add
arpl
add
sbb
aas
mov
add
mov
mov
pop
or
mov
or
mov
int
mov
jmp
mov
int
mov
into
aas
add
lock
mov
into
aas
mov
push
mov
aas
mov
push
into
mov
xchg
add
mov
add
mov
add
mov
xchg
mov
jno
adc
mov
add
mov
add
mov
int
mov
add
jle
inc
int
mov
add
mov
add
mov
add
mov
add
mov
add
mov
adc
jge
jecxz
xchg
add
ret
jge
xor
cltd
add
xchg
xchg
add
jge
stc
lea
add
popl
gs
jge
enter
jne
sarl
das
xchg
xchg
add
jge
rorb
jge
cmp
jge
enter
dec
push
jge
rorb
jge
dec
xchg
nop
add
dec
jge
aas
xchg
cwtl
add
dec
jge
push
xchg
fwait
add
dec
jge
add
xchg
add
les
add
lds
add
mov
add
cmp
clc
mov
add
cmp
add
mov
add
les
add
les
add
adc
jmp
cmp
xor
cmp
popf
mov
add
mov
add
mov
add
cmp
xchg
cmp
adc
cmp
fisttps
cmp
rorb
add
sub
aas
mov
push
lds
mov
lds
mov
pop
or
addb
mov
leave
aas
mov
pop
xor
add
push
mov
pop
or
loop
aas
mov
aas
mov
push
add
lds
mov
push
push
mov
incl
mov
lds
mov
lds
mov
jle
mov
call
mov
aas
mov
inc
imul
push
add
mov
leave
mov
add
mov
lds
mov
add
mov
add
mov
mov
xor
mov
es
mov
leave
mov
add
mov
xchg
mov
test
mov
cltd
mov
test
add
lea
cltd
push
jp
pop
lea
add
jp
pop
lea
add
lea
add
mov
rcl
add
test
rcl
add
sarl
cmpsb
mov
jns
fmuls
dec
add
lea
add
js
fisttpll
test
or
mov
add
xchg
add
or
lea
add
inc
add
lea
add
or
mov
push
add
popl
add
or
sub
decl
add
and
inc
add
xor
ja
inc
add
popl
push
or
add
mov
add
inc
add
das
add
inc
add
or
inc
add
or
pop
add
inc
add
pop
add
inc
add
mov
inc
mov
push
mov
addl
mov
add
mov
addl
incb
add
sub
pop
mov
addb
decl
mov
test
mov
add
sub
adc
push
test
xor
push
mov
test
pop
pop
pop
mov
test
aas
pop
adc
cs
push
mov
test
inc
pop
add
mov
add
mov
add
mov
add
mov
xchg
mov
mov
xchg
mov
xchg
mov
orb
add
mov
mov
pop
xchg
clc
add
sbb
mov
add
mov
xchg
inc
add
mov
add
mov
add
mov
je
pushf
mov
xchg
mov
arpl
dec
add
jl
rorl
add
lea
out
lea
add
or
lea
add
lahf
add
or
push
lea
add
lea
add
xchg
popl
rcll
dec
add
xchg
lea
flds
push
dec
add
xchg
rcll
add
lea
loope
dec
add
or
insl
xchg
lea
icebp
or
add
push
inc
add
sbb
cmp
inc
add
sbb
daa
push
inc
add
and
adc
inc
add
es
or
add
sbb
mov
popl
add
inc
add
dec
add
inc
add
xor
inc
add
sub
add
mov
add
inc
add
adc
imul
add
mov
add
add
xchg
inc
add
mov
add
add
mov
inc
mov
jmp
stos
mov
in
add
and
or
and
cmp
lret
ljmp
mov
incl
mov
add
mov
add
mov
add
mov
xchg
dec
add
mov
xchg
pusha
pop
or
xchg
pop
or
push
inc
mov
sub
push
inc
mov
decl
mov
popl
mov
jle
jbe
dec
mov
mov
mov
xchg
mov
mov
into
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
fs
mov
add
mov
add
mov
jge
bound
mov
dec
mov
and
mov
add
lea
test
lea
add
test
popf
or
repz
add
mov
push
or
stc
lea
add
lea
add
out
ds
nop
ds
push
paddw
ds
call
mov
jge
adc
nop
xor
mov
stc
out
or
and
add
sahf
aaa
aaa
dec
aad
xor
add
shlb
or
cmp
xchg
lods
and
xor
jb
push
leave
ss
jg
xor
mov
mov
rol
sub
sub
inc
clc
add
int
test
push
pop
mov
adc
nop
pop
jp
fistl
nop
gs
pop
pop
outsl
fldl
call
ljmp
xchg
pop
ds
fmul
sub
mov
test
jns
lds
inc
cmpsl
test
dec
aaa
xchg
jno
sbb
rcll
negl
stc
lods
jmp
ret
in
inc
icebp
inc
mov
stc
mov
mov
aas
sti
into
mov
adc
loopne
mov
cmp
add
add
scas
jno
sbb
cmp
sub
push
mov
add
mov
add
mov
add
mov
pop
add
mov
or
mov
push
mov
test
push
add
mov
push
mov
scas
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
call
add
mov
pop
in
mov
in
xchg
mov
jmp
mov
in
add
mov
jmp
mov
call
mov
nop
mov
ljmp
push
ljmp
add
xchg
mov
call
nop
mov
call
xchg
mov
jmp
xchg
mov
jmp
mov
call
lea
add
lea
push
mulb
cmp
jge
xchg
add
cmp
add
mov
nop
mov
jbe
or
jle
push
jbe
lahf
out
jl
mov
movsb
adc
push
add
pop
jge
push
pop
inc
and
ds
cmp
sahf
int
push
cmpsl
pop
daa
sub
clc
vpsubd
mov
out
jae
jge
pop
shrb
fisttpll
inc
or
sti
leave
mov
jmp
pushl
and
out
insl
cwtl
mov
pusha
sub
mov
rcr
or
test
push
ficompl
dec
cwtl
and
xchg
cmpb
mov
pop
push
cmp
jg
and
stc
mov
repnz
sbb
cmp
inc
add
pusha
int
mov
in
push
movsb
stos
cmpl
mov
pop
repz
adc
mov
stc
xchg
sub
lret
loope
jbe
mov
jne
popa
rorb
xor
clc
add
pop
dec
sar
and
dec
stos
push
outsl
push
leave
inc
fwait
add
add
fnstenv
leave
mov
and
add
dec
jo
bound
std
xor
and
test
mov
inc
in
jecxz
add
bound
cli
popa
jle
in
popa
xchg
std
popa
mov
dec
bound
out
pop
bound
xor
insl
adc
xchg
jl
test
and
test
pushf
mov
ds
clc
cs
add
push
xor
call
aas
mov
and
insl
lods
arpl
xchg
dec
push
popa
out
out
push
into
push
add
xchg
jle
std
test
lds
dec
clc
mov
mull
rorl
cli
mov
jge
cmpb
pop
inc
fidivrs
lea
cmpsb
iret
cmp
cmpsb
out
cmp
push
mov
icebp
jns
fistpll
inc
out
insl
mov
cwtl
push
cmp
pop
cmp
cmpsl
outsl
cmp
jg
pop
cmpsb
cmp
lahf
cmp
addb
adc
dec
dec
xor
pop
pusha
adc
clc
fdivr
sub
cmp
mov
aas
cmp
movsl
movsb
repz
sbb
add
in
jmp
ficoms
mov
clc
dec
cwtl
pop
stc
shll
jecxz
data16
sti
push
scas
repz
repz
mov
test
movlps
inc
sub
add
cli
jae
lret
js
mov
push
hlt
stos
addb
mov
jb
cli
mov
jmp
mov
jb
mov
add
mov
hlt
dec
mov
hlt
pop
stos
mov
imul
xor
movsb
cmp
in
adc
mov
add
cmp
notb
imul
cmc
mov
fdivp
cli
push
add
daa
out
cmp
dec
pusha
xchg
add
dec
ficoms
jnp
sub
rcrb
xchg
add
push
cmpsb
repnz
repnz
repnz
movsb
add
sbb
mov
pop
cmc
dec
pop
and
lret
data16
repz
repz
add
pop
and
cmp
xchg
fdivl
add
data16
push
std
mov
fdivrl
xor
sti
sub
xchg
xor
add
xorb
std
jb
mov
fxch
mov
test
stc
in
dec
pop
mov
fnsave
xor
loop
movsl
popf
shlb
popf
popf
ret
popf
jb
adc
push
bound
sub
cmp
aam
test
push
loop
jns
push
mov
xor
ja
stos
lahf
xchg
mov
xchg
jg
push
je
jg
pushl
and
push
xor
pop
xor
lahf
pop
xor
lahf
daa
xor
mov
inc
xor
sbb
jns
outsl
or
and
cmp
xchg
cmp
add
mov
xor
pushf
xlat
xor
pushf
out
sub
jae
mov
loop
and
xchg
hlt
add
icebp
pop
mov
test
ret
idivb
testb
push
imulb
mov
outsb
push
add
or
add
or
hlt
and
xor
div
push
mov
es
jae
bound
out
lock
mov
sub
lods
jp
adc
jp
int3
inc
hlt
jecxz
out
repz
testl
xchg
cmp
push
jge
rcrb
jb
test
cld
sub
jbe
push
jg
mov
stos
jle
mov
dec
mov
push
lods
push
div
push
mov
ljmp
pop
xor
dec
jns
cltd
stos
or
add
push
sbb
ret
cwtl
insl
pop
outsb
pop
inc
fld
divb
pop
outsb
test
je
sahf
pop
scas
imulb
add
push
adc
sub
jo
cvtps2pd
xchg
and
xchg
lahf
push
add
jno
sbb
ja
pop
lahf
xor
faddl
mov
adc
fs
cmp
xchg
dec
add
mov
mov
movsl
js
xchg
inc
cmp
fisttpll
sub
iret
mov
fldt
es
or
and
les
xor
add
shll
scas
nopl
movb
je
flds
leave
mov
test
jne
add
push
loopne
ljmp
mov
add
xor
sti
pushl
mov
add
mov
add
sbb
cmp
push
push
fnstsw
test
std
cmp
xchg
push
loop
test
push
cmp
and
loope
in
dec
cmp
mov
mov
ret
pop
fmull
pop
aad
loope
in
ljmp
ret
mov
adc
cmp
push
mov
adc
mov
push
add
sbb
jae
add
imul
arpl
and
pop
push
mov
push
icebp
pop
jbe
push
loope
inc
out
mov
push
aas
dec
stos
xchg
loope
sbb
sbb
xchg
jmp
push
xchg
loop
mov
add
mov
ljmp
mov
add
mov
add
mov
loop
insl
out
push
ljmp
pop
mov
fwait
pop
mov
dec
mov
ljmp
sub
lcall
mov
mov
sbb
add
mov
add
sbbb
xor
pop
sbb
mov
sbb
jno
and
insl
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
out
add
mov
add
mov
add
mov
cld
call
jno
inc
jno
call
jno
call
jno
call
jno
incl
cld
pushl
jno
pushl
jno
call
jno
incl
jno
incl
adc
jmp
add
imul
pushl
mov
or
shlb
shlb
call
jno
call
cld
inc
jno
pushl
mov
or
mov
jmp
mov
flds
dec
xchg
sub
shrl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
add
mov
add
mov
ljmp
mov
add
sbb
sub
sbb
add
mov
add
mov
add
pushf
sub
out
or
mov
or
cmp
add
mov
int3
mov
mov
add
inc
push
add
jb
add
push
add
inc
dec
add
push
add
xor
dec
add
push
dec
add
lcall
sub
cs
xor
fistps
push
cmp
inc
fwait
sti
cs
cmp
aas
pop
addr16
cmp
add
cs
sub
std
cs
push
es
das
add
sub
dec
inc
push
mov
dec
add
add
jae
fsubrl
dec
add
lock
outsl
dec
sbb
fs
popa
outsl
adc
jno
adc
jns
out
add
lock
push
lock
dec
cmp
fs
popa
outsl
push
in
jno
mov
add
jo
push
je
jne
mov
mov
frstor
lcall
sbb
jmp
pop
mov
mov
jmp
mov
add
mov
add
lea
add
gs
add
and
mov
inc
mov
and
pop
sub
cmc
jmp
jmp
push
add
idiv
push
mov
add
adc
mov
add
movsb
decl
mov
inc
mov
pop
xor
cwtl
jmp
jne
add
ljmp
mov
decl
cmc
fadds
xor
inc
mov
xchg
into
mov
mov
lret
add
mov
add
mov
add
flds
add
xchg
push
ljmp
cmp
sub
sub
dec
mov
aam
mov
dec
mov
ror
jl
into
mov
lock
mov
iret
jno
in
int3
mov
mov
out
mov
add
mov
mov
testb
mov
or
lea
inc
fildl
add
ja
lea
inc
int
dec
push
and
inc
mov
sub
push
add
scas
into
inc
inc
test
sbb
xchg
hlt
xchg
sti
mov
dec
add
stc
dec
add
add
leave
dec
add
rorl
push
leave
dec
add
cmp
add
daa
sbb
xor
xor
jno
sub
push
add
add
js
mov
add
dec
inc
in
jb
lock
imul
insl
fs
sti
jmp
mov
mov
sub
data16
mov
or
push
add
bound
adc
bound
cmp
insl
add
push
add
cmp
insl
add
popl
into
outsl
add
add
ljmp
mov
pushl
ljmp
mov
pushl
addb
mov
bound
jge
inc
mov
popa
inc
mov
movsb
inc
mov
movsb
inc
mov
inc
mov
bound
dec
bound
lahf
movsl
inc
mov
stos
push
roll
movsl
arpl
xor
mov
adc
ja
ljmp
mov
inc
mov
pop
inc
mov
decl
mov
add
mov
add
mov
add
mov
add
mov
iret
mov
add
mov
xchg
sbbl
testl
mov
nop
fdivrs
call
mov
jmp
sbb
test
xchg
push
adc
mov
hlt
fimull
jmp
iret
xor
lret
rolb
das
inc
inc
inc
jmp
adcb
nop
js
repnz
test
sub
sub
enter
push
stc
sub
lea
js
lock
cmp
xor
shr
lea
jge
sbb
push
mov
and
lea
loope
dec
xchg
cmc
notb
mov
das
sbb
fstpl
mov
add
into
cmp
cwtl
rcll
test
push
push
mov
dec
dec
mov
lds
push
jg
dec
inc
jp
inc
dec
inc
popl
add
idivl
sub
insb
arpl
popl
add
xchg
sbb
add
bnd
mov
add
pop
add
sbb
inc
inc
aaa
xchg
add
sbb
inc
in
ret
in
lret
dec
dec
add
sarb
pop
ficoms
xchg
add
xor
orb
sub
or
jge
mov
pop
loop
add
scas
mov
push
cmpsb
test
test
stos
mov
add
lahf
idiv
sbb
pop
insl
sahf
das
jp
add
add
add
sbb
add
sbb
or
mov
mov
jg
pop
inc
popa
mov
inc
or
push
mov
xor
sub
inc
xor
test
fstpl
cmp
push
jns
std
bound
out
bound
cld
jg
mov
push
push
loop
pop
in
mov
icebp
shll
testl
fisttps
add
insl
hlt
jecxz
push
or
add
inc
sub
sahf
ds
mov
mov
dec
xor
sbb
mov
dec
sub
mov
js
inc
inc
xor
mov
and
outsl
pop
sub
fs
sti
xor
pop
jae
lea
add
add
mov
lcall
stos
aaa
leave
sahf
ljmp
stos
mov
inc
or
cltd
jns
icebp
clc
ss
clc
xorl
test
cs
xchg
and
test
ljmp
or
ret
jge
add
mov
add
or
pop
add
mov
sbb
add
mov
movsl
shlb
mov
loopne
mov
add
cmp
aam
sbb
sar
icebp
daa
mov
add
push
aad
or
rcrb
out
mov
add
pushf
push
push
mov
jge
aas
ret
call
mov
mov
das
lods
stos
mov
insl
scas
add
inc
jne
mov
cmpsl
jo
adc
es
les
xor
add
mov
adc
jns
or
je
decl
daa
jg
jp
repz
es
and
xor
sub
ds
call
aaa
imulb
cli
and
and
or
jecxz
cmp
add
inc
xor
lock
adc
out
adc
mov
cwtl
jnp
mov
popf
pushw
mov
rol
and
rcrl
inc
mov
pop
mov
sbb
insb
pop
add
mov
push
adc
mov
ljmp
xor
inc
enter
xchg
ret
inc
xor
aad
ljmp
mov
xor
push
mov
stos
inc
inc
scas
test
mov
sbb
pop
and
xchg
inc
and
cltd
push
daa
loope
cmp
mov
and
loope
pushf
ret
mov
mov
push
add
in
outsl
push
or
popf
sbb
xchg
lea
xchg
ret
xchg
add
cltd
mov
pop
nop
push
icebp
sahf
je
add
rolb
mov
test
push
aad
imulb
lea
fisttps
out
add
xchg
std
push
cmpsb
cmpsl
jbe
mov
add
fwait
sbb
mov
push
fstp
cmp
lahf
insb
out
testl
pusha
out
cli
xchg
jae
incb
cmpsb
and
mov
inc
inc
rcl
decb
xchg
std
fiadds
add
rol
enter
add
fdivl
scas
call
popl
add
jnp
test
daa
popl
add
jmp
in
shll
mov
mov
popa
mulb
or
call
test
add
xor
fwait
and
jg
out
je
sbb
xchg
xchg
jno
jns
or
in
cmp
je
add
data16
dec
xchg
pusha
jb
mov
xor
mov
xor
gs
add
je
add
sub
scas
push
mov
ret
mov
or
ret
mov
popf
scas
cmp
in
add
mov
roll
mov
adc
jg
aaa
stos
cmp
lcall
add
ja
and
jo
push
jl
cmova
xchg
outsw
push
ja
xor
sbb
sub
inc
pop
add
push
arpl
mov
add
jno
insl
orl
insb
out
push
xor
mov
imul
pop
mov
push
adc
orl
pop
cltd
js
es
gs
pop
enter
add
xor
or
xlat
fnstcw
cwtl
jae
sub
lret
addr16
xchg
xchg
adc
adcb
mov
push
ret
jp
add
mov
add
mov
add
jno
jle
sub
xchg
push
sti
jmp
inc
dec
adc
push
pop
push
mov
push
mov
arpl
test
add
call
bound
sub
aad
push
and
pop
pop
and
mov
mov
inc
loop
sarb
mov
xchg
in
sbb
mov
mov
xlat
push
inc
inc
faddl
js
inc
cmp
fisttpll
sub
xor
pop
scas
aaa
sbb
add
jge
pop
add
pop
xchg
outsb
subb
jns
mov
or
sahf
jbe
add
je
add
test
pop
add
sbb
call
je
pop
cmp
dec
les
insl
mov
pop
inc
sbb
dec
dec
mov
sbb
lods
cmp
das
inc
adc
ss
movsb
xor
cmp
pop
jnp
push
mov
jae
sub
xchg
cli
jb
xor
sbb
mov
in
add
nop
jmp
xchg
fwait
lret
mov
call
testb
mov
jecxz
test
in
ret
add
mov
xor
sub
mov
or
das
xchg
add
cmc
mov
or
daa
mov
sbb
inc
mov
pop
sbb
mov
or
mov
add
xchg
add
cli
sti
inc
or
scas
xor
mov
es
mov
and
test
lods
mov
jge
jno
xor
and
or
je
push
jmp
push
mov
call
dec
cmpsb
loopne
aaa
mov
add
ds
push
test
push
pop
outsb
cmp
push
jbe
jl
pop
dec
inc
dec
jg
je
cltd
aaa
pop
dec
out
sub
jae
dec
push
jb
sbb
aad
and
and
add
and
es
dec
add
movsl
in
in
mov
add
iret
pop
xor
js
aaa
dec
sbb
bound
xlat
lds
xor
sti
arpl
in
sbb
jmp
cmp
inc
std
cmp
and
lods
and
sub
loopne
and
mov
or
mov
and
mov
push
cmpsb
mov
pop
jmp
fistpl
fsubrl
cmc
loope
cmp
movl
jbe
sub
jge
jg
ja
dec
lret
popa
sbb
xor
addr16
inc
lret
daa
mov
xor
mov
dec
sbb
inc
dec
dec
in
add
imul
sbb
xor
push
pop
stos
aaa
cmp
and
and
mov
xor
incl
or
insb
pop
adc
imul
mov
xchg
sub
mov
nop
fs
mov
push
in
mov
mov
roll
jne
jmp
xor
add
cli
arpl
in
add
aas
mov
in
es
lret
mov
fnsave
sbb
add
xchg
jae
xchg
xchg
jl
mov
push
mov
je
loopne
insb
outsb
jecxz
cmpsb
mov
mov
mov
and
mov
xchg
inc
cmp
xor
push
inc
mov
jmp
add
int
mov
out
int3
dec
add
dec
pop
inc
testb
sbb
inc
sbb
cmp
mov
daa
imul
bound
jl
xchg
sub
inc
jle
jno
int3
and
push
xchg
push
jp
sahf
push
dec
dec
aaa
mov
add
pop
fwait
xorl
add
mov
add
mov
add
ljmp
pusha
ljmp
mov
jo
dec
fdivrl
add
pop
sti
or
mov
jecxz
adcb
mov
test
add
jno
jmp
je
add
and
in
dec
sbb
push
dec
daa
repnz
add
adc
stc
sub
or
mov
xor
adc
add
pop
mov
or
mov
or
or
daa
in
in
and
and
repz
mov
mov
and
mov
mov
call
popa
cmp
mov
pop
cmp
mov
in
mov
mov
xchg
xlat
fcompl
fisubrs
fwait
shl
add
mov
or
test
add
push
mov
fdivl
push
push
dec
push
xchg
or
jns
addb
ljmp
idivl
add
arpl
add
aaa
in
add
cwtl
adc
sbb
fldcw
aam
mov
loopne
jmp
add
jge
jge
repz
lea
loopne
mov
add
inc
mov
xor
outsb
out
es
adc
mov
js
shll
push
int
pop
pop
shrl
mov
sub
add
cs
adc
pop
flds
cmpsl
imul
repz
or
outsb
add
or
push
push
pop
xor
dec
or
pop
repz
pop
icebp
aas
dec
inc
stos
inc
cmp
inc
inc
push
lock
xor
xorb
shlb
xlat
rorb
enter
iret
sub
dec
fdivrl
scas
in
mov
add
mov
shl
ret
loope
fstp
xlat
mov
xchg
fldt
leave
mov
ja
mov
mov
lret
test
mov
mov
dec
mov
test
push
pop
into
push
jmp
mov
or
jecxz
add
mov
setns
jbe
mov
addr16
inc
cmp
or
add
lods
push
mov
mov
jle
sbb
je
jae
outsl
call
decl
aaa
int
ret
dec
shrl
mov
loope
mov
loop
mov
enter
std
cmpb
lret
add
js
or
jo
negb
cwtl
jo
add
iret
loop
pushf
hlt
cmc
fwait
test
lret
fildl
fwait
mov
js
cmp
jo
xor
in
add
repnz
xchg
mov
or
mov
daa
lods
mov
and
int
xor
mov
or
jo
das
lahf
sbb
push
in
fucomi
hlt
push
mov
pop
call
add
dec
mov
les
push
mov
mov
sbb
test
lahf
or
jmp
lea
xchg
movl
adc
mov
jecxz
std
jae
xor
call
cmpsw
pop
rolb
xchg
imul
stc
mov
call
nop
xchg
inc
les
mov
dec
cwtl
imul
inc
andb
loopne
mov
jmp
push
aad
add
lods
mov
popl
add
inc
push
jae
dec
dec
sbb
sti
pushl
addl
xor
xchg
jecxz
in
mov
mov
stos
out
ljmp
mov
flds
mov
test
sub
inc
aam
mov
add
insb
loop
test
in
add
jecxz
xchg
outsb
add
outsl
push
jmp
sub
jns
xor
imul
sub
inc
shlb
cwtl
inc
rcll
cmp
pop
out
rolb
pop
add
push
mul
sub
jmp
lods
in
or
lahf
mov
in
dec
and
jg
mov
enter
sub
xor
mov
push
dec
rcrl
inc
leave
fistpl
aam
add
test
inc
test
add
cltd
loopne
xchg
xchg
lock
loope
xchg
jno,pt
aam
arpl
lret
cmp
add
in
jge
cli
loopne
outsb
testl
mov
cmp
int3
pop
push
in
add
fsubrl
les
fdivrl
cmp
and
jl
push
cmpsl
inc
cmp
cmp
mov
sbb
adc
or
scas
mov
cld
orb
adc
test
loopne
test
rclb
shlb
add
pop
sbb
pop
dec
ret
jmp
mov
xor
lea
sbb
jne
or
sahf
xchg
inc
mov
add
dec
pop
enter
arpl
ja
jnp
add
sbb
cmp
add
and
out
daa
and
inc
mov
add
cld
out
js
jmp
add
stos
sahf
pushl
andl
invd
mov
lods
inc
xor
add
rcr
pop
adc
add
pop
fbld
xor
dec
inc
cld
aam
pop
fst
inc
dec
movsb
ret
inc
add
insl
or
nop
adc
mov
add
xchg
jg
xchg
adc
jb
xor
mov
test
mov
bound
add
xchg
dec
inc
dec
bound
add
lods
rcr
mov
add
imul
insb
push
sbb
mov
mov
mov
jle
xor
sbb
ja
stc
pop
jno
mov
ret
inc
mov
mov
das
inc
add
mov
leave
into
mov
push
enter
enter
xor
mov
add
mov
add
mov
into
into
mov
dec
mov
ret
in
dec
mov
mov
ds
dec
mov
dec
mov
into
dec
mov
xchg
mov
mov
jns
push
mov
dec
mov
iret
add
mov
inc
loop
xor
in
call
into
add
mov
jmp
lea
add
mov
add
jne
test
sub
filds
sub
imul
lahf
call
push
jne
add
pusha
hlt
inc
pop
pusha
in
jae
pusha
xlat
add
addr16
insb
out
fimull
filds
aad
mov
add
filds
mov
xor
and
mov
and
add
jnp
hlt
clc
and
pop
and
outsl
xchg
add
lds
add
ja
pushw
push
leave
orb
lret
das
imul
mov
add
data16
mov
add
mov
add
push
add
mov
add
mov
add
inc
add
inc
add
add
inc
add
jo
inc
mov
inc
mov
inc
mov
fiadds
leave
rolb
dec
rolb
cmp
inc
add
push
sub
scas
jne
mov
mov
and
inc
and
leave
mov
inc
inc
push
mov
dec
dec
pop
xchg
push
push
cmp
jle
and
xchg
pop
addr16
pop
arpl
pop
pusha
das
inc
fs
push
xor
push
add
mov
lahf
inc
rol
mov
lds
fwait
push
mov
roll
out
jmp
dec
insb
mov
inc
push
mov
cmc
cmp
cld
xor
mov
in
mov
in
add
stos
in
add
xlat
int3
add
fcmovnu
push
int3
rcrb
fnsave
mov
mov
sub
lret
jne
int3
add
lea
add
xlat
add
enter
rolb
ljmp
fiadds
dec
mov
add
mov
add
fiadds
ds
add
xchg
mov
add
xchg
clc
add
mov
add
fldl
sbb
xchg
stc
add
add
fldl
adc
fiadds
iret
in
int
call
add
testl
add
mov
add
mov
fmuls
add
mov
mov
mov
pop
mov
mov
ja
add
fnsave
sbb
xor
inc
inc
lret
js
inc
lret
js
test
mov
add
jle
add
xchg
inc
add
mov
inc
add
xor
add
mov
add
lds
add
mov
imul
das
and
insb
sub
arpl
pop
sub
mov
imul
das
add
je
in
sbb
mov
mov
pop
add
out
aas
mov
add
in
rcrb
popf
xlat
pop
fiaddl
xchg
or
pop
dec
sarl
mov
dec
popf
mov
test
jecxz
rcrb
pushf
xlat
pop
sbb
inc
inc
mov
xlat
inc
dec
mov
push
outsb
popa
adc
cltd
xchg
mov
mov
incl
inc
sti
adc
cltd
imul
pop
inc
xchg
test
dec
pop
jge
mov
stos
mov
rcll
jge,pt
push
mov
fsub
pop
repnz
int3
mov
int3
mov
int3
mov
mov
xor
mov
pusha
mov
add
mov
adc
mov
add
lahf
mov
add
mov
mov
fisubrl
add
xchg
mov
repz
xchg
and
xchg
or
ljmp
add
xchg
repz
filds
movsl
lea
add
xchg
hlt
add
fildl
push
xchg
in
add
flds
dec
xchg
clc
add
add
lea
add
lea
add
mov
rclb
out
add
test
dec
add
nop
mov
add
out
gs
sub
bound
enter
popl
add
imul
out
cmp
jae
xchg
or
insl
adc
sub
add
sub
popa
add
icebp
push
jae
fldl
icebp
outsl
push
imul
outsb
enter
je
cmp
add
ds
mov
mov
dec
mov
pop
cmp
dec
pop
add
fsubs
mov
movsb
inc
mov
movsb
inc
mov
movsl
inc
mov
mov
add
mov
aas
mov
mov
mov
mov
mov
dec
outsb
test
cmpsb
arpl
andb
jb
add
test
or
mov
add
mov
add
mov
add
mov
add
mov
dec
mov
dec
mov
dec
mov
add
dec
mov
dec
mov
mov
dec
mov
leave
mov
mov
mov
mov
mov
mov
mov
leave
iret
mov
leave
iret
mov
iret
mov
mov
iret
mov
iret
mov
add
mov
add
mov
adc
int
xchg
sub
add
fcmovne
add
xlat
mov
int3
add
int
out
int3
add
fxch
add
loope
add
mov
int3
add
add
mov
int3
add
pop
int3
add
add
cmpsb
add
int3
add
push
leave
add
movsl
add
int3
add
int3
add
xor
add
add
decl
mov
fs
add
ja
add
ja
add
add
xlat
mov
add
mov
add
mov
add
gs
add
mov
add
mov
add
add
mov
push
sbb
add
aam
inc
inc
aam
add
aam
inc
ja
add
pop
les
add
dec
dec
and
dec
add
mov
push
add
mov
decl
jb
add
jb
add
sahf
decl
jb
add
mov
dec
push
jb
add
addb
sbb
add
xor
add
xor
add
inc
add
mov
cmp
es
push
dec
add
sub
jb
add
aaa
pop
add
mov
push
int
in
add
shlb
dec
mov
sub
add
mov
inc
pop
mov
xor
mov
inc
enter
mov
cmp
pop
add
mov
jmp
shll
mov
jne
jecxz
push
sub
call
in
add
xlat
mov
callw
pop
mov
popf
imul
out
mov
icebp
add
mov
call
imul
call
insb
aaa
cmpsl
mov
dec
outsb
bnd
add
movsl
add
lea
add
lea
add
lea
add
mov
into
add
into
add
into
add
pop
into
add
pop
into
add
add
mov
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
daa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
int
call
pop
je
sbb
rol
push
cmpsb
jb
and
jno
mov
roll
add
shll
mov
sbb
aaa
addl
sbb
add
add
adc
call
push
lea
xchg
mov
and
xor
cmp
sbb
out
push
add
int
push
cmp
xchg
inc
cmp
jle
cmp
jbe
cmp
jle
cmp
jbe
cmp
pop
ss
push
add
imul
sbb
xor
jbe
jae
mov
xchg
xchg
xor
add
jne
je
mov
ret
dec
pushf
sub
dec
mov
rclb
mov
sahf
pop
scas
add
cmpsb
popf
test
pusha
in
add
movl
push
mov
lret
in
push
mov
jge
add
cltd
pop
cmc
subb
push
ret
xorb
jns
cmp
or
mov
jle
mov
sti
cmp
inc
mov
test
popa
in
add
arpl
or
mov
cmp
jo
out
hlt
jne
inc
jmp
add
pop
mov
fisttpll
mov
lea
jb
or
ret
push
add
pop
jo
mov
inc
or
mov
jmp
imul
dec
mov
aad
ret
cltd
int3
jb
mov
sub
mov
push
fs
cmpsl
das
xchg
xchg
mov
add
jb
clc
arpl
add
inc
jbe
sbb
mov
inc
add
inc
ja
add
xchg
add
scas
aas
and
fiaddl
cmp
jge
jae
xchg
rolb
jno
xor
lods
out
jmp
rolb
cltd
add
cmpsl
mov
inc
add
adc
jb
or
adc
idivl
mov
lea
mov
add
mov
add
and
insb
test
xchg
sub
mov
icebp
mov
adc
push
push
push
pop
pop
daa
adc
jb
mov
inc
jae
insb
jb
je
add
das
jb
xchg
std
aad
cmp
adc
sarl
sub
jno
mov
or
dec
jp
das
mov
push
fsts
adc
js
pop
cmp
testl
inc
aaa
js
push
add
cmpsl
cld
add
mov
and
and
cs
xor
cwtl
and
adc
lock
mov
and
sbb
add
push
outsb
faddl
shl
jl
xchg
icebp
cwtl
andb
icebp
sub
inc
mov
add
aaa
add
jbe
lar
insl
mov
cwtl
lods
dec
inc
mov
lods
push
cmp
test
icebp
in
jl
mov
push
cmpsb
pop
adc
lret
add
xchg
adc
dec
push
jb
adc
mov
fiaddl
sbb
pushf
mov
pop
jmp
cmp
clc
sub
les
push
aaa
add
test
inc
call
adc
mov
jmp
pop
inc
push
mov
inc
mov
push
push
lahf
repnz
cmp
mov
pop
ret
cltd
sahf
icebp
push
inc
jl
adc
push
push
inc
jl
adc
mov
frstor
add
xlat
das
cmp
into
add
add
das
and
into
add
xlat
das
and
add
daa
xor
decl
iret
imul
popl
push
inc
jnp
adc
mov
jp
jo
add
pop
pop
and
cli
adc
out
mov
divl
lret
jle
jp
mov
adc
and
add
pop
repnz
orb
pop
loop
ljmp
je
in
xor
adc
pop
in
inc
adc
mov
loopne
inc
fdivrs
inc
mov
data16
and
jge
jb
inc
add
dec
je
or
adc
mov
sub
mov
xchg
outsl
add
mov
xchg
inc
mov
loopne
mov
mov
rorl
popf
add
jl
add
sbb
dec
mov
stc
inc
fldl
mov
add
pusha
scas
add
pop
sbb
pushw
in
add
cmpsl
stc
inc
mov
mov
push
mov
js
jnp
lods
into
mov
cmp
add
jg
add
shr
or
add
mov
mov
mov
fldenv
and
dec
add
xchg
ds
jp,pt
stos
cmp
mov
pop
movsb
push
jmp
lret
jnp
mov
add
jb
adc
mov
jnp
add
pop
push
sti
jmp
add
mov
movsl
pop
lods
xchg
ja
jmp
and
pop
jo
add
addb
mov
mov
movl
repz
ds
mov
jne
jae
cmpsb
int
cmp
push
dec
stos
sbb
mov
xor
adc
add
xor
loope
ds
dec
add
and
popl
add
lea
scas
test
decl
addr16
shrl
add
movb
test
jns
insb
sub
jmp
scas
adc
cmp
cmp
mov
andb
mov
out
jp
popf
aas
mov
std
sti
arpl
push
mov
dec
push
aaa
cmp
incl
stos
jbe
and
dec
jle
jae
lret
or
sbb
sbb
pop
mov
dec
sub
int
out
js
xchg
mov
sub
xchg
repz
sub
add
or
add
sti
inc
pop
add
sub
stc
enter
lahf
mov
mov
in
or
out
add
mov
adc
outsb
add
sub
imul
mov
in
push
xchg
adc
hlt
adcl
mov
dec
fiaddl
adc
nop
or
lea
adc
inc
jo
movsb
lea
xchg
add
cmp
lret
leave
mov
fcmovnb
push
push
sti
into
adc
pop
adc
insb
lea
ja
dec
push
sti
pusha
dec
scas
cmp
rcr
adc
rorb
sbbb
add
and
jbe
xchg
and
mov
add
cmpsb
or
aam
in
cmpsb
fs
jmp
push
push
sti
add
pop
std
adc
jno
jecxz
pop
add
inc
xchg
mov
pop
mov
mov
mov
mov
push
push
lret
mov
add
mov
mov
and
pop
adc
pop
and
inc
mov
mov
pop
outsl
repz
push
dec
and
add
and
mov
cld
add
fwait
jae
stc
push
aaa
mov
stos
pop
orb
pop
and
xchg
mov
push
mov
jg
mov
jae
arpl
mov
dec
and
cmp
dec
and
lds
rolb
testl
mov
sub
js
lret
mov
sti
mov
out
mov
sti
sub
fisttpl
pop
inc
call
lods
adc
mov
rcll
dec
mov
dec
xchg
mov
jecxz
sbb
push
ja
and
xchg
cltd
inc
add
dec
or
mov
daa
mov
add
std
mov
idivl
popf
sbb
lret
fildll
ds
in
ljmp
xchg
ret
inc
jecxz
add
mov
in
lds
icebp
mov
fdivl
xor
aaa
ss
rol
inc
mov
mov
and
sub
add
ja
pop
pop
scas
add
pop
roll
push
cmp
push
inc
in
add
add
cmpsl
daa
jo
jo
stos
add
add
int
add
lds
add
push
int3
pop
int
int
jo
xchg
lcall
sub
mov
ret
setns
or
leave
jle
push
bound
xor
pop
xor
mov
incb
jg
bound
dec
dec
outsb
test
add
pusha
add
cmpsl
sbb
fbld
call
push
or
or
orb
xor
jmp
or
sub
mov
add
pop
ret
adc
mov
incl
sti
std
inc
sbb
add
jmp
adc
mov
mov
jae
xchg
ret
xor
pop
pop
mov
xchg
add
orb
cmpsb
mov
mov
jo
adc
test
stc
cs
cltd
sub
imul
das
orl
mov
jl
popf
mov
jb
test
xor
mov
mov
push
popl
js
sbb
jmp
and
dec
add
xor
pop
inc
adc
fs
inc
mov
cmc
dec
and
or
push
mov
jb
ds
inc
jns
ret
outsb
and
decl
mov
mov
sbbl
fadds
mov
xchg
add
fsubr
adc
mov
in
mov
cltd
and
push
add
repz
rorb
lret
inc
push
cwtl
mov
aas
les
lods
add
sbb
jmp
out
out
add
dec
jbe
jb
xor
mov
xchg
push
std
mov
ljmp
inc
fsts
or
out
adc
pop
or
xchg
cmpsb
add
stos
add
rcll
add
adc
pop
fldl
add
pop
int
enter
mov
cli
cld
push
js
jmp
dec
orb
add
xorb
mov
popf
push
rorb
lds
les
xchg
push
cmpsl
loope
cmp
call
mov
inc
lds
mov
or
and
add
cmpsl
int3
mov
push
repnz
and
int3
in
addr16
cmp
out
mov
stos
out
add
ss
xchg
jmp
dec
xchg
add
and
aas
adc
adc
mov
mov
xchg
test
in
push
adc
out
jg
adc
je
jge
ja
inc
call
add
into
add
mov
add
stos
fiaddl
xor
jmp
or
dec
add
dec
mov
adc
xor
mov
lret
xchg
adcb
lock
std
fisubrl
adc
stc
jmp
add
add
dec
inc
lret
adc
xor
mov
lahf
xchg
xorb
jl
sbb
mov
push
sti
mov
cmp
push
add
jp
add
xor
fsubrp
mov
cmp
add
sbb
dec
mov
lea
insl
mov
inc
lcall
cmc
outsb
jo
mov
mov
mov
mov
mov
sbb
cwtl
test
hlt
pop
or
sahf
fstpl
xchg
mov
jmp
add
inc
xchg
lock
enter
hlt
jmp
dec
in
add
out
jnp
mov
and
mov
dec
jmp
int
mov
push
bound
or
lahf
inc
cmp
decl
mov
shl
mov
and
inc
mov
add
je
stc
push
mov
add
adc
hlt
lea
out
out
xor
dec
out
out
jg
cmp
dec
mov
mov
xor
adc
imul
bound
test
push
inc
icebp
xlat
mov
cmc
mov
call
mov
push
out
push
ja
adc
mov
add
rcrb
insl
add
stos
adc
add
adc
or
andl
add
mov
cwtl
sbb
inc
jbe
insl
daa
pop
adc
call
mov
mov
add
inc
mov
jp
inc
pop
jp
adc
jl
xchg
mov
ret
lcall
test
fadds
add
xor
test
test
adc
push
mov
xor
adcb
decl
adc
add
mov
aam
test
add
adc
das
shrb
shll
pop
psubb
xchg
imul
and
enter
dec
shlb
enter
mov
inc
pop
mov
scas
add
dec
in
add
add
add
adc
mov
fisttpl
out
in
add
xchg
pop
outsb
mov
adc
jle
paddsb
mov
inc
inc
mov
jns
in
jle
frstor
sbb
xorb
aas
cltd
add
jle
or
xchg
aad
ret
cmp
xchg
jmp
lcall
add
mov
add
andl
imul
cli
mov
nop
mov
data16
out
iret
jmp
push
lret
add
or
jmp
adc
adc
add
add
ficomps
xchg
call
push
aam
mov
inc
sti
scas
lahf
push
in
fimuls
push
fucomp
imul
add
adc
jle
add
daa
outsl
or
mov
add
jmp
pop
or
mov
call
sub
jecxz
add
lea
lea
mov
pop
mov
jne
add
jle
fnstcw
or
add
push
call
cld
xchg
imul
push
xchg
add
mov
jp
adc
lods
mov
inc
sub
xor
sbb
add
cwtl
xor
cmpl
mov
pop
jbe
lods
cmp
mov
mov
imull
push
sbb
jnp
cmc
aas
mov
movl
xor
aas
lods
js
xor
push
es
mov
call
xor
test
testb
xor
cmc
loop
jle
add
sub
sbb
jne
add
insl
loopne
fidivs
jp
push
push
mov
mov
jl
addr16
add
add
inc
stos
mov
or
push
ss
ficomps
sub
xor
mov
or
adc
test
shr
xor
mov
test
add
xorb
adc
fildl
dec
xchg
in
add
or
cmc
fildll
inc
jle
sub
and
mov
jne
int3
fcmovu
cmpsb
cmp
and
les
mov
xchg
adc
push
mov
add
sub
cmpsb
mov
dec
or
push
pop
inc
mov
subps
push
je
sbb
daa
xor
cld
add
loop
call
into
addr16
orl
add
mov
std
add
add
or
je
dec
ja
sub
inc
add
arpl
lock
add
in
ret
pushf
fcoml
test
fcos
mov
arpl
xorl
add
add
inc
mov
std
pop
notl
or
jne
ds
xor
sbb
mov
outsb
rcr
rcll
fldl
cmpsl
or
push
pushf
icebp
inc
in
add
jmp
mov
or
sbb
jb
inc
cmc
jnp
stos
fs
cltd
mov
out
stos
add
push
jmp
push
pop
pop
je
xchg
fs
add
clc
cli
push
dec
xor
adc
bound
or
push
pcmpeqb
into
jae
cmp
out
imul
mov
add
into
dec
mov
xor
mov
pop
push
add
xor
mov
mov
and
mov
sti
mov
xchg
xchg
mov
add
mov
pop
add
add
mov
jg
mov
jle
adc
pop
ds
push
dec
xor
jle
loop
sub
jmp
xor
add
mov
xor
xchg
adc
enter
jns
mov
cmp
pop
movsb
dec
bound
add
xor
rorl
xor
jns
add
xlat
jmp
testb
jb
and
xor
sub
mov
lret
lcall
sti
add
dec
adc
adc
lea
inc
int
movsl
xor
insl
in
mov
mov
out
les
mov
push
jo
dec
mov
mov
mov
mov
int
test
add
push
xchg
add
lret
or
add
inc
and
rorl
mov
add
and
sarl
mov
pushl
mov
addb
jns
repz
sbb
sbbl
pushf
mul
loopne
xchg
mov
cli
cmp
add
fmull
icebp
test
pushf
inc
xchg
testb
xor
rorl
insb
popa
test
inc
xor
xchg
mov
pop
mov
fidivrl
mov
mov
call
dec
jmp
adc
mov
add
movsl
into
xchg
mov
lcall
jp
fimull
imul
dec
mov
aas
jle
and
inc
push
jp
add
movsl
pop
and
and
adc
inc
inc
add
and
adc
sub
dec
icebp
mov
xlat
jno
and
repz
pop
mov
xchg
negl
pushl
into
jmp
push
rorb
call
dec
outsl
fcompl
aam
or
mov
add
jae
inc
mov
cmp
xlat
out
add
mov
test
add
add
pop
cmpsb
or
cmpl
add
mov
push
aam
cltd
pop
bound
mov
mov
cmp
pop
mov
mov
add
jae
sbb
in
add
outsl
fdivrs
and
clc
mov
dec
xor
repz
jmp
add
mov
mov
and
ret
mov
divb
scas
iret
add
adc
popf
cmp
push
cmp
push
test
xor
lea
les
mov
clc
xchg
jmp
ss
add
repz
mov
xor
xor
and
mov
add
mov
add
inc
jecxz
mov
dec
pop
pop
fimuls
rcrl
ljmp
push
ret
and
dec
sti
jmp
sub
or
dec
jecxz
mov
add
movsl
dec
push
push
adc
inc
add
hlt
stc
js
inc
push
hlt
jnp
pop
inc
dec
in
add
mov
push
rcl
or
mov
add
mov
push
mov
inc
repz
or
mov
or
lods
cmp
loopne
or
pushl
jecxz
mov
lock
xor
or
and
pop
xchg
jecxz
mov
push
lock
push
jl
dec
or
in
test
mov
xor
mov
inc
jl
add
and
pop
test
mov
pusha
lock
ss
dec
popf
and
pop
xchg
arpl
dec
push
lock
sub
ror
and
arpl
pop
xchg
mov
adc
leave
testb
dec
lods
movsl
xchg
subb
loope
enter
add
into
dec
xchg
or
dec
lods
movsl
xchg
subb
add
mov
sub
adc
pop
imul
push
ret
push
mov
mov
xor
cmp
je
mov
mov
ret
and
jmp
xlat
rclb
add
bound
mov
mov
in
mov
xchg
fisttpll
xor
mov
and
add
das
enter
popa
outsl
pop
jb
inc
outsl
or
sbb
or
in
fsubr
lea
jp
aad
jmp
pop
adc
and
sbb
or
xor
xchg
in
add
push
fcmovb
lods
stc
mov
mov
cltd
int3
sub
fimull
int
or
cmp
mov
inc
sub
add
add
add
inc
jmp
mov
fdivr
adc
and
jne
mov
add
or
add
sbb
dec
mov
mov
mov
jecxz
stos
lea
mov
mulps
les
sbb
decb
inc
and
testl
sub
test
mov
icebp
je
xor
pop
sbb
adc
stc
push
mov
ret
lcall
and
gs
and
mov
pop
cmp
iret
fucomp
test
fimull
jbe
mov
mov
or
sbb
jae
mov
push
jbe
dec
push
cmp
add
insl
inc
orl
fnsave
scas
les
outsb
add
and
cmpsl
fimull
mov
add
cwtl
push
mov
or
in
mov
fadds
mov
pop
cmp
lock
xor
push
test
clc
ror
in
xchg
enter
add
or
add
test
and
jecxz
sbbl
or
mov
inc
mov
mov
flds
lods
stos
xor
or
fnstenv
mov
mov
xor
push
lea
push
cmpsl
das
adc
push
repnz
punpcklwd
cmp
add
mov
cmc
ds
jmp
add
mov
iret
sar
mov
std
adc
pop
add
in
cmp
lea
push
fisttpl
pop
and
or
leave
dec
lea
push
test
rolb
or
push
lds
stc
adc
pop
icebp
in
aas
add
icebp
outsl
add
xchg
js
pusha
pop
adc
mov
call
bound
pushl
adc
cwtl
notl
lea
je
add
mov
add
bnd
jmp
fs
xor
jb
add
imul
mov
push
ficompl
fiadds
mov
and
add
and
mov
mov
fiadds
add
mov
xor
add
lret
mov
ret
pop
pop
or
xchg
push
arpl
lea
sub
fiaddl
push
and
stos
pop
and
stos
arpl
pop
mov
and
adc
pop
jmp
adc
pop
cmpb
and
stos
inc
mov
je
adc
jb
inc
add
xor
inc
fildl
mov
lock
mov
mov
std
add
or
mov
push
in
add
mov
sub
mov
addr16
les
pop
xchg
xor
xchg
lds
into
hlt
das
add
sbb
inc
mov
lea
test
out
xchg
add
mov
les
rcl
adc
dec
adc
loop
dec
pop
repnz
inc
jmp
or
aam
fiadds
push
add
push
sbb
mul
jo
repz
fisttpl
mov
adc
mov
add
adc
cld
lret
add
fistpll
xor
imul
outsb
in
je
or
scas
jge
ret
jo
pop
mov
or
fcmovu
push
add
les
sub
mov
wrmsr
mov
add
xchg
or
add
loopne
mov
mov
leave
testb
inc
add
dec
and
loope
xor
mov
shll
inc
jecxz
jmp
rcrl
sub
lds
out
push
push
insb
dec
testb
mov
add
pop
adc
inc
mov
cld
testl
cltd
es
divl
xor
inc
and
cs
jp
and
or
jno
cmpsl
shll
cmpsl
xor
add
and
psubw
mov
add
and
test
jo
mov
dec
mov
mov
and
push
pop
lcall
jp
mov
aam
pop
cmpsl
fs
mov
add
mov
cmpsb
jae
test
or
into
mov
dec
es
pavgb
cmpsb
fisubrl
add
leave
aaa
pop
dec
nop
in
andb
add
fadd
ffreep
sbb
loopne
xor
inc
mov
add
sub
jg
mov
add
cmp
jg
mov
add
in
mov
add
cmp
in
hlt
les
decb
fimull
dec
mov
and
lods
xor
shlb
push
mov
inc
push
adc
add
dec
xchg
subb
inc
add
sbb
adc
jo
mov
js
jge
imul
pop
dec
add
lea
add
lea
add
lea
pusha
dec
outsl
pop
insb
rcrl
mov
ljmp
ret
xchg
jecxz
mov
sbb
icebp
adc
push
js
mov
scas
dec
and
adc
xchg
sub
ficomps
data16
mov
jg
daa
pop
cmp
xchg
add
mov
out
cmp
add
fsub
jmp
lea
mov
pop
xor
lea
add
sar
cmp
test
jg
lea
push
lds
xor
data16
and
popa
into
sub
in
add
push
mov
jb
dec
push
pop
cmp
or
xchg
pop
data16
mov
and
push
rol
filds
jo
imul
outsb
jecxz
add
stos
adc
xor
mov
dec
incl
ss
imul
notl
and
cmp
lcall
cmp
pop
mov
sub
pop
add
out
fisubrl
out
xchg
jmp
xchg
jae
ret
add
scas
jecxz
mov
pop
push
mov
in
jg
sahf
and
add
outsb
cwtl
add
mov
dec
hlt
ja
aas
stos
mov
push
add
mov
jg
mov
nop
add
aas
out
add
add
xor
in
push
sub
xchg
sbb
in
mov
outsl
add
movsl
gs
dec
out
add
das
push
dec
loope
mov
jns
add
jmp
ret
xor
push
es
pop
dec
outsl
dec
jo
outsl
and
movsl
arpl
or
ret
fnstsw
mov
sbb
mov
pop
sbb
rcrb
leave
cmc
jno
jmp
sbb
jmp
lea
inc
add
lea
or
lcall
ja
mov
pop
std
sbb
out
cmp
add
rcrl
dec
and
cli
adc
and
jge
stos
ret
push
lcall
or
or
popw
dec
dec
out
xor
ja
and
mov
add
jmp
out
add
clc
mov
sbb
cmovnp
jmp
cmpsb
leave
call
test
pop
repnz
les
mov
add
sti
push
insb
fbstp
sub
test
adc
or
push
mov
int
mov
pop
add
repnz
mov
js
xchg
stos
inc
adc
xor
pop
int
js
cmpsb
inc
pop
add
xor
pop
add
xor
mov
roll
fs
or
xor
dec
into
xor
or
fwait
mov
inc
adc
icebp
add
mov
pop
cltd
repnz
pop
dec
add
pop
and
cmp
xor
pop
add
add
and
idivb
add
int
xchg
lahf
in
hlt
mov
mov
test
in
aaa
sahf
adc
pop
cld
push
lret
orb
add
xchg
xor
frstor
cmp
cmpb
into
mov
cli
mov
add
int
test
stc
add
dec
scas
add
aad
test
cmp
ret
jne
or
stc
pop
adc
roll
sub
add
call
add
xor
inc
cmp
adc
add
xchg
pop
enter
hlt
sub
jmp
mov
mov
pop
cs
rcrb
inc
flds
dec
int
ret
lea
les
pop
push
je
daa
in
das
out
and
insl
dec
sahf
or
rclb
repnz
lea
cld
xchg
mov
add
jge
jmp
lods
fst
mov
xor
push
inc
testl
call
leave
faddp
push
and
loop
xor
add
xchg
inc
pushf
mov
shl
ret
jmp
adc
dec
pushf
idivl
movsb
aaa
hlt
mov
add
je
les
pushl
ud0
xorl
lea
or
mov
add
insb
adc
mov
add
mov
push
incl
ret
call
pop
mov
sub
popa
lods
lods
imul
xor
push
popf
dec
or
mov
add
jl
lcall
or
shll
push
add
cmp
sub
fiaddl
jle
mov
or
dec
ljmp
daa
iret
ficoms
test
sbb
mov
es
xor
add
sbb
cld
add
jp
xor
jns
xchg
mov
leave
fwait
ljmp
pop
ds
adc
xor
icebp
sbb
mov
mov
pusha
nop
cmp
jne
jo
or
or
sbb
cmpsb
gs
mov
mov
std
pop
sub
mov
mov
pop
xchg
inc
stos
lods
push
or
inc
xchg
inc
add
mov
mov
jnp
jl
int3
mov
testb
add
lea
dec
loope
test
ljmp
mov
inc
cmpsl
pop
dec
or
pop
adc
push
xchg
jne
sbb
dec
mov
jp
sbb
add
push
pop
stos
xchg
popl
jmp
leave
mov
addl
aam
mov
mov
mov
inc
add
das
mov
movb
rcrb
ljmp
pop
mov
add
xchg
int3
jecxz
sbbb
xchg
clc
inc
out
cli
ljmp
jg
or
sbb
xchg
adc
sub
mov
or
je
scas
stc
add
fildl
movsb
pushf
int
jle
cli
fisttps
add
mov
movb
pop
add
scas
icebp
add
gs
rcl
ja
into
aam
lea
int
adc
call
mov
dec
mov
mov
push
lea
lea
add
xor
leave
cmpsl
lret
test
inc
xor
xor
add
lret
and
pop
xorl
add
sbb
sbb
mov
lcall
mov
or
and
ljmp
cmp
bound
add
inc
flds
pop
lods
inc
dec
adc
pushf
jg
outsb
aaa
sub
das
xchg
adc
pushf
into
sbb
inc
stos
sahf
mov
lds
or
mov
adc
adc
test
mov
fidivs
push
test
mov
mov
mov
push
pop
push
sbb
stc
sbb
movsb
add
lea
inc
jmp
lea
mov
mov
jmp
idivl
fcmovne
mov
or
sub
push
mov
mov
jo
mov
mov
aad
add
jmp
jp
add
adc
mov
mov
lods
leave
pinsrw
pop
mov
add
leave
cmp
lret
add
hlt
fs
push
mov
test
popl
add
mov
leave
insl
add
sbb
cli
adc
lods
fisttps
btr
sti
jmp
leave
insl
add
insl
add
mov
psubsb
int
mov
ds
into
xchg
push
push
and
pmuludq
int
xorl
popf
jg
stc
jmp
enter
icebp
stc
decl
or
cld
mov
mov
inc
ret
adc
dec
mov
je
loop
in
pushl
xchg
jo
je
lods
push
fcoms
and
mov
push
push
fsubs
stos
adc
and
mov
pusha
sti
and
jp
mov
lock
loop
mov
int
xor
jp
adc
add
jne
mov
inc
add
testb
sbbl
leave
add
lock
clc
xchg
cld
inc
loopne
jge
out
dec
pop
cli
or
xor
fcomi
jnp
inc
lret
call
jb
scas
sub
div
imul
not
nop
cmp
pop
push
inc
mov
out
cmp
push
incb
dec
icebp
arpl
or
push
or
sbb
roll
lods
jns
push
sub
inc
mov
lods
arpl
add
movsl
sbb
add
adc
scas
iret
xlat
ret
movsb
cmp
push
lret
lea
push
hlt
add
in
mov
jge
push
add
add
cmpsl
mov
jo
sarb
pop
lods
add
into
push
mov
and
fcmovne
mov
fdivs
mov
xor
inc
gs
jmp
movb
out
rcl
out
xchg
cltd
imulb
dec
mov
cwtl
clc
dec
mov
sbb
or
lods
lods
les
push
insb
fcomps
mov
test
pop
mov
pop
mov
dec
int3
movb
or
push
push
cltd
push
insl
or
ret
pop
xor
test
push
mov
or
dec
jmp
add
fwait
sbb
cmp
push
hlt
aam
inc
int
mov
cli
adc
pop
decl
test
and
add
cmp
icebp
aas
mov
je
cmpsl
dec
and
dec
das
sti
addl
pcmpgtd
imul
push
add
jo
add
push
add
outsl
xor
mov
sbb
movsb
loop
lea
dec
push
testb
xor
fwait
dec
and
mov
out
pop
and
rol
lcall
test
xor
popf
xor
push
popa
out
mov
add
mov
sub
mov
imull
sub
or
xchg
adc
mov
sbb
or
imul
adc
test
lret
in
test
clc
add
jb
xlat
xor
add
sbb
pop
mov
add
cmp
mov
xor
mov
add
outsl
push
bound
jbe
jmp
adc
jmp
lea
or
add
push
jo
mov
jno
sbb
push
bound
insb
out
xchg
mov
mov
mov
adc
adc
sbb
in
xchg
leave
adcl
cmpl
jnp
xor
imul
icebp
mov
pop
in
and
mov
and
mov
jecxz
test
sub
mov
loopne
mov
mov
nop
sti
add
cmp
xorl
test
add
add
les
in
lock
repnz
add
pop
mov
pslld
add
addr16
or
push
xor
push
push
incl
push
inc
daa
adc
push
push
mov
pop
mov
pop
mov
out
testw
mov
out
xchg
notb
dec
inc
jl
data16
xchg
add
add
and
test
and
add
xchg
xchg
and
add
xchg
add
and
push
adc
adc
mov
pop
add
and
push
push
rcrb
and
push
adc
aaa
lea
out
decl
and
adc
out
and
pop
dec
stos
ja
gs
mov
xchg
subl
add
mov
mov
mov
sub
add
mov
mov
mov
xor
jbe
repz
std
mov
dec
cmp
push
sbb
xchg
xlat
fimuls
movsl
stos
add
inc
add
mov
loop
mov
and
sbb
add
lea
rcr
push
add
add
dec
ret
or
mov
jmp
xchg
mov
mov
lea
add
and
add
add
lea
std
xchg
mov
cltd
mov
pop
sbb
jmp
mov
int
jo
aas
iret
pop
inc
mov
add
dec
mov
jo
sub
mov
push
lods
hlt
test
cmpsl
jbe
lret
pop
jb
add
cli
lcall
aas
push
push
int
pop
addps
mov
push
or
test
sbb
add
or
test
or
sub
roll
ret
rolb
push
les
cmp
popa
test
push
pop
je
add
pop
mov
orl
cmp
rcrb
nop
mov
hlt
ret
pushf
in
mov
mov
mov
leave
and
scas
dec
and
mov
dec
and
add
push
and
dec
jb
test
cmp
scas
xor
mov
push
add
hlt
xor
orb
mov
test
or
sbb
jle
add
mov
sarl
xor
das
jb
addr16
mov
add
mov
cmpsl
xchg
push
or
pop
add
and
ret
pop
xchg
ret
in
lcall
adc
jmp
sub
ficomps
cwtl
xchg
loopne
sbb
in
mov
rcll
mov
cmp
xor
or
cltd
fiaddl
add
mov
mov
stos
inc
or
test
jg
mov
and
shrb
or
out
or
in
lret
sbb
add
or
add
push
jb
mov
mov
mov
repnz
pushl
or
push
pop
mov
xchg
inc
or
scas
test
inc
call
or
outsl
std
add
push
ljmp
adc
jmp
aas
or
mov
add
aaa
les
xor
jns
daa
fwait
pop
push
inc
and
jle
popf
push
mov
mov
cwtl
fidivl
or
call
pop
mov
or
mov
rorl
sti
adc
add
pop
dec
and
lods
cmc
mov
lds
cmpsl
mov
inc
or
decl
mov
pop
xchg
mov
test
and
push
cld
mov
add
mov
inc
xchg
add
mov
pop
call
jge
push
push
stos
or
add
in
lea
jge
bound
subb
decl
hlt
sub
add
arpl
jge
inc
in
pop
clc
push
je
and
sti
mov
mov
ficomps
lods
pop
cmp
out
hlt
push
add
and
add
mov
add
iret
add
or
add
imul
mov
push
pop
or
sub
nop
outsb
fiaddl
in
add
pop
loopne
repz
jmp
and
int3
clc
hlt
or
mov
sub
jmp
push
jne
mov
add
mov
sub
mov
adc
int
add
adc
popa
jne
push
add
arpl
popl
pop
mov
mov
mov
add
add
adc
jo
scas
adc
cmp
pop
in
inc
mov
mov
lcall
cld
and
cli
mov
mov
in
cmpsl
mov
jmp
mov
and
or
bound
sbb
cwtl
jne
andl
jle
push
jb
inc
cli
stos
rep
mov
add
call
fidivs
lock
xor
rcr
mov
fmull
push
mov
test
addr16
xchg
jnp
jecxz
jg
add
dec
pop
pop
cmc
push
sti
push
lods
cs
push
pushf
aad
fs
jmp
scas
mov
mov
xchg
je
and
jl
or
push
pop
cli
jne
pop
jo
add
xchg
cli
sub
xchg
sbb
jecxz
decl
xor
mov
incl
mov
iret
mov
pop
call
jns
sti
mov
sbb
imul
aad
inc
mov
fcmovu
mov
ret
out
xchg
je
imul
xor
add
adc
xor
mov
bnd
jmp
mov
cwtl
push
fs
xchg
adc
add
add
cld
add
leave
repz
push
in
add
and
pop
push
ds
xchg
push
xor
add
adc
push
cmp
hlt
pop
xchg
imul
loopne
int
or
int
or
adc
in
pop
mov
add
int3
sbb
xor
jle
mov
and
mov
jno
sbb
lods
pop
addr16
mov
mov
repz
mov
pop
cltd
addr16
jb
add
cmp
jmp
lea
dec
int
in
xchg
sbb
mov
lahf
sbb
flds
int
mov
jmp
pop
stos
cltd
adc
push
cld
test
jle
add
sbbb
scas
adc
mov
mov
cmp
loop
or
mov
cli
faddl
inc
jmp
or
or
dec
push
nop
add
out
jmp
mov
xchg
popl
add
add
mov
aaa
popl
add
testl
das
adc
add
mov
mov
mov
jne
addb
mov
adc
fidivrl
pop
call
pop
fs
and
mov
sub
sub
xor
ljmp
mov
push
push
pop
dec
pop
sub
mov
mov
orl
or
into
pop
jg
leave
hlt
ja
push
cmp
mov
test
loop
sbb
cmp
mov
cmpsl
jae
push
cmp
data16
and
les
incl
outsl
mov
mov
mov
cmp
cld
adc
sub
shr
out
dec
add
add
xor
adc
lcall
inc
repz
mov
icebp
mov
xor
into
xchg
sub
int3
xchg
xorb
fdivrs
loopne
xchg
xchg
jle
adc
mov
jp
cmpsl
loopne
mov
lock
sub
add
repz
add
jb
in
subb
inc
cld
fistpl
or
mov
add
rolb
xor
mov
add
mov
cmpsl
sub
adc
addr16
jbe
sbb
mov
mov
orb
test
jl
pusha
add
or
leave
cmpsb
xchg
push
jp
pusha
addl
pop
std
mov
cmpsl
sub
jbe
inc
adc
cmp
add
sbb
dec
pop
std
rol
clc
sbb
push
out
adc
push
inc
cmp
mov
xorb
add
jl
or
cmp
inc
sub
sub
aaa
xchg
add
or
add
mov
cmp
out
pminsw
sti
jmp
inc
and
mov
js
mov
sbb
mulb
jo
mov
add
test
sub
mov
cs
sahf
dec
or
mov
addl
into
jnp
add
jg
lret
push
and
adc
adc
mov
sub
jb
adc
dec
sbb
add
mov
adc
adc
shl
cmp
movlps
add
cmc
inc
and
cmp
popa
mov
sub
mov
jecxz
add
push
sti
call
mov
aam
aad
push
jns
jl
adc
add
xlat
in
add
mov
mov
bound
rcl
inc
ja
ds
ret
sub
jne
push
adc
fbld
in
jl
xchg
repz
enter
loopne
mov
test
fbld
mov
mov
jl
xchg
cli
lock
ret
adc
roll
pop
add
imul
add
pop
adc
lds
cmp
out
cmp
stos
jle
inc
and
loope
fists
add
lret
cmp
jle
out
inc
cmp
sub
add
jb
cmpsl
adc
mov
in
mov
inc
pusha
xchg
adc
and
mov
imul
pop
cltd
repnz
pop
std
push
add
lret
je
adc
das
and
orb
inc
jmp
cli
mov
mov
add
add
mov
test
mov
add
push
out
adc
mov
push
pop
sahf
add
popf
add
push
jnp
add
test
call
in
pop
mov
xor
lea
xor
in
ja
outsl
mov
xchg
js
ss
jae
mov
insl
or
in
add
sub
inc
xchg
xchg
jb
mov
in
aas
mov
and
pop
or
cmp
lea
fstpt
or
incb
sub
push
mov
repnz
cmp
pop
orl
div
mov
or
push
jecxz
jmp
mov
les
dec
fwait
scas
lock
pop
gs
or
fdivrl
sti
adc
and
push
gs
xchg
cli
cltd
adc
sub
sub
pop
push
sbb
mov
in
cmp
inc
pop
pop
icebp
fstpl
fcomp
arpl
movsl
add
and
fdivs
add
add
stos
mov
add
push
add
std
pop
push
orl
mov
cmc
loope
adc
ret
rolb
dec
in
mov
out
pusha
xchg
add
in
dec
repz
fcmovne
pop
jmp
xchg
mov
mov
cmc
shll
pop
aad
sbb
data16
add
lea
add
aad
mov
jb
adc
mov
mov
cli
jmp
adc
pop
stc
or
jg
add
mov
inc
pop
call
sub
lock
ret
mov
jmp
push
push
cli
test
lcall
js
mov
inc
cs
jbe
movl
call
xchg
ret
or
xlat
mov
pop
mov
lds
jns
jle
jb
add
emms
and
mov
push
jo
notb
mov
or
imul
or
mov
mov
adcl
jle
in
lret
push
jecxz
sub
ficomps
into
in
shlb
orb
cmp
add
popa
jg
mov
push
in
push
adc
movsb
jmp
xor
pop
add
movsl
out
test
in
add
add
xor
jg
push
movsl
jmp
add
adc
jmp
add
mov
add
lret
add
sarl
dec
shr
fldenv
cltd
fildll
mov
add
mov
adc
cmp
cmpsl
mov
addl
mov
sbb
pop
scas
lock
add
adc
add
or
cli
xor
pop
gs
es
add
jecxz
loop
mov
insl
mov
arpl
arpl
lcall
jecxz
inc
add
daa
call
sbb
call
mov
pop
push
leave
or
or
icebp
std
mov
in
lea
fsubs
std
aas
add
adc
jmp
stos
mov
jb
push
pop
mov
xchg
jo
mov
int
fwait
add
push
out
add
cmp
jne
inc
jmp
lahf
xchg
add
jb
push
add
add
call
add
cmovo
mov
add
ja
and
sbb
daa
mov
inc
test
add
xor
jmp
sbb
inc
mov
rorl
jne
sar
push
out
mov
push
pop
and
mov
push
push
adc
push
mov
pop
pop
pop
inc
adc
popf
and
test
xchg
je
lock
dec
sbb
push
xor
imul
pop
test
lret
and
push
mov
mov
xor
outsb
aam
xor
mov
or
lret
mov
pop
mov
or
or
sub
fs
pop
xchg
fstl
jl
test
push
test
adc
push
pop
mov
or
dec
cmpsl
sarb
mov
lea
scas
repz
or
out
add
push
add
cltd
or
mov
mov
sarb
pop
cmp
add
stos
xor
bound
or
mov
add
insl
inc
xchg
push
mov
pushf
add
fstpt
xchg
ja
in
stos
or
mov
jmp
xor
jns
jmp
adc
jmp
lea
clc
jmp
mov
gs
mov
jmp
lds
push
xchg
push
orb
mov
push
bound
jmp
mov
add
test
shlb
pop
cli
pop
pop
adc
addl
push
jb
mov
je
mov
jne
or
sub
jne
add
outsl
adc
fwait
jns
mov
mov
add
add
xchg
test
imul
mov
pusha
add
stc
push
cmp
jb
pop
push
push
and
ficoml
inc
add
and
add
cmpb
sub
add
mov
loop
push
push
push
adc
add
add
repz
push
das
cmp
and
cmp
rorl
adc
push
add
repnz
mov
ds
cmp
in
add
xchg
addr16
add
pop
test
xchg
jns
sub
loopne
jle
in
inc
push
pop
test
push
add
pusha
sbb
inc
sahf
mov
nop
pop
testl
mov
xor
xchg
cmc
sub
jle
inc
or
sbb
or
int3
mov
xlat
insl
inc
inc
sub
cmpsl
fcom
add
or
rclb
sub
lods
mov
adc
pop
xchg
lods
add
lret
icebp
xchg
mov
add
dec
mov
cmp
add
lret
jmp
add
outsb
cld
loopne
stos
push
rcll
push
add
jecxz
xchg
cwtl
out
cli
aad
insl
cmpsb
pop
pop
pop
shll
dec
jmp
sub
jmp
mov
add
test
pop
vpacksswb
insb
push
stos
mov
movsl
mov
jmp
mov
add
lahf
sbb
test
popf
arpl
jnp
in
xchg
jg
adc
fs
cmc
jmp
pop
cmp
aas
add
pop
flds
setno
or
neg
cli
dec
pop
add
out
and
ficompl
jb
jmp
lret
sarl
call
jno
or
stc
jmp
std
inc
and
rcrl
sub
push
ret
push
push
sub
bound
vandnps
mov
call
fmull
ret
in
and
fdivrs
push
add
psubb
es
rcr
lea
es
add
dec
mov
loop
mov
addr16
je
call
and
loop
xchg
loop
add
cs
or
sbb
cmpsb
pop
pop
add
inc
incl
pop
lcall
pop
dec
inc
add
psubsb
pop
lcall
fiadds
xor
xchg
push
add
cld
sahf
incl
icebp
mov
lahf
mov
pop
dec
stos
popa
cltd
repz
xchg
mov
add
dec
insl
aas
mov
loopne
pop
inc
cmp
cmp
movsb
in
fnstcw
sub
adc
cmpsl
aad
push
test
add
push
call
aad
ljmp
add
mov
add
shr
add
mov
add
mov
add
adc
lea
xchg
jmp
rorb
ljmp
add
cmp
mov
sbb
mov
sahf
and
sbb
sbb
adc
ljmp
mov
lea
add
fstl
inc
orl
inc
and
cli
test
imul
es
cli
test
out
adc
jbe
add
mov
les
pop
cmpsl
mov
lods
push
pop
mov
ret
pop
dec
push
add
fs
es
jo
mov
ds
movsl
adc
mov
dec
dec
pop
adcl
insb
sub
cmpsl
mov
lea
xchg
mov
add
adc
push
inc
cmp
add
cmpsl
mov
add
daa
popa
aad
stos
test
add
repnz
call
add
repnz
sub
movsl
iret
mov
fs
add
pop
jnp
nop
mov
ret
sahf
or
xchg
repz
add
fmuls
xor
push
add
jns
add
js
add
push
add
mov
jo
mov
scas
or
add
hlt
push
call
adc
add
push
pop
add
cmp
je
adc
fidivs
sub
add
insl
arpl
int
imul
in
mov
xchg
ljmp
into
jmp
mov
addr16
nop
in
add
out
outsl
jge
in
or
test
fisttps
std
mov
mov
jle
arpl
in
lea
jge
mov
add
lcall
clc
es
mov
dec
stc
popf
xchg
test
out
mov
xor
or
lea
add
pop
dec
pop
inc
rorb
test
or
cld
mov
add
push
add
lea
mov
cli
sahf
dec
inc
adc
lea
jns
lea
xchg
xchg
mov
cli
jbe
pop
or
jb
or
adc
push
fiadds
cmpsl
ret
icebp
cli
or
adc
add
arpl
or
xchg
nop
add
pop
or
and
inc
or
mov
mov
push
add
lret
adc
adc
aaa
mov
push
push
pusha
fs
mov
adc
testl
shrb
insb
adc
mov
push
push
or
sarb
jbe
and
push
jge
addr16
push
mov
and
add
mov
jbe
jp
incl
and
pop
jne
add
inc
ljmp
inc
or
fstpt
jb
xorl
fmulp
jmp
ja
ja
orl
pop
and
sar
mov
ja
jge
ljmp
fucomp
es
out
or
xchg
gs
and
repnz
push
mov
divl
jge
in
jl
scas
or
aad
add
lea
mov
int
add
cmp
aas
in
add
xor
in
ja
and
fxch
loop
daa
outsb
ds
ret
and
lods
icebp
jg
sub
adc
test
js
or
sub
mov
out
xor
lea
jnp
add
xchg
jmp
mov
loopne
pop
push
add
fmull
mov
movsb
mov
lea
xchg
test
add
in
clc
aaa
or
mov
call
mov
out
jo
or
jmp
andb
jmp
lret
pop
mov
mov
jb
ds
sub
jmp
lcall
sbb
pop
loope
dec
push
lea
les
mov
push
add
lea
aas
push
loope
icebp
inc
lret
in
mov
flds
mov
aaa
loope
lea
add
data16
or
sub
lea
add
push
xor
sti
inc
sbb
and
cmp
iret
lea
lea
lea
ret
mov
jmp
roll
mov
adc
enter
fs
add
push
cmp
mov
xchg
add
scas
sub
pop
jl
push
cmpsb
push
add
mov
and
pop
adc
subb
add
call
repz
mov
xchg
test
cmpb
push
ret
mov
xchg
pushl
pop
mov
repnz
lea
xchg
ljmp
repnz
mov
lock
incl
ds
mov
push
call
stc
mov
pop
push
mov
lods
in
add
scas
cmp
dec
cmpsl
enter
stc
sbb
or
lret
fsts
mov
in
add
push
mov
or
pop
fdivrl
cmpsl
or
loop
aad
lods
xorl
cmp
clc
lods
jg
aam
mov
xchg
pop
int3
insb
ret
mov
ret
ficomps
push
and
mov
mov
jb
xchg
icebp
jecxz
in
xor
add
bound
stos
adc
inc
mov
ss
rcll
dec
int
repz
scas
mov
scas
jmp
popf
adc
popa
fidivs
xor
push
outsl
into
add
or
or
cli
jmp
lea
lods
test
fdivrp
jmp
lea
jg
lea
mov
mov
and
lea
xchg
lea
add
repz
xchg
mov
je
pop
adc
fcmovnu
inc
mov
jo
or
fmuls
int
add
push
add
and
and
test
cli
je
bound
out
jno
jne
add
loop
divb
inc
xor
mov
iret
jge
add
jp
addr16
mov
xchg
add
push
add
sbb
mov
sbb
fistps
jecxz
push
sub
es
push
lea
sti
xorb
push
enter
out
inc
icebp
outsb
inc
jae
loope
cmp
or
loope
int3
roll
ljmp
sub
fwait
sbb
mov
add
adc
pop
outsl
out
repnz
add
push
push
mov
mov
bnd
enter
mov
out
mov
hlt
aas
mov
add
shr
je
fisttpll
inc
fwait
xor
sbb
insl
pop
dec
mov
lea
pop
cli
rcll
push
loop
add
lret
lods
iret
adc
sbb
add
cmp
imul
xor
dec
mov
cmp
out
cwtl
sub
int3
cmp
das
inc
jle
add
push
and
mov
lahf
xor
aaa
mov
popa
fcmovu
jl
xor
cmp
jle
pusha
aam
int
rcl
fcmovnu
add
scas
cli
adc
sbb
cmp
outsb
push
iret
stc
scas
pop
rcrl
pop
aad
ljmp
leave
xor
add
push
push
cmp
add
add
cmp
imul
lcall
jns
add
fcmovbe
rcrl
pusha
inc
jmp
test
lea
add
mov
add
and
jg
mov
mov
mov
or
dec
mov
mov
mov
mov
push
lea
cmp
loopne
aaa
add
lea
leave
loopne
and
out
cmp
fisttpl
add
pop
jae
add
loop
movzbl
and
sbb
cmp
sub
add
dec
outsl
inc
je
cmp
jno
ret
pushl
jbe
or
mov
aam
decl
mov
inc
dec
jne
sbb
mov
mov
mov
jle
imul
mov
arpl
mov
mov
lret
loop
jnp
push
ud2
push
push
add
xchg
incl
push
jns
pushl
loop
mov
cltd
loop
inc
push
test
stos
jp
cmp
and
clc
and
bndstx
sbb
callw
mov
shlb
adc
xor
call
add
lret
enter
jae
lea
shrb
sbb
fsubrs
and
mov
and
xchg
and
cmpsb
cmp
lods
cmpsl
cmp
rcrb
fcmovne
shlb
dec
rorb
cmp
pop
fcomps
cld
pop
lret
adc
inc
xor
inc
push
int
add
add
mov
add
mov
or
lock
js
cmp
ljmp
or
rorl
push
gs
dec
lds
jnp
xor
out
cli
mov
rcrl
adc
sub
icebp
stos
adc
aam
push
movb
shl
into
cs
pop
push
outsb
icebp
lds
jo
fiadds
adc
sub
jmp
dec
pop
sbb
lcall
push
jno
mov
scas
push
aaa
pop
add
dec
add
push
push
shr
movsb
mov
es
mov
sub
ret
mov
jl
aaa
out
mov
xchg
mov
xchg
jmp
add
inc
push
mov
je
mov
mov
mov
mov
xchg
push
pop
pop
sub
nop
add
test
insl
xor
xchg
push
mov
subb
ret
leave
cli
addb
jp
mov
adc
ja
rorl
jns
addr16
dec
data16
push
mov
mov
add
std
dec
jbe
pop
into
sub
stc
movsb
ret
cmpsb
aad
mov
and
adcl
cmp
lcall
sbb
adc
loop
cmc
jp
mov
sub
jmp
ljmp
outsl
in
jecxz
mov
mov
add
mov
les
addr16
push
sar
cld
outsb
fwait
mov
push
movb
sub
into
dec
jae
ror
stos
ret
insl
pop
lods
add
push
pop
push
mov
lea
lods
or
dec
loopne
into
jnp
les
dec
fmuls
add
add
jae
mov
sub
push
dec
or
push
add
inc
add
leave
or
add
mov
mov
or
add
add
add
jmp
mov
adc
add
jmp
cwtl
lea
jb
popf
fisubrs
jmp
in
jb
scas
adc
and
jb
jmp
push
hlt
insb
les
jb
ljmp
mov
repnz
movsl
add
lea
inc
or
lea
add
adc
jmp
outsb
mov
bound
jmp
cmp
xchg
pop
out
sar
hlt
movsl
jl
add
mov
adc
faddl
mov
out
add
in
aaa
jg
pop
test
push
jnp
dec
or
or
or
and
call
pushf
mov
adc
mov
add
adc
repnz
call
push
jbe
insb
mov
add
incb
outsb
ret
call
nop
add
cmp
push
lea
pop
lcall
mov
add
add
aad
paddusw
or
es
jmp
insl
dec
test
lock
xchg
xchg
roll
adc
mov
insl
add
and
pop
ss
add
insl
roll
mov
pushl
jg
loop
add
dec
addb
jecxz
add
dec
or
or
out
jbe
mov
data16
mov
mov
jecxz
cmp
xor
mov
add
adc
std
xorl
mov
imul
jmp
adc
add
or
outsb
mov
mov
jno
mov
mov
and
mov
testl
jnp
pop
jge
jne
icebp
add
lcall
add
clc
cmp
stos
sbb
jmp
orb
ss
add
jg
nop
fdivs
mov
fnstcw
push
pop
adc
push
mov
inc
fmulp
cli
dec
push
or
loope
push
dec
mov
cmpsb
dec
cs
or
and
into
call
mov
push
sahf
jle
mov
pop
in
and
ja
jo
stos
sbb
lea
add
jg
add
add
out
sub
pusha
cmp
add
mov
and
mov
mov
add
jo
add
add
out
add
ja
jg
js
add
mov
cli
lock
mov
outsb
ljmp
or
inc
call
daa
mov
add
add
sti
jmp
in
lea
cmpsb
pop
push
sbb
fcomp
adc
cmp
ret
sbb
jp
mov
mov
call
je
addr16
inc
cmp
mov
jecxz
lea
sarb
sti
mov
mov
dec
ljmp
outsb
cmpsb
insb
jecxz
lea
xchg
push
jecxz
add
pop
sbb
ficomps
and
cmp
mov
push
add
adc
jo
andl
cmpsb
mov
add
mov
lods
test
in
inc
push
mov
fmuls
pop
sub
pop
xor
pop
cwtl
mov
add
int3
icebp
jg
mov
add
clc
enter
in
mov
shufps
dec
mov
in
xor
int
aad
cwtl
sub
push
mov
insl
jnp
in
mov
outsl
jg
insl
cmpsl
jmp
mov
mov
add
aas
rcrb
mov
adc
int
jg
leave
mov
scas
outsl
push
fs
cmpsl
pop
cmp
cmp
jmp
outsb
cmpsl
cli
aam
jnp
jmp
outsb
jnp
sub
mov
adc
xchg
or
in
fwait
cmp
lcall
jmp
add
sbb
fiaddl
pop
push
outsl
sub
mov
push
outsl
pop
call
mov
dec
cli
dec
lret
lea
lahf
add
lea
mov
mov
pop
add
ja
add
push
outsl
and
psubb
syscall
inc
arpl
add
pop
pop
mov
pop
data16
add
mov
add
or
add
std
push
push
add
ret
mov
in
mov
out
dec
in
pop
pmaddwd
add
ja
xor
call
pop
inc
add
fidivl
jne
pop
inc
add
mov
or
mov
leave
mov
add
and
or
sbb
pop
add
mov
mov
lods
mov
add
mov
and
popa
test
xchg
jmp
sbb
je
orb
add
lock
add
jae
jge
mov
scas
dec
mov
jle
aas
mov
aas
jge
mov
iret
xchg
or
lock
mov
mov
jns
clc
add
pop
xor
enter
stos
in
add
pusha
or
ds
std
outsl
lods
add
enter
stos
in
add
and
inc
test
adc
and
pop
xchg
add
mov
sbbb
jg
ds
dec
xor
lods
fwait
jmp
add
mov
shrl
mov
and
xchg
mov
cmpsb
xchg
pop
mov
or
cmp
pop
sub
mov
add
into
or
in
lds
cmp
ret
inc
adc
mov
pusha
into
imul
mov
inc
lds
or
gs
mov
sbb
sbb
leave
add
add
pop
fucomip
add
mov
sti
dec
pop
add
decb
xor
mov
jg
iret
add
or
addb
jg
xor
add
and
push
push
jl
xor
adc
pop
stc
mov
adc
insb
adc
addl
mov
mov
or
add
or
or
popf
icebp
inc
mov
mov
divl
jnp
and
jmp
movsb
mov
test
sahf
cmpsb
jg
icebp
push
add
es
mov
cmp
add
xor
or
leave
adc
pop
xor
jge
out
addr16
lock
incl
mov
aaa
sub
mov
mov
invd
sbb
mov
xor
mov
push
add
jmp
mov
mov
icebp
mov
je
inc
jae
divb
je
popf
pop
jne
popf
push
mov
push
rclb
pop
das
dec
in
add
add
mov
add
in
add
mov
add
in
in
add
mov
add
cld
mov
mov
sarl
in
jle
xchg
pop
insl
fwait
sbb
add
hlt
pop
cmp
add
int3
pop
fldenv
aas
adc
inc
push
shr
cld
add
jb
call
add
lea
sbb
inc
cmp
jno
in
sbb
lea
xor
dec
add
ds
lahf
lret
sti
dec
les
sbb
xor
sbbl
test
dec
gs
sbb
lret
jmp
aas
lahf
fcmovne
ret
in
repz
dec
aaa
jmp
mov
es
mov
jb
loope
jmp
stos
ret
cli
bound
pslld
orb
incb
pop
pop
pop
mov
mov
add
imul
rcll
mov
inc
repz
popl
imul
incb
mov
inc
bound
mov
add
daa
inc
add
mov
or
div
push
jb
add
dec
addr16
outsb
repnz
pop
add
mov
mov
add
insb
add
loop
mov
add
das
lret
pop
fimuls
add
sub
add
into
inc
mov
xor
mov
add
mov
ret
pop
add
and
decb
xor
or
ret
and
mov
mov
jmp
mov
dec
add
insb
or
lahf
add
add
push
cli
subl
cmp
orb
sub
add
insl
dec
xchg
cmp
test
cld
push
inc
clc
sahf
jb
lea
in
cmp
ljmp
cmpsb
push
lods
add
or
ljmp
jle
daa
jns
jmp
inc
adc
cltd
daa
mov
sub
daa
stos
mov
jp
adc
pop
cwtl
int3
jmp
pop
dec
add
add
push
in
jge
jmp
adc
aam
leave
insb
and
insb
xor
insb
das
fs
aaa
adc
pusha
push
insb
cmp
dec
insb
pop
jo
insb
aaa
andb
mov
lret
cmp
addl
imul
les
mov
pop
add
push
fidivl
push
shll
push
push
pop
shll
adc
ss
cmp
mov
pop
rcll
mov
sub
orb
lret
add
dec
stc
jmp
cltd
inc
dec
and
pop
std
idiv
dec
into
pushl
dec
mov
pop
add
sbb
lea
jae
mov
mov
add
int
add
cli
jne
ds
and
pop
shl
push
jp
pop
out
sbb
sub
stc
push
sub
push
roll
add
xor
fmull
fmuls
push
pop
fs
sub
mov
mov
adc
jmp
mov
mov
xacquire
repz
push
add
lods
test
ja
jg
mov
mov
test
shrb
and
das
sub
cmp
rolb
sub
and
rorb
inc
incl
mov
rorb
xchg
push
add
out
adc
mov
and
push
test
aaa
cmp
xchg
les
hlt
iret
push
or
mov
in
push
dec
xchg
loope
push
mov
add
jg
mov
add
fs
cwtl
test
add
loop
cmp
es
xchg
cld
jle
xchg
add
outsl
inc
push
adc
xchg
adc
add
xchg
sbb
in
add
insl
lret
lea
add
lods
mov
jne
adc
pop
dec
pop
push
nop
outsl
hlt
adc
xorps
inc
mov
mov
cmovp
inc
and
and
mov
imul
cwtl
mov
nop
jne
sbb
popa
lea
insl
xorl
adc
bsf
stos
mov
pop
xchg
mulb
nop
lret
nop
add
int
idivb
add
mov
push
mov
mov
aad
imul
push
cmc
sarb
xchg
xor
int3
lds
pop
mov
xchg
adcl
push
sub
pushl
xchg
add
xchg
das
mov
jg
popl
and
push
jae
ja
mov
ljmp
add
cli
mov
cmp
add
push
mov
jno
jg
cmp
add
fwait
push
mull
inc
fnstenv
xlat
sti
mov
mov
or
jo
mov
das
inc
jae
mov
xchg
insl
testl
inc
das
inc
jae
and
add
cmpsl
add
cli
mov
mov
std
dec
jne
cmp
pop
ret
fdivp
pop
sbb
cmpb
pop
enter
push
pop
jmp
dec
mov
add
mov
add
jne
inc
adc
jmp
cmp
adc
add
pop
jge
cmpsl
imul
lea
rcll
pop
bound
mov
fadds
mov
lods
testl
cmpsl
test
add
xchg
inc
pop
sbb
addl
mov
push
mov
out
testb
jns
pop
pop
jmp
ljmp
jmp
inc
mov
inc
jmp
aaa
movsl
jmp
lds
jmp
xchg
mov
ljmp
dec
int
movsb
jb
lea
out
add
inc
add
and
pop
ror
add
mov
push
cmpsb
ret
insb
mov
mov
push
mov
push
je
movsb
jmp
pop
mov
jmp
dec
mov
mov
push
fisubrl
pushf
lret
cmp
xor
repnz
mov
inc
cmp
jecxz
cmp
pop
jmp
rorl
push
push
das
or
idiv
rcl
adc
add
or
add
or
or
jbe
pop
cmp
lcall
lods
xor
lea
dec
dec
or
roll
cld
mov
push
mov
push
or
mov
mov
xor
icebp
pop
leave
and
mov
dec
push
mov
jnp
jge
jl
xchg
inc
jne
aaa
pop
cld
add
jp
pop
push
pop
loop
mov
ljmp
pop
notl
ds
movsb
pop
add
jno
adc
push
and
ja
and
sub
add
stos
or
jo
movsb
push
call
adc
movsb
jns
cli
mov
add
pop
push
sahf
pop
test
fmul
adc
loopne
inc
aas
ret
xchg
jmp
fldl
fisttps
gs
rcll
pop
jbe
mov
add
dec
enter
leave
add
test
mov
mov
adc
xchg
xchg
insb
pop
or
test
or
and
fsubrl
add
lret
and
add
mov
mov
outsl
fdivl
mov
mov
pause
aad
aam
jg
add
lcall
shll
mov
xchg
mov
push
inc
pop
add
testl
mov
jmp
jnp
add
cmp
xchg
xlat
pop
nop
int
mov
jmp
xchg
mov
ja
pop
or
mov
jmp
add
dec
pop
or
mov
das
cli
pop
or
aad
cmc
or
and
mov
pop
shr
lea
inc
fs
push
roll
ja
lea
add
and
sarl
jne
call
mov
push
and
add
psubd
test
jbe
xchg
inc
imul
lret
aaa
mov
inc
movsl
fmuls
sti
stos
bound
xlat
insb
add
jno
add
sbb
xor
push
call
and
and
pop
mov
addr16
mov
pop
out
add
dec
and
mov
pop
inc
movsb
push
mov
rcrb
mov
ljmp
call
and
add
jno
push
adc
mov
call
movsl
xchg
pop
dec
push
or
ret
gs
out
movsb
push
add
sub
shll
mov
test
jns
test
mov
mov
sbb
popf
jne
mov
aaa
jmp
pop
add
mov
imul
fbld
gs
xchg
mov
fs
push
mov
add
and
add
jbe
mov
pop
xor
lods
imul
add
loopne
xor
mov
mov
gs
fdivl
fmull
nop
insb
mov
push
cmpsb
clc
mov
mov
rcrl
xchg
sub
or
mov
cmp
adc
inc
shrl
pop
add
adc
inc
xchg
and
pop
rcll
icebp
jo
inc
mov
cli
push
add
pop
cli
dec
add
mov
cmp
sub
ds
push
mov
lea
add
add
insl
sub
jbe
adc
fs
add
dec
mov
insl
incl
pop
push
mov
add
adc
mov
add
insl
adc
data16
sbb
pop
or
enter
or
insb
dec
mov
fs
daa
mov
ret
lret
test
addr16
sub
nop
enter
sbb
jmp
xchg
dec
lea
test
push
fnclex
xor
mov
xorl
mov
xchg
sub
decl
sub
sub
mov
mov
mov
mov
stos
int3
mov
jbe
inc
add
cmp
jmp
mov
sub
stc
loop
add
mov
pop
adc
pop
adc
xor
sbb
adc
push
movsb
mov
loop
lea
jnp
adc
and
add
loop
leave
cmp
pop
pop
mov
mov
imul
mov
enter
loopnew
addb
rolb
arpl
dec
mov
rcrb
fabs
xchg
xchg
push
push
mov
mov
addr16
jmp
adc
andb
add
adc
add
mov
add
int
push
or
push
aas
add
lea
in
xorl
in
add
jmp
jmp
add
mov
fs
lods
mov
or
rolb
test
and
shll
cmc
xchg
dec
imul
cmpsl
mov
pop
leave
aas
scas
adc
dec
add
cmp
inc
movsb
jmp
lea
lcall
shll
das
jb
imul
daa
into
push
lret
lea
int3
push
mov
pop
lods
cli
add
lods
dec
and
addl
mov
lods
lea
sub
aad
mov
add
faddl
test
cmpl
cmp
leave
call
in
popf
enter
add
decb
imul
and
cld
iret
mov
aas
decl
pop
std
ret
dec
add
stos
dec
jbe
pushf
mov
cs
mov
lea
jg
mov
jmp
add
cmp
pop
popf
or
mov
popf
cmp
scas
rcll
mov
adc
jg
cmpb
out
cli
push
add
mov
mov
shl
mov
mov
testl
int
push
or
cmp
pop
loopne
fadds
mov
dec
out
jb
add
sbb
lret
sub
xchg
add
pop
rcrb
cld
fcompl
in
adc
call
divl
data16
jne
lock
ret
mov
stos
cmc
xlat
xor
mov
hlt
inc
push
mov
sub
dec
rcrb
aas
enter
rol
xchg
insl
inc
mov
nop
sub
ret
gs
insl
dec
jne
popa
push
adc
mov
outsl
jae
insl
imul
addb
shrl
pop
shrl
adc
cmpsb
cli
push
sbb
pop
test
add
outsl
rcll
gs
push
pop
mov
push
pop
add
ret
or
fisubrs
jb
mov
mov
outsb
dec
jg
xchg
rsqrtps
lea
out
in
adc
pop
aad
or
or
cli
jmp
jne,pn
push
out
add
adc
pop
cmc
push
cmp
dec
add
and
dec
test
mov
jecxz
cmp
pusha
or
mov
or
mov
mov
mov
aas
and
rorb
adc
inc
cmp
add
cmpsl
jne
mov
je
les
mov
jg
js
aad
ja
cli
xor
adc
hlt
arpl
cli
push
enter
enter
push
aam
les
aaa
and
es
mov
lea
ljmp
lcall
and
ficoml
aaa
cli
sub
push
out
lret
dec
xchg
push
mov
inc
jbe
ret
sbb
mov
ret
mov
lea
lock
and
sub
ljmp
jne
mov
mov
daa
inc
add
or
out
das
push
add
mov
orl
add
or
sub
add
xorb
dec
mov
adc
mov
lea
test
xchg
addr16
jecxz
add
mov
aas
mov
sar
mov
ja
iret
cmp
loop
outsl
add
adc
arpl
lods
jg
aam
xchg
push
mov
and
movsl
adc
rorb
mov
and
add
movsl
jg
mov
jle
lea
pusha
or
loope
add
xchg
xchg
repz
test
xor
bound
or
jmp
mov
out
jmp
mov
test
xchg
jg
mov
or
cmpsb
cli
jmp
dec
xchg
or
cli
jmp
push
in
xchg
inc
test
sub
leave
lea
and
mov
cmp
pop
push
pushf
jg
dec
sub
out
jge
enter
lea
inc
jmp
inc
and
or
lret
mov
dec
push
adc
jbe
idivl
sar
rcrb
cmp
push
mov
adc
rorb
decl
jg
imul
mov
mov
das
mov
stos
mov
or
push
inc
mov
cmpsb
test
mov
into
fimuls
fidivs
orl
mov
mov
jae
sahf
jns
or
lret
stc
mov
add
xor
jmp
test
mov
jns
stos
mov
jns
xchg
clc
push
incl
addr16
push
test
add
and
sub
cltd
jbe
push
sbbl
pushl
in
decl
mov
jl
mov
inc
mov
xchg
fimull
in
cmp
sbb
jl
xchg
push
cmc
xor
add
lds
ret
or
in
dec
addr16
inc
addr16
dec
push
flds
adc
rclb
lret
mov
add
inc
cmc
inc
push
and
or
enter
cld
fadds
in
xchg
int
add
int
add
int3
jmp
adc
int3
add
lea
dec
add
push
dec
fnstenv
call
adc
dec
fs
add
xchg
push
jp
or
jmp
adc
stos
mov
scas
roll
scas
int
jno
lea
dec
dec
mov
mov
mov
mov
adc
or
std
cli
fdivrl
inc
jmp
or
add
adc
or
mov
jns
pop
mov
inc
cld
xchg
or
xchg
add
incb
lea
jmp
push
inc
addr16
cmp
ja
xor
cmp
shll
mov
jg
shll
mov
iret
mov
add
rcrl
mov
lret
ret
xchg
lret
mov
es
add
ret
es
lret
es
jno
decl
lea
add
daa
xorb
push
and
pushf
lret
mov
data16
pop
pop
jmp
add
jle
jae
mov
shlb
sahf
jl
pop
data16
cmp
push
daa
andb
mov
add
sbbb
es
push
sub
inc
push
or
add
mov
push
add
mov
push
das
mov
incb
xor
stc
test
mov
add
andb
mov
add
add
add
mov
sbb
sub
pop
mov
call
or
adc
add
xchg
mov
add
cmp
add
push
shlb
adc
lods
std
or
fs
orl
add
adc
shrb
cmp
addr16
add
pusha
or
mov
js
addr16
mov
mov
cltd
out
inc
jae
insl
arpl
pusha
mov
roll
jmp
lea
inc
add
data16
mov
int
pop
push
jmp
push
or
call
inc
lea
push
xchg
push
sbb
pop
pop
add
imul
or
or
add
cmpb
add
pop
test
lea
fimuls
cmc
add
lea
loope
andb
push
imul
andb
push
add
xchg
push
std
add
stos
decl
pop
int
pop
prefetcht0
test
xchg
lea
mov
add
addr16
loop
subl
dec
mov
mov
sbb
cli
ljmp
add
and
pop
push
decl
insl
push
inc
negl
or
pop
jp
nop
fildl
jmp
stos
jp
out
push
push
mov
sub
decl
sti
add
daa
shll
dec
sti
fxtract
cmpsb
ja
incl
xchg
das
jp
adc
jl
mov
iret
mov
xchg
adc
sahf
cmp
cltd
jns
jb
push
add
sbb
and
daa
lret
jnp
out
inc
mov
lea
xchg
dec
adc
ficompl
pop
mov
jp
mov
jmp
xor
add
jns
add
in
add
mov
add
pushf
jns
push
dec
andl
push
shrb
add
or
mov
sub
scas
lea
mov
xchg
push
and
lods
push
cmp
test
outsl
sub
lds
sub
outsl
pop
add
mov
insl
sti
in
add
addr16
jge
adc
add
and
call
test
mov
jmp
sbbl
pop
pop
lea
mov
adc
out
jmp
ficompl
shlb
or
adc
adc
pop
inc
mov
outsb
jle
mul
sahf
or
test
jg
arpl
add
cltd
add
andl
test
in
mov
jmp
popf
dec
add
pop
add
aad
cli
mov
mov
xchg
out
add
dec
xchg
mov
mov
add
xor
jp
pop
xchg
jg
cmpsb
lea
push
ret
hlt
jecxz
push
je
jg
lea
mov
mov
fmuls
test
mov
add
push
cmc
cli
bound
punpckhbw
fisttpl
loop
jo
lock
mulb
mov
add
sub
mov
jns
pop
mov
rolb
movsb
push
mov
sbb
mov
pop
pop
icebp
repnz
add
mov
test
dec
out
or
add
sub
push
adc
and
das
inc
push
or
decl
sub
jge
jl
ret
pop
ss
cmp
sbb
mov
sti
or
hlt
roll
mov
sub
rorl
pop
cmp
cmpsl
lods
and
test
and
aam
test
add
fildll
outsl
aam
cmp
pop
inc
sbb
lods
and
mov
add
jecxz
push
push
push
mov
cmp
stos
test
add
aad
out
mov
add
mov
add
xorl
daa
jae
test
add
add
push
and
push
push
xchg
add
inc
or
dec
xchg
xchg
test
lea
dec
add
push
push
and
out
jmp
lea
mov
pushf
dec
add
popf
inc
jmp
insl
xchg
cli
cwtl
push
enter
xchg
cli
jb
cmp
cli
xlat
xor
cmp
add
pop
xchg
stc
aas
push
pop
int3
roll
lcall
or
add
sbbl
adc
push
pushl
stc
adc
jl
in
push
jle
add
dec
xor
enter
add
aam
pop
pop
add
test
scas
dec
add
es
pop
jg
sub
inc
add
xchg
xor
mov
sti
incl
ja
xor
push
mov
mov
adc
mov
push
leave
call
jmp
outsl
and
std
sbb
mov
mov
mov
jge
mov
fwait
or
cmpsb
add
andb
stc
shll
jmp
in
add
sar
xchg
fmul
jne
xchg
cmp
add
jge
pop
and
cs
mov
es
repnz
mov
dec
into
push
mov
adcl
inc
or
pop
xchg
lret
cs
frstor
mov
mov
loop
scas
pop
mov
gs
add
fadds
mov
xchg
jno
nop
test
or
test
mov
enter
or
inc
dec
mov
mov
and
mov
xchg
adc
add
add
inc
in
mov
xchg
in
and
adcl
sbb
adc
add
and
repz
shr
cmp
and
cmp
mov
stos
cmp
xchg
outsl
out
add
pop
movsb
adc
sbb
add
xor
mov
xchg
rol
push
shll
insb
dec
push
add
xchg
sub
ret
push
cltd
out
push
jb
stos
push
jmp
arpl
pop
inc
inc
ret
ds
aas
aaa
add
push
cmc
add
imul
ret
in
push
loop
or
add
dec
or
jmp
add
push
or
jle
decl
inc
call
call
jle
sub
rorl
jle
inc
jbe
insb
cmp
jne
push
or
imul
addr16
push
mov
mov
dec
out
lea
cwtl
faddl
dec
hlt
pop
adc
dec
adc
fnstcw
add
pop
mov
mov
xor
mov
jns
jl
sbb
mov
mov
daa
sbb
or
decl
push
add
adc
sbb
lods
push
call
aas
jae
mov
imul
mov
cmp
dec
out
loope
incl
shlb
imul
push
rclb
add
xor
mov
popa
add
adc
sbb
outsb
ds
in
xchg
arpl
xor
lahf
xchg
xor
add
fucomi
mov
add
push
aas
xchg
jg
movsb
out
ret
jo
out
xchg
mov
repz
mov
mov
mov
cmp
stos
test
push
sub
test
pop
aad
int
add
inc
mov
or
jmp
jg
push
bound
aaa
mov
sub
ja
mov
push
or
sbb
bswap
or
mov
push
mov
sti
push
push
cld
lcall
adc
repnz
xorb
or
icebp
mov
insl
jmp
cs
xchg
dec
or
mov
add
dec
mov
dec
aaa
mov
push
mov
add
jae
inc
in
add
or
data16
inc
dec
aas
fcoml
inc
clc
aas
test
or
fmuls
or
aam
mov
push
call
stos
dec
outsl
add
into
or
jecxz
outsl
sbb
imul
adc
mov
xchg
notb
mov
or
add
pop
xchg
push
mov
adc
mov
stos
enter
pop
loope
cwtl
add
xchg
nop
or
pop
mov
jbe
push
add
pop
aas
jae
int
pop
adc
mov
push
add
mov
fsts
xchg
or
mov
and
idiv
push
add
pop
sbb
push
adc
cmpsb
mov
adc
inc
mov
mov
add
or
rolb
pop
repz
gs
call
mov
xchg
rol
jns
test
mov
mov
mov
inc
lea
sti
add
andl
mov
fldl
test
add
inc
fdivrs
or
in
dec
jg
in
mov
hlt
xchg
scas
add
rcll
icebp
lea
pop
sub
jmp
jg
stos
xchg
add
fmul
push
jg
lret
mov
mov
jbe
arpl
dec
lea
ja
jb
cli
pusha
xchg
push
addr16
shll
jmp
bound
mov
sbb
adc
xor
mov
mov
cli
pop
jmp
movb
push
sbb
movsl
mov
push
fs
push
mov
mov
or
and
inc
add
fadds
call
xor
jbe
add
cli
dec
mov
cmp
bound
or
and
mov
mov
add
push
mov
mov
add
dec
push
mov
mov
xor
inc
push
pop
int3
roll
add
dec
cli
out
add
jb
jbe
je
add
inc
pop
mov
inc
push
les
xchg
jg
xchg
add
push
push
add
jne
rorl
sbb
jle
daa
ficompl
mov
ucomiss
dec
fwait
mov
mov
push
fbld
stos
mov
mov
test
xchg
mov
test
rorb
xchg
or
imul
xchg
repnz
fwait
jae
mov
dec
jnp
mov
jno
mov
or
fldt
sub
push
out
add
adc
mov
adc
jmp
in
adc
inc
add
nop
stc
cmp
in
push
data16
mov
popl
sub
in
test
mov
fdivl
adc
enter
push
sarl
loopne
adc
mov
xor
add
nop
jg
icebp
xlat
or
stos
sti
xchg
add
arpl
cmpsl
mov
mov
sbb
jb
sub
lea
jb
sbb
lods
mov
mov
es
dec
or
pop
lea
xor
jo
add
repz
xchg
jg
xchg
mov
xlat
push
stos
mov
cmpsb
dec
stos
adc
mov
xor
inc
fmull
cmp
xchg
mov
in
add
mov
lea
dec
es
cmp
adc
cmp
insb
add
sub
insb
mov
and
mov
jmp
es
add
and
dec
es
xlat
or
stc
hlt
lret
adc
and
test
adc
xor
lea
inc
es
lds
test
inc
and
aas
xchg
dec
lcall
or
sbb
push
and
jg
adc
add
jp
shlb
add
push
cwtl
call
je
add
data16
gs
add
or
mov
jg
add
cmp
pop
ds
and
push
stc
vorps
pushl
mov
mov
add
jmp
jge
mov
dec
xchg
mov
jl
test
inc
xchg
mov
sbb
ficomps
mov
icebp
cmp
rorb
pusha
mov
out
adc
out
jae
int
test
orb
push
mov
pusha
inc
mov
cltd
add
lods
mov
pushf
sbbb
add
cmpsb
mov
xchg
xchg
pusha
lods
add
iret
add
xor
xor
and
mov
cmp
adcb
adc
inc
add
push
repnz
jo
cmpsl
sub
bswap
pop
mov
testb
inc
xchg
cmp
mov
iret
shl
pop
add
xchg
lea
int
mov
jmp
add
scas
pop
xchg
mov
push
insb
inc
scas
inc
popa
and
add
or
gs
add
or
xchg
addb
mov
add
push
xor
and
pop
arpl
mov
in
or
sub
push
clc
in
and
add
push
cs
push
add
inc
packsswb
add
mov
inc
je
inc
or
push
add
fstpt
xchg
cmpsb
jb
cmpsl
mov
push
mov
sbb
mov
add
lock
es
movsb
or
into
out
push
fdivp
andb
je
add
sarb
sbb
push
add
mov
lea
repz
mov
push
add
xor
test
test
push
or
add
inc
ja
push
mov
and
push
add
push
test
js
cld
mov
fsubrs
loop
mov
jb
add
and
or
adc
call
popf
lret
in
mov
clc
jmp
push
cmp
pop
shrb
cmp
dec
adc
sub
jp
jne
xchg
push
mov
std
subl
mov
stos
pop
cwtl
lods
iret
push
stc
fsts
jne
mov
jmp
hlt
jnp
mov
jge
cmpsl
loopne
mov
je
cmpsb
mov
xor
mov
gs
add
pop
mov
inc
cmp
push
inc
inc
repnz
push
xchg
or
jge
outsl
add
sbb
and
sub
add
pop
adc
aam
pushf
inc
jmp
adc
jmp
iret
mov
fdivrs
insl
add
punpckldq
stos
pop
xchg
mov
mov
dec
out
in
mov
add
adc
push
ja
popa
mov
addr16
data16
psubw
inc
outsl
addb
inc
pop
xchg
add
das
or
pop
dec
sub
jp
daa
mov
lret
sub
lea
and
and
jo
adc
mov
add
mov
dec
lea
jae
add
data16
mov
add
decl
dec
pushf
gs
loop
sti
jns
xorl
lret
and
idivl
cmp
shr
or
outsb
add
mov
add
je
pop
add
pop
cli
push
lret
adc
imul
out
add
mov
xchg
and
mov
push
pop
add
testl
lock
mov
add
push
les
cmpl
mov
or
pop
mov
mov
or
pop
mov
mov
mov
adc
loopne
adc
loopne
adc
add
xchg
lods
lock
mov
mov
push
repz
loopne
push
jo
add
add
mov
popa
add
aam
or
pop
sub
or
push
loopne
mov
jmp
into
test
imul
add
add
test
rcrl
lret
sub
in
out
mov
xchg
xchg
mov
sarl
or
mov
jmp
adc
add
sub
jns
sub
mov
insb
jp
pop
psrlw
fcompl
pop
insl
mov
addr16
add
stos
insl
add
das
dec
repz
jbe
sub
es
movsb
xchg
push
push
popl
pslld
add
vmwrite
ja
jg
jne
add
cmpsl
sub
pop
pop
cli
das
add
cmp
xchg
imul
sbb
sub
add
add
pmuludq
dec
cli
xorb
pusha
cmp
cli
add
out
jo
xor
mov
cmc
xchg
nop
add
pop
dec
sub
dec
es
xchg
aas
addr16
gs
add
ret
and
adc
adc
pop
decl
test
push
add
dec
inc
jae
cmp
test
push
add
mov
out
push
fsubp
ret
add
out
mov
inc
add
loop
sub
lcall
aas
mov
cmp
je
sbb
mov
jp
sub
sti
mov
out
mov
push
orl
out
or
add
in
mov
lahf
xor
popa
mov
test
lods
mov
fisubl
lods
pop
out
add
mov
add
mov
enter
lahf
sub
xchg
mov
cwtl
push
sbb
xor
enter
inc
cmp
cwtl
inc
scas
jnp
nop
into
xor
add
add
iret
or
cli
mov
sbb
dec
scas
add
nop
sti
sbb
jae
nop
lahf
out
cmc
int
test
shl
jo
mov
scas
clc
add
lea
aas
add
dec
jns
cmp
add
arpl
lret
jmp
xor
lods
daa
xchg
testl
inc
in
std
push
aas
add
cltd
pushf
inc
jmp
sbb
popa
bound
test
insl
jmp
add
int
loopne
orl
xor
incl
out
xchg
cmp
adc
leave
hlt
inc
and
adc
add
mov
mov
and
push
lea
pop
jp
ja
mov
loop
pop
mov
mov
or
pushl
jl
mov
je
inc
insb
add
adc
pop
xor
ret
and
mov
lea
cmp
mov
imul
imul
lea
inc
and
nop
scas
xor
mov
int3
aas
incl
das
ds
add
pop
incl
ficompl
adc
in
add
adc
and
mov
push
test
push
jp
mov
rclb
mov
dec
fimuls
xor
imul
pop
dec
inc
dec
add
dec
add
jecxz
inc
jg
adc
fs
or
jg
cltd
cmc
mov
mov
mov
orb
or
add
add
rorl
inc
xchg
inc
or
in
js
scas
mov
cltd
cltd
sarl
test
out
stos
je
iret
mov
or
mov
popf
sahf
lods
add
sarl
add
rol
dec
add
dec
fdivr
in
pop
mov
fdivs
mov
add
jb
cmp
dec
fsubl
jb
in
enter
sub
faddl
sbb
lahf
lret
aad
mov
in
adc
pop
std
or
pop
lds
test
jo
scas
jmp
lea
push
sub
adc
jmp
bound
and
mov
out
mov
mov
out
mov
sbb
pop
std
mov
pop
lea
ret
fdivrp
aaa
incb
lea
jno
scas
pop
scas
aaa
fisubrs
add
sub
lcall
in
add
dec
clc
lods
pop
jmp
or
addr16
add
push
push
add
idivl
data16
mov
pop
push
add
push
icebp
jg
inc
outsl
cmovo
xorl
ret
imul
inc
xchg
mov
jg
popl
call
stos
xor
scas
xlat
mov
mov
jg
idiv
pop
add
cmpl
jbe
xchg
aas
and
filds
add
out
pop
fs
mov
mov
mov
dec
inc
xor
fs
add
lods
sub
push
mov
push
push
popf
and
mov
or
repz
clc
or
in
push
and
in
shr
pop
ja
add
sub
and
mov
add
mov
cmp
jno
cmp
sbb
add
imul
mov
aad
jbe
push
add
mov
incl
lds
les
in
mov
cmpsl
in
fwait
cmpsl
cld
xor
fisubl
test
add
or
gs
mov
gs
mov
fildl
mov
stos
push
pop
jg
jbe
pop
inc
inc
nop
pop
mov
mov
bound
add
clc
iret
xchg
roll
sti
cmpsl
fmull
cmpsl
enter
add
pop
jno
xchg
dec
enter
add
add
push
nop
push
jb
or
cmpsb
int
and
ret
lcall
pop
outsl
push
pop
pop
addr16
cmp
pushf
iret
cmc
dec
mov
mov
inc
outsl
push
insb
add
push
sbb
pushf
mov
dec
add
jae
bound
out
out
in
sti
jmp
inc
jns
lods
xchg
in
popa
xlat
jl
icebp
push
int3
out
mov
xchg
outsb
adc
in
or
scas
xchg
ret
inc
and
lds
aaa
pop
out
mov
push
jp
push
mov
pop
call
adc
aaa
add
sbb
add
ret
mov
pop
call
imul
push
inc
jmp
or
call
rcrb
fisttpll
sbb
test
dec
jbe
xchg
dec
pop
pop
repnz
les
add
pop
cmp
sub
lea
insb
gs
std
mov
mov
push
std
add
jns
mov
xchg
imul
cmp
gs
add
fs
adc
fs
mov
pop
call
or
sub
adc
stc
std
mov
lea
xlat
out
and
xor
dec
or
and
push
and
mov
mov
add
cwtl
or
shlb
xchg
add
and
jnp
fisubl
mov
ja
sbb
lds
dec
xchg
mov
fcmovnb
push
sbb
or
cmova
push
sti
xchg
mov
cmc
bound
inc
stos
xchg
enter
push
adc
mov
std
popf
jae
inc
mov
inc
add
insl
lcall
or
inc
in
add
enter
rorb
mov
push
push
loope
pop
push
outsl
jmp
pop
outsl
cli
insb
dec
jg
sub
dec
in
pop
inc
outsl
cli
pop
leave
cmpsl
xor
mov
add
sbb
pop
or
adc
lea
add
adc
pop
int
loope
jb
arpl
pushf
add
outsb
mov
inc
add
int
fildl
int
arpl
mov
xchg
stos
mov
cltd
xor
lea
cli
dec
push
dec
mov
pop
pop
jb
jne
mov
mov
in
add
xlat
jg
js
repnz
mov
mov
mov
mov
andl
addl
jno
xchg
test
jo
incl
jno
data16
lods
pop
sub
cld
ds
add
mov
ds
pusha
fisubrs
xor
clc
rdpmc
fwait
clc
ljmp
std
enter
add
and
jmp
push
and
and
mov
pop
adc
mov
add
mov
jmp
into
sbb
add
out
jmp
and
jl
pop
pop
or
or
incb
and
ljmp
or
pop
mov
popa
jo
shl
xor
xchg
jb
mov
std
jnp
lock
pop
jge
add
pop
push
push
push
inc
mov
mov
mov
enter
jmp
es
add
dec
cwtl
les
xchg
jp
dec
lahf
cmp
dec
cli
mov
inc
ja
hlt
jne
sbb
pop
rol
fidivs
push
rolb
mov
gs
mov
lods
or
or
add
inc
gs
push
icebp
jg
sbb
add
or
push
icebp
push
fdivp
fs
mov
aas
jmp
int
mov
clc
popa
outsl
into
add
ljmp
lea
pop
in
lret
iret
xchg
out
jbe
mov
cmpsl
xchg
push
add
pop
int
and
addr16
cmp
cmc
add
and
mov
xor
mov
data16
sbb
imul
in
in
pop
call
lret
xchg
push
ficompl
cmpsl
sbb
ljmp
leave
jmp
vcmpneq_oqss
divb
push
mov
in
fimull
push
faddl
jne
add
cmpsl
jbe
add
imul
add
add
pop
or
je
adc
and
mov
inc
add
pusha
push
mov
lret
add
mov
add
cmp
mov
je
in
les
xchg
xchg
jno
pcmpgtd
nop
xchg
fs
add
and
pop
popw
je
ret
test
adc
mov
xchg
cmpsl
add
jne
mov
pop
add
pop
or
jne
mov
cltd
inc
add
je
add
je
push
es
ret
adc
xor
lock
add
and
jle
and
orb
jbe
in
add
or
inc
jl
ds
push
inc
add
adcl
in
xchg
scas
adc
mov
push
nop
stos
mov
jg
xchg
dec
lret
insl
enter
shlb
mov
lods
add
add
mov
adc
jmp
or
cmp
fdivrl
filds
jg
in
jmp
in
add
mov
lret
adc
lea
icebp
data16
aaa
mov
sub
dec
pop
and
push
bound
imul
lea
popa
lea
fisttpl
xchg
cli
mov
cmp
outsl
add
jb
pop
jmp
jg
cli
xchg
xchg
adc
xchg
mov
icebp
cmpsl
mov
aam
mov
add
fs
mov
mov
in
stc
xchg
mov
add
out
std
cmp
push
xchg
mov
ljmp
in
push
in
pop
movlps
add
movl
cmp
inc
add
dec
outsl
and
mov
add
dec
jl
inc
ja
xchg
hlt
mov
inc
push
pop
jne
xchg
pop
add
jmp
sahf
ret
pop
add
in
push
mov
pop
lret
jecxz
mov
je
call
pushf
pop
xchg
mov
cmp
subl
add
adc
mov
jp
pop
std
arpl
jnp
fimuls
data16
mov
push
or
cmp
in
sbb
or
jmp
push
add
ud0
add
in
call
jns
ljmp
adc
in
fisubl
call
mov
push
jbe
dec
jne
add
fldenv
sub
pop
lcall
fstpt
jge
incb
push
mov
bound
pusha
or
in
jle
cmpsl
adc
rorl
inc
add
push
xlat
stos
pushf
lret
in
jle
dec
cmpsl
and
pop
bound
stos
mov
enter
cmc
xchg
adc
lock
push
push
jg
cmpsl
mov
add
out
add
rorl
mov
mov
lock
push
mov
lcall
daa
addl
push
xchg
mov
fs
nop
jg
lea
jg
lea
inc
jmp
jmp
or
lds
clc
cmpsb
popa
xchg
push
sahf
pop
cmpsl
pop
loopne
leave
xor
pop
fstpl
aas
int
mov
push
mov
or
movsb
or
pop
in
or
sti
mov
mov
xchg
xchg
mov
sbb
xor
jp
add
jl
outsl
and
inc
imul
mov
sub
cmp
gs
mov
clc
je
cmpsl
clc
push
mov
adc
pop
dec
or
jl
lea
add
adc
jo
mov
sahf
sti
insb
bound
in
dec
stc
fwait
adc
testb
inc
mov
sahf
insb
fcmovbe
stos
aam
call
lea
movsb
mov
cmpsb
adc
jl
pop
mov
mov
and
dec
imul
int
pop
in
adc
sbb
push
in
popf
es
mov
push
mov
cmp
outsl
push
in
popf
shlb
lea
leave
inc
add
stos
popf
cltd
arpl
ror
test
insl
jge
push
mov
or
fcoml
adc
add
dec
xor
rcll
lea
xor
pusha
jnp
or
pop
std
fildll
lret
icebp
push
and
push
lods
mov
jns
sub
fwait
push
and
xchg
daa
mov
sub
jle
add
mov
and
mov
lods
js
mov
nop
add
adc
adc
mov
jg
cmpsl
add
jo
mov
testl
mov
mov
popf
pmaxub
sbb
jle
cmpsl
add
dec
pop
cli
test
jae
rcrb
adc
mov
mov
and
lea
add
lea
inc
jmp
cmc
dec
mov
shr
cli
shll
or
repnz
insl
fnstcw
mov
hlt
mov
inc
pop
fcmovb
or
cld
adc
orl
dec
jnp
aaa
ja
lods
push
int
fs
cli
dec
push
push
add
push
cld
inc
leave
add
pop
int
repz
cmp
inc
out
pop
xor
orb
inc
outsl
mov
add
sub
mov
clc
sti
ret
fildl
xor
ljmp
sub
mov
xchg
jo
mov
enter
pop
cli
jae
faddp
lea
aas
ljmp
fists
inc
imul
les
inc
jp
pop
mov
add
mov
push
aam
adc
mov
jb
add
push
mov
jbe
std
jnp
adc
cmpl
jp
mov
mov
sahf
test
mov
call
or
stos
push
mov
mov
or
jbe
dec
dec
dec
mov
cli
ljmp
insl
decl
mov
mov
out
clc
in
std
add
pop
std
and
pop
add
jb
shlb
jl
out
pop
ljmp
lods
add
rorl
add
pop
pushf
js
and
ljmp
lods
add
rcll
js
sub
ljmp
addr16
push
icebp
jmp
mov
push
or
push
add
mov
mov
add
sarl
adc
pop
pop
aas
mov
mov
add
or
dec
mov
bound
fsqrt
push
xchg
mov
out
add
jmp
icebp
push
or
mov
jmp
imul
push
xchg
sahf
pop
das
pop
fmuls
inc
jmp
decl
sti
fs
jg
lea
mov
cli
into
aad
in
jmp
pop
push
orb
and
cmpsb
mov
mov
lea
ret
adc
aas
jno
incl
adc
cmpsl
fld
je
loop
cwtl
out
arpl
push
inc
mov
jmp
faddl
loop
stos
std
add
cmp
add
ret
je
mov
lea
lahf
ret
cmp
mov
mov
bnd
aad
adc
jmp
in
jo
lcall
clc
adc
pop
xchg
testl
int3
clc
jmp
mov
inc
add
jo
add
adc
std
test
push
add
pop
std
es
add
jbe
inc
mov
mov
cwtl
addr16
push
mov
cli
addr16
inc
add
xlat
lahf
stc
inc
jns
sub
add
cld
add
std
sbb
lcall
mov
mov
dec
add
into
mov
pop
xlat
and
in
push
jno
add
add
in
add
xor
and
xchg
mov
in
add
sahf
jo
dec
mov
adc
aam
push
add
mov
in
add
ds
rcrb
outsl
xchg
xchg
pop
push
or
mov
arpl
mov
push
loope
add
push
pop
les
loopne
xor
in
jae
stos
and
mov
add
addl
lea
inc
jmp
mov
add
and
xor
inc
int
push
pop
push
scas
mov
mov
dec
aad
mov
aas
div
test
and
lods
and
add
int
popf
mov
add
imul
lea
cli
fs
mov
jecxz
dec
popa
jo
scas
sti
ljmp
push
jmp
ret
inc
out
push
enter
add
movsb
mov
je
clc
adc
inc
fdivrp
inc
mov
sti
jmp
jo
add
leave
add
sbb
fcompl
or
jo
add
fnstsw
add
fcompl
clc
je
add
leave
jns
add
fcompl
shlb
pop
cli
pushl
fldl
pop
mov
flds
daa
mov
hlt
outsl
roll
scas
lret
aas
arpl
xor
int3
mov
xchg
xchg
mov
decl
out
aad
bound
mov
push
push
add
xlat
sub
inc
repnz
mov
jnp
arpl
orl
rorb
pop
or
xchg
push
mov
test
repnz
call
xchg
mov
fstps
mov
inc
push
push
mov
mov
inc
or
cmp
mov
pop
push
add
outsl
xchg
mov
call
sub
mov
mov
pusha
daa
mov
push
pusha
daa
mov
pusha
daa
cmpsb
mov
add
push
pusha
daa
orb
daa
dec
mov
add
add
mov
xlat
loopne
mov
in
xchg
addr16
enter
push
cmc
add
mov
sbb
add
and
jmp
cmc
push
mov
xor
push
cli
jmp
mov
dec
pop
enter
lea
jmp
lcall
adc
add
jb
push
int
mov
jmp
xchg
mov
jmp
cmp
push
rcll
mov
gs
xlat
aas
roll
mov
inc
add
lea
pop
cmp
cmp
inc
lds
shrl
inc
push
push
test
mov
add
lea
imulb
jge
inc
fwait
push
stc
jae
or
out
lea
aad
pop
pop
mov
test
add
mov
push
and
pop
aam
lea
push
inc
lcall
add
adc
add
shll
ds
test
pop
jne
jo
je
add
push
loop
pop
aam
lea
push
lods
cmp
push
das
add
test
stc
push
inc
mov
xor
push
jae
je
push
xchg
and
push
add
jle
dec
orl
into
xor
jmp
add
xchg
into
sub
std
inc
in
repz
bound
push
loope
pop
adc
mov
mov
jecxz
adc
ja
decl
push
icebp
cld
ret
xor
or
mov
fidivrs
in
xchg
sub
xchg
daa
xorb
imul
addb
push
xchg
arpl
sahf
mov
jae
stos
stos
aam
mov
test
inc
push
cmp
pop
cmpsl
hlt
jmp
adc
add
inc
xchg
mov
mov
mov
andl
add
sub
dec
iret
pcmpeqd
lock
mov
add
or
ja
mov
sub
xchg
inc
push
sub
pop
mov
xchg
mov
sub
out
mov
lcall
cli
out
in
mov
rcrl
rcll
xor
and
push
inc
roll
add
sub
mov
mov
pop
lea
mov
add
jne
in
pop
call
pop
push
jmp
add
dec
cli
sbb
inc
pop
adc
dec
mov
loop
decl
pop
rorb
mov
sub
push
cld
ja
add
add
pushf
por
mov
xor
mov
jmp
jns
insl
jo
pop
sbb
add
fmull
jb
push
test
jle
iret
add
mov
stc
cs
lea
push
lea
insl
add
mov
xlat
pusha
xchg
jbe
mov
mov
cwtl
xchg
bound
rorb
pop
inc
rcll
push
mov
stos
fscale
xor
push
test
call
mov
test
bound
stc
and
xchg
ficoms
xor
add
cmc
push
xor
push
jb
dec
jmp
inc
or
sub
sbb
cltd
cmpsb
lds
pop
push
add
and
or
incl
data16
mov
addr16
in
out
cmpb
inc
mov
xor
mov
int
and
cmp
mov
int
mov
insb
insl
pop
mov
in
push
nop
dec
js
xchg
mov
cld
inc
mov
xor
jl
in
out
jp
std
rcll
mov
or
xchg
mov
les
ret
loopne
pop
dec
sarl
jb
or
push
jp
or
int3
lds
stos
popl
cmc
dec
jge
stos
jno
lea
js
push
mov
jg
push
rorb
mov
jae
adc
mov
xor
dec
xchg
mov
jmp
inc
rcrb
pop
xor
add
in
pop
in
in
mov
js
outsl
in
push
out
jmp
mov
loope
adc
dec
inc
jmp
lea
push
shrl
sbbl
xchg
cli
adc
add
xor
add
add
jnp
pop
lcall
sbb
test
fildl
call
in
dec
pop
pop
movsl
mov
push
mov
jl
leave
xor
leave
add
mov
stos
push
add
daa
or
push
je
adc
daa
mov
jmp
outsb
fs
mov
leave
ret
mov
jmp
insb
mov
or
or
add
stos
xchg
int3
add
insl
arpl
mov
dec
xorl
mov
cltd
sub
ss
inc
adc
add
call
xor
into
dec
test
cli
jae
inc
xchg
aas
js
adc
and
or
add
jae
and
cmp
sbb
add
adc
pop
add
xchg
xor
add
xchg
ffree
cmpsl
nop
push
fldenv
jmp
addr16
mov
iret
inc
mov
inc
mov
mov
inc
mov
inc
mov
inc
mov
fiaddl
rolb
cwtl
lret
push
incl
cli
inc
mov
ljmp
xlat
inc
mov
sub
loopne
push
lea
mov
out
sbb
loop
xor
arpl
pop
mov
mov
outsb
xchg
icebp
nop
add
iret
pop
fnstsw
int3
add
stc
dec
or
mov
jmp
stc
movsl
jns
insb
icebp
outsl
sbb
outsl
adc
mov
sub
lea
enter
lret
or
cwtl
mov
cmp
cmc
movsl
adc
int
cld
orl
aas
int3
inc
popa
xchg
orl
add
push
or
icebp
mov
cs
mov
lcall
lret
add
rolb
add
testl
jb
aad
lock
xchg
bound
jge
out
add
and
aas
and
mov
pop
mov
jbe
jo
bound
scas
add
xor
push
fwait
aad
adcb
repnz
rolb
fsubl
pushf
ss
rcrl
cli
insl
adc
add
icebp
push
cli
bound
dec
scas
add
xor
add
fs
arpl
lcall
sahf
test
jbe
stc
decl
inc
mov
test
xorl
pop
aaa
rorb
jo
mov
iret
adc
inc
add
or
add
enter
xor
subl
push
std
jnp
hlt
aas
mov
dec
cli
adc
adc
xor
jae
add
adc
mov
sub
lahf
les
inc
leave
inc
or
pop
loopne
push
mov
fwait
add
and
sub
cmp
stos
mov
loopne
enter
add
mov
mov
js
cmp
pop
inc
xchg
mov
mov
mov
sub
mov
push
adc
mov
adcb
fildl
in
add
cmp
insb
mov
outsl
sbb
adc
or
pop
jo
inc
xchg
mov
mov
jbe
mov
mov
into
addl
clc
cmp
out
inc
outsl
ljmp
pop
les
ficoms
cli
jl
mov
inc
mov
push
flds
out
pmaxub
ret
cmp
jp
mov
insb
out
push
mov
lret
outsb
mov
loop
cmc
mov
mov
or
js
or
jne
xchg
ja
mov
jae
xor
mov
or
mov
test
mov
cmc
cld
push
lea
divl
mov
xchg
ror
aam
add
in
push
in
or
pop
outsl
add
fs
movb
pop
ret
push
push
mov
test
pop
mov
clc
jne
or
jne
or
js
mov
ja
or
and
add
xor
inc
dec
dec
out
xor
scas
mov
jge
out
jae
scas
shll
lods
aad
bound
dec
add
stc
push
and
fildll
std
test
cwtl
and
or
inc
lea
xor
cmp
or
mov
aad
mov
add
xor
es
out
ret
gs
push
add
cmp
mov
leave
mov
testl
jl
cmp
cmp
cmp
mov
xchg
fxch
dec
mov
rorb
xor
xchg
add
dec
addr16
mov
sti
std
shll
std
xchg
addr16
inc
dec
mov
clc
daa
add
fdivrs
inc
mov
hlt
clc
in
push
push
push
sub
test
out
movsb
inc
out
loope
xor
sub
lahf
jle
fdivs
adc
adc
mov
pusha
repnz
sbb
add
lret
ljmp
psubsw
pop
in
push
dec
outsl
cli
arpl
mov
bound
rorb
jmp
out
ss
xchg
mov
fwait
rcll
outsl
fiaddl
add
js
add
dec
jl
and
add
add
xor
test
and
clc
decl
ret
into
das
jbe
je
add
imulb
push
add
xchg
shlb
xchg
pop
test
ds
in
add
xor
int3
xchg
test
rolb
test
add
add
fwait
ret
test
dec
clc
lcall
add
mov
ds
inc
mov
add
rorb
pop
or
adc
push
add
add
pop
cli
les
cmpsl
mov
mov
xor
into
mov
adc
push
fs
mov
xor
testl
sub
or
testl
rorl
daa
pop
or
push
add
mov
jnp
xchg
jae
add
push
cs
cmp
xor
mov
fdivs
test
jbe
and
cmp
gs
adc
subb
mov
push
mov
sub
loopne
mov
xchg
insl
fisttpll
insb
pop
fsubl
or
or
xor
or
mov
addr16
dec
dec
pop
inc
add
test
aad
insl
mov
push
leave
int
dec
inc
mov
add
pop
iret
aas
push
push
lcall
push
cmp
int
roll
mov
das
push
mov
int
push
jmp
aas
xchg
repz
mov
mov
or
jmp
and
fwait
mov
xchg
add
push
or
inc
cmp
add
jg
adc
inc
clc
jmp
or
je
mov
push
pop
cld
arpl
add
jl
in
and
xchg
or
xor
jnp
je
or
pop
inc
clc
jmp
pop
jbe
cmp
dec
lea
aaa
dec
push
imul
jmp
dec
cli
incl
mov
lea
jle
jne
jge
lcall
mov
push
ret
inc
pop
ret
mov
ja
mov
cmp
std
jecxz
xor
mov
sub
adc
int3
pop
dec
movsl
fisttpl
add
add
xor
jmp
mov
mov
xchg
add
add
pushf
xchg
incb
cltd
js
adc
push
add
into
mov
inc
and
adc
push
add
pop
lret
std
mov
dec
lret
std
sub
cmp
and
pusha
scas
xor
dec
dec
mov
outsl
cld
jg
rcr
cli
outsl
sarb
pop
stos
ficompl
xor
pop
inc
test
push
cmp
inc
or
mov
rcrb
lcall
in
ss
enter
mov
cwtl
clc
movsl
add
jmp
add
fcomps
sti
ficoml
ss
push
pop
fnstcw
nop
insb
fldl
mov
add
enter
and
or
bound
icebp
and
mov
mov
scas
xchg
sbb
icebp
out
inc
mov
jp
aaa
idiv
push
dec
mov
movsl
mov
inc
add
mov
jg
pop
cmp
aas
leave
mov
push
jb
and
add
xor
jge
add
mov
hlt
or
mov
sbb
or
add
sbbl
adc
jo
mov
pop
pop
xchg
addr16
pop
mov
aas
les
ja
dec
and
mov
and
mov
and
jnp
je
aas
loop
ret
lods
popw
or
pop
adc
dec
outsl
and
push
adc
mov
inc
jl
push
aam
push
push
or
mov
push
lock
jmp
adc
sbb
outsl
xor
mov
jmp
adc
std
push
and
lahf
sub
fwait
js
aas
mov
push
push
imul
xchg
popl
mov
je
mov
pop
jecxz
les
xlat
bound
add
test
sub
int
push
movsb
and
push
dec
push
add
insb
ljmp
sub
clc
jmp
cmp
adc
jns
inc
sbb
jnp
mov
pop
rcl
jp
addr16
sbb
jns
add
mov
add
stos
fiadds
add
jle
rcr
add
mov
hlt
les
fiadds
push
lods
dec
lcall
dec
xchg
sti
ljmp
mov
sub
les
cltd
lods
add
loopne
pop
add
subb
insb
add
xor
fdivl
inc
jmp
orl
add
leave
fmuls
in
mov
scas
in
push
adc
add
add
cli
cld
aad
inc
jmp
lea
push
orl
imul
lret
add
clc
dec
dec
mov
push
push
push
jmp
inc
outsl
stos
or
or
clc
push
int
mov
xor
add
xchg
add
or
add
gs
addr16
add
shlb
mov
or
dec
cwtl
inc
xorl
jns
xor
scas
pop
leave
xor
xchg
repz
std
push
mov
or
adc
popl
lea
aam
push
dec
cmc
add
aaa
add
incl
cmp
adc
cmc
testl
cli
pushl
addr16
dec
mov
add
add
mov
sub
push
mov
cmp
or
cmpsl
cmp
inc
les
shrb
int
fstl
je
sahf
call
lcall
push
dec
sbbl
in
pop
push
in
pushl
lock
fcomps
pop
mov
divb
push
jnp
mov
rcrb
out
or
jecxz
jae
mov
ret
dec
shrl
mov
xchg
mov
dec
mov
or
xorl
cmp
dec
xchg
mov
lea
add
rolb
fcmovnu
inc
mov
sar
cmp
adc
ja
inc
adc
orb
gs
insl
leave
mov
je
rol
pop
add
add
test
xor
scas
mov
in
add
mov
mov
or
pop
cmc
and
or
popf
popf
add
lds
add
cmp
faddl
stc
popf
inc
jmp
icebp
mov
insb
addr16
jmp
mov
cld
fsubrs
cli
insl
lret
jb
fisttpl
frstor
or
adc
jge
add
jge
inc
int
mov
xchg
pop
cs
jbe
mov
pop
cmp
cli
je
addr16
lea
cmp
int
addb
jb
push
enter
aaa
mov
add
mov
push
test
das
adc
mov
loop
adc
out
ret
pop
fcoms
ret
pop
cmp
pop
ret
add
les
add
adc
mov
fisttpl
das
out
inc
add
clc
push
jae
adc
sub
inc
or
xchg
clc
jbe
out
xor
jmp
adc
mov
add
mov
cltd
rol
push
lods
testl
add
add
push
mov
mov
inc
mov
mov
clc
add
and
movb
add
stos
dec
aas
adc
sbb
mov
cld
popa
adc
inc
sub
adc
inc
add
xlat
push
mov
cmp
or
ret
push
or
push
add
adc
jmp
cmp
loope
jae
mov
add
scas
mov
popf
xchg
test
pop
inc
mov
aad
add
fildl
xor
add
dec
orb
xor
xor
mov
and
mov
cs
adc
xchg
add
mov
cmp
mov
lods
ss
pop
cmp
in
mov
in
adcb
pop
movl
scas
mov
push
adc
mov
mov
lea
jo
adc
notl
fwait
adc
mov
xchg
movsb
cmp
mov
mov
ljmp
mov
leave
out
je
add
adc
and
xchg
aas
cmp
pop
scas
cwtl
mov
aad
pop
fstl
ds
push
mov
cli
pushl
pop
fxch
mov
fisttps
dec
or
jg
adc
mov
ret
rol
or
fisttpl
xchg
add
out
insl
add
aam
mov
add
orb
adc
test
jl
jne
lock
and
jne
cmpb
fimull
aam
cmp
inc
vmwrite
shrb
ljmp
std
ret
pop
out
inc
adc
push
aam
push
test
aas
and
mov
outsb
and
sbb
push
faddl
incl
decl
sbb
or
sahf
je
orb
mov
pop
push
orl
mov
mov
add
mov
mov
mov
je
mov
and
add
std
jp
fildll
out
xor
pop
add
dec
xor
rcrb
inc
jb
mov
xchg
movsl
cmp
ljmp
and
inc
mov
pop
push
dec
sbb
push
add
popf
ljmp
call
les
fimull
add
lahf
enter
push
add
pop
push
add
mov
lcall
adc
push
inc
lcall
call
adc
fildll
pop
push
mov
dec
pop
aaa
mov
mov
add
mov
mov
stos
lahf
cld
mov
xchg
mov
das
mov
mov
adc
inc
jmp
js
cli
adc
adc
add
mov
or
sub
xchg
push
inc
add
add
adc
dec
adc
mov
lret
rol
pusha
leave
outsl
sqrtps
inc
add
add
jno
or
mov
jmp
lea
lret
insb
les
add
outsl
pop
jb
outsl
xor
outsl
daa
bound
sub
sub
sysexit
outsl
xor
cmp
popa
pop
dec
mov
pop
dec
cmp
inc
jbe
xchg
mov
push
call
mov
dec
outsl
xor
mov
add
jmp
mov
loop
rorl
sub
das
mov
add
pop
shll
jmp
insb
lret
pop
and
adc
push
push
pop
mov
notl
addl
pop
xor
lods
xor
test
and
orl
and
lcall
push
stos
inc
xchg
push
xchg
pop
out
int
dec
inc
mov
shlb
cmc
and
inc
fisubl
aas
pop
std
jp
repz
pop
call
cwtl
repz
jne
and
cli
add
add
add
adc
imul
add
pop
pop
inc
sti
ret
sbb
mov
mov
stos
mov
rolb
xor
fimull
adc
lcall
mov
inc
adc
or
adc
ss
leave
add
mov
movsb
sub
mov
mov
stos
lds
pop
dec
stos
pop
gs
faddl
pop
rclb
mov
in
mov
lahf
xor
xlat
leave
and
jne
jb
jne
push
add
push
cli
pop
scas
jno
push
scas
jno
mov
outsl
daa
pop
sub
imul
adc
ret
addr16
cmpl
cli
adc
imul
jbe
adc
gs
mov
add
nop
dec
outsl
or
add
fwait
mov
mov
cmp
pop
std
sbb
outsl
jmp
shll
out
add
lahf
stos
fildl
cmpsl
mov
pop
ret
push
push
pop
movsb
adc
xchg
fildl
ja
fildl
push
cli
cli
dec
outsl
and
pop
pop
and
imul
cwtl
fsubrs
pop
movsl
lret
push
add
arpl
and
arpl
and
pop
subl
jns
jl
xor
jmp
es
push
arpl
and
arpl
and
inc
mov
jnp
outsl
sub
cmp
out
ret
je
or
add
xchg
cmp
cltd
mov
cmp
out
fldl
add
gs
call
xor
inc
add
in
push
lret
add
daa
sahf
out
xor
mov
roll
jp
fnstcw
sbb
sahf
je
mov
mov
jae
cmpsl
mov
push
popf
std
pushf
lods
int
pusha
jne
mov
mov
clc
or
nop
idiv
cmp
leave
inc
inc
mov
jl
addr16
in
fs
sahf
push
add
cmpsb
mov
sub
dec
push
std
jmp
pop
inc
pop
leave
hlt
sbb
hlt
and
add
xchg
add
loop
flds
pop
iret
enter
adc
ss
push
add
in
add
push
xchg
push
or
in
dec
addr16
fdivs
adc
je
and
pop
shll
add
mov
push
bound
mov
testb
cmp
int3
add
mov
and
xor
out
and
jb
push
push
aas
pop
int3
bound
mov
or
pop
outsl
aam
sbb
mov
shlb
fs
lds
push
jmp
sub
cli
jae
adc
addl
lcall
jb
xor
push
pop
rcrl
les
insb
fidivs
jmp
test
imul
mov
mov
jl
mov
mov
add
test
lcall
dec
lds
icebp
outsb
and
sbb
cmp
or
idiv
and
xor
xor
mov
ljmp
add
pop
out
xor
movsb
mov
pop
mov
add
cmpb
add
lock
push
add
test
std
jnp
adc
mov
xchg
add
cmpsl
dec
and
loop
lret
lahf
jns
xor
add
push
xchg
xor
shll
mov
call
adc
jge
push
mov
push
mov
orl
fs
push
or
dec
lcall
dec
pop
mov
out
xor
sbb
push
pusha
ret
jp
inc
clc
adc
lods
add
mov
adc
add
mov
jns
adc
es
jne
mov
imul
mov
sub
xchg
add
mov
xlat
addr16
in
cmp
xchg
adc
push
or
cmp
pop
lds
or
push
xor
das
cld
xor
add
adc
push
mov
add
push
push
mov
or
or
inc
xlat
cltd
adc
lea
shll
das
adc
add
adc
je
adc
adc
adc
xchg
testb
lods
insl
mov
jmp
mov
call
mov
and
adc
jmp
lret
psubd
add
test
dec
mov
add
mov
push
clc
jle
das
mov
mov
adc
mov
mov
jmp
mov
adc
cmp
pop
pop
lock
push
stc
out
adc
mov
mov
adc
xchg
cli
pop
rcrl
incl
inc
pop
pop
add
fists
add
addr16
outsb
and
adc
jmp
mov
lods
std
dec
es
push
adc
es
add
cmpsl
mov
push
popa
cltd
mov
adc
cli
jo
icebp
xor
divb
leave
or
cmp
mov
push
push
pop
jge
cld
lahf
repnz
add
inc
sbb
cmp
movl
jnp
push
imul
aad
std
imul
movb
or
cmp
stos
cmp
addl
pop
subl
fwait
lret
in
js
cmp
stos
add
add
cltd
in
pusha
insl
jne
add
jne
stos
jge
fldl
push
mov
js
cmp
stos
mov
stc
mov
sbb
test
sbb
imul
mov
enter
fdivs
outsl
call
test
outsb
xchg
jmp
pop
sbb
insl
dec
lahf
or
jp
jmp
and
mov
add
sbb
arpl
mov
adcb
fildl
sub
sbb
jns
dec
call
idivb
lods
lds
push
mov
in
adcl
popa
pop
icebp
cmpsb
or
jmp
fucom
mov
pop
add
insl
clc
mov
cli
add
ret
jne
jns
push
add
sub
clc
adc
mov
mov
or
int
xchg
mov
add
lods
mov
testl
sub
ret
jmp
mov
add
out
pop
mov
mov
add
ljmp
imul
xor
cwtl
xchg
out
mov
add
fisubrl
rorl
mov
mov
es
add
pop
call
cmp
xor
loop
jne
scas
test
pop
enter
mov
push
mov
movsl
mov
add
and
add
stos
inc
and
inc
push
xor
mov
or
test
and
pop
fcompp
lar
out
inc
adc
xchg
jns
mov
xor
adc
mov
clc
jno
jmp
mov
push
loopne
add
or
loop
add
shrd
mov
int3
push
pop
enter
mov
ljmp
mov
inc
add
int3
in
push
add
sub
orb
sti
mov
jne
pop
mov
in
push
or
jl
pop
jae
mov
out
cmpsb
and
cmp
push
pusha
ret
sbb
test
jb
pop
mov
add
loope
mov
jno
cmc
push
lods
call
movb
push
cli
jae
test
jmp
aas
pop
aaa
xlat
dec
mov
js
mov
jo
or
fdivp
adc
add
xchg
jmp
xchg
mov
fsubl
sbb
cmpsb
mov
add
pusha
pop
add
adc
daa
cmpsl
mov
inc
jae
jmp
xor
icebp
je
or
add
jle
jbe
xor
fcoml
mov
mov
mov
cmp
xchg
push
rorb
add
scas
push
pop
adcl
dec
or
imul
mov
idivl
test
and
lock
notl
ljmp
fs
jo
repz
mov
push
mov
add
push
xor
in
aas
pop
pusha
cli
call
imul
xchg
pop
add
sbb
sub
xchg
js
daa
cmp
mov
push
add
loopne
decl
mov
lcall
rcrb
icebp
or
arpl
xor
stos
aaa
jae
lret
inc
and
and
subl
enter
icebp
pop
mov
pop
les
fsave
xchg
pop
ja
sbb
add
lea
hlt
cmp
mov
rorl
out
xchg
ficompl
xchg
sarb
dec
xchg
xor
cs
add
dec
adc
sub
test
add
push
dec
icebp
repz
cs
leave
mov
cmp
jo
pop
inc
inc
xchg
in
xchg
mov
xor
add
int
or
or
mov
push
dec
outsl
mov
xchg
dec
outsl
mov
and
les
and
push
fs
adc
add
mov
pop
ret
xchg
xor
add
cmp
call
divb
push
push
adc
scas
lahf
fcom
ficoms
pop
jmp
into
aam
aam
popa
pusha
out
sbb
movsb
or
roll
sub
mov
jnp
add
or
je
push
push
xor
push
test
mov
fiadds
jne
fs
push
push
push
in
adc
push
sti
cmp
sbb
insl
jl
shl
roll
pop
mov
xadd
out
orl
enter
mov
add
and
jl
icebp
jl
pop
mov
ret
fs
cli
imul
cmp
cmp
in
aaa
xchg
or
arpl
cmp
xor
into
add
jg
push
add
push
add
and
push
adc
and
mov
xorl
subl
lds
dec
push
add
cmp
add
stos
cmp
xor
testb
push
xor
pop
jmp
pop
jae
inc
stos
inc
decl
stos
mov
jge
lock
mov
add
cmp
inc
mov
sub
mov
add
sub
cwtl
jg
les
mov
cmp
dec
call
or
mov
hlt
xor
push
out
pop
jp
in
fcmove
loopnew
cli
dec
scas
pop
mov
ljmp
push
imull
add
or
adcl
add
fdivrl
xchg
movl
outsb
divb
pop
lea
ret
aad
mov
cld
jge
inc
jmp
adc
pop
sub
les
test
cmc
pop
pop
cli
mov
mov
fimull
xchg
rorb
test
xchg
or
mulb
lea
cltd
adc
xchg
ss
addb
stc
push
mov
add
push
adc
fimull
call
cwtl
orb
repnz
jp
lea
bound
addb
jbe
mov
and
lret
xchg
repnz
data16
pusha
add
cmp
test
sti
sbb
mov
imul
mov
add
jmp
decl
adc
and
pop
push
dec
push
push
fdivr
insb
push
jo
add
pop
clc
adc
mov
jne
data16
cs
inc
push
insl
adc
jle
enter
decl
and
lcall
icebp
ja
incl
sub
aas
mov
push
adc
dec
and
std
mov
mov
aaa
pop
int
stos
or
aad
ljmp
cli
dec
adc
gs
and
and
add
fwait
cmp
sub
incl
loopne
sbb
and
inc
cli
cmp
push
mov
loopnew
mov
add
mov
imul
pop
and
icebp
pop
frstor
cld
sub
mov
jmp
mov
sbb
xor
out
jns
cmc
sarb
in
push
sahf
push
cmp
addr16
xor
shlb
add
adc
fistpll
dec
in
xchg
dec
xorb
repz
mov
add
popl
lea
sbb
pusha
mov
xchg
adc
push
dec
jbe
mov
or
jle
lsl
or
add
mov
fst
adc
sub
lea
sahf
xchg
mov
cli
ss
adc
loope
ss
pop
popa
push
fs
or
push
and
push
push
jle
pop
add
jb
lea
inc
jmp
xchg
rol
fisttpll
fwait
cmc
mov
pop
mov
dec
jo
call
dec
test
mov
mov
in
popf
mov
jne
mov
clc
subl
adc
push
sqrtps
lea
repnz
jns
mov
clc
adc
add
rorb
add
pop
ljmp
push
call
mov
cmp
sbb
push
push
adc
repnz
pop
pop
add
and
push
adc
loopne
ja
daa
sbb
dec
out
push
cltd
scas
dec
mov
incb
or
or
pusha
sbb
outsl
lcall
mov
mov
insl
mov
push
inc
sub
dec
repnz
sbb
repnz
std
dec
repnz
mov
test
add
aaa
jae
fwait
inc
mov
js
repnz
add
pop
fwait
inc
mov
pop
testb
add
lret
dec
or
je
iret
mov
lods
out
in
add
add
lar
sub
add
dec
in
lods
pop
mov
add
add
push
or
sub
mov
pop
xchg
and
push
or
add
mov
rorb
ljmp
shl
mov
rolb
add
dec
jo
dec
in
xorb
jl
mov
add
int
jo
dec
add
hlt
roll
xchg
cli
sub
int
pusha
clc
dec
add
in
xchg
mov
cli
sub
cmp
add
lcall
mov
inc
add
dec
add
roll
add
sbb
mov
or
xor
lea
in
jmp
lcall
sub
add
xchg
movsb
in
push
fisttps
mov
mov
cmp
leave
adc
adc
mov
dec
add
mov
pushl
add
cwtl
pop
push
mov
add
out
movsb
mov
dec
add
add
and
inc
mov
mov
pop
in
rol
idivb
mov
fstps
por
into
adc
xacquire
es
add
cld
mov
or
imul
repnz
inc
mov
daa
std
mov
movsb
pop
mov
mov
rcrb
insl
adc
repnz
pop
mov
call
add
into
adc
xchg
es
add
ja
std
adc
imul
repnz
inc
mov
daa
std
fwait
mov
aas
mov
mov
mov
inc
std
fisubrs
dec
in
add
mov
test
fadds
lret
jl
in
lea
mov
imul
lods
sbb
sahf
dec
in
add
xchg
xchg
hlt
int
jmp
and
inc
xchg
jl
add
sahf
xor
mov
jp
adc
arpl
xor
popf
xor
cltd
mov
pop
mov
inc
lret
pop
xchg
sub
icebp
pop
test
in
inc
mov
ss
sbb
stos
lea
xor
dec
add
inc
stc
dec
lods
inc
or
add
lret
lds
jbe
add
lea
push
mov
cli
sbb
nop
aas
jmp
int
mov
lea
jmp
jnp
cli
cld
jno
inc
jmp
pop
add
mov
outsl
int
adc
jle
cmpsl
pop
xor
inc
ret
js
jmp
pop
mov
addl
add
adc
add
leave
or
roll
add
mov
lcall
jbe
mov
stc
incl
sub
add
roll
cwtl
loopne
add
fcompl
dec
xchg
ja
mov
jns
adc
mov
repz
push
icebp
ret
negb
outsl
and
orb
add
jae
add
add
addl
jle
xchg
inc
jns
lcall
adc
popf
and
add
out
dec
call
jns
add
testl
std
loop
cmc
out
loop
add
cld
fwait
test
add
andb
cli
push
and
mov
push
add
int3
pop
int3
ljmp
lcall
cld
pop
into
icebp
out
addl
rolb
add
push
popa
fisttps
xchg
popf
jl
repz
mov
mov
cli
cmpsl
hlt
jl
repz
push
pop
repz
mov
mov
add
cmpsl
call
xchg
in
add
xchg
push
mov
xor
lret
push
or
rcrl
adcl
push
push
lock
into
add
add
pop
jmp
mov
adc
lea
js
outsb
or
repnz
jmp
mov
hlt
sbb
loope
lds
or
jmp
mov
dec
hlt
decl
mov
sahf
xor
push
mov
sub
jmp
add
cmpsl
adc
pop
out
add
mov
pop
mov
mov
add
subl
pop
nop
push
call
cmp
outsb
pop
add
add
cmpsl
mov
clc
std
dec
fisubs
arpl
add
xchg
add
or
add
mov
push
and
mov
test
repz
aaa
or
fcomi
sbb
pushl
in
push
jns
outsl
and
movq
and
lock
xor
mov
pop
int3
testl
lds
loopne
call
add
hlt
jp
jb
pushf
push
push
repz
out
inc
add
fcmovu
jns
subl
loop
or
cmp
pop
jle
mov
jmp
sbb
mov
lret
icebp
sub
dec
add
ja
add
mov
add
mov
add
xchg
add
stos
addr16
pop
sahf
cmpsl
add
cld
jmp
pushf
mov
fdivs
mov
sbb
in
sbb
mov
add
xchg
add
mov
roll
adc
sbb
inc
in
mov
adc
addl
call
je
mov
ret
add
lea
add
repnz
mov
xchg
fisttps
movups
mov
add
in
jmp
cmp
push
mov
out
cmp
ret
aam
adc
or
mov
movb
lea
sub
mov
nop
pop
cli
popf
push
fwait
mov
or
jmp
pop
add
add
ja
xor
cli
pop
inc
clc
inc
mov
cmp
or
pushf
xor
add
testb
add
adc
mov
rorl
add
outsl
add
je
or
je
adc
mov
mov
imul
or
testl
out
cmpsl
mov
mov
fimull
pushl
adc
pop
jl
mov
test
rorl
add
push
mov
shll
mov
xchg
je
gs
std
add
mov
jle
in
or
in
add
xchg
repz
jl
mov
pop
add
scas
mov
mov
sub
dec
in
sarb
int3
jb
fdivrp
mov
pop
out
and
js
sbb
mov
ljmp
or
pop
add
mov
add
sbb
mov
cmp
jle
orb
stc
push
sub
dec
in
dec
movsl
stos
pcmpeqw
icebp
leave
jg
jl
xchg
jp
test
add
inc
push
push
inc
in
aam
dec
jne
dec
add
push
pop
test
jg
jl
push
lahf
mov
mov
test
mov
xchg
in
jge
xchg
add
popf
lods
add
xchg
adc
jle
jg
rorb
xor
mov
add
inc
clc
dec
bound
lret
out
add
inc
call
cmp
or
loop
fisttpl
fs
xchg
cwtl
fs
fdivl
pop
aaa
int
aad
loopne
add
xchg
mov
pop
int
mov
addl
popa
pop
idiv
mov
les
outsb
aad
jl
bound
hlt
mull
adc
cli
sbb
in
pcmpgtb
add
test
push
add
test
inc
cmp
mov
jmp
fucomi
or
xchg
or
outsl
and
jb
and
or
inc
and
adc
add
push
les
sub
jmp
push
xchg
adc
pop
or
xchg
adc
pop
or
pop
stc
incl
push
mov
dec
adc
push
or
cmpsl
mov
jmp
or
cli
jmp
ret
je
icebp
jp
xchg
call
je
xor
dec
popa
mov
in
sahf
loop
add
mov
loope
je
fcomps
push
stos
sbb
push
mov
pop
xchg
lahf
fwait
xor
test
stos
jp
mov
add
mov
add
idiv
mov
in
lcall
mov
call
ds
inc
and
adc
xchg
add
or
cwtl
adc
hlt
notb
jg
in
js
pop
test
jns
cld
pminsw
inc
loopne
mov
add
sbb
fmull
or
fwait
add
rolb
sbb
pop
pop
sbb
dec
pop
mov
add
int3
adc
or
or
pop
ja
test
jbe
mov
mov
or
mov
inc
mov
xchg
call
iret
adc
lea
mov
out
add
jno
push
lcall
push
notb
idiv
jb
or
inc
or
stc
push
sub
or
push
mov
lcall
jb
fwait
mov
or
dec
mov
push
pop
mov
pop
cli
faddl
inc
jmp
or
adc
stc
fcoml
fwait
inc
add
fcoml
mov
jl
data16
add
arpl
add
addr16
add
les
jnp
in
aas
mov
add
mov
repz
das
jo
add
aam
stc
cmp
rol
mov
sbbl
testl
inc
add
mov
push
mov
repz
mov
push
mov
and
push
mov
xchg
adc
in
rolb
add
jge
call
or
decl
out
cmp
fists
xor
fdivr
fwait
call
aas
jle
inc
ds
fidivrl
adc
sub
xlat
inc
mov
jl
pop
adc
sbb
std
fnstenv
add
inc
pop
aas
or
mov
push
inc
dec
push
lds
sub
inc
push
push
xor
fwait
push
addl
add
popf
adc
ret
imul
xchg
mov
in
add
test
cmp
jae
xchg
push
lods
divl
popf
sub
cmpsb
sarl
les
repnz
and
out
icebp
add
or
mov
in
jmp
dec
hlt
addb
add
xchg
jae
jmp
data16
shlb
mov
int3
orb
adcl
outsl
fnstenv
inc
in
mov
jmp
in
insb
call
push
mov
fdivr
pushf
inc
jmp
dec
push
aaa
adc
mov
pop
xchg
add
lea
fadd
cltd
inc
jmp
add
mov
enter
cmpsb
jg
add
nop
add
call
sub
loope
leave
add
pushl
push
cmpsl
mov
jnp
add
in
lds
xor
add
out
getsec
push
mov
jecxz
ja
mov
add
incl
aaa
mov
add
add
scas
adc
testl
add
insb
enter
push
add
mov
roll
in
cld
mov
jns
pop
and
in
mov
movsb
incl
cmp
add
hlt
jle
push
mov
iret
mov
hlt
decl
and
push
icebp
mov
mov
in
cmpsb
enter
sbb
push
sarb
or
inc
iret
in
int
decl
mov
or
mov
in
xor
mov
fimull
mov
inc
add
clc
mov
pop
pop
inc
hlt
xorb
btr
stos
or
or
cmp
insb
jo
sbbb
loop
mov
stos
add
popf
pop
faddp
jno
xor
inc
pushl
clc
lods
fwait
arpl
lods
xchg
imul
in
add
mov
mov
outsl
daa
outsb
or
add
in
pop
inc
jge
sbb
cmpsl
adc
dec
cmpsl
add
gs
sbb
lea
outsl
int
pop
ret
adc
jne
add
add
test
sbb
mov
add
push
inc
or
add
test
daa
dec
cwtl
add
add
jb
test
gs
test
arpl
and
add
dec
in
clc
mov
shrl
mov
ja
jb
jecxz
inc
xchg
mov
call
add
dec
pop
ret
push
mov
cld
inc
or
fiaddl
orl
add
sub
cld
jmp
std
cmp
jl
xchg
test
cli
push
mov
orl
sub
mov
mov
clc
test
xchg
xor
dec
pop
lds
addr16
movsl
xchg
add
jae
in
pop
ret
add
dec
insl
or
int3
fstl
sbb
mov
pop
rcrb
lahf
push
std
mov
jne
or
mov
insl
test
into
mov
dec
inc
ja
iret
out
jl
leave
jo
je
pop
cld
add
mov
push
leave
mov
or
mov
xchg
xchg
dec
adc
cmp
sar
jecxz
cli
xor
cli
clc
lds
mov
jmp
mov
outsl
add
lock
cld
xchg
sub
hlt
in
not
xor
push
and
insl
inc
jle
lods
lock
push
jmp
dec
neg
sti
mov
repnz
jmp
fs
inc
pusha
hlt
mov
sbb
mov
test
jmp
nop
ljmp
add
or
pop
into
les
mov
into
push
idivl
mov
xchg
jnp
repz
iret
popa
jbe
lea
sub
jmp
push
jns
mov
insb
push
xchg
xchg
jecxz
imul
jmp
xor
lea
xchg
or
pop
and
into
lea
pop
mov
cmp
sbb
aad
repz
cmc
jb
out
xchg
cltd
dec
add
xchg
mov
mov
aam
out
push
pop
push
imul
jmp
outsl
adc
ljmp
mov
mov
fwait
jo
add
imul
in
add
jno
add
ja
mov
daa
mov
add
out
or
je
or
mov
mov
in
in
pop
insb
push
jmp
xor
pop
sub
pop
add
jmp
adc
iret
imul
pop
add
push
clc
fwait
lret
stc
sbbb
test
sbbl
ret
add
push
les
stc
xorb
inc
add
outsl
sbb
hlt
add
cmc
aad
fwait
mov
inc
mov
adc
add
jg
loopne
add
mov
mov
ret
cmp
mov
notb
repz
jo
je
je
mov
shl
cltd
adc
loope
add
hlt
enter
adc
mov
or
hlt
add
mov
sbb
popa
icebp
add
and
fwait
int
sbb
and
stos
jmp
pop
ret
lcall
test
mov
or
mov
push
push
pushf
aam
out
inc
mov
mov
add
lret
testb
aad
fsubrs
in
push
cltd
in
femms
jns
add
mov
jae
dec
in
je
xlat
ffree
jno
sub
and
cmp
push
jg
mov
in
jge
mov
cli
push
mov
stc
out
push
inc
push
out
and
pop
push
xor
mov
out
iret
add
pmulhw
lea
mov
xchg
mov
xchg
lahf
jno
xor
or
mov
leave
and
les
adc
add
dec
pop
cmc
and
call
add
sti
add
pop
clc
psllq
add
ja
enter
cli
fmull
mov
jo
ljmp
pop
clc
btr
add
aaa
adc
call
push
mov
filds
mull
out
outsl
add
cmc
pushf
aad
repz
lds
mov
inc
clc
xchg
mov
jg
mov
pop
clc
add
fs
je
fs
dec
inc
clc
cmp
insl
add
mov
push
call
or
sub
or
add
stos
jbe
xchg
rolb
mov
call
add
loop
adcl
arpl
adc
call
adc
repz
pop
adc
hlt
fimull
psubw
add
or
mov
hlt
orb
and
hlt
add
xor
add
in
ss
mov
add
adc
or
inc
or
loope
add
pop
fistps
fbld
jb
push
mov
push
rolb
pop
xor
or
lock
loop
sbb
adc
jmp
mov
adc
push
loope
add
ja
adc
mov
add
or
mov
adc
mov
lea
mov
jge
cmpsl
lock
push
out
ljmp
stc
add
push
loopne
and
enter
test
loop
arpl
pop
fidivrs
sbb
call
rorl
std
imul
jmp
mov
notb
add
test
pop
leave
mov
loop
xor
lods
loopne
jmp
push
mov
sub
mov
lea
add
pop
dec
pop
shll
adc
shll
jmp
stos
mov
push
aam
lea
sbb
lock
jg
pop
test
xor
jbe
pusha
and
and
mov
mov
iret
dec
xchg
add
aaa
pop
inc
and
gs
and
aas
add
je
mov
dec
fwait
in
dec
lcall
andl
add
lret
mov
jmp
xor
add
fcmovu
push
inc
out
push
push
out
adc
je
jl
push
push
and
aas
jns
jno
mov
xchg
mov
add
mov
decl
mov
add
xchg
push
xor
repz
call
adc
push
add
jle
ljmp
cli
mov
mov
push
xor
testb
imul
call
add
xor
mov
into
add
xor
lods
inc
scas
pop
mov
nop
idivl
cmp
xlat
daa
je
pop
add
repz
loopne
ficomps
orb
in
arpl
lods
ja
notl
xchg
push
repz
inc
fisubs
mov
js
add
xor
loopne
mov
lahf
mov
lods
jg
cmp
outsl
loopne
add
fidivs
sub
das
sub
add
test
jmp
push
addl
mov
aas
sbb
add
cmpsl
adc
lea
fldt
jg
xchg
mov
inc
jns
adc
jmp
pop
loopne
sbb
ficomps
add
dec
add
xorb
lea
sti
fs
pop
jb
xlat
push
sub
mov
rorb
mov
popa
add
pop
inc
adc
pop
inc
adc
outsb
shll
out
mov
mov
je
mov
sbb
and
mov
mov
out
or
add
dec
outsl
add
out
in
adc
lahf
jmp
clc
mov
mov
getsec
mov
pop
movsb
inc
outsl
ret
loop
out
xchg
jo
in
mov
jmp
testl
dec
movsb
mov
add
or
add
add
fimuls
inc
mov
imul
add
icebp
js
mov
into
mov
mov
dec
add
jecxz
mov
insb
std
xchg
push
andb
imul
incb
add
gs
or
nop
add
fnstenv
std
jnp
adc
and
push
jg
or
and
add
repz
add
fcomip
mov
stos
cmp
xchg
bound
and
inc
jmp
xor
pop
mov
add
fistpll
push
jmp
data16
std
mov
push
mov
lods
stos
jmp
mov
lcall
sub
xor
mov
push
pop
leave
adc
add
lock
out
jo
cli
ja
inc
add
lea
outsb
cs
push
pop
roll
outsb
loope
mov
add
ret
lds
iret
addr16
or
in
push
pop
mov
xchg
push
mov
dec
flds
stos
jecxz
inc
out
test
mov
leave
ljmp
jge
add
cmpsb
pushf
mov
push
fprem
hlt
and
daa
mov
add
lea
insb
adc
sbb
movb
out
ret
pop
mov
pop
mov
rol
add
movntq
dec
push
bound
sbb
aaa
out
div
arpl
and
adc
shlb
add
pop
ret
jne
lahf
aad
loop
sbb
fucomip
fwait
add
fucomi
inc
push
ja
addr16
mov
mov
mov
lea
xchg
mov
jmp
imul
adc
sbb
fucom
mov
jecxz
dec
into
aad
mov
lods
push
jb
dec
sub
push
or
shll
cmpsb
outsl
mov
and
loop
shlb
jl
push
xor
mov
stos
jle
jbe
mov
subl
out
pop
lcall
xor
adc
shrl
pop
pop
inc
pop
mov
int3
adcb
add
jl
or
call
mov
dec
add
shlb
lods
mov
in
jp
adc
testb
add
and
cmp
lock
xchg
pop
lret
popw
push
add
pop
mov
jae
insl
stos
arpl
mov
flds
mov
test
sbb
mov
ret
inc
es
scas
hlt
jp
scas
add
add
pop
jb
insl
cmpsl
jb
add
lea
mov
or
jmp
add
aas
lds
mov
xchg
pop
insl
lea
popa
jb
scas
jg
lea
mov
push
mov
jmp
fisubrl
and
xor
pop
aad
jp
sti
int
mov
outsb
jae
jo
test
adc
or
mov
ds
add
mov
test
cmp
or
push
mov
mov
mov
je
mov
je
mov
je
sbbl
sbb
das
or
cmp
adc
adc
xor
add
fmull
push
xchg
scas
mov
test
cmp
xor
adcb
dec
rorl
push
decl
jo
jl
jnp
push
ret
jne
cld
cmp
mov
jnp
add
jecxz
mov
mov
call
add
mov
pop
dec
out
add
mov
mov
enter
ss
push
fildl
stos
dec
faddl
mov
iret
add
mov
push
jmp
push
faddl
iret
decl
or
jmp
lret
adc
or
movsbl
mov
adc
mov
xor
push
dec
push
and
stos
add
ret
sub
mov
or
xor
dec
mov
int3
ja
mov
cld
mov
shl
and
pop
jns
mulb
mov
insl
insl
jle
in
xor
call
inc
and
cmpsb
pop
roll
adc
mov
out
adc
mov
popa
pusha
je
sbb
gs
adc
cmp
cmp
or
lcall
add
testb
push
rorl
in
sar
mov
outsl
aad
loop
jmp
flds
setno
xchg
add
shrb
jnp
in
push
addr16
sbb
lea
add
push
sbb
cmpsb
adc
pop
in
cs
aas
int
cmp
mov
pusha
in
add
mov
mov
and
pop
dec
push
repnz
jl
adc
mov
dec
in
adc
addb
enter
mov
out
mov
fdivrp
dec
or
jge
adc
push
jbe
jne
in
adc
mov
shl
insl
xorl
add
mov
clc
je
mov
cmc
cld
mov
mov
inc
cmc
push
and
add
pop
push
hlt
loop
inc
pop
adc
addb
dec
shll
shlb
addl
mov
inc
or
js
xor
ror
xor
popf
push
or
sbbl
aas
add
loop
lcall
or
push
xchg
decl
xchg
mov
sar
fists
adc
in
mov
aas
shl
dec
jl
in
mov
orl
add
mov
imul
or
fwait
aam
push
aas
dec
stc
add
add
jg
cmp
sub
lea
aam
lcall
adc
mov
inc
add
mov
lcall
jmp
xchg
cmp
add
into
out
dec
pushf
dec
in
mov
out
add
addb
addl
inc
add
xchg
adc
dec
into
push
jle
ret
mov
loope
inc
add
sub
imul
dec
into
jle
pop
jns
cltd
push
mov
cltd
sarb
fisttpl
movsb
icebp
mov
fs
fcmove
in
xorl
cli
mov
mov
repnz
xor
cmc
lea
mov
pandn
cmp
add
add
faddl
xor
clc
stos
pushl
sbb
mov
pop
mov
rolb
xchg
add
jle
addr16
hlt
inc
leave
stc
imul
inc
fcoms
xor
fcoms
jle
daa
mov
push
stos
fsts
mov
jmp
mov
add
jge
lea
popa
push
incl
inc
pop
push
push
jmp
jmp
add
pop
inc
xchg
mov
rol
mov
popl
std
jge
icebp
adc
xchg
outsl
sbbl
or
lea
aas
mov
or
jecxz
pop
aad
inc
adc
or
mov
mov
push
iret
mov
into
loop
clc
inc
push
mov
subl
bnd
mov
in
lcall
loop
push
add
pop
call
or
mov
mov
mov
or
call
cltd
lret
xchg
shl
mov
rcll
into
sub
dec
int3
jle
mov
fildll
pop
subb
lock
bound
add
cli
outsb
lret
jo
xchg
cmp
or
mov
sub
dec
adc
mov
push
out
dec
add
xor
outsl
shrb
pop
cmp
sub
cmovns
add
xchg
or
inc
call
rcrl
xchg
xchg
jne
jecxz
cli
pop
ret
add
adc
push
push
or
fstl
push
pop
add
rolb
adc
push
aam
rorb
adc
xchg
cli
cld
add
xchg
adc
rcr
lret
mov
adc
lods
lret
fwait
add
lea
das
fisttpl
dec
es
mov
dec
rcr
dec
pop
mov
mov
sar
incl
dec
push
cmp
popl
add
decb
addr16
pushl
mov
out
mov
ss
lock
stos
pop
xor
fistl
xchg
pop
jne
out
add
xlat
jo
push
add
ja
test
ja
push
sbb
lods
push
jmp
sbb
ret
je
decb
jo
std
lcall
rcll
inc
mov
xchg
into
inc
jae
cmp
add
jmp
mov
mov
insl
inc
vcvtpd2psx
hlt
stc
jl
out
adc
jle
iret
cmpsb
out
adc
or
jb
sub
mov
xor
mov
jb
addb
popf
imul
push
sub
adc
mov
rcrb
sub
add
fs
jmp
push
jo
in
test
in
insb
push
or
push
fmuls
jmp
xchg
ret
add
enter
dec
in
mov
mov
xchg
ljmp
cld
subb
imul
iret
sti
xchg
dec
in
scas
pop
mov
mov
mov
mov
stos
or
push
mov
push
inc
add
lea
or
dec
mov
cld
imul
add
mov
bswap
std
xchg
lahf
dec
pop
mov
sub
icebp
lds
cmp
pop
movnti
ret
rcl
adc
jl
cmp
mov
je
sbb
and
lea
in
adc
pusha
push
sbb
xor
outsb
adc
dec
or
cli
aam
enter
pop
xor
inc
lcall
cmp
inc
jmp
adc
xor
cmpsl
push
or
rorb
int
mov
add
or
add
xchg
jne
lea
pop
pop
in
add
xor
xchg
dec
je
or
add
mov
jmp
adc
cld
sbb
imul
adc
hlt
loopne
add
insl
add
add
push
call
mov
outsl
xchg
push
ljmp
hlt
sbb
sbb
add
inc
cmp
cltd
loopne
jmp
push
stos
inc
iret
add
mov
inc
or
movl
dec
ret
call
or
dec
jae
fidivl
mov
loopne
push
add
dec
std
or
leave
add
jmp
jae
popa
cmp
dec
ret
in
cmpb
mov
mov
lret
mov
push
mov
in
push
pusha
adc
sub
mov
repz
in
into
nop
adc
add
mov
lods
cmpsl
sbb
fidivrl
data16
inc
cmp
hlt
mov
cwtl
jb
in
add
lcall
sub
hlt
mov
lods
addl
fidivs
insb
dec
add
insl
mov
push
outsl
pop
mov
add
xor
imul
lea
call
jno
out
jmp
mov
add
lea
ja
pop
sarb
popf
mov
lahf
inc
mov
cmp
pop
inc
stc
or
bound
hlt
aaa
xor
out
sbb
orb
cmpsb
xchg
aas
stc
mov
fisttps
add
jbe
jg
and
loopnew
sbb
push
inc
aaa
pop
push
push
jmp
mov
adc
fisubl
push
pusha
ret
cmc
adc
mov
jmp
xchg
sti
lea
pop
dec
insl
sub
add
notl
cmp
sub
inc
mov
insl
add
adcb
lea
pop
in
mov
sub
jns
mov
push
adc
xchg
or
add
scas
jecxz
lcall
icebp
adc
cmpsl
add
dec
fisubs
je,pt
and
jle
icebp
mov
mov
push
adc
dec
mov
inc
pop
xor
notb
mov
adc
mov
int
ja
inc
jno
add
mov
js
mov
data16
push
mov
data16
mov
add
mov
add
mov
pop
or
jmp
shlb
add
shlb
jae
add
add
rorb
popa
or
in
jnp
xchg
jne
lods
fwait
jae
test
daa
lcall
mov
mov
mov
xchg
in
add
mov
int3
orl
jmp
mov
data16
mov
jmp
xchg
mov
lahf
add
rolb
fld
lock
nop
pop
jb
mov
add
mov
mov
call
adc
sub
adc
push
mov
jl
jg
out
mov
mov
jmp
fldcw
push
xchg
mov
mov
jmp
std
mov
mov
stc
out
ss
pop
aaa
add
arpl
in
jns
add
add
cmpsl
cltd
ret
push
repnz
outsl
sbb
aas
aaa
add
mov
mov
cmp
outsl
movzwl
mov
repnz
pop
pop
cmc
test
mov
lock
mov
mov
mov
outsl
sub
push
and
clc
mov
insb
mov
and
inc
xorl
in
or
jbe
cmp
testl
push
ret
push
mov
inc
add
das
stc
out
lods
cld
test
add
mov
jge
xchg
hlt
jnp
xchg
in
in
push
jae
pop
addr16
scas
jno
shll
xchg
mov
adc
std
ja
push
sub
and
mov
add
xor
and
imul
mov
dec
push
add
insl
repnz
push
hlt
cmp
mov
add
scas
cld
jnp
repz
mov
inc
pop
int
inc
pop
int
arpl
loop
pop
es
leave
mov
xor
dec
jge
rol
xchg
adc
pop
lds
or
sub
cld
icebp
sbb
jge
fadd
dec
mov
xchg
pop
popa
testb
mov
mov
pop
inc
notb
lret
mov
div
xchg
js
push
and
movsl
lcall
jl
in
lods
into
pop
xchg
add
in
repz
jmp
std
mov
add
dec
jp
jo
imul
add
dec
add
cli
ljmp
xor
or
nop
addr16
out
adc
adc
add
adc
icebp
mov
add
and
mov
lea
shll
mov
nop
fisttpll
sbb
and
jns
nop
add
mov
add
loopne
mov
loop
jecxz
push
repz
xor
cmp
or
orb
push
inc
cmpsl
paddw
cmpsl
mov
jl
paddw
mov
jge
std
mov
sahf
push
inc
ja
or
orb
shl
cli
rorb
cmp
test
push
outsl
cld
rolb
shrl
clc
in
and
stc
jnp
in
or
add
in
push
sub
in
push
mov
add
loopne
xchg
push
xor
movsb
adc
lods
mov
push
dec
movsb
jbe
jecxz
cli
inc
mov
push
enter
stos
out
dec
mov
add
sbb
mov
enter
mov
jle
mov
rcr
pop
dec
add
fucompp
add
mov
vmovddup
dec
push
sbb
std
adc
mov
dec
adc
aad
incl
xor
popl
dec
imul
adc
sti
ljmp
mov
out
int
lods
add
rcr
sahf
dec
in
add
jne
popf
sub
sbb
dec
in
mov
loope
test
aas
pop
and
lret
psllq
xchg
repz
jmp
lea
mov
dec
pop
jno
push
popf
sub
negl
pop
xor
ds
dec
and
mov
sahf
xor
push
mov
push
pop
mov
jp
cmp
daa
dec
pushf
cs
iret
cmp
push
adc
mov
popf
cmp
dec
aas
loope
std
sbb
pop
add
insb
dec
aas
push
cmp
icebp
stc
jmp
loop
stc
scas
roll
call
xor
push
pop
aaa
aaa
int
jmp
and
jb
imul
in
dec
lds
mov
xchg
xchg
js
mov
es
sarl
add
inc
mov
add
inc
ret
mov
in
adc
mov
and
add
cmp
and
aad
addr16
jae
pop
test
mov
mov
or
adc
and
jne
push
sar
sub
add
add
aas
and
mov
inc
addr16
and
dec
jnp
aaa
push
adc
jae
sbb
das
lret
repz
pop
add
fcmovnb
incl
add
sbb
jle
je
mov
add
jnp
sub
pushf
pushl
mov
mov
and
clc
jae,pt
or
pop
add
ja
xchg
mov
out
mov
and
ss
or
lret
jecxz
daa
data16
std
imul
dec
out
adc
leave
pop
add
mov
lahf
incb
lock
lea
rclb
pop
mov
and
test
or
test
inc
js
pop
jnp
and
test
sahf
sub
shrb
push
add
test
inc
addl
imul
sbbl
cmpsl
movb
iret
add
mov
rclb
js
outsl
aam
shrb
js
outsl
clc
rcrb
mov
inc
inc
add
sub
cmp
aas
fdivs
jl
xor
mov
cmp
lock
mov
mov
fstps
test
in
cmp
push
xor
push
lret
loop
add
bound
pop
mov
iret
adc
or
cmp
aaa
or
or
aad
inc
jmp
mov
add
or
test
mov
aas
add
shlb
aaa
sub
lcall
adc
push
pushf
mov
mul
mov
into
pop
xchg
add
testl
ret
movsb
mov
pop
mov
dec
mov
out
cmp
scas
outsl
ds
mov
add
mov
push
outsl
sub
sub
mov
jmp
pop
mov
mov
add
cmpsl
add
je
add
call
in
pop
jmp
lods
mov
mov
out
jbe
inc
cmp
pop
ficoml
inc
adc
movsb
xchg
jne
sub
cmp
push
and
dec
xchg
stc
dec
push
and
pop
jl
movsb
into
push
arpl
fisttpll
idivl
stos
and
inc
or
mov
stc
inc
mov
notl
cmp
mov
mov
or
mov
or
jmp
imul
mov
inc
int3
and
fbstp
outsl
mov
imul
adc
rorb
mov
call
pop
cmpsb
popf
sub
pop
mov
push
add
mov
insl
fnstcw
gs
out
mov
push
in
xchg
mov
mov
jb
lock
mov
mov
jl
lds
addr16
xchg
inc
sub
testb
les
xchg
pop
fsts
add
les
or
inc
dec
inc
add
jns
add
add
mov
xchg
jp
sub
mov
fs
pushl
mov
add
push
fwait
push
pop
and
shll
sbb
movsl
jmp
or
call
add
or
bound
inc
int
or
loope
adc
loope
mov
stc
or
stc
push
xchg
add
roll
ja
mov
test
hlt
pop
mov
pusha
pusha
pop
sub
iret
jmp
leave
call
add
pop
pop
lcall
or
xor
outsb
fcomps
jbe
add
sbb
aam
push
and
aad
jl
fwait
push
mov
add
je
scas
aaa
jne
mov
add
addb
cmpl
cld
loope
in
mov
pop
xchg
popl
mov
test
or
cmp
movsb
mov
jbe
int
popa
inc
ficompl
mov
rorb
mov
mov
mov
sbb
cwtl
add
sub
adc
lds
lods
add
adc
notb
sarb
cmp
popa
sub
xchg
movsb
add
mov
mov
int
mov
cwtl
lods
insb
bound
lds
add
lret
sbb
dec
cwtl
in
sarb
adc
test
test
movsl
add
sub
scas
jo
pop
mov
cmp
mov
in
shlb
fimull
mov
jo
xchg
mov
adc
mov
lods
arpl
fwait
pop
jl
mov
addr16
jmp
cmp
inc
mov
xchg
xchg
inc
mov
xchg
lea
pop
or
jo
lretw
stos
jne
stos
cmp
xchg
inc
jmp
push
movl
stos
pusha
cmp
aam
xchg
inc
jmp
mov
add
pop
push
push
inc
push
stc
inc
adc
outsb
fadds
in
cli
decl
cwtl
out
std
int
test
mov
lds
add
cmpsl
adcb
test
outsl
clc
ljmp
and
lcall
pop
pop
xor
ret
and
test
xchg
jg
ja
add
stos
stos
sbb
pusha
or
add
popl
dec
sbb
and
or
lar
xor
xor
imul
sbb
push
stc
call
popl
out
test
stc
push
push
add
out
push
pop
aad
stc
cmp
xchg
add
mov
mov
add
stos
test
add
sub
cld
sbb
inc
mov
add
shrl
int3
sarb
push
pusha
jecxz
add
sbb
or
lods
add
mov
cmp
or
mov
xchg
in
dec
mov
ds
lahf
loopne
and
scas
clc
pop
mov
arpl
stos
out
inc
pushf
dec
in
fisubl
jecxz,pn
aas
cltd
mov
jl
add
jmp
jne
xchg
push
add
jbe
aam
adcl
scas
jo
jno
xchg
mov
xchg
cwtl
loopne
mov
cmp
dec
test
jecxz
cmp
adc
and
jne
adc
add
pushf
dec
cmp
inc
dec
bswap
jge
add
cs
add
inc
push
bound
xchg
mov
add
outsb
mov
daa
adc
icebp
das
push
cwtl
andb
inc
xchg
outsl
xchg
mov
dec
add
xor
mov
mov
ret
cmp
adc
adc
lea
shrl
out
out
adc
pop
loope
mov
clc
call
test
enter
jbe
mov
test
push
clc
push
movb
push
jge
add
push
pop
or
add
pop
out
fwait
adcb
std
ljmp
mov
aas
add
mov
add
sbb
jg
jb
addr16
push
rclb
stc
ljmp
lock
addr16
je
jae
cltd
aaa
mov
add
mov
inc
daa
lcall
lods
pop
xchg
sub
add
mov
call
or
or
xchg
cwtl
add
imul
cmp
je
aaa
aam
pop
pop
decl
mov
inc
mov
xor
stos
vmovddup
or
mov
jne
add
mov
and
jge
repnz
cmc
xor
mov
push
loope
adc
ret
adc
mov
dec
mov
aad
pop
inc
push
and
push
out
dec
scas
fwait
ss
ffree
fsts
pop
cmpsb
je
mov
inc
ss
cvttps2pi
add
mov
mov
push
add
lret
push
leave
sarl
xchg
sub
dec
or
mov
mov
sarb
insb
add
mov
ss
ss
cmpsl
mov
add
call
in
out
pop
add
fsubs
shlb
or
or
mov
or
cmpsb
stc
jmp
insl
out
or
jmp
lcall
jmp
andl
mov
js
lods
roll
mov
cmp
cli
hlt
mov
lret
js
adc
sub
movsl
jg
maxps
pusha
pusha
dec
dec
pop
je
push
std
sub
mov
add
jo
inc
add
mov
test
hlt
or
mov
addl
mov
add
pop
push
test
stc
mov
ret
inc
push
shl
add
sbbl
clc
je
jg
jmp
dec
push
xor
and
call
hlt
push
jae
push
mov
add
shll
and
fwait
mov
add
popl
call
mov
aas
or
mov
add
mov
sbb
jmp
mov
adc
js
or
popa
sbb
jl
add
pop
adc
sbb
and
mov
andb
rorb
add
neg
cld
mov
daa
inc
je
repnz
mov
jnp
shlb
rcr
or
je
push
dec
mov
xor
std
xchg
fadds
mov
jo
inc
mov
lds
mov
push
pop
mov
mov
add
mov
add
test
roll
fs
imul
in
add
xchg
test
ds
fnstcw
adc
adc
rorb
roll
punpckhbw
mov
in
add
popf
xor
movsl
xchg
sub
gs
sbb
pop
pop
das
mov
cli
cld
popa
nop
inc
jmp
negl
and
bound
movl
into
dec
cmp
cmp
lea
or
jne
aas
call
and
jle
stc
xchg
ss
or
in
add
sub
pop
orl
mov
add
insb
popa
insb
daa
xor
and
add
incl
mov
inc
xchg
ljmp
xchg
cmp
mov
dec
or
inc
push
in
dec
lea
mov
jmp
sub
out
xchg
enter
testl
mov
mov
inc
add
mov
xor
clc
rdpmc
loopne
jmp
pop
mov
mov
add
add
sub
add
mov
rolb
popf
jg
mov
push
jp
push
sbb
jmp
mov
sub
push
and
or
aas
or
mov
lret
and
mov
pop
stos
test
sub
mov
mov
shl
mov
cltd
shll
movsl
cmpl
or
dec
decl
mov
mov
cs
add
pop
and
push
dec
jmp
pop
ret
pop
dec
fisubl
xor
inc
js
adc
mov
xor
sbb
xorl
sbb
adc
rclb
inc
pop
cs
inc
or
pop
mov
inc
or
fstps
cs
addr16
popf
ffree
rorl
out
sahf
imul
adc
and
adc
xchg
pop
add
inc
pop
mov
mov
stc
insb
push
push
push
xor
js
fisttpl
jle
push
or
mov
sahf
in
rol
shr
push
push
sahf
stc
xchg
rol
ds
pushf
in
inc
mov
jne
fistpll
cmp
fmul
jp
jmp
lods
add
lea
xchg
gs
mov
mov
pop
xchg
or
loope
mov
mov
fistl
inc
in
adc
popa
daa
dec
add
mov
ret
mov
xor
xorl
stos
mov
add
ret
rol
mov
ret
testl
mov
xchg
mov
loop
cmp
xchg
jbe
stos
cmp
or
mov
lods
lahf
dec
inc
push
add
jg
fwait
mov
ret
jp
orl
push
insb
sub
dec
out
add
shll
ds
or
and
insl
ret
cltd
sub
cltd
insb
ret
popf
sub
andb
add
inc
xchg
add
pop
movsl
decl
dec
movsl
jbe
push
test
push
movsb
add
xchg
rol
xchg
enter
ror
decb
movsl
js
stos
add
mov
incl
mov
xchg
jecxz
push
mov
xchg
nop
adc
add
mov
adc
stos
add
dec
in
cli
jecxz
jmp
fistl
inc
imul
or
adcb
add
dec
in
jl
outsl
faddl
mov
std
inc
into
add
loopne
mov
lea
loopne
push
and
adc
fwait
push
push
or
dec
add
loopne
push
pusha
filds
mov
int3
jb
lods
pop
arpl
cmpsl
int3
lock
nop
jae
insl
adc
out
dec
add
jb
push
xor
pop
popa
lea
add
push
push
xor
adc
mov
pop
lret
shl
cmc
dec
pop
pop
jmp
jg
lea
add
lea
andb
add
outsl
xchg
lea
cmp
lea
ret
notb
xchg
push
xchg
mov
shll
xchg
xchg
ficomps
add
out
test
rclb
add
and
data16
adc
push
cli
lea
mov
mov
add
mov
add
dec
xor
int3
dec
push
dec
sub
pop
data16
mov
mov
clc
jmp
arpl
add
sub
pop
mov
call
aam
cmp
ss
test
mov
test
call
clc
clc
sbb
mov
mov
and
add
inc
decb
fisubs
incb
mov
icebp
icebp
ss
xor
mov
sbb
prefetch
add
mov
jl
pop
imul
and
xchg
jl
add
popf
addr16
jecxz
or
stos
add
push
out
insb
scas
cwtl
sbb
push
add
adc
add
push
push
or
add
xchg
mov
jp
push
test
mov
andl
xlat
add
out
roll
adc
adc
ret
add
stc
lcall
cli
push
mov
add
push
dec
loopne
jge
fnstcw
mov
add
pop
rclb
les
add
cmp
jp
outsl
add
rorb
dec
or
add
mov
mov
inc
or
or
xchg
psubusw
or
out
push
incb
jmp
mov
mov
sbb
call
mov
int3
mov
outsl
dec
call
out
pop
adc
or
stc
jmp
add
mov
push
inc
leave
and
push
call
cs
mov
jb
adcb
test
popa
outsb
clc
wbinvd
lds
roll
shrb
and
pushl
mov
add
popl
mov
cmp
stos
lahf
test
cmpsb
mov
mov
mov
orl
mov
add
out
sbb
in
and
jg
aas
and
in
sub
pop
lahf
scas
or
es
add
push
je
mov
push
data16
into
dec
into
flds
clc
fdivs
add
aad
jne
and
neg
pop
jne
flds
mov
aad
test
mov
test
sub
hlt
add
outsb
lods
cli
iret
add
movsb
call
sbb
mov
adc
adc
jmp
jne
out
stc
sub
jne
insl
arpl
lret
mov
push
addr16
arpl
cmp
ret
fnstenv
mov
into
sbb
bound
adc
jmp
and
xchg
adc
jmp
mov
pop
mov
add
out
sbb
mov
rorb
ret
or
out
dec
or
pop
adcb
int3
lret
ret
aam
jg
sub
jecxz
pop
ljmp
xchg
or
add
or
pop
xchg
in
mov
mov
push
ds
inc
dec
add
cmp
clc
jle
lea
aas
or
sbb
inc
icebp
jp
add
stc
or
ret
dec
lds
mov
pusha
inc
imul
lcall
add
addr16
call
int3
nop
stc
jmp
pop
mov
jmp
add
test
jp
sti
mov
or
insb
enter
adc
add
incl
es
or
adc
insb
enter
test
jmp
pop
mov
push
mov
add
add
mov
add
add
push
jbe
add
aam
call
mov
std
ljmp
jle
fwait
mov
add
xchg
mov
fmul
push
and
mov
add
push
loop
mov
mov
mov
or
stc
add
iret
dec
int
je
xlat
cld
sti
jmp
bound
std
add
test
add
clc
add
add
mov
lea
jnp
into
nop
push
add
mov
icebp
call
pop
sub
aas
movsb
add
aas
push
mov
mov
mov
xchg
push
icebp
mov
insl
in
add
aad
add
lods
repz
xchg
test
testb
test
push
subl
in
mov
push
lods
mov
clc
mov
xor
jmp
mov
popl
pop
mov
inc
mov
add
mov
mov
ret
add
pop
dec
lds
pop
jp
jno
add
pop
jbe
xchg
mov
std
jno
stc
pop
imul
outsb
add
je
mov
int
push
in
and
sub
lea
or
mov
mov
or
and
and
call
jmp
aad
call
push
scas
or
inc
mov
imul
pop
int
mov
jmp
lea
add
dec
loopne
mov
pop
mov
add
inc
orb
push
cmp
iret
jle
out
xchg
cmp
jb
mov
sub
je
addb
shlb
mov
dec
mov
pop
nop
out
add
test
mov
mov
add
aas
xchg
add
insl
sub
jg
add
mov
add
pop
inc
mov
add
data16
dec
xchg
add
mov
in
mov
pop
push
jmp
mov
add
outsl
lcall
pop
loop,pn
mov
or
adc
mov
xor
pop
push
loop
mov
push
add
push
mov
jle
mov
add
and
mov
loop
mov
out
or
xchg
jno
in
add
mov
mov
jnp
jbe
stos
out
add
lahf
arpl
lods
mov
mov
inc
pop
mov
fisttpll
jmp
mov
mov
add
jmp
mov
ljmp
orl
xor
mov
fadds
adc
mov
push
push
mov
push
dec
lea
and
test
add
adc
and
into
scas
daa
adc
and
lea
lds
stc
jmp
add
decb
and
xor
add
add
mov
jb
xor
fildll
or
adc
push
adc
jmp
test
or
xchg
pushw
add
shrl
outsb
cli
test
add
popl
add
jg
testl
lea
inc
mull
stc
push
aaa
xchg
test
lea
push
push
lea
jmp
lea
and
aaa
divb
aas
mov
pushf
jmp
loope
testb
popl
mov
imul
mov
mov
mov
pop
push
cli
push
mov
cwtl
or
in
cmpl
cmp
mov
fs
mov
cs
add
rcll
jae
add
inc
push
add
ss
add
jae
add
sbbb
mov
call
and
or
andb
cli
adc
mov
mov
dec
mov
or
cmp
jae
in
js
xor
mov
mov
int3
mov
jb
jmp
mov
mov
pushl
inc
mov
add
out
add
xchg
xchg
adc
pop
xchg
pop
xchg
rcrl
sub
add
insb
jecxz
inc
mov
test
jne
sbb
xchg
dec
lds
and
fnsave
fimull
adcl
add
lea
in
sbb
pop
add
xchg
mov
bound
test
jmp
mov
comiss
xchg
mov
rorb
aaa
mov
mov
pop
jecxz
mov
mov
lea
lsl
mov
dec
xchg
or
jg
mov
test
shll
jmp
aam
prefetch
sbb
cmp
push
mov
adc
int3
lret
mov
xchg
lret
mov
push
mov
dec
mov
adc
adc
test
out
mov
add
xchg
add
sbb
add
or
orb
leave
fistl
push
imul
adc
aaa
mov
mov
mov
jno
mov
cmc
adc
outsl
test
add
mov
jb
mov
fldl
xchg
push
mov
shll
cmc
ret
mov
out
jg
jb
mov
xlat
xchg
xchg
scas
mov
mov
fldenv
cltd
idivb
andl
and
jno
mov
dec
mov
pop
jb
jg
jb
xchg
xchg
mov
inc
jb
or
js
pushl
mov
add
mov
test
jecxz
add
mov
mov
test
adc
scas
add
out
add
subl
push
sar
leave
xorl
jecxz
add
xor
add
jb
in
cltd
xor
push
jmp
fsubr
repz
jg
stos
ljmp
sub
loop
jne
jmp
xchg
cmpsl
add
xorl
or
add
imul
mov
outsl
lret
test
sbb
je
sbb
cmp
push
nop
jg
std
cmp
loop
push
cmc
push
mov
shlb
cmp
cltd
mov
arpl
push
mov
mov
rcr
mov
inc
call
push
sub
jmp
addb
or
add
inc
imul
ljmpw
enter
je
bound
cmp
gs
add
lea
add
aas
pushf
inc
adc
push
sbb
call
push
sub
dec
sbb
scas
push
xchg
jge
ljmp
cmp
xor
mov
xor
sbb
dec
popf
idivb
loopne
loop
pop
popf
idivb
inc
dec
or
outsb
es
jne
add
insb
cmp
push
test
inc
adc
lahf
lea
push
stos
dec
sbb
leave
ss
cld
and
aas
or
adc
ret
lea
mov
jno
int3
nop
jb
mov
out
inc
push
mov
mov
lcall
or
adc
pushl
jae
xlat
mov
adc
imul
push
add
push
enter
sbb
imul
sub
decl
jp
mov
push
sarl
xchg
pop
movsl
orb
faddl
into
fmull
lds
add
scas
loope
dec
stos
ljmp
sti
out
dec
mov
mov
out
adc
xchg
ljmp
ret
cltd
fwait
sbb
std
inc
pop
push
stos
sbb
ret
add
stos
mov
lcall
add
cwtl
jmp
adc
add
loopne
pop
sub
pop
mov
push
adc
mov
lcall
data16
in
sti
clc
cmp
pop
mov
add
in
inc
mov
lret
mov
aaa
in
xchg
lds
dec
je
sbb
int
add
dec
jg
cltd
or
adc
cmp
cmp
cmp
adc
adc
nop
clc
addr16
ret
pop
testb
mov
xor
inc
mov
fs
inc
insb
xor
std
push
lea
test
cld
in
pop
inc
testb
add
dec
dec
jl
cmp
sbb
add
and
pop
push
sbb
mov
aas
insb
int3
inc
sbb
mov
sub
sbb
add
lea
push
inc
sub
addr16
sahf
cld
leave
inc
cmp
sbb
mov
imull
pop
jg
cltd
jb
xor
int3
inc
stos
jmp
pop
xor
shrl
add
jns
inc
ret
add
pushw
cmpsb
clc
and
xchg
cltd
fdivr
mov
cmc
xchg
jae
or
leave
or
cli
shr
pop
sub
or
bound
sti
cmpsb
ds
std
xchg
mov
mov
jmp
cmp
into
pop
out
add
lods
cmc
clc
insl
std
and
lock
add
add
icebp
andb
js
mov
push
xchg
mov
sbb
mov
pop
or
test
cld
or
jmp
lcall
insl
or
mov
add
pop
in
mov
cld
adc
add
cltd
jnp
test
ljmp
orb
into
lea
stc
loop
out
push
ja
push
or
jmp
ljmp
out
push
jns
fisubs
mov
lds
cmp
stc
push
xchg
or
cltd
add
or
imul
jmp
inc
cltd
add
cli
adc
lea
jp
push
stos
jbe
pop
xlat
jp
jmp
xchg
js
add
jne
cwtl
pop
mov
cmp
js
mov
ja
cmp
push
mov
psllq
sbb
addr16
stc
das
aaa
mov
ret
insl
shld
ljmp
jne
add
jae
add
push
cmp
rclb
mov
pushl
mov
ljmp
adc
and
clc
stc
mov
or
add
jae
cli
decl
inc
jns
mov
loopne
cmp
stc
mov
lea
mov
stc
xchg
ror
sub
bound
std
jns
scas
pop
mov
sub
or
lcall
sbb
push
xchg
leave
pop
mov
orb
add
xorb
cld
addl
or
inc
loope
adc
cld
and
add
push
addl
add
bound
sub
popa
mov
cmp
or
orl
mov
cltd
js
or
mov
xchg
or
ljmp
js
xor
add
aad
mov
outsb
out
js
adc
js
clc
sti
add
in
inc
push
xor
popl
popl
pop
loopne
add
loopne
mov
fists
ljmp
add
jge
dec
and
push
fbstp
pop
xchg
mov
add
jp
scas
mov
push
push
mov
pop
or
loope
xor
add
xchg
add
cmp
add
ffreep
add
int
js
cmp
or
ss
aam
pop
fldl
aas
jmp
dec
or
clc
mov
or
mov
or
sbb
test
iret
pop
cli
into
add
push
add
stos
push
add
or
push
setle
popl
jecxz
aas
and
testl
mov
xchg
in
call
pop
mov
and
xor
mov
mov
push
sbb
call
mov
jns
ljmp
and
sub
inc
mov
sbb
out
into
mov
mov
jge
sahf
rorb
add
cmc
adcl
mov
shll
out
push
add
dec
fs
call
or
add
dec
sbb
sub
filds
mov
lcall
add
andb
js
mov
add
test
fstpt
dec
gs
sub
jle
mov
out
mov
pusha
cld
mov
mov
std
jmp
iret
mov
or
fnsave
adc
repz
mov
cmc
sti
dec
mov
ret
je
insl
scas
loope
push
sbb
test
stos
add
int
mov
fistps
push
sub
push
hlt
arpl
insl
mov
lods
jp
scas
ret
add
loopne
mov
xchg
xor
or
lahf
mov
add
repnz
leave
data16
pop
add
add
out
enter
add
lods
add
mov
scas
xchg
cmp
adc
shrl
inc
mov
int
scas
add
add
jmp
es
jmp
lea
aad
into
int
sub
inc
fimull
mov
lock
jo
jb
fbstp
popa
dec
inc
adc
jg
add
xor
mov
mov
cmp
popf
test
fisttpll
add
push
xor
cmp
mov
mov
jecxz
pushf
pop
mov
and
add
leave
mov
pop
sub
push
add
inc
add
mov
xor
fcompl
xchg
cmpsl
add
push
popa
xor
mov
int
idiv
mov
ret
ljmp
fbld
xor
in
aam
div
fistpll
test
or
aam
push
dec
mov
dec
push
mov
mov
push
std
cmp
rolb
cli
andb
arpl
and
jmp
and
jmp
and
sti
push
aaa
bound
push
stos
outsb
push
mov
xchg
jb
push
stos
jb
inc
jb
xor
into
sti
inc
and
dec
int
jge
data16
cltd
in
jle
mov
push
sub
lea
add
stos
loope
mov
enter
add
sub
mov
adc
mov
daa
push
loope
sbbl
and
xchg
add
mov
nop
jns
jmp
cmp
or
mov
jle
sahf
daa
scas
imul
inc
mov
sub
mov
add
movl
lds
or
stc
ficoms
or
cwtl
add
adc
and
add
fprem
jne
iret
add
lea
iret
sahf
sbb
push
mov
stos
push
call
imul
mov
mov
jle
jle
push
out
mov
lea
add
mov
mov
jnp
add
adc
ja
add
and
adc
push
xor
out
inc
pop
faddp
ja
shl
pushl
popa
lods
clc
xor
mov
negl
call
outsb
xor
cmpsl
add
xchg
mov
jl
mov
insb
loopne
fmuls
out
push
mov
leave
xor
push
test
add
cmp
pop
sub
add
jecxz
mov
movntps
jmp
or
mov
add
cld
dec
addb
lret
test
mov
pop
add
orl
rolb
jae
and
push
clc
in
mov
dec
inc
lcall
mov
je
jnp
mov
or
adc
cld
stc
mov
or
test
andb
arpl
and
mov
std
add
inc
arpl
pop
fs
pop
fs
call
lret
sti
out
mov
mov
add
jg
jmp
mov
mov
cmp
arpl
sbb
mov
insl
lret
jmp
mov
bound
cmp
pop
xor
jae
mov
and
add
movsb
add
mov
mov
insb
jecxz
stos
cmp
fcomip
add
lcall
leave
sub
xchg
mov
mov
mov
add
adc
mov
jno
add
xchg
xor
push
jo
cmpsl
pop
loop
cmpsl
or
push
cmp
fimuls
insb
or
leave
mov
or
or
lahf
pop
insb
or
test
ja
add
pop
les
cmpsl
pop
xchg
jmp
ds
jo
cmpsl
sub
mov
int3
subb
lea
jbe
or
int
inc
add
lea
or
movsb
lea
adc
and
mov
add
sub
inc
add
addr16
mov
or
jae
push
add
mov
mov
stos
sbb
jnp
pop
rdpmc
mov
push
xor
mov
add
sbb
lret
pop
and
dec
cmp
mov
and
or
popa
mov
adc
jno
add
ret
add
clc
test
push
inc
xchg
push
and
dec
loop
cmp
mov
jno
orb
mov
rolb
and
movsl
push
push
mov
je
add
in
add
andb
mov
clc
aaa
add
je
aaa
dec
pop
and
cmp
mov
faddl
push
sbb
inc
subl
xchg
scas
adc
push
shl
bound
fisttpl
mov
insl
jmp
mov
arpl
jb
mov
push
sub
mov
aaa
pop
mov
push
ljmp
push
shll
and
ljmp
mov
add
and
je
jb
jle
mov
bound
lods
inc
call
lret
inc
jb
mov
cmp
data16
push
ret
or
test
mov
dec
inc
pusha
into
scas
psrld
pop
ret
or
xchg
add
xchg
add
or
mov
pusha
mov
lar
in
add
xchg
jg
out
data16
push
scas
pop
jmp
lea
pop
stc
jb
or
and
stc
pushl
push
jp
cmpsl
mov
mov
mov
add
test
jl
pop
lea
mov
add
cmpsb
pop
adc
ficomps
sub
test
arpl
cmp
xchg
test
cmp
xchg
aaa
mov
jmp
das
push
stc
arpl
add
mov
ret
clc
jmp
aad
mov
ret
clc
push
pop
mov
adcl
call
cmp
test
add
mov
mov
dec
jae
add
dec
push
and
popa
mov
add
clc
and
je
je
jns
jne
adc
aas
pop
sub
add
aaa
pop
jmp
and
jae
add
or
cld
sub
push
jne
inc
mov
xor
pop
test
and
cmp
icebp
ret
add
jmp
add
xor
pop
pop
mov
inc
add
lcall
pop
cmp
sahf
xor
into
lret
adc
sub
gs
or
push
push
mov
jno
xor
arpl
mov
jne
jbe
inc
cltd
adc
inc
dec
dec
or
or
mov
add
ds
lea
and
or
mov
fcompl
ljmp
mov
jg
xchg
es
stos
cmpsl
jae
add
lret
adc
leave
pop
add
cmp
pop
jl
push
xchg
or
xchg
add
subb
sbb
cmp
mov
arpl
lea
mov
push
das
push
jmp
mov
sbb
adcl
xchg
push
push
in
mov
stc
fs
xchg
jle
add
add
scas
adc
mov
cmp
testb
cmp
add
inc
cmp
mov
push
test
add
sub
lods
push
test
add
pop
adc
enter
xchg
cmp
cltd
cld
loope
movsl
xchg
mov
aas
or
fs
loop
jne
add
mov
addb
shrb
roll
add
cmp
mov
psrlw
outsl
and
or
adc
popl
cmp
outsl
es
adc
jmp
lea
cmpsl
mov
adc
mov
dec
and
mov
inc
jb
sub
inc
out
mov
jo
push
divl
mov
ficomps
inc
xchg
adc
pop
inc
jns
add
push
subl
cli
add
int3
testb
adc
mov
out
cltd
call
xor
mov
or
adc
mov
dec
and
xor
inc
jb
sub
nop
stos
xor
sub
cmpsl
out
ficoms
ljmp
pop
mov
inc
packsswb
ja
push
mov
xlat
mov
or
push
daa
sub
ja
lds
cmp
dec
int3
jae
stos
ja
aam
cmovnp
mov
sbb
add
lea
pop
pcmpgtb
add
xchg
cld
add
mov
xchg
ljmp
lret
mov
jl
jmp
add
mov
cmp
setnp
lea
test
testl
add
or
pop
fwait
movsl
jle
lea
add
add
pop
std
int
inc
add
sub
call
rorb
inc
add
leave
mov
pop
xchg
mov
lcall
sub
inc
aad
adc
decl
stos
icebp
or
neg
inc
and
lret
addb
ret
loop
testb
inc
mov
push
add
mov
mulps
inc
lret
lea
cmpsl
decl
sub
inc
and
lret
addb
ret
loop
mov
xor
mov
fiaddl
mov
leave
imulb
lods
lock
or
mov
add
pop
stos
inc
inc
insb
mov
adcl
add
adc
jmp
and
test
mov
rorb
and
mov
or
in
decl
lea
or
insl
scas
or
jae
movl
sub
jle
stos
cmp
rclb
fsubr
testb
adc
test
xchg
std
pop
or
mov
test
add
jnp
mov
ljmp
adc
daa
mov
jno
xor
lret
stos
ja
aam
mov
dec
jb
insl
ja
mov
incb
sbb
fs
shrl
add
lret
arpl
ja
rcrl
jbe
push
jne
lods
lret
jmp
mov
pushw
pop
pop
and
push
add
push
stc
pop
pop
outsb
ret
push
adc
xor
adcb
or
rorb
fcmovu
or
add
lea
jns
add
adcl
jg
cmp
in
lods
fwait
pop
stc
insb
lret
bound
cmpsl
adc
xorb
fiadds
cmp
fcmove
pushf
cmp
jle
packsswb
cmp
jns
pop
sub
lds
fildll
lea
add
or
dec
imul
subb
and
inc
mov
mov
mov
int3
clc
jmp
jecxz
call
push
add
xchg
ret
mov
add
xchg
mov
mov
mov
iret
xchg
jecxz
enter
fadds
add
xchg
jmp
mov
and
fidivrl
and
ja
sbb
and
jbe
add
shlb
icebp
fwait
ret
inc
dec
push
cmp
jmp
mov
cld
pop
int3
jb
push
sarb
jb
jp
mov
mov
jne
fldl
xor
adc
cmp
jge
cmp
je
xchg
lcall
dec
lods
dec
insb
cltd
in
std
loope
cmpb
mov
out
inc
cmp
jne
jno
sbb
add
sub
test
cltd
incb
int
sub
add
mov
mov
and
cmpsb
and
dec
pop
pop
dec
sti
sbb
pop
out
pop
xor
push
pop
and
fs
add
pop
or
xchg
sbb
arpl
ljmp
add
sti
add
mov
ljmp
in
jle
ret
and
mull
or
test
mov
sub
ret
fdivr
pop
xchg
ljmp
lds
mov
sbbl
je
add
insl
fcompl
pop
or
out
out
dec
fs
cmc
inc
or
test
mov
daa
pop
stc
in
pop
stc
jmp
pop
and
inc
stos
pusha
dec
js
ljmp
int
bound
mov
out
push
push
stc
fsubp
push
add
repz
cmp
xor
mov
fmull
xor
jmp
mov
inc
sub
js
mov
stc
add
bound
xchg
push
test
arpl
ud1
inc
mov
add
xchg
add
clc
inc
and
jecxz
jmp
cmp
shld
push
scas
or
decl
stos
push
call
js
jl
xor
std
loopne
cmp
inc
push
test
stc
push
mov
pop
add
movsl
add
inc
cmpsb
dec
and
jecxz
jmp
lods
ret
mov
jmp
add
flds
js
push
decl
out
inc
movsl
sbb
and
xchg
fnsave
mov
cld
andb
cld
xchg
fdivp
mov
pop
repz
scas
jmp
int
sub
popa
frstor
stc
loope
or
insb
jge
cld
mov
jmp
push
adc
xor
and
push
inc
xlat
sub
lret
dec
loope
inc
cwtl
decl
test
cld
mov
jnp
dec
mov
add
push
loop
inc
fldcw
mov
testb
idivb
shr
les
cmc
mov
mov
out
add
bound
out
pop
mov
imul
mov
mov
or
add
scas
mov
mov
add
lods
mov
add
lahf
rcrb
in
mov
insb
gs
stc
jmp
ret
sahf
mov
clc
pop
jno
add
lea
int
icebp
scas
aas
push
jno
and
cmp
clc
xchg
jns
add
lea
sub
cmp
cli
jmp
sub
insb
dec
inc
xor
pop
data16
push
into
pop
or
scas
daa
je
mov
mov
stc
push
test
add
sub
add
mov
jne
mov
add
pop
dec
shrb
push
xchg
and
mov
add
mov
mov
enter
inc
test
mov
sbb
psllw
pop
insb
testl
aam
js
and
mov
and
mov
add
and
call
jb
jne
cmp
push
lidtl
add
pop
bound
lea
lock
arpl
mov
push
pusha
ficoms
dec
or
sbb
rorb
jae
jns
cmpsl
inc
mov
jg
push
inc
add
push
jl
xchg
and
or
lret
cld
inc
lret
ss
test
jp
add
mov
dec
inc
call
gs
push
je
dec
push
add
add
and
add
loope
lods
scas
jmp
mov
cmpsb
jecxz
cmpsl
es
insl
scas
jmp
mov
mov
data16
add
adc
xchg
adc
jl
mov
mov
add
sbbb
mov
mov
mov
leave
mov
add
pop
pop
dec
cmp
mov
out
ljmp
add
jae
jecxz
mov
inc
addb
jecxz
add
add
in
add
jmp
stc
lods
push
call
jbe
clc
cmp
lods
dec
stc
bound
scas
dec
call
or
push
and
xchg
mov
pusha
int3
xlat
mov
loop
in
lea
cmp
lahf
test
jmp
mov
shll
pop
or
jmp
stc
fs
cmpb
mov
ljmp
push
call
sub
divb
add
sti
mov
mov
mov
and
mov
add
repz
cmpsb
mov
ljmp
mov
jmp
int
clc
test
mov
jmp
out
lret
pop
adc
inc
jle
lock
jbe
add
adc
adc
mov
xchg
pop
and
ret
pop
sub
cmp
jmp
adc
and
lock
add
sbb
hlt
cld
cmp
ds
push
popa
pop
or
dec
sbb
sub
xor
cmp
sti
or
or
or
mov
andb
arpl
and
jb
std
loop
cmp
xchg
popa
mov
mov
add
mov
jo
add
arpl
pop
fs
cld
or
jecxz
lock
add
adc
mov
test
add
mov
insb
fstl
test
add
dec
fiaddl
or
add
cmpsl
adc
adc
xchg
inc
jo
insb
ljmp
or
lds
sub
xchg
sub
pop
pop
aas
dec
dec
jmp
int
cli
inc
fidivs
scas
jmp
mov
add
inc
sbb
lea
mov
push
mov
add
lea
lds
sbb
popf
xchg
mov
add
stc
out
push
push
jo
loop
neg
call
xchg
lret
dec
jp
pop
push
pop
movsb
or
lcall
dec
cmp
jb
cmpsl
sbb
xchg
xlat
xor
cmpsl
adc
lret
lds
pop
xchg
aas
int
iret
aad
pop
or
in
xlat
sbb
push
test
jno
pushf
dec
inc
add
lods
push
popl
lea
adc
or
or
mov
jmp
enter
je
push
call
mov
mov
mov
add
push
jmp
movsb
push
add
lret
clc
pushl
jnp
add
iret
sub
call
sbb
lcall
add
arpl
cmp
je
lock
pushl
js
addr16
mov
mov
cmp
jle
test
pop
add
xchg
es
push
xor
inc
lcall
bound
push
fnstcw
and
imul
adcb
pop
sbbl
mov
mov
push
adc
pop
push
aaa
push
xchg
or
mov
andb
arpl
and
mov
and
add
and
xor
std
cmp
ljmp
fdivs
mov
jmp
mov
gs
dec
push
pop
xor
mov
mov
daa
add
scas
daa
sahf
lcall
pop
mov
sbbb
out
inc
cltd
iret
and
mov
insl
out
add
mov
ja
dec
mov
add
popa
mov
insl
out
add
mov
fidivrl
mov
add
inc
stc
fs
mov
inc
stc
pop
adc
and
and
cmp
andl
notb
daa
negl
in
mov
or
xor
mov
pop
leave
xchg
out
lea
add
int
xor
jl
mov
jbe
stc
jmp
and
int
mov
pop
inc
xchg
mov
sahf
add
insl
push
call
xchg
out
add
jmp
clc
gs
test
mov
lea
inc
int3
sahf
mov
cmp
fwait
inc
or
sbb
shld
xchg
mov
xor
aas
and
xchg
jg
jmp
test
add
mov
mov
test
divb
pop
incl
sbb
cmpsl
mov
and
mov
add
sbb
jmp
push
add
jmp
mov
or
push
cltd
ja
frndint
popa
pushf
shl
idivl
and
add
add
popf
xor
inc
sbbb
dec
sbb
xorl
jle
mov
dec
addl
mov
inc
sbb
and
cld
leave
mov
or
mov
dec
and
pop
cs
sbb
sub
inc
lds
mov
clc
xchg
jns
gs
jno
and
fwait
cmpps
inc
jbe
mov
loope
xchg
stos
or
xchg
push
fdivrs
inc
push
pop
or
mov
inc
or
mov
ljmp
or
andb
add
inc
les
xchg
rorl
ljmp
inc
pop
pslld
add
adc
testb
loopne
paddq
lea
jg
mov
add
add
lea
or
and
fadd
cli
mov
or
jecxz
mov
push
xchg
cwtl
andl
or
lea
imul
add
or
pop
lahf
inc
cli
fs
mov
adc
adc
lret
mov
in
loop
clc
out
loopne
inc
sbb
movsb
insl
mov
sahf
cmp
pusha
add
pop
clc
mov
jo
icebp
add
mov
adc
test
divb
adc
test
clc
in
test
divb
adc
repz
jmp
test
mov
add
push
and
leave
push
push
fcoms
mov
mov
jmp
add
pushf
push
push
call
mov
mov
jl
jmp
pop
mov
cmp
aam
mov
mov
incl
fdivs
sar
mov
adc
mov
or
adcb
adc
mov
cmp
sahf
mov
add
mov
cmp
xor
and
xor
jnp
mov
mov
ret
negb
adc
sbb
and
mov
es
add
mov
and
add
pop
frstor
pop
xor
and
xor
mov
mov
add
inc
rorb
xchg
or
cmc
xchg
inc
mov
and
adc
jg
inc
jmp
inc
shr
add
leave
in
ret
in
mov
push
mov
out
repnz
enter
sarb
jbe
xor
stos
pop
pop
loopne
pop
adc
adc
adcb
pop
adc
mov
lret
out
rclb
pop
jle
iret
mov
loope
fiaddl
push
pop
or
adc
cwtl
jmp
rcll
mov
inc
stc
jmp
mov
mov
mov
clc
pop
add
nop
mov
repnz
inc
jmp
xchg
mov
ljmp
add
lea
mov
pop
stc
dec
pop
add
insb
adc
stc
ds
notl
mov
ds
jb
outsb
push
call
mov
mov
add
and
rcrb
and
vmwrite
pop
insb
addr16
mov
mov
pushl
pop
mov
jae
add
push
jp
sub
mov
push
fs
mov
pop
xor
incl
ret
pop
rolb
sbb
rcrb
and
in
push
mov
or
stos
dec
jbe
scas
jge
mov
mov
roll
scas
pushf
testl
pushf
add
xchg
cld
fnstcw
add
mov
push
add
mov
fwait
inc
mov
and
add
pop
sub
cld
fiaddl
add
fyl2x
fwait
and
xor
pop
xor
cmp
roll
inc
mov
sar
daa
sbb
and
xor
aam
jb
add
inc
mov
and
add
je
scas
stos
add
test
loope
jmp
mov
fucomip
add
mov
add
mov
jne
fcmovbe
or
loop
dec
cmp
rcr
mov
add
fucomip
add
jg
rcrl
mov
cltd
add
mov
add
scas
sub
clc
push
xor
aas
jmp
dec
xlat
push
xchg
insl
fucomip
add
addr16
add
push
in
dec
cmp
stc
insb
int
jg
mov
stc
push
pop
or
movsl
mov
mov
jno
stc
jmp
sar
cmp
sti
push
fs
add
add
lea
or
push
push
call
and
aas
jg
push
or
push
pop
insl
dec
aas
jmp
mov
push
call
push
cmp
testl
call
and
cmovno
pop
insb
aaa
mov
mov
insl
clc
jmp
mov
push
add
adc
add
xchg
dec
mov
dec
mov
add
lret
call
xor
test
clc
cli
roll
sbb
push
fs
faddl
inc
xchg
dec
mov
stos
xchg
add
pop
inc
add
mov
movups
divb
xor
sarl
xor
and
add
fstpt
and
leave
mov
adc
xor
add
push
cld
adc
xor
inc
fdivrp
fwait
and
xor
add
sub
add
insb
into
xor
mov
data16
mov
ret
jle
pop
add
mov
insl
fucomip
add
mov
sub
or
cs
inc
cmpsl
daa
ret
int
or
ja
mov
add
cmp
std
add
jmp
sti
vcmpps
inc
jnp
addr16
or
cmpsl
push
push
adc
icebp
xchg
xlat
mov
xchg
iret
stos
loop
xchg
es
and
add
or
sub
add
ja
cmp
jle
mov
pusha
shrl
lret
lods
jno
test
mov
ret
jmp
mov
in
or
cmp
fmulp
add
adc
mov
movsl
std
add
cmp
push
inc
into
pop
cltd
int3
pop
push
cltd
lret
cwtl
ret
std
add
mov
filds
jmp
dec
adc
repnz
or
fstps
rorb
add
loope
and
ror
pop
add
mov
and
adcb
imul
mov
mov
inc
mov
jecxz
add
xor
pusha
ror
add
sbb
add
popl
add
mov
lret
jno
jmp
push
push
iret
addb
divb
mov
jmp
inc
or
dec
jne
andb
lea
test
jmp
inc
and
dec
flds
cmpsl
inc
jne
mov
je
or
repz
decb
add
mov
fildl
add
push
fsubrl
jae
lods
cmp
mov
and
stc
cmpl
mov
add
mov
into
cld
rorl
add
dec
dec
adc
aam
lret
cld
add
jg
dec
pop
mov
lcall
loop
decl
in
sar
add
push
jge
jmp
mov
and
add
and
ret
jo
cmp
jbe
outsl
stos
add
mov
out
sarl
pop
dec
push
adc
or
xor
movsb
mov
add
lods
add
or
out
lods
add
lods
add
lods
add
or
add
or
add
or
and
sub
add
or
mov
sbb
sub
mov
sub
or
mov
jns
xchg
adc
sub
xchg
mov
jecxz
test
mov
mov
lea
mov
mov
lea
lea
cmc
mov
test
pop
lea
lea
mov
xchg
add
sub
fmuls
cmpsb
out
mov
mov
cmpsb
vpmadcsswd
jle
nop
jns
push
jp
popl
jnp
or
seta
mov
xchg
out
test
fs
mov
jnp
mov
mov
mov
mov
mov
out
or
testb
movsl
popw
add
das
testl
daa
cmp
sub
hlt
adc
ljmp
cmp
sbb
inc
and
insb
inc
and
add
and
dec
sbb
ja
push
daa
addr16
sbb
cs
clc
cmp
xor
xor
aas
adc
cltd
push
or
xchg
sub
cmp
pop
add
call
add
loopne
inc
dec
in
add
je
decl
sub
mov
sub
test
sbb
sbb
add
add
aas
add
add
add
add
push
sub
ret
add
add
add
sbb
and
sub
pop
sbb
outsb
sbb
lods
push
lods
add
push
lods
add
sbb
lods
add
sbb
lods
add
pop
lods
add
pop
lods
add
lods
add
lods
add
pop
lods
add
pop
lods
add
push
add
lea
add
sub
in
sub
dec
lcall
inc
lcall
mov
xchg
sub
jge
sub
rcrl
sub
mov
jb
outsb
inc
call
mov
or
add
mov
push
addr16
add
outsl
dec
call
mov
push
add
out
add
aas
mov
sub
mov
and
mull
jae
imul
mov
mov
or
mov
clc
jmp
das
popf
and
mov
add
xchg
add
mov
dec
jo
add
pushf
scas
inc
out
mov
mov
sub
cmp
pop
mov
sub
mov
dec
sbb
mov
add
add
loope
push
dec
je
inc
push
ja
int3
sub
xchg
jle
xchg
xchg
je
cmpsl
andb
and
mov
inc
mov
mov
ss
lods
xchg
xor
push
or
or
out
decl
fs
iret
fiaddl
sub
xor
mov
dec
shl
mov
rolb
pop
out
mov
add
and
xchg
mov
jb
loope
push
fnstenv
sbbb
dec
add
add
pop
pop
pop
jno
jmp
adc
mov
lods
pop
jmp
mov
call
insl
imul
add
add
icebp
mov
add
bnd
sbb
mov
mov
xchg
or
push
addr16
pusha
push
insb
xchg
lea
jmp
stos
inc
mov
cmpsb
sbb
lea
aas
icebp
int3
daa
sbb
or
jmp
xchg
insb
shlb
jg
lea
or
push
push
orb
dec
ret
xchg
subl
imul
dec
daa
sbb
inc
push
add
cs
jmp
jle
enter
add
lea
ds
add
xchg
add
add
add
add
pop
jl
scas
and
mov
add
cmpsl
mov
pushl
inc
mov
test
and
jbe
cmp
mov
imul
mov
faddl
jmp
test
mov
jmp
add
mov
jne
push
push
mov
ret
add
mov
jmp
cmp
inc
sahf
or
mov
mov
dec
or
and
es
and
adc
and
cmp
push
add
add
xor
arpl
imul
add
mov
dec
test
add
mov
add
sub
mov
add
sbb
push
jnp
faddl
pop
jmp
mov
adc
xchg
inc
and
mov
add
mov
dec
mov
inc
jbe
movl
add
rolb
out
gs
xchg
or
adc
mov
mov
mov
int3
icebp
mov
add
lock
call
std
insl
gs
push
inc
inc
add
into
mov
hlt
adc
jmp
pop
mov
adc
in
mov
mov
orl
mov
sub
pop
pop
mov
arpl
lea
test
mov
stc
jmp
sbb
pop
ds
or
jmp
shrl
stc
jmp
xchg
add
int
add
lds
mov
jge
add
mov
lea
mov
xor
lea
out
pop
add
mov
addr16
lea
sub
push
mov
minps
out
sub
jae
adc
add
adc
cmp
and
je
test
sub
mov
addl
ja
loope
xor
stc
mov
xor
je
adc
sets
and
loopne
or
bound
sub
adc
sbb
call
out
lret
pop
sub
lret
pop
adc
rcrl
inc
jo
test
popl
add
mov
and
mov
add
add
enter
xor
mov
push
adc
mov
nop
cmpsl
stc
xor
mov
fildll
lret
ljmp
or
pushf
pop
and
lods
sub
lods
xchg
and
xor
sbb
mov
mov
inc
sub
cmp
adcb
sahf
int
xchg
cmp
pop
adc
mov
add
outsb
gs
jb
jne
jbe
mov
push
iret
mov
mov
push
mov
stos
sahf
into
add
inc
xor
cmp
mov
add
mov
add
fadd
lar
mov
lds
mov
lock
outsl
bound
inc
jmp
dec
cwtl
pop
enter
inc
cmpsl
and
jmp
mov
test
add
sarl
js
jmp
xchg
mov
push
insb
out
lea
add
lea
orb
mov
mov
xchg
xorl
fwait
insb
insb
mov
daa
repnz
lea
pop
int
int3
pop
cmpl
cmp
in
inc
adc
or
xorb
lea
add
sub
jb
sbb
sub
sbb
cmp
jne
sub
repnz
sub
add
ja
inc
dec
fdivl
lods
push
and
mov
inc
push
sbb
or
add
and
or
sbb
je
icebp
pop
pop
and
adc
mov
and
add
outsb
mov
test
pop
xchg
call
into
sbb
cmp
mov
add
dec
and
mov
cwtl
jmp
mov
mov
cmp
jnp
inc
add
lcall
enter
adc
jmp
add
ds
xor
movsl
imul
pop
xor
xchg
xrelease
pop
popa
mov
out
std
loop
mov
mov
in
push
push
mov
inc
mov
jae
mov
add
mov
add
mov
cmpsl
mov
adc
cld
and
mov
adc
rol
jecxz
dec
ljmp
mov
push
imul
add
daa
bound
repnz
cli
loope
repnz
adc
jmp
mov
cmp
add
inc
jmp
mov
testb
mov
movsl
sbb
outsl
and
xor
add
imul
clc
and
or
pop
jbe
cmc
pop
mov
adc
mov
adc
sarl
or
stc
jmp
pop
clc
pop
cmp
and
dec
int
adc
ret
add
dec
outsl
outsl
fcompl
pmovmskb
lea
aas
or
mov
ja
mov
mov
bound
adc
int3
out
pop
xchg
add
negl
or
aam
jns
addr16
je
in
bound
sbb
iret
pop
and
jae
cmp
outsl
pop
mov
pop
add
mov
mov
aaa
adc
and
idivb
nop
xlat
xor
or
mov
inc
icebp
cmp
or
inc
jno
mov
gs
mov
insb
mov
jne
xor
add
mov
add
push
adc
mov
cmpl
cld
add
pop
ficomps
pop
hlt
lcall
addl
mov
decl
xor
add
jno
xchg
nop
jg
inc
xor
adc
add
jmp
mov
call
jle
and
mov
and
xor
or
lds
je
inc
and
std
cmp
filds
mov
mov
filds
cli
mov
daa
mov
jmp
add
scas
lds
mov
outsl
call
mov
push
andl
inc
or
insl
mov
or
mov
dec
cmp
xchg
das
or
inc
loopne
adc
imul
jmp
adc
mov
insl
stos
jmp
mov
cmc
jle
push
lds
fucomi
add
mov
mov
cmp
test
aaa
or
out
shlb
jmp
mov
xor
out
cwtl
inc
jmp
fcoml
inc
int
and
sbb
pop
mov
stc
jb
mov
out
xchg
mov
cmp
mov
add
lea
test
outsb
popl
push
lea
add
adc
push
ljmp
out
adc
add
lea
lds
or
aad
mov
fs
sbb
push
add
out
cmp
add
push
mov
test
testl
or
adc
cld
out
test
add
iret
pop
idiv
push
shll
ja
addb
add
add
clc
je
mov
xorb
and
inc
daa
push
mov
imul
sbb
mov
add
test
push
push
push
jp
dec
push
notb
mov
pushf
xchg
dec
xor
adc
cmp
or
scas
dec
push
cmp
sbb
or
dec
loope
pop
loopne
inc
jg
sub
add
cltd
push
and
pop
jl
add
pop
decb
dec
adc
jno
add
popw
jno
xorl
xor
xchg
inc
test
scas
inc
dec
pop
test
add
test
cltd
cli
orb
scas
jl
xlat
inc
mov
jne
add
shrb
int
mov
add
das
sti
add
mov
add
mov
add
mov
mov
out
inc
mov
cmpsl
decl
loopne
out
sbb
test
add
mov
jb
cmpb
ficoml
xor
add
sbb
inc
mov
xor
lahf
or
mov
pop
push
adc
clc
ss
pop
frstor
mov
xor
add
lea
push
jo
mov
mulb
or
cmc
fstpl
pop
aaa
leave
pushf
mov
stos
dec
sbb
jb
jmp
popl
jmp
fs
stc
jmp
jo
mov
add
push
mov
mov
cld
and
fcmovbe
adc
not
push
sub
add
dec
mov
mov
pushf
inc
or
out
stc
pushl
mov
push
movsb
ret
cmp
testl
mov
addr16
outsl
and
jo
and
jbe
add
mov
pop
adc
hlt
xor
aaa
lcall
daa
push
call
lea
mov
jg
cmp
add
or
add
and
jnp
movsl
pop
xor
lahf
add
ror
add
mov
test
mov
add
and
test
add
add
mov
jp
mov
popf
mov
dec
adc
dec
mov
xchg
or
mov
cmp
arpl
ret
xchg
mov
js
sbb
ljmp
push
mov
lahf
rol
mov
hlt
mov
test
jle
add
pop
push
inc
mov
push
aaa
xchg
mov
cltd
push
and
gs
ds
mov
mov
sbb
add
fisttps
sub
jae
push
jae
scas
jl
sbb
add
sub
mov
push
das
cltd
or
dec
xor
or
add
sbb
loop
pop
add
cli
in
int
icebp
dec
add
fdivs
adc
pop
pusha
mov
in
jecxz
sbb
pop
dec
pop
push
inc
jle
push
xchg
in
pop
fisttpl
pop
pop
push
icebp
lea
mov
popf
add
inc
add
mov
into
rorl
lods
into
jnp
and
mov
lea
adc
aad
stos
pusha
add
mov
jb
xorl
addr16
adc
int3
add
and
scas
add
add
daa
movb
mov
dec
add
fisttps
or
mov
or
push
add
ret
mov
je
push
jl
mov
or
or
stc
ljmp
and
js
fimull
cmpsb
loop
mov
repnz
ficomps
adc
lock
jbe
insb
jbe
jb
jns
mov
mov
into
and
mov
mov
pop
setp
mov
ja
mov
flds
das
sub
add
jecxz
mov
sub
mov
mov
add
jne
push
std
add
xlat
cld
cmp
or
cltd
cmp
mov
sub
jecxz
adc
hlt
push
push
jns
fsubrs
add
and
mov
mov
jl
and
jp
outsl
push
jnp
outsl
out
inc
push
jmp
into
lahf
fistpll
jnp
or
mov
add
lret
mov
pusha
add
mov
ret
sbb
cmovae
out
jge
mov
jnp
and
lret
dec
sarl
jns
push
cmp
mov
mov
mov
add
mov
cltd
idivb
xchg
jmp
pop
add
pop
add
mov
mov
xor
test
and
adc
call
lret
sub
orb
lea
add
xchg
mov
out
xchg
mov
mov
inc
test
inc
fldcw
adc
pop
je
mov
iret
addb
pop
add
bound
pop
lahf
xor
pop
fnstenv
js
stos
int3
outsl
push
lahf
or
and
jns
add
in
add
scas
adc
add
push
pop
sbb
xor
add
sub
dec
fistl
je
push
inc
je
or
add
les
mov
jp,pn
daa
mov
andb
idivl
sub
inc
xlat
or
add
pop
mov
pop
clc
pushl
outsb
add
shrl
mov
clc
add
adc
xor
js
add
adc
mov
ret
ret
lods
inc
and
in
or
mov
push
adc
pop
sahf
jae
sub
es
mov
mov
fidivs
dec
std
push
inc
mov
sahf
push
xchg
imul
and
fldcw
and
inc
rorl
popf
cmp
or
and
dec
mov
mov
ds
sbb
add
fsubrs
cwtl
orb
arpl
add
out
dec
sbb
sbb
lods
adcb
mov
fldl
iret
int3
jnp
mov
sbb
add
mov
xchg
dec
add
mov
inc
mov
sub
sbb
add
dec
and
add
sbb
ret
adc
mov
add
add
mov
insb
outsl
add
aaa
stc
cltd
jg
icebp
mov
xchg
roll
or
sub
dec
in
sbb
mov
add
into
sti
sbb
inc
shll
es
pop
faddl
in
negl
xchg
mov
dec
test
add
adc
add
mov
add
jb
mov
mov
orb
lcall
mov
dec
imul
push
mov
test
mov
push
sbb
add
call
in
in
in
mov
inc
sub
ja
inc
add
and
loope
dec
xchg
mov
pop
fdivl
divb
push
call
clc
adc
testl
jbe
insb
mov
aaa
call
jb
imul
popa
ss
fadd
lret
lock
mov
add
mov
adcb
add
push
mov
and
aad
aad
filds
pop
ja
test
pop
mov
loope
pop
aad
add
call
jge
mov
jmp
inc
popf
subb
mov
jl
push
pusha
push
xchg
adc
mov
adc
adc
test
cmc
add
addr16
mov
arpl
jb
mov
out
add
mov
addr16
add
add
inc
mov
mov
stos
out
stc
lahf
or
ja
push
mov
jecxz
inc
rcll
int
repnz
lea
call
pop
inc
add
add
iret
incb
adc
insl
int
add
call
jmp
scas
add
cmpsl
mov
cmpsl
lret
add
addr16
iret
add
add
pushw
push
or
push
adc
sub
mov
dec
or
stc
jmp
add
leave
pop
cltd
cmpsl
test
push
ss
sub
es
pop
jo
addr16
jo
addr16
shll
add
pop
add
add
dec
push
fs
outsl
or
add
je
das
pop
and
outsb
and
sbb
pop
push
pop
arpl
jmp
inc
push
dec
insb
or
movntps
jne
add
decl
inc
add
addr16
mov
dec
lea
and
push
repnz
or
pusha
add
je
xor
cmp
push
pusha
jae
sbb
mov
pop
lea
inc
push
dec
aaa
or
loopne
mov
and
cmc
inc
and
push
je
test
dec
and
jb
push
inc
cmpsl
push
and
or
add
leave
movsb
mov
jb
add
add
loopne
ds
xor
lahf
push
and
lret
xchg
pop
mov
jne
mov
movsl
lea
insb
stos
and
imul
cld
and
push
inc
mov
and
hlt
xchg
mov
jl
add
hlt
xchg
mov
je
add
hlt
xchg
jae
nop
mov
mov
lods
add
jmp
push
fisttps
mov
add
nop
jne
pop
imul
sarb
push
and
lret
mov
mov
shl
pop
pop
mov
pop
sub
out
mov
add
and
mov
sub
xchg
sbb
mov
lea
stc
or
or
dec
or
mov
push
pop
pop
inc
push
cmp
mov
ljmp
scas
das
cmpsb
dec
scas
xor
lea
movaps
cltd
mov
push
lds
jmp
roll
jmp
lea
pop
adc
pop
jmp
mov
pop
into
scas
and
or
mov
add
or
jb
or
push
int
pop
push
pop
into
scas
pop
cmp
xlat
jmp
jmp
adc
rorl
add
aaa
adc
jmp
xor
mov
enter
loopne
add
and
add
pop
clc
mov
je
idiv
jno
repz
sbb
ret
sbb
call
add
pop
and
adc
and
mov
mov
iret
popf
in
ja
jmp
xor
lea
dec
mov
mov
ret
xchg
subb
pop
and
adc
and
sahf
mov
mov
dec
push
cmpsl
pop
cmp
add
ret
out
inc
add
adc
xchg
xchg
push
insb
dec
and
or
testb
xacquire
stos
cmpsl
dec
fdiv
add
push
into
mov
jmp
outsl
cmp
inc
inc
sar
cmp
mov
add
mov
decl
fs
decl
aaa
in
mov
pushf
xor
enter
sahf
ja
clc
mov
imul
mov
cmp
jbe
or
loope
adc
xchg
lret
mov
arpl
adc
or
popa
lcall
arpl
cli
adc
nop
jmp
jno
xchg
adc
sbb
cmpsl
test
movntps
mov
outsl
ds
pop
addr16
mov
push
pop
ret
cld
notb
ds
mov
or
pop
ret
add
test
cwtl
jnp
xchg
dec
xlat
cmp
push
out
rclb
jo
mov
inc
pop
pop
fcmovne
call
movsb
ret
xor
mov
dec
add
adc
xchg
insl
adc
insb
sbb
sub
fwait
add
jle
dec
add
fiadds
add
leave
imul
xor
add
push
push
or
jo
fwait
mov
decl
repnz
mov
mov
xor
cli
xor
addb
mov
push
iret
xchg
cmp
or
sbb
add
enter
inc
in
or
fincstp
inc
enter
rol
out
push
mov
mov
cli
add
xor
add
test
mov
sbb
inc
mov
scas
lret
add
stos
sbb
arpl
mov
cmp
loope
cmc
lods
test
mov
sbb
xchg
stc
in
xor
pop
call
mov
sar
add
out
pusha
into
repnz
mov
or
and
hlt
or
inc
testb
popf
sub
xor
pop
mov
fyl2x
push
and
lods
sbb
cmpb
dec
repnz
sbbl
int3
pop
xor
inc
xor
and
add
jg
xchg
add
push
add
push
add
push
add
mov
jmp
or
jmp
int
push
xor
pop
rcl
dec
add
sarb
xchg
pop
leave
sbb
jmp
and
inc
loopne
jne
xchg
xor
aas
stos
mov
xchg
mov
dec
ljmp
add
addb
add
jg
pop
jb
out
cmp
cmpsl
filds
dec
repnz
or
pushw
add
mov
adc
imul
dec
cmpsb
cmp
inc
stos
jo
jg
cmp
xor
add
lods
add
mov
mov
jmp
mov
jle
push
stos
add
or
push
or
mov
aas
add
cwtl
add
sahf
adc
addl
inc
mov
push
sbb
hlt
and
cmpsl
psrlq
jmp
jg
jbe
clc
add
dec
add
cmpsl
mov
lds
lds
je
or
add
add
ss
add
adc
mov
ljmp
add
xor
stc
ljmp
push
push
jo
xor
sbb
add
repnz
adc
test
cltd
sbb
dec
fistps
test
mov
pop
and
xor
out
jne
out
sarl
pop
mov
orl
dec
add
test
lret
cmp
jle
jbe
dec
cld
fstpl
ds
inc
jg
mov
insl
inc
or
cs
adc
jmp
imul
push
pop
insl
pop
xchg
cld
or
add
scas
xchg
dec
add
or
mov
iret
les
cmpsl
fwait
mov
add
popa
mov
xchg
or
out
int3
negl
xchg
js
test
fwait
out
mov
fwait
mov
xchg
fwait
sbb
lret
ja
cmp
inc
in
push
incb
and
xchg
jl
sti
inc
mov
loop
out
mov
nop
jl
ret
jmp
add
incl
jge
pop
sbb
lea
aad
pop
push
jb
push
mov
popf
adc
cli
dec
insl
jmp
mov
leave
cmpsl
sub
mov
inc
jmp
or
aaa
bound
mov
xor
in
out
add
stos
bound
add
cmpsl
pop
popa
into
cmpsl
and
push
fsubrl
je
insl
jmp
popa
clc
gs
fcmovne
pop
pop
sub
or
add
enter
icebp
addl
lea
mov
cmc
test
cmp
dec
push
fidivl
into
cld
mov
mov
test
cmp
cmp
add
in
cmp
xor
or
test
push
mov
or
add
xor
loope
aaa
mov
mov
adc
je
adc
jns
mov
or
out
or
movsb
add
fdivs
decl
xchg
repnz
or
dec
jb
jbe
or
popf
push
add
repnz
dec
sbb
ret
pop
mov
or
aaa
das
push
add
movsl
in
adc
in
sbbb
in
add
test
mov
decl
cmc
jg
mov
add
nop
stc
or
roll
mov
stos
fstpl
pop
int
sbb
add
sbb
pop
add
adc
cld
adc
mov
sub
rorl
mov
inc
add
push
in
mov
scas
not
add
xchg
jne
mov
bound
xchg
fnstsw
mov
fnstsw
inc
mov
cltd
popf
cltd
jne
adc
in
in
mov
shlb
je
lret
add
mov
xchg
icebp
lea
inc
vpsubw
push
ja
cmc
lea
mov
mov
dec
mov
fstpt
popf
pop
push
cld
add
outsb
push
pop
push
testl
jmp
addl
je
idivl
jns
push
pop
shl
push
xchg
mov
aas
cmc
jl
xor
cmp
test
jne
ja
jle
arpl
sbb
add
inc
loop
sbb
cli
xor
shl
clc
clc
pushf
or
hlt
setbe
lret
rorb
dec
out
push
sub
notl
and
je
hlt
xor
inc
div
ss
add
inc
ja
stc
ljmp
mulb
flds
add
xor
mov
mov
sub
stc
ljmp
push
mov
in
loopne
loop
add
pop
shlb
imulb
or
add
mov
lea
outsl
jae
leave
or
cld
mov
ret
cld
test
jp
jb
pop
sub
popa
add
xchg
or
jns
jnp
push
dec
test
imul
inc
push
loop
jb
imul
add
add
pushl
loop
inc
lcall
add
lret
or
jge
add
les
jne
popl
adc
imul
add
arpl
insl
cwtl
mov
jg
jg
jge
fimull
mov
add
movntps
push
add
sbb
rcrl
mov
fwait
jecxz
jmp
adc
scas
fstl
jb
pop
mov
gs
mov
mov
ret
pushf
add
lea
les
add
stc
inc
into
inc
jno
in
sbb
add
fs
jnp
jb
out
out
int3
lea
out
lea
int
int3
push
pop
inc
adc
add
ss
js
lods
lahf
lea
add
add
and
jmp
clc
idiv
pop
leave
scas
pop
call
int
outsl
out
enter
idiv
mov
rcrb
pop
divb
sub
call
add
mov
mov
addl
pop
adc
dec
pop
and
jno
add
dec
pop
xor
xchg
add
inc
and
jbe
and
js
and
mov
add
sub
jmp
ret
mov
lock
fwait
jl
pusha
pop
pop
loopne
or
dec
mov
mull
dec
pop
sub
sbbl
pop
or
jne
jb
or
or
adc
je
adc
loop
aam
jecxz
mov
lods
jb
mov
jecxz
xchg
xchg
call
mov
mov
out
sub
pop
xchg
xlat
out
ss
pop
out
mov
push
adc
xor
sbb
int3
mov
xchg
lcall
jns
out
repz
call
addr16
jno
jp
mov
pop
pminub
mov
jl
scas
cli
fwait
push
xchg
jmp
or
mov
xor
lret
mov
test
adc
mov
loopne
jecxz
out
hlt
cmp
hlt
roll
fwait
inc
add
mov
addb
loopne
hlt
out
out
popf
dec
ljmp
xchg
jmp
cmpsl
inc
push
cld
sbb
hlt
imul
mov
dec
aad
stos
add
jecxz
mov
cmpsl
fistps
or
add
call
sahf
pop
clc
hlt
or
subb
lea
push
fnsave
mov
pop
push
cmpsl
sbb
stc
fidivs
in
push
stos
mov
pop
mov
data16
jmp
clc
fs
imul
add
xor
cmp
outsl
and
mov
clc
std
or
ret
push
pop
or
rorl
add
mov
adc
dec
add
fmul
test
and
mov
daa
jae
call
jl
mov
cmc
movsl
add
jno
je
fidivs
adc
mov
ret
int3
mov
ret
and
and
not
mov
xor
outsl
add
mov
mov
push
nop
loope
lea
inc
loopne
or
add
faddl
insb
cmp
add
clc
jb
adc
sarb
pop
les
jnp
pop
pop
cmp
lds
shl
fmuls
adc
add
pop
jp
in
pop
dec
sub
dec
repnz
mov
ja
sub
loop
call
pop
xchg
sub
mov
faddl
mov
pop
dec
lods
inc
push
adc
loop
testb
or
jl
mov
xchg
insl
jns
gs
add
int
add
pop
nop
mov
std
adcb
decb
dec
mov
lea
jns
faddl
or
addr16
adc
jae
add
fwait
sbb
add
loop
cmp
dec
insl
inc
dec
mov
or
in
clc
lods
xchg
and
push
xabort
add
or
mov
lea
sbb
mov
mov
loop
outsb
mov
jno
sti
loopne
pop
je
xchg
jmp
mov
xchg
cmpsl
mov
jnp
jecxz
push
mov
lea
rcrb
or
sub
stc
aam
cmpb
sbb
clc
aam
popf
inc
jmp
or
call
push
out
dec
arpl
out
in
jmp
lret
mov
or
xor
in
or
bound
cld
sahf
mov
nop
mov
or
add
inc
imul
clc
cld
pop
loopne
fimuls
rol
pop
pusha
push
or
mov
fdivrl
pop
and
bound
pop
jo
mov
stos
pop
pop
mov
mov
add
add
mov
add
addr16
jl
xchg
and
mov
loopne
testb
mov
pop
and
mov
push
mov
sbb
mov
xchg
xor
imul
into
hlt
sbbb
in
mov
shrb
out
add
mov
xchg
cmp
jl
inc
add
cld
xor
in
jns
xchg
incl
xchg
dec
jecxz
cld
fwait
dec
adc
mov
and
jecxz
add
in
cs
sbb
inc
mov
sbb
popf
mov
sub
mov
jecxz
add
hlt
jns
fcmove
decl
or
pop
jle
popa
mov
ljmp
in
lods
andl
jno
add
mov
push
add
xchg
addr16
std
dec
push
fnstsw
fimull
sahf
ret
mov
ljmp
mov
add
lea
or
xchg
or
rclb
mov
jb
xor
sub
mov
insl
inc
push
insb
push
add
cli
fcomip
mov
pop
aad
fadds
jmp
lea
sub
or
ljmp
clc
sbb
pop
inc
pop
aad
js
roll
cmp
push
jb
sbb
jb
call
clc
aad
sbb
push
xchg
push
dec
add
shl
xor
ret
imul
mov
and
repz
sub
out
mov
pop
pop
out
add
fildl
jmp
adc
iret
add
inc
sbbl
add
mov
mov
fldcw
mov
imul
add
pushf
ret
mov
repz
mov
adc
jg
repnz
jbe
push
addr16
fadd
or
sub
add
repnz
mov
sahf
test
sbb
jmp
lcall
testl
dec
xchg
loopne
cld
pop
jns
mov
mov
int3
pop
call
cmp
xchg
or
sbb
lock
out
inc
pop
xchg
cmp
addr16
cmp
or
lret
inc
jl
dec
adc
inc
out
push
jl
popf
mov
rolb
jl
dec
jnp
stc
repnz
mov
dec
or
add
call
and
mov
xor
ljmp
mov
add
mov
add
addr16
and
pop
insl
fwait
or
mov
pop
mov
call
mov
int
push
test
mov
jb
cmp
lret
flds
fcoml
push
add
mov
insb
cmp
notl
push
cmp
data16
mov
stc
mov
outsl
mov
fs
and
testb
xchg
jnp
jmp
add
adc
or
mov
outsb
std
add
xchg
repz
and
jp
sbb
outsb
scas
add
sub
adc
into
in
in
or
add
int
in
push
pop
in
cmp
out
jae
adc
inc
je
add
or
std
movsl
ss
pushf
cwtl
adc
xchg
repz
add
addr16
jg
add
cmc
mov
ltr
mov
jmp
testb
ret
lods
adc
dec
cmc
xchg
add
dec
push
aam
push
push
popf
nop
push
push
repnz
pushl
lcall
in
ja
adc
cld
pop
cmp
idivb
push
and
push
and
notl
fsubl
incl
or
adc
ja
mov
test
decl
or
push
sbb
insb
adc
hlt
xchg
adc
sbb
inc
pop
push
negb
push
sub
clc
push
sarl
cmp
in
leave
cld
mov
outsl
imul
in
cld
andl
test
pop
adc
fstl
dec
jmp
push
loope
outsb
cld
fwait
stos
push
inc
mov
call
add
push
fisttps
scas
repz
scas
rcll
adc
mov
jae
sub
adc
mov
mov
sbbb
outsb
pop
pmulhuw
lock
loopne
adcl
hlt
mull
lcall
pop
pop
incb
adc
push
int
xchg
cmp
add
in
add
pop
mov
clc
fiadds
mov
out
into
push
testb
push
push
or
bound
jns
ljmp
stos
add
mov
jp
inc
out
test
bound
mov
push
test
jb
in
ret
pop
lea
mov
orb
jnp
cld
in
xchg
sahf
iret
mov
push
cmp
fcomp
adc
lcall
sub
xchg
adc
mov
push
xchg
mov
clc
jle
and
or
pop
into
push
insl
ja
jmp
inc
adc
lods
iret
mov
add
adc
push
mov
cmp
loopne
test
repnz
sub
adc
pop
mov
or
ja
jmp
jb
inc
testl
add
mov
mov
notb
dec
and
adc
or
imul
dec
lea
fistpll
jne
out
mov
gs
ret
test
mov
or
shr
pop
aas
out
push
add
loope
inc
add
in
aad
popf
repnz
or
clc
out
xchg
add
int3
out
push
adc
stc
addl
pop
imul
jle
incl
pop
and
fdivp
add
mov
outsl
je
mov
idivl
mov
push
add
jne
xchg
or
insb
sahf
mov
orb
mov
mov
ss
loope
outsl
bound
push
into
mov
inc
fcoml
xchg
pushf
xor
cmpsl
xchg
sub
adc
mov
push
aam
das
push
pop
mov
fcmove
inc
push
adc
inc
sti
ret
jmp
fistl
push
push
and
inc
cmp
sbb
sub
loopne
jae
dec
ljmp
int3
aaa
jg
or
pop
add
cmp
aaa
addr16
add
scas
adc
hlt
pop
nop
inc
jmp
push
dec
negl
mov
loopne
sub
mov
movsb
popf
push
xor
aaa
inc
push
pusha
push
hlt
shrb
fimuls
lea
pop
and
ret
cmp
loope
clc
hlt
in
popl
adc
jo
jge,pt
fcmovne
fisttps
ja
or
clc
adc
fisttps
cltd
orb
dec
aas
pop
add
dec
push
xchg
pop
inc
clc
xchg
mov
pop
out
or
push
mov
pushl
pop
inc
cld
add
mov
jne
pusha
jbe
adc
mov
jecxz
inc
add
dec
cld
push
je
sbb
loope
mov
pop
jb
cld
push
rcl
push
dec
xchg
divb
pop
adc
test
cmp
mov
lret
not
mov
int3
add
mov
sahf
mov
orb
jg
hlt
and
mov
add
xchg
hlt
xor
mov
inc
mov
icebp
ja
es
je
movsl
adc
jl
add
sarb
imul
mov
push
in
xor
or
pop
push
dec
mov
mov
into
lahf
jnp
mov
into
xchg
or
into
mov
add
clc
stos
cmp
fdivl
mov
jnp
data16
lods
addr16
adc
add
push
sub
js
add
enter
cmpsl
or
xor
ljmp
addr16
enter
clc
lods
pop
outsl
enter
fsubr
pop
pop
ss
mov
inc
push
fstps
out
jns
add
int3
dec
cmp
jne
adc
dec
add
jbe
clc
cld
sbb
jmp
jg
outsl
lds
dec
add
fildll
popf
bound
sbb
lcall
inc
lret
adc
cwtl
pop
fwait
icebp
insb
inc
loopne
sbb
lea
movsl
adc
cmp
mov
loop
jae
fisttpl
jp
add
or
adc
sbb
outsb
in
pop
or
xchg
fdivrp
add
popa
dec
cld
cmp
loopne
movl
sub
mov
cmp
out
lret
and
inc
push
inc
add
inc
test
dec
adc
add
push
push
add
mov
imul
inc
addl
clc
push
js
mov
pushf
ret
and
mov
pop
test
popl
add
pop
test
add
jl
and
adc
lea
dec
mov
and
pop
pusha
rcrb
mov
inc
jb
xor
xor
loope
push
nop
sbb
sub
clc
jp
incl
add
aam
rcl
sbb
test
sbb
je
xlat
xchg
and
add
in
add
clc
and
and
mov
mov
or
mov
add
roll
inc
push
sar
in
jnp
and
jbe
decl
movsb
lock
add
in
aad
mov
jbe
mov
push
scas
or
add
xchg
shl
jg
push
pop
fcmovbe
cmpsl
jg
ljmp
push
lahf
enter
rclb
call
sbb
jns
out
sti
fistpll
add
imul
into
mov
fldl
cld
ret
dec
push
mov
inc
push
into
fiadds
fldl
test
push
push
aam
fdiv
adc
or
add
cmp
test
jbe
clc
push
mov
add
mov
mov
mov
xlat
clc
shll
jo
fstp
lret
stos
pop
lret
lret
add
push
lea
cmp
xlat
clc
pop
inc
adc
bound
lea
push
push
pop
in
out
jecxz
jmp
add
or
push
jle,pn
pop
lea
dec
test
add
or
daa
mov
loope
clc
pushl
sbb
pop
test
mov
add
push
xchg
mov
popa
imul
cld
mov
std
mov
ss
fidivs
rolb
cli
pop
call
shlb
iret
clc
mov
ljmp
add
push
call
in
or
dec
xlat
stc
jmp
pop
test
dec
mov
fs
inc
xor
repz
je
lret
push
or
lods
imul
mov
xor
xchg
in
dec
mov
fcos
adc
stc
mov
pop
insb
cld
add
cwtl
cmpsl
les
add
and
cmc
imul
flds
or
mov
xchg
popa
cld
jno
adc
shrb
scas
mov
sbb
push
js
dec
out
mov
es
inc
ljmp
imul
iret
mov
mov
leave
adc
imul
cld
xorl
out
xchg
jbe
push
aas
andb
rcr
ss
addb
fidivs
into
xor
jnp
int
aam
mov
add
sbb
xor
cmp
pop
and
mov
rclb
push
fcoml
pop
ficomps
pusha
ljmp
lret
push
pop
or
lcall
rolb
add
xchg
jmp
xchg
add
enter
lea
lock
ss
sub
aam
jb
add
or
or
mov
jb
aam
cmp
mov
sahf
mov
daa
bound
outsl
lds
pop
pop
in
lds
fcmovnbe
int
fcmovnb
add
mov
mov
pop
pop
loope
in
sti
je
clc
add
add
push
jo
insb
mov
xchg
ds
xchg
adcl
clc
xor
mov
sub
add
push
jmp
add
adc
or
jecxz
mov
ss
mov
mov
imul
mov
mov
add
mov
add
clc
xbegin
in
in
adc
nop
push
jge
fcompl
jg
je
in
or
xor
dec
add
add
mov
xchg
xchg
jp
xchg
pop
mov
imul
andl
movsl
call
add
pop
jne
pop
scas
push
loope
or
repnz
add
add
jecxz
pop
es
lcall
push
xorb
rcll
insl
insl
cmp
jno
scas
pop
cmpsl
mov
add
shl
cmpl
jmp
or
mov
jne
adc
neg
cmp
and
mov
push
dec
in
test
jne
pop
push
adc
ljmp
movsl
xor
pop
cmpsl
jle
andl
dec
cmp
mov
mov
inc
mov
push
lock
shrb
hlt
mov
mov
test
sub
jecxz
add
adc
repz
stos
adc
std
add
lea
mov
push
aas
dec
inc
imul
add
adc
lods
push
pop
jb
test
mov
lods
push
dec
adc
xor
jmp
adc
jmp
lea
inc
lea
iret
jo
sbb
fsubp
mov
sub
lock
insl
dec
pop
cmp
mov
data16
ret
sbb
inc
shll
or
add
jp
decb
addr16
cwtl
pop
mov
inc
dec
into
mov
pop
lods
arpl
aaa
mov
mov
sbb
push
adc
inc
and
mov
fldenv
cli
xchg
mov
idiv
fld
adc
insb
ret
or
jns
sbbb
push
adc
int
je
je
or
push
add
mov
lea
mov
arpl
jbe
cmp
mov
mov
fdivr
jb
pop
test
mov
add
add
and
jmp
pop
push
out
in
add
and
mov
sbb
lds
imul
pop
mov
push
das
xchg
mov
add
pop
shlb
add
daa
and
cld
rcr
jl
dec
in
rcrb
mov
imul
test
dec
xor
cmpsb
int3
orl
mov
xchg
fmull
imul
ljmp
cwtl
outsb
testl
cmpsl
out
mov
push
pop
push
add
sub
add
dec
and
mov
insl
inc
mov
subl
mov
jbe
xor
rorl
mov
subb
ljmp
pop
rorb
cli
lret
ss
stos
orb
mov
and
inc
jmp
push
test
add
add
pop
arpl
adc
add
lea
inc
add
push
dec
pop
or
bound
inc
inc
jns
aam
js
jmp
or
pop
add
fisubrs
push
add
clc
push
pop
or
pop
shll
jmp
pusha
pop
push
jb
inc
clc
sub
jns
add
enter
shll
test
mov
xlat
add
pop
sbb
je
or
add
xor
clc
inc
addr16
packsswb
add
scas
push
test
incl
adc
sub
sbb
mov
jmp
aam
jne
sub
or
mov
jmp
movsb
xor
repnz
popf
sub
jno
pop
mov
or
and
cmpsl
or
fmuls
xchg
mov
pop
cli
pop
inc
mov
hlt
xchg
sti
add
rcll
enter
sbb
pop
subl
std
add
lock
rolb
mov
and
dec
sub
cwtl
sti
add
cmp
stc
mov
fwait
add
sub
add
cmp
lea
inc
mov
push
or
mov
or
mov
ret
mov
xchg
or
mov
add
pop
sti
ret
jno
stos
or
in
add
cmpsb
ljmp
lret
flds
pop
cwtl
sahf
pop
into
mov
add
dec
ljmp
outsl
jmp
inc
lret
lcall
leave
jae
lods
mov
insl
pop
loopne
orl
dec
add
sbb
int
xor
dec
or
sub
mov
call
mov
cmp
insl
iret
jmp
mov
inc
jmp
aad
inc
jmp
mov
lea
push
outsb
cltd
adc
jmp
nop
mov
jmp
dec
leave
jg
aas
pushf
imul
leave
clc
ret
outsl
int
xor
lcall
test
icebp
push
add
mov
divl
gs
mov
jp
call
mov
add
add
jo
mov
mov
mov
add
mov
push
mov
and
inc
addr16
loopne
cmp
add
aaa
mov
shlb
xchg
add
mov
inc
xchg
test
arpl
dec
mov
daa
add
mov
mov
dec
loope
sbb
mov
into
sbb
mov
das
inc
jbe
aaa
pop
jae
mov
aas
jae
das
ss
xor
add
je
addr16
and
psrld
cmc
or
lret
and
mov
dec
mov
xor
mov
lcall
xor
pop
xlat
xor
test
mov
fwait
clc
pop
inc
mov
and
pop
ljmp
ja
add
mov
add
and
ljmp
inc
decb
mov
out
mov
add
into
and
mov
inc
xchg
mov
repz
jno
push
imul
inc
or
mov
jmp
fmull
in
add
mov
mov
adc
aas
or
mov
dec
mov
insb
adc
ljmp
mov
fs
clc
jmp
lea
jle
mov
or
mov
imul
mov
cmp
push
dec
pushf
test
bound
ja
cmpxchg8b
insl
in
clc
jmp
pop
aad
scas
add
movaps
dec
mov
pop
push
pusha
clc
fdivl
fwait
inc
jmp
rorb
dec
std
or
sbb
rorl
mov
jae
clc
adc
add
outsb
cli
mov
inc
dec
adc
outsb
rcl
cmp
push
inc
fadds
orl
orb
push
fs
notl
enter
bound
inc
arpl
notl
in
adc
andb
dec
das
xor
aaa
adc
movsb
hlt
xor
lods
dec
loopne
and
add
mov
add
test
adc
xor
mov
cmp
rclb
xor
in
testb
mov
push
push
inc
into
cmp
packuswb
or
dec
push
mov
cmp
decl
mov
add
push
lcall
and
addb
dec
mov
jae
das
dec
ja
daa
xor
inc
sub
ljmp
jns
add
mov
and
mov
and
out
addr16
pusha
mov
mov
filds
paddq
movl
pushl
jmp
lret
jl
cld
ret
xchg
or
xchg
into
mov
leave
jp
test
into
test
sub
add
adc
add
dec
sarb
aaa
in
xchg
mov
push
xabort
push
jnp
test
jg
mov
adc
jns
outsb
loop
mov
jmp
mov
arpl
arpl
mov
push
xchg
push
mov
cwtl
mov
xchg
jnp
pop
jnp
jb
movsl
add
sbb
in
add
inc
pop
loope
gs
or
xchg
mov
addr16
jmp
lret
int
adc
mov
lea
icebp
ds
and
nop
push
sbb
adc
mov
mov
add
mov
mov
inc
inc
and
lea
sub
adc
lret
and
pop
bound
imull
je
sub
pop
lar
inc
sub
cmp
mov
mov
xor
sub
or
inc
cmp
cli
jbe
adc
mov
mov
ljmp
sub
popf
add
cmp
add
bsf
jp
xorb
and
cmc
mov
lods
xorl
xchg
cmp
into
or
jns
shlb
dec
call
push
roll
mov
insl
dec
mov
adc
fdivrp
xor
push
cld
mov
cld
xor
ds
int3
push
rolb
imul
je
add
pop
cmp
mov
add
mov
lcall
nop
imul
ror
push
dec
push
lock
jmp
ret
icebp
pop
sub
push
mov
mov
adc
daa
jp
lret
dec
out
cmp
mov
mov
fldenv
adc
hlt
or
dec
ret
push
lahf
gs
mov
lret
mov
add
int
add
sbb
addr16
inc
sahf
mov
xchg
or
in
or
pushl
or
cld
jbe
rcl
mov
mov
icebp
xor
call
xor
dec
push
lcall
aaa
ljmp
add
lea
lret
xchg
xchg
jns
adc
mov
pop
aad
pop
pop
leave
add
popl
repnz
imul
out
cmp
pushf
fnsave
mov
sbb
mov
mov
add
or
sbb
cmpl
aad
lea
addb
add
pop
jb
dec
pop
cmp
fistl
dec
leave
call
xchg
lahf
pop
mov
and
scas
inc
and
mov
jbe
testl
pmulhuw
jb
xor
add
subb
pop
or
jcxz
sbbl
and
jl
stc
add
jb
inc
stos
xchg
or
mov
aad
add
mov
xchg
mov
jnp
or
das
aaa
jb
add
cmpsb
mov
ljmp
mov
dec
and
mov
xlat
jne
push
xlat
int
jge
leave
stos
movsb
mov
pop
cmc
repnz
notb
idiv
pop
lods
jge
out
xor
shrl
ds
int3
movsl
add
adc
xor
pop
sbb
out
pop
imul
mov
adc
out
or
push
in
adc
mov
push
lods
jnp
outsl
fidivrl
sub
cwtl
xchg
and
pop
cmp
xor
addb
mov
jp
outsl
into
xchg
inc
ret
js
outsl
ficoml
dec
add
daa
pop
pop
dec
push
sub
cmp
jmp
push
push
hlt
mov
out
iret
pop
nop
jns
push
gs
int
add
rorl
jg
cmpsl
xchg
add
fdivrs
add
iret
insb
popa
fs
sub
mov
imul
bound
inc
outsb
das
ficomps
cli
popa
test
xchg
or
xchg
in
mov
sbb
xor
in
xor
push
lds
mov
jb
mov
push
pop
loope
sub
push
add
nop
inc
pop
or
mov
dec
shlb
add
inc
add
jbe
pop
fstl
cli
outsl
or
or
add
mov
dec
dec
pop
movsl
add
add
add
mov
add
into
jmp
je
addb
pop
and
cmp
fldt
jne
pop
fwait
mov
mov
imul
stos
imul
out
clc
stc
mov
ret
and
lods
lret
and
in
loope
mov
testl
rcrl
cmp
mov
clc
push
cmp
mov
cltd
orps
xchg
jns
js
inc
or
imul
push
filds
or
fsub
add
movnti
andl
clc
es
incl
xchg
and
jmp
decl
mov
inc
pop
add
lock
das
dec
jae
cmc
jns
push
sbb
adc
out
xor
mov
cmp
out
push
jb
dec
pop
dec
test
not
pop
scas
mov
add
pop
lcall
jle
add
jg
xchg
mov
outsl
negb
pop
push
add
lods
xchg
xor
jp
hlt
jge
sub
dec
add
pop
mov
jmp
cltd
inc
pop
pop
cmp
and
xchg
gs
clc
mov
je
sub
sub
lods
fidivrs
push
add
xchg
fs
add
stos
add
shr
xor
mov
lcall
sub
ret
test
jae
mov
test
xchg
or
jmp
mov
aaa
dec
or
mov
and
add
shlb
sbbl
add
mov
negb
leave
popa
jo
mov
jg
xor
test
or
or
push
mov
pop
mov
dec
ljmp
jle
mov
jb
imul
bound
push
mov
mov
add
push
pop
out
and
add
jmp
adcl
pop
sbbl
add
lahf
in
xor
mov
inc
subb
pop
add
jne
jmp
testl
rcr
jge
mov
ljmp
mov
clc
mov
pop
mov
pslld
cmc
inc
and
xor
cmp
incl
jbe
dec
add
add
pop
jae
cmp
and
mov
jl
pop
add
lcall
lahf
sub
mov
xchg
mov
cli
push
jb
jl
push
adc
fstpt
test
lods
daa
pop
jge
sub
inc
iret
mov
jnp
mov
inc
cld
push
cmp
sbb
adc
and
or
mov
xabort
push
mov
outsl
rorl
popa
xor
push
mov
ljmp
lea
inc
lea
gs
lods
xchg
xor
pop
mov
dec
popf
dec
ljmp
or
cmpsl
adc
jp
adc
fsubs
add
mov
shrb
pop
out
or
hlt
ret
fimuls
adc
add
fimull
cmp
sub
enterw
mov
arpl
add
lds
xorb
fisubrs
jmp
mov
popa
outsl
adc
sbb
stc
sub
popa
fisttpl
adc
fidivrl
aas
lds
ret
dec
int
aaa
je
dec
pop
xchg
out
rcr
mov
push
mov
pop
loope
jb
cmp
popf
out
fisttpll
test
xor
push
inc
in
std
scas
outsl
lds
scas
push
popf
sub
push
xchg
add
mov
jae
divb
lods
repnz
jle
add
sub
jmp
add
or
add
xor
idiv
mov
xor
mov
sahf
dec
je
or
add
mov
sarb
scas
inc
jne
sub
loopne
jno
imul
mov
pusha
testl
arpl
lret
dec
idiv
dec
xchg
mov
add
xchg
mov
push
inc
cld
mov
mov
mov
sub
add
into
pop
in
mov
roll
int3
jae
cli
mov
push
test
dec
xchg
sub
call
and
mov
sub
mov
mov
rolb
sub
or
cmpsl
inc
cld
gs
dec
xchg
aaa
mov
movmskps
lret
push
loope
int
mov
add
add
flds
mov
movsl
addr16
lret
push
shlb
jge
mul
cmpsl
mov
add
cmp
in
idivb
mov
dec
push
out
and
mov
mov
out
add
sub
add
lret
outsb
adc
pop
aas
sbb
lea
jbe
jne
jno
movsl
add
jp
loope
push
lods
adc
lea
push
scas
je
push
cmp
push
mov
inc
out
in
fiadds
inc
or
jb
idivb
mov
clc
clc
xchg
add
icebp
dec
cmp
jb
cmpsb
push
dec
scas
in
clc
sbb
jno
xchg
and
test
add
dec
xchg
mov
mov
mov
adc
in
sahf
or
outsl
stos
push
cmp
xor
dec
push
popf
inc
outsb
and
pop
adc
xchg
aas
std
lcall
pop
xor
mov
lods
aad
mov
push
call
lods
inc
jmp
sbb
add
xor
push
adc
out
cli
add
jmp
jl
add
neg
dec
call
pop
pop
mov
stc
int3
ret
aam
in
and
mov
cmp
or
mov
inc
jne
pop
loope
xor
lcall
test
and
call
jle
iret
js
add
xlat
insb
idiv
repnz
je
mov
rorb
adc
mov
lds
int
inc
inc
decl
inc
pop
add
inc
inc
or
outsl
mov
sahf
into
push
pop
add
mov
adc
cmpsl
mov
pop
in
mov
loopne
or
sub
int
cmp
lock
fmull
adc
push
sbb
cmp
mov
in
mov
test
orl
imulb
pop
mov
add
mov
pop
xor
insl
xchg
jae
inc
lods
ljmp
mov
arpl
insl
xchg
xor
add
mov
lods
xchg
insl
cmp
stos
ljmp
lcall
mov
push
call
mov
pop
inc
add
mov
insl
xchg
jne
mov
in
add
add
mov
add
lea
add
adc
or
stos
clc
jmp
lea
inc
or
or
add
lea
jne
pop
test
mov
xlat
mov
ljmp
mov
repnz
out
dec
add
add
and
dec
fistpll
movsl
jmp
inc
mov
lods
adc
jo
jp
cld
pop
jl
jmp
sbb
push
clc
mov
inc
add
int3
xor
aam
notl
ret
cmp
mov
push
add
inc
add
ljmp
add
divb
adc
cmpb
test
and
push
jl
xchg
add
lea
aam
cmp
iret
lea
or
jne
inc
out
jg
or
add
jo
jmp
and
testl
cltd
sbb
out
jo
add
std
add
hlt
add
fbld
push
shrl
cld
add
movsl
pop
ss
jb
orb
xchg
into
adc
rol
mov
dec
hlt
mov
lcall
mov
fildl
cmpb
repnz
pushl
add
pop
ret
stos
ret
pop
xchg
push
mov
mov
push
fisubrl
add
rcl
mov
jecxz
jle
bswap
mov
test
jmp
push
sahf
adc
mov
scas
fidivrs
mov
faddl
cmp
adc
mov
adc
fbstp
iret
dec
lahf
dec
ljmp
adc
mov
or
lods
jae
mov
jg
inc
add
cmp
rorl
push
pop
stc
add
push
mov
mov
push
mov
int
test
dec
adc
mov
push
test
repz
mov
mov
inc
loope
insl
test
mov
or
iret
jae
hlt
adc
test
sub
pop
cmp
mov
or
mov
imul
popf
or
or
leave
jle
push
jg
popf
mov
mov
lea
and
and
aad
clc
pop
leave
mov
lds
jne
add
jae
in
adc
adc
mov
in
testl
pop
pop
aas
cmp
out
sbb
cmc
clc
mov
sbb
notb
add
nop
clc
pushl
testb
decl
add
lcall
and
aam
adc
jl
sbb
sahf
negb
mov
mov
add
adc
sub
jb
sub
daa
add
sahf
inc
adc
jns
add
iret
mov
je
mov
imul
add
repz
push
jcxz
adc
dec
ljmp
lret
mov
add
push
or
add
sbb
out
push
xchg
cld
stc
jne
dec
pushf
mov
sub
inc
mov
fxch
mov
push
mov
push
adc
movsb
xor
stc
leave
fiadds
pop
cmp
push
mov
dec
jg
ljmp
jg
add
adc
add
xor
fistl
ljmp
xchg
mov
repnz
ljmp
jle
adc
mov
enter
mov
add
cmp
mov
add
jmp
notb
das
add
or
aad
adc
notb
dec
add
xchg
mov
xor
outsb
notl
dec
pop
fnstcw
mov
clc
jge
pop
xchg
andl
inc
add
outsb
outsl
jmp
pop
mov
cs
lea
inc
or
bound
mulb
test
aas
int
jne
xchg
sub
lea
xor
cld
add
and
rolb
lods
add
mov
or
adc
add
pop
jne
sbb
loopne
mov
or
movntps
cmpsl
jne
add
mov
lea
xchg
add
hlt
lea
ret
add
inc
and
push
test
lea
add
adc
call
stos
dec
je
mov
movl
xchg
divl
into
xchg
mov
xchg
pop
movsl
mov
mov
adc
xor
mov
mov
dec
push
cmp
xchg
out
pushl
mov
push
adc
dec
or
daa
inc
mov
adc
mov
xorl
xor
ljmp
mov
mov
mov
mov
das
jmp
mov
adc
pushf
mov
jle
nop
insl
mov
lret
outsl
subb
xchg
sbb
mov
xor
outsl
enter
jle
mov
das
shlb
sub
add
mov
jne
ljmp
mov
ljmp
mov
sbb
xsaves
mov
idivb
mov
jae
mov
add
pop
aaa
add
xor
add
mov
xor
jmp
push
push
pop
icebp
loop
scas
int
mov
jmp
call
pushf
test
lcall
mov
jmp
ja
push
inc
into
jmp
mov
imul
dec
mov
insb
fldcw
add
add
push
sahf
xchg
aam
lret
mov
jmp
push
sbb
sahf
fs
add
inc
add
daa
mov
add
push
mov
or
js
push
and
call
jb
je
fisttpl
lret
ret
mov
aas
cmp
cmp
shr
andl
call
and
add
dec
ret
mov
xor
cs
cmpsl
sbbb
mov
pop
call
cld
dec
loopne
movsl
xchg
mov
mov
ret
mov
mov
mov
nop
incl
push
mov
add
pop
outsb
std
xor
add
xor
mov
push
pop
sbb
mov
or
mov
mov
aam
jnp
adc
xor
or
jl
sbb
or
add
shll
adc
pusha
add
scas
add
scas
jp
inc
mov
out
adc
test
in
xchg
sbb
insl
stos
lea
in
xchg
pop
cmp
lea
adc
add
sbb
sbb
mov
xchg
push
stos
mov
mov
adc
call
aam
mov
sub
lret
fwait
aam
push
xor
dec
adc
movsl
js
roll
mov
outsl
dec
mov
jp
push
sbb
mov
mov
paddw
bound
or
icebp
testl
movaps
fsubrl
dec
or
loope
pop
ja
movsb
into
jmp
int
clc
fildl
int
pop
xor
xor
in
adc
xchg
arpl
add
jge
in
test
xor
adc
fistpll
add
pop
leave
addr16
cltd
xor
push
ds
sub
xor
cs
adc
xchg
mov
add
xchg
cmp
push
jo
outsl
adc
popl
cmp
insl
add
push
add
mov
adc
popf
mov
or
rorl
adc
xor
popl
mov
mov
sub
add
out
divl
aaa
sub
popa
repz
and
insl
call
dec
int
inc
adc
ret
push
sub
and
loope
call
sub
pop
mov
in
pushl
xchg
das
inc
mov
hlt
int
sbb
xor
decl
in
add
rorb
mov
testl
sbb
aad
daa
cmp
daa
cld
sub
sub
xor
cld
bound
sbb
add
je
sub
sub
daa
jb,pn
js
jb
hlt
add
jmp
cmovo
add
xlat
fbld
pop
ret
ds
cmp
movntps
dec
and
sub
mov
jnp
mov
xchg
and
pushf
lea
shrl
inc
cltd
cmp
orb
pop
pop
pusha
sub
cltd
test
add
dec
ljmp
add
test
in
in
add
mov
jg
mov
add
push
mulb
dec
mov
cli
or
ljmp
xor
xchg
daa
add
fs
clc
adc
ret
pop
push
sub
mov
push
orl
addr16
jle
adc
lea
pop
xor
xchg
clc
fs
jo
into
fs
mov
add
xchg
loope,pn
dec
add
negb
jge
inc
jmp
or
pop
daa
adc
pop
add
inc
jmp
enter
xor
lock
mov
loopne
mov
mov
enter
mov
paddsw
mov
cli
dec
sti
ljmp
dec
push
add
pop
test
mov
mov
ja
das
pop
gs
mov
jo
fnstsw
dec
add
notl
mov
mov
or
pop
jl
and
push
pop
mov
cmp
ret
push
sar
fs
mov
adc
xchg
into
sub
jb
xchg
inc
gs
sub
cli
add
movsb
add
adc
cld
subl
addr16
adc
aaa
cli
popa
popf
aam
orl
push
loope
push
mov
pushf
cmp
cld
sub
and
add
cld
adc
ja
or
pop
jo
bnd
jb
es
jecxz
sub
and
mov
mov
pushf
fwait
cld
ret
mov
inc
sub
sbb
jl
mov
jae
in
pop
sub
dec
ljmp
mov
into
push
test
pop
pop
jmp
das
into
mov
loope
ljmp
mov
add
cltd
and
fsubr
mov
sub
add
add
and
dec
ljmp
xchg
ljmp
test
jg
adc
int
jg
xchg
insb
mov
jb
lods
lcall
push
add
stos
xchg
clc
jb
mov
stos
lea
aam
jecxz
clc
push
push
aam
gs
xchg
clc
jmp
fs
clc
insl
int
jg
add
adc
adc
push
lds
lods
mov
test
lea
dec
xor
xchg
pusha
add
gs
add
sti
adc
outsb
inc
add
sub
shlb
mov
sbbb
sbb
mull
cli
dec
pop
test
mov
add
mov
jg
add
ds
inc
ja
cltd
int3
pop
int
mov
xor
pushw
mov
dec
and
mov
jo
iret
clc
mov
jp
jne
adc
fmull
mov
aas
jae
mov
jmp
adc
test
adc
jecxz
movsb
add
add
add
sbb
jecxz
movsb
add
ds
call
xor
ret
xchg
xchg
nop
adc
jecxz
int
sbb
dec
movsb
add
push
jl
sti
pop
cltd
js
fidivrl
mul
loope
pop
cld
and
sub
in
add
pop
mov
in
mov
mov
mov
ljmp
mov
and
ljmp
jbe
nop
jno
jmp
add
ljmp
xchg
dec
rclb
cmp
daa
dec
mov
rorl
ljmp
xchg
sub
mov
scas
pusha
jmp
fwait
insl
cltd
lods
add
mov
adc
lcall
jno
pop
pop
sub
cmp
sub
cs
add
push
lea
push
bound
clc
jb
test
ljmp
clc
insw
sbb
push
push
xlat
mov
pop
inc
leave
nop
loopne
sub
leave
cmp
adc
inc
add
clc
push
lods
add
icebp
xchg
add
mov
lds
add
or
test
inc
insl
mov
sbb
pop
add
dec
dec
sbbb
add
dec
mov
add
je
fldl
xor
aad
lea
shrb
or
out
fdivrs
clc
pushl
leave
clc
out
push
clc
ljmp
enter
dec
jne
xchg
dec
loope
add
mov
fildl
inc
push
loope
jmp
adc
sub
xor
inc
out
inc
aaa
jl
fldt
roll
rorb
test
pop
mov
sbb
dec
movsb
out
mov
push
jmp
mov
or
add
dec
sbb
jns
fdivrl
aam
cld
mov
dec
ds
pop
sub
inc
mov
mov
std
int
xchg
out
cld
imul
ds
mov
sub
std
int
ljmp
mov
pushf
mov
inc
or
and
adcl
sbb
jge
or
repz
lea
rolb
inc
xchg
mov
rcll
and
imul
ret
mov
inc
mov
xchg
add
jnp
mov
cmpsb
mov
mov
lods
jae
add
jp
add
cmp
ret
and
ljmp
clc
xchg
pop
cmp
jmp
lea
xor
decl
and
xchg
mov
pop
fimull
xchg
xchg
add
lea
mov
nop
add
lea
add
or
jne
mov
sbbb
xchg
jl
jmp
pop
or
cmc
clc
pop
pop
mov
clc
jmp
cltd
add
add
shr
mov
pusha
clc
add
ret
and
idiv
xchg
and
xchg
add
sti
push
and
rolb
mov
data16
testl
imul
out
adcl
je
iret
decb
je
lret
insb
adc
test
repnz
stc
cli
push
and
xchg
dec
and
pop
mov
je
xchg
jmp
hlt
testl
aaa
inc
push
mov
mov
scas
cmp
inc
popf
jb
mov
push
xchg
push
jb
pop
mov
rcrb
push
cld
or
jmp
mov
pop
into
add
push
out
stos
cld
icebp
test
push
add
push
mov
mov
cld
sbb
loopne
mov
test
cmp
je
ret
jbe
lret
and
mov
jne
cmp
add
mov
add
push
out
mov
adc
loopne
negb
cwtl
pop
sbb
push
xor
fsubrp
rcll
shrb
cmpb
into
fbld
pusha
ja
add
mov
arpl
sbb
jl
pop
lds
mov
jno
sub
adc
xchg
mov
push
fiaddl
add
xchg
jne
xchg
addl
je
add
push
sub
cwtl
mov
push
push
sti
fldl
mov
ret
ret
es
les
jne
lds
push
sti
cmpsl
xchg
xchg
sbb
nop
sbb
in
mov
xchg
push
jb
jbe
push
sti
outsl
xchg
xchg
jl
enter
clc
push
cmovns
or
or
sbb
lock
enter
inc
nop
mov
iret
loope
ljmp
popa
mov
shrb
rol
mov
add
dec
push
push
stc
jmp
cmp
lock
clc
dec
lods
cmpsb
mov
loopne
and
jmp
push
cmp
cmpsl
popl
xor
push
inc
or
pop
inc
adc
dec
xor
cmpsl
add
jae
inc
cmp
and
ljmp
mov
popa
dec
movsl
andl
ds
and
mov
push
add
dec
inc
mov
out
mov
add
popa
fscale
fcomps
std
loope
mov
pusha
sub
scas
jne
orl
dec
shl
sbb
outsb
dec
je
mov
cmpb
stos
push
je
jmp
sbbb
mov
inc
out
and
pop
sbb
dec
je
ret
mov
inc
pop
push
mov
add
push
filds
mov
cwtl
mov
push
scas
jns
out
pop
or
lea
xor
jmp
mov
adc
xchg
mov
ljmp
iret
ljmp
int
ljmp
sub
adc
mov
or
fwait
jmp
mov
or
inc
jmp
mov
ljmp
test
sbb
ja
test
jmp
dec
adc
add
inc
outsb
in
xlat
lea
add
dec
test
cmp
in
dec
lock
lea
call
bound
cwtl
adc
dec
xorl
insb
xchg
sbb
lret
add
xor
insl
jmp
cmp
xchg
sub
or
lea
cmpsl
lret
add
xor
cmp
sub
imul
add
mov
xor
pop
or
or
xor
daa
test
ljmp
add
call
xlat
out
inc
aaa
cmp
jmp
insl
popl
test
daa
add
ja
add
testl
call
insb
into
push
pop
jbe
int3
add
add
mov
add
int
mov
femms
add
mov
inc
stos
inc
cmpsb
dec
aas
stc
adc
mov
repz
jle
add
dec
inc
mov
adc
cmp
aas
mov
xor
mov
adc
mov
sahf
out
inc
jge
and
cld
fimuls
mov
je
iret
out
add
push
dec
xor
add
push
js
sbbb
mov
inc
adc
icebp
movsb
push
adc
mov
ret
loope
pop
adc
adcb
in
popf
sub
adc
adc
mov
imul
cmp
les
loope
xchg
addb
dec
imul
mov
dec
mov
or
nop
imul
fcmovb
xor
ljmp
push
sub
nop
mov
ljmp
mov
test
bound
dec
push
cmpsb
jp
xor
dec
mov
cmp
jbe
jge
ficoml
xchg
mov
inc
sahf
xchg
xchg
push
dec
xorl
inc
jno
mov
ret
mov
je
push
inc
jmp
in
cmp
jp
xchg
jg
sub
mov
sub
jae
cmp
mov
or
mov
jne
shr
adc
xchg
mov
mov
add
or
dec
clc
mov
jae
call
xor
je
cmp
and
add
and
sub
adc
push
and
aas
sub
cmp
jne
xchg
add
xor
push
loopne
sbbb
arpl
jge
arpl
imul
data16
lss
pushl
add
call
mov
mov
add
and
mov
aam
push
lcall
push
xchg
sub
dec
jb
adc
and
add
fs
jp
add
mov
push
test
jb
roll
out
rolb
je
imull
add
scas
cmp
inc
mov
stos
mov
add
je
mov
push
decl
jbe
addb
dec
call
add
lahf
loop
mov
inc
mull
cs
bnd
enter
adc
ret
mov
aad
fistl
popa
jae
sub
mov
sbb
into
sub
out
adc
addr16
mov
and
adc
mov
mov
mov
divl
jae
pop
mov
cltd
add
dec
jle
out
outsb
adc
rcrl
into
test
pop
jg
mov
add
jmp
adc
add
lea
add
movsw
xor
xchg
lret
jle
mov
inc
call
add
jae
lcall
mov
out
xlat
push
insl
fistpll
or
orb
pop
mov
or
dec
fwait
clc
add
mov
cmp
jne
xor
or
loopne
add
fbld
pushl
or
inc
or
fisttps
jecxz
decl
loopne
adc
test
cmpsl
mov
call
dec
clc
mov
inc
clc
out
idiv
loop
and
mov
call
out
push
and
pop
leave
pop
test
xchg
add
push
and
mov
mov
int
aad
add
jmp
mov
call
adc
stc
xchg
dec
cli
shlb
pushf
out
inc
jae
roll
pop
mov
out
aas
or
adc
inc
dec
cmp
jb
adc
jg
incl
jmp
pop
cmpsb
jmp
pop
cmpsb
jmp
xor
mov
jnp
cmc
aas
mov
hlt
xor
addl
mov
mov
add
loop
sti
incl
xlat
adc
ljmp
popf
jp
push
mov
jnp
out
jp
jp
fs
mov
insl
sahf
dec
stc
push
mov
or
ret
jp
jns
arpl
enter
scas
xor
jne
xor
das
jns
fdivrl
cmp
cmpsl
adc
lock
jl
sti
ret
xchg
pop
lahf
psubusw
cld
ret
add
inc
divl
pop
add
xor
xchg
roll
mov
in
or
test
pop
std
adc
fidivrl
outsl
jecxz
subb
or
icebp
jbe
test
sahf
not
cmp
jns
stos
in
pop
ja
mov
jmp
fistpll
icebp
mov
jbe
dec
test
xorb
add
jg
lret
jbe
jns
frstor
clc
pop
cmp
test
mulb
fstpt
fsubl
pushl
add
test
or
sub
rclb
mov
je
mov
je
and
add
lea
jne
or
je
adc
add
cmpl
outsl
sbb
lea
daa
daa
loopne
pop
test
jmp
xor
call
bndldx
cmpsl
and
rol
mov
add
cmpsb
sbb
push
jmp
cmp
adc
mov
add
loop
sbb
mov
test
out
jg
or
inc
mov
add
jb
cmp
fistl
add
add
shl
cmpsb
ljmp
or
or
mov
shrl
icebp
movsb
cld
orl
mov
cmp
fstps
push
dec
bound
shll
mov
bound
pop
add
call
aaa
fdiv
dec
bound
push
mov
mov
sarb
ljmp
add
jecxz
lret
ljmp
pop
add
xlat
pop
lret
ljmp
ret
adc
cmp
jmp
jl
stc
lds
jbe
xchg
add
test
add
ja
adc
icebp
sub
insb
pop
fnstsw
add
inc
lods
test
xchg
jge
mov
mov
repz
xlat
mov
cmpsl
lea
and
lea
stc
stos
lea
dec
or
lea
or
jne
jmp
mov
add
ja
jmp
lea
leave
test
clc
testb
jg
mov
inc
jmp
lea
or
sub
ja
cmc
xchg
add
jmp
xchg
xor
jmp
pop
outsl
loopne
and
testl
ja
xor
ss
or
mov
mov
ret
mov
cld
mov
mov
adc
ret
jno
testl
adc
ret
ret
mov
daa
mov
mov
mov
inc
test
loopne
out
add
mov
icebp
lock
jge
out
mov
mov
xor
sub
mov
pop
ljmp
push
dec
fmuls
in
cld
sub
jns
dec
mov
call
adc
out
call
ds
cltd
and
dec
stc
lret
mov
aaa
mov
cmp
pop
sarl
mov
call
sub
bound
adc
jle,pt
mov
lret
scas
jp
mov
shll
je
test
xor
xchg
loopne
mov
out
pop
mov
sub
ljmp
lret
ljmp
xchg
add
push
cmpsb
fistpll
notl
pop
jne
or
jno
jae
inc
pushf
cwtl
jne
insl
fwait
lods
rclb
jecxz
andl
add
adc
dec
sub
xchg
dec
fiadds
add
mov
push
lea
outsb
lea
sahf
lea
mov
mov
scas
mov
in
mov
or
inc
jmp
out
mov
fisttpll
inc
jmp
stos
mov
jno
inc
jmp
mov
jns
lret
add
dec
jb
push
cwtl
jo
fs
or
mov
xor
xor
in
jo
inc
bound
add
testl
pushf
stc
xchg
inc
cmpsl
xchg
xor
lock
cmovae
push
ret
je
pop
and
pop
dec
mov
add
jmp
int3
jne
test
jmp
enter
fcompl
std
js
call
test
add
incl
negb
loope
jmp
inc
icebp
lcall
test
sbb
imul
mov
pop
mov
fsts
push
dec
bound
sti
rcr
je
std
adc
mov
add
aas
or
js
mov
sbb
loope
les
add
mov
fistpll
lahf
lods
pop
sti
adcl
add
movsl
push
push
inc
outsl
pop
push
into
bound
sti
sub
mov
les
and
jo
pop
popa
sbb
mov
add
dec
jmp
xor
jle
sub
dec
sbb
fnstenv
add
jnp
add
mov
cli
jno
xchg
sbb
lcall
jg
ljmp
adc
xchg
int3
jp
cld
stc
jae
jp
mov
xor
movsb
je
popf
or
jb
jp
pop
adc
addl
or
jno
lds
push
icebp
rcr
dec
adc
cmpsl
mov
sbb
dec
lock
push
sbb
add
ret
cs
rcrb
in
jb
aam
cwtl
inc
xchg
add
ljmp
outsl
jecxz
mov
jmp
mov
stos
repz
aaa
add
xchg
lock
mov
fistpl
aad
or
cmpsl
loopne
or
push
roll
mov
mov
push
int3
adc
jb
push
push
dec
outsl
xlat
push
leave
add
incb
jae
idivb
outsl
sub
inc
and
add
jno
roll
xchg
mov
or
mov
jb
inc
sub
push
sti
add
andl
add
dec
pop
pop
pop
dec
js
sar
ds
add
push
je
push
xor
xor
scas
fwait
js
mov
push
stc
push
sub
sub
jo
lea
xchg
jle
mov
or
aaa
fadds
mov
adcb
test
bound
mov
scas
add
sub
decl
stc
testb
sub
inc
jb
mov
cmp
sub
add
call
or
jp
push
dec
jmp
and
jmp
fiaddl
mov
push
add
cmp
popa
add
mov
sbb
sti
cmp
ljmp
inc
mov
push
lret
inc
lcall
mov
mov
xor
add
add
cmp
ljmp
jmp
push
cmpsl
out
mov
inc
cmpsl
cli
cmp
imul
push
test
aas
cmp
inc
mov
push
rorb
faddl
sub
mov
xchg
loopne
push
mov
pop
call
int3
mov
cs
adc
lea
jae
push
mov
cltd
push
adc
scas
or
add
or
pop
xchg
clc
sbb
xchg
add
pop
pop
jmp
pop
mov
xchg
push
scas
or
sbb
stos
jmp
dec
popl
sbb
ja
jge
sbb
fdivrs
pop
inc
idivb
clc
dec
pop
test
add
jns
incl
mov
xor
ja
fiadds
aaa
mov
mov
jg
test
or
ds
daa
addr16
call
adc
je
hlt
sbb
mov
sbb
lcall
out
push
or
daa
jmp
adc
outsl
ret
popf
scas
xchg
inc
addr16
lea
push
call
into
cmp
inc
sbb
dec
jne
mov
xchg
push
sti
loopne
not
pop
cmp
test
dec
pop
mov
out
push
call
xor
divl
or
rolb
imul
or
pop
out
mov
icebp
filds
ds
jne
loope
xchg
out
mov
sti
leave
mov
push
call
add
sub
mov
xor
pop
adc
sti
hlt
dec
mov
jbe
out
cmp
cld
lret
mov
gs
sti
cmp
xlat
fsts
or
scas
movsb
jbe
lods
add
pop
push
and
xlat
mov
or
add
lahf
xchg
mov
add
rolb
pop
scas
fimuls
mov
and
add
jmp
add
shll
lods
jmp
fs
test
add
jns
push
mov
cmpsl
add
nop
jae
jb
mov
and
clc
mov
in
das
push
mov
scas
das
xchg
or
psubsw
loopne
int
push
rcll
add
or
xor
lret
mov
add
out
lods
in
and
sbb
ljmp
je
scas
sbb
jae
out
bound
and
push
jb
scas
cmp
scas
daa
pusha
dec
scas
and
add
pop
sbb
push
aas
and
mov
les
daa
lea
mov
mov
sbb
outsl
cs
pop
dec
out
cmc
pop
dec
cli
andl
incl
stos
add
nop
call
sarl
ja
mov
xchg
or
lret
pop
pop
pushf
adc
push
cmp
push
mov
jle
jnp
jmp
std
cld
test
cmc
pusha
push
pop
ja
decb
jg
xchg
js
mov
add
popa
aas
es
jecxz
xchg
dec
sub
lea
fildl
jno
dec
push
mov
xchg
mov
xchg
sti
out
lea
das
dec
sti
aas
mov
or
jne
cmp
cmp
ret
adc
cmp
mov
cli
inc
outsb
inc
sti
pop
pop
test
lcall
call
or
pop
push
jo
inc
xor
rsm
jo
mov
imul
or
les
call
insb
inc
mov
fs
xor
mov
popl
or
add
mov
add
mov
icebp
mov
psubd
lods
test
fnstenv
sub
testl
lcall
pop
adc
shll
pop
xchg
jg
outsb
stc
repnz
outsb
fstp
push
lds
pop
pop
xlat
and
add
or
and
add
add
pop
fisttpll
or
mov
jmp
add
sbb
ret
out
cltd
loop
jmp
add
adc
lds
lret
add
dec
pop
aas
mov
stc
aaa
mov
add
outsl
xchg
hlt
clc
out
sub
pushl
inc
outsl
adc
xchg
rdmsr
scas
add
ret
jg
mov
loopne
xor
inc
data16
lret
hlt
push
fsubrl
je
jg
adc
mov
jp
add
fistpl
and
lahf
cld
inc
daa
mov
js
sbb
jmp
dec
gs
ljmp
cmp
adcb
adc
push
je
pop
pop
dec
les
jmp
cld
je
nop
or
inc
mov
sti
cmp
out
sti
int
mov
or
xchg
clc
cmpl
pop
jns
add
pop
push
data16
sub
mov
xor
es
add
xor
les
adc
add
mov
inc
data16
add
mov
test
xlat
adc
mov
add
adc
jmp
pop
flds
adc
adc
mov
nop
pop
fwait
mov
cltd
repz
adc
out
add
inc
lcall
imul
pusha
pop
insl
loopne
push
cwtl
aaa
clc
inc
out
inc
mov
jl
pusha
les
loopne
push
mov
loopne
out
mov
jl
pusha
pop
les
insl
loopne
push
test
cmp
jmp
bound
insb
int
sub
mov
fimuls
jmp
xor
aad
sarl
outsl
repnz
adc
mov
jmp
ja
clc
bound
arpl
sbb
pop
xor
out
inc
pop
clc
mov
stos
mov
mov
sbb
add
push
mov
call
xchg
jg
mov
pop
sub
pop
je
faddp
call
push
or
inc
mov
add
xchg
pop
call
and
pop
sub
fiadds
add
or
por
jg
jmp
add
xchg
inc
lret
add
pop
or
test
push
push
fimuls
out
shr
mov
or
jmp
ret
dec
call
mov
stos
add
stos
cld
push
push
or
push
call
or
push
add
adc
push
cwtd
inc
and
push
movsb
js
mov
push
sti
fwait
ljmp
jno
add
out
nop
xchg
jb
push
out
add
and
jno
add
popa
les
daa
and
mov
add
adc
mov
sub
in
scas
stos
adc
add
adc
add
in
sub
ret
add
mov
roll
adc
add
pop
ljmp
test
add
dec
add
push
stos
js
push
data16
test
add
push
xorb
das
inc
ss
add
pop
sub
jmp
mov
imul
cmp
shll
inc
pop
add
mov
xchg
icebp
lea
test
mov
insl
or
push
mov
sub
mov
ret
mov
sbb
pop
add
or
pop
fnstsw
inc
sbb
enter
mov
fisttpll
pop
ror
mov
jmp
push
rcrb
add
add
add
popl
sub
push
pop
or
mov
push
push
or
fwait
mov
add
xchg
add
idivl
cld
andl
jle
bound
add
cmpsl
flds
xchg
aam
mov
jg
arpl
sub
sbb
pop
adc
lock
les
cmc
add
jbe
ss
test
sar
jg
inc
add
fs
add
cltd
inc
add
addr16
mov
mov
add
add
adc
out
fidivl
push
push
add
fs
nop
cmpb
jne
lea
dec
mov
in
add
add
fs
adc
add
mov
jbe
mov
xchg
mov
fildl
xchg
dec
mov
leave
mov
push
dec
xchg
push
jg
mov
push
jle
add
adc
mov
lcall
shrl
mov
add
dec
sub
out
push
in
in
test
add
xchg
push
mov
jns
mov
jle
arpl
xchg
xchg
dec
cmp
pop
add
add
dec
fmuls
testl
pop
sub
push
sahf
add
cmpb
add
push
pop
outsl
fsubs
cmc
enter
leave
mov
push
add
xor
rol
add
addr16
jae
test
pop
xor
push
mov
movsl
fists
mov
into
xchg
mov
clc
push
mov
add
lea
je
push
push
push
mov
add
xlat
bound
mov
hlt
jecxz
clc
sbb
push
leave
mov
jnp
add
std
jne
xor
rolb
jmp
outsl
sbb
test
icebp
add
js
ss
je
lock
shll
ret
sub
pushf
pop
js
add
cld
inc
idivl
add
cmp
leave
xor
pop
cmp
fdiv
mov
or
ja
xchg
mov
test
add
loopne
pop
inc
sub
pop
inc
add
mov
or
or
sti
jno
add
out
add
das
xlat
cltd
or
add
dec
pop
xor
fwait
arpl
add
cltd
cmp
movsb
cli
orl
push
dec
adc
fs
push
dec
sub
mov
fildl
mov
push
and
loope
mov
nop
out
mov
dec
cmp
xor
fnstcw
icebp
mov
cmp
mov
and
push
and
mov
adc
inc
and
mov
jg
loopne
jl
scas
out
jbe
scas
repnz
cmpb
add
pop
jp
movsl
das
pop
mov
add
sbb
mov
and
or
cmp
lret
aad
mov
sbb
out
pop
testb
and
sub
and
dec
add
adc
test
sahf
lahf
mov
sub
mov
or
pop
lds
in
or
sub
cltd
iret
push
push
add
aas
add
mov
xlat
pop
fimull
pop
clc
test
jg
jle
jmp
decl
push
pop
scas
aas
push
pop
scas
aas
imul
jg
xor
clc
ss
mov
push
jbe
add
insb
outsb
sbb
fimull
inc
ja
jne
push
or
push
ret
js
push
mov
inc
and
rcll
outsb
mov
inc
repz
inc
loop
add
repz
add
popl
mulb
push
movsb
pushl
pop
cmp
loop
jne
aaa
loopne
or
sahf
lret
pop
add
jl
inc
mov
mov
lahf
sub
cmpl
inc
push
add
dec
push
aas
fnsave
add
test
sbb
mov
and
pop
jo
cmp
test
cmp
mov
imul
lret
dec
sbb
inc
and
adc
sub
jbe
add
mov
dec
pop
or
push
jmp
pop
adc
mov
push
data16
adc
xlat
dec
jnp
add
add
dec
sub
fidivrs
repnz
mov
jnp
cmpsl
xor
cmpsl
es
ss
ljmp
push
cmpsl
fldt
ljmp
pushf
mov
mov
mov
sbb
add
mov
sbb
fs
jle
xchg
sbb
aas
dec
add
pop
add
jmp
sbb
pop
pop
in
dec
pop
mov
testb
in
push
pop
enter
enter
in
aam
mov
mov
lea
mov
outsl
mov
lret
push
cmpsl
pop
jo
cmpsl
daa
mov
cmpsl
inc
pop
cmpsl
das
cmpsb
cmpsl
aas
fiaddl
clc
sbb
movsb
push
outsl
int
mov
dec
xchg
add
mov
or
stos
mov
add
arpl
jb
mov
nop
mov
bound
pop
inc
mov
add
or
jo
add
mov
lods
mov
inc
cli
add
sbbl
add
je
push
lcall
sbb
jae
pop
lcall
std
jne
xchg
jmp
inc
push
mov
inc
add
jne
jns
jmp
in
les
jne
sub
dec
call
lods
cmp
mov
insl
cld
mov
mov
xchg
xchg
lcall
pop
adc
sti
add
and
mov
std
je
pop
or
mov
add
add
mov
faddl
fmuls
lret
fnstsw
mov
jbe
adc
cmp
call
adc
cmp
push
push
es
inc
cld
pusha
xchg
mov
jbe
cli
cli
pop
sti
jb
push
int
movsb
das
loop
shrb
lods
cmp
ret
pop
or
and
push
mov
add
mov
daa
add
inc
fidivrs
aas
loope
jmp
dec
jb
lcall
loope
xor
or
loopne
or
divb
mov
add
loopne
mov
cmpsl
inc
xor
xlat
loopne
shll
xor
inc
subb
cmpsl
ficoml
mov
ljmp
mov
add
add
mov
scas
mov
add
cmp
clc
adc
idivb
ljmp
mov
push
mov
pop
cmpsl
sbb
in
rcrl
add
adc
jle
inc
mov
jmp
out
mov
jmp
lret
jb
push
out
xchg
add
addl
jl
in
or
push
icebp
std
popf
int3
mov
jmp
cmpsl
and
add
lea
add
mov
mov
sub
or
mov
mov
xchg
add
add
mov
xorb
cmp
cld
addl
mov
out
stc
pop
stos
mov
arpl
dec
push
mov
sub
movsb
jle
je
outsl
mov
lea
add
xor
add
mov
popl
movsb
mov
call
adc
sub
cli
icebp
popf
mov
or
pop
lea
xchg
sub
add
pop
xor
lret
mov
fdivl
xchg
cmpb
xchg
cwtl
testl
rclb
lea
adc
xor
out
mov
mov
push
push
push
mov
mov
pop
mov
mov
outsl
or
adc
daa
dec
mov
call
push
pop
jmp
ljmp
dec
sbb
ds
das
mov
xor
lds
dec
push
les
jmp
add
pop
rcrb
dec
dec
shr
cs
sub
pop
iret
push
add
faddl
rsm
push
mov
popf
out
gs
cmp
adc
daa
push
and
push
test
sub
fucomip
add
aaa
add
adc
lds
pop
icebp
rclb
aas
cmp
lods
pop
xor
jo
fbstp
inc
mov
add
lea
enter
clc
push
decb
push
in
push
push
ljmp
sub
dec
test
sbb
aas
sbb
pop
and
adc
fisubs
dec
mov
xchg
std
ret
bswap
adc
test
dec
xor
sbb
pop
cli
adc
mov
scas
mov
lea
mov
mov
sub
fs
dec
and
sbb
dec
cmp
dec
jne
adc
and
jg
inc
mov
push
lea
test
push
sub
int
sahf
std
incl
adc
sub
dec
and
adc
push
outsl
and
or
je
sbb
and
push
cmp
ficomps
mov
inc
loope
xacquire
sub
iret
push
push
fcoml
inc
add
jmp
sub
xor
mov
fsincos
cmp
out
xchg
cwtl
repz
xchg
cwtl
testl
int3
jae
mov
add
das
test
add
xor
sbb
pop
add
adc
sub
sbb
cmp
sbb
and
add
lret
dec
cmp
xor
enter
or
mov
add
mov
in
stos
adc
and
pushf
lds
xchg
es
data16
xor
and
mov
pop
pop
inc
sbb
adc
test
xchg
sub
mov
mov
inc
mov
inc
out
aad
pop
les
add
imul
jb
icebp
dec
push
jmp
dec
push
fldcw
jb
lds
adc
and
lahf
adc
icebp
pop
outsl
push
jmp
mov
adc
pop
push
inc
add
loop
add
jmp
pop
push
rcrb
push
pop
test
mov
lea
or
sahf
inc
outsl
or
lea
or
xor
daa
movb
in
in
push
mov
shrl
mov
test
push
inc
inc
jmp
out
sar
ja
or
dec
ss
jmp
dec
outsb
adc
addb
arpl
jne
pop
dec
or
roll
aaa
adc
popf
ja
inc
inc
xor
mulb
xor
push
cmp
pusha
cmovo
or
adc
push
mov
mov
lret
or
mov
pop
sbb
shrl
cmp
clc
fwait
outsb
add
movsb
adc
mov
add
outsl
and
pop
outsl
and
pop
outsb
or
pop
mov
xchg
or
mov
and
xor
fs
cli
fisttpl
shll
shll
shll
push
movsb
xor
sti
mov
and
cmp
stos
roll
adc
ret
cmp
add
out
sbb
sti
mov
loope
call
jne
cltd
push
or
and
call
pop
jbe
lcall
loopne
and
mov
mov
rorl
inc
dec
or
mov
mov
add
push
mov
ljmp
inc
invd
inc
mov
jg
cltd
xor
jno
call
das
popa
dec
jbe
test
dec
mov
mov
cmp
push
in
xchg
jp
mov
ljmp
xor
inc
vpminsw
data16
add
sub
aad
mov
out
xchg
clc
push
lcall
shlb
pop
jae
leave
or
or
popa
jmp
addr16
add
mov
shll
sub
pop
sbb
push
jno
addl
movsl
jno
push
fs
addr16
mov
mov
xor
and
mov
hlt
pop
fcomps
out
push
push
outsl
mov
enter
adc
and
mov
sar
jg
mov
daa
dec
add
sub
add
ja
aas
and
jecxz
jg
mov
xor
push
fwait
lea
aad
adc
add
and
ud0
dec
jmp
push
pop
cld
mov
mov
inc
fcomps
push
addr16
pusha
xchg
xor
add
xchg
push
and
xlat
inc
push
add
mov
jmp
mov
add
or
adc
xor
jb
jns
mov
hlt
cli
cltd
sub
jle
inc
and
xorl
rclb
aas
and
mov
decl
cmp
jne
sbb
out
push
inc
ja
xchg
fsubp
xor
sub
add
fstl
sahf
aad
and
int
and
and
xchg
jge
mov
cmp
mov
daa
cmpsb
faddl
inc
addr16
xor
push
add
cmp
jge
or
pop
lahf
movsl
adc
cli
vprotd
fnstsw
mov
dec
stos
addr16
jne
add
test
add
xor
ret
add
mov
cmp
iret
and
imul
mov
jle
or
or
negl
sub
pop
mov
add
fiaddl
mov
jne
push
icebp
or
enter
rorb
add
stc
adc
in
lods
jmp
add
icebp
mov
fldl
pop
add
add
cli
dec
jmp
cld
mov
pop
jmp
jmp
fmull
pop
inc
dec
pushf
add
das
test
mov
xchg
and
shll
dec
lods
push
mov
jbe
cmpb
add
gs
and
mov
loop
mov
adc
loop
add
pusha
adc
test
orb
fucomi
xchg
fwait
cld
cmp
das
xchg
js
xor
orps
pop
jmp
lret
pop
xor
addl
addr16
shlb
push
or
inc
sub
sarb
js
aaa
mov
lret
mov
pusha
insl
decl
mov
jge
lcall
add
add
dec
xchg
xchg
insb
orb
add
cld
sub
or
sub
out
or
test
mov
sti
adc
dec
push
push
loope
or
imul
or
lods
cmp
dec
or
push
bnd
jb
fsub
push
and
push
mov
shlb
hlt
adc
and
shlb
mov
cmpsb
mov
filds
cltd
pop
mov
cmpsb
daa
jle
push
inc
stos
xchg
mov
and
mov
arpl
imul
inc
jle
inc
pop
dec
ja
push
mov
lcall
movsl
aaa
pop
mov
addr16
stos
xchg
cmp
leave
cmp
mov
jne
add
repnz
push
ret
fstpt
xchg
mov
int3
adc
out
leave
movsl
out
xor
push
test
push
test
jmp
sbb
repz
psllw
dec
inc
push
mov
dec
outsl
aaa
push
jge
stc
ds
lea
mov
adc
adc
add
inc
cli
push
add
test
add
out
push
xchg
push
rorb
imul
jle
outsb
icebp
push
mov
push
xchg
xor
or
mov
or
cmp
xor
outsb
stc
pop
pop
push
stos
imul
inc
add
push
push
in
inc
jg
sbb
cld
je
ja
je
ja
je
ja
je
ja
je
ja
je
ja
je
mov
mov
mov
jo
ljmp
jg
idiv
jle
je
rolb
push
adc
add
aam
pushf
mov
add
mov
call
fmulp
pop
adc
dec
outsb
or
inc
inc
cld
mov
adc
mov
and
pushf
add
mov
sti
add
mov
js
out
int
icebp
lods
mov
movsb
mov
add
leave
leave
gs
push
out
cli
rcrl
and
mov
inc
xchg
push
and
cmp
inc
inc
dec
and
sub
loop
dec
and
jae
int
dec
lret
stos
aam
xchg
dec
int
sarl
les
mov
in
sub
xor
mov
xor
je
das
xchg
nopl
push
sbb
outsl
xor
pop
dec
mov
arpl
arpl
aas
mov
out
mov
mov
jle
xor
lahf
and
lahf
addr16
jb
mov
sbb
mov
stos
sti
cmpsb
mov
add
xchg
or
adc
mov
add
movl
add
mov
bound
mov
pop
loope
iret
pop
cmc
mov
pop
sub
iret
pop
sbb
iret
pop
int
pop
or
je
pop
add
xlat
dec
test
mov
ljmp
test
mov
jmp
add
push
push
pop
outsl
inc
mov
leave
xor
push
pop
add
lea
add
clc
iret
pop
sbb
mov
cmpsl
pop
add
ret
dec
test
or
push
sbb
out
adc
aaa
imul
add
push
sbb
cwtl
inc
or
je
inc
pop
xor
dec
xchg
ja
into
add
into
repnz
les
inc
testl
xorl
lret
add
lahf
cmpsl
mov
rolb
mov
xor
add
lds
xor
je
cmp
fistpl
push
pop
fistpl
push
mov
and
inc
push
and
dec
push
and
cmc
push
and
xchg
shlb
xchg
das
std
cmp
jbe
xchg
add
sar
loop
push
adc
sbb
or
sbb
add
sbb
push
and
add
sti
dec
and
jo
adc
push
jle
shll
rol
sbb
pop
repnz
cmp
mov
mov
mov
push
cmpsb
dec
lret
sti
mov
incl
jle
cli
addr16
xor
stos
mov
iret
ljmp
fistpl
fmull
fwait
ljmp
xor
and
negb
jle
sbb
int3
imul
and
cmc
xor
jmp
ficomps
xchg
mov
scas
xor
jp
fwait
je
adc
or
cmp
jmp
aad
mov
jne
or
add
ss
mov
jb
and
mov
or
cmp
inc
jmp
inc
xor
clc
sbb
xor
push
fadds
bound
pop
fdivr
sbb
arpl
dec
aad
mov
jbe
clc
aam
ljmp
icebp
xor
mov
add
clc
mov
lret
iret
xchg
add
ljmp
sbb
std
jne
inc
outsb
or
ret
pop
imul
mov
verw
sub
push
mov
dec
or
inc
mov
mov
jp
push
push
adc
mov
mov
jne
fwait
ret
jmp
add
gs
jns
cld
lea
pop
push
push
push
sti
mov
mov
je
shrb
lea
pop
pop
call
inc
jno
push
clc
inc
enter
or
pop
mov
in
aaa
lcall
jb
daa
sti
pop
mov
cmp
jb
cmpsl
fwait
add
lret
ds
push
dec
adc
cmpsl
mov
mov
push
call
adc
push
rorl
mov
data16
cltd
sahf
aaa
sti
add
cmpsl
pop
out
lcall
stc
iret
pop
loopne
test
and
data16
pop
call
sbb
sbb
movsl
pop
arpl
push
sub
or
ret
mov
xchg
stos
add
leave
rclb
cs
ret
test
or
push
das
push
std
sbb
pop
ss
cltd
pop
mov
pop
pop
adc
add
mov
and
add
fstpt
pop
adc
in
sub
outsl
pop
push
das
add
push
leave
repz
push
xor
jo
inc
iret
jle
jl
int
int3
xor
fsubr
mov
dec
add
add
sbb
leave
arpl
jg
dec
xor
inc
popa
decl
mov
cltd
pop
dec
xor
mov
add
inc
adc
insl
sbb
clc
sahf
js
xchg
shr
push
leave
pop
push
push
iret
cmp
ret
ficoms
sahf
stc
iretw
movsb
cmp
and
mov
clc
dec
or
jmp
not
cld
sarl
shll
pushf
jg
imul
into
loope
xchg
js
xchg
xlat
push
pushl
jo
inc
or
ds
cld
decl
shr
sub
dec
cld
lea
pop
jle
faddp
outsl
psrad
pop
pushf
inc
mov
in
jbe
std
cmp
enter
pusha
lock
aaa
mov
add
cmp
xor
jle
sarb
pusha
movsb
testl
add
jnp
push
inc
mov
int3
call
add
xchg
xor
mov
lret
and
push
fildll
mov
test
jae
sti
add
mov
decl
fs
mov
push
inc
add
cmp
cli
sub
decl
je
mov
dec
inc
add
mov
cli
stc
cmpsb
mov
add
mov
xchg
lahf
sti
and
mov
and
les
pop
les
mov
cmp
jmp
js
inc
mov
sub
xchg
sub
add
mov
xchg
sbb
inc
mov
xchg
sub
xchg
adc
mov
xor
inc
or
xor
xor
pop
ret
mov
sbb
dec
fcom
enter
push
cs
addr16
subl
daa
pop
loope
dec
mov
sarl
mov
xchg
add
xchg
jae
clc
insb
int
aaa
push
xchg
xchg
dec
mov
test
int
sub
xchg
xchg
iret
mov
mov
push
mov
xchg
out
loope
push
int3
mov
loope
and
add
pusha
or
fcoml
xor
addl
sub
inc
add
mov
or
pop
lret
mov
rorb
sub
or
pop
sbb
testl
or
or
jg
shl
pop
leave
mov
dec
push
sbb
clc
fs
lcall
or
adc
pushf
ja
add
sbb
rolb
add
add
adc
and
pop
or
stos
or
add
into
js
sub
jb
add
lcall
push
dec
jbe
add
mov
decl
mov
or
add
ss
inc
add
dec
mov
jb
mov
add
mov
sti
add
dec
andl
adc
add
mov
ret
cld
test
lock
add
hlt
aas
add
or
sub
insl
test
adc
mov
mov
or
inc
jno
or
cmp
inc
mov
ret
add
lahf
lea
les
mov
popf
push
add
sahf
out
push
sub
cmpsl
pop
ds
lahf
mov
mov
push
pop
leave
out
into
xchg
daa
ljmp
push
ret
daa
leave
jg
mov
sbb
pusha
adcb
xchg
clc
ds
ret
adc
push
sbb
jge
pop
daa
popa
push
jne
cmpb
ja
orl
mov
test
jns
mov
subb
adc
mov
bound
mov
jle
xor
xlat
pop
fldl
iret
pop
aad
outsl
fadd
mov
push
ss
and
ret
push
fldenv
roll
mov
outsb
push
mov
pop
sbb
aam
adc
mov
jo
add
mov
scas
rcrl
and
int
sbb
es
sbb
loopne
popa
popl
mov
pop
and
test
push
push
and
aam
mov
push
push
adc
aam
pop
mov
sbb
pop
sub
sub
mov
ret
jg
add
sub
pusha
jne
and
push
loopne
fmul
pop
sbb
mov
or
lret
out
addb
rcrl
movsb
push
pop
cs
push
addl
inc
inc
add
repz
push
adc
lods
mov
xlat
dec
mov
or
out
mov
into
pop
fmul
int
xchg
sbb
decl
daa
aam
dec
xor
mov
add
je
mov
mov
inc
xchg
mov
lock
mov
lret
ljmp
aad
stos
ret
push
ljmp
jle
adc
mov
fnstcw
add
arpl
lret
nop
lret
ljmp
mov
imul
dec
insl
clc
sbb
dec
lock
and
decl
popf
xlat
mov
lock
divl
dec
insl
loopne
mov
mov
iret
add
adc
adc
add
add
in
clc
fcoml
inc
jmp
mov
mov
cmp
js
sti
int
xor
or
or
fs
int
mov
dec
in
push
js
in
mov
push
test
add
push
dec
outsl
mov
shrb
clc
xchg
pop
or
stc
xchg
pop
or
jp
add
or
xchg
lahf
arpl
imul
pop
xor
fmuls
test
jb
lcall
or
mov
adc
iret
cld
adc
add
dec
add
mov
add
mov
decl
dec
or
mov
mov
mov
mov
push
cld
push
jo
pop
adc
mov
push
sub
push
rorl
or
inc
or
or
xor
roll
cmp
jb
lods
add
add
lea
xchg
mov
cli
mov
push
sbb
into
xor
mov
mov
xor
pop
std
inc
push
and
int3
push
into
xor
adc
popa
jo
mov
mov
pop
add
js
mov
psubsb
sbb
and
leave
sub
and
dec
and
push
mov
add
xor
test
adc
stos
jnp
push
inc
jge
add
mov
adc
mov
lret
or
push
call
enter
ret
mov
xchg
pushf
out
pop
xor
jle
addr16
mov
mov
cs
xchg
and
call
cmpsl
mov
out
adc
pop
mov
outsb
xor
add
xchg
lcall
mov
orb
add
xchg
pop
cwtl
adcl
mov
lahf
stc
out
mov
push
outsl
in
jne
sub
es
or
aaa
xchg
adc
loope
mov
in
add
and
movsl
fwait
lret
add
pop
rorb
rorl
mov
and
xor
add
flds
cld
adc
sbb
mov
xor
fldcw
xchg
or
sbb
lsl
jbe
add
inc
pop
test
aam
inc
sbb
push
addb
adc
cli
out
dec
and
addl
flds
mov
mov
mov
es
incl
orb
mov
xor
movb
add
adc
or
pop
mov
jne
push
jb
add
mov
adc
addb
dec
sub
dec
clc
add
push
jbe
sub
sahf
or
rclb
mov
stos
and
adc
mov
or
testl
xor
pop
stos
cmp
cltd
dec
or
mull
es
lea
decl
lea
push
lea
es
sahf
or
add
mov
into
adc
int
jl
pop
xchg
adc
fwait
push
or
add
sub
mov
mov
lea
sti
clc
lea
xchg
mov
clc
dec
ficomps
sub
insl
lahf
and
adc
mov
int
or
scas
or
loop
mov
ljmp
mov
sbb
mov
add
flds
mov
stos
cmp
lret
add
insb
dec
pop
enter
and
shr
nop
aas
jmp
lea
inc
jmp
push
push
cmpsl
cmp
cmc
sub
insl
jmp
xor
test
add
add
inc
into
xchg
or
sub
xchg
add
fisttpll
clc
cmp
loope
add
mov
cmpl
ljmp
test
xchg
mov
pop
jl
or
sub
outsb
push
div
add
mov
sub
add
lret
xchg
repnz
cld
je
jmp
mov
jp
or
xchg
int
add
push
add
in
push
pop
ret
dec
push
mov
mov
dec
mov
ret
je
je
mov
sbb
call
lods
inc
jle
mov
jmp
cmp
sti
test
or
call
or
das
add
insb
rorl
mov
test
jne
repnz
movsl
test
jg
and
xchg
incl
mov
fnstsw
gs
add
fisubl
xchg
inc
pop
mov
out
jle
sti
adc
jmp
and
call
jl
ret
push
push
fsubrs
xor
fsts
enter
xchg
lods
aas
mov
cmp
hlt
mov
mov
mov
sub
xor
enter
mov
add
lahf
ret
push
dec
shlb
mov
add
xorb
js
push
scas
out
add
out
and
mov
mov
js
sbb
jb
cmp
mov
stos
xor
and
and
sbb
mov
cmp
add
and
jo
mov
add
dec
outsl
leave
jnp
mov
mov
cmc
adc
fs
fcoms
clc
rcrb
clc
sbb
mov
inc
pop
adc
fcoml
push
sub
mov
les
je
jb
sar
adc
mov
pop
or
enter
movnti
dec
add
das
loopne
std
loope
test
pop
dec
push
pop
xchg
sbb
outsb
and
loope
mov
lret
mov
movl
lea
aaa
or
imul
pop
test
add
jb
sti
decl
shl
outsb
or
add
pop
pop
and
mov
inc
add
or
sbb
incb
add
test
pop
mov
xchg
jmp
or
xchg
movsb
add
stos
xchg
jge
ficoml
dec
jge
out
xchg
lahf
xor
mov
loopne
rorb
add
or
adc
mov
mov
lock
fdivrp
imul
in
inc
pop
xchg
std
or
add
mov
cmp
into
fwait
cwtl
outsl
leave
test
dec
fistpll
ljmp
and
cli
adc
mov
add
push
stos
cs
jne
out
ljmp
pop
cmp
adc
insl
movsb
mov
add
pop
ljmp
lret
xchg
add
lds
and
adc
imul
mov
out
add
mov
inc
xchg
add
js
xchg
clc
out
inc
xchg
fucomip
xchg
jbe
xchg
cwtl
add
ja
add
and
rcrl
bound
clc
cmpsb
imul
jmp
xor
clc
cmpsl
mov
mov
push
lret
mov
clc
push
xchg
lds
jmp
rclb
jb
cmpl
sub
addr16
clc
push
addl
les
lea
pop
jmp
mov
add
loopne
lea
push
or
aaa
testl
add
aad
test
aaa
addr16
push
xchg
inc
fdivs
mov
adc
or
jle
jno
pop
stos
inc
outsl
or
out
jge
sbb
fsubs
lret
fistl
xor
mov
int
inc
push
dec
or
mov
ret
jne
cmc
clc
xor
sbb
mov
add
cmpsl
lcall
notb
imul
add
mov
add
adc
rolb
pop
fwait
xor
lahf
lret
xor
mov
enter
add
mov
jno
mov
mov
stos
xor
call
sti
adc
sahf
sahf
sti
or
adc
mov
mov
lea
jbe
jge
subl
cmp
xor
mov
jg
xchg
in
cmp
loopne
xchg
and
daa
mov
push
add
pop
fdivrs
addr16
cwtl
outsl
push
movsl
das
xchg
clc
adc
add
add
sbb
adc
bnd
add
clc
push
leave
out
mov
loopne
mov
mov
imul
mov
and
mov
mov
mov
xor
add
add
inc
push
daa
sti
push
push
push
mov
add
or
add
add
sbb
cmp
mov
mov
sub
mov
test
xchg
mov
je
addr16
rcl
les
jmp
test
push
mov
imul
lcall
pop
lret
mov
js
mov
insl
lret
mov
adc
lds
add
mov
inc
and
jecxz
push
add
cmp
ljmp
in
cmp
pop
jmp
jmp
std
sub
add
mov
jmp
add
mov
mov
cli
test
ja
inc
and
mov
push
dec
push
fistps
testl
add
and
push
add
cmp
pop
adc
mov
dec
adc
enter
mov
rolb
xchg
dec
stos
xor
add
jbe
movsl
je
insl
adc
test
psubsb
cmpsl
add
adc
movsl
push
add
cltd
adc
call
and
das
sbb
ss
jbe
push
add
mov
add
add
add
cs
xchg
lea
adc
and
cmpsb
mov
lock
or
mov
add
pushf
jge
sub
fimuls
stos
inc
shr
adc
iret
mov
add
sarb
mov
sahf
out
push
sub
jo
outsb
out
add
add
add
jmp
cld
adc
xchg
xchg
pop
or
dec
addr16
mov
fisubrs
or
ret
mov
add
xchg
add
inc
jmp
lea
divb
mov
jle
fucomi
lea
pop
sarl
mov
sbb
or
mov
insl
dec
cmpb
lea
add
adc
or
je
mov
insl
push
repnz
fimuls
repnz
lea
fdivl
stos
add
roll
add
adc
gs
add
or
or
jns
clc
add
jg
push
add
call
sub
imul
pop
and
in
sti
repz
push
jbe
sahf
cli
shrb
sarb
xchg
aaa
addr16
subl
clc
jmp
push
mov
repz
mov
fstpt
mov
popl
popl
mov
pop
pop
and
push
lock
or
add
in
popl
mov
jmp
flds
add
js
hlt
sarl
dec
mov
add
jge
jg
xor
push
adc
jge
push
loope
mov
shl
lea
jae
add
fisttpl
ret
into
xchg
pushf
sbb
lock
adc
ret
xchg
jne
lret
mov
in
jne
add
movb
mov
mov
into
out
adc
push
mov
data16
xchg
mov
mov
jo
add
sbb
testl
pop
inc
lods
ja
inc
xchg
cmp
mov
inc
push
xchg
mov
adc
notl
fnsave
ljmp
es
jb
mov
lds
jl
dec
cwtl
adc
pushf
fwait
mull
or
hlt
jmp
adc
out
aaa
jge
jmp
into
pop
mov
sbbb
push
dec
jne
add
outsb
or
ret
neg
stc
xchg
aas
push
sub
jb
jno
mov
adc
inc
xor
dec
jp
add
inc
dec
call
icebp
sahf
call
sbb
lcall
add
or
mov
cmp
div
push
cltd
inc
add
push
ss
out
add
adc
cmp
push
movsb
mov
lea
daa
cld
incl
dec
add
sub
idiv
cmp
lea
add
and
rol
push
lea
daa
idiv
fcoms
int
pusha
sti
cld
push
iret
outsb
sbb
mov
sti
std
test
jmp
js
cld
ljmp
call
sbb
add
sub
cmc
pushl
mov
mov
jmp
or
xchg
icebp
or
stos
adc
out
test
je
test
add
cmp
ret
lea
jmp
sub
mov
gs
and
mov
out
aas
inc
mov
fwait
hlt
add
mov
inc
mov
das
xchg
call
adc
lock
gs
in
lcall
call
or
inc
push
add
mov
out
add
lahf
sub
iret
aad
adc
cld
dec
pop
jne
out
pop
lcall
cmpsb
loopne
add
jle
mov
cld
out
sahf
dec
ljmp
xchg
push
add
push
test
inc
fwait
cmpsb
add
mov
stc
xchg
mov
jge
sahf
add
out
xchg
dec
ljmp
push
cli
aas
mov
mov
mov
fwait
xlat
fildl
adc
pusha
popa
decl
out
push
push
out
mov
dec
add
or
push
leave
or
sub
push
jmp
mov
add
jle
jae
add
test
xchg
jne
orb
ljmp
popa
pop
mov
adc
push
sbb
stc
std
mov
add
jle
jle
nop
aas
jmp
pop
les
dec
lds
outsb
notb
scas
inc
stc
orl
aas
add
inc
out
inc
les
xchg
mov
incl
enter
add
mov
mov
push
dec
hlt
insl
inc
pop
stos
and
add
xchg
push
test
shlb
mov
push
out
pop
add
mov
lea
daa
push
push
dec
nop
add
daa
sbb
movsb
sti
decl
cmovo
sti
add
cli
stc
ret
out
stc
jb
lock
xor
and
add
lock
mov
add
gs
sub
mov
push
and
call
sub
pop
mov
xchg
andb
testb
cmpsb
cmc
or
mov
jne
mov
mov
decl
inc
mov
inc
xchg
adc
add
aas
clc
mov
das
xor
mov
adc
xchg
pop
lret
ljmp
cltd
push
jmp
mov
lret
push
or
add
stos
ds
add
inc
xrelease
ljmp
adc
loopne
pop
jne
out
jmp
mov
stos
adc
cmpsl
fimull
ds
les
leave
outsl
xchg
xlat
fsts
xchg
test
add
mov
jle
ja
in
add
adc
lods
add
jmp
sub
in
and
ja
push
add
xchg
push
jb
push
dec
add
mov
ja
shrb
dec
or
xchg
stos
xchg
lret
repz
mov
xchg
lcall
push
mov
add
int
adc
cmpsl
adc
jl
add
jle
and
add
xchg
sub
hlt
and
push
ret
incl
or
adc
test
xchg
or
les
xor
pop
push
inc
inc
dec
add
out
pop
adc
mov
pop
jbe
pop
add
mov
and
adc
jne
out
adc
jmp
inc
mov
insl
add
xor
icebp
mov
mov
xor
fwait
stc
jae
or
add
pop
mov
sti
les
mov
add
imul
xchg
xchg
ds
in
inc
mov
and
jnp
adc
lock
inc
cmc
add
push
add
mov
add
mov
push
add
roll
scas
aaa
je
lods
sbb
out
jno
jns
or
clc
push
sti
pop
nop
out
cli
orl
outsl
les
cmpsb
enter
lods
out
imul
cltd
movsb
xchg
je
in
adc
or
ljmp
ljmp
mov
jmp
vpmulhw
adc
or
xchg
sti
adc
add
popl
into
pop
jns
jle
xchg
int3
ret
jnp
gs
pop
popl
into
ja
sub
dec
in
jp
std
ret
inc
lret
mov
lods
jge
cmpsl
add
jp
xchg
xchg
sub
adc
adc
mov
sub
adc
in
lea
add
add
dec
pushl
xchg
mov
nop
adc
aam
or
xchg
mov
xchg
sub
clc
cwtl
mov
add
lea
mov
outsb
cmpsl
pop
ds
ficoms
adc
push
jmp
cwtl
xchg
or
pop
bound
std
out
aas
pop
xchg
out
cmc
dec
mov
add
xchg
add
mov
notl
jle
mov
clc
jnp
mov
mov
add
enter
enter
xchg
clc
inc
imul
add
jg
and
ret
sahf
iret
inc
or
in
dec
and
ljmp
inc
sbb
and
loopne
jl
adc
cmp
orps
decb
add
cmpb
jmp
inc
add
xchg
sub
sbb
mov
out
push
add
jmp
jl
mov
push
add
imul
sub
pop
dec
inc
jge
sqrtps
add
add
push
adc
popf
xor
jnp
repnz
mov
sti
mov
hlt
lsl
inc
mov
call
sti
adc
or
mov
orb
cmp
cli
icebp
push
mov
jmp
mov
fistps
dec
in
push
jnp
add
ja
mov
adc
sbb
or
fwait
cli
jo
xchg
mov
addr16
cli
xchg
aam
or
inc
mov
mov
hlt
mov
data16
mov
rorb
or
je
decl
test
add
mov
add
rep
mov
mov
stc
lods
fwait
inc
cli
rorb
push
mov
cs
stos
cld
dec
pop
adcl
jb
pop
mov
mov
inc
jmp
and
pop
fldl
std
add
fsubl
and
scas
pop
jb
scas
sbb
scas
pop
bound
in
inc
adc
test
repnz
das
sbb
dec
jb
scas
sbb
scas
punpckldq
jecxz
cltd
lea
mov
cmc
addr16
add
icebp
jne
jo
call
inc
adc
rorl
clc
into
adc
outsb
add
pop
outsl
and
jb
and
roll
call
adc
outsl
cmpsl
mov
pop
xor
adc
mov
dec
mov
push
out
ja
add
inc
adc
je
data16
jae
fiaddl
or
call
inc
lock
lock
in
idiv
mov
outsb
pop
mov
cld
lcall
add
lock
idivl
mov
mov
xchg
jne
loop
pop
xor
roll
js
nopl
mov
xor
decl
loope
test
lock
mov
add
pop
sbbb
push
xchg
mov
push
aad
pop
pusha
mov
ss
jecxz
es
add
sub
sbb
cmc
and
mov
in
aaa
add
shrb
sar
xlat
fisttpll
mov
sub
into
xchg
or
adc
fwait
mov
fdivr
add
ret
sbb
pop
aad
repz
pusha
pop
inc
pop
pop
push
fwait
add
sub
add
push
push
cmp
outsl
push
mov
ret
inc
leave
in
push
mov
jmp
sbbl
xor
pop
cltd
mov
add
stc
mov
outsb
into
movsl
adc
hlt
icebp
test
push
pop
clc
fdivl
inc
jmp
shlb
jb
jbe
fnstcw
pusha
sarl
add
cld
mov
xchg
into
jae
jle
pop
xor
sub
jmp
jg
cmp
in
mov
lret
cli
dec
push
lret
or
push
repz
aam
add
daa
mov
orb
cld
lea
aad
lea
aad
mov
jle
and
push
cmp
add
pop
dec
mov
jne
je
maxps
mov
inc
lret
lock
jge
and
jge
and
lret
ds
cmc
idiv
ja
aas
and
lret
ds
mov
add
ds
mov
add
adc
rolb
and
into
dec
mov
or
or
add
call
popf
mov
or
mov
or
mov
dec
arpl
and
mov
sub
dec
xchg
push
cmp
data16
push
adc
rolb
or
or
decl
out
and
mov
or
popa
das
sub
movsl
lock
in
add
cmp
pop
add
scas
dec
dec
push
mov
rorb
ljmp
cmpsl
lret
push
jbe
jne
pop
jnp
cmpsl
jp
mov
xor
dec
pop
f2xm1
sbb
dec
lret
jae
push
xchg
mov
mov
mov
mov
lret
jp
cmpsl
sbb
push
ljmp
inc
mov
xor
adc
fwait
mov
ret
cli
mov
cmp
frstor
scas
fistpll
add
popa
mov
mov
mov
pop
leave
bound
mov
sub
icebp
or
or
idivb
add
sahf
cmpsl
sbb
adc
insb
lret
in
adc
test
enter
add
ja
lret
ds
mov
bound
test
lcall
lds
push
jbe
xchg
dec
jle
addl
ljmp
add
enter
mov
push
incl
sarl
mov
incl
sarl
mov
xchg
mov
addb
mov
pop
push
or
incl
adc
push
call
add
mov
mov
pop
pop
insb
or
push
sub
sub
mov
add
sahf
push
mov
call
repz
clc
adcl
mov
jae
push
mov
jg
mov
jne
jge
mov
dec
xor
sti
js
add
and
out
inc
add
lret
jo
adc
test
jbe
mov
xor
adc
sti
icebp
mov
inc
push
mov
jne
insb
pop
xchg
sub
scas
dec
loop
add
xchg
cli
sarl
add
sub
xchg
insl
lret
insl
pop
sti
aas
cli
mov
loopne
iret
pop
jbe
jl
jns
add
mov
push
pop
mov
ljmp
imul
dec
cwtl
dec
add
jmp
mov
cmpsl
add
leave
add
cli
mov
add
sub
add
cli
mov
pop
inc
pop
xchg
icebp
lcall
es
add
shrl
add
sbb
mov
ljmp
out
jmp
mov
add
or
jmp
push
push
fwait
call
in
fldl2t
lea
arpl
call
jno
add
pop
jno
add
lea
mov
js
insl
push
push
pop
pop
popa
mov
dec
jge
addl
xchg
ljmp
mov
adc
mov
sahf
dec
int
mov
test
pop
dec
mov
push
adc
adc
push
jle
push
mov
lea
movsl
daa
mov
iret
pop
outsb
call
cld
dec
and
xor
lcall
stos
add
mov
test
cmp
push
mov
dec
js
lret
nop
add
dec
xchg
or
and
stos
jle
rol
push
add
and
les
inc
xchg
or
inc
mov
push
call
xchg
popa
inc
and
aaa
insb
aad
loop
xchg
push
imul
sub
inc
orb
loop
in
ret
add
pminub
inc
mov
imul
imul
xchg
addl
pop
orl
sbb
decl
xor
inc
jnp
and
and
test
fstl
mov
aas
or
mov
add
pop
fsubrs
gs
cmp
stos
cli
ljmp
scas
cli
nop
mov
cmp
pop
inc
xchg
adc
mov
loope
in
mov
add
push
adc
push
loop
cli
scas
push
add
mov
pop
ljmp
adc
aam
cmp
mov
add
and
mov
dec
scas
add
movsl
ljmp
or
push
add
ljmp
push
lret
outsb
in
jmp
pop
jo
pop
add
xor
in
xlat
jmp
popa
scas
dec
andb
jmp
mov
icebp
mov
insl
cmp
sbb
add
pop
inc
jmp
sti
test
lds
xchg
sub
xchg
movsb
ret
sub
dec
orb
sub
and
xchg
ja
bound
adc
mov
jbe
push
shufps
adc
and
pushf
lret
data16
ss
stc
jae
sbb
andl
aaa
jmp
add
cld
mov
mov
jecxz
add
clc
cltd
and
jle
cmc
and
or
mov
xchg
aad
inc
and
jne
cld
clc
addb
stos
add
test
push
mov
add
mov
repnz
mov
outsl
shlb
and
lea
adc
cmc
inc
pop
add
popf
mov
lea
adc
push
jbe
sti
add
cmp
and
adc
add
test
mov
shll
cmc
sub
addb
jp
jno
mov
mov
sub
and
js
loope
jne
lods
jg
shrb
cmp
dec
push
sbb
aas
adc
xchg
sbb
movsb
cmp
or
data16
xchg
out
adc
out
or
xchg
adc
shlb
mov
mov
ficomps
mov
scas
fimuls
rol
add
adc
push
add
jbe
in
leave
xchg
sbb
jp
sbb
addl
inc
arpl
lea
stc
push
int3
js
add
mov
pop
mov
test
add
jecxz
pop
or
and
xor
fs
lret
out
xchg
xor
aas
push
bound
scas
jmp
cmp
xchg
jmp
sbb
mov
mov
divl
jae
jmp
adc
mov
xchg
loop
bound
pusha
jae
jmp
rcll
and
jno
jmp
arpl
add
push
int
mov
arpl
add
stos
pop
call
sub
mov
stos
or
mov
xor
pop
hlt
mov
sub
loop
or
sbb
fsubr
loope
xorb
cmp
outsl
xor
adc
add
jno
jno
bound
je
pop
push
adc
sbb
shl
push
mov
lea
into
sub
sub
jns
pop
mov
incl
repnz
repz
jns
sub
adcb
int3
jle
cld
les
daa
mov
inc
stos
call
add
repnz
dec
lret
imul
or
sbb
mov
mov
xor
mov
cmp
push
jnp,pn
add
ljmp
adc
iret
shl
je
lds
sbb
jge
adc
jne
add
shl
xor
ds
cmpsb
mov
ss
and
add
mov
mov
cmpsl
lret
pop
sub
int
ja
dec
and
adc
push
xchg
dec
sub
or
rorb
je
jb
add
lea
clc
popf
jno
xchg
mov
dec
push
push
mov
jl
add
lea
enter
add
adc
pop
add
int
push
mov
jle
rclb
mov
clc
mov
in
arpl
adc
pusha
aas
pop
push
lea
pop
jmp
lea
add
pusha
inc
scas
mov
pop
add
rcrb
mov
add
daa
jbe
testw
out
push
lea
mov
testl
and
out
outsl
and
popa
ret
rdpmc
mov
jmp
stos
or
pop
xchg
mov
lea
test
xchg
cmpsb
lea
mov
stos
decl
xchg
cmpl
movl
add
mov
add
pop
insb
decl
ljmp
ss
sar
and
push
repz
mov
inc
or
pop
add
mov
pop
xor
cmp
decl
mov
mov
adcb
or
and
iret
cli
ds
mov
jne
jg
shlb
cli
in
daa
mov
mov
pop
mov
adc
fidivl
rclb
enter
mov
mov
sbb
inc
loopne
mov
insl
scas
jne
fmuls
mov
cmp
jmp
out
nop
adc
pop
mov
sub
lret
outsb
iret
lods
pop
inc
cwtl
mov
repnz
fbstp
insl
jg
lds
mov
cmp
fisubrl
and
popaw
xchg
dec
lahf
aam
fnstsw
enter
orl
mov
or
out
or
mov
inc
stos
sbb
mov
test
test
pop
jg
or
fimuls
jle
lea
xchg
jmp
mov
mov
clc
pusha
outsl
pop
aad
dec
pop
fnstcw
adc
in
inc
or
cmp
xor
push
int3
pop
sub
adc
push
movsb
jmp
insb
loope
fs
stos
adc
std
push
pop
add
inc
and
rcr
fcompl
test
cmc
std
je
dec
and
xor
jmp
icebp
pop
cld
sti
movsl
adc
and
mov
and
clc
inc
sti
mov
jg
sbb
outsl
push
insb
mov
adc
pop
xchg
inc
xlat
push
out
orb
mov
add
rolb
mov
popa
outsl
push
sbb
push
pushl
pop
xor
or
ret
dec
mov
adc
add
mov
addr16
or
xor
push
add
out
cli
dec
dec
inc
xor
inc
xchg
mov
add
lock
sti
adc
push
mov
es
cli
or
push
pop
addr16
hlt
add
push
add
pop
fnsave
add
in
jb
into
aad
leave
mov
add
mov
test
repnz
add
jns
lret
add
lret
mov
cmp
mov
mov
xor
out
gs
imul
adc
mov
ret
jns
cmp
mov
jecxz
pop
mov
and
push
add
sarl
jp
xlat
insb
imul
cmpsl
ja
cmp
push
divb
add
aad
inc
sti
inc
xchg
add
outsb
icebp
outsl
add
jp
rep
leave
mov
pop
push
or
inc
jno
mov
inc
xchg
adcl
loopne
pop
dec
lret
mov
jmp
mov
fucomip
lea
divl
leave
jle
dec
add
mov
int3
std
add
jecxz
pop
mov
scas
pop
add
add
fcoms
sub
mov
fs
aad
pop
push
mov
jmp
pushf
ret
mov
push
xor
fcmovnu
sub
mov
dec
jmp
mov
neg
addl
add
ja
push
incl
push
jmp
mov
andl
mov
lea
out
mov
add
pop
pusha
ljmp
mov
or
add
btr
add
mov
pop
push
push
and
inc
imul
call
xor
cmp
ret
int
push
cs
test
arpl
mov
add
adc
js
xor
mov
sar
cli
mov
dec
jno
daa
test
subb
add
into
mov
add
jb
push
jb
jp
fmul
add
outsb
loop
cli
mov
outsl
les
mov
jp
mov
js
stos
sbb
pop
adc
add
outsl
push
add
ret
stos
lret
pop
cmc
data16
push
cmp
mov
es
mov
mov
js
scas
adc
scas
out
sub
pop
mov
sub
mov
mov
sub
push
xor
ljmp
push
mov
repnz
dec
testb
ljmp
add
adc
lar
out
add
fmuls
adc
pop
inc
pop
dec
add
push
xorl
lret
enter
jecxz
les
mov
jmp
mov
stos
adc
jecxz
inc
xchg
mov
test
xor
test
xchg
or
mov
fwait
sbb
cmpsl
test
add
xor
stos
dec
pop
std
mov
pop
push
movsl
rorb
mov
xchg
jno
pop
pop
ror
rolb
push
aas
and
cmpsb
add
pushl
push
addr16
push
aas
and
mov
push
sbb
and
ja
or
cmpsb
xlat
addb
mov
push
or
push
and
add
out
cmp
rolb
jbe
addb
mov
dec
or
adc
cmc
shrl
push
lods
xchg
jmp
shll
push
jnp
adc
mov
lds
add
push
mov
fidivs
aam
sahf
mov
ljmp
pop
outsl
test
in
lea
cmp
xchg
cmp
sbb
mov
data16
cli
jno
add
mov
sbb
cs
jne
jge
push
iret
or
and
test
add
add
adc
cli
mov
outsl
or
mov
jo
xchg
xchg
push
inc
outsl
decl
mov
jge
xlat
mov
testl
adc
stc
adc
jmp
or
fidivrl
cmp
jg
inc
xchg
push
lods
add
push
pshufw
sbb
cmpl
jle
test
mov
push
inc
mov
aam
rcrl
push
fisubrl
aam
xor
jecxz
shll
aam
aas
jle
sub
lahf
add
aad
stos
outsl
mov
add
jbe
push
pop
or
es
shl
jmp
data16
insb
dec
pop
cmp
aaa
shl
cltd
es
cli
int
jle
sahf
mov
dec
iret
xor
test
jecxz
cs
mov
jle
insl
call
mov
inc
mov
ljmp
or
add
add
imul
dec
out
mov
and
or
add
mov
push
mov
imul
lock
mov
imul
imul
daa
xlat
lods
mov
lcall
imul
out
shll
les
fmull
xor
cs
sub
inc
sub
jmp
ss
clc
push
cld
call
xchg
cld
mov
ret
mov
jl
roll
mov
or
flds
add
decl
pop
js
xchg
add
cmp
inc
add
arpl
mov
add
repnz
adc
lea
sub
adc
jo
dec
cmpsb
loopne,pn
mov
dec
sarb
ret
mov
add
shl
rol
add
add
bound
add
ret
stos
mov
repnz
fwait
arpl
insl
mov
in
jp
cmpsl
into
jle
push
cwtl
jbe
dec
cmpsl
rcrl
dec
mov
adc
mov
fs
and
insl
xchg
out
mov
sub
int3
dec
push
adc
rorb
dec
cld
xchg
jbe
adc
mov
xchg
push
std
add
fwait
jne
jbe
cltd
fs
and
xor
pusha
popf
add
mov
add
imul
imul
shrb
aaa
into
mov
inc
add
ret
rcll
push
lret
cmpsb
mov
icebp
mov
outsb
in
mov
in
sahf
lret
mov
push
pop
int
jbe
aad
iret
dec
testb
fcompl
aas
add
jnp
decl
mov
stos
je
inc
in
cltd
add
jne
mov
lea
lret
push
xchg
ja
or
lahf
aad
add
adc
push
cmc
add
cmc
inc
jmp
std
lret
xchg
add
lods
subl
jl
jle
lock
jb
out
mov
jle
sti
ja
inc
out
inc
and
sbb
daa
jnp
sarb
js
shl
dec
lret
sahf
or
testl
cmp
std
push
jnp
fistpl
aaa
insb
ret
mov
mov
add
fisubl
ja
xor
mov
mov
ja
pushl
jp
push
add
in
test
sarl
mov
mov
dec
test
push
or
sahf
dec
dec
add
je
test
adc
popl
mov
dec
and
stc
and
add
pop
or
into
rolb
xchg
cmc
lcall
and
cltd
dec
pop
xchg
xchg
ret
cli
add
imul
stos
mov
lods
mov
arpl
or
mov
add
fnstsw
xchg
mov
add
inc
ljmp
int3
mov
cli
add
aaa
pop
test
sub
push
in
push
mov
dec
aas
sbb
jl
add
push
hlt
lret
cmp
out
push
popa
fldt
jbe
xor
inc
insb
and
adc
add
cmp
lods
das
sbb
pusha
adcb
cmp
jmp
int
adc
testb
cld
cmp
add
outsl
sbb
aas
pop
adc
or
orb
sbb
cmp
cmp
js
xchg
mov
mov
mov
test
push
dec
ret
in
or
or
test
jo
cmpsl
sub
cmpsl
sbb
xchg
imul
outsb
in
add
add
cmp
sbb
adc
add
fistl
mov
xor
cmp
popl
call
mov
outsl
sbb
and
mov
sbb
xchg
nop
add
mov
popa
add
sbb
or
mov
mov
adc
je
cltd
mov
fisttps
decl
out
std
xchg
popl
add
decl
dec
cmp
cmpsb
jecxz
push
sbb
and
incl
decl
mov
les
pop
adc
fwait
addr16
rcr
lret
out
movl
push
dec
add
inc
adc
add
add
dec
sbb
xchg
or
mov
mov
mov
jle
fadds
add
fwait
inc
inc
jb
decl
mov
add
clc
pop
and
mov
mov
adc
mov
testl
add
xchg
adc
mov
ljmp
push
out
or
lock
mov
add
aad
mov
leave
push
addr16
mov
adc
mov
cltd
adc
dec
pop
pop
sti
or
and
ret
in
ljmp
adc
insb
fisubrs
lock
add
lcall
xor
aam
cmp
cmp
cmp
pop
pcmpgtw
aas
or
jecxz
add
insb
adc
ret
or
add
insl
add
cmpsb
lret
or
add
mov
nop
jmp
or
adc
insl
add
add
push
mov
out
fadds
jmp
loope
mov
lcall
inc
aaa
divl
mov
adc
notl
mov
add
lret
testl
pop
imul
add
adc
aaa
sbb
and
lahf
stc
push
in
cld
pushl
adc
add
mov
xor
inc
movsb
xchg
cmp
aaa
mov
adc
sbb
ss
dec
mov
jl
movsb
aas
daa
aaa
mov
jb
and
daa
xlat
add
inc
push
add
or
leave
cmp
jg
dec
pushf
cld
pushl
sbb
aad
outsl
and
mov
pop
mov
movsl
or
in
ja
mov
sbb
imul
scas
pop
xchg
cmp
test
leave
add
shll
stos
mov
add
in
mov
data16
decl
mov
push
cmp
aas
push
into
mov
pop
lret
cltd
add
icebp
scas
push
mov
call
mov
sahf
das
inc
or
mov
decl
lods
ja
mov
pop
pop
dec
pop
mov
mov
dec
mov
lock
cwtl
stos
add
xchg
add
mov
xchg
mov
add
or
sub
movzwl
adc
pop
adc
xor
mov
outsl
cli
jle
inc
fstl
sbbl
adc
or
ror
jb
insl
lahf
insl
inc
xchg
xor
mov
dec
aam
adc
pop
lock
mov
lcall
pop
mov
subl
andb
call
arpl
test
push
dec
push
push
or
int
inc
jnp
lea
push
idivb
mov
cld
lea
cmc
mov
pop
add
add
jl
adc
xchg
jmp
xlat
mov
jmp
sub
adc
mov
arpl
aaa
mov
add
xchg
lea
jmp
ret
shl
arpl
sbb
add
xchg
enter
dec
outsl
or
pop
int
cs
idiv
call
add
ret
mov
xchg
jbe
clc
push
lea
cld
add
ja
xorb
mov
add
pop
or
addr16
stc
xor
mov
mov
add
jmp
addl
mov
cmovo
repnz
xchg
mov
js
mov
ret
mov
mov
add
decl
mov
sti
loopne
or
or
mov
fcomps
cld
mov
aad
decl
xor
add
inc
sbb
mov
lcallw
push
xchg
popa
sub
decl
test
adc
in
add
mov
jno
mov
mov
stc
decl
inc
repz
or
mov
ljmp
mov
mov
push
jmp
mov
mov
por
mov
jae
mov
mov
adc
jnp
mov
push
mov
lods
add
cwtl
ljmp
mov
std
or
shl
mov
mov
dec
bound
or
lret
mov
xchg
mov
add
shrb
push
mov
bound
outsb
inc
lahf
les
xor
addr16
mov
jmp
inc
aaa
adc
push
add
mov
mov
fwait
push
or
sub
and
jmp
pop
push
dec
call
ljmp
add
lea
ret
cmp
mov
or
push
cmpsb
jp
orl
fmull
add
xor
push
aaa
mov
int3
jge
daa
notb
dec
out
cmpb
icebp
int
or
test
ret
je
adc
push
sti
fucomip
push
mov
test
ja
sbb
movsl
adc
call
cmp
sbb
fwait
add
xor
push
ja
jg
fistl
add
testb
add
test
and
mov
adc
mov
pop
add
mov
decl
sub
test
cmc
fiaddl
pop
cmpsl
add
loopne
mov
stc
incl
mov
inc
call
adc
sub
out
dec
ja
dec
mov
mov
add
adc
sub
mov
mov
add
mov
adc
lret
call
mov
fwait
lock
aas
mov
shlb
jns
pop
dec
mov
xchg
mov
dec
ret
sahf
js
popf
jmp
xlat
xchg
lock
add
pop
insl
dec
mov
ljmp
mov
fldenv
pusha
mov
mov
jle
add
bound
shrb
repnz
adc
fstpl
pop
adc
mov
stos
add
in
mov
aaa
in
add
jmp
mov
mov
mov
test
pusha
mov
add
mov
add
lock
aaa
add
mov
movsl
ffreep
test
mov
jmp
and
fcompl
stos
jmp
call
inc
pop
mov
adc
add
lea
insl
out
jnp
jmp
bound
mov
lods
imul
pop
add
dec
stc
push
add
aas
pop
fstpl
push
xchg
lea
mul
or
js
mov
push
pop
adc
mov
pop
outsl
and
pop
outsl
and
add
pushf
dec
mov
mov
cmp
mov
push
mov
inc
and
xchg
leave
xadd
ds
and
cld
and
dec
or
dec
pop
mov
cmpsl
mov
pop
cmpsb
push
mov
or
repnz
add
cli
pop
pop
faddl
mov
push
sbb
push
push
hlt
add
pushf
jbe
add
mov
jnp
xchg
adcl
daa
clc
inc
sti
or
ficoml
addb
lret
in
mov
movsb
cmpsb
dec
adc
pop
jmp
ss
mov
ficompl
add
fdivrs
cmp
sti
pusha
daa
lret
into
add
sub
aas
mov
fiaddl
mov
inc
test
inc
mov
lret
test
in
ss
dec
adc
and
mov
adc
and
add
dec
ret
xor
lods
lahf
rcrb
scas
mov
xchg
dec
aas
loope
dec
movsb
loop
mov
gs
mov
jne
insl
jae
rep
mov
mov
adc
xlat
xchg
xor
or
inc
cmp
or
shrb
xlat
mov
cmc
inc
cmp
mov
addb
ljmp
mov
flds
mov
insb
int
mov
cs
divl
push
icebp
pop
or
add
mov
push
ret
xor
mov
outsl
std
push
mov
ljmp
aas
pop
jb
mov
mov
xlat
mov
jbe
ljmp
insb
adc
fdivs
mov
push
push
jmp
add
mov
inc
jmp
pop
or
lret
mov
add
sbb
and
mov
mov
jmp
or
ja
push
lcall
or
cmp
and
cmp
push
lods
ja
imul
shl
cmp
popa
add
incl
add
xor
call
add
inc
sti
push
sbb
je
mov
xchg
inc
into
mov
pop
int3
or
push
mov
mov
leave
cltd
and
mov
ror
adc
out
loop
mov
xchg
jmp
mov
jecxz
js
fsts
push
jl
jne
add
dec
adc
add
jecxz
mov
decl
movsb
add
loope
push
cmp
adc
mov
movsb
add
mov
cmpsl
mov
jle
outsl
mov
es
fdivr
or
jmp
pop
ljmp
add
jae
mov
mov
mov
mov
ja
mov
sahf
cmc
orl
mov
push
or
push
mov
imul
ljmp
inc
push
outsb
mov
pop
mov
dec
push
lock
and
cltd
mov
lods
imul
mov
jmp
push
insl
pop
jmp
push
xor
bound
das
add
add
dec
cmp
add
jmp
clc
mov
scas
dec
lea
add
mov
push
inc
add
lds
rcr
add
rolb
insl
jmp
sub
add
pop
fstpl
jns
add
lea
filds
xchg
mov
popa
sub
jmp
add
inc
cld
decl
movsb
lret
adc
mov
ss
ret
popa
add
mov
adc
andb
andb
jne
xor
hlt
push
sti
sbbl
decl
mov
mov
adc
js
push
lods
testl
lcall
add
mov
sbb
and
add
dec
or
xchg
and
add
mov
js
mulb
push
test
add
test
cld
jo
mov
repnz
mov
pop
movsl
jp
stos
add
decl
inc
adc
jb
decl
es
mov
decl
in
dec
cmp
jp
mov
jbe
stos
mov
jl
addr16
pop
dec
pop
ljmp
mov
jb
ljmp
mov
insl
and
decb
sbb
punpckhdq
lods
addr16
push
mov
add
or
adc
add
and
add
and
add
and
and
insb
aas
mov
push
and
and
cltd
jno,pn
insb
aas
mov
push
and
jae
lods
daa
jae
lods
and
sbb
inc
pop
adc
lea
repz
dec
sub
rorl
dec
add
mov
lea
ret
popf
movsb
int3
add
dec
add
in
jmp
lret
test
jecxz
jmp
int
add
icebp
lret
insl
repnz
ljmp
lds
add
lea
jmp
lea
add
mov
cmp
lret
sti
mov
outsl
or
jg
out
add
fimuls
mov
pushf
dec
mov
mov
push
rol
push
inc
loopne
cmp
js
cmpsb
mov
cmp
add
mov
mov
add
cmpsl
adc
xorb
je
xor
call
mov
sub
and
inc
mov
or
add
jle
mov
pop
out
inc
and
or
add
sub
mov
jle
and
add
or
mov
sbb
mov
aas
push
xchg
push
inc
or
mov
js
shlb
mov
repnz
add
popa
js
mov
dec
add
cmp
movsb
flds
or
sbb
mov
jmp
aas
jne
mov
xchg
movsb
add
loope
mov
test
decl
mov
cmp
scas
push
dec
sbb
mov
add
pop
imul
fucomi
add
pop
sub
adc
ljmp
mov
add
add
xchg
mov
aam
add
add
mov
sub
add
jmp
add
mov
add
mov
mov
int3
fwait
addr16
ficompl
aaa
ljmp
add
xor
jmp
xchg
mov
mov
jmp
sub
jmp
shrb
or
add
ljmp
mov
lock
jmp
lea
idivl
adc
push
sbb
jl
ret
insl
dec
cmpb
mov
push
fldcw
fsubs
mov
movsl
mov
adc
iret
mov
je
cmpsl
jmp
les
pop
add
add
lock
leave
divl
dec
outsl
and
dec
aad
imul
je
jmp
and
pop
mov
xor
mov
push
xchg
fbld
xchg
lea
ja
mov
jmp
push
xchg
lea
mov
push
jmp
ja
or
and
xchg
fdivr
xlat
in
sbb
xchg
jbe
add
rep
xchg
mov
mov
out
imul
adc
loopne
add
fiadds
adc
pop
jmp
lcall
decl
pop
in
cmp
pop
int
rolb
lds
ret
or
lods
mov
sub
pop
mov
iret
dec
pop
pop
inc
je
mov
addr16
add
mov
mov
ret
or
add
icebp
fists
add
jne
and
mov
mov
test
inc
xorl
adc
sbb
cmp
add
pop
stos
sub
xchg
arpl
lea
ficomps
lods
or
inc
gs
test
ds
sub
lcall
dec
cmpsb
dec
cmp
mov
sub
add
lcall
inc
mov
mov
outsl
loop
cmpsl
push
ljmp
mov
jp
push
clc
sub
fildl
stos
mull
loope
pusha
pop
notb
clc
aam
xchg
inc
jmp
or
sub
rorb
sbb
add
addb
test
cmpl
lea
add
pop
jmp
mov
inc
sub
add
add
jmp
lds
test
mov
cli
push
test
jmp
pop
mov
add
adc
je
pop
aas
and
mov
iret
cmc
sbb
pusha
rol
idivb
pop
add
hlt
fcomp
cmpsl
pop
int3
jns
imull
repz
xchg
cld
je
dec
mov
call
jp
outsb
or
jmp
add
out
add
out
adc
call
jne
pop
pop
movsl
xchg
add
fs
mov
add
addr16
push
pop
lahf
cld
jmp
repz
ss
mov
add
xchg
pop
push
mov
xor
add
mov
dec
jb
mov
push
inc
add
mov
inc
jne
sub
ret
add
mov
mov
sarl
pop
mov
sbb
andb
andb
rclb
jl
xchg
das
leave
div
shlb
sti
fnstenv
aaa
push
mov
mov
sub
pop
add
sbb
incl
mov
mov
add
jnp
clc
pusha
mov
mov
jnp
or
popa
mov
cmp
mov
inc
dec
adc
adc
aas
xor
cmp
shll
adc
or
push
add
xor
mov
pop
xor
push
repnz
jne
xchg
adc
mov
arpl
test
call
ret
cltd
mov
xor
mov
lock
sbb
aaa
mov
pop
xor
add
lds
mov
add
ret
jl
es
out
test
mov
add
ljmp
adc
push
mov
mov
mov
adc
negl
mov
stc
cmpsb
loope
jle
cmp
lock
mov
add
mov
enter
xor
out
call
lahf
and
sbb
les
jmp
push
add
bnd
cmc
mov
sub
jmp
popaw
cld
mov
or
fsubrl
ja
lret
ljmp
mov
shlb
push
add
call
mov
mov
mov
popa
fcoml
push
push
xchg
inc
add
adcb
mov
test
mov
decl
rolb
out
sub
imul
pop
xchg
dec
mov
je
mov
adc
das
mov
pop
lret
and
push
loope
xchg
cmp
add
into
incl
popf
incb
imul
xor
cmp
gs
xor
jl
jne
sub
cmp
in
cmpsl
and
std
xchg
adc
sub
push
mov
out
aaa
push
je
sub
xchg
mov
fldenv
aas
add
test
xor
xchg
loop
add
mov
mov
outsl
jb
mov
jmp
fistps
mov
add
dec
mov
xchg
addr16
mov
decb
inc
add
lret
jno
ljmp
mov
ljmp
cmp
lods
ja
aaa
sbb
add
mov
pop
ja
push
pop
mov
add
or
adc
cwtl
xchg
stos
adc
int
add
int
test
mov
loopne
jmp
cmpsb
addr16
std
cmp
push
xchg
pop
or
nop
movsl
sbb
cwtl
adc
rcll
stc
push
jecxz
call
jne
lods
mov
int
inc
inc
add
inc
mov
push
push
cmp
movsb
or
fs
and
pop
inc
sbb
xchg
jbe
adc
mov
lret
lret
ljmp
add
jmp
stc
lea
test
mov
sub
add
jns
in
add
xchg
out
test
ljmp
cmp
or
push
sti
add
jmp
sub
leave
adc
pop
lods
popa
pop
pop
out
dec
sub
lea
add
movsl
add
adc
and
je
mov
out
into
lahf
imulb
fnstenv
orb
inc
push
xor
mov
jecxz
mov
mov
sbbb
and
test
nop
jno
sub
repz
mov
jns
push
in
adcb
out
mov
shll
out
sub
inc
mov
shl
adc
cmpsl
and
push
jecxz
mov
mov
add
mov
xchg
ss
mov
jnp
lahf
pop
xor
inc
outsl
mov
aam
out
rolb
mov
xchg
push
pop
scas
ja
fisttps
sbb
mov
mov
rclb
pop
imul
add
pop
mov
std
test
ret
add
mov
or
mov
mov
subl
scas
cmp
mov
roll
push
pop
into
push
scas
push
inc
and
add
push
pusha
mov
sub
jmp
cmp
inc
pop
mov
xchg
adc
or
mov
insb
push
sbb
outsl
xchg
jg
mov
add
add
pop
xchg
adc
int
mov
jmp
imul
int
add
add
ret
add
lret
outsb
inc
mov
pop
add
pop
sahf
add
aaa
mov
stos
fidivl
icebp
or
fildl
jg
mov
and
and
jge
push
inc
jno
inc
out
mov
add
movsl
push
jmp
pop
cld
jmp
movsl
pop
mov
movsl
sbb
mov
mov
mov
movsl
adc
pop
push
outsl
and
imul
imul
add
lret
mov
mov
mov
xchg
mov
es
sar
inc
ret
and
lds
mov
repnz
js
pop
pop
ret
and
adc
adc
mov
repz
lds
sti
adc
cs
add
mov
popf
add
movsb
out
enter
ljmp
daa
test
jg
mov
jecxz
pop
hlt
fwait
add
pop
repz
add
pop
stos
mov
push
es
push
jmp
add
int3
xchg
jno
mov
jl
add
push
call
mov
xor
fwait
leave
fwait
jmp
lock
fildll
push
sub
push
addr16
sarl
pushf
mov
lds
not
mov
jl
outsl
ficompl
or
add
dec
or
pushl
push
adc
testb
mov
movsl
add
jmp
or
add
or
pop
push
xchg
outsl
arpl
lea
push
push
sbb
int3
mov
cmovle
mov
cld
mov
adc
in
insl
stc
js
jle
push
xchg
out
aaa
jmp
lea
push
jbe
push
add
mov
sahf
clc
es
adc
popa
mov
sbb
ja
inc
mov
mov
lea
and
inc
dec
fisubrl
ret
pusha
leave
push
pop
mov
dec
add
mov
icebp
insb
rorb
test
loop
pushl
or
or
ljmp
outsb
add
push
ljmp
or
pop
ret
cli
adc
adcl
mov
mov
les
push
mov
mov
mov
in
pop
mov
jle
inc
pop
and
ret
mov
clc
inc
inc
dec
out
add
incl
int3
jo
mov
into
cli
pop
jg
sahf
sbb
mov
aas
je
sub
das
test
sahf
idivb
shll
dec
ret
out
add
movsl
dec
lea
add
lahf
jp
cmpsb
fwait
ret
decl
pushl
mov
mov
xchg
repz
mov
add
adc
pop
into
mov
push
inc
push
out
rcrl
in
les
push
fiadds
gs
or
dec
in
add
add
cld
outsl
add
push
add
add
dec
mov
cld
dec
pop
loopne
dec
mov
sbb
movsb
in
dec
mov
jae
cmp
js
or
add
cmp
mov
xchg
imull
adc
outsb
xchg
testb
push
lahf
insb
ds
loope
and
push
js
adc
dec
pop
pop
call
jo
mov
add
pop
sub
jmp
lahf
rcll
sub
inc
insl
sahf
imul
add
push
mov
scas
stos
cmp
jmp
andb
lods
jns
inc
push
mov
ret
add
adc
ja
jnp
icebp
jne
int3
ja
pop
fildl
inc
and
or
addr16
jne
sbb
cmp
sti
test
gs
xchg
jno
mov
or
jae
mov
loopne
add
xchg
testl
out
fimull
mov
sub
adc
sub
aas
and
xor
test
outsl
or
scas
sbb
mov
add
add
xchg
cld
test
jo
test
adc
mov
fmul
lea
dec
stos
stos
jmp
jb
cmpsl
xor
adc
add
das
pop
add
push
cltd
add
sbb
add
sub
into
popf
ja
mov
shll
jl
jl
mov
pushf
fimuls
movsb
lds
test
xchg
pop
inc
sbb
adc
lods
jae
aad
mov
idivb
add
inc
pop
dec
mov
jns
mov
jno
push
xor
movsl
cmp
or
cld
les
add
sub
lret
push
or
inc
decb
or
adc
add
jge
aam
mov
mov
push
sub
loopne
adc
mov
int
dec
cmp
mov
mulb
nop
sub
pop
pop
std
or
scas
enter
popf
sarb
xor
fsubl
mov
ss
ss
sub
movsl
xor
adc
arpl
push
mov
mov
add
push
addl
push
xchg
or
or
aad
add
add
dec
aaa
gs
xor
fildl
jle
mov
push
cli
and
nop
roll
loopne
daa
pusha
xor
push
cli
sub
xchg
fcoml
cmpb
pusha
cmp
adc
inc
mov
pusha
pop
jne
push
cli
jp
jle
add
stos
inc
lea
fbstp
cmp
mov
push
aas
and
int
cmp
pop
jl
pop
pop
pushf
shlb
pop
aas
cmp
pop
pusha
leave
mov
je
mov
or
dec
xchg
or
ret
hlt
mov
or
sbb
enter
lock
add
and
adc
sub
mov
and
or
jl
pop
push
mov
aam
scas
decl
sub
filds
mov
jp
pop
loope
sbb
or
rclb
test
and
mov
add
cmp
pushf
shll
add
nop
cli
jle
push
mov
roll
xor
or
mov
clc
loope
arpl
lods
pop
std
inc
mov
sub
lods
push
add
mov
jg
pop
loopne
lret
subb
gs
or
outsl
scas
insl
dec
jg
add
cmp
add
cmp
hlt
cmp
loope
pop
pop
aad
jbe
cli
int
xchg
sbbb
xchg
sub
and
pop
and
lods
xchg
or
jo
imul
dec
test
imul
popa
jg
icebp
pop
push
out
testb
dec
sarb
push
cld
mov
push
repz
or
cltd
push
daa
fimull
jle
jecxz
popa
push
push
out
mov
push
or
ss
xor
pop
lds
decl
push
mov
std
inc
cld
insb
adcl
mov
inc
addb
ret
rclb
aam
call
leave
lret
icebp
call
inc
ret
and
cmpsb
testb
test
mov
call
std
icebp
mov
add
or
inc
add
inc
outsl
or
mov
pop
cmpb
mov
pop
cmp
mov
xlat
push
push
pushf
outsl
js
pop
mov
mov
out
and
xor
scas
ret
push
pop
ret
stc
loope
adc
loopne
in
andb
testl
lcall
notl
jmp
pop
adc
shrl
dec
mov
test
lret
testl
pop
scas
pop
adc
lcall
ret
inc
xchg
jns
cs
out
inc
mov
adc
mov
add
test
adc
inc
gs
add
into
jl
dec
or
mov
cli
mov
dec
ljmp
pushf
pop
sbb
xor
and
out
fwait
push
ffree
test
pop
pop
lea
addr16
add
pop
lret
mov
addr16
jecxz
sub
mov
lret
xchg
movups
cltd
ret
adc
insl
or
or
or
and
leave
push
aaa
push
jnp
cmp
add
divl
adc
pop
cmc
or
pop
stc
adc
push
jle
push
push
pop
outsl
cmp
jb
adc
pop
push
ret
out
push
lea
aaa
xchg
or
flds
adc
imul
add
push
loope
dec
addl
pushf
push
push
ljmp
and
sub
test
pushl
pop
faddl
aaa
mov
mov
in
xor
outsl
sbb
push
xor
mov
inc
jle
and
test
fwait
pop
aas
push
and
xchg
inc
incl
lret
sbbb
inc
pop
pop
gs
adc
push
push
in
test
idiv
and
adc
stc
add
ja
fistpl
adc
and
jmp
and
dec
add
mov
push
lcall
inc
add
mov
add
stos
test
inc
or
mov
push
adc
mov
xchg
cmp
xchg
out
xchg
xor
pop
lea
out
aas
mov
ds
mov
or
std
inc
call
shl
sub
shl
inc
cmp
out
mov
xchg
mov
jp
jno
lods
fwait
jno
insl
lahf
cmpsb
ret
aad
push
les
insl
mov
arpl
insl
fwait
arpl
add
mov
mov
rcrb
add
jae
push
mov
addr16
xchg
mov
loopne
mov
lods
fwait
sahf
loope
dec
mov
jmp
mov
lods
xchg
xchg
mov
sbb
sub
mov
popa
xor
fcoml
sub
incl
jmp
jnp
inc
jb
test
adcl
push
lods
lea
bound
out
jne
or
jmp
mov
xor
or
or
push
lea
add
test
mov
add
mov
movsl
outsb
das
jmp
mov
mov
xchg
jnp
add
mov
push
ret
sbb
fmull
jmp
add
mov
add
push
sub
bound
iret
mov
add
hlt
test
add
int3
mov
push
lods
sarb
xor
lcall
xor
daa
mov
push
pop
leave
mov
iret
sub
sbb
pop
test
pop
inc
and
cmp
add
addr16
xor
outsb
clc
mov
hlt
or
jle
adc
cmp
jno
sub
push
lds
add
cs
out
ss
or
stos
mov
add
cmp
jns
cmp
movsl
cmp
insl
jno
icebp
aas
and
fs
mov
jne
sti
jp
jle
ja
sarb
cs
scas
jle
add
and
push
int3
imul
cmp
mov
lcall
icebp
cmpsb
mov
sti
mov
inc
jnp
mov
xchg
cmpsb
fistps
sti
xchg
mov
add
mov
inc
into
in
inc
mov
jno
lea
test
lcall
dec
sub
add
or
add
sub
les
lahf
in
shll
add
lock
adc
loopne
adc
loopne
frstor
lods
xchg
outsl
mov
test
xchg
les
push
in
mov
add
orl
popf
fnsave
adc
loopne
push
popl
add
jmp
roll
mov
add
mov
push
mov
jo
dec
test
out
adc
int3
mov
decb
ljmp
cs
adc
pop
leave
or
pminsw
fdivp
jg
sub
dec
jo
sbb
pop
or
add
pop
or
fmuls
loop
cmpsl
sbb
gs
mov
xchg
stos
push
int3
imul
pop
testb
push
inc
add
jno
adc
jbe
push
adc
inc
adc
cmp
rcrl
add
inc
and
mov
dec
and
or
mov
add
data16
mov
add
filds
dec
push
rorb
mov
xor
and
fidivs
add
xor
jae
or
mov
pop
add
std
cmp
sti
adc
sub
adc
xlat
xchg
xorb
ja
loop
mov
std
inc
addr16
jl
or
jl
push
mov
inc
ja
adc
je
les
mov
add
and
lea
push
nop
repz
pop
std
aaa
sti
mov
in
xchg
inc
std
fcomi
jp
jmp
out
add
fbstp
pop
fstl
imul
xor
mov
daa
movsb
lock
xrelease
lcall
push
pop
ljmp
in
adc
add
mov
cwtl
cld
add
fistpl
insl
mov
jno
push
adc
mov
clc
mov
push
aad
cmc
or
push
fidivs
adc
xorl
adc
pop
push
lea
mov
xchg
fwait
test
sub
mov
ficoml
jns
adc
add
mov
iret
popl
mov
stos
psrld
andl
jo
lods
adc
jbe
js
sub
int
jge
in
imul
mov
clc
adcl
mov
shr
dec
jo
cmp
jmp
jbe
cli
pushl
or
lea
sti
jne
xor
lea
push
push
add
jno
adc
xchg
fiaddl
pusha
aas
pop
data16
cli
jne
and
cmpsl
and
sbbl
push
push
imul
and
xchg
adc
arpl
xorb
shlb
push
mov
pop
adc
sub
decl
lret
xchg
je
incl
push
and
lcall
add
add
jne
inc
mov
shl
leave
mov
bound
scas
fldt
add
cmpsl
pop
int3
pusha
add
add
dec
jb
jbe
mov
xchg
mov
mov
dec
add
out
cwtl
pushl
sarl
push
incl
xchg
inc
call
shlb
rorl
mov
xor
xchg
faddp
and
jbe
lahf
lods
xchg
popa
cmp
xchg
cli
add
dec
clc
mov
or
mov
mov
enter
enter
sti
cwtl
dec
rorb
xchg
popa
inc
pop
enter
adc
xchg
mov
add
push
jle
cmpsl
mov
add
cmpsl
fcompl
movsl
fistl
insl
mov
adc
or
call
dec
xchg
in
or
enter
sub
pop
testb
sbb
and
mov
bound
cmp
mov
ret
jp
xchg
push
bound
imul
push
sahf
push
test
adc
mov
mov
fildl
std
ret
stc
in
mov
lret
data16
loop
sub
jns
cmp
mov
insl
idiv
into
push
fldt
mov
cld
stc
std
and
ret
orl
stc
jo
add
and
sub
das
push
bound
and
sbbl
insb
lcall
aad
mov
mov
cld
inc
and
sbb
int
sub
pushl
imul
inc
pop
addl
arpl
push
lock
les
pop
pop
sbb
shrb
xchg
add
lcall
loop
std
jo
inc
push
lahf
xchg
cmp
int
jbe
and
jns
xchg
addb
add
icebp
xchg
pushf
movsb
xor
pop
sti
xlat
repz
xor
sar
pop
or
jg
cmp
mov
mov
mov
pop
sbb
dec
ret
test
js
push
cmp
repz
xor
xor
out
mov
adc
divl
adc
push
sti
mov
pop
ret
decl
out
add
outsl
sarl
push
push
mov
orb
decb
adc
lds
fs
xlat
or
and
add
mov
jg
mov
add
adc
dec
mov
cwtl
pushf
arpl
push
mov
popa
inc
and
and
or
stos
or
fdivrs
nop
lret
in
lods
inc
je
movl
jge
pop
sbb
jns
push
mov
mov
add
cwtl
push
sbb
dec
rol
mov
push
stos
call
bound
mov
adc
sbb
aas
test
dec
sbb
out
mov
fcmove
negb
dec
clc
mov
push
dec
adc
cld
clc
lret
sbb
or
adc
pop
sbb
jbe
aaa
push
jns
sub
in
or
sub
inc
adc
arpl
inc
add
stc
inc
sbb
xchg
data16
cmp
push
rcll
gs
or
outsl
xor
sub
push
mov
cmp
jno
testl
jle
bound
jle
sub
jmp
addl
rolb
add
add
cmpsl
cmp
push
clc
jge
adc
xchg
aas
jnp
add
jo
aas
mov
ret
cld
arpl
cmpsb
addl
xor
jne
aas
or
add
test
out
jl
add
cli
inc
push
xlat
mov
mov
icebp
fs
sub
fcoms
jecxz
pop
test
jecxz
xor
cltd
std
mov
fs
pop
adc
jle
cltd
push
ja
add
add
mov
lods
add
dec
fidivrs
mov
add
or
or
adc
xchg
mov
add
mov
jg
mov
add
push
testl
mov
ret
mov
xchg
jns
cmc
add
loopne
adc
add
loope
fwait
leave
mov
add
lahf
sub
jns
popa
or
jbe
jg
mov
add
fistl
inc
test
dec
jbe
jle
fnsaves
jno
add
xchg
push
fcmovnu
icebp
push
add
lea
add
jl
add
add
fstl
test
pushf
mov
mov
lds
cmp
jno
test
push
dec
jno
xor
shll
pop
lds
mov
rorl
add
pop
lcall
add
dec
iret
pop
cmc
add
cs
pop
int
negl
add
negl
cmc
fmull
iret
adc
testb
pop
leave
ud1
inc
lret
and
mov
jnp
lret
iret
inc
sub
and
xchg
or
jecxz
adc
fs
testl
scas
adc
mov
incb
add
push
ljmp
punpckhdq
stc
inc
test
or
cmp
and
mov
mov
add
pushf
test
mov
add
clc
and
xor
or
imul
add
or
add
cmp
clc
roll
fs
dec
mov
cmp
add
lea
or
cli
stc
in
cld
dec
fs
jmp
mov
call
and
xor
add
ljmp
in
rorl
sbb
cltd
sub
pop
mov
jb
inc
sbb
pop
add
or
sbb
in
add
fisubl
add
pusha
repnz
enter
enter
jb
push
fwait
arpl
ret
cmp
sub
sbb
outsl
push
mov
popl
and
rclb
mov
xchg
das
not
cltd
add
or
pop
mov
add
jecxz
jno
mov
xchg
imul
jp
and
fldt
lea
add
mov
mov
lock
cmp
cmc
je
popa
in
sub
out
pop
dec
popa
push
rorl
loopne
inc
clc
jo
jb
lock
dec
subl
cmc
orl
inc
jmp
dec
jmp
dec
fldenv
pop
jo
xor
inc
inc
repz
inc
add
sub
sti
xor
call
cmp
ret
je
repz
cld
js
aam
sub
xlat
in
scas
popa
mov
xchg
lea
mov
enter
test
adc
mov
inc
lret
sahf
jle
push
cmc
push
or
sub
daa
stc
dec
cld
add
lock
je
repnz
cld
call
jbe
xlat
insb
scas
popa
mov
xchg
lea
bound
add
out
je
jnp
sti
sbb
aam
dec
cmp
std
cmp
scas
dec
add
jmp
in
pop
mov
fisttpl
add
mov
xor
mov
mov
add
mov
mov
and
je
imull
rolb
sub
arpl
pop
fcos
add
inc
jne
sbb
mov
dec
ds
sub
mov
add
add
pop
lds
addb
mov
nop
inc
cmpsl
aam
call
add
add
dec
sbb
lock
dec
add
push
push
test
sub
sbb
dec
stos
out
insl
pop
add
daa
scas
outsb
clc
iret
cwtl
lret
in
xchg
not
mov
cmpsl
rclb
sbb
enter
sub
nop
dec
cmpsl
les
outsb
push
xchg
jle
dec
stos
roll
cltd
dec
pop
xchg
cmp
fisttpl
inc
lea
test
add
idiv
jno
and
cmpsl
inc
bound
aas
cmp
dec
add
lret
imul
shll
cmp
mov
bound
push
lds
insb
push
add
nop
gs
adc
jmp
arpl
or
mov
add
add
cli
adc
or
ss
pop
testb
pop
ret
pop
cmp
out
adc
xchg
fs
popa
mov
and
or
ret
pop
sub
add
adc
mov
pop
sar
xorb
or
jo
mov
cltd
jbe
inc
fdivr
je
stos
push
lcall
pop
ret
or
fwait
mov
inc
mov
lahf
xchg
push
add
jbe
inc
std
dec
and
pusha
shlb
mov
call
or
pop
and
mov
dec
and
std
mov
jecxz
pop
mov
mov
rcrb
call
push
pushf
add
mov
adc
mov
andl
inc
add
je
jne
or
scas
add
jle
loop
andb
aas
add
xor
add
rorl
out
out
add
mov
inc
mov
push
mov
push
push
ss
add
xorb
jl
add
pop
xlat
decl
mov
adc
mov
addl
pop
jp
fildl
mov
dec
mov
out
and
lcall
inc
mov
pop
ret
ret
subl
lock
scas
push
pop
xlat
or
mov
pusha
scas
aaa
fs
add
lea
fld1
lea
pop
out
push
mov
gs
inc
jmp
xlat
inc
inc
xor
lea
imul
mov
dec
scas
xor
xchg
push
les
push
add
imul
stc
jl
add
scas
pop
add
int3
pop
pop
loop
adc
lret
add
push
add
sbb
pushl
jne
xor
imul
push
inc
dec
inc
and
pop
inc
rcrl
inc
shll
es
adc
aaa
mov
cmp
test
aaa
rdpmc
test
add
jp
mov
mov
jno
popa
and
mov
adcl
and
mov
add
push
mov
dec
je
aam
push
scas
jecxz
dec
xor
inc
and
mov
out
mov
and
jbe
adc
cs
adc
mov
add
sub
ret
sub
or
decl
jb
xorl
imul
xor
insl
add
scas
sub
push
push
aam
mov
test
movsl
popa
das
into
iret
mov
mov
jle
es
add
ficoms
jle
push
cmp
pushf
fldl
pop
sbb
xor
sbb
sbb
jle
in
xchg
loopne
xchg
iret
adcl
add
mov
add
cmp
jg
jle
inc
stos
lret
cmp
dec
scas
sub
pop
inc
jb
cmp
add
adc
and
push
push
or
enter
fimuls
int3
xchg
popa
inc
stos
iret
jae
xchg
xchg
sbb
jl
add
xchg
movsb
lds
std
push
mov
js
lcall
fimuls
or
ss
sbb
mov
cmp
lods
fcomi
push
or
push
mov
es
jb
in
icebp
adc
lcall
sbb
sbb
push
xchg
xchg
mov
mov
xchg
mov
mull
scas
pop
insl
dec
xchg
jg
mov
sub
scas
sub
je
or
dec
mov
sahf
data16
lds
add
daa
cmp
ljmp
pop
adc
stos
jae
test
jle
rorb
jg
out
add
testl
aas
add
mov
push
and
fimuls
imul
pushl
pop
dec
mov
mov
rcrb
and
xlat
jnp
mov
fs
add
sub
insl
adc
mov
inc
sbb
rclb
cmp
mov
jns
jg
bound
jne
adc
cmp
push
cmp
dec
dec
cmp
push
adc
ss
mov
inc
add
pop
jbe
sbb
cmpb
add
add
mov
mov
cmpsl
shlb
adc
and
je
stos
cltd
xor
cmp
lahf
out
add
hlt
popa
adc
adc
enter
xchg
push
pushf
clc
popf
cmpsl
cld
xchg
cmpsl
cld
jmp
pop
push
clc
or
test
in
fists
testb
test
mov
pop
in
mov
mov
push
ret
loope
mov
xchg
xchg
jnp
cmp
or
arpl
sbb
mov
ret
in
data16
mov
jae
cmp
subl
or
mov
sub
and
jmp
in
sbb
divl
pop
out
mov
mov
js
sbbb
lea
or
loopne
pop
mov
mov
mov
mov
gs
or
xchg
lcall
mov
repz
les
dec
and
adc
dec
jne
mov
pop
jle
push
test
push
mov
je
orl
add
mov
loopne
je
jle
movsb
push
pop
adc
add
adc
add
add
dec
mov
inc
test
lea
add
nop
lret
adc
mov
dec
pop
adc
mov
rolb
addr16
or
jmp
hlt
jne
xor
scas
xchg
repz
jae
inc
add
lock
bound
adc
jno
xchg
f2xm1
decl
cmp
test
inc
add
std
jno
add
or
sti
and
inc
lock
aad
decl
mov
inc
inc
nop
pop
jp
pushf
lock
xor
fs
add
inc
xchg
popa
leave
xchg
insl
dec
leave
ja
xlat
xor
sub
cmc
sti
pop
into
add
mov
cmc
pusha
push
cs
adc
or
adc
push
in
inc
lret
cmp
xchg
xorb
add
mov
inc
stos
out
xchg
cmpsl
adc
jle
mov
pop
data16
pop
bound
pop
into
adc
pop
lret
pop
push
adc
pop
push
adc
pop
pop
jae
aas
hlt
pop
pusha
lods
pop
in
add
mov
add
mov
or
lret
add
cmpsl
push
jo
cmpsl
arpl
mov
sti
pop
jge
mov
adc
imul
mov
es
jo
jmp
lds
rcrl
sbbl
add
pop
imul
fstl
dec
xchg
cmp
subb
pop
cmp
mov
add
mov
mov
mov
mov
mov
mov
mov
dec
or
add
mov
add
fisttpll
cmpsl
mov
outsb
xchg
pop
cli
test
loop
push
rolb
jle
ljmp
add
add
fdivs
add
int3
pop
sbb
test
adc
cmpsl
xchg
mov
les
pop
ret
adc
pusha
dec
push
dec
cltd
push
push
out
push
push
pushf
pushf
pop
adc
aaa
add
sarl
push
mov
sub
daa
mov
mov
test
mulb
xchg
xlat
ss
add
mov
sti
pop
bound
and
add
cmpw
out
and
adcl
fdivrp
push
adc
xor
call
pop
outsb
pop
add
sub
sbb
je
xchg
icebp
mov
sub
add
adc
pop
cmovle
inc
stos
mov
xchg
ficomps
mov
hlt
pop
pop
inc
jmp
inc
cmpsl
enter
in
lock
adc
cs
test
pop
push
or
jle
cmpsl
loopne
or
lock
or
dec
rolb
adc
or
daa
jbe
xchg
adc
sub
push
in
ficomps
and
dec
fdivr
scas
xchg
enter
js
sub
roll
mov
lahf
repz
add
add
push
mov
mov
add
aad
in
jge
adc
adc
add
inc
inc
adcl
dec
add
jo
mov
adc
jle
jmp
scas
aas
popa
int
mov
mov
jo
cltd
or
rclb
sbb
lods
sub
dec
data16
lods
stos
nop
mov
not
jno
add
pusha
mov
and
pushf
xchg
add
pop
cmp
cmp
dec
and
ss
sbb
lea
shll
mov
or
jle
dec
dec
push
mov
aam
or
jle
dec
jle
lahf
or
add
mov
out
mov
jg
jb
add
push
push
or
or
loop
jmp
add
pop
mov
push
notl
push
add
fucom
gs
insl
or
jmp
add
sub
mov
or
push
pop
mov
inc
xchg
repnz
add
jno
mov
or
cmp
add
in
ret
and
jmp
fucom
jle
sbb
sbb
mov
jbe
loop
aas
clc
add
arpl
or
jl
ja
adc
and
fimuls
push
mov
jle
adc
mov
mov
in
in
mov
or
in
testb
testl
xchg
nop
mov
lds
inc
jb
and
pop
sarb
cmpb
aad
rcrb
int
jae
rcrb
ss
adc
enter
sahf
insb
cmpsl
mov
jge
mov
inc
popl
sub
rolb
int
push
inc
fnsave
pop
stc
mov
mov
push
dec
cmc
test
pop
add
lea
outsl
xchg
movsl
fildll
mov
jb
out
fdiv
push
loop
or
cltd
lret
add
mov
push
inc
lret
mov
fidivs
mov
jae
adc
lret
add
or
int3
xchg
mov
xor
push
jno
rclb
jne
or
rcll
pop
add
mov
mov
lcall
cmovo
or
bound
xlat
jno
into
jge
inc
aas
adc
int3
adc
sub
mov
xlat
jno
pop
ficoml
popf
adc
pushl
fistps
scas
add
xor
mov
mov
cli
ljmp
or
aam
or
in
add
repnz
jge
ss
int3
call
fcoml
and
mov
addr16
lahf
and
js
mov
inc
and
jge
adc
push
inc
add
mov
cmpsl
adc
bound
lea
or
sbb
add
bound
shlb
pop
jle
cli
test
bound
add
es
jg
mov
bound
xchg
fldt
pop
fldcw
shll
aas
add
cmpsb
and
sahf
and
add
ret
add
jne
out
dec
add
add
iret
rorb
push
jle
les
enter
push
cmp
aam
add
mov
or
fwait
jns
jl
bound
mov
popa
cmp
stos
stos
inc
and
pusha
add
add
mov
and
sub
add
mov
jp
imul
add
fiadds
dec
scas
add
add
add
mov
add
sbb
lret
xchg
and
les
xchg
xlat
adc
cld
addl
dec
int
loope
mov
addb
add
mov
outsb
mov
inc
jbe
cmp
fimuls
outsl
mov
pop
mov
cmpsl
push
push
bound
test
inc
lea
xor
pop
out
pop
push
adc
jnp
add
cmpsl
adc
push
mov
add
jle
imul
lcall
sbb
add
add
inc
adc
inc
imul
pop
imul
call
push
mov
jb
test
aam
adc
lcall
pop
xadd
mov
fdivr
xor
sbbl
and
inc
add
xor
xchg
jle
ret
xorl
sbb
pop
and
push
nop
adc
push
mov
ficoms
xor
add
pop
pop
sti
ror
xchg
int3
fidivs
ficoms
push
inc
add
and
sbb
in
pop
rcr
xchg
mov
mov
shlb
dec
push
dec
push
add
mov
add
mov
add
inc
out
lcall
sub
push
enter
shrl
negl
sti
mov
in
sub
fnstsw
iret
and
jg
mov
fisubl
in
add
push
flds
sub
call
andb
sbb
push
lock
mov
cs
inc
pushl
add
or
in
mov
cwtl
adc
mov
les
pop
out
shrl
dec
cmpsl
dec
xlat
dec
icebp
add
push
adc
jno
push
push
jo
mov
mov
inc
mov
in
dec
mov
rolb
loope
in
es
in
hlt
adcl
push
jno
js
xchg
mov
mov
pop
or
in
pop
jnp
les
fistl
add
mov
sbbl
ljmp
jmp
mov
js
clc
int
push
pop
cmpb
test
push
data16
int
push
sub
cmpsl
pop
jmp
xchg
into
ja
jge
jo
pop
mov
xor
insb
addr16
aad
add
mov
pop
sbb
mov
pop
call
ljmp
mov
cmp
imul
push
lret
adc
fiadds
gs
pop
pop
in
add
mov
push
jne
add
outsl
push
je
pop
and
mov
test
jo
adc
lds
mov
add
sti
movsl
pop
push
mov
notl
test
add
dec
and
out
xlat
mov
and
cmp
scas
sub
loop
cli
jns
roll
push
inc
loop
mov
cmp
sti
ret
sti
mov
ds
sti
mov
ds
pop
sarb
mov
cmp
add
or
cli
add
mov
cmp
adc
cmpsl
push
and
dec
in
sbb
cmpsl
les
or
in
add
cmpsl
int3
ss
out
loope
add
mov
js
inc
stos
outsl
adc
xlat
out
std
mov
cmp
lds
cmp
leave
add
sub
mov
add
sub
push
jne
lea
add
or
cmc
mov
mov
add
mov
add
test
dec
pop
add
adc
add
int
add
push
lahf
test
int
add
adc
cmc
testb
or
scas
jbe
cmc
int
mov
cmpsb
jae
cmp
mov
dec
mov
outsl
sub
inc
int3
call
push
cmp
fimuls
jmp
and
loopne
div
xchg
mov
inc
shl
push
pop
outsl
daa
fs
xchg
aas
add
adc
insb
push
mov
dec
clc
sbb
out
sub
mov
mov
in
mov
push
jmp
sub
inc
add
in
push
ret
push
ret
and
imul
inc
orb
addr16
inc
add
dec
jo
mov
mov
jmp
pop
add
imul
push
mov
mov
and
decb
xor
popa
mov
cmp
cmp
jg
xor
mov
jle
sub
je
cltd
dec
or
xor
popa
xchg
xor
mov
mov
decl
mov
add
mov
std
sub
or
xor
scas
push
inc
xor
add
and
add
repnz
push
xor
mov
adc
icebp
adc
add
mov
test
sbb
mov
pushf
fstpl
lods
add
outsl
inc
mov
daa
mov
pop
push
inc
mov
popl
lds
arpl
push
sub
in
js
in
add
loopne
inc
outsl
clc
xor
cmp
int
or
mov
fadds
xor
cmpsl
addr16
bound
rcrb
in
add
xchg
push
xchg
xor
cmpsl
add
dec
popa
les
fwait
sbb
int
add
pop
dec
inc
lds
inc
adc
incb
popa
xchg
roll
jmp
xchg
mov
or
test
mov
mov
adc
mov
mov
insb
push
outsl
sbb
pop
inc
adc
addl
mov
test
lret
add
inc
mov
mov
dec
xchg
push
insb
leave
outsl
pop
cmp
or
pop
lahf
add
aaa
mov
jp
mov
jecxz
add
jo
and
mov
fsts
add
lea
into
jne
jge
adc
bound
or
jne
mov
pop
lcall
inc
add
fcmovne
add
mov
add
addr16
mov
jbe
jbe
decl
adc
push
push
bound
rolb
smsw
mov
aaa
jg
mov
xchg
out
add
shrl
jae
pop
or
fsts
inc
inc
add
add
add
xor
inc
mov
addr16
hlt
add
adc
decl
xor
sysenter
xor
jae
pop
ficoml
popa
inc
add
xor
add
xchg
sti
dec
add
xor
jmp
xor
fisubrs
mov
inc
ficoml
mov
inc
mov
lods
dec
rclb
sub
xchg
push
lods
dec
pop
mov
add
sarb
mov
push
push
push
pushf
mov
jg
rolb
outsl
call
cmp
xor
add
rolb
sub
dec
icebp
add
adc
lahf
mov
xchg
mov
cltd
inc
push
or
testl
aam
xor
xor
sbb
mov
sbb
add
add
mov
lea
xor
outsl
sub
mov
push
inc
pop
insl
out
inc
imul
mov
mov
mov
adc
jecxz
add
push
divl
jne
pop
add
push
es
outsl
daa
push
test
xchg
call
or
pop
fstps
inc
int
stos
add
add
xchg
div
mov
add
sbb
pop
add
mov
jle
jmp
sbb
sub
lret
jbe
push
push
sbb
push
adc
add
xor
push
aas
cs
inc
inc
jae
or
push
incl
mov
out
add
test
mov
push
dec
xor
adc
pop
test
mov
mov
and
stc
adc
ret
push
mov
jmp
sub
push
icebp
jnp
stc
in
leave
pop
call
repz
jae
mov
sub
das
or
pop
add
std
into
je
lods
mov
je
and
es
sub
orl
push
sbb
and
pop
movsl
xor
jnp
out
add
loopne
or
add
in
testb
fnstcw
dec
lods
ret
dec
enter
xor
sub
mov
add
es
sub
loope
add
mov
into
je
movsb
icebp
mov
popa
jmp
das
push
aas
testb
lcall
imul
dec
add
aas
jb
cmp
flds
add
addr16
loop
lods
push
xchg
add
sahf
nop
stos
aaa
stos
fwait
incl
xor
flds
cs
jo
mov
mov
out
fisubrl
cmpsb
mov
imul
shrb
mov
adc
addb
dec
mov
add
adc
mov
sti
inc
leave
js
sub
lret
outsl
cld
xor
or
insb
dec
mov
inc
xchg
jb
adc
push
addb
xor
pop
fs
adc
inc
call
cli
jle
jmp
push
dec
push
xor
xchg
add
jle
dec
mov
movsl
inc
adc
jg
bound
ret
add
aaa
mov
inc
push
addps
add
cli
adc
ljmp
adc
into
push
mov
xchg
jbe
ds
mov
mov
jp
push
adc
repz
mov
cli
je
ss
push
fists
add
insl
cli
adc
je
add
add
mov
inc
and
adc
imul
movsb
adc
in
xor
jmp
pop
mov
mov
or
adc
cmp
jle
incl
mov
rclb
fs
add
hlt
pop
imul
lcall
and
cmp
into
xor
mov
inc
add
inc
incb
shlb
xor
jmp
xor
mov
fidivrl
leave
rclb
push
add
dec
mov
mov
mov
jle
aas
add
movsl
mov
roll
or
repz
xchg
add
adc
cld
jo
sbb
fnsave
mov
mov
sarb
sbb
jle
mov
cmp
mov
lcall
add
inc
add
adc
rorb
push
icebp
push
out
sti
add
mov
orl
xchg
pop
aam
clc
xor
push
les
mov
adc
mov
jmp
in
in
adc
mov
lahf
add
cmp
movsl
fdecstp
cld
xor
add
sub
push
and
dec
mov
jmp
jmp
adc
xchg
fdecstp
cld
loope
inc
jmp
and
int3
insl
lret
test
lret
imulb
jae
sbb
jmp
int
mov
arpl
xchg
jbe
inc
pushl
add
add
or
pop
adc
inc
mov
dec
scas
pop
jae
jae
add
jg
xor
dec
mov
push
add
in
jne
inc
arpl
mov
cli
push
addr16
testl
jle
mov
es
mov
or
xor
dec
sbb
pop
add
lea
add
daa
es
jae
or
fldenv
incl
jns
sbb
imul
ffreep
mov
mov
and
idivl
outsb
xlat
pop
adc
int3
add
test
sti
xchg
pop
cs
mov
cli
subl
mov
sub
mov
and
xchg
dec
into
lock
adc
js
add
push
test
shll
add
mov
mov
imul
mov
sub
lret
in
or
sbb
add
inc
jp
mov
push
stos
or
in
stos
add
int
test
int3
in
pop
lret
dec
movsl
push
mov
inc
mov
cmp
stos
add
xor
cs
in
jp
and
xor
lea
jmp
adc
sahf
add
ret
flds
fisubrl
daa
adc
xchg
mov
out
push
stos
pop
add
jmp
push
inc
push
fs
test
mov
jo
test
clc
push
ds
outsl
pop
cmpb
imul
pop
sub
xchg
cmp
mov
insb
inc
loope
mov
and
mov
lea
add
push
mov
push
insb
mov
int3
pop
or
outsl
daa
jmp
lea
or
lea
dec
add
iret
push
mov
inc
inc
or
dec
mov
jle
dec
mov
push
lea
jle
add
pop
add
mov
daa
mov
outsl
add
daa
jo
mov
jae
sub
data16
imul
mov
lea
aas
push
cld
cmc
stc
push
outsl
mov
lea
cmp
or
adc
sbbb
lret
outsb
inc
or
mov
add
and
add
jge
jle
mov
testl
pop
pop
lahf
sub
lret
jmp
jp
repz
cs
leave
fisubl
in
fcmovnu
and
scas
cli
ljmp
aam
mov
cltd
sbb
adc
fwait
jnp
mov
or
or
or
mov
mov
incl
mov
testb
aaa
jbe
add
and
test
sbb
shr
lret
hlt
js
mov
xor
mov
les
pop
aas
in
sub
mov
mov
mov
adc
pop
inc
inc
sub
lds
mov
push
icebp
in
lods
add
cmp
mov
add
ss
add
mov
add
jmp
push
and
cli
popa
xor
int
stos
fwait
lds
fwait
push
lret
jl
rolb
lret
add
push
cmc
jnp
cmpsb
ret
dec
mov
add
lea
push
xor
enter
mov
rorb
imul
or
imul
ss
addl
divl
xchg
add
fadd
mov
cltd
subl
nop
xor
sub
push
ljmp
fs
ljmp
add
xor
dec
mov
out
hlt
xor
rorl
cmc
pop
in
inc
and
jg
push
pushf
inc
jle
movsb
inc
cli
jne
jnp
adc
jp
add
jle
adc
add
xor
and
movsl
mov
push
sub
jle
xor
add
inc
pop
ret
and
cli
jne
jp
adc
aam
sbb
sarl
add
pop
ficoms
lahf
dec
or
addr16
test
pop
push
mov
and
add
jmp
push
loope
das
xchg
js
or
inc
add
in
xor
or
jne
adc
ss
add
xchg
jbe
subl
sti
in
fistpl
out
lret
jae
cli
das
push
shrl
adc
add
mov
mov
xchg
adc
dec
out
arpl
int3
cli
sti
pop
xor
arpl
test
sub
mov
cmp
pop
xor
add
inc
mov
jg
mov
jp
add
or
movsl
icebp
sbb
inc
jmp
adc
shll
sub
jmp
das
or
movl
andl
arpl
sar
adc
mov
test
addr16
cltd
xor
addb
mov
idivb
xchg
pop
mov
je
push
lea
adc
stos
cmp
iret
lret
rcll
fcmovnb
test
imul
lds
jle
fcompl
dec
mov
jb
mov
aas
int
mov
pop
fstpl
inc
xor
pop
adc
cmp
push
mov
cld
add
pushf
inc
jmp
int
mov
inc
aam
nop
jp
dec
xchg
and
dec
es
in
test
pop
mov
fidivrl
popa
int3
add
xor
sub
je
mov
imul
rcrb
into
jae
push
repnz
xchg
scas
lret
js
mov
adc
insb
outsl
pavgw
add
sarl
jge
add
mov
and
decl
fbstp
inc
jge
sbb
dec
aas
adc
or
or
mov
add
data16
or
add
shlb
mov
and
shll
mov
lock
lcall
push
scas
cli
orb
lcall
icebp
mov
lods
pop
aaa
push
into
fiadds
add
mov
std
cmp
dec
inc
testl
jo
mov
je
je
out
bnd
cltd
les
xchg
jl
mov
sub
lods
adc
sbb
call
pop
pop
dec
pop
adc
sub
aas
push
mov
push
pushf
add
pop
cmpsb
add
mov
or
dec
and
stc
popa
cs
ret
fnsave
stos
xchg
pop
mov
fwait
les
mov
filds
lods
cmp
pop
mov
fildll
dec
jb
ss
pop
sub
mov
sub
push
inc
push
scas
mov
mov
mov
mov
fstps
jns
add
mov
out
jmp
pavgw
lods
or
cmp
mov
test
outsl
cmc
cmpsl
je
push
xchg
lods
ret
jmp
out
jno
or
cmp
lock
mov
nop
je
sbb
or
mov
xor
movsl
or
movsb
jb
testb
stc
xchg
decb
xor
mov
or
lea
aad
push
jmp
add
pop
jb
ljmp
push
mov
test
cmp
mov
cmp
jnp
fidivrs
push
cli
mov
and
inc
or
lcall
lock
pop
ret
jle
xchg
imul
cmp
addb
mov
sbb
fsubp
incb
out
push
push
sar
xor
sub
mov
xchg
mov
cs
mov
xchg
stos
daa
jae
mov
push
jp
xor
decl
pop
sub
jg
xor
xchg
mov
and
aaa
xor
lahf
adc
test
xchg
jo
jl
mov
jp
xor
add
fbstp
fbstp
inc
lock
jnp
out
jbe
add
cmp
add
add
clc
hlt
pop
adc
hlt
pop
xor
decl
outsl
add
out
sub
add
dec
mov
or
lds
jno
add
pop
adc
mov
outsl
cld
mov
test
mov
push
mov
mov
cmc
inc
sub
mov
outsl
cld
mov
outsl
hlt
mov
cmc
stos
push
xchg
in
add
adc
inc
pop
dec
xchg
in
xor
cmp
ret
or
push
mov
and
mov
enter
aad
mov
lods
mov
or
lea
imul
lea
cmp
stos
sbb
lea
cmp
mov
pop
rorb
decb
fwait
mov
shrl
je
test
jmp
sub
inc
sub
push
sub
jmp
pusha
sub
push
xchg
fs
sub
jmp
adc
pop
jae
cmpsl
push
add
sti
inc
adc
cmp
fs
push
stos
mov
iret
popa
cmp
xor
push
leave
icebp
shll
cs
aad
jle
pop
xor
dec
jl
dec
dec
cmp
cmc
sbb
cmp
xchg
imul
cmp
test
pop
xor
add
int3
mov
jmp
xchg
mov
leave
and
inc
fildl
inc
and
es
push
es
enter
pop
lods
mov
add
mov
and
lods
pop
and
lods
movl
add
xchg
pop
xchg
lahf
xor
in
js
mov
xchg
ljmp
pop
mov
push
mov
xchg
pop
in
mov
jg
and
les
in
rcrb
repz
pop
jno
sbb
mov
call
popf
adc
add
cwtl
lds
flds
jmp
lahf
or
inc
and
xor
in
jl
mov
add
sub
sbb
add
dec
cwtl
fldcw
push
inc
mov
jmp
mov
jns
add
xor
mov
pop
pop
movsb
sbb
inc
xchg
mov
add
push
filds
mov
lods
xor
adc
jge
mov
pop
lods
adc
in
pop
leave
subl
lods
and
adc
push
dec
push
push
lds
pop
or
add
and
adc
jno
imul
jl
xor
insb
adc
mov
push
lods
and
movsl
inc
es
and
mov
dec
adc
sbb
pop
fnsave
je
add
mov
repnz
add
or
add
and
and
in
add
cmc
jne
push
mov
add
jmp
adc
inc
testl
or
icebp
xor
lds
cmpsb
or
push
mov
xchg
dec
sub
mov
and
cli
test
dec
enter
rolb
mov
ja
jle
push
mov
or
mov
loope
inc
add
mov
mov
loope
clc
inc
enter
xchg
mov
fisttps
popa
push
sti
jnp
adc
and
popa
pop
outsb
stc
stc
or
gs
add
xor
enter
inc
inc
insb
dec
push
int
mov
inc
push
xchg
adc
mov
aaa
pop
test
sub
cmp
push
clc
xor
jg
sub
push
dec
add
loop
adc
and
cld
cli
mov
push
sti
adc
inc
mov
add
mov
loop
leave
push
mov
rolb
mov
and
or
push
mov
and
or
and
adc
cwtl
stos
out
mov
add
xchg
popa
inc
xchg
push
sub
aaa
push
stos
push
arpl
mov
add
adc
das
push
jno
adc
or
popa
push
xor
add
popa
or
filds
mov
jge
ljmp
sub
in
mov
xlat
or
inc
dec
mov
pusha
int
mov
divb
adc
cmp
cmp
hlt
insb
sub
pop
in
ss
mov
adcb
divl
or
sti
or
push
js
add
addr16
adc
lret
add
xchg
push
sub
repnz
adc
subl
cwtl
or
inc
js
sti
int
mov
bndstx
mov
dec
add
push
mov
call
lods
arpl
or
and
mov
enter
mov
popa
or
aaa
mov
jbe
jecxz
push
push
jl
push
idivb
jne
lea
fmuls
hlt
jmp
add
xchg
fdivs
mov
jl
and
cmovae
adc
adc
mov
fbstp
mov
lar
cmp
xchg
fwait
xor
jl
cmpsl
sub
mov
decb
adc
jo
mov
dec
push
add
fildl
mov
mov
jo
or
add
add
stos
dec
and
lods
xor
adcb
aaa
dec
inc
daa
mov
mov
andl
pop
icebp
add
incl
xchg
lods
push
and
fdiv
icebp
rorb
jb
mov
rcrb
fisttpll
sub
into
pop
jecxz
jae
sub
sub
dec
mov
sub
xchg
frstor
loopne
mov
mov
add
rorb
adc
cmp
leave
jge
xchg
cmp
push
push
mov
or
jno
jb
mov
sahf
mov
mov
pop
mov
and
mov
jle
push
inc
mov
leave
push
in
and
add
test
cmp
test
nop
xchg
cmp
and
loop
xchg
push
push
and
push
push
int3
inc
roll
idiv
pop
inc
leave
addr16
pop
inc
jo
movlps
mov
test
add
pusha
mov
push
cmp
lcall
aaa
aas
mov
movsl
out
fmull
in
push
push
loope
xchg
cmp
mov
jo
sub
adc
and
dec
js
mov
jecxz
sbb
fimull
hlt
arpl
add
or
sub
push
sub
xor
pop
and
rcll
sub
jo
dec
and
mov
push
decb
jge
xchg
pop
test
lret
out
xorb
stc
inc
cld
pop
adc
add
sub
push
push
movsb
ret
shll
insb
out
or
lret
mov
sbb
loop
or
adc
push
and
and
push
xchg
xchg
adc
push
fwait
ss
test
arpl
add
sub
mov
fisubrl
push
call
gs
dec
or
sbb
out
dec
adc
decl
aaa
cmpsl
adc
xor
adc
dec
mov
xchg
mov
xchg
jbe
or
dec
adc
cmp
xor
mov
add
mov
xor
add
adc
mov
xchg
xor
lock
getsec
mov
stos
sarl
mov
dec
mov
je
xchg
loope
cmp
pop
movsb
les
adc
or
aam
sbb
decb
in
mov
arpl
data16
addb
rolb
mov
arpl
push
movsl
std
add
imul
push
inc
mov
jne
mov
lcall
push
jae
jmp
ds
mov
mov
icebp
lret
add
pop
push
sbb
xor
sub
xlat
pop
mov
push
push
dec
adc
sub
test
jmp
or
mov
sbb
cmp
dec
or
adc
pop
and
divb
lea
sub
pop
jae
rol
lea
dec
add
or
idiv
cmpsl
adc
cmp
jbe
mov
inc
or
add
xchg
pop
sbb
push
pop
adc
ljmp
stos
mov
add
aas
add
pop
or
dec
add
sbb
decl
xchg
je
sbb
or
and
testb
sbb
cmpsl
or
push
add
out
clc
xor
adc
or
imul
sbb
mov
inc
pop
int3
add
pop
sub
or
aam
mov
rclb
and
add
je
or
xor
jg
and
jle
and
jle
sti
cli
sbbl
inc
mov
punpckhbw
lock
xor
or
inc
adc
scas
mov
pop
int
std
scas
popl
jle
arpl
or
mov
shll
sbb
sahf
movsl
in
lods
addb
sbb
sbb
sbb
iret
in
lods
mov
adc
dec
xor
sub
mov
incl
fiaddl
dec
pusha
mov
lock
lock
int
aad
cmpsb
jns
add
adc
add
mov
mov
sti
adc
xchg
dec
adc
adc
or
or
and
pmaxsw
decb
int3
repnz
into
lds
push
and
mov
adc
jb
pmaxsw
cmp
std
int
andb
mov
pop
cmc
fstpt
sbb
sbb
adc
insl
dec
lcall
in
pop
cmc
pop
adc
add
inc
add
add
xchg
jmp
sbb
pop
dec
mov
out
push
push
insb
in
icebp
fsubrl
adc
das
push
jl
test
fstpt
pop
pop
adc
pop
pop
adc
loopne
cld
mov
adc
inc
mov
in
dec
pop
pop
add
in
dec
fdivp
fmul
pop
add
shll
cmp
jb
and
push
ret
push
jmp
adc
push
ret
or
mov
add
rolb
jno
icebp
xchg
jp
inc
mov
push
xchg
pop
fidivrl
inc
in
enter
lahf
xchg
adc
add
and
setp
js
sahf
sbb
fisttps
dec
and
add
call
pop
scas
or
sbb
cmp
add
je
fsubl
sbb
ficoms
dec
andl
add
jns
mov
mov
xchg
sbb
mov
adc
xchg
pop
xchg
adc
and
sub
jge
add
ja
add
lock
mov
and
mov
lods
das
add
mov
add
dec
adc
rep
inc
mov
sub
adc
aas
lret
out
clc
dec
mov
out
jp
aas
mov
inc
cli
leave
addr16
std
int
cmp
mov
add
dec
nop
cmp
enter
rolb
xchg
add
adc
loop
jo
sbb
adc
add
xchg
sbb
into
nop
fists
sub
push
jo
lcall
cmp
push
sahf
orb
xchg
or
adc
ret
es
mov
push
sbb
dec
push
and
mov
sbb
sahf
or
je
jo
adc
fs
test
lea
cmp
adc
or
add
lea
testl
dec
je
ljmp
test
sub
test
in
pop
jo
add
lea
repz
jle
add
lea
add
mov
out
adc
xchg
ret
mov
inc
add
mov
dec
fidivrs
hlt
jb
add
jnp
add
add
lds
sub
adc
mov
dec
das
inc
dec
mov
xchg
mov
rorl
add
dec
mov
xor
push
and
cmpsl
adc
and
push
jp
mov
add
and
or
jp
sbb
add
push
add
mov
push
push
pusha
stc
adc
add
push
dec
sti
fwait
mov
mov
pop
cmp
pop
aaa
fs
loop
mov
aad
fstl
sbb
mov
sub
add
jbe
adc
mov
mov
add
neg
mov
cmp
and
aas
push
mov
cmp
add
xchg
lock
jp
mov
xchg
jnp
add
dec
xor
aam
hlt
movsb
jp
cld
inc
mov
lods
mov
or
repnz
jo
adc
cmpsl
movsb
jne
adc
mov
ret
mov
cmc
andl
add
ss
mov
mov
repz
cli
int
subb
push
imul
aam
jp
jmp
xchg
int
push
xchg
int3
stos
addb
aam
adc
fists
sub
adc
sbb
js
fimull
subb
maskmovq
notl
sahf
lret
add
imul
repz
clc
dec
mov
push
inc
jnp
in
pop
ret
add
aas
adc
add
inc
lret
cmpsl
pop
xchg
lods
divb
lahf
or
sbb
mov
push
add
stos
dec
pop
adc
xchg
call
inc
divl
jae
add
xchg
pinsrw
arpl
xchg
or
leave
xor
std
inc
or
mov
add
jae
cmp
into
ret
add
call
pop
sbb
mov
sub
mov
sub
ficoms
mov
popa
push
adc
mov
jmp
jne
mov
sub
and
jecxz
data16
test
es
cmpsb
cli
or
xchg
out
add
int
push
jnp
lcall
cmp
add
ljmp
dec
pop
test
inc
or
pop
cs
stc
in
xchg
mov
push
push
dec
mov
or
or
dec
add
mov
sbb
cwtl
lahf
rorb
lahf
adc
in
inc
decb
insb
cmp
stos
fisubs
mulb
add
add
mov
add
dec
pop
mov
pop
add
or
mov
nop
leave
or
pop
mov
xchg
adc
sbb
cmp
mov
or
lea
fbstp
jns
or
mov
das
cltd
subb
cmpsb
push
bound
cmpsb
loop
mov
mov
repnz
lea
les
iret
aam
in
mov
mov
pop
pop
dec
je
pop
push
jb
repz
loop
mov
push
lds
out
push
addb
testl
hlt
sbb
pop
ficomps
insl
cwtl
add
sbb
fldl
and
stc
pop
adc
jle
add
repnz
fmul
pop
adc
push
push
in
xlat
stc
adc
into
jl
pop
es
stos
sub
cld
divb
aaa
dec
jle
icebp
iret
or
cli
push
jmp
mov
jbe
xor
jle
jae
add
push
outsl
push
insb
push
adc
testl
es
xor
sub
jo
add
xor
mov
stc
mov
add
testb
xchg
mov
mov
out
pop
xchg
cli
adc
cltd
sbb
imul
jne
add
mov
mov
cmpb
adc
decl
jne
std
xor
inc
sahf
push
out
xorl
adc
out
or
xor
pop
or
mov
add
ficoml
inc
mov
add
sub
mov
popa
add
vfrczsd
fldl
gs
nop
xlat
imul
mov
jg
mov
scas
in
xchg
jg
xchg
paddsw
mov
mov
iret
xchg
imul
sub
mov
repnz
mov
in
add
jnp
mov
jno
outsb
or
dec
stos
mov
mov
shr
jg
mov
arpl
push
push
scas
psubsw
mov
das
sbb
imul
popl
add
lea
jae
adc
mov
push
or
cmp
outsb
bound
jb
fwait
mov
jmp
repnz
fdivrp
cli
or
add
push
xorb
xchg
add
jg
and
lea
add
add
mov
jo
cmp
fisubrs
mov
mov
popf
or
add
idiv
cmpsl
mov
inc
inc
jle
xchg
por
iret
sub
sbb
loop
jne
daa
jo
hlt
mov
cli
cmp
jle
daa
cli
inc
lods
adc
dec
inc
and
and
mov
pop
pop
insb
sub
push
mov
or
xor
fildl
fs
add
add
mov
pusha
iret
sbb
cli
jge
popf
add
push
xlat
icebp
push
movsb
std
xchg
adc
or
repnz
xchg
stc
jno
leave
out
lahf
cltd
cli
adc
lcall
dec
cmpsl
movsb
inc
scas
cmpl
and
stc
sub
mov
add
cmp
jb
push
jle
jae
add
mov
adc
pushf
mov
jns
or
xor
pop
push
sti
sbb
out
add
add
xor
push
pushf
stos
inc
xchg
jle
push
mov
test
or
test
fistpl
mov
mov
add
mov
pop
inc
les
add
das
or
movsb
jmp
mov
xchg
add
push
orb
loope
int3
jnp
push
mov
add
adc
xor
or
idivb
add
lea
jmp
pop
cmp
jle
push
insb
inc
imul
mov
mov
inc
lds
scas
cmp
jno
outsl
std
add
pop
mov
push
pop
sub
inc
add
lea
inc
jno
mov
lahf
pop
inc
stos
mov
inc
popf
adc
ds
push
fs
cmpsl
pop
cltd
or
fxam
lds
pop
or
add
mov
jo
cltd
mov
push
pushf
cmp
idiv
lock
test
xchg
insb
push
and
shl
adc
push
cmp
fists
mov
das
mov
ja
cmc
imul
mov
add
inc
sbb
adc
add
jmp
in
cli
lea
inc
icebp
es
ja
addr16
mov
iret
flds
aaa
mov
es
nop
das
add
mov
dec
jae
xchg
push
mov
shll
xor
mov
shlb
nop
push
add
and
xrelease
fcompl
rolb
notl
cmp
sarl
pusha
cmpsb
mov
mov
mov
inc
movsb
cmpsl
mov
jns
out
inc
ret
sarl
cli
mov
adc
decl
and
push
adc
push
add
mov
rcrb
add
add
mov
push
adc
adc
adc
stos
or
into
xchg
pusha
inc
add
sub
add
mov
pop
inc
mov
mov
adc
movsb
push
inc
xchg
stos
cwtl
add
fmull
sub
rorl
sbb
mov
loop
jnp
mov
cmp
add
add
ljmp
notb
clc
gs
into
sti
push
je
jmp
fimull
add
mov
ja
pop
dec
iret
push
mov
push
dec
leave
xor
iret
add
cmp
pop
push
push
fs
jmp
mov
mull
jnp
cmp
and
push
imul
sbb
push
jecxz
jp
cmc
outsb
and
mov
clc
add
inc
mov
es
push
mov
mov
movb
jge
xchg
in
pop
add
dec
call
mov
fidivs
pushf
jp
add
mov
je
xchg
cs
imul
andl
cs
sbb
add
mov
mov
int3
enter
leave
add
mov
sub
push
mov
icebp
inc
mov
outsl
or
mov
add
mov
and
xor
enter
mov
mulb
dec
stos
xchg
pop
add
mov
and
outsl
mov
int
ss
jns
mov
add
push
popf
pop
push
add
or
shll
add
stos
mov
add
sarb
mov
add
jp
xchg
mov
add
cld
jo
xchg
mov
add
add
repz
stc
mov
and
sbb
stos
jns
cli
sahf
outsl
mov
and
mov
fdivl
rolb
ja
dec
xchg
push
adc
out
pop
jno
inc
into
add
add
adc
ret
and
and
xor
jg
pop
testb
mov
ja
out
into
aam
loope
aad
and
test
call
scas
inc
xchg
sbb
cmp
add
mov
pusha
decb
jno
dec
enter
add
movsb
xor
jmp
dec
popa
push
mov
stc
lea
add
lret
or
mov
jmp
lea
testl
pop
adc
jmp
pop
add
mov
add
stc
aad
incb
repnz
lea
push
mov
cmpsl
and
gs
cmpsb
add
cmp
in
and
int
mov
test
ja
jle
fisttpl
jge
in
add
add
fidivs
out
call
mov
decl
repz
pop
and
inc
daa
js
and
adc
or
fistpll
fwait
popl
add
jo
xor
mov
into
jnp
add
mov
xor
ss
add
push
xchg
out
push
outsb
add
xchg
xor
cli
jne
ja
and
adc
add
sub
fldt
in
jne
mov
pop
mov
das
sti
mov
sub
mov
or
add
into
call
adc
in
int
ja
out
jecxz
add
in
out
gs
cmp
in
incl
jge
sti
inc
pop
add
mov
xor
jl
add
jecxz
add
int
pop
rorb
imul
mov
add
data16
stc
in
orb
xor
pop
jno
imul
jge
std
scas
rorb
aam
dec
inc
jle
fisttpll
mov
add
mov
sbb
add
mov
add
mov
icebp
mov
add
leave
cmc
pop
mov
add
clc
in
rorl
mov
gs
ja
clc
in
mov
adc
jb
in
xchg
add
xor
inc
int
sarl
mov
pop
notb
fcompl
pushf
inc
jmp
lea
sub
loop
nop
jmp
imul
andb
add
jmp
mov
add
lea
shlb
jle
mov
adc
mov
or
out
rclb
jnp
insb
clc
jno
add
add
add
popl
add
push
xchg
mov
jle
shr
mov
decb
push
mov
mov
cli
je
repz
packssdw
call
mov
shr
dec
add
jp
cli
lcall
adc
daa
jbe
jo
iret
ja
push
or
in
mov
je
or
jle
dec
mov
mov
mov
imul
sbbl
in
add
addr16
mov
jns
add
add
jne
ud2
inc
lahf
icebp
mov
addl
lahf
mov
add
mov
mov
dec
into
les
mov
jl
data16
add
mov
and
jecxz
add
and
lds
mov
jl
add
mov
aas
mov
jns
jecxz
pop
add
jecxz
mov
mov
mov
inc
pop
pushf
push
out
mov
inc
dec
pushf
inc
out
mov
mov
jno
push
movl
imul
add
and
fld
add
jne
mov
pop
adc
jno
mov
subb
xor
mov
add
mov
fldl
sub
hlt
pop
mov
push
push
orb
out
xchg
hlt
outsb
pop
cmc
jge
mov
add
addl
push
jg
aas
mov
dec
pop
mov
jnp
cmpsb
add
adc
roll
jmp
lea
add
jmp
xchg
lock
mov
les
mov
inc
dec
inc
xlat
loop
dec
rorb
adc
jmp
imul
mov
sahf
xor
and
pop
or
jae
insb
dec
dec
add
lods
mov
add
and
out
pcmpeqw
pop
ret
jle
mov
inc
pop
pushf
dec
pop
jb
xchg
add
setnp
lock
in
or
add
adc
mov
push
loopne
stc
jne
addb
inc
add
mov
add
pop
repnz
jo
orl
icebp
sahf
jmp
repz
mov
daa
flds
mov
jg
push
in
add
in
and
xor
orl
sti
ret
add
mov
add
mov
xchg
cld
add
fsubrl
push
cmp
ja
or
or
add
jecxz
ret
add
in
test
jbe
in
jg
cld
add
insl
push
push
sub
pop
dec
mov
add
xlat
sbb
rdpmc
sti
jnp
out
mov
sub
add
add
fists
push
imul
jns
aam
shl
jns
cmpsl
lock
mov
sub
sub
loopne
loope
pop
iret
mov
xor
jns
negb
add
push
xchg
or
jne
xchg
push
sbb
int
aam
orl
test
std
add
mov
repnz
in
jecxz
mov
icebp
addr16
jb
add
adc
pop
rolb
add
mov
and
mov
xor
data16
mov
mul
hlt
xchg
sahf
imul
jg
add
or
pop
lock
jmp
ret
xchg
or
mov
in
imul
hlt
je
in
flds
xchg
cmpsl
daa
jmp
fidivrl
outsl
js
mov
jmp
push
data16
pushl
pop
test
inc
roll
jmp
scas
mov
mov
jne
add
sbb
add
mov
sub
cld
mov
fisttpl
sub
jnp
lcall
mov
jno
mov
es
pushf
scas
adc
loope
std
test
jg
mov
outsl
hlt
je
in
push
outsb
mov
pop
je
and
mov
cli
push
jb
sbb
jae
fcompl
cli
decl
imul
lock
dec
push
xor
cmc
clc
jg
mov
and
jge
out
or
mov
cmp
test
jbe
out
jmp
sbb
add
in
xor
sub
push
lcall
es
adc
into
or
xorl
add
in
sti
fwait
mov
mov
lea
jmp
mov
ficompl
shr
idivl
dec
in
test
stc
inc
mov
mov
loop
addr16
mov
add
fisttps
fldln2
cltd
sub
jmp
rcl
xchg
add
dec
mov
lcall
mov
add
add
ret
jbe
jmp
mov
xchg
sbb
mov
xchg
test
outsb
or
out
imul
mov
add
add
mov
repnz
dec
imul
loop
dec
mov
mov
jb
repz
sbb
mov
jbe
push
xchg
mov
inc
jmp
lea
divb
dec
or
sbb
pushf
ret
pop
adc
and
decl
andl
add
out
nop
inc
dec
pop
outsb
xchg
fdivr
adc
rolb
hlt
aaa
mov
push
pusha
xchg
adc
xchg
iret
push
incl
mov
mov
inc
roll
mov
cli
jno
lcall
adc
mov
push
mov
mov
je
cli
mov
hlt
and
pushl
mov
push
push
sbb
add
lods
addr16
in
adc
stc
int
adc
testb
mov
dec
pop
add
inc
test
dec
cmp
push
ud1
mov
inc
add
loopne
add
pop
and
addr16
insl
push
out
pop
test
adc
xor
ds
subb
pop
push
out
dec
test
adc
in
cmp
jle
and
das
rolb
rorb
push
add
mov
add
popa
ds
xchg
mov
scas
hlt
and
push
ljmp
mov
push
mov
ljmp
adc
movb
xchg
cmpb
ret
or
sub
add
jge
add
push
add
imul
push
pusha
hlt
jg
jnp
ret
rorl
stc
jp
cmp
add
pusha
xor
jmp
les
xchg
add
int
mov
in
ficompl
mov
ret
adc
loopne
push
add
pop
sti
sbb
ret
lock
mov
cltd
or
icebp
mov
xchg
pop
fucomp
jmp
push
mov
ret
int
pop
mov
testb
shl
testb
sub
add
ljmp
adc
pop
push
inc
adc
cltd
push
sbb
aam
in
sub
xor
jno
jb
push
insb
pusha
sub
xor
cmp
cmpsl
repnz
loopne
or
lret
ret
shlb
mov
xchg
cli
je
xchg
jle
fsub
and
fdivrs
lds
adc
push
mov
xchg
sbb
add
cli
adc
sti
jno
insb
push
roll
adc
jmp
add
cmp
jmp
mov
out
mov
sub
cmp
inc
adc
lcall
cmc
mov
xchg
addr16
jno
inc
pop
dec
icebp
add
pop
jp
add
rolb
call
adc
pop
or
movsl
add
js
push
jo
jae
push
js
ljmp
push
adc
jno
cli
xor
leave
out
push
jmp
mov
add
hlt
imul
xchg
cmpps
into
xchg
or
daa
popa
lret
mov
adc
sub
jbe
sub
mov
pop
or
enter
sub
pop
pop
enter
rorb
lods
jno
lea
adc
jle
in
roll
xchg
pop
and
mov
scas
in
aad
lock
scas
fsubrs
pop
xor
add
mov
push
in
shl
lahf
fs
mov
add
pop
add
add
or
mov
mov
adc
mov
loop
adc
inc
inc
in
cmc
sti
jecxz
push
sbb
jmp
sbb
imulb
pop
cmp
pop
pop
pop
push
mov
in
neg
test
popa
pop
in
pop
and
xor
insb
jmp
loopne
or
jg
adc
dec
in
add
mov
sub
cmp
nop
add
iret
loopne
jmp
mov
je
div
mov
pop
inc
ljmp
or
jnp
adc
add
xchg
jbe
shl
outsl
pop
sbb
out
test
hlt
clc
xor
dec
fiadds
ds
inc
push
cld
ja
mov
mov
adc
das
hlt
add
daa
jne
mov
pop
push
lods
cmp
popa
stc
mov
or
jne
sahf
ret
jmp
adc
and
push
mov
in
icebp
adc
add
xchg
cmp
push
bnd
dec
inc
repz
mov
mov
fcompl
aad
dec
stc
int
jge
test
mov
push
int3
fldl
jg
mov
push
loopne
out
clc
mov
mov
shlb
das
add
pop
mov
mov
mov
enter
fidivl
hlt
add
loop
call
jno
mov
lret
add
mov
mov
mov
test
jmp
add
mov
enter
js
or
add
cmpsl
pop
inc
mov
mov
or
or
adc
lds
jnp
add
hlt
pop
xchg
pop
mov
stc
mov
rcr
jne
jmp
popa
in
add
dec
in
mov
cmpsl
sarb
push
leave
xchg
cmpsl
test
leave
loop
outsl
orb
jmp
cmpsl
clc
rcll
cmp
into
mov
addb
bound
imul
lods
add
in
jo
scas
sbb
adc
cmp
out
push
mov
das
adc
xchg
adc
or
imul
push
pop
out
int
in
lds
ja
stc
dec
loope
test
outsb
ja
fwait
ds
mov
xchg
dec
imul
adc
gs
pop
add
repnz
mov
daa
mov
cmovo
mov
je
lods
mov
push
call
pop
pop
stc
je
lods
push
jmp
sub
inc
cmpsl
into
stc
adc
bound
les
jnp
adc
jle
xchg
stos
ficoms
cmp
and
jnp
adc
and
and
dec
jb
xchg
jno
add
stc
adc
mov
jb
test
and
test
stc
je
stos
cli
adc
mov
pop
mov
fidivrl
xor
mov
push
push
jmp
pop
outsl
mov
push
decl
lock
pop
flds
enter
xchg
mov
push
cmc
shlb
into
popf
movq
mov
cmove
insb
push
sub
fdivrs
or
pop
cmc
jge
dec
test
or
add
ret
in
push
testl
lods
inc
adc
mov
or
cmp
adc
add
test
dec
in
imul
in
add
push
add
je
repz
mov
sar
js
sub
or
orb
mov
imul
sbb
aam
mov
xchg
in
mov
sub
in
je
rep
cmpsb
push
ficoms
inc
or
andl
jmp
jmp
mov
imulb
daa
xchg
imul
popf
add
fiaddl
jmp
add
fdivp
adc
add
pop
pusha
adc
xorb
imulb
cmpsl
jno
icebp
inc
popf
add
fiaddl
jmp
push
cmp
aaa
mov
dec
je
or
repz
pop
dec
movsl
fucom
adc
int
ret
in
jno
adc
add
add
icebp
test
mov
add
xor
pop
cmp
sar
dec
addl
push
or
rolb
mov
popa
mov
xchg
sub
mov
test
cli
clc
fs
xchg
jle
pop
pop
inc
or
lcall
pusha
inc
adc
shll
inc
pop
pop
inc
sbb
pop
aas
lods
leave
pop
inc
and
pop
aas
mov
cltd
pop
inc
and
mov
stos
test
push
mov
push
mov
imul
sub
mov
mov
and
shl
iret
cli
fwait
mov
inc
out
xchg
add
int3
test
gs
cli
pop
dec
repnz
and
icebp
add
xchg
mov
xor
pop
cwtl
add
movsl
out
rorb
add
scas
imul
je
lret
add
data16
int
pop
in
arpl
add
popf
test
xchg
sahf
lods
les
pop
add
adc
lret
mov
pop
mov
inc
mov
les
dec
loope
add
fidivl
jo
jecxz
mov
add
popa
mov
xchg
push
std
pop
mov
mov
xrelease
out
imul
mov
fadds
faddl
mov
mulb
inc
dec
inc
push
pop
inc
jmp
cwtl
notb
or
in
pop
pop
in
mov
scas
pop
cmpsb
push
dec
add
lea
negb
lds
shl
cmp
push
call
push
adc
pop
incl
push
testb
sbb
jnp
ljmp
inc
dec
out
mov
dec
add
lea
not
fiaddl
pop
ret
push
mov
jmp
adcl
lea
pop
mov
incb
jmp
mov
test
rolb
xor
xor
push
lcall
mov
insb
jge
repz
cs
aas
fsub
mov
add
loop
cmp
stc
push
push
cli
push
push
ljmp
pop
idiv
xor
adc
cli
test
xor
sarb
ss
jbe
aad
add
push
lcall
sub
iret
dec
add
xor
mov
jae
add
and
push
or
cmp
inc
jae
xchg
jmp
mov
xchg
rolb
shr
cs
dec
loop
mov
cwtl
xchg
pop
lods
out
test
xchg
pop
movsb
out
js
ret
jbe
mov
inc
push
adc
mov
cli
add
icebp
jns
mov
gs
xlat
jno
aaa
int
add
add
pusha
cmc
cmp
aad
popa
fdivrl
xlat
das
add
dec
hlt
insb
filds
ja
dec
xlat
pusha
inc
xchg
setp
mov
add
dec
enter
xchg
insl
and
in
add
arpl
xchg
rorl
faddl
icebp
xchg
add
dec
add
jmp
adc
or
sti
push
cmp
filds
clc
add
std
imul
inc
arpl
out
pinsrw
or
lea
inc
jb
stos
jnp
jns
outsl
sbb
or
ja
add
mov
jmp
lea
test
jmp
xchg
repnz
insl
lea
push
inc
mov
ds
test
mov
jo
or
mov
cli
nop
lcall
cmpsb
mov
data16
xchg
adc
mov
push
and
mov
push
mov
rol
in
dec
or
lcall
pushl
push
mov
lcall
push
fdivrl
fiadds
stc
mov
or
jg
lahf
ret
jmp
push
xchg
popf
pusha
stc
call
pushf
adc
imul
pusha
stc
sub
jge
pop
cmpsb
add
out
mov
xor
or
sahf
dec
lcall
push
repz
mov
xchg
out
add
enter
add
pop
in
or
lret
loop
cli
add
jne
adc
imul
cli
add
adc
cli
jmp
mov
jbe
or
imul
sbb
inc
cmp
dec
cli
stc
pop
mov
pop
lcall
popa
orb
mov
data16
imul
cmpsl
rclb
in
jbe
and
ja
mov
imul
pop
call
jge
jg
add
cmp
xchg
add
cld
push
xor
pop
mov
xorl
cmp
imul
cmpsl
punpckhdq
lods
leave
pop
les
clc
stc
lock
test
cmp
push
divl
xchg
add
sbb
push
out
pop
sarb
imul
jp
or
test
out
notb
pop
dec
nop
fists
xchg
mov
inc
mov
sbb
mulb
jmp
ret
ljmp
test
lea
add
dec
jbe
mov
xchg
add
xchg
fmuls
lea
aas
or
pop
push
aas
loopne
jle,pt
push
mov
push
pop
mov
push
test
repz
lea
loope,pn
test
outsb
jge
xchg
xlat
ljmp
inc
jb
fldl
rorl
or
jge
or
je
mov
mov
fcmovne
incl
adc
push
into
idiv
test
imul
dec
push
out
cwtl
ficoms
push
adc
daa
or
push
decl
adc
inc
mov
push
dec
loop
jp
in
xor
dec
movsl
jp
mov
mov
out
jb
incl
int
jns
movq
add
ljmp
xchg
adc
pop
testl
xchg
pop
ret
pop
mov
and
mov
lock
cli
loop
add
in
sti
xor
imull
push
pop
cli
fwait
scas
pop
je
popa
repz
mov
adc
shlb
inc
xchg
mov
imul
rolb
aas
add
add
js
jnp
decb
dec
clc
add
or
add
leave
push
shrl
add
insl
shrl
push
sub
js
jg
mov
lds
jae
lods
jg
outsb
fimull
test
inc
xchg
cmp
into
inc
pop
cld
jp
cmpsl
sarb
or
pop
add
pop
add
addl
jb
jp
jno
shl
sbb
push
mov
out
sub
jg
movsl
jns
push
cs
push
mov
ret
shl
push
push
int
or
add
dec
lds
ret
jl
js
pop
out
pop
cmpl
fidivs
mov
lret
out
pop
aas
or
push
add
pop
pop
jb
xchg
call
cmc
push
add
push
lcall
jp
icebp
aam
xchg
push
push
hlt
jle
cli
call
imul
push
mov
mov
add
outsw
or
push
into
mov
pop
ficomps
dec
dec
leave
jne
testb
jne
adc
mov
add
daa
pop
and
fadd
incb
in
jle
rorb
jne
inc
outsb
shll
jmp
inc
xchg
dec
ss
int
das
dec
insl
cmp
mov
out
data16
cli
adc
jle
jnp
scas
pop
ss
test
mov
sbb
into
adc
pop
pop
push
out
outsb
cli
add
orb
dec
and
pop
mov
out
repz
dec
cmp
mov
xchg
rorl
pop
inc
sub
sub
or
call
add
jg
inc
xchg
mov
nop
mov
cmp
imul
bound
jecxz
jo
mov
insl
ja
arpl
nop
pusha
add
jno
test
test
daa
mov
cltd
bound
cmp
mov
pop
mov
lret
imul
add
xlat
xchg
add
imul
in
popa
pusha
lret
test
ljmp
mov
popa
int
or
mov
or
add
xchg
mov
jb
mov
cmp
add
xchg
push
outsl
sbb
lds
and
divb
ret
subb
dec
jb
mov
pop
outsl
lds
fcompl
pop
pop
in
fldcw
or
pusha
andb
int3
popa
pop
sub
mov
jmp
cmp
jmp
mov
push
add
and
in
int
jmp
xor
pop
stc
mov
mov
jo
cmp
cmp
pop
cmp
mov
add
arpl
add
mov
add
rorb
movsb
sub
jg
rolb
jle
repz
idiv
fisttps
fimuls
sub
lock
nop
mov
icebp
push
mov
stc
lcall
jg
and
popa
xor
xchg
cli
xor
push
jle
mov
subb
or
sar
mov
mov
add
mov
xchg
mov
mov
jno
mov
push
jp
dec
jge
push
imul
into
jmp
mov
xchg
mov
lea
add
mov
inc
xchg
rolb
sbb
add
mov
or
iret
loop
cli
fwait
mov
idivl
mov
clc
mov
mov
popa
push
enter
enter
push
shlb
mov
imul
pop
push
mov
jl
imul
push
ja
or
pop
add
pop
adc
imul
or
mov
add
dec
fcom
mov
in
add
pusha
mov
inc
outsl
int3
imul
shrb
mov
nop
inc
outsl
fmuls
dec
pop
out
jecxz
negl
pop
dec
insb
pop
imul
lahf
xchg
test
adc
adc
add
adc
shll
cmpsb
lahf
lret
push
aas
icebp
pop
test
iret
xchg
add
loopne
call
mov
xor
lcall
sar
xchg
jb
pmaxsw
nop
inc
sbb
aas
adc
imul
leave
cmc
cld
movsl
cwtl
inc
jmp
xchg
mov
add
dec
mov
arpl
push
mov
addr16
pop
mov
incl
ret
pop
pushf
dec
dec
mov
jmp
data16
push
test
fs
inc
push
enter
mov
movsb
sar
mov
or
pushf
add
jo
jge
out
pop
xchg
jg
testl
outsl
or
incb
bound
cld
pushl
nop
or
sub
push
cmp
out
mov
jb
push
cli
push
cmp
xorl
mov
sbb
addr16
popa
add
xchg
ficoms
mov
jle
mov
inc
out
xor
or
sarl
movsb
loop
inc
outsb
mov
pop
adc
ffreep
incl
or
or
xchg
add
xchg
in
fsub
ljmp
mov
pop
mov
cs
mov
cmp
xchg
addr16
sbb
pop
xchg
js
mov
mov
cmp
imul
out
lea
in
pop
lcall
jmp
dec
in
cmp
out
add
lret
addr16
popf
arpl
mov
jno
sub
mov
js
mov
pop
push
test
inc
or
divb
pop
in
cwtl
pop
pop
mov
pop
cli
inc
mov
add
mov
js
fwait
xor
add
dec
test
cmp
pop
mov
inc
pop
dec
jb
sub
insb
add
mov
into
mov
les
sbb
mov
mov
aam
jg
pop
xchg
mov
xchg
mov
pop
lds
ds
mov
mov
dec
pop
bound
rorl
cltd
roll
xor
mov
add
fs
mov
xchg
jmp
dec
gs
pop
or
add
cmp
push
ret
jge
add
fs
ret
xchg
mov
cld
lret
and
xchg
cmpsl
cmpsb
add
repnz
mov
and
ss
jmp
and
int
orl
or
fcomi
xor
inc
scas
adc
jge
ret
mov
dec
dec
mov
push
jecxz
jbe
bound
lea
push
cld
or
aas
mov
mov
lds
add
mov
in
mov
pop
adc
lock
adc
lock
adc
mov
or
xor
push
pop
je
add
adc
jns
and
mov
rorb
add
or
incb
adc
repnz
jle
into
out
cwtl
es
add
mov
test
fbstp
and
enter
mov
and
ljmp
jge
aam
pusha
inc
pop
push
shrb
enter
fdivl
aad
icebp
pop
sub
push
cli
lret
fisttpll
cmp
std
jmp
ret
scas
je
insb
fsubrs
adc
insb
dec
mov
add
invlpg
or
mov
jns
les
rcrb
and
imul
pop
inc
enter
shl
push
add
scas
outsl
mov
mov
test
push
mov
adc
dec
pop
add
dec
inc
jmp
inc
test
adc
lea
or
gs
icebp
add
les
xchg
fwait
mov
add
out
adc
sub
adc
add
inc
dec
mov
outsb
addr16
dec
mov
add
dec
jg
orl
inc
and
jg
and
xchg
jge
out
jnp
in
jle
lock
jmp
and
dec
adc
inc
mov
add
lret
movsl
mov
add
pop
pop
pop
fcoml
loopne
fs
jge
sbb
xor
adcb
dec
xchg
add
jns
jge
ja
add
inc
push
jge
jno
add
cltd
adc
and
adc
dec
xor
push
adc
decl
stc
xor
or
add
filds
add
mov
mov
xchg
mov
add
push
dec
xchg
in
inc
add
rorl
fs
mov
mov
sarl
pop
lea
aaa
pop
or
scas
mov
and
inc
daa
mov
insl
jb
jbe
xchg
jge
inc
xchg
outsl
aas
mov
pop
push
push
fstl
sub
movsb
mov
mov
xchg
mov
insl
xchg
xchg
xchg
sbb
scas
sbbb
mov
push
jg
addr16
jmp
jl
mov
scas
mov
lock
enter
out
test
xorb
lea
add
imul
popa
enter
pop
add
inc
inc
sbb
mov
push
mov
or
add
enter
aaa
or
lds
ljmp
pop
push
xchg
mov
mov
int
aaa
or
bound
pop
xor
cltd
mov
movsb
lock
push
addl
out
mov
mov
sahf
jmp
mov
imul
pop
jae
lods
movsl
xor
cltd
mov
mov
mov
cmpsb
push
jecxz
add
popl
call
lods
cli
or
dec
pop
pop
clc
pop
jge
pop
ss
loopne
pop
jb
jl
adc
adc
leave
call
pop
ja
inc
inc
ss
in
outsb
loop
jmp
aaa
inc
in
lret
add
shl
cmp
xchg
or
cmpsl
xchg
cmp
sub
push
incl
jne
mov
add
and
jge
mov
inc
fdivrl
nop
loope
dec
xor
dec
rolb
adc
fstps
add
clc
jg
xchg
push
sbb
dec
xchg
std
push
mov
pop
outsl
push
mov
inc
push
or
sbb
dec
loop
in
shll
je
das
inc
jae
push
int
add
sbb
dec
dec
stc
mov
push
mov
fisttpl
push
pop
fdivrs
push
inc
gs
sub
ss
fwait
and
sbb
dec
call
dec
add
ret
mov
data16
sub
push
hlt
fcmovu
arpl
lds
outsl
cld
mov
lahf
js
mov
add
cld
sbb
push
cmpl
or
popa
mov
sbb
lret
adc
add
call
or
pop
aam
lahf
fimull
inc
or
je
hlt
jp
addl
lahf
jo
push
ret
out
push
push
stos
mov
cmp
inc
sub
fwait
xchg
cmp
in
lds
scas
shl
call
xchg
xor
std
test
jo
push
mov
ljmp
inc
add
es
gs
loopne
xor
imul
mov
xchg
add
mov
or
pushf
xchg
adc
adc
notb
lahf
lret
ljmp
push
sbb
xor
mov
push
ret
sbb
jbe
call
mov
dec
outsl
out
mov
mov
push
cmc
packssdw
pop
shl
mov
sbb
and
push
data16
and
cwtl
xor
data16
and
outsl
ret
and
jns
or
stos
and
dec
mov
push
push
and
and
mov
add
or
mov
push
adc
push
sbb
adc
ret
addr16
xchg
dec
xor
jae
inc
jle
fidivl
clc
mov
je
lret
mov
xor
inc
jae
mov
ds
xchg
ret
jbe
idiv
bound
push
xor
add
mov
add
mov
sub
fdiv
inc
mov
inc
adc
mov
divb
daa
mov
hlt
out
fadds
adc
cld
cltd
mov
dec
sbb
cmp
mov
lods
dec
je
sub
jle
rcrl
cmp
mov
ret
dec
adc
test
fnstsw
clc
mov
ror
jo
lcall
pop
pop
lea
in
add
lds
sub
push
sbb
mov
andl
int3
xlat
sti
mov
test
add
mov
jl
dec
add
std
mov
add
mov
or
jmp
inc
mov
push
mov
sbb
in
decl
mov
ret
cmp
mov
div
jne
inc
jmp
jmp
lods
or
inc
xchg
jmp
add
sbb
fcmovne
mov
add
jmp
enter
add
hlt
outsl
loopne
int3
jmp
and
pop
jg
jecxz
mov
pop
fiadds
mov
pop
pop
mov
jge
hlt
pop
adc
jb
push
inc
mov
add
icebp
loop
push
mov
nop
inc
bswap
inc
iret
div
xor
push
inc
daa
mov
pop
cmp
call
or
push
aaa
repz
cmpsl
mov
add
add
mov
pop
push
cmp
call
pop
cmp
in
add
pop
cmp
mov
mov
fdivp
dec
sbb
dec
out
sti
dec
cli
or
dec
push
ds
scas
jmp
pop
lret
push
out
add
out
and
jg
test
dec
push
cmp
test
add
enter
and
mov
jmp
movsb
add
jno
aad
adc
add
add
mov
mov
fimuls
mov
jbe
rolb
mov
mov
jl
andl
nop
addr16
addl
out
scas
nop
dec
in
push
popa
xchg
sub
add
movsl
cltd
test
movsb
add
or
push
mov
or
inc
jmp
and
pop
cmp
mov
cmp
mov
mov
sbb
mov
dec
rcrb
cmc
hlt
testb
add
jl
fnstenv
add
push
xchg
mov
jae
insb
adc
ss
leave
mov
mov
mov
xchg
in
loope
dec
mov
fcmove
xor
in
pop
les
popf
ret
lret
dec
test
jmp
or
add
mov
aas
or
mov
and
or
lea
divb
pop
notl
in
cmc
mov
orb
add
jns
int3
repz
stc
xor
adcl
jne
pop
pop
jmp
stos
mov
push
or
and
mov
mov
out
mov
xchg
inc
mov
mov
add
idiv
pusha
aaa
inc
and
sti
pusha
add
push
mov
fistps
mov
mov
cli
adc
add
lret
and
ss
and
sti
xchg
push
lea
ljmp
mov
or
xor
inc
jle
and
shll
push
sbb
xor
cmp
add
mov
and
mov
add
popw
add
xchg
in
popa
lods
jnp
add
pop
and
or
inc
and
pop
jbe
mov
scas
and
fcompl
and
jne
mov
nop
and
mov
sub
arpl
jmp
popf
jmp
mov
popa
pop
outsb
mov
add
mov
ret
push
cmp
int3
dec
mov
adc
cmp
cmp
sub
lock
das
and
cli
jle
adc
les
dec
mov
pop
cmp
inc
mov
sub
fsubl
ljmp
mov
jno
or
add
scas
sub
cmc
pop
cmpsb
push
aaa
sub
rorl
mov
dec
faddl
addl
fadd
mulb
mov
in
push
bound
call
lahf
adc
insl
dec
aaa
cs
pop
pop
stc
es
or
int3
mov
add
int3
mov
xchg
xchg
cltd
or
jmp
push
mov
pop
pop
pop
stc
out
and
in
mov
pop
mov
roll
inc
or
inc
push
push
jb
push
push
stos
dec
xor
cld
sti
push
add
dec
psubb
testb
xchg
pop
gs
pop
or
pop
dec
jge
xor
push
cmp
and
insb
inc
or
fcoms
xchg
out
adc
xchg
stos
cld
int3
call
add
pop
pop
dec
sbb
mov
jecxz
push
and
mov
call
mov
pusha
add
mov
pop
add
cmc
scas
add
adc
xlat
in
decl
repnz
push
out
out
inc
cli
adc
fmul
int
mov
aas
test
push
fs
dec
adc
xor
clc
mov
mov
push
stos
into
lods
pop
mov
xor
test
dec
push
xchg
jo
mov
fsubr
inc
adc
bound
adc
push
mov
fmul
dec
mov
lea
aam
sbb
sbb
sbbb
bndstx
lods
lods
mov
lods
stc
pop
mov
pop
loopne
test
push
xchg
add
xor
xor
inc
sub
inc
cmp
mov
mov
sahf
adc
adc
fsubrp
add
mov
cmp
test
dec
add
call
xchg
out
adc
and
mul
jns
push
adc
sar
cmc
movb
jo
add
jmp
pop
movsl
mulb
adc
jno
insb
and
insl
pop
pusha
es
sub
insb
daa
insb
add
pusha
adc
jnp
mov
ljmp
xchg
inc
jmp
push
pop
or
pinsrw
pop
shll
les
fstpt
je
mov
push
pop
mov
fiadds
sub
stc
mov
dec
and
ja
adc
xchg
jmp
add
stc
mov
pop
pop
pushf
or
and
or
push
mov
stos
fdivrp
adc
mov
push
imul
cmc
jne
mov
lock
fildl
mov
fildl
and
push
enter
or
inc
push
mov
jmp
idiv
addr16
push
and
adc
call
popa
sub
and
dec
xchg
loop
out
lret
mov
cwtl
sti
out
mov
or
sbb
and
push
lods
pushf
je
mov
out
pop
jns
pop
add
mov
xchg
das
cmp
sbb
lret
stc
stc
shrl
and
iret
xchg
cmp
push
cmp
rorb
scas
add
adc
add
outsb
lret
and
sbb
push
mov
ja
or
adc
aaa
enter
jo
xor
aas
add
adc
les
cmpsb
lds
imul
les
cmpsb
popf
mov
inc
filds
test
pop
dec
inc
push
aad
daa
shr
mov
xor
cmpsb
repz
arpl
in
mov
pop
sub
sub
das
sub
inc
add
scas
sahf
mulb
push
cmp
rcrl
mov
adc
cmp
fldl
pop
loope
inc
pop
aad
out
adc
jne
les
scas
sbb
fisubrs
aam
push
shll
mov
lds
les
push
dec
int
popf
mov
stc
cmpsl
mov
jo
test
push
pop
fnstenv
adc
push
ret
push
aam
pop
push
js
icebp
lea
sbb
imul
lock
imul
and
push
pop
and
jo
clc
test
add
and
add
pop
adc
lret
and
repnz
adc
mov
or
repz
mov
out
clc
idiv
aaa
pop
inc
and
ja
cli
dec
popa
jge
pop
xchg
xchg
xchg
adc
add
adc
or
rdmsr
ds
mov
add
sub
jl
fisubrs
inc
mov
lods
pop
add
mov
and
div
dec
jns
cs
mov
ret
lcall
mov
cmpsb
inc
decl
popf
sbb
jl
out
xchg
mov
add
fmull
movsb
pushf
int
add
sub
shll
scas
daa
lret
and
cld
inc
shr
ja
pop
pop
mov
pushf
jg
shll
push
out
cs
and
mov
add
arpl
adc
add
push
jecxz
dec
jbe
scas
cltd
inc
push
xor
sub
fidivrs
mov
ret
popa
or
rclb
movsb
in
inc
jbe
in
pop
jbe
sub
dec
or
xchg
sub
push
xchg
sub
enter
mov
popa
ss
imul
rorb
mov
in
sub
mov
shll
test
movsl
mov
pop
movsl
divb
inc
push
mov
and
lcall
dec
fs
insl
adc
mov
sti
push
cmpsb
or
fstpt
or
popf
sub
mov
jle
sbbb
imul
inc
jle
outsl
add
add
movsl
adc
dec
xchg
subb
pop
clc
sbb
movb
push
mov
mov
dec
inc
push
cwtl
adc
test
daa
test
fldt
call
sub
jg
dec
mov
push
mov
mov
and
adc
stc
in
dec
fisttpll
sbb
into
push
jmp
je
mulb
pop
pop
pop
int3
dec
dec
mov
push
push
pop
adc
lea
mov
call
insb
pop
jg
mov
repnz
and
das
push
je
mov
xchg
mov
mov
cmpsb
call
sub
jo
enter
push
add
addb
sbb
add
sub
cli
jecxz
hlt
jne
enter
xchg
call
sub
push
sbb
push
jno
cli
and
loop
cwtl
mov
cli
add
rcrb
repnz
pop
jle
xchg
aas
sti
daa
mov
lcall
mov
adc
cmp
inc
pop
mov
or
aaa
xor
popa
inc
test
pop
ss
lds
int3
or
sub
or
std
mov
or
scas
lea
sub
popa
dec
out
in
add
sahf
popa
inc
or
les
dec
sahf
mov
lock
jecxz
push
lea
xchg
mulb
add
pop
stos
rolb
fnstsw
dec
jb
sqrtps
cld
add
lea
mov
pushf
outsl
testb
test
mov
xchg
cmp
shrl
pop
jb
or
shll
pop
inc
push
mov
bound
push
lahf
push
daa
pop
jb
sqrtps
push
movsl
mov
flds
pop
fwait
outsl
negb
outsb
shll
lds
or
stos
pop
push
or
push
add
mov
sub
jne
movzwl
mov
jecxz
test
jecxz
imul
aas
fidivl
test
loop
xor
jge
push
sbbb
mov
dec
fisubs
movsb
pop
stc
jmp
imulb
xchg
enter
lock
cmp
into
pop
sbb
mov
lods
jb
ret
mov
and
aam
mov
xor
ljmp
mov
or
cltd
mov
mov
aas
in
ret
roll
sub
push
add
sahf
sub
mov
jmp
sub
test
sub
loopne
inc
out
xchg
xor
adc
mov
push
sub
fwait
cwtl
or
add
mov
push
add
xchg
xchg
lcall
lea
test
lcall
and
imul
add
out
fistl
mov
pop
dec
in
xor
cvtps2pi
lea
jae
cmp
or
scas
inc
test
cltd
mov
pushf
sbb
sti
mov
fiadds
and
in
add
ds
leave
push
mov
mov
xchg
mov
mov
sbb
and
rcrl
loope
mov
dec
adc
in
pop
lea
xor
or
aas
sbb
push
dec
int
add
int
jo
movb
add
mov
pop
idiv
clc
dec
pop
loope
iret
pop
jmp
imul
gs
bound
sbb
insl
sldt
lahf
jmp
dec
and
mov
push
test
jmp
daa
xor
icebp
icebp
insb
ja
sarb
xchg
fwait
jae
dec
jmp
ficoms
push
add
dec
daa
dec
lcall
push
out
stc
xor
add
dec
fisttpll
sbb
and
int
jmp
or
jae
loop
shrb
ret
add
push
pop
in
bound
imulb
push
mov
int3
mov
mov
mov
js
push
ja
jb
ja
push
ja
jb
js
push
js
mov
js
stos
push
pop
mov
mov
jp
testb
call
sub
subb
dec
mov
std
decl
into
fsubp
add
sub
cli
mov
jns
xchg
and
xchg
mov
inc
mov
addl
rclb
stc
fisubs
inc
mov
iret
lods
pop
adc
jne
or
out
mov
add
sbb
cs
fadds
mov
add
icebp
and
add
sahf
fisttps
mov
add
adc
addb
xchg
in
rorb
imull
jge
in
js
outsl
faddl
lea
jmp
dec
outsl
int3
shll
push
or
jns
repz
outsl
out
sbb
arpl
lods
pop
jae
lods
jae
in
xchg
add
in
pop
popf
push
xchg
add
cmp
jmp
cld
xchg
notb
popf
sub
pop
jne
xchg
adc
add
orb
push
xchg
add
sti
inc
inc
or
repnz
jle
idivb
sbb
out
push
outsl
loope
imul
inc
iret
push
mov
or
jo
imul
mov
jb
mov
mov
imulb
cmpl
cld
in
sbb
mov
cmpsl
jge
bnd
xor
fdiv
and
mov
iret
decb
repnz
push
testb
xchg
inc
xorl
cs
jge
addl
test
add
bound
cli
mov
add
and
shll
xor
mov
stc
pushl
dec
jb
lea
inc
lahf
mov
cmpsl
cmc
lds
sahf
ret
data16
inc
or
xchg
mov
mov
mov
lcall
mov
ss
or
mov
mov
pop
inc
or
addl
add
outsb
jecxz
out
jp
icebp
and
decl
data16
pushf
outsb
pop
sti
inc
into
scas
mov
push
into
push
cmpsb
cmp
mov
sbb
mov
xchg
call
add
xchg
sbb
in
in
add
addr16
sbb
add
push
daa
sbb
cvtpi2ps
mov
test
pop
mov
mov
shrb
sub
jge
mov
addr16
cmp
lods
inc
movsl
shufps
adc
jmp
xor
mov
leave
and
pushf
mov
lret
sbbl
add
mov
dec
add
outsb
push
jmp
jbe
ret
popa
dec
outsb
jae
movsl
pop
jmp
sbb
outsb
pop
rcl
add
pop
xchg
outsl
dec
in
pop
or
add
mov
clc
mov
mov
insl
xor
and
neg
mov
incb
test
jg
xor
jge
sub
aas
int
mov
sbb
xchg
cmp
rorb
fdivrp
sub
cmp
bound
lea
mov
push
add
mov
cmp
pop
mov
sub
or
jle
idiv
and
jb
rorl
dec
and
outsl
jg
loopne
jge
mov
mov
jle
fwait
iret
and
and
stc
mov
and
inc
and
adc
mov
sar
lret
add
ja
jb
push
jae
into
ja
mov
cmp
stos
jmp
stos
pusha
decl
jle
add
pop
jp
stos
xchg
sbb
or
xchg
fiadds
dec
mov
inc
jb
icebp
enter
cli
sbb
stc
mov
mulb
and
and
dec
mov
mov
push
testl
mov
adc
inc
enter
jmp
mov
add
ret
cli
ret
sbbl
sbb
pop
inc
adc
add
mov
imul
sub
cltd
cmp
jp
movsb
js
and
push
ret
sub
add
in
add
mov
jge
sar
lret
sub
dec
fisubl
orb
and
inc
xchg
divb
pop
negl
sub
jmp
jg
out
stc
add
lea
push
or
lea
mulb
or
in
orl
jmp
test
add
testb
pushf
jmp
dec
mov
jb
pop
out
jge
add
std
imul
add
test
imul
add
and
stc
mov
jno
mov
pop
insb
lods
lcall
adc
stc
push
adc
and
and
inc
push
test
addr16
xor
adc
call
mov
adc
call
jno
and
aaa
jno
mov
addr16
add
xchg
aas
enter
dec
push
lods
cmp
cwtl
mov
testl
cmp
insb
jmp
push
inc
fldenv
mov
mov
addb
cmp
and
jle
lret
dec
sub
and
dec
inc
mov
add
push
mov
mov
pop
xchg
xor
inc
push
into
mov
dec
or
pushl
shlb
jae
lret
lcall
cli
or
cmp
fimuls
add
stc
filds
mov
sub
inc
lds
or
inc
add
aam
cmc
lea
jge
pop
mov
popa
xchg
insl
ja
xchg
pop
enter
xchg
push
dec
mov
mov
scas
enter
sbb
stos
fidivl
test
fwait
push
shl
jge
imul
mov
and
into
cmc
ljmp
and
dec
iret
insl
popf
push
adc
push
add
popa
pop
jb
imul
js
adc
add
add
neg
jns
inc
jmp
call
std
xor
call
mov
ret
adc
lock
xchg
adc
xchg
stos
xor
push
dec
jo
xor
jmp
xchg
test
push
popa
xchg
test
or
cmp
sbb
add
test
jb
mov
ljmp
inc
add
pop
xor
add
jmp
or
stc
xor
repnz
jbe
ss
lea
rolb
add
adc
std
lock
fisttpll
dec
add
ljmp
add
push
pop
add
push
ret
jns
repz
cld
ss
sarb
call
mov
and
mov
stos
jge
adc
add
movsb
mov
jge
mov
sub
mov
insl
call
jae
mov
stos
data16
pop
jmp
stos
in
je
in
mov
adc
jbe
andl
repnz
dec
mov
inc
jle
je
dec
test
dec
loop
and
jmp
or
out
aad
cli
push
cmp
orl
cli
loop
jmp
rorb
mov
out
sub
out
rclb
clc
pushf
mov
iret
scas
les
shll
shrb
add
hlt
xchg
mov
scas
add
int3
cmpsl
addb
enter
scas
test
int
inc
out
inc
inc
or
repz
out
mov
movzbl
mov
fisubs
lods
test
mov
dec
call
mov
mov
std
mov
pop
lods
jg
add
adc
add
xchg
bound
test
fisubrl
ret
outsb
popa
mov
jo
cmp
in
push
lea
dec
jge
shll
push
push
add
lea
mov
adc
pop
icebp
movsl
cmp
jae
repz
stos
sbb
or
negb
add
xchg
mov
sbbl
lret
and
mov
and
ss
jnp
mov
scas
push
int
mov
mov
lods
dec
sbb
pushf
xchg
jmp
mov
mov
mov
pop
push
adc
and
xor
dec
call
jbe
jmp
dec
add
cmp
outsl
or
and
cld
ljmp
pop
pop
add
add
mov
add
xchg
add
cltd
jge
fwait
mov
mov
test
adc
mov
ret
int3
dec
mov
inc
mov
popaw
or
dec
cli
lea
adc
fiaddl
xor
mov
fwait
push
sub
dec
cmp
push
xchg
inc
xor
dec
mov
sbb
jg
jb
lea
scas
mov
scas
push
mov
arpl
shr
test
cs
inc
sbb
jmp
jae
lret
test
jbe
push
cli
sbbl
in
mov
ja
mov
fsubl
or
push
mov
cmp
test
xor
sbb
sbb
sbb
fsubrs
imul
fstl
andl
test
adc
insb
add
mov
mov
xchg
adc
mov
and
dec
in
arpl
mov
daa
test
lea
sbb
xchg
aaa
addb
ja
mov
jmp
add
fidivrl
sbb
pop
loope
xchg
lret
fisttpl
add
popf
xor
push
adc
sbb
mov
jbe
adc
int3
jmp
mov
push
xlat
xchg
nop
and
adc
jb
mov
dec
bound
xchg
xchg
negb
or
add
add
ja
jmp
pop
movsb
stc
test
sbb
call
cmp
jnp
lret
mov
mov
bound
call
stos
jb
lods
aam
dec
popa
movsb
stc
push
or
and
push
lcall
xchg
adc
push
int
mov
bound
fcmove
or
push
lret
call
je
and
push
in
add
js
jge
mov
xor
cvttps2pi
fisubrs
or
scas
add
mov
sbb
mov
xchg
jbe
inc
cli
jns
mov
loope
ljmp
jae
inc
or
jp
or
xor
jle
dec
xchg
sub
stos
mov
lea
and
xchg
filds
add
inc
aaa
dec
adc
jbe
adc
test
incl
or
pop
jp
stos
add
push
xchg
mov
loopne
adcb
mov
in
mov
cmpsl
loopne
adc
shl
xor
jmp
cmc
call
in
jno
sbb
mov
cld
nop
inc
orb
mov
jmp
cmpsl
clc
mov
sbbb
mov
not
mov
adc
fildll
cmpsl
add
adc
rorl
jg
inc
fisubs
mov
dec
add
ficoml
shr
test
mov
push
stos
pop
mov
push
enter
jo
aas
lds
stc
adc
cmp
mov
daa
or
add
je
ja
les
mov
into
neg
js
stc
dec
jg
jmp
mov
fimuls
subb
jmp
adc
orl
xor
xchg
movl
sub
cwtl
or
pop
stc
je
xchg
addr16
jmp
adc
and
xor
ja
mov
add
mov
xchg
psubb
testb
jg
shlb
and
xchg
imul
call
pop
cmpxchg
rcl
popa
or
mov
sub
mov
jecxz
and
les
jl
sbb
lcall
xor
incl
loop
adc
xchg
or
lret
mov
add
mov
mov
cmp
jg
decl
out
jmp
mov
stc
mov
add
in
jbe
mov
movsl
push
add
jb
addr16
lret
mov
add
mov
pop
sub
scas
jbe
lcall
or
inc
mov
or
unpcklps
pusha
ret
adc
test
sbb
add
xchg
mov
cwtl
jg
xchg
xchg
in
mov
jno
mov
in
pop
mov
add
jb
xchg
xchg
jl
add
xchg
int
and
mov
add
cwtl
mulb
adc
test
push
enter
mul
jle
mov
xor
loop
jnp
mov
pop
mov
sub
mov
add
jle
lsl
jno
cmc
out
fs
adc
jmp
movsl
jge
jmp
stc
adcb
mov
xchg
jmp
inc
xor
fiaddl
int
pop
pusha
dec
xchg
neg
mov
cs
fstl
push
adc
popa
or
add
insl
mov
sarl
ret
dec
call
jl
jg
add
push
push
dec
xchg
mov
stc
mov
sbb
cmp
xor
push
lcall
sti
add
mov
add
rclb
and
ret
inc
lcall
enter
mov
mov
cwtl
and
dec
jg
ljmp
jb
mov
jnp
add
popl
add
jge
pushf
jb
cli
add
fwait
pmuludq
dec
testb
imul
aaa
cmp
pop
dec
rolb
add
xor
mov
adc
jne
incl
mov
aas
jae
in
rcll
stos
fwait
sub
pop
adc
push
aas
cs
leave
enter
in
outsb
sahf
test
add
sti
out
dec
and
cmp
push
add
jns
adc
inc
push
ret
sub
push
add
in
jae
bound
dec
adc
std
or
bound
andl
dec
in
add
popf
lods
add
push
sub
adc
xchg
ss
jae
cmpsl
arpl
addl
mov
js
arpl
insl
xchg
sbb
loopne
ret
out
lahf
push
xchg
mov
not
arpl
imul
fsubrl
lods
add
js
xchg
sahf
lret
in
mov
push
mov
ret
lea
jg
push
mov
jmp
fucomi
jne
jno
bound
lods
sub
xchg
subb
orb
lods
ja
lea
neg
inc
mov
std
xor
repz
out
xchg
mov
mov
repz
nop
jne
ss
idiv
push
xchg
movsb
out
adc
add
add
sbb
xor
aas
int
not
mov
outsl
mov
push
lret
pop
icebp
std
pop
jg
addl
pushl
cmp
mov
js
call
jb
adc
jb
jl
je
add
or
call
or
cli
add
or
xlat
push
adc
push
lea
push
push
cmp
ficomps
mov
push
fdivrs
pop
mov
inc
cmp
push
push
in
xchg
stc
push
inc
jle
clc
repnz
test
popl
add
test
je
or
or
mov
insl
fnstsw
ret
lods
jle
lcall
add
lcall
xchg
mov
xchg
xor
inc
cmc
popa
ror
je
pushf
cli
add
add
jae
or
jno
ljmp
sub
mov
xor
cli
inc
jmp
pop
cli
lds
mov
adc
push
pop
push
jno
ss
jnp
icebp
aas
mov
mov
in
mov
mov
add
xchg
iret
in
or
jecxz
ret
sbb
cmp
pop
add
mov
lahf
cmp
rorl
inc
scas
int
jp
xchg
adc
mov
arpl
pop
je
add
jle
shll
shrd
sbb
jns
aam
je
jg
push
scas
mov
je
adc
xchg
pop
lods
pop
popf
arpl
jne
push
mov
inc
xor
stos
mov
jp
call
adc
cmp
fdecstp
fcoml
inc
jmp
lea
add
hlt
hlt
and
mov
jmp
xlat
jo
jmp
ffree
add
shll
aas
jmp
add
mov
das
dec
fisttps
jb
fwait
dec
decb
mov
ret
push
negb
or
bound
xchg
lea
xchg
pop
shl
jg
imul
add
andl
clc
es
or
adc
mov
imul
imul
mov
or
sti
outsl
inc
adc
insb
dec
push
pop
xor
jge
idivb
jge
imul
or
hlt
je
cmc
add
test
add
out
mov
pushl
add
mov
test
mov
or
test
inc
or
outsl
out
or
decl
cmp
es
xor
cmp
add
fdivl
cmp
mov
out
cli
xorl
cmp
push
mov
and
push
adc
push
jbe
dec
fs
inc
jl
test
or
or
dec
xor
cwtl
add
fiadds
xchg
dec
inc
nop
xchg
and
je
mov
test
call
mov
xlat
lock
jno
add
jne
jge
fs
mov
popf
dec
fidivrl
aaa
jno
jl
add
or
dec
ljmp
jo
repz
lock
xlat
lock
jg
test
jmp
fnstenv
or
popf
ljmp
jo
cld
adc
add
arpl
movsl
jo
xchg
add
rcll
int3
mov
dec
push
jne
jmp
push
lods
adc
stos
adc
int
jg
dec
jo
fsts
outsl
add
cmp
add
mov
mov
jne
jmp
push
lods
adc
push
lods
adc
push
lods
adc
je
push
dec
sub
int
cmc
jns
je
int
fnsave
mov
addr16
jne
jmp
enter
mov
int3
mov
cmpsl
xor
je
jae
inc
sbb
ljmp
repnz
call
mov
or
cmp
mov
iret
push
scas
dec
repz
xchg
cmp
xchg
or
jne
mov
repz
call
outsb
sbb
mov
fsubp
into
test
mov
out
hlt
rdpmc
mov
push
lea
inc
mov
add
pop
pop
mov
jle
add
or
fdivr
decl
test
cld
popa
divl
jmp
movsb
decl
push
ret
into
fs
std
bound
and
pushf
pop
adc
sbb
add
adc
cmp
js
gs
fbld
stc
jmp
push
lret
je
out
sbb
mov
sub
push
es
loopne
xor
add
jg
mov
mov
in
js
pop
mov
xchg
add
add
dec
xchg
mov
insl
sub
jbe
aad
xchg
pop
scas
sub
insl
pop
jbe
addr16
ret
sub
sub
xchg
add
inc
fs
adcl
cli
insb
fiaddl
int
cmp
loop
fwait
cmp
add
mov
pushf
insl
add
pop
in
fnstenv
jmp
in
negb
imul
mov
xlat
das
push
bound
mov
jno
push
dec
add
mov
mov
inc
clc
jle
cmp
xor
enter
sub
gs
mov
fimuls
stc
add
lea
dec
sbb
cmc
sub
add
pop
dec
push
gs
insb
imul
add
iret
mov
jg
int3
std
sar
repnz
cwtl
jg
mov
add
xchg
cwtl
jne
mov
add
jecxz
aam
jp
mov
xchg
rorl
nop
add
sbb
in
pop
xor
test
pop
or
sbb
mov
xor
in
cmp
jb
fdivrl
mov
clc
pop
cmp
xchg
adc
sbbl
popa
cmp
mov
cli
decl
mov
test
in
push
or
test
xchg
sbb
mov
ds
in
inc
mov
inc
fcoml
pop
or
in
cmp
test
fisttpll
mov
dec
or
xchg
mov
dec
or
mov
dec
adc
adc
dec
adc
cmp
je
in
dec
sbb
sbb
dec
sbb
cmp
je
in
dec
and
xor
mov
cmpsb
daa
pop
or
cmpsb
cmpsb
cmpsb
sub
jno
jp
cmpsb
das
cmp
rcll
pop
push
aaa
or
push
idivl
in
insl
pop
shrl
pop
mov
sub
add
xor
pop
inc
add
jge
aad
popa
push
outsb
jae
add
dec
ss
xchg
inc
inc
imul
sti
je
xor
int3
sub
imul
add
adc
inc
or
jg
lea
stc
jb
jae
adc
arpl
lea
mov
imul
imul
sysenter
orb
notb
mov
inc
jmp
inc
jae
clc
imul
xchg
or
call
dec
cmpl
sti
inc
jmp
pop
aam
jo
arpl
mov
adc
or
filds
lahf
ljmp
add
fisttps
adc
push
testb
sbb
push
add
lahf
int
pushl
xchg
sahf
ljmp
push
push
add
imul
mov
sbb
xor
shll
inc
daa
sbb
cmp
rcrl
inc
call
ss
lods
rorl
addb
jle
sti
pop
outsb
sub
dec
mov
in
add
ljmp
insl
jle
mov
cmp
cmp
adc
mov
outsb
inc
add
dec
mov
leave
out
ret
movl
test
js
inc
pop
cli
push
add
ljmp
lahf
addl
icebp
repz
add
inc
add
mov
pop
out
mov
test
jl
jo
inc
jp
jge
int
in
jmp
sbb
or
cwtl
pusha
std
push
mov
lcall
inc
mov
cmc
les
jno
or
add
fmuls
mov
in
jmp
pop
out
cld
or
jg
std
add
dec
out
xchg
leave
in
add
mov
or
adc
xor
mov
ja
lods
pop
shlb
push
cltd
lods
cmp
xchg
pop
pop
or
sub
or
cmc
fistps
mov
bound
test
adc
ret
je
xchg
arpl
bnd
jno
push
push
inc
in
cmc
sub
pop
in
out
loope
rol
push
jne
imul
pop
jne
push
inc
in
sbb
not
cmp
ss
in
shl
mov
pop
bound
jne
loopne
sbbl
mov
rorb
les
jmp
enter
cld
rorl
mov
push
mov
jge
ret
pop
add
add
adc
cmp
nop
jg
out
add
mov
std
push
imul
pop
lock
jecxz
add
nop
jg
cmpsb
xchg
xor
or
or
xchg
and
fisttpll
inc
ja
lock
mov
fisttpl
sbbb
sti
xchg
xchg
jne
mov
add
push
ja
adc
decl
mov
decl
andb
js
jno
in
out
je
add
into
cmp
adc
adc
hlt
cmc
sub
je
adc
jg
cmc
jns
sbbl
add
ret
xor
test
add
push
outsb
sub
fdivp
clc
cmp
push
sti
jle
into
xchg
add
dec
lahf
xchg
and
mov
add
data16
or
std
jne
push
test
clc
pop
push
data16
ret
and
xlat
mov
ds
add
or
andb
and
cwtl
xor
data16
stos
or
ds
stos
insb
std
insb
xlat
lret
mov
shrw
icebp
pop
and
cld
jb
out
mov
data16
or
cmc
in
scas
pusha
add
sbb
mov
and
ljmp
push
insb
sahf
idivb
push
and
xchg
cli
scas
xchg
or
jmp
push
arpl
ret
js
ljmp
push
leave
push
in
mov
inc
xchg
pop
addl
enter
or
or
mov
xchg
in
adc
ror
shrl
insl
or
jo
xchg
xlat
fnstsw
mov
cmp
or
jmp
cld
push
fs
dec
jne
cmpxchg
lret
add
lock
rcrl
fiaddl
dec
or
test
cmp
mov
mov
cwtl
or
iret
push
cld
jl
loopne
hlt
dec
inc
pop
sbb
mov
fsubr
int3
add
jmp
add
mov
int3
add
stos
int3
add
lcall
adc
ds
add
mov
add
jg
test
pop
jbe
inc
jns
lret
jle
push
stos
pusha
xchg
mov
add
out
lea
stos
dec
cmp
fwait
das
mov
call
idiv
add
testl
pushf
aaa
jae
jmp
data16
mov
enter
and
pop
or
push
incb
push
daa
add
sub
cmp
jmp
cli
cmpsl
adc
pop
lahf
adc
stos
stos
stc
fsubrs
adc
and
lock
lahf
loop
shlb
jae
jb
sbb
outsl
mov
cmpsl
les
sub
in
adcl
hlt
dec
xchg
xchg
mov
cltd
mov
add
add
jecxz
sti
add
lods
test
add
xchg
add
lea
jg
mov
imul
sbbb
bound
out
icebp
pop
add
lea
std
inc
or
add
and
in
pop
push
ljmp
addb
add
cli
or
hlt
xchg
pop
ja
add
xchg
sbb
mov
push
cmpsl
sbb
xor
add
pop
fisttpll
popf
pushf
push
dec
lds
mov
lret
mov
ret
je
adc
fcmovnu
pop
add
popa
addb
test
add
lret
mov
add
idiv
ja
lock
and
mov
add
fisttpl
stos
cmpsl
jmp
push
inc
add
sbb
mov
mov
mov
dec
jmp
maxps
test
addl
test
ja
or
adc
jl
sub
daa
dec
jecxz
mov
mov
jne
mov
fld
stc
mov
push
str
cltd
sub
adc
sbb
stos
xor
icebp
stc
ja
adc
mov
inc
or
test
cmp
out
fadds
mov
sub
add
and
out
cmp
sbb
ret
add
mov
fucomi
push
and
sbb
je
cmp
mov
notl
mov
stos
jle
pop
lcall
add
or
push
js
mov
aad
inc
pop
or
add
jne
pop
jge
scas
call
sub
pop
xchg
xchg
loop
int3
or
adcb
sbb
insb
add
ja
cmpsb
clc
daa
bound
movsl
fldt
in
add
or
mov
imul
scas
clc
fiaddl
pop
xor
call
rcr
sbb
fs
or
jl
push
xchg
adc
or
scas
adc
adc
dec
add
mov
push
fs
push
test
pop
or
push
outsl
add
roll
dec
loopne
jb
scas
les
mov
subb
scas
jg
add
into
push
out
mov
testl
jg
and
jge
movsb
add
dec
adc
xlat
leave
call
inc
pop
rcll
pop
add
loope
jl
xor
add
xlat
inc
and
add
add
inc
outsl
and
push
and
cld
ds
mov
push
sar
mov
lea
pop
cwtl
pop
orl
sub
jl
sbb
lods
add
dec
adc
adc
stc
xchg
mov
jp
jl
orl
or
or
cmp
pop
sbb
idiv
cwtl
mov
jb
add
pop
clc
decl
out
or
and
inc
and
cs
std
popa
daa
inc
jmp
inc
sub
imul
xchg
shlb
out
stc
push
scas
add
daa
mov
in
pop
push
push
inc
add
inc
lds
fcompl
push
xor
xor
cs
add
xchg
enter
enter
test
in
decb
or
xchg
push
xchg
push
push
sti
jecxz
stos
std
or
ret
push
adc
xchg
fs
mov
dec
int
pop
mov
push
push
insb
jmp
inc
push
lea
mov
lret
clc
sub
jmp
mov
add
mov
push
cmpsl
add
in
or
xchg
sub
fmuls
jo
xor
jmp
mov
gs
xlat
xor
lea
or
shrd
jmp
rcl
sti
mov
mov
or
icebp
pop
enter
pusha
clc
into
bound
ljmp
outsb
or
sbb
repz
ja
sub
fldcw
mov
mov
dec
inc
add
xor
std
mov
mov
shll
sub
jge
shlb
xor
mov
jae
mov
mov
movsb
or
add
jbe
xchg
xor
add
rorl
mov
xchg
pop
adc
ja
add
roll
fidivs
pusha
cld
test
or
or
movsb
xchg
and
iret
add
xlat
jbe
push
pop
pop
dec
mov
or
test
stc
adc
add
or
movsb
inc
jmp
les
jns
sub
pushf
ljmp
bound
add
and
inc
or
std
pop
mov
push
mov
jne
stos
ffreep
or
stos
add
mov
mov
or
sub
stc
popa
filds
in
out
pop
addr16
dec
mov
andb
push
lea
inc
push
jge
or
int
adc
in
add
push
mov
pop
cmc
jg
jnp
scas
addl
enter
xchg
add
stos
xor
dec
jns
rorl
dec
mov
fcompl
push
or
xchg
test
andb
in
push
push
out
clc
or
or
cmp
or
inc
popa
xchg
inc
pop
push
add
enter
lea
call
daa
push
adcl
and
cmpsl
int3
push
std
jg
dec
imulb
pop
push
testb
cmp
dec
notl
inc
xchg
ret
aam
mov
mov
mov
push
ljmp
lret
call
ret
int
daa
int3
push
or
mov
fimuls
dec
cmp
add
push
push
lds
or
lea
xor
adc
adc
sbb
mov
xor
and
xchg
aam
adc
insb
clc
jmp
ljmp
testl
lea
repnz
inc
pop
xor
ljmp
jno
testb
f2xm1
incl
cwtl
or
les
push
fnstsw
push
inc
ss
xor
xchg
bound
adcb
mov
insb
add
mov
sub
push
mov
mov
pop
lcall
jl
js
int
sub
cmpl
pop
xor
sbb
shlb
decl
notl
stc
fabs
ljmp
leave
mov
jnp
mov
push
mov
cmp
jbe
jns
orb
movl
sbb
in
mov
in
add
add
adc
xchg
mov
push
gs
out
dec
insb
ljmp
sbb
push
push
int3
jo
inc
es
daa
dec
insb
ljmp
push
gs
push
push
repnz
out
inc
cmpsb
add
fs
out
insb
ljmp
in
mov
addb
jmp
cmpsl
cmp
xchg
pop
jle
xchg
dec
jb
jg
add
push
jmp
ja
imulb
addb
jmp
pop
or
loope
stc
jae
sbb
mov
roll
les
pop
leave
add
push
imul
add
jno
push
data16
test
jmp
push
jns
scas
enter
repnz
lea
mov
xlat
and
mov
or
lea
ljmp
jns
mov
enter
xor
jmp
cmovno
ja
inc
test
cmpsb
or
xor
lahf
fistpl
dec
lahf
fistpl
mov
je
xchg
or
xor
jmp
test
inc
sbb
push
jmp
js
inc
jmp
adc
pop
dec
les
dec
les
jp
mov
addr16
test
add
jbe
jne
daa
arpl
jne
mov
push
sub
adc
sbb
inc
xor
sub
popa
adc
cltd
fiadds
jmp
xor
xor
push
sbb
xchg
and
adc
cmp
mov
xchg
bound
adcb
add
rcrb
decl
adc
sti
das
push
addb
in
pop
pop
rcrb
cld
add
jo
decl
cmpl
mov
divb
or
add
gs
repz
int3
mov
in
add
dec
ljmp
or
inc
xchg
adc
cmc
mov
sbb
add
mov
pop
jg
mov
sbbl
aad
add
xchg
in
add
adc
mov
ret
xlat
sub
inc
mov
stc
xchg
cmpsb
and
mov
int3
ror
pop
mov
add
mov
xor
or
adc
mov
jo
or
dec
cmp
imul
push
push
mov
cmp
imul
inc
mov
jmp
or
call
lahf
push
mov
das
and
cmc
movsb
or
idivb
inc
and
or
sti
outsb
out
or
push
dec
adc
mov
jecxz
inc
add
lcall
dec
popa
cld
aas
aad
cmp
sub
mov
inc
and
add
add
out
or
lock
xor
int
addr16
jae
or
cmp
loopne
jno
sbb
pop
mov
adc
test
inc
adc
jne
inc
testb
and
mov
xor
jl
incl
push
push
and
jb
mov
lods
dec
adc
push
std
or
cli
test
sbb
stos
inc
and
imul
loop
out
jl
push
push
add
jno
fisubl
cltd
scas
fs
popa
popa
jg
imul
out
or
stc
push
std
cmp
or
std
decl
or
icebp
sbb
jg
mov
xor
ret
and
add
stc
push
mov
xchg
push
xlat
add
fldcw
filds
test
ja
mov
xchg
in
add
shr
daa
test
adc
fldl
sub
ds
lock
gs
dec
xchg
jo
add
inc
aad
pop
jbe
mov
into
jmp
xor
scas
fiadds
sub
jge
in
add
xor
dec
decb
outsb
xchg
sar
inc
add
inc
or
orb
mov
mov
rolb
xchg
adcb
inc
notb
inc
idivb
or
das
cli
rorb
pop
hlt
mov
std
call
pop
adc
jp
mov
nop
call
lret
inc
ds
dec
nop
push
dec
cmp
xorb
mov
rorb
shlb
pop
jmp
xor
jmp
or
dec
cmc
mov
sub
add
or
outsl
packuswb
punpckhdq
enter
in
add
sub
incl
mov
pop
outsl
push
dec
sub
add
data16
dec
cmp
or
mov
psubd
inc
add
repnz
inc
add
cmp
xchg
pop
mov
lahf
add
inc
aaa
cwtl
adcb
sbb
stc
add
sub
pop
dec
out
or
jmp
or
jbe
inc
lea
fmuls
or
test
stc
leave
cmp
rorb
sarl
stc
adc
sbb
test
out
or
mov
inc
xchg
fwait
test
jns
xlat
inc
lea
cmp
ds
fimull
sbb
adc
mov
aas
add
std
test
xor
mov
push
in
mov
dec
int
push
icebp
xlat
ja
pop
inc
push
pop
adc
jmp
subb
fistl
lahf
jp
mov
mov
flds
push
aad
jb
sbb
pop
mov
pop
fistl
or
and
pop
out
ja
es
jo
add
pop
inc
fldl
dec
lret
sarl
xchg
push
mov
popl
insb
lock
bound
and
imul
mov
sbb
push
int
pushl
pushf
mov
std
ret
adc
fwait
sub
add
pop
testb
pop
fidivl
xchg
or
imul
out
aaa
mulb
or
dec
cmp
imul
inc
imul
or
pop
leave
dec
int
rorb
push
insl
push
inc
neg
or
pop
insb
adc
les
mov
pusha
and
mov
mov
push
sub
pop
cld
ljmp
or
xor
aas
and
dec
inc
add
dec
inc
add
or
popa
xor
or
mov
adcl
mov
mov
aas
and
adc
push
js
add
andb
pop
std
aad
addb
or
fdivl
adc
mov
and
xor
hlt
cmp
cmp
add
xor
xor
lds
cld
and
sub
dec
push
xchg
and
popa
mov
les
mov
dec
or
jmp
or
out
iret
stc
shll
ret
mov
in
pop
adc
jbe
pop
je
cmp
int3
cmp
or
jne
mov
pop
and
out
aaa
into
stc
push
cmp
xchg
push
ror
pop
inc
aad
pop
lods
fnsave
inc
movsb
and
clc
lods
xlat
aaa
or
jg
mov
sahf
adc
in
sahf
mov
dec
jp
xor
or
or
repz
jns
out
out
or
jg
xlat
xlat
or
pushl
or
xchg
movl
xchg
mov
jg,pt
in
sbbb
in
add
mov
ljmp
xor
pushl
add
jg
add
inc
neg
dec
inc
jmp
ds
testb
ds
mov
push
mov
aaa
xchg
cld
sahf
roll
out
rolb
in
inc
jb
add
jmp
mov
or
fwait
cmp
aaa
notb
push
jmp
mov
jg
fiadds
in
mov
inc
mov
sub
sub
addr16
add
xchg
bnd
or
mov
sbbl
mov
mov
mov
mov
adc
outsl
adc
mov
pop
cld
pushl
add
xor
pop
or
xor
sbbl
into
adc
pop
movsb
outsl
or
and
push
idiv
add
incl
cmpsb
xor
repnz
pop
orb
pop
or
sbb
ret
cltd
jbe
incl
pop
cmp
cmp
test
mov
add
cmp
jge
xor
add
cmp
or
popl
add
jne
out
iret
stc
push
dec
std
or
dec
sar
sub
andb
add
add
jo
add
push
xor
iret
stc
shrb
mul
sar
fnstcw
sub
out
adc
test
sbb
cmp
push
add
push
add
je
add
push
pop
add
sub
lret
fwait
pop
movsb
add
sub
cli
addr16
inc
mov
jae
adcb
add
or
inc
es
daa
cmp
iret
xchg
mov
mov
clc
add
jmp
xchg
pop
cs
cmp
xchg
push
mov
sub
add
ficoml
or
jg
jb
jg
add
adc
mov
inc
divb
outsl
punpckhdq
outsl
pop
jmp
push
pop
or
repz
fnstsw
xor
pop
jae
xchg
in
lahf
lea
pop
pop
xor
add
pushf
mov
adc
arpl
pop
jbe
fwait
in
ja
mov
jae
pushf
pop
outsl
loope
mov
aad
clc
push
cmp
negb
int
or
popa
adc
mov
pop
pusha
mov
xor
fbld
les
stc
cmp
ds
add
loop
outsl
push
popa
cmp
jae
pop
adc
mov
sarl
shlb
and
mov
add
jg
dec
pop
cld
mov
pop
roll
in
pop
cld
mov
xor
xchg
or
add
jno
or
push
add
mov
and
shlb
or
cli
sar
mov
data16
fistpl
mov
pop
aas
add
aas
add
aas
add
aas
add
push
aas
add
pop
aas
add
push
aas
add
pop
aas
add
aaa
aas
add
inc
aas
add
inc
aas
add
pop
aas
add
aas
add
ss
aas
add
aas
add
cmp
add
inc
add
cmp
add
cmp
add
sub
add
sub
add
pop
aas
add
pop
aas
add
mov
inc
mov
add
jmp
inc
mov
repnz
mov
loop
mov
rolb
rolb
add
mov
repnz
mov
repnz
mov
loope
mov
inc
mov
rolb
stc
aam
mov
testl
jle
inc
mov
inc
mov
int
mov
les
std
cld
inc
mov
cld
inc
mov
in
mov
inc
mov
add
dec
mov
iret
dec
mov
dec
mov
add
cmp
dec
mov
dec
mov
dec
mov
rorb
int
dec
mov
int
cmp
mov
in
int3
mov
xchg
in
mov
inc
stc
add
test
test
scas
pushf
ss
xor
jb
sbb
jmp
shrl
test
xchg
ret
xchg
cmp
leave
push
lcall
pop
js
and
roll
xor
lret
loopne
add
ret
data16
rclb
jbe
mov
inc
divb
dec
mov
clc
lahf
mov
fistpl
cmpsl
lret
outsl
or
psubsb
cmc
jmp
pop
lea
add
aam
push
in
mov
xchg
insl
jbe
paddsw
arpl
dec
subb
inc
pop
je
insl
jg
mov
inc
dec
inc
push
or
dec
movsb
leave
es
stc
xor
les
sbb
leave
and
test
add
xchg
cmp
push
jp
je
mov
xor
push
clc
jg
dec
dec
pop
push
mov
or
cmpsb
decl
mov
pop
add
loope
mov
pop
mov
push
xor
jbe
jg
cmp
push
push
stc
pop
je
mov
mov
test
cmovns
jl
loopne
lock
push
xor
sbb
gs
iret
or
andb
or
adc
mov
mov
jns
xchg
psubusw
mov
js
push
xor
push
jle
in
adc
add
push
xor
push
mov
lods
inc
repz
or
xchg
or
pop
or
and
or
mov
or
jmp
lret
adc
dec
mov
lds
push
sbb
gs
cld
leave
or
sbb
or
shrl
pop
or
push
mov
daa
icebp
imul
out
enter
addr16
test
bound
push
jmp
push
xor
cld
call
lea
rcll
rcrl
outsl
or
or
or
jg
mov
mov
mov
mov
dec
data16
lea
mov
fbstp
add
jmp
or
push
shll
jg
int3
dec
popa
mov
ss
xor
sbb
and
shrl
popa
subl
pushl
and
mov
andl
cwtl
inc
cld
push
pusha
xor
jae
mov
jae
xchg
ret
pop
mov
push
out
add
ds
sbb
xchg
js
mov
xor
jo
or
xchg
and
pop
push
jp
jb
pop
xlat
xchg
movsl
push
push
mov
int3
stc
adc
icebp
adc
mov
lds
sbb
add
or
sub
and
jge
push
dec
pop
or
xchg
jns
push
cld
jl
and
or
es
or
xor
test
cmp
mov
rcll
push
xchg
add
mov
push
leave
push
add
fdivrl
cmpsl
sbb
stos
arpl
adc
jno
sub
dec
popa
or
pop
add
rolb
sub
out
arpl
ret
enter
popa
aas
stos
fwait
push
add
in
xor
pop
popa
mov
addr16
sub
xchg
jl
inc
imul
push
es
push
inc
sti
cmp
xlat
mov
stos
les
adc
xchg
scas
mov
jmp
or
fcmove
rcll
movsl
fcomps
das
mov
push
pop
mov
inc
inc
jmp
add
xor
insb
shlb
cmp
and
pop
cmc
jl
push
cwtl
shlb
push
cwtl
mov
outsl
add
punpckhdq
addr16
rcrl
add
fstpt
das
inc
dec
and
add
loopne
imul
inc
push
push
inc
outsl
and
mov
mov
push
mov
xor
clc
add
jl
aam
loopne
mov
dec
xchg
adc
mov
pop
push
cwtl
pop
cld
je
addr16
gs
call
jl
outsl
or
ljmp
push
pop
mov
mov
test
mov
pop
mov
sbb
cli
incl
adc
adc
dec
jns
es
cmpsl
mov
in
jne
je
sub
jl
sub
push
pop
xor
sti
lahf
incl
dec
inc
ljmp
push
push
adc
and
shlb
sti
inc
push
out
sub
cmp
mov
push
and
mov
inc
and
lret
jns
sbb
inc
add
les
lds
sub
testb
cwtl
pop
mov
xor
and
push
pop
and
and
lds
sub
jno
idivb
popa
les
jns
fmuls
push
lods
dec
call
shlb
and
rorl
mov
lret
sub
adcb
les
mov
or
jno
js
mov
ret
fmuls
sbb
aas
push
das
les
pop
cmc
mov
je
sbb
jmp
fdivs
mulb
or
jge
scas
mov
test
mov
out
or
jmp
mov
xchg
ss
jmp
or
inc
mov
lea
imul
lea
aas
jmp
lea
mulb
mov
jbe
iret
adc
xchg
scas
sti
mov
xchg
mov
fcoml
cmpsb
push
add
and
lea
xor
call
cld
push
pop
pop
sub
jbe
addr16
add
movsl
addl
icebp
sbb
push
int
sub
call
out
div
pushl
out
mov
sbb
call
incl
clc
lds
imul
popl
adc
rclb
jmp
add
xchg
orb
push
jecxz
pop
mov
push
ljmp
pop
adc
or
jg
or
jge
and
jmp
movsb
mov
mov
sub
clc
fstpl
mov
scas
ds
in
inc
stos
cmp
mov
rclb
dec
adc
ss
xor
add
mov
out
aam
push
cmp
mov
pop
jl
les
mov
jmp
repz
aas
repnz
xchg
jnp
decl
mov
mov
adc
jmp
mov
insl
popf
add
mov
test
cli
outsl
or
lods
or
add
das
aam
dec
jg
pop
mov
std
rolb
lea
adc
mov
popf
adc
mov
call
mov
sub
call
dec
das
add
int3
jle
push
mov
xchg
shl
ljmp
clc
out
popf
mov
sbb
int3
into
lahf
pop
sbb
jmp
pop
test
or
fldpi
inc
dec
and
arpl
fidivl
rorl
xchg
xchg
cmpsb
or
adc
decl
sbb
pop
push
movb
and
pop
sub
xchg
adc
or
es
faddl
inc
jmp
inc
outsl
adc
add
push
jb
xor
fsubs
and
outsl
mov
push
add
fistl
add
mov
ljmp
call
icebp
psubq
add
iret
data16
or
decb
idiv
fsub
cmp
dec
cld
jmp
out
mov
test
mov
add
aaa
lea
xor
add
daa
mov
inc
mov
jmp
shl
push
lea
in
test
pop
imul
mov
dec
aas
push
cld
mov
mov
je
mov
hlt
mov
jmp
jae
loope
mov
push
stc
sbb
mov
mov
je
adc
imull
dec
push
imulb
add
jle
loop
mov
push
xchg
sbb
pushf
hlt
add
sub
test
hlt
add
addr16
xorl
test
cmp
sub
in
mov
push
xchg
pop
int3
mov
add
sub
push
mov
ss
mov
in
push
jg
adc
jbe
dec
jnp
add
sahf
add
adc
adc
cwtl
lods
adc
mov
les
jmp
inc
mov
lods
add
dec
scas
mov
or
mov
push
xchg
add
and
rolb
sbb
sbb
jno
mov
int
xchg
jg
add
adc
aaa
xchg
fildl
call
push
nop
dec
xor
jne
addb
scas
add
je
ljmp
or
jae
lea
adc
or
sti
dec
adc
push
sbb
lahf
dec
mov
dec
pop
int
jmp
and
divb
outsl
or
imulb
xchg
add
xchg
mov
orb
dec
xchg
add
adc
out
adc
add
add
xchg
divb
adc
call
insb
dec
pop
ret
push
mov
push
out
out
add
adc
push
lock
addr16
jmp
cmp
sti
mov
mov
sti
call
outsl
lcall
ja
imul
xchg
mov
adc
pop
cld
mov
popl
loop
stc
lcall
mov
out
js
sub
mov
push
ret
jp
mov
mov
or
mov
inc
xorl
mov
repnz
decl
stos
cmp
push
imul
adc
div
incl
jecxz
adc
xor
add
stos
aas
or
std
jl
sbb
mov
iret
xor
or
and
add
fiaddl
ret
inc
sahf
dec
ss
xor
stc
adc
inc
mov
lods
xor
push
loopne
mov
mov
add
dec
aaa
add
mov
in
mov
push
ja
add
test
sbb
push
add
sbb
cmp
lea
xchg
and
jg
lret
in
mov
ja
add
shl
mov
loop
and
mov
xchg
in
pop
or
mov
adc
xchg
add
lcall
int
subb
rorl
sub
mov
int
out
add
adc
lret
add
loop
add
mov
push
std
add
aad
sbb
mov
int
ret
xlat
and
nop
pop
inc
and
icebp
and
adc
mov
mov
idiv
mov
inc
jmp
out
shl
mov
out
mov
cli
xlat
push
lea
stos
adc
pushl
mov
add
xchg
push
loopne
cld
mov
jp
adc
xchg
lea
fsincos
incl
xor
dec
mov
je
shrl
in
mov
push
ret
mov
or
outsl
add
dec
mov
movsb
xchg
or
outsl
clc
xor
cmpsl
dec
pop
sbb
dec
pop
adc
xor
ret
call
dec
jb
sbb
jno
adc
fs
test
dec
lret
dec
push
data16
or
push
add
or
jo
push
shll
stc
inc
xor
add
in
sbb
dec
jle
mov
mov
inc
test
xchg
mov
xor
pop
out
stc
mov
mov
or
out
lods
push
popa
xlat
or
loopne
call
inc
mov
xor
dec
lret
cmpsb
int3
clc
xchg
mov
loopnew
mov
push
iret
popl
subb
outsb
cs
adc
cmp
sbb
lock
and
in
adc
enter
cli
add
idiv
sub
test
cmpb
mov
xchg
sbb
fistpl
xchg
call
dec
addr16
jge
lret
add
mov
test
add
jmp
push
xor
add
and
pop
and
cmp
and
jmp
or
aas
or
in
inc
cwtl
pop
sub
mov
xor
out
mov
push
lds
jns
ljmp
xchg
movsb
xchg
pop
jle
insl
ret
push
cmp
add
push
adc
loope
mov
aas
add
xlat
jle
and
hlt
cld
test
jle
and
push
push
test
add
sbb
pushl
ja
pop
pop
movsb
loope
packsswb
push
call
fs
adc
jne
pop
jl
mulb
jmp
xchg
cld
adc
xor
add
xchg
sbb
subb
sbb
ljmp
andb
xchg
or
movsb
mov
add
fiaddl
push
add
and
xchg
sub
xchg
mov
jae
or
push
adc
xchg
or
inc
or
dec
sbbb
call
pop
jmp
or
and
dec
cmp
pop
adc
sbb
pop
popf
call
add
add
and
mov
pop
pop
add
add
mov
add
add
out
and
clc
ja
popa
mov
push
sub
dec
hlt
sbb
jge
arpl
stos
cmpl
mov
jle
add
mov
dec
arpl
xor
outsl
mov
add
sbb
add
ss
pop
lods
popf
call
inc
mov
in
add
push
mov
shll
arpl
pop
mov
rolb
jne
iret
rcrl
popf
or
div
mov
inc
jmp
aas
mov
dec
xchg
push
jge
mov
mov
xor
mov
add
cltd
mov
ret
xchg
xor
fimuls
rep
add
lahf
and
pop
push
neg
or
jp
ljmp
mov
cmpsl
pop
xor
fcomi
xchg
pop
mov
ss
jl
std
dec
mov
cwtl
fwait
ja
dec
mov
pop
mov
add
pop
add
pusha
pop
or
pusha
pop
or
pop
decb
push
inc
ja
or
in
es
add
mov
je
int3
push
mov
xor
mov
icebp
je
test
adcb
inc
xor
xor
ret
xchg
sar
pop
add
mov
filds
enter
jae
add
sbb
add
push
pop
lcall
jae
jne
mov
dec
and
jns
test
push
inc
repnz
inc
adc
sbb
out
add
icebp
fisttpll
cmp
jl
nop
sbb
jecxz
mov
push
push
or
and
je
cmp
add
and
and
stc
jnp
push
inc
mov
shl
add
pop
cmp
cmc
add
icebp
int
push
testl
ds
or
add
aas
mov
scas
add
inc
stos
pushl
outsl
lock
sbb
scas
sub
sub
dec
sub
jb
mov
out
mov
jno
or
mov
add
push
pop
dec
push
mov
push
sahf
adc
xor
scas
aaa
les
xlat
ja
lret
in
lock
int3
aad
add
sahf
add
or
mov
add
orb
xor
sbb
int
adc
pop
icebp
js
adcb
mov
and
dec
daa
stos
jp
div
jno
idiv
mov
aad
inc
adc
idivb
sub
pop
sar
movsb
jmp
lea
push
loop
push
je
push
jmp
out
addr16
xor
mov
push
xor
xchg
mov
and
roll
lock
lea
xchg
leave
jmp
ss
inc
add
xlat
jne
xchg
leave
jmp
pop
pop
call
or
je
cwtl
negb
dec
ltr
pop
xlat
incl
bound
ja
mov
leave
mov
dec
push
and
jno
mov
pop
or
adc
cld
adc
mov
outsl
or
add
insb
lret
or
add
xor
pop
outsl
stos
cli
iret
sbb
mov
pop
xor
jl
push
rcll
cmovle
jne
or
xor
adc
xchg
cltd
mov
ds
sbb
jne
lcall
or
jle
jno
add
add
decl
cmp
incb
stc
inc
ss
adc
idiv
clc
popf
sub
add
gs
lock
add
fstl
push
sub
push
push
cmpsb
dec
inc
inc
stos
adc
pop
pop
fdiv
ret
mov
sbb
push
movsl
lock
sbb
mov
pop
mov
adc
add
enter
mov
ret
fs
mov
lods
add
icebp
ret
into
inc
sub
popa
mov
xchg
leave
movsl
loopne
inc
add
sbb
cmp
out
xchg
jbe
inc
dec
dec
in
jb
or
test
mov
mov
sti
mulb
push
or
add
sub
lret
add
jle
xchg
xchg
dec
inc
stos
rcl
push
jnp
cmp
or
sbb
and
adc
adc
outsb
ficoml
adc
mov
add
notb
xchg
sub
sahf
mov
loope
inc
jmp
add
sbb
aas
int
rcll
jge
jmp
movsl
lahf
pop
add
jecxz
orl
scas
adc
lea
push
mov
inc
and
xchg
mov
jge
jecxz
lock
outsb
and
jg
lcall
shrb
mov
adc
add
adc
jp
add
xorl
xor
pop
pop
hlt
rclb
ret
es
and
incl
mov
mov
push
lock
out
aad
es
sbb
and
sahf
ret
scas
ss
push
inc
data16
adc
jns
or
rol
add
xor
adc
movsl
fistpl
or
movsl
je
lods
scas
call
pop
or
jnp
cmovo
jg
push
xlat
popa
push
push
fcom
js
adc
mov
sti
dec
mov
xchg
jg
mov
jecxz
jns
adc
mov
lcall
dec
test
xchg
push
pop
add
fbld
lret
in
addb
xchg
sti
push
jo
cmpsl
jge
lock
mov
test
mov
mov
push
pop
mov
jnp
add
jns
and
cmpsl
push
popa
fwait
xor
repz
mov
fnstsw
jle
imul
addr16
bswap
mov
mov
mov
lret
and
fdivl
xor
adc
imul
add
jns
cmc
int
subb
push
mov
lahf
test
enter
mov
pop
push
push
daa
dec
mov
push
sbb
mov
neg
mov
aas
jmp
adc
xchg
pop
mov
int
mov
adc
xchg
xor
xorl
jmp
lea
or
repnz
scas
lret
pop
xor
lret
pop
jo
outsl
jle
push
jge
dec
push
sub
add
xchg
aas
and
xchg
inc
and
out
and
xchg
aas
and
mov
pop
and
jge
adc
mov
rdpmc
outsb
idiv
cmpsl
ret
je
or
add
mov
pop
and
dec
pop
adc
push
jl
dec
push
and
addl
decl
sub
add
rolb
bound
mov
jmp
adcb
sbb
xchg
add
push
lahf
push
xchg
fwait
ss
lahf
ret
test
outsb
mov
or
sbb
add
je
mov
or
and
cmp
in
or
decl
lahf
mov
test
hlt
clc
add
and
sbb
adcb
adc
or
add
xchg
in
add
push
push
mov
jb
pop
les
pushf
add
add
lds
addr16
mov
and
pop
stos
and
pop
push
xor
addb
xchg
test
mov
mov
xlat
xchg
addb
push
jmp
or
call
xchg
sub
push
push
outsb
cltd
scas
daa
data16
movb
lea
pop
adc
jg
add
ss
adc
xor
xchg
xchg
xchg
pusha
mov
push
or
jb
scas
aaa
adc
push
push
int
lock
daa
dec
scas
adc
cmp
mulb
bnd
das
add
mov
mov
adc
add
imul
push
xchg
push
xor
pop
mov
mov
xchg
jle
add
jle
setle
std
lock
jne
sbb
push
adc
jg
mov
pop
fdivrl
inc
push
sbb
call
mov
push
pop
adc
mov
mov
xchg
sub
sub
sub
and
ja
fistpl
dec
add
sub
adc
dec
add
sahf
adc
je
stos
add
mov
xor
sub
pop
add
adc
std
dec
cltd
inc
pop
lds
or
aas
xchg
or
bound
stc
mov
ja
lock
add
mov
xor
das
lcall
xor
test
xchg
sbb
jg
icebp
cmpl
push
push
push
xchg
push
aas
lret
mov
mov
push
ret
ds
add
sub
add
pop
jno
cmpsb
add
and
xchg
mov
push
or
xchg
xor
pop
insl
mov
or
pop
lods
sahf
frstor
lock
mov
inc
sub
rolb
sbb
mov
add
mov
add
jge
lret
aam
fwait
pushf
nop
jg
xchg
sahf
popf
add
inc
mov
test
push
mov
xchg
stos
aad
push
lods
inc
lds
insl
add
dec
mov
mov
xor
mov
push
pop
mov
decb
sub
pushf
pop
pop
sbb
push
xchg
add
mov
pop
sub
xchg
pop
repnz
insl
adc
push
fs
sbb
es
push
test
or
addr16
les
aad
pop
mov
or
add
les
push
fwait
jo
fiadds
add
push
punpckhdq
popf
adc
es
push
adc
mov
out
add
ja
dec
pop
xor
add
jmp
push
push
mov
sarb
jl
addl
mov
out
pushl
cwtl
test
mov
outsl
xor
mov
aas
add
cmp
outsl
sbb
ljmp
into
add
dec
add
dec
aas
pop
dec
dec
mov
mov
add
cmp
sbb
or
add
cmc
cmp
lock
adc
mov
pop
out
jmp
xor
in
jns
xchg
loop
bnd
leave
ss
or
cmp
je
imul
and
jae
jns
gs
sahf
loope
pop
add
cmp
fldl
add
push
std
decl
ret
jmp
mov
add
cmp
add
inc
ret
mov
add
mov
loope
xchg
or
into
orb
sti
in
dec
mov
xlat
push
xchg
cs
repz
push
add
stos
ret
jmp
mov
lds
add
jne
cmp
mov
or
fwait
les
lcall
pop
les
add
mov
cwtl
inc
jmp
mov
adc
push
mov
jle
neg
sbb
push
jae
cmpsl
sub
lea
add
lea
data16
pop
int
mov
enter
push
push
xlat
jle
pop
test
imul
pop
rolb
jmp
pop
adc
lock
jmp
jle
divb
fwait
imul
adc
cmpsl
and
xchg
add
and
add
fs
push
mov
icebp
adc
xchg
mov
mov
sub
loope
or
push
add
add
mov
cwtl
testl
mov
xor
or
sub
add
xchg
dec
jne
or
push
dec
or
pop
cli
loopne
mov
fcomip
jae
fdivs
int3
arpl
int3
mov
xchg
pop
cmp
test
into
aam
lea
je
sub
add
jbe
aaa
cmp
jecxz
sub
mov
xchg
ret
hlt
add
mov
or
test
mov
in
mov
xchg
cli
xchg
jge
icebp
push
in
enter
das
jge
add
xchg
out
jge,pn
hlt
add
xchg
mov
out
fildl
add
sub
push
pop
sbb
out
aam
add
or
popa
fld
arpl
incl
popa
cmpsb
pop
hlt
cld
xchg
pop
pop
sub
jmp
xchg
lea
cmc
repz
inc
jmp
mov
sbb
adc
add
enter
enter
mov
lahf
xor
push
add
adc
out
adc
orb
xchg
fmull
test
adc
mov
scas
xor
repz
mov
add
sub
dec
nop
sub
stc
jns
popa
mov
fs
sub
iret
sub
adc
dec
bound
sbb
pop
shr
mov
fidivrs
cmp
jmp
mov
subb
inc
outsl
lret
add
pop
sbb
sahf
mov
adc
adc
or
mov
pusha
pop
sub
mov
xchg
inc
add
mov
shll
jle
jecxz
ret
je
adc
inc
adc
aaa
adc
adcb
xor
or
pop
mov
js
add
dec
cmp
jns
inc
mov
inc
push
or
mov
mov
mov
jmp
xchg
sarb
sbb
mov
add
js
ljmp
cli
cmp
pop
shll
lret
int3
push
push
add
imul
jae
loope
pop
add
leave
mov
dec
out
mov
inc
and
call
add
mov
cmp
mov
mov
dec
cmpsb
sub
mov
iret
and
mov
imul
inc
mov
stos
push
add
cmp
jp
imul
pop
iret
daa
push
iret
pusha
cmp
add
push
test
dec
adc
mov
push
es
dec
jno
push
push
mov
add
mov
add
add
jmp
add
paddsb
jbe
in
push
into
adc
mov
cmp
jno
jae
sbb
cmp
in
jl
sbb
add
xchg
sub
sti
iret
jecxz
xor
mov
loop
add
scas
adc
jo
inc
or
sarl
arpl
lea
push
lcall
notl
xchg
adc
bound
scas
outsb
jge
dec
addr16
cmpsl
mov
add
out
cld
mov
and
imul
mov
push
addr16
add
dec
aas
add
sub
outsb
js
cmc
push
push
insb
orl
push
stc
cmp
xor
ljmp
xor
cmc
xor
mov
fimuls
mov
dec
nop
xor
movsb
pop
cmc
cmp
sub
xor
popa
mov
xchg
fiadds
movsb
jns
subl
add
imul
out
pop
je
mov
pop
cmp
insb
push
jmp
loope
cld
add
addb
mov
mov
cmpl
lahf
jb
js
sbbb
dec
pop
mov
jge
mov
pop
inc
or
rcll
cltd
je
insl
sbb
add
stos
add
lret
test
and
sub
adc
sub
in
jo
or
sub
test
sub
lcall
add
loop
dec
pop
in
ds
outsl
ret
arpl
je
jecxz
add
dec
or
mov
cli
xchg
sub
dec
mov
add
lret
or
ror
test
push
push
mov
add
mov
clc
jmp
iret
mov
leave
ret
pop
inc
sub
sub
mov
dec
ret
jl
in
sub
out
mov
add
scas
rcll
mov
mov
or
pusha
inc
xchg
sbb
mov
sub
fcmovnb
add
jnp
jb
enter
add
cmc
cmc
jmp
mov
mull
jg
jno
jl
jb
in
pop
or
mov
adc
jmp
xchg
inc
push
testl
jmp
mov
rcrl
cwtl
jg
cmpsl
jns
int3
jno
adc
mov
jmp
jmp
cmp
cmp
mov
ds
adc
cmp
cld
mov
sahf
inc
mov
jno
sub
aas
sub
data16
cmp
hlt
ja
mov
addb
shl
int3
mov
rorb
push
add
in
daa
mov
xorl
xor
push
add
add
add
mov
and
enter
add
je
iret
xorb
add
or
jns
pop
adc
pop
add
lret
dec
jp
insb
in
fcmove
fdivl
call
popa
lret
adc
movsl
xor
aaa
jns
stc
adc
and
pop
xorl
add
rol
jp
mov
ret
jp
outsl
mov
mov
cmp
stos
sbb
mov
das
dec
cmp
jp
bound
jl
sarb
bound
aam
mov
push
hlt
test
hlt
mov
add
enter
scas
mov
inc
ss
pop
jns,pn
fldl
jmp
or
pusha
inc
ret
add
cmc
push
jl
hlt
dec
js
jg
push
and
jmp
nop
or
cmp
hlt
jmp
into
subl
repz
testb
js
push
jno
push
jbe
ret
bound
test
sbb
xchg
cmp
or
push
dec
sub
dec
dec
dec
add
popl
jns
les
pop
pop
or
jne
pushl
icebp
inc
dec
bound
pop
jo
dec
subb
or
pusha
lret
adcl
cmc
jmp
pop
pop
jmp
orb
cmpsl
insl
jo
leave
nop
test
js
addr16
inc
jae
pop
sub
add
jb
movsb
add
xor
jecxz
adcb
inc
mov
add
repnz
add
outsb
adc
cmpsl
cmc
mov
jo
xchg
rorb
xchg
cwtl
imul
add
mov
adc
idiv
aaa
lods
xor
inc
cli
or
addr16
xor
mov
faddl
and
jg
add
imulb
mov
lea
mov
adc
out
mov
subl
and
or
mov
xchg
push
in
add
mov
sub
cmp
push
and
dec
adc
cli
cli
mov
in
int3
insl
jle
inc
popf
and
sub
mov
inc
sbb
add
adc
add
push
and
mov
dec
scas
or
add
mull
decl
mov
jl
push
and
add
dec
mov
scas
xorb
sarl
inc
inc
in
jge
pop
popa
inc
add
adc
mov
xchg
lock
xor
cmp
jno
cs
in
add
add
lock
mov
in
clc
dec
add
add
cltd
in
add
mov
aam
movsb
xor
pop
sub
add
icebp
inc
mov
stc
add
cltd
or
out
imul
inc
lods
pop
enter
dec
cmp
int3
in
mov
fwait
mov
mov
rcll
add
and
addr16
shrb
fsts
dec
push
roll
addb
std
repnz
sahf
mov
xor
cwtl
pop
mov
mov
add
lea
mov
cltd
add
jle
mov
sbb
inc
add
fnstcw
and
popa
pop
out
adcb
jb
xorl
mov
mov
addb
xor
dec
out
or
movsw
push
lea
pop
ret
xor
mov
je
jb
pop
and
pop
cld
mov
cmc
xor
xchg
add
and
in
add
push
insb
in
enter
outsl
push
pop
pop
xchg
hlt
mov
cli
cmc
push
mov
movsl
pop
mov
mov
scas
int3
inc
mov
scas
int3
rorb
jns
pop
push
jns
xchg
add
setnp
shl
adc
hlt
jg
dec
js
testl
in
subl
add
cmp
andl
add
mov
test
mov
and
int3
add
sub
jl
mov
rorl
int3
inc
mov
jp
jno
mov
push
lods
hlt
mov
cs
gs
jp
jae
dec
add
inc
shr
jmp
adc
test
arpl
sub
dec
mov
orl
sbb
ds
fadds
rorl
std
mov
jmp
push
je
xor
jecxz
push
mov
push
and
repz
je
data16
mov
setnp
test
mov
pop
sub
lcall
xlat
mov
push
out
add
mov
dec
arpl
jp
add
lea
mov
addl
outsl
xchg
imul
jnp
inc
lds
jmp
or
mov
pop
sub
jmp
fwait
xchg
lods
test
ljmp
pop
cld
ret
jmp
add
or
lea
jbe
mov
add
out
idiv
daa
cmc
cs
mov
jle
addl
dec
jl
mov
push
fldl
loopne
jne
mov
or
mov
sub
add
test
mov
jns
or
push
je
dec
stc
mov
sti
cmp
mov
dec
addb
dec
pop
mov
xor
loope
dec
lahf
imulb
add
fildl
loope
add
xchg
push
test
xor
xchg
rolb
imul
xor
mov
ja
inc
lcall
jne
or
cmp
inc
repz
push
adc
add
out
cmp
mov
or
inc
jl
jne
cs
hlt
repnz
add
xchg
call
stos
imul
jecxz
addl
in
adc
dec
push
xor
mov
vmwrite
mov
jne
scas
cmp
push
hlt
adcb
mov
mov
in
add
cmp
testb
sbb
mov
pushf
mov
adc
fdivrl
jo
mov
jmp
mov
lahf
pushf
mov
sub
mov
add
pusha
mov
aaa
outsb
or
cmp
jmp
lret
mov
outsb
add
fcompl
pop
mov
push
cmp
and
movsl
inc
out
dec
push
push
add
scas
add
loop
movl
add
imul
out
push
adc
jmp
test
dec
add
adc
mov
jmp
into
dec
mov
loope
adc
adc
mov
mov
negb
push
pop
adcl
mov
adc
lods
push
js
xor
and
mov
add
adc
jb
jl
pop
test
mov
sub
adc
mov
push
rcr
cld
mov
mov
idivb
and
adc
movsb
gs
mov
jg
jle
jno
loop
cmpl
rcrb
dec
xchg
icebp
dec
in
mov
inc
mov
inc
push
filds
add
or
shrb
sbb
jno
jle
dec
jne
pop
pop
inc
push
push
mov
int3
fiaddl
inc
int3
lret
int3
ret
in
pop
sbb
add
mov
jae
cmc
add
mov
adc
insb
inc
loopne
jge
adc
addl
repnz
in
or
mov
popf
or
mov
and
add
in
or
sub
add
int3
aam
decl
and
ds
xchg
lret
stos
jl
lret
xchg
mov
jbe
call
xchg
push
or
fwait
rclb
add
mov
lods
cmp
pop
add
int
lret
xchg
lods
inc
lea
mov
gs
add
pop
sub
cmp
sub
sbb
dec
lahf
lret
xchg
lods
xor
xchg
push
aas
push
in
ret
pushl
iret
mov
call
sub
mov
es
lea
orl
mov
xchg
pop
dec
arpl
das
or
add
popa
mov
mov
add
sub
lcall
mov
nopl
or
in
push
inc
addr16
hlt
fwait
stc
pushl
jg
jl
add
pop
iret
cmc
gs
orb
mov
adc
dec
push
sub
outsb
adc
les
mov
add
xchg
pop
sahf
int
add
jmp
lret
jle
and
inc
cmp
or
mov
sub
sub
dec
add
hlt
test
push
jmp
adc
mov
mov
lock
or
xchg
mov
add
add
jmp
mov
and
jns
mov
sbb
test
bound
adc
faddl
test
lods
mov
adc
lea
pop
add
push
hlt
add
or
mov
imul
imul
mov
cld
jns
sahf
sub
inc
into
push
sbb
add
mov
mov
cmp
int3
rolb
mov
cmp
push
enter
lock
in
add
dec
add
adc
insb
and
je
adc
xchg
sub
xchg
lret
jmp
movsb
pushf
mov
add
push
xor
mov
scas
movsl
faddp
inc
add
je
jmp
fucomip
pop
mov
mov
push
jnp
scas
mov
loop
testl
pop
pop
push
jecxz
leave
iret
lods
ror
sbb
out
dec
push
pop
add
lock
xchg
or
jmp
lea
inc
mov
std
mov
scas
add
or
loopne
adc
xor
dec
ljmp
rorl
add
adc
or
mov
add
mov
cmp
mov
mov
testb
dec
je
or
mov
add
add
inc
insb
pushf
cmp
xchg
pop
mov
add
or
js
adc
add
pop
add
push
xchg
outsl
test
mov
xor
jle
dec
jae
out
push
jno
jle
inc
outsb
sub
adc
sbb
or
add
jno
add
int
dec
push
outsl
dec
js
pop
mov
lea
mov
cmp
and
add
jns
mov
les
mov
stc
pop
imul
psubsw
xchg
rorb
mov
cwtl
hlt
add
mov
outsl
inc
js
imul
mov
add
repz
int
fnsave
jne
out
adc
arpl
fnsave
inc
fs
add
xchg
mov
fldl
mov
xchg
mov
ss
call
in
jne
xchg
popa
out
xchg
repz
fnsave
cmp
cwtl
dec
inc
shrb
dec
push
shlb
mov
cmp
int
pop
hlt
jle
lea
mov
pop
mov
mov
jb
nop
adcb
jle
add
nop
add
popa
orl
lea
jmp
leave
faddl
xchg
xchg
add
push
dec
dec
pop
fdivp
jmp
mov
cmc
push
mov
pop
sahf
lret
pop
inc
jmp
cli
loop
jb
inc
shl
push
dec
add
add
mov
jp
add
lea
orb
add
add
mov
add
mov
stc
add
mov
fldl
pop
add
adc
adc
fbstp
pop
mov
into
std
lds
mov
or
std
pop
mov
adc
mov
dec
or
decb
std
xchg
negb
pop
inc
adc
int
lds
imul
add
pop
push
or
adcl
ss
sbb
xchg
in
pop
jp
leave
adc
mov
ljmp
je
or
add
add
jmp
add
es
jns
mov
mov
add
push
jmp
clc
mov
sub
jge
mov
add
mov
pop
jp
leave
adc
add
in
hlt
jmp
dec
inc
mov
decl
in
push
mov
mov
into
push
adc
aaa
mov
ljmp
mov
cmp
in
jecxz
pop
push
xor
pop
mov
cmp
in
out
inc
push
mov
adc
add
push
in
lcall
pop
or
add
call
lcall
inc
clc
add
cmp
jle
jg
rcll
sarb
ja
mov
popf
add
cld
or
popa
ficoml
add
sbb
dec
hlt
jnp
addl
aas
jge
addr16
mov
jmp
stos
nop
jo
in
cmc
jmp
faddl
add
fnstenv
or
add
add
adc
call
cmc
adc
testl
dec
in
cmp
add
cltd
push
cmp
jmp
insb
adc
and
add
jns
inc
int
push
adc
jl
aaa
jp
pop
stc
mov
mov
cmpl
adc
ret
lods
lret
and
inc
pop
daa
mov
push
inc
inc
and
mov
add
roll
daa
mov
jmp
insb
lret
pop
aam
loope
or
add
mov
cmp
add
imul
adc
add
cmpsb
mov
loope
sti
push
ljmp
shlb
add
and
inc
mov
cmc
xor
jecxz
lods
xchg
js
or
and
or
adc
mov
loope
test
pusha
add
jp
dec
cmpsl
or
in
call
or
mov
mov
adc
and
jbe
call
fs
jmp
pop
jbe
in
xchg
cmpb
cmc
or
add
adc
aam
or
inc
incl
mov
lods
inc
subb
pop
and
ss
lock
imul
aad
or
mov
sub
pop
out
sbb
cmp
xchg
mov
aad
xor
add
add
xor
or
outsb
aaa
add
sbb
ret
rorb
jno
jne
and
cmp
jno
xchg
add
or
dec
in
add
aad
add
dec
fadds
stos
jno
jne
jne
popf
xchg
sahf
and
repz
xchg
or
jp
jg
inc
sbb
roll
sahf
sti
xchg
lret
dec
movsl
push
cwtl
in
pop
jmp
idivl
pop
bound
cmp
xchg
scas
push
jne
jmp
xchg
dec
add
lea
in
hlt
addl
call
jle
push
insl
cltd
mov
jmp
sarb
daa
mov
jb
jno
loopne
mov
mov
insl
hlt
inc
xor
dec
cmp
cltd
fsubr
fwait
nop
lea
ret
adc
rorb
ror
subb
push
dec
and
or
push
shll
shrl
or
adc
add
idiv
mov
or
aaa
fcompl
mov
xor
cltd
jl
dec
das
jae
push
xor
adcb
inc
call
outsb
iret
and
mov
cmpsl
les
ret
testl
andb
test
fwait
or
pusha
mov
add
adc
movsb
push
add
sub
jb
pop
mov
push
add
mov
jp
mov
stos
idiv
dec
xchg
shl
ja
incl
mov
imul
pop
faddp
or
les
pop
leave
sbb
loopne
ds
fwait
pop
test
fdivrl
xchg
pop
rcll
repz
in
movsb
push
in
test
jl
mov
in
add
sbb
test
pop
in
adc
pop
in
test
inc
jecxz
int3
test
or
icebp
mov
movsl
ljmp
mov
add
push
call
ret
sbb
ja
inc
pusha
xchg
push
clc
fisttps
mov
int3
ja
roll
push
clc
mov
push
es
adc
jle
adcl
mov
add
ja
rcrl
mov
add
outsl
cld
add
ja
add
lahf
mov
mov
hlt
rcl
jmp
inc
ja
jmp
pop
aam
push
addl
shll
push
enter
movl
add
lea
je
or
mov
adcb
sbb
or
test
cli
test
in
ss
xor
mov
rcl
xchg
fsts
mov
in
jns
scas
dec
jns
test
shl
outsb
les
loopne
dec
addl
sub
cld
jae
mov
add
cmpb
mov
sbb
inc
sbb
and
decl
enter
pop
jl
cmpsl
loope
orl
cmc
je
push
ret
psllq
add
addr16
add
repz
add
mov
mov
cmc
je
xor
imul
bound
and
and
setg
decl
pop
mov
mov
add
push
ds
add
daa
mov
cmpsl
pop
mov
pop
out
clc
lea
add
push
out
inc
loope
rorb
jle
add
add
push
movsl
sti
orb
out
xor
pop
notl
and
add
cmpsb
cmp
cmp
mov
ljmp
cmpb
repnz
mov
ret
inc
adc
dec
adc
jmp
dec
pop
or
push
mov
imul
cmc
stos
lret
bound
adc
jo
mov
and
aaa
jnp
lock
mov
dec
mov
fadds
add
leave
dec
sub
or
fdivr
xchg
push
data16
jo
jns
lods
out
add
pusha
in
repz
shr
testb
add
inc
fdivrl
andl
mov
adc
inc
sarb
addl
mov
lods
mov
fs
or
addl
test
aad
inc
or
addl
test
cmc
and
or
addl
test
aad
inc
or
addl
subb
out
or
addl
jle
lods
push
inc
or
popa
sahf
addl
out
idiv
inc
xor
jecxz
mov
add
add
cs
lcall
aaa
loope
adcb
push
jns
dec
aas
jle
lcall
mov
ret
sub
ret
js
xlat
mov
int3
mov
incl
sub
ret
mov
inc
outsl
xchg
jno
addr16
lods
pusha
addr16
pop
fsubrl
int3
lcall
xor
mov
mov
add
or
sub
or
mov
and
je
loop
push
adc
int
test
js
xchg
mov
arpl
test
pop
adc
outsb
loop
jnp
xchg
in
leave
es
add
clts
xor
inc
jle
aad
ret
xchg
dec
in
rcl
add
mov
adc
faddl
or
sub
in
xchg
mov
add
xchg
mov
mov
xchg
in
add
adc
add
add
mov
add
repz
pusha
shrl
mov
in
rcrb
adc
adc
jae
add
popa
adc
mov
mov
adc
xchg
xchg
arpl
fstps
sub
push
adc
stos
bound
or
add
inc
pop
mov
sahf
stos
cmpsb
inc
cmpsb
add
lea
dec
and
push
sub
stos
imul
sbb
jb
jne
scas
movsl
adc
loopne
inc
mov
int
cmp
hlt
test
idivb
adc
jo
dec
subb
add
lea
mov
jmp
add
push
xchg
decl
pop
mov
mov
push
xchg
add
add
aas
lea
add
push
inc
or
push
jns
mul
inc
orl
ret
je
sbb
rorl
xchg
dec
add
inc
lahf
push
mov
adcb
jge
das
cs
jle
add
popl
add
and
push
repnz
xor
inc
mov
inc
arpl
pushl
ret
inc
pop
jno
addr16
in
loope
pop
in
push
stc
inc
rol
test
cmpsl
cmp
cli
sub
bound
pop
mov
outsb
mov
notb
and
repz
and
cmc
inc
int3
ret
in
adc
push
aam
aas
jb
dec
je
sub
sbb
add
xchg
mov
mov
mov
add
pop
mov
add
in
jo
cmp
or
inc
and
stos
insl
ret
mov
adc
lock
push
popf
test
in
add
jmp
dec
or
sti
sub
movsb
pop
daa
fadds
push
add
roll
dec
lret
push
ret
mov
adc
or
fldenv
dec
bound
sub
lcall
das
adc
push
sub
inc
leave
filds
out
sbb
xchg
push
mov
jp
xchg
or
adc
fdivr
adc
jge
push
dec
bound
sbb
mov
ret
jmp
ret
rorb
inc
add
xchg
cmpb
inc
add
xchg
jne
rcrl
xchg
push
pop
or
add
das
fs
aas
pop
mov
imul
add
mov
dec
das
jmp
add
shrb
inc
cmc
aam
pop
sub
ret
add
or
addr16
int3
mov
adc
mov
mov
mov
add
mov
jp
fsubrl
mov
jecxz
mov
jle
mov
pop
and
xchg
pop
mov
lods
add
adc
adc
mov
pop
add
push
mov
or
push
scas
cld
add
cld
pop
adc
add
or
in
push
push
push
xor
cmpsl
addr16
decl
push
out
test
fimull
clc
aas
xor
dec
in
cmc
lcall
add
cmp
jmp
icebp
stc
xlat
push
stc
cmp
mov
pop
cmc
rorl
sar
jb
push
mov
das
and
ds
push
mov
add
mov
inc
int3
fisubl
mov
xor
xor
mov
divb
bound
push
and
or
dec
rolb
cmp
jno
aad
mov
xchg
push
xchg
daa
and
leave
int3
jnp
ret
cs
inc
fmull
add
push
push
adc
mov
mov
ret
pusha
ret
mov
mov
mov
popa
popa
xor
adc
push
or
add
inc
dec
iret
push
mov
or
push
cmp
add
and
or
adc
push
ret
pop
bound
mov
and
push
add
ret
sbb
subb
or
cltd
lret
push
bound
push
das
cmpb
mov
jmp
test
jno
mov
mov
cmpsb
xor
push
iret
sbb
scas
mov
inc
out
sbb
add
jnp
push
les
add
xchg
jg
add
jb
hlt
in
add
lea
lea
jl
add
jo
add
ja
dec
or
mov
dec
adc
mov
jle
pop
push
pushf
fidivrl
mov
jle
fists
loopne
add
add
mov
sbbl
or
or
out
cmc
mov
pop
pop
add
mov
add
push
add
in
jge
inc
decl
adc
xchg
cwtl
pop
dec
test
test
or
lcall
push
rol
mov
sbb
flds
data16
mov
ljmp
dec
std
mov
jecxz
lret
into
xchg
mov
incl
in
ret
pop
mov
mov
add
mov
ret
pop
leave
jo
fnstenv
fadds
iret
dec
sbb
mov
jmp
or
in
add
stos
jecxz
ror
inc
or
lahf
in
add
cmp
or
ret
xchg
adc
aas
into
mov
rorl
sahf
mov
mov
stos
imul
imul
int3
sbb
dec
enter
jmp
push
mov
add
push
fsubrs
push
in
add
push
add
add
sti
test
xchg
out
cmp
xchg
add
jmp
lcall
fbstp
cmc
jb
xchg
insb
test
sti
push
adc
lea
fnstcw
subb
insl
sbbl
inc
ret
jl
inc
push
xchg
mov
ror
ret
fwait
jno
add
fs
push
fs
lea
jmp
lea
inc
or
lret
fxch
cmc
call
cmp
adc
mov
or
and
testb
mov
add
mov
pop
push
inc
loopne
sbb
adc
in
std
or
dec
ja
adcb
inc
sbb
sub
test
idiv
aaa
mov
add
test
jp
daa
mov
inc
mov
setns
leave
roll
jbe
call
push
clc
hlt
cmpb
rcl
flds
into
mov
inc
inc
jle
add
mov
mov
adc
jae
adc
dec
mull
aaa
mov
push
lock
mov
xchg
sub
pop
fiadds
push
shll
mov
loope
sub
popa
mov
in
xor
fst
cmpb
incb
mov
stc
ret
into
mov
cmp
dec
mov
cmp
loop
fsts
lret
pmaxsw
shrb
testl
jno
sbb
insl
mov
mov
testb
xor
xchg
setge
dec
pop
inc
clc
inc
mov
mov
mov
mov
jl
in
jno
jmp
iret
fwait
in
jmp
outsl
loop
fidivrl
addr16
mov
in
add
int
xor
dec
imul
jecxz
push
fwait
jno
mov
cmp
mov
xor
mov
cmc
jmp
outsb
cli
jmp
sbb
add
inc
pop
sbb
lea
loope,pt
loopne
aaa
cmp
push
ret
mov
int3
inc
stc
lea
add
lea
add
lea
bound
mov
cli
insb
in
cli
mov
push
ret
ficoms
sub
add
mov
je
cmp
adc
roll
shrb
repz
dec
inc
insb
add
mov
ja
add
add
cmp
pop
cmp
movsb
ret
notl
dec
mov
addb
push
clc
and
pop
mul
mov
outsl
sbb
repz
mov
inc
orb
inc
push
popl
push
clc
faddp
or
inc
cmp
jl
das
inc
mov
add
dec
push
lcall
mov
add
mov
int3
lar
mov
mov
add
loop
inc
mov
jp
mov
call
and
mov
cmp
and
sub
pop
mov
sub
pop
add
mov
mov
inc
sahf
mov
pop
stc
add
inc
sarb
pusha
enter
mov
xor
add
dec
or
jl
mov
mov
jp
mov
xchg
mov
jns
lods
xlat
mov
sub
leave
mov
add
dec
lods
add
nop
in
add
xchg
add
mov
test
add
lods
mov
cltd
lcall
enter
addr16
adc
les
insb
jnp
push
jb
jbe
and
fimull
repnz
mov
outsl
icebp
je
out
loop
mov
push
inc
dec
adc
mov
std
loopne
dec
jne
pop
sti
cli
scas
scas
mov
mov
icebp
add
out
add
mov
sbb
pop
sti
out
mov
jmp
push
xchg
subb
mov
jmp
pop
mov
add
add
je
or
adc
xchg
mov
mov
stc
add
or
mov
and
js
loopne
or
or
in
add
or
adc
andb
sti
push
inc
sub
add
addb
ret
je
xor
inc
incb
mov
int3
and
push
shl
imul
orb
push
clc
mov
mov
rcll
testb
mov
and
mov
dec
add
mov
push
test
dec
adc
or
cli
add
or
cmp
clc
mov
inc
call
jae
inc
add
mov
inc
xchg
js
pop
xchg
sub
mov
mov
add
or
jns
xchg
add
mov
add
dec
in
add
int3
in
inc
mov
xorb
lock
test
xchg
mov
adcb
sahf
and
cltd
pop
mov
movsb
add
mov
add
push
loope
mov
xchg
imul
add
mov
lds
in
add
mov
cmp
int3
xorb
xchg
add
lret
or
push
mov
or
mov
xchg
and
jmp
mov
in
shlb
shll
pop
out
int3
mov
jmp
dec
test
push
mov
out
mov
test
mov
out
fnsave
add
dec
dec
or
test
mov
jmp
inc
mov
xchg
cwtl
mov
add
out
int3
or
and
js
stos
xchg
lods
mov
ljmp
cmc
cli
dec
or
daa
xor
push
aas
mov
subl
fidivrs
and
cmp
rcrl
adc
dec
inc
sub
add
js
add
mov
cmpsl
dec
add
testl
add
out
add
inc
or
rdpmc
cmpsb
add
cmpsl
xor
insb
dec
jno
mov
jne
sahf
mov
xchg
cmp
add
addb
mov
mov
adc
repnz
and
mov
add
int3
ret
out
incl
lret
push
es
or
popa
mov
add
pop
jecxz
mov
jne
test
dec
dec
loop
cmp
out
fs
cmp
cli
nop
mov
test
and
push
ljmp
lret
mov
int3
inc
stos
xchg
or
test
xchg
pop
mov
cli
add
xor
iret
daa
arpl
inc
mov
test
fldl
dec
dec
push
add
mov
inc
lcall
pop
inc
and
pop
movsb
call
dec
sti
cmp
test
jmp
or
adcb
cmp
mov
dec
leave
repz
mov
ljmp
mov
add
aas
and
lea
lret
mov
inc
dec
jae
dec
daa
mov
or
jno
adc
jbe
cmpl
out
jmp
es
cmp
or
xor
inc
mov
inc
orl
add
mov
mov
jb
inc
je
mov
mov
add
aas
push
cmpsb
mov
adc
out
gs
lea
add
xor
sub
test
mov
out
pop
push
xor
in
push
cmp
rorb
adcl
mov
movsb
daa
orb
push
ret
lods
mov
mov
jmp
and
ret
mov
xor
mov
inc
mov
inc
mov
push
push
mov
or
sub
fisttps
add
mov
popa
test
js
jnp
mov
iret
loop
or
pop
or
and
mov
rorl
rclb
cmp
mov
jns
testb
leave
adc
incb
dec
mov
aas
call
or
push
jnp
mov
mov
dec
xchg
mov
ds
cli
sub
repz
mov
xchg
mov
cmc
pop
push
dec
cmpl
cmc
mov
pop
inc
xchg
pop
fwait
std
mov
inc
mov
add
int3
call
jae
insl
add
pop
sub
or
aaa
or
sub
into
stos
add
js
adc
jg
test
add
scas
pusha
xor
in
imul
and
xchg
data16
orl
data16
lods
test
cmc
xchg
add
add
mov
imul
lcall
lahf
mov
dec
push
rorl
push
xlat
stos
push
into
or
movsl
push
inc
out
ds
loop
cmp
cmp
and
sub
inc
std
iret
mov
inc
les
stc
mov
scas
add
lea
mov
add
adc
mov
and
loope
in
cmp
ljmp
mov
jbe
xor
popa
add
out
sub
mov
dec
cld
sbbl
add
push
adc
dec
adc
xchg
xchg
add
ljmp
dec
mov
mov
adc
mov
add
add
daa
rorb
int3
cwtl
dec
mov
xlat
or
adc
adc
cwtl
mov
das
cltd
lock
dec
pop
sbb
or
mov
push
dec
iret
mov
mov
lret
xlat
adc
adcl
add
cmp
xchg
movsl
add
mov
add
mov
add
mov
mov
stos
mov
in
mov
adc
or
push
les
xchg
adc
cmp
xchg
jno
rcll
sbb
adc
test
or
rcll
dec
in
pop
addr16
dec
mov
mov
jno
test
adc
dec
mov
pop
addr16
test
dec
or
or
frstor
pop
jo
mov
dec
bswap
rolb
mov
jbe
mov
ljmp
adc
sbb
lea
mov
mov
mov
xchg
mov
pop
lds
int
imulb
movsb
add
or
call
add
mull
loop
fidivrs
inc
push
xchg
add
loop
mov
push
and
add
jmp
sahf
fxch
jo
fwait
cmp
ss
sub
ret
jmp
jle
mov
and
scas
or
mov
jle
mov
enter
mov
inc
mov
roll
dec
in
scas
stos
mov
iret
adc
es
add
adc
mov
xchg
mov
sbb
inc
hlt
es
punpckhwd
rcr
jno
sbb
mov
xor
stc
add
push
push
add
movsl
adc
rcl
adc
sarb
mov
sbb
jo
mov
jmp
enter
loope
mov
xchg
fstpt
dec
andl
std
dec
sub
dec
adc
enter
mov
rorb
imul
dec
loopne
in
jecxz
mov
mov
ds
mov
sub
push
in
and
mov
dec
xor
test
push
mov
add
xchg
mov
ds
imul
add
lret
pop
mov
popa
enter
sbb
lods
add
xchg
loopne
mov
mov
push
movsl
add
adc
xchg
pop
sbb
add
mov
xchg
fucomp
cmp
cmpsl
pusha
dec
shrl
jae
add
push
cli
pop
or
jl
movsb
jmp
ret
stos
adc
push
cmp
jns
sub
mov
add
jle
jmp
lea
add
lea
ret
push
ds
push
mov
in
loope
fxch
jo
cwtl
cmp
inc
mov
add
lea
push
mull
loop
lret
push
xchg
add
inc
movsb
cmc
jmp
lret
sbb
push
and
push
in
loope
fxch
jo
xchg
cmp
inc
loop
pop
xchg
push
mov
lea
fimuls
rorl
loope
jle
rorl
loope
repnz
mov
roll
stos
mov
jg
dec
hlt
add
adc
adc
mov
jle
jg
mov
inc
adc
es
inc
clc
rorb
add
mov
mov
leave
rcll
adc
or
stc
inc
movsb
inc
or
repnz
test
mov
jmp
aam
orl
sbb
test
or
out
pop
std
dec
sub
test
xchg
addb
mov
rorb
addr16
pop
test
cwtl
dec
in
mov
add
add
mov
mov
dec
repnz
shll
ret
pop
shll
int3
pop
je
out
mov
add
repnz
push
add
mov
mov
dec
sbb
cmc
lahf
jmp
or
jmp
add
inc
mov
repz
mov
movsb
mov
adc
in
add
push
leave
inc
sbb
push
sub
in
inc
popl
inc
xor
nop
push
mov
add
jmp
lret
add
jb
mov
mov
into
test
add
mov
xor
int
inc
adc
cmp
mov
addr16
ljmp
dec
adc
push
les
sub
jl
sub
mov
pusha
mov
dec
out
bound
cmp
add
out
add
dec
flds
push
xlat
adc
inc
rcll
inc
sarb
dec
mov
or
sarb
inc
add
adc
inc
and
icebp
mov
jb
and
xor
add
les
jnp
add
into
scas
hlt
pushl
jp
ja
jg
mov
mov
jae
dec
notl
or
add
jb
pop
cmp
idiv
aaa
or
xchg
jg
daa
mov
xor
data16
and
fs
add
push
inc
add
mov
cmc
push
dec
cld
insb
inc
enter
rorl
mov
stc
and
adc
inc
sahf
sbb
pop
jae
call
xchg
daa
aas
je
sbb
out
aad
push
movsl
insb
cmpb
mov
dec
loop
sub
xchg
dec
stos
mov
notl
in
xchg
les
inc
push
sbb
fists
mov
add
mov
ds
xor
add
mov
mov
adc
mov
xor
adc
dec
add
cmp
in
sub
mov
add
mov
adcb
in
push
or
fstl
mov
xorb
ljmp
add
sahf
xchg
aaa
adc
cmp
orb
or
aaa
adc
push
or
jecxz
mov
nop
mov
xchg
and
ret
or
in
mov
aam
xchg
xorl
out
mov
inc
cmp
bound
shl
push
inc
icebp
push
push
jmp
lret
and
add
fldenv
push
in
sbb
pop
add
sahf
cmc
jmp
popa
fimuls
jmp
stos
mov
jmp
mov
cmc
jmp
or
movsb
test
dec
add
lods
mov
push
cmp
jo
dec
mov
lea
and
push
dec
leave
testb
stc
push
pushl
jge
or
sbb
fwait
jno
cmp
aad
jp
jmp
or
test
jmp
mov
add
cmpsl
mov
mov
cwtl
add
pop
mov
add
mov
inc
add
rcl
sub
inc
pop
mov
add
sbb
repnz
xor
filds
mov
xchg
addb
push
mull
cmp
mov
int
mov
xchg
lret
mov
out
cmp
pop
push
xchg
je
or
icebp
lret
pop
mov
jae
jmp
add
adc
lods
ss
add
data16
fidivrs
push
movsb
add
lea
push
mov
sbb
sub
test
aad
mov
jnp
test
push
add
mov
mov
lds
sbb
aas
or
mov
adc
xchg
xor
cltd
rorb
mov
inc
xchg
pop
rorl
orb
mov
push
shlb
mov
push
mov
cmpsb
lret
cmpsb
ret
cmpsb
mov
mov
cmpsl
stos
mov
cmpsl
mov
mov
test
mov
test
jp
call
sahf
push
xchg
sahf
bound
leave
mov
cs
add
das
pop
add
das
pop
add
pop
add
pop
add
sub
cmc
icebp
push
add
push
add
dec
mov
fsts
mov
jle
ret
std
xchg
inc
lds
shrb
sti
dec
das
fs
mov
sahf
enter
cmovne
sarb
push
fwait
jle
subl
jmp
lret
popl
add
pop
cld
call
mov
int3
mov
pop
int3
and
int3
stos
push
out
insb
lret
jns
pop
add
cli
push
test
cli
shlb
adc
mov
fscale
mov
leave
mov
jns
addb
inc
jmp
adc
sar
pop
ret
add
sbb
push
and
push
mov
adc
push
cli
add
aaa
mov
movsl
jo
cld
mov
data16
mov
je
sbb
sbb
shrb
jbe
cli
sbb
pop
push
jecxz
or
pop
jp
cmp
jns
xchg
rorb
jecxz
loope
int3
ret
int3
ficoml
in
add
push
int
add
sbb
push
push
xor
mov
stc
add
test
xlat
or
or
and
stc
dec
sub
sti
or
mov
and
and
or
mov
or
adc
sub
into
pop
or
in
int3
cs
fisttps
jp
xchg
jo
xchg
ss
and
jl
jnp
aaa
test
into
into
mov
add
aaa
test
jnp
or
lret
jp
pop
lahf
das
adc
jmp
mov
xor
push
add
lods
jno
andl
out
mov
xchg
cmc
push
leave
dec
notl
jmp
sti
test
orl
adc
outsl
out
cmp
cmp
cmc
mov
ret
mov
cld
add
cmp
aam
stc
cmpsb
mov
mov
cmp
sbb
dec
notl
call
sti
sub
int3
outsl
inc
testl
add
adc
mov
arpl
leave
add
fstpl
mov
andl
enter
cltd
mov
or
xor
leave
push
xchg
mov
mov
std
mov
mov
cltd
mulb
or
or
lcall
or
mov
or
and
addb
pushf
repz
dec
aad
jl
in
pop
ficomps
std
test
jp
mov
jnp
xchg
icebp
mov
mov
add
fs
test
fadds
dec
jno
int3
inc
pop
ss
fisubl
int3
shr
jp
or
dec
sti
push
inc
sbb
xchg
std
inc
pop
into
push
leave
pop
xor
leave
movsb
add
add
mov
ljmp
in
add
out
mov
jae
ds
inc
mov
cld
adc
iret
and
subl
xchg
jmp
mov
arpl
cmp
lcall
and
sub
add
clc
adc
or
cmp
rcl
filds
add
or
add
sbb
out
roll
push
xchg
sti
pusha
enter
sub
cmp
test
add
jmp
xchg
xchg
push
mov
sbb
in
push
dec
out
push
mov
out
push
mov
repnz
movsb
mov
nop
adc
add
fs
adc
add
xchg
cmc
lahf
mov
in
mov
jmp
mov
movsb
stc
pop
dec
loope
xchg
dec
xchg
fldl
cmp
dec
ja
test
cmpsb
push
inc
cmc
loop
push
jb
mov
in
xchg
shrb
jnp
stos
icebp
cmp
ret
setle
dec
add
iret
jne
jg
jo
out
std
add
testl
outsl
xchg
je
adc
jg
outsb
or
xor
or
scas
shl
or
push
call
outsl
movsb
inc
lock
sbb
or
fdiv
cmp
js
and
cld
ljmp
push
cmp
bound
add
mov
ret
cmp
pop
ret
lcall
mov
push
push
sbb
or
add
pop
aam
push
pusha
xor
andl
movsl
out
adc
adc
cmpsb
add
fsubrp
mov
sub
ds
fisttpll
mov
xchg
push
jns
and
jl
stc
jle
xchg
add
nop
jnp
imulb
xor
mov
fwait
fmuls
movsb
add
sbb
sti
or
mov
jge
push
xor
cltd
mov
add
dec
cwtl
mov
push
mov
add
mov
push
add
sub
cmp
aad
jo
pop
or
add
mov
sbbb
ss
lods
incl
dec
cmp
fwait
adc
or
or
fwait
pusha
test
add
lcall
jne
shlb
jl
cld
pusha
xchg
loopne
mov
pop
clc
adc
loope
mov
cmp
pop
int3
cmc
push
ja
test
mov
inc
cmc
pop
aas
push
jb
test
in
xchg
shrb
jnp
sub
cmp
iret
cmp
dec
inc
add
sbb
imul
addb
sbb
outsl
out
int3
jne
movsb
sbbb
test
sub
jmp
xchg
push
inc
loope
dec
repz
data16
sbb
add
icebp
cmp
or
ljmp
or
cmpsl
adc
lret
mov
orb
roll
shrb
mov
clc
data16
cmc
push
pop
mov
cmc
pushl
xorb
loop
push
mov
leave
call
movsb
dec
incl
data16
lea
fs
mov
popa
cld
pushl
test
xchg
addb
cmp
jns
stc
rcll
fistpl
test
ror
cmc
test
pop
inc
or
rcrl
xchg
es
fsubrp
aaa
test
mov
jns
test
mov
inc
or
outsb
pop
stc
popa
negb
call
pop
test
aam
dec
bound
sbb
je
jge
popa
jbe
xchg
notl
sti
sbb
jl
adc
xchg
pop
jge
jo
rolb
jns
jnp
mov
iret
xchg
in
adc
cmpsb
ret
addr16
lcall
push
sbb
push
loope
cltd
test
jno
or
popa
inc
inc
jae
mov
xchg
imul
adc
outsl
inc
nop
imul
adcl
push
or
dec
inc
fiadds
mov
adc
adc
xacquire
stos
arpl
xchg
push
sub
xor
inc
out
xchg
inc
jmp
add
pushf
mov
push
xchg
push
push
jo
lea
popf
push
push
enter
enter
enter
cmpl
mov
popl
and
insl
push
stos
add
pop
ljmp
inc
mov
or
xor
jne
inc
jmp
push
dec
jo
or
inc
xor
push
in
test
push
jle
sbb
fimuls
sub
push
sub
cmc
jae
jmp
jle
ja
dec
mov
test
jmp
incl
stos
jle
cmpsl
sbb
push
push
lret
inc
cmpsl
cli
push
sar
test
and
cmpb
inc
fstpt
addb
lret
cmpsl
cli
jmp
sar
test
stos
jle
cmpsl
sbb
push
pop
lret
mov
incl
stos
jle
aaa
sbb
mov
neg
pop
stc
stc
hlt
dec
add
mov
cld
or
and
or
push
call
add
adc
clc
mov
add
testl
add
es
test
cwtl
testl
icebp
inc
stc
adc
clc
mov
cli
lret
stc
push
xchg
or
push
inc
and
jns
sarb
lods
sti
adc
dec
push
add
push
je
xor
mulb
testl
outsl
add
push
out
mov
into
and
jno
out
into
pop
or
add
push
mov
mov
mov
scas
pop
xchg
or
add
push
mov
int3
mov
outsb
pop
or
dec
out
add
push
pop
mov
mov
popa
dec
ss
pop
add
or
or
push
add
adc
dec
push
jb
jae
push
test
or
xchg
mov
leave
push
pop
lret
adc
xor
jae
idivb
subl
adc
mull
insl
mov
inc
lds
add
insb
fs
jle
lea
jle
and
mov
sar
mov
sbb
add
add
xchg
mov
jne
xorl
dec
jo
add
mov
sti
mov
push
add
js
inc
pop
sbb
subb
imul
cld
jb
jo
je
or
inc
dec
adc
int3
int
add
jge
mov
pop
dec
stc
mov
pop
add
cmp
xorl
or
inc
cld
int3
mov
call
push
pop
sbbl
push
sbb
dec
and
push
in
cmp
lds
insb
into
jo
mov
add
inc
int
inc
out
inc
and
and
jb
sti
adc
testl
xor
ljmp
bound
inc
rorb
stos
pop
ret
jle
lods
out
xchg
decl
inc
jle
sbb
inc
lcall
jge
and
insl
jne
add
add
test
or
pop
repnz
mov
ret
cmp
lret
fldl
aaa
push
daa
subl
or
xchg
add
push
push
adcb
xchg
outsl
jge
imul
adc
mov
adc
mov
stos
nop
lret
adc
pop
stc
cmp
addl
sub
push
popf
sub
jp
sbb
inc
out
dec
imul
mov
mov
mov
div
adc
mov
sbb
push
in
icebp
add
cmc
push
xchg
push
orb
daa
adc
ds
adc
and
into
xchg
cld
sbb
sti
jb
mov
call
aas
push
les
or
jge
or
iret
jge
xor
push
inc
icebp
rorl
fstp
int3
mov
movb
jmp
mov
jb
add
inc
mov
mov
dec
leave
iret
xchg
ja
jns
cld
mov
or
adc
mov
cwtl
mov
aaa
inc
mov
pop
inc
push
iret
or
rclb
outsl
add
sub
fists
jns
insb
push
adc
inc
repz
inc
push
loopne
jbe
mov
les
js
add
inc
add
push
loope
in
iret
jne
push
jns
mov
or
cmpsl
mov
lea
inc
or
add
sbb
pop
mov
pop
lods
mov
push
scas
dec
int3
dec
aas
mov
add
xchg
xchg
and
dec
jp
mov
inc
mov
inc
scas
add
mov
hlt
jmp
pop
aas
and
in
test
adc
pop
adc
cmc
incl
xchg
test
movsl
pushl
jb
jmp
jb
incl
test
mov
ljmp
mov
mov
inc
je
lds
mov
jg
add
push
add
mov
sub
push
sbb
push
sbb
inc
or
push
inc
stc
adc
mov
rcr
xchg
mov
inc
rorb
inc
lret
mov
aad
mov
adc
call
adc
xchg
mov
pop
mov
sub
mov
adc
sbb
cli
jmp
notl
inc
into
mov
ds
call
add
cli
add
enter
mov
loope
stos
mov
add
mov
test
lea
add
idivl
jmp
mov
pop
ret
in
push
loop
push
into
add
cmp
add
add
into
xchg
mov
jmp
mov
push
xor
pop
xchg
popl
add
xor
mov
jle
inc
adc
cmp
int3
sub
int3
mov
call
dec
inc
or
or
adc
scas
pusha
jle
xor
sub
xchg
jg
add
lods
ds
adc
adc
lock
and
jbe
add
je
or
cmp
loope
mov
inc
xor
push
stc
push
insb
jmp
les
add
jl
iret
mov
or
rcrb
push
push
jno
jae
std
js
xchg
xor
mov
stc
cmp
stc
or
xchg
add
add
mov
call
or
push
add
inc
aad
inc
pop
fbld
lahf
rorb
add
xor
sub
adc
mov
mov
inc
loop
incb
test
mov
xchg
cmp
mov
mov
decl
aaa
add
dec
cmpsb
mov
mov
cmp
addr16
mov
decl
out
rorb
sub
mov
push
mov
add
dec
jecxz
mov
fs
jnp
mov
mov
jge
adc
dec
fistpll
jmp
adc
add
or
jg
jp
jecxz
jnp
jl
cmpsl
ret
mov
adc
jmp
add
add
decl
xlat
dec
subl
and
mov
push
negl
add
inc
in
in
mov
jle
push
lea
jb
jbe
cmpb
insb
popf
pop
mov
xchg
mov
aam
mov
add
and
testb
aam
xchg
fptan
push
popf
adc
adc
fs
jmp
jmp
add
jne
dec
fwait
test
lea
je
stos
fmull
scas
mov
lea
push
mov
or
insb
out
inc
adc
add
int3
outsl
add
int
mov
bound
add
mov
lea
xor
js
aaa
clc
sbb
scas
stc
dec
or
stc
ret
mov
int3
sub
out
ret
addb
add
mov
ret
clc
mov
jecxz
movsb
hlt
cmp
push
loopne
bound
xor
adc
adc
push
std
sbb
int3
outsb
add
js
add
xor
sbb
dec
outsb
add
xchg
xor
xchg
cmc
push
mov
mov
mov
xchg
bound
add
addb
bound
aaa
add
add
dec
mov
jne
test
mov
sarl
mov
shrl
pop
fwait
ret
jns
mov
add
popa
mov
pop
lahf
imul
and
loop
xchg
bound
mov
sbb
cld
or
out
xchg
mov
add
mov
add
mov
stos
cwtl
mov
out
inc
sti
icebp
jl
repz
add
mov
add
shrl
add
push
outsl
add
push
fwait
js
mov
lea
add
or
fs
test
mov
mov
pop
xor
fcoml
sub
add
lds
add
mov
fs
jne
jmp
xchg
icebp
inc
jo
mov
sub
push
repnz
mov
jmp
ret
jmp
lea
sti
in
or
jmp
loope
orb
testl
xchg
inc
fimull
add
js
or
add
sbb
cli
mov
pop
mov
lods
push
jp
sbb
push
shll
jle
xlat
jle
insb
cld
inc
add
pop
lea
add
ja
push
lock
dec
gs
or
add
pop
hlt
mov
fwait
jbe
es
outsl
jmp
repnz
or
jmp
test
jo
xchg
lds
sarl
cmc
popa
test
jmp
icebp
test
jns
xchg
and
sarb
outsl
pop
xchg
sub
sub
scas
dec
jg
mov
jmp
addb
bound
pop
test
daa
lock
jns
arpl
fstpt
jnp
loope
adc
inc
std
push
test
out
push
rorb
out
rcrb
inc
mov
inc
scas
roll
xor
cmp
das
inc
fiaddl
inc
rolb
js
xlat
lods
js
cmpl
pushw
stos
imul
jno
scas
mov
add
int
lods
rcrb
inc
xchg
mov
push
mov
add
xchg
or
mov
mov
mov
sbb
div
add
fldl
add
mov
push
addl
lea
xchg
mov
jae
cmpsl
xor
je
lods
xchg
mov
push
adcl
insb
add
lea
mov
out
shl
lea
enter
enter
enter
cmpl
fmull
cmp
jmp
sahf
jne
cmpsb
subl
aaa
xlat
push
lock
mov
cli
decl
mov
cld
cmpl
test
into
or
repz
xchg
push
dec
inc
out
mov
lahf
or
or
mov
inc
mov
xchg
out
add
sarb
adc
test
push
clc
dec
flds
mov
add
repz
cmc
jmp
jne
cmp
jle
mov
push
loop
out
incb
xchg
jge
pop
or
or
outsl
jl
bnd
jb
or
add
add
add
rcrb
ljmp
test
andb
add
ret
out
pop
in
andl
or
loope
sub
fstps
inc
je
in
stc
adc
jns
dec
mov
push
sbb
cltd
in
add
and
or
movsb
out
fmul
insb
hlt
push
mov
cmpsl
add
inc
jle
int
sbb
cmpsl
insl
or
push
adc
pop
sbb
pop
push
or
imul
test
outsl
jb
stos
jo
or
outsl
pushf
jbe
ja
or
bound
inc
mov
sub
or
mov
scas
mov
jo
or
or
dec
add
int
add
outsb
add
xchg
push
bound
jae
je
je
sahf
or
dec
adc
in
rclb
cmc
jle
or
xchg
mov
mov
cmc
push
jne
call
in
orb
adc
fs
hlt
cs
fisttpl
push
pusha
add
pop
xchg
add
xchg
or
and
je
rcrb
add
mov
pushl
add
inc
call
in
cltd
jle
hlt
lret
or
sbb
inc
in
mov
clc
icebp
nop
and
xchg
push
mov
fwait
stc
mov
adc
mov
and
les
mov
incl
dec
xchg
lea
scas
fdivrp
test
rolb
outsl
add
mov
imul
mov
push
lock
test
call
xor
incl
sub
mov
push
mov
or
clc
jns
jnp
jo
out
dec
clc
or
xchg
add
push
jp
jb
std
clc
adc
loopne
cli
xor
sbb
xor
pop
test
mov
ljmp
adc
lods
jnp
cli
mov
clc
pop
fmul
clc
loope
ja
sahf
std
clc
out
sbb
leave
loope
add
mov
std
test
rol
gs
clc
mov
mov
aam
insb
into
xchg
mov
adc
xchg
xchg
fisttps
sbb
adc
incl
insb
jo
push
fisubl
pop
insl
mov
inc
or
add
outsl
pop
mov
jb
push
add
pop
insb
outsl
push
ds
imull
cmp
imul
lret
inc
bound
lahf
pop
adc
mov
outsl
subb
incb
test
xchg
jb
fwait
sbb
lock
jb
pushf
std
jb
movsl
mov
mov
ljmp
hlt
scas
mov
mov
xchg
fs
jb
fcomi
xchg
xchg
adc
ljmp
cmc
ret
add
call
sub
ds
cmp
mov
dec
xchg
adc
xchg
fs
cwtl
mov
or
xchg
andl
add
sub
aaa
mov
jae
nop
cli
sub
mov
push
cmp
lret
cli
jmp
xchg
inc
push
mov
mov
jmp
pushl
sbb
mov
mov
dec
lock
mov
adc
or
dec
jno
into
lret
add
daa
sti
mov
mov
ret
add
out
pop
mov
leave
int3
ret
cmp
int3
mov
sbb
andl
es
jno
mov
mov
mov
mov
mov
push
pusha
xchg
add
cltd
jae
mov
and
jns
inc
add
outsl
bound
pop
fs
xchg
xorl
cmp
pop
cmc
add
jle
xchg
mov
or
dec
pop
aaa
vcvtsd2ss
jnp
adc
jnp
add
xchg
pop
imul
stc
jb
je
add
mov
mov
xchg
mov
jp
mov
add
jle
add
imul
inc
dec
out
rclb
iret
lds
rol
push
cmpsl
rolb
push
push
cmp
fistps
push
adc
outsb
or
jge
xor
fcoml
popa
dec
scas
xchg
sbb
mov
push
mov
jle
cmp
push
add
test
pop
push
cwtl
sbb
cwtl
testl
add
fsubs
push
xchg
jle
push
xchg
push
popa
and
das
push
fildll
cmp
icebp
add
push
mov
and
inc
inc
mov
add
jmp
dec
cwtl
shl
sub
mov
mov
push
push
xor
dec
xchg
mov
add
pop
jo
jmp
add
mov
mov
ficompl
mov
mov
pop
scas
add
mov
push
lds
or
out
cmp
push
cmc
pushl
jnp
iret
xor
add
sub
jge
cmpsl
mov
mov
xorl
dec
mov
and
fimuls
xor
fiadds
and
jle
ret
popl
add
mov
jl
fwait
sbb
je
adc
jl
out
mov
add
mov
jae
roll
mov
jmp
je
in
xor
inc
dec
pop
fnstcw
inc
push
inc
testb
fstpt
adc
jae
testb
imul
mov
add
jb
xchg
aad
mov
pop
addb
mov
mov
jb
test
iret
add
mov
push
cld
pop
ret
and
into
ljmp
push
dec
jmp
mov
sub
mov
jp
adc
mov
imul
mov
arpl
fs
sub
outsl
mov
popf
mov
mov
popa
cmp
jl
in
inc
mov
mov
inc
scas
mov
enter
add
enter
push
repz
inc
xor
mov
xchg
int
fs
sbbb
into
loop
jp
loop
mov
jbe
mov
bound
push
dec
or
push
dec
push
mov
xchg
mov
sbb
mov
dec
enter
jo
movsb
orl
add
movsl
std
testb
rol
lea
sub
push
jo
xchg
push
loope
scas
lea
fisubrl
lea
loope
lret
call
push
bound
jmp
mov
add
lea
hlt
pushl
pop
ret
cltd
dec
add
dec
idiv
testl
mov
movsl
xchg
outsl
or
lea
add
dec
les
in
add
add
adcl
jae
leave
int3
aam
cmp
lahf
jbe
nop
ficompl
push
stc
hlt
or
jl
hlt
push
mov
xchg
hlt
dec
or
inc
jl
adc
ret
orl
push
leave
int3
repz
leave
int3
mov
cmp
adc
icebp
mov
fmuls
out
sar
add
addr16
bound
inc
loop
mov
clc
cmp
xchg
and
dec
push
pop
jns
test
xor
test
pusha
pop
pop
add
jg
lret
pop
pop
mov
mov
jmp
cwtl
test
roll
arpl
and
fimuls
and
leave
adc
adc
mov
fadds
push
stos
jo
pusha
fcoms
lret
ljmp
dec
je
xchg
adc
notl
inc
pop
sub
aad
daa
mov
mov
fld
or
push
addb
xlat
fisttpl
jae
cwtl
push
mov
adc
fwait
cli
pushf
mov
inc
mov
stos
outsl
sahf
pusha
clc
push
or
test
aaa
push
mov
je
xchg
adc
sub
ret
loope
enter
enter
enter
cmpl
mov
cmc
push
arpl
jbe
int3
mov
ret
push
push
stc
iret
dec
mov
pop
pop
cmc
aam
xchg
inc
jmp
lret
leave
adc
hlt
xor
jo
cmpsb
cmp
xor
push
fisttps
mov
fbstp
push
enter
enter
leave
int3
sub
int3
jb
jmp
xor
pop
jno
lods
jl
dec
add
or
add
cmp
sbb
mov
add
outsl
mov
pop
mov
leave
bound
jno
adc
pop
popf
movmskps
mov
inc
add
cld
jne
arpl
pop
mov
add
cwtl
les
in
pop
pop
fs
leave
int3
repnz
push
and
jp
hlt
inc
cld
test
push
mov
imul
jnp
adc
popa
out
in
out
adc
sub
or
es
pop
dec
lahf
mov
adc
add
mov
mov
lret
lret
lret
rclb
lret
lret
ret
jmp
daa
or
mov
add
call
or
adc
add
dec
jo
mov
mov
jle
mov
lods
aas
adc
jle
inc
add
xor
inc
sbb
add
into
mov
add
mov
push
push
xchg
push
push
scas
movl
pusha
sbbl
mov
pop
push
fldln2
scas
adc
and
xor
punpckhwd
cmpsl
mov
add
or
decl
push
mov
loopne
mov
fiaddl
mov
mov
in
das
adc
addb
mov
mov
mov
mov
int
mov
add
xor
fidivs
imul
add
ret
push
enter
enter
enter
enter
push
bound
int3
psubsw
xchg
mov
mov
or
inc
xchg
test
xchg
mov
in
mov
mov
jb
add
push
add
xor
imulb
adcb
orl
lea
mov
push
xchg
jmp
xchg
mov
add
mov
pop
mulps
ja
jle
jae
mov
clc
mov
sbb
jo
in
leave
testl
cmp
jmp
jl
mov
pushl
add
push
sbb
mov
lret
orb
mov
xor
push
push
add
xor
xchg
mov
addl
sbb
loop
je
cltd
mov
addl
icebp
mov
in
pop
lret
sarb
lret
lret
lret
ret
lret
pop
testl
dec
test
xchg
xlat
test
pop
faddl
jg
test
insb
pop
test
xor
movl
adc
dec
push
adc
test
push
movsb
hlt
decl
jmp
inc
xchg
add
icebp
fidivl
xchg
add
ja
test
push
cld
cmc
inc
in
ja
mov
or
jb
xchg
mov
ss
lock
lea
cmp
popa
lods
jl
xor
add
lock
sbb
mov
ljmp
mov
jl
pop
jno
inc
pop
jmp
dec
lea
inc
push
cld
popa
inc
sbb
pop
add
or
mov
xchg
fsubr
outsl
add
mov
data16
repnz
cmp
add
cmp
cmp
push
xor
jecxz
popa
sbb
pop
mov
vunpckhps
push
jmp
push
push
jo
mov
push
js
push
iret
out
cmp
jns
jp
jmp
fsts
and
mov
and
fldl
lods
mov
aaa
loop
lea
pop
push
iret
aaa
repnz
aaa
loop
mov
jo
and
lea
dec
adc
arpl
mov
cmc
mov
add
cmc
ljmp
arpl
mov
push
jl
cld
mov
push
mov
sarb
repnz
jno
in
xchg
repz
add
pop
or
mov
lods
int3
idiv
lcall
loopne
xchg
jmp
dec
mov
je
nop
cs
add
cmp
adc
nop/reserved
mov
or
add
pop
in
test
ja
scas
out
jb
jmp
incb
clc
aam
clc
sbb
inc
mov
lret
pop
test
lret
push
divl
or
xchg
js
adc
bound
into
push
scas
out
push
dec
in
rcll
inc
mov
jno
adc
or
fcos
decl
cld
in
sbb
mov
cltd
fmull
rclb
jno
xchg
add
testl
add
inc
add
dec
mov
cmpl
xchg
movsl
les
jge
dec
xchg
fdivp
xchg
pop
jo
mov
gs
daa
cli
jno
rcrb
jmp
icebp
outsb
mov
int
sbb
inc
out
push
push
icebp
add
push
pusha
lret
arpl
push
jmp
mov
adcl
mov
cld
lock
addl
nop
mov
jmp
push
push
add
pop
outsl
imul
shlb
inc
enter
cmpl
cmpsb
sarl
mov
cmc
push
js
push
cmc
add
cld
sub
lea
mov
scas
rcll
jmp
dec
or
in
mov
mov
or
cmc
jmp
test
push
outsl
add
imul
rclb
cmp
jp
lods
pop
or
cmp
sti
rdmsr
sub
pushl
xchg
add
push
cmc
lcall
mov
adc
mov
mov
jmp
jle
add
cmp
mov
adc
addr16
mov
js
add
cli
inc
pop
push
mov
mov
xchg
jnp
mov
rcrb
add
xor
add
popa
xor
push
scas
out
popa
pop
cmc
test
mov
ljmp
jnp
add
pop
pop
push
fisttpll
add
mov
es
jo
xchg
push
add
and
mov
subb
add
xor
add
mov
jnp
shrb
add
xor
add
sbb
xchg
cmp
add
lods
push
orb
into
loopne
mov
fsubrs
mov
xorl
call
ljmp
popa
adc
add
enter
ja
insb
lcall
adc
push
jnp
jg
ljmp
sbb
sbb
or
cli
jl
adc
add
add
fidivs
popa
cmpsl
stc
iret
lock
add
jne
mov
inc
sub
mov
sub
sub
mov
mov
ret
dec
test
mov
sti
push
cmc
ss
mov
jmp
cmc
pop
mov
adc
add
xchg
loope
rorb
enter
addr16
lock
sbb
jmp
adc
mov
in
lcall
in
mov
jl
add
orb
jmp
les
mov
outsb
mov
dec
push
or
aam
mov
push
arpl
pop
pop
adc
imull
pcmpgtd
or
mov
adc
cld
mov
jge
add
cwtl
sti
mov
adc
mov
jl
loope
add
test
cmp
xchg
into
cmp
push
nop
fbld
sti
lods
push
add
jle
arpl
je
popa
mov
mov
jle
xchg
mov
fsub
jp
mov
xchg
in
add
adc
fs
and
fbstp
test
fdivrl
jns
rorb
add
test
cwtl
fs
pop
bound
add
fisubs
mov
adc
mov
lods
jle
les
mov
int
mov
cmpsl
fldt
adc
push
cld
mov
movsb
idiv
jns
inc
in
call
insb
jp
push
inc
std
or
in
add
or
add
mov
jp
ja
cmp
add
jg
ljmp
jne
add
rorb
cmp
inc
add
in
adc
lock
xchg
push
mov
arpl
stos
mov
add
add
mov
cmc
add
add
push
mov
add
into
shr
push
pop
movb
int
loop,pt
test
or
jp
jmp
arpl
add
clc
xchg
leave
fucomip
lds
adc
mov
jb
orl
fwait
mov
bound
add
mov
adc
rolb
psllw
adc
jmp
in
add
lret
jmp
cmp
push
dec
in
clc
mov
jge
jge
add
add
dec
clc
in
sarb
iret
mov
or
aaa
rcll
leave
cmp
mov
jle
pop
lods
cld
lahf
jge
add
adc
test
filds
scas
jnp
js
sarb
insl
imull
adc
rolb
loop
notb
sbb
out
cmp
sti
lea
push
in
add
adc
cmpsl
rclb
or
lods
mov
jne
push
test
jns
pushl
aam
adc
xor
pop
push
in
push
add
lods
pushf
adc
push
add
sub
push
pop
mov
jl
xchg
xchg
mov
xor
test
jnp
arpl
add
cmp
test
add
cmpb
adc
lods
add
add
xor
jp
xor
fbld
xor
push
jp
pop
cmc
add
mov
jl
dec
mov
xchg
sbb
out
or
in
add
pop
fs
sub
mov
test
add
mov
add
and
in
mov
add
iret
xchg
pop
mov
fiadds
mov
ljmp
je
jmp
adc
faddp
dec
cmpsb
inc
arpl
dec
inc
repz
daa
rcl
push
add
adc
push
bound
mov
fwait
add
rorb
xchg
mov
jmp
cmpsl
lods
mov
hlt
push
loop
mov
stos
or
and
fisttpl
arpl
add
jmp
xchg
in
arpl
push
jbe
add
or
inc
mov
pushf
push
mov
dec
cmc
call
mov
mov
decl
add
jmp
add
add
mov
mov
mov
cwtl
jle
jmp
cmc
incl
das
adc
or
andb
mov
loop
fimull
mov
push
adc
addr16
push
or
mov
adc
lds
jle
pop
dec
or
jle
imul
test
mov
jne
data16
js
bound
mov
outsb
adc
ficoms
sar
aam
mov
mov
jge
mov
adc
mov
call
insb
adc
push
mov
lock
inc
push
or
add
in
cli
decl
cld
push
jle
test
sbb
pushl
mov
pop
test
add
mov
imul
mov
push
out
mov
xchg
adc
jge
lock
mov
or
push
lea
adc
test
add
popf
ljmp
xchg
push
js
insb
stos
add
xchg
ljmp
sub
jp
repz
popf
ljmp
mov
mov
xchg
jb
add
std
dec
popf
jg
ljmp
adc
hlt
or
pop
hlt
stos
push
add
add
lahf
subb
pushf
add
adc
decl
stc
jl
jae
add
adc
jle
xchg
pop
lock
or
ljmp
add
test
adc
add
out
idivb
adc
ret
jge
mov
jb
sub
mov
int3
xchg
mov
jmp
xor
push
filds
enter
enter
cmpl
xchg
es
jns
sub
inc
ds
pushl
mov
pop
xor
mov
in
adc
mov
mov
fstl
movsl
cwtl
add
pushf
and
fucomi
mov
and
add
push
cld
ljmp
add
jns
and
xlat
insb
push
jnp
xor
xor
hlt
sub
cmc
pushl
push
lea
movl
adc
sub
add
adc
cmp
mov
stc
dec
inc
mov
and
and
add
sbb
xor
add
jle
mov
fisttpll
cmp
cwtl
xor
std
dec
lods
xchg
fildl
mov
pop
add
mov
or
mov
add
jne
sbb
xchg
mov
std
sbb
std
incl
mov
mov
mov
push
cmc
jmp
add
add
mov
in
xchg
sbb
mov
mov
cltd
ljmp
jne
gs
xor
mov
push
add
cltd
ljmp
dec
ficoms
mov
mov
add
mov
mov
mov
lods
add
cld
sbb
cmc
jo
cmp
lock
dec
loope
mov
idiv
sbb
fimuls
sbb
in
psadbw
sbb
mov
adc
push
push
jmp
mov
vmread
sub
push
jecxz
or
adc
mov
shr
push
nop
xor
dec
loop
mov
mov
sbb
or
pushf
cmp
mov
or
je
jo
mov
insb
adc
push
testl
jle
lods
jle
sar
jecxz
call
adc
mov
mov
cmc
lcall
js
arpl
cmc
cld
aam
mov
xor
dec
adc
jmp
xor
rorl
dec
lock
adc
mov
xor
rorb
mov
push
add
in
mov
push
mov
icebp
xor
add
jb
in
mov
or
push
daa
inc
mov
pop
scas
mov
add
mov
enter
and
xchg
fstpl
scas
lock
xchg
push
or
mov
mov
xor
test
pop
mov
lahf
mov
inc
mov
cmc
jb
jg
ljmp
mov
pop
xchg
jg
ljmp
push
add
aam
fsub
rcll
sbb
icebp
loope
jb
fisubl
ljmp
movsl
jno
ljmp
fwait
jg
ljmp
mov
mov
ljmp
or
or
push
sbb
jbe
testb
adc
icebp
add
xor
jmp
xchg
adc
popa
inc
pop
jb
lods
ror
adc
sti
mov
ja
testb
adc
xchg
add
jb
or
cmc
adc
or
xchg
mov
fwait
add
loopne
addr16
pop
jo
testb
mov
push
mov
ljmp
adc
insb
stos
or
fwait
add
mov
add
adc
cmp
pop
ret
mov
inc
leave
int3
jecxz
leave
int3
std
aad
incl
lea
adc
add
divb
fidivs
out
inc
inc
fs
add
or
xor
push
and
jmp
mov
add
mov
add
jb
adcl
cmc
pushl
push
mov
mov
nop
pop
or
add
xchg
cmpsb
cmp
add
add
adc
dec
decl
outsb
mov
push
adc
cmp
rclb
dec
lock
dec
cs
inc
out
lret
lret
fisubrl
xor
dec
or
sub
add
adc
cmp
adc
jl
mov
xor
test
mov
mov
in
xlat
inc
mov
pop
mov
cmp
or
mov
xchg
mov
adc
out
popa
cmp
xchg
mov
sbb
add
int3
add
mov
inc
mov
hlt
in
add
dec
xchg
movl
cmpsl
aad
bound
dec
push
movsb
or
lea
hlt
hlt
add
repnz
jne
mov
fsub
add
adc
or
int
or
loop
dec
lahf
jo
fldenv
add
pop
jp
cli
inc
lods
mov
adc
adc
sub
enter
enter
enter
push
xchg
push
popa
mov
push
or
fidivrs
mov
mov
adc
sbb
fdivrl
bound
lahf
mov
mov
cmc
pop
lret
adc
jno
pushf
hlt
sub
push
jl
cmp
or
cmp
sub
lret
xchg
mov
movsb
xor
push
flds
shrl
fwait
ja
add
in
ja
mov
xor
jg
fistpll
push
mov
xor
sbb
and
sub
int3
and
mov
mov
lea
cmp
lcall
mov
leave
push
jns
out
ret
cmp
push
pop
cmp
add
movaps
out
movsb
jl
pop
cmp
push
push
sub
lock
popa
mov
and
fiaddl
add
fstpt
lret
push
pop
jbe
or
pop
fildll
stos
decl
pop
aas
bound
and
add
lret
inc
inc
jge
sub
pop
pop
jge
add
mov
stc
or
data16
add
data16
div
clc
loope
js
and
in
push
out
xor
rclb
testl
andl
add
test
aaa
cli
ret
adc
inc
jnp
aaa
es
lahf
ljmp
push
scas
mull
rolb
add
jge
test
ss
mov
jl
fdiv
add
sub
adc
leave
or
aaa
jmp
leave
and
adc
lods
arpl
jp
pop
mov
fnstenv
jmp
add
add
add
mov
lahf
add
sub
cmc
lea
or
std
add
add
or
jmp
add
pop
jo
mov
aas
push
outsb
jge
inc
ss
push
psubsw
shl
orl
jle
push
ss
jo
cmc
mov
mov
in
mov
xor
xor
xor
xchg
sti
pusha
inc
xor
add
mov
add
sub
inc
adc
mov
cmp
pushl
mov
dec
cs
pop
add
dec
jle
inc
xor
dec
sbb
pushl
mov
subl
cmc
mov
mov
jnp
jmp
nop
xchg
push
sub
verr
mov
cmc
lcall
adc
add
data16
cmp
mov
dec
adc
mov
mov
adc
and
or
adc
mov
inc
mov
notb
and
or
jae
xchg
lods
add
push
data16
push
movsb
pusha
add
fldt
sub
push
cmpb
cmp
xbegin
add
test
add
sbb
jge
xchg
and
test
pop
cmpsl
jmp
cld
jp
repnz
insl
cmp
stc
xchg
int
shll
jns
aad
rcl
scas
rcl
cmpsl
rol
adc
lock
mov
jle
pop
jmp
mov
inc
cltd
cmpsl
xor
pcmpgtb
add
mov
xor
add
gs
mov
xor
adc
push
nopl
push
sahf
ljmp
mov
xchg
or
int3
inc
mov
lock
stc
jp
test
ljmp
mov
jmp
add
ljmp
add
add
test
jmp
inc
mov
jmp
add
mov
fs
lret
adc
or
or
mov
movb
add
push
sub
sub
insb
cltd
lret
adc
shr
or
push
das
mov
adc
lock
mov
inc
enter
enter
mov
pop
mov
or
or
jp
mov
lods
loop
pop
outsl
or
mov
or
cmpsl
mov
adc
and
punpcklwd
cli
inc
mov
ja
mov
adcb
cmpxchg
mov
dec
or
mov
push
lea
imul
lcall
bound
pop
out
cmp
roll
arpl
add
stos
js
cwtl
and
test
arpl
push
mov
xor
and
dec
aad
lret
push
sub
fimull
lods
lret
shl
lods
lret
lret
lret
ret
jmp
push
xabort
pop
lods
lret
ret
jmp
out
test
push
repz
jns
decl
adc
add
lock
js
add
inc
dec
dec
dec
xchg
jo
mov
and
test
dec
jbe
xchg
stos
fmull
mov
xchg
orb
xchg
popa
xor
add
repnz
ja
icebp
das
in
push
sbb
hlt
stos
inc
pop
push
mov
push
mov
mov
popa
adc
inc
repnz
push
fstl
add
jl
cwtl
ljmp
arpl
ljmp
jle
insb
sbb
out
jl
andl
mov
mov
xchg
add
orl
lcall
stc
mov
inc
out
sarl
mov
popf
add
outsl
push
mov
fildll
cmc
inc
stos
shr
sbb
xor
push
mov
inc
repnz
push
nop
data16
jbe
inc
enter
enter
enter
enter
push
mov
cli
mov
add
lea
add
lea
adcb
sbb
add
mov
sbb
add
fwait
out
pushl
mov
and
mov
push
iret
xchg
out
call
or
or
and
xor
mov
adc
divl
add
lods
inc
filds
testb
push
xor
mov
jb
mov
mov
add
dec
je
sbb
pop
test
sbb
jmp
mov
cld
cmpl
add
addr16
decl
fdivr
decl
andb
test
mov
push
test
mov
repz
xchg
mov
mov
or
xchg
clc
dec
ss
mov
fsub
inc
test
testl
mov
cwtl
mov
mov
stos
jbe
cwtl
and
bound
int3
mov
mov
fimull
xchg
loop
add
mov
adcb
jae
add
movb
pop
arpl
add
mov
inc
mov
and
rcll
sub
jle
sub
pop
push
jo
sub
xor
inc
shll
sub
jp
sub
js
out
in
add
call
xor
fwait
pop
fldt
bound
jp
jecxz
add
xchg
ljmp
mov
js
xchg
call
xchg
push
mov
add
out
punpckldq
adc
push
cmpb
xchg
push
pop
sbb
sar
cld
mov
lea
or
inc
aas
dec
pop
loopne
loop
jmp
je
mov
and
mov
add
in
jmp
add
fiadds
stos
movsbl
jb
pop
jb
inc
push
enter
mov
push
push
mov
dec
in
adc
sub
jbe
fldenvs
mov
and
inc
mov
add
mov
cld
add
mov
subl
pusha
add
add
sbb
rol
pop
or
lret
sti
lea
mov
cltd
mov
stos
pop
pop
mov
add
add
fs
je
cli
mov
add
aam
clc
fsubl
sub
xor
add
int3
scas
clc
mov
jns
push
xor
or
cmp
mov
add
or
xor
or
jo
mov
cmp
xchg
and
and
add
outsb
decl
xor
in
adc
fcoml
mov
xor
testb
testb
testb
out
orl
and
cmp
in
popa
mov
adc
loop
popa
mov
adc
repz
inc
mov
adc
shl
inc
mov
adc
shl
and
push
and
add
mov
add
mov
add
mov
adc
cwtl
pop
cmp
daa
sahf
jl
or
cmpl
mov
jle
shl
sti
orl
jmp
jmp
dec
rolb
out
pusha
hlt
dec
dec
or
notb
push
add
lea
mov
lea
add
add
mov
add
lahf
xchg
push
add
jg
dec
jmp
push
add
jg
dec
ljmp
dec
in
xchg
push
add
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
in
add
jnp
push
lods
in
add
jnp
push
jl
in
add
in
add
in
add
in
add
in
add
loopne
and
ja
aaa
rorb
test
stos
inc
jno
xor
clc
mov
sbb
mov
shlb
maskmovq
sti
add
or
out
icebp
or
xchg
add
and
push
mov
iret
push
test
icebp
add
add
mov
mov
mov
and
jle
data16
incl
mov
pop
popf
cs
scas
jne
add
sar
mov
pop
xorl
or
je,pt
unpckhps
in
mov
clc
mov
add
push
add
mov
aas
add
jb
test
mov
mov
insl
and
add
pop
sub
mov
dec
adcl
and
add
je
add
inc
sub
xchg
or
popa
and
repnz
jnp
xchg
mov
or
add
lea
pop
ljmp
ljmp
lret
ljmp
xor
mov
dec
rorb
sub
add
mov
testb
je
lret
ljmp
arpl
bound
ljmp
pop
cmpsl
arpl
int3
repnz
jmp
fwait
arpl
mov
int
adc
dec
and
jmp
imul
push
loop
loope
inc
cmc
jmp
clc
repnz
idivl
in
and
sub
mov
mov
int
xor
in
mov
int
or
add
and
jmp
jge
inc
jmp
testl
jle
div
or
ret
add
jmp
or
push
ret
adc
pushl
add
daa
mov
cmpsb
repz
adc
hlt
pushl
add
in
inc
mov
pop
sbb
popf
out
xor
sti
add
mov
add
sahf
xor
or
orl
mov
pop
inc
loopne
jmpw
mov
test
xor
xor
add
je
test
repnz
pop
jge
pushf
scas
gs
and
inc
test
aas
cwtl
test
xorl
test
test
pop
mov
add
mov
aad
xor
ret
in
mov
add
into
xor
or
mov
add
fisttps
add
imul
adc
mov
mov
cmc
inc
mov
les
mov
add
jnp
addr16
lret
ljmp
pop
dec
jae
lret
ljmp
pop
pop
jae
lret
ljmp
xchg
jne
ret
push
sub
jno
pop
sbb
dec
adc
arpl
ljmp
shrl
inc
dec
add
sbb
pushf
mov
pop
mov
cmp
xchg
add
jnp
and
xchg
xor
les
and
xchg
dec
bound
jle
jle
mov
push
aas
in
inc
mov
adc
pushf
in
pop
cmp
sbb
xor
fstl
movb
xchg
mov
mov
push
sub
enter
enter
push
push
push
mov
push
arpl
pop
mov
dec
addb
dec
jl
xchg
testl
add
insb
shrb
push
cmc
mov
adc
fisttps
cmp
add
jo
lea
sub
addl
jl
lret
mov
push
and
push
call
cld
enter
sbb
adc
pop
xchg
mov
add
mov
adc
fwait
pop
cmp
pop
and
movq
mov
jmp
pop
jle
mov
or
pop
dec
xor
mov
jg
xor
stc
adc
rorl
jo
clc
movsl
icebp
xor
add
xchg
add
test
std
xchg
jb
xor
cltd
cmp
xor
mov
add
testl
mov
jecxz
jns
mov
mov
push
mov
es
xchg
cs
or
lret
dec
daa
push
add
dec
add
mov
sbb
out
or
mov
add
aaa
loopne
adc
loopne
pusha
test
loopne
adc
or
incb
adc
lods
add
cmpsb
mov
rol
or
mov
sti
loop
mov
sbb
adc
fists
sbb
cmp
adc
fbstp
dec
mov
adc
fbstp
jmp
mov
add
jge
push
add
cltd
push
inc
xchg
and
jne
adc
andb
faddp
sub
push
lds
jmp
jmp
adc
add
lea
add
lea
add
lea
add
lea
add
lea
add
sbb
jbe
mov
outsb
mov
sbb
pop
mov
sbb
dec
and
cmc
add
loopne
decl
loopne
add
sbb
add
cmp
mov
jnp
js
sti
add
loopne
add
loopne
pop
clc
psubsb
sti
pop
call
jg
jmp
or
inc
or
and
add
sbb
enter
mov
cmp
jl
shll
jle
rorl
jle
add
dec
in
frstor
jmp
add
pop
mov
out
ret
test
call
xor
xchg
add
mov
dec
mov
xor
mov
and
add
jmp
inc
mov
mov
popf
inc
xor
mov
xchg
out
xchg
mov
test
mov
lods
cmp
lods
inc
and
sub
mov
or
and
stos
xchg
imul
cmp
mov
mov
push
or
push
ljmp
dec
jno
int3
add
xchg
test
movsb
xchg
and
or
stos
mov
mov
add
add
add
mov
movb
jg
inc
pop
mov
add
clc
or
dec
insl
test
les
cmp
mov
and
xor
jbe
jmp
mov
jecxz
mov
imul
or
test
mov
mov
jmp
rol
pop
xchg
sbb
xchg
imul
fcomps
mov
inc
in
add
push
adc
mov
pop
icebp
call
push
enter
out
rcrb
adc
mov
call
cmpsb
lcall
xor
xchg
adcb
push
jp
jg
xchg
mov
imul
sub
jae
cltd
fnsave
daa
bound
adc
lods
add
add
push
sbb
enter
jle
mov
or
ja
test
pop
adc
out
mov
add
lret
pop
or
cmp
jge
jge
enter
pushf
adc
push
cmpsl
add
mov
cmp
pop
add
into
pop
mov
xor
loopne
bnd
mov
cmp
sbb
dec
icebp
xchg
cld
dec
or
xchg
push
aad
push
jns
and
imul
and
cltd
mov
cld
pop
es
add
add
lea
jl
and
sub
xor
jp
jmp
mov
cltd
inc
and
stos
cld
jl
and
pushf
cmp
or
jge
shll
mov
cmpsl
dec
cmpsb
clc
test
adc
add
mov
shrb
leave
enter
pop
mov
popa
or
and
scas
adc
xchg
push
dec
add
mov
shrb
or
inc
dec
jb
jb
popa
or
adc
mov
cmp
rol
xchg
or
mov
add
lahf
mov
jp
outsl
add
sbb
jg
mov
push
stos
xor
cld
call
jmp
fldenv
pop
aad
sbb
js
dec
mov
mov
call
mov
fwait
jno
sub
out
ds
cmp
aad
icebp
inc
aad
inc
xchg
sbb
sbb
pop
aad
xchg
sub
cmc
out
andb
das
add
pop
das
andl
xchg
and
in
xchg
pop
and
repnz
vpmadcswd
jne
jns
push
call
nopl
fildl
adc
push
or
mov
fwait
adc
jl
add
xchg
xchg
ja
xchg
add
ds
pop
adc
movsb
fstl
xor
dec
fists
iret
ja
test
out
je
bswap
shr
lret
vmwrite
call
or
add
mov
test
cmp
clc
imul
jecxz
or
sbb
or
or
cld
jl
pop
mov
push
jecxz
lgs
clc
imul
add
mov
test
mov
shll
add
lret
jns
jb
jl
gs
daa
lds
jge
and
add
adc
incb
flds
sub
ljmp
or
pop
stos
out
xor
popa
dec
jb
ret
fldenv
mov
nop
xchg
push
in
add
shll
mov
jb
es
into
mov
lea
jg
loopw
dec
adc
or
xchg
inc
xchg
adc
movsb
xchg
sbbb
xchg
xchg
sub
test
lret
pop
push
mov
mov
popf
aad
stos
adc
push
inc
xchg
add
xchg
mov
push
test
rolb
jle
gs
add
addr16
ljmp
hlt
mov
pop
cmc
in
inc
int
sbb
jb
addr16
push
addl
cmp
jo
dec
roll
jns
inc
outsb
sarl
icebp
test
sbb
pop
sub
cmp
add
sub
add
mov
push
pop
jmp
stc
xor
rcll
sbb
sbb
inc
cmp
mov
fldenv
mov
xor
sub
mov
jmp
xchg
sub
sbb
repz
mov
and
mov
lahf
hlt
and
and
lods
sbb
enter
insl
mov
add
popf
and
scas
add
add
mov
leave
add
fdivl
je
xor
mov
jl
jle
dec
ret
or
lock
lcall
aas
fsubp
add
pop
and
add
fidivl
stos
jecxz
cld
je
ret
jns
xchg
and
push
mov
inc
mov
aaa
cmp
jae
cmp
and
and
in
and
mov
and
add
in
cmp
and
or
pop
sti
jo
mov
cmp
jp
lret
jno
mov
leave
xchg
dec
bnd
xchg
std
stos
sbb
leave
jp
bnd
xchg
add
add
pop
dec
in
add
mov
sahf
and
fidivrl
mov
add
inc
sub
fstpt
scas
mov
push
inc
cmp
or
adc
sub
movsl
xchg
subb
int3
jecxz
inc
cli
add
jge
shll
repnz
sahf
add
sbb
adc
cltd
jmp
jo
cmp
xor
inc
dec
ja
inc
inc
push
push
sarl
outsl
rcll
xor
aad
jmp
or
cwtl
std
xor
add
outsb
in
leave
divl
or
adc
pop
aas
std
add
mov
jmp
ljmp
pusha
add
add
enter
lea
mov
push
add
add
aaa
and
jl
lods
hlt
je
leave
fsubs
mov
mov
jle
jp
pop
add
pushf
jo
push
mov
sub
pop
adc
loopne
jbe
xchg
jno
xor
jnp
and
jo
xor
cmc
jae
ret
out
in
mov
add
mov
aaa
stos
jl
icebp
ja
jmp
fimuls
cli
imul
ja
add
repz
ja
xor
divl
sti
xor
add
jo
jae
fiaddl
and
popa
cmp
outsb
and
jo
add
leave
sti
inc
jo
xor
or
sub
test
shrl
jge
jl
hlt
imul
js
xor
push
mov
rclb
dec
dec
hlt
jns
jb
icebp
mov
lods
aas
add
jnp
fsubl
test
inc
mov
add
pop
hlt
mov
push
ljmp
push
out
jp
out
sub
mov
js
mov
je
add
roll
or
imul
jmp
ret
ljmp
dec
or
adc
xchg
mov
test
add
mov
pcmpgtw
add
or
mov
jae
jle
fcoml
bound
jp
fsubr
jo
stos
int
popa
cwtl
add
mov
int3
and
daa
xlat
fwait
add
add
dec
adc
adcl
mov
inc
dec
xchg
lret
mov
test
inc
stc
sbb
xchg
lea
add
fwait
arpl
leave
scas
leave
lds
ja
imul
jmp
pop
call
mov
push
roll
jmp
addl
jmp
pop
scas
shll
jge
add
pop
cli
mov
hlt
sub
je
sbb
add
add
es
xchg
mov
icebp
lds
ja
push
clc
int3
xchg
ret
mov
add
adc
in
sti
jmp
mov
cmp
jne
call
rolb
mov
out
mov
cmp
pop
prefetcht0
or
add
sub
lcall
and
jle
jmp
jno
orb
and
jge
sti
in
xchg
jl
hlt
adc
push
enter
test
lds
cmp
add
pop
ret
ret
pusha
push
sbb
inc
movsb
in
pop
cmp
jl
mov
aas
aas
or
fisubrl
jb
jns
fadds
adc
hlt
add
mov
jo
xchg
jg
addr16
jg
sar
mov
pop
jge
repnz
xchg
hlt
pcmpgtd
lahf
jno
push
xchg
jp
xchg
and
or
mov
ss
insl
jae
push
mov
xor
dec
mov
add
popf
movsb
adc
sbb
pusha
fmuls
dec
jb
xchg
adc
mov
ss
add
push
add
data16
jb
xor
lods
addr16
add
addr16
sbb
repnz
push
or
push
jns
jb
fwait
mov
mov
xor
push
push
xchg
mov
and
pop
adc
orb
add
addl
push
xchg
push
sub
rol
xor
ds
pushf
add
mov
inc
jo
add
cmpsl
push
bound
fwait
push
jb
xchg
push
cwtl
lock
and
push
fwait
xor
aam
andnps
dec
mov
addb
mov
push
mov
mov
push
mov
or
adc
aam
int3
sbb
enter
enter
jmp
js
mov
sub
inc
sbb
mov
pop
incl
enter
and
xorl
add
cmpsl
or
sarb
leave
jg
add
jmp
jmp
outsb
inc
lock
xchg
lds
ds
testl
lret
clc
pop
addr16
cltd
inc
mov
pop
js
cli
subl
xchg
clc
call
adc
cli
pop
sbbb
dec
mov
clc
mov
pop
mov
sbb
orl
outsb
cmp
pop
push
test
xchg
test
xchg
jmp
add
cld
les
mov
jecxz
mov
pushf
mov
dec
bnd
popa
dec
stos
mov
ljmp
push
mov
pushf
xchg
popf
out
xchg
sub
iret
rorl
sar
sub
hlt
addb
popa
pushf
fists
jns
add
xchg
ja
xor
or
popa
cli
adc
faddl
or
rcl
push
iret
aad
cs
iret
pushf
cmp
divl
or
xor
add
cltd
pop
jno
bound
xchg
xchg
push
mov
pop
call
bound
mov
pop
cs
lea
push
pop
mov
int
fs
addl
add
jo
inc
cld
insl
mov
push
pop
jb
xchg
mov
int3
cmp
sahf
xchg
mov
and
xchg
arpl
pop
adc
adc
xchg
inc
fs
jge
bound
mov
jl
mov
cmpsl
ds
movl
mov
and
mov
pop
jmp
push
cmp
or
mov
fwait
sub
mov
scas
add
scas
add
scas
add
addr16
hlt
pushl
jecxz
adc
dec
mov
ret
mov
lods
fwait
adc
xor
hlt
je
and
lock
aaa
scas
add
scas
add
int
adc
jnp
cld
jmp
pop
xor
jle
mov
mov
hlt
add
imul
ret
add
addr16
mov
insl
ret
movsb
lods
lock
mov
xchg
movsb
xor
jns
out
pop
fwait
clc
or
hlt
add
add
out
imul
xor
stc
jecxz
add
addr16
adc
rcrl
xor
popa
and
stc
pop
fdivrs
mov
jno
jle
push
lea
hlt
mov
inc
jbe
mov
pop
test
pop
les
jno
sahf
adc
cltd
cmpsb
adc
jle
xchg
adc
adc
cld
fistps
cltd
fcoml
stos
sbb
cltd
adc
pusha
adcb
adc
cld
add
pop
sbb
test
sub
es
pop
jle
inc
adc
mov
mov
xchg
add
xchg
jle
xchg
out
inc
sahf
mov
mov
push
mov
ret
mov
adc
xchg
cmp
test
mov
sub
shrb
mov
add
addl
cmc
ljmp
call
ret
cmp
push
pop
dec
sbb
pop
punpckhdq
jle
sahf
in
pop
pushf
mov
add
xchg
sti
add
stc
jg
out
scas
push
push
mov
xchg
add
pop
addb
push
clc
insb
sarl
int3
rcrl
lock
pop
jns
int3
cmp
out
mov
xor
insl
ljmp
mov
mov
loope
jae
adc
cld
fwait
adc
sub
adc
ljmp
lea
cld
pushl
dec
hlt
cld
cmp
push
lods
ret
testl
mov
test
jno
push
daa
test
push
in
mov
stc
push
movsl
clc
adc
xchg
lea
js
test
lcall
arpl
jl
cmc
xor
xchg
outsb
mov
pop
jle
jbe
mov
add
push
lret
dec
movsl
fadds
mov
clc
in
test
test
loopne
mov
mov
pushl
mov
mov
mov
add
xchg
adc
adc
jbe
test
or
lock
ljmp
add
pop
xlat
adc
pop
lahf
lcall
add
fwait
adc
popa
mov
iret
imul
push
int
mov
dec
jae
adcb
or
adc
hlt
sti
shll
add
pop
hlt
jmp
pushf
cld
push
repnz
fadds
loope
jmp
mov
movsb
and
add
lahf
add
xchg
cmp
lahf
out
sub
mov
hlt
xchg
sti
push
mov
sahf
dec
push
mov
cli
repnz
rol
fisttpll
out
jb
fwait
imul
add
hlt
push
mov
outsb
icebp
and
push
push
stos
dec
mov
mov
jbe
mov
lcall
inc
aaa
mov
xor
movb
aaa
loop
mov
lock
arpl
lea
fistpll
jns
and
loopne
mov
stc
ja
mov
mov
icebp
xor
add
jb
and
mov
decl
pop
add
neg
stos
stos
mov
mov
cld
push
or
add
pusha
jp
add
ja
rcrl
shll
dec
insl
xor
xchg
jns
add
loop
add
loop
add
xchg
test
cli
int
es
jbe
add
xor
clc
jle
cwtl
cmp
test
jl
std
xor
inc
lock
mov
pop
add
jmp
xlat
out
fsts
pop
int3
in
add
xchg
test
sub
repnz
sub
repnz
clc
aas
mov
les
jge
add
mov
lret
mov
mov
mulb
mov
pop
rolb
mov
ret
dec
ljmp
push
xchg
sub
lret
gs
loop
pop
notb
xchg
imulb
test
cld
leave
ret
aad
es
popa
xchg
pop
add
test
pop
jno
sbbb
xchg
movsb
inc
xchg
mov
jmp
bound
cmpsl
jns
mov
xchg
vsqrtss
inc
cmc
ret
ljmp
pop
rcrb
add
and
hlt
jmp
lret
mov
jp
sbb
out
xor
jns
adc
mov
fstps
popf
inc
lcall
sbb
dec
repz
sbbl
ds
mov
les
je
add
inc
sti
mov
or
mov
jne
cmp
jbe
stc
xchg
decb
fs
sub
mov
jb
or
sub
inc
out
pop
fldenv
ret
inc
arpl
lret
stc
jne
les
fdivs
outsl
incl
out
and
incl
popl
roll
jo
sub
adc
mov
inc
add
cld
mov
les
ss
out
syscall
xchg
testl
sbb
pop
adc
inc
clc
pop
stos
add
ret
dec
mov
mov
lcall
ss
cmp
cld
inc
xchg
add
or
cmc
test
jns
xchg
out
mov
test
loope
xor
outsb
sub
dec
xchg
xor
test
cltd
and
mov
cld
xchg
jae
in
aas
mov
sub
xor
jns
cmpsl
clc
cmp
inc
or
hlt
pop
aam
stos
loop
ljmp
mov
cmpsl
out
add
inc
adc
jmp
aam
stos
stos
shr
jp
cmpsl
jp
cmpsl
add
sarl
js
cmpsl
bnd
cmpsl
ror
cli
cmp
push
cmpsl
out
cli
cmp
out
js
push
cmpsl
out
push
mov
popf
push
lahf
out
fcoml
mov
fcoml
mov
xchg
adc
loop
dec
cmpsb
xchg
mov
icebp
and
add
data16
insb
icebp
lahf
mov
sub
mov
inc
outsb
out
xlat
in
mov
fadds
xor
rcr
or
adc
out
test
hlt
jmp
lea
pop
pop
stc
scas
add
cli
out
stos
lea
pop
cmp
fsub
out
stos
lea
aaa
cmp
pop
popf
sbb
mov
add
test
stos
lea
add
cmpsl
xchg
or
loopne
dec
add
aam
hlt
mov
xchg
inc
addr16
add
lock
ja
inc
add
lock
inc
addr16
or
sti
icebp
inc
aaa
jb
loopne
add
out
inc
daa
mov
add
push
xchg
or
dec
add
sub
add
add
dec
add
out
add
outsb
or
cld
mov
xchg
dec
ja
add
roll
or
pop
and
stc
jnp
out
aas
mov
add
hlt
inc
add
shl
pushf
mov
lods
lret
pop
nop
je
stos
cmc
mov
stos
bnd
jb
int
cmp
jbe
add
jae
out
adc
shlb
add
repnz
into
cmc
and
adc
push
aad
add
dec
scas
aam
dec
scas
xlat
test
sbb
testl
xchg
scas
mov
adc
xchg
js
adc
mov
cmp
push
out
stos
rclb
inc
add
jg
scas
pop
aam
scas
pop
add
jge
add
mov
rcrb
sti
pop
jp
mov
loope
shll
sbb
jg
cmp
or
cs
pop
mov
lds
xor
sbb
push
ret
sub
pop
pop
mov
cmp
inc
jns
add
add
add
lahf
ret
mov
pop
inc
and
ret
jmp
les
cmp
jp
stos
loop
push
stos
and
mov
ret
add
bound
pop
mov
dec
or
scas
add
pop
pop
add
jl
xor
pop
add
cmc
or
fcomip
push
ja
jp
pop
add
or
add
out
jb
inc
jbe
mov
xlat
mov
stc
sahf
pop
ret
or
inc
add
inc
mov
add
add
lahf
jmp
push
jo
in
dec
or
and
cld
jle
add
sarb
inc
enter
cmp
ss
cld
or
jg
sbb
mov
fidivrl
add
sbb
mov
dec
mov
cli
cmp
clc
icebp
icebp
shl
loop
add
imul
jle
mov
jb
imul
sahf
loop
icebp
scas
jns
test
clc
lock
in
mov
aad
cld
pop
mov
mov
int
adc
mov
imul
add
or
sahf
fldenv
inc
mov
rol
mov
out
mov
mov
in
jae
push
cmpsl
xchg
insl
sub
add
sti
mov
add
push
jno
fs
sub
push
popa
xchg
mov
out
xchg
std
setp
outsl
sti
sub
xor
arpl
adc
sub
orl
sbb
mov
jno
sub
push
call
stc
mov
add
jnp
sbb
pop
sbb
shll
jecxz
pop
ss
bound
mov
adc
aas
popa
jns
repz
ljmp
std
outsb
mov
lea
push
xchg
adc
shlb
push
xlat
mov
movsl
pop
jl
cmovs
mov
inc
int
mov
idiv
paddusb
scas
pop
sbb
rol
int3
adc
bound
scas
adc
scas
pop
cwtl
hlt
fcomp
cwtl
neg
fcomi
add
out
xchg
push
pmuludq
cmc
push
inc
add
repz
sbb
pop
adc
out
pop
lods
dec
pop
or
mov
add
int3
add
mov
and
int3
mulb
and
ret
ja
lds
jg
shlb
and
dec
xchg
sbb
jl
lret
lret
mov
add
pusha
mov
adc
pop
int3
adc
int3
push
or
add
decl
jmp
add
icebp
or
jge
aaa
add
mov
add
mov
cmp
mov
lea
mov
add
mov
clc
add
aas
mov
add
mov
clc
loope
mov
aas
mov
add
mov
cmpb
cmc
cmpb
repnz
mov
inc
mov
inc
ds
add
mov
cmp
mov
add
add
or
mov
popa
ds
add
mov
jno
jnp
pop
push
jae
ljmp
call
dec
push
push
mov
add
call
mov
add
out
push
fwait
mov
push
xchg
mov
add
out
push
jnp
stos
push
jae
ljmp
cmpsb
out
push
pop
mov
push
push
mov
add
out
push
mov
mov
add
out
push
fwait
mov
dec
mov
mov
cmpsb
pmulhuw
adc
test
adc
test
jmp
pmulhuw
inc
shrl
jmp
pmulhuw
inc
test
add
out
jmp
add
out
add
push
out
jmp
lea
hlt
and
add
out
jmp
lea
hlt
shll
hlt
jmp
ja
add
pop
insb
idiv
addr16
add
idiv
aaa
mov
add
mov
add
addb
pop
cmp
jmp
mov
add
daa
mov
add
addb
ja
idiv
out
add
testl
add
jecxz
idiv
mov
add
mov
add
lahf
imul
add
push
idiv
mov
add
cmpsl
mov
add
jo
dec
js
add
mov
add
dec
pusha
cld
popa
push
sbb
mov
cld
push
repz
add
mov
cld
cmp
add
repz
mov
add
mov
insb
cld
adc
or
cld
add
add
mov
add
mov
cld
jmp
push
push
cld
fptan
add
mov
add
mov
cld
rorl
cld
mov
add
mov
add
mov
cld
cltd
orb
mov
inc
cld
mov
add
add
mov
push
mov
ljmp
mov
dec
in
pop
mov
ljmp
mov
add
mov
pop
or
jl
add
bound
jecxz
pop
repnz
pop
ljmp
pop
lcall
jecxz
pop
ret
pop
add
jecxz
pop
stos
jecxz
pop
mov
jecxz
pop
xchg
jecxz
shr
fcomip
or
fcomip
lods
hlt
test
fcomip
arpl
fcomip
push
rcr
push
mov
fcomip
icebp
call
fcomip
repz
hlt
cltd
scas
fcomip
mov
fcomip
mov
scas
fcomip
aas
mov
hlt
jmp
outsl
fcomip
inc
outsl
fcomip
popf
add
hlt
subl
jnp
fcomip
fnsave
hlt
adc
hlt
mov
lea
hlt
sbb
fcomip
in
das
fcomip
add
insb
idiv
cmc
insb
idiv
and
or
mov
add
imul
add
cmp
decl
cmp
ljmp
cmp
lcall
cmp
push
cmp
cmp
idiv
add
idiv
cmp
cmp
jg
idiv
cmp
jmp
idiv
or
cmp
incl
cmp
incl
cmp
decl
idiv
mov
aaa
idiv
lret
aaa
idiv
idiv
mov
dec
cld
mov
sti
dec
cld
xchg
jne
cld
mov
cld
adcl
cld
jno
push
cld
imul
pop
push
cld
pop
repz
cld
push
in
push
cld
dec
lea
inc
icebp
push
cld
cmp
push
cld
sub
cld
and
cld
sbb
cld
adc
push
cld
add
push
cld
icebp
cmp
jmp
loop
cld
fld1
pop
cld
shl
pop
cld
leave
fcompl
shrl
cld
mov
loopne
pop
stos
loopne
pop
mov
lcall
pop
mov
or
hlt
pop
jp
in
jb
or
loopne
pop
loopne
pop
pop
loopne
pop
push
loopne
pop
dec
loopne
pop
inc
loopne
pop
cmp
cmpsb
pop
xor
scas
pop
sub
test
mov
out
adc
loopne
or
mov
pop
cli
fildll
push
repnz
ljmp
push
fcmovu
fs
add
fbld
lret
sbbl
outsl
pop
fcomip
inc
pop
fcomip
sbb
fcomip
mov
hlt
mov
fcomip
stos
hlt
mov
leave
fcomip
inc
fcomip
jmp
mov
fcomip
icebp
mov
fcomip
add
fcomip
ret
hlt
or
lods
fcomip
inc
lods
fcomip
stos
lods
fcomip
cmp
add
hlt
dec
pop
fcomip
push
arpl
hlt
jno
fcomip
roll
hlt
mov
fcomip
popf
inc
fcomip
add
cmp
ljmp
aaa
idiv
xchg
xor
idiv
pop
xor
idiv
dec
xor
idiv
out
idiv
cmp
inc
xor
idiv
jg
idiv
xchg
xor
idiv
or
idiv
add
idiv
or
idiv
std
cmp
dec
cmp
jmp
ss
pop
cmp
ljmp
cmp
std
cmp
incl
cmp
ljmp
hlt
add
mov
push
cld
rcrl
push
cld
leave
and
shl
add
fildl
add
faddl
add
repnz
push
hlt
add
mov
pusha
cld
mov
cld
xorl
dec
dec
cld
imul
dec
cld
pop
outsl
dec
cld
push
testl
add
cmp
dec
cld
xor
cld
sub
pusha
cld
and
add
push
shll
adc
popa
cld
add
pop
cld
icebp
mov
arpl
fsubl
fcmovu
adc
fmull
push
lret
push
ret
push
mov
mov
add
stos
fdivrl
push
mov
fcoml
push
xchg
fmull
fsubr
add
fdivr
arpl
mov
gs
fsubr
add
fsubr
pop
dec
pop
inc
fdivr
pop
cmp
sbb
xor
inc
pop
sub
adc
fcoml
pop
sbb
js
adc
pop
pop
or
jl
add
add
push
fcomip
xchg
add
hlt
mov
hlt
jns
fcomip
imul
hlt
outsl
fs
jmp
cs
and
fcomip
pop
cs
jmp
cs
jmp
fcomip
sti
call
xlat
hlt
sub
rcl
hlt
sub
hlt
addr16
xlat
hlt
pop
out
xlat
hlt
dec
out
xlat
hlt
xor
lea
adc
mov
ljmp
mov
add
mov
cmp
add
fwait
insb
idiv
pop
insb
idiv
test
out
imul
ljmp
ljmp
insl
idiv
pop
insl
idiv
ja
idiv
adc
add
mov
subb
sbbb
andb
add
idiv
add
add
mov
idiv
mov
popl
andb
add
daa
aaa
idiv
aaa
cmp
decl
loopne
cld
or
push
cld
add
cld
icebp
daa
push
cld
jmp
lret
push
cld
fld
push
cld
rcrl
push
cld
leave
lret
push
cld
shl
add
std
push
cld
test
imul
add
outsl
popa
cld
sbbl
popa
cld
imul
pop
cld
push
xor
add
mov
decl
xchg
enter
jecxz
mov
loop
incl
fwait
mov
rcrb
addb
jbe
pop
in
std
loope
pop
cmc
out
pop
flds
pop
mov
in
dec
mov
add
fmul
imull
addr16
call
sub
jle
imul
call
in
push
out
outsb
call
xor
push
in
cmp
mov
lea
cmp
pop
aas
es
jno
sub
sbb
pop
pop
sbb
bound
add
imul
addr16
sti
out
jnp
lret
into
not
hlt
push
nop
dec
pop
pop
jno
mov
outsl
popf
in
pop
enter
xchg
outsl
dec
xchg
cwtl
pop
jno
mov
push
scas
xchg
bound
mov
cmp
jo
inc
imul
mov
push
push
pop
bound
arpl
xor
hlt
add
mov
add
jno
lret
mov
push
je
mov
add
jo
jb
gs
push
push
mov
addl
and
hlt
jnp
inc
jne
loopne
push
shl
bound
mov
outsb
in
aaa
outsl
loop
jo
add
jmp
push
push
in
arpl
push
push
out
jo
add
inc
gs
jb
mov
popl
mov
dec
mov
cmp
add
mov
stc
bound
data16
push
and
jb
fmull
aam
outsl
fmull
mov
decl
mov
xor
aam
mov
std
push
and
loope
add
fnsave
push
lret
data16
add
mov
out
out
fisttpll
std
fbld
push
jno
add
jmp
and
in
daa
in
pop
inc
fisubrs
mov
stc
test
pop
inc
mov
lods
mov
in
dec
sbb
insb
mov
add
adc
jo
push
fnstsw
sub
jo
add
add
mov
fisubs
popl
pop
outsb
lret
cmc
sub
mov
in
cmp
loop
bound
add
gs
and
fdivr
bound
loop
bound
xlat
xchg
dec
pop
jge
pop
pop
sub
push
insl
xor
outsl
inc
popa
bound
mov
pop
pop
jo
aaa
popa
dec
inc
das
imul
jno
daa
inc
push
cld
xor
adc
push
push
sti
shlb
inc
or
hlt
sub
push
mov
shl
fstl
ss
add
mov
popf
lahf
pop
pop
aas
lea
pop
add
mov
sbb
fs
loope
inc
outsb
mov
shll
jb
mov
jae
xchg
push
pop
je
lret
add
xchg
jb
out
jo
mov
shrl
mov
inc
outsl
xchg
jecxz
imul
mov
jmp
push
cmp
popa
je
jmp
imul
fsubrl
or
fldcw
sub
jns
imul
repnz
ficomps
jmp
imul
icebp
pop
jecxz
sar
aad
imul
fdivrs
mov
dec
mov
mov
icebp
pop
sahf
stos
sar
stc
add
js
bound
mov
pop
jnp
into
jmp
xor
inc
addr16
repz
lret
aam
add
add
cmp
loop
push
push
fisubs
xchg
std
push
sbb
xchg
imull
xchg
fucomip
mov
lock
xchg
std
push
js
lret
push
jbe
repnz
add
addr16
mov
ljmp
aaa
inc
fldenv
cmp
add
dec
adc
lods
cmp
out
insb
inc
adc
mov
fsubs
incl
or
in
loopne
fsub
xor
cmc
inc
cmp
add
mov
cmp
fdivl
into
lcall
mov
pop
push
jle
pop
lcall
gs
pop
xchg
pop
test
bound
outsl
gs
dec
ds
inc
mov
push
das
pop
addr16
add
addr16
inc
dec
insl
pusha
cmp
gs
aas
push
shl
testl
iret
hlt
pop
xchg
dec
pop
std
aaa
xor
fsubrl
fcomps
cld
sbb
lea
cmpsb
scas
pop
inc
loope
addr16
cmc
xor
ret
mov
push
mov
push
add
ljmp
clc
mov
js
mov
xor
imul
in
push
je
mov
das
add
into
mov
push
js
pop
insb
ret
insl
rolb
jo
xlat
insl
outsb
xchg
mov
push
gs
mov
outsl
test
push
push
mov
inc
gs
pop
jb
jmp
fldcw
lret
in
mov
mov
add
and
call
clc
ret
call
push
cld
pop
jmp
dec
jmp
ret
pop
lds
aas
ljmp
mov
inc
mov
insl
popf
in
adc
inc
out
jae
jb
push
mov
jnp
bound
mov
jae
jae
fsubrs
mov
fidivrs
inc
mov
es
iret
loop
vpacksswb
daa
addr16
xchg
int
fdivrp
inc
xchg
fsubp
push
ljmp
push
push
jbe
loope
ljmp
pop
daa
icebp
mov
int
add
dec
loope
pop
aas
mov
sbb
jmp
add
pop
in
data16
or
stc
int3
roll
dec
data16
cmp
cmp
clc
add
lods
sub
insl
les
pop
mov
bound
lahf
arpl
scas
bound
jb
push
outsl
pusha
pop
mov
jge
gs
pop
arpl
pop
pop
add
aaa
imul
pop
sbb
jl
push
cmp
aaa
imul
pop
cli
pop
inc
pop
inc
push
int3
hlt
jecxz
mov
sub
cmp
out
pop
jae
mov
pop
imul
fcomi
call
push
imul
or
insb
add
mov
addr16
stos
hlt
jmp
lret
fcmovne
imul
jb
or
push
popa
push
mov
jb
fs
or
push
push
scas
jo
aaa
out
add
ljmp
xchg
loopne
gs
fiadds
push
loop
jne
ljmp
testl
aam
jp
mov
jb
lods
pop
imul
dec
xlat
into
inc
cmp
into
jae
popa
mov
and
icebp
aad
dec
pop
rep
sub
in
sbb
jecxz
sbb
outsb
hlt
push
cld
sbb
fisubs
rcrb
hlt
dec
repz
shrb
mov
jge
sub
insb
leave
pmulhw
pusha
in
mov
cmc
push
stos
shlb
and
mov
mov
fldt
mov
scas
mov
sbb
jg
push
filds
inc
cmp
pop
rcrl
adc
outsb
ljmp
pop
fcomp
aas
sub
fimuls
mov
mov
push
mov
xlat
and
mov
icebp
in
cs
cmp
aam
mov
repz
ljmp
ss
repnz
aas
inc
mov
lods
mov
imul
pop
or
lods
add
xor
and
pop
add
pop
jno
xor
mov
xor
mov
pop
lret
fs
in
mov
sub
stos
mov
jno
pushf
push
outsb
lds
sub
jno
jb
pop
mov
jbe
imul
imul
cmp
pusha
test
xor
push
xor
push
pop
add
xchg
xor
and
push
daa
mov
add
loopne
gs
popa
data16
push
popa
jns
jno
nop
mov
jmp
mov
ret
sti
outsw
aam
addr16
mov
gs
add
jmp
jo
aam
fs
add
mov
bound
dec
sbb
push
je
fiadds
ja
sbb
xor
inc
add
push
dec
jnp
push
loop
arpl
mov
xor
insl
fdivl
pop
into
rolb
loopne
jae
xlat
push
mov
incl
mov
in
push
ljmp
xchg
icebp
push
add
ret
aaa
loope
bound
add
aaa
add
bound
rep
repnz
repnz
aam
in
loopne
mov
add
adc
dec
jmp
in
jmp
cmc
fnsave
inc
repz
stos
mov
shll
dec
aam
movb
iret
xor
mov
aaa
out
lods
push
dec
out
lods
dec
cmp
xlat
je
das
icebp
jl
push
mov
xor
xlat
mov
add
insl
pop
jmp
insl
pop
not
leave
lds
push
pop
xor
xlat
cmp
mov
aaa
mov
add
movsl
out
es
out
inc
ss
in
mov
popf
add
aaa
in
aaa
scas
icebp
in
mov
imul
mov
lock
adc
pop
add
add
bound
sub
es
cmp
cmp
addr16
push
xor
cmp
bound
lea
sbb
aaa
outsl
or
pop
push
out
fs
sti
xor
repz
lea
dec
add
sub
mov
jno
stos
cmp
mov
dec
pop
mov
mov
hlt
mov
add
xor
imul
add
and
hlt
cmp
push
imul
shrb
ss
pusha
mov
push
daa
mov
jo
jecxz
push
xchg
add
mov
jae
lods
popa
push
mov
add
mov
je
lret
jae
scas
arpl
xchg
loop
arpl
mov
inc
push
fisttpll
inc
fistpl
and
je
and
out
repnz
repz
jmp
stc
add
mov
mov
daa
jno
jae
sub
lods
pop
loopne
stos
push
add
pop
imul
imul
call
push
jno
jae
xchg
shlb
mov
jb
imul
sub
pop
sbb
out
sub
sar
rolb
sub
ret
jb
add
aam
jns
mov
iret
sub
lret
jne
inc
mov
loopne
xor
add
mov
fdivl
push
loope
daa
aas
add
mov
aas
fstpt
pop
jecxz,pn
sub
add
pop
mov
jge
out
das
ljmp
aaa
add
pop
sub
out
pop
xor
xlat
sub
inc
mov
xchg
mov
mov
daa
ljmp
dec
mov
int3
push
jp,pn
push
pop
add
push
pop
xchg
pop
fwait
inc
pop
bound
inc
cs
push
pop
mov
pop
jg
jp,pn
push
pop
add
push
pop
dec
dec
xor
pop
inc
mov
add
out
sub
ficomps
cmp
cmp
jle
adc
dec
cli
in
sti
mov
add
fnstsw
lret
push
scas
jg
shrl
hlt
add
insb
xchg
jb
fdivl
push
test
popa
xor
aaa
outsl
sbb
popa
js
mov
jo
leave
gs
shlb
push
fstps
xchg
jb
fdivl
ret
jb
fidivrs
les
ss
xlat
jo
push
fcomps
fistl
aad
dec
jo
mov
jb
test
jae
sti
imul
hlt
jl
inc
gs
clc
pop
movsb
ficoml
ret
outsl
aad
jo
mov
adc
mov
shlb
imul
insl
sub
aam
stc
imul
add
pop
iret
pop
lds
and
jae
icebp
jmp
imul
jmp
popa
mov
pop
ljmp
inc
loopne
stos
movsb
int
insl
inc
into
insb
add
movsb
insb
jae
mov
icebp
push
add
out
pop
test
pushaw
mov
bound
mov
cmp
add
xor
mov
xor
les
and
mov
sarl
fdivp
das
mov
mov
daa
ljmp
dec
xchg
out
aaa
xorb
test
aad
mov
cs
mov
xor
mov
mov
push
shlb
inc
jmp
sub
fistps
cmp
jge
fistpll
sbb
jno
std
aad
mov
divb
aaa
add
stc
sub
fsubs
fnsave
xor
push
mov
cmp
ja
push
int3
jb
jno
add
aas
mov
jno
cmp
xor
test
jno
pop
ss
test
jno
pop
cmp
mov
pop
push
pusha
pop
cmp
outsl
push
dec
sub
fsubl
push
dec
in
xor
mov
sbb
mov
sub
mov
movsl
push
xchg
test
add
mov
jb
fdivs
add
ficompl
scas
stc
pop
shll
mov
push
add
fdivs
dec
int3
aas
gs
push
jb
mov
dec
xchg
jb
xlat
jo
rcr
imul
popa
jns
mov
add
fldcw
mov
fldcw
pop
stos
insl
add
push
inc
push
into
daa
xor
xchg
add
dec
push
testl
and
outsl
mov
jecxz
cmp
mov
dec
mov
out
sub
out
xor
fildll
cmc
add
notb
in
jmp
vpunpcklqdq
add
addr16
hlt
fbstp
mul
push
cmp
inc
mov
in
mov
into
decl
ret
push
push
add
push
mov
jbe
sar
xchg
dec
xorb
jle
cmpsb
jmp
aas
sbb
jno
xor
sarb
dec
paddq
ljmp
dec
add
push
aas
fadd
and
pushf
lret
jb
fisubrs
jmp
es
lret
sub
add
sub
jmp
sub
mov
loope
mov
mov
mov
fidivrs
inc
inc
lods
and
fbld
xor
add
add
sbb
dec
jmp
in
cmp
fs
jmp
and
mov
dec
jmp
lods
cmp
pop
movsb
mov
pop
mov
cmp
bound
outsb
xor
dec
pop
dec
jmp
aas
and
pusha
mov
inc
jmp
sub
imul
cmp
inc
es
inc
inc
pop
add
cmp
loope
jno
pop
lods
jo
mov
aad
jae
loope
outsb
andl
popa
jae
xor
arpl
pushf
loopne
popa
mov
push
add
push
popa
mov
loopne
push
mov
push
gs
hlt
call
push
popa
inc
aam
jae
xlat
gs
loopne
jb
cmc
hlt
incl
push
popa
add
xor
je
stos
imul
hlt
dec
push
out
cmp
add
mov
outsl
lret
outsb
mov
data16
mov
jno
popa
mov
mov
jae
leave
push
ds
cmp
xlat
bound
sahf
lret
test
jae
cltd
decl
ret
dec
pop
xchg
and
add
mov
jmp
jecxz
jmp
rol
jecxz
ror
mov
inc
repz
jmp
jmp
jmp
jecxz
fdivs
loope
imul
mov
iret
jbe
mov
xor
pusha
stos
mov
add
cmp
jge
aas
aad
sub
out
mov
out
inc
cmp
jne
push
add
es
pop
pop
sbb
inc
xor
loopne
and
jecxz
jae
sub
sub
out
out
and
leave
out
mov
add
es
loope
and
xor
add
mov
and
xchg
mov
fidivrl
mov
addb
jge
inc
pop
sub
mov
orl
daa
pop
dec
flds
xor
and
and
xor
es
sbb
js
sbb
dec
cmp
std
ret
sub
push
add
daa
push
cmpsb
dec
jno
push
addr16
pop
sub
sti
scas
das
lds
cmpsb
push
cs
test
jae
lea
stos
pop
sub
mov
fsts
push
scas
push
insl
fcomip
pushl
ss
scas
jo
mov
imul
mov
mov
add
push
je
mov
add
push
bound
mov
add
popa
mov
mov
add
mov
inc
inc
mov
xlat
jo
push
fdiv
ljmp
int3
cmp
insb
add
shll
add
arpl
add
scas
push
pop
mov
mov
bound
outsl
jle
jmp
jae
fisubrl
mov
mov
cmp
push
push
pop
arpl
push
mov
shlb
lea
insl
sub
rcll
mov
push
fucom
mov
insb
std
sbb
dec
loop
xlat
imul
mov
call
enter
xlat
cmp
stos
enter
xlat
shrb
jbe
mov
mov
xlat
je
aas
fdivrs
cmp
dec
cmp
ficomps
ljmp
dec
push
call
pop
and
fdivs
and
in
mov
add
sub
mov
pop
stos
shlb
fldl
std
mov
adc
add
mov
mov
push
and
sub
pusha
mov
cmp
jne
and
lea
stos
xor
outsl
cmp
outsl
dec
loope
outsl
fsubrl
jmp
icebp
pop
outsl
sub
and
pop
ds
mov
int
jo
sbb
dec
gs
fldcw
sti
fldcw
pop
adc
dec
sbb
outsb
add
pop
and
outsb
push
outsl
add
popa
jb
bound
scas
jo
and
push
add
jo
dec
mov
dec
insb
jo
fidivl
add
jo
mov
hlt
incl
push
inc
iret
out
imul
fnstenv
arpl
data16
mov
add
push
xchg
aam
gs
inc
popa
mov
stc
dec
push
sbbl
add
cmp
mov
jb
test
xor
dec
add
rorb
mov
loop
iret
mov
fidivl
adc
mov
fnsave
mov
fidivl
mov
fisubl
adc
pop
mov
xlat
imul
fnstenv
push
fldenv
jne
jae
jb
data16
mov
inc
bound
dec
pop
jg
dec
xor
mov
inc
cmp
lods
bound
scas
jecxz
and
pop
sub
ljmp
cmp
loopne
cmp
ljmp
sub
shrl
mov
fldcw
xchg
lods
mov
fbstp
inc
rorb
aas
js
cmp
jo
inc
ret
loope
adc
mov
xor
dec
aaa
mov
jns
fbld
mov
sbb
mov
inc
gs
data16
hlt
rorb
push
inc
sub
int3
inc
dec
jno
inc
scas
hlt
cmp
pop
pop
fwait
or
mov
ds
ficompl
scas
hlt
ret
lea
dec
sub
inc
sub
int
pop
pop
loope
jo
jecxz
hlt
and
inc
inc
sbb
cmp
inc
jmp
add
sub
fcomps
push
aam
gs
xlat
pop
add
mov
movsl
clc
jno
xchg
rclb
mov
add
sub
jo
dec
aad
push
dec
xlat
imul
inc
imul
repz
cs
push
gs
mov
add
into
imul
scas
imul
testl
hlt
inc
mov
push
shrb
dec
xchg
add
stos
imul
mov
mov
imul
lds
shlb
mov
decl
shl
push
mov
shlb
mov
add
flds
insl
add
push
add
adc
insl
mov
mov
lds
sub
data16
incl
mov
jae
dec
insl
imul
hlt
dec
arpl
jb
data16
inc
mov
cs
ljmp
push
adc
inc
aaa
pushl
and
ljmp
sub
filds
in
mov
cs
aad
xor
iret
in
sbb
cltd
loopne
inc
mov
loopne
jle
lods
das
cmpsl
lret
shlb
lcall
aaa
outsb
loopne
mov
loop
sbb
imul
adc
mov
add
mov
jmp
lea
add
lea
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
ja
add
lea
add
add
ja
add
ja
add
lea
add
add
aaa
lea
add
lea
add
lea
add
inc
add
insl
inc
add
mov
add
mov
add
lea
add
mov
imull
add
mov
add
mov
fnstsw
mov
add
mov
add
mov
sub
in
push
mov
mov
or
mov
add
mov
xor
popa
cmpsl
add
add
repnz
mov
decl
xor
xor
add
mov
add
mov
add
mov
add
mov
ljmp
mov
dec
mov
add
mov
cmp
mov
sub
mov
sbb
dec
ljmp
mov
ljmp
or
jg
ljmp
imul
dec
ljmp
aad
xchg
jge
ljmp
subl
xlat
dec
lret
loopne
out
jmp
cs
sbb
mov
inc
add
mov
xchg
pop
add
rorb
inc
les
or
fiadds
mov
adc
push
xlat
inc
push
movb
sti
out
inc
xor
test
in
fldcw
adc
push
or
inc
mov
and
or
jl
and
aas
add
lds
or
push
ret
xchg
icebp
xor
xchg
inc
add
adc
or
dec
lahf
int
cmpsl
xor
das
xor
jb
loope
mov
pop
cmp
xchg
lds
push
dec
push
xor
mulb
sbb
and
popa
iret
addr16
in
xrelease
xchg
enter
outsb
xor
xchg
xchg
adc
and
mov
add
leave
int3
mov
adcl
cmpsb
mov
cmp
pushf
xor
testb
shll
jae
and
std
dec
out
test
outsb
sbb
clc
pop
jmp
aaa
dec
add
sahf
jle
jns
add
ds
loopne
lock
cli
enter
sbb
push
push
outsl
xchg
and
sbb
dec
dec
movsl
mov
test
insb
pushf
mov
mov
stos
test
inc
xchg
orl
mov
mov
daa
fdivrs
fs
jge
push
sarb
dec
fs
ljmp
and
mov
insb
stos
fs
jo
scas
jle
push
dec
lcall
xlat
or
or
cmp
arpl
fildl
lretw
mov
bound
push
in
inc
pop
xchg
add
scas
pop
gs
and
int3
dec
fnsave
sbb
pop
cmpsl
gs
mov
mov
in
sbb
in
mov
in
orl
lock
add
mov
shrb
push
xchg
inc
daa
push
outsb
lds
loopne
shrb
or
sbb
sbbl
movsb
unpcklps
lea
lret
sub
add
lea
lcall
pusha
add
popa
add
addr16
xor
jnp
xor
add
xor
xor
xor
sub
xor
push
std
xor
add
cld
xor
sar
xor
dec
std
xor
xor
xor
pop
std
xor
dec
xor
push
xor
dec
xor
inc
xor
addr16
xor
cmp
xor
arpl
xor
pop
std
xor
pop
std
xor
inc
std
xor
idiv
xor
out
cld
xor
mov
sysexit
add
xor
add
sysexit
add
ljmp
aas
mov
xchg
mov
xchg
mov
xchg
mov
aas
mov
adc
mov
clc
arpl
and
jnp
sub
xchg
mov
clc
stos
mov
test
loope
add
mov
sti
out
pop
cli
ja
pop
cli
fwait
adcl
mov
jae
sar
test
imul
add
adc
and
mov
out
inc
mov
mov
cmc
fstpl
cmc
or
pop
pop
imul
pop
xchg
std
pop
outsb
testb
negb
push
negb
pop
fdivp
jge
out
insl
pop
into
idivb
pop
sahf
negb
xchg
insl
pop
dec
negl
push
testl
pop
mov
std
pop
jbe
add
pop
sahf
neg
pop
xchg
lods
pop
mov
popf
pop
xchg
testb
out
insl
push
into
out
mov
push
add
jle
das
aad
sbb
fnsave
xor
sti
das
insl
popa
jmp
xchg
cmp
das
jge
lret
das
and
and
das
sbb
push
jnp
in
push
imul
pop
cs
add
cmp
sub
push
stc
sbb
pop
icebp
or
gs
ljmp
mov
movsl
test
stos
cs
mov
mov
in
lahf
push
add
xor
inc
pushf
inc
ss
push
sbbl
ss
pushf
xorb
cltd
nop
ss
mov
ss
cltd
shlb
cltd
shlb
add
cltd
lock
aaa
and
xor
inc
fwait
inc
aaa
xor
pusha
aaa
inc
pushf
jo
inc
pushf
xorb
fwait
nop
aaa
arpl
mov
inc
fwait
shlb
lcall
add
add
mov
clc
and
mov
xor
fdivrp
inc
mov
notl
mov
arpl
cmpsb
mov
jae
mov
clc
xchg
xchg
cs
mov
xchg
clc
ret
jbe
clc
shll
clc
jecxz
jbe
repz
add
stc
adc
stc
and
mov
xor
fdivrp
inc
mov
stc
push
mov
cli
arpl
testb
mulb
xchg
test
out
shll
mul
mov
popf
bound
stc
jge
out
lods
popa
into
stc
mov
popa
push
cli
frstor
cli
in
popa
into
stc
frstor
stc
or
pusha
data16
in
pusha
mov
std
pusha
jbe
dec
popa
push
cli
pop
popa
push
cli
sub
pusha
fdivp
test
divl
mov
test
pop
xchg
notl
jle
jne
push
clc
gs
pop
testl
cmc
pop
jle
cmc
pop
jbe
add
pop
add
mov
lahf
aaa
in
ss
xchg
jg
lds
push
ss
ja
ss
popw
ss
pop
aaa
jge
divl
test
ss
xlat
ss
ss
inc
cmpsl
ss
and
ja
lds
addr16
movsl
add
popf
sti
ss
pop
fcoms
xor
jge
divb
add
mov
adc
call
ds
or
xchg
lahf
sbb
push
lahf
sub
inc
lahf
cmp
mov
dec
aas
xchg
mov
push
aas
repz
cwtl
aas
add
mov
mov
aas
xchg
mov
call
aas
daa
out
hlt
jmp
add
repz
or
jecxz
sbb
rcrl
cmp
xor
pop
xor
push
jnp
xor
mov
lock
jle
icebp
stos
jle
lock
pop
fdiv
fistpl
icebp
jmp
clc
lock
mov
mov
into
icebp
sub
outsb
lock
lahf
icebp
pop
lahf
into
icebp
imul
icebp
mov
icebp
fwait
jg
repnz
jg
icebp
mov
pop
push
icebp
fistpl
icebp
jmp
jbe
sti
mov
mov
sbb
repnz
divb
pop
push
testb
notb
adc
pop
jbe
in
sahf
not
pop
mov
mov
jle
movsl
pop
xchg
testb
notb
pop
mov
movsl
pop
push
not
pop
mov
mov
mov
test
pop
notl
pop
jle
in
jbe
in
push
notl
divl
pop
push
testl
pop
testl
loope
das
popf
fnstcw
das
inc
sub
dec
sbb
push
or
pop
mov
jmp
lea
lret
das
popf
cltd
mov
das
lea
mov
fldl
imul
jbe
cs
dec
cs
push
sub
int
sbb
aad
or
pop
inc
sti
cs
lea
fldt
jne
es
cs
push
stos
cs
push
mov
add
xchg
and
ret
xchg
xor
and
push
ss
xchg
pusha
ss
xchg
jo
arpl
nop
xor
mov
and
shlb
rcll
lock
adc
jae
and
inc
xchg
xor
and
xchg
push
aaa
push
xchg
pusha
aaa
inc
xchg
jo
arpl
nop
aaa
mov
mov
aaa
mov
xchg
shlb
rcll
aaa
mov
call
and
loopne
inc
cmpsb
clc
call
arpl
inc
out
xchg
call
mov
data16
ret
data16
call
call
repz
call
adc
jmp
inc
cmpsl
jbe
push
xchg
into
jmp
jae
mov
jmp
mov
addr16
jmp
rcll
ds
push
ljmp
fsubrp
lods
push
in
popf
push
scas
in
dec
push
xchg
in
cmp
insl
push
inc
ljmp
push
ljmp
xchg
fstl
ljmp
mov
mov
xchg
adc
mov
stc
gs
jp
pop
pop
jb
gs
ljmp
pop
cli
cmc
popa
pop
mulb
divb
pop
dec
mulb
pop
or
insl
pop
add
and
sub
sbb
sub
add
call
sub
add
cmp
cmc
outsl
cmp
cmc
addr16
in
cmp
in
cmp
mov
cmp
mov
cmp
movsl
fwait
cmp
mov
cmp
mov
cmp
or
mov
icebp
ja
cmp
ja
cmp
addr16
leave
outsl
cmp
ja
cmp
fs
cmp
aaa
aas
cmp
leave
daa
das
cmp
pop
movsl
push
cmp
fs
movsl
insb
cmp
movsl
je
jae
jl
imul
cmp
xchg
cmp
sub
pop
pushf
cmp
jg
dec
cmp
aas
mov
int3
cmp
xchg
mov
mov
jecxz
dec
aas
lret
mov
pop
aas
add
fs
jae
insb
aas
imul
aas
mov
mov
int3
aas
mov
fistpll
out
jno
out
imul
lcall
movsb
nop
call
mov
lock
xchg
lock
lock
in
inc
sahf
pop
out
dec
jle
out
push
jle
out
pop
jle
out
arpl
jle
out
imul
jae
pop
out
jnp
and
sbbl
mov
sbb
fwait
mov
ss
sahf
push
lock
push
lock
sahf
push
icebp
out
mov
cmp
fstpl
icebp
aad
lret
pop
shl
mov
mov
icebp
ds
pop
lock
lock
pop
push
lock
pop
out
mov
jne
jno
testl
mov
testb
pop
push
lcall
pop
xor
push
pop
xor
repnz
repnz
mov
fstpl
repnz
repnz
pop
cmc
repnz
sub
rcrb
repz
repnz
pop
cmp
pop
pop
add
gs
lret
cmp
xor
cmp
and
add
cmp
pushf
add
and
pop
sub
cmp
and
cmp
call
loope
fcomip
data16
push
out
xor
cmpsb
mov
xor
mov
hlt
jmp
mov
xor
lcall
sbb
jns
das
ljmp
sub
add
jge
inc
mov
mov
and
cli
mov
hlt
pushl
fwait
nop
xor
fwait
xor
cwtl
cmp
xor
xchg
fwait
xor
in
xor
cwtl
dec
xor
cltd
mov
xor
sahf
dec
xor
lahf
jne
cmp
cmp
cld
sahf
xor
mov
pop
ss
cltd
cmpsb
ss
cltd
ljmp
cwtl
pushf
ja
jb
pop
cmp
jl
cmpsb
inc
out
cmpsl
arpl
dec
xchg
repz
and
fsubrl
jmp
jb
jmp
imul
pop
pop
shl
mov
sub
mov
jo
and
repnz
cwtl
fdivp
jno
inc
repnz
int
roll
call
adc
call
std
gs
jmp
bound
fsubr
pop
fcmovu
sbb
fucomp
lret
mov
dec
dec
ljmp
mov
repnz
mov
pop
cmp
inc
pop
in
rcll
out
stos
push
fldz
dec
push
cs
inc
push
push
out
lods
push
lods
icebp
inc
push
cs
xor
lock
movsl
jmp
push
jl
push
push
push
jmp
push
dec
jmp
push
xor
push
adc
out
lods
ljmp
dec
ljmp
sbb
and
jmp
mov
xor
jno
xor
imul
xor
imul
xor
lods
mov
sub
js
pop
cmp
push
das
jae
in
cs
cmp
sub
sub
cmp
sti
cmp
add
jno
icebp
cmp
test
jge
mov
jmp
lea
xor
dec
xor
mov
in
cs
sahf
shrb
add
lcall
rcrb
lods
jp
aaa
jns
aaa
add
and
dec
ja
cmp
jne
cmp
je
cmp
cld
jno
aas
jb
hlt
jmp
hlt
decl
add
jnp
dec
xor
jg
xor
sahf
xor
push
xor
lods
xor
jp
xor
jp
xor
jnp
xor
ret
js
ss
js
ss
dec
aaa
pop
jns
aaa
mov
ja
cmp
fs
mov
and
fsub
lret
dec
fdiv
ret
jns
dec
mov
rcr
subl
decl
lret
out
mov
jg
icebp
mov
pop
pusha
repnz
xchg
repnz
pop
pop
repz
pop
out
xchg
mov
popf
repnz
pop
in
mov
cmpsl
repz
lcall
sbbb
out
js
pop
out
leave
shl
js
dec
in
lock
sarl
shll
mov
ljmp
mov
call
inc
enter
mov
and
shl
leave
sbb
fmulp
shl
leave
leave
in
leave
shl
leave
fxam
sahf
leave
shl
xchg
leave
imul
out
xor
add
pop
add
mov
mov
lock
add
mov
int
arpl
adc
sub
lds
clc
lds
cmp
push
cmp
pop
adc
dec
push
inc
cmp
inc
repnz
cmp
cmp
xor
inc
push
pop
cmp
lahf
cmp
cs
aaa
ret
aaa
pusha
cs
aaa
cmp
movsb
ss
out
or
in
xchg
jmp
xchg
mov
repnz
pop
xor
sbb
xor
pop
adc
arpl
xor
pop
cmpsb
xor
mulb
xor
mov
aaa
xchg
bound
bound
mov
cmp
imul
cmp
gs
data16
fbld
cmp
pushw
sarw
data16
cmp
insb
push
cmp
test
imul
out
cmp
mov
sub
pop
nop
sbb
jbe
jmp
xchg
add
sub
mov
push
pop
loope
pop
jp
push
push
pop
jecxz
leave
mov
sub
mov
dec
mov
xchg
loop
test
in
loop
cltd
aam
cmpsl
xchg
loop
mov
loop
jns
loop
jno
loop
imul
mov
or
shlb
mov
jbe
inc
add
mov
cwtl
rcrl
dec
aam
mov
aad
jae
xchg
aam
mov
xor
adc
mov
int3
sub
mov
fcmovnbe
ret
aas
fcoml
les
dec
les
fstpt
sbb
faddp
insb
ret
out
ret
add
fimull
or
xor
pop
ret
aaa
ret
and
aas
fstl
ret
xchg
rolb
loop
cmp
cmp
sarb
sbb
rcll
mov
lods
ss
call
shlb
dec
shl
xor
push
mov
cmp
nop
pusha
popa
xor
cwtl
push
mov
add
xor
inc
in
push
cmp
cmp
test
mov
pop
xchg
mov
fidivs
ret
cmp
xor
adc
add
pop
das
xor
arpl
sub
xor
xchg
cmp
mov
lods
data16
loope
add
cmp
popa
sub
add
cmp
inc
cmp
push
cmp
pop
popa
bound
dec
popa
xchg
sub
cmp
fs
xor
cmp
fnstcw
adc
call
cmp
aad
lcall
cmp
insb
ret
cmp
xchg
popa
sub
mov
push
push
dec
xchg
lcall
mov
je
jmp
pop
shlb
sahf
rcrb
insb
iret
dec
jg
iret
cmpb
out
jg
rorl
shlb
pop
mov
shlb
pop
shl
mov
push
int3
and
mov
pushf
fstpt
in
fistl
cmpb
out
cmp
stc
jp
out
lcall
sarb
mov
xlat
sbb
dec
xlat
sub
je
xor
cmp
mov
mov
outsb
int3
mov
or
fldt
paddusb
push
fmull
faddl
das
fdivl
ret
xor
push
les
fcmovne
ret
push
ret
xchg
movsb
les
push
lds
loopne
mov
shl
scas
mov
ss
xchg
sbb
xor
daa
xor
ljmp
inc
fiaddl
hlt
loope
mov
mov
xor
shll
fcoml
xor
fistpll
xor
fisubrs
das
push
mov
xlat
cmp
gs
add
mov
sub
or
inc
cmp
inc
xchg
aaa
lock
xor
outsl
fs
pushl
cld
cmc
lcall
add
mov
pop
xlat
cmp
daa
in
cmc
decl
pop
xchg
xor
push
xor
xor
xor
push
ret
pop
es
cmp
xor
xor
and
xor
and
xor
and
stc
pop
scas
xor
sub
and
sbb
mov
rcr
fwait
push
shl
adcl
in
jnp
shl
xor
std
jnp
rolb
pop
jbe
adc
pop
xchg
and
mov
jbe
cmp
inc
mov
rclb
rcrb
push
shlb
push
shrb
not
jne
not
jge
out
test
rorl
pusha
jle
adc
rorl
sub
mov
mov
lret
mov
ror
mov
sarl
mov
shrl
mov
sarb
stos
mov
rorl
mov
rorl
mov
sar
mov
shrl
mov
shrl
mov
shrl
mov
sarl
mov
shrl
mov
ror
mov
ror
mov
fcompl
jge
add
mov
push
rol
mov
cmp
cs
fcom
fdivrl
add
inc
leave
js,pn
jns
sbb
cmp
sub
xor
fstpt
push
gs
adc
cmp
ret
aaa
stos
pop
mov
xor
dec
aaa
jae
push
aaa
mov
out
xor
out
xor
cmp
hlt
imul
xor
xor
xor
fninit
xor
leave
loopne
js
add
das
mov
imul
add
mov
add
shrl
add
aaa
push
dec
jmp
pop
pusha
xor
lahf
pop
cmpl
das
pop
xor
sbbl
cmp
popa
js
xlat
popa
mov
push
fdivrl
mov
ds
push
pop
ja,pt
clc
ds
push
hlt
jmp
mov
pushl
push
xor
pop
js
add
sahf
xor
shlb
push
jmp
xlat
push
and
enter
sbb
xor
push
lahf
xor
push
lret
pop
iret
or
shll
fcmovbe
mov
sub
repnz
jno
aas
popf
rcl
popf
test
push
jge
les
jp
rcrl
jecxz
mov
icebp
bound
inc
pop
push
shll
jmp
push
add
adc
in
mov
je
push
mov
fdivs
xlat
shll
cli
fisubl
test
fnstenv
outsl
int3
adc
bound
push
fmuls
mov
pop
xlat
ds
xor
adc
ljmp
mov
shl
mov
adc
xchg
hlt
into
add
mov
int
shrl
icebp
mov
mov
fldcw
mov
fdivrs
mov
fmuls
mov
imul
mov
ljmp
mov
roll
in
arpl
pop
xor
mov
mov
imul
je
pop
sbb
xchg
pop
cmp
popf
ds
das
in
aad
comiss
cmp
das
cmpsb
dec
imul
inc
mov
cs
push
inc
cs
dec
pop
cs
fdivrs
sub
mov
fildl
adc
lret
jl
in
xchg
sub
ficompl
add
inc
dec
aaa
add
gs
sub
aaa
mov
inc
adc
addl
cmp
inc
mov
cmp
cmp
das
cmp
pop
cmp
insl
cmp
inc
xchg
cmp
inc
les
stc
inc
cli
cmp
inc
inc
cmp
dec
xchg
cmp
dec
mov
cmp
inc
fwait
cmp
pop
dec
cmp
outsb
pop
test
movsb
pop
lret
cmp
cmp
ficompl
rcrb
mov
rcrb
sbb
cmpb
mov
push
xor
push
pop
add
int
inc
sar
mov
incb
jno
scas
mov
pop
shr
sahf
jge
push
lahf
test
sbbl
or
sbb
dec
jl
int
pop
mov
or
jmp
pop
cmp
int
mov
scas
int
mov
inc
int3
popa
lcall
xlat
or
adc
rolb
dec
xlat
add
cmp
xlat
fdivrs
or
mov
int
pushf
mov
cld
fcmovnb
dec
xlat
cmc
shrb
rclb
cmp
mov
xchg
xlat
pop
rcr
xchg
mov
rcr
ja
and
mov
mov
push
mov
cwtl
fidivrl
mov
push
fcmove
mov
cmp
repnz
sub
mov
sub
mov
sub
out
sub
out
sub
shrb
call
sub
icebp
sub
mov
sub
add
xor
add
mov
and
cmp
pop
pop
push
sub
jnp
xor
stos
inc
dec
cmp
pop
pusha
cmp
dec
jg
ljmp
cmp
push
in
cmp
dec
sbb
cmp
fcomp
ss
push
ss
scas
xor
ds
pop
mov
aas
pop
imul
add
js
call
mov
add
pop
inc
xor
pop
outsl
xor
pop
xchg
xor
pop
ret
pop
shlb
pop
in
xor
pop
push
xor
jnp
repz
jg
or
xor
push
fdivs
adc
pop
add
gs
dec
xor
push
or
adc
cmp
inc
pop
add
jl
ss
lds
loope
loopne
fabs
decl
test
pop
js
int
xorb
jl
leave
int3
mov
xchg
fstl
sub
mov
leave
mov
or
lret
dec
lret
test
xor
enter
ss
in
jne
and
xchg
xor
jnp
shl
jae
xor
lds
jnp
cmpsb
pop
mov
stc
into
movsb
mov
into
mov
stos
into
arpl
pop
into
sbb
jne
loope
ljmp
mov
rorl
mov
popf
aam
mov
rcl
jbe
mov
bound
xchg
shll
mov
shlb
mov
mov
rcr
mov
pushf
shll
mov
push
fcoms
mov
fcoms
mov
mov
cs
aaa
iret
inc
leave
ss
shl
ss
cld
ss
icebp
outsb
fsts
ss
shll
leave
js
ljmp
xor
lret
loopne
shlb
push
add
push
xor
shlb
jmp
lea
xor
pop
std
xor
xor
aas
pushf
xor
jge,pt
ljmp
fldenv
sub
push
bound
xchg
pop
je
add
inc
in
cmp
inc
and
adc
inc
inc
jae,pt
mov
push
cmp
incl
lret
mov
add
pop
pop
xor
pop
les
mov
pop
fnsave
scas
pop
inc
xor
pop
add
mov
push
inc
aaa
or
aaa
dec
pop
call
cmp
inc
fnstcw
mov
cmp
cmp
inc
cmp
inc
lea
mov
enter
enter
mov
add
mov
shrb
stc
iret
fwait
mov
push
iret
cmp
int
popf
and
shl
lcall
int3
jnp
rclb
xorb
js
sar
pusha
inc
shll
and
cltd
push
mov
mov
hlt
xchg
les
mov
mov
and
rol
in
das
mov
xor
nop
leave
leave
mov
nop
scas
or
cmp
xchg
xor
add
mov
shll
mov
rcl
adc
imul
mov
jns
sub
inc
rcl
mov
shrb
insl
rorb
mov
rorb
mov
lret
jge
ror
push
mov
int3
shll
push
mov
mov
lret
nop
lret
je
xor
ljmp
mov
cmp
pop
xor
pop
mov
xor
rdtsc
inc
inc
push
xor
inc
pop
xor
loop
xor
fildl
cmp
imul
out
mov
das
jns
inc
das
dec
mov
jne
jmp
shl
cs
adc
mov
out
pop
mov
imul
int3
cmp
js
in
push
jge
or
cmp
push
pop
cmp
push
inc
fidivrs
pop
inc
idivb
imul
cmp
aas
sub
cmp
enter
aam
pop
ds
cmp
aas
fnstsw
rolb
insb
inc
push
aas
add
ja
out
idiv
mov
add
pop
jl
lcall
xor
pop
imul
adc
xor
push
mov
lret
cmp
xor
cmp
pop
xor
cmp
ss
cmp
cmp
add
outsl
lds
loope
rolb
push
jmp
ja
lret
push
lret
jo
xchg
fstl
in
les
and
nop
enter
leave
mov
in
enter
mov
jno
ror
mov
lods
lret
inc
addl
or
lcall
lret
fdivrl
test
scas
mov
sbb
stc
stos
add
stos
mov
ljmp
mov
shll
fwait
dec
aam
fwait
gs
fwait
pushf
shll
pushf
jecxz
fwait
pushf
repz
pushf
rcl
push
pushf
sub
xchg
popf
shll
shll
int3
shll
rcll
sahf
js
clc
popf
mov
cmc
sahf
repz
inc
lahf
lods
iret
hlt
lahf
sahf
rclb
mov
rcl
mov
mov
add
cmp
add
push
sbb
and
bound
ss
push
fbstp
arpl
xor
mov
mov
ds
cmp
xor
pop
lcall
xorb
shll
adc
leave
xor
fucomip
xor
add
xchg
xor
xor
mov
sub
sbb
cmpb
das
adc
pop
das
ficoms
cs
cs
mov
dec
xor
fistps
xor
ret
pop
xchg
ss
push
sub
jl
push
aaa
rclb
aaa
or
aaa
sti
push
shll
add
or
cmp
push
mov
cmp
push
mov
add
cmpb
and
cmp
xor
pop
lock
stos
push
enter
fidivl
xchg
push
repz
xchg
push
and
aaa
push
xchg
cmp
push
push
cmp
sbb
mov
lret
inc
lret
and
mov
mov
xor
imul
xor
lcall
add
orl
lea
inc
mov
arpl
inc
or
push
inc
inc
push
pop
inc
xchg
enter
rcl
scas
mov
rolb
test
inc
or
jle
cs
addr16
orl
mov
xor
fwait
xor
lcall
imul
dec
cmp
cmp
mov
pop
cmp
mov
adc
mov
cmpsl
or
cmpsl
push
aas
fbld
lods
inc
pop
cmpsb
jl
je
mov
inc
ja
cmc
inc
pop
cmpsl
pop
inc
mov
mov
xor
fwait
xor
sbbl
adc
subb
jbe
das
jnp
std
cs
pop
xor
dec
popa
daa
das
xor
das
push
roll
xchg
shlb
mov
cs
cltd
pop
cs
mov
subb
inc
cmp
jne
cmp
enter
inc
cmp
js
adc
xor
and
test
sbb
mov
pop
xor
mov
xlat
cs
xchg
dec
sub
aaa
cwtl
movsb
sub
aad
jbe
or
mov
cmp
cmpsb
or
out
ret
ds
std
ds
int3
and
ds
push
aas
push
int3
movsb
aas
push
int3
add
ja
add
push
mov
add
xor
cltd
cmp
jae
dec
xor
inc
xor
push
jnp
mov
mov
out
cwtl
lds
and
xorb
lcall
cs
xor
pushl
mov
mov
popf
subb
jge
das
hlt
jge
sub
adcb
jp
sub
loop
mov
sub
pop
cwtl
sub
ret
ret
sub
push
shl
jg
adc
dec
add
or
cltd
xor
xlat
subl
ja
cmp
je
cmp
fs
push
push
push
cmp
push
dec
cmp
jg
pop
lds
cmp
sub
sub
movsl
or
movsl
mov
inc
movsl
mov
or
movsl
push
ds
movsl
jne
in
movsb
fs
add
mov
add
lahf
loope
mov
bnd
push
cmp
cmpsl
mov
inc
rcrl
and
mov
xor
mov
pushf
jno
or
jno
stc
pushf
dec
xor
popf
push
xor
popf
add
ret
xor
and
xor
push
xor
add
inc
xor
push
cmp
pop
xor
pop
bound
repnz
mov
cli
pop
xchg
xor
pop
jp
lret
xor
mov
mov
mov
lcall
pushf
lret
pushf
shlb
xor
xor
ljmp
jl
xor
loop
cmc
pop
scas
das
into
popa
mov
mov
add
cmp
lcall
cmp
sub
pop
movsl
aam
jmp
movsb
cmp
mov
push
cmp
cmp
lock
mov
sub
or
cmpsl
cmp
pop
lahf
sarb
lahf
clc
ds
mov
gs
out
add
add
popf
add
mov
add
xchg
inc
xor
sahf
dec
xor
nop
xor
mov
dec
xor
arpl
pop
popf
insb
xor
popf
jnp
jg
in
sub
jp
sub
addl
xchg
arpl
je,pn
fildll
mov
roll
mov
shl
mov
jl
cmpsl
stc
xor
daa
xchg
in
lret
xor
xchg
test
cmp
imul
add
rcrb
xor
cmp
ret
aaa
mov
mov
push
lea
mov
xor
cwtl
arpl
add
sarb
or
sub
arpl
mov
das
fstl
fdivrl
sub
ljmp
mov
xor
pushf
xchg
dec
pushf
cmpsb
xor
cmpsb
xor
add
pop
imul
pop
jae
lea
xor
mov
xchg
xor
ret
fnstsw
mov
mov
or
fwait
or
insl
jle
sub
jmp
lea
xor
gs
cmp
xor
xor
enter
rorb
cs
lods
ss
cltd
loop
fldenv
lcall
andl
add
aaa
cli
incl
mov
imul
xchg
pushf
cmp
mov
repz
out
add
popl
mov
mov
cwtl
movsb
xor
mov
inc
pushf
cmp
leave
cmp
popf
or
mov
sahf
dec
cmp
mov
je
sahf
popf
cmp
sahf
fistpll
outsl
mov
mov
cmp
lods
cmp
cmp
jb
sub
push
sub
add
jbe
fnstcw
loope
je
shlb
mov
mov
xor
cltd
pusha
aaa
nop
test
aaa
mov
jp
sub
mov
add
sbb
dec
pop
adc
js
pop
repnz
mov
jl
aam
nop
das
call
popf
pop
xor
lcall
das
js
pop
xor
wrmsr
jnp
xor
fcoml
inc
xor
xchg
insb
xor
xchg
jne
lock
and
pop
xchg
int3
xchg
in
adcb
lcall
cmp
mov
mov
push
adc
mov
mov
sub
mov
or
xchg
sbb
xchg
ljmp
xchg
add
stos
scas
cmp
fwait
iret
cmp
xchg
mov
add
cmp
mov
jmp
pop
jae
std
pop
mov
inc
pop
jmp
add
mov
mov
or
gs
sti
das
push
pushf
repz
test
xor
jl
xor
jl
xor
pop
xor
inc
pop
imul
pop
arpl
add
mov
mov
add
add
ja
add
ja
add
mov
add
add
aaa
mov
add
mov
add
daa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
bound
add
mov
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
cmpsl
mov
add
mov
add
mov
add
add
ja
add
mov
add
add
ja
add
ja
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
mov
mov
mov
mov
mov
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
testl
add
out
add
mov
add
mov
add
cmpsl
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
add
ja
add
mov
add
add
aaa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
mov
jmp
lea
add
lea
add
daa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
ja
add
ja
add
mov
add
add
aaa
mov
add
mov
add
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
bound
add
bound
add
bound
add
bound
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
popl
add
add
aaa
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmpsl
mov
add
mov
add
add
mov
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
ja
add
ja
add
add
add
mov
add
add
ja
add
mov
add
add
aaa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmpsl
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
xor
add
xor
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
cmpsl
xchg
add
xchg
add
xchg
add
cmpsl
xchg
add
add
ja
add
popl
add
add
ja
add
ja
add
popl
add
add
aaa
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
out
add
out
add
testl
add
out
add
mov
add
mov
add
cmpsl
mov
add
mov
add
mov
add
cmpsl
mov
add
mov
add
add
mov
add
add
ja
add
ja
add
mov
add
add
aaa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
xor
add
xor
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
daa
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
cmpsl
xchg
add
xchg
add
xchg
add
popl
add
add
popl
add
add
ja
add
ja
add
popl
add
add
mov
add
and
add
and
add
and
add
and
add
mov
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
mov
jmp
lea
add
lea
add
mov
add
add
ja
add
mov
add
add
aaa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
out
add
out
add
mov
add
mov
add
cmpsl
mov
add
mov
add
mov
add
mov
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
mov
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
lea
add
add
mov
jmp
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
add
mov
add
mov
add
add
ja
add
mov
add
add
ja
add
ja
add
mov
add
add
aaa
mov
add
mov
add
or
push
add
xchg
dec
cmp
xor
xor
test
into
repz
das
ret
fiaddl
call
sub
movsl
aas
cwtl
cs
lret
je
sub
repz
out
mov
jae
icebp
adc
pushf
and
cmpsl
cmpsl
dec
aad
cmp
cmc
daa
setg
movsb
fstpl
mov
adc
mov
and
cmp
push
or
out
ss
fmulp
lea
push
mov
add
cmpsb
dec
shrb
call
ret
je
es
es
mov
cmp
dec
aam
repz
cld
rorl
cmp
mov
mov
sub
xchg
stos
lret
andb
mov
or
cltd
fcomp
sbb
lret
xchg
fadds
inc
mov
cmp
int3
sub
movsl
bound
out
add
push
mov
in
mov
movsb
nop
mov
imul
or
pushf
add
sbb
jmp
loop
push
cmc
aaa
aaa
ficomps
push
fdivs
mov
mov
add
sbb
mov
and
sub
push
add
dec
jbe
mov
fiadds
adc
sbb
add
mov
sub
inc
stos
leave
push
push
mov
add
and
and
fsubrl
push
sub
sbb
icebp
xchg
or
flds
inc
jmp
jle
faddl
mov
out
mov
ret
xchg
inc
cltd
incl
xlat
stc
mov
add
shrl
mov
add
loope
pop
dec
insb
repnz
js
xchg
add
mov
sub
mov
ret
out
mov
adc
addr16
sbb
sbb
popl
clc
cmpsl
pop
popf
jnp
stc
dec
loopne
mov
xchg
jns
sbb
leave
pusha
add
push
adc
add
add
add
push
add
xor
push
jb
add
vpmacswd
cld
adc
or
pop
mov
jmp
iret
push
mov
add
cmpl
loopne,pt
mov
add
add
in
leave
fisttps
xchg
clc
adc
add
add
call
fildll
push
add
leave
sti
mov
popl
dec
xchg
add
cld
dec
leave
out
add
add
or
aaa
mov
add
mov
sbb
add
adc
add
fsubl
lods
lret
add
pop
mov
add
mov
mov
jle
or
add
in
adc
das
mov
push
mov
or
mov
or
add
shl
xor
mov
ror
aas
int3
push
aas
int3
dec
aas
int3
fildl
out
cmp
hlt
mov
and
sub
cs
or
mov
push
adc
xchg
scas
das
push
mov
push
mov
inc
add
dec
mov
cld
mov
mov
or
add
xlat
testl
add
lret
add
xlat
jmp
pop
xchg
scas
das
lret
dec
dec
add
mov
pop
aas
add
dec
int3
pop
inc
int3
push
inc
int3
dec
inc
int3
mov
jnp
add
add
add
les
pop
add
aas
int3
sarb
int3
lret
int3
cmp
out
push
jg
mov
push
jmp
into
ror
aas
int3
sarb
int3
lret
int3
cmp
out
jp
imul
lret
add
fwait
repz
ds
mulb
add
add
clc
mov
sub
les
mov
pop
push
adc
and
testl
rol
testl
xchg
ds
or
das
mov
outsl
inc
adc
mov
mov
cltd
cmc
add
mov
dec
outsl
pop
out
add
mov
ljmp
ror
pop
int3
push
pop
int3
dec
pop
int3
fistl
out
xchg
or
inc
mov
ror
pop
int3
push
pop
int3
dec
pop
int3
fistl
out
cmp
xchg
push
jnp
mov
add
mov
jmp
push
cli
push
or
sbb
mov
or
adc
cld
add
pop
jo
adc
sbb
or
cli
add
pop
mov
push
inc
lock
push
inc
cvtps2pi
jle
push
or
push
dec
clc
adc
jnp
dec
xchg
dec
or
jl
dec
es
or
push
or
xchg
ljmp
mov
cmp
mov
adc
in
fcomp
mov
das
add
mov
call
push
or
add
test
add
mov
lock
mov
cmpb
add
imul
adc
xchg
add
mov
aas
add
iret
testl
fldt
mov
mov
mov
pop
mov
adc
adc
pop
add
xchg
add
adc
hlt
adc
xchg
add
pop
mov
add
mov
jnp
mov
cmpb
lahf
cld
push
and
add
or
add
stos
mov
adc
subl
pop
mov
sub
call
mov
jmp
inc
sub
addl
xchg
mov
xor
mov
pop
mov
adc
xchg
add
into
notl
push
incl
or
or
into
xlat
mov
mov
adc
mov
add
adc
hlt
add
mov
mov
add
adc
mov
hlt
jmp
push
int3
cmp
cmpl
lock
lret
add
mov
mov
clc
mulb
add
adc
clc
mov
daa
add
adc
cld
adc
roll
add
shl
sub
ror
pop
int3
mov
pop
aas
add
mov
mov
adc
add
mov
enter
push
int3
cmp
out
mov
iret
add
add
mov
aam
mov
out
mov
xchg
mov
adc
pop
shl
mov
add
dec
outsl
inc
or
xor
mov
adc
test
or
adc
clc
add
xchg
adc
leave
sbb
cmc
orb
arpl
mov
popa
ds
arpl
mov
mov
dec
mov
xor
int3
ficoml
int3
rclb
int3
lret
int3
pop
adc
mov
cmp
lcall
movsl
mov
int3
push
pop
int3
dec
pop
int3
fistl
out
jp
mov
add
adc
or
iret
fisttpl
xchg
mov
pop
mov
add
jg
push
cs
aas
or
jbe
ds
mov
push
clc
mov
add
xchg
idiv
icebp
or
push
mov
xor
popl
push
and
lock
iret
fisttps
pop
mov
mov
mov
hlt
or
mov
add
pop
add
adc
hlt
adc
mov
jo
add
jg
je
adc
or
mov
adc
adc
xchg
and
dec
out
push
shl
jg
mov
xchg
movsb
inc
mov
mov
cmovbe
rorl
push
add
das
add
mov
hlt
adc
mov
pop
ret
jmp
cld
cmovle
cmp
and
into
mov
push
data16
clc
ljmp
mov
sbbl
outsb
or
mov
jecxz
cmpb
cwtl
pop
push
mov
xor
mov
dec
xor
and
sub
ss
push
mov
xor
mov
repz
add
mov
jne
mov
push
adc
mov
push
sahf
out
into
das
rorb
inc
fadds
inc
add
adc
loopne
shl
mov
daa
push
mov
mov
hlt
orl
push
cs
mov
add
push
inc
fmuls
mov
dec
loopne
aaa
and
mov
xor
mov
inc
mov
push
add
js
das
dec
mov
push
das
push
call
or
sub
add
jnp
inc
mov
hlt
test
outsl
mov
push
adc
mov
jnp
and
mov
hlt
adcl
aam
popa
movl
jmp
or
imul
add
mov
hlt
or
mov
adc
aam
movl
mov
mov
pop
adc
in
imul
idiv
test
das
and
mov
mov
shll
push
push
mov
mov
mov
mov
add
mov
int3
dec
dec
int3
fistl
mov
xchg
mov
mov
int3
mov
mov
aas
add
mov
add
pop
pop
int
int3
cmp
push
ss
aas
mov
cli
das
push
mov
and
hlt
decl
dec
pop
mov
mov
wrmsr
rorb
mov
fisttpl
int3
fistl
out
jp
mov
add
mov
add
out
add
pop
add
mov
add
mov
inc
or
xchg
out
lret
imul
outsb
aas
add
xchg
pop
xchg
pop
and
mov
xor
mov
and
mov
in
imul
mov
add
popa
out
das
dec
mov
jne
mov
lcall
ljmp
jp
aas
add
shr
mov
adc
call
lret
xor
fsubl
add
xchg
and
das
rorb
movl
inc
mov
push
add
mov
add
cmp
xchg
das
push
mov
adc
in
jbe
inc
mov
or
push
mov
ficompl
decl
sbb
aad
sbb
mov
mov
sbb
mov
repnz
rorb
hlt
incl
or
sbb
cld
jne
repz
adc
loopne
adc
mov
sbb
imulb
dec
mov
add
xor
add
mov
aas
add
hlt
clc
inc
or
add
add
adc
adc
aas
mov
adc
mov
imull
add
mov
lret
and
add
mov
orl
push
adc
clc
test
repz
adc
lock
mov
lea
aas
add
adc
cmovp
add
imul
lea
repnz
dec
mov
inc
adc
jmp
adc
in
movl
inc
add
inc
and
mov
mov
xor
or
fbld
add
jns
jle
sti
xor
jne
mov
or
pop
and
mov
and
mov
and
and
adc
mov
xor
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
adc
fwait
xor
mov
xor
mov
xor
mov
add
cmp
into
mov
pop
ss
mov
fidivs
add
mov
je
imul
cmp
mov
cmp
mov
cmp
mov
sbb
xlat
cmp
scas
icebp
cmp
xorl
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
lret
cmp
lock
cmp
push
mov
cmp
and
sbb
push
sub
mov
mov
ds
mov
ds
mov
ds
mov
add
mov
sbb
cmc
movsl
mov
aas
xorb
aas
das
mov
aas
and
lcall
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
mov
.byte
.byte
mov
popf
add
movsb
popf
add
xchg
popf
add
xchg
add
push
add
push
popf
add
ds
add
sub
add
or
add
loop
add
lret
add
popf
add
mov
add
add
add
lcall
add
add
add
add
add
outsb
cwtl
add
xchg
add
mov
add
cwtl
add
ficompl
add
add
add
sbb
add
ds
add
push
cltd
add
bound
add
xchg
cltd
add
cmpsb
cltd
add
mov
add
cltd
add
aam
add
in
add
cld
cltd
add
or
add
xor
add
pop
lcall
push
cwtl
add
mov
add
mov
add
rcrb
add
lcall
add
add
push
fwait
add
and
add
dec
fwait
add
data16
add
jp
add
xchg
fwait
add
test
add
ret
add
fwait
add
out
fwait
add
cli
fwait
add
push
pushf
add
adc
add
pushf
add
ss
add
inc
pushf
add
loopne
add
into
xchg
add
inc
cwtl
add
cs
add
and
add
push
cwtl
add
rclb
add
xchg
add
js
add
bound
add
inc
xchg
add
xor
add
or
add
cli
xchg
add
call
lcall
add
add
pop
pushf
add
add
add
cli
popf
add
or
add
sub
add
inc
sahf
add
pop
sahf
add
insb
sahf
add
jbe
add
xchg
add
lcall
add
add
int3
sahf
add
fcomps
add
in
sahf
add
negb
add
push
lahf
add
sbb
add
cs
add
ss
add
ds
add
dec
lahf
add
push
lahf
add
pusha
lahf
add
insb
lahf
add
jbe
add
sbbb
add
add
stos
lahf
add
add
add
jmp
cmpl
push
lret
cmpsb
dec
adc
xor
push
adc
and
pop
and
rcr
in
nop
mov
push
dec
popa
sbb
out
ret
std
mov
cmp
adc
roll
insb
adc
stc
cmp
mov
mov
mov
dec
aaa
mov
sahf
neg
adc
movsb
adcl
or
mov
cmpsb
mov
sbb
jecxz
xchg
dec
dec
cwtl
push
xor
add
cmp
int3
jl
add
add
mov
into
add
push
sbb
dec
lret
aam
outsl
inc
movsb
fiadds
push
bound
movsb
cs
add
in
in
inc
ljmp
adc
and
lret
mov
mov
add
push
push
inc
mov
push
mov
fistpll
bound
std
lods
inc
fsubl
aaa
mov
fst
pop
lods
jecxz
or
fnstsw
cmp
xorb
jbe
stos
hlt
add
dec
push
xchg
fdivrl
or
mov
rorb
adc
repnz
push
pop
inc
js
loope
adc
cmp
mov
xlat
xor
pop
test
push
mov
xchg
cmp
loope
fistpl
imul
jmp
adc
push
sub
mov
xchg
push
mov
movsb
fisubrl
mov
or
push
dec
mov
popa
push
out
mov
adc
xchg
push
pop
sub
mov
xchg
push
mov
test
and
mov
mov
pop
mov
fwait
in
xor
lods
or
adc
aam
data16
add
sti
mov
or
pop
popf
fsub
cli
dec
xchg
mov
push
xchg
sbb
inc
arpl
add
add
add
add
dec
pushf
add
pop
nop
add
cmp
add
add
add
push
xchg
add
in
xchg
add
rcrb
test
add
in
popf
add
add
add
mov
add
cwtl
xchg
add
popf
add
movsb
popf
add
xchg
popf
add
xchg
add
push
add
push
popf
add
ds
add
sub
add
or
add
loop
add
lret
add
popf
add
mov
add
add
add
lcall
add
add
add
add
add
outsb
cwtl
add
xchg
add
mov
add
cwtl
add
ficompl
add
add
add
sbb
add
ds
add
push
cltd
add
bound
add
xchg
cltd
add
cmpsb
cltd
add
mov
add
cltd
add
aam
add
in
add
cld
cltd
add
or
add
xor
add
pop
lcall
push
cwtl
add
mov
add
mov
add
rcrb
add
lcall
add
add
push
fwait
add
and
add
dec
fwait
add
data16
add
jp
add
xchg
fwait
add
test
add
ret
add
fwait
add
out
fwait
add
cli
fwait
add
push
pushf
add
adc
add
pushf
add
ss
add
inc
pushf
add
loopne
add
into
xchg
add
inc
cwtl
add
cs
add
and
add
push
cwtl
add
rclb
add
xchg
add
js
add
bound
add
inc
xchg
add
xor
add
or
add
cli
xchg
add
call
lcall
add
add
pop
pushf
add
add
add
cli
popf
add
or
add
sub
add
inc
sahf
add
pop
sahf
add
insb
sahf
add
jbe
add
xchg
add
lcall
add
add
int3
sahf
add
fcomps
add
in
sahf
add
negb
add
push
lahf
add
sbb
add
cs
add
ss
add
ds
add
dec
lahf
add
push
lahf
add
pusha
lahf
add
insb
lahf
add
jbe
add
sbbb
add
add
stos
lahf
add
add
add
push
add
imul
insb
insb
outsl
arpl
add
add
je
jb
arpl
fs
jae
add
repnz
fs
imul
js
add
addl
imul
imul
jns
add
pusha
add
jo
inc
imul
jb
popa
je
inc
imul
jns
add
jb
inc
jb
popa
je
inc
jbe
outsb
je
add
js
inc
jb
popa
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
jb
popa
je
dec
jne
gs
add
xchg
add
gs
je
push
jb
arpl
jae
add
mov
inc
bound
inc
jb
popa
imul
mov
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
push
add
pop
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
outsb
fs
insb
outsl
jae
add
fs
imul
gs
add
add
outsb
fs
gs
inc
imul
jb
gs
imul
insl
add
je
outsl
insl
insl
push
je
je
add
cmpsl
add
je
jne
jb
outsb
je
imul
jns
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
dec
add
mov
inc
gs
imul
push
jo
arpl
add
inc
jb
jbe
push
jns
gs
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
imul
bound
gs
add
out
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
and
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
jns
je
insl
inc
imul
jns
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
pop
add
je
gs
jo
popa
je
inc
add
data16
je
imul
je
add
gs
gs
imul
inc
gs
gs
imul
addb
gs
imul
imul
jns
add
popf
add
popa
jo
insb
insb
outsl
arpl
mov
jo
jb
add
mov
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
out
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
icebp
add
fs
imul
add
stc
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
jo
imul
insb
add
add
insb
je
inc
jns
gs
outsl
push
imul
sub
dec
jo
outsb
inc
imul
outsb
addr16
add
xor
dec
jo
outsb
push
jb
arpl
jae
push
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
push
fs
imul
gs
je
jbe
outsb
je
add
inc
outsl
insl
insl
push
je
je
add
mov
inc
outsl
insl
insl
push
imul
add
add
je
jbe
outsb
je
add
add
je
imul
bound
gs
add
in
add
je
popa
jae
inc
jb
outsl
jb
add
push
outsb
push
gs
js
gs
imul
gs
sub
insl
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
push
popa
imul
je
jo
gs
bound
arpl
add
popa
imul
insb
gs
bound
arpl
add
imul
outsl
dec
jne
je
inc
jns
add
je
inc
imul
je
arpl
inc
add
test
jb
insl
jo
add
lods
add
jae
jb
insl
jo
inc
add
jb
jo
inc
add
mov
insb
jae
jb
jo
outsb
inc
add
jb
outsb
inc
add
mov
insb
jae
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
fs
arpl
inc
add
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
add
inc
fs
outsl
outsb
je
gs
jne
arpl
add
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
mov
inc
gs
gs
arpl
popa
jo
add
dec
xor
cs
insb
add
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
pop
add
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
jne
insb
push
imul
gs
imul
push
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
imul
arpl
jne
je
imul
outsl
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
add
outsb
push
jb
arpl
jae
outsl
imul
add
add
addr16
insb
outsl
jae
dec
gs
inc
add
addr16
outsb
jne
dec
gs
add
push
gs
outsb
jne
dec
gs
js
add
push
gs
jo
outsb
dec
gs
add
push
gs
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
ja
push
gs
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
sbb
pop
pop
arpl
inc
imul
pop
pop
addr16
popa
imul
xor
pop
pop
insb
arpl
jbe
imul
add
jo
pop
arpl
insl
outsl
fs
aas
add
jo
pop
insw
outsl
fs
push
add
jae
je
popa
jo
pop
je
jo
add
push
add
jae
je
jae
jb
popa
je
gs
add
pop
add
arpl
insb
outsb
add
pop
popa
fs
jae
pop
imul
add
pop
gs
je
jp
pop
arpl
imul
outsl
outsb
je
outsl
insb
data16
add
arpl
je
push
gs
add
movsb
add
js
je
movb
data16
insb
add
add
outsb
imul
add
bound
push
pop
insl
bound
outsb
arpl
cmp
pop
insl
bound
outsb
add
pop
insl
bound
arpl
add
popf
add
je
imul
add
je
outsb
imul
pop
ja
jae
arpl
add
and
popa
je
imul
js
je
add
data16
add
pop
add
insb
gs
bound
add
pop
add
jae
popa
arpl
jnp
insl
gs
insl
outsl
jbe
add
insb
outsl
arpl
add
arpl
add
mov
outsb
arpl
add
arpl
add
jb
push
jae
jb
outsl
jne
add
insb
outsl
ja
jb
add
add
jae
arpl
add
jbe
jb
cs
insb
add
add
jno
jno
jo
xor
add
add
push
jno
jno
inc
push
inc
pop
arpl
jae
jae
add
add
je
jb
popa
arpl
jnp
xor
xor
xor
cmp
sub
sub
sub
xor
xor
xor
xor
jge
add
add
addr16
jo
outsb
dec
gs
add
data16
addr16
add
add
add
add
addb
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
nop
add
add
add
addb
add
add
add
clc
add
addb
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
pop
or
add
add
sbb
add
call
add
add
add
add
add
push
movb
add
add
movb
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
add
lock
add
add
incl
ud0
xchg
add
add
sti
sti
sti
add
add
incl
ud0
xchg
add
ud0
xchg
add
ud0
xchg
add
or
int3
inc
ja
cmpb
add
add
int3
inc
ja
mov
add
add
or
int3
inc
inc
jo
jo
lock
js
add
or
int3
inc
inc
jo
add
add
add
addb
add
add
inc
mov
ja
ja
mov
add
push
ud0
mov
pop
add
mov
add
ja
orb
add
ja
inc
add
add
add
mov
pop
xchg
ja
add
js
xchg
mov
push
js
add
add
add
push
add
add
vmread
jo
push
dec
add
vmread
jo
add
or
add
vmread
add
pop
or
ror
vmread
add
pop
or
or
int3
vmread
add
pop
or
or
int3
vmread
add
pop
or
int3
int3
int3
vmread
add
pop
or
int3
int3
int3
vmread
add
pop
addb
add
add
js
add
add
add
pop
js
mov
addb
add
add
pop
ja
ja
ja
ja
addb
add
add
add
clc
addb
add
add
add
ja
ja
ja
jg
add
sarb
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
psllq
add
std
add
jne
add
psubb
add
fiadds
add
iret
add
movntq
add
jmp
add
add
add
add
and
add
add
add
call
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
outsb
add
add
jae
and
push
add
je
jne
jo
and
push
add
add
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
jp
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
popa
add
add
jp
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
dec
add
add
popa
add
add
insb
add
jns
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
popa
add
outsb
add
add
je
or
inc
add
arpl
add
jae
outsl
add
imul
