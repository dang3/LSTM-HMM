xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
lcall
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
call
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
popf
pushl
pop
dec
call
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
bound
add
sahf
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
mov
add
and
add
and
add
and
add
add
push
and
add
add
add
add
dec
and
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
add
add
add
adc
add
push
and
add
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
push
and
add
add
add
add
sahf
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
mov
add
and
add
and
add
and
add
add
push
and
add
add
add
add
dec
and
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
add
add
add
adc
add
push
and
add
and
add
and
add
add
add
gs
popa
jae
inc
jb
outsl
jb
add
dec
jo
outsb
dec
jne
gs
add
roll
dec
gs
jo
jb
add
imul
je
imul
push
add
out
inc
gs
imul
bound
gs
add
movb
gs
jne
jb
outsb
je
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jb
jbe
push
jns
gs
add
insb
jae
jb
outsb
inc
add
add
fs
imul
add
adc
push
gs
insl
gs
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
gs
jb
jns
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
insb
jae
gs
popa
insb
jne
add
gs
jb
arpl
jae
gs
jo
add
add
imul
outsb
je
outsl
insb
add
add
gs
inc
imul
imul
jb
je
arpl
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
ja
insb
outsl
outsb
gs
outsb
je
jns
add
add
jae
gs
gs
inc
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
add
popa
jae
outsb
imul
imul
popa
jae
imul
add
outsb
jne
inc
outsb
je
jns
gs
imul
ja
popa
jae
outsb
imul
imul
popa
jae
imul
add
popa
jae
outsb
imul
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
push
inc
push
dec
xor
cs
insb
add
lldt
push
gs
outsl
add
add
push
outsl
jne
je
jb
add
add
push
outsl
addr16
imul
inc
add
push
outsl
addr16
imul
add
push
inc
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jp
jl
stos
lods
lods
add
test
mov
mov
mov
ret
ret
lret
lret
lret
into
rcl
in
rcl
shl
iret
iret
iret
hlt
into
int
hlt
leave
repz
enter
mov
mov
mov
mov
lods
lods
lea
fwait
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
rcl
cld
fcom
xlat
std
fcom
xlat
xlat
aad
aam
ror
sar
int3
into
int3
aad
rcl
sar
ret
std
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
stos
stos
add
scas
sbb
mov
jnp
mov
sar
mov
leave
lret
ror
sar
aad
fcomp
xlat
call
fcom
call
aad
dec
into
int
int3
into
into
call
aad
dec
into
int
mov
mov
mov
std
cmpsb
cmpsl
test
xchg
xchg
xchg
mov
push
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int
call
rcl
call
call
fcom
call
aam
dec
into
int
lret
lret
lret
int3
int
vshufpd
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
das
push
pf2iw
sbb
xor
aaa
ss
cmp
and
adc
push
push
pop
add
add
add
add
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
ret
ret
inc
enter
sar
aam
aad
aad
aam
ror
sar
leave
leave
inc
mov
mov
ljmp
movsb
movsl
popf
popf
popf
xchg
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jge
jle
jge
jle
jno
jno
arpl
mov
cmp
cmp
pop
pop
pop
stos
outsl
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
lret
lret
dec
leave
inc
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
cltd
lcall
ds
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jnp
xchg
nop
fcoms
test
jnp
jp
jl
jp
outsb
outsb
outsb
out
addr16
push
ret
jge
jp
jns
fs
inc
inc
cmp
pop
sbb
adc
adc
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
incl
test
xchg
xchg
xchg
sahf
lahf
lahf
sti
mov
cwtl
xchg
mov
js
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
mov
std
mov
jge
jno
jb
je
jne
jle
jge
test
jnp
addr16
cmp
and
jg
cmp
mov
stos
stos
icebp
lods
lods
lods
sti
stos
lods
stos
stos
lods
stos
stos
test
movsl
std
fwait
fwait
fwait
xchg
xchg
xchg
incl
jg
jp
js
jl
jns
mov
xchg
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
push
prefetch
inc
inc
inc
dec
insl
insb
insl
jl
xchg
leave
lcall
out
lcall
std
mov
incl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
cmpsl
lods
add
pop
adc
cmpsl
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
pushf
popf
pushf
std
mov
mov
xchg
in
nop
nop
in
xchg
push
jne
cmovp
add
or
inc
sub
es
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
mov
call
mov
cmpsl
ljmp
test
pushl
mov
stos
std
rorl
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
cltd
fwait
decl
mov
decl
xchg
xchg
xchg
popf
sahf
popf
mov
test
mov
cwtl
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jae
mov
jge
test
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
aaa
jg
mov
js
mov
movsb
mov
mov
mov
lods
stos
lods
mov
movsl
add
mov
add
pusha
adc
mov
ljmp
pushf
decl
nop
xchg
call
xchg
xchg
call
xchg
lcall
sahf
sahf
mov
std
mov
lcall
mov
xchg
aad
cwtl
fwait
in
xchg
xchg
out
mov
stc
xchg
xchg
std
xchg
jb
cltd
push
cmp
push
jg
lods
inc
jl
mov
jnp
mov
jb
mov
outsb
ljmp
adc
lods
or
stos
or
mov
jge
mov
mov
stos
pushf
movsb
mov
movsb
add
mov
add
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
pushf
lcall
pushf
sahf
lcall
xchg
xchg
decl
xchg
xchg
call
xchg
cltd
cld
cltd
xchg
popf
stc
mov
xchg
pushf
cld
pushf
mov
xchg
insb
mov
xchg
push
jge
xchg
dec
jns
cltd
jbe,pt
cltd
sub
and
mov
push
jmpw
adc
stos
packuswb
stos
adc
scas
adc
mov
imul
adc
mov
imul
ds
cltd
scas
mov
lods
lods
scas
mov
movsl
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
pushf
lcall
movsb
movsl
jmp
mov
decl
mov
decl
fwait
jno
lcall
call
sub
pusha
decl
or
call
add
lcall
jmp
sbb
mov
insl
pushl
outsb
mov
and
mov
pop
jne
roll
ret
mov
scas
lods
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
mov
lcall
movsl
movsl
movsb
jmp
cmpsl
cmpsl
ljmp
cmpsb
cmpsl
lcall
decl
dec
outsl
decl
sub
mov
pop
incl
push
push
incl
add
lea
push
decl
add
cltd
add
sahf
add
or
mov
outsl
pushl
sub
mov
sub
inc
sub
inc
sub
das
jg
enter
leave
inc
mov
lea
cld
scas
mov
lret
movsb
dec
mov
mov
add
add
add
lods
movsb
test
push
push
push
adc
test
mov
lahf
cltd
sahf
jmp
stos
stos
ljmp
lods
pushl
lods
scas
jmp
jno
decl
or
incl
or
add
test
push
incl
add
mov
push
decl
add
xchg
add
cltd
add
mov
add
ljmp
sub
cmp
leave
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
cltd
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
incl
or
xchg
push
incl
add
lea
push
call
add
popf
add
add
cmpsl
add
stos
add
jno
ret
cmp
dec
inc
call
inc
call
inc
nop
call
dec
xchg
fmuls
fisttpl
fisttpl
fsts
call
test
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
cltd
xchg
cltd
add
dec
adc
jl
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
outsl
decl
sbb
call
adc
decl
push
decl
add
xchg
add
pushf
add
mov
add
test
push
gs
and
call
push
cltd
call
push
lcall
pop
pushf
ficomps
jmp
pop
pushf
jmp
pop
mov
jmp
pop
lahf
call
test
mov
test
jne
mov
mov
add
add
add
inc
inc
adc
ja
mov
mov
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
callw
sbb
or
call
add
lcall
jmp
add
mov
gs
mov
xor
call
pop
fwait
fstps
fbld
fisubs
jmp
cmpsw
jmp
fs
out
cmpsl
call
push
stos
faddl
mov
cmpsb
cmpsb
mov
sahf
mov
add
add
add
inc
inc
adc
je
cltd
xchg
lcall
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
sbb
pop
call
add
mov
add
stos
add
mov
pushl
adc
roll
fsubrl
jmp
outsb
stos
jmp
jo
jmp
jo
ljmp
in
jae
in
jbe
out
je
out
jb
jmp
mov
mov
cmpsl
cmpsb
lcall
sahf
add
jle
cmp
insl
outsb
js
mov
sahf
pushf
pushf
pushl
mov
mov
mov
mov
mov
cmpsl
lods
lcall
xor
sahf
aaa
jbe
mov
xor
lcall
call
add
movsl
add
test
pop
pushl
add
add
enter
ficoml
jecxz
mov
call
jg
in
xorl
push
xchg
push
test
ljmp
inc
mov
test
daa
mov
mov
add
bound
add
cmp
pop
pusha
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
mov
lcall
cmp
movsl
inc
jl
mov
ss
fwait
pop
call
add
add
test
pusha
ljmp
add
mov
add
iret
and
movsl
ljmp
in
lea
push
pop
push
pop
push
xchg
nop
xchg
ret
nop
sar
mov
inc
clc
stos
lods
stos
mov
sahf
popf
xor
sahf
add
add
add
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
mov
jle
lcall
jg
lods
dec
cmp
xor
pop
lcall
add
add
lods
add
mov
mov
add
enter
fdivs
mov
out
mov
out
xchg
ret
push
cltd
push
lcall
cmc
lcall
negl
int3
sti
lahf
int
cld
lcall
fidivs
cli
mov
mov
sahf
sahf
lahf
aas
xchg
nop
add
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
decl
mov
mov
mov
mov
inc
mov
leave
inc
mov
mov
ljmp
xchg
movsl
sub
lcall
jmp
add
mov
popa
mov
add
enter
rorb
je
loopne
xchg
out
lea
push
cmpsb
int
cmc
movsl
int
clc
test
sti
cmpsl
iret
sti
cmpsb
sar
cli
cmpsl
sar
std
stos
sar
std
stos
sar
std
test
jmp
mov
dec
lret
mov
mov
sahf
mov
xchg
add
lcall
xor
xor
sub
or
inc
bound
pop
xlat
je
jo
mov
rol
rol
mov
ret
ret
ret
ret
mov
enter
ret
ret
mov
cmpsb
jmp
push
mov
lods
dec
test
sahf
sbb
lcall
add
add
mov
arpl
mov
add
int3
add
fadds
jae
loopne
jl
out
pop
cmpsl
push
popf
lret
cli
lods
aam
cli
scas
sti
mov
cld
mov
std
mov
std
mov
mov
mov
std
mov
cld
mov
push
movsl
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
dec
dec
outsl
outsl
jo
xchg
lcall
xlat
fsubr
aad
fdiv
rcl
sar
lret
int3
into
dec
lret
leave
lret
lret
inc
leave
enter
scas
jmp
push
mov
stos
jge,pt
sahf
or
pop
ljmp
add
mov
add
roll
outsb
fadds
je
loopne
je
jmp
jb
cli
scas
sar
cld
mov
std
mov
fdivr
std
mov
mov
fdivr
mov
fdivr
divl
enter
int
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
out
call
test
in
leave
fsub
xlat
cli
xlat
fdivr
into
iret
into
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
aad
jno
fildl
jne
jecxz
js
out
das
xchg
clc
mov
sti
mov
loope
inc
loope
std
inc
loopne
std
fdivrp
inc
loopne
inc
std
enter
dec
loopne
cli
mov
leave
call
leave
into
mov
mov
xchg
adc
add
add
std
add
std
add
std
std
add
div
or
out
in
pop
in
out
in
sub
in
in
dec
call
call
jmp
aad
jmp
mov
xchg
cmpsl
cmp
mov
add
ljmp
add
add
lds
imul
add
loopne
js
jmp
inc
fwait
cli
mov
loop
cld
int3
jecxz
std
into
in
dec
in
std
int3
jecxz
std
int3
jecxz
std
int3
loope
call
jecxz
call
loop
call
jecxz
call
jecxz
cli
ret
fcos
in
mov
inc
ret
test
cmpsl
mov
cwtl
xchg
add
add
add
std
std
add
incl
div
clc
add
repnz
repnz
in
lock
pop
out
icebp
icebp
cmp
out
out
pop
loopne
loopne
les
xchg
sti
mov
push
pop
jmp
pop
pushl
add
movl
jno
fildl
jbe
in
jp
jmp
jge
negl
cld
mov
std
shl
dec
jecxz
shl
std
shl
std
shl
aad
xlat
out
std
jmp
std
fldl2t
fucomi
cld
shl
push
ret
aam
jecxz
fcos
lret
lret
test
xchg
xchg
and
xchg
cwtl
add
cli
add
stc
add
cld
stc
add
cmc
hlt
or
aam
xor
mov
xchg
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fildl
jbe
call
sbb
cli
ret
fdivrp
std
xlat
ljmp
fucomi
fldl2e
std
fucompp
fsubr
fucomi
fucomp
fsubrp
fucomip
fucomip
std
aam
push
aad
out
fdivr
rcl
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loope
add
mov
xchg
stos
jnp
repnz
pop
lcallw
add
mov
mov
add
into
add
add
loopne
jae
call
sub
cld
shl
fsubrp
std
fucomi
fucomi
fucompp
call
out
aad
shl
cli
iret
loope
sti
iret
loope
test
test
lret
rcr
fcom
xlat
sti
mov
mov
lcall
add
add
add
xlat
add
mov
sahf
jmp
sub
add
ljmp
add
add
lds
imul
add
add
ljmp
cli
xchg
cli
leave
loopne
cli
int3
jecxz
cli
fdivrp
clc
mov
aam
hlt
mov
into
push
mov
into
jmp
mov
sar
ljmp
imul
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
into
int3
add
sarb
lahf
xor
jmp
add
mov
addr16
mov
add
into
or
rorl
jmp
sbb
jmp
scas
lret
ljmp
std
loope
mov
cli
fdivl
lock
int
into
fsubp
iret
xlat
shl
aad
out
loope
in
out
test
out
lock
call
lret
lods
stos
stos
adc
cmpsl
cmpsl
cmpsl
add
ret
ret
ret
rol
pop
mov
stos
aam
dec
cmp
sbb
test
imul
and
jns
mov
inc
xchg
ret
push
mov
leave
arpl
hlt
rorl
mov
mov
lret
lret
rcl
lret
mov
iret
shll
xlat
rcl
jg
fcmovnu
jb
loopne
gs
jecxz
call
in
jmp
icebp
cmc
cmc
sub
cmc
cmc
and
lock
fstp
or
mov
into
add
add
add
mov
rolb
mov
stos
test
lock
jbe
ljmp
mov
sarb
mov
ret
mov
cmpsl
mov
enter
lret
jp
int3
into
addr16
iret
push
rcl
rorl
aad
aam
aam
aad
fldenv
fistpl
fneni(8087
ficoms
fsubp
loope
loope
in
out
ljmp
cli
testl
std
add
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
lds
enter
int3
leave
daa
int
iret
and
rcrb
rcl
rclb
rcl
rorb
rcl
aad
aam
xlat
add
fstp
add
add
in
add
in
jmp
add
std
incl
mov
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
leave
movb
mov
add
roll
rcl
aam
aam
add
xlat
add
aam
add
fsub
add
fildl
loopne
loopne
fiadds
in
call
add
incl
std
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
ret
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
shr
aam
aam
rcl
sar
iret
into
sar
lret
int3
int3
stc
int3
lret
lret
mov
mov
fwait
xchg
xchg
xchg
dec
aas
ds
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
into
iret
sar
xlat
call
xlat
aad
iret
iret
iret
dec
int
dec
lret
sarb
cld
stos
stos
lods
icebp
xchg
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jne
je
gs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
int3
call
rcl
call
rcl
dec
lret
mov
inc
sarb
test
stos
lahf
popf
sahf
xchg
xchg
xchg
jmp
jo
xchg
pop
adc
add
add
add
add
add
cmpl
test
jns
push
imul
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
jo
mov
scas
pop
mov
mov
mov
mov
ret
mov
mov
ljmp
pushf
lcall
xchg
xchg
cltd
cltd
cltd
out
test
dec
adc
adc
add
add
add
add
add
pop
cltd
fwait
cltd
add
pushf
cwtl
cwtl
fcoml
addb
jge
jge
jns
jns
jp
jns
jp
jp
jb
jb
push
push
push
cmp
jae
popf
popf
popf
mov
lods
scas
repz
scas
scas
sti
scas
lods
lods
std
test
test
call
test
call
mov
scas
jmp
lods
scas
leave
movsb
cmpsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
insl
outsl
pop
nop
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
jo
orl
cltd
repnz
xchg
xchg
std
mov
call
lahf
ljmp
test
std
mov
scas
mov
xlat
cmpsb
mov
addl
add
add
pop
popa
pusha
or
lods
mov
cmpsl
mov
mov
mov
call
lahf
lahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
outsb
outsb
xchg
subl
xchg
lock
mov
lcall
mov
pushl
pop
mov
jnp
mov
lods
lods
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
fwait
popf
popf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
nop
jne
notb
pop
cmp
dec
jp
movsb
inc
jns
lods
xor
jae
scas
pop
insl
ljmp
sbb
mov
mov
mov
scas
scas
jle
movsb
movsb
push
popa
popa
popa
or
mov
lcall
popf
popf
jmp
mov
cwtl
decl
addb
xchg
jb
cld
xchg
popa
cmp
dec
jns
cmp
nop
sub
xchg
sbb
cwtl
adc
mov
pop
ljmp
pushl
sbb
mov
and
mov
stos
mov
scas
scas
scas
xchg
popf
popf
sahf
adc
add
add
pusha
popa
popa
or
lods
mov
stos
mov
lahf
jmp
test
cmpsl
lcall
pop
jnp
mov
imul
mov
pop
decl
or
mov
push
decl
add
popf
add
cmpsb
or
jae
mov
jl,pn
ret
xor
leave
xor
lret
xor
shrl
movsb
test
add
add
add
add
pop
or
movsl
test
test
test
pushl
mov
pushl
mov
decl
xorps
xchg
push
incl
add
add
xchg
add
sahf
add
cmpsl
add
mov
insl
inc
cmp
iret
inc
mov
rolb
inc
nop
fimull
call
popa
sahf
dec
cmpsb
mov
mov
mov
movsb
movsb
mov
add
add
add
pusha
or
lahf
mov
ljmp
mov
pushl
mov
stos
lcall
pop
arpl
xchg
sbb
mov
push
call
add
lahf
add
add
lods
add
mov
dec
xchg
call
push
pushf
ficompl
jmp
pop
lahf
jmp
pop
mov
jmp
insl
cmpsb
dec
cmpsl
mov
ret
movsl
xor
addb
add
add
dec
pop
jge
jnp
pushf
cwtl
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
sub
insl
call
push
pop
call
add
test
pop
ljmp
push
imul
fisubl
jmp
insb
test
jmp
jno
in
jno
jmp
test
std
mov
cmpsl
test
addl
dec
pop
outsl
outsl
imul
xchg
cltd
lcall
mov
mov
sar
mov
jmp
jbe
lahf
cmp
sahf
sub
xchg
or
pop
jmp
add
mov
inc
or
call
dec
xchg
jmp
js
jmp
mov
out
cmpl
xrelease
push
xchg
mov
test
push
fwait
fwait
lcall
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
popf
jmp
inc
jg
mov
push
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
push
cltd
push
cltd
enter
leave
cli
lcall
jecxz
inc
mov
stos
popa
mov
add
add
xor
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
test
movsl
pop
xchg
lods
dec
test
mov
add
add
mov
arpl
mov
add
fsubs
cmp
jp
push
mov
into
clc
test
sar
std
lods
sar
lods
sar
sti
cmpsl
int3
jmp
mov
inc
rol
stos
test
popf
or
add
add
dec
dec
dec
aaa
jb
jb
stos
stos
test
out
iret
int3
cmc
lret
sti
lret
std
mov
mov
test
inc
cmp
adc
cmpsl
add
mov
arpl
ret
dec
add
flds
xchg
push
xchg
std
mov
cld
mov
fcos
std
mov
fdivr
mov
sar
jmp
lret
rol
scas
lods
scas
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
loope
fstp
ffree
fcmovnu
out
mov
gs
test
jae
cmpsb
pop
pusha
ljmp
add
leave
add
xlat
add
in
jnp
icebp
dec
mov
std
std
std
enter
enter
leave
fdivrp
std
lret
loopne
cld
out
mov
lret
mov
xchg
sahf
popf
pushf
sbb
add
add
incl
std
incb
ljmp
in
in
in
xor
loopne
loop
les
mov
mov
add
mov
inc
add
iret
add
fldl
jne
jmp
outsb
mov
sti
ret
sti
iret
in
call
out
shl
shl
std
call
std
aam
push
enter
int
stc
mov
mov
add
std
std
add
incl
std
std
pop
aad
push
mov
pop
mov
lahf
or
test
pop
pushl
add
roll
jno
fiadds
jbe
out
and
cld
shl
fldpi
fsubr
std
fsubr
xlat
call
std
xlat
out
cld
aad
push
enter
rcl
sti
mov
lahf
sahf
das
add
add
into
int
or
bound
ljmp
gs
add
add
loopne
ja
in
xor
cli
lret
loopne
stc
lret
test
repz
repnz
out
sar
out
sar
in
aam
jmp
shl
jecxz
fucomp
enter
test
std
add
add
add
aad
push
mov
jae
or
mov
insb
inc
pop
jb
int
jnp
xlat
sub
sti
fists
clc
jecxz
mov
out
loop
lret
mov
leave
ffree
int3
leave
ffreep
sarb
jecxz
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
mov
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
int
mov
sarl
enter
int3
insl
aam
into
pop
ror
iret
dec
fcomp
xlat
cmp
das
jecxz
fsubl
in
icebp
adc
jmp
or
std
add
add
add
std
std
add
mov
jns
mov
mov
mov
mov
xor
enter
rcl
rcll
rol
adc
rcl
or
loope
or
int
add
std
std
incb
std
incl
fwait
cltd
cltd
add
mov
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
rol
enter
enter
enter
ret
mov
scas
mov
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aam
aam
rcl
sar
int
iret
std
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jb
jb
addr16
dec
inc
das
das
das
sub
and
add
add
mov
mov
cmpl
ret
int
call
aam
dec
into
iret
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
jae
jne
test
aad
jo
ret
popa
mov
push
insl
jb
popa
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jb
and
add
pop
add
add
je
je
pushf
xchg
lcall
test
mov
test
test
imul
push
inc
mov
pushf
into
mov
mov
xchg
decb
lea
scas
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
movsb
cmpsl
cmpsl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
popf
cmc
cltd
cwtl
cwtl
in
addb
imul
jg
lea
xchg
notl
mov
pushl
xchg
mov
test
call
lods
stos
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
call
cltd
lcall
lcall
xchg
mov
loope
je
out
xchg
arpl
std
pushf
inc
jne
cmpsb
ss
lods
sub
mov
jno
mov
insl
pushl
popf
scas
lock
mov
imul
into
add
xchg
pop
scas
movsb
lods
test
popf
popf
sahf
jmp
movsl
call
push
decl
inc
jb
mov
imul
nop
adc
xchg
or
or
pushl
and
mov
sub
lds
test
rcrb
subl
jae
push
mov
movsb
cmpsl
cld
cmpsl
test
ljmp
scas
mov
sahf
mov
decl
or
xchg
push
decl
add
mov
adc
shll
dec
ds
rolb
call
inc
call
dec
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
lahf
mov
pushl
mov
movsl
call
arpl
nop
sbb
nop
push
push
call
add
lods
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
data16
call
lcall
test
cmpsb
pop
add
add
bound
adc
sahf
fwait
lcall
mov
mov
lcall
jo
lcall
lcall
add
mov
xor
jmp
jl
push
jl
out
jg
ficompl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
bound
lcall
add
pop
pushl
or
dec
xchg
in
lea
push
xchg
push
xchg
push
xchg
enter
inc
mov
movsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
sarb
stos
dec
cmp
sbb
cmpsb
add
mov
fs
add
aam
jns
ljmp
clc
stos
sar
cli
lods
sar
cld
scas
sar
std
scas
sar
in
scas
leave
inc
mov
cmpsb
ds
std
add
outsl
outsl
inc
mov
mov
aam
aam
aad
aam
rcl
shr
lret
cli
mov
mov
jmp
add
ret
call
add
out
xchg
notl
sti
mov
std
rcr
inc
icebp
mov
shl
cmpsl
test
cmpl
add
in
or
out
jmp
outsb
fcomp
fisubl
mov
add
mov
add
faddl
ja
out
cmp
dec
in
shl
call
in
std
aam
std
aam
push
fdivr
rol
into
in
scas
scas
scas
popa
jg
jg
std
incb
incb
lret
int3
shrb
lahf
sbb
lods
add
mov
add
jecxz
jns
hlt
push
movsl
cld
enter
out
std
aam
shl
cld
aam
stc
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
scas
add
mov
or
cmp
out
mov
shl
call
ror
jmp
leave
aam
call
fcmovu
scas
push
cltd
cltd
cltd
add
mov
sahf
lods
xchg
and
push
mov
shlb
lret
jbe
mov
fdivrs
int3
adc
into
outsl
fxch
rcrb
rcl
dec
in
loopne
out
out
in
in
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
lods
mov
les
lds
rol
sbb
fstp
bswap
into
int
aam
push
std
std
add
incb
stos
incb
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
dec
mov
negl
dec
pushf
mov
stos
mov
daa
pop
mov
or
cs
fwait
dec
cmpb
movsl
push
adc
add
mov
pop
push
jnp
movsb
adcb
fisubrs
jae
jmp
movsb
push
jmp
repz
sub
jne
adc
sub
imul
sub
es
lock
mov
gs
jae
push
push
sub
push
rolb
pop
pop
lea
xchg
mov
test
int
fists
mov
addr16
lret
inc
cmpsl
jae
fidivrl
pop
dec
pop
push
pop
subl
and
and
rclb
rol
fcompl
xor
and
gs
cld
fidivs
sub
xor
aad
iret
addl
mov
shrb
or
xchg
pushf
dec
clc
out
mov
mov
xchg
xchg
or
sub
xchg
ret
lcall
mov
or
mov
mov
mov
stos
sti
lahf
fidivs
adc
rcr
adc
dec
rolb
jle
outsb
mov
addr16
loope
push
push
sahf
cmp
fbstp
xor
sbb
test
xor
les
repnz
cwtl
xchg
sub
dec
xchg
cmp
aas
lds
or
jle
ror
sbb
in
jmp
mov
xchg
sbb
push
inc
cmp
js
movl
emms
flds
cmp
enter
hlt
xchg
pushf
pushf
cld
insb
fistps
inc
mov
jae
flds
repnz
imul
lcall
cltd
aam
dec
sbb
imul
xor
sbb
mov
es
ret
adc
loope
dec
mov
imul
xchg
add
ss
add
push
loop
test
shlb
sub
cmpsl
pop
outsl
xchg
arpl
iret
in
and
sub
ss
inc
fs
es
jle
cmc
fsubrl
mov
shlb
jp
mov
outsl
js
leave
inc
adc
dec
or
push
pop
lds
add
pop
sub
cltd
push
test
je
push
std
pop
xchg
xchg
shr
push
ljmp
or
jmp
loop
lods
mov
repnz
lret
pop
mov
ret
popf
pop
adc
dec
enter
cltd
push
add
push
jns
lock
aad
pop
insl
jo
mov
stos
in
fs
pop
push
add
mov
jecxz
cmp
into
jno
jle
push
xor
adc
push
jp
cmpb
aaa
dec
mov
adc
pop
jns
push
add
mov
mov
or
cltd
mov
sub
sub
jecxz
xchg
jnp
rolb
int
xchg
and
out
adc
fcomip
leave
cmp
popf
fisttpll
fcoml
dec
xchg
les
int3
out
push
sub
jno
sbb
inc
xchg
out
sub
pop
cmc
or
bound
subb
out
nop
mov
or
and
push
nop
inc
hlt
sbb
xchg
lock
cmc
nop
out
lds
jmp
dec
rcll
outsl
mov
mov
mov
out
sub
xor
mov
mov
ret
push
jmp
jo
xchg
call
dec
pop
adc
dec
repz
jne
cmc
adc
mov
jmp
or
clc
lods
sub
popf
inc
out
push
mov
outsb
insb
dec
int
inc
xchg
pop
pop
mov
and
test
mov
ja
pop
in
stos
or
shrl
pop
jl
and
xlat
lret
movsb
jne
cmp
out
or
adc
dec
aaa
lds
daa
mov
mov
sub
add
stc
pusha
leave
and
dec
loop
fwait
cmc
xor
insb
push
add
aam
and
stc
lods
xchg
inc
stos
out
jnp
mov
mov
sub
mov
outsb
shrl
dec
cmp
jle
inc
or
jo
add
mov
test
and
aaa
repnz
popf
xor
mov
loopne
and
iret
cmp
cmpsl
mov
mov
jno
sub
fdiv
mov
ret
jle
mov
and
push
lahf
xor
and
ss
pushf
push
mov
into
xchg
cmp
jg
xor
xor
xor
add
dec
insl
adc
mov
test
leave
add
mov
enter
jle
push
in
mov
sahf
dec
into
mov
jnp
mov
fcoml
out
jmp
add
out
jle
and
add
icebp
enter
leave
add
sar
out
xchg
cltd
or
lcall
push
cmpsl
add
lret
loop
mov
ret
cmc
lret
adc
xor
cmpsl
ss
lods
sbb
scas
jp
sub
sub
xor
inc
jmp
xor
clc
jb
loopne
jl
std
add
mov
xchg
sub
ds
mov
ds
gs
adc
cwtl
cmpsl
sbb
loopne
dec
loop
xor
dec
fwait
pop
lds
mov
xlat
lods
mov
or
dec
aaa
pop
repnz
pop
lods
xor
or
push
roll
mov
imul
cmp
pop
scas
or
xor
andb
lret
bound
xchg
jnp
push
mov
sub
xor
mov
push
mov
mov
lds
and
iret
adcb
data16
scas
dec
jecxz
stos
push
imul
lahf
cmpsb
fcompl
mov
int
ja
mov
lock
mov
cmp
int
pop
jl
push
xchg
insl
add
fnstenv
adc
shrb
inc
fdivrp
lock
and
in
jne
jb
xchg
xchg
add
in
and
cmp
ds
pop
int
mov
pop
fistpll
add
cmc
jo
or
in
xor
xchg
pop
xchg
sub
adc
push
jecxz
jl
outsb
lea
lret
pop
push
insb
mov
call
mov
push
fisubs
mov
shlb
xlat
push
inc
ficomps
push
jecxz
sub
mov
mov
roll
add
mov
gs
push
stos
lds
sbbl
jecxz
xor
mov
cwtl
sbbb
dec
mov
fidivs
cmc
cmp
xchg
cmc
inc
pop
bnd
sbb
lret
push
xchg
cs
mov
mov
jno
jbe
aas
xchg
shrl
pusha
xchg
sub
mov
dec
out
imul
sub
xchg
or
icebp
sbb
add
test
aas
jg
mov
push
outsl
int
rcl
xor
mov
inc
jb
lods
inc
jg
push
les
out
inc
mov
rclb
shlb
jns
loopne
mov
cmpsb
lock
lods
popf
sub
out
xchg
add
clc
lods
ljmp
pushf
cli
inc
cld
ja
xor
jmp
das
inc
enter
addr16
cltd
sbb
imul
mov
mov
rcl
repz
adc
inc
mov
jecxz
adc
cwtl
add
in
mov
insb
add
test
outsl
push
cld
test
cs
and
dec
pop
addl
jnp
push
lret
cmc
add
fldl
mov
incb
popf
das
lcall
sub
inc
jp,pt
jo
pusha
mull
xchg
cwtl
jle
cli
mov
aaa
orl
nop
xchg
sub
cmp
mov
push
nop
mov
int
lods
inc
push
xchg
sub
in
cmpl
cmpsb
sbb
inc
mov
jo
loop
mov
inc
dec
out
mov
sbb
push
mov
dec
sub
ret
imul
push
cmpb
insl
and
sbb
and
mov
xchg
enter
mov
daa
es
cmp
ret
inc
rcrl
mov
jge
xor
mov
pop
repnz
fsubrl
adc
out
adc
dec
loopne
cmpsl
dec
fistps
jnp
imulb
push
cmp
push
mov
fbstp
roll
mov
jg
push
push
in
ja
xchg
sub
or
jecxz
popf
or
mov
pop
push
jmp
push
mov
jno
fs
push
add
shlb
jbe
lods
rcrl
mov
xchg
cli
test
insl
add
xchg
les
cltd
xor
aas
push
ljmp
push
cmp
fsubl
jns
fwait
cmpsb
cmp
sti
imul
mov
pop
icebp
scas
dec
jecxz
add
mov
rcrl
mov
push
mov
lock
push
pop
js
sahf
mov
dec
mov
arpl
sub
pop
and
rcll
mov
mov
les
add
jnp
movsl
fnsave
aas
dec
xchg
into
mov
pop
movsl
cmp
jle
aas
jo
addr16
pop
xchg
pop
icebp
add
xchg
sub
and
xor
mov
leave
sub
sbb
cmp
mov
dec
cltd
xor
mov
and
cs
testb
lret
repnz
pop
repnz
cld
xchg
mov
add
jae
inc
fmulp
adc
mov
xchg
add
jb
cmc
mov
push
testl
ds
and
cmp
push
lods
mov
inc
fimull
push
mov
inc
es
repnz
loopne
adc
test
repz
cmpsb
sbbl
int3
popf
xor
cmp
stos
mov
and
iret
fdivp
shrb
scas
scas
icebp
inc
dec
fnsave
xor
orb
flds
loop
enter
mov
mov
pop
hlt
rorb
mov
jp
mov
push
adc
dec
jae
data16
imul
inc
xlat
clc
lret
stc
sbb
mov
lods
mov
push
jo
mov
mov
hlt
mov
mov
sahf
cmp
mov
shr
orb
jle
ljmp
or
cmp
xchg
adc
mov
pushf
xor
les
mov
es
xlat
data16
enter
cmc
jmp
arpl
ret
pop
in
jno
shrb
sub
jbe
loop
adc
cmp
dec
xor
mov
adc
scas
inc
mov
fld
pop
lret
subl
fisubrs
xchg
xchg
pushl
lret
mov
int3
andb
pop
adc
testb
lret
mov
fadd
pop
into
xchg
outsl
push
out
out
jmp
push
mov
mov
je
mov
push
pop
cmp
pop
sub
mov
adc
or
dec
in
dec
sbb
in
pusha
mov
xor
push
xor
jne
add
push
sbb
mov
pop
cmp
lahf
ss
aas
lret
mov
pop
les
shlb
push
mov
or
sub
jge
out
test
sahf
mov
shll
dec
loop
cltd
ret
adcb
ss
outsb
jle
enter
popa
jmp
lcall
fcoms
push
xchg
sub
mov
movsb
cmp
aaa
add
mov
fsts
lret
sahf
dec
jmp
lock
lds
inc
mov
adc
adc
orl
call
movsl
push
stc
nop
mov
out
test
fldl2t
or
cmc
mov
in
sbbb
mov
xchg
in
add
je
test
mov
add
pop
sahf
jnp
pop
scas
xchg
push
ds
mov
aaa
sub
sbb
cmovnp
icebp
jecxz
adc
mov
pop
push
jmp
hlt
and
mov
adc
mov
clc
cmpsl
mov
sbb
push
out
pop
out
test
lock
nop
roll
add
jecxz
adc
mov
cwtl
pop
mov
xchg
shrl
outsb
jno
pushf
sub
lcall
sbb
xor
fcmovnu
jae
popa
mov
push
xchg
sbbb
je
js
fs
cltd
xchg
cmp
xchg
sub
mov
sbb
push
mov
sti
xchg
mov
hlt
mov
and
int
in
xlat
out
test
adc
cmpsb
loop
rorl
dec
jle
mov
mov
push
cmpsb
cmp
mov
les
mov
push
push
rcrb
jmp
fbstp
sti
xchg
sub
push
cltd
xor
mov
icebp
mov
mov
push
inc
repz
fstpt
rorl
stc
out
mov
loopne
mov
xchg
jae
fsubrs
xchg
pushf
xor
xor
gs
daa
mov
cltd
in
mov
icebp
sub
pop
rorb
push
bound
push
add
stos
pop
jae
fldenv
insb
and
call
mov
xor
ds
in
daa
test
rolb
lcall
mov
aam
mov
std
out
adc
js
aaa
into
adc
test
or
sub
cmpsl
ds
scas
inc
xor
je
push
out
test
and
jbe
and
rcrl
imul
es
sbb
scas
cmp
aam
or
xchg
inc
cmp
xor
enter
scas
inc
inc
adc
scas
push
push
int
daa
jl
xchg
outsb
aad
mov
add
mov
xchg
push
xlat
outsb
daa
sub
insb
dec
enter
cmp
dec
pop
cmpsb
cmp
and
dec
popa
aad
fisttps
xorl
hlt
mov
inc
fadds
cmpsl
lods
inc
sbb
mov
fnsave
cmp
ja
jle
mov
loopne
cmp
lret
sbb
pop
mov
lods
pop
scas
mov
cltd
xor
loope
js
mov
lret
cltd
call
dec
dec
loope
jp
or
nop
push
in
xchg
aas
adc
or
xchg
fwait
lcall
pushaw
mov
sub
dec
push
aad
mov
movsb
pop
pop
jecxz
mov
adc
test
aam
insb
aaa
mov
mov
lds
fsubrs
sub
and
cltd
add
xchg
cmp
xchg
mov
inc
repz
mov
adc
push
lods
adc
jne
stos
inc
icebp
xchg
pop
scas
xor
mov
fbstp
rclb
lret
imul
imul
scas
inc
icebp
aaa
cmp
cmp
lds
out
xchg
push
jbe
push
push
xor
push
mov
lret
mov
xor
push
shll
inc
arpl
test
call
mov
iret
and
pop
and
leave
push
jnp
in
lods
jae
cli
movsb
int
sbb
lds
and
sub
incb
cltd
out
adc
jle
cltd
out
or
adc
popf
xor
adc
sbbl
nop
pop
mov
mov
lock
in
loopne
test
xchg
movsb
cmp
cmp
scas
aam
stc
nop
sbb
cltd
dec
aam
mov
cmp
add
xor
andl
stc
jnp
stc
inc
fisubrl
jmp
adc
sarl
inc
loop
push
mov
fsubrp
sub
pop
repnz
lahf
pushf
movsb
arpl
repnz
sbbb
adc
xor
jae
inc
mov
xchg
mov
sbbl
xchg
out
add
or
jnp
push
pop
fisttps
pushl
lea
mov
dec
dec
popa
inc
lcall
mov
jmp
mov
jb
mov
bsf
pop
fbld
rcll
cmc
orps
lds
jo
push
scas
sub
xchg
sub
xor
mov
popa
inc
out
loop
sub
mov
frstor
sub
pop
add
add
jb
sbb
jae
fnstsw
js
lret
imul
hlt
dec
mov
sub
daa
aas
add
adc
xchg
imul
jg
push
pop
xor
push
pop
into
outsb
adc
je
sub
xchg
fwait
insl
test
pminub
aad
xor
aas
or
fwait
add
add
jns
mov
cltd
jmp
sub
jo
jae
lret
cmp
xorb
adc
xchg
arpl
das
dec
adc
push
sahf
cmpsb
sub
add
fildl
das
ss
or
imul
lock
out
adc
lods
inc
shlb
sahf
push
ficoml
sbb
ja
mov
aad
mov
sub
out
or
xchg
xor
adc
test
out
cmpsb
pushf
mov
out
add
fbstp
inc
daa
mov
sbb
ja
test
ljmp
xorb
cmc
pushf
xor
aam
xchg
push
mov
aas
cwtl
xchg
pop
repz
pusha
sub
dec
and
jnp
fistpll
loop
stos
push
iret
xchg
lret
mov
test
push
xchg
sub
pusha
imull
int3
cmp
fiaddl
and
or
arpl
push
mov
xchg
in
popa
lret
push
push
xchg
pop
xchg
sub
mov
pop
adc
repnz
jne
repz
repz
shrl
rol
add
int
mov
jle
lret
add
sbb
jno
pop
cmp
es
nop
sub
and
mov
sbb
jg
mov
cmp
pop
pop
icebp
xchg
es
pop
mov
cs
push
outsb
add
ds
imul
mov
imul
push
lea
push
js
mov
inc
jl
jbe
ret
repz
lock
dec
popa
fnsave
sbbb
fsubrs
mov
pop
mov
ret
add
icebp
inc
daa
mov
test
push
lods
jg
push
lods
inc
out
jb
loope
data16
jnp
cmp
xchg
add
in
jbe
push
jmp
aad
fidivl
nop
inc
fldl
fdivrl
repnz
addl
testl
loope
in
dec
dec
mov
add
mov
and
push
inc
scas
inc
cmp
mov
xor
xchg
sub
sub
jno
shrl
xchg
adc
lds
out
pop
out
arpl
jnp
test
cmp
mov
inc
cmpl
aam
lcall
push
out
adc
jl
mov
jo
push
arpl
cs
jle
mov
fs
test
insl
int
pop
icebp
test
je
int
and
push
outsb
add
adc
leave
xor
mov
cmp
and
add
int
xchg
pop
sbb
push
lods
xor
stc
nop
test
lret
mov
sbb
pop
push
xchg
xchg
sub
xor
cmpsl
mov
add
jno
ss
idivl
mov
mov
dec
loop
jae
popa
lods
std
xchg
and
inc
aas
test
mov
fsubrp
or
jns
popa
test
test
mov
enter
lret
rcrl
and
lock
and
xor
dec
lods
push
jmp
dec
fnsave
leave
push
insl
adc
test
and
adc
pop
push
push
ljmp
and
xchg
pop
inc
xlat
xchg
mov
adc
mov
add
push
sahf
and
inc
dec
arpl
push
bound
rorl
mov
les
out
inc
fisubrl
xor
scas
mov
jmp
out
xsha256
cmpsb
xchg
or
cmp
int3
pusha
daa
montmul
cmpsb
addb
les
sub
lret
xchg
inc
fldt
test
cmp
push
sbb
test
dec
les
out
outsl
push
popf
mov
roll
out
testb
icebp
adcb
pop
sti
xchg
popa
aam
cltd
ljmp
pop
ds
add
testl
add
add
dec
loope
sbb
mov
push
or
addr16
call
mov
cmpsl
fsubrs
aas
push
in
jo
testl
add
mov
and
sarl
pop
inc
fisubrl
and
inc
mov
int
bound
cmp
shll
cmp
popa
xchg
daa
mov
and
stc
xchg
aad
test
mov
js
repz
cli
inc
fidivrs
fbstp
fcoms
xor
lea
filds
subl
arpl
mov
push
jmp
and
addr16
dec
jecxz
fwait
cmpsb
cmp
xchg
out
loop
int3
mov
nop
pmaxsw
arpl
xor
push
test
jmp
or
js
stc
sub
mov
lret
xchg
jb
pop
mov
in
test
fbstp
insb
dec
fistpll
xchg
movsl
cmp
pusha
cmp
xor
push
jbe
popa
pop
mov
pop
addb
jle
push
aaa
jo
xchg
jb
cmp
cmc
mov
test
pop
pop
push
call
in
loop
incb
push
in
addl
sbb
dec
jbe
inc
sbb
xchg
inc
dec
adc
mov
inc
add
cmp
int
mov
inc
adcb
inc
cli
xchg
cmp
lret
bound
dec
scas
inc
cmp
pop
cmp
inc
fimull
pop
into
mov
dec
jecxz
stos
int3
arpl
jbe
loopne
int3
mov
testb
daa
scas
repnz
fs
lock
stos
je
fcoml
jmp
inc
sbb
dec
xchg
jno
enter
into
pop
call
cmpsb
jmp
xchg
sub
or
arpl
add
lock
lea
cwtl
test
mov
mov
cmp
sub
lock
addr16
jnp
ds
bound
xchg
push
pop
hlt
aaa
mov
or
pop
jnp
mov
xchg
sub
lret
bound
cmc
mov
pop
sti
xchg
ja
into
gs
xchg
in
sbb
imul
pushf
stc
popf
xor
dec
das
movb
enter
jnp
test
sbbl
nop
sub
sbbb
add
sub
add
fidivl
xlat
pop
je
xchg
lcall
sub
adcb
push
ljmp
aas
aaa
xchg
mov
xchg
push
or
mov
adc
push
int
mov
sbb
mov
movl
sbb
lea
hlt
xor
sub
push
das
out
jne
xor
inc
xchg
lahf
ss
xchg
jmp
inc
fsubp
cmp
je
pop
pop
icebp
cmp
js
ja
cmp
xor
fidivl
in
mov
mov
cltd
xor
sub
scas
inc
in
fcomps
test
and
xlat
addr16
and
in
outsb
xchg
das
movb
pop
lock
cld
xchg
js
inc
ficoms
mov
push
out
in
ljmp
jno
aad
and
imul
xchg
lods
inc
repz
xor
ret
hlt
stc
sti
cmp
fdiv
mov
std
shlb
bound
xchg
adc
sub
adc
cmp
xchg
sbb
or
mov
pusha
cmpsb
cli
repnz
stos
jnp
andl
out
xchg
adc
movl
adc
mov
imul
add
xor
and
mov
aad
push
pop
mov
mov
ja
xor
shll
mov
sbb
test
insl
adc
sub
pushl
xchg
cltd
rcrb
icebp
fbld
sub
dec
lds
imull
sbb
ja
popf
test
jecxz
paddb
inc
rorb
fbld
loope
ret
pop
test
sub
popf
or
subl
jbe
and
ljmp
mov
add
pop
mov
in
xchg
pop
add
add
sahf
lods
pop
sbb
lcall
xor
nop
mov
lock
and
fdivs
std
push
bound
sarb
dec
xchg
jl
jl
out
inc
xchg
jp
inc
sbb
mov
jle
jl
cltd
xchg
mov
clc
orb
rclb
rorl
rorl
adc
pop
bound
lret
nop
jge
sub
fstl
pop
cmpsl
mov
push
aam
cs
hlt
xchg
add
jnp
pcmpeqb
pushl
mov
jb
or
pop
dec
lock
cmp
mov
xchg
cmp
mov
adc
mov
fyl2x
xorl
jp
in
sub
jnp
dec
push
inc
faddl
loope
jmp
mov
and
sbb
ljmp
pop
mov
xchg
sub
mov
dec
in
adc
jae
pop
sbb
jno
iret
dec
rcr
in
cmp
cmp
push
loope
push
pop
xor
clc
sub
adc
xchg
jle
and
xchg
xchg
xchg
js
sbb
mov
cltd
xor
push
insl
add
jmp
call
sub
cmc
aam
lret
dec
insl
jnp
mov
adc
xchg
pop
xchg
push
mov
es
cmp
or
pop
dec
es
test
iret
jae
fnstenv
xchg
xor
lds
adc
filds
push
jnp
hlt
daa
sub
leave
cmpl
sbb
or
and
mov
ficoml
mov
aad
push
jno
push
es
ss
or
sbb
sub
or
sub
xchg
sub
mov
sbb
loop
xchg
outsb
mov
pop
adc
pusha
imul
jb
sbbb
cmp
adc
leave
sbb
sbb
fisttps
sub
int3
scas
jbe
xchg
dec
cli
int
mov
mov
pop
pop
adc
push
inc
dec
mov
xor
cli
int
iret
adc
scas
shll
aam
lret
cmc
jo
int
xchg
sub
out
mov
mov
pop
sub
jo
adcb
push
arpl
xchg
xchg
fdivl
daa
mov
out
add
cli
decl
pop
out
jbe
add
shrl
xchg
sub
into
xor
mov
mov
push
adc
and
cmp
repnz
or
inc
mov
movsl
pop
not
add
cmpsb
jl
dec
fisttps
sahf
dec
lea
cld
fcomps
mov
lds
sub
lock
and
and
inc
loop
mov
out
add
push
add
mov
jb
inc
cmc
loope
ss
mov
insb
faddl
lds
lcall
es
out
out
loope
imul
mov
popf
mov
jg
call
or
lods
jns
iret
inc
sti
outsb
mov
push
sbb
sarl
fidivrs
fisubl
aam
pop
iret
cmp
jo
cli
ss
add
mov
aas
adc
stos
and
xchg
out
test
shrl
sub
in
repz
fsubrs
jo
jmp
mov
jo
imul
cmp
push
roll
or
out
lea
or
jnp
in
lods
in
mov
or
scas
insb
pop
hlt
popf
iret
imul
jbe
or
roll
dec
repz
out
pop
mov
mov
jp
dec
xchg
ja
jno
sub
nop
mov
cmp
push
xor
outsl
push
out
add
nop
xchg
mov
mov
mov
iret
inc
fisttpl
mov
jnp
daa
mov
sbb
cmc
xchg
ffreep
mov
fsubrs
add
pop
ss
sti
outsl
xchg
sub
outsb
cmc
cltd
testl
sub
jle
inc
inc
fisubl
aaa
pop
lock
out
adc
fdivs
xor
adcl
adcb
inc
fidivrl
sbb
xor
mov
stos
or
xchg
sub
mov
in
push
sub
adc
jae
mov
les
shl
inc
aam
mov
push
rcrl
scas
loop
lcall
jge
pop
pop
aam
test
mov
insb
int
sub
jb
cli
xchg
and
sbb
and
inc
push
and
xor
sub
data16
es
decl
push
imul
dec
pop
test
lret
xchg
xchg
or
dec
pop
shrb
push
lds
popf
lahf
loopne
pop
push
push
bound
pop
xchg
ret
hlt
pop
jge
push
insb
andb
push
mov
or
enter
sub
mov
iret
lret
push
aam
xchg
out
daa
sub
rcrl
lea
mov
int
cmp
cmpsb
adc
jg
mov
fsubrs
rorl
sahf
andl
loope
pusha
je
jg
ror
jg
cmp
sub
hlt
mov
sbb
jl
pushl
pop
mov
cli
stos
movsb
mov
ud0
xchg
inc
in
in
cmpsl
mul
adc
mov
mov
rclb
and
xor
mov
xchg
mov
rol
dec
fwait
mov
or
in
cmpb
mov
mov
sahf
jne
sbb
xchg
lods
frstor
jb
and
dec
nop
cmp
mov
cmp
cmp
or
push
and
and
and
and
ja
jae
add
mov
sbb
test
xchg
inc
push
sbb
scas
mov
mov
or
add
xchg
xor
testl
imul
sbb
pusha
lcall
mov
aam
sahf
cmpsl
scas
mov
loope
and
xor
mov
jo
add
insb
call
adc
addl
mov
mov
adc
mov
stos
xor
icebp
cs
jmp
or
xor
sbb
xchg
addb
in
out
insl
clc
and
inc
adcl
jae
xchg
mov
jl
or
xchg
jns
jne
aas
mov
fildl
dec
lock
fcoms
movsl
and
jne
ja
sub
fdivl
xchg
xchg
lret
fs
je
sub
lea
fiadds
adc
mov
push
mov
mov
pop
sahf
out
dec
or
mov
push
dec
jecxz
dec
test
fdivl
ret
dec
imulb
adc
xchg
sub
lret
mov
insl
mov
xchg
sarb
xchg
ds
or
cmp
lret
sarb
mov
clc
mov
or
enter
xchg
cmp
shrb
lock
mov
jmp
cltd
add
sarb
aaa
xchg
test
addr16
or
jg
ja
inc
push
stc
std
dec
cmpl
xor
inc
ret
dec
and
pusha
sub
int3
in
fisubrs
test
notb
jno
pop
mov
inc
jmp
inc
dec
pop
loop
test
lret
or
xchg
add
mov
mov
addl
xchg
into
mov
mov
mov
outsb
out
mov
or
add
scas
push
ljmp
test
or
add
bound
dec
fbstp
sub
leave
sbb
mov
jle
orb
test
pop
inc
test
and
test
or
rcr
nop
mov
arpl
sbb
mov
xchg
inc
in
call
sub
inc
ficoms
jns
addr16
in
inc
dec
in
push
xor
lock
aas
dec
sub
dec
shrl
in
imul
mov
xchg
out
mov
rclb
mov
outsl
cli
pop
jecxz
xchg
ret
pop
dec
jge
ljmp
jbe
mov
sub
icebp
mov
movsb
and
out
repnz
jnp
dec
sahf
pop
sbbl
cmpsl
mov
xor
fcmovne
mov
sub
cmpsb
xchg
add
imul
out
xor
mov
and
idiv
sbb
and
mov
sub
mov
add
or
cltd
gs
pop
int3
arpl
test
out
lea
cltd
aaa
mov
adcl
sub
and
or
stos
sbb
dec
fldt
dec
cli
sub
movsl
push
out
mov
jo
scas
mov
adc
inc
inc
mov
cmpsl
mov
or
dec
daa
pushf
pop
out
push
mov
jbe
ja
adc
out
xlat
sbb
xchg
sub
ret
stc
push
mov
dec
and
cmp
call
das
push
loopne
push
pusha
mov
dec
xor
mov
pop
xchg
fiaddl
jmp
stos
and
sahf
adc
imul
rcll
sarl
sub
push
call
cmp
loop
adc
xor
add
jbe
es
xchg
mov
jo
push
mov
subb
icebp
xchg
bound
ffree
sbb
das
push
add
shll
jne
imul
xchg
mov
jb
fnstenv
pushl
test
mov
cmc
sbbb
int
fs
pop
cltd
push
call
dec
repnz
add
movl
adc
fnstsw
mov
inc
add
xlat
js
and
push
lret
cltd
mov
push
inc
push
or
nop
inc
pop
insb
mov
push
ja
push
pop
jnp
mov
cmc
orl
in
xor
dec
jl
ret
push
call
jl
xor
mov
push
push
xor
dec
mov
pop
pop
mov
xlat
mov
test
dec
xchg
rcrl
lock
cmpsl
ficomps
int
jmp
shl
mov
pop
add
jno
sub
xlat
pop
xchg
dec
fstpt
or
xchg
add
or
push
and
cli
loopne
push
push
sub
jecxz
jo
adc
sahf
and
push
cmpl
aad
pop
add
mov
aaa
in
std
xchg
push
pop
and
int
push
fldt
cmp
mov
lahf
int
or
sub
cmc
jp
and
and
fsubrl
das
mov
popa
insl
lds
mov
xchg
in
scas
jmp
test
daa
mov
xor
jg
ss
sbbb
mov
daa
fsubrs
lock
test
xor
or
mov
and
or
jbe
adc
pop
mov
fcmovbe
pop
daa
push
jl
xchg
and
mov
pop
out
push
lods
arpl
clc
mov
cmp
lock
sarb
xor
adc
nop
inc
and
enter
inc
lret
mov
xchg
sub
or
dec
xor
and
push
dec
out
mov
gs
ret
daa
push
xlat
xchg
daa
loopne
jge
mov
rcll
jl
faddl
dec
xor
jle
jo
aas
jl
hlt
jp
imul
cmp
sub
and
jns
shl
test
pop
sbb
nop
loopne
lods
push
out
fisttpll
push
or
rorl
imul
xor
pop
xor
sbb
fists
add
sub
bound
inc
movsb
pusha
ss
sbb
jmp
adc
or
daa
add
jge
je
push
movsl
mov
pop
mov
or
mov
mov
push
push
sarb
stos
fwait
psrlw
cmp
push
mov
mov
inc
pop
push
push
out
hlt
dec
lods
sub
sti
fstl
leave
push
inc
cld
jo
xor
cmp
add
jns
mov
sahf
repz
xchg
xor
or
cmp
fnstenv
sarl
sub
push
call
and
adc
add
sub
cmp
bound
or
lea
pop
push
or
cmp
mov
xchg
or
mov
fistpl
push
dec
jae
inc
movsl
outsb
lea
adc
jl
dec
xor
lock
fwait
sub
push
enter
jmp
fwait
cmp
bound
mov
pop
sbb
insb
pop
jle
pop
xor
push
fildll
inc
sti
nop
jns
xor
push
movsb
call
mov
sub
jp
or
and
aas
imul
dec
lods
xchg
xor
dec
fs
jb
xchg
imul
adc
sub
add
adcl
inc
cmpb
fstpl
loop,pt
add
ret
testb
out
in
rcrl
int
mov
add
movsl
cmp
and
and
std
fnstenv
fsubrl
movsl
and
sbb
jbe
scas
inc
in
push
and
jo
repz
push
jge
and
push
sahf
add
xor
adc
outsb
pop
mov
pop
push
sbb
pusha
testl
into
imul
jbe
mov
outsb
mov
in
mov
xor
sub
xor
and
mov
lods
leave
loope
fldt
hlt
xor
and
cmp
shrb
loop
pop
cmp
es
mov
cmp
push
xchg
out
lods
pop
fisubl
inc
dec
hlt
inc
jo
adc
loopne
sub
int
jecxz
outsb
mov
push
movsl
jnp
or
arpl
adc
jnp
retw
dec
test
fnstcw
adcl
add
dec
jb
notl
push
mov
fldenv
retw
in
pop
dec
ja
in
mov
jno
sbb
or
ret
push
or
or
sub
js
add
sub
jns
dec
push
repz
es
sub
lock
pop
and
cs
outsb
xor
das
test
aas
xchg
in
xchg
aaa
dec
xchg
mov
sbb
setae
pop
or
adc
out
pop
push
jle
push
xchg
stos
add
or
iret
sub
xor
sbb
lcall
dec
scas
inc
addb
pop
jmp
nop
push
cmpsb
call
mulb
and
aaa
stos
xchg
je
mov
dec
test
imul
mov
push
xor
or
in
sbb
je
pop
xchg
pop
sbb
mov
xchg
push
std
call
or
xchg
es
test
leave
inc
sbb
mov
inc
icebp
cld
test
data16
cld
movsl
xchg
xlat
dec
or
mov
pusha
lea
insl
push
add
test
push
xchg
mov
outsb
and
ret
mov
sbb
lds
das
outsl
xor
sbb
push
rolb
or
fcomp
mov
gs
mov
dec
xchg
fcomi
and
rclb
inc
xchg
leave
or
xor
fwait
xor
mov
cmpl
dec
sbb
pop
ljmp
or
add
hlt
stos
fisubl
push
addb
mov
popf
push
bound
addr16
sbb
sub
aad
popf
add
mov
das
sub
and
and
xor
mov
jmp
xchg
std
arpl
pop
cmp
dec
call
lods
shrl
and
adc
mov
adc
jmp
fldl
test
fnstenv
pushl
in
out
stos
sub
scas
and
push
gs
pop
xchg
and
mov
mov
pop
push
inc
shrl
scas
cmp
xchg
jae
icebp
push
imul
mov
fisttpl
lods
arpl
icebp
mov
jl
out
out
nop
daa
dec
inc
movsb
inc
jns
lods
inc
imul
dec
out
pop
mov
sub
movb
sub
pop
mov
je
gs
movsb
pop
adc
out
test
and
and
sub
or
push
repnz
xor
decb
std
daa
mov
js
xchg
movsl
pop
sbb
enter
xchg
imul
sbb
pop
mov
or
int3
adc
sub
hlt
add
sbb
insb
sbb
adc
scas
negb
push
and
cs
cmc
mov
je
sarl
fsubl
stos
cmpsl
sub
sbb
loop
test
push
mov
enter
xchg
inc
cltd
scas
add
xchg
mov
sbb
stos
sbb
dec
std
adc
cmpsl
stc
sbb
pop
xor
stc
sub
sub
outsl
dec
add
push
dec
mov
sub
das
loopne
movsl
nop
hlt
push
and
mov
inc
shl
stc
sbb
mov
cmc
divb
insb
cmp
jmp
and
ficomps
mov
xlat
mov
ja
xchg
ret
lret
in
mov
pop
daa
daa
mov
mov
sbb
xchg
outsl
aas
jle
mov
inc
cmp
arpl
sbb
xchg
and
std
xchg
inc
mov
jle
add
test
jno
mov
dec
xchg
adcb
arpl
jle
adc
jge
addr16
jg
mov
mov
sbb
stos
xchg
mov
int3
gs
and
data16
and
xchg
and
or
jl
insl
mov
xor
bound
popa
clc
nop
scas
lods
inc
and
inc
sbb
pop
dec
sub
pop
insb
sahf
xor
scas
mov
pushf
xor
adc
jb
and
nop
cwtl
jne
outsl
cmpsl
mov
testb
sbb
jmp
insl
xor
sahf
scas
jb
sbb
ds
daa
jo
xor
cmp
leave
or
mov
sub
ret
and
sbb
dec
arpl
adcb
inc
les
fcoml
add
scas
cmpsb
mov
lods
cmpl
or
cmp
dec
js
loop
insb
sub
add
cmp
inc
pop
mov
int3
ficoms
xor
mov
dec
push
insb
testl
fisttpl
icebp
in
push
test
mov
fisubl
arpl
mov
sbb
push
push
js
mov
xor
xor
cmp
insl
push
push
scas
lret
push
mov
or
mov
inc
in
jo
jge
push
xchg
push
rcrl
add
scas
inc
nop
push
dec
push
ds
fidivrl
cmpsb
push
rcr
addb
lret
adc
int3
inc
mov
xor
push
in
les
cmpsl
ret
mov
jb
das
mov
test
fiaddl
call
sub
mov
ja
cld
sub
das
ds
pop
pushf
adc
pop
and
jg
mov
mov
aam
flds
les
in
sbb
and
lock
sbb
lret
jb
inc
int
xchg
stos
sti
dec
fistpll
out
das
jno
in
pop
push
jb
dec
iret
mov
jl
sbb
cmp
cld
or
sbb
mov
cmpsl
bound
outsl
imul
mov
pop
or
cmp
mov
call
or
shlb
push
sub
lds
adc
pop
sub
xor
out
scas
jno
jne
lods
mov
add
jnp
mov
repnz
lcall
xchg
fisubs
ffree
fldl
sub
or
xor
fsubl
repz
es
cltd
iret
lretw
pop
mov
loop
mov
and
jl
mov
notl
icebp
scas
sbb
mov
bound
mov
movsb
shlb
jle
shll
scas
repnz
mov
std
out
mov
aaa
ds
push
lods
fstpl
mov
mov
xlat
xchg
das
ret
je
sti
xchg
sub
fidivl
fiaddl
xor
xchg
xor
push
aam
shlb
add
jb
pop
lods
dec
push
lods
dec
inc
nop
stos
jne
repz
repnz
in
add
sub
sub
mov
push
popf
lods
xchg
cmp
mov
jmp
fadds
mov
sub
or
xchg
mov
sub
stc
je
cmp
into
lock
push
and
push
cmpb
or
jge
sti
push
mov
inc
push
pop
sti
loopne
lock
sbb
xchg
in
pop
insl
pop
mov
imul
mov
mov
imul
ja
outsl
dec
xchg
cs
add
cs
add
xchg
call
pop
in
or
test
pop
sub
test
dec
dec
fwait
leave
lea
filds
stos
jmp
and
aas
fsts
mov
rcrl
stos
mov
push
adc
jmp
adc
xchg
lea
lods
xor
mov
outsl
pop
mov
fisubl
pop
pop
sub
lahf
outsl
repnz
push
adc
xor
fnstenv
les
xchg
icebp
rorb
mov
shlb
jbe
add
ss
test
icebp
cmp
sbb
test
push
cmp
cmpsb
cld
inc
std
rorl
call
popa
cmp
adc
xor
lock
jle
or
cmp
push
ljmp
outsl
add
xor
mov
icebp
mov
dec
xchg
test
jecxz
push
leave
xchg
mov
ret
lods
and
mov
and
mov
pop
dec
push
push
movsb
in
lods
popf
inc
jno
xchg
mov
inc
nop
insl
add
sahf
jne
fcoms
fstps
test
ja
lock
pusha
xchg
daa
iret
sahf
dec
adc
xchg
lods
fs
loope
dec
loopne
or
mov
push
ret
lahf
jmp
mov
cmp
mov
inc
mov
fmul
fstpl
pop
hlt
loop
loopne
sti
add
adc
lret
xchg
adc
rol
inc
dec
loop
loop
jae
push
xor
jne
ja
sub
pop
cmp
js
lods
push
fstps
ss
mov
movsl
jo
pop
dec
inc
cmc
repz
add
mov
cld
or
pop
cmp
cltd
pop
mov
push
inc
jl
addr16
cmp
leave
sbb
push
add
shlb
fnstenv
lahf
ds
cmpps
shrl
pop
popa
rolb
cmp
sub
push
movsb
jecxz
insl
leave
pusha
mov
aaa
testb
cmpsl
shrl
or
jbe
rcr
xchg
mov
inc
out
test
jp
je
fisttpl
lods
dec
shrb
mov
inc
lea
push
and
paddq
pop
insb
fbstp
lcall
fistl
mov
push
mov
add
ljmp
ficomps
mov
fs
fwait
sbb
popf
jp
dec
rcll
into
imul
jmp
in
in
add
or
jg
push
sub
out
dec
fdivrp
je
sbb
sbb
lret
jns
jbe
outsl
jmp
out
mov
jno
stc
fstp
icebp
or
pop
mov
mov
incl
cmc
xlat
out
mov
les
sub
dec
jne
insb
xchg
cmp
hlt
mov
fs
ret
xchg
and
sub
jg
ja
xor
addr16
out
jge
cmpsb
test
fxtract
inc
mov
pop
mov
dec
ret
and
testl
xor
js
scas
inc
insb
inc
out
mov
int
cld
cmpsb
mov
fldcw
add
clc
pop
call
dec
jbe
fiadds
movsb
gs
ljmp
cmp
mov
in
rol
jno
jge
iret
sub
jmp
scas
inc
jne
pop
lods
mov
fdivl
or
imul
xchg
fnsave
mov
cltd
pop
push
loopne
movsb
aas
inc
std
pushf
dec
inc
std
cmp
jae
movsb
sbb
pop
repnz
das
adc
js
push
pop
out
inc
adc
scas
adc
inc
fsubl
push
in
decl
mov
and
jp
adc
movsb
jge
sub
icebp
enter
mov
and
mov
xor
xchg
push
or
test
std
stos
nop
fstpl
lahf
ss
imul
aad
mov
cmp
rol
jmp
and
and
mov
push
inc
repz
dec
xor
mov
daa
outsl
ljmp
jg
adc
icebp
insb
daa
aam
clc
ror
add
out
imul
push
fistpl
popf
ds
cmc
cmp
push
pop
xchg
sub
in
test
mov
inc
jmp
xchg
das
sahf
xchg
leave
sar
cltd
cmp
roll
xlat
pop
xor
jmp
inc
ja
inc
jge
lea
arpl
jns
mov
adc
push
ret
shl
sub
in
sub
data16
jnp
shrl
inc
jns
out
add
cs
xor
ljmp
addr16
mov
hlt
add
shll
aad
push
out
mov
sbb
xchg
xchg
popf
sub
fcmovb
repnz
idivl
mov
mov
addl
ljmp
insb
ret
outsb
sbbl
cli
pop
hlt
jbe
ljmp
ljmp
pop
sbb
pop
scas
pop
cmp
mov
test
int
loope
fsubr
mov
add
fildll
mov
pop
mov
mov
mov
ljmp
xchg
mov
sbb
jns
dec
lahf
mov
data16
dec
lock
in
and
aaa
aaa
fldcw
inc
jno
les
mov
in
xchg
stos
xchg
inc
sbb
jns
push
fs
test
or
std
rorl
sub
jp
add
sub
ja
pop
mov
jns
decb
pop
dec
sub
gs
dec
jecxz
ds
jge
addr16
in
sbb
fwait
cmpsl
cmp
loop
jbe
repz
pop
loope
xchg
sub
mov
mov
xor
pop
insb
inc
out
pop
clc
sbb
aad
sbb
inc
mov
js
push
cs
andb
cmp
inc
cltd
lret
adc
mov
and
pushf
cmpsl
jb
xor
dec
fs
cli
pop
dec
js
aam
ljmp
lcall
jns
xchg
sbb
pop
stc
leave
pop
shll
out
jno
adc
mov
cmpsl
mov
jg
pop
in
cmp
ret
andb
xor
bound
push
hlt
jb
jmp
xchg
sub
mov
pushf
or
pop
negb
mov
pop
adc
in
mov
movsb
push
inc
sbb
xchg
inc
fiaddl
scas
adc
ja
out
add
push
std
mov
push
mov
ret
xor
fwait
mov
mov
outsl
jmp
xchg
insl
mov
xor
pushl
lock
or
aad
pop
ret
adc
in
jl
push
aaa
dec
inc
mov
icebp
pop
xlat
outsb
push
xchg
aad
cmp
cmc
adc
jl
pop
adc
nop
daa
lcall
in
mov
mov
push
xchg
nop
jb
dec
mov
cmp
jp
hlt
outsl
xor
fstps
mov
sbb
push
sbb
hlt
sbb
iret
test
js
xchg
sub
mov
sete
test
sbb
rcrl
ss
jno
lret
xor
xchg
imul
cmpsb
ds
leave
sub
leave
out
int
dec
decl
bound
push
gs
jnp
faddp
fiadds
test
movsl
or
adc
inc
pop
mov
push
dec
mov
loop
test
mov
add
lods
lret
scas
pop
sbb
pop
cmp
repnz
iret
mov
cwtl
nop
or
lcall
out
xchg
sbb
jl
sbb
pop
xor
cmp
jnp
mov
gs
lds
jno
pop
int
dec
adc
push
xchg
stos
addr16
jae
daa
movsl
xchg
add
mov
and
mov
fldenv
mov
add
jno
push
shlb
scas
shl
daa
inc
dec
jge
or
hlt
dec
and
scas
inc
js
lods
clc
lcall
xchg
jp
shr
mov
push
add
fsubs
jbe
push
sbb
adc
cmp
xor
adc
jp
pushf
data16
and
lret
sti
fldpi
adc
loope
data16
pop
inc
aas
rclb
call
subl
lea
lock
push
stos
xchg
adc
in
popa
and
xor
outsl
xlat
push
mov
dec
movsb
gs
push
mov
adc
fidivrl
add
rorb
scas
ret
out
lcall
sub
out
jno
loopne
mov
xor
out
xchg
sbb
mov
push
add
or
sar
push
sub
aas
cmc
adc
cltd
jmp
gs
jns
cmp
cwtl
decb
cs
sbb
das
rorl
das
pop
loopne
sub
fcomps
dec
inc
pop
jg
mov
add
inc
sbb
rcr
sahf
pop
imul
popf
dec
out
xchg
xchg
fidivrs
dec
sub
pop
push
cmp
out
das
mov
add
pop
push
ljmp
mov
jbe
and
leave
cld
std
wrmsr
pop
negl
outsl
pop
push
push
fadd
jle
into
jb
xor
xor
pop
lods
in
int3
add
xchg
pushf
stos
push
mov
test
pop
stos
add
jecxz
push
and
test
cmp
jge
dec
lcall
inc
mov
fidivs
dec
adc
push
mov
jns
xchg
sub
sub
scas
xor
pop
push
stos
add
das
and
xchg
mov
hlt
sar
or
inc
adc
add
rorb
jecxz
xchg
push
push
out
cmc
repz
mov
add
rcrl
mov
cltd
stc
shrb
dec
jmp
test
rcr
pop
dec
jnp
sbb
ret
xor
dec
out
inc
add
push
cltd
nop
lock
cmp
cmp
mov
outsl
fsubrp
popa
inc
lods
cld
dec
pusha
mov
xchg
arpl
daa
or
popa
add
pop
sub
lods
aad
je
xor
in
nop
cmpsl
sub
mov
jae
std
ror
xchg
mov
and
jge
inc
out
data16
xchg
cltd
inc
fmulp
add
jo
xchg
jge
sub
push
lret
dec
xchg
notb
xor
adc
fdivrs
dec
call
fsts
loop
cmp
jecxz
add
sti
jo
lock
shlb
inc
dec
in
pop
movsb
and
push
inc
mov
je
sbb
js
or
dec
mov
sub
dec
clc
bound
pop
sbb
aam
ret
dec
aam
loopne
sarl
dec
movsb
pop
shl
cmp
repz
ret
push
mov
jp
ljmp
sbb
loope
movsl
inc
and
xchg
cli
jg
or
xchg
jge
push
hlt
movb
xchg
loop
add
dec
cwtl
sbb
add
mov
scas
pushf
sub
in
ret
notb
cmc
mov
fnsave
mov
xchg
dec
or
sbb
dec
xchg
je
xchg
xchg
out
out
int3
loope
dec
cld
or
cli
mov
sub
mov
rorl
shrb
stos
sub
icebp
inc
cmp
inc
pop
into
mov
aas
loopne
les
pop
in
scas
ds
inc
in
lods
jo
andb
daa
pop
sub
adc
adc
xor
mov
test
adc
adc
mov
xchg
rcr
call
cmp
dec
xchg
add
movsb
sahf
xchg
dec
out
push
sbb
lods
cmpsb
mov
std
insl
xor
clc
lea
fcmovnbe
enter
sub
enter
and
lea
les
and
stos
push
mov
cmp
imul
jge
shrl
xor
pop
xor
fnstcw
sti
jne
mov
dec
aam
imul
mov
pop
in
ret
mov
out
cmp
push
call
jns
inc
roll
dec
icebp
jge,pt
icebp
jl
pop
les
lods
or
repnz
fbld
je
jmp
leave
push
lods
cli
adcl
fstps
pop
xchg
stc
dec
and
out
mov
out
cli
adc
sub
rcrl
sbb
int3
push
out
fnsave
jne
xor
mov
dec
js
popf
or
popf
xchg
adc
push
adc
mov
mov
mov
icebp
es
add
shrl
mov
inc
xchg
cmpsl
mov
dec
dec
add
aas
rcll
or
stos
mov
es
imul
xchg
mov
or
outsl
cmpb
std
das
adc
mov
mov
andl
push
shll
inc
rcrb
stc
je
cmp
xchg
inc
popf
scas
cmpsl
and
fadds
or
ljmp
adc
imul
sub
and
stc
inc
sbb
aas
xchg
aaa
into
enter
out
in
sbb
sbb
in
stos
inc
loopne
cwtl
mul
add
pop
out
sbb
jmp
jecxz
movsb
fwait
rcl
and
push
jo
inc
pop
repnz
jnp
aaa
jns
adc
pop
adc
jmp
loop
insb
js
add
adc
cmpsb
lea
dec
pop
sahf
or
movsl
fistpl
and
dec
lods
test
imul
pop
sbb
data16
push
cmpsl
jnp
add
pop
xor
movsbl
mov
cmc
fdivrs
jmp
cmc
bnd
pop
shll
jbe
fcmovu
dec
ds
enter
push
cs
repnz
or
mov
loope
lea
test
push
hlt
aaa
or
in
mov
xlat
fldpi
or
and
jge
sub
inc
sbb
lods
cmp
mov
arpl
sarb
push
shr
mov
or
sarb
or
insb
rcr
cltd
xor
repnz
sub
pop
adc
andl
push
add
push
sarb
pop
xchg
jns
mov
mov
jns
popa
pop
movsb
gs
fwait
and
ss
push
push
aad
mov
jecxz
mov
out
xor
adc
out
in
fimuls
mov
out
xchg
sahf
xchg
cmp
fisubrs
movsb
iret
jbe
add
push
or
add
fistps
or
dec
imul
cmp
filds
loopne
cmpsl
push
dec
jecxz
mov
mov
popa
sbbb
cmp
pop
push
dec
pop
mov
leave
out
sub
mov
fstpt
nop
jle
jmp
mov
adc
je
jne
xor
mov
sbb
cmp
lahf
xor
sti
inc
jl
es
mov
dec
fists
rcrb
xor
inc
pop
insb
jp
sahf
or
cmp
xchg
xchg
push
pop
pop
mov
sub
inc
cmpsl
push
dec
pop
mov
mov
outsb
hlt
int3
repnz
adc
std
or
jmp
dec
dec
prefetch
das
addr16
mov
orb
ret
aam
mov
insl
pop
lods
repnz
lahf
insl
xor
xchg
mov
jae
test
aad
xor
mov
fists
push
andl
cmc
sbb
stos
inc
jae
jb
ret
and
lahf
mov
push
es
dec
and
jo
jns
shl
inc
loope
cmpsb
daa
dec
or
mov
aad
shr
jg
cmp
scas
pop
les
rcrb
jmp
stc
push
and
xor
pop
jmp
sbb
push
cmp
aas
mov
roll
pop
jno
loopne
dec
in
repnz
mov
test
stos
fisubrl
stos
das
fs
cmp
push
dec
dec
fisttps
inc
push
sub
sub
pop
lahf
orl
mov
mov
mov
sbb
in
and
push
xchg
leave
sbb
cmpsb
xchg
adc
mov
jge
dec
lea
mov
mov
mov
push
test
mov
cmp
inc
fstpt
pop
mov
test
jbe
fs
pop
cmp
push
std
dec
mov
jb
sub
sbb
insb
dec
loopne
dec
xchg
lods
repz
mov
or
sbb
sub
into
inc
fdivs
or
and
xchg
pop
loopne
xchg
or
dec
jb
lods
push
scas
xchg
and
mov
ret
sbb
andb
xlat
jle
test
fsubrl
mov
add
int3
sub
fldt
cmp
int3
loopne
fadds
loope
xchg
ja
xor
fiaddl
or
and
lock
sbb
shll
adc
out
xchg
push
imul
in
incb
enter
ljmp
test
in
inc
sub
int
repz
sub
push
in
or
stos
inc
sbb
dec
xchg
inc
jbe
je
hlt
adc
fsubrp
add
or
jle
fcoms
or
sub
dec
and
inc
push
outsl
inc
mov
push
xor
jbe
xor
enter
pop
inc
add
fdivl
fisubrl
or
cmpsl
push
sub
ret
jmp
cmp
inc
int
jns
lret
dec
jbe
push
add
test
icebp
sub
push
push
arpl
addr16
ja
call
int
pop
in
xor
push
mov
mov
jle
mov
pop
popf
push
cmp
and
add
push
fstpt
mov
fwait
mov
inc
das
in
or
xchg
js
sub
stos
in
sbb
sbb
or
cs
imull
cwtl
mov
sub
std
pop
test
pusha
jecxz
pop
nop
pop
scas
fdivp
inc
sub
pop
pushf
repnz
push
jbe
pushf
xor
push
pop
fsubl
jl
cltd
cmp
and
or
jnp
adc
adcb
dec
xchg
sbb
xchg
sub
leave
xchg
mov
je
adc
mov
sahf
or
outsb
mov
fcoml
and
and
cmc
or
cmp
pushf
xchg
push
leave
add
dec
cmp
sub
push
cli
cld
push
loop
xchg
dec
fstl
stc
aas
xlat
leave
mov
pop
mov
mov
mov
cmp
jnp
lods
inc
movsl
mov
int
mov
daa
pop
imul
jae
out
shr
ficoms
mov
ret
les
mov
jnp
sbb
mov
pop
les
pop
leave
stos
mov
mov
test
mov
movsb
ds
into
insl
loopne
push
leave
jo
adc
mov
sub
mov
shl
imull
dec
xchg
cmp
cs
or
xchg
in
movb
lcall
insb
shrb
outsb
cmp
dec
test
iret
adcb
sub
das
dec
jnp
ja
add
fldcw
fimull
in
ret
sar
test
mov
adc
daa
ljmp
call
das
sahf
loope
add
or
adc
outsb
pusha
cmpsl
cmp
scas
pop
lds
jb
fiaddl
adc
mov
movsl
inc
push
mov
rcrb
test
cltd
push
and
add
xor
or
mov
xor
insl
add
lahf
lods
mov
pop
stc
cli
sbb
pandn
int
or
iret
sbb
subb
xor
jo
dec
mov
dec
and
fiadds
aas
or
push
sub
pop
sub
into
cmp
ljmp
shl
xchg
fcom
pop
and
daa
mov
jl
inc
pop
pop
mov
xchg
dec
or
jg
jae
icebp
popa
xorl
loopne
imul
aaa
pop
inc
pop
adc
mov
mov
stc
out
jmp
pop
jl
inc
mov
pop
jg
and
test
nop
jge
dec
inc
ss
ret
xor
enter
adc
es
sbb
mov
mov
jecxz
fnstsw
loop
pop
lcall
mov
in
test
icebp
int
or
das
decl
cmpsl
cmp
sub
scas
jns
mov
xchg
or
outsb
sbb
jo
pop
xlat
daa
pop
jae
outsb
add
nop
mov
mov
mov
addr16
push
hlt
or
sub
aas
sub
in
fsubrs
testl
in
stc
and
push
je
mov
inc
test
aam
movsl
cwtl
dec
xlat
push
push
rcl
fstps
jo
inc
jle
stc
add
fnstcw
test
or
insl
pusha
int3
adc
mov
aam
cmovo
mov
jmp
lcall
dec
notb
push
cmp
rcl
cmc
lahf
mov
idiv
inc
dec
je
inc
out
xor
push
lds
iret
je
in
push
idivb
pop
loopne
jmp
aaa
xchg
sub
xor
popa
cmp
mov
orl
fnstenv
addr16
pop
mov
push
cmpsl
cmp
shll
data16
push
mov
lahf
mul
loope
fs
pop
or
mov
loope
loopne
adc
sbb
sub
out
jle
hlt
or
mov
sbb
lock
stos
mov
sbb
sub
das
xchg
cmp
jge
pop
out
lahf
and
adc
adc
insl
mov
push
iret
mov
fs
int
mov
sbb
dec
lret
addr16
test
xor
push
push
out
jmp
fnstsw
test
cld
adcl
out
jne
mov
sbb
out
pop
dec
jmp
mov
repnz
addr16
shl
pop
and
dec
lods
push
push
xor
or
xchg
xchg
js
mov
lret
pop
aaa
out
test
pop
cmp
jb
fistps
ror
ds
xchg
sub
add
ds
lcall
xor
mov
pop
shl
shr
dec
stos
pop
add
pop
mov
shll
sbb
std
jnp
pop
int3
xor
fsts
test
lods
and
xor
push
insl
stos
xor
dec
pushl
sub
sub
dec
shr
mov
in
loope
pushf
int3
sub
sbb
adc
mov
test
push
dec
nop
enter
int
scas
inc
cmpsl
sub
loop
mov
adc
leave
mov
ds
aam
xrelease
sbb
fadd
pop
adc
leave
and
xchg
jp
or
into
jne
cs
cmpsl
mov
mov
std
jl
stos
test
xor
or
push
lods
lahf
sbb
mov
subl
inc
jne
adc
int
sub
cltd
cmp
js
test
jne
inc
xchg
fbld
test
rcrb
arpl
jb
dec
mov
add
cmpsl
pusha
mov
xchg
cmp
shl
out
fsubs
sub
mov
inc
pop
into
xchg
cltd
cmp
push
mov
pop
sahf
lea
out
andb
aaa
or
aad
mov
mov
outsl
inc
out
movups
mov
aad
in
inc
and
mov
fsts
push
outsl
jbe
mov
ficoml
xchg
jmp
popa
mov
rcl
aas
or
xchg
in
je
sub
lcall
and
sub
adc
ret
mov
hlt
mov
jmp
in
push
nop
mov
mov
mov
mov
fbstp
jae
mov
insb
popf
jb
cmpsl
xorb
and
loopne
sbb
xor
sbb
ret
frstor
jb
ja
fsubr
pop
mov
incb
xchg
sub
sbb
mov
inc
sbb
and
sti
mov
fldl
lret
ret
mov
call
mov
nop
imul
xorl
addr16
lock
and
xchg
add
rol
xorl
add
and
arpl
dec
and
in
lcall
jg
out
adc
cli
sbb
lds
rcll
push
xor
sbb
pop
shlb
lcall
stc
or
or
pushf
outsb
ds
sbb
dec
dec
jle
cmp
in
adc
pop
in
loope
sti
push
ja
ret
movsl
mov
lahf
dec
rcrl
cmp
sbb
sbb
scas
jmp
lods
test
jo
sbb
inc
push
mov
inc
or
scas
mov
add
les
cld
jne
push
cmpsb
and
sbb
bound
xor
in
sub
movsb
ljmp
scas
outsb
inc
lods
ret
and
pop
mov
mov
mov
movsb
cmp
cltd
movsb
adc
popf
sbb
dec
scas
mov
in
cmpl
or
push
mov
lock
mov
pop
sub
jl
das
leave
pusha
ja
jle
cmp
jb
fistpl
test
rorl
pusha
jge
push
jb
sub
push
leave
addl
or
adc
mov
xchg
nop
cmp
jle
pop
dec
mov
xchg
aad
jo
add
sbb
or
cmp
jne
dec
jb
mov
lods
inc
js
movsb
dec
fists
xchg
sub
sub
jnp
data16
push
je
lods
mov
push
mov
imul
adc
jns
pop
das
cmpsl
mov
fcoms
dec
movsl
into
ret
icebp
lahf
ss
add
adc
repz
cmpsl
imul
mov
mov
in
decl
add
gs
xchg
test
pop
pop
push
cmp
fistpl
mov
sub
sahf
mov
iret
xor
iret
les
sbb
fwait
mov
pop
jmp
jns
lret
decl
mov
lods
hlt
pop
or
aad
mov
xorl
xor
xchg
into
leave
cwtl
repnz
mov
test
or
sahf
clc
dec
sbb
pop
push
sub
cli
ret
cmp
in
dec
jae
jne
ljmp
jge
inc
shufps
sbb
xor
cmp
sbb
mov
in
push
sub
xlat
movsb
mov
lods
inc
dec
loope
into
lahf
pop
sub
icebp
rcll
mov
mov
lods
lret
dec
fmull
push
or
jl
mov
loop
or
aam
lods
inc
xchg
xchg
sbb
lret
dec
sbb
mov
jecxz
mov
es
xchg
cld
mov
mov
and
lds
add
in
loop
and
mul
call
mull
test
mov
cmp
movsb
cli
push
popa
movsl
movsb
daa
dec
push
push
sub
push
cmp
mov
push
sbb
popa
or
cmp
out
sbb
scas
cmpsb
adc
addb
cmp
sti
xor
add
movsb
jle
lods
pop
ja
ja
jno
dec
mov
push
mov
leave
mov
pop
xchg
sub
daa
pop
sub
das
cmpsb
fnstsw
push
sahf
inc
ja
jne
iret
xor
lret
sub
rclb
push
cs
andb
inc
push
mov
sahf
sahf
int3
cmpsb
dec
mov
mov
push
sub
and
jne
lret
sbb
shr
aad
std
call
xor
movsl
ret
pop
push
ljmp
sub
fcoml
vmovaps
in
divl
mov
adc
lods
adc
inc
mov
sub
mov
push
mov
iret
stos
mov
push
jb
lahf
mov
xchg
cmpsl
adc
out
mov
hlt
pop
arpl
aad
add
sub
xchg
scas
out
dec
pop
ret
aad
xor
stos
xor
lret
cmp
mov
jno
mov
and
push
test
fldt
adc
xchg
inc
sbb
test
add
push
mov
scas
imul
jle
add
push
repz
movsb
mov
rol
xchg
pusha
mov
bound
sbb
clc
dec
cmp
mov
fldt
inc
outsl
dec
cmp
iretw
cbtw
inc
popf
popa
inc
out
mov
mov
xor
and
pop
xchg
sahf
fimuls
or
push
xor
jecxz
mov
sub
std
push
add
or
mov
mov
mov
push
jge
test
cmp
jmp
push
jecxz
data16
sti
jbe
inc
add
dec
outsl
cmpsb
arpl
push
nop
shll
dec
aaa
aad
adc
sbb
pop
loopne
fsubr
mov
inc
mov
pop
jg
and
cmp
add
popf
mov
xchg
sub
jb
mov
outsl
and
sbb
mov
dec
loopne
lods
daa
or
ljmp
ss
and
mov
add
mov
xchg
roll
jmp
jno
or
mov
ret
jb
jp
add
inc
ja
mov
mov
fdivrl
hlt
push
in
orb
mov
shll
inc
jno
jle
cli
xchg
cmpsb
mov
mov
lret
add
inc
push
or
repz
and
and
jne
add
sbb
rcrl
pop
mov
mov
xchg
cwtl
cmp
cltd
mov
cmp
cmc
mov
push
fcmove
int3
pop
jno
in
sbbb
push
in
das
repnz
clc
or
aaa
xchg
cli
inc
xchg
xchg
outsb
js
mov
mov
jmp
lods
in
test
push
mov
or
adc
aam
jecxz
leave
fistl
scas
push
lds
loope
lret
cmp
shll
dec
icebp
shl
push
sbb
sbb
mov
shl
xchg
sbb
test
jp
dec
ret
cmc
jo
test
out
mov
sub
xchg
adc
clc
pop
mov
mov
fisubrl
jbe
jne
cmc
cwtl
inc
std
pop
std
mov
ds
inc
xchg
mov
int3
outsl
mov
outsl
mov
shl
pop
jae
pop
loop
xor
pop
icebp
pusha
push
icebp
cmp
inc
add
dec
shl
mov
mov
pop
push
mov
push
mov
je
mov
outsl
push
into
gs
and
pushf
daa
inc
xchg
sub
and
icebp
push
sub
std
testb
cmp
imul
mov
and
mov
lods
clc
imul
out
mov
dec
push
xchg
dec
aaa
mull
xchg
orps
mov
mov
lea
jns
jl
fildll
dec
or
mov
jle
data16
xor
lea
and
imul
jbe
nop
mov
popa
mulb
mov
push
xchg
cs
fnstsw
adc
iret
mov
mov
xchg
jge
add
arpl
cld
lcall
add
mov
ficomps
push
fs
divb
aad
lods
pop
popa
daa
mov
rolb
cmp
push
xchg
mov
ret
pop
sbb
sbb
mov
xchg
push
fimuls
add
and
sbb
xor
xchg
stc
repnz
cmp
mov
idivb
call
lods
jnp
enter
ror
mov
pop
test
pop
lods
lods
inc
push
leave
gs
pop
jmp
jo
cmp
lods
fs
arpl
or
dec
cmp
jb
imul
in
roll
in
nop
push
movsl
hlt
ja
jae
idivb
push
nop
cmp
inc
adc
and
xor
and
push
push
sbb
pusha
sti
or
add
xor
cwtl
mov
loop
push
and
mov
push
xlat
ljmp
aam
pop
pop
ljmp
je
arpl
jno
out
push
aad
clc
daa
jmp
mov
inc
fcomi
nop
stos
sub
fiadds
mov
mov
cmp
cmc
insl
fdivrl
sbb
addr16
sbb
or
dec
add
mov
or
outsl
push
push
shlb
sub
and
dec
rcrl
jne
mov
push
orl
push
mov
mov
out
pop
hlt
add
xor
lds
into
fcmovb
xor
jb
cmp
cmp
jmp
test
popf
pop
fcoml
and
cs
adc
adc
pop
mov
mov
testl
adc
movl
dec
icebp
sbb
mov
call
lds
and
mov
push
mov
ds
testb
enter
push
mov
pusha
mov
xorl
push
xchg
mov
jecxz
sahf
and
jmp
or
cmp
mov
cmp
sub
sbbb
addr16
pop
punpckhdq
inc
push
push
push
or
jecxz,pn
push
or
mov
add
sub
add
lds
pushf
inc
mov
imulb
jo
movb
rcrb
jbe
or
dec
cmp
dec
pop
out
jg
lds
inc
pop
shr
movsb
daa
push
mov
mov
and
dec
std
dec
scas
mov
pop
jl
iret
and
sti
jp
jb
adc
mov
pop
pushf
jecxz
into
mov
insb
hlt
push
add
push
mov
xor
push
sbb
adc
test
mov
fcmovb
in
int3
in
adc
dec
push
inc
cmp
jae
rcrb
insl
js
xchg
pop
into
mov
mov
nop
add
fmull
ja
xchg
mov
mov
adc
insb
jns
dec
into
pop
pushf
sbb
rcll
sub
mov
adc
mov
push
add
cmp
cltd
jo
cmc
lret
mov
push
test
fwait
stc
roll
out
es
jecxz
sbb
sub
cmpsl
or
stos
mov
xor
pop
int
cmp
loopnew
cltd
add
loop
js
arpl
xchg
cmp
jb
push
xchg
stos
or
and
inc
sub
out
call
jo
push
dec
insl
dec
js
dec
iret
xchg
pop
into
cmp
mov
or
test
test
jmp
pusha
and
mov
or
ljmp
ret
inc
in
insl
sbb
lds
aad
jg
imul
or
subb
andl
pop
mov
xor
mov
jmp
mov
mov
ja
lcall
cmp
in
in
icebp
cmp
inc
cmpsb
shrb
mov
movl
stos
jmp
repz
imul
jmp
insl
mov
mov
xchg
in
sub
icebp
dec
insl
icebp
jle
inc
pop
shrl
je
fs
push
mov
xchg
lds
shl
sahf
xor
push
in
lea
int3
outsl
outsb
sbb
jp
inc
ja
cmp
add
xor
pop
xchg
jp
fidivrs
xchg
mov
xchg
mov
dec
hlt
jnp
jl
adc
mov
dec
pop
jle
xchg
pop
add
dec
aas
sbb
js
mov
jbe
adc
ret
sub
xchg
aad
mov
and
fsubrs
xor
dec
push
rcrl
imul
or
ds
sub
mov
xor
cmp
push
xchg
mov
xor
adc
cld
sbb
scas
xchg
scas
mov
jecxz
hlt
cmp
shrl
adc
cmpsl
push
leave
push
mov
dec
bound
rcrb
das
inc
sub
xor
mov
mov
mov
movsl
xchg
jp
adc
bound
mov
jae
sbb
pop
xchg
sub
loop
mov
sub
sahf
add
ljmp
xchg
xor
push
cmp
xor
and
xor
and
sub
ret
dec
rclb
out
adc
movsl
rcrl
into
movsl
xor
out
jg
and
sbb
lds
insb
ret
rolb
andl
ret
or
adc
test
mov
repz
test
int3
test
push
in
pop
sub
jle
xor
push
test
outsl
sbb
mov
fsubr
dec
shlb
insl
sub
push
popa
imul
in
push
cmpsb
ret
or
push
imul
imul
pop
les
dec
hlt
mov
jl
insl
and
rcl
mov
in
cmpl
rcrl
popl
lahf
sbbb
mov
and
cmp
leave
push
lods
cld
aam
dec
outsb
push
lods
xor
add
jge
push
in
sbb
dec
add
cs
test
mov
scas
pop
hlt
xchg
inc
mov
or
ljmp
inc
inc
sbb
loopne
enter
ss
lods
xchg
mov
dec
scas
sbb
jno
jne
dec
test
cmp
out
dec
sub
ret
sub
mov
and
jbe
jns
jg
mov
mov
push
xlat
mov
lea
daa
sub
popf
andl
inc
popf
push
cmpb
jl
ljmp
pop
push
aad
insl
mov
jno
test
icebp
ja
std
insb
or
mov
mov
push
ljmp
and
mov
mov
sbb
or
cli
mov
sub
into
adc
repz
cmpsl
xor
xor
aaa
mov
mov
fidivrl
jnp
div
out
jmp
or
mov
dec
daa
fucomp
adc
lret
xchg
scas
jno
push
call
xor
ljmp
lcall
adc
cmp
xor
int3
dec
pop
movsb
lret
or
xchg
sub
hlt
cmp
xor
pushf
sbb
xchg
dec
sbb
arpl
add
mov
lret
addb
idivb
in
dec
fidivl
inc
push
incb
rclb
push
fs
cmc
cwtl
es
xor
ljmp
dec
sarb
inc
mov
out
jb
stc
mov
xchg
mov
sbbl
sub
add
jmp
sub
cmpsb
fsts
clc
cmp
repz
fwait
jnp
mov
testb
inc
push
rcrb
mov
fmul
lods
mov
jo
das
sub
xlat
testl
sbb
fistps
js
and
std
mov
dec
out
jmp
add
lock
mov
cmp
scas
fsubl
sub
lock
push
dec
push
ret
out
ja
push
cmc
bound
xor
jp
into
xchg
dec
inc
mov
mov
push
mov
test
dec
sbb
cmc
daa
insl
add
push
jo
jb
adc
mov
lds
mov
mov
or
inc
enter
sub
scas
gs
mov
ds
dec
loope
sub
sbb
jmp
fs
bound
jae
out
sub
mov
mov
pusha
sub
mov
sbb
enter
int3
lea
popa
sar
iret
inc
outsb
add
push
sbb
fnstsw
jl
lahf
ds
wbinvd
cwtl
ljmp
or
scas
ljmp
enter
std
mov
or
and
lahf
hlt
pushf
out
cld
cli
call
xchg
std
ja
push
lcall
lds
mov
stc
gs
je
lds
lahf
not
movsb
add
or
leave
cli
adc
jns
sbb
pushf
xchg
pop
mov
inc
mov
adc
rol
jl
sbb
add
or
imul
loope
mov
insb
enter
inc
shll
adc
and
jno
shll
out
repnz
push
push
sti
jb
cmc
mov
push
jbe
insb
ret
hlt
adc
enter
pop
test
rcrl
mov
imul
add
jl
mov
lcall
cwtl
sub
shrl
add
sub
mov
adc
sub
push
push
icebp
mov
imul
test
and
call
or
mov
icebp
and
inc
lcall
sub
cmpsl
out
xor
popf
gs
imul
lcall
out
dec
ds
in
xchg
movsl
lods
mov
lds
fidivs
pop
mov
xor
int3
xchg
dec
loope
jnp
cld
stos
ret
adc
xchg
inc
enter
xor
jnp
stos
cmp
insl
sbb
repnz
jecxz
adc
mov
in
inc
fidivs
cmp
ss
shl
adc
or
stc
inc
out
popf
mov
jp
loopne
push
jmp
incb
adc
loopne
xor
or
xchg
mov
jge
pushl
fs
movsb
adc
out
je
inc
push
adc
test
sub
rorb
cmp
jb
xor
add
sub
sahf
dec
cltd
inc
push
daa
push
fmul
lock
std
xchg
popa
das
jns
adc
jb
cmp
aam
pop
and
andb
dec
add
cmp
div
inc
jae
sub
pop
jbe
jnp
add
mov
jo
int3
mov
jbe
clc
movsl
or
cmc
test
adc
adc
call
xchg
test
mov
repz
movsb
or
jnp
xor
or
add
sbb
mov
jae
into
sbb
ret
add
mov
dec
and
dec
fstp
push
fnstsw
xchg
cmp
sbb
flds
push
test
adc
fstl
stos
mov
dec
movb
pop
scas
cmp
std
in
stos
scas
mov
cs
mov
stos
inc
fstl
lds
enter
movsb
push
mov
loopne
ret
xchg
fsub
and
xor
sub
inc
or
jg
mov
jo
addr16
sub
sub
xchg
sahf
loop
in
scas
mov
insb
jnp
adcb
dec
pop
dec
jae
in
mov
pop
mov
push
in
pusha
xor
sbb
out
dec
dec
cmp
cmp
mov
fldcw
fsubr
push
pop
rcrl
adc
icebp
mov
or
sub
pop
pop
inc
popf
or
sbb
in
rcrb
push
dec
stos
mov
jecxz
fs
lahf
xor
push
jne
mov
mov
fwait
cmc
push
push
shrb
lret
and
cld
sub
orl
sbb
mov
sbb
pop
movsl
aas
xchg
incl
repnz
cwtl
idivb
leave
cmp
pop
add
in
and
cmc
or
ret
test
adc
mov
rcll
movsb
aam
inc
les
cltd
jg
movsl
lds
push
push
lds
lret
cmp
cs
repz
pop
loop
and
jns
dec
sub
ljmp
or
leave
ljmpw
leave
pop
out
outsb
sbb
adc
ds
lock
enter
xchg
bound
loope
inc
js
cld
out
inc
sbb
mov
pop
jns
sub
repnz
lret
ret
cmc
fs
fisubrl
aas
aam
lock
pop
testb
jle
out
inc
popa
push
pop
arpl
ss
adcb
fucomip
aaa
and
das
add
adc
mov
sub
ds
lahf
adc
out
mov
loop
shl
mov
mov
or
sarl
pop
and
clc
movsl
nop
inc
fisubl
mov
mov
stos
loop
sub
cwtl
push
xor
inc
fistl
addr16
and
aad
jo
in
in
les
pop
add
jns
or
and
movsl
sub
inc
pop
cmc
cli
ljmp
gs
xchg
jmp
inc
or
in
jbe
pop
test
mov
outsb
aad
fsub
clc
inc
cmpsl
dec
jo
fiadds
into
rcll
sbbl
adc
jb
ffreep
mov
and
mov
shr
push
cmpsl
inc
insb
mov
jno
sahf
push
push
icebp
mov
sti
xor
sbb
jl
cmp
push
inc
fdivrs
jecxz
cmp
cmp
gs
call
mov
outsl
cld
cltd
inc
addr16
dec
inc
mov
sub
popf
mov
enter
ficompl
jp
bound
mov
inc
pop
mov
iret
sbb
pop
pop
outsl
jae
add
fcmovnbe
push
dec
pop
scas
lahf
inc
mov
xlat
icebp
sbb
dec
and
ret
pop
push
push
arpl
stos
out
xor
dec
mov
jmp
pop
fwait
mov
cmc
shlb
pop
movsb
fiadds
fldt
adc
das
sub
xchg
pop
ret
sarb
mov
aad
sub
xor
cmc
sarb
es
pop
ret
mov
shrb
mov
push
and
sbb
adc
push
je
mov
xor
adc
sub
jge
adc
xchg
jnp
xchg
roll
add
jne
inc
sub
mov
lock
scas
leave
loop
xor
pop
mov
mov
mov
adc
xchg
xchg
cmpl
imul
jo
and
lahf
push
jbe
xchg
xor
imul
jo
and
push
mov
movsl
ljmp
cmp
repz
stos
and
rcrb
cmpsb
jns
mov
into
lret
add
mov
ss
daa
cltd
clc
nop
lods
inc
push
cli
cld
xchg
lret
xchg
mov
sbb
xor
gs
ficoml
daa
xor
xchg
test
mov
add
mov
sub
js
sti
xchg
inc
arpl
pop
xchg
and
xchg
push
ja
or
inc
hlt
js
mov
loop
mov
addr16
test
xor
mov
sbb
test
or
sbb
jmp
xor
adc
adc
sbb
jle
imulb
or
daa
int3
xchg
mov
call
test
sahf
add
xlat
cmc
lods
mov
mov
outsb
lock
std
insl
in
pop
sarb
int
andb
hlt
in
dec
sub
mov
sub
lahf
jno
insb
iret
pop
iret
or
lahf
popa
cmp
xchg
xchg
cwtl
pop
or
and
rorb
jmp
jne
fisubs
cmpsb
jne
rcrl
or
inc
and
ja
adc
xlat
outsb
test
push
fucomip
xchg
out
mulb
psubsw
pop
jmp
sbb
xor
notb
ljmp
shrb
cmp
cmp
dec
hlt
jbe
mov
inc
leave
bound
dec
cmpsb
ss
shll
or
xor
repnz
xchg
add
sub
mov
jmp
mov
mov
iret
jb
mov
and
cmp
sarb
int
dec
push
mov
test
lret
rcll
call
pushf
xor
dec
mov
mov
lods
lods
mov
fmulp
dec
xor
dec
test
int3
dec
pop
sti
add
and
sti
mov
fistpl
scas
aaa
bound
add
or
popa
les
adc
lcall
daa
out
xchg
jecxz
repnz
cmpsl
lock
cmp
dec
movsb
add
mov
sahf
cmpsb
add
cmp
inc
fwait
insl
addr16
cmp
adc
pop
mov
cmp
adc
cmp
or
repz
mov
scas
xor
and
adc
jecxz
fldl
iret
mov
js
adc
addb
xchg
sub
pop
fisubrs
xorb
and
cmpsb
roll
sub
enter
dec
jns
out
xlat
test
movsl
aaa
movsb
pusha
dec
dec
iret
es
fmulp
cmp
jbe
stos
cmpsl
jae
rorb
lret
cld
jecxz
mov
fiaddl
xchg
or
xchg
mov
loope
fidivrs
stc
xchg
mov
xlat
xchg
mov
xor
mov
sbb
imul
or
jne
mov
jnp
push
test
std
gs
sbb
sub
xchg
pop
fadds
xor
mov
sub
mov
and
mov
shll
push
sub
aad
into
push
test
add
lret
std
xchg
shrl
test
or
jge
outsl
sbb
pop
arpl
inc
movsb
lea
xchg
div
test
frstor
fimuls
aad
lock
push
insl
scas
xchg
ja
pop
mov
fsubrs
sub
int
iret
leave
xorb
cld
outsl
mov
sahf
sub
andb
pop
xchg
addb
lods
inc
xlat
fidivs
push
mov
cmp
add
fistps
jbe
and
cmpsl
xchg
mov
les
jae
dec
xchg
fimull
out
jle
fwait
push
dec
mov
push
leave
sub
les
mov
push
test
es
leave
push
inc
sbb
cmp
push
mov
cmc
sbb
fstpt
add
and
pop
stos
sub
add
jo
and
dec
mov
into
insb
popa
pop
lock
mov
push
fmull
jl
sti
ja
aaa
stc
andb
addr16
call
fstps
sub
jl
sbb
add
movsl
outsb
repz
adc
adc
xchg
std
stos
roll
ud1
ss
or
pop
mov
daa
lcall
inc
or
or
ja
jecxz
mov
or
cmp
pop
jge
fs
ss
inc
adc
and
scas
mov
inc
fcoms
sti
mov
xor
outsb
stos
imul
mov
dec
push
push
or
pop
dec
mov
popa
xor
iret
rolb
mov
bound
push
fs
xor
dec
popa
xchg
jmp
jb
pop
xchg
cmpsb
and
scas
xchg
pop
sbb
xchg
lods
add
cmp
mov
fwait
inc
add
hlt
or
cmpsl
xchg
es
mov
push
xor
adc
cmp
dec
jb
dec
mov
imul
leave
lock
out
xchg
and
jno
sub
xchg
xchg
js
mov
dec
pop
addr16
nop
mov
das
jecxz
mov
js
ss
leave
loope
es
cmpsl
loopne
lods
adcb
push
fbld
mov
std
xchg
mov
or
cmpsb
lret
add
mov
pop
ficompl
lret
push
mov
push
xchg
jnp
inc
push
jae
sahf
and
mov
sub
dec
fisubl
push
push
xor
and
xchg
push
lea
js
cmp
mov
xchg
sub
dec
xchg
dec
test
out
test
push
xor
xchg
iret
lcall
imul
call
push
repnz
inc
pop
cmp
loopw
lret
mov
adc
jno
std
sbb
lret
jbe
jmp
cmc
add
mov
dec
mov
or
dec
xchg
repz
fwait
jg
or
push
sbb
cmpsl
jns
cli
pop
ret
iret
push
cmovle
inc
dec
pop
negl
mov
stc
mov
lret
mov
jns
imul
dec
lret
int3
fists
or
cmp
mov
push
xchg
push
shl
jge
mov
push
lock
jp
cltd
std
stc
lahf
aad
test
js
add
pusha
add
in
cmpsb
movsb
dec
addb
mov
xor
stos
ret
lods
pop
or
repz
int3
loopne
cltd
icebp
adc
rcrb
mov
inc
dec
mov
push
xor
inc
popa
clc
cmc
insb
push
jb
push
add
xchg
xlat
mov
mov
aaa
ret
sub
xchg
data16
sub
push
add
in
mov
frstor
sti
icebp
pop
ror
das
adcb
gs
nop
sbb
movsl
in
dec
sub
sub
dec
sti
xchg
shrl
inc
jne
xchg
inc
rep
imul
ret
push
scas
sti
xchg
jnp
push
add
mov
test
dec
enter
sarl
push
and
repz
pop
push
push
push
subl
stos
sbb
jl
or
xor
push
adc
dec
jnp
inc
and
lret
int
inc
push
jbe
add
push
push
ret
mov
sbb
shll
lds
adc
add
jecxz
jne
pop
mov
addr16
lods
adc
mov
jno
pop
adc
mov
xchg
jo
mov
mov
pop
dec
aad
sub
inc
xchg
lods
push
jb
jmp
mov
inc
add
sub
cmpsl
bound
push
sub
popf
or
aam
and
push
cld
add
je,pn
lcall
gs
or
fnstenv
in
ja
or
xchg
insb
xor
mov
js
mov
fwait
and
test
inc
sub
sub
xlat
mov
sub
cmpsl
pop
clc
in
jbe
or
mov
aad
or
stos
xchg
insl
push
and
hlt
pusha
push
fsts
nop
xchg
mov
pop
mov
mov
inc
in
iret
lods
inc
add
out
mov
or
inc
outsb
stc
outsb
loope
or
rorl
insb
fs
pop
push
stos
mov
dec
push
popa
int3
pop
xchg
addr16
notl
outsb
imul
jmp
das
sahf
add
pop
cmp
xchg
or
loopne
push
sbb
imull
cmc
movsb
hlt
jmp
mov
mov
subl
call
xor
flds
mov
scas
adc
pcmpgtw
sbbl
mov
aad
int
adc
aaa
scas
neg
mov
add
into
cmp
xor
mov
test
inc
roll
adc
mov
shl
loop
fsts
test
fs
cmc
or
adc
inc
and
xchg
xchg
mov
xor
jne
xchg
and
pusha
repz
insl
loopne
cltd
mov
repz
icebp
nop
call
aaa
dec
xchg
xlat
and
sbb
test
aad
clc
jg
ror
pop
loope
inc
sub
jg
cmpl
mov
ss
xor
sbb
dec
mov
notb
stos
lds
es
jo
andb
or
data16
movsb
lock
and
cmp
out
das
mov
xor
mov
loopne
insl
push
outsl
out
mov
xchg
xor
sbb
out
mov
sub
xchg
xchg
push
add
ret
lods
push
push
sahf
js
iret
ss
pop
lcall
aaa
loopne
cli
and
lds
clc
or
sahf
into
pop
mov
mov
loopne
outsl
test
or
or
adc
adc
jnp
sub
dec
pop
ret
out
pusha
xor
lea
iret
cmpsb
push
inc
daa
in
ret
mov
jb
sbb
dec
and
jns
movsl
lds
jp
repz
adc
mov
mov
xor
and
popa
xor
mov
push
sahf
pop
jmp
xor
movsb
cmp
pusha
scas
fneni(8087
cmpl
bound
popf
and
push
outsl
sub
incl
inc
pop
dec
jg
inc
push
lret
lods
push
pop
fs
je
mov
push
repnz
data16
loopne
sbb
push
xchg
pop
mov
mov
mov
jle
push
dec
shl
xchg
enter
mov
sbb
movsb
inc
lods
mov
sbb
ficoms
mov
mov
mov
jne
icebp
das
inc
and
inc
arpl
aam
xor
mov
mov
mov
jl
das
repnz
imul
xchg
sub
ret
rcrb
mov
dec
jecxz
adc
jmp
clc
shl
mov
int
cmp
xor
stc
cmc
rorl
rclb
sbb
pop
jne
push
ficompl
xchg
fsubs
mov
or
dec
shlb
inc
push
sbb
lods
push
push
data16
jg
pushf
mov
inc
push
subl
mov
into
push
push
push
jns
dec
mov
jge
add
xchg
nop
jl
jmp
int
fiaddl
push
push
popa
sbb
push
pop
pop
ficompl
fimull
jo
shlb
loop
outsl
or
cmp
out
mov
imul
fwait
sbb
add
push
jle
push
jmp
pop
mov
test
ja
lds
outsb
pop
cmp
loope
push
push
jmp
loope
orl
in
mov
adc
mov
dec
push
sub
inc
cs
lds
inc
xchg
cmp
push
stc
shll
xchg
in
shrb
in
outsl
or
xor
in
and
dec
fmulp
ret
add
popa
aas
cmp
mov
push
test
push
pop
push
jb,pt
xchg
push
pop
iret
data16
jae
adc
insl
sub
pusha
sbbb
ljmp
int3
push
jno
sub
xchg
adc
sti
sbb
jp
dec
sub
and
int
add
dec
repnz
mov
pop
test
stos
inc
lea
mov
xor
fnstenv
aas
jmp
jl
pop
fsts
mov
jg
mov
psubd
jns
testl
je
adc
and
pop
sub
jl
pop
cmp
jecxz
dec
adc
and
nop
out
dec
sbbl
movsb
aas
inc
or
adc
push
mov
or
movsb
cmp
outsb
test
xchg
mov
push
cmp
fdiv
das
or
inc
aam
je
addb
pop
push
cmpsb
mov
push
fistpl
cmp
call
pop
push
xor
mov
xlat
mov
scas
mov
pop
or
repnz
xchg
ret
dec
imul
cmp
int
in
mov
lods
adc
hlt
ljmp
lcall
js
popl
cmp
negl
jg
adc
jbe
jecxz
jns
inc
fnstcw
les
loopne
xlat
cmc
xchg
sub
ret
push
pop
dec
or
sub
push
cmpsb
lock
cli
sbb
or
lret
test
push
lret
adc
jb
pop
fisttps
scas
test
pop
dec
inc
fimull
std
inc
fidivl
js
out
push
bound
push
jo
dec
xlat
test
pop
jmp
add
mov
dec
ret
das
data16
stc
mov
and
sub
xor
cmp
popa
imul
test
inc
scas
mov
push
jge
pop
add
mov
lcall
and
jno
jge
xor
mov
in
sbb
push
out
sub
fcoms
pop
scas
call
rcrl
cs
jns
arpl
ds
fldenv
mov
dec
nop
pop
pushf
test
cmpsl
fstps
jge
hlt
pop
mov
fwait
stos
repz
fstpt
sar
jb
test
dec
dec
movsl
idivl
imul
out
test
push
dec
loopne,pt
call
dec
dec
push
jl
mov
ror
leave
cmc
adc
mov
mov
pop
imulb
test
lds
push
xlat
adc
mov
or
pop
cmp
dec
test
stos
sub
push
cmp
cmp
arpl
cltd
or
sbb
pop
pop
push
popl
mov
mov
cmpl
add
in
mov
inc
popf
test
je
or
xchg
nop
in
fs
add
dec
ja
jmp
adc
xchg
imul
incb
stos
xchg
push
push
dec
aad
ss
xchg
js
mov
aas
jno
cmp
cltd
je
dec
pop
sbb
xchg
imul
movsb
mov
fdivrp
jno
mov
mov
sbbb
and
mov
push
bound
fsts
jecxz
stos
fcmove
call
insb
jg
cli
in
sub
jle
mov
cwtl
mov
sbb
stos
lahf
iret
leave
ss
test
data16
inc
pop
xchg
je
mov
stos
mov
movsl
scas
adc
pushf
sub
dec
inc
shlb
mov
inc
aam
jmp
enter
fcmovu
mov
xor
inc
and
data16
rcll
mov
ja
hlt
push
sub
lods
xchg
sti
sub
inc
enter
sub
sub
imul
sbbl
das
popf
ljmp
xor
adc
pop
and
pop
rep
mov
or
xchg
pop
cmpsl
jmp
jo
shll
dec
dec
dec
push
or
push
out
jge
enter
mov
call
inc
test
cmp
cmp
inc
je
imul
inc
ds
stos
or
andb
fldcw
out
ja
push
popa
inc
mov
imul
lods
sub
mov
popa
mov
or
push
pop
andl
lret
imul
cmpl
cmpl
push
jge
adc
pushf
repz
insl
insl
sub
daa
testl
std
pushf
shrl
fimuls
mov
std
leave
filds
push
and
inc
push
outsl
popf
or
cmp
mov
and
mov
ds
sub
jno
out
sti
and
add
enter
scas
push
out
popf
mov
stos
out
gs
out
dec
ljmp
jbe
pop
sbb
das
mov
test
mov
ficoml
int
mov
push
inc
movsl
push
frstor
xor
inc
mov
sbb
outsb
test
jb
cmp
cmc
mov
pop
xor
fiaddl
loope
rcrl
mov
jmp
rolb
rcll
out
mov
ja
inc
add
xchg
sub
sbb
int3
xchg
mov
fwait
sbb
mov
and
test
jg
sbb
inc
xchg
out
mov
dec
cmovge
das
shrl
add
insl
or
pop
and
stos
shrl
push
mov
pop
imul
or
push
mov
or
lcall
xchg
jmp
test
hlt
mov
jge
push
push
or
sbb
lret
push
and
fisubrl
lea
inc
lods
mov
xchg
stc
inc
rcll
fcmovne
sbb
std
cld
or
es
out
test
push
mov
inc
push
jecxz
test
test
cli
fsubs
add
js
xor
or
subl
dec
or
or
popf
sbbb
pop
stc
and
sbb
inc
push
imulb
inc
outsb
mov
stc
movzwl
inc
mov
mov
aad
repz
hlt
mov
movsl
mov
mov
and
mov
jecxz
popf
imul
xor
daa
and
aad
mov
xor
shrl
mov
or
and
scas
repz
test
adc
xor
lods
add
mov
sbb
jg
stos
jge
jae
mov
addr16
sbb
mov
lock
clc
sar
and
test
iret
push
mov
scas
xchg
xchg
xor
inc
into
arpl
sbb
sbbb
dec
test
fnstsw
mov
push
mov
or
pop
pop
add
lock
test
ja
xor
fidivs
iret
push
pop
cmp
addr16
lock
push
testb
mov
les
sub
jno
inc
mov
dec
xor
fwait
lods
movsl
or
dec
xchg
movsl
mov
mov
call
jae
pusha
add
int3
adc
imul
jle
jg
sbb
loop
repz
dec
lcall
in
mov
cwtl
es
xor
pop
xchg
stos
sub
push
lret
adc
ljmp
xor
dec
jp
mov
scas
nop
loopne
dec
iret
negl
mov
in
roll
mov
popa
xchg
xchg
rorb
ds
xor
mov
std
xchg
enter
aad
bound
xchg
inc
arpl
pop
lds
mov
not
filds
xchg
dec
in
hlt
into
jno
mov
in
pusha
adc
jmp
mov
adc
xor
sub
cmc
xchg
push
add
hlt
cwtl
cwtl
xor
sub
xor
pop
xchg
lahf
jnp
jne
sbb
mov
movsl
and
lods
mov
mov
dec
xchg
rol
or
inc
cltd
sbb
insl
es
enter
fdivs
aam
mov
stos
stos
jne
rcrl
bound
lret
pushf
adc
cli
int
jge
out
andb
sbb
jbe
into
jae
mov
enter
dec
mov
pop
test
data16
neg
es
sti
mov
rorb
scas
fst
adc
sub
pop
je
pop
xchg
xchg
xor
sbb
adc
fmull
int3
pop
push
clc
xor
dec
mov
inc
mov
cmp
aas
cmp
or
fimuls
sub
push
into
jno
outsl
pusha
adc
xor
cld
cmpb
in
in
mov
movsl
sub
mov
pop
mov
les
out
mov
add
add
cmp
adc
lea
xchg
pop
pop
movsl
dec
mov
scas
dec
rol
inc
jmp
hlt
xchg
sub
fiadds
into
inc
sbb
fidivs
mov
ret
and
jp,pn
mov
push
mov
dec
xchg
adc
fbstp
leave
xor
sbb
xchg
push
push
out
pushf
out
clc
outsb
add
dec
sbb
fst
outsl
addb
jg
inc
mov
test
aas
cmpb
fcompl
or
or
mov
mov
js
xor
push
push
adc
in
test
test
cmp
add
in
cwtl
mov
mov
icebp
cli
andb
and
test
adc
loope
mov
lea
ja
es
leave
ror
cwtl
fimull
lods
xor
pop
int3
pop
shrl
push
sub
and
rol
push
std
fnstenv
push
js
add
sbb
mov
cmp
sub
mov
lahf
rclb
iret
sub
xchg
xor
or
sbb
push
out
jg
cwtl
andb
mov
iret
fxch
mov
and
pop
je
mov
test
jmp
and
ficomps
out
es
movsb
fidivs
or
ret
hlt
lods
in
imull
cs
mov
fldt
int
xor
shrb
shrl
xor
push
mov
addb
bnd
pop
sub
into
rclb
aad
jne
push
inc
and
into
sbb
mov
cmp
push
jmp
jg
das
push
sub
inc
pop
rorb
sbb
outsb
push
popf
cmp
imul
xor
push
fcmove
mov
and
pop
jle
mov
cld
fisubrs
fucomip
jno
lds
rcrl
test
sub
or
jmp
loopne
lea
shl
mov
mov
std
jp
ret
pop
rcrb
mov
in
adc
icebp
jg
cmpxchg
sub
cmova
mov
xchg
jmp
cltd
adc
push
push
mov
mov
push
ret
hlt
popf
lcall
data16
cwtl
sbb
push
sub
dec
fistps
cmc
fstpt
stos
clc
lret
mov
sub
icebp
adc
leave
popf
add
roll
imul
push
jne
shll
out
lahf
xor
jp
cmp
pop
push
mov
outsb
popf
sbb
movsl
cmp
nop
rcl
je
mov
mov
ja
call
cmc
inc
mov
out
gs
loope
lahf
jnp
cmp
xrelease
fdivrs
bound
sub
xchg
repnz
loopne
inc
inc
pushl
xor
dec
cmc
push
test
idivb
pop
out
add
es
or
xchg
xchg
scas
xor
xor
jnp
lods
inc
cmp
in
into
call
xchg
lcall
mov
call
or
add
dec
repnz
pop
fdivrs
ficoms
pop
rcrb
cmc
xchg
outsb
leave
xchg
in
jle
scas
cmp
mov
add
cmp
test
push
sub
fs
addr16
and
test
jmp
call
or
fidivrs
pop
or
pop
stc
mov
test
imul
rorb
mov
in
sti
mov
mov
subb
sti
cmp
dec
mov
enter
add
cmpsl
xor
and
cmp
inc
add
adc
enter
xor
lods
ljmp
xchg
adc
sbb
xlat
mul
das
imul
push
inc
inc
mov
cmpsb
pop
mov
popa
jge
jl
dec
fisubrs
mov
or
into
call
xchg
jbe
xchg
cmp
pop
mov
pop
jge
mov
ret
shlb
inc
xchg
inc
int
and
adc
mov
sbb
add
insb
sub
and
in
repz
mov
cmpsb
sub
push
add
jle
mov
cmpsb
out
pop
fcom
xlat
sub
insl
adcb
lcall
push
add
les
dec
ror
jge
push
in
loopne
data16
cmpsb
lods
pop
in
test
pop
and
sbb
scas
inc
xor
dec
add
loop
pop
outsb
sub
stos
loop
mov
movsl
gs
and
test
xchg
data16
xchg
bnd
mov
roll
sahf
add
xchg
inc
mov
lcall
dec
pusha
or
mov
jnp
sahf
push
sub
sarl
inc
sub
lret
sti
andl
jo
cmp
je
addr16
xchg
mov
mov
aas
xchg
mov
xor
mov
push
cmpb
mov
loopne
or
mov
cmp
jmp
xchg
orl
insl
into
push
jg
mov
ror
popf
stc
mov
xchg
pop
rcr
fidivl
jbe
mov
movsl
inc
mov
jbe
and
adc
movb
and
rcrb
adc
test
jb
sbb
jecxz
xchg
lds
push
sti
sahf
dec
add
xchg
mov
lret
xchg
es
jne
mov
sbb
jp
lods
subl
or
cmpsl
or
sbb
addb
mov
subl
jg
aam
repz
arpl
and
adcl
pop
cmp
popa
cli
popl
es
in
pop
imul
aaa
xchg
dec
movsl
decb
jge
loope
test
test
push
inc
das
bound
or
xchg
pop
lret
pop
xor
jle
mov
pop
loope
pop
push
xlat
pop
push
je
pop
pop
jbe
jo
sub
inc
push
icebp
aaa
push
dec
jae
pusha
movsl
imul
push
dec
lret
jne
jg
or
jns
mov
std
xchg
and
cwtl
arpl
lret
into
xor
cmp
in
jae
enter
dec
or
pop
imul
test
push
aad
cld
xchg
push
icebp
test
pop
ficoms
pop
mov
and
mov
scas
mov
cmc
sbb
and
pop
or
sbb
mov
shll
popf
test
adc
stos
pop
add
sbb
mov
scas
ljmp
jge
mov
iret
xor
loope
sub
jp
sbb
adc
repnz
push
push
mov
ret
cmp
lods
sub
rcrb
push
cmp
frstor
dec
xor
mov
arpl
pop
fnstenv
inc
jb
pushf
mov
int
scas
or
add
push
mov
pop
dec
scas
add
jbe
cmp
lods
or
sub
cmp
and
mov
pop
sub
loope
push
mov
xchg
and
sub
mov
jbe
xchg
xchg
fnsave
lock
das
iret
sbbb
or
stc
fstp
loop
int3
ja
add
fdivl
dec
dec
and
pop
js
scas
iret
popf
mov
addr16
out
dec
and
jae
and
add
jecxz
mov
pop
jb
call
in
test
enter
mov
add
push
repnz
push
push
bound
pop
das
mov
mov
adcb
ljmp
mov
and
scas
pop
xor
iret
dec
arpl
push
ljmp
pusha
inc
bound
lcall
idiv
ja
adc
cwtl
pusha
or
mov
sub
ljmp
ss
mov
push
pop
and
into
inc
mov
xchg
ss
sbb
ret
int
in
sub
jecxz
cmp
stos
add
in
xchg
out
xchg
cmp
cli
incl
pop
iret
loope
mov
lahf
cmp
mov
scas
or
imul
iret
fnstcw
imul
adc
in
dec
out
xor
pop
mov
lods
test
mov
scas
popl
push
shll
insl
shlb
or
pop
pop
test
mov
lret
xlat
aam
pop
cmp
cmpsl
fwait
mov
xlat
push
inc
loope
js
lcall
push
ret
jle
repnz
adc
dec
gs
dec
push
mov
pop
in
jae
sbb
xchg
add
adc
adc
pop
rol
out
and
add
xchg
mov
inc
xor
ds
jmp
mov
loope
dec
cli
aas
lods
jb
pusha
pusha
orl
or
push
push
sbb
sahf
cltd
mov
in
push
insb
sbb
cmpsb
cmp
movsb
dec
lea
push
mov
mov
and
clc
push
sub
ljmp
stos
dec
into
pusha
les
out
xchg
aaa
ljmp
cmpsb
arpl
loop
push
sub
xchg
push
adc
je
push
bound
nop
jge
cmp
adc
and
loope
and
in
fwait
mov
outsb
lahf
stos
imul
loope
dec
jmp
mov
dec
iret
data16
and
lahf
fisubrs
aas
sti
int
mov
inc
stc
and
idiv
push
imul
sub
lea
inc
test
scas
cltd
xor
sti
xor
test
dec
add
push
xchg
sub
fnstenv
and
notb
ja
mov
mov
cmc
push
in
and
or
cmc
xchg
xchg
rcr
in
daa
repz
mov
and
sbbl
lret
cld
mov
mov
fnsave
cmc
push
push
daa
lret
cld
xchg
add
cmp
sub
xor
mov
shll
lret
dec
xlat
pop
pop
aad
fdiv
loope
dec
dec
movsl
jns
push
out
sbb
sbb
or
sub
rcl
je
rolb
cmc
or
insb
jl
sbb
cwtl
out
sbb
mov
out
xchg
addr16
cld
and
xor
add
ljmp
lds
xchg
imulb
pop
sahf
push
sar
icebp
pop
mov
sub
sbb
divl
dec
sub
mov
lret
js
inc
adc
push
testl
fstl
sub
loopne
dec
and
push
sahf
pop
mov
xlat
ljmp
ret
cmp
xchg
repnz
mov
xchg
sbb
and
dec
in
adc
xchg
xchg
out
jecxz
sar
jno
mov
cmpsl
addl
mov
jl
jnp
sub
mov
and
ja
dec
and
xor
or
sti
imul
xchg
xchg
xchg
dec
mov
leave
xor
pop
ret
pop
nop
loopne
divl
outsb
inc
out
insl
sub
test
cmp
push
pop
out
into
fstpl
push
in
int
iret
or
popa
rcll
add
gs
inc
ss
inc
sub
pop
push
xor
lcall
test
mov
mov
ss
push
dec
or
fbstp
pop
push
pusha
cmp
xor
or
cmpsl
and
rol
je
insl
mov
xchg
scas
lea
jecxz
inc
mov
aas
adc
jae
add
icebp
mov
jl
scas
nop
mov
pop
push
mov
int
cmc
sbb
xchg
mov
aad
cmp
out
adc
arpl
sbb
sub
fwait
rcll
xchg
jbe
and
in
pop
js
jns
stos
inc
mov
inc
sbbb
dec
and
sbb
stos
jmp
lcall
sub
and
mov
jl
out
push
les
leave
jge
jecxz
adc
jl
dec
xchg
push
sbb
ret
jns
test
add
lcall
cli
loopne
fs
push
xor
std
push
or
adc
mov
stc
mov
inc
cmpsl
lret
ja
mov
ret
pop
xor
loopne
lods
loopne
daa
adc
push
or
iret
sbb
lret
shll
push
add
sbb
stc
sub
pop
pop
repz
jns
sub
inc
arpl
xor
sbb
dec
push
pop
dec
sahf
sub
outsl
jnp
jmp
sub
cmc
and
imul
testb
adc
mov
std
jo
xor
popa
mov
inc
in
out
adc
sub
js
mov
and
iret
jle
mov
or
stos
xchg
dec
aaa
xchg
lods
jecxz
and
mov
jmp
imul
ret
and
fnsave
add
mov
cld
inc
xchg
mov
ljmp
mov
into
adc
imul
mov
ret
sub
cmpsb
sbb
inc
fyl2xp1
mov
cvtps2pi
add
leave
xchg
call
push
push
aas
xchg
inc
jnp
mov
add
inc
clc
idivl
dec
in
sarl
sub
add
dec
xlat
pusha
mov
or
es
dec
ja
xchg
loopne
jl
sbb
xchg
dec
mov
mov
cmpsl
clc
push
xchg
bound
sub
pop
outsb
ljmp
lret
mov
inc
inc
shl
cltd
sbb
or
mov
add
xorl
push
test
popl
lcall
pop
out
push
ja
or
nop
ret
mov
push
movsl
addr16
out
xchg
mov
jne
push
adc
jecxz
jle
das
sub
leave
cmpsl
jp
fists
orl
lods
jl
pop
jmp
dec
mov
pop
push
jge
lock
out
shr
in
push
xchg
icebp
pop
popf
jb
loopne
xor
sahf
xor
add
es
pusha
es
fs
sbb
sub
push
cmp
mov
lret
aaa
lods
inc
jle
shl
xor
int3
cmp
cmp
imul
outsl
int
addb
mov
mov
out
in
push
lds
or
aad
mov
adc
loopne
je
mov
xchg
jl
aas
insb
subb
inc
fiaddl
xchg
sarl
push
sub
inc
jae
andb
push
pop
std
jo
movsb
es
push
sahf
roll
arpl
cwtl
add
sarl
popf
bound
and
push
push
icebp
sub
addb
frstor
aam
in
lods
hlt
jns
addl
mov
dec
dec
imul
push
into
std
jns
jns
imul
cmp
std
mov
out
pushf
dec
in
aaa
or
cmpsl
sbb
pop
lret
xor
push
ret
mov
imul
and
imul
mov
and
cmp
fcoml
in
jb
js
or
lret
testl
cmc
jge
pop
das
adcl
mov
adc
or
sahf
clc
mov
lcall
or
xor
sbb
dec
pop
insb
cwtl
mov
push
scas
mov
pop
mov
lret
adc
mov
jg
in
push
je
subl
mov
data16
les
fistpl
aas
pop
dec
movsl
pop
mov
movsl
lcall
data16
adc
fs
xchg
stos
daa
fsubl
or
jle
xchg
mov
pop
dec
dec
aad
cmp
sbb
incb
and
in
cmp
imul
lods
lods
pop
cmp
jbe
add
mov
ret
dec
cltd
jo
mov
inc
repnz
push
aam
pop
mov
mov
mov
mov
cmp
js
gs
mulb
enter
mov
dec
cmp
jo
xchg
popf
mov
les
fldenv
arpl
lds
mov
lea
mov
push
lcall
pop
in
test
or
fnsave
fwait
cmpsl
inc
xchg
sti
jbe
lock
lret
int3
rclb
ja
sahf
sub
andb
insl
movl
or
mov
cmp
test
add
jnp
sbb
inc
pop
cmp
jnp
jo
subb
dec
aaa
iret
rclb
jno
cwtl
push
fwait
sbb
or
lcall
bound
movsb
sbb
jo
inc
mov
aaa
xchg
push
dec
pop
cmp
fldcw
aad
scas
jns
mov
pop
sbb
test
sbb
popa
or
or
push
pop
add
sar
and
sbb
ds
jg
xchg
pop
jb
sbb
ljmp
lock
rorb
sbb
xor
and
sub
pop
jg
rorb
fisubrs
das
lret
push
and
fimuls
idivb
int3
aas
dec
add
fisubs
sub
xchg
dec
pushf
je
push
jg
in
pop
adc
je
test
cmp
pop
scas
sub
dec
xor
dec
xchg
xchg
xor
movsb
mov
icebp
mov
xchg
sub
mov
mov
jns
decl
lcall
daa
adc
lds
gs
aam
insb
push
ss
in
xchg
loope
jecxz
out
repnz
inc
xlat
addr16
pop
sub
das
lods
add
loop
push
or
repz
insb
rorl
rol
jnp
xlat
in
stos
ja
fdivl
ja
cmp
sbb
mov
fisttpl
scas
and
xchg
mov
inc
ja
dec
jns
mov
imul
xchg
mov
fistl
nop
mov
dec
outsb
jno
shlb
hlt
mov
inc
add
fwait
sbb
fcomi
in
and
pop
arpl
inc
push
push
imul
int
pop
jbe
jmp
aas
pop
inc
mov
push
cmp
inc
mov
rcrb
or
ficoml
cwtl
pusha
popa
and
cmp
push
fwait
push
and
pop
adc
and
push
test
mov
ja
mov
sub
sbb
sbb
jge
mov
or
pop
movsl
xor
ret
dec
nop
push
sub
adc
add
dec
sub
icebp
out
sbb
adc
inc
cmp
clc
push
lcall
or
add
inc
out
iret
fcomi
cmpl
ret
in
and
push
push
cltd
out
pop
inc
popa
cmp
cmp
stos
or
cmp
rolb
fidivrs
outsb
push
or
jne
ds
adc
movsl
sbb
jp
int3
arpl
inc
into
add
ljmp
sub
imul
push
loope
and
insb
jle
inc
fs
jecxz,pn
call
cmc
cmpsb
push
mov
sbb
out
aaa
jecxz
pop
imul
pop
push
lret
mov
xorb
out
shrl
xchg
ret
sbb
ret
rcrb
or
lcall
into
cld
frstor
outsb
sarl
mov
jge
lahf
ss
push
cld
lret
xor
jo
lods
jbe
dec
mov
adc
push
pop
testb
jge
roll
fwait
cmpsl
and
push
cltd
imul
and
jmp
aam
jle
push
outsb
ljmp
lods
push
or
ret
cmp
testb
pop
into
enter
sbb
cmp
inc
hlt
xlat
mov
inc
in
loope
das
xchg
cmp
push
xlat
insb
xchg
push
ret
aas
repz
repnz
dec
in
or
rorl
xchg
sub
negl
lods
jne
test
fimuls
jp
aas
lods
inc
jno
xchg
sbb
dec
in
mov
add
bound
pop
divl
push
je
js
mov
aaa
jg
or
mov
pop
mov
nop
adc
out
fwait
subb
or
fcmovnbe
push
sti
xchg
outsb
add
mov
or
cli
xor
ret
adc
cmpsl
out
stos
popf
int
inc
sbb
movsb
ret
inc
pop
pop
repnz
and
nop
fwait
mov
lcall
cmp
mov
or
mov
sub
sahf
mov
adc
jo
xor
xchg
mov
insb
andl
notb
push
push
jl
pop
je
movsb
push
iret
out
cmp
mov
push
jmp
in
into
in
jmp
mov
adc
mov
xchg
mov
jg
dec
pusha
sbb
lret
push
inc
repnz
jne
pop
mov
mov
mov
incl
iret
and
push
nop
daa
sbbb
clc
mov
inc
cwtl
scas
sbbb
decb
js
lahf
mov
subb
push
cs
pop
in
data16
inc
es
scas
fisubrs
fs
mov
add
add
test
xlat
inc
xchg
jae
ret
cmp
lods
cwtl
fidivs
out
ds
in
inc
or
sbb
jl
pop
repnz
cmp
jns
in
jmp
sbb
in
dec
sbb
inc
mov
xchg
mov
xor
fs
subl
movsl
in
pop
iret
stos
jnp
ret
and
loope
mov
push
inc
hlt
xor
cmp
pushf
xor
cmp
inc
xor
jmp
mov
pop
cmp
and
push
lcall
inc
clc
jecxz
adc
out
aas
push
sub
out
xchg
imul
xchg
fsubrp
push
mov
mov
cmp
cmpl
xchg
int
adc
push
out
xlat
imul
insb
in
cmp
cmp
or
outsl
fisubs
imul
dec
out
stos
adc
push
mov
pop
test
xor
daa
cwtl
cmp
adc
fsts
fs
and
add
jge
cmc
inc
int3
loopne
push
aam
mov
push
call
sub
dec
xchg
pop
fsubrp
inc
mov
int3
pop
sbb
pop
ret
cmp
rclb
inc
adc
mov
pop
jne
fwait
mov
leave
lcall
fisttpl
stc
dec
inc
in
push
imul
and
xor
insl
sahf
movsb
pop
ss
mov
addl
xorb
fmul
jno
adc
test
adc
mov
into
jo
test
ficoml
sub
cmp
pop
sti
mov
xchg
frndint
add
cld
mov
mov
das
mov
xlat
push
iret
scas
xorl
sub
dec
inc
repz
frstor
and
rcll
cmp
sub
int
aam
in
jae
insb
mov
shl
mov
mov
imul
jbe
mov
cmc
jno
inc
push
mov
shrb
out
adc
add
mov
lock
notb
mov
sub
cwtl
pop
mov
fnstcw
dec
repz
scas
add
adc
in
sub
fsubrs
mov
sub
adc
cmp
lock
in
div
ss
out
push
adc
rcrb
xor
int3
mov
push
pop
jge
js
aam
and
push
push
pop
in
or
inc
ds
test
lret
rorb
adc
cmp
bound
pop
jmp
mov
dec
mov
sub
xchg
sub
sub
add
mov
jmp
sbb
movsl
out
jg
mov
jae
aaa
pop
test
cmp
mov
sbb
lea
fdiv
andl
adc
mov
push
ljmp
add
ret
outsb
mov
cmpsb
jmp
or
jbe
xchg
sbb
dec
xor
call
fimull
or
shrb
out
pop
dec
leave
mov
hlt
insb
mov
add
inc
test
sbb
aas
push
aaa
sbbb
rolb
leave
test
mov
scas
push
mov
aas
popf
popa
ss
int3
or
stos
jnp
mov
jno
xor
daa
mov
xlat
sub
mull
mov
aad
mov
jl
cmp
pushf
sbbb
sbb
pop
add
sub
pop
push
inc
aam
int
inc
mov
fwait
jle
inc
dec
addr16
sbb
or
mov
and
adc
inc
fs
int
into
and
cli
test
lea
or
lods
pop
sub
push
mov
jns
cmp
mov
ret
mov
mov
shl
mov
mov
xorb
outsb
hlt
cmpsb
outsl
sbb
call
dec
divl
scas
xlat
pop
sub
in
js
outsb
sub
movsb
mov
emms
int
popa
sbb
hlt
jno
mov
or
mov
fiaddl
mov
mov
inc
gs
push
xadd
add
arpl
lods
jo
shlb
pop
cli
cld
inc
loope
push
repz
mov
mov
std
jecxz
es
pop
mov
imul
mov
and
mov
and
push
jo
cltd
nop
jmp
rorb
scas
add
cmc
stos
inc
gs
xor
enter
xchg
lods
jo
out
dec
fists
cli
or
fucomi
cmpsb
xor
xchg
xor
adc
iret
push
xor
xor
push
insb
out
sbb
adc
andb
fcmovu
mov
xor
xchg
pushf
sti
inc
loopne
pop
daa
push
dec
xchg
mov
jp
fsubrl
orl
dec
and
out
ret
xor
repz
cld
stos
test
sar
aaa
shlb
movsl
inc
fs
insl
outsl
push
or
cld
inc
mov
inc
dec
es
stos
std
call
mov
or
repz
sub
mov
imul
insl
inc
add
jg
mov
enter
testb
lret
fdivs
mov
mov
push
jmp
inc
pop
xor
pop
mov
jb
inc
sub
stos
inc
fimuls
mov
and
xor
jge
mov
lods
outsb
jl
push
add
ja
cmpsl
dec
arpl
xchg
insb
xor
imul
mov
lea
sub
xchg
insb
mov
push
pop
xchg
test
stc
mov
mov
push
lods
lds
aaa
xchg
push
push
inc
jge
xchg
adc
push
movsl
inc
clc
xchg
mov
sub
add
sub
mov
push
inc
xor
pop
icebp
pop
lock
cmpb
xchg
sub
or
sahf
jae
xchg
or
sahf
add
xchg
mov
sti
mov
daa
inc
mov
mov
xchg
xchg
dec
loopne
jle
in
jle
pop
adc
lahf
rorb
dec
mov
cmpsb
push
xor
into
mov
sub
outsb
pusha
das
loopne
stc
push
push
mov
xchg
pop
xor
add
movsb
cmp
loope
cmp
mov
xor
fwait
hlt
cli
cltd
adc
enter
adc
dec
lret
or
lock
imul
lds
repnz
in
dec
push
aad
cmp
loopne
test
sub
push
hlt
cltd
dec
shrl
lock
lahf
or
fsubrl
lahf
push
jbe
in
arpl
frstor
stos
addl
and
jecxz
jnp
sub
sti
push
mov
mov
mov
cmpsb
mov
js
fs
rolb
ret
xchg
mov
adc
es
mov
repnz
sarb
mov
lret
ja
push
mov
xor
lds
push
jl
or
push
jns
mov
cmp
or
add
mov
push
sbb
daa
outsl
mov
arpl
shrl
xlat
pop
dec
add
enter
xchg
and
call
sbb
and
sbb
mov
dec
jne
xchg
jb
xchg
dec
and
cli
mov
stos
cmc
rol
in
aam
in
out
sub
jmp
xor
rorb
adc
aaa
adc
test
cmp
pushf
test
mov
aam
and
sub
push
push
fs
cld
jbe
cs
dec
out
push
subb
std
addl
xchg
xchg
mov
loopne
test
fbld
add
mov
adc
test
fisubrs
pop
aas
jl
push
jmp
inc
cltd
push
cmp
into
sub
int
test
pop
ss
bound
xor
inc
adcl
sbbb
add
pop
push
xlat
push
pop
repnz
push
mov
fwait
add
mov
jmp
or
leave
popf
jne
mov
fwait
dec
and
mov
mov
shll
mov
add
lds
popa
clc
dec
sub
lret
cmp
das
inc
fdivr
mov
fnstenv
mov
mov
cmp
ds
and
add
pop
adc
jnp
mov
mov
testl
mov
push
cs
pop
push
xor
in
insb
loope
and
lds
ljmp
jnp
je
adc
mov
jnp
push
pop
and
imul
in
cwtl
stos
cld
rcl
dec
imul
leave
clc
add
fiadds
leave
sbb
rorl
lcall
mov
int
fucomip
js
xor
std
cltd
pop
mov
cwtl
adc
mov
push
test
adc
cmp
data16
out
lret
sub
adc
je
out
xorb
or
jo
sub
ret
call
aas
push
stos
arpl
dec
fdivs
xchg
popf
sarl
xor
push
inc
cmpsl
xor
fldl2t
xor
mov
stc
test
sbb
sti
es
nop
mov
das
stos
xchg
xor
sti
xchg
sahf
movsl
push
push
lcall
or
into
pop
mov
sub
sub
jle
cmpsb
pop
lods
pop
mov
xor
ret
pop
inc
inc
inc
jmp
ja
mov
xlat
push
rcrl
sbb
push
in
loopne
hlt
sbb
sub
cmp
xchg
xchg
jne
shll
mov
nop
arpl
pop
mov
push
mov
ljmp
mov
nop
and
inc
xor
inc
gs
mov
push
xchg
xlat
call
gs
in
dec
lds
test
imul
fldenv
cmp
cmp
loope
pop
mov
jb
mov
testl
xchg
sahf
adc
lods
icebp
mov
scas
testl
mov
enter
push
lea
xor
push
push
or
cli
aam
jl
ret
mov
arpl
add
stc
mov
inc
pop
jae
xor
fnstsw
popa
push
push
jne
xchg
pop
gs
mov
icebp
xor
int3
in
insl
jl
jno
mov
popa
repz
pslld
ficomps
pop
mov
cmc
dec
mov
sub
shr
in
adc
data16
dec
sub
mov
mov
push
mov
jae
sub
sbb
xorl
sub
xor
pusha
add
outsb
lods
add
or
inc
dec
pop
loope
rcrb
jecxz
ljmp
mov
repnz
mov
push
mov
ret
fnsave
xchg
cmpl
or
push
ficomps
aam
sub
mov
data16
repz
outsb
dec
cwtl
inc
movsl
int
test
fnstsw
dec
popf
mov
mov
jnp
adc
fsubrl
lret
cmp
push
push
mov
adc
jns
pop
scas
push
shl
fs
into
push
pusha
pop
mov
das
dec
and
ror
mov
pop
shrb
push
fisubrs
inc
cwtl
mov
leave
mov
fcoml
push
les
out
pop
or
and
arpl
scas
dec
inc
into
jl
adc
jo
push
mov
orb
mov
sbb
adc
adc
sbb
scas
xor
roll
scas
inc
jle
sub
rclb
inc
inc
imul
icebp
push
cmp
sub
ss
mov
das
sbb
popa
insl
mov
cmpsl
cmp
sub
cwtl
mov
cmp
lcall
in
and
pusha
mov
outsl
add
lret
cwtl
into
or
adc
pop
bnd
fs
dec
fcmovnb
insl
loopne
jmp
mov
lds
iret
lea
jo
push
scas
es
gs
pop
pop
inc
xchg
cmp
xor
rolb
jmp
daa
daa
je
xchg
insl
fdivl
aas
pop
xchg
sti
ret
pop
hlt
les
pop
ficoml
rclb
testb
testb
mov
push
inc
inc
pop
imull
adcb
repz
test
inc
or
bound
cld
xor
add
orl
pop
xlat
jnp
aam
out
xorb
xchg
sub
sub
lods
sbb
pop
lahf
mov
enter
mov
stos
adc
pop
lret
xor
jg
in
imul
popl
and
xorb
sbb
cmpps
inc
faddl
jmp
jp
mull
adcl
adcl
and
pop
push
icebp
stc
subb
aas
sbb
mov
sahf
push
lea
jle
pop
das
mov
cmpsb
add
addr16
xchg
fsub
sahf
idivb
adc
notb
sub
jge
pop
insb
test
int
lock
adcl
mov
sbb
mov
inc
iret
ss
sbb
inc
sahf
xorb
out
pop
sbb
adc
dec
dec
jnp
fsubrs
sub
aam
imul
xorl
jae
mov
mov
aam
pop
sbb
out
jnp
repnz
adc
inc
inc
lahf
shl
repnz
fidivl
adc
mov
inc
push
xchg
jnp
and
lret
std
inc
sti
js
sub
pop
xchg
lods
subl
rcrb
pop
insb
sub
frstor
iret
dec
out
mov
dec
xor
inc
fs
int
mov
inc
test
mov
das
cmp
jnp
push
mov
repnz
idivl
scas
popa
push
lahf
orb
test
inc
cmp
cmp
inc
add
adc
test
add
nop
fstl
xor
out
mov
imul
or
and
out
jp
es
sub
add
cmp
aam
test
nop
adc
repnz
xlat
imul
imul
out
sti
mov
mov
jb
std
fisubrl
sbb
sub
adc
xor
sbb
cs
lods
pop
cmp
lret
jae
cmp
lods
mov
and
or
pusha
xor
pop
fnstenv
push
fiaddl
iret
data16
pop
mov
push
inc
in
test
fbstp
ret
lea
and
push
add
std
sbb
movsl
sbb
mov
scas
push
jmp
movsb
loope,pn
xchg
xor
dec
or
test
cmp
sbbb
adc
jo
adc
cmp
lcall
ja
imul
idivl
divl
jno
pop
add
or
cwtl
jbe
sub
aaa
out
fdivl
inc
repz
cmp
clc
lcall
pop
mov
imul
sbb
dec
jp
iret
jmp
shlb
add
aas
popf
xor
sbb
push
lea
arpl
fidivs
mov
sbb
stc
or
jnp
test
dec
ret
ljmp
xor
gs
repz
and
dec
add
out
adc
inc
pop
or
inc
push
push
fiaddl
sub
cmp
out
mov
sbb
mov
cwtl
inc
jmp
xchg
pop
mov
cltd
insb
das
sbb
stos
pop
dec
xor
push
arpl
scas
fwait
out
mov
mov
xor
inc
icebp
sbb
or
dec
push
lret
mov
shll
leave
fidivs
push
add
leave
ss
xlat
icebp
shll
cmp
icebp
aas
and
sub
clc
test
les
and
ffreep
and
dec
dec
jecxz
aam
cld
mov
sbb
push
fidivrs
xchg
lds
inc
insl
in
test
cltd
xor
jmp
or
pop
cmp
mov
icebp
into
inc
mov
mov
js
fs
rcrb
imul
lock
pop
and
js
lods
subl
sbb
dec
sub
js
setne
add
popa
aaa
cmpsl
lock
cmp
imul
repnz
nop
xchg
and
in
les
je
and
cmp
movsl
sbb
inc
and
int3
jmp
addl
nop
inc
je
or
xchg
scas
loopne
into
push
cwtl
add
into
jbe
cmp
data16
and
gs
cmc
xchg
push
sub
cmc
lret
jbe
into
inc
push
mov
int
and
mov
cmp
mov
ja
xchg
sub
inc
stc
adc
cmc
lret
icebp
adc
fcmovbe
sbb
and
inc
rcrb
lret
adc
pop
in
and
add
shrb
sbb
pushf
add
inc
push
pop
aaa
xchg
dec
cmp
mov
pop
and
cmpsl
ret
rcll
std
xor
ficoms
xor
fwait
stos
xor
outsb
stc
cmpsl
inc
fcoml
push
out
icebp
xor
push
mov
push
fsubrl
ja
jl
fcomps
cmp
xor
test
push
lock
sub
ljmp
jno
push
imul
ret
pop
add
pop
in
call
das
arpl
fstpt
fisubs
popa
add
dec
arpl
dec
pop
push
inc
loopne
faddp
lcall
mov
jl
pop
cmp
dec
sti
push
xchg
push
xor
jb
lcall
rcll
mov
je
mov
or
and
sbbl
xchg
les
adc
mov
aas
outsl
push
jno
xor
push
xchg
xchg
sub
and
xor
cmp
jo
outsb
add
cltd
daa
ficompl
pop
cli
dec
add
pop
adc
pusha
xchg
xor
mov
hlt
and
jnp
and
cwtl
ss
imulb
pushf
inc
data16
dec
lock
or
xor
sub
out
js
inc
out
scas
mov
je
ret
inc
test
or
cmpsb
ljmp
out
test
dec
insl
xor
js
lea
mov
aas
dec
aad
bound
dec
add
and
lock
sbb
push
add
testb
inc
lret
sahf
stos
test
nop
psrld
xchg
pop
push
test
jg
inc
sub
inc
adc
xchg
stos
adc
sbb
mov
push
sahf
mov
rol
jle
cli
test
adc
ja
jle
or
decl
mov
aad
test
divb
dec
sub
or
shrl
enter
cld
icebp
je
bound
in
sbb
adc
push
mov
scas
and
jg
mov
test
fists
out
test
mov
lret
stc
sbb
movsl
sbb
push
es
xchg
mov
inc
aam
inc
enter
mov
adc
lret
xchg
pop
fbstp
dec
outsb
insl
inc
add
xchg
call
xor
add
int
test
vcvtsi2sd
aam
dec
mov
lcall
push
sarb
sub
push
cmp
jle
aas
data16
cmp
insl
aaa
imul
mov
xor
das
sbb
push
adc
dec
ds
hlt
xchg
lods
and
jb
push
test
leave
and
lea
inc
jns
inc
fisttpll
xor
mov
fisttpll
lods
lds
mov
mov
fmull
sbb
gs
xchg
hlt
or
loopne
cwtl
sbb
jmp
push
or
pushl
icebp
shl
shl
repnz
lahf
push
jns
cmp
pushf
das
ret
sbb
scas
sbb
je
shlb
push
or
jb
cwtl
incb
jne
inc
mov
mov
mov
pusha
pop
mov
outsl
push
in
les
mov
fucomp
jle
and
mov
mov
mov
xchg
xchg
sub
xlat
lods
mov
test
jp
inc
gs
fidivrs
movsb
sub
xor
cld
fs
xor
leave
jecxz
pop
std
mov
inc
lods
mov
push
addl
ret
ret
pop
cmc
xlat
addb
movsb
pop
outsl
lea
and
movsb
sbb
or
adc
sub
xlat
insl
cltd
lret
fs
mov
jmp
pop
cmc
jo
mov
pop
in
push
fs
xlat
rcr
inc
pop
dec
adc
leave
push
push
sti
icebp
mov
es
xchg
jo
sbb
fnsave
repz
aaa
lock
push
ja
scas
pop
push
cmp
mov
stos
gs
in
push
pop
cs
aas
push
and
jb
lds
test
je
dec
mov
xor
mov
jne
push
ret
inc
mov
cld
xchg
ljmp
pop
jno
out
inc
outsl
stc
fidivs
clc
cmp
ss
pop
lods
xchg
xchg
inc
xchg
push
dec
lcall
outsb
aam
lea
mov
cld
or
mov
adcl
das
cmp
addr16
sub
push
fidivrs
call
int
ds
mov
int3
sbbb
push
cmc
and
aad
xor
jmp
xchg
ja
and
aad
sti
fidivl
jae
push
sub
in
pusha
adcb
mov
popf
mov
fdivl
or
insb
mov
cli
add
inc
sbb
ds
xchg
jb
add
insb
add
adc
inc
shll
in
testl
inc
push
adc
add
xor
lea
fcomps
jg
sbb
js
sahf
add
adc
cs
lea
mov
fbld
mov
pop
xor
cmp
push
imul
loop
lret
xor
push
incb
rol
push
fnstcw
cmp
cld
pop
pushf
fsubs
in
sub
xor
cmp
int3
lret
mov
pop
inc
mov
nop
add
sti
test
icebp
nop
adc
inc
pop
mov
lock
rcl
inc
and
inc
lret
shlb
arpl
pop
clc
mov
shlb
jns
mov
add
mov
and
pop
imul
int
lods
cmp
adc
xchg
adc
mov
fdivrs
add
arpl
test
nop
jb
ljmp
xchg
dec
leavew
push
insb
sbb
adc
jg
pusha
idiv
xorb
icebp
ret
xor
dec
fldcw
push
fdivl
sub
and
roll
adc
jae
xchg
jge
and
std
xor
sub
pop
stos
cmpsl
enter
or
pop
dec
xorl
cmp
xchg
jns
xchg
sub
mov
aam
cmpsl
pop
push
dec
pop
int3
jge
imul
call
mov
punpckldq
loope
lock
lahf
mov
and
jne
outsb
adc
fbstp
add
cmp
popa
fisubrl
loope
popa
int3
or
outsl
push
jbe
sub
es
adc
cwtl
sub
lds
dec
in
sub
sbbl
xor
mov
out
ja
pop
cmp
mov
pop
cwtl
pop
pop
divl
xlat
imull
fistpll
xorl
add
add
mov
jb
lahf
xor
int3
push
mov
mov
in
testl
mov
mov
andl
push
stos
pop
movsb
adc
dec
loop
sbb
rorb
adc
idivb
popa
scas
adc
mov
xchg
jb
dec
cmp
jo
inc
cld
push
push
fisubrs
mov
cli
jns
imull
dec
jle
adc
cwtl
push
test
loopne
sbb
jge
ja
popf
rolb
jnp
jmp
inc
ljmp
data16
mov
test
sub
rcrb
adc
inc
leave
jae
xchg
das
movb
lret
cmp
es
pop
mov
inc
data16
daa
xchg
out
jae
fwait
test
and
cmp
loope
cmpsl
push
mov
call
or
inc
imul
icebp
ljmp
sub
gs
mov
outsl
sbb
mov
adc
pop
cmp
mov
popa
gs
shrb
es
fidivl
pop
jo
cmpsl
push
movsb
xlat
out
push
sbb
rorb
mov
xchg
push
jle
pusha
pusha
fs
movsl
xor
fdivs
pop
xlat
xchg
lods
dec
dec
pop
movb
dec
cmp
je
fistpl
add
bound
cmc
sbb
clc
push
xor
ss
mov
pop
xchg
mov
aad
or
mov
data16
mov
outsl
cli
xchg
pushf
push
shlb
lcall
incl
xor
repz
inc
fucomip
inc
xchg
mov
inc
cmp
jbe
das
stc
ljmp
push
or
outsl
data16
mov
or
mov
push
sub
aaa
dec
lds
ret
rorl
adc
mov
call
in
clc
push
and
cltd
inc
scas
mov
lods
mov
fldln2
ja
push
cli
bound
arpl
fidivrs
or
pop
nop
push
or
pop
loope
xchg
out
je
jne
add
and
cs
inc
pop
sbb
add
aas
adcl
inc
push
cmp
lea
pop
dec
dec
dec
xchg
sti
and
inc
cs
lock
loop
bnd
in
sub
in
push
mov
lds
cmp
js
add
and
mov
fsubl
fstl
mov
jnp
add
stos
test
int3
sub
xlat
push
and
or
xor
pusha
lcall
xor
inc
data16
dec
in
adc
out
cld
xor
adc
rcr
call
out
jo
sahf
sbb
xor
and
jb
popf
pop
das
xacquire
test
add
mov
push
sahf
inc
sahf
push
addr16
out
popa
sbb
out
test
insl
xchg
imul
loope
pop
push
add
mov
inc
ret
pop
scas
pop
xorb
sbb
mov
arpl
jbe
jae
add
loope
mov
pop
cmp
mov
rcr
push
mov
sbb
in
out
sahf
push
bswap
dec
cmc
cmpsl
imul
xor
mov
ja
call
decb
das
mov
xor
mov
pop
sub
ret
jnp
lds
add
pop
popa
mov
fst
or
pusha
mov
stos
pop
in
les
clc
lret
cmp
mov
sbb
addb
jne
arpl
dec
xlat
push
icebp
mov
pop
xor
add
mov
loop
mov
pop
iret
cwtl
loope
ret
add
sub
insb
mov
stos
mov
add
mov
sbb
add
xchg
sub
dec
push
dec
and
sbbb
xor
and
and
movsb
stc
dec
lock
mov
xor
mov
add
jnp
movsb
ret
rclb
add
dec
dec
nop
jne
test
cmc
out
daa
aad
jb
dec
push
jmp
mov
outsl
push
fwait
shll
jl
mov
das
cmpsl
jg
mov
pusha
pop
jecxz
dec
mov
push
or
xchg
dec
test
xchg
sub
dec
ss
and
mov
mov
cltd
test
xchg
out
stos
insl
and
ret
bound
lret
adc
outsl
jnp
ret
pusha
lret
bound
jmp
js
fimuls
mov
dec
jbe
cli
jle
lock
shll
push
scas
and
outsb
mov
roll
aad
jno
sub
pusha
add
je
dec
test
aad
sti
cmp
scas
push
sbb
adc
xor
or
jmp
and
loop
insl
inc
ret
push
movsb
or
inc
inc
pop
jb
insb
add
adcb
in
clc
sbb
or
and
cmpb
cmp
in
test
or
imul
arpl
mov
sbb
mov
sbb
pop
xchg
dec
push
jbe
testb
push
fwait
add
cmpsb
stc
adc
mov
cld
repz
or
jge
mov
inc
ficoml
leave
lods
mov
arpl
cmp
das
pushf
or
xor
jecxz
lret
cld
xchg
dec
mov
ret
jb
ret
mov
sbb
xor
push
pop
mov
adc
xchg
pop
fidivs
push
gs
js
and
sbb
xchg
fildl
pushf
add
ljmp
scas
push
sub
lcall
out
mov
inc
call
push
out
cwtl
pop
imul
or
ret
filds
mull
jmp
and
jle
xchg
sub
pop
mov
in
mov
dec
loopne
nop
push
mov
enter
jg
repz
xor
jmp
aad
inc
xor
sub
movsl
cmp
or
aas
stc
lea
sahf
into
inc
xor
mov
int3
das
rol
xchg
push
add
das
rorb
add
cmp
mov
rcrb
hlt
and
in
or
sub
test
sbbb
out
pop
cmc
in
gs
aaa
push
push
movsb
and
mov
mov
loop
ljmp
fcomp
push
out
xor
dec
loop
mov
xchg
sub
enter
daa
xor
xor
cmpsl
mov
jmp
out
test
pop
je
jae
mov
push
jae
dec
adc
mov
movsl
mov
icebp
nop
mov
cwtl
add
jb
scas
insb
sub
pop
pop
xor
adc
ret
cwtl
xchg
xchg
mov
fnstenv
or
mov
cld
push
mov
cmpsb
shr
jmp
push
and
mov
sub
hlt
add
pop
dec
mov
decb
pop
jmp
pop
sub
clc
lcall
testl
sub
adc
push
clc
vpsadbw
pop
pop
out
lahf
jg
push
push
cld
sbb
js
mov
sbb
jbe
pusha
and
mov
pop
fistps
imul
lea
cmp
fildll
inc
data16
fwait
xor
insb
inc
adc
push
jne
insl
gs
loopne
aaa
filds
fcompl
ljmp
push
xlat
jno
mov
gs
sub
dec
test
sub
adc
jmp
mov
push
sarl
outsb
shlb
popa
or
push
xchg
mov
fisubl
or
imul
mov
or
inc
pop
cmpsl
mov
mov
add
inc
add
cmp
insb
mov
lcall
into
xor
aas
popf
adcb
pop
es
in
jns
cmp
stos
testl
imul
xlat
pop
cli
pop
xchg
popf
fidivrl
push
andl
or
jno
sbb
ret
mov
adc
mov
mov
addr16
xchg
cltd
imul
ljmp
filds
sbb
pop
pop
push
mov
ja
jmp
xchg
mov
push
stos
mov
mov
ja
sub
or
or
add
jno
mov
in
adcl
pop
stc
sub
lea
lcall
mov
inc
adc
das
mov
clc
mov
pop
xchg
stos
testl
arpl
sub
popl
loop
dec
cmp
mov
push
push
sub
inc
xor
or
pop
pop
lods
jmp
pusha
xorb
test
popa
sti
and
or
dec
xor
mov
loope
adc
popa
xor
lods
out
xor
sti
xchg
jge
enter
enter
pop
lods
inc
xchg
cltd
daa
shll
mov
jmp
sbb
and
add
push
lods
inc
lea
rcr
push
data16
sub
les
insb
in
mov
mov
and
adc
sbb
jbe
mov
test
sbb
inc
in
push
lock
je
push
test
inc
mov
int
xchg
decl
iret
bound
lods
push
sub
js
sub
jg
inc
enter
in
int3
jo
inc
insb
add
jne
rclb
pop
or
xchg
sub
sbb
mov
leave
bound
adc
loopne
mov
mov
js
es
xor
sub
pop
nop
inc
ss
adc
loop
cmp
dec
xlat
test
sub
jns
mov
icebp
movsl
or
add
push
mov
sbb
mov
pop
xchg
aaa
gs
inc
lds
lahf
mov
in
adcb
xor
push
pop
lahf
jmp
or
mov
and
stc
stc
popf
psllq
sbb
jle
sub
xlat
mov
dec
jecxz
aam
push
mov
inc
pop
js
fdivl
or
mov
jbe
divl
fisubl
stos
and
jb
insl
jo
pop
dec
cwtl
mov
aad
into
icebp
cmp
lock
scas
and
xchg
dec
pushf
int
cmp
out
fldenv
inc
aaa
cmp
sub
mov
pop
jne
aad
dec
addb
neg
sarb
pop
xor
movl
nop
push
sub
cmpsl
stos
mov
ja
shl
cwtl
cld
or
scas
ds
sub
bound
outsb
loopne
jl
ljmp
movb
mov
popf
xor
pop
push
outsl
aas
and
daa
push
mov
into
ja
sbb
or
int3
pop
jl
cmp
sbb
mov
or
das
mov
pusha
mov
pop
pop
pop
scas
inc
popf
xlat
stos
jmp
test
pop
stc
ret
enter
cmc
insb
ret
fsts
mov
mov
jg
ss
push
and
sub
out
aas
ja
or
xchg
subb
or
add
mov
xchg
aaa
adc
ja
mov
jbe
push
sub
inc
cli
xchg
jb
daa
or
lret
out
jns
add
jb
sub
repnz
pop
dec
mov
enter
stos
mov
jl
rcrl
xor
push
inc
and
mov
push
repnz
lods
sub
or
inc
and
add
add
xlat
scas
and
cmp
lret
mov
fstl
clc
cmpb
push
or
nop
jb
sbb
xor
push
fs
mov
or
adc
mov
add
mov
mov
stos
leave
mov
sti
jecxz
scas
out
jecxz
test
adc
cld
xchg
insb
mov
push
or
ret
mov
ret
insb
push
pop
test
hlt
mov
push
xor
scas
shlb
call
cli
pop
and
adc
int3
test
pop
fwait
adcb
outsl
adc
mov
cmp
mov
push
inc
int
push
out
mov
sti
cmp
xchg
lahf
addr16
add
dec
xlat
and
cmp
add
ret
cld
pop
push
sub
jno
mov
insl
ja
inc
iret
xchg
js
pop
cmpsl
cli
push
pop
loope
add
inc
popf
idivl
addr16
xchg
pop
or
add
dec
pop
outsl
mov
cmp
push
mov
jae
cmc
and
cli
loop
dec
aam
stos
inc
mov
sub
cwtl
roll
aam
divl
int
cs
xchg
add
push
cmpsl
mov
mov
shlb
pop
enter
xchg
pop
cs
sub
pushf
dec
mov
push
xor
xchg
pop
xchg
fnsave
mov
ficoml
xchg
xchg
pop
sbb
push
repz
sub
aas
mov
lds
inc
aad
jp
leave
ss
out
scas
notl
lock
stos
pop
pushf
mov
pop
or
cmp
icebp
lret
mov
frstor
mov
bound
push
pop
cltd
subl
sbb
add
dec
insl
int3
jno
mov
es
nop
dec
mov
cmp
outsl
fldt
insl
jge
mov
xchg
outsb
mov
shlb
push
push
in
rol
jp
xor
mov
fucomi
je
push
xchg
jno
xor
xor
dec
dec
jle
insb
dec
xchg
sahf
xor
repz
xchg
arpl
icebp
mov
push
sbb
inc
fs
add
inc
icebp
sub
inc
loop
sarb
dec
pop
and
mov
mov
push
fmull
pop
and
pop
in
dec
lahf
iret
mov
es
mov
mov
in
loope
jg
fiaddl
stos
popa
push
hlt
filds
xchg
cmpl
dec
cmpl
mov
orb
jl
lds
cmp
push
lcall
inc
jecxz
imul
xor
adc
outsl
rorb
push
lock
jp
xchg
scas
dec
aaa
push
inc
fildll
inc
out
or
sbb
xor
std
jmp
adc
cmp
sub
orl
or
roll
ja
and
xchg
shll
incl
dec
cmc
ss
bound
inc
aas
testb
cmpsw
shrl
lret
jne
dec
inc
xlat
cmp
pop
cmp
mov
push
dec
movsl
jne
daa
ljmp
xor
adc
cmp
and
pop
aaa
cmp
jecxz
cmpsb
and
sti
es
sub
popf
jnp
stos
mov
mov
lcall
jae
out
fwait
xchg
loope
fbld
and
aad
adc
xor
fs
pop
jne
adc
cs
and
pop
sub
xor
test
xor
add
fidivrl
jmp
mov
cmp
aam
repz
mov
stos
cwtl
and
lret
fmulp
fs
cli
bound
xchg
sbb
pop
jb
inc
sub
xor
mov
pushf
dec
fstpl
leave
pop
jne
xchg
cmp
je
addr16
adc
stos
mov
sbb
loope
mov
sbb
mov
xlat
mov
test
dec
in
test
lock
cli
adc
popf
lock
lds
cmpsb
jle
fldenv
mov
js
cmp
mov
push
jmp
xchg
cs
mov
xlat
pop
out
or
shrl
pushf
inc
sub
jb
stc
out
mov
fwait
add
sbbb
and
cmpsb
call
gs
cmp
insb
add
jge
pop
pushf
cli
push
mov
jbe
nop
xchg
or
push
je
lret
or
scas
inc
sub
jge
mov
or
mov
xor
jl
fistps
cmp
adc
jno
mov
cli
push
lcallw
shrl
adc
jmp
xchg
loop
cs
cmp
fdivrl
lods
hlt
push
ret
mov
mov
sub
jnp
inc
popf
vzeroall
lret
aaa
leave
pop
pop
repnz
mov
mov
add
mov
insl
ds
lahf
cmp
stos
cmp
aam
xlat
xor
in
rol
mov
lsl
loopne
jns
add
int
ret
pushl
pushf
push
xlat
ja
lds
xchg
mov
adc
inc
mov
notl
push
outsb
dec
ds
movl
dec
mov
fwait
pop
loop
xchg
push
rol
es
pop
insl
jns
lods
xchg
and
xchg
lea
dec
cmp
or
std
cmp
lock
out
rcrb
cmp
rcrl
add
jg
push
and
xchg
sbb
pop
sub
pop
orl
jle
or
xchg
aaa
sub
sub
mov
in
in
or
pop
lock
rcl
call
mov
fisubl
push
shl
xor
std
mov
xor
cmp
xchg
inc
sbb
stos
add
adc
mov
or
mov
sbb
rcrl
sub
in
shrl
loopne
sbb
sbb
test
inc
sti
adc
push
jae
push
push
imul
pop
daa
outsl
cmp
sub
mov
fucomip
cmp
xor
repz
outsl
mov
adcb
mov
fdivs
fisttpll
jae
nop
scas
out
stc
sub
enter
and
sbb
mov
lods
push
xchg
cmp
dec
xchg
jns
cmp
adc
fdivp
aaa
arpl
jnp
xchg
movsl
or
xchg
in
dec
pop
dec
mov
lret
rclb
push
jb
mov
scas
aam
dec
cmp
iret
outsl
pop
xchg
fs
rcr
and
aaa
jbe
cmp
sub
shrb
mov
dec
fcomps
jmp
add
xor
push
lods
xchg
fstl
xor
mov
data16
imul
cwtl
in
push
inc
push
mov
sub
inc
jnp
aaa
adc
inc
fs
cmp
sbbb
and
dec
rolb
mov
ficomps
adc
mov
mov
sbb
cs
shlb
repz
mov
icebp
das
inc
bound
lret
fs
inc
sbb
cmpsl
lods
lds
dec
cmp
dec
pop
out
push
sub
aad
sub
mov
fisttpl
and
jecxz
aam
sub
cmp
cmpsb
push
push
lahf
imul
test
or
mov
rolb
pop
pop
loope
sbb
inc
bound
mov
or
sti
rcrl
fsubrs
mov
arpl
push
in
lds
dec
inc
add
push
dec
push
cmp
sbb
aam
ret
jae
mov
imul
adc
lcall
insl
jge
in
pop
dec
insl
sub
sub
jle
stos
mov
xchg
scas
mov
fildll
push
movsl
lahf
aas
push
je
mov
ljmp
lds
rclb
aaa
int3
arpl
inc
fadd
ficoms
add
mov
dec
cmp
push
shrb
sti
xchg
fsubrs
jmp
cmp
inc
notb
lcall
xchg
dec
fwait
sti
out
mov
fldt
mov
lret
jl
push
inc
jmp
addr16
and
add
cmp
loope
add
pop
lahf
ss
adc
inc
fimull
sbbl
inc
dec
pop
cltd
add
scas
xorl
sub
out
xchg
or
scas
divl
add
add
pop
movsb
xchg
mov
push
xchg
sbb
jne
cmpsb
or
les
mov
jmp
addr16
xchg
mov
lock
lock
inc
adc
inc
daa
bnd
scas
and
les
fadd
jl
adc
outsb
mov
repz
push
pop
add
nop
dec
add
jno
pusha
pop
shlb
int3
pusha
xchg
sub
movsl
out
mov
jnp
jge
aad
insl
mov
cmc
cmp
mov
rcrb
push
xchg
fstpt
ds
jmp
or
enter
inc
faddl
popa
push
xor
xor
adcl
add
cmp
xor
cmc
std
mov
lea
pop
shr
into
divb
in
push
stos
mov
sub
jle
mov
shlb
cmp
cmpsb
push
pop
roll
loope
adc
mov
dec
sub
adc
nop
mov
aad
push
sbb
pop
inc
cmp
lods
xchg
inc
mov
loop
addr16
jg
or
in
adcb
rorl
adc
in
pop
and
ret
lea
sub
or
jecxz
sbb
jne
xchg
scas
push
and
es
jae
jns
ficompl
imul
sub
xlat
addl
or
xchg
push
mov
xor
scas
jnp
mov
xlat
scas
pop
std
add
gs
lock
out
daa
jge
das
movsb
out
repnz
fsubp
testb
fsubl
xor
xlat
sbb
roll
jne
sub
pop
xor
lock
push
sahf
push
dec
jae
jg
ret
mov
call
sahf
jae
dec
adc
dec
xchg
arpl
das
xchg
sti
pop
std
push
or
je
dec
mov
popf
mov
adc
cmpsl
in
sbb
pusha
add
push
scas
pop
loop
sbbb
icebp
and
xchg
xor
movsb
ss
cmpsl
sbb
sub
enter
mov
pop
das
mov
iret
aad
add
push
mov
cmp
sbb
cli
bound
xchg
and
mov
mov
popa
enter
or
test
dec
sub
imul
cmpsl
cmp
pop
mov
pusha
cmp
adc
dec
pop
inc
jmp
xor
scas
jbe
jae
hlt
ds
or
xchg
xor
loope
cmp
sbb
push
jl
cmp
insl
xchg
cmp
pop
imul
xlat
inc
fwait
sub
dec
jb
daa
mov
lods
stos
ret
iret
stos
dec
or
add
mov
loop
sbb
arpl
xchg
imul
inc
ja
dec
push
cmp
sub
fiadds
dec
dec
pop
adcl
cmp
movsb
testb
mov
push
pop
scas
sbb
pop
adc
es
ret
sub
mov
add
pop
mov
push
mov
sbb
xchg
int3
pop
push
mov
fnstenv
mov
in
dec
mov
xchg
dec
aaa
push
push
rcrl
cmc
bound
repz
add
xchg
jne
shrl
sbb
rcl
sbb
push
jo
lea
add
pop
mov
mov
ds
mov
mov
cwtl
and
pop
mov
dec
int
movsl
cmp
xor
orb
insl
clc
rcll
test
xchg
les
mov
pop
lret
mov
or
lret
popa
jecxz
movsl
sbb
mov
ss
xor
lock
out
sub
adc
xor
inc
xchg
mov
sbb
mov
outsb
ljmp
sbb
or
lock
mov
add
popf
and
mov
sbb
pop
or
out
jnp
or
mov
cltd
test
call
cmp
xchg
in
stos
lcall
fsubr
test
or
lret
lods
fstp
test
sbb
and
test
dec
rclb
xlat
scas
icebp
xchg
mov
sahf
xchg
cmc
adc
adc
aam
jb
shl
xchg
xchg
xor
idivl
rol
cmpsl
cmp
and
mov
daa
pop
xor
jge
outsb
sub
pop
inc
or
repz
jno
and
ret
xorl
mov
xor
push
stos
add
pop
jge
mov
inc
int
dec
arpl
das
mov
or
nop
mov
mov
call
enter
js
js
sbb
push
dec
add
mov
bound
into
push
jae
ret
das
addr16
lea
das
or
inc
imul
rolb
outsb
loope
rcr
popa
pop
test
add
xchg
fsubs
pop
or
pop
insb
xor
fsub
mov
push
xor
push
dec
inc
addl
sub
cltd
add
xor
push
outsl
sbbb
push
das
dec
popa
push
mov
and
mov
pop
mov
jle
les
push
xchg
int
dec
ret
sub
jp
ret
xchg
fdivl
mov
mov
sbb
shll
push
mov
add
icebp
sub
mov
pop
push
mov
dec
dec
loop
stos
inc
add
inc
cmpsl
push
or
mov
jns
jo
js
lea
out
push
ljmp
getsec
mov
push
cltd
xor
jae
and
shrl
xorl
dec
pushf
scas
mov
mov
push
iret
cld
imul
aad
add
and
sbb
or
adc
jle
rolb
and
xchg
ljmp
pop
inc
fldl2t
mov
aad
rolb
data16
dec
aas
ljmp
rcrl
and
lock
fsubrs
inc
mov
mov
add
repnz
roll
xor
ja
sub
jnp
insb
xchg
pop
pop
ss
leave
loope
cmp
push
xor
test
sbb
lock
int
pusha
push
xor
lahf
shrl
sub
and
aad
or
je
les
subl
push
jae
xchg
pop
and
jp
cmp
mov
out
mov
ljmp
fsubl
push
in
and
jbe
and
aas
sbb
jecxz
pop
loop
adc
xor
push
stc
cmc
sbb
mov
adc
mov
out
rcrl
inc
in
sbb
and
push
dec
or
inc
je
add
imul
mov
mov
cmp
incb
lods
cltd
pop
add
iret
test
push
in
ds
xchg
data16
out
mov
and
fsubrl
sbb
ja
in
lcall
xrelease
leave
mov
inc
pusha
nop
js
sbb
les
mov
fdivs
popa
lods
sbb
fiadds
jge
std
fnsave
cs
cwtl
mov
pop
sbb
jg
pop
loope
mov
arpl
hlt
sub
sub
mov
testw
mov
xor
aaa
pop
jo
push
pop
faddl
out
outsl
mov
pop
lret
push
or
dec
iret
insl
adc
mov
mov
aad
push
cli
pushf
and
and
mov
inc
test
out
inc
and
aam
in
enter
pop
ljmp
dec
pop
mull
gs
inc
xor
inc
sbb
into
aaa
js
out
pop
adc
dec
aam
in
push
ja
mov
sub
pop
out
xchg
fadd
lds
aad
and
insb
adc
xchg
mov
mov
cltd
lds
in
movsl
gs
and
xchg
out
lahf
shlb
je
mov
pop
inc
jge
fldt
fldcw
ret
mov
mov
sbbb
mov
loope
dec
xchg
je
xorb
cmp
ja
xchg
mov
mov
cmp
lcall
decb
arpl
jno
lret
pop
xor
ss
out
pop
in
push
dec
xchg
sub
sti
lods
aaa
rcll
leave
arpl
mov
jae
sbb
xchg
jecxz
lret
call
test
scas
mov
mov
xchg
pop
or
push
insl
and
dec
sbb
sbb
inc
sbb
fidivs
cmp
and
pop
lahf
adc
inc
jmp
popa
in
icebp
aaa
out
shll
add
nop
sub
or
jp
scas
out
jg
dec
popf
and
or
aad
pop
dec
add
push
out
pop
adc
lahf
xor
imul
inc
sbb
call
mov
cmpsb
xchg
mov
adc
mov
addr16
mov
cmp
jecxz
and
push
in
add
push
sbb
mov
lahf
loope
insb
add
pop
mov
inc
lcall
or
sahf
mov
dec
out
push
pusha
adc
mov
push
jbe
sub
std
mov
negb
or
adc
test
inc
stos
or
js
or
push
jo
jp
and
js
or
add
sub
pop
in
jg
shrb
mov
pop
fiadds
mov
lods
push
imul
cmpb
xchg
mov
dec
out
sahf
xchg
or
mov
jmp
stc
sbbl
testb
aas
jl
fs
jge
shlb
enter
xor
nop
mov
test
or
repnz
stc
mov
std
leave
frstor
test
jns
repnz
testb
mov
mov
movsb
in
push
aas
pop
inc
lea
dec
aad
xchg
add
jge
lods
or
pusha
jle
xor
sub
movsb
movsl
in
mov
dec
int
movsb
mov
aam
incl
push
enter
testl
ret
pop
sbbb
jecxz
pop
inc
mov
movsl
xchg
roll
out
cltd
mov
push
in
xlat
sbb
mov
inc
cmpsl
ds
mov
jb
cltd
je
dec
scas
inc
jl
xlat
inc
cs
int
dec
daa
in
sub
aas
jle
outsl
and
jecxz
pop
insb
jle
out
pop
fcompl
adc
xor
lahf
ss
push
mov
jmp
cmp
push
in
mov
pop
incb
jecxz
in
cltd
mov
shll
ficoms
hlt
pop
jecxz
cmpsl
pop
xor
dec
add
push
insb
xor
decb
decb
lahf
sahf
sti
aad
icebp
jp
call
cltd
inc
outsl
loop
xor
add
add
cwtl
mov
and
loop
dec
jb
je
ljmp
mov
sti
in
fwait
and
xor
pop
in
fwait
cwtl
pop
iret
cmp
or
ss
dec
inc
lret
inc
call
push
fidivrl
in
jp
sbb
out
sub
pop
stc
mov
jl
or
enter
ret
sahf
hlt
adc
xchg
bound
iret
mov
cmpsl
mov
sub
rorl
inc
dec
ffree
test
push
adc
daa
push
repnz
ds
sub
stc
cmpsb
out
pop
lea
xchg
lds
in
aas
icebp
sbb
in
std
out
jns
pushf
cs
pop
jbe
iret
xor
or
mov
out
pop
int3
arpl
jp
push
mov
mov
push
mov
cmpsb
es
outsb
jmp
mov
ljmp
addr16
loop
mov
push
jae
inc
pushf
mov
les
std
cltd
lahf
mov
adc
lcall
mov
jne
inc
and
pushf
pop
cld
xchg
stc
push
mov
and
xchg
pop
fcomip
insl
add
in
xor
inc
dec
push
in
inc
movsb
adc
xor
xor
out
and
mov
in
dec
in
cmp
add
pop
pop
insl
mov
sub
popa
lcall
es
popa
daa
add
fdivrs
cmpsb
test
in
and
xor
push
xchg
daa
outsl
jle
lods
and
aam
xor
scas
inc
cmc
scas
push
cmp
push
dec
dec
lock
nop
mulb
jecxz
push
sub
ret
movl
addr16
call
lret
lods
test
add
call
adc
cmc
xchg
repnz
add
and
and
cmp
jle
cmp
push
pop
out
mov
test
dec
pushf
ret
data16
fcomps
xchg
jle
adc
pop
inc
sub
lahf
cmp
mov
cmp
push
cmpsl
in
outsb
jg
dec
shrb
add
jmp
fcoml
sub
imul
xor
std
push
aam
cmp
adc
mov
outsb
into
mov
ret
sarl
sahf
pop
sbb
outsl
dec
lret
stc
or
outsb
fsubr
jne
ja
adc
rorb
imul
mov
dec
fs
call
sbb
inc
push
ja
mov
and
add
movsl
pop
dec
scas
dec
js
jecxz
into
push
loop
push
ljmp
mov
mov
fnstcw
push
mov
scas
mov
jl
lahf
push
push
xchg
clc
xchg
mov
add
adc
push
subb
popa
or
and
int
xchg
push
xchg
fs
push
cwtl
inc
mov
lcall
sbb
jmp
dec
add
jl
in
insl
xchg
mov
ljmp
mov
int3
mov
and
mov
adc
xchg
push
loopne
jno
inc
out
popa
inc
add
mov
scas
xorb
nop
cmp
pop
stc
out
or
mov
inc
adc
jae
std
into
and
jns
push
or
mov
stos
loope
dec
inc
dec
add
adc
cmp
sbb
dec
push
dec
add
lock
dec
mov
scas
out
in
xchg
enter
pop
lds
movsl
pop
imulb
incl
or
sub
stc
test
subb
gs
dec
adc
pop
mov
negb
psubusw
rcrl
mov
and
push
adc
ss
push
mov
fstpt
fcmovb
xor
sub
divl
dec
stc
or
or
mov
xchg
sub
sbbb
mov
shrl
mov
mov
dec
mov
mov
or
insl
xor
nop
xchg
pop
add
aam
add
jns
sub
cld
lcall
in
sub
int3
jns
dec
jecxz
rcrl
xor
or
push
mov
lret
cmpsl
mov
mov
enter
mov
sbb
adc
outsl
icebp
nop
das
mov
sub
sbb
rorl
ja
rcl
pop
and
jbe
popf
pop
lock
push
jl
int
xor
mov
imul
xor
call
and
fldt
mov
mov
jns
aaa
stc
repnz
add
jno
and
pop
shrb
ds
repz
aas
fdivrs
leave
rcl
shl
or
dec
cmpl
sti
sar
or
sbb
mov
add
inc
andl
sub
stos
xor
sbb
push
mov
mov
clc
jge
fldenv
test
scas
rcrl
cmpb
or
mov
and
movsb
pushf
repz
mov
sbb
xchg
rcl
shrl
je
mov
hlt
fnstcw
dec
leave
xchg
scas
loope
inc
dec
dec
fsub
mov
sbb
insl
mov
mov
pop
lods
pop
fwait
dec
mov
mov
ret
push
pushf
jecxz
and
mov
push
mov
int3
and
push
shl
cmp
cmpsl
ds
notl
inc
adc
sub
orl
ret
jp
rcl
arpl
push
push
pop
aad
jns
mov
xor
dec
jecxz
cltd
scas
fimuls
jle
cmp
lea
inc
fs
inc
push
ljmp
call
xchg
addr16
xchg
sub
test
xchg
jne
adc
sbb
mov
insb
add
xor
and
cmp
das
jmp
push
mov
pusha
jecxz
das
bound
and
ret
sbb
pop
popf
push
or
fcomi
push
into
dec
in
js
jle
sbb
movsl
jmp
add
ret
sarl
arpl
test
lods
ret
loope
sarl
or
inc
call
mov
aad
sbb
mov
sbb
push
cltd
cmp
lret
push
xchg
ds
movsl
lret
jns
jmp
xor
in
xor
or
aam
cwtl
mov
fisubs
stc
mov
movsl
sbb
cli
add
aam
cmpsl
mov
shrb
xor
icebp
repnz
pop
sbb
jns
rolb
or
jbe
mov
mov
xor
testl
xchg
mov
push
mov
pop
movsb
sbb
cltd
js
fucomip
ds
lahf
add
outsl
rolb
and
xchg
aas
loop
test
adc
adcb
cmpsb
mov
or
push
ljmp
call
loop
xchg
xchg
push
jmp
jmp
stos
xor
out
pop
push
push
lock
inc
fidivrl
sub
add
das
fildl
or
enter
add
aad
xchg
out
jno
daa
int
pop
cmp
add
sbb
add
inc
dec
stc
cmp
lret
stos
fsts
rol
addb
ljmp
sub
push
jge
aam
leave
ficomps
popf
sub
icebp
xor
push
sahf
xor
cmp
out
lods
pop
add
js
iret
mov
mov
repnz
pop
add
jo
jle
mov
repz
outsb
mov
mov
cmp
stos
aad
ds
divb
daa
or
dec
in
or
adc
pop
call
scas
add
aas
adc
in
dec
fists
and
push
repnz
and
enter
test
pmuludq
iret
mov
out
sbb
push
mov
stos
mov
je
dec
fisttpll
out
xchg
fwait
lret
xlat
and
inc
repnz
in
mov
adc
aas
jg
in
clc
cwtl
and
in
data16
cltd
jle
aam
dec
pop
sarl
jo
mov
repnz
mov
xor
xor
or
or
in
or
loope
cmp
dec
out
push
inc
daa
xchg
jle
cmpsb
cmp
outsl
les
mov
in
sarb
insb
xchg
jg
lcall
mov
js
inc
jnp
sub
test
add
daa
inc
pop
xchg
pop
and
sbb
in
sub
push
sti
decb
mov
jecxz
xchg
push
jmp
dec
and
jne
jp
je
rolb
add
cld
iret
pop
adc
add
inc
int3
dec
cmpsl
xchg
and
orb
inc
jbe
xchg
adc
dec
addb
scas
cmp
out
mov
dec
jle
sbb
outsb
lret
xor
int
adc
or
pushf
xor
ljmp
cmpsl
repz
mov
xor
cli
out
push
sub
mov
gs
inc
push
lret
push
pop
mov
loop
fsubs
shlb
jae
mov
sub
jl
out
jge
sahf
push
sahf
addl
dec
lret
out
mov
lret
loop
jbe
lds
pop
dec
cmp
rcl
pop
mov
into
inc
addl
jle
pop
cwtl
data16
mov
movlhps
je
xchg
add
pop
sbb
cmp
negl
jo
out
xor
push
mov
rcll
lock
push
push
jmp
sub
scas
mov
or
cs
push
in
repz
jbe
pop
mov
repnz
pop
shl
rclb
rcrb
and
rcrl
popl
mov
push
fucomip
aas
rclb
jge
es
pop
cwtl
jno
mov
jns
cmp
insl
dec
pusha
lahf
xchg
inc
fimull
insb
es
xor
sbb
jne
ss
push
and
pop
fbstp
insb
lock
push
push
cmpsb
dec
out
ret
mov
sbb
pop
mov
js
sub
pop
adc
aaa
fadd
icebp
fstps
popa
jnp
adc
cmpsl
fisttps
mov
aam
enter
pop
or
ret
xor
daa
bound
in
cwtl
pop
nop
mov
ffree
cs
jle
dec
daa
cwtl
push
popf
leave
dec
int3
pop
idivl
ret
push
push
mov
sbb
pop
lret
lcall
movsb
or
jb
dec
jg
mov
mov
imul
push
xchg
jns
mov
inc
pop
call
insl
ja
adc
or
je
jmp
or
lods
inc
out
lods
xchg
pop
mov
leave
sbb
dec
pop
jno
inc
push
out
sub
cmp
mov
int3
jne
lods
lods
inc
mov
ror
div
testb
mov
xchg
icebp
xor
ja
fstl
inc
clc
ret
mov
addr16
jne
sti
data16
mov
pop
test
mov
mov
add
pusha
xor
sbb
pop
outsb
or
xchg
scas
mov
adc
stos
xchg
andl
in
xchg
and
or
in
push
sahf
movsl
fwait
das
loop
stos
out
es
mov
cmpl
and
subl
push
jmp
mov
xchg
dec
push
inc
pop
inc
lods
cmp
inc
lods
in
cltd
push
push
fidivl
xchg
push
jne
or
inc
negl
mov
fmul
popl
dec
xor
push
test
xchg
pop
xchg
and
fs
mov
imul
int
mov
xor
cmp
daa
sbb
js
adc
std
dec
ljmp
test
pop
dec
lret
sti
sub
outsb
mov
rcl
inc
fisttps
mov
sub
add
test
mov
inc
mov
mov
les
or
mov
cmp
aam
pop
dec
lret
int
cmpsb
mov
mov
sbb
jmp
insl
stos
inc
lahf
mov
ret
cltd
mov
and
sbb
dec
mov
fbstp
mov
push
mov
pop
test
sbb
pushf
les
cmp
pop
mov
xorb
je
xchg
clc
xchg
mov
repnz
lds
test
clc
xor
adc
push
sbb
nop
fbld
out
mov
rolb
lahf
pop
nop
push
jno
push
and
xor
add
and
xchg
inc
flds
mov
jl
imul
out
sbb
aas
pop
mov
xor
pop
hlt
idivb
iret
stos
js
xchg
sbb
add
and
outsl
and
sub
xchg
mov
and
hlt
pop
cld
cli
dec
loopne
clc
adcb
mov
mov
and
and
scas
pop
inc
sbb
mov
fwait
mov
cmpl
shrl
leave
mov
jne
cmc
lret
jle
inc
ds
lcall
push
mov
imul
outsb
sarl
and
mov
notl
ljmp
in
mov
jno
ss
jg
imul
cmpsb
jle
dec
sub
imul
push
pop
sub
add
icebp
out
movsl
testb
cli
lahf
push
mov
scas
mov
mov
enter
mov
pop
arpl
mov
jae
mov
xor
lcall
daa
lds
or
sbb
and
sbb
jb
cmpsl
lret
push
jmp
xlat
sbb
add
dec
loop
or
pop
and
test
dec
adc
mov
mov
rolb
mov
test
bound
notl
into
dec
bnd
std
xchg
leave
xchg
into
fimull
lods
sub
leave
fsts
push
adc
jb
jle
mov
add
popf
sbb
icebp
div
adc
das
sahf
js
sbb
cmp
orl
dec
add
inc
mov
mov
ss
pop
cmp
xchg
repnz
push
fidivrs
cmp
and
lea
repnz
pop
xlat
test
or
mov
jmp
inc
mov
push
mov
cmpsb
cmp
lret
sub
rorb
movsb
stos
cmp
xor
loop
jno
test
rcl
rcl
sub
outsb
cwtl
cmc
mov
mov
mov
mov
test
cmp
pushf
mov
jmp
push
icebp
push
std
lods
mov
add
inc
xchg
jo
jl
loop
lods
outsl
sub
std
lods
dec
popf
mov
xchg
aad
mov
dec
nop
mov
or
call
les
mov
mov
jge
in
fcomps
adc
mov
pop
fwait
push
pop
jle
shrb
add
jl
mov
ficomps
or
jle
add
rcll
ret
sbb
pop
rclb
pusha
stos
or
lods
jg
cmp
jmp
aad
je
jp
repnz
xlat
fwait
pop
aaa
shlb
int3
arpl
pop
xorb
cmp
add
inc
ficoms
insb
orl
pop
ret
sbb
jg
cmp
jbe
ds
push
xlat
cld
pop
or
sarl
ss
cmp
push
xchg
push
dec
jp
jge
sbb
mov
pcmpgtb
xchg
sub
ret
lahf
cs
mov
cmp
daa
cmp
outsl
dec
mov
jl
mov
add
push
mov
scas
and
aam
add
add
cmp
popa
xor
push
jb
mov
int3
pop
es
mov
adc
jae
sbb
clc
cmp
das
in
push
pop
int
js,pn
jl
push
inc
clc
popl
mov
sbb
ret
fisttpll
adc
into
repz
iret
cmp
into
test
cmpsb
jns
xchg
mov
fidivs
leave
push
pop
lcall
cmp
pusha
push
and
cld
pop
je
mov
insb
mov
in
sbb
dec
fldcw
movsl
push
xchg
sub
dec
aas
js
pop
fwait
scas
dec
mov
popa
in
in
sahf
je
movsb
sub
or
movsb
in
stc
sbb
add
jne
and
fimuls
cmc
cmp
cmp
lds
popa
push
fs
repz
adc
cltd
das
shrb
sbb
loop
dec
dec
insl
loopne
out
out
jecxz
dec
pushl
mov
dec
adc
das
jmp
in
movsb
jb
or
dec
pop
push
inc
jecxz
notl
inc
int
nop
jl
lods
mov
imul
mov
push
add
in
jbe
add
test
and
and
dec
loope
dec
ja
dec
dec
push
loop
adc
shrb
test
lahf
in
jb
jnp
sub
and
pop
cltd
push
movsb
or
je
mov
aad
mov
xlat
pop
and
mov
sbbb
jp
adc
pop
cltd
mov
ret
shll
push
cld
sub
notl
mov
adc
push
adc
lret
aas
pop
divl
stc
adc
mov
hlt
or
out
cld
mov
pop
sar
je
stc
xor
psubusb
es
incl
mov
pushfw
repnz
inc
sub
dec
mov
jne
mov
push
in
stos
cld
aam
or
mov
loope
mov
push
lock
lock
aam
ja
mov
jecxz
mov
lds
fistpll
sahf
jns
pop
das
repnz
push
jp
orb
push
faddl
das
int
or
sbb
loope
imul
aam
pop
fimuls
cld
cmp
jbe
js
dec
dec
add
call
scas
mov
xchg
cmpsb
mov
mov
in
enter
mov
mov
mov
xor
xchg
stc
sbb
outsb
ret
sub
ljmp
ja
addr16
sub
or
xor
addr16
pop
in
pop
mov
sbb
mov
jmp
pop
inc
imul
mov
cltd
push
insb
dec
push
and
insb
lcall
cmc
mov
jae
mov
adc
in
pop
push
fistl
mov
push
pop
lret
xor
or
mov
xlat
lcall
cmp
cmp
sbb
jg
psllq
in
pushl
cmp
lods
loopne
sbb
cmc
stc
int
sbb
jecxz
cmp
cmp
cs
adc
test
stos
push
cs
add
orl
sbbb
popf
in
xor
cmp
push
mov
mov
inc
aas
ja
adcl
adc
popf
jg
mov
cli
in
jns
aad
test
mov
pop
xor
loopne
xchg
sbb
sbb
cwtl
xor
xor
xlat
cmp
sub
xchg
loope
loop
fmul
int
fimuls
xor
adc
and
ret
frstor
hlt
mov
in
insb
fnstcw
add
jle
mov
pop
mov
test
adcl
movsl
sahf
mov
sbb
xor
xchg
jmp
das
inc
test
jo
xchg
icebp
jl
es
shl
mov
cltd
xor
xchg
jg
ret
dec
xor
mov
mov
fcoms
sbb
or
fwait
pop
test
popa
or
lret
jecxz
pop
sarl
xchg
and
jl
bnd
mov
xchg
or
cmp
inc
stos
insl
add
popl
dec
icebp
pop
xor
add
xchg
sti
mov
cmp
imul
mov
sbbb
scas
pop
xor
loopne
testl
add
add
fsubs
aaa
fwait
add
add
sbb
shl
mov
add
jne
mov
cli
and
push
leave
lods
cmp
cmpsl
lds
mov
mov
icebp
add
andb
shl
repz
pop
mov
lds
or
xchg
pop
in
mov
mov
flds
leave
addr16
cwtl
add
lock
into
movsb
imul
jb
movsb
pop
mov
push
xchg
add
lahf
pop
ss
or
test
mov
test
push
call
mov
cmp
pop
cmpsl
ds
push
xor
xchg
xchg
pop
sbb
mull
sbb
and
xor
icebp
setns
dec
fmulp
pop
xchg
xlat
scas
fucom
mov
mov
cmp
scas
ret
loopne
mov
repz
xchg
adc
jne
xor
andb
rcll
push
xchg
je
adc
jno
jg
push
scas
adc
leave
iret
scas
sbb
popa
add
push
stos
in
stos
sub
push
rclb
mov
fildll
or
push
or
cmp
repz
sbb
cwtl
es
cli
ds
scas
in
pop
ds
xor
dec
push
sti
leave
rolb
push
dec
push
lea
out
leave
int
int
cltd
sarb
dec
mulb
pop
stos
xchg
int3
int3
inc
jbe
aad
insb
dec
or
cld
mov
and
jmp
inc
cld
push
add
sub
mov
mov
pop
fdivl
fdivrl
and
cmpsl
out
add
mov
mov
arpl
lock
add
movq
jge
xchg
push
fnstenv
adc
sahf
insl
mov
divl
lds
test
push
push
xor
es
in
jb
xchg
mov
cld
call
or
jl
pop
push
mov
push
cli
cld
mov
pop
jno
or
and
cld
lea
xchg
test
clc
addr16
or
pop
lret
xchg
mov
popf
sbb
dec
lock
cld
call
sbb
mov
scas
inc
pusha
sub
push
mov
and
jecxz
aad
mov
in
jl
negl
and
push
and
sub
jnp
loope
mov
adc
push
fcomip
jno
stos
mov
push
lods
adc
mov
arpl
fcmove
int3
push
jecxz
push
push
push
pop
push
jp
xchg
test
xor
mov
negb
js,pn
iret
mov
in
fwait
sti
push
pop
fbstp
pop
scas
or
std
inc
imul
shrb
mov
repz
std
jno
insb
lret
into
lret
in
int
lcall
insb
mov
shrb
rorb
sub
out
adc
mov
mov
xchg
daa
bswap
push
sub
pushf
xor
mov
dec
mov
pop
xchg
or
dec
mov
mov
and
repz
jb
rcrb
push
std
mov
fld
inc
pop
loope
das
dec
push
out
dec
lock
repz
data16
ret
jbe
dec
neg
test
cmp
ljmp
js
jge
lods
jbe
add
mov
or
test
mov
dec
sub
dec
in
xor
pop
jmp
or
cmp
out
dec
mov
fistpl
xchg
fcomps
pusha
popf
push
inc
pusha
les
jmp
and
cld
pop
das
jne
push
sub
in
cmp
enter
mov
sub
jp
dec
pushf
popa
sub
shll
or
xchg
cmp
popf
push
push
fstpt
aaa
fwait
mov
test
xchg
loop
mull
adc
sub
dec
cmp
sub
xchg
pop
xor
fs
outsl
push
fiaddl
test
fwait
xor
out
out
xchg
adc
jns
pop
mov
xchg
fucomp
rcrl
mov
enter
stos
stos
xor
sbb
fidivrs
stos
out
add
and
inc
pop
outsb
inc
dec
jno
jge
outsl
push
int
out
into
out
lea
dec
out
jbe
dec
sub
les
xchg
sub
adc
leave
jae
loop
pop
fsub
cmp
pop
imul
cmpl
insb
sahf
lods
pop
mov
sarl
add
mov
dec
movsb
aas
outsl
imul
dec
int
movsb
rep
ss
adc
push
repz
mov
mov
les
test
sbb
sbb
mov
mov
mov
dec
jns
ds
ja
pop
jne
add
add
in
out
cmpsl
sbb
mov
enter
call
leave
int3
or
fcoml
pop
inc
dec
mov
jo
ret
cmp
arpl
cmp
pop
mov
mov
jns
testl
or
call
or
mov
xlat
loopne
xchg
pop
divb
test
leave
in
insl
or
ret
hlt
mov
adc
lds
add
addr16
bound
and
cmpxchg
sahf
sub
xor
rcrl
xorb
jo
cmp
push
cmpsb
test
scas
jo
scas
sub
mov
mov
das
ret
sbb
popf
push
mov
push
rcll
mov
fldenv
enter
cmpsl
cli
xchg
inc
fldl
mov
fistps
insl
ja
jp
pop
inc
fisubrs
fimull
dec
lods
cld
stos
jge
cmp
psrlw
in
insl
or
push
sahf
es
jmp
les
int3
push
call
movsl
out
push
adc
es
inc
dec
mov
jg
sbb
push
dec
aad
xchg
int3
jo
repnz
adc
lods
push
lret
enter
cmp
mov
and
ss
xor
jmp
inc
sbb
cmp
dec
jbe
dec
pop
popf
adcb
fs
dec
pop
push
adc
aas
dec
jg
sahf
pop
das
les
ss
out
add
mov
icebp
int3
mov
cmpsl
sub
clc
stos
jns
sti
and
or
mov
pop
stos
mov
loop
out
out
jp
roll
mov
lret
inc
fsubrp
mov
gs
test
push
stc
stos
ljmp
jnp
out
xor
repnz
imul
mov
psrad
shrl
popa
pop
fidivrl
fsubl
es
sbb
ljmp
movsl
icebp
xor
shll
add
popf
pop
and
fs
mov
or
pop
xor
cmp
fisttpll
xor
call
popl
push
lea
loop
add
outsl
jecxz
push
lcall
cmp
pop
jno
lcall
les
lock
and
pop
rcr
call
adcb
mov
inc
rol
or
test
inc
out
jecxz
lahf
inc
push
dec
pusha
lock
fcoms
repnz
outsl
sub
into
pop
repz
test
int3
sub
popa
ficompl
hlt
daa
shrl
shll
fdivr
pop
lret
sbb
cmp
inc
push
int3
mov
das
adc
fcoml
mov
xor
xchg
jl
inc
pop
in
inc
inc
push
clc
or
dec
push
lea
or
adc
mov
test
or
add
hlt
stos
inc
xchg
mov
sbb
icebp
in
stos
jns
dec
jno
into
fdivrl
push
sbb
jnp
cmc
mov
xor
ficoms
sbbl
xchg
pusha
add
and
push
js
ljmp
testb
fmuls
xor
mov
movsl
mov
mov
push
mul
jle
push
xorb
cltd
mov
or
xchg
mov
sub
clc
push
pop
ret
dec
les
add
push
popa
dec
pop
shl
mov
inc
loop
clc
out
cmp
aam
mov
test
jnp
pop
add
sbbl
or
hlt
inc
adc
jae
ljmp
jo
adc
fdivl
adc
repnz
pop
cmp
sbb
xchg
cmpsb
test
icebp
mov
xchg
jmp
sbb
repz
sbbl
leave
mov
push
hlt
loope
xchg
and
shrl
sbb
mov
sbb
mov
inc
fbld
or
lret
xor
inc
dec
push
sahf
lods
xor
dec
cmp
frstor
mov
jle
mov
xor
les
movsl
add
jb
push
sbb
test
andb
ljmp
ret
and
mov
push
jecxz
daa
xchg
jns
enter
into
in
pop
call
jb
lea
mov
pop
dec
int
movsb
jge
push
imul
mov
mov
mov
std
cmp
inc
cs
sbb
mov
ret
sbb
orl
fisttps
stos
push
add
sbbl
inc
pop
xchg
inc
ljmp
shrl
scas
xchg
stos
jb
lea
jne
sub
and
lock
js
sbb
out
mov
in
adcl
jne
stos
jmp
add
push
inc
xchg
mov
push
ret
mov
xor
fnsave
hlt
or
popa
mov
mov
dec
sbb
daa
cli
loope
pusha
enter
test
and
or
neg
xlat
add
mov
sbb
xchg
sbb
std
pop
repnz
push
jae
iret
ficomps
pop
inc
inc
cmp
dec
iret
fildll
in
dec
loop
mov
xor
pop
test
adc
inc
daa
pop
push
xor
stos
es
gs
or
add
adc
mov
jg
in
sbb
adc
orl
not
xor
jns
push
sub
or
add
mov
shr
mov
xchg
int
jg
leave
call
jne
mov
push
hlt
dec
xor
jne
push
jle
jg
jge
or
or
inc
and
sub
pop
negb
xor
or
jo
iret
inc
or
stc
dec
xchg
xor
mov
mov
add
lret
push
sub
jecxz
sbb
gs
mov
sahf
outsb
fwait
and
clc
daa
pop
scas
xchg
sub
jp
mov
sub
pop
fildl
push
leave
jbe
fidivs
add
out
mulb
aad
or
pop
inc
mov
je
mov
dec
and
ret
rclb
cmp
mov
jge
ja
or
in
push
hlt
js
test
mov
je
xchg
mov
push
adcl
ficompl
add
ss
lods
cltd
push
mov
push
mov
xchg
jb
iret
cmpsb
cmp
jg
fcompl
in
fbld
fnstsw
adc
cmp
and
fcoms
icebp
lock
in
xor
push
fstps
lods
cltd
test
out
mov
mov
ss
pop
jl
sbb
fldl
fmul
mov
mov
push
sbbl
mov
arpl
bound
loop
and
daa
add
mov
jp
mov
push
ss
jne
push
jne
push
popa
add
jb
cmp
xchg
jg
pusha
add
cmpsb
jg
pop
es
inc
adc
lret
ds
lret
lea
push
push
imul
sti
sbb
and
lret
pusha
aas
fs
and
sub
push
fidivl
jb
es
push
sbb
popf
call
test
dec
push
push
xor
mov
in
mov
jge
cmpb
sub
cmp
adc
cli
mov
sub
pop
orl
push
ficoml
leave
push
or
mov
and
pop
push
jmp
movsl
jo
inc
mov
outsl
mov
popf
imul
scas
fmulp
and
in
jg
outsl
inc
xchg
cmp
add
push
jae
pusha
mov
repnz
cwtl
je
mov
pop
xor
push
test
adc
ja
push
mov
fwait
add
popa
push
test
call
shl
rorl
mov
mov
ror
xor
pushf
dec
fcmovnu
hlt
or
inc
mov
mov
out
popa
push
into
jl
cld
outsl
lock
je
lret
jb
xchg
cltd
push
pusha
sti
push
xor
in
jo
ljmp
inc
mov
orl
xor
addb
mov
in
sub
and
mov
testl
lods
cmc
jg
sub
scas
cmp
cltd
stos
in
jge
mov
xorl
and
jge
adc
in
dec
mov
add
adc
bound
pop
xorb
insl
popf
xchg
or
scas
shlb
jmp
xor
cmpsl
popf
icebp
push
dec
pushf
sar
dec
inc
jmp
daa
leave
mov
cltd
xor
jo
cld
sub
lds
pop
dec
cmp
sbb
mov
stc
cmp
sbb
mov
ret
flds
andb
punpckhwd
iret
stos
mov
test
sub
push
mov
mov
jbe
mov
clc
dec
jge
and
sbb
mov
popl
into
push
imul
xchg
fidivs
push
mov
lods
inc
inc
fisttpl
xchg
int3
and
push
call
sbb
cld
xchg
jecxz
fdivrl
scas
icebp
int3
arpl
shl
jns
cltd
outsl
leave
rcll
rcrb
jge
test
in
les
enter
push
sub
icebp
pop
inc
stos
popf
mulb
add
lock
xchg
jbe
push
or
jp
fnstenv
mov
out
out
push
cmpsl
aaa
shl
push
add
lahf
push
jle
loope
jb
insl
lret
jns
test
push
mov
cmpsb
cmp
fdivs
decb
mov
push
sub
imul
pop
mov
jo
add
out
aam
daa
mov
ret
sub
push
adc
pop
dec
data16
ss
jne
sbb
movsb
push
addr16
ljmp
xor
cmp
paddsb
push
aaa
or
push
or
pop
negb
mov
jbe
adc
stos
xlat
xchg
fwait
push
stc
xor
jl,pt
xor
arpl
ret
jmp
jecxz
pop
ss
pop
rcrb
pop
xchg
dec
pop
out
aas
push
fistps
loope
pop
adc
lods
fildl
mov
subb
cmp
cmp
push
lods
rcrl
je
adc
popa
and
out
stos
add
int3
sub
jae
cmc
inc
sbb
add
pop
sbb
jge
push
sub
andl
rorb
in
sar
fdivs
sahf
cmc
loopne
stos
xor
xchg
std
jbe
jp
jnp
adc
and
sahf
mov
jb
jmp
sahf
inc
fisubl
sbb
std
loope
fnstcw
test
arpl
in
popf
push
test
push
ror
faddl
sub
repnz
add
cli
adc
cmpsb
stos
fsts
movsb
es
push
data16
popf
imul
sbb
out
shl
pushf
popa
adc
jne
das
shll
dec
cmp
pop
add
js
lahf
and
jns
jne
and
out
xchg
stos
decb
xor
push
inc
fsts
ds
clc
ffreep
lahf
jno
add
push
cmpb
ljmp
lods
cmp
sub
mov
decl
push
and
sbb
int3
clc
rcrl
in
add
xchg
pop
stos
inc
ret
ret
xchg
sub
push
add
shll
or
sub
cmp
pop
gs
mov
hlt
and
push
ficoms
sub
aam
enter
mov
mov
jne
loope
rorb
pusha
dec
sbb
jle
jmp
mov
jbe
icebp
push
jl
enter
mov
sbb
xchg
jbe
mov
test
jecxz
sbb
pop
loope
dec
imul
pop
int3
es
jb
ss
xchg
inc
pusha
les
aas
outsb
dec
add
lcall
mov
jne
or
pop
pop
xchg
add
pop
ret
push
or
inc
sbb
pop
cmp
stos
and
cmc
dec
jg
out
clc
sbb
xchg
jnp
test
push
lods
loop
ret
pop
mov
mov
jge
loopne
daa
push
rcrb
push
jnp
rcll
xchg
jo
dec
notb
sbb
rcl
add
jmp
xchg
pusha
pop
sub
adcl
aaa
or
in
enter
es
aam
js,pn
call
pop
cli
or
fucomip
pop
movsb
jns
xlat
push
lods
mov
and
xor
cli
hlt
cli
shl
add
test
xchg
xchg
mov
dec
pop
jns
gs
je
mov
sub
xchg
mov
imulb
mov
addr16
ficomps
jnp
jg
jnp
aam
xlat
xor
sbb
jmp
into
mov
call
cmpsb
shll
movsl
fadd
cwtl
stos
call
and
sti
js
fmuls
rcl
xchg
cmc
or
adc
sti
out
jle
dec
pushf
hlt
aas
fdivp
cmp
xchg
push
sahf
xor
push
and
jp
push
int3
fwait
pop
dec
lods
aaa
in
xor
pop
gs
addr16
jb
or
in
js
cltd
sbb
cmpsl
iret
es
jecxz
jge
lods
mov
cmp
or
lret
jp
sti
pushf
jp
or
je
cli
stos
mov
jne
or
xor
and
mov
dec
lahf
mov
popa
out
xchg
push
loop
push
cmp
sbb
inc
sub
ja
jno
jnp
push
fldl
cmpsl
pop
inc
push
mov
adc
push
mov
lods
and
and
icebp
sbb
loop
popf
inc
pop
mov
movsb
sar
mov
or
rep
ret
loope
xchg
cmp
xor
jmp
pop
mov
ds
jnp
jns
push
jo
inc
leave
xchg
popf
mov
push
scas
xor
out
mov
mov
lock
int3
dec
repnz
xchg
add
cmp
or
pop
fwait
sub
ljmp
pusha
lret
int3
fs
sub
mov
popa
xchg
inc
or
push
inc
std
xchg
sub
js
adc
mov
pop
jnp
push
mov
fistps
xchg
stos
arpl
shl
aaa
icebp
xor
mov
mov
jb
cwtl
pop
int3
xchg
sub
rorb
add
std
jge
pop
adc
push
bound
xor
stos
adcb
call
fsub
push
mov
lods
repnz
and
roll
decb
and
inc
arpl
insb
inc
cmp
inc
in
jmp
push
jmp
test
out
test
into
ss
push
mov
js
int
sub
xchg
pop
fcmovu
imul
mov
jno
or
pop
subl
fildll
cld
fcmovb
test
cmc
mov
mov
repnz
fdiv
pop
mov
jnp
xor
cmpsl
jno
int
sub
jbe
pop
push
fisttps
movsb
inc
lahf
in
or
sub
sub
cmc
iret
fstpl
push
jmp
fildl
flds
clc
mov
adc
xor
shr
xchg
ja
mov
mov
popf
jo
decl
rcr
fstpt
xchg
mov
and
push
adc
or
js
inc
jle
mov
bound
mov
adc
aas
cld
fdivl
mov
fwait
push
lods
int3
pop
fldl
frstor
push
and
lret
ret
aam
jecxz
ror
scas
iret
mov
movsl
lock
dec
xchg
sub
sbb
cmp
notb
pop
sbb
int
stos
in
loopne
imul
add
cmp
icebp
adc
dec
dec
gs
aas
into
mov
ret
or
repz
imul
jg
push
xor
mov
decb
mov
xchg
jmp
jns
xor
insb
cli
or
aam
xlat
nop
out
add
jno
mov
sbb
mov
cmpsl
insb
add
lahf
cmp
cmpsb
loope
xchg
mov
nop
inc
mov
adc
insl
ja
xor
lea
data16
xchg
mov
sbb
cltd
push
decb
xor
sbb
repz
pop
xchg
lea
lock
int
imul
pushf
ljmp
dec
into
mov
mov
push
cmp
stc
xorb
dec
jo
dec
mov
mov
daa
rorb
lods
xor
mov
or
pusha
xchg
inc
cmp
sti
xor
mov
aam
sti
loope
sahf
popf
and
es
leave
mov
mov
dec
mov
cmp
mov
lds
inc
jecxz
mov
out
movsl
out
pop
xchg
or
hlt
cmp
movsb
jns
jnp
xlat
mov
or
push
popa
mov
imul
xor
fstpl
cmp
aad
sub
ja
dec
movsl
push
pop
pusha
scas
nop
bound
jl
cwtl
test
mov
dec
mov
into
jecxz
je
imul
lods
ret
roll
xlat
scas
or
lahf
hlt
jmp
and
cwtl
mov
xlat
mov
and
adc
cmp
mov
fildll
xchg
adc
mov
or
jge
cltd
xor
push
in
notb
cmp
in
sbb
lret
push
fisttpll
stos
repnz
ds
fbld
lds
rclb
xchg
xchg
jmp
cwtl
cmpsl
pop
inc
scas
add
add
gs
int3
dec
mov
cmc
ss
repz
aas
xchg
jecxz
sbb
lock
or
dec
mov
mov
adc
ds
cmp
or
lret
xchg
nop
mov
push
lock
fwait
push
inc
lcall
inc
jle
mov
mov
fistps
fs
jb
pop
sarb
testw
stos
shll
insl
dec
into
sub
push
sub
xchg
pop
ficoms
push
mov
sub
mov
pop
jmp
push
out
mov
dec
inc
repz
aaa
jbe
lock
iret
je
stos
push
jnp
les
andl
sub
mov
add
enter
mov
add
scas
mov
jmp
dec
lcall
rcr
outsl
enter
sub
pop
push
dec
cmpps
in
test
or
aaa
jbe
stc
mov
inc
push
sub
aas
bound
mov
pop
inc
inc
gs
push
add
mulb
js
xlat
ficoms
push
cmc
enter
jg
scas
dec
mov
sbb
popa
jmp
mov
push
pop
inc
jne
add
dec
push
ficoms
dec
repnz
pop
ljmp
clc
xchg
push
mov
in
mov
out
dec
popf
mov
aam
popa
pop
cmp
push
cwtl
and
xor
cmp
scas
insb
cmp
push
cmpl
fists
sub
bound
mov
add
mov
pop
es
mov
mov
xchg
imul
push
sub
mov
adc
pop
in
cmp
fsubrp
fstl
adcl
xor
fists
ljmp
or
or
inc
scas
in
jge
movsb
sti
add
lcall
std
pop
pop
ret
shll
mov
jp
addr16
mov
xchg
fs
cmpsl
push
popf
arpl
dec
iret
fbstp
outsb
mov
mov
sti
xchg
jbe
cltd
xchg
sub
ret
sub
sub
add
sbb
and
pop
repz
sub
adc
cmp
sbb
jb
push
cs
xchg
inc
dec
dec
mov
rcrl
clc
and
insb
pop
ljmp
inc
ficompl
out
lret
or
xor
ljmp
sub
rcll
cs
dec
sarb
adc
pop
mov
xchg
push
cmpsb
imul
imul
adc
push
out
mov
outsb
add
lock
fbld
mov
add
mov
xor
push
fs
jno
jp
mov
hlt
bound
push
push
lods
mov
sbb
fstps
dec
jmp
sub
pop
pop
cmc
inc
enter
pop
fs
push
cmc
outsb
cli
jecxz
xchg
sbb
xor
mov
ja
sahf
pop
dec
pop
xchg
mov
je
jne
je
xchg
cmp
dec
adcb
and
and
ret
imul
aas
insl
jp
adc
pop
hlt
jle
and
call
inc
dec
das
lock
xor
xchg
push
jbe
adc
mov
ja
movl
or
cmp
jnp
mov
fucomp
fcompl
mov
out
aaa
push
or
dec
lahf
mul
jo
cli
inc
cli
xchg
jns
lods
add
movsb
rolb
push
ret
loopne
mov
movsl
cld
cli
cwtl
adc
sub
dec
fwait
push
cld
cmp
or
movq
jne
adc
scas
inc
std
jmp
outsl
call
fldt
sbb
xlat
jnp
push
dec
fisttpll
cmp
pop
fnsave
cmpb
mov
inc
xlat
adc
pop
jmp
loope
xlat
mov
lea
jae
pop
pop
push
dec
stos
ja
leave
sbb
dec
movsb
cmp
in
pop
dec
dec
mov
jp
lea
aam
cs
sbb
stc
ljmp
or
jl
lahf
fnstcw
sar
punpckldq
iret
sbb
jbe
fcos
fadd
outsb
mov
pop
or
inc
dec
cmc
cmc
sub
outsb
lcall
jmp
aaa
or
push
inc
es
push
and
mov
mov
sbb
cmp
insb
push
movsl
jns
std
sbb
mov
jg
out
push
cltd
cmp
lods
mov
loopne
rclb
cmp
stc
xacquire
lods
test
int
inc
divl
mov
mov
mov
stos
shl
mov
lahf
or
cmp
sub
dec
adc
dec
dec
outsb
clc
fldl
loop
iret
scas
pop
dec
mov
stos
daa
inc
pop
xor
push
in
xchg
jle
pop
mov
movsl
cmp
dec
aam
mov
ds
loope
icebp
fwait
imul
bswap
cmp
icebp
sub
test
aam
test
insb
jecxz
lahf
ss
cmp
mov
push
inc
dec
rol
ljmp
sbb
jns
daa
cmp
test
xchg
repz
ds
sbb
push
jbe
dec
xor
pop
mov
sub
xor
mov
sub
mov
inc
dec
shlb
inc
mov
loopne
jo
les
inc
fists
pop
xchg
or
leave
jecxz
add
jge
inc
scas
pop
fimull
inc
enter
cmpsl
jle
cwtl
and
xchg
dec
mov
int3
mov
mov
pop
ljmp
inc
adc
in
xchg
jns
out
mov
inc
lock
and
filds
call
cmp
rdmsr
ljmp
fidivrl
fwait
xor
mov
js
add
push
testb
in
adcb
lods
sub
out
mov
icebp
in
stc
and
ficompl
or
mov
fst
test
cmp
or
dec
push
call
aad
lahf
mov
pop
in
xchg
pop
enter
and
out
push
xchg
mov
inc
std
jbe
das
addr16
dec
jne
or
xchg
aad
enter
loopne
outsb
mov
loopne
add
inc
repnz
fs
in
mov
ret
movsb
push
popf
cmp
imul
pop
out
jp
mov
push
fdivl
ror
movsbl
adc
das
mov
push
std
ja
add
cld
test
je
out
dec
pop
and
lds
roll
push
dec
in
push
cmp
and
push
mov
add
mov
or
xchg
nop
mov
and
mov
or
inc
sbb
shrl
and
sbb
ret
cmp
pusha
fcmovnb
lret
int3
mov
mov
mov
fs
push
xchg
pop
jmp
pop
cmp
sarl
jno
pop
addr16
cmp
leave
mov
and
pop
xchg
fbld
lretw
cs
leave
repnz
stos
mov
sub
jle
push
jb
jle
les
jno
mov
add
scas
sbb
insb
cmp
cmp
ja
jecxz
dec
xchg
adc
push
ror
dec
or
pop
rorb
jp
pop
orb
pop
mov
dec
lahf
adc
gs
xchg
mov
fbld
imul
inc
cmc
nop
jo
imul
jmp
inc
dec
test
scas
inc
add
add
pop
mov
jmp
cld
or
std
shlb
mov
pop
mov
wbinvd
aas
loop
cltd
push
jg
les
loopne
xchg
outsb
xor
cmp
mov
ret
insb
mov
pop
jl
ret
cld
hlt
test
jb
test
mov
push
sub
xor
jne
push
ret
inc
xchg
mov
loop
movsb
enter
shrb
orb
jnp
fmuls
lods
fdivp
ja
push
repz
popa
mov
bound
adc
ds
adc
addr16
insb
stos
xchg
dec
fsubs
ret
jmp
fs
sbb
mov
jmp
push
and
push
pushf
shlb
fwait
jo
mov
mov
in
jo
daa
and
stos
icebp
subb
pop
lock
jb
out
mov
pushf
jmp
movsl
js
pop
stos
leave
and
fcoms
es
cmpsb
lretw
mov
cld
xchg
pop
and
cld
fdivrl
pop
ret
mov
rcrl
repnz
arpl
cmp
pop
dec
xchg
sahf
fnstsw
jns
push
loopne
data16
jae
std
push
call
inc
fisubrl
testb
xchg
lods
jnp
out
adc
xacquire
pop
sbb
faddp
pop
leave
xor
je
shrl
add
fwait
pop
cmc
int3
and
push
sub
mov
cmp
jecxz
dec
lock
mov
frstor
cli
cmp
insl
xor
lret
mov
loopne
dec
cmp
inc
pusha
inc
pop
jno
rolb
jae
cmpsl
xchg
sub
movsb
ja
and
jne
scas
inc
imul
cli
jae
sbb
push
out
push
or
xor
mov
cmc
mov
lods
push
les
cld
fiadds
cld
jno
jne
insb
lcall
dec
cmpsb
stc
pop
push
mov
jbe
js
cmp
and
mov
add
dec
test
int3
leave
xor
out
daa
outsl
sbb
add
incl
xchg
mov
aad
orb
cmpsb
cmpsl
std
iret
adc
push
jbe
stc
jbe
push
int3
xchg
mov
cmp
scas
fisubrs
jp
mov
sbb
lock
mov
sbb
sbb
sub
dec
in
pushf
nop
outsb
mov
ret
xchg
lds
add
sbb
jecxz
aad
mov
gs
push
loope
adc
icebp
pop
pop
repnz
aas
mov
mov
repz
inc
mov
sub
xor
xor
shll
or
fdivrl
xchg
add
jle
aad
stc
push
xor
or
repz
andb
push
inc
mov
sbb
ljmp
imul
mov
xor
cmpsb
mov
mov
sub
mov
idivb
and
add
and
push
xchg
sbbb
and
push
not
arpl
outsl
inc
dec
pop
inc
mov
dec
adc
ljmp
mov
outsl
scas
pop
movsl
sub
stos
scas
mov
repnz
jmp
adc
or
enter
adc
adc
adc
mov
pop
mov
add
movsb
shl
stc
packssdw
ss
cli
xchg
sbb
xchg
test
sub
movsl
pop
scas
fcomps
nop
das
popf
push
xor
clc
jne
bound
push
insl
aam
sub
mov
loopne
bound
mov
push
fwait
xor
stc
bound
stos
mov
inc
in
out
mov
sbb
add
in
aam
es
std
and
scas
inc
incl
test
loope
rclb
das
xchg
into
movsl
mov
jp
xor
loope
push
or
mov
ret
cwtl
and
shr
das
ljmp
aam
or
push
jmp
loopne
sbb
movsb
std
jle
pop
pusha
rolb
add
movsb
loopne
fsts
ficoms
gs
adc
test
jo
jge
pushf
jne
mov
pop
mov
dec
jns
inc
pop
arpl
and
mov
pusha
out
xchg
jmp
mov
insl
sub
lret
hlt
mov
push
mov
jno
shlb
jo
mov
adc
andl
insb
add
inc
shrb
outsb
push
jns
or
daa
nop
xchg
call
adc
adc
lahf
dec
xlat
pop
icebp
cmc
mov
fsubrl
add
mov
sbb
jno
gs
or
jge
popf
or
sahf
sub
rcrb
icebp
call
or
mov
insb
cmp
int
je
das
sub
push
jmp
int3
xchg
push
xchg
jb
cltd
xchg
cmpsl
mov
adc
add
insb
sub
push
jo
or
xchg
rcl
mov
dec
adc
pusha
mov
mov
cltd
nop
jae
pusha
cltd
pusha
arpl
jne
cmp
mov
pop
mov
das
jle
sbbb
xor
or
add
adc
aaa
addl
push
popf
add
scas
and
fbstp
push
in
and
and
pop
js
dec
jmp
repnz
fdivs
jnp
push
in
ljmp
lea
iret
push
mov
in
scas
inc
shr
imul
inc
push
subl
pop
sbb
sub
xorb
mov
movsb
pop
insb
pop
dec
jb
pop
xchg
mov
sbb
push
imul
dec
iret
add
insl
xchg
fists
lea
les
stos
adc
icebp
mov
mov
rcrb
mov
shrb
aam
hlt
and
jno
or
sub
cmpsb
fists
les
mov
stos
sub
mov
cmp
add
repnz
mov
dec
mov
mov
or
adc
mov
call
or
pop
pop
and
aaa
xor
mov
inc
jmp
clc
adc
jns
repnz
aaa
lcall
data16
imul
aam
lods
pop
pop
lock
dec
sbbb
jmp
inc
stos
xrelease
and
jno
insl
sahf
lahf
sub
adcl
xlat
insl
sub
adc
pop
sti
sbbl
js
ret
hlt
out
add
dec
orb
lea
jg
hlt
lret
cmpsb
pop
lods
ja
sbb
mov
fidivrs
test
mov
push
sahf
inc
push
dec
ja
xchg
sub
scas
pop
jnp
ds
xchg
push
xchg
lds
push
arpl
out
movsl
test
mov
fistl
repnz
lret
movsb
pop
rol
mov
divl
pop
inc
stos
shrb
jb
mov
inc
or
fwait
and
mov
cs
adc
negb
fsubrl
jne
cmp
xchg
into
incb
pop
loope
imul
addr16
cmp
sbb
gs
sub
mov
rorl
fs
jge
pop
sti
mov
std
mov
in
fwait
dec
mov
addl
mov
rcll
es
jmp
inc
decl
rclb
inc
movsl
mov
fcompl
mov
fstl
push
mov
pop
adc
lahf
jno
cmove
add
push
sahf
xor
pop
scas
or
mov
inc
cmpsb
jno
addr16
outsb
lret
stos
cmp
mov
nop
jg
aas
aam
and
xchg
aad
out
and
jbe
lret
in
out
out
xlat
xchg
mov
jbe
fidivrs
and
mov
lea
mov
push
jle
jb
jne
aad
pusha
xor
shlb
sbb
xchg
aam
xor
jge
sbbb
mov
sbb
insb
cmp
ficoml
call
ficoms
adc
jno
mov
js
dec
xor
sar
ljmp
add
lret
jo
mov
popf
test
or
out
xchg
and
pop
sub
scas
shll
mov
mov
hlt
sub
or
xchg
mov
push
sti
sbb
cmp
aam
stos
push
nop
mov
int3
rcr
test
xchg
mov
stos
inc
pop
neg
sbb
insb
pop
jecxz
pop
rolb
fildll
mov
jb
mov
in
jle
fwait
inc
imul
mov
adc
imul
push
das
xchg
scas
inc
pop
js
mov
shr
jle
mov
into
or
push
inc
fsubrl
aas
ficompl
mov
rcl
ret
fcoms
adc
sub
mov
mov
push
ljmp
mov
cmc
inc
pusha
and
add
fnstenv
leave
icebp
mov
out
xchg
xor
leave
inc
mov
shrl
pusha
sub
sar
mov
outsb
pop
rcrl
inc
push
xor
mov
in
add
mov
or
iret
pusha
jns
pop
pop
cmp
hlt
push
stos
mov
fdivl
popf
out
aam
sub
lcall
out
je
stc
sub
mov
mov
pop
rcrl
inc
mov
test
jne
inc
sub
dec
jecxz
mov
scas
push
sbbl
popa
mov
push
hlt
outsb
dec
lret
mov
mov
nop
test
sbb
lcall
pop
shrb
rorb
mov
or
jo
sub
loopne
loop
sarb
jp
sub
xor
je
fiaddl
pop
scas
xor
mov
dec
push
shlb
add
testb
mov
push
rolb
aas
sarb
sbbb
fisubl
cltd
mov
dec
mov
cmp
test
or
mov
push
adc
sub
mov
push
dec
sub
inc
xchg
add
stos
rolb
testl
gs
lea
add
sbb
ds
mov
push
and
push
inc
xlat
shll
out
xlat
testb
clc
mov
movsb
mov
xor
scas
mov
xorb
adc
mov
in
dec
mov
stos
add
mov
sbb
iret
std
ret
mov
jno
ret
xchg
sub
jno
pop
jmp
and
sub
xor
jle
push
jo
add
stos
push
pop
negl
aam
clc
aam
loopne
inc
add
in
cld
outsl
addb
ss
bnd
hlt
rcll
arpl
push
repz
pop
mov
jae
clc
movsb
test
xchg
mov
pop
cmp
lea
pop
push
jmp
idivl
pusha
ss
jmp
push
daa
mov
or
pop
mov
pop
nop
pop
push
push
sbb
xor
pop
add
bound
cmp
outsb
sub
scas
cmc
pop
test
sub
lods
jnp
sahf
ja
imul
push
sub
mov
mov
inc
enter
lahf
outsb
dec
shr
cmp
mov
and
lret
in
lret
das
xchg
jp
arpl
xor
push
adc
inc
adc
pop
pushf
call
movsb
jo
push
inc
cmp
pop
es
lods
push
test
jne
cmp
adc
in
sbb
inc
je
mov
rorl
outsl
jecxz
addr16
in
add
inc
std
mov
pop
or
data16
adc
mov
icebp
rclb
mov
outsb
pop
dec
add
rcrl
jno
sahf
jecxz
cld
loope
xchg
cwtl
lcall
jmp
mov
inc
mov
stos
mov
imul
ja
sub
xchg
lods
fmul
std
pop
xor
addb
sbb
cmpb
mov
or
mov
push
insl
add
push
leave
xchg
jge
push
mov
and
xor
pop
cs
cmp
std
lods
inc
cs
lret
scas
adc
js
add
dec
lea
mov
ret
insb
jg
jae
mov
call
cmp
add
xchg
jno
xor
movsb
bound
lds
shl
nop
pop
pop
scas
rol
pop
adc
mov
ljmp
data16
aaa
push
in
shlb
je
pop
sbb
shll
imul
lods
and
xchg
sbb
xchg
adc
lods
inc
or
dec
fwait
test
shlb
adc
add
mov
jge
sub
enter
lcall
mov
std
mov
in
push
xor
fstpt
xor
sahf
push
adc
xchg
js
mov
xor
aad
mov
cmp
fiaddl
iret
sub
add
ret
mov
lcall
insl
test
adc
sbb
shl
pop
ret
and
out
mov
sub
dec
mov
sub
cmpsl
jno
loope
test
xchg
fs
daa
les
adc
fstpt
stos
jle
push
and
or
ds
and
dec
dec
cwtl
rol
jl
adc
in
xchg
cltd
movsb
push
int
aaa
lds
lret
sbb
faddp
jnp
out
out
insb
gs
popf
or
mov
cmpsb
out
add
add
test
stos
mov
shrl
push
lods
xchg
cmc
leave
sbb
jno
xchg
mov
fisubs
adc
mov
pop
cmp
add
adc
push
shll
adc
decb
and
pusha
std
xlat
cmc
push
ret
or
adc
test
mov
push
push
push
out
rcll
add
ficoms
adc
sub
sbbb
xchg
mov
cmp
cltd
std
fildll
and
inc
dec
fdivs
and
fwait
xor
in
pusha
popf
in
mov
cmpsl
loopne
push
hlt
or
jp
mov
lahf
outsb
inc
pop
pop
ljmp
xchg
das
cmp
ds
jae
int3
sbbl
pop
sub
mov
sarb
and
pop
push
mov
dec
cmp
addr16
pushl
test
jb
stos
aad
cmpl
inc
mov
data16
pop
mov
rcrl
rorl
lods
push
aam
inc
repz
add
rorl
movsb
sbb
add
mov
jns
inc
lods
or
mov
push
jns
pop
scas
aas
pop
lock
xchg
ds
insb
enter
insb
enter
cmpsl
mov
mov
mov
pop
pushf
sub
xor
out
xchg
adc
xchg
rorb
shl
or
and
test
mov
gs
aas
ja,pn
xor
bswap
lods
push
sbb
push
popf
fistl
cmp
jmp
vcomisd
pushf
xchg
push
inc
leave
pop
mov
jno
mov
loope
ja
and
mov
int
xor
int
jmp
lock
cmc
cmp
mov
cmp
inc
push
mov
in
and
fmul
sub
pop
ficomps
in
dec
into
and
popf
xchg
inc
popa
mov
dec
shll
stos
xchg
mov
or
mov
mov
fidivs
in
fs
lock
push
inc
fiaddl
notl
jle
or
sar
pop
jg
dec
loope
add
inc
mov
in
xor
or
popa
jl
sub
inc
adc
cld
mov
cs
push
fdivl
test
mov
pop
xchg
sub
and
popf
mov
xchg
in
test
stos
lahf
mov
shrb
scas
stos
test
addb
or
or
jns
fdivr
or
xor
fnsetpm(287
push
pop
popa
push
xchg
out
movsb
sub
push
push
mov
arpl
push
push
xchg
pop
jp
mov
loopne
or
cmp
inc
jmp
sub
repz
stos
add
sub
pop
jmp
rcr
hlt
fstps
jle
out
mull
add
sarl
add
pop
mov
jae
xor
push
bound
xor
iret
frstor
lret
jb
and
mov
divl
pop
je
test
out
add
fdivs
loop
in
rcrl
cs
jge
lods
cld
cli
push
test
dec
popa
lods
loop
int3
mov
mov
cltd
lret
mov
stos
mov
add
cmp
adc
lcall
shl
shll
add
mov
cmpsb
stos
cmp
enter
insl
inc
negl
cwtl
jae
mov
fsubrp
js
jp
clc
adc
rep
sbb
lds
push
in
sbb
aas
sti
or
ret
jle
testb
mov
in
add
jl
stos
mov
sets
sub
dec
lods
outsb
push
mov
js
jnp
insb
orl
out
push
adc
mov
subb
sub
pop
lea
fwait
testb
out
adc
hlt
in
mov
add
subb
fmulp
mov
fstps
cli
jbe
js
xchg
jbe
mov
add
xchg
in
push
mov
inc
dec
adc
ljmp
sub
fmuls
cli
jecxz
inc
ljmp
pop
pop
jmp
loop
imul
jne
aaa
aas
lock
adc
adc
popf
enter
xchg
data16
and
jmp
cmc
dec
add
jns
in
push
jno
jle
incb
pop
add
add
js
jmp
ficomps
mov
or
sub
outsb
fnstenv
xchg
and
sarl
and
test
mov
sbbl
add
xor
mov
push
es
sbb
sub
in
push
push
outsb
add
dec
out
xchg
mov
popf
and
outsb
clc
repz
xlat
rcll
and
mov
cpuid
jbe
mov
adc
mov
xchg
dec
or
std
and
ljmp
push
mov
xchg
xchg
shl
es
mov
add
mov
push
inc
adc
mov
lret
cltd
xor
mov
push
out
xor
test
outsb
loope
inc
test
mov
push
jne
fbld
out
and
into
jl
xchg
pop
xor
bound
and
jecxz
rcll
pop
pop
mov
inc
movsl
cmp
int3
pop
out
das
mov
inc
int
sti
dec
fistpll
sub
mov
dec
or
stos
cli
out
nop
ss
cs
leave
hlt
js
into
cmp
sbb
inc
stos
es
push
xchg
pop
cld
dec
out
or
mov
add
push
inc
incb
lret
lcall
mov
pop
xorl
hlt
mov
sub
add
push
nop
sub
shl
push
xor
and
hlt
mov
pop
adc
sub
sub
lahf
push
je
roll
xchg
adc
cmc
inc
mov
roll
inc
inc
pop
push
sbbl
fwait
leave
jmp
lods
js
ffreep
incl
lret
fidivl
icebp
orl
sahf
jb
sbb
pop
push
js
jbe
adcl
sbb
cmp
and
pushf
pop
imul
stos
mov
adc
movsl
cmp
mov
pop
cmc
mov
pop
imul
lds
push
movsl
pop
nop
adcb
repz
xor
je
test
sub
pop
mull
iret
xchg
jle
push
lods
or
or
loopne
repz
cs
cld
dec
and
enter
stos
mov
dec
jmp
sbb
pop
ret
mov
sub
pop
pop
mov
cltd
stos
call
cmp
scas
xchg
lds
push
add
orl
sbb
push
sbb
mov
mov
aam
sbb
test
xor
movsb
inc
mov
mov
jne
orb
test
xor
add
mov
mov
push
add
in
repz
mov
push
push
sbb
jmp
jp
cmp
test
lods
mov
aas
push
adc
inc
pop
loopne
pop
movsl
in
test
int3
jle
jp
mov
pop
cwtl
mov
inc
data16
jb
idivl
insl
add
hlt
xor
inc
shrb
mov
loope
data16
ds
scas
lea
aaa
data16
lock
and
rorl
jnp
xlat
inc
ret
jg
mov
aaa
movsl
mov
mov
ds
or
stos
imul
cld
mov
inc
stos
push
imul
xchg
fsub
jg
test
cmpsl
mov
add
or
pop
pushf
inc
loop
push
in
jbe
cld
stos
jne
jmp
roll
movsl
xchg
pop
inc
and
jp
jl
push
cwtl
neg
enter
xor
and
adc
loope
and
scas
daa
dec
out
or
xor
mov
add
leave
adc
sahf
xor
and
lods
out
or
ret
sub
cmp
adc
push
mov
jge
mov
ret
scas
mov
pop
movsl
iret
lods
mov
jnp
test
push
sbbb
iret
sub
gs
xchg
mov
or
push
sbb
mov
inc
xor
jbe
js
jb
in
orl
lahf
mov
lock
notb
pop
outsl
add
in
enter
xor
out
pushf
sbb
push
sub
jge
inc
xor
cmpsl
scas
lock
dec
insl
jnp
pusha
mov
mov
or
mov
test
xchg
push
addl
xchg
cmp
xchg
pop
push
cld
sahf
push
daa
adc
inc
dec
xor
sub
fsubr
add
mov
scas
icebp
and
out
ss
dec
jae
jnp
and
pop
or
cltd
inc
subl
dec
rol
outsb
sub
sub
enter
mov
cmpsb
sub
mov
lds
sub
push
mov
aas
jbe
pop
push
dec
aad
jl
pusha
lods
mov
popa
sti
pop
xchg
lock
sbb
dec
push
add
push
flds
jge
cmc
push
pop
lahf
ret
push
sub
call
mov
aam
mov
lea
ret
xlat
lret
jno
out
jne
leave
mov
sub
mov
std
cmp
das
test
popf
add
adc
xchg
push
add
repnz
xchg
sbb
jae
scas
out
pop
pop
dec
push
movsb
cmpsb
pusha
notb
mov
cltd
xchg
aas
cmpsb
or
adc
xor
mov
shl
xor
jns
inc
or
scas
aad
sub
ss
out
mov
incl
sub
aad
test
into
cmp
push
addr16
into
inc
push
mov
sti
xlat
icebp
or
xchg
cmp
int3
mov
shrl
jmp
pop
pop
cltd
dec
jno
leave
xor
sbb
add
ret
pop
add
mov
cmp
ret
loop
pop
testl
testb
push
rcrl
mov
dec
xchg
ja
les
into
and
jae
movsl
dec
subb
push
orb
or
test
mov
ror
imul
add
mov
mov
out
cmpsl
jp
test
pop
xor
add
dec
xchg
out
dec
in
push
jmp
roll
add
xchg
outsl
and
int3
push
adc
aam
les
fbld
ficompl
ds
stos
jo
and
jne
xchg
adc
cmpsl
je
push
cmpsb
dec
out
inc
and
jns
cmp
ja
dec
xor
loop
andl
imul
int3
adc
adc
cli
inc
loope
lcall
in
inc
testb
mov
bound
lock
xlat
dec
dec
jne
stos
enter
xorl
xor
sub
or
movsl
cmp
push
and
mov
push
cli
imul
sbb
bound
inc
fcmovnb
xchg
adc
add
bound
jbe
lcall
and
lods
shrb
outsb
cmp
lods
in
pusha
loop
addb
jbe
mov
pop
jecxz
ja
jg
xor
xor
aaa
stos
js
cmp
and
or
push
mov
push
cmp
mov
lds
ljmp
jmp
ljmp
push
inc
push
jbe
mov
cs
fcompl
xor
jne
and
jae
or
adc
xchg
xor
pop
lcall
dec
adc
and
mov
sahf
mov
dec
ss
int3
ds
cwtl
gs
mov
lahf
sub
sarl
enter
inc
mov
sti
or
lock
push
push
push
jbe
and
enter
shll
mov
pushf
cmp
sub
imul
cmp
adc
xor
mov
les
mov
dec
pop
lahf
icebp
lret
fcompl
mov
jmp
repz
jb
sub
leave
jle
jno
cli
lahf
dec
inc
xchg
sub
ds
dec
incl
push
adc
mov
and
xor
cmp
inc
iret
adc
adc
dec
pop
sub
sub
adc
xchg
cmp
pop
fimull
jp
push
es
sbb
cmp
adc
pusha
cmp
xchg
jecxz
fwait
push
outsb
mov
mov
lret
push
jno
push
les
adc
negb
stc
push
lds
fcoms
dec
bound
xchg
insl
add
popa
jecxz
scas
dec
or
pop
cmp
data16
imul
mov
jmp
pop
test
cltd
xor
stos
inc
xor
movsb
rclb
adc
jge
lea
dec
jecxz
aam
add
jl
dec
adc
xchg
mov
lods
cmp
push
out
fimuls
insb
and
fcompl
cmp
adc
pop
jle
and
insl
sbb
push
mov
divb
adc
inc
ficomps
adc
scas
fsubrl
mov
js
sbb
sarl
add
aad
mov
lods
out
sub
out
xor
imul
andb
shl
jl
lea
xchg
cld
scas
fsubrl
inc
stos
fnstcw
pop
int3
sub
pop
dec
pop
adc
das
loope
add
push
mov
sub
aaa
xlat
icebp
xor
mov
jno
es
sub
lret
addr16
push
sahf
dec
pop
out
adc
cmpsl
pushf
test
cmp
hlt
mov
outsl
push
or
fdivp
dec
rcrb
push
gs
push
pusha
mov
test
adc
jge
push
lcall
fisttpll
push
inc
sub
or
adc
inc
or
test
cmp
mov
xor
sbb
or
in
add
in
mov
dec
mov
hlt
push
xor
loopne
cli
push
cwtl
xlat
sub
js
das
push
add
pop
sub
pop
push
jg
ret
fists
aaa
sub
lahf
sbb
out
mov
insl
mov
psllq
sbbl
sbb
ds
cmp
pusha
imul
xchg
inc
fcmovbe
push
movsl
lcall
mulb
mov
aam
inc
mov
movb
js
push
sub
sti
incl
orb
mov
sti
lcall
adc
je
shr
mov
adc
sub
aam
icebp
or
arpl
bound
or
lds
popf
lods
bound
orb
inc
mov
fs
icebp
add
and
ds
pop
inc
je
cli
sub
cmc
add
fwait
xor
fwait
cmp
aad
fists
sub
jbe
nop
ljmp
lock
mov
mov
mov
add
adcl
andb
xchg
scas
inc
cmp
inc
je
push
inc
ljmp
xlat
shlb
loopne
pop
cmp
inc
std
jl
mov
jg
mov
sahf
pop
jecxz
fildl
inc
sbb
outsl
jg
mov
aaa
inc
and
add
mov
sahf
icebp
sbbb
test
push
push
orb
cmpb
mov
dec
mov
adcl
ret
ret
out
push
scas
lahf
clc
ds
inc
loopne
adc
mov
jne
add
pop
sbb
loope,pt
pop
daa
fucomp
xor
dec
pop
jmp
out
popf
stc
inc
fidivl
adc
lret
pushfw
sarb
popa
push
in
push
pop
xchg
or
dec
mov
jl
arpl
lcall
add
aad
inc
jl
ds
into
mov
adc
jns
aaa
addr16
push
or
movzwl
push
xor
mov
push
jb
rol
jmp
push
loop
dec
xchg
test
jns
adc
scas
pop
stc
mov
inc
jae
add
pushf
xchg
dec
add
xor
mov
pop
dec
xchg
adc
loope
pop
hlt
xor
fsubs
sti
sbb
test
mov
adc
aad
sarl
mov
push
cmp
test
pop
xchg
mov
add
cmp
test
mov
fimuls
pop
in
mov
mov
push
aam
fdivp
push
loop
test
cmp
inc
out
pop
mov
popf
dec
cmp
xchg
cmpsb
adc
aas
and
ja
or
jno
jl
mov
lock
clc
cmp
push
sbb
mov
inc
stos
outsl
jle
mov
xchg
dec
aad
je
hlt
jge
subb
sbb
pop
xchg
in
idivb
js
mov
pop
pusha
leave
fnstcw
sarb
imul
mov
gs
sub
pop
shrb
xor
scas
adc
loopne
aam
filds
xchg
cmpsb
sbb
xchg
pop
jae
mov
cltd
or
clc
add
imul
sbbl
mov
mov
adc
inc
mov
loope
xlat
xor
inc
pop
ljmp
cmpsb
inc
push
ja
mov
sarl
ljmp
stos
in
xor
cltd
lds
repnz
pushf
sbb
fwait
dec
mov
cmc
pop
daa
outsl
push
lock
lahf
lea
xor
bound
adc
in
dec
jg
jmp
jmp
pusha
addr16
jbe
out
je
lods
adc
mov
ret
in
cmp
mov
aas
iret
push
add
pushf
in
pop
sbb
sbb
std
insl
aam
pop
sahf
and
mov
adc
mov
inc
daa
mov
cli
mov
pop
subb
add
aam
fs
stc
jno
out
loope
add
or
call
jmp
cmc
pusha
fcmovnbe
out
std
fildl
push
sti
xchg
pop
or
out
adcb
pop
orl
or
jecxz
call
test
dec
or
movsb
jmp
fildll
adc
jnp
or
xchg
adc
addr16
xchg
pop
mov
and
pop
jle
cmpsl
sbb
cmp
ja
or
fisttps
std
mov
mov
test
hlt
xchg
xchg
xor
push
insl
sbb
mov
test
jl
cld
sub
mov
pop
sti
lods
ljmp
stos
pop
dec
movsb
sarb
inc
xor
xchg
loopne
jb
les
cs
mov
xchg
mov
jp
or
test
push
sub
daa
inc
push
loope
pushf
push
pop
leave
jne
aam
cmp
pop
inc
ret
sub
xor
xor
xor
imul
jno
xchg
cmpsb
lock
out
mov
clc
dec
sbb
test
cld
mov
mov
push
call
pop
jecxz
out
sub
pop
jecxz
dec
lcall
push
xor
test
push
lock
push
or
jbe
loopne
bound
xor
or
pop
xchg
add
outsb
push
pop
test
jle
push
push
lock
push
lock
add
sti
lock
loopne
mov
dec
add
sub
xor
mov
xchg
jl
je
jg
mov
into
sbb
inc
jg
xlat
pop
nop
insl
lret
cltd
fs
jecxz
pop
loope
push
ret
js
push
cmp
dec
cmp
push
mov
inc
lret
jne
sbb
xor
cmpsb
and
mov
jle
adc
lret
sub
je
adc
aam
mov
in
cmp
imul
nop
or
mov
sbb
stos
jle
pop
repnz
jns
push
mov
sub
push
inc
fdivs
push
pop
in
push
pop
mov
inc
outsb
cmp
insl
cmp
insl
lock
push
int
xor
jne
pop
push
popa
xor
xchg
ljmp
dec
daa
xchg
sub
mov
sbb
test
jp
cmp
lahf
ja
icebp
out
dec
cmp
in
outsb
add
sbb
std
aad
cmp
inc
mov
adc
push
sbb
adc
inc
add
test
lock
xchg
pop
add
add
stos
icebp
scas
mov
sti
and
stos
fisubl
mov
cld
loope
jmp
sub
das
cs
leave
add
rol
push
and
in
fwait
push
mov
cwtl
jl
dec
push
jbe
lcall
push
adc
aam
stc
shlb
inc
inc
clc
movsb
sub
push
lea
mov
dec
push
jle
mov
fcomps
sub
push
fnstcw
out
push
inc
xchg
adc
mov
xchg
outsl
adc
cmp
xchg
std
mov
push
inc
cmp
je
push
jmp
fwait
stos
adc
push
or
psubd
mov
dec
and
js
stc
nop
mov
adc
pushf
xor
insl
inc
lahf
mulb
pop
pop
imul
jo
push
aaa
inc
aad
subl
pop
mov
dec
test
jbe
ljmp
pusha
jp
push
adc
adc
mov
sbb
xchg
dec
call
ret
inc
xchg
iret
out
cwtl
add
mov
cld
loop
pop
sar
adc
sti
inc
jmp
fs
es
push
into
stos
mov
fisubrl
or
int3
pop
leave
lret
adc
cmc
test
clc
and
dec
cmp
xchg
lcall
and
js
cmpps
dec
mov
insl
mov
in
ss
inc
pop
cld
clc
dec
add
jnp
sbbl
mov
outsl
sbb
push
movsb
test
sub
not
mov
gs
inc
in
dec
push
or
xchg
mov
int
jo
enter
shr
jmp
or
cmp
fiaddl
cmpsb
push
enter
test
imul
sbb
cmp
sahf
insb
test
push
les
xorl
jne
popa
jg
pop
enter
inc
test
cmp
jecxz
or
cmp
movsl
cli
fdivs
ljmp
add
notb
cmpsl
js
sbb
xchg
dec
mov
repz
sbb
add
mov
outsl
daa
pop
pusha
out
popf
popf
inc
fidivrl
and
or
sbb
sbb
and
and
fistpll
cs
mov
fstpl
stos
popa
clc
sbb
pop
xor
adc
mov
rclb
adc
addl
call
mov
and
add
call
cltd
xlat
xor
xchg
add
pop
sahf
or
fstpl
sub
mov
xor
loope
push
push
insb
mov
popa
sub
mov
xchg
mov
dec
cmp
jmp
shrl
mov
stos
aad
lds
aas
xchg
ds
dec
push
lahf
test
stos
je
adc
pop
rolb
test
int3
out
cli
dec
arpl
data16
jp
shrl
cmpb
fwait
push
cmp
push
xor
notl
sbb
nop
jle
add
mov
adc
xor
ja
mov
imul
add
popf
adc
push
and
jb
mov
mov
mov
sub
jle
mov
jmp
jmp
xchg
loope
fwait
pop
pop
add
jge
pop
scas
mov
leave
leave
mov
out
pop
adc
call
or
mov
adc
xchg
sub
and
lds
push
leave
xchg
push
ret
ljmp
jp
xchg
mov
jg
rolb
repz
sbb
fucom
jnp
mov
ds
xchg
das
fdivrs
or
mov
push
add
movsl
outsl
xlat
nop
andl
testb
push
xchg
sub
lea
inc
jle
mov
jg
insb
in
add
dec
mov
and
imul
cltd
mov
psubb
pop
dec
loop
or
jge
mov
dec
mov
int
mov
dec
jmp
in
repz
pop
mov
rcll
ss
mov
test
shll
rcr
jmp
inc
xchg
mov
sub
adc
lods
data16
pop
fstl
mov
stc
test
scas
scas
test
int
xor
cld
and
repnz
jo
cs
push
enter
jmp
scas
ret
in
sbb
sub
ret
loope
or
outsb
inc
pop
add
push
jle
dec
mov
lahf
fidivs
add
popf
pop
andb
fiadds
sub
cmp
mov
dec
ficoms
mov
iret
movsl
add
decl
inc
dec
cld
in
sbbl
inc
loope
xchg
jl
sub
pop
fucomip
call
or
push
cmpsb
and
pop
xor
pop
push
insl
nop
daa
lock
cli
aad
scas
cld
jp
add
push
cld
xlat
xchg
xchg
jle
je
and
out
xchg
cli
enter
mov
pop
jbe
xlat
iret
push
cmpsb
fstp
jns
xchg
push
ret
roll
xchg
addr16
cs
jno
jge
xor
jge
pushf
xor
scas
jne
add
repnz
mov
xchg
rclb
sbb
ds
push
stos
inc
jno
add
mov
mov
int3
mov
pop
dec
jecxz
popf
cs
in
jae
dec
push
dec
out
aas
jo
cmp
sub
dec
shll
popa
inc
lds
in
iret
push
mov
cs
jb
fnsave
push
push
loope
xchg
jecxz
cmovle
push
insl
xchg
inc
subl
add
loopne
push
xchg
arpl
aad
or
adc
scas
aam
cli
test
cmp
lret
bound
sbb
and
sahf
shll
fincstp
or
ror
adcl
cmp
xchg
enter
and
ss
arpl
stc
sbb
jecxz
mov
sti
cmp
xchg
dec
or
xor
sbb
dec
mov
adc
cld
imul
dec
pushf
jecxz
out
jmp
movsl
shr
mov
stc
imul
rcrl
dec
in
or
insl
add
shlb
dec
add
sub
cmc
faddl
insb
fcomip
lods
xlat
repnz
dec
sbbl
push
das
jmp
test
in
mov
loop
mov
dec
call
or
cmp
mov
sbb
push
stos
fs
fdivrl
cmp
adc
adc
and
push
rclb
jo
repz
adc
cmp
pcmpeqw
mov
add
xchg
scas
pop
mov
les
rcrb
xchg
jmp
jns
sti
mov
xchg
dec
push
inc
fdivp
add
cwtl
cltd
sbb
pop
jge
mov
or
pusha
push
pop
mov
and
ss
gs
mov
jp
mov
jle
out
sarl
cmp
xchg
jne
push
imull
pusha
fbstp
mov
inc
push
push
push
xchg
test
mov
add
ret
lahf
or
outsb
cmp
lods
add
cmp
and
stc
arpl
mov
cmp
jle
cld
imul
pop
cmpsl
lods
fwait
lods
sub
jl
and
lret
orl
fisttpll
insb
test
sub
cmp
enter
icebp
adc
rcrb
jge
orl
xchg
pop
aaa
popf
rcl
push
jecxz
pop
stc
jnp
hlt
out
jne
xor
mov
js
mov
mov
push
aas
jecxz
inc
mov
inc
cmp
repnz
outsl
push
jnp
dec
mov
cwtl
dec
movsb
inc
aam
dec
inc
loop
inc
fs
lock
xchg
mov
movsb
ds
out
lahf
sbb
mov
sbb
in
nop
jbe
sub
cwtl
xlat
in
jmp
pusha
pop
test
mov
cmp
cmc
dec
add
push
mov
jne
addr16
cmp
rep
push
sbb
into
gs
and
mov
imul
add
cltd
and
test
sub
shr
mov
gs
fnstenv
fbld
or
dec
cmp
mov
and
pop
mov
and
fwait
jl
dec
xchg
fdivrs
pop
pop
lret
mov
insb
adc
imul
mov
mov
or
fstpl
add
pop
sbb
jg
xorl
sbb
sub
cltd
jnp
fucompp
mov
pop
arpl
popf
cmc
lahf
stos
jmp
sub
pop
popa
add
out
lods
fadds
imul
test
sbb
sub
inc
mov
insb
popf
adc
lret
popf
sbb
cmpsl
mov
sbb
fidivrs
testb
fcoml
in
lds
sub
pop
push
test
mov
jmp
sbb
pop
in
pop
push
dec
mov
sub
hlt
xor
mov
sbb
adc
mov
mov
mul
clc
inc
xor
cmp
dec
lcall
mov
fs
xchg
rorl
and
adc
inc
pop
mov
ljmp
sub
cmp
xor
aam
mov
push
jo
stc
push
dec
stc
push
mul
dec
cmc
aad
push
jbe
mov
xlat
imul
or
xlat
inc
pop
jecxz
aad
mov
mov
dec
add
or
mov
xchg
mov
es
jb
jnp
sub
sub
jae
sub
aam
mov
xlat
sbb
cmp
movsl
mov
addr16
out
test
rcll
ficomps
xor
mov
inc
xchg
out
enter
or
test
sub
das
push
sub
pop
jmp
push
mov
je
pop
in
fsubrs
ja
cli
inc
data16
rep
jecxz
test
jle
mov
movsb
sub
mov
push
ret
add
ja
das
stc
fidivs
out
lods
movsb
jae
mov
sbb
or
or
call
and
insl
repz
push
cmp
push
inc
cmp
popf
mov
push
cs
loop,pn
aas
mov
jno
xchg
and
cwtl
or
mov
fxch
jno
aad
in
rol
push
inc
xlat
adc
inc
push
dec
push
jnp
insl
or
pusha
adc
push
push
loop
sahf
inc
push
xchg
lods
xchg
out
roll
and
loope
scas
push
divb
sbbb
shll
lahf
adc
push
shrb
movsb
fs
in
sar
ss
and
out
xchg
jb
clc
push
push
or
shlb
cmp
push
add
xchg
test
sbb
pop
aaa
into
mov
shrl
and
mov
cmp
daa
mov
push
int
dec
ds
and
cmp
inc
or
push
add
and
pop
subb
into
int
sub
frstor
testl
pushf
cli
dec
js
in
mov
mov
gs
adc
cld
xchg
xchg
xchg
les
jo
arpl
enter
icebp
sbb
andb
cmp
xor
push
dec
scas
in
out
faddl
scas
fimull
mov
cld
add
cmpsl
pop
jg
add
and
dec
dec
or
ss
push
int
call
jecxz
dec
dec
fistpll
add
ja
cmp
call
in
add
mov
rcl
push
adc
mov
push
arpl
xchg
mov
xchg
jmp
xchg
xchg
mov
out
bound
mov
push
pop
push
sbb
in
sbb
inc
into
aas
add
dec
push
insl
mov
fidivrs
leave
xlat
pop
lock
mov
ja
pop
push
fsubs
movsl
jg
inc
ss
rclb
xchg
and
test
mov
and
mov
lods
or
cmpsl
out
mov
pop
jle
into
test
inc
lds
sub
icebp
or
jg
int3
jg
pop
ja
sub
inc
fcomip
or
adc
sbb
mov
xor
call
cmp
in
jge
rcrl
push
gs
sbb
cmpsl
insb
out
add
or
push
cmpsl
xchg
rcrl
jecxz
jp
mov
insb
or
and
inc
data16
xchg
in
pusha
sti
outsl
sbb
xlat
lahf
mov
aas
jb
fnstcw
sub
leave
pusha
addr16
outsb
xchg
or
stc
or
pop
cmpl
or
call
xor
movsb
call
xlat
inc
or
cmp
and
aam
jecxz
repz
lods
and
mov
mov
xor
inc
jge
inc
or
or
dec
xchg
mov
cmpsl
pop
xor
mov
incb
ja
and
insb
aam
adc
add
inc
add
sti
or
jno
lret
dec
pop
testb
sbb
cmp
inc
movsb
lods
jns
insb
stos
int
xchg
sbb
imul
test
ljmp
lock
popa
pusha
and
cmp
push
movsb
dec
fisttps
icebp
rcll
push
idivl
iret
sub
jno
jge
scas
scas
sahf
outsl
popa
clc
mov
jb
jmp
push
shrl
pop
ljmp
push
addr16
fldl
add
or
xor
jl
jl
out
out
add
dec
in
inc
adc
pop
sahf
pop
movsb
dec
add
clc
and
jge
push
jns
jbe
shl
push
mov
fsubrs
and
pop
cmp
push
xchg
adc
or
mov
push
call
nop
jae
and
cmc
pusha
jmp
xchg
loope
mov
mov
xchg
loop
add
mov
xchg
adc
inc
pop
les
jns
loope
xor
jne
mov
mov
fbld
das
mov
loopne
jb
adc
in
dec
sar
out
mov
dec
movsl
loope
call
or
cmc
xor
push
loope
mov
notb
lahf
and
mov
aad
repz
aad
inc
filds
and
imul
aaa
test
pop
cs
lods
mov
xorb
and
add
cmp
and
mov
insb
enter
xchg
adc
ret
je
popa
or
or
pop
adc
stc
testl
fisttpl
testl
inc
sbb
cs
push
jmp
loopne
mov
push
in
cltd
je
xor
mov
jp
shl
xchg
fbstp
shll
jbe
mov
adc
cmp
or
cwtl
mov
int3
pop
je
cmpsb
or
mov
mov
sbb
icebp
scas
inc
rcr
push
leave
iret
jl
daa
push
mov
mov
sub
cs
dec
xlat
fisubrs
fwait
cmpsb
push
int3
fidivs
jmp
sahf
sbb
cli
fidivs
roll
xchg
fbstp
jbe
loopne
lret
lret
and
ror
sub
gs
repz
and
inc
jp
in
divl
mov
xchg
fisttpll
jge
add
mov
add
add
ja
es
cwtl
xchg
imul
mov
lret
aas
push
ds
dec
ficomps
sub
mov
xchg
cmp
sahf
jne
in
adc
lock
fidivrl
cli
jbe
jns
pop
fsubr
dec
inc
add
lea
mov
les
int
stc
aad
je
pop
push
mov
dec
popa
notl
xor
arpl
jle
adc
xor
or
jge
and
sub
cmpsl
adc
into
mov
ss
cmp
icebp
jecxz
jle
adc
xor
or
lret
push
or
je
mov
fidivl
inc
mov
lock
iret
out
incb
sbb
insl
inc
inc
push
in
scas
int3
arpl
dec
in
mov
arpl
lcall
mov
jmp
push
cmp
jg
jno
je
or
adc
fdivr
or
sub
out
cmp
loopne
pop
pop
sahf
mov
xor
inc
xchg
ds
loop
cltd
lock
mov
daa
pop
xchg
dec
into
and
and
xchg
cmpsl
push
jmp
sti
pusha
cmp
mov
xchg
mov
and
pop
repz
mov
mov
dec
push
jmp
dec
jbe
enter
mov
sti
out
stc
pop
lret
loope
xchg
or
jne
test
fadd
enter
add
cld
xchg
jnp
lret
call
loop
outsb
cmpl
enter
cmp
adc
std
cmpsb
push
stos
sti
or
jnp
shrl
push
push
jnp
ja
fmul
mov
push
xor
and
jbe
mov
outsb
add
jns
adc
hlt
cs
sbb
andl
and
push
push
mov
jle
cmpsb
arpl
sbb
or
cmp
lahf
orb
dec
inc
in
mov
and
dec
in
arpl
or
in
add
outsl
push
or
inc
inc
scas
pop
fisubrl
insl
sahf
lea
stc
or
es
int3
dec
and
adc
dec
cmc
push
inc
ds
call
adc
andb
lret
ss
jb
jmp
xchg
inc
loope
popf
adc
mov
xor
push
mov
sbb
adc
sub
std
fnstenv
jno
lcall
xor
mov
ljmp
sahf
xor
hlt
mov
aad
mov
mov
or
loope
pop
cmpsl
ret
jp
insb
cmpsl
mov
push
popa
mov
ret
adc
ret
pop
loopne
xor
ds
rorb
rep
pop
cmp
adc
mov
cmp
add
cmc
test
xor
loopne
mov
das
mov
cmpl
mov
and
and
jae
adc
cli
andl
or
xor
cmp
or
aaa
dec
aas
mov
adc
lds
pop
add
sub
pop
es
mov
sub
fldl
inc
sbb
fs
test
xchg
sbb
test
ss
pusha
mov
pop
lahf
lods
jo
mov
sti
sub
je
das
xorl
or
ja
stos
imul
pop
imul
aam
push
rol
insl
in
imul
out
sub
lods
or
insl
mov
push
cmc
jnp
xchg
sarb
mov
mov
xchg
jp
insl
sarb
lahf
fidivrl
jmp
add
js
jp
rorb
leave
push
mov
aaa
pop
mov
das
push
and
clc
dec
mov
scas
call
mov
repnz
dec
dec
cmp
jns
rclb
lcall
notb
outsl
addb
mov
inc
and
popa
mov
jl
aas
out
jo
mov
push
pop
icebp
int3
or
scas
pop
lods
push
mov
sub
cmp
and
mov
jp
xchg
mov
iret
data16
sbb
andl
pusha
div
dec
jb
outsl
sub
jne
dec
adc
stc
fldz
gs
cli
xorb
inc
fcomps
cmp
orps
ss
xchg
or
fmulp
out
or
xor
loope
add
repnz
in
xor
push
jae
xor
mov
inc
xlat
test
daa
outsl
mov
jmp
aas
or
pop
cmp
and
mov
adc
xchg
aas
push
mov
imul
jno
pop
jne
mov
dec
shll
add
in
push
mov
mov
pop
out
push
xchg
jnp
sbb
add
sub
movsb
pop
xchg
and
add
mov
cmc
jno
cmc
stos
xchg
mov
in
ret
mov
mov
daa
jecxz
sbbb
jp
or
dec
mov
push
sarl
icebp
lahf
add
mov
shlb
enter
jne
and
lods
fdivl
xchg
jbe
sahf
add
jb
inc
lret
subb
movsl
sbb
out
mov
adc
out
cmp
xor
outsb
mov
xchg
sbb
loopne
popa
fcom
adc
inc
out
mov
jnp
bswap
cmp
xor
adc
les
push
outsb
sbb
out
cli
lock
xor
pop
xlat
rclb
unpckhps
mov
enter
aas
mov
in
or
aaa
or
ds
mov
cltd
insb
jge
imul
xchg
iret
loope
mov
test
cli
ljmp
inc
sub
jbe
dec
stos
inc
pop
xchg
and
pusha
daa
addr16
xchg
mov
add
insb
je
in
mov
cltd
cmpl
mov
pusha
xchg
loopne
push
out
popf
rorl
pop
out
jp
lods
jae
cld
dec
xchg
push
dec
mov
jns
in
mov
mov
inc
xchg
adc
push
lods
inc
push
inc
sub
fstl
pop
clc
adc
mov
push
in
adc
sbb
aas
mov
insb
inc
scas
fbld
test
xchg
repz
addl
add
and
push
in
std
inc
lds
lods
inc
push
mov
ds
mov
cmp
in
xlat
dec
aas
aam
ficompl
sub
rcll
rcl
pop
shl
mov
mov
cmp
and
cmp
adc
xchg
adc
cld
and
scas
or
lock
sbb
xchg
sahf
push
xlat
xchg
scas
xchg
sub
test
aaa
push
andb
sti
add
dec
or
jbe
and
push
mov
mov
xchg
pop
pop
cmp
out
dec
jecxz
ss
mov
cmp
in
jne
or
dec
xchg
imul
sbb
cmc
lods
ss
lahf
adc
push
out
insl
cmp
mov
shrb
mov
imul
scas
addr16
shrl
das
push
jg
mov
xor
je
inc
mov
mov
das
dec
cmp
test
leave
ljmp
in
call
mov
sahf
mov
les
ljmp
inc
or
dec
cmpsb
push
push
fcomp
adc
pop
pop
imul
lahf
arpl
pop
fwait
sbb
mov
mov
mov
mov
in
shll
or
pushf
push
xchg
cmp
mov
cltd
leave
retw
pop
rol
pop
mov
int
aaa
or
pop
daa
cli
mov
shlb
and
or
bnd
dec
repnz
xlat
push
out
and
icebp
and
int
lock
sbb
cmpsl
sbb
out
int3
pusha
out
xchg
std
rcrl
add
push
or
cmp
mov
xor
and
pop
shl
sbb
arpl
popf
sub
ret
das
and
mov
arpl
imul
adc
filds
inc
insl
jge
pop
test
jno
js
dec
xchg
pop
pushf
inc
popa
mov
inc
daa
adc
inc
pushf
pop
and
push
and
lret
xor
xchg
cs
pop
loop
add
imul
outsl
mov
icebp
sarb
iret
mov
xor
out
mov
das
icebp
sub
add
sahf
mov
gs
stos
jno
rcll
test
push
xor
sbb
cmpsl
ds
adc
lds
mov
fldl
mov
lds
inc
xor
adc
or
jmp
xchg
jecxz
xlat
hlt
pop
cmpl
sahf
aaa
or
cmpsb
arpl
stc
add
mov
sbb
int
mov
and
jl
scas
sti
icebp
jns
nop
and
xor
leave
cli
aad
jbe
mov
int
sbb
inc
and
movsb
push
jns
popf
std
mov
mov
popa
leave
outsb
mov
fnsave
es
dec
xchg
ja
test
sbb
dec
imul
mov
iret
xchg
lahf
aad
mov
push
popf
stc
jg
in
aam
xlat
push
pop
aad
fsubrs
rorl
sbb
out
jno
jecxz
insb
icebp
or
xchg
cmp
mov
call
enter
and
rcl
jge
xchg
pop
dec
mov
rcrb
dec
jle
idivb
sub
std
outsb
xchg
and
nop
lret
pop
out
push
jge
leave
pop
out
stc
decb
jle
sahf
bound
add
dec
hlt
mov
adc
xchg
lds
ret
es
or
fwait
xchg
imul
mov
push
mov
and
loopne
and
pop
pop
into
sub
divl
sub
cs
sub
pop
mov
repnz
cmp
jb
xor
into
insb
pop
pop
mov
dec
outsl
jge
icebp
inc
mov
cmpl
mov
test
and
mov
dec
mov
inc
inc
cmp
push
out
and
loope
aam
idivb
jge
in
test
and
and
pop
icebp
adc
pop
add
loope
add
xchg
inc
mov
sub
test
or
xchg
bound
fcmovb
stos
xchg
jae
cmp
push
or
sbb
add
fldcw
fdivr
bound
test
cmpsb
add
pop
loope
inc
sti
shl
add
out
xchg
daa
or
loope
jnp
popf
daa
jnp
fldcw
lods
ja
mov
push
pop
adc
out
scas
jmp
jbe
popa
out
aad
sahf
mov
std
cmp
fisttpl
jmp
ret
add
std
ret
push
pop
nop
int
repnz
mov
mov
movsb
xchg
dec
mov
mov
movsb
outsb
pop
into
push
or
shl
scas
and
push
push
sbb
adc
xor
cmp
outsb
dec
cmp
andl
aaa
sbb
aas
outsb
lds
aaa
push
lds
xor
mov
dec
fiadds
xlat
cs
and
cmc
mov
adc
push
cmp
sbb
inc
xor
mov
das
aam
inc
inc
sub
push
aas
outsb
idivb
mov
mov
fdivr
or
push
jno
std
enter
pop
insb
insl
or
pop
ja
int3
fs
push
aaa
fld
cmp
stos
and
mov
sub
dec
pop
sbb
add
mov
sub
loop
scas
adc
repnz
repz
pop
sub
adc
stos
push
pop
daa
outsb
rcll
mov
dec
loopne
cmpsl
mov
pop
inc
inc
stos
mov
cld
push
cmpsl
push
cmp
add
adc
lret
cmp
xchg
cmp
bound
mov
addr16
loope
mov
pop
jbe
cmp
and
sub
cmp
and
inc
jo
out
cmp
sbb
xlat
jg
sbb
push
stos
sbb
imul
fildll
shll
push
dec
jnp
push
aaa
inc
xchg
adc
mov
xor
das
imul
adc
jp
xchg
inc
icebp
scas
nop
and
mov
xor
sbbl
cmp
and
loope
jecxz
add
push
test
mov
rol
dec
loopne
jecxz
xor
divb
push
rcrl
fldenv
fldcw
xor
push
pushf
dec
push
in
mov
mov
stc
stos
add
andb
mov
jecxz
dec
xor
inc
movsl
cmp
xchg
sahf
dec
in
cmp
cmp
adc
push
inc
xor
aad
jge
out
add
addl
aas
push
aam
in
add
ficompl
push
iret
jae
jge
jle
push
sahf
lahf
add
mov
cwtl
adcl
out
lds
fwait
xor
push
mov
sub
dec
mov
dec
out
push
mov
pop
sbb
outsl
push
mov
mov
mov
mov
dec
jne
fldenv
dec
pusha
out
faddl
push
ja
xchg
out
mov
push
jbe
sbb
andl
sbb
es
sbb
adc
xchg
and
fwait
lahf
push
icebp
gs
or
cmp
dec
in
mov
nop
fimuls
push
outsl
aas
fwait
inc
dec
dec
arpl
orb
jnp
ret
push
icebp
pop
insl
bound
sbb
xchg
fimuls
mov
icebp
mov
cmpsl
inc
stc
or
cmp
mov
lcall
sub
pop
cmp
aas
push
sub
popf
stc
ret
outsb
mov
aam
adc
out
fdivl
xlat
pop
mov
int3
inc
pop
cmc
pusha
mulb
idivb
mov
jo
out
push
sbb
pusha
pop
xchg
sub
dec
jl
add
inc
and
mov
inc
xor
imul
xor
cmpsl
sahf
jno
cmp
out
fdivl
mov
or
mov
les
insl
jb
lahf
jns
jge
int
adc
inc
sub
pop
add
dec
cmpl
sbb
jnp
jmp
dec
aad
mov
jge
push
inc
inc
mov
bound
inc
adc
ficomps
fisubrs
add
jae
aad
and
int3
mov
jbe
mov
lds
mov
mov
clc
aad
mov
inc
inc
push
jo
test
icebp
sub
ja
rorb
outsl
push
push
mov
loop
jmp
out
lret
jne
pop
shrl
js
ud1
adc
adc
mov
or
mov
mov
ljmp
ja
test
sbb
fs
push
xchg
push
pop
clc
shll
data16
ret
scas
mov
xchg
xchg
ljmp
dec
add
cs
imul
popf
clc
mov
cmp
fnstenv
sbb
mov
into
hlt
adc
mov
dec
fisttps
or
dec
fisttpll
lahf
nop
leave
cmp
addr16
push
mov
jbe
mov
cmp
lret
into
iret
bound
shll
sbb
mov
push
mov
jle
add
aaa
mov
jnp
jge
negl
mov
jge
andl
ret
sbb
sahf
mov
out
or
mov
push
call
mov
dec
jecxz
into
stos
inc
and
lods
and
jae
xchg
movsb
es
dec
fmul
cmpsb
push
cmp
stc
mov
in
xchg
mov
jmp
outsb
ljmp
movsl
inc
cltd
pop
inc
push
loope
aaa
xchg
sub
and
sub
mov
addb
sub
cmpsb
fsub
fisubrs
mov
adc
pop
stos
test
cmp
mov
jl
xor
popf
ja
jg
stos
and
lods
xchg
aad
or
mov
dec
xor
clc
xor
sub
xchg
leave
pusha
inc
push
inc
or
xor
fiadds
inc
pop
aad
gs
ret
hlt
bnd
mov
in
jge
mov
stc
andl
stos
jae
pusha
ljmp
fsub
mov
aas
xor
outsb
sub
cli
jecxz
cmp
lods
inc
mov
test
mov
aas
add
jnp
jne
add
and
out
mov
adc
push
xor
je
xchg
cli
jb
loop
or
pop
jecxz
pop
lcall
pop
sbb
mov
fcoml
js
sahf
pop
lock
jl
mov
xorl
rcrb
cmp
mov
sbbl
roll
ret
inc
pop
add
in
out
and
fsubrl
punpckhbw
xchg
push
jmp
pop
repnz
iret
xor
jne
pop
rcrb
addb
pop
sub
mov
mulb
ret
xchg
push
mov
js
jnp
xlat
push
jbe
jp
jg
mov
adc
lods
lods
mov
bound
test
xchg
aas
mov
fbstp
inc
lock
je
gs
cmpsb
and
dec
mov
insl
insl
loopne
fdivr
xor
imul
push
jbe
dec
sub
lcall
xchg
push
rorb
xorb
sub
adc
xchg
inc
repnz
jnp
shl
je
aas
adcb
leave
sbb
lock
fisttpl
and
std
xchg
in
xchg
push
mov
fidivrl
inc
pop
push
das
mov
push
mov
pop
out
pop
incb
cmp
jle
sub
sub
inc
sbb
inc
dec
scas
and
arpl
rorl
dec
hlt
mov
and
int
lret
lds
pop
out
insb
loop
push
test
push
loopne
test
sti
fwait
scas
sub
loopne
adc
sbb
xor
ja
push
in
mov
xchg
jle
jns
inc
mov
push
aam
push
mov
mov
push
lret
mov
popa
clc
jo
or
ja
xor
imul
sub
or
arpl
inc
movsb
in
sbb
aad
cmp
shrl
negl
test
jns
rcll
pop
xchg
fdivrl
pushf
xchg
pop
dec
not
mov
sub
sti
daa
rclb
aas
lods
and
cmpps
jne
movsb
jg
xor
test
xchg
jecxz
cltd
cs
mov
jle
jnp
in
inc
scas
or
or
xor
jno
mov
cwtl
push
mov
and
in
fisubl
lock
xor
and
add
aaa
dec
test
dec
add
push
add
push
daa
ljmp
dec
pop
and
repnz
arpl
cwtl
stos
std
push
jmp
push
lea
cs
push
fcompl
nop
sub
in
pop
fmul
stos
fwait
push
adc
std
xlat
data16
and
adc
dec
sbb
push
dec
sub
adc
cmp
or
xor
xor
test
jno
out
sub
push
sub
xor
shr
mov
lahf
add
inc
or
fstl
cmpsl
dec
cmp
hlt
mov
cld
cmpsl
push
test
and
xor
mov
dec
lods
jo
adc
sbb
or
sub
pushf
pop
push
xchg
shrb
and
ss
cwtl
adc
and
mov
lea
inc
add
xor
sub
jge
shll
pop
push
shll
adc
in
in
call
cmpsb
sub
jae
orb
loope
mov
cmp
lret
call
dec
sbb
and
in
adc
leave
xor
cmp
rclb
andl
cmp
clc
push
shrl
or
fbstp
add
scas
fmul
aam
in
jb
lcall
shrl
stc
movsb
imul
push
test
mov
mov
add
fisubl
fcmovnb
es
pusha
dec
das
jo
adcl
and
and
adc
inc
lods
test
xchg
mov
xchg
lods
inc
or
sti
or
or
pop
pop
push
cmpsl
push
xchg
lds
push
icebp
jbe
dec
pop
movsb
xchg
jae
mov
rcrb
arpl
stos
push
xchg
ljmp
mov
sbb
jns
subb
mov
decl
sub
fnstcw
dec
mov
adc
adc
dec
divl
sub
fsts
pop
insl
shl
push
pop
mov
jno
add
movsb
sti
pop
pushf
add
fildl
and
filds
je
mov
mov
test
mov
mov
add
orl
or
stos
lret
push
fldt
jnp
stos
add
fstpt
fisubs
cmp
ss
popa
sbb
repnz
push
hlt
shr
lods
add
xorl
cwtl
or
call
rolb
push
pushfw
xor
sbb
add
mov
fidivs
push
add
mov
aas
or
stos
inc
dec
xchg
xchg
add
sub
push
movsl
loopne
pop
js
jecxz
jns
add
inc
cmp
jp
cmpsl
xor
cli
mov
mov
mov
in
add
aam
in
add
inc
stos
repz
bound
lcall
leave
jl
fcmove
xor
pop
add
pop
dec
cmp
inc
pop
push
or
mov
sub
test
or
stos
pushf
pop
call
popf
js
inc
notb
lret
adc
mov
roll
mov
aam
push
add
pop
sbb
scas
or
pop
sub
push
push
add
sub
jl
icebp
sbb
mov
insl
add
jae
or
xor
push
mov
jl
inc
rcr
mov
mov
sbb
mov
push
bound
mov
add
mov
jmp
lea
xchg
add
push
adc
xor
xor
pop
push
jnp
inc
call
xchg
dec
fadds
sub
pop
hlt
adc
shl
mull
xchg
pusha
cld
test
pop
movsb
pop
popf
or
adc
lret
scas
cs
into
mov
repz
jp
out
mov
aas
cmc
subl
ret
insb
adc
insb
jl
mul
decb
sarb
jl
push
jle
dec
ror
std
mov
test
test
jo
fdivrl
add
inc
sbb
sahf
dec
and
jecxz
stos
mov
popf
pusha
les
mov
ljmp
add
dec
push
lock
push
xchg
xchg
add
adc
pop
sbb
jae
repnz
fiaddl
js
in
cli
mov
cli
xchg
rol
add
cmp
in
add
ja
jb
repnz
push
fwait
sbb
jle
sub
lds
jnp
or
jmp
iret
pop
pop
fwait
test
mov
je
dec
sbb
push
ja
jne
mov
xor
push
sub
pop
xchg
lods
jns
fimull
lods
and
and
sbb
mov
xchg
lods
test
lods
lock
dec
arpl
data16
push
ficoml
idivl
xlat
cmpsl
or
mov
xor
test
shlb
cwtl
frstor
nop
aaa
int
orb
pop
ds
lahf
out
sub
fyl2xp1
cli
mov
loope
popa
or
dec
shrb
cmp
stos
ds
outsl
ret
shlb
dec
push
xor
jg
mov
stc
and
pop
fistps
xor
fstl
rolb
scas
xchg
fisttpll
mov
aaa
movsb
mov
jno
enter
jg
cmc
sub
dec
pop
rcll
jg
cli
dec
and
or
stos
push
cmc
testl
jmp
popf
lcall
jbe
mov
lea
mov
sub
das
adc
negb
ret
add
fs
push
outsb
mov
adc
inc
call
in
mov
xor
and
dec
sbb
mov
mov
push
jecxz
sub
push
mov
xchg
das
pusha
fdivr
stos
sub
xchg
xchg
jp
and
cmp
add
in
test
cmp
cmp
test
daa
gs
jmp
sbb
lods
inc
xor
cld
popa
sbb
scas
push
xlat
sub
dec
nop
inc
cmc
lcall
enter
inc
sbb
mov
rorl
dec
sub
pop
sub
mov
test
insb
add
push
lods
push
ficoml
daa
cmp
ss
imul
cmp
ret
test
or
popa
bound
sbb
gs
les
cwtl
into
sbb
jl,pt
jl
ja
je
sub
mov
lds
cmp
repz
clc
rclb
out
xchg
pop
nop
arpl
mov
and
push
inc
aas
loop
cmp
inc
call
fxch
lretw
ja
xchg
lods
xor
cli
fnsave
fadd
dec
adc
and
and
sbb
mov
mov
loope
mov
xchg
mov
fcmovnb
rcll
cmpsb
ljmp
and
and
leave
fucomp
cli
adc
ljmp
jb
orl
push
stos
or
mov
cmpsb
outsl
or
test
bound
sbb
adc
sub
xor
test
cmpsb
popa
sub
test
xor
jl
mov
leave
arpl
ret
sbbl
cmp
push
sub
stos
xchg
movsb
in
mov
adc
or
fwait
int
jnp
mov
scas
sub
cmpsl
sbb
leave
jns
sub
jbe
sub
mov
outsb
mov
mov
mov
inc
push
fcoml
insl
jne
adc
stos
orl
adc
loop
and
jle
imul
mov
mov
xchg
call
cmp
xchg
cmp
or
cld
outsl
and
loopne
test
pop
add
jle
jns
call
fnstcw
clc
mov
fs
popl
es
and
push
cs
dec
dec
add
out
cli
pushf
std
mov
sahf
xchg
dec
mov
pop
cmp
add
inc
ss
sahf
lcall
xchg
gs
and
push
leave
mov
adc
jns
jp
and
movsl
mov
inc
dec
sbbl
test
inc
cmpsb
repz
pusha
in
push
repnz
push
sub
les
inc
sub
push
push
mov
les
sahf
mov
lret
adc
pop
fsubrp
mov
jmp
lods
xor
fbstp
in
add
fwait
pop
cmp
aad
mov
fidivl
enter
repnz
and
loop
mov
movsl
xchg
adc
adc
fsubs
mov
nop
scas
mov
and
add
fbstp
cltd
je
xchg
add
rcl
insb
cmp
fstpl
add
xor
jecxz
movb
mov
xchg
cmp
popf
inc
mov
fists
push
imul
fisttpll
shrl
xor
nopl
fstl
fisttpll
int
cli
push
jb
mov
arpl
out
test
jbe
add
in
lods
add
outsl
mov
xor
int3
fimuls
and
cmp
and
adc
loop
dec
mov
mov
push
pop
icebp
test
inc
shlb
les
adc
or
pop
rcll
push
jmp
push
fstpt
nop
xchg
or
cmp
sub
push
mov
adc
pop
push
loop
cmpl
xchg
call
xchg
sub
mov
lcall
jmp
jl
or
push
lahf
hlt
outsl
in
xor
enter
dec
sti
ss
fldl
pop
mov
lds
sbb
je
adc
adc
push
mov
fcoml
fsts
cmp
or
mov
xor
cmp
lods
popa
orb
outsl
adc
inc
aaa
pop
jg
fdiv
cld
jl
jp
adc
jo
das
fmull
cmp
mov
xor
cmpsb
lock
dec
add
mov
cltd
rcl
xor
jae
cli
push
pop
addb
je
pop
pop
mov
js
dec
shl
jnp
xchg
scas
fs
mov
mov
adc
les
sbb
sub
push
jne
fildl
shl
push
mov
test
mov
sub
mov
decb
xor
push
sub
dec
in
mov
aas
push
lahf
jb
inc
jne
dec
xor
stos
js
hlt
mov
cs
pusha
call
mov
mov
push
and
stos
or
cmpb
lock
sti
movsl
inc
dec
lock
cmpsb
push
loope
ds
repnz
jne
cmp
ss
or
pop
mov
mov
xchg
fists
stos
aas
cli
push
bnd
out
push
clc
or
add
notl
sub
jne
hlt
pop
sub
lahf
mov
ja
lcall
pop
add
stc
and
cli
daa
and
mov
outsl
and
stos
adc
mov
arpl
ret
sub
sub
outsl
jp
rcrb
adc
movsl
inc
arpl
into
aam
and
movsb
pop
lods
sbb
push
pop
jns
xor
mov
les
lcall
xchg
lret
shl
mov
sahf
xor
aad
out
sub
lock
mov
aas
into
and
jb
mov
pop
xchg
in
sub
xchg
cld
mov
ja
lahf
xchg
fisttps
cmp
outsl
out
rcrb
popf
jae
jle
mov
fwait
sbb
es
movsl
push
iret
test
into
fnstenv
nop
xor
dec
pop
ljmp
and
out
repz
xchg
fst
pop
push
out
mov
jns
mov
adc
clc
pop
scas
sbb
ss
test
lea
std
xchg
sbb
aas
mov
je
mov
bound
jge
push
xor
out
sti
jle
inc
sub
xlat
or
imul
pop
pavgb
xlat
push
sub
insl
fs
and
mov
mov
sbb
out
int3
bound
mov
push
ret
xlat
jb
stos
cmc
mov
push
adc
mov
negl
dec
push
imulb
les
int
adcl
pop
aas
push
jbe
outsb
loope
sahf
dec
lret
or
aam
xor
movsl
cmc
insb
ret
shrb
aam
dec
loop
sbb
lds
into
mov
inc
pop
or
adc
jae
cmpl
inc
add
inc
jge
pushf
xor
adc
scas
shr
add
fidivs
sti
stos
and
aad
lds
jge
enter
jle
mov
addr16
mov
xchg
jne
cld
xchg
adc
js
ljmp
push
xor
cmc
or
jb
jl
sti
fimull
or
decb
sbb
int
jae
clc
cmpsl
cmc
js
aad
add
inc
inc
sub
dec
add
mov
fistps
into
xchg
add
out
fbld
add
loop
and
cmp
gs
jge
filds
sbb
je
js
out
fidivrs
push
adc
dec
cmp
sbb
das
and
pop
lret
jb
jno
bound
int3
add
xchg
gs
movsb
nop
dec
pop
sbb
shr
push
push
xchg
cmpsb
xchg
push
lock
pop
fld
out
xor
in
sti
daa
add
cmp
out
cmp
pop
push
adc
movsb
add
out
cmp
push
sub
hlt
repnz
rorb
in
dec
pop
ljmp
pushf
cmp
out
push
out
lret
push
lock
xor
push
rclb
imul
pop
mov
ret
push
call
lret
pop
cltd
sub
jns
jno
cwtl
mov
int3
out
mov
jb
add
ljmp
dec
cmp
push
in
fcoms
scas
sub
dec
lods
cld
scas
ret
call
sbb
daa
fdivl
cmc
pop
sub
sbb
je
test
cmp
xchg
dec
fsubp
out
pop
ja
ja
push
inc
fwait
clc
cmp
ja
pop
jmp
je
sbbl
inc
and
cmp
lock
inc
dec
cmp
stc
xlat
mov
shll
clc
sahf
movsb
mov
clc
push
in
cmpsb
lods
xchg
add
leave
and
dec
fsub
jne
in
test
dec
fwait
repnz
jnp
mov
inc
popf
jae
add
adc
ret
sbb
cmp
cmp
sbb
inc
dec
frstor
andl
std
jg
pop
lds
out
jp
jge
jg
imul
mov
or
add
ret
hlt
sub
call
jns
jno
lock
mov
inc
inc
scas
je
outsb
sub
cmpsl
les
adc
cmp
sbb
movsb
inc
xor
rcrl
stos
gs
repz
or
mov
xchg
push
adc
sub
rcrl
popa
aas
inc
xor
icebp
es
inc
mov
jp
stc
scas
mov
xchg
std
mov
loopne
pop
movb
ds
cmp
cltd
test
mov
dec
iret
pusha
movsl
scas
dec
xchg
add
push
mov
sbb
lock
sbb
mov
mov
imul
test
scas
leave
das
lahf
adc
imul
and
mov
push
imul
nop
daa
cmp
scas
test
stos
jmp
fdivr
adc
dec
es
inc
pop
push
dec
mov
mov
push
push
enter
fisubl
dec
fldt
push
adc
jno
ljmp
jno
js
cmp
mov
pop
mov
jns
add
aam
pop
mov
mov
aam
pop
sub
cmp
push
repz
mov
inc
movl
xor
imul
mov
adc
aad
jle
pop
sub
jmp
or
in
orl
mov
addb
aam
jmp
je
adc
pop
cmp
xchg
xor
imul
adc
mov
out
testl
and
mov
test
imul
and
stos
imul
jno
pop
icebp
push
mov
xor
fildll
cmp
test
fmuls
add
inc
or
aam
xor
enter
jne
adc
xchg
rcrb
dec
sub
scas
pop
out
and
dec
ss
nop
and
xchg
cltd
xor
inc
in
lea
cmp
fcom
xchg
sub
cli
or
punpckhbw
mov
and
es
insb
fadd
inc
imul
push
xchg
inc
mov
inc
mov
movl
mov
jle
xchg
insb
sbb
test
push
iret
outsb
roll
mov
in
pop
cmp
mov
adc
js
push
fs
xchg
xchg
jle
dec
in
and
es
xchg
in
mov
jne
sub
mov
mov
jp
xchg
sub
jl
lods
and
repz
fistpl
mov
sub
inc
pop
ss
xchg
sub
ret
mov
xor
push
into
popa
outsb
gs
loop
dec
jae
inc
and
adc
imul
dec
pop
popf
aaa
mov
repz
cmc
or
and
jp
xor
lahf
xchg
stos
icebp
jmp
pop
jg
pop
mov
lret
adc
fildll
pop
sahf
cmp
push
mov
pop
xor
fcos
jne
insl
or
xchg
icebp
imul
js
add
insl
stc
test
lds
mov
mov
ret
inc
cli
jo
dec
and
mov
cli
xchg
jmp
jecxz
adc
insb
add
test
mov
mov
xor
sbb
push
lcall
aad
jmp
sbb
stc
dec
shll
inc
sub
iret
push
mov
addr16
insl
sbb
sbb
push
rol
cmpsb
test
pop
in
jmp
add
sbb
jo
mov
outsb
mov
cwtl
mov
pop
hlt
mov
fwait
ljmp
mov
bound
pop
cmp
xchg
dec
pushf
rclb
lret
stc
fsub
dec
cwtl
std
push
mov
imulb
sub
mov
xor
lds
lock
int3
rep
loop
add
jnp
rcrl
jbe
dec
inc
mov
pop
and
in
xor
push
hlt
push
cmp
pushf
xor
loopne
inc
fidivl
dec
jno
mov
mov
fcomp
in
mov
rolb
pop
push
cmp
cmp
je
sbb
daa
xchg
jnp
mov
cwtl
stos
rcl
cwtl
push
fdivrs
test
lret
mov
std
or
stos
mov
fimull
andps
jmp
cs
or
jnp
ss
lret
je
sub
sbb
data16
cld
push
xlat
mov
push
scas
mov
enter
int
mov
pop
lret
dec
push
xorl
fldenv
inc
test
add
inc
stc
xchg
idivl
hlt
add
pushl
std
orb
mov
insb
inc
ficoml
imul
mov
push
xorb
sbb
mov
jle
out
arpl
fsts
test
xor
ja
mov
add
and
mov
add
scas
inc
stos
xchg
adc
daa
inc
call
mov
add
test
bswap
cmc
mov
push
sbb
sub
addb
cmp
sbb
insl
inc
dec
mov
jo
fildl
adc
sahf
int
and
push
cli
push
leave
mov
pop
test
xchg
mov
add
mov
mov
pushf
jle
mov
or
pop
add
dec
das
enter
jl
in
xchg
pop
xor
push
pop
pop
lock
lds
bound
js
or
nop
daa
inc
add
out
mov
or
jnp
jno
into
insl
xor
push
jle
dec
fnsave
fidivs
in
jg
movsl
cld
lods
shll
xchg
daa
imulb
jecxz
jne
mov
push
adc
loopne
push
test
lret
mov
icebp
push
daa
mov
adc
inc
pop
out
arpl
cmpsb
xchg
mov
push
cmpsb
loop
iret
dec
lret
push
jmp
shll
mov
adc
add
jnp
mov
pop
adc
je
aad
lods
out
add
cs
cwtl
aaa
rorl
rclb
dec
pop
xchg
aam
xchg
mov
negb
ja
fisubs
movsb
or
pop
ret
sbb
mov
inc
jne
add
fwait
sti
int
push
cwtl
call
xor
in
scas
inc
pop
cmp
int
stc
fcomi
mov
out
cmpsl
jbe
xor
movsb
cmp
lahf
adc
ret
loope
fwait
mov
clc
es
jno
and
jmp
inc
or
pop
pusha
sub
aas
dec
pop
in
dec
jle
add
loope
insl
dec
dec
cwtl
bnd
mov
or
cmc
sbb
cmp
rcl
ret
lahf
gs
push
and
push
cmp
fwait
fs
add
mov
lods
add
xchg
aam
int
sub
sbb
push
xor
mov
rol
sbb
mov
adc
imul
sub
pop
mov
xor
fwait
loop
sbb
in
sbb
push
ds
mov
add
mov
ud0
cmp
jns
aam
in
xchg
cmc
xchg
cmc
call
scas
ror
or
pusha
fwait
xlat
jmp
cmp
inc
cmp
es
mov
sbb
jg
cmp
dec
shll
lret
jl
out
add
popf
in
iret
sbb
mov
shrl
pop
clc
hlt
addr16
push
lret
pop
lock
and
or
cmp
pop
lods
inc
lods
jmp
add
dec
xchg
sub
test
stc
cmp
pop
xlat
dec
jb
mov
jp
pop
jl
lret
mov
outsl
inc
and
out
pusha
loop
push
sbb
mov
or
mov
mov
fsubrp
test
cmc
dec
pusha
cmc
hlt
jp
loope
ret
std
mov
push
cltd
xchg
pop
push
mov
and
sub
adc
je
jno
outsl
dec
mov
into
mov
push
push
mov
push
add
adc
stos
lea
push
cmp
test
xlat
rolb
adc
pop
sub
scas
sub
cmp
dec
add
pop
dec
pop
mov
repnz
jge
xchg
adcb
adc
xchg
or
in
enter
xchg
jg
mov
scas
inc
jno
ret
sbb
push
mov
je
sub
scas
mov
jg
adc
es
sbb
rdpmc
dec
inc
push
notl
push
gs
and
loopne
lods
jg
vmovsd
cmp
dec
xchg
cwtl
cwtl
fwait
mov
pop
out
jne
lcall
mov
pop
icebp
push
sbb
mov
call
jge
fidivrl
or
lds
cwtl
jg
aad
stc
mov
fwait
mov
loop
das
pop
loopne
mov
jp
mov
cmp
aad
push
mov
sbb
xchg
sbb
sub
dec
adc
cltd
stos
pop
fsubr
xchg
dec
mov
adc
and
mov
adc
xor
push
mov
jmp
mov
push
jns
and
out
jle
mov
cwtl
xor
inc
jae
icebp
fisttpll
js
push
cltd
inc
sub
jno
push
jae
xchg
insl
aam
push
mov
or
mov
jns
cwtl
push
xor
mov
push
sbb
rorb
push
add
xor
fnstenv
xor
dec
jbe
push
sub
xchg
sub
or
mov
subl
xor
xchg
push
cmpsl
movsl
push
or
pop
sub
adc
cwtl
pushf
mov
icebp
xlat
dec
mov
pop
in
jg
push
insl
jmp
lea
and
pop
loopne
and
fs
jo
xchg
inc
sti
adc
xchg
lahf
stc
je
or
pop
lret
cmp
cmp
paddq
nop
push
aad
adc
sub
fwait
xor
f2xm1
dec
xchg
dec
dec
pop
negl
mov
adc
xchg
mov
jnp
push
das
fsubl
into
cltd
add
popf
mov
popa
fcmovu
out
mov
shll
ret
inc
cld
mov
int
or
xchg
inc
lods
and
or
sub
repz
pushf
and
clc
xchg
xor
push
sbb
es
xchg
adc
jecxz
ja
cmp
cmp
aaa
insl
cmpsb
les
or
cmp
fstl
add
xor
out
jle
mov
push
std
or
pop
and
sub
cli
xchg
cld
das
pop
fstpt
mov
lsl
stc
repnz
loope
lcall
cwtl
or
int
jo
xchg
loop
push
leave
pop
lds
mov
je
adc
aas
popf
sbbl
push
test
lcall
outsl
setg
dec
pop
xchg
mov
add
aam
push
adc
mov
push
push
fcomps
call
xchg
cmpsl
push
add
iret
les
repz
or
pop
cmp
pop
iret
adc
sbb
and
xchg
xor
fs
call
mov
scas
out
dec
inc
pop
out
mov
rcrl
push
push
inc
test
in
std
or
cmp
xlat
lcall
fs
test
lcall
jbe
das
inc
sub
add
cmc
cs
stos
in
lock
xchg
sub
adc
jle
dec
pop
into
lea
push
inc
cs
mov
cltd
add
mov
jle
cmp
jne
cmp
and
je
jmp
out
and
and
bound
sbb
mov
xchg
xlat
rcl
dec
cmp
ret
inc
leave
mov
push
mov
jg
xchg
sarl
jo
je
mov
push
cmpsl
fistl
stos
adc
mov
mov
adc
and
movsl
ljmp
ss
jl
popa
cmp
push
pushf
dec
cwtl
jae
lods
and
mov
repnz
dec
sahf
idivl
xchg
das
inc
cmpsl
cld
repnz
and
fadd
jo
dec
shlb
aad
loope
rol
and
pop
notb
js
pop
movsb
gs
ja
inc
mov
dec
cmpsb
cmp
pop
stc
movl
cmp
aaa
jecxz
xor
mov
lock
fsts
mov
fdivrp
jle
adc
add
insl
movsl
push
ja
and
aas
inc
mov
test
sbb
and
stos
rcll
out
clc
jl
insl
popa
sbb
lret
imul
add
mov
push
rcll
int3
sar
sub
roll
sti
rorl
bound
cmc
ss
int3
out
inc
jecxz
jmp
jno
pop
dec
add
jp
inc
lahf
divl
cmpsl
mov
int3
jne
dec
cmpsl
in
xchg
sub
dec
push
jne
dec
mov
sub
sub
test
test
cmpsb
sbb
fdiv
adc
cmpl
test
mov
loopnew
lods
mov
rcrb
xchg
push
outsl
sbb
push
push
out
push
cmc
aaa
fs
fadds
lret
adc
jp
loope
js
jle
call
xchg
ja
iret
xchg
psadbw
dec
and
xchg
nop
imul
pop
pop
daa
cmc
mov
nop
nop
pop
out
sbb
nop
lret
cld
xlat
sub
push
aam
mov
jno
mov
and
lods
or
outsl
jnp
pop
sub
push
cs
bound
jl
xor
add
in
pop
idiv
inc
dec
sbb
mov
push
movsl
js
mov
cmp
fbstp
dec
popa
mov
imul
add
lods
mov
xlat
cmp
sbb
ffree
mov
andl
jecxz
btr
pusha
ret
ss
cmp
mov
mov
repz
mov
jg
mov
mov
cmp
mov
dec
into
push
push
jo
mov
mov
adc
je
loopne
pop
lods
cmpsb
sbbl
sub
xchg
pop
mov
mov
push
mov
push
dec
ret
bsr
rorb
orl
out
lcall
sub
out
aad
gs
mov
and
loopne
mov
into
enter
dec
inc
lahf
rep
rcr
sub
mov
add
sbb
add
arpl
xor
inc
inc
adc
mov
outsb
mov
jo
in
cmp
mov
ljmp
dec
xor
hlt
jne
xor
mov
mov
mov
jge
jnp
lods
pop
ficompl
iret
or
je
out
dec
xchg
lahf
xchg
scas
jmp
aaa
pop
and
leave
xchg
outsb
mov
pop
cmc
mov
mov
mov
dec
loope
out
mov
adcl
jo
jbe
push
inc
popf
lret
test
pop
lods
bound
test
mov
dec
xor
or
fwait
dec
aad
pop
fstpt
lret
out
je
xor
stos
mov
sarb
jne
sub
mov
push
mov
sub
outsl
push
lret
roll
dec
lahf
cmpsl
mov
add
pop
cmp
cmpsl
mov
add
jb
inc
lcall
dec
out
dec
and
xchg
jg
xchg
movsl
js
xor
push
jle
xor
insb
aam
loopne
fistl
test
and
stos
cli
xor
xchg
mov
out
pop
and
mov
das
in
test
mov
arpl
std
xor
lock
imul
dec
ljmp
jb
push
pop
push
jb
xchg
and
ljmp
mov
lea
sub
pop
mov
inc
sahf
dec
xchg
pop
mov
rcrb
inc
ret
mov
aas
add
lcall
jae
jle
push
push
or
xchg
cmp
iret
cmp
daa
mov
insb
jle
call
aaa
mov
rcl
lock
sarl
negb
mov
xchg
mov
add
jb
mov
pop
enter
mov
and
es
xor
mov
fcmovnu
call
pushf
dec
jmp
and
pop
cli
out
inc
pop
clc
test
mov
mov
mov
popa
dec
sbb
je
push
int
shlb
add
pushf
xchg
jp
jg
cmp
push
sub
sbbb
cs
divb
clc
in
fsave
xchg
popa
jg
push
mov
pop
ds
pop
call
roll
mov
xchg
fmull
rcll
outsb
in
ret
xchg
ds
shr
insb
cmp
push
pop
pop
pop
fcom
test
dec
mov
out
inc
xlat
xchg
repz
fdivrs
pop
adc
fildll
cmpsb
idiv
dec
outsl
xchg
mov
push
xchg
push
ret
sbb
scas
inc
cmp
bound
mov
push
popf
imul
inc
ficoml
in
loop
popa
leave
lds
pop
xchg
xchg
mov
jmp
xor
inc
jmp
xor
aam
cmc
xchg
or
in
ret
lods
inc
jle
or
fists
pop
inc
adc
fimuls
out
aad
cmc
pop
xor
dec
inc
lret
pop
fbstp
addr16
lcall
sbb
lods
mov
dec
aaa
jnp
ret
sbb
mov
xchg
mov
insb
popf
inc
xor
lea
adc
aas
xchg
shrb
fnstcw
lret
sbb
cli
dec
pop
aaa
test
xchg
scas
dec
scas
repz
pop
cmc
sub
test
movsl
push
or
aas
fsub
loope
cmp
and
jbe
in
mov
dec
pop
adc
cmp
mov
shlb
cmp
orl
repnz
ss
cmp
lock
push
fistl
leave
xchg
xor
or
push
xchg
pushf
lods
into
sub
ror
add
cmp
sub
pop
cltd
inc
fmul
xchg
leave
mov
xorb
cmp
lret
rolb
or
xor
leave
fdiv
shld
pop
outsb
stc
sbb
cmpsl
iret
ss
ret
mov
fildll
insl
ret
mov
cmp
xlat
add
cmpsl
bnd
xchg
cs
es
inc
test
dec
in
sbb
arpl
das
xchg
mulb
nop
push
sbb
jmp
or
insl
mov
dec
cwtl
xchg
add
inc
sub
imul
pusha
sub
xor
lds
fldenv
jnp
xor
dec
incb
pop
pushf
nop
lret
cld
push
mov
sbb
xor
repnz
mov
je
pop
sbb
outsb
push
ss
lods
fisubrs
and
icebp
pop
ja
or
shlb
dec
pop
lods
push
fcomps
cltd
std
leave
sub
pop
jecxz
push
ret
cwtl
leave
pop
das
pop
arpl
mov
adc
ret
sub
jnp
icebp
adc
pushf
dec
push
mov
adc
daa
jbe
and
push
sub
lea
push
dec
pop
adc
mov
data16
nop
pop
enter
aas
mov
scas
add
sub
xchg
jne
pop
inc
aaa
mov
add
in
popa
lds
int3
fsubs
jno
jns
adc
jne
mov
into
stos
cli
shl
cmpsl
add
inc
mov
sub
stos
and
fmuls
xor
dec
jg
jmp
mov
pop
or
xor
ret
fnsave
jmp
mov
dec
mov
xor
cmp
xchg
sub
mov
mov
xchg
adc
inc
lds
mulb
jle
sub
mov
mov
xchg
popa
mov
fistpl
orl
aaa
push
push
and
mov
outsb
dec
lret
dec
ss
lea
dec
rcrl
imul
xchg
repnz
mov
push
out
nop
sub
fbstp
mov
int
mov
add
stos
jne
push
mov
pop
push
dec
or
shrb
jo
sbb
or
sbb
mov
lea
mov
xor
pusha
mov
lods
cmpsb
add
push
or
adc
and
sbb
xor
mov
stos
mov
in
std
mov
dec
mov
xor
sub
sub
xor
popa
jmp
mov
pop
shlb
push
xchg
adc
push
sbb
imull
mov
lods
lock
cmc
or
mov
out
sbb
adc
jl
dec
and
cmpl
pop
push
jmp
movsl
je
in
and
aam
or
pop
sahf
lds
repz
xchg
pop
sahf
push
nop
pop
pop
adc
dec
hlt
jmp
popf
push
mov
out
jb
cmp
idivl
pop
insb
test
loope
dec
adc
cmc
sbb
inc
clc
cmp
enter
arpl
jns
out
js
push
push
mov
add
ljmp
dec
mov
mov
movsb
cmp
mov
fnstsw
mov
add
fstl
cmp
leave
gs
jbe
inc
mov
loopne
sub
rcr
push
pop
cmp
dec
dec
xchg
inc
aam
mov
ficoml
xchg
sbb
jge
lds
iret
pop
jns
xchg
xchg
rcll
mov
sub
mov
div
mov
vmovntdq
jle
ds
pop
sbb
sbb
jnp
or
xchg
ja
xorb
ljmp
pusha
add
inc
adc
xor
popa
push
jno
leave
jge
or
mov
inc
mov
lea
pop
out
sbb
daa
pop
sub
aaa
or
xchg
dec
mov
add
rcrb
sbb
pop
idivl
add
push
stos
sbbb
cmc
in
daa
dec
jb
hlt
inc
clc
and
aam
jno
je
pusha
cmp
fcoml
insl
es
movb
adc
test
icebp
es
ret
in
jecxz
cmp
or
adc
mov
jae
or
and
int
jge
sub
aas
cmp
cmp
ret
mov
inc
stos
repnz
sbb
mov
push
data16
cli
or
stc
push
test
mov
imul
and
in
or
push
mov
dec
paddd
outsb
sarb
aad
push
es
push
js
mov
sub
scas
mov
out
lods
stos
in
or
stos
mov
push
out
add
mov
adc
aaa
mov
mov
and
xchg
jmp
mov
pop
les
repnz
jecxz
inc
data16
jmp
sbb
or
mov
cmp
addr16
popf
mov
xchg
aaa
pop
cmc
test
xor
mov
jno
push
add
and
mov
mov
jl
fwait
lods
pushl
push
xor
mov
push
xor
fcoml
mov
mov
test
xchg
pop
or
mov
shrl
outsb
fpatan
push
xchg
sarl
xchg
je
sbb
cmp
cmp
xor
adc
shll
sti
movsb
mov
arpl
bnd
or
in
push
sub
xchg
cld
in
mov
out
cmp
mov
iret
mov
xor
les
addb
les
mov
enter
push
mov
bound
inc
mov
test
and
ficoml
jae
enter
cmp
pop
dec
in
sub
or
cmp
fldl
fs
test
movsl
mov
pushf
mov
ljmp
mov
cltd
or
imul
in
mov
pop
mov
xor
mov
call
iret
mov
push
cmp
adc
ss
lods
lret
movsb
cmc
addr16
fwait
pop
push
sub
xor
jne
insl
lock
test
pop
out
int
jne
outsb
out
je
lret
stos
leave
push
popf
jo
or
adc
ss
adc
adc
inc
es
aam
mov
or
add
and
mov
mov
sti
orb
inc
scas
xchg
mov
cmpsb
adc
push
cmp
push
mov
adc
push
or
sbb
add
mov
or
jg
lahf
loop
adc
adc
add
jno
int3
sahf
jne
mov
cld
push
jne
and
cmp
mov
movsb
xlat
cmp
push
cld
dec
fdivrs
iret
loopne
fwait
jmp
popf
int3
mov
push
xchg
pop
stos
dec
and
adc
loop
je
popf
outsl
jmp
jo
and
es
dec
mov
mov
cmp
and
cwtl
push
in
xchg
xlat
outsb
das
ds
fstps
shll
ds
pop
aas
dec
sahf
je
cs
or
sbbb
pushf
shll
jecxz
jge
mov
or
sbb
out
sub
int
pop
or
xor
or
dec
int3
pop
cmp
pushf
jmp
adc
lods
dec
lock
loop
arpl
and
push
outsb
cmp
dec
adc
bound
xchg
push
sub
jmp
aaa
loopne
push
std
and
jo
inc
js
std
test
dec
xor
sub
pop
mov
pop
nop
data16
mov
push
dec
loop
jnp
std
push
jbe
icebp
iret
mov
fs
lret
out
or
inc
stos
mov
or
xor
insb
je
cmp
mov
lret
jb
push
jmp
fidivrs
xor
xchg
insl
mov
jmp
cmp
pusha
add
cmpsl
inc
xchg
pop
enter
nop
cmp
pusha
inc
or
jl
shrb
pop
cmc
push
icebp
insb
cmc
jl
insl
out
sti
pop
jno
push
lret
inc
mov
mov
pop
in
les
insl
fstl
add
popf
jbe
sbb
push
clc
dec
loop
ret
xchg
mov
test
add
mov
inc
test
mov
add
pop
adc
je
and
aaa
inc
sbb
inc
mov
cmc
test
jnp
sub
rcrb
test
dec
and
lahf
movsl
xchg
push
outsl
push
ret
iret
cwtl
das
mov
roll
ror
pop
gs
xchg
mov
enter
sbb
ret
arpl
out
ja
outsb
sbb
dec
outsl
std
mov
mov
dec
mov
mov
or
push
jae
xchg
scas
push
sahf
bound
in
and
mov
sub
push
mov
enter
out
jmp
ret
cmp
add
cmp
inc
cltd
in
xchg
or
dec
fneni(8087
fsubl
sahf
flds
pop
icebp
scas
xor
sbb
push
pop
xor
or
rclb
rorb
call
cmp
mov
or
mov
pop
mov
mov
pop
popf
pop
push
and
jmp
out
jmp
fmuls
mov
movsl
pop
lods
xchg
subb
fstl
gs
int
inc
jns
push
mov
idivl
cmpsb
push
and
sub
inc
popf
push
jo
mov
mov
lds
sbb
inc
push
sarb
fldenv
cmpsl
cmp
sbb
dec
stc
shrl
mov
dec
icebp
into
add
outsb
mov
pop
imul
adc
sub
fcoml
cmpsb
mov
xor
mov
stc
arpl
aad
int
pusha
push
and
inc
sub
in
lret
jne
daa
cmp
cmp
gs
mov
test
rclb
enter
dec
cwtl
and
jmp
ficompl
fidivl
aaa
arpl
lahf
into
cmp
stc
jmp
loopne
xchg
pop
dec
mov
mov
andb
pop
addr16
jl
add
fnstenv
test
cmc
mov
data16
sarl
test
jg
mov
xlat
sahf
xor
dec
pop
push
and
and
into
rorl
sbb
jmp
sub
sub
sahf
pop
and
mov
xor
xchg
adc
pop
bound
pop
adc
aaa
stos
and
xchg
dec
cwtl
inc
aad
jmp
in
mov
inc
fisubrs
pmulhw
mov
inc
sbb
hlt
int3
inc
std
and
push
xor
fisubs
inc
dec
in
sub
mov
sbb
in
xchg
pop
cld
shrl
add
cltd
xor
inc
dec
mov
enter
mov
fbstp
or
xor
aad
fcomip
jecxz
nop
sub
dec
adc
aam
or
mov
ljmp
xchg
jb
testl
mov
sbbl
cltd
xor
sub
and
inc
push
sub
popa
in
test
mov
xchg
jle
push
push
insl
or
rcrb
icebp
mov
mov
sbb
xchg
pop
lret
jo
add
dec
cmp
fcomps
xchg
jo
roll
mov
dec
lods
or
pop
or
cmp
mov
push
loopne
mov
stos
pop
mov
mov
aaa
enter
xchg
adc
lret
jne
lods
hlt
and
xor
mov
bound
scas
xchg
cld
xor
jo
les
fwait
lret
lret
xchg
add
js
mov
dec
pusha
dec
mov
andb
add
xchg
mov
xor
repnz
ljmp
pop
ds
and
and
aaa
rorb
jne
push
inc
fiaddl
jbe
or
and
mov
add
nop
or
pop
cmp
pop
dec
jecxz
popa
fsubl
push
arpl
test
cs
dec
xchg
inc
incl
dec
mov
pop
fiaddl
lret
lcall
and
push
cmp
insl
test
cwtl
ret
sahf
sbbb
inc
push
cmp
mov
enter
out
jle
mov
jmp
jns
cmc
ss
imul
adc
mov
push
dec
mov
loope
and
jns
rol
clc
jb
mov
mov
out
fists
addr16
xor
mov
sbb
cmp
mov
xorb
mov
or
or
es
xchg
stos
je
push
into
pop
test
fildll
jo
mov
sub
xchg
adc
lahf
sub
inc
cli
repnz
adc
pminsw
aaa
mov
push
orps
imul
clc
std
and
cmpsl
std
sbb
lods
cmp
js
xchg
jo
loope
mov
in
repnz
cmp
dec
xchg
dec
adc
and
mov
ss
inc
std
je
adc
popa
inc
mov
cmpsb
adc
and
aam
ret
testl
fisubs
dec
sbb
mov
gs
add
fs
outsl
dec
add
fidivrs
aas
sbb
popa
mov
or
jle
jle
dec
addr16
jle
push
sbb
or
repz
xchg
inc
js
push
jne
daa
fbstp
cli
xchg
dec
shr
adc
fsubr
push
push
mov
xor
aas
arpl
and
fstpt
dec
cmpsl
testl
pop
xchg
xchg
add
fadd
mov
addb
dec
clc
fisubl
xchg
dec
mov
push
fsts
pushl
push
cmp
pop
jo
push
add
jl
mov
jg
jmp
jo
adc
sbb
adc
sub
or
or
ljmp
in
sub
pop
dec
ljmp
scas
test
mov
or
mov
mov
or
mov
adc
jl
mov
adc
out
xchg
sub
mov
push
mov
lea
mov
pusha
aas
cltd
fidivl
xchg
cs
pop
sub
mov
sahf
push
xchg
cmp
jge
inc
push
lea
add
testb
cmp
lret
sti
lcall
push
mov
out
popa
mov
mov
cmp
outsl
push
mov
push
loopne
cs
loope
push
push
movl
lods
inc
dec
ds
mov
in
xchg
outsl
daa
jp
ret
pop
jl
jns
push
push
mov
mov
cld
lcall
and
xor
dec
sarl
jl
mov
mov
pop
xor
jmp
rclb
add
pusha
sbb
mov
mov
or
sub
xor
mov
jns
frstor
sub
aam
in
loop
insb
cmp
fldl
shrl
clc
xor
pop
push
test
pop
out
xchg
sbb
test
jne
xchg
adc
jbe
rdmsr
inc
xchg
jl
leave
adc
jae
and
insl
xchg
xchg
shl
hlt
mov
mov
repnz
xlat
and
rcr
paddusb
inc
lods
mov
adc
push
inc
loopne
jne
cmp
jp
or
icebp
sub
xchg
test
ja
movl
sub
rcl
aas
and
cmp
fwait
or
pop
out
scas
cltd
hlt
xchg
inc
jmp
mov
fs
cmp
mov
xor
xchg
mov
stos
push
mov
aas
stc
xor
sub
adc
add
xor
int
aad
cmc
addr16
fs
pop
mov
push
leave
jp
and
ret
lahf
or
pop
sub
adc
mov
rcr
in
add
sub
xor
cli
lret
xchg
mov
sub
add
subl
xchg
jnp
scas
in
pusha
sbb
jo
adcb
and
cwtl
jnp
xor
js
mov
movsl
push
ljmp
or
or
repnz
in
mov
cld
movsb
test
ja
cmp
les
sbb
jne
pop
push
add
or
lock
movsl
je
push
call
push
mov
mov
jbe
mov
xchg
loop
jecxz
dec
nop
movsb
inc
sahf
rcll
mov
sub
mov
jmp
push
sbb
lcall
or
jp
out
sti
das
inc
or
cltd
or
rcrb
sbb
stos
add
inc
and
pop
dec
sub
mov
lods
dec
cli
aam
adc
xor
sub
dec
stos
and
stos
cmpsl
xchg
adc
outsl
inc
repnz
mov
repz
and
pop
push
jo
jl
pop
out
push
xchg
fbld
loop
in
jp
ret
les
popf
stc
xchg
xchg
insb
jecxz
mov
addl
cmp
loope
mov
jmp
lret
cmc
mov
out
cld
lcall
sarl
add
xchg
xchg
dec
sbb
xor
outsl
mov
mov
es
and
pop
popf
xor
xchg
fstpt
cmpsl
cwtl
cmpsl
or
xchg
out
push
mov
popf
xor
xchg
fnsave
enter
in
dec
xchg
sbb
sti
xchg
push
cmpb
or
add
inc
imul
loop
les
in
jae
les
loop
sti
xchg
dec
sbb
sbb
mov
movsb
loop
repz
or
shrl
mov
icebp
mov
push
popf
xchg
or
xchg
xorl
fldt
adc
movsl
scas
inc
popf
loop
mov
jo,pt
xchg
sbb
sbbl
leave
cmp
push
ret
outsl
jbe
into
addr16
ljmp
mov
add
jne
cmpsb
jl
adc
adc
stos
sti
dec
insl
add
push
xlat
pusha
and
adc
ljmp
stos
jl
jns
ficoml
int
shrl
mov
dec
pop
push
ret
pusha
stc
shrl
or
loop
mov
cs
push
mov
loopne
ja
push
adc
dec
add
sub
cwtl
loop
jge
int3
xorl
xor
mov
push
jecxz
jg
rolb
mov
jb
fsubs
adc
pusha
testl
lock
jbe
and
mov
sbb
cli
push
sar
sbb
in
or
xchg
andl
sti
dec
push
stos
inc
ljmp
pop
cmp
pop
fs
jae
ret
nop
push
icebp
pop
mov
jl
xorb
in
ds
repnz
ljmp
jno
push
add
addr16
aam
mov
imulb
shl
inc
and
mov
cmc
sbb
ficomps
xor
jb
adc
xor
mov
clc
int3
or
fldcw
lret
sti
pusha
movsb
jo
lret
or
aam
lods
mov
pop
jecxz
call
cmpsl
mov
testb
jae
and
scas
adc
sbb
aad
adc
decb
inc
sbb
fadds
insb
xchg
mov
cwtl
addr16
and
lret
popa
sbb
jbe
inc
fcoms
cmpsb
sbb
aas
imul
xchg
cmp
dec
sbb
xor
sbb
add
adcb
push
lret
out
adc
mov
or
xorl
stc
es
jmp
sub
in
mov
aad
and
popf
test
dec
adc
test
jge
popf
cld
in
popf
xor
ss
out
iret
mov
dec
fildll
or
aas
xchg
sub
push
sub
pushf
aam
arpl
push
test
mov
or
out
js
fadd
fdiv
sub
xor
mov
pop
stc
dec
fiaddl
sub
jmp
or
lret
dec
and
aas
int3
insb
adc
lds
cmp
push
sub
aam
loope
xchg
loope
ret
dec
pop
sub
mov
sub
cli
icebp
dec
jle
cli
push
data16
xchg
lods
mov
jbe
push
insl
cmp
xor
mov
xor
rcr
adc
repnz
sbb
in
push
pusha
bound
cpuid
aam
pop
dec
add
sub
inc
out
xchg
adc
mov
sub
shrl
pop
mov
mov
sbb
adc
fnstenv
bound
rorl
mov
pop
mov
mov
jge
lods
scas
sub
dec
pop
adc
fs
inc
inc
adc
pop
call
test
test
out
ja
dec
test
or
fsts
bound
sbb
cmp
aaa
loope
dec
and
lret
or
fstps
xor
jl
movsb
sarl
inc
icebp
pop
cmpsb
mov
xlat
jl
int3
mov
test
lods
lods
ficomps
jle
inc
mov
int
repnz
repz
loop
add
mov
dec
mov
dec
pop
iret
pop
mov
insb
sub
mov
testb
loope
and
sub
mov
xor
rcr
outsb
jne
movsb
sti
stos
stos
sbb
jge
sbb
or
daa
mov
push
aas
sub
inc
mov
jmp
push
inc
add
in
and
mov
arpl
sbb
dec
or
scas
push
jnp,pn
adc
pop
push
fcompl
sbb
bound
aam
sahf
arpl
cmp
mov
dec
pop
iret
mov
push
push
inc
ljmp
xor
xchg
push
lret
sbb
inc
sub
push
or
adc
les
fldenv
rorb
cmp
lea
aam
pop
in
roll
scas
inc
mov
mov
jmp
cmp
add
ljmp
mov
stos
xor
ret
inc
mov
jecxz
icebp
in
mov
sbb
jb
je
lods
inc
adc
popa
and
aas
push
add
jae
mov
stos
inc
jb
xchg
or
cmp
xchg
xor
dec
ret
mov
int
add
pop
ss
movsb
jecxz
push
mov
inc
jnp
jae
cmpsl
add
mov
mov
dec
mov
adc
add
sbb
dec
pusha
mov
or
inc
rol
lret
push
lock
ficomps
adc
cli
push
cmpsl
in
jle
pop
xchg
ret
jne
pop
jns
das
cmp
inc
cmp
and
sub
clc
pusha
addr16
in
fsubp
add
mov
jno
cli
push
aad
cs
inc
sarb
sub
mov
daa
dec
xchg
cld
or
push
stos
cmp
push
sub
repnz
push
and
or
inc
xchg
out
mov
stos
cwtl
add
or
and
push
xchg
test
movsb
adc
ds
add
inc
xchg
enter
mov
lret
mov
in
test
jmp
mov
push
sub
jp
enter
inc
mov
mov
fs
cli
pushf
mov
adc
aad
ljmp
stos
xchg
mov
outsl
and
pop
lods
inc
pop
xchg
mov
mov
cmpsw
imul
popa
in
stos
lcall
jle
sahf
shrl
insb
xor
aam
inc
fucom
dec
push
jno
add
aaa
sahf
jnp
and
add
ja
daa
inc
fldcw
cmpsb
sbb
popa
add
call
or
jg
jle
out
add
pop
loope
xor
mov
cmp
sub
add
imul
aam
mov
dec
out
pop
insl
sub
jbe
xor
mov
fiadds
xor
fdivl
mov
mov
mov
mov
cmc
and
xor
and
mov
repz
rorl
or
mov
jno
lret
mov
xchg
js
into
data16
lock
int
push
inc
cwtl
out
popf
mov
push
add
cmpsb
add
jmp
cli
pop
repz
daa
inc
jns
in
std
rcll
mov
add
pop
fistpl
in
pop
daa
cmp
pop
mov
outsl
lret
mov
rorl
xor
mov
sarb
jno
popf
sub
sbb
pusha
pop
movsb
xchg
xor
mov
mov
inc
fstps
mov
xor
pop
outsl
or
push
pushf
and
cmc
sahf
das
movsl
ss
inc
lret
or
je
mov
mov
jne
movsb
das
test
stos
call
xor
out
sbb
dec
fimull
adc
cli
sub
mov
dec
imul
inc
orb
scas
fsubrp
loopne
mov
mov
add
scas
xor
sbb
jae
ja
add
data16
mov
iret
sub
pop
lods
orb
dec
jecxz
mov
cmc
cmp
cs
cmc
cmp
or
dec
sub
jo
icebp
jno
sarl
push
sbb
leave
sub
dec
dec
cmp
xlat
cmp
loope
movzwl
mov
aaa
mov
xchg
cmpsb
and
push
jo
ds
hlt
pop
mov
jecxz
jl
cmpsb
scas
pushf
dec
cmp
js
add
adc
ss
stos
lea
lea
movsb
cmp
cltd
sbbb
pop
cmc
mov
and
pusha
cli
push
movsl
icebp
in
dec
jno
fdivrs
dec
push
enter
cmpsl
mov
sub
xor
push
stos
jbe
jnp
jne
sbb
adc
mov
ja
add
cvtps2pi
out
testl
jge
push
adc
aad
pop
xor
out
xor
pop
mov
das
xchg
inc
adc
dec
in
notl
push
imul
aas
sbb
lret
orb
loop
add
cmp
movsl
dec
popa
push
out
mov
adcl
sbb
mov
xor
lahf
dec
fnstenv
cmp
cmp
lcall
cmpsb
push
test
add
out
mov
shrl
mov
mov
add
ds
xchg
test
popf
test
aas
jmp
mov
add
aas
dec
test
repz
les
xchg
xor
adc
or
aam
mov
mov
loopne
aad
ds
outsl
pop
repz
xchg
scas
cmpsl
and
jp
dec
xchg
mov
push
xor
mov
xchg
xor
pop
scas
fldln2
rol
sub
clc
mov
cmp
pop
cwtl
xor
push
test
and
xor
movd
loopne
js
adc
or
shlb
adc
in
je
loope
inc
arpl
add
icebp
xchg
dec
dec
add
aas
and
cmp
xchg
inc
pop
bound
push
xlat
mov
in
lret
adc
push
mov
add
jp,pt
dec
into
test
jbe
outsl
inc
mov
out
aas
ja
push
repz
aaa
test
push
mov
sar
fidivl
jecxz
dec
enter
cwtl
aas
ds
inc
stos
shl
pop
movsl
add
jb
fmul
sub
dec
popa
adcl
testl
js
mov
lods
rcrl
aam
jle
pop
push
adc
and
imul
loope
dec
rcrl
stc
outsl
push
fistpl
fisttpll
into
scas
mov
mov
int3
mov
mov
pop
notl
add
movb
ljmp
sbb
push
xchg
mov
sub
mov
sbb
mov
cmp
aam
shl
mov
dec
xchg
dec
adc
mov
call
dec
add
xchg
subl
outsl
repz
and
cli
cmpsb
pop
shl
movsb
stos
loope
fcomps
out
cmpsl
out
das
sti
push
fstpl
orl
lods
mov
aaa
mov
mov
pop
push
cmc
push
inc
jg
jge
mov
and
jmp
sbb
mov
orl
aad
adc
insl
add
add
sbb
ret
or
cltd
cli
addps
xchg
fs
adc
adc
jae
int
jmp
mov
sbb
jae
sub
sbb
sarb
hlt
ljmp
js
mov
or
dec
out
xchg
leave
and
aaa
into
lahf
sub
in
fs
shll
cli
cmpsl
mov
pop
pop
mov
fiaddl
ja
ja
or
mov
cmc
gs
and
mov
inc
fdiv
sahf
lds
xor
enter
inc
pop
pop
outsb
loopne
lods
mov
lret
add
cmp
cmpsb
xlat
outsb
lret
addl
les
mov
push
ret
pop
dec
call
out
pop
loope
daa
xchg
jb
mov
pop
lcall
popa
push
enter
jno
cmpsl
mov
inc
in
mov
rcl
add
inc
lret
cmp
mov
int
movsb
push
jb
sub
mov
into
out
mov
les
and
loope
lahf
jno
sbb
rclb
test
jge
push
mov
les
loope
popa
push
movsl
mov
xchg
test
daa
pushf
jcxz
inc
test
test
push
imul
add
pop
mov
fimull
outsl
inc
push
jle
add
push
pop
cmp
pop
pop
fcmove
add
incl
out
lret
jae
ljmp
js
shll
hlt
fildll
mov
popf
xchg
lcall
mov
cmp
insb
cwtl
imul
movsb
jo
mov
sbb
rorb
data16
pop
repz
xlat
imul
ss
in
dec
mov
mov
jae
sub
sub
add
dec
lcall
push
cmc
cs
dec
and
dec
cs
shlb
jbe
jb
pop
pop
mov
in
imul
shr
inc
fcmove
dec
inc
in
xor
lods
inc
movsb
push
xor
push
test
lahf
mov
adc
lds
call
sub
xor
xchg
dec
mov
loopne
push
popf
pusha
fs
ror
sub
in
movsl
lds
push
inc
mov
stos
std
out
cmp
subb
xchg
imul
pop
push
dec
adc
or
out
and
cmpsb
in
sub
or
loop
mov
inc
push
mov
or
mov
mov
sub
pop
sbb
pop
arpl
or
add
push
xor
loopne
sbb
fnstsw
testl
xchg
ljmp
xchg
xor
inc
bound
dec
mov
cwtl
xchg
sub
mov
mov
imul
cmp
not
and
in
fistl
pop
aaa
push
loopne
pop
mov
jno
sbb
cmp
rcrb
mov
mov
leave
pop
or
lcall
mov
fistl
inc
scas
adc
movsl
push
rol
mov
mov
repnz
ret
arpl
js
sti
mov
jnp
mov
insb
test
dec
pusha
mov
in
es
popf
inc
mov
popa
push
and
xchg
fists
sti
xchg
lods
sub
jecxz
jp
pop
push
adc
jae
mov
loop
dec
and
or
xor
and
mov
mov
mov
imul
pop
pop
or
jno
es
cmp
sub
insb
ret
xlat
cmp
push
mov
test
sbbb
jno
or
aad
shrl
mulb
mov
test
lods
jecxz
pushf
xchg
xchg
into
cmpl
test
inc
fs
mov
shr
shl
jo
jle
call
or
stc
sub
pop
mov
int3
inc
push
clc
ljmp
out
ss
mov
jo
and
lret
cli
mov
mov
jmp
lock
inc
and
mov
inc
push
inc
pop
pop
out
xor
pop
test
push
fidivrl
insl
sbb
mov
adc
out
and
xchg
pop
push
sub
and
bnd
and
mov
shrl
sbb
and
xchg
movsb
fsubrs
push
xchg
cli
insb
lret
jo
adc
dec
int3
xorl
mov
fs
xchg
xchg
gs
scas
cmp
and
std
jmp
cs
decl
dec
idivl
in
fcom
rcrl
mov
sbb
jno
sbb
aam
imul
add
add
xchg
test
fwait
and
js
inc
mov
mov
xor
mov
jge
andb
fisttpl
int
pushf
data16
rep
scas
and
dec
arpl
leave
subl
mov
cmp
add
cmc
push
inc
sahf
adc
or
push
push
mov
addr16
xor
inc
dec
adc
inc
stos
push
xorl
jbe
jg
push
imul
int3
popf
scas
std
adc
dec
fs
test
rorl
mov
jmp
push
test
mov
cltd
inc
fmul
and
xlat
push
aam
mov
mov
mov
cmp
imul
and
jl
mov
or
xor
arpl
icebp
xor
cld
test
or
jp
add
xchg
int3
cwtl
out
mov
jmp
into
iret
add
into
sbb
or
pop
mov
add
add
into
push
xlat
xchg
add
push
adc
mov
xlat
xchg
test
adc
mov
cli
ja
outsl
push
xchg
lcall
pusha
int
xor
andl
ret
mov
xchg
test
arpl
mov
xchg
cmp
or
adcb
push
push
push
test
push
test
scas
sahf
cmpsb
inc
sbb
out
test
mov
or
add
stos
or
out
aam
in
pop
push
fisttpl
and
inc
pop
bound
adc
aas
loope
dec
mov
out
sbb
push
inc
cwtl
ja
xor
mov
inc
imulb
fdivrs
xchg
adc
dec
orl
sahf
cwtl
pop
jae
xorb
mov
data16
xlat
sbb
adc
lods
or
and
lret
int3
inc
fcmovnbe
push
fld
adc
daa
into
xor
xchg
mov
insl
inc
push
stos
jo
mov
jbe
xchg
push
cmp
mov
test
in
pop
mov
cltd
stos
sti
or
xor
outsb
movsb
mov
fcomi
fcmovnb
and
push
cmp
or
mov
rcl
mov
xlat
aam
dec
mov
cmc
orl
outsb
inc
in
or
lret
je
outsl
in
xchg
and
insl
xchg
jmp
pop
or
in
leave
scas
pop
testb
push
jmp
jg
lret
jae
inc
dec
sbb
sti
out
and
lret
imul
cld
outsl
cli
insb
xlat
popa
xchg
mov
into
mov
fbld
clc
sub
xchg
mov
dec
or
into
jl
jmp
movsl
sbb
dec
ret
jle
xchg
mov
pop
dec
cmp
frstor
fbstp
xchg
mov
adc
jge
lock
incb
xlat
insb
lahf
loope
add
sub
in
pop
aad
insb
ret
fs
adc
insb
jg
rcrl
out
insb
sbb
cmpsb
scas
scas
ficompl
jno
movsl
dec
mov
mov
xchg
sbb
xor
add
scas
xchg
aas
mov
xchg
out
adc
mov
xchg
xor
xor
and
movups
mov
cmpsl
scas
es
pop
and
pop
jno
jb
mov
leave
dec
daa
inc
jnp
arpl
xchg
adcb
mov
push
mov
pop
inc
sti
test
lret
jb
inc
jge
in
es
stos
mov
enter
add
or
xor
adc
movsb
daa
push
xor
or
xor
sub
mov
es
test
jns
jnp
mov
testl
sub
add
pushf
jae
cld
ret
mov
insb
movsb
repnz
pop
scas
lcall
insl
adc
pop
jg
fs
xchg
insb
jp
mov
sub
fsubr
sub
add
push
lock
sbb
push
jo
cld
outsl
arpl
adc
xchg
clc
in
repz
arpl
daa
mov
dec
insb
lock
mov
test
push
mov
icebp
add
ss
mov
adc
pop
xchg
sub
mov
pop
mov
pop
clc
mov
sub
sbb
push
insl
sti
push
mov
jg
xchg
sti
test
leave
cmp
mov
lods
jg
or
add
fsubr
xchg
inc
or
mov
out
adc
cwtl
ljmp
daa
popf
jge
adc
les
popa
int
push
xchg
lret
mov
rclb
pusha
fninit
cld
mov
call
xlat
push
or
std
aam
push
mov
pop
out
sbb
sbb
add
pusha
dec
xchg
sbb
or
cmp
jle
lds
sbb
xchg
jns
sub
lret
shlb
push
or
push
int
dec
or
jp
xchg
inc
cmpsb
sub
fsubrs
or
mov
movsl
sbb
pop
notb
lods
int3
and
cmc
outsb
adc
xchg
sbb
scas
lock
mov
dec
and
and
xor
ja
pusha
ret
leave
xorb
les
cmpsb
ljmp
sbb
popa
test
push
test
fcmovb
jno
outsb
inc
sbb
repz
inc
dec
mov
add
out
mov
or
testb
in
mov
cli
shl
mov
loope
push
mov
js
push
test
andl
mov
out
xorb
lahf
pop
lret
xor
cmc
je
leave
popa
lahf
cmc
push
xor
loope
xor
shlb
dec
pushf
lret
ret
or
push
mov
mov
sti
int
jno
xchg
cmp
add
mov
jb
lahf
arpl
sub
add
jle
cld
dec
inc
test
daa
or
dec
mov
push
lods
dec
aam
sub
sbb
jle
push
outsl
testb
cmp
repnz
decl
mov
cmpsb
sub
sbb
mov
stos
mov
pusha
sbbb
pop
mov
mul
push
loope
jmp
testl
and
dec
mov
jg
sbb
and
scas
outsb
mov
jmp
inc
mov
ljmp
xor
push
mov
jae
push
das
xor
lods
add
lahf
or
sti
push
cmpsl
in
push
repz
testl
shl
bnd
pusha
mov
inc
negb
lods
cmp
pop
insl
dec
cwtl
mov
lods
sbb
sub
xor
scas
les
mov
cmp
fsts
out
xor
jbe
pop
enter
hlt
mov
push
sub
sar
sahf
scas
push
shll
or
imul
jae
xchg
mov
scas
mov
xor
outsl
sbbb
nop
movsb
in
inc
add
pop
ss
and
aaa
mov
fldl
mov
lods
sub
int
ret
inc
sub
pop
shrb
int
loopne
shlb
add
addl
push
xor
mov
inc
adc
push
out
ss
fmull
aas
inc
inc
push
dec
aaa
pop
in
xorb
pop
mov
inc
stc
test
in
icebp
jmp
or
es
fsubrs
fwait
jp
pop
testb
and
bt
call
dec
dec
scas
pop
shlb
mov
pop
in
dec
insb
mov
into
sub
imul
test
stc
out
sub
or
xchg
push
pop
test
sarl
push
fbstp
out
add
ror
pop
add
lods
xor
mov
or
cmp
rcrb
add
test
dec
sti
lods
dec
adc
mov
fisttpll
push
jmp
jl
and
std
popf
sbb
ljmp
pop
cmp
ficoml
ljmp
ljmp
xchg
lahf
popa
dec
push
stos
mov
cmp
sbb
inc
mov
sahf
jecxz
movd
mov
test
mov
inc
fwait
cli
sbb
imul
mov
pop
adc
mov
lds
and
adc
testb
push
aaa
dec
mov
jne
fiaddl
mov
int
xchg
scas
loopne
add
xchg
stos
inc
add
leave
loopne
dec
test
xlat
jbe
les
push
push
fiadds
popf
push
enter
lods
ljmp
sti
xchg
leave
test
xchg
xor
inc
sbb
dec
dec
xchg
or
imul
aad
mov
mov
fs
cmp
add
scas
and
xchg
dec
aas
clc
mov
fcmovnu
jbe
mov
or
push
sub
clc
pop
push
aaa
sbbl
fs
nop
aad
bound
pop
lea
jae
cmp
dec
xchg
or
xchg
and
sub
imull
inc
and
inc
lret
mov
lcall
cmp
add
inc
pop
xor
xor
xchg
xchg
notl
mov
fsubr
arpl
sbb
and
adc
xchg
cmp
fwait
test
or
mov
lea
jne
scas
frndint
mov
fldl
lret
fldenv
jbe
or
inc
shrl
cmp
int
out
push
and
or
int3
xchg
sub
jecxz,pt
aam
cmp
push
pop
sub
leave
test
daa
mov
mov
mov
mov
mov
outsl
or
mov
lea
pop
das
das
adc
or
cmp
inc
pop
add
pop
test
push
push
rcl
outsb
xor
clc
in
shlb
imul
sbb
dec
sahf
aam
arpl
adc
aaa
lds
inc
lcall
and
xor
fistps
sub
in
fwait
notb
daa
mov
jmp
daa
jo
mov
sbb
imul
fdivl
pop
xchg
push
push
arpl
test
xor
and
sub
sbb
in
cmpsb
jmp
xchg
adc
mov
repz
xor
mov
mov
fwait
pop
jl
pop
mov
xchg
pop
pop
fstl
movq
inc
lea
arpl
adc
inc
scas
out
lea
cs
mov
les
lret
jb
inc
push
call
mov
shrl
neg
les
sahf
ret
es
fidivrs
fldenv
in
inc
ficomps
mov
addr16
cmpb
inc
repz
shl
or
aad
mov
in
add
add
pop
xor
lea
ja
fidivs
jne
sub
xor
cmp
pop
mov
addb
dec
das
mov
xchg
adc
mov
sbb
iret
insb
lds
and
out
fcompl
mov
test
cmp
mov
in
fcmove
pop
mov
and
fisubrl
out
xor
mov
rolb
xchg
idivb
stc
push
add
add
jae
push
nop
push
dec
mov
jne
xlat
mov
or
out
in
and
mov
inc
cld
out
test
pop
sub
push
xchg
push
lds
daa
pop
add
test
scas
ret
clc
mov
paddq
outsb
pop
sbb
fnsave
mov
repz
inc
push
adc
fstpl
in
es
cmp
fdivr
cwtl
cs
mov
outsb
mov
xchg
insb
adc
pop
xchg
mov
flds
addb
xchg
pop
push
push
push
sub
daa
jecxz
frstor
lods
inc
push
std
xchg
jl
jno
push
jg
fistps
mov
jmp
out
dec
std
pop
sbb
fadds
mov
pop
fldcw
sbb
cltd
popf
jg
mov
push
mov
cwtl
jbe
mov
iret
pop
xchg
sbb
inc
aam
and
pop
mov
jle
pop
mov
orl
scas
das
ja
loopne
pushf
jb
jb
lret
push
popf
stos
mov
pushf
pop
inc
popa
cltd
push
push
cltd
lock
xor
cwtl
push
pop
mov
rcrb
cmp
mov
fimull
test
sarb
lret
es
pop
inc
or
stos
fcoml
push
sbb
mov
imul
sub
movsb
mov
lds
and
inc
notl
xor
filds
rcrl
test
adc
cs
fistl
push
and
mov
sahf
shrb
push
sub
ss
pop
outsl
xor
adc
adc
clc
dec
mov
aas
mov
sahf
insb
add
int
add
fwait
pushf
push
icebp
cmpsl
bound
pop
cld
pop
sub
ja
popf
test
mov
cmp
testb
sub
rcrb
outsb
jl
inc
pop
cmc
dec
cltd
outsl
push
dec
push
sti
repnz
loop
cltd
adc
dec
fisttpll
sub
pop
pushf
push
xchg
cmpsl
lods
fstpl
mov
movsb
jl
ss
icebp
aad
sti
dec
add
mov
iret
and
xchg
cmpsl
or
cmp
ja
aad
insl
mov
incb
lret
push
inc
push
push
addl
leave
mov
inc
xchg
ljmp
jge
add
pusha
push
mov
stc
and
cmp
int
stc
adc
add
insl
mov
pop
jae
ds
test
push
push
mov
pop
repz
ja
rclb
daa
int3
push
jbe
out
out
add
and
iret
cmp
mov
jns
add
push
sbb
lods
hlt
cmp
movsl
mov
insl
sub
jp
mov
mov
jecxz
pop
xchg
ss
xor
mov
cmp
je
cmp
mov
cmp
fidivl
out
cmpsb
aad
or
adc
rclb
mov
sbb
stos
push
dec
dec
mulb
arpl
mov
out
shl
int3
out
sub
cs
xor
push
mov
icebp
mov
ficoml
cmpsb
je
movsl
cwtl
dec
adcb
fcomps
push
in
out
out
out
jae
mov
mov
add
xlat
pop
xlat
push
inc
inc
xchg
xor
mov
or
or
push
adc
push
mov
jae
and
sbb
jl
jecxz
repnz
xchg
sbb
mov
in
imul
push
stc
pop
dec
cmpsb
cmp
repnz
das
insb
stc
popf
das
add
out
or
andb
jb
pop
stos
mov
sbb
mov
mov
dec
jnp
rolb
inc
push
popf
and
icebp
pop
rcr
outsl
add
imul
inc
adcb
jmp
xchg
lcall
pop
mov
mov
push
pop
and
clc
lcall
mov
enter
push
lahf
xchg
adc
mov
pushf
ret
jl
mov
ljmp
mov
push
clc
cmp
sbb
push
xchg
sub
inc
adc
dec
lea
aas
mov
push
pop
fcmovu
mov
std
adc
cmp
popf
jbe
sbb
es
xchg
hlt
test
inc
mov
dec
xor
lret
pop
bound
insb
loope
cwtl
or
jl
jnp
mov
mov
popa
loop
pop
shrb
xorb
push
jg
lea
or
ss
inc
jl
loop
in
adc
pop
imul
es
cld
adc
inc
fsubrs
mul
push
mov
add
push
loope
and
or
pop
xchg
jne
addl
mov
and
iret
shll
and
leave
pop
jmp
shr
andl
cmp
ljmp
jbe
mov
stos
mov
frstor
and
int
add
shlb
pop
sub
test
sbb
sub
aad
mov
mov
inc
daa
leave
push
pop
scas
cmp
sbb
movsb
cmp
adc
inc
mov
cmpsb
dec
cmpsb
jnp
sti
cmp
mov
sbb
call
or
orl
jecxz
cltd
or
lock
daa
je
aam
cmp
inc
xor
insl
adc
imul
mulb
sbb
and
scas
cmp
adc
sahf
xor
mov
mov
frstor
rcr
test
push
dec
data16
jno
ss
or
pop
jnp
mov
jl
inc
nop
jge
mov
out
loopne
shll
mov
jge
xor
andb
push
push
jmp
mov
jb
mov
push
insl
cmpsl
rorl
xor
jne
jne
pop
call
sbb
fdiv
cmp
mov
mov
pop
pop
repz
xor
and
xchg
cwtl
jmp
lret
cli
mov
mov
jg
add
mov
shlb
pop
or
rol
clc
jecxz
sbb
sbb
xor
push
push
out
test
jne
and
cld
mov
sbb
cli
xchg
dec
xlat
mov
shrl
sbb
pop
pop
dec
fidivrs
loop
or
stos
in
aaa
adc
push
aam
mov
mov
or
ljmp
cltd
std
jecxz
stos
cmp
cmp
xchg
stc
cs
mov
loope
cmp
inc
fisttpl
mov
and
stc
add
inc
pusha
testl
popf
dec
dec
xchg
adc
or
xchg
jns
enter
or
cmp
inc
cmpsb
xchg
add
cmc
rcl
xor
xchg
push
dec
inc
cmp
jae
pop
inc
adc
mov
mov
stos
sbb
lds
ret
notb
insb
sub
int3
xor
pop
jno
adc
cmp
rclb
mov
outsb
xor
loope
fucomi
sbb
mov
add
add
insl
sub
cmpsb
cmp
pop
mov
mov
push
and
jecxz
adc
gs
inc
xor
jb
out
test
daa
mov
std
roll
pop
movsl
or
bound
sti
cmp
lahf
imul
es
or
test
cs
inc
dec
cltd
gs
test
xchg
push
stc
sub
pop
fucomp
imul
push
mov
xorb
adc
ss
in
pop
pop
scas
in
pusha
add
imul
ret
lahf
pop
push
jl
gs
or
xchg
sarb
xchg
sub
in
divl
add
cmpsb
sbb
mov
rolb
scas
xchg
mov
xchg
das
cmp
cwtl
cs
pop
inc
sti
pusha
test
mov
fbld
or
lret
addl
lret
rclb
bsr
je
or
aaa
daa
jae
mov
jl
push
pop
jbe
pop
das
andb
out
sti
mov
out
out
lea
xchg
mov
lret
sbb
daa
cli
sbb
push
sub
pop
gs
outsl
cmp
out
rolb
js
push
call
mov
push
out
pop
in
xor
adc
or
add
jb
push
mov
repnz
fisttpl
outsl
push
outsb
shl
ret
ja
in
mov
inc
fnsave
xor
and
jmp
add
fs
pushf
push
sub
mov
adc
roll
xchg
adc
std
add
pop
jae
pop
xchg
mov
dec
jle
scas
push
mov
lods
das
dec
xor
fiadds
mov
scas
icebp
sbb
jmp
add
mov
shr
aam
mov
cmp
ret
mov
mov
leave
and
imul
mov
jl
imul
jo
test
insl
xchg
pop
push
pop
movsb
pop
push
add
popf
xchg
ss
shl
pop
xor
jge
cmp
lods
cmp
add
cmpsb
test
or
cmp
lret
test
jnp
loopne
mov
ja
lds
ret
add
movsl
inc
sbb
sub
sbb
inc
jmp
push
or
into
fdivs
cmp
pop
insb
push
lcall
test
mov
out
cmp
dec
add
sbb
adc
lea
push
mov
popf
jle
rcrb
adc
mov
fbstp
rorl
mov
add
mov
sub
jmp
daa
push
cmp
stos
mov
sub
mov
inc
jecxz
and
jmp
jnp
incb
icebp
mov
clc
or
lds
adc
sbb
dec
fbstp
out
and
and
insl
cmp
test
push
pop
insb
rolb
sub
dec
icebp
clc
es
arpl
insb
iret
cmpb
jo
out
call
pop
out
xchg
lret
les
inc
stos
sbb
dec
pop
jecxz
sahf
scas
loope
xchg
mov
out
ja
es
insb
mov
mov
fcmovnb
imul
lds
jmp
mov
sbb
std
mov
in
sbb
sbb
pop
dec
daa
sti
mov
into
stos
xchg
aaa
movsl
enter
sbb
imul
loopne
xchg
ror
sub
add
es
shl
jne
pusha
push
adc
and
sbb
lods
cs
pop
in
add
jge
pop
aas
xor
ret
pusha
insl
fidivrl
lock
add
sbbb
inc
not
scas
jg
ljmp
push
or
outsl
push
pop
inc
cwtl
mov
enter
lret
push
jle
stc
fs
inc
fiadds
cli
push
xor
lret
cltd
pop
sbbb
sub
add
xor
mov
arpl
push
lret
cmp
insl
pop
mov
cmp
mov
scas
fimull
jo
in
mov
lods
imull
or
jle
jb
insb
movsb
sbb
mov
aaa
xchg
and
mov
cmp
xchg
decl
loop
and
mov
push
outsb
test
out
fsts
mov
mov
cmp
and
mov
mov
cs
inc
jp
aaa
mov
shll
pop
outsb
mov
xor
mov
xchg
stos
cmp
aam
repnz
or
fidivrs
jnp
jecxz
pop
pushf
mov
or
ret
arpl
les
out
mov
loopne
jns
mov
mov
add
out
and
lock
and
cmp
les
adc
repz
cmp
xchg
cwtl
ja
fisubrs
scas
loope
pop
cmp
push
ds
inc
std
sbb
pop
adc
loope
repz
sahf
shll
adc
mov
jns
push
add
mov
jnp
clc
test
mov
push
jbe
negl
push
and
test
call
push
push
xor
push
outsl
add
shr
lock
fucomi
jmp
pop
scas
cltd
fdivs
dec
jp
scas
out
scas
jno
mov
fcoml
push
mov
push
adc
xchg
or
and
dec
xchg
iret
sbb
sbb
dec
mov
stos
mov
mov
addr16
xor
addb
lret
fdiv
out
inc
sbb
push
inc
push
adc
mov
cld
outsb
ret
movsb
stc
and
push
mov
into
jo
mov
mov
shl
add
sbb
and
and
enter
fwait
dec
xchg
sbb
stos
or
pop
add
sub
les
cs
fwait
pop
xchg
xor
dec
and
or
pop
movsl
jb
scas
mov
int3
mov
fisttpl
cltd
push
shrb
stc
push
jno
jmp
dec
push
pop
jae
aaa
or
icebp
sbbl
pop
sub
mov
stos
mov
xchg
xchg
jge
insb
inc
xor
lea
movsb
mov
stc
lock
pop
mov
and
iret
xchg
js
mov
insl
push
and
mov
jne
and
adc
pop
xor
xor
nop
inc
je
mov
dec
and
push
dec
sahf
push
jnp
add
sub
pop
ret
fists
ljmp
pop
call
or
ljmp
loopne
bound
std
ja
fdiv
call
xor
and
or
push
mov
dec
les
mov
in
fistl
mov
xor
cmp
movsl
cmp
sub
pop
cltd
or
push
repz
fstl
lret
fidivs
jmp
and
orb
jb
mov
xchg
scas
adc
lcall
dec
mov
lea
enter
or
cmp
jl
adc
mov
pop
xor
clc
sahf
jb
dec
gs
mov
mov
fnstsw
xchg
sbb
add
xor
out
testb
test
jo
cli
xchg
jo
mov
xor
or
mov
inc
push
mov
adc
add
cmpsl
mov
mov
lcall
dec
out
inc
mov
dec
gs
xor
inc
idivl
xchg
ret
push
dec
addl
xchg
mov
add
fdivl
imul
xorl
pop
push
mov
out
test
add
inc
faddl
cmp
pop
mov
sbb
push
mov
je
lods
xorl
movsb
sub
addr16
cmp
js
push
or
mov
mov
push
jge
push
in
aaa
clc
in
pop
jnp
mov
mov
jne
cmpsl
mov
mov
stos
pop
dec
lods
stos
inc
cmp
jb
xor
push
ficoml
cs
lret
push
nop
cmpb
stos
mov
mov
fwait
test
scas
dec
icebp
dec
xchg
sbb
inc
insb
js
sbb
mov
and
sub
xor
cli
sbb
xchg
cmp
or
mov
inc
loop
mov
in
fisubl
cmp
mov
or
inc
sbb
push
test
jae
into
lods
cld
adc
rcll
imul
jo
xchg
xlat
inc
sub
or
fs
mov
aas
and
mov
sahf
out
roll
pop
pushf
lods
push
mov
outsl
repz
dec
dec
lahf
cmc
adc
cmp
push
xchg
loope
dec
add
adc
cmpsb
fldt
adc
aam
bound
out
movsl
test
push
jno
arpl
test
ljmp
sbb
pop
iret
jbe
xchg
sbb
pop
mov
mov
mov
aad
adc
iret
pop
inc
jge
mov
addl
cltd
cltd
and
loopne
int
lods
andb
sub
cmc
mov
cs
mov
repnz
push
pop
icebp
out
sub
fldl
sub
daa
pop
or
enter
jge
xorb
add
and
adc
xor
aas
popf
pop
decb
nop
mov
iret
sbb
sub
arpl
dec
clc
jae
jp
outsb
loop
out
orl
jp
xlat
sub
enter
dec
ss
sub
push
xchg
sub
xor
xor
mov
sbb
xor
fadd
pop
adc
inc
mov
jbe
aaa
sbb
fdivs
dec
dec
inc
fisttpl
bound
fists
ret
pop
decb
into
jae
popf
faddl
xor
mov
sub
or
inc
daa
or
movsl
mov
fisubrs
push
and
subl
out
push
jmp
nop
inc
jo
adc
pusha
insl
insb
or
sub
push
lock
mov
pop
and
gs
imul
ret
jecxz
lret
and
lcall
cli
push
sub
cwtl
and
pop
push
adc
shlb
cmp
push
xchg
adc
loope
xlat
adcl
test
outsb
cmpl
add
pop
jbe
xor
sub
call
inc
adc
pop
popl
lds
dec
pop
inc
out
movsb
sbb
mov
or
js
fisubl
inc
push
fidivrs
inc
pop
push
pushf
gs
das
loop
jo
or
inc
sbb
fadd
and
xchg
jg
dec
cmpsl
orb
testb
adc
and
mov
pop
ficomps
xchg
or
sti
mov
xor
xchg
cmpb
mov
mov
push
aaa
add
mov
sub
jmp
sbbl
jo
mov
imull
pop
fldt
pushf
add
lcall
sbb
pop
fimull
iret
clc
shll
addr16
cltd
dec
lret
test
jno
dec
pop
scas
lret
xchg
jg
loop
aad
add
stos
lret
bound
jmp
ljmp
inc
jnp
jb
adc
inc
xchg
mov
pop
test
out
push
dec
lea
sbb
pop
rep
es
repz
add
aaa
xlat
outsl
call
jae
es
or
lods
pop
ss
outsl
rcrb
xchg
lods
mov
je
xchg
les
fnsave
sub
xlat
mov
add
lret
addr16
mov
idivb
daa
xchg
das
or
lea
and
mov
test
mov
mov
xchg
add
icebp
iret
outsl
repz
add
add
add
inc
lods
fmul
and
jmp
sub
leave
xor
mov
pop
cmp
and
xor
cld
inc
push
cld
push
mov
sarl
stc
fsubr
push
jbe
or
stc
and
imul
jae
repz
call
stos
mov
flds
test
fwait
sti
ljmp
sub
fsts
xchg
lock
and
xchg
and
push
enter
aaa
and
pop
jo
add
jmp
mov
enter
adc
fiadds
push
stc
lcall
fs
lods
movsl
ss
test
xchg
inc
cwtl
fildll
aad
insl
lret
cmp
and
inc
lea
push
shrl
int3
jg
jnp
add
notb
ds
mov
pop
cli
out
rol
pop
add
xor
adc
jg
push
rclb
icebp
xchg
or
jp
psadbw
push
or
mov
fadds
adc
mov
mov
out
jno
mov
stc
nop
cmp
leave
rorl
pop
dec
inc
jecxz
cld
mov
sub
stos
inc
hlt
jle
sub
cwtl
jbe
mov
add
mov
cmpsb
xor
mulb
hlt
adc
ret
dec
mov
jb
gs
scas
mov
popl
jecxz
mov
mov
rcrb
adcb
fwait
mov
repnz
cltd
inc
inc
jmp
in
xchg
xchg
das
push
repz
push
add
out
addr16
into
out
bound
sarb
jp
lret
mov
mov
dec
repz
mulb
daa
jmp
or
test
inc
fadds
aam
fucom
pop
mov
inc
les
daa
ja
das
mov
sahf
mov
stc
mov
cmp
mov
fists
pop
mov
cltd
gs
push
mov
movsl
cld
icebp
mov
or
mov
dec
push
jo
push
aad
pop
jecxz
inc
out
test
rorb
insl
sti
out
test
sbb
roll
push
lret
lods
sub
cmp
mov
dec
add
fldl
pop
xor
mov
lea
aaa
or
inc
sub
fisubrl
jbe
cld
mov
data16
negl
push
mov
xor
jp
push
inc
push
xor
jmp
and
jae
mov
cs
in
lods
out
into
sbb
mov
dec
add
jno
lahf
push
js
mov
cmp
loop
rcr
outsl
add
cmpsl
push
out
sbb
in
mov
inc
pop
push
jp
jle
and
out
inc
add
js
jae
and
mov
andb
push
sub
push
add
add
mov
sbb
cmp
xchg
adc
and
ljmp
scas
lods
push
and
filds
pushl
cmp
mov
mov
pop
mov
test
cs
je
and
sub
xchg
add
cmp
mov
mov
cmp
aad
xor
push
hlt
das
cmp
fbld
push
dec
stos
sub
fldt
push
insl
mov
or
in
xor
xorl
push
lahf
push
add
imul
xor
ret
cmp
or
lcall
jnp
inc
outsb
outsl
pushf
fwait
sub
stc
and
lds
sbb
movsb
pushf
fisubs
xor
ljmp
fsubl
mov
xlat
xchg
xorb
xor
stos
gs
adc
mov
ficoms
or
rorb
pusha
pusha
xchg
jns
movb
aad
clc
shll
add
stc
test
out
popf
hlt
shll
dec
aaa
dec
ja
outsb
add
out
nop
adc
push
mov
push
clc
sahf
push
jmp
jno
cwtl
mov
mov
xor
add
ret
mov
mov
shlb
icebp
jbe
movsb
sbb
mov
xchg
pushf
out
les
sub
pop
iret
in
clc
adc
add
lret
sbbl
in
arpl
push
cwtl
xor
mov
lret
loope
cmc
clc
xchg
mov
arpl
pop
fcmovbe
jo
jae
cmp
lcall
sbb
xor
mov
inc
pushf
dec
outsl
adc
sub
pusha
loop
arpl
mov
xchg
cwtl
orl
xchg
test
outsb
add
iret
or
dec
mov
cmp
fists
test
gs
mov
bound
mov
mov
out
mov
or
xlat
sub
and
lods
push
idiv
xchg
xor
mov
add
mov
pop
mov
aam
jg
mov
gs
mov
xchg
loop
pop
rolb
sbb
cmp
and
rcll
dec
sbb
call
xlat
or
dec
sub
lahf
sbb
sbb
lock
inc
sbb
arpl
dec
dec
sbb
ljmp
adc
mov
out
sub
jae
lea
mov
mov
push
movsl
lods
outsl
scas
mov
and
mov
mov
and
push
sbb
jb
and
cmpsl
mov
xor
xchg
jbe
aad
or
mov
xchg
mov
pop
sbb
mov
mov
mov
sub
xor
out
sbb
test
or
adc
stos
sbb
mov
jae
stc
popf
fidivrl
jl
inc
pop
fisttps
cmp
aaa
int
icebp
push
and
int3
daa
sbb
xchg
mov
scas
sbb
or
lock
dec
loopne
xor
xchg
cmpsb
icebp
arpl
mov
aas
icebp
mov
xchg
xchg
push
fwait
das
cmpl
xchg
or
es
stos
and
js
add
into
out
add
idivb
and
dec
ljmp
into
inc
fsts
inc
rolb
mov
mov
dec
add
call
in
add
jecxz
mov
js
popf
mov
xchg
je
mov
in
mov
cli
ret
lods
repnz
inc
cltd
mov
mov
sti
sbb
cmc
dec
call
leave
push
pop
push
les
mov
inc
out
mov
insb
ret
ss
mov
or
cmp
fsubl
jl
cmc
pop
imul
and
xchg
xchg
mov
push
or
mov
loopne
xchg
inc
stos
xchg
rolb
xchg
xchg
repz
sbb
aas
fdivl
xchg
insl
dec
cwtl
mov
cmp
rclw
sub
shll
test
jbe
sbb
adc
cmp
push
mov
mov
rcll
es
jmp
mov
mov
push
cmpsb
inc
add
ret
notl
ljmp
pop
push
inc
or
icebp
test
insl
jbe
shrb
enter
and
rorl
sub
mov
push
in
daa
mov
repnz
push
xor
js
and
pop
popl
add
xor
scas
je
jg
and
dec
mov
daa
lcall
push
adc
fucomi
stc
dec
jb
out
lock
mov
or
jae
xor
stos
js
mov
inc
into
xorl
outsl
xor
inc
jne
xchg
lahf
push
push
dec
fcoml
xchg
pop
cmp
push
sbb
pop
lahf
cmp
inc
test
test
xchg
sub
pop
addb
sbb
xchg
cs
pusha
mov
lret
cld
pop
or
dec
jecxz
outsl
imull
and
add
mov
add
aad
sub
xor
lcall
loopne
jno
pop
sbb
adc
mov
pop
push
and
rorl
xor
gs
push
cs
stos
mov
pop
mov
rep
int
sub
push
in
mov
enter
ret
and
scas
addl
dec
in
jae
xor
loope
pop
push
out
stc
mov
xor
or
les
iret
frstor
movsb
adc
lea
cmpsb
lock
testl
adc
imul
fimuls
mov
adc
adc
fwait
xor
push
loope
out
repz
pushf
xlat
push
sti
dec
pop
ficompl
mov
sub
and
push
icebp
xchg
std
mov
cli
push
inc
ss
sub
inc
cld
dec
outsl
icebp
cltd
sbb
jg
cmp
mov
shll
pop
sub
add
jg
jno
pop
jl
std
sub
inc
sti
clc
xor
sub
fsubr
mov
mov
in
repz
sub
dec
or
bound
mov
jns
cld
mov
xchg
imul
addr16
jnp
ljmp
push
in
mov
add
pop
out
inc
dec
mov
cwtl
aas
xor
mov
sub
xchg
xlat
dec
out
ljmp
push
cmpsb
xor
cli
arpl
into
push
mov
xorl
and
aas
push
inc
jno
test
pusha
mov
or
mov
dec
in
std
in
aam
aaa
mov
cmpsl
jmp
ja
push
or
jbe
mov
outsl
pushf
push
adc
loop
jg
lahf
mov
xor
loopne
mov
hlt
in
jbe
add
jmp
loopne
jno
dec
frstor
add
mov
and
push
add
cmpl
pushf
pop
pop
popf
mov
dec
dec
jnp
and
mov
inc
xlat
femms
ja
lret
or
mov
inc
leave
cmp
xor
nop
frstor
dec
filds
lea
dec
jg
adc
xchg
jmp
out
push
lods
ja
adc
adc
inc
and
rolb
mov
mov
ja
or
push
add
mov
and
add
imul
addr16
add
inc
test
int3
push
cld
add
retw
pop
adc
dec
pop
int
mov
xor
mov
ds
pop
incb
in
shll
add
pop
cmp
shr
mov
lds
push
push
lock
dec
dec
jae
push
cmp
enter
data16
mov
mov
sbb
stos
inc
inc
leave
jge
pushf
leave
pusha
push
mov
fldl
sub
sti
xchg
sbb
xor
repnz
cli
jecxz
pop
outsl
mov
xchg
jne
movsb
outsl
mov
data16
rcll
icebp
xchg
cmp
jns
xor
scas
outsl
push
adc
mov
test
iret
add
data16
in
jo
jns
adc
or
mov
cmc
test
into
xchg
add
cmp
jg
test
cmp
cwtl
xor
mov
mov
xchg
fsubr
fmulp
add
ss
and
test
lret
and
lea
fsts
inc
daa
and
and
push
stos
mov
mov
mov
inc
cmp
fsubrl
pminsw
stos
fldcw
lcall
pusha
js
outsb
mov
push
cltd
or
pop
bound
adc
mov
mov
popa
lock
test
jge
jns
and
inc
mov
fcmovu
sbb
out
push
jo
add
pop
xchg
rolb
xchg
lds
ja
jp
andl
enter
lret
xorl
bound
mov
ljmp
mov
ret
iret
pop
mov
pop
shl
mov
or
and
stos
ret
outsl
ja
stc
sub
cmp
xor
cmpsl
stos
sti
jnp
lock
pop
outsl
or
das
cltd
push
popf
scas
mov
jecxz
pop
movsl
hlt
inc
and
dec
mov
adc
add
mov
pop
ror
in
jae
push
test
les
aam
imul
lea
lods
jecxz
test
clc
jae
das
stos
inc
popa
mov
push
daa
data16
mov
jl
int3
arpl
push
outsl
movb
sbb
scas
adc
jmp
jl
ss
cmp
push
outsb
jno
dec
rcrb
mov
sub
cmp
xchg
add
fst
ljmp
repnz
fcoml
xor
ljmp
test
in
rcl
andb
je
and
and
or
outsl
or
pop
mov
sub
test
xchg
push
pop
fwait
pop
lock
loopne
mov
sub
and
gs
mov
dec
test
shrl
cmp
insb
sub
xchg
sub
in
mov
add
loope
int3
arpl
cmpsb
outsb
inc
inc
ret
jp
and
mov
xor
push
inc
push
mov
push
dec
and
xorb
mov
cmc
popa
aam
mov
mov
and
rorl
iret
lock
sbb
lods
fstpl
popf
mov
js
faddl
xor
pop
insb
shlb
stos
shll
mov
inc
jbe
ja
fs
fs
push
push
cmpsb
inc
jmp
jo
popa
sub
mov
cwtl
nop
push
lret
es
cmp
xor
cmp
sub
jo
out
sbb
mov
inc
cwtl
inc
cmp
ret
loop
xor
inc
push
inc
loop
pop
cmp
inc
mov
mov
ds
jmp
pop
test
pop
movsl
jge
pop
fwait
xchg
loope
sbb
and
jp
push
pop
and
popa
jns
xor
popf
push
add
mov
add
loope
insb
out
mov
hlt
aas
xchg
out
xchg
mov
popf
xor
ss
push
in
mov
mov
jle
fldt
jb
test
xchg
ss
or
mov
mov
ljmp
jb
pop
loop
or
dec
loope
push
inc
xor
push
sbb
add
pop
iret
dec
or
notl
push
mov
push
sub
test
sbb
iret
imul
in
int
mov
shrl
fadds
pop
xchg
or
pop
ret
repz
sub
push
jl
cmp
pop
fwait
pop
lods
xchg
or
xchg
or
popf
leave
cmp
ja
mov
mov
lahf
sbb
add
mov
mov
in
in
jmp
jmp
in
pusha
pusha
and
ficoml
or
cmp
daa
outsl
or
bound
test
shlb
lods
xlat
loope
dec
dec
scas
out
iret
xchg
add
mov
push
jne
push
sbb
scas
sub
in
or
push
mov
fisubl
call
pop
xor
jp
imul
repnz
and
xchg
push
adc
pop
and
add
pop
jecxz
mov
inc
sub
rcr
loopne
jo
andb
push
push
addl
mov
mov
jle
insb
sub
sbb
test
push
add
add
xor
stos
es
sahf
sub
mov
and
xor
mov
cld
enter
jb
push
sub
adc
sub
mov
pop
or
in
lret
jne
sub
inc
movsb
sarb
or
ss
mov
push
andl
add
cmp
lea
int3
ja
or
sbb
xchg
sbb
adc
inc
lret
jbe
shr
fidivs
stos
inc
data16
pop
adc
cld
aad
test
cmp
or
add
out
mov
pop
push
sub
aad
and
jmp
inc
xchg
pop
in
cmp
cmp
sbb
call
sbb
lock
insb
xchg
add
sub
in
fxtract
adc
cltd
xor
fnstcw
dec
push
lret
imul
fwait
cmp
inc
test
std
shrb
ret
sub
lcall
add
push
mov
add
cmc
xor
and
cmpsb
les
pop
test
sub
pusha
ret
imul
and
xlat
mov
clc
xor
fildl
fiaddl
loop
cltd
pushf
xor
jmp
add
xor
jb
mov
jg
xchg
popf
lods
fidivrl
dec
jb
sbb
xor
mov
pop
mov
pop
push
add
push
push
scas
inc
push
addl
and
push
jno
inc
and
fcmove
xchg
incb
ds
xorb
or
xchg
ret
out
inc
cmp
fxch
and
call
cmpsl
jl
push
mov
jno
fcoms
xchg
pop
mov
daa
ret
sbb
cmp
test
xchg
xchg
insb
mov
sti
push
adc
icebp
xlat
sub
in
and
add
pop
adc
adc
fcoml
je
mov
arpl
mov
pop
xor
ja
fwait
jo
mov
insl
loope
clc
push
outsb
hlt
dec
movsl
popf
fdivs
mov
aam
sahf
xchg
xlat
clc
sbb
push
sbb
shrl
jle
mov
inc
push
scas
xchg
cmpsl
cmp
mov
mov
jno
xor
push
cmp
das
dec
cs
mov
daa
sahf
mov
in
out
mov
ret
movl
dec
lahf
ret
cmpsl
ja
es
outsb
call
adcb
mov
imul
cmp
incl
sbb
pop
in
pop
sub
enter
push
push
sub
sub
push
outsb
mov
pushf
jbe
fisubrl
lds
cld
leave
ret
and
cmp
je
outsl
mov
movsl
fdiv
insl
cmc
fsub
push
xor
roll
inc
dec
sub
xlat
fidivs
mov
pop
sub
popa
sub
add
add
jp
sahf
xor
jge
or
cmpsl
arpl
roll
std
jns
adc
shrl
lret
push
mov
inc
mov
push
sub
lods
jne
inc
pushf
int3
mov
and
push
ficoms
xor
mov
ds
cmp
lds
push
sti
mov
pop
mov
jle
push
adc
test
add
int
enter
xor
lods
inc
int3
inc
sahf
sbb
es
pusha
add
push
mov
pop
fidivs
mov
aad
into
cmpsb
mov
mov
ljmp
stos
cld
jne
or
dec
mov
mov
sub
cmc
mov
pop
mov
jg
aaa
xorl
aad
cs
sbb
sbb
mov
daa
mov
lret
shlb
adc
cmpsl
adc
jne
add
add
push
add
mov
push
hlt
mov
movsl
sbb
lds
negb
mov
std
fmuls
ror
jne
add
cld
push
fnstcw
jle
xor
int
xchg
cmp
loop
xchg
data16
mov
cwtl
mov
cmp
int
xchg
insb
xchg
lahf
adc
push
test
outsl
ljmp
dec
mov
pushf
jmp
add
mov
inc
push
inc
fadds
cmp
imul
fstpt
and
or
pusha
cwtl
xchg
sub
mov
xchg
add
sbb
xchg
outsl
iret
setb
pop
mov
scas
iret
psrld
push
sbb
jno
cmp
in
aas
add
out
xor
sbb
ficoms
cmp
sbb
cmpb
mov
mov
and
rcl
mov
stos
inc
out
cwtl
mul
mov
ret
loopne
and
and
rcl
lods
outsl
jae
mov
push
or
mov
pop
xor
mov
rcll
push
testl
sbbb
imul
and
popa
mov
cmp
or
out
push
mov
sbb
imul
arpl
xchg
jle
dec
pop
inc
lahf
sbb
addb
rcl
mov
add
out
js
or
and
sbbb
push
cmp
sub
xchg
ljmp
ljmp
movb
xor
cmp
scas
arpl
jb
les
jo
or
jnp
shl
imul
inc
cld
popa
xchg
xor
movl
cmp
cs
jecxz
add
pop
adc
and
cmc
push
fstpt
and
mov
subl
cmp
pop
inc
sbbl
out
ficomps
sub
pop
hlt
push
mov
adc
jnp
scas
cmp
mul
jno
xchg
mov
push
cmpsb
movb
or
out
mov
mov
ret
fdivrl
add
je
pop
in
mov
daa
mov
hlt
in
mov
xor
mov
dec
sub
mov
mov
pushf
or
cmpsl
ja
inc
fs
shlb
push
cmp
sbb
xchg
xchg
sub
sbb
mov
push
sbbl
pop
jge
mov
rcrb
sub
dec
or
xorl
inc
dec
push
mov
ss
pop
rcll
outsl
mov
add
jbe
addl
pop
sti
mov
pop
mov
stc
or
and
jo
imulb
push
mov
lock
fldcw
popf
dec
in
adc
aam
dec
insb
jnp
adcb
sub
xor
lods
inc
inc
test
sti
ljmp
jecxz
and
dec
mov
and
mov
sti
push
cmp
push
xor
into
gs
push
mov
hlt
push
xor
lret
shl
pop
add
mov
leave
sub
les
push
mov
sti
sub
movsl
idivl
mov
pop
test
inc
imul
and
test
cmc
leave
mov
rclb
cmp
mov
test
and
dec
xlat
sbb
sbb
call
or
pop
js
mov
in
enter
stc
dec
insb
test
mov
xor
aas
repnz
int3
pop
add
jp
in
xor
pusha
cmp
mov
dec
push
inc
lret
cmp
pop
mov
push
test
sub
dec
aam
mov
sarl
shrl
into
iret
lods
mov
int3
das
addr16
sbb
mov
test
ficoms
cmp
inc
pause
push
or
push
jge
shl
rcrl
cli
jl
std
test
ficompl
cmpsb
das
mov
mov
fiaddl
jmp
dec
push
jb
rcl
hlt
das
cmpb
popf
push
aas
cmp
and
inc
mov
andl
or
xor
mov
cmpsb
sbb
mov
nop
dec
sbb
and
sub
lock
into
lods
adc
sub
ja
push
jo
andl
mov
sbb
psrlw
push
adc
and
cmpsl
mov
mov
sbbl
lcall
push
inc
fs
fildll
and
loopne
push
popf
push
xchg
sub
dec
test
iret
jl
push
adc
and
sub
fldt
xor
mov
cmp
cwtl
fwait
in
inc
in
dec
loope
inc
stos
cmp
mov
inc
sti
dec
addb
ljmp
insb
outsb
test
repz
imul
pop
add
cmpsb
ds
xchg
stos
or
cs
ss
in
cmpl
addr16
or
pushf
lahf
fdivrs
push
inc
or
jl,pn
leave
pusha
idivl
lods
stos
sbb
jg
push
mov
add
push
popf
adc
and
xor
and
mov
bswap
lea
cmp
adcb
mov
adc
cmc
divl
lods
add
dec
mov
pop
imul
aad
or
mov
stc
and
cwtl
das
or
push
pop
pop
das
int3
pop
lret
mov
and
xor
adc
or
jnp
popa
outsl
out
out
cmpl
push
or
cmp
gs
mov
imul
sarb
cli
movsb
xchg
xchg
sub
inc
mov
scas
in
sub
movsb
fisubrl
sub
add
pop
push
pushf
orb
jae
daa
pop
lock
int
in
in
cmp
ret
mov
sub
arpl
sbb
je
jnp
xor
push
popa
jns
ja
repnz
outsl
ljmp
insb
jecxz
or
scas
sti
pop
inc
mov
int
int3
out
xchg
mov
int3
adc
scas
pop
daa
jl
js
push
fsubrl
adc
jmp
out
xlat
mov
into
lods
int
push
or
push
popa
clc
test
jnp
cld
loope
inc
adc
mov
ret
mov
mov
in
xchg
mov
es
inc
rorl
xchg
xchg
ja
les
seta
out
adc
pop
push
xor
mov
je
and
movsl
mov
loop
lret
or
jmp
js
sahf
sbb
jns
cltd
std
in
lcall
out
cmpsb
cmp
mov
das
cmp
jo
std
cmp
xchg
inc
push
mov
cmp
and
xchg
repz
mov
movsl
daa
lcall
inc
gs
add
sarb
add
es
xor
clc
jecxz
rorl
repz
jmp
fmuls
mov
dec
xchg
jno
ret
adc
cmpsb
decl
mov
fdivrl
test
mov
sbb
fwait
push
sti
push
push
dec
data16
sub
pop
push
std
pop
inc
les
push
adc
xlat
repz
and
lret
mov
loop
call
jge
cs
sahf
jnp
cmp
hlt
sbb
lret
mov
cmp
pop
dec
pop
aam
xchg
pop
hlt
mov
scas
lock
or
ds
adcb
ljmp
jns
xor
or
inc
stos
mov
jbe
nop
test
pop
mov
and
xchg
addl
movsl
stc
and
pop
cmpl
mov
pop
dec
fisttps
mov
xchg
cmp
clc
pop
imul
and
dec
pop
mov
xor
inc
out
mov
in
lods
jo
cli
jo
xor
es
mov
pop
inc
sti
adc
movsb
mov
mov
jbe
push
ljmp
jno
cwtl
daa
adc
pop
fs
jno
add
push
subw
or
mov
push
push
call
arpl
dec
pop
pop
test
jg
lcall
inc
jmp
fsubrs
pusha
shll
sbb
divb
pop
adc
aam
stos
inc
mull
flds
mov
cmp
pop
mov
ja
scas
scas
xchg
push
out
cmp
stos
div
mov
jbe
stos
cmpsl
or
mov
mov
iret
fisttpl
adc
push
xor
and
xchg
stos
out
jp
incl
or
cmpsl
enter
jbe
mov
xchg
xchg
lock
adc
or
adc
not
jb
shll
das
call
shlb
arpl
xchg
es
jge
ljmp
mov
inc
push
fsubp
xor
mov
cli
popf
aas
in
int
xchg
push
je
in
nop
adc
popf
jne
xor
adc
call
repnz
mov
fwait
movsl
cmp
sbb
dec
inc
inc
jnp
mov
push
xor
add
stc
adc
mov
popa
dec
xor
add
adc
mov
btr
dec
cltd
popf
insb
jp
sbb
sbb
das
insl
test
dec
icebp
push
fwait
dec
movsl
xor
data16
loope
dec
xchg
je
fsubl
ja
fsubr
jmp
test
mov
bound
shlb
add
aam
adc
minps
test
hlt
out
and
fisubrs
das
mov
icebp
dec
push
mov
cmpsl
ds
pop
dec
add
popa
push
and
aaa
outsl
sub
adc
jge
mov
std
cltd
mov
push
inc
cltd
pop
nop
fidivl
dec
and
jno
stc
cmp
sbb
mov
mov
out
mov
scas
bound
sub
mov
je
push
jmp
hlt
scas
xchg
mov
mov
push
pop
add
mov
pusha
into
cmc
jp
xchg
and
pop
scas
cwtl
das
xor
mov
add
ljmp
test
in
push
inc
xlat
fisttps
insb
sub
rol
fwait
add
mov
jp
sub
and
and
into
sahf
cli
aad
xchg
pop
std
dec
shlb
mov
dec
gs
cmp
sub
negb
ret
pop
popa
mov
addr16
arpl
and
lods
sbbl
adc
adc
out
jb
loop
mov
imul
mov
inc
bound
leave
jecxz
mov
xchg
sub
pop
ret
lcall
sub
inc
mov
push
rcrl
aaa
sub
mov
sbb
scas
push
aaa
mov
push
xor
lret
in
add
pop
jge
dec
and
mov
call
aad
mov
xor
or
push
daa
mov
adc
pop
shl
aaa
fistl
test
sub
mov
xor
pop
mov
rcrl
mov
mov
mov
adc
jbe
push
jno
nop
data16
es
xchg
pop
push
push
mov
xchg
clc
mov
imul
pop
xchg
mov
jns
jle
roll
xor
inc
inc
iret
andb
stc
arpl
jmp
inc
inc
loop
ss
repnz
repnz
sahf
add
or
jl
adc
sbb
sub
aam
push
xchg
or
shll
sbb
mov
or
std
mov
push
jl
aam
sarb
inc
insb
xlat
add
pop
adcl
push
rcrl
test
or
and
sub
leave
and
push
xchg
jnp
sbb
daa
in
add
ja
push
test
fs
sbb
xor
into
cmpsl
jno
call
les
mov
sahf
or
dec
ret
lods
cmp
and
shll
stc
xchg
pop
xor
test
sbb
adc
inc
mov
outsb
out
mov
mov
dec
lea
mulb
push
fsub
push
sbb
xchg
mov
push
pop
xchg
mov
mov
inc
negl
ds
sub
jbe
xchg
add
mov
movsb
cs
mov
arpl
in
in
adcb
xor
orb
cli
mov
fs
xor
pop
stos
add
leave
pop
aam
in
test
pop
popa
and
orl
into
add
test
cmpsb
xor
movsl
inc
stc
xchg
push
push
push
mov
les
xchg
mov
or
lret
pop
add
mov
fldt
xor
xchg
jae
test
mov
outsl
test
scas
mov
shrb
mov
loop
mov
push
and
in
or
add
mov
xchg
mov
lahf
pop
lret
mov
and
or
dec
sub
mov
popa
push
scas
lods
ja
mov
jae
jne
xchg
pop
int3
scas
icebp
lock
mov
and
sbb
outsl
lret
push
je
jae
pop
xchg
or
mov
sti
sbb
insb
sbb
imul
push
out
or
jl
pop
cmpsb
std
stc
jbe
jne
test
imul
out
mov
jmp
scas
push
mov
jp
mov
pop
inc
imul
push
pusha
adc
test
scas
cmc
adc
lods
je
loop
mov
mov
iret
data16
cmp
inc
pop
lock
subb
repz
adc
add
jno
push
js
mov
cmpsl
sbb
scas
nop
pop
arpl
pusha
cmp
mov
and
add
idivl
sub
sub
cmc
jo
sbb
iret
mov
or
lods
bound
aas
loop
cli
dec
cltd
stos
int
dec
xlat
inc
push
xor
loopne
jl
pushf
test
cmp
sahf
sahf
sbb
leave
ret
rorl
mov
sub
lods
je
daa
pop
inc
fwait
push
cmp
xchg
dec
or
push
add
jp
mov
cmpsb
mov
add
pop
icebp
aaa
push
add
aaa
adc
xchg
mov
mov
mov
lods
or
sub
push
idivb
insl
jo
outsl
add
sahf
sbb
lahf
mov
cli
and
xor
or
das
xlat
sub
aaa
push
lods
mov
or
jle
cmp
mov
negb
dec
or
mov
fs
jp
pop
aas
shlb
xchg
loopne
mov
sbb
lret
inc
out
fs
xchg
sub
hlt
fsub
cmp
daa
dec
sub
movsl
adc
pop
xchg
mov
ficoms
and
sbb
or
loope
adc
sti
mov
jge
dec
scas
inc
outsl
inc
stc
les
cmp
sarl
and
push
xchg
xchg
pop
mov
fsubp
jge
jae
lea
cmpsl
cld
add
leave
or
and
pop
mov
xor
xor
and
xchg
jg
loopne
mov
jae
add
jecxz
jmp
ds
mov
test
push
fisttps
jmp
push
jmp
inc
mov
and
push
lock
fsts
or
mov
fbstp
mov
test
or
jge
push
add
dec
pop
lock
mov
push
int3
sub
insl
sti
pop
into
push
push
jae
or
mov
push
mov
fcoms
mov
mov
outsb
adc
sahf
add
in
sbb
xchg
lock
mov
hlt
push
pop
dec
mov
inc
ja
lods
and
pop
add
xchg
ljmp
popf
fmuls
rclb
insb
pusha
pop
add
int3
iret
mov
stos
push
movsb
divb
push
outsb
fnsave
dec
mov
in
xchg
jmp
or
dec
cmp
cmp
jb
sbb
inc
add
lcall
pop
cs
imull
push
enter
ljmp
adc
outsb
sbb
hlt
int
adc
inc
jmp
jns
cmp
push
mov
xor
addr16
ds
aam
xor
shll
repnz
mov
sbb
lods
je
test
jnp
popf
xor
notl
lahf
out
fwait
add
sahf
mov
test
push
xchg
pop
fs
mov
shlb
cmp
jns
pop
sbbb
sbb
and
xor
jmp
jmp
jp
rolb
je
lea
sub
cmc
into
das
add
in
leave
loope
rclb
shlb
es
push
adc
je
jmp
pop
lock
loop
adc
mov
mov
push
arpl
cmpsl
cmp
aad
mov
bound
xchg
or
adc
fst
xor
xchg
and
dec
push
lret
bound
stc
jmp
out
ja
xlat
stos
inc
or
leave
pusha
jns
push
add
fsubs
sti
pop
movsl
cmp
mov
or
rolb
sub
push
push
inc
fstpt
cli
mov
mov
loope
mov
in
or
test
lods
jne
lret
stos
jg
fsubr
pop
jbe
inc
sbb
std
pop
and
xchg
inc
adc
mov
cmp
add
mov
fcompl
jge
cmp
mov
jae
cmp
aas
cmp
fisttpl
adc
xchg
and
fildll
mov
mov
push
int3
mov
aad
test
es
bound
data16
xchg
pop
repz
sbb
scas
dec
push
jnp
mov
cmp
jne
loopne
es
fcomps
jns
xor
pop
xor
call
cmp
push
dec
call
sbb
ret
xor
sbbl
lcall
enter
syscall
pushf
xchg
pop
push
adc
mov
aam
sbb
dec
fldcw
or
bound
add
ljmp
or
ds
inc
inc
loop
in
jae
push
inc
cld
and
mov
lea
insb
js
sbb
into
push
pop
test
push
std
lods
cltd
pop
jns
shll
push
jb
pop
jnp
shlb
mov
sbb
hlt
sub
je
cs
popa
hlt
xchg
mov
mov
xor
push
xor
push
jmp
jmp
cmp
imul
inc
bound
out
test
test
add
push
sti
xor
mov
and
ss
sub
dec
out
ljmp
icebp
clc
outsl
push
rcrl
push
add
gs
int3
scas
lea
pop
jg
add
push
pop
mov
cmc
addr16
xor
mov
and
outsb
lret
fxch
fsubs
and
cmpb
rcll
call
jnp
xchg
mov
jge
in
dec
pop
fwait
lret
push
movsl
xlat
repz
mov
and
push
test
faddl
xor
aam
test
pop
cmc
movsl
decb
aas
add
stc
add
shlb
shll
or
inc
sub
sbbb
pop
fidivs
gs
out
or
inc
in
cmpsb
ds
xchg
xor
pop
cmp
or
andps
xchg
mov
test
jge
mov
jbe
das
mov
cmp
ficoml
pop
out
sarb
cmp
cltd
sub
and
repz
jbe
xor
shlb
inc
sbb
cmp
lret
jecxz
xor
stc
pop
adc
sbb
dec
sub
jmp
fnstcw
push
sbb
dec
push
imul
cmp
int
pop
pop
fiaddl
imul
or
imul
push
sti
mov
js
xchg
sub
push
cmp
push
xchg
notb
arpl
xchg
sub
inc
inc
add
xchg
inc
andl
fiaddl
ljmp
in
xchg
dec
jecxz
ret
mov
ja
jmp
xor
lret
sahf
sub
sbb
adcb
nop
sub
cmpsl
in
fwait
stos
jmp
dec
pop
ljmp
jno
dec
add
pop
repz
adc
roll
popa
hlt
push
js
mov
test
outsb
pop
pop
xor
iret
and
mov
call
cmpsb
test
aaa
iret
dec
in
arpl
mov
pop
xor
popf
lods
add
push
cmpsl
inc
js
aaa
lods
sbb
sbb
mov
test
inc
fwait
xchg
andl
stc
rcll
xchg
test
jg
and
pusha
or
and
mov
pop
xlat
mov
into
pop
jb
scas
inc
xchg
cmp
pop
and
mov
mov
std
or
fsts
inc
or
xlat
lods
sahf
add
xor
inc
mov
mov
js
inc
pop
loop
dec
mov
fildll
adc
and
sbb
leave
xchg
mov
ret
mov
mov
out
popa
sbb
cli
jae
in
shll
rolb
pushl
dec
out
pushf
pusha
jbe
and
pop
fidivs
push
mov
testb
mov
fmuls
lahf
cmpb
loop
mov
mov
mov
sub
add
sub
sbb
nop
mov
cmp
sbb
je
popa
fs
aas
aam
cmp
cmpsb
jge
outsl
shlb
jl
pop
dec
dec
testl
rclb
scas
mov
data16
fwait
adc
inc
sub
cs
cld
hlt
mov
fstpl
push
cli
push
in
mov
or
inc
mov
push
loop
add
add
movsl
cmp
test
pop
sbbl
or
sbb
stc
inc
aaa
pop
jne
add
dec
clc
shll
mov
sahf
adc
stos
js
inc
pop
jg
xchg
nop
cmp
gs
mov
cwtl
adc
jp
push
mov
cli
test
sub
fstpt
call
jp
movsb
mov
mov
push
jle
xchg
sbb
cmp
sub
mov
mov
cmp
ficoms
scas
outsb
out
adc
sub
pop
jge
xchg
sbb
xor
dec
mov
mov
mov
sarl
push
loope
out
andl
xor
clc
popf
pop
test
rcll
lcall
add
jb
lcall
mov
mov
dec
pop
pusha
enter
sbb
rcll
outsl
nop
xor
cmpsl
xor
std
loope
rcrl
xchg
jo
cltd
subb
mov
jg
stos
mov
vpaddsb
pop
mov
dec
xlat
add
mov
rcrl
mov
aaa
cmp
mov
je
fwait
pop
mov
jl
dec
popa
sub
push
out
rcrb
dec
outsb
jne
insb
ds
mov
push
add
jge
movsl
push
xchg
or
test
loope
mov
fisttpl
jns
sub
sub
and
sbb
mov
cmp
sub
fisttps
pop
fcomps
fwait
jbe
push
scas
ljmp
jnp
add
mov
xor
jne
adc
lret
outsl
es
pop
addr16
loope
sub
cmp
inc
mov
jno
lret
aaa
popf
jo
push
jl
repz
mov
pusha
xor
insb
paddb
jl
push
stos
aas
lds
or
adc
mov
in
mov
xchg
scas
or
fimull
mov
int
sarl
bound
bound
cmpl
daa
mov
fstpt
add
orl
push
inc
mov
xchg
pop
out
add
or
inc
shlb
ss
add
cwtl
das
and
mov
jnp
add
or
aad
aas
dec
fucomp
xchg
insb
cwtl
mov
adc
sbbl
call
mov
mov
xchg
addr16
jne
hlt
into
bound
in
leave
jg
mov
insb
jmp
es
inc
cmp
pop
and
stos
mov
mov
js
dec
and
orl
xchg
loope
lret
push
clc
out
out
mov
adc
in
test
and
call
pop
outsb
shlb
adc
js
pushf
push
std
jge
adc
leave
punpcklwd
sub
mov
xor
pop
or
mov
aas
lods
cmp
popf
clc
mov
mov
dec
mov
rclb
push
stos
rorb
repnz
pop
push
lods
loopne
test
das
inc
adc
out
stos
mov
pop
aaa
push
inc
nop
jp
mov
mov
mov
inc
in
xor
test
pusha
lods
loope
sbb
stos
fwait
test
movsb
and
fisubl
jno
pop
sub
mov
xor
out
inc
fisubl
pop
cmp
dec
sbb
int
scas
inc
jno
in
mov
xchg
inc
inc
jnp
call
test
xor
xor
cmp
call
cmpsb
and
push
aam
je
js
ret
ds
sbb
pop
iret
gs
pop
push
or
xchg
mov
mov
je
dec
and
pop
inc
dec
mov
xchg
push
push
cli
or
mov
int3
arpl
inc
add
roll
into
inc
ljmp
scas
add
mov
xor
sub
mov
lods
mov
sbb
pop
xor
add
out
lods
fmuls
ja
jne
mov
roll
cmc
jne
movsl
inc
cmp
stos
mov
fsubr
xor
and
cwtl
or
lock
lcall
cltd
movsb
sub
call
sub
xchg
ljmp
mov
xchg
mov
sub
int3
jg
cmp
mov
mov
xor
negb
adc
jbe
repnz
cwtl
outsl
jge
xchg
cmp
pop
or
test
pop
out
cmp
or
or
push
xchg
or
pop
ljmp
fmull
imul
call
jle
xor
push
aas
mov
mov
iret
or
repnz
xchg
jge
cltd
pop
imul
sbb
in
push
mov
mov
sbbl
shll
sub
sbb
paddw
ror
sub
mov
bound
mov
arpl
popf
pop
mov
in
cmpsb
pop
stos
pop
add
xor
mov
outsl
loope
out
testl
hlt
mov
cmp
sub
je
xor
and
test
mov
add
nop
pop
pop
incl
sbb
outsb
add
lods
rorl
push
dec
pop
push
and
dec
pushf
push
movsb
cmp
ss
bound
push
lock
addl
jge
adc
and
test
fistl
cmp
xor
sub
cwtl
gs
jle
mov
sub
sub
das
mov
xor
in
stos
loope
test
inc
lret
jecxz
scas
jle
outsl
scas
cmp
idivb
jg
in
or
sarb
add
popl
add
cli
xchg
pop
or
xchg
out
push
cltd
cli
ja
jne
leave
in
fs
push
add
aas
jmp
mov
mov
sub
gs
fs
xchg
push
jl
cmpsl
cld
push
jo
std
push
je
mov
fcompl
add
cmp
pop
lcall
vmovdqa
xor
xchg
xchg
adc
mov
cmp
insb
jbe
daa
loop
push
mov
insb
ds
arpl
adc
pop
out
loope
test
pmulhuw
xchg
pop
sbb
push
dec
loopne
sahf
sbb
inc
sbb
pop
cmp
mov
dec
mov
and
fildll
and
inc
xchg
mov
shrl
sbb
pop
cmp
orb
inc
push
push
xchg
in
mov
icebp
adc
ss
cwtl
push
icebp
mov
fldl
push
add
cmp
ret
lds
js
lea
or
xor
lret
lcall
pop
lock
in
cltd
ret
or
iret
call
out
jle
cwtl
mov
int3
add
stos
and
out
test
lret
sub
add
ret
les
and
and
repnz
jae
ds
roll
mov
repnz
enter
sub
jle
out
xchg
xchg
cmp
pop
push
loop
les
dec
mov
mov
push
lcall
xchg
cmp
insb
adc
sbb
pop
cld
leave
cltd
jbe
ss
addr16
inc
std
pop
inc
sbb
enter
add
jmp
icebp
and
ss
test
mov
das
shll
mov
pusha
xchg
cwtl
mov
rcll
stc
push
or
sbb
lahf
push
jecxz
aaa
add
xor
sbb
push
inc
shr
andb
mov
inc
fldenv
dec
pusha
pop
lcall
jl
sub
cmp
pop
jge
stos
int3
cmc
mov
inc
cmp
lock
ficomps
sub
push
jne
add
add
or
les
icebp
out
adc
in
adc
lret
fistl
imul
jp
sbb
sbb
lahf
cmp
mov
fldenv
bound
sahf
mov
fldt
outsl
sar
xchg
dec
xchg
pushf
enter
fnstsw
push
xchg
xlat
scas
sub
test
scas
int3
fsubrp
dec
sub
test
sub
pop
xor
mov
xor
rorb
enter
shl
jecxz
mov
or
cmpsl
pop
repnz
add
clc
cs
fwait
in
ja
rolb
cmpsb
in
in
pop
lock
cld
and
and
xlat
xchg
mov
lock
bswap
adc
push
cmp
and
lea
and
es
dec
sbb
cwtl
and
cltd
data16
in
or
jns
lret
stos
cwtl
xchg
add
lret
fdivl
lret
push
ljmp
loopne
cli
or
add
pop
hlt
cli
call
repz
aad
pop
cmc
js
cmpsl
imull
push
enter
shlb
mov
std
jmp
mov
stc
add
mov
pop
shl
cmp
mov
scas
adc
jb
in
xchg
inc
fmuls
xorb
sbb
sub
xor
xchg
sbb
mov
cmp
les
subb
sbb
sbb
or
fucom
jl
inc
lret
and
fstp
cs
mov
jnp
arpl
or
or
jnp
mov
mov
jle
add
mov
jbe
jns
fstl
mov
repz
stos
popf
dec
paddq
mov
gs
dec
sbb
mov
inc
jle
cld
sub
addr16
std
sahf
push
inc
in
call
popf
enter
icebp
fwait
add
sub
xchg
testl
push
int3
fidivs
add
pop
pcmpeqd
cmpsb
push
xor
xor
cmp
fsincos
mov
sarl
pop
sub
dec
ss
sub
test
and
cwtl
sbb
lret
or
cs
data16
icebp
xchg
push
xchg
cs
mov
mov
pop
roll
mov
or
es
clc
movsb
aam
add
pop
je
jno
rcrb
pop
mov
pop
and
pop
dec
dec
sub
inc
add
cwtl
and
dec
xor
xor
cltd
bound
lea
aas
push
stc
nop
stos
xor
jo
lods
pop
int
jge
mov
popa
aam
sbb
loope
aas
sbb
push
in
shr
jo
pop
push
jge
fwait
or
and
mov
sbb
cmp
mov
leave
mov
mov
pop
lods
jmp
mov
pop
push
nop
inc
or
insb
hlt
sub
lret
push
movsb
cmp
shr
mov
push
stos
push
xor
sub
sbb
loope
les
or
xor
push
mov
cltd
fld
push
call
jg
sahf
lods
out
mov
outsl
xor
dec
jp
ja
mov
mov
outsb
mov
loop
adc
aam
int3
or
sub
stos
fwait
jecxz
xchg
mov
push
es
push
nop
dec
push
cmp
jne
sti
repz
adc
pop
dec
test
int3
add
mov
lahf
ret
jmp
dec
pop
idivb
sbb
stos
icebp
xchg
jecxz
jne
sbb
sub
sbb
pusha
negl
push
test
pop
jb
inc
xor
hlt
jne
adc
jge
fsin
sub
pop
cmp
xor
mov
jbe
jo
jg
or
mov
jne
xor
sbb
loopne
ja
sbb
adc
test
in
sub
int
push
hlt
jle
dec
jns
sub
add
or
popa
js
fidivrs
lahf
xchg
inc
or
cmp
popa
loop
adc
lods
pop
dec
xlat
push
dec
or
hlt
jecxz
in
jno
popl
addr16
pop
bswap
jecxz
mov
mov
stos
xchg
or
xlat
ljmp
out
push
push
xchg
push
dec
popf
or
sbb
cmp
out
repnz
scas
fcoms
into
dec
std
add
jne
outsl
test
ret
fisttpl
icebp
inc
out
push
stc
sahf
fiaddl
in
add
dec
imul
cmpsl
cmc
cmp
mov
stos
jne
push
mov
add
inc
mov
movsb
stc
sbb
aas
test
stos
shl
dec
fistpl
lds
je
mov
mov
arpl
out
pop
mov
repz
in
sbb
xchg
out
jo
fadd
sti
mov
xchg
imul
popl
scas
cmp
dec
jmp
js
jae
inc
mov
jbe
addr16
std
mov
rolb
repnz
in
insb
push
aaa
mov
lock
sub
sahf
mov
cmp
arpl
inc
int
lods
xchg
es
dec
fsub
sahf
aam
fwait
push
xor
rcr
imul
scas
adcl
xor
dec
jnp
mov
mov
lret
rcl
adc
xchg
mov
arpl
mov
pop
popa
xor
les
sbb
pop
imul
test
notb
xor
out
mov
ljmp
add
fs
ljmp
cmp
or
push
mov
ror
rorb
out
es
cmp
mov
ret
mov
adc
aas
leave
repnz
push
stos
ljmp
out
ljmp
divl
jae
sub
sbb
js
out
cmp
incb
sbb
lea
adc
xchg
scas
jbe
ret
in
enter
dec
sub
or
js
scas
sbb
fdivrp
sub
adc
mov
in
fsts
push
inc
out
push
iret
and
mov
mov
mov
cmp
fldl
mov
js
fsts
mov
push
lods
sub
push
dec
notl
dec
jb
pop
test
les
mov
lods
fistpl
insb
mov
aaa
jg
shrb
icebp
mov
dec
push
cwtl
sbbb
jg
xor
push
mov
push
xchg
inc
dec
shlb
aam
inc
push
dec
dec
and
js
int3
jno
xor
std
ret
cli
scas
mov
icebp
int
pusha
js
add
mov
cs
mov
pop
int
cmp
pop
ljmp
loopne
and
lods
add
sbb
out
lcall
imull
mov
and
jge
jo
data16
imul
inc
pushf
push
loopne
pop
sbb
jmp
sub
rorb
mov
and
fiaddl
dec
pop
ret
mov
movsl
dec
pop
xchg
ljmp
rcr
and
cmpsl
cmovbe
push
js
sub
push
inc
jo
in
lret
fwait
lods
push
fcomps
xor
dec
jns
push
pop
ficoml
sbb
jecxz
cld
outsl
mov
mov
es
jo
idivl
or
imul
rcrb
ljmp
aaa
aas
add
insb
jle
lcall
and
data16
jne
jge
pop
or
sbbb
mov
mov
and
adc
jg
arpl
xchg
xor
test
aaa
mov
push
cmpsl
sbb
decb
jnp
mov
out
cltd
pop
loop
fwait
das
ret
js
insl
data16
push
cmc
insb
mov
add
xorl
out
mov
mov
xchg
xchg
rclb
fdivrs
adc
lods
mov
cmp
mov
lahf
fnsave
std
mov
push
das
rcr
sahf
in
adcl
lods
cli
iret
icebp
lea
stos
scas
repz
fcompl
xchg
sti
jmp
xor
pop
sahf
call
or
dec
insb
lods
rcrb
mov
sbb
inc
fadds
pop
mov
jne
inc
call
xor
pop
stos
rorl
jno
inc
inc
pop
mov
call
mov
push
jb
push
xchg
inc
xchg
cltd
lds
and
jae
cmpsl
mov
shrl
fnstsw
dec
sub
jle
xchg
test
push
out
xor
pop
adc
into
jbe
jle
scas
push
inc
lahf
fists
jle
rcr
or
testb
and
jp
adc
add
pop
lock
jle
icebp
scas
dec
pop
out
shll
enter
loopne
iret
pop
mov
add
jecxz
jo
jmp
or
pop
push
xor
in
fcomps
ds
shrl
dec
xor
pop
mov
mov
cmp
sbb
addl
sbb
dec
les
shlb
and
aaa
in
mov
xchg
je
aad
cmpsl
ret
lock
inc
sub
popa
aas
loopne
pop
and
push
es
or
jl
and
push
or
xchg
xor
adc
out
cmp
add
adc
xchg
decl
sub
inc
pop
and
stc
and
xchg
flds
xlat
aaa
out
jns
pushf
add
mov
dec
in
mov
dec
jns
lret
cld
ds
stos
in
dec
pop
int
cmp
sbb
mov
rcll
movsl
inc
mov
lock
cwtl
vmaxps
xor
out
jno
lcall
mov
and
pushf
addr16
mov
cld
jg
roll
aas
sbb
xor
outsb
dec
inc
sub
popl
or
mov
add
xchg
aaa
jns
pop
mov
jnp
sbb
xor
rclb
test
dec
mov
addr16
dec
scas
ret
out
sbb
lret
add
in
pop
addr16
adc
push
stos
mov
popa
xor
xor
nop
aaa
cmp
sub
arpl
idivb
sahf
stos
sbb
add
sub
add
dec
xchg
daa
jo
xchg
push
jmp
pushf
pusha
mov
inc
lods
sub
test
sbb
ficomps
pop
jmp
xchg
dec
test
fs
lret
ficomps
or
into
push
push
lods
mov
xchg
xchg
and
push
gs
stc
nop
cmp
lock
dec
call
mov
in
push
fcompl
pop
in
in
stos
adc
push
mov
ja
sub
rclb
outsb
cmpsl
jecxz
mov
js
cmp
pop
push
ss
mov
mov
add
sub
mov
fbstp
int3
add
jmp
lods
push
push
and
imul
lock
xchg
inc
xor
aad
lea
movsb
push
mov
outsl
insl
push
js
mov
js
mov
sbb
jns
xchg
stos
iret
aaa
add
fistl
repnz
in
lret
pop
pop
sbb
mov
pop
fwait
cmpsb
inc
movsl
in
jp
cld
cmpsb
xor
jg
cltd
xor
mov
in
gs
inc
xchg
psrlq
cltd
add
cmpsb
push
je
sub
xor
fidivs
repnz
mov
out
cwtl
das
and
dec
in
or
mov
adc
out
xchg
ss
jg
leave
adc
adc
jns
loopne
mov
xor
cltd
ror
inc
sub
cmp
lock
mov
js
cmp
and
xor
les
mov
push
jne
mov
cmp
fdivrl
mov
mov
pushf
jae
into
or
xor
mov
out
fidivrs
or
sbb
add
mov
loopne
jecxz
ss
push
je
subb
aam
inc
outsb
sarb
hlt
cmp
pop
lds
sub
filds
xchg
push
mov
nop
pop
lods
in
mov
adc
cmpsl
popa
cwtl
lods
mov
or
repz
or
mov
mov
rorb
dec
jp
cmp
inc
dec
xor
xchg
sbb
and
sub
jp
loop
bound
scas
or
enter
cmp
ret
subb
push
add
jne
int3
push
fiaddl
fnstenv
pushf
push
inc
and
inc
insl
fidivrs
fisttps
pop
icebp
xchg
jae
xchg
out
nop
push
out
mov
push
inc
add
outsb
test
es
adc
pop
inc
lcall
push
xor
mov
popf
adc
roll
dec
pop
pop
repz
filds
mov
arpl
test
dec
mov
leave
xchg
push
pop
push
pop
fstps
inc
pusha
sbb
pop
aas
mov
shll
sub
aas
jo
je
xchg
cmpsl
andb
cltd
rcl
mov
inc
jmp
and
xchg
xchg
idivl
ret
fwait
sbb
inc
jmp
xchg
mov
in
sti
maskmovq
dec
and
mov
xlat
insl
into
leave
js
lret
out
hlt
mov
popf
gs
xchg
inc
movsb
test
cmc
idivb
mov
adc
pop
jge
xlat
mov
nop
cltd
xchg
inc
fadd
mov
pop
ret
fistl
fwait
out
jne
loope
lds
cmovae
mov
xor
push
aas
les
in
rcrl
jnp
ljmp
cmp
and
ds
popa
scas
ret
jg
test
jo
ret
sub
jb
loope
pop
adc
xchg
pop
mov
lret
jne
es
and
push
xor
push
lahf
push
lods
psubsw
dec
mov
xchg
mov
sbb
insl
jge
outsl
les
sbb
mov
push
imul
push
add
and
mov
adc
imul
test
dec
aas
outsl
sbb
sbb
and
sbb
sub
outsl
dec
mov
aam
fidivs
ds
out
cmpsb
cmp
into
xchg
les
ljmp
cmp
sahf
lods
pop
pop
into
leave
cs
cli
shl
fcomps
scas
testl
cmpsb
dec
int3
aad
adc
and
jns
pushf
pop
pop
fbld
mov
arpl
add
inc
in
addr16
rcrl
outsl
sub
pop
out
pop
sbb
and
ds
inc
iret
gs
cltd
iret
mov
insb
popa
and
sbb
sbbb
mov
notl
fisubl
loop
push
push
xor
cwtl
cld
and
sbb
jnp
dec
mov
xchg
cwtl
push
lock
ss
push
mov
push
cmc
lret
inc
push
jb
movsl
inc
sbb
xor
mov
dec
dec
pop
mov
mov
rclb
mov
jg
fldl
sbb
int
jns
int3
and
push
sbbl
pop
and
xchg
jl
dec
shll
hlt
adc
xchg
jb
adc
fbstp
mov
fdivrs
mov
fdivrl
mov
stc
pushf
jle
into
or
lret
fnsave
sbb
fdivl
mov
icebp
pop
shlb
addb
out
inc
in
jl
shrl
nop
outsl
repz
mov
pop
fld
cld
inc
icebp
mov
mov
imul
aaa
lds
cmp
aas
jge
test
addr16
push
outsb
jb
sub
jae
xlat
outsb
lds
xchg
and
inc
and
fadds
cmp
mov
out
inc
repz
sub
jne
jo
mov
sbb
stc
adc
addb
mov
decb
popf
sar
jnp
add
mov
push
push
jmp
jle
nop
mov
movsb
push
sbb
push
pop
pop
nop
in
lds
jae
sub
push
or
xor
cmpsb
xor
adc
dec
pop
pop
ljmp
pushf
jns
out
repz
int
clc
and
sub
mov
arpl
leave
pushf
push
mov
inc
cld
in
ljmp
out
bound
out
insl
mov
mov
lock
xchg
dec
ret
mov
mov
ja
loopne
xor
adc
pop
out
loop
sarl
fidivs
pop
add
mov
xchg
jmp
cmp
or
popa
cltd
inc
int3
fstpt
xchg
popa
test
dec
repnz
dec
cmp
dec
pop
sbb
sbb
jae
int3
sub
mov
or
mov
inc
push
movsl
fimull
fimull
pop
mov
dec
hlt
mov
fnsave
sub
jo
arpl
fstpl
fisttps
leave
push
out
ret
call
mov
sub
outsl
in
mov
hlt
shll
adc
xor
repnz
jp
ds
sub
shll
les
add
sti
jl
stos
cmp
push
fnstenv
sub
or
sbb
pop
add
xchg
cs
popf
stc
xor
add
fisttps
out
add
add
pusha
mov
mov
xchg
pop
imul
test
push
lods
mov
fbld
daa
or
sbb
clc
hlt
in
cmp
ret
rcrl
and
mov
cltd
push
mov
scas
jp
or
mov
lds
loop
mov
pusha
push
sub
movsb
ja
dec
cld
xchg
fidivl
movl
mov
fisttps
mov
leave
pop
push
sub
jne
cmp
leave
push
sub
push
dec
int3
fmuls
fs
pushf
or
sbb
mov
insl
loopne
sbb
les
mov
dec
mov
mov
shll
lods
and
pusha
cmp
mov
pop
lcall
dec
push
xchg
lret
or
or
lcall
mov
jle
test
aaa
dec
roll
fsts
mov
mov
add
xor
stos
xor
enter
insl
rcll
in
mov
repnz
jecxz
sti
jg
inc
add
sbb
pop
adc
pop
add
cmp
fstpt
pop
and
cmp
out
mov
mov
jp
movsb
repnz
add
jno
sti
push
test
lods
loopne
sbb
adc
shll
xchg
adc
jge
mov
jbe
cmpsb
jle
sub
lock
pop
lock
ja
pop
and
mov
enter
or
jecxz
jg
arpl
imul
pusha
pop
lcall
adc
add
add
jl
std
sbbb
imul
mov
sbb
mov
or
sbb
stos
push
scas
mov
push
push
imul
mov
outsl
in
xchg
rcl
dec
push
sbb
adc
or
stos
xor
jmp
aaa
xor
jmp
popf
mov
jle
aam
cmp
stos
in
sbb
inc
out
jbe
lock
mov
xchg
lahf
mov
movsl
mov
in
adc
loopne
or
testb
dec
leave
and
imul
gs
jns
lods
xchg
insl
add
inc
xor
adc
fdivrl
xor
xor
xchg
adcl
pop
xor
daa
outsb
call
icebp
lret
lcall
adc
fidivrs
xor
xor
mov
pop
pop
andb
mov
loop
insb
sahf
sti
inc
enter
out
push
inc
sub
pusha
into
sub
fdivs
xchg
in
sub
adc
dec
pop
leave
xor
mov
stos
add
mov
iret
stc
cltd
pop
jmp
movsb
leave
and
aaa
int
add
mov
add
and
out
rcll
xor
fs
adc
cs
and
jecxz
jge
daa
xor
sub
push
cli
pop
add
xlat
mov
lock
clc
notl
pusha
and
jp
frstor
jno
pop
push
popa
aad
bound
lahf
lods
cmp
xchg
stc
push
sahf
jno
dec
es
sbb
in
inc
dec
subl
mov
les
mov
fsub
sbb
sbb
add
inc
lock
or
lods
dec
faddl
scas
xchg
mov
xchg
add
adc
jmp
pop
mov
ljmp
pop
cmp
mov
mov
shll
jmp
jae
xchg
inc
iret
push
aas
bound
mov
inc
mov
adc
mov
ret
sbb
dec
in
test
pop
sub
mov
hlt
aad
data16
dec
gs
out
loop
jb
jg
jns
sbbl
xchg
clc
sbb
mov
mov
fwait
insb
and
xor
out
adc
sub
mov
fidivrl
push
pusha
lea
roll
inc
pop
dec
movsl
repz
sub
lods
add
cli
xchg
push
sub
mov
mov
cmovg
js
dec
dec
xlat
sub
fs
pop
xchg
hlt
xchg
jo
mov
fistl
adc
and
movb
push
shlb
mov
loope
cld
push
push
cs
pop
mov
mov
push
enter
cs
jmp
imul
jnp
or
movb
add
into
inc
inc
pushf
mov
loop
leave
mov
cli
and
push
mov
push
mov
cmpsb
sub
cmp
dec
lds
int3
sti
fwait
mov
jmp
mov
into
int
jecxz
cmpsl
sbb
mov
pop
adc
rcrl
push
mov
ja
out
and
add
imul
and
add
fnsaves
adc
imul
icebp
inc
outsl
jmp
pop
test
in
jg
sub
popa
in
imul
test
dec
dec
dec
scas
cmp
lds
out
fwait
rorb
in
dec
jb
daa
clc
push
push
xchg
stc
jbe
fstpt
in
repz
and
popl
fcomps
and
dec
and
dec
mov
cmp
push
mov
test
outsb
inc
and
xchg
outsb
sub
mov
loop
repz
call
sub
sbb
es
pop
testb
xor
inc
inc
scas
dec
icebp
mov
mov
test
push
adc
cmp
sub
push
jno
jg
sahf
es
mov
push
and
add
add
fs
jge
xchg
cmp
adc
mov
out
cld
mov
or
jp
dec
imul
mov
cmp
shrl
shll
enter
dec
xor
cwtl
mov
pop
mov
loop
in
xor
nop
roll
sbb
ljmp
ljmp
js
inc
pop
mov
lods
hlt
cld
add
xor
mov
xor
in
add
popf
dec
pop
idivl
mov
add
inc
imul
xchg
jmp
dec
sub
pop
orl
out
xor
xchg
nopl
in
pop
inc
insb
mull
mov
mov
stc
and
push
negl
push
xor
jo
add
mov
xor
addr16
es
mov
xor
mov
stos
cmp
into
mov
jp
inc
loopne
aam
add
aam
add
jg
stc
popf
mov
hlt
jo
adc
xchg
jne
int3
arpl
mov
lcall
pushf
sahf
sbbb
scas
jns
repz
pop
push
fimuls
out
pop
adc
jnp
test
addr16
push
add
mov
pop
or
repnz
sub
cmp
imul
mov
jbe
outsb
inc
rorb
mov
xor
lods
and
dec
and
insl
inc
mov
cld
pop
xor
sti
test
jo
jle
jp
cwtl
jnp
inc
mov
dec
movl
xor
dec
in
shll
mov
push
imulb
sbb
int3
flds
push
leave
dec
xor
inc
out
bound
ds
push
int
mov
testl
idivb
cwtl
or
add
fisubs
lret
psrad
ljmp
mov
dec
adc
dec
in
inc
popa
cli
mov
mov
bound
lret
in
std
xchg
pop
jbe
adc
loop
in
sub
jne
dec
jns
mov
addl
mov
adcb
popa
lods
and
lods
mov
pop
xchg
push
mov
sarb
mov
xchg
cmp
leave
xor
jnp
outsb
push
mov
or
or
sti
sub
and
in
aas
mov
mov
outsb
pop
jge
sbb
or
xor
out
mov
jg
mov
xor
sbb
xchg
js
mov
cs
enter
add
rcr
dec
adcl
inc
push
lods
mov
in
stos
scas
mov
out
jnp
leave
in
jae
enter
stc
aad
clc
nop
xchg
or
xor
hlt
sub
mov
sti
mov
mov
mov
ffreep
js
add
insl
xlat
mov
test
mov
mov
mov
out
cmpsb
dec
push
add
pop
mov
lret
mov
jns
dec
dec
imul
mov
xor
clc
hlt
cmp
in
popa
rcrl
push
jnp
inc
out
lahf
xor
cmp
arpl
jo
into
mov
in
mov
notl
fst
outsl
call
ds
popf
out
sti
nop
jmp
adc
fldl
cs
loope
sub
and
inc
sarb
loop
mov
stos
test
inc
fdivs
fbld
call
lret
aas
outsb
xor
fstpt
and
push
icebp
iret
cwtl
leave
in
test
sub
ficoms
push
negl
subb
cwtl
gs
xchg
bound
fsub
jne
lds
lods
push
mov
cltd
icebp
and
movsl
ret
add
jle
aad
nop
mov
loopne
inc
and
add
pushf
or
and
jae
rcll
cmpsl
mov
outsb
rcr
mov
fbld
cmp
push
popw
in
inc
jl
dec
mov
push
inc
mov
jle
data16
push
mov
push
mov
mov
inc
int3
leave
orl
ficomps
xchg
mov
rorb
inc
clc
sbb
or
add
je
pop
sub
pop
or
ret
sbb
sbb
mov
out
push
adc
outsl
push
jae
sbb
adc
rorl
xor
fidivl
sub
daa
pop
int3
xchg
cmpsb
lea
mov
mov
add
cmp
aad
and
stc
test
add
xor
scas
lds
inc
cmpsw
loope
fsubrl
cmpb
xor
pop
cmp
stos
repnz
mov
mov
andl
jbe
lcall
push
testb
imul
and
mov
sub
dec
mov
push
insb
imul
je
mov
aam
fiadds
scas
mov
fwait
lods
or
push
in
or
mov
insb
sub
cmp
add
mov
call
scas
cli
push
nop
cmp
ja
mov
lock
cwtl
or
repz
jge
repz
hlt
out
iret
add
movsb
lock
sub
lods
jecxz
ret
mov
jno
repnz
daa
mov
arpl
popf
stc
lods
pop
mov
stos
fidivl
cmp
push
xor
fwait
popa
and
imul
gs
fwait
imul
int
icebp
mov
aas
repz
push
fldt
dec
cmc
dec
in
out
lahf
hlt
mov
mov
cmp
lretw
ficomps
movsb
pop
in
std
mov
mov
jmp
inc
jge
mov
in
mov
callw
lret
call
push
push
dec
loopne
imul
inc
adc
clc
and
mov
mov
push
inc
pop
cwtl
mov
push
inc
add
add
repnz
orl
psrld
bound
stc
xor
xchg
popa
enter
ss
or
add
int3
or
ret
popf
or
inc
shrb
sub
jno
imul
xchg
js
and
cmp
notb
push
movsb
mov
dec
stos
cmc
divb
dec
jnp
inc
adc
ror
mov
push
xlat
loope
ljmp
jmp
std
or
inc
push
lahf
dec
sub
daa
fnsave
sub
push
or
pop
jmp
and
clc
movsb
gs
ja
cli
xchg
pop
or
sbb
lcall
pop
ret
gs
jb
pop
fisttpll
push
fsubrl
push
outsl
cli
mov
pop
jl
xchg
fmul
bound
mov
dec
pop
ret
pop
sub
in
cli
sbb
add
mov
push
cmpsb
imul
mov
mov
fsubr
pop
lcall
mov
push
cli
stos
pop
js
repnz
lds
outsl
push
mov
or
sbb
fsubl
mov
sbb
jg
aas
fldt
dec
dec
ret
lcall
imul
jl
pop
and
add
pop
lods
cli
jg
pop
cmpsb
mov
pushf
or
cmp
sbb
xchg
mov
inc
xchg
jle
mov
pop
xor
mov
mov
test
pop
mov
stos
mov
ja
push
popf
insl
je
sub
xor
mov
aad
mov
mov
test
xchg
mov
xchg
jae
xchg
mov
out
bound
insl
loopne
mov
andl
mov
mov
test
inc
pop
int
xor
inc
adc
push
mov
das
xor
ffreep
shrl
leave
push
insb
icebp
mov
xchg
jbe
dec
sbb
nop
loope
stc
inc
cmp
sbb
push
xchg
push
inc
lea
pop
faddp
in
cmc
jnp
out
movl
arpl
sarb
aas
lret
push
cltd
sub
mov
and
mov
aaa
pushf
es
sbb
sbb
pusha
pop
lock
pop
mov
hlt
mov
inc
imul
popf
sub
in
in
insl
sub
sub
or
ja
rclb
ret
mov
pop
cwtl
cmp
dec
popa
xchg
xor
sub
leave
xor
movsl
ficoml
mov
cmp
cmpsb
sahf
jne
pop
rolb
mov
test
rclb
aad
pushf
or
js
push
jns
push
stos
js
adc
mov
jae
or
das
mov
and
inc
or
xchg
scas
gs
addr16
mov
leave
push
loop
cwtl
add
sahf
cs
je
xlat
daa
in
test
movsb
dec
adc
jp
jne
pop
cmpsb
outsb
into
aad
xlat
sub
bnd
data16
xchg
into
sbb
inc
mov
push
push
pushf
mov
shlb
lret
repnz
xor
adc
push
stc
mov
xchg
dec
ljmp
and
cmp
cmp
and
mov
inc
xor
pop
push
shrl
jne
lret
xlat
out
push
call
mov
mov
ret
ret
loopne
pusha
es
mov
dec
out
jns
fwait
repnz
std
or
push
lods
cmp
adc
adc
pushf
sub
xor
test
jne
pop
test
adc
xchg
jecxz
popf
sub
movsb
test
rorl
sub
mov
sbb
lahf
pusha
int3
cmp
lret
pop
push
mov
pop
movsb
and
cmpsb
sbb
fdivs
testl
incl
jo
frstor
jns
push
fbstp
jns
and
out
cs
add
or
cmp
adc
pusha
daa
cltd
adc
mov
stos
mov
push
adc
xor
cmp
in
mov
popl
fs
pop
inc
cmp
mov
ds
cmp
fsubrl
mov
xor
mov
iret
out
les
add
les
push
and
ljmp
push
call
xor
repz
sub
and
xchg
addb
jge
lods
or
mov
pop
imul
sti
repnz
xor
lea
scas
test
pinsrw
rorb
ja
repz
mov
pop
das
push
fdivrl
movsb
pop
mov
repnz
or
jmp
xchg
rcll
xor
pop
mov
fwait
xor
es
ljmp
aas
lret
addr16
mov
fisttps
sbb
cmp
je
not
sbbl
xor
and
iret
cmp
repnz
jbe
adc
jnp
aaa
lds
jecxz
movsb
fcompl
test
jno
cmc
mov
mov
adc
scas
adc
jae
sub
pushf
stos
int
fadd
lahf
push
add
inc
movsl
push
cwtl
popa
jns
stc
fsubrl
sub
cmc
push
xor
mov
mov
and
dec
and
and
xlat
sbbb
cwtl
orl
loop
arpl
outsl
xchg
adc
jnp
xchg
xor
cli
sbbl
rclb
cltd
push
lcall
add
mov
xchg
inc
aas
rcr
insl
repnz
cltd
xchg
xor
mov
js
pop
jno
gs
mov
loopne
call
xchg
cmp
out
add
arpl
dec
test
std
or
mov
cld
bswap
jo
andb
xchg
dec
mov
cmp
and
mov
stos
inc
cmp
jge
push
out
cmpsl
jo
mov
jle
add
aad
ret
lea
insl
ret
sbb
or
loope
mov
push
xor
sub
pop
mov
movsl
sti
push
fdivl
ljmp
inc
bound
mov
mov
mov
mov
or
lahf
into
enter
fists
inc
loope
fisubs
cmp
ffreep
loopne
out
clc
xchg
outsb
mov
nop
xchg
insl
stos
inc
sahf
rcrb
pop
mov
pop
inc
stc
inc
sbb
sbb
mov
sbb
std
xchg
adc
bound
mov
leave
mov
mov
scas
cs
mov
negb
jo
stc
mov
xchg
adc
dec
sub
into
sbb
subl
or
push
cmpb
or
sub
mov
push
push
dec
jp
mov
aas
dec
dec
js
mov
mov
mov
insb
xor
sahf
movsl
push
xchg
jle
inc
xor
loopne
ret
fstl
xchg
out
jb
aam
out
xchg
data16
xchg
and
ss
lret
add
mov
jns
xorl
cmp
cmp
call
xor
ret
test
push
insb
loop
repnz
sbb
sub
cltd
sbb
fwait
arpl
iret
arpl
mov
cltd
cli
push
out
cs
cmp
pop
mov
mov
jnp
push
loope
pop
bound
cltd
mov
into
jbe
pop
sub
push
std
jbe
test
ret
and
nop
push
aas
pop
xchg
add
in
add
data16
inc
faddp
cmp
jecxz
hlt
lahf
pop
fcoml
stos
xor
and
test
jno
std
mov
test
jb
enter
inc
loopne
sbb
ss
mov
pop
push
in
lea
sbb
in
jp
push
clc
pop
cmp
cmp
jo
ja
mov
sub
mov
pop
loopne
lcall
sarb
into
inc
cmpsl
xchg
push
push
pop
imulb
dec
sub
adc
mov
lock
out
xchg
movsb
pop
sti
jle
add
mov
jl
scas
bnd
in
mov
rorl
leave
jnp
lods
and
sti
push
lods
icebp
jmp
sub
lds
je
mov
dec
decl
pop
jecxz
pop
add
mov
jnp
fildll
enter
cmp
dec
push
mov
adc
es
or
shrl
fwait
test
daa
mov
call
lea
out
push
jmp
push
xorl
and
repnz
sbb
jo
sub
cmp
push
notb
ljmp
xor
xorl
add
ljmp
scas
cld
mov
gs
mov
and
and
imul
push
dec
cmp
dec
adc
sub
inc
iret
fildl
sub
xchg
add
adc
mov
pop
adc
ret
mov
dec
lock
rclb
adc
cltd
sub
test
mov
out
xchg
out
test
movsb
or
aad
mov
imul
ss
cmpsb
lahf
stos
fildl
mov
inc
inc
xor
call
push
arpl
xor
adc
sbb
lods
imul
fidivrl
jo
push
mov
and
imul
xor
xor
xchg
fwait
lods
adc
fdivrp
jne
sbb
arpl
mov
mov
pop
sub
je
mov
test
mov
pop
movsb
cmp
mov
mov
aam
pop
roll
out
xor
pop
lds
jnp
push
insb
and
f2xm1
int
cli
mov
sub
mov
sbb
xlat
mov
fnsave
and
mov
sahf
cmc
dec
in
jle
js
mov
icebp
mov
pop
jns
and
and
add
add
das
inc
add
call
cli
pop
cmc
adc
ljmp
mov
push
pop
mov
jecxz
mov
loopne
mov
aam
sbb
push
ja
in
fwait
ret
std
push
xchg
pop
pop
cli
push
shr
fisubrl
or
imul
das
add
incl
in
icebp
and
pop
push
aad
fldcw
fwait
das
fwait
mov
pop
sub
jmp
mov
popa
or
pop
adc
sarb
leave
lret
xchg
push
mov
sbb
inc
push
push
and
fldl
ja
sub
imul
out
mov
std
lds
xchg
push
jmp
ljmp
call
rcll
fimull
adc
fidivs
dec
pop
add
je,pn
inc
mov
jg
mov
mov
jnp
inc
sahf
cmp
adc
faddl
and
jae
icebp
pop
xchg
mov
hlt
test
repnz
das
cmp
movsl
sbb
xlat
mov
inc
aaa
hlt
scas
jp
pop
xor
push
cmp
sti
cwtl
sub
dec
cmp
pop
shl
cmp
insl
jge
sub
repnz
add
sti
inc
xchg
mov
xchg
jae
out
jno
inc
xor
in
cmp
pushl
sahf
sti
cmpsl
xchg
push
adc
cmp
scas
jo
xlat
dec
inc
push
leave
dec
xchg
jle
inc
fs
arpl
cmp
add
pop
sahf
clc
mov
jb
jne
mov
mov
repz
and
sub
jmp
mov
sbb
inc
xor
lret
jp
leave
cmpsb
clc
loope
mov
xchg
ret
dec
add
arpl
mov
daa
xchg
jno
cmpsl
scas
inc
pop
mov
adc
test
cmp
mov
and
stos
push
scas
adc
pushf
sbbb
mov
pop
xchg
adc
rclb
rorb
pop
xchg
push
gs
and
stos
mov
inc
iret
jecxz
clc
dec
rcl
xchg
std
shl
in
dec
test
loope
mov
aas
cmp
pop
xorb
push
push
adc
test
fisubl
mov
mov
push
call
mov
fs
pop
adc
xor
sub
jp
pop
and
icebp
cmp
mov
lock
call
lahf
mov
ljmp
or
aad
enter
mov
push
fwait
xor
ja
mov
inc
fstpl
scas
mov
push
xchg
dec
cmpsb
adc
and
mov
pop
addr16
mov
adc
mov
mov
into
mov
stc
fcmovu
js
sbb
leave
jmp
ffreep
jl
sub
sub
stos
popf
test
test
push
out
or
inc
sbb
mov
into
shl
stos
inc
sub
jecxz
or
cmp
out
sahf
and
pop
jb
in
mov
pusha
push
out
sbb
call
or
movsb
push
and
mov
xchg
addr16
mov
mov
mov
jmp
clc
or
lret
bound
dec
mov
subb
lahf
addl
loope
mov
dec
bound
mov
mov
jns
out
test
xchg
xchg
out
push
push
ret
cmpsb
push
loop
mov
js
popa
js
sub
or
push
xchg
in
mov
xor
add
pop
jmp
and
jecxz
repnz
lds
sarl
rolb
mov
dec
lods
pushf
xor
jg
shlb
mov
cmp
push
jg
dec
fldl
mov
cmp
jl
subl
adc
mov
into
pop
ret
repz
mov
sub
or
out
adc
inc
mov
or
xchg
mov
jmp
inc
fwait
adc
loopne
xchg
pop
cmp
and
in
ja
mov
int3
mov
push
sub
xor
mov
adc
imull
cld
gs
in
sub
lahf
jnp
adc
adc
push
dec
push
lahf
in
or
popf
inc
and
dec
jne
push
cmpsl
fcompl
shrb
add
cs
jp
push
enter
cli
sub
fbld
rcrb
cmpps
out
addl
jle
daa
mov
jo
push
lea
fucomip
loop
xchg
mov
call
xchg
push
push
sbb
push
sub
pop
sub
arpl
jne
cwtl
or
lret
jno
fs
push
xchg
int3
fwait
dec
jno
fbld
xchg
loop
int3
fistpll
dec
fldl
lret
cld
ret
iret
mov
nop
xchg
loope
mov
push
lods
and
repz
sbb
pusha
out
pop
inc
sbbl
out
lds
jns
sbb
add
jge
repnz
and
repz
lret
jb
std
aas
enter
or
mov
fmull
push
sub
dec
mov
dec
out
dec
fwait
mov
push
loop
sub
push
dec
pushl
pop
bndldx
mov
mov
insl
add
lods
std
dec
mov
fwait
push
dec
icebp
sbb
xlat
outsb
inc
sub
pop
inc
loope
rcll
jecxz
js
ss
sub
add
dec
push
in
jle
mov
and
repz
insb
or
cltd
scas
inc
cli
insl
cwtl
or
popl
outsb
arpl
pop
dec
mov
sbb
adc
push
pop
sbb
nop
rcrb
mov
inc
pusha
inc
call
imul
mov
out
xchg
mov
xchg
jmp
fisubrl
inc
push
xchg
fbstp
and
pop
sbb
add
cmc
mov
sbbb
push
adc
sbb
or
pop
jle
mov
aaa
add
in
add
aad
adc
lret
vhaddpd
repz
adc
xchg
xchg
ss
xchg
jns
out
cmp
insl
push
jg
addl
push
mov
mov
mov
and
outsb
loope
mov
andb
and
cli
loopne
adc
or
icebp
mov
and
dec
rcrb
xchg
hlt
push
addr16
mov
xchg
or
mov
mov
lret
xor
cmp
pop
xor
inc
out
jb
add
ds
add
or
jb
xor
imul
mov
ret
mov
gs
mov
inc
enter
xor
mov
adc
mov
popf
mov
xor
jnp
stc
imul
int
cmp
movsb
xchg
lret
and
das
out
dec
push
pop
or
dec
mov
repz
ljmp
xchg
dec
rorl
fmul
or
jno
aaa
sahf
xor
fcomps
js
jns
aas
xor
lds
push
push
adc
pop
push
push
loope
inc
pop
inc
bswap
insl
sbb
mov
sti
sarl
mov
loope
inc
test
add
lret
test
push
sbb
mov
rcrb
repnz
ficoml
stos
loopne
pop
ret
cmovnp
stos
mov
or
outsl
icebp
xchg
inc
jl
or
push
hlt
inc
fisttps
adc
add
add
sti
pop
xor
add
fcompl
mov
stc
mov
outsb
mov
iret
or
lahf
popa
jns,pt
in
out
rorl
hlt
pushf
add
mov
mov
std
and
mov
xor
mov
sti
sbb
test
sub
cmpsb
mov
ficoms
push
fldcw
fdivrs
dec
dec
fcmovne
cli
fwait
lret
icebp
inc
add
inc
dec
jmp
das
mov
or
ret
fstl
hlt
mov
out
mov
leave
jg
cmp
xchg
ror
flds
mov
and
std
dec
movl
cmp
lods
cmpsb
in
loop
inc
jns
jo
arpl
dec
addr16
jns
push
enter
mov
in
arpl
xchg
or
call
filds
fisubrs
lret
push
and
pop
shl
xor
icebp
imul
jmp
std
xchg
int
or
sbb
push
xor
lret
lret
jg
cmp
adc
add
jo
jns
mov
addr16
jb
idivb
mov
adc
xor
je
jne
imul
push
mov
pusha
dec
mov
or
inc
dec
mov
push
or
adc
mov
lods
jg
sbb
cmpsl
adc
push
rorl
sbb
idivb
ret
cmp
addr16
loopne
push
push
fistl
movsb
cmc
pop
mov
pop
ret
in
pop
scas
jb
add
mov
jge
add
adc
rorl
push
aas
lea
es
in
mov
mov
ljmp
sbb
pop
xchg
cmp
adc
add
jl
enter
insl
hlt
arpl
iret
rcrb
hlt
xchg
repz
test
test
in
adc
lahf
push
ja
push
mov
nop
mov
lock
xor
lds
jno
into
sbb
in
xchg
aaa
test
sti
nop
cmpsl
test
stc
data16
decl
lods
mov
pop
dec
xchg
dec
mov
pop
xchg
sub
loope
div
movsl
sub
aas
sbb
into
cmp
aam
leave
mov
xor
and
jecxz
js
icebp
outsb
sub
inc
inc
add
stc
imul
out
mov
cmpsl
mov
xchg
stos
jmp
cs
test
cmp
inc
daa
ss
lcall
xor
push
and
cld
inc
clc
mov
xor
pop
aaa
jns
mov
jg
data16
cwtl
mov
cmpsb
les
sub
dec
mov
xchg
add
jmp
cmp
mov
shll
aad
cwtl
add
jo
or
cmc
sbb
out
ret
add
push
dec
mov
dec
insb
aas
mov
mov
xor
mov
clc
sbb
mov
les
cmp
rol
jo
jb
cltd
sbb
push
sahf
xchg
mov
jg
cltd
sub
sahf
lods
loope
pop
adc
pop
dec
pusha
dec
cmp
mov
imul
sbbb
cmp
mov
arpl
lret
ljmp
sahf
push
jg
mov
mov
sub
sti
mov
out
and
movl
cmp
scas
lea
loop
mov
outsb
ret
inc
stc
cltd
insl
mov
xchg
mov
fwait
xor
or
mov
pop
out
inc
movsb
xchg
outsb
mov
cmpsb
popf
sub
cmpsl
jp
outsl
je
call
mov
int
sbb
push
mov
or
je
dec
sub
cmp
mul
mov
pop
push
jb
sahf
mov
pop
je
pop
icebp
pop
xchg
imul
push
inc
movsl
or
lds
popa
or
xchg
in
cmc
call
js
pop
iret
lret
and
jle
test
mov
sbb
pop
test
push
cmp
mov
dec
sbb
into
sub
cmp
lock
inc
inc
lret
lret
addr16
mov
ja
sub
or
jnp
mov
pop
push
or
les
pop
pop
pop
dec
nop
xchg
xor
jbe
sahf
int3
fbld
jae
jo
loop
aam
pop
mov
daa
inc
ds
loop
jne
mov
push
mov
fdiv
jecxz
insl
js
cmp
pop
cmp
mov
nop
sub
cmpsb
jecxz
and
inc
mov
pop
inc
sti
inc
mov
mov
xchg
or
jbe
rcrb
outsb
push
inc
pop
dec
xchg
es
daa
cld
ds
aad
pop
ret
sahf
psllw
cwtl
mov
out
xchg
lea
clc
insl
subl
shll
jg
or
cmpl
aad
push
scas
inc
pop
mov
mov
cld
jbe
cmp
adc
pop
jae
pop
icebp
pop
icebp
dec
mov
inc
jnp
jne
cmp
adc
ja
mov
enter
sbb
iret
lcall
push
fdivs
test
xchg
push
push
std
xchg
test
sbb
scas
xchg
and
push
lds
sub
insb
fldenv
das
push
jp
frstor
test
sti
push
mov
movsw
push
and
pop
inc
mov
mov
in
les
xor
arpl
xorb
mov
je
arpl
jnp
cltd
jno
mov
jno
stos
es
imul
rcrb
fbld
popf
jno
dec
and
das
mov
scas
pop
add
das
xor
shrl
addr16
pop
mov
notl
pop
mov
xor
jmp
movsb
fidivs
pop
icebp
mov
dec
add
ret
push
mov
pushf
repz
mov
xorl
loope
jge
fidivl
mov
cmpsl
jp
data16
js
loopne
movsb
lds
fcmovnb
pushf
mov
hlt
fmuls
sarl
fstl
and
cld
pop
adc
ja
jge
mov
arpl
pop
mov
xor
std
inc
in
cmp
aaa
pop
mov
sub
or
lods
out
push
sub
jg
repz
cmp
cmpsl
xchg
or
pop
stos
or
fnstsw
loop
repnz
jne
jno
jle
pop
rcl
xlat
sbb
or
xlat
outsb
es
push
call
jb
push
in
out
xchg
rorb
mov
mov
shll
je
mov
pop
push
jbe
dec
out
xchg
call
sbb
out
adc
and
scas
std
push
adc
mov
loope
mov
gs
seta
aas
outsb
ret
mov
jb
orl
or
pusha
orl
fsub
mov
jnp
mov
cs
jmp
jo
sub
mov
pusha
mov
xor
mov
xchg
pop
add
xor
and
add
loopne
mov
pop
xchg
rcpps
mov
out
xchg
or
mov
pusha
arpl
sbb
rol
jge
nop
daa
mov
push
scas
push
xchg
ja
pop
pop
ds
clc
arpl
and
push
push
or
hlt
mov
jmp
lds
sub
push
mov
out
pop
loopne
scas
leave
testb
iret
jle
cmpxchg
dec
mov
testb
or
cmp
arpl
xor
dec
sub
arpl
and
mov
pop
mov
xchg
jge
mov
in
jp
add
out
sub
push
lcall
popa
orb
or
pop
mov
push
bound
push
push
lock
movsl
xor
dec
repnz
outsb
fisubl
repz
sti
int3
shrl
fldt
ret
test
dec
jge
loopne
push
out
lock
mov
or
inc
sbbb
cmp
push
loopnew
fidivl
stc
adc
out
fisubrs
mov
notb
push
xchg
movsb
fidivl
fisubrs
std
push
scas
lock
ficomps
std
dec
inc
cld
lcall
in
sub
pop
cmp
into
add
inc
or
les
pop
mov
outsl
frstor
iret
int3
add
subl
rcr
lea
fidivrl
mov
aaa
in
mov
roll
pop
push
cwtl
lahf
jmp
pop
pop
jl
xlat
jne
loop
jl
pusha
and
popf
add
negb
jg
sub
xchg
push
cmc
push
test
and
scas
loopne
jbe
test
pop
mov
lea
test
jg
lret
and
andb
cmp
pushf
testb
ja
leave
les
je
mov
sub
mov
xor
movq
hlt
push
push
outsl
mov
xor
pop
lock
call
dec
or
enter
jne
mov
enter
push
fildl
test
sub
pushf
outsl
test
push
inc
mov
mov
push
insl
scas
scas
or
adc
enter
pushf
popa
mov
iret
sub
dec
outsl
into
or
pop
insl
movsb
cmp
mov
ret
xchg
inc
mov
pusha
aaa
in
mov
leave
push
sti
add
rcrb
jno
dec
aaa
pop
call
mov
inc
adc
push
push
movsl
aas
push
jne
cli
pop
push
out
mov
adc
inc
mov
jae
jae
add
imul
and
jmp
testl
fcomps
add
addl
enter
lahf
push
pop
pop
xchg
push
push
outsl
xor
add
add
mov
push
jno
imul
mov
bound
jmp
adc
scas
divl
cmpsl
roll
mov
xchg
inc
dec
sbb
jnp
orb
insl
das
cmp
dec
xchg
add
mov
jl
jb
orb
or
std
test
adc
mov
shll
es
add
stc
dec
sub
jmp
gs
pop
gs
dec
and
push
add
hlt
mov
imul
mov
aas
sbb
jo
ret
jno
insl
fistpl
daa
adc
icebp
in
ds
cmp
movsl
dec
out
and
pop
cltd
and
adc
test
ret
inc
filds
cld
pop
ret
fdivs
fcoms
adc
lods
cld
sbb
jnp
fnstenv
imul
mov
and
insb
push
movsb
sti
push
inc
addr16
je
loopne
mov
jg
jno
xor
addr16
sbb
adc
mov
pop
mov
xchg
and
cmp
push
xor
mov
std
add
cmpsb
imul
adc
push
mov
mov
imul
loop
sub
inc
push
jo
mov
mov
push
cmc
jo
std
cs
jbe
lahf
js
mov
andb
jp
js
fbld
dec
fnstcw
push
or
mov
pop
jne
or
and
pop
lcall
inc
push
jmp
out
outsb
mov
int
xor
or
xlat
jmp
or
icebp
mov
sbb
or
rcrl
cmp
sub
dec
pop
aaa
dec
inc
dec
lcall
mov
ja
sahf
in
push
dec
in
or
push
mov
insb
shlb
xchg
ret
mov
fs
and
mov
lods
es
das
mov
xor
pop
inc
or
pop
cmc
inc
aaa
icebp
push
ljmp
inc
repz
fdivrs
and
inc
daa
mov
in
adc
adc
and
or
add
ds
ja
test
addr16
push
and
in
leave
out
push
nop
test
notl
fldl
imul
movsl
icebp
jb
mov
popw
xchg
adc
and
stos
xchg
adcb
or
mov
imul
mov
jmp
leave
fxch
jnp
out
pusha
dec
pop
addr16
push
enter
mov
mov
fsubrp
inc
fcompl
mov
jb
fs
push
clc
rclb
xchg
jbe
xor
daa
xchg
mov
scas
add
test
clc
or
xlat
lock
call
xchg
arpl
add
mov
dec
in
mov
push
jo
xchg
fsubrl
into
fbstp
inc
insb
stos
ficomps
or
jno
aas
mov
cld
dec
sbb
push
push
xchg
add
inc
xor
repz
xchg
lods
xor
adc
daa
sub
pop
mov
out
jae
aad
inc
cmp
mov
rcr
insb
fld
mov
stc
add
mov
mov
jl
jmp
add
mov
xor
je
popa
push
mov
or
hlt
into
fdivr
adc
shlb
add
lock
mov
push
lcall
xor
add
xor
adc
lock
push
in
sbb
pop
loope
adcb
stos
dec
mov
add
jp
sti
xchg
lcall
sub
jb
add
je
sub
and
xchg
imul
sti
ds
stos
out
mov
dec
sbb
xor
fldcw
pop
pop
jno
and
fs
mov
mov
mov
push
test
mov
lods
mov
fisttps
jl
inc
es
fdivrl
add
push
sub
xchg
repnz
and
cld
cmp
xchg
sub
out
mov
push
aam
pop
push
rcll
dec
sbb
pop
inc
xor
inc
lock
mov
movsl
jmp
std
in
jnp
shl
cli
outsb
ja
aaa
add
mov
repz
jg
dec
dec
loope
shrb
jge
xor
sbb
push
nop
das
ss
xchg
mov
add
add
inc
xchg
fsubr
ret
fs
fildll
fidivs
xor
aam
push
jno
or
pop
jmp
mov
in
test
stos
or
fucomp
in
add
push
add
lock
dec
fucomip
xchg
enter
push
mov
jne
jecxz
icebp
in
clc
dec
sbb
repnz
insl
add
adc
imul
icebp
movsl
adc
int
leave
xor
stos
out
fisubs
fildl
mov
cmp
xor
imul
fwait
test
xor
mov
aam
pop
sbb
or
loopnew
sti
push
cli
testb
subb
imul
sbb
aas
adc
outsb
cmp
sti
out
mov
cmpsb
cld
mov
dec
sarb
mov
inc
nop
imul
out
cmp
aad
adc
sub
push
dec
sbb
inc
sub
sub
pop
gs
sub
sahf
enter
jg
xor
data16
aam
adc
cmp
adc
mov
jmp
fdiv
hlt
jbe
cmp
dec
add
pusha
ret
fs
jp
mov
cmpsb
into
push
cmc
std
gs
rcrb
aaa
add
es
lods
loop
xlat
xor
or
xor
in
adc
add
addr16
sub
jecxz
pop
sahf
pop
sbb
mov
and
outsb
das
enter
jge
adc
adc
add
jge
xor
xchg
addl
cmp
testb
pusha
popa
insb
cmp
mov
dec
stos
fdivrl
push
dec
int3
push
test
sub
mov
xlat
cmp
jle
mov
sti
sub
ja
mov
cmpsl
mov
data16
mov
in
pop
lods
int
test
fistpl
jle
clc
jno
dec
or
es
and
icebp
mov
sub
dec
or
andb
pop
jg
lea
jbe
je
fstl
test
mov
fldt
fimuls
xchg
cmp
dec
pop
loope
dec
pop
shl
daa
xchg
out
sbb
jmp
dec
sarl
addb
push
pop
insl
mov
dec
movsl
mov
lret
movsl
sti
xchg
push
cwtl
test
movsb
cmp
jle
jmp
lret
xchg
pop
scas
lods
in
pop
test
jae
mov
stos
cmp
fsubrl
jecxz
push
std
push
jmp
mov
out
jl
mov
fsubrs
fs
mov
in
out
pop
or
dec
ds
test
lahf
repnz
int3
ljmp
xor
add
mov
and
and
or
and
data16
dec
xchg
lock
fimull
aaa
and
inc
cli
pushf
ljmp
gs
clc
add
xchg
xor
mov
repnz
xor
adc
push
dec
pop
pop
xor
mov
cmp
popf
cmp
popa
cmpl
cmp
or
inc
inc
xchg
bound
sarl
cmp
ja
dec
ficompl
inc
loopne
stos
xor
out
lret
aaa
popa
call
sub
and
adc
push
xchg
xor
add
lret
in
sahf
pop
xor
data16
xchg
enter
jnp
pop
cmp
out
xchg
sbb
mov
pop
lods
inc
loop
aaa
mov
call
lods
jbe
dec
jo
sub
out
fimull
loopne
push
jmp
xor
push
sub
adc
sub
dec
in
add
jmp
jmp
pop
xchg
xor
in
push
cmpb
dec
jecxz
fwait
scas
push
lea
mov
shl
sub
dec
cmp
sbb
imul
push
mov
in
cmp
aas
jo
sahf
gs
dec
imul
hlt
mov
cmp
subl
lret
insb
shrl
inc
jge
or
push
movsb
inc
movsb
pop
daa
dec
mov
jno
ds
sbb
or
or
insb
and
jo
ss
bound
nop
das
ss
sbb
jl
mov
push
mov
dec
jo
in
mov
dec
mov
jge
in
mov
into
pop
mov
out
test
mov
fisubs
mov
das
xchg
and
sbb
pop
ret
andb
pop
test
dec
ret
int3
jbe
lods
and
pop
lods
movb
sbb
push
push
les
out
jecxz
pop
cmp
in
jp
call
ja
mov
jno
pop
mov
xchg
pop
repnz
jns
add
cmpsl
inc
insb
lods
and
popf
or
xchg
mov
sbb
outsl
bound
add
mov
pop
ljmp
mov
xchg
negb
inc
sbb
jmp
mov
pop
lea
xchg
mov
out
mov
aam
rol
adc
jns
sahf
andl
cs
dec
mov
cmp
or
daa
add
mov
pop
cmp
rcl
insl
ret
push
rol
jne
lret
xor
nop
movsl
mov
std
repz
add
adc
cli
cmp
setl
add
roll
push
mull
int
idivl
xorl
add
std
jns
mov
pop
push
jecxz
jns
adc
rorb
addl
jae
outsl
out
mov
pcmpgtb
and
fsubl
adc
rorb
hlt
jb
pop
sahf
lret
xchg
push
and
in
inc
shr
mulb
xor
pop
shrl
je
or
icebp
fildl
out
mov
xchg
in
dec
lea
mov
aas
imul
cli
or
pusha
js
popa
push
rcrl
mov
call
jl
into
nop
daa
and
fwait
sti
cmp
pop
sbbb
mov
jo
jge
cmp
push
cmc
sub
inc
push
aaa
movl
mov
lods
sub
jp
inc
jnp
icebp
inc
xor
mulb
or
xlat
movsl
cld
std
cmc
mov
pusha
fimuls
movsl
jbe
pop
sarb
dec
and
push
shll
mov
inc
push
clc
sbb
inc
jnp
icebp
jmp
shrb
mov
mov
inc
in
lret
fdivl
push
in
lods
call
psllw
sub
insb
jns
xchg
scas
cmp
pusha
pop
push
lods
mov
inc
pop
sbb
hlt
cmp
fs
popf
cmp
leave
xor
loope
mov
push
fldcw
shrb
sti
sbb
mov
push
or
es
roll
sti
sahf
jns
shl
rcl
push
icebp
pop
sbb
sbb
fwait
add
inc
xchg
imul
xor
mov
outsl
cld
cmpps
mov
dec
aad
in
push
enter
mov
or
aad
push
roll
push
sub
fimull
or
leave
sbb
or
xor
xchg
jmp
jle
inc
and
scas
ror
and
or
push
inc
sbb
icebp
mov
cmpsb
xor
xor
clc
fidivrs
iret
data16
in
inc
rcl
xchg
jl
or
sub
subb
mulb
cmp
and
data16
jb
scas
mov
js
lods
adc
ljmp
xor
inc
push
jp
aas
popa
push
push
test
push
rcl
movsb
cmp
add
leave
cld
stos
fidivrl
addr16
mov
ret
dec
leave
mov
xchg
cmp
pop
adc
inc
leave
ds
push
lret
cmp
scas
jb
jbe
out
iret
ljmp
and
pop
xlat
fs
mov
cmp
adc
repnz
mov
or
cltd
xor
cmp
mov
mov
jg
rorl
pop
fld
or
sub
jp
and
adc
or
es
mov
add
inc
ljmp
jno
arpl
add
xchg
lahf
push
xchg
adc
pop
dec
mov
ret
lds
cmp
fdivrl
sub
push
and
sarb
out
addr16
test
repz
cmp
mov
shlb
add
sub
outsl
sahf
cmp
mov
pop
xchg
out
or
cmc
icebp
xchg
sti
pushf
jnp
lds
jmp
sbb
aaa
mov
jl
and
and
xchg
jnp
add
dec
stos
jmp
mov
or
ljmp
lock
dec
flds
hlt
cmp
dec
mov
out
sbb
inc
xchg
jp
orb
addr16
fmull
or
data16
fidivrl
cmp
popa
clc
mov
out
jg
rcl
push
inc
pop
subl
dec
imul
xor
jmp
jnp
xor
xchg
fsubs
mov
add
es
xor
iret
std
pop
out
test
xor
outsl
repnz
mov
movsl
push
aas
fisttpl
insl
jb
data16
pushf
ss
add
lret
xor
pop
pop
adc
cmp
jg
stc
dec
mov
andb
add
dec
subb
leave
bound
cli
push
mov
inc
xor
popa
and
pop
leave
sub
call
add
test
leave
jmp
lea
sti
inc
and
fs
mov
or
xor
xchg
pushf
push
shrl
mov
stc
je
ret
pop
sbb
ror
sub
inc
inc
ds
insb
xor
nop
popa
out
ss
sub
mov
sbb
cmp
sbbb
and
cwtl
rol
push
mov
insl
cmp
jecxz
xor
jbe
or
inc
xlat
je
jecxz
in
and
xchg
lock
mov
push
xchg
adc
fildll
fisubrs
xlat
repz
sub
adc
push
mov
xor
jbe
xlat
mov
dec
jge
pop
call
sbb
jl
fnsave
push
ja
mov
in
mov
xorb
xlat
adc
out
int
mov
mov
outsl
iret
pusha
dec
xchg
cmp
loopne
dec
loop
insl
pop
fwait
popa
test
lahf
subb
sbb
sub
push
mov
jge
dec
fnstcw
push
inc
insl
add
orb
aad
xorb
ret
testl
ss
jae
xor
loope
cmp
rolb
fidivrl
sbb
pop
pop
push
je
hlt
jae
popf
jno
push
mov
xchg
and
mov
cmc
and
sbb
les
arpl
sbb
push
jge
pop
cmp
pop
cmp
mov
add
pop
insl
pop
fdivrp
pushf
into
fs
ret
ret
out
testl
lahf
cmpsb
insl
sarl
push
popf
pop
dec
or
jae
jmp
lret
iret
or
insl
dec
push
push
push
sub
sbb
xor
lret
pop
addr16
inc
sub
push
lods
dec
test
test
push
xor
jp
je
jg
lea
push
std
jg
loope
ds
and
inc
cmp
add
mov
clc
inc
xchg
xor
push
push
xchg
pusha
sahf
adc
scas
sub
mov
sub
cmc
int3
sub
push
inc
or
sub
xor
xlat
jne
pop
fildll
scas
push
mov
rolb
repz
cmpl
cmp
popf
xor
mov
aaa
fsubl
mov
push
inc
stos
das
mov
push
jecxz
dec
cmpsb
mov
ror
jb
push
push
pop
sub
inc
cmpsl
dec
sti
push
and
push
cs
or
inc
fdivr
jle
cltd
and
jbe
inc
xchg
in
cld
cmc
arpl
int
xor
fwait
cli
xlat
scas
adc
dec
fdivr
jne
mov
jg
and
lods
inc
rol
stos
add
sub
lock
movsb
mov
add
pop
ja
or
stc
cmc
lahf
fidivs
push
inc
push
mov
jge
cmp
adc
add
sub
loope
dec
pop
and
loope
cmp
adc
add
or
adc
xor
pop
mov
je
jle
inc
inc
xchg
ja
xor
inc
fs
jge
cmp
data16
notl
dec
movsl
movsb
jae
in
mov
insb
adc
outsb
roll
ja
pop
mov
out
js
fcomi
fdivrl
inc
lods
jb
sub
cmp
hlt
rorb
jg
add
lret
mov
lea
jno
repz
adc
repz
pop
jecxz
das
adc
ror
enter
movaps
mov
clc
cmpl
cmp
data16
adc
ret
or
pusha
mov
incl
js
call
sub
sbb
adc
sbb
inc
cmp
xchg
mov
pop
push
rcrb
mov
dec
pop
dec
mov
and
lahf
imul
adc
mov
movsb
fildll
xchg
mov
les
push
sub
mov
xor
insl
outsl
and
xor
pop
and
mov
jle
out
mov
mov
in
add
lcall
and
add
out
push
idivb
mov
cmpb
rolb
jge
in
enter
addr16
dec
sub
pop
mov
lret
ds
pop
lock
sub
pextrw
add
pop
enter
fdivr
mov
add
mov
scas
mov
dec
mov
adc
sub
in
enter
cmp
cmp
or
xor
jge
cmc
mov
ret
pop
hlt
je
std
push
pusha
clc
inc
xchg
mov
lds
cmpb
inc
mov
jb
cmp
or
push
fxch
mov
adc
aad
bound
xor
jb
fstps
sub
mov
inc
jl
stos
lcall
fistpl
xchg
outsb
rolb
aas
jno
and
cmp
int3
cmp
inc
nopl
iret
enter
in
sbb
xor
andb
sub
faddl
stos
and
lock
mov
shl
jns
icebp
iret
gs
test
aam
ljmp
sbb
xor
clc
es
xor
dec
push
xchg
std
or
xchg
mov
fmull
daa
cmp
orl
jbe
shrl
adc
pop
mov
add
xorl
mov
mov
jge
ljmp
push
xchg
pop
add
sub
jp
mov
cmpsb
push
js
or
xor
fadd
jl
hlt
stc
call
movsl
and
cmpb
push
jge
push
or
or
dec
hlt
addr16
dec
aaa
adc
add
or
or
push
inc
pushf
fsts
jo
lods
dec
xor
mov
pop
std
nop
jl
adc
xchg
pop
or
mov
jl
mov
push
or
lcall
sbb
shlb
push
out
mov
into
cwtl
out
jl
mov
pushf
jno
push
lahf
xchg
cmpxchg
add
aaa
xorb
xor
dec
pushf
dec
jno
out
push
mov
outsb
loop
mov
hlt
das
shll
out
fwait
test
loope
shll
push
push
add
xor
and
xchg
push
sar
add
pop
xor
xor
sub
push
xor
cmpsl
cmpsl
pop
xchg
lcall
enter
mov
pushf
and
into
gs
test
sbb
insb
or
pop
dec
cmpsl
jp
pop
mov
push
lods
divb
cmp
outsl
mov
and
rcl
popf
xor
repz
fisttps
outsl
inc
fs
scas
cmpsl
imul
jae
stos
xor
pop
testb
pop
mov
lea
pusha
cmp
sbb
cltd
push
fwait
xor
test
push
lcall
xor
mov
cmp
pop
pop
add
cmp
xchg
divb
jg
inc
stc
sbb
push
adc
push
add
xor
mov
clc
add
pop
stos
sub
adc
and
sub
repz
mov
pop
pop
cltd
xor
xchg
fs
push
inc
mov
mov
xor
fchs
mov
pushf
or
scas
push
cwtl
cmc
pushf
das
ror
aad
xor
stc
cmp
xor
ds
push
jo
or
adc
xchg
inc
fldt
dec
xor
insb
jns
fldl
push
fwait
repz
sub
test
repz
mov
jo
xchg
mov
les
or
movsb
outsb
stos
inc
mov
pop
push
jb
xor
push
cltd
mov
std
lods
and
in
cld
mov
filds
shr
dec
lods
inc
rclb
lret
in
mov
push
inc
or
or
lods
or
jnp
sub
fs
cmp
mov
fstl
add
mov
jae
sub
adc
xor
pop
mov
push
jnp
fwait
mov
inc
lock
lcall
cmpb
dec
in
inc
mov
mov
dec
xchg
xchg
insb
pop
jle
in
fwait
iret
jno
iret
imul
cmpsl
adc
add
push
jno
mov
clc
push
ja
or
gs
sbb
pop
in
or
pop
push
jbe
push
out
push
mov
push
pop
icebp
ss
addr16
out
xor
test
push
or
ficoms
pop
lcall
and
mov
xor
std
and
push
pusha
fistpl
pop
int
push
cmp
push
jmp
mov
dec
in
dec
inc
inc
les
cmpl
std
xchg
sub
and
sub
ljmp
add
fnstsw
stos
dec
sti
and
inc
sub
dec
fidivs
sbb
je
and
int3
dec
and
push
mov
xor
inc
xor
mov
ja
in
dec
dec
lret
ljmp
or
in
pop
mov
subb
and
imul
fisubl
out
pop
cmp
fs
popa
iret
orb
sub
loope
xor
lret
xor
xor
je
sbb
into
cs
jmp
or
jae
repz
add
clc
shrb
cli
popl
fmull
push
hlt
stc
idivl
stc
negl
fiadds
lcall
aas
cli
and
lds
js
mov
adc
mov
pop
in
test
insl
loope
iret
dec
enterw
leave
jne
mov
adc
nop
pop
dec
dec
mov
test
xchg
int3
out
jge
cmc
or
sub
sahf
jns
stc
mov
cmp
in
shlb
es
pushf
mov
jmp
mov
jb
push
dec
cmc
or
call
cmp
mov
push
mov
imul
push
lock
fwait
xor
push
mov
push
fwait
sub
and
xchg
rcrl
rolb
cmc
imull
data16
xchg
pop
mov
fucom
mov
push
les
mov
cmc
sti
jns
mov
dec
or
lea
not
push
aam
mov
mov
fwait
or
out
aam
js
pop
aas
stc
fcoms
mov
dec
pop
repnz
push
and
sbb
lret
shrl
mov
and
rcrl
cmp
jle
pop
push
mov
mov
subl
mov
je
xchg
sub
mov
ret
ja
add
je
push
test
sbb
sbb
mov
addl
psubq
jmp
jle
lahf
ss
mov
mov
daa
adc
nop
daa
idivl
push
aad
xchg
scas
xchg
add
es
insb
stos
mov
or
int3
out
xchg
sbb
adc
add
negb
mov
mov
sbb
stos
sbb
xchg
and
inc
jge
insl
das
mov
dec
or
cmpsl
and
jnp
insb
sub
add
gs
xchg
movsl
cmp
add
jns
cmp
pop
lahf
out
lods
add
dec
cmp
negl
push
or
inc
cmpsb
and
lahf
xor
jns
in
and
movsb
lods
mov
in
xor
pop
dec
out
mov
cltd
pop
arpl
jb
jle
or
pushf
lods
inc
into
inc
and
out
sarl
pop
pop
pop
shll
andb
fsubs
pop
out
push
fsubrs
divb
sbb
sbb
sub
inc
and
je
push
out
dec
fldenv
dec
mov
sbb
fimull
sbb
pop
shll
cmpl
arpl
fucomip
ret
testl
aam
pop
loopne
dec
push
xchg
cmpsb
stc
stos
cmpsl
frstor
inc
jl
mov
push
fxch
inc
pop
in
pop
mov
mov
repnz
sbb
mov
or
add
repz
add
mov
lock
loop
push
jl
out
inc
imul
out
and
fwait
mov
stc
and
lea
icebp
mov
adc
jo
jae
stos
xchg
fadds
fsubrl
pop
adcb
insb
rorl
pop
pop
mov
mov
aas
push
sbb
or
scas
fldenv
adc
jno
out
sub
shrl
or
pusha
adc
mov
ret
cmp
lods
adc
enter
sbb
and
cwtl
ds
mov
and
fnsave
or
or
sbb
fcomi
ds
adc
rolb
dec
iret
or
movsl
push
call
lret
mov
pop
shrb
inc
and
pusha
loope
pushf
xor
adc
xorl
ss
data16
clc
leave
iret
movsb
stc
adc
pop
or
and
outsb
stos
mov
shlb
leave
gs
mov
les
arpl
add
sti
mov
int3
data16
xor
inc
cmc
sarb
mov
jb
stos
mov
push
jb
push
cwtl
ds
ret
insb
cli
sbb
loop
mov
mov
jl
ja
sub
cmpl
in
inc
push
sti
cltd
cmc
test
pop
jg
into
xor
ja
shrl
shr
ss
repnz
mov
jno
or
les
imul
sbb
es
jmp
pop
les
add
mov
push
xchg
outsl
xor
sub
pop
and
mov
push
popa
sbb
xchg
je
inc
out
adc
fs
lock
cld
jmp
outsb
inc
in
jne
xchg
pop
add
movsl
lahf
fsts
jle
mov
xor
cmc
xchg
jbe
push
ljmp
jno
xchg
iret
outsb
pop
sbb
repnz
rcl
jle
mov
popf
push
loopne
pop
adc
mov
adc
lods
jno
popf
leave
je
sti
outsl
bswap
movsb
add
pop
mov
test
adc
data16
pop
es
sbb
pop
lods
inc
inc
les
mov
ficomps
sub
dec
outsl
inc
in
bound
push
jmp
imul
xchg
imul
cmpsl
loop
aad
rolb
push
movsl
xchg
je
jno
or
cmp
mov
adc
int3
iret
mov
pop
jb
adc
std
insb
cmp
arpl
mov
cmp
sub
mov
add
or
add
je
test
loopne
adc
lods
cmpsl
ds
xchg
dec
xor
scas
mov
pop
idivb
adc
push
stos
sub
sub
jne
ret
xor
data16
cmp
push
mov
repnz
out
out
test
cmp
push
imul
out
sahf
int3
scas
fisubrs
xor
test
push
test
push
sbb
bound
dec
xchg
and
sbb
in
ret
jge
xchg
cs
sbb
push
mov
mov
pop
push
mov
in
daa
inc
dec
mov
jne
fimuls
push
leave
and
jne
mov
inc
je
jecxz
xor
test
mov
xchg
cld
ljmp
adc
or
mov
out
push
lds
mov
dec
mov
xlat
and
push
sbb
jno
xchg
mov
loope
push
inc
out
out
out
sub
push
arpl
mov
fnstenv
mov
push
push
jp
in
stos
idivb
fimull
sub
or
add
test
and
daa
and
mov
imul
add
xor
pop
sbb
inc
mov
mov
adc
mov
xor
pusha
aad
ret
ja
insl
inc
jb
dec
mov
and
push
push
lahf
cmpsl
xchg
nop
std
call
or
je
icebp
testl
in
lret
lcall
cmp
sub
js
inc
sti
aaa
ss
out
or
out
xorb
xchg
mov
dec
je
jnp
mov
mov
mov
je
test
jns
mov
or
sub
pushf
jnp
pop
and
call
out
xchg
stos
shlb
loope
rcrl
push
sub
scas
sarl
cmpsb
jle
sub
cs
mov
inc
and
inc
fcomps
adc
inc
cmp
adc
int
fwait
aad
mov
bnd
ret
push
mov
push
shrl
xor
arpl
xchg
pop
cmp
cmp
mov
add
xor
out
cld
lret
icebp
test
pop
das
jg
mov
outsl
es
or
mov
mov
xchg
lahf
call
bound
dec
or
mov
jge
addb
dec
mov
aam
lahf
loopne
icebp
xlat
pop
jmp
movsl
movsb
inc
pop
test
aaa
in
mov
fwait
push
xchg
into
out
jo
loop
and
push
insl
inc
add
mov
in
mov
mov
out
jnp
mov
sbb
xor
gs
mov
loope
leave
lret
xchg
mov
rep
sub
aad
testb
mov
out
xor
loop
loop
into
syscall
mov
pop
sahf
daa
lret
xchg
push
add
inc
dec
push
adc
inc
lret
mov
xchg
dec
xor
mov
sahf
jle
ret
mov
mov
sub
add
test
xchg
xlat
lahf
sti
sub
dec
pop
inc
cmp
lcall
int
fwait
loope
test
mov
push
mov
push
popf
repz
int3
push
and
pop
ds
mov
xor
iret
mov
mov
fwait
xlat
ret
push
xor
xchg
jge
push
ljmp
pop
shr
dec
sahf
push
sbb
pop
mov
mov
scas
test
addr16
mov
and
mov
jmp
mov
push
test
inc
fisttpl
xchg
dec
or
mov
sub
jns
cmp
outsb
push
mov
gs
sbb
inc
pop
xor
ret
adc
mov
fisubrl
out
push
stos
mov
mov
cmpsb
shlb
mov
sub
push
out
mov
lahf
stos
popa
movsl
repz
pop
ret
cli
sub
imul
or
inc
std
sub
mov
cmpsl
scas
in
sbb
cmp
push
pop
je
cmp
inc
sahf
data16
divl
inc
adc
or
add
push
jno
insl
nop
dec
fnstsw
jbe
repnz
movsb
sti
add
ret
sub
stc
fiaddl
jg
inc
je
jl
inc
in
dec
test
scas
aam
jmp
pop
pop
xor
add
in
sub
popf
sub
sbb
cmpsb
or
lret
popa
jo
imul
hlt
test
shll
mov
mov
push
or
or
decl
decl
daa
mov
or
movsl
loop
sub
fstpl
lret
je
pop
xchg
outsb
inc
leave
cltd
imul
das
xor
out
mov
xchg
loope
gs
sbb
pop
pop
jnp
lret
pop
cmp
mov
sbb
ret
bound
loopne
mov
hlt
add
and
fcmovnb
sbb
out
scas
xchg
xor
movsl
std
or
fwait
cmc
ljmp
xchg
scas
or
and
fucomip
xchg
scas
pop
sbb
cwtl
jbe
jo
popa
push
out
les
pop
pop
sub
sub
neg
dec
pop
rol
adc
lret
sub
mov
xchg
xchg
push
lock
outsl
fnstcw
leave
cltd
push
add
in
jmp
dec
aad
cs
jo
and
jbe
xchg
movsb
cmp
pushf
jge
xor
xor
int3
jg
jmp
imul
xor
cmpsb
jp
inc
inc
jp
and
fistps
into
aaa
test
xchg
idiv
push
push
or
jge
mov
fs
and
pop
adc
in
lret
sbbb
mov
dec
push
lcall
sbb
cmp
je
dec
pop
js
outsb
shrb
cs
fwait
mov
push
pop
sbb
xlat
mov
xchg
add
xchg
test
add
add
push
outsl
cmpl
cwtl
push
xchg
cmpsl
or
sbb
lods
cmp
in
push
xor
mov
cmp
mov
xchg
hlt
mov
dec
pushf
dec
cltd
sbb
sub
sahf
dec
shll
leave
fildl
jo
test
dec
add
push
clc
repnz
mov
stc
or
je
mov
ds
or
mov
jp
pushf
or
repnz
inc
call
testb
dec
push
push
xlat
aad
sbb
into
pop
sub
or
xchg
xor
xchg
mov
test
xchg
push
out
aas
fisttpll
outsl
push
adc
pop
lock
and
push
ja
xchg
loop
andb
cmp
or
pushf
cwtl
daa
jle
test
xchg
inc
xor
jg
loopne
mov
mov
dec
jb
daa
in
sub
fisttpll
repnz
push
test
inc
movsl
fs
pop
cmpsl
ds
push
pop
rolb
int
jmp
test
push
call
xchg
push
sbb
rolb
stos
sti
inc
arpl
push
add
mov
cli
inc
into
sbbb
rcll
fbld
mov
jae
cmpsb
repnz
pop
and
cmp
daa
nop
jo
ds
div
pop
add
repz
xchg
in
test
std
add
jo
push
movsb
in
jns
cmpsb
loope
mov
popa
jmp
mov
mov
lret
adc
xor
pop
xor
sbb
inc
xor
push
shll
incl
jmp
adc
ss
frstor
push
lea
je
xor
jmp
push
call
inc
neg
rolb
dec
bound
pop
xlat
test
shlb
mov
mov
push
movsb
mov
lret
popf
stc
xchg
popf
sub
ja
int3
arpl
and
icebp
data16
loop
dec
dec
add
in
cmp
outsl
add
or
push
and
rsm
jge
mov
mov
int
push
stos
cmp
pop
int
dec
iret
outsb
mov
push
and
inc
inc
ljmp
test
popa
add
leave
out
mov
dec
push
outsb
jb
mov
mov
fsubl
int
sbb
mov
loopne
fdivrl
cmpsl
test
fnstenv
jg
fsubp
pop
mov
push
int3
push
pushf
andb
shlb
pop
fdivl
sub
dec
inc
pop
xorb
cmp
fdivr
mov
imul
fdivrs
cltd
lret
leave
mov
and
add
add
fimuls
mov
mov
fstpt
pusha
adc
cmc
pop
cs
jmp
lea
mov
lods
inc
rorb
cltd
pusha
ss
mov
leave
pop
push
out
mov
jp
sub
push
ljmp
cmp
insl
les
or
dec
popa
push
sahf
subb
insb
xor
mov
out
mov
into
xchg
test
pop
mov
js
mov
repz
adc
scas
frstor
adc
sub
mov
shrl
ffreep
xchg
lea
pop
mov
nop
push
jae
xor
cmc
xchg
mov
js
outsb
movsb
loopnew
jmp
in
repz
and
pop
lahf
call
dec
addr16
call
or
jle
ffree
or
adc
xor
out
add
cs
pushf
push
sub
cli
jne
aad
sub
shl
icebp
adc
pushf
fwait
xchg
push
ss
inc
dec
xchg
call
mov
pushf
es
cmpsb
inc
push
call
add
inc
cmp
cmpsb
fcompl
jo
rcl
les
fdivrl
xchg
cmpl
and
pop
or
inc
sar
inc
lea
gs
shr
stos
mov
adc
push
dec
push
push
in
mov
ret
je
pop
sub
dec
and
rcrl
xor
adc
lea
dec
cmp
aam
and
mov
int3
arpl
add
in
popf
mov
mov
mov
fsubrs
jae
movsl
xor
ja
inc
in
sarl
subl
test
add
cmpsl
mov
fistl
dec
sti
xchg
test
jmp
insb
cltd
xor
inc
imul
stos
mov
or
xchg
cld
xor
add
inc
jp
and
cli
push
xchg
outsb
lret
push
dec
cmp
gs
enter
repnz
fisubs
jbe
sub
sub
sub
push
push
dec
popf
mov
adc
mov
pop
nop
push
cwtl
test
mov
or
sar
out
xor
xlat
sbb
push
mov
jnp
lods
mov
sbb
rclb
pop
divb
iret
cmpsl
jecxz
loopne
adc
mov
out
test
dec
dec
adc
mov
pop
pop
loop
je
jg
mov
push
push
fisubrl
mov
mov
sbb
pop
mov
rorl
push
out
out
push
icebp
bnd
inc
inc
adc
or
ret
sti
sahf
cmp
pop
std
pop
sar
mov
jne
lahf
and
scas
cli
das
addr16
sub
imul
rorb
mov
ficoml
add
cmp
fldz
outsb
clc
pop
sti
add
cmpsl
call
mov
scas
std
cmp
mov
aad
ds
and
sbb
sub
pop
jecxz
sbb
mov
mov
pop
ja
rcrl
bnd
insb
cltd
jns
into
xor
movsl
ds
test
xor
out
negl
fimull
adc
int3
mov
std
xchg
cmp
adc
int3
cmpsb
xchg
bound
xlat
aas
lret
jmp
push
sub
xchg
ret
add
mov
xor
lret
jmp
ds
enter
xchg
lods
insb
xchg
hlt
mov
or
popf
stc
mov
add
inc
popa
sahf
inc
xchg
cli
js
dec
outsb
xacquire
mov
in
sbb
int
mov
jb
sti
fs
decb
shll
jp
out
inc
dec
mov
sbb
lock
jb
push
pop
into
mov
mov
in
clc
mov
arpl
mov
cmp
cmp
aad
fnsave
push
icebp
mov
rcl
fwait
jbe
icebp
push
loopne
xchg
lret
cli
xor
xchg
clc
push
dec
fstps
into
out
repz
aam
das
inc
cli
xchg
mov
cli
addr16
or
xchg
push
outsl
int3
bound
sbb
scas
jg
das
and
mov
jp
loop
lea
xor
mov
add
insl
js
shrb
sbbb
jle
repnz
popf
out
xchg
rclb
int
ljmp
je
jecxz
mov
out
mov
cmc
jge
les
lcall
dec
push
test
popf
stc
std
adc
out
adc
filds
or
sbb
and
sub
sti
ret
rclb
bound
sti
les
lods
or
inc
dec
dec
jb
sub
mov
push
or
or
jbe
lea
es
mov
stos
fcomps
test
jp
mov
and
test
mov
sub
outsb
rorb
jl
imul
and
into
adc
data16
cmp
xchg
pop
popa
and
clc
sahf
out
movsl
cmpsl
sbb
jo
cli
imul
popf
adc
xchg
add
movsl
adc
pop
pop
out
inc
sbb
mov
arpl
stc
xchg
test
insl
jnp
loop
inc
fwait
add
jo
xchg
loop
movsl
jae
sub
push
lcall
cwtl
pop
or
jnp
push
mov
pop
cmp
mov
ds
pop
repz
gs
mov
and
orl
lret
pop
ss
flds
aam
xchg
cmp
sbb
fsubl
xchg
sub
push
out
pusha
or
ljmp
jno
xchg
insb
add
es
cmp
cltd
fcoms
in
cmc
sbb
xor
xchg
and
mov
mov
sbb
insl
popl
int3
xor
add
es
mov
les
test
jo
out
sub
xchg
mov
pop
xor
loope
inc
push
insl
dec
aad
ror
sbb
push
fcompl
movb
aam
xchg
fstp
xor
push
add
mov
lea
adc
test
popf
jmp
movsb
and
sbb
mov
pop
cld
fcmovbe
shlb
mov
xor
jb
inc
popa
loopne
fistpll
add
mov
push
movsl
push
mov
sbb
in
jmp
pop
repnz
cmpsl
loopne,pt
pop
jp
adc
jl
test
lds
lods
mov
pusha
imul
ret
cmp
push
imul
xor
push
pop
mov
aas
jp
lea
pusha
stc
xchg
pop
std
in
dec
sbb
inc
xchg
imul
cmp
jmp
out
jl
aas
jo
xchg
loope
cmp
loop
xchg
fld
rorl
dec
xor
fwait
mov
sti
data16
adc
std
push
and
flds
mov
mov
in
jb
fldenv
inc
pop
test
adc
orl
sbb
shlb
incl
dec
not
cmpsl
inc
sbb
cmpxchg
adc
call
mov
lret
arpl
push
and
clc
pop
out
jge
sbb
lret
add
mov
shl
std
pop
mov
loope
mov
jmp
rcll
xchg
loopne
add
inc
sbb
std
add
test
loopne
inc
mov
cmpsb
loop
sahf
adc
in
jbe
daa
mov
sbb
pop
movsl
in
test
fists
mov
push
mov
rcrl
insl
cmc
jge
cltd
push
sbb
xor
push
out
inc
push
test
mov
flds
test
inc
clc
mov
pop
jae
dec
sbb
jns
repz
xor
push
and
adc
ret
lret
mov
mov
inc
loopne
fimull
fildll
div
outsl
inc
push
lahf
ja
notb
or
fs
out
iret
add
fsubrs
aad
xchg
xor
add
fs
jge
or
sbb
sbb
mov
loopne
cli
loope
jle
rorl
jmp
push
sbb
cmp
mov
daa
out
aam
mov
loope
push
rcrb
arpl
mov
stc
or
jecxz
std
jo
cmp
mov
pop
xor
int3
xchg
aad
xchg
mov
sbb
lahf
mov
iret
and
icebp
push
lret
pop
pop
and
jg
enter
mov
cmp
mov
mov
cmpsb
ret
mov
jecxz
mov
popf
je
loop
mov
sub
stc
sub
movsb
mov
pop
jmp
movsl
sbb
pop
fnstsw
out
cmpsl
sub
repz
inc
lcall
mov
mov
jg
cmpsb
mov
adc
decl
sbb
pop
cwtl
jae
mov
or
mov
loope
jl
or
push
loope
sub
out
jns
adc
adc
cmp
mov
fdivrl
test
addr16
xchg
jle
push
adc
ljmp
call
lea
push
inc
sbb
pop
push
gs
pop
mov
xchg
jg
adc
jne
test
inc
push
addr16
dec
mov
adc
or
es
int
ja
push
sbb
fidivrs
das
xor
and
dec
and
cld
mov
icebp
cmp
mov
fdivl
add
in
into
inc
jmp
cmpsb
mov
mov
mov
adc
lock
and
xor
jbe
fldenv
lods
les
ficoml
sub
imul
lcall
stos
cmc
repz
mov
lods
xlat
movsl
sub
dec
add
shll
loopne
cmp
and
shll
mov
rorb
fwait
test
jmp
pop
cwtl
test
push
rorb
gs
push
pop
mov
jb
imul
mov
sbb
and
xor
adc
xor
xchg
aas
loope
shll
xlat
cmp
aaa
ljmp
fwait
jbe
popa
jle
xchg
pop
fucompp
inc
xlat
sbbb
repnz
jne
das
mov
fidivs
icebp
mov
mov
sub
sub
push
movsl
pop
int
cmpsb
and
fisttpl
cmc
xchg
and
sbbb
out
js
pop
lds
push
lock
mov
ja
fnstsw
mov
ret
imul
enter
mov
in
fwait
sahf
fwait
hlt
into
xor
jno
cmp
xor
inc
xlat
pusha
inc
fcoms
mov
int3
xor
or
mov
xor
call
inc
movsl
sbb
cmpsl
push
mov
dec
xor
lret
push
xchg
sub
mov
fldt
add
mov
mov
xchg
sarb
test
mov
and
fisubl
in
pop
pop
pop
pop
or
repnz
xchg
scas
rclb
mov
sbb
clc
inc
xor
daa
sbb
and
mov
push
or
cld
adc
test
inc
inc
xchg
ljmp
je
dec
sbb
sbb
cltd
stos
fs
test
sbb
enter
or
filds
pop
jg
cmp
rcrl
add
add
or
xchg
jle
or
ss
and
sbbb
pop
xor
cmp
mov
xchg
pop
imulb
lods
pop
adc
mov
movsl
inc
sti
cmpsb
cmp
in
inc
gs
loope
xchg
ljmp
add
or
pop
cmp
inc
in
loopne
pop
daa
cmp
mov
jb
popf
lcall
pop
or
jb
inc
push
jo
inc
inc
popa
xchg
dec
mov
dec
hlt
fisttpll
xchg
cmp
gs
inc
rcll
in
js
add
mov
aas
xor
xchg
jl
or
lock
popf
pop
xor
xchg
add
rolb
pop
lds
shlb
daa
inc
cld
ret
or
xlat
adc
fsubr
cmp
mov
aam
shufps
repz
and
fucomp
mov
mov
sub
dec
lods
jg
or
movsl
cmp
insb
js
pop
int3
mov
mov
sbb
add
xlat
lods
ja
mov
cmp
test
jae
sbb
arpl
adcl
mov
lcall
pop
icebp
ret
sub
xor
sbb
lcall
xchg
dec
fisubs
mov
stos
mov
fimull
shlb
cmp
sub
rcrl
mov
push
dec
test
insb
cld
mov
inc
in
iret
daa
pop
jmp
mov
sbb
out
xchg
sub
mov
inc
bound
cmp
jb
mov
xchg
pushf
addr16
popf
xlat
sub
rclb
clc
inc
rorl
mov
pushf
inc
xchg
xor
ds
push
mov
add
push
mov
and
not
movsl
jecxz
adc
imul
jg
cmp
sbb
xor
rclb
leave
cmp
outsb
inc
rorl
inc
add
mov
push
jns
inc
fistps
stos
add
pushf
mov
cmpsl
pop
out
mov
sbb
ret
loope
loop
inc
clc
xchg
lock
pop
cmp
sbb
stos
es
pop
mov
and
push
mov
add
mov
jnp
out
loop
stos
stc
ss
daa
in
xor
sbb
mov
aas
jle
loopne
push
sub
out
sarb
sahf
je
sti
mov
in
or
adc
push
notb
add
push
in
jbe
fs
stos
xlat
push
adc
mov
lock
dec
popa
fsubl
shrl
test
xor
lock
pop
lret
pop
loop
out
popf
add
sub
xchg
sbb
and
outsl
cmp
push
mov
pop
das
xchg
testb
lahf
pop
addr16
mov
cwtl
stos
addr16
push
push
cmpsl
jb
and
jmp
sub
mov
sub
mov
or
jecxz
inc
and
adc
mov
divl
sarl
roll
out
jne
pushf
cmp
xor
xor
and
js
aam
pop
or
dec
popf
lods
add
dec
pop
xchg
fs
jmp
shrl
cmpsb
push
out
or
cmp
repnz
notl
sbb
or
jae
aaa
cmc
push
fistpl
aas
cld
das
js
xchg
mov
shl
jl
test
outsb
ds
stos
es
mov
in
sbbb
hlt
fidivl
into
stc
cmp
push
sub
out
xchg
pop
and
sbb
fcmovu
add
fwait
jle
cmpl
pop
mov
int
fadd
icebp
push
xor
daa
sbb
xchg
jg
out
jae
xor
outsb
lods
pop
aaa
xchg
push
or
pop
xlat
lret
cltd
cld
cmp
push
mov
cmp
dec
mov
add
and
imul
daa
out
mov
clc
or
mov
xor
data16
mov
adc
adc
adc
cmp
inc
push
push
fisubl
mov
mov
iret
stos
and
mov
sarb
cmc
pop
mov
mov
out
push
nop
ljmp
cwtl
or
fdivs
xor
push
mov
mov
in
test
push
pop
xor
aad
popf
push
push
dec
xor
jle
enter
adc
popa
mov
push
and
fcoms
or
xor
into
mov
mov
leave
enter
fdivrl
leave
pusha
jo
push
or
adc
dec
pop
xchg
xchg
rorb
outsb
insl
sbb
add
ss
lock
push
jne
movsb
cmp
cmp
mov
xchg
jo
out
sti
in
call
mov
mov
adcb
sub
call
mov
roll
idivl
xor
dec
xchg
es
cmp
je
hlt
adc
adc
lret
pop
repz
jno
ja
mov
mov
in
cld
push
out
sbb
ficompl
jne
and
jle
out
stos
inc
xor
popf
fs
test
inc
inc
out
mov
cs
push
mov
addl
cld
hlt
aam
es
movsw
stc
cli
ret
sbb
repz
pop
insl
into
adc
in
jg
cmp
xchg
inc
xlat
lds
pop
movsl
lcall
mov
les
sbb
icebp
mov
mov
inc
or
cmpsb
mov
cs
fisttpl
mov
mov
push
frstor
xchg
mov
pusha
sti
jmp
mov
xchg
ds
adc
xchg
push
jg
addl
int3
jle
sub
push
xchg
lods
loopne
and
mov
mov
rcrl
test
aad
mov
mov
shlb
dec
adc
push
loope
scas
cmp
push
and
in
and
and
les
nop
pop
fisubs
jns
jp
inc
pop
cmp
xchg
push
dec
das
jl
push
mov
lahf
into
cmc
dec
daa
cmp
pop
imul
adc
sbb
sbb
inc
fwait
push
sbb
testb
adc
les
cmp
mov
clc
sbb
fdivrl
fstps
pop
jp
inc
loope
aad
or
pop
loop
xchg
cmp
push
stc
sub
bound
fs
out
sbb
push
lea
or
arpl
push
nop
xchg
or
xor
fsubl
push
inc
mov
inc
iret
push
fisubs
sarl
sub
jecxz
loop
loope
rcl
cs
ja
sbb
cwtl
jp
or
sub
and
leave
pop
icebp
pop
lods
cli
or
cmpsb
int
sbbb
out
fcompl
pop
mov
std
test
mov
xor
repz
test
cmpb
and
xchg
cwtl
push
add
lds
imul
add
inc
sbb
jo
bound
mov
mov
add
push
or
cs
test
mov
js
inc
sbb
iret
out
xchg
pusha
and
mov
in
cld
jp
inc
sahf
nop
stos
iret
arpl
scas
push
icebp
jg
and
iret
int
popa
dec
mov
in
lods
inc
scas
mov
mov
sahf
push
stos
jmp
sbbl
incb
lds
dec
leave
gs
sub
ljmp
mov
test
adc
mov
sti
xchg
inc
inc
inc
ja
shll
rcr
mov
jl
inc
mov
mov
jb
insb
mov
or
jmp
push
add
out
movsb
in
idivb
push
pop
loope
dec
jnp
mov
adc
mov
out
std
push
dec
add
push
sbb
xor
test
lods
pop
lret
out
mov
jecxz
insl
add
aam
inc
shrl
mov
dec
inc
outsl
jns
mov
mov
pop
push
mov
jb
mov
pop
inc
jne
in
jo
clc
push
ljmp
sbb
and
jo
mov
out
aaa
ficompl
xchg
stos
int
test
in
repz
shr
sti
mov
loope,pn
xor
xor
rol
rclb
push
ljmp
dec
xchg
mov
add
xchg
bound
enter
adc
mov
mov
jle
xchg
pop
dec
mov
or
sub
cmpsl
mov
neg
outsl
mov
shrl
xlat
xchg
jmp
lret
mov
or
mov
xchg
outsb
and
cmc
mov
lods
aam
mov
mov
fidivrl
scas
rorl
pusha
lods
sub
add
iret
repz
fwait
adc
outsl
lods
lock
gs
mov
add
insl
mov
js
xchg
pusha
ret
lret
mov
xor
xchg
cmp
inc
stos
test
sar
fwait
jae
enter
and
inc
and
mov
jno
decl
lcall
inc
sbb
dec
xchg
jbe
fcoml
std
loope
cltd
pop
es
xor
pop
in
fisttpll
and
jecxz
mov
mov
jg
dec
test
pushf
sbb
insb
and
mov
dec
dec
ret
push
aaa
adc
mov
mov
xorb
mov
jae
out
sbb
xchg
and
imull
jge
pop
pop
and
imul
int
jae
mov
movsb
repnz
imul
sub
fwait
fs
imul
and
mov
xchg
iret
mov
out
cmp
mov
pop
cmpsb
mov
out
fists
cmpsb
pop
add
jnp
pop
inc
arpl
stos
inc
gs
ja
xor
test
jmp
pop
xor
push
sub
sbb
mov
cmp
call
fmulp
icebp
pushf
jbe
xchg
xor
leave
imul
push
sub
mov
popa
das
shlb
adc
mov
push
fs
sub
cmp
psrad
fwait
imul
popa
mov
push
test
repnz
xor
mov
rcrl
shrl
int3
lret
cmp
clc
adc
mov
push
xor
rolb
mov
dec
add
push
inc
pushf
dec
push
mov
or
sbb
pop
dec
dec
jl
dec
cmp
lds
popf
test
xor
xor
aas
mov
scas
test
outsb
test
mov
scas
insl
clc
mov
loope
xlat
addr16
fs
mov
das
mulb
cld
inc
push
ljmp
je
add
stos
outsl
lahf
push
imul
mov
popf
bound
test
andl
cmc
and
xchg
add
fs
add
or
pop
mov
jmp
insl
add
daa
add
sarl
ljmp
mov
inc
imul
insb
andl
xchg
notb
xor
in
jp
aad
jnp
jl
add
stos
add
add
stos
pop
incb
or
mov
and
push
jmp
mov
addr16
adc
jb
push
mov
cmp
or
jmp
push
xorps
mov
int3
xor
mov
push
es
push
fwait
mov
dec
push
push
incl
pop
xchg
xchg
jmp
les
out
fidivs
daa
push
push
and
cmp
ret
mov
fcoms
add
cli
in
nop
aaa
subb
fildll
push
or
add
mov
push
lret
insl
jmp
pop
test
fdivs
scas
xchg
pop
dec
lds
test
lock
imul
pop
loope
std
clc
cmp
inc
in
dec
rcll
mov
mov
mov
lret
popf
push
test
leave
leave
xlat
cmp
sbb
jb
imul
out
lods
ljmp
jno
sub
xor
push
faddl
idiv
or
es
cs
mov
test
fbstp
or
pushf
clc
sub
sub
data16
xor
mov
ds
add
in
enter
xchg
dec
pop
insb
hlt
and
inc
popf
mov
iret
mov
ficoms
jle
out
sub
adc
les
xchg
icebp
or
imul
dec
sub
pop
push
loope
xchg
mov
insb
les
mov
sbb
mov
or
xlat
jl
add
repnz
jo
mov
mov
mov
add
add
scas
sbb
hlt
mov
cs
mov
and
pop
or
add
les
pusha
cmpsb
cmp
daa
jmp
cmp
mov
cmp
lret
xor
bound
mov
dec
negb
andb
jl
push
iret
push
dec
mov
test
test
cmc
xchg
cmpsl
push
aam
stc
les
dec
cld
adc
je
shl
and
stos
and
aad
mov
in
jp
push
imul
js
mov
pushf
pop
in
cld
dec
in
push
mov
dec
adc
nop
add
push
repz
jmp
add
lahf
repnz
inc
pop
jmp
movsl
mov
fsubr
ret
dec
popa
push
inc
mov
add
dec
mov
mov
adc
add
test
sbbb
fsubr
clc
or
jecxz
dec
xchg
pop
cmc
pop
sub
lahf
aas
push
xchg
jbe
sub
lret
loop
insb
loope
pop
xchg
dec
dec
pop
and
and
test
mov
sbb
mov
mov
pop
imul
stos
fsubs
xor
data16
insb
out
xchg
cmpsl
or
addb
jb
imul
pushf
scas
out
adc
ljmp
int3
xchg
imul
add
testl
sbb
push
shr
mov
sbb
imul
push
loop
sub
aad
inc
inc
mov
inc
cs
out
jg
ret
sbb
test
lret
mov
push
mov
fisubrl
push
mov
add
jns
lcall
xor
sti
xchg
mov
bound
fildll
add
push
jp
add
xchg
or
inc
mov
inc
fs
sub
in
sbb
mov
stc
add
and
lret
mov
test
pop
stos
mov
xlat
cmpsl
loop
inc
in
cmp
sub
and
push
push
jns
push
sub
cmpsl
ja
pop
scas
loopne
sbb
adc
mov
xchg
in
outsl
daa
jns
sub
cld
fisubrl
insl
ljmp
dec
fcompl
bound
add
fisubrs
mov
mov
dec
pop
sahf
mov
pop
dec
dec
xor
push
mov
insb
or
jge
lcall
jns
cld
cmpl
mov
push
mov
sbb
mov
jmp
in
xor
jns
xchg
inc
lret
xor
push
jmp
hlt
ss
lcallw
loope
xor
jnp
mov
mov
or
dec
mov
call
cli
inc
or
adc
outsb
hlt
push
bound
pop
jns
gs
ss
xchg
arpl
gs
fnsave
fcmovnb
test
js
or
sbb
int3
push
mov
fisubrl
sbb
pusha
lods
cmp
leave
mov
in
xchg
mov
call
addr16
in
jae
pop
sbb
or
sub
test
mov
lcall
in
pop
stc
or
mov
cld
inc
cmp
lods
sahf
or
sub
pop
int3
and
rcll
shlb
cmp
das
mov
dec
and
mov
add
xchg
js
stos
negb
and
xor
cltd
out
push
mov
jge
jg
outsb
imul
sub
inc
push
addr16
pop
nop
ja
jb
pop
mov
push
adc
dec
mov
fdivl
pusha
xchg
jl
call
fbstp
gs
pushf
ja
inc
fmuls
jmp
sub
and
mov
pop
pop
jno
daa
push
mov
xchg
and
insb
fwait
mov
mov
cs
mov
xchg
test
lock
push
jmp
dec
fbstp
or
jnp
in
lds
daa
or
sub
dec
arpl
cwtl
cmp
inc
add
mov
jle
ja
inc
cmpsl
sub
nop
fwait
dec
or
insb
jl
test
inc
in
cli
jbe
pop
pop
es
or
and
fsub
mov
lahf
enter
mov
pop
es
cltd
inc
add
in
lods
and
pusha
inc
pusha
mov
rclb
rcrl
xor
ljmp
xchg
fldcw
popf
les
cmpsl
adc
mov
mov
add
sbb
or
addl
mov
pop
testl
scas
cli
dec
adc
icebp
les
inc
fwait
adc
mov
rcl
jnp
mov
push
jle
add
adc
int3
or
push
lahf
or
or
jnp
scas
xchg
nop
imul
or
sbb
inc
adc
aad
stc
out
arpl
repz
lcall
imul
push
pop
std
cmp
nop
scas
shrl
xor
push
xchg
lahf
mov
int
adcb
sbb
lock
mov
xchg
add
inc
mov
xchg
jne
add
movsl
mov
push
push
scas
mov
das
or
jns
inc
sub
icebp
das
push
jno
xor
scas
out
mov
cmp
fwait
bound
adc
inc
pop
mov
addr16
aam
push
mov
repz
lahf
fisubrl
data16
int
cmp
xor
fcoms
pop
sbb
repnz
pop
jne
mov
test
sahf
lods
cmc
lcall
sbb
test
xor
jmp
repz
cmp
fisubs
push
mov
add
pop
adc
ljmp
test
mov
adc
xchg
or
and
jae
adc
mov
cld
jmp
xchg
mov
cmpb
negl
xchg
addr16
movsb
orl
sub
sub
pop
add
sub
xchg
fldenv
pusha
add
and
popa
push
out
sbb
xchg
outsb
mov
push
outsb
outsl
jo
enter
inc
jo
sub
fdivl
xchg
inc
leave
xchg
adc
daa
xor
ret
data16
cmp
mov
or
xchg
mov
dec
adc
popa
pop
jle
call
add
lahf
stos
dec
jne
pusha
iret
insl
jg
lock
hlt
sub
inc
push
and
cmp
mov
or
ficoml
sub
stos
inc
loope
jp
mov
xlat
nop
repz
insl
push
aas
les
mov
aaa
scas
xchg
inc
push
lahf
add
sbb
out
ret
mov
test
out
rcll
jmp
or
xor
daa
popf
popf
add
xchg
test
pop
lods
jmp
adc
adc
in
jb
sub
add
out
mov
inc
sub
mov
push
dec
and
call
or
mov
xor
adcb
jb
loop
pop
lret
in
out
dec
stos
insl
imul
dec
int3
fmuls
mov
jnp
sbb
loope
push
and
pop
notl
cmp
loopne
push
std
mov
xor
stos
notl
lds
mov
test
add
jo
push
and
lea
icebp
xchg
jl
and
sbb
and
xor
std
addb
pushf
loope
std
pop
fcoms
mov
popf
inc
lret
cmp
mov
mov
and
mov
xchg
xchg
mov
das
sbb
add
mov
cld
outsl
mov
mov
lods
ficomps
int3
sub
sub
sbb
inc
sub
je
inc
xor
and
lea
mov
sbb
push
push
int3
mov
adc
xor
je
cmp
syscall
ljmp
pushf
sti
arpl
lret
mov
xchg
jae
sub
xchg
mov
stc
jo
imul
idivl
cmp
dec
das
cmpsb
push
sarb
jp
pop
mov
inc
sbb
mov
mov
lret
aam
sarl
adc
sub
dec
dec
xchg
arpl
rol
insb
jbe
adc
aaa
inc
sbb
inc
mov
cs
pop
insl
push
dec
mov
aaa
sub
add
xchg
sahf
movsl
adc
orl
dec
mov
cmp
and
outsb
xor
mov
rcrl
xchg
in
mov
cmp
mov
fldenv
cmp
dec
pop
jb
push
inc
pop
adc
mov
pop
mov
sub
adcl
fwait
aad
int
push
push
fistl
jnp
das
mov
xor
inc
or
sti
pop
int3
pop
or
xor
ds
insb
xchg
fcmovu
movl
push
or
icebp
dec
mov
pop
enter
xchg
pop
inc
popf
es
sub
inc
iret
shll
aaa
iret
push
cld
mov
or
xchg
test
xorb
xor
scas
add
and
stc
lock
es
mov
aam
out
adc
jmp
arpl
call
lret
dec
out
xchg
outsl
fcompl
xchg
jp
jp
mov
gs
cmp
pushl
cmpsl
pop
cmp
push
mov
jle
pop
adc
lret
insl
cmpsb
push
insb
add
je
xchg
mov
fsubr
push
mov
inc
adc
das
out
popf
stos
inc
adc
cmp
pop
jnp
jne
mov
xchg
sub
shrl
xlat
jbe
xchg
cmp
pop
test
add
add
pop
and
add
jge
popa
dec
mov
aad
mov
dec
movsl
push
pop
sahf
test
push
imul
popf
pop
ss
scas
addr16
out
pop
mov
sbbb
shrl
add
test
adc
icebp
mov
and
xchg
popf
repnz
mov
mov
mov
sbb
sub
or
fcompl
jns
jbe
arpl
cmp
mov
pop
out
gs
daa
loop
lock
stos
scas
loop
aaa
into
pushf
lcall
xchg
in
aam
cmp
dec
xorb
test
ljmp
jb
sbb
mov
add
popf
daa
in
mov
jnp
xor
cmp
inc
push
dec
aad
jl
dec
in
mov
nop
add
sbb
push
dec
ja
fimull
ret
mov
mov
push
inc
shrb
les
mov
cmc
jp
mov
pop
push
xchg
or
mov
adc
sbb
add
xchg
mov
mov
sahf
dec
xor
cmp
fmuls
ljmp
xchg
stos
jne
dec
jno
in
fnstcw
daa
jp
stos
aas
sub
mov
push
fisttpl
lea
fisubs
sbb
jno
jbe
push
mov
mov
mov
mov
cmp
inc
xlat
jae,pt
js
fcompl
mov
mov
cld
loop
mov
movsb
repnz
dec
outsb
jl
cli
test
dec
push
je
stos
sbb
fisubl
cmp
jle
cmp
insl
sub
push
pop
or
insl
push
filds
xchg
mov
pop
xor
mov
outsb
inc
rorl
xor
mov
repnz
mov
outsb
xchg
es
or
in
stos
rcl
jb
sbb
cld
in
stc
xor
adc
adc
dec
mov
inc
pop
ror
pop
outsl
stc
adc
outsb
sbb
pop
jbe
sub
mov
shll
adc
imul
sti
or
jnp
xchg
scas
mov
xchg
sub
ljmp
rcrl
add
sbb
inc
lret
mov
jb
push
jae
outsb
mov
xchg
mov
add
lret
loop
insb
xchg
push
pop
push
cli
dec
fbld
inc
in
lock
push
jl
mov
push
out
xor
outsl
jmp
repz
dec
jnp
loopne
jle
outsb
adc
sbb
sub
hlt
mov
xchg
push
adc
enter
jbe
mov
xchg
pop
ljmp
jmp
xor
test
push
lcall
mov
push
shl
aaa
sbbl
arpl
adcb
pop
scas
rorl
mov
cltd
ljmp
lock
ret
ja
jecxz
add
popf
lods
stc
xchg
add
fnsave
sbb
dec
cwtl
sub
insl
xchg
lods
xchg
pop
inc
fmuls
lret
sti
cmp
popw
pop
dec
test
mov
fs
add
leave
popa
hlt
mov
imul
out
mov
iret
inc
repnz
scas
stos
inc
push
sub
dec
lahf
inc
and
jmp
jae
xor
fcomip
xlat
lods
mov
stc
pop
out
clc
xor
sub
jmp
lods
inc
test
sbb
mov
dec
int
sbb
mov
daa
inc
hlt
iret
add
lcall
test
dec
xchg
insb
clc
es
aad
add
ret
lods
js
push
fdiv
cmp
pop
out
mov
test
dec
jle
xor
mov
adc
inc
inc
pop
cmp
cmp
std
push
cld
jo
insl
lret
neg
icebp
cmp
xor
cmp
cmpsb
sub
pop
idivb
push
fldt
xchg
inc
jl
daa
stos
push
pop
mov
aam
add
pop
ljmp
xor
inc
sbb
inc
xchg
pusha
xor
pop
mov
mov
aad
add
sbb
pop
lods
bound
xchg
mov
xlat
outsb
mov
push
cmc
leave
mov
cmpsb
xor
mov
lods
inc
arpl
xchg
sub
int3
add
es
xor
jnp
push
out
pop
pusha
lcall
mov
sahf
cmpl
sub
jmp
test
add
cmp
cltd
out
cltd
sbb
xchg
and
mov
stos
xchg
xor
in
mov
test
les
iret
jge
inc
sub
mov
add
sub
mov
bound
popf
mov
je
xor
push
pop
cwtl
inc
lods
push
xchg
jmp
dec
pop
mov
mov
adc
leave
ret
in
jp
pop
lock
mov
shr
mov
loop
hlt
push
ds
cmp
pop
les
imul
add
ja,pt
das
xchg
cltd
in
mov
sbb
arpl
data16
adc
jns
mov
mov
jge
add
mov
clc
and
aad
ror
xchg
jnp
lahf
mov
insb
std
add
decb
pop
movsb
shr
faddl
add
or
cwtl
mov
mov
inc
fldl2e
clc
dec
dec
pop
cmp
int
sbb
mov
mov
adc
mov
insl
sti
lahf
stos
jge
adc
scas
movb
scas
pop
loope
nop
pop
lods
adc
lods
hlt
fsubs
and
scas
and
test
add
add
cltd
xor
das
xchg
es
adc
mov
pop
in
stos
ret
xor
dec
sbb
xor
inc
in
jno
out
movsl
push
jecxz
xchg
xor
sub
push
push
fs
lea
jnp
bound
mov
icebp
cmp
dec
push
adc
lods
sbbb
jno
out
loop
sbb
fisubrs
mov
adc
pop
cmp
or
push
pop
sbb
das
int
pop
mov
je
testl
inc
inc
sub
int
jmp
cmc
sbb
dec
pop
jo
rcl
dec
cmp
hlt
xchg
add
push
daa
mov
pop
lret
mov
in
pop
or
jmp
jle
or
jns
xchg
hlt
call
sub
hlt
in
cmp
cmp
adc
sub
data16
sub
jae
mov
ja
dec
dec
or
cmp
mov
movsl
adc
cwtl
mov
jecxz
lahf
subb
jmp
sbbl
sbb
hlt
mov
fistpl
nop
addl
fwait
cmpsl
push
gs
rcll
popf
xor
loop
rcrb
inc
arpl
xor
or
mov
es
sbb
mov
pop
pop
push
imul
negl
js
jno
mov
pop
jg
mov
xor
insb
lds
xchg
div
lret
add
shlb
fdivrs
dec
dec
orb
stc
mov
out
andb
lds
testb
out
and
jae
push
jae
pop
enter
add
mov
leave
js
mov
push
adc
mov
lret
jbe
xchg
mov
push
mull
cmp
ss
lea
shlb
test
aaa
and
nop
cmp
cli
outsb
add
and
or
imul
lock
shrl
pop
dec
adc
xchg
test
outsb
int
out
pop
ljmp
xor
xchg
mov
jno
fsubp
xchg
mov
loope
cmp
and
into
stos
push
xor
addr16
inc
lret
or
sahf
sub
sbb
mov
notl
lret
and
fxtract
popa
dec
adc
sub
lcall
clc
outsb
jge
mov
mov
cmp
push
fisttpll
xchg
sbb
icebp
push
mov
push
cmp
inc
pop
cli
rorb
sbb
push
popl
pop
inc
push
ds
inc
test
or
into
pop
cmp
mov
int3
loope
push
xchg
add
test
sbb
mov
xor
movsb
jnp
stos
in
mov
push
inc
mov
stos
mov
jge
ret
or
push
hlt
bswap
sub
out
lahf
sub
xchg
xor
fists
cmp
insb
sbb
aaa
repz
les
shrl
jno
lds
filds
xor
dec
or
pop
lahf
cmp
pop
and
mov
ja
daa
imul
shll
mov
pop
hlt
dec
test
mov
push
xchg
popa
adc
andl
adc
mov
sbb
mov
lcall
fs
mov
lahf
sbb
add
adc
push
xchg
popa
add
add
lahf
divl
test
sbb
stc
or
popa
nop
cmp
notl
sbb
add
push
out
arpl
or
in
jbe
mov
mov
sbb
xchg
lods
rcl
cmpl
mov
into
pop
dec
push
setl
fldt
jnp
and
imul
sbb
cwtl
out
int3
inc
mov
les
sbb
pusha
in
or
pop
or
fsubs
repnz
pushf
lds
cltd
cmc
and
mov
jmp
pop
cmp
sbb
or
sub
dec
es
add
mov
inc
pop
inc
mov
fldcw
or
stc
popf
hlt
loopne
push
dec
xchg
jmp
cmp
push
jns
shll
jecxz
sbb
adc
pop
jne
test
stc
sub
clc
insl
int
sbb
imul
sbb
outsl
mov
outsb
cmpsb
mov
pop
xor
xchg
daa
push
lock
fidivl
int
sub
mov
pop
dec
lahf
pop
jo
loope
aad
and
dec
pop
sarb
lret
pop
pop
push
ror
loope
out
sbb
out
jno
xchg
xor
test
adc
sub
out
int3
mov
jle
sbb
jp
cmp
xchg
int
lods
cs
or
loop
mov
shrb
fadd
mov
mov
mov
mov
ds
inc
ficomps
scas
scas
add
rcl
pop
or
outsl
cmp
xor
repz
mov
ficoms
test
cmpsl
mov
fisttpl
cmp
dec
mov
lahf
outsb
lods
add
out
das
mov
dec
xor
enter
loop
mov
and
fsubrl
jnp
das
pop
in
mov
fneni(8087
add
mov
arpl
out
aaa
les
ds
mov
xor
xchg
stos
shrl
jmp
add
hlt
ljmp
add
cmpsb
test
pop
cmp
aaa
inc
dec
cwtl
sub
push
out
push
dec
jne
jle
lea
mov
xchg
push
ror
fnsave
pop
add
sub
or
sbb
inc
cld
mov
insb
inc
xchg
fmuls
push
sbb
pop
push
movsl
inc
inc
ret
dec
sub
out
inc
xlat
and
fidivs
jns
mov
nop
aaa
inc
push
repnz
icebp
xchg
fidivs
nop
and
ss
stos
inc
movsl
test
xchg
lds
mov
in
adc
jl
mov
mov
mov
adc
stc
ror
push
add
hlt
xchg
movsl
mull
inc
inc
js
ja
das
shlb
push
loop
loop
pop
mov
test
leave
addl
push
popf
gs
xor
fs
xchg
push
sti
xchg
xchg
fisttpl
or
les
clc
inc
inc
imul
sub
inc
and
cmp
mov
sub
in
test
subb
out
push
movsb
pop
jg
int3
jl
or
jl
adc
out
push
xor
mov
rolb
mov
fdiv
mov
sbb
shrl
xchg
pop
cmp
xlat
or
mov
int3
jae
pop
inc
pop
cmp
shlb
push
mov
sbb
test
mov
mov
jge
push
adc
lcall
je
cmc
mov
insb
scas
stos
jbe
or
xchg
js
mov
ficoms
dec
adc
nop
outsb
pop
bound
int
pop
repnz
fnstsw
gs
int
in
sahf
cld
mov
mov
ljmp
pop
pop
das
pop
cmp
rcrl
inc
fmull
push
out
or
push
inc
mov
pop
imul
hlt
mov
das
xor
idivl
fstps
outsb
add
mov
mov
into
jle
xorb
je
pop
popa
xchg
mov
dec
jle
fnstsw
pop
dec
mov
lods
sub
sbb
sbb
arpl
sbb
std
jae
pop
aas
xor
fstps
test
pop
popa
inc
mov
add
jmp
xchg
sbb
lds
lahf
aam
shrb
xor
jecxz
les
ror
dec
in
add
mov
insl
lock
mov
pop
gs
ror
mov
stos
test
ja
leave
and
jbe
sbb
mov
fwait
or
lock
and
rcl
int
fisttps
and
pusha
and
mov
inc
xor
es
imul
cmp
lods
ljmp
mov
fbld
jae
rcrl
xorl
adc
lods
fnsave
xor
andl
jge
and
sahf
xchg
mov
fnsave
call
int
add
mov
cltd
mov
movsb
inc
push
jne
ss
loope
wrmsr
cmc
push
out
mov
fcompl
pop
outsb
test
pop
fistpll
sbb
push
test
rclb
xor
mov
dec
xchg
xor
cmp
stos
cli
fcomi
out
inc
ss
jge
cmp
cmpsl
loopne
mov
pop
insb
mov
xchg
xor
jle
aaa
push
cmpsb
xor
je
pop
cltd
or
dec
mov
push
mov
shl
outsl
das
les
ret
out
pop
and
aam
inc
subb
inc
dec
jnp
out
adc
push
int
xchg
jl
mov
pop
movsl
jmp
add
jb
ja
jg
jno
sbb
or
bound
fistpl
pop
and
or
sarb
loop
cmp
dec
xor
and
lret
cmp
xor
aad
pushf
fwait
add
cmp
cmp
in
mov
push
cmp
loopne
in
pop
sbb
jae
pop
push
stos
mov
call
jge
ja
push
push
jg,pn
aam
sbbl
adc
dec
out
movlps
je
out
push
stos
pop
sti
xchg
aas
int3
pop
xor
jo
mov
mov
in
test
fnstcw
jp
dec
inc
dec
test
fsubrp
mov
cmp
shrb
sbb
xchg
jno
ficomps
add
xchg
gs
mov
stos
mov
sarb
or
cs
outsb
mov
pop
call
mov
scas
int3
jle
push
clc
stos
mov
inc
std
sti
pop
ror
mov
mov
mov
out
add
lock
jo
jno
jl
mov
xor
inc
sbb
bnd
cli
imul
cmp
jg,pt
movsb
mov
pop
loop
pop
lahf
pop
fsubrp
sub
xor
clc
dec
outsb
or
andb
outsb
mov
lea
decb
aaa
adc
fs
in
xor
addr16
adc
and
xchg
cmc
mov
in
push
test
jne
mov
shlb
clc
inc
inc
fsubrl
push
ja
inc
outsb
jno
iret
push
scas
arpl
jno
ss
repz
shr
test
fstpl
test
loop
or
push
sbb
cmp
popf
sub
test
push
pop
loope
cmpsb
out
jno
fiaddl
mov
push
test
call
inc
popf
or
daa
movsb
repnz
inc
jecxz
adc
xchg
inc
sbb
sbb
push
add
mov
fidivs
das
addr16
inc
repnz
outsl
outsb
sub
stos
adc
loopne
das
addr16
xor
mov
adc
rcrb
mov
xor
dec
xchg
jae
fsub
cmp
xchg
ret
add
or
and
mov
lea
sbb
sti
es
imul
push
mov
fsubs
mov
fmull
aaa
mov
fdivr
adc
xchg
xor
pop
sbb
dec
jb
stc
mov
xchg
sub
push
fimull
fdivrl
xchg
mov
jno
xchg
sub
out
xchg
sti
add
ja
test
cwtl
sbb
in
cmp
jne
sbb
mov
xor
push
or
adc
je
pop
data16
stc
mov
xchg
push
je
sub
pusha
subl
aas
adc
pop
out
sbb
xor
xchg
in
cltd
mov
inc
dec
test
inc
dec
xchg
sbb
scas
jno
lods
and
mov
sbb
mov
call
add
xlat
jnp
pop
idiv
lahf
xor
and
dec
loope
xor
jns
push
ljmp
xor
jno
cmp
jb
fnsave
pop
cmp
push
outsl
lcall
xor
out
gs
mov
adc
dec
jp
jae
or
into
jns
push
stos
jmp
dec
ror
fwait
or
add
xor
mov
push
fwait
cmpsl
dec
fcomps
xor
dec
add
jp
xor
negb
ljmp
idivb
daa
mov
mov
adcb
push
push
inc
pop
in
lds
in
pop
pushf
repnz
and
fldt
lods
sub
in
add
xchg
add
mov
dec
dec
test
cmp
aad
repz
lret
pop
xor
es
cwtl
or
fwait
movsb
out
jbe
loopne
push
divb
push
mov
inc
or
test
push
pop
jo
push
add
cmc
cmpsb
mov
out
push
inc
inc
fstps
mov
pop
mov
out
insb
adcl
mov
lods
pop
stos
jmp
ret
mov
fwait
sub
pusha
adc
pop
cmp
mov
sbb
mov
jb
test
mov
and
inc
mov
and
adc
aam
mov
ja
enter
lods
xchg
push
xor
xlat
loopne
add
sbb
ljmp
fistps
mov
mov
adc
mov
sub
jg
or
inc
lret
popf
xor
mov
out
and
xor
xchg
lahf
loopne
dec
cmpsl
and
ficomps
fdivrl
sub
mov
lret
sti
jbe
add
mov
into
daa
inc
arpl
or
pop
adc
aaa
push
inc
jp
jmp
ja
das
cmp
xor
sbb
jae
fsts
push
inc
int3
inc
arpl
ss
outsl
push
xor
or
jmp
mov
push
jmp
loop
rcrb
or
ret
add
out
ja
push
jmp
sub
repnz
movl
push
scas
addr16
bound
out
outsl
movl
xor
jbe
jecxz
not
lds
mov
imul
loop
and
lret
mov
push
fistps
pop
ror
shrl
dec
fidivl
jo
pop
fs
cltd
xor
repnz
pop
loop
dec
in
aaa
sbbl
lods
je
sbb
jns
push
mov
mov
in
jp
subl
fisubrs
jae
adc
out
mov
out
test
iret
data16
cmp
lods
lods
mov
push
push
stc
fiaddl
xchg
leave
sub
add
jbe
popa
data16
ds
mov
sbb
bound
cmp
mov
outsl
jbe
pop
jge
cmp
cld
movsb
jb
icebp
leave
out
lea
popf
fidivl
mov
cld
xor
sub
insb
and
dec
or
push
lcall
fwait
cmpsl
sbb
insl
fwait
test
inc
fstpt
shrl
repnz
inc
imul
lds
lock
arpl
xchg
mov
adc
mov
or
adc
sti
sbb
and
shrb
mov
inc
es
lret
mov
push
out
ficompl
ret
pop
inc
mov
shrl
lea
jge
js
sahf
aas
dec
popa
insb
add
in
mov
jo
sub
mov
jmp
xor
bound
mov
lahf
cmp
popf
mov
imul
cmp
lods
and
fwait
clc
sbbl
xchg
add
hlt
pusha
mov
rcrl
shlb
iret
push
stos
mov
pop
cwtl
ja
cmc
inc
mov
jecxz
movsb
scas
mov
push
mov
add
sbbb
push
out
lds
or
pusha
divb
aas
nop
sub
jbe
cld
xor
ja
mov
popa
lods
pop
jae
ds
jno
adc
pop
lods
add
xchg
movsb
cmc
lods
jl
jmp
stc
push
insl
insb
dec
imul
xchg
mov
pop
jg
sbb
mov
aam
or
sub
jmp
out
iret
addb
ljmp
mov
pop
xor
xchg
xchg
add
sbb
repnz
lret
bound
dec
mov
cmp
leave
xchg
leave
pusha
or
into
cmp
xlat
and
xchg
fnsave
fwait
mov
and
push
xchg
fistpl
fildl
cmpsl
jns
and
mov
cmc
test
cmp
cmp
ror
sub
push
and
push
adc
pop
cmpsl
rep
inc
sbb
movsb
dec
out
sti
icebp
mov
sti
dec
xchg
mov
and
pop
test
or
mov
inc
aad
test
sbb
mov
xchg
cwtl
insb
pop
cli
out
adc
xor
popf
xchg
out
sub
cwtl
or
dec
push
das
lock
dec
xlat
jg
clc
mov
movsl
xor
or
sub
pop
into
add
add
push
in
mov
and
xchg
data16
clc
test
and
imul
mov
icebp
jnp
dec
jp
loopne
pop
pop
dec
sahf
pop
aam
loope
xor
jne
jg
pusha
pop
add
aas
push
sbb
imul
add
cmpsl
fs
xchg
push
mov
enter
out
shr
in
jns
push
add
cmc
sbb
dec
cwtl
arpl
out
add
fsubrl
call
adc
cmp
fisubrl
xchg
sub
jb
mov
pushf
loope
mov
jbe
and
cmpsl
and
icebp
cmp
pop
xor
mov
ficoml
and
and
push
je
add
push
test
andl
gs
mov
cmovl
jae
adc
jne
scas
fmull
and
pushf
push
and
cld
xor
adc
or
rcll
sub
jbe
nop
pop
jle
dec
test
push
push
inc
mov
fldl
je
lods
xor
daa
add
daa
out
mov
add
push
insb
push
jno
ud2
fmulp
hlt
movsl
sbb
mov
pop
hlt
popf
js
pushf
xchg
mov
pop
push
mov
mov
inc
je
add
xor
add
dec
in
lahf
push
sbb
dec
dec
or
and
les
push
dec
aaa
push
dec
imul
push
shlb
mov
stos
jnp
dec
in
push
xchg
sub
movntps
cmpsb
test
jl
in
call
popf
mov
dec
das
jno
sbbl
push
xchg
pushf
push
scas
dec
and
push
mov
dec
loop
mov
into
inc
cltd
cmp
in
mov
dec
sub
xchg
sbb
lret
lret
push
hlt
push
mov
jge
lods
sbb
sub
xchg
pop
std
hlt
cmc
mov
push
pop
jno
sarl
add
push
into
movsl
mov
fstps
cld
jecxz
popa
adc
ss
shl
aas
xor
and
cmp
push
packssdw
mov
pop
jae
jae
mov
ja
inc
pop
jae
mov
fs
mov
adc
repz
xor
jbe
mov
xchg
cwtl
das
add
out
mov
sbb
or
sbbl
dec
mulb
std
pushf
xacquire
cs
xlat
and
sarb
pop
and
or
ret
mov
pop
mov
jnp
xor
cmp
data16
enter
mov
decl
outsb
xor
dec
jno
mov
sub
inc
fsts
cmp
xchg
dec
fs
imul
dec
cmp
mov
lock
mov
data16
xor
dec
dec
jb
mov
pop
xor
lret
dec
hlt
mov
stos
insl
scas
pushf
adc
out
dec
or
xor
dec
xchg
arpl
movsl
lods
fmuls
xchg
or
push
xchg
or
push
fstpt
fdivrs
xor
test
and
cwtl
inc
test
lods
popa
adc
sbb
adc
andb
fsqrt
mov
xchg
push
and
fsubr
mov
push
jae
adc
jbe
mov
and
lds
or
sub
jp
pop
dec
outsb
sub
sbb
rcrb
shll
test
cmp
jne
pop
mov
imul
dec
add
cmp
fnstcw
ds
push
fldt
mov
ja
pop
dec
or
test
in
fstpl
out
movsb
mov
ficoml
dec
shrl
dec
mov
sbb
pusha
dec
cmp
inc
sub
out
pop
cmp
data16
xor
test
pop
outsl
ret
subb
insl
roll
insb
jle
xchg
push
mov
push
in
into
test
repnz
sti
pop
mov
cmp
pop
pop
out
lea
clc
outsb
repnz
jmp
pop
mov
mov
aaa
push
adc
lea
lret
fs
push
or
push
notl
and
xor
adc
das
and
or
leave
sbb
mov
xlat
cs
and
in
mov
inc
cmp
cmc
in
jb
repz
clc
aas
out
sarb
in
lock
cmp
jecxz
lea
fildl
outsb
out
xor
or
cmp
incl
gs
shrb
jb
push
mov
or
add
rcrl
fdivrl
bnd
inc
ja
xor
pop
jge
push
cwtl
and
xor
jno
scas
jb
cmp
aaa
popf
jecxz
pop
pushf
mov
cmp
fcmovbe
mov
shll
cmp
std
xchg
mov
push
pop
fsubrs
shrl
pop
cmpsl
jge
pop
mov
adc
fisubs
jl
scas
inc
sbb
pop
lcall
cmpsb
cmp
sub
and
in
xor
test
les
popa
mov
xlat
insb
scas
pop
jecxz
sub
adc
jae
pop
popf
fistpl
nop
mov
lret
jbe
in
or
jne
ret
add
add
stos
jne
test
cmp
add
lahf
mov
adc
loopne
dec
xor
sbb
std
loope
aad
sti
fistl
int
mov
aam
ss
in
lret
js
imul
andl
xchg
data16
adc
ss
pop
shll
aaa
out
dec
mov
add
sub
iret
or
xchg
orb
mov
xchg
movsb
fcoml
push
cmc
pop
insb
sti
popa
aam
dec
and
cmpsb
pusha
mov
lret
aas
ret
jnp
push
sub
pop
fnstcw
jnp
gs
dec
pop
pop
ljmp
dec
mov
sbb
adc
mov
sti
mov
add
andb
repz
loopne
ficomps
in
adc
rcrb
inc
int
in
adcl
dec
sub
cltd
push
fcmovb
fs
mulb
ret
rorl
inc
jne
gs
adc
push
lcall
cwtl
das
pop
enter
xor
mov
fistpl
shlb
mov
stos
or
enter
xchg
adc
loope
xor
fldenv
scas
clc
ja
fldcw
scas
add
mov
mov
and
leave
adc
fcoml
int3
nop
mov
fucom
mov
jo
enter
mov
and
testl
pusha
pop
cltd
inc
add
dec
and
dec
lret
ljmp
call
fcoml
adc
stos
lcall
sub
mov
aaa
jne
add
ja
and
ret
jp
scas
call
fsts
lahf
sub
sti
sub
sub
dec
cmp
xchg
shlb
iret
mov
jl
xlat
mov
orb
icebp
repnz
dec
or
dec
jge
mov
sub
aam
arpl
xor
je
jne
xchg
mov
rcll
dec
pop
mov
movsb
imul
add
pop
xor
jg
push
enter
push
jmp
pop
jno
mov
setbe
push
mov
inc
or
jge
and
or
aad
or
movsb
xor
jbe
add
lea
lcall
and
lcall
nop
xor
loop
xor
arpl
cmpsl
ljmp
mov
jg
jecxz
mov
or
push
mov
fsubl
mov
cmp
in
mov
inc
adc
das
adc
or
push
sub
repnz
xchg
in
or
jo
push
ficoms
scas
mov
out
cmc
mov
out
xchg
stc
push
dec
ja
arpl
and
inc
ja
ljmp
popf
cs
ljmp
or
sarb
ja
and
jbe
loopne
lea
out
stc
out
stos
es
push
in
jb
xchg
or
scas
jae
loopne
lahf
les
mov
ljmp
cmpb
jmp
loop
pop
jmp
outsb
sub
mov
jl
xor
cmp
out
loope
cmp
or
addb
js
jmp
fwait
push
aam
int
add
inc
jo
lea
xchg
or
out
imul
pop
jnp
iret
aaa
jno
out
shrb
xor
push
stos
xor
nop
mov
or
decl
rorl
adc
xchg
pop
test
and
pusha
mov
cmpsb
lock
or
loopne
ja
cmpsb
inc
jecxz
rorb
loop
lret
xlat
dec
add
test
sbb
cmp
lods
ret
ficompl
sub
sbb
jge
das
sti
lods
xchg
xor
pushf
imul
and
xchg
sub
mov
push
subl
test
jbe
cmp
fstpl
and
jmp
push
dec
push
cmp
jmp
stos
and
sbb
mov
testl
icebp
lret
push
mov
cmp
add
test
ljmp
loopne
lret
push
mov
jle
pusha
stc
inc
push
xchg
sbb
sub
pop
jg
loop
mov
loope
fnstsw
insl
out
mov
xchg
clc
movsl
js
inc
sbb
loop
push
imul
add
insl
test
jg
dec
pop
xor
loopne
xor
addr16
lea
sub
pop
push
dec
jecxz
lcall
adc
add
dec
mov
in
sbb
add
cmp
inc
inc
sub
cli
inc
add
mov
cs
cmp
push
inc
test
mov
popa
sahf
cmc
adc
mov
les
push
int3
jne
mov
pop
test
mov
adc
fidivrl
cmp
mov
pushf
inc
je
mov
and
test
or
out
test
adc
sub
add
or
mul
xchg
add
mov
das
mov
shl
add
cli
xchg
and
inc
subb
xchg
sub
sbb
outsb
shrb
mov
sbb
outsb
rclb
add
pop
or
adcb
leave
or
clc
cmp
mov
and
nop
test
outsb
test
sbb
sbb
cs
andb
add
loope
movsb
adc
fstpt
cmp
xor
dec
dec
jp
cmpsb
mov
jnp
in
icebp
insb
lret
and
push
lret
xor
dec
inc
push
sub
imul
enter
cmp
loopne
cmpsb
cld
adc
pop
mov
pop
mov
jle
inc
push
shll
inc
cmp
pop
cmc
xor
mov
movsb
jle
in
arpl
stos
rcll
pop
fisttpl
xchg
imul
jmp
cmp
push
sbb
fidivrs
rorb
add
add
jns
dec
outsl
test
movsb
mov
jmp
dec
pop
in
fyl2x
fwait
xchg
xchg
in
cmpsb
mov
enter
add
lods
popa
xor
jns
leave
test
andb
mov
insl
lret
push
or
sti
imul
mov
adc
stos
xor
pop
fcoms
and
push
loope
fmull
es
adc
sub
dec
sub
jmp
lea
cli
or
ds
sbb
mov
jmp
popa
movsb
mov
scas
push
cmpsl
jle
lods
inc
sbb
add
mov
cmp
xor
cmp
leave
notb
mov
lahf
push
aas
add
fdivrl
adc
push
mov
test
fidivs
fidivl
cli
xchg
cmp
mov
mov
out
stc
addb
dec
stos
bound
imul
or
pop
pop
insl
jge
adc
dec
mov
adc
dec
lret
adc
inc
scas
pop
jb
push
xchg
xor
scas
out
int
push
fldcw
ja
shrl
xchg
sub
leave
push
and
xor
xchg
aas
in
stc
hlt
or
cmp
and
mov
fs
mov
and
into
test
push
fnstsw
mov
enter
cltd
cli
loop
add
sbb
dec
stos
dec
sub
push
loope
mov
and
xchg
push
int3
adc
jb
lea
inc
lcall
aad
add
lds
xchg
imul
push
out
push
add
sbbl
std
icebp
outsb
stos
cmp
gs
in
xor
ficoml
pusha
mov
mov
addr16
aaa
sbb
popf
in
lret
push
xor
pop
in
mov
cltd
test
dec
insl
ss
xchg
xchg
addr16
pop
loope
sbb
repz
jge
nop
pushf
pop
mov
xor
in
lock
mov
pop
mov
xlat
mov
rorb
inc
aad
cmpsb
fstpl
call
push
add
cwtl
sub
adc
shl
ja
and
xchg
cmp
adc
shr
lahf
cltd
rcr
add
pop
rcr
mov
daa
lods
xchg
push
shr
jge
xchg
scas
pop
sbb
nop
lea
dec
jae
outsb
xchg
rorb
cmc
out
popa
jecxz
outsl
mov
xchg
adc
and
adc
repnz
sbb
loope
cmp
lahf
xchg
iret
lret
in
movsl
inc
std
adc
repz
fstpt
sub
mov
ret
jns
test
pop
shll
pop
cld
pop
mov
cmpsb
mov
out
push
in
in
sti
repnz
fistpll
pop
push
insl
mov
aad
aam
dec
add
sbbl
gs
sahf
lods
mov
lock
and
enter
xor
jle
outsl
push
rcrl
addl
cwtl
pop
xor
mov
stc
fwait
cmp
and
dec
lret
sub
fisubl
notb
cmp
jno
pop
push
rol
jl
sbb
test
xor
cmpsl
add
clc
dec
dec
mov
lds
adc
pop
adc
adc
jl
dec
jo
lret
add
jmp
cld
bswap
mov
sub
test
or
xchg
fidivl
loop
xchg
pushw
and
push
add
incl
mov
cmp
insl
adc
hlt
adc
pop
jecxz
mov
out
dec
subl
shl
bound
shll
sbb
ds
push
mov
sub
or
subb
popf
ds
mov
jae
cs
aas
push
add
jmp
rcrb
adc
das
push
ljmp
pop
lret
and
out
inc
mov
or
add
rcrb
push
sbb
aad
dec
and
and
ja
cmp
js
les
ja
mov
addr16
push
out
pop
jmp
add
pop
dec
sbb
mov
jmp
sbb
inc
test
mov
adcb
mov
das
dec
or
aam
mov
lea
add
cmp
out
test
add
lods
into
jne
jae
cmp
movb
imul
jg
dec
mov
fs
pop
ds
loopne
test
mov
mov
mov
dec
sub
sbb
dec
and
jno
xchg
mov
loope
mov
jb
js
call
cmp
andl
fcmovnb
lds
mov
dec
jg
sub
pop
loope
push
lods
jbe
xchg
mov
push
inc
push
mov
ret
testl
rclb
lahf
es
sub
sbb
pop
shlb
mov
push
mov
fs
inc
call
fdiv
cltd
arpl
popf
cmp
arpl
xlat
xor
xor
adc
jge
mov
test
insl
mov
arpl
cltd
adcl
jecxz
mov
inc
add
jae
cmp
xor
loope
dec
push
push
xchg
cmp
fiaddl
lcall
sub
repnz
fimull
outsb
jle
stos
pop
icebp
push
push
pop
xor
rol
jmp
aaa
vpsubw
fbstp
ret
pop
std
mov
ss
add
xchg
add
dec
incb
cmp
push
or
push
int3
jcxz
or
xchg
subb
ret
mov
push
jmp
into
test
repz
aad
cltd
mov
xchg
iret
push
add
out
sbb
fcoml
out
mov
in
subb
sbb
rol
xchg
sti
loope
sbb
sbb
sbb
sbb
mov
jo
test
ja
mov
and
cmp
jecxz
stos
cmp
cs
mov
daa
and
mov
xchg
add
xchg
pop
push
test
test
popf
add
es
lods
dec
inc
loop
ret
hlt
fwait
xchg
mov
icebp
pop
inc
in
pop
adc
pop
inc
mov
pop
imul
or
jne
jo
mov
test
mov
xchg
push
xchg
stos
loop
adc
jnp
inc
push
push
dec
rclb
insb
shlb
aad
mov
daa
mov
jae
inc
pop
mov
pop
loop
ljmp
das
ficoml
push
dec
pop
repz
shll
lahf
divl
sarl
dec
inc
or
dec
sbb
cltd
lea
mov
xchg
jne
decl
jo
dec
inc
mov
gs
cwtl
aam
xchg
push
cli
inc
fbstp
pop
fidivl
ret
mov
push
ficompl
subl
mov
push
mov
aad
movsl
mov
lock
jg
icebp
mov
push
fstpt
lahf
ror
mov
addr16
rol
movsl
jno
outsb
xchg
mov
sbb
or
pop
inc
je
hlt
pop
cmp
insl
je
sbb
movsb
repnz
mov
push
pop
sbb
sbb
pop
repz
pop
cmp
xor
cmp
sbb
shrb
adc
push
int3
stos
and
leave
mov
rcr
cmp
jo
es
push
mov
adc
pop
inc
sub
mov
xor
mov
in
pop
fsubrp
arpl
ljmp
sbb
xchg
test
xlat
push
lds
aas
jp
mov
cltd
and
jnp
mov
into
gs
or
repnz
and
adcb
gs
dec
stos
cmp
lret
jne
jl
jecxz
xchg
sbb
dec
pop
cmpsl
ret
ror
mov
jnp
or
stos
pop
fidivrl
push
sub
repnz
adc
dec
out
in
popl
lock
cmpsb
push
iret
mov
inc
mov
test
fsts
mov
test
lods
out
jge
inc
mov
inc
pop
or
add
cs
arpl
data16
imulb
xorl
sbb
adc
ds
xor
xchg
adc
xor
dec
loopne
adc
pop
imul
sub
pop
scas
ljmp
pop
inc
pop
fsubl
push
dec
xor
push
jno
pop
rolb
mov
cltd
jnp
ret
fcomp
insl
sbbl
shr
insl
add
jne
hlt
xorb
mov
iret
jno
popa
mov
scas
push
xchg
cwtl
and
cmpsl
into
aam
shrl
pop
jge
addr16
cld
lcall
xor
idivl
cmpsb
leave
movsb
inc
cmp
add
mov
inc
out
pushf
dec
ftst
aaa
sub
mov
mov
movsb
cmp
enter
inc
pushf
jnp
mov
mov
adc
mov
jo
call
jmp
cmp
out
mov
ret
rcrb
icebp
inc
mov
and
jmp
inc
and
xor
push
push
adc
sbb
cli
test
add
call
jecxz
dec
test
mov
jg
xchg
inc
call
adc
mov
mov
ficompl
shl
jnp
pop
or
movsb
push
cld
mov
add
add
jne
inc
pusha
lea
xor
mov
enter
aad
outsl
inc
inc
bound
stos
in
jmp
sbb
inc
shlb
iret
punpckldq
adc
cmp
iret
aaa
pusha
and
pop
pop
mov
and
adc
pop
xor
xchg
shl
mov
fdivrl
push
mov
sub
fsubl
pop
ret
call
out
sbb
dec
push
mov
mov
and
dec
jg
call
push
mov
sub
pop
cmpsl
imul
negb
jg
dec
push
mov
inc
mov
xchg
and
arpl
push
fcmovbe
inc
lea
dec
lods
dec
fcompl
mov
add
les
lcall
jecxz
data16
aam
lods
lret
jne
in
int3
dec
pop
lods
adc
dec
repz
jle
mov
imul
dec
sbb
or
dec
and
in
add
sub
insl
xorb
lcall
pop
mov
push
or
jle
push
test
pop
jb
movsb
jne
popf
xchg
fst
push
add
and
mov
shr
movzwl
gs
push
addb
xor
dec
dec
das
call
dec
xor
jle
cmp
cmp
mov
dec
ljmp
inc
js
add
inc
pop
mov
add
dec
scas
popf
sub
stos
xlat
mov
arpl
mov
lret
shll
mov
mov
addr16
adc
jno
jle
inc
rcr
inc
or
inc
mov
dec
mov
mov
mov
pushf
adc
sti
mov
xor
loop
jg
adc
cmp
jb
cmp
sbb
or
out
dec
mov
pop
in
mov
mov
sub
test
pusha
add
xchg
call
or
jno
cmpsl
mov
icebp
bsf
stos
loope
xlat
push
cmp
xor
in
dec
push
inc
pop
push
mov
mov
adc
and
js
xchg
jecxz
adcl
mov
aaa
sbb
xchg
mov
push
in
xchg
push
mov
mov
and
jae
mov
pop
adc
test
ss
fs
adc
dec
loop
and
push
cld
mov
enter
sbb
stos
mov
cmp
mov
sbb
jo
mov
clc
and
out
dec
cmc
enter
sub
pop
adc
push
mov
arpl
xor
mov
ss
push
je
or
adcl
out
cld
adcl
cltd
add
inc
push
lcall
jbe
pop
daa
xor
outsl
test
lea
shrl
pusha
hlt
outsb
or
je
in
nop
out
int3
arpl
adc
outsb
fnstcw
pop
and
movsb
pop
testb
jle
ja
mov
xchg
cmp
lret
sub
lret
popl
popa
sub
dec
bound
aad
jle
sbb
or
jl
addr16
test
ret
and
mov
adc
sub
push
xchg
addl
sub
inc
xlat
repz
stos
add
jmp
and
aaa
repz
or
pusha
dec
gs
rcll
rorb
inc
push
cld
ss
cltd
cwtl
ss
mov
push
jbe
xchg
clts
sbb
add
enter
inc
add
dec
out
and
mov
ljmp
inc
sub
inc
mov
enter
lret
cwtl
xor
out
pop
mov
or
cmp
inc
pop
dec
enter
lea
mov
cld
push
adc
nop
inc
in
dec
test
or
rolb
mov
jle
ret
pop
outsl
shrl
sub
pop
xor
cmpsl
push
xchg
cs
push
mov
enter
sbb
test
in
push
ss
push
iret
inc
pusha
add
inc
gs
inc
mov
xchg
cltd
mov
sub
add
mov
mov
int3
gs
push
pop
repnz
or
cmp
add
lea
repz
scas
sub
dec
jne
scas
sbb
fwait
add
mov
js
movsl
cmp
in
mov
faddl
clc
push
int
or
imull
mov
mov
mov
aas
cmp
outsb
mov
scas
ret
jmp
fisubl
mov
es
popa
mov
mov
popa
jmp
call
xor
dec
stos
jg
sbb
mov
sbb
ret
test
daa
mov
repnz
or
jge
jmp
dec
ljmp
ljmp
fcoml
lret
pop
sahf
jg
stos
mov
mov
sub
push
fldl
imul
sbb
adc
mov
mulb
sbb
pop
shlb
jp
jle
dec
dec
cmpsb
sub
jbe
dec
adc
adc
pop
xchg
push
movsl
inc
leave
xor
inc
icebp
xor
mov
cmp
scas
push
ficoml
lret
mulb
sarb
mov
xor
push
testb
mull
push
or
outsl
mov
push
push
or
add
push
test
std
push
xchg
adc
pop
decb
xchg
aad
cmc
xchg
xchg
sub
pop
in
gs
daa
jle
shl
inc
sbb
addr16
sub
cld
insb
fcmovnb
pop
bound
pop
pushf
arpl
push
jo
movsl
pop
pushf
sub
cmp
mov
je
push
in
rclb
sar
fwait
stc
stos
mov
jns
add
inc
dec
fbld
cld
fcomps
adcl
adc
adc
aad
pop
mov
pop
push
or
pop
orb
cmp
sub
mov
scas
jecxz
pop
out
test
lods
cltd
xchg
lea
cmp
out
dec
lahf
lahf
inc
pop
into
or
fimuls
xchg
add
iret
test
jl
iret
add
sbb
lea
adc
or
xchg
jp
dec
repz
cld
push
in
push
and
cmp
mov
and
fistl
or
mov
fldl
cmp
sbb
imul
stos
pop
cs
neg
jge
jecxz
push
adc
xor
jb
arpl
shrl
mov
jo
dec
push
mov
sub
fisttpl
pusha
nop
sbb
sti
movsl
lahf
test
xchg
mov
mov
mov
lret
outsb
pop
sbb
xor
ja
aaa
test
and
add
call
add
mov
push
call
dec
or
loope
sbbb
dec
cmp
repnz
cmpsb
hlt
pop
dec
cmp
add
bound
lock
rcrl
into
add
mov
adc
jge
daa
sub
cmp
outsb
or
sbb
pop
or
movsl
test
cld
adc
loope
rol
jg
dec
mov
xlat
insl
out
scas
or
or
adc
inc
frstor
jp
pop
inc
inc
lods
mov
mov
dec
shl
sti
pop
aas
rorl
scas
pop
in
sbb
stos
cmp
add
cwtl
mov
movl
int3
xchg
call
test
call
mov
clc
and
loope
cltd
mov
adc
addr16
repz
and
push
push
dec
lret
int
je
push
repnz
lea
or
in
push
and
mov
jne
inc
scas
push
in
push
push
add
out
je
xlat
or
mov
imul
sbb
or
mov
or
cli
test
jae
cmp
dec
sub
xor
and
cmp
cmpsb
xchg
inc
aam
mov
pop
stos
sbb
dec
int3
sub
inc
xchg
inc
mov
mov
cld
inc
pop
cs
push
sbb
fnsave
fsubrs
ret
test
sbb
scas
ret
aad
into
gs
jle
movsb
cmp
in
test
mov
or
test
lret
jge
loopne
jne
aas
push
repz
stc
xchg
xor
push
adc
xchg
mov
dec
pop
int
cmp
insb
dec
xchg
mov
sbb
arpl
es
mov
loopne
and
les
negb
aas
lea
movb
mov
daa
lods
shr
shll
aaa
pop
lods
inc
stc
clc
adc
leave
xchg
popa
shlb
dec
pop
jl
cmp
hlt
mov
cld
leave
outsb
push
stos
mov
movsb
jbe
fstpt
fwait
out
inc
xchg
add
mov
push
mov
fsubrs
cmp
sub
jno
test
fildl
mov
mov
or
jle
inc
sub
sbb
cli
lods
add
sbb
arpl
lock
and
push
test
or
arpl
fists
icebp
mov
sarb
outsb
dec
sahf
mov
xchg
pop
sub
in
or
mov
ffree
sbb
lcall
dec
dec
inc
pop
dec
rcl
call
mov
out
push
fdivrl
or
outsl
dec
lcall
cmpsb
fs
dec
out
adc
ljmp
aaa
pop
movsl
pop
mov
rcrb
add
pop
repnz
and
shl
pop
jmp
rclb
insb
inc
loop
rcl
fstl
stc
xor
fbstp
loopne
mov
mov
xchg
sbb
add
push
jl
test
sbb
or
cmp
in
mov
sub
gs
imulb
dec
mov
in
insb
dec
loope
mov
data16
imul
test
inc
pop
add
add
xor
and
jecxz
les
pop
sarl
aad
rorb
jmp
sub
push
inc
shl
pop
pop
sahf
jp
aaa
into
movsb
imul
sbb
push
sahf
js
sti
jle
pop
lcall
int
mov
popf
fadds
cmp
imul
mov
mov
dec
mov
pop
inc
lret
outsl
js
subl
test
cmc
iret
mov
cmpsb
dec
inc
xor
inc
lds
and
loope
mov
cmp
jmp
xor
sub
dec
xchg
cli
xchg
scas
in
fdivrl
jecxz
loopne
imul
pushf
cmp
or
jb
insl
sbb
and
aaa
pop
test
jo
pop
pop
inc
ror
or
xlat
or
adc
sti
daa
mov
dec
test
mov
lahf
add
lret
call
xor
sub
inc
inc
inc
dec
mov
pop
enter
ror
mov
mov
pop
hlt
call
movl
push
inc
popf
add
sti
cmpsb
testl
push
push
mov
lock
pusha
into
mov
lea
mov
push
rorb
cmp
pusha
sbbb
pop
mov
mov
push
or
stc
xor
dec
sub
lret
ret
outsb
pusha
popf
xor
repnz
sbb
xor
or
mov
mov
add
mul
mov
sub
pop
adcb
or
and
clc
stc
enter
pop
popa
stos
clc
sbb
mov
sub
inc
fwait
in
sub
hlt
jae
pop
fwait
xor
pushf
int3
xor
xchg
inc
imul
or
arpl
or
cmp
aas
adc
out
push
xchg
out
test
test
push
aaa
jp
stos
mov
je
ja
lods
lods
push
in
xor
cwtl
ja
and
out
popa
rcrb
dec
cmpsl
xor
or
mov
or
xchg
push
add
jmp
addb
ja
rorl
in
clc
sub
lock
or
ret
into
repnz
fiaddl
add
test
mov
ret
mov
xor
out
jp
xchg
xlat
out
push
ret
ds
mov
sub
decl
pop
movsl
in
ljmp
ss
mov
push
out
add
jnp
adc
enter
cmpsl
lods
mov
pop
loopne
cmp
jp
test
loope
loopne
aad
pop
cmp
repz
shrb
in
add
lods
rcll
clc
jno
sub
dec
sub
inc
ss
bound
movsl
xor
sbb
data16
dec
or
cmc
in
lcall
icebp
js
mov
or
jno
jle
lret
jb
lea
jae
out
dec
dec
pop
cmp
inc
mov
orl
out
loopne
xchg
lret
adc
stc
push
pop
push
sbb
sbbb
xchg
dec
mov
es
xchg
adc
daa
sbb
cmp
addr16
sbb
mov
sub
pop
push
js
mov
ret
leave
lds
inc
pushf
lds
mov
fcmovnb
lock
aaa
scas
xor
mov
out
and
daa
xchg
xchg
inc
cmp
imul
imul
imul
cld
addr16
cltd
sbb
dec
sub
push
sub
jae
ret
and
cs
mov
bound
andb
and
into
dec
add
fists
xchg
adcb
adc
push
mov
cmpsb
repz
mov
adc
lods
jo
fbld
ljmp
jno
mov
test
pop
lahf
mov
out
fsubl
pop
ret
je
jecxz
rolb
jbe
pop
adc
loop
sub
cmpsb
cmp
mov
iret
gs
mov
or
mov
pop
xchg
leave
into
inc
jmp
adc
mov
ret
sub
dec
insb
add
stos
jns
fisttpll
in
out
cmp
ret
cmp
out
cmpsl
pusha
cmp
test
insb
fnsave
push
add
lds
pop
pop
lahf
cmovge
inc
shl
inc
mov
sbb
testb
clc
aas
xor
inc
pop
pop
fcmovb
jns
ja
xor
push
and
int
push
jbe
jecxz
or
xchg
leave
dec
mov
adc
fcomp
test
scas
pop
enter
pop
jb
sbb
iret
sbb
in
shll
std
and
cwtl
mov
mov
mov
xor
and
adc
pop
add
mov
popa
icebp
sub
and
dec
mov
mov
pop
mov
loopne
dec
dec
movl
fpatan
lcall
push
adcb
int3
cmp
pop
jle
in
aaa
pop
adc
cmp
fldl
sub
aaa
cmppd
pop
dec
cltd
imul
out
popa
xchg
aas
jno
xor
fisttpll
fldt
aaa
mov
aas
pop
xor
fisttps
stos
lret
repnz
arpl
pop
or
mov
repnz
inc
aas
fnstsw
mov
pop
mov
adc
mov
and
cmpsb
mov
andb
in
inc
dec
lcall
sahf
into
sbb
ljmp
mov
loope
lods
call
mov
mov
mov
mov
xchg
or
push
sbb
faddl
push
sub
popa
push
xchg
stos
inc
testl
cmp
push
out
push
es
scas
and
mov
adc
inc
sbb
frstor
mov
cmp
lea
outsl
jne
ffreep
stos
push
in
push
mov
mov
aaa
jbe
shll
dec
loope
cmc
adc
bound
sub
movsb
jo
and
xchg
mov
fistpl
or
xchg
fisubl
dec
pop
ja,pt
aas
push
pop
mov
push
sarl
ret
clc
pop
out
xor
cmp
shrb
fwait
cmpsl
jae
or
sahf
or
aas
lahf
cwtl
jns
pop
jecxz
xor
test
xor
xchg
out
stos
push
sbb
mov
or
fnstcw
pusha
mov
pop
xor
mov
loopne
pusha
adc
cmp
and
inc
push
loopew
mov
and
push
push
lahf
fs
rcrb
orl
jnp
rcrl
jge
ds
mov
js
xchg
dec
int
sub
sbb
outsl
mov
dec
stos
xchg
mov
iret
hlt
jge
xor
dec
push
jmp
mov
jo
pop
aam
ss
shrl
xchg
pop
push
sub
in
and
fiadds
stc
cmp
mov
js
and
pop
mov
xchg
push
stos
dec
mov
stos
movsb
cmp
lcall
mov
test
sbb
divl
out
aas
scas
add
jg
sarb
les
mov
and
xchg
stos
and
and
sbb
das
mov
lds
test
jmp
xchg
ljmp
pop
push
fdivrl
and
leave
int
mov
mov
xchg
sub
sub
lret
std
data16
xor
ret
insl
cli
test
add
dec
pop
addb
movsl
mov
dec
fcoms
mov
cmpsb
cmp
xor
lds
in
lea
mov
cmpb
xchg
lods
mov
insl
jb
cmp
cmp
inc
pop
xchg
sti
cmpsl
js
ficompl
mov
es
cmpsb
ret
add
jle
sbb
push
fstpl
mov
loop
test
rolb
mov
pop
repnz
mov
xchg
popf
int3
jns
shll
cmp
in
lods
std
mov
jge
xchg
cmp
stos
push
clc
fwait
int3
pusha
int
loope
in
dec
jp
mov
jnp
xchg
test
clc
test
sub
pop
adc
cli
leave
push
inc
jb
xchg
movsb
cmpsb
ret
push
mov
arpl
mov
insb
xor
aaa
pop
cmp
icebp
cmp
pushw
inc
repnz
cmpsb
std
mov
push
ljmp
jno
ja
shll
movb
rol
ds
fstps
pop
adc
xlat
mov
xlat
addr16
pop
jle
sub
pop
dec
add
mov
dec
stos
vpslldq
sub
mov
xor
xrelease
xor
mov
andnps
cmp
ljmp
fdivrl
jno
inc
out
pop
call
test
fcomi
popf
and
lods
push
pop
sti
push
or
jge
xchg
outsb
pushf
mov
pop
scas
jp
and
push
adc
lods
xchg
mov
cli
jnp
mov
sahf
push
in
stos
jne
mov
xor
sub
dec
data16
mov
xchg
cmpsb
ja
mov
dec
push
fstpt
popf
es
scas
pop
inc
push
inc
rcr
sub
movsb
shlb
test
das
sahf
lret
xor
jns
lret
adc
or
push
pop
cmp
gs
lods
out
mov
push
aad
or
pop
inc
xchg
add
dec
pop
mov
push
add
lds
dec
stos
sbbl
or
mov
jbe
xor
jl
jmp
pop
jae
adc
cmpsl
mov
jl
sub
cwtl
ret
or
ja
int
and
pop
mov
stc
scas
aad
jo
incl
loop
outsb
dec
mov
movsb
or
jne
sub
popa
xchg
inc
xlat
sub
test
dec
push
pop
popf
sbb
and
andb
jp
mov
sbb
cltd
adc
jbe
arpl
ss
ss
lds
pop
imull
inc
pop
xor
jecxz
pop
jl
cmp
cmpsl
adc
icebp
shl
and
daa
cmp
popa
or
ss
jo
addr16
popa
adc
add
jp
add
nop
pop
mov
aad
mov
dec
jge
loop
and
gs
push
mov
xchg
or
push
scas
push
ja
dec
iret
sbb
stos
mov
sbb
mov
push
cmp
scas
push
outsl
add
pop
cmp
pop
xor
imul
xchg
pop
in
cmp
adc
in
andl
push
popf
and
xadd
cmpl
in
mov
xor
pop
std
jl
cmpsl
ret
mov
push
sub
mov
aad
sub
jne
cli
scas
out
aad
xor
bound
movsb
das
and
lods
jbe
repz
pusha
lahf
aam
push
or
popf
mov
bound
test
mov
pop
mov
fsubrs
inc
mov
lds
adc
sub
pushf
imul
outsl
mov
adc
imul
xchg
add
push
sub
mov
cmpl
fidivrl
out
mov
jb
test
pop
push
xchg
stc
xor
adc
jo
pop
mov
repz
cmp
addr16
push
imul
or
lret
add
mov
inc
add
cmpsb
sub
xor
es
lcall
and
jb
mov
outsl
mov
js
sub
es
push
das
add
add
loopne
push
lods
ja
hlt
in
dec
imul
icebp
mov
enter
add
fcmovne
out
ficomps
imul
xchg
xor
and
xchg
and
jecxz
dec
cmp
in
lret
fbstp
adc
call
jae
aas
push
lock
enter
pop
or
jge
pop
es
xchg
xor
rcr
mov
addr16
in
pop
adc
mov
aas
imul
cld
outsl
out
dec
mov
pusha
jecxz
std
jg
pop
daa
jp
mov
sub
data16
bound
js
mov
and
push
xor
mov
fisttpll
jo
cli
clc
fwait
ss
mov
mov
pop
insb
adc
sbb
loope
mov
loope
inc
fs
add
xchg
ljmp
pop
and
push
inc
call
ss
pusha
in
jnp
adc
in
jp
aad
fisttps
lds
pop
mov
dec
pop
or
cltd
sub
xor
loop
xchg
call
push
ljmp
fs
ds
mov
dec
mov
mov
mov
push
jnp
jge
mov
adc
inc
dec
insb
adcl
jl
cli
jge
jns
lahf
pop
mov
pop
hlt
lds
imul
adc
mov
inc
adc
xchg
shl
mov
mov
in
ficoml
xchg
stos
cmp
outsl
dec
insl
mov
xchg
insl
or
inc
push
cmp
repz
dec
cmp
test
sbb
daa
xor
js
adcl
filds
mov
enter
loopne
or
enter
or
fxch
mov
add
jecxz
clc
loopne
jb
ds
cmp
test
inc
nop
sub
sbb
gs
mov
bound
fildll
call
push
in
scas
out
cmp
adc
lods
or
popf
into
adc
mov
out
mov
or
nop
fbld
inc
push
roll
or
inc
fildl
outsb
in
insb
sahf
fcmove
orl
and
rorb
mov
add
and
leave
hlt
cmp
push
insb
xor
mov
adc
repnz
test
repnz
icebp
stos
inc
mov
inc
test
std
pop
lret
cmpsb
popf
repz
or
mov
out
inc
out
test
js
cmc
dec
test
fdivp
mov
ret
mov
jbe
push
outsl
cmp
push
popf
and
test
jbe
xchg
movsb
cmpsb
fisubrs
pop
lds
ret
test
pop
mov
inc
std
fidivs
push
out
xor
xor
mov
add
cltd
and
movsl
inc
xor
icebp
lods
xchg
jo
cmp
fistl
push
dec
and
in
adc
jp
lcall
inc
push
fstpt
or
and
push
mov
inc
sbb
aaa
push
cwtl
mov
xor
stos
xor
stos
es
cltd
or
je
mov
xchg
fbstp
and
call
dec
flds
aam
call
imul
std
xchg
pop
adc
inc
lds
repnz
pop
jg
push
inc
adc
imul
ljmp
jno
push
pop
sub
sub
rolb
push
lock
sub
int
xchg
imul
fnstcw
dec
outsl
negb
cmp
push
dec
or
orl
pop
sub
movl
testl
pop
rorl
fldln2
icebp
pop
addr16
mov
inc
data16
inc
test
mov
add
aad
cmpxchg
ret
js
cmp
shrb
sub
ss
cmp
xchg
or
pop
push
push
dec
rorl
xor
scas
inc
mov
fxch
fstl
es
js
in
cwtl
dec
in
div
xor
pop
imul
sbb
icebp
mov
enter
push
shlb
lds
das
or
icebp
or
nop
daa
shll
sar
lret
and
inc
push
call
push
cmp
std
add
stos
ret
sarl
loope
sbb
jne
jns
or
cli
push
push
insl
call
int
ljmp
and
in
inc
arpl
ret
cltd
test
inc
xlat
arpl
outsb
test
mov
xlat
movsb
or
nop
adc
test
jns
out
movsl
mov
sahf
inc
dec
mov
xchg
int
shl
push
fldcw
jns
leave
inc
fdivl
xchg
pop
gs
fcomps
mov
push
jae
push
insl
mov
mov
cld
lcall
push
repnz
cmpsl
nop
jo
add
mov
pop
mov
sbbl
dec
xchg
andl
mov
jo
pop
xchg
dec
movsb
lret
and
or
cmp
pusha
pop
dec
mov
inc
fmuls
and
js
in
pop
jmp
mov
fdivl
in
lret
sub
mov
jo
call
or
bound
pop
imul
cmp
sub
sbb
nop
xchg
add
sbb
ljmp
cmp
push
in
jge
shll
mov
in
push
push
mov
mov
mov
mov
sub
in
jg
cmp
pushf
inc
ljmp
jmp
cmpsl
pop
iret
pusha
int
cmc
xchg
mov
mov
xchg
mov
cwtl
in
addl
pop
in
push
or
lret
jno
nop
push
push
jg
xor
mov
mov
xor
push
add
imul
imul
or
pusha
negl
and
add
add
sbb
xchg
mov
mov
mov
cmp
inc
jl
int
rclb
shll
sbb
jecxz
out
stos
lock
add
ficompl
in
sub
clc
popf
inc
imul
filds
push
dec
inc
movsl
add
jge
add
test
push
clc
popl
fnstcw
lcall
and
sti
scas
mov
pushf
rol
rorl
ret
pop
in
test
push
aaa
into
jb
mov
jnp
sub
pushf
mov
push
push
push
clc
mov
adc
mov
sbb
ret
jp
lods
psraw
adc
shlb
dec
loope
mov
push
fsts
sub
jne
mov
cld
inc
fdivrl
adc
cltd
movsb
test
cs
imul
add
mov
jb
push
arpl
mov
icebp
cmpsl
scas
mov
pop
stc
add
loope
sbb
mov
cwtl
rorb
shll
push
outsb
mov
ljmp
cwtl
stos
mov
xor
mov
xor
and
jecxz
pop
cld
aad
and
pop
jmp
inc
xchg
pop
jle
call
out
xor
fsubl
jmp
popa
dec
outsl
jns
xor
ret
in
nop
cltd
std
icebp
push
daa
inc
ss
adc
inc
fs
int3
and
jbe
in
sbb
adc
adc
repz
repnz
adc
sub
and
lods
xchg
jbe
btc
mov
das
push
jp
push
push
stc
and
and
mov
mov
into
shl
or
and
cltd
das
push
int3
shll
cs
iret
dec
push
dec
cmp
mov
jle
xor
or
pushf
pop
in
sahf
leave
adc
push
add
xlat
and
and
popf
ja
imul
imul
pop
insl
shlb
pop
jecxz
int
es
or
sub
js
loopne
push
jb
mov
push
fisubrl
mov
pop
hlt
mov
xchg
pop
clc
stos
jl
sub
xchg
inc
aam
lret
dec
inc
pop
sti
leave
mov
push
mov
cmpsb
cmp
sbb
inc
in
jecxz
icebp
adc
call
sti
shrb
pop
popa
mov
test
adc
ja
sub
jns
push
jl
inc
mov
cltd
xor
xchg
inc
insl
push
xchg
xchg
sub
and
sub
cmp
dec
add
sub
mov
shlb
imull
fcmovnu
push
xor
adc
sbbb
rcrb
sbb
hlt
dec
mov
das
repnz
add
pop
das
mov
pop
imul
sub
pop
aam
or
adc
icebp
xchg
pop
shll
shrl
jb
hlt
rorb
clc
jae
fnstenv
and
insl
jp
xchg
push
pop
pusha
addr16
ss
lea
xor
cmp
stos
out
divb
inc
and
rorl
inc
pop
mov
push
test
push
mov
cmp
fsubs
cmp
xor
xor
mov
add
xlat
mov
push
inc
addr16
sti
int3
mov
dec
testb
xchg
mov
fidivrl
dec
xchg
inc
bound
adc
mov
mov
or
scas
stos
jne
cmpsb
scas
jp
mov
or
mov
dec
es
ret
lds
bound
xchg
adc
add
lods
add
nop
sub
inc
add
cwtl
push
out
pop
rcll
xor
out
push
adc
xor
jle
int
mov
hlt
push
mov
aaa
push
fstpl
out
sbb
xchg
jp
lret
sub
xchg
mov
push
leave
and
cmp
popf
and
pushf
mov
lods
mov
and
and
insb
jp
shl
dec
push
cmp
rclb
sub
and
ficomps
cmpl
aad
lahf
inc
out
arpl
push
shlb
pop
pop
jecxz
fdivrs
fisubrl
mov
mov
jp
push
mov
xor
cmpsb
movsl
repnz
negl
mov
call
nopl
fchs
and
push
rcrb
cmpsl
fs
cs
incl
inc
or
icebp
mov
mov
pop
int
in
or
xchg
push
inc
mov
push
sbb
rcr
in
sti
jns
add
aam
jno
daa
xchg
push
xor
bound
ja
into
and
and
cmpsl
movsb
das
cltd
arpl
or
and
out
cld
aas
mov
stos
fiaddl
mov
hlt
rcrb
pop
pop
or
xlat
mov
mov
stc
js
fcom
testl
test
pop
popa
clc
inc
movsl
insb
xchg
xor
mov
les
lds
lock
insb
sub
mov
mov
and
stos
inc
add
or
cwtl
gs
mov
hlt
pop
inc
push
sbb
push
inc
push
cmc
pusha
cmpb
fnsave
cmc
rol
into
out
test
lret
adc
sub
cmc
mov
push
mov
push
sub
in
add
ss
vpcmov
jns
lahf
lea
cli
je
xchg
xchg
jge
lahf
push
xchg
lods
jns
pop
das
push
das
das
xlat
cmp
icebp
sub
fistl
out
fistpl
dec
sbb
inc
ret
ret
aas
data16
lret
je
xchg
mov
cld
adc
mov
sti
push
cmpsb
rcl
inc
xlat
stc
inc
mov
mov
jmp
cmp
out
lods
xchg
xor
mov
or
lods
movsb
mov
jae
insb
cmpsb
rcrl
mov
pop
fstpt
pop
sub
adc
mov
mov
xor
std
aam
inc
xchg
sub
sub
sbb
mov
outsl
sbbb
mov
xor
adc
jmp
andb
mov
cmpb
and
addr16
dec
out
push
jecxz
mov
sar
sub
dec
cmpsb
ds
cmpsb
sub
add
mov
xor
mov
fwait
shrl
into
sbb
xor
inc
lods
mov
and
addr16
jb
test
mov
xchg
and
pushf
xchg
jp
or
jnp
push
pusha
fldt
or
imul
xchg
xor
or
ss
xchg
movsb
mov
ja
insl
in
xchg
outsb
inc
xchg
pop
les
test
aas
js
dec
mov
rcll
mov
jecxz
fdivp
cmp
mov
pop
in
xchg
sbb
adc
rcl
jecxz
dec
sbb
shlb
dec
movsb
add
aas
pop
push
fidivrl
lret
in
jae
push
mov
mov
push
inc
lods
cmpb
nop
in
cmp
inc
pop
sub
insl
aad
push
imul
mov
shl
mov
sub
inc
fsub
adc
sub
sti
scas
inc
sub
hlt
xor
dec
mov
mov
cmp
mov
enter
push
ja
jmp
jb
ja
xchg
in
popf
in
mov
or
sub
and
cs
cmp
mov
or
jns
cmp
lock
jns
les
and
test
gs
pop
xorl
mov
adc
push
insl
jmp
les
adc
pop
cmpsb
xlat
mov
mov
mul
sti
push
mov
mov
push
std
jg
inc
mov
push
cwtl
loopne
ret
lea
gs
mov
xchg
mov
clc
imul
nop
mov
and
int3
out
add
andl
ja
sbb
test
jge
ds
in
mov
daa
ljmp
push
test
ret
addr16
pop
imul
jge
adc
lods
div
sbb
out
fisubl
dec
or
jmp
mov
std
loop
pop
shrl
leave
int
push
popa
push
dec
xor
mov
xor
cwtl
pushf
pop
repz
stc
xor
or
daa
jecxz
test
jmp
jg
lea
cmp
pushf
cmc
mov
xor
mov
inc
mov
mov
pop
jno
int
pushf
je
cmp
xchg
and
out
fstpt
dec
jmp
movsl
and
adc
insl
scas
loope
mov
mov
inc
xchg
and
add
or
jbe
mov
aas
cmp
int
adc
jo
fimull
cld
mov
dec
jne
int3
daa
aaa
stos
xchg
push
sbb
pop
dec
loope
shll
mov
jbe
js
lret
inc
or
mov
mov
jp
cmp
and
iret
fidivrl
lret
mov
dec
faddl
ret
shlb
dec
fcoml
push
mov
sbb
xchg
leave
and
in
pop
cld
push
sahf
sub
das
roll
dec
pop
add
jecxz
add
inc
jo
shll
inc
pop
int3
fadd
pushf
mov
iret
fs
cld
dec
test
aam
roll
pop
popf
jnp
dec
mov
mov
clc
xor
cmp
enter
mov
and
mov
mov
mov
hlt
outsb
mov
aaa
std
aas
movsl
adc
pop
mov
popa
adc
dec
popa
insb
jecxz
ret
cmp
xor
insb
jecxz
sar
jb
inc
mov
or
xchg
aad
push
rol
lret
bound
lds
dec
pop
sbb
lds
stos
fwait
dec
and
fnstsw
mov
inc
jb
mov
pop
pusha
push
stc
shrb
xor
or
gs
pop
xchg
cmp
cmc
pusha
xchg
pop
addr16
popa
adc
leave
pop
insb
push
mov
or
jge
bnd
or
shrd
mov
adc
imul
cmp
in
rol
push
inc
push
jl
mov
pop
test
xchg
je
lcall
and
rep
jge
pop
or
xchg
mov
out
jno
iret
out
mov
pop
loope
and
shl
sub
cmp
inc
cmc
mulb
mov
or
test
push
mov
ret
cs
inc
repnz
mov
mov
dec
push
mov
out
push
push
or
outsb
mov
test
test
cs
jns
ficompl
rcr
xchg
rclb
imul
inc
and
popa
pushf
jge
xchg
in
cmp
jmp
dec
xchg
add
aas
lock
xchg
push
jno
push
mov
jle
inc
jb
fisubl
rcrb
js
and
jne
sbb
xor
cltd
cmp
adc
sbb
loope
popf
xor
xchg
in
cld
jb
jnp
sbb
push
icebp
sbb
jns
dec
xchg
out
xor
add
scas
adc
mov
adc
cmp
lahf
fistl
aas
es
pop
ret
shll
mov
push
sub
sub
push
ljmp
inc
inc
jne
and
inc
cld
dec
cltd
ret
sti
mov
lock
mov
jle
enter
vmovntdq
and
and
sub
cmp
xor
popf
sub
faddl
xchg
jns
sbb
inc
out
lods
mov
cmp
fimull
lcall
fsubrl
into
xor
push
push
pmaddwd
insl
add
add
push
mov
xchg
scas
repnz
aas
jbe
jl
mov
pushl
pop
xchg
dec
into
in
add
pop
mov
pusha
and
adc
cmp
mov
sbb
cmpsb
sahf
dec
rcrl
jge
mov
das
and
push
push
imul
xchg
mov
mov
mov
add
push
pop
outsb
ja
ret
shll
sbb
add
or
xor
gs
and
jnp
sub
fldenv
push
into
pop
lods
aad
pop
sahf
fidivrs
pop
adc
inc
bound
and
in
ret
inc
int3
push
adc
aaa
lcall
and
lods
cwtl
leave
adc
jne
pop
xlat
in
jb
std
xchg
xchg
cs
test
dec
lret
pop
xlat
out
pop
lret
mov
inc
das
dec
jp
pop
add
dec
test
lods
sub
push
jge
js
lds
jb
cmp
sbb
xchg
mov
nop
in
xchg
test
aam
fcomip
sbb
cltd
addr16
mov
inc
inc
pop
mov
mov
add
pop
dec
inc
cld
xchg
jle
aaa
stos
mov
push
adc
jbe
push
hlt
xor
int3
scas
bound
xor
fisttpl
ret
xor
inc
in
lock
jne
loop
adc
xchg
push
mov
idivb
or
fistpll
imul
rorl
sti
xor
cmp
stc
mov
cmp
ret
fcoml
pop
lea
jl
ds
pop
popf
cli
mov
inc
mov
push
pushf
sbb
mov
jno
cli
in
push
inc
popf
or
icebp
movsl
xor
sbbl
out
aam
or
jb
mov
mov
test
dec
pop
cmp
inc
aad
std
push
stos
mov
push
mov
push
gs
jge
notb
or
xor
pop
cmp
mov
dec
pop
popf
mov
stc
test
in
lret
dec
movsl
adc
mov
add
jnp
movsb
mov
sti
std
inc
add
dec
out
fcmovnu
nop
rorl
mov
jbe
aaa
lahf
dec
inc
fwait
icebp
adcl
mov
fbld
xchg
xor
sbb
mov
imul
push
xchg
and
aaa
adc
js
shll
fwait
xor
in
cmpsb
cmp
in
test
mov
jne
adcl
in
add
movsl
push
and
and
push
pusha
add
mov
dec
pop
aaa
in
in
decl
inc
in
outsb
sub
dec
pop
cmp
shlb
pop
dec
mov
mov
push
fs
dec
scas
inc
dec
jbe
rcrb
xchg
mov
aad
adc
push
xor
cmpsl
test
sbb
inc
in
jbe,pn
xchg
push
xchg
shrl
add
divl
adc
xchg
inc
popa
call
hlt
mov
cmpsb
pop
addb
mov
sub
and
int3
pop
repnz
push
mov
ret
dec
and
mov
roll
jge
dec
out
scas
sti
jl
sbb
loopne
or
sub
or
sub
insb
jp
sbb
sub
adc
add
in
or
push
aam
push
mov
jns
inc
cmp
in
fs
add
mov
sub
fnsave
mov
mov
jns
ss
jns
inc
arpl
daa
cli
mov
aad
or
lea
out
jb
out
enter
pop
dec
aad
inc
or
out
jb
mov
imul
int3
lret
pop
orl
or
or
push
or
dec
js
or
jge
sub
push
inc
pop
pop
out
es
test
arpl
mov
cs
fiaddl
iret
add
scas
and
or
outsb
pop
sahf
lahf
sti
addl
xor
or
repz
dec
loop
bound
sub
mov
pop
cmp
cmc
dec
mov
sub
rcrb
in
lea
mov
sub
fnstcw
aam
jnp
insl
lods
lret
push
mov
inc
jp
cwtl
pop
cwtl
fstl
dec
cmp
jnp
nop
push
mov
push
add
out
jge
sub
jo
and
dec
jecxz
inc
test
cltd
jg
push
xchg
pop
sti
dec
lods
push
push
int
stc
dec
add
imul
lcall
jne
in
adc
adc
pop
lret
xchg
xchg
rcrb
cmp
jnp
xorl
sbb
scas
xchg
out
mov
gs
outsl
mov
stos
ja
pop
popa
fsubr
mov
adc
addb
int
xchg
mov
push
dec
rolb
ljmp
icebp
pop
leave
dec
push
mov
pop
mov
or
aad
xchg
sbb
mov
int3
push
insb
or
dec
pop
outsb
loope
in
dec
cwtl
cmp
clc
jmp
je
xor
cmpsb
lcall
mov
fsts
cmp
out
push
xor
xchg
push
inc
xchg
jae
lahf
faddl
cltd
cmp
in
test
jns
mov
or
jno
ja
or
pop
inc
iret
inc
or
insl
pop
dec
ficompl
fucomip
out
fcoms
addr16
pop
or
push
repnz
mov
push
rol
fldl2t
inc
dec
or
xchg
negb
daa
pusha
push
js
push
sar
jno
cmp
xchg
test
aas
mov
push
jl
and
dec
sub
pop
pop
es
rorl
mov
adc
and
stos
dec
push
or
jne
fnstenv
mov
xchg
stc
out
adc
inc
lret
int
pop
ds
inc
pop
jle
dec
rcrl
jl
loopne
mov
jo
lea
shrb
adc
adcb
hlt
lods
xlat
lret
push
pop
int
scas
push
sub
cli
add
fiaddl
and
call
pop
aas
pop
cld
cmp
dec
stos
std
inc
hlt
or
cmp
add
movsl
jb
out
subb
mov
mov
insl
lea
sub
lods
test
addl
icebp
xor
push
or
out
jl
lock
inc
jle
cmc
cmc
mov
outsb
and
insb
mov
pushf
jns
jbe
and
iret
fucomip
leave
push
mov
dec
pop
xchg
hlt
add
pop
mov
pop
mov
inc
test
std
in
cmpsl
sahf
dec
dec
out
mov
or
lcall
push
arpl
mov
or
ret
imul
lcall
stos
xchg
pop
outsl
out
fdivrl
loop
push
lcall
sbb
inc
in
hlt
inc
xor
mov
in
inc
ficoml
aam
cmp
into
jge
or
dec
rclb
repz
jp
gs
ret
mov
cmp
lahf
and
out
gs
or
adc
xchg
cwtl
and
mov
sti
fwait
out
inc
iret
sbb
add
push
add
lds
pop
pop
jne
rol
mov
jnp
outsl
push
icebp
mov
xor
lea
mov
sub
rorb
sbb
sbb
loope
jno
pop
sarb
push
push
mov
pop
adc
mov
jno
sbb
cmc
mov
push
or
mov
jns
mov
inc
inc
lock
sbb
jmp
ficompl
mov
mov
ret
sub
outsb
lods
dec
pop
test
mov
cmp
loopne
pop
xor
xor
cmc
xchg
pop
dec
enter
aad
in
subl
imul
fldenv
cmp
adc
and
shl
cwtl
mov
dec
je
dec
xlat
push
dec
sbb
icebp
dec
jge
cmp
std
cmp
adc
sbb
xchg
pop
lret
cltd
arpl
cmpl
inc
adc
out
push
pusha
into
xor
cli
push
roll
mov
or
notb
in
jp
fisubl
test
minps
cli
jmp
fiadds
or
mov
adc
outsl
daa
mov
je
xchg
pop
pop
and
loope
out
ljmp
jae
mov
adcl
sbb
mov
in
mov
es
xchg
mov
addr16
or
mov
lret
ja
dec
pop
inc
rcrb
fwait
add
xchg
push
aad
dec
push
cmc
mov
les
insl
mov
pop
insl
int3
popf
dec
and
mov
mov
mov
mov
mov
cmc
adc
add
jbe
pop
jbe
push
xlat
cmp
adc
jmp
sbb
or
in
inc
cmp
outsl
xor
das
fiadds
add
mov
push
nop
pop
lds
cmp
pushf
cltd
gs
mov
and
mov
test
fcoml
push
adc
jbe
mov
sbb
test
xchg
mov
mov
xchg
jbe
out
sub
add
push
dec
fisttps
std
mov
add
xlat
cmp
pop
add
xchg
fadds
je
and
add
jecxz
hlt
adc
mov
mov
stos
cltd
xor
ja
mov
pop
ror
inc
hlt
lret
notl
dec
cmp
out
jno
loopne
sti
mov
sub
push
xor
insl
adc
mov
adc
imul
and
dec
and
jae
inc
mov
xchg
aas
push
popf
bound
sbb
xchg
jmp
je
pop
into
jb
xchg
mov
rcr
hlt
add
dec
lcall
sub
shlb
push
push
xor
push
fsubrs
lret
jnp
jmp
incl
notl
push
fcompl
mov
ja
mov
jl
push
addr16
mov
das
clc
mov
in
inc
in
das
aaa
push
or
out
jle
ljmp
mov
lds
push
insb
adc
popf
push
ds
xlat
or
adc
sub
xor
cmpsb
xchg
jl
dec
lret
fsubs
repz
add
mov
pop
mov
aaa
sub
ja
scas
jg
js
mov
and
inc
pushf
imul
fdivrl
sbb
mov
divb
repnz
in
mov
mov
xchg
sbb
jo
adc
imul
mov
lods
fbstp
daa
lcall
enter
sub
sbb
cli
mov
lret
add
mov
imul
jp
cld
in
jnp
sub
cmc
iret
jno
cli
daa
mov
gs
xchg
int3
insl
cld
adc
clc
insb
add
cmp
pushf
dec
lahf
mov
subb
jecxz
cmpsb
push
push
or
pop
in
xor
leave
jl
fiaddl
sbb
bound
movsb
ds
ljmp
pushf
shlb
sub
mov
add
inc
ljmp
xor
int
daa
lret
xchg
sub
mov
and
sarb
or
mov
mov
adc
int3
sub
dec
adc
inc
loopne
jae
sbb
adc
sub
push
aaa
ret
cmc
xchg
push
jns
cmpl
loop
cmp
fwait
lret
dec
cltd
jo
jecxz
xchg
lret
inc
movsb
cmp
gs
jns
dec
pop
lahf
call
push
call
lods
sbb
ror
shll
rorb
fisttpl
daa
dec
inc
mov
inc
gs
fiaddl
lahf
pop
mov
mov
in
mov
movsl
arpl
aam
mov
cmp
xchg
rcrb
repnz
cmp
sbb
and
pop
fisubl
jbe
mov
mov
lds
es
out
lea
movsl
xor
lret
add
nop
mov
outsb
in
mov
dec
cmp
lea
add
inc
pop
dec
lcall
dec
dec
push
xor
cmp
insb
insl
stc
scas
mov
fwait
pop
xchg
adc
lahf
sarb
xchg
fdivr
test
orl
loopne
mov
inc
jmp
and
xchg
not
ds
roll
mov
xchg
mov
ljmp
mov
nop
push
push
xor
stos
push
outsl
into
and
rcrb
int3
mov
or
push
int
pop
sarb
mov
shll
push
repnz
call
dec
stos
push
or
pop
xchg
out
or
and
sbb
roll
mov
decb
stc
cli
mov
mov
push
lods
cld
jb
or
xchg
jae
data16
mov
push
stos
pop
sub
notb
mov
stos
test
inc
or
sbbl
stos
and
movsb
xor
loop
push
push
in
test
fcmovb
add
negb
dec
dec
mov
jecxz
aad
xor
cmp
mov
ret
data16
in
mov
push
test
aaa
jmp
push
in
adc
ss
push
or
or
mov
xchg
push
xchg
cwtl
cli
rorl
cmpsl
ds
jne
out
cmpsb
cmp
pop
push
test
mov
jns
sbb
and
lock
sub
test
xor
loopne
nop
bound
aaa
mov
imul
in
scas
shrl
mov
fistpll
data16
push
test
pop
test
cmp
jecxz
pop
sbb
push
add
stc
in
jmp
inc
push
out
out
mov
loop
inc
loop
inc
mov
ja
imul
dec
xchg
xchg
out
xor
movl
icebp
sarb
gs
int3
adc
and
add
mov
inc
and
xchg
dec
dec
and
ds
sub
pop
pop
mov
pop
popf
fcoml
mov
cld
push
repz
xchg
and
push
andb
jne
pop
mov
jp
ds
jp
pushf
gs
or
add
mov
and
test
ljmp
mov
out
mov
or
stos
xchg
fildll
cmpsl
cltd
add
repz
mov
xor
mov
test
xchg
lods
mov
push
repz
addr16
xchg
xchg
mov
lret
xor
sub
and
adc
push
cltd
int3
add
pop
test
inc
cmp
cwtl
jg
pop
lds
and
xchg
in
fs
je
test
aas
fbld
jmp
or
jbe
jmp
xorl
bound
inc
lods
pushf
add
test
out
push
xchg
ja
popf
sbbb
cs
mov
mov
sbb
sbbl
mov
or
mov
push
fisubrs
test
sub
cmp
movsl
sbb
mov
je
fsts
jg
cmpsl
or
out
icebp
mov
nop
add
xchg
inc
fcoml
jmp
mov
xchg
fiadds
adcl
add
daa
dec
lcall
mov
icebp
movsl
mov
xlat
push
pop
loope
shll
or
xchg
lcall
jns
test
cmp
test
adc
call
xchg
pop
mov
jmp
mov
loope
ret
mov
jg
cmp
testl
sub
mov
and
bound
dec
jmp
mov
sbb
and
mov
movsl
hlt
test
cmp
push
dec
fisubrl
mov
fldl
aaa
xchg
mov
push
jle
addr16
xor
inc
movsb
mov
int
lret
clc
and
std
cwtl
pop
and
add
imul
repnz
xlat
mov
ja
pop
mov
pop
scas
adc
mov
lret
jl
inc
push
mov
mov
jns
mov
cld
cs
adc
outsb
pop
fdivl
cmc
cmp
pop
mov
dec
int
mov
inc
pop
cs
insb
and
ss
out
push
cmpsl
xchg
les
sub
xorl
cltd
push
pushf
test
xchg
push
push
js
or
xchg
insb
xchg
andl
sbb
xchg
xchg
sub
in
rolb
dec
jp
pop
mov
fsub
pop
jbe
cmp
lret
inc
dec
out
fs
fsin
call
lods
xchg
xchg
dec
dec
fnstcw
ret
fistpll
js
dec
into
adc
cltd
xor
icebp
mov
loop
push
jae
xchg
lods
pop
mov
add
mov
jecxz
xchg
add
aam
out
cmc
add
jge
lret
cmp
push
dec
in
cwtl
sti
bound
bswap
outsb
add
cmpsl
mov
fdiv
adc
pop
loop
sti
push
xor
ret
loope
jnp
push
lods
mov
add
arpl
inc
mov
ds
lods
jg
xchg
pop
mov
inc
push
mov
and
xchg
je
sahf
xchg
dec
push
xor
out
not
mov
xor
je
test
inc
jbe
popa
das
lretw
jbe
shl
xchg
or
xchg
xchg
sub
mov
mov
inc
popf
gs
or
add
jnp
cmpsb
adc
adcb
sub
fcompl
jl
mov
in
inc
int3
popf
aad
movsl
icebp
addl
sarb
aad
jge
mov
fsubl
mov
aam
in
in
std
push
cmpsl
outsb
mov
sub
insb
aad
mov
xor
push
push
jne
and
mov
inc
sbb
xor
jl
mov
into
je
test
jbe
outsb
inc
pop
mov
jmp
insl
in
pop
insb
and
jmp
loope
leave
ss
push
orb
insb
out
push
repz
fnsave
pop
adc
mov
enter
xor
std
mov
sub
std
or
sbb
and
pop
into
jle
ja
inc
or
add
ror
in
bndstx
push
xchg
adc
pop
inc
rorl
lock
adc
push
jg
mov
cmc
mov
mov
addr16
xchg
push
adc
push
and
fwait
test
jp
insl
cli
or
mov
popa
or
outsb
jnp
ret
add
mov
xor
lock
das
push
test
mov
fdivp
pop
add
repnz
jle
lea
addr16
fiadds
int
mov
test
pop
or
xor
insb
jl
xchg
mov
clc
mov
push
cmpsl
pop
or
and
mov
movsb
mov
in
or
xchg
es
inc
ljmp
rcll
lret
mov
fs
dec
lret
mov
cmp
push
xchg
jo
imul
inc
inc
xlat
js
adc
sub
pop
pop
into
push
or
adc
mov
sbb
aad
in
ret
sbb
aas
adc
sbb
adc
ret
mov
loop
sahf
add
xor
out
push
mov
xor
int
mov
xchg
jns
addr16
dec
dec
adc
xchg
jmp
sbb
dec
sub
inc
mov
xor
fs
mov
push
mov
lds
inc
mov
inc
adc
xor
stc
cli
sub
inc
lds
add
aam
jmp
out
stos
dec
jns
jno
jge
dec
imul
jae
lret
mov
mov
scas
inc
stc
push
cmc
mov
scas
xchg
xor
fs
jbe
lock
aam
mov
inc
stc
pop
imul
mov
fs
fidivrs
stos
jbe
repz
aad
adc
xor
addr16
pop
adc
bound
xor
stos
and
xchg
gs
dec
push
jbe
repz
mov
pop
cwtl
fldenv
push
in
push
dec
imul
dec
and
push
outsb
dec
mov
pop
and
imul
cmpsb
outsb
aas
into
pop
dec
inc
lcall
adc
les
add
push
cmc
shl
lds
lahf
jbe
adc
mov
sbb
adc
mov
push
pop
clc
loopne
mov
enter
sete
sti
jb
jbe
ret
sti
add
and
xchg
sbb
jnp
in
pop
je
cmc
add
aad
cmp
cmpsl
pop
cmp
push
cmp
push
movsl
sub
xor
mov
push
sub
add
insb
mov
sbb
add
test
loope
pop
out
shll
cmpsb
data16
inc
sub
cld
or
cwtl
push
fcomps
scas
jg
aad
je
mov
jbe
push
and
cmp
xor
stc
test
lcall
arpl
mov
lcall
mov
out
pop
cltd
cwtl
inc
cltd
inc
mov
call
clc
call
leave
sbbl
loope
dec
aas
aad
mov
mov
push
je
cmp
sub
pop
fwait
pop
iret
xchg
mov
repnz
outsl
jo
dec
xchg
addr16
push
mov
push
inc
inc
or
rcl
sbb
sub
imul
push
push
out
test
cmpsl
out
ja
lds
aaa
xor
das
or
jge
adcb
out
loopne
call
xor
jo
dec
stos
xchg
mov
rcrl
lods
aad
fucom
idivb
iret
stc
adc
mov
nop
aaa
pop
push
lahf
sbb
mov
scas
mov
es
testb
lahf
mov
jo
push
das
and
jae
out
mov
jbe
jns
xchg
sub
cmc
mov
or
adc
xor
mov
outsl
loop
out
add
mov
adc
sbb
pop
mov
rolb
pushf
inc
in
les
and
mov
icebp
icebp
push
je
pop
sub
pushf
cmp
xchg
rcl
ljmp
bound
xchg
pop
push
add
jecxz
popf
lods
clc
mov
in
mov
push
out
jne
inc
divb
fs
push
add
insl
cli
jecxz
loope
push
sub
int
jl
addr16
lods
jle,pt
xchg
or
addr16
xchg
sub
sbb
lcall
bnd
sub
das
cmp
out
aas
mov
mov
insb
icebp
stc
rcrb
push
sub
pop
add
inc
xchg
mov
inc
lock
sahf
inc
sub
and
cltd
ficompl
or
push
lds
data16
and
setl
bound
cmpsb
jecxz
mov
dec
fldl
xchg
dec
xor
gs
push
fidivrl
xchg
mov
jmp
mov
dec
pushf
repnz
pop
data16
mov
adc
test
bound
lret
fnsave
and
aam
jmp
jg
jl
jg
sub
inc
inc
loopne
pop
pop
or
mov
aam
lea
movsb
in
or
xchg
jl
adc
xor
pop
les
mov
xor
lahf
push
mov
pop
cmp
add
pop
pop
movsl
inc
in
pop
and
loop
idivl
inc
test
enter
jno
jmp
jbe
push
xchg
add
insl
lret
into
pop
int3
inc
jp
inc
mov
mov
pop
stc
inc
adc
pop
and
sbb
jns
lea
push
jns
xchg
fistpll
jl
stos
jmp
shrb
jno
jbe
ret
push
jl
cmp
sbb
in
adc
decb
add
pop
dec
andl
xchg
in
sbb
mov
cs
jle
adc
mov
ret
dec
inc
sbb
inc
out
inc
push
lret
jnp
inc
fs
mov
data16
sbb
jo
dec
shl
mov
dec
add
jp
nop
insb
mov
adc
xor
jae
mov
in
lea
pop
ficompl
jae
or
stos
adc
push
xor
or
jb
pop
cmpl
push
jle
fiaddl
adc
sub
out
mov
jb
mov
incl
fwait
sbb
sub
add
jmp
xchg
fists
dec
out
movsb
data16
shll
clc
stos
filds
gs
mov
js
xor
dec
jne
cld
lret
adc
sets
or
jl
pop
jne
inc
jp
insl
pop
ss
sti
int3
scas
jno
sbb
out
pop
adc
inc
mov
in
test
aad
lods
ss
pop
les
pushf
lahf
insb
add
test
mov
push
lods
mov
scas
out
inc
loop
adc
ljmp
test
pop
push
and
add
jnp
mov
push
ret
xor
mov
xchg
sub
mov
ljmp
in
xor
ret
arpl
ja
pop
fsubs
std
xchg
mov
rorl
sbb
sub
dec
and
xor
sub
inc
ret
inc
pushf
ja
or
daa
arpl
inc
inc
cld
call
push
aaa
mov
inc
pusha
pop
pop
movsb
jmp
xor
xchg
nop
add
and
or
test
sub
push
subl
test
mov
les
sbb
lds
add
movsl
insl
mov
jnp
movsl
pop
insb
repz
jl
stos
into
mov
int
pop
packsswb
jbe
mov
sahf
and
leave
pop
mov
sub
call
ret
push
cs
in
rorb
in
dec
jae
xchg
adc
daa
idivb
push
jbe
movsb
jmp
jo
sub
pop
stc
xchg
cld
adc
xchg
outsb
nop
pop
call
mov
ds
mov
cmp
cwtl
repnz
clc
pop
mov
push
mov
shl
adc
inc
xchg
popf
stc
aas
das
mov
sti
inc
jb
fs
push
stc
nop
xchg
lcall
lret
jae
push
lcall
stc
mov
outsl
add
pop
loop
add
mov
or
inc
adc
hlt
leave
outsl
mov
sbb
mov
movsl
icebp
lea
insb
testl
addr16
cld
std
fisttps
sbb
mov
mov
cmp
mov
stos
repnz
inc
mov
and
push
inc
dec
dec
and
pop
xor
data16
lds
pop
insb
stc
cmpsb
add
adc
imul
dec
or
mov
jnp
mov
mov
sub
push
pop
and
add
mov
fs
cmc
xlat
mov
xchg
inc
mov
push
ljmp
imul
repz
in
xchg
pop
shl
pop
add
adc
adc
das
dec
mov
out
sarl
sahf
xlat
icebp
cld
inc
mov
mull
cmp
fnsetpm(287
std
pop
xchg
mov
add
out
insl
and
lods
inc
test
iret
mov
push
loope
cmp
jmp
xchg
ss
xchg
adc
js
aad
clc
jmp
out
ds
inc
lea
fsubl
mov
addr16
popf
dec
movsb
gs
andb
aam
incb
add
add
mov
and
ret
jnp
or
jl
or
mov
sbb
ret
dec
nop
xor
push
std
nop
aaa
push
repnz
jnp
add
jg
daa
pop
sub
sar
lret
xlat
fsts
stos
iret
jae
mov
lcall
test
cmpsl
mov
xchg
out
add
out
lahf
in
stos
push
movsl
scas
inc
xchg
hlt
fcomi
sub
dec
dec
mov
sbb
ret
test
loopne
sarl
inc
and
jle
ret
outsl
adc
shll
aas
leave
pop
mov
push
xlat
cmc
push
sub
dec
vpmulhuw
mov
jge
stc
lcall
in
jp
add
adc
shlb
or
enter
mov
mov
jno
loopne
add
add
cs
push
les
jp
mov
lods
mov
sahf
scas
cmp
cmpsb
pop
inc
xor
inc
add
mov
out
sbb
fwait
adc
xor
es
mov
jecxz
add
test
dec
lods
stos
ljmp
push
xor
and
std
dec
mov
pop
mov
xchg
or
inc
mov
sub
sahf
movsb
and
fldcw
fsub
sti
popa
or
mov
sahf
inc
clc
sub
sbb
push
pop
movsb
test
jae
xchg
arpl
sbb
repz
inc
or
inc
or
movsb
xchg
pop
es
loop
add
xchg
call
push
inc
adcl
mov
sub
imul
cs
out
mov
xor
arpl
loope
hlt
inc
jl
mov
push
cmp
loop
lods
fstpt
xchg
cmpsl
cmpsl
ljmp
ret
jp
jae
sbb
mov
adc
lret
inc
cld
in
push
xor
outsb
or
push
test
out
and
inc
mov
dec
jl
jg
push
adc
jbe
sub
mov
int
xor
push
lds
out
scas
leave
ja
mov
jbe
and
mov
loope
icebp
ja
and
test
push
loope
pop
lahf
movsl
out
cmp
cmp
inc
out
mov
lods
fsubrs
push
pusha
mov
cmc
mov
dec
pop
cli
popf
std
aas
inc
jmp
call
or
rcrb
jecxz
dec
dec
cmc
fisubrl
stos
rcll
lahf
movsl
mov
fwait
cli
pop
xlat
sbb
sbb
xor
stos
sbb
mov
pusha
jno
repnz
arpl
iret
int
dec
gs
push
mov
jp
sub
jo
fisttpll
xchg
repnz
dec
jns
sbb
aad
or
mov
pop
mov
mov
xchg
ljmp
and
aas
jae
mov
cmp
inc
aad
clc
js
jo
sbb
push
fidivs
icebp
pop
cmp
adc
xor
and
mov
xchg
xor
scas
in
push
jb
pop
sub
adc
shll
push
push
insb
xchg
xlat
jmp
mov
jg
mov
xchg
add
pop
movsl
adc
pop
int3
jns
jecxz
cwtl
mov
pop
and
out
ret
sbb
movsb
push
in
sbb
cmp
pop
aam
orl
cmp
cli
push
and
cmp
clc
adc
lret
and
pop
jne
js
fiaddl
lods
outsl
lea
test
je
lret
or
stos
cmpsl
popa
testl
push
xchg
push
or
mov
push
lds
flds
mov
mov
inc
jmp
mov
test
mov
mov
cmp
cld
inc
add
inc
in
and
mov
sarl
push
hlt
loop
sbb
sbb
stc
test
pop
mov
cmp
dec
jg
adcl
popf
xor
inc
cmpsl
repnz
add
outsb
mov
cmp
pop
pop
add
roll
popf
bnd
jmp
xor
leave
pusha
outsl
out
out
movsb
sub
dec
sub
hlt
fsubrl
dec
arpl
push
test
insl
ret
sbb
lcall
jp
pop
xchg
mov
lcall
scas
pop
ds
dec
test
bound
lea
fdivl
cmp
jcxz
lea
aam
push
dec
neg
mov
adc
in
xchg
add
push
incb
xorl
mov
dec
pop
inc
add
add
int3
or
cmpsl
push
filds
cmpsb
xchg
sub
mov
xchg
adc
push
inc
jnp
icebp
or
loopne
pop
adc
push
sub
dec
or
repz
jecxz
repz
add
jle
xchg
gs
xchg
xchg
cs
movsb
mov
bnd
loope
into
xchg
push
inc
ss
inc
popa
jg
inc
xchg
sbb
es
leave
dec
shll
cltd
inc
iret
dec
push
unpckhps
es
inc
pop
movsb
std
xchg
xchg
push
pop
mov
popl
out
in
push
push
adc
xor
fstl
les
mov
xchg
ficoml
movsb
mov
rcr
dec
sysret
setb
mov
push
sub
ljmp
xorb
cwtl
dec
pop
das
cmc
out
add
sti
and
loopne
mov
ds
jp
pop
xchg
enter
stos
popa
mov
icebp
push
out
sub
push
inc
mov
nop
add
std
jmp
or
and
lods
adc
xor
xor
xchg
es
push
dec
adc
loopne
imul
test
dec
sbb
push
cmp
bound
jns
cmp
ds
or
jecxz
mov
sub
xchg
and
orl
cmp
scas
mov
jno
ret
pushf
adc
jl
xor
sarb
pusha
sbb
add
jp
cltd
and
sbbl
sbb
mov
lcall
gs
test
push
testb
cmp
pushf
pop
fmul
inc
xchg
les
inc
push
push
mov
xchg
inc
stos
aas
stc
pop
jae
fwait
sti
out
stos
notl
adc
or
aas
xchg
mov
inc
push
test
sub
test
dec
dec
xchg
or
leave
insl
fwait
xor
mov
iret
cwtd
addr16
cltd
adc
xchg
xorb
inc
push
int3
lret
int3
stos
or
jmp
stos
inc
dec
xchg
dec
or
pop
mov
adc
scas
sbb
add
test
adcl
mov
cmp
push
popa
or
cmpsl
mov
out
outsl
and
xor
lret
add
xorb
jl
popf
mov
xchg
scas
inc
adc
cmp
int3
xor
mov
sub
push
ljmp
fs
ds
fstl
dec
jbe
outsl
call
imul
test
stos
add
mov
push
fsts
mov
loopne
mov
pop
jecxz
ljmp
sub
aas
xchg
jl
into
cwtl
mov
push
out
push
fdivrl
and
xor
pop
pop
xor
sbb
and
xor
mov
mov
cwtl
hlt
ljmp
enter
cmpsb
mov
mov
mov
or
cld
mov
int3
mov
lods
call
addb
insb
sbb
add
push
es
out
sbb
cmp
inc
inc
xchg
lcall
stos
jmp
ficomps
mov
lcall
insb
test
sahf
dec
push
sub
mov
loopne
mov
add
hlt
push
call
cwtl
sahf
mov
xor
jmp
std
push
jo
lea
iret
clc
sahf
jnp
adc
sbb
mov
jbe
fs
daa
sub
scas
jb
testl
dec
xchg
cmp
aas
push
test
xchg
push
inc
lcall
pop
mov
imul
imul
adc
fsubs
xchg
mov
shll
xchg
fwait
dec
setg
sub
pusha
sahf
addb
jecxz
daa
inc
jl
js
nop
mov
loopne
nop
data16
test
add
test
stos
outsl
cmc
hlt
and
jnp
or
pop
mov
adc
inc
dec
call
cmpsl
out
imul
sub
jne
xchg
das
adc
mov
adc
mov
and
xchg
imul
movsl
orb
rcl
inc
add
scas
movsb
and
mov
shrb
pop
ret
loope
mov
cmp
sbb
mov
fsubrp
xchg
jns
lds
lcall
in
out
fldl
push
arpl
bnd
ds
js
cld
shl
loopne
sti
mov
jnp
push
dec
mov
jns
imul
jo
xor
xchg
xchg
adc
cmp
sub
inc
gs
pusha
jb
pop
ret
out
cmc
xor
imul
dec
out
popa
sahf
and
xor
push
sbbb
adc
js
push
out
dec
daa
fbstp
ljmp
pop
mov
adc
jbe
iret
cmpsb
jp
add
icebp
dec
jns
mov
insb
js
sahf
sbb
cmp
faddl
and
xchg
jecxz
push
arpl
xchg
jbe
pop
sub
cmpsb
insl
dec
loopne
repnz
outsl
push
jl
inc
test
popf
repz
subb
cltd
xor
or
cmp
pop
adc
les
xor
mov
fisttps
test
push
xchg
mov
out
ja
test
loope
pop
aam
push
xor
push
orw
leave
fnstcw
xchg
pop
repz
cltd
outsb
jp
mov
inc
cwtl
das
jbe
popa
xor
mov
pop
call
sbb
jg
faddl
imul
dec
sti
cld
xor
fsubrp
sbb
pop
fsubs
es
jno
aaa
mov
bound
aam
mov
mov
subb
mov
or
jmp
inc
mov
cmp
lea
clc
fsubl
addr16
std
cmp
or
fdivp
popf
mov
xchg
sub
addr16
adc
ficomps
dec
jbe
stos
xor
cmc
xchg
push
pushf
test
sbb
xchg
mov
stos
hlt
mov
dec
in
xor
test
inc
ret
loopne
or
pop
ret
pop
push
insl
inc
divb
stos
pop
test
jne
cs
xchg
testl
cli
dec
loope
adc
mov
sub
xchg
inc
push
adc
std
xchg
sbb
and
cs
stos
cmpsb
pop
mov
cmp
insl
pop
jne
cmp
inc
jecxz
test
or
test
or
dec
fiadds
and
icebp
jmp
cmp
xorl
loopne
gs
or
sub
test
sarb
outsl
mov
lret
aaa
mov
gs
ljmp
jno
sub
mov
int
pop
mov
icebp
inc
cmp
adc
loop
movsb
pop
lock
cli
aam
mov
popa
out
pop
imul
mov
jecxz
sahf
lock
movsb
cmp
push
cmp
pop
jmp
dec
lods
inc
push
popa
clc
loope
repnz
add
imul
dec
ds
and
push
jge
loope
or
imul
xchg
xchg
in
scas
aaa
cmp
fdiv
xchg
push
cmpsl
out
loopne
pop
repnz
mov
cltd
out
xchg
jae
push
scas
jno
mov
into
sub
imul
test
mov
frstor
or
pop
mov
frstpm(287
mov
push
adc
jns
aad
xlat
adc
int
enter
mov
ljmp
add
lea
repnz
inc
cmpsb
xor
mov
mov
movaps
sbb
adc
push
fdivrl
pop
icebp
add
inc
xchg
imul
mov
mov
dec
lcall
push
sub
or
xor
outsl
dec
scas
or
push
xlat
pop
jg
lret
jno
pop
cmpsb
push
mov
sti
popa
stc
shlb
sub
xchg
add
stos
icebp
pushf
pop
or
enter
test
push
fmulp
mov
dec
sbb
jb
lea
adc
or
pop
cli
adc
sbb
into
icebp
pop
daa
movsb
out
mov
adc
jns
dec
mov
outsb
dec
cmp
shll
aam
jne
shr
jno
cmp
cltd
dec
dec
cwtl
call
mov
add
test
sbb
addr16
aas
lret
sti
test
std
arpl
jnp
insb
xor
lahf
incb
sub
call
sbb
mov
mov
repz
std
cmp
inc
mov
imul
insl
ja
test
addl
in
orb
adc
jmp
aad
repz
xchg
jns
mov
out
mov
mov
jo
fs
add
js
bound
inc
jmp
sti
cmp
mov
dec
aaa
pop
cs
fiaddl
mov
cmp
cltd
push
repz
and
push
mov
ja
mov
aam
jmp
cmp
and
out
test
cmp
jno
js
jecxz
movsl
icebp
mov
adc
xchg
sbb
popf
fidivs
pop
sar
push
les
mov
loopne
test
les
rcrl
repz
mov
pop
cmp
and
dec
arpl
and
mov
push
jl,pn
testb
lods
or
test
cmpsb
pop
cltd
fidivrl
xchg
lret
adc
sub
movsl
add
and
cwtl
call
or
cli
ret
outsl
testl
sub
dec
pop
pop
jo
rep
test
cli
inc
jl
sbb
xchg
lea
popf
in
and
sbb
inc
mov
add
stos
out
mov
aam
pop
mov
add
mov
aas
sbb
lock
xchg
sarb
mov
mov
jbe
add
fsubl
pop
jo
nop
push
cmp
push
inc
mov
and
xchg
mov
lods
out
mov
dec
mov
leave
jl
inc
pop
jle
or
enter
loopne
mulb
pushl
xchg
in
rol
sbb
lret
sbb
dec
or
int
stos
rol
negl
ret
fsubrp
lods
fbld
xorl
shll
sti
and
sarl
jns
scas
sub
imul
jl
jl
addr16
mov
push
insl
aam
sti
decb
xor
imul
xchg
aas
mov
sbb
mov
bnd
push
stos
xorl
iret
or
rol
jne
push
leave
add
xchg
xchg
mov
mov
mov
shlb
lret
jne
lcall
ret
std
into
pop
inc
jns
mov
sbb
test
das
cli
pushl
gs
stc
int3
lret
cmp
fwait
icebp
aam
in
aad
loopne
int3
lds
jne
pop
popf
and
inc
jp
mov
aam
orl
push
popf
push
out
dec
pushf
jbe
jbe
xchg
and
adc
ljmp
in
vunpckhps
sbb
adc
inc
fimull
and
mov
or
mov
sbb
mov
xchg
xchg
mov
fldl
scas
mov
aad
popw
out
or
scas
xlat
inc
jnp
decl
pop
cmp
push
cwtl
jae
or
add
clc
inc
out
outsl
in
cmp
or
push
repz
repz
cmc
pusha
mov
jbe
jbe
adcb
shrl
les
orl
push
inc
aad
imul
sbb
test
lea
movsb
inc
movsl
mov
cmpsb
gs
sub
ljmp
cmp
insb
js
push
nop
push
int
pop
repnz
mov
cmp
xchg
add
test
and
cmp
sub
jmp
outsl
insb
dec
jb
out
arpl
stc
popf
sub
subl
outsb
and
sub
orl
lods
sbb
pop
and
jge
lods
mov
fistpll
fcompl
insb
adc
adc
aas
pop
gs
das
leave
call
fs
dec
or
and
cmp
stc
jb
hlt
xchg
stos
inc
and
adc
cmp
addr16
lcall
xchg
fsubp
xor
fwait
sub
dec
and
out
inc
xlat
enter
mov
pop
cmc
sbb
std
or
addb
cmp
aad
orl
xor
fwait
xor
movsb
sub
mov
or
or
mov
cmp
arpl
mov
dec
inc
daa
inc
sti
rol
pop
add
bndstx
mov
sbb
jp
pop
jae
xor
fldenv
test
insl
dec
lret
fldcw
je
hlt
call
and
out
xor
rolb
sub
or
fisubrs
push
cmp
out
fimuls
cmp
push
hlt
mov
dec
call
jmp
stos
ja
adc
or
fstpl
aas
aad
mov
sbb
add
cmp
movsb
push
push
dec
xchg
dec
dec
mov
jb
inc
sti
and
mov
dec
pop
imul
fs
xchg
push
enter
pop
or
fnstenv
and
call
pop
out
or
xchg
add
orl
inc
adcl
xchg
add
mov
in
mov
cltd
repz
cmpsl
lahf
imul
stc
mov
xchg
xchg
pop
or
fldt
cmp
xlat
sub
dec
lds
dec
loop
jecxz
xchg
jmp
mov
inc
or
adc
enter
pop
repnz
jge
js
xor
xchg
jns
adc
inc
jo
shl
gs
sub
add
bnd
push
rcrl
xsha1
cmpsb
dec
icebp
sbb
fimuls
and
inc
or
mov
push
scas
push
cwtl
mov
and
popf
sub
pop
jmp
leave
call
imul
pop
loope
mov
jl
mov
cltd
adc
add
and
push
lods
mov
daa
and
test
inc
data16
jno
mov
es
test
lods
vpaddq
mov
cmp
imul
sub
or
aaa
std
lds
mov
es
inc
or
addr16
inc
and
xchg
inc
jo
mov
cwtl
es
cmpsb
mov
lds
push
jle
sub
pop
xor
fldcw
cmp
das
in
std
mov
add
imul
push
push
mov
dec
call
mov
je
add
and
push
les
int3
int3
add
inc
es
das
jp
popf
jno
mov
dec
push
xor
xchg
mov
popf
push
popf
dec
pop
ljmp
mov
aaa
mov
mov
cwtl
mov
sub
cmp
hlt
jno
or
and
or
aas
mov
andb
mov
cmp
inc
mov
int
fidivl
pop
pop
mov
mov
sarl
cmp
xchg
mov
jb
jbe
sbb
xchg
scas
call
push
dec
test
cmp
jge
ss
dec
or
inc
push
adc
fbstp
fmull
fildll
pop
fidivl
pop
jno
lret
push
inc
pop
sub
adc
mov
nop
dec
sbb
es
jl
dec
dec
dec
mov
outsl
push
mov
aad
pop
outsb
mov
xlat
das
pushf
mov
sbb
sub
gs
sbb
enter
push
push
movsl
dec
xchg
adc
pop
mov
sarb
hlt
push
lret
aam
sub
addr16
xchg
shll
test
insl
shl
inc
andb
sub
test
xchg
mov
adc
adc
sti
or
stos
cmp
push
test
ror
fldcw
and
sbbb
jge
pop
lcall
dec
sbb
loope
out
pop
dec
pop
daa
mov
test
nop
lret
sbb
xlat
mov
mov
jbe
mov
jmp
push
scas
pop
rcrb
mov
pop
pusha
das
mov
cmpb
or
dec
push
popf
xor
lods
inc
xchg
es
sbb
adc
jg
gs
outsl
aam
adc
popf
ja
pop
int
mov
pop
and
mov
sbb
icebp
ret
and
bound
cmp
mov
call
add
pop
loope
dec
mov
loopne
jns
jmp
push
sbbb
jb
add
cmp
in
adc
mov
or
push
rol
loope
aad
jae
icebp
inc
js
and
sub
imul
adcb
lret
sub
fs
jbe
repz
inc
pop
std
xor
mov
push
or
cmpsb
int3
std
ficompl
mov
shll
push
fidivl
adc
data16
sbb
push
loopne
pop
adc
xor
scas
inc
push
aam
jp
sidtl
pushl
dec
cmp
popf
stc
nop
iret
int3
xor
icebp
fstps
push
or
inc
jmp
jp
icebp
mov
nop
mov
outsb
idiv
and
pop
push
jnp
dec
inc
pop
std
mov
lahf
test
clc
imul
jns
repz
and
test
sarl
and
inc
jmp
sbb
adc
hlt
ret
into
sub
es
jmp
lods
lahf
ja
cmp
mov
mov
xchg
inc
sbb
jnp
pmulhuw
leave
daa
lcall
push
imul
out
outsl
les
imul
and
mov
add
pop
js
cmp
sub
nop
push
mov
pop
pop
insb
jne
fwait
insb
cltd
jle
in
in
iret
pop
pop
std
mov
lret
pop
shll
mov
mov
jae
xor
inc
push
lods
xchg
pop
and
ss
adc
cli
in
xor
dec
dec
xchg
call
push
cs
jecxz
jb
test
jecxz
gs
packuswb
lahf
xorl
ficomps
or
inc
adcb
in
cmp
xchg
ds
test
sbb
iret
iret
xor
loop
aas
fs
aaa
test
sub
xchg
mov
mov
cmp
roll
pop
xchg
lahf
insb
mov
movsb
test
ficomps
ss
pop
in
dec
mov
ret
mov
decl
lods
fnsave
imul
xor
pop
pop
xor
int3
out
enter
dec
movsl
daa
xchg
and
mov
aas
mov
out
pusha
test
or
rclb
loope
int
or
jp
jmp
push
and
mov
or
pusha
xchg
xor
pop
or
mov
or
cmp
push
andb
xchg
nop
or
xchg
icebp
mov
add
xchg
gs
mov
shrl
adc
fstps
cmc
add
xor
insb
inc
imul
in
insl
sub
cmp
lods
insb
test
and
xchg
sub
inc
mov
cld
paddb
insb
sub
ss
mov
shll
in
hlt
adc
sbb
bound
mov
orl
push
cwtl
std
loopne
aam
and
add
lcall
inc
ljmp
adc
lock
xchg
bound
aaa
cs
setle
adc
loopne
sub
inc
pop
xchg
loope
xlat
fiaddl
sbb
mov
aad
movsl
imul
adc
inc
xchg
fs
frstor
pop
xchg
mov
and
mov
idivl
mov
mov
fcmovbe
and
cmp
jbe
pop
ss
pop
dec
adc
pusha
std
popf
lea
mov
push
aaa
iret
xchg
je
xor
test
fisubl
cmp
push
mov
sub
push
push
mov
test
pop
xchg
outsb
or
jp
insb
stos
sub
add
or
xchg
xlat
enter
sub
aam
lret
cmp
mov
js,pn
mov
adc
data16
rcrb
inc
in
je
cmc
int3
dec
ds
les
cmc
mov
out
test
jae
cltd
dec
or
mov
pop
mov
pop
shr
add
cmp
je
adc
mov
aaa
outsl
or
movsb
pop
out
xchg
pop
mov
pusha
ret
outsb
rorb
je
lds
mov
xchg
gs
insb
jle
shlb
push
scas
inc
sbbb
mov
int
cmp
ss
es
pop
test
movsl
mov
cmp
cmp
rcrl
xor
or
or
pushf
sub
fsubr
xor
sub
mov
inc
mov
cmp
add
mov
push
push
lahf
mov
push
les
and
mov
pushf
xchg
scas
int3
or
cmp
ds
or
cs
adc
inc
into
pop
add
push
mov
data16
jge
push
push
inc
push
dec
sti
sub
rcrl
or
testl
and
mov
mov
movsl
aas
xchg
enter
lret
lea
sbb
dec
cmp
dec
pop
mov
push
xlat
mulb
mov
cmpsb
lret
addr16
xchg
sahf
cmp
pop
dec
scas
jp
jle
jns
sbb
ror
out
test
mov
aad
and
fidivs
dec
bound
push
xchg
mov
repnz
data16
jb
add
fadds
xchg
pop
xchg
xchg
jo
repnz
pop
xchg
sbb
fisttpll
inc
push
inc
and
mov
sub
inc
add
arpl
jnp
movsb
cli
xchg
add
scas
xor
fstpt
fildl
sahf
push
ljmp
jno
imull
in
sbbl
scas
push
cld
or
repnz
add
and
inc
cmp
adc
adc
sbbl
mov
jecxz
imul
sub
cmpb
test
nop
xchg
push
cmp
push
aas
popa
sahf
lods
sub
add
pushf
mov
imul
cmpsb
mov
push
push
push
outsb
fwait
xor
mov
xor
aad
not
aas
cmpsb
out
sbb
adc
out
stc
xor
imul
mov
rcrb
cs
xchg
adc
out
test
sti
xchg
enter
scas
scas
inc
xor
push
mov
jo
dec
cmp
mov
push
sbb
mov
imull
mov
dec
and
stos
iret
sbb
stos
lds
mov
bound
jae
arpl
inc
inc
testb
pop
aad
push
pop
addl
cmpsb
sbb
pop
int3
rorb
adc
mov
lret
mov
fsts
push
sub
xchg
and
push
push
adc
jbe
add
out
loope
hlt
loopne
dec
mov
add
lods
sarb
jno
fldcw
inc
bound
or
fisubrs
or
scas
enter
shlb
jno
shlb
fistl
sahf
scas
out
test
mov
or
cld
pop
shrb
cwtl
pop
mov
outsl
notl
cmp
pop
enter
js
outsl
rclb
jge
pop
addr16
and
inc
xor
mov
fiaddl
fldenv
dec
inc
out
xchg
arpl
jnp
cmp
test
cmp
popw
addl
sub
jbe
mov
push
lods
movsb
mov
fidivrl
push
push
sbb
add
mov
push
repz
orb
cmp
movsb
or
cli
inc
mov
in
mov
out
imul
rolb
xor
add
jo
mov
jl
stos
das
aas
inc
mov
dec
test
sbb
or
js
cs
outsl
pusha
push
decl
int
or
sahf
fnstenv
xor
mov
cld
inc
ret
mov
push
rorb
stc
icebp
add
out
enter
push
pushf
mov
xlat
jle
ret
fisubl
or
push
cmp
fdiv
mov
add
ljmp
cmpsl
and
mov
push
pusha
xlat
mov
fldenv
jae
lea
push
inc
sub
int3
xor
inc
in
inc
cmp
mov
cli
sbb
sub
popa
shlb
xor
shll
insb
enter
or
lea
or
or
push
out
sub
inc
aad
cs
arpl
lret
adc
fildl
jnp
ret
out
or
mov
frstor
pop
test
lods
or
in
pusha
cmp
dec
cmc
lods
leave
sub
inc
jmp
test
dec
testl
out
lock
fisubl
mov
popa
test
cwtl
push
les
jb
mov
roll
stc
popa
mov
stc
or
jg
gs
xlat
xchg
shr
pop
mov
out
mov
push
jg
enter
jge
and
outsl
and
aas
divb
call
dec
pop
xchg
outsb
sub
fimull
fimull
stos
test
scas
nop
test
fistps
mov
loopne
sub
pop
insl
jmp
sub
lret
xor
or
je
call
xor
mov
cli
sbb
cmpsb
mov
popf
mov
xor
pop
lret
pop
or
mov
mov
shrb
ret
cmpsl
lahf
cld
dec
xchg
and
mov
addr16
sub
add
icebp
push
push
pop
mov
fnclex
jge
ja
sub
xchg
add
enter
sub
stos
stc
add
bound
mov
push
js
inc
test
outsl
jecxz
rorl
les
hlt
xchg
popa
xor
das
cmp
or
enter
cmp
push
test
leave
pop
je
dec
gs
pop
cmp
xchg
fnsave
fdivs
xchg
iret
add
sub
adc
or
insl
dec
shlb
cmp
lds
push
or
push
mov
icebp
dec
pop
fcoml
sub
or
pop
out
jns
loope
pop
mov
mov
lds
aad
jge
jecxz
mov
add
mov
mov
inc
scas
test
test
push
cmc
cmp
mov
sub
shrl
and
adc
cmc
adc
pushf
popa
mov
jnp
lret
daa
std
imul
add
loopne
adc
movsb
das
addr16
pusha
rcll
cltd
insl
leave
and
daa
push
xchg
rcl
adc
icebp
scas
inc
and
push
in
addr16
add
and
cmp
mov
mov
loopne
mov
aaa
into
xchg
push
xchg
mov
add
sbbl
cs
std
pop
xchg
pop
cmc
sub
sbb
ss
in
stc
inc
pop
stc
mov
dec
xor
and
cmp
daa
test
sbb
sub
inc
push
pop
scas
ficoml
mov
mov
pop
push
jno
fcmove
and
sub
pop
add
ret
push
int
inc
test
jb
bound
ds
pop
mov
iret
inc
mov
mov
das
popa
es
jae
inc
mov
int3
sbb
adc
mov
imul
data16
sub
lcall
add
mov
stc
jmp
or
mov
scas
mov
mov
jle
adc
cmc
or
fildl
ficomps
cmp
bound
es
inc
pop
xchg
pop
sahf
cmp
jge
xchg
pop
gs
sub
push
push
fwait
xchg
fbstp
dec
js
ja
dec
mov
sbb
test
dec
add
sbb
push
cltd
pop
out
mov
fcompl
dec
pop
daa
mov
cmpsb
add
jb
mov
push
das
inc
and
mov
and
push
loope
pop
mov
add
pop
pop
shl
adc
scas
xor
xchg
or
imul
cmp
xchg
lock
mov
ljmp
cmp
inc
jmp
xor
movsl
or
mov
scas
pop
testl
fwait
outsb
inc
lret
sbb
shlb
pop
cli
xchg
fisttpll
mov
shlb
cwtl
icebp
adc
jp
fwait
sub
adc
fstps
cmpsb
cmp
in
pop
mov
ret
xchg
pop
jge
lcall
add
jns
xchg
jnp
arpl
xor
stos
jmp
shrl
cwtl
clc
dec
or
mov
dec
mov
fcomps
sub
outsl
mov
xor
pop
stos
fs
jge
pop
test
ljmp
cmp
fdivs
test
movsl
xor
adc
rcpps
in
mov
pop
in
aas
jle
jmp
or
in
or
aam
jno
or
pop
adc
adc
cmp
stos
movsl
pop
faddl
aad
popa
loop
xchg
adc
xor
out
test
mov
stos
lds
add
mov
out
out
test
xchg
inc
fdivr
popa
andl
test
insl
jge
aad
sub
adc
mov
add
cld
pop
hlt
sub
mov
insb
js
jge
lret
sbb
pushf
pop
cmp
jmp
dec
iret
dec
mulb
ret
mov
add
pushl
outsl
mov
sbb
jmp
sbb
or
call
sub
or
add
lret
sub
aaa
or
ja
sub
fsubrl
mov
jno
add
orb
popa
cmp
cpuid
xchg
xor
mov
in
andl
loope
xchg
es
xchg
jbe
neg
mov
out
push
mov
mov
xchg
push
dec
add
cmc
das
sbb
inc
lahf
cmp
dec
je
and
push
int3
lock
xor
jmp
or
pop
dec
push
sub
and
adc
lea
cli
push
enter
inc
sbbl
outsl
add
adc
mov
jge
icebp
xor
pop
js
aam
in
fnstcw
mov
jbe
or
fwait
adc
stos
inc
out
nop
lahf
clc
dec
and
lods
mov
or
cmc
ja
ljmp
dec
and
jg
call
or
mov
insl
jle
add
or
xor
xor
push
mov
dec
fdivs
in
jmp
pop
ret
jo
mov
pop
popf
lods
mov
and
cmpsb
faddl
pop
cltd
cmc
mov
and
push
or
orl
cltd
jmp
es
push
out
xchg
xchg
inc
add
aaa
or
and
inc
fdivrl
fxch
push
lahf
sub
push
lods
inc
jne
xor
shrl
pop
xor
cmp
addr16
pushf
xor
int3
push
mov
push
testb
dec
mov
cmp
pop
lahf
sbb
pusha
gs
mov
adc
lock
pushw
lock
add
pop
mov
add
push
cmc
in
fsts
push
mov
push
sti
xchg
pop
dec
in
cmp
inc
jo
lods
push
jne
or
xchg
stos
inc
mov
out
cld
mov
push
fsubs
dec
cmp
fdivrs
test
mov
push
mov
cmp
sbb
cwtl
mov
inc
cmpsl
repnz
or
imul
sbb
ljmp
and
adc
jo
push
stc
cmpsb
add
es
orl
addr16
mov
mov
aad
pop
or
cmpsl
cmp
fs
xchg
mov
into
rorb
movsl
add
imul
ljmp
fidivs
cmp
pop
push
sub
repz
dec
bound
shlb
mov
les
pusha
mov
jmp
aas
clc
sub
cli
inc
cwtl
push
loope
shr
repnz
xchg
push
mov
idivl
xchg
sub
add
mov
scas
jno
fsubrs
xchg
dec
jecxz
mov
aad
subl
mov
js
loop
xor
mov
js
jnp
mov
nop
aad
adc
jno
xor
notl
jo
xor
shlb
into
add
int3
sub
inc
les
cli
xchg
and
dec
nopl
and
pushf
xchg
jbe
jecxz
jbe
mov
test
cmp
or
jae
loop
mov
push
into
faddl
mov
mov
cwtl
adc
xchg
inc
aas
fnstenv
push
mov
push
popa
data16
or
cmpsb
sub
xor
cmc
xchg
mov
cmpsl
aas
rclb
mov
add
sbbb
cmp
xchg
push
imul
and
cmp
or
ret
jae
push
jb
xchg
jle,pt
sub
mov
sub
cmp
or
int
data16
scas
cmp
aaa
ret
jnp
fldenv
and
mov
inc
repnz
dec
scas
lds
movsb
jecxz
cmp
fimuls
aad
loop
xchg
and
mov
sarb
rorl
sub
mov
loopne
lods
and
pop
push
cs
push
popl
shlb
stos
xchg
clc
dec
in
dec
xor
testb
and
scas
xchg
test
movsb
int3
push
or
or
shrb
and
cli
mov
add
fnsave
and
add
fs
out
arpl
icebp
xchg
in
cmp
loopne
mov
lock
jb
inc
adc
xor
xor
push
in
out
xchg
arpl
mov
mov
popa
popa
mov
jb
adc
xor
mov
loop
or
stos
mov
out
and
je
nop
adc
sarl
lcall
and
adc
aas
sarb
fnsave
mov
lahf
cmp
shlb
cs
xchg
popl
lret
addr16
sub
je
popa
cld
mov
jge
adc
add
inc
push
jmp
sti
xorl
and
jnp
test
stc
mov
sub
movsb
or
mov
dec
mov
pop
fnstcw
jb
and
pushf
xlat
pusha
mov
repnz
scas
adc
add
hlt
push
mov
imul
test
xchg
mov
xor
rcrb
movb
inc
xchg
jle
in
push
sahf
pop
shl
cli
cmp
inc
movsl
xchg
shl
stos
adc
pop
outsl
push
xchg
jne
lcall
clc
fcomps
or
sbb
mov
push
jle
push
fcom
jmp
add
or
xchg
aad
jae
loope
andb
dec
push
sub
data16
push
dec
pop
jne
mov
and
sbb
dec
enter
imul
gs
adc
mov
loop
sahf
and
sbb
daa
mov
lods
xor
stos
lret
jp
arpl
push
jbe
xchg
fs
jmp
mov
and
lods
sub
and
and
psubw
lcall
enter
sbbl
pop
push
dec
fidivs
decl
clc
or
add
fistpll
ret
mov
jecxz
imul
jo
mov
mov
js
test
sub
bound
dec
sti
sub
xlat
repz
jp
xlat
jb
cmp
mov
xlat
xchg
adc
mov
add
in
pop
mov
repz
out
and
cmp
enter
mov
repz
testl
test
and
into
lcall
xchg
mov
adc
push
cltd
flds
sahf
cli
popa
add
test
ret
xor
lahf
xchg
jge
pop
imul
push
add
mov
fbld
pop
jne
or
and
loopne
out
shlb
sbb
adc
mov
fstps
mov
fbld
adc
sbb
imulb
loop
clc
adc
sbb
push
rcl
xor
xchg
test
in
stc
nop
aaa
add
ds
pop
in
hlt
rcr
cmp
sbb
rorl
fnstcw
test
mov
mov
mov
xchg
add
adc
xchg
pop
icebp
cmp
cmpsb
cmp
and
test
and
hlt
in
inc
jmp
add
or
xchg
aas
outsl
shrb
out
clc
jns
idivb
pushf
add
mov
jge
les
jmp
dec
jecxz
jae
aam
add
out
add
in
dec
push
out
jnp
out
inc
sbb
cmp
dec
inc
jb
in
inc
fisubrs
sbb
dec
inc
nop
fdiv
or
andb
fsubrs
jb
stc
andb
mov
cs
add
push
mov
push
pop
jmp
lea
lods
jmp
dec
popf
xor
scas
repnz
gs
push
push
repnz
and
push
ret
out
nop
and
dec
out
jno
add
add
dec
pop
lds
inc
fdiv
mov
loopne
pop
rcl
mov
repz
inc
jp
jbe
lock
rorb
cmpb
addr16
std
mov
push
daa
in
xor
dec
fsubs
mov
ss
mov
inc
sub
dec
mov
outsl
mov
mov
sub
leave
pop
dec
xchg
cs
push
lods
imul
cmp
xor
add
add
xchg
lods
pop
mov
aaa
add
mov
fisubs
aaa
lea
sahf
scas
mov
push
out
call
imul
scas
inc
stos
xchg
mov
int3
mov
test
fs
movsl
mov
mov
pop
lock
popa
rep
testb
cmp
mov
xchg
testl
aaa
lods
and
pop
pusha
subb
xchg
jo
dec
in
xchg
sbb
sahf
pop
push
push
mov
or
frstor
mov
gs
or
cmpb
in
daa
lds
sbb
cltd
testl
push
in
push
movsl
jecxz
pop
xor
rol
jbe
insl
jge
cwtl
popa
mov
inc
jmp
pusha
insl
popf
pop
jns
push
into
shll
dec
outsl
jo
in
in
jmp
js
jbe
cmp
adc
mov
lds
ja
aam
and
mov
lret
mul
push
scas
pushf
and
test
popa
lods
test
aam
adc
dec
ljmp
loop
sbbb
sbb
in
push
int
adc
enter
push
out
push
adc
mov
and
movsb
inc
test
out
push
mov
mov
xlat
imul
dec
adc
inc
mov
clc
jo
xlat
mov
enter
aam
mov
and
jne
mov
adc
jbe
movsl
loop
jmp
push
mov
xor
outsl
inc
and
lcall
xchg
ja
sbb
leave
mov
test
adc
sbb
inc
pushf
mov
mov
ret
sub
push
test
inc
cmp
dec
sbb
adc
pop
ja
hlt
cmpsb
fcompl
adc
or
dec
and
xchg
mov
in
fcom
imul
cmp
mov
mov
ret
pop
mov
sbb
daa
xchg
sub
decl
sti
das
or
rcrl
inc
sbb
daa
xor
shlb
push
scas
cs
stc
adc
fcoml
mov
lret
jo
jmp
pop
pop
add
sub
adc
add
mov
xchg
in
add
imul
icebp
cmp
and
mov
mov
lock
mov
scas
orb
ret
fdivrs
jb
push
loopne
jge
adcb
ret
xchg
popa
jo
jns
sbb
jne
pop
add
pop
insl
jecxz
xchg
pop
pop
icebp
mov
jle
enter
mov
inc
fs
loopne
xor
jns
jns
adc
jge
subb
fmull
push
xchg
xchg
clc
addr16
fcomps
fs
aas
fdivs
and
test
jp
enter
jno
dec
int3
out
insl
sbb
outsl
call
loopne
cmc
add
lea
in
scas
stc
test
popa
aas
jne
das
xlat
call
add
scas
add
xchg
jge
ljmp
fwait
jbe
cwtl
push
in
add
andb
imul
adc
fstpl
push
int3
arpl
cmp
add
std
ljmp
mov
enter
push
rorl
mov
mov
fnstcw
in
scas
fnstenv
or
or
lret
mov
aaa
pop
repnz
xor
xchg
dec
mul
adc
sub
add
push
push
fisubrs
inc
xchg
addl
inc
leave
fsub
cmp
xor
pop
and
sbb
pop
dec
mov
jecxz
ds
jb
mov
pop
mov
inc
push
inc
fstl
add
adc
inc
repnz
fdivrs
pushf
add
push
and
lds
inc
inc
cld
adc
ret
pop
cmp
testb
xchg
roll
pop
fsubl
pop
adc
pop
sub
mov
xchg
push
sbb
mov
loopne
or
cmp
add
std
inc
sub
mov
out
sti
shr
cmp
adc
insl
insl
cmp
xor
shr
mov
dec
dec
mov
sbb
fsubl
pop
or
sbb
pop
idivl
pushf
insl
adc
lcall
out
clc
jl
mov
lahf
js
push
cmp
sti
fwait
mov
add
pop
fs
adc
cs
mov
in
pop
lahf
inc
pusha
sbbb
sbb
test
xchg
cs
inc
sahf
sub
add
sbb
jne
mov
add
icebp
in
outsb
call
cli
or
mov
jb
add
jge
imul
dec
jg
imul
push
clc
in
sub
or
sub
dec
sbb
fwait
push
jmp
add
sub
aaa
mov
jmp
inc
pop
cltd
push
sti
fsubrs
subb
inc
lcall
std
jbe
mov
mov
icebp
jp
mov
xor
cld
push
ss
push
sbb
mov
arpl
mov
xor
xlat
dec
mov
push
mov
add
push
xor
inc
mov
fwait
pop
fistpl
out
popa
daa
cs
std
or
test
clc
fwait
test
jg
dec
arpl
xor
fiadds
test
xchg
imul
ja
mov
aas
rclb
aas
inc
cmp
and
gs
pop
xchg
bound
es
imul
jne
fisttpl
cmp
xor
xchg
mov
mov
push
push
xchg
jb
movb
out
repnz
lcall
xor
jns
outsl
inc
add
out
mov
push
lods
push
jb
scas
addr16
xchg
ja
imul
and
es
mov
push
test
and
mov
mov
and
jp
ja
imul
loop
inc
popf
cmpsb
and
cwtl
iret
lock
pop
mov
cmpsb
enter
sbb
pushf
xor
and
push
fcompl
mov
mov
ja
jae
decb
jp
pop
notl
in
mov
or
fidivs
outsl
pop
inc
rolb
xchg
jns
mov
xor
mov
xchg
xor
push
add
adc
stos
push
push
mov
popa
daa
xlat
cmpsl
push
xor
daa
ret
jae
mov
push
les
andl
std
sub
cmpsb
xchg
dec
mov
dec
push
jne
rol
sub
pop
lock
dec
mov
xchg
mov
ds
jecxz
push
in
xchg
sub
bsf
push
scas
inc
inc
push
inc
jmp
cltd
push
and
sarb
daa
xor
movsl
call
ja
dec
mov
pop
cmc
jns
xchg
mov
mov
add
test
lods
jge
in
jg
jbe
test
xchg
xor
cmpsl
pop
fiaddl
and
lea
cld
out
pop
add
ret
imul
jl
sbb
sbb
dec
sub
cmp
dec
movsb
sti
cld
sbb
jg
test
or
mov
mov
out
inc
bound
fucomi
insl
inc
pop
cmc
sub
xchg
pop
lahf
push
mov
lcall
jge
xor
jo
out
test
xchg
dec
xor
adc
xchg
mov
movsl
fs
test
les
mov
incb
push
divl
xchg
jb
xchg
jle
xrelease
sarb
clc
or
add
cmpsl
lret
das
stc
cli
or
scas
add
jne
dec
pop
in
mov
push
stos
mov
outsb
insb
lret
aad
je
sbb
imul
inc
icebp
xchg
ja
adc
scas
jp
cmp
lea
hlt
scas
push
sub
test
fdivrs
mov
mov
sub
fistl
iret
jo
es
jge
adc
mov
mov
aaa
or
int
push
frstor
pop
icebp
sbbl
fwait
xchg
js
sub
jg
and
sbb
xchg
or
jge
movsb
jmp
negb
inc
out
jnp
push
or
lods
mov
fiaddl
push
out
dec
xor
loopne
scas
xor
cltd
dec
cmp
std
shl
mov
push
addr16
sub
cltd
test
sub
rcll
loope
or
in
pop
das
das
dec
push
out
push
pop
dec
pop
out
ljmp
xchg
push
rorl
fisubs
add
cmp
xchg
lods
popa
shrl
cmpsb
sahf
divl
dec
mov
push
sbb
repnz
fldl
adc
push
jnp
jge
cli
fwait
test
mov
push
mov
xor
movsl
cmp
repz
inc
push
push
mov
js
adc
jae
mov
dec
pop
adc
in
mov
sub
mov
or
hlt
mov
cmp
das
imul
call
or
icebp
or
arpl
xchg
sahf
popa
add
sub
jae
jle
lahf
dec
sub
jbe
push
cwtl
push
xor
cmpsb
cmp
lret
xor
push
bound
cmp
iret
sub
dec
sub
dec
jae
push
sub
mov
popf
jg
pop
xor
int3
arpl
cltd
das
ror
ljmp
mov
push
je
mov
push
cs
les
push
cmpsb
mov
dec
pop
jnp
adc
fnstsw
fndisi(8087
jns
pop
bound
pop
outsb
xchg
push
shll
mov
mov
mov
in
pop
jge
pop
inc
inc
aad
stos
ljmp
inc
stos
rorb
mov
pop
sbbl
stos
ss
cmpsb
push
rcrb
mov
pop
inc
insb
aam
sub
ret
sar
add
dec
loopne
ds
flds
cmp
dec
mov
pushf
leave
and
cmp
imull
popf
xor
dec
aaa
mov
fisttpl
cld
pop
sub
testb
iret
mov
jge
ficoml
or
ret
push
mov
adc
xorl
fmuls
movsl
dec
repz
incl
push
cmp
out
cmp
push
fdivs
dec
push
cmpsb
je
xchg
outsb
rclb
add
jmp
sbb
ljmp
inc
mov
xchg
hlt
stos
add
loopne
sarb
jno
aaa
shr
xchg
xchg
cmpsl
jecxz
loop
cld
mov
test
or
cmp
sbb
jb
jno
push
jg
iret
mov
ret
jo
xchg
ss
adc
mov
jb
and
xor
repnz
stos
lret
mov
xchg
xchg
add
out
ja
dec
arpl
fistl
mov
out
ds
jb
sub
mov
pop
pop
scas
jno
inc
xlat
aaa
xchg
xor
imul
imul
xchg
push
mov
push
leave
arpl
ret
dec
imul
adc
and
sub
mov
test
push
ds
mov
pop
repz
iret
jle
adc
sahf
and
aaa
neg
je
pop
pop
xlat
jne
or
je
add
in
jae
add
mov
into
fs
popa
inc
mov
push
std
sbb
int
vmread
repz
or
mov
andb
gs
sti
leave
sbb
shrb
mov
out
sbb
mov
mov
lods
ss
sbb
dec
cld
xchg
andb
mov
cs
dec
stc
adcb
fadds
jge
push
fistpl
lret
mov
mov
fdivrl
loopne
cld
adc
push
lahf
sbb
mov
int
add
mov
pop
aaa
sub
cmovge
inc
sahf
jmp
sarl
notl
jmp
cs
jno
cld
push
mov
push
dec
adc
hlt
pop
mov
mov
cmp
and
cli
mov
jge
jp
xor
and
sub
xor
push
mov
push
pusha
shr
inc
cmp
js
fists
mov
imul
outsl
in
repnz
push
and
ja
mov
xrelease
sbb
jle
lods
out
push
jmp
out
fstpl
dec
das
fnsave
lock
jns
jg
popa
pop
mov
call
pop
push
cmp
mov
imul
sbb
add
daa
mov
adc
aas
pop
outsl
outsl
shll
repnz
inc
fcmovne
jno
nop
data16
lods
inc
fidivs
xchg
rcrl
xchg
xlat
outsb
ret
xorb
xor
inc
cmc
insb
lock
shlb
cmpsb
mov
mov
leave
int
and
cltd
loopne
pop
sbb
rcrl
fnsave
imul
pop
sbb
in
xor
gs
mov
add
nop
fs
rolb
mov
add
mov
lret
pop
cli
std
xchg
and
add
rolb
mov
xor
cld
sub
push
in
or
cltd
mov
in
mov
pop
hlt
mov
push
ljmp
movsl
cmp
dec
pop
xorb
nop
pop
add
xchg
imul
cmpsb
pop
adc
sub
push
shr
dec
notl
xor
jbe
dec
test
fimuls
adc
mov
add
mov
fistpl
sbb
enter
call
ficoms
push
addr16
push
mov
pusha
loopne
sbb
push
adc
lods
adc
mov
cmp
loopne
rcpps
cmp
rorl
sub
xor
popa
add
mov
or
dec
loopne
push
pop
xlat
outsb
or
jnp
lock
adc
sbb
loope
outsl
nop
aas
or
lock
pop
jl
mov
call
or
shl
cmp
ja
je
mov
xchg
loopne
adc
ds
imull
out
js
lret
jo
sub
fstpl
out
cld
xchg
push
imul
add
push
mov
xchg
dec
iret
pop
fidivs
lock
lret
xchg
loope
dec
push
sbb
cmp
jnp
dec
mov
pushf
lret
jns
or
and
xchg
movsb
mov
mov
xchg
or
stos
in
push
or
jmp
sbb
lret
cmpsb
jmp
sub
mov
fdivrs
loop
sub
sahf
adc
push
mov
dec
or
add
outsb
xor
popf
mov
into
pop
inc
mov
movsl
insl
jne
push
lret
daa
push
add
in
icebp
add
push
sub
jbe
repnz
notl
shl
shrb
fnstcw
xchg
xchg
mov
mov
outsl
inc
jp
inc
pop
mov
cmc
mov
mov
xchg
gs
std
clc
dec
cmpsb
xor
loopne
mov
test
jbe
add
je
xlat
lods
pop
sub
push
pop
jne
ja
stos
and
adc
mov
xor
out
pushf
scas
pop
mov
fisttpll
pop
pop
inc
cltd
xchg
push
pop
dec
lret
cld
insb
out
ret
call
cwtl
inc
outsl
sub
mov
lea
xor
sbb
or
cltd
cmpsl
push
mov
aad
sbb
cltd
filds
shr
mov
out
lods
in
adc
outsl
sbbl
mov
jg
jg
lret
cmp
lods
jge
popa
mov
sub
scas
ret
add
push
test
inc
mov
repz
aam
pop
xchg
imul
test
ja
inc
pop
mov
mov
push
ljmp
mov
mov
divl
data16
mov
test
in
repz
dec
loopne
loopne
push
cld
rol
mov
xchg
lahf
cmpsb
fimuls
bswap
pop
jmp
adc
jecxz
scas
sbb
cli
cwtl
or
dec
xor
in
scas
ljmp
and
cmp
mov
in
cltd
iret
scas
leave
imul
in
mov
add
or
jl
mov
sbb
pop
sbbl
pop
or
repz
and
or
cmp
mov
and
shll
sbb
mov
mov
out
xchg
sub
add
pop
out
mov
lea
mov
jmp
xor
test
lret
push
scas
push
add
and
test
mov
das
lret
jb
std
inc
shrb
cld
rclb
jl
lods
inc
negb
add
push
mov
fs
imul
lahf
sarl
stos
push
lahf
cmp
add
jae
subb
mov
dec
cs
dec
mov
cmp
pop
fstpt
sbb
pop
rolb
das
cmp
xchg
cmc
mov
push
pushf
xor
or
add
aad
clc
push
lds
leave
mov
xchg
shl
jns
insb
push
and
mov
lock
scas
cs
jb
mov
pop
or
mov
or
cmc
mov
cli
pop
fwait
pop
push
jbe
out
pop
mul
mov
add
fld
sarb
sbb
js
pop
leave
movsb
push
stos
call
add
xchg
bound
pop
xchg
sub
mov
mov
fistps
adc
in
mov
cmpb
mov
adc
sub
dec
mov
mov
jno
xor
inc
xchg
popl
jecxz
and
and
push
mov
gs
xchg
sahf
repz
jnp
pushf
inc
inc
adc
pushf
scas
dec
xor
call
or
adc
fistps
imul
das
jb
std
and
pop
and
lock
out
je
aam
gs
loopne
pop
insl
enter
cmp
pop
inc
inc
in
into
pop
pop
into
or
clc
jne
mov
or
test
rolb
jns,pt
xchg
cmp
popf
inc
or
adc
pop
mov
add
add
push
vpmulhuw
jns
fmull
ret
fsubrs
fimull
adc
sbb
gs
sti
cmpsb
cmp
mov
add
test
std
inc
sub
jmp
pushf
cmp
lea
xchg
xor
mov
mov
mov
push
jp
icebp
push
roll
mov
mov
adcl
add
xor
mov
insb
call
fstpt
push
movsb
mov
ret
sub
hlt
xor
icebp
int
pop
adc
dec
aaa
adc
pshufw
mov
mov
cmc
lea
xchg
leave
adc
ljmp
iret
mov
sbbb
dec
xchg
jg
sahf
mov
push
jmp
nop
lcall
jae
das
mov
sbb
lea
je
sbb
loop
movsb
push
mov
enter
addb
push
ljmp
jmp
fs
pop
and
shr
sbbl
mov
xor
jo
pop
push
call
fnstenv
sbb
mov
or
in
jnp
and
jns
add
jmp
call
dec
jnp
andb
cmpsl
and
xor
data16
mov
fiadds
gs
fmull
scas
mov
sbb
andb
push
out
ja
stc
cmp
pop
pop
into
push
pop
xor
lods
rcr
mov
xchg
ljmp
pushf
ret
mov
xor
imul
dec
and
and
cmc
arpl
xchg
push
cli
inc
push
jne
cmp
push
inc
fildl
mov
dec
fisttps
xor
add
lahf
sti
in
test
inc
shlb
sub
mov
mov
call
mov
mov
jbe
adc
or
std
mov
xchg
xor
xchg
nop
sub
mov
xlat
mov
xchg
mov
cli
rcl
icebp
sbb
pop
int
sbb
repz
fwait
xchg
and
bound
xchg
loop
dec
add
aam
sub
inc
cmc
ja
jne
ja
lods
mov
repnz
mov
cmp
dec
rcrl
inc
lret
or
xchg
pop
leave
seta
jge
in
mov
test
cmc
or
pop
push
test
les
lods
xchg
outsl
push
leave
into
lds
cmp
xor
insl
add
fbstp
adc
and
mov
ja
shlb
or
jl
jl
mov
out
mov
sub
jg
dec
mov
gs
in
inc
mov
arpl
sub
arpl
lods
test
mov
mov
mov
test
dec
sub
fwait
mov
pop
xor
fisttpll
pop
dec
shr
jp
push
cmp
mov
iret
stos
xchg
loop
jmpw
repnz
cmpsl
out
mov
mov
les
push
mov
pop
cs
mov
inc
or
lock
in
dec
mov
enter
sbb
lret
int
in
cli
xchg
pop
aas
stos
bnd
sbb
imul
jns
dec
push
stos
jno
shl
pop
fdivl
fldt
or
in
test
ds
jae
or
popf
xlat
jmp
lcall
data16
ds
sahf
sub
cmp
daa
pop
push
or
lret
mov
andl
and
iret
mov
stc
mov
mov
pop
filds
and
dec
clc
push
xchg
sti
sbbb
mov
cmpsb
out
push
in
out
ucomiss
pusha
adc
dec
pop
es
mov
test
dec
inc
inc
inc
cli
shl
dec
es
pop
aaa
pop
mov
push
pop
jnp
sub
popf
sub
dec
rol
jg
xor
mov
dec
push
xchg
ljmp
rcll
xor
das
push
sbb
sti
push
cmpb
pop
mov
mov
mov
enter
out
push
clc
dec
arpl
xor
bound
cmp
xor
push
in
daa
cmp
aaa
into
aaa
jns
pop
lods
mov
lcall
mov
adc
add
jl
lcall
in
jne
pop
lock
mov
cwtl
ja
leave
ljmp
addr16
fcomps
je
and
jb
or
popa
int
into
pop
sbb
pop
add
mov
and
jb
cmp
xchg
test
imul
loope
stos
dec
or
cs
popa
ret
pop
xor
mov
jmp
xchg
loope
push
sbb
roll
lock
fmul
xlat
stc
mov
movntq
out
popl
aam
arpl
sbb
iret
dec
inc
test
mov
dec
out
or
jg
add
rorl
in
loope
aaa
adc
adc
das
jbe
repz
push
push
test
sbb
pop
out
hlt
xor
lret
xlat
out
pop
mov
lds
out
inc
aad
je
shrl
sarl
inc
or
clc
fmuls
loop
mov
inc
xchg
dec
imul
cmovne
popf
fbstp
loopne
outsb
mov
in
lret
dec
mov
inc
popa
jmp
fnstenv
lea
les
sbb
loope
jl
vpavgw
or
stc
mov
mov
cltd
sbb
or
incl
and
push
lock
inc
inc
fnstenv
call
es
outsl
mov
inc
ss
addr16
dec
outsb
data16
xchg
dec
dec
data16
mov
es
les
jae
insb
leave
mov
into
or
icebp
sbb
popl
stos
inc
or
cld
adc
jge
test
clc
ds
scas
subb
dec
mov
xchg
sti
testl
and
lcall
cli
mov
inc
fdivr
shrb
mov
idivb
call
sti
adc
pop
addl
popf
cmp
ss
jg
fdivs
pop
scas
adc
push
push
enter
les
add
outsl
js
add
lds
push
jmp
inc
aaa
into
xor
popf
call
pop
or
fmuls
pop
xor
ret
insl
enter
orl
add
shlb
xor
pop
xchg
cmp
jo
popf
movsl
mov
adcb
push
xchg
sbb
mov
jb
les
add
cmpsb
xlat
jno
dec
push
icebp
aam
mov
lahf
stos
add
gs
sub
nop
push
xorl
or
or
loopne
sar
cmc
outsb
mov
aas
push
inc
push
xchg
pop
push
ss
loop
addb
mov
xchg
mov
leave
push
jle
push
les
mov
add
in
adc
sub
mov
popf
jecxz
ret
in
fsubl
mov
inc
mov
clc
and
scas
sbb
mov
insb
mov
mov
jno
in
push
push
mov
mov
ljmp
cmp
out
push
es
sahf
sub
inc
out
pop
jmp
mov
fwait
mov
sbbb
repz
es
inc
sub
add
dec
sti
pop
and
pop
mov
fsubrl
in
jp
add
imul
fs
push
cld
mov
mov
dec
in
test
sti
pop
lcall
inc
mov
bound
dec
in
mov
aad
xor
dec
xor
jns
js
jns
jg
fsubrs
mov
testb
fisttps
or
loopne
xchg
sub
in
arpl
shrb
mov
ret
fdivs
ret
mov
hlt
mov
pop
sbb
sbbb
xchg
add
loop
push
aam
sbb
repnz
and
pop
loop
mov
popf
ja
xchg
push
mov
insb
lret
add
hlt
mov
mov
sub
pop
mov
and
in
aad
adc
lods
xor
xchg
popf
aas
cmp
mov
mov
movsb
add
jno
hlt
push
fadds
adc
cmp
imul
jb
jp
jae
divb
mov
mov
inc
mov
ljmp
mov
imul
ljmp
aas
cmp
int3
andl
fisubs
loop
push
pop
pushf
pop
pop
xor
xlat
inc
enter
call
or
adc
addl
scas
es
out
mov
adc
add
pushf
call
mov
filds
shl
cmp
push
or
xchg
aam
sub
xchg
and
mov
sbb
cmp
lods
and
std
movsb
aas
push
mov
pop
popf
mov
sar
mov
jecxz
add
jae
jecxz
into
dec
push
jns
or
lods
jnp
sbb
sbb
dec
jnp
ret
or
adc
sub
sub
imul
inc
mov
xchg
pop
loope
roll
sbbb
test
popa
xorl
shll
cmp
add
xor
arpl
cltd
mov
xchg
imul
pop
ficompl
sbb
cmpsl
test
rcr
in
cs
dec
aas
in
jmp
pop
daa
jge
rcrb
movsl
add
fwait
popa
clc
int3
ja
aas
cld
adc
pop
inc
frstor
std
lea
pop
mov
push
loop
xchg
test
not
push
outsl
push
ficoms
jle
push
decl
ja
test
fmul
and
xor
sbb
dec
popf
push
sub
imul
call
in
das
fsubrl
push
loop,pt
sbb
push
jne
or
mov
ficomps
imul
clc
insl
hlt
iret
sahf
mov
pop
dec
cmp
fbld
popf
xlat
testb
hlt
inc
fsubs
ljmp
addb
int
ss
hlt
out
and
adc
adcb
pop
and
movd
or
adc
lahf
pop
repnz
sbb
mov
out
inc
push
es
push
in
aaa
icebp
sub
movsl
fbstp
adc
stos
inc
add
lcall
scas
test
xchg
push
xlat
mov
cmpb
imul
cwtl
stos
mov
pop
jmp
fcomi
jo
loope
add
ss
pop
dec
jbe
shrb
aaa
dec
pop
fnsave
lock
mov
adc
sbb
arpl
mov
ret
cmp
aam
push
pop
dec
loope
sub
xchg
lock
clts
push
jae
das
setnp
and
mov
int
leave
daa
pop
jo
mov
pop
stc
test
mov
repnz
mov
int3
arpl
push
sub
clc
into
ljmp
push
xchg
repnz
sub
shl
adc
stos
jl
dec
scas
shr
jnp
sahf
iret
lds
inc
and
movsb
lahf
dec
lahf
pop
fidivs
and
stos
adc
adc
jl
fs
loope
leave
adc
push
loop
add
jmp
jmp
jno
fmull
nop
jl
ret
sub
pop
test
call
rorl
adc
scas
mov
arpl
imul
lods
inc
outsb
fidivrs
je
in
addr16
in
stos
aaa
jmp
jne
jnp
mov
fdivp
xlat
xchg
repz
xchg
sbb
inc
xlat
sbb
fisubs
dec
pop
outsb
cmp
mov
jmp
test
hlt
cmp
add
scas
pop
mov
pop
and
mov
or
rol
add
clc
lea
pop
fnsave
mov
ja
adc
sti
sar
push
cmpsl
out
and
push
stc
and
aas
xchg
push
ljmp
xlat
inc
xchg
sub
nop
xchg
hlt
jo
inc
in
and
inc
je
shrb
adc
push
outsl
and
mov
jle
fnstenv
arpl
xchg
daa
repnz
inc
aas
icebp
or
shl
lea
fildl
test
jbe
mov
mov
adc
xor
xor
push
jmp
in
rclb
push
lock
cmp
or
xlat
or
pop
pop
fs
xor
jns
loopne
testl
in
pop
arpl
and
xchg
aam
rorb
xor
int
jnp
or
pop
hlt
and
cwtl
or
pop
push
sahf
in
add
hlt
mulb
jne
ret
cltd
xor
and
popf
std
xchg
pusha
mov
ljmp
and
subl
imul
push
dec
push
stos
xor
sbb
sub
or
mov
out
pop
sub
test
sbb
add
daa
mov
pusha
push
jp
mov
jge
cmp
and
inc
push
insl
pushf
push
push
pop
stc
fsubs
xor
in
iret
vpunpckhdq
mov
pop
popa
movsl
sbb
adc
dec
call
lret
fidivl
js
dec
loope
xchg
shll
push
inc
idivl
les
insl
dec
lret
sub
scas
push
mov
ss
cltd
inc
push
dec
mov
lock
loop
cwtl
and
movsb
out
pop
xchg
jl
out
mov
mov
gs
jl
xchg
jecxz
mov
dec
and
jo
jo
aas
int
mov
jmp
xchg
xchg
cmpsb
cmp
clc
dec
lods
xlat
lock
neg
push
lods
clc
shlb
shll
js
mov
outsb
aad
mov
push
inc
or
inc
fstl
mulb
push
mov
ret
sbb
xor
sub
push
es
inc
stos
adcb
add
int
fsubrs
shlb
cmpb
pop
pop
stc
xchg
xor
bound
gs
jecxz
cmp
mov
imul
ret
xchg
sbb
shll
popa
mov
rol
pop
or
loope
sahf
pop
push
cmpsb
xchg
mov
rorl
mov
xor
lcall
or
xchg
adc
movsb
dec
and
iret
in
add
xorb
jmp
push
inc
in
aaa
std
fnstcw
icebp
cs
sub
lds
xchg
fisubl
inc
loop
push
insb
out
adc
mov
rolb
mov
cld
out
adc
shll
mov
aam
dec
loopne
jno
insl
jl
addr16
sahf
vpor
push
cmpsb
fwait
les
pop
addr16
loope
or
jg
xchg
bound
testb
aaa
push
push
and
out
flds
subb
ss
loopne
fstps
push
jae
xor
incb
cmp
call
lahf
mov
mov
push
ret
or
push
jl
lret
cmpl
push
hlt
out
adc
and
lret
fldenv
cmp
and
fsts
ss
cli
mov
clc
aad
cmpsl
sahf
adc
push
mov
cltd
test
jne
mov
xchg
popf
xor
xlat
xchg
mov
adc
cli
sti
xor
and
out
sbb
xchg
mov
cmp
enter
ljmp
sub
out
out
sbb
jg
call
or
dec
cmpsb
push
js
adc
mov
clc
fisubrl
or
stc
mov
pop
mov
cld
add
xchg
sbb
sti
xchg
int3
ss
pop
dec
sbb
xchg
inc
xor
adcl
pop
sub
out
sub
cltd
or
fsubrs
mov
test
dec
fcomps
add
ljmpw
or
in
mov
fiadds
les
or
outsb
push
jge
or
cmc
adc
mov
or
stc
pusha
and
xor
lods
ret
imulb
cwtl
imul
and
mov
das
push
lea
test
lds
inc
je
jp
or
dec
dec
cmp
xchg
in
outsl
data16
xor
cwtl
and
mov
call
in
add
scas
xor
subb
mov
cld
ficoml
mov
push
js
mov
dec
adc
das
dec
and
sbb
cmp
into
fstpt
xchg
pop
sub
shlb
popa
pop
sbb
mov
fwait
xor
add
fwait
xor
mov
mov
xlat
outsb
jnp
pop
lods
cltd
repnz
vcvtps2pd
jae
lea
sahf
xor
sbb
int3
pop
cmc
fs
iret
push
lret
lods
out
cltd
stos
mov
jbe
xchg
icebp
sub
dec
in
lret
shl
push
je
lods
push
pop
pop
push
xchg
sub
out
sub
mov
sub
mov
sbb
mov
cltd
sbb
mov
cmpb
lock
pop
or
sub
dec
jae
test
xchg
xchg
mov
leave
lret
lahf
mov
shll
push
xlat
test
pop
jg
arpl
jae
lods
jbe
sub
or
sbb
xor
and
out
pop
ret
pop
repz
jo
out
xchg
add
scas
sbb
cmpsb
add
cmp
inc
mov
dec
mov
adc
inc
dec
and
sbb
jo
pop
push
pop
sti
or
mov
and
mov
repnz
pushf
push
xchg
aas
popa
mov
xchg
push
xor
dec
test
lock
data16
push
jb
nop
in
cmpl
or
xchg
dec
inc
test
pushf
stos
xor
cmp
or
in
jp
sbb
mov
and
sbbb
jbe
mov
packssdw
push
aas
cwtl
addr16
mov
push
test
jae
arpl
daa
add
ret
inc
mov
in
mov
sbb
repz
pop
mov
xor
push
jne
push
outsl
push
xchg
repz
jae
inc
lahf
ss
sbbb
pop
js
nop
hlt
mov
push
cld
scas
in
inc
lcall
sbb
testl
iret
jecxz
inc
les
mov
and
rol
pop
sub
sub
mov
rcl
mov
repz
loop
mov
shrl
xchg
mov
popf
cmp
sti
mov
mov
jo
mov
dec
pop
call
mov
hlt
jne
aam
cmp
push
jae
mov
pop
dec
xor
lods
dec
inc
jecxz
inc
mov
inc
add
stos
xor
mov
out
ja
nop
jmp
mov
mov
dec
inc
pop
out
fs
mov
pop
test
push
popf
add
sub
lods
pop
sub
inc
ret
in
repz
mov
enter
mov
push
push
in
sti
mov
dec
cmpsb
inc
push
testb
jg
push
jmp
das
sarl
pushf
fcmovb
push
cmpl
fildl
xorb
sub
pop
dec
or
mov
lret
mov
mov
fstl
ror
outsl
pushf
out
bound
ss
divb
sub
fcmovbe
jae
mov
icebp
push
je
aad
push
pop
fmull
push
call
and
loopne
inc
lahf
pop
and
call
mov
fsubrp
daa
or
jne
inc
imul
scas
inc
mov
pop
imul
scas
cmp
and
sti
push
loopne
pop
and
ja
push
sbb
in
shll
cmp
arpl
xchg
je
ds
test
mov
je
lea
repnz
pushf
cmp
loop
inc
pop
xchg
enter
popw
cs
cmp
push
mov
push
and
sbb
push
hlt
int3
sbb
mov
jnp
jo
sbb
jmp
movsl
mov
or
mov
add
push
repnz
pop
out
aaa
call
dec
test
ja
lret
lds
sbb
mov
mov
popa
push
add
popf
sbb
popa
dec
mov
lret
cltd
or
aas
add
pop
out
enter
movsl
sti
inc
or
jg
sbb
inc
outsl
daa
push
jno
scas
sub
pop
pusha
jns
sub
int
xchg
hlt
popf
jge
enter
xlat
in
push
out
stc
mov
test
adc
mov
daa
std
adc
shlb
loopne
stc
out
icebp
inc
cmp
jge
pop
arpl
sub
push
or
pop
xchg
and
push
jb
mov
sub
mov
pop
popa
cmpsb
icebp
gs
cmp
fsincos
xchg
or
push
pop
frstor
incb
xchg
ficompl
inc
scas
xchg
mov
jb
inc
sub
rcrl
add
mov
xorb
push
xor
addr16
outsb
and
push
incl
push
cltd
add
inc
xor
nop
sbb
aaa
sbb
stc
add
jbe
xchg
insb
cmp
sbbl
and
mov
mov
xor
ret
pop
ffreep
mov
popw
xchg
xchg
mov
lds
fldt
mov
movsl
xor
bound
shl
mov
rorl
repnz
jp
repz
fistl
test
mov
push
mov
mov
inc
out
lret
mov
addr16
sbb
adc
mov
inc
jmp
filds
lods
xchg
mov
xor
jecxz
mulb
push
lea
mov
out
lret
je
ja
push
pop
cmc
sti
iret
and
inc
ffreep
hlt
repz
mov
subb
adc
mov
push
push
cltd
pushf
cmovl
dec
mov
inc
loope
inc
movsb
scas
and
and
xor
sbb
das
and
inc
shlb
xchg
sbb
inc
sahf
lods
jno
subl
imul
sub
and
sub
sbb
aaa
add
cwtl
stos
xor
fsubs
cmpsl
in
outsb
xchg
xchg
js
inc
stos
mov
test
jne
adc
xor
fbld
sub
sub
ljmp
cli
mov
icebp
mov
inc
mov
mov
pop
pop
jp
fcoms
negl
cmpsb
jl
out
setle
add
push
out
cmpsl
into
js
jmp
mov
sub
pop
push
inc
fldl
sbb
xor
idivb
test
insb
add
jmp
inc
cmp
or
mov
int
movsl
or
pushf
bound
fwait
icebp
adc
xor
int3
fs
fcmovnbe
js
inc
xchg
lds
pop
push
mov
ror
outsb
jmp
mov
mov
push
push
cmpsb
mov
push
outsb
lret
mov
adc
iret
jle
lahf
div
jmp
outsb
xchg
int3
or
push
rclb
pop
xchg
shlb
adc
push
js
jmp
aaa
mov
dec
or
lret
jno
movsl
out
jecxz
adc
imul
mov
das
push
mov
stos
and
push
mov
mov
in
xor
mov
loopne
std
lret
ret
pop
cwtl
cli
xor
daa
xchg
mov
sti
aas
int
inc
fbstp
xchg
fsubr
mov
jmp
fwait
mov
mov
cli
fs
rcr
dec
push
mov
add
sub
mov
mov
ret
adc
inc
cmpsb
outsl
push
repnz
int3
lcall
sbb
sbb
mov
mov
xchg
cltd
pop
loopne
lods
mov
pop
jb
push
insb
repz
cs
adc
jnp
insb
xor
in
int3
jo
movsl
sahf
into
xor
test
xchg
les
add
cltd
aad
mov
xor
sbb
cmp
das
test
loopne
test
inc
imul
pop
in
addr16
lods
dec
pop
jb
adcb
mov
push
jbe
fildll
rclb
jg
adc
addr16
mov
stc
jl
das
mov
cmp
xor
push
and
inc
sub
or
pop
cli
pop
repnz
jns
jle
sbb
inc
ret
sub
sub
sbbb
loop
xor
pop
das
inc
and
clc
push
bound
imul
dec
sub
dec
mov
cwtl
cltd
out
push
push
xlat
sbbb
jb
jle
aaa
imul
mov
dec
push
jecxz
pushf
add
cmpb
xor
cmp
jle
jl
fcomps
mov
xlat
pusha
or
rcll
add
fs
iret
fnstsw
adc
negb
mov
mov
fwait
xchg
mov
push
jne
inc
mov
sbb
in
sub
sub
sar
adc
mov
gs
out
pushf
out
dec
adc
bound
sahf
xor
ret
pop
out
in
repz
decl
mov
aad
icebp
adc
aad
setne
cmp
fadds
sub
fadd
sbb
js
out
loop
pop
lock
pop
out
pop
negl
cmp
shll
mov
popf
gs
cwtl
stos
mov
jae
cmp
fsubrs
lret
jnp
jo
and
adc
into
fsubrl
mov
pop
sti
aas
into
fdiv
pop
and
cmp
lret
pusha
push
xor
push
xchg
adc
sbbl
xchg
jae
imul
shrb
jmp
imul
or
mov
fs
adc
fwait
out
or
xlat
repz
sub
fisubl
sub
jmp
jae
js
adc
stc
pop
xor
ljmp
push
call
cli
mov
sti
adc
pop
add
cli
lea
inc
push
out
xor
std
out
sub
pop
adc
das
mov
fs
inc
das
cmp
sbb
enter
mov
icebp
adc
cmp
test
cli
push
mov
mov
std
adc
movsb
sub
fldenv
roll
jbe
sbb
lahf
stos
xchg
ret
xchg
inc
movsb
push
decb
es
dec
pop
push
aas
jno
jnp
outsb
jmp
add
cmp
sarb
xlat
outsl
jnp
into
cs
pop
sbb
mov
repnz
popa
hlt
aas
push
adcb
mov
mov
rclb
mov
cmp
push
pop
mov
aas
push
enter
mov
cltd
sub
cmp
loop
or
cmp
lret
mov
repnz
loopne
aaa
data16
daa
xor
out
enter
loop
mov
pop
mov
sbb
dec
cli
inc
or
mov
outsb
mov
cmc
sub
jmp
lds
mov
pop
hlt
in
data16
dec
out
mov
outsb
add
out
fdivl
jo
pop
push
and
push
jae
mov
stc
xchg
mov
pop
dec
xchg
xor
pop
mov
fsubrl
dec
inc
xor
shrl
mov
ficoml
xchg
fadd
mov
jb
mov
mov
jo
inc
shl
cmp
mov
jmp
cmc
cmp
add
or
cltd
xor
or
cwtl
sahf
clc
adc
mov
pop
testb
add
jmp
es
fsubrs
adc
mov
mov
inc
mov
push
xor
lods
lret
fstl
push
enter
bound
in
out
xchg
sub
iret
mov
icebp
mov
dec
out
shlb
push
jg
mov
mov
enter
and
lret
stc
xlat
cld
xchg
push
mov
sbb
sub
movsl
loopne
jecxz
lock
sbb
adc
and
or
test
push
sbb
mov
sub
dec
or
je
scas
cmp
sti
fwait
inc
stos
pop
cmp
icebp
jmp
jmp
cmp
aaa
adc
gs
xor
xchg
out
sbb
repnz
mov
inc
push
ljmp
adc
xor
nop
mov
aas
jmp
loopne
addr16
and
mov
push
push
sbb
test
outsb
push
pop
dec
orb
jb
outsl
xchg
lret
mov
ja
sbbb
cwtl
icebp
fmulp
cmp
dec
stos
cld
aad
mov
shrl
icebp
sbb
xchg
in
cmp
push
lds
jl
clc
cmp
aaa
sbb
xor
dec
cmpsl
jecxz
jbe
sti
arpl
mov
js
xlat
mov
fwait
loope
gs
test
stc
xchg
dec
dec
sbb
jp
out
cmp
loopne
jg
out
adc
mov
arpl
mov
push
les
and
sub
aas
mull
or
push
sub
mov
inc
ja
cmp
add
outsb
test
or
movsb
test
jno
mov
jbe
adcl
imul
xor
lds
orb
jge
push
ds
cmp
lds
mov
fisttpll
mov
push
add
or
ds
mov
pop
in
sub
iret
aam
fcmovb
mov
shr
sub
pop
jno
dec
clc
shlb
in
inc
push
outsb
in
sbb
push
mov
and
sbbl
int
and
add
mov
mov
fidivrs
aas
stos
std
sub
out
pop
adcb
mov
add
push
mov
int3
aas
in
mov
pusha
push
repnz
xor
test
dec
fwait
popa
jnp
test
inc
cltd
test
repnz
aaa
mov
sarb
lock
daa
or
or
cs
sub
mov
das
cs
stos
inc
jg
sbb
les
jnp
mov
push
and
ret
testl
sub
cwtl
and
rcll
lods
cmp
jnp
aad
mov
and
mov
ret
xlat
ja
out
jo
dec
pop
cmpsl
inc
in
xor
int3
pop
jns
scas
mov
lcall
jl
or
and
popa
clc
daa
mov
jg
xchg
mov
iret
aas
imull
and
int3
jno
lret
ret
out
clc
sahf
inc
mov
call
daa
mov
leave
jecxz
jb
rorb
cmovp
adc
inc
jge
fdivs
rcrl
pop
ljmp
add
call
test
filds
mov
sub
fstl
cmc
cmp
je
call
mov
cwtl
adc
mov
jg
push
fwait
out
div
xchg
xor
mulb
imul
mov
repnz
popf
adc
aam
add
jnp
fmul
imul
fsts
addr16
mov
lret
xor
in
mov
pop
insb
pop
adc
cmp
vminsd
sbb
movsb
add
dec
pop
pop
stc
mov
push
je
lea
jnp
push
lock
outsb
imul
add
pusha
adc
out
subl
xor
adc
inc
and
cli
loopne
and
les
cld
enter
add
mov
add
pop
fs
fcoml
mov
jg
jne
mov
inc
cmp
enter
out
dec
decb
stos
jl
rcll
lcall
or
xorl
mov
adc
sub
mov
sbb
add
push
outsb
and
mul
fwait
mov
xchg
test
adc
mov
insb
xchg
fimuls
inc
call
adc
dec
adc
fs
rorl
xchg
mov
lcall
cwtl
movsl
xor
pop
lock
inc
mov
xchg
ret
aas
xchg
jb
sahf
sbb
and
outsl
adc
jmp
xchg
mov
add
mov
pusha
cmp
les
aad
lock
lock
push
push
pop
mov
cli
into
enter
xor
test
xor
mov
mov
cltd
xorb
iret
mov
and
notl
sbb
aaa
push
lret
xor
add
inc
jp
adc
fcomps
fists
je
sub
std
cld
adc
lock
inc
std
test
in
add
add
into
pop
fadds
and
and
or
jb
lret
sbb
fildll
mov
orl
sub
mov
pushf
cmp
pop
decb
lods
inc
daa
xor
popa
mov
and
cmpsb
add
sahf
lods
rorl
andb
cmc
leave
push
add
mov
movsl
aas
outsb
add
imul
jp
jl
clc
sub
push
or
push
lods
dec
out
pusha
idiv
dec
cmpsl
cmp
cmpsl
js
nop
sub
into
rcrb
out
decl
stos
subl
stos
push
insl
out
push
or
das
fsubl
lret
fcmovne
arpl
xchg
jl
lret
fiaddl
rclb
pop
repnz
push
popf
mov
mov
fists
mov
movsb
ss
mov
das
adc
jnp
bound
das
ret
push
push
out
xchg
jp
sub
xlat
addr16
lea
enter
cmp
cmpsb
data16
xor
imul
and
mov
jp
repz
mov
cmp
enter
mov
nop
test
sub
pop
or
in
jl
cld
lds
scas
inc
outsl
ret
push
sti
rcrl
jg
fbstp
sahf
cmpsb
xchg
inc
fiaddl
jnp
icebp
sub
jp
fisubrl
push
scas
jle
dec
jecxz
lahf
xor
pop
sub
jg
sub
fwait
add
dec
mov
sub
jb
sti
aas
add
aas
roll
sahf
nop
pop
pop
das
mov
pop
ljmp
ja
add
pushf
popa
fisubrl
hlt
cmp
scas
inc
add
mov
stos
push
jnp
fdivrp
sub
jnp
pop
pop
loopne
test
xchg
pop
std
push
and
or
cli
cld
jns
mov
sub
imul
fisubs
mov
push
test
push
jmp
js
hlt
cmp
out
fstpt
add
sub
or
cmpsb
sahf
adc
cmpsl
out
pop
push
sbb
int
mov
pop
xor
pop
pop
outsb
cmp
stos
mov
arpl
jo
pop
adc
ss
or
pop
icebp
aam
adc
push
lods
xor
stos
cli
movsl
add
pop
bound
push
xchg
les
int3
xchg
dec
fwait
cmpsl
mov
test
jg
xor
mov
jp
cs
inc
xrelease
add
adc
jp
test
mov
stos
mov
in
out
int
mov
out
xchg
fcomip
test
adc
and
iret
stc
mov
xor
aad
push
cmpsl
loope
xorl
sub
sub
mov
mov
xchg
sbbl
cmp
mov
ljmp
push
xor
jbe
jae
lds
fimull
jo
mov
pusha
push
shlb
mov
hlt
mov
or
adc
xor
mov
mov
ja
jno
or
push
fsubr
aad
mov
pushl
push
sti
or
cld
and
xor
cmpsb
test
xchg
stos
loope
mov
lret
xchg
add
jne
mov
add
lock
xor
mov
push
xchg
xchg
cmpb
fstl
sub
inc
add
dec
jle
dec
pop
mov
xor
or
xor
ret
repnz
test
dec
pop
outsl
daa
add
insl
sbbl
sbb
cmpl
push
cwtl
mov
mov
out
push
xor
in
ds
cmpsl
ret
fnclex
mov
mov
dec
shl
jp
cmp
xor
bound
addr16
dec
pop
decl
and
sti
sub
fidivrs
ror
add
pop
lock
adc
mov
js
inc
stos
inc
popa
xchg
sub
cld
popa
clc
sub
dec
jle
orb
jne
mov
xchg
sub
scas
pop
cmc
filds
dec
jns
xchg
sub
cwtl
ds
push
pop
cmc
xchg
mov
dec
sbb
aam
aad
hlt
pop
sbb
sub
cmp
fcomps
and
sub
xchg
cmp
sahf
negl
cmp
xchg
das
dec
jno
mov
pop
popa
lret
movb
aaa
pop
fbstp
in
and
pop
jnp
pop
mov
testb
loop
mov
outsb
shll
jl
jge
into
pop
push
pop
popa
push
adc
stc
cmpsl
mov
fsubrs
scas
sub
ss
xchg
jne
jb
add
rcrb
adc
pop
mov
jnp
sbb
adc
ss
mov
add
cmp
xchg
and
dec
mov
int3
pop
mov
outsl
ljmp
call
lcall
mov
mov
adc
lahf
mov
xorb
xlat
pop
mov
cmpsl
shrl
add
sub
movsl
add
jge
xor
xchg
icebp
mov
mov
out
cmp
fistl
pop
lds
adc
xchg
xor
into
pusha
in
jae
incl
push
repnz
mov
insb
push
mov
dec
mov
lea
in
push
lcall
and
fmull
sbb
mov
mov
pop
xchg
js
inc
cmp
fdivrl
arpl
pop
xchg
adc
push
fwait
push
out
jecxz
cwtl
sub
adc
jbe
cld
adc
sub
xchg
cmp
xlat
test
xor
sub
sbb
test
in
js
cmp
add
or
dec
and
mov
mov
inc
sbb
add
mov
out
sub
movsb
xchg
cmp
outsb
jnp
push
andb
mov
jbe
inc
jnp
das
pop
and
push
cwtl
fsubrs
popl
adc
sarb
dec
movsb
lds
cmp
sub
ret
fldenv
shrl
pop
lock
mov
xor
sbb
push
inc
pop
hlt
aas
mov
sbb
and
adc
jp
push
mov
mov
push
sub
scas
add
mov
xor
loope
lahf
ds
cld
sbb
sti
faddl
enter
pushf
lret
test
xlat
mov
cmpsb
ret
jne
pop
movsl
sbb
cs
xchg
or
adc
xchg
stos
adc
cmpsb
push
cmpxchg
repnz
or
stos
fiaddl
das
pusha
jg
adc
in
or
cli
fcoms
lea
jmp
sbb
sbb
mov
mov
shrl
add
leave
jecxz
gs
pop
lock
cmpsb
sti
js
loopne
xchg
mov
movsb
popl
lea
xor
frstor
popa
ret
or
mov
les
loope,pt
mov
repnz
mov
ljmp
gs
aaa
pop
notl
add
adc
out
sbb
jle
test
jle
aad
ljmp
data16
aad
jg
icebp
test
gs
add
insl
xchg
adc
dec
jbe
inc
mov
fimuls
inc
add
mov
adc
cmp
pusha
sub
dec
adc
call
int
outsb
clc
xchg
addr16
or
dec
in
cltd
jbe
dec
push
stos
push
fcomp
push
popa
xchg
lods
shll
outsb
sbb
adc
outsl
mov
pop
jge
sub
xchg
aas
dec
adcl
mov
movsl
popf
hlt
push
mov
or
xchg
cli
adc
mov
ljmp
orl
imul
mov
cmp
repz
xor
add
fs
popa
js
in
cmp
sarb
pop
inc
xchg
js
jo
sarl
adc
faddl
and
mov
pop
adc
fdivrs
lea
insl
packsswb
stos
movsb
add
lret
scas
ret
pop
loopne
sarl
and
and
repnz
fildll
in
jno
jno
in
sahf
push
in
iret
shrb
cmpsb
aad
mov
rorl
mov
inc
jae
jo
jecxz
ss
jmp
mov
mov
jnp
scas
pop
cmpsb
mov
sbb
add
mov
lods
fidivrs
int3
arpl
xchg
ficompl
xchg
jns
pop
jns
aaa
mov
fsub
lcall
mov
inc
jp
ja
mov
test
rolb
push
jg
inc
fbstp
fwait
jl
rclb
sahf
pop
cmp
dec
les
jmp
sbb
es
sti
cmpsl
mov
roll
adc
enter
out
push
dec
mov
leave
jnp
cmp
clc
xor
loop
pop
daa
mov
inc
addr16
enter
xchg
xchg
outsl
mov
fsubrp
mov
outsl
in
cltd
cmp
xor
jnp
jp
push
mov
push
cwtl
test
adc
cmp
mov
inc
lods
or
push
sub
dec
xor
movsb
fistpll
mov
xor
cmp
sti
xchg
sub
je
repz
inc
repnz
push
mov
dec
xchg
js
outsb
mov
and
xchg
sbb
lds
push
test
stos
and
lods
fdivr
fisubrs
sub
fimuls
adc
push
xor
cli
jmp
or
stos
call
outsl
push
cmp
repz
loop
je
or
icebp
push
xchg
cmpsl
push
pushf
sub
bound
pop
out
mov
inc
aam
int
cmp
or
mov
call
dec
iret
dec
cmc
bound
push
leave
sub
ret
sub
pop
mov
add
mov
scas
cmp
shlb
loope
mov
push
out
push
sbb
mov
bound
and
cmp
hlt
inc
xchg
mov
out
cmpsb
dec
std
mov
clc
mov
popa
sub
inc
inc
sbb
push
gs
push
popf
xchg
push
jmp
cli
mov
jb
ret
mov
sbb
mov
aad
ljmp
sbb
out
js
cmp
mov
enter
in
mov
cwtl
jo,pn
push
data16
and
sti
push
das
add
into
mov
lcall
mov
dec
insl
cmpsl
lds
inc
dec
and
jecxz
mov
imul
and
cmp
push
mov
test
cwtl
test
sbbl
fisttpll
dec
cmpsb
mov
les
dec
fwait
mov
imul
repz
lock
mul
cmpsl
sbb
ja
lahf
sub
dec
popf
xor
insb
cmp
enter
aam
into
mov
add
negl
add
rolb
test
pop
pop
or
add
sub
shrl
aad
push
rol
in
pop
inc
icebp
jnp
sbb
adc
sub
or
roll
push
sub
stos
pop
push
xchg
imul
fwait
push
ljmp
hlt
xchg
sub
insb
lods
scas
movsl
int3
repz
notb
imul
insb
sub
mov
cmpb
imul
jge
cli
enter
xlat
inc
mov
fcompl
mov
addr16
cmc
adc
das
mov
add
js
jnp
outsl
daa
sub
scas
das
ret
das
sbb
out
cmp
roll
xlat
shr
xor
jp
sbb
xor
fnsave
aas
push
mov
test
push
sbb
lock
lods
lods
inc
fists
das
mov
out
out
into
aam
call
adc
mov
sub
jmp
or
inc
fsubrs
dec
pop
imul
inc
push
mov
in
sahf
sub
xchg
pop
xor
addb
push
out
xchg
pop
cld
notl
jns
out
mov
cmp
rorl
pop
aaa
rcrl
mov
leave
mov
gs
sub
lahf
and
cltd
ret
je
repnz
lock
bound
push
into
fcmovnb
dec
or
cmc
out
pop
sbb
lahf
push
icebp
int3
addb
mulb
outsb
xchg
das
aam
xlat
loopne
sub
or
imul
lock
sub
call
mov
loopne
jg
call
mov
out
mov
xchg
add
loope
adc
stos
xorb
int3
jmp
lea
and
sub
jnp
mov
in
push
mov
lods
inc
stos
mov
popa
sbb
mov
adc
ret
pushw
pushf
fwait
xor
in
das
push
xchg
cld
cmpsl
decl
push
mov
das
stc
dec
fcomp
mov
add
or
xchg
dec
mov
test
popa
into
mov
cmpsb
repz
lcall
mov
popa
lods
mov
add
adc
jo
mov
sub
sbb
jbe
pop
cmp
data16
fcoms
pushf
nop
pop
cmpb
jecxz
loope
stc
adc
lods
jne
addr16
and
push
es
adc
ss
mov
ficoms
cmp
xchg
cs
aas
pop
mov
loop
gs
sbb
mov
or
xchg
sub
in
mov
cld
dec
xor
gs
fisubrs
rcrl
imul
mov
adc
sub
pop
fadds
cli
jns
movsb
push
jl
push
pop
scas
jno
inc
popa
jbe
scas
cmp
xchg
xchg
ret
repz
dec
jmp
das
cmp
out
xorb
jbe
dec
cmpsl
xchg
mov
jb
jmp
das
xchg
dec
test
imul
cld
test
ficompl
in
aas
inc
mov
fimull
mov
sarl
push
sub
jp
clc
div
fldt
je
push
ljmp
push
std
xor
mov
inc
pop
fstps
enter
imul
pop
arpl
shr
pop
xchg
mov
leave
cmp
pop
insb
cmp
mov
out
jle
lcall
cmpsb
ds
sahf
loop
dec
mov
in
aam
cmpsb
in
jne
cmp
into
jno
gs
repz
add
bound
push
ljmp
jno
jb
pop
ja
mov
stos
cmp
aam
rorl
sarb
add
pop
dec
loopne
dec
add
dec
nop
repnz
xchg
daa
xchg
add
xchg
call
repnz
pop
mov
jg
jns
pusha
inc
inc
or
jno
mov
subl
test
sbb
add
pop
mov
xor
xchg
pop
clc
nop
inc
data16
push
mov
test
cmp
add
loopne
ret
aad
xchg
jecxz
push
movsb
mov
js
daa
ret
int3
fimuls
rolb
sub
in
sub
mov
and
sbb
pop
cmp
mov
rcrl
lret
adc
sbb
push
aas
dec
cmp
xorl
dec
fcomip
adc
andl
icebp
cmp
adc
cmp
mov
mov
xor
push
add
inc
jp
mov
repnz
pusha
cmp
lret
addr16
out
aad
mov
fadd
jmp
clc
iret
mov
mov
pop
leave
cmp
daa
in
pop
roll
imul
leave
mov
mov
pushl
je
jae
xor
nop
sub
mov
pop
out
pop
dec
mov
jecxz
in
or
outsb
inc
xchg
out
fwait
lret
outsb
push
add
push
pop
jmp
in
js
cmp
pop
xor
shr
adc
mov
push
scas
out
mov
or
loope
ljmp
fs
pop
dec
mov
pop
dec
sub
mov
and
mov
mov
lret
pop
loopne
push
jno
pop
dec
inc
inc
inc
push
lock
lret
push
test
add
or
xchg
cld
fnsave
testb
jl
sbb
bound
pusha
mov
movsb
push
push
mov
mov
mov
subb
mov
loope
mov
mov
adc
pop
in
sub
inc
push
test
bound
arpl
sub
dec
mov
repz
push
mov
push
test
mov
jnp
ja
data16
in
push
cmp
inc
std
pop
popl
movsb
test
add
and
lods
sbb
loop
clc
fsubs
stc
cmpsb
fldl2t
lock
pop
sbb
xor
nop
or
pop
into
mov
frstor
lds
xchg
pop
cmp
xchg
jo
sub
sbb
inc
out
add
stos
dec
mov
push
sti
in
mov
mov
mov
pop
adc
sbb
cmp
arpl
and
jae
mov
out
imull
fstpt
dec
push
mov
and
and
dec
xorl
movl
outsl
test
xchg
mov
pop
insb
test
pop
inc
push
cltd
inc
xlat
cmp
xchg
pop
hlt
xchg
mov
enter
fs
sbb
aam
push
or
shlb
xchg
push
xor
imul
test
psllw
add
stos
cmp
xor
xlat
icebp
inc
and
mov
jl
call
inc
insl
add
data16
pushf
inc
scas
call
cltd
lock
and
jecxz
fisttpll
outsl
leave
mov
mov
push
pusha
mov
pop
lahf
cmp
or
shl
scas
movl
pop
xchg
scas
daa
scas
xchg
push
loopne
daa
dec
and
ret
fsubr
lcall
mov
scas
xchg
push
sbb
push
mov
pop
or
popa
scas
lcall
sub
mov
mov
jb
ss
sti
fbld
clc
push
sub
orl
hlt
hlt
test
ret
shl
inc
stc
jmp
js
ljmp
push
xor
daa
push
mov
dec
pop
sub
imul
push
fnsave
jns
mov
push
je
repz
xchg
aaa
push
push
sbb
fisttpll
rolb
jno
push
in
stos
push
popf
push
popa
lret
jae
jg
into
xchg
shll
loopne
push
jb
cltd
daa
cmpsl
out
pcmpgtd
and
and
push
and
add
mov
and
add
jge
mov
ficompl
lods
fwait
sbb
cs
and
cltd
inc
ficoms
jp,pt
hlt
jecxz
mov
push
lcall
jmp
pop
dec
je
je
push
hlt
push
pushf
pop
or
mov
pop
popa
aaa
or
dec
or
jge
popf
outsb
mov
lahf
cmp
sbb
and
daa
shll
clc
lcall
add
push
arpl
mov
cwtl
ds
cmpsl
outsl
mov
mov
jbe
adc
push
jbe
out
pop
fmuls
imul
mov
sbb
stc
sub
pop
addb
xchg
cmp
or
adc
cmpsl
out
jo
lret
jns
sub
shl
push
popa
mov
xchg
mov
adc
xor
add
dec
xor
aas
pop
lea
dec
and
insb
lcall
jae
push
inc
mov
and
inc
fcompl
ljmp
mov
xchg
lcall
rcrb
sbb
sub
pusha
pop
inc
xchg
pop
or
jmp
sbb
subl
cld
xor
push
repnz
jecxz
adc
or
dec
xchg
sub
xchg
in
les
mov
stc
jo,pn
sbb
mov
add
xchg
pop
push
cmpsl
mov
mov
aas
ja
lock
mov
jne
stos
in
in
es
int
pop
and
push
add
mov
adc
ja
mov
fistps
lds
jnp
cld
pop
or
aaa
ret
sti
fwait
and
jno
add
sub
sbb
add
movsb
push
fistpl
push
mov
out
mov
sahf
xor
jp
out
jp
mov
xor
dec
ret
out
fwait
loope
xchg
sub
scas
leave
adc
mov
xchg
jmp
or
cltd
lahf
inc
push
add
xchg
adc
inc
lods
ljmp
lock
outsb
cmpsb
add
cwtl
jg
decl
rcrl
mov
sarl
ja
jl
arpl
pop
pop
push
jmp
cmp
loopne
add
mov
and
loop
inc
adc
xchg
add
inc
notl
fldt
cwtl
jecxz
fisttpll
inc
dec
xchg
daa
inc
mov
sub
jp
shll
fcoml
mov
mov
mov
imulb
lahf
adc
adc
inc
xor
inc
mov
pop
popf
jns
jp
fldcw
pop
sub
adc
dec
push
sbbl
xor
lret
filds
xchg
push
insl
sub
insb
add
cltd
sub
pop
mov
movsl
subb
jl
mov
xchg
sbb
cli
adc
aas
xlat
sbb
outsb
push
out
xchg
icebp
adc
mov
adc
lds
pop
out
sbb
pop
rorb
xchg
sub
sbb
jno
add
fs
adc
add
jmp
cld
adc
mov
mov
dec
push
pop
or
inc
das
movsb
add
mov
nop
jl
jb
hlt
sbb
adc
cmpb
daa
repz
cwtl
xor
lcall
out
inc
cmc
adc
hlt
xchg
lret
sbb
dec
hlt
and
leave
pop
mov
mov
dec
in
jns
stos
adc
add
test
popf
stos
aad
xchg
sti
call
add
lock
mov
xchg
inc
popa
mov
mov
das
mov
lock
in
ss
adcb
add
out
or
stos
or
inc
xchg
dec
dec
fisubrl
xchg
pop
call
adc
and
sti
jg
into
mov
and
mov
lock
mov
sbb
imul
sarb
cmc
hlt
sbb
ret
push
xchg
push
adc
sbb
orl
andb
adc
aas
pop
mov
fwait
xor
adc
cli
adc
gs
cwtl
loope
daa
adc
das
push
xor
pop
in
xlat
sub
mov
rolb
mov
mov
mov
jg
mov
into
lock
mov
push
mov
jb
or
fnop
xor
dec
idivb
cmp
popf
cmp
ljmp
jns
sbbl
xlat
fdivs
hlt
cmp
in
mov
mov
xor
sbb
cmpsl
les
testb
inc
pop
int
inc
insb
test
fwait
mov
fists
loop
fdivrs
pop
push
lret
flds
jp
mov
test
mov
loopne
negl
ds
mov
inc
xlat
add
lock
arpl
cltd
xchg
dec
and
jge
jmp
mov
test
add
out
push
lods
scas
lock
xchg
xchg
inc
mov
jg
out
adc
lods
mov
pop
out
ljmp
out
je
ds
rcrb
cmp
das
pop
sbb
fmuls
xor
fwait
add
dec
push
xor
add
bound
adcl
cmpsb
stc
pop
fisubl
xchg
inc
inc
into
pusha
lods
testl
into
lods
or
push
cltd
jg
fstps
stc
mull
test
hlt
leave
pushf
imul
push
push
mov
lods
lods
js
out
out
mov
mov
or
jnp
mov
inc
push
in
js
mov
in
aaa
lock
sbb
sbb
sti
add
push
jae
pop
clc
xchg
pop
add
and
jecxz
stc
inc
fldln2
in
call
jecxz
rorl
add
repnz
roll
icebp
aam
stos
cmpsb
add
mov
mov
inc
into
lods
xlat
ret
ret
xor
loop
cmp
xchg
pop
sbb
aad
jge
call
dec
xchg
test
pop
mov
movsl
or
lahf
pop
les
iret
daa
jbe
mov
imul
mov
cmp
test
aam
inc
pop
sub
jp
cs
add
pop
jecxz
pop
sbb
outsb
pop
ja
xchg
mov
cli
jl
les
data16
adc
push
addb
cmp
lret
fdivrs
aaa
inc
movsl
mov
push
movsl
andl
scas
jnp
movsb
les
sub
mov
mov
push
sbb
or
jns
mov
cmc
mov
mov
adc
mov
pusha
push
or
pop
lret
push
sti
gs
mov
nop
xchg
mov
das
nop
mov
cmc
lock
adc
jne
jns
pop
fbld
hlt
data16
shlb
adc
jge
shlb
pop
inc
pop
dec
pop
int
cmc
jns
mov
int
sarl
out
fistl
loop
adc
adc
and
je
push
mov
lods
push
nop
shl
sarl
iret
sti
insb
fwait
sub
addr16
sbb
xor
mov
or
iret
in
add
insb
add
mov
lcall
lcall
idivl
pop
mov
xchg
loopne
cmp
dec
lods
mov
sbb
call
sbb
xor
jg
and
sub
cli
jb
repz
les
sarb
cli
insl
repz
out
push
sbb
sub
popf
call
mul
stos
xchg
fldcw
cld
addl
hlt
mov
lret
jae
pop
in
jp
xor
add
gs
jb
adc
xchg
xchg
cltd
fnstenv
xchg
jge
adc
aad
or
das
insb
or
push
or
mov
mov
mov
data16
or
leave
mov
or
arpl
lods
loopne
pop
sub
dec
call
mov
cmp
fs
std
outsl
adc
notl
test
xchg
pop
movsl
mov
dec
push
imul
adc
imul
in
push
sbb
ret
icebp
movsl
ret
aam
cmp
in
push
sbb
mov
pop
sahf
les
and
in
cmp
mov
xor
xor
mov
popa
clc
xchg
cmc
rclb
jg
jle
das
jmp
lods
jg
rol
pusha
inc
jo
xor
cmpsb
cmp
add
sbb
jp
sub
add
mov
xor
jne
xchg
sub
fwait
pop
cmc
or
mov
xchg
loopne
fnstsw
xor
call
jae
add
xor
adc
mov
loopne
push
push
mov
mov
dec
and
cs
sbb
jl
lds
lcall
clc
rcrl
ja
cli
or
mov
daa
js
cwtl
fidivrl
movsl
push
out
xlat
mov
mov
dec
cmpsl
jp,pt
xchg
add
sbb
test
xchg
cmpsb
jle
fdivs
jno
cmp
rclb
imul
cltd
fidivrs
xchg
xorb
repz
and
jo
cld
arpl
leave
pusha
shl
jge
adc
out
cmp
jae
jle
mov
out
mov
jnp
push
adc
inc
jbe
xor
aam
xchg
or
push
out
sub
add
cmc
mov
and
sub
lea
mov
int
pop
add
mov
jbe
dec
fnstenv
leave
sbb
lds
out
lods
pop
xchg
nop
mov
sahf
xor
idiv
push
add
jnp
mov
pop
mov
jae
or
lcall
and
inc
mov
lea
adc
mov
and
lds
fwait
adc
int3
rol
repnz
xor
sbb
sbb
cld
xchg
pop
int3
cmpsb
cmp
lods
pop
lds
mov
add
inc
stos
or
pusha
std
pop
stos
inc
mov
jbe
push
mov
dec
fists
adc
std
pushw
cltd
xchg
inc
fcmovnb
xchg
xchg
sub
adc
mov
adc
daa
push
popf
push
mov
mul
jbe
mov
cmp
insl
testl
jno
xlat
outsb
aam
cmpsb
cmp
and
fs
sub
mov
and
jle
shrl
fwait
cli
xchg
int
loope
mov
xchg
sub
call
ret
cs
mov
loopne
sub
xchg
jl
xor
add
es
out
push
push
popf
mov
fnstenv
xchg
mov
enter
push
push
testb
xchg
push
jmp
push
pop
outsb
add
decb
mov
push
arpl
rcll
and
push
pop
push
movsl
nop
lret
ret
mov
mov
push
pop
call
sub
xchg
dec
in
and
cmpsl
push
pop
clc
mov
lods
inc
cld
xchg
sbbb
daa
scas
inc
push
pop
aam
mov
mov
ret
pop
dec
pop
add
mov
sub
or
sub
andb
movsb
lret
mov
push
out
mov
daa
pop
testl
lea
shrl
in
out
add
aaa
xor
mov
cli
xchg
mov
js
fucom
into
gs
pushl
jge
dec
aam
jl
push
popf
rcrb
pop
addb
jb
sbb
ret
mov
cmp
addl
jae
adcb
mov
loop
lea
xchg
jge
sbbb
scas
mov
ficomps
fisttpl
sahf
sahf
xor
fistps
out
dec
push
lods
jg
jb
shrl
dec
ja
jb
push
mov
enter
xchg
sub
push
jmp
pushl
lock
sub
out
mov
mov
cmp
imul
xchg
out
fidivl
xor
ret
pushf
xor
mov
sub
insb
iret
mov
mov
sbb
pusha
inc
loop
jne
inc
frstpm(287
movsb
out
fnstenv
ljmp
mov
les
cmp
shll
fs
xchg
cmpsl
aam
adc
mov
ss
gs
xchg
cmpsb
mov
mov
clc
je
jp
cwtl
movsb
push
jmp
lds
aad
push
xchg
sub
xchg
ss
pusha
in
xchg
push
out
test
xchg
lret
addr16
mov
loopne
mov
addr16
xchg
push
mov
mov
imul
lcall
mov
imul
lcall
cmpsl
rcrb
addl
jae
inc
fld
mov
xor
addl
jae
and
rcll
sub
je
rclb
xchg
sub
pop
sub
nop
dec
test
jge
nop
daa
mov
sub
fisubs
mov
jle
stos
inc
mov
outsb
scas
inc
lahf
dec
testb
scas
inc
fcmovnu
push
mov
xchg
repz
data16
mov
jne
cmp
pusha
push
inc
ftst
xchg
push
movsl
shrl
popa
dec
data16
jge
cmpsb
cmp
loope
hlt
mov
lea
sarl
pop
out
mov
insl
mov
mov
outsl
sub
popf
xor
sub
aam
leave
test
jbe
in
fidivl
std
rcrl
mov
data16
pushf
xor
sahf
in
test
out
call
icebp
jmp
pop
fs
pop
push
jp
loop
mov
mov
rcrl
sub
lods
pop
add
mov
out
popa
clc
pop
pop
adc
xor
fnstenv
out
mov
pushf
push
add
xor
inc
lock
mov
xor
mov
add
pop
hlt
and
je
push
call
pop
add
jge
sub
and
shlb
data16
int3
arpl
repz
lret
sbb
xor
shrb
int3
pop
icebp
add
stos
inc
xor
ja
push
push
enter
mov
pop
shll
loope
push
dec
sahf
xor
test
jno
or
push
inc
fldl
cltd
push
jl
push
lock
fwait
adcb
insl
sbb
mov
fs
ret
push
mov
dec
loope
gs
sub
pop
pop
mov
xchg
sub
or
cmpl
pop
or
jnp
push
loope
xor
into
add
jbe
out
or
sbb
mov
inc
fldcw
add
mov
fistl
lods
adc
lock
mov
mov
xchg
in
stc
pop
mov
fchs
testl
sub
mov
push
and
daa
rcrb
jb
sub
add
jg
adc
add
mov
push
mov
mov
fisttps
or
shrb
movsl
cmp
and
push
jge
add
ja
pop
int3
mov
std
lret
sti
push
inc
pop
push
sbb
fimuls
jl
mov
les
idivb
stos
ret
test
fwait
popa
outsl
push
xchg
mov
pop
sahf
in
cmpsl
ds
pop
cmp
push
xor
subl
cld
sub
mov
dec
orb
jp
xor
rcrb
dec
out
popa
clc
xchg
lock
and
dec
jecxz
inc
jg
jae
push
out
xchg
popf
xor
cmpsl
add
xchg
cmp
jmp
jnp
push
loope
mov
mov
test
mov
aam
and
jecxz
mov
mov
inc
int3
idiv
cmpsb
pusha
mov
add
lds
repnz
and
stos
in
inc
sub
push
lret
fwait
push
pop
ds
lea
in
cmp
mov
fimull
xor
jne
cmp
cmp
outsb
lret
bound
in
lds
xchg
rorb
sub
jae
xchg
fidivl
jl
and
cli
mov
and
and
frstor
mov
lock
add
push
cmpsb
jl
mov
xchg
pop
mov
rorl
idivb
pop
pop
dec
iret
inc
jo
mov
jl
es
dec
mov
nop
jns
lods
dec
shl
sti
xchg
mov
adc
out
cs
or
cmp
test
push
orb
mov
in
push
jmp
int
inc
inc
adc
enter
popf
into
std
es
dec
cmp
scas
jno
loopne
dec
sbb
mov
loope
jns
jne
or
mov
rep
xchg
jl
shl
rcr
mov
inc
mov
in
mov
push
jge
jno
or
xchg
imul
xor
decl
xor
xchg
push
lret
out
push
jb
sub
jmp
imull
popf
adc
dec
xchg
stc
in
out
lods
inc
cmp
mov
dec
xor
test
outsb
jae
cmp
xchg
dec
rclb
and
out
xor
aas
ret
inc
mov
pop
ds
bound
dec
movsb
lods
das
or
jnp
push
lcall
and
fimuls
in
imul
inc
xor
sub
push
shll
in
ss
rorl
enter
cs
sub
aam
push
rclb
and
cmp
js
imul
insl
arpl
pop
jge
jge
push
sbb
std
push
call
pop
inc
cltd
pusha
push
mov
xor
pop
cltd
xchg
dec
jae
inc
xor
push
pop
push
into
sbb
loopne
popa
inc
jmp
xor
insl
push
subb
jo
xchg
pop
adc
pop
ljmp
or
push
push
fistl
call
or
adc
enter
sbb
jbe
inc
xor
jo
imul
insb
cmp
push
enter
pop
push
sub
inc
ja
pusha
imull
leave
leave
cmp
mov
in
lock
jmp
adc
in
push
mov
mov
icebp
dec
push
shrb
js
or
jg
stos
dec
push
das
test
mov
clts
dec
mov
push
or
add
sub
inc
xor
mov
sti
aam
sub
rcr
insl
or
bound
and
je
jne
pusha
mov
jae
dec
mov
insl
xchg
jp
das
lea
jg
repnz
push
iret
pusha
rolb
and
std
inc
in
hlt
mov
push
leave
sbb
jge
mov
leave
imul
mov
fsubrl
std
dec
loope
dec
inc
mov
cwtl
pop
jl
arpl
cmp
xchg
test
daa
sbb
stos
push
lahf
xor
repnz
cmpl
push
xchg
pop
insb
pushf
add
orl
dec
inc
aas
or
stos
gs
lret
cli
inc
xchg
fs
inc
add
ds
sub
test
mov
jbe
cmp
jne
cld
dec
dec
mov
xor
jge
cmpsb
jb
fimuls
jbe
into
inc
adc
int3
add
sbb
fsubs
xor
sbb
neg
add
iret
xor
pop
adc
push
sub
outsb
stos
in
sbb
and
fcoml
clc
xor
js
xor
int3
inc
inc
inc
lock
scas
pop
imul
pop
cmp
lds
ds
jl
cmp
ds
sahf
outsb
jl
and
stos
jb
repnz
jae
shrb
pop
inc
fimuls
into
inc
jmp
rcll
test
pop
daa
dec
sub
insb
arpl
sub
and
mov
adc
sbb
jle
hlt
dec
sub
and
dec
sbb
inc
test
lret
loope
xchg
sbb
jo
fmuls
pop
rcll
loope
inc
mov
clc
cwtl
das
sub
push
dec
dec
mov
jle
push
rclb
nop
andl
xchg
mov
or
mov
testl
xchg
pop
adc
arpl
and
cmpsl
or
dec
pop
inc
sub
sbb
pop
psubd
dec
gs
hlt
ds
xor
add
jle
jae
xor
push
int3
push
inc
lret
and
mov
in
xor
mov
add
pop
inc
lds
psubd
inc
cmp
pop
test
or
cmp
ljmp
or
aam
scas
adc
pop
iret
iret
push
in
push
scas
jae
mov
in
mov
lods
rcll
add
mov
arpl
add
xchg
sub
mov
add
push
cmp
sub
ficoml
out
out
ret
push
test
fucom
cmp
fidivrl
loope
fdivs
and
xchg
fsubrp
xor
adc
movsl
inc
fcmovne
push
jmp
mov
pop
add
or
dec
fwait
jle
xchg
jno
ret
dec
jbe
jmp
and
aas
jae
mov
pop
xchg
sbb
sub
mov
fidivrl
sub
or
daa
inc
ss
push
or
cmp
int3
and
add
shrl
sbb
int3
xchg
dec
and
pop
xor
lea
popw
stc
cmp
jmp
push
xchg
fldenv
xor
mov
adc
push
sahf
jp
inc
fisubl
pushf
and
adc
inc
lret
cmp
std
rcrl
pop
fldenv
out
dec
ret
popa
stos
pop
repnz
or
rcl
or
push
xchg
movsl
cmp
cld
in
inc
mov
call
test
push
rcll
adc
mov
data16
push
mov
push
mov
mov
sub
mov
adc
shrl
js
pop
push
push
int
push
xor
pop
sbb
cli
cmpsl
dec
adc
jle
or
es
clc
and
inc
lret
fsubs
pusha
lahf
inc
fsubl
hlt
es
xchg
sahf
xchg
adc
repnz
sbb
ret
jmp
jmp
jecxz
ret
out
xchg
sar
and
mov
fadds
inc
sbb
push
ret
and
jle
test
bound
loope
jne
bound
push
mov
fisttps
out
mov
repz
mov
lcall
push
mov
sbb
jle
lds
dec
mov
insl
sbb
movsl
sub
add
push
mov
das
imulb
jae
test
xor
jge
push
decl
xor
cmp
add
sub
mov
add
sbb
xchg
notb
imul
lret
out
js
sub
mov
cli
sbb
fwait
shr
jg
add
jmp
int
call
xor
cmp
sahf
xchg
xchg
lods
add
jne
sbb
jmp
dec
ret
lock
and
in
xchg
mov
push
std
enter
mov
lds
mov
imul
xchg
int3
fmull
add
fnop
dec
out
or
scas
and
mov
cmpsl
jae
cwtl
outsl
jecxz
pop
int
jae
popa
out
out
mov
jmp
ret
cmp
push
jno
inc
ss
pop
out
jno
lods
pop
pop
xchg
ss
and
insb
imul
pop
mov
sub
lcall
fimull
pop
aam
xchg
push
xchg
jns
test
pushf
xor
pop
mov
dec
mov
sbb
imul
fwait
sub
xor
lock
sbbb
and
js
test
iret
pushf
jg
sub
fsubrl
cmp
les
adc
sub
add
loopne
ja
das
inc
ljmp
jb
icebp
ss
fnstsw
or
fistpll
iret
out
aaa
or
lret
faddl
fucomi
and
dec
push
clc
pushf
xor
mov
inc
cltd
nop
scas
pop
or
sti
xchg
jmp
mov
cli
setp
shlb
jnp
or
adc
loopne
gs
fisttps
inc
cmpb
outsl
negl
mov
sub
in
insl
mov
pusha
insl
lahf
pop
jno
pushf
arpl
ja
and
push
sbb
cmp
icebp
inc
les
bound
negl
nop
mov
sbb
add
cltd
inc
sbb
jl
inc
push
pushf
push
pop
popf
xor
pop
jl
dec
jmp
mov
daa
xchg
pop
shll
arpl
push
push
push
enter
or
ja
out
and
jp
fcoms
and
or
ljmp
and
fwait
fsubrl
data16
imul
fimuls
in
sbb
stos
xor
cmc
sub
inc
jp
or
cmc
cmp
mov
cmpsl
imull
std
mov
enter
add
and
icebp
cmp
stos
sarb
jp
dec
mov
sub
ja
ss
mov
mov
addl
push
xor
sbb
jl
push
lret
lds
cwtl
outsb
ret
stc
pop
add
mov
fdivl
adc
iret
push
xchg
nop
mov
imul
mov
aaa
xchg
lods
cmc
push
lcall
cld
xor
sti
leave
inc
out
add
stos
fidivrs
movsb
into
mov
or
lret
inc
cltd
cmpsl
cmp
jo
scas
sbb
pop
add
add
push
cli
xchg
pop
inc
inc
cltd
arpl
aad
sub
pusha
inc
mov
or
pop
imul
inc
jne
incl
cmpsl
pop
mov
adc
xor
mov
add
jmp
scas
out
sbb
or
in
shr
es
lahf
xchg
jecxz
lret
mov
add
test
jb
add
dec
xchg
popa
pushf
test
lds
push
dec
shrl
fisubrl
adc
js
stos
and
dec
shll
lcall
into
lahf
xchg
in
outsb
xchg
mov
ret
sub
out
push
sahf
cmp
outsl
js
pop
cld
jo
shlb
inc
mov
movsl
mov
rolb
cmp
movl
insb
mov
lock
fxch
pusha
leave
mov
scas
sbbl
out
or
and
adc
imulb
lret
out
hlt
mov
lds
mov
mov
mov
popa
clc
negl
mov
and
ret
xor
fst
dec
loope
jmp
outsb
and
inc
shrb
shlb
insl
cmpsb
nop
pop
adc
insl
or
in
xchg
movb
cmpsb
mov
xchg
sub
testb
lds
push
inc
scas
lock
loopnew
xor
in
adc
fcoml
push
imull
mov
or
lea
cwtl
test
je
push
inc
jnp
pop
pop
pop
pushf
nop
inc
jge
and
jle
mov
ret
xchg
les
ret
test
cmpsl
xlat
outsb
fnstenv
std
inc
enter
cltd
int
pop
sarb
gs
insl
loopne
fwait
xor
cmpsl
cmpsb
imul
outsb
shlb
xchg
xor
cmc
xchg
jno
add
pop
cmpsl
xchg
add
mov
push
ret
add
ficompl
sub
loopne
arpl
xor
sub
push
push
ret
push
push
xchg
mull
add
xor
mov
jnp
stc
imul
pop
std
mov
in
adc
pop
mov
jmp
mov
mov
jmp
cmpsb
imul
outsb
sarl
cltd
daa
cmp
xchg
cmp
push
movsl
imul
push
cmp
jns
inc
cmpsb
xchg
test
adc
dec
lcall
sbbb
stc
lock
inc
std
sub
mov
repnz
int
loopne
ret
out
cmpsb
imul
rcrb
pop
ror
stos
out
les
cli
nop
sti
aas
mov
add
cmp
xchg
stc
filds
add
or
mov
sahf
fs
mov
mov
and
stos
jb
fs
inc
popf
lea
nop
jns
fwait
dec
cmc
aas
out
pusha
jg
inc
ret
sbb
inc
xlat
outsl
mov
inc
push
stos
imul
lods
fdivrl
push
sarl
dec
mov
pop
mov
stc
dec
lahf
mov
js
loope
addl
popa
and
out
jbe
aaa
fidivrl
rorb
xor
mov
ret
pop
aas
aam
lcall
push
cmp
rorl
dec
mov
popa
cld
and
lods
adc
aaa
addr16
dec
jecxz
aas
lret
repz
fsubr
mov
shl
repnz
stos
movsb
jmp
mov
dec
aam
pop
lret
cmp
pmullw
cmp
mov
repz
in
and
inc
fiaddl
jne
dec
imul
andl
jbe
adc
xor
and
jae
push
pushf
popl
adc
rorl
and
jle
rclb
pop
mov
sbbl
xchg
and
leave
and
jge
cmp
mov
std
xor
les
sub
add
sbb
mov
dec
mov
mov
rorl
mov
mov
out
popl
mov
jns
test
loope
mov
or
push
push
sub
ss
pop
push
add
je
iret
inc
popa
dec
cmp
pop
cmp
mov
push
mov
mov
push
stos
rcrl
mov
cs
out
stos
pusha
ror
inc
rcl
xchg
sub
xlat
sub
mov
mov
lret
repz
rol
enter
mov
int
sbb
mov
adc
pushf
daa
cmp
jp
ljmp
xchg
sub
int
adc
daa
jb
insl
mov
push
fdivl
jae
mov
rcll
and
push
jbe
dec
dec
cmp
lcall
sbb
aaa
xchg
xchg
cs
sub
mov
or
lret
fldl2e
fs
fdivl
ljmp
sar
mov
fnstenv
cmpsl
add
mov
jae
mov
lret
mov
jmp
das
lret
inc
sub
push
iret
in
call
or
push
scas
loope
int3
mov
xchg
nop
mov
repz
fcmovnu
inc
rcr
fdivs
loope
or
inc
not
cmp
mov
fcmovbe
ds
ljmp
jns
scas
jb
cltd
add
pop
in
push
pop
push
dec
jno
hlt
sub
or
jp
cmp
imul
xchg
xchg
pop
add
sahf
push
xchg
mov
mov
sbb
pop
repz
cmp
loop
or
icebp
push
cli
mov
lods
inc
bound
jecxz
dec
push
xchg
pop
jp
or
outsb
mov
add
xchg
stos
test
test
xor
insl
sahf
enter
iret
js
pop
fidivs
in
mov
and
stos
mov
std
mov
and
ficompl
gs
mov
cwtl
mov
push
pop
adcl
mov
push
aad
jg
push
into
sub
imul
pop
sahf
push
sbb
lds
std
das
cmpsb
out
je
hlt
rcll
or
gs
jecxz
pop
loop
lods
pop
and
loop
in
mov
cmp
inc
outsb
mov
dec
dec
insl
shlb
fwait
xor
jns
inc
push
clc
xor
inc
dec
shll
add
jo
aaa
into
mov
adc
mov
inc
test
mull
stos
aas
mov
dec
movb
lret
sub
les
shrl
mov
std
push
std
jmp
or
cltd
jne
mov
sub
mov
int
dec
add
push
insb
inc
les
push
add
dec
jno
or
cmp
imul
push
pushf
xor
dec
je
add
fsts
call
cmp
int
dec
jmp
loopne
fsubl
int
mov
repnz
insl
cmc
das
cmp
jnp
mov
sbb
mov
xchg
test
pop
pop
cmpsl
in
negb
imul
xchg
mov
out
outsb
mov
sbb
dec
rcl
cmp
sbb
jecxz
sbb
xlat
rorb
cmc
dec
or
mov
adc
cmp
out
add
fucomip
xchg
jle
mov
add
and
stos
cmp
cld
outsb
sbb
cmp
hlt
sub
scas
popa
xchg
inc
jecxz
pop
pop
fwait
xor
cli
push
cmp
dec
push
cmpb
xchg
inc
or
xor
sahf
jg
popa
or
aas
lret
loope
stc
and
sbb
clc
call
jnp
lock
loop
mov
jge
adc
adc
xchg
and
or
lods
inc
add
daa
movsl
outsb
test
incl
popl
test
js
cmpsb
xor
sbb
push
pop
sahf
hlt
xor
dec
test
jg
sub
sub
or
push
or
mov
insb
and
mov
inc
cmp
andl
xor
aam
dec
jecxz
imul
insb
loope,pt
jo
ss
dec
xchg
repnz
mov
sub
and
lcall
repnz
and
cmpsl
pushf
testl
subl
das
ss
push
adc
jae
pop
leave
jmp
jecxz
in
xchg
mov
lods
fists
lods
je
ficomps
outsb
jbe
popf
and
mov
inc
test
imul
jg
jle
sbb
pop
ret
inc
outsl
outsl
fiadds
aaa
sahf
adcl
je
add
push
jne
cmp
sub
jbe
ja
dec
data16
es
ret
cmp
mov
cmp
or
inc
je
jecxz
in
xchg
cs
aad
cmpsb
je
das
ss
add
jbe
push
inc
movsl
repnz
dec
test
inc
or
xchg
lods
cmp
test
adc
popa
mov
sub
arpl
cltd
int3
pop
mov
mov
outsl
ret
add
sub
xchg
xor
in
xchg
popa
mov
mov
out
cmp
mov
clc
and
lret
pop
movl
jl
sti
and
popa
fadd
aas
out
jge
push
mov
daa
or
mov
cmp
call
aad
cmp
push
jo
fucomp
and
pop
vorpd
cld
test
or
sarb
add
dec
mov
xor
repz
cmpsb
mov
out
pop
int3
fadds
and
aas
icebp
mov
cli
pop
scas
sub
dec
add
xlat
sarl
and
xlat
sub
push
enter
xchg
mov
mov
xchg
dec
fcoml
cwtl
dec
mov
das
add
ret
add
sub
dec
arpl
jne
jbe
test
popa
lods
mov
pusha
test
fwait
sbb
sbb
fs
shll
adc
adc
mov
cmp
shrl
adc
nop
test
scas
or
orb
pop
pop
pop
leave
loope,pt
aas
sub
mov
das
mov
std
movups
lcall
push
sbbl
das
mov
xor
xchg
movsl
loop
and
enter
icebp
xor
mov
mov
in
mov
jge
mov
out
in
xlat
push
in
iret
aam
shll
sbb
nop
outsl
aas
ljmp
push
nop
jmp
fs
rcll
shl
push
mov
jmp
pop
lods
fisttpll
dec
lahf
mov
ret
es
jp
mov
lahf
subb
xchg
mov
dec
xchg
sbb
pusha
clc
aas
mov
ret
lds
mov
in
mov
lcall
jg
dec
add
dec
mov
hlt
lods
inc
dec
pop
sub
bound
jle
adc
lahf
popf
ds
sub
or
inc
mov
jecxz
inc
adc
mov
in
js
shlb
or
ror
cwtl
dec
rcrb
sub
in
inc
fdivs
add
push
movsl
xchg
push
addr16
xchg
mov
cmp
bound
filds
aaa
ljmp
pop
je
bound
movsb
cmp
push
mov
dec
sbb
lock
int
stos
aad
inc
mov
hlt
sub
inc
lret
inc
mov
xchg
popa
data16
cmp
xor
push
sbb
add
sub
mov
xor
inc
shrl
push
mov
fimull
mov
sub
and
add
add
mov
cmp
xchg
insl
jge
xor
cmpb
fbstp
stos
xchg
xchg
mov
imul
dec
out
stos
gs
fstpt
sbb
adc
andl
push
aam
enter
fnsave
out
cmp
sti
xchg
jp
add
mov
scas
and
push
add
xor
push
in
jo
pusha
testl
in
sub
cli
pushf
xor
scas
inc
push
mov
fs
and
xchg
je
in
movsl
mov
shl
lds
testl
call
hlt
xchg
push
popf
adc
sbb
out
inc
xchg
js,pn
scas
inc
inc
cltd
les
leave
pusha
xchg
in
loop
push
mov
ljmp
loop
xchg
clc
sbb
out
push
mov
or
xchg
cmp
cmp
jns
fstpl
hlt
shrl
xor
bound
dec
jns
jo
mov
dec
inc
xchg
insb
or
jge
mov
in
cmp
pop
add
xchg
push
and
jecxz
aas
push
jge
popf
xor
lahf
jne
enter
sub
push
ljmp
xor
fstps
dec
cmpsb
xor
les
ret
sbb
lods
addr16
fsubrp
mov
pop
dec
mov
in
fwait
not
sub
inc
outsb
add
das
lahf
mov
ret
repz
ljmp
rcl
sti
jge
roll
ja
jmp
cmp
shlb
inc
mov
ljmp
xor
add
and
iret
fiadds
js
mov
dec
call
fidivl
loope
es
mov
out
pop
lea
push
stc
pop
mov
pop
jmp
adc
and
cmpsl
or
sub
xchg
repnz
out
xor
movsl
cmp
test
push
call
pop
xchg
xor
and
and
cld
push
push
int
loop
jns
mov
out
scas
xchg
pop
shlb
cmpl
adc
jbe
push
scas
dec
or
fmull
xchg
lods
sub
ficomps
mov
out
push
inc
mov
shr
and
jnp
mov
adc
sub
mov
xor
insb
mov
into
pop
idiv
dec
aaa
xchg
mov
ret
lcall
pop
iret
xchg
dec
movsb
xor
test
cmp
scas
out
sbb
cli
pop
into
or
enter
mov
jbe
out
fidivl
in
xchg
clc
cmpsb
data16
adcl
pop
icebp
std
add
add
aam
inc
pop
mov
ja
sub
cmp
test
pushf
add
xchg
cmpb
in
addr16
jns
jmp
cmp
lock
mov
mov
roll
adc
mov
pop
sbb
lea
mov
fs
inc
and
js
push
test
xlat
sub
subb
arpl
xlat
mov
dec
xchg
sub
mov
or
and
inc
adc
dec
push
mov
cld
out
mov
cmp
aam
add
aaa
xor
mov
addr16
mov
cmp
mov
lret
mov
and
jno
mov
mov
lds
mov
stos
or
es
adc
ljmp
cltd
pop
lret
ss
jl
and
cld
hlt
repnz
mov
sub
jnp
and
cmp
xchg
pop
repz
jp
push
mov
and
addr16
pop
pop
int3
arpl
xor
arpl
loopne
aaa
add
sub
push
cmp
xchg
ret
pop
sub
arpl
cmp
lods
nop
pop
out
add
jnp
mov
ds
mov
mov
addr16
fidivl
or
jns
adc
dec
sbb
sub
jo
lcall
repnz
ljmp
sub
push
mov
je
pop
data16
xchg
inc
fldcw
cmc
mov
mov
mov
adc
cmp
pop
testb
iret
mov
stos
lds
stos
sti
xchg
fdivrl
dec
pop
pop
stc
push
add
cmc
scas
add
pop
jmp
fistpll
mov
aam
push
stos
mov
sub
stc
jo
into
mov
adc
sub
xor
jns
outsb
call
or
mov
lods
push
pop
cli
jmp
notl
es
imul
outsl
test
hlt
jbe
fwait
inc
mov
lods
lea
loope
adc
inc
mov
test
out
inc
or
xor
cmpsb
ficoml
xchg
or
popa
sbb
xor
ja
sbb
pop
addr16
std
jl
insl
repz
push
clc
push
hlt
cmpsb
flds
dec
adc
mov
iret
xchg
test
test
dec
jge
lahf
rcrb
add
sub
push
std
push
cld
enter
pusha
jmp
dec
stc
xor
popf
push
dec
lods
xor
push
std
enter
loope
insl
shrb
lea
add
dec
mov
push
icebp
lahf
push
std
mov
leave
xchg
add
sub
push
push
ss
jnp
imul
inc
dec
or
clc
xchg
out
je
in
leave
xchg
jb
push
sti
bound
cld
hlt
imul
ds
mov
sub
subb
outsb
fs
mov
jno
insb
outsl
push
mov
aam
xchg
fldl
loop
fwait
inc
push
jge
in
imul
dec
cmp
iret
xchg
pop
adc
jno
cmp
loope
test
pop
cmc
imul
out
adc
inc
movsb
sub
int3
into
xchg
sub
or
xchg
insl
inc
or
les
dec
pop
pusha
in
sbb
xchg
cmp
movb
dec
sub
mov
fistps
adc
push
inc
or
adc
mov
jb
sbb
xchg
lcall
ja
iret
fsubrl
mov
sub
mov
push
mov
mov
lods
movsl
loop
shll
mov
adc
mov
mov
mov
lcall
sub
outsb
iret
xor
mov
mov
inc
adc
pushf
push
mov
test
imul
push
jb
invd
mov
jl
sub
jecxz
out
outsb
sub
xor
sbb
jl
test
test
mov
lods
jl
call
outsb
and
mov
add
stos
sub
cs
iret
bound
mov
and
jmp
cmp
sub
mov
js
hlt
lea
mov
les
scas
push
and
fwait
jne
jp
sub
jle
and
aas
xlat
or
ret
in
mov
add
pusha
jbe
mov
push
add
scas
test
add
mov
fidivrl
test
repnz
leave
mov
ficoml
loopne
adc
push
std
add
andl
mov
in
mov
pop
std
inc
mov
cwtl
cmp
push
mov
xchg
mov
adc
ljmp
push
xchg
inc
int3
js
dec
push
adc
inc
pop
and
xor
sbb
fidivrs
int3
bswap
stc
stc
or
or
inc
pop
cli
cmpsb
loop
xor
mov
add
popf
inc
fnstsw
les
ja
dec
adc
dec
pop
cli
sub
movsb
xor
int
push
lea
out
inc
adc
cli
or
xor
inc
pop
cli
cmpsb
in
xor
mov
push
rcrb
lds
jae
lea
outsb
es
inc
pop
cli
and
cmp
mov
lea
jp
lds
mul
or
clc
jmp
cli
orl
and
gs
pop
mov
jb
out
xchg
push
pusha
cwtl
iret
mull
sti
pop
sbb
int
cltd
inc
icebp
fs
push
push
int3
and
and
ljmp
lds
mov
in
xlat
into
xchg
nop
inc
inc
mov
aam
mov
push
push
push
stos
xor
or
in
push
push
push
push
mov
mov
aad
and
test
test
es
mov
xchg
xchg
ret
push
iret
rolb
mov
in
scas
inc
push
enter
dec
enter
cmc
pop
std
xor
aad
fs
push
stos
xor
int3
xchg
je
rolb
out
stos
xor
jl
cmp
mov
mov
int3
out
push
fadds
add
push
mov
in
fwait
sti
popa
sub
pushf
inc
call
cli
push
std
xchg
arpl
adc
js
aam
sbb
popf
xor
add
push
jns
insl
pop
add
dec
ror
xchg
rcrb
cltd
xor
pop
out
int3
jmp
stc
adc
push
lahf
rcl
jge
into
dec
adc
cltd
mov
mov
pop
icebp
shrb
std
jecxz
jns
lock
push
push
aam
push
out
leave
xchg
in
mov
and
jl
mov
hlt
pop
icebp
cmpsb
jmp
stc
addb
jle
jle
adc
lcall
and
xor
pop
stc
lret
lea
jecxz
sub
sahf
outsb
icebp
and
fisubrs
mov
loop
nop
orl
cmp
shrb
mov
pop
insb
out
sub
add
and
jb
pop
ss
dec
mov
in
add
xchg
cmp
push
aas
mov
mov
mov
negb
sbb
ret
andl
arpl
je
xchg
ficoml
jmp
std
fldl
shlb
roll
pop
xchg
insb
repnz
push
clc
jae
dec
push
cmp
mov
daa
repz
pop
and
loopne,pt
push
jbe
es
xlat
test
imul
push
dec
pop
clc
mov
jg
pop
and
inc
cld
pop
cmpsb
xor
insl
sub
jge
xchg
xor
ret
pop
icebp
sbb
stos
into
in
fs
lea
enter
js
call
pushf
cmp
mov
cmpsl
and
test
aam
or
pop
adc
inc
cmp
adc
sub
mov
mov
negb
mov
mov
pop
jp
jge
shlb
jecxz
cltd
cmp
stc
in
insl
dec
out
insb
out
aaa
xchg
adc
xchg
sub
mov
xchg
xchg
mov
mov
cmp
movsl
lret
cwtl
pop
dec
dec
mov
sarl
cmpsl
into
xchg
mov
stos
sub
xchg
pop
neg
push
fwait
cmp
cli
pop
mov
dec
or
stos
xchg
daa
repz
xlat
sahf
cmp
xlat
inc
adc
shlb
cmp
fiadds
movsl
sbb
movsb
jns
pop
add
inc
or
sarl
out
out
jbe
stc
xlat
aas
mov
xchg
push
pop
add
cmp
xchg
lahf
inc
call
std
icebp
pop
sti
sar
fs
icebp
jmp
and
dec
setle
sub
mov
jns
icebp
pop
adc
add
inc
rolb
icebp
xchg
je
jne
jns
out
les
cmpsl
adcb
xrstors
ret
pop
scas
hlt
mov
jp
fs
dec
adc
jbe
rorb
addl
dec
test
jle
in
mov
mov
mov
aam
lods
jmp
outsl
out
repz
xchg
cmp
xor
mov
mov
imull
rolb
push
cmp
int3
jge
and
shr
ljmp
mov
rcr
dec
push
cltd
or
ror
popf
fwait
adc
jle
lret
mov
pop
push
cs
mov
in
pusha
mov
xchg
aad
jo
dec
pop
out
jb
pushf
lods
das
and
mov
scas
loop
mov
int3
nop
inc
movsb
scas
xor
xchg
jge
dec
push
int3
nop
sbb
iret
xchg
xlat
addr16
xchg
add
outsl
dec
jmp
mov
loop
dec
inc
mov
sbb
xor
shl
or
in
dec
adc
push
enter
jp
mov
xor
inc
pop
test
xor
movsb
mov
movsb
mov
push
add
test
push
call
leave
lds
mov
mov
ret
clc
out
imul
sbb
jmp
cmc
mov
push
out
and
and
mov
into
das
mov
repz
sahf
lods
sub
cmpsl
mov
aaa
jmp
idivl
sub
cmp
call
push
stc
mov
stos
das
mov
jb
dec
cmp
jmp
or
mov
pop
mov
fcomps
dec
enter
xor
jno
xor
loopne
mov
scas
pop
ror
cmp
out
pop
adc
sub
push
sarl
xor
in
mov
mov
movsl
xor
mov
jae
gs
sbb
mov
pop
cmp
loop
mov
cmp
xor
or
das
pop
pop
cli
adcl
inc
roll
in
dec
pop
or
push
and
fsubl
clc
push
add
sub
mov
ss
aas
add
mov
dec
add
std
call
adc
mov
push
and
push
sub
fadds
mov
fistpll
aam
sub
lret
mulb
jg
or
cmp
fdivrl
lcall
test
shlb
imul
aam
cmp
sbb
gs
daa
mov
jl
cmp
test
push
lahf
inc
movsl
xor
rcll
push
mov
int
fsubs
push
imulb
add
sbb
mov
popa
lret
jbe
or
add
push
mov
std
jle
call
std
adc
filds
out
rorb
out
cmp
sub
pop
xor
mov
daa
repnz
sub
fdivrl
clc
sahf
cmp
pop
push
insl
jmp
push
mov
cmp
lcall
sbb
mov
sti
pop
add
mov
cli
in
jg
or
and
push
xchg
aas
or
jne
xchg
jnp
loopne
leave
nop
add
sbb
pop
pop
loope
mov
mov
es
mov
push
jno
aad
daa
push
mov
int3
inc
xchg
cld
pop
rolb
pop
mov
hlt
popa
fdivrl
repz
add
xor
jnp
dec
push
sub
popa
mov
mov
pop
or
xchg
mov
cmp
rcrl
push
scas
or
fs
dec
fstpt
cmp
mov
out
xchg
and
inc
adc
inc
adc
stos
xor
or
adc
inc
pop
or
pop
pop
inc
adc
dec
mov
push
jg
dec
icebp
cmp
and
cmp
xchg
mov
add
ficomps
incb
fdivrl
loope
outsl
mov
pop
sti
push
jmp
daa
hlt
mov
in
in
sahf
cmp
hlt
push
add
or
push
xchg
in
cmp
sbbb
dec
add
hlt
insl
mov
jns
dec
adc
mov
mov
push
push
mov
inc
xlat
sub
lret
enter
adc
sbb
xchg
rclb
cmp
daa
or
imul
orb
insb
out
xchg
std
idiv
pop
and
xlat
test
cmpsl
xor
mov
push
add
mov
cmpsl
pop
and
add
and
push
fidivl
or
or
push
push
dec
push
jae
fcoml
jno
inc
push
dec
or
sub
js
xor
xlat
jns,pt
ret
or
ja
mov
mov
into
mov
xchg
roll
mov
pop
clc
daa
stos
or
jp
into
mov
rcll
and
ret
adc
mov
lods
inc
push
mov
in
or
out
inc
jmp
test
lods
repnz
hlt
and
movsb
and
pop
mov
sub
cmp
and
jno
int
mov
repnz
and
ds
pop
ljmp
ja
call
icebp
movsw
or
insb
mov
adc
clc
jbe
scas
ss
mov
nop
xor
and
testl
jbe
lret
xlat
add
adc
movsl
push
cld
xchg
sbb
movsl
push
ret
mov
int
lock
mov
lods
orb
cmp
or
mov
mov
stos
jno
out
adc
lods
push
jno
sbb
mov
call
sub
adc
push
mov
lods
aas
movsb
sub
mov
push
fwait
jl
mov
aas
test
bound
push
jne
std
pop
mov
xchg
inc
insl
cmpsb
mov
std
jne
add
daa
adc
xchg
out
mov
je
out
and
lret
repz
xchg
fnstenv
pop
push
movsl
mov
sahf
xchg
daa
scas
mov
jae
adc
and
mov
adc
adc
push
mov
mov
and
mov
pop
add
fildll
mov
loop
pusha
pop
test
and
int
inc
loopne
mov
sbb
inc
or
jge
pushl
movsb
jge
ret
sub
pop
mov
stos
jo
sbb
pop
push
andb
inc
xchg
popa
ret
push
sub
rcrl
cltd
daa
lcall
lcall
dec
cmp
sbb
or
repz
push
ja
hlt
in
cmp
in
testb
inc
movsb
sub
mov
scas
inc
or
arpl
sub
aaa
mov
scas
mov
xchg
inc
xor
jne
ljmp
sbb
les
sub
mov
fstl
leave
jmp
insl
xor
cmpsb
xor
mov
mov
faddl
fistl
xchg
adc
mov
mov
mov
outsb
jmp
mov
cmp
faddl
xchg
mov
inc
mov
pop
mov
dec
pop
or
jecxz
in
ret
icebp
pop
add
adc
out
push
int
xchg
test
nop
ret
or
push
std
sbbl
sbb
jo
lea
icebp
fs
xor
and
lock
fs
mov
mov
sbb
js
aam
sarl
pop
xchg
cli
jp
daa
adc
cltd
nop
xor
adc
into
das
mov
mov
jnp
mov
inc
icebp
mov
flds
pop
aas
sub
sub
popf
mov
push
xor
js
daa
hlt
arpl
pop
adc
pop
sub
ja
mov
and
cld
pop
fstpt
out
adc
sbb
inc
lahf
cmp
nop
adc
mov
lcall
mov
jle
icebp
fcomp
outsl
or
mov
and
mov
incl
jecxz
push
push
clc
jno,pt
cmp
sub
test
out
sar
xor
in
sbb
mov
lcall
xchg
test
mov
push
push
ret
cs
jl
cmpsb
xor
popa
dec
push
inc
in
xchg
inc
push
popf
pop
rorb
sbb
push
mov
lock
fstps
fistpll
stos
outsb
bnd
inc
or
mov
and
test
aad
lcall
mov
lahf
lcall
push
movsb
xor
fidivrs
adc
mov
and
mov
cmp
mov
leave
adc
arpl
imul
ja
data16
gs
repz
dec
ds
mov
imul
cmpsl
cs
xor
rcll
mov
imul
or
rorl
pop
adc
mov
xchg
xor
fmulp
inc
icebp
pop
or
push
sbb
cmp
dec
xchg
mov
int3
pushf
ret
es
adc
jo
andl
ret
mov
dec
lcall
sbb
push
call
enter
xor
pop
test
insl
mov
mov
sbb
push
sbb
repnz
out
outsl
adc
ljmp
rcll
add
mov
stos
dec
adc
lret
cltd
cmp
mul
jno
cld
inc
adc
es
bound
scas
push
sub
lods
mov
mov
cmpsl
inc
nopl
jbe
cmovs
pop
push
insb
call
mov
mov
ss
shrb
pop
aad
cmp
mov
gs
out
popa
out
cwtl
jns
cld
jg
xlat
add
call
dec
mov
lods
in
xchg
mov
imul
pop
shrb
hlt
jl
add
ljmp
ret
pop
mov
adc
cmp
lds
iret
dec
clc
jg
sub
in
test
dec
icebp
push
imul
adc
mov
sub
xlat
lahf
inc
sbb
test
push
hlt
std
cmp
push
jb
fdivrs
cmpsl
or
iret
popl
pop
pop
stc
add
pop
lock
and
outsl
out
sbb
cltd
aaa
dec
out
inc
push
jno
xlat
test
jnp
add
xchg
inc
push
nop
dec
jne
outsl
into
xchg
push
push
dec
adc
lahf
leave
std
sbb
mov
idivl
jmp
xchg
fistpll
or
je
fisttpll
cwtl
cmp
sub
cmp
fsubrs
inc
pop
cmp
loop
jp
rorl
add
in
push
data16
js
xchg
cmp
insb
jle
lea
cwtl
inc
test
data16
rcl
cmp
adc
mov
jns
lds
out
loopne
mov
test
sub
push
jno
jae
mov
stc
push
fiaddl
adc
inc
mov
cmc
cmpsb
adc
pop
loop
mov
jbe
jae
daa
fcomps
push
jle
jle
inc
xchg
cmp
fldenv
pop
cmpsb
or
mov
xchg
push
imul
adc
lret
dec
adc
add
out
ret
rolb
sbb
imul
into
into
fcoml
orl
or
sbb
jmp
out
dec
inc
cmpl
stos
inc
adc
sbb
pop
addr16
out
addl
push
inc
fs
jnp
sub
jb
mov
mov
cmp
das
adc
mov
sub
mov
orl
jecxz
sub
aaa
xor
subb
or
shr
jae
pop
imul
inc
cltd
aas
mov
mov
lcall
cmp
shlb
and
fdivs
stos
das
sbb
cmc
push
mov
adc
sbb
shlb
ds
test
mov
push
jl
adc
sahf
and
jb
ret
mov
nop
sub
jnp
scas
mov
shrb
out
rcrl
lock
ds
push
lock
or
xchg
cmp
jbe
aas
test
loopne
sarb
cmpsb
lods
mov
sbb
xor
xchg
orb
inc
pop
sub
ret
imul
dec
mov
ffree
lods
fadds
cmp
sbb
or
push
push
dec
leave
dec
adc
fwait
repnz
add
fadds
sub
jnp
mov
jbe
arpl
xchg
dec
lcall
inc
fwait
pop
push
cmp
fadds
mov
stos
call
dec
fwait
dec
adc
lcall
aas
rcrl
cmp
pop
add
sub
push
jp
mov
xchg
inc
inc
push
inc
adc
push
and
leave
insb
pop
mov
and
stc
cmp
cwtl
mov
pop
std
push
lods
lods
sub
shrb
cmp
push
add
mov
ljmp
cmpsb
fstl
mov
lahf
aas
mov
or
call
or
pop
mov
scas
test
xor
data16
repnz
rolb
call
std
inc
or
jmp
repnz
into
xchg
fdiv
es
or
div
stos
mov
sbb
rcrb
inc
xchg
inc
dec
inc
dec
or
insb
xchg
add
popf
jbe
das
ror
jnp
push
or
cmp
mov
add
stos
daa
jge
and
popa
mov
mov
fstps
adc
xchg
mov
dec
jecxz
adc
je
inc
xchg
cmp
lock
aad
xlat
jl
or
pop
shl
les
sbbb
mov
lods
jle
sbb
pop
add
daa
cmpsl
dec
and
sbb
pushf
popa
lock
pop
mov
add
movsb
cmp
push
add
and
mov
ret
and
cmpsb
sar
popa
scas
mov
mov
mov
lea
addr16
nop
lods
mov
sub
repnz
outsb
hlt
push
loop
mov
jae
xchg
popa
inc
push
mov
scas
test
xor
mov
lock
lds
mov
mov
lods
repz
push
mov
das
orb
cs
jnp
clc
xlat
ss
pusha
or
mov
mov
adc
rorb
into
popl
sarl
push
sbb
sarl
sbb
popf
inc
je
cmpsl
daa
xchg
fs
pop
iret
in
insb
test
mov
sahf
les
cmp
roll
or
xchg
push
adc
adc
mov
pop
dec
lcall
jge
mov
inc
push
gs
adcb
loope
ja
loop
out
int
shll
pusha
data16
mov
movsl
lods
inc
loope
adc
imul
inc
std
adc
xchg
xlat
inc
cs
pop
insl
imulb
mov
adc
push
dec
adc
mov
mov
stos
adc
push
rorb
pop
pop
mov
dec
notl
pop
fadds
data16
adc
jb
push
pop
daa
and
mov
sahf
cmp
sti
addb
adc
popa
ja
mov
ret
mov
push
add
mov
dec
or
mov
adcb
jo
nop
mov
adcb
adc
nop
mov
xor
in
inc
cmp
and
jp
jmp
imul
subb
jb
int3
mov
test
dec
lock
xor
jne
mov
lods
xor
mov
stos
notl
add
mov
xchg
sbb
dec
out
push
ret
push
ret
aas
cwtl
xchg
fnsave
cmpsb
inc
lret
scas
sub
mov
cld
pop
iret
push
mov
sub
push
add
aaa
adc
pop
lock
into
and
inc
jp
push
in
rcrl
jle
mov
scas
fadds
movsl
ljmp
js
pop
in
push
cli
fwait
divl
out
push
sarl
xlat
sarb
inc
mov
sbb
dec
sub
cmpsb
out
jnp
mov
pop
jne
aas
lahf
out
fiadds
and
adcl
aam
xchg
les
sqrtps
loopne
or
mov
mov
mov
mov
or
cmp
repnz
outsb
iret
lock
mov
mov
push
push
xor
sub
xor
fdivrl
mov
shl
sub
and
aaa
push
cld
into
inc
leave
mull
xor
ja
addl
lds
test
in
jo
rolb
add
cmc
push
push
cmp
sub
arpl
xor
push
mov
in
xor
sub
pop
ret
pop
scas
sub
sahf
aaa
mov
mov
fdivl
xor
sahf
inc
inc
ja
dec
cmp
dec
adc
adc
enter
dec
adc
dec
mov
pushf
inc
mov
pop
push
adc
aad
pop
dec
mov
mov
test
movsb
sub
xchg
push
sbb
inc
inc
adc
mov
dec
adc
add
xchg
dec
add
xchg
lcall
pushf
jmp
xor
aam
loope
flds
leave
stos
inc
add
jle
xchg
cmp
imul
xor
test
lods
int
mov
es
test
sbb
bound
inc
nop
aas
xor
or
sub
shr
adc
xor
mov
aaa
sub
cmp
inc
dec
or
mov
xchg
cld
pop
in
jecxz
pusha
cli
lock
jle
xchg
cmp
inc
mov
mov
push
fs
mov
xor
pop
mov
sub
jbe
xchg
leave
adc
inc
dec
sbb
ljmp
out
lock
pop
xor
sti
push
and
test
and
orl
jno
pop
cmp
mov
popa
lock
jo
add
loop
iret
das
add
fcompl
fidivrs
add
jne
xchg
sbb
jecxz
lret
sub
push
sub
icebp
mov
dec
inc
pop
in
in
jo
repnz
daa
inc
frstor
mov
movsb
imul
cmpsl
jecxz
mov
mov
mov
test
stos
bswap
push
jne
pusha
or
shrb
push
add
aaa
lcall
cmp
sbb
push
and
push
dec
mov
leave
dec
adc
push
xchg
mov
inc
adcl
lods
sub
in
negl
xchg
add
icebp
fs
pop
pop
cld
inc
repnz
fcomps
push
rcll
iret
inc
adc
cmpsb
lcall
repz
inc
push
iret
popf
mov
push
sub
dec
jb
xor
cmovge
cltd
aas
popf
xchg
cmp
sbb
mov
mov
xchg
test
inc
in
mov
bnd
sub
mov
lea
fidivrl
outsb
xchg
inc
lcall
jge
jecxz
les
ret
jecxz
inc
call
cs
cltd
loope
out
ret
inc
pop
ljmp
push
or
lahf
shlb
mov
or
enter
jp
xchg
xchg
inc
lahf
xchg
mov
ret
fidivrs
or
aaa
aam
adcl
adc
gs
fnstcw
jl
mov
mov
xchg
pop
fidivrl
sahf
cmp
repz
lret
cmp
stc
es
push
sbb
mov
push
sub
aas
lock
pop
pop
loop
lahf
pop
lea
iret
lcall
fs
or
mov
stos
insl
test
sub
mov
xchg
test
out
jae
mov
mov
jp
sbb
aam
push
std
filds
cwtl
inc
or
mov
pushf
std
cltd
push
leave
stos
ljmp
or
bound
int3
mov
into
mov
jns
fisttps
mov
inc
or
subb
pusha
xchg
inc
pop
sub
inc
sbb
jnp
mov
movsl
rolb
and
nop
aas
or
dec
or
push
pop
cld
sahf
cld
stos
sub
xor
or
jnp
fs
add
aas
sbbb
das
es
stos
jecxz
ret
repz
sti
pop
push
icebp
pop
sahf
and
jnp
inc
gs
imul
mov
dec
in
ja
std
pop
cld
rclb
js
or
outsb
pop
std
out
repz
xchg
sbb
mov
push
or
push
int
inc
inc
push
rcrl
or
repnz
aas
xchg
daa
add
pushf
les
les
push
rorl
fimull
rcll
enter
push
dec
push
pusha
push
std
je
sbb
fs
out
push
jmp
pop
pushl
aas
jo
orb
gs
in
lcall
mov
nop
xchg
fstl
test
inc
dec
jecxz
outsl
das
mov
mov
idiv
pop
or
sub
fldl
xor
stos
xor
and
ret
int
sbb
aaa
orb
sbb
and
jmp
pop
sub
and
loope
jae
std
fwait
sbb
ja
push
push
fldt
jmp
inc
push
hlt
mov
test
pop
lds
ret
ret
frstor
stos
stos
adc
insl
and
aam
jg
rorb
stos
lds
jno
dec
adc
gs
and
and
in
mov
ljmp
arpl
inc
or
ret
sbb
push
xchg
cmp
sub
pop
into
cmp
std
rcll
int3
mov
or
sbb
ljmp
inc
push
call
xchg
imul
aad
and
mov
mov
scas
mov
mov
xchg
orb
and
scas
jle
fsubs
jbe
dec
jbe
jp
lahf
mov
ds
inc
ds
fistps
icebp
pop
xor
lea
and
es
jg
out
push
xchg
ds
xchg
in
fisubl
pusha
in
or
mov
push
rorb
cld
xchg
pushf
push
int
subl
pop
xchg
adc
mov
int
imul
repz
mov
sbb
les
jge
pop
dec
and
mov
sbb
add
inc
outsb
jmp
cltd
lcall
mulb
lcall
cmp
sub
ror
mov
out
insb
push
cltd
jg
sbbb
mov
movsl
lcall
pop
mov
sub
xor
cmpsl
mov
mov
cs
sbb
lods
lods
sbb
mov
and
add
fnstcw
mov
out
sbb
inc
mov
adc
sbb
jg
jg
push
lock
and
inc
loop
cmp
mov
adc
or
in
jecxz
inc
xor
mov
insl
in
sbb
inc
adcb
fnsave
fdivl
fcmovnbe
jns
or
pop
pop
or
add
and
stos
sbb
inc
push
cmp
rorb
fstpl
pop
shlb
sbb
fisubrs
mov
daa
aad
lds
mov
ja
push
sub
es
mov
or
ret
mov
pop
int
cltd
push
jge
xchg
insl
xchg
cmp
loop
or
pop
dec
adc
inc
mov
lea
aas
push
lahf
push
clc
imul
es
iret
mov
pop
lods
sbb
mov
pushf
into
out
or
sub
pop
std
xchg
lea
sbb
mov
sbb
mov
out
cld
lock
outsb
cli
xor
lret
mov
mov
dec
cmpsl
cli
fs
call
dec
dec
jns
jnp
in
jae
insb
jnp
gs
out
int
or
push
pop
nop
cmp
mov
jge
ds
out
orb
lret
mov
mov
inc
dec
dec
sarb
sahf
jae
push
and
adc
repnz
orb
lret
mov
sub
ljmp
pop
and
and
inc
fcomp
inc
int3
arpl
pop
divb
cltd
ljmp
in
or
xlat
ds
sub
xlat
outsb
jge
stc
adc
cmc
mov
xor
adc
mov
fdivrl
enter
popa
jmp
clc
mov
mov
outsb
push
lods
pop
nop
test
lret
pop
jecxz
pop
adc
ss
push
mov
lcall
and
cmpsb
sub
lret
stc
jg
hlt
mov
ljmp
outsb
or
push
shlb
icebp
ja
dec
test
lret
cld
fs
xchg
sbb
sbbl
mov
ret
repz
mov
out
scas
fdivl
insw
add
add
xchg
xor
mov
jmp
sbb
cmpsl
aaa
into
fcomps
pop
xchg
stc
push
in
sub
jae
jge
add
sub
pop
and
and
int
jbe
pop
imulb
cwtl
jmp
lret
adc
jmp
mov
aad
daa
mov
sub
xlat
outsb
jnp
arpl
adc
sbbl
and
xor
jae
mov
out
out
add
cmp
mov
mov
insb
aad
scas
push
mov
int3
pop
loope
pop
adc
ljmp
jno
incb
nop
daa
push
fldenv
mov
movsl
sub
pop
int3
arpl
jge
hlt
scas
sbb
orb
adc
insl
or
push
mov
mov
cmpsl
adc
inc
enter
arpl
sbb
mov
sbbb
outsb
adc
cmp
xor
icebp
pop
mov
out
scas
fnsave
insl
add
add
xchg
xor
sbb
cmp
cmp
xlat
pop
enter
push
in
sub
je
jl
add
sub
push
and
and
into
gs
pop
imulb
in
or
jge
jg
or
sarl
mov
popl
rolb
jns
fs
adc
sbbb
out
adc
mov
fidivrl
out
sub
insl
add
cmp
and
sbb
mov
ffreep
pop
adc
jmp
xor
jl
lret
jb
std
test
lcall
and
movsb
sub
pop
vpcmpgtb
jnp
hlt
lods
sbb
orl
adc
imul
pushf
and
mov
movsl
cmova
inc
insl
clc
popa
gs
xchg
sbb
mov
sbbl
insb
adc
cmp
rclb
push
out
lods
fidivs
bound
xchg
cld
xchg
xor
sbb
cmp
pusha
mov
push
in
daa
mov
jle
dec
je
jp
push
popf
xor
xchg
sub
push
and
xchg
mov
and
into
gs
pusha
imull
xchg
in
add
jle
jle
or
sarb
sub
and
inc
fsubrs
fbld
lcall
arpl
adc
push
test
leave
jo
mov
out
sub
jae
in
add
mov
mov
imul
stos
inc
mov
fmulp
pop
adc
jmp
xor
jge
leave
jb
sti
test
mov
xchg
sub
and
mov
ret
int
cmc
jp
cmc
stos
push
in
orl
adc
imul
xor
sub
movsb
or
xlat
outsb
negl
cld
nop
sbb
lea
sbbl
imul
add
cmp
mov
rclb
push
call
fsubl
push
xchg
std
cld
xchg
das
mov
and
push
sbb
cmp
lret
hlt
push
in
and
inc
je
js
pop
sahf
xor
and
inc
push
cmpsl
inc
fcmovu
aas
into
gs
popa
clc
sub
jg
jge
or
sarl
sub
and
inc
fnstsw
fs
push
cltd
testl
sbb
ds
outsl
mov
call
pop
jecxz
push
adc
lea
rcrb
scas
add
ss
pusha
pcmpeqw
xor
jle
jb
stc
addl
dec
aad
mov
mov
ror
repz
imulb
lret
jge
std
or
pushf
xor
sub
mov
fsubrs
pop
gs
mov
testl
fwait
add
lret
rclb
push
jmp
fisubl
pop
xchg
sti
cld
xchg
sub
dec
sbb
cmp
lret
bound
jmp
or
or
leave
push
es
sbb
inc
fcmovnbe
cmp
stc
sub
adcb
in
mov
shlb
sub
and
fidivl
cwtl
clc
sbb
push
lods
sbb
mov
lret
outsb
aam
push
push
nop
push
jmp
pop
loop
pop
adc
cli
xchg
lods
xor
sbb
mov
fcmovne
popa
or
cs
or
addl
sub
and
add
mov
sahf
and
into
gs
ja
imull
leave
jle
sti
or
dec
mov
shr
mov
fistpll
ret
hlt
pop
data16
mov
test
fildll
lods
cltd
add
lret
jmp
rcrl
push
ljmp
jno
nop
stc
std
xchg
sub
sbb
aaa
sahf
cmp
iret
pop
int3
arpl
lods
ljmp
decl
lahf
xor
es
sbb
data16
mulb
daa
nop
in
test
dec
adcb
jecxz
mov
into
xor
mov
fidivrs
fisubl
or
sbbl
jmp
mov
lret
insb
sarl
jmp
pop
loopne
pop
adc
xchg
lods
xor
mov
xchg
push
fxch
popa
or
in
mov
les
jg
popf
mov
xchg
sub
and
add
dec
popf
and
push
mov
pusha
mull
jle
stc
fs
xchg
sbb
shl
mov
loopne
rcr
repnz
decb
popl
test
pushw
lods
xchg
jmp
lret
ljmp
ljmp
jno
clc
std
xchg
sub
sbb
ss
cmp
into
push
int3
arpl
stos
ljmp
decb
lahf
das
xchg
xchg
sub
push
es
sbb
iret
insw
cmc
stc
es
in
test
inc
adcb
loop
mov
int
sub
gs
mov
fidivrs
fldenv
or
sbbl
call
mov
lret
imul
push
add
push
jmp
push
fbstp
adc
xchg
stos
xor
mov
test
dec
fmul
popa
or
in
mov
ret
je
cmc
jle
popf
scas
push
xchg
sub
and
add
dec
pushf
and
push
mov
pusha
mull
jle
clc
arpl
xchg
sbb
shl
mov
loopne
mov
decb
popl
sbb
gs
lods
xchg
mov
lret
jmp
or
cmp
or
mov
es
sbb
xor
push
int3
arpl
stos
ljmp
std
or
dec
es
sbb
iret
data16
hlt
stc
and
inc
adcb
loope
mov
int3
xor
shlb
pop
xchg
mov
fidivl
fsubs
or
sbb
lods
sbb
cmp
sarl
jmp
push
fidivs
adc
xchg
stos
xor
mov
test
dec
xlat
lret
jo
in
mov
ret
hlt
jge
popf
scas
adc
and
add
dec
fwait
and
push
mov
pusha
mull
jle
mull
mov
dec
mov
shl
mov
loopne
mov
decb
popl
test
fs
lods
xchg
std
mov
lret
call
or
cmp
jno
idiv
xchg
sub
sbb
xor
cmp
int3
push
int3
arpl
test
jne
jno
or
lds
mov
sbb
iret
imul
stc
and
in
test
loopne
mov
lret
xor
shlb
push
push
test
mov
fidivl
xlat
gs
or
sbbl
out
lods
pop
jge
cmp
sarb
jmp
push
fnsave
emms
sti
xchg
test
lret
sti
subl
lret
outsl
push
in
mov
shll
push
popf
lods
adc
sub
and
jmp
dec
cltd
and
push
mov
popa
clc
mov
les
mulb
mov
dec
mov
shl
mov
loopne
mov
incb
nop
inc
test
sbb
arpl
scas
xchg
sti
mov
int3
out
rcrl
push
jmp
mov
jb
mov
std
xchg
es
nop
daa
loopne
sbb
xor
int
xchg
push
out
sbb
jmp
fidivrl
or
ret
dec
daa
mov
push
mov
iret
imul
and
sbbl
sets
shlb
push
sbb
aad
cld
push
xchg
stc
nop
les
sbbl
in
scas
push
jnp
cmp
into
mov
ljmp
jno
push
jne
xchg
cmpsl
das
es
enter
subb
dec
aad
bound
insl
push
in
sahf
sub
sbbb
or
jnp
sahf
lods
adc
mov
xchg
pop
inc
fistl
iret
ljmpw
or
test
pop
or
push
lahf
ss
mov
shl
mov
loopne
mov
incb
xchg
inc
cmpsb
test
bound
scas
xchg
stc
mov
int
dec
rcrl
push
in
cmp
jae
mov
std
xchg
and
xchg
sub
inc
sbb
xor
into
gs
push
out
sbb
jne
insl
cli
or
rorl
loop
dec
adc
inc
fst
xor
fs
and
sbbb
fmull
mov
leave
cs
pop
ljmp
mov
fdivl
shll
add
cli
xchg
ret
and
sbb
stos
ss
int3
mov
jmp
pop
fidivs
fidivl
or
cld
xchg
movsl
sub
sbb
mov
cmp
dec
ror
arpl
es
jns
lahf
stos
adc
cld
arpl
fmull
shlb
outsl
arpl
mov
roll
lea
aaa
inc
scas
sub
fbld
push
cltd
add
xor
push
xchg
aas
movsb
xchg
xchg
mull
in
ret
add
loopne
iret
push
je
mov
xchg
and
sbb
je
mov
xor
into
gs
out
sbb
jbe
insb
clc
or
rorb
jnp
mov
adc
shlb
out
fs
and
sbbb
fisttpl
or
mov
rcrl
push
sbb
fdivl
shlb
add
test
push
loop
scas
adc
cmp
lret
rclb
push
jmp
push
fbstp
fdivs
or
xchg
movsb
sub
mov
jle
inc
mov
cmp
dec
ror
arpl
push
out
fwait
and
adcl
or
inc
leave
es
xchg
sbb
dec
mov
push
sahf
or
xchg
mov
push
movsl
mov
mov
ret
fisubs
push
xchg
decl
xor
push
xchg
mov
sbb
sub
ret
add
in
xor
push
je
mov
xchg
and
sbb
jae
mov
das
xchg
cmp
push
into
gs
out
sbb
or
sub
sub
adc
addr16
fs
pop
xchg
test
fimull
or
rcrl
push
sbb
fbstp
shll
add
test
push
loope
scas
adc
cmp
lret
cld
test
sbb
jb
or
xchg
mov
les
mov
jge
inc
scas
push
cmp
inc
ror
arpl
imul
push
mov
or
inc
enter
popa
mov
xchg
sbb
dec
mov
push
popf
pop
lock
mov
push
movsl
mov
mov
ret
frstor
xchg
decb
das
mov
push
xchg
cmp
pop
sbb
daa
mov
into
loop
ret
add
xor
loopne
int
je
xchg
xchg
and
sbb
jb
mov
cs
cmp
lds
gs
in
adc
jbe
push
or
mov
fbstp
xor
addr16
fs
push
xchg
test
or
sub
pop
out
push
sbb
fildll
shlb
add
test
push
loopne
scas
adc
cmp
leave
rclb
push
jmp
sbb
jbe
jb
or
xchg
mov
ret
sbb
scas
adc
int3
arpl
push
ljmp
jne
lahf
cmpsb
or
es
xchg
sbb
dec
mov
push
pushf
push
lock
mov
push
movsl
mov
mov
ret
fsubl
push
xchg
std
dec
loope
mov
jae
dec
push
xchg
cmp
xchg
mov
movsb
cmp
mov
into
loope
ret
add
xor
je
xchg
xchg
pop
test
sub
inc
sbb
jno
mov
sub
dec
into
gs
out
push
mov
jbe
imul
xchg
sub
fidivs
xor
addr16
fs
sbb
sbbb
fmuls
or
sub
pop
in
push
pop
jge
fildll
iret
data16
add
sbb
sbb
cmpsl
xor
int
enter
adcl
fbstp
aad
or
outsl
std
xchg
mov
ret
repz
inc
lods
adc
roll
int3
arpl
addr16
out
cwtl
and
adcl
or
ds
es
xchg
sbb
dec
mov
push
fwait
add
sbbl
mov
mov
ret
push
xchg
cld
dec
loope
mov
jae
dec
push
xchg
cmp
sbb
and
inc
ret
add
xor
je
test
xchg
push
cmpsl
xchg
sub
aas
sbb
jo
mov
sub
cmp
ret
dec
into
gs
pop
out
adc
ss
push
mov
ja
mov
setns
lret
addr16
jmp
sti
sbb
out
test
xlat
or
or
sub
pop
in
push
push
jl
fildll
into
data16
decl
test
fstpl
scas
push
je
cmp
mov
jmp
sbb
ja
shll
add
es
daa
pop
rcrl
jns
inc
stos
adc
rolb
arpl
gs
lock
pop
jmp
push
mov
push
jmp
or
mov
push
inc
fldl
shrb
push
icebp
mov
push
montmul
cmpsb
xchg
sub
push
xchg
cli
dec
loop
mov
je
dec
imul
cmp
sbb
and
cmp
fiadds
pop
ja
push
in
xor
je
sub
xchg
push
movsl
xchg
sub
aas
sbb
inc
sub
into
gs
pop
lock
ss
push
mov
mov
seta
enter
jmp
out
xchg
xlat
or
aaa
shrl
ret
mov
loopne
xor
addr16
decl
xchg
or
movsb
cmp
mov
jmp
sbb
js
shll
add
xchg
mov
rcrl
test
lret
cld
gs
icebp
xchg
sbb
js
jmp
or
mov
adc
fldl
shrl
data16
xchg
add
mov
push
adc
cmp
pop
mov
jecxz
mov
je
dec
push
jle
cld
xchg
aaa
lahf
mov
rcrl
mov
repnz
cmp
faddl
daa
push
inc
test
mov
mov
pop
dec
mov
xchg
insl
arpl
sar
scas
adc
pusha
sbb
popa
int
pop
push
inc
repz
sub
jae
fists
daa
mov
mov
inc
ds
push
mov
orb
aas
call
jbe
lret
mov
and
xchg
xor
xchg
sbb
adc
rcll
push
xor
sbb
out
push
add
aam
or
sub
push
pop
scas
adc
test
dec
dec
add
pop
add
imul
mov
push
mov
imul
scas
sub
add
xor
bound
mov
push
cmpsb
jne
and
xchg
mov
lret
sbb
and
mov
test
and
add
pop
xchg
push
aas
ds
popa
arpl
nop
pop
cmp
fadd
rcrb
pushf
jne
bound
jns
cmp
inc
sub
xor
pop
or
mov
cmp
cmpsb
jmp
fwait
outsb
add
shrl
jp
popa
stc
dec
push
sub
test
inc
ja
pop
in
cmp
das
mov
add
add
xor
pop
roll
into
mov
clc
mov
sarl
mov
insb
sbb
enter
sbb
fisubrs
insl
sahf
loope
sbb
sbb
jo
iret
addr16
ficoml
ss
jb
and
imul
fwait
cmpsb
lea
xlat
repnz
mov
jmp
pop
andl
cld
out
lock
idivl
mov
sub
in
xchg
adc
xlat
sarb
mov
repz
xor
aam
xor
jp
in
mov
add
in
xchg
jne
mov
cmp
mov
ljmp
cmpb
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
inc
ret
neg
sub
pop
cltd
pop
cmc
fs
mov
add
or
ret
mov
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
cmpb
lret
jecxz
xor
jg
hlt
push
scas
cmpsb
mov
pusha
filds
dec
mov
and
mov
jg
int3
jno
test
add
in
inc
xor
je
mov
push
push
push
mov
sbb
scas
leave
loope
pushf
adc
jle
daa
adcb
popf
std
in
scas
fimuls
rcll
cmc
cmc
xchg
mov
push
and
out
pop
jge
pushf
and
fwait
mov
imulb
imul
sub
ljmp
sbb
test
repnz
aaa
mov
jb
movsb
in
imul
mov
add
inc
mov
cmpsl
jns
mov
xor
push
das
jl
test
nop
data16
fwait
and
push
and
cmpsb
pop
popa
jne
test
mov
adc
mov
mov
sub
xchg
ss
aam
dec
testl
pop
push
sub
xchg
sbb
xor
ret
lea
imul
rol
fs
ror
cwtl
mov
aas
lock
inc
xchg
clc
mov
js
mov
addb
out
add
in
inc
mov
add
mov
movsl
xlat
cli
push
push
sub
or
movsl
call
push
adc
mov
aam
cmp
cmpsl
cmp
inc
popa
mov
push
stc
or
inc
pop
mov
push
push
mov
push
out
or
and
xor
or
mov
shrb
xchg
push
imul
xor
jg
xchg
testb
jns
in
mov
imul
inc
loope
jnp
push
imul
fistps
outsl
cmp
sub
add
jbe
test
sbb
pop
mov
push
and
and
mov
mov
fidivrs
inc
ss
fs
mov
push
push
mov
lcall
xlat
jo
cmp
