call
mov
insb
int
pop
adc
xchg
sbb
fcomps
leave
ret
add
leave
ret
jle
out
fisttps
pop
ret
decl
or
jne
or
push
mov
push
outsb
push
decl
lea
adc
jmp
pop
lea
add
xor
push
inc
lea
add
call
inc
add
inc
lea
je
adc
insl
jbe
inc
call
lea
add
call
add
jb
push
and
fnstenv
shrl
movsl
mov
jne
out
mov
sahf
adc
pop
push
add
das
xor
mov
inc
xor
mov
insl
or
call
add
inc
es
fiaddl
aaa
adc
ljmp
call
lret
push
pushf
cltd
or
test
and
loopne
mov
add
mov
add
movsb
je
push
or
mov
mov
lock
add
and
fimuls
fadds
sti
orl
into
cmp
lcall
and
in
nop
jg
frstor
cs
mov
adc
or
pusha
sbb
call
cwtl
sbbb
shlb
inc
sbb
mov
pop
lea
jne
mov
sub
or
add
push
jmp
push
je
add
and
dec
insl
xchg
or
and
or
cmpl
call
jne
call
addl
shlb
insl
sti
add
xorl
je
call
sbb
add
incl
or
fwait
insl
mov
and
inc
call
and
call
std
mov
add
addl
ljmp
rorb
andl
rol
xchg
rcrb
or
add
pop
inc
es
and
faddl
lea
lea
sarb
jne
cmp
add
sahf
ds
ss
mov
addl
lea
ficoml
xor
imul
xchg
enter
out
insl
aas
xor
pop
xchg
inc
or
call
xor
add
inc
add
inc
orl
and
hlt
cmp
fcoms
pcmpgtd
push
add
jle
and
or
mov
or
test
inc
adc
xor
or
xchg
sub
add
add
movsl
ss
add
mov
inc
sub
push
add
inc
sub
push
ret
add
andl
and
rolb
les
rolb
pushf
or
data16
push
hlt
sbb
xor
addr16
sbb
adc
sbb
xor
pop
xor
push
nop
rorb
loop
call
mov
sbb
cli
into
mov
and
dec
test
and
push
push
push
dec
lar
sahf
and
cmpsb
pusha
mov
js
jbe
and
jne
adc
data16
mov
test
add
push
enter
push
dec
outsb
add
into
xchg
jne
mov
and
and
ss
and
fisttps
mov
mov
cld
sarb
aam
add
fiaddl
xor
je
sub
pop
fdivs
mov
test
add
movsb
or
mov
pusha
jno
test
sub
test
push
sbb
xchg
push
stos
add
int3
mov
sbb
sbb
adc
ds
mov
inc
js
je
clc
push
add
bound
push
adc
or
rol
lret
ds
movsl
int3
cmp
or
call
popa
pop
ljmp
xchg
dec
add
pop
testb
addb
sbbl
and
mov
ret
xchg
jp
and
inc
adc
add
in
xor
sub
mov
sub
fsubrl
mov
lcall
inc
cmp
rclb
cmpb
in
int3
adc
ljmp
movsb
loop
outsb
xchg
lret
and
pop
or
sub
pusha
call
in
push
fmul
xchg
shl
pusha
rorb
int3
popa
inc
je
cld
nop
pusha
sbb
xor
and
xchg
or
int3
fcompl
push
cs
bound
add
mov
movb
popa
mov
pop
mov
dec
dec
push
inc
pop
mov
repnz
enter
xor
adc
push
adc
insb
into
sbbb
out
ss
aaa
ror
je
cmp
mov
into
shlb
inc
jo
pop
xor
ror
lea
push
mov
lcall
addb
ret
inc
lods
and
push
lcall
fsubl
sbb
int3
adc
outsb
or
push
hlt
cmp
cwtl
add
dec
or
fs
dec
pusha
push
popa
or
and
bound
out
pusha
and
fs
dec
jl
int3
xor
aas
inc
or
mov
stos
xor
into
add
or
inc
lods
push
jp
pop
loop
inc
scas
je
lret
into
lcall
cmc
xor
pop
adc
cli
sbb
xchg
test
mov
push
test
or
icebp
jp
add
fmuls
mov
sbb
sbb
add
mov
mov
rolb
lods
pop
mov
and
inc
cwtl
into
or
inc
pusha
cmp
fs
and
rolb
outsb
decb
jb
add
clc
pop
cmpsb
in
sbb
mov
inc
jo
or
clc
add
mov
sbb
aaa
sub
jne
cmpsb
fsubl
jne
rclb
add
and
cwtl
fldl
scas
mov
fs
mov
daa
jmp
add
jne
inc
sbb
push
add
xor
push
mov
add
ret
inc
data16
dec
rcr
xlat
mov
fs
xor
cmp
fadds
sub
mov
adc
popw
xor
inc
push
push
push
cmp
pop
ja
jl
jle
jp
add
pop
inc
jo
insb
mov
add
shll
mov
sahf
push
movsb
cmpsb
sbb
or
jne
add
sar
dec
mov
cmp
or
dec
mov
sub
xchg
push
xchg
jl
pop
xchg
cltd
and
xor
les
push
add
pop
jle
inc
xlat
inc
mov
scas
call
call
mov
inc
je
sbb
cmp
int
push
jne
shrb
rolb
push
push
les
lcall
add
dec
lods
stos
shrb
cmp
sbb
call
insb
orb
or
xor
mov
mov
push
data16
or
push
lods
or
shrl
enter
popf
xor
inc
add
jo
sbb
ljmp
xchg
lret
orl
mov
int3
fcoml
xchg
xor
sarb
mov
jle
cli
jge
popa
das
mov
cs
int3
push
pusha
pop
lret
call
pop
adc
jl
adc
mov
push
cwtl
sbbl
add
mov
mov
xor
and
fcmovbe
mov
push
adc
incl
inc
call
lock
add
and
bound
inc
lock
adc
lods
not
orl
sldt
inc
sub
add
xchg
mov
loope
sbb
inc
and
push
cmp
pop
mov
fistl
push
push
mov
add
movl
lock
sti
inc
add
mov
pop
lock
jmp
or
dec
mov
lock
adc
or
inc
add
mov
mov
add
lods
mov
iret
div
sub
rcrb
ret
inc
sbb
lock
pushf
imul
fsubs
add
sub
push
adc
fiaddl
xor
or
pop
jne
sbb
dec
and
push
jge
or
xor
cmp
sub
clc
orb
adc
inc
add
dec
clc
push
loope
add
xlat
iret
mov
test
inc
mov
push
rorb
add
mov
xor
mov
xor
push
mov
pop
stc
hlt
outsb
sbb
pop
cmp
jmp
movb
lock
lret
pop
cmc
jge
in
mov
int3
sbb
mov
fisubs
int3
out
fisubl
mov
pop
or
ss
fisttpl
cmp
outsb
sbbl
shrl
fdivrl
cwtl
fildl
push
add
xchg
sbb
adc
xor
fmuls
repnz
mov
pop
insb
mov
cli
and
lds
fnstcw
dec
add
mov
mov
neg
andb
pop
cld
jecxz
mov
xor
ret
mov
xchg
mov
dec
daa
xlat
sub
enter
dec
jo
in
and
xor
mov
adc
in
dec
bswap
mov
sbb
lock
sbb
xor
jbe
fdivs
fldl
push
pop
not
mov
mov
cmp
lock
gs
lock
sar
adc
out
aas
or
or
mov
sbb
inc
mov
out
mov
sub
push
sub
jo
add
or
or
test
mov
sub
jne
lea
push
mov
rcll
mov
stos
mov
mov
cwtl
cld
hlt
adc
jmp
mov
dec
sbb
outsb
mov
or
mov
sbb
adc
pop
cmp
xor
sbb
xor
mov
ret
pop
add
js
lret
lahf
das
mov
call
ljmp
or
enter
ret
fisttpl
int
ja
adc
push
inc
xlat
xor
adcb
mov
cmpsb
incl
outsb
shrl
out
sbb
int
aas
pop
dec
jmp
std
inc
dec
inc
shlb
xchg
cld
ds
cmp
cmp
xor
inc
and
jo
mov
jae
pop
test
je
add
pushf
cmp
sbb
sub
testl
fstps
fdivrs
ret
andl
in
cmp
test
inc
cmp
and
push
sbb
pop
loopne
pop
or
mov
aam
scas
push
std
xchg
mov
jne
sbb
xor
repz
rolb
aaa
push
in
mov
jmp
pop
adc
incb
inc
adc
mov
add
adc
lahf
push
mov
scas
inc
imul
aam
inc
dec
adc
outsb
mov
jecxz
orb
inc
insb
mov
push
and
mov
pusha
shrb
fbld
jecxz
push
jg
fistl
addb
stc
ret
add
cmp
loope
int
jae
loopne
pop
mov
ret
sbb
add
sbb
pop
rclb
jge
inc
cmp
push
dec
sbb
roll
les
fsubrs
mov
cli
clc
ja
sbb
sahf
inc
pop
sbb
fistl
imul
int
pop
jge
addl
cmp
pop
cwtl
negl
and
or
out
icebp
mov
xor
jge
and
testb
sbbl
push
je
ja
addr16
xlat
in
cwtl
mov
mov
xchg
push
clc
and
jl
fcmovu
mov
push
push
add
push
cmpsl
incl
adc
ret
repnz
adc
repnz
shrb
xlat
adc
insb
neg
ja
ret
and
mov
es
or
or
jne
in
mov
cmp
lods
mov
mov
push
sub
clc
push
or
jg
and
sub
add
aaa
push
adc
fsub
into
adc
sbb
sbb
and
mov
sbb
lret
popf
ret
ret
mov
pop
pop
loopne
mov
in
loopne
or
and
cmp
add
sub
pop
inc
rolb
add
iret
test
call
push
call
inc
push
mov
xor
fmuls
lock
push
sar
xor
clc
xor
add
les
in
call
mov
lahf
fs
rclb
pop
sbbb
add
loop
push
inc
idiv
push
mov
or
clc
jle
sti
and
jae
add
sub
jle
adc
orb
mov
in
inc
adc
dec
lcall
and
mov
rep
or
adc
arpl
jecxz
jg
in
aas
pop
pop
lcall
mov
push
pop
cld
xchg
xchg
jnp
dec
add
adc
or
lret
push
sub
mov
xor
loop
push
aaa
lods
mov
lret
or
add
cmp
fxam
add
pop
sahf
sbb
leave
inc
adc
inc
and
sub
scas
pop
cld
testb
fiaddl
insb
imul
add
dec
xchg
add
roll
dec
movsb
sbb
clc
pusha
lods
adc
test
lods
es
cld
and
or
inc
pop
scas
mov
push
outsl
lea
inc
xor
and
js
addl
inc
inc
pop
pop
or
add
add
push
in
ret
push
dec
sub
fsubr
rolb
mov
clc
pushf
dec
or
push
or
aaa
add
jmp
fstpt
sti
jmp
or
add
je
xorl
sub
pop
mov
das
dec
jmp
lcall
mov
xor
push
rol
sub
xor
sub
das
lcall
xor
out
dec
add
loope
and
int
pop
jo
popf
rcr
sbb
int3
iret
fcompl
cs
int3
adc
aas
and
dec
cmp
or
imul
sbb
push
adc
add
adc
ljmp
adc
or
sub
pop
jae
icebp
pusha
push
dec
js
mov
dec
mov
int3
test
mov
lahf
pushf
mov
das
xor
out
mov
out
mov
lcall
cld
lret
icebp
and
es
cmpsl
cmpsb
xor
rorl
dec
in
push
cmp
pop
push
out
add
sub
xchg
pusha
adc
jno
fs
adc
stos
push
ss
add
inc
shrl
jecxz
and
sbbb
mov
stc
fisubrl
push
lock
repz
or
lea
sbb
loop
popa
pop
lods
jge
adc
pop
int3
mov
neg
adc
inc
mov
push
cmp
sarb
or
andb
ficoms
jo
stos
push
je
xor
adc
loopne
sahf
sbb
push
out
push
xor
add
adc
cmp
cmpsb
sbb
scas
and
int
mov
lahf
and
adc
out
jbe
adc
int3
mov
xchg
push
call
lock
addr16
test
sbb
cmp
push
fcom
mov
incl
andb
aad
repnz
adc
mov
mov
lcall
cmp
bound
sbb
jne
xor
rcrl
loopne
adc
nop
fiadds
inc
pusha
in
shll
ret
mov
fildll
clc
fisttpl
into
int3
out
dec
into
icebp
enter
out
push
adc
sbb
sbb
sbb
xlat
call
fsub
adc
int
sbb
scas
ret
in
not
dec
jecxz
ret
test
insb
and
lret
xchg
movb
aam
jo
or
push
jmp
xchg
cmc
xor
and
and
sub
jns
icebp
repnz
mov
dec
das
sbb
xlat
fcmovnbe
insl
xor
pop
insl
mov
or
call
and
jbe
mov
shl
ret
add
xor
inc
inc
in
clc
xchg
or
add
mov
mull
ret
pop
push
xor
xor
test
stos
stc
leave
inc
dec
adc
flds
inc
andb
enter
lret
lock
loopne
pusha
roll
push
add
sbb
shll
adc
into
dec
leave
inc
add
loopne
addr16
sub
ds
push
push
js
push
in
push
lea
add
pushf
js
cmp
xor
clc
add
gs
shr
pop
xlat
es
mov
pusha
and
fcomp
cli
and
inc
ret
loope
mov
xorb
push
pop
cwtl
rorl
filds
xor
push
mov
loopne
xor
pushl
mov
and
sub
aad
mov
fmul
ret
sbb
dec
js
cmpsl
orl
mov
mov
loopne
cmp
aas
inc
rep
dec
call
pop
stos
cli
inc
add
test
xor
add
inc
xor
and
sbb
fiaddl
pushf
in
test
push
push
repnz
jecxz
and
xor
inc
popa
cld
push
cmp
rcll
mov
mov
xchg
xor
sub
in
jmp
pop
loopne
or
in
push
inc
into
push
sbb
and
jbe
dec
mov
jo
dec
sub
mov
xor
not
faddl
push
sbb
lds
adc
inc
in
xchg
into
fsubl
mov
iret
xor
test
cmp
cmp
add
push
movsl
popf
pusha
push
mov
or
pusha
pusha
dec
push
push
pop
jg
pop
jb
enter
aam
mov
filds
js
enter
ja
rcll
ds
insl
ret
push
fldl
mov
inc
or
xchg
and
push
in
jne
repz
jg
sub
push
jne
fsubrl
push
inc
movsb
add
in
test
mov
lea
rcrb
mov
addr16
push
push
xlat
sub
xchg
push
add
mov
mov
inc
mov
repnz
dec
test
mov
fnstcw
sahf
sbb
xchg
fdivs
push
das
stos
pushf
mov
pop
sbb
xlat
dec
dec
fnstcw
stos
sbb
pop
adc
fsubrs
add
cmc
lcall
pop
add
fwait
hlt
dec
inc
sbb
cmp
add
xor
clc
pushf
fwait
cmp
mov
or
sbb
or
test
sahf
cld
xor
hlt
test
adc
std
lahf
cmp
xor
test
ja
aaa
cmp
and
inc
dec
call
popf
add
daa
nop
in
add
addr16
xor
mov
lea
shr
mov
push
mov
out
adc
and
call
mov
or
mov
dec
inc
adc
jl
ljmp
jge
out
sub
int
pop
imul
dec
pop
repz
les
sub
and
frstor
shll
pop
xor
xor
and
int
sub
add
push
jbe
push
outsb
scas
sbb
pushf
std
inc
out
pop
test
push
das
aas
sbb
mov
dec
icebp
inc
jnp
cs
in
dec
xor
pop
shlb
lahf
ret
loopne
push
push
dec
in
add
push
cld
call
idivl
movhps
andl
mov
fdivs
add
scas
xor
xor
cmc
cmpsb
dec
popa
and
aam
jo
inc
cmp
imul
movsl
mov
push
xchg
adc
stos
adc
mov
mov
pop
dec
test
dec
mov
in
iret
test
dec
test
and
aad
push
cmp
insb
movsl
test
xchg
je
xor
pusha
sub
lahf
jl
lock
and
add
in
insl
pushf
stos
mov
push
sbb
in
push
sub
xor
jmp
sbb
sahf
xchg
in
test
test
insb
enter
call
jo
inc
std
add
mov
add
xlat
adc
xor
lahf
jp
adc
and
mov
push
dec
cmp
dec
aas
nop
sar
cltd
push
sub
dec
fs
orl
xor
pop
lock
jmp
pop
sbb
daa
cmp
ja
cmp
fdivp
pop
test
lcall
push
pop
sub
mov
xor
fucom
aas
xorb
inc
push
sub
jae
enter
rorb
test
jae
sbb
jg
sub
jp
cmp
pop
in
jle
pop
fldcw
jle
lock
adc
pop
or
lea
roll
mov
mov
jns
into
mov
imul
cmp
mov
test
sbb
mov
cwtl
jl
das
xlat
and
lahf
mov
or
pop
adc
dec
or
jmp
or
and
stos
and
xchg
daa
mov
adc
iret
mov
mov
inc
test
pop
insl
push
inc
nop
fwait
cld
cmp
lret
push
ja
xlat
push
clc
aas
sub
mov
xchg
inc
add
pushf
add
push
push
inc
jmp
popf
pop
cwtl
cmp
test
out
or
loope
adc
shrb
aad
add
xor
sbb
inc
stos
dec
rcl
xchg
cmpsb
pop
js
mov
ljmp
or
fadds
loopne
shl
mov
or
mov
nop
into
stos
cmp
pop
cli
cmp
lret
sbb
aam
hlt
cmp
sbb
sahf
in
mov
and
xchg
sbbb
xchg
adc
into
mov
ljmp
and
cwtl
daa
jo
loope
pop
test
dec
push
jo
jl
std
xor
jp
mov
adc
inc
xorl
cmp
mov
or
bound
mov
cmpsb
mov
arpl
lret
sbb
aas
cld
mov
cmp
ja
nop
inc
and
incb
adc
add
insl
notb
add
adc
push
push
js
notl
lcall
add
sbb
inc
and
add
mov
adc
sbb
lock
inc
jle
sbb
aaa
sbbl
repz
sbb
mov
cld
mov
pop
or
mov
push
xlat
xlat
sbb
mov
adc
add
sub
fisubs
out
js
pop
fisubrs
or
cs
mov
into
add
and
cld
hlt
xor
scas
repz
outsl
xor
jo
mov
sub
sbb
mov
stos
pop
fisttpl
loopne
xchg
xor
adc
repz
xor
cli
push
out
mov
loop
add
rcl
mov
outsl
add
xchg
daa
xlat
jnp
cltd
add
dec
loopne
call
aad
jl
add
or
in
test
pop
adc
insl
sub
and
andl
out
add
loopne
mov
lods
std
subb
test
loope
push
dec
sbb
dec
push
add
jmp
insl
arpl
clc
inc
xchg
faddl
mov
scas
mov
jg
out
loope
xchg
mov
sub
adcb
stc
subl
add
es
push
daa
icebp
xchg
lcall
add
mov
icebp
imul
dec
mov
jecxz
pop
mov
outsb
xchg
mov
add
cmp
jae
jno
ljmp
adc
mov
adc
cmpsl
fsubs
or
jo
lock
andb
shlb
js
or
inc
cmp
cmp
adc
or
jbe
lcall
repnz
sub
sbb
adc
add
mov
add
lock
mov
es
bound
xchg
das
mov
hlt
or
sub
fcompl
push
aas
xchg
das
in
and
mov
popa
aam
enter
sbb
mov
in
cmp
inc
arpl
jns
leave
pop
pop
xchg
pop
cmp
movsl
out
fildl
jmp
repnz
push
pop
mov
fcoms
xor
inc
pop
jne
xchg
add
mov
inc
adc
and
and
test
adc
xor
shr
xchg
jne
or
cmpsl
fadd
addr16
adc
dec
inc
fucompp
add
js
xchg
add
in
pop
lahf
add
mull
stos
addl
jbe
add
cltd
lcall
test
adc
pop
sbb
inc
add
fadd
sub
adc
or
sub
jmp
push
aam
in
dec
int3
and
xchg
jle
jecxz
movsl
cli
inc
in
dec
fildll
push
ljmp
mov
sbb
in
xor
mov
push
sub
mov
and
mov
js
push
std
lock
sbb
or
xchg
xor
jnp
sbb
test
mov
cmp
mov
mov
sbb
or
js
ss
incl
inc
sbb
add
inc
adc
jmp
inc
xor
sbb
rol
cltd
sbb
into
lea
fstpl
testb
sbb
mov
inc
jae
push
xchg
call
das
rolb
mov
xchg
mov
fldenv
xor
mov
cmpsl
fs
pushf
inc
or
and
jo
add
dec
adc
ljmp
inc
int
pop
lock
push
incl
into
push
fdivr
call
push
xchg
adc
push
push
outsl
push
push
or
push
call
ret
cmpsl
lods
ret
or
xlat
adc
mov
xchg
or
push
add
mov
lcall
not
pop
mov
dec
xor
js
roll
or
xor
add
mov
jns
out
loop
inc
insb
enter
fisubl
fwait
push
or
adc
adc
mov
cld
call
sub
fldl
fsubrs
pop
inc
cs
cmpl
sbb
mov
add
inc
or
lods
mov
mov
lds
movsl
divl
fiadds
ror
inc
and
testl
loopne
push
xchg
clc
sbb
mov
daa
or
mov
cs
cli
ret
push
lret
lcall
jno
inc
add
push
xor
shrb
push
dec
dec
pop
js
xchg
sub
or
dec
xor
jecxz
jnp
punpcklbw
push
test
rorb
hlt
xchg
adc
das
add
mov
xor
ret
sbb
xor
mov
mov
cmp
outsb
stos
inc
jne
push
mov
sub
mov
pop
mov
or
out
stos
jl
jmp
inc
in
cmp
stc
mov
popf
sub
add
and
rolb
int3
ljmp
inc
sbb
sub
xchg
pop
popa
cmpsb
flds
inc
test
insb
add
sbb
out
shl
xchg
jecxz
data16
arpl
mov
fidivs
test
imul
jae
in
pop
dec
adc
jge
pop
dec
jne
lock
adc
jle
ja
aaa
jb
xor
imul
or
pop
push
add
ffreep
xor
cmc
subb
sbb
mov
mov
aad
xor
add
jae
movsb
pop
xor
lock
cmp
xchg
add
pop
mov
std
push
outsb
outsb
xor
lahf
add
ja
mov
pop
outsb
add
inc
pushf
fidivrs
or
nop
rcll
xchg
adc
adc
or
adc
push
dec
loope
add
js
sbb
imul
dec
stos
push
jge
loopne
pop
dec
push
jle,pn
xor
jno
and
and
and
das
dec
repnz
jbe
pop
add
daa
out
inc
jle
jmp
push
sbb
sti
jno
rcr
dec
xchg
decl
and
sbb
dec
sub
mov
and
mov
mov
out
adc
ret
mov
sbb
push
cmp
jne
aam
dec
inc
sti
repz
filds
jmp
or
xchg
cs
sbb
push
je
cli
and
jl
pop
pop
or
cmpb
pop
test
dec
mov
sub
pop
cmpb
mov
cmc
fisubl
sbb
je
dec
mov
sub
inc
es
ljmp
imul
insb
adc
inc
loope
inc
push
xchg
cmp
or
test
push
lock
pop
adc
pop
sbb
out
adc
sub
pop
stos
fisubs
jno,pt
shrl
shr
call
aaa
jle
pop
imull
inc
and
mov
jp
mov
or
ret
cltd
mov
lret
lock
lods
scas
and
test
aam
push
xor
adcl
sub
cmc
push
sub
aad
into
sub
dec
add
les
pop
and
repnz
data16
dec
les
mov
jns
dec
push
mov
cmp
adcl
lahf
dec
inc
push
push
dec
mov
sub
inc
inc
cld
or
add
or
mov
ja
sbb
test
sbb
sub
out
jecxz
fdivrs
orl
pop
jo
mov
fnsave
shrl
sbb
lods
pop
mov
pop
fld
mov
test
inc
xchg
out
loope
cltd
loope
push
adc
inc
mov
scas
or
adc
lock
les
mov
push
jmp
nop
test
sbb
sbb
iret
push
je
ljmp
or
mov
jns
ja
test
sub
jmp
ljmp
xchg
clc
and
mov
mov
add
sbb
sbb
jo
xchg
push
cmp
adc
adc
inc
add
ret
push
cmp
das
in
mov
jb
xor
add
mov
shl
jmp
sub
xchg
add
mov
mov
add
stos
add
xchg
fcomp
sbb
fcoml
adc
ja
stc
sbb
sub
das
loope
mov
push
aam
inc
add
bound
push
inc
and
ljmp
call
loopne
enter
cmp
jae
and
adc
inc
or
mov
pop
or
and
mov
aam
test
fdivrs
sub
mov
rorb
cltd
inc
sub
xor
push
roll
push
cmp
scas
loope
sub
xchg
js
scas
lret
roll
or
imul
inc
mov
addl
or
lret
pop
inc
arpl
jmp
out
jne
mov
add
scas
repz
inc
xchg
pop
aas
and
icebp
cmp
mov
stc
stc
bound
xchg
add
cmp
inc
andl
sbb
add
arpl
decl
mov
scas
clc
push
imul
loopne
sub
push
push
add
rolb
imul
ds
add
cmp
lods
jl
scas
push
movsl
les
les
divb
repz
and
fwait
pop
lahf
xor
icebp
mov
xorb
inc
adcl
clc
outsl
aam
xor
movb
pop
arpl
jge
xor
pop
jmp
adc
loopne
ret
sahf
mov
and
fdivrs
adc
sbb
jle
hlt
jmp
and
inc
add
out
sub
fwait
popa
mov
lcall
adcl
cmp
sub
in
or
sub
cmp
clts
pop
sub
mov
ret
subl
test
sahf
shrb
add
push
jmp
add
shlb
jae
cmp
inc
fs
add
xchg
push
insb
sbb
dec
inc
lret
pop
sbb
stc
push
ljmp
fisubrl
dec
fsubs
lods
xor
out
aam
imul
push
xlat
add
dec
loop
cmp
inc
mov
or
sub
mov
adc
pop
push
mov
or
jbe
xor
fisttpll
stos
or
nop
mov
push
sbb
push
xor
jle
ret
cmc
sub
cli
push
bound
add
test
push
lret
sub
aad
mov
shlb
pop
in
mov
pop
mov
sar
out
mov
push
sbbb
inc
push
jb
test
lea
mov
and
jmp
test
aad
nop
pop
mov
movsl
fbld
mov
push
notb
sbb
jno
cmp
loop
rolb
push
lea
jecxz
rcrb
and
cmp
shrb
and
adc
jns
jo
adc
mov
aas
les
xlat
gs
int3
aad
aaa
xchg
inc
jb
jae
inc
mov
test
or
cmp
les
loop
out
in
cli
or
dec
sahf
popf
or
lea
jne
jle
jecxz
fsubrl
mov
cmp
jne
mov
jp
sbb
xor
push
mov
int
lock
add
loope
add
push
lcall
pop
clc
adc
xor
shlb
out
mov
inc
lcall
aam
aad
dec
lcall
jno
inc
loope
rolb
sbb
mov
xchg
push
mov
in
inc
push
test
or
jno
in
add
dec
inc
dec
movl
lods
subb
push
xor
xor
call
cmpsl
movsl
add
or
aad
jbe
outsb
icebp
jo
lock
jp
adc
fisubl
addb
ret
mov
rclb
repnz
je
sbb
test
pushf
out
pop
mov
popf
cmp
in
and
jecxz
mov
jne
sub
jg
scas
adc
and
lret
push
sbb
or
sub
push
rol
jns
repz
sub
das
cmp
es
imul
ja
and
pop
add
mov
scas
xchg
lret
clc
in
jbe
nop
imul
les
push
ret
outsl
loope
in
popa
push
dec
pop
pop
bound
inc
add
rcrl
add
xor
add
adc
cs
inc
mov
clc
xchg
push
mov
fsubs
add
add
outsl
adc
shlb
mov
jle
mov
mov
rcrb
sbb
and
loop
mov
jae
xchg
push
inc
pop
pusha
add
xchg
sbb
dec
hlt
fldcw
lea
lret
loope
add
adc
mov
mov
roll
int
jne
das
sar
das
mov
dec
jle
add
sbb
scas
xchg
jecxz
sub
adc
or
aas
mov
jmp
push
das
in
inc
xchg
cmp
rcl
mov
push
inc
add
adc
enter
adc
adc
test
in
add
or
test
movsl
aaa
repz
das
mov
shlb
pop
xchg
data16
add
or
add
mov
jg
jmp
xchg
sbb
lcall
xchg
inc
xchg
xor
pusha
mov
sub
lret
loope
sbb
insl
dec
lea
bound
mov
movsb
or
sub
mov
lds
add
jg
dec
mov
cmp
cmpb
jne,pt
pop
inc
pop
aad
mov
mov
popa
and
add
dec
test
xchg
adc
sub
mov
sbb
and
lea
and
add
stos
adc
add
pop
or
mov
ret
or
add
sbb
ja
test
adc
loopne,pt
popf
roll
mov
pop
sub
pop
pop
sbb
mov
cltd
sub
inc
xor
fwait
insl
fldt
sbb
xor
add
stc
leave
ret
or
inc
xor
std
or
mov
xchg
adc
dec
call
sahf
jmp
mov
arpl
ljmp
xor
inc
jmp
or
addb
xor
push
fnsave
add
push
dec
in
jne
andl
gs
enter
daa
inc
jecxz
cwtl
cmp
cmp
mov
xor
in
cmp
mulb
cmp
dec
xor
aaa
pop
aas
in
mov
lods
in
hlt
adc
mov
add
dec
in
xor
pop
pfrcpit1
icebp
dec
ljmp
shll
mov
or
cmc
pusha
xor
add
insl
add
mov
mov
fimuls
add
xor
mov
popa
add
pop
xchg
and
stos
or
jl
and
adc
add
ss
or
out
cld
call
jne
or
cs
sub
ss
push
orl
call
cmp
cmp
xor
add
add
add
pop
pusha
and
inc
fcmovnbe
movl
or
pop
outsb
loope
add
aas
add
xor
clc
xor
fdivrs
mov
sub
xchg
xchg
dec
and
daa
or
flds
lods
mov
fsubs
out
or
mov
push
inc
push
iret
inc
cli
add
clc
add
pop
and
rorb
add
in
data16
pop
jns
fsub
add
xor
sbbl
or
mov
and
cs
cmp
xlat
lret
sbb
lcall
loop
jp
mov
ret
dec
aas
inc
in
ss
repnz
xor
ficompl
pop
inc
fildll
arpl
or
adc
movsl
push
int3
lcall
inc
prefetchwt1
jne
insl
cwtl
sbb
cmp
daa
jno
xor
adc
jb
mov
imul
inc
es
or
mov
bound
std
jae
fdiv
add
push
sbb
or
cmp
mov
pop
cmp
enter
mov
add
in
push
loope
sbb
cmp
mov
ss
int3
jne
push
lret
pop
jno
push
dec
cltd
loopne
cld
mov
add
lret
xor
jl
test
pushf
ljmp
movsl
add
inc
inc
lcall
xchg
push
and
mov
mov
xor
adc
cmp
fiadds
fwait
cmp
call
enter
lds
and
enter
mov
mov
popa
cwtl
adc
or
iret
and
push
mov
mov
push
cmovp
jecxz
cmp
sarb
popa
test
cmp
mov
out
jbe
rcll
xchg
pop
sbb
insb
mov
mov
pusha
jp
add
push
loopne
xorb
fcompl
push
jmp
or
xchg
mov
clc
cmpb
add
mov
jne
ficomps
icebp
xor
in
cmp
ss
movaps
xor
ret
mov
lret
inc
adc
push
pop
sub
mov
add
das
das
sbb
rorb
adc
jp
pop
add
andl
sbb
xor
inc
dec
inc
xor
lret
or
or
push
xchg
adc
mov
ret
jo
mov
and
xchg
dec
adc
incl
imul
add
and
inc
shll
and
fs
js
shl
cmp
outsb
dec
ljmp
aam
icebp
fs
enter
popa
add
cmp
cmp
pusha
and
testb
dec
pop
dec
xchg
enter
jns
aam
or
cmp
pop
fcomps
inc
mov
push
lock
and
bound
out
enter
js
pushf
ret
adc
shlb
mov
adc
call
inc
mull
out
sbb
je
push
hlt
test
mov
add
pushf
fisubrl
or
cmpb
jmp
xchg
xorb
xchg
daa
packsswb
stc
repz
call
enter
stos
push
xor
pop
jp
cmp
jne
sbb
add
dec
mov
or
mov
mov
xor
roll
aam
cmp
or
or
punpckhbw
pop
xchg
push
and
cmpsb
xchg
push
push
jns
decb
aam
les
jns
repnz
test
sbb
mov
pop
cmpb
call
xor
adc
imul
subl
lock
movsl
inc
arpl
xor
faddp
mov
out
fucomi
repz
mov
add
sub
aam
jnp
into
sbb
xchg
mov
sbb
test
rolw
addr16
nop
fnstcw
dec
hlt
sub
add
push
mov
xor
add
fiadds
jnp
ret
test
xchg
jmp
das
xchg
jg
aam
cld
xor
or
or
sbb
ficompl
sub
push
call
movsb
or
push
mov
sub
inc
cltd
jo
test
adc
xor
pop
sbb
loopne
in
stc
rclb
enter
js
xor
mov
clc
add
or
daa
xchg
push
mov
cmp
or
ds
int3
cwtl
mov
rclb
ret
aam
cmpsb
shlb
aam
das
dec
loop
fbstp
sub
inc
add
sub
add
xor
inc
ds
sbb
xor
sbb
inc
pop
jp
add
into
mov
mov
jp
dec
mov
and
lea
push
mov
xor
jo
stos
add
mov
sub
xlat
shl
sub
fdivl
sbbl
sbb
sbb
sub
pop
sbb
inc
jb
les
mov
repnz
or
adc
bound
push
loopne
cmpsb
enter
les
jmp
mov
cwtl
loop
or
shll
shr
jg
sbb
cltd
je
mov
loopne
cmp
cltd
jmp
ss
sub
data16
adc
mov
push
push
ret
jecxz
fldcw
jnp
cld
pop
add
sub
mov
sbb
daa
push
adc
icebp
test
loopne
add
out
lods
daa
out
sahf
sub
sbbl
decb
je
add
xor
dec
int
loopne
or
cmp
ljmp
in
add
addb
mov
inc
call
xchg
push
mov
or
and
in
pop
sbb
xor
mov
insb
add
ss
bound
jp
iret
shr
xchg
int
jge
cwtl
into
pushw
pop
fidivs
dec
call
pushf
xchg
pop
push
cmc
push
sbbl
clc
xor
pusha
xor
cmp
ss
sub
les
loopne
rcll
mov
in
inc
fldl2t
inc
aas
loope
sub
xor
or
mov
pop
in
xor
sub
dec
test
push
cwtl
fdiv
jnp
jo
jo
mov
mov
dec
mov
mov
ret
insb
pop
sbb
sub
sub
adc
add
jecxz,pn
fdivr
sti
dec
jb
and
andb
push
imul
push
cmp
xchg
mov
loop
je
cmp
loopne
push
aas
sub
cmp
dec
das
sbb
jecxz
adc
xor
aad
xchg
push
jp
sub
xchg
int
arpl
xchg
push
sub
mov
cmp
pop
xor
scas
push
test
fsubr
mov
adc
add
adc
jb
clc
inc
xor
inc
and
inc
add
dec
xor
lock
pop
push
insl
jo
mov
mov
pop
mov
pop
ds
jp
cld
adc
adc
sbb
and
push
adc
fneni(8087
adc
hlt
mov
fadds
imul
cmp
out
sub
pop
clc
xchg
add
sahf
inc
pop
mov
call
int3
fdiv
out
and
inc
adc
pop
dec
jo
inc
add
insb
jp
push
ss
xor
pop
loopne
hlt
adc
xor
lock
loopne
repnz
lret
inc
rclb
dec
jmp
call
in
repz
imull
pop
imul
xor
call
inc
rolb
adc
xchg
mov
push
call
mov
inc
xlat
out
rcrl
insl
push
push
shll
loopne
clc
dec
pop
loope
lock
add
push
outsl
mov
jg
out
inc
xlat
in
push
cmp
js
push
inc
mov
mov
mov
js
loope
int
mov
push
in
xchg
loope
or
pop
mov
xor
jmp
dec
mov
popa
xchg
mov
scas
movsb
cmp
add
jg
hlt
mov
shl
mov
shl
ds
jo
dec
and
add
jg
cmpsl
xchg
rclb
out
mov
ret
lock
clc
call
jp
jge
psrad
fsubrp
stos
aaa
clc
sbb
xchg
iret
test
lret
mov
test
mov
xor
mov
inc
mov
int3
jae
sub
sub
out
inc
es
add
jae
inc
stos
leave
lret
push
lea
mov
mov
jmp
mov
xchg
ret
or
rclb
push
lea
xor
lret
sbb
lahf
adc
jmp
ja
and
and
aaa
sar
loopne
loope
adc
addb
jne
mov
jge
push
inc
pop
inc
mov
cli
cwtl
cmp
xor
xor
sub
push
roll
and
ljmp
aad
cvttps2pi
les
test
arpl
xorl
push
movsl
mov
push
inc
std
pop
rolb
outsb
jp
pop
push
lret
lock
aas
pop
sti
jmp
clc
cmp
adc
cwtl
incl
cmp
and
decl
xor
stos
les
and
cmp
out
or
addb
sbb
inc
lds
mov
lcall
fdivrl
jle
fnstenv
or
adc
cs
outsl
lods
mov
subl
ret
les
cmp
jp
faddl
ret
push
push
add
adc
xchg
add
jl
test
ret
shlb
xor
jnp
add
shll
inc
and
data16
sbb
in
xor
xchg
hlt
daa
push
shl
mov
aas
fimull
es
outsl
cmp
or
dec
cmpsl
add
xor
clc
rcll
and
aas
test
fildl
test
insb
call
mov
inc
fcos
push
push
sbb
xor
jl
aas
jne
xchg
dec
cmp
pop
adc
add
sti
mov
push
or
sub
push
or
or
xchg
push
adc
hlt
ret
sbb
jmp
adc
adc
dec
in
lret
scas
xchg
fidivs
nop
inc
sbb
roll
test
xorl
icebp
adc
push
repnz
and
mov
xchg
ja
gs
push
ficoms
sbb
sbb
pop
add
daa
cmp
sti
ret
sti
sbb
sbb
xchg
dec
mov
sbb
lea
dec
sbb
pushf
mov
in
pushf
and
test
clc
or
and
sub
cmpl
sbb
pusha
ljmp
outsl
push
cmp
sbb
add
test
rclb
push
xchg
mov
adc
add
cld
ret
std
lea
adc
inc
jmp
out
dec
xchg
dec
adc
inc
ret
aaa
in
sub
push
lahf
xchg
leave
repz
inc
test
or
push
mov
repz
leave
mov
xor
jmp
mov
xor
push
nop
test
hlt
sub
lock
insb
jp
fdiv
cmp
popl
adc
dec
add
int
int
adc
add
and
cs
mov
ds
xor
sub
movsl
jmp
push
js
sub
pushf
popa
xor
xor
adcb
mov
imul
sar
mov
outsl
jge
jg
or
push
in
mov
adc
or
adc
loopne
mov
lods
in
out
pop
loop
ret
or
adc
popf
adc
add
and
and
mov
sahf
push
out
pusha
or
inc
sbb
addl
popf
flds
add
adc
jae
mov
lods
ret
int
jg
scas
xchg
cmp
push
out
or
repnz
dec
pop
dec
jl
data16
add
dec
loopne
adc
mov
push
enter
negl
adc
pop
test
sti
int3
fs
jecxz
and
imul
les
mov
movsb
daa
mov
pop
push
cli
cltd
mov
cmp
pop
das
cwtl
inc
out
mov
mov
push
jecxz
inc
test
mov
and
add
jl
sub
into
cmc
ja
mov
adc
xor
enter
sbb
clc
sbb
ljmp
mov
jbe
dec
ret
add
jo
movsl
xor
adc
mov
fcompl
jb
and
pop
lods
sahf
addb
mov
imul
hlt
push
add
xor
loope
cmp
inc
pushf
dec
popa
repnz
or
js
push
push
call
call
idivl
inc
loop
test
enter
jbe
pop
push
flds
mov
ret
mov
jne
push
cmp
fwait
sub
push
test
es
movsb
mov
andl
imul
inc
xor
es
jp
or
adcb
jmp
mov
add
loope
lret
pavgb
pop
daa
cld
ffree
jo
loopne
xchg
leave
pop
sub
adc
add
sbb
call
lret
or
mov
pop
loopne
ret
sbb
stos
pop
enter
mov
and
mov
xor
push
bound
popf
std
icebp
lock
gs
dec
popa
mov
xchg
ficompl
rolb
sbb
scas
movsl
sti
adc
clc
and
fildll
adc
pop
fcoml
xchg
aam
lcall
out
ds
adc
shl
sub
cmp
add
dec
push
xlat
xchg
mov
lods
xchg
or
fsubs
pop
mov
std
or
pop
add
push
adc
inc
adc
fs
add
cmp
xor
popa
inc
jg
inc
test
adc
testb
ret
mov
shr
out
fistps
lock
or
mov
adc
je
or
lahf
mov
and
int
out
leave
pop
sbb
sub
push
push
add
ret
pusha
inc
mov
push
dec
decb
mov
dec
dec
subl
mov
loop
or
push
test
add
loopne
in
pop
and
rcrl
lret
daa
add
rcrl
nop
sbbl
push
pop
in
add
jmp
push
hlt
popl
jne
and
mov
lret
lret
in
cmp
dec
sub
int3
lock
xchg
inc
lret
add
pop
mov
fadds
loopne
cmpsb
adc
xchg
movsb
or
cmp
int
mov
adc
cld
jmp
xlat
sbb
mov
out
jmp
into
test
pop
shlb
out
loopne
ret
daa
inc
jmp
xlat
aaa
dec
add
jne
inc
in
dec
jbe
dec
xchg
adc
jo
test
addl
jno
mov
lock
icebp
ds
and
mov
hlt
push
xor
in
add
sub
sbb
aam
mov
sbb
pop
mov
cmc
pop
iret
add
loope
or
sub
or
nop
shrb
sub
fucomip
add
or
and
gs
cld
cmp
cmp
xor
mov
les
mov
sbb
loop
xor
inc
int
mov
dec
daa
sub
or
mov
loop
dec
cmpsl
enter
les
adc
les
ja
or
bound
movsb
cmp
dec
sub
adc
xor
sbb
push
adc
cmpsl
cmp
iret
cwtl
pop
notl
cmp
popl
adc
pusha
pusha
and
xchg
and
mov
xchg
outsl
lret
adc
daa
pop
xor
test
pop
push
dec
xchg
cmp
rcl
daa
leave
insl
daa
lea
aaa
aaa
cmp
xchg
xchg
add
addl
dec
or
mov
sahf
xchg
shll
outsl
or
testb
iret
jmp
or
mov
jae
or
add
ret
test
in
loope
xor
inc
or
add
inc
fsubrs
add
inc
add
cli
dec
sbb
repz
inc
pusha
or
sbb
pop
mov
nop
xor
lock
push
aad
push
mov
js
aas
dec
sub
cld
or
rcll
sub
cmp
and
adc
int3
cmpsl
cmp
jp
dec
daa
mov
out
mov
fstpt
adc
adc
jge
subl
leave
call
loopne
fwait
dec
je
add
hlt
enter
add
ds
in
lods
or
add
int
lods
xchg
dec
in
xor
jae
mov
sub
fsubrl
add
cmp
or
daa
addl
inc
sub
sarb
out
adc
xlat
pop
mov
stos
add
and
push
or
mov
je
inc
int3
xor
in
sbb
pop
sbbl
jne
and
dec
ret
jecxz
push
fadd
inc
loop
add
mov
mov
pop
lods
or
test
lods
adc
scas
movsl
js
add
jl
pop
loopne
jno
mov
pop
add
aaa
or
int
add
mov
jae
loopne
mov
wrmsr
adc
mov
mov
inc
addb
aam
mov
sub
cmc
lcall
lret
mov
adc
xorb
inc
cmpsb
sub
and
cmpsb
add
mov
ret
jbe
fistpll
push
test
loope
adc
or
and
and
mov
sti
cmp
rorl
mov
int3
adc
out
pop
inc
frstor
out
add
rcrb
and
xchg
lahf
or
call
add
xchg
lock
or
ret
cwtl
jb
xchg
xor
filds
jmp
test
jne
and
sbb
cmp
rol
cmpsl
jmp
xlat
fcmove
jne
pop
push
xorb
std
mov
jl
mov
jge
xlat
mov
pop
jl
or
scas
mov
xor
xorb
cmp
dec
faddl
subps
neg
sti
mov
ret
dec
lock
rclb
xchg
sti
push
sar
push
jns
inc
orl
mov
pop
sbb
jecxz
cmp
dec
dec
and
pusha
sub
cmpsl
aam
mov
sub
xor
cmp
ljmp
pop
xchg
xchg
cltd
mov
mov
adc
mov
inc
jmp
or
in
aas
lock
test
pop
in
mov
scas
xchg
jmp
mov
add
push
insl
adc
xchg
or
sbb
cmp
add
sarb
or
or
xlat
in
or
and
loope
sbb
ret
jnp
xlat
sub
or
dec
mov
lods
filds
push
rolb
sub
dec
dec
in
pop
rcl
andl
daa
loop
shlb
mov
sahf
shl
inc
xchg
adc
clc
mov
inc
scas
scas
arpl
cmp
negl
sarb
dec
aas
enter
push
in
mul
setns
gs
imul
push
lods
mov
sti
mov
mov
add
jo
mov
cmp
adc
scas
push
dec
and
mov
inc
sbb
sbb
aaa
jne
cmp
or
rcr
mov
add
push
adc
push
pusha
mov
jl
les
aaa
cmovg
bswap
bound
add
cmp
push
lahf
add
push
or
jle
xchg
repz
pop
lcall
hlt
int3
adc
mov
inc
jbe
mov
ds
dec
out
push
mov
sbb
push
fsubl
cmp
add
pop
enter
rorl
mov
loope
xor
int3
sbb
in
repz
dec
add
rcl
stos
pop
div
sbb
and
cmp
and
push
in
pop
or
pop
rcrb
dec
rol
jg
loope
push
jecxz
sbb
push
pop
xchg
cmp
and
lock
mov
les
cmp
cmpsb
pop
repnz
mov
adcb
xlat
gs
shl
scas
repz
fisttpl
mov
inc
jb
jg
add
push
push
bound
mov
and
in
popf
outsl
xchg
push
cmc
and
or
sub
add
jmp
into
adcl
pop
pusha
in
aam
loopne
mov
xor
push
mov
add
loopne
adc
sub
ret
cmp
sub
out
inc
leave
add
add
fisubrl
xor
jle
test
and
sbb
pop
or
dec
dec
sbb
push
ljmp
push
cld
dec
out
nop
or
xor
xor
add
inc
scas
pushf
sbb
dec
dec
fdivp
stos
mov
into
adc
lods
and
push
call
adc
jge
mov
scas
shrl
insl
adc
pop
or
pop
pop
cli
aas
push
inc
xor
iret
add
ret
jb
jne
lods
xchg
daa
lods
xchg
arpl
mov
inc
movsl
pop
jp
dec
mov
mov
inc
and
mov
push
fistps
aaa
jmp
mov
rorl
jge
sub
xor
adc
sbb
xor
mov
shrb
loop
xor
dec
push
mov
lods
or
mov
cmpl
sbb
rcrb
adc
adc
fnop
loope
push
pop
stos
cmpsb
fsubrp
enter
adc
adc
test
clc
xchg
inc
mov
lret
xchg
shl
ss
mov
or
fwait
jae
ss
clts
mov
clc
push
add
iret
cmpl
add
xlat
xchg
stos
divl
push
jno
mov
mov
push
movsl
cmp
iret
and
mov
sub
addr16
dec
mov
arpl
clc
add
clc
sbb
cmp
push
repnz
add
mov
loopne
call
jp
or
cmp
aaa
fcom
test
stc
orl
cli
mov
add
xor
ss
pop
test
int
dec
gs
add
pop
jmp
inc
mov
lods
ret
sbb
ja
xor
jne
adcl
aaa
mov
sub
fistpll
push
lods
clc
adc
aam
add
dec
add
push
ja
incb
or
add
mov
clc
rorb
push
and
pushf
inc
cmp
jmp
fadds
mov
je
dec
lock
mov
jge
leave
in
adc
mov
scas
mov
xchg
lret
scas
mov
pop
dec
mov
test
loopne
lock
insb
movsb
jge
jge
sub
pop
loop
dec
sub
jl
je
bound
shrb
movsl
add
pop
adc
dec
jo
adc
push
pop
inc
decb
mov
and
and
mov
adc
cli
mov
pop
jno
fstps
in
cli
icebp
iret
pop
jae
in
jne
rolb
dec
decl
push
mov
or
inc
int3
lcall
mov
vpsadbw
push
mov
jnp
mov
mov
jne
jmp
and
loope
ljmp
enter
xchg
and
push
scas
adc
adc
mov
sub
pop
and
ljmp
sbb
mov
add
shll
popa
jbe
jo
clc
int3
sub
add
test
in
push
jo
jnp
test
fldl
int3
add
add
ret
lock
cld
cmp
sbb
aam
push
call
mov
icebp
push
std
jae
sbb
ret
mov
mov
lods
xchg
loopne
xor
inc
cld
or
leave
ret
xor
pop
or
loope
push
ja
sbb
jne
cli
or
and
dec
sub
sub
std
sbb
pop
test
adc
js
lahf
and
add
das
jp
mov
sbb
push
pop
movsl
lods
mov
stos
repz
nop
mov
mov
push
xchg
sub
clc
adc
fwait
ret
out
inc
cmp
jle
rcll
dec
ret
cli
sub
pop
push
in
in
call
shll
cmp
jmp
add
lock
fistl
adc
push
sub
mov
dec
lds
nop
mov
inc
js
jg
clc
test
fsubr
add
or
push
cmp
and
inc
mov
cmpsl
add
inc
pop
mov
mov
sbb
mov
push
stc
adc
and
mov
dec
out
adc
push
ljmp
pushf
lock
adc
imul
les
lods
pop
mov
lret
and
shrb
iret
dec
shrb
shl
and
and
add
in
add
mov
mull
xchg
add
add
mov
and
enter
xlat
stos
aas
fdivp
test
xchg
mov
jecxz
or
xor
aaa
push
lods
fmuls
outsl
jmp
inc
add
cmp
and
cmpsb
mov
xchg
add
pop
js
and
mov
sbb
inc
or
shll
mov
add
inc
push
icebp
sub
pop
rolb
jbe
adc
adc
es
add
cli
jnp
cmp
inc
or
movsl
push
sub
dec
fs
mov
dec
sbb
pusha
dec
fsubl
push
hlt
adc
ror
fstl
push
push
mov
jg
sbb
testb
out
addl
nop
jbe
ret
cli
or
dec
arpl
mov
sub
and
sti
sub
addr16
lahf
movsl
cmpb
les
repz
add
rcll
mov
mov
loope
jge
int3
int3
dec
pop
hlt
fucomip
fldcw
aaa
jnp
les
lret
fsubs
loopne
arpl
push
mov
pop
in
push
pop
or
ret
loope
insb
in
jnp
shll
sti
test
xlat
xchg
mov
xchg
pop
mov
cmc
sbb
push
sti
sub
mov
gs
xchg
call
add
sti
sub
cmp
cld
fisubrl
fdivl
andb
and
mov
push
push
out
adc
inc
mov
xor
and
mov
xchg
mov
inc
push
popa
mov
push
in
push
inc
cmp
push
call
cmp
out
cmp
in
xor
sub
imul
adc
pop
inc
ffreep
push
push
leave
xor
lods
mov
stos
xlat
icebp
inc
pusha
and
xchg
mov
pop
add
icebp
cs
push
loope
jmp
mov
dec
ss
insb
mov
add
bound
sbb
ljmp
xchg
sub
fmuls
icebp
dec
and
dec
shll
adc
sub
push
addr16
jmp
adc
sub
mov
jnp
sub
in
add
cmpsl
xchg
inc
cmp
mov
mov
popf
add
in
divl
cmpsl
jp
mov
xchg
cmp
adc
int3
into
mov
push
fwait
or
or
mov
xchg
shll
xorb
or
popa
dec
lods
ss
sub
sbb
packuswb
and
sbb
andb
loopne
sbb
leave
sub
xor
xor
push
pop
orb
sub
xchg
adc
mov
mov
sbb
xlat
sbb
jg
ss
shlb
cmp
pop
mov
add
call
shll
push
clc
cmp
dec
aam
mov
mov
lock
dec
cmp
nop
add
or
cld
xchg
lock
pop
shlb
mov
sub
lock
fcoml
sub
pop
lds
inc
mov
add
out
sub
out
div
int
adc
sbb
mov
pop
movd
sub
mov
movsl
xor
pusha
or
or
imul
lcall
cmp
rcll
shlb
adc
movsl
decb
orb
cmp
scas
lret
rcrb
sbb
mov
pop
or
aas
es
clc
mov
cli
dec
fmul
enter
jg
mov
aas
test
fsubrs
call
adc
mov
cmp
popa
add
mov
loopne
orl
add
mov
pop
jne
mov
orl
fsubrl
or
lods
std
repnz
sbb
pop
outsl
dec
xor
xchg
add
loopne
sbb
sbb
jmp
call
inc
add
fstl
xchg
rol
push
sbb
mov
incb
pushf
iret
xlat
push
lock
xor
call
add
sbbb
in
scas
xchg
inc
rolb
loopne
test
dec
pusha
ret
mov
jmp
xchg
xlat
or
negb
pop
movsl
sub
sub
aam
or
call
fimull
cld
in
xor
dec
sub
or
and
dec
push
ss
jne
sbb
orb
ret
bound
or
or
call
jecxz
imul
loopne
mov
jnp
push
add
and
into
push
cld
jl
add
jge
mov
or
inc
sub
fnstenv
test
add
mov
cmp
leave
pop
loope
add
aaa
aaa
adc
add
add
sbb
mov
xlat
inc
mov
sub
adc
mov
in
orb
repz
out
xchg
out
jne
jnp
mov
jmp
sbb
outsl
inc
mov
mov
sub
inc
jmp
and
push
cmp
fsubr
push
sbb
cmp
les
mov
fcmovnb
jmp
push
push
je
inc
pop
loopne
orl
test
jno
xor
push
push
sub
fiadds
add
and
xchg
movb
push
shrb
mov
or
adc
pushf
sub
cmpsb
sbb
jbe
ljmp
setg
sti
xlat
mov
push
mov
adc
add
cld
int3
fs
cmp
inc
jg
enter
inc
fisubs
rorb
cld
sub
and
mov
sbb
push
add
imul
jge
rcrl
sub
mov
push
arpl
in
es
roll
inc
mov
jno
call
jns
sbb
sbb
sbb
mov
sbb
orl
pushf
sbb
lds
sub
lret
mov
or
or
pop
cmp
xchg
mov
adc
ret
lahf
inc
pop
lea
mov
test
fistl
in
and
das
or
ss
sti
or
xor
push
insl
xchg
sbb
inc
shrb
ret
js
inc
fiadds
hlt
mov
dec
xchg
sub
in
js
dec
add
mov
js
roll
xchg
icebp
push
push
test
sti
and
icebp
pushf
xor
xchg
mov
add
adc
xchg
dec
ja
sub
push
mov
mov
and
shrb
push
in
inc
sbb
or
clc
pushf
leave
push
mov
arpl
int
and
push
into
or
sbb
test
cmp
popa
xor
stc
jmp
es
pop
pop
clc
and
sbb
inc
cld
xchg
in
sbb
pop
popa
or
push
inc
loope
or
inc
xor
cmp
add
scas
fdivl
or
add
pusha
shll
jne
push
in
test
stc
jg
sbb
leave
mov
lret
mov
or
lahf
outsb
lock
lock
ret
loopne
push
mov
push
pusha
mov
in
mov
add
push
loope
clc
adc
ficoms
ja
clc
loop
sarb
test
lret
add
negb
ds
and
push
or
call
add
vmovntpd
xchg
out
mov
lahf
mov
jmp
fisubl
and
inc
add
mov
fs
adc
cmp
lcall
rclb
inc
add
bound
xorl
or
pop
sub
add
add
pop
je
jnp
add
push
mov
icebp
mov
sbb
sub
lods
mov
pop
ljmp
pop
mov
mov
in
jmp
test
addl
pop
or
add
adc
sub
adcl
scas
mov
mulps
sbb
sbb
push
add
inc
cld
push
scas
out
jae
push
pop
mov
jge
add
mov
fsubs
adc
xor
or
push
inc
mov
scas
mov
cmpsl
cld
loop
pop
xchg
testl
loopne
mov
inc
andl
sahf
add
ror
loope
lcallw
mov
sub
jl
push
add
aas
rcrb
test
add
fildll
rcll
dec
mov
in
dec
fsubrs
shll
cli
adc
pop
ret
and
test
mov
jecxz
addb
xchg
cld
dec
cld
pcmpgtb
xchg
arpl
ja
xor
ds
in
sub
dec
sbb
lcall
jo
and
and
or
popa
rol
sbb
es
gs
xor
dec
pop
cmpsl
push
int
pop
add
dec
adc
out
inc
ret
jne
xchg
lahf
les
ret
hlt
dec
adc
add
pop
popa
int3
call
adc
shll
mov
or
xchg
imul
pop
xor
sbb
adc
mov
cmpsb
jb
hlt
mov
jmp
add
inc
dec
adc
adc
loopne
test
pop
jmp
pop
lea
movsl
pop
mov
imul
xchg
lock
ss
bound
sub
sbb
adc
adc
mov
adc
daa
test
and
jmp
adc
stc
xchg
call
sbb
sbb
rcrl
mov
inc
or
mov
push
mov
push
pop
cmp
mov
push
adc
add
ret
sub
adc
lret
sub
add
add
jmp
daa
mov
pop
fisubrl
push
adc
cld
pop
xchg
ret
inc
and
lock
sbb
in
int3
mov
bound
xor
ja
mov
fiaddl
xor
enter
or
mov
psubd
jecxz
cltd
add
cld
andl
fisubs
test
ljmp
in
outsb
lea
sbb
out
and
cmpsb
add
in
aam
push
xor
mov
insl
mov
out
mov
in
int3
mov
sbb
fs
faddl
or
push
mov
push
jmp
stos
jne
push
xchg
rcrb
loope
sbb
loopne
adcb
mov
imul
add
sub
cmovl
xchg
adc
sub
xor
mov
dec
push
mov
mov
xor
dec
and
lcall
or
hlt
add
dec
inc
jmp
mov
mov
fs
cs
pop
pop
push
in
subb
and
pusha
mov
rolb
ret
push
push
push
sbb
jle
jbe
movsl
or
adc
or
into
push
and
pop
and
xor
push
test
add
push
adc
popa
daa
outsb
cltd
call
add
dec
push
ret
adc
andb
pop
shll
push
lock
add
test
jbe
mov
add
sub
jl
in
insl
fstl
lods
lock
and
fdivl
movb
icebp
push
inc
ret
js
or
cmp
add
xchg
fs
fidivrl
jmp
daa
test
sbb
je
fwait
mov
lret
test
fmull
add
jns
and
adc
push
adc
xor
outsb
lret
insb
loopne
addr16
adc
adc
adc
rorl
arpl
fdivs
xchg
jge
pop
dec
lods
jmp
stos
pop
adc
mov
or
js
or
arpl
aas
jno
nop
testl
clc
mov
add
sub
push
mov
mov
lods
movsl
addr16
rcll
clc
add
iret
dec
test
dec
add
ljmp
xchg
push
cmpsb
push
pop
cmp
ret
or
fsubrl
jne
jae
test
outsl
push
pop
inc
dec
inc
fsubs
mov
cmp
adc
xchg
xchg
movsl
popa
cmpsl
mov
clc
es
sub
jmp
jge
shll
aam
inc
bound
das
hlt
pop
lods
jmp
or
add
nop
inc
mov
nop
daa
lds
mov
mov
std
in
aam
lock
mov
xchg
es
xchg
xor
popa
insl
and
inc
inc
xchg
pop
sub
movsb
or
es
popa
inc
jl
push
adc
xor
imul
mov
lods
xlat
sub
or
loope
jmp
xchg
or
mov
cmp
sti
jb
push
cmpsl
pop
pushf
jns
je
sbb
in
xchg
or
ret
int
ja
or
and
add
pop
xor
sub
test
outsl
fstp
subb
add
sbb
mov
pop
and
icebp
jnp
xor
cmp
or
sbb
cmp
mov
adc
sub
aam
mov
or
scas
adc
add
mov
notl
add
in
pop
movsb
mov
sub
lock
dec
stc
add
dec
mov
push
les
jo
cmp
aam
test
mov
repnz
xor
mov
push
or
cmp
inc
push
sub
adc
add
adc
pop
adc
push
push
push
mov
hlt
fistpl
lcall
lahf
das
cltd
or
push
cld
and
cwtl
rolb
push
je
add
insl
xor
push
aad
mov
and
fwait
and
cmpsl
rcrb
sbb
test
or
mov
and
add
test
pop
sbb
loope
push
shl
scas
sub
xor
inc
ret
sub
rolb
mov
popa
xor
mov
outsl
mov
xchg
in
or
pop
sbb
jge
jnp
inc
mov
stc
rol
adc
sub
inc
ret
rcrb
stos
pop
add
loope
pop
add
insb
xor
daa
out
rclb
add
mov
sub
aam
inc
pop
dec
shrb
sti
jg
dec
xchg
add
lahf
inc
mov
jno
mov
into
jo
outsl
mov
popa
mov
sbb
push
xor
or
cmc
ror
and
pop
ljmp
push
push
dec
std
addl
mov
xchg
popa
enter
jge
mov
add
loope
arpl
daa
icebp
dec
jge
adc
or
and
push
pop
mov
stos
push
ret
pop
loope
add
and
mov
rcl
incl
out
clc
roll
add
cmp
sbb
push
into
mov
xchg
sub
shrb
clc
clc
sarb
and
jmp
dec
cmc
xor
inc
push
xchg
dec
dec
dec
fnstcw
pusha
sub
xchg
test
add
lret
sbb
adc
enter
out
add
ss
mov
daa
ficoms
cmp
fistps
add
push
xlat
pushf
insl
shrl
inc
pushf
sarl
push
inc
roll
faddl
push
inc
cs
add
cs
and
add
clc
inc
xlat
sub
mov
and
sti
sbb
inc
pop
sbb
jle
test
out
adc
and
ds
shlb
pusha
push
das
pcmpeqb
inc
push
sbbb
sahf
dec
pop
dec
dec
scas
mov
pop
lods
fsubrs
insb
xchg
mov
pop
xor
shrl
or
add
fisubrl
addb
pop
icebp
bound
rcr
outsb
imul
cmp
xor
xor
jns
inc
ret
rol
mov
pop
ljmp
add
cmp
test
movsb
sbb
mov
adc
clc
clc
jns
cmp
xor
leave
ja
in
adc
push
lods
inc
xchg
daa
pop
cmp
cmp
out
mov
inc
sbb
mov
push
jp
dec
and
shrb
sub
xchg
fdivl
jnp
test
inc
mov
mov
xor
sbb
mov
mov
stos
sbb
xchg
mov
pop
sbb
nop
lahf
shlb
ljmp
pop
js
popf
sub
pop
test
rolb
stos
push
adc
push
call
inc
jl
clc
adc
sbb
or
and
and
lea
insb
lods
push
addr16
loopne
pop
xor
inc
mov
mov
adc
cmp
mov
dec
cmc
mov
addl
sub
xchg
out
es
xor
mov
pop
aas
faddp
in
es
ja
jae
adc
imul
js
jg
mov
rcr
mov
icebp
dec
add
scas
subb
cli
add
aam
gs
mov
xchg
push
call
nop
mov
ror
dec
loope
lret
or
clc
inc
add
insb
sarl
push
sbb
loopne
adc
xorl
xchg
hlt
and
jno
pop
push
cmp
hlt
or
fadds
sub
inc
loopne
in
sub
pop
flds
fbld
test
adc
dec
mov
rol
mov
xor
cld
aaa
xor
pop
lahf
ds
pushf
cmp
inc
lods
push
pop
dec
sub
or
pop
xchg
push
outsl
push
aaa
mov
jmp
clc
mov
pop
add
lret
mov
dec
xor
rclb
outsl
fadds
xbegin
xlat
add
xchg
mov
aas
dec
xchg
add
adc
sub
adc
and
and
jp
jbe
jmp
icebp
adc
addb
or
push
lock
lahf
mov
xor
push
pop
jp
jnp
xor
stos
clc
insb
and
sbb
aam
in
fistpll
adc
push
sbb
cmc
sub
or
inc
sbb
mov
jne
loopne
lret
in
and
pushf
int3
adc
test
adc
movsb
inc
inc
push
fmuls
dec
dec
popa
xor
cmp
inc
pop
pop
in
faddl
out
add
insb
push
test
push
cs
out
test
ljmp
inc
ss
jns
movsb
lcall
mov
jno
data16
xchg
outsb
clc
and
jbe
add
push
jmp
mov
adc
arpl
xor
cmpsl
lret
jmp
fcoms
or
je
pop
out
and
ljmp
ret
js
mov
xor
std
lds
mov
or
arpl
and
cmpsl
rolb
mov
push
gs
push
pop
mov
xchg
xchg
add
aaa
fdiv
jb
xor
stos
cltd
and
mov
cs
xor
ret
jb
jle
sbb
dec
cmp
xchg
xor
aas
add
jnp
stos
out
jnp
sub
inc
push
dec
jo
add
cmpsl
cmp
add
cwtl
rcrl
add
push
mov
movsl
daa
outsl
hlt
outsl
push
sarl
aas
pop
jnp
pop
pop
push
push
pop
cli
subl
inc
push
push
enter
mov
push
mov
adc
adc
cmpsl
xchg
test
out
mov
jmp
sahf
rcrl
test
sub
daa
add
scas
and
push
movsl
lock
mov
mov
movsl
pusha
pop
hlt
xor
xor
mov
sbb
daa
mov
mov
pushf
ds
push
inc
dec
data16
jo
pushf
aaa
cmp
shll
in
adc
add
mov
sub
sub
pushf
jbe
cmp
mov
cmpsb
inc
and
loopne
sbb
inc
adc
lock
movsl
movsl
jle
dec
dec
sbb
scas
sub
stos
inc
fildl
lds
fildll
test
fs
add
aad
inc
dec
loopne
js
add
push
sar
cmp
sub
stos
jns
pop
nop
rcrl
movb
mov
fcomip
inc
add
dec
in
mov
bswap
imul
les
pmulhw
sub
or
mov
not
jo
push
aam
pop
push
pop
mov
jle
jo
popa
adc
sbb
lods
hlt
out
call
mov
mov
and
es
cmpsb
or
or
orl
and
and
lea
xchg
int3
fisubrl
aad
sub
sbb
test
mov
or
into
andb
add
xchg
or
adc
mov
sti
aaa
xchg
mov
rolb
mov
cmp
imul
ljmp
shlb
loopne
test
lret
test
sbb
add
loope
and
aas
data16
dec
lea
sahf
std
adc
inc
sub
adc
cli
shl
out
mov
xchg
lret
movsb
push
add
enter
mov
movlps
jae
je
pop
jo
push
sub
inc
mov
std
incb
sar
add
mov
dec
bound
add
stos
in
inc
sbb
dec
mov
mov
mov
mov
sub
and
addr16
fldenv
dec
mov
sarb
js
pop
cltd
sub
test
jp
insl
int
jp
push
mov
clc
xchg
dec
add
xchg
aam
call
sbb
jg
dec
test
les
dec
pusha
repnz
inc
cmp
jmp
pop
mov
fmull
sub
adc
pop
mov
inc
dec
out
xlat
aad
or
imul
shlb
dec
dec
movsb
pushf
loop
imul
jnp
imul
inc
dec
cmpsb
push
inc
loop
sbb
dec
shlb
ja
sub
xchg
dec
mov
fwait
outsl
pop
pop
loopne
outsb
add
push
push
pop
and
dec
fisubrs
add
jo
mov
not
inc
jmp
loope
rolb
loop
fsubrs
pop
xlat
flds
cmp
add
jb
dec
mov
jbe
cs
movsb
cmp
ss
mov
pop
inc
lret
jne
inc
and
repz
jne
or
xchg
rcrb
iret
adc
decb
cmp
sbb
lea
xor
push
pop
cmc
add
inc
add
rol
pop
sub
jmp
pusha
mov
pop
icebp
xchg
mov
or
movsl
jne
clc
jp
nop
xor
pop
mov
jge
dec
cld
cld
xchg
inc
cmpsl
mov
stos
pop
xor
lock
sbb
cmc
dec
lock
dec
lods
fbstp
rolb
xor
or
clc
loop
orb
or
jns
mov
xchg
adc
cmp
dec
pusha
mov
mov
out
popa
mov
jbe
lods
xchg
fidivs
xchg
and
add
cmp
sub
pop
lahf
test
cmpsl
xchg
testb
xor
jne
out
and
movsl
rcl
or
cmp
sub
test
push
jmp
inc
dec
clc
adc
add
dec
dec
adc
jns
insb
and
inc
jo
xor
pop
dec
sbbl
xlat
lds
stos
rcrb
shlb
xchg
mov
push
inc
add
imul
in
shl
inc
inc
inc
add
add
sbb
aas
stos
ret
scas
adc
mov
add
add
lock
pop
sbb
cmp
adc
sub
pop
add
fwait
out
out
lods
andl
movsb
fwait
push
loopne
mov
idiv
jge
add
daa
sbb
jo
aad
rol
fs
jl
je
call
add
repz
daa
sbb
cli
inc
adc
push
enter
shll
ret
adc
out
add
ret
jmp
or
adc
ret
jo
pop
push
mov
stc
rolb
or
add
mov
xor
sub
jl
inc
add
pop
loopne
repz
sbb
and
inc
jle
add
push
jmp
dec
stos
cli
imul
ret
push
mov
enter
sbb
aam
out
adc
lock
mov
add
andb
cmp
shlb
sub
mov
dec
cmp
test
mov
lods
shlb
pop
test
xchg
inc
outsl
inc
sub
imul
push
les
lock
icebp
xchg
dec
insl
push
sbb
or
sub
mov
xchg
pop
jmp
cmpb
ret
rcrb
lret
dec
arpl
int
cmpsl
xchg
sbbl
push
push
ror
xchg
fucomi
mov
loope
pop
cld
adc
xor
subb
push
xor
mov
xchg
push
cmp
and
push
inc
test
lret
and
icebp
push
jo
push
adc
sub
mov
cmp
jno
bound
stos
arpl
ret
jns
dec
cmpsl
cmpsl
add
add
rol
cli
add
push
int
cli
les
aam
lcall
or
test
jbe
rcll
or
data16
shl
or
pusha
leave
add
daa
arpl
lds
pop
pop
jmp
test
jb
std
popa
jl
mov
dec
inc
mov
stc
sarb
xor
sub
xor
ret
pop
cmc
dec
adcl
dec
mov
jmp
test
adc
push
pop
cmpsl
shlb
out
sbbb
mov
in
in
inc
pusha
es
add
rorl
xchg
frstor
lea
jecxz
test
xorb
cli
popa
add
dec
xor
cltd
xlat
and
mov
xchg
or
roll
nop
mov
inc
pop
sbb
pop
in
ja
or
inc
insb
shlb
rcl
pop
mov
in
mov
inc
sbb
divl
push
fcomp
xchg
lds
pop
nop
xor
inc
sub
sub
adc
dec
mov
je
or
add
add
jne
xchg
ret
add
mov
outsl
sub
cs
dec
add
add
dec
imul
dec
shll
sub
lock
bound
jmp
and
mov
adc
add
pop
int3
call
repnz
xor
scas
aas
xor
mov
jns
rorl
push
add
dec
push
pop
inc
mov
subb
push
call
roll
negb
in
push
aaa
pop
sbb
add
add
pop
jp
xor
mov
xor
adc
push
add
sub
pop
out
cmp
xor
rol
into
mov
xlat
xchg
add
push
ret
lcall
jns
adc
pop
adc
mov
leave
ret
dec
call
and
jns
xorb
xor
or
push
fcmovnb
ror
inc
ret
mov
dec
rcrl
add
cmp
jl
push
loop
bound
test
lret
test
adc
jecxz
or
and
push
sahf
cmc
inc
adc
add
push
rolb
repz
sub
and
sti
popa
sbb
repz
sbb
sub
cmpsb
aas
add
pop
add
andb
pavgb
jp
iret
fcmovnb
rorl
pop
sbb
mov
xchg
inc
dec
add
das
sbb
xchg
add
pushf
jne
and
xchg
cmp
loop
push
push
inc
dec
call
push
sbb
add
pop
adc
push
xchg
add
es
rolb
clc
out
sbb
enter
add
into
or
lock
mov
filds
mov
hlt
js
sub
cli
adc
sub
and
push
enter
cmp
xchg
jge
ret
mov
add
stos
sub
mov
sub
dec
cmp
adc
cmp
mov
shrl
aam
hlt
xor
out
fs
add
js
push
and
icebp
push
jg
testb
out
pusha
ret
mov
xor
pop
insl
rcrl
sub
mov
movsb
shlb
xor
xchg
and
popa
cltd
ljmp
and
sub
add
cld
add
adc
or
adc
add
xchg
mov
xchg
out
push
mov
dec
aas
lock
mov
fldcw
testl
add
movzwl
or
psubsb
pusha
cld
mov
push
mov
inc
add
in
call
or
jmp
outsb
fs
hlt
mov
cli
aam
sbb
adc
das
aaa
add
clc
and
aaa
aad
lcall
cmpsl
jecxz
add
rol
push
add
inc
ficomps
xor
pushf
pop
out
mov
fbld
popf
mov
fsubr
and
and
mulb
pop
sub
jmp
sbb
ss
sar
cmc
aam
add
add
xchg
xchg
xchg
xor
push
out
mov
sub
mov
insl
or
adc
ror
push
pop
mov
lock
and
mov
js
dec
sti
push
or
pop
cmp
xchg
icebp
adc
inc
jle
int3
movsl
xor
xlat
jbe
bound
adc
sarb
jno
jbe
fstpl
cmp
aad
push
jbe
fadds
pop
mov
or
add
mov
sub
adc
pushf
mov
jp
cld
adc
aaa
pop
mov
lds
lds
sbb
mov
cltd
mov
cs
inc
push
push
in
fisttps
mov
lcall
pop
aas
cmp
push
mov
dec
call
call
jbe
loopne
cmpsl
cmpsb
or
std
push
cmp
xor
test
lock
mov
fisttpll
cli
icebp
push
sub
inc
daa
and
lods
or
adc
push
cs
test
call
or
mov
call
hlt
inc
lcall
pop
push
mov
lds
xchg
call
cld
fsubr
add
xchg
out
adc
add
icebp
dec
fadd
sub
pop
mov
jecxz
inc
or
sub
xor
into
xor
add
into
js
rcr
jno
cmpsl
pop
sub
adc
mov
sbb
mov
pop
add
std
pop
dec
xchg
rclb
lahf
repz
ficoms
faddp
mov
rcrb
outsl
scas
dec
push
sub
mov
out
inc
adc
push
mov
std
dec
test
xor
mov
sbb
out
decl
les
fadd
jp
mov
push
inc
jl
mov
add
enter
push
add
faddl
mov
jl
test
sbb
or
mov
fsts
pop
xor
repz
xor
jg
cmpsl
mov
cmpsl
adc
movsl
xchg
dec
xchg
retw
xor
ja
movsl
push
cmp
push
and
xchg
das
mov
rclb
sbb
sub
jl
fadd
mov
push
mov
adc
stos
pop
or
jl
and
arpl
into
dec
fcom
sbb
and
inc
imul
dec
adc
ret
cmp
jl
inc
push
mov
mov
xchg
sub
testl
hlt
cmp
dec
and
push
add
xchg
scas
imul
sub
mov
push
jne
or
cmc
push
pop
jne
dec
ljmp
inc
push
adc
jp
add
xor
test
out
daa
test
and
test
jp
jns
test
lret
leave
clc
ss
jg
adc
or
add
sub
cmp
iret
or
dec
inc
mov
pusha
sbb
cli
mov
icebp
jne
dec
sbb
loopne
out
in
mov
rclb
pop
push
cmp
sarb
pop
or
popa
loopne
push
or
test
xor
call
sub
mov
xor
cmp
mov
into
sub
push
and
fdivs
loopne
mov
mov
adc
add
pusha
inc
out
test
push
adc
add
dec
loopne
add
repz
das
sbb
shl
jecxz
and
mov
xlat
xchg
jnp
dec
icebp
insl
outsb
adc
dec
icebp
andl
mov
insb
lock
iret
sub
inc
lods
xor
cmp
add
sub
repz
mov
or
pop
cmpb
dec
ffreep
cmpl
xchg
repz
xchg
mov
sub
inc
stos
ss
add
gs
inc
pusha
lds
xchg
addr16
adc
pop
arpl
xor
add
push
jg
jae
push
inc
ficomps
adc
rolb
jl
add
bound
jo
xor
dec
imul
jno
xor
cmp
xchg
ss
mov
push
imul
lcall
loopne
in
sub
aad
sbb
insl
daa
xchg
and
cli
pushf
call
orl
out
sbb
sub
rcrl
push
sub
mull
popf
pop
jbe
out
push
inc
jo
test
jne
mov
bound
inc
sub
fldt
adc
data16
fisubs
cwtl
dec
push
jg
inc
rolb
push
add
lods
lock
mov
adc
push
fcoml
lea
sbb
stos
dec
push
mov
sar
and
mov
ret
ret
or
out
mov
pop
sbb
sbb
add
mov
rcrb
add
jle
adc
pop
inc
add
loope
clc
sub
mov
lock
lods
sub
ds
dec
adc
std
add
add
icebp
adc
clc
mov
xchg
dec
and
js
mov
jmp
jp
and
shll
loope
out
rcr
hlt
xchg
ds
push
divb
loop
mov
pop
pusha
les
int3
cmp
xchg
rorl
cld
out
push
xor
arpl
daa
adc
mov
js
aaa
nop
movswl
adc
and
or
enter
cwtl
bound
cld
pop
add
aaa
loop
or
lods
jb
cmc
std
inc
sbbb
outsb
push
mov
xor
mov
sub
sbb
pop
mov
xor
cmp
xchg
jnp
adc
sub
imul
sub
cmpl
or
movsb
sub
inc
add
shlb
inc
clc
mov
cli
mov
test
inc
jg
dec
sub
scas
xor
or
and
loopne
cs
imul
inc
jge
push
and
clc
aaa
add
xchg
mov
ljmp
xor
and
movsb
aaa
add
mov
lahf
and
addl
or
xor
inc
stos
push
inc
ret
push
popa
ret
out
and
cmp
or
cmpl
out
and
push
adcb
xchg
shrl
sub
sub
stos
cmp
call
test
lds
pop
lods
add
popf
or
adc
iret
and
push
les
pop
push
call
sbb
sbb
pop
sub
dec
cmpsb
mov
adc
xchg
xlat
jg
sbb
inc
xor
js
pop
pop
or
push
adc
mov
cld
rorl
sub
jmp
sub
icebp
lret
cmp
mov
inc
inc
and
ret
clc
sbb
jmp
jne
add
shl
andb
hlt
and
es
in
das
out
and
push
frstor
sahf
dec
cmpsl
mov
inc
pop
or
fnstcw
jbe
pop
lahf
lret
sbb
lods
cmp
inc
inc
or
xchg
dec
jle
test
cmp
jmp
rol
out
or
rcrl
xchg
loopne
fdiv
xchg
in
call
pop
mov
imul
pop
push
jno
or
xor
dec
add
sbb
jo
sbb
in
popa
mov
jecxz
leave
rcl
push
adc
inc
adc
jmp
adc
push
dec
loope
ret
or
bound
push
push
sbb
adc
push
stc
jnp
pop
mov
shlb
repnz
add
fmull
out
aam
jg
fs
shr
data16
test
xor
js
jne
jo
mov
push
inc
aad
push
sub
xchg
lret
fsubl
pushl
pop
xchg
add
and
cmp
mov
or
ret
xchg
ljmp
jmp
mov
rclb
push
movsl
mov
cli
aaa
repz
lock
fucomp
jl
call
in
xchg
cmp
jmp
xor
adc
andl
scas
inc
movsl
and
add
xor
jbe
push
mov
rorl
xor
mov
adc
cld
in
xor
sbb
pop
jmp
push
scas
loopne
lret
cmpsb
and
adc
leave
push
addr16
mov
fadds
in
mov
jecxz
repnz
pop
pop
or
xor
ljmp
adc
cmpsb
mov
cmpsb
lods
cmp
inc
test
ret
add
mov
pop
dec
lret
and
push
cmp
fdivrl
repnz
cmovnp
adc
xor
push
dec
xchg
xor
loopne
inc
or
push
loopne
lahf
inc
lcall
iret
pop
addr16
or
dec
fsubs
xchg
in
xor
mov
inc
int
jns
ret
sbb
sarb
mov
xlat
adc
and
push
jo
cwtl
pop
clc
scas
sub
push
inc
test
mov
lea
inc
mov
and
mov
add
lock
mov
enter
or
shl
cmp
fistpl
jmp
cmp
mov
cmpsb
sub
fmuls
pop
pushf
cmpsb
xor
or
add
pop
xchg
int
mov
iret
or
aam
lods
mov
sbb
push
pop
outsb
jb
stos
lret
xchg
popa
pop
fdivs
andl
and
push
or
fsubrs
add
mov
push
xchg
add
daa
cmpsb
orl
pop
cs
dec
sub
loopne
orb
dec
call
call
into
xor
xor
or
sbb
pop
enter
rorb
test
sbb
pop
pop
out
rol
and
pop
imul
and
hlt
and
push
pop
scas
ret
shrl
lahf
cld
adc
imul
and
movq
add
inc
mov
sub
pop
jecxz
test
enter
and
xor
pop
ljmp
xor
cmpsb
leave
mov
rol
lahf
sti
mov
out
xor
js
pop
loopne
pop
ljmp
mov
or
inc
ret
inc
cmp
pop
iret
test
cmp
and
push
push
iret
sub
adc
sub
sub
dec
or
stos
jle
inc
cwtl
pop
scas
xchg
dec
outsl
rcll
mov
jl
adc
test
fsubp
clc
add
mov
push
test
clc
cmpsl
ret
push
sbb
call
cmp
repz
xor
ret
push
or
sub
mov
rcrl
sbb
notl
xlat
add
jmp
into
lods
aas
mov
rorb
add
jnp
xor
push
cmp
xor
loope
inc
push
sbb
sub
push
push
jae
repz
cltd
inc
xchg
arpl
pop
ret
stc
pop
les
lods
cmpsb
add
aam
aam
les
mov
cmpsb
popa
aam
inc
inc
or
mov
add
or
add
mov
pop
xchg
adc
mov
insl
shll
inc
jg
and
ficoms
test
insb
addb
fsubrl
idivb
xchg
aaa
sbb
and
test
push
xchg
push
ljmp
icebp
pop
add
ret
xor
xor
add
fcoml
sbb
xor
adc
aad
fstps
sub
hlt
insb
les
sbb
bound
lea
das
add
or
call
jo
jnp
sarl
test
cwtl
add
add
push
fiadds
nop
add
cwtl
fcoml
arpl
es
pop
cli
out
stos
add
sub
mov
adc
mov
push
sub
cmp
dec
mov
or
mov
adc
inc
inc
dec
dec
sub
mov
pop
int3
jmp
jb
mov
jg
add
inc
dec
movsb
in
and
dec
hlt
push
adc
push
popl
rcll
dec
mov
iret
in
fstp
sub
fldl
lds
xor
mov
ds
sbb
push
mov
add
pop
pop
or
cmp
jecxz
and
xchg
jge
xor
mov
sub
pusha
add
imul
push
push
or
push
aam
subl
xchg
sub
xchg
add
ja
mov
aam
cmpsb
orl
xor
xor
call
imul
dec
popa
sub
sbb
push
inc
cltd
jmp
add
lods
jecxz
rol
add
push
stos
pop
sbb
outsl
dec
inc
adc
xchg
dec
or
arpl
add
mov
jl
lock
xor
lock
sub
sbb
shlb
mov
les
mov
mov
jno
jbe
and
xchg
lcall
shl
roll
repnz
clc
add
sub
mov
inc
lret
mov
sbb
nop
inc
add
push
sub
push
jl
out
inc
sub
xor
dec
int3
mov
mov
sub
sahf
cmpsb
cmpb
mov
outsl
jle
add
add
inc
inc
mov
popa
aam
xchg
sbb
int3
popf
stos
cmp
push
shrl
ja
xchg
xchg
enter
pop
sub
sar
add
adc
sarb
add
mov
xchg
cmp
inc
push
sub
outsb
pop
test
and
addr16
daa
mov
xchg
daa
movb
push
mov
and
movl
inc
inc
xor
mov
decl
jmp
inc
add
mov
pop
loopne
push
sbb
inc
pop
ja
adc
mov
xadd
jb
test
cmpsb
shrl
and
xor
popl
stos
jp
enter
fiaddl
sub
sar
mov
addb
mov
inc
push
jb
imul
xchg
push
push
sahf
rorb
dec
xor
movsl
test
in
cmp
jge
and
sub
pop
mov
mov
mov
sarb
sub
sub
inc
popl
push
add
xchg
lret
stos
leave
push
adc
iret
stos
and
outsb
push
in
sub
push
ljmp
mov
pop
les
arpl
adc
add
xchg
sbb
cmp
ret
or
mov
inc
mov
mov
add
mov
sbb
inc
aas
push
test
mov
call
mov
mov
adc
fwait
jl,pn
xor
add
push
mov
jge
ja
pop
mov
rcll
testl
mov
addr16
rclb
cmp
pop
ret
cs
xchg
jb
push
ss
cld
testl
sbb
mov
jmp
cld
dec
sub
out
dec
jmp
loope
out
out
xor
hlt
cmp
jno
xor
cmpl
add
or
jae
and
mov
dec
cmpsb
jle
ss
fadds
xlat
jl
dec
and
stc
fcomps
cmp
lahf
adc
dec
xchg
cmp
pop
bound
push
push
pop
inc
scas
scas
xchg
or
push
add
dec
mov
sbb
mov
inc
xchg
add
push
es
je
rcrb
pop
or
loopne
or
push
push
mov
cmp
and
jns
sub
rcll
aas
dec
sub
push
jmp
enter
andb
jo
and
movsb
pop
or
fadd
outsl
jmp
loopne
adc
pop
aaa
sbb
dec
push
sub
loope
js
fs
test
fsubrs
mov
and
pushf
adc
cmovs
in
cmpsb
lock
ret
cltd
movsb
push
cli
and
scas
dec
jmp
sbb
cmpl
rorb
inc
loope
xor
or
insl
jg
and
hlt
clc
mov
sbb
fisubrs
imul
pop
mov
xor
jp
mov
adc
sub
mov
lock
pop
adc
cltd
sub
adc
lcall
mov
lds
xchg
mov
dec
mov
mov
pop
sub
notl
push
ljmp
xchg
icebp
inc
nop
jecxz
xchg
xor
out
mov
lock
sbb
loopne
std
adc
sub
lock
push
inc
loopne
and
add
shlb
outsl
mov
add
add
imul
xor
pop
into
cmp
lahf
inc
push
pop
dec
mov
jb
pop
pop
and
xlat
cld
iret
mov
fmuls
adc
les
sarl
mov
stos
jo
sbb
sub
push
cs
mov
or
lods
add
decb
ror
pop
mov
hlt
xor
mov
mov
add
xor
sub
clc
xor
push
cmp
lea
aas
push
sbb
mov
pop
mov
pop
sahf
xchg
jne
iret
dec
and
sub
icebp
addl
add
es
ret
mov
adc
push
ja
adcl
mov
pop
clc
dec
shl
dec
cltd
scas
fwait
mov
add
xchg
jecxz
inc
and
in
ja
mov
add
bound
movsl
insb
jg
lock
pop
test
inc
addl
ret
jno
or
fadds
inc
sub
ljmp
fdiv
jnp
aaa
mov
jle
test
or
pop
mov
xor
cli
adcb
pop
out
sub
lret
cmp
xor
nop
xor
or
orb
jno
popf
fadds
dec
or
dec
or
mov
notl
jno
push
lock
adc
add
sbb
cmpsb
xor
int3
xor
adc
push
ljmp
ss
adc
add
xchg
mov
movb
xor
out
push
call
adc
repz
jmp
adc
movsl
or
lahf
shl
and
push
push
jmp
jl
test
push
mov
sbb
movsb
incb
divl
test
loopne
pop
add
popa
inc
and
in
outsl
adc
loopne
pop
mov
mov
movsb
lock
daa
mov
dec
bound
mov
add
or
add
and
xor
push
add
int3
cwtl
and
pop
or
icebp
or
inc
add
lahf
popf
sbb
loop
pop
cmp
cmp
inc
gs
daa
mov
inc
in
orb
and
xor
mov
adc
add
das
test
add
lret
mov
ss
out
or
lret
inc
adc
movsl
xlat
cmc
pop
add
insl
paddusw
adc
or
loop
inc
loopne
xor
mov
shr
fisubs
lret
ror
and
adc
cwtl
mov
push
inc
std
sbb
jmp
add
imul
and
cmp
xor
or
xchg
jg
or
dec
cmp
mov
imul
inc
dec
arpl
aas
xchg
add
imul
in
sub
sub
or
inc
sbb
pop
dec
cmc
out
das
pop
loop
rolb
lahf
subb
jmp
dec
int
mov
mov
jno
xchg
adc
fstps
aaa
mov
add
adc
mov
push
push
or
test
dec
dec
mov
inc
ret
ficoml
sub
mov
dec
fcoml
test
test
into
jnp
iret
shlb
lods
inc
add
fisttps
je
push
cmp
jmp
xor
xor
dec
xor
or
mov
or
cmp
out
leave
push
push
ret
movsb
repnz
sub
dec
cwtl
add
hlt
fdiv
out
stos
pop
sarb
testb
or
jecxz
ficompl
xor
cs
cmp
cld
ss
dec
mov
es
imul
pop
cmp
lea
movsl
adc
fsubs
and
repz
mov
fadds
bound
cmp
cmc
aam
jno
test
xor
xor
movsb
stos
xchg
addb
sub
imul
adc
test
mov
jae
pop
mov
and
mov
xchg
mov
ljmp
out
ja
mov
rcr
mov
mov
sbb
jo
add
sbb
bound
mov
push
adc
mov
ret
push
lret
sbb
dec
enter
xchg
push
jo
mov
and
and
loopne
lock
xchg
pusha
xchg
mov
adc
cmp
pop
inc
test
loop
add
add
and
or
sbb
shrl
mov
testl
cltd
mov
ljmp
enter
test
push
jl
inc
je
test
lahf
loopne
add
fisubrl
popa
lcall
int3
test
mov
jbe
mov
ret
das
mov
pushf
ret
xor
test
xchg
inc
outsl
hlt
jno
push
pop
sub
insb
pop
or
and
or
mov
hlt
fcoms
or
sub
jp
push
loop
js
imul
lfs
pop
aaa
pop
insl
out
mov
xor
inc
sub
rclb
cmp
cmpsl
dec
push
adc
loop
clc
xor
mov
cmp
jne
aad
imul
mov
add
test
rorb
lahf
xchg
and
mov
int
jnp
lods
mov
xor
adc
and
jecxz
test
fwait
push
inc
sub
lods
loopne
push
out
shlb
outsl
outsl
add
cmp
and
or
pop
pop
cmp
lods
push
or
jp
js
rep
into
mov
adc
xchg
or
add
into
inc
mov
lods
jno
test
sbb
gs
call
sbb
mov
xor
jne
mov
rorl
inc
mov
adc
jbe
andb
test
fbstp
rolb
inc
mov
pop
jmp
add
rcrb
and
fdivrs
push
insb
push
arpl
loopne
xchg
dec
xchg
lock
loopne
xor
sbb
jnp
ficoms
js
push
fimull
stos
xchg
jo
or
outsl
rorb
inc
cmp
mov
popf
xor
dec
setnp
adc
sbb
jo
scas
cmp
adc
or
sub
mov
jnp
daa
or
mov
inc
rcrb
jnp
dec
lods
adc
out
ss
push
jp
dec
adc
and
mov
lret
push
add
jg
adc
sar
push
rolb
push
push
adc
xor
rolb
loopne
inc
sbb
push
out
mov
sbb
dec
jbe
loope
aad
arpl
sbb
or
pop
inc
xor
xor
fisubrs
lahf
lcall
fbld
jg
pop
xchg
fnsave
repnz
add
and
push
dec
daa
test
int
mov
sbb
add
sti
push
ds
dec
test
adc
add
mov
andb
bnd
repz
jne
adc
and
dec
rorl
and
lds
and
iret
sbb
xor
push
jae
sub
mov
mov
jge
lods
nop
mov
and
add
mov
aas
ja
test
cs
and
add
mov
ja
pop
push
and
dec
sub
jmp
add
sub
and
sub
push
jmp
xorb
or
decl
sub
ds
cwtl
fiadds
hlt
push
je
ja
push
push
addr16
pcmpeqb
out
dec
imul
pop
jo
sub
scas
pop
cmpb
out
popa
jno
mov
or
jo
mov
loopne
xchg
adc
mov
lret
add
inc
push
pusha
aam
jb
fildl
mov
in
push
adc
test
lods
pop
hlt
aam
pop
add
push
mov
movsl
mov
cltd
clc
jecxz
or
movsl
sbb
pusha
into
out
mov
or
add
mov
pop
adc
ficompl
or
jp
repnz
fdivs
dec
sub
xlat
iret
sti
jnp
and
out
and
lea
ss
lcall
mov
neg
xlat
data16
xor
cmc
nop
imul
push
push
shl
in
inc
lds
test
push
int
mov
inc
mov
das
aad
aas
call
lods
sahf
in
sub
or
divl
push
in
cmp
lock
add
iret
adc
into
mov
loope
dec
cld
inc
add
mov
push
sahf
out
and
negb
in
clc
scas
and
arpl
mov
inc
jmp
adc
or
cs
or
add
test
inc
inc
and
rclb
or
adc
inc
imul
push
cmpsl
fisubs
xchg
inc
and
sub
add
push
fsubrs
xor
push
cmpsl
inc
cmp
insb
es
das
mov
push
add
and
and
aad
out
inc
cmpsb
fs
lods
xchg
lcall
lret
outsb
in
dec
lea
and
fs
add
out
icebp
outsl
in
divb
and
lods
test
sbb
addr16
push
andb
add
add
loop
mov
and
sbb
cmp
aas
push
push
dec
sub
add
add
jecxz
imul
sub
mov
jno
and
sbb
out
in
cli
ja
mov
inc
in
pop
rorl
inc
sbb
and
mov
xor
dec
adc
fwait
loopne
mov
fmul
or
sbb
xor
or
popa
pusha
mov
add
stos
in
bswap
out
adc
imul
push
add
insl
mov
pusha
popa
repz
leave
xor
jbe
fdivs
inc
pop
addb
sbb
xor
pop
sbb
js
faddl
nop
sbb
push
push
pminub
outsl
xchg
or
cltd
sub
jo
add
xchg
sub
mov
or
rorl
xchg
cld
in
pop
lods
adc
cld
cwtl
fiadds
mov
cmp
js
je
addb
cwtl
xchg
xor
pop
or
adc
mov
js
int3
sub
xor
add
popa
or
inc
lds
aaa
cmp
or
daa
mov
movsb
mov
out
mov
orb
add
xchg
sbb
js
cmpsl
cld
push
mov
loope
cltd
sti
sbb
adc
or
add
gs
add
test
or
cmp
or
lock
cmpl
dec
lret
pop
pop
sbb
divb
add
fistpl
jle
xorb
bound
in
adc
jl
clc
xchg
movl
jnp
fwait
cli
push
adcb
and
add
sbb
mov
test
jbe
test
movsw
xchg
inc
fimull
dec
lods
push
lock
sbb
sub
aam
cmp
push
xchg
ret
mov
cltd
rorb
jg
cwtl
fstpt
jns
jae
pop
push
test
xchg
loop
mov
lea
pmuludq
add
push
dec
push
int
dec
inc
pusha
lcall
push
iret
inc
je
mov
inc
neg
stc
hlt
aaa
push
inc
xchg
and
pop
and
inc
out
pop
cltd
xor
adc
lock
je
mov
in
pop
mov
mov
sarb
ret
and
repnz
std
add
or
call
xchg
and
in
xor
xor
mov
add
addl
jo
mov
mov
and
arpl
jl
inc
int
scas
adc
push
call
shlb
imul
fs
sub
sbb
sub
punpcklbw
cltd
cmp
mov
dec
inc
cmpsl
cmp
lret
jge
xor
pop
adc
aas
or
orl
xchg
mov
inc
movsb
adc
shll
mov
sbb
in
cmp
fwait
mov
sbb
es
fimuls
add
xor
mov
rcr
fmuls
movb
in
push
outsl
les
cli
jmp
add
sub
adc
add
sub
xchg
js
mov
push
adc
out
popf
int
out
pop
testb
repnz
add
or
or
push
cmpsl
and
sbb
mov
or
lods
fnstcw
sbb
adc
dec
leave
or
mov
stos
pusha
and
cmpsl
add
jno
push
and
push
daa
or
mov
shrl
mov
sbb
cmc
xchg
push
adc
push
jo
sbbb
jmp
fwait
xchg
fs
je
test
adcl
mov
repnz
ja
sbb
or
lret
imul
in
icebp
and
inc
fwait
test
xchg
sub
add
pop
loopne
and
sub
pop
cmp
add
mov
ja
add
or
push
sub
sbb
push
add
cmpsl
sbb
js
mov
shr
test
aam
push
push
rclb
cltd
push
add
dec
mov
cmpsb
pusha
in
mov
mov
iret
add
lret
ja
sbb
or
pop
xor
ret
jge
cmpb
cmp
jnp
mov
pop
insl
sbb
and
jmp
std
enter
and
or
mov
cmpsb
imul
ret
xchg
adc
jmp
cltd
arpl
add
push
and
dec
xchg
fstpt
inc
jb
popa
mov
rclb
fisubrs
dec
and
pop
ret
pop
roll
jg
cmc
jno
and
sbb
cmpb
mov
call
fistpl
mov
add
dec
shll
xchg
jnp
push
dec
jg
jg
sbb
imul
add
push
pushf
inc
sbb
mov
in
fsubrs
cmp
jno
mov
insb
add
movsb
jge
lock
xchg
mov
fiaddl
pusha
jb
push
pusha
and
pop
decl
push
add
and
inc
pusha
or
loope
and
in
pop
inc
ss
push
sbb
or
test
outsb
add
cmp
out
inc
push
or
imul
sar
inc
add
enter
outsl
jl
mov
push
cwtl
xchg
jbe
and
aas
lret
jbe
test
nop
jo
xchg
mov
and
repz
mov
rclb
jmp
xchg
cmp
adc
mov
jmp
loopne
cmp
inc
cmp
mov
cld
mov
cmp
cmpl
jns
clc
sbb
dec
cmp
jg
leave
sarb
jbe
xor
push
pop
jne
pop
mov
adc
or
mov
push
push
call
je
movsb
cmc
orb
inc
dec
test
gs
test
adc
pop
pusha
cmc
popf
adc
and
and
pop
lea
push
je
in
repz
inc
dec
sub
mov
aam
mov
sbb
lea
xor
mov
pop
scas
mov
sbb
ja
dec
sub
cmpsl
dec
fildll
daa
adc
aad
jg
mov
sahf
xchg
push
js
xchg
inc
popa
xchg
lcall
popf
xor
pusha
jb
push
jp
xor
mov
cld
shrl
xchg
add
jnp
sub
push
sub
pop
push
push
inc
sub
jg
aam
lret
dec
cmp
and
inc
dec
sbb
inc
cli
jge
cmp
jmp
add
call
sbb
dec
push
out
adc
std
cmp
inc
xor
adc
ljmp
lock
rcll
add
scas
std
fisubrl
ss
xor
add
push
add
dec
push
hlt
inc
nop
add
dec
stos
lcall
scas
xchg
neg
push
jmp
pusha
dec
mov
fwait
mov
inc
bound
aam
rclb
xchg
cmp
hlt
inc
push
mov
aam
xor
adc
aam
sbb
lds
add
hlt
add
sbb
sub
rorb
lods
aad
lea
xchg
mov
or
and
stos
mov
adc
pop
and
psubd
lds
push
sbb
lock
push
sbb
sbb
test
adc
pop
out
xchg
stc
mov
mov
loop
int3
enter
mov
and
and
in
ret
test
hlt
loop
sub
inc
mov
rorb
and
negl
inc
clc
test
sub
mov
jnp
push
sti
fidivl
push
dec
adc
lock
fnstenv
mov
repz
jmp
mov
ljmp
add
dec
push
loopne
mov
je
ficoms
add
mov
and
inc
bound
sub
xchg
push
orb
xchg
jle
call
inc
xchg
cmp
insl
inc
xchg
push
insl
push
cmc
out
add
jno
cmp
pop
inc
sub
and
adc
sub
and
pop
sub
sbbb
ret
enter
jbe
push
iret
dec
repz
mov
int3
stos
fldenv
or
outsl
jmp
leave
pop
pop
pop
xor
or
xchg
testl
mov
pop
pop
xchg
xor
call
and
out
pushf
inc
cmp
inc
gs
sbb
int
xchg
andl
cmp
lock
shll
mov
or
mov
aaa
pop
mov
sub
mov
mov
cmp
and
xor
mov
push
testb
pop
outsb
mov
and
mov
xchg
std
inc
sbb
loopne
and
pop
mov
aam
push
test
push
aam
enter
cmp
jns
dec
mov
cs
sub
inc
rcll
sarl
and
js
cld
xor
rolb
js
mov
adc
loop
cltd
adc
sub
pop
int
ljmp
or
add
fidivs
outsb
pop
inc
cltd
loopne
jge
push
adc
or
aaa
sub
pop
sarl
nop
inc
inc
and
and
mov
jo
xchg
pop
mov
push
js
adc
cld
out
ret
push
inc
mov
lcall
pusha
popf
or
dec
sub
add
and
or
jmp
je
rolb
mov
cltd
in
pop
enter
or
push
mov
xlat
push
jp
test
and
mov
notl
pop
and
cwtl
jg
adc
les
fwait
cmp
dec
sub
and
and
and
adc
inc
push
bound
les
stos
mov
les
cwtl
lods
xor
jp
fldl
push
out
je
cli
ret
dec
popf
pop
push
das
push
and
jg
add
sub
cmpsl
xchg
lock
mov
or
add
fwait
adc
fbstp
add
or
rcrl
lea
inc
push
jmp
inc
mov
dec
push
adc
dec
pusha
dec
mov
or
cs
sbb
sahf
jo
mov
or
cli
pop
pop
imul
ret
or
orb
enter
mov
test
or
imul
lret
jb
insb
cmp
pop
push
jnp
push
sbb
dec
sub
pusha
popa
loop
cli
rclb
push
and
or
orl
icebp
and
pop
pop
cwtl
cmp
mov
psubsw
inc
js
std
sub
xorl
sarb
add
pop
mov
mov
pop
pop
xor
pusha
jl
jbe
xchg
jecxz
das
ret
test
fs
xor
and
mov
hlt
and
lret
inc
aas
or
and
jo
sbb
dec
or
ret
aad
lahf
addr16
xchg
cltd
lahf
fnstsw
movsb
sub
add
xor
jo
aam
pop
mov
ret
call
loopne
shlb
xor
and
ja
lahf
add
inc
imul
mov
and
push
mov
insl
adc
dec
jmp
xor
fcomps
mov
mov
add
xor
and
xor
sbb
fldz
test
sarb
inc
dec
adc
add
dec
xor
push
sbb
and
adcl
and
lcall
pop
push
cmpl
sbb
or
mov
nop
add
mov
faddp
pop
cmc
mov
dec
xor
xchg
push
adc
dec
outsl
sub
add
iret
fidivrl
icebp
mov
add
fwait
test
hlt
and
test
mov
popf
data16
cmp
lretw
sub
mov
test
in
fwait
pusha
mov
inc
push
out
arpl
test
push
or
int3
cld
int3
add
mov
adc
enter
cld
iret
jbe
popa
test
pop
push
lea
incb
add
dec
jne
mov
xor
test
addr16
ss
mov
rcpps
mov
adc
inc
mov
rolb
dec
or
outsb
push
push
inc
xlat
dec
dec
insb
not
fstpl
adc
add
pop
loope
inc
mov
mov
test
xor
sbb
jns
inc
xor
sbb
clc
ret
pop
adc
addb
sub
dec
or
add
cltd
pushf
test
loope
lahf
jbe
sahf
out
mov
push
loope
ss
test
pop
dec
dec
xchg
std
sub
pop
mov
imul
nop
mov
sub
addr16
mov
repz
xor
cs
push
loopne
std
xchg
jo
xor
fldenv
or
mov
xor
mov
popa
add
sbb
daa
inc
stos
test
fistps
adc
add
popa
test
lock
loope
repz
movl
xchg
sbb
lret
outsb
icebp
or
inc
add
adc
dec
scas
pop
lods
mov
out
and
and
fs
add
fs
sbb
sbb
pop
pop
movsb
mov
push
sbb
cmp
xor
pop
and
fiadds
pop
fistl
sbb
je
fbstp
mov
mov
dec
movsb
or
int
in
pop
or
push
fs
or
cmp
jecxz
cmp
pop
das
push
in
xchg
roll
cmp
fwait
inc
add
enter
ss
nop
je
mov
push
iret
lods
lods
push
or
lea
scas
test
mov
pop
dec
pop
dec
sbb
mov
sbb
orb
iret
mov
stc
notb
cmpsb
inc
and
arpl
loope
cmp
cmp
mov
psubsw
daa
cwtl
out
shll
loopne
xor
ret
inc
sub
dec
ljmp
or
hlt
fldt
loop
jmp
xor
adc
add
mov
fisubl
sbb
adc
inc
cli
add
ret
push
xor
lds
lock
jae
mov
inc
and
inc
call
dec
and
icebp
push
sysenter
push
mov
xchg
sub
ret
cmp
mov
jl
mov
sub
push
fldenv
add
hlt
xor
add
adc
insl
dec
push
les
pop
dec
xor
movsl
std
loopne
or
mov
scas
push
mov
dec
cltd
mov
and
test
inc
pushf
jge
push
es
arpl
mov
scas
sbb
xor
mov
push
pop
sahf
icebp
incl
mov
lock
cmp
sarb
fstpt
xorb
or
hlt
xchg
jns
sub
xor
mov
cmc
jbe
or
and
pop
adc
call
daa
mov
push
cltd
fiadds
jb
sub
and
jae
mov
pop
outsl
xchg
xorb
push
notl
insl
cltd
inc
pop
push
sahf
add
lock
cli
add
out
shrl
push
adc
pop
leave
jmp
pusha
movl
and
fucomip
addr16
jmp
loope
sub
cmp
popl
mov
mov
roll
cmp
jbe
fs
adc
push
jmp
test
inc
add
dec
test
fdivl
mov
cli
dec
call
mov
out
nop
cmp
add
mov
jae
jmp
cmp
ja
pop
add
call
test
jbe
sbb
adc
lods
rcl
cmp
pop
xor
and
and
fsubrs
mov
inc
push
xchg
in
push
nop
mov
fcmovu
daa
adc
or
pop
cmp
inc
cmp
dec
ret
fsub
pop
or
adc
nop
mov
cmp
pop
add
test
mov
out
add
pusha
pop
ja
clc
mov
pop
clc
mov
sbb
out
into
out
stc
xchg
or
jecxz
push
adc
push
mov
dec
sub
dec
xor
lods
mov
js
sti
andl
bound
lock
and
ja
or
fsubl
cmp
subb
scas
xchg
adc
add
or
loopne
xor
decb
push
adc
cwtl
loop
inc
and
fdivrl
or
mov
daa
inc
pusha
xor
sub
lock
cmp
jmp
dec
dec
psrlw
jp
cmpsl
sbb
and
push
pop
xchg
lods
clc
pop
call
clc
in
dec
pop
adc
shlb
loopne
push
test
push
and
insb
es
xchg
sub
xor
popa
pushf
xlat
adc
outsb
aam
pop
rorb
or
pop
push
aad
mov
push
and
mov
movsl
lahf
sbb
out
outsl
cli
addr16
jmp
icebp
insl
sub
xchg
cmp
ja
and
roll
ljmp
mov
sbb
clc
test
add
xchg
cli
aam
jl
scas
sub
jo
fstp
xchg
fmuls
push
sub
inc
or
push
cmp
enter
jecxz
imul
ret
shr
js
dec
and
ret
cli
add
rorb
xor
add
in
imul
push
push
mov
dec
ljmp
stos
mov
shrb
and
ret
in
inc
mov
imul
movl
adc
dec
inc
adc
add
aam
daa
testb
and
adc
sbb
or
jne
push
call
shlb
loopne
inc
cmp
fists
mov
xor
fimull
lods
icebp
mov
xchg
mov
int
add
clc
fbstp
fstp
sub
adc
nop
push
pop
aaa
sarb
pop
sbb
push
jb
adc
push
daa
scas
rcll
movsl
adc
or
mov
mov
mov
cmp
hlt
mov
fistpll
jnp
mov
jg
test
ja
mov
pusha
rcll
dec
shrb
test
jle
dec
mov
mov
aam
cltd
push
or
jp
orl
or
data16
dec
scas
jmp
lock
adc
sbb
fwait
inc
mov
jecxz
mov
pop
pop
scas
ret
dec
add
adc
mov
add
lods
fdivr
lahf
rcrb
test
add
test
adcl
cltd
insb
pop
jp
inc
push
test
mov
into
fdivl
mov
or
fisubs
jle
push
dec
sbb
push
jp
dec
loopne
adcb
pop
neg
rcrb
out
dec
add
daa
adc
mov
inc
popa
dec
jp
int
mov
mov
mov
aam
jo
fidivs
mov
lock
mov
inc
or
add
sub
lea
movsb
scas
ret
outsl
push
fsubr
nop
shlb
mov
adc
repnz
and
xchg
mov
imul
lahf
push
inc
fiadds
ret
mov
fiadds
mov
or
cli
xchg
or
mov
xchg
movb
inc
xor
in
movsb
je
jnp
xlat
push
dec
ret
fs
mov
jb
pop
cmpsl
sub
dec
daa
clc
rcl
xor
fcoms
ss
mull
add
sarb
outsb
sbb
xor
fucom
fsubl
pop
int
cltd
fsubrp
std
bnd
dec
test
inc
pop
fadd
jbe
add
or
fstpt
sub
sysexit
sbb
xor
and
lods
mov
sbb
xor
out
inc
push
mov
dec
dec
loope
dec
mov
cmp
push
adc
xor
aaa
or
mov
jge
imul
inc
jg
data16
cmpsl
loopne
mov
test
dec
mul
inc
loope
int3
push
je
or
rol
stc
rcl
add
jmp
out
test
mov
lods
sub
idiv
adc
cmp
mov
loope
inc
mov
setbe
dec
negb
push
add
add
mov
je
mov
arpl
cltd
or
xchg
lea
pop
sbb
addl
or
dec
roll
adc
push
divl
cmp
rcrb
hlt
xchg
insb
ret
int
jbe
sahf
xchg
add
imul
jle
mov
mov
and
sub
cld
and
lret
jl
push
inc
sarl
popa
cmp
sub
push
test
int
les
pusha
xchg
xor
push
lock
jae
sub
lock
jmp
and
inc
lahf
rclb
add
sbb
adc
sbb
and
mov
scas
dec
add
push
fnstsw
decb
test
ret
push
in
stc
imul
loope
arpl
inc
push
or
mov
lds
lods
je
rcrl
test
pushl
add
inc
movsl
les
gs
movsb
imul
rclb
xor
ret
stos
iret
loopne
sub
push
outsl
sub
or
decb
lods
xchg
int
outsb
cmp
add
dec
inc
lret
jp
push
insb
and
and
out
push
push
xor
into
mov
cmp
adc
adc
sbb
mov
int
insb
or
lcall
xor
and
push
nop
fwait
sbb
inc
or
push
jecxz
pusha
out
mov
fnstenv
xchg
call
dec
mov
xchg
aam
stos
xchg
mov
test
jmp
in
push
std
dec
adc
loopne
mov
inc
dec
cld
test
test
out
mov
or
jo
dec
lods
mov
arpl
push
cmp
mov
daa
cli
jne
or
or
test
lock
dec
rcll
gs
and
int3
mov
add
xor
test
mov
jne
xchg
mov
sarb
xchg
cltd
clc
dec
cmp
jae
and
jne
or
aam
nop
jmp
adc
mov
iret
scas
rol
lcall
rolb
aam
leave
add
mov
loop
cmp
jnp
mov
and
push
cwtl
sub
sbb
push
mov
sbb
adc
lea
push
test
and
push
push
fldt
cmp
rcll
xchg
inc
clc
jb
jno
jne
mov
push
xchg
js
mov
xor
outsb
and
push
hlt
mov
xchg
and
sub
pop
add
outsb
in
in
add
xor
subl
sbb
lea
add
pop
test
pop
inc
push
sar
jmp
xchg
dec
sahf
sub
filds
sbb
fmull
inc
out
les
int
xchg
inc
jg
les
mov
or
jp
cmp
and
mov
mov
fildll
jmp
jmp
xchg
dec
mov
push
orl
adc
cmp
loop
notb
push
or
int
filds
clc
addr16
jmp
in
or
movsl
sub
and
ja
inc
arpl
inc
test
add
xor
add
and
das
sbb
in
add
sbbl
and
mov
lock
or
or
imul
add
jg
out
insb
lock
mov
stc
je
fidivs
xor
dec
outsl
and
jmp
mov
jne
mov
fimull
mov
sub
jmp
lea
clc
adc
inc
add
hlt
stos
lret
sub
popf
push
loop
add
dec
call
notl
loopne
pop
jnp
xlat
and
outsb
dec
mov
nop
jnp
dec
sbb
lea
jne
add
cs
xchg
incb
adc
mov
pop
xorb
shll
inc
adc
sbb
or
fmull
xlat
add
dec
cld
fists
or
push
fcompl
add
imul
lcall
cmp
mov
push
add
mov
and
dec
mov
pop
inc
leave
adc
sbb
adc
push
clc
push
hlt
loopne
lret
sbb
xor
push
xor
movsl
cmp
or
cmpsl
popa
sub
shll
jno
mov
mov
js
xchg
jl
jnp
sbbl
inc
pop
scas
dec
xchg
push
sbb
jge
sub
daa
cmp
and
sub
movsb
adc
adc
mov
ret
sahf
xchg
xchg
xchg
cmp
push
fs
test
icebp
sbbl
jo
mov
inc
add
push
pop
jg
bound
jecxz
xorl
lahf
adc
filds
cmc
add
aad
and
mov
lods
push
or
add
add
push
imul
lock
int
loope
and
lret
or
sbb
test
or
shlb
mov
dec
jae
icebp
mov
xor
pop
inc
xchg
js
rol
lret
adc
sbb
dec
movsb
pop
subl
xorb
std
sub
or
emms
and
shlb
aad
pop
adc
jecxz
loope
inc
cmp
mov
and
dec
cpuid
pusha
xchg
xchg
push
scas
cmp
lock
or
sub
inc
aam
cmp
add
mov
jmp
mov
rclb
push
inc
lds
xorl
and
pop
in
xchg
sbb
push
or
add
test
outsl
and
cmpsl
popa
jp
push
lods
int3
cmpsl
test
lea
add
lahf
or
stos
stos
mov
add
jo
ja
loope
insl
ret
aaa
adc
push
inc
hlt
fcomps
pop
sub
shrl
adc
sbb
and
mov
cli
push
push
ficompl
das
shll
test
fildl
lea
inc
cmp
add
xor
adc
xlat
xorps
fsubs
sbb
jmp
pop
xlat
repz
xchg
jecxz
dec
cmp
test
ret
push
pop
pop
mov
bsr
mov
test
mov
mov
and
adc
pop
std
addr16
das
enter
adc
jmp
jo
das
mov
movb
out
stos
sbb
lret
fildl
shrb
xor
in
roll
lahf
shll
dec
mov
pop
sub
je
jo
and
inc
xchg
jl
pop
insb
cmpsb
xor
ja
pop
les
add
mov
cs
fiaddl
add
add
mov
sbb
adc
push
jae
inc
adc
xchg
notb
loopne
and
inc
sub
and
mov
stos
bound
int3
in
sbb
loope
push
push
push
mov
xchg
cwtl
push
jbe
ret
jecxz
cmc
loopne
adc
lock
jb
pusha
daa
imulb
sbb
or
fnstsw
adc
subb
jecxz
pop
mov
jecxz
loop
xor
add
mov
or
call
outsb
pop
pop
adc
xor
ret
js
mov
jbe
scas
clc
and
cltd
insb
test
scas
and
mov
sbb
mov
into
int
xor
mov
testb
or
fbld
pop
mov
add
add
jecxz
inc
pop
push
jmp
pop
inc
dec
inc
xlat
ret
push
subl
xchg
fadd
push
int
cmp
jmp
sbb
rorb
mov
and
mov
push
mov
fiaddl
push
lock
fwait
mov
nop
shr
sbb
dec
clc
movsl
mov
imul
mov
and
adc
ss
bound
daa
push
stos
mov
lods
jecxz
cmp
dec
arpl
insl
xchg
adc
xor
popf
inc
sub
pop
and
rclb
sahf
pop
or
nop
rcrb
cmp
inc
aad
pop
inc
cmp
pop
sub
mov
jmp
push
jo
mov
cmp
sbb
push
pop
pop
and
jnp
inc
fmull
in
pop
sbb
jo
xor
push
gs
rcrl
fsubs
insl
movsl
test
lcall
inc
sub
xor
mov
test
xchg
adc
and
adc
shl
xor
inc
adc
icebp
in
in
mov
dec
add
or
add
jmp
push
add
mov
call
cmc
xlat
sub
xlat
xchg
push
das
jmp
out
pop
aas
push
push
or
and
les
mov
sbb
out
add
push
lods
test
and
ja
sub
cmpsl
sahf
add
jb
shl
lea
ret
and
sbb
push
add
decb
mov
jmp
mov
shrl
jp
or
or
or
push
repnz
sbb
popf
mov
mov
add
jo
dec
scas
loopne
dec
xchg
adc
pop
mov
mov
mov
jne
sub
inc
xor
inc
and
jmp
inc
cmp
add
inc
cmp
dec
mov
test
aam
inc
dec
push
sti
push
inc
pop
add
je
fiaddl
testl
and
dec
add
lret
xorb
testl
mov
in
add
adc
add
dec
iret
xor
add
pop
inc
xor
cmp
nop
movsl
psrld
into
adc
add
inc
add
mov
out
dec
mov
popa
ret
fs
add
push
test
mov
int3
mov
cmp
mov
mov
orb
cmpsl
or
or
outsl
cld
jno
or
adcb
adc
sbb
and
cwtl
mov
mov
pusha
inc
add
std
popa
lods
and
sub
pusha
mov
lahf
push
cld
stos
and
xchg
or
adc
sbb
jmp
filds
sub
push
aaa
movsb
or
aas
lea
xor
mov
dec
add
dec
imul
and
push
enter
in
aam
xchg
cmp
jge
sbb
add
iret
es
movb
sub
adc
pop
addl
testb
into
and
pop
icebp
xor
popf
push
or
pusha
add
add
cwtl
ret
clc
and
inc
sahf
rclb
addb
faddl
or
inc
or
dec
aam
mov
sub
orb
das
xlat
jge
jo
je
lahf
xchg
out
push
push
mov
jp
inc
aaa
mov
sbb
cwtl
pop
inc
je
pop
mov
mov
xor
pusha
push
int3
int3
inc
push
mov
int3
mov
push
push
call
fadd
pop
mov
out
test
lcall
movl
mov
fdivp
jg
and
mov
stos
adc
adc
xchg
mov
pop
in
rcrb
mov
call
add
xor
mov
mov
push
loop
mov
xor
inc
push
popl
mov
sbb
loop
pop
in
push
dec
in
xor
inc
adc
stos
push
inc
adc
sbb
mov
add
in
out
push
sbbl
in
or
adc
dec
rol
push
test
das
test
jmp
in
jne
pop
push
mul
inc
and
push
pop
add
mov
rolb
jp
or
cmp
nop
dec
ljmp
jecxz
dec
jecxz
pslld
sbb
mov
rcl
ret
cmp
cvtpi2ps
out
pusha
inc
add
loop
push
pop
xchg
add
sbb
js
dec
push
into
mov
mov
fisubl
push
push
in
adc
dec
rclb
movsl
mov
cmp
mull
jae
mov
push
fcoms
fistps
aaa
sbb
and
mov
jnp
mov
and
mov
popa
push
jb
sbb
lcall
insb
fstpt
mov
aam
mov
sub
mov
ja
mov
movb
dec
sub
les
sbbb
int
rolb
into
pop
mov
push
flds
or
inc
addl
inc
pop
xchg
and
in
lods
clc
divl
sti
push
sahf
adc
sub
sbb
inc
dec
jmp
adc
fcomps
movsl
pusha
sbbb
movsl
pop
dec
aas
insb
dec
adc
or
or
xchg
inc
mov
mov
xchg
push
xor
jmp
xor
nop
out
fs
mov
push
dec
or
imulb
adc
shlb
push
sbb
popf
neg
dec
bound
jmp
or
adc
or
and
xor
inc
les
adc
mov
sbb
pop
cmc
adc
dec
jmp
ja
mov
dec
icebp
xchg
enter
xchg
cmp
or
dec
int
xchg
mov
clc
mov
leave
arpl
mov
mov
pop
mov
adc
insb
mov
xor
sbb
mov
fdivl
sbb
ja
xchg
cmp
movsb
push
es
iret
cld
outsb
call
add
mov
mov
js
mov
call
xor
and
sub
add
faddl
mov
xchg
enter
lods
lds
push
xchg
lods
sub
jne
xor
cmp
test
mov
add
jmp
xor
push
ljmp
mov
ret
outsl
xchg
jnp
pusha
stc
into
mov
mov
scas
imul
nop
add
insb
inc
adc
xor
adc
jnp
mov
decl
lods
jmp
add
dec
negl
jecxz
aaa
sti
test
repnz
or
sbb
sbb
push
mov
dec
inc
sbb
repnz
movsb
lret
cltd
into
and
das
mov
push
mov
dec
mov
cltd
dec
fidivrl
sub
sub
ret
dec
xchg
xor
pop
dec
out
sbb
cltd
mov
sub
out
enter
pop
js
or
xor
loopw
rolb
test
rcrl
scas
cmc
sub
pop
flds
push
cli
push
xor
xorb
jbe,pn
test
stc
add
pop
xchg
shl
adc
xchg
cmpsb
rcl
pop
add
aas
data16
scas
icebp
sbb
insl
pushf
shl
pusha
inc
push
lds
loope
mull
mov
or
call
cmpsb
or
inc
jg
mov
pop
push
das
mov
jecxz
fcompl
mov
push
push
test
ret
jecxz
mov
lret
mov
loopne
icebp
mov
jno
xor
lret
lcall
lahf
adc
test
mov
mov
mov
addl
arpl
icebp
inc
xor
or
push
or
and
and
jecxz
add
movl
pop
bsr
pop
imul
enter
pop
daa
xor
test
add
pop
and
sub
sbb
xor
imul
push
sub
insb
inc
push
addr16
cmp
stc
pop
divb
cmc
dec
sbb
dec
lcall
dec
push
adc
dec
sub
xchg
adc
dec
adc
loope
mov
pop
divb
mov
shr
jp
ret
mov
loope
loopne
mov
cmp
in
mov
dec
jo
and
and
pop
sub
rcll
ret
jp
inc
ret
push
jmp
pusha
pop
cmp
and
mov
add
repnz
mov
cmp
jne
sbb
jecxz
fcom
or
pushf
fldcw
les
sbb
pop
outsb
adcb
pop
cmpsl
add
xchg
inc
in
pusha
imul
addr16
adc
mov
and
cmc
pusha
pop
es
xor
add
lods
jno
dec
test
insb
dec
js
cli
sti
adc
inc
adc
cli
ror
jae
lahf
mov
xor
sub
andl
ds
les
test
test
cmpb
mov
push
fwait
and
movb
cmc
out
lcall
add
popl
jmp
push
out
pusha
lea
pop
sbb
mov
add
or
icebp
add
nop
inc
sbb
test
xor
lret
arpl
or
push
loop
outsl
call
ds
push
fisubrl
inc
cld
outsb
inc
rolb
in
and
aaa
jmp
xchg
xor
pop
xchg
adc
shll
test
mov
sub
or
adc
fisubl
dec
les
push
pop
shlb
sub
push
xor
mov
adc
push
dec
loop
add
arpl
push
xlat
mov
enter
dec
enter
test
adc
cmpsb
sub
mov
mov
arpl
mov
stos
or
xor
rcr
xor
scas
push
fcmovu
or
das
pop
nop
add
pop
rcll
jecxz
stos
sbb
imul
xchg
scas
add
sbb
idivb
ret
push
enter
mov
lock
add
testl
inc
outsl
outsb
mov
test
mov
push
add
inc
xor
push
adc
ds
jg
mov
add
add
add
mov
test
pushf
insl
int3
push
push
sti
dec
xchg
add
rorb
cmp
adc
xor
or
clc
int3
mov
call
test
aad
add
xor
mov
idivl
pop
push
out
sbb
movl
daa
fiaddl
cmp
arpl
addl
mov
lret
pandn
pop
je
outsl
jo
aam
sbb
mov
mov
jnp
out
cmp
or
adc
or
xlat
aam
call
popa
inc
ljmp
hlt
fs
jge
lods
aam
aaa
pop
test
sub
adc
cmpsl
outsl
daa
mov
mov
xor
mov
int3
ljmp
cmp
cli
mov
ret
orb
adc
push
rcll
lcall
jb
or
icebp
push
in
das
dec
aaa
aad
mov
inc
xor
ljmp
aad
push
es
inc
adc
dec
dec
lock
and
adc
xchg
leave
ss
adc
sbb
scas
es
fnsave
or
sub
add
ds
insb
mov
add
ss
pop
sub
rclb
sub
jno
push
pop
or
add
rol
sbb
popa
add
jmp
mov
int3
cmp
cmp
enter
xor
sub
sub
push
push
add
pop
pop
mov
and
push
pop
nop
add
fidivrl
lcall
push
sarl
inc
add
xlat
add
add
mov
ljmp
test
arpl
or
in
xor
add
or
mov
mov
mov
add
adcl
adcb
push
jg
jbe
mov
add
or
out
sbb
iret
fildl
fistps
jae
repnz
sub
clc
add
lods
daa
and
sub
fdiv
punpckldq
mov
mov
scas
or
cmp
add
push
inc
add
fcmovnb
cmp
pop
ja
std
adc
sub
mov
aam
addr16
cli
inc
loop
pop
or
jnp
inc
sub
dec
dec
jg
test
inc
lods
aam
pop
jg
cs
popf
fincstp
daa
mov
push
test
mov
jecxz
das
leave
test
adc
and
lahf
mov
add
cmp
and
aad
notl
jno
enter
stc
mov
cli
inc
xchg
rcll
daa
nop
fisttpll
and
or
or
ret
sbb
mov
dec
into
lds
mov
cld
mov
and
js
ds
pop
cmpsb
aaa
fdivrs
lret
xchg
fs
test
cltd
inc
xor
call
or
or
xchg
lock
in
ss
or
xor
sbb
and
jbe
loopne
lret
xchg
ffreep
adc
fwait
mov
jne
pop
std
sbb
add
imul
mov
ljmp
xor
insl
dec
ret
xor
dec
xchg
jbe
sbb
rcr
cmc
mov
shrb
call
rcrb
push
ss
out
add
vucomiss
xchg
cli
mov
or
push
pop
mov
insb
cmc
fiadds
lea
loope
or
pop
jmp
cs
push
sub
adc
mov
call
cmc
icebp
pop
sbb
mov
popa
xchg
icebp
jp
sub
cld
and
dec
addb
jmp
aaa
jne
or
fdivr
cmp
popa
add
or
and
loope
js
xchg
repz
jo
push
mov
pop
or
or
xchg
cwtl
add
adc
xorb
sub
packuswb
or
mov
jl
ret
and
lock
cmp
iret
into
jmp
push
jecxz
je
pushl
lods
xor
or
call
and
loop
mov
loopne
fwait
jmp
popf
and
xchg
and
push
in
enter
mov
dec
rolb
stc
shrl
js
int
shll
adc
arpl
xor
scas
and
cs
mov
shll
enter
cli
push
cwtl
and
andl
fs
adc
popa
add
cwtl
and
add
jp
rorl
xor
or
mov
fcomps
xor
xchg
push
in
push
sahf
stos
or
movsb
sbb
fistl
mov
sbb
pop
sbb
shrb
pop
mov
and
pusha
aaa
push
pushf
dec
dec
sbb
movsb
loopne
jmp
sar
lcall
sbb
sbbb
adc
mov
mov
jecxz
cmp
xchg
mov
call
push
or
pop
cmpsl
ret
aam
sub
pop
fsub
dec
mov
add
pop
push
ret
fidivs
and
fisttpll
loopne
ret
sbb
sub
insb
cmp
sub
ds
push
add
dec
test
xchg
repnz
jno
inc
call
sbb
arpl
rcrb
cmpb
pop
push
jne
mov
add
mov
test
and
jmp
lock
lock
adc
push
pop
scas
js
mov
mov
ds
sbb
dec
sahf
mov
lds
sbb
shr
outsb
out
sbb
jbe
cmp
xor
sbb
inc
adc
inc
ret
pop
js
insl
cld
insl
jne
mov
fs
dec
mov
sbb
mov
fmull
ja
or
adc
ret
cmpsb
or
loopne
sub
add
dec
push
xchg
loop
lcall
jo
hlt
push
lock
lds
pop
or
sbb
js
mov
test
movsb
inc
jo
sbb
iret
popf
mov
mov
dec
bound
or
bound
lret
punpcklbw
enter
dec
mov
mov
lods
jl
imul
aas
das
roll
xchg
pop
push
mov
push
sbb
sbb
add
xor
loope
ljmp
mov
and
clc
arpl
hlt
inc
js
push
push
mov
and
and
sbb
rclb
inc
and
shlb
pop
test
insl
imulb
or
xor
push
mov
adc
and
lea
inc
fildl
pop
andl
inc
into
mov
aam
jmp
push
imul
sbb
lods
sub
imull
es
inc
jecxz
mov
ret
dec
pop
clc
sbb
mov
roll
pop
sbb
add
icebp
mov
adc
and
inc
adc
hlt
sub
add
rolb
cmp
ds
shll
popf
inc
pop
dec
sbb
add
fwait
add
add
mov
mov
in
mov
fcomp
fsubrp
add
add
subb
inc
out
push
sub
sbb
inc
jp
call
or
cli
pop
mov
dec
fwait
in
cmp
sub
pop
pop
outsl
or
pop
mov
pop
cs
cltd
dec
and
or
cs
fwait
imul
add
add
mov
fcmovne
rclb
cmpsl
fisubrl
mov
xchg
mov
and
or
lret
addl
cmpb
and
add
mov
loop
pop
dec
xchg
outsl
push
adc
das
jo
push
and
das
fisubs
sbb
jle
dec
xchg
inc
sub
lahf
aaa
mov
xor
lods
imul
xchg
mov
in
movsl
roll
and
stos
xor
push
adc
test
out
jbe
mov
testl
cs
scas
es
push
fldt
mov
jne
pushw
sarl
pop
and
orl
sbb
lods
fs
daa
sub
test
fwait
pop
movsl
test
js
pop
mov
mov
mov
sbbb
adc
add
nop
stos
add
or
mov
ret
lock
mov
xor
dec
pop
jb
out
jne
pop
and
push
push
inc
add
sarb
lahf
nop
jmp
mov
aas
pop
das
aam
push
test
dec
ljmp
mov
into
push
pop
stos
pop
arpl
lahf
outsb
ja
movsb
cmpsb
xchg
and
jmp
or
xchg
push
ljmp
ffreep
fimuls
pop
in
js
adc
fadds
adc
cmpsl
mov
sub
imulb
out
push
mov
je
and
cld
movsl
add
rcl
popa
jp
jmp
std
mov
testb
xor
push
xchg
or
dec
js
mov
call
movsl
lcall
sub
mov
jb
pushf
dec
out
mov
adc
iret
es
outsb
cltd
sbb
dec
std
aam
outsb
mov
call
push
dec
or
jl
mov
or
or
clc
jns
icebp
ret
mov
or
dec
inc
or
int3
adc
or
stc
mov
dec
cmp
dec
lods
adc
xor
push
ss
inc
add
mov
mov
add
sbb
loopne
or
sbb
addb
sub
add
flds
add
push
xor
jnp
pop
lcall
or
push
rorb
add
or
test
add
es
xchg
push
stos
call
test
adc
mov
jno
jbe
mov
lock
arpl
and
dec
frstor
fisubs
sbb
fdivrl
sub
adc
movsb
adc
jg
mov
mov
inc
or
add
add
sbb
daa
add
data16
inc
add
rcl
adc
and
mov
adc
pop
sub
dec
xchg
push
jae
aaa
shlb
mov
and
je
hlt
xchg
push
adc
mov
ljmp
imul
push
xchg
xchg
test
sbb
jb
adc
xchg
jmp
add
mov
and
sub
dec
push
inc
test
push
mov
mov
mov
mov
mov
dec
dec
add
xchg
xor
or
inc
inc
ret
and
inc
daa
jecxz
stos
sarb
xlat
cmp
mov
sub
xchg
add
add
mov
popf
mov
mov
adc
push
sti
sbb
xlat
cmpb
add
jne
and
push
outsb
insb
shlb
push
fwait
psubusw
aam
mov
mov
test
dec
adc
ret
rolb
xor
stos
adc
mov
repnz
jle
mov
sar
stos
xor
jnp
add
ret
cmp
clc
mov
jmp
and
arpl
xchg
test
bound
jecxz
mov
push
add
aas
int
iret
and
jp
movsb
mov
rorb
pop
adc
dec
rclb
mov
push
cmp
les
jae
lret
hlt
mov
in
inc
adc
and
lret
mov
push
mov
outsb
cmp
popf
push
ds
sarl
icebp
adc
push
aam
rcl
dec
push
shlb
xchg
xlat
push
sbb
and
int3
movsb
cmc
adc
jmp
and
sub
sbb
add
push
inc
add
mov
incb
add
sbb
and
stos
and
xchg
mov
adcl
inc
or
je
or
jne
insb
rcrb
xorb
and
and
xchg
add
xor
cld
mov
add
and
bound
rolb
int
add
or
mov
push
add
add
xorb
mov
rolb
adc
loop
rclb
push
and
sub
enter
scas
or
and
sahf
inc
push
adc
scas
or
and
inc
hlt
int
scas
pusha
pushl
inc
cmp
mov
jl
cmp
mov
je
add
ss
or
jo
int
xor
loopne
in
mov
dec
add
lcall
sub
mov
cld
push
mov
lea
sbb
shrb
xorb
lcall
ljmpw
insb
pop
dec
pop
or
dec
int3
int3
lods
pop
add
js
xorb
ds
push
lea
incl
fs
lods
or
add
and
ficompl
scas
jp
pusha
adc
jl
rolb
lods
loopne
rolb
pop
inc
into
insb
rcll
xchg
cwtl
inc
loop
push
or
sbb
aam
inc
pop
enter
cltd
pusha
jbe
dec
out
push
pusha
sub
shlb
mov
cmp
sbb
xchg
sub
addb
ja
fcmovb
pushl
mov
mov
fidivs
mov
or
je
sbbl
mov
sub
sbb
xor
cmp
cmp
bound
cs
xor
pop
push
clc
mov
push
lea
add
jne
movb
shrl
mov
fisubl
and
les
sbb
popa
lret
xor
add
mov
lcall
add
and
cs
cmpl
rorb
mov
add
je
lods
or
push
push
add
out
fadd
add
pop
push
adc
xchg
or
or
add
mov
decb
mov
push
cwtl
enter
xor
sub
sbb
out
mov
mov
adc
in
scas
cltd
fldenv
push
je
je
push
push
rol
or
shlb
decb
je
cmp
loop
fs
dec
jne
enter
rol
cmp
xacquire
pop
push
and
call
insb
rolb
divb
push
adc
or
lcall
int3
ret
loopne
mov
and
or
push
and
in
andl
int3
mov
pop
lea
or
fiadds
fisubl
nop
jnp
cwtl
cltd
enter
clc
fimuls
xor
cmp
fcmovu
fldenv
mov
mov
mov
ret
xorb
add
popa
mov
xchg
push
mov
pusha
or
dec
and
jbe
pop
cmp
xchg
into
data16
fcoms
fcoms
je
jbe
pop
adc
ficompl
mov
jbe
sub
mov
inc
mov
add
mov
jbe
pop
adc
fidivl
add
pusha
popa
and
jmp
xchg
sarb
in
and
fadd
dec
sub
sbb
int3
in
xor
mov
mov
xchg
pop
rcr
inc
lret
mov
or
cmp
enter
cmp
fsubs
shr
pop
push
jl
or
push
mov
out
add
push
inc
insb
inc
push
add
imul
test
movsb
jmp
pop
push
clc
incl
sar
mov
mov
int3
je
fsubp
dec
and
mov
dec
inc
push
pop
loopne
add
inc
test
out
jmp
popf
aaa
sbb
movsl
or
out
inc
xor
push
or
jmp
adc
adc
or
add
in
adc
lock
lods
int3
mov
enter
jp
sbbb
xchg
and
or
inc
pop
ja
rcrb
fisttps
shlb
mov
addr16
andl
cld
mov
cmc
arpl
movb
jmp
jp
push
imul
or
ljmp
mov
ret
pop
inc
adc
inc
rolb
sub
xchg
add
xchg
mov
mov
mov
stos
xorl
out
out
push
shrl
icebp
hlt
and
add
mov
cmpsl
je
rorb
pop
js
mov
dec
or
mov
mov
leave
lock
inc
sub
push
mov
mov
mov
lret
mov
popa
adc
inc
arpl
jmp
fdivrs
push
jg
mov
jecxz
xchg
mov
flds
mov
loopne
xchg
mov
add
lock
ficomps
call
cmp
and
pushl
adc
or
js
mov
fmul
sub
lds
push
push
or
sub
pushl
pushf
lahf
or
leave
pop
bound
pop
xchg
je
sbb
pop
cmpsb
out
jle
subl
xor
mov
popf
ljmp
jp
xorb
adc
sbb
jno
mov
pop
sarb
cli
cld
incl
push
jb
pop
and
xchg
mov
ffreep
orb
sbb
ljmp
movsl
xor
mov
sub
arpl
sbb
add
decl
sbb
cmp
xor
cld
mov
mov
enter
mov
js
in
push
call
push
jp
ja
pusha
push
and
mov
xchg
jge
lcall
mov
sub
push
jne
addb
imul
js
and
call
insl
pop
xchg
lea
cmp
dec
stos
xchg
lahf
cmpsb
adc
sub
loop
dec
icebp
push
or
dec
or
jno
pop
scas
xchg
and
popa
cwtl
xchg
xchg
dec
popa
fwait
jl
fiaddl
mov
decl
dec
mov
mov
xchg
in
adc
dec
adc
jle
outsb
mov
jns
add
fcoms
pop
push
push
jbe
and
sti
add
popf
cmp
cmp
leave
les
or
cltd
jle
icebp
test
dec
in
mov
jne
adc
aad
push
outsl
clc
mov
cwtl
call
loop
mov
iret
roll
data16
jecxz
pushl
jmp
mov
cmp
push
testl
jecxz,pn
nop
pop
jg
jmp
cmp
mov
fmulp
jb
inc
gs
jbe
cmp
aaa
fisttpll
and
jle
jecxz
bound
push
inc
movsl
jle
jl
xchg
rclb
test
jmp
or
shlb
cmp
xchg
stos
cmp
cmp
es
sbb
jmp
jmp
cmp
mov
mov
xchg
add
ljmp
mov
scas
shrb
dec
add
push
cld
adc
sbb
call
sbbl
std
fstp
cmc
mov
jne
adc
out
push
push
rolb
push
cmp
and
jb
mov
cwtl
into
fxch
js
pop
adcb
in
fsubs
and
pop
dec
stc
rcll
cmp
xor
dec
mov
loope
mov
add
xchg
add
decl
incb
xlat
repnz
popf
sbb
sbb
in
fistps
or
jne
jmp
jae
mov
xor
stos
std
imul
inc
movsb
call
cld
call
cmp
inc
leave
pop
cwtl
or
mov
inc
idivb
push
call
daa
and
rcll
push
inc
jnp
pop
xor
mov
shrb
pop
ret
lret
xchg
fucomip
outsl
add
push
std
andb
cld
in
in
test
fbld
push
lods
mov
lret
push
jecxz
pop
add
sbb
lcall
adc
mov
add
mov
cmpsb
sbb
outsl
xchg
nop
jno
outsb
data16
ljmp
call
sbb
mov
inc
and
sub
adc
aam
je
pushl
aas
push
rolb
popf
std
or
stos
fidivrl
fstl
fdiv
cmp
xor
jmp
sub
add
push
xchg
xlat
movsb
or
push
mov
repz
stos
lcall
popf
pushf
jecxz
loopne
or
xchg
cmc
sub
stos
adc
aam
fcompl
shl
mov
cli
adc
or
or
mov
lock
pop
xor
incl
loopne
mov
xor
add
call
aas
cld
cwtl
lock
mov
jmp
sbb
sbb
nop
jp
adc
aas
mov
insb
sahf
adc
inc
push
aas
mov
call
add
add
imul
xchg
adc
cmc
mov
and
lcall
sti
mov
xor
pop
jmp
mov
sbb
sahf
iret
push
sbb
inc
inc
lcall
and
or
out
pop
mov
leave
adc
pop
mov
stos
push
dec
pop
inc
fxam
push
xchg
fcomip
xchg
mov
mov
dec
mov
pop
pop
adc
enter
ja
adcb
in
push
inc
add
dec
es
sbb
xchg
in
mov
jmp
lods
cmpsb
pop
cld
or
ret
sub
imul
adc
or
mov
bound
scas
mov
stc
mov
mov
jge
sarb
push
adc
cmp
push
enter
dec
mov
fnstenv
scas
sbb
inc
or
insb
nop
scas
sub
xchg
ljmp
call
imul
mov
into
push
sub
ja
popl
ljmp
or
pop
xchg
adcb
jmp
sar
lahf
lahf
push
mov
jmp
out
scas
add
push
aaa
jl
addr16
add
stos
gs
and
decl
mov
sti
pop
mov
pop
or
repnz
inc
jne
xchg
dec
rolb
pop
sub
mov
fadds
adc
cmc
icebp
inc
imull
mov
in
and
fcomps
int3
data16
jnp
pop
inc
dec
repnz
pop
addb
push
and
shr
in
add
adc
addr16
push
cld
incl
and
mov
sub
clc
mov
dec
enter
add
pushl
push
cmp
mov
mov
push
push
mov
iret
or
lret
cmp
mov
pushl
stos
pusha
and
cwtl
add
ljmp
ja
sbb
lock
imul
aas
into
mov
push
ret
xor
cltd
xchg
xor
pop
inc
aam
mov
cmpsl
std
lret
imul
sar
ljmp
ret
and
mov
pop
xchg
cwtl
xchg
pop
lods
mov
sub
das
sbb
jl
in
jns
jge
jbe
shlb
inc
stc
outsl
add
incl
pop
lret
test
xchg
mov
fildll
push
cmp
pop
mov
add
test
decl
or
or
inc
mov
push
xorl
push
sarl
leave
mov
nop
call
jo
sbb
cli
mov
cmp
mov
out
loopne
lds
and
es
mov
cmp
dec
and
jl
lret
cmp
leave
rcrl
push
insl
fisttps
fcomip
div
pop
adc
push
sub
sbb
add
push
and
push
ljmp
leave
jmp
leave
call
rcrl
inc
pop
lret
popf
fcomip
pushl
inc
mov
xorl
push
jl
adc
dec
jl
jno
or
jno
dec
inc
mov
and
jmp
push
adc
les
mov
mov
push
int3
adc
call
jle
rclb
negl
or
loop
jg
jo
mov
mov
xchg
mov
fstpl
sbb
dec
mov
loope
flds
cmp
flds
jbe
das
jmp
adcl
jle
xchg
pop
or
ret
ret
rcrb
sbb
leave
mov
scas
xor
adc
cmpl
dec
ss
mov
mov
adc
jl
test
adc
pushl
xor
mov
aas
xchg
dec
push
nop
dec
cmpsl
mov
xchg
cmp
orl
mov
mov
cltd
sahf
insb
inc
repz
les
ljmp
mov
nop
cmp
push
pushf
cmp
call
add
test
stos
shlb
fcomip
xor
je
add
push
loopne
mov
bnd
dec
incl
ret
and
and
mov
inc
and
arpl
jmp
sti
test
mov
imul
aas
stc
xor
and
mov
cmpsl
cmp
xchg
jmp
pop
in
lcall
sbb
ret
rcll
add
fistpll
adc
aaa
push
add
scas
test
jge
jbe
lcall
xor
movsl
int
sar
lret
sbbb
adc
add
jmp
xchg
inc
push
and
push
mov
xchg
dec
push
sarb
pop
test
mov
insb
and
push
mov
dec
jb
adc
mov
pushf
jns
incl
or
ds
ret
rcrl
sub
je
push
push
adc
es
daa
mov
int3
out
xor
pushl
loopne
out
push
or
mov
rcr
loopne
adc
ljmp
into
mov
xlat
nop
je
loop
fwait
call
insb
cvttps2pi
hlt
ljmp
xchg
inc
pop
push
test
mov
mov
ficoms
call
xchg
inc
mov
xor
in
mov
cwtl
repz
aad
mov
inc
pop
aaa
jg
and
xchg
and
sub
lds
and
mov
jne
jae
popa
cmp
lods
lea
push
shlb
or
xchg
out
and
adc
sub
mov
call
ret
stc
dec
mov
pusha
aas
aad
mov
push
in
loop
ljmp
pop
sbb
mov
lcall
inc
dec
nop
fisttps
loop
in
mov
fdivr
mov
and
mov
or
add
mov
dec
adc
outsb
and
dec
xor
int
jg
adc
xor
fldcw
stc
shld
lods
jno
pop
pop
push
push
inc
rcrb
loop
fiadds
adc
clc
nop
nop
xor
enter
aad
cld
fs
mov
cmc
push
jge
mov
jmp
push
mov
rcll
cltd
mov
fsubp
pop
pop
movsb
sub
xor
jmp
in
and
enter
lcall
leave
jle
pushf
outsl
xchg
mov
movsb
jg
mov
adc
inc
dec
mov
dec
xor
cld
ret
or
incl
mull
pop
pop
test
dec
pop
mov
rcrl
mov
xchg
ljmp
push
subb
or
and
xchg
sarb
lcall
aam
stos
lea
add
and
xor
in
loope
cmp
loopne
ret
inc
les
sbb
arpl
adc
jnp
push
xchg
mov
xchg
jmp
loopne
jl
push
sbb
or
fsubrl
xor
rorb
aas
inc
xor
or
sbb
dec
mov
jnp
push
mov
adc
fldenv
dec
loope
test
mov
adc
mov
addr16
adc
lcall
add
imul
or
jns
push
jg
mov
sbb
add
lcall
lret
pop
push
nop
scas
cmp
inc
mov
mov
mov
decl
push
ret
call
or
fdivr
pop
inc
xor
mov
out
arpl
sti
scas
ljmp
decl
adc
lods
sub
in
pushf
movsb
pop
cmp
int
les
xchg
cmpsl
or
and
xchg
or
clc
hlt
pop
dec
nop
inc
loop
mov
test
cmp
and
ss
mov
and
adc
js
xchg
push
xchg
dec
ret
adc
lcall
repnz
scas
cmpsb
outsb
mov
ds
pop
in
in
pop
dec
mov
cltd
orb
push
scas
add
xor
outsb
push
lret
nop
sahf
dec
mov
lds
xchg
dec
sub
adc
inc
pop
mov
leave
adc
fs
adc
mov
cmp
in
inc
adc
lcall
lcall
shll
fdivs
and
push
jnp
fs
inc
adc
push
ret
clc
mov
hlt
xchg
loope
pop
inc
inc
pusha
push
xchg
call
and
cmp
cmp
testl
push
and
mov
insl
mov
inc
popa
mov
arpl
je
lcall
pop
test
fiaddl
jo
insl
pop
pop
fmuls
ja
mov
and
push
jne
dec
mov
shlb
out
xchg
add
sbb
pusha
iret
add
dec
push
mov
mov
push
cmc
sub
xchg
jmp
sahf
and
mov
mov
loop
inc
inc
add
lods
sbb
je
jecxz
loopne
mov
jl
adc
inc
add
in
xchg
sahf
or
and
pop
mov
imul
es
xor
mov
push
xchg
push
dec
push
or
sarb
ret
mov
sub
push
pop
jmp
and
adc
add
cmp
in
fidivl
sbbb
daa
xchg
fwait
imul
xchg
iret
xor
ret
shll
sbb
xchg
xor
sbb
mov
std
aaa
es
cmp
mov
or
int3
rorb
inc
enter
lcall
out
push
je
movsb
lcall
test
add
cmp
add
sarl
jg
test
cmpsb
push
mov
xchg
js
add
push
out
mov
push
and
rorl
pop
xor
pop
xor
adc
shl
cltd
sub
sahf
and
call
test
adc
shll
nop
ret
adc
out
cld
add
rep
pop
adc
cmp
mov
push
sbb
jae
ret
adc
lea
rolb
and
std
mov
out
fcomip
decl
mov
add
or
mov
sbb
sub
inc
fcomip
xchg
rorb
loopne
adc
test
mov
ljmp
push
adc
inc
pop
jl
mov
dec
ja
fldl
inc
lret
test
das
pop
sar
fistpl
jb
mov
bound
jle
mov
and
popa
sbb
cmp
mov
imul
pusha
and
xchg
and
enter
mov
mov
or
pushl
stc
sub
mov
es
push
or
out
sbb
push
fdivrs
inc
out
jle
sbbb
lcall
inc
sub
enter
fisubl
rcrl
xchg
or
mulb
push
loop
imul
ljmp
fs
xchg
subb
dec
cmpsl
mov
sbb
push
jns
xchg
cmpsb
xlat
sub
fdivl
mov
xor
pop
pop
jg
push
lds
cmp
push
loopne
inc
mov
inc
pushf
decl
sbb
flds
bound
dec
or
pop
hlt
jmp
imul
adcl
adc
leave
inc
shll
pushl
popa
ljmp
adc
push
push
pop
sahf
js
dec
movl
call
movsb
sbb
test
cld
cwtl
imulb
sub
test
cmp
imul
jnp
mov
inc
dec
out
lds
inc
push
sbb
jmp
lret
add
or
xor
cli
mov
mov
rcll
popa
jo
clc
test
mov
mov
mov
jmp
repnz
cwtl
sbb
and
movsb
pop
test
es
or
fisubrl
inc
nop
and
push
call
rol
jmp
outsl
push
jmp
cmp
lret
fcompl
loopne
sahf
dec
rcrb
push
roll
xchg
jl
and
sbb
jle
inc
xchg
push
push
mov
jnp
xor
or
daa
loopne
add
mov
decl
mov
movsl
sti
test
add
mov
adc
dec
lock
xchg
xchg
sub
jle
repnz
cmp
hlt
dec
dec
add
addr16
cli
pop
shlb
stc
and
jmp
loopne
jmp
test
ret
xchg
push
in
add
test
xorb
dec
xor
pop
cmpsl
adc
xchg
add
test
add
lahf
sbb
push
pop
adcb
or
or
fs
rcl
pop
xor
fisubs
jmp
test
inc
insl
push
shll
fisttpl
adc
sti
outsb
mov
sbb
decl
outsb
adc
pop
inc
mov
add
or
mov
jle
mov
lcall
inc
cwtl
das
xchg
ret
jns
adc
or
repnz
push
popa
loopne
pop
adc
jo
mov
iret
push
xchg
inc
xor
jbe
into
out
adc
jecxz
cwtl
cmpsl
out
incl
inc
adc
lret
xchg
jmp
pop
sahf
test
lret
ret
orb
sub
jmp
adcl
js
pop
stos
pop
adc
push
xor
dec
mov
shll
scas
pop
out
xchg
pop
loopne
lcall
js
or
dec
shll
jbe
ja
addl
fldt
and
pcmpgtb
jo
mov
enter
scas
movsl
pop
mov
or
addr16
in
pop
ljmp
mov
mov
adc
and
test
das
clc
decl
sub
or
sbb
add
call
push
xor
push
jmp
jg
mov
jo
adc
add
mov
mov
fdivl
outsb
inc
xchg
ds
decl
or
pop
cltd
mov
jnp
leave
fmuls
imul
setp
dec
push
sahf
imul
in
mov
jecxz
jmp
ljmp
push
xlat
jp
inc
pushl
jge
cmp
bound
cmp
inc
addl
or
mov
push
fs
or
jg
adc
jo
xor
add
fidivs
jno
add
cmp
decl
or
js
incl
xchg
pop
cwtl
ds
roll
shlb
sbb
push
add
cmp
mov
sub
test
cmpb
incb
call
mov
or
repz
lods
adc
daa
push
nop
push
cmp
jno
ss
jbe
cmp
xor
cmp
ja
loope
pusha
mov
or
nop
and
and
out
pop
and
cmc
push
adc
rolb
mov
cmc
inc
loopne
inc
mov
movsl
pop
lods
in
jecxz
out
inc
cmp
inc
ret
call
cmp
dec
loopne
es
inc
fwait
stos
test
in
sbb
mov
call
call
iret
jge
mov
pop
sub
jg
in
bound
and
ljmp
inc
xchg
cmp
dec
ljmp
lock
adc
xorb
jnp
stos
jno
call
or
xor
ds
inc
mov
sbb
bound
add
or
jmp
jbe
int3
sub
sbb
jne
pop
rolb
or
mov
test
fwait
sbb
incl
loope
push
imul
sbb
cltd
inc
mov
push
jecxz
jno
push
scas
mov
incl
xchg
sbb
add
add
sub
mov
mov
in
push
inc
ljmp
xor
fldl
imul
insl
fld
mov
mov
and
xor
lret
jmp
dec
outsl
js
fadds
leave
ret
push
xchg
movsl
cmp
loopne
add
sub
and
in
testb
rcrl
shll
and
loope
call
ss
decl
push
mov
lcall
sbb
dec
sahf
inc
or
jmp
pop
and
cvtdq2ps
movsb
aas
mov
or
fmuls
xchg
cmpsl
pop
lods
and
pushl
decl
push
and
xor
mov
mov
pop
rcrb
insl
sbb
cmp
inc
or
clc
outsl
cld
mov
dec
cmp
mov
pusha
stc
test
arpl
daa
scas
add
ret
mov
mov
push
xchg
inc
cmp
test
xor
js
roll
add
pop
jmp
sub
inc
push
inc
gs
stc
inc
xor
data16
pop
cld
jg
push
out
pop
nop
sbb
aad
adcb
sub
fdivrl
pop
xor
pushf
push
loop
cs
xchg
stc
out
loope
push
push
cwtl
fdivs
jmp
clc
call
psubd
into
dec
push
xor
icebp
call
hlt
and
incl
aaa
push
icebp
iret
dec
sbb
decb
negb
pop
loopne
call
or
xchg
push
stos
xchg
jns
inc
mov
loopne
arpl
lods
enter
pop
loopne
out
leave
rolb
insl
inc
mov
sahf
loop
jmp
dec
and
stos
shll
nop
call
push
iret
call
xchg
add
adc
test
pop
xor
pop
xchg
xchg
xlat
ljmp
dec
cmp
bound
bound
mov
inc
clc
test
mov
clc
or
and
pop
decl
std
jle
icebp
jmp
jle
pop
and
les
lds
incl
sbb
xorb
mov
adc
xchg
or
or
outsl
pop
and
std
dec
jl
pop
rcll
stos
mov
and
in
cld
lock
in
jne
push
sarb
xchg
push
divb
inc
call
push
jle
add
lret
fldl2t
or
lcall
lcall
insl
mov
xor
pop
inc
cmp
lock
add
push
decl
jl
shr
push
sub
ret
adc
stos
mov
sbb
jne
sbb
jmp
xor
pop
sub
cmp
inc
sub
popa
add
aas
inc
and
dec
and
inc
in
dec
cmc
adc
jecxz
dec
jle
jecxz
mov
adc
sbb
adc
arpl
xchg
and
incl
or
rcl
cs
inc
sbb
lock
rcl
jns
bnd
test
mov
out
mov
and
mov
jle
push
pusha
pop
in
inc
fwait
incl
test
leave
or
lock
jp
dec
jae
xchg
lcall
jmp
jne
dec
mov
xor
cmp
jo
repnz
mov
nop
mov
mov
sub
pop
aam
stos
and
int
sahf
call
inc
nop
ret
add
mov
cmpsl
cmp
cltd
and
fmuls
xor
mov
dec
in
pop
addr16
inc
adc
js
sysret
or
repnz
loop
clc
fimuls
call
adc
fdivp
in
jo
ds
out
mov
inc
pop
mov
int
gs
push
cli
push
add
js
push
push
xchg
test
lret
sbbl
mov
and
sahf
inc
inc
inc
cmpsb
fwait
add
and
lret
jmp
shll
int3
rclb
loopne
adc
cld
subl
iret
xchg
in
dec
xor
adc
xchg
mov
mov
lret
push
addb
lea
int
mov
xor
ljmp
sbb
mov
push
cmp
jge
or
push
and
mov
jg
and
jno
push
popa
aas
sbbb
mov
or
xorb
loope
test
jmp
ljmp
and
push
add
mov
xor
push
pop
sub
dec
xor
ljmp
mov
divl
push
push
mov
push
je
adc
jg
or
xor
mov
mov
pop
push
adc
ljmp
push
mov
add
add
gs
cmp
je
pop
lahf
push
mov
clc
decl
popf
mov
and
je
outsl
jp
mov
ljmp
inc
sbb
jle
pushl
adc
popl
push
in
xor
mov
sbb
outsl
add
std
mov
mov
outsl
pusha
xchg
cld
into
cmc
add
pop
cmp
pop
xorb
mov
lock
sbb
inc
imull
jp
aas
push
push
inc
cwtl
inc
pop
cmc
push
adc
pushl
and
adcb
pop
adcl
and
enter
xchg
mov
pop
decl
push
in
rclb
and
das
xor
mov
and
add
testl
sbb
incl
sbb
add
xor
nop
mov
out
jecxz
cwtl
pop
je
or
arpl
jmp
or
xlat
sahf
add
push
lret
push
sbb
je
xchg
cli
sub
sbb
imul
dec
push
xchg
subl
cmpsb
xchg
subl
loope
cmp
rorb
incl
sarl
push
jae
mov
mov
inc
xor
sub
test
cmpsb
out
lock
leave
test
pusha
pop
and
add
das
scas
imul
mov
call
adc
xlat
mov
leave
rcl
aaa
inc
xlat
mov
popf
xor
pop
push
outsl
pop
and
stos
lods
mov
outsl
call
ds
or
inc
mov
push
cmp
dec
cmc
sbb
shl
jg
test
call
sbb
test
sub
inc
and
adc
and
pop
and
test
call
jg,pn
or
inc
imul
push
sbb
aam
mov
fs
call
or
adc
cli
pavgw
dec
repz
jp
jl
push
sbb
sub
jg
push
scas
addl
inc
jecxz
add
xor
mov
xor
lcall
sub
pop
imul
test
adcb
ds
xchg
mov
fcomip
incl
add
cmc
popa
xchg
xchg
leave
pop
aad
jmp
jmp
lcall
scas
sbbb
je
call
pushl
in
sbb
add
mov
in
sbb
test
cmp
nop
inc
mov
pop
cmc
mov
dec
fistpll
lds
jns
mov
daa
jl
jg
dec
clc
loop
lds
mov
sub
lcall
in
add
loope
inc
jb
mov
xor
dec
add
jle
jl
loop
jmp
decl
lock
pop
orl
dec
inc
pop
and
mov
call
mov
add
and
loopne
mov
cltd
pop
mov
jne
jl
inc
mov
sbb
stos
insl
in
cwtl
mov
xor
bound
outsb
orl
cmc
sbb
icebp
stc
cmp
ljmp
jl
js
push
fcompl
rcr
popf
popa
mov
sub
mov
jmp
mov
in
push
xlat
add
sub
ss
mov
cmp
push
mov
dec
test
mov
inc
xchg
adc
push
push
leave
addb
mov
cmp
inc
or
adc
outsl
clc
jmp
push
adc
repnz
aaa
fwait
sbb
jmp
and
sbb
outsl
cli
pop
in
mov
fidivrl
pop
add
mov
shll
sbb
xchg
or
xchg
bound
std
call
push
fimull
push
jb
jecxz
and
xor
aaa
and
inc
popf
pop
add
mov
fisubs
push
das
mov
in
push
dec
icebp
ret
push
adc
jp
push
and
jns
ljmp
sar
into
out
loop
mov
stc
rcrl
lret
adc
stos
jl
incl
pop
sbb
sti
add
sahf
ret
xchg
lock
mov
test
aaa
repnz
das
fiaddl
jmp
scas
repnz
sbbb
rorb
lea
addr16
jmp
xchg
enter
add
mov
mov
adc
addr16
adc
inc
jmp
xchg
or
out
pop
rcrl
fwait
and
jne
int3
lcall
jl
orl
jmp
scas
data16
mov
enter
cmp
sahf
add
mov
je
test
stc
xchg
xchg
adc
xor
jmp
mov
xchg
or
popa
fcmovb
pop
sub
jmp
xlat
or
lcall
pop
sub
clc
mov
mov
movsb
cmp
cmpsb
and
inc
mov
cmp
pushf
pop
push
sbb
sbb
adc
movsl
adc
xchg
cmpb
incl
adcl
adc
adcl
jb
dec
adc
leave
ret
call
xchg
mov
push
add
cmp
jnp
xchg
cmp
in
xchg
and
lcall
inc
out
aad
aam
ds
inc
repnz
aaa
cmp
mov
mov
andl
insb
daa
aad
or
iret
enter
xlat
ljmp
push
mov
mov
cmpsb
sub
adc
les
or
jg
inc
icebp
sbb
test
and
mov
stos
xchg
stc
or
mov
mov
loop
sahf
push
ljmp
mov
push
mov
nop
les
rorb
xor
sub
jmp
movsl
fs
inc
enter
call
fwait
clc
jl
pop
aam
not
stc
push
cld
daa
outsb
sub
lcall
cmc
mov
popf
clc
int3
inc
in
mov
rorb
and
jle
and
enter
push
nop
fcomip
mov
fdivs
jns,pn
movb
repz
dec
push
jmp
jno
lcall
sub
inc
xor
ljmp
xor
mov
mov
mov
add
inc
jge
cmp
dec
adc
in
lret
fstl
call
rolb
imul
mov
mov
loopne
in
jp
shlb
push
ljmp
mov
add
out
js
push
rclb
dec
loopne
movsl
pusha
cmpb
cld
mov
repz
dec
and
cld
push
cmpsb
icebp
pushl
decl
cmp
pushf
add
sarb
stos
aam
adc
clc
mov
call
and
dec
rclb
jg
push
into
test
xchg
movb
push
xor
push
cmp
decl
and
aam
jns
push
inc
in
dec
cld
aas
arpl
and
add
dec
pop
fsubrl
dec
mov
rcrb
ret
jo
cmp
cmp
mov
sbb
add
adc
dec
add
jno
inc
jmp
iret
stos
push
pop
out
xlat
decl
adc
scas
mov
cltd
int
inc
xor
xor
inc
cltd
xchg
or
or
popf
daa
inc
lock
ljmp
jns
jo
sub
out
push
fs
rorb
je
jmp
in
fisttps
aas
icebp
sub
test
inc
mov
add
add
push
mov
in
hlt
xchg
fadds
cmpsb
cmpsb
or
jbe
shrb
mov
and
xchg
mov
xchg
dec
sarb
stos
jmp
pop
cld
dec
ja
fists
and
mov
lcall
jns
inc
lods
andb
sub
xchg
mov
push
insl
ljmp
cmp
incl
sub
inc
sbb
adc
mov
int
sub
push
incl
mov
pop
cwtl
jb
rclb
mul
pop
ljmp
jmp
out
dec
sbb
in
ss
jno
fsubr
inc
testl
jmp
decl
fwait
adc
mov
jne
and
cmp
test
inc
jmp
iret
and
xor
daa
mov
mov
test
push
scas
mov
add
clc
push
sub
fisttpl
adc
imul
sbb
sti
fimull
push
and
mov
jnp
out
clc
push
push
cmpsl
jo
mov
pop
push
or
ljmp
inc
push
mov
cmpsl
add
cmp
cli
in
clc
mov
insb
add
jp
sarb
sub
inc
inc
mov
add
out
outsl
test
incl
pop
and
es
insl
mov
lcall
inc
xchg
shrb
das
clc
aas
sub
sahf
mov
enter
or
mov
incl
push
add
and
push
or
cld
xor
and
pop
lcall
ljmp
lock
int3
xor
nop
xchg
hlt
shrl
sub
jne
das
inc
aad
sbb
leave
pop
test
decl
divl
or
jb
ja
mov
xorb
cmp
stc
inc
push
shrb
lcall
test
jmp
in
inc
lods
int3
pop
sar
scas
test
jno
stos
mov
lahf
sub
incl
push
jb
fildll
mov
ljmp
enter
cmp
lcall
sbb
in
mov
lock
cmp
iret
lret
dec
jecxz
push
repz
cmpsl
add
dec
das
push
leave
or
cmpsl
jmp
fdivrl
mov
inc
and
push
ret
int
fidivs
lods
mov
xor
roll
outsb
lcall
dec
icebp
and
xchg
fimull
test
xchg
lcall
lock
sub
cwtl
cs
dec
cmp
iret
rclb
cmc
jp
push
aas
jp
add
pop
popl
add
or
bound
adc
xor
decl
lds
lea
push
jne
je
xor
movl
incl
mov
or
xchg
mov
stos
aas
shrl
cltd
xor
xchg
and
in
sub
mov
add
das
mov
mov
dec
pusha
inc
std
add
stos
addr16
mov
cmp
push
or
sub
sub
sub
or
rcrl
or
in
xchg
js
xor
arpl
sub
inc
cmp
jg
rol
jo
sub
leave
jns
outsb
sbb
or
pop
mov
cmp
std
pushl
or
and
jp
dec
jecxz
xor
add
popl
out
add
inc
fwait
ljmp
daa
jno
cwtl
pop
pop
imulb
xor
or
incl
adc
mov
test
jmp
push
iret
sbb
ljmp
mov
mov
or
out
mov
in
cld
pop
lcall
mov
lock
roll
add
mov
rcl
add
std
pushl
inc
lahf
shrb
pop
in
adc
ljmp
or
movsl
adc
mov
enter
mov
mov
pop
jnp
sub
push
out
or
or
movb
imul
fwait
shll
hlt
cli
inc
dec
leave
adc
loopne
in
push
mov
loopne
cmp
adc
ljmp
dec
adc
adc
shrl
jb
adc
lahf
adc
adc
xchg
add
mov
push
sub
sbb
aas
xchg
sti
shrl
aas
jbe
mov
cmpsb
rol
sahf
inc
dec
daa
and
ljmp
cli
jmp
lea
mov
dec
notb
mov
pop
add
ljmp
setnp
push
push
jb
push
daa
jmp
cwtl
iret
pop
nop
add
pop
mov
cli
pushl
inc
sbb
sbb
adc
sahf
and
push
mov
stos
xchg
je
pop
js
rclb
or
xchg
adc
pop
lock
pop
sub
lea
dec
pop
sbb
jecxz
rorb
inc
inc
dec
and
xor
clc
fsubl
xchg
jmp
test
push
sub
cmpsb
roll
pop
or
cmp
xchg
clc
jmp
push
mov
addr16
ja
cmp
push
push
stos
xor
cmp
loope
xchg
dec
mov
leave
iret
repz
call
sbb
push
jle
push
mov
push
sub
fsub
lock
fbstp
sbb
cli
jno
js
dec
faddl
xchg
mov
aas
loope
daa
decb
sub
nop
dec
push
and
lret
insb
sbb
add
loop
lcall
inc
cmpsb
jmp
neg
dec
jo
bound
insl
sub
stos
adcb
xchg
adc
movsl
xchg
call
jmp
int3
out
sahf
in
jmp
repz
pusha
stos
decl
mov
pop
mov
scas
cmp
and
fstl
dec
inc
repnz
subl
mov
xor
mov
lret
sarb
pop
add
ljmp
sar
mov
pusha
data16
jge
clc
inc
and
xchg
mov
lcall
ret
pop
and
cld
and
aas
int
cli
call
and
xor
jge
push
fsubs
mov
test
ljmp
cmp
gs
rorb
xor
movsb
fiaddl
pushl
mov
addb
sbb
inc
outsl
jnp
sbb
lahf
test
daa
xchg
call
mov
mov
mov
ret
cmp
mov
jmp
cmp
adc
shrl
call
in
adcb
xor
scas
cltd
inc
and
call
cmp
lahf
call
pop
ret
dec
test
lcall
dec
or
ljmp
xchg
test
in
mov
sahf
negb
iret
daa
push
jae
call
stos
std
xor
or
jne
xchg
mov
hlt
hlt
les
incl
jmp
sbb
sbb
push
mov
cwtl
popf
sbb
incl
or
cmp
add
hlt
ja
pop
aad
cli
push
popf
arpl
das
mov
xor
incl
out
cmp
cld
icebp
jbe
mov
out
cmp
pop
pop
fdivr
push
push
xchg
jae
scas
xor
imul
jne
dec
lret
add
push
call
xchg
pusha
mov
lcall
je
sahf
lret
add
sub
jl
add
pushl
mov
mov
adc
out
push
sar
shll
jp
imul
decb
sbb
adc
orl
add
xchg
lock
fnstenv
enter
sar
xchg
xor
lret
je
mov
mov
inc
or
jg
lcall
adc
inc
rcrb
scas
dec
jbe
add
les
lahf
adcb
dec
or
test
js
xchg
jnp
inc
je
jl
std
roll
adc
cmp
jge
ljmp
sbb
faddp
mov
popa
lea
mov
sub
aad
mov
xor
pop
sbb
rolb
push
loopne
adc
pushl
es
jne
or
int
rorb
add
pop
dec
lods
add
sbb
mov
xor
gs
movsl
push
xchg
sub
dec
add
add
mov
or
push
sti
sbb
cmc
cmp
xor
xchg
sbb
jmp
cltd
inc
push
incl
pop
jb
xor
push
roll
sub
dec
ja
add
out
pop
adc
andl
inc
push
sbb
les
lds
in
pusha
lock
dec
lret
adc
or
add
cwtl
adc
cmpsl
mov
and
in
jecxz
xlat
jmp
addl
subl
loopne
or
fwait
dec
push
push
mov
push
jg
jo
inc
sub
inc
lock
inc
and
adc
lret
out
mov
in
test
mov
sub
add
push
jl
mov
cmc
jo
add
or
cltd
int3
sbb
or
add
sub
jo
rclb
mov
pop
es
jg
mull
sub
cmp
jp
inc
dec
inc
daa
pusha
inc
and
test
push
add
enter
mov
mov
push
je
xchg
pop
test
out
push
inc
dec
dec
clc
xlat
push
inc
call
incl
dec
push
lret
sbb
lds
insl
dec
sub
lahf
or
and
dec
pop
decl
or
push
cltd
out
mov
pop
sub
in
decl
lock
xchg
jbe
insb
or
jae
push
rclb
movsl
incl
add
je
jb
stc
push
xchg
fwait
sarl
and
mov
or
mov
imul
idivb
adc
lods
in
and
je
lods
comiss
pop
cmp
push
xchg
test
int
mov
push
jno
xor
mov
mov
add
xchg
stos
inc
mov
sbb
scas
std
lock
jno
lret
loopne
inc
pop
xlat
lcall
into
adc
and
cltd
or
es
nop
add
mov
inc
push
xor
ja
jg
loope
adc
adc
daa
addb
mov
lds
aam
cmp
fildl
jge
ret
repz
xchg
mov
sbb
adc
mov
xchg
nop
xchg
dec
adc
or
movsb
mov
inc
mov
pop
adc
ret
fdiv
mov
add
fcoml
std
cmp
sbbb
mov
ja
jmp
mov
mov
ss
dec
ret
or
lods
sahf
scas
pop
mov
and
inc
xor
pop
enter
add
jp
mov
mov
add
mov
xor
stc
out
fcoms
ljmp
push
cld
lret
cmp
xchg
push
shll
addr16
pop
sub
lcall
jne
or
cmc
sbb
inc
add
dec
sbb
mov
adc
iret
push
ds
and
subb
sub
xor
orl
icebp
mov
decb
pop
add
out
push
loop
call
pop
fstps
loop
bound
rorl
pushl
or
dec
inc
gs
stos
adc
adc
add
and
les
adc
fmulp
push
loopne
js
mov
sub
and
test
lcall
mov
mov
sti
movsb
add
mov
repnz
filds
lods
xchg
call
aaa
je
enter
sub
jecxz
int
lods
pusha
and
fmul
das
divl
xchg
out
mov
push
xchg
jns
das
or
sub
jp
inc
cmp
push
mov
test
jnp
mov
push
inc
add
cmp
int
ret
clc
adc
rorl
pop
aas
adc
lahf
xchg
cltd
xchg
test
dec
loope
jg
shlb
jnp
dec
push
pop
lds
jmp
and
roll
lods
adc
ljmp
xor
sbb
pusha
mov
dec
cwtl
dec
push
imul
outsl
adc
sarl
ret
and
add
lret
fdivrs
inc
cs
pop
fisubrl
loopne
ljmp
pop
adc
push
in
dec
movlps
add
popf
ja
sub
mov
js
xor
mov
xor
ja
pop
pop
pop
sbb
jg
js
xor
cmp
ficomps
cmp
xchg
dec
push
jnp
and
or
ds
jmp
or
call
adc
mov
jecxz
lea
cmp
jmp
clc
test
sahf
orb
adc
flds
subb
ljmp
xchg
imul
and
xor
xor
or
mov
push
movsb
ja
movb
sub
add
fstpl
call
adc
loop
pop
fidivl
ret
sbb
or
add
sub
xchg
loope
rcrb
push
or
xchg
call
pop
fdivrl
cmpb
add
xor
repz
and
cmp
in
iret
in
mov
lds
add
mov
cmp
pop
add
loop
inc
jo
jns
call
sbb
sbb
ret
pop
xlat
and
push
rolb
dec
xchg
ret
call
call
or
mov
mov
push
call
mov
sub
add
stos
mov
adc
repz
jg
lahf
xchg
add
hlt
push
pushl
imul
or
popaw
shld
and
mov
add
ljmp
inc
dec
cld
adc
sarb
sub
pop
inc
cmpsb
cs
mov
adc
push
bound
icebp
cmp
pusha
push
inc
lret
add
dec
pop
insl
fsubrp
jle
push
sbbb
mov
stos
mov
jecxz
sub
dec
jg
nop
jmp
pop
rorl
pop
pop
cmc
lock
dec
xor
xor
scas
dec
adc
push
into
cmpsl
out
inc
pushf
push
jp
imul
iret
sbb
push
add
mov
fdivrs
popf
push
lea
jl
xchg
shll
mov
stos
push
xchg
test
jge
add
clc
jmp
jmp
das
cmp
ljmp
cmp
aaa
lahf
cmpsl
fwait
push
xchg
mov
cmp
fisubs
sub
fcompl
xchg
sbb
sub
and
les
int
xor
push
movsb
adc
popa
cld
inc
xchg
es
decl
adc
add
test
xchg
int3
and
in
inc
xor
jbe
mov
ds
pushl
jle
mov
bound
adc
das
push
lods
ljmp
jl
sbb
call
movsl
fistps
arpl
inc
rcr
dec
mov
add
fsqrt
ljmpw
xchg
and
sar
adc
in
or
subb
or
out
adc
pushl
inc
scas
in
test
cmpsb
push
cmp
mov
lcall
mov
or
add
fdivr
aas
insb
aas
or
test
push
push
xchg
fsubs
inc
or
rclb
les
and
jmp
cmp
jb
or
push
incl
cmpsb
ljmp
cmc
xchg
push
mov
dec
mov
mov
pop
jbe
push
adc
call
std
or
adc
testl
sbb
fwait
cmp
sbb
fdivl
pushl
test
fdivs
jb
jecxz
cmc
add
stos
xlat
pop
adc
dec
cmp
mov
xor
lret
call
data16
jo
gs
xlat
enter
cmpsb
push
lcall
mov
lds
xor
iret
push
jno
lahf
mov
or
mov
out
or
rclb
cltd
unpckhps
push
fmuls
cmp
mov
jl
loopne
movl
jecxz
stc
jle
mov
add
lcall
and
push
incl
xchg
adc
xor
daa
jns
cmp
dec
xor
pop
in
dec
aad
push
xchg
inc
aad
int
pushf
add
jmp
inc
xlat
mov
or
cmp
cmp
and
pop
lods
and
scas
stos
aas
add
mov
xor
cmpsb
inc
cmpsb
insb
pop
andl
into
adc
cmc
jmp
js
adc
clc
mov
fwait
sbb
jp
scas
push
scas
fsubs
cmp
sahf
xchg
jmp
std
sbb
pop
mov
dec
sbb
cmp
xchg
add
ret
ljmp
cld
xor
gs
sbb
data16
add
or
xchg
sti
movsl
sar
cmp
in
xor
mov
and
inc
inc
int3
mov
xor
and
call
push
daa
rcl
ljmp
sbb
mov
cwtl
jb,pt
push
loopne
sbb
dec
dec
stc
aaa
repz
ror
sbbb
dec
adc
jbe
sbb
sub
nop
call
or
imul
mov
shl
mov
cmp
push
mov
mov
lret
push
sub
inc
inc
push
call
sbb
data16
lcall
inc
aam
jg
add
test
mov
fsts
nop
andl
xor
popw
cli
lcall
stos
push
mov
mov
ja
or
outsl
sar
test
adc
pusha
or
dec
pop
stos
cmp
lcall
test
dec
or
xchg
inc
xor
std
or
pop
loopne
add
cli
test
insb
lret
xlat
lcall
push
jae
dec
bsr
inc
and
ljmp
sbb
fmul
cmp
jb
incl
andb
jecxz
cltd
lds
lea
lahf
push
outsl
xchg
jb
rcrb
push
data16
decl
jmp
sub
cwtl
clc
mov
mov
and
xchg
scas
ss
mov
std
or
push
push
inc
fdivrl
add
or
mov
mov
fwait
das
jns
inc
daa
xor
decl
or
stos
jo
sti
add
leave
aam
test
dec
cmp
outsb
lahf
and
popf
and
push
cmp
or
or
sbb
add
adc
jle
pop
jns
and
iret
jno
sar
pop
cmc
mov
fxch
adc
jl
mov
dec
or
rorb
jg
xchg
pop
inc
jge
ds
pusha
mov
add
xor
and
jecxz
adcl
pushf
repz
or
add
sub
xor
pop
xor
pop
inc
jo
adc
inc
or
loope
cld
mov
sahf
mov
fldl
mov
pop
xor
lcall
in
push
mov
iret
xor
bnd
add
sub
and
xchg
xor
xchg
incl
aad
jl
jno
jne
dec
shlb
dec
sbb
or
loope
int
lock
call
movsb
hlt
adc
jecxz
int3
std
hlt
jmp
jp
out
jne
inc
arpl
mov
stos
sbb
sbb
into
inc
add
stos
pushl
xchg
frstor
mov
cmp
cmp
sahf
ss
mov
adc
dec
and
inc
pop
mov
inc
and
and
push
sub
vpmacsdql
rep
lock
and
xor
sbb
daa
add
add
dec
and
mov
sbb
sub
pop
push
jge
test
inc
xchg
lcall
pusha
cmp
std
cwtl
mov
push
add
ret
jb
and
cmp
es
cli
dec
call
lcall
sub
rcrb
nop
mov
inc
dec
aam
ja
loopne
incl
movl
push
mov
out
test
lret
jmp
pushl
inc
cli
ds
ljmp
inc
clc
add
lea
dec
call
jl
mov
mov
ret
mov
outsl
inc
push
lock
adc
jo
stc
sub
mov
call
ja
add
add
mov
adc
pop
sbbb
or
cmp
push
pop
lock
pushl
mov
xchg
mov
pusha
cmpsl
addr16
clc
mov
decl
rcrl
dec
or
add
insl
mov
push
xchg
and
adc
sub
cld
pop
mov
push
out
jecxz
cmpl
pop
adc
dec
outsl
bound
fisubs
stc
xor
mov
movsl
or
cs
mov
xchg
loopne
jmp
roll
cmpsl
imul
cmp
clc
incl
push
jmp
adc
inc
adc
mov
icebp
inc
decl
icebp
push
and
xlat
jge
push
push
bound
mov
jmp
or
cmp
fsubs
es
push
fcoml
dec
push
jo
notl
sbb
inc
in
inc
mov
ds
nop
test
dec
adc
int
push
inc
call
das
cli
incl
sbb
mov
jo
mov
mov
ljmp
sbb
mov
leave
inc
popa
xor
adc
lcall
popw
loope
or
jbe
add
iret
cmovg
push
dec
xchg
cmp
incl
dec
adc
hlt
lds
mov
adc
imul
sub
lcall
dec
aad
xchg
test
call
stos
and
loope
clc
lods
movsl
ss
mov
fwait
adc
incl
add
cmp
adc
sbb
test
xor
bound
adc
and
push
and
sti
xchg
mov
push
cmp
mov
xchg
jne
test
lods
sbb
add
cli
fadds
bound
aas
inc
test
push
mov
inc
and
call
shll
inc
jge
ja
vcvttsd2si
lcall
push
testl
jno
pop
std
popf
int3
addl
loope
adc
faddp
mov
jg
xor
iret
dec
add
sub
xchg
pop
push
inc
aas
mov
popa
adc
rorb
mulb
decl
jecxz
and
sarl
sub
inc
call
xor
in
scas
clc
mov
and
mov
es
jmp
roll
fisubrl
imul
adc
cltd
ja
xor
lret
mov
cmc
and
or
sbb
push
mov
mov
out
gs
jae
jecxz
adc
clc
adc
pop
out
and
icebp
incl
adc
inc
inc
jns
add
repnz
mov
mov
inc
and
ss
xchg
gs
xchg
cs
lcall
add
std
inc
add
mov
icebp
dec
mov
push
push
inc
adc
fcomip
fsubrl
sbb
xor
lods
aas
scas
ret
sbb
into
xchg
push
mov
rorl
mov
xor
mov
cmc
pop
call
ljmp
and
jge
mov
pushl
adc
xchg
scas
sub
sbb
dec
jp
sbb
aas
gs
jecxz
mov
subl
pop
int3
sub
stos
push
outsb
popf
sub
push
or
push
lret
add
orb
in
outsb
loop
decl
sbb
outsl
mov
in
lds
cmp
fs
push
inc
mov
xlat
pop
adc
loope
mov
fcomps
mov
adc
push
and
jo
xor
pop
js
inc
call
pop
mov
in
add
sti
add
js
dec
rolb
push
int
cmp
lcall
aam
and
or
or
jl
push
inc
push
call
xchg
in
jp
add
clc
xchg
mull
leave
adc
shlb
sbb
inc
cmp
pop
push
aad
xor
jp
popf
or
adc
push
xchg
sbb
jl
pushl
xor
and
and
mov
std
xor
pusha
jle
ljmp
sti
arpl
and
decb
loop
inc
push
mov
out
mov
in
stos
inc
xor
xchg
cmc
jo
rcrl
xchg
insl
test
pop
cmp
sub
mov
lds
incl
jl
sbb
sbb
into
jno
imul
add
jno
cmpb
sbbb
out
addl
lret
lods
cs
xor
fldenv
push
mov
call
mov
mov
clc
in
mov
out
adc
orb
pop
sysret
lahf
imul
cs
xorl
rcr
mov
push
scas
sbb
jno
std
fsubs
cmp
pushf
aam
mov
xchg
pop
decl
scas
cmp
sbb
xchg
push
jnp
xor
popa
mov
xor
fcomip
call
data16
jno
mov
sub
or
push
clc
icebp
out
dec
mov
inc
aam
gs
xor
scas
pop
jne
and
dec
push
fistps
xchg
clc
pop
sbb
movnti
pushl
flds
mov
sbb
movsl
xchg
inc
add
fsubl
sbb
gs
decl
sbb
enter
and
xor
sub
and
and
jbe
nop
jecxz
jl
xchg
and
xchg
cmpsb
aad
push
and
xor
cwtl
push
or
in
pop
pop
jb
push
add
sbb
decl
push
inc
cmp
stos
cmc
aad
data16
xor
cmp
call
loopne
scas
adc
movsb
test
shl
cmp
push
cmp
push
shll
std
pushl
push
mov
pandn
fiadds
popw
sahf
jo
xor
push
and
call
and
pop
sbb
dec
jge
cwtl
aam
jb
test
jle
clc
sti
xchg
test
hlt
mov
mov
orl
add
pop
mov
lcall
cmp
pop
in
lock
jmp
inc
mov
pusha
fwait
pop
popf
dec
pop
int3
or
adc
aad
lcall
popa
sbb
add
lds
cmpsl
jl
mov
bound
inc
imul
xlat
jg
mov
jns
subl
lds
fs
add
mov
ljmp
jnp
shl
and
pop
push
cli
inc
xchg
sub
mov
call
loopne
jns
test
dec
lahf
and
sub
and
ljmp
mov
xor
jg
xchg
pop
add
fisubrl
test
add
mov
and
push
outsl
aas
cmp
cvtdq2ps
mulb
cmp
push
addl
push
into
in
push
mov
pop
ljmp
cmp
dec
and
xor
aaa
push
xor
pop
dec
out
pop
fs
or
xchg
xchg
add
adc
push
inc
jg
inc
inc
or
mov
dec
xchg
cwtl
lock
push
xchg
jle
out
mov
or
outsb
movsb
decl
xor
in
push
cmp
cmpb
pop
push
daa
and
lret
idiv
decl
mov
jmp
xor
sbb
es
add
repnz
std
jmp
or
jo
or
or
stc
push
cmp
sub
mov
incl
and
loope
or
xor
mov
imul
mov
stos
test
cmc
mov
or
dec
sub
pop
cmp
sbb
aad
cld
lcall
fs
push
in
or
xchg
leave
ja
out
idiv
xlat
fstps
mov
mull
inc
sub
adc
icebp
and
or
mov
call
xor
mov
adcb
scas
test
add
and
inc
add
inc
sbb
aam
incl
xlat
addb
imul
lret
pop
cmp
mov
cli
push
fidivl
sarl
out
mov
gs
incl
add
sub
mov
pop
int3
lds
pop
dec
dec
pop
mov
incl
adcb
dec
es
flds
inc
adcl
or
dec
and
push
adc
outsl
mov
and
push
mov
cmp
inc
cwtl
and
in
shlb
incl
push
into
test
sbb
bound
xorl
adc
mov
jb
mov
cmp
jnp
incl
pusha
mov
mov
dec
add
adc
lcall
xchg
xchg
sub
sub
sbb
dec
std
and
mov
xor
or
out
mov
pop
mov
jns
xor
out
les
call
out
push
jp
es
cli
mov
in
mov
pop
sub
jmp
inc
mov
pushl
push
adc
movsb
js
lcall
outsl
jle
js
xchg
test
dec
loopne
pop
fdivs
or
inc
jl
inc
push
ss
test
fmulp
xchg
jle
pushf
dec
iret
aam
add
icebp
popf
lds
incl
xor
test
aam
mov
in
in
xlat
inc
cmp
sbb
inc
cld
xchg
clc
inc
int3
adc
test
sub
inc
mov
pop
pusha
adc
inc
pop
xchg
xchg
call
loopne
je
sub
inc
sete
adc
jle
test
ljmp
pushl
fistpll
inc
push
mov
stc
inc
adc
jg
dec
sbb
ds
pop
adc
mov
jbe
mov
sub
lcall
insl
leave
shll
movsb
jmp
mov
sub
fdivr
mov
cmp
or
mov
pushl
jae
inc
mov
cmp
mov
pop
inc
insb
imul
pusha
and
mov
pop
addl
repz
push
lret
push
jbe
hlt
sbb
rcrl
clc
mov
sub
dec
push
push
push
dec
sbb
cmp
orl
popa
push
push
adc
and
or
pop
ljmp
dec
nop
sbb
int3
xchg
jge
mov
iret
in
mov
mov
insb
mov
pop
or
mulb
lock
popa
jo
cmpb
adc
out
leave
pop
call
mov
into
loope
adc
ljmp
add
pop
cmpsl
imul
stc
gs
add
mov
cmp
aaa
mov
popa
fimuls
inc
pop
cmc
loopne
cmpsb
and
cltd
xor
and
jg
insb
cmc
mov
mov
incl
sub
lcall
pop
pop
or
sbb
push
jmp
pusha
and
mov
inc
jp
int3
inc
call
data16
sub
cld
test
cld
lds
mov
loop
inc
sub
push
cmp
cwtl
rol
andl
pusha
je
sub
stos
mov
push
xchg
xor
sbb
mov
xchg
scas
jmp
les
sti
cmpsl
ljmp
out
out
jp
sub
xchg
mov
imul
out
in
adc
jmp
sub
pop
int
adc
repz
sbb
dec
fldcw
ljmp
adc
dec
in
out
in
mov
bound
push
mov
in
mov
cld
inc
mov
sbb
xchg
mov
loop
jmp
and
lock
adc
xchg
cli
push
sbb
out
fsubrl
in
lcall
mov
or
push
xor
cmpsb
rorl
adc
dec
xor
jle
pop
pop
inc
int
dec
adc
sub
scas
loope
and
mov
out
xor
add
mov
ret
scas
or
add
data16
jmp
mov
add
push
xor
mov
mov
test
addb
shlb
test
push
inc
enter
insb
sub
xchg
es
jmp
cmp
cmpsl
or
add
or
inc
xor
and
jmp
ljmp
cmp
add
or
xlat
and
out
movsb
xchg
sarl
test
sar
jmp
inc
popa
push
and
std
js
sbb
bound
and
ret
rcl
or
call
in
les
dec
pop
push
cli
inc
cmp
pop
mov
inc
ret
rcl
jne
lock
inc
add
dec
mov
cs
fmuls
sbb
adc
mov
cmpl
ja
sub
sub
push
jmp
fldcw
incl
sub
push
xor
jmp
lret
sahf
sbb
cmp
jb
call
pop
mov
mov
push
ja
fst
movl
ficoms
pop
jae
pop
test
seto
xchg
add
sbb
push
push
aaa
mov
bound
dec
insb
gs
xchg
add
push
movsl
mov
cmp
mov
sbb
cwtl
xchg
add
sbb
rorb
push
test
jecxz
adc
sub
xor
and
xchg
incl
xlat
sbb
je
cmp
adc
lcall
out
pop
cmp
aas
nop
mov
pushl
mov
inc
push
mov
xchg
and
or
pop
mov
or
ja
cltd
push
mov
inc
mov
pop
dec
sub
pushf
inc
push
std
mov
dec
icebp
int
dec
in
and
cmc
xchg
adc
jecxz
jne
mov
lock
adc
aas
daa
in
xor
xchg
dec
inc
pop
inc
add
loope
enter
mov
cmp
pop
jo
outsb
jnp
mov
aas
dec
subb
out
and
out
incl
shrb
mov
loope
pop
pusha
adc
leave
xor
jno
ljmp
add
xor
push
lret
push
and
es
xchg
jge
popf
pop
pop
xor
incl
sub
or
mov
jmp
adc
std
xchg
jp
pop
sar
add
mov
ljmp
adc
adc
adc
mov
xor
std
scas
inc
mov
icebp
dec
stc
in
adc
or
mov
stos
ljmp
dec
sbb
nop
mov
gs
imul
pop
fistps
or
xchg
fcomps
add
mov
mov
xchg
into
or
add
dec
lahf
mov
or
fbstp
lcall
cmpsl
mov
test
inc
les
mov
incl
mov
xchg
insb
adc
dec
lock
sub
or
scas
gs
jb
lahf
xchg
lret
jmp
addr16
inc
stc
lds
hlt
test
or
call
add
aad
cmp
lods
mov
dec
dec
out
je
pop
push
mov
lods
pop
std
xchg
lcall
mov
sbb
sub
and
xchg
std
lahf
mov
outsb
inc
loop
pop
sub
negl
stos
andl
test
inc
sahf
sar
mov
dec
ss
sub
or
adc
sbb
das
es
adc
jmp
or
sahf
mov
stc
push
adc
cmpsb
lret
cmp
mov
in
scas
adc
mov
ds
addr16
push
aad
int3
or
aad
incl
addb
jg
xlat
cmp
test
mov
add
cmp
lds
pop
hlt
mov
dec
mov
int
jb
jge
stos
cld
test
xchg
add
xor
imul
cmp
shl
push
lret
fstl
add
lret
cmp
gs
xchg
ss
xor
fisubrl
decl
and
jle
xlat
bound
ret
jl
jae
mov
ret
lea
mov
pushl
lods
add
and
jns
lret
nop
fsubs
mov
jle
movsb
dec
sub
mov
inc
or
outsl
clc
jle
jge
or
ja
je
out
rcl
lcall
sub
inc
popa
movsb
fcomp
out
inc
dec
aaa
sub
mov
lea
outsb
cmp
inc
gs
dec
scas
and
decl
or
add
pop
test
and
arpl
mov
xlat
lds
inc
mov
xor
orl
sbb
loop
adc
xor
adc
sbb
jg
adc
mov
cli
inc
leave
cltd
sub
arpl
mov
xor
mov
xlat
sbb
cmp
and
sbb
stc
pop
daa
jg
xchg
add
push
sub
mov
lcall
decb
and
rcr
fbstp
push
inc
dec
out
sub
mov
in
iret
push
or
out
loop
adc
mulb
or
clc
adc
sub
outsl
cli
jg
aaa
std
and
dec
pop
jp
mov
cli
dec
adc
shll
scas
cmp
sbbb
pop
jne
frstor
iret
fidivrl
fldcw
pop
and
cmp
aad
mov
bound
dec
mov
lahf
cmp
jle
mov
iret
push
cmc
push
adc
jbe
ljmp
pop
mov
xor
pop
push
call
dec
loopne
fisubrl
lahf
pop
pop
sbb
je
shll
movsl
out
sbb
and
pop
std
cmp
jmp
fs
fbld
jg
ljmp
mov
pop
std
imul
sbbb
leave
and
mov
lcall
incl
jne
xlat
out
mov
bound
rorl
mov
adc
ds
incl
sbbl
out
add
arpl
ret
sub
call
push
imul
daa
js
lcall
inc
jmp
aad
dec
pop
repz
adc
dec
insb
into
xchg
and
cmp
lcall
in
xchg
jno
outsl
push
inc
push
add
out
jp
cwtl
stc
add
sbb
add
call
lods
xchg
xorb
sbb
sbb
sub
and
clc
je
stc
cld
aam
nop
sub
call
pop
insl
ljmp
adc
mov
cmp
inc
xor
sub
shl
add
mov
mov
imul
or
jno
hlt
xchg
adc
cmp
jl
aas
ficoms
cli
pushl
imul
sbb
xor
lds
test
sahf
lret
adc
mov
and
jg
mov
sbb
test
mov
sbb
sbb
aas
or
pop
dec
xor
mov
int3
jmp
xlat
push
add
cmpb
add
cs
xchg
pop
enter
sub
cwtl
fs
dec
jae
dec
cmp
mov
mov
fildll
leave
mov
fbstp
pop
inc
or
xor
and
sar
jmp
test
lea
aad
out
xchg
xor
or
lcall
call
xor
jns
xchg
push
fdivrp
xchg
sbb
fildll
test
mov
decl
int
cmpsl
cmpsb
fs
xor
insb
lcall
clc
call
shrl
test
fsubl
jnp
stos
mov
and
jg
hlt
movsb
lds
xchg
or
hlt
add
mov
movsl
call
mov
fcomp
ret
sub
pop
rorl
les
es
add
cli
pop
mov
add
mov
aad
rcl
mov
ljmp
pop
inc
sub
scas
xchg
jmp
repnz
cmpl
fdivr
incl
cmc
add
das
in
cld
xor
xchg
enter
push
jp
mov
push
and
mov
jo
or
pushl
fidivrs
out
insl
stos
mov
jnp
out
pop
add
sti
inc
sarl
lcall
sub
mov
inc
sbb
add
cmpsb
and
pushf
pause
test
divw
incl
dec
repnz
and
stos
inc
icebp
dec
shll
in
cmpsb
sahf
xor
mov
incl
in
pop
stc
push
cs
add
lea
mov
fisttps
rolb
out
insb
xor
das
sar
sahf
and
mov
pusha
add
mov
mov
jb
or
jmp
je
push
lret
bound
xor
sbb
adc
addr16
lcall
into
cwtl
cmp
lcall
xor
adc
cmp
mov
push
pop
cmp
dec
mov
inc
dec
cmpsl
and
into
xchg
mov
and
incl
cld
test
lea
inc
jp
inc
lds
call
mov
les
mov
in
ds
add
inc
add
adc
xchg
mov
loope
sbb
call
enter
lds
xlat
jmp
mov
cmpsl
dec
pop
cmp
pushl
adc
jnp
rcrb
xchg
movsb
mov
pusha
mov
pop
popa
int3
ja
fucomip
rcrl
adc
enter
shrl
js
cli
clc
xor
xor
push
data16
lcall
ljmp
les
mov
push
inc
adc
bound
adc
lahf
cmp
lcall
nop
ja
addl
orl
setns
out
cmpsl
inc
jb
imul
je
pushl
jae
adcb
and
jle
les
incl
and
fstl
neg
rcrl
cmc
test
pop
inc
in
cmp
and
inc
loopne
lcall
loope
jnp
adc
inc
inc
dec
dec
xor
adc
mov
fildll
pavgb
mov
inc
es
cmc
mov
and
shll
nop
push
incl
fdivs
push
out
popf
fwait
roll
cmp
xor
push
insl
add
add
stos
push
incl
sar
test
and
scas
clc
mov
out
and
jmp
les
inc
loope
add
scas
int3
outsb
cmp
lahf
push
and
ljmp
jnp
pushl
xor
imul
adc
cwtl
xor
pusha
fs
and
xor
or
cmc
insb
mov
call
cmp
sub
mov
stos
sbb
xor
jbe
enter
loopne
sar
incl
cmp
push
mov
fdivr
mov
push
insb
nop
xor
mov
jg
ljmp
mov
adc
xchg
ret
add
xor
movsb
imull
dec
add
jg
xchg
dec
ss
insb
mov
lahf
in
imul
loopne
movsl
or
dec
mov
decl
jb
xor
aas
add
mov
lcall
xchg
hlt
xchg
fdivr
call
movl
pop
shll
xor
pop
cmpsl
aam
dec
pop
incl
xor
sub
add
add
mov
nop
add
cmpsl
push
shr
cltd
push
and
jmp
xchg
dec
cmp
ror
push
inc
push
sbbl
add
mov
or
fstpt
cmp
cmp
decl
jl
test
adcb
push
add
cwtl
sahf
fisubs
add
and
push
lcall
jno
iret
lds
push
daa
das
clc
jmp
inc
push
and
gs
lds
pop
mov
pop
call
inc
xchg
add
inc
movsb
mov
dec
adc
xchg
mov
dec
mov
in
inc
aad
or
pushl
in
pop
decl
test
les
cs
cld
test
xor
rolb
incl
or
cmp
mov
mov
aas
lods
clc
push
fisttpl
fwait
sbb
ds
ret
call
sbbl
xchg
rcrb
out
adc
rorl
pop
out
clc
jg
pop
inc
test
sbb
push
cmc
xor
in
dec
jl
incl
test
inc
push
subb
sbb
fcoml
adc
outsl
cmpl
add
jmp
pop
xchg
cmp
inc
fidivrl
jmp
xor
les
sub
or
dec
scas
pop
pop
lea
push
in
mov
xorb
lea
inc
sub
cli
leave
mov
aaa
push
incl
xchg
orl
xchg
adc
or
xchg
ret
call
pop
or
mov
pop
jmp
adc
es
sbb
xchg
pushl
int3
mov
adc
inc
lock
add
lock
rolb
dec
and
popf
jg
mov
jge
xchg
push
and
inc
lret
add
jmp
test
je
pop
jb
lock
push
lea
imul
imul
jmp
pop
cwtl
push
mov
je
push
je
pop
xchg
fdivr
cmp
inc
push
and
inc
inc
pop
add
push
sbb
sahf
inc
lock
sub
cmp
leave
rcll
out
test
inc
sub
mov
pusha
and
out
test
pushl
cld
xchg
fisubrs
loopne
ljmp
sbb
aam
test
imul
call
out
fs
or
test
test
mov
sub
cld
nop
stc
andl
jmp
icebp
push
into
pusha
jb
repz
add
jecxz
syscall
dec
pop
pop
test
loope
out
fnstsw
or
incl
dec
pop
push
push
pusha
adc
push
xchg
and
imul
and
ret
movsb
clc
hlt
sub
jbe
inc
and
out
repnz
hlt
push
jns
jl
je
and
and
iret
ud2
mov
nop
in
xchg
push
out
xor
call
push
mov
cmp
mov
je
mov
ret
pop
out
cmc
mov
lcall
and
sub
push
cmp
dec
es
dec
xorl
inc
lret
mov
jg
loope
rcrb
addb
inc
call
idiv
int3
jg
fidivl
xchg
push
stc
sub
push
ss
adc
shl
test
addl
mov
jmp
enter
cmc
adc
shll
xchg
addl
pusha
mov
out
mov
sbb
cmp
fisttps
mov
bound
sub
arpl
jmp
xchg
cmpsb
lea
pop
push
adc
sub
xchg
out
ret
and
push
mov
clc
jb
jge
mov
jno
push
loopne
faddp
xor
cmp
test
mov
push
jo
or
add
xor
ds
out
inc
or
subb
add
pop
adc
inc
fidivrs
leave
inc
and
sbb
sub
test
fidivs
push
pop
pushf
shrl
loope
mov
xorb
mov
mov
idiv
or
add
sbb
xchg
daa
push
and
push
test
incl
push
jns
jmp
fsubs
call
lret
xchg
les
sbb
lcall
xor
popa
les
pop
lock
sub
sbb
dec
repz
scas
test
inc
ljmp
mov
bound
adc
adc
adc
jb
cs
outsl
clc
jmp
mov
sbb
lods
cmp
and
xchg
ja
push
dec
mov
jg
lcall
test
inc
cld
add
jnp
mov
xchg
and
push
fldenv
pushl
add
pop
cmp
insl
scas
or
pop
add
or
hlt
outsl
cmp
mov
cmp
ljmp
test
push
loop
pop
leave
xor
fnstenv
call
out
adc
or
sbb
cmp
mov
out
mov
outsb
cmp
call
fwait
dec
ret
into
xchg
or
dec
push
jmp
jle
nop
loopne
movsb
and
cmp
fmulp
shrb
loope
movsb
inc
mov
insl
fnstenv
insb
pop
lret
cmpsb
or
lcall
idiv
test
ja
sub
lea
adc
shld
inc
lea
js
call
inc
xchg
jmp
push
push
in
xor
add
test
popa
aad
dec
adcb
sub
lcall
mov
sub
sbb
mov
clc
sub
cmpsb
in
dec
push
cmp
jl
and
mov
into
jecxz
test
jl
pop
loopne
cmp
inc
in
adc
repnz
inc
mov
ret
or
cmp
inc
subl
ror
add
sub
mov
in
or
and
lahf
cs
dec
fildll
add
pop
and
xor
dec
ljmp
ror
in
pushf
pushf
sbbb
add
popa
dec
lahf
stc
js
inc
rolb
addl
jle
icebp
mov
or
call
decl
jecxz
mov
addr16
and
test
ljmp
push
xor
incl
cld
daa
dec
push
std
int3
adc
pop
pop
push
orl
sbb
mov
push
adc
dec
incl
cmp
nop
mov
mov
or
inc
and
adc
in
pushl
lcall
sub
clc
push
mov
ds
setg
sbb
push
mov
mov
nop
mov
xchg
adc
pushf
pop
lahf
loope
jp
jl
movsl
incl
jae
or
sub
es
adc
adc
adc
std
xchg
pop
or
fs
pushl
call
push
mov
ja
push
sbb
push
cmp
mov
decl
pushl
inc
rorl
outsb
add
cmp
aam
and
enter
add
sbb
cmp
push
sub
pop
sub
test
je
or
dec
sbb
pushf
adc
test
sub
pushl
jne
dec
aaa
inc
mov
out
ljmp
cli
mov
inc
pop
xor
xor
ss
lret
mov
push
xor
mov
js
push
adc
test
push
xchg
dec
adc
pushl
aam
add
shll
aaa
rolb
inc
or
in
nop
adc
aas
shll
ljmp
add
mov
or
xor
popa
cmc
push
mov
cld
scas
lret
xchg
inc
cmp
jmp
fldcw
adc
test
andl
xor
int3
ja
leave
fisttps
ljmp
mov
insb
lcall
or
into
stos
pop
lds
mov
call
hlt
call
mov
sbb
out
test
je
int3
cmpl
std
incl
sti
dec
push
mov
add
pop
dec
adc
pushl
sub
stc
dec
cmc
lret
addl
ja
pop
fwait
lcall
sbb
inc
dec
std
jl
into
cltd
inc
fadds
dec
mov
fwait
xchg
mov
mov
fsts
push
and
aas
clc
jmp
push
and
loope
xor
incl
enter
fcoms
pop
lahf
lea
pop
outsb
mov
jmp
add
int3
or
fs
repz
inc
mov
lods
sbb
loop
dec
jo
cmp
cmp
and
mov
adc
xor
mov
bound
test
icebp
andb
inc
notb
mov
inc
insb
test
mov
fwait
ljmp
sbb
xchg
sbb
cld
rcrb
inc
nop
pop
rcl
pop
sbb
adc
incl
push
xor
cmp
jle
orb
cwtl
inc
pusha
ljmp
fimuls
sbb
xor
popa
dec
das
xchg
jecxz
leave
sub
scas
cli
call
repnz
inc
bound
sub
add
sbb
decl
jecxz
push
call
inc
xchg
or
or
cltd
sahf
fistpl
in
dec
test
loopne
xchg
sar
cmp
repnz
lar
dec
cli
xchg
xor
ret
test
mov
dec
mov
add
or
ret
push
or
clc
jmp
fcoms
mov
in
dec
rcl
sub
cmpsb
inc
mov
daa
std
in
add
and
add
adc
jg
inc
and
mov
subb
add
mov
and
test
mov
mov
mov
xor
mov
scas
pop
or
rclb
nop
push
jecxz
xlat
clc
in
enter
in
mov
adc
jne
and
cs
pushl
xor
test
or
add
jb
outsb
xor
xchg
loopne
loope
in
and
dec
gs
in
cmpsl
or
jmp
jno
out
int3
imul
xorb
or
ja
in
xchg
add
sub
daa
push
nop
sbb
pop
scas
repnz
jo
mov
test
xor
lds
ljmp
je
bound
or
sub
mov
adc
xor
jge
add
cmpl
clc
int3
jno
loopne
inc
cmc
xor
repnz
addl
sti
cs
jg
stos
push
sub
mov
adc
cmpl
adc
scas
sbb
call
xlat
js
xor
xchg
mov
inc
out
dec
or
lcall
push
pushw
jmp
addb
popa
loope
mov
adc
leave
sahf
mov
and
mov
mov
lods
sbb
dec
fsubr
adc
call
cmp
test
cmp
sbb
dec
and
sub
fstps
call
pop
mov
movsl
call
and
mov
call
sbb
pusha
loop
ja
jmp
stos
mov
mov
orb
xor
and
in
dec
mov
pop
sub
mov
mov
sub
or
inc
cwtl
pop
sub
scas
push
mov
enter
call
ret
dec
dec
mov
jmp
inc
dec
pop
xchg
cld
or
insl
xchg
dec
jns
inc
inc
mov
jne
jg
dec
pop
mov
push
xchg
xchg
movsb
xchg
jno
leave
add
push
push
add
imul
loope
pop
jmp
inc
sbb
sub
and
mov
shl
clc
mov
mov
add
cmp
push
test
nop
add
push
std
pushl
adc
mov
mov
shlb
add
xchg
pop
mov
jmp
scas
push
movb
xchg
mov
mov
in
push
xchg
std
jmp
xchg
adc
sbb
pop
xchg
test
xchg
hlt
incl
xchg
icebp
xor
cmp
pop
push
test
and
sub
push
incl
and
push
and
mov
shlb
out
mov
fsubrl
jg
add
inc
jns
mov
fdiv
int
push
fcmovnu
je
insb
div
push
push
decl
faddl
and
js
aad
add
xor
call
push
fistps
std
roll
mov
xchg
loopne
outsb
sub
idivl
inc
and
or
inc
cltd
out
mov
jmp
std
out
scas
jmp
or
xchg
sub
repnz
push
add
pushl
iret
sbb
add
jne
xor
fucomip
dec
jp
inc
das
xchg
bound
dec
in
jl
xchg
xchg
mov
cs
or
mov
inc
shrb
loop
movsl
and
pusha
lds
popa
sbb
cltd
test
test
lock
sub
int3
add
xor
in
adc
mov
mov
das
and
sbb
cwtl
repz
sub
pop
or
lcall
mov
push
lea
test
cmpsl
cmp
sti
mov
decl
lahf
and
je
cmp
clc
fistps
test
push
pop
adc
loopne
mov
decl
decl
cli
pop
pop
arpl
xchg
xor
xor
jl
mov
inc
dec
jnp
mov
jle
call
in
mov
push
loop
add
int
data16
lods
mov
or
and
jno
mov
jecxz
test
adc
adc
sbb
shll
jo
pop
jmp
xor
xor
mov
push
mov
imul
mov
jge
cli
jmp
imul
xchg
sahf
sbb
addb
int
push
leave
xor
pop
test
xchg
sub
outsl
jbe
dec
jmp
add
in
mov
inc
fcomip
lcall
sub
ja
loope
les
fidivl
sub
call
inc
rcrb
push
icebp
cwtl
xor
cld
and
into
fdivrl
rorb
cwtl
test
enter
sub
cmp
or
shlb
add
ret
gs
lods
cmp
push
add
hlt
lcall
dec
pop
pop
test
sbb
mov
negb
ret
stos
out
mov
mov
mov
xor
sub
sbb
incb
cwtl
popf
cmp
clc
or
daa
push
or
lcall
lcall
pop
cmp
add
test
dec
andb
sub
pop
push
push
pop
dec
adc
aaa
std
decl
sbb
xorl
add
adc
mov
pop
in
inc
out
aam
lahf
es
mov
and
or
decl
adc
cmp
sub
js
leave
sbb
dec
add
add
mov
mov
xchg
push
cmp
mov
mov
imul
sbb
adc
enter
push
adc
push
mov
push
ficoml
ja
aam
pop
cmc
or
cs
push
sub
mov
mov
lcall
mov
je
inc
scas
ret
jnp
cmc
mov
int
pop
testl
ljmp
inc
xchg
popa
adc
dec
jo
inc
cmp
mov
sti
test
add
mov
adcb
and
push
cltd
push
cmova
cltd
sbb
cmp
ficomps
mov
lds
fs
or
loope
jmp
inc
mov
ret
adc
cmpsb
cmc
sub
pop
es
add
mov
pop
cmc
lcall
movsb
jecxz
sub
mov
out
test
and
push
lock
decl
sbb
roll
pop
pop
sbb
movb
subb
cmp
cmp
fwait
add
scas
add
pop
insl
jl
inc
roll
lea
mov
aam
push
lods
xor
out
into
pusha
orb
mov
cltd
pusha
and
jmp
scas
xchg
pusha
pop
je
roll
enter
or
test
jnp
dec
and
jg
arpl
lods
and
dec
push
push
cwtl
cmp
and
movl
lcall
pushf
mov
test
mov
mov
fsubs
sub
jle
test
mov
aas
nop
jmp
and
push
xor
icebp
cmp
push
hlt
xor
jmp
in
pop
mov
sbb
iret
and
dec
mov
xchg
stc
push
add
leave
jmp
loopne
mov
adc
rcrb
jne
cmp
dec
sbb
lcall
aad
fisttpl
mov
js
frstor
jne
int
inc
xor
lcall
adc
jmp
js
push
jge
push
inc
ret
push
adc
hlt
js
call
mov
inc
or
fisttps
ret
cltd
sub
lret
pop
pop
arpl
icebp
mov
sub
pop
icebp
incl
subl
lods
rclb
sub
testl
pop
cld
mov
adc
out
jecxz
mov
pop
and
sub
decl
dec
push
inc
or
inc
inc
shll
sbb
loopne
lods
pop
in
mov
adc
mov
call
inc
daa
mov
in
xchg
pushf
sub
in
cmp
push
or
dec
mov
inc
cli
inc
or
pushf
sbb
mov
add
subb
jmp
push
pusha
mov
cmp
aaa
sbb
mov
outsb
xchg
pusha
idiv
jmp
adc
pop
test
mov
dec
dec
jecxz
cmp
adc
lcall
pop
xor
pushf
add
push
scas
push
inc
xchg
arpl
sbb
mov
mov
mov
repz
pop
pushf
stc
cmpb
sub
outsl
xchg
enter
and
lcall
add
enter
sbb
jge
addr16
test
jmp
aas
push
mov
shrb
rcll
aad
mov
and
dec
mov
jp
testb
call
out
dec
int
scas
sub
inc
and
pop
push
rclb
cltd
repz
aas
ds
cli
popf
hlt
jle
imul
lea
jg
popa
dec
sub
dec
adcb
and
cld
aas
aas
fstpl
call
and
dec
add
js
adc
test
enter
movsl
jp
push
lock
cmp
mov
pusha
decl
push
sub
jo
pusha
js
add
int3
inc
fs
pop
jecxz
loope
or
jge
push
lcall
mov
xor
mov
out
imul
mov
sar
cmpsl
pusha
nop
andl
fcomp
mov
add
pop
cmpb
inc
loopne
dec
mov
ss
subl
shrb
xchg
pop
incl
ss
push
cmp
sub
and
lret
sub
negl
mull
lock
xchg
decl
cmp
aam
sub
pop
movsb
inc
xor
mov
add
lock
out
pushf
sbb
ss
cmp
shlb
mov
idiv
inc
mov
fucomi
addb
dec
jae
adc
sbb
pop
sbb
gs
inc
das
mov
and
and
shll
cmp
adc
and
incl
and
cltd
or
ds
mov
stos
jns
jle
ret
mov
or
lcall
les
aam
jge
mov
jbe
testl
imul
cmc
sub
inc
push
fsubrs
inc
fldcw
inc
inc
gs
pop
mov
xchg
test
nop
cmpsl
sti
inc
and
inc
mov
and
push
dec
mov
je
fcomp
bound
repz
ljmp
clc
adcb
popa
test
adc
fdivr
and
push
mov
mov
jmp
clc
xor
test
pop
sub
or
push
in
cmp
sub
inc
js
ja
push
mov
call
aas
or
insb
add
mov
iret
orb
jle
and
pusha
cmp
inc
and
sbbb
cmp
jmp
mov
pop
mov
popa
or
or
mov
jno
jns
lret
push
mov
test
xrelease
add
fimuls
push
fld
jle
pushf
and
hlt
ljmp
ljmp
addr16
hlt
add
adc
mov
lcall
add
fs
into
sub
loope
push
sbbb
ljmp
data16
jg
pushl
shlb
sahf
inc
sbb
xor
loop
lock
inc
test
inc
pop
jmp
jp
inc
pusha
test
jge
adcb
sub
jg
icebp
loope
mov
xor
nop
dec
jle
xchg
adc
lcall
jmp
and
xchg
pop
pop
jmp
jbe
or
jecxz
or
andb
lcall
sarb
js
push
inc
ds
mov
sbb
test
std
push
adc
inc
daa
into
sub
inc
out
cwtl
mov
and
adc
and
scas
pop
fwait
lret
scas
cs
gs
sti
ljmp
or
xchg
sub
shrb
xchg
call
ljmp
mov
icebp
dec
mov
jnp
lock
pop
ret
ss
cld
or
pop
mov
les
call
adc
insb
arpl
ljmp
push
stos
or
in
sbb
icebp
cltd
loopne
jmp
xor
push
dec
leave
cmp
add
in
aaa
xchg
lds
outsb
jmp
loop
call
clc
and
sub
xorb
inc
pop
add
mov
or
mov
push
jl
fildll
pop
mov
lret
fstps
jge
cld
mov
out
or
cmp
sti
sbb
test
dec
jp
shll
cmp
cmp
pusha
std
fimuls
jp
adc
mov
mov
add
test
inc
mov
les
push
ljmp
mov
icebp
jl
inc
adc
insl
inc
hlt
ljmp
popf
cli
mov
jo
lret
adcb
add
out
mov
pop
ret
add
jmp
lock
ret
add
aad
incb
aaa
andb
call
jl
mov
pop
leave
or
pushl
or
lret
das
jo
cmpsb
push
push
sbbb
jbe
rcll
or
sub
jle
push
or
nop
inc
push
push
adc
jl
pop
or
add
or
and
xor
xchg
jmp
or
and
gs
inc
in
push
jg
ljmp
push
adc
lea
or
in
test
pushl
mov
mov
xor
in
jmp
sarw
sarb
lcall
dec
pop
ja
aaa
add
dec
push
jbe
pop
cmpb
cmp
repnz
xchg
inc
cmp
lcall
popa
and
pop
mov
ret
xchg
aas
popa
inc
mov
subb
xchg
inc
pop
xor
cwtl
dec
cld
pop
mov
nop
popa
lods
cltd
pop
inc
ficomps
call
pusha
xor
es
push
cltd
mov
or
xchg
push
cld
xor
mov
in
bound
les
jmp
pop
xchg
nop
xchg
lods
sub
addl
lcall
mov
xor
sub
imul
pusha
dec
fstpt
xor
jmp
in
jp
cwtl
and
daa
je
mov
mul
mov
adc
iret
fsubl
bnd
push
call
sub
ja
adc
dec
mov
xchg
push
inc
push
ss
xor
dec
pop
or
call
add
lret
jl
outsb
jge
lock
stos
or
pop
incl
xor
jbe
dec
mov
xor
js
xchg
mov
call
icebp
inc
fisubrs
mov
sub
loope
mov
sub
jge
mov
incl
subl
mov
sbb
in
push
pop
push
mov
cwtl
or
xor
sbb
in
jmp
jmp
dec
bound
sub
sub
adc
paddd
mov
pop
cmpb
int
repz
shlb
fs
repz
outsl
decl
adc
dec
add
loop
cltd
sahf
sbb
add
xchg
and
in
hlt
mov
mov
pop
stc
andb
rorl
call
fs
and
andb
jae
jbe
out
inc
cmp
mov
mov
cmp
cmpsb
push
in
xchg
pop
scas
or
fwait
cmp
aad
ret
bound
jg
nop
jne
loopne
or
mov
adc
dec
dec
bound
test
test
sub
cmp
outsl
jg
mov
sbb
and
add
ret
lcall
mov
xchg
lea
popf
or
test
fidivrs
mov
popa
out
mov
push
mov
incl
cmp
add
dec
cmp
rcrb
xchg
je
in
xor
and
push
jae
inc
imul
incl
adc
adc
fcoms
mov
jp
mov
mov
mov
sub
ret
xchg
adcl
dec
push
lods
popf
lds
or
or
push
mov
mov
jg
imul
push
lcall
dec
cmpsb
adc
inc
pushl
fwait
loopne
inc
pop
jo
xchg
icebp
ja
lret
scas
daa
jo
or
jns
pusha
push
decl
or
cmp
sub
and
sbb
rol
mov
inc
das
fdivrp
jg
incl
push
lds
mov
add
iret
and
popa
sti
jno
adc
xchg
loopne
lcall
jae
and
repnz
daa
js
iret
addl
mov
call
inc
test
mov
mov
movsl
or
loopne
mov
xchg
mov
or
pushl
stos
or
js
push
mov
push
mov
inc
loop
pushl
aam
adc
aaa
loop
dec
shlb
inc
pop
dec
sub
les
test
add
cmc
orb
push
cltd
adc
push
and
movl
mov
or
test
lods
and
adc
jo
cmc
mov
in
mov
pushl
pop
mov
adc
loop
mov
test
ljmp
roll
call
test
hlt
xchg
nop
and
out
xor
fsts
popf
push
or
stos
enter
call
and
sub
jecxz
movsb
adc
or
jo
mov
mov
or
inc
push
mov
sahf
mov
mov
pop
scas
jp
scas
push
or
lcall
aam
jb
stc
mov
incb
icebp
jnp
lcall
lea
add
sub
cmp
jmp
jae
and
add
test
sbb
sub
scas
icebp
inc
lea
or
loop
inc
repnz
push
or
pop
outsb
mov
add
fisttps
push
add
jl
mov
adc
adc
fwait
or
add
pushf
popa
es
sbbb
dec
and
adc
push
stos
fadds
push
mov
add
in
dec
incl
inc
push
lds
add
stc
in
jns
pop
sub
or
jnp
pop
xchg
in
jmp
cmpsb
movsb
sbb
xchg
nop
mov
enter
lea
inc
iret
mov
incl
mov
cwtl
inc
inc
and
addr16
repz
stc
xchg
test
sti
push
mov
loopne
movsb
mov
incl
cmp
loope
inc
ret
mov
in
xor
or
mov
sarl
xor
mov
xchg
std
mov
imul
inc
mov
decl
xor
jb
pop
imul
gs
aas
sbb
scas
xor
mov
jp
mov
or
imul
sbb
or
jg
std
repz
push
and
inc
test
inc
fldenv
inc
push
mov
in
fisubrs
lcall
in
push
adc
aas
call
enter
jno
dec
inc
fmull
std
addr16
decl
inc
mov
lods
leave
lods
cmp
pusha
jno
sahf
push
pop
lods
std
mov
call
loopne
xchg
xchg
sarb
test
cmp
call
decl
and
sbb
mov
and
and
test
ljmp
bound
in
pusha
dec
testl
orl
shl
inc
and
decl
cwtl
adc
es
adc
cmp
fld
enter
mov
pop
add
push
ret
shlb
and
pop
dec
inc
xor
int3
jmp
andl
gs
add
aas
std
stos
std
xchg
cmp
jmp
mov
cmpsb
xchg
aad
inc
mov
dec
adc
xchg
xchg
imul
mov
in
int3
jl
mov
daa
mov
cmp
add
pushf
sub
fdivrp
in
addr16
cmp
decl
adc
mov
xchg
fimull
shlb
mov
sbbl
ljmp
sar
or
je
xor
inc
fwait
and
sub
jl
cmp
mov
pushl
ljmp
jne
inc
pushl
sbb
fs
ljmp
inc
test
push
mov
and
mov
stc
adc
push
jg
xchg
xor
in
into
divl
fucom
leave
sahf
out
and
or
ret
cmp
dec
xchg
ror
in
fs
fmuls
mov
or
xlat
or
push
pusha
rolb
pushl
data16
xor
mov
call
nop
daa
test
xchg
dec
sbb
decl
enter
mov
shrb
add
jg
imul
subb
nop
or
dec
mov
leave
sbb
jge
in
pushl
loopne
sub
adc
sbb
or
mov
adc
sbb
jmp
add
lock
pop
fs
cmp
inc
and
inc
xor
dec
push
loop
mov
lcall
fs
sbb
fnstsw
xchg
or
test
dec
rcrl
jne
mov
adc
xor
int
mov
cmpsb
push
cld
sbb
and
ljmp
cmpsl
sbb
call
inc
sub
adc
inc
shr
push
movsl
repnz
js
inc
add
cwtl
mov
ds
decl
in
cmp
or
js
lahf
int3
es
xor
sbb
add
pop
xor
pop
addb
jmp
dec
loope
mov
cmp
dec
pop
inc
dec
xor
xchg
push
fmull
and
add
mov
mov
pop
lret
xlat
imul
in
mov
sbb
icebp
mov
xor
jge
hlt
or
jno
dec
fsubr
sarl
lock
sbb
ret
adc
xor
sub
call
adc
add
xor
cmp
mov
inc
or
lret
enter
imul
sbb
or
ret
jo
out
lahf
std
mov
call
xor
jns
pop
xchg
loopne
dec
pop
sbb
xchg
mov
ss
insb
mov
push
out
loop
jl
adc
push
orl
ja
scas
aam
mov
mov
push
incl
test
adc
and
push
sbb
decl
or
mov
lahf
shl
call
mov
fs
incl
sar
stc
mov
jl
dec
enter
adc
aas
test
int
sub
out
and
scas
out
neg
xchg
decl
stc
cmc
cmp
test
dec
push
pop
jnp
xchg
sbb
rclb
mov
mov
jb
sub
loopne
mov
push
fildl
pop
and
iret
xchg
int3
and
mov
push
mov
into
or
ror
sbb
adc
mov
test
cmpb
xor
shlb
add
rcrb
push
std
xor
fdivrp
ljmp
ljmp
xchg
jmp
test
ret
push
jno
jecxz
shrb
in
lcall
cltd
sub
lcall
add
movl
mov
cwtl
xor
push
jge
or
incl
imul
inc
sti
sbb
push
sub
cmp
call
push
fldenv
movsl
and
or
xchg
nop
addr16
shll
dec
movsl
es
ljmp
lret
test
dec
repnz
bound
jmp
call
push
adc
pop
xchg
pop
dec
cli
push
scas
adc
mov
jo
cwtl
pop
rol
jg
mov
and
jbe
pushf
or
mov
jmp
mov
push
lods
jp
adc
js
xchg
decl
std
fstpt
insb
mov
out
movsl
insl
adc
and
inc
inc
or
push
nop
icebp
dec
je
push
call
jns
mov
mov
xor
cmp
aas
pushl
in
cld
add
rolb
xchg
or
loopne
jl
ret
mov
xor
push
pusha
fcos
decl
pusha
xchg
clc
addl
test
adc
not
xchg
sbb
fptan
cmp
ljmp
jmp
inc
repz
addb
rorb
xchg
notb
or
or
or
shlb
loop
bound
xor
fcomi
out
mov
pushl
xchg
mov
adc
clc
repz
adc
mov
cmp
hlt
sbb
add
call
xor
xor
mov
adc
mov
push
dec
mov
pop
jbe
insb
jecxz
fwait
loope
adc
call
xchg
sub
inc
test
in
push
xchg
and
je
cmp
mov
pop
xlat
mov
imul
call
lcall
imul
mov
sub
and
and
jmp
sbb
add
sbb
movsl
inc
adc
inc
pop
int3
xor
sbb
ss
mov
adc
ss
fmuls
inc
outsb
sbb
call
pushl
push
ret
sub
sub
pop
xchg
xchg
mov
xchg
jo
jg
mov
sbb
push
ret
jbe
sbb
push
out
xor
aam
ficoml
call
in
roll
add
add
add
sub
mov
mov
push
push
dec
inc
pop
lds
hlt
mov
lcall
and
ljmp
clc
lcall
stos
jbe
movsl
push
xchg
adc
loop
aam
cmp
mov
sar
in
iret
mov
mov
push
adc
xchg
lcall
mov
or
xchg
dec
loope
add
xchg
xchg
jb
pop
jb
adc
jg
fwait
jne
add
out
inc
and
je
fdivl
in
jne
jns
mov
decl
xchg
sub
call
inc
enter
and
dec
imul
jmp
and
lock
jae
and
jbe
xchg
mov
adc
addl
push
icebp
fsub
xchg
cmp
and
mov
lock
fldenv
mov
fistps
icebp
sar
es
movsb
sub
xchg
nop
andl
jns
gs
mov
fwait
mov
push
jmp
pop
cmp
jnp
jnp
dec
mov
xchg
clc
mov
jg
pop
xchg
add
xchg
pushl
jle
pop
adc
dec
sub
xor
cltd
icebp
push
ret
dec
jmp
mov
inc
pop
std
pushl
lods
cmp
mov
inc
dec
xchg
loop
add
insl
pusha
adc
inc
incl
je
shl
sbb
cmp
stos
pop
je
out
es
xor
cld
lea
push
dec
test
call
or
aaa
das
imulw
xchg
jo
into
imul
cli
insb
popa
or
das
cli
decl
fs
pop
dec
data16
lcall
adc
cmp
cmpsl
xchg
push
mov
mov
ja
jg
das
aam
lds
aas
or
mov
mov
out
xchg
decl
cmp
adcl
sbb
jmp
xlat
fcmovb
int
fnstcw
sahf
mov
inc
bound
pop
pusha
pop
nop
shlb
adc
ds
xor
fcoms
pushl
bound
inc
ja
xor
leave
sub
loop
cld
insl
in
lcall
pop
lock
and
jp
add
push
cmp
outsl
push
mov
shrl
or
jnp
mov
mov
and
mov
adc
jb
out
jecxz
rorb
ljmp
scas
popa
imul
lret
push
mov
and
pop
lcall
or
sbb
and
movsb
adc
aas
dec
dec
and
and
ljmp
mov
test
mov
dec
or
inc
lea
xchg
divb
fmul
iret
sbb
cmc
scas
cli
add
adc
pop
add
aaa
mov
mov
test
imul
and
mov
or
add
not
out
push
push
pop
sbbl
les
push
jecxz
push
int
test
add
dec
das
mov
cmp
jl
cmp
pop
js
adc
jmp
or
das
test
enter
and
pushf
test
jecxz
cmc
movsb
loope
mov
decb
fdivrl
sub
rclb
and
hlt
jle
and
cmp
inc
mov
inc
and
dec
cmp
xor
or
in
test
sbb
push
movsb
mov
xchg
sbb
cmp
incl
push
incb
pusha
movsb
lea
es
lods
les
inc
inc
jno
push
fcomip
jmp
testl
push
orb
jmp
and
int3
stc
cmp
incl
lds
pop
dec
loope
mov
lea
mov
ljmp
test
or
incl
into
leave
adc
stc
daa
xor
push
sub
decl
in
sbb
movsb
and
rorl
sbb
xchg
xor
pop
or
scas
sub
and
decb
or
sub
pop
lcall
push
ljmp
or
out
add
test
adcb
jnp
imul
mov
jmp
add
jo
fdivrs
ficoml
pop
push
sub
cmc
sub
out
push
jmp
aam
lods
cmp
xchg
mov
mov
and
pop
or
adc
enter
fisttps
call
vshufps
test
call
push
out
hlt
mov
xchg
xchg
sub
inc
push
jecxz
fisubl
jle
or
push
xchg
cmpsb
inc
in
mov
roll
clc
stos
inc
and
std
push
sub
add
loopne
jo,pn
mov
fst
xlat
ror
in
pushl
pop
push
pop
and
inc
or
cmp
inc
rclb
sbb
sub
lahf
push
dec
xor
call
and
and
mov
insl
mov
inc
fldcw
sub
cmp
clc
in
dec
pushf
movsb
pop
jae
icebp
and
and
xchg
jecxz
call
mov
loopne
out
cltd
sub
mov
stc
or
add
xor
mov
jo
call
add
sub
jmp
mov
sbb
jge
gs
pop
rdmsr
stos
mov
adc
add
filds
mov
xchg
add
sub
push
inc
adc
sub
rolb
fcmovnb
pop
pop
dec
mov
cmp
sti
movsb
mov
loope
pusha
jne
sub
in
add
ret
cld
outsb
ss
jmp
jne
push
jo
mov
or
xchg
xor
decl
push
test
inc
imulb
adc
test
mov
lcall
cwtl
cmp
add
mov
rol
outsl
and
into
adc
adc
call
xor
testl
sub
int
and
jo
fsts
mov
jmp
sub
inc
or
adc
enter
cmp
and
enter
adc
ds
ret
add
sbb
mov
mov
negl
or
mov
push
test
cmp
shlb
push
xor
ret
lret
mov
mov
and
jp
fnsave
jb
jl
mov
dec
jb
jl
lcall
js
cmp
scas
clc
adc
dec
scas
orb
add
mov
call
xor
scas
enter
push
inc
mov
repnz
inc
push
adc
xor
das
sub
add
jle
decl
or
ja
out
jmp
loopne
jp
lea
lcall
and
adc
lcall
jo
jno
in
scas
inc
mov
in
inc
or
js
cld
es
test
mov
inc
dec
jnp
adc
dec
mov
and
pushl
mov
and
mov
rol
in
add
fldl
shll
dec
xchg
sarl
insb
movsb
inc
fs
std
sbb
add
incl
sub
and
mov
cs
dec
cmp
call
shr
cmpsl
sbb
cmp
jb
pop
js
xchg
inc
cmp
or
lret
out
std
decl
fbld
gs
dec
mov
cltd
and
pop
cwtl
xchg
fs
test
decb
adc
or
out
cmp
jle
jmp
pushf
pusha
push
outsb
movsd
push
daa
arpl
icebp
adc
add
cmp
inc
mov
decl
sbb
cmp
loopne
nop
and
mov
pop
ds
sbb
nop
enter
mov
add
dec
lahf
pop
or
lea
and
cmp
jg
cmp
std
decl
out
test
fists
mov
or
jmp
fbld
addr16
cmp
outsb
mov
cwtl
sahf
push
fcomip
mov
mov
ds
or
stos
shlb
and
fnstcw
and
popl
daa
sbb
int3
ss
icebp
lods
dec
jmp
ds
jmp
cld
mov
dec
out
nop
or
test
xor
jp
or
xchg
adc
out
xchg
adc
imul
aas
mov
loopne
cld
pop
xor
popa
gs
int3
jle
adc
call
xchg
add
icebp
mov
xchg
xor
fucom
divb
cmc
sub
out
jmp
ja
iret
mov
push
xor
push
lds
push
out
or
mov
or
fnstsw
call
jb
mov
in
push
inc
inc
adc
cmp
sub
int3
xor
out
shll
and
call
ds
cwtl
push
andl
fwait
es
jg
jg
add
dec
xchg
sarl
push
push
sahf
add
and
adc
jmp
add
bound
add
add
sub
sub
push
scas
stos
lcall
loop
jb
decl
fwait
mov
cwtl
mov
cwtl
inc
xchg
xchg
xchg
sub
imul
lcall
xor
dec
mul
push
sbb
sub
aaa
inc
push
fisubl
lcall
dec
mov
decl
js
stos
adc
lcall
cmc
fsubrs
sti
or
inc
cmp
das
cli
jmp
shlb
mov
sbb
xlat
cld
aas
or
xchg
mov
and
clc
adc
pop
fstpl
and
sbb
decl
lods
jecxz
adc
xlat
mov
xor
xchg
and
jns
cld
mov
xchg
jbe
sub
add
rorb
loopne
sub
jle
out
jae,pn
xor
xor
mov
repz
fsubrs
lea
mov
cmp
xchg
sbbl
incl
ljmp
adc
jb
test
cmp
and
jmp
adc
jecxz
sub
add
rcrb
repnz
mov
mov
sub
inc
sub
mov
cs
and
call
jmp
or
movsl
add
icebp
leave
cli
lds
lock
push
xchg
mov
lea
std
sbb
mov
out
jp
ret
loop
mov
xchg
inc
pushl
sbb
test
and
cs
pop
stos
dec
orl
mov
lock
in
jmp
adc
or
push
push
pushf
mov
add
incl
mov
adc
popf
push
inc
pop
ljmp
mov
jg
xchg
jl
push
push
jae
xchg
and
ss
das
icebp
sbb
les
insb
jno
push
sbbb
scas
mov
xor
jl
fdiv
movsb
or
mov
xchg
imul
cmp
mov
jnp
sbb
or
insb
inc
mov
push
mov
xchg
push
mov
xor
or
imul
add
pop
jecxz
dec
andb
cwtl
ljmp
mov
mov
clc
inc
pop
cmp
xlat
jl
lea
xchg
mov
jg
cwtl
mov
lret
je
cmpsl
aad
mov
add
std
push
sbb
js
incl
roll
push
fnsave
inc
adc
ljmp
int3
xor
pop
push
shrb
add
decl
out
out
jmp
push
adc
sbb
and
jp
xlat
adc
sar
outsl
cli
call
cmpsl
sub
fcmovb
push
imul
cmpsl
ret
imul
lods
mov
loopne
jno
test
mov
int3
xchg
mov
pop
mov
sbb
cmp
push
inc
inc
mov
push
push
inc
es
into
int3
fnsave
out
lcall
mov
inc
inc
sub
sub
scas
or
nop
out
sub
dec
insl
and
jge
jg
jp
or
cmpsb
pusha
inc
xchg
mov
lret
cmp
out
jns
sub
push
inc
add
mov
push
rcrl
sbb
cli
sbb
out
shl
jl
icebp
subl
push
insb
xchg
std
xor
push
add
mov
dec
and
sub
and
jg
cli
fs
aas
push
mov
inc
je
and
cmp
out
inc
les
nop
decl
mov
std
dec
into
stos
or
sti
pop
in
in
mov
ds
push
outsb
cmp
jbe
xchg
inc
or
add
repnz
pusha
or
movsl
pop
aam
test
dec
repnz
pop
icebp
bound
cwtl
pop
sar
hlt
insl
enter
loopne
flds
sarb
pop
jg
ljmp
adc
jecxz
data16
sbb
push
test
ror
cmp
mov
repz
divl
sbb
mov
data16
cwtl
sub
jmp
cmpsb
shll
shlb
les
sbb
jg
xor
pushl
add
mov
test
into
loope
cmpsb
push
ret
js
in
ds
cmpsl
or
push
xchg
and
mov
popa
and
mov
mov
not
pop
in
cwtl
mov
xor
mov
rorb
or
movl
and
push
idiv
mov
jge
ljmp
mov
and
mov
leave
xor
push
sub
adc
pop
subb
ficomps
scas
mov
mov
and
adc
push
call
test
lds
and
sub
mov
addr16
ljmp
fbld
xchg
adc
dec
and
add
mov
xchg
jne
jb
out
pushf
jns
fs
es
xlat
inc
sub
adc
and
xchg
dec
mov
in
sub
enter
ret
jecxz
xchg
or
decl
into
cmpsl
pop
dec
sbb
jmp
pop
jmp
insl
bound
mov
and
pop
push
lods
ljmp
in
xor
adc
cwtl
nop
mov
sub
dec
fldenv
push
scas
add
mov
push
xchg
sti
call
mov
in
std
fs
pop
cmp
xor
fisubrs
sahf
mov
jg
or
test
xchg
dec
and
xchg
stos
es
dec
inc
push
mov
xchg
decl
jle
icebp
roll
cmp
push
dec
pusha
loop
adc
push
adc
add
xorb
or
xlat
mov
repz
lods
insl
loope
ss
iret
orb
sbb
xor
pushl
mov
dec
pop
mov
jecxz
push
pop
cmpsl
into
mov
cmpsl
pop
popf
mov
xlat
and
pushl
push
xor
xchg
mov
inc
sub
shlb
scas
add
call
andb
pop
jg
in
scas
sub
sub
xchg
pop
dec
and
call
imul
pop
inc
push
jb
in
xchg
mov
lcall
adc
adc
mov
push
xchg
das
and
test
xchg
pop
insl
ljmp
scas
or
mov
addr16
fcmovne
dec
push
addl
xchg
jle
dec
jg
cld
pop
or
inc
sarb
mov
lock
or
xor
adc
xchg
decl
mov
pop
push
repz
mov
lock
adc
adc
inc
out
mov
call
sbb
and
inc
mov
jecxz
and
sbb
mov
add
clc
and
mov
call
fwait
adc
roll
rorl
stos
icebp
sub
shrl
xor
incl
jmp
outsl
dec
lret
jno
xor
in
fwait
mov
inc
icebp
test
rcll
ret
ds
mov
push
stos
pop
jg
push
popf
outsb
test
sub
sbb
sbb
and
call
ja
mov
inc
stc
insl
inc
mov
dec
push
out
push
or
or
add
push
and
and
lock
and
incl
inc
pop
pop
test
lret
inc
jae
adc
mov
insb
in
movsb
jb
addr16
scas
jno
pushf
or
cli
sub
pop
push
ret
inc
or
sbb
sub
out
sub
out
clc
push
add
mov
icebp
jecxz
and
sbb
inc
daa
inc
and
decl
ret
jmp
and
add
xchg
aad
jne
and
jp
add
cwtl
xchg
and
and
cmp
scas
adc
fstps
inc
ja
pop
hlt
incl
stos
or
jge
mov
and
push
dec
push
xchg
incl
xchg
add
loop
jmp
xor
jmp
pusha
adc
xchg
fldcw
sub
call
in
pop
pop
pop
xchg
mov
and
mov
and
outsb
or
add
mov
addr16
loopne
push
insb
test
test
mov
add
dec
and
decl
repz
cld
sub
inc
jo
mov
jb
pop
call
dec
iret
orl
cwtl
dec
aas
inc
push
cmpsl
movsb
xchg
cmp
icebp
add
mov
sbb
and
mov
lds
cwtl
mov
pop
mov
jno
clc
mov
lret
pop
push
mov
in
test
pop
add
pop
jo
push
ret
shrb
mov
jmp
ret
loopne
rcll
and
sarl
je
orl
fs
xor
jae
js
test
les
xchg
cli
mov
pop
test
pop
jne
push
aas
lret
idivb
jnp
jb
test
mov
aas
dec
sar
pushl
movsl
mov
sub
mov
aas
pop
shrl
pushf
repz
dec
call
dec
ret
jl
xor
mov
call
inc
dec
sbb
push
cmc
dec
mov
cs
jecxz
and
mov
xor
jbe
inc
sbb
xor
inc
stos
cmp
lds
subl
add
mov
sahf
jecxz
add
in
push
cli
mov
je
and
ret
dec
ljmp
out
test
jge
dec
jmp
clc
test
and
in
or
sti
call
addr16
push
aam
mov
dec
dec
pushf
sub
mov
xadd
ret
push
mov
mov
pop
cld
das
adc
jl
test
inc
les
push
sub
ljmp
dec
lret
iret
scas
faddp
fs
cli
jae
jmp
mov
add
add
fwait
and
lods
xchg
cmpsl
and
xchg
lcall
popa
movsb
rolb
push
jecxz
test
aam
mov
adc
xor
jmp
jl
je
adc
jo
mov
cmp
sub
popa
xchg
mov
inc
add
mov
js
out
and
adc
nop
loope
xlat
jae,pn
pop
ret
out
cli
xchg
or
adc
pushf
pop
outsb
jmp
icebp
test
or
jg
lods
cwtl
cmp
divl
cmp
mov
cs
ljmp
or
int3
cmp
push
enter
xchg
and
sbb
mov
push
lcall
popa
xchg
add
mov
fildll
iret
pushf
push
jecxz
rcrl
pop
rolb
in
xchg
mov
mov
mov
sbb
ljmp
xchg
inc
mov
add
or
mov
or
and
xor
iret
push
xchg
mov
dec
jns
push
subb
aaa
mov
lret
fldl
lock
mov
pop
inc
neg
pop
lcall
nop
mov
xchg
mov
pusha
dec
inc
test
pop
add
rolb
push
js
sub
ljmp
rclb
js
pop
add
add
inc
iret
paddsb
sub
icebp
or
lock
xlat
jbe
push
adc
cmp
add
dec
add
inc
clc
jg
push
stc
add
js
movsb
clc
dec
sbb
iret
xchg
adc
aad
pushl
data16
lret
cmp
or
adc
dec
les
sub
pushf
dec
sub
lcall
fs
mov
adc
adc
dec
pop
fcomip
fwait
pop
push
test
jmp
daa
xchg
jg
imul
or
cmpb
fistpll
ror
das
cli
jg
push
dec
xchg
push
addr16
push
imulw
movsb
iret
dec
adc
push
std
cmp
jb
dec
inc
pusha
int
add
notl
gs
inc
and
jmp
outsb
test
shll
ret
adc
out
pop
and
jmp
ss
pop
mov
sub
testl
push
ds
jle
mov
sar
jg
movsl
mov
out
xor
inc
adc
scas
fs
int
sbb
out
pop
cld
decl
xchg
mov
movsb
pop
mov
insl
xchg
jle
out
jmp
inc
pop
push
shl
xchg
mov
and
inc
jmp
mov
stc
icebp
test
xchg
dec
sarl
enter
lahf
dec
dec
xor
scas
sarl
add
sub
shrl
adc
mov
xor
lcall
notb
testb
adc
sar
pop
outsb
push
pusha
sarb
add
setge
lock
in
les
test
ljmp
cmp
sbb
mov
insl
imul
cwtl
stc
sub
fs
pop
cmpl
stc
jne
adc
in
dec
lret
call
ljmp
or
inc
mov
loope
inc
inc
test
jae
incl
push
mov
enter
mov
popa
push
pop
in
aad
je
pop
daa
das
subl
call
xor
add
inc
aas
faddl
push
mov
insl
shll
ljmp
add
in
sbb
testl
xor
call
loopne
cmp
dec
pusha
call
sub
aam
adc
add
or
xor
decl
adc
mov
ret
sbb
mov
lods
mov
jns
or
xor
das
cmpsl
mov
mov
ljmp
gs
mov
pop
rclb
shlb
loope
dec
cs
scas
push
add
sbb
push
fnstcw
jmp
jl
lret
ljmp
xor
jmp
scas
lods
ret
sbb
or
push
popa
push
fadd
adc
adc
xor
outsb
ret
shlb
imul
xor
sub
cli
incl
mov
push
daa
xor
or
inc
bound
mov
loope
and
ljmp
jle
xor
aam
nop
les
xor
sub
outsl
out
inc
aas
cmpl
adc
sub
ja
inc
sbb
nop
in
mov
ja
lea
sub
adc
jmp
repnz
ds
sbb
fadds
pop
cmc
ljmp
loopne
adcb
mov
iret
icebp
in
jnp,pn
rcll
movb
sub
jmp
shlb
and
push
sub
xchg
push
rsqrtps
jno
repz
fstps
loop
cmp
push
clc
imul
call
mov
cmp
les
adc
or
sub
mov
sub
cmp
push
incl
sub
fs
mov
clc
or
dec
jne
xchg
pop
push
push
into
sbb
pushf
pop
mov
fnstcw
dec
pop
fucomi
cwtl
adc
xchg
sub
rorb
lcall
cmp
and
and
inc
in
adc
xor
adc
lds
lock
dec
mov
loopne
insb
pushf
lcall
xor
js
cmc
repz
and
leave
inc
out
mov
adc
jb
jecxz
gs
jne
xchg
lds
repz
fwait
scas
add
jb
stc
xor
dec
dec
aas
push
aas
decl
or
out
add
dec
adc
gs
cmp
add
pushf
inc
mov
inc
dec
rorb
jbe
jo
scas
es
add
dec
cmp
fwait
add
lock
and
mov
jns
add
or
mov
sbb
inc
jg
scas
cs
and
sub
int3
sbb
inc
mov
xor
adc
incl
stos
in
push
lea
lea
in
fnstcw
mov
mov
adc
jmp
pop
mov
data16
clc
or
push
and
js
ss
xor
inc
jmp
dec
test
pop
loopne
mov
aam
lds
andl
or
hlt
ljmp
ds
leave
xor
call
inc
daa
jno
cmpsl
jle
xor
stc
nop
pop
mov
mov
cmc
mov
adc
xor
xchg
inc
decl
inc
jae
push
xor
pusha
and
mov
or
pop
push
test
ret
pop
out
call
xor
xlat
xor
or
call
add
das
push
xlat
xchg
decl
push
iret
pop
add
sub
dec
xor
lcall
dec
dec
sbb
jg
push
pop
dec
inc
ljmp
insb
jo
popa
mov
push
rcll
cmp
jo
mov
cmpsb
sub
sbb
push
jb
mov
mov
addl
in
mov
icebp
lret
jl
mov
cmp
xchg
out
scas
mov
and
dec
cmp
mov
sbb
mov
inc
adc
adc
or
or
inc
and
jg
loop
mov
jecxz
mov
sti
imul
push
je
std
lahf
pop
lcall
pushl
pop
cmpsb
and
cwtl
push
ss
loop
enter
sub
fdivr
lcall
push
arpl
add
addb
and
jge
cmpsl
cmp
xchg
inc
incl
enter
adc
add
loope
mov
ret
fdivr
mov
inc
stc
xor
cltd
cwtl
fnstenv
negb
repz
icebp
mov
call
jle
or
lods
mov
or
sbb
test
daa
test
decl
hlt
fwait
stc
iret
jbe
shrb
rol
rolb
pop
mov
add
aas
push
lock
scas
call
in
cmpsl
jb
sahf
push
xor
push
xchg
stos
pop
fadd
loopne
fistpll
ds
push
mov
lcall
add
cmc
jno
add
mov
gs
inc
addb
adc
loopne
jo
and
loope
and
sti
out
cld
jns
and
mov
push
pop
jl
push
add
pop
cmp
je
xchg
pushl
push
aas
daa
dec
push
and
and
popa
fbld
decl
mov
mov
or
push
jae
das
xchg
pop
iret
sub
adc
xorb
adc
pop
add
push
fcomip
decl
push
pop
je
mov
sbb
jle
push
mov
adc
ljmp
dec
or
jnp
add
dec
in
ja
add
cmp
inc
sbb
jmp
mov
dec
or
cmc
test
cmp
xor
xor
cmp
inc
popa
xchg
das
mov
mov
ds
nop
insl
rorb
or
and
sub
sti
inc
rcrb
add
cld
push
cmp
add
fcomps
inc
or
adc
mov
mov
filds
dec
pop
xor
cs
adc
fs
lret
daa
sbb
aad
xorb
dec
cmpsb
dec
cmpsb
xor
les
mov
in
test
push
xor
fs
jge
cmp
lock
and
fcoms
mov
jae
mov
and
aam
mov
push
cmpsl
pop
xchg
dec
jg
adc
add
xchg
or
test
mov
test
std
dec
jecxz
jb
andl
pushf
and
and
add
in
mov
jmp
push
lcall
and
jb
xchg
in
es
daa
clc
fcmovnbe
mov
hlt
lcall
call
jno
adc
mov
aam
push
or
sbb
lcall
js
push
mov
rcrb
cmc
movsb
inc
mov
inc
pop
mov
xchg
pushl
out
mov
xchg
inc
or
pusha
adc
mov
inc
clc
sbb
push
call
sub
imul
inc
testl
mov
push
push
lea
mov
mov
jmp
pop
mov
sbb
cld
arpl
ret
adc
mov
sub
pop
xor
mov
mov
lods
imul
jne
jb
mov
sub
aad
stos
stos
mov
enter
hlt
scas
inc
pushf
in
adc
add
hlt
incl
inc
ret
in
xor
out
inc
mov
rclb
push
jmp
push
je
xchg
test
rsm
enter
jle
and
xor
push
inc
jmp
mov
cmpsb
and
xchg
pop
pushf
scas
pop
push
enter
cmpsb
cmp
mov
adc
lock
call
shlb
imul
rcrb
cmpsl
pusha
cmp
dec
mov
cs
inc
call
ret
dec
mov
es
sbb
inc
sub
incl
adc
test
dec
pop
shlb
testl
mov
call
dec
rclb
inc
flds
ljmp
insl
xchg
adc
mov
sbb
test
insb
scas
decl
cmp
ja
add
movsb
cmp
adc
adc
fst
iret
lcall
cmp
ja
ja
or
mov
in
movsb
add
cmp
push
ret
jns
aas
pushf
call
sbb
mov
jl
mov
insl
test
fiaddl
mov
lock
and
insb
push
dec
adc
sbbl
int3
add
add
inc
jmp
rorl
cmp
test
pop
add
inc
or
jmp
in
and
jb
push
ror
and
jge
dec
push
mov
pop
or
in
lcall
stos
or
add
popf
into
xchg
outsb
inc
andb
mov
jmp
cmc
xchg
adc
pop
std
or
inc
and
sub
dec
nop
lret
xor
xor
dec
enter
pop
in
call
pushf
aad
add
and
mov
or
test
inc
pop
or
test
call
incl
fsubs
xor
hlt
mov
mov
xor
mov
cmc
ljmp
sahf
and
das
jp
stc
inc
roll
aaa
jo
sbb
or
lcall
adc
mov
ljmp
sbb
mov
xor
loope
rclb
decl
test
sub
ret
adc
mov
inc
int3
in
orb
cmp
decb
add
repz
andl
jg
call
cmp
lahf
jb
xchg
xchg
dec
and
cmpb
xor
xchg
or
pushl
gs
and
mov
sub
insb
lock
dec
fisubrs
xchg
jle
and
mov
scas
jmp
inc
and
popf
add
es
fimuls
add
hlt
outsl
xchg
dec
out
sub
and
stos
sub
dec
xchg
outsb
add
loopne
pop
push
pop
shlb
adc
mov
repz
mov
inc
bound
inc
ret
cmovge
and
insb
or
xor
xchg
test
and
pop
popa
mov
mov
pop
repnz
flds
scas
popa
addl
add
xor
adc
and
jb
adc
test
mov
sar
lcall
std
sbb
and
fs
jmp
mov
inc
popf
dec
sub
lcall
inc
mov
cmp
pusha
jg
sbb
jge
xorb
call
popf
loopne
orb
jns
addb
xchg
aas
andl
adc
mov
xchg
mov
jnp
inc
test
add
leave
mov
mov
add
repz
inc
pop
add
mov
jmp
jbe
add
add
adc
dec
jge
inc
es
inc
dec
cmpsl
and
jne
jmp
hlt
sbb
nop
cmp
cli
mov
pop
push
addr16
insb
dec
dec
loopne
insb
test
test
dec
rorb
dec
repnz
js
jb
pop
je
sbb
into
sbb
mov
decl
in
daa
or
or
sbb
adc
or
orb
jmp
sbb
nop
push
or
pop
mov
inc
push
leave
int3
mov
adc
mov
jg
mov
subb
xchg
inc
lcall
sti
pushf
jmp
jmp
inc
out
add
and
popa
pop
mov
xchg
push
mov
push
in
or
and
jle
call
mov
sbb
je
fwait
or
hlt
ss
lea
imul
fdivl
sub
mov
and
test
pushl
cmp
mov
cltd
mov
adc
adc
dec
loope
fwait
decb
cmp
dec
sub
pop
test
xchg
aam
cmpsb
out
adc
call
sub
ficomps
sbb
jo
jle
ret
nop
outsb
daa
lret
imul
incl
fld
xchg
daa
rcll
in
dec
sub
xor
sbb
mov
inc
xchg
movsb
lahf
incl
in
inc
addr16
cwtl
ret
stos
xor
and
icebp
leave
mov
stc
xchg
ljmp
sub
call
or
push
jo
jne
cmp
jle
sbb
adc
fimull
loope
stos
sbb
clc
inc
repz
mov
testb
adc
push
cmp
jp
lds
dec
push
mov
pop
sbb
cmp
add
jnp
insl
add
fdivrs
mov
stos
pop
mov
dec
or
xchg
add
icebp
adc
es
popa
icebp
xor
call
adc
fnsave
sbb
out
cmp
clc
scas
and
lds
imul
mov
mov
repz
sub
xor
pop
inc
push
inc
mov
lret
mov
dec
dec
pop
inc
adc
incl
dec
mov
and
scas
jecxz
movsl
mov
mov
incl
loop
mov
lcall
je
pop
push
movsl
xchg
pop
sti
incl
loopne
and
push
clc
mov
adc
fmull
jmp
out
lret
mov
and
xchg
fchs
sub
mov
or
mov
cmp
lahf
repz
pop
xor
sbb
and
mov
cmpsb
mov
and
add
into
fcomip
dec
push
cwtl
xchg
and
rcrl
sbb
je
dec
push
adc
rcr
stos
scas
pop
cmp
or
push
push
ficoms
mov
stos
in
popf
xchg
jae
jmp
inc
adc
decl
inc
shrb
xor
xchg
dec
test
add
lods
decl
aam
out
xor
cmc
inc
cmpsl
psubsb
rolb
add
lcall
inc
and
sbb
pusha
loop
popa
adc
mov
jl
adc
cmp
adc
hlt
or
je
mov
mov
mov
dec
sti
sahf
and
push
test
fcoms
loopne
mov
fmull
icebp
jg
arpl
push
cmpsl
add
pop
mov
cmpsb
or
sahf
jg
add
jmp
lods
aaa
xlat
adc
jp
test
xor
adc
sar
psubb
add
sbb
dec
mov
add
jbe
das
adc
incl
dec
mov
adc
and
ficoms
push
cmpsl
shll
cs
mov
xchg
mov
sbb
mov
mov
inc
insl
add
add
jbe
int3
mov
inc
sbb
sub
pop
pop
shlb
xor
hlt
jmp
adc
mov
and
repnz
mov
nop
enter
ds
mov
pop
mov
pushf
adc
add
sbb
outsb
inc
test
add
cmp
lcall
xchg
and
adc
hlt
xor
fstl
jl
xlat
nop
mov
pushl
pusha
mov
xor
xorb
movsl
inc
fwait
leave
cltd
jp
pop
roll
loope
pushl
cld
stc
jecxz
xchg
jmp
sbb
sub
in
and
imul
or
xlat
decl
insl
orl
and
jp
out
aaa
das
shrl
icebp
push
inc
shll
ficoms
aaa
call
movsl
cli
cs
or
cwtl
xor
jge
push
adc
mov
in
cli
pushl
rorl
dec
and
scas
icebp
lcall
call
push
stc
outsl
or
sahf
mov
nop
xor
test
psrad
sub
xor
cmp
mov
cmp
mov
or
mov
jl
ss
push
cmpsb
movb
fisubrs
cmp
call
loop
in
jnp
lods
add
movl
inc
cmp
lcall
lret
cld
or
scas
jge
mov
xchg
lret
hlt
mov
je
mov
dec
and
incl
or
mov
pop
out
dec
xchg
ret
cli
sub
mov
push
pop
xor
jnp
lcall
andb
dec
cmp
lcall
call
adc
cmp
xchg
dec
dec
loopne
mov
jg
jb
leave
fs
inc
cmp
sbb
fisubrs
aaa
pusha
cmp
push
xchg
or
adc
pusha
inc
pop
lock
mov
cmp
and
stos
lret
call
mull
orl
sub
mov
push
into
push
mov
pop
push
repz
mov
mov
lcall
and
dec
inc
cli
pop
jl
or
pop
inc
icebp
movntps
mov
movsl
lret
mulb
cld
jbe
xor
popf
adc
adc
and
ss
mov
ljmp
rolb
sti
ss
scas
mov
jg
ljmp
mov
push
or
mov
adc
pushl
das
pop
jecxz
jl
and
and
outsb
xchg
ss
mov
outsb
call
sub
adc
shl
dec
add
or
sti
pushl
adc
test
mov
outsb
cwtl
xchg
cmp
add
out
inc
and
pop
ds
pushl
int3
nop
fs
sub
call
mov
dec
and
dec
test
mov
mov
test
call
sbb
cwtl
dec
pop
or
cld
jmp
out
test
mov
jg
fnstsw
jl
lcall
xlat
jo
icebp
inc
mov
rcrb
jl
mov
xchg
popf
sbb
imulb
cli
dec
mov
push
cmp
lret
outsb
add
and
imul
popw
push
jns
xor
pushf
addr16
jmp
fistps
pushl
std
nop
rclb
sti
jmp
jp
jne
dec
inc
test
inc
clc
dec
jecxz
xchg
sub
jmp
jb
daa
aam
dec
sub
scas
loopne
inc
xchg
test
cmpsl
mov
jmp
ljmp
push
xor
rorb
dec
pop
adc
outsl
adc
jecxz
adc
es
incl
jmp
adc
nop
scas
add
dec
dec
xchg
out
pop
loope
sbb
push
mov
decl
xor
loope
sarl
mov
lcall
xor
cmpsb
inc
mov
sub
popf
and
adcb
or
ljmp
aad
xchg
addb
sbb
and
adc
iret
aam
ret
pop
pop
test
incl
push
cmp
pushf
mov
pop
add
fwait
rcl
cld
pop
pusha
shlb
fcomip
inc
or
bound
xchg
fs
adc
stos
mov
shr
adc
in
push
inc
inc
ret
out
jp
inc
mov
push
mov
flds
dec
inc
dec
sbbb
lds
xlat
cli
aas
pop
pop
push
das
xchg
push
cmc
mov
lea
js
lcall
rcll
sbb
repz
mov
int
pop
dec
xchg
incl
enter
cmp
pop
adc
add
out
push
es
fstl
dec
jno
js
popa
push
sub
ficoms
push
mov
inc
js
lods
jg
mov
in
cmc
std
decl
inc
mov
mov
xchg
pop
cs
in
call
cld
and
in
into
aas
or
stos
inc
pusha
test
push
orl
jmp
lcall
jle
push
icebp
shrb
inc
jmp
pop
adcb
xor
push
lods
adc
call
daa
lret
sbb
pop
je
fsts
fstl
pushf
sahf
jl
ss
xchg
shrl
dec
ljmp
rorb
xchg
call
xchg
push
inc
xchg
xor
sahf
sub
push
mov
adc
jne
and
faddl
add
leave
mov
out
cli
out
cli
mov
pop
fldenv
and
into
push
mov
ljmp
sbb
push
xchg
jg
daa
ja
mov
adc
movb
ljmp
clc
fildl
cmp
insb
mov
sub
push
addr16
shlb
cltd
fwait
xor
cmp
lcall
jg
lods
push
bnd
sbb
xchg
inc
lret
rolb
fs
subb
test
or
add
xchg
inc
das
and
repz
sbb
fld
int3
sbb
inc
push
xchg
or
mov
ret
jl
cmp
pop
nop
xor
adc
mov
decl
xor
and
add
adc
adc
out
mov
add
xchg
pop
sbb
mov
mov
rcll
out
mov
test
mov
mov
mov
mov
mov
lea
into
or
mov
push
mov
ds
mov
outsb
lret
adc
data16
pusha
in
sbb
push
lcall
daa
mov
ds
xchg
sahf
ret
sahf
es
pop
sbb
xor
pushl
adc
inc
outsl
out
jp
adc
mov
fimuls
adc
adc
insl
xchg
add
or
cli
push
adc
sbb
idiv
decl
pop
xor
mov
mov
dec
jle
loopne
cmc
sub
adc
decl
into
cli
clc
xor
sbb
cmpsl
dec
pop
in
loop
lods
clc
aad
pop
add
andb
fcomip
ljmp
push
or
lods
sub
inc
mov
imul
mov
adc
lcall
push
mov
mov
in
mov
sbb
std
or
jno
mov
ljmp
ljmp
add
pop
add
push
shrb
incl
out
jl
sahf
cmpb
mov
pop
jno
loop
arpl
insl
sub
lcall
adc
enter
pushf
lahf
mov
std
or
pop
jne
pop
inc
sarb
mov
inc
bound
mov
pop
aad
jle
xchg
andl
sbb
nop
lcall
xor
push
in
popf
sbb
daa
xor
ss
cmp
lcall
xor
sbb
ret
jl
sbb
adc
mov
and
mov
and
roll
imul
shrb
add
nop
jl
addr16
jo
xchg
nop
cwtl
push
je
ss
std
lret
icebp
sub
adc
loope
jmp
inc
sbb
pop
xchg
cmp
in
in
jmp
std
or
cwtl
in
enter
xchg
or
cmp
inc
scas
rorl
and
fdivs
adc
sbb
mov
decl
insb
inc
or
xlat
push
movl
adc
or
cld
cmpsb
movsl
lcall
in
adc
jbe
and
or
xor
incl
mov
adc
loop
in
popa
cmpsl
mov
push
mov
iret
fisubrs
jmp
inc
nop
mov
fwait
cltd
gs
and
pop
aas
rorb
dec
and
xchg
jge
or
bound
or
mov
in
cmp
stos
dec
in
add
pushl
sub
mov
mov
xor
add
addb
mov
push
aam
sbb
inc
ljmp
sub
mov
iret
xor
rcr
xchg
dec
pop
lock
fdivl
ficomps
dec
and
adc
adc
dec
jle
popa
adc
push
dec
inc
jmp
das
les
mov
imul
lahf
fadd
add
incl
enter
xchg
test
mov
mov
sbb
arpl
ljmp
dec
inc
fdivrs
pop
mov
or
outsl
nop
or
test
sub
insl
clc
jmp
mov
xchg
push
and
jae
jp
jmp
aam
imul
arpl
test
popf
int
push
popa
in
icebp
jge
mov
adc
test
dec
mov
lods
lock
lcall
sub
and
cs
dec
das
mov
nop
outsl
push
ret
push
jo
or
sbb
decl
test
test
mov
dec
movsb
mov
pop
add
adc
test
jmp
adc
aaa
mov
mov
loopne
test
mov
data16
ss
or
push
call
or
call
iret
pop
and
inc
lds
xor
aam
dec
cmp
mov
mov
decl
arpl
std
enter
sub
sbb
call
push
inc
es
daa
sub
ljmp
mov
in
xor
and
lcall
inc
pop
inc
notl
pop
sub
shlb
mov
loopne
gs
ljmp
cld
inc
or
inc
out
pusha
addr16
scas
outsb
loope
call
dec
jns
fmulp
fmuls
bound
jg
xchg
daa
jp
mov
pop
xchg
dec
rclb
jne
popf
dec
addb
repnz
test
sar
call
xchg
sub
filds
cmpsb
cmovae
cltd
xlat
imul
add
add
incl
xchg
push
aaa
icebp
sbb
ja
and
or
mov
pop
popf
aad
xor
incl
mov
repnz
sub
arpl
das
add
add
lods
les
mov
fidivrl
push
or
jmp
add
and
std
pop
pop
fwait
push
jno
cli
stc
mov
sbb
jne
out
mov
pushl
dec
vpshaq
push
mov
push
mov
cmp
ljmp
loopnew
loopne
push
adc
and
xchg
test
add
pop
loopne
add
or
fwait
dec
mov
and
xchg
ficoms
mov
iret
lcall
jbe
mov
mov
jl
xorl
xchg
lea
or
loopne
dec
jecxz
adc
xorb
popa
push
xor
iret
mov
or
sahf
rol
clc
lcall
jae
daa
scas
jle
push
filds
dec
aas
mov
mov
int3
sub
cmp
pushl
pusha
xor
add
mov
cmpsb
add
bound
mov
xchg
mov
rep
fs
pusha
add
sbb
adc
loope
leave
incl
mov
and
sarl
dec
push
into
jae
inc
and
push
push
leave
jo
mov
lcall
xor
and
jecxz
pop
jne
rorl
and
inc
sub
es
test
and
ljmp
ds
inc
mov
push
sub
jo
andb
push
or
push
pop
pop
mov
int
scas
jle
enter
das
cli
call
or
in
adc
push
mov
je
imul
inc
cmp
dec
std
iret
and
dec
mov
clc
xor
adc
arpl
xor
pop
cmc
dec
mov
mov
inc
sbb
xchg
pop
aad
xor
adc
lcall
decb
or
jle
je
inc
or
into
outsl
mov
dec
shll
icebp
mov
xlat
and
dec
push
daa
mov
cltd
mov
dec
loop
inc
and
nop
xor
out
add
nop
push
ret
pop
test
and
sbb
sub
std
addr16
pop
jmp
xchg
decl
fldt
and
not
subb
insb
nop
dec
jmp
inc
mov
call
jne
push
pop
lret
mov
xlat
out
test
cmp
scas
xor
sub
fsubrp
push
xor
push
pusha
adc
inc
or
lcall
decl
cmp
cmpsl
cmpl
xchg
shl
imul
xchg
mov
adc
stc
mov
sub
lcall
mov
or
in
cld
aaa
sahf
in
xchg
and
cmp
dec
sub
cld
mov
mov
cmp
jg
test
fildll
and
movsb
or
mov
jle
cmc
cmp
scas
sbb
push
ja
movsl
cmp
mov
cwtl
sub
daa
hlt
push
enter
pop
adc
xor
cmpl
jg
push
inc
sub
sbb
jmp
xlat
into
push
fwait
shlb
into
cmp
xchg
jmp
jbe
push
movsb
jns
out
and
jo
and
adc
xchg
mov
xchg
daa
and
test
into
mov
dec
inc
inc
mov
ja
jmp
out
jns
dec
lret
push
mov
pushl
push
mov
cwtl
mov
shlb
pushf
sub
push
add
insb
clc
pop
in
icebp
adc
push
cmp
incl
dec
fcmovbe
inc
jmp
leave
xor
lahf
mov
xor
and
jg
decl
mov
or
test
inc
adc
cmpsl
rorl
pushl
nop
mov
cmp
repz
fidivrl
cmpsl
adc
jmp
sbb
in
inc
fisttpll
inc
cmc
sarb
xchg
test
xor
mov
pushf
and
adc
jg
sub
and
jl
dec
jg
push
mov
out
xor
and
mov
ljmp
pop
shr
push
clc
test
push
adc
add
xchg
push
pop
sbb
std
insb
xchg
ss
jmp
andb
pop
mov
hlt
loopne
lea
imul
mov
outsb
iret
leave
inc
sub
mov
inc
or
adc
jge
mov
mov
pop
push
scas
les
inc
js
sbbl
and
incl
ljmp
mov
test
pop
ljmp
test
jmp
dec
iret
pop
lahf
loopne
inc
incl
in
aas
add
sbb
inc
jg
jle
ss
test
inc
push
push
repz
mov
jg
mov
cmp
in
aam
push
inc
xor
dec
pop
fnstcw
pushl
stos
roll
xchg
je
shrl
inc
bound
cmc
lcall
lds
or
fdivrs
loope
pop
das
cwtl
mov
addr16
aaa
add
iret
and
xor
out
pop
xor
nop
loop
pop
loopne
push
adcl
aaa
cld
incl
adcb
or
add
push
dec
push
jecxz
dec
adc
aam
dec
add
dec
cmp
xchg
and
stc
inc
fsubs
nop
pop
sub
in
movsb
out
mov
test
repnz
decl
inc
sbb
mov
sub
test
add
jge
lcall
jb
cmp
xchg
shrl
xchg
add
push
stc
loopne
mov
call
and
enter
inc
cs
imul
dec
mov
adc
mov
fidivrs
cld
ret
es
cmp
inc
lret
dec
mov
dec
xor
jmp
mov
or
and
xor
jne
movsb
cmp
lock
fdivs
test
mov
psubw
cwtl
add
pop
sbb
pushf
xchg
mov
push
and
ljmp
dec
mov
cmpsl
inc
int3
ss
push
shll
clc
inc
dec
pop
or
push
mov
icebp
mov
movsl
lcall
daa
push
mov
repnz
jns
test
aas
movsb
fiadds
and
movsb
mov
std
jnp
push
mov
clc
fbstp
outsl
dec
repnz
or
adc
push
cmp
int3
or
sub
or
push
jge
sub
jo
add
inc
nop
aaa
add
dec
sar
imul
push
cmp
xchg
xchg
rcll
ja
clc
jo
mov
ss
xchg
adc
push
cmpsb
insb
xchg
add
inc
fs
and
imul
movsl
js
sbb
flds
aad
xchg
or
or
xchg
incl
mov
jnp
inc
sahf
fiadds
movsl
push
das
stc
and
push
mov
push
or
mov
pop
xchg
pushf
fnsave
incl
sarb
push
mov
mov
bound
lahf
dec
ret
mov
incl
nop
xor
push
inc
xor
into
mov
or
pop
pop
popa
adc
aas
lcall
test
mov
test
xor
dec
outsb
loope
fcom
ja
and
mov
jmp
jl
push
popl
dec
and
jl
jle
xchg
xchg
push
ljmp
pushf
lock
or
aas
lds
jle
mov
shlb
xor
xchg
lock
sub
inc
and
test
rolb
sbb
insl
xchg
cmp
inc
mov
xor
jecxz
sbb
push
cmp
repz
mov
and
cmp
nop
push
daa
or
dec
data16
mov
mov
sub
clc
mov
push
xchg
lcall
sub
dec
cmp
xchg
addr16
leave
pop
pop
mov
push
cmpsb
adc
in
add
cmp
rorb
outsb
and
fwait
mov
adc
sub
aaa
push
or
dec
loope
push
jmp
sub
mov
or
adc
in
enter
xor
mov
dec
incl
xor
mov
fisubs
sti
xor
shll
out
push
ret
sahf
and
add
nop
lea
jle
or
in
loope
pop
scas
rorl
inc
cld
jle
xor
call
xchg
jbe
fbstp
dec
notb
sub
cmp
in
fbstp
mov
and
push
mov
fcomip
call
repz
xor
inc
sub
mov
mov
mov
repz
jmp
pushf
inc
sbbb
cmp
lret
call
ror
std
or
test
mov
dec
jbe
inc
mov
sub
inc
inc
sarl
xor
pop
cltd
push
cwtl
or
push
shl
cld
pop
cld
negb
cwtl
shl
and
sbb
jne
pop
int3
nop
inc
stos
add
mov
shll
aas
and
sbb
pop
xchg
mov
repz
fs
inc
mov
movsb
jo
gs
mov
add
stos
testb
xor
jg
call
jp
cmp
jge,pt
or
cltd
mov
mov
pop
and
and
sbb
in
clc
add
pop
add
mov
push
lods
adc
push
push
out
dec
je
mov
adc
ret
inc
fstl
and
je
push
test
test
pop
inc
ljmp
inc
mov
adc
js
cmp
rorl
dec
pushl
jl
pop
sub
movsb
hlt
and
sbb
dec
mov
jecxz
fidivrl
xor
bnd
incl
pop
mov
out
lea
xchg
movsl
add
lret
mov
xchg
cmc
adc
jecxz
inc
jbe
addb
push
mov
les
xor
push
test
lcall
lea
test
jnp
mov
pop
ljmp
dec
incl
adc
sarb
xchg
roll
inc
lods
lods
sahf
push
loopne
addr16
roll
jmp
xor
or
push
call
and
cmp
push
test
inc
sar
leave
stos
push
sbbb
sbb
mov
mov
sahf
add
inc
int
sbbl
adc
pop
adc
test
lock
mov
ljmp
mov
add
jle
fsts
add
inc
jae
in
test
incl
fcomps
out
add
jecxz
mov
outsl
addl
out
cli
or
pop
inc
dec
push
or
cmpb
sub
xchg
lcall
lods
stos
adcl
jge
leave
cmc
bound
popf
fsqrt
out
cltd
iret
imul
shl
pop
push
popa
xor
mov
xor
call
loop
and
mov
sbb
inc
mov
call
int
icebp
mov
and
push
xchg
pop
adc
ljmp
int3
mov
sub
pop
test
shlb
call
sbb
sbbb
cmc
rolb
xchg
fldcw
stos
mov
xchg
xorb
mov
sub
xchg
adc
dec
outsl
fdivr
incl
push
or
pusha
movsl
inc
pop
add
xchg
sbbb
ljmp
adc
adc
mov
push
xchg
bound
je
add
sbb
decl
or
es
fisubrs
adc
mov
adcb
cmp
adc
dec
add
inc
sbb
sub
dec
aas
cmp
or
mov
and
mov
ror
in
inc
push
scas
dec
adc
inc
or
mov
idiv
mov
jns
push
je
popa
mov
or
call
jg
jg
adc
lret
add
mov
psllq
mov
mov
mov
call
jg
decl
or
pop
push
pop
adc
push
push
sub
jmp
push
mov
and
sbb
sbb
mov
into
inc
jmp
sbb
adc
stc
mov
cltd
ud0
test
into
insl
mov
ret
repnz
push
aas
sub
insl
fcmovne
inc
mov
lcall
mov
rorb
push
mov
insl
not
push
jg
inc
xlat
sbb
dec
jbe
and
dec
lahf
mov
push
push
jo
fmuls
inc
mov
add
mov
movsb
mov
ret
addb
subb
mov
mov
dec
lods
push
jle
fwait
sub
pushl
ljmp
subb
test
sbb
cld
inc
jge
aam
jne
xchg
push
jmp
popl
adc
inc
inc
pop
out
dec
pop
ss
dec
sub
idivb
dec
imul
aad
addr16
das
cmp
mov
lods
inc
test
lahf
dec
icebp
icebp
jg
test
in
sub
or
mov
cli
mov
sub
decl
inc
push
test
inc
and
pushf
mov
adc
ljmp
rol
or
cld
outsl
mov
dec
ja
mov
and
mov
sbb
jl
test
call
xchg
cwtl
hlt
xor
decl
push
xorb
pop
lahf
rclb
shlb
mov
test
shrb
outsb
and
push
fstp
jge
mov
inc
push
fs
fwait
mov
xor
out
shrl
cmp
loop
or
test
adc
out
cld
push
nop
add
mov
and
inc
cmp
jns
adc
pusha
ljmp
fcmovnbe
lahf
aas
or
cmpsl
xchg
pop
ret
lock
inc
adc
ficoml
incl
or
cmp
scas
nop
mov
movl
adc
cwtl
and
into
shrb
pushl
push
pop
sbbl
xchg
fdivr
jecxz
data16
mov
add
es
cli
rcl
aas
mov
mov
or
xchg
and
jmp
daa
lret
mov
xchg
xor
mov
fdivp
dec
addr16
stos
stos
cwtl
vpcomb
inc
jmp
xor
enter
bound
mov
inc
jg
pop
xchg
inc
sub
stc
fisubs
mov
xor
jg
sub
mov
mov
ljmp
das
dec
lcall
lcall
cs
sahf
mov
sub
sub
pop
mov
mov
mov
call
iret
adc
or
les
push
aad
dec
ds
testl
decl
in
inc
rorb
or
pop
pop
stos
nop
mov
xor
push
cmp
jmp
mov
inc
popf
gs
dec
xor
fst
pop
dec
ss
cltd
push
roll
lcall
test
jmp
mov
int3
loopne
loop
xchg
add
fwait
or
and
pop
testb
sti
push
iret
mov
mov
jb
push
xor
add
aam
xor
mov
inc
dec
in
rol
icebp
pushl
sub
das
mov
aas
test
push
cmp
aad
xor
push
push
test
cmp
lcall
or
cmp
andb
xchg
cmp
mov
hlt
sbb
adc
lcall
mov
aad
loope
outsb
sub
and
push
add
mov
cmp
lret
test
repz
stos
out
jnp
push
cmp
test
dec
push
jg
lock
mov
nop
fsubrl
loop
test
add
inc
pop
lock
mov
clc
or
scas
inc
mov
pop
push
mov
add
shll
sub
sub
lcall
dec
stos
jo
cmp
mov
inc
jns
inc
xlat
cld
daa
cmpl
push
inc
adc
dec
adc
push
mov
popa
jmp
mov
adc
mov
sub
cltd
js
adc
scas
ja
mov
or
sar
adc
jle
not
movb
sbb
inc
fcmovnbe
out
or
sub
daa
jo
xor
xor
repz
cli
lds
sub
cltd
xor
sbb
iret
mov
arpl
jp,pt
pop
ds
jmp
addr16
adcl
adc
fiaddl
and
push
call
mov
insb
int
pop
adc
xchg
sbb
fcomps
leave
ret
add
leave
ret
jle
out
fisttps
pop
ret
decl
or
jne
or
push
mov
push
outsb
push
decl
lea
adc
jmp
pop
lea
add
xor
push
inc
lea
add
call
inc
add
inc
lea
je
adc
insl
jbe
inc
call
lea
add
call
add
jb
push
and
fnstenv
shrl
movsl
mov
jne
out
mov
sahf
adc
pop
push
add
das
xor
mov
inc
xor
mov
insl
or
call
add
inc
es
fiaddl
aaa
adc
ljmp
call
lret
push
pushf
cltd
or
test
and
loopne
mov
add
mov
add
movsb
je
push
or
mov
mov
lock
add
and
fimuls
fadds
sti
orl
into
cmp
lcall
and
in
nop
jg
frstor
cs
mov
adc
or
pusha
sbb
call
cwtl
sbbb
shlb
inc
sbb
mov
pop
lea
jne
mov
sub
or
add
push
jmp
push
je
add
and
dec
insl
xchg
or
and
or
cmpl
call
jne
call
addl
shlb
insl
sti
add
xorl
je
call
sbb
add
incl
or
fwait
insl
mov
and
inc
call
and
call
std
mov
add
addl
ljmp
rorb
andl
rol
xchg
rcrb
or
add
pop
inc
es
and
faddl
lea
lea
sarb
jne
cmp
add
sahf
ds
ss
mov
addl
lea
ficoml
xor
imul
xchg
enter
out
insl
aas
xor
pop
xchg
inc
or
call
xor
add
inc
add
inc
orl
and
hlt
cmp
fcoms
pcmpgtd
push
add
jle
and
or
mov
or
test
inc
adc
xor
or
xchg
sub
add
add
movsl
ss
add
mov
inc
sub
push
add
inc
sub
push
ret
add
andl
and
rolb
les
rolb
pushf
or
data16
push
hlt
sbb
xor
addr16
sbb
adc
sbb
xor
pop
xor
push
nop
rorb
loop
call
mov
sbb
cli
into
mov
and
dec
test
and
push
push
push
dec
lar
sahf
and
cmpsb
pusha
mov
js
jbe
and
jne
adc
data16
mov
test
add
push
enter
push
dec
outsb
add
into
xchg
jne
mov
and
and
ss
and
fisttps
mov
mov
cld
sarb
aam
add
fiaddl
xor
je
sub
pop
fdivs
mov
test
add
movsb
or
mov
pusha
jno
test
sub
test
push
sbb
xchg
push
stos
add
int3
mov
sbb
sbb
adc
ds
mov
inc
js
je
clc
push
add
bound
push
adc
or
rol
lret
ds
movsl
int3
cmp
or
call
popa
pop
ljmp
xchg
dec
add
pop
testb
addb
sbbl
and
mov
ret
xchg
jp
and
inc
adc
add
in
xor
sub
mov
sub
fsubrl
mov
lcall
inc
cmp
rclb
cmpb
in
int3
adc
ljmp
movsb
loop
outsb
xchg
lret
and
pop
or
sub
pusha
call
in
push
fmul
xchg
shl
pusha
rorb
int3
popa
inc
je
cld
nop
pusha
sbb
xor
and
xchg
or
int3
fcompl
push
cs
bound
add
mov
movb
popa
mov
pop
mov
dec
dec
push
inc
pop
mov
repnz
enter
xor
adc
push
adc
insb
into
sbbb
out
ss
aaa
ror
je
cmp
mov
into
shlb
inc
jo
pop
xor
ror
lea
push
mov
lcall
addb
ret
inc
lods
and
push
lcall
fsubl
sbb
int3
adc
outsb
or
push
hlt
cmp
cwtl
add
dec
or
fs
dec
pusha
push
popa
or
and
bound
out
pusha
and
fs
dec
jl
int3
xor
aas
inc
or
mov
stos
xor
into
add
or
inc
lods
push
jp
pop
loop
inc
scas
je
lret
into
lcall
cmc
xor
pop
adc
cli
sbb
xchg
test
mov
push
test
or
icebp
jp
add
fmuls
mov
sbb
sbb
add
mov
mov
rolb
lods
pop
mov
and
inc
cwtl
into
or
inc
pusha
cmp
fs
and
rolb
outsb
decb
jb
add
clc
pop
cmpsb
in
sbb
mov
inc
jo
or
clc
add
mov
sbb
aaa
sub
jne
cmpsb
fsubl
jne
rclb
add
and
cwtl
fldl
scas
mov
fs
mov
daa
jmp
add
jne
inc
sbb
push
add
xor
push
mov
add
ret
inc
data16
dec
rcr
xlat
mov
fs
xor
cmp
fadds
sub
mov
adc
popw
xor
inc
push
push
push
cmp
pop
ja
jl
jle
jp
add
pop
inc
jo
insb
mov
add
shll
mov
sahf
push
movsb
cmpsb
sbb
or
jne
add
sar
dec
mov
cmp
or
dec
mov
sub
xchg
push
xchg
jl
pop
xchg
cltd
and
xor
les
push
add
pop
jle
inc
xlat
inc
mov
scas
call
call
mov
inc
je
sbb
cmp
int
push
jne
shrb
rolb
push
push
les
lcall
add
dec
lods
stos
shrb
cmp
sbb
call
insb
orb
or
xor
mov
mov
push
data16
or
push
lods
or
shrl
enter
popf
xor
inc
add
jo
sbb
ljmp
xchg
lret
orl
mov
int3
fcoml
xchg
xor
sarb
mov
jle
cli
jge
popa
das
mov
cs
int3
push
pusha
pop
lret
call
pop
adc
jl
adc
mov
push
cwtl
sbbl
add
mov
mov
xor
and
fcmovbe
mov
push
adc
incl
inc
call
lock
add
and
bound
inc
lock
adc
lods
not
orl
sldt
inc
sub
add
xchg
mov
loope
sbb
inc
and
push
cmp
pop
mov
fistl
push
push
mov
add
movl
lock
sti
inc
add
mov
pop
lock
jmp
or
dec
mov
lock
adc
or
inc
add
mov
mov
add
lods
mov
iret
div
sub
rcrb
ret
inc
sbb
lock
pushf
imul
fsubs
add
sub
push
adc
fiaddl
xor
or
pop
jne
sbb
dec
and
push
jge
or
xor
cmp
sub
clc
orb
adc
inc
add
dec
clc
push
loope
add
xlat
iret
mov
test
inc
mov
push
rorb
add
mov
xor
mov
xor
push
mov
pop
stc
hlt
outsb
sbb
pop
cmp
jmp
movb
lock
lret
pop
cmc
jge
in
mov
int3
sbb
mov
fisubs
int3
out
fisubl
mov
pop
or
ss
fisttpl
cmp
outsb
sbbl
shrl
fdivrl
cwtl
fildl
push
add
xchg
sbb
adc
xor
fmuls
repnz
mov
pop
insb
mov
cli
and
lds
fnstcw
dec
add
mov
mov
neg
andb
pop
cld
jecxz
mov
xor
ret
mov
xchg
mov
dec
daa
xlat
sub
enter
dec
jo
in
and
xor
mov
adc
in
dec
bswap
mov
sbb
lock
sbb
xor
jbe
fdivs
fldl
push
pop
not
mov
mov
cmp
lock
gs
lock
sar
adc
out
aas
or
or
mov
sbb
inc
mov
out
mov
sub
push
sub
jo
add
or
or
test
mov
sub
jne
lea
push
mov
rcll
mov
stos
mov
mov
cwtl
cld
hlt
adc
jmp
mov
dec
sbb
outsb
mov
or
mov
sbb
adc
pop
cmp
xor
sbb
xor
mov
ret
pop
add
js
lret
lahf
das
mov
call
ljmp
or
enter
ret
fisttpl
int
ja
adc
push
inc
xlat
xor
adcb
mov
cmpsb
incl
outsb
shrl
out
sbb
int
aas
pop
dec
jmp
std
inc
dec
inc
shlb
xchg
cld
ds
cmp
cmp
xor
inc
and
jo
mov
jae
pop
test
je
add
pushf
cmp
sbb
sub
testl
fstps
fdivrs
ret
andl
in
cmp
test
inc
cmp
and
push
sbb
pop
loopne
pop
or
mov
aam
scas
push
std
xchg
mov
jne
sbb
xor
repz
rolb
aaa
push
in
mov
jmp
pop
adc
incb
inc
adc
mov
add
adc
lahf
push
mov
scas
inc
imul
aam
inc
dec
adc
outsb
mov
jecxz
orb
inc
insb
mov
push
and
mov
pusha
shrb
fbld
jecxz
push
jg
fistl
addb
stc
ret
add
cmp
loope
int
jae
loopne
pop
mov
ret
sbb
add
sbb
pop
rclb
jge
inc
cmp
push
dec
sbb
roll
les
fsubrs
mov
cli
clc
ja
sbb
sahf
inc
pop
sbb
fistl
imul
int
pop
jge
addl
cmp
pop
cwtl
negl
and
or
out
icebp
mov
xor
jge
and
testb
sbbl
push
je
ja
addr16
xlat
in
cwtl
mov
mov
xchg
push
clc
and
jl
fcmovu
mov
push
push
add
push
cmpsl
incl
adc
ret
repnz
adc
repnz
shrb
xlat
adc
insb
neg
ja
ret
and
mov
es
or
or
jne
in
mov
cmp
lods
mov
mov
push
sub
clc
push
or
jg
and
sub
add
aaa
push
adc
fsub
into
adc
sbb
sbb
and
mov
sbb
lret
popf
ret
ret
mov
pop
pop
loopne
mov
in
loopne
or
and
cmp
add
sub
pop
inc
rolb
add
iret
test
call
push
call
inc
push
mov
xor
fmuls
lock
push
sar
xor
clc
xor
add
les
in
call
mov
lahf
fs
rclb
pop
sbbb
add
loop
push
inc
idiv
push
mov
or
clc
jle
sti
and
jae
add
sub
jle
adc
orb
mov
in
inc
adc
dec
lcall
and
mov
rep
or
adc
arpl
jecxz
jg
in
aas
pop
pop
lcall
mov
push
pop
cld
xchg
xchg
jnp
dec
add
adc
or
lret
push
sub
mov
xor
loop
push
aaa
lods
mov
lret
or
add
cmp
fxam
add
pop
sahf
sbb
leave
inc
adc
inc
and
sub
scas
pop
cld
testb
fiaddl
insb
imul
add
dec
xchg
add
roll
dec
movsb
sbb
clc
pusha
lods
adc
test
lods
es
cld
and
or
inc
pop
scas
mov
push
outsl
lea
inc
xor
and
js
addl
inc
inc
pop
pop
or
add
add
push
in
ret
push
dec
sub
fsubr
rolb
mov
clc
pushf
dec
or
push
or
aaa
add
jmp
fstpt
sti
jmp
or
add
je
xorl
sub
pop
mov
das
dec
jmp
lcall
mov
xor
push
rol
sub
xor
sub
das
lcall
xor
out
dec
add
loope
and
int
pop
jo
popf
rcr
sbb
int3
iret
fcompl
cs
int3
adc
aas
and
dec
cmp
or
imul
sbb
push
adc
add
adc
ljmp
adc
or
sub
pop
jae
icebp
pusha
push
dec
js
mov
dec
mov
int3
test
mov
lahf
pushf
mov
das
xor
out
mov
out
mov
lcall
cld
lret
icebp
and
es
cmpsl
cmpsb
xor
rorl
dec
in
push
cmp
pop
push
out
add
sub
xchg
pusha
adc
jno
fs
adc
stos
push
ss
add
inc
shrl
jecxz
and
sbbb
mov
stc
fisubrl
push
lock
repz
or
lea
sbb
loop
popa
pop
lods
jge
adc
pop
int3
mov
neg
adc
inc
mov
push
cmp
sarb
or
andb
ficoms
jo
stos
push
je
xor
adc
loopne
sahf
sbb
push
out
push
xor
add
adc
cmp
cmpsb
sbb
scas
and
int
mov
lahf
and
adc
out
jbe
adc
int3
mov
xchg
push
call
lock
addr16
test
sbb
cmp
push
fcom
mov
incl
andb
aad
repnz
adc
mov
mov
lcall
cmp
bound
sbb
jne
xor
rcrl
loopne
adc
nop
fiadds
inc
pusha
in
shll
ret
mov
fildll
clc
fisttpl
into
int3
out
dec
into
icebp
enter
out
push
adc
sbb
sbb
sbb
xlat
call
fsub
adc
int
sbb
scas
ret
in
not
dec
jecxz
ret
test
insb
and
lret
xchg
movb
aam
jo
or
push
jmp
xchg
cmc
xor
and
and
sub
jns
icebp
repnz
mov
dec
das
sbb
xlat
fcmovnbe
insl
xor
pop
insl
mov
or
call
and
jbe
mov
shl
ret
add
xor
inc
inc
in
clc
xchg
or
add
mov
mull
ret
pop
push
xor
xor
test
stos
stc
leave
inc
dec
adc
flds
inc
andb
enter
lret
lock
loopne
pusha
roll
push
add
sbb
shll
adc
into
dec
leave
inc
add
loopne
addr16
sub
ds
push
push
js
push
in
push
lea
add
pushf
js
cmp
xor
clc
add
gs
shr
pop
xlat
es
mov
pusha
and
fcomp
cli
and
inc
ret
loope
mov
xorb
push
pop
cwtl
rorl
filds
xor
push
mov
loopne
xor
pushl
mov
and
sub
aad
mov
fmul
ret
sbb
dec
js
cmpsl
orl
mov
mov
loopne
cmp
aas
inc
rep
dec
call
pop
stos
cli
inc
add
test
xor
add
inc
xor
and
sbb
fiaddl
pushf
in
test
push
push
repnz
jecxz
and
xor
inc
popa
cld
push
cmp
rcll
mov
mov
xchg
xor
sub
in
jmp
pop
loopne
or
in
push
inc
into
push
sbb
and
jbe
dec
mov
jo
dec
sub
mov
xor
not
faddl
push
sbb
lds
adc
inc
in
xchg
into
fsubl
mov
iret
xor
test
cmp
cmp
add
push
movsl
popf
pusha
push
mov
or
pusha
pusha
dec
push
push
pop
jg
pop
jb
enter
aam
mov
filds
js
enter
ja
rcll
ds
insl
ret
push
fldl
mov
inc
or
xchg
and
push
in
jne
repz
jg
sub
push
jne
fsubrl
push
inc
movsb
add
in
test
mov
lea
rcrb
mov
addr16
push
push
xlat
sub
xchg
push
add
mov
mov
inc
mov
repnz
dec
test
mov
fnstcw
sahf
sbb
xchg
fdivs
push
das
stos
pushf
mov
pop
sbb
xlat
dec
dec
fnstcw
stos
sbb
pop
adc
fsubrs
add
cmc
lcall
pop
add
fwait
hlt
dec
inc
sbb
cmp
add
xor
clc
pushf
fwait
cmp
mov
or
sbb
or
test
sahf
cld
xor
hlt
test
adc
std
lahf
cmp
xor
test
ja
aaa
cmp
and
inc
dec
call
popf
add
daa
nop
in
add
addr16
xor
mov
lea
shr
mov
push
mov
out
adc
and
call
mov
or
mov
dec
inc
adc
jl
ljmp
jge
out
sub
int
pop
imul
dec
pop
repz
les
sub
and
frstor
shll
pop
xor
xor
and
int
sub
add
push
jbe
push
outsb
scas
sbb
pushf
std
inc
out
pop
test
push
das
aas
sbb
mov
dec
icebp
inc
jnp
cs
in
dec
xor
pop
shlb
lahf
ret
loopne
push
push
dec
in
add
push
cld
call
idivl
movhps
andl
mov
fdivs
add
scas
xor
xor
cmc
cmpsb
dec
popa
and
aam
jo
inc
cmp
imul
movsl
mov
push
xchg
adc
stos
adc
mov
mov
pop
dec
test
dec
mov
in
iret
test
dec
test
and
aad
push
cmp
insb
movsl
test
xchg
je
xor
pusha
sub
lahf
jl
lock
and
add
in
insl
pushf
stos
mov
push
sbb
in
push
sub
xor
jmp
sbb
sahf
xchg
in
test
test
insb
enter
call
jo
inc
std
add
mov
add
xlat
adc
xor
lahf
jp
adc
and
mov
push
dec
cmp
dec
aas
nop
sar
cltd
push
sub
dec
fs
orl
xor
pop
lock
jmp
pop
sbb
daa
cmp
ja
cmp
fdivp
pop
test
lcall
push
pop
sub
mov
xor
fucom
aas
xorb
inc
push
sub
jae
enter
rorb
test
jae
sbb
jg
sub
jp
cmp
pop
in
jle
pop
fldcw
jle
lock
adc
pop
or
lea
roll
mov
mov
jns
into
mov
imul
cmp
mov
test
sbb
mov
cwtl
jl
das
xlat
and
lahf
mov
or
pop
adc
dec
or
jmp
or
and
stos
and
xchg
daa
mov
adc
iret
mov
mov
inc
test
pop
insl
push
inc
nop
fwait
cld
cmp
lret
push
ja
xlat
push
clc
aas
sub
mov
xchg
inc
add
pushf
add
push
push
inc
jmp
popf
pop
cwtl
cmp
test
out
or
loope
adc
shrb
aad
add
xor
sbb
inc
stos
dec
rcl
xchg
cmpsb
pop
js
mov
ljmp
or
fadds
loopne
shl
mov
or
mov
nop
into
stos
cmp
pop
cli
cmp
lret
sbb
aam
hlt
cmp
sbb
sahf
in
mov
and
xchg
sbbb
xchg
adc
into
mov
ljmp
and
cwtl
daa
jo
loope
pop
test
dec
push
jo
jl
std
xor
jp
mov
adc
inc
xorl
cmp
mov
or
bound
mov
cmpsb
mov
arpl
lret
sbb
aas
cld
mov
cmp
ja
nop
inc
and
incb
adc
add
insl
notb
add
adc
push
push
js
notl
lcall
add
sbb
inc
and
add
mov
adc
sbb
lock
inc
jle
sbb
aaa
sbbl
repz
sbb
mov
cld
mov
pop
or
mov
push
xlat
xlat
sbb
mov
adc
add
sub
fisubs
out
js
pop
fisubrs
or
cs
mov
into
add
and
cld
hlt
xor
scas
repz
outsl
xor
jo
mov
sub
sbb
mov
stos
pop
fisttpl
loopne
xchg
xor
adc
repz
xor
cli
push
out
mov
loop
add
rcl
mov
outsl
add
xchg
daa
xlat
jnp
cltd
add
dec
loopne
call
aad
jl
add
or
in
test
pop
adc
insl
sub
and
andl
out
add
loopne
mov
lods
std
subb
test
loope
push
dec
sbb
dec
push
add
jmp
insl
arpl
clc
inc
xchg
faddl
mov
scas
mov
jg
out
loope
xchg
mov
sub
adcb
stc
subl
add
es
push
daa
icebp
xchg
lcall
add
mov
icebp
imul
dec
mov
jecxz
pop
mov
outsb
xchg
mov
add
cmp
jae
jno
ljmp
adc
mov
adc
cmpsl
fsubs
or
jo
lock
andb
shlb
js
or
inc
cmp
cmp
adc
or
jbe
lcall
repnz
sub
sbb
adc
add
mov
add
lock
mov
es
bound
xchg
das
mov
hlt
or
sub
fcompl
push
aas
xchg
das
in
and
mov
popa
aam
enter
sbb
mov
in
cmp
inc
arpl
jns
leave
pop
pop
xchg
pop
cmp
movsl
out
fildl
jmp
repnz
push
pop
mov
fcoms
xor
inc
pop
jne
xchg
add
mov
inc
adc
and
and
test
adc
xor
shr
xchg
jne
or
cmpsl
fadd
addr16
adc
dec
inc
fucompp
add
js
xchg
add
in
pop
lahf
add
mull
stos
addl
jbe
add
cltd
lcall
test
adc
pop
sbb
inc
add
fadd
sub
adc
or
sub
jmp
push
aam
in
dec
int3
and
xchg
jle
jecxz
movsl
cli
inc
in
dec
fildll
push
ljmp
mov
sbb
in
xor
mov
push
sub
mov
and
mov
js
push
std
lock
sbb
or
xchg
xor
jnp
sbb
test
mov
cmp
mov
mov
sbb
or
js
ss
incl
inc
sbb
add
inc
adc
jmp
inc
xor
sbb
rol
cltd
sbb
into
lea
fstpl
testb
sbb
mov
inc
jae
push
xchg
call
das
rolb
mov
xchg
mov
fldenv
xor
mov
cmpsl
fs
pushf
inc
or
and
jo
add
dec
adc
ljmp
inc
int
pop
lock
push
incl
into
push
fdivr
call
push
xchg
adc
push
push
outsl
push
push
or
push
call
ret
cmpsl
lods
ret
or
xlat
adc
mov
xchg
or
push
add
mov
lcall
not
pop
mov
dec
xor
js
roll
or
xor
add
mov
jns
out
loop
inc
insb
enter
fisubl
fwait
push
or
adc
adc
mov
cld
call
sub
fldl
fsubrs
pop
inc
cs
cmpl
sbb
mov
add
inc
or
lods
mov
mov
lds
movsl
divl
fiadds
ror
inc
and
testl
loopne
push
xchg
clc
sbb
mov
daa
or
mov
cs
cli
ret
push
lret
lcall
jno
inc
add
push
xor
shrb
push
dec
dec
pop
js
xchg
sub
or
dec
xor
jecxz
jnp
punpcklbw
push
test
rorb
hlt
xchg
adc
das
add
mov
xor
ret
sbb
xor
mov
mov
cmp
outsb
stos
inc
jne
push
mov
sub
mov
pop
mov
or
out
stos
jl
jmp
inc
in
cmp
stc
mov
popf
sub
add
and
rolb
int3
ljmp
inc
sbb
sub
xchg
pop
popa
cmpsb
flds
inc
test
insb
add
sbb
out
shl
xchg
jecxz
data16
arpl
mov
fidivs
test
imul
jae
in
pop
dec
adc
jge
pop
dec
jne
lock
adc
jle
ja
aaa
jb
xor
imul
or
pop
push
add
ffreep
xor
cmc
subb
sbb
mov
mov
aad
xor
add
jae
movsb
pop
xor
lock
cmp
xchg
add
pop
mov
std
push
outsb
outsb
xor
lahf
add
ja
mov
pop
outsb
add
inc
pushf
fidivrs
or
nop
rcll
xchg
adc
adc
or
adc
push
dec
loope
add
js
sbb
imul
dec
stos
push
jge
loopne
pop
dec
push
jle,pn
xor
jno
and
and
and
das
dec
repnz
jbe
pop
add
daa
out
inc
jle
jmp
push
sbb
sti
jno
rcr
dec
xchg
decl
and
sbb
dec
sub
mov
and
mov
mov
out
adc
ret
mov
sbb
push
cmp
jne
aam
dec
inc
sti
repz
filds
jmp
or
xchg
cs
sbb
push
je
cli
and
jl
pop
pop
or
cmpb
pop
test
dec
mov
sub
pop
cmpb
mov
cmc
fisubl
sbb
je
dec
mov
sub
inc
es
ljmp
imul
insb
adc
inc
loope
inc
push
xchg
cmp
or
test
push
lock
pop
adc
pop
sbb
out
adc
sub
pop
stos
fisubs
jno,pt
shrl
shr
call
aaa
jle
pop
imull
inc
and
mov
jp
mov
or
ret
cltd
mov
lret
lock
lods
scas
and
test
aam
push
xor
adcl
sub
cmc
push
sub
aad
into
sub
dec
add
les
pop
and
repnz
data16
dec
les
mov
jns
dec
push
mov
cmp
adcl
lahf
dec
inc
push
push
dec
mov
sub
inc
inc
cld
or
add
or
mov
ja
sbb
test
sbb
sub
out
jecxz
fdivrs
orl
pop
jo
mov
fnsave
shrl
sbb
lods
pop
mov
pop
fld
mov
test
inc
xchg
out
loope
cltd
loope
push
adc
inc
mov
scas
or
adc
lock
les
mov
push
jmp
nop
test
sbb
sbb
iret
push
je
ljmp
or
mov
jns
ja
test
sub
jmp
ljmp
xchg
clc
and
mov
mov
add
sbb
sbb
jo
xchg
push
cmp
adc
adc
inc
add
ret
push
cmp
das
in
mov
jb
xor
add
mov
shl
jmp
sub
xchg
add
mov
mov
add
stos
add
xchg
fcomp
sbb
fcoml
adc
ja
stc
sbb
sub
das
loope
mov
push
aam
inc
add
bound
push
inc
and
ljmp
call
loopne
enter
cmp
jae
and
adc
inc
or
mov
pop
or
and
mov
aam
test
fdivrs
sub
mov
rorb
cltd
inc
sub
xor
push
roll
push
cmp
scas
loope
sub
xchg
js
scas
lret
roll
or
imul
inc
mov
addl
or
lret
pop
inc
arpl
jmp
out
jne
mov
add
scas
repz
inc
xchg
pop
aas
and
icebp
cmp
mov
stc
stc
bound
xchg
add
cmp
inc
andl
sbb
add
arpl
decl
mov
scas
clc
push
imul
loopne
sub
push
push
add
rolb
imul
ds
add
cmp
lods
jl
scas
push
movsl
les
les
divb
repz
and
fwait
pop
lahf
xor
icebp
mov
xorb
inc
adcl
clc
outsl
aam
xor
movb
pop
arpl
jge
xor
pop
jmp
adc
loopne
ret
sahf
mov
and
fdivrs
adc
sbb
jle
hlt
jmp
and
inc
add
out
sub
fwait
popa
mov
lcall
adcl
cmp
sub
in
or
sub
cmp
clts
pop
sub
mov
ret
subl
test
sahf
shrb
add
push
jmp
add
shlb
jae
cmp
inc
fs
add
xchg
push
insb
sbb
dec
inc
lret
pop
sbb
stc
push
ljmp
fisubrl
dec
fsubs
lods
xor
out
aam
imul
push
xlat
add
dec
loop
cmp
inc
mov
or
sub
mov
adc
pop
push
mov
or
jbe
xor
fisttpll
stos
or
nop
mov
push
sbb
push
xor
jle
ret
cmc
sub
cli
push
bound
add
test
push
lret
sub
aad
mov
shlb
pop
in
mov
pop
mov
sar
out
mov
push
sbbb
inc
push
jb
test
lea
mov
and
jmp
test
aad
nop
pop
mov
movsl
fbld
mov
push
notb
sbb
jno
cmp
loop
rolb
push
lea
jecxz
rcrb
and
cmp
shrb
and
adc
jns
jo
adc
mov
aas
les
xlat
gs
int3
aad
aaa
xchg
inc
jb
jae
inc
mov
test
or
cmp
les
loop
out
in
cli
or
dec
sahf
popf
or
lea
jne
jle
jecxz
fsubrl
mov
cmp
jne
mov
jp
sbb
xor
push
mov
int
lock
add
loope
add
push
lcall
pop
clc
adc
xor
shlb
out
mov
inc
lcall
aam
aad
dec
lcall
jno
inc
loope
rolb
sbb
mov
xchg
push
mov
in
inc
push
test
or
jno
in
add
dec
inc
dec
movl
lods
subb
push
xor
xor
call
cmpsl
movsl
add
or
aad
jbe
outsb
icebp
jo
lock
jp
adc
fisubl
addb
ret
mov
rclb
repnz
je
sbb
test
pushf
out
pop
mov
popf
cmp
in
and
jecxz
mov
jne
sub
jg
scas
adc
and
lret
push
sbb
or
sub
push
rol
jns
repz
sub
das
cmp
es
imul
ja
and
pop
add
mov
scas
xchg
lret
clc
in
jbe
nop
imul
les
push
ret
outsl
loope
in
popa
push
dec
pop
pop
bound
inc
add
rcrl
add
xor
add
adc
cs
inc
mov
clc
xchg
push
mov
fsubs
add
add
outsl
adc
shlb
mov
jle
mov
mov
rcrb
sbb
and
loop
mov
jae
xchg
push
inc
pop
pusha
add
xchg
sbb
dec
hlt
fldcw
lea
lret
loope
add
adc
mov
mov
roll
int
jne
das
sar
das
mov
dec
jle
add
sbb
scas
xchg
jecxz
sub
adc
or
aas
mov
jmp
push
das
in
inc
xchg
cmp
rcl
mov
push
inc
add
adc
enter
adc
adc
test
in
add
or
test
movsl
aaa
repz
das
mov
shlb
pop
xchg
data16
add
or
add
mov
jg
jmp
xchg
sbb
lcall
xchg
inc
xchg
xor
pusha
mov
sub
lret
loope
sbb
insl
dec
lea
bound
mov
movsb
or
sub
mov
lds
add
jg
dec
mov
cmp
cmpb
jne,pt
pop
inc
pop
aad
mov
mov
popa
and
add
dec
test
xchg
adc
sub
mov
sbb
and
lea
and
add
stos
adc
add
pop
or
mov
ret
or
add
sbb
ja
test
adc
loopne,pt
popf
roll
mov
pop
sub
pop
pop
sbb
mov
cltd
sub
inc
xor
fwait
insl
fldt
sbb
xor
add
stc
leave
ret
or
inc
xor
std
or
mov
xchg
adc
dec
call
sahf
jmp
mov
arpl
ljmp
xor
inc
jmp
or
addb
xor
push
fnsave
add
push
dec
in
jne
andl
gs
enter
daa
inc
jecxz
cwtl
cmp
cmp
mov
xor
in
cmp
mulb
cmp
dec
xor
aaa
pop
aas
in
mov
lods
in
hlt
adc
mov
add
dec
in
xor
pop
pfrcpit1
icebp
dec
ljmp
shll
mov
or
cmc
pusha
xor
add
insl
add
mov
mov
fimuls
add
xor
mov
popa
add
pop
xchg
and
stos
or
jl
and
adc
add
ss
or
out
cld
call
jne
or
cs
sub
ss
push
orl
call
cmp
cmp
xor
add
add
add
pop
pusha
and
inc
fcmovnbe
movl
or
pop
outsb
loope
add
aas
add
xor
clc
xor
fdivrs
mov
sub
xchg
xchg
dec
and
daa
or
flds
lods
mov
fsubs
out
or
mov
push
inc
push
iret
inc
cli
add
clc
add
pop
and
rorb
add
in
data16
pop
jns
fsub
add
xor
sbbl
or
mov
and
cs
cmp
xlat
lret
sbb
lcall
loop
jp
mov
ret
dec
aas
inc
in
ss
repnz
xor
ficompl
pop
inc
fildll
arpl
or
adc
movsl
push
int3
lcall
inc
prefetchwt1
jne
insl
cwtl
sbb
cmp
daa
jno
xor
adc
jb
mov
imul
inc
es
or
mov
bound
std
jae
fdiv
add
push
sbb
or
cmp
mov
pop
cmp
enter
mov
add
in
push
loope
sbb
cmp
mov
ss
int3
jne
push
lret
pop
jno
push
dec
cltd
loopne
cld
mov
add
lret
xor
jl
test
pushf
ljmp
movsl
add
inc
inc
lcall
xchg
push
and
mov
mov
xor
adc
cmp
fiadds
fwait
cmp
call
enter
lds
and
enter
mov
mov
popa
cwtl
adc
or
iret
and
push
mov
mov
push
cmovp
jecxz
cmp
sarb
popa
test
cmp
mov
out
jbe
rcll
xchg
pop
sbb
insb
mov
mov
pusha
jp
add
push
loopne
xorb
fcompl
push
jmp
or
xchg
mov
clc
cmpb
add
mov
jne
ficomps
icebp
xor
in
cmp
ss
movaps
xor
ret
mov
lret
inc
adc
push
pop
sub
mov
add
das
das
sbb
rorb
adc
jp
pop
add
andl
sbb
xor
inc
dec
inc
xor
lret
or
or
push
xchg
adc
mov
ret
jo
mov
and
xchg
dec
adc
incl
imul
add
and
inc
shll
and
fs
js
shl
cmp
outsb
dec
ljmp
aam
icebp
fs
enter
popa
add
cmp
cmp
pusha
and
testb
dec
pop
dec
xchg
enter
jns
aam
or
cmp
pop
fcomps
inc
mov
push
lock
and
bound
out
enter
js
pushf
ret
adc
shlb
mov
adc
call
inc
mull
out
sbb
je
push
hlt
test
mov
add
pushf
fisubrl
or
cmpb
jmp
xchg
xorb
xchg
daa
packsswb
stc
repz
call
enter
stos
push
xor
pop
jp
cmp
jne
sbb
add
dec
mov
or
mov
mov
xor
roll
aam
cmp
or
or
punpckhbw
pop
xchg
push
and
cmpsb
xchg
push
push
jns
decb
aam
les
jns
repnz
test
sbb
mov
pop
cmpb
call
xor
adc
imul
subl
lock
movsl
inc
arpl
xor
faddp
mov
out
fucomi
repz
mov
add
sub
aam
jnp
into
sbb
xchg
mov
sbb
test
rolw
addr16
nop
fnstcw
dec
hlt
sub
add
push
mov
xor
add
fiadds
jnp
ret
test
xchg
jmp
das
xchg
jg
aam
cld
xor
or
or
sbb
ficompl
sub
push
call
movsb
or
push
mov
sub
inc
cltd
jo
test
adc
xor
pop
sbb
loopne
in
stc
rclb
enter
js
xor
mov
clc
add
or
daa
xchg
push
mov
cmp
or
ds
int3
cwtl
mov
rclb
ret
aam
cmpsb
shlb
aam
das
dec
loop
fbstp
sub
inc
add
sub
add
xor
inc
ds
sbb
xor
sbb
inc
pop
jp
add
into
mov
mov
jp
dec
mov
and
lea
push
mov
xor
jo
stos
add
mov
sub
xlat
shl
sub
fdivl
sbbl
sbb
sbb
sub
pop
sbb
inc
jb
les
mov
repnz
or
adc
bound
push
loopne
cmpsb
enter
les
jmp
mov
cwtl
loop
or
shll
shr
jg
sbb
cltd
je
mov
loopne
cmp
cltd
jmp
ss
sub
data16
adc
mov
push
push
ret
jecxz
fldcw
jnp
cld
pop
add
sub
mov
sbb
daa
push
adc
icebp
test
loopne
add
out
lods
daa
out
sahf
sub
sbbl
decb
je
add
xor
dec
int
loopne
or
cmp
ljmp
in
add
addb
mov
inc
call
xchg
push
mov
or
and
in
pop
sbb
xor
mov
insb
add
ss
bound
jp
iret
shr
xchg
int
jge
cwtl
into
pushw
pop
fidivs
dec
call
pushf
xchg
pop
push
cmc
push
sbbl
clc
xor
pusha
xor
cmp
ss
sub
les
loopne
rcll
mov
in
inc
fldl2t
inc
aas
loope
sub
xor
or
mov
pop
in
xor
sub
dec
test
push
cwtl
fdiv
jnp
jo
jo
mov
mov
dec
mov
mov
ret
insb
pop
sbb
sub
sub
adc
add
jecxz,pn
fdivr
sti
dec
jb
and
andb
push
imul
push
cmp
xchg
mov
loop
je
cmp
loopne
push
aas
sub
cmp
dec
das
sbb
jecxz
adc
xor
aad
xchg
push
jp
sub
xchg
int
arpl
xchg
push
sub
mov
cmp
pop
xor
scas
push
test
fsubr
mov
adc
add
adc
jb
clc
inc
xor
inc
and
inc
add
dec
xor
lock
pop
push
insl
jo
mov
mov
pop
mov
pop
ds
jp
cld
adc
adc
sbb
and
push
adc
fneni(8087
adc
hlt
mov
fadds
imul
cmp
out
sub
pop
clc
xchg
add
sahf
inc
pop
mov
call
int3
fdiv
out
and
inc
adc
pop
dec
jo
inc
add
insb
jp
push
ss
xor
pop
loopne
hlt
adc
xor
lock
loopne
repnz
lret
inc
rclb
dec
jmp
call
in
repz
imull
pop
imul
xor
call
inc
rolb
adc
xchg
mov
push
call
mov
inc
xlat
out
rcrl
insl
push
push
shll
loopne
clc
dec
pop
loope
lock
add
push
outsl
mov
jg
out
inc
xlat
in
push
cmp
js
push
inc
mov
mov
mov
js
loope
int
mov
push
in
xchg
loope
or
pop
mov
xor
jmp
dec
mov
popa
xchg
mov
scas
movsb
cmp
add
jg
hlt
mov
shl
mov
shl
ds
jo
dec
and
add
jg
cmpsl
xchg
rclb
out
mov
ret
lock
clc
call
jp
jge
psrad
fsubrp
stos
aaa
clc
sbb
xchg
iret
test
lret
mov
test
mov
xor
mov
inc
mov
int3
jae
sub
sub
out
inc
es
add
jae
inc
stos
leave
lret
push
lea
mov
mov
jmp
mov
xchg
ret
or
rclb
push
lea
xor
lret
sbb
lahf
adc
jmp
ja
and
and
aaa
sar
loopne
loope
adc
addb
jne
mov
jge
push
inc
pop
inc
mov
cli
cwtl
cmp
xor
xor
sub
push
roll
and
ljmp
aad
cvttps2pi
les
test
arpl
xorl
push
movsl
mov
push
inc
std
pop
rolb
outsb
jp
pop
push
lret
lock
aas
pop
sti
jmp
clc
cmp
adc
cwtl
incl
cmp
and
decl
xor
stos
les
and
cmp
out
or
addb
sbb
inc
lds
mov
lcall
fdivrl
jle
fnstenv
or
adc
cs
outsl
lods
mov
subl
ret
les
cmp
jp
faddl
ret
push
push
add
adc
xchg
add
jl
test
ret
shlb
xor
jnp
add
shll
inc
and
data16
sbb
in
xor
xchg
hlt
daa
push
shl
mov
aas
fimull
es
outsl
cmp
or
dec
cmpsl
add
xor
clc
rcll
and
aas
test
fildl
test
insb
call
mov
inc
fcos
push
push
sbb
xor
jl
aas
jne
xchg
dec
cmp
pop
adc
add
sti
mov
push
or
sub
push
or
or
xchg
push
adc
hlt
ret
sbb
jmp
adc
adc
dec
in
lret
scas
xchg
fidivs
nop
inc
sbb
roll
test
xorl
icebp
adc
push
repnz
and
mov
xchg
ja
gs
push
ficoms
sbb
sbb
pop
add
daa
cmp
sti
ret
sti
sbb
sbb
xchg
dec
mov
sbb
lea
dec
sbb
pushf
mov
in
pushf
and
test
clc
or
and
sub
cmpl
sbb
pusha
ljmp
outsl
push
cmp
sbb
add
test
rclb
push
xchg
mov
adc
add
cld
ret
std
lea
adc
inc
jmp
out
dec
xchg
dec
adc
inc
ret
aaa
in
sub
push
lahf
xchg
leave
repz
inc
test
or
push
mov
repz
leave
mov
xor
jmp
mov
xor
push
nop
test
hlt
sub
lock
insb
jp
fdiv
cmp
popl
adc
dec
add
int
int
adc
add
and
cs
mov
ds
xor
sub
movsl
jmp
push
js
sub
pushf
popa
xor
xor
adcb
mov
imul
sar
mov
outsl
jge
jg
or
push
in
mov
adc
or
adc
loopne
mov
lods
in
out
pop
loop
ret
or
adc
popf
adc
add
and
and
mov
sahf
push
out
pusha
or
inc
sbb
addl
popf
flds
add
adc
jae
mov
lods
ret
int
jg
scas
xchg
cmp
push
out
or
repnz
dec
pop
dec
jl
data16
add
dec
loopne
adc
mov
push
enter
negl
adc
pop
test
sti
int3
fs
jecxz
and
imul
les
mov
movsb
daa
mov
pop
push
cli
cltd
mov
cmp
pop
das
cwtl
inc
out
mov
mov
push
jecxz
inc
test
mov
and
add
jl
sub
into
cmc
ja
mov
adc
xor
enter
sbb
clc
sbb
ljmp
mov
jbe
dec
ret
add
jo
movsl
xor
adc
mov
fcompl
jb
and
pop
lods
sahf
addb
mov
imul
hlt
push
add
xor
loope
cmp
inc
pushf
dec
popa
repnz
or
js
push
push
call
call
idivl
inc
loop
test
enter
jbe
pop
push
flds
mov
ret
mov
jne
push
cmp
fwait
sub
push
test
es
movsb
mov
andl
imul
inc
xor
es
jp
or
adcb
jmp
mov
add
loope
lret
pavgb
pop
daa
cld
ffree
jo
loopne
xchg
leave
pop
sub
adc
add
sbb
call
lret
or
mov
pop
loopne
ret
sbb
stos
pop
enter
mov
and
mov
xor
push
bound
popf
std
icebp
lock
gs
dec
popa
mov
xchg
ficompl
rolb
sbb
scas
movsl
sti
adc
clc
and
fildll
adc
pop
fcoml
xchg
aam
lcall
out
ds
adc
shl
sub
cmp
add
dec
push
xlat
xchg
mov
lods
xchg
or
fsubs
pop
mov
std
or
pop
add
push
adc
inc
adc
fs
add
cmp
xor
popa
inc
jg
inc
test
adc
testb
ret
mov
shr
out
fistps
lock
or
mov
adc
je
or
lahf
mov
and
int
out
leave
pop
sbb
sub
push
push
add
ret
pusha
inc
mov
push
dec
decb
mov
dec
dec
subl
mov
loop
or
push
test
add
loopne
in
pop
and
rcrl
lret
daa
add
rcrl
nop
sbbl
push
pop
in
add
jmp
push
hlt
popl
jne
and
mov
lret
lret
in
cmp
dec
sub
int3
lock
xchg
inc
lret
add
pop
mov
fadds
loopne
cmpsb
adc
xchg
movsb
or
cmp
int
mov
adc
cld
jmp
xlat
sbb
mov
out
jmp
into
test
pop
shlb
out
loopne
ret
daa
inc
jmp
xlat
aaa
dec
add
jne
inc
in
dec
jbe
dec
xchg
adc
jo
test
addl
jno
mov
lock
icebp
ds
and
mov
hlt
push
xor
in
add
sub
sbb
aam
mov
sbb
pop
mov
cmc
pop
iret
add
loope
or
sub
or
nop
shrb
sub
fucomip
add
or
and
gs
cld
cmp
cmp
xor
mov
les
mov
sbb
loop
xor
inc
int
mov
dec
daa
sub
or
mov
loop
dec
cmpsl
enter
les
adc
les
ja
or
bound
movsb
cmp
dec
sub
adc
xor
sbb
push
adc
cmpsl
cmp
iret
cwtl
pop
notl
cmp
popl
adc
pusha
pusha
and
xchg
and
mov
xchg
outsl
lret
adc
daa
pop
xor
test
pop
push
dec
xchg
cmp
rcl
daa
leave
insl
daa
lea
aaa
aaa
cmp
xchg
xchg
add
addl
dec
or
mov
sahf
xchg
shll
outsl
or
testb
iret
jmp
or
mov
jae
or
add
ret
test
in
loope
xor
inc
or
add
inc
fsubrs
add
inc
add
cli
dec
sbb
repz
inc
pusha
or
sbb
pop
mov
nop
xor
lock
push
aad
push
mov
js
aas
dec
sub
cld
or
rcll
sub
cmp
and
adc
int3
cmpsl
cmp
jp
dec
daa
mov
out
mov
fstpt
adc
adc
jge
subl
leave
call
loopne
fwait
dec
je
add
hlt
enter
add
ds
in
lods
or
add
int
lods
xchg
dec
in
xor
jae
mov
sub
fsubrl
add
cmp
or
daa
addl
inc
sub
sarb
out
adc
xlat
pop
mov
stos
add
and
push
or
mov
je
inc
int3
xor
in
sbb
pop
sbbl
jne
and
dec
ret
jecxz
push
fadd
inc
loop
add
mov
mov
pop
lods
or
test
lods
adc
scas
movsl
js
add
jl
pop
loopne
jno
mov
pop
add
aaa
or
int
add
mov
jae
loopne
mov
wrmsr
adc
mov
mov
inc
addb
aam
mov
sub
cmc
lcall
lret
mov
adc
xorb
inc
cmpsb
sub
and
cmpsb
add
mov
ret
jbe
fistpll
push
test
loope
adc
or
and
and
mov
sti
cmp
rorl
mov
int3
adc
out
pop
inc
frstor
out
add
rcrb
and
xchg
lahf
or
call
add
xchg
lock
or
ret
cwtl
jb
xchg
xor
filds
jmp
test
jne
and
sbb
cmp
rol
cmpsl
jmp
xlat
fcmove
jne
pop
push
xorb
std
mov
jl
mov
jge
xlat
mov
pop
jl
or
scas
mov
xor
xorb
cmp
dec
faddl
subps
neg
sti
mov
ret
dec
lock
rclb
xchg
sti
push
sar
push
jns
inc
orl
mov
pop
sbb
jecxz
cmp
dec
dec
and
pusha
sub
cmpsl
aam
mov
sub
xor
cmp
ljmp
pop
xchg
xchg
cltd
mov
mov
adc
mov
inc
jmp
or
in
aas
lock
test
pop
in
mov
scas
xchg
jmp
mov
add
push
insl
adc
xchg
or
sbb
cmp
add
sarb
or
or
xlat
in
or
and
loope
sbb
ret
jnp
xlat
sub
or
dec
mov
lods
filds
push
rolb
sub
dec
dec
in
pop
rcl
andl
daa
loop
shlb
mov
sahf
shl
inc
xchg
adc
clc
mov
inc
scas
scas
arpl
cmp
negl
sarb
dec
aas
enter
push
in
mul
setns
gs
imul
push
lods
mov
sti
mov
mov
add
jo
mov
cmp
adc
scas
push
dec
and
mov
inc
sbb
sbb
aaa
jne
cmp
or
rcr
mov
add
push
adc
push
pusha
mov
jl
les
aaa
cmovg
bswap
bound
add
cmp
push
lahf
add
push
or
jle
xchg
repz
pop
lcall
hlt
int3
adc
mov
inc
jbe
mov
ds
dec
out
push
mov
sbb
push
fsubl
cmp
add
pop
enter
rorl
mov
loope
xor
int3
sbb
in
repz
dec
add
rcl
stos
pop
div
sbb
and
cmp
and
push
in
pop
or
pop
rcrb
dec
rol
jg
loope
push
jecxz
sbb
push
pop
xchg
cmp
and
lock
mov
les
cmp
cmpsb
pop
repnz
mov
adcb
xlat
gs
shl
scas
repz
fisttpl
mov
inc
jb
jg
add
push
push
bound
mov
and
in
popf
outsl
xchg
push
cmc
and
or
sub
add
jmp
into
adcl
pop
pusha
in
aam
loopne
mov
xor
push
mov
add
loopne
adc
sub
ret
cmp
sub
out
inc
leave
add
add
fisubrl
xor
jle
test
and
sbb
pop
or
dec
dec
sbb
push
ljmp
push
cld
dec
out
nop
or
xor
xor
add
inc
scas
pushf
sbb
dec
dec
fdivp
stos
mov
into
adc
lods
and
push
call
adc
jge
mov
scas
shrl
insl
adc
pop
or
pop
pop
cli
aas
push
inc
xor
iret
add
ret
jb
jne
lods
xchg
daa
lods
xchg
arpl
mov
inc
movsl
pop
jp
dec
mov
mov
inc
and
mov
push
fistps
aaa
jmp
mov
rorl
jge
sub
xor
adc
sbb
xor
mov
shrb
loop
xor
dec
push
mov
lods
or
mov
cmpl
sbb
rcrb
adc
adc
fnop
loope
push
pop
stos
cmpsb
fsubrp
enter
adc
adc
test
clc
xchg
inc
mov
lret
xchg
shl
ss
mov
or
fwait
jae
ss
clts
mov
clc
push
add
iret
cmpl
add
xlat
xchg
stos
divl
push
jno
mov
mov
push
movsl
cmp
iret
and
mov
sub
addr16
dec
mov
arpl
clc
add
clc
sbb
cmp
push
repnz
add
mov
loopne
call
jp
or
cmp
aaa
fcom
test
stc
orl
cli
mov
add
xor
ss
pop
test
int
dec
gs
add
pop
jmp
inc
mov
lods
ret
sbb
ja
xor
jne
adcl
aaa
mov
sub
fistpll
push
lods
clc
adc
aam
add
dec
add
push
ja
incb
or
add
mov
clc
rorb
push
and
pushf
inc
cmp
jmp
fadds
mov
je
dec
lock
mov
jge
leave
in
adc
mov
scas
mov
xchg
lret
scas
mov
pop
dec
mov
test
loopne
lock
insb
movsb
jge
jge
sub
pop
loop
dec
sub
jl
je
bound
shrb
movsl
add
pop
adc
dec
jo
adc
push
pop
inc
decb
mov
and
and
mov
adc
cli
mov
pop
jno
fstps
in
cli
icebp
iret
pop
jae
in
jne
rolb
dec
decl
push
mov
or
inc
int3
lcall
mov
vpsadbw
push
mov
jnp
mov
mov
jne
jmp
and
loope
ljmp
enter
xchg
and
push
scas
adc
adc
mov
sub
pop
and
ljmp
sbb
mov
add
shll
popa
jbe
jo
clc
int3
sub
add
test
in
push
jo
jnp
test
fldl
int3
add
add
ret
lock
cld
cmp
sbb
aam
push
call
mov
icebp
push
std
jae
sbb
ret
mov
mov
lods
xchg
loopne
xor
inc
cld
or
leave
ret
xor
pop
or
loope
push
ja
sbb
jne
cli
or
and
dec
sub
sub
std
sbb
pop
test
adc
js
lahf
and
add
das
jp
mov
sbb
push
pop
movsl
lods
mov
stos
repz
nop
mov
mov
push
xchg
sub
clc
adc
fwait
ret
out
inc
cmp
jle
rcll
dec
ret
cli
sub
pop
push
in
in
call
shll
cmp
jmp
add
lock
fistl
adc
push
sub
mov
dec
lds
nop
mov
inc
js
jg
clc
test
fsubr
add
or
push
cmp
and
inc
mov
cmpsl
add
inc
pop
mov
mov
sbb
mov
push
stc
adc
and
mov
dec
out
adc
push
ljmp
pushf
lock
adc
imul
les
lods
pop
mov
lret
and
shrb
iret
dec
shrb
shl
and
and
add
in
add
mov
mull
xchg
add
add
mov
and
enter
xlat
stos
aas
fdivp
test
xchg
mov
jecxz
or
xor
aaa
push
lods
fmuls
outsl
jmp
inc
add
cmp
and
cmpsb
mov
xchg
add
pop
js
and
mov
sbb
inc
or
shll
mov
add
inc
push
icebp
sub
pop
rolb
jbe
adc
adc
es
add
cli
jnp
cmp
inc
or
movsl
push
sub
dec
fs
mov
dec
sbb
pusha
dec
fsubl
push
hlt
adc
ror
fstl
push
push
mov
jg
sbb
testb
out
addl
nop
jbe
ret
cli
or
dec
arpl
mov
sub
and
sti
sub
addr16
lahf
movsl
cmpb
les
repz
add
rcll
mov
mov
loope
jge
int3
int3
dec
pop
hlt
fucomip
fldcw
aaa
jnp
les
lret
fsubs
loopne
arpl
push
mov
pop
in
push
pop
or
ret
loope
insb
in
jnp
shll
sti
test
xlat
xchg
mov
xchg
pop
mov
cmc
sbb
push
sti
sub
mov
gs
xchg
call
add
sti
sub
cmp
cld
fisubrl
fdivl
andb
and
mov
push
push
out
adc
inc
mov
xor
and
mov
xchg
mov
inc
push
popa
mov
push
in
push
inc
cmp
push
call
cmp
out
cmp
in
xor
sub
imul
adc
pop
inc
ffreep
push
push
leave
xor
lods
mov
stos
xlat
icebp
inc
pusha
and
xchg
mov
pop
add
icebp
cs
push
loope
jmp
mov
dec
ss
insb
mov
add
bound
sbb
ljmp
xchg
sub
fmuls
icebp
dec
and
dec
shll
adc
sub
push
addr16
jmp
adc
sub
mov
jnp
sub
in
add
cmpsl
xchg
inc
cmp
mov
mov
popf
add
in
divl
cmpsl
jp
mov
xchg
cmp
adc
int3
into
mov
push
fwait
or
or
mov
xchg
shll
xorb
or
popa
dec
lods
ss
sub
sbb
packuswb
and
sbb
andb
loopne
sbb
leave
sub
xor
xor
push
pop
orb
sub
xchg
adc
mov
mov
sbb
xlat
sbb
jg
ss
shlb
cmp
pop
mov
add
call
shll
push
clc
cmp
dec
aam
mov
mov
lock
dec
cmp
nop
add
or
cld
xchg
lock
pop
shlb
mov
sub
lock
fcoml
sub
pop
lds
inc
mov
add
out
sub
out
div
int
adc
sbb
mov
pop
movd
sub
mov
movsl
xor
pusha
or
or
imul
lcall
cmp
rcll
shlb
adc
movsl
decb
orb
cmp
scas
lret
rcrb
sbb
mov
pop
or
aas
es
clc
mov
cli
dec
fmul
enter
jg
mov
aas
test
fsubrs
call
adc
mov
cmp
popa
add
mov
loopne
orl
add
mov
pop
jne
mov
orl
fsubrl
or
lods
std
repnz
sbb
pop
outsl
dec
xor
xchg
add
loopne
sbb
sbb
jmp
call
inc
add
fstl
xchg
rol
push
sbb
mov
incb
pushf
iret
xlat
push
lock
xor
call
add
sbbb
in
scas
xchg
inc
rolb
loopne
test
dec
pusha
ret
mov
jmp
xchg
xlat
or
negb
pop
movsl
sub
sub
aam
or
call
fimull
cld
in
xor
dec
sub
or
and
dec
push
ss
jne
sbb
orb
ret
bound
or
or
call
jecxz
imul
loopne
mov
jnp
push
add
and
into
push
cld
jl
add
jge
mov
or
inc
sub
fnstenv
test
add
mov
cmp
leave
pop
loope
add
aaa
aaa
adc
add
add
sbb
mov
xlat
inc
mov
sub
adc
mov
in
orb
repz
out
xchg
out
jne
jnp
mov
jmp
sbb
outsl
inc
mov
mov
sub
inc
jmp
and
push
cmp
fsubr
push
sbb
cmp
les
mov
fcmovnb
jmp
push
push
je
inc
pop
loopne
orl
test
jno
xor
push
push
sub
fiadds
add
and
xchg
movb
push
shrb
mov
or
adc
pushf
sub
cmpsb
sbb
jbe
ljmp
setg
sti
xlat
mov
push
mov
adc
add
cld
int3
fs
cmp
inc
jg
enter
inc
fisubs
rorb
cld
sub
and
mov
sbb
push
add
imul
jge
rcrl
sub
mov
push
arpl
in
es
roll
inc
mov
jno
call
jns
sbb
sbb
sbb
mov
sbb
orl
pushf
sbb
lds
sub
lret
mov
or
or
pop
cmp
xchg
mov
adc
ret
lahf
inc
pop
lea
mov
test
fistl
in
and
das
or
ss
sti
or
xor
push
insl
xchg
sbb
inc
shrb
ret
js
inc
fiadds
hlt
mov
dec
xchg
sub
in
js
dec
add
mov
js
roll
xchg
icebp
push
push
test
sti
and
icebp
pushf
xor
xchg
mov
add
adc
xchg
dec
ja
sub
push
mov
mov
and
shrb
push
in
inc
sbb
or
clc
pushf
leave
push
mov
arpl
int
and
push
into
or
sbb
test
cmp
popa
xor
stc
jmp
es
pop
pop
clc
and
sbb
inc
cld
xchg
in
sbb
pop
popa
or
push
inc
loope
or
inc
xor
cmp
add
scas
fdivl
or
add
pusha
shll
jne
push
in
test
stc
jg
sbb
leave
mov
lret
mov
or
lahf
outsb
lock
lock
ret
loopne
push
mov
push
pusha
mov
in
mov
add
push
loope
clc
adc
ficoms
ja
clc
loop
sarb
test
lret
add
negb
ds
and
push
or
call
add
vmovntpd
xchg
out
mov
lahf
mov
jmp
fisubl
and
inc
add
mov
fs
adc
cmp
lcall
rclb
inc
add
bound
xorl
or
pop
sub
add
add
pop
je
jnp
add
push
mov
icebp
mov
sbb
sub
lods
mov
pop
ljmp
pop
mov
mov
in
jmp
test
addl
pop
or
add
adc
sub
adcl
scas
mov
mulps
sbb
sbb
push
add
inc
cld
push
scas
out
jae
push
pop
mov
jge
add
mov
fsubs
adc
xor
or
push
inc
mov
scas
mov
cmpsl
cld
loop
pop
xchg
testl
loopne
mov
inc
andl
sahf
add
ror
loope
lcallw
mov
sub
jl
push
add
aas
rcrb
test
add
fildll
rcll
dec
mov
in
dec
fsubrs
shll
cli
adc
pop
ret
and
test
mov
jecxz
addb
xchg
cld
dec
cld
pcmpgtb
xchg
arpl
ja
xor
ds
in
sub
dec
sbb
lcall
jo
and
and
or
popa
rol
sbb
es
gs
xor
dec
pop
cmpsl
push
int
pop
add
dec
adc
out
inc
ret
jne
xchg
lahf
les
ret
hlt
dec
adc
add
pop
popa
int3
call
adc
shll
mov
or
xchg
imul
pop
xor
sbb
adc
mov
cmpsb
jb
hlt
mov
jmp
add
inc
dec
adc
adc
loopne
test
pop
jmp
pop
lea
movsl
pop
mov
imul
xchg
lock
ss
bound
sub
sbb
adc
adc
mov
adc
daa
test
and
jmp
adc
stc
xchg
call
sbb
sbb
rcrl
mov
inc
or
mov
push
mov
push
pop
cmp
mov
push
adc
add
ret
sub
adc
lret
sub
add
add
jmp
daa
mov
pop
fisubrl
push
adc
cld
pop
xchg
ret
inc
and
lock
sbb
in
int3
mov
bound
xor
ja
mov
fiaddl
xor
enter
or
mov
psubd
jecxz
cltd
add
cld
andl
fisubs
test
ljmp
in
outsb
lea
sbb
out
and
cmpsb
add
in
aam
push
xor
mov
insl
mov
out
mov
in
int3
mov
sbb
fs
faddl
or
push
mov
push
jmp
stos
jne
push
xchg
rcrb
loope
sbb
loopne
adcb
mov
imul
add
sub
cmovl
xchg
adc
sub
xor
mov
dec
push
mov
mov
xor
dec
and
lcall
or
hlt
add
dec
inc
jmp
mov
mov
fs
cs
pop
pop
push
in
subb
and
pusha
mov
rolb
ret
push
push
push
sbb
jle
jbe
movsl
or
adc
or
into
push
and
pop
and
xor
push
test
add
push
adc
popa
daa
outsb
cltd
call
add
dec
push
ret
adc
andb
pop
shll
push
lock
add
test
jbe
mov
add
sub
jl
in
insl
fstl
lods
lock
and
fdivl
movb
icebp
push
inc
ret
js
or
cmp
add
xchg
fs
fidivrl
jmp
daa
test
sbb
je
fwait
mov
lret
test
fmull
add
jns
and
adc
push
adc
xor
outsb
lret
insb
loopne
addr16
adc
adc
adc
rorl
arpl
fdivs
xchg
jge
pop
dec
lods
jmp
stos
pop
adc
mov
or
js
or
arpl
aas
jno
nop
testl
clc
mov
add
sub
push
mov
mov
lods
movsl
addr16
rcll
clc
add
iret
dec
test
dec
add
ljmp
xchg
push
cmpsb
push
pop
cmp
ret
or
fsubrl
jne
jae
test
outsl
push
pop
inc
dec
inc
fsubs
mov
cmp
adc
xchg
xchg
movsl
popa
cmpsl
mov
clc
es
sub
jmp
jge
shll
aam
inc
bound
das
hlt
pop
lods
jmp
or
add
nop
inc
mov
nop
daa
lds
mov
mov
std
in
aam
lock
mov
xchg
es
xchg
xor
popa
insl
and
inc
inc
xchg
pop
sub
movsb
or
es
popa
inc
jl
push
adc
xor
imul
mov
lods
xlat
sub
or
loope
jmp
xchg
or
mov
cmp
sti
jb
push
cmpsl
pop
pushf
jns
je
sbb
in
xchg
or
ret
int
ja
or
and
add
pop
xor
sub
test
outsl
fstp
subb
add
sbb
mov
pop
and
icebp
jnp
xor
cmp
or
sbb
cmp
mov
adc
sub
aam
mov
or
scas
adc
add
mov
notl
add
in
pop
movsb
mov
sub
lock
dec
stc
add
dec
mov
push
les
jo
cmp
aam
test
mov
repnz
xor
mov
push
or
cmp
inc
push
sub
adc
add
adc
pop
adc
push
push
push
mov
hlt
fistpl
lcall
lahf
das
cltd
or
push
cld
and
cwtl
rolb
push
je
add
insl
xor
push
aad
mov
and
fwait
and
cmpsl
rcrb
sbb
test
or
mov
and
add
test
pop
sbb
loope
push
shl
scas
sub
xor
inc
ret
sub
rolb
mov
popa
xor
mov
outsl
mov
xchg
in
or
pop
sbb
jge
jnp
inc
mov
stc
rol
adc
sub
inc
ret
rcrb
stos
pop
add
loope
pop
add
insb
xor
daa
out
rclb
add
mov
sub
aam
inc
pop
dec
shrb
sti
jg
dec
xchg
add
lahf
inc
mov
jno
mov
into
jo
outsl
mov
popa
mov
sbb
push
xor
or
cmc
ror
and
pop
ljmp
push
push
dec
std
addl
mov
xchg
popa
enter
jge
mov
add
loope
arpl
daa
icebp
dec
jge
adc
or
and
push
pop
mov
stos
push
ret
pop
loope
add
and
mov
rcl
incl
out
clc
roll
add
cmp
sbb
push
into
mov
xchg
sub
shrb
clc
clc
sarb
and
jmp
dec
cmc
xor
inc
push
xchg
dec
dec
dec
fnstcw
pusha
sub
xchg
test
add
lret
sbb
adc
enter
out
add
ss
mov
daa
ficoms
cmp
fistps
add
push
xlat
pushf
insl
shrl
inc
pushf
sarl
push
inc
roll
faddl
push
inc
cs
add
cs
and
add
clc
inc
xlat
sub
mov
and
sti
sbb
inc
pop
sbb
jle
test
out
adc
and
ds
shlb
pusha
push
das
pcmpeqb
inc
push
sbbb
sahf
dec
pop
dec
dec
scas
mov
pop
lods
fsubrs
insb
xchg
mov
pop
xor
shrl
or
add
fisubrl
addb
pop
icebp
bound
rcr
outsb
imul
cmp
xor
xor
jns
inc
ret
rol
mov
pop
ljmp
add
cmp
test
movsb
sbb
mov
adc
clc
clc
jns
cmp
xor
leave
ja
in
adc
push
lods
inc
xchg
daa
pop
cmp
cmp
out
mov
inc
sbb
mov
push
jp
dec
and
shrb
sub
xchg
fdivl
jnp
test
inc
mov
mov
xor
sbb
mov
mov
stos
sbb
xchg
mov
pop
sbb
nop
lahf
shlb
ljmp
pop
js
popf
sub
pop
test
rolb
stos
push
adc
push
call
inc
jl
clc
adc
sbb
or
and
and
lea
insb
lods
push
addr16
loopne
pop
xor
inc
mov
mov
adc
cmp
mov
dec
cmc
mov
addl
sub
xchg
out
es
xor
mov
pop
aas
faddp
in
es
ja
jae
adc
imul
js
jg
mov
rcr
mov
icebp
dec
add
scas
subb
cli
add
aam
gs
mov
xchg
push
call
nop
mov
ror
dec
loope
lret
or
clc
inc
add
insb
sarl
push
sbb
loopne
adc
xorl
xchg
hlt
and
jno
pop
push
cmp
hlt
or
fadds
sub
inc
loopne
in
sub
pop
flds
fbld
test
adc
dec
mov
rol
mov
xor
cld
aaa
xor
pop
lahf
ds
pushf
cmp
inc
lods
push
pop
dec
sub
or
pop
xchg
push
outsl
push
aaa
mov
jmp
clc
mov
pop
add
lret
mov
dec
xor
rclb
outsl
fadds
xbegin
xlat
add
xchg
mov
aas
dec
xchg
add
adc
sub
adc
and
and
jp
jbe
jmp
icebp
adc
addb
or
push
lock
lahf
mov
xor
push
pop
jp
jnp
xor
stos
clc
insb
and
sbb
aam
in
fistpll
adc
push
sbb
cmc
sub
or
inc
sbb
mov
jne
loopne
lret
in
and
pushf
int3
adc
test
adc
movsb
inc
inc
push
fmuls
dec
dec
popa
xor
cmp
inc
pop
pop
in
faddl
out
add
insb
push
test
push
cs
out
test
ljmp
inc
ss
jns
movsb
lcall
mov
jno
data16
xchg
outsb
clc
and
jbe
add
push
jmp
mov
adc
arpl
xor
cmpsl
lret
jmp
fcoms
or
je
pop
out
and
ljmp
ret
js
mov
xor
std
lds
mov
or
arpl
and
cmpsl
rolb
mov
push
gs
push
pop
mov
xchg
xchg
add
aaa
fdiv
jb
xor
stos
cltd
and
mov
cs
xor
ret
jb
jle
sbb
dec
cmp
xchg
xor
aas
add
jnp
stos
out
jnp
sub
inc
push
dec
jo
add
cmpsl
cmp
add
cwtl
rcrl
add
push
mov
movsl
daa
outsl
hlt
outsl
push
sarl
aas
pop
jnp
pop
pop
push
push
pop
cli
subl
inc
push
push
enter
mov
push
mov
adc
adc
cmpsl
xchg
test
out
mov
jmp
sahf
rcrl
test
sub
daa
add
scas
and
push
movsl
lock
mov
mov
movsl
pusha
pop
hlt
xor
xor
mov
sbb
daa
mov
mov
pushf
ds
push
inc
dec
data16
jo
pushf
aaa
cmp
shll
in
adc
add
mov
sub
sub
pushf
jbe
cmp
mov
cmpsb
inc
and
loopne
sbb
inc
adc
lock
movsl
movsl
jle
dec
dec
sbb
scas
sub
stos
inc
fildl
lds
fildll
test
fs
add
aad
inc
dec
loopne
js
add
push
sar
cmp
sub
stos
jns
pop
nop
rcrl
movb
mov
fcomip
inc
add
dec
in
mov
bswap
imul
les
pmulhw
sub
or
mov
not
jo
push
aam
pop
push
pop
mov
jle
jo
popa
adc
sbb
lods
hlt
out
call
mov
mov
and
es
cmpsb
or
or
orl
and
and
lea
xchg
int3
fisubrl
aad
sub
sbb
test
mov
or
into
andb
add
xchg
or
adc
mov
sti
aaa
xchg
mov
rolb
mov
cmp
imul
ljmp
shlb
loopne
test
lret
test
sbb
add
loope
and
aas
data16
dec
lea
sahf
std
adc
inc
sub
adc
cli
shl
out
mov
xchg
lret
movsb
push
add
enter
mov
movlps
jae
je
pop
jo
push
sub
inc
mov
std
incb
sar
add
mov
dec
bound
add
stos
in
inc
sbb
dec
mov
mov
mov
mov
sub
and
addr16
fldenv
dec
mov
sarb
js
pop
cltd
sub
test
jp
insl
int
jp
push
mov
clc
xchg
dec
add
xchg
aam
call
sbb
jg
dec
test
les
dec
pusha
repnz
inc
cmp
jmp
pop
mov
fmull
sub
adc
pop
mov
inc
dec
out
xlat
aad
or
imul
shlb
dec
dec
movsb
pushf
loop
imul
jnp
imul
inc
dec
cmpsb
push
inc
loop
sbb
dec
shlb
ja
sub
xchg
dec
mov
fwait
outsl
pop
pop
loopne
outsb
add
push
push
pop
and
dec
fisubrs
add
jo
mov
not
inc
jmp
loope
rolb
loop
fsubrs
pop
xlat
flds
cmp
add
jb
dec
mov
jbe
cs
movsb
cmp
ss
mov
pop
inc
lret
jne
inc
and
repz
jne
or
xchg
rcrb
iret
adc
decb
cmp
sbb
lea
xor
push
pop
cmc
add
inc
add
rol
pop
sub
jmp
pusha
mov
pop
icebp
xchg
mov
or
movsl
jne
clc
jp
nop
xor
pop
mov
jge
dec
cld
cld
xchg
inc
cmpsl
mov
stos
pop
xor
lock
sbb
cmc
dec
lock
dec
lods
fbstp
rolb
xor
or
clc
loop
orb
or
jns
mov
xchg
adc
cmp
dec
pusha
mov
mov
out
popa
mov
jbe
lods
xchg
fidivs
xchg
and
add
cmp
sub
pop
lahf
test
cmpsl
xchg
testb
xor
jne
out
and
movsl
rcl
or
cmp
sub
test
push
jmp
inc
dec
clc
adc
add
dec
dec
adc
jns
insb
and
inc
jo
xor
pop
dec
sbbl
xlat
lds
stos
rcrb
shlb
xchg
mov
push
inc
add
imul
in
shl
inc
inc
inc
add
add
sbb
aas
stos
ret
scas
adc
mov
add
add
lock
pop
sbb
cmp
adc
sub
pop
add
fwait
out
out
lods
andl
movsb
fwait
push
loopne
mov
idiv
jge
add
daa
sbb
jo
aad
rol
fs
jl
je
call
add
repz
daa
sbb
cli
inc
adc
push
enter
shll
ret
adc
out
add
ret
jmp
or
adc
ret
jo
pop
push
mov
stc
rolb
or
add
mov
xor
sub
jl
inc
add
pop
loopne
repz
sbb
and
inc
jle
add
push
jmp
dec
stos
cli
imul
ret
push
mov
enter
sbb
aam
out
adc
lock
mov
add
andb
cmp
shlb
sub
mov
dec
cmp
test
mov
lods
shlb
pop
test
xchg
inc
outsl
inc
sub
imul
push
les
lock
icebp
xchg
dec
insl
push
sbb
or
sub
mov
xchg
pop
jmp
cmpb
ret
rcrb
lret
dec
arpl
int
cmpsl
xchg
sbbl
push
push
ror
xchg
fucomi
mov
loope
pop
cld
adc
xor
subb
push
xor
mov
xchg
push
cmp
and
push
inc
test
lret
and
icebp
push
jo
push
adc
sub
mov
cmp
jno
bound
stos
arpl
ret
jns
dec
cmpsl
cmpsl
add
add
rol
cli
add
push
int
cli
les
aam
lcall
or
test
jbe
rcll
or
data16
shl
or
pusha
leave
add
daa
arpl
lds
pop
pop
jmp
test
jb
std
popa
jl
mov
dec
inc
mov
stc
sarb
xor
sub
xor
ret
pop
cmc
dec
adcl
dec
mov
jmp
test
adc
push
pop
cmpsl
shlb
out
sbbb
mov
in
in
inc
pusha
es
add
rorl
xchg
frstor
lea
jecxz
test
xorb
cli
popa
add
dec
xor
cltd
xlat
and
mov
xchg
or
roll
nop
mov
inc
pop
sbb
pop
in
ja
or
inc
insb
shlb
rcl
pop
mov
in
mov
inc
sbb
divl
push
fcomp
xchg
lds
pop
nop
xor
inc
sub
sub
adc
dec
mov
je
or
add
add
jne
xchg
ret
add
mov
outsl
sub
cs
dec
add
add
dec
imul
dec
shll
sub
lock
bound
jmp
and
mov
adc
add
pop
int3
call
repnz
xor
scas
aas
xor
mov
jns
rorl
push
add
dec
push
pop
inc
mov
subb
push
call
roll
negb
in
push
aaa
pop
sbb
add
add
pop
jp
xor
mov
xor
adc
push
add
sub
pop
out
cmp
xor
rol
into
mov
xlat
xchg
add
push
ret
lcall
jns
adc
pop
adc
mov
leave
ret
dec
call
and
jns
xorb
xor
or
push
fcmovnb
ror
inc
ret
mov
dec
rcrl
add
cmp
jl
push
loop
bound
test
lret
test
adc
jecxz
or
and
push
sahf
cmc
inc
adc
add
push
rolb
repz
sub
and
sti
popa
sbb
repz
sbb
sub
cmpsb
aas
add
pop
add
andb
pavgb
jp
iret
fcmovnb
rorl
pop
sbb
mov
xchg
inc
dec
add
das
sbb
xchg
add
pushf
jne
and
xchg
cmp
loop
push
push
inc
dec
call
push
sbb
add
pop
adc
push
xchg
add
es
rolb
clc
out
sbb
enter
add
into
or
lock
mov
filds
mov
hlt
js
sub
cli
adc
sub
and
push
enter
cmp
xchg
jge
ret
mov
add
stos
sub
mov
sub
dec
cmp
adc
cmp
mov
shrl
aam
hlt
xor
out
fs
add
js
push
and
icebp
push
jg
testb
out
pusha
ret
mov
xor
pop
insl
rcrl
sub
mov
movsb
shlb
xor
xchg
and
popa
cltd
ljmp
and
sub
add
cld
add
adc
or
adc
add
xchg
mov
xchg
out
push
mov
dec
aas
lock
mov
fldcw
testl
add
movzwl
or
psubsb
pusha
cld
mov
push
mov
inc
add
in
call
or
jmp
outsb
fs
hlt
mov
cli
aam
sbb
adc
das
aaa
add
clc
and
aaa
aad
lcall
cmpsl
jecxz
add
rol
push
add
inc
ficomps
xor
pushf
pop
out
mov
fbld
popf
mov
fsubr
and
and
mulb
pop
sub
jmp
sbb
ss
sar
cmc
aam
add
add
xchg
xchg
xchg
xor
push
out
mov
sub
mov
insl
or
adc
ror
push
pop
mov
lock
and
mov
js
dec
sti
push
or
pop
cmp
xchg
icebp
adc
inc
jle
int3
movsl
xor
xlat
jbe
bound
adc
sarb
jno
jbe
fstpl
cmp
aad
push
jbe
fadds
pop
mov
or
add
mov
sub
adc
pushf
mov
jp
cld
adc
aaa
pop
mov
lds
lds
sbb
mov
cltd
mov
cs
inc
push
push
in
fisttps
mov
lcall
pop
aas
cmp
push
mov
dec
call
call
jbe
loopne
cmpsl
cmpsb
or
std
push
cmp
xor
test
lock
mov
fisttpll
cli
icebp
push
sub
inc
daa
and
lods
or
adc
push
cs
test
call
or
mov
call
hlt
inc
lcall
pop
push
mov
lds
xchg
call
cld
fsubr
add
xchg
out
adc
add
icebp
dec
fadd
sub
pop
mov
jecxz
inc
or
sub
xor
into
xor
add
into
js
rcr
jno
cmpsl
pop
sub
adc
mov
sbb
mov
pop
add
std
pop
dec
xchg
rclb
lahf
repz
ficoms
faddp
mov
rcrb
outsl
scas
dec
push
sub
mov
out
inc
adc
push
mov
std
dec
test
xor
mov
sbb
out
decl
les
fadd
jp
mov
push
inc
jl
mov
add
enter
push
add
faddl
mov
jl
test
sbb
or
mov
fsts
pop
xor
repz
xor
jg
cmpsl
mov
cmpsl
adc
movsl
xchg
dec
xchg
retw
xor
ja
movsl
push
cmp
push
and
xchg
das
mov
rclb
sbb
sub
jl
fadd
mov
push
mov
adc
stos
pop
or
jl
and
arpl
into
dec
fcom
sbb
and
inc
imul
dec
adc
ret
cmp
jl
inc
push
mov
mov
xchg
sub
testl
hlt
cmp
dec
and
push
add
xchg
scas
imul
sub
mov
push
jne
or
cmc
push
pop
jne
dec
ljmp
inc
push
adc
jp
add
xor
test
out
daa
test
and
test
jp
jns
test
lret
leave
clc
ss
jg
adc
or
add
sub
cmp
iret
or
dec
inc
mov
pusha
sbb
cli
mov
icebp
jne
dec
sbb
loopne
out
in
mov
rclb
pop
push
cmp
sarb
pop
or
popa
loopne
push
or
test
xor
call
sub
mov
xor
cmp
mov
into
sub
push
and
fdivs
loopne
mov
mov
adc
add
pusha
inc
out
test
push
adc
add
dec
loopne
add
repz
das
sbb
shl
jecxz
and
mov
xlat
xchg
jnp
dec
icebp
insl
outsb
adc
dec
icebp
andl
mov
insb
lock
iret
sub
inc
lods
xor
cmp
add
sub
repz
mov
or
pop
cmpb
dec
ffreep
cmpl
xchg
repz
xchg
mov
sub
inc
stos
ss
add
gs
inc
pusha
lds
xchg
addr16
adc
pop
arpl
xor
add
push
jg
jae
push
inc
ficomps
adc
rolb
jl
add
bound
jo
xor
dec
imul
jno
xor
cmp
xchg
ss
mov
push
imul
lcall
loopne
in
sub
aad
sbb
insl
daa
xchg
and
cli
pushf
call
orl
out
sbb
sub
rcrl
push
sub
mull
popf
pop
jbe
out
push
inc
jo
test
jne
mov
bound
inc
sub
fldt
adc
data16
fisubs
cwtl
dec
push
jg
inc
rolb
push
add
lods
lock
mov
adc
push
fcoml
lea
sbb
stos
dec
push
mov
sar
and
mov
ret
ret
or
out
mov
pop
sbb
sbb
add
mov
rcrb
add
jle
adc
pop
inc
add
loope
clc
sub
mov
lock
lods
sub
ds
dec
adc
std
add
add
icebp
adc
clc
mov
xchg
dec
and
js
mov
jmp
jp
and
shll
loope
out
rcr
hlt
xchg
ds
push
divb
loop
mov
pop
pusha
les
int3
cmp
xchg
rorl
cld
out
push
xor
arpl
daa
adc
mov
js
aaa
nop
movswl
adc
and
or
enter
cwtl
bound
cld
pop
add
aaa
loop
or
lods
jb
cmc
std
inc
sbbb
outsb
push
mov
xor
mov
sub
sbb
pop
mov
xor
cmp
xchg
jnp
adc
sub
imul
sub
cmpl
or
movsb
sub
inc
add
shlb
inc
clc
mov
cli
mov
test
inc
jg
dec
sub
scas
xor
or
and
loopne
cs
imul
inc
jge
push
and
clc
aaa
add
xchg
mov
ljmp
xor
and
movsb
aaa
add
mov
lahf
and
addl
or
xor
inc
stos
push
inc
ret
push
popa
ret
out
and
cmp
or
cmpl
out
and
push
adcb
xchg
shrl
sub
sub
stos
cmp
call
test
lds
pop
lods
add
popf
or
adc
iret
and
push
les
pop
push
call
sbb
sbb
pop
sub
dec
cmpsb
mov
adc
xchg
xlat
jg
sbb
inc
xor
js
pop
pop
or
push
adc
mov
cld
rorl
sub
jmp
sub
icebp
lret
cmp
mov
inc
inc
and
ret
clc
sbb
jmp
jne
add
shl
andb
hlt
and
es
in
das
out
and
push
frstor
sahf
dec
cmpsl
mov
inc
pop
or
fnstcw
jbe
pop
lahf
lret
sbb
lods
cmp
inc
inc
or
xchg
dec
jle
test
cmp
jmp
rol
out
or
rcrl
xchg
loopne
fdiv
xchg
in
call
pop
mov
imul
pop
push
jno
or
xor
dec
add
sbb
jo
sbb
in
popa
mov
jecxz
leave
rcl
push
adc
inc
adc
jmp
adc
push
dec
loope
ret
or
bound
push
push
sbb
adc
push
stc
jnp
pop
mov
shlb
repnz
add
fmull
out
aam
jg
fs
shr
data16
test
xor
js
jne
jo
mov
push
inc
aad
push
sub
xchg
lret
fsubl
pushl
pop
xchg
add
and
cmp
mov
or
ret
xchg
ljmp
jmp
mov
rclb
push
movsl
mov
cli
aaa
repz
lock
fucomp
jl
call
in
xchg
cmp
jmp
xor
adc
andl
scas
inc
movsl
and
add
xor
jbe
push
mov
rorl
xor
mov
adc
cld
in
xor
sbb
pop
jmp
push
scas
loopne
lret
cmpsb
and
adc
leave
push
addr16
mov
fadds
in
mov
jecxz
repnz
pop
pop
or
xor
ljmp
adc
cmpsb
mov
cmpsb
lods
cmp
inc
test
ret
add
mov
pop
dec
lret
and
push
cmp
fdivrl
repnz
cmovnp
adc
xor
push
dec
xchg
xor
loopne
inc
or
push
loopne
lahf
inc
lcall
iret
pop
addr16
or
dec
fsubs
xchg
in
xor
mov
inc
int
jns
ret
sbb
sarb
mov
xlat
adc
and
push
jo
cwtl
pop
clc
scas
sub
push
inc
test
mov
lea
inc
mov
and
mov
add
lock
mov
enter
or
shl
cmp
fistpl
jmp
cmp
mov
cmpsb
sub
fmuls
pop
pushf
cmpsb
xor
or
add
pop
xchg
int
mov
iret
or
aam
lods
mov
sbb
push
pop
outsb
jb
stos
lret
xchg
popa
pop
fdivs
andl
and
push
or
fsubrs
add
mov
push
xchg
add
daa
cmpsb
orl
pop
cs
dec
sub
loopne
orb
dec
call
call
into
xor
xor
or
sbb
pop
enter
rorb
test
sbb
pop
pop
out
rol
and
pop
imul
and
hlt
and
push
pop
scas
ret
shrl
lahf
cld
adc
imul
and
movq
add
inc
mov
sub
pop
jecxz
test
enter
and
xor
pop
ljmp
xor
cmpsb
leave
mov
rol
lahf
sti
mov
out
xor
js
pop
loopne
pop
ljmp
mov
or
inc
ret
inc
cmp
pop
iret
test
cmp
and
push
push
iret
sub
adc
sub
sub
dec
or
stos
jle
inc
cwtl
pop
scas
xchg
dec
outsl
rcll
mov
jl
adc
test
fsubp
clc
add
mov
push
test
clc
cmpsl
ret
push
sbb
call
cmp
repz
xor
ret
push
or
sub
mov
rcrl
sbb
notl
xlat
add
jmp
into
lods
aas
mov
rorb
add
jnp
xor
push
cmp
xor
loope
inc
push
sbb
sub
push
push
jae
repz
cltd
inc
xchg
arpl
pop
ret
stc
pop
les
lods
cmpsb
add
aam
aam
les
mov
cmpsb
popa
aam
inc
inc
or
mov
add
or
add
mov
pop
xchg
adc
mov
insl
shll
inc
jg
and
ficoms
test
insb
addb
fsubrl
idivb
xchg
aaa
sbb
and
test
push
xchg
push
ljmp
icebp
pop
add
ret
xor
xor
add
fcoml
sbb
xor
adc
aad
fstps
sub
hlt
insb
les
sbb
bound
lea
das
add
or
call
jo
jnp
sarl
test
cwtl
add
add
push
fiadds
nop
add
cwtl
fcoml
arpl
es
pop
cli
out
stos
add
sub
mov
adc
mov
push
sub
cmp
dec
mov
or
mov
adc
inc
inc
dec
dec
sub
mov
pop
int3
jmp
jb
mov
jg
add
inc
dec
movsb
in
and
dec
hlt
push
adc
push
popl
rcll
dec
mov
iret
in
fstp
sub
fldl
lds
xor
mov
ds
sbb
push
mov
add
pop
pop
or
cmp
jecxz
and
xchg
jge
xor
mov
sub
pusha
add
imul
push
push
or
push
aam
subl
xchg
sub
xchg
add
ja
mov
aam
cmpsb
orl
xor
xor
call
imul
dec
popa
sub
sbb
push
inc
cltd
jmp
add
lods
jecxz
rol
add
push
stos
pop
sbb
outsl
dec
inc
adc
xchg
dec
or
arpl
add
mov
jl
lock
xor
lock
sub
sbb
shlb
mov
les
mov
mov
jno
jbe
and
xchg
lcall
shl
roll
repnz
clc
add
sub
mov
inc
lret
mov
sbb
nop
inc
add
push
sub
push
jl
out
inc
sub
xor
dec
int3
mov
mov
sub
sahf
cmpsb
cmpb
mov
outsl
jle
add
add
inc
inc
mov
popa
aam
xchg
sbb
int3
popf
stos
cmp
push
shrl
ja
xchg
xchg
enter
pop
sub
sar
add
adc
sarb
add
mov
xchg
cmp
inc
push
sub
outsb
pop
test
and
addr16
daa
mov
xchg
daa
movb
push
mov
and
movl
inc
inc
xor
mov
decl
jmp
inc
add
mov
pop
loopne
push
sbb
inc
pop
ja
adc
mov
xadd
jb
test
cmpsb
shrl
and
xor
popl
stos
jp
enter
fiaddl
sub
sar
mov
addb
mov
inc
push
jb
imul
xchg
push
push
sahf
rorb
dec
xor
movsl
test
in
cmp
jge
and
sub
pop
mov
mov
mov
sarb
sub
sub
inc
popl
push
add
xchg
lret
stos
leave
push
adc
iret
stos
and
outsb
push
in
sub
push
ljmp
mov
pop
les
arpl
adc
add
xchg
sbb
cmp
ret
or
mov
inc
mov
mov
add
mov
sbb
inc
aas
push
test
mov
call
mov
mov
adc
fwait
jl,pn
xor
add
push
mov
jge
ja
pop
mov
rcll
testl
mov
addr16
rclb
cmp
pop
ret
cs
xchg
jb
push
ss
cld
testl
sbb
mov
jmp
cld
dec
sub
out
dec
jmp
loope
out
out
xor
hlt
cmp
jno
xor
cmpl
add
or
jae
and
mov
dec
cmpsb
jle
ss
fadds
xlat
jl
dec
and
stc
fcomps
cmp
lahf
adc
dec
xchg
cmp
pop
bound
push
push
pop
inc
scas
scas
xchg
or
push
add
dec
mov
sbb
mov
inc
xchg
add
push
es
je
rcrb
pop
or
loopne
or
push
push
mov
cmp
and
jns
sub
rcll
aas
dec
sub
push
jmp
enter
andb
jo
and
movsb
pop
or
fadd
outsl
jmp
loopne
adc
pop
aaa
sbb
dec
push
sub
loope
js
fs
test
fsubrs
mov
and
pushf
adc
cmovs
in
cmpsb
lock
ret
cltd
movsb
push
cli
and
scas
dec
jmp
sbb
cmpl
rorb
inc
loope
xor
or
insl
jg
and
hlt
clc
mov
sbb
fisubrs
imul
pop
mov
xor
jp
mov
adc
sub
mov
lock
pop
adc
cltd
sub
adc
lcall
mov
lds
xchg
mov
dec
mov
mov
pop
sub
notl
push
ljmp
xchg
icebp
inc
nop
jecxz
xchg
xor
out
mov
lock
sbb
loopne
std
adc
sub
lock
push
inc
loopne
and
add
shlb
outsl
mov
add
add
imul
xor
pop
into
cmp
lahf
inc
push
pop
dec
mov
jb
pop
pop
and
xlat
cld
iret
mov
fmuls
adc
les
sarl
mov
stos
jo
sbb
sub
push
cs
mov
or
lods
add
decb
ror
pop
mov
hlt
xor
mov
mov
add
xor
sub
clc
xor
push
cmp
lea
aas
push
sbb
mov
pop
mov
pop
sahf
xchg
jne
iret
dec
and
sub
icebp
addl
add
es
ret
mov
adc
push
ja
adcl
mov
pop
clc
dec
shl
dec
cltd
scas
fwait
mov
add
xchg
jecxz
inc
and
in
ja
mov
add
bound
movsl
insb
jg
lock
pop
test
inc
addl
ret
jno
or
fadds
inc
sub
ljmp
fdiv
jnp
aaa
mov
jle
test
or
pop
mov
xor
cli
adcb
pop
out
sub
lret
cmp
xor
nop
xor
or
orb
jno
popf
fadds
dec
or
dec
or
mov
notl
jno
push
lock
adc
add
sbb
cmpsb
xor
int3
xor
adc
push
ljmp
ss
adc
add
xchg
mov
movb
xor
out
push
call
adc
repz
jmp
adc
movsl
or
lahf
shl
and
push
push
jmp
jl
test
push
mov
sbb
movsb
incb
divl
test
loopne
pop
add
popa
inc
and
in
outsl
adc
loopne
pop
mov
mov
movsb
lock
daa
mov
dec
bound
mov
add
or
add
and
xor
push
add
int3
cwtl
and
pop
or
icebp
or
inc
add
lahf
popf
sbb
loop
pop
cmp
cmp
inc
gs
daa
mov
inc
in
orb
and
xor
mov
adc
add
das
test
add
lret
mov
ss
out
or
lret
inc
adc
movsl
xlat
cmc
pop
add
insl
paddusw
adc
or
loop
inc
loopne
xor
mov
shr
fisubs
lret
ror
and
adc
cwtl
mov
push
inc
std
sbb
jmp
add
imul
and
cmp
xor
or
xchg
jg
or
dec
cmp
mov
imul
inc
dec
arpl
aas
xchg
add
imul
in
sub
sub
or
inc
sbb
pop
dec
cmc
out
das
pop
loop
rolb
lahf
subb
jmp
dec
int
mov
mov
jno
xchg
adc
fstps
aaa
mov
add
adc
mov
push
push
or
test
dec
dec
mov
inc
ret
ficoml
sub
mov
dec
fcoml
test
test
into
jnp
iret
shlb
lods
inc
add
fisttps
je
push
cmp
jmp
xor
xor
dec
xor
or
mov
or
cmp
out
leave
push
push
ret
movsb
repnz
sub
dec
cwtl
add
hlt
fdiv
out
stos
pop
sarb
testb
or
jecxz
ficompl
xor
cs
cmp
cld
ss
dec
mov
es
imul
pop
cmp
lea
movsl
adc
fsubs
and
repz
mov
fadds
bound
cmp
cmc
aam
jno
test
xor
xor
movsb
stos
xchg
addb
sub
imul
adc
test
mov
jae
pop
mov
and
mov
xchg
mov
ljmp
out
ja
mov
rcr
mov
mov
sbb
jo
add
sbb
bound
mov
push
adc
mov
ret
push
lret
sbb
dec
enter
xchg
push
jo
mov
and
and
loopne
lock
xchg
pusha
xchg
mov
adc
cmp
pop
inc
test
loop
add
add
and
or
sbb
shrl
mov
testl
cltd
mov
ljmp
enter
test
push
jl
inc
je
test
lahf
loopne
add
fisubrl
popa
lcall
int3
test
mov
jbe
mov
ret
das
mov
pushf
ret
xor
test
xchg
inc
outsl
hlt
jno
push
pop
sub
insb
pop
or
and
or
mov
hlt
fcoms
or
sub
jp
push
loop
js
imul
lfs
pop
aaa
pop
insl
out
mov
xor
inc
sub
rclb
cmp
cmpsl
dec
push
adc
loop
clc
xor
mov
cmp
jne
aad
imul
mov
add
test
rorb
lahf
xchg
and
mov
int
jnp
lods
mov
xor
adc
and
jecxz
test
fwait
push
inc
sub
lods
loopne
push
out
shlb
outsl
outsl
add
cmp
and
or
pop
pop
cmp
lods
push
or
jp
js
rep
into
mov
adc
xchg
or
add
into
inc
mov
lods
jno
test
sbb
gs
call
sbb
mov
xor
jne
mov
rorl
inc
mov
adc
jbe
andb
test
fbstp
rolb
inc
mov
pop
jmp
add
rcrb
and
fdivrs
push
insb
push
arpl
loopne
xchg
dec
xchg
lock
loopne
xor
sbb
jnp
ficoms
js
push
fimull
stos
xchg
jo
or
outsl
rorb
inc
cmp
mov
popf
xor
dec
setnp
adc
sbb
jo
scas
cmp
adc
or
sub
mov
jnp
daa
or
mov
inc
rcrb
jnp
dec
lods
adc
out
ss
push
jp
dec
adc
and
mov
lret
push
add
jg
adc
sar
push
rolb
push
push
adc
xor
rolb
loopne
inc
sbb
push
out
mov
sbb
dec
jbe
loope
aad
arpl
sbb
or
pop
inc
xor
xor
fisubrs
lahf
lcall
fbld
jg
pop
xchg
fnsave
repnz
add
and
push
dec
daa
test
int
mov
sbb
add
sti
push
ds
dec
test
adc
add
mov
andb
bnd
repz
jne
adc
and
dec
rorl
and
lds
and
iret
sbb
xor
push
jae
sub
mov
mov
jge
lods
nop
mov
and
add
mov
aas
ja
test
cs
and
add
mov
ja
pop
push
and
dec
sub
jmp
add
sub
and
sub
push
jmp
xorb
or
decl
sub
ds
cwtl
fiadds
hlt
push
je
ja
push
push
addr16
pcmpeqb
out
dec
imul
pop
jo
sub
scas
pop
cmpb
out
popa
jno
mov
or
jo
mov
loopne
xchg
adc
mov
lret
add
inc
push
pusha
aam
jb
fildl
mov
in
push
adc
test
lods
pop
hlt
aam
pop
add
push
mov
movsl
mov
cltd
clc
jecxz
or
movsl
sbb
pusha
into
out
mov
or
add
mov
pop
adc
ficompl
or
jp
repnz
fdivs
dec
sub
xlat
iret
sti
jnp
and
out
and
lea
ss
lcall
mov
neg
xlat
data16
xor
cmc
nop
imul
push
push
shl
in
inc
lds
test
push
int
mov
inc
mov
das
aad
aas
call
lods
sahf
in
sub
or
divl
push
in
cmp
lock
add
iret
adc
into
mov
loope
dec
cld
inc
add
mov
push
sahf
out
and
negb
in
clc
scas
and
arpl
mov
inc
jmp
adc
or
cs
or
add
test
inc
inc
and
rclb
or
adc
inc
imul
push
cmpsl
fisubs
xchg
inc
and
sub
add
push
fsubrs
xor
push
cmpsl
inc
cmp
insb
es
das
mov
push
add
and
and
aad
out
inc
cmpsb
fs
lods
xchg
lcall
lret
outsb
in
dec
lea
and
fs
add
out
icebp
outsl
in
divb
and
lods
test
sbb
addr16
push
andb
add
add
loop
mov
and
sbb
cmp
aas
push
push
dec
sub
add
add
jecxz
imul
sub
mov
jno
and
sbb
out
in
cli
ja
mov
inc
in
pop
rorl
inc
sbb
and
mov
xor
dec
adc
fwait
loopne
mov
fmul
or
sbb
xor
or
popa
pusha
mov
add
stos
in
bswap
out
adc
imul
push
add
insl
mov
pusha
popa
repz
leave
xor
jbe
fdivs
inc
pop
addb
sbb
xor
pop
sbb
js
faddl
nop
sbb
push
push
pminub
outsl
xchg
or
cltd
sub
jo
add
xchg
sub
mov
or
rorl
xchg
cld
in
pop
lods
adc
cld
cwtl
fiadds
mov
cmp
js
je
addb
cwtl
xchg
xor
pop
or
adc
mov
js
int3
sub
xor
add
popa
or
inc
lds
aaa
cmp
or
daa
mov
movsb
mov
out
mov
orb
add
xchg
sbb
js
cmpsl
cld
push
mov
loope
cltd
sti
sbb
adc
or
add
gs
add
test
or
cmp
or
lock
cmpl
dec
lret
pop
pop
sbb
divb
add
fistpl
jle
xorb
bound
in
adc
jl
clc
xchg
movl
jnp
fwait
cli
push
adcb
and
add
sbb
mov
test
jbe
test
movsw
xchg
inc
fimull
dec
lods
push
lock
sbb
sub
aam
cmp
push
xchg
ret
mov
cltd
rorb
jg
cwtl
fstpt
jns
jae
pop
push
test
xchg
loop
mov
lea
pmuludq
add
push
dec
push
int
dec
inc
pusha
lcall
push
iret
inc
je
mov
inc
neg
stc
hlt
aaa
push
inc
xchg
and
pop
and
inc
out
pop
cltd
xor
adc
lock
je
mov
in
pop
mov
mov
sarb
ret
and
repnz
std
add
or
call
xchg
and
in
xor
xor
mov
add
addl
jo
mov
mov
and
arpl
jl
inc
int
scas
adc
push
call
shlb
imul
fs
sub
sbb
sub
punpcklbw
cltd
cmp
mov
dec
inc
cmpsl
cmp
lret
jge
xor
pop
adc
aas
or
orl
xchg
mov
inc
movsb
adc
shll
mov
sbb
in
cmp
fwait
mov
sbb
es
fimuls
add
xor
mov
rcr
fmuls
movb
in
push
outsl
les
cli
jmp
add
sub
adc
add
sub
xchg
js
mov
push
adc
out
popf
int
out
pop
testb
repnz
add
or
or
push
cmpsl
and
sbb
mov
or
lods
fnstcw
sbb
adc
dec
leave
or
mov
stos
pusha
and
cmpsl
add
jno
push
and
push
daa
or
mov
shrl
mov
sbb
cmc
xchg
push
adc
push
jo
sbbb
jmp
fwait
xchg
fs
je
test
adcl
mov
repnz
ja
sbb
or
lret
imul
in
icebp
and
inc
fwait
test
xchg
sub
add
pop
loopne
and
sub
pop
cmp
add
mov
ja
add
or
push
sub
sbb
push
add
cmpsl
sbb
js
mov
shr
test
aam
push
push
rclb
cltd
push
add
dec
mov
cmpsb
pusha
in
mov
mov
iret
add
lret
ja
sbb
or
pop
xor
ret
jge
cmpb
cmp
jnp
mov
pop
insl
sbb
and
jmp
std
enter
and
or
mov
cmpsb
imul
ret
xchg
adc
jmp
cltd
arpl
add
push
and
dec
xchg
fstpt
inc
jb
popa
mov
rclb
fisubrs
dec
and
pop
ret
pop
roll
jg
cmc
jno
and
sbb
cmpb
mov
call
fistpl
mov
add
dec
shll
xchg
jnp
push
dec
jg
jg
sbb
imul
add
push
pushf
inc
sbb
mov
in
fsubrs
cmp
jno
mov
insb
add
movsb
jge
lock
xchg
mov
fiaddl
pusha
jb
push
pusha
and
pop
decl
push
add
and
inc
pusha
or
loope
and
in
pop
inc
ss
push
sbb
or
test
outsb
add
cmp
out
inc
push
or
imul
sar
inc
add
enter
outsl
jl
mov
push
cwtl
xchg
jbe
and
aas
lret
jbe
test
nop
jo
xchg
mov
and
repz
mov
rclb
jmp
xchg
cmp
adc
mov
jmp
loopne
cmp
inc
cmp
mov
cld
mov
cmp
cmpl
jns
clc
sbb
dec
cmp
jg
leave
sarb
jbe
xor
push
pop
jne
pop
mov
adc
or
mov
push
push
call
je
movsb
cmc
orb
inc
dec
test
gs
test
adc
pop
pusha
cmc
popf
adc
and
and
pop
lea
push
je
in
repz
inc
dec
sub
mov
aam
mov
sbb
lea
xor
mov
pop
scas
mov
sbb
ja
dec
sub
cmpsl
dec
fildll
daa
adc
aad
jg
mov
sahf
xchg
push
js
xchg
inc
popa
xchg
lcall
popf
xor
pusha
jb
push
jp
xor
mov
cld
shrl
xchg
add
jnp
sub
push
sub
pop
push
push
inc
sub
jg
aam
lret
dec
cmp
and
inc
dec
sbb
inc
cli
jge
cmp
jmp
add
call
sbb
dec
push
out
adc
std
cmp
inc
xor
adc
ljmp
lock
rcll
add
scas
std
fisubrl
ss
xor
add
push
add
dec
push
hlt
inc
nop
add
dec
stos
lcall
scas
xchg
neg
push
jmp
pusha
dec
mov
fwait
mov
inc
bound
aam
rclb
xchg
cmp
hlt
inc
push
mov
aam
xor
adc
aam
sbb
lds
add
hlt
add
sbb
sub
rorb
lods
aad
lea
xchg
mov
or
and
stos
mov
adc
pop
and
psubd
lds
push
sbb
lock
push
sbb
sbb
test
adc
pop
out
xchg
stc
mov
mov
loop
int3
enter
mov
and
and
in
ret
test
hlt
loop
sub
inc
mov
rorb
and
negl
inc
clc
test
sub
mov
jnp
push
sti
fidivl
push
dec
adc
lock
fnstenv
mov
repz
jmp
mov
ljmp
add
dec
push
loopne
mov
je
ficoms
add
mov
and
inc
bound
sub
xchg
push
orb
xchg
jle
call
inc
xchg
cmp
insl
inc
xchg
push
insl
push
cmc
out
add
jno
cmp
pop
inc
sub
and
adc
sub
and
pop
sub
sbbb
ret
enter
jbe
push
iret
dec
repz
mov
int3
stos
fldenv
or
outsl
jmp
leave
pop
pop
pop
xor
or
xchg
testl
mov
pop
pop
xchg
xor
call
and
out
pushf
inc
cmp
inc
gs
sbb
int
xchg
andl
cmp
lock
shll
mov
or
mov
aaa
pop
mov
sub
mov
mov
cmp
and
xor
mov
push
testb
pop
outsb
mov
and
mov
xchg
std
inc
sbb
loopne
and
pop
mov
aam
push
test
push
aam
enter
cmp
jns
dec
mov
cs
sub
inc
rcll
sarl
and
js
cld
xor
rolb
js
mov
adc
loop
cltd
adc
sub
pop
int
ljmp
or
add
fidivs
outsb
pop
inc
cltd
loopne
jge
push
adc
or
aaa
sub
pop
sarl
nop
inc
inc
and
and
mov
jo
xchg
pop
mov
push
js
adc
cld
out
ret
push
inc
mov
lcall
pusha
popf
or
dec
sub
add
and
or
jmp
je
rolb
mov
cltd
in
pop
enter
or
push
mov
xlat
push
jp
test
and
mov
notl
pop
and
cwtl
jg
adc
les
fwait
cmp
dec
sub
and
and
and
adc
inc
push
bound
les
stos
mov
les
cwtl
lods
xor
jp
fldl
push
out
je
cli
ret
dec
popf
pop
push
das
push
and
jg
add
sub
cmpsl
xchg
lock
mov
or
add
fwait
adc
fbstp
add
or
rcrl
lea
inc
push
jmp
inc
mov
dec
push
adc
dec
pusha
dec
mov
or
cs
sbb
sahf
jo
mov
or
cli
pop
pop
imul
ret
or
orb
enter
mov
test
or
imul
lret
jb
insb
cmp
pop
push
jnp
push
sbb
dec
sub
pusha
popa
loop
cli
rclb
push
and
or
orl
icebp
and
pop
pop
cwtl
cmp
mov
psubsw
inc
js
std
sub
xorl
sarb
add
pop
mov
mov
pop
pop
xor
pusha
jl
jbe
xchg
jecxz
das
ret
test
fs
xor
and
mov
hlt
and
lret
inc
aas
or
and
jo
sbb
dec
or
ret
aad
lahf
addr16
xchg
cltd
lahf
fnstsw
movsb
sub
add
xor
jo
aam
pop
mov
ret
call
loopne
shlb
xor
and
ja
lahf
add
inc
imul
mov
and
push
mov
insl
adc
dec
jmp
xor
fcomps
mov
mov
add
xor
and
xor
sbb
fldz
test
sarb
inc
dec
adc
add
dec
xor
push
sbb
and
adcl
and
lcall
pop
push
cmpl
sbb
or
mov
nop
add
mov
faddp
pop
cmc
mov
dec
xor
xchg
push
adc
dec
outsl
sub
add
iret
fidivrl
icebp
mov
add
fwait
test
hlt
and
test
mov
popf
data16
cmp
lretw
sub
mov
test
in
fwait
pusha
mov
inc
push
out
arpl
test
push
or
int3
cld
int3
add
mov
adc
enter
cld
iret
jbe
popa
test
pop
push
lea
incb
add
dec
jne
mov
xor
test
addr16
ss
mov
rcpps
mov
adc
inc
mov
rolb
dec
or
outsb
push
push
inc
xlat
dec
dec
insb
not
fstpl
adc
add
pop
loope
inc
mov
mov
test
xor
sbb
jns
inc
xor
sbb
clc
ret
pop
adc
addb
sub
dec
or
add
cltd
pushf
test
loope
lahf
jbe
sahf
out
mov
push
loope
ss
test
pop
dec
dec
xchg
std
sub
pop
mov
imul
nop
mov
sub
addr16
mov
repz
xor
cs
push
loopne
std
xchg
jo
xor
fldenv
or
mov
xor
mov
popa
add
sbb
daa
inc
stos
test
fistps
adc
add
popa
test
lock
loope
repz
movl
xchg
sbb
lret
outsb
icebp
or
inc
add
adc
dec
scas
pop
lods
mov
out
and
and
fs
add
fs
sbb
sbb
pop
pop
movsb
mov
push
sbb
cmp
xor
pop
and
fiadds
pop
fistl
sbb
je
fbstp
mov
mov
dec
movsb
or
int
in
pop
or
push
fs
or
cmp
jecxz
cmp
pop
das
push
in
xchg
roll
cmp
fwait
inc
add
enter
ss
nop
je
mov
push
iret
lods
lods
push
or
lea
scas
test
mov
pop
dec
pop
dec
sbb
mov
sbb
orb
iret
mov
stc
notb
cmpsb
inc
and
arpl
loope
cmp
cmp
mov
psubsw
daa
cwtl
out
shll
loopne
xor
ret
inc
sub
dec
ljmp
or
hlt
fldt
loop
jmp
xor
adc
add
mov
fisubl
sbb
adc
inc
cli
add
ret
push
xor
lds
lock
jae
mov
inc
and
inc
call
dec
and
icebp
push
sysenter
push
mov
xchg
sub
ret
cmp
mov
jl
mov
sub
push
fldenv
add
hlt
xor
add
adc
insl
dec
push
les
pop
dec
xor
movsl
std
loopne
or
mov
scas
push
mov
dec
cltd
mov
and
test
inc
pushf
jge
push
es
arpl
mov
scas
sbb
xor
mov
push
pop
sahf
icebp
incl
mov
lock
cmp
sarb
fstpt
xorb
or
hlt
xchg
jns
sub
xor
mov
cmc
jbe
or
and
pop
adc
call
daa
mov
push
cltd
fiadds
jb
sub
and
jae
mov
pop
outsl
xchg
xorb
push
notl
insl
cltd
inc
pop
push
sahf
add
lock
cli
add
out
shrl
push
adc
pop
leave
jmp
pusha
movl
and
fucomip
addr16
jmp
loope
sub
cmp
popl
mov
mov
roll
cmp
jbe
fs
adc
push
jmp
test
inc
add
dec
test
fdivl
mov
cli
dec
call
mov
out
nop
cmp
add
mov
jae
jmp
cmp
ja
pop
add
call
test
jbe
sbb
adc
lods
rcl
cmp
pop
xor
and
and
fsubrs
mov
inc
push
xchg
in
push
nop
mov
fcmovu
daa
adc
or
pop
cmp
inc
cmp
dec
ret
fsub
pop
or
adc
nop
mov
cmp
pop
add
test
mov
out
add
pusha
pop
ja
clc
mov
pop
clc
mov
sbb
out
into
out
stc
xchg
or
jecxz
push
adc
push
mov
dec
sub
dec
xor
lods
mov
js
sti
andl
bound
lock
and
ja
or
fsubl
cmp
subb
scas
xchg
adc
add
or
loopne
xor
decb
push
adc
cwtl
loop
inc
and
fdivrl
or
mov
daa
inc
pusha
xor
sub
lock
cmp
jmp
dec
dec
psrlw
jp
cmpsl
sbb
and
push
pop
xchg
lods
clc
pop
call
clc
in
dec
pop
adc
shlb
loopne
push
test
push
and
insb
es
xchg
sub
xor
popa
pushf
xlat
adc
outsb
aam
pop
rorb
or
pop
push
aad
mov
push
and
mov
movsl
lahf
sbb
out
outsl
cli
addr16
jmp
icebp
insl
sub
xchg
cmp
ja
and
roll
ljmp
mov
sbb
clc
test
add
xchg
cli
aam
jl
scas
sub
jo
fstp
xchg
fmuls
push
sub
inc
or
push
cmp
enter
jecxz
imul
ret
shr
js
dec
and
ret
cli
add
rorb
xor
add
in
imul
push
push
mov
dec
ljmp
stos
mov
shrb
and
ret
in
inc
mov
imul
movl
adc
dec
inc
adc
add
aam
daa
testb
and
adc
sbb
or
jne
push
call
shlb
loopne
inc
cmp
fists
mov
xor
fimull
lods
icebp
mov
xchg
mov
int
add
clc
fbstp
fstp
sub
adc
nop
push
pop
aaa
sarb
pop
sbb
push
jb
adc
push
daa
scas
rcll
movsl
adc
or
mov
mov
mov
cmp
hlt
mov
fistpll
jnp
mov
jg
test
ja
mov
pusha
rcll
dec
shrb
test
jle
dec
mov
mov
aam
cltd
push
or
jp
orl
or
data16
dec
scas
jmp
lock
adc
sbb
fwait
inc
mov
jecxz
mov
pop
pop
scas
ret
dec
add
adc
mov
add
lods
fdivr
lahf
rcrb
test
add
test
adcl
cltd
insb
pop
jp
inc
push
test
mov
into
fdivl
mov
or
fisubs
jle
push
dec
sbb
push
jp
dec
loopne
adcb
pop
neg
rcrb
out
dec
add
daa
adc
mov
inc
popa
dec
jp
int
mov
mov
mov
aam
jo
fidivs
mov
lock
mov
inc
or
add
sub
lea
movsb
scas
ret
outsl
push
fsubr
nop
shlb
mov
adc
repnz
and
xchg
mov
imul
lahf
push
inc
fiadds
ret
mov
fiadds
mov
or
cli
xchg
or
mov
xchg
movb
inc
xor
in
movsb
je
jnp
xlat
push
dec
ret
fs
mov
jb
pop
cmpsl
sub
dec
daa
clc
rcl
xor
fcoms
ss
mull
add
sarb
outsb
sbb
xor
fucom
fsubl
pop
int
cltd
fsubrp
std
bnd
dec
test
inc
pop
fadd
jbe
add
or
fstpt
sub
sysexit
sbb
xor
and
lods
mov
sbb
xor
out
inc
push
mov
dec
dec
loope
dec
mov
cmp
push
adc
xor
aaa
or
mov
jge
imul
inc
jg
data16
cmpsl
loopne
mov
test
dec
mul
inc
loope
int3
push
je
or
rol
stc
rcl
add
jmp
out
test
mov
lods
sub
idiv
adc
cmp
mov
loope
inc
mov
setbe
dec
negb
push
add
add
mov
je
mov
arpl
cltd
or
xchg
lea
pop
sbb
addl
or
dec
roll
adc
push
divl
cmp
rcrb
hlt
xchg
insb
ret
int
jbe
sahf
xchg
add
imul
jle
mov
mov
and
sub
cld
and
lret
jl
push
inc
sarl
popa
cmp
sub
push
test
int
les
pusha
xchg
xor
push
lock
jae
sub
lock
jmp
and
inc
lahf
rclb
add
sbb
adc
sbb
and
mov
scas
dec
add
push
fnstsw
decb
test
ret
push
in
stc
imul
loope
arpl
inc
push
or
mov
lds
lods
je
rcrl
test
pushl
add
inc
movsl
les
gs
movsb
imul
rclb
xor
ret
stos
iret
loopne
sub
push
outsl
sub
or
decb
lods
xchg
int
outsb
cmp
add
dec
inc
lret
jp
push
insb
and
and
out
push
push
xor
into
mov
cmp
adc
adc
sbb
mov
int
insb
or
lcall
xor
and
push
nop
fwait
sbb
inc
or
push
jecxz
pusha
out
mov
fnstenv
xchg
call
dec
mov
xchg
aam
stos
xchg
mov
test
jmp
in
push
std
dec
adc
loopne
mov
inc
dec
cld
test
test
out
mov
or
jo
dec
lods
mov
arpl
push
cmp
mov
daa
cli
jne
or
or
test
lock
dec
rcll
gs
and
int3
mov
add
xor
test
mov
jne
xchg
mov
sarb
xchg
cltd
clc
dec
cmp
jae
and
jne
or
aam
nop
jmp
adc
mov
iret
scas
rol
lcall
rolb
aam
leave
add
mov
loop
cmp
jnp
mov
and
push
cwtl
sub
sbb
push
mov
sbb
adc
lea
push
test
and
push
push
fldt
cmp
rcll
xchg
inc
clc
jb
jno
jne
mov
push
xchg
js
mov
xor
outsb
and
push
hlt
mov
xchg
and
sub
pop
add
outsb
in
in
add
xor
subl
sbb
lea
add
pop
test
pop
inc
push
sar
jmp
xchg
dec
sahf
sub
filds
sbb
fmull
inc
out
les
int
xchg
inc
jg
les
mov
or
jp
cmp
and
mov
mov
fildll
jmp
jmp
xchg
dec
mov
push
orl
adc
cmp
loop
notb
push
or
int
filds
clc
addr16
jmp
in
or
movsl
sub
and
ja
inc
arpl
inc
test
add
xor
add
and
das
sbb
in
add
sbbl
and
mov
lock
or
or
imul
add
jg
out
insb
lock
mov
stc
je
fidivs
xor
dec
outsl
and
jmp
mov
jne
mov
fimull
mov
sub
jmp
lea
clc
adc
inc
add
hlt
stos
lret
sub
popf
push
loop
add
dec
call
notl
loopne
pop
jnp
xlat
and
outsb
dec
mov
nop
jnp
dec
sbb
lea
jne
add
cs
xchg
incb
adc
mov
pop
xorb
shll
inc
adc
sbb
or
fmull
xlat
add
dec
cld
fists
or
push
fcompl
add
imul
lcall
cmp
mov
push
add
mov
and
dec
mov
pop
inc
leave
adc
sbb
adc
push
clc
push
hlt
loopne
lret
sbb
xor
push
xor
movsl
cmp
or
cmpsl
popa
sub
shll
jno
mov
mov
js
xchg
jl
jnp
sbbl
inc
pop
scas
dec
xchg
push
sbb
jge
sub
daa
cmp
and
sub
movsb
adc
adc
mov
ret
sahf
xchg
xchg
xchg
cmp
push
fs
test
icebp
sbbl
jo
mov
inc
add
push
pop
jg
bound
jecxz
xorl
lahf
adc
filds
cmc
add
aad
and
mov
lods
push
or
add
add
push
imul
lock
int
loope
and
lret
or
sbb
test
or
shlb
mov
dec
jae
icebp
mov
xor
pop
inc
xchg
js
rol
lret
adc
sbb
dec
movsb
pop
subl
xorb
std
sub
or
emms
and
shlb
aad
pop
adc
jecxz
loope
inc
cmp
mov
and
dec
cpuid
pusha
xchg
xchg
push
scas
cmp
lock
or
sub
inc
aam
cmp
add
mov
jmp
mov
rclb
push
inc
lds
xorl
and
pop
in
xchg
sbb
push
or
add
test
outsl
and
cmpsl
popa
jp
push
lods
int3
cmpsl
test
lea
add
lahf
or
stos
stos
mov
add
jo
ja
loope
insl
ret
aaa
adc
push
inc
hlt
fcomps
pop
sub
shrl
adc
sbb
and
mov
cli
push
push
ficompl
das
shll
test
fildl
lea
inc
cmp
add
xor
adc
xlat
xorps
fsubs
sbb
jmp
pop
xlat
repz
xchg
jecxz
dec
cmp
test
ret
push
pop
pop
mov
bsr
mov
test
mov
mov
and
adc
pop
std
addr16
das
enter
adc
jmp
jo
das
mov
movb
out
stos
sbb
lret
fildl
shrb
xor
in
roll
lahf
shll
dec
mov
pop
sub
je
jo
and
inc
xchg
jl
pop
insb
cmpsb
xor
ja
pop
les
add
mov
cs
fiaddl
add
add
mov
sbb
adc
push
jae
inc
adc
xchg
notb
loopne
and
inc
sub
and
mov
stos
bound
int3
in
sbb
loope
push
push
push
mov
xchg
cwtl
push
jbe
ret
jecxz
cmc
loopne
adc
lock
jb
pusha
daa
imulb
sbb
or
fnstsw
adc
subb
jecxz
pop
mov
jecxz
loop
xor
add
mov
or
call
outsb
pop
pop
adc
xor
ret
js
mov
jbe
scas
clc
and
cltd
insb
test
scas
and
mov
sbb
mov
into
int
xor
mov
testb
or
fbld
pop
mov
add
add
jecxz
inc
pop
push
jmp
pop
inc
dec
inc
xlat
ret
push
subl
xchg
fadd
push
int
cmp
jmp
sbb
rorb
mov
and
mov
push
mov
fiaddl
push
lock
fwait
mov
nop
shr
sbb
dec
clc
movsl
mov
imul
mov
and
adc
ss
bound
daa
push
stos
mov
lods
jecxz
cmp
dec
arpl
insl
xchg
adc
xor
popf
inc
sub
pop
and
rclb
sahf
pop
or
nop
rcrb
cmp
inc
aad
pop
inc
cmp
pop
sub
mov
jmp
push
jo
mov
cmp
sbb
push
pop
pop
and
jnp
inc
fmull
in
pop
sbb
jo
xor
push
gs
rcrl
fsubs
insl
movsl
test
lcall
inc
sub
xor
mov
test
xchg
adc
and
adc
shl
xor
inc
adc
icebp
in
in
mov
dec
add
or
add
jmp
push
add
mov
call
cmc
xlat
sub
xlat
xchg
push
das
jmp
out
pop
aas
push
push
or
and
les
mov
sbb
out
add
push
lods
test
and
ja
sub
cmpsl
sahf
add
jb
shl
lea
ret
and
sbb
push
add
decb
mov
jmp
mov
shrl
jp
or
or
or
push
repnz
sbb
popf
mov
mov
add
jo
dec
scas
loopne
dec
xchg
adc
pop
mov
mov
mov
jne
sub
inc
xor
inc
and
jmp
inc
cmp
add
inc
cmp
dec
mov
test
aam
inc
dec
push
sti
push
inc
pop
add
je
fiaddl
testl
and
dec
add
lret
xorb
testl
mov
in
add
adc
add
dec
iret
xor
add
pop
inc
xor
cmp
nop
movsl
psrld
into
adc
add
inc
add
mov
out
dec
mov
popa
ret
fs
add
push
test
mov
int3
mov
cmp
mov
mov
orb
cmpsl
or
or
outsl
cld
jno
or
adcb
adc
sbb
and
cwtl
mov
mov
pusha
inc
add
std
popa
lods
and
sub
pusha
mov
lahf
push
cld
stos
and
xchg
or
adc
sbb
jmp
filds
sub
push
aaa
movsb
or
aas
lea
xor
mov
dec
add
dec
imul
and
push
enter
in
aam
xchg
cmp
jge
sbb
add
iret
es
movb
sub
adc
pop
addl
testb
into
and
pop
icebp
xor
popf
push
or
pusha
add
add
cwtl
ret
clc
and
inc
sahf
rclb
addb
faddl
or
inc
or
dec
aam
mov
sub
orb
das
xlat
jge
jo
je
lahf
xchg
out
push
push
mov
jp
inc
aaa
mov
sbb
cwtl
pop
inc
je
pop
mov
mov
xor
pusha
push
int3
int3
inc
push
mov
int3
mov
push
push
call
fadd
pop
mov
out
test
lcall
movl
mov
fdivp
jg
and
mov
stos
adc
adc
xchg
mov
pop
in
rcrb
mov
call
add
xor
mov
mov
push
loop
mov
xor
inc
push
popl
mov
sbb
loop
pop
in
push
dec
in
xor
inc
adc
stos
push
inc
adc
sbb
mov
add
in
out
push
sbbl
in
or
adc
dec
rol
push
test
das
test
jmp
in
jne
pop
push
mul
inc
and
push
pop
add
mov
rolb
jp
or
cmp
nop
dec
ljmp
jecxz
dec
jecxz
pslld
sbb
mov
rcl
ret
cmp
cvtpi2ps
out
pusha
inc
add
loop
push
pop
xchg
add
sbb
js
dec
push
into
mov
mov
fisubl
push
push
in
adc
dec
rclb
movsl
mov
cmp
mull
jae
mov
push
fcoms
fistps
aaa
sbb
and
mov
jnp
mov
and
mov
popa
push
jb
sbb
lcall
insb
fstpt
mov
aam
mov
sub
mov
ja
mov
movb
dec
sub
les
sbbb
int
rolb
into
pop
mov
push
flds
or
inc
addl
inc
pop
xchg
and
in
lods
clc
divl
sti
push
sahf
adc
sub
sbb
inc
dec
jmp
adc
fcomps
movsl
pusha
sbbb
movsl
pop
dec
aas
insb
dec
adc
or
or
xchg
inc
mov
mov
xchg
push
xor
jmp
xor
nop
out
fs
mov
push
dec
or
imulb
adc
shlb
push
sbb
popf
neg
dec
bound
jmp
or
adc
or
and
xor
inc
les
adc
mov
sbb
pop
cmc
adc
dec
jmp
ja
mov
dec
icebp
xchg
enter
xchg
cmp
or
dec
int
xchg
mov
clc
mov
leave
arpl
mov
mov
pop
mov
adc
insb
mov
xor
sbb
mov
fdivl
sbb
ja
xchg
cmp
movsb
push
es
iret
cld
outsb
call
add
mov
mov
js
mov
call
xor
and
sub
add
faddl
mov
xchg
enter
lods
lds
push
xchg
lods
sub
jne
xor
cmp
test
mov
add
jmp
xor
push
ljmp
mov
ret
outsl
xchg
jnp
pusha
stc
into
mov
mov
scas
imul
nop
add
insb
inc
adc
xor
adc
jnp
mov
decl
lods
jmp
add
dec
negl
jecxz
aaa
sti
test
repnz
or
sbb
sbb
push
mov
dec
inc
sbb
repnz
movsb
lret
cltd
into
and
das
mov
push
mov
dec
mov
cltd
dec
fidivrl
sub
sub
ret
dec
xchg
xor
pop
dec
out
sbb
cltd
mov
sub
out
enter
pop
js
or
xor
loopw
rolb
test
rcrl
scas
cmc
sub
pop
flds
push
cli
push
xor
xorb
jbe,pn
test
stc
add
pop
xchg
shl
adc
xchg
cmpsb
rcl
pop
add
aas
data16
scas
icebp
sbb
insl
pushf
shl
pusha
inc
push
lds
loope
mull
mov
or
call
cmpsb
or
inc
jg
mov
pop
push
das
mov
jecxz
fcompl
mov
push
push
test
ret
jecxz
mov
lret
mov
loopne
icebp
mov
jno
xor
lret
lcall
lahf
adc
test
mov
mov
mov
addl
arpl
icebp
inc
xor
or
push
or
and
and
jecxz
add
movl
pop
bsr
pop
imul
enter
pop
daa
xor
test
add
pop
and
sub
sbb
xor
imul
push
sub
insb
inc
push
addr16
cmp
stc
pop
divb
cmc
dec
sbb
dec
lcall
dec
push
adc
dec
sub
xchg
adc
dec
adc
loope
mov
pop
divb
mov
shr
jp
ret
mov
loope
loopne
mov
cmp
in
mov
dec
jo
and
and
pop
sub
rcll
ret
jp
inc
ret
push
jmp
pusha
pop
cmp
and
mov
add
repnz
mov
cmp
jne
sbb
jecxz
fcom
or
pushf
fldcw
les
sbb
pop
outsb
adcb
pop
cmpsl
add
xchg
inc
in
pusha
imul
addr16
adc
mov
and
cmc
pusha
pop
es
xor
add
lods
jno
dec
test
insb
dec
js
cli
sti
adc
inc
adc
cli
ror
jae
lahf
mov
xor
sub
andl
ds
les
test
test
cmpb
mov
push
fwait
and
movb
cmc
out
lcall
add
popl
jmp
push
out
pusha
lea
pop
sbb
mov
add
or
icebp
add
nop
inc
sbb
test
xor
lret
arpl
or
push
loop
outsl
call
ds
push
fisubrl
inc
cld
outsb
inc
rolb
in
and
aaa
jmp
xchg
xor
pop
xchg
adc
shll
test
mov
sub
or
adc
fisubl
dec
les
push
pop
shlb
sub
push
xor
mov
adc
push
dec
loop
add
arpl
push
xlat
mov
enter
dec
enter
test
adc
cmpsb
sub
mov
mov
arpl
mov
stos
or
xor
rcr
xor
scas
push
fcmovu
or
das
pop
nop
add
pop
rcll
jecxz
stos
sbb
imul
xchg
scas
add
sbb
idivb
ret
push
enter
mov
lock
add
testl
inc
outsl
outsb
mov
test
mov
push
add
inc
xor
push
adc
ds
jg
mov
add
add
add
mov
test
pushf
insl
int3
push
push
sti
dec
xchg
add
rorb
cmp
adc
xor
or
clc
int3
mov
call
test
aad
add
xor
mov
idivl
pop
push
out
sbb
movl
daa
fiaddl
cmp
arpl
addl
mov
lret
pandn
pop
je
outsl
jo
aam
sbb
mov
mov
jnp
out
cmp
or
adc
or
xlat
aam
call
popa
inc
ljmp
hlt
fs
jge
lods
aam
aaa
pop
test
sub
adc
cmpsl
outsl
daa
mov
mov
xor
mov
int3
ljmp
cmp
cli
mov
ret
orb
adc
push
rcll
lcall
jb
or
icebp
push
in
das
dec
aaa
aad
mov
inc
xor
ljmp
aad
push
es
inc
adc
dec
dec
lock
and
adc
xchg
leave
ss
adc
sbb
scas
es
fnsave
or
sub
add
ds
insb
mov
add
ss
pop
sub
rclb
sub
jno
push
pop
or
add
rol
sbb
popa
add
jmp
mov
int3
cmp
cmp
enter
xor
sub
sub
push
push
add
pop
pop
mov
and
push
pop
nop
add
fidivrl
lcall
push
sarl
inc
add
xlat
add
add
mov
ljmp
test
arpl
or
in
xor
add
or
mov
mov
mov
add
adcl
adcb
push
jg
jbe
mov
add
or
out
sbb
iret
fildl
fistps
jae
repnz
sub
clc
add
lods
daa
and
sub
fdiv
punpckldq
mov
mov
scas
or
cmp
add
push
inc
add
fcmovnb
cmp
pop
ja
std
adc
sub
mov
aam
addr16
cli
inc
loop
pop
or
jnp
inc
sub
dec
dec
jg
test
inc
lods
aam
pop
jg
cs
popf
fincstp
daa
mov
push
test
mov
jecxz
das
leave
test
adc
and
lahf
mov
add
cmp
and
aad
notl
jno
enter
stc
mov
cli
inc
xchg
rcll
daa
nop
fisttpll
and
or
or
ret
sbb
mov
dec
into
lds
mov
cld
mov
and
js
ds
pop
cmpsb
aaa
fdivrs
lret
xchg
fs
test
cltd
inc
xor
call
or
or
xchg
lock
in
ss
or
xor
sbb
and
jbe
loopne
lret
xchg
ffreep
adc
fwait
mov
jne
pop
std
sbb
add
imul
mov
ljmp
xor
insl
dec
ret
xor
dec
xchg
jbe
sbb
rcr
cmc
mov
shrb
call
rcrb
push
ss
out
add
vucomiss
xchg
cli
mov
or
push
pop
mov
insb
cmc
fiadds
lea
loope
or
pop
jmp
cs
push
sub
adc
mov
call
cmc
icebp
pop
sbb
mov
popa
xchg
icebp
jp
sub
cld
and
dec
addb
jmp
aaa
jne
or
fdivr
cmp
popa
add
or
and
loope
js
xchg
repz
jo
push
mov
pop
or
or
xchg
cwtl
add
adc
xorb
sub
packuswb
or
mov
jl
ret
and
lock
cmp
iret
into
jmp
push
jecxz
je
pushl
lods
xor
or
call
and
loop
mov
loopne
fwait
jmp
popf
and
xchg
and
push
in
enter
mov
dec
rolb
stc
shrl
js
int
shll
adc
arpl
xor
scas
and
cs
mov
shll
enter
cli
push
cwtl
and
andl
fs
adc
popa
add
cwtl
and
add
jp
rorl
xor
or
mov
fcomps
xor
xchg
push
in
push
sahf
stos
or
movsb
sbb
fistl
mov
sbb
pop
sbb
shrb
pop
mov
and
pusha
aaa
push
pushf
dec
dec
sbb
movsb
loopne
jmp
sar
lcall
sbb
sbbb
adc
mov
mov
jecxz
cmp
xchg
mov
call
push
or
pop
cmpsl
ret
aam
sub
pop
fsub
dec
mov
add
pop
push
ret
fidivs
and
fisttpll
loopne
ret
sbb
sub
insb
cmp
sub
ds
push
add
dec
test
xchg
repnz
jno
inc
call
sbb
arpl
rcrb
cmpb
pop
push
jne
mov
add
mov
test
and
jmp
lock
lock
adc
push
pop
scas
js
mov
mov
ds
sbb
dec
sahf
mov
lds
sbb
shr
outsb
out
sbb
jbe
cmp
xor
sbb
inc
adc
inc
ret
pop
js
insl
cld
insl
jne
mov
fs
dec
mov
sbb
mov
fmull
ja
or
adc
ret
cmpsb
or
loopne
sub
add
dec
push
xchg
loop
lcall
jo
hlt
push
lock
lds
pop
or
sbb
js
mov
test
movsb
inc
jo
sbb
iret
popf
mov
mov
dec
bound
or
bound
lret
punpcklbw
enter
dec
mov
mov
lods
jl
imul
aas
das
roll
xchg
pop
push
mov
push
sbb
sbb
add
xor
loope
ljmp
mov
and
clc
arpl
hlt
inc
js
push
push
mov
and
and
sbb
rclb
inc
and
shlb
pop
test
insl
imulb
or
xor
push
mov
adc
and
lea
inc
fildl
pop
andl
inc
into
mov
aam
jmp
push
imul
sbb
lods
sub
imull
es
inc
jecxz
mov
ret
dec
pop
clc
sbb
mov
roll
pop
sbb
add
icebp
mov
adc
and
inc
adc
hlt
sub
add
rolb
cmp
ds
shll
popf
inc
pop
dec
sbb
add
fwait
add
add
mov
mov
in
mov
fcomp
fsubrp
add
add
subb
inc
out
push
sub
sbb
inc
jp
call
or
cli
pop
mov
dec
fwait
in
cmp
sub
pop
pop
outsl
or
pop
mov
pop
cs
cltd
dec
and
or
cs
fwait
imul
add
add
mov
fcmovne
rclb
cmpsl
fisubrl
mov
xchg
mov
and
or
lret
addl
cmpb
and
add
mov
loop
pop
dec
xchg
outsl
push
adc
das
jo
push
and
das
fisubs
sbb
jle
dec
xchg
inc
sub
lahf
aaa
mov
xor
lods
imul
xchg
mov
in
movsl
roll
and
stos
xor
push
adc
test
out
jbe
mov
testl
cs
scas
es
push
fldt
mov
jne
pushw
sarl
pop
and
orl
sbb
lods
fs
daa
sub
test
fwait
pop
movsl
test
js
pop
mov
mov
mov
sbbb
adc
add
nop
stos
add
or
mov
ret
lock
mov
xor
dec
pop
jb
out
jne
pop
and
push
push
inc
add
sarb
lahf
nop
jmp
mov
aas
pop
das
aam
push
test
dec
ljmp
mov
into
push
pop
stos
pop
arpl
lahf
outsb
ja
movsb
cmpsb
xchg
and
jmp
or
xchg
push
ljmp
ffreep
fimuls
pop
in
js
adc
fadds
adc
cmpsl
mov
sub
imulb
out
push
mov
je
and
cld
movsl
add
rcl
popa
jp
jmp
std
mov
testb
xor
push
xchg
or
dec
js
mov
call
movsl
lcall
sub
mov
jb
pushf
dec
out
mov
adc
iret
es
outsb
cltd
sbb
dec
std
aam
outsb
mov
call
push
dec
or
jl
mov
or
or
clc
jns
icebp
ret
mov
or
dec
inc
or
int3
adc
or
stc
mov
dec
cmp
dec
lods
adc
xor
push
ss
inc
add
mov
mov
add
sbb
loopne
or
sbb
addb
sub
add
flds
add
push
xor
jnp
pop
lcall
or
push
rorb
add
or
test
add
es
xchg
push
stos
call
test
adc
mov
jno
jbe
mov
lock
arpl
and
dec
frstor
fisubs
sbb
fdivrl
sub
adc
movsb
adc
jg
mov
mov
inc
or
add
add
sbb
daa
add
data16
inc
add
rcl
adc
and
mov
adc
pop
sub
dec
xchg
push
jae
aaa
shlb
mov
and
je
hlt
xchg
push
adc
mov
ljmp
imul
push
xchg
xchg
test
sbb
jb
adc
xchg
jmp
add
mov
and
sub
dec
push
inc
test
push
mov
mov
mov
mov
mov
dec
dec
add
xchg
xor
or
inc
inc
ret
and
inc
daa
jecxz
stos
sarb
xlat
cmp
mov
sub
xchg
add
add
mov
popf
mov
mov
adc
push
sti
sbb
xlat
cmpb
add
jne
and
push
outsb
insb
shlb
push
fwait
psubusw
aam
mov
mov
test
dec
adc
ret
rolb
xor
stos
adc
mov
repnz
jle
mov
sar
stos
xor
jnp
add
ret
cmp
clc
mov
jmp
and
arpl
xchg
test
bound
jecxz
mov
push
add
aas
int
iret
and
jp
movsb
mov
rorb
pop
adc
dec
rclb
mov
push
cmp
les
jae
lret
hlt
mov
in
inc
adc
and
lret
mov
push
mov
outsb
cmp
popf
push
ds
sarl
icebp
adc
push
aam
rcl
dec
push
shlb
xchg
xlat
push
sbb
and
int3
movsb
cmc
adc
jmp
and
sub
sbb
add
push
inc
add
mov
incb
add
sbb
and
stos
and
xchg
mov
adcl
inc
or
je
or
jne
insb
rcrb
xorb
and
and
xchg
add
xor
cld
mov
add
and
bound
rolb
int
add
or
mov
push
add
add
xorb
mov
rolb
adc
loop
rclb
push
and
sub
enter
scas
or
and
sahf
inc
push
adc
scas
or
and
inc
hlt
int
scas
pusha
pushl
inc
cmp
mov
jl
cmp
mov
je
add
ss
or
jo
int
xor
loopne
in
mov
dec
add
lcall
sub
mov
cld
push
mov
lea
sbb
shrb
xorb
lcall
ljmpw
insb
pop
dec
pop
or
dec
int3
int3
lods
pop
add
js
xorb
ds
push
lea
incl
fs
lods
or
add
and
ficompl
scas
jp
pusha
adc
jl
rolb
lods
loopne
rolb
pop
inc
into
insb
rcll
xchg
cwtl
inc
loop
push
or
sbb
aam
inc
pop
enter
cltd
pusha
jbe
dec
out
push
pusha
sub
shlb
mov
cmp
sbb
xchg
sub
addb
ja
fcmovb
pushl
mov
mov
fidivs
mov
or
je
sbbl
mov
sub
sbb
xor
cmp
cmp
bound
cs
xor
pop
push
clc
mov
push
lea
add
jne
movb
shrl
mov
fisubl
and
les
sbb
popa
lret
xor
add
mov
lcall
add
and
cs
cmpl
rorb
mov
add
je
lods
or
push
push
add
out
fadd
add
pop
push
adc
xchg
or
or
add
mov
decb
mov
push
cwtl
enter
xor
sub
sbb
out
mov
mov
adc
in
scas
cltd
fldenv
push
je
je
push
push
rol
or
shlb
decb
je
cmp
loop
fs
dec
jne
enter
rol
cmp
xacquire
pop
push
and
call
insb
rolb
divb
push
adc
or
lcall
int3
ret
loopne
mov
and
or
push
and
in
andl
int3
mov
pop
lea
or
fiadds
fisubl
nop
jnp
cwtl
cltd
enter
clc
fimuls
xor
cmp
fcmovu
fldenv
mov
mov
mov
ret
xorb
add
popa
mov
xchg
push
mov
pusha
or
dec
and
jbe
pop
cmp
xchg
into
data16
fcoms
fcoms
je
jbe
pop
adc
ficompl
mov
jbe
sub
mov
inc
mov
add
mov
jbe
pop
adc
fidivl
add
pusha
popa
and
jmp
xchg
sarb
in
and
fadd
dec
sub
sbb
int3
in
xor
mov
mov
xchg
pop
rcr
inc
lret
mov
or
cmp
enter
cmp
fsubs
shr
pop
push
jl
or
push
mov
out
add
push
inc
insb
inc
push
add
imul
test
movsb
jmp
pop
push
clc
incl
sar
mov
mov
int3
je
fsubp
dec
and
mov
dec
inc
push
pop
loopne
add
inc
test
out
jmp
popf
aaa
sbb
movsl
or
out
inc
xor
push
or
jmp
adc
adc
or
add
in
adc
lock
lods
int3
mov
enter
jp
sbbb
xchg
and
or
inc
pop
ja
rcrb
fisttps
shlb
mov
addr16
andl
cld
mov
cmc
arpl
movb
jmp
jp
push
imul
or
ljmp
mov
ret
pop
inc
adc
inc
rolb
sub
xchg
add
xchg
mov
mov
mov
stos
xorl
out
out
push
shrl
icebp
hlt
and
add
mov
cmpsl
je
rorb
pop
js
mov
dec
or
mov
mov
leave
lock
inc
sub
push
mov
mov
mov
lret
mov
popa
adc
inc
arpl
jmp
fdivrs
push
jg
mov
jecxz
xchg
mov
flds
mov
loopne
xchg
mov
add
lock
ficomps
call
cmp
and
pushl
adc
or
js
mov
fmul
sub
lds
push
push
or
sub
pushl
pushf
lahf
or
leave
pop
bound
pop
xchg
je
sbb
pop
cmpsb
out
jle
subl
xor
mov
popf
ljmp
jp
xorb
adc
sbb
jno
mov
pop
sarb
cli
cld
incl
push
jb
pop
and
xchg
mov
ffreep
orb
sbb
ljmp
movsl
xor
mov
sub
arpl
sbb
add
decl
sbb
cmp
xor
cld
mov
mov
enter
mov
js
in
push
call
push
jp
ja
pusha
push
and
mov
xchg
jge
lcall
mov
sub
push
jne
addb
imul
js
and
call
insl
pop
xchg
lea
cmp
dec
stos
xchg
lahf
cmpsb
adc
sub
loop
dec
icebp
push
or
dec
or
jno
pop
scas
xchg
and
popa
cwtl
xchg
xchg
dec
popa
fwait
jl
fiaddl
mov
decl
dec
mov
mov
xchg
in
adc
dec
adc
jle
outsb
mov
jns
add
fcoms
pop
push
push
jbe
and
sti
add
popf
cmp
cmp
leave
les
or
cltd
jle
icebp
test
dec
in
mov
jne
adc
aad
push
outsl
clc
mov
cwtl
call
loop
mov
iret
roll
data16
jecxz
pushl
jmp
mov
cmp
push
testl
jecxz,pn
nop
pop
jg
jmp
cmp
mov
fmulp
jb
inc
gs
jbe
cmp
aaa
fisttpll
and
jle
jecxz
bound
push
inc
movsl
jle
jl
xchg
rclb
test
jmp
or
shlb
cmp
xchg
stos
cmp
cmp
es
sbb
jmp
jmp
cmp
mov
mov
xchg
add
ljmp
mov
scas
shrb
dec
add
push
cld
adc
sbb
call
sbbl
std
fstp
cmc
mov
jne
adc
out
push
push
rolb
push
cmp
and
jb
mov
cwtl
into
fxch
js
pop
adcb
in
fsubs
and
pop
dec
stc
rcll
cmp
xor
dec
mov
loope
mov
add
xchg
add
decl
incb
xlat
repnz
popf
sbb
sbb
in
fistps
or
jne
jmp
jae
mov
xor
stos
std
imul
inc
movsb
call
cld
call
cmp
inc
leave
pop
cwtl
or
mov
inc
idivb
push
call
daa
and
rcll
push
inc
jnp
pop
xor
mov
shrb
pop
ret
lret
xchg
fucomip
outsl
add
push
std
andb
cld
in
in
test
fbld
push
lods
mov
lret
push
jecxz
pop
add
sbb
lcall
adc
mov
add
mov
cmpsb
sbb
outsl
xchg
nop
jno
outsb
data16
ljmp
call
sbb
mov
inc
and
sub
adc
aam
je
pushl
aas
push
rolb
popf
std
or
stos
fidivrl
fstl
fdiv
cmp
xor
jmp
sub
add
push
xchg
xlat
movsb
or
push
mov
repz
stos
lcall
popf
pushf
jecxz
loopne
or
xchg
cmc
sub
stos
adc
aam
fcompl
shl
mov
cli
adc
or
or
mov
lock
pop
xor
incl
loopne
mov
xor
add
call
aas
cld
cwtl
lock
mov
jmp
sbb
sbb
nop
jp
adc
aas
mov
insb
sahf
adc
inc
push
aas
mov
call
add
add
imul
xchg
adc
cmc
mov
and
lcall
sti
mov
xor
pop
jmp
mov
sbb
sahf
iret
push
sbb
inc
inc
lcall
and
or
out
pop
mov
leave
adc
pop
mov
stos
push
dec
pop
inc
fxam
push
xchg
fcomip
xchg
mov
mov
dec
mov
pop
pop
adc
enter
ja
adcb
in
push
inc
add
dec
es
sbb
xchg
in
mov
jmp
lods
cmpsb
pop
cld
or
ret
sub
imul
adc
or
mov
bound
scas
mov
stc
mov
mov
jge
sarb
push
adc
cmp
push
enter
dec
mov
fnstenv
scas
sbb
inc
or
insb
nop
scas
sub
xchg
ljmp
call
imul
mov
into
push
sub
ja
popl
ljmp
or
pop
xchg
adcb
jmp
sar
lahf
lahf
push
mov
jmp
out
scas
add
push
aaa
jl
addr16
add
stos
gs
and
decl
mov
sti
pop
mov
pop
or
repnz
inc
jne
xchg
dec
rolb
pop
sub
mov
fadds
adc
cmc
icebp
inc
imull
mov
in
and
fcomps
int3
data16
jnp
pop
inc
dec
repnz
pop
addb
push
and
shr
in
add
adc
addr16
push
cld
incl
and
mov
sub
clc
mov
dec
enter
add
pushl
push
cmp
mov
mov
push
push
mov
iret
or
lret
cmp
mov
pushl
stos
pusha
and
cwtl
add
ljmp
ja
sbb
lock
imul
aas
into
mov
push
ret
xor
cltd
xchg
xor
pop
inc
aam
mov
cmpsl
std
lret
imul
sar
ljmp
ret
and
mov
pop
xchg
cwtl
xchg
pop
lods
mov
sub
das
sbb
jl
in
jns
jge
jbe
shlb
inc
stc
outsl
add
incl
pop
lret
test
xchg
mov
fildll
push
cmp
pop
mov
add
test
decl
or
or
inc
mov
push
xorl
push
sarl
leave
mov
nop
call
jo
sbb
cli
mov
cmp
mov
out
loopne
lds
and
es
mov
cmp
dec
and
jl
lret
cmp
leave
rcrl
push
insl
fisttps
fcomip
div
pop
adc
push
sub
sbb
add
push
and
push
ljmp
leave
jmp
leave
call
rcrl
inc
pop
lret
popf
fcomip
pushl
inc
mov
xorl
push
jl
adc
dec
jl
jno
or
jno
dec
inc
mov
and
jmp
push
adc
les
mov
mov
push
int3
adc
call
jle
rclb
negl
or
loop
jg
jo
mov
mov
xchg
mov
fstpl
sbb
dec
mov
loope
flds
cmp
flds
jbe
das
jmp
adcl
jle
xchg
pop
or
ret
ret
rcrb
sbb
leave
mov
scas
xor
adc
cmpl
dec
ss
mov
mov
adc
jl
test
adc
pushl
xor
mov
aas
xchg
dec
push
nop
dec
cmpsl
mov
xchg
cmp
orl
mov
mov
cltd
sahf
insb
inc
repz
les
ljmp
mov
nop
cmp
push
pushf
cmp
call
add
test
stos
shlb
fcomip
xor
je
add
push
loopne
mov
bnd
dec
incl
ret
and
and
mov
inc
and
arpl
jmp
sti
test
mov
imul
aas
stc
xor
and
mov
cmpsl
cmp
xchg
jmp
pop
in
lcall
sbb
ret
rcll
add
fistpll
adc
aaa
push
add
scas
test
jge
jbe
lcall
xor
movsl
int
sar
lret
sbbb
adc
add
jmp
xchg
inc
push
and
push
mov
xchg
dec
push
sarb
pop
test
mov
insb
and
push
mov
dec
jb
adc
mov
pushf
jns
incl
or
ds
ret
rcrl
sub
je
push
push
adc
es
daa
mov
int3
out
xor
pushl
loopne
out
push
or
mov
rcr
loopne
adc
ljmp
into
mov
xlat
nop
je
loop
fwait
call
insb
cvttps2pi
hlt
ljmp
xchg
inc
pop
push
test
mov
mov
ficoms
call
xchg
inc
mov
xor
in
mov
cwtl
repz
aad
mov
inc
pop
aaa
jg
and
xchg
and
sub
lds
and
mov
jne
jae
popa
cmp
lods
lea
push
shlb
or
xchg
out
and
adc
sub
mov
call
ret
stc
dec
mov
pusha
aas
aad
mov
push
in
loop
ljmp
pop
sbb
mov
lcall
inc
dec
nop
fisttps
loop
in
mov
fdivr
mov
and
mov
or
add
mov
dec
adc
outsb
and
dec
xor
int
jg
adc
xor
fldcw
stc
shld
lods
jno
pop
pop
push
push
inc
rcrb
loop
fiadds
adc
clc
nop
nop
xor
enter
aad
cld
fs
mov
cmc
push
jge
mov
jmp
push
mov
rcll
cltd
mov
fsubp
pop
pop
movsb
sub
xor
jmp
in
and
enter
lcall
leave
jle
pushf
outsl
xchg
mov
movsb
jg
mov
adc
inc
dec
mov
dec
xor
cld
ret
or
incl
mull
pop
pop
test
dec
pop
mov
rcrl
mov
xchg
ljmp
push
subb
or
and
xchg
sarb
lcall
aam
stos
lea
add
and
xor
in
loope
cmp
loopne
ret
inc
les
sbb
arpl
adc
jnp
push
xchg
mov
xchg
jmp
loopne
jl
push
sbb
or
fsubrl
xor
rorb
aas
inc
xor
or
sbb
dec
mov
jnp
push
mov
adc
fldenv
dec
loope
test
mov
adc
mov
addr16
adc
lcall
add
imul
or
jns
push
jg
mov
sbb
add
lcall
lret
pop
push
nop
scas
cmp
inc
mov
mov
mov
decl
push
ret
call
or
fdivr
pop
inc
xor
mov
out
arpl
sti
scas
ljmp
decl
adc
lods
sub
in
pushf
movsb
pop
cmp
int
les
xchg
cmpsl
or
and
xchg
or
clc
hlt
pop
dec
nop
inc
loop
mov
test
cmp
and
ss
mov
and
adc
js
xchg
push
xchg
dec
ret
adc
lcall
repnz
scas
cmpsb
outsb
mov
ds
pop
in
in
pop
dec
mov
cltd
orb
push
scas
add
xor
outsb
push
lret
nop
sahf
dec
mov
lds
xchg
dec
sub
adc
inc
pop
mov
leave
adc
fs
adc
mov
cmp
in
inc
adc
lcall
lcall
shll
fdivs
and
push
jnp
fs
inc
adc
push
ret
clc
mov
hlt
xchg
loope
pop
inc
inc
pusha
push
xchg
call
and
cmp
cmp
testl
push
and
mov
insl
mov
inc
popa
mov
arpl
je
lcall
pop
test
fiaddl
jo
insl
pop
pop
fmuls
ja
mov
and
push
jne
dec
mov
shlb
out
xchg
add
sbb
pusha
iret
add
dec
push
mov
mov
push
cmc
sub
xchg
jmp
sahf
and
mov
mov
loop
inc
inc
add
lods
sbb
je
jecxz
loopne
mov
jl
adc
inc
add
in
xchg
sahf
or
and
pop
mov
imul
es
xor
mov
push
xchg
push
dec
push
or
sarb
ret
mov
sub
push
pop
jmp
and
adc
add
cmp
in
fidivl
sbbb
daa
xchg
fwait
imul
xchg
iret
xor
ret
shll
sbb
xchg
xor
sbb
mov
std
aaa
es
cmp
mov
or
int3
rorb
inc
enter
lcall
out
push
je
movsb
lcall
test
add
cmp
add
sarl
jg
test
cmpsb
push
mov
xchg
js
add
push
out
mov
push
and
rorl
pop
xor
pop
xor
adc
shl
cltd
sub
sahf
and
call
test
adc
shll
nop
ret
adc
out
cld
add
rep
pop
adc
cmp
mov
push
sbb
jae
ret
adc
lea
rolb
and
std
mov
out
fcomip
decl
mov
add
or
mov
sbb
sub
inc
fcomip
xchg
rorb
loopne
adc
test
mov
ljmp
push
adc
inc
pop
jl
mov
dec
ja
fldl
inc
lret
test
das
pop
sar
fistpl
jb
mov
bound
jle
mov
and
popa
sbb
cmp
mov
imul
pusha
and
xchg
and
enter
mov
mov
or
pushl
stc
sub
mov
es
push
or
out
sbb
push
fdivrs
inc
out
jle
sbbb
lcall
inc
sub
enter
fisubl
rcrl
xchg
or
mulb
push
loop
imul
ljmp
fs
xchg
subb
dec
cmpsl
mov
sbb
push
jns
xchg
cmpsb
xlat
sub
fdivl
mov
xor
pop
pop
jg
push
lds
cmp
push
loopne
inc
mov
inc
pushf
decl
sbb
flds
bound
dec
or
pop
hlt
jmp
imul
adcl
adc
leave
inc
shll
pushl
popa
ljmp
adc
push
push
pop
sahf
js
dec
movl
call
movsb
sbb
test
cld
cwtl
imulb
sub
test
cmp
imul
jnp
mov
inc
dec
out
lds
inc
push
sbb
jmp
lret
add
or
xor
cli
mov
mov
rcll
popa
jo
clc
test
mov
mov
mov
jmp
repnz
cwtl
sbb
and
movsb
pop
test
es
or
fisubrl
inc
nop
and
push
call
rol
jmp
outsl
push
jmp
cmp
lret
fcompl
loopne
sahf
dec
rcrb
push
roll
xchg
jl
and
sbb
jle
inc
xchg
push
push
mov
jnp
xor
or
daa
loopne
add
mov
decl
mov
movsl
sti
test
add
mov
adc
dec
lock
xchg
xchg
sub
jle
repnz
cmp
hlt
dec
dec
add
addr16
cli
pop
shlb
stc
and
jmp
loopne
jmp
test
ret
xchg
push
in
add
test
xorb
dec
xor
pop
cmpsl
adc
xchg
add
test
add
lahf
sbb
push
pop
adcb
or
or
fs
rcl
pop
xor
fisubs
jmp
test
inc
insl
push
shll
fisttpl
adc
sti
outsb
mov
sbb
decl
outsb
adc
pop
inc
mov
add
or
mov
jle
mov
lcall
inc
cwtl
das
xchg
ret
jns
adc
or
repnz
push
popa
loopne
pop
adc
jo
mov
iret
push
xchg
inc
xor
jbe
into
out
adc
jecxz
cwtl
cmpsl
out
incl
inc
adc
lret
xchg
jmp
pop
sahf
test
lret
ret
orb
sub
jmp
adcl
js
pop
stos
pop
adc
push
xor
dec
mov
shll
scas
pop
out
xchg
pop
loopne
lcall
js
or
dec
shll
jbe
ja
addl
fldt
and
pcmpgtb
jo
mov
enter
scas
movsl
pop
mov
or
addr16
in
pop
ljmp
mov
mov
adc
and
test
das
clc
decl
sub
or
sbb
add
call
push
xor
push
jmp
jg
mov
jo
adc
add
mov
mov
fdivl
outsb
inc
xchg
ds
decl
or
pop
cltd
mov
jnp
leave
fmuls
imul
setp
dec
push
sahf
imul
in
mov
jecxz
jmp
ljmp
push
xlat
jp
inc
pushl
jge
cmp
bound
cmp
inc
addl
or
mov
push
fs
or
jg
adc
jo
xor
add
fidivs
jno
add
cmp
decl
or
js
incl
xchg
pop
cwtl
ds
roll
shlb
sbb
push
add
cmp
mov
sub
test
cmpb
incb
call
mov
or
repz
lods
adc
daa
push
nop
push
cmp
jno
ss
jbe
cmp
xor
cmp
ja
loope
pusha
mov
or
nop
and
and
out
pop
and
cmc
push
adc
rolb
mov
cmc
inc
loopne
inc
mov
movsl
pop
lods
in
jecxz
out
inc
cmp
inc
ret
call
cmp
dec
loopne
es
inc
fwait
stos
test
in
sbb
mov
call
call
iret
jge
mov
pop
sub
jg
in
bound
and
ljmp
inc
xchg
cmp
dec
ljmp
lock
adc
xorb
jnp
stos
jno
call
or
xor
ds
inc
mov
sbb
bound
add
or
jmp
jbe
int3
sub
sbb
jne
pop
rolb
or
mov
test
fwait
sbb
incl
loope
push
imul
sbb
cltd
inc
mov
push
jecxz
jno
push
scas
mov
incl
xchg
sbb
add
add
sub
mov
mov
in
push
inc
ljmp
xor
fldl
imul
insl
fld
mov
mov
and
xor
lret
jmp
dec
outsl
js
fadds
leave
ret
push
xchg
movsl
cmp
loopne
add
sub
and
in
testb
rcrl
shll
and
loope
call
ss
decl
push
mov
lcall
sbb
dec
sahf
inc
or
jmp
pop
and
cvtdq2ps
movsb
aas
mov
or
fmuls
xchg
cmpsl
pop
lods
and
pushl
decl
push
and
xor
mov
mov
pop
rcrb
insl
sbb
cmp
inc
or
clc
outsl
cld
mov
dec
cmp
mov
pusha
stc
test
arpl
daa
scas
add
ret
mov
mov
push
xchg
inc
cmp
test
xor
js
roll
add
pop
jmp
sub
inc
push
inc
gs
stc
inc
xor
data16
pop
cld
jg
push
out
pop
nop
sbb
aad
adcb
sub
fdivrl
pop
xor
pushf
push
loop
cs
xchg
stc
out
loope
push
push
cwtl
fdivs
jmp
clc
call
psubd
into
dec
push
xor
icebp
call
hlt
and
incl
aaa
push
icebp
iret
dec
sbb
decb
negb
pop
loopne
call
or
xchg
push
stos
xchg
jns
inc
mov
loopne
arpl
lods
enter
pop
loopne
out
leave
rolb
insl
inc
mov
sahf
loop
jmp
dec
and
stos
shll
nop
call
push
iret
call
xchg
add
adc
test
pop
xor
pop
xchg
xchg
xlat
ljmp
dec
cmp
bound
bound
mov
inc
clc
test
mov
clc
or
and
pop
decl
std
jle
icebp
jmp
jle
pop
and
les
lds
incl
sbb
xorb
mov
adc
xchg
or
or
outsl
pop
and
std
dec
jl
pop
rcll
stos
mov
and
in
cld
lock
in
jne
push
sarb
xchg
push
divb
inc
call
push
jle
add
lret
fldl2t
or
lcall
lcall
insl
mov
xor
pop
inc
cmp
lock
add
push
decl
jl
shr
push
sub
ret
adc
stos
mov
sbb
jne
sbb
jmp
xor
pop
sub
cmp
inc
sub
popa
add
aas
inc
and
dec
and
inc
in
dec
cmc
adc
jecxz
dec
jle
jecxz
mov
adc
sbb
adc
arpl
xchg
and
incl
or
rcl
cs
inc
sbb
lock
rcl
jns
bnd
test
mov
out
mov
and
mov
jle
push
pusha
pop
in
inc
fwait
incl
test
leave
or
lock
jp
dec
jae
xchg
lcall
jmp
jne
dec
mov
xor
cmp
jo
repnz
mov
nop
mov
mov
sub
pop
aam
stos
and
int
sahf
call
inc
nop
ret
add
mov
cmpsl
cmp
cltd
and
fmuls
xor
mov
dec
in
pop
addr16
inc
adc
js
sysret
or
repnz
loop
clc
fimuls
call
adc
fdivp
in
jo
ds
out
mov
inc
pop
mov
int
gs
push
cli
push
add
js
push
push
xchg
test
lret
sbbl
mov
and
sahf
inc
inc
inc
cmpsb
fwait
add
and
lret
jmp
shll
int3
rclb
loopne
adc
cld
subl
iret
xchg
in
dec
xor
adc
xchg
mov
mov
lret
push
addb
lea
int
mov
xor
ljmp
sbb
mov
push
cmp
jge
or
push
and
mov
jg
and
jno
push
popa
aas
sbbb
mov
or
xorb
loope
test
jmp
ljmp
and
push
add
mov
xor
push
pop
sub
dec
xor
ljmp
mov
divl
push
push
mov
push
je
adc
jg
or
xor
mov
mov
pop
push
adc
ljmp
push
mov
add
add
gs
cmp
je
pop
lahf
push
mov
clc
decl
popf
mov
and
je
outsl
jp
mov
ljmp
inc
sbb
jle
pushl
adc
popl
push
in
xor
mov
sbb
outsl
add
std
mov
mov
outsl
pusha
xchg
cld
into
cmc
add
pop
cmp
pop
xorb
mov
lock
sbb
inc
imull
jp
aas
push
push
inc
cwtl
inc
pop
cmc
push
adc
pushl
and
adcb
pop
adcl
and
enter
xchg
mov
pop
decl
push
in
rclb
and
das
xor
mov
and
add
testl
sbb
incl
sbb
add
xor
nop
mov
out
jecxz
cwtl
pop
je
or
arpl
jmp
or
xlat
sahf
add
push
lret
push
sbb
je
xchg
cli
sub
sbb
imul
dec
push
xchg
subl
cmpsb
xchg
subl
loope
cmp
rorb
incl
sarl
push
jae
mov
mov
inc
xor
sub
test
cmpsb
out
lock
leave
test
pusha
pop
and
add
das
scas
imul
mov
call
adc
xlat
mov
leave
rcl
aaa
inc
xlat
mov
popf
xor
pop
push
outsl
pop
and
stos
lods
mov
outsl
call
ds
or
inc
mov
push
cmp
dec
cmc
sbb
shl
jg
test
call
sbb
test
sub
inc
and
adc
and
pop
and
test
call
jg,pn
or
inc
imul
push
sbb
aam
mov
fs
call
or
adc
cli
pavgw
dec
repz
jp
jl
push
sbb
sub
jg
push
scas
addl
inc
jecxz
add
xor
mov
xor
lcall
sub
pop
imul
test
adcb
ds
xchg
mov
fcomip
incl
add
cmc
popa
xchg
xchg
leave
pop
aad
jmp
jmp
lcall
scas
sbbb
je
call
pushl
in
sbb
add
mov
in
sbb
test
cmp
nop
inc
mov
pop
cmc
mov
dec
fistpll
lds
jns
mov
daa
jl
jg
dec
clc
loop
lds
mov
sub
lcall
in
add
loope
inc
jb
mov
xor
dec
add
jle
jl
loop
jmp
decl
lock
pop
orl
dec
inc
pop
and
mov
call
mov
add
and
loopne
mov
cltd
pop
mov
jne
jl
inc
mov
sbb
stos
insl
in
cwtl
mov
xor
bound
outsb
orl
cmc
sbb
icebp
stc
cmp
ljmp
jl
js
push
fcompl
rcr
popf
popa
mov
sub
mov
jmp
mov
in
push
xlat
add
sub
ss
mov
cmp
push
mov
dec
test
mov
inc
xchg
adc
push
push
leave
addb
mov
cmp
inc
or
adc
outsl
clc
jmp
push
adc
repnz
aaa
fwait
sbb
jmp
and
sbb
outsl
cli
pop
in
mov
fidivrl
pop
add
mov
shll
sbb
xchg
or
xchg
bound
std
call
push
fimull
push
jb
jecxz
and
xor
aaa
and
inc
popf
pop
add
mov
fisubs
push
das
mov
in
push
dec
icebp
ret
push
adc
jp
push
and
jns
ljmp
sar
into
out
loop
mov
stc
rcrl
lret
adc
stos
jl
incl
pop
sbb
sti
add
sahf
ret
xchg
lock
mov
test
aaa
repnz
das
fiaddl
jmp
scas
repnz
sbbb
rorb
lea
addr16
jmp
xchg
enter
add
mov
mov
adc
addr16
adc
inc
jmp
xchg
or
out
pop
rcrl
fwait
and
jne
int3
lcall
jl
orl
jmp
scas
data16
mov
enter
cmp
sahf
add
mov
je
test
stc
xchg
xchg
adc
xor
jmp
mov
xchg
or
popa
fcmovb
pop
sub
jmp
xlat
or
lcall
pop
sub
clc
mov
mov
movsb
cmp
cmpsb
and
inc
mov
cmp
pushf
pop
push
sbb
sbb
adc
movsl
adc
xchg
cmpb
incl
adcl
adc
adcl
jb
dec
adc
leave
ret
call
xchg
mov
push
add
cmp
jnp
xchg
cmp
in
xchg
and
lcall
inc
out
aad
aam
ds
inc
repnz
aaa
cmp
mov
mov
andl
insb
daa
aad
or
iret
enter
xlat
ljmp
push
mov
mov
cmpsb
sub
adc
les
or
jg
inc
icebp
sbb
test
and
mov
stos
xchg
stc
or
mov
mov
loop
sahf
push
ljmp
mov
push
mov
nop
les
rorb
xor
sub
jmp
movsl
fs
inc
enter
call
fwait
clc
jl
pop
aam
not
stc
push
cld
daa
outsb
sub
lcall
cmc
mov
popf
clc
int3
inc
in
mov
rorb
and
jle
and
enter
push
nop
fcomip
mov
fdivs
jns,pn
movb
repz
dec
push
jmp
jno
lcall
sub
inc
xor
ljmp
xor
mov
mov
mov
add
inc
jge
cmp
dec
adc
in
lret
fstl
call
rolb
imul
mov
mov
loopne
in
jp
shlb
push
ljmp
mov
add
out
js
push
rclb
dec
loopne
movsl
pusha
cmpb
cld
mov
repz
dec
and
cld
push
cmpsb
icebp
pushl
decl
cmp
pushf
add
sarb
stos
aam
adc
clc
mov
call
and
dec
rclb
jg
push
into
test
xchg
movb
push
xor
push
cmp
decl
and
aam
jns
push
inc
in
dec
cld
aas
arpl
and
add
dec
pop
fsubrl
dec
mov
rcrb
ret
jo
cmp
cmp
mov
sbb
add
adc
dec
add
jno
inc
jmp
iret
stos
push
pop
out
xlat
decl
adc
scas
mov
cltd
int
inc
xor
xor
inc
cltd
xchg
or
or
popf
daa
inc
lock
ljmp
jns
jo
sub
out
push
fs
rorb
je
jmp
in
fisttps
aas
icebp
sub
test
inc
mov
add
add
push
mov
in
hlt
xchg
fadds
cmpsb
cmpsb
or
jbe
shrb
mov
and
xchg
mov
xchg
dec
sarb
stos
jmp
pop
cld
dec
ja
fists
and
mov
lcall
jns
inc
lods
andb
sub
xchg
mov
push
insl
ljmp
cmp
incl
sub
inc
sbb
adc
mov
int
sub
push
incl
mov
pop
cwtl
jb
rclb
mul
pop
ljmp
jmp
out
dec
sbb
in
ss
jno
fsubr
inc
testl
jmp
decl
fwait
adc
mov
jne
and
cmp
test
inc
jmp
iret
and
xor
daa
mov
mov
test
push
scas
mov
add
clc
push
sub
fisttpl
adc
imul
sbb
sti
fimull
push
and
mov
jnp
out
clc
push
push
cmpsl
jo
mov
pop
push
or
ljmp
inc
push
mov
cmpsl
add
cmp
cli
in
clc
mov
insb
add
jp
sarb
sub
inc
inc
mov
add
out
outsl
test
incl
pop
and
es
insl
mov
lcall
inc
xchg
shrb
das
clc
aas
sub
sahf
mov
enter
or
mov
incl
push
add
and
push
or
cld
xor
and
pop
lcall
ljmp
lock
int3
xor
nop
xchg
hlt
shrl
sub
jne
das
inc
aad
sbb
leave
pop
test
decl
divl
or
jb
ja
mov
xorb
cmp
stc
inc
push
shrb
lcall
test
jmp
in
inc
lods
int3
pop
sar
scas
test
jno
stos
mov
lahf
sub
incl
push
jb
fildll
mov
ljmp
enter
cmp
lcall
sbb
in
mov
lock
cmp
iret
lret
dec
jecxz
push
repz
cmpsl
add
dec
das
push
leave
or
cmpsl
jmp
fdivrl
mov
inc
and
push
ret
int
fidivs
lods
mov
xor
roll
outsb
lcall
dec
icebp
and
xchg
fimull
test
xchg
lcall
lock
sub
cwtl
cs
dec
cmp
iret
rclb
cmc
jp
push
aas
jp
add
pop
popl
add
or
bound
adc
xor
decl
lds
lea
push
jne
je
xor
movl
incl
mov
or
xchg
mov
stos
aas
shrl
cltd
xor
xchg
and
in
sub
mov
add
das
mov
mov
dec
pusha
inc
std
add
stos
addr16
mov
cmp
push
or
sub
sub
sub
or
rcrl
or
in
xchg
js
xor
arpl
sub
inc
cmp
jg
rol
jo
sub
leave
jns
outsb
sbb
or
pop
mov
cmp
std
pushl
or
and
jp
dec
jecxz
xor
add
popl
out
add
inc
fwait
ljmp
daa
jno
cwtl
pop
pop
imulb
xor
or
incl
adc
mov
test
jmp
push
iret
sbb
ljmp
mov
mov
or
out
mov
in
cld
pop
lcall
mov
lock
roll
add
mov
rcl
add
std
pushl
inc
lahf
shrb
pop
in
adc
ljmp
or
movsl
adc
mov
enter
mov
mov
pop
jnp
sub
push
out
or
or
movb
imul
fwait
shll
hlt
cli
inc
dec
leave
adc
loopne
in
push
mov
loopne
cmp
adc
ljmp
dec
adc
adc
shrl
jb
adc
lahf
adc
adc
xchg
add
mov
push
sub
sbb
aas
xchg
sti
shrl
aas
jbe
mov
cmpsb
rol
sahf
inc
dec
daa
and
ljmp
cli
jmp
lea
mov
dec
notb
mov
pop
add
ljmp
setnp
push
push
jb
push
daa
jmp
cwtl
iret
pop
nop
add
pop
mov
cli
pushl
inc
sbb
sbb
adc
sahf
and
push
mov
stos
xchg
je
pop
js
rclb
or
xchg
adc
pop
lock
pop
sub
lea
dec
pop
sbb
jecxz
rorb
inc
inc
dec
and
xor
clc
fsubl
xchg
jmp
test
push
sub
cmpsb
roll
pop
or
cmp
xchg
clc
jmp
push
mov
addr16
ja
cmp
push
push
stos
xor
cmp
loope
xchg
dec
mov
leave
iret
repz
call
sbb
push
jle
push
mov
push
sub
fsub
lock
fbstp
sbb
cli
jno
js
dec
faddl
xchg
mov
aas
loope
daa
decb
sub
nop
dec
push
and
lret
insb
sbb
add
loop
lcall
inc
cmpsb
jmp
neg
dec
jo
bound
insl
sub
stos
adcb
xchg
adc
movsl
xchg
call
jmp
int3
out
sahf
in
jmp
repz
pusha
stos
decl
mov
pop
mov
scas
cmp
and
fstl
dec
inc
repnz
subl
mov
xor
mov
lret
sarb
pop
add
ljmp
sar
mov
pusha
data16
jge
clc
inc
and
xchg
mov
lcall
ret
pop
and
cld
and
aas
int
cli
call
and
xor
jge
push
fsubs
mov
test
ljmp
cmp
gs
rorb
xor
movsb
fiaddl
pushl
mov
addb
sbb
inc
outsl
jnp
sbb
lahf
test
daa
xchg
call
mov
mov
mov
ret
cmp
mov
jmp
cmp
adc
shrl
call
in
adcb
xor
scas
cltd
inc
and
call
cmp
lahf
call
pop
ret
dec
test
lcall
dec
or
ljmp
xchg
test
in
mov
sahf
negb
iret
daa
push
jae
call
stos
std
xor
or
jne
xchg
mov
hlt
hlt
les
incl
jmp
sbb
sbb
push
mov
cwtl
popf
sbb
incl
or
cmp
add
hlt
ja
pop
aad
cli
push
popf
arpl
das
mov
xor
incl
out
cmp
cld
icebp
jbe
mov
out
cmp
pop
pop
fdivr
push
push
xchg
jae
scas
xor
imul
jne
dec
lret
add
push
call
xchg
pusha
mov
lcall
je
sahf
lret
add
sub
jl
add
pushl
mov
mov
adc
out
push
sar
shll
jp
imul
decb
sbb
adc
orl
add
xchg
lock
fnstenv
enter
sar
xchg
xor
lret
je
mov
mov
inc
or
jg
lcall
adc
inc
rcrb
scas
dec
jbe
add
les
lahf
adcb
dec
or
test
js
xchg
jnp
inc
je
jl
std
roll
adc
cmp
jge
ljmp
sbb
faddp
mov
popa
lea
mov
sub
aad
mov
xor
pop
sbb
rolb
push
loopne
adc
pushl
es
jne
or
int
rorb
add
pop
dec
lods
add
sbb
mov
xor
gs
movsl
push
xchg
sub
dec
add
add
mov
or
push
sti
sbb
cmc
cmp
xor
xchg
sbb
jmp
cltd
inc
push
incl
pop
jb
xor
push
roll
sub
dec
ja
add
out
pop
adc
andl
inc
push
sbb
les
lds
in
pusha
lock
dec
lret
adc
or
add
cwtl
adc
cmpsl
mov
and
in
jecxz
xlat
jmp
addl
subl
loopne
or
fwait
dec
push
push
mov
push
jg
jo
inc
sub
inc
lock
inc
and
adc
lret
out
mov
in
test
mov
sub
add
push
jl
mov
cmc
jo
add
or
cltd
int3
sbb
or
add
sub
jo
rclb
mov
pop
es
jg
mull
sub
cmp
jp
inc
dec
inc
daa
pusha
inc
and
test
push
add
enter
mov
mov
push
je
xchg
pop
test
out
push
inc
dec
dec
clc
xlat
push
inc
call
incl
dec
push
lret
sbb
lds
insl
dec
sub
lahf
or
and
dec
pop
decl
or
push
cltd
out
mov
pop
sub
in
decl
lock
xchg
jbe
insb
or
jae
push
rclb
movsl
incl
add
je
jb
stc
push
xchg
fwait
sarl
and
mov
or
mov
imul
idivb
adc
lods
in
and
je
lods
comiss
pop
cmp
push
xchg
test
int
mov
push
jno
xor
mov
mov
add
xchg
stos
inc
mov
sbb
scas
std
lock
jno
lret
loopne
inc
pop
xlat
lcall
into
adc
and
cltd
or
es
nop
add
mov
inc
push
xor
ja
jg
loope
adc
adc
daa
addb
mov
lds
aam
cmp
fildl
jge
ret
repz
xchg
mov
sbb
adc
mov
xchg
nop
xchg
dec
adc
or
movsb
mov
inc
mov
pop
adc
ret
fdiv
mov
add
fcoml
std
cmp
sbbb
mov
ja
jmp
mov
mov
ss
dec
ret
or
lods
sahf
scas
pop
mov
and
inc
xor
pop
enter
add
jp
mov
mov
add
mov
xor
stc
out
fcoms
ljmp
push
cld
lret
cmp
xchg
push
shll
addr16
pop
sub
lcall
jne
or
cmc
sbb
inc
add
dec
sbb
mov
adc
iret
push
ds
and
subb
sub
xor
orl
icebp
mov
decb
pop
add
out
push
loop
call
pop
fstps
loop
bound
rorl
pushl
or
dec
inc
gs
stos
adc
adc
add
and
les
adc
fmulp
push
loopne
js
mov
sub
and
test
lcall
mov
mov
sti
movsb
add
mov
repnz
filds
lods
xchg
call
aaa
je
enter
sub
jecxz
int
lods
pusha
and
fmul
das
divl
xchg
out
mov
push
xchg
jns
das
or
sub
jp
inc
cmp
push
mov
test
jnp
mov
push
inc
add
cmp
int
ret
clc
adc
rorl
pop
aas
adc
lahf
xchg
cltd
xchg
test
dec
loope
jg
shlb
jnp
dec
push
pop
lds
jmp
and
roll
lods
adc
ljmp
xor
sbb
pusha
mov
dec
cwtl
dec
push
imul
outsl
adc
sarl
ret
and
add
lret
fdivrs
inc
cs
pop
fisubrl
loopne
ljmp
pop
adc
push
in
dec
movlps
add
popf
ja
sub
mov
js
xor
mov
xor
ja
pop
pop
pop
sbb
jg
js
xor
cmp
ficomps
cmp
xchg
dec
push
jnp
and
or
ds
jmp
or
call
adc
mov
jecxz
lea
cmp
jmp
clc
test
sahf
orb
adc
flds
subb
ljmp
xchg
imul
and
xor
xor
or
mov
push
movsb
ja
movb
sub
add
fstpl
call
adc
loop
pop
fidivl
ret
sbb
or
add
sub
xchg
loope
rcrb
push
or
xchg
call
pop
fdivrl
cmpb
add
xor
repz
and
cmp
in
iret
in
mov
lds
add
mov
cmp
pop
add
loop
inc
jo
jns
call
sbb
sbb
ret
pop
xlat
and
push
rolb
dec
xchg
ret
call
call
or
mov
mov
push
call
mov
sub
add
stos
mov
adc
repz
jg
lahf
xchg
add
hlt
push
pushl
imul
or
popaw
shld
and
mov
add
ljmp
inc
dec
cld
adc
sarb
sub
pop
inc
cmpsb
cs
mov
adc
push
bound
icebp
cmp
pusha
push
inc
lret
add
dec
pop
insl
fsubrp
jle
push
sbbb
mov
stos
mov
jecxz
sub
dec
jg
nop
jmp
pop
rorl
pop
pop
cmc
lock
dec
xor
xor
scas
dec
adc
push
into
cmpsl
out
inc
pushf
push
jp
imul
iret
sbb
push
add
mov
fdivrs
popf
push
lea
jl
xchg
shll
mov
stos
push
xchg
test
jge
add
clc
jmp
jmp
das
cmp
ljmp
cmp
aaa
lahf
cmpsl
fwait
push
xchg
mov
cmp
fisubs
sub
fcompl
xchg
sbb
sub
and
les
int
xor
push
movsb
adc
popa
cld
inc
xchg
es
decl
adc
add
test
xchg
int3
and
in
inc
xor
jbe
mov
ds
pushl
jle
mov
bound
adc
das
push
lods
ljmp
jl
sbb
call
movsl
fistps
arpl
inc
rcr
dec
mov
add
fsqrt
ljmpw
xchg
and
sar
adc
in
or
subb
or
out
adc
pushl
inc
scas
in
test
cmpsb
push
cmp
mov
lcall
mov
or
add
fdivr
aas
insb
aas
or
test
push
push
xchg
fsubs
inc
or
rclb
les
and
jmp
cmp
jb
or
push
incl
cmpsb
ljmp
cmc
xchg
push
mov
dec
mov
mov
pop
jbe
push
adc
call
std
or
adc
testl
sbb
fwait
cmp
sbb
fdivl
pushl
test
fdivs
jb
jecxz
cmc
add
stos
xlat
pop
adc
dec
cmp
mov
xor
lret
call
data16
jo
gs
xlat
enter
cmpsb
push
lcall
mov
lds
xor
iret
push
jno
lahf
mov
or
mov
out
or
rclb
cltd
unpckhps
push
fmuls
cmp
mov
jl
loopne
movl
jecxz
stc
jle
mov
add
lcall
and
push
incl
xchg
adc
xor
daa
jns
cmp
dec
xor
pop
in
dec
aad
push
xchg
inc
aad
int
pushf
add
jmp
inc
xlat
mov
or
cmp
cmp
and
pop
lods
and
scas
stos
aas
add
mov
xor
cmpsb
inc
cmpsb
insb
pop
andl
into
adc
cmc
jmp
js
adc
clc
mov
fwait
sbb
jp
scas
push
scas
fsubs
cmp
sahf
xchg
jmp
std
sbb
pop
mov
dec
sbb
cmp
xchg
add
ret
ljmp
cld
xor
gs
sbb
data16
add
or
xchg
sti
movsl
sar
cmp
in
xor
mov
and
inc
inc
int3
mov
xor
and
call
push
daa
rcl
ljmp
sbb
mov
cwtl
jb,pt
push
loopne
sbb
dec
dec
stc
aaa
repz
ror
sbbb
dec
adc
jbe
sbb
sub
nop
call
or
imul
mov
shl
mov
cmp
push
mov
mov
lret
push
sub
inc
inc
push
call
sbb
data16
lcall
inc
aam
jg
add
test
mov
fsts
nop
andl
xor
popw
cli
lcall
stos
push
mov
mov
ja
or
outsl
sar
test
adc
pusha
or
dec
pop
stos
cmp
lcall
test
dec
or
xchg
inc
xor
std
or
pop
loopne
add
cli
test
insb
lret
xlat
lcall
push
jae
dec
bsr
inc
and
ljmp
sbb
fmul
cmp
jb
incl
andb
jecxz
cltd
lds
lea
lahf
push
outsl
xchg
jb
rcrb
push
data16
decl
jmp
sub
cwtl
clc
mov
mov
and
xchg
scas
ss
mov
std
or
push
push
inc
fdivrl
add
or
mov
mov
fwait
das
jns
inc
daa
xor
decl
or
stos
jo
sti
add
leave
aam
test
dec
cmp
outsb
lahf
and
popf
and
push
cmp
or
or
sbb
add
adc
jle
pop
jns
and
iret
jno
sar
pop
cmc
mov
fxch
adc
jl
mov
dec
or
rorb
jg
xchg
pop
inc
jge
ds
pusha
mov
add
xor
and
jecxz
adcl
pushf
repz
or
add
sub
xor
pop
xor
pop
inc
jo
adc
inc
or
loope
cld
mov
sahf
mov
fldl
mov
pop
xor
lcall
in
push
mov
iret
xor
bnd
add
sub
and
xchg
xor
xchg
incl
aad
jl
jno
jne
dec
shlb
dec
sbb
or
loope
int
lock
call
movsb
hlt
adc
jecxz
int3
std
hlt
jmp
jp
out
jne
inc
arpl
mov
stos
sbb
sbb
into
inc
add
stos
pushl
xchg
frstor
mov
cmp
cmp
sahf
ss
mov
adc
dec
and
inc
pop
mov
inc
and
and
push
sub
vpmacsdql
rep
lock
and
xor
sbb
daa
add
add
dec
and
mov
sbb
sub
pop
push
jge
test
inc
xchg
lcall
pusha
cmp
std
cwtl
mov
push
add
ret
jb
and
cmp
es
cli
dec
call
lcall
sub
rcrb
nop
mov
inc
dec
aam
ja
loopne
incl
movl
push
mov
out
test
lret
jmp
pushl
inc
cli
ds
ljmp
inc
clc
add
lea
dec
call
jl
mov
mov
ret
mov
outsl
inc
push
lock
adc
jo
stc
sub
mov
call
ja
add
add
mov
adc
pop
sbbb
or
cmp
push
pop
lock
pushl
mov
xchg
mov
pusha
cmpsl
addr16
clc
mov
decl
rcrl
dec
or
add
insl
mov
push
xchg
and
adc
sub
cld
pop
mov
push
out
jecxz
cmpl
pop
adc
dec
outsl
bound
fisubs
stc
xor
mov
movsl
or
cs
mov
xchg
loopne
jmp
roll
cmpsl
imul
cmp
clc
incl
push
jmp
adc
inc
adc
mov
icebp
inc
decl
icebp
push
and
xlat
jge
push
push
bound
mov
jmp
or
cmp
fsubs
es
push
fcoml
dec
push
jo
notl
sbb
inc
in
inc
mov
ds
nop
test
dec
adc
int
push
inc
call
das
cli
incl
sbb
mov
jo
mov
mov
ljmp
sbb
mov
leave
inc
popa
xor
adc
lcall
popw
loope
or
jbe
add
iret
cmovg
push
dec
xchg
cmp
incl
dec
adc
hlt
lds
mov
adc
imul
sub
lcall
dec
aad
xchg
test
call
stos
and
loope
clc
lods
movsl
ss
mov
fwait
adc
incl
add
cmp
adc
sbb
test
xor
bound
adc
and
push
and
sti
xchg
mov
push
cmp
mov
xchg
jne
test
lods
sbb
add
cli
fadds
bound
aas
inc
test
push
mov
inc
and
call
shll
inc
jge
ja
vcvttsd2si
lcall
push
testl
jno
pop
std
popf
int3
addl
loope
adc
faddp
mov
jg
xor
iret
dec
add
sub
xchg
pop
push
inc
aas
mov
popa
adc
rorb
mulb
decl
jecxz
and
sarl
sub
inc
call
xor
in
scas
clc
mov
and
mov
es
jmp
roll
fisubrl
imul
adc
cltd
ja
xor
lret
mov
cmc
and
or
sbb
push
mov
mov
out
gs
jae
jecxz
adc
clc
adc
pop
out
and
icebp
incl
adc
inc
inc
jns
add
repnz
mov
mov
inc
and
ss
xchg
gs
xchg
cs
lcall
add
std
inc
add
mov
icebp
dec
mov
push
push
inc
adc
fcomip
fsubrl
sbb
xor
lods
aas
scas
ret
sbb
into
xchg
push
mov
rorl
mov
xor
mov
cmc
pop
call
ljmp
and
jge
mov
pushl
adc
xchg
scas
sub
sbb
dec
jp
sbb
aas
gs
jecxz
mov
subl
pop
int3
sub
stos
push
outsb
popf
sub
push
or
push
lret
add
orb
in
outsb
loop
decl
sbb
outsl
mov
in
lds
cmp
fs
push
inc
mov
xlat
pop
adc
loope
mov
fcomps
mov
adc
push
and
jo
xor
pop
js
inc
call
pop
mov
in
add
sti
add
js
dec
rolb
push
int
cmp
lcall
aam
and
or
or
jl
push
inc
push
call
xchg
in
jp
add
clc
xchg
mull
leave
adc
shlb
sbb
inc
cmp
pop
push
aad
xor
jp
popf
or
adc
push
xchg
sbb
jl
pushl
xor
and
and
mov
std
xor
pusha
jle
ljmp
sti
arpl
and
decb
loop
inc
push
mov
out
mov
in
stos
inc
xor
xchg
cmc
jo
rcrl
xchg
insl
test
pop
cmp
sub
mov
lds
incl
jl
sbb
sbb
into
jno
imul
add
jno
cmpb
sbbb
out
addl
lret
lods
cs
xor
fldenv
push
mov
call
mov
mov
clc
in
mov
out
adc
orb
pop
sysret
lahf
imul
cs
xorl
rcr
mov
push
scas
sbb
jno
std
fsubs
cmp
pushf
aam
mov
xchg
pop
decl
scas
cmp
sbb
xchg
push
jnp
xor
popa
mov
xor
fcomip
call
data16
jno
mov
sub
or
push
clc
icebp
out
dec
mov
inc
aam
gs
xor
scas
pop
jne
and
dec
push
fistps
xchg
clc
pop
sbb
movnti
pushl
flds
mov
sbb
movsl
xchg
inc
add
fsubl
sbb
gs
decl
sbb
enter
and
xor
sub
and
and
jbe
nop
jecxz
jl
xchg
and
xchg
cmpsb
aad
push
and
xor
cwtl
push
or
in
pop
pop
jb
push
add
sbb
decl
push
inc
cmp
stos
cmc
aad
data16
xor
cmp
call
loopne
scas
adc
movsb
test
shl
cmp
push
cmp
push
shll
std
pushl
push
mov
pandn
fiadds
popw
sahf
jo
xor
push
and
call
and
pop
sbb
dec
jge
cwtl
aam
jb
test
jle
clc
sti
xchg
test
hlt
mov
mov
orl
add
pop
mov
lcall
cmp
pop
in
lock
jmp
inc
mov
pusha
fwait
pop
popf
dec
pop
int3
or
adc
aad
lcall
popa
sbb
add
lds
cmpsl
jl
mov
bound
inc
imul
xlat
jg
mov
jns
subl
lds
fs
add
mov
ljmp
jnp
shl
and
pop
push
cli
inc
xchg
sub
mov
call
loopne
jns
test
dec
lahf
and
sub
and
ljmp
mov
xor
jg
xchg
pop
add
fisubrl
test
add
mov
and
push
outsl
aas
cmp
cvtdq2ps
mulb
cmp
push
addl
push
into
in
push
mov
pop
ljmp
cmp
dec
and
xor
aaa
push
xor
pop
dec
out
pop
fs
or
xchg
xchg
add
adc
push
inc
jg
inc
inc
or
mov
dec
xchg
cwtl
lock
push
xchg
jle
out
mov
or
outsb
movsb
decl
xor
in
push
cmp
cmpb
pop
push
daa
and
lret
idiv
decl
mov
jmp
xor
sbb
es
add
repnz
std
jmp
or
jo
or
or
stc
push
cmp
sub
mov
incl
and
loope
or
xor
mov
imul
mov
stos
test
cmc
mov
or
dec
sub
pop
cmp
sbb
aad
cld
lcall
fs
push
in
or
xchg
leave
ja
out
idiv
xlat
fstps
mov
mull
inc
sub
adc
icebp
and
or
mov
call
xor
mov
adcb
scas
test
add
and
inc
add
inc
sbb
aam
incl
xlat
addb
imul
lret
pop
cmp
mov
cli
push
fidivl
sarl
out
mov
gs
incl
add
sub
mov
pop
int3
lds
pop
dec
dec
pop
mov
incl
adcb
dec
es
flds
inc
adcl
or
dec
and
push
adc
outsl
mov
and
push
mov
cmp
inc
cwtl
and
in
shlb
incl
push
into
test
sbb
bound
xorl
adc
mov
jb
mov
cmp
jnp
incl
pusha
mov
mov
dec
add
adc
lcall
xchg
xchg
sub
sub
sbb
dec
std
and
mov
xor
or
out
mov
pop
mov
jns
xor
out
les
call
out
push
jp
es
cli
mov
in
mov
pop
sub
jmp
inc
mov
pushl
push
adc
movsb
js
lcall
outsl
jle
js
xchg
test
dec
loopne
pop
fdivs
or
inc
jl
inc
push
ss
test
fmulp
xchg
jle
pushf
dec
iret
aam
add
icebp
popf
lds
incl
xor
test
aam
mov
in
in
xlat
inc
cmp
sbb
inc
cld
xchg
clc
inc
int3
adc
test
sub
inc
mov
pop
pusha
adc
inc
pop
xchg
xchg
call
loopne
je
sub
inc
sete
adc
jle
test
ljmp
pushl
fistpll
inc
push
mov
stc
inc
adc
jg
dec
sbb
ds
pop
adc
mov
jbe
mov
sub
lcall
insl
leave
shll
movsb
jmp
mov
sub
fdivr
mov
cmp
or
mov
pushl
jae
inc
mov
cmp
mov
pop
inc
insb
imul
pusha
and
mov
pop
addl
repz
push
lret
push
jbe
hlt
sbb
rcrl
clc
mov
sub
dec
push
push
push
dec
sbb
cmp
orl
popa
push
push
adc
and
or
pop
ljmp
dec
nop
sbb
int3
xchg
jge
mov
iret
in
mov
mov
insb
mov
pop
or
mulb
lock
popa
jo
cmpb
adc
out
leave
pop
call
mov
into
loope
adc
ljmp
add
pop
cmpsl
imul
stc
gs
add
mov
cmp
aaa
mov
popa
fimuls
inc
pop
cmc
loopne
cmpsb
and
cltd
xor
and
jg
insb
cmc
mov
mov
incl
sub
lcall
pop
pop
or
sbb
push
jmp
pusha
and
mov
inc
jp
int3
inc
call
data16
sub
cld
test
cld
lds
mov
loop
inc
sub
push
cmp
cwtl
rol
andl
pusha
je
sub
stos
mov
push
xchg
xor
sbb
mov
xchg
scas
jmp
les
sti
cmpsl
ljmp
out
out
jp
sub
xchg
mov
imul
out
in
adc
jmp
sub
pop
int
adc
repz
sbb
dec
fldcw
ljmp
adc
dec
in
out
in
mov
bound
push
mov
in
mov
cld
inc
mov
sbb
xchg
mov
loop
jmp
and
lock
adc
xchg
cli
push
sbb
out
fsubrl
in
lcall
mov
or
push
xor
cmpsb
rorl
adc
dec
xor
jle
pop
pop
inc
int
dec
adc
sub
scas
loope
and
mov
out
xor
add
mov
ret
scas
or
add
data16
jmp
mov
add
push
xor
mov
mov
test
addb
shlb
test
push
inc
enter
insb
sub
xchg
es
jmp
cmp
cmpsl
or
add
or
inc
xor
and
jmp
ljmp
cmp
add
or
xlat
and
out
movsb
xchg
sarl
test
sar
jmp
inc
popa
push
and
std
js
sbb
bound
and
ret
rcl
or
call
in
les
dec
pop
push
cli
inc
cmp
pop
mov
inc
ret
rcl
jne
lock
inc
add
dec
mov
cs
fmuls
sbb
adc
mov
cmpl
ja
sub
sub
push
jmp
fldcw
incl
sub
push
xor
jmp
lret
sahf
sbb
cmp
jb
call
pop
mov
mov
push
ja
fst
movl
ficoms
pop
jae
pop
test
seto
xchg
add
sbb
push
push
aaa
mov
bound
dec
insb
gs
xchg
add
push
movsl
mov
cmp
mov
sbb
cwtl
xchg
add
sbb
rorb
push
test
jecxz
adc
sub
xor
and
xchg
incl
xlat
sbb
je
cmp
adc
lcall
out
pop
cmp
aas
nop
mov
pushl
mov
inc
push
mov
xchg
and
or
pop
mov
or
ja
cltd
push
mov
inc
mov
pop
dec
sub
pushf
inc
push
std
mov
dec
icebp
int
dec
in
and
cmc
xchg
adc
jecxz
jne
mov
lock
adc
aas
daa
in
xor
xchg
dec
inc
pop
inc
add
loope
enter
mov
cmp
pop
jo
outsb
jnp
mov
aas
dec
subb
out
and
out
incl
shrb
mov
loope
pop
pusha
adc
leave
xor
jno
ljmp
add
xor
push
lret
push
and
es
xchg
jge
popf
pop
pop
xor
incl
sub
or
mov
jmp
adc
std
xchg
jp
pop
sar
add
mov
ljmp
adc
adc
adc
mov
xor
std
scas
inc
mov
icebp
dec
stc
in
adc
or
mov
stos
ljmp
dec
sbb
nop
mov
gs
imul
pop
fistps
or
xchg
fcomps
add
mov
mov
xchg
into
or
add
dec
lahf
mov
or
fbstp
lcall
cmpsl
mov
test
inc
les
mov
incl
mov
xchg
insb
adc
dec
lock
sub
or
scas
gs
jb
lahf
xchg
lret
jmp
addr16
inc
stc
lds
hlt
test
or
call
add
aad
cmp
lods
mov
dec
dec
out
je
pop
push
mov
lods
pop
std
xchg
lcall
mov
sbb
sub
and
xchg
std
lahf
mov
outsb
inc
loop
pop
sub
negl
stos
andl
test
inc
sahf
sar
mov
dec
ss
sub
or
adc
sbb
das
es
adc
jmp
or
sahf
mov
stc
push
adc
cmpsb
lret
cmp
mov
in
scas
adc
mov
ds
addr16
push
aad
int3
or
aad
incl
addb
jg
xlat
cmp
test
mov
add
cmp
lds
pop
hlt
mov
dec
mov
int
jb
jge
stos
cld
test
xchg
add
xor
imul
cmp
shl
push
lret
fstl
add
lret
cmp
gs
xchg
ss
xor
fisubrl
decl
and
jle
xlat
bound
ret
jl
jae
mov
ret
lea
mov
pushl
lods
add
and
jns
lret
nop
fsubs
mov
jle
movsb
dec
sub
mov
inc
or
outsl
clc
jle
jge
or
ja
je
out
rcl
lcall
sub
inc
popa
movsb
fcomp
out
inc
dec
aaa
sub
mov
lea
outsb
cmp
inc
gs
dec
scas
and
decl
or
add
pop
test
and
arpl
mov
xlat
lds
inc
mov
xor
orl
sbb
loop
adc
xor
adc
sbb
jg
adc
mov
cli
inc
leave
cltd
sub
arpl
mov
xor
mov
xlat
sbb
cmp
and
sbb
stc
pop
daa
jg
xchg
add
push
sub
mov
lcall
decb
and
rcr
fbstp
push
inc
dec
out
sub
mov
in
iret
push
or
out
loop
adc
mulb
or
clc
adc
sub
outsl
cli
jg
aaa
std
and
dec
pop
jp
mov
cli
dec
adc
shll
scas
cmp
sbbb
pop
jne
frstor
iret
fidivrl
fldcw
pop
and
cmp
aad
mov
bound
dec
mov
lahf
cmp
jle
mov
iret
push
cmc
push
adc
jbe
ljmp
pop
mov
xor
pop
push
call
dec
loopne
fisubrl
lahf
pop
pop
sbb
je
shll
movsl
out
sbb
and
pop
std
cmp
jmp
fs
fbld
jg
ljmp
mov
pop
std
imul
sbbb
leave
and
mov
lcall
incl
jne
xlat
out
mov
bound
rorl
mov
adc
ds
incl
sbbl
out
add
arpl
ret
sub
call
push
imul
daa
js
lcall
inc
jmp
aad
dec
pop
repz
adc
dec
insb
into
xchg
and
cmp
lcall
in
xchg
jno
outsl
push
inc
push
add
out
jp
cwtl
stc
add
sbb
add
call
lods
xchg
xorb
sbb
sbb
sub
and
clc
je
stc
cld
aam
nop
sub
call
pop
insl
ljmp
adc
mov
cmp
inc
xor
sub
shl
add
mov
mov
imul
or
jno
hlt
xchg
adc
cmp
jl
aas
ficoms
cli
pushl
imul
sbb
xor
lds
test
sahf
lret
adc
mov
and
jg
mov
sbb
test
mov
sbb
sbb
aas
or
pop
dec
xor
mov
int3
jmp
xlat
push
add
cmpb
add
cs
xchg
pop
enter
sub
cwtl
fs
dec
jae
dec
cmp
mov
mov
fildll
leave
mov
fbstp
pop
inc
or
xor
and
sar
jmp
test
lea
aad
out
xchg
xor
or
lcall
call
xor
jns
xchg
push
fdivrp
xchg
sbb
fildll
test
mov
decl
int
cmpsl
cmpsb
fs
xor
insb
lcall
clc
call
shrl
test
fsubl
jnp
stos
mov
and
jg
hlt
movsb
lds
xchg
or
hlt
add
mov
movsl
call
mov
fcomp
ret
sub
pop
rorl
les
es
add
cli
pop
mov
add
mov
aad
rcl
mov
ljmp
pop
inc
sub
scas
xchg
jmp
repnz
cmpl
fdivr
incl
cmc
add
das
in
cld
xor
xchg
enter
push
jp
mov
push
and
mov
jo
or
pushl
fidivrs
out
insl
stos
mov
jnp
out
pop
add
sti
inc
sarl
lcall
sub
mov
inc
sbb
add
cmpsb
and
pushf
pause
test
divw
incl
dec
repnz
and
stos
inc
icebp
dec
shll
in
cmpsb
sahf
xor
mov
incl
in
pop
stc
push
cs
add
lea
mov
fisttps
rolb
out
insb
xor
das
sar
sahf
and
mov
pusha
add
mov
mov
jb
or
jmp
je
push
lret
bound
xor
sbb
adc
addr16
lcall
into
cwtl
cmp
lcall
xor
adc
cmp
mov
push
pop
cmp
dec
mov
inc
dec
cmpsl
and
into
xchg
mov
and
incl
cld
test
lea
inc
jp
inc
lds
call
mov
les
mov
in
ds
add
inc
add
adc
xchg
mov
loope
sbb
call
enter
lds
xlat
jmp
mov
cmpsl
dec
pop
cmp
pushl
adc
jnp
rcrb
xchg
movsb
mov
pusha
mov
pop
popa
int3
ja
fucomip
rcrl
adc
enter
shrl
js
cli
clc
xor
xor
push
data16
lcall
ljmp
les
mov
push
inc
adc
bound
adc
lahf
cmp
lcall
nop
ja
addl
orl
setns
out
cmpsl
inc
jb
imul
je
pushl
jae
adcb
and
jle
les
incl
and
fstl
neg
rcrl
cmc
test
pop
inc
in
cmp
and
inc
loopne
lcall
loope
jnp
adc
inc
inc
dec
dec
xor
adc
mov
fildll
pavgb
mov
inc
es
cmc
mov
and
shll
nop
push
incl
fdivs
push
out
popf
fwait
roll
cmp
xor
push
insl
add
add
stos
push
incl
sar
test
and
scas
clc
mov
out
and
jmp
les
inc
loope
add
scas
int3
outsb
cmp
lahf
push
and
ljmp
jnp
pushl
xor
imul
adc
cwtl
xor
pusha
fs
and
xor
or
cmc
insb
mov
call
cmp
sub
mov
stos
sbb
xor
jbe
enter
loopne
sar
incl
cmp
push
mov
fdivr
mov
push
insb
nop
xor
mov
jg
ljmp
mov
adc
xchg
ret
add
xor
movsb
imull
dec
add
jg
xchg
dec
ss
insb
mov
lahf
in
imul
loopne
movsl
or
dec
mov
decl
jb
xor
aas
add
mov
lcall
xchg
hlt
xchg
fdivr
call
movl
pop
shll
xor
pop
cmpsl
aam
dec
pop
incl
xor
sub
add
add
mov
nop
add
cmpsl
push
shr
cltd
push
and
jmp
xchg
dec
cmp
ror
push
inc
push
sbbl
add
mov
or
fstpt
cmp
cmp
decl
jl
test
adcb
push
add
cwtl
sahf
fisubs
add
and
push
lcall
jno
iret
lds
push
daa
das
clc
jmp
inc
push
and
gs
lds
pop
mov
pop
call
inc
xchg
add
inc
movsb
mov
dec
adc
xchg
mov
dec
mov
in
inc
aad
or
pushl
in
pop
decl
test
les
cs
cld
test
xor
rolb
incl
or
cmp
mov
mov
aas
lods
clc
push
fisttpl
fwait
sbb
ds
ret
call
sbbl
xchg
rcrb
out
adc
rorl
pop
out
clc
jg
pop
inc
test
sbb
push
cmc
xor
in
dec
jl
incl
test
inc
push
subb
sbb
fcoml
adc
outsl
cmpl
add
jmp
pop
xchg
cmp
inc
fidivrl
jmp
xor
les
sub
or
dec
scas
pop
pop
lea
push
in
mov
xorb
lea
inc
sub
cli
leave
mov
aaa
push
incl
xchg
orl
xchg
adc
or
xchg
ret
call
pop
or
mov
pop
jmp
adc
es
sbb
xchg
pushl
int3
mov
adc
inc
lock
add
lock
rolb
dec
and
popf
jg
mov
jge
xchg
push
and
inc
lret
add
jmp
test
je
pop
jb
lock
push
lea
imul
imul
jmp
pop
cwtl
push
mov
je
push
je
pop
xchg
fdivr
cmp
inc
push
and
inc
inc
pop
add
push
sbb
sahf
inc
lock
sub
cmp
leave
rcll
out
test
inc
sub
mov
pusha
and
out
test
pushl
cld
xchg
fisubrs
loopne
ljmp
sbb
aam
test
imul
call
out
fs
or
test
test
mov
sub
cld
nop
stc
andl
jmp
icebp
push
into
pusha
jb
repz
add
jecxz
syscall
dec
pop
pop
test
loope
out
fnstsw
or
incl
dec
pop
push
push
pusha
adc
push
xchg
and
imul
and
ret
movsb
clc
hlt
sub
jbe
inc
and
out
repnz
hlt
push
jns
jl
je
and
and
iret
ud2
mov
nop
in
xchg
push
out
xor
call
push
mov
cmp
mov
je
mov
ret
pop
out
cmc
mov
lcall
and
sub
push
cmp
dec
es
dec
xorl
inc
lret
mov
jg
loope
rcrb
addb
inc
call
idiv
int3
jg
fidivl
xchg
push
stc
sub
push
ss
adc
shl
test
addl
mov
jmp
enter
cmc
adc
shll
xchg
addl
pusha
mov
out
mov
sbb
cmp
fisttps
mov
bound
sub
arpl
jmp
xchg
cmpsb
lea
pop
push
adc
sub
xchg
out
ret
and
push
mov
clc
jb
jge
mov
jno
push
loopne
faddp
xor
cmp
test
mov
push
jo
or
add
xor
ds
out
inc
or
subb
add
pop
adc
inc
fidivrs
leave
inc
and
sbb
sub
test
fidivs
push
pop
pushf
shrl
loope
mov
xorb
mov
mov
idiv
or
add
sbb
xchg
daa
push
and
push
test
incl
push
jns
jmp
fsubs
call
lret
xchg
les
sbb
lcall
xor
popa
les
pop
lock
sub
sbb
dec
repz
scas
test
inc
ljmp
mov
bound
adc
adc
adc
jb
cs
outsl
clc
jmp
mov
sbb
lods
cmp
and
xchg
ja
push
dec
mov
jg
lcall
test
inc
cld
add
jnp
mov
xchg
and
push
fldenv
pushl
add
pop
cmp
insl
scas
or
pop
add
or
hlt
outsl
cmp
mov
cmp
ljmp
test
push
loop
pop
leave
xor
fnstenv
call
out
adc
or
sbb
cmp
mov
out
mov
outsb
cmp
call
fwait
dec
ret
into
xchg
or
dec
push
jmp
jle
nop
loopne
movsb
and
cmp
fmulp
shrb
loope
movsb
inc
mov
insl
fnstenv
insb
pop
lret
cmpsb
or
lcall
idiv
test
ja
sub
lea
adc
shld
inc
lea
js
call
inc
xchg
jmp
push
push
in
xor
add
test
popa
aad
dec
adcb
sub
lcall
mov
sub
sbb
mov
clc
sub
cmpsb
in
dec
push
cmp
jl
and
mov
into
jecxz
test
jl
pop
loopne
cmp
inc
in
adc
repnz
inc
mov
ret
or
cmp
inc
subl
ror
add
sub
mov
in
or
and
lahf
cs
dec
fildll
add
pop
and
xor
dec
ljmp
ror
in
pushf
pushf
sbbb
add
popa
dec
lahf
stc
js
inc
rolb
addl
jle
icebp
mov
or
call
decl
jecxz
mov
addr16
and
test
ljmp
push
xor
incl
cld
daa
dec
push
std
int3
adc
pop
pop
push
orl
sbb
mov
push
adc
dec
incl
cmp
nop
mov
mov
or
inc
and
adc
in
pushl
lcall
sub
clc
push
mov
ds
setg
sbb
push
mov
mov
nop
mov
xchg
adc
pushf
pop
lahf
loope
jp
jl
movsl
incl
jae
or
sub
es
adc
adc
adc
std
xchg
pop
or
fs
pushl
call
push
mov
ja
push
sbb
push
cmp
mov
decl
pushl
inc
rorl
outsb
add
cmp
aam
and
enter
add
sbb
cmp
push
sub
pop
sub
test
je
or
dec
sbb
pushf
adc
test
sub
pushl
jne
dec
aaa
inc
mov
out
ljmp
cli
mov
inc
pop
xor
xor
ss
lret
mov
push
xor
mov
js
push
adc
test
push
xchg
dec
adc
pushl
aam
add
shll
aaa
rolb
inc
or
in
nop
adc
aas
shll
ljmp
add
mov
or
xor
popa
cmc
push
mov
cld
scas
lret
xchg
inc
cmp
jmp
fldcw
adc
test
andl
xor
int3
ja
leave
fisttps
ljmp
mov
insb
lcall
or
into
stos
pop
lds
mov
call
hlt
call
mov
sbb
out
test
je
int3
cmpl
std
incl
sti
dec
push
mov
add
pop
dec
adc
pushl
sub
stc
dec
cmc
lret
addl
ja
pop
fwait
lcall
sbb
inc
dec
std
jl
into
cltd
inc
fadds
dec
mov
fwait
xchg
mov
mov
fsts
push
and
aas
clc
jmp
push
and
loope
xor
incl
enter
fcoms
pop
lahf
lea
pop
outsb
mov
jmp
add
int3
or
fs
repz
inc
mov
lods
sbb
loop
dec
jo
cmp
cmp
and
mov
adc
xor
mov
bound
test
icebp
andb
inc
notb
mov
inc
insb
test
mov
fwait
ljmp
sbb
xchg
sbb
cld
rcrb
inc
nop
pop
rcl
pop
sbb
adc
incl
push
xor
cmp
jle
orb
cwtl
inc
pusha
ljmp
fimuls
sbb
xor
popa
dec
das
xchg
jecxz
leave
sub
scas
cli
call
repnz
inc
bound
sub
add
sbb
decl
jecxz
push
call
inc
xchg
or
or
cltd
sahf
fistpl
in
dec
test
loopne
xchg
sar
cmp
repnz
lar
dec
cli
xchg
xor
ret
test
mov
dec
mov
add
or
ret
push
or
clc
jmp
fcoms
mov
in
dec
rcl
sub
cmpsb
inc
mov
daa
std
in
add
and
add
adc
jg
inc
and
mov
subb
add
mov
and
test
mov
mov
mov
xor
mov
scas
pop
or
rclb
nop
push
jecxz
xlat
clc
in
enter
in
mov
adc
jne
and
cs
pushl
xor
test
or
add
jb
outsb
xor
xchg
loopne
loope
in
and
dec
gs
in
cmpsl
or
jmp
jno
out
int3
imul
xorb
or
ja
in
xchg
add
sub
daa
push
nop
sbb
pop
scas
repnz
jo
mov
test
xor
lds
ljmp
je
bound
or
sub
mov
adc
xor
jge
add
cmpl
clc
int3
jno
loopne
inc
cmc
xor
repnz
addl
sti
cs
jg
stos
push
sub
mov
adc
cmpl
adc
scas
sbb
call
xlat
js
xor
xchg
mov
inc
out
dec
or
lcall
push
pushw
jmp
addb
popa
loope
mov
adc
leave
sahf
mov
and
mov
mov
lods
sbb
dec
fsubr
adc
call
cmp
test
cmp
sbb
dec
and
sub
fstps
call
pop
mov
movsl
call
and
mov
call
sbb
pusha
loop
ja
jmp
stos
mov
mov
orb
xor
and
in
dec
mov
pop
sub
mov
mov
sub
or
inc
cwtl
pop
sub
scas
push
mov
enter
call
ret
dec
dec
mov
jmp
inc
dec
pop
xchg
cld
or
insl
xchg
dec
jns
inc
inc
mov
jne
jg
dec
pop
mov
push
xchg
xchg
movsb
xchg
jno
leave
add
push
push
add
imul
loope
pop
jmp
inc
sbb
sub
and
mov
shl
clc
mov
mov
add
cmp
push
test
nop
add
push
std
pushl
adc
mov
mov
shlb
add
xchg
pop
mov
jmp
scas
push
movb
xchg
mov
mov
in
push
xchg
std
jmp
xchg
adc
sbb
pop
xchg
test
xchg
hlt
incl
xchg
icebp
xor
cmp
pop
push
test
and
sub
push
incl
and
push
and
mov
shlb
out
mov
fsubrl
jg
add
inc
jns
mov
fdiv
int
push
fcmovnu
je
insb
div
push
push
decl
faddl
and
js
aad
add
xor
call
push
fistps
std
roll
mov
xchg
loopne
outsb
sub
idivl
inc
and
or
inc
cltd
out
mov
jmp
std
out
scas
jmp
or
xchg
sub
repnz
push
add
pushl
iret
sbb
add
jne
xor
fucomip
dec
jp
inc
das
xchg
bound
dec
in
jl
xchg
xchg
mov
cs
or
mov
inc
shrb
loop
movsl
and
pusha
lds
popa
sbb
cltd
test
test
lock
sub
int3
add
xor
in
adc
mov
mov
das
and
sbb
cwtl
repz
sub
pop
or
lcall
mov
push
lea
test
cmpsl
cmp
sti
mov
decl
lahf
and
je
cmp
clc
fistps
test
push
pop
adc
loopne
mov
decl
decl
cli
pop
pop
arpl
xchg
xor
xor
jl
mov
inc
dec
jnp
mov
jle
call
in
mov
push
loop
add
int
data16
lods
mov
or
and
jno
mov
jecxz
test
adc
adc
sbb
shll
jo
pop
jmp
xor
xor
mov
push
mov
imul
mov
jge
cli
jmp
imul
xchg
sahf
sbb
addb
int
push
leave
xor
pop
test
xchg
sub
outsl
jbe
dec
jmp
add
in
mov
inc
fcomip
lcall
sub
ja
loope
les
fidivl
sub
call
inc
rcrb
push
icebp
cwtl
xor
cld
and
into
fdivrl
rorb
cwtl
test
enter
sub
cmp
or
shlb
add
ret
gs
lods
cmp
push
add
hlt
lcall
dec
pop
pop
test
sbb
mov
negb
ret
stos
out
mov
mov
mov
xor
sub
sbb
incb
cwtl
popf
cmp
clc
or
daa
push
or
lcall
lcall
pop
cmp
add
test
dec
andb
sub
pop
push
push
pop
dec
adc
aaa
std
decl
sbb
xorl
add
adc
mov
pop
in
inc
out
aam
lahf
es
mov
and
or
decl
adc
cmp
sub
js
leave
sbb
dec
add
add
mov
mov
xchg
push
cmp
mov
mov
imul
sbb
adc
enter
push
adc
push
mov
push
ficoml
ja
aam
pop
cmc
or
cs
push
sub
mov
mov
lcall
mov
je
inc
scas
ret
jnp
cmc
mov
int
pop
testl
ljmp
inc
xchg
popa
adc
dec
jo
inc
cmp
mov
sti
test
add
mov
adcb
and
push
cltd
push
cmova
cltd
sbb
cmp
ficomps
mov
lds
fs
or
loope
jmp
inc
mov
ret
adc
cmpsb
cmc
sub
pop
es
add
mov
pop
cmc
lcall
movsb
jecxz
sub
mov
out
test
and
push
lock
decl
sbb
roll
pop
pop
sbb
movb
subb
cmp
cmp
fwait
add
scas
add
pop
insl
jl
inc
roll
lea
mov
aam
push
lods
xor
out
into
pusha
orb
mov
cltd
pusha
and
jmp
scas
xchg
pusha
pop
je
roll
enter
or
test
jnp
dec
and
jg
arpl
lods
and
dec
push
push
cwtl
cmp
and
movl
lcall
pushf
mov
test
mov
mov
fsubs
sub
jle
test
mov
aas
nop
jmp
and
push
xor
icebp
cmp
push
hlt
xor
jmp
in
pop
mov
sbb
iret
and
dec
mov
xchg
stc
push
add
leave
jmp
loopne
mov
adc
rcrb
jne
cmp
dec
sbb
lcall
aad
fisttpl
mov
js
frstor
jne
int
inc
xor
lcall
adc
jmp
js
push
jge
push
inc
ret
push
adc
hlt
js
call
mov
inc
or
fisttps
ret
cltd
sub
lret
pop
pop
arpl
icebp
mov
sub
pop
icebp
incl
subl
lods
rclb
sub
testl
pop
cld
mov
adc
out
jecxz
mov
pop
and
sub
decl
dec
push
inc
or
inc
inc
shll
sbb
loopne
lods
pop
in
mov
adc
mov
call
inc
daa
mov
in
xchg
pushf
sub
in
cmp
push
or
dec
mov
inc
cli
inc
or
pushf
sbb
mov
add
subb
jmp
push
pusha
mov
cmp
aaa
sbb
mov
outsb
xchg
pusha
idiv
jmp
adc
pop
test
mov
dec
dec
jecxz
cmp
adc
lcall
pop
xor
pushf
add
push
scas
push
inc
xchg
arpl
sbb
mov
mov
mov
repz
pop
pushf
stc
cmpb
sub
outsl
xchg
enter
and
lcall
add
enter
sbb
jge
addr16
test
jmp
aas
push
mov
shrb
rcll
aad
mov
and
dec
mov
jp
testb
call
out
dec
int
scas
sub
inc
and
pop
push
rclb
cltd
repz
aas
ds
cli
popf
hlt
jle
imul
lea
jg
popa
dec
sub
dec
adcb
and
cld
aas
aas
fstpl
call
and
dec
add
js
adc
test
enter
movsl
jp
push
lock
cmp
mov
pusha
decl
push
sub
jo
pusha
js
add
int3
inc
fs
pop
jecxz
loope
or
jge
push
lcall
mov
xor
mov
out
imul
mov
sar
cmpsl
pusha
nop
andl
fcomp
mov
add
pop
cmpb
inc
loopne
dec
mov
ss
subl
shrb
xchg
pop
incl
ss
push
cmp
sub
and
lret
sub
negl
mull
lock
xchg
decl
cmp
aam
sub
pop
movsb
inc
xor
mov
add
lock
out
pushf
sbb
ss
cmp
shlb
mov
idiv
inc
mov
fucomi
addb
dec
jae
adc
sbb
pop
sbb
gs
inc
das
mov
and
and
shll
cmp
adc
and
incl
and
cltd
or
ds
mov
stos
jns
jle
ret
mov
or
lcall
les
aam
jge
mov
jbe
testl
imul
cmc
sub
inc
push
fsubrs
inc
fldcw
inc
inc
gs
pop
mov
xchg
test
nop
cmpsl
sti
inc
and
inc
mov
and
push
dec
mov
je
fcomp
bound
repz
ljmp
clc
adcb
popa
test
adc
fdivr
and
push
mov
mov
jmp
clc
xor
test
pop
sub
or
push
in
cmp
sub
inc
js
ja
push
mov
call
aas
or
insb
add
mov
iret
orb
jle
and
pusha
cmp
inc
and
sbbb
cmp
jmp
mov
pop
mov
popa
or
or
mov
jno
jns
lret
push
mov
test
xrelease
add
fimuls
push
fld
jle
pushf
and
hlt
ljmp
ljmp
addr16
hlt
add
adc
mov
lcall
add
fs
into
sub
loope
push
sbbb
ljmp
data16
jg
pushl
shlb
sahf
inc
sbb
xor
loop
lock
inc
test
inc
pop
jmp
jp
inc
pusha
test
jge
adcb
sub
jg
icebp
loope
mov
xor
nop
dec
jle
xchg
adc
lcall
jmp
and
xchg
pop
pop
jmp
jbe
or
jecxz
or
andb
lcall
sarb
js
push
inc
ds
mov
sbb
test
std
push
adc
inc
daa
into
sub
inc
out
cwtl
mov
and
adc
and
scas
pop
fwait
lret
scas
cs
gs
sti
ljmp
or
xchg
sub
shrb
xchg
call
ljmp
mov
icebp
dec
mov
jnp
lock
pop
ret
ss
cld
or
pop
mov
les
call
adc
insb
arpl
ljmp
push
stos
or
in
sbb
icebp
cltd
loopne
jmp
xor
push
dec
leave
cmp
add
in
aaa
xchg
lds
outsb
jmp
loop
call
clc
and
sub
xorb
inc
pop
add
mov
or
mov
push
jl
fildll
pop
mov
lret
fstps
jge
cld
mov
out
or
cmp
sti
sbb
test
dec
jp
shll
cmp
cmp
pusha
std
fimuls
jp
adc
mov
mov
add
test
inc
mov
les
push
ljmp
mov
icebp
jl
inc
adc
insl
inc
hlt
ljmp
popf
cli
mov
jo
lret
adcb
add
out
mov
pop
ret
add
jmp
lock
ret
add
aad
incb
aaa
andb
call
jl
mov
pop
leave
or
pushl
or
lret
das
jo
cmpsb
push
push
sbbb
jbe
rcll
or
sub
jle
push
or
nop
inc
push
push
adc
jl
pop
or
add
or
and
xor
xchg
jmp
or
and
gs
inc
in
push
jg
ljmp
push
adc
lea
or
in
test
pushl
mov
mov
xor
in
jmp
sarw
sarb
lcall
dec
pop
ja
aaa
add
dec
push
jbe
pop
cmpb
cmp
repnz
xchg
inc
cmp
lcall
popa
and
pop
mov
ret
xchg
aas
popa
inc
mov
subb
xchg
inc
pop
xor
cwtl
dec
cld
pop
mov
nop
popa
lods
cltd
pop
inc
ficomps
call
pusha
xor
es
push
cltd
mov
or
xchg
push
cld
xor
mov
in
bound
les
jmp
pop
xchg
nop
xchg
lods
sub
addl
lcall
mov
xor
sub
imul
pusha
dec
fstpt
xor
jmp
in
jp
cwtl
and
daa
je
mov
mul
mov
adc
iret
fsubl
bnd
push
call
sub
ja
adc
dec
mov
xchg
push
inc
push
ss
xor
dec
pop
or
call
add
lret
jl
outsb
jge
lock
stos
or
pop
incl
xor
jbe
dec
mov
xor
js
xchg
mov
call
icebp
inc
fisubrs
mov
sub
loope
mov
sub
jge
mov
incl
subl
mov
sbb
in
push
pop
push
mov
cwtl
or
xor
sbb
in
jmp
jmp
dec
bound
sub
sub
adc
paddd
mov
pop
cmpb
int
repz
shlb
fs
repz
outsl
decl
adc
dec
add
loop
cltd
sahf
sbb
add
xchg
and
in
hlt
mov
mov
pop
stc
andb
rorl
call
fs
and
andb
jae
jbe
out
inc
cmp
mov
mov
cmp
cmpsb
push
in
xchg
pop
scas
or
fwait
cmp
aad
ret
bound
jg
nop
jne
loopne
or
mov
adc
dec
dec
bound
test
test
sub
cmp
outsl
jg
mov
sbb
and
add
ret
lcall
mov
xchg
lea
popf
or
test
fidivrs
mov
popa
out
mov
push
mov
incl
cmp
add
dec
cmp
rcrb
xchg
je
in
xor
and
push
jae
inc
imul
incl
adc
adc
fcoms
mov
jp
mov
mov
mov
sub
ret
xchg
adcl
dec
push
lods
popf
lds
or
or
push
mov
mov
jg
imul
push
lcall
dec
cmpsb
adc
inc
pushl
fwait
loopne
inc
pop
jo
xchg
icebp
ja
lret
scas
daa
jo
or
jns
pusha
push
decl
or
cmp
sub
and
sbb
rol
mov
inc
das
fdivrp
jg
incl
push
lds
mov
add
iret
and
popa
sti
jno
adc
xchg
loopne
lcall
jae
and
repnz
daa
js
iret
addl
mov
call
inc
test
mov
mov
movsl
or
loopne
mov
xchg
mov
or
pushl
stos
or
js
push
mov
push
mov
inc
loop
pushl
aam
adc
aaa
loop
dec
shlb
inc
pop
dec
sub
les
test
add
cmc
orb
push
cltd
adc
push
and
movl
mov
or
test
lods
and
adc
jo
cmc
mov
in
mov
pushl
pop
mov
adc
loop
mov
test
ljmp
roll
call
test
hlt
xchg
nop
and
out
xor
fsts
popf
push
or
stos
enter
call
and
sub
jecxz
movsb
adc
or
jo
mov
mov
or
inc
push
mov
sahf
mov
mov
pop
scas
jp
scas
push
or
lcall
aam
jb
stc
mov
incb
icebp
jnp
lcall
lea
add
sub
cmp
jmp
jae
and
add
test
sbb
sub
scas
icebp
inc
lea
or
loop
inc
repnz
push
or
pop
outsb
mov
add
fisttps
push
add
jl
mov
adc
adc
fwait
or
add
pushf
popa
es
sbbb
dec
and
adc
push
stos
fadds
push
mov
add
in
dec
incl
inc
push
lds
add
stc
in
jns
pop
sub
or
jnp
pop
xchg
in
jmp
cmpsb
movsb
sbb
xchg
nop
mov
enter
lea
inc
iret
mov
incl
mov
cwtl
inc
inc
and
addr16
repz
stc
xchg
test
sti
push
mov
loopne
movsb
mov
incl
cmp
loope
inc
ret
mov
in
xor
or
mov
sarl
xor
mov
xchg
std
mov
imul
inc
mov
decl
xor
jb
pop
imul
gs
aas
sbb
scas
xor
mov
jp
mov
or
imul
sbb
or
jg
std
repz
push
and
inc
test
inc
fldenv
inc
push
mov
in
fisubrs
lcall
in
push
adc
aas
call
enter
jno
dec
inc
fmull
std
addr16
decl
inc
mov
lods
leave
lods
cmp
pusha
jno
sahf
push
pop
lods
std
mov
call
loopne
xchg
xchg
sarb
test
cmp
call
decl
and
sbb
mov
and
and
test
ljmp
bound
in
pusha
dec
testl
orl
shl
inc
and
decl
cwtl
adc
es
adc
cmp
fld
enter
mov
pop
add
push
ret
shlb
and
pop
dec
inc
xor
int3
jmp
andl
gs
add
aas
std
stos
std
xchg
cmp
jmp
mov
cmpsb
xchg
aad
inc
mov
dec
adc
xchg
xchg
imul
mov
in
int3
jl
mov
daa
mov
cmp
add
pushf
sub
fdivrp
in
addr16
cmp
decl
adc
mov
xchg
fimull
shlb
mov
sbbl
ljmp
sar
or
je
xor
inc
fwait
and
sub
jl
cmp
mov
pushl
ljmp
jne
inc
pushl
sbb
fs
ljmp
inc
test
push
mov
and
mov
stc
adc
push
jg
xchg
xor
in
into
divl
fucom
leave
sahf
out
and
or
ret
cmp
dec
xchg
ror
in
fs
fmuls
mov
or
xlat
or
push
pusha
rolb
pushl
data16
xor
mov
call
nop
daa
test
xchg
dec
sbb
decl
enter
mov
shrb
add
jg
imul
subb
nop
or
dec
mov
leave
sbb
jge
in
pushl
loopne
sub
adc
sbb
or
mov
adc
sbb
jmp
add
lock
pop
fs
cmp
inc
and
inc
xor
dec
push
loop
mov
lcall
fs
sbb
fnstsw
xchg
or
test
dec
rcrl
jne
mov
adc
xor
int
mov
cmpsb
push
cld
sbb
and
ljmp
cmpsl
sbb
call
inc
sub
adc
inc
shr
push
movsl
repnz
js
inc
add
cwtl
mov
ds
decl
in
cmp
or
js
lahf
int3
es
xor
sbb
add
pop
xor
pop
addb
jmp
dec
loope
mov
cmp
dec
pop
inc
dec
xor
xchg
push
fmull
and
add
mov
mov
pop
lret
xlat
imul
in
mov
sbb
icebp
mov
xor
jge
hlt
or
jno
dec
fsubr
sarl
lock
sbb
ret
adc
xor
sub
call
adc
add
xor
cmp
mov
inc
or
lret
enter
imul
sbb
or
ret
jo
out
lahf
std
mov
call
xor
jns
pop
xchg
loopne
dec
pop
sbb
xchg
mov
ss
insb
mov
push
out
loop
jl
adc
push
orl
ja
scas
aam
mov
mov
push
incl
test
adc
and
push
sbb
decl
or
mov
lahf
shl
call
mov
fs
incl
sar
stc
mov
jl
dec
enter
adc
aas
test
int
sub
out
and
scas
out
neg
xchg
decl
stc
cmc
cmp
test
dec
push
pop
jnp
xchg
sbb
rclb
mov
mov
jb
sub
loopne
mov
push
fildl
pop
and
iret
xchg
int3
and
mov
push
mov
into
or
ror
sbb
adc
mov
test
cmpb
xor
shlb
add
rcrb
push
std
xor
fdivrp
ljmp
ljmp
xchg
jmp
test
ret
push
jno
jecxz
shrb
in
lcall
cltd
sub
lcall
add
movl
mov
cwtl
xor
push
jge
or
incl
imul
inc
sti
sbb
push
sub
cmp
call
push
fldenv
movsl
and
or
xchg
nop
addr16
shll
dec
movsl
es
ljmp
lret
test
dec
repnz
bound
jmp
call
push
adc
pop
xchg
pop
dec
cli
push
scas
adc
mov
jo
cwtl
pop
rol
jg
mov
and
jbe
pushf
or
mov
jmp
mov
push
lods
jp
adc
js
xchg
decl
std
fstpt
insb
mov
out
movsl
insl
adc
and
inc
inc
or
push
nop
icebp
dec
je
push
call
jns
mov
mov
xor
cmp
aas
pushl
in
cld
add
rolb
xchg
or
loopne
jl
ret
mov
xor
push
pusha
fcos
decl
pusha
xchg
clc
addl
test
adc
not
xchg
sbb
fptan
cmp
ljmp
jmp
inc
repz
addb
rorb
xchg
notb
or
or
or
shlb
loop
bound
xor
fcomi
out
mov
pushl
xchg
mov
adc
clc
repz
adc
mov
cmp
hlt
sbb
add
call
xor
xor
mov
adc
mov
push
dec
mov
pop
jbe
insb
jecxz
fwait
loope
adc
call
xchg
sub
inc
test
in
push
xchg
and
je
cmp
mov
pop
xlat
mov
imul
call
lcall
imul
mov
sub
and
and
jmp
sbb
add
sbb
movsl
inc
adc
inc
pop
int3
xor
sbb
ss
mov
adc
ss
fmuls
inc
outsb
sbb
call
pushl
push
ret
sub
sub
pop
xchg
xchg
mov
xchg
jo
jg
mov
sbb
push
ret
jbe
sbb
push
out
xor
aam
ficoml
call
in
roll
add
add
add
sub
mov
mov
push
push
dec
inc
pop
lds
hlt
mov
lcall
and
ljmp
clc
lcall
stos
jbe
movsl
push
xchg
adc
loop
aam
cmp
mov
sar
in
iret
mov
mov
push
adc
xchg
lcall
mov
or
xchg
dec
loope
add
xchg
xchg
jb
pop
jb
adc
jg
fwait
jne
add
out
inc
and
je
fdivl
in
jne
jns
mov
decl
xchg
sub
call
inc
enter
and
dec
imul
jmp
and
lock
jae
and
jbe
xchg
mov
adc
addl
push
icebp
fsub
xchg
cmp
and
mov
lock
fldenv
mov
fistps
icebp
sar
es
movsb
sub
xchg
nop
andl
jns
gs
mov
fwait
mov
push
jmp
pop
cmp
jnp
jnp
dec
mov
xchg
clc
mov
jg
pop
xchg
add
xchg
pushl
jle
pop
adc
dec
sub
xor
cltd
icebp
push
ret
dec
jmp
mov
inc
pop
std
pushl
lods
cmp
mov
inc
dec
xchg
loop
add
insl
pusha
adc
inc
incl
je
shl
sbb
cmp
stos
pop
je
out
es
xor
cld
lea
push
dec
test
call
or
aaa
das
imulw
xchg
jo
into
imul
cli
insb
popa
or
das
cli
decl
fs
pop
dec
data16
lcall
adc
cmp
cmpsl
xchg
push
mov
mov
ja
jg
das
aam
lds
aas
or
mov
mov
out
xchg
decl
cmp
adcl
sbb
jmp
xlat
fcmovb
int
fnstcw
sahf
mov
inc
bound
pop
pusha
pop
nop
shlb
adc
ds
xor
fcoms
pushl
bound
inc
ja
xor
leave
sub
loop
cld
insl
in
lcall
pop
lock
and
jp
add
push
cmp
outsl
push
mov
shrl
or
jnp
mov
mov
and
mov
adc
jb
out
jecxz
rorb
ljmp
scas
popa
imul
lret
push
mov
and
pop
lcall
or
sbb
and
movsb
adc
aas
dec
dec
and
and
ljmp
mov
test
mov
dec
or
inc
lea
xchg
divb
fmul
iret
sbb
cmc
scas
cli
add
adc
pop
add
aaa
mov
mov
test
imul
and
mov
or
add
not
out
push
push
pop
sbbl
les
push
jecxz
push
int
test
add
dec
das
mov
cmp
jl
cmp
pop
js
adc
jmp
or
das
test
enter
and
pushf
test
jecxz
cmc
movsb
loope
mov
decb
fdivrl
sub
rclb
and
hlt
jle
and
cmp
inc
mov
inc
and
dec
cmp
xor
or
in
test
sbb
push
movsb
mov
xchg
sbb
cmp
incl
push
incb
pusha
movsb
lea
es
lods
les
inc
inc
jno
push
fcomip
jmp
testl
push
orb
jmp
and
int3
stc
cmp
incl
lds
pop
dec
loope
mov
lea
mov
ljmp
test
or
incl
into
leave
adc
stc
daa
xor
push
sub
decl
in
sbb
movsb
and
rorl
sbb
xchg
xor
pop
or
scas
sub
and
decb
or
sub
pop
lcall
push
ljmp
or
out
add
test
adcb
jnp
imul
mov
jmp
add
jo
fdivrs
ficoml
pop
push
sub
cmc
sub
out
push
jmp
aam
lods
cmp
xchg
mov
mov
and
pop
or
adc
enter
fisttps
call
vshufps
test
call
push
out
hlt
mov
xchg
xchg
sub
inc
push
jecxz
fisubl
jle
or
push
xchg
cmpsb
inc
in
mov
roll
clc
stos
inc
and
std
push
sub
add
loopne
jo,pn
mov
fst
xlat
ror
in
pushl
pop
push
pop
and
inc
or
cmp
inc
rclb
sbb
sub
lahf
push
dec
xor
call
and
and
mov
insl
mov
inc
fldcw
sub
cmp
clc
in
dec
pushf
movsb
pop
jae
icebp
and
and
xchg
jecxz
call
mov
loopne
out
cltd
sub
mov
stc
or
add
xor
mov
jo
call
add
sub
jmp
mov
sbb
jge
gs
pop
rdmsr
stos
mov
adc
add
filds
mov
xchg
add
sub
push
inc
adc
sub
rolb
fcmovnb
pop
pop
dec
mov
cmp
sti
movsb
mov
loope
pusha
jne
sub
in
add
ret
cld
outsb
ss
jmp
jne
push
jo
mov
or
xchg
xor
decl
push
test
inc
imulb
adc
test
mov
lcall
cwtl
cmp
add
mov
rol
outsl
and
into
adc
adc
call
xor
testl
sub
int
and
jo
fsts
mov
jmp
sub
inc
or
adc
enter
cmp
and
enter
adc
ds
ret
add
sbb
mov
mov
negl
or
mov
push
test
cmp
shlb
push
xor
ret
lret
mov
mov
and
jp
fnsave
jb
jl
mov
dec
jb
jl
lcall
js
cmp
scas
clc
adc
dec
scas
orb
add
mov
call
xor
scas
enter
push
inc
mov
repnz
inc
push
adc
xor
das
sub
add
jle
decl
or
ja
out
jmp
loopne
jp
lea
lcall
and
adc
lcall
jo
jno
in
scas
inc
mov
in
inc
or
js
cld
es
test
mov
inc
dec
jnp
adc
dec
mov
and
pushl
mov
and
mov
rol
in
add
fldl
shll
dec
xchg
sarl
insb
movsb
inc
fs
std
sbb
add
incl
sub
and
mov
cs
dec
cmp
call
shr
cmpsl
sbb
cmp
jb
pop
js
xchg
inc
cmp
or
lret
out
std
decl
fbld
gs
dec
mov
cltd
and
pop
cwtl
xchg
fs
test
decb
adc
or
out
cmp
jle
jmp
pushf
pusha
push
outsb
movsd
push
daa
arpl
icebp
adc
add
cmp
inc
mov
decl
sbb
cmp
loopne
nop
and
mov
pop
ds
sbb
nop
enter
mov
add
dec
lahf
pop
or
lea
and
cmp
jg
cmp
std
decl
out
test
fists
mov
or
jmp
fbld
addr16
cmp
outsb
mov
cwtl
sahf
push
fcomip
mov
mov
ds
or
stos
shlb
and
fnstcw
and
popl
daa
sbb
int3
ss
icebp
lods
dec
jmp
ds
jmp
cld
mov
dec
out
nop
or
test
xor
jp
or
xchg
adc
out
xchg
adc
imul
aas
mov
loopne
cld
pop
xor
popa
gs
int3
jle
adc
call
xchg
add
icebp
mov
xchg
xor
fucom
divb
cmc
sub
out
jmp
ja
iret
mov
push
xor
push
lds
push
out
or
mov
or
fnstsw
call
jb
mov
in
push
inc
inc
adc
cmp
sub
int3
xor
out
shll
and
call
ds
cwtl
push
andl
fwait
es
jg
jg
add
dec
xchg
sarl
push
push
sahf
add
and
adc
jmp
add
bound
add
add
sub
sub
push
scas
stos
lcall
loop
jb
decl
fwait
mov
cwtl
mov
cwtl
inc
xchg
xchg
xchg
sub
imul
lcall
xor
dec
mul
push
sbb
sub
aaa
inc
push
fisubl
lcall
dec
mov
decl
js
stos
adc
lcall
cmc
fsubrs
sti
or
inc
cmp
das
cli
jmp
shlb
mov
sbb
xlat
cld
aas
or
xchg
mov
and
clc
adc
pop
fstpl
and
sbb
decl
lods
jecxz
adc
xlat
mov
xor
xchg
and
jns
cld
mov
xchg
jbe
sub
add
rorb
loopne
sub
jle
out
jae,pn
xor
xor
mov
repz
fsubrs
lea
mov
cmp
xchg
sbbl
incl
ljmp
adc
jb
test
cmp
and
jmp
adc
jecxz
sub
add
rcrb
repnz
mov
mov
sub
inc
sub
mov
cs
and
call
jmp
or
movsl
add
icebp
leave
cli
lds
lock
push
xchg
mov
lea
std
sbb
mov
out
jp
ret
loop
mov
xchg
inc
pushl
sbb
test
and
cs
pop
stos
dec
orl
mov
lock
in
jmp
adc
or
push
push
pushf
mov
add
incl
mov
adc
popf
push
inc
pop
ljmp
mov
jg
xchg
jl
push
push
jae
xchg
and
ss
das
icebp
sbb
les
insb
jno
push
sbbb
scas
mov
xor
jl
fdiv
movsb
or
mov
xchg
imul
cmp
mov
jnp
sbb
or
insb
inc
mov
push
mov
xchg
push
mov
xor
or
imul
add
pop
jecxz
dec
andb
cwtl
ljmp
mov
mov
clc
inc
pop
cmp
xlat
jl
lea
xchg
mov
jg
cwtl
mov
lret
je
cmpsl
aad
mov
add
std
push
sbb
js
incl
roll
push
fnsave
inc
adc
ljmp
int3
xor
pop
push
shrb
add
decl
out
out
jmp
push
adc
sbb
and
jp
xlat
adc
sar
outsl
cli
call
cmpsl
sub
fcmovb
push
imul
cmpsl
ret
imul
lods
mov
loopne
jno
test
mov
int3
xchg
mov
pop
mov
sbb
cmp
push
inc
inc
mov
push
push
inc
es
into
int3
fnsave
out
lcall
mov
inc
inc
sub
sub
scas
or
nop
out
sub
dec
insl
and
jge
jg
jp
or
cmpsb
pusha
inc
xchg
mov
lret
cmp
out
jns
sub
push
inc
add
mov
push
rcrl
sbb
cli
sbb
out
shl
jl
icebp
subl
push
insb
xchg
std
xor
push
add
mov
dec
and
sub
and
jg
cli
fs
aas
push
mov
inc
je
and
cmp
out
inc
les
nop
decl
mov
std
dec
into
stos
or
sti
pop
in
in
mov
ds
push
outsb
cmp
jbe
xchg
inc
or
add
repnz
pusha
or
movsl
pop
aam
test
dec
repnz
pop
icebp
bound
cwtl
pop
sar
hlt
insl
enter
loopne
flds
sarb
pop
jg
ljmp
adc
jecxz
data16
sbb
push
test
ror
cmp
mov
repz
divl
sbb
mov
data16
cwtl
sub
jmp
cmpsb
shll
shlb
les
sbb
jg
xor
pushl
add
mov
test
into
loope
cmpsb
push
ret
js
in
ds
cmpsl
or
push
xchg
and
mov
popa
and
mov
mov
not
pop
in
cwtl
mov
xor
mov
rorb
or
movl
and
push
idiv
mov
jge
ljmp
mov
and
mov
leave
xor
push
sub
adc
pop
subb
ficomps
scas
mov
mov
and
adc
push
call
test
lds
and
sub
mov
addr16
ljmp
fbld
xchg
adc
dec
and
add
mov
xchg
jne
jb
out
pushf
jns
fs
es
xlat
inc
sub
adc
and
xchg
dec
mov
in
sub
enter
ret
jecxz
xchg
or
decl
into
cmpsl
pop
dec
sbb
jmp
pop
jmp
insl
bound
mov
and
pop
push
lods
ljmp
in
xor
adc
cwtl
nop
mov
sub
dec
fldenv
push
scas
add
mov
push
xchg
sti
call
mov
in
std
fs
pop
cmp
xor
fisubrs
sahf
mov
jg
or
test
xchg
dec
and
xchg
stos
es
dec
inc
push
mov
xchg
decl
jle
icebp
roll
cmp
push
dec
pusha
loop
adc
push
adc
add
xorb
or
xlat
mov
repz
lods
insl
loope
ss
iret
orb
sbb
xor
pushl
mov
dec
pop
mov
jecxz
push
pop
cmpsl
into
mov
cmpsl
pop
popf
mov
xlat
and
pushl
push
xor
xchg
mov
inc
sub
shlb
scas
add
call
andb
pop
jg
in
scas
sub
sub
xchg
pop
dec
and
call
imul
pop
inc
push
jb
in
xchg
mov
lcall
adc
adc
mov
push
xchg
das
and
test
xchg
pop
insl
ljmp
scas
or
mov
addr16
fcmovne
dec
push
addl
xchg
jle
dec
jg
cld
pop
or
inc
sarb
mov
lock
or
xor
adc
xchg
decl
mov
pop
push
repz
mov
lock
adc
adc
inc
out
mov
call
sbb
and
inc
mov
jecxz
and
sbb
mov
add
clc
and
mov
call
fwait
adc
roll
rorl
stos
icebp
sub
shrl
xor
incl
jmp
outsl
dec
lret
jno
xor
in
fwait
mov
inc
icebp
test
rcll
ret
ds
mov
push
stos
pop
jg
push
popf
outsb
test
sub
sbb
sbb
and
call
ja
mov
inc
stc
insl
inc
mov
dec
push
out
push
or
or
add
push
and
and
lock
and
incl
inc
pop
pop
test
lret
inc
jae
adc
mov
insb
in
movsb
jb
addr16
scas
jno
pushf
or
cli
sub
pop
push
ret
inc
or
sbb
sub
out
sub
out
clc
push
add
mov
icebp
jecxz
and
sbb
inc
daa
inc
and
decl
ret
jmp
and
add
xchg
aad
jne
and
jp
add
cwtl
xchg
and
and
cmp
scas
adc
fstps
inc
ja
pop
hlt
incl
stos
or
jge
mov
and
push
dec
push
xchg
incl
xchg
add
loop
jmp
xor
jmp
pusha
adc
xchg
fldcw
sub
call
in
pop
pop
pop
xchg
mov
and
mov
and
outsb
or
add
mov
addr16
loopne
push
insb
test
test
mov
add
dec
and
decl
repz
cld
sub
inc
jo
mov
jb
pop
call
dec
iret
orl
cwtl
dec
aas
inc
push
cmpsl
movsb
xchg
cmp
icebp
add
mov
sbb
and
mov
lds
cwtl
mov
pop
mov
jno
clc
mov
lret
pop
push
mov
in
test
pop
add
pop
jo
push
ret
shrb
mov
jmp
ret
loopne
rcll
and
sarl
je
orl
fs
xor
jae
js
test
les
xchg
cli
mov
pop
test
pop
jne
push
aas
lret
idivb
jnp
jb
test
mov
aas
dec
sar
pushl
movsl
mov
sub
mov
aas
pop
shrl
pushf
repz
dec
call
dec
ret
jl
xor
mov
call
inc
dec
sbb
push
cmc
dec
mov
cs
jecxz
and
mov
xor
jbe
inc
sbb
xor
inc
stos
cmp
lds
subl
add
mov
sahf
jecxz
add
in
push
cli
mov
je
and
ret
dec
ljmp
out
test
jge
dec
jmp
clc
test
and
in
or
sti
call
addr16
push
aam
mov
dec
dec
pushf
sub
mov
xadd
ret
push
mov
mov
pop
cld
das
adc
jl
test
inc
les
push
sub
ljmp
dec
lret
iret
scas
faddp
fs
cli
jae
jmp
mov
add
add
fwait
and
lods
xchg
cmpsl
and
xchg
lcall
popa
movsb
rolb
push
jecxz
test
aam
mov
adc
xor
jmp
jl
je
adc
jo
mov
cmp
sub
popa
xchg
mov
inc
add
mov
js
out
and
adc
nop
loope
xlat
jae,pn
pop
ret
out
cli
xchg
or
adc
pushf
pop
outsb
jmp
icebp
test
or
jg
lods
cwtl
cmp
divl
cmp
mov
cs
ljmp
or
int3
cmp
push
enter
xchg
and
sbb
mov
push
lcall
popa
xchg
add
mov
fildll
iret
pushf
push
jecxz
rcrl
pop
rolb
in
xchg
mov
mov
mov
sbb
ljmp
xchg
inc
mov
add
or
mov
or
and
xor
iret
push
xchg
mov
dec
jns
push
subb
aaa
mov
lret
fldl
lock
mov
pop
inc
neg
pop
lcall
nop
mov
xchg
mov
pusha
dec
inc
test
pop
add
rolb
push
js
sub
ljmp
rclb
js
pop
add
add
inc
iret
paddsb
sub
icebp
or
lock
xlat
jbe
push
adc
cmp
add
dec
add
inc
clc
jg
push
stc
add
js
movsb
clc
dec
sbb
iret
xchg
adc
aad
pushl
data16
lret
cmp
or
adc
dec
les
sub
pushf
dec
sub
lcall
fs
mov
adc
adc
dec
pop
fcomip
fwait
pop
push
test
jmp
daa
xchg
jg
imul
or
cmpb
fistpll
ror
das
cli
jg
push
dec
xchg
push
addr16
push
imulw
movsb
iret
dec
adc
push
std
cmp
jb
dec
inc
pusha
int
add
notl
gs
inc
and
jmp
outsb
test
shll
ret
adc
out
pop
and
jmp
ss
pop
mov
sub
testl
push
ds
jle
mov
sar
jg
movsl
mov
out
xor
inc
adc
scas
fs
int
sbb
out
pop
cld
decl
xchg
mov
movsb
pop
mov
insl
xchg
jle
out
jmp
inc
pop
push
shl
xchg
mov
and
inc
jmp
mov
stc
icebp
test
xchg
dec
sarl
enter
lahf
dec
dec
xor
scas
sarl
add
sub
shrl
adc
mov
xor
lcall
notb
testb
adc
sar
pop
outsb
push
pusha
sarb
add
setge
lock
in
les
test
ljmp
cmp
sbb
mov
insl
imul
cwtl
stc
sub
fs
pop
cmpl
stc
jne
adc
in
dec
lret
call
ljmp
or
inc
mov
loope
inc
inc
test
jae
incl
push
mov
enter
mov
popa
push
pop
in
aad
je
pop
daa
das
subl
call
xor
add
inc
aas
faddl
push
mov
insl
shll
ljmp
add
in
sbb
testl
xor
call
loopne
cmp
dec
pusha
call
sub
aam
adc
add
or
xor
decl
adc
mov
ret
sbb
mov
lods
mov
jns
or
xor
das
cmpsl
mov
mov
ljmp
gs
mov
pop
rclb
shlb
loope
dec
cs
scas
push
add
sbb
push
fnstcw
jmp
jl
lret
ljmp
xor
jmp
scas
lods
ret
sbb
or
push
popa
push
fadd
adc
adc
xor
outsb
ret
shlb
imul
xor
sub
cli
incl
mov
push
daa
xor
or
inc
bound
mov
loope
and
ljmp
jle
xor
aam
nop
les
xor
sub
outsl
out
inc
aas
cmpl
adc
sub
ja
inc
sbb
nop
in
mov
ja
lea
sub
adc
jmp
repnz
ds
sbb
fadds
pop
cmc
ljmp
loopne
adcb
mov
iret
icebp
in
jnp,pn
rcll
movb
sub
jmp
shlb
and
push
sub
xchg
push
rsqrtps
jno
repz
fstps
loop
cmp
push
clc
imul
call
mov
cmp
les
adc
or
sub
mov
sub
cmp
push
incl
sub
fs
mov
clc
or
dec
jne
xchg
pop
push
push
into
sbb
pushf
pop
mov
fnstcw
dec
pop
fucomi
cwtl
adc
xchg
sub
rorb
lcall
cmp
and
and
inc
in
adc
xor
adc
lds
lock
dec
mov
loopne
insb
pushf
lcall
xor
js
cmc
repz
and
leave
inc
out
mov
adc
jb
jecxz
gs
jne
xchg
lds
repz
fwait
scas
add
jb
stc
xor
dec
dec
aas
push
aas
decl
or
out
add
dec
adc
gs
cmp
add
pushf
inc
mov
inc
dec
rorb
jbe
jo
scas
es
add
dec
cmp
fwait
add
lock
and
mov
jns
add
or
mov
sbb
inc
jg
scas
cs
and
sub
int3
sbb
inc
mov
xor
adc
incl
stos
in
push
lea
lea
in
fnstcw
mov
mov
adc
jmp
pop
mov
data16
clc
or
push
and
js
ss
xor
inc
jmp
dec
test
pop
loopne
mov
aam
lds
andl
or
hlt
ljmp
ds
leave
xor
call
inc
daa
jno
cmpsl
jle
xor
stc
nop
pop
mov
mov
cmc
mov
adc
xor
xchg
inc
decl
inc
jae
push
xor
pusha
and
mov
or
pop
push
test
ret
pop
out
call
xor
xlat
xor
or
call
add
das
push
xlat
xchg
decl
push
iret
pop
add
sub
dec
xor
lcall
dec
dec
sbb
jg
push
pop
dec
inc
ljmp
insb
jo
popa
mov
push
rcll
cmp
jo
mov
cmpsb
sub
sbb
push
jb
mov
mov
addl
in
mov
icebp
lret
jl
mov
cmp
xchg
out
scas
mov
and
dec
cmp
mov
sbb
mov
inc
adc
adc
or
or
inc
and
jg
loop
mov
jecxz
mov
sti
imul
push
je
std
lahf
pop
lcall
pushl
pop
cmpsb
and
cwtl
push
ss
loop
enter
sub
fdivr
lcall
push
arpl
add
addb
and
jge
cmpsl
cmp
xchg
inc
incl
enter
adc
add
loope
mov
ret
fdivr
mov
inc
stc
xor
cltd
cwtl
fnstenv
negb
repz
icebp
mov
call
jle
or
lods
mov
or
sbb
test
daa
test
decl
hlt
fwait
stc
iret
jbe
shrb
rol
rolb
pop
mov
add
aas
push
lock
scas
call
in
cmpsl
jb
sahf
push
xor
push
xchg
stos
pop
fadd
loopne
fistpll
ds
push
mov
lcall
add
cmc
jno
add
mov
gs
inc
addb
adc
loopne
jo
and
loope
and
sti
out
cld
jns
and
mov
push
pop
jl
push
add
pop
cmp
je
xchg
pushl
push
aas
daa
dec
push
and
and
popa
fbld
decl
mov
mov
or
push
jae
das
xchg
pop
iret
sub
adc
xorb
adc
pop
add
push
fcomip
decl
push
pop
je
mov
sbb
jle
push
mov
adc
ljmp
dec
or
jnp
add
dec
in
ja
add
cmp
inc
sbb
jmp
mov
dec
or
cmc
test
cmp
xor
xor
cmp
inc
popa
xchg
das
mov
mov
ds
nop
insl
rorb
or
and
sub
sti
inc
rcrb
add
cld
push
cmp
add
fcomps
inc
or
adc
mov
mov
filds
dec
pop
xor
cs
adc
fs
lret
daa
sbb
aad
xorb
dec
cmpsb
dec
cmpsb
xor
les
mov
in
test
push
xor
fs
jge
cmp
lock
and
fcoms
mov
jae
mov
and
aam
mov
push
cmpsl
pop
xchg
dec
jg
adc
add
xchg
or
test
mov
test
std
dec
jecxz
jb
andl
pushf
and
and
add
in
mov
jmp
push
lcall
and
jb
xchg
in
es
daa
clc
fcmovnbe
mov
hlt
lcall
call
jno
adc
mov
aam
push
or
sbb
lcall
js
push
mov
rcrb
cmc
movsb
inc
mov
inc
pop
mov
xchg
pushl
out
mov
xchg
inc
or
pusha
adc
mov
inc
clc
sbb
push
call
sub
imul
inc
testl
mov
push
push
lea
mov
mov
jmp
pop
mov
sbb
cld
arpl
ret
adc
mov
sub
pop
xor
mov
mov
lods
imul
jne
jb
mov
sub
aad
stos
stos
mov
enter
hlt
scas
inc
pushf
in
adc
add
hlt
incl
inc
ret
in
xor
out
inc
mov
rclb
push
jmp
push
je
xchg
test
rsm
enter
jle
and
xor
push
inc
jmp
mov
cmpsb
and
xchg
pop
pushf
scas
pop
push
enter
cmpsb
cmp
mov
adc
lock
call
shlb
imul
rcrb
cmpsl
pusha
cmp
dec
mov
cs
inc
call
ret
dec
mov
es
sbb
inc
sub
incl
adc
test
dec
pop
shlb
testl
mov
call
dec
rclb
inc
flds
ljmp
insl
xchg
adc
mov
sbb
test
insb
scas
decl
cmp
ja
add
movsb
cmp
adc
adc
fst
iret
lcall
cmp
ja
ja
or
mov
in
movsb
add
cmp
push
ret
jns
aas
pushf
call
sbb
mov
jl
mov
insl
test
fiaddl
mov
lock
and
insb
push
dec
adc
sbbl
int3
add
add
inc
jmp
rorl
cmp
test
pop
add
inc
or
jmp
in
and
jb
push
ror
and
jge
dec
push
mov
pop
or
in
lcall
stos
or
add
popf
into
xchg
outsb
inc
andb
mov
jmp
cmc
xchg
adc
pop
std
or
inc
and
sub
dec
nop
lret
xor
xor
dec
enter
pop
in
call
pushf
aad
add
and
mov
or
test
inc
pop
or
test
call
incl
fsubs
xor
hlt
mov
mov
xor
mov
cmc
ljmp
sahf
and
das
jp
stc
inc
roll
aaa
jo
sbb
or
lcall
adc
mov
ljmp
sbb
mov
xor
loope
rclb
decl
test
sub
ret
adc
mov
inc
int3
in
orb
cmp
decb
add
repz
andl
jg
call
cmp
lahf
jb
xchg
xchg
dec
and
cmpb
xor
xchg
or
pushl
gs
and
mov
sub
insb
lock
dec
fisubrs
xchg
jle
and
mov
scas
jmp
inc
and
popf
add
es
fimuls
add
hlt
outsl
xchg
dec
out
sub
and
stos
sub
dec
xchg
outsb
add
loopne
pop
push
pop
shlb
adc
mov
repz
mov
inc
bound
inc
ret
cmovge
and
insb
or
xor
xchg
test
and
pop
popa
mov
mov
pop
repnz
flds
scas
popa
addl
add
xor
adc
and
jb
adc
test
mov
sar
lcall
std
sbb
and
fs
jmp
mov
inc
popf
dec
sub
lcall
inc
mov
cmp
pusha
jg
sbb
jge
xorb
call
popf
loopne
orb
jns
addb
xchg
aas
andl
adc
mov
xchg
mov
jnp
inc
test
add
leave
mov
mov
add
repz
inc
pop
add
mov
jmp
jbe
add
add
adc
dec
jge
inc
es
inc
dec
cmpsl
and
jne
jmp
hlt
sbb
nop
cmp
cli
mov
pop
push
addr16
insb
dec
dec
loopne
insb
test
test
dec
rorb
dec
repnz
js
jb
pop
je
sbb
into
sbb
mov
decl
in
daa
or
or
sbb
adc
or
orb
jmp
sbb
nop
push
or
pop
mov
inc
push
leave
int3
mov
adc
mov
jg
mov
subb
xchg
inc
lcall
sti
pushf
jmp
jmp
inc
out
add
and
popa
pop
mov
xchg
push
mov
push
in
or
and
jle
call
mov
sbb
je
fwait
or
hlt
ss
lea
imul
fdivl
sub
mov
and
test
pushl
cmp
mov
cltd
mov
adc
adc
dec
loope
fwait
decb
cmp
dec
sub
pop
test
xchg
aam
cmpsb
out
adc
call
sub
ficomps
sbb
jo
jle
ret
nop
outsb
daa
lret
imul
incl
fld
xchg
daa
rcll
in
dec
sub
xor
sbb
mov
inc
xchg
movsb
lahf
incl
in
inc
addr16
cwtl
ret
stos
xor
and
icebp
leave
mov
stc
xchg
ljmp
sub
call
or
push
jo
jne
cmp
jle
sbb
adc
fimull
loope
stos
sbb
clc
inc
repz
mov
testb
adc
push
cmp
jp
lds
dec
push
mov
pop
sbb
cmp
add
jnp
insl
add
fdivrs
mov
stos
pop
mov
dec
or
xchg
add
icebp
adc
es
popa
icebp
xor
call
adc
fnsave
sbb
out
cmp
clc
scas
and
lds
imul
mov
mov
repz
sub
xor
pop
inc
push
inc
mov
lret
mov
dec
dec
pop
inc
adc
incl
dec
mov
and
scas
jecxz
movsl
mov
mov
incl
loop
mov
lcall
je
pop
push
movsl
xchg
pop
sti
incl
loopne
and
push
clc
mov
adc
fmull
jmp
out
lret
mov
and
xchg
fchs
sub
mov
or
mov
cmp
lahf
repz
pop
xor
sbb
and
mov
cmpsb
mov
and
add
into
fcomip
dec
push
cwtl
xchg
and
rcrl
sbb
je
dec
push
adc
rcr
stos
scas
pop
cmp
or
push
push
ficoms
mov
stos
in
popf
xchg
jae
jmp
inc
adc
decl
inc
shrb
xor
xchg
dec
test
add
lods
decl
aam
out
xor
cmc
inc
cmpsl
psubsb
rolb
add
lcall
inc
and
sbb
pusha
loop
popa
adc
mov
jl
adc
cmp
adc
hlt
or
je
mov
mov
mov
dec
sti
sahf
and
push
test
fcoms
loopne
mov
fmull
icebp
jg
arpl
push
cmpsl
add
pop
mov
cmpsb
or
sahf
jg
add
jmp
lods
aaa
xlat
adc
jp
test
xor
adc
sar
psubb
add
sbb
dec
mov
add
jbe
das
adc
incl
dec
mov
adc
and
ficoms
push
cmpsl
shll
cs
mov
xchg
mov
sbb
mov
mov
inc
insl
add
add
jbe
int3
mov
inc
sbb
sub
pop
pop
shlb
xor
hlt
jmp
adc
mov
and
repnz
mov
nop
enter
ds
mov
pop
mov
pushf
adc
add
sbb
outsb
inc
test
add
cmp
lcall
xchg
and
adc
hlt
xor
fstl
jl
xlat
nop
mov
pushl
pusha
mov
xor
xorb
movsl
inc
fwait
leave
cltd
jp
pop
roll
loope
pushl
cld
stc
jecxz
xchg
jmp
sbb
sub
in
and
imul
or
xlat
decl
insl
orl
and
jp
out
aaa
das
shrl
icebp
push
inc
shll
ficoms
aaa
call
movsl
cli
cs
or
cwtl
xor
jge
push
adc
mov
in
cli
pushl
rorl
dec
and
scas
icebp
lcall
call
push
stc
outsl
or
sahf
mov
nop
xor
test
psrad
sub
xor
cmp
mov
cmp
mov
or
mov
jl
ss
push
cmpsb
movb
fisubrs
cmp
call
loop
in
jnp
lods
add
movl
inc
cmp
lcall
lret
cld
or
scas
jge
mov
xchg
lret
hlt
mov
je
mov
dec
and
incl
or
mov
pop
out
dec
xchg
ret
cli
sub
mov
push
pop
xor
jnp
lcall
andb
dec
cmp
lcall
call
adc
cmp
xchg
dec
dec
loopne
mov
jg
jb
leave
fs
inc
cmp
sbb
fisubrs
aaa
pusha
cmp
push
xchg
or
adc
pusha
inc
pop
lock
mov
cmp
and
stos
lret
call
mull
orl
sub
mov
push
into
push
mov
pop
push
repz
mov
mov
lcall
and
dec
inc
cli
pop
jl
or
pop
inc
icebp
movntps
mov
movsl
lret
mulb
cld
jbe
xor
popf
adc
adc
and
ss
mov
ljmp
rolb
sti
ss
scas
mov
jg
ljmp
mov
push
or
mov
adc
pushl
das
pop
jecxz
jl
and
and
outsb
xchg
ss
mov
outsb
call
sub
adc
shl
dec
add
or
sti
pushl
adc
test
mov
outsb
cwtl
xchg
cmp
add
out
inc
and
pop
ds
pushl
int3
nop
fs
sub
call
mov
dec
and
dec
test
mov
mov
test
call
sbb
cwtl
dec
pop
or
cld
jmp
out
test
mov
jg
fnstsw
jl
lcall
xlat
jo
icebp
inc
mov
rcrb
jl
mov
xchg
popf
sbb
imulb
cli
dec
mov
push
cmp
lret
outsb
add
and
imul
popw
push
jns
xor
pushf
addr16
jmp
fistps
pushl
std
nop
rclb
sti
jmp
jp
jne
dec
inc
test
inc
clc
dec
jecxz
xchg
sub
jmp
jb
daa
aam
dec
sub
scas
loopne
inc
xchg
test
cmpsl
mov
jmp
ljmp
push
xor
rorb
dec
pop
adc
outsl
adc
jecxz
adc
es
incl
jmp
adc
nop
scas
add
dec
dec
xchg
out
pop
loope
sbb
push
mov
decl
xor
loope
sarl
mov
lcall
xor
cmpsb
inc
mov
sub
popf
and
adcb
or
ljmp
aad
xchg
addb
sbb
and
adc
iret
aam
ret
pop
pop
test
incl
push
cmp
pushf
mov
pop
add
fwait
rcl
cld
pop
pusha
shlb
fcomip
inc
or
bound
xchg
fs
adc
stos
mov
shr
adc
in
push
inc
inc
ret
out
jp
inc
mov
push
mov
flds
dec
inc
dec
sbbb
lds
xlat
cli
aas
pop
pop
push
das
xchg
push
cmc
mov
lea
js
lcall
rcll
sbb
repz
mov
int
pop
dec
xchg
incl
enter
cmp
pop
adc
add
out
push
es
fstl
dec
jno
js
popa
push
sub
ficoms
push
mov
inc
js
lods
jg
mov
in
cmc
std
decl
inc
mov
mov
xchg
pop
cs
in
call
cld
and
in
into
aas
or
stos
inc
pusha
test
push
orl
jmp
lcall
jle
push
icebp
shrb
inc
jmp
pop
adcb
xor
push
lods
adc
call
daa
lret
sbb
pop
je
fsts
fstl
pushf
sahf
jl
ss
xchg
shrl
dec
ljmp
rorb
xchg
call
xchg
push
inc
xchg
xor
sahf
sub
push
mov
adc
jne
and
faddl
add
leave
mov
out
cli
out
cli
mov
pop
fldenv
and
into
push
mov
ljmp
sbb
push
xchg
jg
daa
ja
mov
adc
movb
ljmp
clc
fildl
cmp
insb
mov
sub
push
addr16
shlb
cltd
fwait
xor
cmp
lcall
jg
lods
push
bnd
sbb
xchg
inc
lret
rolb
fs
subb
test
or
add
xchg
inc
das
and
repz
sbb
fld
int3
sbb
inc
push
xchg
or
mov
ret
jl
cmp
pop
nop
xor
adc
mov
decl
xor
and
add
adc
adc
out
mov
add
xchg
pop
sbb
mov
mov
rcll
out
mov
test
mov
mov
mov
mov
mov
lea
into
or
mov
push
mov
ds
mov
outsb
lret
adc
data16
pusha
in
sbb
push
lcall
daa
mov
ds
xchg
sahf
ret
sahf
es
pop
sbb
xor
pushl
adc
inc
outsl
out
jp
adc
mov
fimuls
adc
adc
insl
xchg
add
or
cli
push
adc
sbb
idiv
decl
pop
xor
mov
mov
dec
jle
loopne
cmc
sub
adc
decl
into
cli
clc
xor
sbb
cmpsl
dec
pop
in
loop
lods
clc
aad
pop
add
andb
fcomip
ljmp
push
or
lods
sub
inc
mov
imul
mov
adc
lcall
push
mov
mov
in
mov
sbb
std
or
jno
mov
ljmp
ljmp
add
pop
add
push
shrb
incl
out
jl
sahf
cmpb
mov
pop
jno
loop
arpl
insl
sub
lcall
adc
enter
pushf
lahf
mov
std
or
pop
jne
pop
inc
sarb
mov
inc
bound
mov
pop
aad
jle
xchg
andl
sbb
nop
lcall
xor
push
in
popf
sbb
daa
xor
ss
cmp
lcall
xor
sbb
ret
jl
sbb
adc
mov
and
mov
and
roll
imul
shrb
add
nop
jl
addr16
jo
xchg
nop
cwtl
push
je
ss
std
lret
icebp
sub
adc
loope
jmp
inc
sbb
pop
xchg
cmp
in
in
jmp
std
or
cwtl
in
enter
xchg
or
cmp
inc
scas
rorl
and
fdivs
adc
sbb
mov
decl
insb
inc
or
xlat
push
movl
adc
or
cld
cmpsb
movsl
lcall
in
adc
jbe
and
or
xor
incl
mov
adc
loop
in
popa
cmpsl
mov
push
mov
iret
fisubrs
jmp
inc
nop
mov
fwait
cltd
gs
and
pop
aas
rorb
dec
and
xchg
jge
or
bound
or
mov
in
cmp
stos
dec
in
add
pushl
sub
mov
mov
xor
add
addb
mov
push
aam
sbb
inc
ljmp
sub
mov
iret
xor
rcr
xchg
dec
pop
lock
fdivl
ficomps
dec
and
adc
adc
dec
jle
popa
adc
push
dec
inc
jmp
das
les
mov
imul
lahf
fadd
add
incl
enter
xchg
test
mov
mov
sbb
arpl
ljmp
dec
inc
fdivrs
pop
mov
or
outsl
nop
or
test
sub
insl
clc
jmp
mov
xchg
push
and
jae
jp
jmp
aam
imul
arpl
test
popf
int
push
popa
in
icebp
jge
mov
adc
test
dec
mov
lods
lock
lcall
sub
and
cs
dec
das
mov
nop
outsl
push
ret
push
jo
or
sbb
decl
test
test
mov
dec
movsb
mov
pop
add
adc
test
jmp
adc
aaa
mov
mov
loopne
test
mov
data16
ss
or
push
call
or
call
iret
pop
and
inc
lds
xor
aam
dec
cmp
mov
mov
decl
arpl
std
enter
sub
sbb
call
push
inc
es
daa
sub
ljmp
mov
in
xor
and
lcall
inc
pop
inc
notl
pop
sub
shlb
mov
loopne
gs
ljmp
cld
inc
or
inc
out
pusha
addr16
scas
outsb
loope
call
dec
jns
fmulp
fmuls
bound
jg
xchg
daa
jp
mov
pop
xchg
dec
rclb
jne
popf
dec
addb
repnz
test
sar
call
xchg
sub
filds
cmpsb
cmovae
cltd
xlat
imul
add
add
incl
xchg
push
aaa
icebp
sbb
ja
and
or
mov
pop
popf
aad
xor
incl
mov
repnz
sub
arpl
das
add
add
lods
les
mov
fidivrl
push
or
jmp
add
and
std
pop
pop
fwait
push
jno
cli
stc
mov
sbb
jne
out
mov
pushl
dec
vpshaq
push
mov
push
mov
cmp
ljmp
loopnew
loopne
push
adc
and
xchg
test
add
pop
loopne
add
or
fwait
dec
mov
and
xchg
ficoms
mov
iret
lcall
jbe
mov
mov
jl
xorl
xchg
lea
or
loopne
dec
jecxz
adc
xorb
popa
push
xor
iret
mov
or
sahf
rol
clc
lcall
jae
daa
scas
jle
push
filds
dec
aas
mov
mov
int3
sub
cmp
pushl
pusha
xor
add
mov
cmpsb
add
bound
mov
xchg
mov
rep
fs
pusha
add
sbb
adc
loope
leave
incl
mov
and
sarl
dec
push
into
jae
inc
and
push
push
leave
jo
mov
lcall
xor
and
jecxz
pop
jne
rorl
and
inc
sub
es
test
and
ljmp
ds
inc
mov
push
sub
jo
andb
push
or
push
pop
pop
mov
int
scas
jle
enter
das
cli
call
or
in
adc
push
mov
je
imul
inc
cmp
dec
std
iret
and
dec
mov
clc
xor
adc
arpl
xor
pop
cmc
dec
mov
mov
inc
sbb
xchg
pop
aad
xor
adc
lcall
decb
or
jle
je
inc
or
into
outsl
mov
dec
shll
icebp
mov
xlat
and
dec
push
daa
mov
cltd
mov
dec
loop
inc
and
nop
xor
out
add
nop
push
ret
pop
test
and
sbb
sub
std
addr16
pop
jmp
xchg
decl
fldt
and
not
subb
insb
nop
dec
jmp
inc
mov
call
jne
push
pop
lret
mov
xlat
out
test
cmp
scas
xor
sub
fsubrp
push
xor
push
pusha
adc
inc
or
lcall
decl
cmp
cmpsl
cmpl
xchg
shl
imul
xchg
mov
adc
stc
mov
sub
lcall
mov
or
in
cld
aaa
sahf
in
xchg
and
cmp
dec
sub
cld
mov
mov
cmp
jg
test
fildll
and
movsb
or
mov
jle
cmc
cmp
scas
sbb
push
ja
movsl
cmp
mov
cwtl
sub
daa
hlt
push
enter
pop
adc
xor
cmpl
jg
push
inc
sub
sbb
jmp
xlat
into
push
fwait
shlb
into
cmp
xchg
jmp
jbe
push
movsb
jns
out
and
jo
and
adc
xchg
mov
xchg
daa
and
test
into
mov
dec
inc
inc
mov
ja
jmp
out
jns
dec
lret
push
mov
pushl
push
mov
cwtl
mov
shlb
pushf
sub
push
add
insb
clc
pop
in
icebp
adc
push
cmp
incl
dec
fcmovbe
inc
jmp
leave
xor
lahf
mov
xor
and
jg
decl
mov
or
test
inc
adc
cmpsl
rorl
pushl
nop
mov
cmp
repz
fidivrl
cmpsl
adc
jmp
sbb
in
inc
fisttpll
inc
cmc
sarb
xchg
test
xor
mov
pushf
and
adc
jg
sub
and
jl
dec
jg
push
mov
out
xor
and
mov
ljmp
pop
shr
push
clc
test
push
adc
add
xchg
push
pop
sbb
std
insb
xchg
ss
jmp
andb
pop
mov
hlt
loopne
lea
imul
mov
outsb
iret
leave
inc
sub
mov
inc
or
adc
jge
mov
mov
pop
push
scas
les
inc
js
sbbl
and
incl
ljmp
mov
test
pop
ljmp
test
jmp
dec
iret
pop
lahf
loopne
inc
incl
in
aas
add
sbb
inc
jg
jle
ss
test
inc
push
push
repz
mov
jg
mov
cmp
in
aam
push
inc
xor
dec
pop
fnstcw
pushl
stos
roll
xchg
je
shrl
inc
bound
cmc
lcall
lds
or
fdivrs
loope
pop
das
cwtl
mov
addr16
aaa
add
iret
and
xor
out
pop
xor
nop
loop
pop
loopne
push
adcl
aaa
cld
incl
adcb
or
add
push
dec
push
jecxz
dec
adc
aam
dec
add
dec
cmp
xchg
and
stc
inc
fsubs
nop
pop
sub
in
movsb
out
mov
test
repnz
decl
inc
sbb
mov
sub
test
add
jge
lcall
jb
cmp
xchg
shrl
xchg
add
push
stc
loopne
mov
call
and
enter
inc
cs
imul
dec
mov
adc
mov
fidivrs
cld
ret
es
cmp
inc
lret
dec
mov
dec
xor
jmp
mov
or
and
xor
jne
movsb
cmp
lock
fdivs
test
mov
psubw
cwtl
add
pop
sbb
pushf
xchg
mov
push
and
ljmp
dec
mov
cmpsl
inc
int3
ss
push
shll
clc
inc
dec
pop
or
push
mov
icebp
mov
movsl
lcall
daa
push
mov
repnz
jns
test
aas
movsb
fiadds
and
movsb
mov
std
jnp
push
mov
clc
fbstp
outsl
dec
repnz
or
adc
push
cmp
int3
or
sub
or
push
jge
sub
jo
add
inc
nop
aaa
add
dec
sar
imul
push
cmp
xchg
xchg
rcll
ja
clc
jo
mov
ss
xchg
adc
push
cmpsb
insb
xchg
add
inc
fs
and
imul
movsl
js
sbb
flds
aad
xchg
or
or
xchg
incl
mov
jnp
inc
sahf
fiadds
movsl
push
das
stc
and
push
mov
push
or
mov
pop
xchg
pushf
fnsave
incl
sarb
push
mov
mov
bound
lahf
dec
ret
mov
incl
nop
xor
push
inc
xor
into
mov
or
pop
pop
popa
adc
aas
lcall
test
mov
test
xor
dec
outsb
loope
fcom
ja
and
mov
jmp
jl
push
popl
dec
and
jl
jle
xchg
xchg
push
ljmp
pushf
lock
or
aas
lds
jle
mov
shlb
xor
xchg
lock
sub
inc
and
test
rolb
sbb
insl
xchg
cmp
inc
mov
xor
jecxz
sbb
push
cmp
repz
mov
and
cmp
nop
push
daa
or
dec
data16
mov
mov
sub
clc
mov
push
xchg
lcall
sub
dec
cmp
xchg
addr16
leave
pop
pop
mov
push
cmpsb
adc
in
add
cmp
rorb
outsb
and
fwait
mov
adc
sub
aaa
push
or
dec
loope
push
jmp
sub
mov
or
adc
in
enter
xor
mov
dec
incl
xor
mov
fisubs
sti
xor
shll
out
push
ret
sahf
and
add
nop
lea
jle
or
in
loope
pop
scas
rorl
inc
cld
jle
xor
call
xchg
jbe
fbstp
dec
notb
sub
cmp
in
fbstp
mov
and
push
mov
fcomip
call
repz
xor
inc
sub
mov
mov
mov
repz
jmp
pushf
inc
sbbb
cmp
lret
call
ror
std
or
test
mov
dec
jbe
inc
mov
sub
inc
inc
sarl
xor
pop
cltd
push
cwtl
or
push
shl
cld
pop
cld
negb
cwtl
shl
and
sbb
jne
pop
int3
nop
inc
stos
add
mov
shll
aas
and
sbb
pop
xchg
mov
repz
fs
inc
mov
movsb
jo
gs
mov
add
stos
testb
xor
jg
call
jp
cmp
jge,pt
or
cltd
mov
mov
pop
and
and
sbb
in
clc
add
pop
add
mov
push
lods
adc
push
push
out
dec
je
mov
adc
ret
inc
fstl
and
je
push
test
test
pop
inc
ljmp
inc
mov
adc
js
cmp
rorl
dec
pushl
jl
pop
sub
movsb
hlt
and
sbb
dec
mov
jecxz
fidivrl
xor
bnd
incl
pop
mov
out
lea
xchg
movsl
add
lret
mov
xchg
cmc
adc
jecxz
inc
jbe
addb
push
mov
les
xor
push
test
lcall
lea
test
jnp
mov
pop
ljmp
dec
incl
adc
sarb
xchg
roll
inc
lods
lods
sahf
push
loopne
addr16
roll
jmp
xor
or
push
call
and
cmp
push
test
inc
sar
leave
stos
push
sbbb
sbb
mov
mov
sahf
add
inc
int
sbbl
adc
pop
adc
test
lock
mov
ljmp
mov
add
jle
fsts
add
inc
jae
in
test
incl
fcomps
out
add
jecxz
mov
outsl
addl
out
cli
or
pop
inc
dec
push
or
cmpb
sub
xchg
lcall
lods
stos
adcl
jge
leave
cmc
bound
popf
fsqrt
out
cltd
iret
imul
shl
pop
push
popa
xor
mov
xor
call
loop
and
mov
sbb
inc
mov
call
int
icebp
mov
and
push
xchg
pop
adc
ljmp
int3
mov
sub
pop
test
shlb
call
sbb
sbbb
cmc
rolb
xchg
fldcw
stos
mov
xchg
xorb
mov
sub
xchg
adc
dec
outsl
fdivr
incl
push
or
pusha
movsl
inc
pop
add
xchg
sbbb
ljmp
adc
adc
mov
push
xchg
bound
je
add
sbb
decl
or
es
fisubrs
adc
mov
adcb
cmp
adc
dec
add
inc
sbb
sub
dec
aas
cmp
or
mov
and
mov
ror
in
inc
push
scas
dec
adc
inc
or
mov
idiv
mov
jns
push
je
popa
mov
or
call
jg
jg
adc
lret
add
mov
psllq
mov
mov
mov
call
jg
decl
or
pop
push
pop
adc
push
push
sub
jmp
push
mov
and
sbb
sbb
mov
into
inc
jmp
sbb
adc
stc
mov
cltd
ud0
test
into
insl
mov
ret
repnz
push
aas
sub
insl
fcmovne
inc
mov
lcall
mov
rorb
push
mov
insl
not
push
jg
inc
xlat
sbb
dec
jbe
and
dec
lahf
mov
push
push
jo
fmuls
inc
mov
add
mov
movsb
mov
ret
addb
subb
mov
mov
dec
lods
push
jle
fwait
sub
pushl
ljmp
subb
test
sbb
cld
inc
jge
aam
jne
xchg
push
jmp
popl
adc
inc
inc
pop
out
dec
pop
ss
dec
sub
idivb
dec
imul
aad
addr16
das
cmp
mov
lods
inc
test
lahf
dec
icebp
icebp
jg
test
in
sub
or
mov
cli
mov
sub
decl
inc
push
test
inc
and
pushf
mov
adc
ljmp
rol
or
cld
outsl
mov
dec
ja
mov
and
mov
sbb
jl
test
call
xchg
cwtl
hlt
xor
decl
push
xorb
pop
lahf
rclb
shlb
mov
test
shrb
outsb
and
push
fstp
jge
mov
inc
push
fs
fwait
mov
xor
out
shrl
cmp
loop
or
test
adc
out
cld
push
nop
add
mov
and
inc
cmp
jns
adc
pusha
ljmp
fcmovnbe
lahf
aas
or
cmpsl
xchg
pop
ret
lock
inc
adc
ficoml
incl
or
cmp
scas
nop
mov
movl
adc
cwtl
and
into
shrb
pushl
push
pop
sbbl
xchg
fdivr
jecxz
data16
mov
add
es
cli
rcl
aas
mov
mov
or
xchg
and
jmp
daa
lret
mov
xchg
xor
mov
fdivp
dec
addr16
stos
stos
cwtl
vpcomb
inc
jmp
xor
enter
bound
mov
inc
jg
pop
xchg
inc
sub
stc
fisubs
mov
xor
jg
sub
mov
mov
ljmp
das
dec
lcall
lcall
cs
sahf
mov
sub
sub
pop
mov
mov
mov
call
iret
adc
or
les
push
aad
dec
ds
testl
decl
in
inc
rorb
or
pop
pop
stos
nop
mov
xor
push
cmp
jmp
mov
inc
popf
gs
dec
xor
fst
pop
dec
ss
cltd
push
roll
lcall
test
jmp
mov
int3
loopne
loop
xchg
add
fwait
or
and
pop
testb
sti
push
iret
mov
mov
jb
push
xor
add
aam
xor
mov
inc
dec
in
rol
icebp
pushl
sub
das
mov
aas
test
push
cmp
aad
xor
push
push
test
cmp
lcall
or
cmp
andb
xchg
cmp
mov
hlt
sbb
adc
lcall
mov
aad
loope
outsb
sub
and
push
add
mov
cmp
lret
test
repz
stos
out
jnp
push
cmp
test
dec
push
jg
lock
mov
nop
fsubrl
loop
test
add
inc
pop
lock
mov
clc
or
scas
inc
mov
pop
push
mov
add
shll
sub
sub
lcall
dec
stos
jo
cmp
mov
inc
jns
inc
xlat
cld
daa
cmpl
push
inc
adc
dec
adc
push
mov
popa
jmp
mov
adc
mov
sub
cltd
js
adc
scas
ja
mov
or
sar
adc
jle
not
movb
sbb
inc
fcmovnbe
out
or
sub
daa
jo
xor
xor
repz
cli
lds
sub
cltd
xor
sbb
iret
mov
arpl
jp,pt
pop
ds
jmp
addr16
adcl
adc
fiaddl
and
push
add
inc
clc
mov
aam
sub
movsl
and
outsl
movsl
ljmp
ljmp
pop
xchg
movsl
or
clc
stos
jb
aad
xor
cwtl
ljmp
sahf
mov
int
xor
dec
jo
pop
push
sbb
aad
and
sub
jb
fimull
jo
push
adc
lock
push
sub
mov
test
pushl
out
xchg
test
or
imul
incl
push
mov
sbb
jnp
sbb
int3
add
aas
sub
push
jo
adc
push
xor
push
cli
adc
fsub
fwait
nop
aas
jne
cmp
mov
iret
shrl
sbb
xlat
jo
test
js
inc
xor
ret
jo
ret
int3
and
cmp
stos
rcrb
lods
xchg
dec
lock
mov
xchg
enter
mov
lods
sbb
push
sub
xor
decl
push
andl
cmp
test
scas
leave
mov
les
sar
incl
jmp
sarl
sbb
incb
mov
jbe
pop
shl
ljmp
lcall
xchg
xor
xor
cmpsb
or
loope
mov
fs
pushl
ja
sbbb
mov
cli
sahf
sbb
mov
adc
call
bound
nop
jge
or
mov
xorb
rolb
test
jne
mov
inc
lret
call
enter
dec
add
xchg
jecxz
imul
inc
out
xchg
mov
cltd
push
mov
icebp
js
repnz
out
fsts
jecxz
movsl
jg
xchg
das
pop
mov
aas
pop
fcoml
adc
xchg
cli
push
xchg
fldenv
add
lahf
mov
imul
loope
movsb
mov
xor
imul
scas
ljmp
lds
in
inc
xchg
loopne
out
dec
add
nop
cmp
mov
jo
popa
sub
loop
sub
add
mov
cmpsb
mov
out
inc
test
decl
stos
mov
setae
inc
imul
xchg
mov
int
out
ss
and
jmp
xchg
xchg
cltd
inc
and
or
adc
xchg
fistl
sub
scas
aam
decl
add
aam
dec
push
inc
lret
leave
sub
dec
jecxz
adcl
mov
push
dec
jg
cwtl
sub
sarl
adc
test
push
sbb
xlat
andl
out
adc
andb
ds
mov
sub
jae
pop
adc
iret
cld
add
fisttps
fldl
push
mov
ljmp
add
jbe
inc
aam
sbb
mov
sub
push
incl
adc
iret
add
dec
xchg
xor
js
inc
cmpsl
adc
jnp
add
pop
in
clc
test
pop
icebp
ljmp
pop
mov
popa
mov
sbb
into
lahf
testl
ljmp
dec
sbb
cmpsl
push
pop
int3
shrl
push
movsl
cmp
call
cld
pusha
xchg
mov
xchg
add
lock
xchg
scas
mov
dec
out
orl
inc
pop
sbb
xchg
add
inc
ret
mov
test
lds
cwtl
and
enter
lcall
icebp
mov
xor
sti
aam
test
fldenv
mov
sub
adc
push
addl
inc
pop
sub
fxch
popf
enter
mov
popa
inc
int3
mov
and
test
fisubrl
stos
fstpt
mov
fdivrs
loop
decl
test
movhps
xchg
test
jbe
dec
cmp
fmul
mov
in
loop
add
cmovg
outsb
outsl
sbb
pop
add
es
lds
fcomip
pop
in
roll
xor
lcall
and
adc
jg
lods
lcall
rorl
icebp
mov
ja
sub
ljmp
adc
mov
bnd
xchg
push
mov
and
loope
mov
fisttpl
adc
call
cld
fistpll
inc
fidivrl
inc
incb
xchg
sub
add
add
mov
add
into
mov
adc
adc
call
sub
push
mov
add
dec
fs
mov
cmpsb
cmp
mov
and
loope
call
inc
mov
and
and
rcrb
xchg
lcall
and
push
jmp
cmpsl
dec
jnp
ret
push
ss
inc
lahf
or
cmp
xor
jle
das
sar
inc
dec
or
cmp
inc
sub
push
mov
test
cmp
decl
and
out
inc
sbb
jmp
lret
sbb
fwait
call
pop
call
push
stos
std
call
lock
out
mov
inc
cmp
mov
std
xchg
adc
add
mov
dec
idivb
cmp
fcompl
data16
jne
fbstp
sbb
fstpl
sbb
mov
andb
shlb
ret
push
test
sbb
mov
fwait
inc
das
test
pop
les
rcll
lcall
push
add
dec
pushf
jne
lcall
jns
scas
test
dec
mov
leave
lret
sbb
ss
ljmp
dec
inc
or
popa
cmc
and
jo
gs
incb
dec
jle
and
lret
adc
ficoms
call
jle
sbb
and
mov
pause
sub
shrb
std
cmc
ss
call
add
rcll
xor
aam
sub
sub
mov
jne
jge
mov
jmp
inc
jne
jno
pop
sub
fldenv
push
pop
lahf
mul
into
addb
adc
out
ljmp
cld
sbb
mov
inc
mov
loopne
cmp
cmc
and
mov
das
push
push
cmp
call
cmp
mov
movsl
orl
add
pop
push
xor
lcall
sub
int3
xchg
test
jmp
sub
push
cmp
jl
add
call
fwait
imulb
in
add
sbb
addr16
loop
xor
push
pop
les
jno
std
fnsave
cmp
add
jno
dec
fldcw
pop
in
push
and
add
or
push
adc
repnz
sub
in
mov
call
sbb
lea
out
inc
addl
loope
mov
and
or
push
jno
jecxz
jnp
icebp
jge
shll
and
adc
jl
xchg
or
repnz
aad
mov
and
inc
jb
cmp
push
aad
jnp
mov
int3
jo
test
rorl
ja
out
subb
lods
incl
push
loopne
jg
adc
mov
call
adc
testb
sbb
and
jl
jle
lcall
fildll
orl
addb
lods
ljmp
cld
cld
add
add
pushl
sub
xchg
mov
out
xor
sub
test
lcall
loop
mov
xchg
adc
xchg
adc
pushl
or
dec
jecxz
push
nop
out
xchg
dec
cmp
outsb
shlb
lahf
pop
dec
test
xor
jb
test
sbb
add
mov
test
add
jb
sub
and
cmp
clc
add
movsl
aam
xchg
fadds
stos
mov
add
mov
in
js
shlb
cmpb
pushl
pop
aam
cmpsb
pop
cmc
dec
mov
adc
pop
aad
loope
fldcw
pushl
inc
or
mov
jg
shrb
cmp
lods
mov
incl
push
ret
jl
jmp
pop
or
lret
mov
jo
ljmp
cmpb
out
mov
in
sbbl
adc
dec
push
ret
cmpsl
scas
dec
and
mov
out
incl
lods
mov
cmc
or
inc
mov
subl
cld
ja
pop
pop
push
ljmp
inc
sub
pushl
and
jmp
mov
ds
push
xchg
sbb
ret
int3
or
xlat
in
adc
xchg
push
and
icebp
xor
xor
imul
iret
push
loope
ljmp
and
iret
inc
dec
cmpb
push
pop
movsb
cmp
sbb
cmp
js
mov
nop
sahf
andl
lret
inc
leave
scas
sbb
mov
cmp
pop
push
and
mov
inc
imul
mov
pop
mov
stos
scas
cmp
or
pop
loopne
pushl
push
inc
xor
aam
xchg
ljmp
mov
movsl
dec
cmpsb
xchg
jnp
and
and
sahf
jle
cmp
lret
ljmp
aam
add
adc
dec
cld
lcall
in
cmc
push
mov
cltd
enter
insb
mov
dec
ljmp
inc
add
mov
cmp
cmp
adc
enter
insl
clc
loope
orl
out
cmp
xchg
dec
fdivrl
and
add
cmc
add
sub
les
or
mov
or
call
fs
pop
test
ss
enter
mov
imul
decl
push
lods
aas
sbb
sub
cmp
lds
xlat
jg
cmp
jmp
in
adc
popf
sbb
xchg
mov
sub
sbb
cmp
nop
jmp
push
xlat
hlt
xor
pop
ds
lret
xchg
ja
mov
xor
outsb
cmp
cld
push
mov
inc
add
adc
push
aas
loop
pop
fsubl
sub
clc
cmp
ljmp
pop
inc
jp
mov
lods
les
sub
dec
inc
bound
js
and
jne
xchg
pop
outsb
mov
mov
es
inc
jg
iret
lret
sbb
mov
call
std
repz
and
out
jnp
hlt
test
cmove
xor
into
pop
call
mov
adc
push
adc
test
lret
sbb
call
adc
or
add
sub
jbe
adc
test
dec
call
dec
adc
or
mov
jp
dec
or
xor
jg
incl
jecxz
xor
daa
mov
lods
in
or
mov
lock
ljmp
iret
xchg
clc
dec
fcomp
dec
mov
adc
dec
das
sub
xlat
ljmp
push
gs
and
inc
adc
xor
cmp
inc
mov
mov
out
fildll
xchg
add
neg
mov
sub
mov
sbb
add
gs
ljmp
sti
push
lret
push
sub
jae
and
add
jnp
push
xchg
xor
pop
sub
stc
cld
pushl
sbb
and
je
push
das
dec
xor
inc
dec
enter
pushl
enter
mov
out
pop
insb
pusha
mov
lea
jp
hlt
inc
hlt
aad
or
fbld
insb
jl
mov
sub
cmp
jae
xchg
pop
push
push
movsl
or
or
pop
xor
pop
add
pusha
pop
movsl
shlb
insl
jne
pushl
data16
sete
cwtl
sti
aas
cs
imul
jmp
cmc
sahf
pop
sbbl
adc
lcall
subl
movsb
int3
incl
sub
lcall
and
cmc
cmp
pop
shlb
jno
cs
dec
nop
mov
cli
mov
sarl
iret
ret
inc
adc
push
or
adc
inc
push
and
dec
mov
cmp
nop
push
arpl
aaa
push
push
mov
ds
add
and
inc
sbb
add
dec
decl
add
cmpsb
xchg
repnz
enter
or
sarb
incl
push
insl
icebp
xor
pusha
push
jp
dec
add
nop
cmp
adc
push
hlt
push
repnz
cmpsl
add
fnstenv
and
sub
cmp
insl
ds
adc
xor
xor
sbb
movsl
mov
xor
cmp
mov
or
lods
out
and
adc
in
add
call
insl
jb
movsb
mov
pop
shll
or
dec
popa
add
inc
test
decl
in
lret
subb
jnp
sahf
mov
ror
mov
movsl
push
decl
subb
loop
fidivrl
cmp
addb
dec
loopne
xchg
aas
pop
adc
in
cmpsb
data16
call
dec
pop
add
flds
sbb
cmc
out
inc
pop
pop
test
adc
enter
add
cli
adc
cmpb
inc
push
and
mov
xorl
xor
sbb
repz
enter
test
jno
or
pop
aam
pop
xor
sub
mov
jmp
dec
adc
mov
fsubrs
ss
or
sbb
adc
aam
jns
lods
cld
das
lahf
jp
ret
lods
xchg
mov
incl
jmp
cmpsl
lret
dec
push
daa
out
dec
sub
into
xchg
addr16
sbb
or
add
lcall
cmp
jns
stc
in
and
pop
into
jp
adc
pop
popa
sub
cmp
sub
sbb
sub
add
sub
sub
in
inc
push
add
fists
mov
lock
push
cld
pop
aas
cmp
int
or
subb
inc
push
in
mov
push
dec
or
add
das
add
add
add
cli
adc
insb
dec
ljmp
ss
sub
lea
jnp
sti
loope
push
cpuid
loope
inc
mov
inc
jg
loope
stc
and
pop
sbb
sub
test
mov
ret
pop
ljmp
xchg
clc
clc
lret
sub
insb
pop
mov
mov
or
cmpsl
sbb
movsb
and
mov
clc
es
lcall
add
cmp
mov
sbb
xor
lods
andl
push
add
add
incl
js
jp
adc
incl
andl
mov
jl
inc
pop
fs
xor
js
shll
lods
jecxz
xor
pop
pop
jno
pop
cmpsl
push
adc
mov
xchg
adc
decl
inc
ret
data16
push
mov
jl
fnstcw
dec
rcl
adc
outsl
ljmp
jg
dec
add
dec
leave
dec
mov
sbbb
push
or
ljmp
lahf
adc
mov
fisubs
nop
dec
pop
es
cmpsl
xchg
loopne
jne
mov
pop
pushl
icebp
pop
fisubrl
add
js
xor
int3
inc
add
lds
dec
imul
decl
dec
call
pop
test
mov
fsubl
xchg
xchg
adc
jne
sub
orb
pop
icebp
incl
inc
icebp
fwait
sbb
loopne
roll
call
mov
out
stos
ljmp
hlt
and
xlat
test
stos
jnp
sbb
rorl
inc
jecxz
inc
sbb
repz
in
sub
mov
aas
mov
wbinvd
push
pop
add
mov
negl
dec
testl
or
cs
dec
and
insl
lret
lret
clc
cmp
adc
sub
test
sbb
jg
ja
cmp
nop
mov
sub
cltd
rorb
ds
mov
shl
jl
scas
push
sbb
test
std
xchg
lea
mov
pop
data16
dec
rorb
mov
jl
inc
frstor
xchg
loopne
and
pop
arpl
stc
rorb
xor
jbe
pop
push
lods
xchg
xchg
bound
dec
xorb
push
adc
fidivrs
jg
mov
dec
cltd
pushf
jne
pop
sub
decl
mov
add
in
ljmp
aas
xor
jmp
add
adc
aas
adc
mov
and
dec
lea
pop
icebp
ljmp
mov
jbe
cld
cmp
rcll
cld
push
std
lcall
jl
inc
mov
xchg
xor
xchg
mov
cmpsl
adc
jg
or
jno
sahf
inc
ret
adc
mov
mov
jmp
cmp
cmp
or
push
xor
fwait
bound
sbb
int3
jl
lods
inc
test
adc
push
ljmp
mov
test
mov
daa
int
push
imul
je
call
xchg
adc
es
sbb
je
sti
xchg
flds
bound
nop
lcall
pushl
jo
sbb
inc
lock
frstor
xchg
aam
sub
xchg
add
or
decl
pop
inc
add
shll
scas
push
decl
and
in
mov
lods
or
shl
jmp
push
in
mov
jecxz
push
and
ljmp
mov
int3
pop
cmp
je
testl
ret
pushf
cmp
mov
test
rcrl
push
ljmp
cmp
bound
sbb
mov
and
or
or
and
adc
mov
jl
ret
loopne
and
jnp
push
nop
pop
cmp
mov
push
rorl
or
mov
aaa
stc
mov
and
decl
xchg
jmp
mov
loopne
or
mov
mov
andb
fstpt
dec
xchg
sbb
pop
inc
and
cmp
sarb
pusha
lods
frstor
jne
cmp
xor
fcomip
add
jo
mov
stc
push
add
shll
hlt
sbbb
xor
xchg
lret
pushl
push
and
mov
cmp
mov
add
and
add
jo
icebp
mov
xor
ss
ljmp
or
lahf
jnp
and
xchg
test
shr
cmp
jo
adc
sbb
jg
jb
stc
mov
push
xchg
inc
popf
mov
lock
add
daa
jno
fidivl
mov
data16
incl
std
add
mov
and
popl
jno
inc
lods
std
or
and
sbb
xchg
aad
mov
pop
cmp
or
push
sub
add
xchg
sub
inc
sub
add
insb
and
in
scas
in
popf
mov
fwait
aaa
std
pop
dec
and
loope,pt
mov
flds
decl
je,pn
mov
jo
mov
movsl
das
mov
lods
arpl
xlat
ficoms
or
pushl
cmc
shrb
mov
adc
pop
xchg
xchg
repnz
mov
leave
sub
jmp
and
js
xchg
xor
and
in
add
or
dec
shufps
iret
addr16
std
js
nop
daa
mov
mov
jle
adc
andb
sbb
add
add
pop
pusha
jb
loope
jmp
sub
clc
mov
nop
stos
xor
and
sbb
xor
sti
fisttps
ret
add
in
mov
andb
mov
ret
adc
inc
and
arpl
xchg
and
or
push
ficompl
dec
and
inc
and
addr16
stos
adc
mov
and
jmp
mov
xchg
xchg
xor
daa
jp
xor
pusha
add
icebp
lcall
rcrb
fs
dec
mov
das
in
lods
pop
mov
sahf
int3
scas
cmpsl
sarl
imul
push
into
pushf
pop
xchg
adc
fdiv
cmpsb
or
xchg
lret
pop
hlt
pushl
pop
cmpsl
test
sub
filds
ret
jge
push
ljmp
inc
sbb
pop
or
inc
xor
dec
test
icebp
pop
mov
xlat
push
inc
pop
jge
add
add
subb
jle
nop
xchg
mov
pop
shl
adc
push
das
sbb
xchg
xor
call
or
stos
enter
add
push
sub
push
cmp
cmp
push
mov
xlat
lcall
inc
dec
xchg
pop
xor
pop
cmp
xchg
mov
popa
xor
add
mov
mov
lcall
push
aad
fwait
dec
jo
lods
cmpsb
mov
mov
fsubs
jle
pop
xchg
lds
adc
cmc
cmpb
cmp
scas
xchg
cmp
hlt
dec
leave
xor
mov
jmp
lret
xor
jo
in
mov
cltd
push
mov
jae
or
and
cmp
mov
test
cltd
rorb
push
push
dec
loop
mov
dec
jnp
test
cmp
lcall
mov
dec
out
sbb
lock
or
orl
mov
cmp
arpl
ret
push
clc
loop
imul
mov
add
jmp
mov
push
sub
cwtl
mov
jp
xchg
inc
nop
add
fsts
incl
mov
mov
cmp
xor
push
adc
mov
repnz
int
sahf
inc
mov
adc
lret
int3
add
clc
repz
sbb
inc
sbb
pop
test
mov
pop
dec
xor
and
fpatan
and
inc
cmp
in
jg
mov
pop
mov
add
mov
add
stos
jmp
movsb
negb
inc
stos
pop
enter
out
insb
pop
lds
nop
stc
stos
pop
enter
push
xchg
idivl
mov
mov
dec
push
imul
and
inc
xchg
sub
lcall
dec
xchg
cli
nop
cmp
push
inc
popf
jmp
xor
ljmp
xor
test
xor
nop
and
inc
xor
pop
mov
sub
adc
mov
push
push
xor
call
inc
push
cld
push
pusha
push
decl
jns
dec
sbb
test
push
in
adc
decl
or
and
aas
cmp
sahf
lret
popf
aad
pop
jae
int3
mov
incl
adc
imul
lock
adc
ret
mov
xlat
mov
push
or
decl
inc
inc
or
je
pop
decb
and
cmp
jecxz
push
xchg
shlb
cwtl
mov
aam
push
jno
mov
loopne
mov
mov
push
pushf
pushl
cld
ljmp
mov
xor
dec
daa
mov
pop
lret
jmp
fs
sub
ljmp
rol
out
ret
rclb
and
aam
push
lcall
add
push
addl
sbb
pop
mov
mov
mov
mov
jmp
mov
xchg
adc
pop
and
pop
daa
or
push
mov
test
aas
push
decl
ss
repz
test
inc
add
ljmp
cmp
lock
sbb
xor
and
sbb
xlat
inc
sub
pushf
adc
lcall
subb
push
xchg
aad
jne
mov
and
add
sbb
mov
sbb
cmc
lcall
mov
sbb
and
push
xor
mov
icebp
lret
xchg
mov
repnz
push
xchg
pushl
loope
popf
add
mov
mov
inc
mov
dec
push
pop
lahf
jg
mov
in
or
addl
cltd
clc
pushl
jmp
and
ds
or
mov
and
or
xchg
lret
xor
adc
dec
push
push
enter
gs
mov
mov
mov
mov
push
fwait
jge
sub
call
or
or
pop
lret
push
int3
jp
jge
int
pop
adc
lods
cli
pop
faddl
mov
arpl
je
mov
lcall
cld
lret
pop
mov
lods
push
pop
push
cs
adc
test
dec
test
sahf
cld
nop
mov
jg
adc
pop
sub
push
push
sbb
lcall
add
ficoms
aas
mov
pusha
repz
adc
sbb
pop
hlt
decl
push
push
ljmp
mov
shr
mov
cmp
dec
cli
decl
or
mov
adc
call
ret
int
movsb
and
ljmp
faddl
aad
mov
or
and
sub
lahf
and
dec
sbb
inc
shrb
cmp
rcl
enter
dec
xor
lods
xlat
notl
cmc
loopne
or
dec
pushl
mov
js
inc
lock
add
dec
jge
fisttps
decl
arpl
jmp
jo
inc
mov
lea
ret
lds
inc
popf
iret
and
call
loopne
push
rorb
and
push
pop
jmp
mov
dec
fbld
mov
loopne
addr16
mov
mov
cmpb
test
into
fbld
dec
jbe
or
lret
push
repz
mov
and
movsl
movsb
mov
sahf
lcall
push
cmp
call
push
adc
ds
jo
data16
cmp
push
shrb
dec
bound
popl
dec
call
sbb
ret
cmp
sbb
fcmovb
pop
fadds
or
out
xor
xchg
inc
push
mov
and
incl
mov
hlt
dec
pop
lock
jnp
dec
enter
insl
jbe
shll
mov
test
pop
loopne
call
jge
fisttpl
jno
mov
sbb
dec
push
nop
outsb
and
fisttps
loopne
loop
mov
pop
push
mov
xlat
xchg
pop
hlt
ljmp
outsl
xor
imul
pop
mov
adc
sbb
gs
decl
inc
push
pop
in
push
jle
inc
pusha
xchg
push
mov
cmp
mov
inc
mov
sbb
mov
stc
ret
pushf
movsl
dec
add
shrl
decl
jecxz
push
jl
mov
roll
imul
insl
sbb
lcall
mov
out
cmp
cli
dec
and
jl
or
orl
lods
inc
cmp
pushl
jno
sbb
or
inc
fcoms
sub
out
xchg
and
lcall
pop
mov
dec
cltd
lods
dec
shlb
push
add
leave
mov
or
jb
and
ljmp
leave
into
icebp
dec
lcall
cmp
cltd
jg,pn
outsl
subb
je
cmp
fwait
movsb
lods
fcomip
outsl
rolb
cmp
outsb
leave
add
loop
and
mov
cld
pushl
sub
lds
lret
sub
call
fsubrl
and
pusha
ret
sbb
jo
les
sbb
jmp
xor
and
mov
sbb
inc
cwtl
or
mov
rclb
lcall
bound
movsl
mov
pop
enter
jmp
adc
jae
sub
xchg
sub
lcall
sbb
out
mov
ljmp
adcl
aam
orb
or
add
mov
xchg
loopne
sar
sbb
add
push
dec
ljmp
add
fidivrs
clc
out
cmpsb
jno
mov
mov
nop
mov
cmp
dec
pop
mov
add
or
popf
ja
cmp
xchg
mov
sub
or
pushl
xchg
or
aas
mov
xchg
lcall
dec
xor
and
test
out
in
test
jns
jmp
nop
xor
aad
inc
jmp
cmp
pusha
jmp
push
shll
mov
xchg
push
iret
or
xor
xchg
rcrl
mov
stos
mov
add
das
scas
jl
mov
lahf
adc
dec
mov
sub
ret
cld
add
inc
jmp
xlat
and
aad
aas
jnp
mov
jl
or
mov
cmp
or
addr16
and
mov
lahf
pop
sbb
incl
inc
lock
pmovmskb
jno
loope
ja
aam
pop
jmp
mov
incl
add
mov
andb
mov
pop
aam
aad
push
adc
mov
dec
popa
jp
jmp
daa
les
aas
stos
stc
mov
sub
test
fisttpll
mov
repz
imul
sub
inc
cld
mov
inc
mov
and
jl
push
inc
sub
ja
xchg
stc
ljmp
inc
and
sub
dec
lock
imul
subl
addl
adcb
ljmp
or
cmp
fwait
add
mov
sbbb
stos
adcb
sbb
ljmp
out
inc
pusha
jo
jno
cltd
sub
or
rorb
lret
incl
and
sub
sub
jl
jbe
mov
mov
mov
jmp
js
es
int3
in
cmp
cwtl
mov
pusha
mov
or
fs
js
jg
lret
adc
lret
dec
mov
in
pushf
add
movb
ljmp
in
or
xchg
test
ss
out
hlt
adc
dec
enter
pop
xchg
mov
pushl
leave
aas
adc
xor
pop
iret
js
sbb
das
pop
xchg
std
xor
into
mov
adc
out
inc
and
dec
xchg
or
test
lcall
add
ja
movsb
mov
lea
std
ja
xor
or
mov
sahf
adcb
or
mov
movb
push
je
sbb
jg
push
loopne
jo
sbb
push
jl
lock
push
sbb
xchg
or
ds
mov
call
or
ficoms
popa
jae
sub
insl
popf
roll
popf
cmp
mov
pusha
adc
out
fildll
loopne
pushf
aas
int3
int3
decb
imul
sbb
cmp
xor
jmp
fcomps
insb
add
push
push
nop
bndstx
into
hlt
inc
std
lahf
xor
mov
push
std
lcall
cmp
sbb
push
divl
or
sub
andb
inc
or
lret
add
fsubrl
inc
mov
dec
cmp
adc
mov
js
ds
cmp
mov
test
sub
sar
jmp
in
lods
add
mov
cli
ret
add
push
adc
iret
sbb
mov
xchg
add
and
pop
jb
cmp
ljmp
sub
sbb
sub
mov
mov
test
jbe
push
daa
xchg
cs
andb
ja
fistpll
dec
mov
test
jecxz
inc
mov
mov
jbe
jg
jle
pop
lock
and
lret
mov
pop
popl
xchg
fstpl
and
xor
mov
loop
adc
inc
mov
std
xor
add
dec
cld
mov
xor
inc
add
aam
add
add
xor
aas
cmp
mov
pop
mov
mov
ljmp
call
dec
test
out
dec
dec
push
mov
and
sub
call
outsl
jmp
adcb
addr16
popf
xor
imulb
pop
orb
mov
xchg
and
cld
jmp
mov
rorl
frstor
mov
incl
mov
jae
cmp
mov
cmp
jmp
mov
mov
movsb
pop
test
and
sbb
cltd
push
mov
repz
xchg
cmp
into
lcall
repz
lods
add
mov
stos
ss
jne
enter
in
mov
adc
adc
adc
lcall
push
loopne
adc
sub
or
insb
fdivs
adc
sti
or
cmc
cmp
mov
sub
mov
and
sarl
filds
iret
ljmp
xchg
inc
fs
fimuls
dec
popa
cmp
aad
pop
decl
add
xor
or
sub
mov
pusha
sbb
out
scas
jmp
sar
decl
icebp
fdivl
in
icebp
mov
idivb
pop
mov
loop
jmp
cli
cwtl
iret
inc
or
inc
cltd
cmp
inc
adc
xchg
stos
add
addr16
sbb
in
xor
call
and
sahf
dec
push
cwtl
cmp
pushf
push
adc
dec
in
adc
adc
mov
pushl
stos
sbb
aad
sbb
ja
idivb
xchg
daa
or
adc
incl
scas
aaa
dec
jmp
cli
icebp
icebp
mov
loope
jae
sbb
sub
adc
enter
in
dec
or
lcall
inc
push
xchg
dec
rcrl
pop
cli
inc
adc
push
call
push
mov
sbb
les
and
sbb
mov
jmp
ljmp
or
push
mov
sbb
dec
sbb
lret
xor
mov
push
inc
repnz
in
jge
and
mov
addl
mov
outsl
mov
pop
cmc
decl
mov
gs
cmpsb
cmp
mov
divl
daa
push
cmpsb
fs
pop
or
and
sbb
adc
jmp
mov
imul
std
xchg
and
dec
jecxz
fs
and
push
inc
out
push
mov
xbegin
pusha
xchg
fmuls
out
sbb
sti
or
mov
sub
inc
push
or
mov
loop
mov
fcoml
jnp
test
mov
incl
aas
test
xor
jecxz
push
into
push
iret
jle
add
incl
lods
in
mov
lds
iret
aas
and
dec
mov
outsb
xor
int3
fdivr
call
xor
test
and
xchg
addl
sbb
mov
fwait
push
cmp
dec
lea
in
addb
cmc
push
mov
ja
incl
cld
inc
and
push
fidivrs
bound
pop
aad
dec
incl
mov
js
adc
inc
jo
cmpsb
mov
jne
pop
cltd
stos
shrb
lds
or
ss
xchg
pop
mov
add
cli
sti
es
inc
jne
add
das
cltd
push
add
aam
fsubp
add
mov
jo
pop
ljmp
dec
inc
add
daa
notl
pop
js
sahf
push
xchg
lcall
mov
xchg
mov
outsl
in
cmc
rcr
cwtl
mov
repz
xor
lcall
xor
sub
sbb
repz
rol
fcmovne
or
dec
sbb
out
add
cmp
push
shll
sub
inc
inc
clc
push
cmpsb
mov
cmpsl
das
cmp
dec
ljmp
clc
ss
pop
cmpsl
std
xor
mov
movsb
cmpsl
popa
jne
jecxz
rclb
mov
inc
and
stc
iret
nop
jecxz
icebp
in
xorb
jb
movsb
add
pop
push
mov
ljmp
loope
pop
lahf
xchg
jb
mov
aas
sbb
pop
jno
loopne
sub
aaa
jns
push
pop
in
pop
outsb
sbb
decl
into
icebp
mov
adcl
push
or
sub
in
mov
push
sahf
adc
call
push
inc
jnp
mov
lcall
test
or
sub
inc
jnp
mov
mov
jmp
or
mov
les
add
sahf
enter
pop
adc
or
sti
jmp
cs
cld
dec
cmp
adc
mov
adc
xchg
sahf
pop
jg
jecxz
call
push
dec
push
pop
and
aad
inc
int3
xor
xchg
inc
lods
dec
jecxz
push
test
mov
js
mov
jmp
pop
fildl
push
jo
les
test
pop
sub
outsl
call
and
les
repz
call
sub
filds
fcompl
rclb
jo
cmp
add
faddp
test
adc
add
in
pusha
cmp
repnz
in
rcll
lods
xor
nop
add
xchg
adc
mov
adc
or
jne
adc
lds
aad
jg
call
mov
inc
add
nop
xchg
scas
add
xor
ret
pop
lock
stos
out
outsb
mov
mov
jne
push
sub
inc
jmp
test
xor
clc
cmp
jge
adc
xchg
lret
fcoml
ss
mov
jge
inc
incb
movsl
sbb
inc
lret
xor
fnsetpm(287
test
jmp
sti
pop
add
inc
iret
rcrl
js
cmp
mov
or
pop
push
fdivrp
test
mov
stos
dec
inc
je
jge
jb
lods
scas
mov
ljmp
xorl
sbb
cwtl
and
in
or
sub
inc
push
lods
jae
jp
hlt
mov
cmp
mov
pop
or
sub
cmpsl
call
mov
and
gs
xchg
gs
xor
sbb
shrb
mov
aam
and
lcall
out
jg
loopne
push
mov
xor
les
mov
sub
decl
loopne
orl
mov
ret
aaa
movsl
sbb
sub
sub
mov
add
jns
insb
or
mov
push
pop
les
add
pop
rolb
xchg
ds
or
js
mov
and
sar
decl
repnz
push
outsl
pop
stos
or
mov
pop
xor
or
dec
push
test
mov
cmp
arpl
rcrl
arpl
sti
xchg
jg
outsl
push
or
es
repnz
lea
nop
push
or
push
adc
arpl
mov
xor
mov
mov
cmpb
add
inc
mov
mov
pop
popf
or
inc
fadd
push
shll
sti
mov
das
popf
push
cmp
mov
clc
ljmp
or
pop
aas
imul
mov
loopne
sahf
inc
jnp
enter
add
pop
sahf
sti
mov
pop
hlt
call
mov
xor
and
dec
cmp
popa
sbb
lret
decl
sbb
loop
xor
fwait
mov
push
mov
loop
hlt
lods
inc
and
pushl
inc
add
sbb
jmp
lock
xchg
repnz
dec
shll
lcall
lds
lock
inc
and
cmp
fadd
xor
cmp
rolb
pop
pop
lcall
ljmp
mov
mov
xor
repnz
test
out
cli
jg
hlt
adc
outsb
data16
dec
push
repnz
xor
and
lcall
pop
inc
jns
mov
dec
adc
outsl
lods
cld
addb
lcall
ljmp
adc
or
aas
pop
xchg
mov
inc
jmp
dec
cmp
jle
add
loop
mov
jg
cli
inc
outsb
mov
fstpt
mov
ret
mov
xor
jns
adc
scas
ja
repz
mov
add
jg
jl
lock
cmp
orl
and
out
stos
jno
pop
adcb
clc
adc
add
jne
dec
jo
cmpsb
dec
stc
ss
pop
push
int
xchg
enter
inc
call
xchg
and
and
sbb
es
mov
push
add
sbb
fcomip
call
lahf
nop
xchg
sbb
lock
lock
jg
xor
out
mov
fnstsw
add
adc
orb
popa
jle
cmpb
jl
sub
in
call
out
fisttps
setns
mov
pop
lcall
adc
and
decl
mov
cmc
xchg
in
mov
mov
and
fisttps
inc
bound
clc
int
lds
pop
dec
add
mov
pop
scas
loop
add
dec
mov
in
push
mov
ja
sarb
call
mov
xor
jo
outsb
push
scas
adcb
ds
jl
popf
mov
ret
popa
xchg
cs
outsl
cli
decl
inc
stos
int3
fucomip
lcall
insb
fisttpll
int
jno
and
leave
cmp
scas
xor
stc
inc
jb
adc
je
xchg
sbb
insb
mov
pushl
mov
dec
push
outsb
dec
inc
mov
stos
es
adc
jmp
dec
cmp
mov
nop
lea
cmpsb
cmp
dec
je
or
out
push
mov
push
aas
jg
je
mov
shll
xor
test
inc
dec
inc
imul
icebp
incl
mov
pop
cmp
dec
or
es
and
add
mov
lcall
xchg
xor
dec
fcoms
mov
into
fldl
fbstp
movl
sub
sub
lock
mov
mov
xchg
or
rcrl
movl
test
out
sub
lcall
decb
push
mov
or
xchg
inc
sub
test
and
pushl
push
ret
lret
test
mov
adc
bound
push
cmc
and
lahf
loopne
jl
add
out
and
andb
vmovss
or
and
mov
test
decl
add
add
and
pop
rorl
aas
loop
call
loopne
sub
pop
mov
dec
push
icebp
push
pop
popa
movsl
nop
push
pushl
outsb
adc
cmp
pop
in
loope
insb
sbb
cmp
les
xlat
sub
xchg
pop
push
add
ljmp
movsb
rcrl
pop
or
dec
adc
jne
mov
or
jge
jle
call
lock
shrl
mov
test
mov
inc
or
pop
test
notb
pushf
jmp
pop
sbb
or
jg
mov
inc
sti
stos
mov
dec
and
inc
sbbb
ret
xchg
jb
das
clc
ljmp
push
and
or
inc
sarl
and
and
shlb
jae
mov
decl
decb
in
xchg
mov
xor
xchg
xor
cltd
mov
sbb
filds
ljmp
cmp
or
pop
or
jmp
xchg
mov
repz
xor
xor
call
mov
pop
dec
fdivrl
push
mov
push
xchg
mov
rorb
mov
lcall
xor
fdivs
mov
inc
xchg
adc
out
dec
test
mov
mov
xchg
xchg
jmp
inc
inc
push
sbb
inc
sbb
clc
adc
in
mov
mov
and
fstp
stos
test
add
ljmp
sub
je
inc
ljmp
je
add
add
inc
call
icebp
add
mov
push
icebp
lock
adc
xor
inc
loopne
mov
add
in
js
shl
jge
shl
dec
adc
mov
bound
incl
cmp
fcoml
mov
pop
and
cmc
fdivs
clc
and
mov
out
sar
fstps
xchg
xor
jb
inc
cmp
js
sbb
ljmp
aam
ret
cmpsl
stos
inc
repz
pop
push
out
fiaddl
push
xor
push
dec
adc
fmul
mov
push
insb
cmp
push
cmpl
call
movl
shrl
sbb
test
lret
js
imul
aad
add
sahf
std
lcall
jmp
out
in
in
cmc
add
or
call
add
jb
out
int3
lahf
adc
and
and
mov
gs
or
sar
icebp
mov
cmp
mov
mov
shld
inc
je,pn
sbb
dec
jle
call
pusha
in
jns
movsl
mov
scas
fstl
jmp
inc
lea
call
cltd
mov
or
cmpsl
rolb
dec
cmp
cs
sbbl
stos
and
add
push
mov
in
jo
inc
or
mov
aam
stos
clc
push
xor
sahf
push
subl
mov
ljmp
call
ljmp
sub
push
lds
out
inc
nop
adc
scas
cmc
sub
lret
fidivl
or
enter
jg
out
mov
cwtl
lret
mov
mov
clc
pop
mov
insl
push
fnsetpm(287
mov
inc
sub
mov
adc
fisubrs
sbb
dec
mov
stc
adc
inc
stos
add
push
test
aad
add
or
pushl
jmp
inc
cmp
jp
jecxz
dec
push
push
add
mov
cld
and
push
fstpt
stc
or
insl
push
adcl
je
cltd
add
fscale
pop
or
push
jmp
ljmp
loop
push
fidivs
mov
ret
cmpl
lret
or
sarl
sbb
mov
or
in
sar
call
pushf
sahf
nop
nop
es
std
sti
and
popf
loope
subb
mov
call
jecxz
arpl
or
xor
aas
dec
movsb
shrb
aas
shrb
int3
sbbb
dec
decl
push
xor
and
loope
testl
jmp
adc
xor
cmpsl
dec
sbb
sbb
pushf
shl
insl
cmp
adc
push
aaa
add
and
jg
icebp
or
test
push
jne
dec
je
and
push
push
lock
pushl
loopne
hlt
xchg
xor
ss
xchg
lahf
lods
adc
into
adc
out
xor
ljmp
cmp
xor
in
adc
dec
inc
sbb
adc
pop
enter
jmp
rorl
inc
and
jo
xchg
cmpsl
mov
scas
clc
decl
xchg
sub
pusha
js
push
xchg
ds
or
test
jmp
and
rorl
repnz
test
pusha
push
incl
jmp
jo
sub
roll
repz
std
aas
lea
mov
lock
mov
les
adcl
ljmp
inc
aaa
scas
std
lahf
add
js
pop
rcll
add
int
xchg
cmpsb
mov
mov
es
call
dec
dec
test
bound
orb
jb
push
iret
sbb
mov
stos
lock
mov
mov
hlt
test
and
jg
adc
jp
cmp
xchg
pop
cld
mov
xor
test
cmp
mov
mov
xor
in
aam
andl
sub
sbb
xchg
jmp
lret
cmp
xor
add
xchg
inc
jno
adc
pushl
sbb
mov
movq
add
fiadds
xchg
inc
adc
ss
fbstp
and
mov
xor
std
shll
stos
and
mov
adc
sub
mov
mov
dec
rclb
xor
lods
push
std
lcall
mov
push
fbstp
pop
cld
and
fsubrp
lret
sub
fsubr
add
jns
fisttpl
dec
pushl
and
or
pop
mov
jl
imull
or
es
lcall
dec
push
xor
loopne
jge
shll
sub
and
jmp
cmc
mov
subl
push
pushf
cmp
jmp
adc
cmpb
in
movl
decl
je
rcrb
jmp
mov
xor
sbb
and
dec
inc
or
repz
mov
cmp
push
lods
inc
das
sar
fisttpl
hlt
out
xor
fisubs
pop
fisttpll
and
clc
fyl2x
daa
ret
add
call
jle
mov
cli
sbb
ret
aas
fs
fsubp
xor
stc
shrb
push
or
sbb
add
cwtl
fmuls
setp
mov
call
cmp
cwtl
fnsave
nopl
sbb
and
out
mov
repnz
mov
sub
rorb
iret
xor
add
dec
rolb
mov
dec
cltd
mov
pop
gs
es
cmp
in
adc
and
cmpsb
push
pop
jle
pop
call
es
sbb
push
into
jle
inc
popa
mov
jno
cmp
push
ffree
ljmp
pop
push
aam
add
jle
push
sbb
imul
lods
repz
jmp
or
mov
jg
jge
aas
jp
and
nop
push
addr16
or
das
sar
sub
scas
dec
jl
or
jnp
sbb
push
push
decl
and
xor
mov
ret
imulb
cmp
cli
mov
cmp
inc
jae
out
push
sbb
lret
pushf
pop
adc
mov
shlb
mov
std
push
pop
clc
sbb
je
sub
fstp
loop
frstor
dec
enter
roll
clc
cld
insb
adcl
jo
and
test
call
adc
test
jo
cmp
test
je
cmp
adc
jnp
in
data16
inc
dec
mov
sub
mov
cmp
iret
push
mov
jne
cld
scas
fisttpl
jecxz
or
std
push
mov
add
push
lock
jl
mov
sbb
sub
jo
in
jnp
idiv
incl
adcb
push
sarb
test
push
test
and
jmp
lds
add
cwtl
and
pop
xchg
inc
mov
xchg
std
cmp
ja
mov
call
rorb
fdecstp
cmp
inc
inc
add
xchg
push
lret
xor
loop
lods
inc
arpl
fcos
incl
mov
jl
inc
or
xchg
stos
call
inc
inc
out
sub
lcall
push
ja
popl
cmp
gs
push
jg
sti
je
call
sahf
add
push
dec
dec
cwtl
mov
out
int3
push
cmpsb
dec
cld
xchg
incl
mov
sbb
xor
adc
fwait
lcall
push
mov
insl
icebp
mov
out
jge
add
pusha
int3
dec
push
jb
mov
cmp
dec
inc
pop
test
xor
loopne
dec
inc
imul
test
call
push
cmove
movsb
mov
or
cltd
cltd
mov
and
pop
sbb
loop
or
push
sbb
xchg
mov
xchg
test
inc
out
fildl
sbb
ror
mov
es
and
adcb
jnp
jge
cmp
xor
push
inc
pop
stos
loop
jle
sub
and
std
lds
xchg
mov
push
leave
adc
in
stos
fsubrs
mov
jl
jmp
popa
cmp
sub
dec
lcall
mov
inc
push
mov
and
stos
push
xor
add
inc
push
sbb
scas
popl
decl
movsb
inc
dec
dec
pusha
cwtl
in
mov
jmp
pop
dec
out
lock
xchg
movsl
add
jmp
stos
stc
add
stos
inc
sbb
int
pop
hlt
mov
in
inc
pop
bound
mov
dec
incl
lea
and
es
lods
stos
aas
mov
jo
xorl
inc
add
call
nop
arpl
push
pusha
icebp
and
repnz
add
aam
call
std
call
test
push
mov
xor
inc
mov
iret
clc
jmp
decl
insb
lcall
divl
frstpm(287
stos
dec
fs
sub
jg
bound
inc
inc
inc
cmpsb
inc
adc
mov
ljmp
push
mov
pop
dec
adc
loopne
xor
mov
psrlw
xchg
fcmovnbe
mov
inc
iret
iret
ret
mov
jl
jno
push
xchg
push
xlat
mov
incl
cli
repz
adc
push
jns
dec
mov
outsl
sbb
fisttps
ret
je
xchg
in
testl
push
je
hlt
pusha
orl
cli
sbbb
sub
stos
dec
lret
pop
in
pusha
dec
sub
push
cs
mov
mov
cmp
inc
sub
cmp
ret
sub
dec
jg
scas
and
in
and
call
inc
and
jb
xchg
xor
pusha
adc
push
or
mov
xlat
pop
pop
int3
xor
stos
mov
push
cmp
ret
xor
add
add
das
sbb
cmp
ja
pusha
stos
in
inc
inc
cmp
adc
dec
std
cld
addb
xor
xchg
in
incl
push
jle
mov
mov
andb
outsb
add
inc
lcall
rclb
mov
ss
loopne
outsl
idiv
jg
xchg
mov
out
adc
adc
test
fs
cmp
stc
jecxz
lcall
bound
pop
sub
mov
push
mov
stos
add
or
insb
mov
xchg
cmc
mov
jmp
shl
cs
filds
xor
mov
sub
cmp
or
cld
xchg
cmp
ss
outsb
or
adc
lcall
enter
rorl
jg
inc
push
or
test
cmp
mov
dec
pop
push
push
call
enter
add
popf
loop
push
xchg
jmp
fisubrl
cld
gs
clc
push
push
jl
dec
pop
es
pop
adc
insl
dec
and
shll
dec
cs
repz
xchg
ds
mov
pushl
je
jg
rcll
and
and
pop
imul
adc
dec
mov
pop
ljmp
adc
cmp
lds
inc
daa
bound
mov
ret
aad
jg
lcall
add
inc
les
and
dec
mov
push
test
aas
je
in
mov
jmp
dec
and
mov
daa
and
and
add
or
jecxz
mov
pop
hlt
incl
stos
jae
rclb
mov
imul
and
ds
mov
mov
jle
outsl
mov
push
scas
and
sahf
lock
ret
clc
ss
sahf
std
lcall
out
int
pop
jno
stos
mov
xor
pop
aam
adc
adc
imull
int
ljmp
sub
xor
mov
mov
mov
xor
sar
ljmp
xrelease
pop
out
pusha
and
inc
or
pop
adc
es
jg
xor
adc
mov
mov
sarb
ljmp
hlt
add
cwtl
imul
xchg
xchg
cmc
clc
shll
push
fadds
cli
loopne
inc
cltd
cmp
jg
jbe
pop
mov
scas
cmp
push
dec
popf
push
vmovaps
in
pusha
lock
pushl
pop
add
jmp
push
in
sti
insb
dec
push
mov
xchg
in
leave
cmp
fbstp
lret
loope
sbb
xchg
loop
test
push
lcall
or
outsb
test
inc
dec
cmp
ljmp
jno
dec
fcmovu
es
nop
icebp
loope
xor
into
pop
mov
dec
xchg
xorps
fcomip
incl
loope
dec
test
out
shlb
nop
inc
or
xchg
sti
fnstenv
dec
out
in
int3
cmovp
xchg
hlt
push
mov
das
inc
negb
es
sbb
cmp
decl
or
mov
or
dec
scas
leave
push
int
subl
lods
and
mov
sar
and
jmp
cmp
sbb
cmovs
andl
cld
loop
aam
fs
push
xor
fcomip
filds
pusha
lahf
or
sub
lahf
inc
aaa
mov
mov
jns
xlat
push
xor
add
lahf
xchg
sbb
rcrl
xor
jl
dec
lods
mov
inc
mov
jge
mov
enter
inc
mov
adc
pop
add
xlat
nop
sbbl
cmpsb
orl
nop
outsb
cmpb
push
mov
push
fcoml
scas
push
insl
mul
ljmp
outsb
scas
mov
hlt
jns
cmp
call
xor
cwtl
jno
add
xor
dec
daa
inc
push
dec
sbb
cmpsl
mov
and
pop
js
call
sbb
xchg
hlt
je
jmp
sbb
nop
cmp
sbb
pop
mov
lods
movsb
cmc
cld
repz
lcall
dec
nop
in
loope
dec
inc
aaa
leave
cmc
jo
inc
loopne
inc
inc
dec
sbb
aad
lock
cmc
push
icebp
dec
popa
jo
fisttps
add
fwait
mov
cmpsb
movsl
xchg
pushf
call
cmp
or
adc
and
in
and
and
adc
test
outsb
push
rcl
xchg
fdivs
ss
pop
xor
cli
adc
lcall
or
test
lcall
pop
sbb
sbb
cwtl
clc
fidivs
jecxz
gs
xor
sbb
mov
inc
cmp
inc
popa
insl
in
mov
or
inc
std
or
movsb
repz
sbbl
lcall
adc
sbb
push
mov
or
push
arpl
pop
aaa
rorl
aam
xchg
imulb
xchg
shll
xor
mov
aaa
movsbl
mov
sub
mov
add
sti
bound
adc
jg
cmpsb
push
jnp
jae
mov
decl
add
sbb
push
sub
xchg
adc
fsubrl
xchg
mov
pushl
inc
repnz
lock
sbb
scas
mov
and
xchg
incl
and
out
outsl
out
xchg
inc
mov
mov
mov
add
into
addr16
clc
fnstcw
shl
add
mov
jl
pop
in
mov
xchg
sar
mov
push
movsl
sub
jno
out
and
mov
xchg
movsl
cltd
out
es
call
cmp
outsl
pop
xchg
bound
lret
add
dec
pop
lock
lret
cs
xchg
cld
iret
and
mov
loop
xchg
out
push
dec
dec
push
hlt
mov
pushl
push
cmp
iret
vrsqrt14ps
sub
sbbb
inc
inc
movsl
es
dec
test
pushl
fists
fs
xchg
hlt
jecxz
stos
add
cld
or
popa
push
dec
decl
push
sub
insl
mov
mov
mov
and
jecxz,pt
mov
call
add
jl
cmp
jmp
cmp
stos
js
cmp
insb
inc
jmp
test
sbb
pop
pop
jo
mov
cmpsb
inc
jbe
insb
rcr
jle
incb
pop
pop
popf
fwait
pop
inc
xchg
imul
xchg
dec
stc
adcb
addl
loop
popf
jle
popf
scas
ljmp
mov
test
call
movntps
lahf
push
inc
mov
sub
pop
pop
aam
ljmp
mov
testl
adc
and
mov
mov
hlt
ss
xor
pop
xchg
xor
dec
sub
in
jecxz
aam
adc
mov
cli
adcb
ljmp
push
xchg
cmpsb
daa
and
ds
xlat
push
pushf
cmp
and
je
mov
decl
lcall
bound
hlt
mov
int
sbbb
sbb
mov
aam
jg
mov
decl
cmpb
jp
dec
test
and
addb
fs
lods
pusha
mov
adc
incl
shl
clc
push
sub
mov
ss
fwait
andl
xlat
sahf
call
decl
xor
repnz
push
test
sbb
mov
push
incl
jg
decl
cwtl
incb
adc
sahf
or
mov
arpl
in
int
jle
out
pop
iret
adc
pop
push
adcl
inc
lods
lea
jmp
cli
sub
call
fisttps
gs
sub
cld
mov
adc
cltd
imul
xchg
pop
sbb
pop
adc
ljmp
pop
vdivpd
inc
loope
idiv
inc
cmc
jmp
icebp
dec
popf
shlb
enter
sub
cmp
rorl
add
push
inc
nop
push
or
dec
fadds
decl
push
mov
mov
loope
out
mulb
and
jno
es
and
nop
mov
decl
mov
pop
cmpsb
jno
and
or
add
jo
xchg
pop
ljmp
mov
fimuls
cmp
addb
mov
mov
adc
dec
xchg
outsb
xchg
pop
sbb
pop
decl
cmp
out
add
shrl
sbb
xlat
dec
test
int3
sbbb
xor
rorb
nop
repnz
clc
adc
mov
cmp
xor
add
decb
outsl
pushl
mov
jb
xchg
je
andb
cld
inc
cmp
bound
xchg
aam
ljmp
call
push
inc
and
enter
aam
mov
xor
and
test
incl
call
jns
dec
lds
dec
data16
mov
enter
jg
xchg
jp
mov
nop
lcall
mov
push
cmpsb
pop
pusha
nop
mov
xchg
scas
imul
sbb
mov
jge
push
xor
dec
push
and
mov
lret
jne
inc
push
add
outsb
or
lcall
sbb
sub
or
xchg
mov
dec
xor
mov
lcall
ret
xorb
std
aaa
lods
icebp
sbb
inc
mov
adc
mov
jnp
daa
adc
lcall
xchg
nop
inc
mov
cmp
sbb
or
nop
sub
aas
pop
jo
enter
call
jnp
into
sbb
rorb
pop
jmp
or
daa
fadds
in
add
call
ljmp
addb
hlt
mov
inc
mov
dec
cli
enter
xchg
jno
add
jmp
adc
in
daa
jmp
mov
jp
pushf
sbb
and
sar
jmp
pop
mov
or
inc
lods
andps
bound
push
cmpsb
negl
jmp
jge
jge
mov
cltd
test
add
subb
push
filds
mov
repnz
cmp
pop
hlt
mov
xchg
adc
loopne
imul
incl
xor
pop
sub
outsl
cwtl
mov
cs
mov
inc
push
aas
xlat
jle
inc
jnp,pn
adc
jmp
xchg
cs
jg
fs
mov
inc
adc
test
call
push
inc
pop
in
sahf
daa
mov
ret
out
sub
add
dec
and
jns
inc
xchg
mov
decl
xchg
pop
stos
in
orl
incl
dec
fildl
cltd
and
lea
sub
out
dec
mov
nop
lret
and
test
cld
push
cmpsl
in
dec
sub
xor
xchg
push
mov
sahf
scas
cmp
push
idivl
jmp
pusha
pop
in
push
sub
stos
insb
mov
jb
sbb
mov
jmp
mov
mov
or
loop
push
and
bound
lret
out
movsl
stc
out
mov
call
add
jp
or
pushf
psadbw
mov
sub
add
jecxz
shlb
lds
rorb
les
je
addl
incl
adc
popa
ror
sub
les
dec
fstp
rep
add
call
popa
hlt
pop
sbb
xchg
mov
int
push
movsl
adc
or
inc
sbb
pop
or
jns
inc
aam
xor
in
faddl
fistpl
push
cmp
push
fwait
test
outsl
sbb
loopne
cltd
andb
call
push
mov
out
sbb
sbb
mov
loope
adc
cmp
push
es
gs
push
pop
push
out
wrmsr
cmp
fsubrl
push
and
jl
mov
pusha
iret
cwtl
jecxz
loope
fldl2t
mov
mov
jno
push
jbe
mov
cmp
mov
cmp
rolb
out
jp
das
inc
decl
cmp
sbb
test
ja
inc
sub
push
dec
test
inc
int3
xlat
or
sti
test
and
jbe
cs
stos
cwtl
pop
addr16
aas
fsubl
or
push
fdivs
fwait
decl
mov
adc
pop
aam
or
orl
sbb
jmp
xor
inc
test
mov
xchg
push
sahf
xchg
dec
cmp
outsb
sbb
push
leave
sbb
xchg
mov
imull
aad
out
xchg
sub
push
push
inc
add
shll
clc
inc
xchg
repz
xor
sbb
aaa
fcmovne
push
sbb
into
jno
or
call
lods
pop
imul
std
pop
sub
cmpb
icebp
cmp
les
icebp
enter
mov
std
xchg
bound
loope
or
cmp
jp
and
dec
cmp
dec
add
pop
hlt
incl
mov
mov
addr16
mov
jo
mov
add
fwait
dec
dec
movsl
repnz
add
hlt
pusha
push
add
mov
data16
dec
add
jb
jo
push
aas
les
dec
cmc
insb
mov
or
jnp
out
mov
mov
shll
mov
outsl
shll
mov
leave
add
xchg
mov
in
imul
lahf
subb
mov
sar
or
js
dec
or
lock
insb
leave
fs
jg
push
jno
push
or
cld
xchg
sub
inc
dec
push
push
jne
add
lcall
dec
adc
repz
subb
xor
and
fs
mov
pop
lods
inc
fildll
mov
jmp
popf
xor
or
sti
clc
push
je
or
cmp
loope
xchg
ja
scas
xlat
decl
push
aad
jl,pn
add
movsb
ret
ret
out
jnp
mov
jg
sub
imul
sub
dec
test
jmp
loope
push
insl
inc
mov
or
or
call
repnz
mov
push
data16
std
add
cmpsb
pop
sahf
cs
inc
inc
mov
nop
push
push
inc
sub
push
mov
xchg
arpl
out
jmp
stos
int3
cmpsb
and
inc
mov
mov
mov
pushl
inc
roll
icebp
mov
push
sub
cmpb
mov
sahf
sbb
lcall
jl
orb
xchg
inc
adcb
es
or
push
in
mov
nop
loopne
dec
lea
or
xor
xadd
mov
fs
jmp
jmp
xchg
das
sbb
inc
ljmp
jle
push
pushf
clc
add
shlb
mov
push
orl
xor
and
ffreep
mov
and
ds
push
push
lret
cmpsb
mov
ficompl
jg
push
popf
shll
mov
data16
sti
xor
test
add
mov
ret
ficomps
mov
adc
mov
stos
mov
jmp
inc
jge
daa
and
push
mov
xor
enter
bound
xchg
dec
std
dec
or
jmp
add
dec
jecxz
xchg
lcall
call
pop
or
jl
jno
jg
call
pop
cmpsb
xchg
pop
je
sub
mov
cmpsb
push
dec
ljmp
rclb
inc
push
jp
xchg
std
push
or
arpl
decl
inc
xor
pushf
shll
aam
xchg
rorb
nopl
jecxz
push
int3
jnp
aaa
pushl
jmp
inc
push
xchg
push
std
lods
movb
pop
inc
xchg
sub
sbb
dec
pop
xchg
push
cmpsl
incl
mov
in
shl
cld
sbb
hlt
lds
and
cmp
and
add
mov
cmp
adc
push
hlt
mov
in
jns
xor
test
mov
cs
sbb
icebp
pop
xor
jmp
jb
adc
xchg
jbe
push
jns
repz
fmull
dec
mov
outsb
add
sahf
cmp
incl
and
gs
mov
aad
push
ljmp
bound
adc
cli
xor
inc
ljmp
mov
adc
shlb
cmp
in
outsb
test
xor
ret
inc
inc
or
add
scas
cli
jmp
xor
xorb
int3
adc
rclb
cli
mov
adc
aam
fs
daa
adc
test
mov
outsl
decl
push
adc
adc
adcl
filds
mov
sbb
std
jmp
sbb
and
jne
stos
adc
xchg
and
and
int
mov
stc
outsb
cmpsb
push
mov
roll
mov
int3
repnz
les
cld
mov
sbb
clc
cmpsb
cmp
pushl
xchg
push
mov
or
mov
insl
jp
inc
inc
xor
jmp
mov
jmp
mov
sbb
mov
lahf
xor
or
sub
test
loopne
ret
pushf
push
ja
xor
fs
and
ss
add
fisubl
jmp
push
and
scas
movsb
icebp
cwtl
mov
xor
push
inc
jge
lock
cmp
cmc
and
mov
inc
test
push
cmp
lcall
test
mov
out
add
pop
cmp
jmp
cld
jg
mov
inc
inc
cmp
enter
inc
lret
decl
xor
and
adc
jmp
movsb
test
pop
arpl
inc
loopne
in
out
or
pop
sbb
mov
rclb
mov
addl
mov
xchg
outsb
sbb
cmp
or
les
les
adc
imul
or
sub
cmpsl
push
test
dec
inc
pop
adc
pushf
push
lahf
xchg
pop
cmc
mov
jp,pt
pop
in
mov
xor
cmp
dec
jo
loop
mov
lds
ss
pop
cwtl
adc
add
sbb
dec
shlb
or
call
mov
sub
sub
mov
movsl
jle
incl
mov
int
and
sbb
jmp
jecxz
xor
adc
xchg
nop
or
mov
mov
ret
inc
mov
leave
fildll
aam
push
fwait
or
jno
jg
cmp
cmp
push
orl
out
shr
xchg
aaa
xchg
test
cs
lcall
pop
loopne
push
iret
mov
jbe
out
sub
std
insb
int3
push
pop
sub
xor
and
sbb
mov
lcall
dec
inc
gs
lcall
in
mov
or
and
mov
enter
mov
inc
cs
cld
cmpsb
clc
imul
push
mov
insl
cmc
sbb
iret
mov
dec
mov
stos
xor
and
aas
mov
pop
sub
clc
decl
cli
sub
mov
nop
xchg
jp
jmp
out
sub
jp
or
nop
inc
sub
xchg
jecxz
pop
xor
inc
xchg
fdiv
cmp
sbb
mov
sti
and
xor
loop
xchg
push
push
add
or
mov
call
mov
icebp
pop
negl
or
sbb
sbb
mov
mov
mov
and
pop
arpl
scas
mov
xchg
je
jmp
ja
into
adc
loope
cmp
xlat
or
jo
dec
adc
ljmp
nop
push
iret
inc
pusha
clc
stc
xor
pop
jo
cmp
jge
xor
pop
mov
dec
dec
pop
adc
inc
cmpsb
and
sbb
insb
xchg
push
adc
cltd
push
lds
xor
loop
jno
ret
mov
lret
pop
cmc
pushl
mov
mov
ljmp
icebp
and
leave
mov
test
ljmp
popa
movsb
popa
test
inc
nop
loope
cmp
ret
and
mov
sti
ljmp
or
mov
sub
rcr
divb
mov
fistpl
enter
push
pop
ss
push
int
add
xchg
and
ss
incl
add
out
mov
adc
jge
mov
inc
out
stos
dec
mov
add
push
xchg
xor
adcb
and
loope
dec
mul
in
or
jmp
xchg
bound
push
lea
or
push
sub
test
in
bound
mov
jle
mov
sbb
pop
inc
push
fcomip
call
orl
mov
cmp
mov
sbb
sub
cmp
ljmp
or
insb
bound
fnstsw
ret
je
xor
cmp
push
std
jnp
xchg
dec
insb
mov
jmp
sarb
mov
xor
jb
adc
test
mov
or
pop
xor
das
sub
gs
lock
sbb
jle
cmp
call
add
xor
lods
cmp
nop
fs
and
sbb
das
fs
jbe
in
lds
mov
dec
pop
bound
js
lock
add
jmp
aaa
insb
into
mov
xor
in
pop
pusha
sub
mov
adc
mov
pop
fisttps
das
mov
js
repnz
mov
adc
push
int3
ss
push
sub
or
adc
jns
push
add
ljmp
or
push
xor
or
fdivs
inc
popa
mov
popl
es
call
repz
pop
nop
lret
stos
pop
xchg
mov
cmp
lods
ficoms
and
push
decl
mov
aam
sbbb
or
mov
inc
ret
dec
add
push
xchg
sub
xchg
shlb
lods
push
or
dec
das
cmp
fldenv
mov
mov
push
push
add
std
mov
push
rorb
mov
xorb
or
shr
and
xor
mov
or
push
and
cmp
fdiv
ljmp
and
daa
shl
roll
jne
dec
fisttps
adc
sub
jg
orb
xor
stos
push
popl
cld
xor
add
std
pop
jge
int
dec
and
push
mov
mov
cli
add
lret
push
mov
call
out
out
cwtl
mov
lret
scas
push
aad
adc
jo
repz
mov
pushl
add
pop
out
ds
addr16
push
fnstenv
inc
icebp
idivb
or
sub
popa
xchg
push
sbb
lcall
sbbb
das
fnstsw
lret
pop
test
cmc
in
fists
adc
loop
lahf
or
add
fmuls
adc
cmp
insb
rcrl
dec
ret
mov
mov
dec
test
adc
add
test
xor
sarb
daa
mov
cmpsb
push
mov
push
repz
lcall
push
je
and
sub
pop
icebp
call
shrb
stos
hlt
mov
ss
mov
add
pop
incl
or
adcb
xchg
cmp
push
fcoms
adc
pushl
mov
sbb
test
xchg
sub
adc
fldenv
fmulp
les
aad
xchg
jl
adc
xchg
sub
testb
sub
mov
sarl
loopne
std
test
ja
clc
push
jo
hlt
jmp
mov
mov
jmp
pop
lods
inc
std
sbb
adc
stc
std
aas
pop
insl
or
fistl
inc
add
insl
call
cmp
xor
nop
sbb
in
or
inc
out
add
add
pop
adc
call
and
add
imul
sbb
bound
lret
test
je
inc
dec
cld
popa
push
js
fistpll
sbb
jne
les
ljmp
xor
nop
dec
imul
ljmp
xchg
xor
test
imul
sti
pop
add
lock
shlb
nop
mov
pop
cmp
adc
rclb
lret
dec
and
pop
xor
dec
ss
jle
jg
jmp
ljmp
pop
pop
orb
sbb
pusha
jmp
mov
pop
imul
jge
sarl
ljmp
cmp
je
or
pushl
cld
xchg
push
mov
nop
inc
pop
sbb
scas
fsts
or
push
arpl
jmp
jnp
xlat
call
lds
fcmovnb
xchg
jge
mov
jmp
sub
sar
incl
push
xor
mov
jle
test
test
ret
lret
sub
sub
jg
push
std
pushl
stc
jecxz
mov
push
cld
push
xor
cli
lret
inc
xchg
xchg
mov
enter
jmp
mov
test
rorl
lret
mov
xor
cli
xchg
mov
fmull
pop
mov
imul
pop
or
rcrl
sets
call
inc
push
rolb
push
inc
sub
pop
push
cltd
sbb
mov
arpl
xchg
adc
push
mov
incl
scas
scas
pusha
out
je
push
and
or
xor
or
ret
out
out
jg
bound
loope
jecxz
push
or
in
xor
inc
pop
cs
clc
iret
decl
mov
iret
sub
shrb
insl
add
sub
fnstcw
inc
dec
bound
lock
jmp
push
mov
adc
pop
test
faddl
test
cmc
dec
enter
outsl
cli
cmp
adc
pop
xchg
jo
and
popf
add
aam
in
and
push
int3
call
inc
pop
jo
inc
xchg
mov
adcb
test
sbb
lds
dec
stos
xchg
mov
jecxz
loope
iret
mov
aaa
test
and
push
shll
stos
cmp
xchg
inc
sar
jmp
dec
xchg
xor
adc
gs
sbb
and
mov
or
jno
enter
push
push
mov
mov
bound
add
pop
icebp
jge
test
dec
imul
mov
xorl
popf
loopne
loope
add
inc
aas
out
test
jmp
xchg
fisubl
mov
lock
and
pop
add
ds
jmp
pushl
orb
sbb
inc
jns
push
loope
sub
lcall
inc
jb
xor
cmp
les
xchg
mov
xor
imul
ljmp
mov
jge
ret
lcall
xor
jae
negb
scas
inc
add
call
mov
insb
cmp
mov
push
test
mov
and
inc
test
rorl
popf
jge
mov
and
sbb
es
jg
inc
push
std
push
pop
xorb
mov
xchg
addl
hlt
adc
lcall
cmp
adc
pop
cli
adc
ror
sub
adc
lret
ljmp
outsl
subb
add
push
push
and
jecxz
mov
call
jmp
push
sbb
inc
test
movsl
sbb
or
mov
mov
lret
jge
iret
adc
lods
xor
aaa
and
jl
dec
lock
rcr
ljmp
loope
rol
cwtl
dec
mov
jns
mov
popa
fisubrs
repnz
das
add
lcall
enter
filds
adcl
sti
imul
mov
inc
jnp
pop
addl
int3
xorb
addb
mov
mov
ljmp
daa
out
mov
loop
inc
test
or
fdiv
test
pushl
shrl
and
mov
push
add
push
cld
call
dec
add
repz
clc
push
mov
and
mov
mov
sbb
and
or
or
and
pop
mov
mov
cmpsb
jmp
test
inc
js
mov
call
pop
xor
lock
cmp
xor
inc
add
lret
cmpsl
adc
or
ret
xchg
push
push
call
call
insb
mov
cltd
mov
pop
sti
out
xor
xchg
icebp
imul
mov
cmp
pop
popa
add
add
je
or
adc
xor
dec
in
fcomip
add
pop
jo
sub
mov
or
inc
add
pop
fwait
dec
dec
in
or
jmp
test
fmuls
inc
mov
sbb
push
pushl
rcrl
cmp
sub
repz
mov
dec
sbb
push
inc
adc
sbbb
ret
lcall
mov
add
loopne
pop
or
popa
movsb
cmpsl
iret
jg
inc
aas
nop
incl
xor
rcrl
push
xor
mov
mov
and
iret
fcompl
push
xor
cmpsb
js
sar
jo
add
iret
sub
cmp
decl
or
xchg
popf
and
shll
inc
sub
push
mov
xchg
add
mov
lcall
fistl
push
mov
and
test
rcr
test
mov
subb
lahf
pop
hlt
cld
pushl
das
pusha
mov
add
push
sbb
fisubrs
and
mov
cmp
pushl
push
cmc
xor
adc
cmc
fsubrs
push
bound
push
clc
out
inc
lret
daa
xchg
decl
xor
iret
or
add
inc
lea
fs
mov
out
mov
pop
and
pushf
pop
loopne
push
add
adcl
arpl
popf
and
pop
mov
add
jmp
icebp
lods
xor
outsl
inc
and
xlat
add
xchg
repnz
cmp
mov
call
add
fadd
das
xor
inc
add
cli
subl
jp
decl
out
push
dec
ja
icebp
test
fidivs
pop
popa
ror
cmc
pushf
cld
sub
pusha
and
ljmp
and
mov
sti
jle
ret
push
push
outsl
fstps
add
imul
push
test
mov
ljmp
test
call
xchg
call
add
mov
push
xor
push
sbb
decl
mov
mov
jbe
cltd
xor
shl
mov
add
mov
pop
sub
inc
and
inc
loop
andb
and
outsw
decl
push
push
mov
sub
and
pop
jbe
arpl
xor
cltd
inc
or
adc
inc
sbb
xchg
arpl
stos
test
jo
add
mov
adcl
decl
mov
stos
cmpb
mov
push
loop
cmp
in
or
call
pushf
push
in
mov
fs
scas
pusha
mov
test
and
cmpl
mov
mov
inc
daa
inc
cltd
aas
outsb
xor
inc
jl
loope
sbb
adc
jle
adc
mov
jl
jl
push
scas
out
daa
lahf
push
add
sarl
add
js
add
adc
incl
movb
outsl
mov
inc
mov
lret
dec
add
ljmp
jbe
ffreep
add
imul
fisubl
icebp
and
int3
pusha
gs
jl
mov
push
lret
fcomip
lcall
aad
data16
pop
and
xorb
mov
lcall
in
dec
stc
pop
add
mov
or
jno
bound
adc
mov
cmp
ljmp
clc
jbe
ds
inc
les
je
dec
fildl
nop
xchg
pop
jne
xor
mov
xor
lcall
jb
push
xchg
fnstsw
and
movsb
xorb
jp
dec
jns
xor
decl
hlt
push
mov
repnz
inc
inc
mov
aam
rol
call
add
sbb
sub
xchg
shll
and
nop
xchg
dec
cmp
push
clc
ljmp
in
sarb
stos
aas
test
sub
rcll
cmp
cli
imul
mov
push
outsb
dec
push
adc
pusha
mov
xchg
xchg
xchg
test
push
ret
ret
scas
lds
scas
inc
adc
movsb
scas
xchg
jle
jbe
adc
mov
lods
mov
add
std
or
xlat
rol
flds
push
add
vcomiss
test
inc
inc
inc
arpl
in
push
into
repz
repnz
in
nop
jmp
jg
push
sub
xchg
pop
sbb
daa
not
adc
popa
cltd
orb
nop
pop
mov
jle
push
xor
mov
imul
or
xlat
or
xchg
movl
cmp
push
les
xor
pushl
jns
cwtl
je
inc
pop
inc
dec
adc
and
pop
and
mov
pop
ljmp
xor
je
xlat
xchg
adc
arpl
push
maskmovq
or
xor
js
xor
loop
sub
ljmp
cwtl
pop
mov
cli
push
enter
fldenv
pop
push
or
xchg
sbb
cmp
mov
mov
test
int3
mov
xchg
mov
sbbb
std
jmp
aad
sbb
jnp
xor
or
inc
sti
incl
mov
cld
cmp
and
enter
mov
jle
out
cli
nop
add
push
cmp
fists
fs
fstpt
dec
sub
cmp
lcall
and
test
push
mov
mov
and
cmp
incl
pop
sub
inc
enter
sub
sbb
push
sub
jae
sbb
xchg
call
jae
xor
pop
inc
ja
rol
add
mov
push
xor
inc
rolb
incl
std
xchg
inc
out
cwtl
sbb
sbb
adc
inc
insl
inc
pop
cmpsb
mov
jb
call
sbb
xlat
addr16
cmpl
mov
in
das
ss
jg
and
call
pushf
popf
pop
out
shrb
ss
adc
inc
repz
or
call
jl
push
mov
jmp
mov
add
xchg
lea
imul
js
push
insl
cwtl
mov
inc
inc
push
push
fildl
pushl
or
dec
movl
xchg
cmp
jmp
or
push
xor
sbb
es
scas
cld
call
insb
mov
rcl
sahf
outsb
aad
pop
xor
lret
xchg
sub
lds
pop
out
call
jle
aam
test
sub
xchg
inc
cmp
jle
insl
inc
ljmp
fdivs
mov
and
add
mov
xchg
mov
les
lock
std
or
sbbl
aas
movswl
fdivrs
test
lcall
jae
movb
and
mov
pop
fcomps
dec
mov
cmpsl
movsb
adc
sub
xchg
dec
call
sahf
mov
xchg
prefetch
call
iret
pop
sahf
add
mov
sar
ljmp
leave
add
jecxz
and
adc
mov
or
mov
and
sub
repz
sbb
cmpsl
mov
sbb
cmp
sbb
sbb
les
jmp
jecxz
lcall
clc
or
scas
inc
and
out
pop
in
and
or
aaa
mov
rcr
and
add
cmp
xor
or
scas
or
fstp
loop
jo
adc
repnz
pushf
bound
jl
outsb
out
or
shll
dec
jmp
jno
call
les
xchg
jb
jae
add
sahf
and
call
pop
daa
rorl
and
or
fimull
dec
mov
dec
movsb
movsb
out
decl
dec
xorl
imul
and
push
fsubl
insb
mov
insl
sbb
fdivr
lcall
add
cwtl
in
jb
xor
inc
lret
cld
icebp
sahf
adc
ret
jle
xchg
add
inc
outsb
stos
movsl
xor
shrl
fdivrl
pop
sbb
incl
jl
sti
addb
pop
mov
xchg
cmpsb
test
push
dec
adc
jmp
sub
jb
mov
mov
les
movsl
test
pop
cmc
pushl
pop
xchg
in
les
push
push
js
clc
adc
testl
addb
shll
sub
into
and
mov
call
pop
mov
ljmp
ficoms
inc
sbb
and
dec
sbb
jmp
mov
push
mov
dec
or
xchg
add
xchg
push
mov
lahf
nop
xor
nop
add
mov
lods
in
pop
sub
mov
rorl
loopne
shll
cmp
jge
icebp
filds
dec
shr
adc
cld
jecxz
sbb
push
cmp
add
lcall
push
inc
or
push
jo
mov
adc
mov
call
repnz
jb
daa
jp
enter
repz
inc
sub
sub
arpl
stos
clc
fwait
or
nop
xor
jge
mov
jo
das
sub
add
pop
daa
je
push
xorb
sbb
ljmp
cli
and
push
fwait
jno
lret
lock
icebp
push
iret
mov
cmp
lcall
mov
sbb
cs
repz
sti
mov
dec
movsb
hlt
popf
test
std
insb
fwait
jmp
adc
movsb
pop
add
and
aas
scas
and
adc
shll
rolb
ljmp
dec
sbb
int3
test
mov
or
std
sbb
ret
lret
inc
adc
cmp
mov
pop
clc
mov
and
notl
xor
call
fs
pop
loope
mov
pop
dec
mov
scas
inc
xorl
roll
stc
inc
add
ljmp
or
out
filds
cmp
mov
rcrb
xor
decb
cmp
mov
mov
loop
xor
rorb
jbe
fistl
rcrl
xor
push
or
into
pop
call
std
aam
dec
cld
mov
xor
mov
add
loop
push
xor
scas
mov
add
mov
xor
xchg
cwtl
decl
jge
imul
fbld
int3
add
repnz
push
dec
nop
test
incl
ds
and
jmp
hlt
clc
es
adcb
mov
pushl
cld
jle
test
sahf
ss
xchg
or
pop
xor
pop
je
pop
std
call
mov
jns
movsb
sub
xchg
movsl
push
mov
popf
inc
add
clc
decl
adc
mov
mov
movaps
xor
jmp
pop
gs
mull
out
fldenv
ljmp
inc
out
cmove
pop
clc
or
mov
jnp
push
adc
call
repz
inc
cmp
jl
notb
nop
std
or
lret
shlb
stc
and
out
jmp
es
cmpsl
cmp
mov
repnz
cmp
pop
shrb
pop
sbbb
mov
stos
out
or
or
or
add
sbb
inc
inc
nop
mov
rclb
scas
scas
incl
pop
mov
push
imul
in
mov
inc
xchg
pop
inc
popa
incl
in
call
fdivrp
and
popa
or
and
rorl
outsl
test
scas
clc
incl
lahf
add
es
ret
sub
mov
dec
mov
gs
nop
adc
jle
push
mov
hlt
sbb
inc
sbb
sub
call
add
xacquire
and
pmulhuw
push
or
call
cs
add
incl
sub
mov
fsub
cmp
and
inc
adc
lahf
jmp
pop
and
call
daa
insb
cmp
pop
or
mov
test
dec
inc
into
adc
shlb
movb
call
arpl
add
ljmp
cld
mov
or
mov
aad
repnz
xchg
sub
xchg
rcll
fisubrl
sarb
sbb
ljmp
cmp
inc
xchg
rclb
ret
mov
xchg
jo
ret
inc
sbb
test
ja
outsl
into
or
mov
push
fs
dec
push
jge
arpl
rolb
jmp
cmp
add
mov
jle
mov
dec
inc
mov
jg
cltd
or
inc
xor
adc
cmp
xor
xchg
pop
push
fs
or
mov
xchg
or
push
and
loop
in
adc
jnp
cmp
push
ss
mov
mov
cmp
cmc
filds
push
pop
xlat
shlb
int3
push
sahf
mov
mov
call
frstpm(287
xor
jle
xchg
jl
jo
orl
incl
adc
divb
xor
adc
cltd
movsb
lds
mov
jmp
mov
stc
sti
push
insb
xchg
mov
sbb
es
test
pop
fsts
and
decl
lock
movsl
int3
fildl
push
xor
sbb
add
fisttpll
pop
mov
decl
icebp
xchg
pop
push
test
inc
adc
xchg
out
sub
mov
aaa
fwait
xlat
push
push
mov
mov
add
push
sub
je
inc
cs
fs
jne
xchg
ljmp
cld
and
adcb
pop
fwait
iret
mov
sub
loop
jp
pushl
or
or
and
mov
xchg
pop
inc
sahf
test
mov
jmp
lret
inc
cwtl
pop
adc
jecxz
pushl
pop
movsl
inc
cwtl
push
mov
sub
stos
lret
rcl
mov
xchg
popw
fcompl
rolb
enter
into
bound
inc
call
in
ss
sbb
sbb
push
add
dec
imul
cmp
dec
lahf
push
dec
fisubrs
sahf
arpl
and
cmp
lds
and
cmp
pop
dec
mov
loop
stc
add
mov
dec
mov
mov
add
add
fldcw
jge
adc
daa
je
push
mov
shlb
lcall
add
dec
xor
or
cmp
lea
sbb
call
call
add
and
or
dec
lods
cwtl
aam
test
xor
jecxz
or
shlb
push
cli
and
cli
jne
xchg
and
cltd
cmp
lahf
inc
xchg
std
in
adc
mov
lcall
adc
daa
cmp
scas
dec
adc
and
ret
adc
leave
or
leave
test
lcall
lock
les
adcl
push
movl
sbb
fcomip
ret
insb
xor
push
dec
flds
popa
and
push
push
adc
push
std
mov
push
add
stos
jo
test
pop
cltd
lret
xchg
push
mov
cli
decl
stos
dec
in
shrb
adc
or
and
call
and
aaa
lods
pop
dec
iret
cmp
sub
pop
scas
mov
in
add
mov
sbb
xchg
aam
sbb
mov
test
fstpl
pushl
add
int
jg
xchg
mov
mov
dec
out
sbb
ret
xchg
icebp
cld
push
icebp
cmp
xchg
push
push
sbb
scas
shlb
mov
cld
cmp
lret
cmp
fndisi(8087
dec
repz
or
adc
add
push
scas
jp
scas
sbb
xchg
ljmp
push
in
xchg
adc
xor
xchg
jnp
leave
inc
mov
cmpsb
mov
xchg
shll
add
movsb
push
add
push
loope
decl
sub
mov
or
jle
dec
in
xor
iret
inc
dec
pop
push
hlt
jg
mov
daa
pmuludq
sub
or
jbe
push
inc
fnsave
leave
or
inc
fsts
adc
add
mov
jge
bound
jmp
adc
sbb
jl
jbe
and
cmpsb
mov
mov
xchg
lds
mov
adc
or
test
dec
mov
adc
sbb
sbb
enter
jmp
mov
pop
daa
scas
cld
cmc
xchg
aad
xor
sub
bound
ret
std
jmp
cmpsb
inc
cwtl
jo
nop
incb
daa
in
mov
xchg
jno
ds
lcall
lds
sahf
lock
xchg
jg
sbb
xchg
and
loope
in
pop
add
mov
dec
cld
call
and
sbb
adc
nop
sub
cld
decl
cs
clc
out
jo
aas
xor
outsl
pop
sub
mov
test
imul
pop
and
pushf
filds
pop
ja,pn
clc
jmp
cltd
push
call
std
insb
xchg
cld
icebp
adc
aas
or
addl
pop
ror
insb
xor
fwait
jo
adc
adc
gs
in
mov
jmp
mov
frstor
and
or
icebp
inc
push
into
les
insb
or
call
pop
jp
cwtl
pop
std
add
xchg
fidivl
jmp
lret
xchg
stos
loope
call
movaps
or
dec
cmp
cs
ds
jecxz
mov
out
lcall
add
push
xorb
and
pop
fs
or
call
incl
loope
mov
xchg
jecxz
rcll
out
clc
xchg
lret
pop
mov
dec
mov
cld
incl
aaa
add
movsb
gs
xor
mov
rorl
dec
and
leave
icebp
jne
cmpb
int3
mov
nop
or
pop
and
xor
adc
hlt
loop
je
push
dec
xlat
xchg
rolb
inc
or
pop
decl
dec
or
cmc
sahf
inc
xor
stc
loopne
adc
int3
jb
in
mov
mov
and
call
aaa
or
xchg
jge
add
shr
je
inc
popf
cs
jbe
mov
faddp
push
int
fnstcw
mov
out
inc
push
lods
enter
leave
sbb
and
push
xor
and
mov
pop
push
sbb
and
movsl
dec
incl
mov
xchg
popa
out
pusha
fidivrs
clc
fists
out
mov
cmp
es
cwtl
ljmp
scas
sbb
das
jp
push
leave
aas
add
rclb
test
andb
pop
sbb
ljmp
repz
push
and
cmp
push
gs
mov
sbb
inc
mov
mov
mov
fcomps
loope
cmp
loop
incl
jns
sar
sti
adc
sbb
int
mov
in
add
mov
sub
inc
jns
rcrb
fldcw
cmp
mov
cwtl
shr
lea
adc
and
sub
jg
gs
adc
sub
aam
cmp
cld
sub
inc
adc
add
ret
test
ljmp
inc
lock
sbb
mov
nop
es
adc
sbb
ljmp
jb
out
outsl
jo
add
test
insl
jmp
test
test
and
iret
jno
je
jg
mov
lea
inc
and
add
andb
sbbb
pop
sbb
pop
xor
shrb
xor
or
mov
or
outsb
mov
or
pop
addb
call
xchg
daa
mov
sbb
mov
mov
dec
push
pop
imul
dec
adc
push
inc
in
ljmp
dec
or
mov
xor
or
lea
cmpsl
orb
pop
add
loop
xor
das
push
pop
out
and
sub
rorb
insb
int
sti
decl
xor
test
testb
lods
push
cmp
loopne
jmp
rcrl
xchg
adc
add
bound
movsl
mov
push
sahf
inc
test
loop
add
sbb
ljmp
push
test
mov
cld
mov
leave
sub
test
cmc
incb
loopne
xorl
movsb
lods
dec
addb
push
clc
jg
and
ljmp
sarl
add
stos
je
adc
inc
lea
mov
pushf
gs
push
adc
mov
mov
cmc
mov
cmp
punpcklbw
nop
mov
repz
decl
xchg
pop
jnp
mov
ret
out
std
add
outsl
jp
xor
jae
dec
incl
and
xchg
cld
adc
sbb
adc
in
or
mov
push
call
jmp
int3
rcrl
lcall
in
mov
pop
adc
pushl
or
sub
fisubrl
dec
mov
std
dec
jo
adc
inc
mov
jg
and
or
dec
scas
ljmp
cmc
xchg
xor
dec
pushl
js
jne
inc
test
dec
push
mov
mov
in
jge
lahf
pop
dec
jg
pop
out
cmpsl
adc
rclb
xchg
clc
inc
add
add
das
movsl
jmp
add
call
pop
cmp
sub
inc
pushl
xor
mov
lret
stos
add
push
xor
sbb
arpl
dec
xlat
ret
xor
sarb
jmp
rolb
clc
jge
inc
cmp
imul
rcrl
stc
out
lcall
call
xor
sahf
add
ret
jnp
pushfw
sbb
repnz
ljmp
cmpsl
cltd
fs
enter
outsb
xor
push
int3
test
push
movsb
pop
iret
xchg
sbb
js
mov
lods
ds
push
rclb
mov
dec
ret
push
outsb
insl
mov
std
ljmp
xor
mov
lahf
lods
adc
rolb
call
jne
jae
jbe
cli
push
adc
out
dec
and
inc
gs
pushf
ljmp
adcb
lahf
or
xchg
xor
dec
push
jge
or
dec
push
lahf
stc
jp
sub
ret
sub
cmpsl
cs
push
mov
es
and
inc
adc
ljmp
and
fdiv
inc
out
gs
push
jmp
scas
inc
adc
add
jmp
daa
jmp
fiadds
add
idiv
jle
repnz
adc
cmp
inc
sub
sbb
ljmp
xchg
mov
push
shlb
test
cmpb
es
cmp
lcall
pushl
sbb
mov
add
enter
lds
mov
mov
pop
adc
adc
fwait
mov
or
icebp
sbb
loope
xor
pop
sti
pop
popa
jmp
or
outsl
pushl
or
jmp
push
jmp
push
inc
fwait
push
pushl
push
pop
lea
loope
sub
repnz
enter
push
inc
or
das
jle
jg
fisubrl
xor
jae
js
xor
mov
mov
cmp
incl
pop
inc
lods
clc
lret
repnz
and
push
iret
xchg
ret
sbb
decl
decl
mov
cmpb
fists
pop
or
call
push
jns
push
sub
add
in
aam
sar
ffree
test
decl
mov
stc
pusha
scas
pop
mov
pop
jmp
mov
lcall
mov
sub
sbb
fsubs
fucomip
inc
fcmovnbe
adc
ljmp
cmc
xor
into
xor
imul
arpl
mov
lcall
or
pop
jle
jp
cs
outsl
jecxz
clc
xor
mov
lcall
gs
mov
sbb
push
sub
add
mov
call
shrl
sub
push
call
or
xchg
xchg
push
fwait
jp
jns
pop
sbb
je
or
sub
inc
push
jns
dec
lds
cwtl
jbe
mov
xchg
jb
mov
mov
pop
aas
pushf
je
shrl
pop
test
mov
mov
xlat
jnp
adc
outsl
call
test
cltd
xchg
imul
mov
jno
aaa
add
cmpsl
mov
incl
in
dec
xchg
jmp
fwait
ret
mov
mov
mov
push
stos
stos
mov
cmp
shll
ljmp
dec
and
popf
repnz
shl
or
xlat
jae
rcrb
xor
insb
adc
test
jecxz
repnz
hlt
mov
je
add
movsl
mov
sbb
cld
fdivs
pushl
std
push
test
loope
xchg
jl
push
ja
push
hlt
mov
xchg
push
cltd
pop
inc
das
cld
jg
movsb
sbb
jno
and
and
shll
jg
inc
mov
jle
cwtd
dec
mov
jmp
mov
dec
sarl
fiaddl
sbb
mov
push
mov
sbb
jg
dec
cmpsb
outsl
or
or
dec
fstpt
packssdw
aas
call
loope
jmp
loope
push
sub
push
call
add
inc
test
lcall
sbb
insb
and
pop
dec
dec
imul
push
mov
lcall
in
mov
incl
lods
fistpl
in
push
push
xchg
mov
scas
xor
popl
dec
xchg
dec
sbb
xlat
pop
cld
mov
and
and
in
mov
jmp
sub
jecxz
ret
xchg
daa
or
icebp
arpl
dec
sub
ret
lret
ljmp
add
in
dec
jecxz
in
scas
andb
loope
add
add
test
lds
andb
or
add
or
sub
sbb
pop
mov
mov
mov
or
in
mov
mov
push
and
push
gs
loopne
pop
mov
pushl
mov
adc
loopne
pop
andb
es
inc
movsb
cmc
push
and
jg
jmp
dec
or
data16
mov
and
enter
in
xchg
cmpsb
fdivr
decl
sub
repz
stos
mov
jbe
xlat
cmp
icebp
inc
dec
jge
add
and
sbb
lcall
push
xor
mov
lcall
and
pushf
xor
dec
insl
jecxz
ljmp
adcb
cli
push
push
out
sbb
push
aad
inc
fimull
stos
add
fnstenv
add
lret
and
lret
fcomip
mov
push
mov
pop
xchg
mov
fstl
add
ljmp
cli
ljmp
sti
cmp
jg
fs
xor
frstor
popf
cld
xor
push
rorl
incl
cmpsl
xchg
or
dec
popf
mov
adc
aam
cmc
adcb
mov
xor
xor
cld
je
shl
fwait
inc
xchg
ds
pop
lods
add
push
out
xchg
out
cli
call
das
inc
lret
fsubrl
pop
imul
mov
or
lock
ljmp
or
and
pushf
jnp
xchg
insb
rcl
xchg
popa
mov
push
ret
jge
pop
dec
jmp
push
jg
out
sub
ja,pt
hlt
mov
sub
js
fwait
mov
clc
pop
mov
outsl
dec
loope
inc
out
mov
inc
outsl
cmp
incl
mov
nop
in
mov
inc
xor
faddl
push
icebp
and
lods
incb
pop
cld
decl
jae
inc
dec
int
sbb
int3
sub
xchg
stos
push
cmp
adc
mov
mov
loopne
dec
in
es
xor
icebp
cs
inc
cmpl
ss
pushl
mov
inc
in
mov
push
jp
aaa
mov
sti
jmp
xchg
inc
insb
pop
cmpb
inc
pop
jae
dec
imul
cmp
sub
cli
jmp
test
jae
scas
lcall
cmp
addr16
stc
into
fcomps
ud0
mov
jle
enter
icebp
inc
or
dec
cmc
clc
incl
or
mov
test
dec
mov
mov
das
in
add
js
popf
popa
dec
shl
adc
add
lods
sbb
pop
inc
push
jae
cmpsb
xchg
fdivrp
ljmp
xlat
fcmovnu
repnz
sub
idivl
mov
jno
aam
in
stc
lea
out
movl
pop
pop
not
dec
xor
sbb
push
loope
add
ret
pop
loopne
xlat
daa
push
loop
stc
subl
sbb
xor
mov
cmpsb
mov
jae
jns
or
ljmp
mov
aas
jbe
add
aad
inc
in
movsl
mov
sbb
icebp
xor
pop
cwtl
mov
mov
mov
mov
push
jg
jp
jno
jo
or
decl
jb
outsl
pop
mov
iret
aad
xor
nop
mov
mov
ljmp
rolb
stos
pop
repnz
or
mov
or
hlt
jmp
sbb
mov
lahf
jns
cmp
sbb
mov
ret
jmp
jl
mov
xchg
ret
ja
jmp
mov
push
mov
cmp
cmpsb
xchg
je
fsubrp
or
cmp
add
pop
mov
inc
mov
or
fwait
enter
out
or
es
clc
fdiv
sarl
nop
dec
dec
fildll
enter
divb
scas
subb
xor
imul
pop
cmp
ret
fdivl
dec
sub
xor
sti
clc
fdivrs
scas
fstl
incl
addr16
or
aas
in
add
xor
xchg
loop
imul
hlt
pop
aaa
add
and
mov
cwtl
dec
or
mov
test
cmp
or
arpl
fistps
mov
mov
xlat
ljmp
data16
decb
inc
mov
mov
addb
lcall
test
push
inc
xchg
pop
mov
imul
mov
pushl
ja
push
jl
aas
sub
pop
inc
mov
jo
cltd
fcoml
pusha
call
jmp
imul
push
and
stos
xchg
popa
push
push
daa
add
mov
dec
ret
cmp
outsl
aas
dec
lds
stc
fsubp
dec
lahf
mov
ret
cmp
jb
lock
test
hlt
sar
pushl
adc
add
out
loopnew
or
mov
ljmp
or
xchg
cmp
out
add
mov
into
andb
jg
pop
xchg
mov
test
xor
jg
mov
cmp
out
pop
pop
pop
xor
call
insb
fdivl
clc
dec
outsl
mov
sbb
decl
in
pushf
inc
aaa
test
icebp
rcrb
out
and
fidivs
push
inc
popf
mov
jmp
andb
cmp
pop
inc
scas
test
sbb
in
dec
pop
gs
mov
mov
sub
sahf
cmp
xchg
out
test
decl
push
jae
inc
sahf
je
jae
stc
sbb
out
scas
jecxz
jb
mov
es
jl
testb
mov
and
and
imul
incl
outsl
adc
push
mov
add
adc
fcomps
fwait
subw
xchg
das
jp
sub
sub
enter
enter
in
add
sub
ljmp
aas
lret
pusha
sbb
movsb
cmp
daa
xor
popf
inc
xchg
cmpsb
push
aaa
xlat
stos
pop
and
call
das
sub
inc
and
cmpw
mov
test
dec
arpl
stos
add
repnz
icebp
rorb
mov
jl
repz
inc
mov
jmp
or
pop
shr
enter
mov
jmp
adc
push
or
jne
loope
dec
and
std
cmpsb
inc
cmp
pop
cmpl
cmp
loope
test
mov
test
sub
jmp
mov
lcall
and
xchg
xor
insl
push
movsl
je
jmp
adc
clc
leave
pop
xor
pushl
add
mov
and
jmp
xchg
mov
push
cld
lods
lcall
mov
enter
fwait
sub
jge
popf
jnp
add
inc
mov
mov
lcall
push
mov
inc
stc
jae
das
aaa
subb
fdivs
add
js
pop
ljmp
or
inc
test
inc
lds
hlt
pushf
xchg
pop
push
dec
jbe
icebp
and
pop
mov
call
inc
cld
push
ds
aad
pop
adc
popa
icebp
dec
sub
popf
sbb
and
cld
sub
arpl
decl
ss
dec
jge
sahf
and
addr16
call
mov
test
decl
mov
xlat
push
inc
insb
mov
jl
mov
fdivr
sbb
xor
jle
incl
je
mov
sbb
jae
adc
push
or
mov
aad
sahf
mov
imul
mov
hlt
push
lods
adc
jo
jg
incl
dec
cmp
adc
mov
je
pop
add
mov
cmp
add
pushl
popa
mov
int3
mov
int3
jae
pushl
xor
jle
push
lret
cmp
add
adc
scas
call
sub
aas
pushf
fwait
xchg
mov
pop
adcb
mov
rolb
mov
call
mov
lahf
mov
sub
lock
ret
xchg
xor
and
call
cmp
pop
push
mov
loopne
stos
jo
call
push
or
and
jg
lea
cmp
add
or
test
push
dec
imul
in
decl
dec
stos
pop
push
sar
jno
mov
popf
fwait
int3
aad
mov
dec
lcall
outsb
pop
jmp
push
sub
jmp
sti
adcb
sub
out
pop
or
jmp
cltd
mov
xor
xchg
div
xor
pop
stos
test
push
push
xor
out
xchg
jle
pop
loopne
inc
out
in
mov
ffree
mov
and
pushl
stos
bound
jecxz,pt
push
mov
inc
mov
fstl
and
out
enter
push
and
pop
std
lcall
pop
inc
xchg
stc
push
dec
add
push
pusha
adc
aad
mov
jns
dec
aad
jmp
xchg
pop
mov
pop
pop
jg
lret
ja
push
je
lcall
pop
into
adc
jbe
popf
adc
jno
popf
imul
add
mov
call
std
jmp
scas
jecxz
dec
popa
inc
hlt
aad
out
popa
fwait
mov
jmp
js
mov
jns
and
push
sbb
push
or
adc
mov
imulb
jge
shl
ljmp
out
push
push
mov
rcrl
or
lret
add
shr
jg
lcall
add
jb
mov
shrb
movsb
push
les
pop
add
jmp
xor
adc
in
push
pushf
xchg
in
push
scas
inc
into
rol
cmp
dec
cmpsb
push
push
js
push
test
push
pop
adc
daa
shl
xor
jp
mov
jmp
jecxz
mov
ja
mov
jo
dec
inc
ror
ss
aad
sarb
in
std
aaa
pop
jnp
decl
out
pop
sub
lret
xlat
cmp
outsl
icebp
push
sub
pop
sub
add
jo
pop
push
hlt
pop
stos
imul
jle
xor
test
add
scas
call
cmp
insl
push
cld
cwtl
or
xchg
std
and
pop
lcall
loopne
inc
xor
mov
adc
orb
rcr
daa
inc
mov
pop
pop
mov
cmp
lahf
fiaddl
ja
or
lcall
and
inc
lea
fcmovb
add
ds
fbld
inc
ss
pushf
jns
inc
cltd
or
add
js
fwait
arpl
xchg
aas
daa
ds
mov
sarl
ds
dec
xchg
pop
int3
fildl
ret
mov
sub
popa
push
int3
in
clc
cmp
mov
push
iret
ljmp
pushl
mov
shrl
pop
jae
mov
cs
jnp
mov
or
inc
minps
fwait
das
shrb
int3
dec
xor
jl
call
pop
setg
rorl
rcrb
fs
cmp
add
ljmp
ja
push
sub
or
nop
jae
pop
push
insb
es
push
ret
ja
xchg
lcall
lret
jl
insb
push
adc
add
nop
mov
inc
xchg
and
aas
mov
test
lods
inc
sbb
rorl
inc
mov
ja
imul
lcall
ljmp
out
incl
mov
lds
ror
mov
pushf
cmpsb
lods
dec
push
push
jmp
lahf
mov
cs
pop
ljmp
mov
in
dec
pop
jo
xor
sahf
lds
int
jg
xor
mov
lahf
cli
pop
loopne
mov
or
mov
pop
mov
cld
xchg
pop
jo
push
movl
call
sbb
xchg
incl
jmp
rcl
ljmp
lret
pop
fisubrl
ljmp
pop
aad
movsl
out
outsb
out
jbe
in
mov
int3
cs
push
mov
cmc
pop
cmp
aam
icebp
xchg
push
daa
xchg
cmpsl
jle
outsl
inc
jnp
push
jl
xor
pop
std
adc
int
stos
data16
or
mov
push
lahf
pop
mov
mov
andb
inc
dec
push
or
dec
imull
ret
inc
and
or
decl
mov
das
jo
dec
fst
int3
cltd
in
in
aaa
fsincos
cld
mov
mov
and
sar
jmp
mov
icebp
cmp
rolb
mov
xchg
movsb
mov
call
out
add
lds
sub
enter
jle
mov
sub
lods
fstl
lds
int
mov
mov
repz
aam
or
pop
icebp
cmpsb
stc
mov
inc
add
fdivs
or
mov
js
mov
jmp
sub
stc
push
mov
mov
decl
cltd
inc
mov
xor
cld
scas
sub
ret
push
jnp
sti
out
xor
cltd
lahf
inc
adc
in
lcall
dec
fisubrs
jmp
mov
aam
adcl
and
test
lret
mov
imull
addr16
dec
fsubrl
dec
and
std
testl
out
cmp
fcmovnu
dec
or
gs
in
ret
inc
sahf
pop
int3
push
fdivrs
xchg
fdivr
jmp
insb
outsl
xchg
pushf
movsl
sub
jnp
loope
xchg
push
and
cmpsb
push
xor
jmp
add
aas
xor
xchg
fcomip
iret
dec
inc
out
test
mov
ret
aas
mov
aas
je
lcall
lods
outsb
into
cmp
or
mov
mov
push
repnz
sub
mov
mov
cld
sub
daa
inc
clc
inc
push
push
jns
stos
and
push
ret
fxch
faddl
std
xlat
fisttpl
sbb
mov
arpl
adc
pop
push
mov
loop
xchg
mov
jp
ds
loop
orl
mov
dec
idiv
das
shl
shlb
xchg
bound
fldt
mov
ljmp
call
push
sbb
pushf
test
mov
mov
adc
jg
test
push
daa
sbb
pop
mov
jnp
outsl
cmp
inc
int
in
inc
and
jl
das
mov
int
movsl
cmp
ljmp
push
pop
cmp
jno
mov
fs
fadd
scas
add
add
push
lcall
sub
outsl
lds
test
mov
mov
cmp
jae
test
mov
add
les
out
pop
and
xor
outsl
xor
pop
test
jb
sub
and
xchg
pop
testl
sbb
outsl
dec
mov
jno
mov
cld
decl
push
adc
push
jmp
dec
push
out
push
cmp
icebp
popa
pop
xchg
shll
push
inc
jecxz
or
loopne
dec
pop
imul
mov
or
mov
pop
jns
inc
mov
lea
pop
imul
mov
ljmp
mov
inc
or
push
mov
lahf
sub
sti
cli
jg
adc
fxch
addr16
mov
in
lret
xchg
xchg
mov
ljmp
push
adc
inc
dec
push
xchg
test
or
add
dec
cli
out
clc
and
adc
mov
jb
arpl
dec
and
std
rclb
inc
test
out
xor
std
mov
xor
imul
and
ret
je
sub
lcall
mov
jo
inc
push
push
xor
mov
adcl
jmp
test
fsubs
fcoml
xchg
mov
pop
cmp
pop
sbb
adc
pop
mov
dec
sbb
into
and
fiaddl
jae
xchg
adc
jns
mov
dec
mov
shll
add
push
and
lcall
add
mov
mov
xchg
shl
dec
pop
dec
ljmp
jmp
imul
xchg
js
outsl
or
jmp
cmp
inc
adc
mov
xchg
adc
lcall
jno
sbb
out
sahf
fisubrl
pop
pop
shlb
xlat
fbstp
mov
dec
push
push
daa
dec
lret
int
subl
or
jae
in
sarb
cmp
add
sbb
mov
call
fcoml
fldenv
std
sub
add
shll
pop
test
ds
pop
movsl
rcl
pop
mov
incl
ret
jecxz
lock
dec
jb
dec
push
dec
inc
sbbl
call
lcall
mov
or
jb
pop
push
test
lcall
ds
mov
or
push
sub
xchg
sbb
and
ds
lahf
icebp
lahf
mov
lcall
jecxz
mov
push
jns
push
iret
push
stos
sahf
pop
subl
test
jg
adc
mov
jge
imul
push
pop
and
xchg
adc
mov
subb
call
xchg
mov
mov
aas
andb
adc
daa
mull
enter
ss
stc
decl
adc
dec
xchg
cltd
mov
sbb
dec
lcall
dec
or
pushl
mov
sbb
lret
cmp
lock
les
test
inc
aam
mov
ja
inc
dec
enter
mov
dec
lock
inc
mov
enter
test
fisttps
or
jge
mov
or
notl
pushl
movsb
mov
dec
mov
add
inc
stos
xchg
adc
push
or
and
or
sub
ljmp
pop
arpl
sub
dec
insl
test
pop
stos
add
incl
movsb
pop
out
lea
and
mov
mov
punpcklwd
pop
adc
test
cmp
mov
mov
mov
aaa
out
adc
arpl
dec
clc
pop
test
es
lea
in
addl
jmp
fcmovu
sub
push
mov
pop
ret
idiv
mov
loopne
fst
push
lods
jbe
loope
incl
pushf
jge
leave
call
xchg
xor
push
and
es
rol
std
adc
call
lret
xchg
jne
loop
pop
ljmp
and
xor
ljmp
dec
test
mov
dec
mov
stc
sbb
jg
fisttps
jnp,pt
mov
mov
cwtl
jg
lock
pushl
or
call
dec
fildll
clc
dec
sti
cmpsl
hlt
pop
push
mov
es
int
pop
dec
mov
stc
inc
mov
call
dec
jle
cmpsl
inc
xor
push
mov
inc
ret
xchg
outsl
xchg
lods
call
stos
or
cld
xor
lcall
roll
or
push
int3
lea
adc
stos
adc
mov
nop
mov
adc
iret
out
mov
dec
repnz
clc
ljmp
mov
push
jge
adc
jmp
mov
test
add
nop
hlt
dec
jle
sub
test
mov
inc
sbb
jmp
addr16
aam
cld
sbb
fists
call
xlat
testb
sub
inc
mov
fisubrl
mov
lcall
inc
cmp
lods
sahf
clc
jo
fcmovbe
or
cld
jg
push
push
out
sbb
mov
dec
lock
loopne
decl
dec
cmp
push
out
js
fldl
xchg
xchg
test
mov
or
xorb
ror
cmp
sbb
mov
ljmp
or
pop
and
xchg
ja
xchg
mov
bound
out
test
mov
xlat
decl
jge
lret
dec
mov
shl
mov
dec
fistpl
dec
xchg
mov
stos
xchg
jmp
inc
insl
loope
fwait
dec
xor
cld
fistpl
pop
push
or
sahf
addr16
sbb
inc
nop
test
adc
ljmp
fdivl
outsl
inc
pop
hlt
or
jno
cmp
push
jp
xchg
fnstcw
mov
cmp
test
outsl
cmp
add
in
jb
sub
outsl
mov
mov
jl
les
add
mov
and
sar
lcall
arpl
cmp
push
in
sbb
sbb
fcmovu
fisubl
inc
enter
decl
jl
fisubrl
test
sub
mov
rorl
mov
xchg
jnp
mov
cmp
sub
add
lock
sbb
nop
out
sahf
mulb
mov
jbe
and
add
nop
jb
pushl
jmp
daa
cmpsb
test
mov
push
xor
jmp
insb
dec
xor
int3
clc
fwait
and
adc
mov
sbb
lahf
insb
ret
mov
test
pop
push
ljmp
xor
incl
ljmp
in
jecxz
shrl
sub
mov
sbb
push
icebp
ljmp
xor
out
popa
decl
stc
andb
push
filds
outsl
out
mov
in
xchg
sub
push
cmp
lock
jmp
inc
lods
xor
mov
cltd
out
jae
es
xchg
lahf
dec
incl
inc
xor
cld
test
mov
mov
mov
icebp
rcrb
cmp
decl
jae
mov
out
add
jae
aad
push
leave
push
arpl
mov
jg
hlt
sbb
inc
push
scas
frstor
or
idiv
push
scas
shll
xchg
xchg
cmp
incl
inc
ss
mov
pop
add
divb
js
je
add
stc
out
push
inc
jmp
inc
divb
lret
mov
scas
xchg
out
or
xchg
negl
pop
shll
lcall
test
imul
sbb
es
push
adc
pop
ret
mov
sbb
cmp
cli
mov
or
jle
outsl
fwait
and
pushl
data16
cmp
imulb
dec
push
xorb
int3
fdecstp
repnz
push
xchg
jo
movsl
xor
cmp
fnstenv
sub
jecxz
int3
push
push
mov
pop
cmp
cmpsl
roll
incl
mov
andb
in
add
cmp
test
imul
inc
jg
iret
in
add
jmp
jbe
adc
rcl
rolb
xchg
sarl
shll
push
cwtl
mov
rcll
out
cmp
xchg
in
ljmp
ret
hlt
and
mov
jecxz
and
cmp
imul
lock
cmpb
mov
jae
dec
xor
sub
jbe
lods
leave
ljmp
inc
scas
sub
add
mov
add
mov
ds
shll
xor
stos
jge
std
jmp
cmp
ret
mov
shrb
mov
jg
lcall
and
add
sbbl
xchg
mov
jge
das
cs
mov
add
lcall
fidivrs
imul
push
fstps
push
jg
cld
add
jnp
xor
arpl
cmp
clc
add
decl
xchg
test
or
in
sub
xor
rcll
popf
dec
lods
insl
fwait
sar
inc
popf
inc
jbe
jnp
jne
cmp
es
fidivrs
jmp
fdivrl
or
sub
sar
jg
jae
dec
stos
movsb
nop
popf
jo
pop
or
scas
dec
xchg
out
jg
add
call
cmp
fisubl
aaa
sub
jle
repnz
lretw
jecxz
lcall
xchg
out
push
lret
mov
mov
pop
dec
jbe
pop
cs
cmp
imul
call
cltd
lahf
and
mov
lret
cmp
xor
add
ret
inc
cmp
mov
aad
test
ljmp
stos
fs
cwtl
pop
fists
push
scas
inc
cmc
mov
das
lea
out
jle
mov
and
ret
cmp
cmp
push
lods
and
ror
fcmovnb
cmpl
fildll
mov
dec
inc
aam
jne
inc
adc
mov
mov
xor
lret
xchg
imul
mov
fucompp
cmpsb
decl
mov
adc
jmp
dec
imul
xor
inc
sbb
ljmp
fs
cld
idiv
lods
pop
jmp
outsl
das
lds
jnp
insl
test
xchg
jmp
addr16
int
sarl
lcall
popa
js
jle
stos
enter
xchg
ja
lock
fadds
adcl
xor
in
push
push
addl
hlt
and
popf
arpl
out
mov
push
mov
mov
or
cld
decl
outsb
je
pop
jg
mov
arpl
fsubl
rolb
push
push
jbe
push
add
pop
hlt
lock
push
ds
scas
xor
xorb
dec
mov
push
fisubl
add
and
in
mov
jb
pop
fcomip
cmp
adc
inc
pop
into
dec
insl
jg
push
lcall
insb
fadds
sbb
call
adc
adcl
loop
daa
and
xor
xchg
in
xor
xor
std
pop
push
pop
leave
push
cld
jle
insb
cld
fidivrl
imul
bound
fdiv
fstl
mov
ficoml
loop
push
push
add
pop
cmp
scas
mov
jle
lcall
aad
cmp
mov
scas
cli
repnz
dec
or
jecxz
popf
jne
mov
jo
das
clc
out
xchg
push
fcoml
ret
mov
jp
xchg
mov
or
push
and
pushl
add
pop
mov
scas
push
fwait
icebp
push
sub
jno
jecxz
add
pop
loopne
jl
jp
enter
mov
loopne
insb
std
xchg
adc
aas
push
ja
incl
test
pop
popa
mov
xor
dec
ljmp
or
xor
arpl
test
sti
inc
add
mov
pop
xor
lcall
aaa
xor
sub
jg
sahf
mov
adc
dec
andl
imulb
nop
sbb
out
jo
jnp
sbb
and
cmp
fidivl
sub
xorl
loop
repz
xor
in
jns
xchg
mov
lock
inc
out
or
mov
nop
add
and
bound
scas
shr
jg
xor
mov
test
xchg
popf
add
decl
or
adc
pop
sub
in
cld
ret
mov
cmp
lret
push
push
fsubl
push
mov
pushl
sti
int3
xchg
ja
pop
lock
or
mov
out
testb
cmpsb
mov
in
pushl
pop
adc
movsl
sub
or
pop
inc
movsb
int3
mov
repz
pushl
cld
incl
mov
add
mov
outsb
add
mov
push
decl
adc
mov
test
hlt
xchg
test
inc
ja
jg
movsl
adc
movsl
sbb
push
shlb
sub
addr16
aam
mov
stc
imul
ljmp
sbb
scas
xor
fwait
movsl
mov
addb
movsb
ljmp
decl
stos
mov
cmc
cs
fdivrl
jge
nop
push
inc
cmpsb
adc
adc
fidivrl
cmpsb
xor
jge
jns
stos
movb
xlat
push
push
repnz
test
push
popl
and
dec
outsb
push
pop
sub
jns
inc
faddl
inc
aam
les
xchg
add
mov
fiaddl
cmpsl
xor
decl
lret
mov
scas
and
outsb
sarb
lock
and
jmp
jp
mov
xorb
push
push
push
push
mov
sub
icebp
call
cmpsl
outsl
push
jb
xchg
movsb
mov
dec
test
sarl
mov
mov
pslld
test
pop
jns
mov
sbb
mov
mov
jmp
in
sarl
xchg
addb
adc
jae
jo
mov
push
ja
decl
or
popf
add
xchg
sbb
cmp
mov
lcall
clc
ljmp
cs
test
sub
and
movsl
jmp
mov
jbe
test
jmp
addr16
dec
push
jae
pop
jmp
jecxz
je
dec
pop
int3
adc
and
or
xor
daa
pop
test
imul
mov
sbb
test
imul
mov
jae
mov
pop
fnsave
xchg
ljmp
aad
roll
adc
pop
scas
outsl
pop
and
shlb
out
fildll
add
arpl
gs
mov
cmpsl
pop
jl
xor
test
icebp
pop
cmp
sti
sub
loop
jmp
ret
xchg
ffreep
out
out
jno
push
ss
lea
incl
push
outsb
int
adc
sub
jle
jae
inc
ljmp
je
xchg
xorps
clc
dec
das
xor
int3
mov
cbtw
add
xchg
hlt
loopne
aas
sbb
cmpsb
std
jnp
sub
xchg
fcmovb
repnz
inc
in
iret
pop
aam
lock
push
xchg
mov
dec
out
ja
cmp
mov
cld
xor
push
sub
fisttpl
cmpsl
pop
ja
push
ljmp
ja
push
lcall
push
mov
jle
imul
mov
loopne
mov
adc
dec
loope
call
xlat
lods
mov
jecxz
xchg
mov
jb
mov
lock
inc
ret
mov
in
fldt
sbb
mov
xchg
arpl
or
lcall
test
popf
jg
inc
sub
outsb
shlb
pop
lock
fnstcw
jmp
and
pop
ret
hlt
mov
out
ja
mov
imul
cmp
jnp
adc
pushl
cmp
push
mov
in
or
pop
ret
xchg
loope
movsl
lock
decl
mov
jmp
add
aaa
punpcklwd
mov
mov
pop
hlt
mov
pushf
inc
scas
sbb
pop
call
mov
in
les
les
mov
xchg
jbe
or
xlat
jl
out
leave
iret
and
fcomip
add
jg
or
mov
iret
cmp
iret
pop
jle
add
dec
fs
mov
lods
insl
xchg
sbbl
jp
dec
shl
lret
in
es
push
stos
jmp
and
test
aas
mov
out
cld
ret
lods
stc
rol
ret
add
mov
push
in
push
pop
int3
loop
and
adc
jp
and
inc
pop
in
fistps
xchg
push
jge
in
mov
pop
xor
adc
insl
call
std
cwtl
xchg
loopne
adc
out
cli
fdivs
ja
sub
fisubl
sbb
imul
or
lods
push
cmp
inc
loop
lahf
lds
scas
cli
dec
imul
aaa
stos
mov
and
fwait
cmp
out
aam
stc
fcmovne
aam
arpl
dec
mov
xchg
mov
ljmp
loope
push
arpl
popl
mov
xor
filds
push
imul
call
fldt
mov
lods
adc
ds
xchg
mov
movsl
jle
xor
push
dec
mov
jmp
pop
cmp
or
pop
and
fildll
mov
fwait
cmove
sbb
decl
insb
pop
or
mov
push
or
jno
cld
fsubrl
xor
loope
xchg
stc
mov
pushl
subb
push
jb
cmp
sub
cmc
mov
jg
int3
jae
das
inc
adc
ljmp
sbb
dec
mov
push
imul
divl
jnp
loope
shlb
popf
adc
dec
add
sbb
cmpsb
mov
hlt
xchg
fsub
pop
pop
lds
aas
mov
cld
sbb
addb
stos
sbb
daa
or
pop
hlt
ret
or
xchg
mov
push
adc
insb
mov
ja
add
mov
pop
arpl
cmp
mov
ficomps
mov
mov
mov
in
inc
es
lret
cwtl
mov
dec
outsl
jge
sbb
fdivrs
mov
mov
or
jo
inc
loopne
jmp
cmpb
into
xlat
enter
xor
addb
and
mov
push
push
jle
rorb
loop
sbb
mov
popf
mov
ljmp
sarl
sahf
in
xchg
test
sahf
les
outsl
inc
mov
and
cmc
mov
xchg
movsb
bnd
in
fbld
mov
cmpl
mov
jle
jg
or
xor
push
push
lds
decl
icebp
pop
jns
cld
add
outsb
dec
jo
ret
movsb
ret
mov
jnp
shlb
sbb
outsb
add
mov
insb
fwait
outsb
add
jno
xor
sub
jmp
push
clc
fisubrl
cmp
sbb
dec
xchg
inc
out
hlt
fcmovbe
and
mov
aas
aad
push
jg
inc
fs
gs
imul
mov
lcall
sbb
xor
cmc
ja
in
popf
loop
out
fisttpl
cli
movsb
mov
sub
outsb
or
call
add
inc
fistps
mov
adc
xor
aas
test
cwtl
xor
jb
dec
push
incl
adc
iret
dec
fstpl
xor
jg
icebp
mov
mov
jg
sbb
out
js
jns
jmp
shrl
test
mov
cltd
fcmovne
out
popf
ss
mov
jno
add
dec
sbb
out
cld
mov
mov
outsb
incl
add
and
outsb
push
jnp
jbe
sbb
dec
dec
fcomp
cwtl
xor
into
inc
loope
pop
sar
lcall
add
jne
cmp
sub
adc
loope
xchg
jl
mov
push
pop
lods
scas
jg
inc
fs
mov
icebp
loopne
sbb
sub
mov
ljmp
and
fs
mull
add
rorl
sbb
cmp
call
mov
fnstsw
pop
pop
push
ss
outsl
dec
addl
arpl
mov
lcall
sbbb
fisubs
sbb
dec
push
add
sbb
jb
sub
test
jg
ljmp
fcomps
int
sub
sbb
push
jecxz
pop
cmp
idivl
pop
and
fnsave
pop
inc
cmpsl
decl
lock
push
adc
loopne
in
mov
lds
and
lcall
mov
and
pop
orb
mov
imul
mov
xchg
ljmp
icebp
mov
outsb
orl
out
or
push
sarl
out
cli
lcall
ss
fcomip
cs
enter
push
and
adc
aad
dec
std
decl
push
mov
mov
ds
jmp
adc
lds
mov
mov
and
sub
adc
xor
in
scas
cli
call
mov
aaa
mov
push
inc
mov
rcl
pop
pop
mov
dec
jo
dec
sub
aaa
subl
fwait
cmp
add
sub
popa
dec
lock
lcall
xchg
out
sbb
add
fmuls
adc
sbb
insl
push
push
fisttpll
icebp
rorb
out
imulb
arpl
test
pop
pushf
mov
xor
mov
and
jns
cld
jg
cmpsl
cmc
or
jbe
jo
xchg
or
pushl
cmp
jb
push
cld
mov
inc
lret
iret
arpl
fs
faddl
stos
divl
ljmp
adc
lods
cmpl
jg
test
sbb
into
in
add
mov
dec
subl
sub
clc
pop
mov
outsb
test
call
lret
loope
scas
cmp
decl
push
adc
pushf
sarb
push
in
dec
pop
jno
out
adc
lcall
sbb
mov
cmp
mov
inc
scas
inc
rorb
inc
pop
cmp
push
out
out
clc
jmp
lods
fsts
lods
leave
arpl
xlat
in
mov
push
pusha
jae
test
je
jg
decl
es
adc
sbbb
mov
adc
sbb
mov
addr16
xor
popf
cmp
data16
jns
xor
cltd
push
fistpl
cmpsb
nop
add
xchg
pop
jp
rorb
push
lods
mov
jmp
mov
add
loop
mov
mov
xlat
dec
mov
rorl
insl
mov
into
xor
add
push
adcb
or
out
dec
sub
clc
jg
addr16
in
std
imul
and
cli
icebp
sub
mov
pop
insl
mov
pop
bswap
jle
ljmp
jl
lods
outsl
fmull
out
cmp
mov
outsb
or
sub
push
ljmp
or
add
xchg
mov
pop
mov
cltd
decl
lock
mov
mov
pop
mov
ds
lods
or
push
std
jmp
xchg
fisubrl
jmp
cmc
adc
es
adc
std
call
test
dec
jmp
inc
pop
lret
pushf
clc
out
or
out
ficompl
pop
movsb
pop
pushl
push
pop
aad
loop
jl
cmp
insl
inc
lods
aam
adc
repz
in
mov
add
dec
pop
jmp
inc
xor
jp
xchg
lret
mov
jmp
xchg
jl
sbb
gs
stc
fiadds
shlb
fmull
inc
je
inc
cld
pop
aad
push
clc
idiv
out
xor
adc
loope
fs
jg
lret
fsts
repnz
repz
sub
call
test
sbb
pop
adc
xchg
mull
dec
mov
fsubrl
xor
lods
mov
mov
adc
jo
ja
movsl
repnz
jmp
data16
adc
jnp
adcb
push
je
inc
mov
jg
je
adc
push
mov
fsubrl
jb
push
jne
mov
movd
ja
lcall
mov
pop
les
jne
and
add
xchg
lods
ret
outsb
mov
mov
test
rcrl
cmp
addr16
imul
ja
jmp
push
data16
push
push
mov
mov
dec
clc
sahf
ljmp
decl
lock
fdivrl
mov
aam
dec
mov
or
adc
adc
push
rcrl
push
mov
int
cmp
in
cmpsb
ljmp
inc
jg
mov
das
out
and
insb
xacquire
mov
jno
dec
adc
ficomps
pop
gs
mov
call
cld
mov
xor
cmp
out
mov
lcall
mov
cwtl
mov
ficomps
pop
rorb
mov
jbe
sub
shl
and
inc
addr16
jg
in
xchg
jae
decl
lock
adc
push
jno
xor
cmp
push
adc
pop
fs
adcb
mov
loope
xor
mov
push
pusha
ljmp
jg
or
in
jno
dec
cli
pop
mov
das
push
or
dec
sahf
inc
mov
sar
icebp
cld
pushl
jno
jmp
jl
xor
adc
ret
ss
mov
stos
sbb
mov
sbb
pop
scas
ljmp
iret
mov
cwtl
mov
dec
lods
lods
xor
mov
push
loope
movsb
jno
nop
dec
pop
rcrl
jl
lods
mov
insl
cli
adc
mov
dec
loope
mov
cli
xchg
pop
lds
gs
mov
das
cli
call
mov
pusha
jne
adc
cmp
add
lret
pop
cld
xchg
adc
fldl
stos
fisubs
xchg
sarb
inc
je
scas
and
pushl
test
std
aaa
cmp
rorb
sub
je
adc
xchg
call
push
xchg
clc
mov
fs
push
jo
mov
fistpll
scas
or
cmp
enter
mov
pop
cwtl
jae
scas
out
adc
mov
jbe
cld
ret
mov
add
xchg
fsubp
pushf
and
ds
pop
lock
test
add
mov
jg
ror
mov
loope
in
xlat
rcr
adc
clc
aas
cltd
test
push
leave
scas
shlb
cmp
decl
xchg
jg
shlb
cmp
jge
inc
adc
jg
rcrl
je
lods
sarl
lret
mov
lcall
call
sbb
ret
adc
mov
data16
jge
cmp
jmp
xor
pop
loop
aam
cmp
mulb
incl
or
add
inc
scas
mov
jmp
popa
shrl
cmp
sti
mov
lods
push
jns
push
aaa
cltd
and
sbb
mov
mov
jmp
mov
mov
mov
pop
cmpsb
xor
xor
call
sbb
mov
jae
pop
rclb
jne
xor
sbb
loope
mov
adc
cli
mov
incl
test
icebp
mov
lock
inc
popa
adc
aas
dec
popf
pop
jae
adc
rclb
cmc
push
popa
mov
pop
push
adc
xor
push
mov
cs
mov
xlat
jnp
mov
or
jmp
je
outsb
push
mov
jno
jle
les
add
js
test
loop
xchg
movsb
mov
xor
sub
xlat
lahf
out
cwtl
mov
repz
fdivp
in
adc
and
sub
movsl
out
jns
dec
cld
pusha
xchg
jp
pop
cmp
dec
sub
xlat
std
out
orps
scas
test
pop
ficomps
and
and
jne
movsl
mov
sub
add
cmp
jmp
pop
test
xchg
or
test
out
clc
out
mov
inc
sbb
inc
test
shrl
xchg
jmp
fldenv
jbe
and
push
icebp
das
loope
pop
aam
cld
pop
and
lret
dec
inc
mov
xchg
test
inc
lods
add
lcall
repnz
xor
popa
cmp
fldenv
popf
sarb
mov
je
test
mov
dec
add
mov
insb
jb
xchg
jge
fsubrp
adc
sub
jne
inc
sub
scas
inc
hlt
inc
and
pushl
push
xlat
pop
xchg
or
mov
jg
jp
imul
movsb
pop
in
xchg
sbbl
notb
cmpb
imul
and
nop
bound
mov
cmp
pop
pop
lock
fs
in
lods
mov
adc
xor
test
jne
push
add
jno
cmp
jne
mov
dec
ljmp
mov
pop
push
outsl
adc
lea
push
dec
sbb
push
push
xchg
jg
ljmp
sbb
cmp
mov
sbb
arpl
call
or
fldt
cwtl
cmp
xor
mov
jnp
and
push
mov
cwtl
pushl
cld
call
test
cmpsb
mov
push
sub
xchg
lea
stos
enter
cmp
lea
sub
pop
jae
xchg
das
mov
sub
cmpsb
mov
inc
jno
xor
lcall
xor
hlt
dec
mov
adc
mov
ret
cmpsl
aad
int3
push
pop
sub
decl
xchg
movsl
outsl
add
and
rcr
fsts
sub
std
decl
vdivsd
jmp
xchg
cmpb
movsb
lock
cltd
and
pop
fnstenv
pop
fiadds
dec
push
cltd
adc
sub
cmpsl
sbb
dec
icebp
jb
dec
outsb
or
cmp
decl
ficomps
or
pop
fisttpl
int3
in
sub
decl
jnp
mov
leave
test
in
int
and
repz
xchg
aaa
faddl
adc
jmp
fisttpll
push
ret
fdivrl
fsubl
shl
xchg
lcall
cmp
push
test
cmpsb
pop
add
jb
imul
push
cmc
mov
jecxz
adcl
jg
iret
arpl
pushf
inc
ss
or
lods
xor
pop
out
packssdw
push
dec
pop
cltd
or
pop
add
cmp
and
mov
ljmp
hlt
sub
je
jo
mov
shll
jg
rolb
mov
pop
and
cli
adcb
add
rcr
add
loopne
sbb
lcall
push
pop
push
rolb
mov
repz
hlt
cmpsb
fadds
push
sub
inc
loope
mov
decl
push
cmp
imul
pop
lahf
and
jne
pop
xchg
ljmp
and
fimuls
sub
clc
xor
pop
lods
ljmp
dec
dec
sahf
jg
ljmp
test
loope
leave
out
cltd
pusha
sbb
or
inc
jae
xchg
incl
insl
jp
daa
inc
mov
fsubrl
pop
es
xchg
gs
fidivrs
fiaddl
clc
ljmp
xchg
cmp
xor
add
call
shlb
decl
mov
popa
movsb
test
cmp
sbb
push
mov
aam
ret
mov
ret
gs
out
adcb
das
cli
inc
incl
mov
lea
pop
and
lds
xchg
int3
sahf
arpl
mov
xor
mov
mov
decl
outsb
dec
stos
dec
push
adc
xor
ljmp
xchg
pop
pop
adc
cmp
pop
lock
add
and
mov
sub
fsubl
test
or
stc
sub
in
cmp
adc
adcl
test
fcomip
pushl
dec
lods
repnz
mov
mov
xchg
add
xchg
lds
ret
adc
xchg
adc
dec
scas
pushf
in
mov
lea
and
leave
cli
push
pop
xchg
or
lock
sbb
cmp
lcall
sbb
les
push
js
pop
dec
enter
and
daa
fsts
lcall
decl
adc
add
or
mov
ret
scas
not
adc
dec
jno
pushl
push
cmpsl
or
adc
fs
dec
jnp
enter
pop
popf
inc
mov
int3
cmp
jne
rcll
adc
adc
fbstp
adc
outsl
push
outsb
mov
fiaddl
pop
dec
sub
pushl
std
jo
into
sub
mov
andb
add
push
out
dec
add
dec
xchg
fucomi
cmp
mov
ret
aam
insb
jnp
pop
ja
add
mov
pop
icebp
call
cmp
xchg
mov
popf
outsl
push
fwait
cmp
in
inc
jle
lcall
test
inc
lahf
sbb
or
aad
push
or
push
dec
cmpsb
popf
mov
and
ljmp
dec
repz
xlat
mov
lods
sbb
jp
mov
fwait
jle
jg
decl
jl
dec
scas
push
inc
mov
pop
popa
push
xor
adc
fmulp
or
fnstenv
call
bound
mov
xlat
sub
xor
xor
leave
mov
inc
mul
and
sbb
cmc
add
nop
jb
mov
jl
and
scas
nop
cmc
jmp
lcall
dec
sbb
fimull
call
jecxz
lret
push
adc
jmp
adc
push
scas
scas
adc
lds
mov
add
pushf
xchg
out
push
mov
cmpsb
cmpsl
dec
xchg
mov
arpl
imul
clc
push
and
mov
ljmp
cmp
xlat
loop
arpl
jle
mov
xlat
push
jg
and
and
cltd
js
add
lock
hlt
jle
inc
jns
add
jg
add
xor
adc
pop
sub
adc
push
out
xor
pushl
push
inc
insb
dec
out
ret
adc
inc
es
xchg
or
add
adc
gs
clc
ljmp
or
popl
sub
leave
dec
add
mov
test
insb
and
push
jle
and
and
out
push
adc
sbb
mov
adc
jg
cs
test
dec
push
jnp
sbb
mov
push
push
js
mov
add
scas
add
jg
aas
je
call
or
dec
sbb
rcl
out
or
lock
mov
dec
sub
lcall
mov
xchg
out
int
mov
jne
imul
xlat
xchg
or
adc
rol
int3
inc
cmpsl
hlt
fwait
push
mov
mov
andl
call
mov
jns
mov
pop
adc
rorb
xlat
pop
iret
loop
sbb
add
cld
call
vmovaps
imul
mov
shrb
mov
or
lds
clc
loope
xchg
outsl
jo
incl
adc
cmc
aam
negl
pop
jp
mov
lock
jno
inc
std
mov
mov
or
mov
call
ljmp
test
dec
mov
mov
dec
jo
nop
aad
inc
add
cld
shlb
jge
push
mov
add
in
insb
push
pop
loop
xchg
dec
repnz
clc
cli
lds
decl
jo
pop
cwtl
dec
cwtl
mov
cmc
aaa
out
in
xlat
xor
inc
test
dec
push
mov
jmp
jae
mov
and
lock
dec
in
vmovaps
mov
push
xchg
xchg
dec
stos
aam
pushl
inc
dec
rorl
out
cmpsb
aad
scas
push
mov
jge
lahf
stos
loopne
jne
cmp
dec
mov
jl
cwtl
pusha
and
adc
lds
adc
mov
pop
mov
add
shll
pop
mov
inc
and
cs
mov
decl
inc
or
adc
xor
mov
fildl
bound
call
les
mov
add
dec
push
out
or
inc
sar
inc
stc
add
add
mov
in
vmwrite
js
pop
sub
jne
mov
jecxz
mov
decl
push
int3
or
movb
les
push
insl
popa
pushf
jb
sub
andb
jp
fdivrp
insb
inc
xchg
cld
movsb
and
push
mov
imul
cli
lock
clc
pop
dec
orb
cld
hlt
lret
pop
ret
inc
adcl
addb
ljmp
and
aad
cmpsl
mov
adc
popa
push
insl
inc
or
dec
jp
idiv
call
sti
mov
dec
push
mov
and
cmpsl
xor
xor
div
test
rol
ja
cmp
mov
push
inc
push
out
sub
xor
jno
adc
add
mov
insb
xlat
leave
sbb
sbb
sbb
pushf
push
sub
xchg
lahf
mov
fisttps
loopne
or
lcall
cli
imul
jmp
es
jg
outsl
je
add
sbb
or
inc
lea
enter
and
lds
and
sbb
push
hlt
push
rcl
mov
inc
stc
mov
push
jmp
push
cli
mov
sub
xor
and
xlat
pop
loop
jae
fwait
rclb
pusha
or
sbb
sub
clc
call
ja
out
adc
sbb
or
or
clc
scas
test
pushl
jg
jns
test
fimuls
or
xchg
sbb
pop
mov
jmp
dec
fldenv
testl
add
push
rcll
sbb
sub
mov
fwait
rol
inc
ss
lcall
xor
lcall
out
icebp
add
or
mov
push
mov
aam
jno
movsb
push
push
lret
icebp
clc
incl
push
sbb
dec
pop
stc
push
dec
add
inc
sub
cs
mov
lcall
fldcw
push
add
cmpb
cltd
and
adc
test
call
int3
add
mov
inc
scas
fnsave
mov
adcb
mov
and
cmp
imull
mov
leave
sti
dec
inc
lcall
nop
stos
mov
loopne
push
or
xchg
xchg
sub
sbb
adc
pop
sub
push
scas
daa
pop
adc
lret
jmp
sbb
and
mov
mov
xor
call
jmp
or
and
and
rorb
mov
xor
outsb
test
and
and
xor
cltd
loopne
imul
cwtl
fnsave
pop
cmp
nop
dec
pushl
rolb
add
mov
idiv
das
test
pop
in
and
adc
xor
rcrl
popa
cld
pushl
fs
lahf
dec
mov
leave
mov
ret
xor
push
xor
and
lods
nop
fbstp
or
dec
push
adc
clc
ljmp
mov
add
mov
call
and
or
out
orb
mov
push
push
inc
jno
xor
cli
sub
or
out
xchg
jmp
out
orb
aas
adc
dec
inc
jae
push
loop
adc
mov
xchg
mov
out
clc
dec
or
sbb
ja
ret
xchg
dec
pusha
mov
jb
cmp
addr16
xchg
cld
xchg
rolb
cmp
call
outsb
inc
pushf
pop
mov
cltd
aas
cmp
imul
add
fisubl
ret
outsl
mov
movsb
ljmp
and
shrb
mov
in
add
aam
and
cmp
pop
sub
pusha
mov
mov
inc
gs
pop
hlt
or
mov
mov
xor
shlb
in
lods
stos
xor
inc
in
adc
incl
inc
dec
add
cmc
lea
pop
xchg
push
cmp
cmp
scas
sub
sub
xchg
or
cltd
pop
mov
push
pop
scas
sub
ja
xchg
insb
xchg
add
xchg
dec
orb
push
ljmp
iret
xor
rorl
les
out
cmp
xchg
test
daa
sbb
mov
push
and
sarl
popf
mov
dec
or
sub
xchg
mov
shrb
and
test
clc
lcall
push
mov
inc
arpl
data16
xor
push
sahf
sar
jmp
bnd
inc
add
inc
inc
addr16
sahf
ss
adc
fwait
pop
mov
pop
adcb
inc
sti
shlb
cmc
daa
pop
dec
nop
and
adc
in
ds
or
jbe
out
sub
mov
pushl
xlat
cmp
ljmp
mov
lcall
std
mov
cli
outsb
jb
xchg
lods
push
rolb
cmpsb
mov
push
out
mov
ljmp
inc
lods
xlat
push
inc
aad
mov
or
mov
and
cmp
fwait
mov
adcl
dec
pop
pop
into
fiadds
pop
add
jo
sar
incl
in
mov
clc
ja
add
sbb
xor
adc
dec
cmpsl
shl
inc
enter
jg
mov
or
and
push
sahf
inc
and
dec
fdivrs
loopne
mov
fwait
incl
in
fisttps
jns
push
lcall
pusha
mov
ret
and
or
or
stc
movsb
mov
fldl
fldcw
lahf
adc
cmp
in
es
inc
sarl
lock
push
jmp
adc
mov
and
or
xor
or
or
and
jl
xchg
ljmp
inc
mov
push
xor
add
stos
js
add
call
insl
imul
adc
decl
adc
adc
cmc
inc
dec
push
int
mov
sbb
adc
lret
fldl
ljmp
adc
sub
js
mov
lcall
sahf
mov
mov
xchg
stos
mov
into
in
adc
insb
jo
pop
sbb
adc
lcall
xchg
mov
cmp
out
js
nop
xchg
das
pop
pop
pop
dec
sarb
divl
jnp
test
iret
push
ret
or
scas
icebp
push
leave
call
cld
and
adc
clc
adc
sub
inc
jmp
clc
js
mov
filds
and
add
inc
push
test
or
jg
ljmp
or
dec
or
flds
mov
ficompl
bound
fildll
inc
push
js
cmpsb
or
sub
dec
add
xchg
push
mov
sbbl
pop
jle
cmp
incl
movb
sub
or
sbb
pop
add
pusha
jne
add
cmp
lods
jl
and
inc
adc
ret
mov
mov
jmp
jg
cmc
clc
mov
add
xchg
or
or
add
call
loopne
pushf
mov
mov
icebp
fs
mov
subl
call
sub
adc
xchg
dec
sub
cmpl
stos
in
jmp
icebp
ljmp
es
push
mov
rcrb
scas
jo
sti
xlat
inc
adc
sub
mov
jmp
adc
push
gs
mov
and
add
mov
lcall
mov
decl
ds
scas
add
add
test
adc
std
or
outsl
inc
mov
push
nop
add
into
sbb
adc
mov
inc
sbb
adc
add
popf
jle
call
leave
jg
test
hlt
mov
cmpsb
jo
jbe
decl
mov
mov
sarl
dec
pop
movsl
push
loopne
js
hlt
and
lret
montmul
cmpsb
add
fdivl
in
cmp
mov
mov
gs
and
ljmp
mov
xchg
xchg
rclb
and
test
adc
xchg
push
pop
or
int3
sti
sub
adc
jne
sub
dec
add
mov
sbb
fistpll
and
call
mov
push
jb
test
rolb
sbb
lea
mov
jmp
jge
fmuls
and
dec
test
xchg
fwait
roll
sbb
in
pop
sbbb
lcall
and
mov
stos
loop
mov
lock
jo
roll
xchg
out
mov
lds
sbb
mov
adc
add
aas
addl
and
lahf
or
decl
and
and
jecxz
lret
push
jae
mov
loope
movsl
aad
lret
and
clc
fbstp
pop
xchg
sbb
xor
addb
push
push
pusha
jl
cwtl
inc
push
cs
lcall
push
test
popf
cwtl
call
or
jmp
sbbb
cmpsb
stc
int
jmp
cmp
mov
mov
dec
test
jmp
addr16
lea
adcb
xlat
pop
and
and
push
sub
mov
outsl
mov
sbb
adc
ror
sbb
ret
pop
das
jbe
xor
mov
xor
sbb
cli
mov
add
xchg
lret
jl
mov
pop
mov
call
fwait
int
fcomps
cmpsb
in
cld
adc
call
pop
inc
cmpsl
push
xchg
add
iret
mov
dec
and
pop
pushw
daa
push
fcomps
pop
stos
xchg
jae
push
mov
das
sub
fwait
cli
cli
cli
inc
cmpsb
ret
xor
jo
inc
adc
and
pop
stos
pop
aad
and
std
out
out
mov
mov
and
mov
out
nop
and
decl
or
and
add
insl
cwtl
cmc
mov
cli
push
ret
push
pmullw
dec
sbb
and
icebp
mov
pusha
cltd
aam
inc
pop
jle
mov
imulb
fisubrs
jo
test
mov
jl
ret
jg
call
icebp
sub
adc
out
jle
int3
int3
outsl
dec
add
rclb
cmp
lcall
lea
jb
lret
fistps
aas
outsl
sub
push
dec
and
mov
inc
lock
lcall
xor
mov
popf
sbb
add
lcall
mov
test
push
imul
jmp
xchg
xor
popf
mov
pop
pop
iret
sub
dec
xor
sub
xchg
adc
das
clc
ljmp
out
adc
movsb
clc
fs
sahf
xchg
inc
int3
dec
test
cmp
fcomip
loop
ja
xchg
mov
lcall
aaa
inc
jge
push
popf
hlt
test
inc
loopne
in
clc
jmp
mov
cmp
cmp
fs
mov
and
pop
aam
call
std
call
lret
loopne
test
push
xor
arpl
adc
xor
subb
inc
mov
ret
dec
mov
rcrl
fimuls
cwtl
movsb
mov
pushl
roll
jmp
mov
icebp
adc
xchg
gs
stos
dec
pop
xor
pusha
mov
loopne
mov
js
adc
push
pushf
pop
daa
mov
ret
leave
outsb
stos
shlb
call
enter
mov
cld
or
scas
stos
cmp
xchg
mov
outsb
xchg
mov
lods
jle
mov
ss
mov
scas
adc
gs
dec
mov
mov
lea
out
insb
ss
arpl
in
sbb
mov
fs
cld
or
mov
clc
pop
xor
jle
push
repz
cmp
inc
sub
sbb
out
les
and
lcall
jmp
std
cmp
lret
data16
out
cmp
mov
rcll
fs
incl
leave
xor
into
fcoml
adc
mov
fldl
adc
call
lcall
jle
es
nop
cmpsl
sbb
cwtl
divb
out
mov
cmpsl
rorb
inc
adc
mov
addb
xchg
out
push
dec
inc
cld
push
push
insl
dec
lret
repnz
orl
or
shll
jb
adc
mov
outsb
sahf
loopne
mov
inc
xorb
decl
push
add
add
sbb
in
inc
pop
repz
push
xchg
adc
flds
daa
mov
xor
push
jmp
je
dec
jns
adcl
mov
mov
fistl
dec
and
decl
adc
cmp
add
rolb
fdivr
inc
jnp
jnp
push
add
icebp
xchg
jecxz
dec
cld
out
hlt
and
mov
ljmp
enter
ret
iret
es
xchg
popa
or
dec
or
out
adc
lea
push
jg,pn
cmc
jmp
or
call
jb
in
pop
pop
out
fcomip
incl
jns
daa
adc
dec
in
pop
push
sub
mov
lcall
rolb
xchg
inc
add
nop
xchg
add
fwait
pop
adc
cmp
or
cld
cmpsb
fdivl
inc
inc
rcll
addl
push
mov
adc
decl
call
sub
and
cmp
cmpsb
push
and
xchg
ret
dec
out
scas
icebp
or
inc
mov
mov
inc
xchg
int
mov
cmp
xchg
or
adc
jmp
jge
xchg
cmp
decl
pop
sub
mov
or
mov
test
ljmp
movsl
lcall
call
mov
in
gs
and
pop
cli
lret
jmp
push
cwtl
add
call
mov
pop
or
or
rol
dec
cs
sarb
xor
sub
cmp
cmpsb
repnz
leave
loop
cmpb
clc
lcall
loope
inc
fnsave
fwait
and
gs
xor
push
je
or
push
xor
incl
mov
rol
jmp
add
dec
popa
mov
in
call
sbb
dec
inc
daa
inc
pop
mov
popa
cmpsl
cmp
cmpsl
shll
in
push
and
jge
pop
push
xchg
push
jmp
pushf
mov
pushf
lahf
mov
lods
push
stos
mov
repz
pushf
dec
arpl
mov
pop
outsl
jecxz
je
and
ss
or
lahf
and
push
cmp
cmp
jg
out
fdivl
xchg
sbb
in
jle
sub
je
arpl
out
fisubs
pop
lock
inc
xchg
push
icebp
out
adc
lods
call
sbb
adc
lcall
adc
mov
sbb
les
xchg
mov
pop
rclb
mov
pusha
sbb
pop
sbb
and
decl
test
loope
mov
mov
add
mov
cmp
mov
pop
imul
push
fdivrl
push
jg
aaa
pushf
call
loop
push
ljmp
add
jns
sbb
dec
sti
add
je
sbb
cld
mov
out
mov
pop
mov
xor
add
ret
pop
cwtl
jle
cs
inc
push
jecxz
adc
call
dec
xor
xor
mov
push
popa
mov
jl
mov
pop
in
push
cltd
aad
dec
mov
inc
aas
dec
inc
lahf
dec
andl
pushl
inc
cltd
dec
out
pushf
and
cmp
pop
loop
js
mov
int
mov
xchg
outsl
xchg
icebp
mov
jo
shlb
or
stos
gs
enter
jg
pop
adc
xchg
lret
pop
mov
sbb
inc
dec
jmp
xor
inc
int3
in
clc
add
clc
jb
pop
and
mov
sbb
std
jp
mov
jmp
jnp
pop
and
mov
sbb
inc
adc
cld
add
or
call
add
xchg
test
jmp
pop
ret
data16
movsl
cmp
add
mov
inc
or
out
cld
inc
push
mov
mov
pop
dec
loope
pop
push
ljmp
inc
inc
cmp
and
repnz
in
loopne
or
aas
andb
hlt
js
arpl
xchg
pushl
aas
push
sarb
xchg
sbb
pop
inc
sbb
pop
push
jb
mov
xchg
cmp
jg
lcall
adc
js
testb
out
imul
adc
js
cwtl
in
arpl
lcall
sbb
out
and
les
stos
vxorpd
mov
and
ljmp
mov
mov
roll
hlt
or
and
incl
mov
call
sahf
cmp
and
mov
ljmp
pushl
dec
imul
jns
cwtl
pop
inc
xor
outsb
inc
mov
cmp
and
cmp
pop
addr16
mov
ss
inc
or
enter
adc
aad
xlat
cld
std
aaa
pop
cli
lcall
inc
cmp
push
sub
pushl
sub
dec
push
jno
js
sub
pop
xchg
xor
in
mov
out
dec
int3
lret
stos
pop
mov
sub
repz
mov
dec
jmp
aas
xorb
cmp
mov
mov
add
jecxz
aaa
in
scas
leave
testl
out
cmovo
bnd
jbe
xchg
adc
rolb
loopne
dec
pop
loopne
add
jmp
pop
mov
dec
adc
dec
incl
cli
adc
stos
adc
fsubr
xchg
cmp
push
mov
mov
loop
add
xor
into
dec
lock
test
fbld
mov
aas
pusha
pop
jo
notb
jg
lock
fwait
testb
xchg
mov
pop
xchg
mov
and
dec
pushl
jo
call
mov
xor
stc
pop
imul
fildll
lret
ss
hlt
xchg
jg
and
movsl
int3
sarb
mov
or
sahf
clc
xchg
ret
loopne
test
inc
decl
int3
add
ss
cmc
lret
push
pop
and
rorl
rcrl
mov
das
lock
cmp
popa
dec
sbb
lods
push
je
and
pushl
scas
mov
add
pop
loop
jns
cmp
int3
xchg
out
les
testb
loop
ret
loop
sbb
mov
jmp
jmp
es
pusha
fcom
outsb
dec
mov
ljmp
hlt
jnp
xchg
adcb
inc
cmpsl
loope
inc
mov
inc
addl
movsl
inc
rolb
scas
mov
aam
sub
xchg
imul
jmp
int3
adc
dec
xor
lcall
adc
pop
cld
jge
push
enter
mov
add
or
cltd
mov
loope
in
cmpl
push
inc
testb
cmp
jno
mov
enter
ljmp
test
pop
sub
dec
add
dec
or
xor
sub
push
andb
daa
shlb
pop
int
mov
sbb
xchg
inc
push
cs
dec
daa
mov
das
out
clc
call
adc
dec
and
sbb
mov
pop
out
enter
test
popl
incl
cmc
jb
push
in
inc
int
adc
and
das
push
add
and
std
pushl
and
or
mov
xchg
je
mov
stos
cmp
outsl
add
out
mov
stos
ret
and
dec
subb
hlt
xorb
pop
adc
cld
cmp
ja
insl
out
jmp
push
push
frstor
ljmp
sbb
pop
sbb
add
fisttps
jmp
adc
push
sbb
cmp
xchg
xchg
fcoms
decl
or
dec
sub
sub
shl
in
pop
sub
xor
xchg
sub
out
xchg
in
push
push
clc
push
sar
pop
mov
dec
scas
mov
jle
aam
or
dec
xor
mov
dec
or
jmp
icebp
mov
and
daa
cmp
push
pop
pushf
adc
adc
decl
rclb
jbe
adc
mov
lret
cmp
shl
dec
pop
jp
sub
nop
jl
out
movsb
hlt
xchg
inc
jns
jno
sbb
push
cwtl
or
lcall
cmpl
fld
dec
arpl
pop
jns
test
pop
lcall
add
push
ret
cmc
mov
adc
jns
nop
shll
jmp
xlat
sbb
or
nop
cwtl
pop
xor
mov
loopne
ja
xchg
mov
pushl
insb
or
push
imul
inc
lahf
inc
inc
icebp
and
jle
jl
xor
std
daa
or
inc
mov
nop
mov
cmp
leave
inc
dec
inc
mov
xor
loop
and
hlt
jbe,pn
cmp
mov
in
add
xchg
sub
adc
call
pop
or
sbb
mov
dec
inc
test
incl
pop
jecxz
sbb
sub
inc
mov
cmp
jo
and
in
or
pop
add
cmp
dec
mov
push
jmp
imul
pusha
sbb
jmp
lahf
movsb
scas
add
mov
inc
jg
mov
insl
cwtl
fisttps
xchg
pop
pusha
popf
or
or
incl
sub
or
subb
jl
mov
and
sub
jmp
ret
enter
incl
sub
nop
dec
aad
hlt
push
enter
mov
mov
pop
pushf
sarl
mov
mov
bound
and
adc
pop
push
inc
lahf
stc
sbb
push
xchg
incl
leave
mov
pop
iret
add
jg
mov
lds
decl
in
mov
xor
pop
fcomip
adc
and
add
out
ss
and
je
in
xor
and
mov
sub
xor
jmp
cmpsl
ret
std
push
and
pop
movsb
mov
lea
lret
or
xchg
ret
test
js
cmp
cmp
out
das
and
dec
or
cld
jg
out
test
movsb
movsb
dec
nop
orl
inc
clc
mov
mov
jmp
sbb
iret
xchg
xchg
into
aam
in
dec
cmp
shrl
ja
mov
push
mov
pushl
loop
and
mov
cld
push
mov
xor
xchg
lock
ljmp
dec
mov
sbb
pop
add
adc
rclb
dec
test
cwtl
adc
mov
scas
ljmp
cmp
movb
adc
pop
mov
movsl
jnp
loopne
jle
das
cli
loope
dec
lea
insl
sub
jge
loop
cld
insl
clc
push
scas
shll
dec
test
dec
push
mov
jne
sub
decl
mov
loopne
ret
push
leave
mov
add
mov
push
cltd
shll
push
jecxz
ljmp
ret
push
popf
rorl
mov
mov
dec
test
sub
add
push
mov
icebp
cmp
add
shr
push
inc
mov
les
jp
scas
mov
lcall
xchg
enter
out
jbe
enter
inc
sarb
xchg
adc
les
call
or
lea
cmp
sbb
xor
mov
mov
jo
adc
ficompl
mov
xor
xchg
repnz
push
xor
jmp
sbb
pushf
testl
cmp
popa
mov
xor
add
adc
insb
ficoml
jb
aam
jmp
push
push
jns
and
push
jl
test
xlat
inc
mov
inc
and
jo
popf
and
ret
andb
rclb
mov
mov
lret
cmp
nop
push
dec
adc
jb
push
push
fs
cmp
in
xchg
or
cmp
movsb
popa
sub
push
add
xchg
faddp
ja
inc
mov
push
cmp
and
pop
xchg
icebp
das
pushl
pop
in
push
int
pop
loop
pop
in
mov
lds
fwait
outsb
xchg
and
in
inc
shll
leave
ud0
incl
lahf
pop
add
xchg
dec
js
call
loopne
and
imul
dec
test
inc
mov
jg
jmp
push
inc
push
sar
jmp
ljmp
movsb
mov
pop
adc
pushl
cmp
mov
xor
and
test
inc
andb
js
call
adc
roll
repnz
mov
inc
adc
imul
jl
shlb
sub
or
mov
inc
mov
mov
sbb
test
push
jecxz
push
inc
cmpsl
cmp
xor
pop
out
out
pop
or
leave
insl
xchg
dec
mov
or
and
add
xor
daa
inc
and
ficoml
cmc
leave
ret
loopne
cmp
cltd
mov
cmpb
mov
cmp
mov
inc
inc
in
hlt
aaa
std
lods
dec
dec
ss
and
adc
fwait
or
mov
jo
incl
decl
cmc
cli
inc
sub
addl
dec
in
call
jo
lock
cmp
and
es
add
add
lock
test
in
addl
andb
fcmovnb
aam
clc
mov
cli
cmp
je
std
incl
and
add
stos
xor
mov
mov
adc
ljmp
call
adc
jle
add
xorb
push
je
mov
dec
xchg
in
pop
je
ljmp
push
inc
sbb
or
xchg
nop
xchg
out
sarl
cwtl
int3
dec
decl
or
into
mov
mov
repz
call
jl
add
pushf
loope
jmp
pop
outsb
test
aas
cld
cmp
ret
imul
ss
outsb
dec
jnp
cs
aam
jo
mov
jg
incl
mov
cltd
les
xchg
mov
inc
mov
movl
xor
add
cmp
and
das
inc
mov
mov
clc
test
ljmp
icebp
or
sbb
mov
sub
mov
stos
rolb
jl
call
mov
fs
inc
sbb
add
mov
mov
out
jno
sti
dec
into
aas
cmp
mov
movsb
push
and
mov
repz
mov
jne
ss
shl
lcall
adc
ds
sub
cmp
scas
cs
decl
sbb
or
cmp
mov
popa
scas
aam
bound
sub
cwtl
psubb
jg
cwtl
jl
push
std
insl
test
mov
lahf
xchg
stos
mov
cmp
add
scas
add
pop
or
divl
out
mov
xor
outsl
mov
cwtl
sbb
in
popf
rorl
dec
sub
dec
decl
and
cmp
stos
jbe
loopne
jo
inc
sub
sub
cmp
xor
and
fs
scas
or
incl
fsubp
mov
adc
push
insl
dec
je
mov
pop
lea
sub
fcomip
fwait
incb
xchg
add
push
subb
test
lea
dec
lcall
cli
jecxz
cld
jo
sub
leave
sub
stos
scas
jge
iret
and
in
mov
jb
daa
mov
decl
inc
es
push
push
mov
movsl
inc
cmp
cmp
int3
mov
and
sub
adc
dec
xchg
test
clc
pushl
add
jecxz
mov
adc
xchg
and
cmp
xchg
push
mov
hlt
addr16
cmp
and
dec
fnstenv
mov
add
pop
xchg
push
mov
daa
lcall
inc
arpl
xchg
mov
jo
add
bound
mov
fwait
adc
es
xchg
add
or
mov
pop
dec
jns
jnp
fadd
xchg
mov
dec
pushl
je
inc
mov
inc
and
mov
rcll
iret
aas
or
nop
cmp
push
sub
sub
pushl
out
sbb
pop
and
add
cld
js
xor
repnz
add
pushl
in
hlt
bound
gs
cwtl
jo
mov
std
xchg
aad
push
mov
jne
pop
pop
add
mov
dec
push
xchg
rcr
jecxz
int
scas
stos
fstpt
cmp
testb
pop
and
push
pop
mov
mov
jbe
clc
decl
imul
les
mov
cwtl
xchg
mov
push
cmp
mov
sbb
mov
out
ret
xlat
pushf
cmp
xor
ljmp
in
es
add
addl
inc
cmp
ljmp
xchg
es
aad
lret
addb
daa
repz
loop
pop
je
incl
mov
hlt
or
lret
les
jge
xor
daa
inc
or
ds
fbld
dec
and
xlat
mov
scas
and
fs
ret
stc
insl
scas
mov
jns
int3
rcll
cld
sub
int3
ret
push
pop
cmc
or
incl
lock
pop
addl
sbb
cmp
lcall
and
data16
call
hlt
pusha
pushw
jbe
sub
test
and
pushf
mov
cmp
adc
rcll
jns
inc
pusha
call
icebp
mov
or
shll
scas
data16
or
fcoml
ficoml
or
iret
dec
popa
cmp
sub
or
push
incl
push
sub
mov
inc
mov
shll
adc
fdivrp
mov
lcall
xorb
adc
sub
push
sub
sti
sbb
stos
and
xor
jno
and
or
lock
rclb
cld
pushl
xor
sub
and
shlb
pop
jecxz
lret
jle
xchg
sti
incl
adc
aas
and
dec
bound
mov
cs
pop
cwtl
mov
mov
cmpsb
decl
popf
jecxz
lods
test
or
mov
mov
dec
daa
aaa
push
xchg
test
ja
inc
jg
add
xchg
aam
dec
lret
mov
stc
mov
sub
lcall
cmp
xchg
mov
mov
pusha
inc
mov
adc
adc
dec
push
out
sete
xchg
ret
jg
mov
adc
iret
pop
dec
xlat
lcall
std
pop
test
bound
rcr
fstl
bswap
mov
jg
repz
push
repz
add
sub
lods
mov
mov
stos
jg
aam
add
leave
je
test
adc
shll
sub
lcall
jp
stos
ficoml
in
or
popf
test
lds
lret
mov
mov
inc
inc
jo
imull
pop
and
scas
test
fs
or
mov
push
pop
jo
ljmp
mov
dec
inc
stc
loope
adc
js
jno
bound
inc
iret
inc
inc
pusha
mov
inc
outsb
call
mov
push
inc
or
push
shlb
push
dec
fldenv
ss
push
shrl
addr16
mov
lcall
sub
lahf
sub
sbb
pusha
test
mov
ljmp
shl
mov
xchg
or
incl
dec
cli
int
push
dec
and
js
mov
gs
mov
and
pop
pop
inc
jmp
mov
xor
sbb
jmp
pushw
test
sub
jb
repz
ljmp
mov
mov
xchg
call
adcb
mov
lahf
and
jbe
icebp
in
lahf
scas
mov
je
and
test
jl
or
bound
push
int3
inc
cs
cmp
jp
es
and
sbb
xor
or
pop
inc
jns
ljmp
cltd
xor
pop
mov
and
pushl
and
sub
ds
in
mov
insb
sub
xor
pop
int3
mov
ljmp
dec
sbb
jae,pt
pop
mov
push
pop
and
stos
call
jl
sar
call
sub
cmp
pop
adc
add
sbb
adc
cmp
loopne
sarl
jmp
sub
iret
adc
dec
mov
fildll
adc
xor
fstps
loopne
pop
std
std
adc
loop
inc
jmp
and
jl
jmp
jo
test
test
and
pop
arpl
je
and
cmp
incl
sbb
int3
pop
dec
adc
scas
sahf
mov
xchg
inc
imul
inc
addb
mov
and
pop
aad
call
sbb
xlat
out
daa
inc
jg
jns
shll
pop
push
pop
xor
and
out
stc
or
decl
jl
jne
push
xchg
inc
imul
cwtl
lea
test
or
and
push
or
pushf
adc
fstps
ret
in
inc
iret
dec
orb
and
mov
cld
ret
daa
pop
sbb
inc
inc
mov
jo
stos
and
xchg
incl
in
lret
jbe
mul
push
fucomp
inc
in
lret
dec
std
test
mov
das
mov
push
mov
and
repnz
dec
pop
popf
jge
mov
add
mov
cmp
mov
les
lods
incl
pop
mov
inc
stc
lock
sub
dec
mov
add
xorl
dec
test
inc
mov
jnp
add
adc
jo
rcrl
mov
js
sub
decl
sub
mov
mov
pop
xchg
mov
int3
pop
mov
popa
sub
dec
movsl
ret
rcl
cli
inc
add
jg
lods
je
add
out
or
in
rolb
clc
jg
mov
movsb
popf
je
dec
xor
push
jmp
or
ja
cli
jmp
sbb
push
mov
xor
popa
lahf
push
push
lret
jle
mov
dec
and
pop
or
repnz
jmp
or
es
shrb
lcall
clc
mov
mov
mov
jge
adc
dec
fcomip
les
rolb
mov
push
sub
cmpsb
cmp
clc
mov
inc
enter
or
adc
xor
push
push
mov
repz
enter
gs
loope
inc
add
xchg
inc
jnp
dec
pushl
mov
push
and
or
mov
lock
cs
or
inc
and
arpl
sub
decl
inc
dec
imul
cpuid
nop
mov
xchg
outsl
decl
adc
mov
cmp
adc
rolb
xchg
cmc
jo
pop
test
call
adc
xor
xchg
add
loopne
std
inc
movsb
inc
adc
mov
rcll
mov
xor
push
sbb
lcall
mov
push
and
cwtl
sub
dec
call
push
lds
jecxz
pushl
cmp
push
and
mov
push
dec
and
and
sahf
dec
xchg
xchg
pop
and
jmp
dec
inc
lretw
in
stc
les
xlat
stos
sub
sub
fs
mov
pop
jg
cmp
jnp
pop
mov
ficoms
mov
sbb
jle
jo
sub
sbb
enter
xor
popa
cmp
adc
or
mov
jmp
sbb
pop
xor
jno
cmpb
cmpsb
xchg
out
xor
lea
fs
hlt
jmp
aad
dec
subl
movl
or
fwait
jle
add
xor
ljmp
mov
popa
inc
mov
or
in
int3
rorb
decl
and
stos
dec
mov
std
adc
mov
fcoml
gs
push
sbb
inc
xor
add
call
add
sbb
mov
cmpsb
add
lret
aas
pop
and
fisubl
fsts
shll
outsb
fprem
cmpsb
shll
int3
insl
pop
pop
loop
jp
cmp
push
jl
in
in
js
les
rcrb
iret
and
cmp
in
and
mov
dec
clc
lcall
pop
outsl
mov
inc
fsubl
lea
mov
sti
cs
mov
shr
push
icebp
adc
enter
sbb
fs
in
fcompl
pop
add
inc
pusha
mov
dec
sar
mov
xchg
inc
es
addr16
and
dec
sbb
call
add
ds
adc
test
adc
adc
pop
inc
push
scas
call
int3
xorb
into
mov
repnz
mov
cmp
sub
incl
mov
inc
fdivp
xor
push
sbb
cmpsl
aaa
ffreep
cmc
cmp
push
and
ja
rorb
xchg
xor
sbb
in
insl
cmp
adc
xchg
xor
jmp
nop
fstl
iret
rclb
ljmp
ret
cwtl
int
aam
add
cs
push
mov
lods
ds
mov
test
push
cs
lea
push
outsb
in
adc
mov
gs
nop
decl
fldl
sti
push
add
jge
mov
dec
push
jb
mov
incl
mov
subl
mov
outsl
and
jl
xor
add
or
xchg
cmp
cmp
push
jle
rcrl
sbb
sbb
mov
movsb
xor
cmpl
repz
inc
pushf
or
imull
and
jo
dec
jmp
into
mov
sbb
jg
adc
pushf
stos
mov
push
test
or
decl
call
sbb
popa
pusha
mov
sub
jecxz
pmaxub
inc
lock
sar
lcall
push
test
icebp
jb
xchg
sub
fs
jl
cld
pushl
dec
jbe
fbstp
cmp
sub
je
inc
cmp
add
xor
mov
out
and
aas
or
outsl
mov
jecxz
adc
push
mov
dec
ja
decl
hlt
leave
lea
pop
sbb
aaa
std
push
inc
cmp
xor
or
and
or
lahf
into
push
xchg
push
lea
pop
cmp
mov
ret
daa
nop
pop
mov
loop
xchg
adc
sub
popf
into
je
ret
test
inc
leave
repnz
daa
cli
ljmp
in
mov
add
popf
sub
dec
push
inc
push
xlat
imul
lock
jp
adc
ljmp
mov
test
clc
and
adc
mov
int3
nop
inc
cwtl
loopne
aaa
mov
sub
mov
and
mov
mov
push
push
inc
outsb
dec
stos
sub
xor
pop
data16
test
mov
inc
sub
add
test
frstor
insl
dec
and
std
jecxz
rcl
and
popl
shll
pop
mov
out
mov
mov
add
fmull
pop
xchg
clc
xchg
out
cwtl
dec
out
jl
mov
test
mov
call
aas
mov
xchg
cs
movsb
jbe
stos
jecxz
pop
adc
cmp
fcomip
xchg
mov
and
in
bnd
in
pusha
ss
xlat
cwtl
cmp
or
lret
lret
fildl
decl
lock
mov
mov
inc
sub
jno
jae
sub
das
stc
loop
or
incl
icebp
daa
sub
pop
cli
sbbb
shll
mov
add
jne,pt
rcl
pop
lcall
mov
inc
jb
daa
aas
ds
mov
rcll
and
mov
cmp
je
push
or
jecxz
inc
pushf
rcrb
fwait
xrelease
or
ficompl
add
das
adc
inc
sbb
std
sub
jns
std
decl
addb
and
adc
inc
movsl
aad
cwtl
pop
sbb
test
decl
adc
out
aaa
and
je
inc
incl
xchg
inc
movsl
icebp
or
test
ret
sub
cmp
rorb
iret
pop
pop
sub
dec
push
nop
pushf
push
adc
or
stos
inc
ret
xor
push
dec
test
adc
and
lcall
ljmp
int3
fs
rol
dec
dec
adc
lock
inc
int
inc
add
incl
ret
add
out
movsb
cwtl
lret
mov
sub
hlt
push
pop
cmp
adc
jo
add
bswap
lods
dec
mov
insb
cltd
clc
stos
sub
xchg
jecxz
out
in
adc
pusha
test
out
cli
aas
insb
sbb
cmp
mov
popl
clc
xchg
pop
inc
daa
mov
cs
cmc
loop
jnp
ljmp
lcall
pop
rorb
or
fmull
les
dec
es
pop
mov
call
mov
mov
inc
mov
test
sub
adc
cs
and
adc
or
fcomip
call
mov
xchg
xor
jl
xor
fisttpll
decl
push
stc
add
mov
jg
pop
lea
mov
mov
mov
mov
xchg
into
xor
mov
ficomps
ja
pushl
ds
adc
daa
dec
pushf
adc
dec
inc
or
test
ret
fcoms
ljmp
or
xchg
enter
loopne
push
shl
cmp
adc
int3
xchg
xor
out
mov
sar
decl
dec
sub
out
cmp
ret
cmp
stos
xchg
insb
fcomip
dec
jg
jmp
cmpsl
sbb
push
mov
jne
cmp
cld
decl
cld
pop
xchg
vmread
or
rcll
add
pusha
cmp
in
loopne
sub
xor
mov
or
test
imul
xor
add
pop
pop
loopne
jbe
mov
ja
push
sbb
add
cmp
ffreep
loop
jae
call
push
push
sbb
leave
clc
adc
xlat
jo
ljmp
dec
sub
fldl
incb
or
mov
fcompl
cmp
mov
push
ror
dec
gs
xchg
jmp
pop
hlt
lcall
inc
fnsetpm(287
fdiv
cltd
cltd
addb
push
int3
fstpt
xor
call
mov
clc
dec
push
add
call
cmp
fcoms
test
push
and
cmp
xor
jno
pop
xchg
pop
sbb
adc
aad
inc
jne
mov
or
sbb
subl
stos
ja
aas
cmp
cmpl
movsl
loopne
or
and
pop
sahf
push
xchg
inc
mov
and
jge
inc
sbb
and
insl
mov
sbb
pop
data16
pop
pop
and
lcall
incl
loope
sub
ret
icebp
incb
ss
mov
pop
xchg
sbb
and
sbb
cmp
sub
mov
call
loopne
loopne
leave
in
mov
movsl
xchg
into
jle
push
or
and
in
and
or
mov
daa
enter
ljmp
add
mov
incl
jp
mov
cli
pop
lret
cwtl
dec
fidivrl
mov
sub
cmc
ljmp
add
pop
sbb
sub
out
xchg
or
shl
add
pop
fstpl
pop
sbb
jecxz
popf
es
enter
incl
fcomp
push
lret
push
lods
push
andb
scas
popf
or
ljmp
add
call
enter
add
xchg
inc
cs
orl
mov
clc
cmp
sbb
inc
xchg
loope
or
out
mov
jns
inc
pop
pushl
xor
or
call
scas
mov
cs
inc
test
lcall
repnz
jns
cmpsl
fsubrs
icebp
in
adcl
adc
in
add
imul
xchg
mov
push
dec
cmp
mov
lcall
jb
fistps
in
mov
mov
add
jbe
jg
out
in
test
and
call
jb
jl
shlb
repnz
jno
and
mov
out
das
pop
cmp
lret
mov
jge
cmp
inc
inc
clc
incl
sbb
cmp
scas
aaa
dec
cmp
inc
jmp
jg
push
lret
mov
out
gs
mov
addr16
or
bnd
sbb
cs
incl
jp
andl
add
fistpll
cli
fstps
xchg
call
inc
lods
shlb
fs
jo
push
pop
jae
add
aas
push
or
cmp
call
mov
adc
movsb
mov
add
jno
inc
push
loopne
shlb
mov
out
adc
decl
xchg
fcoms
push
bound
shl
movsl
mov
xor
mov
pushl
loopne
repnz
enter
and
mov
stos
cld
sub
add
rorl
sub
pushl
pushf
frstor
adc
gs
repnz
cmp
mov
sbb
xor
nop
lcall
jg
and
test
xchg
adc
mov
mov
cli
push
inc
mov
add
and
je
rcrb
adc
into
pushf
jg
push
adc
je
decl
cmpsb
jl
sub
xlat
pop
stos
pop
sti
xor
cld
xorl
pop
inc
je
sub
inc
sar
push
int3
push
adc
jb
xrelease
cltd
push
sub
push
and
sbb
adc
jle
arpl
dec
fs
pop
hlt
call
pshufw
mov
pop
pop
lea
data16
mov
fbld
cmp
jmp
jae
imul
dec
daa
xor
mov
fwait
fs
adcb
enter
push
sub
incl
inc
cwtl
jne
imul
dec
fidivrs
adc
rcrb
push
jmp
icebp
lret
decl
insb
cmp
or
pop
lods
cmp
mov
ja
adc
and
out
lcall
mov
dec
rcll
mov
ret
out
lock
pop
gs
jg
jg
push
inc
xor
jb
jns
test
fstpl
mov
push
outsl
jo
pop
andl
ds
jg
lret
xlat
sub
in
xchg
push
xor
sub
out
call
inc
movsb
pop
insb
cli
or
addr16
add
jmp
push
mov
mov
xchg
dec
sub
mov
inc
push
push
mov
fisttpll
add
sbb
sbb
daa
icebp
add
adc
outsl
aam
insl
pop
sbb
inc
test
or
mov
xor
decl
sti
cmp
sar
mov
xchg
out
dec
and
or
mov
pop
xchg
lret
or
ja
test
test
roll
xchg
xor
mov
push
inc
ret
test
mov
sbb
mov
pop
and
popa
aad
or
pusha
insl
inc
sub
mov
cld
popf
and
popf
jg
adc
and
mov
push
cmp
shll
sti
imul
jmp
subb
inc
cld
sub
mov
imul
mov
fidivs
sub
pop
xor
dec
bound
push
and
add
mov
xlat
push
fs
adc
jmp
lret
sbb
lahf
lods
cmp
xchg
and
mov
adc
jmp
lds
jle
pop
fstp
hlt
cmpsl
dec
inc
dec
mov
sub
repz
and
xor
das
fcmovnb
int3
pop
xchg
mov
xchg
and
stos
je
sub
pop
incl
xor
jge
dec
fistpl
fdiv
insl
pop
adc
push
pusha
leave
xchg
adc
out
inc
jg
icebp
call
ss
xchg
je
and
mov
cmc
jbe
inc
dec
out
call
xlat
fs
fcomps
jl
in
stc
and
lods
mov
clc
orl
lock
negb
pop
aad
ret
xchg
iret
outsl
inc
loope
pop
test
nop
dec
jne
hlt
popa
loop
iret
dec
mov
mov
cmp
or
pushl
cltd
dec
cmp
or
dec
sub
shll
call
jmp
push
lret
mov
fisttpl
xchg
shll
lret
or
jmp
popa
ds
jecxz
adc
fnstenv
mov
adc
jp
pop
fistpll
call
push
inc
cli
jmp
lret
add
fidivs
lods
xchg
push
cmp
lahf
push
add
test
es
ljmp
bound
push
sbb
ret
jmp
jmp
and
inc
pop
insb
jne
dec
mov
cli
dec
popa
push
add
fcomip
clc
test
xor
xlat
push
inc
test
or
add
clc
decl
lods
pop
push
dec
adc
cmp
cmp
jmp
popa
xchg
jmp
adc
test
xor
dec
pop
icebp
pop
cs
enter
icebp
fadds
sub
dec
sub
or
push
inc
imul
cwtl
sbb
fcomip
aaa
std
adc
add
mov
orb
enter
sbb
in
jbe
lcall
mov
mov
sti
sub
sahf
and
xchg
je
fadd
inc
adc
jmp
inc
or
sbb
cltd
negb
adc
pop
adc
cmp
jg
orb
inc
sbb
jmp
push
and
aas
mov
movsl
inc
xor
sbb
mov
lock
daa
mov
push
adc
jmp
adc
sub
add
xchg
daa
ret
outsb
add
call
ret
inc
inc
icebp
mov
test
pop
xchg
sbb
incl
sbb
lods
mov
pop
cmp
add
mov
test
xor
ljmp
and
fs
stos
cmpsl
jo
mov
cmp
inc
cmpsb
decl
incl
stos
enter
or
add
bound
xchg
testl
xor
ficompl
mov
insl
push
nop
pop
push
sbb
mov
xchg
adc
adc
pop
mov
lcall
sub
mov
pop
loop
push
loop
xchg
lahf
incb
aad
or
jmp
xchg
enter
gs
push
fimuls
or
pusha
ss
jl
dec
in
mov
cld
and
pop
loopne
incl
dec
push
add
mov
out
std
jg
add
pushl
decl
mov
add
out
pop
inc
push
lret
jo
iret
rcll
dec
incl
mov
mov
cmp
mov
rcrb
add
push
push
addr16
insl
lock
call
mov
xchg
mov
xor
mov
sbb
pop
pop
sar
xchg
cmp
dec
push
add
into
fstpt
or
call
adc
inc
outsb
mov
fsubs
push
jle
pop
dec
sub
and
inc
idivb
jp
icebp
rcl
dec
mov
insl
scas
andb
pop
loopne
subl
int3
lock
addl
imul
or
decl
nop
mov
mov
add
push
push
jns
add
insb
mov
loopne
inc
lods
jbe
call
mov
int3
cmp
test
jmp
add
xchg
cmpb
rolb
call
jb
enter
adc
imul
insb
add
aam
adc
movsl
incl
xor
in
jb
adc
xorb
bnd
push
je
sti
push
in
or
incl
cld
into
sti
cmp
mov
mov
sbb
shrb
sbb
decl
daa
inc
stos
mov
xor
and
dec
sub
cld
cs
inc
out
lcall
mov
lock
bound
cli
ror
popa
mov
inc
sar
or
sub
lods
loope
outsb
dec
popa
cmp
jl
jg
and
inc
fidivrl
lret
inc
in
sbb
decl
orb
decl
adc
scas
dec
dec
mov
jg
shl
cmp
outsb
incl
mov
mov
adc
and
and
jnp
push
cmp
incl
mov
nop
dec
push
adc
decb
into
lcall
add
call
mov
ljmp
lret
popf
xor
push
pop
pop
notb
push
dec
pop
cmc
decl
leave
mov
subl
mov
filds
insb
mov
rorl
mov
sub
xchg
mov
sbb
decl
pop
dec
jp
push
pop
or
cmpl
lcall
loop,pn
lcall
loop
leave
xor
daa
or
mov
ret
dec
scas
add
dec
out
daa
test
inc
cmp
xor
jge
shrl
movsl
cld
daa
nop
xor
adc
xchg
clc
and
jp
incl
shll
inc
rorb
loopne
loop
loope
cwtl
mov
add
cmp
fistps
shrl
adc
or
xchg
rdpmc
rorl
rol
pop
and
hlt
pushl
inc
mov
sbb
cmp
dec
and
add
loopew
pop
les
jmp
xchg
jmp
cld
jb
jmp
xlat
xchg
xor
sub
clc
loopne
outsl
jmp
rorb
jl
test
xchg
and
add
sub
lcall
mov
add
loop
icebp
lods
mov
cli
lcall
sub
outsb
aam
xchg
adc
mov
xchg
fimuls
icebp
jl
out
jecxz
nop
test
icebp
clc
stos
mov
shl
adc
mov
insb
cmp
mov
jbe
or
inc
mov
sub
and
pushf
mov
inc
mov
pushl
cld
aad
dec
cmp
es
loopne
push
xchg
mov
popl
lods
lret
mov
incl
dec
and
loop
xchg
ds
ficoms
lds
xor
sti
sub
fwait
movsl
inc
mov
in
out
jo
arpl
fdivrs
jg
jmp
arpl
fistpl
jns
xchg
mov
movsb
test
jmp
ds
lods
jecxz
negl
pop
fstl
sbb
int
lds
jns
or
fs
jle
pop
cmp
mov
or
xor
ljmp
and
and
lret
cmp
xor
add
rorl
gs
adc
or
mov
icebp
je
push
shrl
jbe
ljmp
jg
divb
roll
adc
cwtd
leave
test
fldt
decl
xor
add
jmp
mov
and
add
jne
dec
mov
call
and
adc
ror
sub
inc
mov
scas
add
add
push
mov
jl
jmp
or
int
loopne
mov
dec
fwait
nop
jne
incl
mov
push
test
pop
mov
sub
out
add
lret
lret
add
cld
nop
enter
bound
shlb
mov
lcall
add
shll
and
js
cli
jno
mov
out
mov
inc
cld
decl
scas
repz
fs
fdivr
and
and
and
call
add
js
xchg
adc
xchg
add
mov
adc
mov
push
or
adcb
inc
call
push
xor
cwtl
push
push
lret
cmp
test
incl
mov
insb
iret
jmp
shll
xchg
iret
or
das
xlat
test
fcoml
ljmp
push
insb
pusha
mov
lret
inc
push
lahf
movsl
mov
cwtl
xchg
jno
dec
adc
mov
in
pusha
repz
xchg
inc
add
xchg
mov
fsubrs
std
outsb
xor
lcall
lret
or
lods
dec
pop
das
aaa
lret
sbb
add
dec
pop
je
jg
adc
incl
pushf
mov
popa
and
out
roll
and
mov
test
das
clc
mov
int3
fadds
scas
cmp
subb
mov
outsl
push
cmpsb
stos
out
mov
jecxz
jo
fistpl
sar
lea
xlat
and
and
xlat
push
fldcw
mov
xchg
cs
clc
pop
and
jg
loopne
jge
andb
lea
add
mov
sub
inc
or
gs
xchg
cmpb
popf
sbb
inc
ljmp
jge
jge
or
add
mov
sbb
pop
and
inc
push
xor
jmp
dec
sub
cmpb
mov
mov
dec
mov
jmp
sbb
ret
cltd
ss
inc
fsts
and
loope
xchg
inc
jo
push
int
adcl
std
mov
jp
in
mov
mov
out
mov
mov
ljmp
std
cmp
fisttpll
mov
and
cmp
decl
imul
jno
pop
repz
stos
adc
ret
loope
xchg
xlat
dec
out
mov
rcrb
shll
sbb
mov
adcb
ljmp
cmp
adc
mov
mov
ret
fldenv
icebp
pop
aad
mov
adc
pop
lods
dec
inc
xchg
push
add
add
pop
arpl
pushl
cmp
cmpl
add
jle
cltd
or
mov
ret
cmp
lock
shlb
in
jle
inc
leave
sub
lcall
xchg
inc
bound
out
test
shlb
pop
and
popf
sbb
inc
pushl
push
int
adc
mov
jns
inc
leave
push
sub
loopne
xchg
xchg
imul
lcall
leave
mov
inc
push
adc
add
mov
enter
lea
aaa
cld
dec
xchg
lock
pop
push
mov
dec
push
dec
out
sbb
sar
sub
gs
ret
vmulpd
add
push
sbb
out
stos
sub
jbe
mov
jo
push
pop
mov
add
decl
scas
push
or
ficoml
mov
inc
inc
push
inc
js
pop
add
push
or
loope
mov
dec
int3
daa
or
fucomp
icebp
pop
incl
dec
ljmp
cmp
mov
inc
xor
fmull
inc
sbb
push
ljmp
mov
fadds
add
dec
adc
push
jb
xchg
shrl
and
sahf
adc
mov
sbbl
inc
push
bound
fisttpll
nop
mov
lcall
and
or
mov
add
stos
mov
sub
cmpsb
ficoms
mov
push
cmp
arpl
add
xchg
lcall
cld
jmp
or
je
add
aas
push
dec
js
mov
mov
pop
dec
push
lret
jne
inc
outsb
popl
lret
jl
ret
xchg
xor
pop
fdivp
dec
loop
push
cli
movsb
js
dec
aad
cs
inc
int
les
sbb
dec
xchg
and
scas
jmp
sbb
sub
push
lods
cli
imul
lcall
or
ss
pop
push
ret
ja
lcall
data16
aam
scas
jns
test
dec
jmp
and
jne
sbb
mov
add
aaa
es
ljmp
in
mov
andb
xchg
ljmp
call
mov
xor
pop
movsb
leave
cwtl
jnp
out
sbb
cmp
imul
inc
mov
adc
stos
add
mov
push
cmp
in
jle
jb
cmp
jmp
icebp
ret
mov
adc
dec
inc
sub
dec
addr16
repz
in
aas
cltd
jge
xlat
adc
shlb
inc
push
jns
mov
fldcw
aas
lahf
arpl
test
mov
nop
mov
dec
pop
sbb
mov
xor
lea
push
sbb
pushf
add
cld
push
push
xchg
mov
call
cld
pushl
mov
test
icebp
or
and
mov
add
and
arpl
jge
jmp
dec
aaa
adc
fwait
int3
arpl
outsb
fisttpll
pusha
cmp
pushf
loop
pushl
std
stc
xor
xchg
pop
hlt
mov
adc
cmpsb
stc
icebp
in
jbe
and
mov
pushl
fildl
sub
add
shll
les
movsl
xor
cmc
push
stc
pop
mov
lock
movsb
push
jo
xor
cmp
sub
and
call
ljmp
dec
imul
std
les
popa
stos
pushf
or
sbb
mov
sbb
or
and
or
loop
sbb
icebp
sti
stc
outsb
mov
ret
jg
clc
push
push
icebp
bnd
inc
test
mov
and
decl
loope
lods
out
loop
add
lods
mov
sub
int3
push
or
orb
fcmovne
ds
inc
mov
testb
xor
daa
test
sar
jg
subb
adc
mov
cs
dec
stos
bound
shl
sahf
dec
or
lcall
les
mov
dec
or
mulb
addl
add
pushl
sahf
push
lods
es
int3
cmp
iret
mov
xchg
jle
sbb
adc
imul
incl
test
mov
jbe
in
pop
mov
cli
ss
sbb
fwait
sub
outsb
or
loope
in
sub
add
and
es
icebp
in
fldenv
popf
jbe
lahf
xchg
mov
xchg
cltd
inc
and
aam
cmp
pop
or
cmp
inc
insb
adc
ret
ret
movsb
or
into
mov
adc
data16
insl
mov
cmp
jae
xor
cmc
cmp
mov
loopne
jmp
jp
sbb
dec
sbb
jge
sahf
xchg
pop
sti
cmp
insb
push
mov
nop
test
lcall
fcomps
xor
je
mov
mov
push
xchg
fisttpll
out
clc
call
xor
lret
movsb
cmp
mov
or
and
pop
pusha
mov
push
mov
sbb
sbb
ljmp
push
inc
push
or
aas
dec
ficomps
cmpxchg
nop
pop
mov
mov
lcall
dec
das
xchg
mov
shr
xchg
mov
pop
and
sub
loop
incl
jle
cmp
xchg
fmuls
dec
mov
pop
add
jmp
and
adc
sub
xlat
and
pop
cmp
ret
loope
adc
call
jle
int
mov
fwait
inc
in
jb
in
incl
adc
push
div
ds
imul
fnstcw
sub
je
dec
aam
xchg
jne
mov
and
lock
dec
gs
jl
inc
or
lock
fidivl
adc
and
jmp
push
xor
iret
xor
xchg
imul
pop
dec
cmp
rclb
mov
cld
xchg
lcall
xor
fsts
sbb
imul
cltd
sub
inc
mov
sub
incl
rcll
inc
nop
clc
out
dec
stos
adc
jb
stos
sbb
xchg
dec
push
lahf
push
aam
incl
inc
pop
or
cs
and
dec
aam
adc
inc
and
mov
xchg
shlb
sarl
push
out
fistps
push
xor
fdivrp
out
cli
sbb
clc
cld
sub
adc
xchg
push
mov
mov
push
call
sbb
and
inc
je
in
sbb
test
mov
pop
gs
pop
mov
sbb
int3
cli
pushl
icebp
nop
pop
je
pop
sahf
les
inc
mov
rcrl
add
sbb
inc
das
stos
test
mov
add
mov
aad
incl
push
sub
fistpl
enter
sub
inc
lret
cli
jmp
outsl
xor
push
pop
ds
repz
pushl
xor
inc
addl
int
repnz
incl
or
data16
jo
data16
aad
mov
push
out
jg
mov
imul
sbbw
jecxz
inc
mov
jg
test
add
stc
test
lock
jne
lahf
ud0
mov
dec
mov
pushf
sti
in
dec
lcall
insb
lahf
call
dec
dec
loopne
and
pop
loop
xchg
aaa
cld
decl
sub
popa
pop
mov
add
arpl
imul
fbld
jb
cmp
aam
imul
xchg
mov
adc
mov
cmp
cs
into
mov
add
jg
dec
outsb
leave
mov
pop
lret
push
dec
cmp
mov
cmp
mov
mov
pop
ficompl
and
mov
push
test
and
pop
add
mov
pop
icebp
mov
imul
dec
push
std
pushf
mov
call
mov
mov
int3
inc
add
out
repnz
gs
cli
xor
add
icebp
inc
xor
and
imul
sbb
dec
jno
xor
mov
rcr
mov
ljmp
lcall
cld
push
pop
push
lcall
jae
adc
test
sub
pop
mov
pop
cld
decl
and
cwtl
adc
add
cwtl
stos
push
loop
xchg
popf
sar
add
mov
decb
mov
aaa
std
mov
mov
xchg
dec
and
xchg
jmp
les
loopne
lcall
push
test
xchg
ror
xchg
out
xchg
jecxz
test
les
add
jmp
mov
sbb
mov
adc
ljmp
aas
testb
ret
xor
mov
dec
rorb
loopne
out
xor
push
fiaddl
ret
cmp
sub
add
idiv
pusha
add
cmp
xchg
jge
and
cwtl
gs
ss
dec
pop
rolb
xor
mov
pcmpgtw
jmp
rorl
mov
jo
sub
out
jge
outsb
lahf
push
sub
add
adc
cmp
pushl
out
addr16
sbb
pop
shll
and
enter
pop
fmuls
out
std
pushl
xor
inc
int3
push
popl
int3
inc
mov
pop
js
or
dec
add
pop
ljmp
mov
sbb
decl
and
sub
fwait
xor
lahf
cmp
cmp
lock
cwtl
xchg
cmp
jno
cs
xchg
pop
outsl
pushf
push
ljmp
mov
je
pop
ror
cmp
cmp
sbb
sar
decl
xchg
xor
xchg
rolb
ret
dec
and
stc
xchg
nop
jge
out
lret
and
lcall
das
xor
xchg
fs
pop
popf
clc
out
stc
popf
sbb
xchg
push
cwtl
ds
sub
ljmp
div
nop
or
fs
enter
daa
test
add
fsubs
or
jl
adc
xchg
add
in
inc
mov
dec
jb
pop
push
sbb
xchg
xchg
repz
push
nop
push
das
sar
sub
add
xchg
mov
xchg
sbb
adc
dec
pop
add
push
lods
orb
cs
jle
movsl
jo
outsl
dec
sbb
adc
lea
mov
jp
cli
dec
pop
push
test
cmpsb
mov
sarl
and
dec
fcoms
add
pushf
mov
xlat
mov
sbb
mov
inc
outsb
xor
fisubl
test
ljmp
xchg
sahf
mov
push
es
cmp
bound
test
jle
fbld
scas
or
mov
adcb
call
int3
packuswb
and
ds
ja
incb
fcomi
mov
pop
hlt
lcall
push
mov
mov
out
sti
jns
dec
xlat
sbb
clc
xchg
lcall
loope
lea
nop
hlt
pop
xchg
add
add
sar
decl
rcrb
test
add
aas
test
and
and
and
imul
jbe
pop
data16
add
fwait
scas
mov
fwait
scas
mov
add
sub
inc
sahf
pusha
fdivrp
call
jne
sahf
add
mov
add
lds
pop
mov
inc
dec
loope
dec
test
mov
dec
inc
push
es
fcoms
xor
adc
loope
jg
xchg
fbld
inc
and
push
mov
dec
mov
sbb
das
loopne
repnz
sbb
cs
cli
or
dec
inc
leave
adc
inc
xchg
dec
bound
mov
push
cmc
je
sti
loope
stos
and
lcall
fwait
xor
cmpsl
add
sahf
imul
mov
rcrb
sbb
nop
pop
lods
xor
pushl
jns
cmpsl
mov
repnz
and
and
bound
jmp
bound
jp
add
pop
mov
sahf
cs
xchg
es
int3
jge
rorb
add
ret
inc
sbb
dec
sbb
fmull
sub
orl
imul
orl
dec
adc
add
push
add
inc
ss
push
aaa
imul
sub
xor
pusha
jb
add
xorb
mov
sub
cmp
and
xchg
pushl
xor
fcmovnu
je
jns
jne
mov
fisubrl
call
pop
ret
rorb
jne
cmp
imul
lea
and
xor
stos
push
adc
shlb
jmp
mov
in
in
and
call
pop
sbbl
mov
mov
je
dec
shr
push
sbb
mov
add
daa
sbb
imul
loopne
mov
sbb
push
rorb
fs
xor
shlb
pop
inc
sbb
cmpsb
sbbl
adcb
hlt
xchg
lods
mov
cs
xor
inc
insb
incl
xor
inc
add
lods
pop
adc
lea
out
ror
add
add
imul
mov
mov
js
lcall
fsubrp
xchg
ret
push
push
mulb
or
and
mov
xchg
fadd
lock
mov
jbe
out
and
pop
add
lea
or
outsb
lcall
mov
mov
outsb
or
push
mov
pop
jbe
add
imul
cmp
fsubs
push
dec
ror
fiaddl
add
add
data16
add
add
mov
inc
fdivrs
cmp
inc
and
aam
mov
or
xor
or
mov
sbb
inc
mov
cmp
jne
pop
push
cwtl
cmp
pop
add
push
add
in
ret
add
jnp
xor
jb
add
test
inc
xlat
or
adc
cmpsb
jle
addl
xchg
mov
jne
jno
or
add
xor
loopne
mov
mov
dec
mov
int3
lcall
adc
push
cmpsb
test
push
in
jle
xchg
rcll
fisubs
dec
ret
inc
xor
adc
cmp
pop
or
add
rorb
jo
or
push
out
fidivrl
add
jnp
push
lock
xchg
xchg
fs
pushw
lods
pop
lcall
mov
addb
roll
cmpb
into
pop
ret
call
push
add
sahf
xchg
imul
rolb
add
fs
add
test
or
adc
call
fnstenv
xchg
enter
sbb
adc
sbb
popf
or
icebp
push
or
xor
out
testb
cmp
sub
and
sbb
popf
jmp
pop
dec
and
sbb
sbb
pop
outsb
hlt
sbb
clc
btr
inc
sub
shlb
out
xchg
add
and
push
popa
push
mov
adcl
bound
mov
add
mov
shl
call
dec
je
jp
inc
popa
dec
imul
sub
out
cld
push
int3
lock
jl,pt
test
xor
lods
pop
push
mov
enter
mov
lcall
mov
je
popf
enter
sbb
mov
xor
sbb
xor
cwtl
cltd
mov
inc
sbb
ds
xor
ret
inc
in
push
sahf
jl
ret
sbbl
enter
pusha
imul
mov
cs
cmp
inc
dec
or
outsl
sbb
push
out
notb
sbb
in
or
lcall
lret
jnp
negb
fs
cwtl
add
clc
sbb
cmpsb
cmp
jb
xchg
pusha
mov
push
inc
jb
jp
adc
xchg
call
cmp
cmpsl
and
pop
cld
in
jo
pop
sbb
or
cmp
or
xor
xorl
mov
xchg
adcl
jo
or
sub
sub
push
xor
mov
cmp
add
je
jo
mulb
movsb
pop
fadds
xchg
mov
pushf
addb
lret
mov
cmp
or
jo
jp
ret
sbb
xorl
push
and
cwtl
mov
jp
in
mov
ffree
jecxz
pusha
in
lret
mov
add
les
or
jl
pop
rcll
jmp
pushf
and
push
sbb
sbb
and
mov
sarb
pushf
cmp
sbb
jmp
push
add
or
sbb
xchg
sbb
jo
cmp
pop
cmp
clc
jmp
mov
insb
pusha
xchg
cmp
adc
inc
add
jbe
mov
ret
inc
clc
jb
and
cmp
popa
aas
insl
or
inc
xor
dec
jo
cs
insb
mov
inc
in
sbb
pop
sbb
dec
repnz
inc
xchg
addb
add
sar
pushf
rclb
inc
lock
sbb
out
cmpsb
inc
and
fldenv
pop
jbe
sahf
or
nop
out
insb
and
add
lret
data16
xor
hlt
cmp
cmp
das
test
sahf
mov
mov
ret
mov
push
ficoms
enter
push
sub
or
sbb
jl
cmp
adc
mov
andb
lcall
add
mov
fs
inc
add
je
jl
or
mov
nop
je
push
xchg
mov
insb
add
mov
xor
and
ror
xchg
add
push
xor
mov
sbb
sbb
nop
fdivrs
jne
add
pusha
pop
pop
je
incb
and
rcr
mov
dec
and
xchg
imul
sbb
mov
int3
push
ljmp
faddl
sahf
adc
and
lcall
mov
lock
lods
dec
add
fs
cwtl
lds
xchg
xchg
sbb
test
sbb
inc
ret
xor
es
adc
mov
pop
push
or
jb
clc
loope
jp
dec
ss
sbbb
fsub
sub
jo
inc
or
or
into
ljmp
test
push
add
mov
addl
or
mov
inc
and
push
add
inc
push
inc
les
rorl
lock
cltd
adc
cmp
or
sbbl
subb
lods
adc
mov
push
je
add
dec
test
lret
xor
dec
nop
sbb
pop
sbb
inc
adc
push
add
add
push
and
or
call
call
cmp
or
rolb
or
mov
or
push
loope
and
inc
xchg
push
inc
xor
loopne
xor
adc
add
sbb
cwtl
mov
dec
je
cmpb
scas
xchg
ret
push
mov
sbb
push
add
cmpsb
hlt
or
sub
inc
adc
jo
bound
push
scas
mov
into
in
sub
cmp
jne
inc
cmpb
pusha
in
sub
and
lar
xor
adc
xor
dec
mov
mov
add
mov
dec
adc
inc
cmp
xor
add
inc
mov
or
push
push
jae
add
add
add
add
and
adc
outsl
repz
ss
add
cmp
add
add
ds
aas
inc
inc
push
dec
add
sbb
push
push
pop
pop
xor
negb
jbe
push
add
iret
jmp
add
sbb
add
adc
outsb
jno
outsl
mov
je
jg
and
cmp
inc
cmpsb
inc
dec
add
lret
sti
dec
push
add
adc
add
pop
pushl
push
ss
dec
dec
inc
into
inc
dec
dec
add
dec
add
frndint
dec
push
dec
add
inc
dec
push
dec
push
add
dec
push
pop
add
mov
fistl
push
pop
pop
push
push
push
push
pop
push
push
push
pop
pop
add
pop
add
push
pusha
add
bound
popa
pop
popa
add
pop
fs
arpl
decl
lcall
imul
outsl
insl
jo
jo
faddp
ljmp
jb
jns
jp
jle
jle
mov
jnp
test
mov
add
stos
mov
push
add
arpl
add
je
lods
pusha
fldt
jnp
push
jae
jp
sbb
mov
fwait
jb
jp
mov
mov
add
les
in
fnsave
lds
in
ss
pmuludq
add
and
add
jge
add
mov
xor
mov
mov
and
stc
mov
pop
mov
mov
and
push
inc
lea
or
mov
push
mov
push
sahf
push
pusha
test
icebp
mov
dec
push
lahf
movl
mov
adc
ret
mov
int
scas
and
shlb
enter
int
sub
push
xor
sarb
push
adc
out
add
xlat
call
mov
pushl
and
jmp
in
repnz
push
test
jge
xor
push
cmp
loope
mov
out
testb
repz
add
jl
idivl
jle
mov
orb
pop
insb
fadds
test
popf
cltd
sahf
fisubrs
addl
mov
mov
popf
aaa
pop
pop
mov
mov
mov
lcall
mov
cld
cmpsl
mov
push
mov
mov
mov
outsl
mov
add
mov
mov
aaa
fildl
xlat
fsub
push
jecxz
mov
lods
insl
mov
mov
add
enter
mov
lock
mov
push
mov
aad
rcr
add
in
test
rep
jmp
lret
push
insb
sub
jbe
fimuls
jecxz
fucomi
aaa
data16
roll
push
fucomp
shrb
in
push
push
loope
insb
frstpm(287
jmp
jmp
lock
ret
xorb
jecxz
add
in
push
loop
outsl
fstpt
add
ljmp
scas
jmp
add
insl
sti
sbb
in
lock
out
mov
out
repnz
push
aad
in
mov
repnz
push
fdivrp
es
out
repnz
jmp
jecxz
unpckhps
jmp
inc
loope
in
sbb
imul
inc
repz
repz
pop
movsb
cmp
incl
add
cmp
pop
in
and
xor
add
insb
orb
insb
push
xor
cmp
inc
imul
and
shll
pop
mov
add
add
or
add
fistps
add
sub
pop
or
std
sub
push
adc
cmpsl
or
stos
lods
scas
lods
add
fidivs
pop
sbb
or
lds
ret
push
ret
incb
faddp
shrb
or
stos
cmp
dec
pop
add
lret
or
or
pushf
sarl
in
jbe
or
lidtl
or
imul
mov
pusha
lds
fadd
cmp
jle
pop
pop
dec
adc
dec
jecxz
out
call
decb
mul
or
lods
or
fadd
cmp
fucomip
pop
dec
adc
loop
pop
ljmp
out
push
daa
int3
mov
xor
cmp
dec
insl
ss
mov
ret
call
and
daa
cmp
dec
sbb
mov
fldenv
out
pop
or
pop
addr16
std
push
dec
lock
add
aaa
cmp
pop
daa
pop
cmp
pop
lds
in
or
add
sti
repz
push
loope
loope
in
jmp
daa
clc
sub
or
sub
mov
pop
addr16
inc
xor
fucomp
lahf
pushl
stc
das
clc
or
sub
xor
cmp
decl
push
mov
mov
nop
or
xor
xor
inc
fsubr
sub
or
cmp
jo
pop
orl
out
dec
or
daa
into
das
jmp
inc
div
cld
cld
cmp
xor
jb
or
mov
dec
or
add
cltd
inc
fwait
pushf
cld
add
out
roll
xchg
push
pop
pusha
cs
pop
sub
jns
ds
lods
add
std
add
lahf
popf
inc
xchg
jnp
js
or
cmp
dec
mov
dec
fmuls
in
repnz
cmp
popf
cld
mov
and
jg
lcall
or
pop
dec
arpl
rorb
rorl
popf
std
aas
call
sub
inc
hlt
mov
test
daa
aad
cmp
dec
mov
dec
aad
fldcw
repnz
inc
cli
mov
loopne
push
sub
iret
int3
scas
repnz
cmp
jg
jg
or
or
sub
inc
cli
mov
icebp
pop
mov
hlt
aaa
jg
sbb
jg
dec
sbb
sub
neg
inc
cmc
scas
mov
fistpl
cmp
sarl
dec
push
fisubrl
fildl
mov
fdivl
xchg
pop
sub
cmp
sbb
mov
std
jg
sub
cmp
lahf
cmc
mov
add
fimull
or
jg
addr16
push
mov
xor
cmc
add
xor
mov
pop
push
sbb
pushl
or
xor
fldl
faddl
fisubrl
in
mov
cmp
push
add
movsb
or
xchg
sub
fistpl
add
pop
mov
movsl
cmp
sbb
jp
jl
or
mov
mov
mov
sbb
or
pop
and
adc
add
rcrb
insb
daa
movsb
or
mov
jg
dec
dec
cmp
pop
outsl
orb
sti
mov
bound
mov
stc
fistps
jg
dec
xchg
insl
push
inc
mov
add
fcmovu
ja
pop
mov
cmp
test
mov
andl
mov
or
inc
das
cmp
and
push
mov
mov
inc
or
loope
fs
fadds
data16
add
adc
out
jg
add
inc
dec
add
sbbl
aas
mov
add
cltd
xchg
xchg
push
flds
xchg
cmc
add
scas
clc
decl
sar
add
push
add
repnz
fisttps
inc
add
ljmp
int
inc
sbb
fildll
int
cmp
stos
sub
in
insl
outsl
fcomps
pop
mov
pop
xor
mov
mov
xor
xor
mov
ja
in
es
push
js
popf
fstl
xor
mov
in
jge
ja
pop
xor
xor
jne
pop
fldl
fcoms
inc
arpl
adc
jg
scas
sub
add
add
or
dec
push
and
add
sub
pop
add
adcb
sub
jle
data16
adc
sti
fistps
jb
add
jne
add
jnp
sbb
xor
aas
mov
add
pop
sub
inc
imul
jbe
dec
js
iret
cmpsl
jge
dec
push
xor
insl
jge
outsl
add
shrl
jl
jl
add
push
push
insb
ja
fwait
in
dec
outsl
push
pop
jo
jae
je
inc
shrl
push
arpl
jl
movsl
lcall
add
cmpb
add
cwtl
cmp
gs
mov
in
sbb
xchg
inc
mov
cld
mov
jge
pop
andl
sbb
push
and
push
insb
ficomps
les
addb
jb
pop
inc
int3
data16
dec
mov
in
popa
lock
lock
mov
mov
pop
cmp
jo
mov
dec
fisttpl
fcoml
pop
xchg
and
div
adc
test
mov
sahf
int
xchg
xchg
int
je
ja
js
jl
pop
out
sahf
lods
nop
push
jp
xchg
push
jle
xchg
and
aas
dec
fiaddl
xchg
xchg
mov
lea
rcr
dec
jb
push
push
xchg
push
outsb
xchg
add
cwtl
lcall
adc
test
mov
out
jnp
push
pop
sarb
xchg
push
xchg
insb
lahf
imulb
test
cwtl
xchg
fwait
sahf
push
mov
out
lcall
mov
int
cmpsb
mov
xor
movsb
push
lahf
test
pushf
lods
mov
stos
push
jg
fidivrl
push
lods
mov
cmpsb
push
pop
lods
mov
fldt
mov
add
mov
mov
mov
push
outsb
ss
mov
mov
mov
mov
mov
insl
mov
mov
mov
es
push
mov
lahf
int
add
mov
mov
sahf
jle
add
and
push
ret
leave
push
jl
cmp
leave
push
ret
int
iret
dec
push
enter
mov
loop
push
cmpsl
test
add
aad
into
xor
jmp
shlb
push
rorb
fadds
fcmovbe
add
in
frndint
add
fst
fmuls
ficompl
jecxz
call
jge
loop
loopne
in
push
in
lock
mov
repnz
hlt
div
call
pop
lock
ret
inc
pop
leave
rcrl
lret
pop
mov
fsubs
fisttps
not
out
push
inc
fmuls
test
push
lahf
push
fstpt
js
cli
mov
iret
push
rcl
int3
iret
mov
pusha
jg
push
loop
int3
icebp
xor
cmc
repz
sbb
ja
push
pop
fwait
add
mov
adc
rolb
push
mov
add
mov
ljmp
sti
bnd
shll
mov
call
cmc
bound
test
pop
fcmove
xchg
sbb
ror
popa
sti
mov
out
fs
xlat
lret
ret
popa
aas
jnp
add
aad
lds
xchg
pop
pop
mov
pop
sarl
fstp
ss
cld
fcmovbe
lret
mov
pop
pop
out
pop
cmp
fst
enter
mov
add
jmp
mov
add
cltd
dec
lcall
cwtl
xchg
xchg
xchg
xchg
xchg
popf
lods
iret
stos
xchg
test
mov
add
out
test
lea
cmp
mov
addb
mov
mov
hlt
mov
pop
add
addr16
in
negl
gs
jle
mov
push
xor
pop
push
inc
lock
and
test
call
and
adc
xor
cmp
sbb
jns
sbb
jg
ljmp
pop
and
ss
aaa
dec
sbb
jge
seto
jno
popa
pop
bound
and
daa
add
cmp
push
push
jb
pushl
xor
push
jbe
jne
imul
sub
cmp
inc
pop
repz
dec
popa
push
pusha
orb
and
add
push
or
pop
dec
cmp
andl
pushl
push
add
idiv
roll
idiv
fnstcw
pop
push
sbb
jp
emms
jg
imul
lock
and
pop
fistpl
pop
or
inc
inc
inc
pop
xor
sti
lahf
dec
jnp
jl
ja
out
pusha
push
and
pop
stc
xchg
pusha
pop
push
idiv
cli
sub
jp
push
mov
or
mov
and
or
stc
push
popa
jbe
js
push
mov
push
pop
push
sub
xchg
iret
gs
add
push
push
outsl
fwait
push
pop
pop
pause
sub
pop
sub
idiv
jb
fdivs
push
add
add
push
dec
jnp
imul
popa
xchg
pop
out
negl
pop
popa
add
add
push
cmp
inc
scas
add
add
cmp
clc
decl
add
pop
aaa
add
sub
in
cmp
xor
add
adc
pop
push
jmp
sbb
add
add
idivb
and
dec
cmp
add
adc
inc
push
add
add
sbb
lcall
inc
add
and
adc
dec
add
sub
add
pop
clc
cmp
je
sub
xor
arpl
outsl
andb
js
push
cmp
outsl
fildl
sub
dec
push
dec
push
add
push
pop
addr16
jg
popa
add
pop
bound
jbe
jge
pop
push
jg
lock
pop
imul
cmp
inc
dec
inc
add
pop
mov
push
pop
push
push
jo
insb
jo
add
ss
insl
sbb
inc
jne
jp
imul
icebp
int
mov
xchg
sbb
mov
add
sbb
sahf
xor
push
stos
xor
push
sti
mov
fiaddl
mov
adc
mov
ss
sti
or
push
ds
push
push
xlat
push
es
fdivs
ljmp
xchg
imul
jbe
out
jl
ss
andb
or
dec
push
popf
cs
shrl
hlt
testb
push
push
add
xchg
pop
or
mov
push
or
pop
cmp
mov
xchg
add
xchg
into
add
cmp
xchg
mov
icebp
pop
dec
push
add
add
dec
fs
addb
mov
fbstp
cs
popf
add
pop
xchg
add
insl
add
lods
loope
js
push
jge
sub
add
lea
xlat
ss
daa
data16
dec
mov
pop
movsl
mov
mov
das
dec
scas
push
imul
cmp
mov
inc
push
movzbl
push
insl
mov
jnp
outsl
mov
add
outsb
push
jge
add
mov
push
faddl
gs
mov
push
push
inc
ret
mov
dec
pop
ret
jae
add
jno
mov
jmp
push
xchg
or
and
cmpsb
add
mov
jbe
rcrb
push
mov
dec
sub
mov
loop
push
inc
nop
cltd
or
push
jo
mov
mov
pop
mov
push
dec
orl
test
push
xchg
mov
into
xchg
stos
fisubs
mov
xchg
ss
aad
ds
fildl
push
mov
insb
mov
xor
push
mov
ficomps
cmc
add
loope
test
push
es
push
mov
xchg
xchg
pushf
aam
bound
stc
in
cmpsb
and
pop
mov
add
fadds
bound
fdiv
mov
mov
push
faddl
imul
scas
loopne
mov
push
mov
jne
stc
add
fwait
xchg
mov
enter
fisubrs
sti
xchg
push
shl
add
rorb
sub
std
add
enter
fcmovnb
mov
into
push
cmp
push
cmp
push
outsb
imul
rcl
inc
lret
clc
xchg
in
push
add
fwait
insl
push
push
je
nop
add
or
add
push
cmpsl
lods
push
mov
mov
sbbl
xor
scas
push
xchg
scas
mov
adc
cld
outsl
scas
sti
rcr
add
add
sbb
fisttpl
sbb
push
sbb
push
add
mov
shr
add
add
or
cli
adc
sbb
jg
mov
and
sub
and
sbb
sbb
pop
push
push
add
add
sub
insl
imul
sub
pop
adc
push
imul
sub
add
outsl
jne
pop
mov
add
push
sbb
insl
xchg
test
sub
jg
and
movsb
fistpll
jp
jg
lods
imul
and
les
mov
ret
inc
sub
jns
test
data16
inc
xchg
xchg
out
jnp
pop
je
pushf
add
dec
sub
push
mov
mov
push
divb
mov
mov
sti
cmp
lret
add
mov
cmp
imul
fstp
loopne
and
std
jge
or
add
add
mov
lahf
cltd
int3
lret
and
cmp
iret
jbe
mov
mov
ret
add
inc
dec
mov
mov
sub
sbb
iret
push
mov
insl
pop
lcall
push
mov
mov
iret
push
sbb
loopne
sbb
mov
and
mov
jns
add
pushf
sbb
fcoml
sbb
in
sbb
pusha
sbb
cli
scas
subl
js
pusha
jg
test
sbb
popf
mov
loope
sub
and
mov
mov
sahf
cld
mov
push
add
sub
scas
cmp
clc
insl
into
ljmp
fimull
into
imul
sub
and
push
sbb
pusha
jno
movsb
push
imul
test
test
sub
ds
lock
cld
mov
insl
sbb
test
ljmp
hlt
or
mov
jl
test
jns
cld
add
push
adc
jne
outsl
inc
lcall
imul
mov
lods
lods
xchg
sbb
xchg
test
subb
xchg
imulb
pop
or
sbb
sub
and
add
inc
outsl
adc
fnsave
xor
push
pusha
jns
sbb
mull
aaa
push
fnstenv
xchg
jnp
cmpb
dec
pop
cwtl
insl
es
sar
lret
mov
xor
xor
add
sti
or
je
test
mov
notl
out
test
add
add
add
inc
add
jo
cmpsb
xchg
loop
pop
mov
inc
mov
bound
push
push
decl
inc
xor
test
pop
pop
jle
outsl
mov
push
push
inc
sbb
lret
sub
push
lahf
add
cmpl
scas
add
call
xor
pop
pop
pop
bound
pusha
hlt
jb
test
imul
push
subb
jg
inc
cmpsl
cmp
stos
loopne
ljmp
push
int3
fists
cmp
sbb
cld
mov
jns
jg
push
push
xor
sarl
jns
xor
jle
or
ljmp
cmp
cmpsl
cmp
xor
pi2fd
push
adc
inc
dec
dec
pop
pop
pop
push
push
pop
in
out
les
mov
add
je
pop
pop
jp
xor
movb
sub
mov
leave
mov
push
push
cmp
inc
dec
pop
inc
adc
decb
dec
push
out
rorb
or
aas
stos
sub
jp
rol
mov
or
xor
jns
out
lret
movsb
xor
or
cmp
mov
cmp
dec
push
orb
mov
jle
cli
pushl
rorb
mov
in
mov
jae
and
add
or
add
or
push
les
add
add
aad
outsl
jle
cli
cmc
aad
mov
mov
cltd
cs
pop
add
enter
cmp
or
ds
inc
cmp
aad
push
imul
js
xlat
add
xchg
std
push
jg
fabs
mov
jno
and
and
ds
or
inc
cmp
pop
cli
dec
testb
addb
xchg
jl
sti
lcall
jns
and
push
ss
es
or
or
dec
aaa
adc
cld
fwait
std
xchg
and
cmc
cmc
div
aad
and
imull
sbb
jl
sub
xor
js
push
stc
mov
addb
sub
cmc
xlat
cmc
sarl
add
mov
decl
or
and
jg
mov
jg
sbb
add
testl
aad
or
add
lods
jl
call
imul
mov
add
cld
lret
in
testb
jg
xlat
xlat
sahf
jle
jge
testl
loopne
cli
fsincos
jecxz
shl
xchg
mov
jp
insb
mov
inc
adc
xorb
pop
faddl
ja
clc
add
ja
idiv
jle
loope
inc
mov
sbb
add
push
scas
call
repz
test
mov
roll
sti
insl
add
call
fs
mov
jg
jbe
mov
ss
jle
subb
scas
out
cltd
loopne
or
cmp
iret
and
mov
cmp
add
cmp
jge
jmp
lds
test
stc
sti
stc
stc
hlt
repz
xlat
call
add
insb
jg
cli
rol
std
fbld
and
rcll
andl
add
pushf
mov
pushf
cli
add
test
cld
in
jle
jle
inc
shll
sbb
jnp
mov
out
rcr
jnp
cmp
xlat
daa
jno
mov
fsubp
jmp
sub
add
adc
xchg
scas
sti
loopne
add
fs
and
jge
cmp
cld
or
mov
out
sti
cmc
int3
stos
jo
or
aad
sbb
incb
jle
gs
dec
outsb
or
jmp
or
push
aad
popa
xchg
sti
cli
in
aad
call
pusha
sub
iret
addr16
gs
jle
pop
mov
jmp
loope
clc
call
fidivrs
xchg
stc
sti
pop
mull
rcr
sti
jp
loop
cli
ret
jl
andl
jecxz
loope
sarb
xchg
decl
mov
sti
adcl
jle
addr16
fs
insb
fisubrs
addr16
xchg
ss
popa
xchg
rcr
add
jle
stos
add
jnp
jl
and
add
add
ret
pop
push
jge
jg
xor
std
in
adc
ja
lock
xchg
mov
mov
dec
iret
jle
cmp
adcl
push
sbb
push
xchg
js
jle
push
adc
jns
out
ret
jmp
jle
lods
fwait
jle
pusha
xchg
in
mov
cmpl
add
jne
cmp
cld
decb
jne
push
cmpb
fucom
test
push
ja
test
je
fs
add
aad
sub
int3
or
jle
sti
test
mov
jg
pop
jle
sti
and
push
sbbl
outsl
and
sub
setnp
ret
cmpb
jbe
adc
sbbb
fs
xchg
dec
sar
call
addb
jle
push
xor
sti
sbb
xorb
std
sti
adc
je
push
jns
lods
add
jp
mov
xchg
jle
mov
dec
inc
cs
aam
push
lods
mov
fiadds
push
incb
jg
test
sub
mov
sbb
cwtl
push
ret
jbe
popa
arpl
cli
lds
or
xchg
call
xlat
loopne
cmp
add
add
push
stc
arpl
rorb
lods
adc
add
cmp
add
jnp
nop
fcos
add
clc
lods
outsl
cld
and
outsl
and
jg
ret
xchg
fstpt
xchg
xchg
xchg
popl
jg
loopne
out
call
jns
sbb
out
mov
rolb
jl
jge
ja
mov
sti
xlat
ret
jl
add
int3
add
mov
mov
jg
sbb
jle
rcll
pop
ret
xorl
outsb
insl
push
sub
mov
lds
fsubp
lods
ret
iret
or
cs
xchg
mov
jl
insb
push
jle
ror
cmp
in
mov
shr
out
jnp
cmc
lret
push
fidivrl
push
lods
aam
add
orb
jge
lcall
pop
addb
xlat
aam
test
call
jl
mov
mov
pop
out
mov
jle
call
jl
clc
cli
rolb
mov
lret
ret
ret
ret
sarl
sbbb
add
lret
jnp
jmp
cmc
push
clc
je
in
loope
adc
subl
das
push
or
adc
pop
movsb
sub
addb
add
notb
rolb
and
fidivl
rorb
push
add
cmp
adc
push
cmc
test
jns
jb
pop
push
jne
adc
sub
inc
les
les
idivl
inc
les
psrlw
or
sub
outsl
repnz
das
outsl
inc
inc
sub
add
xchg
mov
inc
inc
loopne
add
adc
mov
out
add
mov
inc
ret
insb
movsb
stc
popl
pop
popl
movsb
jge
add
xor
pop
and
pusha
inc
and
outsb
add
mov
test
xchg
mov
jnp
or
push
push
push
add
push
pop
popl
add
add
out
lock
xchg
push
imul
ja
jo
jno
push
push
cld
xchg
call
push
stos
add
jno
mov
ja
int3
outsb
jae
mov
sub
lcall
pop
mov
pop
jne
xchg
jg
cltd
cltd
test
add
mov
mov
push
pushf
pop
leave
inc
mov
movsb
xor
mov
mov
lret
sub
add
adc
int3
mov
repnz
ja
adc
lret
add
push
mov
sub
pop
repnz
or
mov
lret
cmp
mov
pop
rcr
rolb
lock
ja
cmp
loope
cmp
pop
adc
lock
cli
cmp
fstp
shrb
push
das
cli
add
mov
repnz
adc
mov
das
xor
das
xor
mov
das
incl
pop
addr16
ds
nop
jo
cld
xor
cmpsb
aas
mov
je
pop
outsl
pop
mov
sahf
sub
inc
das
mov
push
add
das
xor
loop
in
pshufw
nop
stc
lds
pop
inc
inc
pop
mov
sarb
out
setns
or
int3
xchg
pop
pop
push
jbe
cmp
ja
push
mov
sti
xor
insl
xchg
pop
push
fildll
repz
ja
xchg
pop
pop
push
aas
xor
movsl
bound
pop
push
ds
aad
push
iret
ficoml
in
mov
push
mov
push
push
cld
outsl
jnp
jbe
pop
push
lds
jle
aaa
or
js
adc
pop
xor
xor
call
mov
dec
mov
push
inc
mov
jmp
mov
sti
add
or
orb
cltd
cs
sti
or
fmull
jge
or
xor
or
mov
pop
dec
daa
jo
mov
sbb
add
cwtl
fistpl
sbb
mov
and
ss
int
xor
sub
ss
cmp
neg
inc
cmp
adc
sub
xor
mov
add
cmp
cmp
add
push
cmp
outsb
inc
cmp
filds
dec
es
dec
push
inc
push
push
dec
ds
dec
int
cmp
inc
push
dec
jp
pop
push
push
outsl
lahf
out
pop
pop
add
bound
jne
dec
dec
pusha
add
out
push
insb
push
push
fs
jp
dec
jbe
add
mov
insl
fildl
push
jne
bound
add
push
insl
pop
pop
mov
push
jns
push
jae
ds
out
cmp
cld
push
es
mov
out
jl
add
push
jle
or
es
push
frndint
outsl
jle
inc
add
cmp
dec
add
dec
add
cmp
push
add
aas
push
dec
aas
pop
add
xor
neg
aaa
xchg
dec
add
xor
cmp
adc
popa
and
and
pop
mov
aas
gs
jns
inc
dec
push
inc
push
dec
insl
push
adc
ss
imul
out
push
insb
push
pop
outsb
add
data16
jne
push
gs
cld
data16
jae
add
arpl
push
inc
add
xorl
addb
jge
mov
mov
push
call
das
js
orb
mov
add
adc
imul
lods
sub
xchg
push
imul
cmp
test
test
lea
fwait
mov
mov
add
lahf
xchg
adc
pushf
sbb
fwait
testb
mov
push
popf
xchg
mov
add
push
sti
int
cld
xchg
sub
sahf
sahf
sub
cmpsb
fwait
movsl
and
cmpsl
movsl
cs
mov
cmpsl
es
lods
stos
xor
cmpsb
movsl
cmp
mov
cmpsb
std
mov
add
mov
stos
mov
push
jg
mov
add
scas
push
mov
fidivrs
iret
pushl
mov
add
ret
push
add
pop
addr16
lret
inc
fst
jae
aam
add
aad
and
mov
loop
push
inc
fwait
add
mov
fwait
or
add
jp
arpl
das
jo
add
xchg
insl
push
jne
aas
js
jle
cmpsl
cs
mov
jo
insl
repz
mov
push
les
inc
pop
push
aas
push
insb
imul
xchg
insl
lea
xchg
stos
add
xchg
cmpsb
dec
sbb
mov
mov
cli
mov
imull
sahf
mov
sub
popf
lret
int3
push
insb
pop
mov
xlat
movsl
enter
mov
mov
mov
inc
mov
fidivrs
sub
cmp
popl
inc
test
mov
out
faddp
and
les
iret
fildl
jg
out
rolb
inc
ret
push
enter
enter
fldcw
aad
outsl
jecxz
in
mov
lods
push
mov
add
int
sub
dec
xchg
jecxz
xchg
add
in
add
lret
push
call
ret
or
test
mov
mov
cmpsb
ss
int
xchg
loop
loope
lock
insb
repz
dec
xchg
mov
ror
add
cmc
int
push
pushl
fwait
int
push
fsubr
iret
repz
in
jmp
mov
xor
out
push
clc
mov
mov
and
stos
pop
adc
pop
adc
shrb
cmp
shrl
rolb
sub
mov
push
pop
adc
sbbl
jg
push
push
push
pop
adc
xorl
insb
popa
shrl
sbbb
mull
pop
jnp
loop
pop
cmp
jnp
repz
std
lcall
pop
into
call
xor
call
out
popa
mov
std
decl
das
das
xor
mov
push
out
add
push
and
and
das
cmp
adcl
loop
xchg
xchg
sub
hlt
std
int
sbb
sbb
das
xor
xchg
imul
es
mov
imulb
sub
xor
mov
sbb
or
or
pop
push
push
sbb
and
cmp
pop
xor
cmp
fwait
sahf
mov
or
add
cmp
pop
xor
pop
pusha
jno
xchg
lahf
mov
sub
add
or
adc
data16
jo
jo
push
data16
push
cld
jns
jnp
cmp
adc
dec
out
mov
dec
dec
dec
adc
aas
or
dec
dec
dec
pop
mov
mov
mov
jmp
mov
dec
aam
movsb
mov
dec
push
push
lock
decl
cmovno
push
push
pop
pop
cmpsl
mov
cmpsl
cmpsb
pop
pop
adc
jbe
mov
jg
or
push
inc
inc
push
decl
pop
pop
cmpsb
mov
test
testb
push
mov
pop
inc
inc
popa
push
sbb
into
aam
mov
jno
aas
mov
inc
inc
popa
pop
cmpsl
ret
sarb
dec
push
add
pop
pop
movsl
cmpsb
mov
ret
lds
push
add
in
fisttps
pop
ror
int3
mov
nop
in
jbe
push
push
add
lret
ror
int3
int
jmp
arpl
movsl
cmpsl
ret
ljmp
rcl
xlat
mov
fs
pop
mov
fstpt
pop
mov
mov
sti
out
fnstsw
mov
mov
pop
pop
push
jge
popa
lods
ljmp
nop
pop
cvtdq2ps
pop
cmpsb
pop
mov
outsl
mov
xor
lea
in
pop
pop
loopne
orl
adc
pop
ficoml
jle
add
inc
sub
xchg
shufps
out
mul
ret
out
mov
mov
shr
or
add
pop
jae
push
adc
add
and
mov
dec
or
or
cltd
cltd
enter
stos
jmp
or
into
test
or
repnz
mov
xor
cs
cld
cld
sbb
iret
xchg
incl
xor
cli
cltd
jns
push
cltd
cltd
ja
in
in
hlt
mov
dec
iret
iret
or
bswap
dec
insb
inc
jg
cld
dec
or
decl
dec
mov
pop
mov
stc
in
fdivr
push
out
pop
int3
mov
addr16
cld
out
das
aam
ljmp
aas
fildl
sahf
out
stos
cltd
xchg
inc
push
pusha
add
cltd
lcall
cli
pusha
imul
psadbw
bound
fs
dec
and
jo
ss
nop
xchg
or
sub
dec
shr
and
inc
inc
inc
add
add
push
les
xor
and
in
push
push
cmp
cs
jbe
xor
push
add
xchg
xchg
mov
add
test
push
sbb
mov
das
pop
das
add
into
repz
push
push
or
or
outsl
pop
shlb
or
cmp
cmpsl
jne
fildll
ja
jg
pop
jo
pop
or
dec
ss
mov
repnz
pop
mov
mov
or
insl
inc
lcall
les
and
jle
cmp
cmp
xchg
push
and
push
sub
fdivrl
xor
xor
xor
scas
push
cmp
cmp
push
add
inc
out
aaa
incl
push
add
cmp
ds
add
cmp
add
mov
inc
pop
dec
pop
ds
adc
pop
dec
pusha
push
push
arpl
jle
add
push
insb
es
jae
pop
jae
es
idivb
dec
add
pop
push
aas
pop
imul
outsb
add
popa
jbe
ja
adc
add
data16
jge
je
cltd
xor
jle
mov
insl
jg
bound
inc
push
dec
inc
push
dec
sub
out
dec
push
push
push
rcr
add
pop
add
pop
fs
inc
push
popa
push
push
arpl
insl
ss
fs
pushw
pop
insb
add
push
push
add
push
fs
push
imul
fldcw
jb
jae
je
je
jp
push
insl
aas
aaa
jnp
jnp
jae
mov
push
jnp
and
fs
add
jb
push
jl
divb
jo
cld
dec
out
ss
mov
fwait
and
ret
dec
es
mov
add
xchg
in
outsl
fiaddl
mov
mov
orl
xchg
jbe
mov
xchg
mov
cltd
movsl
cmp
mov
push
fsub
push
imulb
cmp
rcl
push
sahf
mov
in
outsb
addl
push
mov
addb
xchg
mov
xchg
xchg
add
xchg
cltd
cmpsb
xchg
push
andb
push
pushf
cwtl
xchg
mov
mov
add
cltd
mov
mov
scas
add
lods
mov
add
movsb
stos
movsb
push
lods
test
test
stos
mov
add
lods
add
inc
add
mov
push
mov
mov
lcall
mov
mov
mov
mov
rcr
rol
mov
ret
ret
cmp
mov
kmovw
or
cs
mulb
es
into
into
into
movb
mov
add
into
int
push
ror
ror
aaa
in
cmpsb
lods
cwtl
ror
push
ror
ror
cs
rcl
clc
dec
xor
add
add
rorl
aam
xlat
roll
rcl
cmpsl
insl
imul
add
push
fcom
push
fcompl
lods
insl
xchg
fstp
ss
inc
fiaddl
fdivs
shrl
mov
mov
and
add
in
mov
insb
add
fiadds
push
fninit
dec
fucom
frstor
fistpll
mov
add
int3
data16
add
push
in
add
in
sahf
data16
push
jmp
out
out
out
cmpsb
insl
ljmp
push
jmp
jmp
outsb
dec
xor
in
in
add
out
out
insb
fsubl
loop
xchg
lock
push
hlt
hlt
fldcw
jbe
testb
clc
add
mov
xlat
or
aas
pusha
pop
inc
cmp
pusha
cmp
add
jg
sbb
pop
insb
pop
sub
rorb
sbb
lcall
add
sbb
rorb
pop
or
add
or
add
mov
jmp
pop
xor
sbb
jmp
xor
inc
push
inc
mov
adc
or
decl
adc
xor
jl
push
cmp
xor
idiv
mov
xor
cmp
push
adc
shlb
cmp
aaa
xor
popa
stc
fistpll
cmp
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
shl
jns
or
mov
rcll
xor
sub
xchg
xor
pop
adc
dec
adcb
jo
imul
adc
add
pop
mov
js
lods
mov
push
jo
xor
adc
out
ja
xchg
lret
xchg
jne
lcall
in
aas
mov
popa
add
xadd
cmp
nop
in
jo
lcall
inc
daa
out
in
cmp
rorb
pusha
add
mov
imul
cmp
xchg
scas
mov
orb
xor
sahf
cmp
jge
cmp
jl
mov
cltd
scas
mov
out
shlb
mov
or
andb
push
cmp
jge
xchg
xchg
mov
push
loope
mov
cwtl
xchg
idivb
pop
push
pushl
rorl
mov
mov
lock
mov
dec
out
or
jns
loopne
pop
shlb
mov
jge
call
ja
xor
jns
out
cmovns
lock
js
dec
invlpg
inc
dec
jno
js
pop
mov
jno
inc
pop
shl
ss
lods
ljmp
adc
mov
shll
inc
mov
incl
aad
gs
pop
sub
mov
jg
orl
aas
cmpsl
mov
ljmp
jle
xchg
mov
dec
sub
sub
ds
mov
inc
aaa
pushl
nop
xor
adc
and
cmp
push
adc
adc
rcr
adc
sbb
add
cs
jmp
test
and
outsb
push
sub
pop
das
pushw
pop
cs
xchg
lret
aas
and
inc
dec
push
imul
sub
and
cmpl
xchg
mov
push
pop
ror
mov
dec
add
cmpsl
clc
cmp
add
or
ret
loopne
mov
pop
pop
inc
or
pop
add
dec
mov
or
leave
fsubp
in
lret
stos
jb
mov
outsl
or
movsl
or
sarb
pushf
mov
into
in
mov
dec
pusha
or
imul
mov
push
sar
outsl
add
int
xchg
mov
dec
inc
cmp
lcall
add
or
xor
cmp
jns
mov
lock
cmp
xor
pop
in
sub
or
add
pop
add
les
jb
iret
adc
jmp
sbb
sub
adc
xor
xor
stos
mov
push
xor
push
sbb
add
iret
jnp
sahf
jae
inc
es
push
push
push
imul
cmpl
fidivrs
repz
mov
mov
xchg
fs
arpl
dec
shl
jae
shrl
call
pop
inc
arpl
jecxz
int
repz
inc
mov
push
test
mov
xchg
stos
xchg
add
lods
mov
mov
mov
mov
fwait
cmpsl
test
lret
aam
dec
addr16
ret
int3
and
jns
rcr
add
jecxz
xor
push
jecxz
jmp
in
pop
xchg
cmpsl
in
repz
test
psubq
cld
call
pop
push
insb
adc
adc
adc
add
inc
enter
add
add
inc
test
push
add
pop
dec
pop
add
insb
mov
add
or
pop
xor
inc
inc
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
cs
push
ds
push
push
popa
ds
jge
pop
cmp
inc
push
push
popa
fisubl
les
pop
pusha
adc
or
nop
aad
aas
add
sbb
pop
adc
sbb
add
push
push
pop
jmp
addb
inc
inc
daa
sub
sub
pop
or
loopne
stc
fwait
dec
cmp
ss
push
xor
or
inc
inc
push
sub
pop
or
dec
pop
cmp
mov
pop
xor
xor
dec
sub
scas
nop
out
sbb
jle
sarb
push
aaa
sbb
mov
and
repz
cmp
mov
pop
pop
cmp
dec
and
adc
sbb
mov
adc
pop
pop
aas
inc
rcll
mov
and
cmp
jo
sbb
add
or
ds
inc
sbb
sbb
push
iret
push
mov
dec
mov
and
inc
add
sbb
inc
sbb
push
and
add
fidivrl
cmpl
or
pop
sbb
shlb
cmc
xor
add
sub
push
and
filds
lds
subl
mov
pop
push
push
pop
push
push
pop
sbb
mov
cwtl
mov
imul
pop
xor
pop
add
adc
nop
push
aad
hlt
outsl
jg
push
sbb
pop
aaa
add
aas
add
and
adc
jmp
inc
add
sub
adc
cs
add
aaa
push
add
cmp
ja
mov
cmp
sbb
push
outsb
lcall
and
add
inc
popa
add
insl
add
dec
ja
dec
jle
push
and
add
push
inc
and
lods
sub
es
cs
jge
fisubrl
push
jns
jnp
mov
dec
test
push
lcall
in
cmpsb
push
mov
pop
nop
jbe
mov
xor
add
pop
xchg
add
pop
jle
fcomi
xchg
add
push
arpl
sub
add
gs
sub
mov
outsb
lcall
jno
add
into
aas
jns
xor
add
jp
ss
add
test
inc
std
mov
int
xchg
inc
jge
jle
inc
jle
add
mov
add
push
jg
mov
sbbb
cs
mov
in
imulb
inc
xorl
mov
dec
xchg
mov
add
mov
xchg
rolb
dec
xchg
lds
into
push
lahf
int3
add
or
add
insb
stos
aam
stos
fldl
addr16
fcompl
movsb
cmpsl
data16
ss
test
add
ljmp
data16
ficoml
mov
push
loopne
je
xlat
add
add
in
push
decl
push
rcr
add
in
add
testb
leave
repnz
repz
and
ja
outsb
faddl
ss
add
in
push
push
test
mov
lcall
mov
fbstp
in
cmpsb
jbe
cwtl
es
cltd
push
xchg
xchg
popf
add
lcall
lahf
outsl
outsl
mov
test
add
mov
mov
movsb
cmpsb
aam
int
test
lods
cmpsl
push
stos
test
clc
ljmp
add
lods
cmpsb
add
scas
mov
test
mov
mov
mov
ss
sbb
push
enter
mov
iret
mov
mov
mov
sarl
jne
fildl
lret
mov
iret
mov
mov
int3
mov
sahf
lret
mov
push
ret
push
push
rol
iret
vpandn
mov
leave
mov
fcmovb
fcmovne
mov
sar
fistps
pusha
push
int
rolb
aam
add
rolb
int
fiadds
add
imul
pushl
jns
stos
mov
mov
add
lret
lret
insl
fbstp
int3
leave
out
enter
int
fmul
push
ror
lret
rcr
jl
ss
es
push
aam
add
fcmovu
xlat
rorl
flds
in
outsb
out
roll
fstpt
loop
insl
mov
fninit
fiaddl
jmp
mov
fstl
pushl
in
add
fstp
add
loope
add
loop
in
fildll
mov
jecxz
in
jmp
loop
add
jecxz
pop
rcrb
dec
stc
out
cmp
push
ljmp
fildl
cmc
mov
call
out
push
repnz
pop
les
sar
jbe
push
fdiv
std
add
push
push
lock
fidivs
fucomi
in
in
jecxz
loop
out
ljmp
mov
push
push
in
stc
call
push
in
cli
out
cli
or
add
div
aas
add
movhps
nop
xchg
xchg
in
call
xchg
xchg
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
ss
push
and
cltd
repnz
idiv
fildl
jecxz
push
mov
push
add
sub
adc
fcomi
mov
adc
rcr
rcl
jecxz
jecxz
fcomp
sub
push
sub
fcom
pop
mov
rcll
rcl
scas
test
ljmpw
push
test
rcl
shrb
scas
mov
std
sti
push
xchg
std
xor
scas
test
add
fwait
test
std
in
rol
lret
sub
jnp
xchg
add
fmul
lahf
xchg
pop
inc
fdivs
push
outsb
jbe
lahf
scas
fdivrs
jbe
jne
mov
clc
negb
pop
scas
pushf
jge
imul
and
jae
sar
imul
scas
ret
sub
outsl
mulb
std
ljmp
sub
pop
sub
or
dec
mov
jl
sarb
std
jg
sti
inc
outsb
mov
pop
int
or
or
sbb
push
push
adc
int
addr16
adc
sub
jg
lcall
lods
mov
or
sub
and
std
ljmp
aaa
cmp
xor
sbb
mov
test
xor
pop
je
lods
std
stos
orb
sub
cmp
sbb
aas
rcrb
fbstp
subb
adc
outsl
pop
je
ds
popa
pop
push
or
lahf
jo
data16
cld
ucomiss
push
sbb
mov
pop
lods
pop
lret
sbb
fs
in
sti
mov
lret
mov
shrb
pushl
sti
jmp
mov
pop
sbb
sbb
dec
pop
pop
jmp
pop
fwait
fwait
xchg
lcall
addr16
inc
cmp
dec
pop
ljmp
dec
adc
cwtl
loope
adc
sbb
cmp
nop
into
icebp
mov
sub
cmp
cmp
pop
ja
pop
sub
xor
xor
sub
stos
dec
push
xlat
insb
push
daa
mov
mov
ret
sti
leave
fnstcw
popf
out
imul
sub
std
pop
dec
rcrl
ret
xor
std
inc
jle
lea
lds
in
enter
jmp
shlb
mov
pop
loope
jmp
out
popa
shrl
fildll
loope
mov
mov
add
lds
jecxz
sbbb
mov
mov
push
cmpsl
sbb
addr16
aad
sub
in
pop
addr16
aaa
mov
loope
mov
or
rol
out
mov
iret
iret
jbe
icebp
out
mov
lds
lcall
cmc
icebp
jecxz
rcr
mov
aad
mov
jmp
ja
out
les
mov
ss
jecxz
mov
xchg
sub
fisttpll
in
mov
js,pn
or
out
sub
imul
ljmp
out
into
lds
les
out
into
into
aad
out
or
out
fstp
iret
outsb
addr16
push
jmp
mov
ret
in
outsl
or
vpunpckhbw
out
mov
adc
into
fidivs
sub
ljmp
out
shll
cmpsb
bound
aam
test
cmpl
repz
sarb
adc
idiv
fs
mov
push
jno
inc
jb
movsl
fucom
out
mov
jnp
push
in
movsb
mov
mov
jae
incl
inc
jae
ret
mov
stos
div
lcall
dec
push
idiv
push
icebp
lock
movsb
andl
dec
sti
incl
sbb
insl
ja
mov
mov
pop
cld
mov
idivb
movsl
sbb
sub
testb
push
xor
js
mov
jns
dec
enter
or
pop
clc
mov
sbb
or
jle
jns
inc
ljmp
or
sub
movsb
leave
in
ja
ja
mov
in
cmp
add
xchg
xchg
dec
aaa
daa
pop
sti
push
add
add
mov
xchg
mov
fneni(8087
repz
mulb
mov
pop
adc
movsb
mov
push
mov
mov
add
leave
pop
stc
clc
stc
outsl
jg
loop
cmp
mov
push
mov
ljmp
push
add
cmp
mov
stc
in
jg
adc
sub
jmp
arpl
mov
mov
push
xor
adc
std
addr16
sbb
notb
cmp
cld
stc
insb
or
not
mov
add
repnz
aaa
clc
repnz
mov
clc
cld
sarl
repnz
js
mov
pop
sub
mov
into
lcall
clc
std
es
sbb
or
out
leave
movb
fnsave
push
push
add
fistpl
and
push
arpl
push
push
dec
and
add
std
das
cmp
std
sar
pop
mov
jg
and
das
cmp
sbb
push
and
std
cltd
cld
fnstsw
ja
or
or
cmp
and
inc
adc
adc
mov
jmp
cld
xor
push
in
mov
cld
std
insl
rclb
pop
jne
push
mov
add
adc
mov
or
add
add
jg
loopne
es
dec
dec
add
cmp
dec
dec
push
add
jg
inc
inc
add
push
add
push
add
push
add
pop
or
push
push
mov
es
ss
int
mov
xor
push
sbb
mov
cld
jg
int3
add
flds
pop
mov
push
mov
cs
mov
dec
pop
ret
cmpsl
add
popa
fsubl
push
pop
pop
les
int
pop
sahf
dec
icebp
push
dec
repnz
repz
hlt
pop
cmc
cld
mov
ss
mulb
data16
cld
add
out
int
es
cld
add
and
into
out
enter
push
outsb
outsb
mov
jb
es
push
jo
push
jo
push
jae
outsl
fildll
jne
ja
jne
jns
jle,pt
repz
into
jp
jp
jl
jge
stc
mov
data16
jg
popa
testl
lahf
data16
stc
outsb
cli
jno
sti
loopne
fbstp
lea
nop
ja
add
add
pop
sub
stc
insb
dec
add
mov
pushl
push
push
stc
mov
pushf
addb
adc
les
add
xchg
and
mov
jg
xchg
add
push
mov
xchg
add
xchg
fwait
add
pushf
mov
mov
or
or
mov
jnp
mov
push
iret
push
sar
test
push
test
push
xchg
data16
insb
xchg
mov
mov
mov
lods
sbb
aam
cmpsb
rcrb
xchg
aad
xchg
xlat
xchg
push
xchg
xlat
push
xchg
fsubs
jle
add
lcall
fwait
push
pushf
fildl
pop
push
sti
push
mov
xchg
xchg
push
xchg
add
cltd
sahf
mov
repz
cltd
incl
fisubs
cmpsl
fcoml
cmpsb
mov
lods
filds
scas
mov
add
scas
cmpsb
loop
mov
mov
jns
mov
mov
mov
mov
mov
movb
lds
imul
aad
ret
mov
cmp
dec
repz
leave
inc
into
fcmovu
js
repz
push
fldl
push
lret
fidivs
in
push
es
push
idiv
repnz
cmc
clc
add
push
stc
cli
sysret
and
in
sub
add
push
cmp
or
pop
add
mov
fld
enter
add
add
and
popa
ljmp
hlt
insl
pop
mov
xchg
xchg
xchg
mov
pop
sbb
stos
lods
lods
mov
mov
add
sbb
cld
jmp
daa
daa
das
xor
xor
aaa
cmp
cmp
jne
orb
cvttps2pi
dec
dec
dec
jbe
js
jl
subb
into
mov
popf
xchg
mov
iret
push
inc
fwait
add
cmpsl
test
mov
mov
mov
fwait
and
xadd
sbb
jns
jge
addl
mov
cmpb
decb
mov
ds
xchg
test
add
mov
in
pop
adcb
test
mov
add
pop
imul
std
bound
fwait
cmp
andl
sbb
lret
lret
outsb
imul
aas
popa
testb
sti
jg
mov
pop
mov
cmp
cld
in
daa
jge
xchg
leave
lret
insl
push
fdivrs
popa
jnp
test
pop
push
outsb
or
popf
pop
xor
cmpb
add
rcr
iret
pop
data16
or
cmp
pusha
lahf
decl
aaa
xchg
sbb
arpl
daa
push
popa
jae
mov
mov
imul
fsubrs
dec
fwait
pop
pop
popa
pusha
outsb
mov
pusha
push
cmp
js
mov
jle
bound
loop
jbe
xor
fwait
jbe
mov
pop
shlb
popa
xchg
cmp
push
dec
pop
das
xchg
mov
xor
popa
inc
fwait
dec
daa
xchg
mov
in
push
lret
add
dec
daa
xchg
pop
add
jle
call
mov
add
inc
fwait
dec
es
pop
pop
push
pusha
out
sti
add
pop
ret
fwait
inc
and
or
test
inc
and
or
pop
add
xor
jnp
xor
inc
and
pop
add
movb
pop
add
and
adc
call
adc
adc
adc
adc
sbb
pop
cld
dec
aas
jg
sub
sub
dec
dec
push
pusha
das
shrb
pop
mov
add
mov
add
add
inc
icebp
add
and
adc
or
or
in
in
and
lock
sbb
daa
add
outsb
add
fwait
sub
das
lret
sub
sub
dec
sbb
inc
inc
sub
dec
xor
xchg
xchg
icebp
add
aaa
cmpsb
cmp
dec
push
ss
call
add
pop
add
dec
pop
add
inc
push
add
dec
pop
add
push
pop
add
push
gs
push
insl
icebp
aaa
sbb
pop
jbe
and
sub
add
test
pop
mov
xchg
inc
add
int3
dec
push
mov
sbb
add
add
push
pop
pop
fistps
or
pop
add
pop
pusha
pop
add
inc
add
dec
add
fdivr
jmp
dec
add
push
add
pop
add
popa
push
popa
data16
xor
cs
outsb
insb
mov
mov
jno
fidivs
add
jge
int
addl
mov
test
jns
add
jl
add
lea
pop
lea
popf
fwait
stos
movsl
scas
adc
imul
mov
add
lods
push
mov
rolb
fadd
clc
insl
into
xlat
push
int3
loopne
add
hlt
stc
xor
iret
addb
dec
adcb
lahf
add
pushf
mov
xchg
add
mov
cmpsb
dec
mov
mov
mov
add
xchg
test
xchg
lods
mov
fisubrs
out
lea
push
mov
insl
fldt
mov
push
mov
ss
sahf
mov
mov
data16
add
insl
aaa
mov
mov
mov
in
test
movsb
mov
loopne
out
rol
ror
movsl
lds
mov
pushf
int3
es
into
xchg
rorb
lds
lret
int
add
aad
iret
aad
iret
fcmovnbe
aaa
aaa
fisttps
rcr
add
aad
add
push
or
add
cs
fisttpl
mov
loope
xlat
loope
in
fsubp
divb
ljmp
push
fabs
push
in
outsb
mov
mov
mov
mov
push
es
out
fucomi
add
mov
insl
outsb
scas
loope
mov
out
out
data16
sti
out
cli
add
data16
out
mov
hlt
add
fldt
mov
ljmp
mov
push
insl
sbb
in
in
std
add
mov
mov
iret
sahf
insl
or
fsubp
frstor
jecxz
ret
in
insl
pop
mov
push
in
out
out
lret
dec
idivb
push
call
add
jmp
add
jmp
int
insl
fcmovne
in
ss
jmp
lret
int
shll
lds
push
in
stc
in
push
rol
push
dec
clc
push
in
int
movzbl
mov
int3
out
shr
testl
icebp
icebp
push
idivb
js
ret
hlt
sti
push
rcll
cmc
jbe
out
int
hlt
int
lret
int
into
lret
stc
ds
aam
cli
cmp
cmp
add
rcl
push
hlt
ds
inc
cld
out
fptan
push
inc
in
in
in
daa
mov
out
mov
sub
push
sbb
aas
add
push
outsb
sar
outsb
push
xor
sub
cmp
in
cmp
push
pop
pop
js
decl
cmp
cmp
mov
mov
lods
std
sub
pop
andl
pusha
cmp
dec
dec
or
pop
cmp
jg
filds
push
mov
fsub
jmp
mov
xor
outsl
pop
cmp
and
bound
jge
into
pop
or
fstps
jle
lock
mulb
push
sbb
inc
dec
dec
mov
ljmp
sar
sbb
adc
inc
dec
test
dec
inc
inc
sbb
add
mov
mov
iret
loope
idiv
out
xchg
popa
add
movlps
push
sub
clts
add
inc
inc
add
sbb
bound
pop
push
adc
sub
and
add
mov
fmuls
sbb
pop
aas
fcoms
sbb
pop
inc
push
fsubr
fistpll
adc
insb
nop
shl
lock
adc
sub
cmp
and
bound
pushf
in
aad
in
xchg
mov
aad
cld
fimull
sbb
in
xchg
push
or
add
decl
leave
lock
adc
sub
sub
adc
add
fs
rolb
insl
sahf
fdivp
out
lahf
add
add
sbb
pop
std
das
bound
inc
inc
push
inc
inc
push
push
jg
lods
int3
popf
sbb
push
push
mov
andb
pop
popa
mov
mov
fs
fcmovu
int3
sbb
clc
idiv
pop
pushl
push
outsl
push
sub
out
jmp
cld
idiv
ds
mov
mov
jp
in
outsl
mov
hlt
pop
pusha
xor
pop
sub
add
scas
jmp
sbb
cmc
fdivr
fistpll
cmp
cmp
mov
call
xchg
lret
hlt
incl
std
hlt
loop
or
jns
mov
fsubr
out
inc
mov
sbbb
xchg
test
pop
add
fildll
xchg
xchg
cltd
mov
call
popf
pushf
lcall
std
add
jb
arpl
pop
mov
pusha
fdiv
loopne
iret
ficomps
movsb
outsl
add
sarl
xor
stc
out
push
mov
fucomi
jmp
repnz
push
sbb
mov
push
push
dec
dec
inc
mov
lods
loopne
mov
fcomp
shl
loope
repnz
in
xor
jae
mov
pop
mov
mov
fsub
jmp
and
xor
icebp
hlt
xor
mov
mov
out
ret
loopne
lock
out
in
pop
mov
pop
mov
mov
fldt
icebp
lock
lods
scas
mov
in
out
loope
repnz
jecxz
shlb
pop
clc
repz
mov
mov
ljmp
xor
adc
aad
add
pop
pop
inc
add
fwait
decl
and
xor
push
jne
js
add
aas
jge
add
dec
push
dec
mov
addb
inc
test
mov
insb
xchg
inc
mov
dec
insb
ss
int
dec
xchg
dec
xchg
dec
cltd
dec
pushf
push
int
mov
sahf
push
mov
push
test
insb
ss
push
stos
pop
lods
pop
mov
mov
fwait
int
mov
pop
mov
bound
ss
gs
push
int
iret
imul
loopne
in
jp
inc
lahf
add
xor
sub
jl
fnstcw
insb
test
xchg
xchg
mov
ss
int
lea
lea
nop
pop
xchg
pop
xchg
pop
lods
fldcw
pushf
or
int
shrl
mov
cmpsl
mov
ss
scas
mov
test
into
lea
shlb
sub
or
or
rol
aam
push
mov
or
fcmovne
or
fldcw
addr16
push
imul
popa
shll
insl
aam
xlat
jo
xlat
jno
lods
inc
mov
je
out
inc
sub
sbb
add
in
aam
imulb
jns
bnd
mov
cli
bnd
hlt
js
or
push
push
testl
sub
add
mov
mov
les
push
mov
mov
shrl
add
test
fwait
negl
xchg
outsb
xchg
push
sahf
clc
cmpsb
pop
lock
ss
lods
sti
mov
ss
shlb
fcmovnb
jle
sub
iret
into
rcll
out
cmp
aam
cmpsb
shl
pop
lods
adc
cs
es
les
int3
add
lock
inc
repnz
faddl
cmc
cmc
filds
div
les
add
cli
jecxz
cld
in
or
call
or
ret
mov
or
daa
es
pop
xchg
stos
pop
xor
sbb
pop
push
add
fdivrp
adc
popf
pop
je
js
add
xchg
xchg
pop
add
add
sub
inc
lods
jae
pop
adc
sub
negb
add
add
xor
and
in
mov
push
lea
jbe
add
add
and
pop
pop
or
or
dec
xor
pop
pop
or
push
inc
or
pop
aad
loopne
or
pop
or
mov
sbb
push
add
xchg
jg
pop
movsl
fwait
and
out
pop
insb
inc
mov
pop
push
aas
aad
clc
push
cs
lcall
aas
inc
mov
nop
fmuls
mov
or
jns
pop
lahf
jbe
push
add
or
push
mov
ss
das
dec
add
cmc
ljmp
bound
pop
push
mov
jae
add
jb
jae
dec
cmp
add
pop
push
push
push
push
arpl
push
fimull
lea
add
pop
and
jbe
pop
push
mov
jb
mov
sti
pop
and
sbb
and
pop
pop
fisttpl
dec
inc
cmp
jae
fwait
jnp
dec
push
daa
add
or
dec
jae
jne
cs
imul
sub
sbb
pop
jb
or
sbb
dec
mov
pop
sub
sbb
outsl
push
in
pop
in
sub
sub
jle
mov
xchg
data16
pop
inc
pop
pop
pop
and
sbb
mov
gs
inc
inc
pop
data16
pusha
jae
pop
sub
jg
ja
cmpsl
subb
outsl
mov
test
pop
sbb
inc
aas
outsl
jnp
jle
or
mov
or
inc
aas
incl
fldl
mov
popf
ja
pop
cmp
pop
jg
and
insl
xchg
ja
cmp
push
add
popf
ja
cmp
pop
insl
stc
inc
xor
xchg
xchg
xchg
cwtl
lcall
sbb
mov
add
dec
cmp
cltd
xchg
xchg
xchg
push
mov
das
push
nop
cwtl
std
mov
incl
jo
insl
insb
imul
addr16
push
inc
pop
cmp
pop
arpl
pop
push
inc
aaa
bound
add
pusha
pusha
pop
pop
push
aas
sub
sarb
pop
dec
cmp
xor
adc
pop
pop
pop
dec
xor
or
add
inc
mov
or
rorb
add
shr
aam
and
and
mov
fdivl
decl
loopne
pop
into
loop
outsb
lret
or
lea
fisubrs
push
add
pop
aaa
cmp
rcrb
and
jl
mov
mov
dec
push
or
or
pop
loop
insb
aaa
xor
aas
out
ret
ja
cmp
jb
fisubs
out
fwait
test
pop
inc
sub
or
ret
popa
sti
sti
cld
mov
or
mov
push
sahf
inc
rorl
pop
push
inc
pop
in
jbe
mov
dec
push
sti
cs
cmp
push
inc
mov
xor
in
pop
inc
mov
and
pop
xchg
jp
add
push
nop
jne
mov
pop
xor
stc
and
stc
add
addr16
push
inc
mov
outsl
fstpt
enter
and
mov
jge
fldcw
add
cs
sbb
jae
pop
mov
xchg
lret
test
loop
sub
fdivs
pushf
int3
add
mov
xor
rcrb
mov
enter
or
pusha
add
mov
and
pop
dec
mov
jo
jo
pusha
pop
xor
pop
push
cld
stos
test
or
iret
repnz
outsb
dec
arpl
lock
cwtl
pop
aas
dec
inc
fwait
ret
add
pop
ja
sti
aam
xchg
pop
in
shll
pop
dec
or
enter
xor
pop
mov
add
pop
mov
lds
sar
fs
stos
add
pop
mov
test
sub
mov
inc
add
pop
lahf
bound
mov
and
inc
out
push
pop
push
mov
xor
dec
inc
dec
jb
imul
inc
push
add
inc
lea
inc
xchg
dec
and
rcrb
test
cltd
xchg
push
ds
add
xchg
or
push
cltd
xor
imul
das
adc
mov
and
mov
or
addb
push
jo
imul
cmp
pop
addl
negb
and
push
xor
xor
xor
push
data16
xor
mov
xchg
cltd
cmpsl
sub
test
cmp
add
push
sub
sub
ja
roll
push
sub
jae
push
arpl
inc
sub
inc
xor
negb
je
and
fcmovne
out
xchg
mov
adc
push
dec
mov
adc
push
sbb
add
or
ss
xchg
or
adc
and
inc
mov
rorl
es
push
and
loopne
sub
cmp
push
and
shlb
jnp
das
xor
push
xor
add
fs
incl
dec
add
add
insl
push
add
imul
add
dec
add
cs
push
push
xchg
fdivl
pop
push
sbb
push
adc
or
jnp
rcrl
dec
add
dec
push
mov
add
pop
inc
push
ss
mov
push
out
pushw
pop
outsb
pop
imul
cmpsb
dec
or
inc
js
pop
jo
sub
add
fistps
data16
sbb
imul
xchg
sbb
push
xchg
xor
dec
push
cmp
pop
call
dec
and
loope
sbb
xor
xor
mov
into
movsb
cmpsb
jg
cmpsb
cmpl
aaa
lea
mov
je
outsb
add
push
or
push
fistpl
push
mov
or
adcb
gs
ss
fildll
adc
push
xchg
add
popf
and
jno
nop
add
sahf
mov
mov
add
pushl
lods
add
scas
add
mov
jbe
cmpsb
dec
xchg
push
push
mov
pop
mov
adc
fs
mov
rcll
js
xchg
push
insb
ret
push
jae
je
outsb
lcall
mov
icebp
mov
add
inc
test
add
mov
imul
cltd
ret
aam
daa
mov
dec
test
ds
int
push
sahf
mov
fisttpl
mov
push
xor
pushf
or
sti
es
lret
stos
into
add
push
stos
add
push
mov
mov
push
cmpsb
mov
mov
popa
lods
es
mov
lock
outsb
rcr
ret
fisubs
ret
jmp
push
in
mov
movb
lret
in
jnp
in
int
jg
es
test
xchg
outsb
mov
xchg
add
outsl
push
lods
mov
ret
add
mov
loope
into
roll
lds
les
fsubs
mov
jbe
fptan
add
xchg
mov
cltd
stc
mov
inc
fisttpl
fisttps
test
loopne
jbe
std
les
pushf
out
add
test
insl
test
ljmp
push
mov
lods
icebp
jle
dec
jnp
repz
mov
fxch
loop
roll
call
ss
out
les
ret
push
adc
int3
cld
outsb
aam
push
hlt
xchg
cld
cmc
out
add
xor
jbe
div
push
sti
repz
add
adc
jmp
test
out
xchg
pop
es
insl
popa
adc
std
xchg
xchg
nop
enter
iret
lock
stc
and
popa
stc
std
mov
stos
movsl
xchg
shl
and
stc
repnz
popa
xor
outsl
mov
ds
cltd
pop
jae
pop
pop
push
dec
mov
mov
mov
dec
xchg
mov
popa
dec
sti
arpl
cltd
xchg
xchg
rcrl
dec
cmp
add
popa
roll
test
cltd
xchg
ror
test
mov
shlb
mov
ja
pop
adc
pop
sbb
or
movsl
lcall
and
adc
sbb
add
popa
mov
mov
test
popl
lods
mov
pushf
data16
punpcklwd
lods
xor
mov
jo
push
xchg
call
lahf
scas
stos
gs
in
ret
stc
lcall
scas
lods
xor
mov
push
arpl
xchg
lcall
mov
mov
imul
test
lret
es
and
das
pop
or
imul
and
and
mov
xchg
jb
lods
pop
jo
add
ljmp
int
pusha
arpl
lahf
add
xor
pop
lahf
and
push
test
call
add
sbb
in
int
pusha
add
imul
outsl
add
inc
decb
jno
stc
inc
pusha
push
cltd
test
repnz
jbe
mov
test
imul
rcl
rcrb
inc
andb
mov
imul
cld
mull
mov
mov
addr16
inc
jbe
push
mov
lret
int3
int3
loop
in
in
in
call
lret
jecxz
into
ja
jns
push
fisubrs
popa
push
sar
jns
stos
pop
fucomi
in
out
in
jmp
mov
dec
jne
mov
jg
jp
xchg
push
pop
pop
pusha
push
les
jmp
jmp
cmpsb
dec
in
mov
mov
xor
in
mov
pop
pop
pop
jmp
in
pop
pop
jne
fsubrp
dec
dec
dec
pop
ja
pusha
lahf
dec
lods
mov
pop
pop
fninit
in
in
imul
add
lcall
xlat
movsb
dec
fld
mov
inc
jle
je
pusha
inc
cmp
imul
mov
insl
mov
mov
dec
mov
xlat
lcall
in
sti
mov
fcomps
dec
pop
mov
aaa
dec
aas
cmp
pop
pop
jecxz
xchg
fdivrs
hlt
pop
pop
loopne
daa
dec
addl
imul
or
pop
pop
in
not
inc
jbe
mov
test
mov
xor
out
call
mov
inc
inc
add
andb
mov
inc
and
out
pop
pop
pop
add
cli
or
cmp
inc
jbe
ja
and
daa
out
dec
ds
pop
add
cmp
inc
inc
push
pop
and
push
dec
or
xor
sub
and
or
xor
cmp
cmp
scas
addl
addl
or
adc
push
mov
add
movswl
sti
sti
lahf
and
adc
adc
add
fimull
and
push
mov
imul
push
mov
js
in
repnz
add
pusha
pop
mov
mov
sbb
imul
ja
das
mov
inc
mov
cmp
icebp
jg
adc
jg
incl
pop
call
xor
push
jg
jg
adc
test
lret
push
cmc
hlt
je
pusha
adc
inc
add
leave
add
jg
aaa
call
out
adc
adc
filds
add
push
dec
cmp
mov
mov
xchg
mov
in
loopne
in
in
aad
aaa
in
pop
into
into
sarb
xor
int3
mov
push
loopne
add
and
stos
mov
add
stc
addr16
das
inc
add
dec
fisttpl
fnstsw
add
test
daa
adc
lods
cmp
inc
push
inc
push
xor
dec
pop
imul
xor
sbb
cmp
xor
inc
outsl
out
sbb
mov
and
ret
xor
pop
jmp
std
sti
aas
pushl
pop
xor
inc
push
push
add
cmp
xor
aaa
jbe
xor
mov
pop
aas
lods
in
mov
jae
dec
xlat
jg
adc
mov
mov
xor
add
or
pop
jb
mov
jg
jnp
cmp
push
add
movsb
ja
xor
pop
jo
cmp
xchg
add
ja
adc
mov
cs
adc
lcall
adc
jnp,pn
fucomp
mov
add
gs
mov
adc
or
cwtl
pushf
adc
fucomp
ja
mov
add
xchg
pop
filds
das
adc
and
in
add
add
lahf
xchg
xchg
outsb
testl
sbb
and
xor
cmp
add
xor
es
les
push
inc
inc
aaa
jbe
adc
mov
int
adc
inc
dec
dec
add
dec
dec
push
dec
mov
pop
push
mov
push
dec
inc
add
pop
pop
clc
int
outsl
cs
pop
add
gs
add
insl
push
dec
dec
outsb
pop
jae
ss
dec
ds
insl
push
dec
je
dec
es
push
jp
add
add
add
push
add
push
and
or
dec
jl
sarl
cs
add
mov
mov
adc
nop
mov
jne
jl
push
lcall
jle
xchg
lahf
cwtl
add
mov
add
outsl
test
xchg
or
out
jle
add
mov
test
jle
lahf
outsl
pusha
popl
mov
cwtl
lea
lahf
xchg
add
add
cltd
add
decl
addb
lods
cmpsl
add
icebp
testb
mov
mov
mov
xchg
mov
mov
mov
mov
sarb
push
mov
mov
popf
sar
add
leave
lcall
into
int3
aad
lret
lods
iret
repnz
aas
mov
add
add
mov
ror
add
sbb
mov
in
insb
fistl
aam
dec
xlat
int3
xlat
jge
mov
push
xchg
ror
ror
add
ror
jbe
mov
push
fcom
push
rcl
rolb
dec
jl
stc
fcom
add
fxch
add
iret
fbstp
add
push
out
pop
loop
mov
fcmovu
xchg
aam
add
fld
push
xlat
push
std
fcomi
fists
add
fsubp
push
in
in
out
in
fwait
imulb
out
call
loopne
out
js
fidivl
lock
lock
lock
insl
mov
out
cld
jecxz
cli
jecxz
in
repnz
add
out
fldcw
cmc
sti
in
ss
fcompl
fsubrp
cs
jmp
outsb
stos
in
in
repnz
icebp
xlat
outsb
not
loopne
add
jmp
push
fucomip
jecxz
jnp
mov
push
jecxz
ss
insb
mov
call
in
call
mov
mul
outsb
mul
ds
loope
add
ljmp
imul
insl
hlt
out
push
stc
jmp
out
outsb
jmp
dec
cli
pop
insl
fcmovnu
idiv
call
scas
out
push
out
es
imul
jbe
loop
pop
cli
lock
outsb
outsl
adc
push
mov
mov
imul
push
repnz
push
cli
repz
fwait
in
imul
push
cmc
sti
ss
sti
idiv
jl
imul
push
push
jmp
mov
jo
out
out
repz
cmc
hlt
outsb
push
lock
push
std
hlt
push
cld
imulb
repnz
repz
div
stc
fadds
clc
fnstenv
push
push
push
cld
clc
ss
mov
stos
cs
cli
incl
cmc
stc
add
mull
data16
cli
cld
call
out
fstenv
cld
sti
push
push
clc
cld
sbb
testb
std
mov
jle
add
pop
add
loop
xchg
add
cmp
out
xlat
clc
incl
mov
out
std
pop
cmp
aad
jg
or
cli
xchg
mov
rol
lcall
or
adc
push
xchg
jmp
or
push
test
pop
mov
cmp
fcmovbe
lds
pop
or
jg
aas
fmuls
add
push
dec
xor
dec
dec
add
cmpsl
test
fldt
stc
jecxz
lret
sahf
xchg
cltd
add
xor
dec
roll
push
push
fs
mov
lret
frstor
lahf
out
pop
pop
xor
pop
push
lods
je
arpl
lcall
mov
leave
out
jecxz
loope
repnz
clc
jbe
jmp
lahf
fsubrs
jne
jns
in
fisubrs
in
daa
mov
repz
lock
pop
gs
int
mov
stos
scas
cld
aad
mov
ret
rcl
into
sar
scas
aaa
inc
jbe
icebp
gs
ja
shrb
jno
scas
stc
pushl
push
pop
pop
pop
pop
outsl
jo
jae
pushl
sar
lcall
or
push
inc
inc
inc
inc
inc
inc
ds
mov
inc
inc
push
pop
or
xor
test
xor
sbb
adc
idiv
mov
sbb
cld
pop
pushf
mov
sbb
ljmp
jg
add
icebp
dec
sbb
sbb
sbb
sar
inc
sub
sahf
xor
push
shrb
fisubrs
jns
mov
jns
dec
xor
xor
jb
adc
in
sti
and
je
je
stos
lods
add
shl
sbb
dec
jp
xor
mov
cmp
sub
sub
es
outsb
mov
pop
in
pop
pop
xor
mov
outsb
sub
and
dec
pop
out
div
dec
bound
cmp
cmp
pop
daa
pop
sub
cltd
mov
in
es
das
bound
xor
sti
and
jnp
stos
test
push
xor
leave
incl
push
push
push
fs
push
and
mov
aas
push
std
xor
addl
jge
adc
add
sti
adc
xchg
popa
outsb
jne
pusha
pop
call
jle
mov
add
pop
ret
jge
testl
mov
lods
jbe
fdivr
lea
lcall
dec
sub
dec
ljmp
and
jl
push
movups
pop
pushf
add
inc
in
push
pop
push
pop
adc
pop
repz
xchg
pop
pop
adc
cmp
and
ss
mov
pop
cmp
add
insb
mov
adc
or
sbb
add
mov
cmp
add
inc
pop
push
mov
mov
test
or
iret
sbb
es
xor
add
pop
add
pushl
mov
add
je
insl
xchg
add
incl
mov
mov
add
fcmovu
add
out
add
repnz
xor
inc
jle
lret
data16
push
push
pusha
add
adc
sti
sub
xor
xor
cltd
cmpl
cltd
sbbb
mov
aas
dec
cmp
ret
sbb
cmp
push
out
loope
push
orb
push
adc
push
in
adc
push
mov
jmp
pop
clc
push
cmc
push
outsl
mov
cs
sbb
cld
cli
out
rcrb
xchg
mov
cmp
sbb
lret
stc
jg
xchg
mov
into
test
in
xchg
popa
popf
lds
and
sbb
fldenv
sbb
subb
pusha
popa
adc
push
scas
xor
nop
int3
pop
es
adc
daa
lahf
dec
stos
test
or
and
shrb
bound
mov
mov
mov
xor
stc
mov
data16
inc
add
ret
pop
jge
xchg
mov
cs
into
rorw
rcrl
leave
mov
or
jns
mov
add
or
pop
enter
int
or
and
pop
out
dec
pop
neg
xchg
push
cmp
add
mov
jg
jae
sbb
decl
adc
add
sbb
sbb
add
push
pop
pop
addl
and
sbb
subl
ret
sub
or
outsb
fdivp
bound
das
add
sub
das
sub
xor
cs
fucomi
imul
xor
cs
and
push
xor
fwait
pushl
add
xor
cmp
cmp
inc
xor
push
xor
jbe
outsl
cmp
cmp
xor
cmp
outsl
jg
mov
je
dec
dec
add
add
add
outsb
insl
add
insb
inc
jns
jae
lcall
push
imul
add
jnp
popa
ja
add
arpl
clc
test
jbe
ja
jb
jns
divl
jle
xchg
addl
xchg
xchg
insb
jg
out
movsb
mov
add
bound
sahf
out
ja
xorb
shl
add
hlt
lods
stc
mov
js
lea
add
sahf
mov
xchg
fs
xchg
xchg
xchg
add
sti
fwait
cld
add
lcall
outsb
ss
pop
push
mov
push
test
rclb
mov
pop
sar
push
mov
movsl
cmpsl
movsb
test
mov
cmpsl
lods
push
test
test
fisttpl
adc
scas
stos
stos
push
scas
lods
scas
lods
push
mov
fcmovnbe
ss
mov
mov
scas
mov
mov
mov
mov
mov
mov
shlb
fwait
mov
mov
mov
add
inc
mov
push
mov
mov
aam
mov
mov
mov
mov
mov
ret
mov
leave
add
mov
xor
enter
stos
lret
leave
aam
shrl
repnz
jno
test
lds
push
fbstp
enterw
pop
leave
lret
insl
xchg
into
push
int3
lret
into
push
push
into
rcll
xchg
push
repnz
push
jecxz
mov
roll
rcl
aam
jbe
fistps
aad
add
xor
xlat
aad
aam
fsubrs
or
jnp
fsts
fcom
xlat
ss
testl
pop
fistl
sti
sahf
out
push
pop
fcmovu
dec
fcom
push
push
push
insl
repz
xor
push
fdivl
cmpb
fstl
fisttpll
adc
and
jbe
push
faddl
jmp
pop
push
dec
mov
fiaddl
push
fiaddl
fmull
mov
lret
push
fsubp
filds
loopne
jecxz
bound
dec
jae
loope
in
es
jbe
test
dec
lret
push
sti
sti
add
sti
push
out
mov
loop
loope
in
out
mov
std
scas
out
push
in
out
call
mov
jmp
out
jmp
cs
dec
push
in
jmp
jmp
insb
push
in
jmp
push
mov
jecxz
push
add
out
push
jmp
lock
in
cmpsb
push
loopne
or
div
cmc
add
stc
repz
hlt
push
push
push
cmc
sti
clc
add
std
cli
inc
jb
adc
cld
stc
pop
fs
and
add
push
addr16
pusha
daa
xchg
je
push
popa
pushf
mov
outsl
xor
and
cmpsb
pushf
mov
mov
dec
dec
mov
lods
stos
lods
lahf
stos
test
popaw
incl
mov
shlb
mov
mov
mov
data16
sbb
mov
scas
jge
out
xchg
push
popa
mov
ss
mov
mov
mov
mov
mov
mov
mov
dec
dec
mov
pop
popf
lea
xchg
mov
out
mov
imul
inc
inc
inc
in
outsl
aaa
cltd
fidivl
mov
mov
jns
push
jo
arpl
sarb
ret
mov
int
mov
pop
lods
mov
mov
fisubrl
les
mov
hlt
in
pop
push
enter
mov
stc
pushl
mov
mov
mov
cmpl
cmp
inc
pusha
out
mov
and
ss
fwait
cwtl
pop
mov
nop
mov
ret
mov
cmp
pop
sbb
je
in
dec
mov
mov
in
mov
sbb
lods
mov
xchg
in
ret
in
mov
das
fdivrs
jbe
mov
mov
ret
into
ss
add
addb
xchg
mov
ret
ja
ret
aaa
imul
roll
aaa
shll
loopne
add
les
mov
jle
mov
insl
push
or
leave
mov
incb
ret
and
mov
add
sub
ljmp
jl
enter
mov
cltd
cltd
jb
les
add
js
mov
jle
mov
cld
pop
fchs
or
lahf
je
les
add
pop
sub
pusha
in
mov
inc
mov
leave
pop
lods
xchg
out
shll
mov
js
mov
into
mov
lds
in
or
adc
lcall
idivb
mov
push
mov
or
fs
ja
mov
outsb
mov
adc
test
mov
jle
jns
push
push
mov
mov
adc
mov
loopne
ds
in
leave
rcr
sbb
mov
mov
adc
mov
add
mov
cli
adc
push
ret
inc
jo
sbb
fidivs
divb
les
push
push
loopne
inc
cmpsb
insb
dec
mov
rclb
mov
pop
shr
cmc
decl
push
repz
jecxz
loop
fisubrs
jg
fsub
fcompp
fst
aad
and
out
pop
mov
mov
mov
sarb
outsl
mov
push
call
out
add
fwait
xchg
inc
or
lock
scas
mulb
jmp
lock
stc
loope
mov
lcall
fdivrs
lret
xchg
xchg
mov
pop
pop
pop
imul
bound
pop
imul
hlt
cld
sti
into
loopne
lcall
adc
xor
call
or
pop
cmpb
inc
sbb
dec
jg
jg
aam
mov
dec
lret
fs
sub
dec
das
add
add
lcall
dec
add
add
push
shrb
cmpsb
out
add
mov
jnp
add
dec
bound
pop
push
ss
orb
outsl
mov
mov
lret
push
adc
cld
cld
mov
into
mov
stos
imul
and
mov
xor
push
sub
mov
sbb
xor
xor
aas
sub
adc
and
repnz
mov
stc
jmp
sbb
adc
sub
or
setg
pop
or
or
cmpsb
sarb
jae
je
hlt
xor
pop
dec
dec
add
outsb
ljmp
pusha
jle
pusha
add
insb
jae
adc
adc
sbb
xor
jae
jg
pushw
sbb
sub
test
xchg
and
push
lcall
xor
mov
ret
rcr
cmpsl
test
push
inc
push
shll
aaa
lahf
cmpsb
inc
aam
dec
pushl
add
and
jns
lret
fs
inc
and
and
add
xor
mov
inc
push
ds
rolb
jl
les
dec
decb
pop
xor
inc
push
jecxz
mov
xchg
pop
sbb
xor
pusha
in
add
mov
mov
fistpl
mov
call
ss
push
ret
add
shlb
push
sub
in
inc
aam
dec
in
ss
outsb
mov
dec
xchg
adc
sub
push
push
dec
xor
dec
dec
push
push
pop
jle
movsl
pop
add
pop
dec
xor
inc
dec
dec
dec
push
push
mov
xor
ffreep
or
add
jge
push
inc
pop
push
dec
pusha
inc
bound
sbb
cld
rcrb
sbb
es
or
in
sub
xor
push
sbb
enter
lods
and
pusha
pop
sub
fildl
mov
popa
pop
sbb
sbb
roll
pop
pop
push
es
dec
pop
cltd
std
jle
sbb
and
popa
inc
in
or
dec
pop
pop
sbb
rcrb
insl
insl
popa
pop
or
rcll
mov
and
sub
inc
xor
and
mov
sbb
pusha
add
fisubrs
xor
inc
popa
add
fstl
pop
roll
add
sub
push
shlb
sub
cltd
sbb
sub
add
shrl
pop
or
and
and
fs
sbb
shlb
and
orl
in
cltd
imul
mov
or
and
jnp
repnz
dec
add
mov
arpl
dec
inc
inc
pop
push
popa
push
xchg
iret
nop
dec
bound
and
outsl
mov
test
adc
push
pop
rorb
add
mov
lods
les
arpl
mov
pop
pusha
ret
out
addl
mov
popa
les
sub
pop
push
pop
dec
pop
sub
mov
fistpl
dec
adc
adc
pop
popa
push
or
sbb
sbb
sbb
sbb
fmull
in
sbb
inc
pop
push
pop
icebp
lock
pusha
or
pop
and
sbb
sbb
dec
pop
pusha
add
xchg
jle
adc
cmp
inc
cmp
xor
or
stos
cwtl
sbb
bound
push
adc
push
fstpt
cmp
adc
or
sbb
test
out
mov
dec
lock
xor
popa
dec
add
fwait
push
popa
es
in
dec
pop
add
mov
sti
popa
push
pop
add
rolb
jno
sbb
adc
jecxz
mov
adc
and
inc
and
add
mov
sbb
xchg
pop
cld
inc
inc
push
dec
inc
inc
and
dec
and
push
dec
push
push
add
incl
test
add
rclb
inc
push
add
aad
mov
adc
in
call
mov
xor
int
icebp
add
or
push
and
test
outsl
fcmovnu
mov
jo
add
xchg
mov
orl
sub
addl
rclb
test
or
test
fs
and
test
lsl
clc
lea
clc
push
lea
jo
popa
fdivl
mov
push
clc
test
and
push
add
push
or
test
push
cwtl
mov
sbb
test
test
add
es
ds
inc
int
or
ljmp
pop
cld
testb
push
inc
add
inc
test
or
pusha
lock
adc
sub
jne
add
or
in
orb
adc
add
sbb
adc
cmpsl
test
addb
loopne
lcall
es
clc
adc
dec
stos
push
nopl
inc
mov
push
fstpt
dec
push
call
clc
rcl
test
rolb
push
mov
add
pop
mov
add
xchg
test
xor
cltd
addb
clc
jne
push
push
test
add
call
in
mov
add
jle
inc
adc
push
xor
or
pusha
xor
inc
adc
cltd
push
movsb
push
adc
or
pop
clc
mov
outsb
incl
ud0
cmpsb
lods
inc
in
test
adc
push
or
xor
shlb
or
or
les
xor
or
cmpl
add
jne
push
aaa
cwtl
or
sar
inc
clc
add
rcr
dec
inc
inc
inc
mov
xchg
test
test
add
mov
add
inc
mov
call
dec
dec
push
inc
call
xor
mov
test
jne
or
add
ss
and
lods
xor
add
je
add
mov
dec
je
mov
call
push
add
cmpsb
push
xor
cmp
test
add
test
or
faddl
jbe
xor
or
push
popa
push
xor
addb
ret
or
mov
add
inc
and
mov
movsb
push
mov
fisttpl
fs
adc
adc
add
sub
mov
cld
pushf
in
push
xor
mov
push
mov
roll
rcpps
sub
push
push
and
adc
mov
es
je
lcall
fldt
jmp
push
sti
iret
out
out
push
push
cli
out
insl
and
insb
push
out
std
out
dec
out
out
outsb
dec
pusha
mov
out
fdivr
into
push
dec
int
insl
imull
out
es
ljmp
ljmp
sahf
cltd
fidivrs
push
cld
xchg
out
push
mov
sti
std
out
out
aaa
cmp
ja
cli
cld
xchg
fnsave
jnp
jmp
out
cmpsb
outsl
push
push
cli
fdivrp
cli
into
into
out
push
sti
ljmp
jbe
pop
out
in
push
out
aaa
cs
cmp
iret
outsb
data16
mov
sti
out
sbb
imul
ss
push
rcrb
pop
incl
jnp
in
cs
jmp
outsl
push
int3
dec
out
out
mov
cli
mov
stc
sahf
negl
out
ja
out
iret
loope
mov
pop
adc
mov
fdivl
fiadds
xor
xlat
mov
pxor
mov
fildll
xchg
jle
push
push
jo
inc
xchg
out
ljmp
in
scas
jmp
scas
iret
aas
pushf
push
mov
in
inc
cli
sbb
into
scas
fistpll
fnsave
es
out
cli
jle
loopne
orb
cli
int
int
ret
mov
das
outsb
ljmp
int3
mov
inc
cld
into
outsb
sub
cmp
cld
xchg
mov
fildll
imull
pop
jg
scas
push
jg
loope
mov
pop
outsb
ljmp
outsb
push
call
dec
call
data16
in
dec
frstor
daa
es
cli
lcall
ja
cli
mov
push
inc
dec
aas
imul
outsb
loope
inc
scas
into
push
push
cmp
int
int
jbe
cmp
out
adc
iret
add
jae
scas
mov
test
pop
sbbl
out
paddusb
mov
loope
into
ss
scas
jl
xorl
out
pmaxsw
lahf
out
push
pop
cmpsl
ja
push
jmp
cmpsl
pop
cmp
pop
testb
call
mov
cs
jnp
ja
outsb
into
dec
inc
out
mov
mov
into
fnsave
loopne
dec
ja
sahf
pop
je
jmp
push
add
ja
jg
incl
add
xchg
test
mov
sub
shlb
loope
xor
dec
incl
cmpl
sti
pop
int
pop
sbb
jbe
mov
in
les
std
arpl
sub
gs
dec
fmull
movl
mov
mov
loope
cmp
out
and
cmp
jge
add
xchg
scas
mov
pop
push
js
pop
mov
into
mov
jecxz
in
ljmp
mov
mov
cwtl
jae
push
sub
sub
and
aaa
push
imul
std
pushl
mov
mov
mov
shl
add
xchg
ljmp
mov
sbb
mov
stc
mov
jp
loop
cld
out
in
dec
lcall
inc
les
hlt
inc
cmp
in
xchg
mov
ficoml
mov
adc
adc
ljmp
movsl
leave
sbb
loopne
xchg
jp
loope
pop
fisubrs
sub
ljmp
xor
mov
ret
repnz
decl
xor
inc
pop
mov
iret
cmp
in
jecxz
fdivrp
test
inc
loope
pop
and
stc
movb
jg
mov
adc
jb
or
lcall
xchg
ds
decl
popa
push
mov
jge
push
ss
dec
data16
stos
mov
push
fisubl
pushl
lcall
adc
mov
or
aaa
dec
dec
decl
imul
bnd
lcall
insb
sub
xchg
pop
xchg
dec
dec
pop
out
aam
mov
xor
nop
out
stos
ret
call
mov
gs
sbb
lret
inc
jg
loopne
pop
fs
icebp
insb
pusha
jecxz
lret
mov
dec
pushf
mov
dec
repz
and
or
cwtl
or
mov
xchg
xchg
push
lcall
call
in
aad
cmp
mov
cs
lcall
lods
sub
mov
xlat
pop
int3
test
cmp
mulb
popa
imul
insb
sbb
out
cltd
add
push
test
fldenv
lcall
in
push
inc
xor
mov
in
and
pfadd
or
mov
ljmp
les
outsb
scas
shll
dec
ljmp
imul
jo
rcr
jns
leave
inc
shrl
or
sahf
push
decl
repnz
jnp
pop
pop
mov
jl
into
icebp
xchg
push
dec
inc
ffree
fbld
jno
pop
lds
out
push
sub
stos
add
shrb
lret
sbb
insb
and
cmp
popa
dec
les
shll
jle
popf
push
scas
jae
cltd
xchg
lcall
daa
xchg
mov
call
inc
push
pushf
mov
cmp
jno
add
sti
insb
push
mov
shrb
cmp
inc
mov
divl
jne
xor
pop
or
or
xchg
fs
aas
inc
sub
movsl
jmp
clc
out
jle
outsl
mov
pop
dec
test
arpl
pop
xchg
test
and
cmc
popf
and
call
adc
mov
data16
jecxz
inc
loope
cmp
push
jmp
out
js
test
jns
mov
popf
inc
push
shlb
mov
data16
nop
leave
or
sub
nop
push
or
decl
sub
xchg
and
dec
pop
daa
xchg
insl
push
idivb
sbb
cld
push
push
cmp
pusha
jg
sbb
leave
xchg
adc
jne
sub
bound
rorl
into
pushl
sub
inc
adc
mov
mov
xor
adc
push
mov
jmp
ljmp
adc
jno
mov
test
iret
sub
int
adc
dec
jp
pop
push
pusha
inc
pop
icebp
jge,pn
mov
test
cmp
inc
lret
std
mov
ljmp
jg
jg
add
mov
in
jo
dec
loopne
xorb
xchg
shrb
push
mov
call
movsl
les
pop
or
adc
repnz
test
out
or
xor
movsl
dec
sub
sarb
mov
call
and
aam
out
jg
cmpb
iret
lods
lret
dec
shll
mov
ds
jbe
push
loop
mov
jg
mov
outsb
adc
jb
or
imul
daa
imul
ljmp
dec
movsb
sub
mov
sub
xor
mov
mov
lea
cmc
call
enter
addl
push
sbb
cli
mov
add
rorb
cld
call
cmp
data16
lds
dec
je
daa
or
and
out
incl
call
sbb
dec
mov
push
or
jo
xor
xor
mov
jae
das
and
scas
lahf
add
mov
push
add
in
incl
addb
popa
outsb
arpl
inc
gs
or
popa
imul
push
gs
divb
jae
xor
gs
outsl
fs
gs
inc
or
pushl
push
jb
push
jae
jb
gs
je
std
sti
lods
std
inc
jbe
outsb
je
sbb
arpl
imul
mov
imul
push
xchg
inc
imul
jo
jnp
jge
inc
outsb
repnz
outsb
insl
pop
push
subb
jae
in
adc
mov
jnp
shr
push
imul
push
pushaw
inc
and
cmp
bound
divl
add
and
jns
push
out
sarb
sti
inc
sbb
dec
outsb
outsw
xor
cltd
je
jo
xor
imul
mov
rolb
inc
mov
movsb
cmp
or
dec
jns
xor
xchg
jns
cltd
mov
jle
notl
jle
popa
gs
inc
cmpb
inc
in
popa
shrb
mov
push
outsb
insb
outsl
popa
fs
pusha
cmpl
gs
imul
outsl
sbb
js
cs
imul
jp
mov
fdivrs
inc
in
push
bound
imul
mov
jo
inc
push
inc
fs
xor
sbb
jae
inc
pop
insl
mov
jo
bound
jne
inc
push
mov
jae
ds
pop
inc
inc
arpl
mov
add
push
inc
xor
test
inc
dec
test
or
add
cmp
cmp
add
and
imul
pop
add
pop
xor
or
add
mov
mov
cmp
or
pop
mov
fdivs
mov
and
xor
pop
jp
in
fndisi(8087
sub
scas
add
jb
push
push
inc
add
imul
and
pop
add
xchg
or
or
int
jnp
movsl
inc
inc
out
add
inc
add
xor
and
pusha
pop
inc
sub
mov
add
out
in
fsts
dec
pop
add
mov
popf
mull
gs
jnp
lahf
shr
in
enter
xchg
add
mov
or
jae
dec
pop
pusha
dec
xor
sbb
xchg
and
stos
push
or
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
nop
pop
add
rolb
add
adc
add
add
daa
add
add
add
add
mov
add
add
add
orb
add
add
orb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
addb
add
xor
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
clc
add
cmp
add
and
cmp
add
dec
add
cmp
add
jo
add
cwtl
add
cmp
add
rolb
stc
add
add
add
cmp
add
adc
add
cmp
add
pusha
add
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
push
add
js
add
mov
add
add
push
add
lock
add
sbb
add
inc
pop
add
push
add
add
add
add
push
add
or
add
jae
add
add
add
add
add
add
add
je
add
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
xchg
add
mov
add
or
add
add
pop
xchg
add
mov
add
or
add
xchg
add
mov
add
or
add
cwtl
add
mov
add
or
add
add
add
cltd
add
call
add
add
add
add
add
add
movsb
add
mov
add
or
add
add
add
add
mov
add
or
add
add
call
or
add
add
add
add
add
add
shlb
add
or
add
mov
add
or
add
add
add
lret
call
add
add
add
add
add
add
aad
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
or
add
out
add
mov
add
or
add
lock
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
mov
add
or
add
add
mov
add
call
add
add
add
add
add
cwtl
or
call
add
add
add
add
adc
add
or
add
add
add
mov
add
or
add
add
add
call
add
add
add
add
push
add
js
add
sub
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
sub
add
mov
add
or
add
cmp
rolb
add
or
add
cmp
call
add
add
add
add
push
add
push
or
add
add
add
add
add
pop
add
push
push
add
sub
add
or
add
pop
add
js
add
call
add
add
add
add
add
pusha
imul
add
add
or
add
je
add
or
add
add
add
add
add
add
add
add
add
pop
add
push
enter
add
add
add
add
add
add
pop
add
add
add
or
add
or
add
add
in
add
add
add
add
add
add
or
addb
add
or
add
add
cld
test
dec
or
add
jg
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
and
inc
add
insb
add
add
add
outsl
add
outsb
add
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
insb
add
imul
pop
add
popa
add
add
add
push
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jbe
add
add
outsl
add
add
add
add
arpl
jne
jo
and
dec
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
outsb
add
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jb
outsb
add
add
jb
jns
popa
add
and
dec
add
outsb
add
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
int3
add
mov
add
add
lret
add
sbb
add
loopne
add
daa
int3
add
call
add
add
add
lock
add
inc
int3
add
clc
lret
add
dec
int3
add
pop
int3
add
push
add
jp
add
mov
add
xchg
int3
add
add
add
movsb
int3
add
add
add
mov
add
add
int3
add
add
add
fmulp
add
add
add
out
int3
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
popa
addr16
insb
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
popa
addr16
outsb
insb
outsl
popa
add
add
jb
jne
jb
push
popa
insb
jne
push
add
push
imul
jns
jb
jae
