adc
icebp
daa
sarl
or
pop
dec
add
cltd
sbb
xchg
jge
shrb
cmp
xor
dec
sbbl
ret
fsubl
inc
ret
mov
not
out
repz
out
bound
cmpsl
lcall
lret
mov
jbe
adc
add
pop
mov
mov
add
test
mov
jmp
add
pop
repz
add
lds
jp
rcll
fucom
add
add
add
nop
js
jp
add
loopne
arpl
add
mov
add
and
inc
lea
dec
add
push
add
add
pushf
jge
je
add
lcall
add
add
jmp
add
jb
mov
scas
sub
sub
loope
mov
pop
add
mov
add
sbb
shlb
inc
cmpsb
jae
in
pop
mov
out
add
dec
mov
mov
mov
or
adc
outsb
add
inc
add
lret
push
add
ret
lea
mov
dec
inc
pop
ds
pop
inc
add
in
and
ret
rolb
sub
push
push
clc
pop
roll
pop
mov
mov
add
cmp
inc
fdivrl
rolb
push
mov
cltd
enter
mov
popl
add
xchg
loope
adc
ljmp
add
sub
xor
add
push
jnp
add
mov
push
shrb
adc
dec
or
mov
mov
pop
mov
dec
int3
shrl
mov
cld
inc
jb
jnp,pn
inc
add
push
xor
mov
out
add
or
sbb
jbe
adc
daa
test
mov
rol
jmp
fistpl
and
testb
in
adc
loop
add
sub
rcrb
test
in
sub
add
xchg
mov
add
repnz
add
jnp
les
andl
jl
stc
lock
ficompl
xchg
ret
es
pushf
std
test
addr16
incb
sahf
mov
stc
stos
xchg
push
jmp
mov
int
clc
push
sbbl
pop
in
sbb
loopne
shlb
and
adc
out
jns
jb
add
div
pop
repnz
or
adc
sbb
cwtl
and
dec
push
enter
scas
push
xchg
out
int3
inc
push
xlat
lock
lods
aaa
add
xor
imul
sbb
scas
mov
add
dec
push
add
add
add
jecxz
add
aaa
cmc
div
xor
int3
adc
inc
dec
inc
mov
cmpb
je
cmp
je
xor
inc
dec
add
ror
loop
push
push
push
push
call
push
call
push
push
push
push
call
call
push
call
ret
mov
pusha
xor
fcomi
xchg
add
ror
mov
add
inc
xor
cmp
je
test
add
mov
ror
popa
loop
lea
xor
sub
or
jne
lea
sub
cmp
jne
add
add
add
adc
add
add
mov
add
rolb
add
call
add
add
add
sbbb
add
sbb
add
xor
add
dec
add
sbbb
add
add
js
add
nop
add
sbbb
add
test
add
rolb
andb
add
fadds
add
lock
andb
add
or
add
and
add
cmp
add
push
add
andb
add
push
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
addb
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
loopne
add
add
add
add
add
xor
add
lock
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
cmp
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
xor
add
pusha
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
sbb
add
rolb
add
add
add
add
add
add
adc
add
rolb
add
test
add
in
add
add
add
mov
add
test
add
in
add
add
add
xor
add
and
add
in
add
add
add
push
aas
add
push
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
loopne
add
in
add
add
add
add
add
sbb
add
add
add
add
add
jle
add
sbb
add
add
add
add
add
fwait
add
loopne
add
in
add
add
add
mov
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
loopne
add
in
add
add
add
inc
sgdtl
loopne
add
in
add
add
add
and
add
sbb
add
add
add
add
add
dec
add
loopne
add
in
add
add
add
loopne
add
loopne
add
in
add
add
add
rolb
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
loopne
add
in
add
add
add
inc
testb
loopne
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
std
sti
add
mov
add
movsl
dec
add
roll
xchg
xchg
xchg
add
int3
lods
add
add
xchg
imul
mov
add
add
add
add
mov
add
arpl
add
jecxz
add
add
add
add
call
add
in
in
add
int
add
pop
ret
add
into
add
add
add
ret
cltd
add
cmp
add
add
xchg
add
fdivrs
incl
repz
jmp
pop
add
aam
add
fwait
add
push
incl
rol
add
rorb
add
incl
aaa
xchg
add
outsl
push
add
jecxz
add
sub
adc
incl
xor
cmpsb
cmpsb
add
sti
add
in
add
lods
xchg
add
rolb
add
inc
or
aam
incb
out
add
mov
fiadds
and
incb
jbe
jbe
pop
mov
add
mov
adc
fcmovnb
pusha
add
mov
add
add
add
add
add
lret
jne
fld
pop
add
mov
arpl
xchg
add
fcmovnu
add
aad
add
mov
pop
add
rolb
sbb
out
add
roll
mov
add
add
add
add
les
lods
mov
lret
ljmp
add
xchg
loop
int
and
add
addl
in
mov
add
pop
out
outsb
mov
add
leave
leave
add
aad
add
stos
sbb
add
aaa
faddl
cld
cli
repz
jge
add
mov
add
add
add
int3
ja
cli
imul
add
das
mov
add
mov
fildl
sbb
add
into
pushf
add
icebp
in
call
les
add
andl
sti
clc
out
add
leave
mov
add
leave
jnp
mov
mov
add
lods
push
add
sti
add
scas
sub
cmpl
mov
int3
add
mov
flds
les
lods
add
jno
add
ljmp
adc
add
pop
add
jp
add
iret
addb
push
testb
ret
popa
add
enter
lahf
or
leave
movsl
adc
mov
xor
sarb
incl
push
pop
incl
or
mov
incl
xchg
incl
mov
ja
add
add
incl
test
fbstp
add
and
add
mov
add
sub
rolb
movsl
incl
mov
incl
fiaddl
cmpsb
andb
xchg
sahf
incb
cltd
test
add
adc
add
incl
mov
xchg
movsb
add
mov
add
in
add
test
add
mov
add
dec
sub
lret
lods
inc
add
inc
ret
lahf
iret
add
add
incl
mov
clc
add
sbb
add
lret
pop
mov
add
div
add
stc
clc
add
stos
jmp
add
out
add
mov
add
shrb
gs
add
jne
jp
loopne
imul
bound
adc
out
inc
outsb
xor
iret
scas
sub
or
add
mov
add
xchg
add
fcomps
add
mov
add
les
cmp
lock
movsl
sbb
movsl
and
enter
into
mov
in
add
ret
mov
addb
incl
add
add
decl
or
decl
or
std
std
js
or
decl
or
push
push
push
push
jnp
std
inc
or
decl
pop
sub
test
push
std
std
dec
mov
or
lcall
mov
mov
mov
mov
mov
test
std
dec
mov
std
lea
pop
lcall
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
std
dec
mov
std
std
std
lea
sub
lcall
push
push
push
push
push
push
push
push
push
push
push
hlt
std
std
dec
mov
std
std
std
std
std
std
or
lcall
and
and
and
mov
std
std
std
std
std
std
std
std
or
incl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
std
std
dec
mov
std
std
std
pop
movsb
pop
pop
std
std
std
or
incl
jg
jg
jg
jg
jg
jg
std
std
dec
mov
std
std
movsb
das
adc
das
pop
std
std
std
std
inc
inc
repz
std
std
dec
mov
std
std
pop
das
stc
stc
adc
std
std
std
std
inc
inc
add
add
add
add
add
add
dec
std
std
dec
mov
std
std
pop
or
and
std
std
std
std
inc
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
std
std
jg
std
std
std
pop
or
and
std
std
std
push
in
in
in
in
in
in
in
in
in
in
in
in
push
std
std
jecxz
std
std
std
das
add
push
jno
std
std
std
push
push
push
push
stos
mov
add
std
std
std
std
push
jae
jae
jae
jae
jae
jae
adc
std
das
add
std
std
std
std
push
stos
mov
mov
mov
movsb
std
std
jno
push
push
out
test
std
std
std
push
and
fcomps
or
stos
hlt
add
add
hlt
adc
push
mov
cmp
or
hlt
sub
mov
mov
leave
mov
cmp
add
mov
jl
add
leave
leave
ds
std
std
std
cmp
fcom
test
std
std
push
push
jl
incb
mov
adc
std
std
insb
cmp
jmp
sub
mov
xchg
dec
pop
lock
gs
jbe
add
shrb
adc
std
shlb
jmp
repz
std
std
std
pop
jno
adc
jbe
add
add
jmp
repz
std
std
std
std
pop
jno
adc
jne
jne
jne
shrl
jmp
repz
std
std
std
std
pop
jno
cmp
mov
jmp
repz
std
std
std
std
test
mov
mov
jmp
repz
jnp
test
and
pop
pop
pop
jmp
repz
jbe
xor
jmp
mov
mov
decl
push
incl
pop
jmp
add
incl
add
jg
add
pop
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
addb
jmp
add
clc
add
incb
add
incl
jae
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
sbb
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
andb
lcall
lcall
pusha
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
mov
jnp
mov
mov
call
shlb
xchg
xor
mov
push
cltd
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
pop
xchg
outsl
add
repnz
and
int
pop
jmp
int
jmp
roll
jmp
aam
jmp
xlat
nop
jmp
xlat
nop
fadd
jb
mov
add
movsb
jnp
repnz
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
xor
add
xor
add
add
in
mov
inc
test
fadd
jae
jecxz
jg
jecxz
jg
jecxz
jg
jecxz
jg
jecxz
jg
in
test
out
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
fmulp
cmp
lods
test
lcall
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
jp
int3
lods
xchg
mov
shlb
iret
jns
loop
jns
loop
jns
loop
jns
loop
jns
loop
jns
loop
jns
loop
jns
jecxz
jle
out
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
rorl
ljmp
jbe
mov
aas
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
mov
jmp
int3
jae
loope
jae
loope
jae
loope
jae
loope
jae
loope
jae
loope
jae
loope
jae
loope
jae
loope
jae
loope
jae
loop
jp
out
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
rorl
pushl
jl
int3
je
add
add
xor
add
xor
add
xor
add
xor
add
sub
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
jmp
int
jmp
xlat
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
call
mov
sbb
mov
arpl
jb
add
xor
add
xor
add
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
lret
jo
out
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
call
mov
das
ljmp
imul
add
add
scas
mov
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
ffree
pop
imul
xlat
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
call
xlat
xchg
jmp
xlat
xchg
jmp
xlat
xchg
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
fld
jb
mov
addl
mov
add
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fadd
push
fmulp
jmpw
xlat
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
xchg
jmp
xlat
cltd
xchg
xchg
jmp
xlat
cltd
call
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
pushl
mov
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
fcmovb
push
ffree
popa
jmp
xlat
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
xchg
jmp
xlat
sahf
call
lcall
into
pushf
call
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
pushl
lea
fnstcw
dec
fnstcw
dec
fnstcw
dec
fnstcw
dec
fnstcw
dec
fnstcw
pop
jmp
xlat
nop
jmp
xlat
nop
jmp
int3
jb
iret
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
call
movsb
dec
mov
mov
call
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
pushl
add
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
outsl
jmp
xlat
nop
jmp
xlat
nop
fadd
pop
dec
lods
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
call
aad
inc
mov
inc
mov
call
lret
test
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
pushl
xchg
add
call
mov
cmp
xlat
mov
cmp
xlat
mov
cmp
xlat
mov
cmp
xlat
mov
cmp
xlat
mov
xchg
out
nop
jmp
xlat
nop
call
mov
add
out
nop
jmp
xlat
nop
jmp
xlat
nop
call
aam
mov
lods
lods
call
lods
ljmp
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
pushl
xchg
add
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
fcmovnb
push
call
xlat
xchg
jmp
xlat
nop
call
mov
call
mov
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
call
aam
ljmp
mov
mov
ljmp
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
mov
xchg
add
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
out
jecxz
push
out
in
loopne
jmp
int3
jb
iret
lods
add
fadd
pop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
call
sarl
jmp
mov
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
mov
xchg
add
shlb
and
shlb
and
movsl
sbb
rcrl
call
mov
call
mov
call
mov
jmp
movsl
sti
stc
out
clc
repz
hlt
in
iret
call
mov
call
mov
call
xlat
xchg
jmp
xlat
nop
jmp
xlat
nop
jmp
sarb
lcall
mov
test
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
mov
cltd
add
shll
adc
cmpsl
orb
mov
jns
jmp
mov
sbb
loope
je
std
std
std
sti
jmp
aam
dec
lods
add
loop
jne
lock
in
loope
jmp
xlat
xchg
jmp
rol
call
xchg
inc
mov
lods
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
mov
lcall
int
or
mov
jnp
jmp
or
int3
lods
sbb
loope
je
repz
lret
clc
repz
cld
stc
icebp
in
loopne
dec
lods
add
xlat
mov
icebp
clc
repz
hlt
out
sar
icebp
out
in
loope
in
fildll
incl
jl
mov
loope
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
mov
add
add
pushf
add
popf
add
lret
test
sbb
call
mov
fld
dec
jmp
roll
ljmp
jmp
roll
call
mov
out
std
cld
cld
cli
repnz
clc
repz
hlt
out
sar
bnd
sar
jp
int3
jp
int3
mov
loop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
inc
pushf
add
ret
das
ret
lahf
les
push
jmp
roll
jmp
xlat
nop
jmp
xlat
nop
push
aad
xor
iret
lods
add
fdivrs
mov
sti
clc
out
std
sti
std
std
cld
cli
repnz
clc
repz
rcl
pushl
sar
jo
sar
mov
aam
out
jecxz
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
int3
jp
ret
iret
ret
mov
add
enter
shll
add
shrb
aaa
jmp
int3
jb
call
frstor
push
ljmp
sti
clc
out
std
sti
std
sti
cmc
call
iret
gs
xlat
jmp
xlat
pushl
out
aam
out
jecxz
call
xlat
nop
call
mov
add
les
add
mov
inc
jmp
rolb
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
xchg
ljmp
push
ljmp
sti
clc
out
cld
cli
repz
into
pop
push
pop
push
pop
push
lea
clc
repz
repz
call
mov
add
movsb
add
movsb
add
movsb
add
shll
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
xchg
ljmp
push
ljmp
ror
in
dec
dec
loop
dec
dec
loop
dec
dec
loop
dec
dec
loop
dec
dec
loop
pop
push
jecxz
cmpsl
mov
aam
enter
enter
shlb
jb
out
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
xchg
jmp
out
call
int3
ljmp
cmp
call
incl
call
ljmp
call
pop
leave
cmpsl
add
cmpsl
add
int
sbb
fadd
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
jmp
xlat
nop
in
fildll
pushl
xor
pushl
xor
pushl
xor
pushl
add
add
test
add
ffree
jmp
rorl
in
fildll
decl
repz
and
repnz
and
repnz
and
repnz
int3
stos
add
int3
stos
add
fld
push
jmp
rorl
std
sti
hlt
mov
jp
ljmp
sbb
lcall
sbb
lcall
sbb
mov
into
lods
add
into
lods
add
into
lods
add
into
lods
add
loope
jae
outsl
xchg
xchg
std
pop
prefetch
or
cld
scas
or
std
mov
add
add
inc
incl
pop
clc
add
inc
add
incl
add
jg
add
pop
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
loopne
add
clc
add
incb
add
incl
add
add
add
add
and
add
add
add
add
and
add
add
add
add
push
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
nop
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
pushf
add
add
inc
add
insl
add
add
je
jae
add
inc
add
add
je
add
and
bound
popa
add
imul
add
jae
and
outsl
add
and
jae
add
add
je
add
add
imul
jae
das
add
outsl
add
add
jb
jae
and
outsl
add
and
push
add
add
add
jbe
add
add
jb
and
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
outsl
add
je
ja
popa
add
add
add
inc
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jb
outsl
add
add
popa
add
imul
add
add
and
inc
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
outsl
add
add
popa
add
imul
add
add
add
xchg
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
outsl
add
je
ja
popa
add
add
add
outsb
add
add
je
jae
and
insb
add
arpl
add
jae
outsl
add
jae
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
pop
add
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
cmp
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jb
outsl
add
add
popa
add
imul
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
add
add
add
add
add
push
add
add
imul
inc
add
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
or
popa
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
or
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
or
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
mov
add
add
add
push
add
add
add
add
add
add
add
mov
btr
pop
scas
shrl
mov
int
leave
dec
es
mov
mov
sahf
sub
fisubrs
mov
add
add
add
add
fs
mov
adc
movsb
dec
lds
add
in
sbb
loope
push
add
mov
add
add
sahf
hlt
add
dec
mov
add
add
add
add
cs
sub
add
add
add
add
sub
add
pusha
add
add
add
testl
add
pop
add
add
add
mov
add
lods
add
add
pop
movsb
add
stc
add
add
add
out
add
add
add
add
add
add
leave
add
lret
add
add
add
rolb
add
add
add
mov
add
add
add
adc
add
sbb
push
jge
add
add
push
add
add
add
add
add
aas
add
lods
add
leave
jge
mov
add
xor
add
jnp
add
outsl
add
add
add
sub
add
mov
mov
add
inc
add
add
add
in
add
add
add
fwait
add
cltd
mov
cmc
fbld
popa
iret
add
pop
add
add
daa
add
icebp
add
loopne
add
ss
fisubrs
add
mov
test
bnd
rolb
sbb
ret
ret
ret
ret
inc
mov
mov
or
mov
leave
and
dec
jnp
xchg
mov
jge
shl
push
hlt
or
pop
and
dec
lock
mov
lods
stos
mov
fadd
inc
xchg
adc
dec
add
not
jmp
cmp
sahf
mov
xchg
popl
inc
cwtl
iret
jb
adcb
mov
das
lret
cmp
cmp
pop
pop
mov
adc
cmp
int
sub
xlat
mov
mov
test
ljmp
dec
xor
push
insb
xor
add
jg
and
or
mov
add
imul
je
and
scas
mov
clc
mov
jns
jnp
in
cmovae
and
test
insl
inc
xchg
pop
testb
out
mov
loope
cmpsb
jns
mov
ds
pop
push
mov
cwtl
aaa
add
push
mov
jno
nop
out
lcall
xor
sbb
stos
pusha
lret
adc
push
dec
sti
mov
mov
xor
pop
mov
mov
test
sub
jb
cmp
lods
nop
xchg
out
loop
sub
ss
mov
aam
xchg
pushf
push
insb
xchg
fiadds
adc
mov
xchg
js
cmp
push
push
mov
and
add
shlb
aad
mov
xor
dec
jno
in
sbb
push
inc
rclb
inc
cmpsb
dec
or
dec
out
sti
push
and
aam
jo
mov
xchg
or
hlt
mov
mov
das
and
sbb
shll
sbb
add
jo
pop
mov
or
out
fisttpl
mov
dec
pop
inc
pop
and
arpl
imul
xor
sbb
or
call
loope
int3
xor
clc
testl
outsl
aad
outsb
mov
sbb
push
popa
dec
fisttpl
cmp
inc
addb
jb
cmp
push
push
lret
cmp
xor
leave
loope
addr16
dec
cmp
rcrl
push
xchg
or
cltd
loopne
pop
clc
ja
lods
pop
lds
add
dec
outsl
ret
pop
ret
add
pop
sbb
push
push
lahf
push
inc
add
mov
js
inc
lock
jmp
insb
add
add
movsb
mov
sub
je
xchg
in
popf
mov
add
outsb
inc
cs
add
sub
inc
add
cmp
je
iret
mov
inc
leave
imul
push
out
jae
push
sbb
roll
dec
and
jle
pop
jmp
xchg
sbbb
imul
or
dec
stos
add
ss
cmp
inc
cs
jg
test
mov
shl
call
mov
add
mov
xchg
dec
sbb
inc
mov
pop
lcall
mov
shrb
call
in
arpl
stos
jb
add
call
pop
inc
fs
iret
add
cmpsb
gs
lret
sbb
xchg
ret
mov
sbb
pop
mov
jg
dec
js
jle
pop
adc
pusha
out
inc
dec
lcall
pop
into
in
cmp
test
pop
pop
ror
std
hlt
mov
loopne
inc
adc
hlt
ret
pop
mov
sbb
comiss
or
sub
mov
repz
pop
aaa
push
or
loop
adc
mov
sub
lahf
arpl
sub
mov
sub
leave
dec
jecxz
movsl
mov
dec
xchg
fwait
xchg
daa
fadds
cmp
in
pushf
fistl
lods
subl
outsl
ffree
rorb
dec
js
sbb
insl
push
loop
imul
in
mov
mov
loope
mov
cmpsb
mov
mov
push
aaa
andl
jmp
daa
scas
movsl
jnp
xchg
sbb
mov
or
sbb
xchg
outsl
lds
pop
int
lahf
inc
xchg
stc
jno
or
inc
pop
imul
push
mov
imul
pop
cmp
int3
loopne
fisttpl
enter
push
inc
test
shrl
and
push
inc
pop
fstpt
add
mov
add
add
movsb
movsl
push
pop
xor
icebp
xchg
fisttpl
add
cmp
js
sbb
adc
push
push
rcrb
inc
int
pop
rorb
out
or
push
fdivp
adc
cltd
loopne
mov
jl
adc
movsl
pop
ljmp
mov
dec
sbbl
out
popf
nop
jno
mov
testb
inc
lock
inc
xchg
js
sahf
ret
lods
in
push
xchg
sub
jne
icebp
adc
insl
cmp
cmp
push
stos
mov
xorl
and
add
or
sub
dec
dec
and
pushf
out
cwtl
or
daa
mov
mov
pop
and
data16
mov
dec
inc
and
sub
pop
sbb
push
aam
cmp
xor
psllw
in
adc
jo
and
incb
jp
pop
pop
repnz
mov
pop
popf
fxtract
inc
aas
movsl
data16
jg
sub
outsl
adc
pusha
push
jnp
stos
mov
popf
clc
sbb
outsb
testl
cmpsb
cwtl
in
jns
mov
inc
test
imul
mov
addb
stc
mov
hlt
rcr
int3
fisttps
stc
stos
or
lods
mov
incl
mov
fiaddl
sarl
lods
mov
xchg
test
jg
mov
scas
mov
daa
pop
sar
lods
cmp
xor
jo
dec
mov
adc
insb
mov
test
sub
cmpsb
out
shll
xchg
sbb
add
pop
dec
mov
pop
add
sbb
cmp
and
ljmp
outsl
mov
lock
xor
xorl
bound
cmp
xor
xor
mov
fsubl
push
inc
inc
leave
mov
aas
push
data16
jl
mov
push
and
xor
and
jns
js
cmc
popa
hlt
push
and
cmp
hlt
mov
movsl
lret
dec
xchg
add
pop
jge
add
int3
sbb
pop
jl
pop
pop
push
mov
lcall
outsl
cli
divb
xor
mov
add
add
mov
sub
cmp
inc
add
sbb
in
mov
out
arpl
fsts
btr
test
mov
outsb
mov
mov
cld
out
mov
sbb
gs
rol
movl
dec
inc
dec
lds
xchg
and
add
insl
inc
popa
leave
or
shlb
or
push
mov
cli
lret
aaa
lret
cmp
mov
lds
push
test
pop
xchg
sbb
add
pusha
add
push
cmp
push
arpl
cmc
and
and
scas
add
stos
shr
andb
mov
mov
pop
insb
mov
push
push
sbb
jmp
mov
in
add
cli
dec
ds
adc
mov
std
int3
mov
pushf
ficoml
in
lods
fwait
inc
loop
test
aam
repz
test
push
lea
jl
out
jb
lods
fsub
or
cld
add
mov
sub
push
leave
in
rol
pop
jb
shr
cmp
jbe
jge
xor
iret
cltd
dec
shrl
lock
roll
jg
fwait
push
or
dec
scas
inc
jne
imul
push
push
movsl
or
sti
inc
movsl
pusha
ja
cld
or
adc
jno
adc
xor
push
mov
xchg
mov
xor
cmp
inc
daa
mov
sub
cmpl
aam
loop
outsb
pop
sub
jb
mov
add
rep
mov
lcall
push
fnstcw
jg
jl
out
jae
push
and
mov
cmpsl
mov
inc
mov
test
movsl
test
and
jmp
lods
cwtl
adc
int
pop
jbe
out
les
lcall
sub
cmpsl
inc
cmp
imul
push
add
sbb
pop
inc
lret
mov
mov
fucomi
add
jns
sub
xchg
hlt
xchg
sbb
jmp
ja
mov
add
inc
mov
mov
jl
xchg
lea
in
push
push
pop
jl
loope
fcmovb
pop
insl
or
dec
jl
mov
and
and
or
jl
mov
fbstp
add
jp
dec
fs
std
and
add
cmp
loop
lahf
inc
rcrb
rcrb
roll
xchg
out
aas
les
iret
cmp
jnp
movsl
mov
sub
hlt
adc
lcall
ds
into
fisttpll
scas
inc
fidivrs
aam
pop
adc
shl
notl
adc
aaa
in
jno
xor
mov
lcall
add
push
pop
aad
lret
cmp
jae
int3
jno
pop
inc
or
sbb
inc
push
in
xchg
sbb
ror
mov
sbb
imul
and
inc
jmp
data16
sub
iret
repz
sub
xor
popf
cli
sub
jns
rdmsr
mov
test
mov
mov
inc
push
and
imul
out
sub
mov
ret
ds
jb
push
mov
dec
incl
push
std
sub
sub
xchg
pop
repnz
add
xchg
push
push
cmp
adc
xchg
fwait
imul
sbb
adc
les
fs
sbb
rcrb
iret
and
push
adc
rcrl
fdivs
loopne
clc
icebp
cwtl
mov
and
pop
insl
test
mov
popa
sub
arpl
xchg
cli
adc
adc
daa
jbe
sub
popa
leave
lcall
lcall
clc
mov
test
and
outsb
fadds
sub
inc
add
nop
sbb
cld
mov
sbb
je
arpl
pushf
adc
jmp
outsb
clc
or
std
cmp
or
sub
and
js
ljmp
mov
push
rorb
xor
add
xor
xchg
lcall
pop
sub
movsl
sub
xor
add
and
xor
xor
imul
sbb
jge
insl
lods
cld
mov
or
dec
shl
or
arpl
inc
test
lahf
cli
std
fxtract
cmp
xor
sub
out
sti
iret
sbb
mov
fwait
daa
scas
push
rcr
rorl
iret
es
enter
mov
enter
into
ret
fadd
in
mov
icebp
adc
sbb
push
movsl
adc
jle
in
pop
inc
std
leave
xor
sbb
in
cwtl
es
sbb
mov
sahf
test
lods
fucomi
insb
pushf
scas
lea
aas
icebp
mov
imul
gs
push
jl
ja
mov
cmc
sub
xor
out
lods
aas
dec
loop
in
add
dec
gs
cltd
add
addb
ja
ds
cmp
ret
flds
jmp
mov
idivl
or
ja
add
aad
inc
mov
adc
push
faddl
das
xchg
push
cmpsb
xchg
mov
jecxz
adc
mov
insl
loop
mov
xorl
inc
in
jnp
push
test
sbb
add
insl
fdivrl
xchg
into
xchg
sbb
jge
nop
bound
incl
clc
fsincos
aad
stc
lret
mov
xor
dec
repz
stos
mov
mov
lods
fbld
dec
mov
sub
faddl
jb
push
ss
cmc
dec
popa
sbb
mov
mov
jb
mov
sbb
cltd
stc
aas
out
enter
inc
xorb
inc
xchg
inc
push
roll
out
mov
jl
arpl
push
iret
add
js
lods
pop
push
cmpb
and
aas
push
dec
out
jnp
aaa
insl
inc
aas
fisttpl
leave
mov
xor
inc
jg
lds
dec
loopne
dec
fsubl
arpl
das
mov
push
jne
lcall
popf
test
fdivr
lret
inc
divb
jo
inc
icebp
iret
xchg
lock
or
dec
fadds
in
into
pop
sub
xor
push
mov
adc
aas
sahf
cmc
add
xchg
in
sub
or
sbb
out
popa
push
movsb
dec
xor
out
mov
loop
add
mov
push
xchg
xchg
cmpsb
push
jge
outsb
jnp
ret
mov
popf
sbb
jmp
inc
cmp
cwtl
in
ret
lret
sbb
loopne
aad
sub
stos
test
jnp
out
test
adc
outsb
scas
in
inc
inc
sbb
fldl
icebp
xchg
sbb
sar
xor
and
test
out
imul
ficompl
div
or
pop
sub
fadd
clc
fnstcw
push
data16
nop
adc
jp
xor
push
fs
rcl
ret
and
scas
pusha
jb
into
push
aam
sbb
or
cmpsb
daa
mov
imul
mov
iret
enter
ds
aam
lods
push
decl
mov
pusha
out
rcll
pop
aaa
cmpsl
jns
push
jl
lods
xor
les
stc
mov
jl
out
std
out
xor
or
lret
fcmovnb
push
dec
aas
pop
and
test
cltd
cmp
sub
sbb
jl
sti
imul
enter
fdivrl
or
shrb
pop
jg
ss
jns
insl
js
test
out
and
cld
or
insb
add
ret
insl
sub
dec
pusha
push
stc
mov
jp
jno
les
pop
xor
dec
jl
add
push
pop
arpl
mov
jae
xor
movsb
nop
and
adc
ja
pop
jns
cmp
sbb
mov
mov
aas
pushf
pusha
adc
mov
lea
mov
mov
or
cmpsb
cltd
sub
pop
cmp
lret
std
jge
jecxz
dec
stc
xchg
lret
loop
jmp
dec
stc
arpl
rorl
xchg
sub
jns
xor
hlt
cmp
mov
imulb
inc
fwait
add
push
cmpsl
fwait
call
push
cmp
push
push
mov
mov
mov
iret
psrld
xor
iret
mov
aam
mov
cmp
cwtl
inc
cli
cmpsb
sarb
xchg
xor
mov
xchg
xchg
dec
fcomps
sub
mov
cmpsb
leave
loopne
aaa
clc
rcll
mov
dec
call
sbb
adc
cmp
repz
enter
aam
daa
lret
and
jp
shlb
jne
addl
sbb
aad
dec
xlat
sbb
jle
popf
in
mov
sub
push
and
inc
lock
sub
or
and
rcl
add
test
in
cmc
in
repz
enter
mov
mov
addr16
sub
or
adc
testb
rol
in
fdivrp
subb
sub
inc
jmp
mov
lock
xor
movb
jns
out
xchg
inc
jbe
push
or
dec
mov
movsl
mov
movsl
fwait
test
ljmp
in
mov
sbb
scas
mov
inc
xchg
mov
shlb
jae
jbe
mov
or
push
or
xchg
xor
js
int3
ljmp
pusha
aam
dec
jmp
leave
dec
add
xchg
pop
outsb
out
in
arpl
sub
jecxz
inc
or
sahf
inc
ret
jno
sub
mov
nop
dec
or
jge
dec
xlat
dec
or
xor
imul
add
add
mov
or
or
or
pop
std
and
pop
stos
mov
push
cmp
push
pop
out
mov
mov
out
lock
enter
push
push
cltd
les
adc
pop
sbb
add
scas
add
mov
dec
inc
fnstenv
sbb
loopne
lahf
ljmp
jg
js
mov
int
insb
mov
jno
es
pop
add
cmp
out
adc
or
xchg
pop
aas
inc
xor
push
lcall
dec
xchg
lcall
sahf
jae
movsb
lret
cmpsb
outsb
aam
and
add
fsubrl
cmp
ja
dec
add
test
ljmp
outsl
adc
icebp
adc
xchg
popf
sbb
and
addb
sahf
lock
loopne
scas
rcr
aas
gs
sub
int
mov
dec
or
dec
dec
sbbb
es
test
fucomp
fistpl
lods
pop
xor
or
pop
pop
adc
dec
test
mov
sub
jle
jmp
mov
inc
fcomip
push
add
jb
inc
inc
fnstcw
push
mov
mov
mov
jl
sub
inc
fs
mov
sub
or
and
movsb
mov
inc
test
sbb
adc
outsl
cmp
std
imul
stos
addr16
dec
sbbb
stos
inc
pop
dec
push
aam
jg
int
insb
inc
add
nop
sbb
mov
push
or
loopne
and
cmp
or
aaa
ss
jp
sbb
rcll
sub
xchg
test
sub
out
fldlg2
pop
or
pop
push
lahf
fmul
push
into
stc
dec
xchg
icebp
or
xchg
add
dec
fcoml
les
repnz
sbb
loopne
outsb
pop
test
pop
add
inc
xor
ds
xchg
repnz
xchg
push
xchg
outsb
sti
clc
xor
fcmovb
push
fistps
fidivrl
sbb
push
cmp
lds
jp
into
cmp
pop
inc
add
stos
xchg
adc
loope
sub
cmp
xchg
dec
lods
insb
fdivs
push
fwait
or
pop
sub
sub
adc
loope
xorl
ljmp
ja
idiv
shrl
xor
jle
pop
push
int3
push
mov
inc
popa
das
pop
jecxz
iret
shll
inc
dec
add
cmp
sahf
cmp
mov
fistpll
std
shrb
adc
sbb
loop
daa
pop
arpl
push
test
add
jle
rorb
sbb
gs
mov
push
add
xchg
subb
stc
pop
mov
rorl
sub
add
testb
or
movsb
sub
imul
out
mov
xchg
pop
jmp
iret
add
mov
cwtl
lea
adc
sbb
cmc
xchg
clc
sti
dec
shlb
ss
jecxz
mov
xlat
int3
jecxz
popf
add
lret
call
add
mov
lcall
stos
mov
iret
daa
test
outsl
cmp
sub
aam
hlt
stc
push
mov
xchg
xor
xchg
movlps
lods
inc
out
mov
fldt
dec
or
dec
inc
push
flds
andb
push
inc
js
inc
insl
cs
daa
outsb
pop
push
sub
cmp
cld
mov
adc
mov
add
add
add
add
inc
dec
xchg
add
add
cli
ret
fdiv
rorb
sahf
test
andb
or
jp
test
in
sbb
dec
insl
insl
add
add
out
xchg
inc
inc
jge
and
ss
out
lcall
stc
cmp
inc
jne
jns
gs
sysexit
rclb
fidivs
or
adc
lret
dec
daa
mov
std
fs
add
pop
inc
test
imul
jbe
test
mov
inc
push
mov
sahf
xchg
mov
imul
add
or
cmpsb
mov
pop
arpl
sub
daa
daa
jne
nop
lcall
out
lods
imul
out
stos
outsl
jmp
in
push
xchg
sbb
popa
mov
add
dec
cmp
mov
js
xchg
mov
mov
adc
jl
or
mov
cmpsb
cmc
into
repnz
xchg
add
add
fistpll
out
movsb
je
adc
add
add
pop
mov
pop
icebp
fwait
xor
add
xlat
js
or
cmpsb
jmp
call
sbb
adc
popf
add
jecxz
pushf
loopne
xchg
out
push
mov
add
shlb
jae
add
inc
jae
aas
xor
jbe
fildl
add
rorl
cwtl
aaa
adc
pop
dec
scas
add
cmp
pop
xchg
push
movsl
fcomip
std
sti
cld
stc
push
jns
lret
and
add
add
xchg
push
jl
cltd
out
add
add
outsl
add
xor
add
mov
add
das
add
mov
add
sub
add
rclb
add
imul
add
add
add
and
add
push
sbb
rcr
stos
sub
or
add
fcompp
int
ret
mov
inc
add
add
push
mov
cmp
adc
add
adc
pop
outsl
or
or
push
push
sbb
add
xor
dec
dec
and
xor
lods
add
push
inc
xor
and
and
add
sahf
outsb
push
rorl
js
add
jge
xchg
jecxz
jg
dec
dec
pop
pop
add
add
in
add
add
add
add
imul
add
add
add
add
flds
cltd
add
add
add
dec
dec
add
add
add
add
add
add
xchg
add
stos
add
add
add
xchg
sbb
outsb
xlat
jne
cmp
movsb
mov
push
int
add
add
dec
add
pop
int
add
or
and
cwtl
add
add
inc
popa
pusha
add
lahf
outsb
add
push
imul
mov
add
or
add
fldl
mov
sub
dec
int
add
dec
add
add
cwtl
add
fildl
test
js
cmp
mov
add
adc
cmp
repnz
mov
xchg
add
add
mov
push
inc
sbbb
jnp
jne
add
jne
test
dec
xchg
mul
pop
cli
aam
add
fdivrs
lods
xchg
mov
out
add
add
insl
or
ljmp
add
xchg
add
or
add
cmp
int3
xor
ret
mov
sbbb
cmp
enter
xor
iret
add
into
add
lret
add
enter
aam
shl
loopne
add
add
mov
add
mov
and
in
add
add
addr16
popa
pop
add
adc
ret
and
lcall
or
ret
es
add
add
push
and
xchg
pop
add
sarl
mov
add
pop
dec
mov
add
cld
daa
popa
add
add
xchg
add
cwtl
add
in
and
cs
aad
add
dec
add
add
add
ja
adc
mov
outsb
add
imul
call
jmp
mov
add
add
addb
popl
jmp
push
in
add
mov
int
add
add
add
int
pop
lods
add
add
add
pushf
sub
repnz
ficoml
add
dec
ja
int
add
inc
scas
add
dec
add
mov
mov
add
add
cmp
test
add
fucomi
add
add
add
lea
and
add
sbb
cwtl
mov
stc
xor
add
add
mov
adc
add
or
add
xor
lods
inc
and
add
add
xchg
add
push
add
fadds
popf
xchg
mov
sub
dec
pop
dec
add
dec
add
in
leave
scas
add
mov
lahf
jae
cwtl
int
add
add
outsl
add
fldcw
pop
call
fisttpll
mov
je
add
movb
mov
inc
mov
add
add
push
add
cmp
add
add
dec
push
add
mov
pop
scas
add
stos
add
out
mov
add
lret
add
add
add
int3
add
lea
add
add
add
jb
add
or
out
mov
mov
add
movb
sub
jge
ret
negl
mov
or
xchg
outsb
add
or
xchg
xchg
xor
std
or
add
data16
add
add
pop
sub
inc
sub
icebp
bound
add
push
add
mov
add
add
add
fiadds
imul
aaa
in
add
insl
add
pop
outsb
add
add
add
mov
adc
add
cwtl
addb
popl
aad
add
mov
icebp
mov
add
add
mov
push
add
add
lods
add
cmp
add
movb
mov
add
add
xor
pop
dec
sbb
dec
lods
jno
add
add
jnp
add
testl
or
mov
out
add
add
stos
jecxz
cmp
lods
pop
add
add
pop
add
pop
add
add
push
add
push
addb
mov
fstps
and
pop
test
push
jbe
mov
jg
icebp
cmp
loop
add
popf
push
or
add
inc
add
add
jae
add
popf
sub
ret
pop
or
cmp
add
sahf
add
loope
movsb
inc
daa
add
call
mov
add
add
add
add
fdecstp
add
add
or
cwtl
rolb
filds
neg
add
pop
pusha
mov
add
add
sub
inc
pop
add
add
dec
pop
dec
mov
mov
add
add
and
add
lcall
add
loopne
add
add
out
std
pop
add
test
in
add
inc
add
ret
fadd
add
add
fnstcw
loope,pn
fldl
xor
push
ret
add
add
push
pop
adc
idivl
add
pop
insl
dec
push
jmp
pop
xchg
add
add
add
push
lods
mov
iret
out
ss
and
leave
add
xor
verr
fisubrl
sbb
enter
add
nop
or
and
add
popf
add
test
xchg
iret
add
pusha
dec
into
int
add
add
cmpsb
mov
add
push
xchg
movsl
xchg
das
lahf
add
mov
add
pop
add
ljmp
add
jmp
lret
lret
arpl
fdivs
sub
mov
add
fs
jle
add
mov
xchg
add
add
sbb
add
adc
add
hlt
pop
add
fiaddl
mov
fs
mov
cwtl
call
add
add
add
add
pop
add
lods
add
jl
add
push
in
add
add
sbb
ljmp
sbb
fsubl
add
dec
movl
aas
add
add
xchg
push
add
add
popf
add
add
pop
add
add
cmc
add
add
mov
dec
add
add
jo
xchg
jg
dec
add
add
add
adc
pop
add
cltd
add
lods
test
dec
add
add
add
testb
stos
cmpsl
add
xchg
add
ljmp
add
add
add
add
mov
pop
mov
pop
add
add
lods
dec
add
add
flds
add
mov
mov
sub
cmc
and
add
mov
stc
add
add
add
add
mov
stc
add
push
xchg
hlt
add
adc
aaa
cmp
mov
mov
add
sbb
inc
sbb
pusha
cmp
gs
adc
add
push
sub
jbe
dec
push
cmp
push
pusha
ja
xchg
dec
cli
cmp
jbe
push
or
add
pop
add
cmp
jecxz
jg
mov
add
lock
xor
scas
enter
stc
clc
add
fiadds
inc
and
push
xchg
ret
add
addb
cltd
add
add
add
add
aad
jb
sbbb
fsubr
add
pushf
mov
lods
mov
lret
addr16
add
add
jecxz
xor
add
add
add
ficoms
lock
xchg
cmpl
add
lock
arpl
add
pop
add
push
fsubp
rcrb
add
mov
inc
xor
fstps
add
imul
pop
add
add
stc
mov
add
lds
dec
int
add
cmp
or
push
add
loopne
scas
cltd
pop
insb
inc
add
scas
repz
xlat
pop
add
pop
add
add
jle
xor
add
add
and
in
lock
jge
in
or
jl
fwait
repz
xchg
add
in
sub
add
aam
mov
out
into
push
add
fiaddl
ljmp
fst
inc
fdivrs
dec
cmp
int
pushl
add
clc
pusha
bound
add
or
enter
fldl
and
lods
stc
mov
cs
mov
add
add
add
add
add
add
jae
into
pop
add
and
add
in
out
mov
in
push
ret
add
aam
cmp
ficompl
add
sbb
repnz
xchg
imul
inc
add
add
xchg
add
add
iret
add
out
enter
add
push
and
pop
add
sub
add
cmp
jmp
or
add
push
add
pop
into
sbb
pop
jg
data16
mov
movsl
rep
dec
add
ret
dec
and
inc
push
add
popf
ret
inc
push
sahf
add
fwait
call
aad
stc
mov
add
add
add
call
add
mov
outsb
testl
sub
cld
xlat
mov
addr16
add
out
pop
stos
push
xchg
in
add
pop
stos
xlat
mov
add
add
xchg
push
mov
add
jg
lcall
add
add
add
xor
add
mov
addr16
dec
sbb
add
movsl
add
stc
inc
das
push
add
jne
out
push
je
add
pop
add
push
aas
add
dec
movb
leave
mull
dec
cltd
and
add
inc
add
dec
stc
dec
xchg
add
pop
add
add
add
add
test
mov
push
addr16
cmpsl
mov
add
add
mov
add
add
xchg
pop
leave
sbb
lods
adc
add
mov
cmpsl
add
xchg
add
adc
sub
mov
stos
add
add
add
mov
arpl
sti
mov
add
adc
fstps
mov
cltd
xchg
jmp
xor
and
jmp
add
cmpsl
test
fiaddl
popf
mov
add
add
sahf
add
add
add
add
inc
add
fwait
add
add
pop
pop
sub
jo
imul
shl
add
pushw
add
add
pushf
add
add
add
add
mov
add
out
add
pop
jbe
int
addb
push
imul
xchg
sbb
out
mov
lea
enter
push
add
add
add
add
push
cmp
test
dec
add
add
insl
add
cmc
test
add
fisubrl
add
add
add
cmp
pop
cmc
mov
push
add
add
add
add
imul
lret
add
add
xchg
jmp
add
add
add
cld
add
add
push
add
adcl
sub
popf
cmpsl
mov
les
jo
jns
cmp
insb
shrb
fsubrl
imul
mov
jae
movsl
aas
cs
or
add
inc
sub
adc
dec
cs
cmc
leave
jge
or
push
jbe
lahf
push
cltd
xor
js
ret
out
and
sub
cs
das
jmp
sub
out
push
and
imul
leave
adc
sbb
addr16
cmp
dec
or
push
dec
psubusb
pop
cmpsl
mov
ror
cmp
xchg
stc
cwtl
mov
ljmp
in
in
jmp
jmp
ljmp
rcr
fldcw
rorl
cmp
lcall
frstor
mov
aad
jns
fs
lods
or
fwait
stos
add
lahf
cmpsl
xchg
jecxz
outsb
xor
movb
xchg
mov
lea
mov
iret
cmpsl
inc
mov
dec
mov
cmp
insb
mov
outsl
cwtl
outsb
dec
imul
push
arpl
mov
insl
push
jnp
loope
mov
dec
jmp
dec
pop
dec
loop
and
inc
jae
mov
nop
xor
push
sti
stos
out
and
sub
sub
das
xchg
das
dec
sub
push
pop
pop
pop
add
ret
push
push
and
and
or
pandn
inc
or
mov
or
test
mov
repz
negb
jecxz
in
add
clc
out
add
shr
jmp
addr16
sahf
fldt
shll
xchg
mov
out
insb
enter
dec
mov
cwtl
mov
mov
sahf
jl
push
sub
sahf
add
push
lcall
and
sub
jbe
test
aas
mov
cmp
sub
cmpsb
dec
roll
jle
je
inc
dec
cmp
push
cli
les
imul
aam
ficompl
insb
aam
pop
and
bound
dec
sbb
data16
ss
inc
hlt
jge
dec
lock
dec
mov
int3
ret
push
jbe
fnstenv
jl
adc
pop
jle
pop
lret
sbb
in
in
jecxz
push
ds
pop
push
daa
push
fsubrl
fisttps
sarb
fmull
jmp
fisttpl
fsubl
hlt
adc
scas
mov
jmp
fidivs
jmp
xor
or
sbbb
push
xchg
popf
sbb
es
pushf
lods
mov
les
arpl
ret
enter
int3
jbe
cwtl
and
scas
scas
idiv
jle
data16
mov
jge
pusha
dec
movsl
mov
push
mov
xor
push
imul
xchg
aam
fildl
test
inc
mov
inc
or
and
jno
cmp
pop
imul
pop
insb
mov
pop
pusha
mov
popf
shrl
push
adc
push
iret
inc
or
dec
or
test
int
and
mov
pushf
or
xor
fsubp
out
arpl
les
fs
sub
les
xchg
clc
pusha
push
hlt
ljmp
rcrb
pop
or
or
stos
mov
mov
lret
xor
enter
repz
mov
inc
jmp
mov
inc
out
mov
mov
push
mov
negl
fucomip
jle
int
jg
enter
xchg
rcrl
pushf
cltd
lock
mov
mov
mov
jle
bound
test
mov
loop
repnz
jb
shrl
xchg
cmpsl
pop
clc
inc
lods
xchg
mov
mov
mov
andl
mov
ds
test
imul
outsb
pop
bound
mov
lds
mov
push
pop
push
mov
std
inc
jbe
sahf
dec
dec
dec
lahf
dec
or
into
inc
and
popf
adc
jb
pslld
add
outsl
movsl
loop
es
sub
sub
repnz
loop
push
imul
pop
push
lock
ficoml
push
adc
cmp
or
or
or
or
push
ljmp
enter
iret
add
shl
lahf
mov
int3
jmp
pop
ljmp
leave
add
test
fs
sub
enter
sub
ds
loopne
aas
lret
cmp
and
fisubrl
shl
jnp
push
mov
mov
jle
bound
test
push
stos
mov
loop
mov
xlat
adc
xchg
mov
out
fldl
xchg
mov
mov
mov
mov
dec
int3
ja
je
aas
jl
out
out
shrl
ret
dec
fsubrs
xlat
arpl
jb
pop
sub
dec
cli
push
insl
pop
jge
fwait
inc
dec
orl
xchg
iret
int3
and
sbb
or
sub
into
daa
mov
sub
out
das
xor
ret
fnsave
or
es
xchg
push
ret
or
or
fldenv
mov
aaa
leave
xor
push
hlt
stos
mov
dec
out
cmp
dec
in
cmp
dec
jmp
jge
sti
cltd
in
fildll
mov
jp
sub
jnp
sub
jle
das
dec
xor
hlt
jmp
or
sarb
cmpsw
adc
inc
stos
push
test
stos
jae
push
or
imulb
mov
pop
xor
sahf
xchg
jnp
dec
lea
dec
mov
add
and
mov
add
int3
add
fs
dec
int3
pusha
inc
inc
inc
sub
aaa
push
test
inc
divb
adc
in
aam
loope
imul
hlt
aas
shll
fs
xchg
daa
cltd
adc
lock
daa
dec
or
and
or
and
in
mov
stos
lret
movb
xor
and
dec
das
ret
das
ret
add
sub
andb
andl
cmp
jbe
movsb
mov
test
call
enter
ret
enter
inc
rorl
mov
movl
enter
in
ljmp
adc
dec
mul
pop
lods
inc
cmpsb
mov
inc
gs
movsb
mov
mov
inc
mov
out
push
shlb
insl
xchg
gs
mov
scas
jle
add
jp
jp
popa
add
xor
inc
push
rdtsc
sti
add
gs
dec
iret
imul
inc
shr
and
hlt
or
inc
pop
ja
adc
insl
out
pop
outsb
out
pop
push
ret
fwait
mov
sarb
imulb
xchg
and
ret
mov
and
jl
pushf
and
mov
add
mov
shlb
push
or
cs
and
mov
and
lret
xchg
imul
in
mov
jne
pop
ljmp
and
pop
iret
daa
loop
inc
push
mov
mov
mov
aam
sbb
shr
sbb
stc
ljmp
bnd
in
lods
jle
jne
in
mov
mov
add
dec
mov
adc
iret
orl
push
icebp
pusha
mov
and
scas
pusha
add
inc
mov
outsb
mov
push
adc
push
dec
lahf
gs
dec
pushf
dec
dec
fwait
bound
push
scas
nop
aad
mov
daa
mov
cmp
adc
and
dec
or
inc
punpckhbw
adc
je
jmp
pop
inc
repnz
scas
sub
add
and
add
add
xor
sub
push
add
add
sub
pop
sahf
sub
and
lcall
in
in
aad
mov
test
jmp
iret
xor
dec
int3
adc
dec
enter
inc
lds
and
push
mov
sarb
int3
sbb
lret
sub
sbb
and
out
mov
shll
popa
lods
jne
inc
mov
jne
inc
movsb
clc
jecxz
mov
shll
xorl
push
adc
cltd
mov
jp
push
jnp
insl
jle
and
cmp
lahf
jb
xor
imul
insb
pusha
leave
popa
outsl
fs
bound
imul
jmp
adc
inc
inc
in
inc
inc
loope
inc
inc
in
or
fwait
xor
into
das
insl
rorb
and
or
xchg
mov
and
cltd
and
and
and
or
call
and
outsb
enter
add
pop
add
test
imul
jb
adc
stc
mov
in
lret
jecxz
loop
loopne
loope
in
in
push
dec
test
ret
cld
fsts
int
ret
add
in
add
out
add
stos
sub
shll
jno
test
pop
lods
fwait
mov
jns
lahf
movsb
jl
adc
xchg
jns
sbb
sbb
subl
lea
adcb
test
xchg
pop
nop
dec
dec
andb
sbb
xchg
sub
bound
pusha
mov
andl
fdivl
cmpsl
sub
adc
add
mov
inc
sbb
push
sub
dec
mov
aam
popa
cmp
shr
sub
ja
aam
jb
mov
xchg
xlat
daa
fcmove
mov
movsl
push
and
cmp
push
aas
cmp
add
aas
movsl
add
cmp
mov
mov
dec
loopne
aad
push
arpl
xlat
faddl
rcr
pop
loop
fistpl
cmpsb
push
xchg
mov
jnp
hlt
das
xchg
jne
nop
out
xchg
jb
sbb
cld
js
mov
jne
cmp
inc
into
pop
dec
push
lds
dec
aam
mov
mov
pop
push
xor
loopne
insl
mov
jbe
pop
cmp
aaa
adc
shlb
mov
mov
inc
adc
inc
push
sahf
xchg
pop
add
je
pusha
sub
mov
subl
mov
bound
pop
mov
ljmp
xchg
inc
cld
inc
or
dec
jecxz
cwtl
inc
in
xchg
inc
out
nop
stos
aaa
out
mov
mov
push
fs
mulb
not
cs
cmp
and
enter
out
insl
outsl
lods
cmp
jge
into
xlat
or
mov
call
add
mov
bound
dec
lds
xor
or
xor
xchg
mov
mov
out
sub
out
loope
fistps
out
push
push
dec
in
or
clc
jmp
xor
push
out
xchg
mov
pop
into
inc
cld
cmp
inc
pushl
inc
ja
adc
movsb
add
sbb
xor
xlat
scas
or
mov
push
scas
xor
lret
mov
sub
and
outsb
xchg
mov
fs
dec
fcoms
movl
add
add
add
add
add
jmp
mov
add
add
lret
out
add
add
add
add
add
mov
add
fwait
jge
add
stos
add
add
add
jmp
and
add
add
or
add
mov
int3
add
sub
add
int
add
int3
add
add
add
das
or
add
jbe
add
inc
in
add
leave
add
add
inc
add
loope
add
lea
add
movb
add
add
add
out
add
add
add
scas
roll
dec
xor
add
add
add
add
cld
add
add
add
lods
scas
add
test
add
add
add
add
push
add
mov
add
push
dec
add
repz
add
add
add
jo
add
testl
add
outsb
add
inc
add
add
add
add
add
nop
add
dec
add
add
xchg
add
inc
add
add
popl
add
out
add
add
add
mov
add
add
aaa
add
sbb
add
lret
add
add
adc
add
data16
add
add
add
add
xchg
rolb
add
daa
add
addb
add
add
add
add
add
add
lret
inc
add
scas
add
add
add
mov
add
pop
pop
add
rolb
add
add
flds
add
out
add
lret
add
add
movsl
add
add
add
sbb
add
bound
add
out
add
add
add
add
add
filds
add
push
add
add
add
or
add
add
dec
jo
add
add
add
add
add
pop
jb
add
add
add
movl
add
add
add
add
add
add
add
out
add
add
xorl
add
add
xchg
mov
add
pop
add
mov
add
call
add
scas
add
add
xlat
add
push
add
add
aam
add
add
dec
daa
add
push
lock
mov
add
fdivl
add
add
add
hlt
add
jg
add
lcall
add
add
dec
add
les
add
hlt
add
push
add
clc
add
push
cmc
xchg
add
test
sbb
xorl
int
inc
xor
jp
and
push
add
add
loope
jnp
aam
jmp
std
or
and
bound
jns
add
jmp
add
add
xor
add
push
outsl
xlat
insl
shl
add
push
cmp
out
mov
lods
push
and
jp
inc
bound
sti
add
xchg
pop
scas
xchg
lock
xchg
sbb
sahf
add
sub
add
enter
adc
iret
add
ret
cmp
insb
js
out
int
addl
loope
rcl
sub
dec
sarb
sub
add
fs
shrl
ss
add
jp
je
incb
lahf
scas
add
jg
and
add
dec
sti
out
in
inc
add
xchg
lock
sub
add
sub
jno
push
int3
add
outsb
mov
js
mov
pop
loope
les
inc
aam
insb
std
loopne
push
jl
ds
jle
add
xor
push
cmp
jg
adcb
adc
cmp
out
sbb
pop
mov
push
in
mov
adc
rcll
and
dec
push
add
xchg
pop
sub
std
cmp
and
dec
push
add
dec
push
dec
add
xchg
push
dec
add
sub
push
and
mov
ja
insb
add
out
add
pop
call
add
cmc
addr16
add
fneni(8087
roll
data16
xchg
hlt
scas
ss
add
decb
add
dec
xchg
cmp
sar
cmc
adc
jp
and
or
pop
fs
mov
fildl
jnp
add
cmp
je
xchg
sub
aas
jg
and
jbe
icebp
pop
and
pop
add
cmp
mov
add
inc
and
nopl
add
and
loopne
in
add
xchg
mov
popf
add
test
add
rol
cmpl
nop
pop
mov
add
sbb
add
das
mov
pop
or
add
ljmp
push
xor
adc
push
jae
xor
add
mov
inc
lret
and
pusha
insl
es
sub
add
jp
clc
or
add
lret
push
imul
inc
pop
inc
add
pop
rcll
nop
repz
std
ja
flds
test
mov
int3
xchg
xchg
push
add
mov
ljmp
cmc
inc
xor
aaa
sti
cs
lods
outsl
lcall
iret
aas
adc
roll
adc
out
xor
jb
out
je
jge
xor
test
push
int3
cli
outsl
and
icebp
or
push
es
in
lcall
pushf
pop
adc
filds
daa
xchg
daa
dec
mov
dec
add
ret
inc
cmp
pop
hlt
add
cs
add
mov
pop
add
shll
ret
bound
cld
push
pop
add
add
cmp
add
xor
dec
xchg
and
pop
in
xlat
outsb
add
dec
outsl
movsl
cmpsb
add
pop
push
lods
add
pop
sbb
push
add
mov
pop
add
xlat
add
add
inc
outsl
add
add
jnp
jbe
ret
add
scas
mov
xchg
jae
mov
lret
or
pop
push
dec
jle
gs
subl
stos
push
mov
ret
jg
pop
leave
mov
mov
mov
dec
lock
clc
mov
test
jnp
ret
add
cmpsb
mov
addr16
mov
pop
add
mov
adc
add
mov
std
fiaddl
mov
jge
sbb
adc
cli
clc
jo
hlt
push
call
jmp
addb
out
ljmp
add
adc
and
pop
scas
pop
pusha
shlb
add
jge
ljmpw
insl
push
push
mov
and
adc
pop
out
sbb
add
pop
inc
sub
sub
popa
dec
push
fcomp
or
std
daa
xchg
add
mov
add
jl
int3
rorl
jne
scas
lea
jae
aam
add
test
cmpsl
lahf
adc
jg
jmp
sbb
xor
aaa
insl
hlt
scas
mov
sbb
mov
add
mov
cmpsb
mov
jmp
xchg
sbb
lahf
aaa
std
fisttpl
add
stos
mov
mov
lret
inc
gs
push
out
leave
pop
mov
ret
jp
mov
popf
or
add
test
or
and
sbb
dec
fwait
inc
sub
fisubrl
insb
mov
jecxz
cli
call
mov
repnz
outsb
push
insb
xchg
sub
in
push
or
sub
outsb
loopne
add
jns,pt
cltd
mov
aaa
adc
push
push
or
sub
ret
add
icebp
add
pop
add
stos
add
add
add
or
add
out
add
add
push
dec
add
xchg
daa
aam
insb
repnz
lods
xchg
outsl
pop
add
ja
test
push
out
add
sub
cmp
mov
add
lahf
adc
xchg
inc
lds
stc
addb
popl
jmp
mov
adcl
jnp
lods
add
ljmp
test
lods
movsb
imul
inc
mov
cld
call
push
push
mov
faddl
mov
fiaddl
add
inc
loope
mov
add
loopne
jae
and
lret
out
jecxz
mov
stc
lods
sbb
sub
push
sbb
stc
xor
inc
inc
add
or
dec
dec
dec
pop
add
bound
inc
add
fdivrs
imul
or
es
push
push
sub
add
and
cmp
pop
sysenter
aaa
movsb
fadds
outsb
add
dec
cmp
dec
scas
or
mov
inc
add
jecxz
hlt
add
inc
jl
mov
cmp
insl
or
xor
out
nop
int3
add
mov
and
xorl
int
mov
ss
into
mov
cmc
inc
mov
mov
mov
mov
leave
cvtps2pd
leave
xchg
gs
ret
inc
add
or
or
add
fs
dec
add
pop
add
mov
add
mov
add
add
cmp
xchg
add
add
add
adc
out
mov
or
add
ret
imul
inc
dec
out
jmp
call
or
pop
inc
inc
sub
dec
stos
inc
fdivl
insb
cs
sub
dec
dec
imul
add
out
addr16
repnz
add
cmc
mov
add
bound
add
jns
xor
das
insb
add
mov
sbb
sbb
scas
mov
iret
jmp
stos
add
loopne
add
mov
xchg
add
pop
add
xchg
stc
add
add
push
add
add
mov
daa
add
sub
enter
data16
push
sub
push
sbb
arpl
mov
mov
lret
jns
notl
or
pop
add
mov
idiv
fiadds
or
add
je
add
sbb
pop
push
push
xchg
dec
mov
add
mov
mov
xor
loope
add
pop
stc
int3
add
jle
push
out
lds
incb
imul
cmpsl
sbb
add
dec
push
push
pop
push
lods
mov
scas
test
push
lock
je
jge
in
stc
jnp
cs
add
outsl
mov
stc
jmp
add
out
stc
ljmp
jno
dec
bound
cmpsb
ss
stos
stos
divb
dec
cmc
lods
push
hlt
add
rcr
fcmovu
add
fildl
insb
lret
mov
or
pop
dec
lret
pop
add
mov
cwtl
addb
jmp
sub
or
in
popa
jae
cmp
adc
cmp
imul
fs
add
adc
inc
cmp
jns
std
fcmovu
les
cwtl
outsb
mov
jmp
add
into
enter
out
add
js
or
clc
pop
aaa
mov
cmpsb
mov
stos
add
cmpsb
int
aad
into
fisttps
rcr
pop
xchg
pop
jecxz
push
add
mov
loop
inc
popa
or
sbb
sbb
jp
adc
insl
add
sti
push
iret
dec
pop
repnz
aad
scas
xchg
insl
add
je
outsb
jno
add
mov
xchg
in
cmp
add
cli
add
and
pusha
add
push
inc
push
dec
inc
dec
inc
add
test
cmp
add
inc
in
fcmovb
cmp
jp
jno
jge
jns
push
das
cmp
sbb
ljmp
movsb
add
xor
data16
outsl
pusha
push
outsl
in
add
test
and
testb
cwtl
and
jge
and
xor
fs
push
jae
aas
lods
add
inc
stos
in
outsb
ja
repnz
push
add
dec
dec
push
dec
jno
and
ja
es
xor
and
imul
pop
ss
and
push
jmp
repnz
std
add
int
rorb
imul
std
int
into
add
push
sub
push
adc
add
dec
ds
add
enter
out
lret
rcl
testb
insb
fs
add
xor
jne
in
xor
aas
dec
jb
inc
dec
jbe
add
pusha
fs
push
push
add
sub
in
and
dec
jns
cmc
push
stos
cmp
add
add
push
or
inc
add
add
jo
enter
popf
push
fadds
into
das
sbb
add
pop
xor
dec
sbb
dec
inc
inc
test
mov
std
xorb
jns
outsb
push
mov
add
sbb
or
add
mov
ss
cmp
xor
xor
data16
jnp
cmp
ja
jne
cmp
outsb
aaa
add
cmp
add
xadd
push
jge
add
add
dec
or
or
add
mov
arpl
push
stc
fcoms
lret
rclb
and
adc
fstp
ficomps
rol
rcll
arpl
ds
stc
imul
ds
add
xchg
add
and
and
jg
aaa
cmp
popf
in
ror
ret
push
call
rcr
lret
fxch
shr
out
scas
add
add
out
mov
lret
mov
add
aad
sahf
mov
add
add
pop
leave
push
pop
inc
add
add
inc
push
out
rcr
iret
fcomi
leave
roll
aad
lret
stos
add
dec
xor
cld
add
push
adc
add
ret
fld
fst
enter
mov
jmp
xchg
incb
push
add
xchg
mov
add
jns
add
adc
iret
pop
ja,pt
inc
rcrb
add
fadd
add
aad
int3
icebp
ffree
lret
scas
mov
dec
mov
outsl
ja
inc
fisubl
inc
dec
add
mov
mov
cmp
push
ja
adc
add
andl
out
repnz
add
jg
push
xor
mov
cmp
or
mov
pop
add
je
dec
add
jge
jnp
and
fwait
lods
sbb
sti
xchg
in
cltd
xchg
xchg
in
jbe
out
mov
mov
lods
mov
add
jne
sti
inc
or
add
iret
dec
sbb
lock
lods
xchg
subb
sbb
lds
insb
je
sub
add
xchg
add
inc
inc
inc
mov
mov
hlt
pop
mov
orl
add
cmp
cmpsl
pushf
xchg
nop
add
xchg
stos
push
mov
outsl
add
mov
shr
cld
out
cmc
incl
icebp
add
sbb
loopne
stos
add
shll
out
aaa
cmc
cmpsb
fldt
das
sbb
and
sbb
test
sbb
add
cwtl
stos
add
fstps
or
stos
add
sbb
fidivrs
fstps
or
movsb
add
sahf
mov
mov
add
dec
dec
dec
dec
dec
add
add
lea
mov
and
xor
jge
daa
xchg
sub
add
sub
cmp
mov
int3
lds
add
xchg
pop
pop
filds
inc
or
mov
mov
add
add
add
add
enter
movups
add
aas
sub
cmp
xor
lods
addr16
ret
push
xchg
add
mul
int
repnz
hlt
push
mov
add
clc
add
add
jg
testl
dec
pop
dec
fildl
sbb
sub
add
enter
dec
pop
inc
sub
adc
add
sub
cltd
loopne
adc
and
or
add
add
sub
push
push
nopl
push
push
push
jle
dec
add
push
cmc
inc
addl
into
xor
in
add
add
pop
inc
pop
inc
pop
dec
stc
outsl
pop
iret
add
inc
fisttpll
xchg
aas
loope
ret
cltd
add
clc
add
rol
rol
sar
xchg
pop
stos
pop
fldcw
aaa
ret
enter
mov
adc
cmp
test
iret
sti
add
cmp
lret
in
add
add
leave
into
mov
lock
fldt
add
add
js
fnstsw
inc
mov
idiv
jmp
add
add
or
add
shll
stc
repnz
test
std
clc
mov
add
add
pop
xor
nop
add
add
mov
aas
add
insb
add
add
dec
dec
ret
out
clc
mov
dec
test
aad
movsb
sbb
ficoms
adc
or
mov
mov
leave
lcall
dec
mov
and
cmp
and
outsb
and
cmp
jmp
jo
push
bound
add
inc
iret
imul
lds
ds
aas
ds
pop
add
sub
add
in
div
push
jecxz
mov
jmp
fstpl
mov
bound
and
jle
scas
mov
mov
test
cwtl
fdivl
repnz
add
fidivl
add
out
sub
and
add
xor
xor
add
sub
adc
mov
cmc
add
popa
pop
or
cmp
and
add
cmp
mov
pop
cmp
inc
sbb
pop
adc
add
out
insl
repnz
scas
das
pop
js
test
jmp
adc
jno
ja
fcmovu
pop
sbb
xchg
test
psraw
add
mov
add
and
and
add
add
inc
inc
push
add
dec
push
add
testb
xchg
push
xor
and
add
out
jmp
jge
jmp
add
xchg
icebp
add
test
xor
stos
sbb
sub
lods
sub
shll
mov
out
pop
movb
adc
add
add
add
add
dec
pushf
mov
cmp
add
popf
jecxz
inc
ret
imul
lret
lods
outsl
mov
jle
sbb
jnp
sbb
add
int3
push
cmpsl
add
dec
inc
lea
sbb
pop
jno
add
movl
add
mov
xchg
xchg
cmpsl
scas
xchg
mov
adc
ss
out
popf
mov
pop
sti
into
js
xchg
int3
or
sbb
xchg
xchg
mov
and
imul
cld
add
or
sub
aas
and
das
xor
mov
add
mov
ret
add
xchg
pop
out
inc
inc
rorl
pop
adc
push
int
adc
or
push
add
popf
mov
cli
call
fld
ret
movb
fdivp
std
jmp
push
add
lock
ja
test
lods
orl
add
add
sub
and
mov
add
insl
mov
push
int3
movsl
in
std
add
xchg
in
lea
movsb
popa
add
pop
jmp
fdivl
mov
out
loop
clc
add
fucomp
mov
pop
cmpb
mov
pop
fcoms
xor
inc
or
inc
lret
and
jne
repnz
test
jo,pt
add
mov
xchg
pushf
lret
add
or
add
inc
add
iret
or
in
cmp
aaa
inc
je
pushw
ja
bound
add
xchg
enter
stos
test
aam
mov
mov
shr
idivl
add
outsl
in
scas
lds
repnz
add
inc
jle
insl
insb
jae
add
cmpsb
and
add
pop
add
add
cmc
add
fcom
fadds
push
repnz
cmpsl
xchg
add
daa
ret
jne
aam
dec
aaa
es
add
sbb
sbb
and
popf
push
cs
fstpl
mov
sub
and
xlat
rol
movb
lock
push
xchg
mov
jno
adc
mov
mov
outsl
jp
add
test
mov
add
sbb
and
pop
add
rolb
or
fcmovnb
out
out
fadds
leave
int
jge
fs
jnp
jle
or
pushf
outsl
cltd
dec
cmp
pop
push
and
pop
add
rorl
test
sub
add
je
inc
add
add
push
pop
or
add
adc
enter
cmpsl
or
sub
insl
or
in
adc
out
imul
stc
out
add
hlt
out
jmp
inc
or
sub
loop
push
cmc
outsb
dec
cmpsb
cmpsb
test
xchg
mov
in
add
xchg
mov
sbb
nop
mov
adcb
mov
flds
mov
pop
dec
mov
stos
scas
stos
mov
and
xchg
movsb
rolb
add
push
scas
xchg
mov
xchg
mov
jnp
sub
sub
add
push
insl
xchg
sub
add
testb
mov
cmp
add
dec
and
push
pop
mov
adc
push
adc
add
add
push
adc
or
scas
add
mov
xor
pop
dec
clc
loop,pt
jbe
add
add
adc
pop
pop
push
add
xchg
inc
out
fisttps
aam
adc
mov
sub
dec
inc
pop
cmpsl
dec
jge
dec
mov
add
cmpsb
lcall
pusha
je
scas
or
outsb
insl
push
imul
add
sub
cmc
mov
decl
std
cltd
cli
in
out
add
neg
mov
mov
mov
lods
loopne
mov
xor
hlt
jb
dec
mov
clc
jmp
xchg
div
jmp
jmp
mov
add
inc
lahf
mov
cmc
add
pusha
insl
xorl
loope
cmpsb
mov
and
inc
sti
add
test
out
sbb
jbe
jns
add
ret
sub
add
push
mov
fisubs
ret
xchg
icebp
icebp
movsl
add
scas
mov
popa
pop
add
push
faddl
shl
mov
add
add
lret
clc
div
cmp
push
rolb
mov
inc
jns
shr
add
nop
popl
ret
mov
movsb
mov
xchg
mov
add
add
dec
ja
xchg
add
arpl
es
mov
add
mov
loope
adc
add
lahf
lea
xchg
add
mov
fwait
xchg
rcrl
scas
stos
cmp
adc
cwtl
nop
adc
add
inc
xchg
mov
mov
inc
and
sti
je
sbb
ja
les
add
movsb
sarb
dec
jae
imul
add
add
sarb
out
mov
add
clc
add
cmc
cmc
std
ljmp
add
add
jne
add
fdivs
int3
adc
mov
fwait
fwait
outsl
xchg
test
and
aaa
sub
add
out
loope
gs
inc
jne
or
push
push
adc
adc
enter
inc
mov
push
sbb
movb
test
push
bound
add
cmpsb
movb
add
sbb
mov
add
loop
add
cld
in
in
in
in
imul
or
add
mov
mov
and
add
jle
sarb
and
mov
add
movsl
adcl
addl
out
das
add
mov
mov
mov
inc
adc
aaa
xor
aaa
add
jne
je
lret
out
add
xchg
repz
or
mov
and
jns
add
jnp
xor
mov
stos
add
pusha
lcall
jne
mov
pop
or
or
or
add
enter
jne
add
jl
roll
add
xor
insb
and
bound
push
xor
add
dec
add
push
and
inc
mov
add
lods
cmpsb
lods
add
pop
jno
je
jecxz
roll
mov
inc
fidivs
pop
add
add
ljmp
fildl
lahf
in
dec
adc
add
adc
add
add
add
pop
mov
add
xchg
movl
fisubs
adc
add
add
fildll
outsb
pop
outsb
cmp
inc
lldt
adc
rorw
add
mov
adc
dec
sbb
cmp
cwtl
addr16
fists
push
aaa
pop
pop
les
dec
test
jp
inc
pop
sbb
add
outsl
movsb
xor
xchg
arpl
in
add
add
imul
jg
push
jo
jbe
fwait
sbb
ret
mov
cltd
xchg
add
cmp
mov
in
lods
out
add
cmp
pop
cli
fbld
pop
adc
mov
das
enter
cmc
jbe
push
stos
cmp
pop
adc
dec
inc
mov
jno
inc
test
lret
ret
fstpt
dec
les
jl
jg
add
mov
popf
lods
add
test
mov
in
imul
xchg
mov
add
add
insl
jle
sub
add
add
mov
sbbb
xor
gs
adc
cltd
dec
sbb
cmp
movsl
push
xchg
lods
aas
out
shl
mov
mov
mov
lcall
sub
test
add
add
add
in
hlt
or
add
push
inc
dec
add
pop
loop
pop
and
call
out
insb
mov
jg
out
scas
dec
xchg
lret
out
gs
add
sbb
jecxz
lock
dec
pop
lds
mov
inc
stc
into
cwtl
xor
jp
fmuls
cmp
or
loop
xor
inc
stc
test
test
inc
stos
push
mov
dec
jae
in
add
jns
add
adc
or
mov
add
add
test
dec
insb
nop
fcmovnu
and
stos
add
xchg
xchg
js
aaa
fisubrl
cmpsl
imul
data16
leave
inc
and
push
push
incb
sbb
dec
sbb
dec
xor
push
jnp
add
mov
cli
push
outsl
gs
sub
cmp
pop
cmp
add
xchg
adc
pop
lret
add
mov
pop
or
add
add
add
inc
cld
dec
out
mov
imul
and
mov
push
jmp
mov
mov
std
xlat
push
lods
adc
adc
mov
xor
add
stos
lret
dec
lds
mov
cmpsb
add
das
jge
jne
mov
stos
push
lea
daa
pushf
and
jnp
inc
push
sbb
add
in
sub
push
and
push
cmpsb
pusha
rcr
stc
ret
aam
dec
mov
add
mov
out
xchg
jne
jge
cmp
fiadds
scas
sub
pop
mov
inc
enter
test
cmp
add
mov
mov
shufps
jmp
iret
lret
add
jmp
jne
push
or
js
mov
adc
adc
push
dec
add
xchg
sub
adc
lods
mov
push
pop
lock
add
je
icebp
and
lret
shrl
icebp
push
cmp
pop
es
sbb
mov
out
arpl
out
jp
call
lcall
mov
mov
dec
xor
mov
negl
add
shll
pusha
push
js
xor
scas
aas
cmpsb
fsts
stos
add
ss
addb
xchg
push
testl
out
sub
fwait
mov
imul
iret
test
add
and
insl
std
pusha
fdivs
jle
outsl
loopne
dec
inc
bound
cltd
jno
clc
pop
dec
jo
rol
daa
and
and
test
add
mov
xor
mov
mov
fimuls
rcl
jg
xchg
lods
cmp
pop
and
cmpsb
out
add
std
mov
loop
mov
pop
lcall
test
mov
das
push
mov
add
out
dec
pop
pop
ret
fwait
sbb
or
rclb
lock
dec
ds
cwtl
outsl
dec
call
mov
jmp
jle
mov
xor
xchg
movsl
into
movsb
add
adc
adc
add
negb
add
dec
lcall
ficoml
push
imul
and
cwtl
inc
add
test
cld
nop
aaa
out
pop
jle
or
stos
fadds
addr16
ret
xchg
jp
lock
addl
imul
push
mov
faddl
and
xchg
sub
dec
in
cwtl
jno
inc
inc
lret
inc
or
mov
movb
push
shl
stc
in
int
mov
jecxz
add
ljmp
lods
aad
push
cltd
add
xlat
inc
jnp
mov
movsb
push
xchg
ja
jle
orb
jecxz
push
jecxz
mov
add
shll
mov
cmp
shl
jle
xchg
ja
int3
add
loope
fsubrs
out
or
ljmp
in
add
enter
xchg
cmp
mov
test
add
sbb
or
cli
fstpl
xor
inc
shl
jmp
pop
jg
stc
sahf
sub
and
pop
inc
fistpll
arpl
mov
push
push
js
in
pop
fdivl
pop
addr16
scas
scas
orb
xorb
mov
mov
mov
or
loopne
es
sub
loopne
testl
and
push
push
mov
or
mov
push
rorb
add
mov
aam
add
add
ljmp
add
add
pop
sub
loop
popf
cmp
insl
xchg
pop
add
xor
in
add
mov
addr16
or
inc
add
outsb
sarb
sub
daa
in
cmc
ret
pop
cmpsl
push
nop
iret
add
data16
fs
cld
adc
call
cmp
add
cld
call
add
add
cmp
aaa
add
inc
mov
dec
mov
and
test
or
mov
add
loopne
mov
add
outsb
add
and
jns
aaa
xor
add
add
ret
lods
hlt
mov
jae
add
je
movsb
pop
das
roll
sub
add
dec
mov
je
or
add
inc
pop
insb
add
outsl
pop
add
loope
add
push
cmp
movsb
add
mov
subl
pop
cli
dec
or
add
or
xchg
mov
jnp
mov
repz
ret
push
daa
outsb
sub
add
pop
and
add
inc
sub
leave
sub
cwtl
push
and
movsl
pop
das
pop
leave
dec
movsb
aaa
mov
push
test
mov
lods
rclb
addr16
or
jmp
aaa
insl
nop
adc
lahf
or
mov
hlt
loope
pop
add
add
inc
mov
jle
dec
ret
in
jno
sub
add
sub
test
push
add
cmp
xor
add
xchg
scas
das
gs
sub
pop
in
mov
loop
adc
outsl
loopne
enter
jne
dec
addr16
sub
in
mov
xchg
or
popa
dec
jle
hlt
aas
fidivrl
bound
arpl
in
push
out
push
inc
jne
cs
add
mov
and
ret
fcmovne
inc
mov
add
pop
dec
cmp
mov
dec
cmpsb
dec
pop
add
add
mov
add
in
jg
lret
cmp
outsl
out
push
cld
push
mov
xchg
pop
enter
das
adc
add
or
dec
add
jle
stos
scas
lds
pop
aaa
mov
xor
mov
jg,pn
or
cli
loop
and
and
hlt
cld
and
mov
js
jae
mov
dec
inc
in
mov
inc
pop
inc
int3
rorl
fdivr
xchg
and
xchg
pushf
out
outsb
jb
adc
inc
loop
test
sti
into
mov
push
jb
test
fidivs
insb
nop
test
repnz
mov
std
data16
mov
add
inc
or
mov
cmp
lods
in
pop
andb
cltd
gs
add
mov
cmp
add
test
cmp
rclb
loope
mov
push
dec
sbb
add
fistps
loope
push
sub
cmp
into
sub
and
jp
xchg
es
cmp
mov
and
add
or
sbb
mov
lret
dec
inc
cmp
inc
out
addl
jg
out
add
insb
sbb
mov
daa
gs
mov
outsb
jecxz
push
push
dec
mov
lret
inc
add
cmp
cmpsb
repnz
loope
mull
lret
lcall
mov
jmp
or
mov
mov
mov
mov
sbb
add
aaa
mulb
or
adc
in
jae
dec
push
pop
loop
mov
andl
sti
cltd
mov
push
jne
sbb
int
jnp
sbb
inc
insb
in
inc
data16
les
push
rcrl
add
sbb
mov
add
xchg
fwait
outsl
pop
xor
mov
and
pop
iret
sbb
jl
push
dec
jnp
cs
and
lahf
sub
mov
outsl
push
xor
and
mov
pop
inc
arpl
or
jno
push
orl
push
cwtl
in
xchg
out
pop
incl
add
es
call
out
sub
out
add
push
adc
int
outsl
dec
pop
xchg
imul
stos
scas
fisttpl
lcall
mov
mov
test
mov
pop
jmp
xchg
ret
out
jmp
divl
or
fistps
jmp
or
cmp
lods
mov
mov
ret
dec
jmp
sbb
mov
jo
ja
jbe
fs
out
outsl
ljmp
pop
sbb
pop
imul
adc
mov
insl
jnp
mov
mov
add
inc
and
mov
mov
js
add
xlat
fsts
fsubs
stos
movsb
sub
sub
insl
loopne
inc
add
or
jecxz
cld
orl
or
das
sub
imul
push
out
add
jmp
inc
jmp
movsb
xlat
inc
add
mov
push
enter
mov
ljmp
daa
andl
inc
cwtl
aaa
inc
dec
outsl
ret
inc
xchg
cmp
sbb
xchg
jg
aam
xor
aas
cwtl
jb
sub
push
test
inc
sub
out
cmpsl
jnp
push
insb
add
inc
insb
subb
orb
cmp
hlt
insb
inc
test
pop
mov
notl
iret
test
add
pop
outsb
pop
add
pop
jne
and
inc
in
lea
aaa
rcr
fistl
popa
lods
out
push
dec
ja
inc
mov
pop
das
scas
jns
jbe
adc
or
ja
add
add
hlt
xlat
add
fistpl
and
lds
jmp
scas
sub
out
xor
or
push
dec
testb
outsb
scas
add
aas
arpl
lea
xor
shlb
mov
xchg
bound
or
lret
out
inc
pop
lods
cmp
test
push
lods
dec
jb
jg
or
adc
or
jmp
add
sbb
cs
push
or
xor
jmp
aaa
inc
jmp
cmp
or
jbe
rcrl
mov
inc
sti
add
pop
stos
icebp
mov
lret
sub
mov
lahf
out
xchg
or
fldcw
xor
pop
movsl
push
into
cmp
sti
loopne
test
push
add
pusha
movsb
fisubl
test
push
jae
scas
xor
sub
push
int3
jne
out
and
jg
into
fisttpll
dec
les
out
adc
jmp
test
sarb
push
pop
es
sbb
xchg
pop
stos
dec
pop
jp
jle
add
int
loop
cmp
repnz
mov
aam
push
push
dec
ss
pop
jl
add
inc
sti
pop
mov
lods
outsl
imull
and
push
add
pop
add
adc
cmpsb
arpl
lahf
cmc
cld
push
dec
add
sahf
jae
push
aam
les
mov
xchg
jns
jge
xchg
lods
jnp
push
filds
mov
or
cmpsb
mov
inc
xchg
test
add
add
jg
cwtl
mov
jb,pn
cli
pop
sbb
out
repnz
add
xor
loop
xor
push
push
add
dec
rcr
cmp
adc
pop
jg
imul
dec
jae
cmp
push
flds
cmp
push
add
inc
mov
fimuls
adc
pop
cmp
shld
sub
cmp
xchg
add
leave
or
iret
fisttps
add
add
add
lcall
in
cmp
pop
addb
rcrb
out
mov
in
int3
sarl
out
out
test
xchg
jle
sub
lahf
mov
add
ret
jns
nop
xchg
mov
jmp
push
jp
loopne
cld
fisubrs
decl
mov
outsl
mov
push
stos
stc
sub
pop
decl
loop
jne
sbbb
ret
scas
addb
shrl
std
mov
test
testb
insw
and
pop
icebp
mov
adc
push
outsb
push
jp
sbb
ja
or
ficomps
mov
mov
mov
jno
inc
add
or
sbb
mov
inc
sbb
add
add
vprotw
sub
mov
jns
pusha
xchg
mov
pop
enter
cmp
aad
xlat
pop
insl
test
pop
cmpl
es
xor
lods
fidivl
ja
inc
rorb
ret
test
loope
cmpsl
data16
inc
add
ljmp
test
dec
lahf
mov
es
mov
pop
in
xchg
cmpsl
jns
fidivs
xchg
ljmp
cmpsb
sub
shl
sbb
ja
xlat
jmp
fwait
and
mov
add
add
add
fiadds
inc
inc
loop
push
sahf
js
shl
daa
in
sbb
sub
cmp
gs
jo
ret
push
cmp
out
push
test
mov
std
aad
add
jge
movsl
cmp
push
sahf
mov
jns
jge
push
pop
mov
xchg
icebp
jbe
mov
stc
add
add
pop
adc
out
push
pop
movsb
push
ss
mov
or
mov
lahf
in
and
mov
ds
and
dec
sub
and
into
fs
insb
xchg
inc
jns
jns
cmp
inc
and
cwtl
mov
mov
loop
sahf
cwtl
jmp
sub
dec
jne
clc
prefetchnta
sub
jecxz
in
imul
fists
push
std
mov
decl
and
cmp
mov
add
add
mov
pop
je
xor
mov
mov
out
sbb
mov
push
jmp
subb
sub
jbe
cmp
lea
insl
add
add
insb
inc
mov
sbb
xlat
xrelease
mov
or
mov
inc
dec
mov
rorl
je
mov
add
or
add
mov
add
add
sbb
push
jbe
inc
adc
jne
push
mov
or
test
imul
jae
sub
les
cmp
mov
bound
jmp
sbb
and
rclb
and
jae
sub
and
dec
scas
xchg
dec
enter
adc
mov
push
add
jnp
cmp
push
push
mov
mov
jae
inc
adc
adc
pop
js
scas
jl
pop
jae
jg
insl
frstor
out
push
mov
pop
lret
or
out
jl,pn
pusha
int
or
in
ja
arpl
insl
sarb
scas
jnp
mov
addr16
or
mov
inc
scas
movsl
in
jg
xchg
push
inc
enter
mov
cld
push
daa
rolb
dec
enter
dec
test
adc
and
or
test
jg,pn
sub
es
pop
xchg
jecxz
hlt
lea
add
inc
add
add
fs
add
lea
aas
les
aaa
cli
add
imul
mov
add
inc
add
pop
ret
mov
out
dec
xchg
out
outsb
shld
mov
les
sbb
cmpsl
pop
sub
in
jns
jp
aaa
sub
inc
and
lods
movsb
inc
xor
dec
mov
push
shrb
cs
sub
fisttpll
push
add
inc
lock
scas
pop
pop
outsb
in
and
das
popa
sbb
cmp
jns
daa
out
loope
dec
and
dec
push
push
cwtl
pop
out
testl
int
lods
jmp
pusha
mov
add
add
mov
repnz
cmp
pop
iret
movsb
add
icebp
add
add
mov
ret
lock
add
sub
mov
add
jp
leave
dec
adc
mov
test
je
add
add
push
xor
popa
es
bound
out
add
fs
cwtl
cmp
dec
xchg
xlat
outsb
enter
add
add
out
inc
push
scas
into
and
jae
mov
add
and
lods
mov
cmc
repnz
in
roll
lea
roll
int
add
nop
addr16
add
add
jns
xor
xchg
aas
xchg
fistl
add
xor
xor
aas
mov
add
sub
xchg
cmp
add
add
rolb
test
mov
fiadds
mov
lahf
les
pop
add
push
into
out
out
repz
add
scas
and
out
push
out
mov
add
loope
jge
mov
in
loop
es
xchg
je
mov
sub
mov
test
dec
pop
insl
mov
jmp
mov
je
dec
push
jecxz
mov
ljmp
mov
mov
in
fwait
push
mov
add
dec
out
pop
fstpl
push
fadds
add
dec
push
ret
lret
add
add
in
adc
inc
sbb
jp
push
add
mov
add
fs
sti
enter
cmpb
les
nop
jle
ja
pop
orb
mov
call
aad
into
cmp
in
add
cmpsb
push
add
out
push
pop
fs
outsb
imul
mov
imul
inc
inc
das
addl
int
pop
into
push
mov
add
in
movsb
sub
bound
mov
lods
and
sub
and
jb
and
and
and
pop
dec
add
outsb
push
push
cmp
jb
cmp
xlat
loopne
mov
add
xchg
dec
cmp
repz
add
stos
mov
repz
xor
xor
xor
rcl
iret
push
ret
push
mov
lcall
aam
in
mov
add
push
pop
movsl
addr16
push
test
mov
mov
push
fsubs
inc
loop
mov
add
insl
inc
pop
iret
inc
insl
add
pop
pop
fdivp
int
js
add
xchg
mov
pop
out
popl
and
sub
lret
aas
out
inc
lahf
cmp
sub
sub
jb
adc
or
mov
imull
addr16
pop
ret
pop
inc
fcoml
add
sbb
mov
add
sbb
add
daa
and
jnp
cs
sub
pop
repnz
xlat
sbb
add
fsts
add
std
aaa
cmc
add
push
sub
xchg
or
cmc
jl
cmpsl
add
sub
sub
popa
es
mov
lcall
and
outsl
lds
popa
int
mov
cltd
push
or
popf
clc
daa
iret
pop
dec
nop
push
mov
pushf
test
ljmp
and
add
xchg
ror
dec
jge
xorb
pusha
mov
test
enter
bound
inc
ret
sbb
or
sbb
cwtl
dec
or
outsl
je
gs
jmp
dec
add
push
lods
push
sub
add
pop
mov
mov
repz
sub
popa
lds
mov
inc
imul
mov
add
push
dec
inc
clc
adc
dec
daa
rorb
rol
xor
add
rol
dec
pushf
push
dec
cmp
or
dec
in
jb
add
cmp
int3
or
cmp
push
int
xor
out
int3
icebp
loop
jne
in
scas
xchg
out
data16
cmp
shrl
scas
and
adc
lea
inc
ss
or
ljmp
sbb
add
pop
xchg
daa
mov
add
pop
push
push
lods
call
lods
and
bound
and
das
add
jns
popf
mov
rolb
sahf
inc
push
scas
fs
jae
iret
aaa
fnstcw
gs
insb
sub
cmpsb
movsl
xor
push
sbbl
sbb
ds
ja
sub
cmp
lret
iret
xor
pop
dec
rcr
add
lods
add
push
mov
pop
stos
adc
dec
jae
cli
movl
xchg
lcall
insb
adc
leave
push
dec
jl
out
lahf
sub
fstpt
xchg
scas
push
xor
sub
mov
fsubp
jmp
test
jnp
loop
sahf
es
jle
data16
sub
inc
inc
mov
out
ret
cmovbe
push
popa
hlt
cld
pop
cmpsl
fistpl
mov
mov
mov
bound
rorl
aam
and
inc
mov
scas
stos
inc
loop
lret
add
mov
stos
mov
arpl
sbb
repnz
add
repz
jne,pt
loop
dec
jno
jmp
jno
out
jno
mov
sub
and
xchg
nop
mov
das
rcll
inc
or
cmp
push
cwtl
pop
into
sarb
mov
cmp
mov
imul
mov
rcll
pop
daa
inc
pop
sub
push
mov
out
and
sbb
dec
add
cmp
sub
lds
mov
lret
addr16
mov
test
or
add
scas
test
add
popf
xlat
fwait
cs
into
decl
fimuls
add
add
rcl
lahf
mov
testl
lods
test
pop
lods
fisttpl
xor
scas
and
dec
mov
aam
jae
rcll
movsb
mov
faddp
fldenv
sub
jecxz
nop
lods
xchg
loop
mov
iret
es
jg
iret
inc
inc
je
and
jae
test
mov
push
nop
and
fisubrs
add
fldl
xchg
lds
outsl
push
mov
inc
lret
add
roll
xor
inc
mov
and
pop
pop
mov
in
sub
add
jp
pop
mov
cmp
jg
ss
add
cmp
sub
cmp
mov
add
test
add
popf
fildl
cmpsb
mov
cltd
xchg
sub
cli
pop
je
cmp
jecxz
or
movsl
cmpsl
pop
jge
xor
jne
ss
cmpsl
fldcw
pushf
imulb
mov
xor
dec
ds
and
pop
shl
dec
icebp
or
in
jbe
les
scas
cmp
adc
mov
out
test
mov
clc
clc
pop
pushf
push
ljmp
pop
ja
std
mov
adc
add
outsb
fldl
sub
nop
stos
jbe
imul
mov
test
mov
ret
mov
inc
dec
jmp
fdivl
clc
adc
or
sub
push
jg
sub
push
dec
test
popf
stos
loope
add
loope
lahf
iret
pop
jmp
into
pop
jns
adc
mov
aad
lahf
cmp
inc
leave
cwtl
movzbl
pop
pop
pop
movsl
or
ljmp
jp
in
dec
fidivl
outsl
gs
and
repz
or
cwtl
dec
lods
fiadds
lret
loopne
std
add
in
rcll
subl
dec
movb
lods
and
mov
and
enter
add
out
jae
aaa
sti
lea
jecxz
add
add
jns
enter
roll
int3
test
cmp
adc
mov
mov
and
xor
mov
inc
mov
cmp
xor
pop
test
inc
or
leave
jae
arpl
bnd
dec
pop
lcall
lea
or
movsb
imul
aam
mov
lahf
leave
sub
insl
inc
and
mov
sbb
jb
pop
or
es
repz
adc
lret
lods
cld
push
push
sti
cltd
nop
push
xchg
push
mull
mov
adc
into
mov
aas
dec
jae
shll
mov
add
inc
xorb
sbb
add
add
adc
and
mov
test
idivl
add
scas
cmp
sub
mov
sbb
jnp
outsl
mov
inc
xchg
lods
mov
cltd
xorl
fsubrl
lea
icebp
mov
pop
cmp
sbb
cmp
xchg
loop
popa
andl
xchg
mov
lahf
inc
push
jge
push
sti
mov
dec
push
sbb
jl
sbb
imul
cmpsb
test
std
add
lea
hlt
mov
or
test
add
mov
mov
and
mov
jl
movsb
pop
into
add
add
add
dec
add
jle
add
add
ljmp
sub
adc
sbb
lahf
add
sbb
add
mov
cmp
je
add
dec
lea
dec
add
dec
popl
or
jo
mov
repnz
sub
andb
add
int
jl
jl
in
enter
jl
inc
push
pop
jns
hlt
inc
mov
aad
lahf
repz
cmpl
fisttpll
jae
add
daa
test
adc
pushf
mov
add
lea
test
add
movsb
scas
add
test
mov
shlb
dec
mov
mov
jo
inc
leave
pop
int
xchg
inc
enter
add
sub
dec
or
or
fdivs
loope
add
add
sub
pop
add
mov
push
cmp
movsl
cli
sub
jno
add
pop
pop
addr16
or
cmp
add
dec
out
pop
xchg
ss
fdivrs
repnz
es
and
pop
inc
mov
add
inc
fiaddl
fdivrp
push
jecxz
mov
xchg
mov
fwait
mov
dec
or
movsl
dec
add
into
add
dec
push
jnp
bound
sarb
add
add
mov
jecxz
gs
sbb
add
orl
push
sbb
dec
inc
lcall
ficompl
add
xor
xchg
mov
jmp
mov
pop
arpl
ret
ret
ret
aad
xchg
scas
add
cltd
test
into
add
cmpsl
and
mov
dec
sbb
add
jp
xlat
in
js
sbb
jns
mov
xchg
fldenv
push
sarb
jge
sbb
sahf
nop
mov
lret
orb
mov
std
mov
dec
test
push
test
cld
out
movsl
adc
inc
outsb
cli
cli
pushf
xor
into
dec
std
and
or
inc
push
push
inc
aas
pushf
adc
int
dec
int3
inc
and
push
js
cs
pop
mov
inc
pop
sub
stos
jne
mov
mov
inc
clc
mov
cmc
iret
test
sti
cmpsb
xchg
nop
mov
scas
mov
int
dec
add
int3
cmp
outsb
push
sub
xchg
stos
mov
and
fs
xchg
lock
ret
mov
xlat
dec
daa
add
push
xor
lock
push
mov
ret
cmove
jnp
jo
pop
ret
ficomps
ret
outsb
mov
fs
lods
pop
sbb
pop
and
mov
aad
pop
hlt
cwtl
cmpsb
cli
mov
out
jno
fs
or
or
inc
mov
outsb
mov
or
mov
add
out
jecxz
mov
push
clc
jbe
add
cmp
mov
add
aam
iret
jae
mov
pop
xchg
mov
xchg
movl
sub
dec
arpl
pushf
bound
repnz
fisubrl
jle
ljmp
dec
pop
stos
sbbb
std
je
pop
add
push
rcl
inc
dec
add
add
dec
xchg
es
add
or
add
inc
movl
arpl
xchg
loope
in
cwtl
adc
test
stos
xchg
outsb
add
inc
xchg
jbe
cmp
push
testb
and
inc
add
add
aaa
xchg
pop
add
pushf
js
pop
xchg
mov
jle
add
icebp
add
mov
popa
inc
divl
sahf
popl
add
or
or
pop
add
and
add
in
push
lds
or
lret
jmp
sub
int
data16
sbb
add
push
jge
add
xor
movl
into
fdivl
fcmovnbe
fimuls
sub
add
add
sub
add
or
add
loopne
fstp
jecxz
lcall
loope
xchg
push
add
mov
cmc
mov
push
mov
xchg
insl
dec
push
jle
out
cmpsl
in
inc
dec
pop
ja
fcompl
imul
adc
xlat
movsb
stos
arpl
add
sbb
aad
test
or
dec
movsb
inc
dec
insb
dec
and
mov
clc
test
lods
fcomip
ja
mov
jbe
add
test
lret
pop
adc
sub
jecxz
and
lret
add
push
xchg
mov
lea
outsl
add
add
add
inc
xor
mov
loope
adc
loop
imul
add
repnz
mov
inc
xlat
cmp
ja
fs
xor
xor
iret
add
pushf
inc
leave
mov
dec
xchg
jp
into
outsb
iret
and
xchg
xchg
fisubrs
add
out
sub
mov
loop
pop
push
add
push
fstps
add
pop
xor
dec
repz
sti
push
xor
mov
repnz
in
sbb
lea
das
push
into
aas
cmp
sub
out
xchg
xchg
push
dec
sub
leave
xor
jmp
add
dec
mov
pop
push
xchg
mov
mov
fstl
sub
jo
call
add
mov
mov
dec
sub
sub
outsl
xor
add
bound
enter
test
and
dec
add
lret
imul
add
add
les
fcom
push
sbb
mov
stos
add
fisubrs
xlat
outsl
add
inc
jmp
add
dec
js
out
sahf
xor
mov
xchg
sahf
add
adc
cmp
mov
cltd
add
fildl
loop
lcall
fimull
imul
lcall
lcall
jb
adc
add
dec
xchg
arpl
add
cmc
orl
lahf
orl
arpl
ljmp
add
filds
push
or
dec
in
in
hlt
jmp
cmp
inc
and
jae
adc
xor
xor
or
lea
sqrtps
testl
jg
push
xchg
inc
pop
sbbb
sti
mov
cs
daa
lods
jge
push
and
stos
mov
mov
sub
dec
xor
or
add
orb
pusha
out
xchg
arpl
aam
add
push
add
insl
int
push
add
call
lea
leave
das
push
sbb
lcall
xchg
loop
sub
insl
add
lcall
mov
add
sti
add
outsl
decl
mov
mov
mov
call
rclb
jbe
jae
js
add
mov
dec
or
fadds
mov
cmpsb
add
xchg
pop
xchg
fldenv
jo
add
bound
jo
lahf
mov
mov
bound
cmp
sti
add
push
aas
push
fmuls
xor
mov
arpl
imul
data16
pop
jecxz
push
and
add
lods
adc
fisubrl
cmpsb
popf
addl
or
fstp
repz
outsl
cmp
iret
and
sbb
jbe
sub
data16
call
mov
pop
int3
fs
add
lret
lret
cwtl
cmpsb
add
fldt
incl
and
mov
xchg
daa
jb
fisttpll
cmpsl
mov
data16
cwtl
adc
mov
je
pop
dec
add
cmc
movsl
xchg
js
dec
test
in
cmpsb
sub
sub
dec
pushf
fstps
push
add
cltd
add
cmpsb
das
in
les
in
inc
scas
sub
mov
add
sahf
pop
outsl
push
das
std
bound
pop
scas
test
jo
push
sub
push
ret
bound
jge
add
jg
add
add
cmpsl
dec
sldt
rcrl
add
push
push
ljmp
out
jno
out
das
add
addr16
jo
in
add
rcl
rclb
clc
add
std
mov
icebp
jns
dec
dec
mov
mov
sbb
add
inc
test
mov
jle
test
in
add
repnz
cltd
test
clc
jecxz
sahf
pop
add
add
inc
or
mov
js
mov
movb
mov
push
in
mov
cmpsb
add
mov
ds
mov
xchg
popf
sbbl
out
mov
data16
je
jp
aas
rclb
pushf
test
mov
jbe
enter
out
and
mov
cmp
inc
roll
and
pop
jbe
add
add
jo
add
mov
inc
int3
dec
sub
stos
add
add
ret
jbe
sbbl
and
stos
push
sub
jmp
cmpsb
pop
pop
in
cmp
repnz
xchg
insl
or
icebp
pop
jge
movl
xchg
icebp
and
xor
imull
add
outsl
out
sub
outsb
xor
pop
add
testl
test
cmp
outsb
inc
lret
shll
fadds
ss
dec
or
sbb
pop
cmp
movsb
cmp
push
imul
cli
inc
add
mov
sub
sahf
enter
out
xchg
sub
inc
xchg
jecxz
popl
subb
xchg
aaa
push
xor
movsb
popa
jmp
outsl
ljmp
fdivl
mov
shlb
mov
push
dec
inc
lret
fidivrs
or
int
pop
daa
mov
jl
inc
add
ret
ret
aaa
mov
push
sub
pop
sub
lods
push
sub
add
adc
xlat
xor
lds
cmpsl
ret
idivb
add
testb
pop
cwtl
xor
pop
jb
add
pop
dec
daa
lds
mov
outsl
push
mov
call
nop
std
in
add
dec
sub
xchg
jl
mov
mov
jmp
cli
cmp
out
repz
xchg
jo
aas
adc
add
push
lret
cs
enter
ret
inc
movsb
repnz
adc
pop
jmp
or
sti
xchg
or
fxch
sbb
out
push
loop
lret
xor
mov
xchg
hlt
mov
cmp
jno
outsl
sbb
ljmp
aaa
jbe
cmp
inc
sub
ret
arpl
mov
add
sbbb
add
fcmovnu
rcrl
xor
jg
xor
and
jo
aam
sbb
add
cmpsb
aas
add
and
adc
das
and
sub
add
out
cmpsl
pop
or
xor
jns
lds
add
add
add
out
fwait
add
jns
add
add
enter
iret
add
cmpb
mov
cmp
test
aam
ficomps
dec
and
inc
bound
mov
sub
lods
sub
cwtl
mov
movsb
and
xor
xchg
jo
jl
scas
or
seta
mov
add
arpl
or
add
das
sub
je
and
push
mov
pop
mov
popa
sub
xchg
popa
adc
lret
dec
enter
adc
sbb
test
adc
dec
dec
stos
jle
pop
cs
push
aas
loopne
fwait
out
adc
add
add
lds
inc
mov
cmpsl
jno
loope
lret
push
push
sahf
cwtl
add
pop
fyl2xp1
mov
ja
push
add
bound
ljmp
pop
add
push
xor
enter
mov
mov
add
mov
jp
jbe
and
mov
dec
push
xchg
cmp
add
pusha
cmpsb
cmp
mov
inc
stc
mov
cmpsb
imul
dec
mov
jo
inc
imul
mov
add
fmul
jns
jb
mov
stc
mov
inc
popa
push
and
push
lods
jp
xchg
leave
imul
mov
lea
mov
fildl
nopl
add
js
mov
add
sti
pop
mov
inc
cmp
mov
push
inc
add
in
bnd
fisubrs
sbb
imul
fldt
push
icebp
test
xchg
jb
outsb
into
negb
xchg
test
xor
add
lcall
cmc
div
fsubrs
adc
adc
inc
out
ljmp
call
loop
pop
mov
cli
add
cmc
add
ror
std
ret
mov
out
mov
add
inc
mov
sbb
add
into
pop
je
out
repnz
inc
xchg
scas
je
call
add
pop
and
arpl
inc
push
subl
jae
test
xor
pusha
das
jno
push
das
cld
negl
inc
gs
imul
fsubs
adc
and
or
hlt
out
inc
add
dec
call
pop
dec
add
cs
lret
shlb
mov
sbb
jnp
out
clc
mul
jno
add
cmpl
add
sbb
jns
xchg
daa
xchg
loope
jge
jnp
arpl
shlb
xlat
jg
jmp
lock
xchg
push
fiaddl
xchg
stos
pop
and
pop
pop
xchg
push
in
or
insb
in
scas
idivb
cs
add
stos
stc
push
jbe
mov
dec
jb
xor
cmp
inc
shl
lds
xor
add
hlt
add
mov
or
fistpll
fwait
mov
mov
cs
cli
cmp
jge
xchg
sbb
fsubrs
cmp
mov
testl
clc
aas
incb
dec
add
mov
mov
sbb
adc
push
in
andl
xor
inc
and
xchg
add
ret
or
push
ss
inc
sbb
pop
inc
sub
add
xchg
test
sub
jns
outsb
sub
pop
sub
js
imul
lret
push
lret
xchg
mov
xchg
add
dec
jg
or
inc
or
mov
pop
test
mov
mov
add
clc
cmp
test
mov
jmp
dec
add
int
es
mov
cmpsb
mov
vpcmpeqd
and
rorl
mov
lods
mov
loopne
cmpsl
test
or
xor
dec
sub
inc
bound
pop
push
test
mov
jecxz
jo
pop
dec
or
push
xchg
mov
in
pop
or
xchg
xchg
mov
jns
inc
mov
sbb
not
lret
xor
push
imul
shll
mov
mov
xchg
lcall
pusha
mov
movsl
lds
jne
push
add
mov
idivl
call
stc
nop
loopne
repnz
jle
mov
movl
stc
xor
test
jb
cli
or
movsl
in
clc
xor
mov
or
pop
fists
into
shr
lcall
add
mov
arpl
repnz
push
push
mov
sub
inc
jle
in
jb
in
adc
sub
movsl
xchg
mov
movsl
fists
jp
fstps
nop
fmuls
and
dec
add
mov
add
stos
add
clc
int3
add
and
xchg
add
add
xchg
fsubp
dec
test
add
add
add
lods
add
les
mov
add
sbb
test
add
addl
inc
shll
add
add
push
pop
fstpl
xor
add
les
scas
add
or
mov
add
mov
ret
clc
loop
lret
sbb
xor
aam
mov
cmp
add
sbb
add
loope
dec
add
add
int3
ret
add
repz
inc
add
add
mov
out
gs
push
mov
bound
mov
cmp
lock
dec
mov
fbstp
nop
into
enter
cltd
ljmp
add
repnz
popa
add
std
pop
outsb
add
sub
mov
sbb
and
jae
enter
popa
jle
pop
and
push
adc
add
aas
jle
dec
mov
push
sbbb
add
lods
jmp
fs
inc
leave
subl
insb
add
into
jp
add
rcll
aam
mov
add
and
inc
mov
or
hlt
adc
add
outsb
cmp
cli
or
add
movsb
jmp
es
insl
mov
ret
scas
sarl
es
mov
jge
xchg
sub
push
arpl
out
pop
or
add
add
cmp
mull
jecxz
or
popa
test
in
out
cwtl
mov
cmpsl
and
inc
int
add
xor
enter
dec
cltd
dec
cmp
outsb
and
xchg
mov
out
mov
aas
xchg
inc
loope
add
lods
out
cli
ljmp
add
xorb
mov
add
clc
cltd
add
ja
out
pop
push
shrb
mov
ss
xchg
aaa
or
jle
cmpsl
jle
push
fmuls
cmp
pop
lods
imul
dec
jle
jb
push
frstor
jmp
jp
fists
sbb
int
into
xchg
cmp
stos
cmc
push
and
mov
jno
cvtpi2ps
movsl
push
mov
push
or
scas
into
imul
inc
xor
lcall
repz
test
pushf
mov
clc
fs
xchg
dec
push
or
and
in
inc
enter
inc
add
loop
es
into
mov
outsl
mov
addr16
dec
sub
ret
test
xchg
fwait
lahf
inc
jle
inc
scas
dec
rcr
xchg
and
fisttpll
sahf
lock
push
aaa
mov
cli
mov
pop
mov
add
outsb
test
sub
inc
icebp
and
add
dec
mov
xor
dec
xor
wrmsr
or
or
jno
das
pop
idivl
xor
xchg
add
sbb
xor
das
sub
cmp
inc
call
and
add
pop
mov
lds
dec
int3
sub
pop
add
dec
or
pusha
aaa
dec
in
out
ljmp
lock
push
and
adc
mov
sbb
daa
jnp
mov
add
push
lods
add
int
adc
add
mov
imul
ficomps
sahf
scas
test
clc
mov
scas
add
faddl
lods
rolb
add
add
movsl
adc
lret
in
mov
test
nop
push
push
mov
lods
test
mov
clc
sub
or
mov
mov
cmpl
mov
inc
add
popf
popf
xchg
int
pop
dec
lcall
mov
enter
add
clc
sub
push
mov
je
mov
dec
bound
arpl
lods
add
sbb
push
pop
in
and
cwtl
dec
push
jne
in
cmpsb
xor
xchg
sbb
or
stos
loopne
cmpb
and
add
and
pop
xor
pop
lods
scas
lock
lods
shrw
mov
lea
or
pop
sub
pop
test
lods
add
pushf
jb
adc
xchg
outsb
mov
cltd
call
scas
rclb
arpl
sub
adcl
mov
xchg
sbb
aad
stos
fwait
mov
add
in
cli
inc
aaa
cmc
ss
dec
mov
or
scas
jo
lret
in
xor
adc
repz
outsl
hlt
cltd
int3
fwait
test
xchg
je
insb
push
add
inc
xor
popa
mov
add
add
pop
out
dec
in
add
mov
call
stc
mov
cmpsb
dec
inc
jle
aas
xchg
inc
jl
add
or
addr16
xchg
inc
add
mov
popf
mov
cli
cs
sub
in
push
outsb
popa
dec
in
and
aas
cmpsb
lcall
or
shl
xchg
cmp
imul
and
sub
rol
jae
or
into
push
dec
and
add
ds
movsb
push
add
sbb
add
mov
push
pop
mov
ljmp
push
push
das
mov
scas
dec
ljmp
mov
sbb
jl
jp
mov
sarb
sbb
dec
fimuls
int
dec
out
clc
add
dec
out
or
add
imul
sbb
jbe
xchg
inc
mov
stc
cli
in
xchg
lret
icebp
pushl
push
mov
cmpsb
sbb
loopne
add
ret
mov
imul
lret
sbb
or
addb
mul
pop
jp
sbb
adc
add
cmp
jnp
jecxz
cmpsb
pop
cld
mov
sub
aad
stc
lea
cmp
add
mov
shlb
clc
icebp
xor
pop
stos
mov
in
jb
xchg
clc
mov
scas
lods
or
dec
es
xor
jp
out
mull
je
sub
add
sbb
dec
fidivl
scas
test
es
popf
das
js
lret
aam
xchg
rolb
add
dec
push
movsl
cmc
imul
add
repnz
cmc
nop
inc
xchg
mov
int3
mov
enter
in
mov
aas
dec
out
data16
int3
cmp
dec
sbb
repz
pop
pop
jp
mov
push
fildl
mov
push
push
cli
cmp
adc
std
add
test
fsubrl
mov
add
roll
mov
sbb
pop
insb
xor
push
push
jecxz
outsb
in
inc
flds
jmp
aas
in
out
xor
int
dec
xlat
test
negb
add
xor
xor
call
add
and
fadds
bnd
bound
cld
ss
and
sub
cmp
aad
iret
insl
add
stos
jp
data16
insl
test
and
divb
sahf
call
add
popf
lods
fs
pop
out
xlat
iret
out
jge
out
adc
jb
mov
mov
mov
int
int3
aas
iret
mov
inc
cmp
dec
xchg
js
lods
inc
daa
cwtl
sbb
shrl
in
xor
sub
bound
xchg
mov
fcomi
inc
mov
rcrl
pop
fwait
xchg
fisttpl
sahf
xchg
sbb
xor
in
xchg
pop
adc
lahf
cmp
add
push
add
add
sub
sub
adcl
adc
or
fs
xor
jl
mov
cmp
pop
mov
xchg
xchg
aam
pop
leave
jle
inc
and
in
ja
scas
and
sub
xor
add
fldt
push
call
icebp
jno
jp
dec
lea
mov
adc
mov
pushl
in
or
loopne
jge
lds
fldcw
add
pop
mov
xor
pop
test
popa
adc
cmpsb
mov
test
mov
repz
hlt
out
insl
popa
push
scas
inc
mov
ss
lahf
and
test
lret
dec
inc
int
fidivrs
and
mov
inc
addl
mov
or
jne
addr16
mov
xor
aaa
add
imul
sbb
pop
outsb
sbb
pusha
lods
movsb
cmpsb
roll
adc
inc
add
cli
cmpsl
lahf
cmp
and
mov
loop
ss
jb
int
mov
testb
mov
jno
and
sub
push
das
lahf
fsubs
pop
cli
pop
ja
add
add
cmp
aaa
jno
das
push
jg
int3
push
pushf
add
mov
lahf
bound
push
popf
loope
add
test
dec
ljmp
dec
mov
movsl
push
pop
loop
xlat
aam
add
inc
mov
xchg
xchg
adc
and
add
rcrl
rclb
sbb
test
int3
sub
das
mov
pop
adc
or
aam
out
add
add
pop
sti
push
cltd
pop
or
sbb
lcall
mov
mov
call
sub
js
add
addb
and
mov
rolb
sub
lret
or
les
add
lea
add
xchg
mov
loop
sbb
add
scas
mov
add
lds
aam
shll
adc
xor
jp
inc
sbbl
pop
pop
sub
arpl
hlt
aaa
or
cmpsl
loope
cs
popa
icebp
fildll
scas
out
in
adc
sbb
das
aad
dec
add
add
inc
pop
jo
add
outsl
lret
inc
std
jmp
ljmp
fcomip
mov
push
pop
fldcw
jbe
and
sub
inc
mov
out
lea
xor
mov
les
insl
adc
movsb
flds
test
rcrb
les
ljmp
xor
inc
mull
fs
pop
xchg
mov
sbb
and
push
xlat
or
fwait
icebp
stc
movsb
add
jo
les
mov
add
xlat
jae
jns
add
add
add
inc
shll
dec
ja
sbb
and
insl
cs
add
test
cmpsb
cmp
test
enter
sub
flds
push
xor
add
dec
cmc
jb
test
ds
insb
sbbb
addr16
orb
inc
clc
movsl
aad
repz
mov
out
mov
push
scas
call
xor
add
adc
add
xor
out
pop
push
mov
add
lret
lret
add
lock
scas
mov
jo
and
jb
bound
jnp
cmpsb
icebp
mov
mov
pop
movsb
addb
jle
xor
pop
lods
and
xchg
int
or
mov
dec
lret
mov
loope
hlt
inc
fidivrl
mull
pop
popf
jmp
ja
dec
sub
jge
push
pop
insl
cmp
data16
ficomps
fidivrl
leave
adc
rol
xlat
inc
cmp
add
add
dec
cmpsl
mov
pop
mov
adc
mov
leave
add
mov
or
lret
adc
sub
push
mov
lock
sub
cwtl
rcr
je
mov
or
orl
pop
orl
pusha
lret
mov
ja
popa
es
inc
xchg
xchg
in
fsubp
or
cmp
das
in
gs
test
scas
mov
add
or
mov
rcl
popf
mov
movsl
les
sub
push
aas
inc
mov
and
mov
lods
or
pop
loopne
scas
popf
push
das
push
and
mov
inc
outsl
or
jne
sar
pop
add
sub
rcrb
mov
mov
or
out
fidivrl
xchg
mov
mov
icebp
mov
dec
sbb
xchg
add
insb
sub
fcoml
xchg
add
cltd
jo
rcll
lret
push
js
dec
add
dec
add
mov
mov
inc
xchg
pop
imul
into
lock
xor
clc
sub
and
adc
pop
test
subl
fiaddl
xchg
int
or
add
push
jnp
dec
dec
xor
clc
jnp
out
and
pop
and
lea
push
adc
stos
outsb
adc
pop
adc
out
pop
adc
pop
cltd
das
lock
add
push
adc
pusha
mov
clc
cmpsb
dec
lds
sahf
add
xor
and
push
add
xchg
data16
daa
jmp
add
push
test
and
sbb
cmc
repz
mov
push
fsubr
xchg
mov
or
or
fisttpll
mov
lret
jb
pop
adc
add
mov
mov
pusha
sbb
mov
jno
data16
call
sub
fwait
mov
or
pop
ss
mov
add
movsb
or
add
mov
cmp
stos
cmp
lret
ds
sbb
lea
add
and
or
add
inc
loope
out
sbb
adc
testb
add
stc
aad
fiaddl
roll
fwait
out
loop
test
loop
fistpll
add
in
ljmp
jecxz
adc
push
push
fidivrs
repnz
push
enter
inc
iret
leave
xchg
rorl
xchg
add
enter
pop
mov
in
in
shlb
icebp
fidivrs
mov
add
mull
push
stos
sbb
je
fdivs
jbe
adc
lcall
dec
cmpb
sbb
push
xor
repnz
enter
jecxz
xchg
xor
mov
ds
and
add
gs
sbb
ficomps
in
pop
or
or
push
push
push
sbb
add
dec
inc
cmp
cli
or
mov
add
call
add
xchg
sbb
sub
sbb
add
jmp
call
lret
push
das
lcall
dec
mov
imul
mov
pop
add
push
inc
ficoms
xchg
adc
aam
sub
je
cmpsl
mov
add
mov
jne
lret
nop
leave
fistpl
cltd
lds
ret
pop
cmpsb
mov
mov
filds
mov
adc
loop
add
add
ljmp
popl
clc
mov
rcrb
icebp
hlt
insl
stos
add
sub
aam
imul
pop
adc
fwait
lahf
xchg
fiaddl
pop
mov
xor
or
pop
std
mov
jecxz
push
hlt
es
sub
xor
fs
data16
sub
and
dec
aad
pslld
pop
cli
sub
push
push
jb
add
dec
lea
int
xor
lds
add
loopne
xor
sub
mov
and
in
stos
out
add
test
pop
sub
xchg
jmp
cli
ja
sub
pushf
mov
add
iret
or
in
mov
add
pop
jae
clc
gs
xor
add
mov
iret
add
sbb
dec
jne
adc
adc
add
cs
inc
mov
add
dec
mov
add
lea
popf
jne
loopne
lods
ja
cmp
push
pop
rolb
fldcw
pop
add
popa
sub
pop
aad
add
popf
lcall
or
jle
mov
dec
roll
add
lahf
pop
out
mov
push
out
add
out
xchg
ljmp
test
push
gs
test
js
int3
fwait
xor
insl
rolb
add
mov
inc
dec
cmp
pop
dec
dec
mov
ja
sbb
iret
cld
push
sub
pop
adc
insl
int
stos
jmp
movsb
push
jb
jo
and
stos
add
ret
lds
out
jle
aam
std
adc
insl
pop
sbb
mov
add
add
test
jl
out
outsb
stos
int
pop
loopne
in
stos
leave
test
in
pop
dec
or
xchg
add
ret
cltd
push
lods
cld
add
into
scas
dec
test
dec
repz
mov
cmp
push
pusha
stos
stos
or
and
mov
inc
cs
jp
push
mov
lahf
movsl
dec
mov
cmpl
xchg
js
mov
mov
cwtl
cs
das
xchg
addr16
mov
mov
clc
add
es
sub
lods
pusha
in
stos
lods
pop
dec
jge
dec
cmpsb
jl
js
or
push
adc
push
iret
loope
arpl
in
dec
mov
dec
insl
call
mov
insl
out
mov
adc
popf
es
subl
sub
imul
add
lds
or
loope
je
fidivrl
mov
str
ja
mov
or
leave
inc
jg
call
lcall
das
xchg
test
and
notl
jbe
jmp
pop
sub
mov
fstsw
dec
or
sub
dec
xchg
shl
pop
jns
arpl
dec
lods
test
push
xor
inc
scas
mov
sub
fildl
xlat
call
popf
sbb
in
mov
add
xchg
popf
nop
add
sub
lea
adc
pop
dec
enter
movsb
push
cwtl
sbb
add
fldt
in
test
cs
lahf
outsl
loopnew
pop
xor
cmp
dec
les
inc
or
pop
adc
lds
mov
mov
in
pop
push
das
addr16
mov
inc
or
add
mov
repz
pop
push
divl
out
loope
or
adc
cmc
aaa
stos
dec
add
xor
push
add
xchg
add
add
rcl
push
add
fwait
lret
sub
addl
add
jmp
add
mov
push
add
in
inc
cmc
lds
mov
leave
scas
icebp
mov
mov
aam
cmp
add
xchg
mov
popf
add
sub
sub
sub
cmpsl
or
add
das
js
adc
inc
xor
loop
pop
cwtl
lds
mov
cli
iret
pop
inc
mov
xchg
adc
fidivl
shl
out
in
add
sbb
gs
inc
jmp
sti
add
inc
mov
add
push
lock
push
xorl
aas
pop
or
ret
dec
inc
add
or
repz
push
adc
jge
inc
jmp
in
fdiv
xor
or
push
push
int3
lods
outsl
adc
outsl
push
clc
add
test
gs
insb
loopne
push
push
js
sbb
adc
scas
ja
xlat
mov
in
movsl
jecxz
stc
inc
add
out
out
pop
cli
loopne
pop
out
lods
lods
scas
cmp
outsb
cmp
add
daa
mov
fadd
inc
nop
out
stos
rorl
inc
je
cmp
add
jle
lock
repz
bound
sbb
cld
std
stc
push
mov
xchg
fiaddl
mov
sbb
lods
scas
sbb
push
aam
syscall
fldcw
push
sbb
lea
fsubs
daa
and
mov
stos
jg
push
xchg
add
push
dec
lods
in
loopne
loope
js
and
pop
test
test
pop
adc
pop
bound
dec
or
testl
mov
push
cmp
stos
fldcw
or
xlat
pop
out
sbb
nop
mov
pop
jnp
xchg
push
xor
mov
mov
or
or
cs
cmp
in
leave
in
and
cltd
cld
pop
pop
add
dec
test
adc
scas
aad
push
andb
js
adc
hlt
xor
mov
shrb
dec
and
int
daa
popf
out
int3
inc
mov
jp
mov
mov
sub
movsl
ret
xlat
out
fcoms
fisubl
add
lods
js
jbe
test
push
cmpsb
or
bswap
loopne
pop
nop
lds
test
jno
mov
cld
xchg
inc
les
fwait
adc
add
ja
int
push
test
cmp
inc
mov
clc
gs
test
pop
pop
xor
aad
push
pop
pop
xchg
add
jae
sbb
pop
cmpsl
repnz
lret
inc
mov
xchg
push
inc
outsl
stos
adc
icebp
jecxz
xor
bound
jbe
cmp
jge
pop
add
popa
add
push
sbb
out
add
xchg
js
mov
fldl
jge
xchg
or
or
loope
call
fildl
xor
pop
aaa
jnp
xchg
and
int
cld
cld
mov
xor
jae
lds
mov
pop
add
out
cmpsb
inc
cld
mov
iret
add
pop
test
out
inc
and
cmpsb
mov
jl
insl
mov
cmpsb
fiadds
push
aaa
pop
aad
das
imul
adc
mov
mov
or
iret
sbb
or
add
add
pop
repnz
add
mov
les
in
or
add
lahf
test
add
or
mov
add
mov
dec
add
jg
popf
dec
pusha
dec
xor
dec
stos
insb
lds
movsl
insl
xor
mov
popa
push
cmp
ss
xchg
fptan
in
add
and
dec
lahf
pusha
int
addb
cmpsb
int
in
fxrstor
pop
sub
aaa
pusha
gs
sub
sub
aad
in
jecxz
add
jmp
and
aad
add
xchg
dec
sahf
dec
push
arpl
add
sarl
ljmp
add
sub
imul
mov
jp
add
or
das
lods
inc
scas
mov
sbb
push
xor
push
adc
add
and
or
inc
add
mov
cmp
mov
push
stc
shrb
test
fistps
adc
fcomps
nop
stos
or
sbb
add
arpl
push
push
in
bound
xchg
clc
xchg
mov
cmp
xor
inc
inc
lret
add
add
dec
movb
mov
nop
sbb
add
cmp
and
dec
enter
mov
inc
mov
out
or
dec
test
xchg
jmp
pop
mov
xchg
leave
add
repz
lock
incl
adc
call
jno
add
stos
cmp
xor
loopne
add
iret
inc
adc
dec
mov
mov
divb
loopne
les
inc
dec
in
dec
test
dec
xchg
and
sti
pop
sbbl
shlb
fstpt
dec
lret
out
xchg
mov
mov
lds
mov
jle
cld
pop
push
xlat
sbb
pop
mov
cmpsl
add
xchg
lea
jnp
xor
cmp
add
andb
add
stos
dec
jl
dec
lock
sti
dec
sub
add
add
xchg
outsb
xchg
and
enter
bound
sub
sbb
mov
mov
add
cltd
add
lock
popf
and
testb
push
cmpsb
add
lds
xorl
daa
pop
jmp
sbb
mov
add
mov
xor
cmpsl
test
arpl
xbegin
jecxz
fcompl
or
aad
sub
movb
cmp
push
outsl
sbb
add
fs
sbb
or
xchg
cltd
int
pushl
jb
fcmovnbe
outsb
movsb
xchg
add
adc
cs
cmp
cmp
cmp
stos
fs
or
xchg
fwait
sbb
mov
hlt
jbe
insb
das
xor
cmp
int
cld
mov
insb
daa
shlb
xchg
cmpsb
adc
mov
movsl
pusha
add
dec
add
add
imul
int3
aaa
fiaddl
or
into
xor
push
add
pop
dec
pop
shl
adc
or
dec
adc
cli
inc
pop
loopne
xlat
rcrl
xchg
in
jmp
cmpsl
cwtl
iret
loop
pushf
jp
and
lret
add
xchg
mov
iret
sbb
fimull
dec
cli
xor
add
or
sub
addr16
test
sub
adc
inc
insl
adc
shll
pop
lock
enter
mov
lods
cli
mov
lods
push
mov
sbb
int
jno
mov
pop
mov
imul
outsl
sbb
popa
sbb
jns
movsb
clc
das
mov
xor
addr16
cltd
jmp
rol
dec
mov
dec
repnz
dec
add
add
inc
stc
and
inc
fistpll
movsl
and
movsb
cmp
loopne
gs
add
sbb
push
aad
nop
mov
sbb
out
data16
jp
xchg
loope
add
add
repz
pop
inc
add
fsubrl
add
add
mov
data16
add
xchg
bound
pop
add
leave
mov
add
fildl
iret
lahf
aaa
add
cmp
sub
je
adc
adcb
scas
pop
add
add
add
mov
dec
lahf
push
loopne
loope
add
dec
fdivrl
aas
add
cmp
mov
shll
stc
int3
add
movsl
sub
jg
inc
fiaddl
enter
add
xor
add
add
test
push
mov
fcompl
add
pop
pushf
adc
lds
add
imul
add
fidivrl
mov
sub
pop
adc
and
mov
add
mov
std
jge
sub
dec
push
jl
add
add
repz
sub
and
xchg
inc
pop
dec
test
gs
mov
mov
das
mov
imul
add
mov
out
xor
outsl
adc
or
add
mov
test
lahf
cltd
or
add
sub
inc
add
sti
pop
aad
fidivl
dec
je
movsl
sub
inc
std
scas
subb
sub
mov
repz
std
shlb
jbe
ds
fstp
je
xchg
mov
adc
inc
into
inc
and
cmp
cmp
sub
jecxz
push
jmp
jmp
sub
outsb
rolb
add
sbb
mov
dec
mov
xlat
dec
inc
inc
mov
dec
push
and
fs
add
jmp
insb
inc
and
repz
or
loope
imul
inc
push
fadds
or
flds
cmp
dec
sbb
in
mov
mov
aam
ret
fistps
lds
mov
lret
adc
add
jns
mov
jl
cmp
insl
mov
lret
in
fildl
hlt
add
scas
addb
sbb
pop
xor
mov
int
dec
mov
add
test
in
mov
add
jno
mov
jmp
mov
lods
out
pop
push
mov
fstpt
mov
das
jnp
in
or
iret
sub
mov
data16
scas
cmpsb
outsb
scas
out
xchg
aas
pop
cs
add
int
jne
outsl
jbe
push
and
mov
or
push
les
jecxz
or
out
xchg
imul
in
xchg
cmp
xorb
mov
ljmp
jns
jnp
imul
gs
mov
mov
imul
jp
xchg
or
mov
int3
dec
int
xlat
mov
hlt
enter
mov
fwait
loope
sahf
stc
test
sbb
and
lock
xlat
add
and
mov
gs
lret
add
sarl
mov
cmpsb
adc
adc
outsb
addr16
push
add
arpl
subl
add
imul
insl
xchg
add
fmul
fwait
jb
or
sub
dec
into
clc
lcall
mov
fsubrl
push
dec
xchg
or
pop
arpl
mov
insb
push
push
scas
push
add
mov
fcompl
data16
add
lea
in
jbe
inc
sbb
jmp
jns
cmp
fs
push
jle
mov
mov
inc
inc
decl
pop
cltd
idivb
pusha
pop
pop
out
add
lret
xor
mov
repnz
ret
cwtl
xchg
in
add
adc
mov
adc
leave
cld
cwtl
and
mov
cmp
xchg
inc
lret
repnz
jecxz
xor
inc
test
and
mov
into
or
push
jbe
lret
push
fimull
mov
jmp
mov
adc
add
in
loop
sub
in
gs
mov
add
fildl
pcmpeqw
or
sti
movsb
sar
xor
dec
xor
or
mulb
repnz
add
xchg
dec
xchg
xchg
orb
add
inc
push
pop
clc
sub
mov
cmp
iret
dec
cmpsb
dec
jns
orb
into
je
add
dec
cmpsb
cli
ds
add
gs
add
test
and
add
ds
orb
or
ret
aad
popl
add
xchg
xchg
sub
loope
add
mov
inc
enter
mov
filds
outsl
repnz
addr16
sub
pop
cwtl
out
out
sarb
jno
and
loope
pop
shlb
pop
into
imul
insb
fsubrl
mov
stos
push
imul
idivl
xor
movsl
push
mov
in
test
add
xchg
test
ds
pop
adc
push
xchg
mov
mov
or
sub
push
push
jns
xchg
aaa
pushf
push
outsl
pop
cmp
add
or
cmp
push
cmpsl
xchg
mov
add
mov
scas
aad
out
in
dec
pop
or
jbe
aas
or
sub
inc
push
bound
add
and
lds
sbb
insl
add
lods
call
pop
add
push
jle
or
call
fwait
lds
adc
inc
out
pop
pop
ss
or
jmp
cmp
fstps
out
xchg
mov
cltd
pop
aam
data16
ret
sub
add
mov
xchg
push
orl
test
xchg
mov
lret
dec
mov
ss
inc
and
xor
sub
outsl
mul
dec
pop
sub
repz
lea
xor
dec
cli
mov
scas
loopne
jnp
cmp
push
push
or
test
in
pop
mov
cld
xor
push
dec
add
jl
pop
xor
sahf
add
imul
sub
sub
icebp
mov
repz
loope
sub
shl
xor
and
add
lds
push
ret
and
pop
sbb
aad
xor
add
je
push
and
add
sbb
sbb
mov
xchg
add
pop
sub
add
stc
xor
js
inc
mov
add
cmp
fldenv
jo
push
stos
dec
popf
icebp
and
jmp
sub
cmp
mov
and
inc
mov
add
insl
add
aam
leave
notl
mov
adc
hlt
cmp
int
mov
mov
aad
and
add
push
outsb
in
fcomi
add
push
aaa
inc
rorl
pop
dec
inc
bswap
popa
ss
or
xchg
xchg
mov
cli
pop
mov
and
push
les
pop
xor
les
inc
add
sub
imul
insb
or
rcrl
lods
daa
int3
cmp
or
inc
and
dec
sbb
dec
imul
adc
jl
ja
hlt
mov
roll
and
sub
call
adc
ud0
dec
stos
cvtps2pd
push
pop
out
addl
ss
ja
movsb
lahf
xor
cmp
andb
inc
movsl
adc
stos
add
push
leave
lret
xchg
in
jne
scas
pop
inc
pop
ret
ror
xlat
xor
iret
jg
out
iret
les
fidivl
lea
test
mov
ja
jne
test
sti
push
fdivrs
insb
in
push
add
rclb
ret
repz
push
jge
dec
pusha
cmp
mov
jge
pusha
mov
add
idivb
movsb
sub
add
call
add
in
gs
sbb
aad
mov
sub
cs
nop
lea
cmp
add
or
or
dec
cmp
lds
xor
mov
hlt
ret
sub
add
cs
push
push
sub
aad
inc
push
xlat
lcall
inc
es
leave
xchg
adc
bnd
lock
call
inc
test
dec
cmp
stos
fiaddl
loop
cmc
and
dec
mov
pusha
lods
sarl
loopne
nop
mov
popf
push
jge
jbe
inc
mov
add
xor
xor
add
adc
push
icebp
ret
jno
leave
pop
xchg
je
sbb
cmpsl
sbbl
jno
fimuls
mov
add
adc
cmp
scas
fnstsw
data16
btc
ja
add
in
mov
mov
jecxz
and
adcb
xchg
out
inc
xchg
in
lcall
inc
sahf
fidivl
mov
movl
pop
int3
xchg
mov
call
sbb
mov
dec
mov
pop
jge
mov
in
cmp
cmpsl
pop
insb
sti
mov
in
adc
loop
addr16
xor
stos
xchg
out
add
loope
jb
sub
dec
int
add
xchg
lret
mov
lock
popf
and
push
adc
out
inc
fsts
mov
ret
or
lods
push
pushw
fwait
clc
mov
mov
mov
jae
sbbl
ret
mov
mov
stc
std
clc
scas
sub
mov
movsl
in
repz
test
add
or
add
add
shlb
add
testb
test
repz
or
data16
aaa
cmpsb
adc
out
jo
push
inc
addr16
xor
adc
pop
pop
repnz
pusha
add
xor
pop
add
sbb
ret
es
mov
imul
dec
repz
movsl
lret
add
outsl
pop
aam
jge
add
out
ljmp
out
push
mov
out
out
or
xor
cmc
sbb
sbb
add
and
int3
add
daa
add
cwtl
inc
in
cli
test
pusha
loope
fs
out
add
popa
mov
mov
push
test
mov
ja
imul
mov
xchg
mov
iret
test
xchg
inc
add
insb
mov
jns
add
add
insl
and
testl
inc
xchg
jmp
imul
jmp
jo
add
lock
leave
test
and
mov
pop
pop
lock
stos
lock
pop
fildl
mov
pop
jo
jmp
mov
pop
push
insb
mov
mov
sbb
inc
sbb
xchg
insb
test
sbb
inc
lret
sahf
iret
add
cmpb
ret
inc
dec
std
les
mov
dec
dec
sub
orb
sahf
and
jbe
and
xchg
es
std
mov
add
mov
ficomps
orl
dec
dec
in
scas
push
pop
lea
inc
add
data16
sub
mov
lds
imul
arpl
mov
dec
sub
add
xchg
ss
mov
fadd
aad
bound
aas
mov
mov
stos
cltd
call
mov
xlat
add
ljmp
push
fistpll
call
pop
adc
mov
std
mov
dec
mov
ds
mov
fistps
adc
sub
mov
push
add
loop
xor
adc
mov
mov
int
rol
add
js
test
out
add
add
xor
lahf
jmp
pcmpgtd
mov
add
cmpsb
or
adc
add
movsb
pop
and
loope
sub
inc
insb
push
movsl
and
lcall
push
and
and
data16
lock
add
divb
push
mov
adc
add
ret
mov
xchg
mov
fcoml
out
aam
in
sahf
test
add
jae
outsb
lahf
testl
push
pop
sub
add
mov
aaa
shl
fstps
push
dec
sbb
add
andl
outsb
popa
in
add
jnp
subl
add
add
into
iret
dec
xchg
pop
leave
lret
ret
add
pop
inc
sub
add
movsb
cmp
dec
push
out
stos
aas
add
xor
stc
out
and
cmp
and
sub
add
cwtl
mov
jb
jo
cmp
inc
mov
pop
add
or
add
leave
and
mov
shlb
xchg
pop
sub
jmp
cmp
mov
lahf
les
mov
add
icebp
insb
add
pop
or
repz
test
add
add
add
js
sarb
imul
xchg
pusha
mov
arpl
arpl
and
mov
fs
dec
ds
into
bsr
dec
jnp
inc
cwtl
fiaddl
dec
les
mov
fcompl
test
in
mov
push
add
sub
pop
sub
mov
stos
test
add
out
add
mov
add
sbb
mov
decb
push
dec
in
sub
call
fldl
pop
mov
xchg
out
arpl
xchg
sbb
sub
cmp
mov
cmp
cmp
dec
mov
or
or
jns
or
int3
lock
adc
sti
add
mov
xchg
test
inc
das
sahf
and
movsb
js
add
mov
add
and
lahf
push
lea
std
xor
mov
add
jle
out
mov
add
xor
mov
pop
push
add
and
pop
xchg
icebp
cmp
out
lock
ret
mov
std
shl
filds
add
scas
sbb
les
or
jbe
es
in
add
enter
jmp
add
test
data16
lcall
popf
rep
cli
and
cld
das
sub
mov
cmpb
and
test
or
sahf
inc
testl
cmp
mov
insb
mov
dec
sti
xchg
fiaddl
and
jecxz
gs
movsb
insb
lahf
out
sbb
insb
add
push
repnz
inc
iret
jo
rcrl
mov
add
dec
sbb
ret
inc
pop
push
mov
sbb
test
jp
xchg
add
add
lods
std
rolb
pop
cmp
popf
mov
and
ret
or
enter
or
les
mov
sbb
inc
fisubrs
sub
fsubrl
add
stos
hlt
xchg
in
pop
out
and
mov
ret
mov
add
add
inc
mov
sti
cwtl
rolb
aaa
add
and
stos
push
fsubr
push
add
add
push
mov
mov
mov
js
enter
fcoms
rolb
lods
fld
testl
pusha
dec
or
faddp
add
andb
aaa
jmp
movsl
sbb
dec
lock
roll
xchg
fdivrs
xorb
dec
adc
pop
jae
or
mov
iret
mov
cmp
add
adc
cmp
rolb
cmp
movsb
jl
add
mov
lock
pusha
bswap
jns
jle
mov
out
push
test
lret
jecxz
popl
xchg
data16
test
jmp
in
std
lods
ret
out
lods
mov
loope
shll
mov
cmp
mov
ret
pushf
mov
stc
fnstenv
subb
add
popf
lahf
jb
mov
icebp
add
fldenv
flds
jbe
test
add
xor
jecxz
fiaddl
or
out
add
ror
jge
push
sti
add
adc
ret
int3
sti
add
mov
or
cmova
bound
dec
in
insl
call
inc
adc
in
inc
or
sbb
adc
fcomps
jl
movb
or
jge
push
mov
lcall
add
push
and
in
fdiv
lods
scas
in
sub
sub
data16
cmp
lods
dec
lea
loopne
enter
dec
insl
add
dec
sbb
jb
mov
lret
mov
mov
les
loopne
add
shlb
pop
add
fsubrl
scas
scas
test
je
lods
push
dec
jmp
sub
mov
cmpsb
dec
xchg
flds
jmp
mov
out
dec
hlt
dec
xor
mov
and
jae
push
repnz
pop
dec
push
negb
inc
movsl
and
stos
and
out
setne
pop
idivb
lret
add
lret
mov
mov
mov
imul
xchg
scas
mov
subl
mov
sti
pop
rolb
adc
add
dec
inc
cmp
sub
cmc
imul
mov
jp
gs
mov
dec
adc
testl
add
dec
add
mov
pop
test
xchg
mov
gs
or
push
or
sub
imul
out
daa
jg
xchg
pop
jb
sub
mov
fs
jmp
push
dec
push
and
scas
sbb
push
adc
add
movb
add
sbb
pushl
add
xor
loop
sub
pushl
es
xchg
iret
inc
adc
dec
repz
dec
fsubrs
in
inc
add
add
sbb
outsl
adc
adc
test
int
clc
clc
push
mov
dec
mov
shrb
outsb
dec
les
pop
or
test
enter
dec
nop
sti
aas
mov
add
out
inc
inc
pop
icebp
imul
xchg
outsl
jmp
punpckhwd
fs
sub
dec
inc
addr16
mov
pop
arpl
scas
shlb
test
mov
int
cmp
dec
imul
xorl
movsl
clc
fs
add
mov
add
lods
add
cs
xor
pop
pop
sbb
or
fwait
cmpsl
sbb
popa
add
into
mov
add
add
or
jbe
cs
loopne
negb
ret
jp
ljmp
mov
in
outsl
popa
sahf
ror
arpl
aaa
movsl
lods
or
mov
ret
xchg
add
add
int3
add
add
loop
dec
fcoml
and
rorl
push
inc
push
push
and
mov
sub
xchg
in
stos
das
lcall
pop
or
jae
sbbb
lea
ja
mov
int
in
xchg
or
test
xor
pop
jmp
and
dec
orb
cltd
nop
sub
pop
stos
mov
mov
mov
popa
add
mov
xor
inc
pop
dec
lods
inc
cmp
popa
pop
cld
test
xor
add
leave
dec
and
mov
ror
xchg
sub
xchg
jg
mov
out
loopne
popa
add
jp
arpl
in
movsl
cmp
pop
int3
xchg
cmp
add
icebp
jb
xchg
mov
mov
push
and
ljmp
fldenv
sbb
mov
aas
inc
push
popa
icebp
ret
scas
xor
lock
mov
jb
adc
loop
stc
add
out
in
mov
shlb
mov
pop
fucomi
mov
cmc
xchg
xor
adc
mov
mov
add
jbe
add
les
jg
ret
call
xor
add
int
outsl
add
arpl
test
lods
lea
imul
xchg
or
and
xchg
mov
or
add
or
and
pop
inc
and
pop
xchg
test
decb
sbb
inc
and
jp
imul
notb
sbb
stos
mov
dec
outsl
xlat
iret
imull
adc
stc
aam
inc
testb
pop
dec
in
push
push
lahf
dec
outsl
jecxz
fidivrs
sti
fs
or
ds
fnsetpm(287
imul
cmp
out
fcom
xor
sub
nop
xchg
inc
ffree
les
cmp
cli
ljmp
insl
add
push
mov
lea
sbb
pop
adc
lcall
insb
mov
sub
cmpsl
cld
xchg
mov
xor
add
jle
out
push
pop
push
add
adcl
call
inc
mov
cmp
loope
sahf
pop
cmp
not
xor
add
sub
mov
inc
mov
mov
cmp
cmpsl
inc
ljmp
rcrb
iret
pop
jmp
push
xchg
add
and
movsl
out
in
loope
pop
les
add
xchg
push
mov
sti
add
dec
pop
and
mov
jae
fdivrs
enter
imul
jecxz
nop
out
pop
dec
pop
leave
xchg
stc
cmp
pusha
test
add
sbb
outsl
and
repz
lcall
cmpsl
add
fdivp
mov
jno
xlat
flds
push
xor
lods
mov
adcl
lea
fwait
out
xchg
mov
imull
dec
ss
cmp
jbe
lret
jg
or
sub
clc
daa
add
adc
xchg
lcall
xor
or
addr16
cmp
insl
lret
gs
sbb
clc
mov
out
push
movsb
push
add
movsb
popa
les
add
mov
cmp
arpl
pop
sub
shlb
push
test
aaa
pop
and
sub
mov
inc
popa
aad
sbb
adc
je
xlat
sub
shrl
xchg
imul
cltd
pop
mov
mov
outsb
mov
lods
adc
or
lcall
out
push
popf
lahf
mov
push
fwait
inc
mov
in
popa
pop
mov
xor
push
sahf
nop
mov
dec
repnz
pop
mov
dec
add
add
stos
or
sub
daa
insb
cmc
jmp
cmp
mov
addr16
mov
add
lret
frstor
mov
push
push
inc
pusha
in
sub
xchg
push
cs
je
mov
insl
inc
cwtl
add
loopne
jmp
stos
js
add
rcrl
outsl
int3
sub
decb
or
subl
adc
or
dec
sub
pop
mov
loop
shll
mul
ror
rorl
pop
stos
call
xchg
dec
xchg
cmp
and
lcall
and
add
loopne
cmpb
jo
xlat
cli
out
jbe
xchg
leave
mov
call
mulb
pushf
in
add
add
popa
ja
jmp
fcoms
popf
repnz
test
out
inc
mov
pushf
inc
dec
mov
jno
insl
jp
mov
push
xorb
mov
cmp
call
push
mov
pop
mov
clc
mov
scas
lock
add
pop
xchg
scas
mov
aad
or
push
adc
jae
cmp
add
sub
mov
nop
sub
jne
pop
mov
push
and
sub
pop
jbe
pushf
cmp
fdivrl
or
jl
pop
ret
sahf
aad
rorl
imul
xor
inc
sub
out
or
jge
xor
fsts
dec
and
mov
arpl
dec
and
pop
push
outsb
iret
add
xor
jle
cmp
jmp
loope
xlat
stos
icebp
dec
push
aam
or
add
gs
imul
push
push
addr16
jnp
cld
stos
jmp
ret
xor
lods
addr16
fs
lahf
fistl
shrl
push
inc
std
stos
incl
and
mov
aaa
jne
nopl
sti
movsl
and
mov
jge
add
add
ja
inc
test
xlat
fisttpll
push
push
add
sub
aas
add
or
jecxz
xchg
lcall
xchg
loop
jno
test
jmp
daa
push
inc
bound
dec
scas
push
adc
sbb
je
and
loopne
jl
or
and
adc
enter
xor
push
arpl
insl
je
scas
add
cmp
stos
push
cmp
int3
or
inc
lea
add
fldenv
jmp
dec
mov
add
stos
push
mov
ljmp
in
in
outsl
xorb
dec
sarl
pop
scas
sarl
fdivrs
sahf
add
aad
add
jae
fdivr
repz
lret
cs
inc
mov
enter
ljmp
stos
mov
add
fs
add
sbb
push
bound
int3
mov
sahf
filds
out
mov
xchg
mov
fucomp
pop
cmpsb
jne
jmp
lods
jp
push
mov
and
mov
ror
jge
add
fsubs
inc
adc
jne
or
add
jae
imul
cmp
add
inc
dec
stos
lcall
loop
je
mov
add
pusha
daa
jle
pop
and
jnp
xchg
std
jmp
dec
pop
mov
add
jp
ja
cwtl
cld
or
jg
sbb
push
push
orb
fwait
sub
movsl
cli
add
pusha
add
add
mov
adc
adc
test
arpl
add
cmp
ljmp
push
les
ret
int
bswap
mov
fwait
lods
adc
and
lods
add
ljmp
popf
cwtl
stos
mov
add
shrb
add
fdivrp
int3
mov
pop
repz
cmpsb
inc
push
lds
out
iret
pop
shlb
es
xor
fldenv
pop
or
mov
js
jge
cs
es
xchg
push
adc
icebp
clc
in
rcrb
adc
lds
adc
add
push
or
jbe
jmp
adc
add
dec
out
lea
sub
adc
sub
roll
push
push
shrb
mov
add
add
testb
xor
add
das
add
dec
lea
loopne
or
jle
and
les
int3
movl
jp
adc
jecxz
clc
push
mov
inc
mov
adc
stos
dec
fadds
std
cwtl
dec
fdivrs
sub
adc
mov
adc
adcb
and
sub
push
mov
mov
test
or
test
jne
loope
nop
inc
push
mov
cmc
pushf
iret
add
add
nop
mov
mov
sub
and
jmp
into
in
outsb
add
cmp
lret
daa
add
in
insl
int3
mov
fs
insb
add
dec
cmp
sbbb
fildl
cwtl
lods
mov
imul
rorb
out
xor
fucomi
sbb
cmc
push
test
push
cmp
repnz
and
or
add
sbb
xlat
lock
add
lret
and
enter
movsb
ret
cmp
adc
aad
add
adc
iret
mull
clc
sub
stc
fcmovnb
hlt
jb
ror
das
or
and
adc
decb
fwait
jmp
bswap
sbb
push
sub
pop
sub
sub
add
mov
outsb
pop
push
push
push
addr16
in
mov
movsb
fldenv
es
add
loope
push
pusha
xor
ss
cltd
add
xchg
inc
enter
sub
push
jo
inc
or
cmp
insb
scas
jb
lcall
mov
sti
and
push
jmp
or
mov
dec
inc
add
sahf
sahf
cmpsb
mov
jne
inc
bound
pusha
mov
ret
pop
pusha
aaa
lcall
sbb
sub
pop
and
add
add
jne
jae
movsb
clc
rcl
mulb
inc
add
in
pop
jle
adc
repnz
sub
adc
push
ljmp
jne
mov
in
out
scas
add
insb
in
imul
jecxz
add
and
or
mov
popf
shl
add
add
ret
testl
cmp
rorl
popa
js
xorl
jno
lea
mov
jmp
mov
add
in
sbb
mov
adc
jne
xchg
fxch
aad
dec
mov
jno
js
mov
and
sub
xor
pop
add
or
iret
jl
add
ss
add
inc
in
addl
movsb
push
inc
les
dec
mov
stos
dec
in
rcll
shll
imul
sbb
dec
jmp
dec
and
out
sahf
add
and
imul
sub
ss
das
test
jecxz
push
shll
sbb
popf
add
sbb
into
mov
pop
pop
adc
adc
sub
cwtl
cmpsl
inc
repnz
ss
add
out
push
jbe
add
add
sarb
sub
aad
xchg
xchg
lods
push
mov
shrb
stc
mov
fsubs
int3
push
push
push
popa
in
in
pop
push
divl
push
ficoml
lds
mov
stc
xchg
sbb
add
es
ljmp
mov
int
sbb
imull
in
xchg
nop
add
pop
out
pushf
sbb
cld
and
jle
enter
movsb
adc
xor
ret
rorl
or
xor
mov
push
mov
push
or
es
cmp
sub
cli
mov
shl
or
mov
das
cmc
sub
add
aaa
sub
xchg
inc
cs
scas
lods
sbb
push
fsubrl
fisubrl
je
test
mov
inc
dec
int
insl
inc
test
jmp
adc
and
movsl
insl
loop
call
out
shrl
enter
pusha
dec
nop
jg
fldl
nop
scas
pop
sarl
xchg
lods
sub
das
rcrb
repz
das
imul
js
xor
stc
jecxz
jmp
adcl
or
inc
lahf
lret
add
add
ret
mov
fcomps
adcl
lahf
stos
sub
sbb
or
cld
movb
std
movsl
jge
dec
es
adc
xchg
in
push
dec
andb
add
pop
or
mov
add
es
pop
sub
xchg
add
roll
loopne
outsl
cmp
cmp
jle,pt
xlat
sub
lcall
or
push
mov
mov
jl
add
aam
ljmp
pop
sbb
shlb
in
iret
push
push
pop
das
mov
cmpsb
mov
push
stos
sbb
aad
add
outsb
dec
outsl
int3
testb
dec
inc
sub
jecxz
inc
adc
sbb
and
mov
mov
or
ret
and
mov
leave
popf
dec
scas
mov
add
push
sbb
mov
movsl
mov
lods
std
mov
stos
mov
xlat
les
or
insl
loopne
push
lahf
add
sbb
and
jnp
jmp
sbb
xchg
dec
sub
bound
xchg
add
add
push
push
dec
js
scas
pop
imul
sahf
in
mov
mov
movsl
jnp
add
push
and
lea
stos
fsubs
test
stos
imul
cmp
jae
xchg
pop
adc
leave
leave
test
cmp
or
add
cmp
lea
xchg
lahf
inc
cmp
cmpsl
iret
pop
jns
nop
mov
cli
pusha
loopne
out
les
mov
mov
popa
mov
jg
dec
out
out
mov
lret
xchg
cs
in
add
mov
ret
jae
add
arpl
add
in
add
jmp
cli
xor
add
scas
out
icebp
add
mov
push
mov
lea
jns
cs
add
jbe
mov
add
in
add
cmp
pushf
in
pop
jle
gs
pushf
repz
and
out
out
add
dec
je
testb
mov
or
push
inc
lds
sbb
loopne
rcrb
test
aam
sbb
cs
add
sbb
or
jnp
cld
aaa
lcall
jle
in
dec
jp
iret
jecxz,pn
add
in
mov
sbb
scas
add
mov
nop
adc
ds
mov
xor
sub
lods
fld
lahf
insl
daa
mov
int3
repnz
pop
cwtl
iret
rcrl
jle
mov
clc
addr16
loop
cld
xchg
mov
in
mov
popf
mov
sub
jmp
or
add
jo
leave
mov
sarb
mov
mov
push
adc
mov
in
adc
mov
or
jmp
add
subb
popa
mov
inc
mov
mov
mov
das
and
scas
in
inc
fwait
sub
cmp
mov
fistps
lods
add
call
aas
push
add
fisttpll
mov
adc
sub
inc
mov
push
pop
push
in
or
rorl
inc
pop
sub
jge
sti
push
xor
sub
into
xchg
lock
scas
jns
dec
stc
jb
dec
mov
cli
pop
mov
add
leave
psraw
xor
cmc
sarl
iret
xchg
test
mov
mov
daa
add
mov
fimuls
out
test
out
jbe
sbb
les
mov
stos
mov
mov
add
mov
js
ficomps
cmp
add
sub
push
jbe
mov
jg
mov
and
pushf
inc
int3
addr16
adc
loope
sbb
iret
repnz
es
dec
or
dec
and
bound
lret
jl
xor
dec
jns
mov
or
jns
insb
add
xchg
pusha
mov
add
mov
test
cltd
add
pop
add
jle
sbb
cmpps
jmp
add
mov
add
rol
mov
aam
fisubs
in
movsl
aaa
mov
adc
jnp
sbb
mov
pop
or
setge
cltd
pop
push
cmp
mov
mov
in
cld
push
lock
push
pop
stos
icebp
clc
cs
fstl
cld
mov
push
ds
jg
or
rorb
test
add
add
ja
cli
mov
cmpsb
add
or
cwtl
xor
jl
pop
adcl
dec
jnp
js
fs
andl
pop
rcrl
add
adc
jbe
dec
into
sahf
push
sbb
mov
dec
mov
sarb
or
jns
adc
sub
fwait
movsb
outsl
or
adc
es
daa
sbb
arpl
imul
sub
jae
add
ss
cmp
lods
xchg
loopne
stos
jecxz
mov
xchg
in
add
adc
movsb
add
pop
xchg
push
and
add
daa
mov
adc
pop
mov
fs
xchg
mov
pop
bound
outsl
test
xchg
and
scas
iret
movsb
inc
test
inc
fnstsw
cli
jl
or
scas
aas
scas
std
mov
lahf
add
lds
add
add
addr16
jg
dec
ss
mov
add
out
sbb
mov
pop
popf
andb
xchg
or
std
jbe
mov
icebp
jno
lds
inc
mov
test
add
adc
lret
nop
xor
dec
in
lods
das
in
test
push
lods
push
shrb
pop
unpcklps
push
adc
pop
sbb
jne
mov
push
setl
or
add
add
mov
jne
cmp
and
mov
lods
xlat
or
lock
push
in
in
jnp
lret
out
lock
fnstenv
sahf
jge
clc
pop
cmp
test
cld
add
add
bound
dec
mov
adc
int
add
jnp
mov
sub
mov
add
test
adc
mov
ret
add
sahf
and
aam
cmpl
enter
sub
insl
cmc
push
call
pop
scas
push
jo
push
lahf
outsb
mov
sub
insl
cmp
push
cmpsl
sti
insb
xor
outsb
xor
inc
add
push
out
push
popa
pop
add
dec
pop
push
dec
push
cld
aaa
aaa
js
js
push
push
insb
xor
icebp
jne
lea
in
scas
into
cmp
lods
clc
sub
imul
add
sub
out
xchg
pusha
inc
std
pop
pop
add
pop
pop
pop
bound
or
add
jbe
add
inc
and
hlt
je
neg
mov
rorb
adc
adc
out
cmp
iret
cmp
ss
icebp
js
or
xor
mov
add
xor
cmp
jno
bound
cmp
sarb
add
mov
push
fstl
add
imul
out
push
test
es
mov
add
sahf
jg
inc
fstps
popa
pop
lea
add
add
fnstsw
pop
add
xchg
sbb
add
out
sub
mov
add
in
sbb
sub
jecxz
test
jbe
xchg
pushfw
xor
or
call
mov
push
popa
iret
mov
push
mov
push
and
add
add
push
pop
xor
add
shrl
push
fwait
aas
das
inc
in
pop
out
or
jmp
addr16
add
out
add
or
mov
hlt
mov
arpl
std
out
push
add
sbb
add
rorl
out
scas
xchg
jp
inc
add
jae
or
add
inc
fwait
lret
sar
movl
adcb
add
mov
notl
mov
lods
add
sub
lahf
cmpsb
xor
mov
or
or
mov
jbe
cmp
fwait
add
fs
stos
shl
add
in
addb
jnp
insl
sbb
insb
fisttpll
add
in
in
test
sub
and
mov
stos
pop
into
fwait
add
mov
cmp
ror
lret
sbb
dec
mov
cmp
push
scas
or
jne
push
mov
add
inc
sub
scas
jl
aam
aad
into
clc
mov
mov
and
mov
cmc
cmpsl
adc
xchg
js
addb
fwait
es
hlt
jns
add
frstpm(287
cmc
aas
add
add
out
mov
hlt
jmp
xchg
sarb
je
add
enter
mov
insl
lcall
lahf
clc
adc
xchg
dec
inc
dec
xchg
rolb
jmp
sahf
rol
inc
in
roll
mov
mov
add
dec
xlat
mov
pop
inc
lock
pushf
gs
jg
out
dec
xchg
xchg
push
pop
push
jne
lods
movl
sub
inc
add
les
xor
lods
xor
out
ss
test
lock
loopne
dec
pop
fstl
ds
add
jmp
cli
rclb
dec
add
add
insl
int
mov
add
push
xor
cmp
jno
dec
add
push
jmp
cmpsl
add
mov
xchg
pop
jb
incb
roll
mov
aad
clc
loope
add
mov
adc
mov
dec
sub
sub
sahf
test
mov
mov
insl
xor
jmp
jnp
lods
cmp
into
imul
movsb
enter
ret
mov
jne
sub
dec
push
dec
cltd
add
push
lahf
inc
xchg
scas
add
stos
ss
cwtl
and
jno
push
pop
inc
flds
stos
das
push
inc
fldenv
adc
fs
pop
pop
adc
xchg
stos
lock
fsubs
add
add
leave
aad
jb,pn
loop
xlat
adc
rcrb
mov
loopne
lea
mov
sub
pop
ja
inc
add
xchg
leave
cmp
push
xor
test
mov
dec
mov
add
mov
add
fwait
sbb
cs
call
shr
pop
shll
cmpsl
outsb
shrb
pop
les
ljmp
dec
roll
jbe
mov
push
and
leave
loope
filds
lds
fcmovbe
add
add
icebp
xchg
stos
mov
inc
ljmp
pop
dec
jmp
xor
je
mov
sbb
aad
jne
and
insl
add
testb
repz
xor
fs
pop
cld
add
push
fs
mov
fildll
fistpl
add
into
jge,pt
shll
add
pop
inc
or
inc
stc
lahf
or
je
add
add
lds
add
add
roll
adc
cmpsl
push
add
cmp
shrl
das
pop
jbe
sbb
outsb
adc
sbb
mov
ss
or
add
dec
andb
jp
rolb
icebp
cmc
lds
mov
movsl
add
mov
push
add
sarl
testl
add
adc
add
mov
add
movsb
shll
or
test
mov
scas
loope
sub
adc
adc
je
aas
jl
add
lea
out
mov
mov
enter
inc
mov
lret
mov
dec
mov
insb
jno
xchg
cmpsb
mov
scas
add
mov
int3
inc
mov
dec
shrl
dec
push
xchg
cld
test
das
xchg
mov
push
orb
xor
fisubs
push
mov
movsb
flds
popa
adc
pop
loop
mov
push
add
div
insl
faddl
orb
test
mov
ror
dec
jbe
cmp
sub
jo
xor
add
and
movsb
out
or
sbb
mov
mov
mov
in
movsl
xchg
sbb
adc
jne
dec
xor
xor
dec
scas
iret
enter
or
inc
bound
in
data16
icebp
es
push
arpl
add
repz
fs
sbb
stos
arpl
call
into
pop
adc
add
mov
inc
add
lret
mov
loop
popa
daa
add
mov
aad
sahf
divl
in
add
xor
call
pop
inc
imul
fsubs
or
push
inc
or
mov
xchg
decl
cmp
cmp
add
mov
xor
ds
pop
addb
mov
sbb
pop
add
jge
and
repz
cmpsb
sub
sbb
cmpsl
sub
ds
adc
push
popa
add
mov
xor
imul
jl
mov
push
jmp
xchg
shlb
add
sbb
std
cmp
jg
add
add
aaa
xor
or
mov
jl
fdiv
inc
js
dec
nop
push
dec
xchg
add
lods
ficoms
scas
mov
mov
add
fidivrs
cs
lret
ror
mov
mov
icebp
mov
enter
jno
sub
aad
nop
xchg
pop
xchg
cmp
push
scas
add
add
push
push
jmp
jbe
lret
mov
lds
or
mov
fsubr
call
in
adc
add
int
jmp
cltd
sbb
push
xchg
aad
inc
jp
mov
and
cli
and
inc
cmc
ja
dec
fisttps
jg
inc
dec
out
xor
stc
repz
xchg
push
pop
mov
sub
movsl
inc
jo
cmpsb
stos
outsb
imul
xchg
or
cltd
sbb
pushf
mov
jge
xor
jnp
xor
pop
jg
inc
xor
stc
pop
into
filds
test
mov
in
call
push
call
enter
xor
enter
inc
sub
jb
fst
repnz
rorb
lret
leave
xchg
dec
lret
inc
inc
imul
push
sbbl
dec
outsl
nop
dec
push
add
data16
mov
xchg
mov
outsl
add
ss
outsb
inc
mov
cmp
in
imul
mov
add
mov
pop
add
in
sahf
and
dec
xchg
add
dec
pop
push
mov
add
inc
xor
out
sub
jne
adc
inc
xchg
add
lea
aad
stc
add
movsb
mov
pop
out
enter
lds
add
inc
sbbb
and
movsb
cmp
and
dec
sarl
mov
cmp
fiaddl
out
add
imul
icebp
pop
pop
das
test
in
lret
fidivrl
pop
nop
subl
mov
int3
xchg
jmp
mov
xlat
mov
test
jp
or
pop
cmp
push
scas
inc
sti
es
in
cmp
sbb
flds
add
out
mov
or
lcall
std
ret
add
pop
xchg
lret
mov
add
jns
enter
imul
xor
insb
add
stos
jb
jmp
add
inc
test
mov
mov
aaa
xorb
mov
repnz
add
xchg
pop
dec
iret
mov
dec
mov
xor
leave
cld
loope
add
mov
jns
lahf
or
adc
jg
arpl
cmp
out
movsb
in
ret
imul
mov
stos
add
xchg
dec
imul
icebp
repnz
jle
call
add
sahf
jge
cld
dec
jns
pop
rcl
jo
data16
les
fs
push
aam
jecxz
test
mov
cltd
and
mov
mov
cltd
fsubrs
sbb
hlt
cmc
pop
sbb
dec
jecxz
cmp
mov
sub
xchg
imul
xor
dec
daa
or
mov
cld
dec
jmp
iret
sarb
dec
test
cmc
aam
mov
xchg
adc
shrb
das
pop
mov
cmp
xor
add
das
cltd
fsubr
cli
test
and
movsb
pop
sub
mov
sbb
outsl
dec
jo
movsb
arpl
dec
dec
xor
inc
iret
mov
mov
loope
out
repnz
ljmp
ds
jns
loop
cs
popf
cmpl
cwtl
dec
or
xchg
dec
ss
add
negb
aas
jl
loope
adc
cltd
pop
jne
inc
mov
loop
jl
aas
out
add
add
xchg
gs
push
add
test
mov
cmp
div
mov
jecxz
xchg
js
inc
cwtl
mov
jo
popa
ja
jbe
in
scas
mov
pop
dec
xor
pushl
mov
outsb
push
ficompl
lea
ret
icebp
xchg
xor
bndldx
inc
or
dec
mov
inc
in
cmc
sub
pop
in
fsubr
xchg
pop
insl
scas
xchg
test
fiaddl
lods
jle
mov
pop
das
roll
and
fs
add
lcall
dec
movb
mov
jle
sbb
ja
dec
test
push
cmpsb
push
aad
mov
shll
ja
sub
lahf
sub
test
sbb
mov
mov
push
shrl
mov
prefetchw
cmp
push
shll
mov
or
pop
jl
cmc
cmp
imul
sbb
fwait
subl
jecxz
repz
lea
mov
or
xchg
mov
inc
inc
dec
mov
inc
stc
xchg
dec
or
mov
jae
inc
sti
fldl
loop
sub
clc
fcoms
and
xchg
sbb
iret
adc
or
jb
jo
rorb
test
xlat
loop
jecxz
cmp
cmp
daa
je
gs
js
jp
xor
mov
in
lret
adc
cmp
add
sub
nop
in
and
and
rcrl
sbb
adc
push
push
shll
in
sub
ljmp
outsl
rorl
push
xor
mov
je
xchg
xchg
or
or
sub
push
ret
clc
or
push
out
mov
sbb
jg
es
pop
loop
push
gs
lcall
dec
sub
movsb
fsubl
ds
dec
add
add
add
push
dec
xor
xchg
scas
mov
add
es
jns
cmp
add
aad
pop
dec
mov
add
int3
dec
push
inc
add
mov
push
cmp
scas
xchg
jbe
aad
add
out
xchg
movsb
add
mov
shll
cmp
adc
xchg
or
pop
popa
add
xchg
repnz
insb
sbb
loop
dec
jp
xor
push
fcmove
popl
inc
insl
adc
xor
push
sub
xor
addr16
push
subl
ss
gs
adc
dec
mov
idivb
lahf
cmpsl
add
mov
push
aaa
jae
or
notb
mov
fs
add
add
jmp
test
in
mov
call
inc
das
rclb
sahf
add
inc
mov
mov
add
xor
add
xchg
rol
fucomp
roll
cmp
add
bound
add
mov
add
cld
inc
out
sahf
xorb
into
test
or
add
dec
orb
add
mov
mov
fst
xlat
push
lret
jecxz
add
push
in
cli
add
add
add
inc
xor
fnsave
ljmp
lods
jle
int3
popf
add
ud1
add
mov
mov
push
or
ror
push
add
jg
test
sub
jns
pop
repz
xlat
sub
xchg
adc
enter
cmp
decl
xchg
or
lea
fldl
imul
add
or
out
mov
das
call
push
std
fmull
fldcw
cmp
mov
shr
aas
test
add
dec
ret
add
out
imul
pop
scas
push
out
jge
sub
fisubrl
sub
pop
sti
mov
aam
movsl
pop
jecxz
mov
push
mov
cwtl
int3
or
or
jae
cmp
and
mov
push
inc
push
in
xchg
add
push
sub
sub
stos
jne
shrb
cmp
mov
pop
pop
sub
add
sbb
les
insl
inc
pop
dec
icebp
inc
sub
push
add
dec
jo
pop
leave
movsb
sbb
xor
roll
stos
dec
mov
add
xor
or
add
call
mov
add
cli
enter
xchg
add
pop
fldl
arpl
sub
scas
lock
and
and
mov
aad
in
sbb
push
xchg
mov
mov
enter
rcrb
xchg
inc
sub
add
iret
xchg
int
push
enter
sub
mov
mov
loope
mov
fwait
and
fldl
cltd
addr16
repnz
xchg
add
orb
dec
mov
xchg
hlt
and
and
xchg
test
xor
add
out
push
stos
dec
add
loop
stos
sub
adc
xor
mov
xchg
sbb
cmp
lea
ds
jb
xor
xchg
push
push
icebp
je
mov
add
add
and
stos
cmp
scas
mov
lea
out
cmpsb
jecxz
sbb
and
pop
or
mov
add
rcrb
lcall
pushf
cmp
xchg
movsb
mov
ljmp
add
inc
mov
push
mov
insb
mov
add
ss
jmp
out
add
push
lret
xchg
jae
pop
push
mov
xchg
jno
popa
mov
hlt
mov
call
out
movntps
mov
adc
jle
ds
lahf
or
sar
lret
push
jo
repnz
shll
jmp
push
push
mov
inc
in
add
cmpb
pop
mov
or
cld
and
add
or
cmpsl
test
and
pushf
imul
test
shrb
cmc
cld
lods
sbb
movsb
fbld
add
push
scas
xchg
mov
rcrl
adc
pop
push
push
push
les
jle
je
xor
jno
sub
pop
add
fistl
xchg
test
mov
mov
movsb
into
add
les
aas
xorl
cwtl
add
cmp
mov
iret
inc
sahf
jb
repnz
les
and
jo
sahf
and
and
cmpsb
mov
or
adc
mov
cmpsl
imul
sub
popf
cmp
test
dec
xchg
out
imul
repnz
xchg
add
fdiv
jbe
add
loop
xchg
in
insb
lods
adc
stos
insl
mov
push
or
fisttps
push
jl
or
sbb
sbb
xchg
add
dec
rolb
ret
mov
add
inc
and
pop
rcrb
cmc
stc
test
sub
or
scas
sbb
test
fs
pushf
jnp
mov
loopne
xor
in
push
mov
push
add
and
orb
dec
lods
out
jbe
fcmovnb
xchg
pop
dec
dec
jb
dec
cs
test
fs
jmp
jbe
test
pop
lcall
lret
nop
xchg
add
fisttpl
outsl
and
or
dec
jb
mov
ret
sarl
les
mov
add
and
es
call
jmp
jno
stos
aam
lods
mov
pushf
mov
xchg
cld
lods
test
pop
inc
stos
inc
jmp
outsl
jnp
frstor
jmp
add
cmp
out
stos
jp
push
sub
mov
add
repnz
shlb
add
out
jae
cmpsb
pop
les
jbe
enter
cmovb
loop
std
call
bound
xchg
iret
loope
mov
repz
jp
outsl
and
and
icebp
hlt
or
pusha
aas
push
or
jbe
decl
push
das
orl
pop
test
xor
clc
fs
push
sub
add
adc
lret
data16
neg
jecxz
repz
sti
scas
xor
mov
arpl
leave
xchg
dec
xchg
out
sbb
jno
scas
sub
int
jmp
mov
add
mov
rcr
int3
insl
add
or
add
hlt
xchg
lahf
or
aad
lcall
add
in
mov
cmp
test
and
popa
pop
in
dec
fbstp
add
leave
scas
inc
sti
dec
incb
addl
inc
mov
andl
jb
pop
aaa
repz
cmp
add
xchg
dec
add
and
or
jnp
ljmp
xlat
cli
arpl
jns
cmp
enter
shr
andb
shlb
js
paddw
mov
mov
xor
mov
out
add
outsl
call
jecxz
add
es
movsl
add
cmp
xchg
push
int3
fistl
insl
xchg
inc
daa
mov
add
inc
mov
daa
jbe
mov
jl
test
out
shrb
sub
mov
mov
mov
daa
mov
push
mov
stos
or
sahf
ret
ret
mov
xor
in
daa
jmp
and
cmpsb
lea
daa
xchg
sub
inc
loop
xchg
jmp
xor
jge
repnz
in
popa
push
sbb
mov
cmpsb
jnp
add
add
add
scas
sbb
add
rcrb
and
adc
xor
adc
pop
sahf
ljmp
js
adc
inc
pop
outsl
or
insl
aas
fsubrl
int
add
dec
cwtl
add
xchg
cmc
add
imull
jmp
hlt
sbb
scas
cmp
add
add
in
clc
xor
cmp
enter
int
leave
ss
aaa
inc
cmp
jb
pop
push
push
dec
stc
sub
sahf
add
jecxz
repz
mov
aas
cmpsl
mov
jo
dec
cltd
jb
out
adc
push
push
xchg
mov
add
add
fiaddl
adc
clc
addr16
stos
lret
push
enter
push
jno
or
add
ss
and
mov
loopne
xor
xchg
pushf
js
add
lds
lea
add
jge
ljmp
mov
stos
jmp
mov
jl
cmpb
lock
inc
sub
lcall
pop
fcomp
mov
incl
andb
inc
sti
push
lahf
sbb
das
roll
in
add
jb
arpl
movsl
add
mov
sbb
pop
insl
cmp
imul
sub
pop
dec
ret
xor
sahf
mov
mov
enter
mov
clc
jnp
rclb
add
mov
repnz
push
mov
add
das
push
adc
mov
mov
lea
mov
mov
mov
cmc
inc
xor
push
adc
dec
mov
mov
ficompl
add
xchg
pop
in
add
fmulp
xchg
xchg
cmp
mov
add
int3
add
sbb
ret
sbb
inc
sub
repnz
push
dec
pop
scas
mov
mov
mov
test
pop
cmp
push
sub
xor
push
out
mov
push
sbb
leave
add
pop
or
push
hlt
sub
mov
test
and
in
add
dec
addr16
call
dec
out
push
dec
call
les
pushl
or
lock
outsl
lahf
pop
inc
lea
in
hlt
addl
push
push
fcmove
jno
adc
enter
mov
in
inc
fadds
sub
mov
insl
jne
sahf
xchg
sarb
push
inc
mov
push
sahf
cld
add
xchg
arpl
mov
repz
enter
daa
sbb
cmp
push
mov
outsb
in
push
mov
lahf
fmuls
test
rcrl
jmp
inc
mov
scas
push
inc
enter
add
jg
and
dec
mov
xchg
inc
inc
push
jb
das
in
add
and
faddl
cs
or
out
jp
adc
stc
sbbb
xlat
out
push
inc
sub
negl
pop
cld
add
cmc
out
xorb
pop
test
add
shrb
lcall
imul
test
aam
arpl
dec
push
cwtl
fisubrs
sub
push
das
lret
std
push
or
clc
mov
xor
lret
push
and
push
pop
loopne
xchg
stos
xor
lds
stc
cmpsl
jmp
cmp
shrb
movsb
jmp
cli
ret
sub
test
movsb
out
sbb
test
or
xchg
sti
nop
int3
mov
add
push
icebp
cmpsb
adc
test
push
outsl
xor
push
add
jae
jbe
or
arpl
adc
mov
je
lock
inc
add
cmovle
aad
sbb
add
lret
testl
lods
pop
add
xor
outsl
loope
xor
lcall
pop
and
inc
sub
mov
inc
mov
pop
movsb
sarl
pop
push
mov
dec
mov
insl
adcb
pop
lods
cmpsb
xchg
dec
mov
or
jb
mov
sub
or
lcall
les
insl
push
jno
xor
mov
lcall
addl
inc
outsb
scas
out
jo
jnp
push
mov
leave
add
sbb
push
pop
std
and
xchg
fsts
mov
pop
push
push
movsl
pop
leave
adc
outsl
popl
dec
in
mov
icebp
daa
je
int
jb
icebp
dec
outsl
jns
insl
mov
or
inc
out
xchg
cmp
cmp
cltd
add
sub
jl
loope
inc
mulb
lret
into
enter
jle
imul
inc
sub
pop
add
dec
mov
mov
jle
cmc
sahf
add
add
add
scas
cmp
ret
push
add
cs
jge
add
out
mov
int
jnp
mov
cld
imul
addr16
pop
xor
aam
mov
pop
and
sbb
mov
in
mov
mov
je
xchg
pop
add
mov
push
and
mov
sti
mov
aaa
mov
add
cmp
cmc
mov
mov
mov
loopne
inc
lcall
outsl
pushf
fs
out
mov
mov
icebp
pop
ret
add
lods
icebp
xor
cmpb
pushl
jmp
sbb
jne
aaa
cwtl
lods
shlb
add
add
aas
add
jmp
add
jns
ds
adc
jmp
out
jecxz
add
add
lds
sti
sbb
fdivrs
adcb
lret
sbb
in
add
js
mov
add
lret
sbb
push
movb
in
lock
xchg
rorl
addb
and
mov
rol
xchg
decl
adc
pop
add
arpl
mov
or
add
leave
or
mov
push
xor
pop
and
add
inc
test
sbb
sbb
sbb
rclb
fldenv
ss
or
pop
pop
mov
les
popl
add
jae
loop
add
add
out
add
movsl
adc
imul
nop
dec
aad
das
imul
lock
mov
add
xchg
cmp
jbe
inc
lret
mov
shll
add
add
xor
push
pusha
cwtl
or
ja
mov
sar
stos
pop
out
and
stos
pusha
setb
divl
add
mov
or
ret
add
xor
repnz
add
cmp
add
dec
flds
pushf
cld
test
add
fs
lret
gs
rol
push
stc
jecxz
mov
and
ret
pop
cmp
inc
xor
sub
int3
or
lock
jmp
gs
xchg
push
mov
mov
pop
fsubr
mov
cli
stos
xchg
mov
fnstsw
add
jbe
repnz
sbb
jb
rclb
aam
rol
lcall
xlat
xchg
and
imul
loop
xchg
cmp
cmp
jp
mov
add
icebp
xor
push
xor
cmp
mov
into
mov
push
movl
mov
inc
xchg
leave
call
aam
sub
in
lods
cmp
add
mov
in
nop
or
jmp
mov
push
js
cmc
lret
arpl
or
cmp
outsl
add
dec
test
les
scas
stos
add
jecxz
add
lret
stos
add
dec
lods
fdivrs
add
hlt
arpl
xor
mov
dec
int3
fcomps
or
mov
int3
aas
push
shll
out
ret
cmp
loopne
add
mov
mov
imul
mov
out
cmpsl
je
js
push
test
push
push
test
pop
clc
test
push
dec
xchg
sbb
xchg
js
icebp
add
mov
scas
das
test
stos
mov
lea
in
outsb
dec
repnz
add
hlt
push
ffree
pop
cmpsb
push
popa
lea
jbe
cmp
leave
mov
test
mov
mov
cwtl
dec
mov
ret
mov
shlb
lods
imul
fldt
sbb
adc
cmc
int
test
pop
out
test
gs
sub
or
sbb
out
movsl
cwtl
jb
fcmovb
mov
lods
rcrb
lock
scas
out
data16
jecxz
cmpsb
and
xchg
pushf
add
add
mov
cltd
sbb
sldt
push
jecxz
ss
mov
inc
add
inc
mov
cmpsb
xor
and
arpl
mov
in
sub
adc
stc
lods
mov
mov
sub
inc
add
loop
cmc
inc
fwait
ds
dec
or
popa
or
lret
lahf
addr16
mov
add
pushf
outsl
mov
push
jnp
add
jp
dec
pop
int3
sub
in
dec
sub
xchg
ljmp
mov
cmp
iret
inc
mov
jmp
xor
mov
push
sbb
js
push
xor
aaa
xor
jp
les
xor
jp
mov
shll
mov
lea
push
sarb
cld
lock
add
sbb
sbb
lea
fists
dec
add
mov
loop
cli
call
lret
pop
fs
fldt
add
add
subb
push
pop
insb
arpl
mov
add
repz
lret
popf
cwtl
movsl
das
dec
popf
add
inc
popf
sti
add
fisubrs
imulb
lret
mov
xchg
sub
inc
popf
in
lods
mov
fcompl
jnp
or
dec
sarb
fidivl
in
lret
int
xor
xchg
pop
sti
repz
pop
and
pop
int3
cmc
jae
push
insb
xchg
outsl
add
push
icebp
stos
add
inc
push
rorl
add
or
mov
adc
add
aas
sbb
dec
sub
jno
cmpsl
out
adc
xor
mov
and
mov
cli
imul
sub
int
dec
fisttpl
leave
loopne
or
add
jg
push
out
cli
test
repz
push
fwait
dec
loop
ficoml
rclb
out
out
mov
and
adc
cmp
cmp
mov
sbbb
jae
dec
test
dec
mov
add
mov
jecxz
xchg
or
and
mov
jnp
mov
and
push
add
or
mov
or
add
and
scas
rcl
or
or
int
jae
adc
or
jle
stos
shll
jmp
sub
inc
out
subb
sbb
add
mov
xor
aad
sub
mov
inc
into
push
dec
xchg
scas
mov
ret
mov
loop
jge
adc
or
ds
or
les
imul
subb
jp
xchg
dec
or
mov
or
ret
pop
fstl
jge
jecxz
shll
add
dec
push
or
xchg
out
jmp
inc
xchg
or
in
movl
mov
add
inc
lret
testb
add
sahf
add
aaa
dec
add
iret
or
add
push
sub
pop
pop
insl
mov
push
push
add
push
push
jle
xchg
adc
lcall
pop
add
lea
filds
and
push
lahf
cmc
mov
cmpsb
cld
jbe
sub
pusha
xor
add
sub
in
sub
mov
jo
aam
jb
sbb
iret
pop
daa
xor
movsl
lgdtl
xor
pop
add
mov
inc
stos
and
insl
sbb
jge
add
or
dec
lods
dec
jle
repz
sbb
stos
mov
push
sbb
mov
gs
inc
pop
add
pop
loope
add
jb
push
jecxz
sbb
movl
in
test
lea
jecxz
lods
call
xchg
pop
lcall
popf
mov
mov
enter
sarl
das
mov
les
xorb
add
pop
rorb
push
dec
lea
imul
cltd
cmp
sub
add
fsubl
xlat
shll
add
mov
fdivrl
add
popf
push
add
mull
fwait
lret
xchg
sub
cmp
aas
dec
dec
in
or
ret
sub
js
mov
pop
and
pop
aas
jb
push
pop
dec
test
mov
mov
push
dec
inc
xchg
or
adc
xchg
add
test
jb
dec
and
pop
stos
test
test
enter
shlb
push
repz
add
test
int
pop
push
sub
xlat
jb
aaa
pop
fwait
pushf
mov
out
gs
rorl
addb
xchg
add
add
jnp
adc
aas
mov
mov
xchg
xor
and
xchg
xchg
test
push
dec
mov
mov
xor
adc
adc
jnp
inc
or
fidivrl
mov
outsl
dec
or
je
data16
stc
push
leave
fs
cmp
add
add
rorb
jle
sub
jg
test
popa
cmp
add
sub
pop
cmp
cs
pop
imul
or
xchg
xor
add
das
push
add
and
jnp
xor
jle
out
notl
inc
divb
pop
hlt
stc
lcall
adc
or
out
or
add
repz
ss
mov
fstpt
sub
std
xchg
fsubl
in
mov
lahf
stc
call
iret
or
add
stos
nop
and
lds
enter
int
ds
add
gs
sahf
dec
mov
test
jl
jle
mov
cmpsl
sbb
inc
hlt
add
gs
or
test
movsb
xchg
aam
add
xchg
orb
fstp
test
xchg
and
and
jbe
fistpl
imul
test
lahf
mov
add
cmp
add
mov
mov
aas
lret
or
inc
mov
rorb
push
jb
xchg
sbb
add
ljmp
popf
fbld
test
push
cs
sub
sub
imul
mov
mov
sub
int
jge
repnz
dec
into
sahf
dec
insl
ss
mov
cmpsb
xchg
or
or
mov
mov
in
mov
repz
xchg
add
xchg
pop
dec
shll
or
out
pop
adc
jne
mov
add
jo
add
cmpsb
add
imul
xchg
inc
xorl
xlat
dec
mov
out
fistpl
sbb
outsb
in
and
add
inc
mov
lock
add
pop
push
out
out
mov
lret
stc
jae
popa
or
cmp
and
add
mov
int
xor
dec
in
xchg
out
add
loopne
movsb
mov
or
push
mov
jnp
sub
into
fs
stos
icebp
add
outsb
pop
pop
leave
xor
push
xchg
sbb
add
add
xchg
add
pop
add
sub
cmp
or
fdivrl
push
add
popa
dec
out
inc
adc
mov
adc
in
out
lret
sbb
mov
test
insl
mov
mov
fcmovbe
mov
imul
dec
mov
dec
sbb
in
icebp
bound
cld
int3
iret
sub
pop
notb
loopne
push
pop
add
add
xlat
cli
and
scas
stc
es
mov
stc
ret
sub
xchg
loopne
loop
push
roll
push
lds
scas
pslld
fdivr
orl
xor
loop
sub
add
outsl
and
out
add
es
scas
ja,pn
gs
sbb
in
xchg
sbb
fidivrs
je
fistps
je
add
dec
inc
sub
dec
into
or
cltd
adc
data16
sbb
pop
jl
adc
sbb
xlat
jbe
xchg
rcr
lahf
test
hlt
js
xor
sub
inc
mov
lret
or
fimull
cwtl
inc
outsb
dec
dec
add
add
and
arpl
mov
cwtl
or
adc
imul
imul
add
ljmp
cmp
mov
cwtl
mov
or
insl
mov
inc
mov
pop
loopne
inc
xchg
pop
repnz
in
xlat
insb
outsb
xchg
inc
jp
add
dec
xchg
data16
ret
mov
shlb
inc
push
sbb
mov
push
daa
inc
pop
and
ret
jae
lea
das
dec
or
addr16
jge
xor
mov
aam
insl
movsl
xor
cwtl
loop
ret
imul
imul
sbb
popf
push
rorl
mov
jg
or
into
mov
cli
or
mov
inc
add
or
add
inc
pop
inc
cmp
cmpsb
in
cmc
pop
and
orb
pop
sub
add
mov
xlat
adc
testb
adc
add
add
mov
add
jns
orl
cmp
push
add
and
sub
insb
pop
cld
or
add
jmp
out
scas
sbb
adc
aas
push
and
or
mov
mov
sarl
jmp
test
popa
sti
or
bound
add
jmp
stos
in
fistpll
inc
dec
push
mov
mov
mov
jge
enter
cltd
add
lods
sbb
xchg
jns
js
test
fcmovnbe
shrb
pop
lret
jne
mov
mov
das
sub
or
subb
sti
out
les
xchg
sub
cmp
icebp
push
jb
daa
inc
cmpsb
sub
jle
push
cmp
kmovw
add
xchg
popa
adc
inc
add
mov
pop
and
or
inc
lea
js
stos
fistpl
add
lods
test
repz
xor
adc
loope
add
add
add
iret
dec
and
out
adc
cmp
pushf
repz
adc
fdivs
popl
cmp
frstor
aas
ss
dec
aaa
xor
and
les
or
adc
in
jg
or
xchg
icebp
and
lock
add
xchg
inc
inc
in
xchg
in
fdivr
add
sahf
adc
adc
adc
pusha
or
fiaddl
rorl
cmp
push
rcll
fidivrl
sbb
jg
sub
cmp
xchg
jl
cmc
out
pushf
lret
in
add
mov
push
test
add
inc
adc
les
dec
daa
scas
enter
add
xchg
xor
mov
xchg
adc
insb
cmp
cmp
movsb
mov
and
sbb
push
into
in
iret
add
pop
std
add
pop
out
inc
mov
xchg
add
and
add
xchg
enter
add
lds
and
mov
mov
lcall
data16
inc
imul
aad
pop
dec
movsb
add
add
cmp
aam
rcrl
or
out
int
sbb
xchg
mov
test
ret
out
push
xchg
add
dec
cmp
add
add
aas
scas
push
lret
test
leave
dec
mov
scas
sbb
lds
rcrb
push
add
test
xchg
push
lds
bsf
dec
add
xor
push
add
aam
sbb
mov
mov
push
pop
dec
add
mov
xchg
add
shlb
sbb
test
jmp
xchg
sbb
add
lock
or
pop
test
add
mov
sahf
mov
in
iret
imul
ljmp
inc
sub
sarl
inc
add
lahf
xor
xor
js
fmull
jne
es
adc
pop
push
jbe
jg
add
pop
out
scas
loop
add
in
mov
cmp
add
add
push
imul
mov
clc
popf
lds
jmp
dec
adc
daa
push
dec
sarb
push
call
cmp
mov
mov
jmp
push
ror
lret
add
dec
add
add
push
inc
rcrb
or
mov
frstor
int3
mov
and
data16
adc
decb
nop
cmpsb
add
xchg
add
dec
xchg
xchg
les
jb
test
out
je
mov
xor
inc
in
dec
cltd
cmp
pop
and
mov
leave
out
cs
add
stos
xlat
xchg
cli
xchg
sbb
add
adc
or
arpl
dec
add
dec
mov
add
and
xchg
add
fcomp
add
clc
mov
add
add
loope
and
adc
outsb
adc
mov
shl
fsubrs
mov
pop
andl
mov
js
shll
fadds
and
leave
scas
or
jne
loop
insl
add
outsl
out
push
mov
add
add
shrb
and
add
in
lock
dec
les
ret
inc
jle
add
or
adcl
popa
out
in
push
lods
and
cmpsl
cld
shl
and
das
repz
sub
push
xchg
dec
xor
mull
pop
fildl
loop
out
jno,pn
cmp
mov
nop
addr16
clc
aad
cmp
xchg
movaps
xchg
jno
mull
enter
inc
lret
mov
mov
xor
or
loop
and
push
fimull
jno
es
in
jno
daa
cmpsl
and
repnz
pushf
mov
cmp
out
and
or
into
cmp
popf
mov
jne
xchg
popl
mov
lock
gs
iret
add
add
mov
add
mov
mov
imul
lods
pop
inc
mov
mov
sub
inc
inc
pop
or
or
pop
add
jle
lret
dec
xor
push
test
sub
and
or
mull
shrb
add
adc
ja
push
lea
inc
mov
sti
imul
bound
imul
cltd
add
or
sub
test
paddd
cli
mov
ds
movsb
dec
or
pop
andl
mov
mov
dec
out
adc
add
andl
add
mov
ljmpw
call
in
das
add
dec
add
add
js
add
roll
into
inc
mov
addl
fcomps
or
pop
mov
xor
add
cmp
jbe
push
inc
and
bound
imul
push
loope
and
add
sbb
cmp
js
add
dec
cmp
push
xor
inc
adc
mov
das
and
or
outsl
daa
sub
ds
mov
add
push
movsb
leave
sub
sbb
pop
test
out
decl
or
gs
cli
into
std
dec
and
xchg
fucom
xor
adc
fbstp
adc
imul
into
xchg
and
insl
in
das
xchg
pop
inc
or
mov
inc
movsb
add
fcomip
mov
call
add
rolb
sti
dec
repnz
icebp
sbb
add
or
xor
lret
aaa
icebp
andb
xchg
jbe
fnsave
insl
push
jno
inc
mov
stos
je,pt
xchg
popa
add
int3
sub
xor
dec
push
fsubp
cld
pusha
imul
iret
cmp
jne
sbb
xor
mov
xorb
xor
xchg
cmpsb
sbb
jnp
xor
sub
lcall
in
add
xor
out
push
int
loop
push
fstpl
xchg
dec
xchg
in
add
dec
cmc
out
xor
test
pop
clc
and
sbbl
add
cmp
adc
inc
cs
imul
shr
cmp
call
mov
push
inc
adc
pop
ret
or
mov
daa
inc
mov
fstp
mov
imul
or
xor
mov
clc
pop
cltd
data16
rclb
fidivrl
and
mov
repz
cmpsb
fwait
mov
fists
ud1
das
test
nop
or
jne
mov
xorl
and
rolb
test
and
insb
sub
push
mov
push
call
push
nop
jnp
clc
jae
imul
cmpsb
cmp
jnp
mov
enter
enter
enter
add
dec
fnstenv
or
xlat
hlt
enter
sbb
mov
mov
cmp
subb
inc
cmc
push
dec
and
mov
lods
add
ja
and
out
outsl
cmp
or
fisubl
mov
lock
lea
add
xor
popf
mov
out
cltd
mov
sbb
js
fsubrl
mov
inc
daa
add
sbb
add
add
mov
sbb
mov
dec
xchg
call
stos
inc
andl
scas
lahf
out
mov
xor
stc
mov
enter
addb
fwait
clc
jnp
pusha
push
inc
jbe
xchg
shlb
lahf
push
mov
push
xchg
add
xchg
lods
jecxz
ds
cli
mov
mov
inc
mov
dec
pop
dec
mov
dec
repz
mov
xchg
xor
pusha
out
xchg
jbe
int3
fcompl
popa
or
ficoms
jno
insl
sub
inc
loop
je
adc
push
cmp
inc
jno
adc
repnz
aam
pop
pop
dec
test
jne
dec
notl
adc
inc
add
sbb
add
mov
jnp
in
out
xchg
popa
leave
fucomip
icebp
lods
adc
daa
lret
inc
icebp
sti
and
int
ficoms
xorb
sub
dec
lret
jecxz
or
mov
decl
add
hlt
out
fcoml
loope
xchg
sub
imul
scas
repnz
cmpsl
mov
jge
mov
shrd
insl
mov
test
test
inc
test
push
lahf
sbb
cmp
xor
push
test
insb
cmp
addr16
shlb
and
cltd
clc
ljmp
jbe
add
add
scas
or
fsubrl
inc
cmc
and
out
pop
gs
pop
pop
shr
inc
outsl
outsb
mov
mov
fwait
in
mov
dec
stc
sbb
int3
inc
push
inc
or
lods
test
push
cs
jmp
sbb
mov
repz
shrb
push
xor
mov
sub
andl
sbb
rcrb
inc
mov
or
sbb
loopne
adc
and
cwtl
imul
dec
xchg
inc
repz
call
rorb
xlat
mov
test
dec
cmp
add
js
jp
std
insl
das
repnz
outsl
lds
lret
push
std
xchg
stc
addb
int3
xor
cs
xchg
enter
pop
push
addr16
out
daa
mov
mov
cmp
cltd
ja
or
jg
mov
or
mov
pushf
sbb
mov
repz
and
adc
xor
adc
add
push
sbb
adc
mov
out
notl
lds
data16
incb
or
inc
mov
lret
shll
jo
push
cmpsb
mov
icebp
aad
mov
sti
fwait
push
in
stos
jl
inc
xor
jne
adc
mov
ljmp
call
dec
sbbl
inc
dec
lods
mov
cli
enter
pop
cmp
shrl
ljmp
xchg
bound
aad
sahf
je
xchg
repz
and
cmp
xor
jp
fstps
and
int
fwait
add
inc
pop
add
inc
filds
adc
xchg
sub
test
imul
mov
imul
jmp
inc
das
xor
adc
or
inc
inc
lock
ds
mov
push
ret
lret
inc
icebp
add
sti
js
outsb
inc
sub
add
push
jl
mov
jl
dec
xor
ret
andl
jnp
dec
or
fmuls
xor
add
roll
out
mov
popa
inc
mov
add
and
pop
cmp
in
arpl
leave
stc
fsub
add
inc
fbld
xchg
scas
cmc
push
add
int3
inc
mov
add
inc
mov
mov
test
add
pop
or
push
aad
cmpsl
mov
mov
add
pop
incb
push
addb
enter
push
adc
in
lds
cli
imul
mov
add
add
push
mov
sbb
es
xchg
add
jo
and
sub
mov
push
add
sub
pop
push
sbbl
add
jle
or
dec
ljmp
int3
pop
add
xchg
add
aad
mov
cli
add
add
mov
adc
iret
xchg
cmpsb
iret
push
add
add
inc
adc
lret
movnti
add
jmp
xor
xor
imul
insb
jb
cmc
scas
aad
sub
cwtl
push
jmp
sub
hlt
js
aas
adcb
jne
gs
call
es
or
sbb
add
lds
jmp
pusha
movsl
jmp
popf
add
imul
ljmp
xor
sub
jbe
sub
cli
test
lea
int
lods
xchg
test
int
add
add
out
ret
add
add
add
mov
cmp
cmpsl
mov
ds
ror
add
dec
jle
or
leave
mov
scas
les
xchg
xchg
repnz
xor
and
dec
mov
arpl
cmp
xor
orb
leave
or
or
push
dec
xor
fldt
les
ret
add
mov
adc
jmp
push
or
ret
mov
and
cmpsb
mov
push
mov
adc
mov
sbb
push
dec
gs
push
jecxz
add
pop
push
push
insb
fwait
add
push
imul
jne
rorl
cmp
add
sbbb
addl
fs
and
aaa
nop
push
cli
dec
mov
push
dec
or
add
or
sub
bound
push
sbb
ret
adc
stos
or
add
shl
jno
mov
cmp
or
jbe
test
mov
add
jmp
out
and
sbb
loope
loop
cld
gs
xlat
add
ficomps
mov
dec
out
mov
pop
xchg
or
mov
or
xchg
mov
rorb
movsl
out
rolb
cmpsl
adc
push
dec
push
out
subb
add
jecxz
pusha
testb
xchg
mov
pop
jge
inc
sub
mov
cmc
xchg
dec
enter
mov
or
mov
ret
lahf
stc
mov
mov
add
jmp
mov
sbb
mov
les
in
movsl
das
call
inc
out
hlt
test
add
addb
outsb
add
push
sbb
push
in
xchg
cli
and
sub
sub
movsl
add
es
test
scas
cmpl
or
jae
dec
cmp
imul
les
push
sub
add
imul
xor
push
or
adc
xor
add
pop
jp
cmc
pusha
inc
and
add
pop
xchg
loope
inc
js
fwait
mov
scas
adc
sbb
loopne
out
sbb
clc
xor
or
es
and
jmp
aad
gs
mov
or
push
mov
jnp
sti
shrb
repnz
je
jb
shll
add
stos
lods
scas
mov
bound
add
sub
shr
sbbb
mov
incb
cmc
mov
js
lods
fisttps
cwtl
sub
sub
test
lret
and
mov
imul
data16
mov
lds
add
nop
test
iret
mov
in
sub
loope
shr
fs
fimuls
lods
push
xchg
adc
cmp
in
mov
rcrb
push
out
inc
scas
add
push
rorb
ljmp
shrl
cli
test
out
das
call
add
or
add
dec
xchg
loop
leave
enter
push
xchg
ret
inc
or
int3
and
push
sub
add
into
leave
jo
mov
call
aam
push
add
mov
jmp
and
mov
and
pop
dec
mov
mov
inc
nop
inc
cld
xor
push
out
mov
mov
test
les
add
scas
pop
imul
pop
add
arpl
lods
xor
in
popf
out
loope
mov
or
mov
cmpsb
in
sub
xchg
out
xor
int
pop
inc
lahf
mov
mov
dec
gs
leave
sub
stos
sub
jge
add
notl
lods
inc
rcl
add
lods
dec
xchg
int3
stos
sub
add
jmp
dec
mov
les
fs
or
jae
add
addl
xor
push
in
cmpb
scas
mov
or
mov
cld
and
insl
jae
and
xchg
mov
mov
mov
mov
add
daa
iret
mov
aad
rorl
loope
mov
dec
add
stos
sub
mov
outsb
insb
pop
les
mov
sub
fsubr
push
pop
js
dec
add
sub
decb
dec
int3
sub
or
add
dec
add
subb
or
out
xchg
into
out
and
jmp
push
add
pop
mov
scas
repz
xchg
jle
mov
fisubrs
sti
xor
shlb
xchg
shrl
les
inc
int3
rolb
adc
ss
cmpsb
xor
pushf
pusha
bswap
inc
lea
cmpsb
jb
movsb
add
mov
das
mov
xor
test
lea
cmp
in
stos
lock
repz
push
lea
das
inc
sbb
add
faddp
push
int
jmp
sti
add
lahf
std
pop
add
adc
ljmp
sbb
add
pop
mov
cmpsb
enter
mov
enter
mov
sub
ret
add
adc
sti
in
mov
out
pop
test
sub
push
hlt
lret
aad
pop
lds
sub
lock
jno
popf
jo
shlb
addb
mov
push
and
sti
push
dec
mov
insb
push
fisttpl
sub
aas
insl
in
sub
not
adc
pop
add
loopne
aam
sub
or
pusha
cltd
add
inc
adc
sub
push
add
subl
sub
xchg
ljmp
rcrl
arpl
test
add
add
inc
dec
insl
add
lret
push
add
jg
lahf
pop
addr16
push
jns
frstor
mov
push
jns
push
rclb
loop
xlat
push
orl
das
pop
int3
cmp
push
in
enter
iret
cmp
and
testl
cmp
cli
adc
inc
and
or
pop
test
xchg
imul
add
clc
imul
push
cld
cmp
push
cmp
adcl
mov
ret
jmp
scas
jge
add
scas
mov
add
insl
pop
xchg
mov
pusha
xchg
loope
pop
or
fwait
sbb
add
mov
add
outsb
fsubs
bound
adc
hlt
leave
and
fldl
shrb
xchg
aas
imul
lea
xchg
dec
stos
jg
pop
ljmp
movl
sub
fnstsw
sub
add
cmp
sbb
mov
dec
ficompl
sbb
add
xor
jae
aad
xor
icebp
push
add
dec
add
add
sbb
insl
and
loopne
inc
imul
aam
xor
clc
xor
call
pop
lahf
es
jg
xor
sub
add
or
jge
fsubr
mov
stos
in
mov
inc
xor
add
jbe
mov
inc
in
push
arpl
mov
stos
push
insb
or
sbbb
pushw
testl
mov
add
mov
cmp
lods
pop
sub
cmp
popa
cmpsb
mov
add
jmp
rcr
add
add
add
dec
jns
xorl
xor
lret
inc
loop
xchg
lods
add
pop
sub
daa
pop
add
pushf
mov
dec
add
mov
cs
or
shll
popa
in
or
faddl
and
scas
insl
mov
mov
xchg
arpl
pop
repz
lods
cmpsl
loope
add
scas
pushf
jmp
dec
xchg
sbbb
jge
fsubrl
add
test
mov
subb
jne
push
xor
cli
pop
pop
push
aad
xchg
cmp
test
clc
push
lcall
mov
jle
xchg
xchg
jle
add
adc
adc
add
outsl
mov
pop
test
cwtl
or
mov
xchg
adc
test
addr16
inc
outsl
outsb
jns
popa
cltd
loope
sub
inc
or
sahf
mov
inc
inc
pop
clc
cli
push
cld
sub
add
inc
push
inc
or
aad
xchg
inc
shlb
xor
sub
shll
add
and
bound
ljmp
int3
mov
mov
lahf
cs
push
lret
repnz
add
jecxz
sbb
fld
inc
shrl
sbb
push
nop
call
ljmp
fs
cmpsb
adc
ljmp
test
dec
mov
inc
in
mov
mov
adc
hlt
xor
or
or
mov
adc
mov
sbb
sarb
add
ret
fistpl
pop
ljmp
lods
incl
pop
lret
dec
popl
int
popa
test
inc
add
in
add
jge
imul
cmp
sub
dec
into
inc
add
mov
fdivs
pop
inc
push
add
lds
int3
outsb
test
clc
out
in
cmp
addr16
enter
add
cwtl
or
daa
jg
faddp
push
mov
ljmp
sbb
stc
xor
mov
arpl
xor
iret
add
mov
test
xor
int3
mov
xlat
shr
add
les
sti
sub
lods
inc
aaa
scas
je
data16
outsl
mov
push
sbb
add
inc
mov
mov
cli
ljmp
sub
clc
fisttpl
jbe
test
pop
fildl
std
scas
inc
and
test
dec
xchg
in
pop
cmp
test
push
lret
sbb
cmc
mov
mov
shlb
inc
arpl
adc
imull
test
incb
mov
mov
jne
mov
add
sbb
lds
jmp
dec
jb
dec
or
and
jne
addl
shll
inc
xchg
bnd
mov
sub
mov
cmpsb
arpl
cmpsl
data16
fmull
adc
addr16
push
in
std
adcb
mov
jns
sub
dec
loop
test
pop
add
int
int
hlt
jnp
test
ljmp
insl
aam
imul
and
pop
adc
add
dec
or
cmp
orl
fdivs
sub
je
aas
subl
rcr
jne
mov
insb
ljmp
push
sub
cltd
cmc
inc
std
cs
or
sbb
sbb
out
ljmp
pop
into
jb
aam
jbe
scas
fisubrs
cmp
mov
outsl
mov
sbb
pop
nop
xchg
stos
sub
pusha
mov
std
xor
add
add
inc
add
cli
movb
adc
dec
jnp
dec
ljmp
mov
shrl
xor
movsl
cld
add
and
rcrb
daa
movb
aad
and
sbb
mov
inc
into
imul
mov
scas
xchg
div
pop
out
add
xchg
notb
fisttpll
mov
cwtl
mov
repnz
cs
mov
out
in
push
cwtl
push
inc
add
adc
test
cmp
cmp
mov
repz
xor
roll
repnz
add
test
and
filds
aaa
sub
and
shll
xchg
mov
addb
xchg
pop
inc
add
lods
add
dec
imul
add
loop
xchg
ljmp
dec
addr16
movsl
dec
add
jbe
inc
popf
mov
sub
push
push
loop
pop
push
insl
pop
dec
test
outsb
sub
dec
push
lods
pop
add
dec
add
daa
jb
gs
int3
jo
lods
inc
jg
and
shlb
rcr
mov
roll
popa
dec
test
sub
inc
and
stc
bnd
orl
int3
mov
test
fsubrl
sbb
jmp
les
mov
pop
sar
add
shll
mov
lds
cltd
dec
or
add
cli
pop
das
cmp
bound
out
lods
in
add
push
xor
movsb
add
add
into
or
add
jnp
sti
out
jp
push
jge
xchg
add
mov
out
js
orb
mov
mov
xchg
add
sub
imul
loope
rclb
or
insb
test
and
call
pop
in
fsts
out
and
add
mov
mov
add
int
jb
dec
inc
les
fimuls
add
out
das
stos
insb
sub
loop
sub
adc
mov
xchg
sbb
xor
add
hlt
jl
adc
cmp
cmp
lahf
cmp
cmp
popf
dec
std
add
sub
fwait
clc
mov
mov
adc
movsb
adcb
add
sub
hlt
repz
mov
push
xor
das
int3
lds
inc
test
iret
ss
add
jbe
mov
pop
stos
mov
cmpsl
lock
mov
jg
push
pop
cmp
or
jno
jae
pushf
or
sbb
sti
test
pushf
std
xor
out
test
test
jns
adc
jle
das
jg
push
in
xchg
cmc
hlt
icebp
sub
jo
outsl
xchg
xchg
add
inc
adc
int
pop
or
pop
pop
add
sub
shll
xchg
jmp
mov
out
ljmp
cltd
xchg
lahf
pop
and
shrl
outsl
sbb
dec
outsb
cmp
push
mov
push
pushf
xchg
xor
mov
mov
or
pusha
loope
cmp
mov
stos
pop
push
sub
cmp
das
aaa
out
pop
dec
lcall
jmp
pop
lret
sti
or
adc
or
mov
jno
push
hlt
movsb
jne
out
jl
stos
mov
and
scas
and
xchg
jne
pop
pop
jb
inc
fmuls
add
mulb
in
ror
jb
jnp
rorl
pusha
add
inc
add
outsb
pop
int
dec
push
shrb
xchg
cmpsl
push
dec
sti
dec
imul
out
lahf
loop
push
fists
and
iret
leavew
mov
ret
jg
test
or
push
jne
pop
scas
jno
dec
movsb
pushf
lea
and
sbb
and
scas
pop
and
sub
inc
test
mov
idivb
mov
dec
fs
xchg
dec
cmp
dec
inc
shl
push
xor
shrl
outsl
add
xchg
in
adc
in
loope
ljmp
test
jb
int
addl
inc
or
xor
cs
enter
dec
mov
out
push
sub
push
mov
inc
dec
cmp
mov
push
cli
and
adc
lds
mov
sarb
add
sbb
scas
out
sti
outsl
lea
out
dec
lret
scas
les
lea
sub
adc
call
pop
add
sbb
out
adc
imul
lret
push
mov
shll
xlat
shlb
inc
add
stos
mov
dec
pushf
ds
and
inc
or
inc
aas
xchg
add
cwtl
mov
addr16
pop
or
xchg
inc
sub
gs
add
enter
enter
pop
inc
push
mov
dec
or
add
jnp
notl
mov
push
aad
rolb
pop
cmc
add
adc
sbb
fs
gs
lock
or
mov
test
jle
enter
inc
cld
adc
aad
repz
inc
add
jle
repnz
out
rclb
mov
flds
sub
iret
add
jo
add
push
add
ljmp
jo
sub
jo
xor
loop
adc
pushf
push
jb
mov
cmpsb
hlt
in
fisubs
sub
fwait
test
push
sub
stos
ljmp
test
mov
push
lds
or
or
mov
outsb
shll
mov
inc
xchg
add
dec
andl
jmp
sub
pop
movsl
adc
dec
test
enter
or
or
dec
jmp
loopne
mov
repz
jmp
and
pop
jb
fwait
push
inc
xor
cs
insl
rclb
stos
add
mov
pop
decl
mov
ds
mov
iret
lahf
das
int
push
mov
mov
inc
jo
sarb
notl
stc
stc
inc
mov
and
mov
cli
add
cli
loope
sub
push
sbb
push
add
mov
fwait
in
pushf
fsubs
or
push
add
scas
shl
sbb
sbb
insb
loopne
outsb
insl
test
dec
cmp
mov
xchg
aaa
sbb
cmpsl
jge
insl
imul
mov
rorb
and
add
dec
movsl
sub
adc
aaa
push
add
mov
cmp
arpl
fwait
addb
xor
popf
popa
jo
out
mov
or
or
xchg
lret
lahf
in
imul
jbe
out
pop
add
stc
mov
lret
lea
ljmp
rol
or
mov
ss
jle
mov
jge
iret
daa
pop
inc
dec
int3
test
dec
pop
enter
loop
int3
mov
mov
enter
sub
lods
inc
sub
mov
stos
lods
mov
xchg
pop
das
movsl
or
outsl
fnstsw
sbb
pop
adc
sahf
cltd
mov
pop
add
cmp
bound
pusha
xlat
xor
jl
add
sbb
mov
mov
mov
lret
pop
inc
hlt
inc
or
movsl
push
out
dec
ret
adc
pop
xchg
add
mov
test
fs
pop
add
sbb
out
and
cmp
or
imul
lock
xchg
aam
jmp
aam
pop
out
xchg
add
mov
lea
insb
xor
int3
call
add
imul
enter
xor
inc
dec
jg
mov
loop
int3
mov
mov
popf
inc
sub
out
mov
out
add
out
addl
fisubrl
mov
decl
ret
xchg
add
nop
or
pop
scas
dec
mov
mov
orb
xchg
add
rol
iret
lods
dec
mov
cmp
add
and
mov
pop
fs
popa
in
or
push
cmpb
xchg
test
test
xchg
mov
xchg
imul
pop
cmp
pop
xor
das
inc
dec
ss
shlb
ljmp
movsb
pop
pop
xor
imul
push
xchg
aaa
fs
add
inc
popf
adc
call
add
adc
ja
xchg
mov
imul
mov
out
mov
in
jmp
jns
mov
into
mov
pop
push
jmp
std
in
add
arpl
lahf
jmp
es
add
inc
xchg
add
lods
dec
push
inc
lret
inc
jg
lahf
ja
inc
fisttpl
pop
test
stos
mov
in
cwtl
aam
aad
pop
add
mov
divl
push
arpl
sub
movsl
adc
mov
sub
inc
mov
mov
in
sahf
out
add
lea
push
shll
pop
pushf
adc
les
imul
movsl
ljmp
inc
pushf
xchg
push
cwtl
add
in
sbb
pop
lods
or
filds
dec
pop
sub
mov
push
mov
jae
in
sub
or
pop
add
or
mov
pusha
xor
insl
jmp
mov
out
add
pop
fucomp
das
pop
loope
cli
call
daa
scas
and
mov
cmpsl
insl
adc
sbb
add
and
add
add
cmp
adc
adc
xor
push
jnp
inc
pop
pop
test
cmp
mov
sarb
sti
fcoms
nop
js
repz
xor
mov
clc
pmaxsw
mov
movsl
push
pop
dec
popf
sub
fisubs
sub
and
jl
getsec
inc
jno
addr16
fwait
cmpsb
xchg
stos
jns
inc
aas
inc
sub
fisttps
push
push
inc
gs
dec
cmc
imul
cltd
jns
add
shrb
push
test
dec
pop
pop
fisubl
dec
sbb
ret
mov
test
cmc
scas
xor
cltd
das
test
push
pop
repz
pop
loopne
fadds
jo,pn
stc
call
or
add
loope
jmp
out
cs
jecxz
fs
add
fildll
or
add
in
loope
int3
pop
add
inc
ret
int3
and
ret
in
mov
test
lcall
inc
push
rep
mov
movsb
aas
jecxz
and
xchg
jns
out
jb
sete
mov
stos
addb
cmpb
add
data16
lock
insb
lods
data16
push
enter
cltd
add
cmp
dec
gs
push
sub
xchg
inc
jae
inc
mov
jecxz
movsl
jmp
jns
setg
int
pop
add
dec
jnp
add
dec
aaa
out
pop
stos
jmp
cmpsl
adc
xor
and
push
jle
and
dec
add
mov
ja
mov
push
add
pop
or
add
sbb
inc
xchg
xor
mov
mov
orb
adcl
fucomip
mov
push
stos
or
daa
xchg
in
sbb
aas
sahf
mov
movsb
jo
scas
in
iret
jle
jmp
lahf
cltd
add
xadd
dec
xor
add
movsb
lods
add
int
inc
push
jle
das
outsl
outsb
mov
adc
push
ja
rolb
stc
imul
push
nop
sbbb
nop
push
mov
xchg
jb
into
push
jp
cmpsb
pusha
xor
pusha
xchg
data16
xor
scas
mov
sub
cmp
cmpsl
jge
adcl
out
insb
mov
sti
pop
cmc
cmpsl
add
in
jb
dec
int
mov
mov
cmp
movsl
jge
add
push
jno
stos
mov
jmp
cmpsl
stos
or
jge
jnp
sbb
or
int3
inc
into
test
cmp
push
or
ds
cmp
sbb
testb
out
mov
pop
xchg
cmpsl
mov
mov
add
mov
adc
outsb
outsl
xchg
shlb
jnp
add
bound
mul
nop
pop
xor
add
add
push
inc
sbbb
or
flds
mov
icebp
pop
and
inc
push
fistpl
jge
adc
inc
add
mov
dec
std
add
add
icebp
add
loop
jne
add
dec
inc
add
add
cld
rolb
pushl
xchg
xchg
and
push
or
or
or
mov
add
push
mov
or
add
cmpsb
lock
mov
enter
lcall
aas
pop
jmp
dec
or
add
jl
jns
add
pop
mov
lcall
daa
mov
xor
pop
add
add
cmp
adc
notl
add
and
out
call
add
mov
test
lret
push
adcw
jb
imul
mov
aad
jbe
std
in
add
inc
aaa
xor
or
cmp
add
pop
in
add
sub
add
cs
incb
cltd
jne
shrl
lret
jns
add
or
add
add
push
shrb
xchg
push
add
push
dec
popa
stos
add
add
movsl
rcrb
or
cs
add
movsl
add
aam
mov
cmp
mov
in
cli
daa
mov
int3
add
push
and
add
in
cmp
jno
adc
add
dec
lea
rolb
or
and
pop
mov
shl
dec
aam
test
test
xor
mov
adc
jmp
mov
fisttps
stc
mov
insl
loop
mov
shr
mov
push
xor
int3
aad
fisttps
xchg
lret
cmc
test
mov
xorl
aas
xor
cmc
add
insb
push
sarl
add
push
inc
mov
stos
das
int
sub
mov
inc
sub
or
add
insl
cmc
and
je
jne
popa
pop
testb
dec
stc
mov
push
popa
add
adc
jae
mov
fisttpll
mov
loopne
test
jbe
call
mov
negb
adcb
in
ret
add
adc
pop
push
or
les
lret
movsb
push
adc
add
jmp
push
push
xchg
jge
movsb
outsb
es
cmp
xlat
dec
in
mov
xorl
ret
pushf
and
out
ficoms
xor
or
popl
pusha
xcrypt-ofb
cmpsl
jmp
inc
cmpsb
inc
and
dec
movsl
nop
xor
inc
movsl
adc
popa
lods
inc
sahf
push
push
in
jb
add
je
jg
dec
ss
xor
test
jp
inc
lret
or
fildl
mov
sti
adc
xor
push
sbb
mov
add
out
cltd
xchg
fwait
mov
and
loopne
add
gs
mov
xor
inc
pop
cmp
add
mov
in
add
fldcw
je
fwait
mov
negb
xchg
sub
or
push
daa
test
in
std
add
pusha
subl
or
mov
sub
add
insl
add
add
pop
add
inc
jg
sbb
and
or
pusha
insb
push
sbb
cmp
orb
add
test
insb
inc
insl
enter
test
out
in
bound
test
xchg
sub
mov
in
popl
fwait
icebp
mov
adc
mov
cmp
push
cmp
arpl
or
xchg
int3
scas
lahf
int3
or
xor
lods
inc
and
inc
xchg
sub
add
sub
and
mov
insl
in
dec
pop
sub
out
pop
push
enter
rol
add
int3
xor
xchg
stc
iret
add
lea
int
mov
mov
xchg
rolb
into
mov
test
jnp
test
xchg
sub
mov
add
xchg
dec
jb
cmp
sbb
inc
add
inc
add
mov
sbb
enter
repz
shll
iret
sub
sub
mov
xchg
cld
cmpsl
data16
stos
mov
addb
add
outsb
add
pop
mov
add
push
out
hlt
bound
and
fs
inc
iret
add
sbb
add
call
test
testb
fcmovbe
fdivs
cli
and
inc
adc
int
and
adc
add
push
mov
xchg
add
add
imul
loopne
inc
jl
lods
add
and
outsb
add
xchg
cmp
call
imul
lret
test
mov
in
mov
movsb
pop
jge
ret
mov
insl
add
in
xchg
sub
je
insl
cmpb
imul
popl
mov
mov
dec
pop
mov
roll
int3
inc
push
addl
inc
call
push
and
adc
sbb
mov
sub
push
js
xchg
fildll
movsl
mov
in
movsb
add
aas
pop
adc
jnp
push
loopne
mov
fistpll
imul
mov
mov
push
push
movb
pusha
add
test
push
lock
inc
scas
shrl
pop
scas
ret
ror
out
les
pop
in
lea
add
insl
fisttpl
mov
mov
hlt
jl
add
sbb
jge
mov
sahf
fldt
addr16
ljmp
es
or
call
adc
push
data16
sub
mov
jecxz
add
hlt
pop
add
jl
pop
fwait
push
pop
psubsw
gs
xor
push
adc
imul
addr16
adc
mov
xor
adc
lds
inc
mov
xchg
mov
scas
fnstcw
lods
insl
inc
mov
filds
adc
jns
pop
cmp
in
add
sub
push
add
out
add
add
pop
xor
imul
int3
xchg
loopne
add
adc
aas
or
adc
push
rorl
add
dec
jmp
mov
ljmp
imul
push
xlat
gs
bswap
xchg
outsl
fisttpll
sbb
rorb
add
mov
aam
scas
es
inc
popf
push
xor
or
call
pop
mov
mov
movsl
push
call
aaa
xor
pop
lods
sub
jp
mov
xor
in
add
lcall
les
pop
sbb
iret
xor
xor
add
add
dec
pop
sub
test
flds
popa
mov
test
addr16
pushf
out
xchg
mov
int3
jmp
pop
or
inc
idivb
dec
movsl
aaa
outsl
daa
add
pushf
pop
unpcklps
int3
iret
add
outsb
not
sub
stc
filds
sbb
mov
mov
xchg
mov
dec
aad
enter
outsb
add
out
mov
add
jno
jmp
les
movsl
push
xor
dec
ffree
pop
out
mov
in
push
stos
cmpsb
ds
xor
add
out
or
cmp
stos
fidivrs
mov
sub
mov
add
mov
pusha
fsubr
dec
mov
add
inc
xchg
loopne
rcll
push
fwait
mov
in
pop
add
sbb
dec
pop
sbb
dec
add
dec
mov
testl
jmp
add
cmp
loopne
jmp
or
and
scas
loope
or
xchg
mov
jnp
push
sbb
sbbb
adc
push
dec
or
mov
fisubs
dec
js
add
mov
push
jns
cmc
ret
out
hlt
fucomip
push
lea
imul
nop
shlb
sub
mov
sbb
mov
ret
leave
ret
adc
es
push
sbb
testl
scas
pop
add
into
or
sbb
pusha
daa
add
xchg
inc
inc
pop
pop
test
mov
and
bound
pop
bound
dec
push
das
jp
imul
call
jl
dec
aas
es
xlat
inc
sbb
push
nop
xlat
inc
mov
scas
int
pushf
in
dec
cmp
sarb
push
es
sub
jae
lods
mov
int
push
inc
push
xchg
push
ret
in
mov
add
leave
sub
and
mov
xor
mov
loopne
lds
xlat
mov
and
out
adcl
daa
push
ds
jl
pop
gs
and
add
call
sar
cwtl
filds
adc
jge
xlat
sub
mov
push
or
dec
in
mov
sahf
inc
iret
lods
mov
ss
enter
aad
add
cmp
in
incb
adc
mov
add
fisttpl
push
pop
in
or
adc
in
ds
mov
outsb
pop
fistpl
call
out
out
add
lods
into
xor
ficoms
pop
std
scas
xor
xor
pop
xchg
pop
mov
inc
mov
mov
popf
lret
imul
mov
or
aas
pop
dec
cmp
ret
push
sub
inc
push
push
call
sub
pop
push
rcrl
imul
outsl
jne
add
out
sub
or
pop
icebp
sbb
push
mov
mov
jno
shl
add
push
pushf
mov
sub
sarb
pop
jge
fwait
jae
sbb
xchg
xor
push
out
and
cmp
enter
rcrb
xchg
roll
mov
shlb
add
dec
mov
stc
and
and
push
fwait
stos
adc
std
stos
cmp
sbb
cmp
rolb
jge
je
or
jns
clc
sahf
add
aas
addr16
dec
lds
mov
scas
cli
jno
imul
lods
pop
movsl
call
inc
leave
xor
xchg
mov
inc
dec
dec
test
mov
add
adc
jb
jp
imul
cmp
add
jnp
cmpsl
rorb
add
aam
loopne
test
lds
add
dec
lock
or
add
repz
fwait
push
push
mov
aaa
repz
add
cmpsb
xchg
imul
cmpsb
in
jge
loope
outsl
push
add
das
scas
in
or
iret
dec
ret
movsl
push
paddsw
cmc
dec
jg
cld
ret
gs
jo
lea
mov
ljmp
add
fistpll
add
loopne
cmpsl
mov
push
hlt
add
xchg
push
iret
xchg
out
outsl
mov
lahf
pop
rolb
cmp
adc
jmp
iret
adc
and
insb
sbb
aaa
cmp
or
push
mov
adc
mov
cmp
sbb
out
jo
leave
imul
das
or
jl
sub
jb
mov
scas
jnp
dec
mov
lea
xor
ds
cmp
and
js
incb
scas
out
sub
adc
xchg
add
jnp
sub
in
inc
jmp
add
fcomps
cmpsl
sbb
sbb
sub
repnz
inc
mov
adc
arpl
xchg
pop
sbb
rcll
aaa
out
rorb
add
inc
xchg
cwtl
aaa
mov
xor
pop
xor
outsl
add
and
lock
ja
inc
mov
dec
test
scas
xchg
lods
lcall
add
fnstenv
shrl
jbe
repnz
inc
sahf
out
xchg
movsb
push
or
pop
inc
fldl
imul
dec
jmp
in
jecxz
in
int3
sub
es
addr16
lods
adc
shrb
stos
les
dec
xor
pop
pop
dec
repnz
jle
dec
test
aas
sbb
rolb
aam
xchg
dec
sbb
xlat
sbb
jge
bound
pop
dec
add
stc
dec
fiaddl
jg
or
and
lods
out
push
inc
dec
add
dec
inc
push
add
mov
test
pushf
out
or
push
mov
nop
lret
xor
add
fcom
inc
dec
cmp
xor
xor
add
cmp
adc
aam
xlat
ds
bound
inc
sub
mov
xor
dec
mov
or
aaa
jge
sub
jns
aas
lea
filds
inc
add
jae
leave
add
xchg
mov
cli
out
adc
test
jmp
out
loopne
xchg
call
int
nop
xor
push
add
sbb
cmp
gs
lret
iret
add
sbb
adc
mov
dec
add
add
ret
jno
add
add
cmc
inc
sub
imul
add
mov
add
ds
add
add
cmp
lock
add
mov
mov
xchg
sub
dec
add
pop
push
dec
shll
std
add
loope
ret
out
in
xor
movsl
add
add
mov
push
pop
movsl
cli
aas
pop
int3
out
mov
push
lret
xchg
or
cmc
add
addr16
sbbl
sbb
fistpl
cwtl
imul
popf
insl
add
cltd
jb
iret
mov
rcrb
into
adc
leave
xor
subb
sbb
or
pop
dec
bound
ficomps
stc
cmp
rcrl
clc
in
popf
pop
xor
adc
pop
gs
push
out
gs
add
rcrl
add
mov
or
push
sbb
mov
push
ret
cmpl
add
or
push
and
shrb
dec
sbb
out
add
jae
jae
add
or
ds
loope
rolw
mov
ret
add
pop
push
out
stos
jp
or
pop
mov
fcoms
xabort
sti
sub
aas
dec
push
jecxz
add
fsubl
sti
aas
ss
or
ret
dec
or
sahf
das
inc
shl
push
in
movsb
jl
pop
in
and
outsl
lock
rep
mov
dec
xor
xor
push
mov
add
inc
pop
or
or
push
add
push
in
dec
cmp
add
add
sub
mov
mov
mov
xor
pushf
repnz
rcrl
nop
orl
mov
xchg
cmp
add
xchg
adc
add
add
add
movsl
outsb
and
in
jmp
mov
jbe
jp
sbb
into
sub
mov
addr16
pop
pop
icebp
fmulp
dec
add
fdivrl
inc
repnz
push
lea
stos
cli
push
add
in
cwtl
sti
fs
aad
clc
pop
sahf
outsb
out
cmpsb
mov
mov
leave
imul
outsb
add
pop
aas
mov
iret
or
add
sbb
aaa
in
mov
add
dec
cmp
mov
xor
fsts
ret
mov
in
scas
int3
leave
jmp
outsl
fadds
arpl
int3
lods
add
inc
mov
add
pop
or
cs
push
lds
sub
push
sub
imul
ret
imul
pop
into
push
jbe
addr16
test
or
outsb
jae
inc
xor
sbb
xlat
fbstp
mov
pop
rcrb
dec
cmpsb
lods
leave
push
add
add
jmp
jno
add
testb
call
mov
sahf
les
or
add
out
mulb
ret
sub
leave
shlb
shll
cs
xchg
call
push
mov
stos
das
lds
add
add
in
xor
gs
add
loop
fdivr
and
add
decb
in
stos
es
enter
mov
add
lcall
or
in
lds
outsb
test
lahf
push
imul
xor
int3
mov
into
push
push
adc
dec
daa
lds
sbb
mov
ffree
add
ja
mov
int3
jno
test
test
push
scas
xor
dec
mov
sub
movsb
leave
stos
sti
out
jno
decb
bound
jns
int
pop
sti
jno
test
inc
mov
push
int3
xor
pop
pop
add
xchg
scas
mov
adc
out
pop
in
add
xchg
loopne
mov
insl
ljmp
iret
adc
xor
mov
or
ret
clc
pop
inc
jl
aas
ret
xchg
loopne
cmp
or
sub
jb
in
repnz
cmp
push
lret
es
add
iret
stos
or
mov
sbb
daa
push
icebp
xor
fbld
pop
mov
pop
ret
imul
mov
add
imulb
in
and
popa
and
push
inc
movl
xchg
cwtl
in
mov
cmp
pop
test
jl
adc
dec
add
pop
sbb
jge
and
ret
add
adc
test
iret
and
ret
movhps
mov
repz
aad
inc
sbb
sub
out
insb
xor
test
or
add
data16
cld
adc
loopne
ret
repnz
es
lods
jecxz
add
in
pop
dec
in
push
arpl
and
sub
lods
aas
or
xor
movsl
sub
into
movsl
fildl
inc
adc
add
inc
gs
fdivrl
testb
aas
push
or
aam
je
repz
or
add
lcall
add
sub
stos
cltd
enter
xchg
inc
inc
je
xor
add
leave
clc
and
outsl
mov
jnp
xlat
int3
js
test
sbb
nop
add
out
in
popa
lea
jnp
mov
add
and
cmp
leave
dec
pop
jmp
or
sarl
sub
insb
jl
gs
inc
sub
cld
jmp
lea
rclb
sbb
sbb
jno
sub
lcall
pop
lcall
add
lods
dec
dec
and
or
fucomip
imul
add
adc
or
test
mov
add
outsl
mov
mov
push
in
out
shll
xchg
enterw
daa
sbb
loop
loopne
and
outsl
pushf
xorl
pop
insl
jg
add
ret
sub
push
dec
cwtl
int3
mov
xor
add
pop
mov
xchg
push
dec
push
mov
jmp
mov
dec
adc
add
xchg
xor
mov
lahf
pop
mov
inc
xor
imul
mov
rcl
cmp
or
out
insb
aas
imul
movb
pop
cld
pop
xchg
or
xor
adc
xchg
sbb
js
mov
cmp
sbb
or
xchg
arpl
dec
cmp
jns
xlat
or
fwait
jecxz
shr
sbb
and
sbb
add
mov
xor
jnp
out
add
push
sbb
loop
lcall
dec
xchg
je
pop
aad
andl
nop
ficomps
lret
repnz
mov
push
cmc
lods
xchg
mov
and
rcll
sbb
cmpsb
adcb
js
sbb
lock
in
pop
rolb
add
or
out
addl
lods
xchg
sbb
insl
fdivr
push
add
in
add
or
add
insl
xchg
jmp
and
mov
xor
mov
and
xchg
pop
dec
jno
add
or
lret
mov
push
cwtl
add
inc
mov
mov
inc
das
mov
scas
sub
stos
es
gs
mov
lds
movswl
xor
fmull
out
dec
hlt
cmc
push
js
pop
inc
fs
es
test
sub
in
pop
ja
in
sub
cmp
jmp
push
mov
imulb
inc
hlt
mov
adc
nop
les
imul
inc
or
mov
ret
test
scas
mov
out
test
ret
test
ljmp
sbbb
mov
pop
in
movsl
jbe
add
push
jae
or
scas
addl
ss
add
test
dec
lcall
inc
add
sub
lret
dec
in
into
cmp
lcall
sar
arpl
push
sub
mov
mov
je
mov
inc
lock
pushf
xor
mov
push
aam
dec
stos
fs
mov
dec
cmp
xlat
inc
icebp
xchg
inc
nop
mov
hlt
cmp
push
or
jne
push
pop
pusha
jp
data16
mov
sub
dec
mov
mov
lea
nop
add
xchg
out
push
push
loopne
jge
add
dec
or
cld
cmp
dec
jae
add
decb
or
cld
mov
add
add
lods
sub
xchg
imul
lcall
pop
lcall
popf
pushf
xorl
ja
cmpsl
and
ss
outsl
inc
std
cli
movsl
sub
outsb
cmp
mov
sub
push
addr16
ja
jmp
and
push
and
int3
dec
mov
sbb
push
cmp
jl
sbb
shl
fbstp
lock
test
mov
inc
sub
dec
and
rorl
xor
mov
arpl
dec
add
or
out
orl
push
in
mov
ss
cmp
rcll
cmpl
fpatan
stc
lods
test
xlat
jp
mov
popa
popa
jae
int
ja
lret
nop
les
jnp
les
fildll
enter
scas
pop
scas
add
xor
mov
into
inc
mov
jp
fisttpl
add
dec
cmpb
hlt
add
adc
mov
aas
xchg
ret
and
add
mov
jb
pop
push
shlb
xor
mov
or
xor
xor
xor
lods
outsb
pop
imul
fs
fs
and
insb
stos
sbb
sub
or
cld
dec
pop
out
incl
lea
mov
add
fwait
xchg
testb
int3
jle
adc
push
lret
aad
xor
jl
jns
add
push
adc
push
sub
dec
dec
xchg
lahf
pop
dec
lds
lods
inc
sbb
sub
and
add
cmpsb
xor
add
out
mov
add
dec
js
insl
bound
cmp
xchg
ds
or
scas
addr16
adc
sub
dec
inc
cmpsl
std
push
lods
and
addr16
cmpsb
addl
push
cltd
dec
repz
mov
fisttpl
outsl
mov
in
cmpsl
sbbb
add
add
add
mov
xchg
add
mov
repz
add
stos
lahf
xor
cmp
xchg
cmp
pusha
hlt
push
sub
dec
mov
out
aam
sub
push
pop
dec
pop
or
popa
ds
dec
std
movsl
jb
xlat
mov
incb
inc
je
pop
fs
pop
or
adc
lods
pop
ds
pushf
adc
mov
pop
xor
xchg
or
cmp
dec
repnz
out
xor
loope
ja
adc
rcr
add
pop
push
jp
xor
jmp
lock
fwait
scas
in
fisubrs
enter
add
adc
data16
ljmp
cmpsl
lret
daa
fwait
jg
or
dec
add
push
xor
xchg
shl
int3
jg
lahf
mov
mov
insb
mov
ljmp
sub
dec
test
lret
mov
add
or
push
cs
rorb
add
adc
aas
shrl
fs
mov
loop
jae
xchg
in
sbb
cltd
xchg
adc
int3
mov
in
pop
insl
ret
sbb
arpl
ret
cmp
mov
addl
fbld
dec
cli
pop
push
nop
mov
fisubs
clc
je
cmp
cmp
sbb
into
pushf
cmp
xchg
mov
and
ljmp
icebp
sbb
dec
add
dec
mov
rolb
inc
aad
jge
pop
pop
dec
add
mov
fcompl
add
jmp
sbb
mov
loope
arpl
adc
popa
fadd
enter
and
cmpsl
int
pushf
add
idivb
int3
stos
or
mov
rorb
push
popf
lods
scas
ss
movsl
mov
dec
pop
ja
add
loop
or
loop
into
mov
add
jo
inc
dec
arpl
and
js
jne
adc
jg
add
add
jecxz
xor
xchg
orb
rcrl
and
xor
add
inc
sti
dec
dec
inc
sbb
cmpsl
lret
movsl
inc
inc
add
add
or
in
add
inc
jl
add
jp
outsb
cld
enter
add
lods
sub
imul
add
push
cmp
and
mov
mov
mov
mov
test
repz
test
sti
xchg
or
ds
cmp
push
iret
add
cld
add
scas
add
outsb
sbb
pushf
ljmp
add
call
push
jns
adc
add
dec
les
inc
add
movsl
in
add
int3
push
nop
push
test
mov
in
dec
dec
lods
decb
add
mov
shll
add
in
or
mov
mov
in
iret
lret
outsl
out
mov
lods
lret
je
add
add
add
cmp
push
add
pop
scas
ds
cmp
xchg
jl
ja
fs
sub
xchg
stc
bound
hlt
loop
out
cmpsl
add
ret
int3
xor
mov
and
dec
inc
add
repnz
movsl
mov
shl
cs
add
xchg
push
add
dec
pop
and
fisubrs
xchg
sub
sbb
xchg
jb
add
bnd
xorb
loopne
add
add
popl
dec
push
shr
lea
bound
in
jmp
cmpsl
mov
sub
or
lahf
add
add
add
cmpsl
fists
mov
xchg
sbb
jns
outsb
cltd
cmc
mov
cs
and
sub
les
pusha
sbb
lret
inc
pop
adc
out
add
or
jo
jb
adc
dec
add
adc
inc
shlb
pushf
and
or
outsb
outsb
sub
cmp
cmp
mov
cli
sbb
add
inc
cmp
add
xchg
cmp
into
outsl
mov
fidivrs
mov
push
cmc
ss
pop
mov
imul
movsb
dec
movl
mov
add
out
ficomps
into
iret
or
pop
pop
popa
or
ror
pop
bound
pushf
add
sti
sub
imul
add
scas
rolb
out
fistpl
jg
jmp
push
cld
pop
in
ficoms
roll
cmc
int
lret
mov
mov
pop
add
pop
fcompl
std
stos
cmpsl
aad
dec
movsb
add
es
fsubr
push
add
sub
imul
sbb
enter
mov
fmull
pop
mov
fildl
rorb
inc
in
add
add
pusha
mov
insb
scas
pop
xchg
push
push
bound
clc
out
outsl
adc
dec
popf
cmp
xchg
add
push
ret
sbb
push
or
push
ss
mov
push
outsl
inc
sbb
lods
add
cmp
data16
cmpsb
xchg
and
cmpsb
jle
adc
xor
jge
xlat
in
xchg
add
jns
fxch
ljmp
popf
mov
push
inc
loopne
out
loop
ljmp
out
mov
sbb
fisttpll
inc
cwtl
test
ss
lret
xor
and
lcall
add
mov
dec
inc
out
add
arpl
pushf
cmpb
test
fcompl
ja
jno
cwtl
or
sub
or
in
xchg
pop
add
fwait
add
push
adc
mov
jnp
mov
out
dec
pop
test
lea
add
dec
rcrb
in
das
pop
enter
mov
leave
add
dec
pop
scas
mov
test
push
imul
or
das
pop
add
mov
scas
ret
cmp
fiaddl
lods
add
iret
xchg
leave
pop
fistps
mov
add
loope
sub
das
in
cmc
jno
adc
pop
dec
mov
add
cmpsl
f2xm1
add
jmp
mov
add
add
sarl
cmp
inc
adc
add
jecxz
in
pop
jnp
mov
add
sub
stc
std
inc
movsl
mov
test
dec
cmpsl
sub
sbbl
add
mov
sbb
add
add
insl
add
es
sub
dec
pop
sbb
mov
sahf
add
lods
mov
xor
ljmp
or
fscale
sbb
les
or
subb
push
pop
loopne
jge
xor
into
outsb
add
or
dec
rcrb
into
ja
jno
in
inc
popl
push
out
lret
rclb
mov
outsl
or
dec
push
mov
jl
jns
dec
nop
sub
mov
jg
inc
xor
cmc
cmc
int
add
mov
outsl
push
dec
in
ljmp
inc
mov
fstl
jnp
or
mov
movsl
inc
dec
xchg
imul
mov
js
clc
sarb
push
xchg
add
cmpsb
lods
inc
inc
pushf
sub
les
xchg
hlt
call
xchg
jae
add
mov
inc
sbb
xlat
pushf
aam
lcall
and
fisttps
imul
jne
xor
in
sub
dec
jle
imul
xrelease
cmp
pop
cli
aas
sbb
les
xchg
mov
jnp
in
in
sbb
pushf
add
mov
sbb
imul
adc
test
and
dec
dec
negb
xchg
inc
pop
int
out
mov
nop
mov
popa
mov
mov
aam
add
xor
daa
add
add
popf
pop
jle
sub
lahf
test
insb
sbb
lods
out
dec
fcomps
add
add
popf
out
mov
mov
rol
pop
add
xchg
mov
lods
lahf
cmpsb
arpl
test
and
das
sti
rorb
xchg
mov
push
cld
sar
sbb
jns
push
out
aad
std
test
jae
jecxz
push
mov
add
mov
sub
adc
daa
out
jl
gs
arpl
loop
jo
rcrl
add
xor
sbb
pop
and
dec
cmpsl
xor
ficompl
and
rolb
jns
sahf
pop
mov
sbb
xor
jmp
rcr
daa
adc
loope
add
pop
fsincos
dec
rorl
sbb
mov
decl
mov
cli
lret
sbb
mov
ret
mov
pop
insb
adc
mov
mov
pop
add
mov
aaa
dec
sub
xor
ds
add
mov
mov
pop
inc
xchg
add
push
adc
cmpsl
xchg
mov
mov
push
fidivrs
scas
push
fisubrl
subl
sbb
lods
outsl
mov
mov
jge
mov
push
push
xlat
xchg
pop
aad
popa
pop
js
mov
xor
aam
cmp
adc
mov
jp
insl
aaa
or
arpl
dec
sub
xchg
shl
sbb
lock
sbb
cltd
mov
mov
cmp
cmp
inc
hlt
test
xor
fldenv
push
daa
nop
jp
scas
movsb
lret
push
stc
daa
add
in
imul
lods
add
sbb
fcomps
jmp
stc
or
test
orb
enter
mov
push
test
and
mov
ret
clc
jnp
sub
out
rcr
jmp
in
lret
adc
scas
das
sbb
mov
mov
sbb
mov
aad
mov
sub
and
adcb
inc
dec
orl
rclb
gs
cltd
pop
addb
rcl
add
or
jl
fbld
aas
xchg
or
or
pop
pop
dec
popa
mov
mov
mov
divb
push
cwtl
jmp
mov
stos
jmp
inc
sarl
add
popf
daa
sbb
xor
cmp
lcall
cmpsl
cmp
fbld
aas
push
sbb
add
repz
jle
cmp
inc
out
rcr
push
lods
mov
das
xchg
cwtl
and
cmp
addr16
sarl
jne
mov
js
jno
hlt
sbb
or
add
push
sbbb
and
pop
lcall
int3
fsubl
cmc
mov
nop
daa
mov
push
outsl
mov
and
mov
mov
dec
mov
decl
xchg
xchg
lods
cmp
pop
dec
sub
push
aad
push
neg
inc
and
mov
add
cli
sub
dec
add
test
movsl
popa
mov
fldl
add
loop
test
sub
test
inc
jle
or
daa
mov
jne
push
push
das
push
lds
loopne
call
cmpsb
push
rcll
sbb
rclb
push
dec
sbb
dec
movsb
fmul
push
and
loope
ret
add
mov
xchg
pop
stos
add
adc
daa
and
movsl
push
popa
and
add
push
mov
pushf
jmp
xchg
pop
pop
mov
push
lret
mov
les
mov
jmp
xor
sub
aam
lahf
mov
jecxz
jmp
pushf
mov
and
or
jle
jg
jle
loope
out
jp
arpl
decl
popf
sahf
mov
xchg
es
fstp
jl
jmp
and
mov
test
mov
xchg
dec
push
adc
jb
lea
xorb
test
cmp
inc
xor
cld
in
mov
jbe
daa
jg
add
in
in
fsubrl
test
cmp
imul
cmp
addl
mov
or
lcall
lock
mov
add
add
iret
jo
out
lock
push
sarb
pop
lcall
repz
cmp
push
aas
rol
sub
xchg
and
push
iret
pop
mov
jne
fxch
lret
mov
aad
pop
push
sub
lcall
out
test
rcr
add
dec
mov
mov
and
lret
mov
out
inc
insb
mov
inc
xchg
or
cltd
je
mov
mov
out
mov
xchg
push
testb
rcl
int3
lock
or
adc
pusha
mov
andl
push
mov
inc
push
in
push
jl,pn
or
lock
vmovapd
and
push
cmp
cmp
pop
mov
jge
ja
pop
jne
mov
cmp
call
jmp
int
or
sub
mov
add
sbb
adc
mov
aad
add
stc
test
in
ss
inc
mov
ds
popf
mov
lods
cmpb
mov
push
or
or
orb
loop
and
icebp
xor
push
sbb
out
mov
scas
pop
jecxz
mov
call
in
repz
add
test
xor
pop
fidivs
mov
and
jmp
imul
cmp
mov
sub
mov
inc
push
push
imul
lods
add
and
adc
lock
push
sub
adcb
inc
mov
mov
sti
pusha
in
adc
xchg
and
jae
mov
mov
cmp
aam
addr16
or
inc
lret
add
add
pop
adc
push
rol
and
pop
inc
add
in
in
filds
rcl
stos
out
and
add
out
das
jno
mov
js
cwtl
sub
add
add
pop
cmc
jl
rol
add
aam
popa
add
or
in
insb
daa
adc
call
outsl
es
dec
adc
rcrb
xchg
mov
leave
cmp
decb
test
inc
flds
mov
mov
neg
fiaddl
fisubs
add
mov
stos
sub
fldcw
imul
mov
add
xchg
xor
add
add
push
pop
movsl
adc
mov
rorb
pushf
lret
inc
xor
aas
add
add
mov
roll
add
lods
sbb
scas
imul
and
add
call
add
adc
les
test
lea
add
mov
sbb
mov
cli
sub
add
out
es
into
and
add
outsl
loopne
xchg
sbb
add
jecxz
int3
lret
push
lock
jns
add
jo
in
lret
inc
fs
pop
jl
add
xchg
push
adc
bound
mov
mov
push
push
mov
nop
mov
lahf
dec
mov
dec
mov
leave
mov
cltd
lahf
inc
dec
mov
jl
and
sub
shll
and
dec
incl
xchg
fisubrs
add
data16
jl
and
mov
popf
xrstors
testl
pop
inc
popl
inc
and
mov
push
gs
add
loope
mov
in
rorl
dec
add
aaa
gs
inc
inc
sbb
push
cmpsl
outsl
add
add
nop
mov
icebp
xchg
add
lods
out
ret
xchg
mov
sub
aam
add
andl
aam
std
add
sub
add
gs
int3
insb
fcomip
mov
add
sub
push
mov
divb
jbe
in
add
loop
subl
idiv
sahf
in
sub
add
cmp
fisubl
jo
add
aas
lods
add
add
sub
pop
inc
mov
pop
and
lahf
xchg
lea
aas
cmpsb
sahf
icebp
fldcw
or
scas
fisubl
jmp
pushf
cld
cmpsl
or
adc
stc
add
add
mov
mov
dec
sti
sbb
orl
popa
scas
mov
lret
data16
xchg
add
or
push
sub
jle
loope
popa
cmpb
lea
or
dec
out
push
dec
enter
dec
sub
pop
rcll
cli
stc
cltd
xchg
or
testl
add
jp
ss
movsl
aad
and
outsb
adc
cmpsb
lret
adc
test
pop
push
cmp
or
add
add
pop
movsb
outsb
add
lret
add
das
nop
fiaddl
mov
add
lcallw
lret
popa
mov
int3
mov
push
and
cmpsb
cmp
add
add
jmp
cmc
int3
mov
roll
xor
lret
mov
jbe
enter
push
pop
xchg
adc
stos
call
dec
inc
or
xchg
stos
rolb
adc
movsl
outsb
sbb
cld
sbb
add
jp
iret
int
mov
mov
jle
subb
cmp
and
dec
fdivrl
mov
adc
je
or
lods
push
cmp
aas
pop
sbb
sbb
add
lret
add
dec
addr16
add
lods
sub
add
jns
cs
sar
fucomp
sbb
inc
mov
push
pop
enter
mov
and
rolb
dec
mov
mov
outsb
mov
sbb
lea
test
enter
sub
maskmovq
notl
notb
sbb
sub
mov
in
add
test
sub
fisubs
insb
ss
jnp
movsb
fsubp
fidivl
int3
ret
repnz
lret
dec
inc
mov
inc
dec
ret
add
ss
add
fwait
and
ja
insl
push
scas
adc
push
in
sub
fucomi
test
idivb
push
popa
mov
sub
aaa
or
fcmovnb
data16
add
mov
mov
cs
pop
jg
sub
mov
out
push
out
sub
jp
out
dec
push
xchg
jcxz
std
cmc
popf
push
push
push
pop
jb
inc
lret
imul
movl
ficoml
data16
cmpsb
roll
movsb
push
xchg
mov
iret
sub
push
dec
adc
je
sub
sub
mov
mov
sti
add
xchg
add
rol
ret
inc
pushf
mov
add
add
dec
data16
mov
inc
addr16
adc
add
cwtl
and
fwait
insl
scas
lcall
test
rcr
scas
fimull
mov
out
stos
inc
add
pop
sub
jle
mov
inc
and
inc
out
lods
sbb
scas
jmp
jmp
mov
jo
and
adc
adc
dec
lcall
sbb
test
jp
add
stos
cmp
gs
int
dec
leave
jne
fwait
add
add
adc
je
repz
lds
je
icebp
dec
push
in
push
dec
inc
outsl
dec
jmp
dec
arpl
lods
mov
cs
popf
jge
and
lods
lcall
fcmovnu
add
ss
imul
sub
add
xor
mov
sbbl
mov
mov
loop
icebp
ret
mov
lahf
jle,pt
stos
mov
outsb
mov
out
lock
in
add
xchg
or
sub
inc
fsubs
cmp
out
add
inc
cwtl
inc
pop
mov
insb
lods
jmp
cwtl
lods
rcr
scas
stos
data16
add
enter
inc
ljmp
cwtl
adc
rorl
mov
add
mov
cmp
dec
roll
std
mov
cmpsl
int3
loope
fbld
and
popf
add
lret
mov
xor
and
in
jge
fidivrs
rorb
push
packsswb
mov
xor
xchg
dec
aas
or
add
sub
outsb
cmpsl
jnp
je
dec
push
add
cmp
ds
pop
cmp
jbe
cmpsb
or
add
xor
sub
or
jnp
dec
push
pop
adc
das
inc
inc
sbb
mov
int3
not
push
shrl
push
insb
add
or
dec
cmovo
clc
pop
pop
std
cmc
scas
out
insb
movsb
loop
and
lret
stc
push
add
lcall
jmp
add
sarl
popf
cli
dec
xchg
dec
test
ret
jmp
cmp
pop
lds
push
mov
movsl
bound
outsl
mov
sub
push
mov
sbbl
pop
cmpsl
jg
mov
pop
push
sbb
jl
je
pusha
push
fiaddl
and
js
push
lods
add
pop
add
xchg
push
cmpsl
cs
fildl
xchg
jp
jbe
cmc
push
jecxz
movsb
inc
dec
pop
das
dec
pop
push
dec
inc
adc
lcall
or
sbb
pop
push
clc
in
jnp
cli
inc
xchg
ret
sbb
push
xor
pop
cmp
pop
cmp
cmp
mov
inc
fisttpll
sub
roll
jno
repnz
push
xor
pop
xchg
xchg
repz
mov
pop
scas
add
add
mov
shr
jg
loope
jae
scas
loope
push
lcall
lds
jae
mov
fstpt
aad
pop
insl
dec
cs
pushf
mov
outsl
insl
or
ds
aas
sti
pop
scas
cmpb
fsubl
mov
push
xor
add
push
out
mov
loope
or
mov
cmpsl
add
mov
cs
xor
mov
test
sbb
out
popa
cmp
dec
fs
xchg
pop
flds
out
or
adc
mov
dec
push
aam
movsl
add
sbb
mov
sub
push
adc
repnz
sbb
js
out
iret
nop
sbb
stos
sbb
dec
dec
je
push
insb
pop
add
add
scas
rclb
push
mov
add
or
adc
push
sbbb
in
aam
bound
data16
out
ja,pn
int
in
adc
test
std
add
addr16
hlt
add
outsl
loop
mov
sahf
int
insl
andb
js
movl
mov
outsl
push
fisubs
cmpsl
test
cmp
push
rclb
ljmp
push
mov
xor
les
dec
pop
jbe
add
jle
xchg
mov
mov
and
add
aad
stc
pop
sbb
and
ror
xchg
jnp
sbb
hlt
inc
outsl
pop
sbb
in
aam
das
cmp
mov
sub
cld
popl
pop
mov
xlat
ret
in
cld
out
je
stos
push
sbb
ffreep
mov
inc
add
ljmp
loopne
xor
in
test
mov
hlt
jno
or
in
mov
pop
mov
xchg
jbe
xchg
add
inc
mov
add
outsb
inc
in
and
dec
imul
movsl
inc
jecxz
or
push
lds
cmpb
stc
daa
or
pop
inc
xlat
rorl
int3
cmp
dec
push
mov
mov
sbb
int3
push
jp
arpl
in
es
dec
lods
cli
sub
xor
enter
xchg
outsl
ds
lcall
mov
test
pusha
idivl
sub
and
rol
push
pop
jmp
in
sub
xchg
popa
test
jl
add
mov
shlb
in
and
push
inc
int3
dec
pop
pop
cmpsb
pushf
das
or
add
fisttps
shl
pop
dec
cmc
nop
es
cltd
lds
mov
mov
sub
cli
mov
adc
mul
add
xchg
or
daa
repnz
mov
adc
orl
pop
arpl
cwtl
adc
nop
into
adc
add
addr16
xchg
insb
mov
mov
pop
out
out
xchg
sbb
mov
shl
int
das
inc
push
fnsave
cmpb
inc
fsubl
inc
lea
popl
iret
lcall
cld
and
out
jae
add
and
fldt
rorl
repnz
jo
insl
adcl
add
pusha
mov
push
sahf
push
dec
stos
daa
or
shrb
fndisi(8087
mov
dec
pop
jp
das
rcrb
push
xchg
outsl
leave
pop
aaa
xor
adc
rcll
xchg
dec
mov
adc
sub
ds
add
or
les
adc
jge
das
jg
rolb
scas
sti
inc
add
add
jg
and
mov
push
pusha
aad
add
mov
mov
repz
adc
loope
lcall
das
add
test
ret
mov
xor
cmpsl
mov
call
aas
stos
loopne
pusha
cmpsl
loope
and
cltd
les
jae
cmpsl
enter
cmp
test
enter
add
dec
mov
and
out
scas
xor
pop
add
das
loope
xchg
xchg
data16
mov
add
cmpsb
push
test
add
je
test
add
in
pop
arpl
scas
cmp
sub
fwait
iret
add
in
fcmove
add
repnz
cmp
jg
push
scas
iret
sarb
outsb
dec
insb
dec
jg
sbb
xchg
mov
jl
aad
xor
movsl
filds
addr16
sub
push
dec
pop
dec
movl
push
cmp
adc
xchg
imulb
and
sub
arpl
and
das
inc
mov
repz
or
push
push
add
fwait
xchg
sbb
pop
or
retw
incb
out
out
in
loop
call
scas
sbb
and
inc
adc
pop
fidivl
dec
dec
lret
out
leave
mov
inc
and
pop
pop
xor
das
sub
push
xchg
pusha
in
lods
or
test
sub
xchg
ss
jne
shll
sbb
faddl
lea
mov
call
push
mov
push
and
shl
mov
and
loope
lds
in
pop
jb
insb
pop
out
rorb
push
or
lret
xchg
fnstenv
ja
jno
dec
cmpsl
add
mov
mov
adc
mov
loop
add
mov
lock
lock
scas
add
and
and
test
shlb
add
repz
aad
lret
sub
orb
loopne
repz
repnz
mov
jl
cltd
mov
sbb
adc
mov
mov
flds
adc
arpl
and
es
into
sbbb
ret
add
cmpsb
dec
repnz
stos
dec
ljmp
ja
mov
mov
fwait
jae
imul
push
and
sub
push
add
add
mov
lods
outsb
dec
leave
test
addr16
jb
aam
or
rclb
fadds
cmpsl
cmp
pop
fwait
cmp
add
jg
test
jecxz
mov
cs
incb
ret
xchg
inc
jp
shld
jle
adc
ret
xchg
test
jnp
clc
dec
dec
loopne
cmc
xchg
inc
add
cmpsb
push
scas
cmp
xchg
add
mov
xchg
add
lahf
incb
mov
imul
das
mov
add
jmp
push
faddp
xchg
pop
cmpsb
lods
mov
out
ret
add
pop
add
sbbw
mov
add
test
cmpsl
dec
cmp
loop
inc
xor
mov
enter
int3
mov
jecxz
mov
mov
ja
ret
add
rcll
dec
fmuls
call
mov
fisubrs
adc
test
inc
mov
or
rolb
mov
xlat
cmp
add
outsl
push
imul
dec
jo
inc
sub
pop
add
sbb
sbb
and
out
pop
xor
andb
leave
inc
inc
or
jno
cmp
push
add
sbb
mov
jmp
movsl
dec
sbb
loop
loopne
sub
out
sub
loopne
pushf
lods
push
shlb
outsl
push
mov
loopne
in
mov
icebp
mov
xchg
outsb
andl
das
xchg
mov
xchg
scas
add
stos
sbb
test
or
das
test
aad
mov
repnz
scas
bound
push
jnp
cs
inc
lds
stos
int3
cmpsl
pop
int3
daa
and
dec
hlt
xchg
inc
lret
sti
jno
jbe
sub
out
lds
and
mov
and
cmp
mov
dec
mov
test
jns
das
dec
mov
adc
push
xor
xor
add
sub
popa
inc
add
cmpsb
and
xor
rol
outsl
in
int3
dec
insb
in
cmp
outsb
out
outsl
mov
jecxz
sahf
les
jge
lock
enter
cmp
dec
ret
lds
mov
and
mov
out
das
xchg
mov
sub
and
rolb
sub
add
loopne
inc
push
fstp
ret
into
shl
ret
popa
je
cmp
mov
imul
jb
xchg
xchg
lcall
lds
out
mov
push
jmp
fbstp
test
xor
push
ss
nop
mov
iret
dec
or
fisubs
jp
xchg
add
scas
pop
rcrl
aam
pusha
xchg
pop
test
sti
and
into
mov
popf
mov
fs
fwait
xor
or
xor
mov
mov
popa
iret
push
out
mov
xchg
push
lds
addr16
imul
push
dec
inc
jbe
add
cltd
shll
subb
mov
add
add
cmp
movb
out
jno
or
jmp
ret
int3
out
jnp
or
aas
outsl
xor
jle
iret
cmp
and
stos
fdivrs
lahf
addr16
push
lret
or
add
dec
arpl
lgs
add
push
and
xor
mov
test
iret
lcall
and
add
notl
add
into
add
cmp
mov
daa
ret
fidivs
mov
repz
fmuls
ds
loope
in
add
in
in
add
lret
test
sti
fsts
gs
fistps
cmpl
das
movsb
dec
inc
leave
addr16
dec
add
add
stc
push
pushf
ret
add
jl
fstpt
aad
ds
leave
jg
xor
fs
psllq
gs
cmp
xchg
inc
cmp
add
ss
jno
cs
add
das
jae
into
cld
stos
cld
insb
sbb
cs
out
sub
pop
dec
add
outsb
ds
andb
int
mov
add
popa
dec
fwait
dec
push
enter
addr16
ret
rcrb
loopne
xchg
add
pop
sub
cmp
insl
pop
out
insb
stc
out
leave
mov
inc
in
or
roll
sti
cmp
pop
xor
add
mov
rcr
mov
xor
dec
lret
mov
pop
mov
or
mov
sbb
scas
push
nop
popf
mov
add
mov
jge
add
popf
call
or
xchg
mov
lea
or
xchg
pop
or
xor
jb
stos
jmp
jae
dec
jbe
lea
add
outsb
test
and
lods
jg
out
adc
loope
sbb
pop
inc
pop
sub
std
dec
imul
out
ss
or
add
mov
stos
xchg
xchg
or
cmp
jg
sbb
adcl
xor
push
push
cwtl
into
dec
inc
mulb
lret
jl
add
popa
and
fisubrs
mov
cltd
outsl
stc
cld
test
std
mov
xchg
adc
add
and
aad
test
test
xchg
int
ret
sub
xchg
xchg
xchg
cs
cs
xchg
test
jo
xchg
cmp
inc
scas
into
adc
xchg
add
jae
stos
inc
test
sub
mov
cli
and
mov
sub
mov
push
cmp
fmul
jbe
sbb
cld
insl
das
sub
bound
pop
les
imul
xor
mov
cmp
cmp
mov
inc
add
or
decl
mov
dec
add
push
movsl
ja
jmp
push
inc
inc
pop
mov
in
fs
shrl
jp
jne
sbb
addr16
outsl
mov
ret
daa
and
add
test
test
push
sbb
xchg
cmp
into
nop
push
push
stc
add
mov
xchg
pop
popa
jmp
jle
mov
sbb
mov
imul
push
sub
pop
rcr
stos
ret
jle
outsb
popf
cmp
pop
or
roll
inc
sahf
sahf
psllq
addr16
incl
frstor
add
xchg
cmp
add
dec
inc
xchg
out
movl
pop
ds
sahf
inc
test
inc
movsl
add
jb
jl
sub
in
insb
das
daa
add
dec
je
out
xor
std
stos
xchg
push
in
cld
mov
xor
dec
fs
jg
mov
push
daa
pop
ss
lret
pop
inc
inc
sbb
call
hlt
enter
pop
sub
cwtl
es
js
testb
jmp
shl
add
inc
inc
arpl
push
xchg
pop
xchg
inc
aad
pop
cwtl
andb
pop
in
jb
sbb
xor
daa
sbb
push
xchg
mov
jae
data16
sbb
movl
addr16
or
cld
dec
ror
lahf
les
cmp
out
in
ja
and
out
pop
test
cmp
in
fwait
lret
and
add
cvtps2pi
push
add
int
out
add
or
popa
dec
xchg
add
ficoml
lahf
xchg
sub
jg
lods
jns
movsb
clc
xlat
add
jp
mov
adc
ret
mov
and
cmp
cmp
popa
lahf
ds
daa
in
clc
cmc
call
adc
test
xor
dec
dec
movsl
adc
sub
arpl
inc
push
lret
lret
mov
mul
pop
xchg
int3
das
lods
fcomps
sub
idivl
dec
mov
and
enter
xor
das
jbe
xchg
push
push
adcl
cmova
mov
pop
and
fdivrs
std
mov
mov
mov
and
fs
push
lock
ds
add
jo
dec
inc
fnstcw
popl
das
dec
xor
decl
or
test
addl
cs
sbb
enter
or
add
push
mov
inc
lcall
fnstcw
fmuls
xchg
sbb
push
fwait
mov
arpl
in
pushf
and
or
mov
rorl
sub
or
or
dec
outsl
fwait
ret
mov
daa
nop
cmp
pop
mov
scas
jle
nop
sub
jg
dec
add
add
cmpsl
cmpsl
daa
mov
sub
jl
inc
jae
iret
stos
ljmp
loope
scas
add
or
mov
and
aas
push
and
int
add
fucomip
in
mov
in
xor
fimull
pushf
sub
mov
mov
mov
sahf
pushf
je
add
mov
add
lahf
les
pop
test
out
fwait
jae
add
int
push
call
fldt
fsts
push
flds
icebp
insl
jae
mov
or
clc
ja
add
xchg
aad
rorl
push
jno
mov
add
xorl
loop
dec
roll
add
in
dec
xor
enter
lods
pop
fidivl
repnz
jne
push
add
cmp
adc
pop
clc
sbb
bound
test
test
inc
cmc
mov
movsb
jns
cmova
push
add
stos
andl
and
add
incl
and
add
pop
out
bound
xor
sarl
clc
nopl
mov
cmp
mov
aaa
add
mov
mov
in
arpl
arpl
mov
sbb
repnz
std
rcrl
adc
add
outsb
lahf
pushf
xor
in
leave
sar
add
mov
and
imul
push
inc
andb
cmpsl
sub
mov
test
jne
out
add
push
into
test
movsb
xchg
out
sete
inc
cmp
rolb
push
mov
xor
sbb
jb
aaa
xchg
out
outsb
dec
in
dec
pushf
or
faddl
xchg
maxps
scas
pusha
fs
adc
rclb
push
inc
int
arpl
mov
fmulp
imul
adc
stos
push
addr16
adc
dec
add
cmp
loopne
fiaddl
lret
push
mov
add
lods
lret
mov
add
out
add
cmp
icebp
mov
xchg
sub
mov
sub
test
daa
test
leave
add
enter
mov
xor
dec
mov
mov
add
xor
sti
lahf
es
fidivl
test
mov
cmp
loope
int
push
and
push
jmp
jmp
mov
in
lret
mov
outsb
in
popa
icebp
inc
in
popa
stos
add
mov
leave
lods
add
dec
fucomi
pop
pop
das
lahf
mov
insb
lods
movsl
pop
xchg
movsb
iret
imul
xchg
cmp
imul
cmc
add
jbe
mov
in
inc
pop
les
lahf
pop
cmpsb
push
add
popl
sub
imul
pop
scas
cli
subl
and
lds
lods
fisttps
cmp
bts
lods
add
stc
mov
add
or
les
adc
mov
jp
pop
adc
pop
mov
loop
popf
inc
nop
dec
push
sub
int3
shlb
and
in
dec
sub
and
enter
add
cmp
add
fdivrp
sub
mov
inc
inc
int3
or
clc
inc
flds
jp
dec
pop
scas
add
cmp
pusha
nop
sub
sbb
stos
lahf
jge
add
jo
rolb
sbb
sbb
sub
pop
push
rorl
cltd
xchg
mov
test
add
popa
xor
jge
ja,pn
test
aaa
xchg
in
xchg
xchg
push
in
xchg
in
imul
add
xor
fsubr
fs
sbb
or
add
sbb
jo
arpl
sub
fs
dec
lret
popa
sub
cvtps2pd
jne
out
imul
stos
push
rcr
fwait
sbb
xchg
clc
add
aad
adcl
jmp
sub
dec
add
jne
lock
adc
add
pop
adc
adc
outsl
cwtl
or
out
xchg
out
nop
enter
mov
dec
jmp
es
pop
pop
lcall
fistl
mov
add
push
aam
inc
and
dec
stos
outsl
aad
movsl
dec
add
and
les
mov
sbb
cmpsl
test
mov
test
mov
mov
imul
fs
es
loopne
jp
aas
cmp
jno
jle
mov
test
add
adc
mov
xchg
add
imull
scas
or
add
mov
sti
insl
push
pop
rclb
add
sub
fldcw
outsb
dec
jo
push
movsb
popf
push
das
xchg
pop
test
xor
xchg
popa
mov
sub
pop
mov
sub
push
jecxz
ja
push
mov
popa
cmpsb
shll
inc
ljmp
pop
add
mov
shlb
push
inc
mov
addb
dec
mov
in
aaa
xorb
pop
or
xchg
adc
in
xchg
mov
xchg
rorb
outsl
dec
in
shl
inc
mov
xchg
arpl
xor
push
je
mov
push
sbb
mov
jo
movsl
or
jbe
clc
fs
cmp
fisubl
sub
movsl
out
loop
pop
scas
ljmp
insb
sub
cmp
or
jno
icebp
or
lret
lret
outsl
mov
movsl
add
add
sub
lcall
adc
pop
push
pop
outsb
and
push
or
cmp
test
lods
lea
imul
shrb
add
mov
cmpb
jle
out
cld
xlat
push
lods
and
call
fs
leave
xor
or
call
jg
imul
pop
movsl
aaa
movsl
subl
xchg
push
lea
cmp
out
sbb
jbe
add
add
out
lods
into
fildll
mov
add
pop
sbb
jg
hlt
or
gs
iret
mov
lock
in
sbb
loop
inc
scas
xchg
ljmp
daa
aam
dec
fisubs
nop
leave
cmp
stos
cs
loope
popf
mov
stos
mov
push
xor
inc
dec
pushf
mov
inc
lret
pushf
add
gs
cmpb
mov
or
cmc
lret
jo
add
adc
mov
and
push
add
cmpsl
cld
cmp
mov
in
das
pop
lret
loopne
dec
test
pop
out
and
dec
mov
pop
inc
and
mov
fsubl
fsub
sahf
and
cmp
lods
sbb
push
mov
arpl
mov
pop
bnd
es
mov
in
inc
mov
inc
out
subl
or
popf
scas
subb
rorl
jg
dec
dec
sbb
pushf
paddusw
sbb
adc
aad
xchg
or
mov
movsb
push
aam
mov
aas
mov
mov
add
lahf
aad
ds
in
out
and
and
sbb
iret
sbb
cli
repz
inc
test
pmaxsw
add
push
xor
adc
mov
push
ss
sub
in
sbb
cld
mov
mov
mov
sbb
lds
mov
add
mov
enter
xlat
dec
ja
or
dec
outsl
popa
addr16
xchg
mov
inc
push
cld
jg
out
jb
mov
out
out
mov
mov
shll
mov
clc
inc
push
jecxz
add
add
push
dec
jge
mov
insl
sub
ds
sbb
loopne
push
in
clc
test
sub
into
jnp
and
mov
fsubrl
loope
adc
xchg
jl
or
xchg
sub
jne
ja
out
xor
scas
push
fisubl
iret
fsubs
mov
add
add
js
jp
or
addr16
xchg
add
in
xor
into
add
sub
xchg
out
add
mov
push
das
mov
mov
scas
sahf
fwait
int3
in
pusha
std
xor
cmp
insb
stos
add
sub
pop
lds
dec
popf
lods
push
addr16
push
pop
sub
add
cmp
fnstcw
clc
outsl
adc
lcall
daa
add
add
inc
out
sbb
cltd
call
loope
fwait
in
push
stc
add
les
dec
icebp
incl
mov
mov
push
sbb
ficompl
inc
mov
pop
data16
add
cli
adc
clc
imul
int
push
sbb
sbb
nop
or
aad
mov
orb
sbbl
pminub
add
sub
pop
and
jmp
dec
sub
or
dec
push
add
std
xchg
loopne
inc
and
ret
add
add
sub
bound
out
jle
ret
ja
push
cmp
cmp
sarl
mov
mov
jle
jl
lcall
cmp
mov
push
pushf
jo
mov
inc
scas
call
lds
and
loop
add
mov
add
push
add
dec
add
andb
in
nop
xchg
in
sahf
inc
aas
xchg
nop
inc
fwait
ret
mov
jne
arpl
outsb
sub
xor
insl
imul
jo
mov
add
test
shlb
scas
or
inc
jae
imul
mov
mov
pop
cli
repz
lock
jp
leave
nop
scas
push
xchg
pop
gs
sahf
repnz
add
add
xorb
aam
imul
pushw
test
add
cmpsl
sbb
test
pusha
movsl
mov
pop
xor
mov
aad
outsl
stos
sub
inc
pop
jo
cwtl
cmpsl
xchg
adc
cmp
cmp
push
loopne
and
pop
mov
in
add
outsb
inc
cmovne
add
scas
jmp
ficompl
cmp
push
xor
push
insb
test
pop
divl
add
or
push
adc
call
sub
fmulp
pop
jno
jl
pop
add
add
mov
add
in
add
xor
mov
stos
xor
jns
mov
inc
push
push
add
xor
clc
loope
jbe
icebp
loop
lods
or
movsl
or
and
add
xchg
cmpsb
add
dec
loop
dec
add
mov
xor
fsubrs
dec
sbb
add
jecxz
getsec
and
imul
mov
add
fmull
dec
icebp
hlt
ret
dec
stc
dec
mov
ja
xor
lock
and
push
pop
shlb
push
in
das
ljmp
sbb
add
aad
inc
add
add
add
mov
push
add
outsb
inc
cmovne
sub
lods
call
xchg
cmp
nop
out
lret
xor
ds
jne
xchg
repz
pop
adc
mov
int
das
jbe
mov
jg
mov
and
popa
pop
xorl
fstl
je
sbb
inc
adc
mov
add
je
stos
and
dec
lahf
mov
jb
xor
jns
je
test
lock
xor
fstl
dec
lret
call
pop
push
dec
push
es
gs
shll
mov
outsb
add
mov
icebp
mov
int3
or
ljmp
fcmovu
dec
dec
inc
repnz
sub
add
cwtl
out
aaa
ljmp
sub
xchg
mov
and
push
or
call
xor
int3
jbe
push
test
mov
mov
push
sbb
lcall
add
add
pop
xor
pop
aam
outsb
out
int3
add
rclb
cmp
and
mov
mov
adc
dec
inc
lea
mov
fisttpl
pushf
loop
gs
mov
sub
xor
mov
ja
outsl
mov
and
xor
mov
inc
das
loope
push
dec
data16
mov
out
xor
mov
dec
pop
jge
sub
mov
xchg
dec
es
mov
popa
imul
xlat
repz
push
fs
ret
mov
mov
insl
shlb
inc
and
push
sub
push
inc
repnz
inc
les
dec
or
mov
lcall
loop
outsl
sub
xchg
adc
or
adc
pusha
repz
insl
and
add
pop
mov
fidivrs
mov
pop
mov
push
mov
mov
arpl
call
lods
pop
mov
pop
push
cs
push
outsl
gs
jmp
pop
jae
bound
test
xor
mov
xor
or
xor
xor
push
xor
addr16
in
fwait
or
add
rolb
sub
popa
gs
call
pop
dec
or
lods
cli
add
mov
mov
ljmp
addb
xchg
push
neg
repnz
pop
loop
bound
scas
xor
stos
adc
jecxz
in
sbb
outsb
add
mov
je
mov
xchg
cmpsl
dec
ror
push
mov
or
add
call
add
add
add
test
out
cmpsb
outsl
test
test
stos
rcrb
test
lock
pop
loope
push
jns
or
push
sbbl
fyl2x
les
add
adc
mov
pusha
mov
outsb
inc
add
pop
popf
add
fnstcw
push
ret
daa
iret
or
xor
push
pop
and
cmp
or
inc
mov
test
sub
push
std
mov
stos
stos
or
daa
push
negl
in
or
aad
fisttpll
cmpsb
add
adc
inc
gs
mov
add
push
pop
clc
fimull
push
out
xchg
sub
cmpb
mov
into
pusha
ljmp
push
loop
add
or
cmpsl
mov
int
icebp
pop
cmpsl
rorb
xchg
fs
nop
scas
cmp
movsb
jae
pop
fidivrl
jecxz
out
push
enter
lret
scas
add
int
out
push
mov
and
xor
loope
mov
or
sbb
xchg
cs
repnz
or
and
cld
test
pop
xchg
pop
and
call
in
out
xlat
lahf
xchg
rclb
call
jecxz
xor
shrb
push
ja
sub
mov
xor
xor
enter
push
pop
xor
xchg
das
aaa
fidivrl
add
and
pop
cmp
and
inc
add
test
sbb
dec
push
mov
jae
sub
add
frstor
cmovg
shrl
sbb
xor
mov
jge
fisttpl
add
xchg
andl
repnz
add
insl
mov
dec
scas
add
adc
inc
stos
xchg
cmp
add
stos
mov
push
or
sub
scas
jl
push
and
dec
fadds
mov
adc
sub
xchg
mov
in
or
sbb
or
insb
xchg
lahf
add
in
enter
inc
push
mov
test
xchg
bound
aaa
test
loope
jmp
and
xchg
cmp
or
add
shrl
dec
clc
cmp
or
fnstsw
sub
rol
cwtl
int3
stos
fstpl
scas
sub
fstpl
jl
jp
int
dec
cmc
adc
xchg
flds
dec
fbstp
leave
add
repnz
test
push
adc
sbb
lahf
fdivrs
xlat
ljmp
out
sub
jne
fdivrl
adc
fnstsw
test
xchg
mov
mov
jo
lret
add
mov
sbb
add
inc
hlt
add
xchg
adc
add
sub
inc
fimull
in
cmp
imul
pop
add
push
arpl
test
out
sbb
add
sub
add
repnz
dec
xchg
push
test
cmpb
cld
in
cwtl
add
shrl
lcall
jle
dec
cli
or
or
mov
add
inc
dec
push
daa
inc
insl
in
repnz
or
push
loopne
aad
sub
inc
mov
aam
popf
test
pop
adc
clc
jge
outsl
testb
arpl
lock
test
popf
lea
inc
fucom
add
daa
push
movsl
data16
mov
test
push
sub
sub
scas
outsb
jge
xchg
sbb
lret
popa
out
fistps
ret
push
aaa
inc
in
aas
sbb
jbe
adc
jbe
je
pop
add
jb
stc
mov
push
arpl
movsb
test
mov
and
add
out
or
and
and
fisubs
icebp
fiadds
sub
push
dec
sub
jle
add
sti
sbb
cwtl
call
std
lods
adc
test
mov
loop
xor
adc
mov
xor
jno
push
xacquire
cmp
cld
dec
xor
rclb
aas
jbe
ljmp
dec
out
dec
adc
pushf
test
pop
mov
sub
dec
dec
cld
ljmp
sbb
scas
lahf
int3
add
push
jb
fadds
mov
mov
push
imul
in
int
out
andb
pop
sarb
in
inc
sbb
int3
mov
stos
sbb
sbb
jle
pop
jge
outsb
insb
cwtl
xchg
add
or
repz
jns
jg
cs
out
sahf
mov
cltd
add
xor
sub
cmpsb
mov
adc
pop
pop
cmp
pop
cmpl
add
int
sbb
mov
mov
in
popw
aam
fwait
mov
add
in
or
mov
in
mov
inc
aad
enter
out
lcall
mov
and
push
adc
pop
aaa
mov
fsincos
push
mov
lods
cmp
fwait
add
cld
in
or
sbb
jbe
lret
sbb
gs
mov
cltd
jne
xchg
dec
popa
icebp
pop
push
and
sub
xchg
andb
push
adc
adc
inc
add
cmp
jl
push
mov
aaa
inc
lds
dec
popl
cmpsl
sahf
das
push
or
push
mov
mov
aam
mov
int3
sbb
or
pushf
adc
add
loop
dec
inc
jne
and
add
out
sub
jmp
cmp
push
ror
cld
or
inc
mov
pop
add
cmpsl
pushf
in
add
jmp
out
gs
out
xor
ljmp
ss
mov
pop
into
sbb
push
int3
cmp
xchg
or
add
rcrb
pop
jbe
ds
lea
addl
rolb
add
xchg
movb
scas
xor
repz
add
mov
clc
es
push
int
add
clc
push
pmullw
cmp
mov
sti
mov
cmp
lods
xchg
cs
in
bound
in
jnp
les
jecxz
ret
and
add
movaps
verr
sbb
fs
mov
add
jge
add
inc
fdivrs
and
pop
ret
xchg
out
lods
add
rcll
fbld
pop
mov
jb
out
in
dec
cmpb
das
or
mov
pop
cltd
not
out
or
adc
lock
jae
xor
inc
xchg
clc
out
jge
ljmp
scas
pushl
int3
mov
pextrw
test
outsb
lret
mov
enter
mov
cmp
adc
sub
dec
scas
fidivrl
fsubs
cmpl
add
cmc
es
rcrb
xlat
call
add
push
pop
aam
lods
rcrb
fdivrs
xor
xchg
addr16
into
mov
gs
cmp
je
pop
and
in
adc
sbb
dec
xchg
dec
jg
jmp
dec
je
mov
sbb
cwtl
loope
lea
les
mov
add
push
jg
add
inc
addr16
daa
jecxz
cwtl
mov
inc
push
jo
jnp
jecxz
pop
imul
dec
das
mov
movsb
add
inc
mov
add
and
pop
sahf
fs
rep
xlat
add
sub
push
mov
mov
add
int
inc
dec
jge
and
or
loope
int3
fildl
add
movsb
inc
mov
mov
inc
lcall
pop
mov
stc
mov
lods
fwait
mov
popf
mov
mov
add
adc
adc
cmp
sahf
pop
orb
mov
test
xor
jge
jno
and
add
inc
fnstenv
int3
push
xchg
push
xchg
or
aad
insb
xchg
mov
sbb
inc
leave
dec
or
cmp
mov
inc
or
cmp
insb
icebp
lods
xchg
adc
and
in
or
cmp
pop
add
pop
and
ficompl
icebp
in
clc
and
jecxz
movsb
xchg
mov
pop
stos
incb
repz
add
out
jno
roll
insb
outsl
lcall
incl
cmp
dec
cli
fs
cmpsl
cmp
ljmp
dec
in
out
mov
aas
dec
sahf
pushf
movsl
int3
popf
cmpsl
int
push
in
inc
movb
or
dec
aas
jg
test
aam
mov
push
es
cmp
repz
jmp
rcrl
add
outsb
lds
testb
cli
pop
pusha
mov
mov
lret
mov
or
jl
loope
and
xchg
nop
pop
jp
outsl
sub
cmp
bound
add
into
push
jnp
testb
sbb
dec
popf
inc
pushf
arpl
jo
mov
cmp
mov
push
xchg
mov
into
cmpsl
pop
js
sbb
sbb
lret
push
aad
or
cmp
aaa
push
out
push
call
inc
scas
int3
fnstcw
sbb
out
mov
fisttpl
testl
xchg
outsl
sahf
mov
sub
push
or
or
pusha
cli
adc
xchg
xchg
and
movsb
add
cltd
add
cmp
fdivs
clc
rorb
inc
hlt
fstpt
je
negl
arpl
aaa
and
add
add
jmp
cs
pushf
push
push
inc
mov
sar
test
out
xor
jg
mov
iret
add
stc
add
lods
orb
add
loope
inc
add
add
outsb
scas
and
lods
xchg
pop
xchg
jge
add
add
add
and
add
inc
cmp
mov
imul
add
mov
ja
loop
out
dec
leave
fmul
test
cmp
cmpsb
xor
add
pop
or
pop
das
iret
xchg
add
sub
les
add
pop
in
add
rorb
add
push
mov
jmp
bswap
add
sub
lcall
pop
popa
fistpll
add
pop
adc
lock
mov
sub
ds
out
add
push
ror
rorl
cmp
mov
out
movl
add
pop
push
test
sub
imul
sti
ret
add
push
add
xor
pop
popa
xchg
gs
jno
push
or
mov
int3
movsl
push
inc
rolb
and
add
add
int3
add
add
imul
add
or
sti
add
addb
or
dec
add
cmpsl
inc
or
and
scas
testl
mov
outsl
mov
add
lods
inc
mov
xchg
fcomp
sub
adc
push
inc
inc
push
loope
adc
test
lea
das
pop
dec
cmp
add
add
or
dec
inc
push
daa
hlt
fsubrl
loope
fldt
loope
lret
push
mov
sub
insb
jle
adc
or
test
daa
jge
cmpsb
dec
into
mov
mov
inc
push
testl
outsb
dec
jl
shrb
cmpsl
cld
decb
shr
mov
cld
add
xchg
pop
ficoml
sbb
cltd
inc
xchg
out
cmp
add
lea
add
out
fmul
fisttpll
add
push
inc
mov
inc
out
add
out
xchg
fisttpl
add
cmp
pop
cld
jns
add
in
jno
dec
xor
push
dec
inc
dec
xchg
xchg
orl
mov
pop
add
pop
mov
lock
mov
mov
add
cmp
xchg
sub
aam
rcrl
jo
pop
xchg
add
push
mov
in
or
ret
sysexit
push
iret
lock
add
or
pop
icebp
cmp
andl
or
stc
adc
sti
jns
in
outsl
sub
jb
add
ss
sub
add
or
mov
popf
inc
mov
sahf
or
add
adc
mov
popa
test
clc
adc
out
cmpsb
jmp
pop
sub
pop
in
add
and
dec
frstor
stc
imul
xchg
cli
xchg
lods
dec
bound
pop
scas
xchg
add
mov
fcomp
sub
or
jnp
sbb
rcr
data16
add
dec
jbe
inc
imul
ret
add
or
in
aas
or
icebp
inc
or
and
sbb
out
add
lea
rcl
lods
xlat
shrl
cmp
out
pop
xor
and
or
mov
cmp
cmp
mov
add
test
imull
enter
adc
outsl
sbb
jp
mov
int
sub
nop
mov
sbb
or
xchg
insb
and
call
sarb
mov
ja
dec
lds
ret
inc
xor
shrl
outsl
nop
add
xor
xor
mov
cltd
and
push
lods
or
push
test
movsb
adc
jl
ja
lods
insl
sub
test
scas
scas
xor
add
xlat
into
pop
add
push
push
inc
inc
mov
ret
inc
inc
fcomps
mov
sahf
dec
ljmp
fwait
sbb
sahf
nop
jl
dec
rorb
movsl
pop
jae
push
sub
dec
int
sti
stos
enter
and
mov
add
ficoml
add
cmpsl
dec
imul
and
bound
leave
or
pop
arpl
cmp
xchg
mov
adc
out
out
adc
or
clc
je
inc
test
fs
out
fwait
clc
test
mov
sahf
loopne
add
aam
add
and
comiss
inc
ret
fstps
dec
test
mov
push
insl
mov
add
push
ret
push
cmp
inc
movsl
and
dec
inc
scas
sub
xlat
jno
lods
int3
add
xor
imul
and
or
pop
sub
xchg
leave
test
mov
sbbb
out
add
test
mov
sub
ss
outsl
ljmp
test
xchg
bound
xlat
test
cli
addr16
lea
ds
shrl
dec
sbb
push
sbb
pop
sti
jae
inc
adc
rcr
andl
das
and
add
or
jecxz
add
add
dec
xchg
in
dec
popa
add
mov
inc
dec
jns
jp
das
adc
jl
leave
xor
inc
xor
push
push
sbb
in
mov
or
xchg
imul
out
xchg
mov
xchg
mov
pop
daa
ja
pushf
lahf
mov
cmp
xor
add
int
jmp
pushf
test
add
jl
sahf
adc
mov
arpl
mov
outsb
fwait
mov
jl
addr16
push
pop
cmp
add
ret
fdivrl
dec
pop
sbb
push
insl
test
aad
push
sbb
dec
mov
push
fisubl
jge
cmpsl
loopne
in
popa
imul
int3
lds
xor
sbb
push
mov
mov
jo
daa
pop
and
and
into
and
adc
xchg
cmc
arpl
sbb
sub
mov
sub
and
fs
xor
repz
out
jnp
add
jecxz
push
test
cs
addl
nop
cmp
bound
shl
xor
push
add
cmp
inc
aas
dec
cmp
and
pop
and
jno
mov
cmp
xor
lods
push
sub
fcom
movsl
pop
in
scas
and
mov
mov
je
dec
lock
orb
dec
lahf
fsubp
popf
rcrl
loope
xchg
cmp
dec
lret
inc
outsb
push
inc
add
pusha
add
xchg
fsubrl
inc
insb
ja
int
sbb
fpatan
fidivl
lds
sub
inc
add
jl
mov
mov
adc
jb
repnz
stos
stos
mov
ret
and
scas
fnstcw
dec
cmp
sub
add
pop
mov
mov
mov
sub
mov
out
stos
loop
or
mov
jae
retw
and
notl
lcall
movsl
leave
fcos
imul
call
addr16
shrb
pop
xorb
lret
add
dec
lret
xchg
mov
push
insb
sahf
jle
fdivrl
adc
add
scas
lods
movsb
mov
push
inc
jno
pop
pop
cmp
hlt
xsaveopt
push
repnz
dec
in
jle
mov
scas
mov
roll
cmp
jp
dec
push
sub
stos
add
cs
fs
add
push
push
mov
push
gs
and
mov
add
es
cmp
push
jno
dec
or
pop
addl
add
ljmp
dec
inc
fists
in
test
out
and
jbe
cmp
cmp
jg
adc
add
cli
das
cmp
adc
inc
sub
pop
jle
aas
cmp
sub
cltd
lcall
loopne
nop
aas
popf
lcall
pusha
mov
sti
scas
in
lock
roll
add
push
dec
test
aaa
xor
arpl
lock
iret
int3
pop
leave
negb
pushf
pop
adc
fists
roll
scas
xor
xchg
mov
mov
xchg
mov
sub
insl
fxch
outsl
jne
mov
aas
cmp
push
sbb
test
mov
movsb
stos
popa
add
cmp
imul
mov
sti
lret
dec
dec
in
push
jle
jmp
andb
lret
and
jmp
out
cli
jo
dec
cmpsl
xchg
jg
sbb
or
roll
movsl
mov
andl
dec
aam
scas
imul
inc
push
sbb
cmp
icebp
xchg
in
add
add
fcompl
call
test
icebp
or
xchg
cmc
xor
pop
daa
lret
sti
mov
push
mov
movsl
ljmp
lret
out
pop
jecxz
ficoml
scas
pop
insb
dec
pop
cmp
inc
xor
xor
daa
mov
lea
lds
je
gs
inc
aam
xchg
std
das
shlb
pushf
pop
jg
enter
xlat
std
int3
sbb
stos
jecxz
clc
faddl
push
push
push
dec
push
cwtl
add
lock
inc
in
out
and
stos
scas
test
leave
jmp
push
scas
fsub
scas
mov
outsb
outsb
lds
mov
lahf
jl
out
arpl
push
pop
arpl
loope
and
fidivs
xchg
add
ficomps
inc
incb
inc
leave
shrl
mov
lods
xor
sbb
jb
pop
aaa
cmp
pop
dec
push
addr16
out
and
jb
aas
pop
inc
add
mov
outsb
sbb
jle
sub
jns
adc
jb
sub
cmc
fldenv
push
cmc
xchg
aas
push
xchg
outsb
int3
jno
mov
add
pop
jmp
mov
repz
jmp
adc
fcmovbe
mov
fstpt
or
xchg
mov
jmp
and
int
clc
mov
cmp
cmpsb
imul
add
inc
mov
inc
mov
lret
cmp
add
mov
mov
inc
cmp
dec
enter
lret
mov
fidivrl
add
repnz
in
sub
jmp
pushf
inc
add
jmp
jge
pop
add
mov
lds
clc
add
dec
int3
iret
mov
cmp
and
ds
sbb
imul
inc
or
ret
pushf
lds
fldt
imul
repz
cmp
push
testb
jno
sahf
mov
cmp
jl
loop
add
sub
cld
sbb
mov
test
pop
loop
push
ss
andl
jecxz
add
sbb
in
sbb
push
or
cmp
scas
lock
out
push
or
adc
push
xchg
dec
mov
push
jp
fwait
testb
jb
enter
stos
jecxz
flds
xchg
mov
pop
fisttpl
xor
pop
out
mov
jmp
shl
push
scas
lea
in
xchg
or
ja
add
imul
mov
fisubl
dec
adc
addr16
or
xchg
in
dec
ja
mov
add
rcl
sub
mov
push
mov
cwtl
incb
adc
daa
fcmovbe
adc
shll
xchg
add
scas
mov
fldl
mov
and
stos
ljmp
add
lahf
add
lcall
neg
icebp
mov
xchg
aas
push
out
add
mov
add
sub
add
mov
lock
push
sub
bound
std
dec
sbb
push
int
add
insb
mov
jl
shrl
add
iret
cmpsb
add
ss
sbb
insl
xchg
lods
mov
push
enter
adc
ficomps
mov
mov
arpl
xbegin
inc
fwait
adc
and
pop
add
inc
aas
fsubs
push
scas
orb
sti
add
mov
std
add
push
sarl
mov
add
imul
scas
push
cmp
xor
out
push
imul
adc
les
dec
push
mov
jle
pop
jg
add
push
push
sbb
xchg
movsl
imul
sbb
sub
popa
cmp
push
daa
add
add
into
clc
add
lret
enter
iret
add
dec
repz
xor
jns
scas
push
cmc
ficompl
lahf
ljmp
add
add
xor
or
flds
add
inc
add
inc
andb
roll
jmp
and
add
and
cmp
jge
push
xchg
aad
ss
xor
mov
std
daa
add
subl
mov
jbe
fmuls
xor
add
sbb
dec
add
scas
outsl
add
pop
xchg
add
stc
mov
ror
mov
adc
add
fiadds
add
pop
push
bound
sub
add
dec
mov
mov
lret
rolb
inc
and
add
das
loop
add
sbb
pop
shr
mov
push
or
montmul
cmpsb
add
xor
lods
xor
cwtl
xchg
mov
add
adc
xor
or
push
shll
sahf
jbe
out
repz
rcr
mov
cmpsb
add
sti
sahf
add
fs
repnz
xor
xchg
mov
inc
sti
add
mov
aam
fildl
dec
add
jae
push
or
ds
inc
mov
mov
cmpsl
ds
sahf
sub
and
std
lds
or
add
lds
mov
xchg
add
dec
add
test
and
out
js
movsl
icebp
jl
fmul
xorl
imul
dec
icebp
outsb
in
dec
pop
popf
cmp
dec
vmovdqu
mov
lea
lret
xchg
shll
mov
jns
les
mov
sahf
imul
sub
arpl
sub
xchg
add
pop
jge
decl
adc
pushl
lods
add
lock
add
cmp
xchg
push
into
out
pop
push
and
int
jae
and
cltd
mov
add
insl
insl
xor
jae
cld
pop
push
fcoml
push
mov
dec
popf
inc
ret
ret
lcall
in
lcall
mov
leave
xchg
add
and
and
in
rorb
sub
test
outsb
aas
jmp
or
enter
or
lods
or
adc
push
mov
loop
inc
mov
dec
leave
popa
add
pop
into
rep
push
cmp
dec
outsl
out
rorl
ret
xchg
data16
insl
dec
mov
adc
cmp
sbb
mov
mov
movsb
push
push
dec
sti
fs
popa
lcall
add
and
rep
fstps
cmpsl
adc
add
arpl
add
xor
jge
data16
push
outsb
mov
dec
mov
outsl
fs
inc
cmpsl
repnz
clc
or
mov
jecxz
mov
inc
loop
loop
loope
push
fs
ja
add
into
dec
sub
inc
dec
jl
stos
shlb
push
add
xor
xchg
jno
add
test
out
lods
das
fmuls
stos
dec
std
fwait
cmp
xchg
and
jmp
jg
cmc
orl
out
or
sub
add
xchg
sub
mov
push
sbb
loop
sub
insl
lods
insl
in
xchg
js
lret
sub
movb
mov
and
add
add
mov
add
add
pop
ret
adc
mov
jns
std
mov
test
add
add
lods
push
and
pop
dec
sub
aas
dec
icebp
inc
lea
cmp
lret
dec
adc
mov
pop
sub
mov
adc
xchg
mov
fisttps
int
adc
in
add
add
add
enter
pop
mov
lahf
or
fimuls
int
into
or
incb
test
das
andb
sarl
and
out
daa
shlb
push
test
cmp
out
add
loope
jb
insl
hlt
orl
add
cld
sti
mov
xchg
les
push
sbb
shll
movsl
ds
mov
sbb
add
je
xchg
cmpb
mov
test
and
bound
les
popa
adc
xchg
data16
ret
popa
sub
lret
arpl
push
cs
cwtl
lods
mov
ljmp
shrb
jp
xchg
sti
scas
push
pop
mov
mov
iret
jbe
cli
sbbb
add
push
jno
push
inc
rcr
jmp
pop
mov
add
cs
ljmp
pop
add
add
mov
mov
dec
call
or
add
xchg
add
dec
sub
xor
cmpsb
loopne
mov
shlb
ret
xlat
cmpsb
or
adc
sub
mov
xlat
fwait
push
scas
idivb
lods
int3
outsb
imul
add
add
imul
push
add
gs
dec
fdivrl
clc
ljmp
adc
adc
out
dec
inc
popfw
test
cwtl
call
loope
test
orb
in
jmp
movsb
and
cmp
cmpsl
fsubrl
pop
lea
push
push
inc
in
mov
pcmpgtb
insb
lods
aaa
lea
addr16
push
mov
or
loopne
sub
jecxz
adc
ljmp
cmp
jnp
pop
lock
add
ljmp
nopl
cmp
scas
mov
push
loopne
ret
loop
sub
leave
or
push
repz
xchg
imul
xor
jae
push
insb
xchg
jnp
add
std
xor
cmp
push
inc
add
leave
into
add
das
aaa
pop
leave
inc
icebp
popa
repnz
add
call
jae
sub
addr16
scas
dec
cmpsb
inc
jmp
ds
and
fsub
add
sbb
adcl
and
add
jecxz
jbe
outsl
dec
shr
cmp
add
pop
mov
loop
jmp
icebp
out
bound
lcall
mov
rolb
mov
cwtl
cs
add
dec
dec
call
in
mov
test
xor
cmp
push
add
push
aaa
add
mov
or
mov
push
mov
into
addl
jmp
rorb
pop
or
stos
or
cmp
dec
and
mov
add
call
test
cld
out
ret
mov
arpl
bound
pop
aas
fcmovbe
mov
rolb
pandn
lea
mov
bound
loop
push
lret
or
out
mov
out
test
lods
cld
cli
push
fdivrl
fs
mov
and
and
mov
test
xchg
mov
movl
pusha
jb
sbb
and
das
scas
xchg
sub
out
add
test
sub
mov
mov
jno
push
adc
dec
xor
dec
mov
cmp
inc
mov
mov
pop
cld
lcall
stos
mov
xor
imul
or
ret
mov
lcall
pop
inc
mov
iret
fidivrl
pop
mov
jne
pop
fiaddl
add
pop
dec
lock
pusha
add
in
cld
icebp
cli
rorl
xchg
xor
push
imulb
aam
mov
repz
or
mov
in
xor
dec
xchg
in
push
mov
xor
and
mov
jb
mov
movsl
cmp
call
test
lods
clc
or
test
and
jg
lahf
es
cmp
pop
push
leave
addl
call
push
out
out
cmpsb
mov
pop
pop
addr16
sbb
outsb
push
cmp
xlat
xchg
fmull
cmc
stos
loop
inc
inc
in
nop
sbb
arpl
adc
dec
jmp
popl
push
dec
push
cld
fildl
stos
dec
adc
mov
add
pusha
xorl
inc
cmp
lcall
inc
pusha
mov
fsts
pop
jle
push
adc
data16
pop
mov
mov
sub
jg
add
addb
sbb
inc
xchg
push
add
jbe
mov
rorl
mov
add
xlat
aam
adc
cmp
dec
adc
inc
pop
daa
jne
cmpsb
dec
or
iret
inc
or
and
dec
pop
gs
jecxz
lret
in
pop
scas
daa
adc
mov
mov
lea
fadds
stos
cld
cld
scas
mov
mulb
xchg
mov
pop
repnz
sbb
lahf
incl
mov
fistpl
scas
mov
add
lret
push
hlt
sbb
xor
jmp
add
insl
fimull
jecxz
stos
sub
jmp
lea
push
jle
add
arpl
stos
dec
jg
cmp
fdiv
cwtl
sbbb
es
pop
adc
movsl
adc
cmp
sbb
inc
test
rorb
jle
push
and
or
popa
or
push
inc
or
add
aaa
mov
or
repnz
jle
cld
or
loopne
dec
inc
outsl
sub
jl
inc
xchg
test
sub
imul
xchg
dec
pop
loop
adc
adc
or
xchg
mov
xor
ljmp
lahf
jmp
cltd
imull
int3
pop
lcall
mov
add
in
add
push
add
sti
mov
and
cmp
int
test
adc
inc
adc
mov
jno
clc
cmp
xchg
mov
test
or
cmpsl
xchg
xor
imul
loope
pop
mov
mov
out
dec
inc
jbe
idivb
xchg
test
cmp
dec
dec
inc
mov
add
xchg
insl
xadd
cmp
loop
add
mov
lods
sbb
dec
pop
cmp
add
and
ret
aas
shl
push
sub
movsl
inc
pusha
ret
cmp
outsb
push
jp
mov
adc
cmp
fs
add
mov
pusha
sub
inc
lock
addr16
add
adc
psubusb
out
and
lods
inc
push
inc
sbb
sub
pushf
movsb
xchg
hlt
sub
dec
std
xchg
add
xchg
fstpt
inc
aad
ja
mov
push
addr16
stos
mov
ljmp
test
fiaddl
push
pop
push
jle
dec
or
push
pop
ror
add
fisttpll
test
add
and
lock
xor
add
pop
cmc
gs
cmpsb
or
mov
or
push
push
mov
jle
jmp
mov
aam
rorl
cmpsb
mov
inc
iret
out
push
push
add
adcb
rolb
dec
add
fstl
icebp
jmp
sti
mov
cmp
add
je
aam
push
xor
add
jmp
or
hlt
push
loopne
ja
inc
push
div
push
xchg
jecxz
aad
jp
das
test
sahf
pop
shl
push
add
add
push
bound
ror
lcall
aas
mov
pop
fwait
ret
fnstenv
pop
add
push
or
cmpsb
imulb
and
rcrl
pushf
popa
add
cmp
pop
add
pushf
testb
loopne
add
pop
xlat
adc
xchg
or
jno
pushf
nop
rcll
aad
rcrb
inc
rsm
shrl
mov
outsb
push
adc
fs
imul
jp
sub
add
mov
pusha
or
inc
lret
mov
iret
pop
mov
das
stos
aas
add
sub
fnsave
fnsave
or
add
cmp
aaa
inc
push
addb
mov
cmp
int
movsl
jge
add
pop
arpl
or
test
xchg
ret
add
mov
sahf
mov
add
add
pop
ds
sti
arpl
mov
andb
add
mov
popf
out
inc
add
jmp
inc
cltd
add
add
inc
sub
imul
lahf
loopne
push
lcall
ljmp
call
xchg
mov
loope
iret
sbb
add
mov
js
inc
fs
outsl
add
loop
and
add
nop
nop
sub
jl
jp
sbb
sbb
flds
out
sub
repz
test
inc
inc
mov
mov
adc
xchg
cmp
nop
out
jbe
pop
and
outsl
xor
push
xor
adc
add
inc
or
dec
cmp
imul
or
or
pop
add
mov
xchg
sbb
sbb
dec
fs
out
add
out
addr16
mov
into
jnp
lret
shrl
mov
loop
stos
xchg
adc
shrl
int
inc
adc
or
cli
xchg
add
push
and
negl
add
out
lods
mov
and
scas
mov
les
addl
lock
es
fistpl
rclb
popf
jae
cs
xor
inc
arpl
sub
js
pop
jp
cmc
insl
jne
mov
and
sahf
push
add
mov
or
or
testb
scas
popa
sarb
cmc
clc
xor
mov
das
pusha
inc
shl
dec
cld
add
lahf
daa
outsl
repz
or
or
rcl
inc
iret
jne
mov
fdivrl
xchg
cmpsb
add
mov
out
add
repnz
orl
add
inc
loope
xchg
pop
cli
out
hlt
fldt
sub
dec
int3
imul
fwait
gs
xchg
cli
fidivl
sar
mov
lods
and
mov
xor
xor
aaa
add
sbb
dec
mov
repz
mov
arpl
cmpsl
pop
xchg
sti
jecxz
mov
xor
js
aad
das
into
add
das
add
iret
out
pop
jae
cwtd
imul
dec
in
inc
aas
out
mov
aad
out
add
int
mov
call
mov
rolb
andb
add
push
roll
je
add
das
add
sbb
shlb
add
or
add
push
fdiv
add
dec
add
add
add
xor
jl
xchg
cli
pusha
add
lods
add
in
jmp
pop
in
add
ljmp
add
fisubs
loope
jg
jp
popa
test
cmp
add
popl
cmp
outsl
jae
adc
add
shrb
movsl
sbb
stc
cmp
sbb
cs
dec
sub
lahf
test
cmpsb
add
mov
fucom
add
fistpl
lock
inc
stos
int3
stos
into
mov
ror
test
inc
add
add
ficompl
adc
test
add
pusha
cltd
ljmp
push
aas
ljmp
add
add
sub
dec
or
jno
add
jno
add
lds
arpl
add
and
cld
xchg
lcall
add
mov
add
add
mov
add
loop
sti
push
add
outsb
cmp
add
dec
add
mov
test
add
iret
jbe
push
mov
je
add
insl
add
add
out
test
sbb
xor
add
ret
add
popl
inc
imul
add
jns
add
inc
push
cmp
test
xchg
mov
add
add
inc
add
add
iret
test
lret
movl
inc
add
fwait
jbe
sub
add
add
outsl
add
in
add
imul
bound
xchg
add
sub
xchg
insb
mov
add
pop
add
scas
aad
sbbb
add
add
std
sbb
add
jge
jecxz
add
ja
and
xor
mov
add
push
jno
nop
mov
adc
fsubrs
hlt
lahf
add
sbb
popf
jl
cs
mov
add
add
or
les
mov
add
add
add
xor
add
filds
and
add
lahf
in
enter
add
hlt
ficoml
add
add
dec
mov
push
stc
add
aas
std
cmp
add
cmp
add
jmp
add
sbb
mov
add
add
insl
lcall
add
adc
add
inc
shl
add
add
sub
add
add
data16
stos
add
add
add
ret
adc
fadds
push
movsb
inc
add
jo
mov
sub
adc
push
std
add
jp
out
adc
pop
jb
add
add
pop
xchg
add
push
add
pop
add
pop
add
js
add
sbb
aaa
xchg
add
add
imul
aas
mov
add
ds
cmp
in
aaa
add
add
pop
jge
xor
add
inc
popf
cld
in
fldl
add
fildl
sub
in
adc
or
test
add
pushf
add
add
lret
add
adc
sarb
je
add
add
add
fwait
add
add
out
lcall
or
push
jl
subps
rcr
add
mov
mov
add
nop
xchg
add
add
loope
push
add
add
add
mov
add
add
out
sbb
add
inc
sbb
mov
add
add
xor
iret
xchg
push
cmp
xor
roll
hlt
sbb
lcall
add
sbb
add
xchg
add
mov
imul
repz
cmp
cmpsl
pop
aas
add
add
mov
xchg
push
cli
add
add
flds
outsl
filds
xchg
fldl
or
push
add
or
ror
jno
xorl
dec
cld
add
add
lret
push
jae
push
xor
mov
push
cld
popf
add
add
aad
mov
add
jmp
add
pop
add
jg
mov
add
add
cmc
add
add
add
dec
lods
sbb
add
pop
add
insl
push
add
push
adc
fs
push
pop
add
test
jg
sarl
aam
add
fdivl
adc
add
cmp
insb
mov
popf
xor
sahf
add
inc
sbb
into
push
add
xchg
add
add
add
aas
add
add
shlb
push
cmp
add
pushf
add
add
filds
inc
hlt
fildl
std
fadds
jbe
add
fiaddl
mov
pop
sbb
add
imul
incl
cmp
add
add
aam
jne,pn
inc
lahf
add
and
pop
nop
add
add
add
ret
insb
xlat
add
add
aaa
add
add
mov
xlat
daa
mov
cmp
nop
xchg
add
xor
xor
loope
enter
pop
add
pop
add
pop
add
add
mov
push
aad
sub
out
sub
insb
roll
jo
adc
jge
sbb
add
add
xor
xorl
out
add
roll
adc
add
add
xchg
add
sub
xchg
add
mov
pop
xor
and
mov
fs
insl
mov
inc
jbe
add
ljmp
add
add
faddl
sbb
sbb
add
add
lret
mov
sbb
add
lcall
clc
pop
xor
add
mov
add
add
fwait
add
xlat
xor
add
adc
dec
outsl
pop
add
roll
mov
or
add
mov
mov
add
bound
add
pop
add
pop
add
pop
add
pop
add
xor
add
inc
add
add
out
insb
jg
add
xor
into
jns
lds
enter
enter
testb
arpl
mov
adc
les
fs
add
roll
inc
jl
add
add
add
add
push
add
add
lods
aam
add
add
cmp
cmp
add
add
mov
add
stos
add
add
filds
std
fiadds
loop
add
fadds
pusha
jo
add
push
add
incl
dec
add
lock
incl
and
cli
add
testl
jne
jbe
push
add
add
add
lahf
add
adc
add
addl
push
add
add
jae
and
adc
add
add
mov
jmp
roll
scas
adc
sbb
sbb
pop
add
pop
add
add
pop
add
add
add
push
sbb
sbb
add
pop
jl
or
repnz
iret
add
adc
cmc
cmp
pop
mov
cmp
cmp
add
add
add
or
sub
add
push
add
add
stc
add
add
repnz
pop
add
add
add
add
add
add
lret
jmp
mov
in
cmp
out
xor
add
add
nop
add
add
jae
int3
jns
int
add
fs
add
in
add
jne
inc
and
lods
test
add
add
cli
add
add
add
add
add
sub
add
mov
fldl
add
add
add
testl
or
push
out
outsb
push
cmp
insl
push
ljmp
jb
mov
inc
gs
cwtl
fsubrl
xor
dec
pop
int
pop
lret
pop
roll
js
les
sub
xchg
sbb
jp
sub
stos
sub
test
inc
in
sarl
jecxz
xchg
cmpl
push
dec
jo
mov
push
lds
lret
pop
xchg
add
mov
dec
pusha
push
add
xchg
mov
ljmp
push
cmpsb
push
xchg
fcomps
mov
sub
dec
dec
into
hlt
dec
cli
dec
lret
dec
imul
lods
fimull
or
repz
lods
sub
lds
dec
adc
mov
jne
inc
add
add
inc
add
add
scas
dec
mov
adc
inc
mov
imul
add
add
add
add
jno
lret
add
add
push
add
add
xor
add
sub
and
and
out
add
add
movsl
add
iret
add
jp
pop
or
pop
mov
add
add
in
mov
sahf
das
add
or
ficoml
subl
test
add
add
xchg
add
push
xchg
sahf
stos
lds
add
xor
add
hlt
pushf
or
jl
add
or
mov
add
lods
lcall
add
outsb
add
add
add
add
mov
mov
dec
add
add
add
inc
add
add
subb
notb
add
add
stos
add
add
mov
add
push
add
mov
mov
in
add
lea
jmp
push
add
xchg
add
add
popa
add
and
cmpsb
jmp
push
js
add
add
add
repz
mov
add
cltd
add
pop
pop
int
push
iret
add
add
add
test
pop
lret
and
xor
add
xor
add
add
popl
ret
mov
add
add
mov
mov
sbb
push
in
add
scas
add
scas
add
stos
add
test
mov
and
or
add
cmp
data16
iret
add
add
lret
movl
inc
add
jbe
lock
mov
xor
out
add
cmp
add
repz
add
inc
add
or
stc
cld
or
add
xchg
add
add
add
cmp
push
mov
xor
add
sbb
add
sub
sub
add
sub
pop
inc
add
sbb
pop
roll
mov
add
add
add
add
dec
add
shlb
mov
lods
add
mov
sub
adc
add
imul
push
sbb
popl
aas
cli
add
add
andb
add
mov
pop
mov
add
das
lret
push
add
add
scas
add
sahf
int3
add
xlat
test
icebp
xchg
ss
add
in
add
add
push
dec
add
add
movsb
add
add
jbe
fisttps
add
add
add
add
add
add
repz
and
scas
xchg
add
inc
add
or
fimuls
add
or
add
xchg
fimull
cmc
pop
mov
inc
cs
imul
iret
jmp
jp
xor
add
add
add
add
add
push
scas
aam
pop
das
test
lea
add
mov
jmp
or
lods
add
daa
movaps
mov
mov
pop
mov
add
sti
or
ljmp
das
adc
int
adc
in
in
out
ljmp
loop
aad
add
add
call
mov
dec
add
or
int3
inc
mov
cmovnp
dec
mov
data16
push
int
loope
lods
mov
pop
add
loopne
mov
fsubs
add
sub
test
aad
pop
xchg
mov
enter
scas
or
lods
mov
dec
test
inc
mov
jns
mov
add
imul
mov
enter
xchg
dec
std
and
insb
mov
cwtl
sub
push
inc
imul
dec
or
cmp
inc
iret
les
or
inc
and
inc
stc
incb
arpl
mov
and
or
add
push
inc
mov
imul
mov
fld
enter
fs
out
sub
or
js
mov
adc
sub
mov
cmp
test
dec
es
call
lods
mulb
addr16
daa
inc
stc
jmp
dec
jb
test
sub
int3
or
aam
iret
mov
ret
lret
add
out
fidivl
adcl
jae
mov
lods
xchg
mov
add
mov
jne
xchg
mov
cmp
jl
lock
insl
enter
xchg
mov
add
sbb
or
add
sbb
mov
repz
jge
sbb
addb
add
inc
dec
adc
push
xor
add
add
push
repz
int3
sbb
and
mov
push
cmc
mov
ss
shr
out
les
stc
sub
mov
adc
mov
lea
loop
fsubrl
mov
lock
lock
in
add
push
add
lods
mov
sub
roll
popa
mov
jo
sub
pushf
in
and
pushf
jmp
push
pop
lahf
xchg
dec
xchg
ficoms
loop
inc
sub
aam
in
fmulp
dec
stos
lret
mov
das
pop
or
stc
xor
cmpsb
pop
aaa
add
nop
rcll
dec
pop
add
std
scas
test
mulb
pusha
sbbl
jl
inc
arpl
or
orl
add
dec
popa
lcall
fisubrs
ds
outsb
insb
sbb
add
shlb
nop
adc
ret
adc
sbb
movsl
fwait
imul
outsl
sbb
push
gs
addr16
sub
movsl
hlt
ret
lret
lock
and
sub
jbe,pn
insb
dec
fst
push
xor
mov
sub
mov
or
or
sbb
aad
into
test
and
je
xchg
jb
sbb
xor
dec
pop
add
lahf
out
dec
pop
add
fwait
jecxz
push
add
in
aam
sbb
cmp
inc
xchg
mov
cld
jmp
mov
into
mov
inc
je
jmp
mov
fadds
lods
mov
inc
mov
enter
mov
add
in
lods
and
ficompl
jmp
mov
mov
insb
cmp
shll
adc
sub
leave
pop
ljmp
enter
insl
iret
gs
push
roll
out
fsubp
imul
or
jnp
inc
mov
addr16
out
pop
dec
jmp
adc
rcrb
inc
adc
mov
iret
loop
test
in
sbb
sub
pop
or
push
aaa
sub
mov
mov
xor
add
mov
lods
adc
test
out
push
and
out
jno
lea
int
add
push
mov
cmc
fs
add
xor
ficompl
add
fsubs
mov
iret
dec
insl
lret
insb
pop
or
mov
mov
jo
aad
inc
in
add
scas
cmp
popf
push
add
mov
adc
cwtl
aaa
fs
call
mov
or
jne
arpl
mov
mov
and
lret
mov
xchg
loopne
push
push
loope
push
or
dec
fisttpl
mov
int3
inc
insl
ret
inc
mov
inc
fidivl
push
jg
fstps
push
popf
into
int3
aas
and
mov
sbb
testb
xchg
movsb
pop
insl
mov
pop
imul
xorl
or
xor
add
jmp
sbb
sub
xchg
jmp
mov
call
add
into
ja
adc
ret
sbb
pop
mov
out
lret
addr16
mov
cmp
push
mov
pop
nop
add
jne
int3
mov
lea
cmpsb
or
xorl
add
jp
dec
aas
test
add
mov
mov
add
mov
add
aad
pop
push
inc
adc
nop
addr16
arpl
xchg
lahf
in
jmp
cmp
sub
dec
mov
incl
pop
xor
inc
mov
xor
mov
movl
aam
or
or
sub
cmp
add
rorb
cmp
mov
push
jne
xchg
into
add
or
add
mov
add
xor
and
lods
jno
ss
pushf
mov
add
mov
add
mov
outsl
movsb
add
push
jg
inc
add
scas
jmp
aad
xchg
and
inc
dec
jecxz
jp
push
pop
mov
pop
ret
add
pop
loope
mov
inc
popa
lods
mov
xchg
loop
rcrl
push
sahf
repnz
loope
adc
mov
mov
sti
xchg
mov
and
stos
xchg
outsb
jge
bswap
sbb
add
jo
outsb
sbb
sbb
fs
jb
cltd
add
bound
pop
stc
ret
scas
adc
sbb
into
push
dec
xor
or
push
insl
rorl
mov
in
push
repnz
cli
in
push
sub
sbb
les
sub
dec
repnz
jmp
jl
jle
mov
dec
insl
add
jno
adc
add
mov
mov
cmc
mov
fcoms
cmc
imul
dec
cli
cmpsl
push
mov
out
in
mov
dec
adc
pop
imul
test
iret
sarl
scas
shll
iret
dec
inc
cwtl
test
leave
push
gs
arpl
dec
test
sub
sub
decb
add
mov
rcr
and
jg
add
outsl
dec
mov
dec
mov
or
int3
enter
add
pop
sub
arpl
mov
insl
mov
mov
out
lea
and
iret
ret
add
jbe
sbb
add
das
inc
xchg
stos
sbb
pop
sbbl
dec
mov
fiadds
or
add
inc
lds
aad
dec
sub
sub
sbb
push
add
xchg
jns
lret
cmp
add
add
add
add
jno
add
mov
dec
stos
add
add
mov
lcall
out
add
mov
add
inc
add
scas
add
add
add
cwtl
scas
jmp
stos
add
test
mov
add
add
rolb
iret
add
test
dec
mov
lret
loopne
dec
pop
pop
add
lods
repz
dec
add
add
jmp
pop
ljmp
add
addl
xor
add
or
mov
stc
or
add
or
out
add
inc
lcall
add
out
add
add
add
daa
add
xor
add
add
add
ljmp
rol
mov
add
imul
shrl
jnp
add
add
jae
push
mov
sbb
add
int
leave
lea
inc
rorl
mov
or
add
add
mov
add
outsb
mov
and
add
daa
adc
and
push
push
ljmp
add
dec
mov
cmc
lret
movl
lar
xchg
jbe
xor
add
xchg
inc
int3
jb
mov
imul
and
add
pusha
add
add
add
add
dec
push
add
add
add
es
mov
add
fistl
add
sub
jns
add
sub
int3
in
movsl
lods
les
enter
or
push
icebp
add
dec
add
add
add
add
adc
xchg
addb
testb
mov
cmp
in
add
outsl
add
insl
add
out
scas
jae
jmp
add
adc
fmull
or
mov
icebp
cmp
add
add
in
xor
xor
movsl
mov
add
add
movb
test
stos
movsl
xor
push
add
add
add
iret
add
stos
jbe
add
add
sub
scas
or
enter
bnd
in
add
data16
fistpll
adc
mov
test
xlat
pop
add
rcrb
pop
add
push
add
mov
rclb
scas
sbb
inc
addl
addr16
push
jge
dec
jp
call
cltd
jp
mov
ljmp
add
dec
pop
add
iret
or
add
add
sbb
add
push
sarl
cmpsl
ret
mov
add
jne
lea
add
filds
dec
stos
add
pushf
add
cld
add
filds
ret
fiadds
into
fildl
stc
fadds
int3
fnstenv
push
add
incl
fisttpll
jmp
add
lock
add
cli
add
xor
and
add
testl
mov
pop
adc
add
popf
add
sbb
push
add
cmpsl
push
add
add
xchg
rep
cmpb
mov
add
add
mov
lds
add
roll
push
adc
adc
lds
pop
add
pop
add
pop
add
add
push
pop
add
jo
xchg
push
icebp
add
sub
push
jge
cmp
ret
mov
add
add
add
ljmp
and
pop
sub
pushf
fs
sbb
xchg
add
add
faddl
sbb
dec
cmp
mov
and
sbb
add
push
add
add
jmp
enter
mov
adc
xchg
xlat
mov
xor
xchg
aam
lods
lcall
mov
xchg
jne
jae
vmovupd
and
add
jge
xchg
repz
lods
sbb
scas
pop
fildl
leave
leave
daa
xchg
xchg
lret
jmp
sub
add
fucomi
jecxz
into
add
idiv
in
cs
das
sbbb
add
or
cmp
or
sbb
adc
add
imul
jle
insb
pop
add
loopne
dec
mov
cmp
add
movsb
imul
add
mov
dec
pop
dec
bound
dec
insb
push
add
mov
in
inc
inc
stos
shlb
cltd
addl
add
add
push
add
arpl
jp
add
sbb
mov
mov
push
fdivrl
add
lods
out
jnp
stos
test
add
repnz
gs
add
fiadds
in
add
cld
sahf
mov
sub
ror
inc
pushf
adc
popa
add
jmp
add
add
xlat
ds
mov
sub
mov
fs
add
add
scas
ret
clc
loopne
mov
add
lcall
stos
inc
xchg
inc
pop
adc
dec
mov
push
and
xchg
test
fsubp
imul
mov
gs
outsw
adc
es
and
mov
add
add
pop
das
movsb
je
inc
mov
adc
cmpsl
cmp
sub
dec
dec
cmp
jge
push
fisubs
es
add
jb
jecxz
jne
fdivrs
ret
mov
jmp
pop
inc
bound
jmp
loope
add
add
fiaddl
and
and
add
mov
orb
add
call
xor
add
mov
xor
mov
lcall
daa
jno
movsl
scas
push
add
faddl
aaa
ret
dec
or
add
clc
lods
stc
outsl
cmpsl
dec
mov
add
loope
mov
ret
mov
and
lea
add
cmp
cmp
jo
adc
xchg
punpckldq
and
outsl
pop
arpl
jae
out
xchg
push
sub
sub
mov
add
mov
sub
adc
jo
dec
inc
add
sub
test
loopne
loopne
test
rorb
and
out
cmp
insl
inc
push
loop
pop
inc
es
repz
repz
or
mov
inc
imul
insb
lret
pop
or
iret
les
cmp
pusha
mov
fcmovne
stos
orb
add
mov
lock
outsb
mov
push
inc
sbb
scas
imul
fmul
dec
movl
sub
xchg
sub
dec
jbe
xchg
inc
cli
pop
xchg
add
or
mov
fsubrl
add
pushf
mov
inc
adc
jae
inc
sub
sti
mov
test
push
push
shl
clc
jl
pop
bnd
dec
gs
add
aaa
imul
or
aas
add
fdiv
push
add
mov
dec
sub
or
popa
rorb
push
or
push
daa
add
mov
mov
xchg
fmul
sahf
fdivrl
adc
adc
fdivl
dec
dec
ret
xor
inc
inc
cmp
jge
jmp
mov
add
std
or
jle
mov
xor
stc
shl
stos
sarl
dec
mov
fsubs
hlt
cltd
mov
mov
and
jmp
shlb
call
ret
mov
xchg
xlat
decl
sti
lds
add
add
inc
out
push
mov
stos
add
int3
int3
stc
mov
cli
sub
leave
lret
pusha
loope
add
pop
pusha
ljmp
pushf
es
in
xchg
loopne
mov
jb
lret
cli
in
adc
pop
das
lea
inc
sub
mov
jg
add
add
mov
das
and
add
add
fisttpl
cmp
sbb
daa
and
add
and
mov
stc
add
jnp
ret
and
add
pop
pop
inc
dec
pop
pop
add
icebp
add
nop
add
bound
imull
ja
mov
add
or
dec
dec
addr16
hlt
sub
loopnew
xchg
mov
inc
add
int
lods
fwait
add
add
insl
callw
fwait
adcb
or
or
push
movb
push
cmp
ret
mov
data16
lret
cmpsl
mov
rol
and
push
or
enter
fcmovb
add
out
iret
rolb
loope
lret
ret
fstpl
pop
pop
cmc
adc
roll
cmc
into
in
sti
add
cli
out
leave
out
hlt
imul
cmp
icebp
sub
cmp
add
sbb
add
outsl
add
mov
inc
xor
mov
or
push
and
and
aas
pop
and
sub
shll
mov
dec
pop
add
pop
xor
jl
mov
sub
inc
sub
cmp
jo
cmp
roll
jl
jge
orb
add
mov
inc
ljmp
lock
add
iret
enter
in
in
mov
orb
add
jecxz
lcall
push
shrb
mov
inc
or
xchg
add
add
jbe
mov
out
add
push
xor
out
in
loope
popf
or
add
outsl
xchg
xchg
add
inc
push
lods
inc
outsb
add
mov
cmp
out
loopne
clc
or
lds
dec
add
adc
sbb
dec
sbb
sti
das
adc
push
lcall
add
pmaxsw
js
cmpsl
xor
add
sub
push
ret
inc
pusha
test
push
int3
inc
add
das
pop
add
int3
sub
faddl
pop
les
mov
mov
pusha
and
ss
add
aaa
sub
jns
inc
int
pop
jb
add
xchg
cltd
cmpsb
pop
add
lods
insb
mov
jns
jge
mov
add
add
sbb
loope
insl
cld
mov
iret
lods
xchg
lcall
das
in
cmp
mov
es
xchg
mov
push
add
push
mov
pop
out
mov
orl
dec
inc
pop
add
xchg
dec
ret
inc
add
xchg
pop
add
cmpsl
fldcw
add
movsl
shl
adc
and
push
hlt
leave
clc
out
jecxz
jmp
lods
mov
mov
cmc
push
jmp
add
pop
mov
addl
popa
add
lret
imul
or
ja
aas
mov
cmp
cmp
inc
add
inc
outsl
inc
add
daa
cmp
movsl
in
pop
inc
add
cmp
mov
into
xchg
mov
outsl
dec
inc
cmp
daa
insb
pop
inc
dec
in
add
sub
scas
jae
sarl
loopne
insb
out
dec
js
jge
push
inc
outsl
data16
jp
fiadds
loope
lea
cmp
popf
call
mov
add
orl
xchg
stos
jmp
add
scas
cmp
mov
filds
outsl
push
stos
iret
int
pushf
push
aad
inc
and
iret
push
xlat
push
inc
scas
mov
cltd
sub
mov
in
in
in
insl
mov
dec
push
fsubr
fs
jp
jecxz
xchg
aad
std
jmp
xchg
insb
mov
loopne
stos
hlt
repnz
push
add
std
dec
fldt
jne
rolb
add
imul
int
dec
jnp
inc
xchg
movsb
in
jnp
mov
add
movsl
sub
and
push
arpl
lea
ffreep
push
push
or
cmp
add
mov
clc
adc
insb
add
test
or
and
sub
pop
inc
mov
mov
loopne
xor
or
or
dec
add
je
xor
add
push
int
xor
stos
arpl
pop
ret
out
call
xchg
lcall
add
cmc
fs
cwtl
ret
add
shlb
in
cmpsl
lods
insb
lret
pop
insl
ret
mov
mov
add
sub
mov
mov
fldcw
dec
or
in
inc
mov
mov
testl
popa
loop
ljmp
mov
cwtl
pushf
inc
lcall
add
dec
loope
xor
inc
arpl
push
sbb
gs
fs
in
jbe
scas
fcoml
popa
add
mov
int
jg
shrb
sub
jns
dec
push
jae
pop
jmp
cwtl
adc
out
push
push
sbb
add
fidivs
enter
push
add
inc
int3
push
jmp
popa
out
cmp
loopne
add
sbb
add
ss
adc
push
incb
lea
out
addr16
or
xor
mov
cmc
jg
cmp
cmc
add
add
mov
ljmp
or
test
mov
jmp
push
rorl
cmp
nop
lea
int3
add
mov
fadd
aaa
mov
xchg
add
add
lods
mov
aas
push
xor
lods
jecxz
ret
lret
ffreep
sti
into
push
fwait
lods
add
pop
adc
imul
push
and
xchg
lods
dec
lahf
cltd
hlt
cld
incl
jmp
out
mov
mov
push
fdivrl
mov
jl
dec
insb
scas
lods
data16
sbb
adc
push
mov
popl
popf
inc
xchg
xor
and
mov
push
dec
dec
adc
push
xchg
xchg
and
xchg
and
loopne
xor
int3
sbb
and
sub
pop
inc
or
rolb
sub
and
popa
repz
mov
xchg
sbb
dec
jge
sahf
mov
lret
jp
jmp
test
roll
outsb
sahf
add
cld
mov
popa
gs
xchg
or
jnp
pop
into
inc
mov
cmp
lret
mov
mov
pusha
xchg
popf
add
sti
lahf
in
add
xchg
xor
enter
mov
adc
aaa
jmp
stos
fidivs
arpl
or
out
dec
int
cmp
cmp
out
sub
add
add
add
or
movb
push
insb
add
mov
gs
push
es
fstpt
sub
repz
sbb
sub
js
and
cmp
sub
pop
out
jg
pop
popf
bound
inc
daa
inc
pop
inc
stc
sub
jno
popa
adc
pop
mov
sub
call
push
lcall
push
pop
js
pop
imul
cmc
cmpsl
adc
pop
ret
jge
gs
movsl
cwtl
scas
sbb
xor
sub
rorl
fisttps
sahf
rcrl
mov
add
adc
movsl
mov
and
ror
cltd
daa
stc
dec
lods
inc
add
add
in
imul
scas
cld
lret
sti
int3
dec
xchg
xchg
fcoml
dec
subb
adc
adc
jmp
add
cwtl
repz
add
mov
nop
xchg
fsubl
push
inc
add
daa
dec
in
in
add
add
cmpsb
xlat
mov
addb
sbb
add
jnp
imul
add
sarl
testl
xchg
cli
stos
adc
jb
shrb
add
je
sub
repz
push
sarb
fdivr
test
mov
call
push
or
pop
dec
jno
sub
push
xchg
rorl
mov
cmc
mov
fidivs
aad
in
mov
jl
cmp
test
jne
cmpsl
sub
hlt
jne
ret
mov
xor
xor
push
add
add
ds
mov
add
add
hlt
fistpll
out
add
push
call
sahf
add
push
ljmp
hlt
mov
or
sub
in
jecxz
int3
in
cli
sub
add
jne
add
add
or
xor
aas
add
fcomp
add
sbb
cli
rcrl
push
add
icebp
adcb
add
pusha
je
cmp
inc
mov
fists
mov
in
lret
add
shll
jge
out
inc
jnp
mov
inc
inc
insb
inc
pop
push
pushf
test
cmp
jb
pop
xchg
pminsw
mov
add
call
pop
push
movsb
loop
and
loop
je
dec
or
fadds
add
mov
mov
xchg
add
add
pop
call
loope
pop
mov
sahf
iret
test
nop
dec
push
mov
push
add
out
adc
add
jnp
mov
popa
fcmovnbe
mov
test
mov
test
mov
add
xchg
mov
leave
xlat
loopne
xchg
faddl
mov
add
sbbb
add
outsl
sbb
sub
or
add
mov
inc
not
stc
xchg
dec
ret
insl
pop
add
sbb
xor
test
les
clc
push
add
dec
repz
mov
adc
add
inc
add
je
bound
push
testl
stos
outsb
imul
mov
jnp
popa
push
dec
bound
outsl
sbb
push
adc
mull
call
movsl
filds
mov
xchg
inc
loope
jbe
xchg
cmp
xchg
pop
mov
jecxz
lods
mov
fldcw
lds
cmpl
mov
mov
lret
fadd
into
add
jmp
add
pushf
inc
ljmp
lea
adc
clc
ljmp
fstl
clc
cmp
dec
les
pop
int3
inc
sub
sub
sbb
ljmp
loopne
pop
imul
fisubrl
pop
xor
and
das
int3
lret
outsb
inc
mov
dec
mov
jns
loopne
jo
mov
aas
arpl
call
loope
data16
aad
add
fcomps
add
cmpl
dec
or
pusha
dec
jb
add
js
mov
mov
sub
add
lds
add
insl
push
mov
sbb
add
or
push
jl
fisttpll
pop
into
cltd
jle
leave
mov
inc
jae
inc
aaa
je
popa
and
in
mov
add
scas
pop
inc
stos
mov
mov
stos
lock
cmp
mov
mov
mov
aam
xchg
add
push
rcrl
in
cmp
xchg
subl
push
test
push
hlt
sub
pushf
scas
or
inc
hlt
mov
dec
ja
mov
mov
jp
xchg
outsb
les
mov
lds
ret
cs
sub
and
mov
movsb
jmp
js
push
pop
jb
add
pop
jg
or
in
ss
iret
adc
and
fwait
dec
arpl
add
jmp
add
jmp
add
add
add
add
add
add
ret
add
cltd
sbb
and
xchg
cli
scas
cld
movsl
mov
xor
xchg
cmp
iret
mov
cmp
lahf
adc
js
pushf
jne
inc
adc
repnz
add
sahf
mov
and
or
je
mov
mov
mov
faddl
xor
jne
add
lds
mov
push
cmc
pop
lret
pop
ret
pop
flds
pop
pop
lods
push
sub
adc
push
add
lock
adc
jno
add
jbe
je
jb
add
mov
push
add
ljmp
add
adc
add
adc
add
xchg
popf
es
scas
lea
rcrb
xchg
sti
in
cmp
add
repz
or
xor
add
sbb
mov
dec
jge
xchg
add
adc
add
nop
shrb
fs
add
insb
mul
add
js
or
adc
hlt
adc
sub
and
aas
add
xor
inc
aas
call
mov
mov
add
pop
mov
xchg
loope
sti
add
xchg
roll
fistpll
mov
push
movsl
jbe
jns
add
inc
mov
add
sub
pop
imul
and
pop
int
push
add
sub
push
cmp
mov
xor
in
in
scas
cli
orb
jmp
jecxz
stc
add
jb
jl
mov
cmp
adc
inc
add
sub
cmp
adc
adc
adc
push
sbb
inc
pcmpgtd
gs
in
lock
mov
xorl
add
xchg
lods
xor
mov
mov
in
add
mov
fcompl
ljmp
sti
pop
add
lds
pop
lret
add
add
fprem
xlat
sti
roll
ljmp
add
jne
xchg
lcall
loope
or
cltd
jne
dec
popf
test
lret
popf
out
pop
add
cmp
call
int3
mov
mov
add
test
ja
mov
jle
push
jo
mov
fisttps
push
mov
push
adcb
addr16
je
pop
xlat
lcall
jo
cmpsb
jge
pop
xor
add
cmc
jbe
jo
jo
insl
jae
jne
ja
rcl
push
add
jne
das
add
movsl
roll
dec
sbb
sbb
filds
xchg
inc
jne
sbb
shll
cmpsl
and
imul
ds
cmpb
xor
cmp
icebp
mov
sbb
loope
push
cmp
sbb
and
out
add
fcmovu
fadds
mov
push
xchg
add
adc
lahf
ds
cld
push
cli
sub
sahf
push
jo,pn
cld
lods
mov
cwtl
inc
into
mov
push
loope
xor
xchg
pop
xchg
xchg
sub
std
sub
das
imul
test
mov
push
mov
add
idiv
mov
cmp
adc
adc
add
les
push
rsqrtps
add
push
jl
pop
pop
pushf
add
lret
add
jae
hlt
jns
add
jle
jl
jp
or
mov
bound
xor
in
push
jp
xchg
rol
add
sbb
sub
push
aas
sbb
xchg
push
jo
add
aam
es
stos
mul
xor
mov
aas
push
ds
add
and
cmp
cld
push
loope
fstps
fisttpl
fiadds
ficoms
rol
popa
xchg
pop
pop
and
jns
add
mov
inc
repz
icebp
popa
push
add
loopne
and
arpl
sbb
add
sbb
cltd
mov
add
mov
out
push
fildl
cmpsb
push
inc
xor
or
test
mov
xchg
cmc
pop
add
push
mov
add
in
cmp
pop
cmp
pop
push
pop
jmp
js
inc
xchg
pop
andl
inc
leave
sbb
cmp
jns
jnp
jnp
add
jl
jb
mov
inc
jl
xor
push
xchg
in
pop
cmc
sub
sbb
adc
pushf
push
inc
arpl
iret
gs
mov
lret
rcrl
ds
add
add
add
add
adc
cmp
repz
fiadds
xor
arpl
add
push
fldl
fsub
filds
mov
jb
stc
push
mov
sbb
sahf
add
js
add
sub
xor
int
iret
addr16
arpl
and
outsl
hlt
adc
and
mov
lcall
lahf
xchg
xchg
outsl
rorl
repnz
or
xor
rcr
jl
inc
mov
mov
push
mov
xchg
add
xor
add
xchg
ret
mov
jns
sub
push
or
sbb
dec
pushf
mov
push
and
add
sub
inc
adc
jae
jne
cmp
out
jo
jb
jnp
cmpsl
mov
adc
lcall
push
mov
adc
add
sbb
pop
aas
push
cmpsl
add
mov
push
fs
pop
add
or
das
xor
xor
cmp
sbb
rcrb
sub
mov
fisttps
insl
rolb
add
add
add
add
or
decl
mov
clc
dec
push
adc
ret
cli
mov
test
loope
ja
xchg
inc
add
jb
addb
call
cwtl
sbb
pop
cltd
aaa
push
stos
add
mov
lds
mov
mov
sbb
fwait
mov
repz
sarl
leave
inc
aaa
add
push
adc
push
sbbl
add
add
loopne
push
mov
inc
adc
leave
movsb
sahf
divl
add
js
jns
jnp
add
jg
mov
cmp
push
xchg
inc
out
mov
xchg
sbb
ds
and
xor
gs
mov
add
fisubs
adc
add
xor
xor
push
add
ljmp
add
popf
add
idivl
jne
repnz
mov
mov
sahf
add
xchg
aam
inc
pop
movsl
inc
int3
insb
pop
cmp
outsl
cmp
add
rep
clc
stc
cltd
inc
pop
popa
cld
mov
fcmovbe
inc
clc
fdivs
push
xor
pandn
lcall
cltd
cld
push
add
cmp
xorl
mov
mov
popf
lods
mov
inc
icebp
out
add
test
jle
aad
in
js
pop
imul
fs
jns
pop
jbe
aaa
iret
add
jge
xor
iret
hlt
std
test
sbb
jnp
jns
js
jp
add
jno
mov
fs
xor
xchg
subl
or
aas
dec
pop
cmp
mov
add
out
fdivs
adc
add
jns
movl
aaa
push
sub
sbb
subb
push
loop
add
cmpsl
arpl
insl
add
xor
lret
rolb
or
pop
sbb
aad
popf
add
add
sbb
std
cmpsl
stc
xor
roll
cmp
stc
xchg
sti
cmp
ss
out
jno
xchg
fildl
int
mov
dec
loopne
int
push
pushf
ljmp
add
add
cltd
cmp
jns
mov
sub
mov
mov
cmp
mov
int3
push
clc
test
dec
xchg
dec
adc
push
inc
add
push
cmp
add
popa
mov
push
psubsb
les
rorl
ja
push
cmc
add
jae
jne
ja
add
push
add
add
pop
aas
scas
fimull
sbbb
sbb
sbb
sbb
mov
add
sbbl
cmp
jnp
mov
jmp
aad
mov
add
movsl
hlt
pop
into
outsb
rolb
fistps
rcll
aam
adc
add
add
add
add
data16
dec
nop
add
std
movsl
add
mov
clc
addl
jp
repz
cltd
outsl
in
adc
and
add
push
fwait
cmp
popf
ss
sbb
add
push
out
cwtl
add
mov
pop
push
loop
pop
add
xchg
mov
add
sti
aas
cmp
push
jae
xchg
jo
push
jbe
jbe
push
mov
add
push
pop
push
push
fnsave
add
fmulp
jnp
ljmp
inc
adc
je
add
jae
jno
je
add
mov
jno
adc
in
add
add
nop
in
xor
adc
sub
and
push
mov
es
add
fildl
mov
sarl
ss
xor
sbb
push
add
icebp
fcompl
add
bound
ljmp
jne
fdivl
inc
add
sub
pop
mov
cmc
dec
and
mov
add
mov
dec
add
test
pushf
hlt
mov
mov
out
pop
jns
pushf
push
in
mov
push
cmpsl
pop
push
popf
mov
ss
or
iret
mov
sbb
add
mov
inc
in
dec
cmp
mov
adc
add
movsb
push
inc
ret
cltd
add
or
in
scas
pop
mov
push
pop
xchg
pop
xchg
add
in
and
sbb
dec
out
jp,pn
fdivl
push
cmp
and
loop
lock
je
cli
js
jge
clc
scas
sbb
iret
loope
xchg
fstl
push
popa
lods
push
movsl
add
cli
adc
adc
pop
pop
add
or
in
add
cltd
mov
loopne
inc
add
pop
cmp
xchg
add
test
daa
xor
mull
cld
sti
mov
test
add
jo
xor
fbstp
add
shl
dec
pop
inc
mov
scas
or
in
fnsave
lock
testb
fldcw
xchg
add
or
mov
cltd
mov
popf
lahf
popa
popf
inc
add
data16
mov
and
or
add
je
mov
mov
mov
mov
mov
add
lahf
cwtl
pushl
aaa
loop
dec
add
rolb
add
cli
pop
lret
pop
aas
pop
or
add
pop
call
inc
add
mov
sbb
adc
jnp
jge
aad
mov
js
jp
int3
mov
pusha
jp
dec
adc
aam
mov
xor
rolb
xchg
sbb
sbb
sbb
sbb
nopl
sbb
xchg
aas
jo
dec
xchg
pushf
xor
mov
clc
into
idivl
xor
cmp
sti
cmp
cmp
adc
xor
js
inc
aas
fcomip
loop
mov
or
xchg
add
fscale
fcmovne
rcr
fidivs
add
xchg
pop
stc
ljmp
rcrl
add
inc
sti
pop
std
push
inc
in
inc
sub
std
xchg
mov
cwtl
add
sbb
sub
mov
outsb
xchg
inc
xchg
mov
lcall
inc
xchg
add
mov
ret
cmp
add
sub
scas
and
leave
les
add
inc
ds
pop
mov
ds
xor
add
imul
xchg
dec
jl
add
mulb
add
je
je
jno
add
jo
jbe
je
cli
add
outsl
push
stc
arpl
mov
shrl
cltd
xor
add
adc
cmp
jge
push
ret
inc
or
or
add
xor
dec
into
add
xor
mov
add
fsubr
dec
aas
cmpsl
rcrl
repz
rolb
lret
aam
fiaddl
sbb
lahf
xchg
add
clc
jl
or
xchg
add
repz
mov
cmp
pusha
out
ret
cs
or
inc
mov
sub
loop
psadbw
add
xchg
jg
cli
fadds
push
xchg
iret
pop
jno
loope
add
xchg
mov
stos
mov
mov
mov
mov
xor
push
add
addr16
rol
jecxz
dec
pusha
pop
insb
pop
sub
add
pop
arpl
nop
mov
js
out
add
cmp
mov
push
outsb
movb
dec
add
in
add
cmc
xor
fadds
fists
out
push
addl
adc
adc
add
pop
sbb
inc
xor
leave
mov
inc
add
idivb
pop
cmp
cmp
cmp
cmp
rcr
or
outsb
clc
adc
call
mov
clc
sar
adc
sub
arpl
dec
xlat
ja
pop
xor
idiv
mov
sbb
xchg
lods
daa
push
cltd
shll
jb
xchg
scas
add
xor
rclb
fs
nop
dec
pushf
inc
sahf
pop
nop
roll
repz
popf
es
mov
cmp
or
mov
mov
mov
mov
add
add
push
adc
call
das
or
add
fistl
pop
xor
mov
add
add
cmp
and
ja
jne
je
jbe
add
jge
mov
cmp
and
lcall
push
je
push
add
push
adc
jne
test
add
dec
mov
inc
insb
or
int3
inc
out
cli
push
scas
dec
add
adc
xchg
gs
pop
ss
movsb
push
mov
imul
nop
out
jno
sub
cmp
xor
in
cmpsl
pop
xor
pushf
xlat
out
stc
push
push
and
xchg
mov
lret
xchg
repz
icebp
xchg
lock
pop
stc
fidivrs
dec
in
jnp
mov
stos
mov
add
outsl
mov
xchg
ret
nop
add
push
lods
add
cltd
int3
inc
xchg
and
andl
add
jge
jno
mov
add
mov
rolb
shll
jl
push
ljmp
int3
add
pop
jmp
mov
clc
pop
rcrl
rcl
rolb
cltd
cmpl
cmp
lods
daa
add
jnp
jge
jg
add
inc
sbb
cltd
cmp
cmovp
adc
das
mov
cwtl
fadds
ds
xlat
stos
divl
clc
cmpb
or
xor
add
das
xor
sbb
hlt
add
xchg
xlat
xchg
shrl
jno
inc
aam
ss
add
int
pop
cmpsb
inc
imul
adc
popf
lock
repnz
sub
dec
mov
in
jae
push
nop
push
or
ljmp
test
popf
icebp
jns
popf
push
fwait
add
cwtl
gs
pmuludq
add
mov
mov
int
add
fbstp
add
mov
add
jo
pop
add
pop
sarb
loop
jg
xor
pop
xlat
pop
dec
mov
shrb
add
jnp
lods
pop
dec
dec
std
test
js
fdivrl
jp
jnp
bnd
jl
jno
mov
je
clc
xor
sbb
cltd
jbe
sbb
inc
aad
pop
lret
sub
adc
xchg
add
jl
adc
jecxz
idivb
and
jo
mov
xchg
call
sub
pop
pop
push
xchg
pop
vmovntdq
jge
pop
aam
aam
data16
test
pop
jecxz
cmp
repz
and
add
sub
ret
repnz
add
icebp
lahf
imull
jle
bound
popf
dec
or
mov
sbb
push
mov
xchg
add
xchg
das
nop
cmp
cltd
cli
fstpt
lea
push
out
push
push
mov
idivl
aas
mov
cmp
cli
mov
mov
adc
out
mov
add
dec
loope
jl
pop
movsb
add
pop
jnp
ja
dec
sub
xchg
stos
inc
pop
adc
lock
addb
add
aaa
jg
push
jge
pop
jp
js
ss
xor
sbb
cld
sbb
pop
shrl
pop
xor
push
sbb
movsl
cmp
add
sahf
xor
sub
xor
add
jecxz
repnz
cmp
add
sub
add
addl
push
xor
xchg
pusha
rclb
and
xor
fucomip
fsts
fnsetpm(287
aam
es
in
and
repz
leave
mov
int3
ror
ror
ror
xor
enter
add
rcl
inc
popf
mov
jne
insl
push
bound
scas
mov
mov
mov
push
mov
cmp
nop
pop
cmp
mov
inc
jae
xchg
mov
lea
les
popa
jo
cmpsb
sbb
xor
fcoml
jbe
jo
jo
jb
je
jbe
js
pop
fwait
jb
in
inc
push
xlat
xchg
xor
sub
dec
push
dec
push
dec
push
dec
push
dec
pop
lcall
xor
frstor
pop
adc
adc
push
pop
or
adc
cwtl
push
js
adc
mov
mov
lret
movsl
adc
das
data16
jge
fs
imul
add
arpl
stos
sarb
int
scas
mov
iret
mov
leave
pushf
adcb
popf
mov
out
repz
adc
incb
mov
lods
scas
mov
lea
jmp
or
test
jg
clc
lret
or
xchg
cltd
xchg
test
xchg
lods
dec
adc
aas
jge
pusha
push
scas
mov
mov
mov
mov
test
ror
inc
or
sub
push
sub
sub
and
xor
sub
test
aam
mov
shrl
imul
or
push
add
adc
or
mov
xor
push
orl
dec
in
fsubrs
imul
jne
jnp
insl
insb
outsb
call
loope
dec
dec
into
add
stos
lds
dec
dec
dec
inc
inc
dec
push
push
pop
dec
dec
dec
dec
enter
dec
rorl
mov
mov
test
mov
mov
sub
mov
and
mov
add
nop
mov
xchg
xchg
fwait
mov
mov
mov
lret
out
call
sub
lret
lock
jmp
in
in
out
push
popa
sub
enter
sub
mov
leave
lret
mov
aad
fcmovne
int
into
dec
xor
into
inc
or
sub
push
sub
sub
and
xor
sub
test
aam
mov
shrl
imul
or
push
add
adc
or
mov
xor
push
orl
dec
in
fsubrs
imul
jne
jnp
insl
insb
outsb
call
loope
dec
dec
into
add
stos
lds
dec
dec
dec
inc
inc
dec
push
push
pop
dec
dec
dec
dec
enter
dec
rorl
jo
aaa
stc
sbb
jae
shlb
jno
pop
dec
and
sbb
mov
arpl
les
ds
cwtl
cmc
lods
cmpsb
dec
jns
nop
jg
jp
movb
punpckhwd
mov
gs
xchg
and
in
jmp
jge
and
dec
fisubs
out
jnp
stc
cmp
jge
push
mov
mov
adc
adc
aam
pop
mov
out
sub
ret
fisubrl
mov
stc
mov
and
dec
outsb
xchg
pop
mov
sbb
mov
lock
lds
arpl
or
mov
mov
xchg
jmp
jle
clc
rcl
lret
ret
inc
lret
movb
cmp
and
popa
in
js
sar
out
jnp
int3
inc
pop
sahf
in
adc
sub
dec
push
cltd
push
ret
inc
adc
rorl
imul
les
sbb
scas
lods
mov
test
cmc
push
loopne
out
adc
push
push
sti
push
aam
stos
xchg
outsb
daa
stc
movsb
xchg
insl
ret
jp
adc
mov
out
or
popf
fcomip
cmpsl
adc
pop
repz
lock
repnz
xchg
pop
lods
lods
daa
cmpsl
gs
lcall
push
mov
pop
stc
faddp
sub
icebp
cmp
xchg
mov
adc
test
mov
pop
repz
mov
loopne
mov
sbb
lods
mov
adc
sbb
int
mov
mov
pop
lods
and
call
pushf
and
dec
mov
push
andl
cld
or
mov
cmp
out
mov
push
inc
dec
fwait
push
fidivrs
int3
dec
ret
mov
mov
mov
jno
add
sarb
or
out
pop
sub
push
jo
aas
scas
xchg
