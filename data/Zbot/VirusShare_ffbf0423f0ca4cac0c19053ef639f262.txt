out
xchg
or
sub
dec
in
dec
mov
sti
xor
leave
ret
add
lcall
add
mov
pop
or
pop
pop
pop
ret
ret
or
or
fcomip
ret
and
add
adc
sub
nop
or
insb
jmp
nop
inc
add
call
and
or
mov
adc
inc
iret
mov
in
adc
sbb
and
jg
inc
and
xor
add
negb
out
sbb
add
dec
adc
cmp
or
nop
add
add
fisubrl
aaa
add
sahf
insl
jne
xchg
dec
outsb
or
mov
outsl
fldt
add
or
inc
mov
pop
inc
cmp
in
fwait
sbb
into
adc
inc
mov
sub
and
jae
sub
subb
mov
add
mov
mov
in
add
or
or
fisttpll
and
mov
sbb
mov
dec
adc
pop
cmp
xchg
push
and
pop
or
dec
and
in
jb
sti
pop
imul
stc
or
rcl
out
sarl
pusha
and
leave
inc
sbb
inc
and
add
repnz
inc
cltd
das
add
add
add
mov
adc
fiaddl
pop
loop
or
add
pop
add
divl
mov
or
add
adc
add
pop
cld
fstpt
pcmpeqb
add
add
out
rcr
add
mov
ja
add
add
add
pop
or
add
ja
ljmp
lock
add
mov
insb
sbb
add
mov
repnz
int3
mov
adc
dec
iret
outsl
movsl
add
add
add
icebp
fistps
fildl
dec
add
sbb
mov
jmp
jmp
ss
jno
jg
or
add
add
lods
xor
mov
jle
in
fistl
rorb
cmp
jnp
add
cmp
add
inc
jmp
jnp
add
int3
add
subb
or
out
fcmovnu
add
sbb
add
out
mov
dec
lods
cmp
les
inc
mov
imul
movsl
fadds
xor
add
push
jmp
push
inc
xchg
fbstp
imul
add
or
jecxz
adc
jno
mov
or
fstp
outsb
fucomp
test
jae
add
mov
push
inc
js
arpl
int
cmp
mov
dec
add
ja
push
push
iret
loope
and
mov
loope
xor
bnd
xor
jns
add
add
sbb
adc
outsl
incl
pop
test
cmpsb
sbb
xlat
ds
add
test
jmp
aas
sbb
push
ret
mov
cli
adc
inc
scas
ds
pop
call
dec
add
xchg
dec
mov
push
mov
add
clc
add
gs
js
ljmp
add
add
pop
add
out
shlb
push
sbb
sbb
into
out
vxorps
jae
lahf
jle
lcall
or
jne
inc
cwtl
addb
roll
mov
int3
mov
js
call
lods
sarl
add
sub
in
test
fildll
mov
pop
push
add
xchg
xchg
push
leave
add
pushl
sahf
lds
or
sbb
mov
cltd
jl
test
adc
mov
mov
ds
mov
pop
or
lret
mov
ja
mov
ret
imul
test
adc
add
pushl
add
call
jg
faddl
fisubl
sbb
stos
hlt
cmp
xor
pushl
mov
mov
mov
mov
jmp
mov
lcall
pushf
add
je
roll
inc
jno
or
xor
push
add
test
add
push
pusha
cltd
mov
or
dec
cmp
lcall
idiv
test
idivl
dec
push
mov
xor
pop
iret
xchg
std
pusha
pop
call
movsb
fcoml
sahf
xor
enter
mov
aaa
and
mov
fld
les
movsl
jmp
repz
xor
cmpl
loope
cli
lcall
dec
loope
mov
popa
cmc
xchg
ljmp
jg
push
adc
sbb
sub
js
clc
adc
aas
mov
hlt
outsl
incl
dec
and
inc
pop
sub
aaa
out
jle
sub
add
add
xchg
cwtl
mov
fs
hlt
stc
fs
hlt
nop
enter
jecxz
lret
mov
mov
sbb
ret
ret
sub
ss
push
push
sub
mov
and
int3
pop
or
pop
in
jg
inc
xchg
das
popf
push
jae
sarb
aad
add
jae
dec
cmp
cmp
ljmp
loopne
jbe
sub
adc
cmpsb
ja
loope
dec
pushf
lea
mov
stos
mov
jg
loopne
mov
jg
add
push
xchg
shrl
test
in
add
loope
ljmp
arpl
mov
movsb
pop
push
lea
mov
ret
cld
or
test
cmp
iret
jne
rorl
fnstcw
mov
aam
pop
bound
les
mov
test
mov
fcomp
movsl
mov
xlat
adc
fwait
out
ret
push
lock
shll
sbb
fucom
or
and
test
sub
mov
push
jecxz
adc
mov
lret
pop
mov
pop
push
lahf
in
lcall
fiaddl
in
push
or
add
xor
int3
pusha
int
mov
jmp
or
lcall
jmp
lret
jg
test
js
out
sub
jmp
movsb
stos
lret
clc
scas
in
cmpsb
test
sti
inc
lret
pop
jmp
pop
inc
aas
add
imul
dec
fsubp
outsb
jge
stos
xchg
pop
mov
stos
fs
aad
push
ljmp
pop
inc
xor
and
pop
sbb
jnp
movsl
repnz
scas
sbb
inc
mov
sbb
add
adc
push
inc
jae
clc
xchg
lcall
bound
ret
fistps
sbb
push
fsubrl
aas
mov
clc
aas
std
in
les
push
test
lret
enter
mov
adc
pop
clc
pop
mov
rcrb
cld
adc
cmpsb
jnp
jmp
data16
inc
xor
fisubs
pop
loope
rclb
and
pop
jmp
push
mov
movsb
roll
inc
out
sub
mov
push
inc
mov
jae
outsb
stc
incl
out
and
and
stc
adc
shlb
push
jbe
cli
push
mov
fadd
inc
or
call
sub
lds
push
ret
dec
cwtl
add
xchg
xor
or
test
test
orl
mov
fmull
xchg
or
mov
sub
pop
jb
stos
push
jmp
adc
push
jecxz
popa
andl
push
sbb
mov
fimull
aas
xor
add
cmpsb
pusha
cmp
sarb
pop
pop
jle
in
mov
es
out
insl
cmp
dec
cmc
mov
test
mov
ret
cmpsl
ret
mov
pop
jle
repnz
mov
out
std
enter
xchg
adc
lahf
jl
adc
std
test
aaa
mov
testb
out
adc
mov
mov
popf
xacquire
sub
sbb
jo
rcr
js
push
pop
mov
jb
addl
cmp
nop
xor
add
mov
stc
icebp
and
lret
and
enter
pop
cs
mov
das
jo
lahf
dec
push
cmpsl
add
icebp
insb
aaa
mov
dec
push
adc
loope
push
aam
lods
out
stc
mov
imul
andb
out
inc
ret
push
cli
rorl
test
or
leave
insb
clc
or
inc
and
mov
xchg
mov
loop
xor
pop
call
mov
add
lods
lods
hlt
leave
pushw
divb
sub
fdivr
int
xchg
add
ds
xchg
ror
lret
outsl
mov
scas
adc
imul
pop
mov
adc
cmp
lret
mov
cmpb
clc
insl
jmp
mov
out
je
xor
xorb
mov
iret
gs
xchg
fs
icebp
mov
clc
fistl
jmp
xor
les
lret
mov
pop
sbb
lret
cmp
mov
pop
ljmp
mov
jns
push
ret
leave
sub
lods
inc
ret
mov
cld
stos
or
or
mov
js
jge
pop
lock
inc
mov
or
sahf
fdivrp
push
testl
ret
ds
jg
pushf
mov
inc
pop
sub
xor
sub
xchg
push
lods
xchg
loopne
hlt
add
inc
shr
dec
mov
inc
imul
mov
cmp
jmp
add
or
push
sbb
jl
cmp
pop
mov
fwait
inc
popa
adc
pop
mov
stos
rcrl
sbb
jle
dec
jne
ror
gs
mov
jne
push
jg
or
out
test
xor
inc
or
rcr
fidivrs
adc
inc
push
mov
decl
cs
addl
sub
cmp
push
pop
pop
or
mov
les
cmp
jae
cmp
lds
mov
xor
add
testb
outsl
adc
add
dec
cmp
inc
shrl
or
bound
ret
stos
cmp
sub
pushf
rcrb
pop
mov
dec
inc
xchg
xchg
mov
fwait
mov
jb
cmc
jnp
jns
xchg
sbbb
cmpsl
lods
xor
add
add
cld
cmp
cmp
dec
repnz
jge
inc
out
aad
insl
insb
lret
xchg
or
fisubl
ds
push
jb
push
mov
mov
lcall
pop
add
pop
push
pop
cmpsb
lahf
xor
jecxz
lahf
shr
mov
xor
push
pop
imul
jl
add
mov
jmp
hlt
lods
hlt
push
dec
xchg
lcall
notl
mov
xchg
mov
pop
lods
cmp
mov
mov
push
mov
push
in
add
cmp
mov
aaa
jp
pushl
cwtl
add
adc
out
mov
adcb
lret
jmp
xlat
inc
bound
adc
adc
aam
mov
insb
jge
pop
outsl
jb
fldl
clc
pushl
cmp
adc
pop
mov
or
push
mov
cmpsb
mov
sbb
ficoms
lods
pop
pcmpgtw
jg
inc
dec
mov
mov
dec
and
hlt
mov
ret
pop
inc
mov
test
lahf
dec
pop
out
push
jl
sub
fldt
cld
call
push
mov
or
or
cmpsb
add
mov
out
pop
mov
clc
sbb
mov
shrl
clc
mov
jb
mov
jl
cmp
jmp
pop
pusha
jae
std
fdivrl
mov
cwtl
movsl
mov
jg
out
nop
fsts
cmp
sbb
cld
sub
xor
je
loope
cmp
pop
cmp
dec
inc
jno
inc
pop
mov
mov
and
sub
hlt
dec
fiadds
pop
push
stos
mov
jmp
inc
dec
pop
mov
adc
shr
lods
inc
or
loop
push
push
push
pop
out
test
arpl
jns
inc
push
ret
mov
jle
and
rolb
xchg
shr
pushl
loopne
push
xlat
out
pushf
lcall
sbb
lock
jmp
mov
cwtl
mull
inc
mov
dec
xor
mov
fs
repz
sbb
lcall
repz
cltd
push
pop
outsb
popa
mov
ret
sbb
inc
sub
clc
add
adc
jae
mov
mov
adc
jle
xor
jmp
push
mov
cmp
adcb
movl
neg
adc
in
mov
mov
mov
and
mov
fstpl
movsl
add
ret
inc
sbb
mov
mov
rorb
aaa
mov
jnp
dec
xor
inc
faddl
div
xchg
mov
mov
shl
cmp
mov
mov
cmp
dec
mov
sub
lret
aas
jne
sar
jle
mov
push
inc
adc
add
rcll
cmp
add
loopne
adc
adc
dec
mov
imull
neg
lret
dec
mov
mov
stc
pop
add
test
roll
neg
shrl
jns
aam
and
xchg
pop
aam
into
mov
push
jne
dec
div
lods
cltd
fcmovnbe
inc
xchg
adc
xor
mov
test
pop
fmull
dec
dec
xchg
aad
fdivr
mov
dec
outsb
nop
sahf
adc
neg
and
not
fistpll
lods
jl
pop
in
dec
mov
faddl
pop
jae
push
loopne,pn
add
mov
cmp
ljmp
mov
sbb
cmpsb
add
je
sub
cmpb
mov
adc
sbb
add
fmull
add
into
fwait
adc
sbb
out
loope
mov
adc
addr16
or
fdivrs
lea
xor
xlat
dec
or
shll
in
and
lock
aam
loop
sub
push
sbb
sbb
gs
adc
xor
add
cmp
cs
loopne
rcl
jle
fsubrl
loopne
inc
sbb
sbb
mov
cmp
sub
sub
loopne
sbb
sbb
aam
outsb
mov
mov
dec
fcoms
mov
xor
jae
mov
cmp
add
sbb
add
sub
or
fmuls
popa
arpl
or
sbb
mov
inc
int3
sbb
jbe
jne
xor
rorl
pusha
add
insl
bound
aas
add
insl
xor
adc
lods
mov
xchg
fdivrs
or
lcall
xor
scas
cmp
and
in
mov
adc
mov
clc
fisttpl
or
push
push
pushl
call
lea
lret
and
js
mov
adc
sbb
pop
sti
iret
and
adcb
jp
ficomps
xchg
int
and
lock
sbb
ds
inc
cmp
lcall
das
sbb
pop
loope
cli
leave
cmc
leave
ret
sub
test
xchg
dec
aaa
jns
jb
jo
or
sbb
ss
mov
sub
add
and
dec
data16
in
int
jbe
xchg
fdivrs
das
mov
cmp
sub
xor
sbb
cmp
test
int
aam
pop
mov
jno
icebp
scas
cld
mov
out
dec
cmp
testb
cld
xor
or
push
mov
mov
lcall
clc
jno
jae
das
clc
sbb
mov
xlat
test
ljmp
push
stos
push
ret
xchg
sbb
ret
xor
sbb
in
lods
fstpt
filds
add
add
aam
clc
jecxz
or
pusha
addb
dec
cld
mov
jbe
iret
push
fidivl
neg
xor
or
or
jno
pop
cmp
imul
jp
ret
test
cmp
je
pop
push
pop
int3
sbb
int3
cmp
jo
or
xor
cwtl
jbe
mov
dec
addr16
js
push
loope
xorb
pop
imul
lahf
in
sub
sti
test
fildll
cmp
push
mov
fistps
imul
and
fsubs
add
sub
fisttpl
mov
dec
mov
pushf
mov
ss
fildll
in
aam
push
or
loop
add
push
and
jne
inc
adc
jo,pt
cwtl
mov
shll
repnz
cmp
inc
adc
nop
in
lods
std
out
mov
test
cld
push
lea
push
add
mov
cmp
pop
lds
sar
cmp
xor
je
xor
das
dec
lahf
xchg
pop
mov
mov
xor
jb
mov
mov
adc
neg
testl
clc
mov
repz
add
test
pushf
in
scas
shlb
pop
ror
iret
fistps
fistpll
adcb
and
out
or
movsl
lds
mov
test
sahf
fldcw
jmp
mov
cmp
notl
orl
jecxz
push
mov
cmp
pushf
cmp
dec
or
pop
cmpb
lods
stos
js
mov
xor
sbb
or
iret
pop
pop
add
sbb
pop
lret
and
mull
dec
sub
pop
mov
adc
pop
and
sahf
inc
sub
or
jp
add
mov
xor
jae
pop
or
mov
lcall
jnp
push
out
in
push
mov
adc
mov
int3
outsl
lcall
int3
push
repz
add
in
pop
pushf
dec
test
mov
fwait
sbb
rcr
inc
pop
add
dec
jo
out
mov
sar
inc
popa
test
fistps
jl
lea
xor
into
adc
xor
loop
fwait
xor
push
ror
mov
cmp
xchg
mov
clc
mulb
mov
shlb
sti
in
push
adc
dec
ja
stos
or
out
push
mov
lcall
add
and
jle
shlb
adc
fs
lock
and
inc
dec
mov
call
bound
icebp
stos
sbb
fwait
loope
in
xor
add
lahf
mov
pusha
lods
in
and
rcr
sbb
jnp
arpl
sbb
adc
inc
mov
mov
lret
jo
xor
int3
es
cltd
pop
dec
loopne
das
out
orl
push
and
test
xchg
adc
or
jae
outsl
pop
add
test
mov
xchg
cmp
stc
add
push
in
and
mov
test
pop
fcoml
dec
call
xchg
push
mov
sbb
jne
lea
mov
call
fldl
and
push
cmpl
out
jae
jecxz
shl
jmp
cmp
jbe
dec
shlw
ljmp
addl
pop
mov
decb
ret
sbb
jo
outsb
adc
test
push
or
dec
in
or
mov
scas
cmc
data16
addr16
push
dec
add
or
inc
bound
orl
mov
rorl
and
or
push
inc
cmpsb
jb
xor
aam
shlb
shrb
mov
arpl
in
bound
and
push
xchg
pop
push
fistpll
test
mov
sub
dec
stos
imul
sbb
or
mov
push
fiadds
ret
push
aas
in
into
sahf
and
or
cld
lcall
fcompl
jmp
cmp
in
adc
sub
and
hlt
push
add
fnstcw
or
data16
pop
dec
stos
mov
xchg
pop
push
pop
or
in
cli
adc
insb
iret
loop
push
jg
es
icebp
mov
mov
les
sub
in
mov
and
or
int
fldcw
aam
mov
loope
rcrb
dec
ja
aaa
cmpl
add
cmc
fsubs
jb
nop
dec
rolb
push
fs
push
sbb
cmp
mov
insb
xor
ss
fldcw
in
add
gs
cmp
es
and
lock
or
hlt
pop
or
inc
dec
xchg
cmpsb
clc
hlt
jnp
jne
adc
jmp
or
inc
adc
scas
das
adc
push
mov
loopne
mov
lea
add
popa
xchg
scas
pop
jns
stc
int3
mov
lods
fdivr
sbb
inc
jne
and
cmc
das
mov
hlt
push
cli
add
xchg
mull
dec
fdivs
clc
mov
lods
aam
ja
sahf
jno
sarl
cld
xchg
clc
push
decb
pop
sub
mov
dec
sub
xor
sbb
scas
jge
outsb
fildl
outsb
fnstsw
adc
hlt
pop
clc
sbb
test
add
into
xchg
ret
cmp
cmpsl
pop
loopne
cli
inc
add
int
jns
pop
pop
mov
jecxz
jle
sbb
pusha
mov
sub
outsl
sbb
sahf
mov
sbb
stc
iret
and
movsl
mov
clc
rol
or
add
orb
addl
add
mov
iret
xor
fimull
insl
mov
push
xchg
clc
call
add
push
int
push
xchg
pushf
cltd
mov
cwtl
cltd
pusha
inc
out
pop
int
dec
loope
adc
movsb
lcall
cmp
stos
fldcw
jmp
js
sbb
cmp
aam
or
neg
mov
clc
mov
aas
pusha
sub
ljmp
push
ds
loop
xchg
jmp
lcall
pop
inc
inc
icebp
test
push
popf
xlat
int
sarl
or
fadds
movsl
shlb
aam
inc
lds
inc
and
lcall
ret
and
add
shl
push
pop
push
loope
mov
cmp
lret
push
add
loop
subl
add
push
mov
jbe
pop
adc
cmp
add
mov
pop
mov
fs
pop
add
je
jno
clc
adc
pop
nop
sbb
sbb
call
in
sti
xor
add
add
add
ds
idivb
aam
push
add
clc
call
mov
add
and
and
insb
xor
out
mov
add
cmpl
push
call
pop
ss
pop
pop
sbb
add
xchg
mov
adc
movsb
push
dec
mov
or
add
dec
into
inc
stos
cltd
add
aad
fiaddl
testl
add
push
jg
xor
pop
mov
in
push
jo
loopne
jp
jo
mov
fnstsw
push
mov
inc
push
push
les
imul
out
add
adc
pusha
xchg
push
mov
fcoml
insl
jg
pop
jecxz
fucom
cmp
inc
addr16
fnsave
push
iret
icebp
push
ljmp
lcall
adc
or
incl
push
sub
add
aad
or
adc
mov
jecxz
das
aam
jo
jg
jae
push
ret
pop
sub
add
xor
mov
sbb
pop
add
shll
and
out
jp
lahf
pop
adc
jg
cmpsb
add
push
xor
or
jp
sbb
testb
sub
dec
add
adc
dec
jo
add
mov
std
fists
mov
out
sbb
repz
lret
adc
push
leave
stos
jecxz
pushl
cmp
aam
jmp
ljmp
outsl
std
xor
fcmovnbe
adc
aas
bound
mov
or
add
jl
add
loope
mov
inc
ja
and
mov
rcll
insl
mov
push
js
flds
mov
and
js
jne
dec
outsl
mov
test
push
xor
jle
insl
addb
add
outsl
lds
push
sub
jp
test
pop
mov
xchg
add
xor
aas
push
jg
add
test
push
add
cmc
testl
pop
ss
add
cmp
jg
outsl
outsl
sub
and
or
pop
adc
idivb
jecxz
xchg
ljmp
xor
loope
mov
clc
fisttps
add
add
adc
fs
dec
clc
push
gs
idivb
int3
adc
icebp
adc
dec
mov
shr
xor
or
subl
or
dec
jno
mov
jmp
int3
cmpb
sub
sub
sahf
icebp
pop
ja
mov
and
mov
lock
add
inc
popl
loopne
aam
repnz
cli
push
sub
xor
xchg
fcmovnb
call
sahf
out
neg
ret
sub
repnz
adc
testl
push
popa
mov
rol
icebp
clc
dec
cmpb
outsl
aad
jecxz
push
mov
movsb
mov
add
orb
mov
gs
xchg
pop
fcmovne
jp
xor
and
mov
fbstp
pop
mov
inc
mov
daa
shrl
or
xchg
and
movsl
sub
sbb
insl
enter
les
insb
dec
stc
xor
pop
xor
inc
sub
outsb
push
ljmp
push
add
jg
cli
das
or
clc
and
jnp
push
dec
sub
call
add
or
fwait
dec
pop
je
dec
jb
in
jle
or
add
mov
in
dec
cld
jmp
add
fmul
sub
or
sbb
lds
sub
jg
cmp
push
or
test
ljmp
mov
imul
outsl
loop
and
or
cltd
xchg
sbb
mov
lahf
test
sub
imul
das
fistpl
icebp
sub
or
das
call
jecxz
sbb
push
sub
int
push
mov
out
and
cmpsb
cmp
jbe
inc
insb
in
lahf
mov
cld
xchg
adcl
test
mov
ljmp
mov
jge
outsl
mov
sub
fwait
cmp
pushf
push
ljmp
cmp
and
stc
jne
and
add
adc
adc
dec
mov
je
iret
in
test
stos
ss
adc
icebp
outsl
and
scas
lahf
cli
repnz
and
xorb
mov
jg
loopne
nop
out
idiv
mov
sbb
mov
lret
daa
aaa
mov
cmp
xchg
rcll
lea
in
and
and
sbb
cli
or
jmp
mov
dec
xor
lods
mov
cmp
test
test
inc
lret
adc
movsl
xor
inc
ljmp
dec
sbb
mov
idiv
pop
cli
xchg
and
pop
testb
in
test
lods
jb
pop
icebp
pushl
jg
cmpsl
mov
in
pop
test
inc
out
lods
mov
jmp
in
insb
or
and
push
sub
xchg
xor
cmp
call
clc
inc
jmp
push
pop
in
aad
mov
xor
jbe
pop
adc
jg
push
stc
mov
or
je
add
sbb
push
imul
push
divl
cmpsl
cld
ds
mov
cwtl
iret
inc
lock
jmp
push
push
cmpsb
push
mov
cltd
xchg
jmp
mov
mov
out
or
cmp
mov
lods
adc
ja
orl
xor
fbld
into
xor
pop
imull
stc
push
and
test
lods
pop
aad
adc
or
mov
pusha
loope
bound
negb
inc
mov
or
pop
sbb
movsb
repz
or
push
insl
cwtl
mov
mov
test
bound
lea
mov
xchg
outsl
std
mov
inc
test
and
inc
repnz
jg
ret
xor
test
cwtl
fimuls
jecxz
mov
inc
cmp
decl
push
push
add
mov
fdivs
mov
pop
fbstp
test
out
mov
adc
insl
sbb
out
jne
je
inc
mov
push
jb
add
jns
pushl
push
mov
aaa
in
outsl
add
add
outsl
pusha
push
mov
and
push
or
push
jmp
mov
or
sub
fcoml
in
or
jle
daa
aas
xchg
adc
loopne
dec
xchg
pop
xor
xor
inc
ret
push
mov
outsl
aad
outsl
push
cwtl
jl
cmpsl
xchg
jle
and
jg
inc
xchg
sahf
and
out
mov
mov
inc
pop
lea
jb
decl
push
aad
cmp
pop
lock
push
mov
rcl
adc
mov
cmpsl
mov
push
mov
movsb
cmp
sti
inc
mov
iret
jbe
xor
aad
push
dec
or
mov
mov
mov
add
or
fisttps
nop
mov
in
add
sub
popa
in
add
mov
cld
cmp
add
add
insl
inc
inc
and
sbb
lret
xor
sbb
sarb
popf
aam
sbb
mov
mov
jle
mov
inc
ret
loopne
inc
lea
jae
stos
std
add
or
jp
sbb
fistps
sbb
sub
or
addb
xchg
mov
lret
mov
int3
inc
pop
push
cmp
and
pop
hlt
and
add
cmpb
adc
fdivrl
inc
dec
pop
xor
adcl
ljmp
clc
sbb
jl
cltd
insb
xchg
sub
imul
pop
cld
jge
xor
pop
arpl
lock
fbld
js
sub
add
fisttpll
sbb
popf
rcrl
ss
adc
outsb
cwtl
aam
push
scas
mov
xchg
push
jmp
xchg
inc
sub
xchg
fmuls
sub
arpl
stos
fadds
push
mov
add
add
pop
mov
or
cli
mov
ret
cmp
popf
push
sbb
mov
add
xor
adc
scas
jne
rorb
out
add
ljmp
inc
mov
fs
or
or
shll
xor
test
subb
ret
sbb
add
xor
das
cmp
aam
xchg
add
out
add
xor
sub
aam
dec
mov
xchg
sub
pop
add
mov
mov
neg
dec
mov
jl
mov
add
js
xor
add
cmp
dec
sub
outsl
in
out
out
mov
dec
pop
cltd
xchg
mov
ljmp
ficoms
ljmp
push
filds
xorl
add
out
mov
adc
cmp
movsb
ret
lods
push
mov
fistpll
fisttps
inc
test
mov
les
in
loop
icebp
aaa
xor
aaa
push
sbb
sbb
hlt
popa
je
add
and
or
subb
cli
add
popl
out
fldenv
into
orb
int3
adc
inc
sub
cmp
mov
inc
and
cld
inc
clc
je
fs
mov
in
mov
icebp
test
push
in
pop
mov
sbbb
std
test
or
inc
add
cmp
mov
mov
scas
mov
ljmp
mov
xor
jmp
mov
sbb
sbb
mov
add
pop
cltd
js
in
mov
sbb
lret
mov
or
test
mov
popf
insl
imul
in
cmp
and
fisubrs
jmp
or
cmp
mov
dec
mov
hlt
add
xchg
push
pop
cmp
loope
pop
adc
lock
outsl
sahf
loopne
mov
cmp
xchg
pop
push
in
pop
push
lret
add
mov
lock
mov
les
aad
lds
xchg
aam
cmp
loopne
fucompp
sub
popl
mov
loopne
xchg
cli
xchg
push
stos
dec
or
aam
rcrl
fdivrl
xchg
addr16
push
jle
jge
mov
pop
ljmp
or
loope
movsb
push
int3
hlt
sarl
mov
test
out
icebp
push
jmp
scas
xchg
divb
call
cmpsl
jno
and
shlb
cmp
jmp
adc
lahf
mov
sub
pop
sarb
das
mov
popf
shll
rcrl
jg
insl
stos
mov
mov
jp
sbb
inc
inc
jecxz
cs
in
mov
outsb
inc
mov
movsl
xchg
in
les
jb
pusha
add
dec
in
adc
jnp
adc
mov
cmpsb
add
jo
sti
jne
lods
xchg
ret
or
or
rorb
insl
icebp
jmp
cmpsl
or
push
jg
add
pop
sub
ficoml
jg
ljmp
cpuid
lret
mov
add
fiadds
pop
test
test
es
outsl
xchg
push
iret
out
ret
mov
popa
je
xchg
pop
or
inc
mov
or
mov
and
mov
in
aam
xor
in
loop
decl
add
bound
lahf
push
imul
outsl
mov
xchg
inc
pop
ds
jecxz
enter
push
dec
test
lret
or
dec
popa
mov
xchg
outsl
popf
test
sub
in
ljmp
sub
insl
xchg
int3
or
or
and
or
mov
ljmp
invd
inc
add
repnz
sahf
mov
push
mov
add
cmp
outsb
and
push
fistpll
cltd
cmp
filds
stos
in
mov
lret
dec
add
or
cmp
les
or
cmp
jo
lea
mov
pmuludq
mov
jl
sub
adc
incl
loope
add
aas
dec
push
lret
rolb
pop
sbbb
bound
cmpsb
ljmp
mov
std
push
pusha
jmp
cltd
dec
inc
addb
and
mov
pop
stos
stc
cmc
inc
mov
cli
aaa
pop
or
mov
pop
pop
cmp
popa
dec
rolb
ret
add
mov
cli
xchg
andl
sbb
cmp
lahf
xchg
jge
or
lahf
jne
cmc
jno
loope
cld
aas
pop
jle
jle
pop
fildl
movsl
pop
mov
aas
mov
cwtl
adc
inc
push
shr
repnz
sti
jno
push
jno
mov
mov
push
jo
adc
xor
ds
add
add
xchg
cmp
and
ljmp
jle
and
aas
mov
lret
inc
popf
mov
mov
cmpsl
bound
xchg
stc
cld
or
outsb
mov
inc
lret
push
mov
mov
push
mulb
mov
jg
in
ret
fists
xchg
pop
pop
push
pop
pusha
sti
ljmp
add
cmp
arpl
iret
pop
inc
divl
push
mov
jns
xor
fmull
lds
out
aam
push
push
push
xlat
add
lods
cmp
filds
sub
mov
dec
xor
adc
push
push
js
push
lahf
shll
sub
push
or
xchg
xor
cmp
aam
push
lds
or
fimuls
inc
xchg
xchg
dec
sub
push
xor
out
les
loope
or
pop
mov
mov
and
les
bound
adc
add
add
or
add
pop
loop
adc
adc
pop
dec
cld
es
xchg
adc
or
or
and
mov
push
xchg
jnp
decl
fisubl
es
pop
jno
inc
rolb
das
adc
mov
inc
and
and
mov
and
dec
mov
test
shll
add
pop
mov
mov
add
fsub
cmc
pushf
push
xchg
loop
shlb
cmp
and
push
xchg
inc
andb
sbb
testl
outsl
subb
adc
jno
inc
inc
test
rcll
or
pop
test
xchg
mov
xchg
gs
mov
push
dec
sbb
or
mov
jb
shll
adcb
add
add
test
fnstenv
mov
hlt
in
pand
push
clc
fstpt
push
ss
add
dec
andb
push
xchg
mov
mov
movsl
mov
push
lds
cmp
cltd
movsb
jo
cmp
and
add
ret
dec
or
jge
jp
mov
jne
mov
mov
jo
add
inc
mov
lret
incl
test
or
xchg
adc
aam
sarb
mov
aas
out
push
enter
cmp
cmc
outsl
jbe
mov
imul
lcall
int
add
les
test
xor
lahf
push
mov
shlb
std
add
loopne
xlat
aam
fs
dec
nop
daa
shlb
out
sub
mov
out
hlt
clc
in
int
aas
adc
andb
and
outsb
divb
imul
dec
mov
iret
enter
pop
push
hlt
pop
inc
or
in
inc
pop
mov
mov
jb
mov
cmp
and
cmp
fiadds
test
fistpl
mov
and
pop
es
popl
movl
imul
push
add
or
idivl
mov
aam
popf
push
insb
in
in
mov
stos
cmp
cld
push
xchg
fwait
lock
jle
inc
push
pusha
adc
mov
inc
sub
cmp
jb
inc
dec
dec
push
cmp
adc
or
adc
fisubrl
jecxz
mov
cmp
loope
sbb
push
xor
aaa
cmp
mull
popa
rcrl
sbb
jo
out
sahf
and
push
or
mul
es
jp
xchg
inc
mov
pusha
in
outsl
push
daa
sbb
mov
add
es
out
jns
or
mov
into
mov
test
repnz
jno
sahf
fldenv
or
gs
pand
inc
loopne
push
push
lea
in
test
or
jecxz,pn
xor
daa
into
hlt
daa
stos
pop
xchg
cmpsb
sbb
jb
in
dec
addr16
iret
mov
add
xorb
jle
test
mov
jl
inc
or
jmp
ret
push
loop
pusha
ret
jo
pop
mov
adc
cmpsb
out
in
je
mov
mov
cltd
push
loopne
or
jge
nop
mov
scas
push
and
add
fdivrs
pop
mov
mov
push
mov
xor
in
dec
outsb
in
sbb
aaa
jae
fcoms
or
sbb
push
lea
and
push
insb
hlt
int
lods
adc
sub
push
addr16
mov
dec
push
mov
mov
outsl
imulb
pop
bound
or
xchg
mov
fldenv
test
xor
add
sahf
pop
enter
shl
mov
push
and
int
outsl
negl
dec
sbb
int
jmp
mov
inc
rcrl
fsubrs
mov
add
shl
xor
outsl
cmp
mov
inc
adc
mov
push
sub
mov
fstpt
scas
xor
incl
cld
daa
in
popl
or
pop
int
dec
lea
mov
test
sbb
push
mov
lds
xorb
sarl
fwait
inc
mov
call
inc
call
push
sbb
lcall
or
inc
xchg
nop
test
int
arpl
jg
mov
je
mov
rcl
jno
mov
xlat
subb
pop
or
shrl
std
incl
add
inc
lock
bound
inc
jo
sar
pop
es
xchg
mov
ret
lcall
mov
lret
add
mov
pop
in
adc
cli
call
dec
fidivs
stos
mov
divl
mov
fucomip
lcall
repz
mov
mov
cld
and
fnstsw
fisttps
int3
in
aam
xchg
into
loopne
cmpsl
mov
insb
cmp
pushl
gs
jb
xor
pop
mov
and
jle
mov
hlt
pop
jge
xchg
cmc
add
in
mov
lcall
std
push
loop
dec
loope
mov
dec
rclb
sbb
movsl
out
into
sub
outsl
mov
sbb
and
dec
adc
fists
xchg
push
js
sti
je
cmp
jge
jmp
orl
icebp
adc
jmp
cmc
mov
pop
add
movsb
mov
jg
in
popa
mov
mov
xor
cmpb
xor
mov
stos
lahf
loope
ljmp
enter
sarb
jnp
mov
pop
jmp
sbbb
jp
or
aam
or
mov
outsb
mov
ja
cmp
lcall
cmp
test
lahf
into
test
int
push
das
das
outsl
add
sub
mov
adc
pop
mov
rorl
mov
or
hlt
inc
inc
mov
mov
or
mov
daa
push
lds
outsb
sub
mov
push
leave
rorb
ljmp
sarb
mov
ficoms
adc
fwait
test
das
and
add
cli
and
iret
addb
push
popf
in
dec
scas
movsl
jae
inc
dec
jae
in
ljmp
iret
sbb
add
pop
add
aaa
aam
add
test
lea
lds
rcl
gs
or
insl
enter
imul
sbb
mov
pop
push
sti
push
std
notl
idivl
into
and
add
mov
mov
jb
aaa
je
jle
sbb
in
cli
mov
add
push
dec
fxch
push
and
push
loop
push
mov
xorl
jge
push
inc
and
jmp
je
mov
std
add
and
xlat
push
xor
pop
or
jle
pop
or
pushl
and
add
push
dec
stos
or
push
sub
mov
inc
cmp
fcomps
fidivs
xchg
jbe
shll
in
jne
xchg
add
add
push
movsl
out
mov
sub
jle
ds
add
mov
clc
jg
fisttps
pop
repnz
mov
cltd
xor
ficoms
hlt
das
aam
sub
in
inc
cmp
outsl
jno
leave
mov
cmp
std
pop
aam
or
jmp
push
dec
jae
sbb
inc
mov
mov
in
divb
std
movb
and
add
push
push
dec
jbe
out
xchg
or
or
test
jp
sub
loope
std
test
pushf
les
and
into
test
mov
jmp
adc
les
or
in
incb
cs
cmp
dec
dec
xorl
adc
int
add
in
fwait
dec
aaa
bound
aaa
mov
popa
xor
xor
push
sub
mov
std
das
test
pop
outsb
jl
cmp
andl
and
daa
fiaddl
outsb
add
rolb
jo
aas
pushf
outsl
dec
lods
sub
push
fs
lods
dec
pop
mov
add
cmc
jns
or
or
call
popa
int3
sahf
test
or
sbb
das
aas
cltd
incl
arpl
test
sub
cmp
das
mov
jg
mov
loope
ja
nop
inc
jp
movsb
sar
push
mov
push
popf
test
rclb
sub
mov
cwtl
xor
test
and
mov
out
add
lods
dec
lahf
push
jl
xor
or
dec
int
ss
or
sub
xchg
mov
push
inc
je
adc
es
sahf
out
fbstp
insb
icebp
dec
xor
cmp
xchg
jle
imulb
jl
pop
sub
or
sbb
enter
test
popf
daa
aaa
push
test
push
xor
push
push
lret
sbb
shll
dec
mov
cmp
outsb
je
ja
lahf
and
movsl
and
push
jl
jg
pushf
fsts
aas
mov
xor
push
push
add
push
pushf
or
cld
push
or
mov
xor
push
push
subl
jns
add
and
push
xor
out
in
cmp
add
mov
incl
mov
cli
sbb
and
test
pop
push
jecxz
jle
inc
aaa
sub
add
lret
pop
fisubrl
mov
pushw
and
jo
stos
or
inc
insl
inc
pop
mov
test
push
mov
test
outsb
pop
jecxz
inc
jp
jg
xchg
inc
pop
sbb
jmp
mov
push
cli
rolb
jecxz
xchg
xchg
and
arpl
repz
insb
add
sub
inc
aaa
add
cli
inc
sub
and
mov
stc
lods
add
mov
rcrb
or
imul
add
addr16
mov
jbe
cmpsl
inc
test
push
leave
mov
outsl
aad
jecxz
les
shll
sub
adc
adc
xchg
mov
add
jle
nop
fidivrl
xchg
mov
push
pop
jbe
or
mov
jge
lock
sub
rcr
pushf
add
add
sub
mov
aas
stos
pusha
sbb
inc
dec
sbb
and
lret
push
sbb
add
and
sub
mov
sbb
cmp
push
repz
icebp
dec
aam
cli
xbegin
cs
sub
and
gs
inc
scas
xchg
sti
test
push
lods
clc
ret
and
lods
std
dec
sub
testb
ljmp
jb
xchg
xchg
dec
push
sti
dec
xor
jns
mov
dec
sub
bound
jnp
shrb
call
jo
ret
movsb
fwait
jmp
fs
in
das
jne,pt
or
sbb
mov
dec
iret
jl
into
sub
inc
inc
mov
lcall
pop
ljmp
iret
movsl
mov
adc
loopne
ret
mov
pop
fisubl
push
lods
and
mull
int
cmp
and
jg
mov
mov
or
jp
xchg
push
jecxz
sbb
aam
or
sub
add
or
adc
push
inc
sbb
xor
add
cwtl
out
sbb
mov
cmpb
loopne
in
cmp
fstps
xor
adc
sarl
aam
insb
daa
cmp
addr16
jns
inc
or
int3
push
pop
or
xor
xchg
push
ret
lcall
loop
add
insb
adc
jge
cmp
ret
jbe
fstpt
shr
fs
sub
jle
stos
sbb
sbb
mov
xchg
gs
js
std
testl
mov
dec
sub
inc
subb
pop
jmp
sub
aaa
loope
xor
mov
pop
mov
mov
push
aaa
xor
divb
icebp
ja
shrb
pusha
mov
js
add
fwait
imul
push
insb
push
mov
out
das
push
xor
inc
mov
mov
rcr
ja
into
jo
int3
xor
rorb
adc
jge
std
nop
jl
test
fisubrl
ja
push
jne
filds
mov
mov
imul
movsl
aas
in
aam
incb
or
push
outsb
jo
ret
cs
sub
push
pop
push
add
lds
imul
mov
xlat
insl
daa
cs
rcrb
jb
and
lcall
test
fldl
push
xor
sub
sti
push
dec
aaa
mov
dec
mov
andb
xchg
mov
jb
push
jnp
cs
adc
xchg
sbb
cmpl
or
cmp
fisttpll
aas
ljmp
fdivl
scas
cmp
pop
pop
dec
cmpl
pusha
jmp
adc
ljmp
pop
add
push
mov
inc
daa
and
cltd
or
inc
lock
push
dec
mov
xchg
inc
dec
test
imulb
in
sub
xchg
popa
jp
pushf
sub
frstor
fisubrl
or
inc
dec
out
adc
mov
adcl
push
test
pop
sub
inc
jmp
call
xor
or
loopne
jns
shll
jge
push
outsb
int3
add
mov
mov
xchg
mov
pop
mov
adc
add
add
mov
call
loopne
pusha
adc
jp
lods
sbb
jno
xorl
xor
decb
pop
mov
ja
cltd
adc
pop
jns
sbb
or
data16
add
inc
sbb
decl
sub
int3
pusha
adc
dec
cmp
mov
clc
add
fnsave
aaa
das
std
js
and
and
gs
or
mov
push
and
dec
or
push
mov
pop
push
xchg
aad
int3
or
ljmp
iret
out
and
loop
lods
mov
jne
inc
addb
in
in
fildll
xchg
aad
jb
jmp
sub
stos
or
pushl
ret
xor
xchg
jae
rolb
idivl
sub
or
mov
bound
push
jp
out
inc
test
fistpll
cwtl
cwtl
cmpb
decb
mov
in
sbb
cmpsl
xor
pinsrw
pop
inc
pop
imul
adc
inc
pop
call
outsl
fwait
out
pop
sub
mov
ret
decl
pop
sbb
gs
sub
cld
and
aam
dec
add
mov
xchg
inc
xchg
loopne
mov
mov
cmp
mov
test
push
sbb
inc
sar
sbb
fnstsw
jbe
xor
mov
lret
or
das
cld
fninit
bound
adc
daa
dec
push
jl
sbb
sahf
loopne
inc
dec
add
push
xor
or
sbb
lcall
test
adc
lds
dec
or
test
call
mov
and
and
mov
pop
jne
movsb
jg
shlb
xor
push
jle
inc
inc
push
pop
sti
pop
lock
sbb
pop
sbb
outsl
jo
jl
and
adc
es
push
sub
xor
inc
xchg
xchg
daa
lret
orl
dec
fsubl
adcl
call
xor
mov
outsl
or
cmp
xor
aaa
stos
inc
mov
leave
daa
rolb
icebp
and
test
inc
sub
add
mov
add
daa
mov
sbb
icebp
gs
pop
cmp
push
sbb
jecxz,pn
inc
inc
add
inc
pop
call
clc
push
adcl
cltd
ja
add
push
sub
testl
outsl
cli
out
or
dec
push
add
lock
push
add
js
fidivrl
insb
jbe
inc
pushf
inc
dec
sbb
or
jg
xor
sbb
lret
mov
fstpl
clc
ficomps
movsb
test
inc
test
pop
dec
shll
jp
push
mov
adc
or
xor
sbb
in
shrb
push
or
sub
in
jmp
insb
xor
stc
mov
test
in
in
test
sub
fbstp
sbbb
clc
addb
lret
cmp
loope
push
testb
int3
lock
mov
fnstsw
dec
sbbb
xor
fdivrl
dec
adc
mov
lods
call
fidivl
push
push
lea
jbe
addb
jmp
mov
ljmp
jl
es
or
lods
jne
mov
dec
mov
add
push
push
nop
sbbb
and
sub
shlb
xor
adc
stos
test
jo
xchg
xchg
data16
sbb
imul
mov
push
sti
push
jge
aas
nop
ds
jg
clc
cmp
dec
fdivrs
sbb
pusha
jne
sub
inc
insb
into
clc
imul
add
mov
imulb
xor
lahf
adc
dec
pop
into
xor
imul
pop
pop
pusha
negl
in
cmpsb
sahf
xchg
mov
dec
xor
mov
pop
pop
pusha
in
aam
mov
mov
lret
adc
xlat
movsb
fldt
mov
push
aam
sti
outsb
inc
xor
mov
cmp
rcr
rcrl
test
scas
cs
pop
sub
fstl
out
add
enter
inc
push
es
jbe
pop
inc
rolb
call
ljmp
add
fwait
push
in
in
adc
mov
iret
addl
mov
call
out
jb
pop
jb
aas
adc
test
call
nop
inc
fwait
add
xchg
mov
out
adc
push
sbb
lock
xchg
xor
das
test
xor
clc
xlat
add
rorl
add
mov
dec
ficompl
mov
aam
imul
adc
pop
push
adc
jo
jl
or
test
lcall
add
in
adc
sbb
cli
es
jae
or
xor
jecxz
dec
push
daa
push
push
into
xorb
dec
inc
std
xchg
out
push
and
notl
cmp
ja
test
jb
in
mov
dec
daa
inc
add
or
add
push
rcrb
scas
mov
sbb
adc
inc
sbb
aam
or
test
jecxz
cwtl
lods
inc
hlt
or
cmpsb
pop
inc
in
imul
rorb
cmp
data16
fisubrl
js
jb
xchg
stos
aaa
mov
int
sbb
js
inc
dec
hlt
mov
cmp
test
jbe
xchg
lea
or
xchg
lock
and
fiaddl
and
insb
push
stos
stc
xor
out
loope
push
cmc
cmpb
test
fcoms
stc
mov
subb
jmp
test
push
inc
out
dec
aad
ljmp
pushf
aaa
insl
cwtl
stos
movsb
divb
inc
and
jp
fsts
pushf
pop
sub
add
jo
pop
sbb
dec
paddw
cwtl
test
out
clc
cmp
fsubrs
cmc
pop
jg
push
out
outsl
pop
mov
push
in
adc
mov
call
sub
and
xchg
inc
jge
jl
aam
ljmp
dec
inc
popa
out
aaa
sar
aam
cmp
and
loopne
shlb
or
fsubs
outsl
sub
xor
mov
xchg
loopne
mov
fwait
daa
adc
sbb
rorl
lcall
bound
and
in
add
ss
or
bound
jne
push
ret
fsub
inc
pop
mov
roll
jnp
call
imul
xorl
stos
test
sub
aam
test
les
inc
cmpsl
jns
cmpsb
clc
scas
mov
std
inc
enter
addb
xchg
fisubs
lock
je
dec
push
aaa
adc
fcomip
add
sahf
fbstp
cmp
int
mov
jp
ficoms
push
jl
inc
nop
and
push
out
adcb
sbb
pop
xchg
jg
clc
pop
ljmp
xchg
or
or
cld
sub
jbe
dec
xchg
bt
mov
mov
sti
or
imul
das
lods
add
adc
jne
outsl
pop
test
repnz
mov
shrl
lahf
xor
and
sub
xor
push
in
cmp
mov
pop
je
push
sti
xor
stos
call
mov
lahf
adc
das
inc
mov
mov
jg
sub
bound
daa
loope
out
inc
inc
lcall
and
inc
sbb
inc
xorb
pop
mov
imul
cwtl
jecxz
pop
xlat
iret
fistpll
jp
mov
or
ret
in
sub
test
jmp
push
sub
std
insl
fsts
rcr
in
mov
insl
mov
jge
sarb
jb
outsb
and
mov
cld
adc
clc
mov
fildl
cli
pop
dec
adc
push
mov
xchg
popf
mov
xchg
add
push
jbe
scas
arpl
pushf
push
add
push
cs
or
push
cmpsb
mov
jge
cltd
out
cs
add
or
pop
mov
std
adc
mov
pop
insl
mov
ficomps
jno
pop
sbbb
mov
xchg
test
mov
jne
das
mov
xor
inc
pop
subl
push
cmp
imul
insb
cmpb
pop
in
adc
lea
or
xchg
sbb
fcmovnb
lods
xchg
ljmp
sub
pop
ret
adc
add
loope
subb
cmp
popf
mov
push
mov
fdivs
push
lret
inc
jecxz
add
scas
cmc
out
inc
mov
cld
push
mov
stos
jo
jne
lock
test
stos
or
xchg
fcom
call
xor
pop
dec
rol
incl
je
lcall
int
movsb
mov
loop
icebp
inc
cmpsl
sub
sbb
aam
push
jbe
xchg
pop
shll
lock
insl
es
out
xchg
dec
icebp
hlt
mov
outsl
in
xor
pop
mov
jbe
scas
mov
aad
stc
fsubl
push
ss
popa
mov
cli
cs
arpl
sub
inc
ja
lods
cmp
enter
in
test
xchg
cmpl
mov
mov
dec
out
fdivr
outsb
cmpsb
and
adc
mov
push
adc
add
fstpl
sub
adc
aaa
or
push
jg
das
shrl
fcmove
xor
dec
adc
test
cwtl
pop
sbb
sub
sbb
mov
call
jne
add
lods
xor
xor
push
inc
aaa
jge
xor
pop
std
inc
into
push
inc
mulb
jb
jecxz
adc
fwait
push
jge
mov
inc
mov
or
xchg
jno
push
decl
subb
dec
push
pop
inc
int3
inc
mov
hlt
cwtl
mov
pop
cli
filds
mov
cmp
es
sub
test
jg
mov
mov
mov
and
mov
cwtl
add
test
add
dec
iret
daa
push
loopne
test
push
mov
jno
outsl
sub
add
adc
gs
mov
or
ljmp
sub
dec
insl
push
insl
sbb
cmp
in
aaa
sti
lea
or
mov
cltd
bswap
and
leave
push
addr16
cmpsl
sbb
jg
pusha
mov
mov
test
enter
push
dec
jmp
xchg
add
je
sub
out
mov
pushl
incb
rol
adc
xchg
xchg
add
repz
and
mov
inc
test
pop
out
dec
cltd
mov
cmp
decl
clc
enter
ret
dec
lcall
inc
ds
pop
and
clc
xlat
pop
insl
fwait
out
jbe
mov
jg
mov
cld
test
and
cld
shll
rclb
lcall
and
sbb
push
mov
call
and
pop
lret
fcmovnb
sbb
pop
mov
fldt
les
pop
push
clc
jg
shlb
bound
mov
xchg
jecxz
push
add
mov
xor
or
jp
and
popa
push
xchg
imul
dec
or
add
adc
dec
and
xchg
mov
mov
add
inc
pop
das
imul
dec
add
mov
test
rcll
sbb
gs
lock
sub
addr16
inc
bound
mov
sysenter
pop
and
bound
jmp
mov
aad
in
inc
jmp
jne
pushl
outsl
test
mov
shll
cmp
enter
cmp
decl
adc
mov
fwait
add
faddp
mov
clc
push
and
mov
pop
add
inc
xor
dec
push
stos
cltd
aad
aaa
bound
insl
test
stos
xchg
jb
sarb
sbb
and
pusha
sbb
sbb
xor
adc
in
testb
xor
mov
lods
roll
mov
jg
fldt
adc
adc
xchg
adcl
scas
repnz
rcrb
insl
jecxz
push
das
push
mov
rcr
inc
cmp
adc
pop
push
and
fisubl
sti
repnz
inc
cmp
add
movsb
push
out
add
pop
inc
ljmp
imul
mov
push
cld
ret
outsb
and
scas
repnz
movsl
in
mov
in
mov
pop
cltd
rorb
or
or
push
clc
xlat
push
and
inc
jb
sbb
pop
sbb
add
xchg
int
adc
mov
insl
dec
loope
jg
xor
jg
pop
imul
xchg
mov
xchg
cwtl
in
xchg
cs
pop
push
mov
jns
cmpb
es
cmpl
lock
push
inc
sbb
dec
pop
adc
add
testl
rcrb
xchg
ss
cmpsl
std
push
loop
inc
jae
mov
xchg
sub
rcll
decl
xor
test
syscall
ljmp
dec
loop
ss
popa
add
or
stc
rolb
mov
pop
push
or
dec
sar
mov
lret
iret
push
mov
dec
lock
shlb
xor
mov
aad
add
test
xor
outsb
or
or
out
push
or
pop
test
mov
cmpsl
clc
and
fadds
xor
and
pop
lahf
pop
fiaddl
shll
push
repnz
inc
jno
faddl
xor
push
mov
lahf
xchg
hlt
inc
sbb
push
hlt
cld
push
aam
sti
inc
xor
aam
test
jge
jecxz
sbb
xchg
inc
cli
inc
inc
je
mov
add
or
and
mov
ja
fisttpll
add
lock
rcl
inc
and
mov
and
insb
xchg
push
fdiv
mov
mov
mov
sbb
int
cmp
clc
ret
enter
and
push
call
push
ret
scas
ss
and
cmpl
jno
lret
test
dec
sahf
add
cmp
sar
es
and
loopne
inc
test
out
inc
add
dec
push
sbb
adc
add
and
xor
or
inc
mov
stos
add
lock
mov
dec
xor
pusha
jne
pop
in
pop
pusha
sub
fmull
pop
rcll
adc
inc
or
adc
fnsave
add
dec
lods
mov
push
loop
repnz
stos
pop
dec
add
or
test
je
or
ss
or
add
std
mov
xor
pop
fisubs
test
jae
ret
pop
cwtl
mov
sub
push
sub
out
cwtl
inc
or
jae
lods
stos
push
pop
pop
loopne
loopne
fsub
push
testb
pusha
pop
mov
sub
sbb
shll
and
jmp
pop
aam
lock
rcrb
and
adc
out
inc
sbb
mov
add
int3
aam
sbbl
xor
push
dec
jbe
fldt
js
subl
inc
stc
test
out
push
sub
outsb
ret
xchg
aas
shlb
push
or
loop
xlat
fwait
loopne
add
adcb
mov
and
mov
sahf
rolb
cwtl
push
mov
pop
fisubl
add
add
jmp
rclb
insb
xor
push
aaa
in
icebp
enter
mov
dec
mov
adcb
hlt
and
xchg
testb
sti
adc
outsl
mov
xlat
hlt
xchg
cmp
sub
ret
xor
lods
js
cwtl
inc
addl
jnp
mov
add
sbb
add
and
cmp
jae
jp
les
incl
test
xorb
jo
gs
dec
or
add
push
adc
jo
stos
test
xchg
jle
into
inc
xor
push
add
inc
sbb
pop
icebp
add
push
inc
rorl
push
icebp
arpl
addb
inc
sub
or
add
push
call
jge
cwtl
push
fiaddl
add
cmpsb
jae
lds
and
sbb
or
xchg
nop
mov
xchg
mov
popa
andl
in
push
pop
enter
xchg
inc
or
insb
je
mov
or
fsubl
fdivrs
add
adc
mov
dec
xchg
xor
cld
dec
cld
jle
cmpb
sbb
call
push
clc
sbb
int3
or
repnz
xor
outsl
cmpsb
xor
mov
shll
shlb
xor
shrb
pusha
and
sub
pop
and
dec
lock
mov
dec
xchg
and
dec
dec
das
jo
outsl
mov
je
stos
mov
mov
sarb
mov
pop
filds
sub
clc
pushl
xchg
mov
inc
pop
cmp
inc
ja
xor
aas
sub
shll
add
ret
faddl
insb
add
pop
popl
xchg
leave
pop
push
mov
outsl
xor
lock
ficoml
pop
add
jp
or
int3
and
mov
mov
ds
jmp
lret
mov
fists
inc
popa
mov
imul
js
outsl
je
cmp
mov
loope
sub
mov
das
pop
imul
mov
sbb
ljmp
je
repz
adc
or
dec
fsubrl
xchg
cwtl
xchg
mov
dec
iret
lods
aam
sub
and
aam
nop
mov
cmp
xchg
ss
popa
es
pushf
sub
sbb
inc
ljmp
pusha
cwtl
test
sbb
rorb
push
jbe
rclb
or
inc
mov
mov
sbb
dec
push
mov
jno
mov
loop
mov
mov
lds
add
mov
mov
int
faddl
loop
adc
push
dec
lret
mov
cmp
sbb
or
lret
jl
pop
jecxz
mov
dec
fiaddl
les
aam
incl
shll
add
inc
subl
adc
push
push
inc
mov
test
cld
loope
pop
sti
adcl
lds
out
mov
or
rcll
inc
out
lods
sbb
push
out
or
fwait
int
push
pop
adc
clc
sarl
xor
jecxz
sub
push
out
shlb
cmp
xchg
add
pop
adc
adc
es
push
sub
ds
jge
js
jo
cmp
das
push
movsb
pop
test
or
loop
fwait
out
adc
pop
mov
xchg
push
iret
popf
mov
cwtl
and
insb
fwait
push
stos
data16
mov
sub
cli
repnz
inc
dec
add
daa
shrl
push
punpckhbw
xor
call
mov
call
ret
inc
push
add
pusha
inc
in
enter
sbb
adc
jns
mov
push
xchg
inc
xchg
loop
fmuls
loope
mov
push
repnz
xchg
into
cmp
push
cwtl
repnz
loopne
fwait
or
pop
fistl
or
int
push
xor
cmp
cmp
adc
enter
lcall
sbb
sbb
hlt
add
push
pop
js
enter
stos
jb
loop
mov
mov
imul
jbe
mov
jl
adc
adc
shlb
loop
pop
adc
addb
popa
lcall
ja
int
add
shlb
stos
popa
test
pop
enter
fcomps
daa
fmul
pop
adc
popa
add
inc
and
and
xor
jno
insb
scas
fdivr
fnstcw
int
data16
fcmovnu
and
adc
sbb
cmp
nop
test
data16
les
loope
int
or
xor
pop
mov
mov
push
xchg
sbb
popa
loope
adc
push
fimull
jp
test
jbe
sahf
std
into
loop
dec
pusha
clc
dec
jno
frstor
pop
jbe
shll
xor
mov
or
cmp
icebp
shlb
and
sbb
bound
jo
adc
popa
jae
jle
dec
lret
mov
sahf
add
or
adc
ret
mov
and
jg
cmp
pop
addl
sbb
pop
mov
gs
push
dec
push
movb
neg
in
shl
dec
push
sub
mov
push
push
test
mov
cmp
mov
inc
sbb
fxch
sbb
lea
ja
push
push
rclb
in
ret
push
add
fstl
adc
or
xchg
add
nop
add
js
mov
dec
xchg
fcom
lock
cmp
fdivrl
adc
mov
push
push
ret
dec
xor
jg
xor
sub
push
dec
xchg
or
mov
add
push
mov
adc
add
ficomps
jl
repnz
push
pop
or
hlt
sbb
ret
and
out
jmp
ficoms
pop
clc
clc
add
cld
das
ds
lds
cmpsb
and
push
outsl
jo
jne
cmp
or
push
adcl
adc
pushf
sahf
push
aaa
dec
in
rorb
cmp
xlat
imul
jmp
pop
scas
ret
lret
sbb
aam
add
faddp
xchg
repz
mov
aad
mov
push
mov
push
add
pop
cmp
mov
push
mov
ljmp
fildll
mov
and
enter
sub
push
adc
adc
idiv
add
dec
shl
movsl
mov
popa
sbb
icebp
push
pop
jb
jno
lock
pop
subb
pop
jge
push
nop
gs
pop
neg
add
inc
loopne,pt
push
cld
cmp
mov
jo
enter
sub
push
movl
cld
mov
inc
xor
or
lock
aas
jecxz
jl
std
push
lods
mov
inc
adc
jecxz
mov
pop
call
rcll
inc
pop
jecxz
decl
sar
leave
dec
push
inc
sarl
cmp
push
mov
outsl
sbb
xlat
xchg
jae
in
fsubp
mov
or
push
js
shll
pop
enter
pop
ret
lock
add
add
mov
mulb
add
ds
loopne
sub
aad
test
mov
sbb
rorb
sbb
movsb
push
pop
adc
sub
dec
int
negb
aaa
or
lcall
das
xchg
add
jnp
add
notl
pop
inc
sub
repnz
or
jecxz
idivl
arpl
andb
in
int
push
mov
adc
stos
nop
sub
pop
pop
fs
mov
sub
nop
push
or
add
outsb
fsubrl
fld
push
mov
test
rcll
mov
mov
xchg
mov
sbb
adc
dec
and
sub
lock
push
loopne
enter
in
lcall
push
lret
push
mov
jl
mov
push
and
shll
inc
mov
in
mov
inc
rcr
rorl
dec
out
sbb
adc
clc
out
mov
test
outsb
adcb
divl
sub
scas
test
xorb
lea
loopne
or
jecxz
inc
sahf
adc
mov
xor
add
cld
stos
jne
xor
adcb
int
cmpl
dec
or
loopne
dec
xor
push
or
or
add
cmc
mov
outsb
loopne
insl
xchg
add
stc
push
xor
pop
mov
dec
add
fwait
adc
outsb
ljmp
outsb
xor
das
ss
pop
mov
dec
aam
stos
out
das
pop
cmp
and
rcll
or
dec
xchg
push
mov
mov
push
adc
mov
add
cmp
lods
add
mov
fisttpl
jp
dec
dec
movsl
inc
xchg
sti
fdivp
pop
add
call
clc
xlat
or
dec
adc
dec
or
adc
into
stos
sbb
es
test
add
ret
jecxz
scas
mov
add
lret
mov
in
pop
pop
xor
in
pop
dec
xor
movb
adc
outsl
cmp
pop
nop
dec
inc
inc
call
clc
sub
mulb
cmp
xchg
sbb
test
call
cwtl
ljmp
add
orl
sbb
les
cli
jmp
push
popa
push
enter
xchg
sub
dec
sub
mov
sar
jb
std
xchg
test
mov
jmp
mov
fidivs
jo
mov
add
or
push
fucomip
stc
push
and
xor
push
cs
hlt
cmpb
and
cwtl
bound
lret
movsb
and
add
ljmp
jno
sbb
rolb
roll
decl
dec
sub
fwait
daa
xchg
in
cmp
xor
in
and
and
mov
lea
sahf
daa
data16
jg
movsl
std
and
add
in
jb
dec
lcall
je
inc
jg
mov
lds
shll
rcrl
jmp
outsb
push
fnstenv
sbb
movsl
push
mov
sbb
clc
jecxz
xor
xor
sbb
dec
lods
jle
or
cmp
push
lock
sti
fwait
call
lock
mov
pop
decb
in
les
test
add
add
push
or
out
cltd
jmp
mov
int3
sbb
divl
mov
sbb
daa
fildll
lock
or
add
adc
cltd
sub
outsl
mov
xor
push
inc
or
lds
sbb
imul
sbb
movsb
dec
xor
jmp
lock
incl
sub
and
push
popf
add
or
add
adc
mov
sbb
or
xchg
mov
xor
lret
inc
lret
std
jmp
cmp
cmc
or
mov
shl
andb
lea
dec
ror
movsb
jbe
push
or
pop
lock
in
pop
xor
arpl
scas
addb
pop
or
pop
loope
sbb
add
and
or
push
add
mov
jno
flds
mov
cmc
adc
jecxz
mov
inc
daa
cli
iret
mov
sbb
imul
jp
sbb
fildl
add
dec
int
or
jle
mov
lds
mov
push
cmp
mov
jns
mov
or
pop
cwtl
shr
jmp
push
ret
divb
ljmp
mov
mov
leave
cmp
mov
call
adc
pop
repz
xchg
je
cmp
std
add
shl
mov
mov
mov
clc
rclb
lock
gs
mov
insl
mov
inc
ja
sub
xchg
adc
inc
sub
daa
mov
add
xor
subb
add
decl
int3
jne
add
ret
leave
jle
cmpsb
ret
sub
mov
aam
sub
mov
jmp
fiaddl
loop
and
add
mov
xchg
cwtl
adc
cmp
and
fildl
int3
sub
inc
sbb
inc
int
fcmovnu
inc
sbb
mov
shl
mull
push
sbb
fs
mov
stos
pop
jo
insb
inc
mov
addr16
lods
sbb
jnp
mov
jl
loopne
bound
imul
lea
lock
xchg
jl
mov
imul
ret
inc
push
dec
dec
insl
insl
fsts
js
inc
or
sar
out
or
dec
fsts
aas
int3
pop
inc
bound
add
adc
lcall
and
hlt
repz
lods
inc
jae
xchg
jmp
push
aad
mov
cmpsb
data16
int3
clc
mov
push
and
adc
ja
lcall
mov
mov
stos
jp
out
mov
movsl
outsl
xchg
mov
jmp
push
leave
ldmxcsr
shlb
shll
test
hlt
inc
mov
jne
outsb
mov
mov
dec
add
lcall
cmp
xchg
push
out
dec
inc
xor
cld
add
addl
stc
in
sbb
mov
popa
leave
hlt
enter
pushf
aas
gs
jns
cltd
push
pop
clc
jg
xchg
sub
data16
ss
cmc
cmp
pop
sub
incl
loop
xchg
fsubr
cwtl
adc
sbb
ret
or
cmp
jno
dec
mov
and
mov
adc
es
xchg
sub
iret
dec
mov
mov
data16
push
mov
xchg
jg
sub
lods
cmp
repnz
push
adc
add
pop
sub
push
ljmp
fcmovnbe
inc
cwtl
in
into
xor
adc
inc
fisttpll
or
rorb
out
mov
cmc
enter
mov
xchg
lods
dec
shlb
aas
cs
or
mov
mov
aad
xchg
mov
lods
inc
mov
mov
cld
roll
and
jnp
pushl
stos
hlt
loope
and
lahf
jb
mov
dec
xor
inc
mov
cltd
dec
das
fistpll
and
push
add
add
rclb
push
mov
xorl
out
mov
rcrb
fstpt
sub
test
push
add
outsb
push
sbb
push
cs
fucomi
push
add
add
and
bound
test
xor
mov
pop
aas
add
stos
inc
gs
jo
jle
not
push
and
or
icebp
aaa
stos
mov
push
mov
mov
inc
rcll
scas
jp
add
add
jg
inc
inc
sbb
dec
scas
enter
push
xor
in
dec
ljmp
sub
pop
dec
orl
daa
mov
sahf
xor
sub
pusha
sub
push
and
in
aam
aam
mov
dec
add
les
frstor
rcll
cmpsb
lods
sbb
insl
rolb
fistps
je
mov
lcall
sbb
jl
je
add
jno
xor
sbb
cmp
and
mov
mov
call
mov
pushf
psrlw
sbb
jg
aam
push
adc
cmp
xchg
xchg
fiaddl
sub
cmp
sbb
or
lahf
shrl
addb
or
mov
dec
rorb
pop
push
mov
repz
mov
mov
add
xchg
jp
arpl
mov
in
sbb
jge
sbb
loopne
cwtl
lods
inc
mov
and
rcl
add
adc
xchg
shll
and
sbb
push
pop
or
cmp
aam
rcl
iret
mov
inc
fbstp
test
mov
sub
sbb
sbb
lcall
pop
or
mov
inc
dec
push
or
dec
jmp
or
shr
adc
push
pusha
xchg
lds
inc
mov
adc
sub
inc
mov
or
andb
insb
out
adc
rcrl
adc
in
inc
cmp
rorb
mov
cmp
imul
dec
loopne
int
pop
xchg
adc
inc
stos
sbb
int3
aas
movsl
mov
mov
shrl
pop
in
push
adc
cs
inc
jecxz
mov
push
xchg
filds
int
push
int3
test
es
or
mov
mov
test
sbb
and
adc
test
add
inc
and
xchg
shlb
sub
mov
sbb
xchg
add
mov
inc
adc
jbe,pn
inc
adc
sub
aam
pop
in
and
sub
mov
push
add
dec
and
dec
add
aam
ljmp
lahf
test
mov
ljmp
add
lds
stos
push
xchg
jp
pop
arpl
sub
dec
xchg
iret
xchg
jb
stos
in
lcall
mov
in
xor
mov
xchg
push
mov
sbb
pop
shrb
push
rorl
movsl
jne
or
sub
push
imul
pushf
lods
test
cmc
and
lods
leave
or
mov
xchg
rcl
in
loopne
pop
aas
sbb
loope
jle
adc
or
mov
add
je
mov
push
add
ss
div
cmp
faddl
add
dec
mov
jbe
mov
adc
cwtl
add
pusha
adc
nop
add
mov
shlb
scas
mov
pusha
mov
rcl
popf
nopl
or
sarl
sub
fmuls
adcb
cs
cmp
jo
xor
cli
jp
inc
mov
pop
scas
std
bound
lret
imulb
adc
popa
sub
push
or
cwtl
mov
sarb
repnz
sub
push
mov
sub
xchg
jecxz
cmp
sbb
jecxz
ds
hlt
xorb
pop
es
scas
shrl
je
insb
fwait
push
adc
orb
push
mov
push
push
push
jno
rolb
and
call
mov
xchg
imul
lock
fsubrs
fdivrs
ret
cmpsb
ja
ret
or
pop
add
push
mov
dec
out
out
insb
ljmp
add
rolb
add
fcomp
fwait
sub
movsb
icebp
dec
test
cmpsl
sbb
sbb
out
add
ds
pop
dec
mov
mov
aaa
enter
inc
mov
inc
cmp
sub
notb
sbb
add
sbb
fisubs
fisttps
aam
mov
push
fidivrs
loopne
xor
add
cld
lcall
add
shrl
pop
or
adc
inc
and
cs
out
cmp
jg
loope
adc
movsl
pop
jge
mov
dec
repz
cmc
add
add
call
pop
aaa
test
cltd
xchg
idivl
mov
adc
jne
or
int
inc
rorl
sub
jae
pop
fbld
adc
sbb
add
inc
arpl
roll
mov
rorl
mov
or
es
in
inc
and
inc
xchg
mov
sbb
push
fsub
call
or
data16
sbb
adcl
cmpsl
ljmp
les
add
sub
rol
add
pop
out
sbb
dec
push
mov
arpl
loope
bound
cmpsl
in
roll
push
mov
inc
rolb
dec
pusha
inc
movsb
aas
roll
ds
clc
adc
scas
test
or
dec
and
xchg
or
or
movsb
inc
idivb
and
sahf
mov
dec
nop
cmp
loope
xchg
adc
push
call
mov
mov
in
xor
sbb
add
pop
loopne
mov
sti
mov
push
pop
xor
sahf
mov
jp
adc
sbb
incb
push
cmp
xlat
les
sub
icebp
inc
int3
test
fucomp
xor
mov
xor
dec
mov
pop
add
lock
sub
andb
push
shrb
sbb
or
adc
xor
sub
add
daa
rdtsc
add
adc
xor
inc
inc
daa
jecxz
fistps
xor
cmc
shll
add
insl
cmp
push
fucomip
fbld
test
jne
stos
add
shrl
shrl
sar
inc
mov
cld
dec
pop
call
incl
std
mov
fwait
xor
icebp
cmp
dec
add
ljmp
xor
sub
adcb
testl
ss
call
lock
jmp
fs
pandn
das
jne
pop
in
adc
je
add
pop
cli
push
std
mov
sbb
stos
loop
iret
movsl
xor
gs
std
fucomip
icebp
stos
scas
adc
jns
mov
adc
movsl
popf
aaa
push
add
or
call
pop
cmp
add
int3
outsl
je
mov
sub
and
xor
std
enter
mov
fwait
test
pop
scas
mov
dec
sub
mov
pop
rclb
inc
dec
pop
mov
std
mov
test
mov
mov
out
add
aaa
mov
stos
jle
sub
js
adc
mov
add
push
sbb
lret
add
jnp
cli
jl
inc
mov
shlb
push
mov
jb
push
pop
pop
jecxz
out
mov
in
dec
lock
test
add
test
icebp
dec
xchg
push
sbb
stos
clc
sub
mov
adc
jbe
pop
push
clc
inc
inc
sbb
or
in
adc
stos
out
cmp
mov
pushl
xor
inc
stos
sub
cmc
dec
inc
pushf
xchg
cmp
push
add
push
mov
aaa
cmc
ljmp
add
dec
insb
inc
mov
loope
call
add
decl
sbbl
add
pusha
divb
push
scas
das
nop
aam
movsl
hlt
sbb
mov
pushl
pushl
jmp
orl
enter
insl
xchg
or
inc
add
lret
test
test
test
xor
adc
out
leave
fnstsw
nop
loopne
xchg
push
das
data16
nop
sbb
jb
test
aaa
out
pushf
adc
pusha
push
nop
iret
in
pop
or
sbb
mov
insl
jge
cwtl
pop
jge
sbb
lcall
push
loopne
push
pushf
push
push
cmp
add
pop
insl
cmpl
mov
testl
stc
outsb
pop
loopne
inc
jae
pushf
xor
and
in
xor
sbb
mov
inc
pop
push
outsb
push
add
xchg
aam
test
cs
jmp
fsubl
sti
insb
push
cmpsl
pop
add
cmp
lret
and
add
xchg
xchg
push
popa
sbb
cwtl
inc
call
dec
loopne
fcomps
and
pop
inc
inc
aad
fwait
loopne
ret
add
and
sub
adc
sahf
and
xor
push
push
dec
sub
dec
and
pop
fists
arpl
out
jo
inc
sbb
add
adc
push
xor
push
loopne
push
call
push
push
sbb
hlt
jne
cli
subw
repnz
or
stos
or
imull
adc
int3
inc
jae
pop
dec
xchg
dec
mov
pusha
int3
loopne
push
and
in
leave
dec
or
add
movsb
jl
jo
xlat
scas
cmp
pusha
stos
outsb
dec
mov
dec
loopne
jmp
roll
js
adc
mov
out
inc
rcrb
mov
or
sbb
jne
call
jge
fdivrl
in
clc
sub
cltd
rclb
dec
pushf
mov
dec
ret
pop
ret
test
js
lcall
inc
mov
imulb
add
xchg
sbb
lock
inc
xlat
ja
sbb
sbb
add
sbb
ljmp
out
int3
fisubrl
and
or
and
mov
jle
int
xchg
jle
in
rcr
fistl
aam
sbb
roll
add
fmuls
jl
adc
or
subb
out
subb
sub
adc
test
adc
sti
sbb
mov
sbb
fxch
shlb
insb
adc
out
mov
adc
push
dec
xor
add
jb
cmovg
or
inc
cs
inc
xchg
sub
aas
push
mov
cmpsl
fisttpl
push
fisttpl
fwait
in
mov
sbb
andl
fisttpl
or
enter
jnp
mov
out
ljmp
insl
mov
orb
fs
divb
push
mov
inc
std
add
lret
sub
shrl
or
add
fdiv
or
lret
mov
mov
rclb
out
push
cwtl
and
int
adcb
or
xchg
adc
icebp
push
xchg
and
mov
xor
arpl
xchg
bound
sbb
pushf
test
int3
pop
rcrl
test
jmp
pop
and
mov
aad
fiadds
ret
ljmp
sbb
xor
in
imul
xchg
test
int
mov
mov
cwtl
shl
add
call
call
mov
sbb
and
sub
call
mov
call
jbe
sbb
test
insl
or
pop
mov
sahf
mov
cwtl
aam
push
enter
add
pop
in
sti
mov
mov
in
je
push
inc
sti
xor
lcall
gs
mov
inc
fsin
pop
enter
mov
andb
adc
insb
and
xor
mov
test
mov
icebp
enter
push
dec
pop
rcrl
clc
mov
cmp
addb
stc
mov
mov
roll
xchg
adc
mov
shll
call
push
inc
jae
inc
lea
push
or
mov
fdivr
sub
sbb
dec
mov
sub
fidivrl
push
repz
jp
mov
mov
mov
push
cmpsl
mov
enter
and
rorl
loop
stos
sub
add
lcall
mov
sub
jmp
inc
lods
js
mov
inc
rcr
out
mov
aam
pop
aas
mov
decb
filds
add
lea
orl
xchg
push
repz
adc
jg
mov
add
push
bound
mov
sub
mov
add
mov
insl
out
inc
jmp
lea
xor
and
int3
dec
addb
loope
or
pop
or
push
mov
stos
push
and
and
ror
das
add
add
adc
mov
test
lock
jp
insb
outsl
fstl
xchg
sub
push
jg
sbb
push
dec
outsl
in
add
adc
add
cltd
mov
add
pop
addl
mov
adcb
movsl
xchg
jno
cmp
in
repnz
jns
cmp
adc
dec
adcl
decl
in
xor
aad
inc
lods
insl
int
cmp
push
lahf
and
inc
out
fisubrl
sub
cmpsl
mov
push
mov
fisttpll
pop
popa
je
test
cmc
fucom
add
int3
loopne
outsb
mov
aad
rcll
dec
jbe
lods
lcall
push
out
push
inc
jb
fistpll
or
xchg
testl
add
jp
cmp
mov
mov
pop
adc
add
pop
xor
xlat
cmp
fcompl
ljmp
pop
sub
sub
int
inc
inc
ret
ret
cmc
xchg
mov
cmp
cmc
and
fs
nop
pushf
add
shrb
or
jns
mov
insl
data16
dec
out
imulb
insb
rorb
pushf
mov
sahf
nop
sub
roll
fists
rclb
mov
mov
mov
or
jns
popf
adc
insb
mov
or
push
lea
stos
rol
loope
or
adcl
movsb
add
or
cmp
das
xor
sbb
add
cmpsl
jecxz
xchg
les
aam
push
sbb
clc
adc
out
inc
mov
pop
xor
xor
pop
fmull
push
shrb
out
add
loopne
fbstp
cmc
add
xchg
fs
and
shrb
mov
lcall
cli
test
popf
pusha
insl
lcall
cli
mov
mov
or
popa
nop
add
push
push
fiadds
lahf
in
pop
clc
pop
test
pushl
leave
pop
int3
outsl
jnp
cs
dec
sbb
clc
pop
xor
mov
or
mov
or
and
out
or
rcrl
mov
fistpl
add
mov
out
ret
fisubrs
push
push
movsl
les
adc
lret
in
cmp
mov
pop
sahf
add
cmp
xor
mov
lret
fisubrl
mov
mov
iret
inc
dec
xchg
fistpl
loop
cmc
test
stc
jno
movsb
mov
cmpsl
rcrb
inc
out
orl
add
pop
lahf
rcl
and
sarl
fiaddl
loop
cmpsb
filds
fists
cmp
mov
das
jle
sar
rol
mov
and
xor
icebp
dec
data16
cmp
pop
test
fcomip
daa
add
mov
lds
mov
push
fucomip
jg
lds
adc
stc
adc
jp
mov
das
push
adc
xchg
imul
scas
push
jge
and
adc
es
addb
testb
ret
je
lea
inc
leave
push
ret
insl
or
test
loope
xchg
push
stos
push
xor
mov
insl
shlb
pop
lcall
loope
scas
rcll
enter
adc
add
pop
hlt
pop
fmul
dec
push
adc
jge
ljmp
xor
jns
inc
iret
push
sbb
ja
cmp
insb
and
das
std
adc
faddl
dec
cmp
rol
shl
lock
decl
popf
inc
and
mov
test
cmp
xchg
lcall
mov
mov
je
cli
bsr
out
sbbl
insb
add
lea
push
push
shlb
repz
das
add
sbb
repnz
add
outsl
std
dec
out
lock
add
jecxz
push
addb
test
mov
adc
daa
test
lcall
inc
scas
aas
mov
data16
pop
hlt
dec
jg
call
push
pushf
and
rcrb
xor
dec
and
cmp
outsl
inc
mov
subl
xchg
mov
push
sub
push
cli
ja
insl
inc
sbb
stc
lods
aad
dec
ljmp
xchg
pop
add
mov
arpl
rolb
call
push
pop
fcomp
add
int
cmp
rcrl
mov
xor
mov
cs
xchg
xchg
imulb
lds
and
loop
loopne
sub
mov
cmc
jo
aaa
data16
daa
and
pop
dec
mov
sbbl
and
dec
or
jmp
loope
mov
aas
and
xor
ret
mov
push
and
sbb
repnz
lcall
push
mov
cwtl
aad
js
xchg
mov
inc
pop
icebp
jns
mov
sbb
in
inc
jns
fidivl
lods
jo
ljmp
lods
out
insb
add
in
push
mov
mov
lret
out
hlt
pop
adc
push
clc
aas
sub
xchg
out
or
call
dec
or
loopne
pusha
adc
dec
outsl
std
repz
pop
mov
or
or
pop
ljmp
out
xor
lods
shll
fsubrl
adc
jo
sub
pop
cli
mov
enter
inc
sar
fstps
in
push
push
add
xchg
fwait
xchg
repz
mov
add
ret
fmul
lcall
sahf
movsb
scas
inc
test
mov
mov
lods
je
mov
inc
and
inc
rolb
popf
sub
mov
je
mov
enter
lahf
inc
loop
testb
std
mov
mov
or
adc
insl
xchg
sar
incl
fldt
sahf
pop
lcall
addr16
es
mov
cmp
push
dec
adc
jmp
sbb
and
dec
lcall
jbe
mov
iret
stc
ficoml
adc
mov
lahf
sarl
rcr
add
enter
ljmp
incb
sub
iret
sbb
mov
mov
add
pop
mov
sbb
mov
pop
add
sbb
push
testl
and
fsubr
xchg
inc
div
mov
ret
xor
add
cmpsb
add
push
sbb
push
scas
and
into
xlat
sbb
add
dec
sbb
push
inc
or
fwait
les
std
add
stos
lahf
mov
or
in
enter
or
imul
xchg
sub
pop
push
cs
jbe
add
int
push
dec
adc
inc
int
in
and
or
inc
xor
push
mov
in
testb
call
fstl
ret
call
mov
lock
hlt
rorl
or
fsubl
shl
sbb
jb
mov
or
fisubs
fldenv
ficoms
pop
xor
test
popf
pop
xor
inc
xor
inc
fcmovnu
xor
jnp
nop
or
add
sub
cwtl
sub
outsl
test
out
stos
mov
add
xor
add
call
push
cmp
mov
jmp
mov
adc
add
push
mov
shlb
xchg
iret
mov
ss
pusha
addb
insl
push
mov
or
notl
and
dec
jg
mov
sub
loopne
les
xor
push
test
mov
pop
nop
mov
inc
jle
add
lcall
sbb
xor
or
xchg
sbbl
jp
cmp
sarl
sti
leave
inc
imul
sarb
push
call
jg
jo
into
stos
xor
scas
push
lock
or
dec
test
or
cmc
mov
inc
pop
mov
push
inc
sbb
mov
ljmp
test
aad
mov
in
inc
and
call
pusha
jns
and
or
mov
mov
adc
aas
cbtw
jp
jo
xchg
mov
mov
and
lret
fcmovu
push
sbbl
jecxz
pop
xor
push
or
jge
xchg
and
pop
adc
pop
popf
push
xor
add
jge
adc
dec
ficompl
mov
das
js
popa
imul
mov
loopne
dec
mov
and
arpl
xor
xchg
ret
loopne
in
shr
xchg
mov
aad
lcall
jg
jg
inc
neg
lret
pusha
orl
jecxz
cs
loope
sbb
adc
adc
imul
push
lea
push
call
shrl
pop
xchg
in
popa
scas
mov
fcomps
leave
call
or
jo
dec
sahf
jb
pop
shlb
lahf
rcll
jecxz
adc
push
inc
xchg
mov
inc
roll
inc
mov
mov
add
jle,pn
xlat
xchg
xor
lidtl
sbb
cmp
nop
fcomps
push
or
mov
push
cmp
and
jge
lds
cwtl
add
pop
mov
lock
add
loop
adc
sbb
ret
ss
out
pop
aam
adc
ja
pusha
and
ss
xor
pop
jb
mov
outsl
and
mov
es
mov
or
pop
xchg
sahf
mov
and
pop
and
mov
inc
and
add
dec
fbld
add
inc
adc
adc
and
fsubrs
test
pop
sub
cmpl
push
sbb
int3
rorb
mov
or
dec
mov
aad
jne
inc
ficoml
dec
aam
lahf
add
push
xor
push
mov
jge
xor
addr16
push
fildl
sbbl
add
lods
fwait
insb
lret
push
lcall
jp
push
cmp
mov
sub
lret
sarb
adc
rcrl
jl
xor
lcall
test
jno
push
or
cs
xor
fnstsw
lock
lahf
jl
lret
sub
add
aad
push
gs
xchg
iret
mov
sbb
loopne
cmp
add
dec
xchg
out
or
inc
dec
ss
les
clc
xor
insb
dec
lcall
shlb
xor
pop
add
push
pushf
push
lock
es
popa
fcom
jnp
xchg
xor
mov
sbb
add
fstps
loop
xchg
test
int
jno
add
add
loopne
fisubl
push
xor
or
adc
inc
rclb
dec
sbb
inc
and
sub
or
xor
enter
adc
dec
out
and
or
sbb
sbb
mov
add
ret
mov
adc
mov
jb
push
mov
pusha
push
pushf
mov
shll
arpl
in
sub
lahf
xor
mov
mov
mov
jbe
addr16
sarb
or
pshufw
cmp
lods
add
or
jns
push
mov
pusha
inc
xorl
negl
nop
les
scas
sub
sbbb
insb
popf
cltd
xor
ficompl
out
adcl
enter
mov
dec
adc
or
mov
sbb
add
mull
add
or
push
test
adc
mov
sbb
sbb
sbb
and
mov
xor
ret
paddb
daa
xor
andb
mov
inc
add
dec
les
pop
push
mov
addr16
dec
add
clc
or
iret
outsl
mov
or
add
pop
insb
push
jge
add
mov
jecxz
shrb
add
fidivrl
loop
dec
lds
push
shll
sbb
fsubrl
pushf
add
sub
adc
mov
mov
movsl
or
les
or
mov
pop
xor
loopne
jp
jno
loopne
cmp
call
push
hlt
fldenv
inc
in
or
inc
and
push
lret
stc
sub
add
push
pop
inc
dec
popf
lret
les
incb
std
xchg
sub
frstor
mov
xchg
add
adc
int3
add
xchg
loope
pusha
inc
sub
xchg
repnz
pop
xlat
inc
stos
dec
add
inc
mov
pop
jae
sbb
xor
jl
cmc
cmp
insb
or
push
sbb
stos
push
hlt
arpl
dec
push
add
sub
cmp
aaa
jne
js
push
jle
jge
fstpl
in
or
insl
add
xor
cwtl
adc
mov
pop
cwtl
xor
dec
sbb
mov
incl
inc
cld
incl
test
or
inc
xor
sbb
das
sub
pusha
push
ret
push
add
aam
sbb
sbb
out
or
and
push
je
adc
das
fistps
inc
add
add
lea
xchg
into
add
add
add
mov
adcl
lods
shl
add
or
pop
jle
xor
push
hlt
jl
cmp
data16
mov
push
and
cltd
add
add
inc
lock
shrl
outsl
add
lret
sbb
jp
mov
clc
enter
stc
push
mov
xor
jae
jbe
or
repz
inc
or
inc
imul
arpl
into
xchg
sub
pop
shlb
repz
icebp
lret
mov
in
scas
add
insl
or
mov
jns
mov
mov
adc
fnsave
sub
xchg
pop
pusha
mov
pop
add
stos
imul
roll
in
lcall
aaa
inc
push
jb
add
pop
outsb
sub
push
xchg
bound
mov
pop
mov
sub
mov
add
jbe
pop
daa
dec
nop
xchg
mov
js
cld
pop
fisubl
add
lock
adc
lods
test
lret
push
sbb
daa
bound
daa
sbbl
mov
cltd
mul
xchg
mulb
pop
cmc
shll
sbb
ret
jg
std
aam
cmp
pusha
jl
cmp
shlb
ljmp
andl
lcall
fsubrl
pop
int
jmp
ficoms
pop
js
loop
mov
and
pop
outsl
fstpt
orl
nop
sub
lock
test
insb
jmp
push
aas
lds
cwtl
mov
dec
xchg
push
jb
iret
imul
jl
push
jl
push
sub
outsb
ret
and
pop
js
ljmp
cmp
aad
popf
ds
rcll
ds
aaa
outsb
sbb
out
inc
pusha
mov
add
dec
lds
and
in
xor
out
mov
pop
icebp
push
in
push
je
jmp
aad
xchg
push
pop
packsswb
push
xchg
pop
push
movsl
dec
popa
jnp
mov
sub
enter
bound
mov
pop
fwait
sbb
rcll
clc
dec
dec
icebp
adc
subl
leave
aas
and
subb
pop
pop
sub
jno
mov
or
je
out
pushf
arpl
mov
negb
call
orb
or
mov
std
mul
rclb
lret
repz
or
adc
and
add
outsl
call
int3
cwtl
dec
xor
ret
mov
jbe
jno
icebp
es
pop
adc
orb
incb
iret
sbb
subl
cmp
cli
fbstp
daa
pushf
mov
ljmp
mov
lock
cmp
xchg
subl
pop
pop
add
add
mov
mov
inc
xchg
add
jne
shufps
dec
mov
lock
addr16
iret
test
adc
adc
inc
icebp
addb
inc
call
jo
push
mov
test
push
in
xor
xlat
pop
outsb
push
sub
cld
and
or
lock
adc
cwtl
add
mov
jg
enter
push
adc
sti
push
pop
and
or
add
jo
add
xchg
lock
add
aaa
leave
ljmp
loop
sbb
sahf
adc
and
loop
push
push
pushl
repz
jp
ret
sub
and
add
das
adc
add
movsl
pop
outsb
enter
push
mov
movsl
sub
sbb
testl
mov
mov
mov
xor
fimull
ret
push
cmpsb
stos
or
cmp
sub
or
cld
lahf
inc
sbb
lea
adc
test
loopne
mov
xchg
shll
mov
gs
cmp
push
aam
fwait
mov
mov
add
orb
xchg
pop
sbb
mov
adc
and
xor
nop
call
ss
loopne
cmp
mov
or
outsl
jno
pushf
jmp
imul
adc
or
stos
push
push
xor
shrl
mov
and
je
mov
decb
mov
lds
xchg
dec
dec
sbb
sbb
cltd
xchg
stos
xor
pop
loopne
push
out
sub
scas
lret
and
push
xchg
push
insb
add
je
push
movsl
pop
push
jge
pop
push
xchg
sub
cwtl
push
and
das
pop
mov
xchg
adc
loopne
mov
lea
les
cld
push
pop
jae
inc
lods
lea
push
sar
jmp
jg
inc
xchg
xor
insl
push
cltd
or
xlat
pop
xchg
out
lcall
mov
mov
push
sbb
in
inc
sti
outsl
jbe
incb
outsl
xchg
pop
mov
inc
or
fistl
incl
push
shl
adc
fistpl
sub
and
adc
sbbb
lahf
cld
decl
jecxz
mov
push
roll
les
add
dec
sbb
addr16
xor
cmc
xchg
movsl
dec
pop
int
inc
jl
pop
inc
imul
outsl
std
es
xchg
mov
test
imul
enter
popa
daa
in
loop
jp
aad
and
push
mov
push
adc
jp
mov
adcb
adc
or
add
cmp
les
push
push
ljmp
pop
je
jmp
ret
inc
out
lods
hlt
and
int3
test
mov
jmp
jp
insb
mov
nop
ds
xlat
and
mov
fisubs
shrl
mov
mul
incl
insl
dec
cmp
ds
push
mov
das
mov
jg
pushl
mov
and
xchg
mov
cltd
mov
aas
scas
pop
or
push
add
inc
out
adc
jge
mov
push
xchg
mov
test
xor
repz
dec
scas
push
dec
dec
and
jle
push
and
jp
adc
jne
aam
out
addr16
icebp
notb
xchg
sub
mov
sbb
in
dec
sti
adc
insb
aam
insb
mov
iret
inc
mov
fisttpl
dec
sub
shl
mov
hlt
data16
mov
stos
sub
or
push
mov
icebp
mov
and
in
lods
lea
aaa
call
xchg
add
sti
in
sub
and
std
aam
sbb
int
loop
xchg
mov
rclb
nop
inc
mov
int
test
in
mov
nop
pop
push
gs
movl
stc
scas
leave
xor
mov
clc
dec
jno
pusha
inc
stos
ja
cmp
iret
mov
insb
imul
mov
cmp
mov
lahf
and
fnsave
int
and
addl
fsub
cmc
cltd
add
xchg
mov
sub
sub
rcrl
cli
movsl
and
and
or
xchg
add
fwait
ja
cmpsb
lea
dec
adc
imul
cmp
hlt
lods
js
cmp
bound
xor
and
mov
test
jl
jg
adc
adc
cmpsb
stos
clc
or
push
test
inc
mov
cmpb
push
int3
mov
dec
inc
add
insl
and
xor
ss
aam
mov
dec
adc
fistl
notb
push
push
cmp
push
pushf
cmp
js
outsl
mov
xor
mov
sbb
ror
or
aas
push
fbld
push
in
mov
add
fs
dec
gs
mov
fsubrl
push
cmp
gs
hlt
movsb
fbld
or
and
ud0
lcall
dec
mov
xchg
push
xor
mov
xchg
rcrl
into
popf
push
sbb
jae
iret
mov
stos
dec
ret
cmpsl
mov
or
repz
mov
das
jno
sbb
stos
incl
or
dec
pop
lods
mov
add
sbb
cmp
sub
jbe
xchg
jne
repz
cli
mov
inc
in
push
cmp
filds
xor
ds
pop
data16
cwtl
cmp
add
jge
test
cmpb
inc
cwtl
aad
test
mov
and
stos
fcomps
sbb
dec
jmp
jg
call
add
mov
sub
jmp
add
sbb
sub
xor
loope
mov
test
test
push
dec
inc
xchg
nop
jle
mov
shlb
or
es
jno
and
xor
lock
hlt
and
dec
sti
jns
nop
mov
rolb
gs
mov
sub
sub
ffree
lods
mov
dec
mov
out
dec
aaa
mov
pop
out
mov
sbb
cmp
arpl
or
test
cmc
mov
dec
mov
add
add
jns
and
jg
jmp
scas
add
mov
push
popf
adc
add
push
mov
xchg
ds
inc
adc
mov
aam
pop
lret
mov
push
mov
mov
ss
pand
push
and
dec
inc
lahf
arpl
jle
add
test
or
andb
xchg
inc
add
fcomps
cmp
fcoms
xchg
mov
inc
fwait
push
jne
mov
inc
js
mov
clc
add
rclb
and
daa
dec
jl
xorl
add
and
cld
sub
fcomp
add
add
cmpsl
push
rcrb
or
jl
int3
cmpb
add
inc
stc
lret
loopne
das
call
push
icebp
sub
xor
mov
push
ja
sarl
fwait
add
xchg
adcb
insb
xchg
inc
adc
mov
and
into
push
ds
daa
push
adc
inc
out
dec
pushf
cs
mov
jno
std
iret
and
jmp
out
fiaddl
add
movsl
cmp
es
or
roll
ljmp
lds
loop
fsubs
cmp
scas
mov
scas
out
sbb
xchg
inc
imul
sbb
jmp
push
fsubs
std
lods
inc
sbb
sub
xlat
or
arpl
stc
push
mov
xchg
push
jno
cmp
add
in
test
repnz
movsl
adc
mov
pop
and
insb
in
rcll
inc
mov
repz
int3
or
fldenv
or
pop
std
stos
add
xchg
imul
or
push
and
sbb
in
inc
and
bound
inc
cli
and
adc
cmp
push
rorl
hlt
int3
roll
out
push
mov
and
mov
or
int3
in
int3
loop
push
in
sbb
push
aam
or
lcall
pop
jno
dec
xor
jnp
adc
add
adc
add
hlt
sbb
sbb
cvttps2pi
data16
in
push
xchg
adc
push
lret
mov
iret
int
jg
lds
test
fstpl
cltd
jbe
insb
popa
inc
cli
lcall
sti
and
sbb
add
mov
add
cs
push
ss
lahf
imul
xorb
pusha
adc
les
push
imul
outsb
fbstp
rclb
bnd
loop
stc
sbb
cs
pop
mov
and
cmp
popa
lds
out
loopne
aas
push
xor
cli
sub
push
mov
add
pop
in
and
jl
repnz
push
shlb
test
rol
and
insl
call
jge
je
add
insb
daa
xchg
jp
test
lock
push
mov
in
add
dec
and
aaa
pop
ds
mov
fildll
adcl
repz
mov
xor
push
sub
pop
and
stos
aaa
pusha
test
fnstsw
popa
lds
subl
pop
mov
ret
mul
mov
subl
push
cmc
mov
mov
dec
inc
es
pop
cmc
add
repnz
add
adc
xchg
movsl
push
mov
fistpl
lds
lds
outsb
inc
dec
jnp
mov
mov
pushf
push
mov
shlb
or
mov
arpl
mov
in
ljmp
test
sub
fs
xchg
in
call
cwtl
jle
insb
addb
mov
fistpl
and
das
inc
stc
cmpsb
std
test
mov
stos
mov
jbe
add
popf
add
inc
push
mov
jl
loop
jae
icebp
sbb
cmpsb
fs
sub
leave
xchg
aaa
ret
test
or
add
or
mov
pop
pop
clc
iret
ror
je
sbb
pushl
test
and
aas
jcxz
repnz
je
cmp
test
fsqrt
jmp
mov
lret
and
sbb
inc
adc
ret
mov
pop
icebp
loopne
mov
pop
popa
push
jne
fwait
mov
stc
loopne
mov
mov
pop
ret
sbb
das
sub
ss
ds
and
aad
clc
pop
push
jecxz
mov
ret
add
mov
mov
and
sub
mov
call
into
cmp
call
outsb
popa
sti
inc
test
scas
rcr
or
mov
cmp
sub
lods
lcall
ja
test
rol
inc
ds
mov
dec
aam
div
in
call
sbb
scas
or
imul
fdivrp
divb
cwtl
inc
dec
mov
cmp
dec
pop
jg
mov
pop
push
sbb
push
mov
mov
cmp
repnz
scas
xor
shll
mov
adc
fstl
lods
inc
movsl
nop
mov
daa
outsb
pop
jecxz
in
mov
mov
pushf
cmpsb
cmc
fisttpll
mov
out
pop
jne
sbb
or
mov
sbb
std
outsl
in
xor
jmp
cli
pop
aam
xor
paddq
cwtl
inc
sbb
xor
cs
rorb
adc
or
in
pop
xchg
inc
lds
pop
push
add
int3
sub
xlat
out
inc
das
stos
push
push
or
rcll
push
aaa
or
adc
pushf
mov
movsl
outsb
jmp
repz
pop
push
mov
out
cmp
push
imul
ret
jns
lret
icebp
ljmp
adc
je
addr16
fsubrs
mov
in
test
jb
clc
xor
xchg
into
in
lock
sbb
hlt
inc
js
cmpsl
and
in
popf
pop
inc
cmpsl
add
dec
addb
mov
clc
imul
push
and
xchg
inc
or
adc
fnsave
sbb
loopne
or
sub
mov
ret
sub
xchg
push
or
call
pop
pop
xchg
mov
cmp
push
inc
mov
add
adc
add
es
mov
stos
ficoms
or
lock
pxor
pop
push
push
xor
aas
ja
pop
xor
push
sbb
inc
in
in
or
add
pusha
popa
xchg
and
dec
ja
pop
adc
add
fiaddl
sub
shrl
push
bound
cmpb
mov
adc
inc
loopne
ja
mov
inc
in
adc
push
in
sarb
sbbb
inc
xorl
xlat
mov
dec
or
je
add
test
and
pop
mov
push
mov
jae
or
cmp
aam
or
rcr
mov
inc
mov
and
cmp
and
or
mov
dec
mov
shrl
call
push
das
pop
or
adc
push
test
fs
ljmp
cmpsb
popa
inc
pusha
or
test
adc
and
sbb
lahf
rorl
sbb
add
sbb
incl
addb
test
repnz
cld
in
push
or
xor
sub
lods
xchg
fcomps
rcrl
movsb
and
sub
push
sbb
incl
lcall
xor
andl
stos
mov
push
rcll
fnstsw
and
int3
stos
and
jp
mov
or
lret
sbb
and
pop
jp
sub
cmpl
inc
push
push
mov
xor
push
aam
jns
mov
lods
mov
mov
rorb
pop
enter
les
lahf
mov
call
or
sub
jmp
mov
fisttpl
or
int
xchg
xor
add
out
mov
stc
jg
decl
fiadds
pusha
subl
add
mov
sub
jp
jle
iret
dec
push
fsubl
cld
loopne
adc
push
cwtl
xchg
adc
call
or
adc
mov
adc
mov
lret
xchg
ja
sbb
push
add
cli
jg
add
push
jg
mov
test
adc
das
add
adc
cmpsb
and
push
lcall
out
or
pop
cld
test
aaa
or
adc
and
adc
mov
inc
in
lock
mov
mov
xchg
and
dec
mov
stos
cmp
dec
add
sbb
mov
mov
push
ja
nop
inc
adc
push
cmp
aad
cld
decl
adc
iret
jo
test
ret
mov
subl
cmp
jecxz
cli
test
and
jg
mov
xchg
ret
push
loop
icebp
sbb
mov
scas
enter
push
inc
xchg
cli
mov
push
inc
sti
pop
jl
sbb
icebp
dec
mov
push
lock
call
mov
test
or
or
mov
addb
inc
xor
sbb
scas
rcrb
add
jecxz
jmp
lods
and
mov
mov
jno
ss
add
push
aam
xchg
xor
rcl
inc
inc
or
mov
shl
lret
nop
add
mov
inc
jbe
pop
mov
jge
pop
fistpl
loop
int
pusha
loopne
mov
inc
pop
lcall
push
inc
and
lods
xor
sub
stc
mov
add
fmull
js
mov
adc
cwtl
inc
sbb
pop
sbb
jno
push
in
add
je
or
shlb
or
lods
inc
aaa
adc
loopne
sbb
outsl
xlat
jmp
and
outsl
jge
push
mov
mov
or
mov
and
es
leave
xchg
dec
mov
adc
ds
or
fldt
add
ret
int
aas
jg
aam
movsb
mov
push
adc
lea
mov
test
add
pop
ja
dec
pop
mov
pop
addl
sub
sub
pop
addr16
cld
hlt
jg
bound
mov
mov
loopne
push
or
mov
cmpl
fisubl
ret
inc
cmp
mov
xlat
mov
or
xchg
pop
mov
stc
sub
add
adc
and
pop
xor
pop
adc
sbb
cmpb
fsubl
fxch
daa
pop
adc
inc
jno
pop
addr16
mov
lret
mov
pop
push
mov
xchg
inc
lea
jge
add
adc
add
mov
add
push
mov
or
inc
pop
pop
adc
push
xchg
fidivrl
push
dec
jns
repnz
mov
or
jbe
aaa
pop
jbe
and
or
rcrb
jns
mov
jo
popa
scas
push
adc
adc
jle
pop
pop
lods
pop
les
rol
insb
add
xor
je
xchg
out
dec
outsl
xor
call
adc
repz
add
jge
lcall
jmp
mov
cmp
dec
jno
jl
arpl
mov
sub
insb
sub
rcrb
mov
sub
mov
fwait
inc
xor
mov
pusha
repnz
es
mov
or
or
mov
mov
sub
cmc
add
movsb
mov
push
add
sub
and
ret
mov
xchg
inc
cmpb
xor
xchg
popf
push
les
incl
gs
xchg
shrb
adc
test
push
ljmp
lock
outsb
sar
mov
or
mov
dec
icebp
andb
and
pop
outsl
cmpsl
lret
add
lods
jle
in
ds
lahf
sahf
inc
and
xchg
dec
mov
aam
call
and
jns
jp
add
mov
and
lods
mov
and
nop
mov
in
addl
pop
or
push
clc
jno
mov
mov
std
in
dec
pop
dec
andl
or
inc
jnp
jne
pop
rorl
out
inc
addr16
cmp
push
sbb
and
shlb
cs
insb
xchg
ljmp
mov
or
loop
mov
inc
sahf
mov
add
sub
jno
pop
mov
rolb
jns
es
shll
mov
incl
mov
push
jno
out
imul
insl
shll
cmp
xchg
lcall
adc
stc
out
sbb
out
pushf
sub
adc
fcomps
jb
pushf
pop
out
and
push
inc
std
dec
cmp
call
mov
test
pop
adc
push
add
add
or
add
sub
ss
arpl
inc
mov
fcmovne
xor
cltd
jbe
dec
cmc
frstor
ja
pop
sbb
shll
and
lock
rcll
inc
pop
lock
test
fsubl
fsts
mov
stc
add
xor
or
adc
adc
pusha
aad
mov
aad
insb
adc
or
pop
clc
dec
adc
push
push
and
mov
mov
mov
rorl
mov
jl
test
adc
dec
jae
xchg
pop
fwait
sub
and
in
decl
jecxz
mov
stos
out
mov
stos
cli
lret
cld
outsb
mov
dec
shrl
cmpsl
adc
adc
jg
and
add
shlb
push
insl
scas
mov
inc
pop
pop
sub
hlt
jne
mov
and
cmc
inc
je
addb
jae
fstps
and
aaa
jmp
in
call
in
sbb
mov
fs
lcall
and
push
addb
add
inc
aas
icebp
incl
insl
ret
sub
rcll
xor
push
and
dec
es
loopne
xor
out
adc
mov
pop
xor
push
cmc
push
mov
imul
insl
push
out
pop
loop
jne
adc
cs
mov
lds
mov
xor
aam
mov
iret
adc
jle
xchg
or
adc
and
sub
adc
push
enter
movsb
or
int3
add
xor
mov
mov
loop
push
repnz
inc
in
xchg
push
push
add
dec
push
lods
pushf
rolb
inc
sub
test
pop
shrl
cld
sbb
data16
cwtl
inc
xchg
jnp
les
xchg
sbbb
lds
insb
push
gs
mov
inc
dec
add
push
shlb
shrb
rolb
adc
mov
add
incl
jnp
orl
mov
out
mov
pop
mov
sub
adc
adc
mov
pop
movsl
mov
sub
pop
or
dec
jge
pop
les
les
and
xor
enter
out
dec
int3
test
xor
add
inc
push
icebp
in
dec
aad
loop
mov
xor
call
sbb
cmovns
inc
and
sbb
stc
out
cmp
xchg
insb
incl
xchg
mov
mov
xor
xor
mov
stos
jbe
or
mov
loopne
ffreep
push
push
sbb
dec
push
inc
mov
stos
cmp
add
orb
jnp
add
pop
jo
mov
daa
push
push
or
mov
push
std
lret
push
add
out
push
push
daa
adc
nop
xchg
call
pop
leave
ljmp
lret
add
sti
or
loopne
or
imul
test
inc
test
xchg
vcvtsi2sd
les
or
in
mov
mov
cmp
adc
mov
movsl
js
loopne
iret
xor
dec
push
std
add
ja
and
jno
or
add
mov
adc
add
adc
shll
sbb
and
add
xorl
or
hlt
inc
jl
push
pop
cmp
cmp
push
add
subb
int
and
push
repnz
cmp
ret
test
xchg
dec
gs
sbb
mov
loopne
push
adc
lret
xorb
add
sub
mov
jo
sub
roll
add
pop
jbe
lret
xor
hlt
xchg
and
idivb
mov
fidivs
lcall
push
mov
mov
lds
imull
xor
mov
cwtl
popa
sbb
sub
scas
mov
cwtl
xor
insb
cmpsb
ret
pop
xor
fs
push
push
cld
cli
cld
cmp
into
and
jb
loopne
call
insl
fisttpl
out
mov
or
mov
js
das
xchg
movsl
addl
or
bound
pop
mov
into
and
icebp
cmp
push
adc
add
jp
adc
cwtl
icebp
push
push
testb
jle
add
mov
sbb
movsl
and
push
sub
inc
cld
adc
rcrl
xor
sub
dec
inc
outsl
or
push
shl
inc
out
adc
add
test
push
sub
xchg
fadds
xor
pop
add
sti
cmp
adc
hlt
add
mov
and
adc
and
push
out
lcall
fadds
divb
dec
mov
mov
sbb
ffree
adc
insb
sub
insl
shl
push
loopne
push
sbb
jg
xchg
or
sub
adc
adc
ficoml
stc
and
sbb
sbb
in
mov
test
xchg
xchg
sub
push
pusha
mov
mov
test
add
jb
sbbl
jo
stos
mov
xchg
mov
aaa
sub
xchg
mov
push
or
and
rcrb
dec
inc
sub
call
mov
mov
mov
jmp
xor
les
ret
aaa
test
xor
inc
pushf
sub
lock
hlt
mov
jne
pop
fildl
add
lret
hlt
cli
adc
mov
mov
and
fsub
icebp
dec
xor
in
pop
aam
test
fldt
and
ds
roll
sub
mov
int
mov
out
inc
cmp
fisttpl
or
ja
jns
xchg
adc
mull
in
test
test
cld
add
insb
mov
sub
in
push
outsb
loope
clc
fisttps
in
fsubrs
lds
add
call
dec
enter
jno
push
ficoms
push
insl
aas
mov
xor
andb
push
sub
push
dec
fdivrs
fldl
or
push
xchg
popf
jno
inc
lods
or
cwtl
lahf
push
pop
cmpsb
mov
pushl
mov
add
mov
cmp
pcmpgtd
jne
inc
pop
adc
add
out
faddp
fwait
mov
lret
jae
push
adc
add
leave
push
into
gs
cs
in
fs
test
jne
or
mov
mov
adc
add
ret
outsb
test
adc
rcrl
xchg
insl
stc
sbb
notl
adc
adc
scas
inc
xchg
mov
sbb
sbb
sub
mov
cmp
jo
movsb
dec
fimull
dec
test
repz
jnp
adc
push
cmp
orl
dec
pop
jnp
sbb
sub
push
mov
and
mov
xor
sub
sub
scas
repnz
js
loop
sti
aam
das
fadd
mov
loope
sbb
sub
cmp
mov
movl
jmp
out
push
inc
mov
and
call
inc
cmp
jg
mov
inc
loopne
jae
ret
jecxz
int
mov
add
or
aam
sbb
mov
lds
rol
and
push
icebp
xchg
in
std
testl
or
or
cmp
je
cmp
cld
cmp
pop
xor
pop
rorl
pushw
adc
sbb
pushf
add
adc
and
xor
loop
sub
xor
sub
xorl
leave
cmp
pop
xor
push
js
xor
lock
pushf
add
loop
rorl
in
push
jne
fstpl
adc
cmp
lods
cmp
pop
inc
xor
push
aam
xor
addl
jne
xor
dec
adc
add
jge
pop
mov
add
and
ffreep
leave
arpl
pop
addb
andb
adc
leave
inc
pop
jmp
cmp
add
and
ret
mov
sbb
mov
andl
adc
sbb
add
or
data16
dec
cli
dec
insb
adc
mov
sub
inc
adcb
das
inc
xchg
mov
cld
sbb
adc
xchg
inc
push
repnz
aaa
mov
aam
add
or
mov
push
int
push
sti
or
outsl
push
jmp
dec
sbb
pop
add
add
call
push
sbb
adc
and
lcall
and
int
push
je
or
mov
or
out
push
loopne
sbb
loopne
dec
jbe
push
testb
xchg
nop
test
pusha
sub
inc
call
mov
les
adc
cltd
inc
xchg
pop
out
mov
sti
and
shll
push
inc
mov
imul
add
ror
mov
insb
and
cli
jecxz
sub
jno
outsl
mov
sub
jb
cmp
mov
inc
add
sub
mov
bound
mov
stc
adc
clc
push
push
in
add
nop
mov
push
jge
adc
or
aad
pop
mov
repz
enter
pop
lretw
cmp
jns
inc
sub
lock
inc
lds
mov
mov
xchg
popa
mov
add
mov
dec
scas
jae
and
adc
mov
sbb
xor
sahf
mov
pop
xor
and
push
inc
repnz
in
cmp
push
push
or
cli
inc
add
cmp
ljmp
cmp
mov
popf
cld
or
call
inc
mov
pop
or
test
sbb
js
mov
add
push
pop
stos
lods
adc
jns
test
lock
jb
and
mov
imul
lods
fisttpl
pop
lret
push
out
push
mov
aam
xchg
push
xchg
pop
stos
cmpsb
enter
es
bound
add
or
insb
adc
or
sbb
test
mov
cltd
loopne
xor
repz
inc
or
xchg
and
or
fisubrl
pop
mov
sub
pop
mov
cwtl
xor
lock
and
fmul
into
bound
jnp
push
mov
fildl
idiv
mov
subb
sub
ljmp
jnp
fsubrs
aas
mov
sub
add
cwtl
xchg
in
mov
imul
pop
xor
rorl
cmp
addb
insb
out
std
or
jmp
shlb
lret
mov
push
lret
mov
or
addr16
mov
cmp
cmp
nop
data16
jnp
mov
iret
scas
in
cmp
or
push
pop
loop
and
dec
xchg
sub
mov
lahf
mov
and
or
add
shll
pop
add
add
and
das
add
and
pop
or
stos
or
sub
sbb
int3
mov
mov
push
add
lsl
or
inc
aam
and
and
filds
shl
jbe
xchg
sub
orl
inc
pop
mov
inc
push
jae
stos
scas
addb
lods
add
adcb
adc
daa
mov
pusha
push
movsl
or
mov
xchg
outsb
lret
inc
adc
add
jne
or
and
cmp
movsl
xlat
push
lcall
lret
add
iret
mov
pop
jle
popa
outsl
mov
sarb
hlt
sub
ret
mov
push
xorb
inc
ds
cli
repnz
data16
test
sbb
sbb
add
loope
out
mov
out
sti
adc
aaa
ljmp
xchg
xor
push
dec
sub
aam
and
inc
sbb
mov
inc
cmp
sub
mov
mov
mov
sub
pushfw
outsb
shrb
es
sub
jns
daa
ss
inc
jo
jge
push
adc
or
notl
daa
subb
sahf
rclb
sbb
cltd
jb
inc
pop
cmp
add
lea
cmpb
push
fisttpl
and
xchg
fwait
jno
inc
dec
xor
sub
call
mov
or
adc
rcl
mov
out
or
sbbl
push
fdivr
inc
scas
jb
or
fidivrl
lods
cli
addr16
jno
arpl
mov
push
sub
jge
das
fdivrl
pop
push
jp
add
lea
xchg
xor
mov
and
xchg
xchg
into
adc
test
das
lock
jg
inc
jge
add
stos
adc
clc
lea
cmp
jecxz
dec
bound
xchg
jp
adc
mov
inc
adcl
mov
std
inc
leave
les
addr16
mov
rclb
sti
fucomip
mov
fcomps
adc
pop
ficoms
mov
ret
rcrb
loope
jg
mov
dec
mov
test
popl
ds
sbb
es
inc
mov
inc
dec
sbb
test
and
fstps
inc
xor
in
mov
imul
mov
dec
cmp
add
mov
adc
loope
cmpsl
sub
ror
ljmp
out
mov
lods
scas
adc
inc
jle
sub
insl
testb
and
in
lcall
shr
test
sub
adc
push
insl
loope
add
pop
nop
movsb
add
push
icebp
jae
mov
incl
loop
mov
and
mov
dec
add
or
loopne
jecxz
hlt
pop
cs
out
rcll
mov
xor
sbb
mov
mov
and
xor
push
sub
test
jg
pop
neg
movsb
movsb
and
mov
dec
loop
add
fs
popl
cmpb
stc
test
movsl
repz
icebp
xor
sbb
scas
bound
sub
mov
leave
testl
call
aaa
jl
sub
insl
or
cltd
je
ljmp
cs
bound
and
xor
xchg
mov
push
cmp
fldt
sub
or
filds
jno
sbb
or
incl
mov
je
mov
or
and
rorl
lods
in
jo
jns
add
add
push
int3
loopne
push
inc
repz
jmp
or
mov
lcall
cmpb
xor
or
mov
adc
cmp
fadd
hlt
aas
sub
aam
repz
or
or
mov
inc
dec
fstl
mov
add
mov
inc
adc
into
popf
or
imul
sbb
out
ret
insl
jle
or
xchg
lods
inc
inc
scas
std
jl
sub
mov
push
sarl
sbb
dec
jno
sbbb
in
add
sbb
and
call
inc
leave
mov
pop
jo
and
fiaddl
aam
pop
cmp
xchg
xchg
fldcw
jne
test
jae
jae
sub
imul
xor
adc
faddl
rorb
out
jns
js
es
xchg
dec
jnp
negl
add
fsubrs
stos
les
adc
fcoms
and
inc
out
shl
fnstenv
jbe
rolb
daa
add
push
rorl
or
push
les
shlb
mov
movsl
pusha
add
inc
dec
ds
xor
call
xor
add
icebp
pop
xchg
pusha
lret
cmp
jne
xchg
pop
jns
push
cmp
les
dec
rcll
test
xchg
mov
add
call
out
adc
inc
mov
popa
jecxz
mov
mov
xchg
add
xchg
add
test
out
out
mov
cmp
lret
jo
test
loop
mov
jns
addl
scas
loop
repnz
add
push
pop
pop
jno
into
shlb
dec
fcomps
mov
xor
std
test
les
sub
stos
sub
add
aad
imul
cwtl
add
cmp
sub
stc
mov
fbstp
out
fldl
push
notl
xorb
inc
sbb
and
in
push
xor
or
fimull
popf
adc
add
dec
xor
ficompl
adc
adc
jns
dec
and
int3
and
sbb
dec
push
rorb
mov
test
outsl
call
or
inc
adc
sahf
inc
xor
inc
cmpsb
mov
push
or
rcrb
adc
rcrl
xor
sub
push
fistpll
das
dec
lret
jmp
cmp
and
loope
loop
cmp
sbb
testl
push
ret
lods
add
dec
sub
cmp
in
mov
pop
push
int3
jp
xlat
sub
dec
inc
adc
lods
addr16
inc
inc
push
adc
std
sub
mov
jl
and
cmp
in
mov
rorb
inc
jge
add
xlat
inc
or
adc
lock
aaa
sub
sbb
sub
lds
and
ja
pushf
jle
in
add
test
icebp
outsl
jle
hlt
xchg
add
stos
sti
sub
xchg
dec
andl
lea
xchg
xchg
icebp
push
jo
pop
sub
sub
dec
int3
mov
loopne
mov
cmpsb
aam
or
inc
je
inc
inc
repz
adc
inc
xor
mov
mov
mov
jp
fcmovbe
mov
dec
mov
mov
add
sbb
cwtl
sbb
or
mov
push
movsl
mov
stos
jne
adc
scas
movsb
cmpb
add
cmp
mov
mov
pop
test
pop
xor
pop
call
mov
cmpsl
js
lret
scas
pop
mov
xor
stos
push
xchg
movsl
jns
sub
rcr
mov
push
add
call
cmp
int3
mov
cmp
outsl
mov
xor
mov
inc
mov
sub
push
insl
or
movsw
mov
sti
incl
inc
dec
lret
insl
test
rcll
adc
sbb
pop
mov
shll
mov
das
inc
nop
addr16
data16
adc
adc
push
cmp
xchg
mov
pop
push
add
mov
stos
subl
sub
sub
out
outsl
cld
lcall
mov
into
loopne
aad
leave
jo
sub
dec
mov
std
shll
xor
scas
int3
jnp
mov
rcrl
dec
mov
imul
mov
fists
fildl
fsubrs
cmc
xchg
jg
mov
aaa
pop
xor
xchg
shlb
adcl
int3
pop
lahf
outsb
in
jg
xchg
pop
or
xor
mov
inc
or
mov
and
jl
test
clc
pop
jle
js
adc
ret
xchg
inc
es
and
add
imul
mov
mov
test
sub
or
out
xor
popf
mov
and
mov
and
lea
call
jl
xchg
add
pop
sti
cli
dec
arpl
cmp
sar
sarl
test
ljmp
push
sbb
jp
int
push
sahf
mov
adc
js
dec
hlt
pop
pop
sbb
push
pop
clc
insl
and
loop
add
lea
ss
mov
mov
ficompl
adc
pop
xchg
mov
les
test
pop
fdivrp
mov
sbbb
xchg
cmp
add
mov
decl
mov
outsb
scas
stos
sub
fnstcw
inc
mov
std
jmp
or
mov
scas
mov
push
movsb
mov
testb
push
std
outsl
js
xor
inc
ljmp
lea
xchg
arpl
nop
fnstenv
jns
jne
xor
dec
sbb
and
daa
adc
stc
or
sbb
das
mov
mov
ret
mov
sub
shll
or
jg
xchg
jne
xor
in
or
mov
mov
jae
add
pop
imul
je
push
mov
cld
out
or
or
xor
push
insb
insb
mov
add
rcrb
xchg
lods
leave
inc
jg
ret
pop
push
test
test
movsl
outsb
mov
jge
mov
push
inc
test
fisubl
or
je
mov
loope
mov
aam
dec
mov
ficomps
mov
cmpsb
and
rorl
or
aaa
dec
or
rcrb
mov
ret
inc
or
nop
mov
adc
aas
pop
inc
xchg
adc
inc
jne
mov
int3
lds
fcomip
and
hlt
incl
les
push
cmp
dec
or
ss
mov
mov
dec
ret
adcl
push
adc
daa
mov
dec
pushf
mov
jle
sub
jno
add
xchg
sti
fbstp
mov
jp
xchg
pop
mov
cmp
cmp
jbe
imul
and
cmp
inc
inc
rorl
ljmp
fstl
js
pusha
test
fnsave
sbb
cmp
push
sbb
sbb
mov
add
pop
xlat
aad
cmpsb
scas
xchg
out
cmpsl
subl
call
sub
push
inc
je
mov
or
cmc
ljmp
dec
sbb
pop
in
addl
sub
cwtl
repz
fiaddl
call
ret
ret
or
mov
mov
enter
rolb
out
roll
shll
sub
enter
push
cmpsl
js
jae
nop
daa
sbb
push
and
adc
mov
pop
daa
sbb
dec
xor
add
add
and
arpl
push
mov
pop
sub
das
mov
mov
insb
mulb
cmp
in
out
push
testb
aam
adc
bound
pop
loope
inc
xchg
call
cmpsl
shll
mov
sahf
or
pop
add
inc
insb
jbe
int
subb
gs
mov
fsubr
ja
mov
not
xor
test
nop
mov
push
add
push
jmp
add
add
or
rolb
mov
aaa
sbb
add
push
mov
mov
cmp
xor
adc
ljmp
push
rorb
xchg
ljmp
pop
adc
outsb
addr16
shll
incl
mov
jo
cld
mov
ljmp
test
dec
and
cmpsb
mov
mov
add
push
das
pusha
clc
or
fidivs
fwait
lods
daa
stc
xchg
jecxz
mov
lahf
jle
xor
inc
push
inc
movl
jnp
mov
jl
popf
push
xor
mov
mov
lret
sbb
cmp
add
mov
leave
mov
in
ficoms
lret
lcall
cmp
rcl
fistpl
push
pusha
ret
mov
pop
cld
test
xchg
sub
pusha
cmp
mov
cs
dec
cwtl
or
std
mull
outsl
and
xlat
lret
fnstcw
subl
dec
mov
ja
std
xchg
jbe
cmp
int
dec
inc
shll
fidivrs
adc
adc
arpl
pop
xchg
test
dec
add
pop
add
add
add
add
pop
pop
jmp
fisubrs
and
mov
push
sbb
sub
jmp
or
fs
inc
push
add
rcr
imul
and
decl
pop
adc
xchg
or
cmpsl
aas
fimuls
fcom
test
adc
decl
jbe
sbb
imul
xchg
jbe
xor
cmpb
aad
mov
xor
pop
mov
jmp
pminsw
xchg
sub
das
add
testl
dec
je
pop
adcb
cld
and
adc
inc
ja
inc
jge
or
push
mov
inc
lret
call
mov
xchg
adc
ja
movsb
cmp
stc
add
sub
nop
lcall
out
mov
jbe
insl
outsl
adc
movsb
inc
pop
bound
mov
andl
dec
in
sarl
out
addr16
test
mov
dec
xor
ret
cmp
movsb
sbb
outsb
push
jle
int
inc
ljmp
add
das
inc
sub
push
pop
mov
push
pusha
ljmp
push
xchg
fs
lcall
decl
dec
push
mov
xchg
push
push
lahf
inc
jne
inc
push
push
mov
fistpl
test
stos
or
push
adc
mov
or
xchg
adc
and
jo
lods
xchg
insl
or
call
mov
cmp
inc
popf
add
mulb
mov
mov
int3
xchg
or
into
cld
mov
sub
and
pop
xor
or
adc
jg
push
icebp
mov
int
in
gs
sub
orb
iret
lock
inc
mov
je
jg
sbb
add
aas
mov
idivb
fsts
pop
movsb
and
xchg
lea
adc
jo
fists
lock
cmp
pop
inc
xor
les
sub
aas
ss
clc
inc
sub
jle
pop
push
std
dec
loop
mov
xchg
imull
cmpsb
loope
into
push
das
mov
imul
in
in
test
sahf
sbbb
fwait
ret
add
insl
loope
leave
pop
mov
scas
mov
xor
jle
rcr
popa
int
pop
notb
push
lods
add
shr
icebp
dec
xchg
push
mov
test
insl
rorb
adc
push
enter
jge
lods
jo
mov
mov
lods
pop
clc
mov
ljmp
movsb
or
pop
fmull
dec
push
mov
dec
insl
hlt
dec
shrb
mov
adc
fwait
orl
jmp
aaa
mov
mov
out
movsb
leave
jo
xorb
sbb
outsl
xchg
pop
imul
mov
push
cld
mov
outsl
sbb
ljmp
loop
pop
sub
clc
cld
push
leave
shlb
out
sbb
or
rcrb
ds
dec
fmuls
lret
jl
xchg
hlt
test
arpl
inc
iret
jbe
xor
mov
sbb
pushf
jae
jmp
jne
cmpb
xor
mov
aad
ret
rorl
sub
bound
sbb
add
loopne
stos
pop
inc
sbb
and
cmpsl
add
shlb
or
nop
pop
stos
push
sub
inc
adc
adcl
adc
loope
das
enter
xchg
xchg
fsincos
loope
mov
add
outsl
popf
inc
pop
testb
adc
xchg
aaa
adc
or
pop
jne
adc
inc
scas
fisubs
hlt
sti
scas
loop
jo
cmp
shl
add
cmp
mov
daa
dec
mov
adc
iret
scas
lcall
aad
inc
cwtl
rclb
and
ret
add
sbb
rclb
sub
cltd
andb
xor
rorb
leave
sbb
pop
stos
cmpsb
lods
dec
not
inc
mov
icebp
push
hlt
mov
mov
loop
sbbb
adc
push
cld
add
cwtl
jnp
shlb
ret
mov
repnz
repz
sbb
push
rorl
push
fwait
pop
adc
addl
jge
push
testl
popa
inc
adc
and
sub
test
insl
adc
mov
mov
cmp
repz
out
mov
scas
out
data16
add
add
fnstenv
add
orl
add
or
roll
cltd
add
jne
cs
inc
pop
add
jnp
jge
and
int
xchg
inc
adc
jp
cmp
nop
orb
popl
pop
mov
dec
movb
cmp
sarl
aam
sub
bound
push
mov
sbb
ds
xor
sub
dec
add
push
xor
xor
imul
adc
leave
ret
in
dec
cld
mov
int3
std
aam
aam
dec
xchg
sahf
xchg
test
mov
enter
push
imul
cs
movsl
sbb
ljmp
test
bound
test
test
addr16
inc
insb
pusha
inc
cmp
pop
inc
fildl
movsl
mov
movsl
fstl
push
and
call
incl
ret
push
icebp
mov
mov
xchg
or
mov
pop
mov
add
repnz
cmp
xchg
ss
mov
mov
addl
xlat
xchg
incl
fnstenv
dec
sbb
adcb
jle
add
push
cli
mov
inc
mov
mov
shlb
daa
dec
add
les
dec
lds
les
inc
imul
fwait
scas
icebp
js
je
mov
sub
pushf
xchg
sahf
negb
push
fbld
test
scas
aas
mov
addb
push
and
pop
cli
adc
in
cwtl
insl
and
add
fistpl
imul
push
jbe
fcomi
and
inc
pop
insl
push
mov
or
repz
dec
jl
dec
pop
xchg
hlt
insl
imul
mov
fwait
xchg
pop
lea
push
add
cs
cmp
cli
mov
mov
ret
stc
test
jl
or
scas
repz
loope
movsl
insl
mov
jns
inc
mov
aas
jne
mov
or
mov
sbb
decl
test
push
stos
mov
fimuls
xor
push
sub
les
add
mov
adc
es
push
xchg
dec
stos
dec
adc
sub
adc
loopne
jnp
jle
mov
lock
cmp
icebp
outsb
call
daa
xor
cs
inc
cmc
add
int3
sahf
mov
jmp
or
pop
mov
mov
lahf
lahf
xor
filds
adc
stos
inc
inc
inc
add
push
rol
mov
imul
mov
mov
mov
sub
pop
xor
loopne
mov
aaa
adc
push
rorb
jle
test
xchg
mov
icebp
neg
scas
dec
add
and
imul
xor
addb
pop
es
rorb
fidivrs
push
xchg
xchg
repz
or
or
pushf
add
pop
dec
in
pop
adc
xchg
jno
xchg
xor
xor
sbb
push
jg
add
lcall
ss
or
pop
jae
mov
in
push
sbb
icebp
sub
ret
mov
and
mov
cmc
sub
cmp
xchg
pop
adc
xor
repnz
ljmp
adc
call
jecxz
add
gs
dec
aad
cmp
inc
pop
jp
rcrb
addb
push
ret
add
cwtl
adc
addb
jp
shlb
adc
adc
fisubl
push
push
inc
dec
cmp
out
jge
rolb
jp
add
pop
mov
lods
add
cld
mov
rclb
lahf
dec
push
fdivrs
mov
pusha
lods
sub
adc
aam
or
out
inc
or
push
pop
mov
cld
int3
call
inc
adc
js
mov
mov
arpl
dec
cld
addr16
xchg
cmp
push
cmp
orl
push
adc
dec
sahf
icebp
icebp
push
call
sbb
push
jg
lock
push
sub
push
mov
mov
add
push
mov
inc
mov
mov
or
lea
fcmovnb
repnz
fcomps
sub
into
sahf
decl
pop
ret
into
cmc
pshufw
mov
mov
fwait
gs
leave
sbb
enter
shll
push
ret
leave
mov
adc
jnp
jbe
out
cltd
and
aas
add
or
mov
stos
ljmp
sub
sbb
pop
pop
call
pushf
stos
mov
out
sti
or
scas
adc
in
cmp
or
decl
push
aad
stc
int
push
dec
and
les
repnz
sbb
inc
add
jbe
push
and
lock
jb
jle
cwtl
loop
cmpsb
xor
mov
mov
ss
mov
dec
loopne
lds
es
cwtl
adc
ljmp
imul
sbb
pop
and
into
rol
push
int3
int3
jp
cmp
mov
stos
pop
sub
mov
push
rcr
ljmp
fldl
cmp
loopne
lea
test
mov
leave
jno
lcall
int3
fistpll
adcb
shrl
sar
dec
mov
mov
cs
fsts
hlt
test
pop
push
jne
sti
adc
fisttps
add
aaa
mov
and
sbb
cwtl
popf
cmp
ret
in
jo
sahf
sbb
or
pop
scas
hlt
add
fwait
add
loopne
and
nop
mov
cmp
stos
icebp
or
pushf
xchg
inc
xchg
je
icebp
frstor
mov
push
cwtl
push
aaa
loope,pt
sub
sub
mov
push
lock
cmp
fsubrp
mov
fbld
jle
loopne
or
icebp
stos
mov
xchg
xor
mov
pop
daa
inc
lret
in
cmpsl
jge
and
or
data16
adc
mov
outsb
sbb
outsb
aas
adc
or
adc
lahf
popa
data16
add
sbb
cs
test
mov
aam
jmp
dec
adc
jecxz
adc
lret
mov
adc
mov
mov
aaa
js
fdivr
incb
mov
bound
jg
mov
pop
jl
test
add
daa
inc
xor
mov
mov
lock
fcomi
aam
stos
loope
or
test
cmp
pop
insl
mov
inc
push
jge
inc
loopne
cli
inc
xchg
mov
clc
int
dec
pop
negl
mov
xor
push
push
push
sbb
mov
xor
test
mov
ljmp
sbb
test
clc
adc
popa
arpl
lcall
jp
adc
sbb
mov
fbstp
rol
xchg
sbbl
mov
call
lock
rcr
dec
and
cmp
lcall
mov
movb
mov
sbb
xchg
ljmp
loopne
leave
cwtl
or
jne
inc
pop
mov
nop
xchg
adcb
cwtl
fwait
and
jnp
mov
jecxz
add
cmc
scas
lds
add
lock
pop
sbb
mov
inc
push
push
pop
or
cltd
fstl
dec
pop
jge
movsb
int3
inc
and
inc
je
mov
or
push
stc
and
mov
clc
testb
loopne
and
xor
lods
inc
repnz
out
outsb
adc
fisubl
fldpi
lret
inc
push
jge
mov
jecxz
jecxz
popa
popa
jns
call
pop
mov
mov
pop
ljmp
in
cli
xlat
es
dec
jl
jg
insl
inc
fs
adc
daa
cmp
movsb
mov
sub
inc
decl
adc
cmc
test
scas
jno
xchg
mov
sub
pop
clc
call
push
mov
jbe
sbb
add
les
sahf
rorl
and
sub
loope
aad
sbb
dec
and
movsl
pop
mov
movsb
add
or
mov
jg
decb
loopne
xor
mov
dec
cs
add
mov
and
loope
jne
clc
mov
xor
test
fidivrs
dec
sub
dec
push
or
push
jmp
jp
dec
jp
popa
adc
jp
sbb
xor
ljmp
xor
pop
pop
adc
xor
mov
xchg
dec
cmp
rcrl
lea
mov
and
dec
inc
fs
and
push
add
fbstp
or
cwtl
mov
scas
hlt
mov
fst
lcall
mov
inc
das
mov
stos
fistps
mov
dec
xchg
jae
mov
cmpsl
mov
pop
sbb
nop
in
xchg
push
fs
cmp
mov
cmpsb
je
addr16
and
or
mov
and
idiv
aaa
test
adc
inc
rcll
flds
insl
mov
pushf
jecxz
outsl
inc
xchg
xor
rolb
out
pop
les
adc
jge
das
aas
clc
xor
sbb
loopne
leave
movsl
cmp
mov
in
jns
out
cmovo
test
and
mov
push
les
sub
sbb
fsubrl
and
inc
adc
xchg
xchg
lock
inc
ds
lods
cmc
add
sbb
ret
sahf
add
dec
lock
sbb
jnp
adc
jb
dec
add
loopne
push
sbb
pop
je
inc
xchg
cmc
out
jl
xor
aam
and
sbb
sahf
dec
sub
dec
sbb
scas
fwait
in
les
xlat
mov
mov
add
adc
mov
mov
daa
ss
add
test
fstl
sbb
fildl
andb
mov
push
ja
inc
add
dec
cmpb
jo
into
add
and
fs
pop
inc
xchg
sub
add
inc
aaa
xor
mov
push
cmp
adc
xor
cmpb
jg
add
test
sub
cmp
cld
loopne
dec
enter
and
movsb
or
pop
lcall
adc
or
cmp
mov
ljmp
fsub
popf
cli
sbb
outsl
add
xor
or
jle
rol
add
or
and
bound
stos
and
test
pop
mov
or
sahf
mov
call
shrb
clc
fwait
jecxz
or
les
dec
nop
mov
ret
add
or
lahf
test
call
cltd
rcl
ret
mov
stos
lock
adc
add
outsl
pop
outsl
rcll
adc
mov
fadds
xchg
mov
add
rclb
sbb
add
jg
repz
loopne
aam
orb
xchg
or
jbe
jae
add
aad
and
and
push
cmp
sub
fmull
adc
pop
inc
scas
lret
lods
inc
pop
stos
and
fists
dec
inc
push
push
adc
xor
adc
xor
cmpsl
pop
scas
push
inc
xor
addl
cld
mov
adc
cmp
or
add
add
jae
mov
stc
fwait
add
mov
xchg
incl
push
loope
or
mov
loope
and
or
fadd
data16
xor
add
addb
mov
pusha
out
xchg
subb
xchg
orb
jbe
push
add
and
imul
out
or
sarb
stos
mov
add
add
pop
arpl
rcrl
rolb
push
rorl
inc
or
push
mov
xchg
cmp
mov
dec
add
icebp
and
fildll
jae
sub
xlat
and
pushf
jl
jge
rolb
out
add
mov
cli
movsb
icebp
mov
std
xchg
cmp
data16
js
imul
jbe
add
outsb
bound
xchg
movsb
fdivl
cmp
addl
test
add
or
mov
inc
sbb
rclb
sub
mov
jb
xor
inc
mov
mov
in
out
and
outsl
lods
testb
mov
xchg
pusha
push
sbb
ret
data16
cmp
inc
inc
dec
push
jg
lds
scas
jecxz
fsts
jmp
leave
cld
pusha
push
std
lods
inc
dec
mov
addb
sub
inc
add
aad
cmp
xchg
aam
add
mov
int
add
es
int3
or
or
pop
ror
or
mov
adc
lock
add
arpl
out
push
shl
push
rorl
mov
sahf
lock
in
xchg
add
test
jge
add
mov
dec
ja
sub
aaa
mov
mov
inc
movsb
push
cmp
cltd
pop
sub
cli
xor
hlt
sub
push
mov
lds
inc
cmpsb
add
in
jnp
pop
xor
leave
call
aaa
mov
inc
mov
lods
test
call
roll
push
adc
and
cwtl
xor
or
cmc
data16
rcll
cmpsb
or
push
lods
inc
xor
xor
jb
or
pop
sub
into
lock
test
iret
jmp
adc
jp
iret
in
push
or
rolb
mov
ljmp
lock
jge
into
add
add
sbb
adc
or
xchg
scas
dec
jbe
inc
jo
push
jns
shrl
insb
jmp
inc
out
sbbb
inc
addb
pop
add
mov
adc
xorb
test
addl
dec
mov
adc
popa
push
push
push
ret
std
add
or
inc
mov
inc
icebp
or
dec
int3
xor
sub
aaa
push
popf
test
rol
push
pop
inc
lsl
movsb
and
pop
mov
in
ja
fwait
in
mov
jmp
xchg
cmp
ret
add
bound
dec
xchg
repnz
clc
mov
aad
lcall
sbb
or
jo
mov
mov
imull
and
ror
arpl
stos
inc
push
int3
add
pop
roll
mov
xchg
cmp
lret
and
lcall
lock
xor
pop
xor
inc
mov
mov
push
xlat
jbe
push
mov
mov
and
pushf
inc
out
rcll
push
imul
add
imul
mov
fistps
inc
xor
adc
pop
mov
out
cmp
sub
xor
fstpt
cltd
jecxz
inc
movsl
mov
in
or
gs
sub
clc
lahf
mov
enter
cmpsl
lret
adc
ficoms
mov
daa
aam
sahf
add
add
in
mov
dec
cmp
adc
mov
xchg
inc
add
jle
sub
cmc
xlat
jns
pop
adc
mov
rcll
sub
push
lods
call
dec
out
sub
or
xchg
pop
fisttpll
ja
xor
cwtl
aam
push
in
pop
add
std
aam
cltd
or
stos
test
dec
xchg
mov
cmpsl
out
mov
lret
int3
shll
cmp
pop
adc
incl
scas
xchg
cmpsb
or
cmp
loope
mov
test
loope
cld
add
pop
push
or
negb
loope
lret
push
sub
loop
in
std
push
loopne
dec
cmp
inc
mov
cs
jg
mov
push
out
mov
xchg
fisubs
mov
scas
jmp
fs
jo
mov
jb
add
pop
movsl
mov
push
push
mov
mov
ss
icebp
add
cmp
add
sub
inc
push
mov
psubsb
shrl
dec
pusha
inc
inc
clc
inc
rcrb
cmc
inc
cmc
cmp
jbe
loop
adc
cwtl
outsb
insl
xchg
add
addb
std
lods
inc
pop
ss
xchg
int
into
xchg
ret
imul
push
inc
imul
scas
inc
mov
adc
aad
push
cmpsb
dec
dec
clc
sub
stos
jo
push
xor
cmc
ret
data16
clc
js
pop
mov
pcmpeqb
cld
jb
pop
ja
or
adc
jle
xchg
loop
mov
jb
imul
stos
aaa
xor
and
xchg
loop
cmp
and
ja
jg
mov
outsl
inc
and
inc
push
jae
xor
add
clc
test
negb
aas
xlat
iret
add
loop
mov
repnz
and
bound
nop
jno
add
int
sbb
push
or
or
in
mov
cmpsb
pop
mov
insb
outsb
jne
in
or
pusha
and
fs
cld
fstpt
shlb
pop
adc
popa
sub
incl
and
test
mov
inc
das
cmc
sti
ja
mov
std
mov
mov
sbb
push
mov
sbb
or
daa
jg
sarl
mov
fmulp
jg
lea
out
jae
mov
incl
push
fwait
js
mov
std
xor
cmp
dec
imul
xchg
mov
sub
pushl
add
adc
inc
sbb
push
adc
aas
fbstp
add
cltd
shll
sub
mov
mov
incl
imul
sbb
and
std
push
sbbb
dec
and
mov
ret
xchg
push
ret
enter
mov
hlt
dec
hlt
inc
hlt
push
mov
dec
add
xchg
sbb
in
push
or
inc
and
shlb
dec
mov
cld
mov
inc
sbb
jb
and
pusha
mov
sub
pushf
cmc
vpshufd
ret
test
mov
bound
int3
sub
subl
scas
inc
push
popf
shlb
daa
mov
js
scas
jge
mov
sar
cld
sbb
mov
int
pop
mov
mov
cmp
call
aad
cmp
adc
mov
insb
ljmp
fstpt
pushf
rol
mov
mov
mov
inc
mov
xor
repnz
xor
std
mov
ljmp
mov
inc
and
xor
popa
enter
xor
jle
and
and
fcos
mov
inc
xor
cmc
test
sub
in
ds
sbb
push
ljmp
mov
mov
gs
dec
test
dec
sub
mov
les
adc
pop
fistpl
ficompl
test
push
cltd
les
loop
test
jecxz
loope
lds
push
pop
dec
es
lcall
fdivs
mov
push
jmp
adc
mov
or
mov
cmp
and
lcall
shr
cli
popl
arpl
faddl
cmp
xchg
sbb
mov
daa
je
enter
fdivrs
xchg
in
push
test
mov
cmp
das
mov
pop
daa
cmpb
pushl
jo
xor
aaa
mov
dec
movsb
popa
test
idiv
fwait
inc
mov
cmc
arpl
imul
test
add
inc
cld
lcall
aaa
inc
andl
push
and
cmpb
pushf
bound
or
fwait
adc
int3
and
mov
add
xchg
push
mov
sbbb
xorb
mov
jnp
mov
jg
outsl
mov
repz
pusha
clc
pop
sub
shll
push
imul
inc
mov
dec
out
stos
std
sbb
faddl
mov
or
xlat
outsl
std
call
arpl
adc
cli
mov
jmp
fucomp
inc
loopne
jmp
xchg
xchg
loop
and
pop
mov
nop
clc
sbb
add
adc
addl
push
sub
sbb
int3
rol
push
sarb
mov
int3
or
ds
std
pop
mov
xchg
and
dec
dec
dec
lcall
clc
jg
and
and
sbb
pop
mov
mov
sbb
xchg
lock
jle
jbe
xlat
push
loopne
mov
xchg
movsb
jp
push
inc
xchg
sub
testl
xchg
inc
fisttpll
mov
dec
sub
sbb
scas
jne
cmpsl
or
mov
dec
in
adc
movsl
xor
mov
mov
sub
ljmp
xor
out
mov
mov
repnz
add
and
addr16
js
sub
pop
lahf
andb
mov
sub
push
pushf
jns
sub
rorl
xor
push
jo
adc
cmpsl
mov
int3
rorl
loop
sarb
pusha
inc
in
pusha
insb
outsl
dec
inc
xchg
mov
mov
cmp
dec
and
movsb
mov
es
xchg
aaa
xor
adc
sbbb
pop
negb
dec
mov
int
adc
js
mov
mov
cmpsl
mov
jl,pn
nop
lds
iret
or
adc
lahf
xchg
movsl
inc
cwtl
das
mov
outsb
loopne
cmpsb
xchg
sub
and
sub
aad
xorb
add
add
dec
add
jp
pop
dec
js
adc
loop
dec
push
mov
lret
rcl
pop
shrb
jg
outsl
cmc
mov
or
sub
stc
nop
test
sbb
pop
xor
divb
out
add
add
sbb
bound
jno
enter
and
leave
sbb
lcall
inc
aad
and
lret
mov
cltd
cmc
scas
xor
jmp
test
je
pop
insl
fsubp
push
xchg
loope
in
push
inc
movsl
pop
push
cli
pop
dec
xchg
inc
iret
pop
jb
ret
arpl
push
mov
int3
pop
sub
je
adc
dec
and
idivl
xchg
iret
add
dec
sub
mov
cmpsb
push
add
roll
mov
pop
mov
xor
cmp
inc
pop
js
ss
lahf
adc
add
jle
mov
cmp
imul
or
and
pusha
mov
popa
cmp
aam
in
pop
test
sub
fadds
je
enter
imul
cmpsl
push
fldt
sahf
lods
pop
or
pop
repz
inc
xor
mov
sti
jle
mov
fisttpll
mov
out
jae
dec
pusha
jecxz
dec
lock
push
pop
or
mov
call
es
lock
js
cmp
jae
in
add
or
test
inc
push
iret
adc
insb
test
sbb
dec
inc
test
xor
jmp
loopne
cmp
loopew
inc
in
sub
insb
dec
jle
push
pop
push
pop
lods
sub
or
add
fmuls
inc
cld
push
fisubrs
mov
scas
int3
sub
sub
xlat
gs
enter
leave
dec
fstp
mov
cmp
sub
mov
push
outsl
cltd
int
dec
and
and
jg
test
loop
mov
xorl
or
dec
inc
insb
mov
mov
imul
or
mov
mov
push
shlb
subl
mov
jo
adc
enter
xor
sub
pop
sub
pop
inc
shll
lock
dec
xchg
mov
dec
pop
push
mov
sbb
pop
push
sbb
xchg
xchg
and
das
mov
inc
pop
sbb
inc
dec
dec
rcrl
aaa
push
loopne
pop
pushf
cmpsb
add
mov
adc
addr16
js
mov
into
mov
jl
cmp
pop
mov
adc
lret
out
in
sarb
dec
pop
inc
std
fistps
outsl
les
xor
je
in
sbb
xor
mov
addr16
mov
or
inc
je
lret
in
sub
and
xchg
in
xchg
jo
and
mov
adc
out
mov
es
out
push
adc
xchg
mov
add
dec
mov
xchg
adc
ret
test
test
js
add
mov
nop
push
adc
inc
stc
push
jl
notb
ljmp
jbe
xor
inc
push
dec
and
and
dec
inc
add
mov
mov
fwait
shrb
sub
pop
inc
push
decb
int
or
pop
or
jge
out
ficomps
add
mov
push
jecxz
loope
inc
ret
dec
adc
lods
std
nop
orb
nop
sarb
mov
adc
jg
jmp
mov
movsb
flds
cmovle
lcall
push
xor
es
inc
xor
inc
in
cmp
mov
jne
adc
adc
pop
mov
int
mov
dec
shrb
cmpsb
cltd
xchg
sbb
fsubrs
aam
fs
mov
mov
mov
jge
pop
add
popa
mov
pop
xor
ljmp
cli
les
lock
xor
inc
cmp
jae
lcall
inc
cmp
lcall
inc
rclb
mov
sbb
dec
pop
xchg
inc
out
cld
lea
cmp
mov
bound
lahf
fbstp
insb
dec
sbb
lods
inc
jl
xor
pop
fidivrl
pop
pop
sub
jae
or
das
mov
in
push
out
adc
pop
mov
pop
sub
imul
pop
cli
fisubs
mov
orl
inc
jmp
in
sbb
cli
repz
cs
outsl
cld
stos
jl
in
fiaddl
xor
pop
push
scas
cmp
add
mov
add
int3
lods
out
test
sahf
repnz
push
xchg
xor
cld
sbb
incl
or
inc
push
je
test
xchg
cmp
test
pop
adc
insl
cmp
stos
in
enter
mov
jecxz
xlat
xor
iret
adc
and
push
lds
sbbb
sbb
mov
testl
dec
push
fisubl
adc
jl
mov
outsb
es
int3
add
mov
ret
push
cmp
repz
hlt
pop
outsb
dec
ljmp
sbb
pop
je
mov
mov
jl
pop
push
icebp
in
push
jne
push
dec
cmpsl
push
bound
lahf
inc
push
cld
dec
sbb
lods
div
push
adc
pop
cltd
adcb
decl
sub
aad
mov
das
pop
pop
cli
xor
jb
dec
jle
adc
dec
out
sub
into
adc
cmp
push
inc
out
pusha
push
int3
ret
das
mov
or
lods
push
dec
push
mov
sahf
jno
lds
in
jmp
jmp
sbb
cmp
in
scas
lock
xchg
jg
cmp
test
xchg
xor
fnstsw
cmp
mov
xor
jbe
lcall
push
je
movsb
popf
xor
pop
popf
push
inc
and
xchg
divb
mov
pop
mov
fwait
clc
movl
add
jge
dec
fcmovnu
fsubrs
jb
ljmp
mov
test
mov
dec
shrb
hlt
pop
jmp
in
mov
adc
fidivl
mov
ljmp
mov
mov
fistpl
or
sti
ds
xor
int
jmp
and
add
fucomp
aad
mov
cmc
test
sub
dec
mov
or
sub
bound
idivl
jecxz
xchg
mov
push
cli
mov
mov
push
push
mov
dec
aas
inc
adc
mov
cli
outsl
mov
dec
loopne
mov
or
push
outsl
or
mov
mov
aam
lock
pop
mov
iret
leave
jmp
mov
jmp
jg
mov
dec
lea
dec
test
imul
pop
dec
lock
dec
xchg
adc
jl
xchg
inc
mov
dec
incl
sbb
inc
xorl
sbb
mov
cld
out
push
inc
mov
gs
cli
inc
inc
fs
inc
sub
fcmovnu
jne
mov
daa
out
movl
ret
leave
sbb
jg
cmc
cmp
cwtl
xchg
jb
in
xchg
dec
pop
movsb
imul
xchg
loopne
cmpsb
fildll
or
lods
or
jb
sub
mov
xchg
push
adc
je
stos
imull
pop
ljmp
std
mov
into
push
or
cmp
insb
cld
and
cli
pushl
pushf
rolb
pop
cmp
mov
xor
add
rcr
lock
adcb
call
mov
cmpsb
push
sarl
push
lcall
pop
cltd
cmp
jg
pop
add
shrb
jle
push
mov
xchg
sbb
cli
call
test
divl
inc
rolb
adc
es
adc
jo
and
add
fimull
std
out
mov
or
cmc
jg
fnstenv
xchg
test
std
lahf
mov
jmp
adc
leave
mov
xchg
dec
pop
pushl
sub
and
xor
push
adc
movsl
not
fists
cld
cwtl
push
xor
inc
inc
movsb
or
xchg
xchg
and
or
jg
jg
divl
xchg
es
js
in
or
and
mov
mov
jno
dec
leave
rcrl
mov
cmpsl
adc
ret
jno
dec
mov
mov
fnsave
aad
mov
sub
sub
dec
inc
in
outsl
pop
shr
add
pushf
add
sub
push
mov
pop
lods
ret
pop
mov
lods
mov
pop
pop
jno
daa
mov
xor
jns
loope
pop
pop
mov
mov
push
add
xor
jmp
jmp
xorb
divb
aaa
add
fnsave
rolb
mov
xchg
jnp
js
fsts
jo
sub
iret
jecxz
out
sbbb
mov
aaa
stc
cmpsb
jno
movsl
push
es
pop
scas
sahf
xorb
lock
mov
in
mov
in
lea
xorl
fcmovnu
jno
adc
nop
add
xchg
jp
push
jp
push
xor
pop
pusha
and
out
and
lock
popa
std
sti
incl
cmp
rorl
or
cmp
test
push
inc
mov
in
sahf
sub
sub
sbb
lret
outsl
int
test
imul
jp
addl
inc
jl
test
ret
adc
jns
fucomi
sub
cltd
adc
inc
mov
jge
fstpl
add
xchg
cmp
pop
loope
adc
enter
push
add
and
adc
inc
fdivl
jae
popl
push
push
xchg
or
movsb
sti
call
mov
lock
mov
nop
pop
mov
ja
xor
fsubp
mov
popa
jecxz
pop
push
inc
mov
mov
ss
ret
cmp
int3
mov
popw
sbb
pop
xchg
loopne
or
outsl
mov
icebp
fcoms
mov
call
std
cli
notb
mov
movl
xchg
mov
mov
jne
push
add
hlt
in
div
xchg
cli
xor
sub
negb
andb
es
cmc
xchg
sub
mov
pop
les
mov
and
adc
cmp
je
jno
mov
push
cmpsb
sub
push
pop
xorb
mov
pusha
sub
mov
mov
inc
fldl
mov
push
xlat
jae
pop
dec
adc
sbb
inc
push
cmp
cmpsb
fsub
push
xor
addr16
icebp
pop
xor
push
cmpsl
jp
loop
iret
pop
sahf
and
dec
out
pop
mov
mov
mov
cmp
push
test
cli
xor
lea
inc
xchg
call
into
xchg
or
sbb
insb
sub
scas
aas
push
jb
lods
outsb
add
mov
scas
mov
stos
inc
insl
loopne
xor
mov
push
mov
xchg
jo
aam
push
call
sub
outsb
lds
or
movsl
shrl
or
and
sbb
mov
sub
iret
pushl
mov
in
call
jo
lock
or
cmp
or
push
shlb
mov
enter
stc
mov
jne
insl
scas
or
test
clc
pop
jl
mov
cwtl
mov
mov
out
xchg
xlat
mov
ret
push
outsl
subb
lds
push
mov
fdivs
xchg
js
pop
out
push
test
mov
adc
xor
jo
adc
std
add
roll
dec
sbb
cmc
movsb
dec
fldln2
imul
ja
test
int3
jmp
rorb
inc
push
mov
int
sbb
or
lea
popf
stos
sbb
lock
mov
mov
mov
das
andl
in
adc
insl
add
mov
cltd
mov
xchg
lods
pusha
mov
in
push
cmc
jge
pop
push
in
push
xchg
mov
push
fisubl
arpl
fistl
pushf
push
dec
mov
jae
push
lods
movsl
and
loopne
icebp
mov
mov
cmp
add
enter
xchg
fidivl
push
pop
mov
icebp
stos
fldl
add
js
js
addl
mov
addb
dec
mov
jo
jl
cmc
adc
mov
add
mov
clc
mov
or
push
push
je
ja
ja
mov
dec
hlt
ret
test
inc
add
push
int
jge
loope
fnstsw
jbe
roll
and
dec
sub
xlat
jno
xor
add
adc
dec
not
jle
add
enter
sbb
ja
and
add
dec
xorb
add
adc
addl
fildl
sub
xchg
add
sbb
inc
mov
adc
xchg
jmp
mov
adcb
xchg
loope
mov
pop
xchg
mov
or
add
push
adc
ss
aaa
adc
outsl
or
or
xor
lret
pop
adc
div
inc
push
in
jg
mov
fisttpl
cld
sbb
ja
xlat
xchg
dec
lcall
inc
dec
mov
clc
jg
in
pop
jbe
push
push
sub
push
dec
sbb
push
in
loopne
inc
test
fildl
int
adc
sub
andb
iret
addl
incb
pushf
lds
mov
icebp
inc
mov
pop
je
mov
xchg
add
std
xchg
test
roll
mov
push
pusha
jne
mov
inc
inc
mov
cs
or
cmp
or
in
fsub
pop
inc
aam
stos
or
ret
and
lahf
pop
mov
xchg
movsl
fwait
mov
jo
out
aas
fnstenv
push
adcl
cmp
xor
ds
iret
out
fdivl
nop
add
or
add
pop
pop
mov
dec
nop
push
lods
pushf
cmp
fs
inc
push
mov
je
shlb
pop
gs
fcoms
mov
fwait
push
clc
sbb
push
push
xchg
mov
mov
mov
mov
push
pushl
stc
push
lods
sub
pop
sti
fwait
mov
mov
data16
fnsave
mov
mov
pop
adc
jo
xor
or
je
xlat
jbe
mov
aas
mov
sbb
sbb
add
lock
and
out
rcl
shrl
cmc
xor
scas
test
jne
sub
inc
pop
or
arpl
fchs
movsl
sub
add
sbb
mov
push
and
out
ljmp
pop
pop
jne
bound
ret
fdivs
dec
insb
inc
addl
sub
jmp
cwtl
test
xor
lret
xchg
jge
imul
sub
lods
sbb
mov
mov
push
mov
dec
xchg
push
sub
cmp
jo
jnp
add
lock
inc
fldenv
mov
dec
mov
mov
or
cld
fisttps
out
xchg
sub
mov
out
push
add
pop
pop
fisubrl
std
inc
fwait
push
jne
ja
shll
jb
xchg
insl
fistl
mov
sti
dec
xor
sub
fsubl
add
sbb
test
sbb
repnz
mov
cmp
nop
push
mov
push
mov
cmpsb
mov
ja
outsb
sub
jns
nop
push
and
add
notb
outsb
add
fnstenv
jmp
mov
adc
daa
adc
inc
mov
and
pop
push
std
pop
sbb
rcrb
sub
cld
fnstsw
inc
pop
les
dec
adc
push
outsb
repnz
dec
xchg
sti
push
mov
push
inc
push
mov
push
or
aas
movsb
lock
leave
sub
mov
js
psubd
pop
mov
notl
jno
mov
decl
shlb
loope
xchg
stos
addl
cli
test
inc
cmp
push
or
outsb
add
imul
repz
adc
or
mov
fisttps
lret
nop
xchg
adc
cmp
ret
jge
fidivrl
or
dec
fwait
sub
fcmovb
insb
cmp
arpl
sbb
in
sub
adc
mov
add
in
es
lods
pusha
pop
pop
pop
mov
mov
jno
je
push
sbb
pushf
jecxz
into
mov
fcmove
sub
bound
lea
mov
iret
cwtl
lods
or
pop
adc
not
imul
fcompl
cwtl
ljmp
ja
xchg
outsl
mov
jg
dec
int
out
cmp
es
mov
mov
out
add
data16
mov
ss
cmp
pop
shlb
inc
and
cmp
pop
mov
inc
loop
add
int3
outsl
add
and
outsb
mov
dec
mov
or
xchg
push
dec
pop
es
test
sbb
loopne
and
push
das
cld
or
pop
sbb
pop
insl
test
and
repz
lea
mov
xor
mov
nopl
mov
jle
ret
out
lds
sub
outsb
out
xchg
add
cmp
incl
pop
jbe
aad
sub
in
scas
add
test
es
shlb
adc
mov
test
jg
ret
cltd
add
mov
mov
xchg
enter
aad
push
in
and
xchg
cmp
sbb
xchg
cs
loop
int
imul
mov
out
push
cld
xchg
cmc
ret
sarl
icebp
movsb
inc
loopne
push
jg
jmp
sbbl
loop
daa
mov
repnz
mov
inc
jae
insb
idiv
fildll
daa
sub
and
test
push
inc
cwtl
andl
mov
lcall
das
jle
enter
loope
adc
hlt
mov
das
mov
insl
stos
jne
ljmp
xchg
dec
mov
out
mov
xchg
sub
nop
jae
xchg
and
sbb
aad
cli
bound
mov
push
out
sbb
adc
in
adc
mov
bound
jo
call
xchg
leave
pop
das
mov
mov
jbe
dec
pushl
cmp
mov
ss
mov
fistpll
sbb
jno
cmp
mov
mov
jbe
ds
ja
mov
cmp
adc
outsl
hlt
movsl
sbb
lret
outsb
or
sbb
in
cmpsl
mov
or
inc
adc
mov
adc
mov
in
aas
sub
dec
pop
movsl
dec
mov
loopne
xor
xor
jge
cmp
sub
add
shrl
in
add
repnz
and
inc
fists
test
cmc
in
out
xor
mov
mov
pop
xchg
sbb
ss
test
sti
fs
dec
fisttps
lret
adc
jmp
in
fldt
aam
and
or
pop
cli
lahf
adc
sub
pop
add
cmc
movsl
jmp
fisttpll
enter
or
fiadds
and
cmp
addl
je
mov
sti
add
jb
in
iret
lcall
out
shr
xchg
ljmp
stos
repz
xchg
sbb
mov
and
insl
and
jle
add
lret
jne
push
xor
adc
in
adc
rcr
jne
jp
int
js
or
js
stc
jp
fnstenv
and
popf
pop
cmpsb
es
adcb
outsb
jne
add
les
dec
sub
popa
inc
mov
in
adc
jmp
lock
sbb
add
mov
sahf
pop
inc
xchg
fistpl
leave
ljmp
xorb
inc
jne
cld
lret
push
pop
mov
mov
or
fwait
cli
decl
ljmp
xchg
leave
sbb
sub
inc
js
std
lret
lcall
bound
and
ljmp
adc
inc
cmp
pusha
and
in
sub
dec
scas
inc
mov
sbb
loope
cmp
add
std
pop
sbb
stc
jne
ret
pop
loopne
xchg
movsb
xchg
and
or
call
cmpsl
jae
pop
pop
adc
adc
sbb
jo
xchg
popa
out
jmp
gs
and
jg
decl
sub
sub
out
cmpsl
lods
push
test
pop
aam
lods
inc
adc
stc
push
mov
call
aad
jmp
mov
cmc
jns
jmp
sti
decl
mov
mov
popa
mov
xor
dec
shlb
or
lret
shll
hlt
jmp
push
xor
push
std
ficompl
ljmp
mov
jecxz
pop
xchg
int3
xchg
pop
jae
mov
jae
test
pop
adc
xor
or
sarb
jb
decb
cmp
lret
mov
fldcw
loopne
or
psllw
stc
ja
push
outsb
mov
repnz
sub
mov
popf
inc
fwait
xchg
cmp
data16
pushf
cmpsl
jle
mov
iret
aam
adc
pop
mov
add
mov
insl
addl
xchg
xchg
es
adc
or
lcall
mov
scas
nop
mov
sub
roll
pop
out
clc
insb
cmpl
mov
xchg
dec
in
jle
leave
jecxz
inc
aaa
pop
jle
mov
loopne
mov
sbb
push
js
push
xor
mov
call
adc
add
fcoms
int
pop
push
fildll
or
lea
ds
lds
cmp
jmp
cmp
loop
xor
jbe
ljmp
test
push
scas
sbb
and
in
inc
jo
pop
scas
push
xchg
and
std
aaa
pop
xor
inc
repz
in
rcl
push
pop
mov
outsb
adc
arpl
test
or
jp
or
pop
subb
insb
dec
lret
jmp
lcall
aaa
mov
scas
adc
scas
sbb
addr16
insl
mov
xor
xor
daa
inc
clc
mov
pop
out
push
aad
ret
negb
mov
out
jnp
cs
sysexit
in
rclb
iret
test
loope
rol
or
cmp
pop
xor
inc
insl
sub
mov
dec
cmp
fcompl
pop
sbb
mov
inc
fldl
shlb
lds
cmp
gs
cmp
jmp
add
stos
pop
jge
sub
movsl
mov
mov
sub
cmp
movsb
or
inc
and
mov
jp
mov
pop
call
in
int3
xchg
test
repnz
aam
enter
cmc
es
stos
lahf
sub
sbb
xor
or
hlt
jnp
nop
in
and
and
hlt
and
push
push
mov
sub
addb
push
jne
out
xchg
or
aaa
test
mov
and
or
jmp
jb
aaa
movsb
and
daa
xchg
push
xchg
add
cmpb
mov
test
dec
gs
xchg
and
js
mov
mov
sbb
add
push
inc
sbb
adc
pop
push
mov
and
rclb
or
or
sub
mov
fildl
in
mov
in
test
jg
adc
popa
rcll
scas
hlt
adc
mov
jb
gs
sub
sub
and
cmpsl
hlt
jl
or
adc
or
add
inc
sub
sbb
mov
push
fs
scas
shll
dec
clc
incb
sub
xchg
shrb
push
inc
mov
xor
cmpsl
int
adc
sub
clc
or
add
jo
fstps
pop
sub
xor
and
pusha
cmp
and
add
push
rol
inc
sub
test
loope
inc
cld
push
shrl
lret
mov
imul
add
bound
pop
out
ret
stc
stos
sbb
mov
testl
dec
jo
hlt
add
xor
lds
push
int3
js
add
mov
pop
sub
jae
repnz
stos
xor
mov
mov
add
sub
add
dec
xor
lea
inc
or
xchg
push
fsubrl
movsb
add
adc
aaa
and
xchg
and
or
or
jge
add
int3
lea
ja
mov
movsb
or
sub
adc
jmp
pop
sbb
sbb
add
inc
mov
iret
clc
sbb
jne
jp
lods
add
xlat
pop
lret
subb
add
outsl
mov
pop
imulb
adc
cltd
mov
jge
sbb
xlat
ja
les
insl
inc
ja
or
enter
pop
insl
roll
enter
and
mov
shll
jmp
mov
pop
pop
outsl
aam
pop
xchg
aaa
pusha
dec
out
pop
push
ja
jne
lock
decl
and
fdivs
lcall
loop
sbb
xor
push
sahf
std
pop
lret
in
or
adc
call
and
loop
lods
sbb
mov
push
push
jno
pop
xchg
and
push
movl
add
into
test
push
and
inc
rolb
xor
mov
arpl
das
push
aaa
icebp
frstor
cmp
push
sub
mov
addb
lret
jp
mov
in
pusha
enter
mov
ffree
ja
adc
sbb
or
in
push
and
sbb
dec
pop
mov
inc
and
repnz
add
mov
test
enter
ljmp
jns
pop
cmp
out
je
test
xor
pushf
mov
nop
cmp
loopne,pt
add
insl
mov
incl
cmp
sub
adc
xchg
mov
pop
push
dec
les
mov
adc
dec
mov
js
fadd
test
test
incl
sub
pop
sbb
dec
ret
fnstsw
xchg
cmp
sub
and
pushf
dec
push
pop
inc
push
mov
jecxz
pusha
cs
loope
test
xchg
andb
je
pop
sbb
mov
adc
push
push
push
aaa
pusha
daa
aam
outsb
push
jmp
sbb
ja
pop
test
ret
fwait
loopne
loopne
sbb
sbb
add
push
mov
mov
or
sti
mov
aad
ror
shrb
and
xor
sub
movsl
xchg
jl
inc
push
or
out
ficoml
sbbb
imul
rolb
daa
int3
lock
fsubrl
push
push
fwait
test
jns
sub
mov
aad
mov
or
xor
in
outsl
fsubr
mov
pusha
lods
push
pop
decl
outsl
pop
add
std
and
fwait
and
pop
mov
mov
jo
sub
popa
dec
jae
call
pop
stc
dec
div
outsb
mov
mov
outsw
xchg
dec
mov
mov
mov
push
sub
insl
rcl
and
clc
xor
lods
add
mov
mov
cld
pop
test
mov
and
inc
xor
jg
je
and
in
push
out
pop
pop
clc
in
and
and
cmp
cmc
add
decl
pop
rol
pop
or
add
arpl
mov
cwtl
les
aaa
addr16
or
mov
lahf
or
xchg
cmp
aad
mov
sub
cmp
add
je
cs
ljmp
das
pop
js
sub
push
mov
cmp
insb
adc
cmp
ja
cli
mov
mov
addl
pop
adc
or
test
add
adc
add
repnz
scas
out
js
push
mov
cmp
lock
push
lods
sbb
pop
mov
loopne
rcr
aaa
push
lock
inc
inc
lds
mov
xchg
lcall
and
or
loopne
lcall
or
push
mov
push
mov
and
fisttpl
loope
and
mov
sbb
lret
mov
pop
rclb
and
call
in
xchg
sbb
ficompl
adc
pushf
add
aas
adc
shlb
inc
adc
adc
into
std
sbb
movsl
pusha
inc
dec
or
out
lret
jne
fisttpl
push
fdivs
sahf
mov
imul
mov
xchg
xchg
adc
sbb
mov
cs
hlt
sarb
mov
inc
popl
clc
into
adc
pop
mov
cmp
inc
rorl
dec
stos
shlb
enter
xchg
hlt
lahf
and
mov
dec
pop
add
pop
shll
xchg
pop
out
mov
pop
insb
orl
add
aad
popa
iret
clc
call
outsb
gs
cmp
pop
mov
icebp
adcl
or
hlt
jmp
mov
jge
cmp
ss
jne
xchg
add
add
pop
dec
lcall
lods
outsb
mov
in
fcoms
sbb
or
adcl
movsb
addl
rcrb
insl
pop
adc
imulb
cmp
arpl
arpl
pop
or
inc
clc
and
pop
inc
mov
and
dec
sbb
pop
mov
jmp
adc
fidivrl
stc
sbb
es
jecxz
orb
cltd
out
sarb
dec
add
adc
clc
filds
xor
imul
imul
cwtl
push
hlt
add
rorl
fwait
lahf
and
popf
mov
and
pop
int3
mov
cmpsb
sbb
sub
mov
sbb
xor
mov
jmp
add
xchg
and
es
sti
inc
pusha
ja
sub
insb
pop
orb
inc
cmp
hlt
push
icebp
test
lock
fnsave
add
loope
in
push
xchg
pop
cmp
add
arpl
shlb
xor
cmpsb
stos
xchg
loope
adc
arpl
adc
mov
ret
pop
jge
shrl
ret
and
xor
dec
aam
leave
push
outsl
cmp
data16
testb
in
sbb
roll
mov
ja
fildl
xor
out
test
rcrl
je
push
push
sti
es
insl
add
cmc
lods
out
adc
push
jecxz
add
call
outsb
cwtl
ljmp
push
xchg
and
xor
rcr
lods
pop
sbb
and
lock
pusha
adc
popa
cmp
cmp
incl
ficoms
jp
or
add
push
jnp
sbbb
fwait
aad
adc
daa
pextrw
dec
xor
cmp
js
pop
xchg
test
daa
sub
lock
repz
mov
dec
hlt
sbb
add
xor
mov
movsl
mov
jno
jecxz
fucom
inc
adc
xor
jae
and
xlat
sub
pop
add
stos
mov
dec
xchg
test
subb
aam
mov
sbb
lea
jle
mov
xor
leave
adc
xchg
sbb
cmp
sub
inc
aaa
loopne
inc
cmc
in
pop
jl
xlat
les
dec
int
jl
mov
test
cs
sub
cld
lods
add
in
jmp
add
jnp
fdivl
ret
cmp
add
cmp
repnz
inc
push
adc
cwtl
pop
dec
rolb
js
jno
cltd
jl
test
inc
xor
jb
and
mov
outsl
add
fldt
xchg
pop
imul
jbe
outsb
sub
sbb
cmp
mov
mov
xchg
jge
mov
push
je
call
es
jmp
into
mov
fstpl
push
xor
lock
sbb
ljmp
ret
incl
xchg
xchg
inc
out
aaa
mov
pop
inc
fmull
mov
or
das
int3
test
sub
outsl
push
scas
mov
xor
out
push
sbb
lock
cld
repnz
and
rorb
or
mov
faddp
or
or
std
aas
out
leave
pop
mov
mov
mov
jns
frstor
aad
push
push
hlt
inc
test
pop
out
je
jl
jbe
das
add
in
shl
push
pop
cmpsl
aad
xor
cld
xor
inc
inc
or
push
jge
aam
outsb
inc
movb
aaa
mov
mov
mov
stos
add
aam
dec
subb
loop
enter
aaa
mov
pop
push
mov
pop
lahf
mov
xor
outsl
in
or
cmpsl
in
je
in
gs
adc
decl
push
mov
mov
mov
and
or
test
fisttps
dec
out
iret
jns
mulb
outsl
hlt
arpl
jo
push
jno
aam
inc
adc
inc
test
les
jbe
std
mov
push
adc
loop
cmp
rcll
insb
int3
cltd
or
mov
in
mov
jmp
ds
int3
jp
mov
int3
sub
les
sbb
scas
jne
sub
imul
aas
sbb
mov
stos
mov
jg
mov
popa
enter
stos
mov
add
xor
lret
xor
add
pop
add
mov
mov
out
mov
fimuls
mov
push
pop
mov
jno
inc
pop
mov
in
jbe
push
add
push
sbb
inc
lret
or
int3
push
xor
movsb
imul
xchg
fwait
imul
mov
flds
pop
clc
mov
add
orl
xchg
mov
mov
je
scas
mov
js
xor
lock
hlt
nop
mov
inc
and
xor
test
enter
stos
scas
push
sub
add
and
dec
cmp
shrb
movb
les
out
jne
xor
int3
pop
shrb
mov
mov
std
or
outsl
push
mov
push
push
dec
add
dec
inc
sbb
or
add
pop
xchg
cmp
icebp
pop
inc
stos
fdivs
inc
aas
ljmp
or
adc
pop
mov
pop
popa
into
dec
call
sub
mov
mov
dec
aam
lret
or
mov
fadds
repz
inc
or
jle
fiadds
cltd
adc
mov
inc
adc
arpl
rcr
mov
mov
jb
xchg
cld
mov
inc
js
subb
or
cli
icebp
aam
adc
inc
xor
and
mov
adc
outsb
mov
cmpsl
lret
std
dec
subl
adc
pop
fstl
inc
adc
or
or
int
fimuls
xchg
mov
je
xchg
push
aad
mov
and
call
sub
clc
sbb
add
out
shll
hlt
in
in
and
mov
add
sahf
mov
addr16
iret
push
xor
xchg
jle
jno
push
push
rorl
sarl
xorb
push
xor
bound
iret
test
and
int
repnz
sbb
test
dec
and
ljmp
push
inc
sub
push
in
push
lods
cmp
out
outsb
cmp
push
inc
sub
or
push
es
push
dec
dec
pop
push
decb
testl
insl
jp
or
sbb
add
adc
mov
add
jno
and
mov
push
adc
jb
dec
jbe
or
push
pop
fistpl
xchg
sbb
das
inc
sbb
dec
std
pop
icebp
pop
dec
xor
mov
out
pop
mov
sbb
xor
sbb
sub
and
ret
or
aad
in
add
bound
cmp
mov
sub
dec
sub
fistps
shlb
popa
sub
cwtl
mov
inc
xchg
sahf
dec
sub
dec
jecxz
or
xor
cmpsl
xchg
pop
push
xor
sbb
icebp
or
sub
mov
and
jge
stos
add
dec
and
add
or
sbb
jae
inc
call
add
xor
and
fwait
add
sbb
or
out
loop
repz
push
and
iret
sbb
in
repz
pushf
scas
jge
call
adc
xchg
das
mov
sub
aaa
mov
inc
push
cmp
ljmp
mov
cmpsb
push
pop
mov
sti
dec
push
rorl
stos
scas
rcrb
rolb
aam
int3
orb
vmwrite
dec
adc
jmp
push
add
bound
outsb
imul
and
or
jle
xchg
loope
jg
out
xchg
sbb
dec
adc
fstpl
adc
and
pushl
push
addb
sub
aad
addb
xchg
sahf
cli
adc
push
adc
dec
mov
inc
pop
push
adcl
jmp
call
jne
lock
adcb
mov
inc
inc
sub
push
and
or
inc
je
inc
cmc
mov
movb
in
adcb
add
add
ja
rcrb
cmp
or
stos
sbb
jb
mov
es
outsb
daa
arpl
lds
adc
push
leave
xor
aas
pop
fidivs
ret
xor
sbb
cmp
and
or
xor
call
and
aad
aaa
cmpsb
xlat
into
test
inc
rclb
out
aas
push
pop
jmp
xchg
dec
adc
pop
das
cmp
dec
sub
ss
cwtl
xor
mov
and
mov
jge
icebp
xchg
fwait
add
mov
loope
lcall
dec
fisttpl
or
dec
sub
popf
inc
sub
lods
xorb
and
add
sub
xchg
loopne
movsb
sub
out
in
xchg
shll
xor
pop
jg
jp
sbbb
cmp
arpl
int3
cwtl
mov
out
push
xor
dec
fnsave
jns
push
cwtl
xor
xor
mov
adc
sbb
cmp
testl
xor
sar
xlat
and
push
inc
mov
jnp
or
cmp
jecxz
lock
testb
or
xlat
mov
push
xor
or
movl
icebp
es
push
adc
add
pop
ljmp
mov
adc
mov
adc
and
nop
clc
sbb
data16
sub
jle
inc
or
stc
fbld
add
scas
jbe
fcomi
or
pop
adc
xlat
das
add
fwait
int
dec
pop
sub
lods
mov
adc
mov
loopw
xchg
aad
mov
sbbb
mov
mov
push
test
push
mov
loopne
lds
fildl
sub
sub
adc
scas
pusha
shrl
fiaddl
pop
loope
aaa
imul
mov
xchg
jo
or
and
scas
sbbl
loop
adc
mov
push
mov
mov
outsb
mov
adc
jae
mov
pop
mov
shll
les
orb
ret
sub
or
add
xor
dec
outsl
pop
dec
fwait
js
inc
cli
xchg
adc
mov
sbb
nop
je
push
bswap
cmpb
aaa
clc
push
adc
test
pop
sub
jmp
mull
jae
and
xchg
cwtl
adc
test
adc
sbb
shll
shll
sub
and
pop
adc
xorb
es
push
inc
xchg
mov
sbb
fnstcw
push
mov
addb
lcall
xchg
or
mov
shll
lret
xchg
lea
inc
inc
roll
cmpl
jmp
or
les
add
xor
mov
cltd
icebp
add
test
mov
cld
mov
jne
outsl
xchg
loope
push
popf
cmpsb
lahf
push
add
cmp
sbb
fsts
inc
xchg
lahf
add
clc
pusha
xor
ljmp
std
inc
pusha
mov
aam
out
daa
adc
xor
jno
into
sbb
push
out
or
mov
enter
cli
lds
or
pop
or
mov
outsb
enter
sahf
lods
outsl
mov
je
subb
movb
lahf
sub
jno
adc
cwtl
cwtl
adc
add
in
rcll
sbb
push
push
pusha
push
add
popf
add
cwtl
push
lret
jp
pop
push
sbb
inc
arpl
inc
icebp
int3
add
push
dec
inc
pop
mov
adc
inc
sbb
insl
sbb
xchg
and
shlb
dec
jmp
fadd
pusha
js
movsb
xchg
push
ja
or
add
lods
xchg
sbb
andb
mov
pusha
in
cmp
xorb
xor
rcll
mov
repnz
int3
and
faddl
mov
inc
movsl
addr16
add
and
arpl
or
mov
in
shlb
push
pop
push
dec
xchg
lds
enter
cmc
movsl
das
push
and
mov
adcb
and
shll
rolb
repnz
mov
or
out
and
rcrb
inc
imul
jns
mov
xlat
outsb
or
daa
and
insl
lea
scas
and
mov
out
lock
lds
icebp
je
jl
cwtl
test
dec
jl
lock
adc
lods
cmp
dec
jb
out
mov
popf
mov
xchg
fwait
lock
movsb
ficomps
adc
fstl
inc
and
push
add
lret
dec
xor
cmp
xlat
mov
jecxz
cmp
subb
out
loop
call
and
es
or
rolb
shll
movd
mov
jecxz
mov
sbb
mov
xchg
aad
out
add
dec
dec
jo
sti
jb
sbb
stos
int3
jle
aas
add
loopne
loop
xor
std
fadds
add
pop
cmp
or
or
pop
pusha
fnstenv
out
cmp
mov
mov
sbb
fsubrl
adc
push
or
enter
xchg
cmpsb
and
mov
lds
ret
sbb
jmp
sbb
adc
sbb
ret
sbb
sub
test
and
mov
js
jae
inc
les
and
mov
aas
jnp
clc
test
mov
rclb
iret
fidivrl
dec
out
and
adc
test
xlat
repnz
push
loope
stos
jle
adc
push
fldenv
add
xor
mov
push
sub
fldcw
lea
int
mov
xchg
sbb
add
pop
xorl
push
aam
and
cmp
mov
por
sbb
rolb
pop
xor
push
fcomp
adc
loope
and
mov
dec
std
dec
push
inc
mov
push
push
int
inc
rolb
mov
xchg
pop
decl
ljmp
sti
call
push
fs
cli
lahf
add
outsl
mov
inc
push
incl
lock
fisttpl
nop
shrb
sti
or
add
mov
mov
and
jbe
decl
add
xchg
push
stos
add
jg
das
rcrl
ja
out
das
pop
add
add
es
fbld
pop
mov
mov
aam
or
testl
push
mov
mov
mov
stc
bnd
add
dec
stc
aad
pusha
push
ret
mov
inc
push
sahf
dec
jo
movsl
and
cmp
push
cwtl
sub
out
shll
repz
xchg
push
add
scas
add
addr16
in
cmp
jbe
jmp
xchg
mov
subps
adc
fstpt
roll
imul
add
or
aas
jecxz
ds
add
xchg
inc
in
iret
dec
or
push
or
add
and
or
xchg
fmull
push
lcall
xchg
out
dec
test
pusha
cmp
hlt
insl
decl
cmp
mov
push
push
fsubr
adc
pusha
mov
neg
insb
mov
mov
cli
sti
mov
mov
sub
ljmp
cmc
and
mov
jecxz
add
shrl
call
fmull
mov
cmpsb
test
adc
or
mov
xchg
jg
sbb
fisttpll
add
outsl
jg
daa
sbb
outsb
xlat
pop
je
icebp
dec
sbb
mov
xlat
fdivr
incl
sub
xchg
or
ret
sbb
pop
inc
lds
push
inc
xor
inc
dec
add
cld
mov
pop
dec
mov
dec
inc
pop
cltd
mov
mov
leave
arpl
or
cld
movl
adc
lock
push
push
test
mov
sub
add
loop
inc
sbb
adc
and
push
adc
sahf
popf
popa
push
mov
push
arpl
jg
cmp
and
call
add
dec
imul
cmp
dec
dec
popf
add
iret
push
cltd
sarl
into
jmp
pop
loop
loop
pusha
sbbl
daa
das
inc
icebp
ret
inc
imulb
mull
aas
mov
sbb
fimuls
mov
sub
lock
fiaddl
inc
les
jno
push
or
mov
out
sahf
das
adc
rorl
xor
jb
movsl
sub
mov
rolb
mov
out
mov
ljmp
push
cmpsb
fwait
or
cmovg
push
or
outsl
mov
cmp
mov
cmpsl
and
sub
and
fcmovnbe
ret
data16
sbb
lock
jmp
add
mov
add
cmp
shlb
dec
and
inc
inc
je
cltd
cli
push
cli
lods
inc
add
dec
cmp
lret
fs
clc
lods
loop
sarl
or
push
int3
out
or
cs
cmp
add
xchg
and
dec
mov
adc
cmp
inc
add
or
and
decl
hlt
stos
or
js
fdiv
jns
mov
in
daa
mov
adc
push
js
xchg
sub
cmp
xchg
bound
pop
push
adc
sbb
mov
aad
inc
in
mov
xor
inc
mov
cmp
or
mov
sub
add
loop
mov
in
inc
in
mov
movsb
cmpsb
and
push
int3
xchg
add
and
mov
add
jb
mov
add
push
sbb
faddl
or
and
cmp
fpatan
loopne
ja
or
aas
sub
and
xchg
int3
fidivs
mov
adc
sti
add
cmp
push
mov
in
jno
cmpl
jge
adcb
and
call
insb
sub
cmp
xlat
mov
sub
inc
mov
dec
inc
fadds
aam
add
mov
push
lcall
sbb
loopne
push
push
push
in
lods
loopne
mov
adcb
or
lea
xor
mov
mov
push
mov
xchg
mov
lock
popa
inc
mov
lcall
xchg
les
mov
pop
jmp
in
sbb
adc
test
mov
pushf
push
lock
ja
pop
adc
fisubrl
add
dec
scas
adc
cltd
loopne
mov
cmp
or
shrl
fstl
inc
ja
pop
inc
in
xor
lock
mov
enter
and
movsb
fisubl
inc
std
mov
das
mov
test
jae
and
inc
adc
adc
insb
mov
jl
js
add
nop
sub
push
aaa
jno
imull
xchg
adc
add
jne
xchg
add
adc
or
mov
xlat
jb
std
jns
inc
pusha
jge
inc
test
or
or
push
pop
cmp
aas
mov
sahf
data16
push
lret
and
push
mov
adc
dec
shrl
shrl
inc
add
into
rclb
cmp
cli
push
lea
nop
inc
pop
push
push
movsb
out
inc
mov
push
pushf
lret
inc
movsb
inc
mov
fbld
roll
aas
push
xchg
dec
inc
and
inc
inc
lock
cmp
cmp
adc
loop
dec
ja
pop
mov
mov
jae
mov
ss
cmp
inc
jmp
xchg
and
mov
push
jns
push
sbb
sbb
clc
clc
push
addb
jle
push
and
push
out
sub
fnstcw
push
data16
orb
fdivs
fs
push
push
mov
fdivs
in
cmp
adc
movb
pop
mov
in
and
pop
mov
stos
loopne
daa
mov
fcmove
sub
cmp
divb
push
je,pn
lds
mov
cli
add
push
cltd
sub
pop
mov
fdivl
in
pop
adc
sbb
pop
movsl
jb
push
push
sub
loope
or
pop
jns
or
stos
shll
dec
mov
add
jnp
into
or
cmpsb
int3
aad
add
or
push
mov
ret
mov
inc
or
stos
fldenv
push
mov
ss
add
fadds
and
adc
dec
cmp
movb
xchg
mov
or
jge
push
sub
gs
sbb
cmp
and
sub
movsb
mov
iret
int3
or
out
test
jl
dec
ljmp
pushf
and
andb
lcall
test
shl
jbe
dec
jno
cmp
rorb
mov
leavew
hlt
xchg
pop
out
iret
add
popl
sub
sub
jle
fs
or
stos
shl
test
lcall
mov
add
sahf
xor
inc
mov
xor
sbb
jae
pop
adc
cwtl
xor
iret
jecxz
xchg
imul
and
or
dec
xor
push
rcr
incb
xchg
xor
loope
xor
and
fildl
inc
popf
out
sbb
mov
fxch
rcll
mov
daa
mov
push
cmp
in
dec
sub
nop
stc
lret
adc
imul
leave
fsubrp
inc
add
fwait
icebp
cmpsl
add
mov
in
js
mov
xor
out
cltd
int
je
arpl
pop
loop
addr16
xchg
js
xor
and
movsb
pushf
sbb
int3
mov
or
mov
imul
or
xchg
lahf
je
imul
pop
notl
mov
inc
decl
sarl
and
cmpsl
es
arpl
movsb
sbb
pop
in
or
dec
jns
lds
inc
pop
sub
fs
sub
cld
and
sbb
call
add
imul
cmc
or
les
dec
inc
jo
test
sub
sub
test
ja
mov
xchg
nop
xorb
push
add
pop
pop
das
add
mov
outsl
hlt
fisttpl
add
cmp
mov
das
jne
dec
sbb
sub
sti
dec
std
fcomip
mov
hlt
into
push
push
insl
add
insb
mov
std
xchg
mov
repz
shll
stos
and
lret
adc
xor
movb
sbb
dec
inc
pop
fnstcw
add
mov
adc
and
es
decl
les
xlat
aas
divl
cmp
pop
les
mov
cmp
data16
cmc
out
pop
sbb
and
in
aad
pop
pop
fildll
xor
test
xchg
fcomi
jmp
mov
ud1
inc
xchg
mov
jns
testl
adc
mov
and
add
scas
pop
ljmp
pop
mov
scas
pop
movsb
std
rcrb
sbb
xlat
cs
mov
repz
mov
loop
in
jne
mov
rorl
mov
mov
sub
mov
ljmp
ret
mov
and
dec
js
aam
aad
icebp
cmc
add
inc
pop
scas
add
mov
mov
loop
sub
jns
fimuls
outsl
jo
std
lods
add
xor
and
data16
sub
lcall
xchg
jns
inc
orb
push
addr16
leave
hlt
packuswb
and
les
insl
popa
dec
out
mov
push
mov
xchg
push
aam
pop
and
pop
outsb
incl
cli
xchg
mov
mov
rorl
or
invd
xor
add
cld
mov
add
adc
outsl
push
js
inc
mov
or
mov
adc
stos
or
inc
adc
dec
aaa
mov
inc
mov
mov
lret
fstl
cmp
jp
fcoms
outsb
mov
lods
je
leave
jl
fisubrl
fbld
and
push
stc
push
ficompl
add
pushf
mov
push
popa
leave
cmc
and
push
xchg
adc
add
push
cmp
in
iret
pop
push
jbe
in
push
mov
mov
mov
mov
pop
loopne
or
bound
add
or
adc
mov
mov
bound
or
sub
fsubrs
fidivrl
inc
rorl
js
loope
mov
mov
push
stc
mov
fisttps
shll
adc
mov
add
das
mov
add
int
in
mov
les
cld
sbb
sbb
lods
test
adc
jg
mov
shrl
insl
push
fsubrs
pop
cld
ljmp
cld
cmpsl
aaa
call
cltd
idivl
mov
les
fdivl
xor
fldt
je
add
stos
js
dec
jg
jb
daa
lds
jg
or
jae
push
cmp
es
rorb
pop
sub
bswap
push
test
push
add
decl
xor
inc
hlt
addb
test
in
cmp
aam
push
mov
test
std
ret
pop
sarb
lods
mov
scas
or
mov
aam
cs
stos
daa
mov
das
adc
sbb
push
int
std
mov
cmp
clc
test
add
addb
sbb
xor
sbb
push
outsl
mov
pop
inc
in
xchg
jbe
jg
pusha
pop
or
fldt
xchg
mov
daa
dec
test
sbb
jno
repz
add
dec
push
icebp
and
ret
out
fnstsw
pop
jecxz
rcll
xchg
repnz
je
dec
sbb
push
mov
pushf
push
aad
clc
mov
or
adc
mov
faddl
scas
cmp
std
mov
sbb
aad
push
adc
incb
sar
adc
ss
sarl
mov
bnd
jecxz
icebp
out
loop
sti
push
movsl
inc
cmpsb
incl
call
sar
or
ficomps
cmpsb
dec
loope
mov
addb
add
test
aaa
outsb
std
shrl
sbb
cmp
mov
shll
stos
jne
lods
cmp
aaa
and
fistl
dec
inc
ss
insb
aam
jp
sbb
adc
mov
repz
cmc
or
xor
inc
jmp
rol
outsb
add
ret
sti
enter
stos
lret
fnsave
xchg
sti
inc
and
incl
jp
xor
adc
inc
adcb
test
and
je
or
sub
cmp
adc
inc
int
rclb
into
inc
or
inc
out
sbb
dec
fsub
pusha
mov
xor
pusha
jle
in
jecxz
cmp
decb
adc
push
fsubrs
adc
subb
xor
adc
movl
das
inc
mov
lret
repnz
out
inc
xchg
in
or
pusha
mov
out
sti
pusha
and
ds
xor
cmp
adc
push
cmp
daa
cmp
jmp
add
ss
hlt
add
jo
inc
dec
aaa
aam
add
incl
push
icebp
dec
pop
xlat
mov
mov
pop
fnstenv
sub
mov
inc
test
into
mov
mov
aad
sub
xor
inc
add
pop
mov
dec
and
sbb
push
popf
and
lock
push
adc
daa
xlat
cmpsl
andl
je
lock
mov
loopne
add
int
jp
call
jne
ret
pushf
jb
adc
test
mov
mov
or
loop
and
and
and
push
pusha
adc
fbld
ret
jle
push
orl
push
jo
orb
adc
pusha
pop
mov
dec
push
cmp
call
add
adcl
and
xchg
loop
dec
adc
cmc
pop
inc
sbb
or
pop
out
mov
xchg
enter
add
pop
popa
push
xchg
les
les
subb
ret
lret
rolb
and
mov
sub
sahf
dec
pushf
pop
mov
hlt
aas
lock
movb
mov
add
aam
in
add
mov
ljmp
lcall
pop
sbb
adc
mov
inc
jns
add
push
push
push
sub
lods
add
filds
fs
push
cmc
fildll
push
andb
icebp
inc
insb
fwait
cli
jle
loopne
in
sbb
in
adc
mov
pop
xchg
inc
xor
in
pusha
inc
dec
cwtl
stos
inc
mov
inc
and
dec
inc
lods
sub
push
cmc
inc
cli
mov
mov
push
inc
sub
adc
push
mov
ja
xor
fiaddl
adc
rsm
push
or
sub
jae
addr16
xor
mov
pusha
mov
pop
cmc
sub
insl
xorl
jle
jp
fcmovnb
pusha
jbe,pt
mov
cli
xor
jo
loop
pop
int3
fs
faddl
andb
call
fsubrs
aas
dec
push
pop
addb
lcall
or
cmp
adcl
push
and
mov
sbb
dec
mov
insb
mov
sar
call
pushf
test
sub
or
xchg
mov
aaa
adc
rol
adc
mov
push
shll
fistpl
add
xor
cld
inc
jmp
ret
ficomps
mov
cli
mov
and
add
scas
mov
jmp
inc
notl
xor
and
hlt
iret
lds
loopne
fucom
sti
stos
sub
shll
test
dec
push
or
lods
xchg
incb
rolb
cmpsl
les
aaa
mov
insl
incl
mov
inc
fcomps
mov
mov
or
lods
data16
fs
mov
dec
push
out
pop
add
mov
sbb
mov
pusha
cwtl
xchg
leave
sar
popf
aam
pop
mov
popf
cmp
adc
cmp
mov
clc
cmp
pushf
into
roll
or
inc
stos
mov
data16
add
cmp
xchg
sbb
loopne
xchg
sub
shl
vmread
sub
fwait
or
xor
lcall
xchg
jg
sbb
ljmp
add
sar
incl
lret
and
and
lcall
add
test
xor
adc
sar
xor
sub
decl
das
insb
imul
or
sahf
push
imull
aad
or
or
addr16
or
xor
mov
or
add
xchg
cmp
or
aaa
cld
lds
cmp
jecxz
fwait
scas
and
inc
lock
rcll
loop
inc
imul
sbb
das
mov
in
dec
sbb
inc
icebp
andl
call
addb
fldcw
ljmp
pop
push
outsl
cltd
jecxz
pop
add
idivl
loopne
lea
xchg
mov
in
outsl
mov
out
shlb
mov
scas
adc
lret
imulb
mov
jo
lea
or
and
jno
sub
mov
dec
mov
push
sub
or
mov
std
add
inc
inc
loope
fwait
aas
mov
stos
sbb
dec
jns
mov
fildll
mov
sub
sbb
lcall
es
add
jmp
scas
jb
insb
stc
cmpsb
dec
adc
iret
bound
decl
aam
mov
jg
inc
fdivl
or
ret
mov
or
push
xchg
xchg
xor
jbe
cltd
sbb
rol
mov
adc
in
shr
sbbb
add
fmull
les
pop
add
or
add
popf
clc
inc
inc
hlt
mov
xor
and
xorl
cmpsl
add
sbb
repnz
xchg
add
into
sbb
shll
in
push
and
and
aad
sbbb
loop
sub
push
xchg
outsl
sti
sub
rorb
xchg
adc
pushf
call
jo
jmp
and
shrb
bound
push
sahf
lds
push
pop
xor
lahf
test
mov
cmp
cmc
xchg
or
xchg
xchg
mov
push
and
inc
rcr
fmull
adc
test
jb
loop
xor
adc
add
dec
sub
jno
mov
inc
or
aaa
notl
mov
add
dec
and
or
fldl
std
adc
out
int3
or
fimull
icebp
and
insb
adc
add
push
hlt
pusha
out
ret
cmc
pop
xchg
lods
call
aaa
andl
inc
add
xchg
jge
es
nop
orl
test
sbb
push
adc
push
fldt
test
rcr
in
mov
xor
outsl
sub
out
pop
das
sub
xchg
sbb
sbb
jp
rolb
inc
sub
rcl
sbb
loope
mov
aad
iret
pop
cmp
sub
push
cli
cld
sbb
lahf
push
sub
sbb
mov
aaa
xchg
push
cmp
lahf
inc
xor
xor
and
and
das
add
sub
xor
addl
add
sub
sbbl
xlat
call
mov
push
inc
cltd
pusha
push
loope
arpl
mov
jp
ja
gs
icebp
int
jb
jle
and
aam
lods
or
subb
pop
int3
sub
pushf
sub
add
and
xorb
test
and
cmp
int3
inc
adc
add
adc
mov
popa
in
mov
add
push
xlat
adc
mov
decl
and
out
xor
shll
mov
test
lcall
xchg
js
cmc
test
sub
hlt
xchg
cwtl
add
mov
sub
mov
fistpl
mov
outsl
aaa
inc
mov
push
jb
lcall
lods
arpl
mov
mov
out
movsl
outsb
lock
mov
loop
and
lcall
mov
and
lods
pop
add
bound
ljmp
fwait
push
inc
mov
add
add
cld
lea
cmp
sbb
int3
loop
iret
jl
orb
mov
mov
dec
pop
loop
add
inc
pop
lea
sbb
pop
movsl
lds
jnp
add
mov
adc
sbb
loop
pop
pop
add
adc
xor
and
pop
sub
jb
mov
pushf
shr
add
sti
add
in
inc
push
jo
fidivl
add
jo
lahf
push
decb
or
mov
xchg
adc
jnp
lahf
inc
lahf
pop
and
in
out
rclb
int3
push
mov
int
xchg
cmp
fcmovnbe
jle
fmulp
out
testb
dec
cmp
pop
ljmp
push
mov
rorb
jg
mov
jle
xor
sbb
inc
jl
push
sarb
push
scas
aad
dec
ljmp
xchg
mov
cwtl
or
or
icebp
dec
dec
cmp
and
nop
and
lds
pop
dec
pop
into
orb
aas
movl
andb
pop
outsb
pop
cmp
jge
data16
sub
cmp
mov
das
inc
insb
inc
std
mov
dec
or
sbb
cmp
call
rorb
jg
cmpb
cmpsl
pop
mov
sbb
and
mov
add
cmc
sbb
cmp
sub
fwait
js
add
lds
cltd
mov
loopne
mov
push
xor
xchg
sahf
and
nop
sub
add
adc
sbb
test
xchg
inc
daa
and
adcl
inc
std
fwait
cmpsb
loop
fucomip
pop
sbb
xchg
and
icebp
xor
call
addl
les
cwtl
daa
add
xor
xlat
or
int3
cmc
fwait
jl
and
ds
in
pusha
inc
sbb
insl
sbb
lock
inc
mov
cmp
arpl
jp
das
and
orl
dec
jecxz
scas
push
mov
push
into
cmp
add
data16
adc
push
cltd
mov
dec
pop
lcall
dec
ret
and
wrmsr
cmp
lret
mov
pop
or
jns
mov
aad
or
jmp
loopne
mov
jle
negl
mov
stos
movsl
push
xchg
insb
outsl
jge
and
push
push
addl
push
mov
lods
test
gs
pop
adc
mov
lea
jmp
lea
int3
jge
and
jnp
lahf
sbb
adc
cmp
sbb
push
adc
pop
or
mov
lods
stos
rcrl
js
mov
notb
add
jmp
dec
das
mov
ljmp
or
mov
push
xlat
push
sub
es
mov
push
pop
call
jns
lret
inc
insb
add
nop
mov
in
pop
push
mov
xchg
rcrl
pop
scas
dec
jbe
rcrl
jns
mov
xor
ss
push
cld
or
arpl
lods
or
popf
jmp
ret
xor
inc
cld
outsl
test
std
repz
enter
pusha
push
fwait
sbb
in
or
fcmove
cli
xor
or
lods
mov
addr16
add
icebp
rcrl
xchg
and
stos
outsl
mov
push
xchg
jp
inc
fisttpl
sarb
pop
push
pop
clc
mov
outsl
daa
fistl
in
icebp
scas
mov
mov
cmp
cmp
out
bound
jmp
inc
les
pop
inc
or
orb
lcall
mov
add
leave
xchg
sbb
pop
incl
pop
incl
pop
pop
pushf
enter
xchg
dec
jo
sbb
mov
mov
mov
ljmp
push
aaa
and
mov
mov
lock
cmp
push
fwait
lods
addr16
xor
ljmp
rorl
jbe
cld
xchg
aas
adc
stc
inc
aaa
lock
mov
cld
inc
inc
aad
mov
out
pop
stos
push
sub
sbb
add
mov
push
add
sarb
pop
add
adc
mov
les
int3
ds
add
dec
adc
jle
push
xchg
pop
add
cmp
ss
mov
add
pop
popa
mov
push
adc
xor
jo
xor
push
sti
stos
je
test
add
pop
roll
push
xor
xchg
stc
cmp
jg
adc
adcb
js
dec
insl
pop
mov
movsb
loop
and
mov
fdivrl
push
pop
dec
or
and
mov
push
int
mov
in
xchg
mov
mov
mov
in
add
leave
ficoml
jae
test
mov
cs
mov
fdivrl
cli
xchg
test
mov
cltd
add
push
pop
push
in
sbb
inc
xchg
add
xlat
hlt
subb
add
inc
adc
fbld
call
aam
imul
test
bound
shr
jmp
lcall
and
push
adc
js
mov
mov
mov
fdivr
decl
mov
xor
stc
dec
pop
orb
adc
sahf
mov
or
inc
cmp
cmp
imul
hlt
or
mov
fists
push
pushf
shll
fistpll
add
rcrl
arpl
lods
add
loopne
pop
push
gs
adc
fildll
inc
or
jb
jmp
add
fstps
mov
popf
test
adcb
mov
in
int
push
xor
iret
loop
sbbl
push
mov
mov
ret
ljmp
push
or
inc
add
dec
sbb
pushf
outsl
adc
adc
xor
inc
loope
jnp
addb
insb
scas
aad
cld
mov
aad
add
fisubs
addb
fisubrl
pusha
mov
in
push
clc
add
push
fwait
rcll
xchg
sahf
ficompl
jmp
clc
aad
inc
shlb
and
inc
and
dec
add
cmp
notb
sti
and
aas
inc
mov
pop
add
sbb
lds
outsl
xor
mov
mov
shlb
sbb
adc
dec
add
std
add
stc
push
shr
inc
cmpsl
scas
inc
addl
hlt
pop
sbb
dec
inc
xchg
sub
in
ret
testb
cmp
sbb
loope
ljmp
nop
fwait
push
inc
jbe
sub
dec
faddl
sbb
movsb
pusha
push
loop
xor
js
cli
ret
shlb
cmp
std
add
cmp
xorb
and
dec
cmpb
or
repnz
add
test
or
rolb
in
adc
icebp
push
iret
mov
adc
push
sub
dec
stos
push
lock
cmp
inc
dec
push
arpl
push
sbbb
in
clc
adc
loopne
out
in
in
int
out
push
dec
sbb
push
out
or
push
fildl
inc
roll
jl
and
out
push
xchg
aad
lds
add
add
pop
fdivp
js
mov
stc
cli
fsts
and
inc
sub
setl
mov
call
adc
or
push
inc
pop
outsl
outsb
add
adc
cmp
add
inc
xor
sub
or
sub
ret
adc
mov
test
and
push
mov
mov
inc
pop
add
add
inc
movsl
fcoml
sbb
movb
xorl
mov
inc
add
push
and
je
push
pop
mov
cmp
pop
mov
ficomps
pop
and
flds
add
sub
add
shlb
pop
in
ljmp
jg
mov
shll
arpl
insl
mov
adc
fidivl
inc
loop
xchg
ljmp
lret
vsqrtps
mov
push
les
push
mov
push
fs
dec
mov
sbb
push
movsb
insb
inc
int
stos
and
popa
gs
lret
push
push
ret
jmp
inc
fdivr
insb
adc
sub
cmp
or
adc
stos
scas
jbe
inc
xchg
xchg
stos
pop
mov
int
adc
outsb
mov
es
dec
push
mov
rorb
insl
aad
lods
pusha
cmp
push
test
imul
xchg
adc
mov
push
cltd
mov
push
fsubs
lods
test
mov
clc
mov
add
sahf
loop
les
xorb
jge
iret
add
in
shlb
mov
stos
jecxz
mov
loop
nop
push
push
jl
hlt
and
sbbb
mov
mov
shl
fucomi
test
add
xor
lock
bound
pop
mov
add
fwait
and
jno
push
cwtl
or
add
ss
leave
or
ret
push
push
rolb
inc
mov
loope
pushl
sbb
and
int
or
mul
dec
fstpt
popa
and
adc
decl
xor
sub
nop
ja
movsb
mov
xchg
adcl
pop
test
in
punpcklbw
inc
inc
push
in
sub
ss
mov
or
in
dec
stos
out
mov
pushf
and
clc
outsl
jb
inc
add
gs
sub
jp
dec
flds
mov
pusha
mov
dec
mov
cmc
adcb
cltd
add
mov
dec
ret
push
cs
fbld
data16
push
sbb
sub
dec
add
loop
clc
pop
popl
loopne
push
outsb
fdivrl
pop
or
inc
mov
ja
aam
cld
inc
notl
std
notb
hlt
sbbl
xorb
adc
or
mov
outsb
es
mov
jae
pop
pop
adc
jg
push
or
jge
adc
xorb
insb
fsubr
enter
lea
push
subl
ja
adc
dec
adc
cwtl
das
jle
jle
xchg
insb
sub
outsb
repz
outsl
stos
pop
popa
xor
adc
arpl
push
xorb
addr16
jge
push
or
xchg
ret
inc
lods
mov
pusha
adc
mov
jle
sbb
push
xor
dec
sbb
mov
mov
push
stos
mov
fiaddl
es
out
iret
aaa
ret
aas
inc
push
out
mov
stos
or
dec
dec
jne
jg
lock
stos
adc
sub
pop
add
cmp
fisttps
dec
jge
aaa
pop
rcr
xor
inc
xlat
pop
pop
ljmp
lods
rorb
mov
hlt
push
xchg
fists
mov
dec
mov
fwait
popl
sbb
pop
mov
lds
imul
inc
or
sub
push
inc
jge
jp
les
or
xlat
inc
cmp
aaa
add
push
dec
adc
cld
mov
add
mov
sub
pusha
push
in
add
mov
fs
push
flds
add
sahf
xor
data16
shll
shll
xchg
add
fbld
pop
notb
mov
out
dec
push
inc
out
sbb
add
push
addr16
sbb
pop
add
cmp
jb
lret
call
sub
adc
pop
stos
mov
sub
mov
cwtl
mov
jbe
inc
adc
sub
les
xor
adc
leave
jae
jno
mov
xor
int
jbe
sub
xchg
lods
repz
fbld
data16
ret
fldt
xor
orl
repz
lret
mov
adc
and
mov
lcall
add
lods
rcrb
stc
or
xchg
jp
pop
dec
cwtl
adc
jl
in
mov
pusha
idivb
int3
data16
rol
xchg
sub
arpl
push
push
mov
cwtl
clc
dec
xor
and
divl
das
in
imulb
xchg
xor
rolb
and
mov
dec
out
scas
and
sbb
insl
lock
sub
add
loopne
out
push
les
andb
xchg
cmp
jne
jo
addb
push
sbb
cmpsb
jg
push
or
test
je
loop
add
xchg
test
add
xor
icebp
xchg
push
jbe
and
jae
push
outsl
and
mov
jnp
pop
mov
dec
call
mov
jg
xchg
adc
outsl
inc
adc
cltd
je
and
inc
inc
fildll
xor
mov
dec
mov
add
mov
nop
sub
sbb
pop
add
out
in
rorl
rcr
cmpb
xor
daa
loop
pop
add
jge
jnp
mov
mov
add
add
rcrb
dec
pop
jge
push
cmpb
push
push
xor
fidivs
mov
adc
stos
add
bound
push
mov
sub
pop
push
fdivrs
or
test
push
pusha
mov
sub
icebp
inc
xor
adc
pop
sub
out
and
fsubrl
xlat
bound
sub
add
pop
enter
adc
or
nop
into
push
hlt
push
push
roll
pop
lcall
cld
sub
pop
js
mov
pop
mov
pusha
or
xchg
sub
roll
test
rol
push
cltd
xchg
mov
test
scas
clc
push
sub
sub
jb
xchg
mov
adc
adc
insb
test
push
inc
fsubl
mov
and
pushf
lret
xlat
sbb
mov
aaa
daa
mov
jg
addl
dec
push
out
pop
cli
add
les
jg
mov
xor
adc
fsubr
lds
cmp
pop
pop
leave
fidivrs
lcall
or
push
pop
sbb
popf
pop
inc
adcl
mov
orl
call
mov
pop
jl
lds
jbe
pusha
scas
add
pop
add
jg
jno
pop
mov
insl
cmpsb
mov
insb
iret
add
mov
rol
pushf
or
add
jle
fisubrl
ss
and
rclb
sbb
inc
mov
add
adc
mov
cld
inc
pop
pop
mov
pop
pop
lcall
dec
rcrl
mov
rclb
xchg
shlb
scas
sub
mov
cmpsb
test
adc
fldl
add
les
xchg
faddl
mov
sub
mov
sbb
insl
dec
mov
sub
add
gs
nop
and
push
jno
aam
clc
das
pop
mov
inc
inc
ljmp
idiv
outsl
mov
mov
jge
fdivrl
rorl
xor
ja
insb
adc
push
out
sbb
stos
iret
sub
jp
mov
push
pop
mov
in
leave
sub
xchg
pop
test
push
stos
mov
jnp
jmp
shlb
add
mov
in
jbe
jl
bound
mov
and
pop
or
jecxz
inc
xchg
jbe
out
pop
fwait
sar
roll
test
lret
xor
mov
and
push
adc
enter
and
jg
cli
sbb
shr
nop
in
add
add
sbb
mov
sub
repnz
mov
pop
test
outsl
shr
pop
std
adc
sbb
gs
cmp
adc
leave
in
sbb
cmp
add
cmp
lods
pop
push
jecxz
testb
mov
sub
jmp
inc
mov
cmp
stc
sub
and
inc
mov
sbb
popa
clc
pop
aad
loopne
and
idivl
insl
clc
lods
pusha
jo
jl
imul
and
jb
adc
add
mov
mov
popa
mov
insb
mov
nop
inc
test
adc
pop
es
or
mov
inc
je
add
add
xor
adc
ljmp
cmp
notl
xchg
loop
clc
idivb
mov
add
sbb
fwait
fs
popa
and
lcall
mov
into
sub
mov
mov
jnp
aaa
sub
mov
movsl
cmp
fldt
inc
loopne
adc
pusha
and
popa
js
cmp
and
lods
lock
inc
ret
dec
jge
dec
mulb
xchg
decl
mov
add
dec
jl
insl
js
adc
sti
cmp
aam
jmp
add
push
lret
pop
fidivrl
add
xchg
cld
add
mov
movsb
jb
nop
push
or
push
pop
clc
test
add
and
and
outsb
dec
test
jno
pop
jmp
jp
insl
aam
dec
cwtl
les
mov
ljmp
inc
std
push
cmp
sbb
push
sub
dec
repz
pop
clc
sbb
mov
mov
pop
pop
xchg
scas
xchg
mov
inc
shl
loope
sarb
fisubs
mov
outsl
adc
xchg
sub
and
and
fs
pop
mov
cmp
pop
sbb
xor
imul
mov
ret
mov
sub
mov
jg
arpl
pop
dec
out
mov
cmp
nop
pop
adc
shll
mov
sbb
in
fwait
sbb
or
adc
sbb
jbe
mov
xor
loopne
js
cmpsl
pop
inc
cmp
pop
lods
ljmp
lods
and
xchg
ret
shrl
outsb
cmp
lret
lods
xchg
jo
in
or
cmc
mov
pop
fistpll
scas
cmp
insl
add
lea
inc
sub
jg
pop
andl
int3
das
sub
mov
jno
loop
pop
aaa
in
clc
jbe
int3
xchg
rcll
mov
fs
addb
enter
pusha
sbb
dec
pop
mov
lock
daa
and
and
xchg
or
in
iret
mov
dec
iret
xor
mov
shrl
fs
push
lea
aaa
movsl
sub
stos
pop
mov
sbbb
push
fcoms
scas
sbb
or
xor
mov
lock
jg
or
push
cs
rolb
icebp
cmp
mov
jmp
push
insl
sub
cmp
mulb
xchg
int3
fimull
pop
push
stos
cs
das
es
pop
clc
push
pop
mov
insl
fbld
test
xchg
mov
fldl
inc
shr
movsl
pushf
orl
or
adc
dec
mov
std
sbb
div
cwtl
aaa
add
sbb
pop
ffreep
pop
and
dec
mov
test
das
stos
mov
xchg
sbb
scas
add
xchg
adc
mov
xchg
inc
or
xor
outsb
addl
or
test
sbbb
xchg
mov
jbe
mov
clc
pop
pop
ret
inc
pop
mov
std
xor
push
jbe
lock
nop
or
in
outsb
mov
xor
aam
mov
enter
sub
jg
sub
inc
arpl
loope
les
mov
stos
ss
adc
pop
push
test
sbb
popa
mov
cmp
dec
mov
inc
add
hlt
sahf
mov
roll
add
jge
push
icebp
jb
inc
in
pop
test
lret
cltd
repz
ljmp
sbb
or
ljmp
daa
lock
out
dec
sub
mov
xor
scas
inc
mov
outsl
pop
loopne
jl
jge
int
adc
push
repz
lods
and
das
cld
lods
pushl
or
das
cmc
xchg
fcomps
jecxz
out
stc
enter
add
cmpb
outsl
fistps
divb
pop
inc
inc
iret
in
mov
insb
pop
pop
mov
inc
mov
int
sub
loopne
icebp
cld
pushl
xor
fisttpl
jmp
push
cmpb
cmp
sub
cmp
push
aad
loope
ror
xchg
sbb
aad
loope
scas
call
and
mov
xlat
fcomps
aaa
out
fstps
add
iret
lea
xchg
fistpll
cmp
pop
xchg
popa
jo
ret
pop
jle
aad
aas
add
rcrb
sbb
or
and
mov
mov
mov
pop
adc
cmp
incl
popa
jmp
cmp
push
sub
lea
and
cmc
mov
ja
add
inc
in
mov
and
pop
lods
lock
call
nop
inc
and
sbb
test
inc
dec
push
cli
pop
nop
xchg
nop
inc
sbb
adc
pushf
stos
dec
ret
incl
rorb
xor
sub
std
mov
mov
mov
lods
inc
mov
loopne
insl
aad
pop
add
rcll
mov
sub
and
and
cs
fcoms
ss
sbb
lea
push
add
sub
sbb
or
decl
mov
insl
negl
mov
out
clc
sbb
les
cmp
leave
jb
add
ds
inc
cmpsl
sbb
fcompl
sub
popf
sub
mov
fcompl
cmp
das
cmc
shlb
pop
mov
xor
cli
arpl
push
mov
add
int
aas
movsl
and
sti
or
inc
dec
les
xchg
adc
xorl
out
sti
and
mov
sub
and
lock
jne
ret
sbbb
mov
inc
outsb
nop
in
shlb
mov
andb
cmp
mov
sbbl
push
pop
sub
or
pop
adc
xor
pop
pop
xchg
push
inc
es
mov
aas
mov
shll
mov
inc
add
adcb
int3
pop
movsb
stos
or
and
jnp
pusha
push
mov
insl
inc
jne
or
adc
push
loopne
push
inc
add
imul
or
add
xchg
mov
inc
lods
sbb
adc
addr16
inc
adc
inc
sub
rorb
xchg
adc
add
add
fwait
adc
mov
fsubl
test
insl
inc
or
in
dec
add
adc
mov
jnp
push
mov
adc
pop
sbbb
xchg
sbb
mov
pop
filds
icebp
push
cld
les
push
dec
or
das
sub
lea
shl
nopl
push
fs
std
test
test
aam
cmp
push
adc
mov
and
add
scas
clc
ljmp
add
mov
inc
icebp
nop
mov
ss
inc
push
mov
jecxz
sub
push
aad
and
bound
shll
loopne
pop
mov
loop
imul
inc
add
ret
adc
rorl
inc
and
test
es
iret
sbb
mov
and
push
scas
push
pop
inc
xor
xor
sbb
or
push
insl
hlt
iret
adc
ja
loope
jle
cmp
add
jl
sbb
xchg
clc
cmp
push
lahf
and
add
aas
ret
fiadds
xchg
outsl
repnz
or
scas
icebp
sti
aam
les
cmp
adc
fistpll
sbb
cli
or
add
stos
lods
and
addb
cmp
dec
sub
push
pop
push
cwtl
push
sub
dec
das
or
fidivrs
stos
mov
pop
sbb
jmp
and
ret
test
inc
cmp
and
mov
mov
icebp
mov
lock
push
test
call
dec
aas
pop
sbb
push
loope
int
fwait
jbe
push
decb
test
and
pop
cmp
adc
or
jge
mov
add
mov
xor
dec
cmp
push
inc
xor
in
das
inc
push
ja
into
xor
cld
cwtl
cmpsl
jp
in
or
add
sub
cs
mov
xor
push
and
xchg
xor
adc
mov
test
inc
or
jbe
mov
jmp
ljmp
sbb
push
sub
or
mov
mov
test
and
add
ds
mov
cmp
push
rol
loopne
xchg
cmpb
xchg
dec
push
and
pop
mov
jg
in
popf
inc
inc
xor
adc
adc
xorb
add
inc
in
and
add
jo,pn
jle
and
xor
and
rcrb
scas
sbb
inc
adc
or
ljmp
dec
rorl
xchg
inc
mov
flds
clc
mov
fisttpl
js
push
cmc
out
ljmp
pusha
inc
cmp
rclb
adc
xchg
mov
lret
pusha
dec
inc
mov
mov
dec
popa
mov
cmpsl
or
sahf
dec
push
push
add
push
sbb
pop
scas
add
push
loopne
stos
lcall
sbb
inc
add
fwait
adc
outsb
cmp
dec
xchg
aaa
loop
je
sub
push
jge
inc
xor
or
test
adc
xor
int
repnz
mov
pop
daa
cltd
mov
jg
mov
dec
roll
add
adc
add
adc
test
cmp
jmp
ljmp
jp
pop
and
or
mulb
insl
pop
xor
in
mov
insb
push
ret
inc
sbb
neg
mov
push
or
pop
xchg
inc
jno
or
aad
mov
inc
repz
mov
adc
and
or
les
xor
mov
jno
in
xor
lds
add
add
push
inc
mov
sbb
add
xor
push
das
push
scas
pop
ja
jmp
mov
mov
das
inc
jb
or
add
lock
xchg
adc
in
stos
sbb
out
sbb
push
imul
or
les
das
pop
xor
scas
or
lds
insb
mov
cmpsb
jns
mov
cs
std
std
push
sub
fidivrs
lcall
and
outsb
xor
add
add
add
xchg
bound
call
xchg
push
or
clc
movsl
fcompl
test
lret
outsb
outsb
divb
push
roll
xchg
jmp
mov
add
std
arpl
les
sbb
mov
xchg
test
xor
rclb
inc
add
stos
ljmp
add
sub
jb
mov
push
xchg
push
sbb
gs
ret
mov
push
jbe
hlt
stos
inc
insb
aad
movsb
adc
xchg
mov
sbb
in
add
mov
add
push
mov
pop
sbb
cmc
sbb
add
ss
loope
ficomps
fisttpll
mov
aaa
push
or
ljmp
or
orb
leave
push
ja
mov
or
jne
mov
loop
movsb
mov
outsl
pop
mov
adcb
enter
call
cmc
mov
pop
mov
test
lods
push
lds
add
ja
call
cmpsb
mov
add
dec
idiv
dec
std
lahf
movsb
fimull
fwait
cltd
cmp
and
cmp
std
sbb
push
add
jg
sbb
ficoml
int
popaw
and
loop
ds
jg
pushf
push
iret
test
and
leave
enter
dec
add
dec
sbb
mov
xorb
mov
out
in
mov
daa
loope
add
or
mov
fs
push
push
mov
test
pop
into
adc
in
inc
das
les
fidivl
arpl
decl
jle
loop
sub
sbb
cmpsb
fidivs
icebp
pop
add
je
sub
aaa
orb
lea
aas
lea
inc
aad
jmp
hlt
fcoml
lods
and
inc
fisttpll
arpl
rolb
and
xor
push
mov
aam
addb
es
dec
out
loope
movsb
jmp
aaa
pusha
xor
addb
stos
loopne
and
mov
sahf
xchg
sub
dec
or
rcll
ljmp
pop
mov
int3
adc
mov
xor
pop
push
add
add
adc
cmp
jnp
test
ror
mov
add
lcall
gs
test
cmpsb
cld
dec
fists
out
push
shll
icebp
sbb
subb
mov
adc
add
inc
mov
push
pop
pop
pusha
int
inc
ds
sar
push
push
mov
shlb
and
inc
ret
test
adc
movsb
daa
mov
inc
xor
cmovp
fcom
rolb
lods
orl
ljmp
inc
das
or
push
sbb
mov
inc
daa
xor
sbb
and
xor
insb
lret
clc
mov
mov
fwait
xlat
arpl
or
adc
ficoml
inc
inc
mov
cmp
push
sar
mov
pop
add
cmp
pop
cmc
fwait
jl
cmp
jne
call
jno
dec
pop
add
pop
adc
sub
push
in
in
cmp
je
mov
sub
xchg
mov
mov
sbbb
stos
pushf
popf
add
call
adc
movsb
mov
in
push
pusha
dec
pop
das
adc
in
das
mov
jmp
pop
in
nop
and
mov
lock
xchg
mov
and
xor
adc
cld
fdivrs
addb
xchg
adc
loope
sarl
int
adc
aam
sub
insb
push
pop
imul
mov
clc
jno
aas
inc
stos
dec
mov
push
call
dec
movsl
or
mov
arpl
xor
sbb
mov
xchg
dec
sub
sbb
into
sbb
and
fsubl
inc
dec
or
test
pop
cmc
push
cli
mov
sub
sbbb
pop
and
dec
in
lock
cltd
xchg
out
add
scas
lcall
push
mov
lock
add
js
inc
shl
fmuls
inc
rorl
dec
adc
push
inc
lock
or
add
sysexit
in
push
aas
sub
sbbb
pusha
add
pushf
cmp
fisttpl
dec
aaa
inc
push
mov
add
lock
mov
mov
sbb
push
les
push
mov
adc
cmp
or
inc
in
cmp
dec
scas
adc
int3
pop
xchg
repnz
and
mov
mov
sbb
les
add
add
add
aaa
sbb
inc
inc
stos
mov
sarl
dec
lock
jo
int
std
jns
xchg
xor
sub
pop
add
jo
fildl
leave
aaa
lcall
adc
lcall
xchg
sbb
xor
sti
xor
dec
adc
out
les
pop
fwait
add
inc
or
lret
pop
fxch
inc
mov
fcoml
aam
inc
aas
cmp
push
or
sbbl
xchg
push
aad
cmp
rclb
xor
jmp
clc
xor
mov
add
lock
aam
mov
cmpsb
cmp
sbb
push
mov
mov
xchg
clc
jg
add
out
rcl
jl
jo
mov
xor
std
jnp
add
dec
scas
push
ret
clc
fbstp
push
repz
lahf
xor
in
fldl
push
add
cltd
mov
jb
inc
cmc
sub
dec
inc
mov
daa
fcomip
or
pop
push
das
rolb
stos
out
std
sub
or
pop
xchg
iret
testl
je
dec
lds
inc
imul
inc
jg
popl
pop
popa
sbb
pop
test
ljmp
mov
jb
xchg
pop
insl
ds
inc
das
popf
cmpsl
pop
clc
push
jl
inc
mov
lods
jl
es
push
cli
loopne
xor
mov
hlt
push
mov
adc
mov
inc
lahf
push
mov
outsb
sbb
cmpl
pop
gs
xchg
ficoml
xorl
scas
mov
inc
cmpsl
sti
add
clc
icebp
push
jecxz
loopne
pop
mov
clc
inc
sub
inc
lret
inc
add
aaa
stos
lods
daa
iret
jecxz
std
jns
inc
aaa
mov
mov
icebp
in
dec
adc
dec
xchg
pop
xchg
push
std
aaa
ja
jne
mov
dec
inc
xor
mov
mov
out
pushl
jb
inc
test
jecxz
push
add
in
insb
ret
pop
dec
and
add
and
ja
aam
loop
sub
mov
movsl
sub
std
mov
push
jmp
ret
fcmovnbe
inc
je,pt
mov
sbb
dec
push
mov
js
lahf
add
neg
lds
mov
mov
pop
cmp
icebp
pop
sqrtps
push
push
or
or
jns
pop
pusha
push
cld
xchg
dec
mov
jno
adc
inc
pusha
and
dec
and
rcl
sbb
dec
daa
adc
mov
xor
leave
andb
out
cmp
jge
icebp
lods
sbb
fnstenv
dec
push
mov
pop
push
shrl
mov
lock
dec
inc
mov
int
and
sub
lods
jne
mov
or
push
xor
aas
inc
mov
ret
sbb
push
mov
jb
cld
ja
push
cmp
gs
repnz
pop
adc
test
daa
or
xor
movsb
sub
pusha
xchg
xlat
xchg
iret
push
adc
jmp
push
xchg
cmp
add
fxch
pushw
mov
push
lds
xchg
xor
dec
xchg
inc
dec
shll
stos
jecxz
js
adc
mov
sti
mov
cmp
int3
fiadds
adc
roll
pop
popf
int
cld
xrelease
scas
popa
mov
add
and
sbb
push
mov
dec
test
add
sub
aas
imul
xchg
pop
mov
leave
mov
pop
dec
push
xchg
orl
cmp
mov
cld
es
xor
sahf
popa
loop
dec
les
xor
add
inc
inc
stc
inc
jmp
add
js
jb
inc
popa
pusha
adc
jns
xchg
inc
jecxz
ret
lds
push
iret
mov
les
shlb
icebp
loope
mov
sti
inc
pop
mov
outsl
inc
adc
bound
or
loope
es
cs
mov
xor
and
cmpsb
lods
fadds
bound
sub
subl
insb
cltd
sbb
cmp
or
aaa
stc
and
jnp
pop
or
mov
xor
and
inc
mov
icebp
or
mov
or
inc
dec
inc
add
mov
adc
out
and
jnp
dec
push
inc
lret
dec
adcl
pop
popl
sahf
leave
and
adc
or
ficomps
test
push
jge
adc
push
add
pop
mov
rcll
push
nop
add
rorl
mov
dec
loopne
shr
pop
lods
bound
cli
pop
sbb
or
mov
xchg
pop
cld
mov
cmpl
dec
pushf
inc
adc
ret
int
mov
xorl
adc
dec
push
dec
rorb
aad
jno,pn
mov
shlb
sbb
sub
sbb
adc
aaa
int3
fisttps
cmp
lret
je
ja
in
xor
lods
mov
int
jg
test
add
adc
inc
xor
adc
push
cmp
inc
mov
push
popf
shl
mov
mov
add
int
sbbl
clc
lret
pop
inc
int
xchg
in
out
xor
rorl
hlt
jge
pusha
test
ret
movsl
push
dec
jbe
sbb
test
jg
repz
inc
push
sub
inc
jmp
in
cmpsb
inc
mov
fcoms
and
fwait
adc
or
les
sbb
pop
dec
out
and
and
cld
mov
push
xor
inc
dec
mov
adc
ja
cld
lods
sub
jbe
sbb
sbb
pop
push
pop
hlt
ljmp
loopne
lret
and
aaa
je
and
andl
inc
gs
push
push
cli
push
repz
pushf
xor
or
or
add
movb
mov
adc
andb
jne
aam
fdiv
add
fildll
sahf
mov
xor
in
leave
fsubp
and
or
xor
lds
push
test
daa
inc
mov
stos
adc
lock
bound
loop
decl
insb
pushf
scas
mov
daa
inc
lea
std
sbb
xor
daa
leave
fisubrs
das
mov
push
inc
xchg
js
mov
dec
popa
adcb
or
pop
mov
test
arpl
mov
orb
pop
fs
jge
inc
aam
inc
das
dec
cmp
adc
mov
sub
inc
pop
cli
adc
insb
sub
dec
and
xchg
push
adc
add
push
or
sbb
sbb
xor
mov
xchg
cmpxchg
cmp
xchg
mov
jg
mov
je
iret
lea
cmpsl
push
aaa
cli
inc
fcmovb
movsb
jmp
dec
mov
or
push
subl
test
adc
push
cmc
inc
mov
ss
xchg
add
dec
ljmp
mov
and
cmpsl
enter
outsl
xchg
push
nop
in
cmp
push
adc
idivl
lds
and
jmp
xor
imul
mov
adc
lock
pop
pop
jb
sbb
call
mov
jmp
xor
jnp
dec
and
dec
call
mov
repnz
mov
push
je
cmp
movsb
stos
fs
sbb
jo
inc
call
pop
aam
fs
decl
or
push
or
gs
call
mov
ljmp
pop
xchg
fisubrs
add
sbb
sbb
decl
lock
cmpb
mov
cmpb
pop
pop
shrb
mov
icebp
sbb
ret
lea
xor
fsubrs
arpl
call
sub
out
fists
fdivs
and
faddl
xchg
pop
cmp
push
adc
lcall
and
out
add
sub
inc
mov
jge
cmp
aam
arpl
xor
xchg
mov
cmpsl
les
ljmp
mov
sub
xor
pop
jg
pop
shll
fildll
push
dec
push
lret
jmp
lcall
pusha
or
and
addb
aas
jmp
mov
pushl
ss
shr
inc
add
pop
mov
pop
mov
addl
add
inc
xor
in
sub
sub
js
jg
lret
fwait
add
cs
cmc
sub
movsb
lret
cli
cmp
bts
mov
or
addb
lods
xchg
pop
or
push
mov
push
gs
push
jge
fadds
jg
sub
push
or
adc
push
out
add
cmp
inc
stc
add
rcll
adc
mov
fmuls
mov
pop
or
movsb
out
and
fbld
add
and
or
jne
push
mov
arpl
inc
inc
or
push
adc
add
or
jg
xchg
add
fcoml
setne
jbe
mov
cmp
nop
inc
jbe
inc
jne
add
sub
mov
jg
jl
in
dec
jge
mov
push
mov
mov
clc
jno
adc
mov
iret
xchg
addb
xchg
lret
addl
rolb
ds
sarb
add
sbb
in
jo
mov
pop
jb
ret
testl
push
cwtl
push
mov
dec
jne
insl
pop
lods
cmpsl
fs
aas
and
inc
pushf
pop
push
xchg
std
popa
out
push
pop
mov
mov
sub
jg
pop
enter
jecxz
add
add
outsb
test
add
and
inc
cs
inc
mov
pusha
out
pop
into
mov
ret
mov
das
jl
xchg
pop
iret
fcomps
jmp
shl
inc
dec
clc
movsb
and
and
aam
dec
pop
sahf
ss
inc
pop
mov
mov
enter
test
cs
cmp
inc
out
jmp
or
icebp
fildll
and
pop
rorb
add
jne
sbb
je
aaa
inc
and
mov
cmpsl
outsb
cltd
sbb
mov
add
sbb
insb
push
xor
mov
cmp
sub
inc
fwait
sub
adcb
aas
mov
in
mov
sbb
mov
pop
fsts
push
jmp
insl
push
ret
mov
test
or
mov
das
add
sti
imull
ret
mov
sahf
add
xor
or
lods
jno
out
pop
push
sbb
and
push
cmpsl
mov
pop
sub
outsb
mov
div
mov
jg
jl
adc
push
fstps
sbb
dec
push
push
pop
ret
in
dec
pop
jnp
and
mov
ljmp
std
fwait
mov
scas
xchg
js
fs
cmp
mov
sbb
adc
lret
std
inc
push
push
testl
xchg
sbb
cmp
jo
adc
sbb
ja
jno
push
adc
xor
in
add
mov
mov
xlat
inc
pusha
push
icebp
test
sbb
and
lea
outsb
je
mov
sbb
outsb
rcll
xlat
xchg
aas
jmp
pop
lock
and
lock
mov
ret
inc
jp,pt
shll
sub
or
fsts
inc
test
lahf
add
dec
sti
into
ss
rcll
sub
or
mov
stos
add
andb
aaa
movsb
mov
arpl
loop
mov
inc
je
pop
mov
fwait
add
cmp
xchg
test
jne
es
pop
mov
pop
xor
cmp
mov
sub
leave
icebp
std
filds
shll
add
adc
and
iret
mov
pop
mov
jb
daa
pop
pushl
pop
inc
mov
and
ret
and
aaa
inc
xchg
jnp
mov
pop
aad
add
or
sbb
int3
cmpsb
pop
dec
mov
mov
repnz
adc
cmpb
cmp
repz
jl
orb
xor
mov
fucomi
mov
push
loope
ret
test
mov
xor
inc
push
rol
sbb
sbb
shrl
adc
inc
pop
repz
add
add
xchg
jno
outsl
dec
xor
dec
adc
lds
hlt
sbbb
fwait
test
cld
bound
std
and
dec
orl
add
and
shll
fs
imul
xorb
push
xchg
adc
mov
or
cwtl
xor
sahf
inc
mov
cmc
push
daa
cmp
shlb
insl
rorb
int3
scas
inc
xchg
stos
fsubrs
ficomps
sub
dec
dec
mov
xor
jbe
xor
xchg
subb
test
es
or
fs
sbb
push
add
inc
mov
addr16
icebp
insb
jne
cld
cld
sub
add
pop
mov
adc
sahf
xchg
mov
sbb
fs
jle
loope
and
mov
cmp
xchg
push
popa
xor
popa
cmp
jb
mov
inc
xchg
inc
and
add
fimuls
cmp
jae
out
jp
rorb
mov
jae
outsb
testl
sub
inc
scas
inc
lds
scas
xlat
lods
lods
pop
pushf
sbb
and
fsubl
jb
insl
mov
gs
inc
sub
push
jmp
pop
lret
mov
fdivrs
xor
clc
xchg
xor
enter
lea
sub
ret
lods
rcpps
jl
and
les
dec
jge
inc
mov
add
or
xor
cld
adc
jne
sbb
add
mov
add
call
cmpsl
int
fsubr
cs
mov
xchg
mov
xor
stos
or
mov
std
cmp
inc
sub
cmp
add
push
inc
addr16
int3
outsb
call
cltd
or
push
jmp
and
push
or
test
xor
nop
mov
repnz
sub
xchg
out
dec
mov
jnp
xor
movsb
in
cmp
mov
sub
or
sbb
or
cmpl
push
cwtl
jmp
push
pop
mov
inc
adc
push
mov
pop
ficomps
fmuls
outsl
push
mov
pop
pop
mov
jl
lea
add
loope
add
out
dec
mov
ret
push
in
inc
push
add
jmp
adc
sbbb
inc
dec
jb
sbb
lret
add
fadds
cld
push
mov
and
mov
xlat
lret
sti
pop
fnstsw
lods
dec
rcl
inc
outsl
in
fdivs
xchg
mov
jg
leave
gs
pop
mov
or
in
fsubrs
cmp
lds
hlt
stos
ljmp
sti
test
shll
xchg
push
mov
shl
push
jmp
jo
cltd
rorl
dec
or
inc
add
pop
mov
cltd
fcmove
mov
pop
std
mov
cmp
dec
imul
pop
add
push
mov
jmp
and
test
subl
mov
mov
sub
out
push
movb
pop
dec
sbb
into
cltd
push
jae
inc
fimuls
imul
incb
cwtl
lock
movl
jmp
jl
pop
mov
xor
pop
cld
mov
xchg
adc
sbb
cwtl
sub
mov
xor
pop
test
push
repz
iret
pusha
push
pop
test
jge
lcall
sub
mov
xor
dec
rol
ljmp
decl
xchg
inc
testb
lds
cmp
mov
sti
jg
cmpsb
mov
out
rclb
call
fs
sbb
cld
sti
adc
push
lcall
mov
dec
or
adc
sti
inc
push
aam
lahf
cli
dec
add
repnz
mov
stc
adc
dec
mov
pop
mov
adc
mov
inc
add
or
cmp
nop
xchg
pop
movl
or
mov
movsl
and
cli
and
or
pop
loop
jo
dec
cmp
movsb
jg
and
jmp
aam
add
xchg
push
or
or
mov
out
test
cs
cmpsl
int3
push
push
loopne
decl
outsl
hlt
ret
enter
inc
push
add
lds
in
pop
inc
call
mov
int
cmpsl
out
ss
gs
icebp
mov
xchg
pop
dec
fs
sbb
add
incl
popa
out
and
inc
popa
cmp
or
sbb
sub
mov
pop
add
cld
rcrb
xchg
push
dec
xor
sbb
sbb
cmp
sub
roll
mov
inc
enter
sub
inc
ljmp
xchg
sbb
xchg
push
lret
jmp
test
mov
adc
sub
dec
movsb
inc
inc
add
xor
aad
out
call
sarl
dec
das
cmp
leave
test
cmc
ja
int3
jl
sahf
cltd
add
push
pop
jo
lcall
ud1
ret
inc
push
aas
add
ljmp
xchg
stos
xlat
stos
std
decl
dec
mov
sub
sbb
mov
dec
js
adc
adc
inc
dec
test
adc
mov
or
xchg
in
mov
idivb
mov
ret
loopne
mov
in
popl
mov
lock
fwait
les
rorl
push
lcall
rorb
lods
mov
mov
sbb
push
push
bound
push
and
mov
push
mov
mov
lds
inc
dec
or
ja
jp
mov
mov
jl
orb
jg,pn
decl
dec
adc
jp
dec
rorb
pusha
jle
adc
cmp
rolb
adc
inc
adc
lods
xor
mov
in
daa
mov
mov
ljmp
lcall
push
sub
push
sub
or
dec
push
andb
mov
push
scas
jns
xchg
cmp
or
fisttps
and
ret
jbe
adc
roll
jp
cmp
roll
fwait
mov
xchg
loop
cmp
xchg
push
push
push
dec
inc
ss
outsb
rcl
aam
aad
and
sub
cmp
mov
dec
push
inc
mov
cmp
dec
roll
insb
jle
inc
inc
push
lcall
or
test
push
addr16
push
fildl
test
cli
sbb
push
ds
out
movsl
lahf
test
or
mov
mov
outsl
cmc
scas
outsb
inc
mov
sbb
cmpsb
jmp
pop
cwtl
fiaddl
sub
mov
xchg
out
mov
in
fistl
add
nop
lds
adc
sbbl
insl
cs
sbb
pop
mov
fwait
js
mov
aad
lcall
lahf
add
outsl
dec
push
ret
xchg
subb
das
jns
push
jae
imul
cmp
and
pusha
or
jbe
fisubrs
je
outsl
mov
pop
es
testb
cld
mov
aas
push
mov
fs
jne
mov
adc
inc
push
or
int
and
sub
cmc
notb
adc
add
pop
lcall
movsb
call
inc
inc
repz
or
push
and
add
xchg
dec
jmp
ljmp
cltd
ds
das
sti
fistpll
cmp
call
jae
mov
mov
xor
rorl
mov
mov
add
and
push
mov
mov
aaa
aam
arpl
in
adc
mov
leave
push
into
add
add
xor
cmp
sbb
xor
cld
decl
sahf
add
jge
jno
add
cmp
jg
ljmp
mov
jno
or
pusha
shll
sbb
cld
sbb
insb
xchg
and
mov
mov
mov
shlb
jecxz
adc
mov
sub
jne
and
pslld
jg
mov
add
push
adc
add
cld
add
call
cld
inc
les
insb
js
ret
adc
push
add
insl
mov
je
mov
and
leave
sbb
lcall
or
scas
addb
aam
inc
cmpsl
xchg
xchg
pop
add
cmp
and
mov
dec
push
fdiv
stc
add
and
jne
fbld
lea
push
xchg
into
mov
es
test
decl
xor
int
adc
xchg
inc
stos
xor
mov
shll
repnz
sbb
ja
sub
out
stos
jle
icebp
rolb
cli
sbb
jmp
outsb
cmp
test
or
ss
pop
mov
or
cld
jg
mov
push
xchg
sbb
cmp
loop
xchg
pop
and
xchg
dec
outsl
cltd
or
inc
mov
test
mov
jmp
dec
dec
adc
mov
mov
adc
mov
gs
inc
sub
psubq
adc
add
add
and
and
sub
shll
push
add
rol
push
push
pop
popa
orb
xor
push
mov
cld
and
fistps
cld
loopne
adc
sub
push
aaa
dec
imul
dec
aaa
mov
leave
jae
sub
jbe
scas
dec
scas
pop
pop
popf
lahf
xor
sbb
bound
sar
jg
push
pop
js
mov
ret
adc
xor
sbb
fistps
and
xlat
adc
dec
sub
imul
in
adc
xchg
sbb
daa
add
jbe
pop
or
popa
adc
jl
jbe
inc
push
orb
mov
out
cwtl
adc
and
incl
dec
adc
repz
or
or
xchg
sub
mov
shlb
mov
inc
mov
sub
mov
mov
nop
adc
test
mov
add
fnstcw
mov
pop
sub
pusha
jle
neg
mov
xor
jmp
inc
stos
mov
out
inc
pushf
stos
inc
loope
int
dec
in
add
and
and
mov
xor
insl
cmp
inc
inc
inc
inc
mov
popf
push
pfrcpit2
sahf
sbb
add
inc
test
pusha
dec
push
mov
mov
clc
enter
xchg
jl
push
mov
scas
inc
mov
into
mov
dec
push
je
dec
lcall
inc
sub
mov
push
rcrb
outsl
add
push
mov
push
arpl
dec
jp
dec
imul
div
jg
xchg
mov
adc
and
mov
and
jge
sti
mov
adc
lock
xchg
push
push
dec
push
mov
in
inc
fistpll
icebp
adc
into
mov
sbb
dec
pop
jg
pushl
jo
rorb
xor
pop
fbstp
icebp
scas
xchg
stos
aam
aaa
inc
loope
mov
or
ja
jecxz
call
nop
or
stc
dec
es
or
mov
push
stc
lret
in
leave
adc
mov
jnp
sbb
push
xchg
or
icebp
bound
shlb
aas
mov
mulb
stc
ret
push
adc
cs
mov
add
pop
inc
mov
cmpb
shrb
cmp
movsl
cltd
sbb
dec
add
xchg
loopne
test
sub
aas
dec
das
sbb
xor
lock
or
xchg
jne
pushf
imul
ljmp
shll
sbb
jo
loopne
push
ljmp
loop
rorl
push
or
fisttpl
add
pop
jb
fs
out
xchg
or
sub
dec
in
dec
mov
sti
xor
leave
ret
add
lcall
add
mov
pop
or
pop
pop
pop
ret
ret
or
or
fcomip
ret
and
add
adc
sub
nop
or
insb
jmp
nop
inc
add
call
and
or
mov
adc
inc
iret
mov
in
adc
sbb
and
jg
inc
and
xor
add
negb
out
sbb
add
dec
adc
cmp
or
nop
add
add
fisubrl
aaa
add
sahf
insl
jne
xchg
dec
outsb
or
mov
outsl
fldt
add
or
inc
mov
pop
inc
cmp
in
fwait
sbb
into
adc
inc
mov
sub
and
jae
sub
subb
mov
add
mov
mov
in
add
or
or
fisttpll
and
mov
sbb
mov
dec
adc
pop
cmp
xchg
push
and
pop
or
dec
and
in
jb
sti
pop
imul
stc
or
rcl
out
sarl
pusha
and
leave
inc
sbb
inc
and
add
repnz
inc
cltd
das
add
add
add
mov
adc
fiaddl
pop
loop
or
add
pop
add
divl
mov
or
add
adc
add
pop
cld
fstpt
pcmpeqb
add
add
out
rcr
add
mov
ja
add
add
add
pop
or
add
ja
ljmp
lock
add
mov
insb
sbb
add
mov
repnz
int3
mov
adc
dec
iret
outsl
movsl
add
add
add
icebp
fistps
fildl
dec
add
sbb
mov
jmp
jmp
ss
jno
jg
or
add
add
lods
xor
mov
jle
in
fistl
rorb
cmp
jnp
add
cmp
add
inc
jmp
jnp
add
int3
add
subb
or
out
fcmovnu
add
sbb
add
out
mov
dec
lods
cmp
les
inc
mov
imul
movsl
fadds
xor
add
push
jmp
push
inc
xchg
fbstp
imul
add
or
jecxz
adc
jno
mov
or
fstp
outsb
fucomp
test
jae
add
mov
push
inc
js
arpl
int
cmp
mov
dec
add
ja
push
push
iret
loope
and
mov
loope
xor
bnd
xor
jns
add
add
sbb
adc
outsl
incl
pop
test
cmpsb
sbb
xlat
ds
add
test
jmp
aas
sbb
push
ret
mov
cli
adc
inc
scas
ds
pop
call
dec
add
xchg
dec
mov
push
mov
add
clc
add
gs
js
ljmp
add
add
pop
add
out
shlb
push
sbb
sbb
into
out
vxorps
jae
lahf
jle
lcall
or
jne
inc
cwtl
addb
roll
mov
int3
mov
js
call
lods
sarl
add
sub
in
test
fildll
mov
pop
push
add
xchg
xchg
push
leave
add
pushl
sahf
lds
or
sbb
mov
cltd
jl
test
adc
mov
mov
ds
mov
pop
or
lret
mov
ja
mov
ret
imul
test
adc
add
pushl
add
call
jg
faddl
fisubl
sbb
stos
hlt
cmp
xor
pushl
mov
mov
mov
mov
jmp
mov
lcall
pushf
add
je
roll
inc
jno
or
xor
push
add
test
add
push
pusha
cltd
mov
or
dec
cmp
lcall
idiv
test
idivl
dec
push
mov
xor
pop
iret
xchg
std
pusha
pop
call
movsb
fcoml
sahf
xor
enter
mov
aaa
and
mov
fld
les
movsl
jmp
repz
xor
cmpl
loope
cli
lcall
dec
loope
mov
popa
cmc
xchg
ljmp
jg
push
adc
sbb
sub
js
clc
adc
aas
mov
hlt
outsl
incl
dec
and
inc
pop
sub
aaa
out
jle
sub
add
add
xchg
cwtl
mov
fs
hlt
stc
fs
hlt
nop
enter
jecxz
lret
mov
mov
sbb
ret
ret
sub
ss
push
push
sub
mov
and
int3
pop
or
pop
in
jg
inc
xchg
das
popf
push
jae
sarb
aad
add
jae
dec
cmp
cmp
ljmp
loopne
jbe
sub
adc
cmpsb
ja
loope
dec
pushf
lea
mov
stos
mov
jg
loopne
mov
jg
add
push
xchg
shrl
test
in
add
loope
ljmp
arpl
mov
movsb
pop
push
lea
mov
ret
cld
or
test
cmp
iret
jne
rorl
fnstcw
mov
aam
pop
bound
les
mov
test
mov
fcomp
movsl
mov
xlat
adc
fwait
out
ret
push
lock
shll
sbb
fucom
or
and
test
sub
mov
push
jecxz
adc
mov
lret
pop
mov
pop
push
lahf
in
lcall
fiaddl
in
push
or
add
xor
int3
pusha
int
mov
jmp
or
lcall
jmp
lret
jg
test
js
out
sub
jmp
movsb
stos
lret
clc
scas
in
cmpsb
test
sti
inc
lret
pop
jmp
pop
inc
aas
add
imul
dec
fsubp
outsb
jge
stos
xchg
pop
mov
stos
fs
aad
push
ljmp
pop
inc
xor
and
pop
sbb
jnp
movsl
repnz
scas
sbb
inc
mov
sbb
add
adc
push
inc
jae
clc
xchg
lcall
bound
ret
fistps
sbb
push
fsubrl
aas
mov
clc
aas
std
in
les
push
test
lret
enter
mov
adc
pop
clc
pop
mov
rcrb
cld
adc
cmpsb
jnp
jmp
data16
inc
xor
fisubs
pop
loope
rclb
and
pop
jmp
push
mov
movsb
roll
inc
out
sub
mov
push
inc
mov
jae
outsb
stc
incl
out
and
and
stc
adc
shlb
push
jbe
cli
push
mov
fadd
inc
or
call
sub
lds
push
ret
dec
cwtl
add
xchg
xor
or
test
test
orl
mov
fmull
xchg
or
mov
sub
pop
jb
stos
push
jmp
adc
push
jecxz
popa
andl
push
sbb
mov
fimull
aas
xor
add
cmpsb
pusha
cmp
sarb
pop
pop
jle
in
mov
es
out
insl
cmp
dec
cmc
mov
test
mov
ret
cmpsl
ret
mov
pop
jle
repnz
mov
out
std
enter
xchg
adc
lahf
jl
adc
std
test
aaa
mov
testb
out
adc
mov
mov
popf
xacquire
sub
sbb
jo
rcr
js
push
pop
mov
jb
addl
cmp
nop
xor
add
mov
stc
icebp
and
lret
and
enter
pop
cs
mov
das
jo
lahf
dec
push
cmpsl
add
icebp
insb
aaa
mov
dec
push
adc
loope
push
aam
lods
out
stc
mov
imul
andb
out
inc
ret
push
cli
rorl
test
or
leave
insb
clc
or
inc
and
mov
xchg
mov
loop
xor
pop
call
mov
add
lods
lods
hlt
leave
pushw
divb
sub
fdivr
int
xchg
add
ds
xchg
ror
lret
outsl
mov
scas
adc
imul
pop
mov
adc
cmp
lret
mov
cmpb
clc
insl
jmp
mov
out
je
xor
xorb
mov
iret
gs
xchg
fs
icebp
mov
clc
fistl
jmp
xor
les
lret
mov
pop
sbb
lret
cmp
mov
pop
ljmp
mov
jns
push
ret
leave
sub
lods
inc
ret
mov
cld
stos
or
or
mov
js
jge
pop
lock
inc
mov
or
sahf
fdivrp
push
testl
ret
ds
jg
pushf
mov
inc
pop
sub
xor
sub
xchg
push
lods
xchg
loopne
hlt
add
inc
shr
dec
mov
inc
imul
mov
cmp
jmp
add
or
push
sbb
jl
cmp
pop
mov
fwait
inc
popa
adc
pop
mov
stos
rcrl
sbb
jle
dec
jne
ror
gs
mov
jne
push
jg
or
out
test
xor
inc
or
rcr
fidivrs
adc
inc
push
mov
decl
cs
addl
sub
cmp
push
pop
pop
or
mov
les
cmp
jae
cmp
lds
mov
xor
add
testb
outsl
adc
add
dec
cmp
inc
shrl
or
bound
ret
stos
cmp
sub
pushf
rcrb
pop
mov
dec
inc
xchg
xchg
mov
fwait
mov
jb
cmc
jnp
jns
xchg
sbbb
cmpsl
lods
xor
add
add
cld
cmp
cmp
dec
repnz
jge
inc
out
aad
insl
insb
lret
xchg
or
fisubl
ds
push
jb
push
mov
mov
lcall
pop
add
pop
push
pop
cmpsb
lahf
xor
jecxz
lahf
shr
mov
xor
push
pop
imul
jl
add
mov
jmp
hlt
lods
hlt
push
dec
xchg
lcall
notl
mov
xchg
mov
pop
lods
cmp
mov
mov
push
mov
push
in
add
cmp
mov
aaa
jp
pushl
cwtl
add
adc
out
mov
adcb
lret
jmp
xlat
inc
bound
adc
adc
aam
mov
insb
jge
pop
outsl
jb
fldl
clc
pushl
cmp
adc
pop
mov
or
push
mov
cmpsb
mov
sbb
ficoms
lods
pop
pcmpgtw
jg
inc
dec
mov
mov
dec
and
hlt
mov
ret
pop
inc
mov
test
lahf
dec
pop
out
push
jl
sub
fldt
cld
call
push
mov
or
or
cmpsb
add
mov
out
pop
mov
clc
sbb
mov
shrl
clc
mov
jb
mov
jl
cmp
jmp
pop
pusha
jae
std
fdivrl
mov
cwtl
movsl
mov
jg
out
nop
fsts
cmp
sbb
cld
sub
xor
je
loope
cmp
pop
cmp
dec
inc
jno
inc
pop
mov
mov
and
sub
hlt
dec
fiadds
pop
push
stos
mov
jmp
inc
dec
pop
mov
adc
shr
lods
inc
or
loop
push
push
push
pop
out
test
arpl
jns
inc
push
ret
mov
jle
and
rolb
xchg
shr
pushl
loopne
push
xlat
out
pushf
lcall
sbb
lock
jmp
mov
cwtl
mull
inc
mov
dec
xor
mov
fs
repz
sbb
lcall
repz
cltd
push
pop
outsb
popa
mov
ret
sbb
inc
sub
clc
add
adc
jae
mov
mov
adc
jle
xor
jmp
push
mov
cmp
adcb
movl
neg
adc
in
mov
mov
mov
and
mov
fstpl
movsl
add
ret
inc
sbb
mov
mov
rorb
aaa
mov
jnp
dec
xor
inc
faddl
div
xchg
mov
mov
shl
cmp
mov
mov
cmp
dec
mov
sub
lret
aas
jne
sar
jle
mov
push
inc
adc
add
rcll
cmp
add
loopne
adc
adc
dec
mov
imull
neg
lret
dec
mov
mov
stc
pop
add
test
roll
neg
shrl
jns
aam
and
xchg
pop
aam
into
mov
push
jne
dec
div
lods
cltd
fcmovnbe
inc
xchg
adc
xor
mov
test
pop
fmull
dec
dec
xchg
aad
fdivr
mov
dec
outsb
nop
sahf
adc
neg
and
not
fistpll
lods
jl
pop
in
dec
mov
faddl
pop
jae
push
loopne,pn
add
mov
cmp
ljmp
mov
sbb
cmpsb
add
je
sub
cmpb
mov
adc
sbb
add
fmull
add
into
fwait
adc
sbb
out
loope
mov
adc
addr16
or
fdivrs
lea
xor
xlat
dec
or
shll
in
and
lock
aam
loop
sub
push
sbb
sbb
gs
adc
xor
add
cmp
cs
loopne
rcl
jle
fsubrl
loopne
inc
sbb
sbb
mov
cmp
sub
sub
loopne
sbb
sbb
aam
outsb
mov
mov
dec
fcoms
mov
xor
jae
mov
cmp
add
sbb
add
sub
or
fmuls
popa
arpl
or
sbb
mov
inc
int3
sbb
jbe
jne
xor
rorl
pusha
add
insl
bound
aas
add
insl
xor
adc
lods
mov
xchg
fdivrs
or
lcall
xor
scas
cmp
and
in
mov
adc
mov
clc
fisttpl
or
push
push
pushl
call
lea
lret
and
js
mov
adc
sbb
pop
sti
iret
and
adcb
jp
ficomps
xchg
int
and
lock
sbb
ds
inc
cmp
lcall
das
sbb
pop
loope
cli
leave
cmc
leave
ret
sub
test
xchg
dec
aaa
jns
jb
jo
or
sbb
ss
mov
sub
add
and
dec
data16
in
int
jbe
xchg
fdivrs
das
mov
cmp
sub
xor
sbb
cmp
test
int
aam
pop
mov
jno
icebp
scas
cld
mov
out
dec
cmp
testb
cld
xor
or
push
mov
mov
lcall
clc
jno
jae
das
clc
sbb
mov
xlat
test
ljmp
push
stos
push
ret
xchg
sbb
ret
xor
sbb
in
lods
fstpt
filds
add
add
aam
clc
jecxz
or
pusha
addb
dec
cld
mov
jbe
iret
push
fidivl
neg
xor
or
or
jno
pop
cmp
imul
jp
ret
test
cmp
je
pop
push
pop
int3
sbb
int3
cmp
jo
or
xor
cwtl
jbe
mov
dec
addr16
js
push
loope
xorb
pop
imul
lahf
in
sub
sti
test
fildll
cmp
push
mov
fistps
imul
and
fsubs
add
sub
fisttpl
mov
dec
mov
pushf
mov
ss
fildll
in
aam
push
or
loop
add
push
and
jne
inc
adc
jo,pt
cwtl
mov
shll
repnz
cmp
inc
adc
nop
in
lods
std
out
mov
test
cld
push
lea
push
add
mov
cmp
pop
lds
sar
cmp
xor
je
xor
das
dec
lahf
xchg
pop
mov
mov
xor
jb
mov
mov
adc
neg
testl
clc
mov
repz
add
test
pushf
in
scas
shlb
pop
ror
iret
fistps
fistpll
adcb
and
out
or
movsl
lds
mov
test
sahf
fldcw
jmp
mov
cmp
notl
orl
jecxz
push
mov
cmp
pushf
cmp
dec
or
pop
cmpb
lods
stos
js
mov
xor
sbb
or
iret
pop
pop
add
sbb
pop
lret
and
mull
dec
sub
pop
mov
adc
pop
and
sahf
inc
sub
or
jp
add
mov
xor
jae
pop
or
mov
lcall
jnp
push
out
in
push
mov
adc
mov
int3
outsl
lcall
int3
push
repz
add
in
pop
pushf
dec
test
mov
fwait
sbb
rcr
inc
pop
add
dec
jo
out
mov
sar
inc
popa
test
fistps
jl
lea
xor
into
adc
xor
loop
fwait
xor
push
ror
mov
cmp
xchg
mov
clc
mulb
mov
shlb
sti
in
push
adc
dec
ja
stos
or
out
push
mov
lcall
add
and
jle
shlb
adc
fs
lock
and
inc
dec
mov
call
bound
icebp
stos
sbb
fwait
loope
in
xor
add
lahf
mov
pusha
lods
in
and
rcr
sbb
jnp
arpl
sbb
adc
inc
mov
mov
lret
jo
xor
int3
es
cltd
pop
dec
loopne
das
out
orl
push
and
test
xchg
adc
or
jae
outsl
pop
add
test
mov
xchg
cmp
stc
add
push
in
and
mov
test
pop
fcoml
dec
call
xchg
push
mov
sbb
jne
lea
mov
call
fldl
and
push
cmpl
out
jae
jecxz
shl
jmp
cmp
jbe
dec
shlw
ljmp
addl
pop
mov
decb
ret
sbb
jo
outsb
adc
test
push
or
dec
in
or
mov
scas
cmc
data16
addr16
push
dec
add
or
inc
bound
orl
mov
rorl
and
or
push
inc
cmpsb
jb
xor
aam
shlb
shrb
mov
arpl
in
bound
and
push
xchg
pop
push
fistpll
test
mov
sub
dec
stos
imul
sbb
or
mov
push
fiadds
ret
push
aas
in
into
sahf
and
or
cld
lcall
fcompl
jmp
cmp
in
adc
sub
and
hlt
push
add
fnstcw
or
data16
pop
dec
stos
mov
xchg
pop
push
pop
or
in
cli
adc
insb
iret
loop
push
jg
es
icebp
mov
mov
les
sub
in
mov
and
or
int
fldcw
aam
mov
loope
rcrb
dec
ja
aaa
cmpl
add
cmc
fsubs
jb
nop
dec
rolb
push
fs
push
sbb
cmp
mov
insb
xor
ss
fldcw
in
add
gs
cmp
es
and
lock
or
hlt
pop
or
inc
dec
xchg
cmpsb
clc
hlt
jnp
jne
adc
jmp
or
inc
adc
scas
das
adc
push
mov
loopne
mov
lea
add
popa
xchg
scas
pop
jns
stc
int3
mov
lods
fdivr
sbb
inc
jne
and
cmc
das
mov
hlt
push
cli
add
xchg
mull
dec
fdivs
clc
mov
lods
aam
ja
sahf
jno
sarl
cld
xchg
clc
push
decb
pop
sub
mov
dec
sub
xor
sbb
scas
jge
outsb
fildl
outsb
fnstsw
adc
hlt
pop
clc
sbb
test
add
into
xchg
ret
cmp
cmpsl
pop
loopne
cli
inc
add
int
jns
pop
pop
mov
jecxz
jle
sbb
pusha
mov
sub
outsl
sbb
sahf
mov
sbb
stc
iret
and
movsl
mov
clc
rol
or
add
orb
addl
add
mov
iret
xor
fimull
insl
mov
push
xchg
clc
call
add
push
int
push
xchg
pushf
cltd
mov
cwtl
cltd
pusha
inc
out
pop
int
dec
loope
adc
movsb
lcall
cmp
stos
fldcw
jmp
js
sbb
cmp
aam
or
neg
mov
clc
mov
aas
pusha
sub
ljmp
push
ds
loop
xchg
jmp
lcall
pop
inc
inc
icebp
test
push
popf
xlat
int
sarl
or
fadds
movsl
shlb
aam
inc
lds
inc
and
lcall
ret
and
add
shl
push
pop
push
loope
mov
cmp
lret
push
add
loop
subl
add
push
mov
jbe
pop
adc
cmp
add
mov
pop
mov
fs
pop
add
je
jno
clc
adc
pop
nop
sbb
sbb
call
in
sti
xor
add
add
add
ds
idivb
aam
push
add
clc
call
mov
add
and
and
insb
xor
out
mov
add
cmpl
push
call
pop
ss
pop
pop
sbb
add
xchg
mov
adc
movsb
push
dec
mov
or
add
dec
into
inc
stos
cltd
add
aad
fiaddl
testl
add
push
jg
xor
pop
mov
in
push
jo
loopne
jp
jo
mov
fnstsw
push
mov
inc
push
push
les
imul
out
add
adc
pusha
xchg
push
mov
fcoml
insl
jg
pop
jecxz
fucom
cmp
inc
addr16
fnsave
push
iret
icebp
push
ljmp
lcall
adc
or
incl
push
sub
add
aad
or
adc
mov
jecxz
das
aam
jo
jg
jae
push
ret
pop
sub
add
xor
mov
sbb
pop
add
shll
and
out
jp
lahf
pop
adc
jg
cmpsb
add
push
xor
or
jp
sbb
testb
sub
dec
add
adc
dec
jo
add
mov
std
fists
mov
out
sbb
repz
lret
adc
push
leave
stos
jecxz
pushl
cmp
aam
jmp
ljmp
outsl
std
xor
fcmovnbe
adc
aas
bound
mov
or
add
jl
add
loope
mov
inc
ja
and
mov
rcll
insl
mov
push
js
flds
mov
and
js
jne
dec
outsl
mov
test
push
xor
jle
insl
addb
add
outsl
lds
push
sub
jp
test
pop
mov
xchg
add
xor
aas
push
jg
add
test
push
add
cmc
testl
pop
ss
add
cmp
jg
outsl
outsl
sub
and
or
pop
adc
idivb
jecxz
xchg
ljmp
xor
loope
mov
clc
fisttps
add
add
adc
fs
dec
clc
push
gs
idivb
int3
adc
icebp
adc
dec
mov
shr
xor
or
subl
or
dec
jno
mov
jmp
int3
cmpb
sub
sub
sahf
icebp
pop
ja
mov
and
mov
lock
add
inc
popl
loopne
aam
repnz
cli
push
sub
xor
xchg
fcmovnb
call
sahf
out
neg
ret
sub
repnz
adc
testl
push
popa
mov
rol
icebp
clc
dec
cmpb
outsl
aad
jecxz
push
mov
movsb
mov
add
orb
mov
gs
xchg
pop
fcmovne
jp
xor
and
mov
fbstp
pop
mov
inc
mov
daa
shrl
or
xchg
and
movsl
sub
sbb
insl
enter
les
insb
dec
stc
xor
pop
xor
inc
sub
outsb
push
ljmp
push
add
jg
cli
das
or
clc
and
jnp
push
dec
sub
call
add
or
fwait
dec
pop
je
dec
jb
in
jle
or
add
mov
in
dec
cld
jmp
add
fmul
sub
or
sbb
lds
sub
jg
cmp
push
or
test
ljmp
mov
imul
outsl
loop
and
or
cltd
xchg
sbb
mov
lahf
test
sub
imul
das
fistpl
icebp
sub
or
das
call
jecxz
sbb
push
sub
int
push
mov
out
and
cmpsb
cmp
jbe
inc
insb
in
lahf
mov
cld
xchg
adcl
test
mov
ljmp
mov
jge
outsl
mov
sub
fwait
cmp
pushf
push
ljmp
cmp
and
stc
jne
and
add
adc
adc
dec
mov
je
iret
in
test
stos
ss
adc
icebp
outsl
and
scas
lahf
cli
repnz
and
xorb
mov
jg
loopne
nop
out
idiv
mov
sbb
mov
lret
daa
aaa
mov
cmp
xchg
rcll
lea
in
and
and
sbb
cli
or
jmp
mov
dec
xor
lods
mov
cmp
test
test
inc
lret
adc
movsl
xor
inc
ljmp
dec
sbb
mov
idiv
pop
cli
xchg
and
pop
testb
in
test
lods
jb
pop
icebp
pushl
jg
cmpsl
mov
in
pop
test
inc
out
lods
mov
jmp
in
insb
or
and
push
sub
xchg
xor
cmp
call
clc
inc
jmp
push
pop
in
aad
mov
xor
jbe
pop
adc
jg
push
stc
mov
or
je
add
sbb
push
imul
push
divl
cmpsl
cld
ds
mov
cwtl
iret
inc
lock
jmp
push
push
cmpsb
push
mov
cltd
xchg
jmp
mov
mov
out
or
cmp
mov
lods
adc
ja
orl
xor
fbld
into
xor
pop
imull
stc
push
and
test
lods
pop
aad
adc
or
mov
pusha
loope
bound
negb
inc
mov
or
pop
sbb
movsb
repz
or
push
insl
cwtl
mov
mov
test
bound
lea
mov
xchg
outsl
std
mov
inc
test
and
inc
repnz
jg
ret
xor
test
cwtl
fimuls
jecxz
mov
inc
cmp
decl
push
push
add
mov
fdivs
mov
pop
fbstp
test
out
mov
adc
insl
sbb
out
jne
je
inc
mov
push
jb
add
jns
pushl
push
mov
aaa
in
outsl
add
add
outsl
pusha
push
mov
and
push
or
push
jmp
mov
or
sub
fcoml
in
or
jle
daa
aas
xchg
adc
loopne
dec
xchg
pop
xor
xor
inc
ret
push
mov
outsl
aad
outsl
push
cwtl
jl
cmpsl
xchg
jle
and
jg
inc
xchg
sahf
and
out
mov
mov
inc
pop
lea
jb
decl
push
aad
cmp
pop
lock
push
mov
rcl
adc
mov
cmpsl
mov
push
mov
movsb
cmp
sti
inc
mov
iret
jbe
xor
aad
push
dec
or
mov
mov
mov
add
or
fisttps
nop
mov
in
add
sub
popa
in
add
mov
cld
cmp
add
add
insl
inc
inc
and
sbb
lret
xor
sbb
sarb
popf
aam
sbb
mov
mov
jle
mov
inc
ret
loopne
inc
lea
jae
stos
std
add
or
jp
sbb
fistps
sbb
sub
or
addb
xchg
mov
lret
mov
int3
inc
pop
push
cmp
and
pop
hlt
and
add
cmpb
adc
fdivrl
inc
dec
pop
xor
adcl
ljmp
clc
sbb
jl
cltd
insb
xchg
sub
imul
pop
cld
jge
xor
pop
arpl
lock
fbld
js
sub
add
fisttpll
sbb
popf
rcrl
ss
adc
outsb
cwtl
aam
push
scas
mov
xchg
push
jmp
xchg
inc
sub
xchg
fmuls
sub
arpl
stos
fadds
push
mov
add
add
pop
mov
or
cli
mov
ret
cmp
popf
push
sbb
mov
add
xor
adc
scas
jne
rorb
out
add
ljmp
inc
mov
fs
or
or
shll
xor
test
subb
ret
sbb
add
xor
das
cmp
aam
xchg
add
out
add
xor
sub
aam
dec
mov
xchg
sub
pop
add
mov
mov
neg
dec
mov
jl
mov
add
js
xor
add
cmp
dec
sub
outsl
in
out
out
mov
dec
pop
cltd
xchg
mov
ljmp
ficoms
ljmp
push
filds
xorl
add
out
mov
adc
cmp
movsb
ret
lods
push
mov
fistpll
fisttps
inc
test
mov
les
in
loop
icebp
aaa
xor
aaa
push
sbb
sbb
hlt
popa
je
add
and
or
subb
cli
add
popl
out
fldenv
into
orb
int3
adc
inc
sub
cmp
mov
inc
and
cld
inc
clc
je
fs
mov
in
mov
icebp
test
push
in
pop
mov
sbbb
std
test
or
inc
add
cmp
mov
mov
scas
mov
ljmp
mov
xor
jmp
mov
sbb
sbb
mov
add
pop
cltd
js
in
mov
sbb
lret
mov
or
test
mov
popf
insl
imul
in
cmp
and
fisubrs
jmp
or
cmp
mov
dec
mov
hlt
add
xchg
push
pop
cmp
loope
pop
adc
lock
outsl
sahf
loopne
mov
cmp
xchg
pop
push
in
pop
push
lret
add
mov
lock
mov
les
aad
lds
xchg
aam
cmp
loopne
fucompp
sub
popl
mov
loopne
xchg
cli
xchg
push
stos
dec
or
aam
rcrl
fdivrl
xchg
addr16
push
jle
jge
mov
pop
ljmp
or
loope
movsb
push
int3
hlt
sarl
mov
test
out
icebp
push
jmp
scas
xchg
divb
call
cmpsl
jno
and
shlb
cmp
jmp
adc
lahf
mov
sub
pop
sarb
das
mov
popf
shll
rcrl
jg
insl
stos
mov
mov
jp
sbb
inc
inc
jecxz
cs
in
mov
outsb
inc
mov
movsl
xchg
in
les
jb
pusha
add
dec
in
adc
jnp
adc
mov
cmpsb
add
jo
sti
jne
lods
xchg
ret
or
or
rorb
insl
icebp
jmp
cmpsl
or
push
jg
add
pop
sub
ficoml
jg
ljmp
cpuid
lret
mov
add
fiadds
pop
test
test
es
outsl
xchg
push
iret
out
ret
mov
popa
je
xchg
pop
or
inc
mov
or
mov
and
mov
in
aam
xor
in
loop
decl
add
bound
lahf
push
imul
outsl
mov
xchg
inc
pop
ds
jecxz
enter
push
dec
test
lret
or
dec
popa
mov
xchg
outsl
popf
test
sub
in
ljmp
sub
insl
xchg
int3
or
or
and
or
mov
ljmp
invd
inc
add
repnz
sahf
mov
push
mov
add
cmp
outsb
and
push
fistpll
cltd
cmp
filds
stos
in
mov
lret
dec
add
or
cmp
les
or
cmp
jo
lea
mov
pmuludq
mov
jl
sub
adc
incl
loope
add
aas
dec
push
lret
rolb
pop
sbbb
bound
cmpsb
ljmp
mov
std
push
pusha
jmp
cltd
dec
inc
addb
and
mov
pop
stos
stc
cmc
inc
mov
cli
aaa
pop
or
mov
pop
pop
cmp
popa
dec
rolb
ret
add
mov
cli
xchg
andl
sbb
cmp
lahf
xchg
jge
or
lahf
jne
cmc
jno
loope
cld
aas
pop
jle
jle
pop
fildl
movsl
pop
mov
aas
mov
cwtl
adc
inc
push
shr
repnz
sti
jno
push
jno
mov
mov
push
jo
adc
xor
ds
add
add
xchg
cmp
and
ljmp
jle
and
aas
mov
lret
inc
popf
mov
mov
cmpsl
bound
xchg
stc
cld
or
outsb
mov
inc
lret
push
mov
mov
push
mulb
mov
jg
in
ret
fists
xchg
pop
pop
push
pop
pusha
sti
ljmp
add
cmp
arpl
iret
pop
inc
divl
push
mov
jns
xor
fmull
lds
out
aam
push
push
push
xlat
add
lods
cmp
filds
sub
mov
dec
xor
adc
push
push
js
push
lahf
shll
sub
push
or
xchg
xor
cmp
aam
push
lds
or
fimuls
inc
xchg
xchg
dec
sub
push
xor
out
les
loope
or
pop
mov
mov
and
les
bound
adc
add
add
or
add
pop
loop
adc
adc
pop
dec
cld
es
xchg
adc
or
or
and
mov
push
xchg
jnp
decl
fisubl
es
pop
jno
inc
rolb
das
adc
mov
inc
and
and
mov
and
dec
mov
test
shll
add
pop
mov
mov
add
fsub
cmc
pushf
push
xchg
loop
shlb
cmp
and
push
xchg
inc
andb
sbb
testl
outsl
subb
adc
jno
inc
inc
test
rcll
or
pop
test
xchg
mov
xchg
gs
mov
push
dec
sbb
or
mov
jb
shll
adcb
add
add
test
fnstenv
mov
hlt
in
pand
push
clc
fstpt
push
ss
add
dec
andb
push
xchg
mov
mov
movsl
mov
push
lds
cmp
cltd
movsb
jo
cmp
and
add
ret
dec
or
jge
jp
mov
jne
mov
mov
jo
add
inc
mov
lret
incl
test
or
xchg
adc
aam
sarb
mov
aas
out
push
enter
cmp
cmc
outsl
jbe
mov
imul
lcall
int
add
les
test
xor
lahf
push
mov
shlb
std
add
loopne
xlat
aam
fs
dec
nop
daa
shlb
out
sub
mov
out
hlt
clc
in
int
aas
adc
andb
and
outsb
divb
imul
dec
mov
iret
enter
pop
push
hlt
pop
inc
or
in
inc
pop
mov
mov
jb
mov
cmp
and
cmp
fiadds
test
fistpl
mov
and
pop
es
popl
movl
imul
push
add
or
idivl
mov
aam
popf
push
insb
in
in
mov
stos
cmp
cld
push
xchg
fwait
lock
jle
inc
push
pusha
adc
mov
inc
sub
cmp
jb
inc
dec
dec
push
cmp
adc
or
adc
fisubrl
jecxz
mov
cmp
loope
sbb
push
xor
aaa
cmp
mull
popa
rcrl
sbb
jo
out
sahf
and
push
or
mul
es
jp
xchg
inc
mov
pusha
in
outsl
push
daa
sbb
mov
add
es
out
jns
or
mov
into
mov
test
repnz
jno
sahf
fldenv
or
gs
pand
inc
loopne
push
push
lea
in
test
or
jecxz,pn
xor
daa
into
hlt
daa
stos
pop
xchg
cmpsb
sbb
jb
in
dec
addr16
iret
mov
add
xorb
jle
test
mov
jl
inc
or
jmp
ret
push
loop
pusha
ret
jo
pop
mov
adc
cmpsb
out
in
je
mov
mov
cltd
push
loopne
or
jge
nop
mov
scas
push
and
add
fdivrs
pop
mov
mov
push
mov
xor
in
dec
outsb
in
sbb
aaa
jae
fcoms
or
sbb
push
lea
and
push
insb
hlt
int
lods
adc
sub
push
addr16
mov
dec
push
mov
mov
outsl
imulb
pop
bound
or
xchg
mov
fldenv
test
xor
add
sahf
pop
enter
shl
mov
push
and
int
outsl
negl
dec
sbb
int
jmp
mov
inc
rcrl
fsubrs
mov
add
shl
xor
outsl
cmp
mov
inc
adc
mov
push
sub
mov
fstpt
scas
xor
incl
cld
daa
in
popl
or
pop
int
dec
lea
mov
test
sbb
push
mov
lds
xorb
sarl
fwait
inc
mov
call
inc
call
push
sbb
lcall
or
inc
xchg
nop
test
int
arpl
jg
mov
je
mov
rcl
jno
mov
xlat
subb
pop
or
shrl
std
incl
add
inc
lock
bound
inc
jo
sar
pop
es
xchg
mov
ret
lcall
mov
lret
add
mov
pop
in
adc
cli
call
dec
fidivs
stos
mov
divl
mov
fucomip
lcall
repz
mov
mov
cld
and
fnstsw
fisttps
int3
in
aam
xchg
into
loopne
cmpsl
mov
insb
cmp
pushl
gs
jb
xor
pop
mov
and
jle
mov
hlt
pop
jge
xchg
cmc
add
in
mov
lcall
std
push
loop
dec
loope
mov
dec
rclb
sbb
movsl
out
into
sub
outsl
mov
sbb
and
dec
adc
fists
xchg
push
js
sti
je
cmp
jge
jmp
orl
icebp
adc
jmp
cmc
mov
pop
add
movsb
mov
jg
in
popa
mov
mov
xor
cmpb
xor
mov
stos
lahf
loope
ljmp
enter
sarb
jnp
mov
pop
jmp
sbbb
jp
or
aam
or
mov
outsb
mov
ja
cmp
lcall
cmp
test
lahf
into
test
int
push
das
das
outsl
add
sub
mov
adc
pop
mov
rorl
mov
or
hlt
inc
inc
mov
mov
or
mov
daa
push
lds
outsb
sub
mov
push
leave
rorb
ljmp
sarb
mov
ficoms
adc
fwait
test
das
and
add
cli
and
iret
addb
push
popf
in
dec
scas
movsl
jae
inc
dec
jae
in
ljmp
iret
sbb
add
pop
add
aaa
aam
add
test
lea
lds
rcl
gs
or
insl
enter
imul
sbb
mov
pop
push
sti
push
std
notl
idivl
into
and
add
mov
mov
jb
aaa
je
jle
sbb
in
cli
mov
add
push
dec
fxch
push
and
push
loop
push
mov
xorl
jge
push
inc
and
jmp
je
mov
std
add
and
xlat
push
xor
pop
or
jle
pop
or
pushl
and
add
push
dec
stos
or
push
sub
mov
inc
cmp
fcomps
fidivs
xchg
jbe
shll
in
jne
xchg
add
add
push
movsl
out
mov
sub
jle
ds
add
mov
clc
jg
fisttps
pop
repnz
mov
cltd
xor
ficoms
hlt
das
aam
sub
in
inc
cmp
outsl
jno
leave
mov
cmp
std
pop
aam
or
jmp
push
dec
jae
sbb
inc
mov
mov
in
divb
std
movb
and
add
push
push
dec
jbe
out
xchg
or
or
test
jp
sub
loope
std
test
pushf
les
and
into
test
mov
jmp
adc
les
or
in
incb
cs
cmp
dec
dec
xorl
adc
int
add
in
fwait
dec
aaa
bound
aaa
mov
popa
xor
xor
push
sub
mov
std
das
test
pop
outsb
jl
cmp
andl
and
daa
fiaddl
outsb
add
rolb
jo
aas
pushf
outsl
dec
lods
sub
push
fs
lods
dec
pop
mov
add
cmc
jns
or
or
call
popa
int3
sahf
test
or
sbb
das
aas
cltd
incl
arpl
test
sub
cmp
das
mov
jg
mov
loope
ja
nop
inc
jp
movsb
sar
push
mov
push
popf
test
rclb
sub
mov
cwtl
xor
test
and
mov
out
add
lods
dec
lahf
push
jl
xor
or
dec
int
ss
or
sub
xchg
mov
push
inc
je
adc
es
sahf
out
fbstp
insb
icebp
dec
xor
cmp
xchg
jle
imulb
jl
pop
sub
or
sbb
enter
test
popf
daa
aaa
push
test
push
xor
push
push
lret
sbb
shll
dec
mov
cmp
outsb
je
ja
lahf
and
movsl
and
push
jl
jg
pushf
fsts
aas
mov
xor
push
push
add
push
pushf
or
cld
push
or
mov
xor
push
push
subl
jns
add
and
push
xor
out
in
cmp
add
mov
incl
mov
cli
sbb
and
test
pop
push
jecxz
jle
inc
aaa
sub
add
lret
pop
fisubrl
mov
pushw
and
jo
stos
or
inc
insl
inc
pop
mov
test
push
mov
test
outsb
pop
jecxz
inc
jp
jg
xchg
inc
pop
sbb
jmp
mov
push
cli
rolb
jecxz
xchg
xchg
and
arpl
repz
insb
add
sub
inc
aaa
add
cli
inc
sub
and
mov
stc
lods
add
mov
rcrb
or
imul
add
addr16
mov
jbe
cmpsl
inc
test
push
leave
mov
outsl
aad
jecxz
les
shll
sub
adc
adc
xchg
mov
add
jle
nop
fidivrl
xchg
mov
push
pop
jbe
or
mov
jge
lock
sub
rcr
pushf
add
add
sub
mov
aas
stos
pusha
sbb
inc
dec
sbb
and
lret
push
sbb
add
and
sub
mov
sbb
cmp
push
repz
icebp
dec
aam
cli
xbegin
cs
sub
and
gs
inc
scas
xchg
sti
test
push
lods
clc
ret
and
lods
std
dec
sub
testb
ljmp
jb
xchg
xchg
dec
push
sti
dec
xor
jns
mov
dec
sub
bound
jnp
shrb
call
jo
ret
movsb
fwait
jmp
fs
in
das
jne,pt
or
sbb
mov
dec
iret
jl
into
sub
inc
inc
mov
lcall
pop
ljmp
iret
movsl
mov
adc
loopne
ret
mov
pop
fisubl
push
lods
and
mull
int
cmp
and
jg
mov
mov
or
jp
xchg
push
jecxz
sbb
aam
or
sub
add
or
adc
push
inc
sbb
xor
add
cwtl
out
sbb
mov
cmpb
loopne
in
cmp
fstps
xor
adc
sarl
aam
insb
daa
cmp
addr16
jns
inc
or
int3
push
pop
or
xor
xchg
push
ret
lcall
loop
add
insb
adc
jge
cmp
ret
jbe
fstpt
shr
fs
sub
jle
stos
sbb
sbb
mov
xchg
gs
js
std
testl
mov
dec
sub
inc
subb
pop
jmp
sub
aaa
loope
xor
mov
pop
mov
mov
push
aaa
xor
divb
icebp
ja
shrb
pusha
mov
js
add
fwait
imul
push
insb
push
mov
out
das
push
xor
inc
mov
mov
rcr
ja
into
jo
int3
xor
rorb
adc
jge
std
nop
jl
test
fisubrl
ja
push
jne
filds
mov
mov
imul
movsl
aas
in
aam
incb
or
push
outsb
jo
ret
cs
sub
push
pop
push
add
lds
imul
mov
xlat
insl
daa
cs
rcrb
jb
and
lcall
test
fldl
push
xor
sub
sti
push
dec
aaa
mov
dec
mov
andb
xchg
mov
jb
push
jnp
cs
adc
xchg
sbb
cmpl
or
cmp
fisttpll
aas
ljmp
fdivl
scas
cmp
pop
pop
dec
cmpl
pusha
jmp
adc
ljmp
pop
add
push
mov
inc
daa
and
cltd
or
inc
lock
push
dec
mov
xchg
inc
dec
test
imulb
in
sub
xchg
popa
jp
pushf
sub
frstor
fisubrl
or
inc
dec
out
adc
mov
adcl
push
test
pop
sub
inc
jmp
call
xor
or
loopne
jns
shll
jge
push
outsb
int3
add
mov
mov
xchg
mov
pop
mov
adc
add
add
mov
call
loopne
pusha
adc
jp
lods
sbb
jno
xorl
xor
decb
pop
mov
ja
cltd
adc
pop
jns
sbb
or
data16
add
inc
sbb
decl
sub
int3
pusha
adc
dec
cmp
mov
clc
add
fnsave
aaa
das
std
js
and
and
gs
or
mov
push
and
dec
or
push
mov
pop
push
xchg
aad
int3
or
ljmp
iret
out
and
loop
lods
mov
jne
inc
addb
in
in
fildll
xchg
aad
jb
jmp
sub
stos
or
pushl
ret
xor
xchg
jae
rolb
idivl
sub
or
mov
bound
push
jp
out
inc
test
fistpll
cwtl
cwtl
cmpb
decb
mov
in
sbb
cmpsl
xor
pinsrw
pop
inc
pop
imul
adc
inc
pop
call
outsl
fwait
out
pop
sub
mov
ret
decl
pop
sbb
gs
sub
cld
and
aam
dec
add
mov
xchg
inc
xchg
loopne
mov
mov
cmp
mov
test
push
sbb
inc
sar
sbb
fnstsw
jbe
xor
mov
lret
or
das
cld
fninit
bound
adc
daa
dec
push
jl
sbb
sahf
loopne
inc
dec
add
push
xor
or
sbb
lcall
test
adc
lds
dec
or
test
call
mov
and
and
mov
pop
jne
movsb
jg
shlb
xor
push
jle
inc
inc
push
pop
sti
pop
lock
sbb
pop
sbb
outsl
jo
jl
and
adc
es
push
sub
xor
inc
xchg
xchg
daa
lret
orl
dec
fsubl
adcl
call
xor
mov
outsl
or
cmp
xor
aaa
stos
inc
mov
leave
daa
rolb
icebp
and
test
inc
sub
add
mov
add
daa
mov
sbb
icebp
gs
pop
cmp
push
sbb
jecxz,pn
inc
inc
add
inc
pop
call
clc
push
adcl
cltd
ja
add
push
sub
testl
outsl
cli
out
or
dec
push
add
lock
push
add
js
fidivrl
insb
jbe
inc
pushf
inc
dec
sbb
or
jg
xor
sbb
lret
mov
fstpl
clc
ficomps
movsb
test
inc
test
pop
dec
shll
jp
push
mov
adc
or
xor
sbb
in
shrb
push
or
sub
in
jmp
insb
xor
stc
mov
test
in
in
test
sub
fbstp
sbbb
clc
addb
lret
cmp
loope
push
testb
int3
lock
mov
fnstsw
dec
sbbb
xor
fdivrl
dec
adc
mov
lods
call
fidivl
push
push
lea
jbe
addb
jmp
mov
ljmp
jl
es
or
lods
jne
mov
dec
mov
add
push
push
nop
sbbb
and
sub
shlb
xor
adc
stos
test
jo
xchg
xchg
data16
sbb
imul
mov
push
sti
push
jge
aas
nop
ds
jg
clc
cmp
dec
fdivrs
sbb
pusha
jne
sub
inc
insb
into
clc
imul
add
mov
imulb
xor
lahf
adc
dec
pop
into
xor
imul
pop
pop
pusha
negl
in
cmpsb
sahf
xchg
mov
dec
xor
mov
pop
pop
pusha
in
aam
mov
mov
lret
adc
xlat
movsb
fldt
mov
push
aam
sti
outsb
inc
xor
mov
cmp
rcr
rcrl
test
scas
cs
pop
sub
fstl
out
add
enter
inc
push
es
jbe
pop
inc
rolb
call
ljmp
add
fwait
push
in
in
adc
mov
iret
addl
mov
call
out
jb
pop
jb
aas
adc
test
call
nop
inc
fwait
add
xchg
mov
out
adc
push
sbb
lock
xchg
xor
das
test
xor
clc
xlat
add
rorl
add
mov
dec
ficompl
mov
aam
imul
adc
pop
push
adc
jo
jl
or
test
lcall
add
in
adc
sbb
cli
es
jae
or
xor
jecxz
dec
push
daa
push
push
into
xorb
dec
inc
std
xchg
out
push
and
notl
cmp
ja
test
jb
in
mov
dec
daa
inc
add
or
add
push
rcrb
scas
mov
sbb
adc
inc
sbb
aam
or
test
jecxz
cwtl
lods
inc
hlt
or
cmpsb
pop
inc
in
imul
rorb
cmp
data16
fisubrl
js
jb
xchg
stos
aaa
mov
int
sbb
js
inc
dec
hlt
mov
cmp
test
jbe
xchg
lea
or
xchg
lock
and
fiaddl
and
insb
push
stos
stc
xor
out
loope
push
cmc
cmpb
test
fcoms
stc
mov
subb
jmp
test
push
inc
out
dec
aad
ljmp
pushf
aaa
insl
cwtl
stos
movsb
divb
inc
and
jp
fsts
pushf
pop
sub
add
jo
pop
sbb
dec
paddw
cwtl
test
out
clc
cmp
fsubrs
cmc
pop
jg
push
out
outsl
pop
mov
push
in
adc
mov
call
sub
and
xchg
inc
jge
jl
aam
ljmp
dec
inc
popa
out
aaa
sar
aam
cmp
and
loopne
shlb
or
fsubs
outsl
sub
xor
mov
xchg
loopne
mov
fwait
daa
adc
sbb
rorl
lcall
bound
and
in
add
ss
or
bound
jne
push
ret
fsub
inc
pop
mov
roll
jnp
call
imul
xorl
stos
test
sub
aam
test
les
inc
cmpsl
jns
cmpsb
clc
scas
mov
std
inc
enter
addb
xchg
fisubs
lock
je
dec
push
aaa
adc
fcomip
add
sahf
fbstp
cmp
int
mov
jp
ficoms
push
jl
inc
nop
and
push
out
adcb
sbb
pop
xchg
jg
clc
pop
ljmp
xchg
or
or
cld
sub
jbe
dec
xchg
bt
mov
mov
sti
or
imul
das
lods
add
adc
jne
outsl
pop
test
repnz
mov
shrl
lahf
xor
and
sub
xor
push
in
cmp
mov
pop
je
push
sti
xor
stos
call
mov
lahf
adc
das
inc
mov
mov
jg
sub
bound
daa
loope
out
inc
inc
lcall
and
inc
sbb
inc
xorb
pop
mov
imul
cwtl
jecxz
pop
xlat
iret
fistpll
jp
mov
or
ret
in
sub
test
jmp
push
sub
std
insl
fsts
rcr
in
mov
insl
mov
jge
sarb
jb
outsb
and
mov
cld
adc
clc
mov
fildl
cli
pop
dec
adc
push
mov
xchg
popf
mov
xchg
add
push
jbe
scas
arpl
pushf
push
add
push
cs
or
push
cmpsb
mov
jge
cltd
out
cs
add
or
pop
mov
std
adc
mov
pop
insl
mov
ficomps
jno
pop
sbbb
mov
xchg
test
mov
jne
das
mov
xor
inc
pop
subl
push
cmp
imul
insb
cmpb
pop
in
adc
lea
or
xchg
sbb
fcmovnb
lods
xchg
ljmp
sub
pop
ret
adc
add
loope
subb
cmp
popf
mov
push
mov
fdivs
push
lret
inc
jecxz
add
scas
cmc
out
inc
mov
cld
push
mov
stos
jo
jne
lock
test
stos
or
xchg
fcom
call
xor
pop
dec
rol
incl
je
lcall
int
movsb
mov
loop
icebp
inc
cmpsl
sub
sbb
aam
push
jbe
xchg
pop
shll
lock
insl
es
out
xchg
dec
icebp
hlt
mov
outsl
in
xor
pop
mov
jbe
scas
mov
aad
stc
fsubl
push
ss
popa
mov
cli
cs
arpl
sub
inc
ja
lods
cmp
enter
in
test
xchg
cmpl
mov
mov
dec
out
fdivr
outsb
cmpsb
and
adc
mov
push
adc
add
fstpl
sub
adc
aaa
or
push
jg
das
shrl
fcmove
xor
dec
adc
test
cwtl
pop
sbb
sub
sbb
mov
call
jne
add
lods
xor
xor
push
inc
aaa
jge
xor
pop
std
inc
into
push
inc
mulb
jb
jecxz
adc
fwait
push
jge
mov
inc
mov
or
xchg
jno
push
decl
subb
dec
push
pop
inc
int3
inc
mov
hlt
cwtl
mov
pop
cli
filds
mov
cmp
es
sub
test
jg
mov
mov
mov
and
mov
cwtl
add
test
add
dec
iret
daa
push
loopne
test
push
mov
jno
outsl
sub
add
adc
gs
mov
or
ljmp
sub
dec
insl
push
insl
sbb
cmp
in
aaa
sti
lea
or
mov
cltd
bswap
and
leave
push
addr16
cmpsl
sbb
jg
pusha
mov
mov
test
enter
push
dec
jmp
xchg
add
je
sub
out
mov
pushl
incb
rol
adc
xchg
xchg
add
repz
and
mov
inc
test
pop
out
dec
cltd
mov
cmp
decl
clc
enter
ret
dec
lcall
inc
ds
pop
and
clc
xlat
pop
insl
fwait
out
jbe
mov
jg
mov
cld
test
and
cld
shll
rclb
lcall
and
sbb
push
mov
call
and
pop
lret
fcmovnb
sbb
pop
mov
fldt
les
pop
push
clc
jg
shlb
bound
mov
xchg
jecxz
push
add
mov
xor
or
jp
and
popa
push
xchg
imul
dec
or
add
adc
dec
and
xchg
mov
mov
add
inc
pop
das
imul
dec
add
mov
test
rcll
sbb
gs
lock
sub
addr16
inc
bound
mov
sysenter
pop
and
bound
jmp
mov
aad
in
inc
jmp
jne
pushl
outsl
test
mov
shll
cmp
enter
cmp
decl
adc
mov
fwait
add
faddp
mov
clc
push
and
mov
pop
add
inc
xor
dec
push
stos
cltd
aad
aaa
bound
insl
test
stos
xchg
jb
sarb
sbb
and
pusha
sbb
sbb
xor
adc
in
testb
xor
mov
lods
roll
mov
jg
fldt
adc
adc
xchg
adcl
scas
repnz
rcrb
insl
jecxz
push
das
push
mov
rcr
inc
cmp
adc
pop
push
and
fisubl
sti
repnz
inc
cmp
add
movsb
push
out
add
pop
inc
ljmp
imul
mov
push
cld
ret
outsb
and
scas
repnz
movsl
in
mov
in
mov
pop
cltd
rorb
or
or
push
clc
xlat
push
and
inc
jb
sbb
pop
sbb
add
xchg
int
adc
mov
insl
dec
loope
jg
xor
jg
pop
imul
xchg
mov
xchg
cwtl
in
xchg
cs
pop
push
mov
jns
cmpb
es
cmpl
lock
push
inc
sbb
dec
pop
adc
add
testl
rcrb
xchg
ss
cmpsl
std
push
loop
inc
jae
mov
xchg
sub
rcll
decl
xor
test
syscall
ljmp
dec
loop
ss
popa
add
or
stc
rolb
mov
pop
push
or
dec
sar
mov
lret
iret
push
mov
dec
lock
shlb
xor
mov
aad
add
test
xor
outsb
or
or
out
push
or
pop
test
mov
cmpsl
clc
and
fadds
xor
and
pop
lahf
pop
fiaddl
shll
push
repnz
inc
jno
faddl
xor
push
mov
lahf
xchg
hlt
inc
sbb
push
hlt
cld
push
aam
sti
inc
xor
aam
test
jge
jecxz
sbb
xchg
inc
cli
inc
inc
je
mov
add
or
and
mov
ja
fisttpll
add
lock
rcl
inc
and
mov
and
insb
xchg
push
fdiv
mov
mov
mov
sbb
int
cmp
clc
ret
enter
and
push
call
push
ret
scas
ss
and
cmpl
jno
lret
test
dec
sahf
add
cmp
sar
es
and
loopne
inc
test
out
inc
add
dec
push
sbb
adc
add
and
xor
or
inc
mov
stos
add
lock
mov
dec
xor
pusha
jne
pop
in
pop
pusha
sub
fmull
pop
rcll
adc
inc
or
adc
fnsave
add
dec
lods
mov
push
loop
repnz
stos
pop
dec
add
or
test
je
or
ss
or
add
std
mov
xor
pop
fisubs
test
jae
ret
pop
cwtl
mov
sub
push
sub
out
cwtl
inc
or
jae
lods
stos
push
pop
pop
loopne
loopne
fsub
push
testb
pusha
pop
mov
sub
sbb
shll
and
jmp
pop
aam
lock
rcrb
and
adc
out
inc
sbb
mov
add
int3
aam
sbbl
xor
push
dec
jbe
fldt
js
subl
inc
stc
test
out
push
sub
outsb
ret
xchg
aas
shlb
push
or
loop
xlat
fwait
loopne
add
adcb
mov
and
mov
sahf
rolb
cwtl
push
mov
pop
fisubl
add
add
jmp
rclb
insb
xor
push
aaa
in
icebp
enter
mov
dec
mov
adcb
hlt
and
xchg
testb
sti
adc
outsl
mov
xlat
hlt
xchg
cmp
sub
ret
xor
lods
js
cwtl
inc
addl
jnp
mov
add
sbb
add
and
cmp
jae
jp
les
incl
test
xorb
jo
gs
dec
or
add
push
adc
jo
stos
test
xchg
jle
into
inc
xor
push
add
inc
sbb
pop
icebp
add
push
inc
rorl
push
icebp
arpl
addb
inc
sub
or
add
push
call
jge
cwtl
push
fiaddl
add
cmpsb
jae
lds
and
sbb
or
xchg
nop
mov
xchg
mov
popa
andl
in
push
pop
enter
xchg
inc
or
insb
je
mov
or
fsubl
fdivrs
add
adc
mov
dec
xchg
xor
cld
dec
cld
jle
cmpb
sbb
call
push
clc
sbb
int3
or
repnz
xor
outsl
cmpsb
xor
mov
shll
shlb
xor
shrb
pusha
and
sub
pop
and
dec
lock
mov
dec
xchg
and
dec
dec
das
jo
outsl
mov
je
stos
mov
mov
sarb
mov
pop
filds
sub
clc
pushl
xchg
mov
inc
pop
cmp
inc
ja
xor
aas
sub
shll
add
ret
faddl
insb
add
pop
popl
xchg
leave
pop
push
mov
outsl
xor
lock
ficoml
pop
add
jp
or
int3
and
mov
mov
ds
jmp
lret
mov
fists
inc
popa
mov
imul
js
outsl
je
cmp
mov
loope
sub
mov
das
pop
imul
mov
sbb
ljmp
je
repz
adc
or
dec
fsubrl
xchg
cwtl
xchg
mov
dec
iret
lods
aam
sub
and
aam
nop
mov
cmp
xchg
ss
popa
es
pushf
sub
sbb
inc
ljmp
pusha
cwtl
test
sbb
rorb
push
jbe
rclb
or
inc
mov
mov
sbb
dec
push
mov
jno
mov
loop
mov
mov
lds
add
mov
mov
int
faddl
loop
adc
push
dec
lret
mov
cmp
sbb
or
lret
jl
pop
jecxz
mov
dec
fiaddl
les
aam
incl
shll
add
inc
subl
adc
push
push
inc
mov
test
cld
loope
pop
sti
adcl
lds
out
mov
or
rcll
inc
out
lods
sbb
push
out
or
fwait
int
push
pop
adc
clc
sarl
xor
jecxz
sub
push
out
shlb
cmp
xchg
add
pop
adc
adc
es
push
sub
ds
jge
js
jo
cmp
das
push
movsb
pop
test
or
loop
fwait
out
adc
pop
mov
xchg
push
iret
popf
mov
cwtl
and
insb
fwait
push
stos
data16
mov
sub
cli
repnz
inc
dec
add
daa
shrl
push
punpckhbw
xor
call
mov
call
ret
inc
push
add
pusha
inc
in
enter
sbb
adc
jns
mov
push
xchg
inc
xchg
loop
fmuls
loope
mov
push
repnz
xchg
into
cmp
push
cwtl
repnz
loopne
fwait
or
pop
fistl
or
int
push
xor
cmp
cmp
adc
enter
lcall
sbb
sbb
hlt
add
push
pop
js
enter
stos
jb
loop
mov
mov
imul
jbe
mov
jl
adc
adc
shlb
loop
pop
adc
addb
popa
lcall
ja
int
add
shlb
stos
popa
test
pop
enter
fcomps
daa
fmul
pop
adc
popa
add
inc
and
and
xor
jno
insb
scas
fdivr
fnstcw
int
data16
fcmovnu
and
adc
sbb
cmp
nop
test
data16
les
loope
int
or
xor
pop
mov
mov
push
xchg
sbb
popa
loope
adc
push
fimull
jp
test
jbe
sahf
std
into
loop
dec
pusha
clc
dec
jno
frstor
pop
jbe
shll
xor
mov
or
cmp
icebp
shlb
and
sbb
bound
jo
adc
popa
jae
jle
dec
lret
mov
sahf
add
or
adc
ret
mov
and
jg
cmp
pop
addl
sbb
pop
mov
gs
push
dec
push
movb
neg
in
shl
dec
push
sub
mov
push
push
test
mov
cmp
mov
inc
sbb
fxch
sbb
lea
ja
push
push
rclb
in
ret
push
add
fstl
adc
or
xchg
add
nop
add
js
mov
dec
xchg
fcom
lock
cmp
fdivrl
adc
mov
push
push
ret
dec
xor
jg
xor
sub
push
dec
xchg
or
mov
add
push
mov
adc
add
ficomps
jl
repnz
push
pop
or
hlt
sbb
ret
and
out
jmp
ficoms
pop
clc
clc
add
cld
das
ds
lds
cmpsb
and
push
outsl
jo
jne
cmp
or
push
adcl
adc
pushf
sahf
push
aaa
dec
in
rorb
cmp
xlat
imul
jmp
pop
scas
ret
lret
sbb
aam
add
faddp
xchg
repz
mov
aad
mov
push
mov
push
add
pop
cmp
mov
push
mov
ljmp
fildll
mov
and
enter
sub
push
adc
adc
idiv
add
dec
shl
movsl
mov
popa
sbb
icebp
push
pop
jb
jno
lock
pop
subb
pop
jge
push
nop
gs
pop
neg
add
inc
loopne,pt
push
cld
cmp
mov
jo
enter
sub
push
movl
cld
mov
inc
xor
or
lock
aas
jecxz
jl
std
push
lods
mov
inc
adc
jecxz
mov
pop
call
rcll
inc
pop
jecxz
decl
sar
leave
dec
push
inc
sarl
cmp
push
mov
outsl
sbb
xlat
xchg
jae
in
fsubp
mov
or
push
js
shll
pop
enter
pop
ret
lock
add
add
mov
mulb
add
ds
loopne
sub
aad
test
mov
sbb
rorb
sbb
movsb
push
pop
adc
sub
dec
int
negb
aaa
or
lcall
das
xchg
add
jnp
add
notl
pop
inc
sub
repnz
or
jecxz
idivl
arpl
andb
in
int
push
mov
adc
stos
nop
sub
pop
pop
fs
mov
sub
nop
push
or
add
outsb
fsubrl
fld
push
mov
test
rcll
mov
mov
xchg
mov
sbb
adc
dec
and
sub
lock
push
loopne
enter
in
lcall
push
lret
push
mov
jl
mov
push
and
shll
inc
mov
in
mov
inc
rcr
rorl
dec
out
sbb
adc
clc
out
mov
test
outsb
adcb
divl
sub
scas
test
xorb
lea
loopne
or
jecxz
inc
sahf
adc
mov
xor
add
cld
stos
jne
xor
adcb
int
cmpl
dec
or
loopne
dec
xor
push
or
or
add
cmc
mov
outsb
loopne
insl
xchg
add
stc
push
xor
pop
mov
dec
add
fwait
adc
outsb
ljmp
outsb
xor
das
ss
pop
mov
dec
aam
stos
out
das
pop
cmp
and
rcll
or
dec
xchg
push
mov
mov
push
adc
mov
add
cmp
lods
add
mov
fisttpl
jp
dec
dec
movsl
inc
xchg
sti
fdivp
pop
add
call
clc
xlat
or
dec
adc
dec
or
adc
into
stos
sbb
es
test
add
ret
jecxz
scas
mov
add
lret
mov
in
pop
pop
xor
in
pop
dec
xor
movb
adc
outsl
cmp
pop
nop
dec
inc
inc
call
clc
sub
mulb
cmp
xchg
sbb
test
call
cwtl
ljmp
add
orl
sbb
les
cli
jmp
push
popa
push
enter
xchg
sub
dec
sub
mov
sar
jb
std
xchg
test
mov
jmp
mov
fidivs
jo
mov
add
or
push
fucomip
stc
push
and
xor
push
cs
hlt
cmpb
and
cwtl
bound
lret
movsb
and
add
ljmp
jno
sbb
rolb
roll
decl
dec
sub
fwait
daa
xchg
in
cmp
xor
in
and
and
mov
lea
sahf
daa
data16
jg
movsl
std
and
add
in
jb
dec
lcall
je
inc
jg
mov
lds
shll
rcrl
jmp
outsb
push
fnstenv
sbb
movsl
push
mov
sbb
clc
jecxz
xor
xor
sbb
dec
lods
jle
or
cmp
push
lock
sti
fwait
call
lock
mov
pop
decb
in
les
test
add
add
push
or
out
cltd
jmp
mov
int3
sbb
divl
mov
sbb
daa
fildll
lock
or
add
adc
cltd
sub
outsl
mov
xor
push
inc
or
lds
sbb
imul
sbb
movsb
dec
xor
jmp
lock
incl
sub
and
push
popf
add
or
add
adc
mov
sbb
or
xchg
mov
xor
lret
inc
lret
std
jmp
cmp
cmc
or
mov
shl
andb
lea
dec
ror
movsb
jbe
push
or
pop
lock
in
pop
xor
arpl
scas
addb
pop
or
pop
loope
sbb
add
and
or
push
add
mov
jno
flds
mov
cmc
adc
jecxz
mov
inc
daa
cli
iret
mov
sbb
imul
jp
sbb
fildl
add
dec
int
or
jle
mov
lds
mov
push
cmp
mov
jns
mov
or
pop
cwtl
shr
jmp
push
ret
divb
ljmp
mov
mov
leave
cmp
mov
call
adc
pop
repz
xchg
je
cmp
std
add
shl
mov
mov
mov
clc
rclb
lock
gs
mov
insl
mov
inc
ja
sub
xchg
adc
inc
sub
daa
mov
add
xor
subb
add
decl
int3
jne
add
ret
leave
jle
cmpsb
ret
sub
mov
aam
sub
mov
jmp
fiaddl
loop
and
add
mov
xchg
cwtl
adc
cmp
and
fildl
int3
sub
inc
sbb
inc
int
fcmovnu
inc
sbb
mov
shl
mull
push
sbb
fs
mov
stos
pop
jo
insb
inc
mov
addr16
lods
sbb
jnp
mov
jl
loopne
bound
imul
lea
lock
xchg
jl
mov
imul
ret
inc
push
dec
dec
insl
insl
fsts
js
inc
or
sar
out
or
dec
fsts
aas
int3
pop
inc
bound
add
adc
lcall
and
hlt
repz
lods
inc
jae
xchg
jmp
push
aad
mov
cmpsb
data16
int3
clc
mov
push
and
adc
ja
lcall
mov
mov
stos
jp
out
mov
movsl
outsl
xchg
mov
jmp
push
leave
ldmxcsr
shlb
shll
test
hlt
inc
mov
jne
outsb
mov
mov
dec
add
lcall
cmp
xchg
push
out
dec
inc
xor
cld
add
addl
stc
in
sbb
mov
popa
leave
hlt
enter
pushf
aas
gs
jns
cltd
push
pop
clc
jg
xchg
sub
data16
ss
cmc
cmp
pop
sub
incl
loop
xchg
fsubr
cwtl
adc
sbb
ret
or
cmp
jno
dec
mov
and
mov
adc
es
xchg
sub
iret
dec
mov
mov
data16
push
mov
xchg
jg
sub
lods
cmp
repnz
push
adc
add
pop
sub
push
ljmp
fcmovnbe
inc
cwtl
in
into
xor
adc
inc
fisttpll
or
rorb
out
mov
cmc
enter
mov
xchg
lods
dec
shlb
aas
cs
or
mov
mov
aad
xchg
mov
lods
inc
mov
mov
cld
roll
and
jnp
pushl
stos
hlt
loope
and
lahf
jb
mov
dec
xor
inc
mov
cltd
dec
das
fistpll
and
push
add
add
rclb
push
mov
xorl
out
mov
rcrb
fstpt
sub
test
push
add
outsb
push
sbb
push
cs
fucomi
push
add
add
and
bound
test
xor
mov
pop
aas
add
stos
inc
gs
jo
jle
not
push
and
or
icebp
aaa
stos
mov
push
mov
mov
inc
rcll
scas
jp
add
add
jg
inc
inc
sbb
dec
scas
enter
push
xor
in
dec
ljmp
sub
pop
dec
orl
daa
mov
sahf
xor
sub
pusha
sub
push
and
in
aam
aam
mov
dec
add
les
frstor
rcll
cmpsb
lods
sbb
insl
rolb
fistps
je
mov
lcall
sbb
jl
je
add
jno
xor
sbb
cmp
and
mov
mov
call
mov
pushf
psrlw
sbb
jg
aam
push
adc
cmp
xchg
xchg
fiaddl
sub
cmp
sbb
or
lahf
shrl
addb
or
mov
dec
rorb
pop
push
mov
repz
mov
mov
add
xchg
jp
arpl
mov
in
sbb
jge
sbb
loopne
cwtl
lods
inc
mov
and
rcl
add
adc
xchg
shll
and
sbb
push
pop
or
cmp
aam
rcl
iret
mov
inc
fbstp
test
mov
sub
sbb
sbb
lcall
pop
or
mov
inc
dec
push
or
dec
jmp
or
shr
adc
push
pusha
xchg
lds
inc
mov
adc
sub
inc
mov
or
andb
insb
out
adc
rcrl
adc
in
inc
cmp
rorb
mov
cmp
imul
dec
loopne
int
pop
xchg
adc
inc
stos
sbb
int3
aas
movsl
mov
mov
shrl
pop
in
push
adc
cs
inc
jecxz
mov
push
xchg
filds
int
push
int3
test
es
or
mov
mov
test
sbb
and
adc
test
add
inc
and
xchg
shlb
sub
mov
sbb
xchg
add
mov
inc
adc
jbe,pn
inc
adc
sub
aam
pop
in
and
sub
mov
push
add
dec
and
dec
add
aam
ljmp
lahf
test
mov
ljmp
add
lds
stos
push
xchg
jp
pop
arpl
sub
dec
xchg
iret
xchg
jb
stos
in
lcall
mov
in
xor
mov
xchg
push
mov
sbb
pop
shrb
push
rorl
movsl
jne
or
sub
push
imul
pushf
lods
test
cmc
and
lods
leave
or
mov
xchg
rcl
in
loopne
pop
aas
sbb
loope
jle
adc
or
mov
add
je
mov
push
add
ss
div
cmp
faddl
add
dec
mov
jbe
mov
adc
cwtl
add
pusha
adc
nop
add
mov
shlb
scas
mov
pusha
mov
rcl
popf
nopl
or
sarl
sub
fmuls
adcb
cs
cmp
jo
xor
cli
jp
inc
mov
pop
scas
std
bound
lret
imulb
adc
popa
sub
push
or
cwtl
mov
sarb
repnz
sub
push
mov
sub
xchg
jecxz
cmp
sbb
jecxz
ds
hlt
xorb
pop
es
scas
shrl
je
insb
fwait
push
adc
orb
push
mov
push
push
push
jno
rolb
and
call
mov
xchg
imul
lock
fsubrs
fdivrs
ret
cmpsb
ja
ret
or
pop
add
push
mov
dec
out
out
insb
ljmp
add
rolb
add
fcomp
fwait
sub
movsb
icebp
dec
test
cmpsl
sbb
sbb
out
add
ds
pop
dec
mov
mov
aaa
enter
inc
mov
inc
cmp
sub
notb
sbb
add
sbb
fisubs
fisttps
aam
mov
push
fidivrs
loopne
xor
add
cld
lcall
add
shrl
pop
or
adc
inc
and
cs
out
cmp
jg
loope
adc
movsl
pop
jge
mov
dec
repz
cmc
add
add
call
pop
aaa
test
cltd
xchg
idivl
mov
adc
jne
or
int
inc
rorl
sub
jae
pop
fbld
adc
sbb
add
inc
arpl
roll
mov
rorl
mov
or
es
in
inc
and
inc
xchg
mov
sbb
push
fsub
call
or
data16
sbb
adcl
cmpsl
ljmp
les
add
sub
rol
add
pop
out
sbb
dec
push
mov
arpl
loope
bound
cmpsl
in
roll
push
mov
inc
rolb
dec
pusha
inc
movsb
aas
roll
ds
clc
adc
scas
test
or
dec
and
xchg
or
or
movsb
inc
idivb
and
sahf
mov
dec
nop
cmp
loope
xchg
adc
push
call
mov
mov
in
xor
sbb
add
pop
loopne
mov
sti
mov
push
pop
xor
sahf
mov
jp
adc
sbb
incb
push
cmp
xlat
les
sub
icebp
inc
int3
test
fucomp
xor
mov
xor
dec
mov
pop
add
lock
sub
andb
push
shrb
sbb
or
adc
xor
sub
add
daa
rdtsc
add
adc
xor
inc
inc
daa
jecxz
fistps
xor
cmc
shll
add
insl
cmp
push
fucomip
fbld
test
jne
stos
add
shrl
shrl
sar
inc
mov
cld
dec
pop
call
incl
std
mov
fwait
xor
icebp
cmp
dec
add
ljmp
xor
sub
adcb
testl
ss
call
lock
jmp
fs
pandn
das
jne
pop
in
adc
je
add
pop
cli
push
std
mov
sbb
stos
loop
iret
movsl
xor
gs
std
fucomip
icebp
stos
scas
adc
jns
mov
adc
movsl
popf
aaa
push
add
or
call
pop
cmp
add
int3
outsl
je
mov
sub
and
xor
std
enter
mov
fwait
test
pop
scas
mov
dec
sub
mov
pop
rclb
inc
dec
pop
mov
std
mov
test
mov
mov
out
add
aaa
mov
stos
jle
sub
js
adc
mov
add
push
sbb
lret
add
jnp
cli
jl
inc
mov
shlb
push
mov
jb
push
pop
pop
jecxz
out
mov
in
dec
lock
test
add
test
icebp
dec
xchg
push
sbb
stos
clc
sub
mov
adc
jbe
pop
push
clc
inc
inc
sbb
or
in
adc
stos
out
cmp
mov
pushl
xor
inc
stos
sub
cmc
dec
inc
pushf
xchg
cmp
push
add
push
mov
aaa
cmc
ljmp
add
dec
insb
inc
mov
loope
call
add
decl
sbbl
add
pusha
divb
push
scas
das
nop
aam
movsl
hlt
sbb
mov
pushl
pushl
jmp
orl
enter
insl
xchg
or
inc
add
lret
test
test
test
xor
adc
out
leave
fnstsw
nop
loopne
xchg
push
das
data16
nop
sbb
jb
test
aaa
out
pushf
adc
pusha
push
nop
iret
in
pop
or
sbb
mov
insl
jge
cwtl
pop
jge
sbb
lcall
push
loopne
push
pushf
push
push
cmp
add
pop
insl
cmpl
mov
testl
stc
outsb
pop
loopne
inc
jae
pushf
xor
and
in
xor
sbb
mov
inc
pop
push
outsb
push
add
xchg
aam
test
cs
jmp
fsubl
sti
insb
push
cmpsl
pop
add
cmp
lret
and
add
xchg
xchg
push
popa
sbb
cwtl
inc
call
dec
loopne
fcomps
and
pop
inc
inc
aad
fwait
loopne
ret
add
and
sub
adc
sahf
and
xor
push
push
dec
sub
dec
and
pop
fists
arpl
out
jo
inc
sbb
add
adc
push
xor
push
loopne
push
call
push
push
sbb
hlt
jne
cli
subw
repnz
or
stos
or
imull
adc
int3
inc
jae
pop
dec
xchg
dec
mov
pusha
int3
loopne
push
and
in
leave
dec
or
add
movsb
jl
jo
xlat
scas
cmp
pusha
stos
outsb
dec
mov
dec
loopne
jmp
roll
js
adc
mov
out
inc
rcrb
mov
or
sbb
jne
call
jge
fdivrl
in
clc
sub
cltd
rclb
dec
pushf
mov
dec
ret
pop
ret
test
js
lcall
inc
mov
imulb
add
xchg
sbb
lock
inc
xlat
ja
sbb
sbb
add
sbb
ljmp
out
int3
fisubrl
and
or
and
mov
jle
int
xchg
jle
in
rcr
fistl
aam
sbb
roll
add
fmuls
jl
adc
or
subb
out
subb
sub
adc
test
adc
sti
sbb
mov
sbb
fxch
shlb
insb
adc
out
mov
adc
push
dec
xor
add
jb
cmovg
or
inc
cs
inc
xchg
sub
aas
push
mov
cmpsl
fisttpl
push
fisttpl
fwait
in
mov
sbb
andl
fisttpl
or
enter
jnp
mov
out
ljmp
insl
mov
orb
fs
divb
push
mov
inc
std
add
lret
sub
shrl
or
add
fdiv
or
lret
mov
mov
rclb
out
push
cwtl
and
int
adcb
or
xchg
adc
icebp
push
xchg
and
mov
xor
arpl
xchg
bound
sbb
pushf
test
int3
pop
rcrl
test
jmp
pop
and
mov
aad
fiadds
ret
ljmp
sbb
xor
in
imul
xchg
test
int
mov
mov
cwtl
shl
add
call
call
mov
sbb
and
sub
call
mov
call
jbe
sbb
test
insl
or
pop
mov
sahf
mov
cwtl
aam
push
enter
add
pop
in
sti
mov
mov
in
je
push
inc
sti
xor
lcall
gs
mov
inc
fsin
pop
enter
mov
andb
adc
insb
and
xor
mov
test
mov
icebp
enter
push
dec
pop
rcrl
clc
mov
cmp
addb
stc
mov
mov
roll
xchg
adc
mov
shll
call
push
inc
jae
inc
lea
push
or
mov
fdivr
sub
sbb
dec
mov
sub
fidivrl
push
repz
jp
mov
mov
mov
push
cmpsl
mov
enter
and
rorl
loop
stos
sub
add
lcall
mov
sub
jmp
inc
lods
js
mov
inc
rcr
out
mov
aam
pop
aas
mov
decb
filds
add
lea
orl
xchg
push
repz
adc
jg
mov
add
push
bound
mov
sub
mov
add
mov
insl
out
inc
jmp
lea
xor
and
int3
dec
addb
loope
or
pop
or
push
mov
stos
push
and
and
ror
das
add
add
adc
mov
test
lock
jp
insb
outsl
fstl
xchg
sub
push
jg
sbb
push
dec
outsl
in
add
adc
add
cltd
mov
add
pop
addl
mov
adcb
movsl
xchg
jno
cmp
in
repnz
jns
cmp
adc
dec
adcl
decl
in
xor
aad
inc
lods
insl
int
cmp
push
lahf
and
inc
out
fisubrl
sub
cmpsl
mov
push
mov
fisttpll
pop
popa
je
test
cmc
fucom
add
int3
loopne
outsb
mov
aad
rcll
dec
jbe
lods
lcall
push
out
push
inc
jb
fistpll
or
xchg
testl
add
jp
cmp
mov
mov
pop
adc
add
pop
xor
xlat
cmp
fcompl
ljmp
pop
sub
sub
int
inc
inc
ret
ret
cmc
xchg
mov
cmp
cmc
and
fs
nop
pushf
add
shrb
or
jns
mov
insl
data16
dec
out
imulb
insb
rorb
pushf
mov
sahf
nop
sub
roll
fists
rclb
mov
mov
mov
or
jns
popf
adc
insb
mov
or
push
lea
stos
rol
loope
or
adcl
movsb
add
or
cmp
das
xor
sbb
add
cmpsl
jecxz
xchg
les
aam
push
sbb
clc
adc
out
inc
mov
pop
xor
xor
pop
fmull
push
shrb
out
add
loopne
fbstp
cmc
add
xchg
fs
and
shrb
mov
lcall
cli
test
popf
pusha
insl
lcall
cli
mov
mov
or
popa
nop
add
push
push
fiadds
lahf
in
pop
clc
pop
test
pushl
leave
pop
int3
outsl
jnp
cs
dec
sbb
clc
pop
xor
mov
or
mov
or
and
out
or
rcrl
mov
fistpl
add
mov
out
ret
fisubrs
push
push
movsl
les
adc
lret
in
cmp
mov
pop
sahf
add
cmp
xor
mov
lret
fisubrl
mov
mov
iret
inc
dec
xchg
fistpl
loop
cmc
test
stc
jno
movsb
mov
cmpsl
rcrb
inc
out
orl
add
pop
lahf
rcl
and
sarl
fiaddl
loop
cmpsb
filds
fists
cmp
mov
das
jle
sar
rol
mov
and
xor
icebp
dec
data16
cmp
pop
test
fcomip
daa
add
mov
lds
mov
push
fucomip
jg
lds
adc
stc
adc
jp
mov
das
push
adc
xchg
imul
scas
push
jge
and
adc
es
addb
testb
ret
je
lea
inc
leave
push
ret
insl
or
test
loope
xchg
push
stos
push
xor
mov
insl
shlb
pop
lcall
loope
scas
rcll
enter
adc
add
pop
hlt
pop
fmul
dec
push
adc
jge
ljmp
xor
jns
inc
iret
push
sbb
ja
cmp
insb
and
das
std
adc
faddl
dec
cmp
rol
shl
lock
decl
popf
inc
and
mov
test
cmp
xchg
lcall
mov
mov
je
cli
bsr
out
sbbl
insb
add
lea
push
push
shlb
repz
das
add
sbb
repnz
add
outsl
std
dec
out
lock
add
jecxz
push
addb
test
mov
adc
daa
test
lcall
inc
scas
aas
mov
data16
pop
hlt
dec
jg
call
push
pushf
and
rcrb
xor
dec
and
cmp
outsl
inc
mov
subl
xchg
mov
push
sub
push
cli
ja
insl
inc
sbb
stc
lods
aad
dec
ljmp
xchg
pop
add
mov
arpl
rolb
call
push
pop
fcomp
add
int
cmp
rcrl
mov
xor
mov
cs
xchg
xchg
imulb
lds
and
loop
loopne
sub
mov
cmc
jo
aaa
data16
daa
and
pop
dec
mov
sbbl
and
dec
or
jmp
loope
mov
aas
and
xor
ret
mov
push
and
sbb
repnz
lcall
push
mov
cwtl
aad
js
xchg
mov
inc
pop
icebp
jns
mov
sbb
in
inc
jns
fidivl
lods
jo
ljmp
lods
out
insb
add
in
push
mov
mov
lret
out
hlt
pop
adc
push
clc
aas
sub
xchg
out
or
call
dec
or
loopne
pusha
adc
dec
outsl
std
repz
pop
mov
or
or
pop
ljmp
out
xor
lods
shll
fsubrl
adc
jo
sub
pop
cli
mov
enter
inc
sar
fstps
in
push
push
add
xchg
fwait
xchg
repz
mov
add
ret
fmul
lcall
sahf
movsb
scas
inc
test
mov
mov
lods
je
mov
inc
and
inc
rolb
popf
sub
mov
je
mov
enter
lahf
inc
loop
testb
std
mov
mov
or
adc
insl
xchg
sar
incl
fldt
sahf
pop
lcall
addr16
es
mov
cmp
push
dec
adc
jmp
sbb
and
dec
lcall
jbe
mov
iret
stc
ficoml
adc
mov
lahf
sarl
rcr
add
enter
ljmp
incb
sub
iret
sbb
mov
mov
add
pop
mov
sbb
mov
pop
add
sbb
push
testl
and
fsubr
xchg
inc
div
mov
ret
xor
add
cmpsb
add
push
sbb
push
scas
and
into
xlat
sbb
add
dec
sbb
push
inc
or
fwait
les
std
add
stos
lahf
mov
or
in
enter
or
imul
xchg
sub
pop
push
cs
jbe
add
int
push
dec
adc
inc
int
in
and
or
inc
xor
push
mov
in
testb
call
fstl
ret
call
mov
lock
hlt
rorl
or
fsubl
shl
sbb
jb
mov
or
fisubs
fldenv
ficoms
pop
xor
test
popf
pop
xor
inc
xor
inc
fcmovnu
xor
jnp
nop
or
add
sub
cwtl
sub
outsl
test
out
stos
mov
add
xor
add
call
push
cmp
mov
jmp
mov
adc
add
push
mov
shlb
xchg
iret
mov
ss
pusha
addb
insl
push
mov
or
notl
and
dec
jg
mov
sub
loopne
les
xor
push
test
mov
pop
nop
mov
inc
jle
add
lcall
sbb
xor
or
xchg
sbbl
jp
cmp
sarl
sti
leave
inc
imul
sarb
push
call
jg
jo
into
stos
xor
scas
push
lock
or
dec
test
or
cmc
mov
inc
pop
mov
push
inc
sbb
mov
ljmp
test
aad
mov
in
inc
and
call
pusha
jns
and
or
mov
mov
adc
aas
cbtw
jp
jo
xchg
mov
mov
and
lret
fcmovu
push
sbbl
jecxz
pop
xor
push
or
jge
xchg
and
pop
adc
pop
popf
push
xor
add
jge
adc
dec
ficompl
mov
das
js
popa
imul
mov
loopne
dec
mov
and
arpl
xor
xchg
ret
loopne
in
shr
xchg
mov
aad
lcall
jg
jg
inc
neg
lret
pusha
orl
jecxz
cs
loope
sbb
adc
adc
imul
push
lea
push
call
shrl
pop
xchg
in
popa
scas
mov
fcomps
leave
call
or
jo
dec
sahf
jb
pop
shlb
lahf
rcll
jecxz
adc
push
inc
xchg
mov
inc
roll
inc
mov
mov
add
jle,pn
xlat
xchg
xor
lidtl
sbb
cmp
nop
fcomps
push
or
mov
push
cmp
and
jge
lds
cwtl
add
pop
mov
lock
add
loop
adc
sbb
ret
ss
out
pop
aam
adc
ja
pusha
and
ss
xor
pop
jb
mov
outsl
and
mov
es
mov
or
pop
xchg
sahf
mov
and
pop
and
mov
inc
and
add
dec
fbld
add
inc
adc
adc
and
fsubrs
test
pop
sub
cmpl
push
sbb
int3
rorb
mov
or
dec
mov
aad
jne
inc
ficoml
dec
aam
lahf
add
push
xor
push
mov
jge
xor
addr16
push
fildl
sbbl
add
lods
fwait
insb
lret
push
lcall
jp
push
cmp
mov
sub
lret
sarb
adc
rcrl
jl
xor
lcall
test
jno
push
or
cs
xor
fnstsw
lock
lahf
jl
lret
sub
add
aad
push
gs
xchg
iret
mov
sbb
loopne
cmp
add
dec
xchg
out
or
inc
dec
ss
les
clc
xor
insb
dec
lcall
shlb
xor
pop
add
push
pushf
push
lock
es
popa
fcom
jnp
xchg
xor
mov
sbb
add
fstps
loop
xchg
test
int
jno
add
add
loopne
fisubl
push
xor
or
adc
inc
rclb
dec
sbb
inc
and
sub
or
xor
enter
adc
dec
out
and
or
sbb
sbb
mov
add
ret
mov
adc
mov
jb
push
mov
pusha
push
pushf
mov
shll
arpl
in
sub
lahf
xor
mov
mov
mov
jbe
addr16
sarb
or
pshufw
cmp
lods
add
or
jns
push
mov
pusha
inc
xorl
negl
nop
les
scas
sub
sbbb
insb
popf
cltd
xor
ficompl
out
adcl
enter
mov
dec
adc
or
mov
sbb
add
mull
add
or
push
test
adc
mov
sbb
sbb
sbb
and
mov
xor
ret
paddb
daa
xor
andb
mov
inc
add
dec
les
pop
push
mov
addr16
dec
add
clc
or
iret
outsl
mov
or
add
pop
insb
push
jge
add
mov
jecxz
shrb
add
fidivrl
loop
dec
lds
push
shll
sbb
fsubrl
pushf
add
sub
adc
mov
mov
movsl
or
les
or
mov
pop
xor
loopne
jp
jno
loopne
cmp
call
push
hlt
fldenv
inc
in
or
inc
and
push
lret
stc
sub
add
push
pop
inc
dec
popf
lret
les
incb
std
xchg
sub
frstor
mov
xchg
add
adc
int3
add
xchg
loope
pusha
inc
sub
xchg
repnz
pop
xlat
inc
stos
dec
add
inc
mov
pop
jae
sbb
xor
jl
cmc
cmp
insb
or
push
sbb
stos
push
hlt
arpl
dec
push
add
sub
cmp
aaa
jne
js
push
jle
jge
fstpl
in
or
insl
add
xor
cwtl
adc
mov
pop
cwtl
xor
dec
sbb
mov
incl
inc
cld
incl
test
or
inc
xor
sbb
das
sub
pusha
push
ret
push
add
aam
sbb
sbb
out
or
and
push
je
adc
das
fistps
inc
add
add
lea
xchg
into
add
add
add
mov
adcl
lods
shl
add
or
pop
jle
xor
push
hlt
jl
cmp
data16
mov
push
and
cltd
add
add
inc
lock
shrl
outsl
add
lret
sbb
jp
mov
clc
enter
stc
push
mov
xor
jae
jbe
or
repz
inc
or
inc
imul
arpl
into
xchg
sub
pop
shlb
repz
icebp
lret
mov
in
scas
add
insl
or
mov
jns
mov
mov
adc
fnsave
sub
xchg
pop
pusha
mov
pop
add
stos
imul
roll
in
lcall
aaa
inc
push
jb
add
pop
outsb
sub
push
xchg
bound
mov
pop
mov
sub
mov
add
jbe
pop
daa
dec
nop
xchg
mov
js
cld
pop
fisubl
add
lock
adc
lods
test
lret
push
sbb
daa
bound
daa
sbbl
mov
cltd
mul
xchg
mulb
pop
cmc
shll
sbb
ret
jg
std
aam
cmp
pusha
jl
cmp
shlb
ljmp
andl
lcall
fsubrl
pop
int
jmp
ficoms
pop
js
loop
mov
and
pop
outsl
fstpt
orl
nop
sub
lock
test
insb
jmp
push
aas
lds
cwtl
mov
dec
xchg
push
jb
iret
imul
jl
push
jl
push
sub
outsb
ret
and
pop
js
ljmp
cmp
aad
popf
ds
rcll
ds
aaa
outsb
sbb
out
inc
pusha
mov
add
dec
lds
and
in
xor
out
mov
pop
icebp
push
in
push
je
jmp
aad
xchg
push
pop
packsswb
push
xchg
pop
push
movsl
dec
popa
jnp
mov
sub
enter
bound
mov
pop
fwait
sbb
rcll
clc
dec
dec
icebp
adc
subl
leave
aas
and
subb
pop
pop
sub
jno
mov
or
je
out
pushf
arpl
mov
negb
call
orb
or
mov
std
mul
rclb
lret
repz
or
adc
and
add
outsl
call
int3
cwtl
dec
xor
ret
mov
jbe
jno
icebp
es
pop
adc
orb
incb
iret
sbb
subl
cmp
cli
fbstp
daa
pushf
mov
ljmp
mov
lock
cmp
xchg
subl
pop
pop
add
add
mov
mov
inc
xchg
add
jne
shufps
dec
mov
lock
addr16
iret
test
adc
adc
inc
icebp
addb
inc
call
jo
push
mov
test
push
in
xor
xlat
pop
outsb
push
sub
cld
and
or
lock
adc
cwtl
add
mov
jg
enter
push
adc
sti
push
pop
and
or
add
jo
add
xchg
lock
add
aaa
leave
ljmp
loop
sbb
sahf
adc
and
loop
push
push
pushl
repz
jp
ret
sub
and
add
das
adc
add
movsl
pop
outsb
enter
push
mov
movsl
sub
sbb
testl
mov
mov
mov
xor
fimull
ret
push
cmpsb
stos
or
cmp
sub
or
cld
lahf
inc
sbb
lea
adc
test
loopne
mov
xchg
shll
mov
gs
cmp
push
aam
fwait
mov
mov
add
orb
xchg
pop
sbb
mov
adc
and
xor
nop
call
ss
loopne
cmp
mov
or
outsl
jno
pushf
jmp
imul
adc
or
stos
push
push
xor
shrl
mov
and
je
mov
decb
mov
lds
xchg
dec
dec
sbb
sbb
cltd
xchg
stos
xor
pop
loopne
push
out
sub
scas
lret
and
push
xchg
push
insb
add
je
push
movsl
pop
push
jge
pop
push
xchg
sub
cwtl
push
and
das
pop
mov
xchg
adc
loopne
mov
lea
les
cld
push
pop
jae
inc
lods
lea
push
sar
jmp
jg
inc
xchg
xor
insl
push
cltd
or
xlat
pop
xchg
out
lcall
mov
mov
push
sbb
in
inc
sti
outsl
jbe
incb
outsl
xchg
pop
mov
inc
or
fistl
incl
push
shl
adc
fistpl
sub
and
adc
sbbb
lahf
cld
decl
jecxz
mov
push
roll
les
add
dec
sbb
addr16
xor
cmc
xchg
movsl
dec
pop
int
inc
jl
pop
inc
imul
outsl
std
es
xchg
mov
test
imul
enter
popa
daa
in
loop
jp
aad
and
push
mov
push
adc
jp
mov
adcb
adc
or
add
cmp
les
push
push
ljmp
pop
je
jmp
ret
inc
out
lods
hlt
and
int3
test
mov
jmp
jp
insb
mov
nop
ds
xlat
and
mov
fisubs
shrl
mov
mul
incl
insl
dec
cmp
ds
push
mov
das
mov
jg
pushl
mov
and
xchg
mov
cltd
mov
aas
scas
pop
or
push
add
inc
out
adc
jge
mov
push
xchg
mov
test
xor
repz
dec
scas
push
dec
dec
and
jle
push
and
jp
adc
jne
aam
out
addr16
icebp
notb
xchg
sub
mov
sbb
in
dec
sti
adc
insb
aam
insb
mov
iret
inc
mov
fisttpl
dec
sub
shl
mov
hlt
data16
mov
stos
sub
or
push
mov
icebp
mov
and
in
lods
lea
aaa
call
xchg
add
sti
in
sub
and
std
aam
sbb
int
loop
xchg
mov
rclb
nop
inc
mov
int
test
in
mov
nop
pop
push
gs
movl
stc
scas
leave
xor
mov
clc
dec
jno
pusha
inc
stos
ja
cmp
iret
mov
insb
imul
mov
cmp
mov
lahf
and
fnsave
int
and
addl
fsub
cmc
cltd
add
xchg
mov
sub
sub
rcrl
cli
movsl
and
and
or
xchg
add
fwait
ja
cmpsb
lea
dec
adc
imul
cmp
hlt
lods
js
cmp
bound
xor
and
mov
test
jl
jg
adc
adc
cmpsb
stos
clc
or
push
test
inc
mov
cmpb
push
int3
mov
dec
inc
add
insl
and
xor
ss
aam
mov
dec
adc
fistl
notb
push
push
cmp
push
pushf
cmp
js
outsl
mov
xor
mov
sbb
ror
or
aas
push
fbld
push
in
mov
add
fs
dec
gs
mov
fsubrl
push
cmp
gs
hlt
movsb
fbld
or
and
ud0
lcall
dec
mov
xchg
push
xor
mov
xchg
rcrl
into
popf
push
sbb
jae
iret
mov
stos
dec
ret
cmpsl
mov
or
repz
mov
das
jno
sbb
stos
incl
or
dec
pop
lods
mov
add
sbb
cmp
sub
jbe
xchg
jne
repz
cli
mov
inc
in
push
cmp
filds
xor
ds
pop
data16
cwtl
cmp
add
jge
test
cmpb
inc
cwtl
aad
test
mov
and
stos
fcomps
sbb
dec
jmp
jg
call
add
mov
sub
jmp
add
sbb
sub
xor
loope
mov
test
test
push
dec
inc
xchg
nop
jle
mov
shlb
or
es
jno
and
xor
lock
hlt
and
dec
sti
jns
nop
mov
rolb
gs
mov
sub
sub
ffree
lods
mov
dec
mov
out
dec
aaa
mov
pop
out
mov
sbb
cmp
arpl
or
test
cmc
mov
dec
mov
add
add
jns
and
jg
jmp
scas
add
mov
push
popf
adc
add
push
mov
xchg
ds
inc
adc
mov
aam
pop
lret
mov
push
mov
mov
ss
pand
push
and
dec
inc
lahf
arpl
jle
add
test
or
andb
xchg
inc
add
fcomps
cmp
fcoms
xchg
mov
inc
fwait
push
jne
mov
inc
js
mov
clc
add
rclb
and
daa
dec
jl
xorl
add
and
cld
sub
fcomp
add
add
cmpsl
push
rcrb
or
jl
int3
cmpb
add
inc
stc
lret
loopne
das
call
push
icebp
sub
xor
mov
push
ja
sarl
fwait
add
xchg
adcb
insb
xchg
inc
adc
mov
and
into
push
ds
daa
push
adc
inc
out
dec
pushf
cs
mov
jno
std
iret
and
jmp
out
fiaddl
add
movsl
cmp
es
or
roll
ljmp
lds
loop
fsubs
cmp
scas
mov
scas
out
sbb
xchg
inc
imul
sbb
jmp
push
fsubs
std
lods
inc
sbb
sub
xlat
or
arpl
stc
push
mov
xchg
push
jno
cmp
add
in
test
repnz
movsl
adc
mov
pop
and
insb
in
rcll
inc
mov
repz
int3
or
fldenv
or
pop
std
stos
add
xchg
imul
or
push
and
sbb
in
inc
and
bound
inc
cli
and
adc
cmp
push
rorl
hlt
int3
roll
out
push
mov
and
mov
or
int3
in
int3
loop
push
in
sbb
push
aam
or
lcall
pop
jno
dec
xor
jnp
adc
add
adc
add
hlt
sbb
sbb
cvttps2pi
data16
in
push
xchg
adc
push
lret
mov
iret
int
jg
lds
test
fstpl
cltd
jbe
insb
popa
inc
cli
lcall
sti
and
sbb
add
mov
add
cs
push
ss
lahf
imul
xorb
pusha
adc
les
push
imul
outsb
fbstp
rclb
bnd
loop
stc
sbb
cs
pop
mov
and
cmp
popa
lds
out
loopne
aas
push
xor
cli
sub
push
mov
add
pop
in
and
jl
repnz
push
shlb
test
rol
and
insl
call
jge
je
add
insb
daa
xchg
jp
test
lock
push
mov
in
add
dec
and
aaa
pop
ds
mov
fildll
adcl
repz
mov
xor
push
sub
pop
and
stos
aaa
pusha
test
fnstsw
popa
lds
subl
pop
mov
ret
mul
mov
subl
push
cmc
mov
mov
dec
inc
es
pop
cmc
add
repnz
add
adc
xchg
movsl
push
mov
fistpl
lds
lds
outsb
inc
dec
jnp
mov
mov
pushf
push
mov
shlb
or
mov
arpl
mov
in
ljmp
test
sub
fs
xchg
in
call
cwtl
jle
insb
addb
mov
fistpl
and
das
inc
stc
cmpsb
std
test
mov
stos
mov
jbe
add
popf
add
inc
push
mov
jl
loop
jae
icebp
sbb
cmpsb
fs
sub
leave
xchg
aaa
ret
test
or
add
or
mov
pop
pop
clc
iret
ror
je
sbb
pushl
test
and
aas
jcxz
repnz
je
cmp
test
fsqrt
jmp
mov
lret
and
sbb
inc
adc
ret
mov
pop
icebp
loopne
mov
pop
popa
push
jne
fwait
mov
stc
loopne
mov
mov
pop
ret
sbb
das
sub
ss
ds
and
aad
clc
pop
push
jecxz
mov
ret
add
mov
mov
and
sub
mov
call
into
cmp
call
outsb
popa
sti
inc
test
scas
rcr
or
mov
cmp
sub
lods
lcall
ja
test
rol
inc
ds
mov
dec
aam
div
in
call
sbb
scas
or
imul
fdivrp
divb
cwtl
inc
dec
mov
cmp
dec
pop
jg
mov
pop
push
sbb
push
mov
mov
cmp
repnz
scas
xor
shll
mov
adc
fstl
lods
inc
movsl
nop
mov
daa
outsb
pop
jecxz
in
mov
mov
pushf
cmpsb
cmc
fisttpll
mov
out
pop
jne
sbb
or
mov
sbb
std
outsl
in
xor
jmp
cli
pop
aam
xor
paddq
cwtl
inc
sbb
xor
cs
rorb
adc
or
in
pop
xchg
inc
lds
pop
push
add
int3
sub
xlat
out
inc
das
stos
push
push
or
rcll
push
aaa
or
adc
pushf
mov
movsl
outsb
jmp
repz
pop
push
mov
out
cmp
push
imul
ret
jns
lret
icebp
ljmp
adc
je
addr16
fsubrs
mov
in
test
jb
clc
xor
xchg
into
in
lock
sbb
hlt
inc
js
cmpsl
and
in
popf
pop
inc
cmpsl
add
dec
addb
mov
clc
imul
push
and
xchg
inc
or
adc
fnsave
sbb
loopne
or
sub
mov
ret
sub
xchg
push
or
call
pop
pop
xchg
mov
cmp
push
inc
mov
add
adc
add
es
mov
stos
ficoms
or
lock
pxor
pop
push
push
xor
aas
ja
pop
xor
push
sbb
inc
in
in
or
add
pusha
popa
xchg
and
dec
ja
pop
adc
add
fiaddl
sub
shrl
push
bound
cmpb
mov
adc
inc
loopne
ja
mov
inc
in
adc
push
in
sarb
sbbb
inc
xorl
xlat
mov
dec
or
je
add
test
and
pop
mov
push
mov
jae
or
cmp
aam
or
rcr
mov
inc
mov
and
cmp
and
or
mov
dec
mov
shrl
call
push
das
pop
or
adc
push
test
fs
ljmp
cmpsb
popa
inc
pusha
or
test
adc
and
sbb
lahf
rorl
sbb
add
sbb
incl
addb
test
repnz
cld
in
push
or
xor
sub
lods
xchg
fcomps
rcrl
movsb
and
sub
push
sbb
incl
lcall
xor
andl
stos
mov
push
rcll
fnstsw
and
int3
stos
and
jp
mov
or
lret
sbb
and
pop
jp
sub
cmpl
inc
push
push
mov
xor
push
aam
jns
mov
lods
mov
mov
rorb
pop
enter
les
lahf
mov
call
or
sub
jmp
mov
fisttpl
or
int
xchg
xor
add
out
mov
stc
jg
decl
fiadds
pusha
subl
add
mov
sub
jp
jle
iret
dec
push
fsubl
cld
loopne
adc
push
cwtl
xchg
adc
call
or
adc
mov
adc
mov
lret
xchg
ja
sbb
push
add
cli
jg
add
push
jg
mov
test
adc
das
add
adc
cmpsb
and
push
lcall
out
or
pop
cld
test
aaa
or
adc
and
adc
mov
inc
in
lock
mov
mov
xchg
and
dec
mov
stos
cmp
dec
add
sbb
mov
mov
push
ja
nop
inc
adc
push
cmp
aad
cld
decl
adc
iret
jo
test
ret
mov
subl
cmp
jecxz
cli
test
and
jg
mov
xchg
ret
push
loop
icebp
sbb
mov
scas
enter
push
inc
xchg
cli
mov
push
inc
sti
pop
jl
sbb
icebp
dec
mov
push
lock
call
mov
test
or
or
mov
addb
inc
xor
sbb
scas
rcrb
add
jecxz
jmp
lods
and
mov
mov
jno
ss
add
push
aam
xchg
xor
rcl
inc
inc
or
mov
shl
lret
nop
add
mov
inc
jbe
pop
mov
jge
pop
fistpl
loop
int
pusha
loopne
mov
inc
pop
lcall
push
inc
and
lods
xor
sub
stc
mov
add
fmull
js
mov
adc
cwtl
inc
sbb
pop
sbb
jno
push
in
add
je
or
shlb
or
lods
inc
aaa
adc
loopne
sbb
outsl
xlat
jmp
and
outsl
jge
push
mov
mov
or
mov
and
es
leave
xchg
dec
mov
adc
ds
or
fldt
add
ret
int
aas
jg
aam
movsb
mov
push
adc
lea
mov
test
add
pop
ja
dec
pop
mov
pop
addl
sub
sub
pop
addr16
cld
hlt
jg
bound
mov
mov
loopne
push
or
mov
cmpl
fisubl
ret
inc
cmp
mov
xlat
mov
or
xchg
pop
mov
stc
sub
add
adc
and
pop
xor
pop
adc
sbb
cmpb
fsubl
fxch
daa
pop
adc
inc
jno
pop
addr16
mov
lret
mov
pop
push
mov
xchg
inc
lea
jge
add
adc
add
mov
add
push
mov
or
inc
pop
pop
adc
push
xchg
fidivrl
push
dec
jns
repnz
mov
or
jbe
aaa
pop
jbe
and
or
rcrb
jns
mov
jo
popa
scas
push
adc
adc
jle
pop
pop
lods
pop
les
rol
insb
add
xor
je
xchg
out
dec
outsl
xor
call
adc
repz
add
jge
lcall
jmp
mov
cmp
dec
jno
jl
arpl
mov
sub
insb
sub
rcrb
mov
sub
mov
fwait
inc
xor
mov
pusha
repnz
es
mov
or
or
mov
mov
sub
cmc
add
movsb
mov
push
add
sub
and
ret
mov
xchg
inc
cmpb
xor
xchg
popf
push
les
incl
gs
xchg
shrb
adc
test
push
ljmp
lock
outsb
sar
mov
or
mov
dec
icebp
andb
and
pop
outsl
cmpsl
lret
add
lods
jle
in
ds
lahf
sahf
inc
and
xchg
dec
mov
aam
call
and
jns
jp
add
mov
and
lods
mov
and
nop
mov
in
addl
pop
or
push
clc
jno
mov
mov
std
in
dec
pop
dec
andl
or
inc
jnp
jne
pop
rorl
out
inc
addr16
cmp
push
sbb
and
shlb
cs
insb
xchg
ljmp
mov
or
loop
mov
inc
sahf
mov
add
sub
jno
pop
mov
rolb
jns
es
shll
mov
incl
mov
push
jno
out
imul
insl
shll
cmp
xchg
lcall
adc
stc
out
sbb
out
pushf
sub
adc
fcomps
jb
pushf
pop
out
and
push
inc
std
dec
cmp
call
mov
test
pop
adc
push
add
add
or
add
sub
ss
arpl
inc
mov
fcmovne
xor
cltd
jbe
dec
cmc
frstor
ja
pop
sbb
shll
and
lock
rcll
inc
pop
lock
test
fsubl
fsts
mov
stc
add
xor
or
adc
adc
pusha
aad
mov
aad
insb
adc
or
pop
clc
dec
adc
push
push
and
mov
mov
mov
rorl
mov
jl
test
adc
dec
jae
xchg
pop
fwait
sub
and
in
decl
jecxz
mov
stos
out
mov
stos
cli
lret
cld
outsb
mov
dec
shrl
cmpsl
adc
adc
jg
and
add
shlb
push
insl
scas
mov
inc
pop
pop
sub
hlt
jne
mov
and
cmc
inc
je
addb
jae
fstps
and
aaa
jmp
in
call
in
sbb
mov
fs
lcall
and
push
addb
add
inc
aas
icebp
incl
insl
ret
sub
rcll
xor
push
and
dec
es
loopne
xor
out
adc
mov
pop
xor
push
cmc
push
mov
imul
insl
push
out
pop
loop
jne
adc
cs
mov
lds
mov
xor
aam
mov
iret
adc
jle
xchg
or
adc
and
sub
adc
push
enter
movsb
or
int3
add
xor
mov
mov
loop
push
repnz
inc
in
xchg
push
push
add
dec
push
lods
pushf
rolb
inc
sub
test
pop
shrl
cld
sbb
data16
cwtl
inc
xchg
jnp
les
xchg
sbbb
lds
insb
push
gs
mov
inc
dec
add
push
shlb
shrb
rolb
adc
mov
add
incl
jnp
orl
mov
out
mov
pop
mov
sub
adc
adc
mov
pop
movsl
mov
sub
pop
or
dec
jge
pop
les
les
and
xor
enter
out
dec
int3
test
xor
add
inc
push
icebp
in
dec
aad
loop
mov
xor
call
sbb
cmovns
inc
and
sbb
stc
out
cmp
xchg
insb
incl
xchg
mov
mov
xor
xor
mov
stos
jbe
or
mov
loopne
ffreep
push
push
sbb
dec
push
inc
mov
stos
cmp
add
orb
jnp
add
pop
jo
mov
daa
push
push
or
mov
push
std
lret
push
add
out
push
push
daa
adc
nop
xchg
call
pop
leave
ljmp
lret
add
sti
or
loopne
or
imul
test
inc
test
xchg
vcvtsi2sd
les
or
in
mov
mov
cmp
adc
mov
movsl
js
loopne
iret
xor
dec
push
std
add
ja
and
jno
or
add
mov
adc
add
adc
shll
sbb
and
add
xorl
or
hlt
inc
jl
push
pop
cmp
cmp
push
add
subb
int
and
push
repnz
cmp
ret
test
xchg
dec
gs
sbb
mov
loopne
push
adc
lret
xorb
add
sub
mov
jo
sub
roll
add
pop
jbe
lret
xor
hlt
xchg
and
idivb
mov
fidivs
lcall
push
mov
mov
lds
imull
xor
mov
cwtl
popa
sbb
sub
scas
mov
cwtl
xor
insb
cmpsb
ret
pop
xor
fs
push
push
cld
cli
cld
cmp
into
and
jb
loopne
call
insl
fisttpl
out
mov
or
mov
js
das
xchg
movsl
addl
or
bound
pop
mov
into
and
icebp
cmp
push
adc
add
jp
adc
cwtl
icebp
push
push
testb
jle
add
mov
sbb
movsl
and
push
sub
inc
cld
adc
rcrl
xor
sub
dec
inc
outsl
or
push
shl
inc
out
adc
add
test
push
sub
xchg
fadds
xor
pop
add
sti
cmp
adc
hlt
add
mov
and
adc
and
push
out
lcall
fadds
divb
dec
mov
mov
sbb
ffree
adc
insb
sub
insl
shl
push
loopne
push
sbb
jg
xchg
or
sub
adc
adc
ficoml
stc
and
sbb
sbb
in
mov
test
xchg
xchg
sub
push
pusha
mov
mov
test
add
jb
sbbl
jo
stos
mov
xchg
mov
aaa
sub
xchg
mov
push
or
and
rcrb
dec
inc
sub
call
mov
mov
mov
jmp
xor
les
ret
aaa
test
xor
inc
pushf
sub
lock
hlt
mov
jne
pop
fildl
add
lret
hlt
cli
adc
mov
mov
and
fsub
icebp
dec
xor
in
pop
aam
test
fldt
and
ds
roll
sub
mov
int
mov
out
inc
cmp
fisttpl
or
ja
jns
xchg
adc
mull
in
test
test
cld
add
insb
mov
sub
in
push
outsb
loope
clc
fisttps
in
fsubrs
lds
add
call
dec
enter
jno
push
ficoms
push
insl
aas
mov
xor
andb
push
sub
push
dec
fdivrs
fldl
or
push
xchg
popf
jno
inc
lods
or
cwtl
lahf
push
pop
cmpsb
mov
pushl
mov
add
mov
cmp
pcmpgtd
jne
inc
pop
adc
add
out
faddp
fwait
mov
lret
jae
push
adc
add
leave
push
into
gs
cs
in
fs
test
jne
or
mov
mov
adc
add
ret
outsb
test
adc
rcrl
xchg
insl
stc
sbb
notl
adc
adc
scas
inc
xchg
mov
sbb
sbb
sub
mov
cmp
jo
movsb
dec
fimull
dec
test
repz
jnp
adc
push
cmp
orl
dec
pop
jnp
sbb
sub
push
mov
and
mov
xor
sub
sub
scas
repnz
js
loop
sti
aam
das
fadd
mov
loope
sbb
sub
cmp
mov
movl
jmp
out
push
inc
mov
and
call
inc
cmp
jg
mov
inc
loopne
jae
ret
jecxz
int
mov
add
or
aam
sbb
mov
lds
rol
and
push
icebp
xchg
in
std
testl
or
or
cmp
je
cmp
cld
cmp
pop
xor
pop
rorl
pushw
adc
sbb
pushf
add
adc
and
xor
loop
sub
xor
sub
xorl
leave
cmp
pop
xor
push
js
xor
lock
pushf
add
loop
rorl
in
push
jne
fstpl
adc
cmp
lods
cmp
pop
inc
xor
push
aam
xor
addl
jne
xor
dec
adc
add
jge
pop
mov
add
and
ffreep
leave
arpl
pop
addb
andb
adc
leave
inc
pop
jmp
cmp
add
and
ret
mov
sbb
mov
andl
adc
sbb
add
or
data16
dec
cli
dec
insb
adc
mov
sub
inc
adcb
das
inc
xchg
mov
cld
sbb
adc
xchg
inc
push
repnz
aaa
mov
aam
add
or
mov
push
int
push
sti
or
outsl
push
jmp
dec
sbb
pop
add
add
call
push
sbb
adc
and
lcall
and
int
push
je
or
mov
or
out
push
loopne
sbb
loopne
dec
jbe
push
testb
xchg
nop
test
pusha
sub
inc
call
mov
les
adc
cltd
inc
xchg
pop
out
mov
sti
and
shll
push
inc
mov
imul
add
ror
mov
insb
and
cli
jecxz
sub
jno
outsl
mov
sub
jb
cmp
mov
inc
add
sub
mov
bound
mov
stc
adc
clc
push
push
in
add
nop
mov
push
jge
adc
or
aad
pop
mov
repz
enter
pop
lretw
cmp
jns
inc
sub
lock
inc
lds
mov
mov
xchg
popa
mov
add
mov
dec
scas
jae
and
adc
mov
sbb
xor
sahf
mov
pop
xor
and
push
inc
repnz
in
cmp
push
push
or
cli
inc
add
cmp
ljmp
cmp
mov
popf
cld
or
call
inc
mov
pop
or
test
sbb
js
mov
add
push
pop
stos
lods
adc
jns
test
lock
jb
and
mov
imul
lods
fisttpl
pop
lret
push
out
push
mov
aam
xchg
push
xchg
pop
stos
cmpsb
enter
es
bound
add
or
insb
adc
or
sbb
test
mov
cltd
loopne
xor
repz
inc
or
xchg
and
or
fisubrl
pop
mov
sub
pop
mov
cwtl
xor
lock
and
fmul
into
bound
jnp
push
mov
fildl
idiv
mov
subb
sub
ljmp
jnp
fsubrs
aas
mov
sub
add
cwtl
xchg
in
mov
imul
pop
xor
rorl
cmp
addb
insb
out
std
or
jmp
shlb
lret
mov
push
lret
mov
or
addr16
mov
cmp
cmp
nop
data16
jnp
mov
iret
scas
in
cmp
or
push
pop
loop
and
dec
xchg
sub
mov
lahf
mov
and
or
add
shll
pop
add
add
and
das
add
and
pop
or
stos
or
sub
sbb
int3
mov
mov
push
add
lsl
or
inc
aam
and
and
filds
shl
jbe
xchg
sub
orl
inc
pop
mov
inc
push
jae
stos
scas
addb
lods
add
adcb
adc
daa
mov
pusha
push
movsl
or
mov
xchg
outsb
lret
inc
adc
add
jne
or
and
cmp
movsl
xlat
push
lcall
lret
add
iret
mov
pop
jle
popa
outsl
mov
sarb
hlt
sub
ret
mov
push
xorb
inc
ds
cli
repnz
data16
test
sbb
sbb
add
loope
out
mov
out
sti
adc
aaa
ljmp
xchg
xor
push
dec
sub
aam
and
inc
sbb
mov
inc
cmp
sub
mov
mov
mov
sub
pushfw
outsb
shrb
es
sub
jns
daa
ss
inc
jo
jge
push
adc
or
notl
daa
subb
sahf
rclb
sbb
cltd
jb
inc
pop
cmp
add
lea
cmpb
push
fisttpl
and
xchg
fwait
jno
inc
dec
xor
sub
call
mov
or
adc
rcl
mov
out
or
sbbl
push
fdivr
inc
scas
jb
or
fidivrl
lods
cli
addr16
jno
arpl
mov
push
sub
jge
das
fdivrl
pop
push
jp
add
lea
xchg
xor
mov
and
xchg
xchg
into
adc
test
das
lock
jg
inc
jge
add
stos
adc
clc
lea
cmp
jecxz
dec
bound
xchg
jp
adc
mov
inc
adcl
mov
std
inc
leave
les
addr16
mov
rclb
sti
fucomip
mov
fcomps
adc
pop
ficoms
mov
ret
rcrb
loope
jg
mov
dec
mov
test
popl
ds
sbb
es
inc
mov
inc
dec
sbb
test
and
fstps
inc
xor
in
mov
imul
mov
dec
cmp
add
mov
adc
loope
cmpsl
sub
ror
ljmp
out
mov
lods
scas
adc
inc
jle
sub
insl
testb
and
in
lcall
shr
test
sub
adc
push
insl
loope
add
pop
nop
movsb
add
push
icebp
jae
mov
incl
loop
mov
and
mov
dec
add
or
loopne
jecxz
hlt
pop
cs
out
rcll
mov
xor
sbb
mov
mov
and
xor
push
sub
test
jg
pop
neg
movsb
movsb
and
mov
dec
loop
add
fs
popl
cmpb
stc
test
movsl
repz
icebp
xor
sbb
scas
bound
sub
mov
leave
testl
call
aaa
jl
sub
insl
or
cltd
je
ljmp
cs
bound
and
xor
xchg
mov
push
cmp
fldt
sub
or
filds
jno
sbb
or
incl
mov
je
mov
or
and
rorl
lods
in
jo
jns
add
add
push
int3
loopne
push
inc
repz
jmp
or
mov
lcall
cmpb
xor
or
mov
adc
cmp
fadd
hlt
aas
sub
aam
repz
or
or
mov
inc
dec
fstl
mov
add
mov
inc
adc
into
popf
or
imul
sbb
out
ret
insl
jle
or
xchg
lods
inc
inc
scas
std
jl
sub
mov
push
sarl
sbb
dec
jno
sbbb
in
add
sbb
and
call
inc
leave
mov
pop
jo
and
fiaddl
aam
pop
cmp
xchg
xchg
fldcw
jne
test
jae
jae
sub
imul
xor
adc
faddl
rorb
out
jns
js
es
xchg
dec
jnp
negl
add
fsubrs
stos
les
adc
fcoms
and
inc
out
shl
fnstenv
jbe
rolb
daa
add
push
rorl
or
push
les
shlb
mov
movsl
pusha
add
inc
dec
ds
xor
call
xor
add
icebp
pop
xchg
pusha
lret
cmp
jne
xchg
pop
jns
push
cmp
les
dec
rcll
test
xchg
mov
add
call
out
adc
inc
mov
popa
jecxz
mov
mov
xchg
add
xchg
add
test
out
out
mov
cmp
lret
jo
test
loop
mov
jns
addl
scas
loop
repnz
add
push
pop
pop
jno
into
shlb
dec
fcomps
mov
xor
std
test
les
sub
stos
sub
add
aad
imul
cwtl
add
cmp
sub
stc
mov
fbstp
out
fldl
push
notl
xorb
inc
sbb
and
in
push
xor
or
fimull
popf
adc
add
dec
xor
ficompl
adc
adc
jns
dec
and
int3
and
sbb
dec
push
rorb
mov
test
outsl
call
or
inc
adc
sahf
inc
xor
inc
cmpsb
mov
push
or
rcrb
adc
rcrl
xor
sub
push
fistpll
das
dec
lret
jmp
cmp
and
loope
loop
cmp
sbb
testl
push
ret
lods
add
dec
sub
cmp
in
mov
pop
push
int3
jp
xlat
sub
dec
inc
adc
lods
addr16
inc
inc
push
adc
std
sub
mov
jl
and
cmp
in
mov
rorb
inc
jge
add
xlat
inc
or
adc
lock
aaa
sub
sbb
sub
lds
and
ja
pushf
jle
in
add
test
icebp
outsl
jle
hlt
xchg
add
stos
sti
sub
xchg
dec
andl
lea
xchg
xchg
icebp
push
jo
pop
sub
sub
dec
int3
mov
loopne
mov
cmpsb
aam
or
inc
je
inc
inc
repz
adc
inc
xor
mov
mov
mov
jp
fcmovbe
mov
dec
mov
mov
add
sbb
cwtl
sbb
or
mov
push
movsl
mov
stos
jne
adc
scas
movsb
cmpb
add
cmp
mov
mov
pop
test
pop
xor
pop
call
mov
cmpsl
js
lret
scas
pop
mov
xor
stos
push
xchg
movsl
jns
sub
rcr
mov
push
add
call
cmp
int3
mov
cmp
outsl
mov
xor
mov
inc
mov
sub
push
insl
or
movsw
mov
sti
incl
inc
dec
lret
insl
test
rcll
adc
sbb
pop
mov
shll
mov
das
inc
nop
addr16
data16
adc
adc
push
cmp
xchg
mov
pop
push
add
mov
stos
subl
sub
sub
out
outsl
cld
lcall
mov
into
loopne
aad
leave
jo
sub
dec
mov
std
shll
xor
scas
int3
jnp
mov
rcrl
dec
mov
imul
mov
fists
fildl
fsubrs
cmc
xchg
jg
mov
aaa
pop
xor
xchg
shlb
adcl
int3
pop
lahf
outsb
in
jg
xchg
pop
or
xor
mov
inc
or
mov
and
jl
test
clc
pop
jle
js
adc
ret
xchg
inc
es
and
add
imul
mov
mov
test
sub
or
out
xor
popf
mov
and
mov
and
lea
call
jl
xchg
add
pop
sti
cli
dec
arpl
cmp
sar
sarl
test
ljmp
push
sbb
jp
int
push
sahf
mov
adc
js
dec
hlt
pop
pop
sbb
push
pop
clc
insl
and
loop
add
lea
ss
mov
mov
ficompl
adc
pop
xchg
mov
les
test
pop
fdivrp
mov
sbbb
xchg
cmp
add
mov
decl
mov
outsb
scas
stos
sub
fnstcw
inc
mov
std
jmp
or
mov
scas
mov
push
movsb
mov
testb
push
std
outsl
js
xor
inc
ljmp
lea
xchg
arpl
nop
fnstenv
jns
jne
xor
dec
sbb
and
daa
adc
stc
or
sbb
das
mov
mov
ret
mov
sub
shll
or
jg
xchg
jne
xor
in
or
mov
mov
jae
add
pop
imul
je
push
mov
cld
out
or
or
xor
push
insb
insb
mov
add
rcrb
xchg
lods
leave
inc
jg
ret
pop
push
test
test
movsl
outsb
mov
jge
mov
push
inc
test
fisubl
or
je
mov
loope
mov
aam
dec
mov
ficomps
mov
cmpsb
and
rorl
or
aaa
dec
or
rcrb
mov
ret
inc
or
nop
mov
adc
aas
pop
inc
xchg
adc
inc
jne
mov
int3
lds
fcomip
and
hlt
incl
les
push
cmp
dec
or
ss
mov
mov
dec
ret
adcl
push
adc
daa
mov
dec
pushf
mov
jle
sub
jno
add
xchg
sti
fbstp
mov
jp
xchg
pop
mov
cmp
cmp
jbe
imul
and
cmp
inc
inc
rorl
ljmp
fstl
js
pusha
test
fnsave
sbb
cmp
push
sbb
sbb
mov
add
pop
xlat
aad
cmpsb
scas
xchg
out
cmpsl
subl
call
sub
push
inc
je
mov
or
cmc
ljmp
dec
sbb
pop
in
addl
sub
cwtl
repz
fiaddl
call
ret
ret
or
mov
mov
enter
rolb
out
roll
shll
sub
enter
push
cmpsl
js
jae
nop
daa
sbb
push
and
adc
mov
pop
daa
sbb
dec
xor
add
add
and
arpl
push
mov
pop
sub
das
mov
mov
insb
mulb
cmp
in
out
push
testb
aam
adc
bound
pop
loope
inc
xchg
call
cmpsl
shll
mov
sahf
or
pop
add
inc
insb
jbe
int
subb
gs
mov
fsubr
ja
mov
not
xor
test
nop
mov
push
add
push
jmp
add
add
or
rolb
mov
aaa
sbb
add
push
mov
mov
cmp
xor
adc
ljmp
push
rorb
xchg
ljmp
pop
adc
outsb
addr16
shll
incl
mov
jo
cld
mov
ljmp
test
dec
and
cmpsb
mov
mov
add
push
das
pusha
clc
or
fidivs
fwait
lods
daa
stc
xchg
jecxz
mov
lahf
jle
xor
inc
push
inc
movl
jnp
mov
jl
popf
push
xor
mov
mov
lret
sbb
cmp
add
mov
leave
mov
in
ficoms
lret
lcall
cmp
rcl
fistpl
push
pusha
ret
mov
pop
cld
test
xchg
sub
pusha
cmp
mov
cs
dec
cwtl
or
std
mull
outsl
and
xlat
lret
fnstcw
subl
dec
mov
ja
std
xchg
jbe
cmp
int
dec
inc
shll
fidivrs
adc
adc
arpl
pop
xchg
test
dec
add
pop
add
add
add
add
pop
pop
jmp
fisubrs
and
mov
push
sbb
sub
jmp
or
fs
inc
push
add
rcr
imul
and
decl
pop
adc
xchg
or
cmpsl
aas
fimuls
fcom
test
adc
decl
jbe
sbb
imul
xchg
jbe
xor
cmpb
aad
mov
xor
pop
mov
jmp
pminsw
xchg
sub
das
add
testl
dec
je
pop
adcb
cld
and
adc
inc
ja
inc
jge
or
push
mov
inc
lret
call
mov
xchg
adc
ja
movsb
cmp
stc
add
sub
nop
lcall
out
mov
jbe
insl
outsl
adc
movsb
inc
pop
bound
mov
andl
dec
in
sarl
out
addr16
test
mov
dec
xor
ret
cmp
movsb
sbb
outsb
push
jle
int
inc
ljmp
add
das
inc
sub
push
pop
mov
push
pusha
ljmp
push
xchg
fs
lcall
decl
dec
push
mov
xchg
push
push
lahf
inc
jne
inc
push
push
mov
fistpl
test
stos
or
push
adc
mov
or
xchg
adc
and
jo
lods
xchg
insl
or
call
mov
cmp
inc
popf
add
mulb
mov
mov
int3
xchg
or
into
cld
mov
sub
and
pop
xor
or
adc
jg
push
icebp
mov
int
in
gs
sub
orb
iret
lock
inc
mov
je
jg
sbb
add
aas
mov
idivb
fsts
pop
movsb
and
xchg
lea
adc
jo
fists
lock
cmp
pop
inc
xor
les
sub
aas
ss
clc
inc
sub
jle
pop
push
std
dec
loop
mov
xchg
imull
cmpsb
loope
into
push
das
mov
imul
in
in
test
sahf
sbbb
fwait
ret
add
insl
loope
leave
pop
mov
scas
mov
xor
jle
rcr
popa
int
pop
notb
push
lods
add
shr
icebp
dec
xchg
push
mov
test
insl
rorb
adc
push
enter
jge
lods
jo
mov
mov
lods
pop
clc
mov
ljmp
movsb
or
pop
fmull
dec
push
mov
dec
insl
hlt
dec
shrb
mov
adc
fwait
orl
jmp
aaa
mov
mov
out
movsb
leave
jo
xorb
sbb
outsl
xchg
pop
imul
mov
push
cld
mov
outsl
sbb
ljmp
loop
pop
sub
clc
cld
push
leave
shlb
out
sbb
or
rcrb
ds
dec
fmuls
lret
jl
xchg
hlt
test
arpl
inc
iret
jbe
xor
mov
sbb
pushf
jae
jmp
jne
cmpb
xor
mov
aad
ret
rorl
sub
bound
sbb
add
loopne
stos
pop
inc
sbb
and
cmpsl
add
shlb
or
nop
pop
stos
push
sub
inc
adc
adcl
adc
loope
das
enter
xchg
xchg
fsincos
loope
mov
add
outsl
popf
inc
pop
testb
adc
xchg
aaa
adc
or
pop
jne
adc
inc
scas
fisubs
hlt
sti
scas
loop
jo
cmp
shl
add
cmp
mov
daa
dec
mov
adc
iret
scas
lcall
aad
inc
cwtl
rclb
and
ret
add
sbb
rclb
sub
cltd
andb
xor
rorb
leave
sbb
pop
stos
cmpsb
lods
dec
not
inc
mov
icebp
push
hlt
mov
mov
loop
sbbb
adc
push
cld
add
cwtl
jnp
shlb
ret
mov
repnz
repz
sbb
push
rorl
push
fwait
pop
adc
addl
jge
push
testl
popa
inc
adc
and
sub
test
insl
adc
mov
mov
cmp
repz
out
mov
scas
out
data16
add
add
fnstenv
add
orl
add
or
roll
cltd
add
jne
cs
inc
pop
add
jnp
jge
and
int
xchg
inc
adc
jp
cmp
nop
orb
popl
pop
mov
dec
movb
cmp
sarl
aam
sub
bound
push
mov
sbb
ds
xor
sub
dec
add
push
xor
xor
imul
adc
leave
ret
in
dec
cld
mov
int3
std
aam
aam
dec
xchg
sahf
xchg
test
mov
enter
push
imul
cs
movsl
sbb
ljmp
test
bound
test
test
addr16
inc
insb
pusha
inc
cmp
pop
inc
fildl
movsl
mov
movsl
fstl
push
and
call
incl
ret
push
icebp
mov
mov
xchg
or
mov
pop
mov
add
repnz
cmp
xchg
ss
mov
mov
addl
xlat
xchg
incl
fnstenv
dec
sbb
adcb
jle
add
push
cli
mov
inc
mov
mov
shlb
daa
dec
add
les
dec
lds
les
inc
imul
fwait
scas
icebp
js
je
mov
sub
pushf
xchg
sahf
negb
push
fbld
test
scas
aas
mov
addb
push
and
pop
cli
adc
in
cwtl
insl
and
add
fistpl
imul
push
jbe
fcomi
and
inc
pop
insl
push
mov
or
repz
dec
jl
dec
pop
xchg
hlt
insl
imul
mov
fwait
xchg
pop
lea
push
add
cs
cmp
cli
mov
mov
ret
stc
test
jl
or
scas
repz
loope
movsl
insl
mov
jns
inc
mov
aas
jne
mov
or
mov
sbb
decl
test
push
stos
mov
fimuls
xor
push
sub
les
add
mov
adc
es
push
xchg
dec
stos
dec
adc
sub
adc
loopne
jnp
jle
mov
lock
cmp
icebp
outsb
call
daa
xor
cs
inc
cmc
add
int3
sahf
mov
jmp
or
pop
mov
mov
lahf
lahf
xor
filds
adc
stos
inc
inc
inc
add
push
rol
mov
imul
mov
mov
mov
sub
pop
xor
loopne
mov
aaa
adc
push
rorb
jle
test
xchg
mov
icebp
neg
scas
dec
add
and
imul
xor
addb
pop
es
rorb
fidivrs
push
xchg
xchg
repz
or
or
pushf
add
pop
dec
in
pop
adc
xchg
jno
xchg
xor
xor
sbb
push
jg
add
lcall
ss
or
pop
jae
mov
in
push
sbb
icebp
sub
ret
mov
and
mov
cmc
sub
cmp
xchg
pop
adc
xor
repnz
ljmp
adc
call
jecxz
add
gs
dec
aad
cmp
inc
pop
jp
rcrb
addb
push
ret
add
cwtl
adc
addb
jp
shlb
adc
adc
fisubl
push
push
inc
dec
cmp
out
jge
rolb
jp
add
pop
mov
lods
add
cld
mov
rclb
lahf
dec
push
fdivrs
mov
pusha
lods
sub
adc
aam
or
out
inc
or
push
pop
mov
cld
int3
call
inc
adc
js
mov
mov
arpl
dec
cld
addr16
xchg
cmp
push
cmp
orl
push
adc
dec
sahf
icebp
icebp
push
call
sbb
push
jg
lock
push
sub
push
mov
mov
add
push
mov
inc
mov
mov
or
lea
fcmovnb
repnz
fcomps
sub
into
sahf
decl
pop
ret
into
cmc
pshufw
mov
mov
fwait
gs
leave
sbb
enter
shll
push
ret
leave
mov
adc
jnp
jbe
out
cltd
and
aas
add
or
mov
stos
ljmp
sub
sbb
pop
pop
call
pushf
stos
mov
out
sti
or
scas
adc
in
cmp
or
decl
push
aad
stc
int
push
dec
and
les
repnz
sbb
inc
add
jbe
push
and
lock
jb
jle
cwtl
loop
cmpsb
xor
mov
mov
ss
mov
dec
loopne
lds
es
cwtl
adc
ljmp
imul
sbb
pop
and
into
rol
push
int3
int3
jp
cmp
mov
stos
pop
sub
mov
push
rcr
ljmp
fldl
cmp
loopne
lea
test
mov
leave
jno
lcall
int3
fistpll
adcb
shrl
sar
dec
mov
mov
cs
fsts
hlt
test
pop
push
jne
sti
adc
fisttps
add
aaa
mov
and
sbb
cwtl
popf
cmp
ret
in
jo
sahf
sbb
or
pop
scas
hlt
add
fwait
add
loopne
and
nop
mov
cmp
stos
icebp
or
pushf
xchg
inc
xchg
je
icebp
frstor
mov
push
cwtl
push
aaa
loope,pt
sub
sub
mov
push
lock
cmp
fsubrp
mov
fbld
jle
loopne
or
icebp
stos
mov
xchg
xor
mov
pop
daa
inc
lret
in
cmpsl
jge
and
or
data16
adc
mov
outsb
sbb
outsb
aas
adc
or
adc
lahf
popa
data16
add
sbb
cs
test
mov
aam
jmp
dec
adc
jecxz
adc
lret
mov
adc
mov
mov
aaa
js
fdivr
incb
mov
bound
jg
mov
pop
jl
test
add
daa
inc
xor
mov
mov
lock
fcomi
aam
stos
loope
or
test
cmp
pop
insl
mov
inc
push
jge
inc
loopne
cli
inc
xchg
mov
clc
int
dec
pop
negl
mov
xor
push
push
push
sbb
mov
xor
test
mov
ljmp
sbb
test
clc
adc
popa
arpl
lcall
jp
adc
sbb
mov
fbstp
rol
xchg
sbbl
mov
call
lock
rcr
dec
and
cmp
lcall
mov
movb
mov
sbb
xchg
ljmp
loopne
leave
cwtl
or
jne
inc
pop
mov
nop
xchg
adcb
cwtl
fwait
and
jnp
mov
jecxz
add
cmc
scas
lds
add
lock
pop
sbb
mov
inc
push
push
pop
or
cltd
fstl
dec
pop
jge
movsb
int3
inc
and
inc
je
mov
or
push
stc
and
mov
clc
testb
loopne
and
xor
lods
inc
repnz
out
outsb
adc
fisubl
fldpi
lret
inc
push
jge
mov
jecxz
jecxz
popa
popa
jns
call
pop
mov
mov
pop
ljmp
in
cli
xlat
es
dec
jl
jg
insl
inc
fs
adc
daa
cmp
movsb
mov
sub
inc
decl
adc
cmc
test
scas
jno
xchg
mov
sub
pop
clc
call
push
mov
jbe
sbb
add
les
sahf
rorl
and
sub
loope
aad
sbb
dec
and
movsl
pop
mov
movsb
add
or
mov
jg
decb
loopne
xor
mov
dec
cs
add
mov
and
loope
jne
clc
mov
xor
test
fidivrs
dec
sub
dec
push
or
push
jmp
jp
dec
jp
popa
adc
jp
sbb
xor
ljmp
xor
pop
pop
adc
xor
mov
xchg
dec
cmp
rcrl
lea
mov
and
dec
inc
fs
and
push
add
fbstp
or
cwtl
mov
scas
hlt
mov
fst
lcall
mov
inc
das
mov
stos
fistps
mov
dec
xchg
jae
mov
cmpsl
mov
pop
sbb
nop
in
xchg
push
fs
cmp
mov
cmpsb
je
addr16
and
or
mov
and
idiv
aaa
test
adc
inc
rcll
flds
insl
mov
pushf
jecxz
outsl
inc
xchg
xor
rolb
out
pop
les
adc
jge
das
aas
clc
xor
sbb
loopne
leave
movsl
cmp
mov
in
jns
out
cmovo
test
and
mov
push
les
sub
sbb
fsubrl
and
inc
adc
xchg
xchg
lock
inc
ds
lods
cmc
add
sbb
ret
sahf
add
dec
lock
sbb
jnp
adc
jb
dec
add
loopne
push
sbb
pop
je
inc
xchg
cmc
out
jl
xor
aam
and
sbb
sahf
dec
sub
dec
sbb
scas
fwait
in
les
xlat
mov
mov
add
adc
mov
mov
daa
ss
add
test
fstl
sbb
fildl
andb
mov
push
ja
inc
add
dec
cmpb
jo
into
add
and
fs
pop
inc
xchg
sub
add
inc
aaa
xor
mov
push
cmp
adc
xor
cmpb
jg
add
test
sub
cmp
cld
loopne
dec
enter
and
movsb
or
pop
lcall
adc
or
cmp
mov
ljmp
fsub
popf
cli
sbb
outsl
add
xor
or
jle
rol
add
or
and
bound
stos
and
test
pop
mov
or
sahf
mov
call
shrb
clc
fwait
jecxz
or
les
dec
nop
mov
ret
add
or
lahf
test
call
cltd
rcl
ret
mov
stos
lock
adc
add
outsl
pop
outsl
rcll
adc
mov
fadds
xchg
mov
add
rclb
sbb
add
jg
repz
loopne
aam
orb
xchg
or
jbe
jae
add
aad
and
and
push
cmp
sub
fmull
adc
pop
inc
scas
lret
lods
inc
pop
stos
and
fists
dec
inc
push
push
adc
xor
adc
xor
cmpsl
pop
scas
push
inc
xor
addl
cld
mov
adc
cmp
or
add
add
jae
mov
stc
fwait
add
mov
xchg
incl
push
loope
or
mov
loope
and
or
fadd
data16
xor
add
addb
mov
pusha
out
xchg
subb
xchg
orb
jbe
push
add
and
imul
out
or
sarb
stos
mov
add
add
pop
arpl
rcrl
rolb
push
rorl
inc
or
push
mov
xchg
cmp
mov
dec
add
icebp
and
fildll
jae
sub
xlat
and
pushf
jl
jge
rolb
out
add
mov
cli
movsb
icebp
mov
std
xchg
cmp
data16
js
imul
jbe
add
outsb
bound
xchg
movsb
fdivl
cmp
addl
test
add
or
mov
inc
sbb
rclb
sub
mov
jb
xor
inc
mov
mov
in
out
and
outsl
lods
testb
mov
xchg
pusha
push
sbb
ret
data16
cmp
inc
inc
dec
push
jg
lds
scas
jecxz
fsts
jmp
leave
cld
pusha
push
std
lods
inc
dec
mov
addb
sub
inc
add
aad
cmp
xchg
aam
add
mov
int
add
es
int3
or
or
pop
ror
or
mov
adc
lock
add
arpl
out
push
shl
push
rorl
mov
sahf
lock
in
xchg
add
test
jge
add
mov
dec
ja
sub
aaa
mov
mov
inc
movsb
push
cmp
cltd
pop
sub
cli
xor
hlt
sub
push
mov
lds
inc
cmpsb
add
in
jnp
pop
xor
leave
call
aaa
mov
inc
mov
lods
test
call
roll
push
adc
and
cwtl
xor
or
cmc
data16
rcll
cmpsb
or
push
lods
inc
xor
xor
jb
or
pop
sub
into
lock
test
iret
jmp
adc
jp
iret
in
push
or
rolb
mov
ljmp
lock
jge
into
add
add
sbb
adc
or
xchg
scas
dec
jbe
inc
jo
push
jns
shrl
insb
jmp
inc
out
sbbb
inc
addb
pop
add
mov
adc
xorb
test
addl
dec
mov
adc
popa
push
push
push
ret
std
add
or
inc
mov
inc
icebp
or
dec
int3
xor
sub
aaa
push
popf
test
rol
push
pop
inc
lsl
movsb
and
pop
mov
in
ja
fwait
in
mov
jmp
xchg
cmp
ret
add
bound
dec
xchg
repnz
clc
mov
aad
lcall
sbb
or
jo
mov
mov
imull
and
ror
arpl
stos
inc
push
int3
add
pop
roll
mov
xchg
cmp
lret
and
lcall
lock
xor
pop
xor
inc
mov
mov
push
xlat
jbe
push
mov
mov
and
pushf
inc
out
rcll
push
imul
add
imul
mov
fistps
inc
xor
adc
pop
mov
out
cmp
sub
xor
fstpt
cltd
jecxz
inc
movsl
mov
in
or
gs
sub
clc
lahf
mov
enter
cmpsl
lret
adc
ficoms
mov
daa
aam
sahf
add
add
in
mov
dec
cmp
adc
mov
xchg
inc
add
jle
sub
cmc
xlat
jns
pop
adc
mov
rcll
sub
push
lods
call
dec
out
sub
or
xchg
pop
fisttpll
ja
xor
cwtl
aam
push
in
pop
add
std
aam
cltd
or
stos
test
dec
xchg
mov
cmpsl
out
mov
lret
int3
shll
cmp
pop
adc
incl
scas
xchg
cmpsb
or
cmp
loope
mov
test
loope
cld
add
pop
push
or
negb
loope
lret
push
sub
loop
in
std
push
loopne
dec
cmp
inc
mov
cs
jg
mov
push
out
mov
xchg
fisubs
mov
scas
jmp
fs
jo
mov
jb
add
pop
movsl
mov
push
push
mov
mov
ss
icebp
add
cmp
add
sub
inc
push
mov
psubsb
shrl
dec
pusha
inc
inc
clc
inc
rcrb
cmc
inc
cmc
cmp
jbe
loop
adc
cwtl
outsb
insl
xchg
add
addb
std
lods
inc
pop
ss
xchg
int
into
xchg
ret
imul
push
inc
imul
scas
inc
mov
adc
aad
push
cmpsb
dec
dec
clc
sub
stos
jo
push
xor
cmc
ret
data16
clc
js
pop
mov
pcmpeqb
cld
jb
pop
ja
or
adc
jle
xchg
loop
mov
jb
imul
stos
aaa
xor
and
xchg
loop
cmp
and
ja
jg
mov
outsl
inc
and
inc
push
jae
xor
add
clc
test
negb
aas
xlat
iret
add
loop
mov
repnz
and
bound
nop
jno
add
int
sbb
push
or
or
in
mov
cmpsb
pop
mov
insb
outsb
jne
in
or
pusha
and
fs
cld
fstpt
shlb
pop
adc
popa
sub
incl
and
test
mov
inc
das
cmc
sti
ja
mov
std
mov
mov
sbb
push
mov
sbb
or
daa
jg
sarl
mov
fmulp
jg
lea
out
jae
mov
incl
push
fwait
js
mov
std
xor
cmp
dec
imul
xchg
mov
sub
pushl
add
adc
inc
sbb
push
adc
aas
fbstp
add
cltd
shll
sub
mov
mov
incl
imul
sbb
and
std
push
sbbb
dec
and
mov
ret
xchg
push
ret
enter
mov
hlt
dec
hlt
inc
hlt
push
mov
dec
add
xchg
sbb
in
push
or
inc
and
shlb
dec
mov
cld
mov
inc
sbb
jb
and
pusha
mov
sub
pushf
cmc
vpshufd
ret
test
mov
bound
int3
sub
subl
scas
inc
push
popf
shlb
daa
mov
js
scas
jge
mov
sar
cld
sbb
mov
int
pop
mov
mov
cmp
call
aad
cmp
adc
mov
insb
ljmp
fstpt
pushf
rol
mov
mov
mov
inc
mov
xor
repnz
xor
std
mov
ljmp
mov
inc
and
xor
popa
enter
xor
jle
and
and
fcos
mov
inc
xor
cmc
test
sub
in
ds
sbb
push
ljmp
mov
mov
gs
dec
test
dec
sub
mov
les
adc
pop
fistpl
ficompl
test
push
cltd
les
loop
test
jecxz
loope
lds
push
pop
dec
es
lcall
fdivs
mov
push
jmp
adc
mov
or
mov
cmp
and
lcall
shr
cli
popl
arpl
faddl
cmp
xchg
sbb
mov
daa
je
enter
fdivrs
xchg
in
push
test
mov
cmp
das
mov
pop
daa
cmpb
pushl
jo
xor
aaa
mov
dec
movsb
popa
test
idiv
fwait
inc
mov
cmc
arpl
imul
test
add
inc
cld
lcall
aaa
inc
andl
push
and
cmpb
pushf
bound
or
fwait
adc
int3
and
mov
add
xchg
push
mov
sbbb
xorb
mov
jnp
mov
jg
outsl
mov
repz
pusha
clc
pop
sub
shll
push
imul
inc
mov
dec
out
stos
std
sbb
faddl
mov
or
xlat
outsl
std
call
arpl
adc
cli
mov
jmp
fucomp
inc
loopne
jmp
xchg
xchg
loop
and
pop
mov
nop
clc
sbb
add
adc
addl
push
sub
sbb
int3
rol
push
sarb
mov
int3
or
ds
std
pop
mov
xchg
and
dec
dec
dec
lcall
clc
jg
and
and
sbb
pop
mov
mov
sbb
xchg
lock
jle
jbe
xlat
push
loopne
mov
xchg
movsb
jp
push
inc
xchg
sub
testl
xchg
inc
fisttpll
mov
dec
sub
sbb
scas
jne
cmpsl
or
mov
dec
in
adc
movsl
xor
mov
mov
sub
ljmp
xor
out
mov
mov
repnz
add
and
addr16
js
sub
pop
lahf
andb
mov
sub
push
pushf
jns
sub
rorl
xor
push
jo
adc
cmpsl
mov
int3
rorl
loop
sarb
pusha
inc
in
pusha
insb
outsl
dec
inc
xchg
mov
mov
cmp
dec
and
movsb
mov
es
xchg
aaa
xor
adc
sbbb
pop
negb
dec
mov
int
adc
js
mov
mov
cmpsl
mov
jl,pn
nop
lds
iret
or
adc
lahf
xchg
movsl
inc
cwtl
das
mov
outsb
loopne
cmpsb
xchg
sub
and
sub
aad
xorb
add
add
dec
add
jp
pop
dec
js
adc
loop
dec
push
mov
lret
rcl
pop
shrb
jg
outsl
cmc
mov
or
sub
stc
nop
test
sbb
pop
xor
divb
out
add
add
sbb
bound
jno
enter
and
leave
sbb
lcall
inc
aad
and
lret
mov
cltd
cmc
scas
xor
jmp
test
je
pop
insl
fsubp
push
xchg
loope
in
push
inc
movsl
pop
push
cli
pop
dec
xchg
inc
iret
pop
jb
ret
arpl
push
mov
int3
pop
sub
je
adc
dec
and
idivl
xchg
iret
add
dec
sub
mov
cmpsb
push
add
roll
mov
pop
mov
xor
cmp
inc
pop
js
ss
lahf
adc
add
jle
mov
cmp
imul
or
and
pusha
mov
popa
cmp
aam
in
pop
test
sub
fadds
je
enter
imul
cmpsl
push
fldt
sahf
lods
pop
or
pop
repz
inc
xor
mov
sti
jle
mov
fisttpll
mov
out
jae
dec
pusha
jecxz
dec
lock
push
pop
or
mov
call
es
lock
js
cmp
jae
in
add
or
test
inc
push
iret
adc
insb
test
sbb
dec
inc
test
xor
jmp
loopne
cmp
loopew
inc
in
sub
insb
dec
jle
push
pop
push
pop
lods
sub
or
add
fmuls
inc
cld
push
fisubrs
mov
scas
int3
sub
sub
xlat
gs
enter
leave
dec
fstp
mov
cmp
sub
mov
push
outsl
cltd
int
dec
and
and
jg
test
loop
mov
xorl
or
dec
inc
insb
mov
mov
imul
or
mov
mov
push
shlb
subl
mov
jo
adc
enter
xor
sub
pop
sub
pop
inc
shll
lock
dec
xchg
mov
dec
pop
push
mov
sbb
pop
push
sbb
xchg
xchg
and
das
mov
inc
pop
sbb
inc
dec
dec
rcrl
aaa
push
loopne
pop
pushf
cmpsb
add
mov
adc
addr16
js
mov
into
mov
jl
cmp
pop
mov
adc
lret
out
in
sarb
dec
pop
inc
std
fistps
outsl
les
xor
je
in
sbb
xor
mov
addr16
mov
or
inc
je
lret
in
sub
and
xchg
in
xchg
jo
and
mov
adc
out
mov
es
out
push
adc
xchg
mov
add
dec
mov
xchg
adc
ret
test
test
js
add
mov
nop
push
adc
inc
stc
push
jl
notb
ljmp
jbe
xor
inc
push
dec
and
and
dec
inc
add
mov
mov
fwait
shrb
sub
pop
inc
push
decb
int
or
pop
or
jge
out
ficomps
add
mov
push
jecxz
loope
inc
ret
dec
adc
lods
std
nop
orb
nop
sarb
mov
adc
jg
jmp
mov
movsb
flds
cmovle
lcall
push
xor
es
inc
xor
inc
in
cmp
mov
jne
adc
adc
pop
mov
int
mov
dec
shrb
cmpsb
cltd
xchg
sbb
fsubrs
aam
fs
mov
mov
mov
jge
pop
add
popa
mov
pop
xor
ljmp
cli
les
lock
xor
inc
cmp
jae
lcall
inc
cmp
lcall
inc
rclb
mov
sbb
dec
pop
xchg
inc
out
cld
lea
cmp
mov
bound
lahf
fbstp
insb
dec
sbb
lods
inc
jl
xor
pop
fidivrl
pop
pop
sub
jae
or
das
mov
in
push
out
adc
pop
mov
pop
sub
imul
pop
cli
fisubs
mov
orl
inc
jmp
in
sbb
cli
repz
cs
outsl
cld
stos
jl
in
fiaddl
xor
pop
push
scas
cmp
add
mov
add
int3
lods
out
test
sahf
repnz
push
xchg
xor
cld
sbb
incl
or
inc
push
je
test
xchg
cmp
test
pop
adc
insl
cmp
stos
in
enter
mov
jecxz
xlat
xor
iret
adc
and
push
lds
sbbb
sbb
mov
testl
dec
push
fisubl
adc
jl
mov
outsb
es
int3
add
mov
ret
push
cmp
repz
hlt
pop
outsb
dec
ljmp
sbb
pop
je
mov
mov
jl
pop
push
icebp
in
push
jne
push
dec
cmpsl
push
bound
lahf
inc
push
cld
dec
sbb
lods
div
push
adc
pop
cltd
adcb
decl
sub
aad
mov
das
pop
pop
cli
xor
jb
dec
jle
adc
dec
out
sub
into
adc
cmp
push
inc
out
pusha
push
int3
ret
das
mov
or
lods
push
dec
push
mov
sahf
jno
lds
in
jmp
jmp
sbb
cmp
in
scas
lock
xchg
jg
cmp
test
xchg
xor
fnstsw
cmp
mov
xor
jbe
lcall
push
je
movsb
popf
xor
pop
popf
push
inc
and
xchg
divb
mov
pop
mov
fwait
clc
movl
add
jge
dec
fcmovnu
fsubrs
jb
ljmp
mov
test
mov
dec
shrb
hlt
pop
jmp
in
mov
adc
fidivl
mov
ljmp
mov
mov
fistpl
or
sti
ds
xor
int
jmp
and
add
fucomp
aad
mov
cmc
test
sub
dec
mov
or
sub
bound
idivl
jecxz
xchg
mov
push
cli
mov
mov
push
push
mov
dec
aas
inc
adc
mov
cli
outsl
mov
dec
loopne
mov
or
push
outsl
or
mov
mov
aam
lock
pop
mov
iret
leave
jmp
mov
jmp
jg
mov
dec
lea
dec
test
imul
pop
dec
lock
dec
xchg
adc
jl
xchg
inc
mov
dec
incl
sbb
inc
xorl
sbb
mov
cld
out
push
inc
mov
gs
cli
inc
inc
fs
inc
sub
fcmovnu
jne
mov
daa
out
movl
ret
leave
sbb
jg
cmc
cmp
cwtl
xchg
jb
in
xchg
dec
pop
movsb
imul
xchg
loopne
cmpsb
fildll
or
lods
or
jb
sub
mov
xchg
push
adc
je
stos
imull
pop
ljmp
std
mov
into
push
or
cmp
insb
cld
and
cli
pushl
pushf
rolb
pop
cmp
mov
xor
add
rcr
lock
adcb
call
mov
cmpsb
push
sarl
push
lcall
pop
cltd
cmp
jg
pop
add
shrb
jle
push
mov
xchg
sbb
cli
call
test
divl
inc
rolb
adc
es
adc
jo
and
add
fimull
std
out
mov
or
cmc
jg
fnstenv
xchg
test
std
lahf
mov
jmp
adc
leave
mov
xchg
dec
pop
pushl
sub
and
xor
push
adc
movsl
not
fists
cld
cwtl
push
xor
inc
inc
movsb
or
xchg
xchg
and
or
jg
jg
divl
xchg
es
js
in
or
and
mov
mov
jno
dec
leave
rcrl
mov
cmpsl
adc
ret
jno
dec
mov
mov
fnsave
aad
mov
sub
sub
dec
inc
in
outsl
pop
shr
add
pushf
add
sub
push
mov
pop
lods
ret
pop
mov
lods
mov
pop
pop
jno
daa
mov
xor
jns
loope
pop
pop
mov
mov
push
add
xor
jmp
jmp
xorb
divb
aaa
add
fnsave
rolb
mov
xchg
jnp
js
fsts
jo
sub
iret
jecxz
out
sbbb
mov
aaa
stc
cmpsb
jno
movsl
push
es
pop
scas
sahf
xorb
lock
mov
in
mov
in
lea
xorl
fcmovnu
jno
adc
nop
add
xchg
jp
push
jp
push
xor
pop
pusha
and
out
and
lock
popa
std
sti
incl
cmp
rorl
or
cmp
test
push
inc
mov
in
sahf
sub
sub
sbb
lret
outsl
int
test
imul
jp
addl
inc
jl
test
ret
adc
jns
fucomi
sub
cltd
adc
inc
mov
jge
fstpl
add
xchg
cmp
pop
loope
adc
enter
push
add
and
adc
inc
fdivl
jae
popl
push
push
xchg
or
movsb
sti
call
mov
lock
mov
nop
pop
mov
ja
xor
fsubp
mov
popa
jecxz
pop
push
inc
mov
mov
ss
ret
cmp
int3
mov
popw
sbb
pop
xchg
loopne
or
outsl
mov
icebp
fcoms
mov
call
std
cli
notb
mov
movl
xchg
mov
mov
jne
push
add
hlt
in
div
xchg
cli
xor
sub
negb
andb
es
cmc
xchg
sub
mov
pop
les
mov
and
adc
cmp
je
jno
mov
push
cmpsb
sub
push
pop
xorb
mov
pusha
sub
mov
mov
inc
fldl
mov
push
xlat
jae
pop
dec
adc
sbb
inc
push
cmp
cmpsb
fsub
push
xor
addr16
icebp
pop
xor
push
cmpsl
jp
loop
iret
pop
sahf
and
dec
out
pop
mov
mov
mov
cmp
push
test
cli
xor
lea
inc
xchg
call
into
xchg
or
sbb
insb
sub
scas
aas
push
jb
lods
outsb
add
mov
scas
mov
stos
inc
insl
loopne
xor
mov
push
mov
xchg
jo
aam
push
call
sub
outsb
lds
or
movsl
shrl
or
and
sbb
mov
sub
iret
pushl
mov
in
call
jo
lock
or
cmp
or
push
shlb
mov
enter
stc
mov
jne
insl
scas
or
test
clc
pop
jl
mov
cwtl
mov
mov
out
xchg
xlat
mov
ret
push
outsl
subb
lds
push
mov
fdivs
xchg
js
pop
out
push
test
mov
adc
xor
jo
adc
std
add
roll
dec
sbb
cmc
movsb
dec
fldln2
imul
ja
test
int3
jmp
rorb
inc
push
mov
int
sbb
or
lea
popf
stos
sbb
lock
mov
mov
mov
das
andl
in
adc
insl
add
mov
cltd
mov
xchg
lods
pusha
mov
in
push
cmc
jge
pop
push
in
push
xchg
mov
push
fisubl
arpl
fistl
pushf
push
dec
mov
jae
push
lods
movsl
and
loopne
icebp
mov
mov
cmp
add
enter
xchg
fidivl
push
pop
mov
icebp
stos
fldl
add
js
js
addl
mov
addb
dec
mov
jo
jl
cmc
adc
mov
add
mov
clc
mov
or
push
push
je
ja
ja
mov
dec
hlt
ret
test
inc
add
push
int
jge
loope
fnstsw
jbe
roll
and
dec
sub
xlat
jno
xor
add
adc
dec
not
jle
add
enter
sbb
ja
and
add
dec
xorb
add
adc
addl
fildl
sub
xchg
add
sbb
inc
mov
adc
xchg
jmp
mov
adcb
xchg
loope
mov
pop
xchg
mov
or
add
push
adc
ss
aaa
adc
outsl
or
or
xor
lret
pop
adc
div
inc
push
in
jg
mov
fisttpl
cld
sbb
ja
xlat
xchg
dec
lcall
inc
dec
mov
clc
jg
in
pop
jbe
push
push
sub
push
dec
sbb
push
in
loopne
inc
test
fildl
int
adc
sub
andb
iret
addl
incb
pushf
lds
mov
icebp
inc
mov
pop
je
mov
xchg
add
std
xchg
test
roll
mov
push
pusha
jne
mov
inc
inc
mov
cs
or
cmp
or
in
fsub
pop
inc
aam
stos
or
ret
and
lahf
pop
mov
xchg
movsl
fwait
mov
jo
out
aas
fnstenv
push
adcl
cmp
xor
ds
iret
out
fdivl
nop
add
or
add
pop
pop
mov
dec
nop
push
lods
pushf
cmp
fs
inc
push
mov
je
shlb
pop
gs
fcoms
mov
fwait
push
clc
sbb
push
push
xchg
mov
mov
mov
mov
push
pushl
stc
push
lods
sub
pop
sti
fwait
mov
mov
data16
fnsave
mov
mov
pop
adc
jo
xor
or
je
xlat
jbe
mov
aas
mov
sbb
sbb
add
lock
and
out
rcl
shrl
cmc
xor
scas
test
jne
sub
inc
pop
or
arpl
fchs
movsl
sub
add
sbb
mov
push
and
out
ljmp
pop
pop
jne
bound
ret
fdivs
dec
insb
inc
addl
sub
jmp
cwtl
test
xor
lret
xchg
jge
imul
sub
lods
sbb
mov
mov
push
mov
dec
xchg
push
sub
cmp
jo
jnp
add
lock
inc
fldenv
mov
dec
mov
mov
or
cld
fisttps
out
xchg
sub
mov
out
push
add
pop
pop
fisubrl
std
inc
fwait
push
jne
ja
shll
jb
xchg
insl
fistl
mov
sti
dec
xor
sub
fsubl
add
sbb
test
sbb
repnz
mov
cmp
nop
push
mov
push
mov
cmpsb
mov
ja
outsb
sub
jns
nop
push
and
add
notb
outsb
add
fnstenv
jmp
mov
adc
daa
adc
inc
mov
and
pop
push
std
pop
sbb
rcrb
sub
cld
fnstsw
inc
pop
les
dec
adc
push
outsb
repnz
dec
xchg
sti
push
mov
push
inc
push
mov
push
or
aas
movsb
lock
leave
sub
mov
js
psubd
pop
mov
notl
jno
mov
decl
shlb
loope
xchg
stos
addl
cli
test
inc
cmp
push
or
outsb
add
imul
repz
adc
or
mov
fisttps
lret
nop
xchg
adc
cmp
ret
jge
fidivrl
or
dec
fwait
sub
fcmovb
insb
cmp
arpl
sbb
in
sub
adc
mov
add
in
es
lods
pusha
pop
pop
pop
mov
mov
jno
je
push
sbb
pushf
jecxz
into
mov
fcmove
sub
bound
lea
mov
iret
cwtl
lods
or
pop
adc
not
imul
fcompl
cwtl
ljmp
ja
xchg
outsl
mov
jg
dec
int
out
cmp
es
mov
mov
out
add
data16
mov
ss
cmp
pop
shlb
inc
and
cmp
pop
mov
inc
loop
add
int3
outsl
add
and
outsb
mov
dec
mov
or
xchg
push
dec
pop
es
test
sbb
loopne
and
push
das
cld
or
pop
sbb
pop
insl
test
and
repz
lea
mov
xor
mov
nopl
mov
jle
ret
out
lds
sub
outsb
out
xchg
add
cmp
incl
pop
jbe
aad
sub
in
scas
add
test
es
shlb
adc
mov
test
jg
ret
cltd
add
mov
mov
xchg
enter
aad
push
in
and
xchg
cmp
sbb
xchg
cs
loop
int
imul
mov
out
push
cld
xchg
cmc
ret
sarl
icebp
movsb
inc
loopne
push
jg
jmp
sbbl
loop
daa
mov
repnz
mov
inc
jae
insb
idiv
fildll
daa
sub
and
test
push
inc
cwtl
andl
mov
lcall
das
jle
enter
loope
adc
hlt
mov
das
mov
insl
stos
jne
ljmp
xchg
dec
mov
out
mov
xchg
sub
nop
jae
xchg
and
sbb
aad
cli
bound
mov
push
out
sbb
adc
in
adc
mov
bound
jo
call
xchg
leave
pop
das
mov
mov
jbe
dec
pushl
cmp
mov
ss
mov
fistpll
sbb
jno
cmp
mov
mov
jbe
ds
ja
mov
cmp
adc
outsl
hlt
movsl
sbb
lret
outsb
or
sbb
in
cmpsl
mov
or
inc
adc
mov
adc
mov
in
aas
sub
dec
pop
movsl
dec
mov
loopne
xor
xor
jge
cmp
sub
add
shrl
in
add
repnz
and
inc
fists
test
cmc
in
out
xor
mov
mov
pop
xchg
sbb
ss
test
sti
fs
dec
fisttps
lret
adc
jmp
in
fldt
aam
and
or
pop
cli
lahf
adc
sub
pop
add
cmc
movsl
jmp
fisttpll
enter
or
fiadds
and
cmp
addl
je
mov
sti
add
jb
in
iret
lcall
out
shr
xchg
ljmp
stos
repz
xchg
sbb
mov
and
insl
and
jle
add
lret
jne
push
xor
adc
in
adc
rcr
jne
jp
int
js
or
js
stc
jp
fnstenv
and
popf
pop
cmpsb
es
adcb
outsb
jne
add
les
dec
sub
popa
inc
mov
in
adc
jmp
lock
sbb
add
mov
sahf
pop
inc
xchg
fistpl
leave
ljmp
xorb
inc
jne
cld
lret
push
pop
mov
mov
or
fwait
cli
decl
ljmp
xchg
leave
sbb
sub
inc
js
std
lret
lcall
bound
and
ljmp
adc
inc
cmp
pusha
and
in
sub
dec
scas
inc
mov
sbb
loope
cmp
add
std
pop
sbb
stc
jne
ret
pop
loopne
xchg
movsb
xchg
and
or
call
cmpsl
jae
pop
pop
adc
adc
sbb
jo
xchg
popa
out
jmp
gs
and
jg
decl
sub
sub
out
cmpsl
lods
push
test
pop
aam
lods
inc
adc
stc
push
mov
call
aad
jmp
mov
cmc
jns
jmp
sti
decl
mov
mov
popa
mov
xor
dec
shlb
or
lret
shll
hlt
jmp
push
xor
push
std
ficompl
ljmp
mov
jecxz
pop
xchg
int3
xchg
pop
jae
mov
jae
test
pop
adc
xor
or
sarb
jb
decb
cmp
lret
mov
fldcw
loopne
or
psllw
stc
ja
push
outsb
mov
repnz
sub
mov
popf
inc
fwait
xchg
cmp
data16
pushf
cmpsl
jle
mov
iret
aam
adc
pop
mov
add
mov
insl
addl
xchg
xchg
es
adc
or
lcall
mov
scas
nop
mov
sub
roll
pop
out
clc
insb
cmpl
mov
xchg
dec
in
jle
leave
jecxz
inc
aaa
pop
jle
mov
loopne
mov
sbb
push
js
push
xor
mov
call
adc
add
fcoms
int
pop
push
fildll
or
lea
ds
lds
cmp
jmp
cmp
loop
xor
jbe
ljmp
test
push
scas
sbb
and
in
inc
jo
pop
scas
push
xchg
and
std
aaa
pop
xor
inc
repz
in
rcl
push
pop
mov
outsb
adc
arpl
test
or
jp
or
pop
subb
insb
dec
lret
jmp
lcall
aaa
mov
scas
adc
scas
sbb
addr16
insl
mov
xor
xor
daa
inc
clc
mov
pop
out
push
aad
ret
negb
mov
out
jnp
cs
sysexit
in
rclb
iret
test
loope
rol
or
cmp
pop
xor
inc
insl
sub
mov
dec
cmp
fcompl
pop
sbb
mov
inc
fldl
shlb
lds
cmp
gs
cmp
jmp
add
stos
pop
jge
sub
movsl
mov
mov
sub
cmp
movsb
or
inc
and
mov
jp
mov
pop
call
in
int3
xchg
test
repnz
aam
enter
cmc
es
stos
lahf
sub
sbb
xor
or
hlt
jnp
nop
in
and
and
hlt
and
push
push
mov
sub
addb
push
jne
out
xchg
or
aaa
test
mov
and
or
jmp
jb
aaa
movsb
and
daa
xchg
push
xchg
add
cmpb
mov
test
dec
gs
xchg
and
js
mov
mov
sbb
add
push
inc
sbb
adc
pop
push
mov
and
rclb
or
or
sub
mov
fildl
in
mov
in
test
jg
adc
popa
rcll
scas
hlt
adc
mov
jb
gs
sub
sub
and
cmpsl
hlt
jl
or
adc
or
add
inc
sub
sbb
mov
push
fs
scas
shll
dec
clc
incb
sub
xchg
shrb
push
inc
mov
xor
cmpsl
int
adc
sub
clc
or
add
jo
fstps
pop
sub
xor
and
pusha
cmp
and
add
push
rol
inc
sub
test
loope
inc
cld
push
shrl
lret
mov
imul
add
bound
pop
out
ret
stc
stos
sbb
mov
testl
dec
jo
hlt
add
xor
lds
push
int3
js
add
mov
pop
sub
jae
repnz
stos
xor
mov
mov
add
sub
add
dec
xor
lea
inc
or
xchg
push
fsubrl
movsb
add
adc
aaa
and
xchg
and
or
or
jge
add
int3
lea
ja
mov
movsb
or
sub
adc
jmp
pop
sbb
sbb
add
inc
mov
iret
clc
sbb
jne
jp
lods
add
xlat
pop
lret
subb
add
outsl
mov
pop
imulb
adc
cltd
mov
jge
sbb
xlat
ja
les
insl
inc
ja
or
enter
pop
insl
roll
enter
and
mov
shll
jmp
mov
pop
pop
outsl
aam
pop
xchg
aaa
pusha
dec
out
pop
push
ja
jne
lock
decl
and
fdivs
lcall
loop
sbb
xor
push
sahf
std
pop
lret
in
or
adc
call
and
loop
lods
sbb
mov
push
push
jno
pop
xchg
and
push
movl
add
into
test
push
and
inc
rolb
xor
mov
arpl
das
push
aaa
icebp
frstor
cmp
push
sub
mov
addb
lret
jp
mov
in
pusha
enter
mov
ffree
ja
adc
sbb
or
in
push
and
sbb
dec
pop
mov
inc
and
repnz
add
mov
test
enter
ljmp
jns
pop
cmp
out
je
test
xor
pushf
mov
nop
cmp
loopne,pt
add
insl
mov
incl
cmp
sub
adc
xchg
mov
pop
push
dec
les
mov
adc
dec
mov
js
fadd
test
test
incl
sub
pop
sbb
dec
ret
fnstsw
xchg
cmp
sub
and
pushf
dec
push
pop
inc
push
mov
jecxz
pusha
cs
loope
test
xchg
andb
je
pop
sbb
mov
adc
push
push
push
aaa
pusha
daa
aam
outsb
push
jmp
sbb
ja
pop
test
ret
fwait
loopne
loopne
sbb
sbb
add
push
mov
mov
or
sti
mov
aad
ror
shrb
and
xor
sub
movsl
xchg
jl
inc
push
or
out
ficoml
sbbb
imul
rolb
daa
int3
lock
fsubrl
push
push
fwait
test
jns
sub
mov
aad
mov
or
xor
in
outsl
fsubr
mov
pusha
lods
push
pop
decl
outsl
pop
add
std
and
fwait
and
pop
mov
mov
jo
sub
popa
dec
jae
call
pop
stc
dec
div
outsb
mov
mov
outsw
xchg
dec
mov
mov
mov
push
sub
insl
rcl
and
clc
xor
lods
add
mov
mov
cld
pop
test
mov
and
inc
xor
jg
je
and
in
push
out
pop
pop
clc
in
and
and
cmp
cmc
add
decl
pop
rol
pop
or
add
arpl
mov
cwtl
les
aaa
addr16
or
mov
lahf
or
xchg
cmp
aad
mov
sub
cmp
add
je
cs
ljmp
das
pop
js
sub
push
mov
cmp
insb
adc
cmp
ja
cli
mov
mov
addl
pop
adc
or
test
add
adc
add
repnz
scas
out
js
push
mov
cmp
lock
push
lods
sbb
pop
mov
loopne
rcr
aaa
push
lock
inc
inc
lds
mov
xchg
lcall
and
or
loopne
lcall
or
push
mov
push
mov
and
fisttpl
loope
and
mov
sbb
lret
mov
pop
rclb
and
call
in
xchg
sbb
ficompl
adc
pushf
add
aas
adc
shlb
inc
adc
adc
into
std
sbb
movsl
pusha
inc
dec
or
out
lret
jne
fisttpl
push
fdivs
sahf
mov
imul
mov
xchg
xchg
adc
sbb
mov
cs
hlt
sarb
mov
inc
popl
clc
into
adc
pop
mov
cmp
inc
rorl
dec
stos
shlb
enter
xchg
hlt
lahf
and
mov
dec
pop
add
pop
shll
xchg
pop
out
mov
pop
insb
orl
add
aad
popa
iret
clc
call
outsb
gs
cmp
pop
mov
icebp
adcl
or
hlt
jmp
mov
jge
cmp
ss
jne
xchg
add
add
pop
dec
lcall
lods
outsb
mov
in
fcoms
sbb
or
adcl
movsb
addl
rcrb
insl
pop
adc
imulb
cmp
arpl
arpl
pop
or
inc
clc
and
pop
inc
mov
and
dec
sbb
pop
mov
jmp
adc
fidivrl
stc
sbb
es
jecxz
orb
cltd
out
sarb
dec
add
adc
clc
filds
xor
imul
imul
cwtl
push
hlt
add
rorl
fwait
lahf
and
popf
mov
and
pop
int3
mov
cmpsb
sbb
sub
mov
sbb
xor
mov
jmp
add
xchg
and
es
sti
inc
pusha
ja
sub
insb
pop
orb
inc
cmp
hlt
push
icebp
test
lock
fnsave
add
loope
in
push
xchg
pop
cmp
add
arpl
shlb
xor
cmpsb
stos
xchg
loope
adc
arpl
adc
mov
ret
pop
jge
shrl
ret
and
xor
dec
aam
leave
push
outsl
cmp
data16
testb
in
sbb
roll
mov
ja
fildl
xor
out
test
rcrl
je
push
push
sti
es
insl
add
cmc
lods
out
adc
push
jecxz
add
call
outsb
cwtl
ljmp
push
xchg
and
xor
rcr
lods
pop
sbb
and
lock
pusha
adc
popa
cmp
cmp
incl
ficoms
jp
or
add
push
jnp
sbbb
fwait
aad
adc
daa
pextrw
dec
xor
cmp
js
pop
xchg
test
daa
sub
lock
repz
mov
dec
hlt
sbb
add
xor
mov
movsl
mov
jno
jecxz
fucom
inc
adc
xor
jae
and
xlat
sub
pop
add
stos
mov
dec
xchg
test
subb
aam
mov
sbb
lea
jle
mov
xor
leave
adc
xchg
sbb
cmp
sub
inc
aaa
loopne
inc
cmc
in
pop
jl
xlat
les
dec
int
jl
mov
test
cs
sub
cld
lods
add
in
jmp
add
jnp
fdivl
ret
cmp
add
cmp
repnz
inc
push
adc
cwtl
pop
dec
rolb
js
jno
cltd
jl
test
inc
xor
jb
and
mov
outsl
add
fldt
xchg
pop
imul
jbe
outsb
sub
sbb
cmp
mov
mov
xchg
jge
mov
push
je
call
es
jmp
into
mov
fstpl
push
xor
lock
sbb
ljmp
ret
incl
xchg
xchg
inc
out
aaa
mov
pop
inc
fmull
mov
or
das
int3
test
sub
outsl
push
scas
mov
xor
out
push
sbb
lock
cld
repnz
and
rorb
or
mov
faddp
or
or
std
aas
out
leave
pop
mov
mov
mov
jns
frstor
aad
push
push
hlt
inc
test
pop
out
je
jl
jbe
das
add
in
shl
push
pop
cmpsl
aad
xor
cld
xor
inc
inc
or
push
jge
aam
outsb
inc
movb
aaa
mov
mov
mov
stos
add
aam
dec
subb
loop
enter
aaa
mov
pop
push
mov
pop
lahf
mov
xor
outsl
in
or
cmpsl
in
je
in
gs
adc
decl
push
mov
mov
mov
and
or
test
fisttps
dec
out
iret
jns
mulb
outsl
hlt
arpl
jo
push
jno
aam
inc
adc
inc
test
les
jbe
std
mov
push
adc
loop
cmp
rcll
insb
int3
cltd
or
mov
in
mov
jmp
ds
int3
jp
mov
int3
sub
les
sbb
scas
jne
sub
imul
aas
sbb
mov
stos
mov
jg
mov
popa
enter
stos
mov
add
xor
lret
xor
add
pop
add
mov
mov
out
mov
fimuls
mov
push
pop
mov
jno
inc
pop
mov
in
jbe
push
add
push
sbb
inc
lret
or
int3
push
xor
movsb
imul
xchg
fwait
imul
mov
flds
pop
clc
mov
add
orl
xchg
mov
mov
je
scas
mov
js
xor
lock
hlt
nop
mov
inc
and
xor
test
enter
stos
scas
push
sub
add
and
dec
cmp
shrb
movb
les
out
jne
xor
int3
pop
shrb
mov
mov
std
or
outsl
push
mov
push
push
dec
add
dec
inc
sbb
or
add
pop
xchg
cmp
icebp
pop
inc
stos
fdivs
inc
aas
ljmp
or
adc
pop
mov
pop
popa
into
dec
call
sub
mov
mov
dec
aam
lret
or
mov
fadds
repz
inc
or
jle
fiadds
cltd
adc
mov
inc
adc
arpl
rcr
mov
mov
jb
xchg
cld
mov
inc
js
subb
or
cli
icebp
aam
adc
inc
xor
and
mov
adc
outsb
mov
cmpsl
lret
std
dec
subl
adc
pop
fstl
inc
adc
or
or
int
fimuls
xchg
mov
je
xchg
push
aad
mov
and
call
sub
clc
sbb
add
out
shll
hlt
in
in
and
mov
add
sahf
mov
addr16
iret
push
xor
xchg
jle
jno
push
push
rorl
sarl
xorb
push
xor
bound
iret
test
and
int
repnz
sbb
test
dec
and
ljmp
push
inc
sub
push
in
push
lods
cmp
out
outsb
cmp
push
inc
sub
or
push
es
push
dec
dec
pop
push
decb
testl
insl
jp
or
sbb
add
adc
mov
add
jno
and
mov
push
adc
jb
dec
jbe
or
push
pop
fistpl
xchg
sbb
das
inc
sbb
dec
std
pop
icebp
pop
dec
xor
mov
out
pop
mov
sbb
xor
sbb
sub
and
ret
or
aad
in
add
bound
cmp
mov
sub
dec
sub
fistps
shlb
popa
sub
cwtl
mov
inc
xchg
sahf
dec
sub
dec
jecxz
or
xor
cmpsl
xchg
pop
push
xor
sbb
icebp
or
sub
mov
and
jge
stos
add
dec
and
add
or
sbb
jae
inc
call
add
xor
and
fwait
add
sbb
or
out
loop
repz
push
and
iret
sbb
in
repz
pushf
scas
jge
call
adc
xchg
das
mov
sub
aaa
mov
inc
push
cmp
ljmp
mov
cmpsb
push
pop
mov
sti
dec
push
rorl
stos
scas
rcrb
rolb
aam
int3
orb
vmwrite
dec
adc
jmp
push
add
bound
outsb
imul
and
or
jle
xchg
loope
jg
out
xchg
sbb
dec
adc
fstpl
adc
and
pushl
push
addb
sub
aad
addb
xchg
sahf
cli
adc
push
adc
dec
mov
inc
pop
push
adcl
jmp
call
jne
lock
adcb
mov
inc
inc
sub
push
and
or
inc
je
inc
cmc
mov
movb
in
adcb
add
add
ja
rcrb
cmp
or
stos
sbb
jb
mov
es
outsb
daa
arpl
lds
adc
push
leave
xor
aas
pop
fidivs
ret
xor
sbb
cmp
and
or
xor
call
and
aad
aaa
cmpsb
xlat
into
test
inc
rclb
out
aas
push
pop
jmp
xchg
dec
adc
pop
das
cmp
dec
sub
ss
cwtl
xor
mov
and
mov
jge
icebp
xchg
fwait
add
mov
loope
lcall
dec
fisttpl
or
dec
sub
popf
inc
sub
lods
xorb
and
add
sub
xchg
loopne
movsb
sub
out
in
xchg
shll
xor
pop
jg
jp
sbbb
cmp
arpl
int3
cwtl
mov
out
push
xor
dec
fnsave
jns
push
cwtl
xor
xor
mov
adc
sbb
cmp
testl
xor
sar
xlat
and
push
inc
mov
jnp
or
cmp
jecxz
lock
testb
or
xlat
mov
push
xor
or
movl
icebp
es
push
adc
add
pop
ljmp
mov
adc
mov
adc
and
nop
clc
sbb
data16
sub
jle
inc
or
stc
fbld
add
scas
jbe
fcomi
or
pop
adc
xlat
das
add
fwait
int
dec
pop
sub
lods
mov
adc
mov
loopw
xchg
aad
mov
sbbb
mov
mov
push
test
push
mov
loopne
lds
fildl
sub
sub
adc
scas
pusha
shrl
fiaddl
pop
loope
aaa
imul
mov
xchg
jo
or
and
scas
sbbl
loop
adc
mov
push
mov
mov
outsb
mov
adc
jae
mov
pop
mov
shll
les
orb
ret
sub
or
add
xor
dec
outsl
pop
dec
fwait
js
inc
cli
xchg
adc
mov
sbb
nop
je
push
bswap
cmpb
aaa
clc
push
adc
test
pop
sub
jmp
mull
jae
and
xchg
cwtl
adc
test
adc
sbb
shll
shll
sub
and
pop
adc
xorb
es
push
inc
xchg
mov
sbb
fnstcw
push
mov
addb
lcall
xchg
or
mov
shll
lret
xchg
lea
inc
inc
roll
cmpl
jmp
or
les
add
xor
mov
cltd
icebp
add
test
mov
cld
mov
jne
outsl
xchg
loope
push
popf
cmpsb
lahf
push
add
cmp
sbb
fsts
inc
xchg
lahf
add
clc
pusha
xor
ljmp
std
inc
pusha
mov
aam
out
daa
adc
xor
jno
into
sbb
push
out
or
mov
enter
cli
lds
or
pop
or
mov
outsb
enter
sahf
lods
outsl
mov
je
subb
movb
lahf
sub
jno
adc
cwtl
cwtl
adc
add
in
rcll
sbb
push
push
pusha
push
add
popf
add
cwtl
push
lret
jp
pop
push
sbb
inc
arpl
inc
icebp
int3
add
push
dec
inc
pop
mov
adc
inc
sbb
insl
sbb
xchg
and
shlb
dec
jmp
fadd
pusha
js
movsb
xchg
push
ja
or
add
lods
xchg
sbb
andb
mov
pusha
in
cmp
xorb
xor
rcll
mov
repnz
int3
and
faddl
mov
inc
movsl
addr16
add
and
arpl
or
mov
in
shlb
push
pop
push
dec
xchg
lds
enter
cmc
movsl
das
push
and
mov
adcb
and
shll
rolb
repnz
mov
or
out
and
rcrb
inc
imul
jns
mov
xlat
outsb
or
daa
and
insl
lea
scas
and
mov
out
lock
lds
icebp
je
jl
cwtl
test
dec
jl
lock
adc
lods
cmp
dec
jb
out
mov
popf
mov
xchg
fwait
lock
movsb
ficomps
adc
fstl
inc
and
push
add
lret
dec
xor
cmp
xlat
mov
jecxz
cmp
subb
out
loop
call
and
es
or
rolb
shll
movd
mov
jecxz
mov
sbb
mov
xchg
aad
out
add
dec
dec
jo
sti
jb
sbb
stos
int3
jle
aas
add
loopne
loop
xor
std
fadds
add
pop
cmp
or
or
pop
pusha
fnstenv
out
cmp
mov
mov
sbb
fsubrl
adc
push
or
enter
xchg
cmpsb
and
mov
lds
ret
sbb
jmp
sbb
adc
sbb
ret
sbb
sub
test
and
mov
js
jae
inc
les
and
mov
aas
jnp
clc
test
mov
rclb
iret
fidivrl
dec
out
and
adc
test
xlat
repnz
push
loope
stos
jle
adc
push
fldenv
add
xor
mov
push
sub
fldcw
lea
int
mov
xchg
sbb
add
pop
xorl
push
aam
and
cmp
mov
por
sbb
rolb
pop
xor
push
fcomp
adc
loope
and
mov
dec
std
dec
push
inc
mov
push
push
int
inc
rolb
mov
xchg
pop
decl
ljmp
sti
call
push
fs
cli
lahf
add
outsl
mov
inc
push
incl
lock
fisttpl
nop
shrb
sti
or
add
mov
mov
and
jbe
decl
add
xchg
push
stos
add
jg
das
rcrl
ja
out
das
pop
add
add
es
fbld
pop
mov
mov
aam
or
testl
push
mov
mov
mov
stc
bnd
add
dec
stc
aad
pusha
push
ret
mov
inc
push
sahf
dec
jo
movsl
and
cmp
push
cwtl
sub
out
shll
repz
xchg
push
add
scas
add
addr16
in
cmp
jbe
jmp
xchg
mov
subps
adc
fstpt
roll
imul
add
or
aas
jecxz
ds
add
xchg
inc
in
iret
dec
or
push
or
add
and
or
xchg
fmull
push
lcall
xchg
out
dec
test
pusha
cmp
hlt
insl
decl
cmp
mov
push
push
fsubr
adc
pusha
mov
neg
insb
mov
mov
cli
sti
mov
mov
sub
ljmp
cmc
and
mov
jecxz
add
shrl
call
fmull
mov
cmpsb
test
adc
or
mov
xchg
jg
sbb
fisttpll
add
outsl
jg
daa
sbb
outsb
xlat
pop
je
icebp
dec
sbb
mov
xlat
fdivr
incl
sub
xchg
or
ret
sbb
pop
inc
lds
push
inc
xor
inc
dec
add
cld
mov
pop
dec
mov
dec
inc
pop
cltd
mov
mov
leave
arpl
or
cld
movl
adc
lock
push
push
test
mov
sub
add
loop
inc
sbb
adc
and
push
adc
sahf
popf
popa
push
mov
push
arpl
jg
cmp
and
call
add
dec
imul
cmp
dec
dec
popf
add
iret
push
cltd
sarl
into
jmp
pop
loop
loop
pusha
sbbl
daa
das
inc
icebp
ret
inc
imulb
mull
aas
mov
sbb
fimuls
mov
sub
lock
fiaddl
inc
les
jno
push
or
mov
out
sahf
das
adc
rorl
xor
jb
movsl
sub
mov
rolb
mov
out
mov
ljmp
push
cmpsb
fwait
or
cmovg
push
or
outsl
mov
cmp
mov
cmpsl
and
sub
and
fcmovnbe
ret
data16
sbb
lock
jmp
add
mov
add
cmp
shlb
dec
and
inc
inc
je
cltd
cli
push
cli
lods
inc
add
dec
cmp
lret
fs
clc
lods
loop
sarl
or
push
int3
out
or
cs
cmp
add
xchg
and
dec
mov
adc
cmp
inc
add
or
and
decl
hlt
stos
or
js
fdiv
jns
mov
in
daa
mov
adc
push
js
xchg
sub
cmp
xchg
bound
pop
push
adc
sbb
mov
aad
inc
in
mov
xor
inc
mov
cmp
or
mov
sub
add
loop
mov
in
inc
in
mov
movsb
cmpsb
and
push
int3
xchg
add
and
mov
add
jb
mov
add
push
sbb
faddl
or
and
cmp
fpatan
loopne
ja
or
aas
sub
and
xchg
int3
fidivs
mov
adc
sti
add
cmp
push
mov
in
jno
cmpl
jge
adcb
and
call
insb
sub
cmp
xlat
mov
sub
inc
mov
dec
inc
fadds
aam
add
mov
push
lcall
sbb
loopne
push
push
push
in
lods
loopne
mov
adcb
or
lea
xor
mov
mov
push
mov
xchg
mov
lock
popa
inc
mov
lcall
xchg
les
mov
pop
jmp
in
sbb
adc
test
mov
pushf
push
lock
ja
pop
adc
fisubrl
add
dec
scas
adc
cltd
loopne
mov
cmp
or
shrl
fstl
inc
ja
pop
inc
in
xor
lock
mov
enter
and
movsb
fisubl
inc
std
mov
das
mov
test
jae
and
inc
adc
adc
insb
mov
jl
js
add
nop
sub
push
aaa
jno
imull
xchg
adc
add
jne
xchg
add
adc
or
mov
xlat
jb
std
jns
inc
pusha
jge
inc
test
or
or
push
pop
cmp
aas
mov
sahf
data16
push
lret
and
push
mov
adc
dec
shrl
shrl
inc
add
into
rclb
cmp
cli
push
lea
nop
inc
pop
push
push
movsb
out
inc
mov
push
pushf
lret
inc
movsb
inc
mov
fbld
roll
aas
push
xchg
dec
inc
and
inc
inc
lock
cmp
cmp
adc
loop
dec
ja
pop
mov
mov
jae
mov
ss
cmp
inc
jmp
xchg
and
mov
push
jns
push
sbb
sbb
clc
clc
push
addb
jle
push
and
push
out
sub
fnstcw
push
data16
orb
fdivs
fs
push
push
mov
fdivs
in
cmp
adc
movb
pop
mov
in
and
pop
mov
stos
loopne
daa
mov
fcmove
sub
cmp
divb
push
je,pn
lds
mov
cli
add
push
cltd
sub
pop
mov
fdivl
in
pop
adc
sbb
pop
movsl
jb
push
push
sub
loope
or
pop
jns
or
stos
shll
dec
mov
add
jnp
into
or
cmpsb
int3
aad
add
or
push
mov
ret
mov
inc
or
stos
fldenv
push
mov
ss
add
fadds
and
adc
dec
cmp
movb
xchg
mov
or
jge
push
sub
gs
sbb
cmp
and
sub
movsb
mov
iret
int3
or
out
test
jl
dec
ljmp
pushf
and
andb
lcall
test
shl
jbe
dec
jno
cmp
rorb
mov
leavew
hlt
xchg
pop
out
iret
add
popl
sub
sub
jle
fs
or
stos
shl
test
lcall
mov
add
sahf
xor
inc
mov
xor
sbb
jae
pop
adc
cwtl
xor
iret
jecxz
xchg
imul
and
or
dec
xor
push
rcr
incb
xchg
xor
loope
xor
and
fildl
inc
popf
out
sbb
mov
fxch
rcll
mov
daa
mov
push
cmp
in
dec
sub
nop
stc
lret
adc
imul
leave
fsubrp
inc
add
fwait
icebp
cmpsl
add
mov
in
js
mov
xor
out
cltd
int
je
arpl
pop
loop
addr16
xchg
js
xor
and
movsb
pushf
sbb
int3
mov
or
mov
imul
or
xchg
lahf
je
imul
pop
notl
mov
inc
decl
sarl
and
cmpsl
es
arpl
movsb
sbb
pop
in
or
dec
jns
lds
inc
pop
sub
fs
sub
cld
and
sbb
call
add
imul
cmc
or
les
dec
inc
jo
test
sub
sub
test
ja
mov
xchg
nop
xorb
push
add
pop
pop
das
add
mov
outsl
hlt
fisttpl
add
cmp
mov
das
jne
dec
sbb
sub
sti
dec
std
fcomip
mov
hlt
into
push
push
insl
add
insb
mov
std
xchg
mov
repz
shll
stos
and
lret
adc
xor
movb
sbb
dec
inc
pop
fnstcw
add
mov
adc
and
es
decl
les
xlat
aas
divl
cmp
pop
les
mov
cmp
data16
cmc
out
pop
sbb
and
in
aad
pop
pop
fildll
xor
test
xchg
fcomi
jmp
mov
ud1
inc
xchg
mov
jns
testl
adc
mov
and
add
scas
pop
ljmp
pop
mov
scas
pop
movsb
std
rcrb
sbb
xlat
cs
mov
repz
mov
loop
in
jne
mov
rorl
mov
mov
sub
mov
ljmp
ret
mov
and
dec
js
aam
aad
icebp
cmc
add
inc
pop
scas
add
mov
mov
loop
sub
jns
fimuls
outsl
jo
std
lods
add
xor
and
data16
sub
lcall
xchg
jns
inc
orb
push
addr16
leave
hlt
packuswb
and
les
insl
popa
dec
out
mov
push
mov
xchg
push
aam
pop
and
pop
outsb
incl
cli
xchg
mov
mov
rorl
or
invd
xor
add
cld
mov
add
adc
outsl
push
js
inc
mov
or
mov
adc
stos
or
inc
adc
dec
aaa
mov
inc
mov
mov
lret
fstl
cmp
jp
fcoms
outsb
mov
lods
je
leave
jl
fisubrl
fbld
and
push
stc
push
ficompl
add
pushf
mov
push
popa
leave
cmc
and
push
xchg
adc
add
push
cmp
in
iret
pop
push
jbe
in
push
mov
mov
mov
mov
pop
loopne
or
bound
add
or
adc
mov
mov
bound
or
sub
fsubrs
fidivrl
inc
rorl
js
loope
mov
mov
push
stc
mov
fisttps
shll
adc
mov
add
das
mov
add
int
in
mov
les
cld
sbb
sbb
lods
test
adc
jg
mov
shrl
insl
push
fsubrs
pop
cld
ljmp
cld
cmpsl
aaa
call
cltd
idivl
mov
les
fdivl
xor
fldt
je
add
stos
js
dec
jg
jb
daa
lds
jg
or
jae
push
cmp
es
rorb
pop
sub
bswap
push
test
push
add
decl
xor
inc
hlt
addb
test
in
cmp
aam
push
mov
test
std
ret
pop
sarb
lods
mov
scas
or
mov
aam
cs
stos
daa
mov
das
adc
sbb
push
int
std
mov
cmp
clc
test
add
addb
sbb
xor
sbb
push
outsl
mov
pop
inc
in
xchg
jbe
jg
pusha
pop
or
fldt
xchg
mov
daa
dec
test
sbb
jno
repz
add
dec
push
icebp
and
ret
out
fnstsw
pop
jecxz
rcll
xchg
repnz
je
dec
sbb
push
mov
pushf
push
aad
clc
mov
or
adc
mov
faddl
scas
cmp
std
mov
sbb
aad
push
adc
incb
sar
adc
ss
sarl
mov
bnd
jecxz
icebp
out
loop
sti
push
movsl
inc
cmpsb
incl
call
sar
or
ficomps
cmpsb
dec
loope
mov
addb
add
test
aaa
outsb
std
shrl
sbb
cmp
mov
shll
stos
jne
lods
cmp
aaa
and
fistl
dec
inc
ss
insb
aam
jp
sbb
adc
mov
repz
cmc
or
xor
inc
jmp
rol
outsb
add
ret
sti
enter
stos
lret
fnsave
xchg
sti
inc
and
incl
jp
xor
adc
inc
adcb
test
and
je
or
sub
cmp
adc
inc
int
rclb
into
inc
or
inc
out
sbb
dec
fsub
pusha
mov
xor
pusha
jle
in
jecxz
cmp
decb
adc
push
fsubrs
adc
subb
xor
adc
movl
das
inc
mov
lret
repnz
out
inc
xchg
in
or
pusha
mov
out
sti
pusha
and
ds
xor
cmp
adc
push
cmp
daa
cmp
jmp
add
ss
hlt
add
jo
inc
dec
aaa
aam
add
incl
push
icebp
dec
pop
xlat
mov
mov
pop
fnstenv
sub
mov
inc
test
into
mov
mov
aad
sub
xor
inc
add
pop
mov
dec
and
sbb
push
popf
and
lock
push
adc
daa
xlat
cmpsl
andl
je
lock
mov
loopne
add
int
jp
call
jne
ret
pushf
jb
adc
test
mov
mov
or
loop
and
and
and
push
pusha
adc
fbld
ret
jle
push
orl
push
jo
orb
adc
pusha
pop
mov
dec
push
cmp
call
add
adcl
and
xchg
loop
dec
adc
cmc
pop
inc
sbb
or
pop
out
mov
xchg
enter
add
pop
popa
push
xchg
les
les
subb
ret
lret
rolb
and
mov
sub
sahf
dec
pushf
pop
mov
hlt
aas
lock
movb
mov
add
aam
in
add
mov
ljmp
lcall
pop
sbb
adc
mov
inc
jns
add
push
push
push
sub
lods
add
filds
fs
push
cmc
fildll
push
andb
icebp
inc
insb
fwait
cli
jle
loopne
in
sbb
in
adc
mov
pop
xchg
inc
xor
in
pusha
inc
dec
cwtl
stos
inc
mov
inc
and
dec
inc
lods
sub
push
cmc
inc
cli
mov
mov
push
inc
sub
adc
push
mov
ja
xor
fiaddl
adc
rsm
push
or
sub
jae
addr16
xor
mov
pusha
mov
pop
cmc
sub
insl
xorl
jle
jp
fcmovnb
pusha
jbe,pt
mov
cli
xor
jo
loop
pop
int3
fs
faddl
andb
call
fsubrs
aas
dec
push
pop
addb
lcall
or
cmp
adcl
push
and
mov
sbb
dec
mov
insb
mov
sar
call
pushf
test
sub
or
xchg
mov
aaa
adc
rol
adc
mov
push
shll
fistpl
add
xor
cld
inc
jmp
ret
ficomps
mov
cli
mov
and
add
scas
mov
jmp
inc
notl
xor
and
hlt
iret
lds
loopne
fucom
sti
stos
sub
shll
test
dec
push
or
lods
xchg
incb
rolb
cmpsl
les
aaa
mov
insl
incl
mov
inc
fcomps
mov
mov
or
lods
data16
fs
mov
dec
push
out
pop
add
mov
sbb
mov
pusha
cwtl
xchg
leave
sar
popf
aam
pop
mov
popf
cmp
adc
cmp
mov
clc
cmp
pushf
into
roll
or
inc
stos
mov
data16
add
cmp
xchg
sbb
loopne
xchg
sub
shl
vmread
sub
fwait
or
xor
lcall
xchg
jg
sbb
ljmp
add
sar
incl
lret
and
and
lcall
add
test
xor
adc
sar
xor
sub
decl
das
insb
imul
or
sahf
push
imull
aad
or
or
addr16
or
xor
mov
or
add
xchg
cmp
or
aaa
cld
lds
cmp
jecxz
fwait
scas
and
inc
lock
rcll
loop
inc
imul
sbb
das
mov
in
dec
sbb
inc
icebp
andl
call
addb
fldcw
ljmp
pop
push
outsl
cltd
jecxz
pop
add
idivl
loopne
lea
xchg
mov
in
outsl
mov
out
shlb
mov
scas
adc
lret
imulb
mov
jo
lea
or
and
jno
sub
mov
dec
mov
push
sub
or
mov
std
add
inc
inc
loope
fwait
aas
mov
stos
sbb
dec
jns
mov
fildll
mov
sub
sbb
lcall
es
add
jmp
scas
jb
insb
stc
cmpsb
dec
adc
iret
bound
decl
aam
mov
jg
inc
fdivl
or
ret
mov
or
push
xchg
xchg
xor
jbe
cltd
sbb
rol
mov
adc
in
shr
sbbb
add
fmull
les
pop
add
or
add
popf
clc
inc
inc
hlt
mov
xor
and
xorl
cmpsl
add
sbb
repnz
xchg
add
into
sbb
shll
in
push
and
and
aad
sbbb
loop
sub
push
xchg
outsl
sti
sub
rorb
xchg
adc
pushf
call
jo
jmp
and
shrb
bound
push
sahf
lds
push
pop
xor
lahf
test
mov
cmp
cmc
xchg
or
xchg
xchg
mov
push
and
inc
rcr
fmull
adc
test
jb
loop
xor
adc
add
dec
sub
jno
mov
inc
or
aaa
notl
mov
add
dec
and
or
fldl
std
adc
out
int3
or
fimull
icebp
and
insb
adc
add
push
hlt
pusha
out
ret
cmc
pop
xchg
lods
call
aaa
andl
inc
add
xchg
jge
es
nop
orl
test
sbb
push
adc
push
fldt
test
rcr
in
mov
xor
outsl
sub
out
pop
das
sub
xchg
sbb
sbb
jp
rolb
inc
sub
rcl
sbb
loope
mov
aad
iret
pop
cmp
sub
push
cli
cld
sbb
lahf
push
sub
sbb
mov
aaa
xchg
push
cmp
lahf
inc
xor
xor
and
and
das
add
sub
xor
addl
add
sub
sbbl
xlat
call
mov
push
inc
cltd
pusha
push
loope
arpl
mov
jp
ja
gs
icebp
int
jb
jle
and
aam
lods
or
subb
pop
int3
sub
pushf
sub
add
and
xorb
test
and
cmp
int3
inc
adc
add
adc
mov
popa
in
mov
add
push
xlat
adc
mov
decl
and
out
xor
shll
mov
test
lcall
xchg
js
cmc
test
sub
hlt
xchg
cwtl
add
mov
sub
mov
fistpl
mov
outsl
aaa
inc
mov
push
jb
lcall
lods
arpl
mov
mov
out
movsl
outsb
lock
mov
loop
and
lcall
mov
and
lods
pop
add
bound
ljmp
fwait
push
inc
mov
add
add
cld
lea
cmp
sbb
int3
loop
iret
jl
orb
mov
mov
dec
pop
loop
add
inc
pop
lea
sbb
pop
movsl
lds
jnp
add
mov
adc
sbb
loop
pop
pop
add
adc
xor
and
pop
sub
jb
mov
pushf
shr
add
sti
add
in
inc
push
jo
fidivl
add
jo
lahf
push
decb
or
mov
xchg
adc
jnp
lahf
inc
lahf
pop
and
in
out
rclb
int3
push
mov
int
xchg
cmp
fcmovnbe
jle
fmulp
out
testb
dec
cmp
pop
ljmp
push
mov
rorb
jg
mov
jle
xor
sbb
inc
jl
push
sarb
push
scas
aad
dec
ljmp
xchg
mov
cwtl
or
or
icebp
dec
dec
cmp
and
nop
and
lds
pop
dec
pop
into
orb
aas
movl
andb
pop
outsb
pop
cmp
jge
data16
sub
cmp
mov
das
inc
insb
inc
std
mov
dec
or
sbb
cmp
call
rorb
jg
cmpb
cmpsl
pop
mov
sbb
and
mov
add
cmc
sbb
cmp
sub
fwait
js
add
lds
cltd
mov
loopne
mov
push
xor
xchg
sahf
and
nop
sub
add
adc
sbb
test
xchg
inc
daa
and
adcl
inc
std
fwait
cmpsb
loop
fucomip
pop
sbb
xchg
and
icebp
xor
call
addl
les
cwtl
daa
add
xor
xlat
or
int3
cmc
fwait
jl
and
ds
in
pusha
inc
sbb
insl
sbb
lock
inc
mov
cmp
arpl
jp
das
and
orl
dec
jecxz
scas
push
mov
push
into
cmp
add
data16
adc
push
cltd
mov
dec
pop
lcall
dec
ret
and
wrmsr
cmp
lret
mov
pop
or
jns
mov
aad
or
jmp
loopne
mov
jle
negl
mov
stos
movsl
push
xchg
insb
outsl
jge
and
push
push
addl
push
mov
lods
test
gs
pop
adc
mov
lea
jmp
lea
int3
jge
and
jnp
lahf
sbb
adc
cmp
sbb
push
adc
pop
or
mov
lods
stos
rcrl
js
mov
notb
add
jmp
dec
das
mov
ljmp
or
mov
push
xlat
push
sub
es
mov
push
pop
call
jns
lret
inc
insb
add
nop
mov
in
pop
push
mov
xchg
rcrl
pop
scas
dec
jbe
rcrl
jns
mov
xor
ss
push
cld
or
arpl
lods
or
popf
jmp
ret
xor
inc
cld
outsl
test
std
repz
enter
pusha
push
fwait
sbb
in
or
fcmove
cli
xor
or
lods
mov
addr16
add
icebp
rcrl
xchg
and
stos
outsl
mov
push
xchg
jp
inc
fisttpl
sarb
pop
push
pop
clc
mov
outsl
daa
fistl
in
icebp
scas
mov
mov
cmp
cmp
out
bound
jmp
inc
les
pop
inc
or
orb
lcall
mov
add
leave
xchg
sbb
pop
incl
pop
incl
pop
pop
pushf
enter
xchg
dec
jo
sbb
mov
mov
mov
ljmp
push
aaa
and
mov
mov
lock
cmp
push
fwait
lods
addr16
xor
ljmp
rorl
jbe
cld
xchg
aas
adc
stc
inc
aaa
lock
mov
cld
inc
inc
aad
mov
out
pop
stos
push
sub
sbb
add
mov
push
add
sarb
pop
add
adc
mov
les
int3
ds
add
dec
adc
jle
push
xchg
pop
add
cmp
ss
mov
add
pop
popa
mov
push
adc
xor
jo
xor
push
sti
stos
je
test
add
pop
roll
push
xor
xchg
stc
cmp
jg
adc
adcb
js
dec
insl
pop
mov
movsb
loop
and
mov
fdivrl
push
pop
dec
or
and
mov
push
int
mov
in
xchg
mov
mov
mov
in
add
leave
ficoml
jae
test
mov
cs
mov
fdivrl
cli
xchg
test
mov
cltd
add
push
pop
push
in
sbb
inc
xchg
add
xlat
hlt
subb
add
inc
adc
fbld
call
aam
imul
test
bound
shr
jmp
lcall
and
push
adc
js
mov
mov
mov
fdivr
decl
mov
xor
stc
dec
pop
orb
adc
sahf
mov
or
inc
cmp
cmp
imul
hlt
or
mov
fists
push
pushf
shll
fistpll
add
rcrl
arpl
lods
add
loopne
pop
push
gs
adc
fildll
inc
or
jb
jmp
add
fstps
mov
popf
test
adcb
mov
in
int
push
xor
iret
loop
sbbl
push
mov
mov
ret
ljmp
push
or
inc
add
dec
sbb
pushf
outsl
adc
adc
xor
inc
loope
jnp
addb
insb
scas
aad
cld
mov
aad
add
fisubs
addb
fisubrl
pusha
mov
in
push
clc
add
push
fwait
rcll
xchg
sahf
ficompl
jmp
clc
aad
inc
shlb
and
inc
and
dec
add
cmp
notb
sti
and
aas
inc
mov
pop
add
sbb
lds
outsl
xor
mov
mov
shlb
sbb
adc
dec
add
std
add
stc
push
shr
inc
cmpsl
scas
inc
addl
hlt
pop
sbb
dec
inc
xchg
sub
in
ret
testb
cmp
sbb
loope
ljmp
nop
fwait
push
inc
jbe
sub
dec
faddl
sbb
movsb
pusha
push
loop
xor
js
cli
ret
shlb
cmp
std
add
cmp
xorb
and
dec
cmpb
or
repnz
add
test
or
rolb
in
adc
icebp
push
iret
mov
adc
push
sub
dec
stos
push
lock
cmp
inc
dec
push
arpl
push
sbbb
in
clc
adc
loopne
out
in
in
int
out
push
dec
sbb
push
out
or
push
fildl
inc
roll
jl
and
out
push
xchg
aad
lds
add
add
pop
fdivp
js
mov
stc
cli
fsts
and
inc
sub
setl
mov
call
adc
or
push
inc
pop
outsl
outsb
add
adc
cmp
add
inc
xor
sub
or
sub
ret
adc
mov
test
and
push
mov
mov
inc
pop
add
add
inc
movsl
fcoml
sbb
movb
xorl
mov
inc
add
push
and
je
push
pop
mov
cmp
pop
mov
ficomps
pop
and
flds
add
sub
add
shlb
pop
in
ljmp
jg
mov
shll
arpl
insl
mov
adc
fidivl
inc
loop
xchg
ljmp
lret
vsqrtps
mov
push
les
push
mov
push
fs
dec
mov
sbb
push
movsb
insb
inc
int
stos
and
popa
gs
lret
push
push
ret
jmp
inc
fdivr
insb
adc
sub
cmp
or
adc
stos
scas
jbe
inc
xchg
xchg
stos
pop
mov
int
adc
outsb
mov
es
dec
push
mov
rorb
insl
aad
lods
pusha
cmp
push
test
imul
xchg
adc
mov
push
cltd
mov
push
fsubs
lods
test
mov
clc
mov
add
sahf
loop
les
xorb
jge
iret
add
in
shlb
mov
stos
jecxz
mov
loop
nop
push
push
jl
hlt
and
sbbb
mov
mov
shl
fucomi
test
add
xor
lock
bound
pop
mov
add
fwait
and
jno
push
cwtl
or
add
ss
leave
or
ret
push
push
rolb
inc
mov
loope
pushl
sbb
and
int
or
mul
dec
fstpt
popa
and
adc
decl
xor
sub
nop
ja
movsb
mov
xchg
adcl
pop
test
in
punpcklbw
inc
inc
push
in
sub
ss
mov
or
in
dec
stos
out
mov
pushf
and
clc
outsl
jb
inc
add
gs
sub
jp
dec
flds
mov
pusha
mov
dec
mov
cmc
adcb
cltd
add
mov
dec
ret
push
cs
fbld
data16
push
sbb
sub
dec
add
loop
clc
pop
popl
loopne
push
outsb
fdivrl
pop
or
inc
mov
ja
aam
cld
inc
notl
std
notb
hlt
sbbl
xorb
adc
or
mov
outsb
es
mov
jae
pop
pop
adc
jg
push
or
jge
adc
xorb
insb
fsubr
enter
lea
push
subl
ja
adc
dec
adc
cwtl
das
jle
jle
xchg
insb
sub
outsb
repz
outsl
stos
pop
popa
xor
adc
arpl
push
xorb
addr16
jge
push
or
xchg
ret
inc
lods
mov
pusha
adc
mov
jle
sbb
push
xor
dec
sbb
mov
mov
push
stos
mov
fiaddl
es
out
iret
aaa
ret
aas
inc
push
out
mov
stos
or
dec
dec
jne
jg
lock
stos
adc
sub
pop
add
cmp
fisttps
dec
jge
aaa
pop
rcr
xor
inc
xlat
pop
pop
ljmp
lods
rorb
mov
hlt
push
xchg
fists
mov
dec
mov
fwait
popl
sbb
pop
mov
lds
imul
inc
or
sub
push
inc
jge
jp
les
or
xlat
inc
cmp
aaa
add
push
dec
adc
cld
mov
add
mov
sub
pusha
push
in
add
mov
fs
push
flds
add
sahf
xor
data16
shll
shll
xchg
add
fbld
pop
notb
mov
out
dec
push
inc
out
sbb
add
push
addr16
sbb
pop
add
cmp
jb
lret
call
sub
adc
pop
stos
mov
sub
mov
cwtl
mov
jbe
inc
adc
sub
les
xor
adc
leave
jae
jno
mov
xor
int
jbe
sub
xchg
lods
repz
fbld
data16
ret
fldt
xor
orl
repz
lret
mov
adc
and
mov
lcall
add
lods
rcrb
stc
or
xchg
jp
pop
dec
cwtl
adc
jl
in
mov
pusha
idivb
int3
data16
rol
xchg
sub
arpl
push
push
mov
cwtl
clc
dec
xor
and
divl
das
in
imulb
xchg
xor
rolb
and
mov
dec
out
scas
and
sbb
insl
lock
sub
add
loopne
out
push
les
andb
xchg
cmp
jne
jo
addb
push
sbb
cmpsb
jg
push
or
test
je
loop
add
xchg
test
add
xor
icebp
xchg
push
jbe
and
jae
push
outsl
and
mov
jnp
pop
mov
dec
call
mov
jg
xchg
adc
outsl
inc
adc
cltd
je
and
inc
inc
fildll
xor
mov
dec
mov
add
mov
nop
sub
sbb
pop
add
out
in
rorl
rcr
cmpb
xor
daa
loop
pop
add
jge
jnp
mov
mov
add
add
rcrb
dec
pop
jge
push
cmpb
push
push
xor
fidivs
mov
adc
stos
add
bound
push
mov
sub
pop
push
fdivrs
or
test
push
pusha
mov
sub
icebp
inc
xor
adc
pop
sub
out
and
fsubrl
xlat
bound
sub
add
pop
enter
adc
or
nop
into
push
hlt
push
push
roll
pop
lcall
cld
sub
pop
js
mov
pop
mov
pusha
or
xchg
sub
roll
test
rol
push
cltd
xchg
mov
test
scas
clc
push
sub
sub
jb
xchg
mov
adc
adc
insb
test
push
inc
fsubl
mov
and
pushf
lret
xlat
sbb
mov
aaa
daa
mov
jg
addl
dec
push
out
pop
cli
add
les
jg
mov
xor
adc
fsubr
lds
cmp
pop
pop
leave
fidivrs
lcall
or
push
pop
sbb
popf
pop
inc
adcl
mov
orl
call
mov
pop
jl
lds
jbe
pusha
scas
add
pop
add
jg
jno
pop
mov
insl
cmpsb
mov
insb
iret
add
mov
rol
pushf
or
add
jle
fisubrl
ss
and
rclb
sbb
inc
mov
add
adc
mov
cld
inc
pop
pop
mov
pop
pop
lcall
dec
rcrl
mov
rclb
xchg
shlb
scas
sub
mov
cmpsb
test
adc
fldl
add
les
xchg
faddl
mov
sub
mov
sbb
insl
dec
mov
sub
add
gs
nop
and
push
jno
aam
clc
das
pop
mov
inc
inc
ljmp
idiv
outsl
mov
mov
jge
fdivrl
rorl
xor
ja
insb
adc
push
out
sbb
stos
iret
sub
jp
mov
push
pop
mov
in
leave
sub
xchg
pop
test
push
stos
mov
jnp
jmp
shlb
add
mov
in
jbe
jl
bound
mov
and
pop
or
jecxz
inc
xchg
jbe
out
pop
fwait
sar
roll
test
lret
xor
mov
and
push
adc
enter
and
jg
cli
sbb
shr
nop
in
add
add
sbb
mov
sub
repnz
mov
pop
test
outsl
shr
pop
std
adc
sbb
gs
cmp
adc
leave
in
sbb
cmp
add
cmp
lods
pop
push
jecxz
testb
mov
sub
jmp
inc
mov
cmp
stc
sub
and
inc
mov
sbb
popa
clc
pop
aad
loopne
and
idivl
insl
clc
lods
pusha
jo
jl
imul
and
jb
adc
add
mov
mov
popa
mov
insb
mov
nop
inc
test
adc
pop
es
or
mov
inc
je
add
add
xor
adc
ljmp
cmp
notl
xchg
loop
clc
idivb
mov
add
sbb
fwait
fs
popa
and
lcall
mov
into
sub
mov
mov
jnp
aaa
sub
mov
movsl
cmp
fldt
inc
loopne
adc
pusha
and
popa
js
cmp
and
lods
lock
inc
ret
dec
jge
dec
mulb
xchg
decl
mov
add
dec
jl
insl
js
adc
sti
cmp
aam
jmp
add
push
lret
pop
fidivrl
add
xchg
cld
add
mov
movsb
jb
nop
push
or
push
pop
clc
test
add
and
and
outsb
dec
test
jno
pop
jmp
jp
insl
aam
dec
cwtl
les
mov
ljmp
inc
std
push
cmp
sbb
push
sub
dec
repz
pop
clc
sbb
mov
mov
pop
pop
xchg
scas
xchg
mov
inc
shl
loope
sarb
fisubs
mov
outsl
adc
xchg
sub
and
and
fs
pop
mov
cmp
pop
sbb
xor
imul
mov
ret
mov
sub
mov
jg
arpl
pop
dec
out
mov
cmp
nop
pop
adc
shll
mov
sbb
in
fwait
sbb
or
adc
sbb
jbe
mov
xor
loopne
js
cmpsl
pop
inc
cmp
pop
lods
ljmp
lods
and
xchg
ret
shrl
outsb
cmp
lret
lods
xchg
jo
in
or
cmc
mov
pop
fistpll
scas
cmp
insl
add
lea
inc
sub
jg
pop
andl
int3
das
sub
mov
jno
loop
pop
aaa
in
clc
jbe
int3
xchg
rcll
mov
fs
addb
enter
pusha
sbb
dec
pop
mov
lock
daa
and
and
xchg
or
in
iret
mov
dec
iret
xor
mov
shrl
fs
push
lea
aaa
movsl
sub
stos
pop
mov
sbbb
push
fcoms
scas
sbb
or
xor
mov
lock
jg
or
push
cs
rolb
icebp
cmp
mov
jmp
push
insl
sub
cmp
mulb
xchg
int3
fimull
pop
push
stos
cs
das
es
pop
clc
push
pop
mov
insl
fbld
test
xchg
mov
fldl
inc
shr
movsl
pushf
orl
or
adc
dec
mov
std
sbb
div
cwtl
aaa
add
sbb
pop
ffreep
pop
and
dec
mov
test
das
stos
mov
xchg
sbb
scas
add
xchg
adc
mov
xchg
inc
or
xor
outsb
addl
or
test
sbbb
xchg
mov
jbe
mov
clc
pop
pop
ret
inc
pop
mov
std
xor
push
jbe
lock
nop
or
in
outsb
mov
xor
aam
mov
enter
sub
jg
sub
inc
arpl
loope
les
mov
stos
ss
adc
pop
push
test
sbb
popa
mov
cmp
dec
mov
inc
add
hlt
sahf
mov
roll
add
jge
push
icebp
jb
inc
in
pop
test
lret
cltd
repz
ljmp
sbb
or
ljmp
daa
lock
out
dec
sub
mov
xor
scas
inc
mov
outsl
pop
loopne
jl
jge
int
adc
push
repz
lods
and
das
cld
lods
pushl
or
das
cmc
xchg
fcomps
jecxz
out
stc
enter
add
cmpb
outsl
fistps
divb
pop
inc
inc
iret
in
mov
insb
pop
pop
mov
inc
mov
int
sub
loopne
icebp
cld
pushl
xor
fisttpl
jmp
push
cmpb
cmp
sub
cmp
push
aad
loope
ror
xchg
sbb
aad
loope
scas
call
and
mov
xlat
fcomps
aaa
out
fstps
add
iret
lea
xchg
fistpll
cmp
pop
xchg
popa
jo
ret
pop
jle
aad
aas
add
rcrb
sbb
or
and
mov
mov
mov
pop
adc
cmp
incl
popa
jmp
cmp
push
sub
lea
and
cmc
mov
ja
add
inc
in
mov
and
pop
lods
lock
call
nop
inc
and
sbb
test
inc
dec
push
cli
pop
nop
xchg
nop
inc
sbb
adc
pushf
stos
dec
ret
incl
rorb
xor
sub
std
mov
mov
mov
lods
inc
mov
loopne
insl
aad
pop
add
rcll
mov
sub
and
and
cs
fcoms
ss
sbb
lea
push
add
sub
sbb
or
decl
mov
insl
negl
mov
out
clc
sbb
les
cmp
leave
jb
add
ds
inc
cmpsl
sbb
fcompl
sub
popf
sub
mov
fcompl
cmp
das
cmc
shlb
pop
mov
xor
cli
arpl
push
mov
add
int
aas
movsl
and
sti
or
inc
dec
les
xchg
adc
xorl
out
sti
and
mov
sub
and
lock
jne
ret
sbbb
mov
inc
outsb
nop
in
shlb
mov
andb
cmp
mov
sbbl
push
pop
sub
or
pop
adc
xor
pop
pop
xchg
push
inc
es
mov
aas
mov
shll
mov
inc
add
adcb
int3
pop
movsb
stos
or
and
jnp
pusha
push
mov
insl
inc
jne
or
adc
push
loopne
push
inc
add
imul
or
add
xchg
mov
inc
lods
sbb
adc
addr16
inc
adc
inc
sub
rorb
xchg
adc
add
add
fwait
adc
mov
fsubl
test
insl
inc
or
in
dec
add
adc
mov
jnp
push
mov
adc
pop
sbbb
xchg
sbb
mov
pop
filds
icebp
push
cld
les
push
dec
or
das
sub
lea
shl
nopl
push
fs
std
test
test
aam
cmp
push
adc
mov
and
add
scas
clc
ljmp
add
mov
inc
icebp
nop
mov
ss
inc
push
mov
jecxz
sub
push
aad
and
bound
shll
loopne
pop
mov
loop
imul
inc
add
ret
adc
rorl
inc
and
test
es
iret
sbb
mov
and
push
scas
push
pop
inc
xor
xor
sbb
or
push
insl
hlt
iret
adc
ja
loope
jle
cmp
add
jl
sbb
xchg
clc
cmp
push
lahf
and
add
aas
ret
fiadds
xchg
outsl
repnz
or
scas
icebp
sti
aam
les
cmp
adc
fistpll
sbb
cli
or
add
stos
lods
and
addb
cmp
dec
sub
push
pop
push
cwtl
push
sub
dec
das
or
fidivrs
stos
mov
pop
sbb
jmp
and
ret
test
inc
cmp
and
mov
mov
icebp
mov
lock
push
test
call
dec
aas
pop
sbb
push
loope
int
fwait
jbe
push
decb
test
and
pop
cmp
adc
or
jge
mov
add
mov
xor
dec
cmp
push
inc
xor
in
das
inc
push
ja
into
xor
cld
cwtl
cmpsl
jp
in
or
add
sub
cs
mov
xor
push
and
xchg
xor
adc
mov
test
inc
or
jbe
mov
jmp
ljmp
sbb
push
sub
or
mov
mov
test
and
add
ds
mov
cmp
push
rol
loopne
xchg
cmpb
xchg
dec
push
and
pop
mov
jg
in
popf
inc
inc
xor
adc
adc
xorb
add
inc
in
and
add
jo,pn
jle
and
xor
and
rcrb
scas
sbb
inc
adc
or
ljmp
dec
rorl
xchg
inc
mov
flds
clc
mov
fisttpl
js
push
cmc
out
ljmp
pusha
inc
cmp
rclb
adc
xchg
mov
lret
pusha
dec
inc
mov
mov
dec
popa
mov
cmpsl
or
sahf
dec
push
push
add
push
sbb
pop
scas
add
push
loopne
stos
lcall
sbb
inc
add
fwait
adc
outsb
cmp
dec
xchg
aaa
loop
je
sub
push
jge
inc
xor
or
test
adc
xor
int
repnz
mov
pop
daa
cltd
mov
jg
mov
dec
roll
add
adc
add
adc
test
cmp
jmp
ljmp
jp
pop
and
or
mulb
insl
pop
xor
in
mov
insb
push
ret
inc
sbb
neg
mov
push
or
pop
xchg
inc
jno
or
aad
mov
inc
repz
mov
adc
and
or
les
xor
mov
jno
in
xor
lds
add
add
push
inc
mov
sbb
add
xor
push
das
push
scas
pop
ja
jmp
mov
mov
das
inc
jb
or
add
lock
xchg
adc
in
stos
sbb
out
sbb
push
imul
or
les
das
pop
xor
scas
or
lds
insb
mov
cmpsb
jns
mov
cs
std
std
push
sub
fidivrs
lcall
and
outsb
xor
add
add
add
xchg
bound
call
xchg
push
or
clc
movsl
fcompl
test
lret
outsb
outsb
divb
push
roll
xchg
jmp
mov
add
std
arpl
les
sbb
mov
xchg
test
xor
rclb
inc
add
stos
ljmp
add
sub
jb
mov
push
xchg
push
sbb
gs
ret
mov
push
jbe
hlt
stos
inc
insb
aad
movsb
adc
xchg
mov
sbb
in
add
mov
add
push
mov
pop
sbb
cmc
sbb
add
ss
loope
ficomps
fisttpll
mov
aaa
push
or
ljmp
or
orb
leave
push
ja
mov
or
jne
mov
loop
movsb
mov
outsl
pop
mov
adcb
enter
call
cmc
mov
pop
mov
test
lods
push
lds
add
ja
call
cmpsb
mov
add
dec
idiv
dec
std
lahf
movsb
fimull
fwait
cltd
cmp
and
cmp
std
sbb
push
add
jg
sbb
ficoml
int
popaw
and
loop
ds
jg
pushf
push
iret
test
and
leave
enter
dec
add
dec
sbb
mov
xorb
mov
out
in
mov
daa
loope
add
or
mov
fs
push
push
mov
test
pop
into
adc
in
inc
das
les
fidivl
arpl
decl
jle
loop
sub
sbb
cmpsb
fidivs
icebp
pop
add
je
sub
aaa
orb
lea
aas
lea
inc
aad
jmp
hlt
fcoml
lods
and
inc
fisttpll
arpl
rolb
and
xor
push
mov
aam
addb
es
dec
out
loope
movsb
jmp
aaa
pusha
xor
addb
stos
loopne
and
mov
sahf
xchg
sub
dec
or
rcll
ljmp
pop
mov
int3
adc
mov
xor
pop
push
add
add
adc
cmp
jnp
test
ror
mov
add
lcall
gs
test
cmpsb
cld
dec
fists
out
push
shll
icebp
sbb
subb
mov
adc
add
inc
mov
push
pop
pop
pusha
int
inc
ds
sar
push
push
mov
shlb
and
inc
ret
test
adc
movsb
daa
mov
inc
xor
cmovp
fcom
rolb
lods
orl
ljmp
inc
das
or
push
sbb
mov
inc
daa
xor
sbb
and
xor
insb
lret
clc
mov
mov
fwait
xlat
arpl
or
adc
ficoml
inc
inc
mov
cmp
push
sar
mov
pop
add
cmp
pop
cmc
fwait
jl
cmp
jne
call
jno
dec
pop
add
pop
adc
sub
push
in
in
cmp
je
mov
sub
xchg
mov
mov
sbbb
stos
pushf
popf
add
call
adc
movsb
mov
in
push
pusha
dec
pop
das
adc
in
das
mov
jmp
pop
in
nop
and
mov
lock
xchg
mov
and
xor
adc
cld
fdivrs
addb
xchg
adc
loope
sarl
int
adc
aam
sub
insb
push
pop
imul
mov
clc
jno
aas
inc
stos
dec
mov
push
call
dec
movsl
or
mov
arpl
xor
sbb
mov
xchg
dec
sub
sbb
into
sbb
and
fsubl
inc
dec
or
test
pop
cmc
push
cli
mov
sub
sbbb
pop
and
dec
in
lock
cltd
xchg
out
add
scas
lcall
push
mov
lock
add
js
inc
shl
fmuls
inc
rorl
dec
adc
push
inc
lock
or
add
sysexit
in
push
aas
sub
sbbb
pusha
add
pushf
cmp
fisttpl
dec
aaa
inc
push
mov
add
lock
mov
mov
sbb
push
les
push
mov
adc
cmp
or
inc
in
cmp
dec
scas
adc
int3
pop
xchg
repnz
and
mov
mov
sbb
les
add
add
add
aaa
sbb
inc
inc
stos
mov
sarl
dec
lock
jo
int
std
jns
xchg
xor
sub
pop
add
jo
fildl
leave
aaa
lcall
adc
lcall
xchg
sbb
xor
sti
xor
dec
adc
out
les
pop
fwait
add
inc
or
lret
pop
fxch
inc
mov
fcoml
aam
inc
aas
cmp
push
or
sbbl
xchg
push
aad
cmp
rclb
xor
jmp
clc
xor
mov
add
lock
aam
mov
cmpsb
cmp
sbb
push
mov
mov
xchg
clc
jg
add
out
rcl
jl
jo
mov
xor
std
jnp
add
dec
scas
push
ret
clc
fbstp
push
repz
lahf
xor
in
fldl
push
add
cltd
mov
jb
inc
cmc
sub
dec
inc
mov
daa
fcomip
or
pop
push
das
rolb
stos
out
std
sub
or
pop
xchg
iret
testl
je
dec
lds
inc
imul
inc
jg
popl
pop
popa
sbb
pop
test
ljmp
mov
jb
xchg
pop
insl
ds
inc
das
popf
cmpsl
pop
clc
push
jl
inc
mov
lods
jl
es
push
cli
loopne
xor
mov
hlt
push
mov
adc
mov
inc
lahf
push
mov
outsb
sbb
cmpl
pop
gs
xchg
ficoml
xorl
scas
mov
inc
cmpsl
sti
add
clc
icebp
push
jecxz
loopne
pop
mov
clc
inc
sub
inc
lret
inc
add
aaa
stos
lods
daa
iret
jecxz
std
jns
inc
aaa
mov
mov
icebp
in
dec
adc
dec
xchg
pop
xchg
push
std
aaa
ja
jne
mov
dec
inc
xor
mov
mov
out
pushl
jb
inc
test
jecxz
push
add
in
insb
ret
pop
dec
and
add
and
ja
aam
loop
sub
mov
movsl
sub
std
mov
push
jmp
ret
fcmovnbe
inc
je,pt
mov
sbb
dec
push
mov
js
lahf
add
neg
lds
mov
mov
pop
cmp
icebp
pop
sqrtps
push
push
or
or
jns
pop
pusha
push
cld
xchg
dec
mov
jno
adc
inc
pusha
and
dec
and
rcl
sbb
dec
daa
adc
mov
xor
leave
andb
out
cmp
jge
icebp
lods
sbb
fnstenv
dec
push
mov
pop
push
shrl
mov
lock
dec
inc
mov
int
and
sub
lods
jne
mov
or
push
xor
aas
inc
mov
ret
sbb
push
mov
jb
cld
ja
push
cmp
gs
repnz
pop
adc
test
daa
or
xor
movsb
sub
pusha
xchg
xlat
xchg
iret
push
adc
jmp
push
xchg
cmp
add
fxch
pushw
mov
push
lds
xchg
xor
dec
xchg
inc
dec
shll
stos
jecxz
js
adc
mov
sti
mov
cmp
int3
fiadds
adc
roll
pop
popf
int
cld
xrelease
scas
popa
mov
add
and
sbb
push
mov
dec
test
add
sub
aas
imul
xchg
pop
mov
leave
mov
pop
dec
push
xchg
orl
cmp
mov
cld
es
xor
sahf
popa
loop
dec
les
xor
add
inc
inc
stc
inc
jmp
add
js
jb
inc
popa
pusha
adc
jns
xchg
inc
jecxz
ret
lds
push
iret
mov
les
shlb
icebp
loope
mov
sti
inc
pop
mov
outsl
inc
adc
bound
or
loope
es
cs
mov
xor
and
cmpsb
lods
fadds
bound
sub
subl
insb
cltd
sbb
cmp
or
aaa
stc
and
jnp
pop
or
mov
xor
and
inc
mov
icebp
or
mov
or
inc
dec
inc
add
mov
adc
out
and
jnp
dec
push
inc
lret
dec
adcl
pop
popl
sahf
leave
and
adc
or
ficomps
test
push
jge
adc
push
add
pop
mov
rcll
push
nop
add
rorl
mov
dec
loopne
shr
pop
lods
bound
cli
pop
sbb
or
mov
xchg
pop
cld
mov
cmpl
dec
pushf
inc
adc
ret
int
mov
xorl
adc
dec
push
dec
rorb
aad
jno,pn
mov
shlb
sbb
sub
sbb
adc
aaa
int3
fisttps
cmp
lret
je
ja
in
xor
lods
mov
int
jg
test
add
adc
inc
xor
adc
push
cmp
inc
mov
push
popf
shl
mov
mov
add
int
sbbl
clc
lret
pop
inc
int
xchg
in
out
xor
rorl
hlt
jge
pusha
test
ret
movsl
push
dec
jbe
sbb
test
jg
repz
inc
push
sub
inc
jmp
in
cmpsb
inc
mov
fcoms
and
fwait
adc
or
les
sbb
pop
dec
out
and
and
cld
mov
push
xor
inc
dec
mov
adc
ja
cld
lods
sub
jbe
sbb
sbb
pop
push
pop
hlt
ljmp
loopne
lret
and
aaa
je
and
andl
inc
gs
push
push
cli
push
repz
pushf
xor
or
or
add
movb
mov
adc
andb
jne
aam
fdiv
add
fildll
sahf
mov
xor
in
leave
fsubp
and
or
xor
lds
push
test
daa
inc
mov
stos
adc
lock
bound
loop
decl
insb
pushf
scas
mov
daa
inc
lea
std
sbb
xor
daa
leave
fisubrs
das
mov
push
inc
xchg
js
mov
dec
popa
adcb
or
pop
mov
test
arpl
mov
orb
pop
fs
jge
inc
aam
inc
das
dec
cmp
adc
mov
sub
inc
pop
cli
adc
insb
sub
dec
and
xchg
push
adc
add
push
or
sbb
sbb
xor
mov
xchg
cmpxchg
cmp
xchg
mov
jg
mov
je
iret
lea
cmpsl
push
aaa
cli
inc
fcmovb
movsb
jmp
dec
mov
or
push
subl
test
adc
push
cmc
inc
mov
ss
xchg
add
dec
ljmp
mov
and
cmpsl
enter
outsl
xchg
push
nop
in
cmp
push
adc
idivl
lds
and
jmp
xor
imul
mov
adc
lock
pop
pop
jb
sbb
call
mov
jmp
xor
jnp
dec
and
dec
call
mov
repnz
mov
push
je
cmp
movsb
stos
fs
sbb
jo
inc
call
pop
aam
fs
decl
or
push
or
gs
call
mov
ljmp
pop
xchg
fisubrs
add
sbb
sbb
decl
lock
cmpb
mov
cmpb
pop
pop
shrb
mov
icebp
sbb
ret
lea
xor
fsubrs
arpl
call
sub
out
fists
fdivs
and
faddl
xchg
pop
cmp
push
adc
lcall
and
out
add
sub
inc
mov
jge
cmp
aam
arpl
xor
xchg
mov
cmpsl
les
ljmp
mov
sub
xor
pop
jg
pop
shll
fildll
push
dec
push
lret
jmp
lcall
pusha
or
and
addb
aas
jmp
mov
pushl
ss
shr
inc
add
pop
mov
pop
mov
addl
add
inc
xor
in
sub
sub
js
jg
lret
fwait
add
cs
cmc
sub
movsb
lret
cli
cmp
bts
mov
or
addb
lods
xchg
pop
or
push
mov
push
gs
push
jge
fadds
jg
sub
push
or
adc
push
out
add
cmp
inc
stc
add
rcll
adc
mov
fmuls
mov
pop
or
movsb
out
and
fbld
add
and
or
jne
push
mov
arpl
inc
inc
or
push
adc
add
or
jg
xchg
add
fcoml
setne
jbe
mov
cmp
nop
inc
jbe
inc
jne
add
sub
mov
jg
jl
in
dec
jge
mov
push
mov
mov
clc
jno
adc
mov
iret
xchg
addb
xchg
lret
addl
rolb
ds
sarb
add
sbb
in
jo
mov
pop
jb
ret
testl
push
cwtl
push
mov
dec
jne
insl
pop
lods
cmpsl
fs
aas
and
inc
pushf
pop
push
xchg
std
popa
out
push
pop
mov
mov
sub
jg
pop
enter
jecxz
add
add
outsb
test
add
and
inc
cs
inc
mov
pusha
out
pop
into
mov
ret
mov
das
jl
xchg
pop
iret
fcomps
jmp
shl
inc
dec
clc
movsb
and
and
aam
dec
pop
sahf
ss
inc
pop
mov
mov
enter
test
cs
cmp
inc
out
jmp
or
icebp
fildll
and
pop
rorb
add
jne
sbb
je
aaa
inc
and
mov
cmpsl
outsb
cltd
sbb
mov
add
sbb
insb
push
xor
mov
cmp
sub
inc
fwait
sub
adcb
aas
mov
in
mov
sbb
mov
pop
fsts
push
jmp
insl
push
ret
mov
test
or
mov
das
add
sti
imull
ret
mov
sahf
add
xor
or
lods
jno
out
pop
push
sbb
and
push
cmpsl
mov
pop
sub
outsb
mov
div
mov
jg
jl
adc
push
fstps
sbb
dec
push
push
pop
ret
in
dec
pop
jnp
and
mov
ljmp
std
fwait
mov
scas
xchg
js
fs
cmp
mov
sbb
adc
lret
std
inc
push
push
testl
xchg
sbb
cmp
jo
adc
sbb
ja
jno
push
adc
xor
in
add
mov
mov
xlat
inc
pusha
push
icebp
test
sbb
and
lea
outsb
je
mov
sbb
outsb
rcll
xlat
xchg
aas
jmp
pop
lock
and
lock
mov
ret
inc
jp,pt
shll
sub
or
fsts
inc
test
lahf
add
dec
sti
into
ss
rcll
sub
or
mov
stos
add
andb
aaa
movsb
mov
arpl
loop
mov
inc
je
pop
mov
fwait
add
cmp
xchg
test
jne
es
pop
mov
pop
xor
cmp
mov
sub
leave
icebp
std
filds
shll
add
adc
and
iret
mov
pop
mov
jb
daa
pop
pushl
pop
inc
mov
and
ret
and
aaa
inc
xchg
jnp
mov
pop
aad
add
or
sbb
int3
cmpsb
pop
dec
mov
mov
repnz
adc
cmpb
cmp
repz
jl
orb
xor
mov
fucomi
mov
push
loope
ret
test
mov
xor
inc
push
rol
sbb
sbb
shrl
adc
inc
pop
repz
add
add
xchg
jno
outsl
dec
xor
dec
adc
lds
hlt
sbbb
fwait
test
cld
bound
std
and
dec
orl
add
and
shll
fs
imul
xorb
push
xchg
adc
mov
or
cwtl
xor
sahf
inc
mov
cmc
push
daa
cmp
shlb
insl
rorb
int3
scas
inc
xchg
stos
fsubrs
ficomps
sub
dec
dec
mov
xor
jbe
xor
xchg
subb
test
es
or
fs
sbb
push
add
inc
mov
addr16
icebp
insb
jne
cld
cld
sub
add
pop
mov
adc
sahf
xchg
mov
sbb
fs
jle
loope
and
mov
cmp
xchg
push
popa
xor
popa
cmp
jb
mov
inc
xchg
inc
and
add
fimuls
cmp
jae
out
jp
rorb
mov
jae
outsb
testl
sub
inc
scas
inc
lds
scas
xlat
lods
lods
pop
pushf
sbb
and
fsubl
jb
insl
mov
gs
inc
sub
push
jmp
pop
lret
mov
fdivrs
xor
clc
xchg
xor
enter
lea
sub
ret
lods
rcpps
jl
and
les
dec
jge
inc
mov
add
or
xor
cld
adc
jne
sbb
add
mov
add
call
cmpsl
int
fsubr
cs
mov
xchg
mov
xor
stos
or
mov
std
cmp
inc
sub
cmp
add
push
inc
addr16
int3
outsb
call
cltd
or
push
jmp
and
push
or
test
xor
nop
mov
repnz
sub
xchg
out
dec
mov
jnp
xor
movsb
in
cmp
mov
sub
or
sbb
or
cmpl
push
cwtl
jmp
push
pop
mov
inc
adc
push
mov
pop
ficomps
fmuls
outsl
push
mov
pop
pop
mov
jl
lea
add
loope
add
out
dec
mov
ret
push
in
inc
push
add
jmp
adc
sbbb
inc
dec
jb
sbb
lret
add
fadds
cld
push
mov
and
mov
xlat
lret
sti
pop
fnstsw
lods
dec
rcl
inc
outsl
in
fdivs
xchg
mov
jg
leave
gs
pop
mov
or
in
fsubrs
cmp
lds
hlt
stos
ljmp
sti
test
shll
xchg
push
mov
shl
push
jmp
jo
cltd
rorl
dec
or
inc
add
pop
mov
cltd
fcmove
mov
pop
std
mov
cmp
dec
imul
pop
add
push
mov
jmp
and
test
subl
mov
mov
sub
out
push
movb
pop
dec
sbb
into
cltd
push
jae
inc
fimuls
imul
incb
cwtl
lock
movl
jmp
jl
pop
mov
xor
pop
cld
mov
xchg
adc
sbb
cwtl
sub
mov
xor
pop
test
push
repz
iret
pusha
push
pop
test
jge
lcall
sub
mov
xor
dec
rol
ljmp
decl
xchg
inc
testb
lds
cmp
mov
sti
jg
cmpsb
mov
out
rclb
call
fs
sbb
cld
sti
adc
push
lcall
mov
dec
or
adc
sti
inc
push
aam
lahf
cli
dec
add
repnz
mov
stc
adc
dec
mov
pop
mov
adc
mov
inc
add
or
cmp
nop
xchg
pop
movl
or
mov
movsl
and
cli
and
or
pop
loop
jo
dec
cmp
movsb
jg
and
jmp
aam
add
xchg
push
or
or
mov
out
test
cs
cmpsl
int3
push
push
loopne
decl
outsl
hlt
ret
enter
inc
push
add
lds
in
pop
inc
call
mov
int
cmpsl
out
ss
gs
icebp
mov
xchg
pop
dec
fs
sbb
add
incl
popa
out
and
inc
popa
cmp
or
sbb
sub
mov
pop
add
cld
rcrb
xchg
push
dec
xor
sbb
sbb
cmp
sub
roll
mov
inc
enter
sub
inc
ljmp
xchg
sbb
xchg
push
lret
jmp
test
mov
adc
sub
dec
movsb
inc
inc
add
xor
aad
out
call
sarl
dec
das
cmp
leave
test
cmc
ja
int3
jl
sahf
cltd
add
push
pop
jo
lcall
ud1
ret
inc
push
aas
add
ljmp
xchg
stos
xlat
stos
std
decl
dec
mov
sub
sbb
mov
dec
js
adc
adc
inc
dec
test
adc
mov
or
xchg
in
mov
idivb
mov
ret
loopne
mov
in
popl
mov
lock
fwait
les
rorl
push
lcall
rorb
lods
mov
mov
sbb
push
push
bound
push
and
mov
push
mov
mov
lds
inc
dec
or
ja
jp
mov
mov
jl
orb
jg,pn
decl
dec
adc
jp
dec
rorb
pusha
jle
adc
cmp
rolb
adc
inc
adc
lods
xor
mov
in
daa
mov
mov
ljmp
lcall
push
sub
push
sub
or
dec
push
andb
mov
push
scas
jns
xchg
cmp
or
fisttps
and
ret
jbe
adc
roll
jp
cmp
roll
fwait
mov
xchg
loop
cmp
xchg
push
push
push
dec
inc
ss
outsb
rcl
aam
aad
and
sub
cmp
mov
dec
push
inc
mov
cmp
dec
roll
insb
jle
inc
inc
push
lcall
or
test
push
addr16
push
fildl
test
cli
sbb
push
ds
out
movsl
lahf
test
or
mov
mov
outsl
cmc
scas
outsb
inc
mov
sbb
cmpsb
jmp
pop
cwtl
fiaddl
sub
mov
xchg
out
mov
in
fistl
add
nop
lds
adc
sbbl
insl
cs
sbb
pop
mov
fwait
js
mov
aad
lcall
lahf
add
outsl
dec
push
ret
xchg
subb
das
jns
push
jae
imul
cmp
and
pusha
or
jbe
fisubrs
je
outsl
mov
pop
es
testb
cld
mov
aas
push
mov
fs
jne
mov
adc
inc
push
or
int
and
sub
cmc
notb
adc
add
pop
lcall
movsb
call
inc
inc
repz
or
push
and
add
xchg
dec
jmp
ljmp
cltd
ds
das
sti
fistpll
cmp
call
jae
mov
mov
xor
rorl
mov
mov
add
and
push
mov
mov
aaa
aam
arpl
in
adc
mov
leave
push
into
add
add
xor
cmp
sbb
xor
cld
decl
sahf
add
jge
jno
add
cmp
jg
ljmp
mov
jno
or
pusha
shll
sbb
cld
sbb
insb
xchg
and
mov
mov
mov
shlb
jecxz
adc
mov
sub
jne
and
pslld
jg
mov
add
push
adc
add
cld
add
call
cld
inc
les
insb
js
ret
adc
push
add
insl
mov
je
mov
and
leave
sbb
lcall
or
scas
addb
aam
inc
cmpsl
xchg
xchg
pop
add
cmp
and
mov
dec
push
fdiv
stc
add
and
jne
fbld
lea
push
xchg
into
mov
es
test
decl
xor
int
adc
xchg
inc
stos
xor
mov
shll
repnz
sbb
ja
sub
out
stos
jle
icebp
rolb
cli
sbb
jmp
outsb
cmp
test
or
ss
pop
mov
or
cld
jg
mov
push
xchg
sbb
cmp
loop
xchg
pop
and
xchg
dec
outsl
cltd
or
inc
mov
test
mov
jmp
dec
dec
adc
mov
mov
adc
mov
gs
inc
sub
psubq
adc
add
add
and
and
sub
shll
push
add
rol
push
push
pop
popa
orb
xor
push
mov
cld
and
fistps
cld
loopne
adc
sub
push
aaa
dec
imul
dec
aaa
mov
leave
jae
sub
jbe
scas
dec
scas
pop
pop
popf
lahf
xor
sbb
bound
sar
jg
push
pop
js
mov
ret
adc
xor
sbb
fistps
and
xlat
adc
dec
sub
imul
in
adc
xchg
sbb
daa
add
jbe
pop
or
popa
adc
jl
jbe
inc
push
orb
mov
out
cwtl
adc
and
incl
dec
adc
repz
or
or
xchg
sub
mov
shlb
mov
inc
mov
sub
mov
mov
nop
adc
test
mov
add
fnstcw
mov
pop
sub
pusha
jle
neg
mov
xor
jmp
inc
stos
mov
out
inc
pushf
stos
inc
loope
int
dec
in
add
and
and
mov
xor
insl
cmp
inc
inc
inc
inc
mov
popf
push
pfrcpit2
sahf
sbb
add
inc
test
pusha
dec
push
mov
mov
clc
enter
xchg
jl
push
mov
scas
inc
mov
into
mov
dec
push
je
dec
lcall
inc
sub
mov
push
rcrb
outsl
add
push
mov
push
arpl
dec
jp
dec
imul
div
jg
xchg
mov
adc
and
mov
and
jge
sti
mov
adc
lock
xchg
push
push
dec
push
mov
in
inc
fistpll
icebp
adc
into
mov
sbb
dec
pop
jg
pushl
jo
rorb
xor
pop
fbstp
icebp
scas
xchg
stos
aam
aaa
inc
loope
mov
or
ja
jecxz
call
nop
or
stc
dec
es
or
mov
push
stc
lret
in
leave
adc
mov
jnp
sbb
push
xchg
or
icebp
bound
shlb
aas
mov
mulb
stc
ret
push
adc
cs
mov
add
pop
inc
mov
cmpb
shrb
cmp
movsl
cltd
sbb
dec
add
xchg
loopne
test
sub
aas
dec
das
sbb
xor
lock
or
xchg
jne
pushf
imul
ljmp
shll
sbb
jo
loopne
push
ljmp
loop
rorl
push
or
fisttpl
add
pop
jb
fs
xchg
addl
cli
xchg
ss
insb
mov
pop
and
lods
xorl
aas
add
clc
decl
lcall
das
mov
cwtl
test
into
jle
sub
fimull
mov
add
shr
jg
pushf
mov
in
and
arpl
xchg
movsb
in
sbb
movsl
push
cmp
pop
lcall
or
inc
cwtl
lret
leave
xor
nop
xchg
pop
out
and
or
sub
sar
fidivrl
cwtl
cmpsb
mov
test
and
adcl
jnp
add
jne
call
push
jo
pop
xchg
call
lods
add
xchg
dec
xorb
xchg
cmpsb
push
sbb
mov
loope
adcl
dec
adc
add
jge
push
ret
xchg
or
mov
sub
push
aad
adc
icebp
movsl
add
mov
pusha
add
add
push
jl
data16
jo
jno
std
in
xchg
and
add
shlb
adc
loopne
movsb
sbb
sub
add
lret
inc
sbb
push
xor
sub
popf
pop
mov
cmp
push
jo
pop
add
inc
dec
or
aaa
xor
or
push
sbb
push
lahf
adc
sbb
push
faddl
add
je
jmp
aam
inc
inc
cwtl
psubsw
sbb
mov
sub
popa
jno
cltd
push
add
js
cmp
dec
add
mov
jbe
sbb
and
test
aam
test
mov
decl
xchg
ror
adc
or
add
and
int
push
cmp
mov
add
inc
out
inc
sahf
inc
gs
mov
adc
or
cmp
incl
jp
xor
push
cmc
mov
push
mov
inc
xchg
push
and
sub
sbb
xor
lret
mov
jo
les
les
bound
lea
shl
ja
loopne
xchg
sub
rclw
push
fs
or
mov
shrl
fists
sbb
leave
mov
testb
mov
push
pusha
popf
pop
repnz
mov
or
or
inc
loope
lock
add
icebp
jae
dec
push
aam
add
nop
repz
into
or
sbb
clc
in
mov
or
loope
mov
insb
cs
xor
add
add
lcall
test
jbe
or
pop
shlb
stc
test
sbb
sar
add
dec
les
clc
push
loopne
inc
xchg
fidivrs
add
cs
fistps
jge
pop
dec
push
sub
push
xchg
clc
fucomip
mov
xchg
lret
lods
cmp
add
xchg
mov
push
xor
std
mov
add
daa
subl
stos
mov
jle
fstpl
or
pop
jb
lahf
dec
mov
ljmp
xchg
or
test
sub
outsl
mov
mov
popa
insb
in
sbb
ljmp
sbb
popa
flds
shl
push
mov
ljmp
and
mov
stc
push
jg
in
gs
or
cmp
lret
add
loop
rolb
add
adc
stc
or
push
pop
test
pushf
cld
outsl
sub
outsb
cmpsl
add
aaa
fdivr
dec
fdivs
jnp
and
int3
mov
push
loopne
shrl
push
test
ljmp
jnp
in
mov
and
hlt
pop
ret
repnz
jmp
inc
loopne
cmp
sarb
ljmp
lahf
mov
push
popa
imul
add
addl
sbb
mov
jno
xor
popf
pusha
shrb
or
sbb
xor
push
dec
add
xchg
andb
jl
xor
mov
pop
push
cwtl
mov
mov
push
movsl
add
jb
xchg
add
outsl
or
popf
xchg
ret
or
mov
pop
lods
pushf
fcompl
adc
xchg
xchg
rorl
aas
and
jp
dec
aad
mov
outsl
mov
imul
lds
add
test
icebp
add
and
add
push
cmpsl
or
aam
sbb
shrb
or
ss
sbb
jne
sub
data16
nop
or
add
cmp
xchg
sbb
or
jl
or
roll
shrb
cli
in
adc
rorb
icebp
enter
push
imul
push
add
inc
xor
mov
add
adc
cmp
aad
mov
push
or
xor
lcall
lds
in
aaa
pop
or
mov
sti
scas
jle
inc
inc
outsl
insl
rol
pop
dec
andb
lret
cmpsl
aaa
fwait
add
pop
mov
fisttpl
mov
add
mov
inc
add
add
and
jg
sub
ss
sub
mov
test
pop
insl
loop
in
add
sti
jne
enter
mov
outsl
push
cmp
cmpsb
cld
adc
dec
or
jle
mov
xchg
fildll
es
mov
cmpsb
jmp
test
outsb
mov
jle
xlat
in
push
adc
xlat
stos
jmp
xchg
jle
jae
xorb
xor
ret
test
or
cmp
lods
icebp
inc
addl
fisubrl
and
aas
sub
inc
dec
das
mov
jnp
cli
add
xchg
inc
mov
dec
xor
nop
lods
add
fdivrs
dec
mov
sub
arpl
adc
notl
cltd
mov
add
call
pop
push
push
push
add
movl
pop
in
cwtl
and
jmp
lahf
enter
inc
test
fisttpl
xor
push
sub
cltd
inc
push
mov
jnp
add
es
pop
xor
jbe
dec
pop
add
push
cwtl
and
dec
fistpll
push
dec
ficoml
xchg
in
push
pop
outsl
push
nop
lahf
orl
jo
sbb
not
mov
or
outsb
inc
aad
aas
mov
lea
jge
stos
out
pop
push
shlb
jl
cmp
xor
dec
adc
or
pop
mov
xor
jg
stos
loopne
inc
dec
mov
fidivl
and
mov
sbbb
shl
adc
gs
and
add
mov
sahf
imul
stos
testb
jo
mov
mov
leave
pop
ljmp
adc
jno
add
inc
add
pop
cmpsl
clc
iret
inc
iret
loopne
loop
ss
testl
addr16
rcr
cmpsb
pop
js
jmp
sbb
lods
mov
out
xor
sub
jns
mov
jnp
loopne
jg
sub
add
mov
mov
add
sti
xchg
mov
push
ret
rclb
je
lds
icebp
mov
xchg
cs
or
mov
int
jo
add
mov
loop
and
push
flds
cmp
sar
fiaddl
adc
movsb
push
dec
add
adc
loopne
repnz
testl
fnstcw
aam
add
jne
pop
xlat
int3
testb
push
test
pop
mov
inc
es
aas
adc
xchg
pop
imul
dec
and
pop
stos
push
dec
add
sub
aaa
mov
and
mov
jae
fwait
cmp
jl
inc
cmp
push
hlt
fmull
outsb
divb
sti
or
ja
adcb
add
add
xor
iret
pop
mov
sbb
icebp
addl
rolb
and
or
call
pop
jo
fdivl
stos
dec
ja
pop
aam
subb
xor
addr16
sub
fstl
aad
shrb
sub
dec
faddl
add
cltd
sbb
mov
outsl
add
lret
ss
cli
jbe
cmp
add
popa
mov
sbb
or
nop
mov
xchg
mov
sub
xchg
lods
jl
pop
push
xchg
push
cmc
movd
push
idiv
mov
jge
push
pop
fcompl
pop
inc
fs
jo
cmp
jb
testl
cli
push
stos
out
xor
stos
lret
pop
ss
es
call
aas
inc
sarl
cmp
pop
aas
std
or
sahf
aam
pop
push
hlt
ds
cmpl
dec
out
jmp
orl
add
dec
push
mov
inc
or
jp
ret
arpl
jae
inc
cmp
dec
mov
popf
es
adc
sub
pushf
sbb
pop
test
ja
push
sbb
sub
test
jbe
xor
add
sub
xchg
fcompl
push
movsl
or
sti
fadds
jp
rorl
adc
icebp
jge
mov
negl
out
xor
ret
lock
leave
shr
mov
and
packsswb
or
div
jo
fistpl
addr16
outsl
ss
aaa
adc
test
incl
xor
fsubrs
xchg
xor
mov
sbb
into
xor
lock
dec
and
push
sbb
xchg
add
bswap
mov
cmp
dec
shlb
inc
lea
push
xor
inc
push
mov
inc
fwait
add
and
aas
adc
adc
mov
sub
add
aas
shrl
shlb
rorb
cmp
sbb
fs
mov
repnz
test
aad
xchg
aam
fisubrl
add
test
data16
insl
and
loop
push
call
test
jb
inc
xor
jo
ss
or
cwtl
mov
xor
jae
addb
imul
rcl
ja
adc
add
mov
ds
xchg
test
ret
popa
push
mov
jp
jns
enter
aad
test
mov
push
push
scas
sbb
es
jge
loopne
movsl
or
pop
add
dec
loop
fiaddl
div
in
cltd
add
add
mov
mov
add
inc
fdivrs
inc
inc
shll
test
xor
inc
mov
mov
inc
add
xchg
and
push
lret
jo
mov
mov
roll
and
subl
leave
ret
adc
lock
insl
int3
sbb
or
sub
mov
rol
idivl
js
add
mov
adc
test
test
fisubl
push
jecxz
loop
jl
lock
jb
pop
mov
lock
adc
outsl
arpl
adc
push
jbe
jae
and
add
or
sbb
or
js
notb
lret
or
cmp
jmp
lcall
aaa
xor
adc
fdivr
sbbb
es
js
subb
into
xor
inc
pop
fdivrl
fcoml
xchg
ljmp
push
arpl
imul
shlb
orl
sbb
hlt
dec
sub
shl
movsb
orl
das
fimuls
add
hlt
stos
rclb
test
pushl
adc
mov
jmp
add
nop
cmpsl
pop
call
enter
add
mov
inc
pop
xor
insl
sub
lods
jg
rol
or
out
xchg
je
push
and
into
pop
dec
cmc
xor
jnp
sahf
inc
add
jae
dec
movsl
mov
mov
xchg
loopne
dec
push
sub
inc
ds
push
pop
inc
adc
xchg
pop
jae
adc
or
repnz
ret
test
mov
call
and
and
mov
or
xchg
dec
ja
inc
dec
loop
xor
sbb
jno
jmp
sub
pop
cmpsl
pop
or
inc
ret
or
xchg
jmp
in
shll
ja
pop
add
or
xlat
pop
mov
cmp
enter
fisubrs
adc
sbb
lock
mov
dec
into
loop
inc
popf
dec
mov
and
mov
xorb
push
and
xor
mov
jp
gs
adc
push
jl
rcll
inc
arpl
add
xor
and
sbb
sahf
lock
add
nop
jne
cmp
int3
int
mov
pop
stos
icebp
push
les
frstor
jecxz
xor
pop
les
or
pop
aam
push
ja
pop
push
mov
aas
enter
jne
ret
jnp
insl
sbb
cld
sbb
xchg
popa
dec
nop
lret
pop
and
jg
mov
add
test
lods
loop
sub
test
and
das
dec
pop
xor
out
xor
movsb
sbb
outsb
data16
jecxz
xchg
jb
xor
xor
fwait
xor
mov
mov
mov
sbb
sbb
cmp
lock
sbb
imull
or
adc
mov
push
les
mov
sti
xchg
push
jne
cwtl
xor
inc
inc
cwtl
mov
je
fldl
sbb
pop
das
mov
shll
mov
ret
je
stos
loopne
adc
xor
fdivr
adc
sar
add
inc
pop
push
loope
cmp
xor
dec
add
ljmp
test
test
mov
lods
mov
fs
stos
mov
xor
lret
dec
cwtl
shl
inc
inc
jg
xor
mov
mov
mov
arpl
xor
rorl
dec
imul
daa
inc
movsb
pop
cmp
cmp
aas
outsl
xchg
int3
inc
mov
push
pop
loop
shll
ret
adc
sahf
xor
xor
sub
repz
sbb
mov
je
dec
movsb
cmp
or
test
adc
rcr
movsl
ljmp
jnp
jo
fisubl
xchg
sub
pop
adc
fs
mov
jp
pusha
in
pusha
adc
cmp
inc
push
add
xchg
dec
dec
in
xchg
xor
adc
xlat
add
mov
mov
lock
jo
pop
and
and
add
add
mov
jnp
sbb
sbb
cmp
cltd
adc
adc
stos
xlat
test
pop
fldl
lcall
lahf
mov
faddl
jae
push
sbb
nop
add
sbb
or
cmp
inc
and
les
dec
mov
mov
xor
xchg
inc
inc
rolb
int3
xor
push
xor
out
aam
pop
push
icebp
aam
mov
or
inc
cmp
xchg
xchg
aad
cmc
sub
pop
aam
push
gs
dec
pop
inc
je
or
pop
ljmp
shll
pop
decl
or
shrl
mov
gs
jne
sbb
shl
cli
cmp
mov
loope
fptan
mov
xor
or
data16
add
or
loopne
add
mov
push
xor
ret
push
std
cmp
xor
inc
or
popa
sub
xchg
cmp
jbe
push
adc
jo
add
push
jae
xor
sub
ja
or
in
addl
pop
jmp
add
or
sbb
int3
out
push
stos
pusha
jbe
pop
push
ss
rolb
jp
sbb
rcrb
jne
xor
push
rcrl
dec
lods
jge
cmpsl
sbb
mov
decb
loope
cmp
sbb
in
push
jg
test
inc
add
push
fsub
push
addr16
push
jle
push
je
adc
in
rolb
sbb
lret
jae
sbb
fmul
xchg
add
sbb
or
sbb
icebp
jg
popa
enter
jge
in
jo
add
inc
sub
and
push
hlt
add
pop
sahf
shlb
loopew,pt
imul
test
lds
push
sub
mov
sub
and
or
cli
sbb
add
mov
cmpl
addr16
lock
dec
leave
add
rcl
pop
popa
js
das
imul
pop
jmp
xor
ja
data16
mov
jo
push
push
js
xchg
adc
or
jno
add
push
and
jge
jno
pusha
pop
push
scas
xor
mov
mov
bnd
cmp
mov
roll
xchg
inc
sub
arpl
pusha
mov
cmp
adc
call
sbb
rcrl
add
mov
adc
and
jl
jnp
lea
adc
xchg
sbb
pop
loope
out
or
or
xlat
cmp
idivl
ret
popf
adc
into
aam
or
and
loop
faddp
or
pop
cmp
sbb
and
dec
mov
call
fwait
rcrl
sub
nop
jp
aaa
outsb
daa
int3
dec
lods
mov
cmp
mov
je
ret
lock
pop
addl
inc
or
or
sbb
xchg
pushf
or
lahf
xchg
movsb
xor
jnp
push
movsb
iret
pop
lret
push
xor
in
and
jge
xchg
lock
adc
loopne
and
adc
or
leave
sbb
ss
xchg
jbe
or
sbb
mov
adc
int3
adc
enter
and
jnp
mov
cmp
repnz
cmp
push
mov
or
shlb
mov
dec
jae
add
add
sbb
js
adc
xor
add
popf
fwait
mov
push
push
jno
lock
cmp
fisttpll
cmpsb
and
test
je
or
adc
sbb
xor
popf
sbbl
cmp
jge
jne
cmp
cwtl
loope
in
and
sbbb
push
insb
ret
cmc
sbb
mov
inc
les
sbb
addl
in
loopne
add
add
xlat
push
mov
and
rcl
pop
xchg
adc
cmp
loop
cmp
xchg
push
fadds
mov
loope
jle
cwtl
jno
cmp
leave
push
mov
xor
inc
shlb
orb
sahf
sbb
rcrl
jge
mov
cmp
mov
fisubrl
sbb
push
ljmp
fwait
outsl
mov
hlt
out
inc
fs
hlt
or
adc
cmp
sub
je
in
mov
sub
mov
push
inc
arpl
xchg
cwtl
mov
sub
or
jns
or
scas
test
xchg
in
and
and
adc
je
fistpll
shlb
and
shr
test
push
dec
loopne
adcl
scas
loop
je
mov
or
ret
inc
jge
pushf
and
pushf
addl
fimull
shll
sahf
repnz
cmp
je
sbb
push
mov
and
in
jne
es
orb
into
xor
and
sbb
xor
test
cmc
cmp
ret
js
adc
clc
mov
mov
add
add
xor
and
je
out
xor
or
push
fiaddl
jmp
in
sub
add
ss
ljmp
out
sbb
cwtl
bound
scas
xchg
mov
fisubrs
outsb
push
mov
add
dec
push
rclb
sti
pop
or
push
sub
sub
sub
sbb
cmp
pushl
push
sbb
sbb
sub
add
into
mov
lock
sbb
lret
loope
popf
xchg
les
fwait
mov
jge
sbb
mov
push
add
pop
movsb
sbb
cmp
nop
clc
and
xor
xor
inc
pusha
fldcw
mov
add
inc
loopne
jmp
pusha
aad
movb
sub
lds
insl
jge
test
or
test
sbb
mov
ret
loop
mov
dec
stos
rcll
jb
shll
pop
roll
arpl
cmp
mov
ret
xor
js
jg
add
push
ljmp
ljmp
pop
jbe
dec
jno
mov
sbb
lret
mov
in
lea
rcll
sti
add
popa
loopne
sub
test
or
das
or
xchg
sti
pop
mov
pop
mov
pushf
cwtd
or
mov
push
rcrb
scas
xchg
push
jge
push
dec
cltd
test
push
insl
mov
cmpsb
js
add
adc
push
jge
loope
aam
push
aad
dec
loopne
clc
fwait
sub
int3
mov
cs
inc
cmp
je
pop
mov
add
xchg
mov
jne
cli
or
push
add
mov
clc
pop
lods
mov
pop
cmp
jnp
cmp
jbe
jecxz
into
ret
ret
jb
test
lret
pushf
adc
cmpsl
das
push
or
popf
aas
inc
cmpsl
push
gs
mov
and
ljmp
adc
cmpsl
aam
adc
into
inc
scas
mov
in
ret
sbb
sub
ja
dec
js
adc
mov
loope
fbstp
mov
xor
dec
mov
sbb
sbb
test
mov
inc
loope
int
push
jp
bound
mov
pop
or
ret
add
cmpsl
inc
loope,pt
sub
jno
ret
xor
inc
fiaddl
sub
test
je
popa
divb
cmpsl
pop
out
lock
cmpsb
in
popf
cmp
sbb
ret
jbe
jg
add
arpl
and
mov
mov
repnz
mov
and
mov
sub
and
jo
add
dec
cmp
sbb
push
or
mulb
mov
sbb
orb
arpl
shr
jae
mov
rorb
and
dec
xor
shrl
bound
outsl
aam
pop
mov
push
add
sub
lods
mov
jne
rorl
insb
fadds
jnp
mov
or
es
mov
pop
ret
mov
mov
fdiv
push
lea
pop
stos
mov
icebp
or
pop
or
js
loope
out
jge
outsb
mov
and
cmp
xor
sbb
mov
inc
pushf
push
inc
pop
inc
cmpb
xchg
out
push
xchg
sbb
lret
add
lret
sbb
mov
cmp
jne
shr
or
push
fisttpl
and
lahf
or
andnps
xchg
sub
add
ret
fistps
in
push
lods
js
adc
cs
mov
ljmp
mov
push
jo
jge
cmp
push
add
sbb
ffreep
mov
xor
popa
out
fidivl
loope
cmp
scas
xor
dec
inc
repz
inc
stos
int3
xor
loop
jle
sbb
xchg
insb
xorb
pushf
scas
ret
dec
jb
rorl
rolb
and
aam
fsts
int
fwait
in
inc
adc
adc
imul
loopne
mov
inc
stc
sub
sub
cmp
mov
pop
cmp
sbb
pop
add
popf
xchg
data16
rcr
and
ljmp
push
inc
pop
and
jmp
mov
pop
fdivrs
pusha
shl
sbb
ja
and
xchg
xor
add
push
sbb
push
inc
sbbb
inc
push
hlt
and
or
jmp
adc
lods
inc
sub
lret
adc
sub
cmpsl
testb
call
xchg
ficompl
cli
movsl
pop
aad
jle
dec
sub
xor
iret
jp
add
pop
les
mov
add
or
pusha
out
and
push
mov
sbbl
sbb
mov
leave
aaa
mov
mov
push
testl
loopne
nop
add
or
inc
mov
sub
repz
fildll
loopne
ret
add
adcb
aad
add
xchg
mov
call
pop
mov
ss
xor
lock
mov
enter
push
push
or
pop
cmpsl
inc
cmp
dec
rorl
fcoml
or
sub
xor
andb
ret
jb
je
cmpsb
cmpsl
xchg
add
fiaddl
fwait
sbb
into
sbb
test
jmp
fld
lahf
loopne
rcr
fisubrl
inc
or
mov
and
jne
stos
xor
repnz
ja
dec
popf
int
add
and
cltd
lods
mov
insb
repz
lds
push
dec
jo
inc
xor
sbb
ja
rcl
shl
pop
inc
sbb
mov
aaa
pop
mov
mov
push
sbb
icebp
daa
shr
mov
sbb
cmp
aad
mov
int
pop
es
mov
add
lods
sub
insb
cmp
mov
mov
data16
and
dec
push
in
xlat
adc
add
cmp
dec
jmp
test
jge
fsubr
mov
fidivrs
inc
hlt
pop
mov
mov
push
int3
fs
add
mov
fdivrl
fcomi
mov
dec
cwtl
mov
mov
push
cmp
in
lahf
push
scas
sub
cmp
fdivrp
pop
push
pusha
out
and
jns
int
cmp
outsl
fildll
out
les
imul
mov
aam
push
push
pop
jle
ret
pop
out
cmp
insb
inc
jo
insb
mov
add
loope
clc
mov
sbb
sbb
cld
fstpl
or
jl
mov
jle
mov
sub
btc
and
lods
movsl
pop
iret
ret
stos
sbb
adc
outsl
cmp
lods
leave
rorb
in
inc
or
pop
stos
sub
xchg
cs
or
push
pop
push
sub
adc
mov
shrl
gs
leave
and
adc
call
sub
dec
cltd
push
sub
imul
or
cmp
push
dec
xchg
mov
and
fnstcw
aas
cmpsl
das
dec
fucomi
pop
clc
incl
mov
mov
fwait
in
mov
pop
xor
mov
nop
stos
imul
inc
push
jg
imul
or
dec
pushl
incl
and
adc
lcall
push
lds
pop
sub
ret
push
mov
std
sbb
outsl
movl
push
mov
mov
out
dec
lahf
mov
cld
in
adc
outsl
negl
jmp
loope
jmp
sub
mov
or
adc
stos
push
movsl
ret
js
in
dec
cmp
jne
inc
iret
nop
xchg
adc
push
cli
popf
icebp
loop
xor
dec
xchg
das
insl
nop
movsb
aaa
es
fldcw
popf
shrb
push
jg
add
pop
je
mov
pop
sub
adc
lods
call
mov
jmp
and
nop
into
sbb
fsubs
cmp
push
popf
arpl
or
ljmp
scas
dec
outsb
sbb
jns
cltd
out
push
lea
mov
jne
rorb
jno
pushl
mov
test
les
and
fistps
pop
cmp
fcmovb
jg
fistl
lret
aam
popa
adc
inc
fidivrl
mov
push
in
pop
cs
stos
push
adc
jo
fs
xchg
xchg
jg
xchg
shrb
lret
xchg
adc
xchg
xor
push
lcall
ret
mov
inc
sub
lds
push
ljmp
push
dec
loop
pop
or
dec
add
pop
jp
in
dec
data16
or
mov
inc
push
jge
xchg
lret
repnz
ljmp
lock
movsl
dec
xor
jle
out
enter
das
xlat
pop
mov
js
repnz
and
and
repnz
loopne
adc
adc
adc
pop
adc
push
inc
adc
sbb
js
push
dec
adc
stos
pop
add
xor
in
mov
into
jbe
outsb
fsubrs
xchg
repz
adc
aaa
pop
rolb
lahf
fadds
mov
es
filds
push
jecxz
ret
dec
sub
enter
loopne
pop
jmp
mov
lret
fldl
cmp
sub
test
cwtl
daa
xor
out
adc
pop
decb
test
adc
lret
push
icebp
adc
jle
add
mov
lret
inc
mov
adc
add
rcll
hlt
mov
hlt
insb
jge
and
lock
cli
leave
xlat
dec
pop
xor
mov
dec
push
les
call
lret
pop
adc
into
add
xchg
sbb
mov
xlat
push
das
push
test
pop
je
test
push
push
xchg
stos
clc
scas
sub
call
cmc
xchg
aas
or
mov
sbbl
test
adc
aas
mov
jle
lea
mov
mov
xor
hlt
les
adc
or
add
loopne
rcrl
sub
dec
jne
hlt
sbb
mov
adc
test
adc
decl
icebp
adc
ror
enter
or
push
mov
aam
cld
add
stos
add
loope
incl
mov
frstor
ds
hlt
inc
adc
les
inc
das
aad
roll
add
call
and
or
mov
enter
movsl
mov
add
ficomps
test
adc
dec
and
rcr
pop
clc
int3
ss
data16
sbb
sbb
sbb
clc
jl
add
adc
bound
mov
pop
mov
test
or
inc
xor
flds
mov
gs
lret
aas
add
fildl
xor
sbb
leave
adc
data16
pop
jmp
or
subl
dec
xor
pop
mov
inc
add
inc
jns
cld
cmpsb
cld
pop
push
cmp
fwait
loopne
xor
addr16
pop
jl
and
das
je
pusha
cmc
pop
sub
push
xor
popa
out
pop
aaa
mov
and
inc
cmpl
and
mov
fdivrl
inc
bound
lods
xorl
xchg
mov
xchg
call
test
inc
das
push
lods
mov
ljmp
std
push
call
aas
xchg
sub
inc
jne
sar
mov
xchg
js
loopne
mov
xchg
push
movb
lock
push
xchg
cli
cmpsb
pop
out
xor
loop
lret
xchg
jo
lds
mov
xchg
push
cs
insb
cmc
push
push
decl
stos
mov
sbb
cs
mov
lret
and
in
jbe
jb
cmp
lcall
pop
xlat
mov
and
fsubrs
cmp
je
mov
push
add
cmp
mov
pop
les
lret
call
adcb
mov
sbb
cltd
mov
hlt
jo
jp
add
gs
stos
inc
adc
sub
inc
call
add
aas
cmpl
push
add
loop
jbe
push
fdiv
pushl
aam
mov
sbb
add
fnstenv
pushf
jns
ret
pop
movb
ljmp
and
add
imul
and
call
mov
sbb
xor
outsb
loop
jmp
loope
mov
mov
jle
jb
jge
loopne
lea
cli
sbb
mov
sbb
cltd
cmpsl
sub
lahf
dec
test
jg
inc
cld
in
or
fs
sub
pop
add
fldcw
ds
sbb
fstpl
cmp
or
dec
mov
popa
mov
mov
jp
xorl
scas
pop
into
sbb
add
rcrb
cmpsb
cmp
cs
fst
enter
push
mov
adc
jo
subb
mov
cmp
test
xchg
mov
lea
mull
mov
sub
inc
les
fildll
in
jl
push
testl
movsl
mov
mov
insl
sbb
push
add
mov
repz
push
cmp
adc
mov
fstpl
insl
fwait
stos
push
fsubrs
xorb
inc
push
je
aaa
sub
mov
scas
jnp
mov
das
add
inc
int3
loopne
inc
mov
jb
ja
pop
dec
ficoml
stos
dec
fiadds
andb
pop
inc
mov
mov
adc
push
xchg
adc
xor
sbb
sub
pop
int
test
shrb
lcall
lcall
sub
xchg
outsl
lcall
or
or
sbb
xchg
sbb
push
mov
xchg
in
ljmp
pop
inc
add
and
ret
lret
fs
xchg
fstpl
and
add
ljmp
push
inc
les
loop
push
add
ja
add
mov
ret
mov
jb
adc
mov
sub
fcoml
push
add
and
mov
orb
xchg
pop
pop
or
push
mov
xchg
xor
sub
shrl
and
add
or
or
jle
add
pop
cmp
push
mov
dec
bound
or
push
leave
push
aad
loope
adc
jo
movsl
push
aad
pop
jp
rcl
ss
jne
leave
loopne
subb
xchg
repnz
roll
and
sbb
ljmp
mov
stos
xchg
sbb
pop
jo
pop
mov
addr16
inc
mov
shl
sti
inc
fnsave
pop
adc
sbb
mov
xchg
xchg
add
test
rol
jmp
clc
in
adc
jmp
mov
jns
setg
fildll
and
rorb
mov
outsb
aaa
ljmp
jbe
mov
je
push
out
xchg
ret
or
jmp
pop
adc
clc
add
fsubrs
jno
shlb
aad
add
mov
adc
pop
inc
dec
outsl
sbb
inc
mov
sbb
push
mov
icebp
add
das
aas
push
in
insb
and
jmp
mov
test
sti
fwait
aam
inc
mov
jge
add
push
push
bound
mov
lds
dec
aad
lcall
mov
xor
pop
mov
outsl
dec
adc
outsb
lods
sbb
int3
xor
fcmovnbe
sub
add
sub
hlt
negl
mov
sahf
fdivs
sub
or
xchg
mov
pop
call
adc
pop
pop
mov
hlt
and
inc
test
fidivl
mov
add
jmp
int3
into
adc
xor
mov
mov
xchg
push
fs
jp
popw
xorl
push
mov
xchg
xchg
jle
aad
adc
mov
incb
int3
xor
scas
lahf
sub
add
mov
and
pop
addl
xchg
loopne
or
adc
int
xlat
xor
adc
lods
testb
xchg
mov
lods
fmull
push
push
xor
rcrl
roll
pop
add
add
dec
test
fisubrs
fistl
dec
daa
push
and
or
adc
test
push
inc
or
add
sbb
arpl
cli
ret
mov
inc
push
arpl
fidivl
adc
sbb
sub
pop
leave
and
cs
mov
pushf
lea
test
rolb
pop
dec
jb
orl
pop
test
cmpsl
cmp
inc
hlt
popf
int
int
ret
dec
and
icebp
jp
fdivrp
lret
negb
outsl
mov
add
adc
ljmp
into
xor
inc
jg
movsl
mov
daa
dec
movsb
cmp
mov
add
and
xchg
aaa
or
int
xchg
ss
fs
adc
xchg
mov
inc
adc
outsb
mov
push
rolb
in
repnz
inc
pusha
jge
rcll
jnp
pop
mov
das
and
add
sub
sbb
mov
ret
adc
dec
mov
shll
xchg
cmp
pop
push
hlt
cmpsb
fwait
imul
or
fwait
cmc
inc
inc
mov
xchg
adc
imul
add
jle
mov
sbbl
in
subb
sbb
insb
push
mov
add
cmp
xchg
dec
jne
jno
in
js
out
add
out
dec
test
mov
add
and
mov
mov
mov
fsubrp
ret
repz
and
mov
ss
cwtl
out
pop
clc
dec
sub
movsb
lahf
xchg
sbb
or
xor
sbb
jo
jmp
or
test
mov
push
je
icebp
addl
lret
cwtl
jle
cmp
push
iret
sub
aad
je
mov
scas
xor
imul
into
xchg
push
in
fisubl
lret
or
shr
sub
dec
outsl
sbb
mov
out
mov
xor
fs
into
add
jecxz
push
movsl
ret
mov
xchg
inc
enter
push
cmc
repnz
jns
bound
lret
subb
adc
sub
popf
push
xor
mov
push
sbbb
jmp
imul
and
popa
add
adcl
jp
or
pop
or
mov
pop
mov
inc
in
push
fsubl
int3
popa
and
inc
inc
daa
ret
stos
and
push
mov
pop
sbb
sbb
lock
sbb
cmp
dec
push
jle
orb
and
and
fisubl
pop
inc
mov
sub
inc
xchg
les
and
jo
loopne
dec
inc
ss
rolb
data16
icebp
dec
fisubl
scas
push
iret
nop
roll
lea
lock
icebp
fbld
inc
jne
decl
inc
dec
movsl
ljmp
mov
cmpsb
inc
repz
dec
xor
nop
inc
orb
inc
aad
stc
or
jne
or
dec
mov
int3
into
xchg
inc
mov
jae
lahf
push
addb
jge
sbb
rolb
or
cmp
and
sbb
scas
push
sbb
cwtl
xchg
fsts
inc
xor
push
dec
mov
ror
movsl
sbbb
xchg
sbb
jg
push
stc
sub
movsb
push
push
ljmp
fsubr
sub
jecxz
add
add
adc
push
adc
push
or
adc
out
scas
mov
aas
dec
jge
sbb
int
xchg
add
stos
loopne
movsb
pop
aam
adc
and
or
outsl
inc
shrb
mov
insb
lods
in
cmp
inc
mov
add
ret
ret
sub
test
pop
out
popf
mov
ficoml
ss
adc
mov
fpatan
int3
xor
sbb
outsb
iret
cltd
add
sbb
mov
xchg
and
iret
adc
sbb
pop
jl
inc
jb
dec
mov
xor
lcall
push
lds
jge
mov
add
push
dec
cld
and
sub
popa
inc
add
or
sbb
xchg
or
nopl
or
and
test
rorb
dec
mov
inc
or
mov
add
xor
imul
and
adc
and
mov
sub
mov
popa
inc
mov
add
mov
sub
adc
lcall
sub
sarb
jmp
cmpsl
add
cli
dec
test
inc
push
arpl
jmp
lock
adc
push
je
nop
inc
jge
or
je
xor
dec
xchg
je
xor
je
mov
push
stos
sbb
inc
loope
addr16
mov
aaa
jo
mov
adc
lahf
mov
mov
in
rcll
outsb
adc
cmp
shlb
mov
adc
das
inc
hlt
push
cmp
insb
fsts
outsl
cmp
adc
xchg
out
out
add
icebp
outsl
inc
call
pushf
out
bound
loopne
movups
or
mov
add
sub
fnstsw
mov
add
xorb
ret
fdivrl
clc
cvttps2pi
imul
sbb
nop
jp
fistl
mov
inc
mov
fld
pop
inc
add
xchg
or
in
sub
fcoms
ljmp
lcall
int3
data16
outsb
pop
jl
adcb
adc
push
xor
fbstp
pop
subb
ficompl
add
jae
xchg
or
inc
sub
and
fwait
sarl
sub
loop
pop
loop
cld
adc
sahf
shll
jle
notl
ja
insl
push
repz
push
jns
adc
lcall
sbb
orb
pop
adc
int
push
jg
pop
mov
xchg
lds
xor
fnstenv
mov
push
sbb
mov
and
ja
xchg
push
jns
hlt
aam
into
xchg
ljmp
es
inc
cmp
push
dec
ss
outsl
mov
mov
out
roll
lcall
jl
in
sti
mov
jb
inc
jg
sbb
clc
sbb
or
push
and
loope
mov
cld
sub
sub
cmpsl
pop
mov
je
mov
aad
mov
arpl
pop
bound
pop
loop
sub
test
mov
push
inc
and
movsb
mov
ljmp
push
pop
jecxz
dec
xor
push
mov
mov
hlt
sbb
add
popa
pop
jo
loop
fsubrs
add
adc
xor
pushl
dec
sbb
mov
outsl
iret
add
outsl
jno
mov
xor
sub
insb
jl
pop
test
jecxz
inc
and
inc
xor
adc
fdivr
pop
pop
push
lods
arpl
ja
inc
imul
sbb
nop
and
inc
imul
cmc
xchg
dec
mov
mov
insb
push
or
mov
jae
cld
push
out
int
outsl
or
scas
mull
adc
mov
pushf
cmpsl
fists
das
cld
or
movsb
cltd
nop
clc
add
cli
stos
pop
in
xor
mov
shll
stc
cmp
aad
scas
repz
or
add
sbbb
dec
pushf
fiadds
xchg
test
inc
cmp
pusha
cltd
jp
mov
icebp
mov
sub
mov
sub
shrb
mov
das
dec
xor
or
aam
xor
aad
jno
add
movsb
es
sti
or
ljmp
push
push
cmpsl
sub
sbb
daa
stos
lock
fisttpll
ja
push
and
jnp
cmp
sbb
aam
inc
add
mov
adc
sbb
add
ljmp
xchg
pushf
pop
mov
push
xchg
call
or
les
pop
rol
jbe
sub
rol
jg
or
mov
push
pop
hlt
xor
aas
testb
cmp
sub
movhps
inc
add
and
push
cmp
jmp
push
les
or
mov
xor
adc
insl
dec
popf
add
aas
xor
or
adc
jge
loopne
push
lahf
inc
mov
imul
int3
jecxz
out
and
and
mov
add
inc
xchg
loop
test
jmp
or
adc
push
adc
and
add
mov
adc
add
dec
and
xor
dec
push
sbb
add
mov
insb
or
add
shlb
cmp
test
or
aam
stos
push
adc
xor
das
inc
aad
rolb
and
test
jae
stos
or
sahf
pop
out
movb
add
test
ja
pop
ficompl
movsb
mov
or
push
adc
or
and
xchg
push
icebp
sbb
negb
push
jmp
out
xor
jmp
addl
out
inc
jae
icebp
arpl
data16
cmp
cmp
mov
stos
inc
ret
sub
mov
popf
sbb
pusha
enter
cmpsb
call
xchg
loopne
ss
addb
pop
inc
out
pop
int
lock
rcll
sbb
xor
xchg
xor
add
sbb
pop
push
inc
sub
ja
push
inc
rorl
nop
std
or
dec
add
sbbb
inc
jl
push
clc
or
mov
je
pushf
leave
mov
xchg
pop
pop
mov
popa
add
push
sub
mov
mov
aam
lock
aad
add
jl
mov
xchg
orb
mov
xor
xor
aam
xorb
inc
mov
sti
bswap
mov
jecxz
xchg
cmp
jmp
bound
mov
push
adc
loop
outsl
dec
subb
xor
dec
pop
scas
shlb
pop
cmp
jle
push
nop
mov
stos
mov
pop
and
pusha
add
push
out
shrl
jns
inc
in
jle
shlb
inc
cmp
and
loopne
push
mov
incb
xchg
push
sub
cmpb
fs
pop
mov
sbb
fildl
sbb
int3
icebp
lcall
js
cmp
jle
lods
scas
adc
jg
mov
es
jnp
incl
inc
or
inc
fsubr
fiaddl
int3
int
jns
arpl
cmp
jae
cmp
mov
icebp
lods
repz
add
or
mov
fiadds
mov
cmp
jecxz
push
loope
push
or
loopne
cs
aaa
mov
jb
stos
push
jae
mov
cmp
jno
aas
cld
ficomps
ja
mov
jl
pop
enter
push
pop
cmc
inc
cld
mov
push
stc
jae
xbegin
or
subl
mov
test
enter
jg
loop
daa
pop
lret
xchg
jle
jecxz
add
add
stos
or
lahf
lds
xchg
outsl
lret
xchg
lock
imulb
mov
sub
scas
jg
cli
testl
into
popa
jle
cmp
adc
add
mov
add
stc
jb
dec
jecxz
sbb
add
jl
dec
sub
push
add
sub
cld
adc
xchg
int3
insb
aas
cs
fucom
jg
and
inc
sub
add
jne
and
mov
pop
or
adcl
pop
cmpsb
outsb
mov
mov
xor
xchg
push
push
cld
test
imul
cmp
sbb
sbb
adc
daa
push
sbb
cmc
ss
lock
inc
add
clc
mov
in
add
mov
test
and
cmp
mov
jbe
flds
mov
adc
xlat
add
pop
pop
pop
bound
sahf
lahf
lcall
xchg
and
lret
ret
fucom
inc
sbb
jb
mov
inc
int
sti
push
push
popa
arpl
outsl
jg
pop
add
mov
lods
jmp
xchg
sbb
add
lds
add
adc
movsb
je
orl
je
popa
or
in
inc
inc
or
sub
mov
in
xchg
sbb
cmp
pop
je
mov
jmp
out
shll
test
add
jge
cmp
push
inc
dec
lret
in
insb
inc
pop
lods
and
ljmp
dec
in
fidivs
cmpsb
mov
xchg
sbbl
dec
mov
dec
cmp
inc
mov
pusha
les
bound
and
or
add
inc
inc
bound
dec
push
std
pop
shll
lret
xchg
push
lock
push
pushf
cwtl
sbbl
inc
inc
repnz
add
xchg
rorl
stos
mov
nop
mov
add
rcll
je
mov
fwait
xor
jae
adc
lret
and
or
sbb
adc
adc
pop
xor
xor
cwtl
cmpl
add
ret
adc
push
xor
rolb
int
ficoms
push
adc
shlb
cmp
addb
adc
mov
enter
pop
test
and
dec
adc
add
scas
pusha
leave
movsl
and
bnd
sub
pop
es
add
push
aam
loopne
mov
sub
ffreep
or
add
stos
fbld
icebp
sub
fdivrs
mov
mov
mov
pop
adc
mov
adc
fstpt
mov
push
rorl
shrl
jg
movb
adc
cwtl
inc
inc
dec
add
mov
push
icebp
in
insb
shl
dec
aas
and
and
mov
inc
adc
sub
sub
mov
test
fidivrs
pop
in
mov
cmp
pop
push
scas
in
or
mov
flds
or
cwtl
rcrl
testl
lock
mov
xor
dec
fsubrl
dec
loopne
test
lods
push
outsb
insl
mov
arpl
sbb
call
pushf
mov
icebp
sbb
and
jae
or
stos
call
mov
dec
adc
mov
mov
out
add
dec
push
sbb
stos
and
and
cld
inc
inc
inc
push
repnz
loopne
test
addb
int3
shlb
rcll
xchg
adc
sub
dec
push
rorb
adcl
or
push
push
xor
push
dec
insl
jno
sub
push
test
inc
sbb
sbb
popf
and
sbb
aam
popf
and
inc
in
je
orb
cmpb
mov
cmpsl
fistpl
sub
pop
stos
movsl
ret
jl
popa
dec
mov
in
xchg
stos
call
icebp
sub
cmc
incl
jbe
inc
xchg
into
pushf
and
push
cmpsb
push
push
push
mov
or
icebp
psrlw
xchg
mov
testb
or
mov
inc
icebp
and
jmp
add
incb
testl
sbb
inc
sbb
pushl
jne
mov
pusha
push
add
stos
cmpsl
pop
add
repz
dec
pop
les
scas
sarb
mov
adc
fs
cld
mov
mov
lods
cmp
dec
pop
dec
shlb
push
inc
notb
mov
or
aam
scas
out
mov
pop
jnp
jp
pop
sbb
inc
add
cmp
and
sub
cwtl
jl
push
loop
adcl
lea
icebp
or
push
pusha
or
xor
shlb
mov
pop
sbb
test
or
pop
or
gs
int3
sarl
xlat
imul
lds
mov
add
mov
es
das
jne
out
lds
sub
imul
rorb
mov
jo
push
cmc
sbb
cmp
pop
inc
popl
rorl
mov
or
nop
dec
out
or
sub
incl
sbb
ss
fdiv
and
dec
push
fildll
xchg
call
ss
adc
sbb
jl
adc
add
loopne
sti
pop
int
mov
and
jnp
adc
lock
lds
scas
addb
mov
or
pop
jne
lods
add
lods
lods
lcall
aaa
push
mov
and
gs
lahf
inc
sbb
mov
fdivs
insl
mov
pop
pop
call
jns
xlat
ficompl
repnz
std
push
repz
cmp
adc
dec
int
push
test
pusha
mov
adc
int
shrl
adc
pop
popa
pop
adc
inc
sub
xchg
inc
stos
mov
add
add
orb
bound
enter
inc
sbb
pop
call
fiadds
cwtl
sbb
test
adc
dec
aad
push
loope
xchg
popl
stos
add
pop
call
fists
mov
clc
in
aad
mov
cmpsl
mull
push
push
mov
sub
test
pop
mov
mov
push
xchg
daa
ret
jl
or
inc
inc
mov
cmpsl
test
std
jl
popf
cmp
decl
or
and
dec
ret
aad
pusha
mov
les
js
push
inc
fildl
mov
in
mov
mov
inc
fildll
fwait
mov
xor
gs
and
pop
popa
daa
psubsb
pop
fdivrs
es
pop
movsb
js
rcll
decl
in
push
repz
and
and
iret
adc
mov
ljmp
loope
cmp
mov
clc
xor
xchg
mov
and
dec
call
hlt
jg
mov
xor
lret
adc
pop
cmpsl
pop
outsl
push
lcall
and
jnp
xchg
xchg
sub
jl
xchg
xor
call
adc
insl
insl
jb
shll
out
sbb
dec
testb
hlt
add
mov
ds
pop
js
mov
nop
and
rclb
adc
jbe
adc
lock
and
jne
std
aaa
cmc
test
pop
imul
push
add
js
mov
fwait
add
or
push
xor
inc
jno
mov
mov
sub
cmpsb
fadd
in
and
je
test
jg
sub
adc
adc
pop
pop
stos
pop
rcrl
ss
shlb
sbb
stc
or
fcompl
test
add
xchg
or
test
pop
cmpsl
and
mov
sub
push
sub
shrl
add
sub
pop
pop
clc
inc
sahf
dec
inc
sub
pop
cmc
hlt
xor
cmc
repnz
mov
xor
call
inc
stc
push
imul
loope
sub
xchg
out
sbb
or
mov
maxps
pushf
and
or
xchg
insb
jne
mov
daa
in
sub
push
pop
mov
jne
jl
dec
pop
mov
fistpll
sbb
sub
sub
jecxz
pop
push
int
add
mov
jl
jno
std
in
sti
push
push
adc
scas
dec
fisttpl
hlt
xor
popf
mov
mov
das
rcl
data16
out
jp
mov
clc
lock
ljmp
fwait
jno
mul
dec
push
pusha
sahf
test
popa
adc
xchg
add
mov
push
cltd
or
cld
out
mov
test
leave
xor
ss
mov
sbb
pop
clc
jns
mov
dec
fld
add
enter
test
inc
fcoms
test
add
mov
mov
inc
or
jl
fsubrl
arpl
xor
es
mov
sbb
and
out
in
inc
and
or
sbb
mov
add
stos
incl
cmp
cmp
mov
add
add
ds
cmpsb
mov
stos
stos
out
or
lret
dec
or
test
push
insl
inc
enter
outsb
test
fisttpll
pop
push
out
push
add
stos
mov
mov
push
pop
cli
sub
mov
mov
and
out
inc
mov
cmp
mov
mov
fstps
sahf
pop
dec
mov
push
out
call
inc
cmp
mov
sbb
cmp
inc
mov
imul
ret
jb
jmp
dec
dec
andl
fdivr
fxch
fwait
pop
mov
and
pop
mov
iret
jo
dec
mov
sbb
dec
or
mov
mov
or
mov
cltd
inc
xor
ss
es
add
mov
insb
add
sbb
lock
ja
sar
cmp
aaa
ja
lea
aaa
sti
cmp
mov
iret
pop
mov
mov
adc
aad
push
mov
add
or
es
decl
push
pop
pusha
or
and
add
or
std
xor
push
adc
and
les
mov
xchg
icebp
in
mov
mov
xchg
mov
add
rorl
inc
inc
mov
imul
sub
dec
jl
xlat
fldcw
sbb
add
mov
inc
lret
dec
subl
hlt
test
lcall
cmp
inc
xchg
sub
add
popf
adc
call
or
dec
jae
xor
dec
adc
and
push
sarl
mov
push
imul
push
sub
push
add
loopne
sub
push
filds
mov
out
cmp
leave
aaa
loope
push
cmpsl
xchg
lock
inc
mov
add
test
add
push
xchg
scas
jle
inc
mov
insb
les
mov
and
and
or
xor
mov
xchg
sbb
xchg
or
rolb
out
js
dec
jo
xchg
and
inc
jbe
mov
add
push
mov
or
adc
cs
lcall
inc
int3
dec
add
scas
rclb
pop
pop
adc
mov
jnp
icebp
adc
mov
pop
aas
test
rcll
fcomps
fs
aas
jnp
add
int3
jns
ret
sub
and
outsb
push
sub
sub
push
push
mov
sbb
and
sbb
out
pop
push
adc
jmp
dec
rcrb
inc
sbb
adc
and
nop
shll
pop
out
add
cmpsb
sahf
add
push
outsl
mov
pushf
stc
push
or
pop
inc
insl
movsb
xor
pop
clc
add
cmp
sbb
sbb
push
lret
jmp
mov
imul
test
outsl
sbb
cmp
xor
cli
xchg
inc
xorb
scas
lcall
or
push
fidivl
sub
xchg
sbb
lods
mov
jbe
push
adc
add
inc
rolb
in
inc
inc
rcl
pop
mov
inc
adc
or
and
push
fwait
push
mov
jmp
dec
imull
clc
lret
sbb
pop
push
loop
imul
sbb
nop
inc
decl
inc
xchg
aas
mov
fisubl
push
aad
xchg
xchg
xchg
sub
aad
dec
cmp
xlat
sbb
dec
or
sbb
pop
or
jmp
decl
mov
out
fildl
pop
fdivrl
rolb
add
mov
cmp
pop
pusha
dec
xor
jecxz
sbb
sub
clc
mov
dec
fs
aaa
into
rolb
dec
cwtl
add
fsubs
xchg
out
pop
clc
mov
pop
bound
xor
outsb
add
or
subl
ja
and
inc
aam
jge
or
lods
xor
add
adc
adc
fcmovnu
or
dec
add
cmpsb
jb
or
jae
xor
sub
push
fildll
fcomps
mov
mov
push
mov
add
sub
and
mov
or
jo
dec
jmp
sti
xchg
mov
xor
decl
lret
inc
rorl
cmp
and
xchg
test
repz
jmp
xchg
jmp
and
inc
adc
lock
pop
imul
and
shll
mov
mov
mov
sub
sbb
sub
cmp
add
pop
add
fildll
pop
xchg
popa
jb
shll
push
cmp
jne
shrb
shll
cmp
clc
mov
xchg
or
push
movsb
or
add
lds
dec
jl
stos
xchg
xorb
mov
fidivs
daa
enter
stos
or
add
mov
jmp
rcr
cwtl
in
xor
pop
fwait
cmpsl
mov
nop
das
aam
das
adc
pushf
add
ret
add
jg
mov
ja
add
xlat
push
pop
das
fsubl
sub
addb
int
ret
sub
jb
sbb
sahf
loopne
mov
sbb
sar
ja
mov
add
mov
imul
cmpsb
into
fldt
lds
push
push
pop
das
jle
adc
sbb
cmc
add
fcmovnb
mov
add
jno
insl
addb
sahf
cmp
loop
push
jg
xchg
addb
push
lret
sub
and
add
decl
lcall
or
and
mov
mov
mov
cmove
hlt
mov
and
and
add
sub
sbb
sub
add
and
shl
fsubrl
stos
aaa
add
ret
std
add
outsl
or
jmp
add
dec
add
xchg
xchg
add
test
fisttpl
gs
insl
adc
inc
filds
inc
mov
mov
inc
or
or
rclb
push
inc
int
lcall
jle
out
push
pushf
mov
push
shr
xlat
adc
sti
push
cmpb
outsl
mov
pop
inc
mov
les
ret
loope
ja
adc
jae
cmpl
clc
lcall
xchg
ds
shll
cltd
das
mov
fistpll
je
inc
in
aaa
test
rolb
std
mov
inc
xorl
in
add
ret
movsb
clc
das
dec
hlt
into
mov
pushf
lcall
mov
mov
out
jnp
out
sbb
cmp
pop
clc
movsl
add
add
scas
cmp
cld
clc
outsl
jg
jmp
xor
jae
add
pop
and
mov
dec
mov
or
ljmp
test
xchg
test
cwtl
ljmp
pop
sub
or
inc
adc
out
pop
add
jbe
or
inc
dec
test
mov
mov
rorb
ret
stos
subl
xor
arpl
movsb
cmp
outsl
add
pop
lock
pop
add
push
rclb
xlat
in
call
mov
add
stc
pop
imul
adc
mov
aaa
mov
sahf
pop
lret
xor
into
lea
ljmp
sub
mov
icebp
and
scas
fs
icebp
fiaddl
gs
std
inc
mov
sbb
adc
and
ss
out
call
data16
leave
sub
mov
cwtl
rol
xor
sub
mov
insl
adc
or
jp
cmp
jmp
xor
add
sub
adc
sbb
das
roll
xchg
sub
xor
loope
push
int3
pop
lock
mov
and
inc
sub
and
jne
add
or
xlat
movl
je
pop
mov
sbb
or
aam
sahf
in
push
pop
cmp
push
push
xor
dec
or
push
pop
mov
and
lds
lock
les
stos
mov
insb
mov
pop
push
lahf
call
lods
jl
push
test
jge
and
call
xlat
push
inc
mov
shrl
movsl
lods
or
adc
mov
imul
pop
adc
push
or
call
sub
jne
add
in
sti
inc
icebp
cmpsl
int
add
xor
dec
aaa
mov
mov
xor
mov
mov
xchg
mov
lea
dec
lea
inc
cmpsb
cmp
mov
test
ja
in
pop
and
cwtl
cmp
adc
mov
movsl
int
sub
nop
int3
insl
dec
arpl
push
pop
lret
mov
push
std
mov
and
push
add
sub
and
je
cmc
xchg
fsubr
fidivs
or
or
inc
scas
cmp
add
out
fndisi(8087
nop
inc
aam
and
mov
arpl
js
outsb
cmp
ds
icebp
adc
lea
push
dec
jge
clc
adc
and
dec
xor
sti
inc
icebp
or
dec
sbbb
dec
xchg
or
jle
lret
pop
mov
sub
lret
mov
pop
jne
divl
orb
push
mov
int3
outsb
add
xchg
sbb
movsl
inc
lret
inc
xlat
push
mov
jg
mov
enter
and
adc
mov
into
jns
fcmovnbe
adc
mov
mov
stos
jno
inc
icebp
mov
sbb
add
xchg
jg
pop
les
movsl
push
jmp
das
inc
adc
push
mov
fs
clc
push
sarl
in
jle
push
decl
rcrl
mov
add
int3
andl
adc
addr16
js
je
jbe
mov
adc
add
outsl
add
inc
pop
inc
and
xchg
sub
dec
lock
adc
adc
push
aaa
aas
mov
xchg
sub
xorb
sbb
jne
movsl
outsl
ja
add
in
push
and
aas
adc
insl
push
xlat
mov
je
xchg
sub
out
nop
andb
lret
xchg
les
jmp
jo
sbb
outsb
fadd
dec
in
icebp
or
push
add
sub
dec
nop
push
dec
mov
dec
and
pusha
lods
call
lret
or
in
imul
data16
outsl
cld
or
or
pusha
punpckhwd
or
push
adc
sbbb
fstpt
cld
ja
or
ret
sub
sub
loopne
inc
in
jg
inc
sub
jbe
or
incl
push
inc
jge
imul
mov
pop
xor
mull
aas
or
or
dec
sub
pop
clc
or
pop
jmp
pop
nop
cmp
cwtl
sbb
cmp
inc
lods
dec
mov
in
loope
mov
je
adc
cwtl
and
cs
fbstp
ds
xor
push
fsubr
in
dec
mov
fists
jecxz
icebp
aam
jns
jno
cmp
shl
cld
mov
std
loopne
mov
ss
hlt
or
pop
clc
outsl
push
shrb
mov
adc
or
jg
lcall
loope
mov
std
jnp
xchg
fdivs
test
inc
and
decl
iret
fildll
dec
mov
or
cmpsb
cmp
jp
movb
mov
rolb
lock
mov
ss
add
add
sti
add
or
or
rcll
fcoms
sub
add
inc
jb
mov
jl
imul
and
dec
inc
mov
push
sbb
jbe
mov
or
xchg
popa
pop
add
adc
rorb
fstpt
subb
add
int3
mov
nop
dec
out
inc
mov
cmp
push
scas
xchg
jle
inc
xlat
xor
jl
hlt
aam
sti
mov
sub
mov
xor
aam
jmp
iret
and
mov
pop
inc
in
push
jbe
and
dec
mov
xor
jno
insl
jl
pop
mov
pop
dec
push
cli
mov
mov
mov
call
add
xchg
cli
sbb
jns
xchg
cs
clc
or
jmp
inc
xor
add
adc
hlt
mov
loop
push
lret
in
loop
pop
pop
add
pop
or
push
lea
inc
in
jbe
mov
icebp
sbb
test
aas
clc
movl
sar
testb
lock
cltd
add
sar
mov
jmp
xor
popa
in
xchg
js
cmp
std
push
add
jnp
pop
into
loope
cli
and
testb
sub
mov
leave
scas
rol
inc
shrl
inc
push
lods
fs
lret
filds
rorl
movsb
pushf
movsb
add
sub
cmc
imul
cmp
insl
xchg
mov
add
pusha
filds
repz
sub
lea
or
or
loop
jb
xchg
dec
pop
add
ret
shlb
cld
outsb
aam
fsubl
add
mov
sbb
loop
ljmp
mov
js
insl
imulb
test
add
test
inc
sbb
pusha
push
ds
xor
pop
push
pop
push
adc
sbbb
cli
fucomi
sbb
and
pop
mov
fwait
pop
lods
xorl
pop
sti
push
sub
push
mov
jns
out
xlat
pop
clc
pop
and
and
nop
arpl
inc
push
jb
fnsave
mov
mov
mov
or
mov
mov
dec
es
mov
jno
ret
stc
or
mov
aaa
js
cmpsb
cmpsb
add
cmpsl
adc
lcall
repz
fdivs
push
fcoml
and
nop
pushf
or
sub
xchg
fstpl
test
jge
mov
jnp
cmp
inc
aad
fs
fsubrp
in
sub
lods
shl
neg
test
lds
aaa
mov
je
outsl
sbb
xorb
lahf
inc
and
mov
dec
and
jecxz
pop
rolb
lock
cmp
mov
lcall
dec
aas
lods
add
mov
fwait
dec
jg
mov
jmp
ja
pop
js
cli
test
ret
xor
inc
icebp
js
xor
adc
scas
mov
push
loope
xchg
jo
pop
rolb
or
ljmp
stos
test
push
and
jl
pop
xorl
bound
loopne
insb
stos
dec
repnz
ret
out
clc
xchg
mov
mov
es
testl
fsubp
aaa
fsubl
nop
rcrb
pushf
add
mov
cli
mov
jmp
push
pop
xor
mov
dec
scas
hlt
push
divl
fadd
lahf
lahf
daa
or
repz
test
xor
fucomp
movsb
push
stos
mov
insl
outsb
je
ja
rorb
xchg
xor
lret
mov
loope
loope
push
jge
push
add
pop
mov
sub
jno
mov
jecxz
lods
lret
dec
data16
mov
lods
dec
nop
xchg
jge
nop
aaa
inc
scas
cmpsb
shlb
fnsave
lahf
jmp
fsubrs
movsl
add
das
lock
dec
aas
imul
rcr
nop
cmp
xor
loope
mov
jecxz
mov
fisttpl
add
push
cmp
pop
test
inc
call
pusha
das
or
mov
in
scas
mov
outsl
dec
or
insl
stc
das
mov
inc
adc
dec
out
popa
repnz
shrb
lea
dec
pop
push
xor
dec
push
popf
mov
in
das
rorl
mul
enter
dec
push
sarb
push
jno
les
jge
lret
push
cmp
daa
fwait
stos
std
xchg
clc
cltd
cmp
cmp
roll
stos
dec
ret
mov
int
outsl
fistpll
aaa
push
adc
lods
lret
push
clc
cltd
adc
aad
xchg
fstpt
in
inc
repz
icebp
fcomip
insl
sub
mov
es
inc
mov
ja
sub
jg
mov
adc
imul
push
jl
sahf
test
mov
cmc
aaa
js
iret
mov
mov
es
and
inc
adc
fistps
cltd
stos
or
dec
sub
add
fistl
stc
push
jmp
pop
xchg
or
push
add
jg
adc
sbb
mov
iret
inc
das
pop
xor
sbb
imul
fadd
adc
enter
lods
incl
data16
movsb
pop
iret
cmp
gs
mov
dec
push
in
insb
lea
jge
and
sbb
in
add
ljmp
add
push
push
daa
test
loop
lods
imul
testl
mov
in
ljmp
mov
lea
sarb
iret
enter
adc
jmp
mov
sub
xchg
jecxz
repnz
fstpl
loop
das
jge
pusha
nop
out
adc
mov
add
sbb
mov
in
fwait
stos
pop
loopne
or
mov
cmc
sub
xchg
mov
inc
push
inc
xchg
insb
xchg
in
xchg
mov
pop
bound
cmp
pop
incl
out
fisubs
push
and
addb
add
and
sbb
jbe
shll
push
dec
fmul
bound
cmpsb
sub
pushl
popf
movsl
cwtl
test
mov
clc
mov
lods
jg
mov
sub
pusha
jp
add
inc
push
cmc
pop
ss
out
add
es
mov
fucomip
jg
lret
hlt
xor
loope
loope
fnstsw
cs
movsl
sub
inc
add
xor
filds
arpl
push
lds
inc
cmc
cld
sub
das
mov
cmp
lret
push
mov
push
jnp
and
or
or
fstl
cli
sbb
add
dec
mov
xchg
xchg
cwtl
push
pop
cmp
pop
pop
adc
pop
push
sbb
or
fstpt
or
inc
movsl
and
xor
sbb
sbb
loopne
add
xchg
sarl
xor
or
sbbl
imul
push
ds
push
sahf
sahf
outsl
sbb
call
cld
sbb
test
inc
inc
dec
push
sub
repnz
mov
shll
mov
push
sub
clc
fistps
pcmpeqb
sbb
into
lret
xor
test
dec
cwtl
and
jg
mov
inc
adc
adc
incl
rcl
mov
shlb
adc
cld
adc
out
push
sub
icebp
push
lods
xchg
pop
cli
inc
je
fwait
add
adc
xor
jbe
aad
int
ss
adc
fcomps
jecxz
xchg
sarb
jg
inc
push
mov
jne
aaa
push
pop
pop
push
fistl
or
rcll
push
and
loopne
jmp
xchg
mov
in
push
adc
inc
mov
xchg
mov
mov
add
cltd
jno
pop
addb
and
nop
mov
jmp
iret
mov
addr16
scas
icebp
mov
push
adc
jmp
push
and
test
cmp
pop
pop
inc
int
mov
sub
js
test
dec
or
jo
push
ja
add
fadds
clc
inc
ljmp
aaa
mov
pop
mov
scas
addr16
pushf
jle
push
int
and
out
das
or
pop
xchg
inc
dec
clc
and
orb
inc
cmc
incl
xor
fdivrl
out
sub
outsl
mov
call
mov
clc
jns
jl
mov
movsb
or
adc
fnstcw
rorb
sbbl
push
jge
push
jg
nop
popf
jg
fistpll
push
inc
inc
daa
xchg
notb
inc
adc
add
std
jb
das
cs
aam
inc
movsl
xchg
idivb
inc
lcall
cwtl
aam
icebp
xchg
nop
pushf
or
xor
ljmp
xor
xor
dec
lea
sub
dec
jo
add
xor
ret
test
xor
nop
loopne
dec
ljmp
pop
jg
jg
jmp
adc
mov
daa
in
shlb
std
add
jnp
scas
inc
inc
sbb
jmp
xor
lret
push
push
xchg
mov
icebp
xchg
scas
jle
and
lret
gs
or
xor
les
adc
mov
nop
jle
arpl
outsl
sub
adc
adc
mov
add
jle
xchg
adc
xchg
jmp
push
push
xchg
cli
xlat
push
loop
fisttps
cmp
xor
xchg
cld
outsl
fs
and
loope
es
push
mov
inc
std
das
std
pop
pop
ret
adc
pop
pusha
mov
cld
sub
cli
adc
imul
roll
mov
movups
dec
xor
pop
mov
inc
jnp
hlt
xchg
sbbb
push
sub
les
out
fiadds
das
or
lret
and
push
es
mov
les
jo
pop
les
xchg
xchg
push
and
stos
xchg
in
rcl
into
rclb
cltd
and
sbb
test
xchg
inc
mov
push
push
jmp
rcrl
inc
mov
or
xchg
les
jo
data16
les
mov
inc
rolb
cld
cmp
mov
nop
jno
inc
ss
rolb
lahf
repz
loop
sbb
lods
lcall
xchg
dec
mov
int
pop
loopne
mov
push
out
es
dec
dec
xor
clc
mov
xchg
push
push
std
lods
in
lret
cmp
adc
data16
out
jecxz
insb
cmp
dec
cmp
mov
decl
adc
lods
data16
lret
add
jg
ja
aam
into
xchg
dec
dec
arpl
icebp
rcl
push
pop
loop
xchg
iret
xorb
popa
imul
adc
push
loopne
cmp
jb
jmp
mov
outsl
xchg
mov
adc
int
je
test
cmp
aas
clc
mov
xchg
scas
shrl
sub
fsubs
lds
lahf
cs
adc
cmp
push
and
mov
cmp
ja
and
jmp
pop
jae
lock
sub
les
pop
aas
fs
dec
ljmp
add
sarb
insb
pop
dec
out
mov
fwait
mov
notl
jg
push
mov
sub
mov
mov
add
jo
pop
inc
pop
xor
push
cli
mov
sbb
push
pop
mov
incl
dec
adc
mov
rorb
push
adc
cli
mov
jne
pushf
lock
call
call
sbb
insl
ss
mov
xchg
fwait
cltd
cli
jno
shrb
mov
push
push
fwait
ret
mov
xor
adcb
sbbl
scas
ficomps
dec
dec
in
fsubrs
cli
or
call
fnsave
mov
sahf
data16
xchg
xor
sub
in
pop
ljmp
shr
cltd
mov
int
push
out
ret
sub
pop
fcomi
sbb
add
jnp
fstpl
or
add
iret
push
jno
sarb
mov
mov
fmuls
xor
sarl
fstp
mov
mov
sbb
mov
out
or
sub
lcall
cs
push
and
fwait
out
clc
in
outsl
je
inc
inc
leave
add
shlb
outsl
lea
push
or
mov
sar
daa
repnz
adc
mov
and
fbstp
push
lret
pop
leave
add
push
stos
ljmp
lret
and
xchg
test
mov
dec
fucompp
adc
je
cmc
lea
pusha
roll
mov
aas
push
dec
or
inc
addl
clc
cmp
inc
ret
push
push
cmp
push
cmp
mov
mov
jbe
out
jae
jne
or
or
cld
cmp
pop
inc
mov
mov
rcl
cmp
in
push
jecxz
cmpsb
dec
sbb
sub
cmp
mov
or
pop
aaa
or
inc
pushf
imul
inc
pushl
jne
out
subb
inc
test
dec
and
aaa
sbb
xchg
push
les
inc
pop
out
stos
incb
sub
push
mov
ror
xchg
cmp
sbb
jg
push
ja
test
lock
sbbl
das
jl
sbb
outsb
xor
fstpt
xchg
jge
push
iret
add
cs
mov
rcr
fs
fsubp
imul
push
sub
xor
mov
icebp
mov
pushf
shll
pop
push
xor
out
adc
add
lret
pop
push
adc
insb
adc
sub
adc
push
mov
test
add
push
mov
push
enter
insl
sub
jle
push
sbb
pop
les
orl
rclb
cmp
lods
mov
and
out
and
hlt
push
mov
dec
ret
scas
push
pop
cmp
aam
inc
shll
loopne
mov
in
sub
push
fsubrs
adc
push
ljmp
and
pop
out
push
ficompl
lods
pop
cmp
mov
push
fadds
stos
fiadds
shll
shll
xlat
pop
es
fldt
notb
mov
ljmp
outsl
lret
lods
jl,pn
pop
xor
inc
xchg
cmp
scas
test
lret
sahf
mov
stc
sub
loope
xchg
test
push
jge
cmp
into
cli
imul
scas
mov
push
and
sbb
fdiv
and
ficomps
mov
fcomp
or
cli
andb
sbb
xlat
pop
sub
sbb
pusha
dec
ficompl
push
arpl
xor
xchg
sub
push
jmp
out
outsl
cld
movsl
xchg
and
add
and
inc
lods
je
dec
lods
xor
jg
cld
jns
xchg
dec
push
pop
xchg
ds
sub
mov
cmpsb
cmp
call
shrb
sbb
xchg
cvtpi2ps
mov
lock
pop
in
testb
jns
cwtl
jp
adc
shr
clc
push
fnstsw
mov
xchg
inc
test
js
insl
pop
ljmp
dec
in
adcl
icebp
xchg
movsl
in
push
xchg
sbb
xor
push
sarb
dec
pushf
into
insl
adc
jg
xchg
add
mov
inc
and
mov
mov
push
mov
push
or
cmp
mov
repz
sbbl
and
in
xchg
ffreep
es
loopne
push
loop
js
adc
jnp
gs
ficoms
sbb
in
insl
ja
mov
fadds
popf
lock
add
mov
or
sbb
fdivr
sub
pusha
dec
mov
xor
mov
fldt
cld
ljmp
sbbl
and
test
mov
or
repnz
sbb
cld
sbbb
adc
lds
lods
mov
push
stos
jg
enter
lods
mov
push
adc
or
sti
pop
aad
push
addb
in
aam
sbb
ss
push
sub
decl
inc
fistpl
and
fcoms
inc
adc
pop
pop
xor
or
jle
jb
out
push
xor
sti
cmc
leave
jg
sub
xchg
jp
les
cli
out
dec
les
add
dec
push
invd
jae
xor
jp
mov
cs
loop
arpl
or
sbb
sbb
imul
div
ljmp
inc
daa
dec
cmp
xchg
inc
je
inc
mov
outsl
cld
loope
mov
rclb
pop
cli
cmpsb
loopne
repnz
repnz
pop
repz
pop
fwait
test
pop
and
call
lret
fs
jo
pop
pop
cmpsl
or
mov
jmp
nop
dec
pop
outsl
pushf
daa
or
inc
mov
outsl
cs
outsl
arpl
hlt
xchg
mov
hlt
dec
aaa
fdivr
fists
xor
call
inc
lods
pop
mov
adc
aam
rorb
jmp
jns
call
jmp
rolb
pop
jnp
pop
inc
push
insl
push
cli
call
sub
jae
pop
cli
std
mov
lret
je
orb
xchg
mov
mov
lds
loope
lods
jmp
mov
inc
test
push
filds
cli
jg
sub
xchg
lods
enter
call
fidivs
jno
addr16
shll
fbstp
pop
push
mov
inc
arpl
cs
and
push
enter
lcall
push
push
mov
lret
add
add
adc
push
xchg
ror
or
sub
cmp
add
xchg
dec
mov
xor
push
mov
mov
cltd
push
xchg
mov
out
add
xchg
repnz
xchg
dec
fisubs
inc
cld
mov
hlt
add
mov
clc
sbb
std
lcall
mov
lock
sarl
push
in
outsb
js
dec
and
xor
xor
incl
mov
fnsave
xor
insb
xlat
les
popf
cltd
inc
ljmp
dec
dec
inc
popa
dec
fbstp
je
dec
xchg
aaa
lock
cmp
out
fwait
cmp
pop
stc
dec
or
sub
sbb
jne
sub
mov
lods
filds
push
pop
jle
cli
pop
cli
jns
shrb
std
fstps
imul
fdivrp
fildll
cmpsb
dec
or
insl
xchg
adc
push
xchg
loopne
xchg
push
lret
mov
into
mov
push
xorl
lock
lahf
movsb
jecxz
and
fnstsw
das
aam
sbb
loopne
ja
addr16
mov
adc
adc
cmp
xor
jne
jge
jg
out
inc
push
xlat
or
adc
hlt
outsb
rcr
mov
lcall
jle
stos
inc
sbb
les
repnz
or
jmp
mov
popa
aaa
xor
insl
xchg
pop
cmpsb
cld
mov
lcall
cmp
dec
and
adc
dec
cs
dec
cld
push
sbb
fcompl
xchg
adc
sbb
adc
stc
scas
shlb
or
fsubs
sti
in
add
lea
push
aam
lock
push
xchg
stos
testl
les
ja
add
jo
xchg
js
dec
test
or
add
adc
xor
mov
push
sbb
clc
pusha
lret
xchg
jo
aas
insb
xchg
sbb
add
cmp
dec
sbb
jns
mov
push
gs
mov
add
jg
mov
xor
andb
cmc
shll
inc
aam
clc
repnz
insb
mov
mov
test
jns
ret
call
sub
fdivl
cmpsl
out
push
add
dec
jmp
add
dec
inc
or
iret
pop
pop
clc
outsl
xor
out
int3
xchg
mov
roll
pop
movsl
lcall
sub
ljmp
jo
inc
and
comiss
jo
movsb
add
rorl
nop
es
mov
push
rolb
decl
jbe
mov
std
cld
in
adc
xchg
das
dec
adc
mov
stc
inc
imul
push
aad
jne
clc
pushf
xchg
aaa
rorb
xlat
add
aam
xor
pop
movsb
and
and
incl
pop
jno
je
test
ljmp
mov
dec
test
outsl
cmc
lods
loopne
push
jecxz
sbb
test
sub
adc
pop
jo
mov
sti
pop
adc
ds
aas
push
cld
mov
and
pop
pop
sbb
xchg
sub
sub
push
cmpsl
dec
js
insl
jecxz
ror
aam
adc
jne
mov
push
sbb
mov
cs
push
test
shll
aaa
cmc
ret
mov
popa
lcall
or
pop
mov
inc
gs
les
adc
push
xchg
mov
sub
enter
push
mov
jns
fdivrs
inc
std
pushl
std
cmc
cmp
inc
jns
jle
mov
push
jecxz
ljmp
cli
push
push
pop
sarl
xchg
je
jbe
adc
or
movsl
jle
add
nop
mov
adc
jg
pop
pop
mov
fmuls
add
push
loope
icebp
dec
dec
call
push
inc
mov
ficompl
add
mulb
callw
mov
cmc
cmp
push
xor
fnsave
clc
inc
jmp
jp
imul
aaa
ljmp
push
lock
pushl
cltd
and
mov
sbb
mov
and
sarl
xor
filds
xor
popa
std
jne
popa
pop
movsb
or
mov
test
dec
push
mov
das
adc
adc
adc
or
sbb
popa
arpl
dec
leave
lret
cmpb
ret
mov
lahf
lcall
jg
pushl
sbb
sbb
push
inc
adc
push
adcb
dec
add
cli
incl
or
jecxz
xchg
fstl
xchg
jmp
mov
cmp
cmp
mov
outsl
push
pop
inc
out
adc
call
dec
or
cmp
xlat
call
push
push
insl
cmp
sbb
sar
dec
sbb
in
icebp
pusha
movsb
ss
dec
and
mov
clc
sbb
sbb
inc
and
ret
xchg
push
rorb
adc
cmp
mov
out
and
pop
call
jo
sahf
pop
or
shl
mov
pop
pop
mov
call
xchg
or
add
adc
sbb
mov
rol
and
and
ficoms
sbb
andl
lret
mov
inc
push
sbb
pop
lds
lods
sub
imul
enter
aas
popf
xor
or
fimull
mov
mov
insl
dec
ljmp
daa
push
cmp
pop
inc
mov
xor
add
rorl
repnz
loope
std
or
call
ja
sub
xor
inc
adc
cwtl
adc
lods
mov
pop
mov
pop
mov
jns
cmp
inc
cwtl
ja
call
clc
xor
nop
add
outsb
sbbb
popf
sbb
add
mov
add
add
ja
pusha
adc
inc
mov
out
mov
xchg
imul
add
dec
loopne
movsb
dec
rol
dec
call
popa
jg
testb
loop
cwtl
incl
xchg
out
jmp
jl
jg
jmp
orb
in
dec
adc
sar
cmc
jl
mov
ds
pusha
fmull
and
pop
pop
not
jg
clc
insl
mov
push
bnd
mov
je
add
mov
cmp
pop
dec
inc
test
pop
call
data16
ficoms
cmpsb
mov
incl
sub
cmp
dec
in
push
xchg
daa
cld
dec
pushf
adc
dec
insl
mov
int
pop
daa
dec
rolb
fsts
adc
xchg
mov
cmp
cmp
lret
pusha
inc
mov
dec
mov
mov
loope
xchg
push
out
pop
js
sbbl
xchg
pop
fs
jnp
jg
sbb
shl
sti
dec
mov
cmc
cmp
pop
shll
mov
in
addl
test
adc
std
test
mov
mov
pop
inc
std
push
enter
push
inc
pop
adc
outsl
cmc
das
or
inc
pop
lds
int3
aad
adc
add
arpl
scas
xchg
jle
add
sbbl
lds
inc
push
ficomps
adc
shl
inc
sub
out
lods
mov
or
add
cwtl
mov
sbb
mov
loopne
popf
mov
lock
jne
jne
or
inc
mov
mov
jnp
inc
sub
mov
test
cwtl
mov
push
inc
daa
fs
mov
xchg
fiaddl
push
js
dec
fcoml
adc
xor
fisubrl
je
inc
fdivl
lock
adc
and
jg
in
movsl
aaa
stos
adc
pop
lock
and
cltd
ss
movsl
shr
pop
jns
pop
popa
inc
mov
inc
iret
inc
fldenv
rcll
es
cmc
insb
pop
or
shll
in
pop
push
jl
loopne
repz
xchg
test
test
ss
pop
cmp
sbb
sbb
sbb
insl
push
jo
insl
mov
test
out
inc
ja
shl
inc
xchg
mov
outsl
cmp
mov
cmpsl
daa
test
das
mov
or
lcall
push
shrl
inc
jbe
sub
pop
test
or
mov
jg
cmp
cmc
fistpll
push
and
sarb
and
aas
ljmp
mov
rorb
cmp
or
sbb
add
push
jno
add
push
loope
adc
ss
dec
inc
call
jmp
jge
int3
outsl
dec
scas
adc
aad
add
rcrl
jp
neg
jl
pop
jns
fwait
jb
cli
test
pop
rcr
fistps
sbbb
mov
mov
adc
mov
lea
add
js
dec
stc
add
repnz
or
jge
adc
xchg
mov
out
lock
pop
icebp
repnz
rolb
ljmp
lods
imulb
lcall
insl
pop
pop
mov
sbb
loope
enter
fistl
sbb
mov
dec
aad
test
repnz
mov
stc
push
xor
jge
adc
cmp
fwait
dec
frstor
pop
outsl
xlat
rolb
xor
cs
daa
cmp
cmp
mov
leave
jno
xor
pop
sbb
mov
xchg
cmc
mov
fdivrl
cmp
xchg
or
ret
pusha
jl
out
mov
adc
mov
nop
push
mov
loop
mov
pop
mov
push
cmp
scas
shr
inc
rorl
or
movsl
out
fistpll
repnz
and
inc
xor
cmpsb
mov
sbb
loop
cwtl
push
sbb
mov
push
mov
xchg
lods
movsb
sub
jle
xor
jmp
inc
loope
push
pop
ja
sbb
movsl
and
icebp
mov
mov
loope
daa
mov
push
and
cld
mov
or
mov
call
cmp
adc
push
or
pusha
mov
pop
cltd
cmp
inc
std
test
jg
lods
push
jg
rclb
fwait
and
aam
scas
fwait
mov
andb
cmp
dec
mov
pop
jle
jle
scas
push
add
push
pop
mov
aas
fcoms
and
fadds
mov
js
cli
push
mov
pop
and
scas
cmpl
adc
sbb
xchg
or
and
mov
out
insb
sbb
movsb
shlb
xor
int
and
popa
cmp
outsb
add
sbb
mov
in
mov
adc
testl
add
adc
mul
cld
and
stc
loope
xorl
sub
adc
xchg
sbb
xchg
lods
or
adc
outsl
push
inc
sbb
lock
pop
inc
rorl
pop
into
pop
decb
push
frstor
mov
popf
mov
and
add
lret
out
adc
xchg
xchg
iret
xor
movsl
or
sbb
clc
insl
fldl
or
cltd
pop
push
add
xor
arpl
mov
pushf
imul
popf
mov
adc
std
pop
push
rcl
jno
or
sbb
push
js
or
xchg
scas
push
fisubl
into
addr16
dec
gs
call
pop
xchg
into
mov
hlt
ljmp
in
lret
lock
pop
int3
push
aaa
pop
jl
mov
in
pop
inc
jmp
xchg
sbb
jb
cwtl
jb
cwtl
test
popf
dec
ljmp
mov
inc
sub
sti
add
push
sahf
imul
mov
pop
leave
inc
fdivrp
pushl
mov
xchg
add
and
std
popa
xor
stos
je
mov
imul
test
fsts
fstl
mov
or
or
inc
sbb
ss
pusha
sbb
lock
sbb
mov
jns
jmp
mov
scas
fisttpll
add
lods
push
inc
in
or
insb
call
decb
mov
adc
repnz
mov
dec
loope
insl
mov
push
add
fimull
inc
adc
xlat
ljmp
ss
inc
ja
out
jecxz
mov
popa
jmp
mov
fisttps
movsb
inc
dec
mov
mov
add
inc
push
pop
inc
in
in
daa
dec
pop
mov
lods
pop
mov
dec
repz
jns
call
fcomip
add
ja,pt
dec
in
fs
mov
das
sar
ljmp
movsb
cltd
mov
add
jbe
mov
imul
decl
lock
iret
andl
das
pop
std
xor
addr16
lock
aad
mov
sbb
mov
push
sbb
push
and
push
decl
adcl
mov
movsl
mov
push
hlt
mov
lds
cmp
jecxz
cli
mov
or
dec
mov
stos
clc
dec
push
mov
pushf
sub
jg
adc
pop
daa
int3
push
pop
mov
push
fld1
pop
popf
adc
movsl
jno
in
mov
pusha
add
pop
pop
or
lock
xchg
mov
inc
xlat
daa
pop
mov
and
ljmp
aaa
jbe
into
sahf
cmc
jo
nop
ja
cmp
int
cmp
dec
and
adc
daa
repz
idivb
loopne
jp
insl
notb
sbb
mulps
cmc
push
icebp
movsl
in
arpl
popa
es
and
fnstsw
push
mov
push
out
jno
cmpsb
push
scas
jbe
lahf
std
stos
clc
shrb
outsb
ja
jg
ljmp
xchg
fndisi(8087
ret
icebp
scas
cmp
xchg
jge
adc
xchg
lods
mov
es
int3
mov
call
inc
cmovb
test
sub
int3
sub
mov
popf
inc
orb
std
repz
jl
mov
inc
lods
ss
mov
stos
sub
ljmp
cmpsl
mov
sbb
xchg
cld
incl
push
jl,pt
jl
mov
arpl
cltd
sub
test
int
call
in
dec
pop
cs
pop
mov
rol
dec
lods
sub
loopne
imul
ficoml
jg
je
add
pop
xor
pop
cmpsb
mov
push
out
jp
add
loopne
xchg
sbb
fcoms
bnd
cmp
icebp
xchg
daa
shrb
movsl
pop
orb
and
addl
outsl
xor
dec
add
push
push
nop
push
mov
sti
je
fistpll
fists
fldcw
or
mov
addr16
out
aam
fucomp
push
cmp
stos
jbe
out
push
fs
mov
pop
cmp
inc
push
sbb
pop
div
dec
ret
and
das
cld
pop
or
insb
leave
jno
imul
mov
leave
adc
jge
or
push
push
sbb
enter
std
inc
pop
scas
jb
fbstp
sbb
movl
icebp
mov
jns
xor
add
and
inc
pushl
orl
clc
gs
mov
shl
mov
dec
scas
cmp
jg
das
mov
sbb
or
adc
daa
lea
rorl
mov
adc
inc
lahf
lea
push
mov
pop
loope
cmc
dec
pop
sbb
add
cmp
loope
es
push
js
sbb
lds
push
das
mov
cmc
dec
das
hlt
sbbl
imul
lock
jp
cli
inc
mov
pop
mov
mov
outsl
or
mov
mov
shlb
mov
into
lods
cs
jge
and
in
dec
dec
lods
fstpt
daa
mov
dec
fcoms
loop
into
add
lret
cmp
incl
imul
jmp
mov
sub
fisubs
testl
std
fistps
loopne
pop
xchg
imul
adc
sbb
outsl
call
leave
xor
xchg
pusha
mov
adc
push
pop
repz
loope
sbb
clc
lods
lods
mov
and
out
adc
cmc
jmp
out
inc
sub
into
fcmovnb
repz
loop
and
movsl
outsl
xchg
or
dec
cs
jmp
insb
fs
cwtl
mov
test
cmp
mov
mov
sub
push
mov
jg
sub
xchg
xor
sub
push
inc
sub
dec
pop
sbb
jle
fwait
dec
jg
jmp
pop
loopne
or
push
xor
inc
lcall
and
pop
icebp
out
rolb
addr16
cmp
adcl
bound
mov
jge
daa
jl
rol
pop
add
cmp
leave
out
cmp
ffreep
lret
xor
pop
aam
je
dec
stos
stos
and
or
pop
jle
ja
mov
rcrl
mov
sarl
mov
inc
jecxz
mov
and
sbb
fs
dec
jmp
inc
ljmp
stos
sbb
stos
fwait
les
ret
or
and
xchg
mov
xchg
mov
orb
jb
cltd
pop
jnp
push
inc
fistps
mov
bound
fistpll
fs
adc
xor
push
push
xor
dec
ljmp
dec
es
or
or
xchg
mov
cmpsl
sbb
pop
mov
rcll
addb
lret
push
pop
ljmp
in
adc
int
sub
out
enter
mov
enter
jle
inc
mov
fwait
cmc
in
push
jno
ja
in
aaa
sar
inc
push
movsb
adc
fwait
and
jne
xor
addl
fucomip
das
mov
mov
iret
call
adc
outsl
insb
insl
sub
push
cmp
mov
ror
and
inc
nop
xor
ljmp
sbbl
lcall
call
lret
push
and
xor
or
sahf
sub
out
adc
fwait
std
outsl
loop
dec
jb
push
cwtl
ljmp
xor
imul
pop
aaa
jp
mov
xor
add
dec
nop
imul
idivl
sub
mov
jg
mov
sub
pop
cwtl
pop
xchg
jecxz
xor
sbb
call
sbb
pop
stc
scas
leave
or
dec
dec
push
repz
ja
jne
inc
sub
decb
repnz
fs
enter
mov
mov
xor
lea
ljmp
mov
push
mov
out
int3
les
sbb
incb
mov
imul
mov
popa
loop
pop
cmc
push
sbb
inc
cs
inc
mov
jle
dec
pusha
xchg
mov
loope
ljmp
in
jmp
cmp
movsl
jmp
jmp
mov
aad
sub
in
arpl
dec
loop
fldl
sbb
adc
mov
cmp
xlat
sahf
out
push
loop
outsb
mov
xlat
jl
mov
jg
arpl
jns
push
pop
push
test
fdiv
dec
lds
mov
std
in
out
out
cli
pop
jl
icebp
call
mov
sub
add
lahf
fxtract
outsl
ljmp
push
fdivrl
setb
adc
inc
sahf
pop
in
cmp
jg
das
sbb
push
jle
cwtl
jne
pop
sbb
loop
mov
fstps
test
jecxz
repz
and
pop
sub
fbstp
popa
mov
and
lret
test
les
movsl
sbb
jg
mov
test
cmp
sbb
xchg
clc
xor
and
pop
sbb
std
jbe
test
orl
lahf
sub
add
pop
popa
lret
loope
or
cltd
and
xchg
xchg
in
mov
pop
test
rcll
push
sbbb
roll
adc
mov
xchg
dec
mov
enter
mov
out
jge
xchg
mov
loop
push
repz
mov
inc
pop
loopne
jp
xchg
sbb
add
repnz
cli
push
inc
sub
dec
push
pop
pop
mov
int
ret
aad
mov
xor
shlb
pop
jl
sar
push
decl
push
xchg
adc
inc
jl
push
sbb
cli
test
cmpl
jno
divl
or
test
push
sub
outsb
mov
test
mov
sti
pop
imul
bound
mov
xor
inc
ficompl
sti
loop
lret
push
ret
lret
out
xchg
lds
mov
add
inc
mov
jl
xchg
jnp
das
insl
mov
bound
insl
sti
lods
cld
push
sbb
sub
out
test
call
and
mov
mov
jecxz
call
dec
stos
dec
dec
mov
lcall
sbb
mov
pop
lds
in
pop
ret
fucomi
loop
adc
cmpsl
out
mov
push
xadd
in
ds
sarl
mov
add
aad
mov
fsubrs
aad
js
movsl
add
pop
ret
push
in
stc
repnz
push
push
arpl
outsl
cmp
test
ror
and
mov
pop
push
iret
push
jle
hlt
fstp
orb
sub
xchg
cmp
and
mov
mov
not
call
repnz
push
aam
mov
test
xor
ret
orb
push
cli
movsl
sub
call
push
mov
dec
jbe
rorl
pop
das
mov
inc
scas
pop
push
mov
jo
syscall
mov
in
inc
outsl
pop
xchg
jno
cmpsb
loope
insb
ljmp
jbe
enter
cli
not
push
add
inc
pop
dec
sar
fdivrs
adc
mov
inc
push
push
pop
mov
xchg
inc
les
aam
loope
add
inc
and
outsl
enter
add
adc
imul
xlat
mov
ja
xor
orb
sub
ljmp
inc
inc
int
pop
and
pop
les
or
movsb
aaa
xchg
fldcw
ljmp
pop
sub
pop
shlb
or
js
sub
outsb
dec
test
push
je
shlb
inc
jl
outsl
xchg
inc
add
jg
call
mov
hlt
das
std
das
xchg
in
mov
in
push
xchg
into
add
sub
add
mov
jp
jo
sbb
xchg
lea
js
sub
mov
add
jnp
sbb
cmp
outsl
xorb
mov
push
fcomps
aad
fimuls
ret
sbbl
cmp
xlat
and
xchg
aas
xor
inc
sti
filds
inc
dec
movsl
mov
popa
push
scas
iret
les
push
xchg
pop
add
push
test
loopne
mov
lea
cmp
xchg
inc
and
adc
add
sub
fistl
loope
clc
bound
stos
xchg
xchg
add
lock
jle
or
mov
fimuls
fists
dec
push
mov
inc
sub
mov
fildl
xchg
mov
call
mov
mov
push
add
cmp
xor
dec
test
jne
ss
sahf
lahf
dec
sub
mov
outsl
fucomi
in
in
sub
mov
sub
mov
inc
mov
mov
clc
repnz
pop
dec
movsb
mov
pushf
adc
jl
push
imul
fldenv
nop
and
mov
mov
mov
dec
push
jge
dec
dec
test
stos
imul
sub
adc
jge
lret
xchg
xchg
mov
pushf
pop
clc
mov
xor
clc
inc
lods
cmpb
in
push
out
enter
push
mov
outsb
rorb
rorl
test
insb
das
mov
xchg
loopne
and
loop
fildll
dec
or
movsb
fs
or
fcoml
insb
sub
mov
mov
js
insb
sub
xchg
add
inc
ret
aaa
lret
dec
jno
sub
mov
xor
push
clc
lcall
fprem1
arpl
mov
jb
mov
sbb
sahf
daa
dec
fnstsw
jb
jecxz
dec
mov
adc
lcall
lds
dec
pop
pushf
push
mov
push
mov
imul
xor
xchg
push
push
lods
mov
xor
mov
scas
daa
arpl
mov
cltd
aas
dec
cltd
shll
std
shll
jae
jg
pushl
xchg
mov
das
mov
mov
cli
cmp
push
add
inc
sub
sbb
xchg
sub
xlat
inc
rcll
cmc
lock
test
pop
roll
or
mov
add
jecxz
inc
imul
movzwl
jae
mov
pop
xchg
push
jge
inc
mov
cmc
mov
int
fidivrl
cmp
out
sbb
sbb
xor
shlb
add
cmpb
dec
xchg
or
pop
enter
int3
adc
dec
mov
push
adc
loopne
arpl
jmp
cmpsb
fbld
add
push
adc
and
dec
adc
aaa
pop
push
adc
and
jmp
sbb
mov
js
sub
es
mov
add
faddl
mov
mov
adc
das
les
sti
xchg
inc
sub
jp
in
inc
jl
mov
xchg
mov
push
cmpsl
loop
push
mov
mov
jmp
inc
or
mov
or
insb
das
fisttpll
loop
cmc
cmp
push
pop
aad
insb
adc
call
mov
out
ret
fstp
es
iret
adc
vmread
push
sbb
out
stos
dec
repz
loop
lahf
nop
orb
les
cltd
push
or
mov
cmp
hlt
dec
jg
cwtl
mov
sub
jmp
cmp
or
jl
sub
shlb
pushf
fadds
jl
sbb
fistpl
sbb
lahf
jl
adc
mov
mov
je
cmp
clc
cmpsb
adc
add
rorb
push
roll
xorl
inc
pop
pop
inc
cs
xchg
test
leave
ret
lret
mov
stos
ficomps
ret
or
fsubl
mov
inc
aad
adc
mov
jmp
xor
dec
out
xchg
loope
xchg
fidivl
pop
out
adcl
dec
nop
rcl
sti
popa
ret
in
fmuls
dec
lea
cmp
jae
cwtl
jmp
push
sbbb
mov
push
movsl
mov
dec
pusha
outsl
mov
push
jns
or
adc
jg
movsl
push
or
inc
jmp
es
je
pop
xlat
and
cmp
mov
sbb
jns
mov
sbb
mov
jne
xor
fwait
sbb
roll
inc
pop
mov
and
mov
lock
fwait
dec
cli
sub
fdivl
lock
add
dec
push
mov
sbb
incb
add
mov
mov
mov
add
push
push
sarl
or
pop
xlat
loopne
jl
out
dec
mov
cmpsb
fs
or
out
push
das
cld
incl
mov
xchg
imul
stc
xor
or
std
insb
xchg
push
mov
ljmp
cmc
lds
jg
leave
xor
fisubrs
hlt
out
gs
jecxz
into
mov
cli
shll
ret
cli
xor
mov
test
outsb
pop
add
movsb
clc
cmp
or
add
mov
movsb
cltd
mov
inc
pop
movsl
push
mov
call
lret
jbe
inc
cs
dec
mov
xchg
push
in
mov
push
xchg
std
pop
push
mov
dec
cli
nop
inc
rclb
mov
std
adc
decl
pop
jecxz
xchg
pushl
popf
dec
or
sub
addl
ffree
pop
mov
adc
mov
adc
add
into
dec
xchg
loop
aam
jnp
ss
aam
add
fs
mov
adc
jb
xor
test
adc
cmc
mov
dec
adc
and
jmp
inc
aas
add
push
xor
pop
mov
fsubrp
push
std
rorb
inc
lock
es
arpl
and
ret
dec
add
js
jbe
ret
adc
ret
mov
sbb
mov
les
dec
pop
xchg
sbb
cmp
inc
mov
flds
mov
lock
mov
psubw
pushl
push
mov
xchg
or
inc
in
or
and
push
sti
xor
push
cmpsb
sbb
lret
adc
or
test
xlat
jle
lcall
inc
push
outsl
mov
push
aam
or
push
mov
mov
or
test
cs
rolb
les
outsl
or
cmp
mov
jo
mov
dec
cmp
inc
in
sub
jcxz
xor
add
nop
pusha
rcll
sbb
aad
sbb
mov
mov
push
or
mov
std
jns
or
and
repz
jl
andb
ret
cmp
cmp
jne
outsl
sub
and
lds
push
inc
bound
jno
and
mov
inc
outsl
pop
xchg
popl
jne
mov
decl
aad
push
dec
movsb
adc
popl
sbb
jo
mov
mov
scas
adc
cld
mov
xor
jp
loope
adc
mov
out
jge
stos
add
or
add
subl
or
out
push
and
add
popf
arpl
dec
cli
cld
loop
add
add
xchg
add
mov
mov
insl
test
push
rorl
sub
lods
adc
sbb
xchg
scas
sbb
push
and
lahf
lds
sub
popa
dec
sbb
mov
push
add
fdivr
jae
inc
inc
enter
jo
adc
shrb
jo
cmp
sub
scas
mov
sub
and
lds
dec
das
add
shl
cmpsl
xor
out
je
stos
sti
xchg
mov
call
cwtl
mov
movsb
cmc
inc
insl
fistps
pop
adc
insl
inc
push
or
stos
lods
loop
push
jno
mov
stos
imul
sbb
mov
sarb
adc
pop
push
inc
jo
in
sbb
lea
les
cmpsb
add
pop
lea
mov
ljmp
cwtl
dec
xor
push
loope
clc
or
outsl
lock
pushf
pop
pop
insb
gs
add
insb
mov
or
and
dec
jbe
cmp
mov
lret
lock
xchg
cmpsl
cmp
call
ret
sbb
or
inc
loop
mov
out
pop
inc
js
mov
dec
rcrb
adc
int
test
pusha
or
mov
cmc
add
lahf
fs
pop
aam
lods
lock
add
test
imul
sub
ret
jnp
ljmp
and
out
outsl
mov
mov
add
cmp
inc
mov
sti
in
sbb
sub
adc
mov
sbb
inc
pop
popa
mov
inc
in
mov
mov
ss
mov
sbb
fiaddl
pop
pusha
xor
rorb
popf
dec
adc
fadds
cmc
fnstenv
arpl
push
out
subb
imul
mov
stos
adc
adc
mov
mov
mov
ljmpw
cmp
ds
adc
dec
idivb
ljmp
cltd
idivl
imul
mov
test
lret
inc
dec
mov
sbb
shl
mov
enter
imul
ficomps
jo
ljmp
jl
push
mov
mov
pop
jbe
das
fildll
push
fs
jb
pop
push
mov
scas
jb
mov
or
test
pop
or
mov
test
or
aad
jl
test
push
cltd
inc
fisttpl
or
push
sub
mov
scas
mov
mov
enter
cld
or
outsb
int
shrb
mov
cs
cmpb
pusha
fcmovbe
sub
rcrb
test
push
dec
repz
sbb
test
in
sub
cli
add
jno
nop
push
and
rol
in
or
in
or
or
mov
pop
dec
or
sahf
loope
imul
xchg
add
sbb
popa
adc
out
ja
std
jno
ss
fsubrs
dec
add
xchg
lcall
push
sarl
stc
jle
pop
clc
incl
push
shrl
cs
add
jge
pop
or
mov
int3
mov
ret
add
lahf
sbb
push
mov
or
faddp
pop
lods
inc
jne
dec
jmp
sarb
jg
pop
adc
xlat
or
adc
in
jp
dec
aas
xor
xorl
cli
push
jp
arpl
push
mov
or
or
js
mov
push
push
push
pop
movsl
sbb
sbb
fisubs
hlt
cmpsb
pushf
mov
pop
fsubrs
inc
and
dec
inc
stos
shrl
mov
movsl
into
jp
xor
movsl
lods
fisttps
mov
mov
repnz
lcall
sub
cmpl
sub
aam
dec
jne
and
mov
xchg
mov
rclb
mov
cld
aad
push
adc
adc
fstpt
add
push
lahf
or
and
jle
mov
into
test
lea
mov
aaa
pop
out
xor
dec
push
je
xchg
loope
fwait
jecxz
add
xchg
les
cli
fwait
jge
mov
xor
out
and
enter
shll
popf
add
dec
lret
sti
fs
fisttpll
daa
dec
sbb
inc
in
sbb
inc
adc
inc
std
lcall
sbbl
ret
mov
xor
xor
lea
popa
jae
mov
jmp
aam
fcmovnbe
mov
add
cltd
bound
lret
and
bnd
shll
adc
clc
inc
sbb
sub
arpl
sbb
sbb
cs
cs
fcmovb
add
jecxz
xchg
pop
and
sub
shll
aad
cmp
lret
adc
jp
cmp
adc
mov
lcall
in
xchg
mov
cmc
add
aad
sbb
clc
je
push
popa
pop
sub
shrb
dec
mov
dec
sahf
sbb
pushf
daa
jmp
sbb
ja
add
cmp
clc
loope
aaa
idivb
inc
or
fcoms
mov
pushf
add
or
imul
sahf
stos
rorl
ja
push
lret
jl
addr16
xchg
mov
call
leave
push
in
or
and
cwtl
fstps
fnstcw
mov
fidivrs
les
xchg
mov
rorl
pushf
test
add
xchg
add
cmp
mov
shl
push
mov
add
es
add
and
clc
jg
hlt
leave
mov
and
aaa
pop
cmp
push
das
outsb
cld
sub
mov
cmc
mov
push
mov
add
mov
push
sbb
pop
pop
test
pop
push
popa
shl
scas
int
xor
sti
outsl
ret
dec
jmp
insl
aaa
mov
inc
stos
pop
push
in
jecxz
test
int
xlat
sub
lcall
mov
aaa
jo
jg
out
adc
inc
push
mov
lds
sti
or
cltd
repnz
dec
ljmp
push
data16
push
and
in
ds
lret
sbb
repnz
loopne
xlat
imul
xor
and
push
jno
pushf
mov
adc
pop
aad
stos
lock
popa
fwait
xchg
mov
test
fs
cltd
jbe
sbb
test
ljmp
fs
scas
mov
jae
sbb
mov
notl
push
outsb
mov
push
sub
cltd
xchg
inc
jmp
push
lcall
jecxz
test
std
inc
cs
jae
pop
loopne
ds
add
fimuls
jne
mov
rorl
add
jle
js
js
pop
insb
dec
sbb
int3
pusha
mov
jne
into
test
dec
icebp
push
add
mov
jp
hlt
jge
and
pop
cmp
lea
arpl
clc
jbe
inc
mov
icebp
cwtl
repz
call
sahf
mov
push
pop
jl
mov
jge
mov
pop
pushf
xor
jnp
sbb
and
xchg
pushf
jns
mov
sbb
xor
pop
lods
insb
cmp
mov
pusha
push
dec
sub
ret
mov
push
push
test
mov
mulb
out
addr16
push
out
call
iret
in
je
jmp
mov
pop
xchg
pop
outsl
pop
xor
out
xor
add
push
in
jmp
inc
stc
xor
jg
push
adc
mov
in
jg
push
dec
js
mov
in
mov
xor
pushf
jb,pn
inc
adc
aad
inc
adc
xchg
imul
aam
mov
mov
mov
add
inc
in
and
pop
jns
mov
out
and
andl
test
cmp
jns
pop
mov
push
enter
mov
es
mov
jns
std
and
stos
lock
lea
push
insb
xorl
pop
mov
adc
arpl
push
pusha
mov
imul
jae
ss
test
mov
or
lahf
jle
lock
xchg
les
pop
jle
ss
sbb
inc
dec
das
jl
int
fadds
fidivrs
mov
fisttpl
jb
cli
add
mov
inc
pop
ljmp
or
xor
adc
add
cltd
pop
xor
fbld
sbb
push
and
mov
lret
mov
pop
jae
jo
lcall
stos
loop
fisubrs
loopne
test
add
div
das
loope
push
jmp
jp
jne
mov
jbe
lahf
std
dec
je
jne
inc
dec
sub
arpl
cmp
addr16
sahf
fstl
mov
inc
sarb
iret
nop
lea
xchg
fdivrs
cmpsb
iret
or
cmp
addb
add
lret
or
das
mov
pusha
add
or
cmp
mov
mov
xchg
cmpsb
sub
mov
popf
add
mov
xor
cmp
push
push
mov
out
xor
inc
popa
inc
xchg
pop
sahf
sti
jg
push
xchg
lret
popa
push
cmp
orb
inc
and
test
fdiv
mov
les
xor
sti
mov
or
fistpll
mov
in
lock
pop
loop
mov
movsb
jp
bound
mov
ss
arpl
inc
pop
ss
adc
mov
cmp
mov
loopne
jnp
shlb
lods
incl
jb
cwtl
iret
push
nop
aam
nop
in
and
sbb
js
outsl
adc
mov
mov
mov
mov
push
mov
sti
pcmpeqw
or
gs
mov
sub
jecxz
cmpsb
jbe
xchg
pusha
inc
mov
mov
aas
scas
jg
aas
std
loope
pushf
sub
mov
je
jb
or
stc
stc
cmc
mov
insb
sbbb
jmp
sub
ljmp
aam
add
pop
ja
shlb
and
je
cmpsb
les
fisubs
mov
ret
mov
shl
xor
inc
pop
mov
mov
xchg
ficoml
sub
sub
loop
xor
and
or
pop
sbb
mov
aas
lds
xchg
or
adc
xor
xchg
dec
or
and
dec
out
jmp
push
and
scas
sbb
adc
ret
add
xor
enter
jbe
iret
lahf
sbb
adc
or
jne
ljmp
push
lods
mov
xor
inc
int
sbb
mov
fistpl
inc
or
mov
mov
mov
popf
sahf
xchg
ss
rclb
scas
lods
jae
rolb
aad
mov
push
xorb
fisttpl
and
mov
cmp
in
fbstp
xor
aad
addr16
push
bound
cmp
add
dec
dec
lcall
xor
xchg
mov
mov
dec
mov
and
ljmp
mov
xor
mov
mov
clc
aad
out
and
inc
cltd
add
add
das
add
fnsave
mov
jg
lahf
mov
xchg
and
out
out
xor
loopne
dec
fwait
dec
xchg
cmp
dec
inc
test
in
jmp
push
mov
pusha
mov
inc
icebp
in
fbstp
dec
in
ss
aas
in
sbb
mov
fstpt
jle
sub
ss
outsb
fcompl
sub
adc
js
sub
jo
sbb
sbb
insb
js
mov
sub
leave
in
xchg
fisubrl
or
scas
sbb
dec
fucomi
mov
xchg
add
scas
adc
jbe
sbb
loop
sub
dec
mov
adc
ljmp
in
push
and
sub
test
mov
inc
shrb
and
jge
jge
cld
sbb
adc
push
push
pop
cmp
iret
inc
aas
lret
mov
sub
pop
std
enter
push
pop
or
cmc
jp
mov
cmp
rorb
rcr
and
sub
jecxz
mov
ja
push
jo
test
rcr
jg
addl
movsl
mov
xchg
pusha
dec
adcl
push
fsts
int3
inc
test
xor
movl
pop
clc
mov
cmp
adc
stos
hlt
sub
subl
jge
int
adc
mov
ss
pop
icebp
xlat
inc
xchg
pop
jb
push
je
sbb
insl
pop
ljmp
fs
inc
inc
lods
in
mov
or
mov
sub
adc
sub
cmp
lea
nop
cmp
push
xchg
fcmovbe
je
and
mov
mov
push
inc
add
adc
push
rcll
hlt
cmp
push
pop
mov
adc
out
adcl
mov
ja
call
push
mov
imulb
push
sbb
xchg
and
ss
scas
push
mov
lret
mov
or
imul
stos
pop
dec
out
outsb
xchg
add
and
imul
into
and
jge
shl
adc
ds
mov
mov
stos
jbe
xlat
sti
daa
ljmp
jbe
jns
and
pop
and
fimuls
jo
adc
add
js
mov
jl
mov
mov
jle
fisttpll
lds
push
pop
clc
cltd
inc
enter
cmp
mov
inc
sbb
addr16
lret
mov
xlat
and
jp
into
sbb
bound
pop
daa
sub
mov
sub
pop
sub
pop
addb
fnsave
jbe
lret
cmp
mov
iret
jge
sbb
lret
xchg
gs
jmp
test
jne
push
icebp
test
sub
mov
mov
mov
mov
fs
fwait
cli
std
mov
xor
loope
mov
shll
dec
mov
xor
mov
pop
lods
or
loope
and
inc
push
mov
ljmp
aaa
cmc
or
or
lahf
int3
jns
mov
pop
push
adc
into
adc
test
inc
dec
xor
cmpsl
push
out
or
add
out
sbb
out
jne
push
outsb
aas
xlat
shlb
repnz
out
imul
inc
data16
cmc
test
inc
push
push
hlt
add
push
dec
mov
add
repnz
in
pushf
push
adc
std
mov
xchg
negl
jecxz
movl
fcomps
add
in
iret
push
fdivrl
adc
in
mov
cwtl
sbb
add
je
lea
cmp
jmp
sar
push
xlat
into
push
mov
mov
push
xchg
xor
shrl
lret
adc
decl
jne
sub
xor
fiadds
pop
clc
aaa
cs
inc
add
jbe
aaa
clc
ja
inc
ljmp
in
jecxz
insl
sbb
mov
sbb
push
insb
or
sub
enter
mov
aas
pop
repz
clc
pushl
clc
jae
pushf
stc
or
pop
imul
lods
adc
rcl
push
mov
into
inc
xchg
and
outsl
aas
jp
dec
jl
setb
push
cmp
pushl
sub
popf
mov
sub
lock
das
in
pop
sbb
xor
test
rclb
push
cmp
sub
jmp
or
mov
cltd
popf
test
push
cmp
insl
outsb
addb
arpl
pop
and
out
xchg
sti
pop
inc
pop
pop
inc
lret
and
push
pop
add
jp
jno
and
test
or
and
and
clc
scas
jne
xorb
jl
daa
adc
ficoms
cmp
notl
out
sbb
inc
push
js
pop
hlt
xor
popf
andl
adc
pop
stos
inc
xor
fiadds
xor
push
insl
sbb
pop
or
shl
adc
mov
pop
pop
lahf
loopne
fcmove
cmp
sbb
mov
loopne
stos
pop
mov
adc
sti
cmp
bound
mov
xchg
lcall
sarb
test
mov
out
fisubrl
bound
aaa
mov
add
test
rolb
ja
cmp
addl
mov
mov
fistpll
add
mov
add
inc
or
ret
push
inc
pop
out
mov
pop
rcrl
outsl
lods
cs
adc
or
inc
loop
cmp
adc
or
xor
outsl
add
cwtl
pop
add
mov
xlat
sbb
ja
mov
sub
gs
sarb
mov
mov
aad
ljmp
out
dec
std
inc
add
ljmp
mov
xchg
xor
or
adc
pop
in
sbb
mov
leave
adc
movsb
ret
js
jmp
mov
lods
push
inc
loope
pusha
xchg
je
aad
push
cmpsl
fmull
cld
sbb
out
push
inc
cmp
and
sti
add
sar
mulb
xor
jno
jg
jbe
xor
inc
scas
call
pushf
es
xor
outsl
adc
js
cmp
push
mov
mov
and
lcall
ds
xor
or
repz
push
outsl
jb
sbb
pop
call
lret
cld
aad
sub
or
outsl
add
fildll
adc
imul
mov
cmp
sbb
push
inc
aas
popa
bound
push
sar
inc
loopne
test
les
cwtl
mov
jecxz
pop
dec
or
mov
js
dec
lcall
cltd
jl
cmp
sbb
mov
and
mov
jo
fadd
ret
or
scas
pop
sbb
adc
dec
cmp
and
pop
nop
das
jg
jg
push
in
dec
cmp
adc
test
jnp
xchg
ds
jne
in
test
loop
fistps
call
push
mov
fs
and
cmpsl
or
std
ljmp
lahf
mov
fmulp
mov
sub
ds
data16
insl
cmp
mov
sbb
iret
xchg
cmpsb
call
cltd
popf
cmp
push
mov
lcall
popa
adc
mov
mov
mov
nop
test
cwtl
leave
xchg
sub
pop
or
sub
xchg
inc
in
sub
xor
insb
xor
mov
gs
or
inc
hlt
dec
pop
sbb
ljmp
inc
push
arpl
outsl
pop
inc
imul
inc
push
jo
and
ljmp
rcll
mov
mov
dec
cld
outsl
cld
pop
adc
in
push
les
mov
push
sbb
iret
jo
imul
sarb
addr16
xchg
lods
inc
scas
test
push
mov
jb
jno
inc
pusha
add
and
jg
es
mov
sbb
addr16
sahf
jns
subl
inc
das
fnsave
mov
push
adc
loopne
es
jg
cmp
push
addb
cmp
es
pop
and
loopne
xchg
incl
adc
cmp
icebp
or
sub
xor
xchg
clc
pop
setne
jp
loopne
test
dec
mov
inc
mov
push
and
add
xlat
cmp
je
mov
std
cmp
or
push
mov
mov
xchg
or
stc
dec
xor
mov
sahf
jecxz
mov
mov
cmp
movsb
fdivs
pop
jg
jns
cwtl
push
add
sarb
les
push
nop
cwtl
call
xchg
data16
jg
fildll
add
add
sti
cmpsl
add
lock
bound
add
xlat
pop
lret
roll
and
or
add
dec
cltd
inc
push
mov
jmp
mov
dec
ljmp
mov
jg
outsl
push
pushf
xchg
lock
cmp
xlat
push
sub
push
or
xor
ret
mov
data16
mov
lret
push
test
mov
adc
inc
cmp
cmpsl
sub
or
and
mov
outsl
mov
cmp
loope
andb
mov
jl
popf
rcll
or
fists
iret
shll
nop
mov
sbb
adc
lret
test
sbb
aaa
lcall
xchg
add
aas
sub
jae
push
sbb
mov
cwtl
push
jae
push
ret
mov
or
in
mov
outsl
ljmp
pop
out
push
push
cmp
adc
lret
fs
or
jp
add
lea
push
pop
lcall
jg
sar
fistl
fsubr
mov
pusha
incl
push
add
mov
push
mov
int3
and
or
decl
rcl
add
inc
xchg
stos
jp
repz
testb
aad
lahf
dec
or
shll
mov
push
stos
pushf
xchg
push
ljmp
mov
pushf
xchg
in
xchg
sub
pop
mov
jmp
push
mov
sub
cmc
call
das
je
cmp
adc
add
mov
lock
cli
bound
sbb
sbb
add
lock
insb
mov
adc
insl
push
inc
insl
sbb
xorl
or
jbe
pop
xor
or
notb
shll
pop
or
leave
aad
dec
dec
cmc
mov
clc
add
enter
mov
bound
ret
pop
pop
xor
push
je
mov
fbstp
sub
pop
in
cmp
int3
aam
les
bnd
inc
js
push
sbb
sbb
adc
push
jae
lret
adc
outsb
cmp
outsl
jg
mov
sahf
movl
inc
sar
je
mov
mov
ss
inc
dec
pop
ret
flds
sbb
lds
adc
dec
pop
adcb
into
dec
int3
pop
mov
and
sbb
push
fstpt
and
and
arpl
bound
lods
scas
add
pusha
xor
jge
cmc
addb
inc
aas
inc
jno
decl
mov
mov
jmp
imul
gs
mov
xor
add
push
or
mov
fs
cmp
push
xchg
or
andb
cmp
mov
stc
pop
mov
bound
adc
imul
outsl
mov
inc
rcl
lods
or
adc
add
popa
sbb
scas
mov
scas
sbb
test
mov
hlt
ret
push
sti
in
iret
andb
outsl
lea
cmp
jg
fwait
sub
into
mov
cltd
push
loopne
mov
mov
push
add
pop
out
or
jle
cli
inc
sub
ja
mulb
into
pop
icebp
frstor
jmp
das
adc
aaa
add
mov
mov
adc
outsb
loopne
mov
dec
fcmovu
jns
adc
daa
dec
mov
rolb
fdivrs
cmp
xor
cmc
rol
add
sbb
mov
insl
ret
fistl
mov
out
int
add
dec
push
insl
popa
loope
sub
push
or
push
ljmp
clc
adc
lea
adcb
clc
mov
sahf
cmp
mov
das
aaa
jp
sti
xchg
clc
out
jno
mov
test
mov
cmpsb
xor
nop
xchg
pusha
pop
outsl
pop
mov
mov
sbb
jae
aad
sub
mov
les
int
xchg
fstpt
stos
mov
inc
xor
aam
lahf
push
pop
stos
imul
andb
dec
jmp
test
insb
lret
cltd
add
sbb
lea
mov
xorl
test
inc
stos
xchg
pop
divl
xchg
inc
jmp
dec
mov
int3
jbe
aas
or
out
sbb
pop
test
inc
pop
cmp
xor
mov
cs
jo
fsubrl
out
fs
pop
xchg
pusha
jo
sbb
dec
pop
mov
jl
aam
jnp
add
aam
sub
andl
cmp
mov
addr16
aam
inc
or
cs
mov
loope
xor
mov
lcall
addb
jmp
loope
xchg
lcall
pop
lcall
fcomp
aam
jecxz
imul
add
mov
lcall
mov
cmpsb
dec
sbb
into
lods
cli
jo
popf
mov
push
mov
shl
add
jo
push
std
call
and
icebp
sbbl
sub
xchg
cltd
outsb
outsl
pop
sbb
stos
and
fistpll
jbe
mov
fs
push
fildll
repz
mov
ret
xchg
cwtl
ljmp
xchg
icebp
fwait
jecxz
push
and
dec
int3
cwtl
sti
dec
fnsave
std
insb
addb
jmp
daa
js
cmpsl
mov
mov
imul
mov
cmpb
cmc
xor
xchg
adc
ficoml
inc
xchg
jle
cmpsb
daa
hlt
fbstp
push
jp
filds
adc
bound
bound
fdivrl
jg
pop
mov
div
fisubrs
inc
and
push
bound
fidivrs
cmp
jnp
push
inc
inc
call
jp
cs
and
sbb
xchg
push
lret
push
sub
fimull
mov
lock
pop
jecxz
icebp
gs
jo
ret
decb
mov
pop
add
test
mov
mov
mov
jo
sbb
test
push
mov
repnz
test
cmp
adc
rcll
stos
clc
lods
pop
loopne
lea
js
pop
push
xorb
lods
aad
and
jmp
dec
inc
lea
mov
push
aad
pop
clc
outsl
fildll
add
cmpsl
mov
and
cmpsl
pop
enter
or
inc
orb
or
test
test
inc
xchg
popf
mov
mov
mov
pop
push
jecxz
or
and
imul
cli
popf
cs
aam
mov
flds
outsl
and
and
fdivrp
outsl
icebp
pop
insb
roll
mov
xchg
add
in
das
jl
and
out
and
flds
clc
incl
dec
and
daa
mov
data16
cwtl
jno
decl
adc
sub
sub
aaa
sarb
adcb
subl
fistps
rorl
rorl
scas
mov
clc
pop
call
cmp
cmp
mov
mov
addr16
adc
and
mov
add
push
bound
outsb
mov
cmpsb
pop
shll
call
or
stc
sub
or
scas
inc
fwait
mov
push
pusha
rcr
sbb
cmp
jbe
push
clc
jg
push
and
in
cmpsl
gs
aam
mov
sarb
testb
stos
ret
dec
cmp
jo
addr16
test
addb
jmp
cmpsl
and
aam
xchg
out
xor
enter
lcall
out
dec
ja
cmpsw
pushl
test
popa
fnstenv
inc
dec
mov
xor
push
ds
or
mov
mov
adc
or
add
mov
testb
mov
dec
jns
lock
xchg
jbe
shlb
inc
popa
jne
push
das
push
mov
xchg
push
and
aam
es
pop
mov
inc
or
adc
sti
pop
xor
inc
adc
mov
inc
addr16
xchg
mov
adc
push
push
addr16
enter
lcall
fcomps
jno
test
sbb
loop
aam
jo
mov
ja
js
shl
ret
insl
fld
inc
in
cmp
jmp
and
rolb
xchg
pop
call
stos
insl
outsl
std
lahf
and
lcall
inc
outsl
adc
int3
pusha
stos
push
sti
pop
add
push
mov
dec
cmp
enter
fwait
push
ret
or
lock
cli
jg
pop
inc
js
faddl
jae
daa
push
aaa
std
sub
lds
jo
lods
pop
push
sbb
icebp
outsl
sbb
adc
mov
adc
xor
sbbl
rcrl
clc
inc
test
cmovge
mov
adc
pop
iret
fildll
or
sub
lret
push
aad
ret
dec
out
pop
sti
clc
jg
in
or
jbe
arpl
fsub
cmp
imul
stos
pop
jg
inc
insl
hlt
call
jne
jmp
xorb
cwtl
in
mov
ljmp
jmp
test
je
xchg
mov
push
adc
dec
mov
les
cmpsl
enterw
jno
pop
decl
movb
sub
jg
aas
subb
nop
xlat
inc
push
mov
and
int
imul
loopne
out
out
mov
jge
ljmp
mov
or
dec
and
ss
cmpsl
aaa
jb
cmp
mov
popa
nop
sbbl
mov
fld
out
and
incl
dec
push
icebp
cmp
cmp
sub
lock
sub
xor
and
inc
or
mov
xchg
pop
fs
inc
mov
push
into
cmp
js
cltd
xlat
pop
mov
loop
movsb
daa
dec
xor
les
xor
push
faddp
push
sub
dec
dec
andb
loop
add
mov
adc
pop
loop
inc
xchg
cli
push
pusha
mov
mov
out
xchg
ljmp
test
adc
dec
sti
loope
adc
movsl
lods
lcall
sub
call
push
inc
lods
clc
and
mov
jmp
add
push
clc
sbb
sbb
push
js
mov
aaa
xchg
enter
stos
sub
inc
cld
incl
cli
lahf
xor
push
sbb
and
into
iret
mov
lret
adc
inc
inc
inc
and
lcall
xchg
lds
enter
mov
adc
add
repnz
fmull
ss
dec
loop
jge
xchg
jecxz
fmuls
inc
lock
nop
push
or
or
add
mov
sbb
inc
mov
jl
or
mov
test
cmp
fists
jecxz
add
mov
bound
or
push
mov
cmp
iret
int
cmp
fcompl
pop
mov
pop
jecxz
dec
jp
mov
add
lock
cmp
add
je
mov
daa
push
sbb
inc
cld
lods
outsb
fldl
push
pushf
mov
fwait
loop
test
cmp
or
daa
incl
movsl
push
xchg
aam
mov
inc
sbb
and
int
cmc
sub
testb
decb
int3
rolb
insl
adc
aaa
and
hlt
je
sbb
push
dec
mov
fwait
push
or
adc
mov
repz
xor
les
adc
dec
or
push
jbe
pop
pop
fsubs
fldt
push
cmpsb
fdivs
sub
loop
and
jle
ret
repnz
push
out
scas
cwtl
fnsave
ljmp
pop
push
mov
test
fidivl
sahf
out
roll
jb
sub
pop
mov
push
dec
xor
inc
es
ljmp
andl
dec
popa
dec
pop
out
lods
sbb
xchg
je
or
mov
enter
int
lahf
xor
push
xlat
adc
pop
rol
pusha
gs
mov
outsb
outsb
jns
xchg
in
fwait
inc
add
arpl
call
imul
jbe
jge
sarl
adc
aam
inc
popa
and
xor
push
cmp
xchg
pop
sbb
sbb
mov
popa
loope
inc
jle
scas
sub
repz
cmp
xor
pop
lahf
inc
xchg
sbb
dec
rorb
sti
jb
cmp
cld
add
sbb
jecxz
insb
push
mov
pop
std
xchg
push
inc
in
lea
cmpsb
add
sbb
in
push
sarl
cld
lret
add
outsl
int
test
lods
fidivrl
clc
inc
sub
popa
jnp
incb
or
jbe
dec
fiaddl
or
lret
pop
dec
sahf
test
cmpsb
ficoml
aam
sti
movsl
push
dec
pusha
cli
cmp
mov
mov
cmpl
repnz
mov
mov
sbb
and
pop
iret
pusha
clc
push
test
or
add
rolb
dec
outsl
outsl
or
inc
jne
jmp
push
mov
adc
and
bound
fwait
push
and
fwait
test
pop
pop
vpsubsb
mov
rcll
orb
jle
ljmp
icebp
cmpsl
adc
pop
aam
jns
add
jb
ret
ljmp
sub
mov
xor
sub
mov
sub
ret
mov
add
or
bound
mov
into
fcom
cmpl
mov
add
lods
mov
mov
std
dec
push
dec
shrl
jmp
jg
mov
inc
sarl
cli
lret
leave
popa
cmpsl
and
add
and
in
mov
shlb
fwait
add
cmp
xchg
mov
sub
decl
and
fwait
js
sub
popf
and
decl
ds
mov
sbb
jg
jnp
dec
mov
xorl
decl
mov
lret
jl
insb
jge
addr16
pushf
jae
inc
inc
jo
loop
mov
cmp
sub
xchg
das
push
mov
or
xchg
mov
aaa
mov
decl
sbb
js
lock
lahf
xor
or
push
cmpsb
sub
cmp
aas
neg
loope
push
popa
xchg
popa
push
call
cltd
jp
fwait
fs
mov
xchg
je
push
ljmp
sbb
insl
repnz
mov
and
sbb
inc
lahf
movsb
fcomip
jns
or
xor
decl
mov
sbb
mov
icebp
rcrb
adc
xchg
lcall
sub
fcmove
shl
and
jbe
xor
out
sbb
xchg
mov
push
or
inc
mov
or
or
pop
clc
inc
mov
movsb
pop
lcall
jle
jle
popf
mov
xor
jmp
pop
fldenv
rorl
movsl
cmp
popf
ss
ljmp
xchg
pop
dec
mov
cmp
mov
and
aaa
pop
jl
adc
fs
je
int3
in
pop
sbb
loopne
adc
jg
mov
jl
xlat
stos
lahf
mov
mov
xchg
xchg
dec
add
repnz
mov
pop
loopne
aad
mov
push
test
outsl
aas
mov
jmp
jae
push
sub
pushf
dec
daa
and
in
stos
mov
lods
sbb
fs
or
repz
push
fcmovu
sbbb
cli
inc
mov
insb
inc
add
int3
movsb
loope
pushl
xchg
cmpsb
lret
inc
loop
stos
pop
mov
jns
jns,pn
lahf
mov
shl
jmp
and
dec
mov
jno
jnp
test
cmpsb
cltd
xchg
jae
push
mov
push
mov
lods
inc
jmp
push
mov
orl
fildl
mov
inc
ss
mov
dec
or
decl
aad
movsb
rcl
mov
nop
push
enter
mov
dec
fwait
jae
pop
nop
pop
xlat
rcr
jl
lods
jmp
jecxz
stos
mov
in
inc
lret
push
jmp
add
aaa
cli
sbb
lahf
adc
jb
and
shrl
jmp
adc
mov
mov
sub
sbb
jge
icebp
jg
pop
ljmp
mov
ret
xchg
loop
jg
cmp
sub
jg
movsl
lret
movlps
cmp
lcall
cmp
test
sbb
sbb
pop
lds
cs
xor
pop
cmp
decl
fstpt
sbbb
mov
notb
lock
cmpsl
push
mov
ljmp
xlat
adc
bound
scas
loopne
fld
sub
sti
jno
jge
cmp
out
mov
call
and
sub
pop
lods
mov
insl
insl
sub
aam
jmp
lret
js
jle
adc
loope
sub
pop
lods
xchg
test
and
sub
mov
mov
nop
dec
push
dec
jmp
jg
mov
aaa
push
imul
push
insb
mov
mov
push
mov
pop
xchg
inc
sub
or
or
sub
xchg
pushl
popf
xchg
push
filds
jmp
dec
xchg
push
add
shll
rol
int
call
mov
xlat
aas
pop
xor
repnz
jg
aaa
cwtl
xlat
insb
ror
pop
inc
lcall
loope
add
dec
xchg
dec
movsb
mov
mov
sub
mov
mov
imul
cmpsb
sbb
pop
insb
push
jne
or
leave
incl
pop
hlt
aaa
insl
jg
xor
scas
pop
mov
ljmp
mov
mov
jmp
mov
enter
int
pushf
ljmp
push
mov
insl
dec
loope
pop
movsb
and
cltd
fwait
push
daa
mov
das
lock
mov
jle
cmpl
and
push
shrb
mov
pop
add
jecxz
sti
pop
scas
push
lds
sub
incl
add
bound
xchg
sbb
hlt
outsb
or
bound
xor
inc
movsb
loope
call
add
imul
fidivl
mov
cmpsb
push
dec
pop
ret
mov
repz
rol
mov
xchg
decl
gs
int
fldl
add
fs
cmp
idiv
sti
repz
sub
int3
mov
in
jp
mov
aas
mov
jnp
sbb
sub
in
xor
push
pusha
push
adc
dec
ljmp
aam
cs
mov
loopne
and
adc
pop
rcll
and
inc
xor
incl
push
fmul
inc
loop
xor
mov
sbb
fmuls
loop
dec
jl
dec
or
mov
pop
cmp
sahf
test
mov
mov
lods
loop
jecxz
incl
sub
dec
cld
ds
push
mov
mov
test
dec
aam
fstl
pop
out
add
lcall
sbb
aas
or
mov
lcall
sbb
jns
iret
pop
imul
es
mov
mov
sub
inc
out
jmp
inc
ss
mov
mov
adc
sbb
or
and
lcall
aad
push
jge
out
imul
aas
loop
inc
out
outsl
scas
pop
ljmp
sbb
ds
icebp
mov
mov
adc
xlat
test
and
push
cmp
bswap
jg
repz
cmc
sbb
lcall
sub
cmp
shr
jle
das
cmc
lcall
cwtl
out
lcall
lock
aaa
call
decb
repz
mov
hlt
hlt
mov
cmp
in
jb
outsl
cmc
call
xor
jae
lahf
repz
mov
xor
inc
insb
sub
test
jno
pop
cmc
xchg
mov
lcall
std
mov
jno
adc
ljmp
ljmp
notl
int3
adc
ja
and
in
icebp
fwait
inc
cmp
xchg
movsb
call
mov
ret
xchg
dec
and
cmpb
fwait
out
xchg
call
pop
mov
dec
dec
inc
les
insb
in
inc
repnz
jnp
cld
repnz
sbb
or
test
jmp
add
mov
sub
ljmp
ficompl
jnp
jg
bnd
mov
das
hlt
fnstsw
or
xchg
iret
lcall
add
lods
ljmp
test
add
adc
addr16
pushf
jns
add
call
mov
scas
cltd
test
mov
push
push
mov
std
xchg
sub
testl
lcall
xchg
outsb
cld
mov
xchg
fwait
cwtl
imul
adc
add
cmp
add
mov
mov
jle
ret
out
cmpsl
into
js
push
rorb
decl
lods
jbe
cmp
lds
sub
stos
mov
lds
in
jmp
fucomip
xchg
xor
mov
inc
mov
outsl
pop
xlat
xchg
fcmovb
sub
notl
xor
jmp
xor
mov
orb
fnsave
xchg
sti
decb
gs
int3
call
adc
fs
jae,pn
pushf
inc
into
movswl
xchg
push
outsb
cs
jmp
out
ret
pop
push
rcl
andb
inc
inc
jecxz
pop
xchg
repz
cmp
call
jmp
je
push
pop
inc
ja
lock
push
mov
jbe
pop
sub
pop
out
pop
push
aaa
in
je
jp
mov
dec
xchg
movsl
jg
call
out
sub
cvttps2pi
imul
rolb
pushl
lock
push
cmp
sbb
push
mov
out
das
int3
and
xor
ljmp
jb
xor
pop
fstp
call
adc
jae
les
sar
pop
sub
cld
fisttpl
or
pop
out
sahf
pop
incb
xchg
inc
call
js
pop
aad
inc
inc
xchg
loop
adc
sbb
fisttpl
mov
cli
ljmp
mov
iret
pushf
aaa
cmp
popa
mulb
pop
cli
push
sub
pop
fdivrl
aam
ljmp
fildll
das
ret
mov
adc
das
in
cmp
cmpsl
mov
std
call
lds
xchg
pop
or
mov
cmp
push
and
imull
push
jge
idiv
decl
xor
cmpsb
mov
xor
std
push
fwait
dec
cmp
cld
negl
cmp
pushl
mov
inc
pushf
data16
and
pop
dec
push
fiaddl
sbb
out
je
cli
out
mov
xorl
sbb
cmp
insb
cmp
leave
pop
xor
dec
outsl
jp
jg
jg
fisttps
adc
addr16
in
pop
clc
pushl
cmp
mov
cmp
movsl
orl
ljmp
lods
lret
inc
sbb
xor
inc
jbe
das
daa
divb
arpl
jae
mov
popa
sub
insl
insb
rcll
cmp
jb
push
popa
dec
aam
sar
push
add
mov
xor
ret
mov
sub
test
cmp
push
insl
or
in
mov
cmc
add
stos
lods
movsb
add
stos
insl
sbbl
arpl
nop
loopne
mov
dec
lea
pushf
mov
add
push
push
mov
mov
call
pop
lds
dec
icebp
dec
inc
push
fsubp
nop
add
xchg
rcll
loop
or
and
sub
xchg
idiv
mov
hlt
dec
nop
lcall
cmc
push
test
dec
fstpt
call
jmp
notb
dec
cmp
push
inc
test
sub
idivl
ror
sub
xchg
mov
or
cmp
nop
xor
mov
leave
push
test
call
jb
pop
pusha
or
jae
fwait
jl
xchg
xor
movsl
in
jl
hlt
sub
in
addb
mov
outsl
lock
mov
or
and
pop
mov
incl
xorb
mov
xor
jecxz
jmp
jno
loopne
jnp
scas
vrsqrtps
or
mov
xchg
std
or
mov
insl
or
cli
shr
rcll
xchg
notl
and
sub
stos
xchg
ss
aam
incl
movsl
and
sbb
cmc
push
cwtl
ljmp
cwtl
daa
ja
mov
push
push
push
cwtl
divb
push
mov
mov
xchg
clc
pop
std
lds
cmp
xchg
xor
outsl
lock
incl
fnstsw
mov
add
das
scas
jnp
mov
xor
jmp
stc
mov
cmc
gs
xor
mov
mov
jb
js
jmp
mov
pop
cmp
pushf
aas
mov
push
mov
in
add
fistpl
push
rcrl
inc
push
adc
mov
or
call
adc
pop
movsb
or
pop
hlt
mov
test
or
es
xchg
and
mov
or
push
or
dec
scas
jnp
fildll
inc
pop
and
and
decl
stos
pop
ret
push
sbb
jb
mov
fadds
xchg
pop
inc
lcall
repnz
and
fsubs
dec
xchg
push
in
push
and
cltd
mov
pop
pusha
xchg
insb
mov
decl
push
insb
or
jnp
sbbl
shrb
imul
lahf
jmp
outsl
cld
stos
subb
pop
psubw
aaa
sbb
loopne
stos
jg
cmp
fnstsw
mov
or
adcl
xchg
outsl
std
jg
lret
lret
sub
or
or
idivb
daa
add
cmpsl
jb
call
clc
movsb
xor
add
jle
xor
jno
pop
or
rcr
repnz
cmp
or
or
imul
popf
stos
test
pop
mov
mov
push
mov
inc
cmc
mov
clc
inc
aam
movsl
loop
js
lcall
dec
xchg
adc
pop
mov
xchg
push
push
imul
inc
les
scas
ret
sbb
add
aam
adc
fbld
xor
cmp
push
mov
mov
jg
mov
mov
pushf
adc
movl
jl
pop
lahf
dec
cmpsl
jg
popf
fidivrs
mov
inc
adc
mov
fcomps
loop
xchg
mov
stos
push
cmp
scas
cli
incl
sbb
out
aam
push
push
push
cs
std
stos
cli
dec
aas
imul
aaa
cmc
inc
pop
adc
cmp
lcall
leave
xchg
das
in
out
pusha
sahf
push
dec
pop
in
std
test
xchg
add
ljmp
movsl
xchg
cmp
call
fists
pop
cli
cli
cmp
fwait
std
fucomip
test
fsubr
xor
add
mov
or
and
mov
mov
mov
push
jo
ret
in
xor
sbb
call
ret
icebp
mov
ja
out
mov
jle
lock
lods
adc
les
add
jmp
sti
and
inc
test
push
xchg
sbbb
mov
xor
and
or
sub
daa
jbe
inc
xchg
lea
push
shr
sub
add
scas
xchg
fs
sbb
push
mov
cmp
aas
les
or
call
addr16
inc
outsl
addr16
jmp
xchg
push
leave
aad
or
mov
outsl
or
into
cld
outsb
ljmp
aad
fistpl
or
enter
adc
inc
cmp
jno
shrl
lcall
inc
int
fisttps
decb
mov
shrb
cwtl
and
pop
inc
stos
mov
pop
ljmp
push
mov
sahf
mov
xchg
adc
sbb
sbb
lds
mov
mov
push
decl
ljmp
jle
inc
sbb
fsts
adcl
mov
sub
shll
repnz
clc
loopne
fimuls
mov
dec
std
inc
xor
in
pop
xor
or
and
dec
movsl
stc
xchg
mov
stc
fnstsw
cwtl
jno
mov
mov
out
or
pop
xor
lds
push
movsl
mov
iret
mov
mov
in
test
lcall
add
js
pop
lret
ljmp
jbe
gs
cld
decl
rorl
ror
loop
mov
ds
sub
inc
xchg
outsl
lds
idiv
push
bound
or
pop
loopne
leave
mov
jg
std
clc
in
and
pushf
or
mov
pop
xlat
and
ja
sbb
mov
fidivrs
mov
mov
xor
jno
jo
dec
dec
es
ljmp
out
adc
adc
pop
roll
jb
incl
jge
and
test
sub
dec
inc
scas
in
push
jnp
dec
sbb
incl
stos
mov
xchg
adc
loop
inc
xchg
mov
test
mov
or
lods
mov
or
mov
mov
jo
cmp
js
nop
mov
loopne
fmuls
push
data16
outsb
icebp
mov
mov
mov
test
in
or
call
push
cmp
mov
sbbb
decl
call
outsb
cmp
cmp
jae
int
xchg
outsb
xchg
sbb
call
xor
cmpsl
jmp
xor
or
psubb
les
in
inc
icebp
icebp
ret
jmp
lret
adc
lcall
push
mov
cltd
repnz
cli
mov
dec
pop
out
mov
int3
xor
mov
incb
push
xor
cmp
jo
push
or
lods
mov
not
bound
ss
bound
outsl
subb
imul
sub
inc
test
clc
push
adc
aaa
jnp
push
js
cs
sub
cmp
cltd
movsl
arpl
pop
imul
jecxz
sbb
mov
sbb
hlt
fnstsw
adc
call
incl
daa
jg
sub
mov
into
push
out
xor
leave
dec
mov
inc
decl
std
add
mov
push
push
lahf
ret
add
cli
jg
xchg
mov
xlat
push
jmp
mov
jo
rcrl
ss
insb
mov
push
das
arpl
ljmp
aas
repz
jge
push
mov
inc
mov
dec
pop
jmp
daa
call
adc
lret
xchg
popa
mov
mov
int3
mov
flds
jmp
push
mov
repz
xchg
jmp
adc
popa
fnstcw
mov
pop
inc
dec
mov
push
cmp
pushf
adcl
sub
dec
mov
jle
xlat
addr16
lds
pop
ljmp
lds
push
in
int
xchg
or
jg
mov
xchg
incb
or
pop
rcll
jmp
ljmp
mov
lods
and
inc
mov
pop
dec
fnstsw
and
cmc
incl
xchg
sbb
gs
adc
fadd
sub
dec
jmp
arpl
jg
outsl
jne
mov
pop
add
adc
mov
cmc
decl
mov
jb
jmp
cmp
cmpsb
lea
mov
lahf
out
jg
das
popa
sub
sahf
adc
jno
loop
mov
call
push
add
jb
cmp
jns
hlt
call
sbbb
fstps
push
rcrl
fwait
pop
loopne
jnp
jmp
and
addr16
push
lods
adc
or
jns
sti
sub
add
mov
xchg
incl
push
rcr
idivb
jns
popa
iret
mov
sbb
pop
xchg
mov
arpl
leave
mov
pusha
loope
jg
loope
xor
dec
je
stc
mov
test
add
call
fildl
popa
test
in
scas
aam
and
fisubrs
icebp
ljmp
repnz
movsb
mov
jp
ror
mov
rol
decl
mov
cmp
add
stos
adc
adc
cmc
call
adc
mov
negl
in
jb
js
outsl
xor
sub
push
ljmp
push
add
fnstenv
pop
es
xchg
sub
pop
pop
sbbb
aaa
bnd
inc
fbstp
dec
mov
pop
inc
mov
test
ljmp
pop
gs
mov
mov
ja
das
cmp
fwait
mov
andl
push
adc
repz
mov
into
sti
push
das
cld
aaa
clc
in
mov
cld
dec
fisttps
movsb
xor
incl
xchg
jecxz
loope
mov
sbb
out
lahf
repz
sbb
aad
cmovo
fimuls
ljmp
mov
mov
cmpsb
pop
jmp
dec
lret
mov
js
xchg
clc
filds
or
mov
aaa
lods
push
pop
xchg
das
push
push
sti
cmp
and
dec
mov
movsb
cmp
loop
xchg
pop
pusha
inc
aas
xchg
repz
hlt
jmp
push
scas
xor
gs
ljmp
mov
ret
addr16
and
aas
and
dec
cmc
in
repnz
lock
xor
div
pop
sub
sahf
mov
fdivr
mov
push
and
jb
cs
into
ljmp
jmp
sub
xor
xchg
mov
test
push
out
lahf
mov
incl
incl
dec
mov
out
in
int3
jnp
aaa
cld
or
loope
lods
loope
fildl
add
lcall
sub
inc
inc
jp
mov
xchg
lods
adcl
mov
sahf
lahf
ficompl
cmp
jge
cld
pop
inc
and
inc
fnstsw
scas
pusha
dec
neg
sar
or
sub
mov
mov
add
pop
mov
into
test
inc
cld
add
in
in
not
inc
icebp
ljmp
jl
push
jne
test
cmp
or
push
xchg
pop
jg
test
ljmp
loopne
push
rcll
test
stos
pop
pop
je
decl
cs
inc
in
jle
push
push
adc
mull
jg
mov
repz
scas
popf
xchg
mov
fidivl
mov
gs
test
out
push
jl
jp
xor
inc
lcall
sbb
jne
loope
jp
rclb
push
repnz
sar
add
jg
dec
jo
sub
in
stos
repz
cmpl
ret
ror
cmp
out
mov
pop
mov
push
insl
sbb
insb
push
iret
pop
ljmp
cld
jg
int3
push
cltd
xor
jl
dec
push
jp
dec
xchg
movsl
fwait
xor
sti
imul
mov
dec
xchg
lcall
mov
fs
std
fldcw
fisttps
adc
xlat
pop
mov
jp
and
les
sub
lcall
sbb
in
push
mov
je
inc
jb
xor
adc
sub
mov
mov
jae
inc
or
mov
cmc
sub
ljmp
hlt
mov
in
pusha
inc
jo
mov
push
sbb
fs
jbe
incl
fiaddl
dec
xchg
daa
cli
mov
leave
jbe
xchg
test
and
decl
pushl
insb
sbb
ret
inc
mov
inc
ror
test
inc
pop
clc
popf
shll
jmp
xchg
dec
jp
mov
cmp
faddp
sahf
and
cmp
xchg
push
movsl
rcll
cld
scas
data16
outsl
std
jle
fmull
sub
add
int
das
cmc
push
pop
push
decl
cmpsl
and
mov
stc
aas
ljmp
ja
movsb
add
mov
jg
decl
insl
push
add
cmp
je
pushl
stc
adc
cmp
imul
test
clc
outsl
or
push
add
push
mov
aad
or
dec
cld
push
pop
mov
popa
mov
shll
js
xchg
and
ljmp
je
push
and
js
jae,pn
mov
cmp
mov
shl
mov
pushf
stos
es
insl
call
mov
dec
inc
and
ljmp
mov
mov
push
sbb
sbb
sub
lods
aaa
ljmp
add
pop
cld
sti
imul
lcall
in
adc
add
sbb
xor
xchg
fcoms
xchg
sbb
mov
ja
mov
inc
lods
push
ret
lods
add
int3
mov
cmc
mov
insl
test
fmuls
mov
repz
decl
push
scas
cmp
dec
in
and
cmp
pop
mov
mov
jne
jp
cld
and
clc
mov
movsb
iret
mov
out
divb
loope
mov
incl
in
test
les
mov
pusha
adc
ds
rol
sbb
sub
mov
data16
shll
icebp
sub
loope
decl
aas
push
movsl
pop
or
mov
call
cli
test
dec
cmpsb
out
out
push
pop
fs
or
stc
pop
movsb
add
nop
es
fisttps
fistpl
pop
cs
mov
cwtl
inc
ljmp
popl
xchg
clc
lret
jmp
test
xchg
iret
popf
inc
pushl
xor
xchg
adc
in
dec
mov
xlat
fsubr
cwtl
mov
mov
call
pushl
cmpsl
int3
mov
xchg
or
imull
stos
cmc
xchg
jmp
ljmp
lock
jle
rol
mov
mov
jg
test
adc
hlt
mov
fistpll
mov
fisttps
pop
js
stos
xor
pushl
mov
movsb
sbb
push
in
mov
repnz
xchg
loope
adc
push
adc
mov
pop
sbb
push
pushl
inc
cmp
xchg
xchg
ficomps
adc
mov
call
pop
mov
fsub
fsubl
xchg
mov
add
insb
add
xor
sub
dec
xchg
pop
lock
lret
inc
jae
pop
or
adc
xchg
incl
push
jo
scas
int3
movl
frstor
sub
hlt
mov
pushf
xor
clc
or
incl
dec
fdivl
cli
add
or
test
mov
pop
and
inc
and
inc
in
adc
cs
mov
dec
out
adc
sbb
incl
add
jo
outsb
es
pop
xchg
mov
sub
sub
arpl
aaa
cli
mov
sub
xchg
dec
dec
push
lods
std
mov
jecxz
cmc
mov
adc
mov
xor
decl
test
inc
les
inc
bound
rcr
sbb
cmp
decl
pop
push
loope
out
mov
aam
jp
jae
ljmp
mov
loopne,pn
fdivrs
inc
int
inc
lret
imul
inc
pusha
and
icebp
fs
and
fisttps
mov
pushl
sti
jnp
xor
adc
pop
push
xor
fsubrl
cld
adc
mov
pop
loop
jmp
fdivs
fnstenv
adc
mov
sub
aam
mov
sub
call
imul
push
and
jnp
cmp
inc
aaa
add
repnz
mov
push
xchg
in
xchg
sbb
std
sub
sbb
pushl
stc
xchg
jno
adc
mov
jmp
jecxz
pop
pop
data16
jg
decl
movsl
lods
add
shl
pop
pop
in
pushf
jle
roll
decl
out
ret
movsb
test
sub
imul
push
sbb
fucomip
ljmp
dec
movsl
add
popa
ljmp
testb
xchg
pop
cld
ljmp
jo
sub
pop
pop
sbb
inc
rcll
adc
out
sbb
push
pop
mov
cmc
jns
stc
insb
outsl
jl
mov
jns
stc
testb
or
test
inc
mov
fdivrs
pop
aad
mov
loopne
ret
das
dec
dec
and
xchg
dec
jg
fwait
insb
stos
jne
mov
mov
add
jg
pop
cwtl
xchg
ljmpw
mov
pop
shlb
jo
aad
pushl
es
and
movsl
out
mov
decl
or
cwtl
mov
jg
aas
cltd
lods
pop
pop
scas
cli
test
and
pop
pop
ss
mov
test
call
jle
sbb
movsl
xchg
repnz
add
addb
cs
mov
out
cmp
add
movsb
je
xchg
or
aam
cs
outsl
adcl
hlt
dec
pop
cmp
loopne
sub
sti
jbe
and
xchg
call
push
rorb
stc
arpl
sahf
lods
dec
or
ljmp
dec
adc
jnp
ffreep
dec
scas
sbb
inc
adc
inc
notb
lcall
data16
mov
mov
sub
pop
and
or
jecxz
pop
nop
dec
subl
lds
ret
jne
test
das
std
jg
out
mov
dec
push
mov
inc
mov
inc
sbb
push
movsl
jp
testl
rcrb
test
adc
das
cmpsb
icebp
sti
jmp
jg
out
mov
sbb
mov
xor
jns
xor
push
orb
jmp
ficoms
pop
add
jp
lods
push
push
cmc
call
les
sbb
push
test
jno
adc
ljmp
in
imul
pop
rorb
es
pop
movsb
mov
push
push
pop
sahf
popa
gs
dec
or
push
sub
mov
xor
fistpl
iret
sub
repz
ljmp
bound
insl
jecxz
in
sub
jmp
xor
and
xchg
add
test
push
xor
cmpsb
ss
mov
lret
decl
jbe
mov
dec
test
loop
mov
mov
or
mov
roll
out
push
sti
inc
fcomps
cmc
inc
mov
ljmp
jg
adc
jp
xchg
popa
ljmp
sub
or
loop
sub
mov
mov
mov
jne
fistl
pop
add
pop
repz
xchg
jecxz
cli
jmp
inc
es
mov
add
fstpt
fsts
stc
jecxz
adc
sbb
js
ficompl
lods
xor
cli
jns
decl
or
ljmp
jge
adc
xor
aad
jle
or
ljmp
jge
enter
loop
mov
mov
mov
add
cwtl
jl
stos
add
mov
std
adc
mov
es
inc
push
decl
mov
fcmove
repnz
cmpl
enter
mulb
mov
mov
mov
xchg
adc
imul
cmc
nop
add
xchg
mov
jno
pushl
ret
mov
push
fdivrl
mov
push
sub
inc
aad
loop
ja
imul
cmpsb
loope
inc
cs
mov
ja
pop
sub
mov
xchg
push
pop
ljmp
and
stos
shl
ljmpw
lcall
mov
test
adc
pop
rorl
inc
out
testl
sub
cwtl
xchg
movsb
out
mov
mov
enter
in
xor
sub
int3
push
enter
inc
inc
loopne
mov
mov
sub
notl
or
mov
mov
push
jnp
jmp
xlat
fs
ljmp
xor
inc
xchg
nop
cmp
movswl
dec
outsl
mov
inc
or
outsl
hlt
push
push
fldcw
add
test
cld
pop
ljmp
es
and
adc
outsb
cmp
testl
mov
fnsave
in
rclb
mov
ljmp
and
jns
insl
iret
nop
xchg
scas
imul
cmp
test
popf
cmp
fstps
mov
jle
ret
jmp
mov
enter
enter
pop
lcall
jle
add
fdivrp
pop
pop
mov
jae
or
cli
int
cmp
subb
in
push
jl
jmp
adcl
adc
or
and
das
jo
cmp
out
and
mov
ss
cltd
popf
out
jnp
push
jmp
sub
pxor
mov
mov
lcall
jg
nop
and
sbb
jl
outsl
std
popa
pop
imul
jo
jge
inc
add
decl
dec
cmpsl
int
rcrb
fwait
in
mov
jnp
fs
rorl
or
scas
sbb
pushf
test
arpl
stos
jg
out
aad
dec
scas
loope
adc
clc
push
mov
icebp
add
ds
sbb
pop
mov
mov
mov
imul
sub
outsl
lock
mov
stos
jecxz
bound
xchg
adc
push
test
jne
pop
std
adc
dec
xor
or
inc
mov
xor
outsb
in
out
dec
sbb
pop
dec
sarl
insb
shrl
push
sbb
push
mov
xchg
adcl
mov
ljmp
cmpsb
or
rcl
out
sub
jl
add
testb
jp
int
aad
mov
insb
imul
mov
add
mov
lahf
mov
fnstsw
xchg
fiaddl
mov
jb
enter
push
xchg
out
addr16
insb
addb
imul
jg
test
mov
arpl
inc
pop
pop
jo
or
loopne
les
aad
and
dec
cltd
adcb
mov
cwtl
cwtl
push
mov
pusha
mov
pop
sub
je
in
xor
dec
push
cmc
jp
je
fidivrl
aam
sbb
mov
ljmp
test
and
or
sti
cmpb
sub
ret
stos
jg
incl
decl
push
shll
mov
clc
fyl2x
ud2
hlt
incl
inc
add
dec
cmp
ret
inc
test
jnp
into
daa
adc
or
mov
iret
inc
pop
mov
int3
pop
scas
mov
lods
add
out
gs
push
push
scas
in
mov
sub
cmpsl
idivl
cmpsb
repnz
mov
jg
mov
push
mov
cli
aas
popa
adc
dec
fiaddl
cmp
jno
push
testb
lds
aaa
fdivrp
jmp
inc
or
add
jmp
jno
test
cmp
rolb
rorl
shr
lahf
fsubrs
pop
movsl
int
decl
mov
push
pop
jo
mov
call
js
aas
sbb
xor
pop
jecxz
inc
pop
mov
popf
call
shlb
inc
dec
or
xor
push
push
or
jo
ljmp
jae
push
lcall
pop
sbb
pop
mov
cli
cmpb
cld
pop
neg
push
jmp
fisttpll
loop
cld
decl
adcb
and
xchg
sub
mov
sbb
dec
and
add
fwait
cmp
decl
xchg
pop
add
mov
jp
cs
sbb
push
insl
clc
xor
decl
or
out
wrmsr
jg
dec
jp
mov
jnp
loop
fwait
imul
aaa
icebp
jmp
pop
push
xchg
jae
dec
push
aaa
addr16
outsb
out
push
push
jmp
push
pop
pop
idivl
imul
addb
insb
pushf
ficoml
push
aad
mov
mov
mov
aad
jge
lods
into
ja
push
push
lret
adc
adc
mov
call
push
push
ja
in
movb
sub
jg
cs
jmp
lcall
push
jne
adc
je
jno
lds
add
push
mov
test
outsb
fisubl
add
xor
test
jge
filds
push
jns
lea
xchg
push
pushl
mov
push
daa
push
cmp
sahf
adc
cli
into
int3
sbb
clc
push
xor
cmp
test
and
xchg
push
ficompl
orl
decl
xchg
mov
aaa
push
aas
sub
adc
and
jg
ja
cmp
sti
rcll
xor
hlt
in
mov
push
movsb
daa
call
mov
or
jecxz
je
mov
shl
or
add
fstpt
add
mov
push
inc
sub
sub
mov
cmp
outsb
rcrl
incl
add
stos
dec
xchg
das
pop
xchg
jb
daa
aas
insl
pop
or
aam
adc
call
je
shll
in
outsb
lcall
or
call
jg
jge
dec
dec
jg
imul
fsubr
cli
shrl
xchg
call
shrl
call
es
in
outsb
fdivs
inc
orl
int
pop
sarl
iret
rorl
inc
insb
dec
xor
cmp
mov
dec
push
cli
mov
pusha
test
inc
mov
ja
push
shlb
adc
ljmp
out
pop
test
sbb
xchg
sti
enter
jb
aaa
fldl
incl
push
es
mov
popf
fsub
xor
lcall
jmp
jp
hlt
add
cld
call
adc
mov
scas
repz
inc
test
lret
pop
mov
loop
fnstsw
lcall
jl
loope
fnstsw
inc
in
mov
aaa
leave
fstp
jmp
loopne
jmp
xlat
or
xor
insl
daa
cmp
jae
fdivl
leave
lock
call
std
out
xchg
adc
mov
fcmovnb
testb
jg
add
sbb
es
and
aam
pop
fcmovnb
lret
mov
das
lock
push
push
in
add
add
lahf
push
xchg
clc
nop
loopne
in
int
incl
sbb
jne
cmp
inc
imul
pop
cmp
xchg
pop
lods
dec
adc
data16
mov
fcmovb
or
leave
push
cmpsb
lahf
pop
adc
punpckldq
adc
xchg
decl
inc
adc
jmp
xor
mov
imul
pop
add
or
pop
cld
inc
das
xadd
pop
aas
jae
jmp
in
add
lds
fisttps
movsl
add
xchg
sub
or
pop
xor
sti
shll
divl
mov
cld
xlat
dec
sti
sbb
int
pop
xor
or
fstpl
lcall
xor
shlb
dec
add
push
xlat
scas
dec
bound
out
lcall
mov
bnd
adc
sti
rclb
push
sbb
decl
call
cld
mov
mov
das
inc
xchg
imul
add
cmc
inc
adc
jmp
jg
shll
jmp
xchg
iret
jno
push
xor
mov
dec
add
mov
add
stos
repz
add
jmp
sub
sub
mov
jnp
lcall
xor
mov
lods
idivl
dec
cmp
fcmovnb
mov
lods
fsubrl
popf
pop
fs
adc
jle
loopne
xlat
add
into
sub
xchg
sub
bound
leave
pop
xor
inc
das
and
lcall
dec
pop
cs
popa
es
jnp
adc
lea
pop
call
cli
mov
scas
loopne
inc
pop
xchg
lret
mov
dec
pop
in
loope
scas
xchg
xor
xor
jmp
pop
dec
push
inc
enter
xchg
imul
mov
in
dec
out
fists
daa
popf
sub
mov
loope
or
dec
cmpl
fistpl
imul
ret
nop
pop
notl
or
test
iret
lcall
inc
lods
mov
adc
pcmpgtd
inc
ja
outsl
pusha
jnp
cmp
dec
test
cld
lods
enter
inc
mov
cltd
or
lods
xchg
popf
xchg
mov
decl
xor
push
das
cs
adcl
push
test
lcall
lods
add
loope
loopne
cmp
test
in
mov
or
test
lcall
push
lret
test
pop
jge
frstor
xor
xor
in
fnstsw
xor
dec
pop
icebp
andl
xchg
and
mov
std
and
mov
inc
loope
mov
adc
cmp
aam
pop
cmpsl
jle
in
jmp
inc
mov
ljmp
aam
adc
lods
outsb
xchg
mov
adc
in
scas
inc
dec
and
xor
sbb
pushl
cli
lahf
sub
push
ds
dec
insb
inc
sub
add
mov
adc
and
shrl
pop
lahf
fmulp
mov
push
jp
stos
inc
xor
stos
and
clc
outsl
xor
sbb
popf
fidivs
mov
cmp
inc
jg
and
inc
lods
and
ja
xchg
insb
and
call
outsl
or
pop
repz
lcall
popa
outsb
dec
es
rclb
gs
mov
jl
pop
mov
lods
jne
pop
mov
push
sbb
mov
popa
lock
jo
sbb
pushl
push
jb
jp
mul
test
ds
faddl
lcall
mov
out
pop
dec
loopne
mov
mov
or
mov
push
scas
dec
adc
je
jle
repnz
sub
data16
fsubr
stc
clc
cmovbe
sbb
dec
test
sti
mov
pop
imul
pop
jmp
data16
xchg
mov
icebp
jno
nop
jb
lds
bound
incl
xor
inc
loopne
fidivrl
test
jmp
jo
cwtl
ds
push
repz
jle
mov
sarl
lods
leave
js
ljmp
jno
lds
jnp
icebp
addr16
call
ss
adc
mov
sbb
out
lock
cmpsl
out
jg
cmp
inc
mov
decl
adc
inc
scas
roll
das
lcall
cld
insb
jno
cmpsl
inc
add
dec
cmpl
movsl
ret
push
jns
cmpsl
mov
push
sub
and
clc
push
fimuls
jg
or
stos
incl
add
xchg
jmp
xor
int3
popa
loope
decl
pop
fsubrp
in
cs
mov
mov
cmp
jo
in
fnsave
fistpll
mov
aaa
in
xor
sub
sbb
jb
aam
mov
das
shrl
icebp
push
imul
adc
sub
incb
fucomp
int3
dec
lcall
jecxz
test
jg
mov
add
xor
lahf
outsb
inc
sub
dec
dec
mov
mov
out
jnp
adc
arpl
pop
mov
adc
stos
and
into
mov
shr
mov
xchg
mov
mov
fisubs
inc
xlat
das
mov
xlat
rcrb
jl
push
and
push
bound
sub
aad
xchg
call
movsb
aam
push
and
cmpsb
mov
push
outsb
and
mov
add
cli
xchg
mov
ljmp
sbb
and
cmp
cmpsl
hlt
mov
shrl
push
test
adc
lcall
xlat
push
push
rcr
outsl
insl
lcall
jae
lcall
out
pop
dec
inc
pop
mov
or
mov
test
enter
mov
sub
or
testb
dec
jecxz
mov
cltd
ljmp
add
fisttpll
add
cmpl
rcr
ljmp
stos
test
shl
sub
lods
fldl
adc
sub
xchg
inc
in
pop
cli
decl
pop
cs
mov
lret
ja
in
call
or
mov
jp
cs
cmp
add
mov
out
mov
incl
movsb
jae
fsubs
outsl
scas
sbb
jae
ret
mov
std
scas
je
add
xor
push
and
lods
stc
xchg
inc
dec
push
cmp
pushl
push
gs
xor
push
xor
xor
insl
jbe
out
and
push
lcall
xchg
jmp
inc
sub
xor
insl
mov
sahf
mov
cmp
std
ljmp
dec
sbb
sub
sbb
mov
es
decl
inc
test
shl
sbb
jl
frstor
push
idivb
rclb
pop
jp
jo
div
les
fisubrl
push
ret
neg
js
jg
fwait
pop
mov
mov
cmpb
push
xor
rol
sbb
dec
adc
rcll
cld
xchg
push
adc
adc
clc
call
ljmp
aad
mov
dec
subl
sub
add
hlt
jno
cld
ljmp
icebp
xchg
jo
mov
aad
dec
scas
lods
dec
hlt
bound
mov
lds
lret
ficompl
cltd
into
ret
stos
mov
xchg
cmp
ljmp
dec
sti
bound
cltd
pop
sub
movsl
scas
int3
jns
gs
dec
sahf
jge
push
jns
sti
popf
add
cmp
outsb
test
arpl
aaa
daa
int
mov
push
sub
loopne
jae
aas
mov
mov
fdivrl
lcall
xchg
daa
data16
jo
test
fldt
ret
pushl
inc
and
fmuls
sbb
push
pop
push
pop
jmp
or
fadd
ljmp
outsl
lret
mov
dec
js
loope
cmp
inc
mov
insl
sub
fcmovnbe
gs
jg
pop
cmp
xor
fcmovne
hlt
adc
jne
lahf
scas
iret
mov
mov
iret
es
das
cmp
mov
daa
out
pop
ficoms
ljmp
hlt
mov
test
fsts
cltd
sub
cmp
pop
inc
cmp
mov
pushl
pop
in
mov
mov
and
aaa
mov
and
aas
sti
mov
xchg
sbb
or
call
repnz
sbb
ja
rcrl
sbb
subl
jne
test
mov
test
mov
adc
and
jg
push
es
or
mov
iret
inc
sahf
pop
mov
outsb
movsb
xor
push
mov
pop
cmp
mov
out
js
mov
and
iret
jns
ljmp
pop
or
stos
xor
inc
mov
cmc
cmpsb
mov
jge
divb
or
xor
or
xor
mov
lcall
adc
jmp
fcmovbe
outsb
push
out
shll
xor
jmp
pop
push
leave
imul
cmp
xchg
into
and
in
pop
jne
outsl
push
and
ljmp
ret
xchg
insb
pop
pop
dec
imulb
gs
aaa
loopne
addr16
int
push
inc
pushl
add
outsb
imul
int
scas
fcompl
sahf
movsb
mov
or
incl
adc
mov
leave
jge
bound
aas
outsb
dec
or
push
cmp
push
out
dec
dec
jmp
add
and
jp
jecxz
cmp
decl
mov
push
add
fwait
push
cmp
lahf
adc
jns
dec
jmp
test
stc
mov
push
mov
xor
sub
mov
dec
cld
decl
and
mov
movsl
or
sub
ret
pop
loop
pushl
cwtl
pop
mov
sbb
aad
jg
jmp
fists
enter
jg
aas
hlt
mov
pop
fs
stc
mov
cmc
mov
out
xchg
out
call
xor
jb
aam
cmp
gs
pop
lods
add
jg
decl
pop
sbb
fisubl
xchg
mov
dec
test
fwait
cmp
sahf
jecxz
sub
iret
loop
ljmp
loopne
sub
mov
jb
ficompl
lret
sbb
arpl
mov
xlat
mov
mov
fdivrs
sub
andb
fidivl
call
xchg
rorb
cmpsb
sub
dec
scas
arpl
mov
ljmp
sarb
pushl
mov
jnp
aad
xchg
iret
xor
test
hlt
aad
mov
daa
test
sti
and
jmp
cltd
iret
sbb
pop
stos
adc
movsb
lret
push
adc
pusha
xor
decl
mov
dec
in
sti
sbb
fsubs
lock
divb
push
addr16
xchg
xor
sbb
test
mov
add
lret
int
xchg
cmp
cmp
fildll
push
add
or
test
push
xor
jg
dec
pushl
cmp
mov
mov
inc
adc
ja
loopne
out
jle
sbb
scas
xor
adc
inc
sub
add
fcoms
or
push
stos
in
jle
jg
adc
pushf
push
sbb
jmp
lea
dec
shlb
cmpsl
std
adc
xchg
jmp
fistpll
test
mov
pop
sti
lcall
jmp
in
xor
out
popa
popf
adcl
jbe
cmpsl
popa
enter
pop
or
pop
movsl
incl
les
bndstx
mov
jg
push
mov
test
add
sub
cmpsb
sbb
mov
mov
lret
lock
lcall
out
test
inc
pop
xchg
dec
cli
lcall
xor
inc
addr16
xchg
mov
movsl
stos
jge
pop
in
xor
fsubs
mov
gs
aad
fidivrl
adcb
dec
ljmp
and
ds
push
mov
mov
sub
insl
sbb
outsb
call
xchg
ret
sar
jmp
cmp
sbb
rcll
pop
xor
int
scas
xchg
in
jl
sub
and
cli
frndint
pop
sbbb
aaa
out
scas
inc
cmpsb
outsl
fidivl
cs
jb
dec
cld
jg
andb
pop
int
mov
aaa
call
pop
inc
loope
jbe
ret
popa
mov
pop
out
sub
ljmp
pop
fsub
int3
stos
fs
ret
imul
mov
incl
sub
or
jecxz
daa
or
fwait
out
pusha
jno
movsl
ss
decl
mov
clc
and
xor
dec
pop
and
hlt
pushl
jno
repnz
jae
mov
scas
sbb
or
dec
mov
iret
adc
mov
daa
movsl
rcrb
dec
out
jmp
dec
mov
mov
scas
lcall
bound
in
dec
and
jle
mov
pop
jb
daa
inc
jns
addr16
iret
decl
sar
and
fimull
push
imul
rol
adc
dec
pop
pop
cld
jmp
mov
mov
nop
sub
bound
xlat
xorb
fsubp
inc
inc
ret
xor
sbb
inc
into
dec
push
in
iret
mov
push
cmp
aas
xchg
jbe
sbb
call
and
xchg
pop
fisttps
mov
inc
fwait
and
lcall
incb
nop
in
hlt
fildl
cwtl
xlat
pop
push
add
icebp
pop
mov
je
int
lahf
jmp
ljmp
sbb
imul
ret
mov
sbb
jmp
sub
decl
dec
das
inc
push
lods
adc
push
movsb
ret
jae
xor
arpl
cmpb
je
dec
pop
mov
and
dec
sahf
daa
stos
pusha
pop
mov
lock
js
jecxz
incl
jg
inc
inc
adc
mov
inc
rorl
test
pop
pop
aas
pop
test
inc
out
mov
les
sbb
std
outsl
or
std
loope
and
les
outsb
adc
xor
push
das
into
loope
loop
add
dec
lahf
mov
imul
push
add
incl
outsl
add
add
add
push
lds
stos
add
std
push
jnp
jge
xchg
dec
adc
fldenv
stos
lea
nop
and
clc
cmp
outsl
sbbb
es
xchg
add
xor
inc
cmc
pop
xchg
enter
lods
cltd
mov
in
movsl
fisttps
jmp
aas
pop
es
lret
add
sub
shll
sti
sbb
jbe
outsb
xchg
jno
adc
lods
cmp
xor
pushf
dec
push
and
cmp
lds
xchg
icebp
xchg
mov
cmp
enter
adc
add
adc
leave
lcall
je
stos
daa
add
std
push
push
mov
sub
push
dec
inc
pushf
jecxz
lods
jo
ljmp
pushf
jb
dec
push
enter
pop
add
inc
insl
add
pushl
in
mov
xchg
shlb
popf
xchg
dec
fnstsw
xchg
addr16
push
push
rclb
add
mov
and
aas
add
mov
mov
arpl
rcl
pop
clc
js
jp
clc
and
add
inc
xorl
jmp
sti
repz
add
mov
lods
test
add
xor
ss
lcall
aas
or
in
push
leave
pop
popa
add
clc
jmp
sub
add
or
and
into
cmpsb
or
loopne
ljmp
je
daa
aam
adc
negl
aaa
add
mov
adc
xchg
adc
push
pop
test
sbb
or
ljmp
pop
dec
es
push
subl
pop
xor
decl
mov
adc
xchg
popa
xor
mov
or
mov
adc
fildll
adc
pop
clc
xchg
mov
test
js
sub
xchg
adc
rcll
pop
daa
push
push
mov
jne
imull
hlt
out
stos
pop
xchg
and
call
xor
icebp
mov
cmc
mov
ret
call
ret
outsb
imul
loope
and
xchg
inc
xchg
mov
mov
jns
push
add
adcl
loope
pop
xor
lcall
fists
out
mov
imul
pop
clc
inc
pop
xchg
outsb
mov
daa
and
mov
push
add
mov
push
push
sbb
fisttps
or
out
test
pop
xchg
mov
mov
dec
enter
xchg
scas
cmp
jl
into
jg
inc
push
push
sbb
insl
fucomip
mov
inc
lret
imul
mov
test
lock
pusha
mov
pop
outsb
push
mov
lea
cmpsl
aaa
addr16
cld
rcl
addr16
pop
adc
mov
out
nop
pusha
cmp
and
data16
cmp
dec
pop
cmp
cwtl
sbb
ret
aaa
cli
sbb
sbb
adc
sbb
xchg
jne
in
pop
sar
lcall
and
or
lahf
xlat
mov
pusha
push
xchg
jbe
add
jle
jmp
insb
mov
push
lds
and
adc
dec
xacquire
cwtl
or
les
in
incl
test
jnp
jne
out
xor
out
xor
adc
lea
sahf
mov
dec
movsb
mov
or
hlt
daa
xchg
cmc
shrl
mov
add
and
push
push
pop
rcrl
dec
jbe
sbb
sti
insb
push
je
jmp
shll
lea
arpl
test
fldl
add
inc
cs
fsubrl
push
mov
mov
mov
into
sar
xchg
pop
pop
xchg
sbb
arpl
mov
or
ja
xchg
xchg
add
xor
outsl
push
lock
add
repnz
sbbl
js
sub
xor
mov
pop
xor
mov
push
sahf
aaa
lret
mov
arpl
xchg
adc
or
es
scas
mov
mov
mov
cltd
insl
push
or
scas
inc
mov
mov
outsl
int3
es
je
gs
dec
sbb
mov
pop
add
push
outsl
cmp
hlt
int
mov
sbb
mov
je
push
and
xchg
scas
hlt
outsb
xchg
flds
outsl
sub
push
add
ret
jno
sbb
mov
insl
pop
imul
mov
sub
icebp
adc
add
lcall
out
mov
cmp
add
push
cmp
add
out
mov
lods
jmp
and
in
imul
mov
movl
mov
pop
data16
add
pop
rcr
add
popf
in
mov
add
jmp
push
enter
loope
mov
add
xchg
push
inc
adc
pop
and
movzbl
in
mull
fstl
jno
jo
xchg
loope
mov
mov
lock
hlt
fwait
cmpsb
in
testb
cmc
mov
fldt
add
int
mov
mov
ds
and
jl
push
add
cmc
testb
jnp
mov
push
insb
ds
insb
pop
fdivrl
push
roll
shrb
ret
inc
insl
cwtl
aas
add
je
mov
aad
cmp
mov
jg
insb
ret
mov
addb
push
fwait
sbb
dec
and
addr16
mov
mov
or
mov
fmuls
call
lret
fisttpll
sub
mov
or
test
ss
ret
call
dec
or
call
dec
stc
jno
pop
adc
popf
lods
and
inc
push
testl
fmull
mov
insl
in
sti
pop
add
adc
push
mov
xorl
jg
inc
test
xchg
adc
pop
cmpl
mov
pop
mov
not
adc
push
rorl
adc
ja
inc
mov
fldl
mov
les
ret
pop
jo
hlt
sahf
int3
std
out
or
in
movsb
mov
sbbb
push
ret
pusha
and
insb
daa
mov
orl
jne
adc
inc
stos
pop
pusha
pop
push
in
ss
pop
outsl
xlat
sti
dec
imul
leave
cmp
xor
adc
popa
icebp
mov
subl
jbe
inc
sbb
lcall
jp
jl
jecxz
roll
imul
ja
sub
fistpl
jae
and
pop
nop
xchg
mov
inc
push
imul
mov
insl
jg
fists
test
pop
mov
mov
mov
repnz
or
adc
adcb
sarl
mov
xlat
into
mov
mull
jae
inc
aad
sbb
outsb
xor
jns
mov
sti
jbe
mov
loop
cld
mov
enter
mov
outsl
pusha
int
std
divb
leave
repnz
roll
data16
push
ret
mov
add
ffreep
inc
pusha
sub
aaa
xchg
mov
mov
stos
cmc
sbb
sub
mov
mov
je
mov
fiaddl
xchg
pop
pop
or
pop
gs
inc
dec
add
pop
push
mov
or
fidivs
pop
and
cmp
adc
fdivr
mov
rcll
mov
frstor
push
loop
adc
cmpsb
scas
pop
or
dec
mov
mov
or
enter
fstpl
daa
sahf
sub
inc
hlt
pop
dec
lcall
jecxz
lock
jne
pusha
dec
scas
jns
enter
outsl
lods
pop
out
jg
xchg
push
popa
dec
dec
sti
pop
push
and
fistps
and
fcomi
xchg
dec
je
test
jecxz
adc
lcall
loop
das
cmp
enter
pop
test
pop
pop
lret
and
xchg
jle
fs
jns
adc
or
fadds
jle
pop
mov
mov
inc
outsb
mov
push
sbb
data16
inc
iret
xlat
dec
lea
xchg
nop
and
xchg
cmpsb
in
insl
arpl
xchg
add
ficompl
loopne
push
and
aad
push
xchg
dec
dec
outsb
push
jge
jnp
mov
or
xor
call
adc
fwait
add
jge
dec
in
fsts
push
scas
mov
jle
sti
fwait
movsl
pop
pop
mov
xchg
int3
ljmp
arpl
ffreep
lea
and
vmovups
sti
inc
mov
jo
test
cmpsl
fmuls
cwtl
or
add
push
mov
inc
negb
inc
out
vmread
jecxz
ss
aad
dec
sbb
xchg
mov
notb
adc
and
lret
loopne
mov
stos
add
mov
sub
iret
push
cmpsb
xchg
mov
mov
cmp
or
jns
jbe
arpl
rcr
sbb
sub
adc
rcrl
sub
xchg
pop
pop
sbb
dec
jae
stos
stos
pop
adc
int3
mov
mov
ret
sub
icebp
mov
mov
mov
cmp
mov
adc
popf
testb
inc
jge
pop
sub
pop
das
adc
cmpb
push
stc
test
popa
push
in
push
adc
push
xchg
adc
mov
loopne
ss
mov
aas
aas
push
push
sbb
add
rolb
adc
gs
decl
mov
bound
js
dec
sub
xlat
push
dec
and
daa
jle
stc
jno
jae
adc
mov
lock
adc
cwtl
mov
js
adc
lahf
fs
mov
inc
mov
add
mov
push
adc
out
sub
les
push
mov
xor
mov
push
xchg
mov
ret
xlat
lret
cmp
mov
ljmp
mov
repnz
sub
xor
push
and
or
inc
fwait
inc
add
fisubl
cwtl
jl
lahf
repz
jns
xorl
pop
out
dec
or
les
xchg
in
inc
imul
outsb
sub
push
jbe
mov
jne
xlat
clc
mov
shlb
ss
mov
outsl
cld
or
ss
jne
ljmp
shll
mov
idiv
in
push
into
repnz
push
jo
adc
nop
movb
add
inc
mov
movsb
lret
mov
popa
jmp
insb
cmp
mov
insl
into
nop
iret
inc
xor
int
push
push
mov
sub
push
xchg
or
cmpsb
jmp
mov
sbb
jmp
sub
mov
add
arpl
cmp
push
cmpsb
mov
add
arpl
jle
in
jge
in
xor
sbb
and
pop
aaa
jge
mov
xchg
pop
mov
mov
fistl
repz
in
fnstcw
xchg
ret
fmuls
mov
mov
xchg
shlb
push
jle
sahf
push
cltd
pop
outsl
das
or
ffreep
incl
xor
pop
jl
das
inc
icebp
adc
xlat
push
cmpsb
test
cmp
aam
xor
sub
mov
mov
out
jmp
push
mov
add
nop
xor
nop
cmp
data16
call
inc
mov
jle
out
push
and
in
xchg
fbld
jp
outsb
imul
in
mov
mov
pop
andb
inc
insl
decl
fsub
inc
js
sbb
mov
xchg
ljmp
aaa
mov
adc
rcl
mov
or
rcll
stos
adc
adc
mov
adc
cs
lea
sbb
outsl
mov
lods
sub
imul
adc
ljmp
sbb
notl
les
subl
push
xor
sbb
jbe
stos
int3
in
pop
xlat
mov
pxor
dec
lods
or
loop
push
xor
inc
jecxz
pop
push
cmp
fisubl
test
shl
or
sub
and
jg
rclb
rclb
andb
repnz
pop
jb
fimull
pop
stos
jbe
and
cwtl
cmpb
lock
stc
out
cmp
mov
push
cmc
or
cmpsb
push
or
jno
dec
dec
ds
repz
je
and
daa
sub
movsl
sahf
cmpsl
cltd
jo
sbb
mov
imul
popa
dec
roll
test
lcall
scas
sub
pop
call
arpl
enter
test
sbb
add
pop
push
jb
cmpsl
inc
loope
mov
scas
loop
loopne
add
cmp
aad
sahf
test
or
mov
inc
ret
sbb
mov
fidivrl
scas
out
das
jge
pop
clc
cwtl
fs
std
inc
pop
push
dec
mov
jg
mov
iret
and
mov
xor
push
push
push
add
dec
jl
and
sti
int
test
jnp
mov
iret
popf
pusha
outsl
in
test
jo
push
inc
les
mov
sub
or
push
xchg
mov
mov
mov
fidivrl
cli
push
shll
shl
mov
pop
xchg
rcll
xor
add
mov
mov
pop
cltd
and
mov
or
dec
push
jno
imul
or
push
jb
inc
mov
pop
movsl
insb
ret
and
mov
xchg
sub
stos
roll
xchg
xor
adc
clc
mov
pop
dec
inc
adc
mov
movsl
scas
pop
xor
jne
push
mov
cmc
cmp
ret
jp
outsl
sti
loopne
or
in
outsb
call
ds
mov
test
mov
aaa
xchg
xor
mov
xlat
fisttpl
arpl
scas
jecxz
clc
xchg
cmpsl
dec
rcr
pop
lret
inc
dec
fnstsw
push
in
sbbl
cmc
cmpsb
test
push
mov
push
ja
pop
dec
jae
clc
jecxz
jecxz
mov
aad
fisubrs
cmp
sti
pop
add
adc
insb
xlat
xchg
imulb
movsl
das
xchg
sbb
lea
icebp
sub
clc
pop
cmpsl
pushf
xor
dec
fcoms
test
insl
aas
pop
pop
sub
lock
or
push
adc
sbb
gs
push
mov
dec
cmp
outsl
out
add
dec
push
dec
sbb
inc
jl
rolb
or
dec
adc
mov
push
sub
popa
mov
movsl
stc
popf
mov
xchg
mov
fistpll
fistps
sub
pop
mov
sti
mov
push
sti
pushl
loop
movsl
iret
jge
sarl
inc
pop
or
sahf
jge
mov
push
nop
outsl
ss
push
pop
int3
jecxz
add
outsl
cmovno
xchg
pop
mov
add
jp
inc
mov
mov
or
lahf
sbb
push
aaa
sub
push
clc
ds
test
stos
add
xor
push
int3
and
decl
and
out
adc
push
nop
pop
mov
insl
pop
mov
dec
daa
adc
cmp
pop
push
pop
or
jge
lret
cmp
out
clc
mov
lret
lret
mov
pusha
lahf
adc
mov
mov
jne
aaa
add
and
into
inc
mov
lret
imul
pop
mov
mov
lea
pop
mov
bsf
stc
movsb
jge
pop
bound
mov
scas
mov
dec
dec
out
cmp
adc
pop
out
pop
iret
push
and
fcomps
mov
aam
inc
xchg
mov
mov
add
dec
in
lea
rcrl
adc
mov
frstor
sbb
movsl
nop
sbb
rolb
or
push
js
xchg
das
movsl
inc
mov
insl
mov
movsl
jno
mov
or
inc
xchg
push
or
cmp
aad
mov
cli
mov
mov
test
cmp
add
sar
add
fisttpl
pop
and
inc
adc
test
sub
pop
adc
mov
push
xlat
push
pop
push
jnp
aam
jo
and
cli
lcall
repnz
xor
jmp
mov
in
add
sbb
call
gs
fwait
adc
popa
lret
mov
adc
pop
js
ficompl
xchg
mov
add
test
shl
jo
push
push
ds
mov
fbld
cmpsl
pop
addl
jl
sbb
pop
das
push
shl
push
mov
dec
sarb
cltd
cwtl
icebp
lcall
cmpsl
scas
decb
mov
pusha
mov
xchg
insl
push
pop
dec
xchg
and
sti
dec
push
je
jmp
in
cs
test
outsb
pop
jne
jecxz
xchg
lahf
inc
xchg
mulb
adc
stos
nop
addl
fs
mov
mov
jo
mov
add
sbb
inc
xor
push
inc
outsl
scas
add
inc
pop
adc
aam
or
fbld
xchg
push
popa
adc
inc
sub
push
mov
push
xor
scas
rol
pop
lods
cmpsb
and
adc
scas
imul
adc
mov
lahf
sarb
in
bound
dec
push
jle
and
pop
loop
lea
imul
imul
mov
shr
idivl
xchg
mov
pop
into
test
in
jmp
das
mov
sti
pop
pop
cltd
jo
xchg
lods
test
inc
sub
imul
cli
loopne
adcl
cltd
inc
mov
rcl
mov
ljmp
xchg
add
sbb
mov
push
push
repnz
push
fistps
pop
jmp
pop
jnp
cld
scas
roll
add
or
in
ss
mov
faddl
xchg
sbb
inc
or
and
ds
and
into
mov
push
add
jb
mov
push
xchg
cwtl
stos
dec
call
sub
xchg
test
jo
sbb
jbe
leave
aad
rcrl
push
call
push
jbe
mov
add
adc
pop
sbb
adc
rolb
mov
pop
out
inc
clc
inc
js
gs
inc
pushf
pusha
adc
scas
leave
pushl
add
jge
out
xchg
inc
lea
xlat
out
cmpl
icebp
xchg
add
push
dec
lea
pop
loop
or
push
shll
cmpsl
jg
outsl
mov
mov
loop
gs
sub
fcomp
ret
or
inc
call
pop
out
mov
cs
in
pop
inc
addb
push
mov
cmpsb
lcall
clc
insb
fdivrl
dec
imul
and
pop
call
pop
add
ret
sbb
fstpl
fwait
cmpl
xor
push
push
push
dec
fildll
hlt
ljmp
cld
sub
dec
scas
pop
clc
mulb
sbb
js
add
movsb
sub
or
push
addl
sbb
lods
mov
sub
xchg
popa
std
pop
mov
dec
sbb
inc
adc
jle
mov
aas
jno
ret
sub
xor
sti
cli
mov
movsb
adc
xchg
and
fildll
jl
xchg
sub
jbe
sub
or
cltd
fcomps
or
popa
faddp
jne
nopl
push
cltd
mov
jp
int
sub
cmpsb
outsl
pop
mov
pushf
test
push
pop
jg
and
push
sub
mov
mov
mov
and
ret
aam
push
std
aad
push
add
xchg
pop
sub
aaa
fsts
xor
cmpl
mov
into
scas
cwtl
jbe
xchg
je
xor
pop
mov
dec
push
lds
sub
call
xor
or
shrl
mov
movb
aad
mov
mov
cwtl
or
nop
push
int
loopne
pop
scas
lods
push
addr16
es
jmp
movsb
jle
cli
mov
in
test
fstps
cmp
add
test
mov
addr16
push
jno
dec
xchg
mov
jl
xchg
cli
pop
fs
sub
xor
popf
add
imul
test
and
dec
and
xor
cwtl
das
popa
ret
in
and
and
in
inc
push
movsl
jnp
inc
inc
xor
and
movsl
add
lret
or
jle
arpl
jnp
mov
and
push
or
sbb
add
std
out
flds
std
push
insb
pop
adc
sbb
cld
sub
sub
pop
ss
adc
or
ss
mov
adc
or
test
subb
push
icebp
lret
inc
andb
jecxz
testb
pushl
out
je
arpl
jns
loope
wbinvd
cltd
bound
aaa
outsb
call
aad
pop
push
aas
jg
adc
dec
sarl
mov
cmp
mov
subl
sbb
cmp
sar
outsl
pop
cli
popa
xor
mov
jge
pop
mov
cltd
xor
mov
cmc
or
les
add
inc
jle
ret
and
lret
xchg
mov
adc
xchg
shrb
mulb
out
xchg
and
dec
sub
add
ss
jle
loop
lods
inc
repnz
jmp
jmp
jecxz
std
and
call
dec
sarb
pusha
out
jl
mov
and
cmc
outsl
je
cli
jo
and
sub
bound
xchg
fwait
aad
mov
cltd
call
pop
call
lcall
mov
adc
inc
xor
sbb
or
insb
inc
ds
les
lds
push
or
pop
idivb
mov
cmp
cli
je
jg
jno
in
nop
scas
mov
cmp
and
xchg
add
mov
jne
in
jnp
faddp
sbb
ret
push
rorb
imul
and
push
xor
xor
pop
je
scas
push
je
push
ds
flds
movsl
lcall
outsb
cld
popa
push
in
or
shlb
in
rorl
mov
dec
outsb
push
push
xor
adc
pop
mov
mov
lea
imul
mov
outsb
pop
decb
jbe
movsb
popf
mov
push
iret
and
call
seto
popf
popa
mov
add
jno
jmp
iret
cld
mov
inc
xchg
push
push
jmp
cmp
dec
mov
jp
pop
js
cmc
mov
cmc
pop
adc
scas
pop
mov
mov
lock
cmp
adc
outsb
push
sub
sbb
mov
adc
inc
iret
leave
cltd
mov
xchg
sub
call
adc
xchg
pop
andl
inc
fdivl
les
in
mov
dec
das
xchg
jb
fsubr
fdivr
push
scas
bound
fisubrs
adc
jp
add
and
push
mov
lahf
out
push
or
mov
xchg
je
jmp
shlb
dec
popa
nop
mov
jmp
sub
adc
pop
push
cld
lea
mov
jns
insb
popa
das
icebp
dec
aaa
dec
inc
xlat
sbb
mov
adc
xchg
fidivrs
loope
stos
cltd
mov
je
push
push
int
stos
adc
test
pop
lahf
adc
push
jecxz
sub
pop
outsl
aam
into
adc
or
sbb
sbb
cltd
and
movsb
sub
ja
aam
or
inc
jg
mov
mov
pop
inc
movsl
inc
pop
adc
xor
shl
xor
gs
jmp
rolb
add
cmp
cs
push
sbb
pop
or
adcb
call
adc
scas
add
mov
movsb
lods
mov
mov
stos
jb
or
and
mov
repz
js
in
in
or
clc
incl
repz
push
sub
push
xchg
xchg
pop
mov
in
push
cmp
jae
clc
sbb
test
out
push
fdivl
xor
aad
jmp
mov
sbb
cmp
push
mov
push
xchg
cmp
xchg
push
test
dec
cli
loop
test
out
mov
ror
sbb
sub
pushf
sti
sbb
pop
call
addr16
repz
or
test
test
mov
and
push
sbb
mov
lods
fistps
icebp
mov
cltd
and
jge
les
cwtl
fildll
mov
pop
inc
jecxz
outsb
sub
jmp
pushf
push
sub
push
pop
push
repnz
mov
insb
ds
test
add
push
lret
jle
lds
push
shll
test
sub
xor
inc
ljmp
stos
or
stos
bound
int
sbb
jg
and
push
mov
inc
push
aaa
mov
sti
mov
push
ds
xor
ficoms
stos
test
scas
fwait
jg
push
cmp
mov
lds
push
push
out
das
rol
add
or
aam
or
mov
lret
je
movsl
lea
adc
stos
push
fbld
xor
icebp
and
jle
in
mov
in
mov
repz
xor
push
push
popa
pushf
ss
mov
scas
cmp
les
cmp
inc
xchg
xchg
sahf
cli
dec
aad
call
push
dec
dec
inc
cmp
jp
sbb
mov
jecxz
loopne
inc
lret
loope
fsubrs
incl
cmpl
jno
jo
or
adc
aam
aas
jmp
mov
xchg
aad
ljmp
sub
cld
pop
scas
outsb
cmp
push
and
mov
jg
daa
mov
movsl
ror
repz
jl
adc
xchg
jp
in
sbb
xor
sbb
mov
testb
xchg
jnp
jmp
stos
fadd
and
inc
cld
fucomi
adcb
add
sub
int3
dec
les
mov
int3
data16
inc
repnz
fwait
pop
lcall
jae
adc
or
loop
dec
adc
int3
mov
push
mov
or
xor
mov
mov
into
adc
and
mov
cmp
imul
shll
bound
add
in
clc
mov
loop
dec
add
xchg
pop
cltd
dec
out
mov
sub
incl
mov
jl
pop
shlb
xor
in
call
lea
jp
inc
repnz
test
sub
loopne
mov
jmp
xor
lret
or
test
sbb
sbb
sub
pop
addl
push
push
lret
in
adc
outsb
fiadds
and
mov
jbe
adc
xchg
stos
inc
mov
data16
jbe
nop
mov
aam
inc
pop
test
repnz
dec
cmpsb
cmp
int
add
cmpsb
jae
and
mov
push
rclb
mov
int
aam
lods
aad
pop
in
das
mov
mov
inc
push
repz
cs
adc
mov
fisttps
and
vsubpd
sahf
nop
mov
fcmovnu
es
or
cld
cmp
in
mov
sbb
loope
mov
xor
sub
subl
mov
pop
les
inc
outsb
js
rcrb
pop
loopne
mov
stos
fcomi
push
jo
shr
sub
jge
push
pop
mov
das
orl
pop
xor
shll
pop
cmpsb
sti
ss
adc
icebp
lea
pushf
pop
push
ret
lea
mov
ret
mov
xchg
mov
rcrb
add
push
xor
xor
jecxz
push
aam
testb
test
mov
push
outsb
incb
cs
icebp
daa
push
clc
add
pop
outsb
push
and
inc
cmp
pop
enter
aam
int
aam
out
push
dec
icebp
ds
add
scas
and
jae
xor
nop
out
scas
rorl
mov
mov
shrb
in
in
dec
jecxz
xor
pop
xchg
or
rolb
push
movsl
or
or
inc
push
call
inc
call
add
inc
cmp
shll
or
sarl
or
movsl
cmp
outsb
jo
pop
mov
iret
lods
push
pop
ljmp
jnp
fstpt
test
xor
test
in
sbb
jmp
and
inc
push
jno
mov
outsl
push
inc
dec
shlb
movsl
fsubrl
test
mov
add
pop
cmp
mov
loop
ss
and
add
pop
push
mov
adc
in
jecxz
fisttpl
jne
push
into
add
jnp
sbb
push
sub
pop
cmpsl
mov
or
push
cmpsb
stos
loope
inc
add
cmp
rcll
imul
ficompl
push
sub
dec
andb
xor
jno
je
shr
outsl
jb
icebp
popa
push
and
mov
rolb
nop
decl
lods
sbb
or
cmp
cld
mov
pop
mov
cmp
adcl
add
pop
inc
fdiv
sbb
cmpsb
shl
add
push
push
clc
mov
mov
dec
ja
sbb
mov
sbb
xchg
popa
imul
mov
mov
adc
add
lea
cmpsl
stc
push
and
xor
in
inc
cld
ret
xor
mov
cwtl
repnz
outsl
lea
mov
mov
push
push
jb
cmp
lea
push
std
icebp
sub
pop
in
inc
aam
inc
notl
fnsave
jecxz
xchg
hlt
loope
fstp
repz
rcll
fimuls
sbb
inc
lock
fidivl
push
movsb
out
cmp
push
xorl
aaa
push
sub
sbb
adc
je
mov
mov
mov
push
inc
fistl
and
sub
inc
bound
mov
call
adc
mov
push
xchg
and
fwait
push
stos
xchg
pop
ss
pop
add
sbb
jl
scas
andl
aam
cli
mov
insb
les
lds
outsb
inc
aaa
or
mov
mov
js
sub
movsb
iret
jne
sbb
fistl
test
es
dec
les
outsl
aam
sbb
cmpsl
xchg
cwtl
xchg
mov
cmc
repnz
ret
sub
js
pop
xor
aad
ja
stos
push
rcrb
mov
push
roll
sub
inc
mov
mov
inc
iret
adc
and
mov
icebp
test
cmc
fmull
inc
test
fcom
cmpsb
cld
xor
movsl
enter
or
adc
int3
cmp
mov
add
mov
into
pop
aaa
fidivs
dec
mov
jns
decl
outsl
push
cmp
sbb
lock
cmp
pop
sub
mov
pop
clc
test
icebp
mov
sbb
inc
scas
push
sti
movsl
inc
cmpsb
test
faddp
call
repnz
jne
push
xorl
lock
cmp
dec
or
aaa
adc
mov
ret
sti
inc
jp
icebp
add
adc
call
incb
mov
add
iret
add
or
pushf
push
cmpsb
pop
loop
inc
sub
test
jmp
shll
lock
les
not
inc
fdivs
sbb
mov
cwtl
popa
pop
mov
mov
sub
stos
outsl
mov
std
sbb
bound
mov
insl
mov
add
arpl
stos
pop
leave
xchg
sub
xchg
and
dec
cmp
out
xchg
pushf
repnz
aad
add
dec
push
mov
jb
stos
daa
movsl
mov
mov
lds
cmpsb
lea
dec
das
mov
dec
mov
insl
outsl
sbb
addr16
jno
out
or
inc
out
scas
inc
fildll
and
lds
inc
pop
lods
fucom
cmp
push
jo
cmp
add
xor
xlat
cld
pushf
jb
pop
or
xchg
outsb
pop
pop
mov
or
pop
and
xchg
imulb
push
pop
jge
shl
mov
ret
lods
jbe
and
adc
outsl
mov
xchg
pop
shrb
loop
adc
xchg
cwtl
xchg
cmp
fsubs
sbb
ljmp
and
sbbl
dec
xor
xchg
mov
addr16
xor
adc
std
push
jo
repnz
dec
lds
clc
mov
xor
dec
mov
js
xor
daa
add
sub
sbb
jne
mov
or
xchg
mov
call
jne
hlt
scas
fbld
xchg
fistpl
popf
sub
jmp
mov
aaa
mov
lock
repz
push
xor
andl
or
xchg
xor
int3
rorl
cli
jmp
push
repnz
jne
roll
adc
icebp
dec
lock
push
dec
movsl
jno
sti
add
inc
mov
jbe
pop
test
cmp
xor
jg
sbb
mov
test
das
mov
pusha
sbb
lock
add
jge
cmp
dec
xchg
mov
mov
les
addr16
sub
idiv
dec
into
mov
mov
mov
out
fisttpll
or
dec
cmp
ficoms
dec
push
mov
bound
pop
loop
stc
add
push
shlb
mov
rolb
lret
lea
add
push
adc
pop
mov
adc
pop
sub
lods
mov
jb
mov
jge
xchg
repz
aaa
sahf
and
outsl
cmp
incb
mov
ss
mov
arpl
in
int3
sub
xchg
push
pop
dec
cwtl
data16
sti
test
ljmp
sbb
jb
add
or
add
push
pop
mov
mov
ds
ja
popl
out
cs
sarl
xchg
pop
rclb
xlat
imul
pop
lds
xchg
xchg
cmp
xor
in
adc
inc
xchg
lahf
xor
jg
loopne
pop
outsl
mov
inc
jmp
sbb
mov
icebp
pop
sub
test
jecxz
dec
shrb
imul
sar
sbb
xor
sub
add
cltd
test
clc
aas
add
ljmp
mov
je
jge
adc
sbb
jge
lock
test
fcompl
mov
push
mov
xchg
loopne
imul
add
inc
or
pop
sub
add
mov
jp
frstor
cmp
inc
nop
pop
push
test
mov
imul
inc
loopne
movsl
das
jge
mov
adc
dec
out
test
decl
outsb
push
dec
popf
stos
inc
sub
lcall
cli
jmp
add
popf
pop
and
and
jmp
dec
fcoms
inc
mov
sbb
pop
pop
jb
mov
out
mov
jle
cmpsb
mov
lcall
jge
ffree
gs
lock
loopne
nop
jbe
sub
pop
sub
clc
sbb
inc
les
call
outsl
add
sbb
xchg
xorl
xor
test
mov
push
lock
lds
ljmp
aam
push
sbb
push
je
rorb
or
scas
adc
dec
inc
aas
fisttpll
data16
pop
xchg
in
pop
ja
mov
mov
xor
lahf
lcall
je
scas
push
es
insb
mov
leave
dec
inc
in
sub
adc
xchg
jle
push
mov
fmuls
mov
repnz
orl
notb
mov
add
pop
mov
push
pushf
imul
je
mov
pshufw
xchg
fldt
test
call
outsl
pop
cld
fidivs
fstl
pusha
sbb
scas
sbb
sub
jbe
push
pop
pop
jl
pop
fistpl
lcall
imul
push
mov
adc
pop
mov
xor
cwtl
scas
and
xor
fsubp
xor
xchg
sub
pop
push
push
xor
fwait
cli
xchg
ss
dec
sbb
enter
xor
dec
mov
sbb
push
outsb
push
xchg
mov
dec
xor
push
mov
adc
sbb
push
inc
or
fcmovu
pop
lods
dec
add
xor
push
jmp
xchg
shr
mov
loopne
sub
mov
and
inc
fsubrl
cld
std
jb
mov
and
xorb
sbb
pop
mov
pushl
adcb
xor
push
dec
xor
icebp
pop
mov
fists
stos
lea
xor
movsl
je
cltd
dec
pop
push
jbe
notl
fisttpl
lds
ds
sbb
sub
inc
aas
mov
xchg
xchg
dec
fistps
test
add
and
xor
xchg
fisttps
aaa
enter
sbb
xchg
sub
jmp
mov
jb
scas
fisubrl
mov
sar
aam
cmp
mov
or
pop
lret
jo
jp
hlt
idivb
test
fmuls
aam
in
leave
btc
inc
rcll
add
pop
decl
aas
cmp
sbb
cli
aaa
mov
xchg
and
imull
movsl
push
movsl
pushf
mov
push
loop
into
into
or
fs
push
popa
pop
mov
or
jmp
cld
lcall
mov
jns
sahf
dec
loop
mov
test
dec
ja
xchg
fistpll
cmp
ja
xchg
and
cmpsb
add
sahf
cli
adc
in
jecxz
outsl
je
decl
pusha
pushf
push
pop
ficompl
repz
into
loope
fistpll
repz
ret
add
mov
dec
jl
xchg
inc
shlb
and
jbe
out
pop
cmp
and
hlt
aam
jmp
dec
adcb
ret
mov
mov
stos
out
ljmp
das
jl
pop
xchg
mov
xchg
lds
aam
incl
dec
aaa
mov
jo
lcall
adc
idiv
pop
jle
push
and
enter
movsl
fcmovb
movsb
mov
mov
mov
adc
push
push
incl
outsb
push
and
sbb
inc
ljmp
in
sub
insb
xchg
mov
loopne
ret
fsubrl
push
mov
ljmp
les
mov
dec
jne
mov
insl
cmp
xor
adc
inc
out
add
cmp
mov
stos
and
inc
pop
mov
std
out
jbe
pop
jae
jb
adc
repnz
rcl
mov
test
ja
in
addr16
xlat
inc
ror
cmp
sbb
call
leave
pop
inc
or
add
stos
mov
scas
cltd
mov
add
outsl
jne
int3
pop
int
jge
push
pop
push
dec
adc
jecxz
xor
mov
xchg
mov
and
out
pop
lss
aad
sub
les
jmp
lret
xor
mov
jecxz
or
xchg
jmp
jmp
or
xlat
sbb
mov
inc
sbb
cmp
imul
cmpsb
sub
in
movsb
xchg
sarl
insb
shlb
fs
and
mov
inc
es
jns
xor
stc
adc
decl
nop
sti
mov
es
jecxz
sbb
inc
pushf
jmp
imul
inc
inc
pusha
fucom
divb
lret
lods
pop
mov
cmp
pop
js
mov
in
test
dec
shrl
cmp
aaa
sbb
xchg
ljmp
cmc
lahf
je
cs
mov
mov
push
inc
sti
lea
jecxz
mov
fisttpl
cltd
aam
xchg
cmp
adc
in
sbb
adc
aad
les
mov
sub
inc
pop
mov
and
mov
pop
lods
ror
hlt
jg
movsl
aaa
inc
pop
fsub
push
sub
lret
rcll
int3
push
shrl
stc
and
mov
clc
iret
leave
test
stc
std
sbbl
std
lret
fdivr
lea
roll
sti
and
lcall
xor
fs
fistpll
xor
add
ljmp
xor
ret
inc
mov
sbb
mov
add
sub
xor
leave
rcl
jmp
dec
inc
jmp
sbb
lock
mov
jmp
dec
jl
pop
pop
cmp
xchg
adc
mov
inc
add
fs
mov
rcll
xchg
jmp
and
jmp
mov
inc
inc
xchg
mov
adc
jle
out
sbb
insl
pusha
jmp
cmp
push
inc
insb
popf
int3
call
and
pop
js
jo
sbb
das
push
scas
xchg
and
or
clc
movb
jbe
loope
imul
popf
cwtl
adc
repnz
std
fbld
adc
jl
lcall
mov
or
cmc
sub
scas
lret
shrb
in
and
lret
hlt
aam
cltd
imul
jmp
stos
cmp
and
or
mov
sbb
inc
scas
xchg
mov
mov
sbb
jg
and
cmpsl
jae
lods
and
push
cmpsb
sahf
cmpl
iret
sub
sar
fists
xchg
add
xchg
inc
adc
sar
jle
xlat
push
cmpsb
mov
pop
leave
mov
adc
mov
adc
imul
mov
cmpsb
jg
jge
pop
add
mov
incl
push
xchg
mov
test
jnp
mov
in
mov
jne
jbe
icebp
lods
je
mov
outsb
mov
dec
cmp
outsb
mov
and
clc
notb
movsl
and
sarb
rcll
mov
sub
notb
mov
adc
les
lahf
mov
mov
mov
cmp
mov
insl
loope
sub
daa
jo
ficoms
adc
lock
loopne
nop
adc
mov
mov
loope
or
fcmovnbe
ja
pop
cld
pop
in
xchg
push
pop
jge
mov
je
add
pop
jge
mov
sbb
push
xor
inc
dec
ljmp
mov
aam
pusha
and
mov
xchg
sbb
mov
pop
mov
fwait
mov
dec
ja
and
in
or
xor
sbb
int3
in
lods
lret
mov
test
mul
mov
mov
adc
cmp
jecxz
xor
mov
pop
push
jmp
or
lds
xchg
loope
fisttpl
lea
or
mov
decl
mov
nop
inc
lret
pop
mov
das
lock
popa
add
sub
mov
decl
ljmp
cmp
lret
sbb
mov
xor
push
lock
mov
jmp
movl
xchg
and
mov
xor
scas
xchg
push
dec
add
jg
cs
mov
das
fidivrs
cmpl
les
movsb
xchg
dec
adc
out
adc
push
mov
shrl
and
or
outsb
clc
inc
sub
pop
or
pusha
mov
subb
sub
repnz
fisubs
mov
add
cmpsl
test
loopw
adc
popa
ret
repnz
call
sub
imul
roll
xchg
mov
ss
pop
loopne
rclb
or
adc
mov
lods
rorb
mov
jle
and
jge
lahf
mov
sbb
fs
int
lods
or
aaa
incl
call
inc
es
and
lock
je
les
fistpl
add
pop
and
dec
adc
cltd
push
push
psraw
call
push
lahf
cmp
scas
and
jle
xchg
mov
adc
ja
dec
out
sub
ret
call
fs
jb
fiaddl
inc
insb
decl
pop
fldt
mov
dec
bound
lock
lock
test
xchg
jae
jnp
les
mov
lods
xor
lock
push
or
cmpsb
adc
sbb
mov
mov
push
les
je
faddl
ja
xchg
mov
out
testb
mov
and
aaa
ljmp
lds
xchg
pop
sub
mov
js
xchg
mov
lcall
jecxz
stc
add
inc
push
mov
sbb
mov
sbb
stc
gs
lret
test
fnsave
push
pop
mov
xchg
xor
rcrb
testl
sbb
ds
or
pop
imul
test
testb
sar
pop
push
cwtl
adc
movsl
jbe
or
or
xor
mov
dec
cwtl
adc
inc
cmp
sub
push
popf
mov
mov
ja
push
or
hlt
or
xchg
adc
out
push
mov
test
and
push
sbb
or
hlt
xchg
pop
adc
in
orb
in
xor
fcomps
lea
movsb
jl
insb
shlb
shlb
and
aas
mov
data16
arpl
insb
fildll
sub
call
out
scas
popa
rorl
mov
pop
stc
and
sti
pop
fistpll
mov
andb
push
cmp
sbb
loopne
jge
ret
mov
mov
clc
fdivr
mov
mov
add
and
push
stos
adc
inc
xlat
movsl
call
push
mov
stos
fwait
push
inc
cmc
and
insl
movsl
int
fwait
jne
imul
ss
sbb
dec
cli
mov
dec
push
push
icebp
imulb
dec
mov
js
pop
call
aad
outsb
daa
aaa
enter
shlb
adc
xchg
cmpsb
mov
shll
jae
shll
sub
call
stos
and
leave
jge
or
or
cmp
fsubp
imul
mov
ds
jne
ja
std
adc
cmp
jg
jae
sbb
pop
das
sub
ficomps
rolb
xchg
std
aam
sub
addr16
loope
mov
decl
inc
in
sbb
cs
inc
push
stc
sbb
sahf
jns
inc
jle
or
sbb
adcl
and
loope
call
idiv
add
cmpsb
mov
ffreep
pop
xor
push
cmp
adc
jne
sbb
fcomi
xchg
loope
orb
shl
pop
test
inc
sub
hlt
push
outsl
pop
pop
mov
xchg
add
daa
popa
repz
push
mov
das
clc
imul
pop
int3
push
xchg
adc
cmc
mov
ret
sub
sbb
lcall
and
adc
sti
and
dec
insb
sub
push
or
mov
stos
cs
mov
mov
ror
jmp
test
aas
adc
pop
adc
call
adc
das
dec
xor
std
and
xchg
andl
cld
movsl
jmp
push
push
pop
pop
das
cld
pushl
mov
jno
or
pop
cmp
pop
js
or
dec
sbb
outsb
std
mov
ja
and
orb
push
imul
add
shlb
aaa
std
lea
rol
xchg
fnstenv
xor
adc
clc
dec
or
popa
fcmovne
xchg
cmp
dec
mov
mov
cli
int3
add
mov
xchg
lcall
ret
bound
add
push
and
aaa
aaa
xor
lahf
adc
pushf
lcall
add
test
pop
arpl
fld
arpl
dec
icebp
add
je
mov
clc
loopne
push
enter
lcall
cli
mov
movsb
out
adc
xor
xor
or
pop
adc
cmp
dec
mov
mov
mov
mov
lods
push
dec
loope
mov
jno
dec
add
stc
sub
cmp
xchg
inc
inc
in
cli
cmp
mov
jg
mov
xchg
jne
into
pop
xor
cmp
outsl
pop
mov
or
aaa
adc
xchg
notl
sbb
in
sti
push
scas
outsl
jnp
xchg
adc
push
ljmp
out
bound
push
ja
adc
or
add
sbb
icebp
cmp
shll
xchg
mov
or
ss
inc
cmp
adc
das
add
rcll
cmp
hlt
push
sub
inc
aas
arpl
test
and
sbb
mov
ret
xor
pop
cmpsb
out
xorps
mov
lods
subl
or
sbb
xchg
bound
xchg
fiaddl
pop
pushf
lods
mov
pop
fdivr
aaa
jo
fwait
mov
mov
mov
sub
and
out
loope
adc
inc
xor
adc
sahf
movsb
movsb
jl
mov
std
jg
test
dec
mov
insb
jo
stc
loop
stos
hlt
sub
fidivs
add
aad
lcall
std
push
popf
cmp
in
or
insl
lods
pop
fabs
movsl
std
test
imul
push
jbe
lahf
pop
dec
cltd
pop
hlt
decl
shrl
ret
inc
sub
sbb
jg
cmp
ficoml
scas
sbb
xchg
cwtl
adc
ljmp
outsl
rorl
and
fmuls
xor
cli
mov
outsl
test
bound
mov
fcmovu
push
inc
sar
jmp
dec
cmp
mov
sub
gs
push
xchg
mov
xchg
and
jb
jae
pop
in
cli
jecxz
xlat
mov
push
mov
pushl
and
jns
fnstsw
push
inc
sti
das
neg
xor
cmc
mov
adc
mov
outsl
icebp
jg
ja
outsb
inc
sub
scas
xchg
sbbb
fnstsw
or
pop
adc
sub
dec
pop
ljmp
lock
aas
sbb
insb
daa
mov
push
std
das
mov
aas
enter
ja
and
mov
pop
sbb
lods
shll
cmpb
pushl
pushf
adc
xlat
sbb
sub
sbb
dec
mov
push
add
pop
push
sub
das
call
test
incl
cs
mov
cld
xor
call
mov
lcall
ja
popf
pop
into
cli
jg
dec
xor
inc
cmp
lock
ja
adc
push
sub
inc
adc
das
insb
or
sbb
dec
daa
int3
ret
adc
add
jbe
pop
data16
call
mov
int
add
test
scas
sbbb
sub
sub
icebp
pusha
mov
mov
xor
sbb
movsl
push
popf
pop
jl
jnp
ficompl
lods
jbe
test
lods
add
icebp
sub
sbb
mov
pop
push
dec
shrb
pop
test
outsl
pop
push
add
icebp
push
test
gs
imul
mov
into
movsb
mov
mov
and
push
cld
es
test
sti
cltd
or
adc
xor
mov
pop
loopne
arpl
rorl
push
mov
imulb
push
popf
mov
mov
xchg
mov
ds
stc
int3
sti
dec
mov
cmp
std
and
das
or
notb
jne
shll
mov
lods
xor
insl
nop
arpl
push
in
jg
addr16
sbbl
pop
insb
pop
or
mov
sbb
adc
push
orl
outsb
sti
rolb
sbb
sbb
ds
or
mov
sub
mov
daa
shrl
sub
jmp
or
ds
sub
into
fwait
and
incl
xor
repz
xchg
fdiv
add
mov
out
or
ficoml
jo
lret
xor
mov
mov
jge
cmpsl
shrl
push
aad
add
xchg
hlt
dec
xor
jl
add
sub
sub
icebp
jg
dec
jb
clc
push
pop
in
ss
mov
lods
mov
js
and
sbb
xchg
cli
je
and
and
jle
jbe
mov
cli
ficomps
xor
jg
mov
pop
mov
xor
mov
push
fisubs
cmpsl
dec
jb
sbb
in
or
into
and
dec
mov
imul
xor
pminub
fwait
xchg
lds
xchg
test
mov
ljmp
cmp
pop
fisttpll
fcompl
das
cmp
cltd
or
push
or
adc
xchg
xchg
adc
in
lea
ret
lock
and
inc
mov
xor
push
dec
jp
jns
mov
mov
clc
add
inc
or
lods
stos
ror
enter
pop
inc
or
js
cmp
mov
test
imul
push
dec
ja
mov
add
mov
adc
jns
ja
add
in
outsl
mov
adc
sbb
xchg
shll
das
rorb
mov
fildl
shll
daa
bound
fisttps
cli
xor
pop
cli
cmp
dec
arpl
pop
icebp
daa
xor
xchg
enter
push
bound
cmp
dec
inc
mov
jo
cwtl
and
mov
mov
adc
test
sarb
and
push
mov
sbb
stos
sub
inc
jg
xor
mov
sbb
jae
fdivrs
ljmp
fldcw
inc
insb
nop
add
mov
sbb
inc
sub
clc
fsubrl
ret
push
sbb
nop
stos
imul
jl
pop
clc
xchg
adc
nop
adc
je
cltd
and
add
push
out
test
fistpll
jecxz
xchg
jns
inc
stos
cmp
aad
push
scas
adc
les
pop
ljmp
sahf
and
inc
jl
negb
pop
cmp
cmc
adc
inc
mov
push
xchg
xor
push
sti
inc
adc
stos
imul
xchg
xor
mov
das
mov
sahf
adc
iret
lahf
cmp
xchg
adcl
jle
sbb
push
fmuls
adc
aas
in
pop
add
sbb
arpl
cmpsb
test
imul
mov
xor
das
aad
xchg
sub
xchg
xor
movsl
and
in
push
mov
movsl
sub
pop
or
adc
cmc
and
jo
stos
or
outsl
out
mov
cmp
sbb
cs
pop
and
imul
push
xchg
out
jg
mov
jae
inc
call
sahf
sbb
mov
mov
sbb
insb
std
lcall
adc
test
daa
or
jge
inc
loope
aaa
inc
pusha
cmp
mov
xor
outsl
pop
divb
into
addl
out
push
enter
test
xchg
mov
or
fwait
mov
test
dec
fisttps
aaa
aad
insb
mov
jnp
stos
cwtl
addb
push
repnz
mov
xchg
dec
adc
push
out
lahf
test
jg
imul
sbb
movb
xlat
jno
inc
pop
clc
xor
dec
test
in
and
das
icebp
incl
jg
sub
fildl
mov
mov
mov
inc
add
and
fwait
pop
mov
insb
push
stos
movsl
leave
in
sbb
stos
out
jbe
cld
outsl
mov
insl
push
dec
stc
xchg
mov
leave
sub
mov
pushl
addr16
int
mov
cmp
mov
inc
std
imul
ljmp
adc
or
sub
jns
mov
pop
mov
push
or
icebp
rol
lds
cmp
sahf
sub
andb
in
sbb
push
add
xchg
in
cmp
cmp
add
insb
ret
xchg
in
test
ret
hlt
mov
jp
sahf
lods
jmp
add
and
cmc
call
scas
dec
movb
add
or
sbb
pushl
mov
mov
mov
testb
mov
icebp
idivb
xchg
jae
jo
push
mov
mov
push
mov
scas
push
mov
aam
sub
inc
xchg
add
xchg
js
clzero
inc
xchg
std
xchg
add
out
and
adcl
incl
lea
lods
jge
mov
push
mov
sbb
cmpsl
xchg
fprem
rcr
inc
das
icebp
cmp
out
dec
movsl
inc
dec
jns
in
movsb
daa
iret
push
inc
loope
jge
cmp
cwtl
fistl
rol
sub
out
jmp
sub
aaa
call
cli
jnp
cmp
sbb
test
or
call
es
xchg
add
shl
pcmpgtw
cltd
and
hlt
les
push
in
js
push
dec
jecxz
mov
inc
das
ret
aad
sub
mov
sbbl
arpl
or
push
in
push
ds
jne
jge
adc
cmp
xchg
mov
subb
add
or
test
adc
testb
pop
add
imul
mov
or
cmpsb
push
out
jne
or
ret
sub
mov
mov
push
pop
add
and
sahf
mov
push
gs
mov
outsb
jnp
push
adcb
outsb
cld
add
push
or
mov
lods
hlt
outsl
or
std
adc
sarb
or
pop
xchg
loopne
inc
inc
add
mov
push
iret
fldl
push
or
sbb
xchg
push
mov
lods
stc
or
mov
inc
adc
lea
mov
jnp
xchg
inc
sbb
inc
and
mov
mov
cmpsb
stc
ja
pusha
jmp
pop
mov
lcall
test
fsubl
call
pop
pop
cmpsl
mov
xlat
dec
mov
pop
cmc
sbb
pop
arpl
loope
ds
hlt
mov
scas
mov
imul
incl
xorl
dec
out
pop
sarb
cmp
test
xlat
xchg
pushl
cld
ror
push
cmp
in
call
xchg
fistps
mov
push
aad
xchg
xchg
pop
sub
xchg
sbb
ljmp
pop
outsl
xor
push
jle
inc
xchg
jl
mov
push
cmc
incl
lret
pop
adc
sbbb
inc
sbb
or
aaa
mov
sub
sti
mov
scas
sar
mov
pop
insb
mov
dec
sub
dec
mov
push
push
cli
xchg
cmp
sbb
pop
in
and
lea
outsl
xchg
sbb
test
insb
cwtl
test
fdivr
incl
sbb
mov
mov
test
pop
sbb
testb
xlat
in
mov
mov
push
test
repnz
or
xchg
aaa
es
in
xlat
adc
outsl
hlt
in
jp
cltd
xchg
pop
jl
mov
adc
pop
lds
shlb
pop
bound
jecxz
sbb
loop
outsl
stos
fidivrs
add
sarb
jl
dec
push
pop
mov
push
add
js
aad
mov
pop
mov
pop
fdivrs
cmp
ffreep
and
decb
lcall
lahf
out
lcall
jle
adc
or
shl
and
jae
cmp
pop
call
ljmp
adc
mov
movsl
xchg
lock
xchg
mov
push
inc
test
cmp
push
in
mov
sub
mov
ret
jmp
pop
pop
test
ss
jg
dec
in
jge
jmp
pop
add
xor
lea
cmp
or
fldcw
mov
mov
pushf
dec
inc
pop
les
scas
add
or
cmp
pop
rclb
xchg
cmp
cld
mov
pop
sbb
pop
pop
loopne
mul
mov
pusha
sbb
loopne
test
sbb
push
sub
bound
or
bound
pop
mov
xchg
adc
dec
pop
sbb
call
shrl
mov
aam
jo
call
lcall
cs
lods
inc
arpl
cmp
popf
cmp
ret
js
jo
fadds
add
sub
push
outsl
daa
pop
dec
imull
and
adc
push
in
add
add
cltd
pop
cmpsl
inc
call
out
add
shrb
fstpt
js
mov
cmp
inc
notb
pop
call
pusha
mov
mov
mov
addr16
fs
int3
repz
sbb
add
jmp
ss
xorl
test
aam
jns
lea
jns
adc
add
std
pop
add
lods
mov
dec
mov
mov
mov
sbb
stos
mov
scas
fisubrs
dec
sub
outsl
pop
push
cmp
scas
mov
mov
neg
cmpsb
mull
cmpb
popf
movsl
out
sbb
in
test
inc
pop
dec
add
inc
mov
xchg
or
xchg
mov
xchg
dec
das
sti
push
inc
sub
dec
mov
ja
and
or
mov
add
incl
outsl
sbb
js
ljmp
and
mov
fdiv
fidivl
gs
sub
jno
ss
mov
in
push
cld
call
pop
add
mov
sub
push
add
addr16
dec
icebp
andb
xor
and
xchg
jge
jbe
push
hlt
sbb
add
addb
cmpsb
xor
cmc
inc
sub
sbb
jge
mov
push
jo
rcrb
pop
mov
mov
loopne
inc
pop
xor
adc
incl
scas
and
cmpsb
and
adcl
lods
cli
lcall
cs
cmpsb
std
sbb
mov
jecxz
jle
bound
test
inc
jns
or
xor
js
jbe
fdivp
jl
movsb
push
test
stos
loope
popa
scas
mov
lcall
mov
mov
mov
adc
aas
inc
mov
xchg
inc
aad
sti
mov
ja
inc
sti
cli
das
add
pop
int
or
movsl
or
mov
je
test
jne
sub
mov
cmp
pop
cltd
es
jp
loopne
push
sub
or
mov
jg
in
aam
ret
adc
dec
fs
mov
bound
xchg
mov
sub
icebp
pushl
lock
sbb
int
movsb
or
ljmp
ret
inc
lea
fiaddl
push
sbb
dec
hlt
dec
mov
adc
sbb
push
shl
pop
clc
push
push
jecxz
sbb
ljmp
jae
pusha
cltd
addr16
push
repz
and
mov
push
cmp
mov
iret
jecxz
push
mov
sbb
adc
and
jle
xchg
adc
rorl
pop
cmp
sbb
mov
mov
mov
pop
xchg
fldcw
loopne
roll
mov
or
out
inc
jno
xor
lds
jae
cmp
jg
outsb
adc
pop
jmp
test
and
mov
sub
jp
lds
data16
dec
insl
andl
negl
or
inc
lods
or
stos
mov
sbb
xchg
fs
shrl
popf
mov
mov
lret
lret
inc
scas
enter
enter
mov
imul
je
roll
dec
mov
pop
pusha
test
daa
adcl
test
add
mov
lods
mov
cs
fcmovnb
cmp
jg
pop
mov
imul
xchg
jl
and
mul
pop
pop
lods
mov
adcl
shlb
add
sub
test
adc
repz
cmpsb
outsb
lods
adc
add
mov
mov
lahf
sub
mov
test
cmp
jg
add
loopne
dec
inc
push
or
inc
fildll
ja
push
lods
cmp
adc
decl
ja
mov
rorl
push
cli
out
test
mov
arpl
jmp
jo
aas
add
dec
je
ffreep
jo
filds
sbb
push
sub
orl
or
sub
cmpsb
ljmp
jo
or
rol
pusha
adc
mov
outsl
mov
lods
sbbb
outsb
add
mov
imull
xchg
add
xchg
rclb
aad
xchg
icebp
daa
ljmp
pop
sub
out
out
pusha
mov
mov
cmc
mov
cmp
cmc
push
jne
adc
add
lds
je
adc
not
call
fisubl
adcl
icebp
pop
shll
and
test
xchg
mov
fdiv
or
xchg
enter
bound
add
cmp
fdivl
arpl
imul
je
and
jnp
outsl
lods
loope
inc
sub
ret
jge
clc
jmp
xchg
add
dec
cmp
addr16
adc
adc
sbb
popf
jae
dec
sbb
push
pushf
outsl
sub
jge
jns
lsl
pop
inc
scas
in
inc
adc
out
xchg
or
popf
test
or
or
popa
jp
fwait
adc
pop
adc
sbb
mov
ja
add
sbb
dec
sub
mov
mov
add
insb
lock
outsb
sahf
lret
shlb
sub
push
aas
sbbl
adc
xlat
cmpl
cmpsl
int3
xor
or
addl
lret
adc
jge
clc
inc
or
dec
mov
cmp
scas
and
or
mov
jbe
lock
in
rolb
scas
iret
scas
mov
mov
sbb
jl
jb
sbb
mov
and
push
lea
mov
or
fists
pop
push
sub
push
pushf
loopne
jg
ds
add
jmp
loopne
das
or
xchg
push
out
ljmp
ljmp
sbb
mov
dec
mov
cwtl
ret
and
std
stos
lahf
sarl
clc
into
pop
mov
xchg
jnp
shl
push
ljmp
mov
mov
in
gs
mov
ja
adc
xchg
push
aas
add
adc
or
push
je
mov
mov
jp
push
add
aaa
mov
clc
xor
mov
fwait
mov
pop
add
dec
cmpb
pop
and
call
pop
out
icebp
xor
add
and
jo
mov
fisttps
xchg
les
daa
jo
push
insb
mov
mov
mov
jae
es
jmp
fldt
sub
push
pop
and
ja
push
bound
and
fiadds
jecxz
xchg
lret
dec
das
icebp
push
push
lahf
int
inc
xorl
or
fdivrs
dec
enter
dec
cmc
push
sub
jno
cmp
add
aam
adc
dec
sbb
out
loopne
cli
dec
icebp
mov
ret
mov
add
cmp
fldt
adc
aas
cmp
or
xor
add
hlt
dec
mov
xchg
cs
shl
and
std
shr
scas
cmp
out
int3
arpl
insl
loop
out
stc
or
cmp
xor
shufps
ja
js
sbb
xor
clc
push
sub
lock
movsb
xchg
push
jb
mov
or
mov
push
adc
fistps
shlb
lock
cmp
mov
std
jg
jo
int3
push
dec
ret
jge
nop
push
inc
jmp
dec
inc
repnz
push
stos
sbb
movsl
lcall
test
popf
dec
outsl
lret
dec
xor
cltd
sbb
add
lods
cmp
jge
loope
adc
insl
jl
sahf
movsb
movl
std
jecxz
jg
cmc
call
and
addl
and
sub
and
repz
dec
push
jb
cmovns
push
push
lcall
cli
or
lcall
mov
call
pop
adc
sbb
push
mov
xchg
or
and
test
push
jle
clc
jp
fs
enter
mov
in
lods
jg
mov
dec
pop
pop
mov
lds
loopne
inc
mov
lcall
and
xchg
and
sarb
xor
test
sub
lcall
pop
xchg
mov
rcrl
lods
ljmp
scas
movsl
psubd
inc
adc
das
inc
shll
pop
js
je
inc
and
lcall
lcall
xchg
js
sbb
push
imul
rcr
or
aaa
pop
xlat
insl
jle
mov
cld
mov
and
lods
xchg
incb
fsubr
or
jb
shl
push
sub
mov
and
push
jmp
lahf
mov
mov
sar
stos
add
dec
popa
idivb
rcrb
add
jmp
jecxz
bound
jb
sub
xchg
aad
gs
cmp
loope
jmp
cld
call
mov
insl
jo
lcall
ljmp
or
jle
and
rcrl
xor
outsl
addr16
jecxz
add
or
daa
shl
ljmp
fdivl
data16
leave
bound
outsb
and
xchg
int
mov
pop
mov
sub
mov
call
push
pop
repz
fwait
inc
add
mov
inc
push
push
add
decb
pop
aaa
xor
sub
jb
popa
pushf
rolb
aaa
dec
push
mov
sbb
test
push
cmp
and
addl
fiaddl
and
pop
and
ljmp
inc
aad
xchg
xor
aam
xchg
pop
lods
mov
xor
sbb
clc
fmull
add
leave
js
incl
pushf
add
test
leave
sub
and
or
or
mov
cmp
adc
jg
lahf
mov
outsb
xchg
push
sbb
das
ss
jg
pusha
mov
jg
and
aad
mov
bound
cmp
mov
inc
jo
lret
mov
jl
jecxz
div
stos
inc
pop
or
shl
in
enter
add
jle
call
mov
dec
jge
mov
incl
aaa
jne
sub
fisttps
loope
inc
cltd
dec
push
inc
das
outsl
and
ds
cmp
loop
call
mov
or
jns
lock
xor
mov
rol
sub
cmc
rol
and
pop
loopne
fdivp
adc
push
daa
add
add
decl
dec
rcrb
dec
and
lcall
jmp
push
adc
add
mov
nop
mov
mov
ss
and
mov
fisubl
sbb
ja
call
clc
ret
sbb
dec
jbe
push
je
fnstsw
testb
jb
sbb
mov
call
jbe
and
shl
jo
cmc
jnp
pop
outsl
insl
push
scas
loopne
adc
das
sbb
call
inc
popa
imul
jne
aas
and
pop
jg
inc
dec
and
out
into
bound
dec
sbb
in
dec
lret
iret
ja
dec
inc
fbld
mov
cltd
inc
or
lods
in
sbb
cld
popf
lahf
xchg
add
enter
pop
shlb
jg
sub
out
sbb
adc
pop
dec
cmp
sahf
aam
call
cmp
push
xchg
add
dec
push
inc
pop
loop
add
daa
pop
push
fwait
jl
call
pop
js
ret
dec
cli
arpl
mov
add
push
aam
inc
cltd
fs
jle
cmpsl
lea
xor
js
cmc
jmp
add
scas
cmc
pusha
dec
inc
push
or
negl
adc
daa
mov
sarb
pop
cmpsb
mov
adc
sub
and
imul
out
xchg
test
cmp
adc
in
cli
cmp
lcall
jbe
jne
sbbb
fwait
mov
je
daa
and
imul
rolb
xlat
call
imul
clc
jge
cmp
mov
ret
jge
jno
push
aad
aas
test
cmc
mov
mov
sbb
lods
xor
cwtl
cmp
adc
sbb
mov
pop
and
mov
imul
dec
push
dec
in
sub
mov
hlt
add
cli
inc
cmp
outsb
shr
dec
mov
push
jg
aas
pop
arpl
xor
dec
daa
and
inc
dec
fucomp
stc
cmpsl
int
xchg
xchg
mov
arpl
adc
div
inc
faddp
adc
jp
add
imul
lret
mov
int
dec
and
xchg
aas
or
mov
xchg
popf
jp
lods
xchg
notb
mov
hlt
adc
mov
test
pop
gs
pop
pop
bound
cwtl
pop
jge
stos
adcl
push
scas
xor
inc
and
outsl
sbb
lcall
mov
adc
dec
dec
pushf
orl
mov
jb
mov
insl
pop
sub
mov
inc
std
scas
rorl
add
push
mov
mov
or
mov
xor
outsl
push
push
adc
aas
loopne
jge
jbe
xchg
subl
and
insl
outsl
cld
pop
push
push
jmp
movsl
xor
mov
jg
test
pop
nop
jmp
and
orb
pop
pop
and
add
jge
std
inc
in
dec
faddl
pop
fs
nop
loop
sub
adc
pop
cmc
pop
push
pop
mov
push
pusha
pop
mov
mov
xchg
pop
fstpt
xchg
add
mov
out
mov
lfs
mov
or
aad
les
pushf
dec
inc
pushl
push
fcomip
mov
xchg
jl
call
mov
or
je
incl
mov
lds
xchg
push
push
mov
in
andl
sbb
andb
sub
dec
in
sub
mov
xor
icebp
pop
adc
cmpsb
lahf
mov
sub
inc
jnp
stc
fwait
in
cs
jg
jne
pop
lock
push
dec
adc
jmp
clc
fndisi(8087
mov
sbbl
mov
inc
shl
fcompl
icebp
es
sub
or
or
fwait
lods
std
decl
shlb
jmp
and
jae
and
out
pushl
push
rolb
sti
mov
push
lock
dec
adc
cmp
je
mov
push
cmc
int3
test
push
loop
call
pop
pop
pop
sub
pushl
pop
inc
adc
movsl
pop
enter
dec
or
adc
mov
add
jmp
push
xor
hlt
insl
jecxz
jb
jl
cmp
sbbl
sbb
fsubrl
mov
in
inc
xchg
test
hlt
sbb
subl
mov
pop
xor
shr
fdivs
insb
adc
movsl
pop
or
loopne
xchg
fbld
fimuls
jle
dec
or
push
std
imulb
pop
xor
shlb
aaa
test
std
inc
or
outsl
adc
call
imulb
aaa
mov
sahf
int
hlt
scas
inc
fiadds
mov
pop
xchg
push
mov
adc
push
pop
js
pop
add
sub
mov
daa
dec
push
add
nop
xchg
pop
dec
mov
imul
pop
mov
mov
inc
cmp
adc
lea
dec
push
mov
jo
fists
inc
jl
in
or
popf
fs
jo
mov
pusha
sbb
pop
xchg
int
cmpsb
jmp
inc
outsl
roll
add
insl
fiaddl
push
sbb
fcoml
mov
mov
mov
mov
ljmp
sbb
inc
adc
xorl
imul
stos
or
and
ljmp
push
sub
inc
add
inc
push
das
out
sbb
cmp
dec
insl
mov
movl
fistpll
lds
sub
sti
jge
sub
cmp
add
or
stos
sub
loopne
fstl
pop
clc
sub
ss
sbb
add
out
pop
lret
shl
mov
add
push
sbb
push
or
fldl
nop
dec
mov
sarb
mov
jecxz
cmp
fwait
mov
sti
mov
and
loop
add
mov
adc
push
repz
sbb
stos
cmp
cs
stos
insl
test
adc
inc
mov
or
lds
mov
xor
jg
adc
mov
out
jns
fmuls
or
sbb
test
mov
xor
jle
or
xchg
mov
and
xchg
sbb
hlt
xchg
rclb
je
mov
cwtl
daa
add
pushl
and
and
jb
dec
outsb
ret
out
inc
fpatan
mov
outsl
fisttpl
cmp
adc
pushf
xchg
mov
mov
fcomps
xchg
push
iret
jcxz
sbb
frstor
inc
and
add
fadds
xchg
jns
outsb
jo
mov
pop
decl
add
dec
push
mov
sqrtps
sar
xchg
in
adc
aaa
add
sub
sub
pop
push
cld
mov
cs
push
lcall
pop
mov
subl
call
enter
xchg
mov
ljmp
aas
lret
inc
incl
rcll
mov
fisttpl
add
mov
push
mov
jg
pop
aam
adc
inc
out
pop
stc
mov
or
mov
cmc
cmp
sub
mov
or
push
cld
cmp
aam
ret
lcall
xchg
fisttpl
dec
and
or
insb
leave
push
mov
mov
xor
add
add
xchg
cmp
call
in
mov
mov
ja
icebp
ret
call
adc
pop
out
pusha
fidivs
pop
fisubs
stc
in
mov
and
test
daa
insb
shrl
lock
push
aam
out
sbb
xor
and
jo
rcrb
add
mov
into
cmp
aaa
pop
add
inc
jne
lods
shlb
movsb
add
fbld
aaa
add
rcll
dec
pop
push
adc
adc
mov
stos
insl
jne
out
adc
and
mov
push
out
outsb
std
sbb
movsl
icebp
xlat
scas
cwtl
pop
rclb
imul
push
aaa
mov
push
dec
clc
cmp
stos
mov
push
add
xchg
xchg
xchg
icebp
pop
or
cwtl
out
popa
add
jge
jno
fnsave
mov
cltd
mov
sahf
and
bound
cmpsl
xchg
sbb
and
cmp
push
or
jp
xchg
ret
cmp
stos
adc
movsb
add
push
push
inc
mov
xlat
call
jl
xor
and
lret
lds
or
ja
xorl
sbb
or
inc
arpl
mov
stc
stos
sbb
mov
out
cmp
lea
and
jno
push
mov
int
inc
mov
out
ljmp
pop
int
pop
dec
adc
add
test
push
cmp
repnz
cmp
out
pop
mov
cmc
rcll
jns
ds
xor
mov
scas
stos
stos
pop
mov
mov
sarl
ret
adc
inc
std
inc
xorl
push
jbe
jb
sbb
xchg
mov
sub
or
lods
mov
sub
dec
inc
sbb
adc
xchg
out
sub
mov
dec
insl
sub
aad
popf
addr16
decl
sbbl
loope
or
fldenv
mov
xor
ret
mov
inc
dec
rcr
shl
insl
fcmovnu
nop
or
mov
insl
cmp
rcll
daa
or
std
ljmp
jmp
pop
in
push
inc
bound
sub
add
outsl
adc
adc
ds
jg
in
or
andb
xor
call
mov
cld
or
mov
nop
pop
mov
mov
dec
lock
enter
sbb
mov
cwtl
mov
sbb
sbb
adc
pop
decb
xorl
rorb
mov
or
dec
add
pop
loopne
dec
jp
ss
mov
and
pop
lret
ds
mov
add
mov
test
jp
or
movsl
pop
cld
lock
loopne
adc
incl
push
sbb
bound
popf
mov
lcall
xchg
xor
and
popl
jno
movsb
mov
or
out
das
push
loope
inc
stos
cmp
mov
or
cltd
mov
rorb
fsubrp
ficoml
cmp
or
loopne
pushl
pushf
dec
or
push
inc
scas
stos
and
mov
or
dec
insb
mov
mov
fstl
neg
xor
fs
add
sahf
add
aaa
test
jecxz
sbb
stos
jns
adc
popa
jmp
outsb
mov
xor
sbb
dec
pop
pop
ss
sub
mov
nop
cmp
les
pop
scas
pop
jo
push
jb
jp
aas
sbb
shlb
nop
mov
aam
mov
inc
imul
sbb
jle
or
dec
outsl
imul
sub
jg
arpl
xchg
mov
lahf
xor
fldenv
imul
sar
int3
dec
mov
es
sbb
sbb
pop
dec
pop
test
in
outsb
inc
sarb
lret
mov
adc
scas
mov
bound
xchg
dec
ret
sarl
and
daa
cmpsb
sti
dec
dec
cmp
loopne
sbb
pop
enter
loop,pt
pop
js
pop
cld
pusha
sahf
test
xor
inc
out
stos
xor
push
inc
sbbb
repz
adc
jp
pop
jbe,pt
mov
cmpb
repz
inc
jecxz
pop
stos
or
je
outsb
icebp
ucomiss
mov
cmpsb
push
in
add
xchg
pop
js
pop
xchg
xor
jmp
jp
mov
clc
mov
dec
out
push
int3
in
add
mov
addl
ffreep
inc
dec
minps
xor
sub
in
shl
js
and
jg
mov
mov
cmpl
pushf
cltd
push
and
incl
inc
sbb
mov
gs
pop
hlt
ja
in
pop
add
call
cmc
decl
aaa
dec
inc
shl
push
inc
cs
inc
adc
mov
xchg
lods
xor
fdivrs
cld
xor
orb
mov
aad
xchg
adcl
inc
push
mov
ret
dec
dec
cmp
mov
or
push
inc
sub
std
and
outsb
mov
or
aas
std
insl
mov
adc
lock
enter
push
jns,pn
dec
mov
std
sbb
imul
pop
mov
cmp
decl
mov
mov
push
movsb
adc
inc
and
movsb
sti
sub
dec
mov
adc
jmp
or
test
mov
test
jle
add
xchg
pop
jp
pop
dec
jecxz
jge
andb
add
stos
sub
sbb
xchg
dec
push
and
inc
addl
adc
pop
mov
rorb
clc
filds
stos
add
inc
insl
push
aas
inc
mov
or
stos
lahf
jg
dec
mov
adc
sub
add
push
loop
mov
xlat
or
rolb
out
inc
aas
adc
aad
push
mov
fcmovb
shrb
nop
inc
gs
fnsave
ja
xor
mov
and
xor
mov
mov
mov
xchg
ror
sbb
push
sbb
sti
out
mov
cvtps2pd
popa
subb
push
push
aad
sar
sub
lock
mov
push
shl
sbb
xor
cwtl
and
or
andb
inc
push
push
shrb
cmp
test
inc
hlt
mov
pop
mov
inc
mov
sbb
xchg
ljmp
pop
fadd
mov
add
and
test
push
xchg
cs
stos
jecxz
mov
fldenv
sub
mulb
lahf
loope
fs
jmp
mov
cmp
push
shll
loopne
insl
adc
xchg
xchg
cmp
mov
out
cld
add
mov
sbb
cmpsb
ja
aad
or
mov
push
sti
xor
and
jl
fists
mov
and
rcrl
xor
push
int
sbb
cmp
cmp
sub
movsl
movl
cmpsb
les
push
mov
inc
gs
inc
mov
xchg
push
popa
push
cmp
jp
mov
jbe
fs
cmpsl
push
sahf
or
das
sbb
xorb
mov
push
mov
push
fists
push
inc
push
loope
lret
fisttpll
loope
jmp
mov
jns
mov
nop
cmp
imul
ja
pop
frstor
incl
ret
push
pop
rcrb
dec
lcall
mov
lcall
push
cwtl
pop
nop
les
dec
push
loopne
push
in
lods
lods
lds
mov
and
cmp
or
sahf
adc
incl
mov
pop
add
into
xchg
js
push
mov
aam
fcmovbe
add
subb
fildll
lea
in
xor
lods
and
sub
push
rcrb
inc
xor
mov
fwait
ljmp
sub
mov
cld
jmp
movsb
sbb
lds
xchg
pop
shlb
mov
loop
mov
icebp
sbb
decb
and
jle
shlb
pop
test
dec
shl
insb
xchg
mov
jbe
out
xchg
mov
stc
sub
ficoml
test
jae
stc
xor
jg
mov
aam
lcall
push
sbb
cld
pop
xchg
cmp
mov
stos
and
adc
fcmovnu
clc
cmp
mov
sbb
incb
xchg
pop
sbb
incl
sub
int
jns
adc
jmp
push
dec
xchg
cmc
lcall
xchg
pop
xchg
add
cwtl
adc
into
and
out
and
mov
int
jae
push
xchg
sarl
adc
mov
out
dec
xchg
stc
sub
inc
adc
imul
in
shr
loopne
mov
ds
addr16
mov
pushf
in
test
push
ja
hlt
call
inc
dec
or
out
lcall
sbb
lea
in
push
push
mov
das
or
jo
incl
mov
pusha
mov
mov
mov
jg
pop
setne
in
or
pushl
aas
xor
or
je
gs
iret
nop
jecxz
fildll
pop
rcrb
fwait
adc
adcb
xchg
pop
insb
movsb
ret
ret
je
shll
clc
adc
add
cmpsb
fidivs
out
js
aaa
clc
das
mov
daa
or
mov
cmpsb
outsb
adc
movsb
std
mov
sti
sub
xchg
out
adc
rcll
cmpsl
or
outsl
or
push
neg
ficoms
push
mov
push
mov
pop
and
cmp
decl
lcall
jnp
clc
add
and
add
imul
dec
inc
data16
and
leave
movsl
xchg
nop
fucomip
pop
mov
push
ljmp
scas
jns
xchg
and
test
incl
mov
incl
out
cwtl
lret
das
xor
sub
inc
pop
decl
mov
ficompl
pop
insl
std
call
mov
mov
adc
mov
subb
push
jp
jbe
dec
pop
jl
mov
jg
call
push
and
adc
dec
adc
sbb
mov
aam
and
xor
adc
in
and
push
outsl
das
std
das
add
jmp
je
jno
push
repnz
rcl
xchg
inc
fdivr
jg
xlat
add
sbb
adcb
js
imul
push
or
lds
xor
sub
and
xchg
clc
out
shl
lcall
mov
sbb
lods
lahf
cs
popf
adc
adc
lcall
pop
test
pop
pushl
mov
test
aad
inc
sbbl
lds
sub
xlat
or
push
lock
addr16
fdivrl
adc
dec
bnd
incl
orb
cs
in
sub
mov
jge
mov
sub
lock
add
cmpsb
inc
nop
push
decl
leave
mov
lds
mov
cld
cmp
loope
cmpsb
sbb
mov
cld
inc
fimull
loopne
push
ret
mov
dec
dec
xor
push
mov
push
imul
aaa
lock
cmpl
push
cli
xchg
fisubrs
mov
sub
loopne
xor
xor
lahf
test
jo
mov
inc
push
js
jg
cmpsb
lods
inc
lock
cli
adc
or
es
lea
dec
lret
or
xchg
push
divl
xor
xor
cld
push
and
ret
pop
shll
pop
insb
sbb
outsl
push
sbb
pop
jl
stos
jmp
or
push
hlt
lcall
and
dec
cmp
mov
pop
jmp
popf
nop
mov
addr16
fs
pushf
lds
out
sbb
pop
pop
pop
cmc
push
pop
cmc
mov
xchg
jnp
repz
jb
push
xor
out
filds
sbb
rorb
sbbb
adc
mov
rolb
movsl
nop
stc
sbb
or
mov
cmpsb
sbb
pop
push
sub
call
cli
or
test
jbe
adc
push
mov
push
adc
je
and
sbb
cmp
pusha
pop
push
decl
jmp
push
push
fwait
stc
lcall
lahf
push
stos
ljmp
mov
mov
mov
cmpsl
or
adc
mov
inc
jle
jp,pt
pushf
out
jnp
shl
mov
push
push
mov
lock
icebp
imulb
sar
pushf
inc
add
mov
jp
loop
mov
ret
cld
call
sub
dec
dec
xor
imul
mov
xor
push
jo
pop
mov
xchg
ret
adc
xchg
test
pop
dec
adc
nop
jecxz
mov
call
cmpsl
lods
jno
fsubl
aad
push
adc
in
ret
test
xchg
mov
sub
addb
mov
subl
lahf
inc
icebp
das
andl
aaa
lods
mov
or
mov
push
adc
pop
fdivp
inc
in
pop
add
fcmovnbe
icebp
xor
imul
add
mov
sub
pusha
push
and
pop
or
pop
add
jo
jg
lahf
push
out
xchg
push
mov
insb
xlat
or
aam
xchg
mov
rorb
push
jae
mov
aaa
imul
xor
syscall
xor
lahf
rcl
loop
call
inc
and
dec
xchg
popl
loope
push
pop
fsub
pop
test
lds
cmpsl
mov
iret
fiadds
add
jnp
fucomi
or
push
inc
cmp
lahf
or
or
lds
cmp
dec
xchg
inc
and
test
jecxz
dec
ljmp
cmc
loope
loope
cld
inc
fdivs
inc
jns
sub
push
pop
test
filds
mov
in
icebp
hlt
ljmp
cld
adc
out
testl
adc
or
sbb
mov
fsubl
jle
incl
and
mov
pop
das
inc
and
sub
sbb
inc
icebp
dec
js
lret
push
shrb
fcmovbe
add
xlat
pop
out
incb
pop
mov
inc
outsb
nop
inc
mov
dec
sahf
inc
jae
jmp
add
mov
or
movsl
or
or
mov
hlt
sbb
jle
aas
les
jne
test
cli
jg
xchg
sub
mov
cmp
roll
fcomps
xor
insl
jg
sbb
mov
xchg
sbb
mov
pop
mov
orb
push
dec
mov
int3
es
es
test
fisubs
jecxz
loopne
lds
mov
rcr
lods
xchg
mov
push
sbb
dec
arpl
push
dec
add
rcll
js
mov
clc
sbb
push
mov
ds
add
mov
pop
mov
mov
cwtl
mov
std
fwait
test
nop
xchg
and
cvtpi2ps
sti
and
imul
xor
mov
inc
pextrw
es
std
outsl
in
mov
int
popa
mov
mov
add
fcomi
push
arpl
repz
mov
fstpt
sbb
sbb
fxtract
aad
les
lods
jb
aaa
mov
cld
div
and
aam
adc
mov
add
dec
or
sbb
test
jb
popf
popa
sbb
divb
ds
ja
or
cs
fnstsw
hlt
push
loopne
test
je
leave
mov
les
js
pop
add
mov
imul
or
sbb
test
enter
push
pop
sub
fidivs
stc
jb
pushfw
sbb
pop
pop
xor
imul
in
inc
adc
into
dec
iret
outsb
cmp
mov
lock
jb
push
maxps
call
push
mov
sub
xchg
or
or
ds
inc
scas
push
or
test
mov
and
cmc
mov
sbb
push
popf
adc
idivl
sub
les
cmp
out
jecxz
test
icebp
xchg
add
jmp
cmp
addr16
sub
jmp
or
push
push
fdivrs
mov
inc
ja
aas
mov
lret
fisubrl
inc
into
pop
scas
or
add
in
lock
dec
add
dec
repnz
int
and
pop
add
dec
xchg
std
negb
fistpll
std
xchg
adc
fdivl
xchg
mov
pop
add
outsl
out
or
pop
inc
and
decb
xchg
dec
adc
pop
jle
xchg
insb
dec
xchg
decl
mov
dec
push
cwtl
and
lock
mov
mov
jecxz
dec
dec
ja
xchg
mov
dec
nop
jns
fs
decb
mov
xlat
jnp
imul
and
mov
dec
movsb
mov
xchg
sub
xor
xchg
add
inc
aaa
sbb
icebp
aad
cmp
sub
leave
cli
es
and
imulb
fsubl
nop
xlat
test
incb
pop
outsl
ljmp
inc
in
es
popf
add
mov
aad
inc
jle
jbe
fildl
sahf
xchg
dec
sub
mov
mov
cmp
pop
bnd
mov
stos
xor
cmc
adc
mov
adc
fcos
mov
in
test
inc
dec
dec
in
mov
ret
cld
orb
daa
cmp
sub
rcr
test
jmp
mov
fidivs
cmp
pop
and
fimull
sub
xchg
push
and
loope
loope
mov
sbb
mov
fs
mov
push
xchg
addb
mov
ret
xor
sub
lret
pop
rcrl
push
dec
outsl
or
lock
cmp
lds
fadds
pop
mov
pop
bound
cmpsb
hlt
js
lret
pop
in
fistl
or
test
push
pop
test
push
in
in
mov
sti
hlt
incl
push
faddl
fxch
out
push
outsb
mov
test
fcoml
xchg
fadd
pushf
and
mov
outsl
pop
jmp
cs
stos
xchg
lret
incl
sti
decl
pop
pop
insl
icebp
nop
mov
stos
js
sbb
cs
add
inc
mov
pop
jg
out
scas
xchg
inc
xchg
push
jle
or
pop
dec
mov
sbb
adc
adc
test
mov
mov
push
or
mov
negb
push
mov
stc
push
jmp
mov
sub
sub
fstl
cli
or
sbb
inc
jno
pushl
pop
jge
pop
mov
add
icebp
outsb
lds
mov
sub
adc
test
sarb
cmp
lret
mov
mov
insl
je
cmp
aad
xchg
fld
xor
ja
hlt
ret
loop
add
inc
insb
outsb
mov
fbld
push
sti
or
inc
mov
mov
or
dec
add
cli
fldt
iret
scas
xor
ret
xchg
movsl
inc
and
sti
pop
or
pop
cmp
cmp
bound
sbbl
add
aaa
adc
mov
xor
pop
lret
jo
add
test
xor
daa
jns
adc
sbbb
dec
cmpsb
call
push
fstpl
cli
sbb
inc
sbb
mov
or
lds
xor
lods
lds
in
dec
leave
inc
mov
stos
xchg
sbb
in
test
hlt
xchg
or
pop
xor
out
cmc
lods
insl
pop
inc
cmp
addl
jecxz
inc
mov
call
repnz
arpl
xchg
enter
mov
adc
jp
sbb
xlat
addr16
jae
add
lock
shll
push
call
incb
popa
bound
add
hlt
mov
pop
xchg
xchg
call
pusha
or
ljmp
mov
xchg
jecxz
add
and
xchg
loopne
xor
mul
push
popa
js
loope
es
push
mov
add
fldl
lret
andl
sbbl
js
xchg
pusha
das
mov
inc
mov
test
mov
and
and
cmp
mov
icebp
test
lods
inc
out
fsubs
mov
shr
popf
add
test
and
dec
lahf
mov
dec
mov
xor
dec
mov
loopne
mov
pop
sub
jmp
push
jmp
es
das
inc
push
jge
lret
xchg
inc
out
pushf
or
scas
push
mov
out
pusha
fwait
add
jl
shll
xor
xchg
je
cwtl
adc
lods
stos
aad
es
ds
pop
lcall
adc
xlat
dec
cmp
fcmovne
push
cmp
ret
inc
mov
cli
jmp
xchg
mov
inc
lods
xchg
adc
jbe
dec
or
sub
push
xor
jge
loope
ss
jnp
loop
pop
mov
mov
loopne
test
rcr
stos
cmc
adc
in
xor
lds
lcall
push
mov
push
cmp
xchg
add
sbb
jecxz
ljmp
test
out
cmpsb
fildl
push
cltd
insl
push
inc
pop
clc
dec
rorl
rcrl
mov
push
cs
stos
cmp
sub
jmp
fs
cmpsb
ret
mov
les
inc
sub
loopne
dec
and
sub
das
fisttpl
sub
lea
xor
aaa
cli
jg
sub
adc
mov
jp
jg
addl
roll
ljmp
inc
sbb
sti
fistpll
dec
cmp
push
push
aad
push
cli
jg
pop
call
jo
mov
xchg
inc
adc
adc
cmp
repz
cmp
and
add
sbbl
es
pop
ljmp
pop
adc
je
popa
pop
pop
sarl
sti
jmp
adc
push
xor
fcmovnu
ljmp
scas
out
dec
adc
insl
jl
pop
sbb
or
lods
dec
jg
lcall
cwtl
or
in
mov
add
sbb
dec
je
jo
clc
mov
aam
popa
imul
dec
cwtl
xchg
push
pushf
imulb
adc
sbb
add
inc
pop
test
jns
jae
mov
loopne
add
or
and
sahf
adc
hlt
das
adc
das
push
fldl
incb
fbstp
push
and
into
sub
xor
adc
adc
int
mov
popa
outsl
mov
aaa
cmp
lea
mov
pop
jno
loop
iret
gs
xor
inc
test
jge
fildll
hlt
out
push
and
xor
cmpsl
sbb
cmp
lods
shll
and
jge
je
jmp
insl
jo
notb
filds
mov
push
or
add
xchg
clc
clc
or
incb
shl
fmuls
pop
incb
test
mov
pop
shll
ss
pushl
bound
gs
out
add
push
sbb
mov
inc
and
mov
cmpb
testb
jg
mov
cwtl
push
data16
call
push
dec
inc
js
loopne
pop
inc
cmp
xchg
mov
dec
imul
xchg
ljmp
pushf
fldenv
pop
push
jbe
cmp
fsts
outsl
movsb
les
dec
andl
fsubl
repz
sbb
in
or
int
rclb
call
pop
mov
xor
mov
or
mov
fildl
imul
sub
inc
rcrl
sub
lea
sub
pop
pop
sbb
jo
sub
dec
sub
mov
pop
les
adc
fcmovnu
inc
push
push
in
call
lret
lods
inc
add
cmp
cmc
les
int3
jp
outsl
icebp
mov
sbb
outsl
adc
add
hlt
push
xchg
jg
pop
mov
iret
icebp
pop
jae
pop
imul
cld
dec
pop
sub
scas
sbb
out
jl
mov
lock
mov
outsl
add
push
outsl
mov
add
filds
pop
push
push
scas
repz
out
sahf
ds
ds
mov
cmc
ljmp
mov
xchg
push
fidivl
mov
dec
dec
and
pushl
sub
mov
push
subl
mov
movsb
bound
mov
sarl
loop
fwait
fwait
lods
icebp
sbb
pop
adc
call
and
std
lods
pop
lods
xchg
fstpl
scas
into
les
lods
pop
inc
jmp
lods
mov
mov
add
pop
dec
bound
sub
shr
dec
lcall
ljmp
insl
xor
rorb
sbb
xchg
mov
adc
das
in
mov
into
push
stos
mov
je
mov
adc
pop
addl
add
lcall
jnp
cmpsl
add
sbb
pop
add
lods
ss
hlt
int
gs
rsqrtps
xor
push
xor
bound
mov
jbe
push
aas
loopne
sbb
gs
mov
fimuls
imul
and
sbbb
sub
outsl
push
sbb
adcb
xlat
cmp
enter
ljmp
loopne
xchg
push
jmp
sub
or
lds
mov
and
test
stc
fmuls
push
ror
jo
mov
test
jg
arpl
icebp
cmp
push
adc
testb
cmp
cmpsb
enter
mov
in
dec
or
pop
adc
push
jb
mov
mov
popa
or
enter
das
loopne
sub
rclb
lock
scas
or
insl
jl
jae
mov
cmp
gs
dec
fwait
subb
loop
sbb
movsb
push
stos
fcomp
jp
push
ljmp
inc
push
mov
sub
imul
push
adc
pusha
pop
or
insb
mov
add
inc
sub
jl
std
inc
add
cmp
dec
inc
sbb
pop
insl
insl
insb
mov
imul
imul
pop
mov
in
push
inc
xor
test
mov
fistps
jnp
jo
mov
outsl
mov
in
inc
inc
jle
cmpsl
xlat
out
loopnew
cmpsb
push
cmp
fmuls
jg
mov
mov
andl
clc
je
imul
mov
pop
scas
dec
add
jmp
push
mov
push
sbb
stos
sbb
pop
dec
mov
addr16
sbb
and
in
and
mov
int
or
or
popl
inc
sbb
imul
shrb
clc
imul
shlb
sbb
pop
out
or
fcmovnb
das
inc
cmpsl
jle
xorl
add
aam
mov
icebp
notb
pop
sub
pop
dec
cmp
inc
in
inc
movsl
stos
fcmovnb
pop
clc
mov
movsb
mov
jo
aam
inc
dec
lods
mov
movq
xor
dec
loop
scas
unpckhps
xchg
insb
lcall
stos
das
std
or
cmp
or
add
cmp
sbb
scas
sahf
mov
sahf
and
scas
mov
mov
rolb
das
testl
mov
mov
mov
les
xchg
xlat
ss
cld
jg
in
mov
aaa
repz
and
pop
jmp
push
dec
fistps
bound
mov
lahf
popf
or
into
dec
lea
pop
xchg
jecxz
arpl
rorb
mov
push
fistpl
aam
adc
mov
and
cld
enter
test
movsl
mov
mov
cmp
iret
scas
int
call
pop
pop
shr
mov
hlt
xchg
rcrb
mov
pop
imul
mul
mov
mov
add
test
push
jo
inc
cmc
sbb
mov
inc
push
clc
ret
loop
rorb
pop
aas
stc
jo
sub
pop
sbb
xchg
pop
mov
sbb
pop
mov
incb
in
imul
mov
adc
in
push
movl
mov
and
int
lock
cbtw
or
sub
or
pop
enter
sahf
popa
rcl
jecxz
push
mov
xchg
jno,pt
movsb
xchg
jecxz
ljmp
loopne
add
dec
add
or
pop
mov
mov
loope
mov
sbb
inc
sub
mov
or
cmc
sub
addr16
xchg
push
int
aam
lret
push
xchg
fdivr
mov
outsl
lods
xchg
sti
repz
aas
jno
mov
clc
dec
ds
adc
inc
jae
mov
mov
inc
aaa
adc
mov
adc
xor
sbb
fimull
sbb
push
push
cmc
out
loopne
into
cmp
jno
daa
loop
xor
mov
xor
test
scas
and
xor
movsl
and
inc
arpl
mov
mov
mov
roll
dec
mov
fcomp
fcomps
mov
inc
push
cmpsl
adc
mov
fucom
sub
dec
insl
loopne
mov
pop
pop
ds
xchg
int3
mov
push
sbb
les
les
faddp
mov
sub
jle
inc
fistl
sub
sub
xor
scas
test
mov
je
aaa
into
inc
cmp
sbb
lahf
mov
in
fnstsw
test
adcb
mov
lock
dec
pop
pusha
xor
mov
jns
and
inc
int
or
pop
in
adc
dec
mov
sub
lods
pushf
stos
mov
das
sub
add
mov
arpl
dec
jmp
movsl
mov
jb
shlb
cmp
fwait
dec
aad
or
cmp
adc
loopne
add
push
test
adc
add
dec
repnz
shrb
inc
fdivl
jle
aas
insl
fists
xor
popf
outsb
inc
push
icebp
outsl
adc
xor
insl
daa
clc
jnp
adcb
xchg
test
cmc
sub
jp
and
mov
fnstenv
adc
sbb
mov
repz
into
scas
and
ja
pop
mov
dec
push
adc
dec
imull
sti
das
xchg
pushf
ret
and
or
mov
mov
outsb
test
adc
push
xchg
test
mov
dec
xchg
mov
xor
xorb
test
and
cmc
daa
shr
and
jg
and
loopne
js
call
xchg
cmpsl
cmc
repz
loope
mov
and
popa
push
fxch
push
ljmp
sbb
push
xor
pop
aaa
clc
les
es
xchg
push
push
out
cli
jg
out
and
cwtl
loope
mov
cmpsl
je
mov
sbb
jo
shll
jl
js
ret
fadds
push
nop
mov
mov
inc
sub
pusha
cmp
push
jge
jecxz
inc
inc
inc
mov
pop
sarb
mov
pop
cld
sarb
sbb
add
mov
roll
jbe
test
aam
xor
rcrb
xor
or
fidivl
inc
xor
outsl
fisttps
jns,pt
movsl
xor
sbb
cs
addr16
das
int3
mov
jb
aad
mov
lret
sub
bound
fcmove
pop
outsl
repnz
icebp
enter
es
lds
fdivr
inc
pop
or
sub
enter
dec
iret
loopne
insl
arpl
xchg
and
sub
cmp
rolb
mov
jl
into
sbb
std
jo
push
pop
mull
in
mov
sbb
or
ret
inc
sub
sbb
mov
pop
cli
inc
or
aaa
mov
sbb
add
jbe
fistpl
icebp
test
or
adc
mov
in
mov
lods
pushf
adc
loope
and
decl
and
add
cwtl
or
ja
enter
mov
sbb
mov
mov
pop
add
icebp
mov
mov
or
mov
incl
hlt
add
push
push
fildl
test
mov
ret
in
jg
jae
mov
mov
push
rcrl
cmpsb
repnz
shrb
aaa
out
stos
mov
mov
push
xor
xchg
das
adc
fcos
push
rclb
pusha
pop
sahf
adc
cld
ret
xor
lea
testb
mov
inc
jns
call
stc
add
and
inc
pop
sbb
push
jbe
inc
je
stos
mov
in
sbb
dec
cmp
mov
cli
sub
add
mov
sbb
jmp
mov
clc
push
and
shrl
cld
movsl
mov
jmp
cwtl
adc
jmp
xchg
cli
jg
xor
sbb
iret
dec
jle
adc
mov
and
pop
pusha
test
mov
test
outsl
rorl
ror
add
or
xchg
adc
mov
mov
sar
push
push
dec
inc
xchg
aaa
into
xor
and
test
inc
sbb
mov
in
mov
rolb
ss
mov
loope
mov
dec
bound
stos
fbld
xchg
ret
gs
clc
pop
repnz
xlat
aad
cmp
int3
cmp
popa
lret
aas
jl
inc
inc
cmc
lcall
jl
push
ss
jo
les
nop
out
add
addb
inc
pop
sarb
aaa
cli
lods
gs
xchg
xlat
rorl
inc
lods
adc
xchg
loopne
bound
hlt
in
jbe
push
leave
pop
ljmp
sbb
shrl
add
mov
cwtl
jge
and
insl
test
mov
dec
cmp
sub
pop
jmp
pop
ret
popa
sti
imul
enter
inc
push
mov
jg
hlt
outsl
call
cwtl
inc
adc
pop
loopne
mov
ljmp
push
pop
push
sub
sbb
das
mov
dec
xor
and
stos
pop
pushf
cwtl
into
add
inc
sub
pop
mov
cld
inc
jmp
mov
jns
adc
cld
jnp
mov
icebp
xchg
and
repnz
fst
in
jg
inc
rol
bound
imul
mov
fwait
add
or
push
loopne
cmp
ljmp
outsb
push
icebp
outsl
sbb
mov
cmc
pop
push
insl
ss
push
pop
dec
ljmp
cmp
jl
dec
jb
mov
or
stc
aam
cmp
int
jne
pop
inc
incl
or
push
cli
push
jl
test
mov
jmp
popa
rorb
push
mov
pop
mov
push
outsl
popa
lret
jno
mov
mov
add
out
xchg
add
dec
test
lea
aaa
int3
pop
lcall
adc
mov
insb
lock
loop
cltd
rcl
pop
data16
notb
je
cmp
jne
adc
iret
cmpsl
outsb
ljmp
adc
push
test
fwait
fucomip
lcall
sahf
adc
sub
loop
movsl
shll
xchg
or
outsb
in
iret
std
cld
xor
mov
mov
std
sbb
inc
inc
mov
sub
clc
call
ds
dec
xor
pusha
lods
nop
mov
jecxz
movsl
adc
lcall
cld
mov
pause
sub
cmp
orb
dec
insl
insb
inc
call
into
icebp
scas
or
jb
fcmovnbe
jg
pop
sub
cmc
mov
sub
mov
hlt
insl
lret
cmc
xchg
sub
iret
out
push
pop
cwtl
dec
mov
mov
int3
or
aas
ret
inc
loop
push
jne
inc
arpl
inc
cmpsb
sbb
cs
add
dec
push
mov
jle
loopne
mov
jl
pop
inc
pop
mov
and
cmp
jl
lcall
cmp
jecxz
fadds
push
cmp
mov
pop
dec
out
movsl
push
or
pushf
jae
xchg
jae
ljmp
mov
ret
lds
daa
xor
int3
xchg
sbb
add
inc
test
iret
sbb
sub
xchg
mov
sbb
hlt
mull
mov
push
push
out
push
xchg
sbb
rolb
std
lods
jbe
into
lret
es
cli
inc
push
pop
aas
int3
add
aas
dec
jbe
int3
and
cmpl
inc
xchg
ret
jg
sti
popf
cld
pop
add
mov
lods
jg
dec
cmpps
push
adc
sbb
test
xor
insl
lret
mov
pop
int3
xchg
push
gs
hlt
pop
out
mov
mov
nop
shrl
adc
scas
sbb
push
xchg
call
adcl
jecxz
push
cmp
mov
shl
mov
je
fs
and
in
push
lea
movsl
cmpl
xchg
sbb
lock
push
leave
out
shrl
and
push
adcl
cmp
inc
fisttps
lcall
push
sbb
push
xor
pop
pop
pusha
sbbl
sub
xchg
sbb
xor
push
rorl
push
sbb
or
inc
xor
push
mov
sub
test
jmp
andl
push
push
lahf
push
mov
in
call
inc
dec
in
adc
or
or
decl
insl
mov
jl
jecxz
and
adc
pop
add
jp
push
jno
clc
sbb
push
pop
aam
loopne
jmp
xor
clc
mov
push
loope
jb
push
mov
scas
sbb
cmpsl
pop
rorl
les
jl
pop
test
adc
xor
cmpsl
cmp
mov
add
insb
stc
mov
mov
adc
sarb
lcall
push
int
dec
adc
mov
and
mov
popf
inc
rolb
std
add
lret
int3
mov
stos
loopne
hlt
push
mov
stc
add
mov
ja
jge
jbe
mov
xor
mov
mov
fcomip
push
stos
adc
or
dec
popa
ret
test
das
lcall
in
xchg
lods
sbb
mov
mov
or
icebp
xchg
stos
inc
movsl
push
inc
mov
sbbb
xchg
mov
push
or
enterw
mov
outsl
adc
dec
sbb
mov
scas
stos
movb
dec
cmpsl
fcmovu
adcb
jecxz
add
aas
insl
or
and
sahf
jecxz
mov
adc
pop
adc
cltd
test
loop
fidivl
push
inc
mov
bound
cmp
int3
xchg
dec
jl
insl
inc
fsub
insb
add
cmp
inc
sub
jnp
jle
hlt
ret
roll
icebp
xchg
frstor
pop
sub
rcrl
sub
aad
int3
xchg
aaa
sbb
mov
adc
orb
int
icebp
imul
daa
push
es
xchg
or
out
lahf
adc
jecxz
inc
inc
xchg
lock
xchg
subb
negb
sub
cwtl
shll
pushf
addb
lods
out
xor
dec
sub
lods
rolb
xor
mov
or
sub
fs
cmp
mov
sti
jg
ss
mov
inc
ret
adc
add
dec
es
pop
cmp
and
mov
jle
fnstsw
and
jmp
daa
fsts
lods
rclb
adc
or
rcrl
ficompl
add
jmp
ret
sarl
add
jno
lcall
and
inc
lea
and
jge
movsb
icebp
test
ret
xchg
dec
mov
aam
out
sbb
push
adc
push
mov
cs
mov
insl
fnstsw
and
out
push
hlt
fdivrs
lds
stos
in
lret
dec
push
push
in
mov
pop
xor
xchg
cltd
inc
push
jnp
jbe
mov
rcrl
jne
xlat
cmp
outsl
adc
mov
inc
inc
cmp
cmc
int
filds
sub
imul
ja
cmp
push
pop
pop
push
or
pop
jmp
shlb
and
dec
add
call
sbb
and
cwtl
lret
dec
jnp
popa
adc
mov
mov
aad
sub
dec
pop
sar
inc
aam
mov
pop
repnz
loopne
add
add
and
add
data16
lcall
rcrl
fcomip
in
push
jns
dec
mov
insl
call
ja
pop
push
pop
push
dec
cmp
cli
cmpsl
outsb
fadds
shlb
int3
xor
arpl
xor
mov
gs
mov
add
pop
mov
jecxz
lds
jp
sub
pusha
mov
pavgb
sub
jl
mov
adc
sbb
je
in
rclb
and
inc
push
mov
cmp
filds
unpcklps
add
test
xor
add
adc
aad
sbb
pushl
test
cld
mov
es
testb
pop
jns
ss
add
decl
jmp
out
adc
adc
xchg
mov
cmp
jmp
adc
push
push
imul
inc
ds
dec
pushf
xor
jbe
es
and
and
rcr
add
scas
pop
lcall
clc
es
incl
or
push
nop
xor
or
arpl
jg
shll
adc
sub
out
mov
or
jbe
clc
gs
xor
cmc
das
xchg
js
js
jne
cmc
cltd
leave
in
mov
imull
pushl
and
cmp
pusha
inc
mov
pop
adc
pushl
and
add
rclb
sbb
push
mov
mov
aad
or
pop
repz
cmp
mov
push
pop
cmpsb
outsb
xor
nop
outsl
mov
push
push
dec
mov
cmp
ret
push
xorb
pop
js
adc
cmp
dec
sub
in
cmpb
mov
loope
xchg
pop
test
call
sbb
xor
jne
mov
and
or
and
jg
in
pop
imul
adc
shll
inc
pop
push
mov
pop
inc
jne
fcoms
pop
out
sub
sahf
mov
sbb
push
test
sbbb
sub
mov
add
rcrb
cmp
add
call
cmp
sbb
mov
jp
pop
incb
dec
mov
add
jmp
cli
adc
pop
mov
repnz
fildll
lret
les
or
mov
repnz
das
ljmp
xor
and
test
mov
and
aam
arpl
icebp
sbb
mull
push
fdiv
imulb
cmp
ds
sub
stos
outsb
mov
cltd
jo
mov
add
test
cld
movsl
inc
xchg
out
shrb
add
bound
stos
stos
ret
aad
nop
xorl
pop
insl
fcoml
sbb
mov
test
lahf
jmp
adc
mov
sub
fists
xchg
mov
or
mov
lcall
cmp
sub
mov
xchg
stos
jb
push
cmp
insl
push
xor
add
shr
jge,pt
dec
sbb
fildll
insb
lcall
mov
push
insl
scas
xchg
stc
inc
scas
jle
in
out
mov
jno
mov
mov
in
push
call
mov
loop
adc
push
pop
mov
push
rclb
and
shrb
mov
dec
lds
lea
jle
sbb
cmpsl
test
mov
xchg
inc
mov
outsb
and
xchg
rcrl
cli
add
jno
jl
pop
sbb
fbld
cmc
xor
inc
mov
test
cld
pushl
adc
mov
mov
mov
pop
mov
imul
push
ror
dec
cltd
jle
scas
rcll
add
adc
jl
push
adc
or
shl
fimull
sbbl
xchg
push
jno
shlb
jle
jg
pop
sub
inc
cmp
and
jb
test
dec
aaa
dec
dec
jne
imul
push
inc
aaa
mov
nop
cmp
cli
sbb
push
push
rcrb
mov
mov
sub
int
inc
dec
jmp
adc
add
les
outsl
push
fwait
pop
outsb
mov
rolb
push
lods
popf
pushf
iret
sub
xor
loop,pt
shlb
pop
adc
push
loop
adc
and
shlb
mov
xor
clc
xchg
push
push
inc
adc
lret
xchg
pop
repnz
enter
nop
cmpl
inc
dec
cmp
lock
dec
lea
pop
push
pop
out
xchg
add
pop
adc
mov
test
movsb
xlat
hlt
ret
notb
rcll
push
sbb
push
idivl
inc
jns
jg
add
pop
js
shr
dec
out
inc
mov
add
cmp
stos
outsl
xor
lret
fildll
or
mov
repz
ds
repz
test
jg
test
jge
mov
andb
xor
cltd
xor
mov
incl
push
ret
sti
inc
cltd
lds
pop
dec
pop
hlt
nop
and
mov
cltd
pop
push
inc
dec
leave
inc
imul
insb
or
std
outsl
adc
popa
mov
add
roll
shll
lds
jmp
jo
sti
pop
and
and
fidivrl
out
cli
popf
push
out
sbb
ret
or
mov
aas
mov
push
ljmp
pop
loopne
xor
outsl
ds
lea
push
loope
mov
out
subb
push
xor
cld
jne
or
enter
dec
adc
icebp
idivb
not
jo
sbb
and
mov
mov
pop
inc
nop
outsb
fildl
rorb
pop
clc
jg
pop
xor
pusha
aad
pop
jbe
flds
jno
push
es
inc
pop
rolb
lods
inc
jmp
sub
pop
pop
lahf
mov
clc
stos
bound
adc
roll
loope
pop
mov
jnp
inc
and
call
imul
lods
sub
lea
test
ds
push
jbe
fdiv
pop
push
ss
shrl
shl
fcoms
push
das
insb
decl
add
test
fwait
sub
out
mov
sbb
pusha
dec
test
xor
sbb
loope
dec
aas
push
loope
mov
pop
out
loop
insb
jo
sub
in
leave
les
js
cmp
clc
aaa
push
int3
in
cmpsb
mov
push
movsb
dec
or
ja,pn
mov
fisubrl
fbld
ss
std
xor
add
adc
fucomip
fdivl
mulb
mov
cmpsb
sub
sub
cmp
push
dec
adc
mov
cmc
push
insb
inc
add
in
mov
mov
add
inc
lock
in
dec
loopne
stc
js
fildll
hlt
jo
mov
pop
push
jmp
xchg
cli
test
dec
lret
dec
dec
adc
jge
dec
ret
jnp
outsb
cwtl
out
bound
or
sbb
insl
or
cmpsb
cmp
xor
imul
or
fdivl
adc
adc
adc
inc
pop
imul
xchg
dec
scas
loop
and
adc
icebp
add
inc
mov
arpl
push
fsubrp
sub
xor
sub
cld
cli
xor
push
mov
mov
jle
jmp
xchg
xchg
sub
loope
mov
arpl
xchg
ljmp
pop
imul
mov
mov
jl
pop
scas
xor
hlt
push
cmp
jl
cmc
cmpl
pop
xor
sub
out
pop
pop
mov
test
dec
add
call
fbld
push
jnp
fdivrs
fidivrl
inc
out
fists
cmp
in
and
bound
out
push
lods
imul
das
shrb
adc
mov
out
ja
jl
mov
adc
xor
inc
sub
ret
xor
sahf
jbe
lahf
push
xor
inc
cmpsl
iret
popf
pop
shrl
fmuls
clc
adc
jge
leave
pop
stos
inc
es
in
mov
call
outsb
pop
call
shll
jmp
test
lahf
sbb
insl
hlt
push
push
adc
mov
test
or
pop
cwtl
fstl
mov
dec
mov
mov
fdiv
or
and
insl
or
jg
rcll
mov
lret
gs
aam
jge
outsl
hlt
daa
push
pop
cmp
xor
scas
fstl
mov
insb
push
or
inc
ljmp
jg
orl
out
dec
das
inc
push
or
pop
in
and
or
push
in
cmp
adc
mov
or
sbbl
sti
notb
cmp
pop
cli
mov
push
pop
popf
in
mov
fwait
orb
ret
popa
inc
stos
cmpsb
or
mov
loopne
lock
jge
jns
mov
xchg
mulb
insb
stc
das
sub
jbe
pop
fstpt
je
int3
imul
or
sbb
adc
sbb
mov
mov
add
adc
pop
xchg
xchg
lret
outsl
clc
jg
inc
test
jbe
cmpsl
lcall
jne
pop
mov
ds
test
aad
scas
mov
or
addb
insl
popa
inc
test
pop
out
pop
out
inc
lahf
and
lcall
lret
stc
xchg
loop
inc
sahf
dec
cmp
stos
jno
into
adc
add
mov
dec
push
pushf
dec
ljmp
in
ror
inc
clc
outsl
sbb
lahf
or
cmpsb
xchg
pushf
pop
pop
sub
gs
repz
enter
xchg
adc
xor
movsl
jmp
gs
mov
testb
repz
pop
cmp
push
adc
fsubrs
leave
sbb
mov
jge
inc
out
or
decl
pop
sbb
mov
fwait
arpl
int
cltd
adc
pop
loope
loopne
sbb
lcall
xchg
mov
sarb
lea
sbb
or
jne
aam
jmp
and
out
add
mov
loopne
scas
and
mov
pushl
aaa
pop
loopne
dec
loope
dec
mov
or
push
pop
push
jl
stos
add
loop
sub
push
daa
fiaddl
or
push
iret
out
and
movb
aaa
std
nop
or
inc
mov
jns
js
add
outsl
std
repnz
xchg
cwtl
imul
dec
les
das
cmc
js
mov
jecxz
cmp
or
cli
mov
bound
jnp
sbb
xchg
adc
mov
andl
fldt
pop
clc
or
inc
iret
sbb
inc
cmp
xor
jmp
rcll
mov
adc
jg
movsl
sub
and
xchg
fmuls
clc
mov
imul
call
dec
sbb
mov
lea
decb
lods
sarb
fnstenv
pusha
inc
inc
cwtl
jg
out
pop
push
lahf
dec
jecxz
out
dec
jbe
or
outsb
lods
or
lahf
jmp
jne
mov
rorl
idivb
aas
mov
push
inc
dec
jl
xchg
call
out
out
dec
subb
inc
out
xor
inc
das
inc
jmp
stc
xchg
fisttps
pop
add
subb
test
push
jns
pop
fists
movsb
or
sbb
ret
cmpsb
outsl
mov
push
xor
in
sbb
dec
or
push
mov
xchg
mov
nop
mov
mov
dec
pop
repnz
sub
lods
jmp
shll
add
pop
mov
dec
and
jo
and
je
or
je
lock
pop
push
adcb
shrb
pusha
lahf
aas
push
pusha
dec
lods
in
pop
jp
fcompl
lock
jmp
pop
clc
lock
mov
push
or
rclb
jbe
lea
pop
ror
aam
pop
fcmovnu
and
nop
popa
pop
roll
mov
mov
push
sahf
xchg
mov
push
popf
rcr
add
dec
out
add
jecxz
sti
and
inc
push
or
sub
add
adc
mov
xchg
sub
xor
addr16
outsl
aaa
cmc
push
cs
mov
sub
test
mov
or
push
add
popa
fadd
outsb
cmc
sbb
mov
pop
ljmp
das
add
or
pop
xchg
sbbl
mov
mov
push
movsl
jo
fcmovnb
aaa
lea
xor
inc
pop
pop
pop
jno
push
std
mov
jo
inc
call
lock
mov
mov
pop
in
xor
fiadds
ret
outsl
add
aaa
sbb
jmp
dec
sbb
into
sahf
adc
stc
pop
fdivl
sub
mov
and
xlat
fildll
sbb
popf
sbb
mov
xchg
lret
and
xchg
cs
int3
jecxz
lds
xor
aam
jbe
in
inc
shll
mov
cmp
lahf
daa
mov
adc
test
dec
out
pop
nop
dec
orl
mov
or
adc
jb
je
negb
push
dec
mov
ret
jmp
cmp
cmpsl
scas
sub
adc
fstpl
jo
aas
mov
inc
inc
adc
mov
mov
rcrl
xchg
sub
push
fsubrp
lcall
addr16
cmc
and
sub
jbe
test
add
mov
jg
pusha
stos
in
andl
mov
les
aas
clc
into
mov
out
adc
aad
push
outsl
dec
leave
jmp
mov
push
jg
jmp
fwait
movsb
pop
or
sbb
loopne
orl
jo
pop
incl
cld
dec
shrb
push
dec
subl
test
jmp
adc
in
pop
data16
or
adc
ja
hlt
xchg
rcrl
push
insl
int3
dec
sub
mov
pushl
push
imul
or
pop
inc
stc
or
sahf
and
xchg
fcom
in
jmp
fisttpl
mov
orb
je
pop
addb
push
and
fistpll
ss
fldenv
dec
adc
push
pushf
push
cli
incl
aad
inc
mov
cld
aad
fists
fildll
pushf
sbb
and
pop
std
adc
pop
cmp
sub
and
pushl
xor
sbb
test
mov
jnp
stc
jecxz
sbb
mov
fldl
add
imul
push
pop
mov
out
ljmp
repnz
mov
and
push
sbb
lret
mov
or
call
fistpl
inc
add
dec
or
pop
ret
sarb
stos
fldenv
test
std
outsl
ja
add
push
inc
pop
stc
sub
add
jp
icebp
or
fwait
mov
jle
dec
xchg
in
cmp
cld
pop
fwait
aam
mov
hlt
mov
das
xor
push
jno
or
dec
sbb
inc
xor
std
call
mov
mov
xor
xor
insb
std
aad
das
hlt
movsl
les
jo
test
mov
imul
mov
lds
insb
or
push
inc
enter
mov
hlt
jge
cmpsb
mov
or
test
sarl
loop
lds
sbb
xlat
pop
xor
imull
loope
inc
mov
jecxz
jbe
pop
lock
mov
ss
lret
dec
lds
cmp
adc
out
std
mov
repnz
imul
xchg
enter
sub
mov
sub
dec
leave
test
add
inc
sbb
int3
sbb
add
jg
dec
stos
nop
test
mov
aas
push
xchg
std
test
or
mov
xchg
sub
rorb
sbb
cmp
lods
dec
jnp
mov
or
ljmp
lock
in
icebp
pop
je
push
adc
pop
mov
and
jmp
repnz
outsb
inc
pop
or
sub
mov
fnstsw
sub
imul
sbb
mov
add
pop
es
mov
or
mov
inc
shlb
jo
and
jbe
popf
fisubl
pusha
mov
mov
or
incl
loopne
sub
xor
test
mov
insb
mov
repz
xor
lret
cmp
shlb
inc
lock
aaa
aam
push
daa
push
and
je
sbb
gs
les
mov
cmpsl
lahf
xchg
or
fstl
mov
stos
pop
and
sub
lret
aas
out
fidivrs
imull
fwait
or
sahf
mov
mov
jp
mov
subl
add
sbb
filds
sub
dec
or
cmp
lods
pop
push
xor
add
test
jo
mov
fwait
add
and
aam
imul
lock
dec
xchg
subl
adc
sbb
stos
imul
pop
enter
test
and
jmp
rclb
das
inc
and
mov
mov
dec
add
mov
inc
push
aaa
movsb
adcb
and
inc
mov
nop
and
inc
inc
pop
add
and
sbb
sbb
add
xor
add
lods
mov
or
test
push
add
push
adc
and
inc
add
lret
push
and
dec
pop
adc
test
addr16
test
nop
dec
and
jns
mov
or
and
xor
sub
push
jbe
nop
sahf
mov
in
jbe
adc
add
and
pop
imul
inc
cmp
jae
insl
xlat
mov
andb
mov
and
adc
and
inc
inc
dec
dec
inc
add
pop
mov
add
add
jg
or
and
and
adc
sub
jge
adc
push
add
pop
pop
fcmovnu
push
pop
mov
xchg
cmp
insl
pop
imul
shll
adc
pop
in
fcmovu
jle
outsb
and
and
test
lods
or
push
popa
push
or
mov
imul
push
addl
mov
ds
paddsw
inc
fidivs
dec
mov
sub
mov
imul
arpl
iret
inc
bound
rclb
outsl
jp
jb
rorb
lods
jne
shll
inc
adc
imul
js
pop
jmp
and
lods
xor
lods
xor
inc
das
nop
jo
mov
pop
imul
mov
jo
adc
mov
sub
int
imul
pop
or
insl
pop
imul
adc
or
imul
mov
add
mov
xor
and
inc
mov
jo
xor
pop
push
adc
cwtl
stos
fistpl
vpcomw
mov
lcall
jno
pop
ss
mov
jbe
inc
pop
imul
push
out
scas
mov
dec
cld
mov
mov
lcall
addr16
dec
jbe
lcall
adc
ds
jne
imul
js
stos
test
inc
jae
and
pop
xlat
add
and
add
lods
xor
test
add
jae
roll
das
int3
stos
add
loope
inc
loopne
jge
out
inc
xor
and
das
push
inc
add
fldl
outsb
popa
mov
test
pop
shl
cmp
sub
xchg
mov
sbb
or
nop
cmp
mov
or
mov
data16
jno
fisttpl
xchg
push
ret
add
push
push
ret
sub
insl
imul
mov
xchg
mov
push
push
andb
or
addr16
fwait
mov
pop
inc
jnp
or
inc
jecxz
jo
mov
gs
add
imul
test
enter
inc
xlat
insl
mov
imul
add
cwtl
aad
pop
mov
pop
inc
dec
jecxz
aam
sub
mov
lods
pop
lods
jne
mov
xchg
and
pop
stos
inc
test
sbb
dec
test
add
stos
and
mov
orb
inc
inc
inc
dec
sub
mov
add
dec
and
and
add
decl
int3
and
add
add
adc
adc
in
and
sbb
jbe
mov
orb
push
in
add
inc
scas
push
aam
and
int3
adc
lea
push
nop
dec
xor
mov
and
push
rcll
add
into
aas
in
sub
ss
nop
and
mov
mov
or
lods
mov
and
mov
or
dec
and
inc
nop
add
mov
pop
add
and
and
push
fcmovnu
mov
and
and
nop
mov
inc
mov
fisttpl
adc
push
dec
add
adc
mov
nop
add
arpl
pop
jmp
and
sbbl
mov
fisubs
cmpsb
adc
pop
imul
mov
inc
rclb
fsubl
or
pop
imul
call
in
imul
xor
and
pop
cld
add
adc
push
jo
sti
and
pop
sub
add
and
and
inc
insl
push
add
lods
add
inc
test
mov
sub
and
pop
push
push
mov
adc
lods
cli
cmpsb
sbb
insl
pop
fistpl
scas
dec
add
add
test
mov
inc
ret
nop
std
rcr
insl
jmp
inc
dec
and
test
mov
and
ret
pcmpgtb
or
adc
xor
xor
int
orb
lret
rcrb
xchg
mov
out
xchg
mov
insl
ret
and
add
mov
or
pop
int3
lahf
push
inc
push
mov
sbb
mov
aam
sub
or
stc
cwtl
cmp
xchg
add
adc
lods
jmp
dec
shrl
and
dec
add
pop
lret
sub
imul
nop
fdivl
popa
jae
imul
scas
mov
pop
imul
and
push
cmp
test
and
lret
inc
dec
and
scas
add
add
imul
data16
sbb
arpl
xor
mov
pop
mov
xor
xlat
lcall
popa
push
test
push
add
push
pop
pop
imul
push
or
imul
mov
mov
inc
data16
and
fcmovbe
pop
sub
or
pushf
and
in
push
mov
mov
push
insb
int
adcb
imul
lds
and
cmp
andl
shll
add
fistps
mov
cmp
and
popa
imul
xlat
lahf
fiaddl
adc
jl
pop
addb
pop
sub
sbbl
cmp
push
inc
fldenv
sbb
pop
mov
shl
mov
lcall
lahf
push
mov
jecxz
or
aaa
xlat
lcall
insb
cmp
xchg
mov
or
out
add
add
mov
push
inc
or
jo
insl
lods
cmc
ret
push
imul
xchg
push
pop
or
adc
fmulp
add
jge
mov
in
xchg
lcall
push
push
call
cmpsb
mov
aaa
loopne
inc
and
mov
aas
mov
pop
mov
mov
dec
lods
xor
stos
fidivs
pop
jae
out
paddw
adc
or
xchg
dec
jp
test
jle
cmp
mov
add
lods
mov
test
mov
addl
inc
xor
adc
pop
xor
xchg
or
rcl
push
push
push
and
xorb
sbb
nop
test
sbb
xor
jbe
push
cmp
mov
lcall
fwait
iret
aad
or
push
test
aad
imul
gs
push
or
jae
mov
cmpsb
inc
mov
lcall
popa
or
sbb
pop
inc
and
push
cs
jae
pop
xlat
rcrb
movsl
popf
xor
push
inc
push
inc
xor
sbb
xor
jb
sbb
push
roll
insb
and
out
mov
sbb
dec
inc
sbb
xchg
pop
fadds
xor
jne
inc
repnz
or
repnz
inc
fs
push
mov
out
adcl
jle
in
data16
call
add
mov
xor
pop
fwait
ret
adc
adc
out
cwtl
or
cmp
mov
xor
mov
and
daa
ret
xlat
or
pushf
sbb
push
xchg
mov
lret
add
add
adc
mov
cltd
call
insl
rorl
push
xor
or
clc
add
cmc
aaa
mov
pop
sar
test
inc
js
dec
add
or
out
sbb
mov
adc
andl
and
jecxz
push
not
lcall
inc
add
add
dec
out
lcall
orl
pop
add
lods
insl
lods
loope
mov
sub
fs
movsl
sbb
mov
mov
adc
ljmp
cmp
lcall
add
lds
cltd
push
test
push
fcomps
dec
mov
xor
arpl
imul
fwait
iret
push
js
push
push
xchg
adc
jo
jae
and
cvtps2pi
addl
std
xchg
push
xchg
sbb
inc
xchg
stos
jne
inc
push
lahf
and
call
push
push
dec
sbb
sub
int
and
pop
xor
sbb
mov
or
or
hlt
lahf
leave
dec
rorl
mov
inc
cmp
stos
es
mov
popf
mov
dec
ret
inc
sti
jb
sub
push
leave
pop
jo
fimull
sub
imul
adc
out
loopne
pop
imul
and
out
mov
popf
mov
fimull
aaa
add
xor
mov
rol
inc
sbb
inc
xor
out
rclb
ss
data16
add
and
dec
jno
push
and
inc
jle
sub
movb
scas
jmp
enter
lock
in
sbb
jmp
jmp
andb
xor
add
inc
outsl
insl
jo
dec
jmp
gs
je
imul
dec
outsl
fs
gs
popa
outsb
fs
inc
adc
insl
sbb
gs
jb
arpl
jae
outsb
jg
xlat
das
push
inc
imul
adc
in
out
gs
pop
adc
fs
fs
in
mov
push
push
outsb
push
daa
jo
imul
fwait
inc
jb
push
jns
or
push
std
divb
inc
imul
jns
insb
pop
jb
outsb
imul
jae
aas
push
xchg
addr16
dec
popa
insl
gs
adc
jo
outsb
outsw
cmpsl
mov
mov
imul
pop
insl
cmp
outsb
mov
gs
inc
ret
jb
in
mov
jne
jae
push
fsts
outsb
out
xorl
addr16
sub
push
outsl
sbb
adc
xchg
xchg
addr16
push
inc
dec
add
add
aad
adc
add
data16
insb
add
mov
add
int
adc
inc
add
or
add
add
ja
mov
add
mov
jnp
xor
pop
push
add
mov
cmp
mov
add
pop
inc
or
xor
push
fwait
pop
enter
push
je,pn
js
stos
and
nop
mov
pop
pop
and
xchg
insl
loope
jb
aam
notb
in
sub
push
cs
xchg
sub
in
dec
add
add
js,pn
cmpsb
add
add
jbe
xor
jb
adc
daa
pop
jl
mov
xchg
or
push
or
fisubrl
outsl
dec
inc
sbb
mov
pop
sub
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
push
add
add
add
addb
add
fadds
add
sbb
add
mov
add
clc
add
orb
add
add
orb
add
fadds
add
dec
add
sbbb
add
mov
sbbb
add
enter
add
add
mov
add
cwtl
add
cmpb
add
call
add
add
add
addb
add
or
add
inc
add
in
add
add
add
add
add
add
add
add
inc
add
in
add
add
add
add
add
add
add
add
dec
add
in
add
add
add
add
add
add
add
add
dec
add
in
add
add
add
add
add
pusha
add
andb
mov
add
mov
add
add
add
or
add
add
int3
push
add
sub
add
or
add
push
add
sub
add
or
add
add
add
add
call
add
add
add
add
add
or
add
add
add
pop
add
call
add
add
add
xorb
add
add
add
or
add
add
cld
pop
add
and
add
or
add
add
and
add
mov
add
test
add
rolb
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
lar
add
add
addb
add
or
add
add
add
lea
add
add
add
add
add
mov
add
mov
add
add
add
or
add
add
and
add
adc
add
or
add
mov
adc
add
or
add
add
add
add
add
rolb
add
clc
add
adcb
add
and
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
or
add
add
lods
mov
adc
add
bound
add
add
add
add
add
xchg
add
nop
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
call
add
add
add
add
mov
add
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
push
add
lock
lock
add
lock
lock
add
add
lock
lock
add
add
add
add
add
push
push
add
push
push
add
add
add
str
lock
push
add
add
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
incb
jmp
add
inc
add
inc
add
incl
add
repz
add
icebp
push
add
lock
add
lock
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
push
mov
add
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
push
add
lock
lock
add
lock
lock
add
add
lock
lock
add
add
add
add
add
push
push
add
push
push
add
add
add
str
lock
push
add
add
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
incb
jmp
add
inc
add
inc
add
incl
add
repz
add
icebp
push
add
lock
add
lock
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
jmp
mov
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
push
add
lock
lock
add
lock
lock
add
add
lock
lock
add
add
add
add
add
push
push
add
push
push
add
add
add
str
lock
push
add
add
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
incb
jmp
add
inc
add
inc
add
incl
add
repz
add
icebp
push
add
lock
add
lock
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
dec
mov
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
push
add
lock
lock
add
lock
lock
add
add
lock
lock
add
add
add
add
add
push
push
add
push
push
add
add
add
str
lock
push
add
add
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
incb
jmp
add
inc
add
inc
add
incl
add
repz
add
icebp
push
add
lock
add
lock
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
sbb
add
imul
and
add
jnp
add
mov
sub
add
jae
imul
arpl
test
jnp
mov
arpl
mov
test
xchg
add
into
mov
mov
mov
xchg
mov
pushf
mov
mov
add
into
into
add
add
out
add
out
out
add
div
add
incl
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
pop
pop
sbb
sbb
sbb
sbb
or
add
or
pop
sbb
push
push
push
push
push
push
adc
push
adc
sbb
push
push
push
push
push
push
add
or
or
add
sbb
push
push
push
push
push
push
add
push
push
push
adc
push
push
push
push
push
push
or
pop
sbb
push
push
push
push
push
push
adc
adc
pop
sbb
push
push
push
push
push
push
push
adc
or
or
push
push
push
push
push
push
push
push
sbb
pop
sbb
push
push
push
push
push
push
push
sbb
pop
pop
sbb
push
push
push
push
push
push
sbb
sbb
pop
sbb
push
push
push
push
push
sbb
push
sbb
pop
sbb
push
push
push
sbb
push
push
push
sbb
pop
sbb
sbb
sbb
pop
sbb
pop
sbb
sbb
sbb
push
sbb
sbb
pop
pop
sbb
push
push
push
push
push
push
push
push
pop
sbb
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
loopne
add
sub
add
adc
add
adc
add
add
or
add
add
add
add
add
add
add
add
mov
test
mov
mov
mov
into
xchg
imul
pushf
imul
rol
pushf
jae
pushf
jnp
fisubs
test
movsl
mov
xchg
xchg
xchg
add
mov
add
mov
pushf
add
lods
lods
add
lods
mov
mov
mov
faddp
mov
mov
movsl
movb
mov
push
pushf
into
add
into
into
add
jnp
add
add
xchg
fiadds
cmp
add
fiadds
dec
movsl
fiadds
push
lods
fiadds
jnp
fiadds
fiadds
push
lods
out
pop
lods
out
dec
mov
add
out
imul
add
out
jae
out
test
out
out
out
inc
mov
add
out
add
out
add
out
add
out
add
out
add
out
out
add
testl
imul
add
testl
imul
add
testl
test
testl
mov
testl
div
testl
jnp
incl
test
incl
mov
incl
mov
incl
xchg
out
add
incl
lods
out
incl
mov
incl
idiv
add
incl
incl
into
pushf
jae
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
pop
pop
pop
pop
pop
pop
and
and
and
and
pop
sbb
pop
pop
pop
pop
pop
sub
aas
inc
inc
xor
inc
pop
pop
pop
pop
pop
pop
pop
sub
inc
inc
xor
cmp
or
add
add
sub
inc
sub
cmp
cmp
add
push
sub
inc
xor
cmp
and
push
xor
dec
dec
dec
dec
dec
inc
inc
and
push
and
adc
cs
adc
sbb
push
push
push
push
push
das
adc
push
or
or
adc
adc
pop
or
push
push
push
push
and
adc
sbb
or
push
push
push
push
push
and
and
push
push
push
push
push
push
push
push
push
push
push
push
add
or
push
push
push
push
push
push
push
push
push
push
push
add
or
or
or
or
or
or
or
add
or
pop
push
push
or
or
or
or
add
or
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
int3
jl
ja
ja
ja
ja
ja
ja
int3
int3
jl
int3
int3
int3
ja
ja
ja
ja
ja
xchg
jl
int3
ja
ja
jl
int3
ja
ja
ja
ja
ja
ja
jl
int3
int3
int3
ja
xchg
jl
int3
int3
int3
ja
ja
ja
ja
ja
xchg
jl
ja
ja
ja
ja
ja
ja
int3
jl
int3
int3
int3
ja
ja
ja
ja
lock
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
fmul
add
add
add
adc
add
imul
add
add
sub
add
add
add
sub
jo
add
add
add
add
add
add
mov
add
add
add
add
jb
outsl
add
and
inc
add
jae
imul
add
add
mov
popa
add
add
add
add
mov
jbe
add
add
add
jae
add
add
add
add
add
mov
jbe
add
add
and
inc
add
jo
jns
and
inc
add
add
add
add
add
add
mov
jbe
add
and
inc
add
add
add
add
mov
outsb
add
insl
add
add
add
add
add
add
mov
insb
add
jae
add
add
add
inc
add
add
jae
add
add
insb
add
add
add
add
jae
add
add
insb
add
add
jne
je
and
inc
add
je
imul
and
inc
add
arpl
jne
insl
add
outsb
add
add
add
mov
insb
add
je
add
add
jb
outsl
add
and
inc
add
jae
imul
add
dec
add
popa
add
add
add
jae
imul
add
add
add
add
add
add
add
add
add
jae
imul
add
add
add
add
mov
imul
add
add
add
add
add
add
jb
imul
and
dec
add
ja
addb
mov
js
imul
adc
add
add
je
add
add
adc
add
add
add
add
add
add
add
add
movsb
inc
add
add
add
add
movsb
add
outsl
add
jns
add
add
adc
add
jae
je
add
add
add
movsb
add
add
add
add
add
add
movsb
push
add
insb
add
arpl
je
and
inc
add
add
add
add
outsl
add
jns
and
je
outsl
add
add
insb
add
jo
bound
outsl
add
jb
add
add
add
add
jb
add
je
and
inc
add
insb
add
add
imul
and
jo
popa
add
add
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
add
movsb
inc
add
jb
jb
add
je
and
inc
add
insb
add
outsb
add
insl
add
and
je
outsl
add
add
insb
add
jo
bound
outsl
add
jb
add
add
add
jb
jb
add
je
and
inc
add
jb
add
add
popa
add
add
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
add
outsb
add
add
je
add
add
sbb
add
add
jae
add
add
add
add
add
outsb
add
add
je
add
addb
movsb
inc
add
arpl
jb
add
jae
add
add
add
add
add
outsb
add
add
je
add
adc
inc
add
outsb
add
add
je
and
inc
add
jae
add
add
add
add
add
movsb
add
push
add
inc
add
inc
add
push
add
add
addb
movsb
add
add
add
arpl
popa
add
add
add
add
add
add
add
jo
add
popa
add
add
outsb
add
add
add
sbb
add
add
popa
add
add
add
jne
jb
jb
add
je
and
dec
add
outsb
add
add
add
sbb
push
add
insb
add
je
and
dec
add
outsb
add
jae
add
add
sbb
add
outsb
add
add
add
add
add
add
push
movsb
dec
add
jbe
add
add
jo
and
inc
add
jb
jb
add
je
and
dec
add
outsb
add
add
addb
movsb
dec
add
jbe
add
add
add
outsb
add
add
jne
jb
jb
add
je
and
dec
add
outsb
add
add
adc
inc
add
insl
add
add
je
das
add
outsb
add
outsl
add
insl
add
outsb
add
add
add
movsb
push
add
add
insb
add
and
inc
add
add
imul
add
outsl
add
insl
add
outsb
add
add
add
movsb
inc
add
add
imul
add
outsl
add
insl
add
outsb
add
add
add
inc
add
add
imul
add
outsb
add
outsl
add
insl
add
outsb
add
add
add
add
popa
add
and
inc
add
insl
add
add
je
add
adc
inc
add
je
outsl
add
add
jo
insb
add
je
imul
add
add
push
ret
inc
add
outsb
add
je
imul
and
inc
add
insl
add
insb
add
je
imul
add
add
push
ret
push
add
jb
add
add
outsl
add
jo
insb
add
je
imul
add
addb
ret
inc
add
outsb
add
je
imul
and
push
add
jb
popa
add
add
add
jae
and
dec
add
outsb
add
add
add
dec
add
add
outsl
add
jbe
add
jae
imul
add
add
leave
scas
push
add
outsb
add
add
jae
and
inc
add
jb
insl
add
je
add
add
lret
add
dec
add
and
inc
add
jb
insl
add
je
add
addb
scas
dec
add
arpl
and
inc
add
jb
insl
add
je
add
add
sub
add
and
push
add
popa
add
insb
add
outsb
add
and
push
add
popa
add
add
add
movsb
inc
add
insb
add
insl
add
and
inc
add
add
add
add
add
add
add
push
add
je
and
push
add
popa
add
add
outsb
add
add
add
add
add
jb
and
push
add
popa
add
add
outsb
add
add
add
insb
add
add
add
add
add
add
jb
arpl
push
add
cmpsl
add
imul
add
add
add
add
add
add
add
add
outsb
add
add
imul
jae
add
add
add
add
add
cmpsl
inc
add
outsb
add
add
add
add
je
add
add
add
outsb
add
add
add
jb
add
imul
jae
add
add
sub
insb
add
arpl
je
and
popa
add
add
add
imul
and
dec
add
js
je
add
add
sub
insb
add
arpl
je
and
popa
add
add
add
imul
and
push
add
add
imul
jae
add
add
push
test
add
outsb
add
add
add
outsl
add
add
add
add
add
add
add
je
add
add
pop
test
add
outsb
add
add
add
outsl
add
add
add
add
add
add
jb
add
imul
jae
add
add
sti
cmpsl
add
add
insb
add
arpl
add
add
add
add
add
add
test
add
outsb
add
jb
add
add
je
popa
add
add
add
jb
arpl
push
add
add
jb
arpl
push
add
jae
jne
insb
add
add
add
imul
outsl
add
add
add
es
add
js
je
and
push
add
popa
add
arpl
push
add
jae
jne
insb
add
add
add
test
add
add
imul
jae
and
push
add
popa
add
arpl
push
add
jae
jne
insb
add
add
add
cmpsl
add
outsl
add
add
add
add
add
add
add
add
test
add
and
je
outsl
add
add
popa
add
add
imul
and
inc
add
popa
add
add
add
add
add
add
add
popa
add
imul
add
insb
add
add
add
test
add
imul
and
xor
jae
je
and
push
add
add
add
add
add
test
add
imul
and
xor
outsb
add
add
je
jns
insb
add
add
add
adc
imul
and
xor
jb
add
add
je
jns
insb
add
add
add
adc
push
add
imul
and
xor
je
push
add
add
add
add
add
imul
and
xor
add
add
je
jns
insb
add
add
adc
push
add
insl
add
jb
imul
add
insb
add
add
add
test
add
add
jb
and
xor
jae
je
and
push
add
add
add
add
add
test
add
add
jb
and
xor
outsb
add
add
je
jns
insb
add
add
add
adc
add
jb
and
xor
jb
add
add
je
jns
insb
add
add
add
adc
add
popa
add
and
xor
je
push
add
add
add
add
add
test
add
add
jb
and
xor
add
add
je
jns
insb
add
add
addb
test
add
add
jb
and
popa
add
add
add
je
jns
insb
add
jae
add
adc
dec
add
insl
add
and
jne
jo
add
add
sbb
je
and
push
add
add
add
add
add
test
add
add
add
je
jns
insb
add
add
add
sbb
add
add
je
jns
insb
add
add
add
sbb
xor
je
push
add
add
add
add
add
add
and
push
add
add
add
add
add
outsb
add
add
je
jns
insb
add
add
adc
dec
add
insl
add
and
add
ja
outsb
add
add
add
test
add
je
and
push
add
add
add
add
add
test
add
add
add
je
jns
insb
add
add
add
and
add
add
je
jns
insb
add
add
add
and
push
add
add
add
add
add
test
add
add
add
je
jns
insb
add
add
addb
test
add
outsb
add
add
je
jns
insb
add
nop
add
outsl
add
imul
add
jb
imul
add
add
cmpsl
push
add
add
insb
add
and
inc
add
outsl
add
insl
add
jb
imul
add
add
cmpsl
dec
add
js
je
and
inc
add
outsl
add
insl
add
jb
imul
add
add
cmpsl
push
add
add
imul
jae
and
inc
add
outsl
add
insl
add
jb
imul
add
add
test
add
add
jb
and
inc
add
add
add
outsl
add
imul
add
jb
imul
add
add
add
test
add
je
and
inc
add
outsl
add
insl
add
jb
imul
add
add
add
add
add
add
or
jo
jns
and
inc
add
outsl
add
insl
add
jb
imul
add
add
add
add
add
add
or
push
add
jae
je
add
add
add
add
add
add
insb
add
arpl
add
add
add
outsl
add
imul
add
jb
imul
add
add
add
add
add
add
or
add
add
add
add
outsl
add
imul
add
jb
imul
add
add
add
add
add
addb
test
add
jbe
add
jae
add
add
outsl
add
imul
add
jb
imul
add
add
add
imul
add
add
add
add
jns
jae
and
outsl
add
and
push
add
jo
add
add
add
add
insb
add
and
inc
add
insb
add
add
arpl
jb
add
outsb
add
add
outsl
add
add
add
add
stos
push
add
jae
je
sub
add
add
push
add
add
jns
insl
add
outsl
add
add
add
stos
push
add
outsl
add
and
push
add
imul
and
push
add
popa
add
add
add
outsb
add
add
add
add
add
cli
stos
push
add
outsl
add
and
inc
add
add
add
data16
add
add
add
add
add
stos
push
add
outsl
add
and
inc
add
add
add
push
add
arpl
je
add
jae
add
hlt
stos
push
add
outsl
add
and
dec
add
add
outsb
add
add
jne
imul
add
addb
lods
push
add
outsl
add
and
push
add
popa
add
and
push
add
insl
add
outsl
add
add
add
outsl
add
insl
add
add
add
stos
pop
add
outsl
add
and
add
outsb
add
add
add
je
jb
insb
add
add
outsl
add
jae
add
add
push
add
add
jo
sub
add
add
clc
stos
pop
add
outsl
add
and
add
jne
je
and
sub
inc
add
add
add
outsl
add
jae
add
add
push
add
add
add
outsb
add
add
add
add
jae
je
outsl
add
add
add
add
popa
add
insb
add
add
outsl
add
insl
add
add
add
outsl
add
add
add
insb
add
outsb
add
and
inc
add
jb
jb
add
je
and
inc
add
arpl
jne
insl
add
outsb
add
add
add
daa
dec
add
jbe
add
add
add
add
je
push
add
add
imul
add
add
adc
inc
add
add
add
add
add
add
je
push
add
add
imul
add
add
adc
dec
add
jbe
add
add
add
add
add
and
dec
add
jae
je
popa
add
arpl
add
add
add
add
and
imul
dec
add
ja
and
dec
add
jae
je
popa
add
arpl
add
add
add
stos
push
add
jb
add
add
jb
popa
add
add
add
sub
add
jae
and
outsl
add
and
inc
add
outsl
add
add
jb
and
push
add
add
add
add
or
add
and
dec
add
outsb
add
jae
add
add
jmp
push
add
add
sub
add
imul
add
add
add
insb
add
add
add
add
add
add
add
stos
inc
add
insb
add
add
insb
add
add
add
stos
push
add
data16
insb
add
add
insb
add
add
add
stos
inc
add
insb
add
add
jae
add
add
jne
jb
jb
add
je
and
dec
add
jbe
add
add
add
stos
push
add
arpl
outsl
add
add
jo
jae
add
add
jne
jb
jb
add
je
and
dec
add
jbe
add
add
add
outsl
add
add
jo
jae
add
add
add
add
add
add
lods
xor
add
add
adc
xor
add
add
adc
add
add
lods
xor
add
add
pop
lods
xor
add
lods
add
add
add
lods
aaa
add
add
add
add
add
outsb
add
outsl
add
add
jo
jae
add
add
add
add
add
add
add
add
lods
xor
add
add
pop
lods
xor
add
add
and
add
lods
xor
add
lods
add
add
add
lods
aaa
add
add
add
add
lods
push
add
outsb
add
push
add
imul
and
push
add
jb
je
imul
insb
add
add
arpl
jb
outsl
add
add
outsb
add
add
add
add
push
add
outsb
add
push
add
imul
and
dec
add
jb
imul
outsb
add
add
add
arpl
jb
outsl
add
add
outsb
add
add
sub
add
add
add
add
je
imul
and
push
add
add
add
add
js
je
and
inc
add
jb
add
je
imul
and
dec
add
add
add
add
outsb
add
outsl
add
add
add
add
add
scas
inc
add
arpl
outsl
add
add
add
outsb
add
add
dec
add
dec
add
add
add
scas
inc
add
arpl
outsl
add
add
add
outsb
add
add
push
add
sub
add
imul
outsl
add
je
and
inc
add
dec
add
add
add
scas
inc
add
arpl
outsl
add
add
add
outsb
add
add
push
add
sub
add
add
scas
inc
add
arpl
outsl
add
add
add
outsb
add
add
inc
add
sub
add
imul
inc
add
add
popa
add
add
add
iret
scas
inc
add
arpl
outsl
add
add
add
outsb
add
add
inc
add
sub
add
add
add
add
add
outsb
add
add
outsb
add
add
add
push
add
arpl
je
add
and
jae
add
add
add
add
jb
popa
add
imul
add
ljmp
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
outsb
add
add
jae
sub
add
add
add
popa
add
add
arpl
add
add
call
add
and
cmp
cmp
xor
add
add
add
lock
dec
add
dec
add
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
scas
push
add
outsb
add
add
jae
sub
add
add
add
add
add
arpl
add
addb
scas
dec
add
dec
add
add
add
add
add
add
add
adc
inc
add
jb
imul
imul
add
jmp
add
and
cmp
cmp
xor
add
add
dec
add
dec
add
add
add
add
mov
add
dec
add
add
add
add
mov
add
arpl
imul
outsl
add
push
add
scas
dec
add
dec
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
outsb
add
add
jae
sub
add
add
add
add
je
jb
popa
add
add
jne
jb
outsl
add
add
outsb
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
outsb
add
add
jae
sub
add
add
add
push
add
jae
add
add
add
inc
add
add
add
add
add
add
add
je
imul
popa
add
add
add
add
xor
xor
xor
xor
and
sub
push
add
insl
add
insb
add
data16
add
add
add
add
popa
add
je
add
outsb
add
add
jne
jb
outsl
add
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
jb
add
imul
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
outsb
add
add
jae
sub
add
add
add
add
jb
add
add
add
in
scas
dec
add
dec
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
outsb
add
add
jae
sub
add
add
add
popa
add
popa
add
add
add
add
add
imul
sub
add
add
adc
dec
add
jb
add
outsb
add
add
add
inc
add
add
add
add
outsl
add
je
push
add
jb
outsl
add
add
outsb
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
arpl
add
add
add
arpl
add
addb
mov
add
dec
add
add
add
add
add
add
outsl
add
add
arpl
add
adc
push
add
popa
add
add
add
out
scas
dec
add
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
imul
add
push
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
outsb
add
add
jae
sub
add
add
add
add
je
add
outsb
add
add
jne
jb
outsl
add
add
outsb
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
scas
dec
add
dec
add
add
add
add
add
add
add
add
outsl
add
je
jne
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
add
jb
add
arpl
push
add
scas
dec
add
dec
add
add
add
add
outsb
add
add
jae
sub
add
add
add
je
outsb
add
insl
add
jae
add
add
add
outsb
add
add
jae
sub
add
add
scas
inc
add
outsb
add
add
je
and
je
outsl
add
add
dec
add
dec
add
add
add
scas
inc
add
outsb
add
add
je
and
je
outsl
add
add
push
add
sub
add
imul
outsl
add
je
and
inc
add
dec
add
add
add
scas
inc
add
outsb
add
add
je
and
je
outsl
add
add
push
add
sub
add
add
scas
inc
add
outsb
add
add
je
and
je
outsl
add
add
inc
add
sub
add
imul
inc
add
add
popa
add
add
addb
scas
inc
add
outsb
add
add
je
and
je
outsl
add
add
inc
add
sub
add
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
add
popa
add
add
add
add
mov
add
add
add
add
add
add
add
shll
jae
add
bound
insb
add
add
add
fdivl
je
outsl
add
je
add
add
mov
add
je
arpl
push
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
insl
add
add
add
mov
add
popa
add
add
add
add
mov
add
inc
add
dec
add
add
add
add
add
add
jecxz
inc
add
add
add
mov
add
data16
add
add
int3
mov
add
add
push
add
je
imul
jae
arpl
jb
imul
add
add
lret
add
jb
je
jb
popa
add
add
add
in
inc
add
imul
insb
add
add
add
fidivs
jae
imul
add
add
add
add
add
dec
add
add
add
mov
add
dec
add
add
add
mov
dec
add
jbe
popa
add
add
add
add
popa
add
arpl
jb
imul
add
add
out
dec
add
push
add
add
add
mov
add
pop
add
add
je
add
add
iret
mov
add
push
add
add
add
enter
jne
popa
add
add
add
mov
add
imul
add
imul
add
add
fnsave
je
insb
add
bound
add
add
ret
mov
add
and
dec
add
dec
add
add
imul
add
add
mov
add
add
and
push
add
add
add
add
add
mov
add
jb
insl
add
insb
add
add
add
je
add
add
int
dec
add
dec
add
add
add
mov
add
add
je
imul
sub
add
add
add
arpl
popa
add
add
add
add
insb
add
add
add
add
add
add
aam
push
add
jae
je
jae
arpl
jb
imul
add
add
in
push
add
ja
add
push
add
add
add
add
add
mov
add
outsl
add
add
je
imul
add
add
mov
add
add
outsb
add
add
add
mov
add
add
add
mov
add
jae
outsl
add
jb
arpl
add
add
imul
add
add
aad
push
add
bound
jns
add
add
lret
mov
add
add
add
add
add
mov
add
push
add
add
add
mov
add
popa
add
add
add
add
add
add
mov
add
dec
add
add
add
mov
add
dec
add
add
add
mov
add
pop
add
add
add
mov
add
add
add
xlat
mov
add
inc
add
add
add
mov
add
jb
imul
add
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
sub
add
imul
add
add
add
add
add
add
popa
add
add
add
add
add
add
fidivl
popa
add
add
add
add
add
add
shll
jae
add
bound
insb
add
add
addb
mov
add
je
outsl
add
je
add
add
mov
add
je
arpl
push
add
add
add
mov
inc
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
insl
add
add
add
mov
add
popa
add
add
add
add
mov
add
inc
add
dec
add
add
add
push
add
add
add
add
add
mov
add
add
add
data16
add
adc
inc
add
add
add
mov
add
add
push
add
je
imul
jae
arpl
jb
imul
add
addb
mov
add
jb
je
jb
popa
add
add
add
in
inc
add
imul
insb
add
add
adc
dec
add
add
add
mov
add
jae
imul
add
add
add
add
add
add
add
mov
add
dec
add
add
adc
dec
add
add
add
jbe
popa
add
add
add
add
popa
add
arpl
jb
imul
add
addb
mov
add
push
add
add
add
mov
add
pop
add
add
je
add
adc
dec
add
add
add
mov
add
push
add
add
addb
mov
add
popa
add
add
add
add
add
ret
add
imul
add
imul
add
add
fnsave
je
insb
add
bound
add
add
ret
mov
add
and
dec
add
dec
add
add
imul
add
addb
mov
add
sub
add
and
push
add
add
add
add
add
add
add
shlb
add
popa
add
add
add
je
add
addb
mov
add
dec
add
add
add
mov
add
add
je
imul
sub
add
add
add
add
mov
add
arpl
popa
add
add
add
add
insb
add
add
add
add
add
add
aam
push
add
jae
je
jae
arpl
jb
imul
add
add
in
push
add
ja
add
push
add
add
add
add
add
mov
add
outsl
add
add
je
imul
add
addb
mov
add
je
push
add
add
add
add
add
out
push
add
add
add
mov
add
jae
outsl
add
jb
arpl
add
add
imul
add
addb
mov
add
bound
jns
add
adc
push
add
add
add
mov
add
add
add
add
add
mov
add
push
add
add
add
mov
add
popa
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
dec
add
add
add
pop
add
add
add
add
add
lds
add
add
xlat
mov
add
inc
add
add
add
jb
imul
add
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
sub
add
imul
add
add
add
add
add
add
outsb
add
jae
add
add
mov
add
add
add
arpl
add
add
add
add
add
add
add
insb
add
and
inc
add
outsb
add
imul
jb
popa
add
add
add
add
add
add
add
add
jb
je
arpl
jne
je
and
dec
add
jo
jo
add
add
add
add
add
outsl
add
je
add
add
test
jo
outsl
add
je
and
jo
insb
add
add
outsb
add
add
sub
add
add
add
add
add
jo
outsl
add
je
and
jae
je
jns
insb
add
and
je
push
add
sub
jae
sub
add
add
add
add
add
popa
add
jb
outsl
add
add
add
movsb
push
add
add
je
and
push
add
add
outsl
add
add
outsb
add
add
add
and
add
jo
and
push
add
arpl
outsl
add
add
outsb
add
add
add
and
add
add
bound
popa
add
imul
add
add
movsb
add
popa
add
add
add
jne
jb
jb
add
je
and
push
add
arpl
outsl
add
add
add
add
popa
add
jb
outsl
add
add
add
add
add
add
jne
outsb
add
add
and
dec
add
arpl
jb
outsl
add
add
jne
insb
add
add
insb
add
and
push
add
insl
add
jae
add
add
add
add
add
jne
outsb
add
add
add
jne
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
je
add
je
jae
add
cltd
mov
add
je
add
popa
add
add
add
add
outsl
add
add
add
add
add
add
popa
add
add
add
add
jb
outsl
add
add
je
and
push
add
add
add
add
fwait
mov
add
push
add
imul
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
jne
insl
add
add
add
add
add
outsl
add
add
add
insb
add
add
outsb
add
add
sahf
mov
add
add
je
add
add
outsl
add
add
popa
add
add
add
add
add
outsl
add
je
and
dec
add
je
add
popa
add
add
add
add
add
add
testl
add
add
push
add
arpl
add
je
and
push
add
outsb
add
add
add
addb
sub
add
imul
outsl
add
jae
add
add
add
add
clc
add
add
incl
add
add
add
orb
and
sub
push
add
add
add
add
jae
add
sub
add
imul
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
incl
add
jb
and
insb
add
outsb
add
jne
popa
add
add
add
add
add
and
add
add
cmp
es
add
incl
add
add
inc
xchg
add
add
or
sub
add
incl
add
outsb
add
jo
popa
add
add
arpl
jns
sbb
add
add
add
dec
add
insl
add
arpl
je
insb
add
pop
add
add
arpl
imul
add
jb
xor
xor
add
add
add
xor
push
add
dec
add
incl
add
imul
add
push
and
adc
add
add
dec
add
incl
add
popa
add
add
add
add
add
add
add
push
push
add
add
incl
add
add
add
jae
add
add
add
add
push
scas
add
add
add
add
incl
add
outsl
add
add
add
popa
add
add
add
adc
add
add
push
add
sbb
and
or
sub
add
incl
add
add
add
add
add
add
add
add
dec
add
incl
add
add
push
and
sub
add
add
dec
add
incl
add
outsl
add
je
add
add
add
push
push
add
add
dec
add
incl
add
outsl
add
je
add
add
add
push
scas
add
add
add
add
dec
add
incl
add
popa
add
add
add
push
repz
add
add
add
add
incl
add
outsl
add
add
add
add
add
add
incl
add
add
add
orb
sbb
sub
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
or
add
add
add
or
xlat
pop
add
incl
add
outsb
add
add
or
add
add
add
or
fadds
add
incl
add
data16
add
push
add
add
add
pop
add
incl
add
and
popa
add
add
add
add
add
add
push
add
add
pop
add
incl
add
add
add
xor
add
add
add
add
push
add
add
add
pop
add
incl
add
and
ja
popa
add
je
and
je
outsl
add
add
add
outsl
add
add
add
add
add
and
add
or
roll
add
incl
push
add
add
add
pop
add
incl
add
and
arpl
popa
add
daa
add
add
outsl
add
add
jne
jb
je
push
add
add
add
outsb
add
add
add
push
add
add
add
pop
add
incl
add
add
add
xor
add
add
add
inc
add
add
add
push
add
add
add
incl
add
inc
add
add
inc
add
add
add
add
incl
add
and
add
imul
and
outsb
add
ja
push
add
add
add
add
mov
add
add
add
add
imul
outsl
add
in
std
add
add
add
add
and
inc
add
add
in
add
add
add
add
add
add
add
and
inc
add
add
in
add
add
adc
add
add
add
add
and
inc
add
add
add
sub
add
add
add
add
and
adc
add
add
call
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
adc
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
je
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
je
and
dec
add
insl
add
jns
and
dec
add
add
add
outsl
add
imul
add
add
je
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
pop
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
and
inc
add
outsb
add
push
add
imul
and
inc
add
imul
add
data16
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
arpl
add
and
dec
add
je
arpl
push
add
bound
imul
push
add
jb
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jae
imul
add
add
jne
jae
je
jae
and
inc
add
ja
outsb
add
add
ja
outsb
add
add
imul
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
add
push
adc
add
or
inc
and
add
and
inc
adc
adc
or
mov
and
or
and
dec
and
cwtl
adc
and
adcb
adc
add
adc
or
add
adc
dec
adc
and
add
adc
or
inc
adc
addb
and
sbb
inc
sub
test
and
sub
inc
adc
addb
or
sub
push
and
and
mov
addb
inc
add
inc
or
add
add
dec
adc
add
inc
or
inc
or
adc
inc
nop
cwtl
inc
inc
inc
or
adc
adc
add
or
push
adc
dec
and
adcb
sbb
sbb
and
cwtl
adc
or
dec
dec
sbb
dec
inc
or
add
and
or
push
test
and
and
or
inc
mov
inc
sub
inc
and
inc
dec
add
and
add
adc
test
add
or
dec
sbb
or
and
sub
and
push
inc
and
dec
inc
or
and
cwtl
inc
or
cwtl
mov
or
adc
orb
adc
cwtl
orb
or
or
mov
or
sub
mov
or
or
add
test
andb
and
dec
sbbb
subb
adc
adc
nop
or
and
dec
nop
nop
adc
add
inc
add
cwtl
dec
or
sbb
and
adc
sbbb
add
dec
inc
inc
add
and
inc
sbb
add
add
or
and
nop
inc
inc
and
push
and
adc
add
add
dec
inc
addb
and
push
add
push
adc
or
nop
add
add
sub
nop
sub
inc
inc
or
dec
or
mov
andb
inc
and
adc
and
adc
adc
adc
adc
adc
nop
inc
adc
and
mov
dec
adc
adc
add
add
add
sub
add
popf
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
lods
int3
add
xchg
add
scas
add
pushf
int3
add
out
add
incb
idiv
into
add
xchg
add
sahf
add
mov
add
test
jbe
in
add
scas
add
lahf
add
xchg
pushf
add
xchg
add
pushf
int
repnz
out
add
xlat
fldl
jbe
scas
add
popf
lahf
add
mov
scas
add
out
add
lods
add
faddl
cli
int
add
popf
lea
jb
iret
add
iret
add
int
add
scas
add
neg
add
add
xchg
aam
add
int3
add
scas
add
in
add
out
mov
add
int
add
fldl
jp
mov
add
into
add
out
int3
add
mov
faddl
jbe
lea
jbe
scas
add
xchg
lods
add
mov
fldl
imul
int3
add
faddl
jle
scas
add
in
add
pushf
scas
add
filds
sti
in
add
scas
mov
add
lea
testl
filds
jle
lods
add
lods
incl
repz
std
add
out
faddl
jle
mov
add
mov
add
mov
decb
faddl
jnp
popl
repz
add
pushf
int
jnp
incl
ja
incl
repnz
lahf
add
xchg
mov
jle
filds
idivl
add
popl
jnp
int3
add
scas
add
into
add
mov
in
in
add
popl
ja
into
add
mov
add
pushf
add
sahf
add
ljmp
add
pushf
add
movsb
mov
add
scas
add
cmpsb
in
add
mov
lods
add
fimuls
mul
pushf
add
lea
test
into
add
mov
add
mov
add
fldl
jb
into
add
pushf
add
scas
add
in
add
in
add
lahf
mov
add
lahf
add
mov
add
mov
add
sahf
add
mov
add
mov
add
scas
add
mov
add
test
jb
mov
jae
pushf
add
incb
ja
mov
jae
mov
jp
scas
add
mov
fldl
jp
int3
add
int
imull
into
add
in
add
ficomps
jle
cld
add
cmpsb
fiadds
repz
add
scas
add
faddl
jbe
in
add
faddl
cli
scas
mov
add
movsb
incl
jp
incl
jle
scas
add
mov
std
add
mov
add
mov
into
add
faddl
repz
add
lahf
add
out
filds
repnz
fiadds
jp
filds
divb
lods
add
mov
add
xchg
lahf
add
in
add
int
jnp
int3
add
mov
add
lods
add
mov
add
mov
add
out
add
in
add
out
add
xlat
lea
sti
aam
add
lods
add
int
add
in
add
into
mov
add
into
add
xchg
mov
add
lods
add
incl
ja
in
add
std
lea
mov
lods
add
aam
add
cmpsl
mov
add
mov
add
into
add
mov
add
out
add
scas
faddl
repz
add
pushf
add
cld
lahf
add
in
add
mov
jb
lahf
add
scas
add
scas
add
out
add
lahf
add
out
add
aam
add
mov
add
in
add
cmpsl
scas
add
mov
add
negb
add
popf
add
lods
add
mov
add
xchg
sahf
add
in
add
faddl
inc
fstps
inc
les
lret
fnsave
mov
jmp
insl
xchg
popa
sbb
das
mov
lahf
mov
push
fsubr
aam
cwtl
cmpsb
std
sahf
mov
xchg
sbb
pop
mulps
cmpsl
cli
cmp
push
cmp
cmp
rcl
andb
jnp
add
pop
jmp
testl
push
iret
test
pop
sub
inc
jne
pop
rcrl
mov
xchg
add
adc
leave
jecxz
aam
aam
testl
mov
in
mov
arpl
push
and
sub
jg
push
pop
xor
adc
adc
sbb
push
xchg
fsubl
lret
sbb
cs
mov
inc
mov
scas
repnz
mov
or
pop
pop
push
add
adc
pop
cmp
fdivs
cli
cld
adc
mov
mov
mov
imul
jbe
movsb
int
pop
mov
pop
jo
xor
xor
cmpsb
pop
sbb
jb
jbe
and
pop
xor
loop
in
dec
pop
cld
arpl
push
lock
div
inc
mov
sbb
mov
movsl
inc
xchg
xor
or
xor
mov
mov
xchg
sub
inc
push
ljmp
mov
stc
jbe
pop
jb
pop
and
jno
lds
and
pop
fiadds
es
xor
daa
rorl
mov
jno
ja
xchg
rcll
hlt
loopne
cmp
test
movsl
fidivl
jbe
adc
or
mov
lea
pop
jo
js
test
je
xor
xor
inc
lock
dec
loop
rcrl
xor
cmp
jmp
lret
adc
mov
lock
insl
or
cmc
adc
push
or
mov
xchg
push
leave
ds
scas
adc
out
test
jns
or
test
adc
cmc
inc
inc
gs
mov
cwtl
inc
mov
pop
ja
mov
jl
inc
in
stos
adc
stos
pop
pop
daa
aad
fisubrs
add
fnstenv
or
xor
add
call
push
jnp
add
add
push
iret
sub
or
idiv
cmp
fstpl
andb
push
jnp
scas
mov
or
mov
xchg
fwait
enter
jl
call
push
mov
xor
push
sahf
fisubrs
xchg
and
dec
in
jnp
pop
imul
scas
jns
test
pushf
aam
pop
push
push
adc
lds
les
jbe
outsb
inc
shlb
cltd
xchg
fs
xchg
insl
insl
movsl
loop
or
jmp
pop
mov
call
test
add
add
lret
les
jbe
jecxz
insl
add
adc
leave
push
or
xlat
add
fs
test
fisttpl
inc
cmpsl
adc
cmp
mov
mov
push
cmp
lcall
neg
mov
in
out
dec
and
xlat
pusha
mov
fdivl
or
mov
std
int
lahf
fs
mul
pop
mov
mov
jge
xchg
dec
cmp
xchg
xor
and
or
clc
mov
fbld
or
pop
stos
mov
push
jg
dec
or
add
mov
pushf
add
lods
pushf
add
cwtl
pushf
add
mov
pushf
add
pushf
add
out
add
hlt
pushf
add
add
add
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
gs
jae
inc
inc
